% Calculate inertial parameters regressor of coriolis matrix for
% S4RRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(4*4)x(4*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:23
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S4RRRR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'S4RRRR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'S4RRRR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S4RRRR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:23:21
% EndTime: 2019-12-31 17:23:24
% DurationCPUTime: 1.66s
% Computational Cost: add. (2735->173), mult. (5551->227), div. (0->0), fcn. (5209->6), ass. (0->144)
t196 = qJD(3) + qJD(4);
t158 = cos(qJ(2));
t224 = t158 * pkin(1);
t147 = -pkin(2) - t224;
t247 = pkin(2) / 0.2e1 - t147 / 0.2e1;
t157 = cos(qJ(3));
t231 = -pkin(7) - pkin(6);
t139 = t231 * t157;
t154 = sin(qJ(4));
t155 = sin(qJ(3));
t228 = cos(qJ(4));
t191 = t228 * t155;
t178 = -t154 * t139 - t231 * t191;
t246 = t196 * t178;
t156 = sin(qJ(2));
t227 = pkin(1) * t156;
t146 = pkin(6) + t227;
t223 = pkin(7) + t146;
t121 = t223 * t157;
t184 = t223 * t155;
t179 = t154 * t121 + t228 * t184;
t245 = t196 * t179;
t81 = t228 * t121 - t154 * t184;
t244 = t196 * t81;
t207 = t154 * t155;
t91 = -t228 * t139 + t231 * t207;
t243 = t196 * t91;
t241 = -t179 / 0.2e1;
t197 = qJD(1) + qJD(2);
t206 = t154 * t157;
t128 = t191 + t206;
t190 = t228 * t157;
t165 = t190 - t207;
t65 = -t128 ^ 2 + t165 ^ 2;
t240 = t197 * t65;
t152 = t155 ^ 2;
t153 = t157 ^ 2;
t143 = t153 - t152;
t239 = t197 * t143;
t213 = t165 * t128;
t238 = t197 * t213;
t192 = -t224 / 0.2e1;
t235 = t192 - t247;
t232 = -t91 / 0.2e1;
t4 = (t232 + t91 / 0.2e1) * t128 - (t179 / 0.2e1 + t241) * t165;
t230 = t4 * qJD(3);
t226 = pkin(3) * t154;
t225 = pkin(3) * t155;
t218 = qJD(3) * pkin(3);
t222 = (-t128 * t154 - t165 * t228) * t218;
t221 = pkin(1) * qJD(1);
t220 = pkin(1) * qJD(2);
t219 = pkin(2) * qJD(2);
t102 = t128 * t224;
t103 = t165 * t224;
t28 = t102 * t128 + t103 * t165;
t217 = qJD(1) * t28;
t115 = t165 * t225;
t148 = -t157 * pkin(3) - pkin(2);
t137 = t148 - t224;
t211 = t137 * t128;
t57 = -t115 + t211;
t216 = qJD(1) * t57;
t116 = t128 * t225;
t212 = t137 * t165;
t58 = t116 + t212;
t215 = qJD(1) * t58;
t11 = t137 * t225;
t214 = t11 * qJD(1);
t210 = t148 * t165;
t209 = t148 * t128;
t15 = t102 * t179 + t103 * t81 + t137 * t227;
t208 = t15 * qJD(1);
t180 = (t152 + t153) * t158;
t76 = (t146 * t180 + t147 * t156) * pkin(1);
t205 = t76 * qJD(1);
t204 = qJD(1) * t137;
t203 = qJD(1) * t147;
t202 = qJD(2) * t148;
t201 = qJD(4) * t137;
t200 = qJD(4) * t148;
t120 = pkin(1) * t180;
t199 = t120 * qJD(1);
t198 = t155 * qJD(3);
t151 = t157 * qJD(3);
t195 = t156 * t220;
t194 = t156 * t221;
t189 = t165 * t204;
t188 = t128 * t204;
t187 = t155 * t203;
t186 = t157 * t203;
t185 = t148 / 0.2e1 + t137 / 0.2e1;
t183 = t228 * qJD(3);
t182 = t228 * qJD(4);
t181 = pkin(1) * t197;
t85 = t196 * t128;
t177 = t165 * t194;
t176 = t128 * t194;
t175 = t155 * t194;
t174 = t156 * t181;
t173 = qJD(2) * t4;
t172 = qJD(1) * t4;
t16 = t148 * t225;
t159 = -t179 * t232 + t241 * t91;
t162 = t103 * t154 / 0.2e1 - t102 * t228 / 0.2e1;
t5 = (-t185 * t155 + t162) * pkin(3) + t159;
t171 = -t5 * qJD(1) + t16 * qJD(2);
t161 = (-t206 / 0.2e1 - t191 / 0.2e1) * t224;
t29 = -t185 * t128 + t161;
t22 = t115 + t29;
t73 = -t115 + t209;
t170 = qJD(1) * t22 - qJD(2) * t73;
t160 = (-t190 / 0.2e1 + t207 / 0.2e1) * t224;
t30 = -t165 * t185 + t160;
t23 = -t116 + t30;
t74 = t116 + t210;
t169 = qJD(1) * t23 - qJD(2) * t74;
t168 = t192 + t247;
t96 = t168 * t155;
t167 = qJD(1) * t96 + t155 * t219;
t97 = t168 * t157;
t166 = qJD(1) * t97 + t157 * t219;
t164 = qJD(1) * t30 - t165 * t202;
t163 = qJD(1) * t29 - t128 * t202;
t31 = t210 / 0.2e1 + t212 / 0.2e1 + t160;
t32 = t209 / 0.2e1 + t211 / 0.2e1 + t161;
t144 = t155 * t151;
t142 = t155 * t195;
t138 = t143 * qJD(3);
t119 = t197 * t157 * t155;
t117 = t120 * qJD(2);
t113 = t128 * t195;
t112 = t165 * t195;
t99 = t235 * t157;
t98 = t235 * t155;
t84 = t196 * t165;
t45 = t165 * t85;
t43 = t196 * t213;
t27 = t28 * qJD(2);
t25 = t116 + t31;
t24 = -t115 + t32;
t18 = t196 * t65;
t6 = t162 * pkin(3) - t159 + (t137 + t148) * t225 / 0.2e1;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195, -t158 * t220, 0, 0, t144, t138, 0, -t144, 0, 0, t147 * t198 - t157 * t195, t147 * t151 + t142, t117, t76 * qJD(2), t45, t18, 0, -t43, 0, 0, qJD(3) * t57 + t128 * t201 - t112, qJD(3) * t58 + t165 * t201 + t113, t27, qJD(2) * t15 + qJD(3) * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174, -t158 * t181, 0, 0, t144, t138, 0, -t144, 0, 0, t98 * qJD(3) - t157 * t174, qJD(3) * t99 + t142 + t175, t117 + t199, t205 + (-pkin(2) * t156 + pkin(6) * t180) * t220, t45, t18, 0, -t43, 0, 0, qJD(3) * t24 + qJD(4) * t32 - t112 - t177, qJD(3) * t25 + qJD(4) * t31 + t113 + t176, t27 + t217 + t230, t208 + (t102 * t178 + t103 * t91 + t148 * t227) * qJD(2) + t6 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t239, t151, -t119, -t198, 0, qJD(2) * t98 - t146 * t151 + t187, qJD(2) * t99 + t146 * t198 + t186, 0, 0, t238, t240, t84, -t238, -t85, 0, qJD(2) * t24 + t216 - t244, qJD(2) * t25 + t215 + t245, t173 + t222, t214 + t6 * qJD(2) + (-t154 * t179 - t228 * t81) * t218; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, t240, t84, -t238, -t85, 0, qJD(2) * t32 + t188 - t244, qJD(2) * t31 + t189 + t245, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, t158 * t221, 0, 0, t144, t138, 0, -t144, 0, 0, -qJD(3) * t96 + t157 * t194, -qJD(3) * t97 - t175, -t199, -t205, t45, t18, 0, -t43, 0, 0, -qJD(3) * t22 - qJD(4) * t29 + t177, -qJD(3) * t23 - qJD(4) * t30 - t176, -t217 + t230, -qJD(3) * t5 - t208; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, t138, 0, -t144, 0, 0, -pkin(2) * t198, -pkin(2) * t151, 0, 0, t45, t18, 0, -t43, 0, 0, qJD(3) * t73 + t128 * t200, qJD(3) * t74 + t165 * t200, 0, qJD(3) * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t239, t151, -t119, -t198, 0, -pkin(6) * t151 - t167, pkin(6) * t198 - t166, 0, 0, t238, t240, t84, -t238, -t85, 0, -t170 - t243, -t169 + t246, t172 + t222, (-t154 * t178 - t228 * t91) * t218 + t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, t240, t84, -t238, -t85, 0, -t163 - t243, -t164 + t246, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, -t239, 0, t119, 0, 0, qJD(2) * t96 - t187, qJD(2) * t97 - t186, 0, 0, -t238, -t240, 0, t238, 0, 0, qJD(2) * t22 - t216, qJD(2) * t23 - t215, -t173, qJD(2) * t5 - t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, -t239, 0, t119, 0, 0, t167, t166, 0, 0, -t238, -t240, 0, t238, 0, 0, t170, t169, -t172, -t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t226, -pkin(3) * t182, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t196 * t226, (-t183 - t182) * pkin(3), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t238, -t240, 0, t238, 0, 0, qJD(2) * t29 - t188, qJD(2) * t30 - t189, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t238, -t240, 0, t238, 0, 0, t163, t164, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154 * t218, pkin(3) * t183, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
