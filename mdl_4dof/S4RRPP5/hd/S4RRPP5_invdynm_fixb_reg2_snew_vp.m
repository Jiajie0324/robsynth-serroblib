% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S4RRPP5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2]';
%
% Output:
% m_new_reg [(3*5)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:00
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S4RRPP5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'S4RRPP5_invdynm_fixb_reg2_snew_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'S4RRPP5_invdynm_fixb_reg2_snew_vp: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'S4RRPP5_invdynm_fixb_reg2_snew_vp: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S4RRPP5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'S4RRPP5_invdynm_fixb_reg2_snew_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:00:42
% EndTime: 2019-12-31 17:00:45
% DurationCPUTime: 3.10s
% Computational Cost: add. (3932->362), mult. (9004->322), div. (0->0), fcn. (3998->4), ass. (0->213)
t552 = qJD(2) ^ 2;
t548 = sin(qJ(2));
t544 = t548 ^ 2;
t553 = qJD(1) ^ 2;
t624 = t544 * t553;
t521 = -t552 - t624;
t550 = cos(qJ(2));
t524 = t550 * t553 * t548;
t515 = qJDD(2) - t524;
t608 = t550 * t515;
t473 = t548 * t521 + t608;
t597 = qJD(1) * qJD(2);
t532 = t550 * t597;
t594 = t548 * qJDD(1);
t502 = 0.2e1 * t532 + t594;
t549 = sin(qJ(1));
t551 = cos(qJ(1));
t436 = pkin(4) * (t551 * t473 - t549 * t502);
t638 = pkin(4) * (t549 * t473 + t551 * t502);
t633 = t550 * g(3);
t572 = -qJDD(2) * pkin(2) - t552 * qJ(3) + qJDD(3) + t633;
t517 = t551 * g(1) + t549 * g(2);
t487 = -t553 * pkin(1) + qJDD(1) * pkin(5) - t517;
t626 = qJ(3) * t548;
t577 = -pkin(2) * t550 - t626;
t500 = t577 * qJD(1);
t582 = qJD(1) * t500 + t487;
t573 = t582 * t548;
t430 = t573 + t572;
t514 = qJDD(2) + t524;
t545 = t550 ^ 2;
t535 = t545 * t553;
t523 = -t535 - t552;
t627 = qJ(3) * t523;
t668 = -pkin(2) * t514 + t430 - t627;
t609 = t550 * t514;
t461 = t548 * t523 + t609;
t646 = pkin(1) * t461;
t621 = t548 * t514;
t470 = -t550 * t523 + t621;
t531 = t548 * t597;
t592 = t550 * qJDD(1);
t505 = -0.2e1 * t531 + t592;
t435 = pkin(4) * (t551 * t470 + t549 * t505);
t639 = pkin(4) * (t549 * t470 - t551 * t505);
t636 = pkin(5) * t461;
t667 = qJ(4) * t514;
t603 = pkin(1) * t502 + pkin(5) * t473;
t520 = t552 - t624;
t472 = -t548 * t520 + t609;
t591 = t551 * qJDD(1);
t441 = t549 * t472 - t548 * t591;
t593 = t549 * qJDD(1);
t443 = t551 * t472 + t548 * t593;
t620 = t548 * t515;
t465 = -t550 * t521 + t620;
t664 = pkin(1) * t465;
t635 = pkin(5) * t465;
t663 = pkin(5) * t470;
t610 = t550 * t505;
t622 = t548 * t502;
t451 = -t610 + t622;
t512 = -t535 + t624;
t662 = t549 * t451 + t551 * t512;
t661 = t551 * t451 - t549 * t512;
t522 = t535 - t552;
t471 = -t550 * t522 + t620;
t440 = t549 * t471 + t550 * t591;
t442 = t551 * t471 - t549 * t592;
t504 = -t531 + t592;
t658 = (t504 + t505) * pkin(2);
t657 = (t521 + t535) * pkin(3);
t503 = t532 + t594;
t576 = t503 + t532;
t656 = qJ(3) * t576;
t655 = t548 * (pkin(3) * qJDD(1) + t582);
t488 = t504 * qJ(4);
t599 = qJD(1) * t548;
t513 = pkin(3) * t599 - qJD(2) * qJ(4);
t654 = t488 + ((qJ(3) * qJD(2) + (2 * qJD(4))) * t550 + ((2 * qJD(3)) + t513) * t548) * qJD(1);
t653 = -pkin(2) * t521 + qJ(3) * t515;
t596 = qJD(3) * qJD(2);
t538 = -0.2e1 * t596;
t652 = t538 - t664;
t460 = t548 * t522 + t608;
t650 = -pkin(3) * (t523 + t535) - qJ(4) * t505;
t647 = -t667 + (t503 - t532) * pkin(3);
t567 = t572 + t647;
t595 = qJD(4) * qJD(2);
t562 = t567 - 0.2e1 * t595;
t413 = t573 + t562;
t537 = 0.2e1 * t596;
t477 = -t548 * g(3) + t550 * t487;
t598 = qJD(1) * t550;
t575 = t552 * pkin(2) - qJDD(2) * qJ(3) - t500 * t598 - t477;
t566 = t504 * pkin(3) - qJ(4) * t535 + qJD(2) * t513 + qJDD(4) - t575;
t414 = t537 + t566;
t631 = pkin(2) + qJ(4);
t649 = qJ(3) * t414 - t413 * t631;
t648 = t514 * t631 + t627;
t643 = pkin(3) * t413;
t642 = pkin(3) * t414;
t641 = pkin(3) * t514;
t640 = pkin(3) * t515;
t600 = t544 + t545;
t508 = t600 * qJDD(1);
t511 = t535 + t624;
t637 = pkin(4) * (t549 * t508 + t551 * t511);
t634 = t504 * pkin(2);
t632 = t553 * pkin(5);
t629 = qJ(3) * t505;
t628 = qJ(3) * t511;
t516 = t549 * g(1) - t551 * g(2);
t571 = qJDD(1) * pkin(1) + t516;
t486 = t571 + t632;
t623 = t548 * t486;
t612 = t550 * t486;
t611 = t550 * t502;
t604 = pkin(1) * t505 - t663;
t602 = pkin(1) * t511 + pkin(5) * t508;
t590 = qJD(3) * t599;
t476 = t548 * t487 + t633;
t426 = t548 * t476 + t550 * t477;
t585 = -t549 * t516 - t551 * t517;
t581 = t549 * t524;
t580 = t551 * t524;
t510 = -t549 * t553 + t591;
t579 = -pkin(4) * t510 - t549 * g(3);
t427 = t537 - t575;
t578 = -pkin(2) * t430 + qJ(3) * t427;
t425 = t550 * t476 - t548 * t477;
t448 = t548 * t505 + t611;
t464 = t550 * t520 + t621;
t574 = t551 * t516 - t549 * t517;
t569 = t575 - t653;
t525 = pkin(2) * t531;
t568 = t486 - t525;
t564 = t568 + t634;
t561 = -qJ(4) * t521 + t566;
t560 = pkin(3) * t592 + t566;
t559 = t564 + 0.2e1 * t590;
t558 = t561 + t653;
t536 = 0.2e1 * t595;
t557 = t536 - t430 - t647;
t556 = -t568 - 0.2e1 * t590 - t656;
t555 = t503 * qJ(3) - t525 + t571 + t654;
t554 = -0.2e1 * qJD(4) * t598 - t513 * t599 - t488 + t556 - t634;
t533 = qJ(3) * t592;
t509 = t551 * t553 + t593;
t498 = pkin(2) * t594 - t533;
t493 = t600 * t597;
t485 = -pkin(4) * t509 + t551 * g(3);
t482 = t594 * t631 - t533;
t481 = t549 * qJDD(2) + t551 * t493;
t480 = t550 * t503 - t544 * t597;
t479 = -t551 * qJDD(2) + t549 * t493;
t478 = -t548 * t504 - t545 * t597;
t459 = t576 * t548;
t458 = (t504 - t531) * t550;
t457 = t629 - t641;
t452 = pkin(4) * (t551 * t508 - t549 * t511);
t447 = t551 * t480 - t581;
t446 = t551 * t478 + t581;
t445 = t549 * t480 + t580;
t444 = t549 * t478 - t580;
t439 = t502 * t631 + t640;
t434 = -t612 + t635;
t433 = -t623 - t636;
t429 = t477 + t664;
t428 = t476 - t646;
t423 = t604 + t612;
t422 = -t603 - t623;
t421 = t430 + t628;
t420 = pkin(2) * t511 + t427;
t419 = t559 + t656;
t418 = pkin(1) * t486 + pkin(5) * t426;
t417 = t556 - t658;
t416 = (t502 + t576) * qJ(3) + t559;
t415 = t426 + t602;
t412 = t646 - t668;
t411 = t569 + t652;
t410 = t562 + t628 + t655;
t409 = t634 + (pkin(3) * t545 + pkin(5)) * t553 + t555;
t408 = t550 * t427 + t548 * t430;
t407 = t548 * t427 - t550 * t430;
t406 = t511 * t631 + t537 + t560;
t405 = -pkin(2) * t622 + t550 * t416 - t635;
t404 = -qJ(3) * t610 - t548 * t417 + t636;
t403 = (t502 + t503) * qJ(3) + t657 + t564 + t654;
t402 = -t548 * t420 + t550 * t421;
t401 = pkin(2) * t611 + t548 * t416 + t603;
t400 = t663 + t550 * t417 + (-pkin(1) - t626) * t505;
t399 = t555 + t632 - t650 + t658;
t398 = -t558 + t652;
t397 = t413 - t646 - t648;
t396 = t550 * t420 + t548 * t421 + t602;
t395 = t548 * t413 + t550 * t414;
t394 = -t550 * t413 + t548 * t414;
t393 = qJ(3) * t409 + t643;
t392 = -t548 * t399 + t550 * t457 - t636;
t391 = t550 * t403 - t548 * t439 - t635;
t390 = t550 * t399 + t548 * t457 + t604;
t389 = t548 * t403 + t550 * t439 + t603;
t388 = -pkin(1) * t407 - t578;
t387 = -t548 * t406 + t550 * t410;
t386 = -pkin(5) * t407 + (-pkin(2) * t548 + qJ(3) * t550) * t419;
t385 = t550 * t406 + t548 * t410 + t602;
t384 = t409 * t631 + t642;
t383 = pkin(5) * t408 + (pkin(1) - t577) * t419;
t382 = -pkin(1) * t394 - t649;
t381 = -pkin(5) * t394 - t548 * t384 + t550 * t393;
t380 = pkin(1) * t409 + pkin(5) * t395 + t550 * t384 + t548 * t393;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t510, 0, -t509, 0, t579, -t485, -t574, -pkin(4) * t574, t447, -t661, t443, t446, -t442, t481, -t549 * t428 + t551 * t433 + t639, -t549 * t429 + t551 * t434 + t638, t551 * t425 - t637, -pkin(4) * (t549 * t426 + t551 * t486) - (t549 * pkin(1) - t551 * pkin(5)) * t425, t481, -t443, t442, t447, -t661, t446, t551 * t402 - t549 * t498 - t637, t551 * t404 - t549 * t412 - t639, t551 * t405 - t549 * t411 - t638, t551 * t386 - t549 * t388 - pkin(4) * (t549 * t408 + t551 * t419), t481, t442, t443, t446, t661, t447, t551 * t387 - t549 * t482 - t637, t551 * t391 - t549 * t398 - t638, t551 * t392 - t549 * t397 + t639, t551 * t381 - t549 * t382 - pkin(4) * (t549 * t395 + t551 * t409); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t509, 0, t510, 0, t485, t579, t585, pkin(4) * t585, t445, -t662, t441, t444, -t440, t479, t551 * t428 + t549 * t433 - t435, t551 * t429 + t549 * t434 - t436, t549 * t425 + t452, pkin(4) * (t551 * t426 - t549 * t486) - (-t551 * pkin(1) - t549 * pkin(5)) * t425, t479, -t441, t440, t445, -t662, t444, t549 * t402 + t551 * t498 + t452, t549 * t404 + t551 * t412 + t435, t549 * t405 + t551 * t411 + t436, t549 * t386 + t551 * t388 + pkin(4) * (t551 * t408 - t549 * t419), t479, t440, t441, t444, t662, t445, t549 * t387 + t551 * t482 + t452, t549 * t391 + t551 * t398 + t436, t549 * t392 + t551 * t397 - t435, t549 * t381 + t551 * t382 + pkin(4) * (t551 * t395 - t549 * t409); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t516, t517, 0, 0, t459, t448, t464, t458, t460, 0, t423, t422, t415, t418, 0, -t464, -t460, t459, t448, t458, t396, t400, t401, t383, 0, -t460, t464, t458, -t448, t459, t385, t389, t390, t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t553, 0, 0, -g(3), -t516, 0, t480, -t451, t472, t478, -t471, t493, t433, t434, t425, pkin(5) * t425, t493, -t472, t471, t480, -t451, t478, t402, t404, t405, t386, t493, t471, t472, t478, t451, t480, t387, t391, t392, t381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t553, 0, qJDD(1), 0, g(3), 0, -t517, 0, t524, -t512, -t594, -t524, -t592, -qJDD(2), t428, t429, 0, pkin(1) * t425, -qJDD(2), t594, t592, t524, -t512, -t524, t498, t412, t411, t388, -qJDD(2), t592, -t594, -t524, t512, t524, t482, t398, t397, t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t516, t517, 0, 0, t459, t448, t464, t458, t460, 0, t423, t422, t415, t418, 0, -t464, -t460, t459, t448, t458, t396, t400, t401, t383, 0, -t460, t464, t458, -t448, t459, t385, t389, t390, t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, t505, t514, -t532, t522, t532, 0, -t486, t476, 0, t532, -t514, -t522, t503, t505, -t532, t421, -t629, t416, qJ(3) * t419, t532, -t522, t514, -t532, -t505, t503, t410, t403, t457, t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t531, t502, t520, t504, t515, -t531, t486, 0, t477, 0, -t531, -t520, -t515, t531, t502, t504, t420, t417, pkin(2) * t502, pkin(2) * t419, -t531, -t515, t520, t504, -t502, t531, t406, t439, t399, t384; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524, t512, t594, t524, t592, qJDD(2), -t476, -t477, 0, 0, qJDD(2), -t594, -t592, -t524, t512, t524, -t498, t668, t537 - t569, t578, qJDD(2), -t592, t594, t524, -t512, -t524, -t482, t537 + t558, t557 + t648, t649; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t594, -t592, -t524, t512, t524, 0, t430, t427, 0, qJDD(2), -t592, t594, t524, -t512, -t524, -qJ(4) * t594, t537 + t561, t557 + t667, -qJ(4) * t413; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t532, t514, t522, -t503, -t505, t532, -t430, 0, -t419, 0, -t532, t522, -t514, t532, t505, -t503, t536 - t567 - t655, t554 - t657, t641, -t643; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t531, t520, t515, -t531, -t502, -t504, -t427, t419, 0, 0, t531, t515, -t520, -t504, t502, -t531, -qJ(4) * t511 + t538 - t560, -qJ(4) * t502 - t640, t554 + t650, -qJ(4) * t409 - t642; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t592, t594, t524, -t512, -t524, 0, t414, -t413, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t531, t515, -t520, -t504, t502, -t531, -t414, 0, -t409, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t532, -t522, t514, -t532, -t505, t503, t413, t409, 0, 0;];
m_new_reg = t1;
