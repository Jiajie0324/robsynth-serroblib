% Calculate vector of centrifugal and Coriolis load on the joints for
% S4RRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d3]';
% m_mdh [5x1]
%   mass of all robot links (including the base)
% rSges [5x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [5x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [4x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:19
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S4RRRP6_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(6,1),zeros(5,1),zeros(5,3),zeros(5,6)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'S4RRRP6_coriolisvecJ_fixb_slag_vp1: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'S4RRRP6_coriolisvecJ_fixb_slag_vp1: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S4RRRP6_coriolisvecJ_fixb_slag_vp1: pkin has to be [6x1] (double)');
assert(isreal(m) && all(size(m) == [5 1]), ...
  'S4RRRP6_coriolisvecJ_fixb_slag_vp1: m has to be [5x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [5,3]), ...
  'S4RRRP6_coriolisvecJ_fixb_slag_vp1: rSges has to be [5x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [5 6]), ...
  'S4RRRP6_coriolisvecJ_fixb_slag_vp1: Icges has to be [5x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:18:10
% EndTime: 2019-12-31 17:19:00
% DurationCPUTime: 43.16s
% Computational Cost: add. (13195->867), mult. (34236->1163), div. (0->0), fcn. (32655->6), ass. (0->418)
t782 = -Icges(4,4) - Icges(5,4);
t741 = Icges(4,1) + Icges(5,1);
t779 = Icges(4,5) + Icges(5,5);
t755 = -Icges(4,2) - Icges(5,2);
t754 = Icges(4,6) + Icges(5,6);
t366 = cos(qJ(3));
t781 = t782 * t366;
t363 = sin(qJ(3));
t780 = t782 * t363;
t778 = Icges(4,3) + Icges(5,3);
t777 = -t754 * t363 + t779 * t366;
t776 = t755 * t363 - t781;
t775 = t741 * t366 + t780;
t368 = cos(qJ(1));
t364 = sin(qJ(2));
t534 = qJD(3) * t364;
t365 = sin(qJ(1));
t537 = qJD(2) * t365;
t302 = t368 * t534 + t537;
t535 = qJD(2) * t368;
t303 = -t365 * t534 + t535;
t367 = cos(qJ(2));
t533 = qJD(3) * t367;
t345 = qJD(1) - t533;
t578 = t368 * t363;
t276 = t365 * t366 - t367 * t578;
t580 = t367 * t368;
t587 = t363 * t365;
t277 = t366 * t580 + t587;
t584 = t364 * t368;
t737 = t775 * t364 - t779 * t367;
t739 = t777 * t364 - t778 * t367;
t748 = t776 * t364 - t754 * t367;
t695 = t276 * t748 + t277 * t737 + t584 * t739;
t136 = Icges(5,5) * t277 + Icges(5,6) * t276 + Icges(5,3) * t584;
t139 = Icges(4,5) * t277 + Icges(4,6) * t276 + Icges(4,3) * t584;
t740 = t136 + t139;
t262 = Icges(5,4) * t276;
t148 = Icges(5,1) * t277 + Icges(5,5) * t584 + t262;
t265 = Icges(4,4) * t276;
t151 = Icges(4,1) * t277 + Icges(4,5) * t584 + t265;
t752 = t148 + t151;
t609 = Icges(5,4) * t277;
t142 = Icges(5,2) * t276 + Icges(5,6) * t584 + t609;
t612 = Icges(4,4) * t277;
t145 = Icges(4,2) * t276 + Icges(4,6) * t584 + t612;
t753 = t142 + t145;
t719 = t753 * t276 + t752 * t277 + t740 * t584;
t582 = t366 * t368;
t583 = t365 * t367;
t274 = t363 * t583 + t582;
t260 = Icges(5,4) * t274;
t275 = t366 * t583 - t578;
t585 = t364 * t365;
t147 = -Icges(5,1) * t275 - Icges(5,5) * t585 + t260;
t263 = Icges(4,4) * t274;
t150 = -Icges(4,1) * t275 - Icges(4,5) * t585 + t263;
t714 = t147 + t150;
t261 = Icges(5,4) * t275;
t140 = -Icges(5,2) * t274 + Icges(5,6) * t585 + t261;
t264 = Icges(4,4) * t275;
t143 = -Icges(4,2) * t274 + Icges(4,6) * t585 + t264;
t715 = t140 + t143;
t134 = Icges(5,5) * t275 - Icges(5,6) * t274 + Icges(5,3) * t585;
t137 = Icges(4,5) * t275 - Icges(4,6) * t274 + Icges(4,3) * t585;
t716 = t134 + t137;
t720 = t276 * t715 - t277 * t714 + t584 * t716;
t698 = t302 * t719 - t720 * t303 + t695 * t345;
t696 = -t274 * t748 + t275 * t737 + t585 * t739;
t721 = -t753 * t274 + t752 * t275 + t740 * t585;
t722 = -t274 * t715 - t275 * t714 + t585 * t716;
t699 = t302 * t721 - t722 * t303 + t696 * t345;
t766 = t778 * t364 + t777 * t367;
t683 = t754 * t364 + t776 * t367;
t682 = t779 * t364 + t775 * t367;
t765 = (-t779 * t363 - t754 * t366) * t364;
t764 = (t755 * t366 + t780) * t364;
t763 = (-t741 * t363 + t781) * t364;
t429 = t366 * t345;
t540 = qJD(1) * t367;
t482 = -qJD(3) + t540;
t512 = t364 * t535;
t662 = t365 * t482 + t512;
t127 = t363 * t662 + t368 * t429;
t428 = t345 * t363;
t128 = -t366 * t662 + t368 * t428;
t511 = t367 * t535;
t541 = qJD(1) * t365;
t516 = t364 * t541;
t406 = t511 - t516;
t67 = Icges(5,5) * t128 + Icges(5,6) * t127 + Icges(5,3) * t406;
t69 = Icges(4,5) * t128 + Icges(4,6) * t127 + Icges(4,3) * t406;
t762 = t67 + t69;
t513 = t364 * t537;
t129 = t365 * t429 + (-t368 * t482 + t513) * t363;
t538 = qJD(2) * t364;
t130 = t482 * t582 + (-t366 * t538 + t428) * t365;
t536 = qJD(2) * t367;
t539 = qJD(1) * t368;
t407 = t364 * t539 + t365 * t536;
t68 = Icges(5,5) * t130 + Icges(5,6) * t129 + Icges(5,3) * t407;
t70 = Icges(4,5) * t130 + Icges(4,6) * t129 + Icges(4,3) * t407;
t761 = t68 + t70;
t71 = Icges(5,4) * t128 + Icges(5,2) * t127 + Icges(5,6) * t406;
t73 = Icges(4,4) * t128 + Icges(4,2) * t127 + Icges(4,6) * t406;
t760 = t71 + t73;
t72 = Icges(5,4) * t130 + Icges(5,2) * t129 + Icges(5,6) * t407;
t74 = Icges(4,4) * t130 + Icges(4,2) * t129 + Icges(4,6) * t407;
t759 = t72 + t74;
t75 = Icges(5,1) * t128 + Icges(5,4) * t127 + Icges(5,5) * t406;
t77 = Icges(4,1) * t128 + Icges(4,4) * t127 + Icges(4,5) * t406;
t758 = t75 + t77;
t76 = Icges(5,1) * t130 + Icges(5,4) * t129 + Icges(5,5) * t407;
t78 = Icges(4,1) * t130 + Icges(4,4) * t129 + Icges(4,5) * t407;
t757 = t76 + t78;
t751 = qJD(2) * t766 + qJD(3) * t765;
t750 = qJD(2) * t683 + qJD(3) * t764;
t749 = qJD(2) * t682 + qJD(3) * t763;
t747 = -t363 * t748 + t366 * t737;
t746 = (t755 * t277 + t262 + t265 + t752) * t302 - (t755 * t275 - t260 - t263 - t714) * t303 + (t737 + t764) * t345;
t437 = -t145 * t363 + t151 * t366;
t438 = -t143 * t363 - t150 * t366;
t439 = -t142 * t363 + t148 * t366;
t440 = -t140 * t363 - t147 * t366;
t745 = (-t739 * t368 - t437 - t439) * t302 - (-t739 * t365 - t438 - t440) * t303 + (-t747 + t766) * t345;
t706 = t715 * t127 - t714 * t128 + t759 * t276 + t757 * t277 + t716 * t406 + t761 * t584;
t705 = t753 * t127 + t752 * t128 + t760 * t276 + t758 * t277 + t740 * t406 + t762 * t584;
t703 = t715 * t129 - t714 * t130 - t759 * t274 + t757 * t275 + t716 * t407 + t761 * t585;
t702 = t753 * t129 + t752 * t130 - t760 * t274 + t758 * t275 + t740 * t407 + t762 * t585;
t724 = t748 * t127 + t737 * t128 + t750 * t276 + t749 * t277 + t739 * t406 + t751 * t584;
t723 = t748 * t129 + t737 * t130 - t750 * t274 + t749 * t275 + t739 * t407 + t751 * t585;
t744 = (t747 * qJD(2) - t751) * t367 + (t749 * t366 - t750 * t363 + (-t737 * t363 - t748 * t366) * qJD(3) + t739 * qJD(2)) * t364;
t55 = -t134 * t367 + t364 * t440;
t57 = -t137 * t367 + t364 * t438;
t743 = t55 + t57;
t56 = -t136 * t367 + t364 * t439;
t58 = -t139 * t367 + t364 * t437;
t742 = t56 + t58;
t694 = t747 * t364 - t739 * t367;
t350 = pkin(3) * t366 + pkin(2);
t581 = t367 * t350;
t736 = -rSges(5,1) * t275 + rSges(5,2) * t274 - t365 * t581;
t530 = qJD(4) * t368;
t336 = t364 * t530;
t526 = pkin(3) * t578;
t642 = t367 * pkin(2);
t362 = -qJ(4) - pkin(6);
t640 = pkin(6) + t362;
t691 = t364 * t640;
t572 = t526 + (t642 + t691) * t365 - rSges(5,3) * t585 + t736;
t735 = t345 * t572 + t336;
t734 = -t765 * t345 + (-t274 * t779 - t754 * t275) * t303 + (-t276 * t779 + t754 * t277) * t302;
t725 = rSges(5,1) + pkin(3);
t717 = t365 * t368;
t641 = pkin(2) - t350;
t221 = -t367 * t641 - t691;
t462 = rSges(5,1) * t366 - rSges(5,2) * t363;
t632 = rSges(5,3) * t364;
t713 = t367 * t462 + t221 + t632;
t503 = t640 * t367;
t712 = rSges(5,3) * t367 - t503 + (-t462 + t641) * t364;
t325 = pkin(2) * t364 - pkin(6) * t367;
t348 = pkin(2) * t580;
t298 = pkin(6) * t584 + t348;
t328 = t368 * pkin(1) + t365 * pkin(5);
t549 = t298 + t328;
t430 = qJD(1) * t549 - t325 * t537;
t532 = qJD(4) * t364;
t508 = t365 * t532;
t688 = t277 * rSges(5,1) + t276 * rSges(5,2) + rSges(5,3) * t584 + pkin(3) * t587 + t350 * t580;
t571 = -t362 * t584 - t298 + t688;
t43 = t302 * t712 + t345 * t571 + t430 + t508;
t487 = t43 * t712;
t531 = qJD(4) * t367;
t327 = pkin(6) * t364 + t642;
t296 = t327 * t365;
t552 = t296 * t537 + t298 * t535;
t41 = -t302 * t572 + t303 * t571 - t531 + t552;
t489 = t41 * t572;
t711 = -t487 + t489;
t466 = -rSges(4,1) * t275 + rSges(4,2) * t274;
t155 = rSges(4,3) * t585 - t466;
t465 = rSges(4,1) * t366 - rSges(4,2) * t363;
t246 = -rSges(4,3) * t367 + t364 * t465;
t710 = -t155 * t345 - t246 * t303;
t709 = 0.2e1 * qJD(2);
t527 = qJD(2) * qJD(3);
t500 = t367 * t527;
t222 = qJD(1) * t302 + t365 * t500;
t223 = qJD(1) * t303 + t368 * t500;
t501 = t364 * t527;
t708 = t720 * t222 + t719 * t223 + t705 * t302 - t706 * t303 + t724 * t345 + t695 * t501;
t707 = t722 * t222 + t721 * t223 + t702 * t302 - t703 * t303 + t723 * t345 + t696 * t501;
t334 = pkin(6) * t511;
t408 = -t365 * t540 - t512;
t199 = pkin(2) * t408 - pkin(6) * t516 + t334;
t333 = pkin(2) * t513;
t200 = pkin(6) * t407 + qJD(1) * t348 - t333;
t663 = qJD(1) * t296;
t520 = t200 * t537 + (t199 + t663) * t535;
t464 = -rSges(5,1) * t130 - rSges(5,2) * t129;
t630 = pkin(3) * qJD(3);
t524 = t366 * t630;
t586 = t364 * t350;
t636 = t333 + (qJD(1) * t221 - t524) * t368 + (t532 + pkin(3) * t428 + (-t503 - t586) * qJD(2)) * t365 + rSges(5,3) * t407 - t464;
t525 = t363 * t630;
t668 = t128 * rSges(5,1) + t127 * rSges(5,2) + rSges(5,3) * t511 + qJD(1) * t526 + t362 * t516 + t365 * t524 + t336;
t637 = -t334 + (pkin(6) * t541 + t535 * t641) * t364 + ((-qJD(2) * t362 - t525) * t368 + t641 * t541) * t367 - rSges(5,3) * t516 + t668;
t5 = t637 * t303 + t636 * t302 - t572 * t223 - t571 * t222 + (-t298 * t541 + t532) * qJD(2) + t520;
t704 = t5 * t571;
t16 = (qJD(2) * t440 - t68) * t367 + (qJD(2) * t134 - t363 * t72 + t366 * t76 + (-t140 * t366 + t147 * t363) * qJD(3)) * t364;
t18 = (qJD(2) * t438 - t70) * t367 + (qJD(2) * t137 - t363 * t74 + t366 * t78 + (-t143 * t366 + t150 * t363) * qJD(3)) * t364;
t701 = t16 + t18;
t17 = (qJD(2) * t439 - t67) * t367 + (qJD(2) * t136 - t363 * t71 + t366 * t75 + (-t142 * t366 - t148 * t363) * qJD(3)) * t364;
t19 = (qJD(2) * t437 - t69) * t367 + (qJD(2) * t139 - t363 * t73 + t366 * t77 + (-t145 * t366 - t151 * t363) * qJD(3)) * t364;
t700 = t17 + t19;
t697 = t742 * t302 - t743 * t303 + t694 * t345;
t159 = t277 * rSges(4,1) + t276 * rSges(4,2) + rSges(4,3) * t584;
t64 = t159 * t345 - t246 * t302 + t430;
t689 = t64 * qJD(1);
t687 = t748 * t365;
t686 = t748 * t368;
t685 = t737 * t365;
t684 = t737 * t368;
t356 = Icges(3,4) * t367;
t446 = -Icges(3,2) * t364 + t356;
t319 = Icges(3,1) * t364 + t356;
t681 = t745 * t364;
t679 = (-t748 + t763) * t345 + (t741 * t274 + t261 + t264 + t715) * t303 + (t741 * t276 - t609 - t612 - t753) * t302;
t678 = t734 * t364;
t677 = t740 * t302 - t716 * t303 + t739 * t345;
t676 = t743 * t365 + t742 * t368;
t675 = t742 * t365 - t743 * t368;
t674 = t720 * t365 + t719 * t368;
t673 = t719 * t365 - t720 * t368;
t672 = t722 * t365 + t721 * t368;
t671 = t721 * t365 - t722 * t368;
t295 = t325 * t365;
t297 = t325 * t368;
t667 = t368 * t199 + t365 * t200 + t295 * t537 + t296 * t539 + t297 * t535;
t664 = t744 * t345 + t694 * t501;
t599 = Icges(3,3) * t368;
t231 = Icges(3,5) * t583 - Icges(3,6) * t585 - t599;
t340 = Icges(3,4) * t585;
t606 = Icges(3,5) * t368;
t243 = Icges(3,1) * t583 - t340 - t606;
t602 = Icges(3,6) * t368;
t237 = Icges(3,4) * t583 - Icges(3,2) * t585 - t602;
t593 = t237 * t364;
t433 = -t243 * t367 + t593;
t95 = -t368 * t231 - t365 * t433;
t316 = Icges(3,5) * t367 - Icges(3,6) * t364;
t315 = Icges(3,5) * t364 + Icges(3,6) * t367;
t409 = qJD(2) * t315;
t613 = Icges(3,4) * t364;
t320 = Icges(3,1) * t367 - t613;
t244 = Icges(3,5) * t365 + t320 * t368;
t238 = Icges(3,6) * t365 + t368 * t446;
t592 = t238 * t364;
t432 = -t244 * t367 + t592;
t661 = -t368 * t409 + (-t316 * t365 + t432 + t599) * qJD(1);
t232 = Icges(3,3) * t365 + t316 * t368;
t660 = -t365 * t409 + (t232 + t433) * qJD(1);
t317 = Icges(3,2) * t367 + t613;
t431 = t317 * t364 - t319 * t367;
t659 = qJD(1) * t431 + t316 * qJD(2);
t658 = t365 * (-t317 * t368 + t244) - t368 * (-Icges(3,2) * t583 + t243 - t340);
t657 = -m(5) / 0.2e1;
t656 = m(5) / 0.2e1;
t655 = t222 / 0.2e1;
t654 = t223 / 0.2e1;
t653 = -t302 / 0.2e1;
t652 = t302 / 0.2e1;
t651 = -t303 / 0.2e1;
t650 = t303 / 0.2e1;
t649 = -t345 / 0.2e1;
t648 = t345 / 0.2e1;
t644 = -rSges(4,3) - pkin(6);
t643 = pkin(3) * t363;
t635 = rSges(3,1) * t367;
t634 = rSges(4,3) * t364;
t629 = t16 * t303;
t628 = t17 * t302;
t627 = t18 * t303;
t626 = t19 * t302;
t357 = t365 * rSges(3,3);
t619 = t55 * t222;
t618 = t56 * t223;
t617 = t57 * t222;
t616 = t58 * t223;
t615 = -rSges(5,3) + t362;
t544 = rSges(3,2) * t585 + t368 * rSges(3,3);
t247 = rSges(3,1) * t583 - t544;
t360 = t368 * pkin(5);
t326 = pkin(1) * t365 - t360;
t321 = rSges(3,1) * t364 + rSges(3,2) * t367;
t514 = t321 * t535;
t119 = -t514 + (-t247 - t326) * qJD(1);
t596 = t119 * t365;
t595 = t119 * t368;
t515 = t321 * t537;
t250 = rSges(3,1) * t580 - rSges(3,2) * t584 + t357;
t554 = t250 + t328;
t120 = qJD(1) * t554 - t515;
t294 = t321 * t368;
t594 = t120 * t294;
t590 = t315 * t365;
t589 = t315 * t368;
t588 = t362 * t364;
t291 = (-rSges(5,1) * t363 - rSges(5,2) * t366) * t364;
t577 = qJD(2) * t713 + qJD(3) * t291 - t364 * t525 - t531;
t249 = t367 * t465 + t634;
t292 = (-rSges(4,1) * t363 - rSges(4,2) * t366) * t364;
t173 = qJD(2) * t249 + qJD(3) * t292;
t309 = qJD(2) * t327;
t570 = -t173 - t309;
t352 = pkin(5) * t539;
t299 = qJD(1) * (-pkin(1) * t541 + t352);
t569 = qJD(1) * t199 + t299;
t568 = t712 * t365;
t567 = t712 * t368;
t566 = -rSges(5,2) * t275 - t274 * t725;
t565 = -rSges(5,2) * t277 + t276 * t725;
t310 = t328 * qJD(1);
t564 = -t200 - t310;
t563 = -t365 * t231 - t243 * t580;
t562 = t365 * t232 + t244 * t580;
t555 = -t246 - t325;
t550 = t365 * t296 + t368 * t298;
t547 = -t317 + t320;
t546 = t319 + t446;
t545 = rSges(3,2) * t516 + rSges(3,3) * t539;
t542 = qJD(1) * t316;
t131 = -t365 * t431 - t589;
t529 = t131 * qJD(1);
t528 = qJD(1) * qJD(2);
t522 = t128 * rSges(4,1) + t127 * rSges(4,2) + rSges(4,3) * t511;
t521 = -t309 - t577;
t518 = -t325 + t712;
t517 = t325 * t539;
t509 = t325 * t535;
t504 = -pkin(1) - t635;
t502 = t365 * t528;
t498 = t539 / 0.2e1;
t497 = t538 / 0.2e1;
t496 = -t537 / 0.2e1;
t495 = t537 / 0.2e1;
t493 = t535 / 0.2e1;
t490 = -pkin(1) - t581;
t397 = (-t296 - t326) * qJD(1) - t509;
t42 = t303 * t712 + t397 + t735;
t488 = t42 * t712;
t217 = t244 * t583;
t485 = t368 * t232 - t217;
t484 = -t231 + t592;
t483 = -t309 + t531;
t474 = t364 * t643 - t291;
t471 = qJD(3) * t497;
t470 = -qJD(1) * t297 - t327 * t537;
t468 = -rSges(3,2) * t364 + t635;
t467 = rSges(4,1) * t130 + rSges(4,2) * t129;
t441 = -t120 * t365 - t595;
t436 = t155 * t368 - t159 * t365;
t125 = t237 * t367 + t243 * t364;
t126 = t238 * t367 + t244 * t364;
t313 = qJD(1) * t326;
t427 = -t313 - t509 - t663;
t293 = t321 * t365;
t416 = qJD(1) * t295 - t327 * t535;
t96 = -t238 * t585 - t485;
t414 = (t365 * t96 - t368 * t95) * qJD(2);
t97 = -t237 * t584 - t563;
t98 = -t238 * t584 + t562;
t413 = (t365 * t98 - t368 * t97) * qJD(2);
t412 = t364 * t644 - pkin(1) - t642;
t411 = qJD(2) * t319;
t410 = qJD(2) * t317;
t111 = (t247 * t365 + t250 * t368) * qJD(2);
t405 = t41 * t636 - t5 * t572;
t399 = t42 * t572 + t43 * t571;
t398 = -t41 * t571 - t488;
t396 = t237 * t368 - t238 * t365;
t385 = (-t364 * t546 + t367 * t547) * qJD(1);
t54 = t155 * t302 + t159 * t303 + t552;
t63 = t397 + t710;
t377 = t54 * t436 + (t365 * t63 - t368 * t64) * t246;
t305 = t446 * qJD(2);
t306 = t320 * qJD(2);
t374 = qJD(1) * t315 - t305 * t364 + t306 * t367 + (-t317 * t367 - t319 * t364) * qJD(2);
t373 = t398 * t365 - t368 * t711;
t372 = -t364 * t658 + t396 * t367;
t307 = t468 * qJD(2);
t301 = t325 * t541;
t278 = t325 * t502;
t216 = t246 * t368;
t214 = t246 * t365;
t198 = rSges(4,1) * t276 - rSges(4,2) * t277;
t196 = -rSges(4,1) * t274 - rSges(4,2) * t275;
t175 = -qJD(2) * t293 + (t368 * t468 + t357) * qJD(1);
t174 = rSges(3,1) * t408 - rSges(3,2) * t511 + t545;
t132 = -t368 * t431 + t590;
t118 = t132 * qJD(1);
t90 = -t307 * t535 + (-t175 - t310 + t515) * qJD(1);
t89 = -t307 * t537 + t299 + (t174 - t514) * qJD(1);
t82 = rSges(4,3) * t407 + t467;
t80 = -rSges(4,3) * t516 + t522;
t62 = t374 * t365 - t368 * t659;
t61 = t365 * t659 + t374 * t368;
t60 = -qJD(2) * t432 + (-t368 * t410 + (-t365 * t446 + t602) * qJD(1)) * t367 + (-t368 * t411 + (-t320 * t365 + t606) * qJD(1)) * t364;
t59 = -qJD(2) * t433 + (qJD(1) * t238 - t365 * t410) * t367 + (qJD(1) * t244 - t365 * t411) * t364;
t45 = t118 + t413;
t44 = t414 + t529;
t28 = -t173 * t303 + t222 * t246 - t345 * t82 + t278 + (-t155 * t534 - t309 * t368) * qJD(2) + t564 * qJD(1);
t27 = -t173 * t302 - t223 * t246 + t345 * t80 + (t159 * t534 - t309 * t365 - t517) * qJD(2) + t569;
t20 = t155 * t223 - t159 * t222 - t298 * t502 + t302 * t82 + t303 * t80 + t520;
t15 = t278 - t636 * t345 - t577 * t303 - t712 * t222 + (-t508 + t564) * qJD(1) + (t368 * t483 + t534 * t572) * qJD(2);
t14 = qJD(1) * t336 + t637 * t345 - t577 * t302 + t712 * t223 + (t365 * t483 + t534 * t571 - t517) * qJD(2) + t569;
t1 = [(t716 * t367 + (t363 * t715 + t366 * t714) * t364 + t743) * t302 * t649 + (t118 + ((t96 - t217 + (t232 + t593) * t368 + t563) * t368 + t562 * t365) * qJD(2)) * t493 + (-(-qJD(1) * t247 - t119 - t313 - t514) * t120 + t90 * (t365 * t504 + t360 + t544) + t89 * t554 + t120 * (t352 + t545) + (t321 * t596 - t594) * qJD(2) + ((-pkin(1) - t468) * t595 + (t119 * (-rSges(3,3) - pkin(5)) + t120 * t504) * t365) * qJD(1)) * m(3) + (t60 + t61) * t495 - (t59 + t62 + t45) * t535 / 0.2e1 + t724 * t652 + (t723 + t698) * t651 + (t44 - t529 + ((t368 * t484 - t562 + t98) * t368 + (t365 * t484 + t485 + t97) * t365) * qJD(2)) * t496 + (t28 * (t360 + t466) + t27 * (t159 + t549) + (t28 * t412 + (-pkin(1) - t327 - t634) * t689) * t365 + (t333 - t467 + t412 * t539 + (-pkin(5) * qJD(1) + t536 * t644) * t365) * t63 + (-pkin(2) * t512 + t334 + t352 - t427 + t522 + t63 - t710) * t64) * m(4) + t695 * t654 + t696 * t655 + (t15 * (t360 + t736) + t42 * t464 + t14 * (t328 + t688) + t43 * (t352 + t668) + (-t14 * t588 + t43 * (-t362 * t367 - t586) * qJD(2) + (t15 * t363 + (-t363 * t367 * t43 + t366 * t42) * qJD(3)) * pkin(3) + t42 * (t364 * t615 + t490) * qJD(1)) * t368 + (t15 * (-pkin(1) + t588 - t632) + t43 * (t490 - t632) * qJD(1) + (t367 * t525 - t532 + (t367 * t615 + t586) * qJD(2) + (-pkin(5) - t643) * qJD(1)) * t42) * t365 - (-t42 + t427 + t735) * t43 - t487 * t303) * m(5) + t698 * t650 + (-qJD(2) * t431 + t305 * t367 + t306 * t364) * qJD(1) + ((t126 + t132) * t368 + (t125 + t131) * t365) * t528 / 0.2e1 + t664 - t627 / 0.2e1 + t628 / 0.2e1 - t629 / 0.2e1 + t626 / 0.2e1 + t617 / 0.2e1 + t618 / 0.2e1 + t619 / 0.2e1 + t616 / 0.2e1; -qJD(1) * ((t364 * t547 + t367 * t546) * qJD(1) + (t396 * t364 + t367 * t658) * qJD(2)) / 0.2e1 + qJD(1) * (t60 * t365 - t59 * t368 + (t125 * t365 + t126 * t368) * qJD(1)) / 0.2e1 + ((-t535 * t590 - t542) * t368 + (t385 + (t368 * t589 + t372) * qJD(2)) * t365) * t493 + ((-t537 * t589 + t542) * t365 + (t385 + (t365 * t590 + t372) * qJD(2)) * t368) * t496 + t671 * t655 + t673 * t654 + ((t695 * t364 + t583 * t720) * qJD(3) + ((qJD(3) * t719 + t677) * t367 + t681) * t368 + (t276 * t683 + t277 * t682) * t345 + (t276 * t687 + t277 * t685) * t303 + (-t276 * t686 - t277 * t684) * t302) * t653 + (qJD(1) * t674 + t365 * t705 - t368 * t706) * t652 + (qJD(1) * t672 + t365 * t702 - t368 * t703) * t651 + ((t696 * t364 + t580 * t721) * qJD(3) + ((qJD(3) * t722 + t677) * t367 + t681) * t365 + (-t274 * t683 + t275 * t682) * t345 + (-t274 * t687 + t275 * t685) * t303 + (t274 * t686 - t275 * t684) * t302) * t650 + ((t676 * qJD(3) - t745) * t367 + ((-t363 * t683 + t366 * t682 + t739) * t345 + (-t363 * t687 + t366 * t685 - t716) * t303 + (t363 * t686 - t366 * t684 + t740) * t302 + t694 * qJD(3)) * t364) * t649 + (qJD(1) * t676 + t365 * t700 - t368 * t701) * t648 - t697 * t534 / 0.2e1 + t675 * t471 + (-(t364 * t399 + t367 * t373) * qJD(3) + t5 * t550 + (-t489 * qJD(1) + t15 * t518 + t704) * t368 + (-t488 * qJD(1) + t14 * t518 + t405) * t365 + (t518 * t539 + t713 * t302 - t567 * t345 - t470 + (t521 - t531) * t365) * t43 + (-t532 - t567 * t303 - t568 * t302 + t637 * t368 + (-t298 - t571) * t541 + t667) * t41 + (t303 * t713 + t568 * t345 - t367 * t530 + t521 * t368 + t301 - t416) * t42) * m(5) + (-t63 * (t214 * t345 - t249 * t303 + t416) - t64 * (-t216 * t345 - t249 * t302 + t470) - ((-t155 * t63 + t159 * t64) * t364 + t377 * t367) * qJD(3) + t63 * t301 + t20 * t550 + (t20 * t159 + t63 * t570 + (t28 + t689) * t555) * t368 + (t63 * t246 * qJD(1) + t20 * t155 + t27 * t555 + t64 * t570) * t365 + (t214 * t302 + t216 * t303 + (t155 * qJD(1) + t80) * t368 + (t82 + (-t159 - t298) * qJD(1)) * t365 + t667) * t54) * m(4) + (-(t119 * t293 - t594) * qJD(1) - (t111 * (-t293 * t365 - t294 * t368) + t441 * t468) * qJD(2) + 0.2e1 * t111 * (t174 * t368 + t175 * t365 + (t247 * t368 - t250 * t365) * qJD(1)) + t441 * t307 + (-t89 * t365 - t90 * t368 + (-t120 * t368 + t596) * qJD(1)) * t321) * m(3) + (qJD(1) * t61 + (t661 * t365 ^ 2 - t660 * t717 + (t365 * t97 + t368 * t98) * qJD(1)) * t709 + t708) * t365 / 0.2e1 - (qJD(1) * t62 + (-t661 * t717 + t368 ^ 2 * t660 + (t365 * t95 + t368 * t96) * qJD(1)) * t709 + t707) * t368 / 0.2e1 + (t414 + t44 + t699) * t541 / 0.2e1 + (t413 + t45 + t698) * t498 - (t365 * t699 + t368 * t698) * t533 / 0.2e1; (t364 * t672 - t367 * t696) * t655 + (t364 * t674 - t367 * t695) * t654 + (t276 * t746 + t679 * t277 - t678 * t368) * t653 + ((qJD(2) * t674 - t724) * t367 + (-qJD(1) * t673 + qJD(2) * t695 + t365 * t706 + t368 * t705) * t364) * t652 + ((qJD(2) * t672 - t723) * t367 + (-qJD(1) * t671 + qJD(2) * t696 + t365 * t703 + t368 * t702) * t364) * t651 + (-t274 * t746 + t275 * t679 - t365 * t678) * t650 + (t734 * t367 + (-t363 * t746 + t366 * t679) * t364) * t649 + ((qJD(2) * t676 - t744) * t367 + (-qJD(1) * t675 + qJD(2) * t694 + t365 * t701 + t368 * t700) * t364) * t648 - (t618 + t619 + t628 - t629 + t616 + t617 + t626 - t627 + t664) * t367 / 0.2e1 + t707 * t585 / 0.2e1 + t708 * t584 / 0.2e1 + t697 * t497 + (t364 * t676 - t367 * t694) * t471 + (-(-t42 * t566 + t43 * t565) * t345 - (t41 * t565 + t42 * t474) * t303 - (t41 * t566 + t43 * t474) * t302 + (qJD(2) * t373 - t14 * t571 - t15 * t572 + t42 * t636 - t43 * t637) * t367 + (t399 * qJD(2) + (qJD(1) * t398 + t14 * t712 - t43 * t577 + t405) * t368 + (qJD(1) * t711 - t15 * t712 - t41 * t637 + t42 * t577 - t704) * t365) * t364) * m(5) + (-t63 * (-t196 * t345 - t292 * t303) - t64 * (t198 * t345 - t292 * t302) - t54 * (t196 * t302 + t198 * t303) + (qJD(2) * t377 + t28 * t155 - t27 * t159 + t63 * t82 - t64 * t80) * t367 + (t63 * (-qJD(2) * t155 + t173 * t365) + t64 * (qJD(2) * t159 - t173 * t368) + t20 * t436 + t54 * (-t155 * t541 - t159 * t539 - t365 * t80 + t368 * t82) + (-t27 * t368 + t28 * t365 + (t365 * t64 + t368 * t63) * qJD(1)) * t246) * t364) * m(4) + t698 * (t367 * t493 - t516 / 0.2e1) + t699 * (t364 * t498 + t367 * t495); 0.2e1 * ((t42 * t535 + t43 * t537 - t5) * t656 + (t302 * t43 + t303 * t42) * t657) * t367 + 0.2e1 * ((qJD(2) * t41 + t14 * t365 + t15 * t368 - t42 * t541 + t43 * t539) * t656 + (t41 * (t302 * t365 + t303 * t368) + (-t365 * t42 + t368 * t43) * t345) * t657) * t364;];
tauc = t1(:);
