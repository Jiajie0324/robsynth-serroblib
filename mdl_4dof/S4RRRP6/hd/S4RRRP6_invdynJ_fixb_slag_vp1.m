% Calculate vector of inverse dynamics joint torques for
% S4RRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% qJDD [4x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d3]';
% m_mdh [5x1]
%   mass of all robot links (including the base)
% rSges [5x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [5x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [4x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:19
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S4RRRP6_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,1),zeros(6,1),zeros(5,1),zeros(5,3),zeros(5,6)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'S4RRRP6_invdynJ_fixb_slag_vp1: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'S4RRRP6_invdynJ_fixb_slag_vp1: qJD has to be [4x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [4 1]), ...
  'S4RRRP6_invdynJ_fixb_slag_vp1: qJDD has to be [4x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S4RRRP6_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S4RRRP6_invdynJ_fixb_slag_vp1: pkin has to be [6x1] (double)');
assert(isreal(m) && all(size(m) == [5 1]), ...
  'S4RRRP6_invdynJ_fixb_slag_vp1: m has to be [5x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [5,3]), ...
  'S4RRRP6_invdynJ_fixb_slag_vp1: rSges has to be [5x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [5 6]), ...
  'S4RRRP6_invdynJ_fixb_slag_vp1: Icges has to be [5x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:18:10
% EndTime: 2019-12-31 17:19:09
% DurationCPUTime: 52.95s
% Computational Cost: add. (13708->966), mult. (35031->1251), div. (0->0), fcn. (33384->6), ass. (0->455)
t837 = -Icges(4,4) - Icges(5,4);
t787 = Icges(4,1) + Icges(5,1);
t834 = Icges(4,5) + Icges(5,5);
t801 = -Icges(4,2) - Icges(5,2);
t800 = Icges(4,6) + Icges(5,6);
t405 = cos(qJ(3));
t836 = t837 * t405;
t402 = sin(qJ(3));
t835 = t837 * t402;
t833 = Icges(4,3) + Icges(5,3);
t832 = -t800 * t402 + t834 * t405;
t831 = t801 * t402 - t836;
t830 = t787 * t405 + t835;
t407 = cos(qJ(1));
t403 = sin(qJ(2));
t577 = qJD(3) * t403;
t404 = sin(qJ(1));
t580 = qJD(2) * t404;
t316 = t407 * t577 + t580;
t578 = qJD(2) * t407;
t317 = -t404 * t577 + t578;
t406 = cos(qJ(2));
t576 = qJD(3) * t406;
t374 = qJD(1) - t576;
t627 = t407 * t402;
t632 = t404 * t405;
t290 = -t406 * t627 + t632;
t628 = t406 * t407;
t637 = t402 * t404;
t291 = t405 * t628 + t637;
t633 = t403 * t407;
t794 = t830 * t403 - t834 * t406;
t796 = t832 * t403 - t833 * t406;
t806 = t831 * t403 - t800 * t406;
t743 = t806 * t290 + t794 * t291 + t796 * t633;
t138 = Icges(5,5) * t291 + Icges(5,6) * t290 + Icges(5,3) * t633;
t141 = Icges(4,5) * t291 + Icges(4,6) * t290 + Icges(4,3) * t633;
t797 = t138 + t141;
t267 = Icges(5,4) * t290;
t150 = Icges(5,1) * t291 + Icges(5,5) * t633 + t267;
t270 = Icges(4,4) * t290;
t153 = Icges(4,1) * t291 + Icges(4,5) * t633 + t270;
t810 = t150 + t153;
t661 = Icges(5,4) * t291;
t144 = Icges(5,2) * t290 + Icges(5,6) * t633 + t661;
t664 = Icges(4,4) * t291;
t147 = Icges(4,2) * t290 + Icges(4,6) * t633 + t664;
t811 = t144 + t147;
t762 = t811 * t290 + t810 * t291 + t797 * t633;
t629 = t405 * t407;
t631 = t404 * t406;
t288 = t402 * t631 + t629;
t265 = Icges(5,4) * t288;
t630 = t405 * t406;
t289 = t404 * t630 - t627;
t634 = t403 * t404;
t149 = -Icges(5,1) * t289 - Icges(5,5) * t634 + t265;
t268 = Icges(4,4) * t288;
t152 = -Icges(4,1) * t289 - Icges(4,5) * t634 + t268;
t759 = t149 + t152;
t266 = Icges(5,4) * t289;
t142 = -Icges(5,2) * t288 + Icges(5,6) * t634 + t266;
t269 = Icges(4,4) * t289;
t145 = -Icges(4,2) * t288 + Icges(4,6) * t634 + t269;
t760 = t142 + t145;
t136 = Icges(5,5) * t289 - Icges(5,6) * t288 + Icges(5,3) * t634;
t139 = Icges(4,5) * t289 - Icges(4,6) * t288 + Icges(4,3) * t634;
t761 = t136 + t139;
t763 = t290 * t760 - t291 * t759 + t633 * t761;
t769 = t762 * t316 - t317 * t763 + t374 * t743;
t744 = -t806 * t288 + t794 * t289 + t796 * t634;
t764 = -t811 * t288 + t810 * t289 + t797 * t634;
t765 = -t288 * t760 - t289 * t759 + t634 * t761;
t770 = t764 * t316 - t317 * t765 + t744 * t374;
t827 = t833 * t403 + t832 * t406;
t754 = t800 * t403 + t831 * t406;
t753 = t834 * t403 + t830 * t406;
t826 = (-t834 * t402 - t800 * t405) * t403;
t825 = (t801 * t405 + t835) * t403;
t824 = (-t787 * t402 + t836) * t403;
t466 = t405 * t374;
t583 = qJD(1) * t406;
t525 = -qJD(3) + t583;
t551 = t403 * t578;
t719 = t404 * t525 + t551;
t129 = t402 * t719 + t407 * t466;
t465 = t374 * t402;
t130 = -t405 * t719 + t407 * t465;
t550 = t406 * t578;
t584 = qJD(1) * t404;
t554 = t403 * t584;
t441 = t550 - t554;
t69 = Icges(5,5) * t130 + Icges(5,6) * t129 + Icges(5,3) * t441;
t71 = Icges(4,5) * t130 + Icges(4,6) * t129 + Icges(4,3) * t441;
t817 = t69 + t71;
t552 = t403 * t580;
t131 = t404 * t466 + (-t407 * t525 + t552) * t402;
t581 = qJD(2) * t403;
t132 = t525 * t629 + (-t405 * t581 + t465) * t404;
t579 = qJD(2) * t406;
t582 = qJD(1) * t407;
t442 = t403 * t582 + t404 * t579;
t70 = Icges(5,5) * t132 + Icges(5,6) * t131 + Icges(5,3) * t442;
t72 = Icges(4,5) * t132 + Icges(4,6) * t131 + Icges(4,3) * t442;
t816 = t70 + t72;
t73 = Icges(5,4) * t130 + Icges(5,2) * t129 + Icges(5,6) * t441;
t75 = Icges(4,4) * t130 + Icges(4,2) * t129 + Icges(4,6) * t441;
t815 = t73 + t75;
t74 = Icges(5,4) * t132 + Icges(5,2) * t131 + Icges(5,6) * t442;
t76 = Icges(4,4) * t132 + Icges(4,2) * t131 + Icges(4,6) * t442;
t814 = t74 + t76;
t77 = Icges(5,1) * t130 + Icges(5,4) * t129 + Icges(5,5) * t441;
t79 = Icges(4,1) * t130 + Icges(4,4) * t129 + Icges(4,5) * t441;
t813 = t77 + t79;
t78 = Icges(5,1) * t132 + Icges(5,4) * t131 + Icges(5,5) * t442;
t80 = Icges(4,1) * t132 + Icges(4,4) * t131 + Icges(4,5) * t442;
t812 = t78 + t80;
t809 = qJD(2) * t827 + qJD(3) * t826;
t808 = qJD(2) * t754 + qJD(3) * t825;
t807 = qJD(2) * t753 + qJD(3) * t824;
t573 = qJD(4) * t407;
t359 = t403 * t573;
t398 = t406 * pkin(2);
t508 = t289 * rSges(5,1) - t288 * rSges(5,2);
t384 = pkin(3) * t405 + pkin(2);
t351 = t406 * t384;
t328 = t404 * t351;
t569 = pkin(3) * t627;
t516 = -t328 + t569;
t401 = -qJ(4) - pkin(6);
t691 = pkin(6) + t401;
t739 = t403 * t691;
t621 = (t398 + t739) * t404 + t516 - rSges(5,3) * t634 - t508;
t805 = t374 * t621 + t359;
t804 = -t402 * t806 + t405 * t794;
t776 = t760 * t129 - t759 * t130 + t814 * t290 + t812 * t291 + t761 * t441 + t816 * t633;
t775 = t811 * t129 + t810 * t130 + t815 * t290 + t813 * t291 + t797 * t441 + t817 * t633;
t774 = t760 * t131 - t759 * t132 - t814 * t288 + t812 * t289 + t761 * t442 + t816 * t634;
t773 = t811 * t131 + t810 * t132 - t815 * t288 + t813 * t289 + t797 * t442 + t817 * t634;
t767 = t806 * t129 + t794 * t130 + t808 * t290 + t807 * t291 + t796 * t441 + t809 * t633;
t766 = t806 * t131 + t794 * t132 - t808 * t288 + t807 * t289 + t796 * t442 + t809 * t634;
t480 = -t142 * t402 - t149 * t405;
t55 = -t136 * t406 + t403 * t480;
t478 = -t145 * t402 - t152 * t405;
t57 = -t139 * t406 + t403 * t478;
t799 = t55 + t57;
t479 = -t144 * t402 + t150 * t405;
t56 = -t138 * t406 + t403 * t479;
t477 = -t147 * t402 + t153 * t405;
t58 = -t141 * t406 + t403 * t477;
t798 = t56 + t58;
t742 = t804 * t403 - t796 * t406;
t793 = (-t804 + t827) * t374 + (t796 * t404 + t478 + t480) * t317 + (-t796 * t407 - t477 - t479) * t316;
t734 = -t289 * rSges(4,1) + t288 * rSges(4,2);
t157 = rSges(4,3) * t634 - t734;
t685 = rSges(4,1) * t405;
t510 = -rSges(4,2) * t402 + t685;
t251 = -rSges(4,3) * t406 + t403 * t510;
t792 = t157 * t374 + t251 * t317;
t791 = t316 * (t291 * t801 + t267 + t270 + t810) - t317 * (t289 * t801 - t265 - t268 - t759) + t374 * (t794 + t825);
t790 = rSges(5,1) + pkin(3);
t789 = (t804 * qJD(2) - t809) * t406 + (t807 * t405 - t808 * t402 + (-t402 * t794 - t405 * t806) * qJD(3) + t796 * qJD(2)) * t403;
t788 = rSges(5,3) - t401;
t399 = t407 * pkin(5);
t786 = t399 - t508;
t785 = -t826 * t374 + (-t288 * t834 - t289 * t800) * t317 + (-t290 * t834 + t291 * t800) * t316;
t571 = qJD(1) * qJD(2);
t326 = qJDD(2) * t404 + t407 * t571;
t570 = qJDD(3) * t403;
t182 = qJD(3) * t441 + t407 * t570 + t326;
t327 = -qJDD(2) * t407 + t404 * t571;
t183 = qJD(3) * t442 + t404 * t570 + t327;
t315 = qJD(2) * t577 - qJDD(3) * t406 + qJDD(1);
t779 = t762 * t182 + t763 * t183 + t743 * t315 + t775 * t316 - t776 * t317 + t767 * t374;
t778 = t764 * t182 + t765 * t183 + t744 * t315 + t773 * t316 - t774 * t317 + t766 * t374;
t16 = (qJD(2) * t480 - t70) * t406 + (qJD(2) * t136 - t402 * t74 + t405 * t78 + (-t142 * t405 + t149 * t402) * qJD(3)) * t403;
t18 = (qJD(2) * t478 - t72) * t406 + (qJD(2) * t139 - t402 * t76 + t405 * t80 + (-t145 * t405 + t152 * t402) * qJD(3)) * t403;
t772 = t16 + t18;
t17 = (qJD(2) * t479 - t69) * t406 + (qJD(2) * t138 - t402 * t73 + t405 * t77 + (-t144 * t405 - t150 * t402) * qJD(3)) * t403;
t19 = (qJD(2) * t477 - t71) * t406 + (qJD(2) * t141 - t402 * t75 + t405 * t79 + (-t147 * t405 - t153 * t402) * qJD(3)) * t403;
t771 = t17 + t19;
t768 = t798 * t316 - t799 * t317 + t742 * t374;
t758 = t806 * t404;
t757 = t806 * t407;
t756 = t794 * t404;
t755 = t794 * t407;
t752 = t399 + t734;
t751 = t793 * t403;
t750 = t797 * t316 - t761 * t317 + t796 * t374;
t729 = t799 * t404 + t798 * t407;
t749 = t798 * t404 - t799 * t407;
t728 = t763 * t404 + t762 * t407;
t748 = t762 * t404 - t763 * t407;
t727 = t765 * t404 + t764 * t407;
t747 = t764 * t404 - t765 * t407;
t347 = pkin(2) * t403 - pkin(6) * t406;
t380 = pkin(2) * t628;
t311 = pkin(6) * t633 + t380;
t350 = t407 * pkin(1) + t404 * pkin(5);
t596 = t311 + t350;
t467 = qJD(1) * t596 - t347 * t580;
t575 = qJD(4) * t403;
t547 = t404 * t575;
t684 = rSges(5,1) * t405;
t507 = -rSges(5,2) * t402 + t684;
t737 = t406 * t691;
t692 = pkin(2) - t384;
t738 = t403 * t692;
t611 = -rSges(5,3) * t406 + t403 * t507 + t737 - t738;
t736 = t291 * rSges(5,1) + t290 * rSges(5,2) + pkin(3) * t637 + t384 * t628 + t633 * t788;
t620 = -t311 + t736;
t43 = -t316 * t611 + t374 * t620 + t467 + t547;
t529 = t43 * t611;
t574 = qJD(4) * t406;
t733 = t403 * pkin(6) + t398;
t309 = t733 * t404;
t602 = t309 * t580 + t311 * t578;
t41 = -t316 * t621 + t317 * t620 - t574 + t602;
t531 = t41 * t621;
t746 = t529 + t531;
t357 = pkin(6) * t550;
t443 = -t404 * t583 - t551;
t203 = pkin(2) * t443 - pkin(6) * t554 + t357;
t356 = pkin(2) * t552;
t204 = pkin(6) * t442 + qJD(1) * t380 - t356;
t377 = pkin(6) * t631;
t308 = -pkin(2) * t634 + t377;
t379 = pkin(6) * t628;
t310 = -pkin(2) * t633 + t379;
t745 = t407 * t203 + t404 * t204 - t308 * t580 + t309 * t582 - t310 * t578;
t392 = t403 * rSges(5,3);
t636 = t402 * t406;
t735 = rSges(5,1) * t630 - rSges(5,2) * t636 + t351 + t392;
t391 = Icges(3,4) * t406;
t486 = -Icges(3,2) * t403 + t391;
t337 = Icges(3,1) * t403 + t391;
t731 = (-t806 + t824) * t374 + (t288 * t787 + t266 + t269 + t760) * t317 + (t290 * t787 - t661 - t664 - t811) * t316;
t730 = t785 * t403;
t682 = pkin(3) * qJD(3);
t565 = t405 * t682;
t724 = t130 * rSges(5,1) + t129 * rSges(5,2) + rSges(5,3) * t550 + qJD(1) * t569 + t401 * t554 + t404 * t565 + t359;
t721 = t315 * t742 + t374 * t789;
t720 = g(1) * t407 + g(2) * t404;
t651 = Icges(3,3) * t407;
t236 = Icges(3,5) * t631 - Icges(3,6) * t634 - t651;
t363 = Icges(3,4) * t634;
t658 = Icges(3,5) * t407;
t248 = Icges(3,1) * t631 - t363 - t658;
t654 = Icges(3,6) * t407;
t242 = Icges(3,4) * t631 - Icges(3,2) * t634 - t654;
t644 = t242 * t403;
t472 = -t248 * t406 + t644;
t96 = -t236 * t407 - t404 * t472;
t334 = Icges(3,5) * t406 - Icges(3,6) * t403;
t333 = Icges(3,5) * t403 + Icges(3,6) * t406;
t444 = qJD(2) * t333;
t665 = Icges(3,4) * t403;
t338 = Icges(3,1) * t406 - t665;
t249 = Icges(3,5) * t404 + t338 * t407;
t243 = Icges(3,6) * t404 + t407 * t486;
t643 = t243 * t403;
t471 = -t249 * t406 + t643;
t718 = -t407 * t444 + (-t334 * t404 + t471 + t651) * qJD(1);
t237 = Icges(3,3) * t404 + t334 * t407;
t586 = qJD(1) * t237;
t717 = qJD(1) * t472 - t404 * t444 + t586;
t335 = Icges(3,2) * t406 + t665;
t468 = t335 * t403 - t337 * t406;
t716 = t468 * qJD(1) + t334 * qJD(2);
t462 = t203 * t578 + t204 * t580 + t326 * t309 - t311 * t327;
t439 = -t406 * t692 - t739;
t509 = -rSges(5,1) * t132 - rSges(5,2) * t131;
t635 = t403 * t384;
t687 = t356 + (qJD(1) * t439 - t565) * t407 + (t575 + pkin(3) * t465 + (-t635 - t737) * qJD(2)) * t404 + rSges(5,3) * t442 - t509;
t566 = t402 * t682;
t688 = -t357 + (pkin(6) * t584 + t578 * t692) * t403 + ((-qJD(2) * t401 - t566) * t407 + t692 * t584) * t406 - rSges(5,3) * t554 + t724;
t5 = qJD(2) * t575 - qJDD(4) * t406 - t182 * t621 - t183 * t620 + t316 * t687 + t317 * t688 + t462;
t715 = t41 * t688 + t5 * t620;
t714 = t404 * (-t335 * t407 + t249) - t407 * (-Icges(3,2) * t631 + t248 - t363);
t711 = t182 / 0.2e1;
t710 = t183 / 0.2e1;
t709 = t315 / 0.2e1;
t708 = -t316 / 0.2e1;
t707 = t316 / 0.2e1;
t706 = -t317 / 0.2e1;
t705 = t317 / 0.2e1;
t704 = t326 / 0.2e1;
t703 = t327 / 0.2e1;
t702 = -t374 / 0.2e1;
t701 = t374 / 0.2e1;
t697 = -rSges(4,3) - pkin(6);
t696 = pkin(3) * t402;
t695 = g(1) * t404;
t686 = rSges(3,1) * t406;
t683 = rSges(5,2) * t405;
t681 = t16 * t317;
t680 = t17 * t316;
t679 = t18 * t317;
t678 = t19 * t316;
t393 = t403 * rSges(4,3);
t394 = t404 * rSges(3,3);
t671 = t55 * t183;
t670 = t56 * t182;
t669 = t57 * t183;
t668 = t58 * t182;
t343 = rSges(3,1) * t403 + rSges(3,2) * t406;
t553 = t343 * t578;
t587 = rSges(3,2) * t634 + t407 * rSges(3,3);
t252 = rSges(3,1) * t631 - t587;
t348 = pkin(1) * t404 - t399;
t604 = -t252 - t348;
t121 = qJD(1) * t604 - t553;
t648 = t121 * t404;
t647 = t121 * t407;
t255 = rSges(3,1) * t628 - rSges(3,2) * t633 + t394;
t206 = t255 + t350;
t122 = qJD(1) * t206 - t343 * t580;
t307 = t343 * t407;
t646 = t122 * t307;
t641 = t333 * t404;
t640 = t333 * t407;
t639 = t401 * t403;
t638 = t401 * t406;
t304 = (-rSges(5,1) * t402 - t683) * t403;
t626 = qJD(3) * t304 - t403 * t566 - t574 + (t406 * t507 + t392 + t439) * qJD(2);
t305 = (-rSges(4,1) * t402 - rSges(4,2) * t405) * t403;
t175 = qJD(3) * t305 + (t406 * t510 + t393) * qJD(2);
t324 = t733 * qJD(2);
t619 = -t175 - t324;
t450 = -t638 + t738;
t561 = t403 * t632;
t564 = t402 * t634;
t592 = rSges(5,2) * t564 + rSges(5,3) * t631;
t618 = -rSges(5,1) * t561 + t404 * t450 - t377 + t592;
t560 = t403 * t629;
t563 = t403 * t627;
t590 = rSges(5,2) * t563 + rSges(5,3) * t628;
t617 = -rSges(5,1) * t560 + t407 * t450 - t379 + t590;
t616 = -t289 * rSges(5,2) - t288 * t790;
t615 = -t291 * rSges(5,2) + t290 * t790;
t325 = t350 * qJD(1);
t614 = -t204 - t325;
t613 = -t404 * t236 - t248 * t628;
t612 = t404 * t237 + t249 * t628;
t610 = t733 + t639 - t735;
t605 = -t251 - t347;
t600 = t404 * t309 + t407 * t311;
t597 = -t309 - t348;
t386 = pkin(5) * t582;
t595 = qJD(1) * (-pkin(1) * t584 + t386) + qJDD(1) * t350;
t594 = -t335 + t338;
t593 = t337 + t486;
t591 = rSges(4,2) * t564 + rSges(4,3) * t631;
t589 = rSges(4,2) * t563 + rSges(4,3) * t628;
t588 = rSges(3,2) * t554 + rSges(3,3) * t582;
t585 = qJD(1) * t334;
t133 = -t404 * t468 - t640;
t572 = t133 * qJD(1);
t558 = t130 * rSges(4,1) + t129 * rSges(4,2) + rSges(4,3) * t550;
t557 = -t324 - t626;
t555 = -t347 - t611;
t161 = t291 * rSges(4,1) + t290 * rSges(4,2) + rSges(4,3) * t633;
t548 = t347 * t578;
t543 = -pkin(1) - t686;
t541 = -pkin(1) - t392;
t539 = t582 / 0.2e1;
t537 = -t580 / 0.2e1;
t536 = t580 / 0.2e1;
t535 = -t578 / 0.2e1;
t534 = t578 / 0.2e1;
t432 = qJD(1) * t597 - t548;
t42 = -t317 * t611 + t432 + t805;
t530 = t42 * t611;
t224 = t249 * t631;
t527 = t237 * t407 - t224;
t526 = -t236 + t643;
t517 = t403 * t696 - t304;
t514 = -t403 * t788 - pkin(1);
t513 = qJD(1) * t310 - t580 * t733;
t346 = rSges(2,1) * t407 - rSges(2,2) * t404;
t344 = rSges(2,1) * t404 + rSges(2,2) * t407;
t345 = -rSges(3,2) * t403 + t686;
t512 = rSges(4,1) * t132 + rSges(4,2) * t131;
t128 = t243 * t406 + t249 * t403;
t445 = qJD(2) * t335;
t168 = -t407 * t445 + (-t404 * t486 + t654) * qJD(1);
t446 = qJD(2) * t337;
t172 = -t407 * t446 + (-t338 * t404 + t658) * qJD(1);
t414 = -qJD(2) * t128 - t168 * t403 + t172 * t406 + t586;
t127 = t242 * t406 + t248 * t403;
t169 = qJD(1) * t243 - t404 * t445;
t173 = qJD(1) * t249 - t404 * t446;
t415 = qJD(1) * t236 - qJD(2) * t127 - t169 * t403 + t173 * t406;
t506 = -(t404 * t717 + t415 * t407) * t407 + (t404 * t718 + t414 * t407) * t404;
t505 = -(t415 * t404 - t407 * t717) * t407 + (t414 * t404 - t407 * t718) * t404;
t97 = -t243 * t634 - t527;
t491 = t404 * t97 - t407 * t96;
t98 = -t242 * t633 - t613;
t99 = -t243 * t633 + t612;
t490 = t404 * t99 - t407 * t98;
t481 = -t122 * t404 - t647;
t476 = t157 * t407 - t161 * t404;
t176 = rSges(3,1) * t443 - rSges(3,2) * t550 + t588;
t306 = t343 * t404;
t177 = -qJD(2) * t306 + (t345 * t407 + t394) * qJD(1);
t475 = t176 * t407 + t177 * t404;
t470 = t252 * t404 + t255 * t407;
t469 = t335 * t406 + t337 * t403;
t464 = qJDD(1) * t597 + t327 * t347;
t254 = rSges(4,1) * t630 - rSges(4,2) * t636 + t393;
t331 = qJD(1) * t348;
t461 = -qJD(1) * t309 - t331 - t548;
t449 = -qJD(1) * t308 - t578 * t733;
t448 = qJD(1) * t203 + qJDD(1) * t311 - t326 * t347 + t595;
t447 = t403 * t697 - pkin(1) - t398;
t440 = t41 * t687 - t5 * t621;
t434 = t42 * t621 + t43 * t620;
t433 = -t41 * t620 + t530;
t431 = t242 * t407 - t243 * t404;
t430 = qJDD(4) * t403 + (-t324 + t574) * qJD(2);
t421 = (-t403 * t593 + t406 * t594) * qJD(1);
t54 = t157 * t316 + t161 * t317 + t602;
t65 = t432 - t792;
t66 = t161 * t374 - t251 * t316 + t467;
t416 = t54 * t476 + (t404 * t65 - t407 * t66) * t251;
t319 = t486 * qJD(2);
t320 = t338 * qJD(2);
t413 = qJD(1) * t333 - qJD(2) * t469 - t319 * t403 + t320 * t406;
t412 = t433 * t404 - t407 * t746;
t411 = -t403 * t714 + t431 * t406;
t321 = t345 * qJD(2);
t314 = t347 * t584;
t222 = -rSges(4,1) * t560 + t589;
t220 = -rSges(4,1) * t561 + t591;
t202 = rSges(4,1) * t290 - rSges(4,2) * t291;
t200 = -rSges(4,1) * t288 - rSges(4,2) * t289;
t134 = -t407 * t468 + t641;
t120 = t134 * qJD(1);
t113 = t470 * qJD(2);
t84 = rSges(4,3) * t442 + t512;
t82 = -rSges(4,3) * t554 + t558;
t64 = qJD(1) * t176 + qJDD(1) * t255 - t321 * t580 - t326 * t343 + t595;
t63 = -t321 * t578 + t327 * t343 + t604 * qJDD(1) + (-t177 - t325) * qJD(1);
t62 = t413 * t404 - t407 * t716;
t61 = t404 * t716 + t413 * t407;
t60 = -qJD(2) * t471 + t168 * t406 + t172 * t403;
t59 = -t472 * qJD(2) + t169 * t406 + t173 * t403;
t45 = qJD(2) * t490 + t120;
t44 = qJD(2) * t491 + t572;
t26 = t161 * t315 - t175 * t316 - t182 * t251 - t324 * t580 + t374 * t82 + t448;
t25 = qJD(1) * t614 - t157 * t315 - t175 * t317 + t183 * t251 - t324 * t578 - t374 * t84 + t464;
t20 = t157 * t182 - t161 * t183 + t316 * t84 + t317 * t82 + t462;
t7 = qJD(1) * t359 - t182 * t611 + t315 * t620 - t316 * t626 + t374 * t688 + t404 * t430 + t448;
t6 = -t687 * t374 - t626 * t317 + t621 * t315 + t611 * t183 + t430 * t407 + (-t547 + t614) * qJD(1) + t464;
t1 = [(t44 - t572 + ((t407 * t526 - t612 + t99) * t407 + (t404 * t526 + t527 + t98) * t404) * qJD(2)) * t537 + (t469 + m(2) * (t344 ^ 2 + t346 ^ 2) + Icges(2,3)) * qJDD(1) + (t59 + t62 + t45) * t535 + (t761 * t406 + (t402 * t760 + t405 * t759) * t403 + t799) * t316 * t702 + ((t356 - t512 + t447 * t582 + (-pkin(5) * qJD(1) + t697 * t579) * t404) * t65 - g(1) * t752 - t447 * t695 + (t404 * t447 + t752) * t25 + (-t461 + t65 - pkin(2) * t551 + t357 + t386 + t558 + (-pkin(1) - t733 - t393) * t584 + t792) * t66 + (t26 - g(2)) * (t161 + t596)) * m(4) + (t60 + t61) * t536 - t681 / 0.2e1 - t679 / 0.2e1 + t680 / 0.2e1 + t678 / 0.2e1 + t670 / 0.2e1 + t671 / 0.2e1 + t769 * t705 + t668 / 0.2e1 + t669 / 0.2e1 + (t122 * (t386 + t588) + (t343 * t648 - t646) * qJD(2) + ((-pkin(1) - t345) * t647 + (t121 * (-rSges(3,3) - pkin(5)) + t122 * t543) * t404) * qJD(1) - (-qJD(1) * t252 - t121 - t331 - t553) * t122 + (t64 - g(2)) * t206 + (-g(1) + t63) * (t543 * t404 + t399 + t587)) * m(3) + (t120 + ((t97 - t224 + (t237 + t644) * t407 + t613) * t407 + t612 * t404) * qJD(2)) * t534 + (-qJD(2) * t468 + t319 * t406 + t320 * t403) * qJD(1) + (t133 + t127) * t703 + (t134 + t128) * t704 - m(2) * (-g(1) * t344 + g(2) * t346) + (t6 * (-t328 + t786) + t42 * t509 + t43 * (t386 + t724) + (t43 * (-t635 - t638) * qJD(2) + (t6 * t402 + (t405 * t42 - t43 * t636) * qJD(3)) * pkin(3) + t42 * (t514 - t351) * qJD(1)) * t407 + (t6 * (t541 + t639) + t43 * (t541 - t351) * qJD(1) + (t406 * t566 - t575 + (-t406 * t788 + t635) * qJD(2) + (-pkin(5) - t696) * qJD(1)) * t42) * t404 - (-t42 + t461 + t805) * t43 + t529 * t317 - g(1) * (t516 + t786) - t514 * t695 + (t7 - g(2)) * (t350 + t736)) * m(5) + t721 + t743 * t711 + t744 * t710 + t767 * t707 + (t766 + t769) * t706; ((-t578 * t641 - t585) * t407 + (t421 + (t407 * t640 + t411) * qJD(2)) * t404) * t534 + ((-t580 * t640 + t585) * t404 + (t421 + (t404 * t641 + t411) * qJD(2)) * t407) * t537 + (g(1) * t307 + g(2) * t306 - g(3) * t345 - (t121 * t306 - t646) * qJD(1) - (t113 * (-t306 * t404 - t307 * t407) + t481 * t345) * qJD(2) + (qJD(2) * t475 + t252 * t326 - t255 * t327) * t470 + t113 * ((t252 * t407 - t255 * t404) * qJD(1) + t475) + t481 * t321 + (-t64 * t404 - t63 * t407 + (-t122 * t407 + t648) * qJD(1)) * t343) * m(3) + (-t65 * (-t220 * t374 - t254 * t317 + t449) - t66 * (t222 * t374 - t254 * t316 + t513) - ((-t157 * t65 + t161 * t66) * t403 + t416 * t406) * qJD(3) - g(1) * (t379 + t589) - g(2) * (t377 + t591) - g(3) * (t254 + t733) - t720 * t403 * (-pkin(2) - t685) + t65 * t314 + t20 * t600 + (t20 * t161 + t65 * t619 + (qJD(1) * t66 + t25) * t605) * t407 + (qJD(1) * t251 * t65 + t20 * t157 + t26 * t605 + t66 * t619) * t404 + (-t220 * t316 - t222 * t317 + (qJD(1) * t157 + t82) * t407 + (t84 + (-t161 - t311) * qJD(1)) * t404 + t745) * t54) * m(4) + t491 * t703 + t490 * t704 - (t404 * t770 + t407 * t769) * t576 / 0.2e1 + ((t404 * t96 + t97 * t407) * qJD(1) + t505) * t535 + ((t98 * t404 + t99 * t407) * qJD(1) + t506) * t536 + qJD(1) * (t404 * t60 - t407 * t59 + (t127 * t404 + t128 * t407) * qJD(1)) / 0.2e1 - qJD(1) * ((t403 * t594 + t406 * t593) * qJD(1) + (t431 * t403 + t406 * t714) * qJD(2)) / 0.2e1 + (-g(1) * (-t401 * t628 + t590) - g(2) * (-t401 * t631 + t592) - g(3) * t735 - (-g(3) * t401 + t720 * (-t384 - t684)) * t403 + t5 * t600 + (-qJD(1) * t531 + t6 * t555 + t715) * t407 + (qJD(1) * t530 + t7 * t555 + t440) * t404 - (t403 * t434 + t406 * t412) * qJD(3) + (t555 * t582 - t610 * t316 - t617 * t374 - t513 + (t557 - t574) * t404) * t43 + ((-t311 - t620) * t584 - t575 - t617 * t317 - t618 * t316 + t745) * t41 + (-t317 * t610 + t374 * t618 - t406 * t573 + t407 * t557 + t314 - t449) * t42) * m(5) + t747 * t710 + t748 * t711 + t749 * t709 + qJDD(1) * (-t127 * t407 + t128 * t404) / 0.2e1 + ((qJD(3) * t729 - t793) * t406 + ((-t402 * t754 + t405 * t753 + t796) * t374 + (-t402 * t758 + t405 * t756 - t761) * t317 + (t402 * t757 - t405 * t755 + t797) * t316 + t742 * qJD(3)) * t403) * t702 + ((t403 * t743 + t631 * t763) * qJD(3) + ((qJD(3) * t762 + t750) * t406 + t751) * t407 + (t290 * t754 + t291 * t753) * t374 + (t290 * t758 + t291 * t756) * t317 + (-t290 * t757 - t291 * t755) * t316) * t708 + ((t403 * t744 + t628 * t764) * qJD(3) + ((qJD(3) * t765 + t750) * t406 + t751) * t404 + (-t288 * t754 + t289 * t753) * t374 + (-t288 * t758 + t289 * t756) * t317 + (t288 * t757 - t289 * t755) * t316) * t705 - t768 * t577 / 0.2e1 + (t45 + t769) * t539 + (t44 + t770) * t584 / 0.2e1 + (qJD(1) * t729 + t404 * t771 - t407 * t772) * t701 + (qJD(1) * t727 + t404 * t773 - t407 * t774) * t706 + (qJD(1) * t728 + t404 * t775 - t407 * t776) * t707 - (qJD(1) * t62 + qJD(2) * t505 + qJDD(1) * t133 + t326 * t97 + t327 * t96 + t778) * t407 / 0.2e1 + (qJD(1) * t61 + qJD(2) * t506 + qJDD(1) * t134 + t326 * t99 + t327 * t98 + t779) * t404 / 0.2e1; (t403 * t728 - t406 * t743) * t711 + (t727 * t403 - t406 * t744) * t710 + (t403 * t729 - t406 * t742) * t709 + (t791 * t290 + t731 * t291 - t730 * t407) * t708 + ((qJD(2) * t728 - t767) * t406 + (-qJD(1) * t748 + t743 * qJD(2) + t404 * t776 + t407 * t775) * t403) * t707 + ((qJD(2) * t727 - t766) * t406 + (-qJD(1) * t747 + t744 * qJD(2) + t404 * t774 + t407 * t773) * t403) * t706 + (-t288 * t791 + t289 * t731 - t404 * t730) * t705 + (t785 * t406 + (-t402 * t791 + t405 * t731) * t403) * t702 + ((qJD(2) * t729 - t789) * t406 + (-qJD(1) * t749 + t742 * qJD(2) + t404 * t772 + t407 * t771) * t403) * t701 - (t670 + t671 + t680 - t681 + t668 + t669 + t678 - t679 + t721) * t406 / 0.2e1 + t778 * t634 / 0.2e1 + t779 * t633 / 0.2e1 + t768 * t581 / 0.2e1 + (-(-t42 * t616 + t43 * t615) * t374 - (t41 * t615 + t42 * t517) * t317 - (t41 * t616 + t43 * t517) * t316 - g(1) * t615 - g(2) * t616 + (qJD(2) * t412 + t42 * t687 - t43 * t688 - t6 * t621 - t620 * t7) * t406 + (-g(3) * (-t402 * t790 - t683) + t434 * qJD(2) + (qJD(1) * t433 - t43 * t626 - t611 * t7 + t440) * t407 + (qJD(1) * t746 + t42 * t626 + t6 * t611 - t715) * t404) * t403) * m(5) + (-t65 * (-t200 * t374 - t305 * t317) - t66 * (t202 * t374 - t305 * t316) - t54 * (t200 * t316 + t202 * t317) + (qJD(2) * t416 + t25 * t157 - t26 * t161 + t65 * t84 - t66 * t82) * t406 + (t65 * (-qJD(2) * t157 + t175 * t404) + t66 * (qJD(2) * t161 - t175 * t407) + t20 * t476 + t54 * (-t157 * t584 - t161 * t582 - t404 * t82 + t407 * t84) + (t25 * t404 - t26 * t407 + (t404 * t66 + t407 * t65) * qJD(1)) * t251) * t403 - g(1) * t202 - g(2) * t200 - g(3) * t305) * m(4) + t769 * (t406 * t534 - t554 / 0.2e1) + t770 * (t403 * t539 + t406 * t536); ((-t5 + (t404 * t43 + t407 * t42) * qJD(2) - t316 * t43 - t317 * t42 + g(3)) * t406 + (t404 * t7 + t407 * t6 + (qJD(1) - t374) * (-t404 * t42 + t407 * t43) + (-t316 * t404 - t317 * t407 + qJD(2)) * t41 - t720) * t403) * m(5);];
tau = t1;
