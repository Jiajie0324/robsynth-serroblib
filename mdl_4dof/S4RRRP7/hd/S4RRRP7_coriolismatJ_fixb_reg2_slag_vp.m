% Calculate inertial parameters regressor of coriolis matrix for
% S4RRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [4x1]
%   Generalized joint coordinates (joint angles)
% qJD [4x1]
%   Generalized joint velocities
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d3]';
% 
% Output:
% cmat_reg [(4*4)x(4*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:21
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S4RRRP7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [4 1]), ...
  'S4RRRP7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [4x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [4 1]), ...
  'S4RRRP7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [4x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S4RRRP7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:21:07
% EndTime: 2019-12-31 17:21:12
% DurationCPUTime: 2.13s
% Computational Cost: add. (1626->290), mult. (3809->378), div. (0->0), fcn. (3068->4), ass. (0->231)
t165 = cos(qJ(3));
t166 = cos(qJ(2));
t275 = t166 * pkin(2);
t164 = sin(qJ(2));
t277 = t164 * pkin(6);
t191 = -t275 - t277;
t182 = -pkin(1) + t191;
t112 = t165 * t182;
t163 = sin(qJ(3));
t65 = -t112 + (pkin(5) * t163 + pkin(3)) * t166;
t255 = t163 * t166;
t222 = pkin(5) * t255;
t78 = -t112 + t222;
t214 = -t78 / 0.2e1 + t65 / 0.2e1;
t294 = t214 * t165;
t229 = t164 * qJD(2);
t205 = t165 * t229;
t162 = t166 ^ 2;
t160 = t164 ^ 2;
t257 = t163 * t160;
t117 = t163 * t162 - t257;
t235 = t117 * qJD(1);
t293 = t235 + t205;
t225 = t166 * qJD(3);
t212 = t163 * t225;
t292 = t235 - t212;
t226 = t166 * qJD(2);
t159 = t163 ^ 2;
t161 = t165 ^ 2;
t137 = t161 - t159;
t227 = t166 * qJD(1);
t254 = t164 * t165;
t291 = 0.2e1 * t163 * (qJD(3) + t227) * t254 - t137 * t226;
t250 = t165 * t166;
t221 = pkin(5) * t250;
t79 = t163 * t182 + t221;
t288 = t79 / 0.2e1;
t256 = t163 * t164;
t145 = pkin(3) * t256;
t253 = t165 * qJ(4);
t88 = t145 + (pkin(5) - t253) * t164;
t287 = t88 / 0.2e1;
t189 = t165 * pkin(3) + t163 * qJ(4);
t103 = t189 * t164;
t286 = -t103 / 0.2e1;
t274 = t166 * pkin(6);
t278 = t164 * pkin(2);
t127 = -t274 + t278;
t285 = -t127 / 0.2e1;
t147 = pkin(5) * t256;
t284 = -t147 / 0.2e1;
t283 = -t163 / 0.2e1;
t282 = -t164 / 0.2e1;
t281 = t164 / 0.2e1;
t280 = -t166 / 0.2e1;
t279 = t163 * pkin(2);
t276 = t165 * pkin(5);
t61 = t163 * (-pkin(1) - t277) + (-qJ(4) + t276 - t279) * t166;
t156 = t164 * qJ(4);
t119 = t163 * t127;
t85 = -pkin(5) * t254 + t119;
t67 = t156 + t85;
t157 = t164 * pkin(3);
t252 = t165 * t127;
t84 = t147 + t252;
t68 = -t157 - t84;
t126 = pkin(3) * t163 - t253;
t89 = (pkin(5) + t126) * t166;
t3 = t61 * t67 + t65 * t68 + t88 * t89;
t273 = t3 * qJD(1);
t4 = t88 * t103 - t61 * t78 + t65 * t79;
t272 = t4 * qJD(1);
t201 = qJ(4) * t280;
t5 = t79 * t283 + (t201 + t61 / 0.2e1) * t163 + (pkin(3) * t280 - t214) * t165;
t271 = t5 * qJD(1);
t270 = t61 * t166;
t7 = -t65 * t250 - t68 * t254 + (t164 * t67 + t270) * t163;
t269 = t7 * qJD(1);
t268 = t78 * t166;
t267 = t79 * t166;
t8 = ((t61 - t79) * t165 + (t65 - t78) * t163) * t164;
t266 = t8 * qJD(1);
t265 = t88 * t163;
t264 = t88 * t165;
t263 = t103 * t163;
t120 = -pkin(2) - t189;
t262 = t120 * t163;
t185 = t164 * t89 + t166 * t88;
t13 = -t61 * t164 + t185 * t165 + t67 * t166;
t261 = t13 * qJD(1);
t14 = t185 * t163 - t65 * t164 + t68 * t166;
t260 = t14 * qJD(1);
t15 = (t164 * t84 - t268) * t165 + (t164 * t85 + t267) * t163;
t259 = t15 * qJD(1);
t16 = t166 * pkin(5) ^ 2 * t164 - t78 * t84 + t79 * t85;
t258 = t16 * qJD(1);
t251 = t165 * t160;
t20 = t267 + (t263 + t264) * t164;
t249 = t20 * qJD(1);
t21 = t103 * t254 - t88 * t256 - t268;
t248 = t21 * qJD(1);
t22 = t78 * t164 + (t84 - 0.2e1 * t147) * t166;
t247 = t22 * qJD(1);
t23 = t85 * t166 + (-t79 + 0.2e1 * t221) * t164;
t246 = t23 * qJD(1);
t25 = t88 * t254 + t270;
t245 = t25 * qJD(1);
t34 = -pkin(5) * t257 - t268;
t244 = t34 * qJD(1);
t35 = -pkin(5) * t251 - t267;
t243 = t35 * qJD(1);
t242 = t78 * qJD(3);
t241 = qJD(2) * t163;
t240 = qJD(2) * t165;
t239 = qJD(3) * t163;
t238 = qJD(3) * t165;
t199 = t159 / 0.2e1 - t161 / 0.2e1;
t106 = t199 * t164;
t237 = t106 * qJD(3);
t118 = t165 * t162 - t251;
t234 = t118 * qJD(1);
t233 = t137 * qJD(3);
t138 = t162 - t160;
t232 = t138 * qJD(1);
t231 = t163 * qJD(4);
t230 = t164 * qJD(1);
t228 = t165 * qJD(4);
t224 = t166 * qJD(4);
t223 = -t157 + t284;
t220 = pkin(1) * t230;
t219 = pkin(1) * t227;
t218 = pkin(6) * t239;
t217 = pkin(6) * t238;
t216 = t279 / 0.2e1;
t215 = t274 / 0.2e1;
t213 = t165 * t230;
t211 = t165 * t225;
t142 = t163 * t238;
t141 = t163 * t240;
t210 = t163 * t228;
t209 = t163 * t227;
t208 = t164 * t226;
t207 = t164 * t231;
t206 = t164 * t227;
t204 = t120 * t281;
t203 = -t254 / 0.2e1;
t202 = -t250 / 0.2e1;
t200 = t284 - t157 / 0.2e1;
t96 = (-0.1e1 / 0.2e1 + t199) * t164;
t198 = t96 * qJD(1) - t141;
t69 = t106 * qJD(1) - t141;
t124 = t163 * qJD(1) * t251;
t53 = t106 * qJD(2) + t124;
t144 = -qJD(3) + t227;
t196 = t160 * t142;
t195 = t163 * t213;
t194 = t163 * t205;
t192 = t126 * t281 + t287;
t190 = 0.2e1 * t194;
t188 = -t120 * t166 + t277;
t187 = t68 * t163 + t67 * t165;
t186 = -t84 * t163 + t85 * t165;
t108 = -t119 / 0.2e1;
t129 = t163 * t215;
t10 = t129 - t263 / 0.2e1 - t264 / 0.2e1 - t156 + t108 + (t262 / 0.2e1 + (-t126 / 0.2e1 + pkin(5) / 0.2e1) * t165) * t164;
t47 = t120 * t165 + t126 * t163;
t184 = -t10 * qJD(1) + t47 * qJD(2);
t178 = t204 + t215;
t171 = t286 + t178;
t175 = t192 * t163;
t12 = t175 + (t285 + t171) * t165 + t223;
t48 = t126 * t165 - t262;
t183 = -t12 * qJD(1) + t48 * qJD(2);
t181 = t144 * t164;
t180 = t215 - t278 / 0.2e1;
t179 = -t67 * qJ(4) / 0.2e1 + t68 * pkin(3) / 0.2e1;
t44 = (t285 + t180) * t165;
t177 = pkin(2) * t241 - t44 * qJD(1);
t107 = t119 / 0.2e1;
t130 = -pkin(6) * t255 / 0.2e1;
t43 = t164 * t216 + t107 + t130;
t176 = pkin(2) * t240 - t43 * qJD(1);
t167 = (t294 + (-t61 / 0.2e1 + t288) * t163) * pkin(6) + t103 * t120 / 0.2e1 + t126 * t287;
t2 = t167 + t179;
t174 = -t120 * t126 * qJD(2) - t2 * qJD(1);
t18 = t265 / 0.2e1 + (t285 + t178) * t165 + t200;
t173 = t18 * qJD(1) + t120 * t241;
t93 = t165 * t181;
t153 = t161 * t160;
t115 = t159 * t160 - t153;
t63 = -t115 * qJD(1) + t190;
t82 = -t137 * qJD(2) + 0.2e1 * t195;
t172 = t117 * qJD(2) + t164 * t211;
t170 = -t115 * qJD(3) + t166 * t190;
t169 = -t189 * qJD(3) + t228;
t123 = t162 + t153;
t168 = t123 * qJD(1) + t194 - t225;
t151 = -t230 / 0.2e1;
t150 = t230 / 0.2e1;
t149 = t229 / 0.2e1;
t143 = t165 * t227;
t125 = t165 * t207;
t122 = t144 * qJ(4);
t114 = -t143 + t238;
t113 = t144 * t163;
t111 = (t227 - qJD(3) / 0.2e1) * t164;
t109 = t252 / 0.2e1;
t102 = t159 * qJD(2) + t195;
t97 = t159 * t282 + t161 * t281 + t282;
t92 = (t213 + t241) * t166;
t91 = (-t163 * t230 + t240) * t166;
t90 = t163 * t181;
t81 = t161 * t208 - t196;
t80 = t159 * t208 + t196;
t77 = t163 * t229 - t234;
t76 = -t211 + t234;
t75 = t79 * qJD(3);
t74 = t163 * t93;
t64 = -t118 * qJD(2) + t164 * t212;
t52 = -t161 * t206 - t237;
t51 = -t159 * t206 + t237;
t33 = t180 * t165 + t109 + t147;
t32 = t130 + t108 + (t216 + t276) * t164;
t31 = -t237 + (t161 * t230 + t141) * t166;
t30 = t237 + (t159 * t230 - t141) * t166;
t19 = pkin(6) * t202 + t120 * t203 - t265 / 0.2e1 - t252 / 0.2e1 + t200;
t11 = t171 * t165 + t109 + t175 - t223;
t9 = t129 + t156 + pkin(5) * t203 + t107 - t192 * t165 + (t204 + t286) * t163;
t6 = t61 * t283 + pkin(3) * t202 + (t288 + t201) * t163 + t294;
t1 = t167 - t179;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, t138 * qJD(2), 0, -t208, 0, 0, -pkin(1) * t229, -pkin(1) * t226, 0, 0, t81, -t170, t64, t80, t172, -t208, -t22 * qJD(2) - t35 * qJD(3), t23 * qJD(2) + t34 * qJD(3), -t15 * qJD(2), t16 * qJD(2), t81, t64, t170, -t208, -t172, t80, t14 * qJD(2) + t20 * qJD(3) - t160 * t210, -t7 * qJD(2) - t8 * qJD(3) + t166 * t207, -t13 * qJD(2) - t21 * qJD(3) + t123 * qJD(4), t3 * qJD(2) + t4 * qJD(3) - t25 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t206, t232, t226, -t206, -t229, 0, -pkin(5) * t226 - t220, pkin(5) * t229 - t219, 0, 0, t31, -t291, t77, t30, t293, -t111, -t247 + (t191 * t163 - t221) * qJD(2) + t33 * qJD(3), t246 + (t191 * t165 + t222) * qJD(2) + t32 * qJD(3), qJD(2) * t186 - t259, t258 + (-pkin(5) * t275 + pkin(6) * t186) * qJD(2), t31, t77, t291, -t111, -t293, t30, t260 + (-t163 * t188 - t89 * t165) * qJD(2) + t11 * qJD(3) + t97 * qJD(4), qJD(2) * t187 + t6 * qJD(3) - t269, -t261 + (-t89 * t163 + t165 * t188) * qJD(2) + t9 * qJD(3) + t125, t273 + (pkin(6) * t187 + t89 * t120) * qJD(2) + t1 * qJD(3) + t19 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, -t63, t90, t53, t93, t149, t33 * qJD(2) - t243 - t75, t32 * qJD(2) + t242 + t244, 0, 0, -t53, t90, t63, t149, -t93, t53, t11 * qJD(2) + t249 - t75, -t266 + t6 * qJD(2) + (-t164 * t253 + t145) * qJD(3) - t207, t9 * qJD(2) - t224 - t242 - t248, t272 + t1 * qJD(2) + (-t79 * pkin(3) - t78 * qJ(4)) * qJD(3) + t61 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97 * qJD(2) - t124, t90, t168, t19 * qJD(2) + t61 * qJD(3) - t245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206, -t232, 0, t206, 0, 0, t220, t219, 0, 0, t52, 0.2e1 * t74, t76, t51, -t292, t111, t44 * qJD(3) + t247, t43 * qJD(3) - t246, t259, -t258, t52, t76, -0.2e1 * t74, t111, t292, t51, t12 * qJD(3) - t96 * qJD(4) - t260, -t5 * qJD(3) - t165 * t224 + t269, t10 * qJD(3) + t125 + t261, t2 * qJD(3) - t18 * qJD(4) - t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, t233, 0, -t142, 0, 0, -pkin(2) * t239, -pkin(2) * t238, 0, 0, t142, 0, -t233, 0, 0, -t142, -t48 * qJD(3) + t210, 0, -t47 * qJD(3) + t159 * qJD(4), (qJD(3) * t126 - t231) * t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t69, -t82, t114, t69, t113, t151, -t177 - t217, -t176 + t218, 0, 0, -t69, t114, t82, t151, -t113, t69, -t183 - t217, t169 - t271, -t184 - t218, pkin(6) * t169 - t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198, t114, t102, -t173 + t217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, t63, t91, -t53, -t92, t149, -t44 * qJD(2) + t243, -t43 * qJD(2) - t244, 0, 0, t53, t91, -t63, t149, t92, -t53, -t12 * qJD(2) - t249, t5 * qJD(2) + t266, -t10 * qJD(2) - t224 + t248, -qJ(4) * t224 - t2 * qJD(2) - t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, t82, t143, -t69, -t209, t150, t177, t176, 0, 0, t69, t143, -t82, t150, t209, -t69, t183, t271, t184, t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, -t122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96 * qJD(2) + t124, t91, -t168, qJ(4) * t225 + t18 * qJD(2) + t245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, t143, -t102, t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144, t122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t17;
