% Calculate vector of centrifugal and Coriolis load on the joints for
% S5RRRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,theta4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:56
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5RRRPP4_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP4_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP4_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPP4_coriolisvecJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRPP4_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRPP4_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRPP4_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:54:53
% EndTime: 2019-12-31 20:55:40
% DurationCPUTime: 37.97s
% Computational Cost: add. (21573->876), mult. (23577->1089), div. (0->0), fcn. (18429->8), ass. (0->487)
t957 = Icges(4,3) + Icges(5,3);
t499 = qJ(2) + qJ(3);
t465 = pkin(8) + t499;
t455 = cos(t465);
t454 = sin(t465);
t799 = Icges(5,4) * t454;
t353 = Icges(5,2) * t455 + t799;
t444 = Icges(6,5) * t454;
t580 = Icges(6,3) * t455 - t444;
t951 = t353 + t580;
t794 = Icges(6,5) * t455;
t355 = Icges(6,1) * t454 - t794;
t445 = Icges(5,4) * t455;
t357 = Icges(5,1) * t454 + t445;
t956 = t355 + t357;
t348 = Icges(6,3) * t454 + t794;
t501 = sin(qJ(1));
t503 = cos(qJ(1));
t247 = -Icges(6,6) * t503 + t348 * t501;
t752 = t455 * t501;
t754 = t454 * t501;
t787 = Icges(5,6) * t503;
t253 = Icges(5,4) * t752 - Icges(5,2) * t754 - t787;
t955 = -t247 + t253;
t751 = t455 * t503;
t408 = Icges(6,5) * t751;
t753 = t454 * t503;
t786 = Icges(6,6) * t501;
t248 = Icges(6,3) * t753 + t408 + t786;
t581 = -Icges(5,2) * t454 + t445;
t254 = Icges(5,6) * t501 + t503 * t581;
t954 = -t248 + t254;
t584 = Icges(6,1) * t455 + t444;
t255 = -Icges(6,4) * t503 + t501 * t584;
t409 = Icges(5,4) * t754;
t795 = Icges(5,5) * t503;
t257 = Icges(5,1) * t752 - t409 - t795;
t953 = t255 + t257;
t256 = Icges(6,4) * t501 + t503 * t584;
t358 = Icges(5,1) * t455 - t799;
t258 = Icges(5,5) * t501 + t358 * t503;
t935 = t256 + t258;
t468 = sin(t499);
t469 = cos(t499);
t952 = Icges(4,5) * t469 + Icges(5,5) * t455 - Icges(4,6) * t468 - Icges(5,6) * t454;
t949 = -t580 * t501 + t953;
t948 = t957 * t503;
t947 = t358 + t584 - t951;
t946 = t348 - t581 - t956;
t945 = t503 * t951 - t935;
t944 = -t357 * t503 - t954;
t943 = t501 * t956 + t955;
t942 = Icges(4,5) * t468 + Icges(4,6) * t469 + (Icges(5,6) - Icges(6,6)) * t455 + (Icges(6,4) + Icges(5,5)) * t454;
t747 = t469 * t501;
t750 = t468 * t501;
t936 = -Icges(4,5) * t747 - Icges(5,5) * t752 + Icges(4,6) * t750 + Icges(5,6) * t754 + t948;
t941 = t501 * t957 + t952 * t503;
t788 = Icges(4,6) * t503;
t287 = Icges(4,4) * t747 - Icges(4,2) * t750 - t788;
t434 = Icges(4,4) * t750;
t796 = Icges(4,5) * t503;
t289 = Icges(4,1) * t747 - t434 - t796;
t940 = -t253 * t454 + t257 * t455 - t287 * t468 + t289 * t469;
t352 = Icges(6,4) * t455 + Icges(6,6) * t454;
t252 = Icges(6,2) * t501 + t352 * t503;
t939 = t252 + t941;
t800 = Icges(4,4) * t468;
t384 = Icges(4,2) * t469 + t800;
t453 = Icges(4,4) * t469;
t386 = Icges(4,1) * t468 + t453;
t938 = t384 * t468 - t386 * t469 + t951 * t454 - t455 * t956;
t387 = Icges(4,1) * t469 - t800;
t290 = Icges(4,5) * t501 + t387 * t503;
t937 = -t258 * t752 - t290 * t747;
t496 = qJD(2) + qJD(3);
t933 = t947 * t496;
t932 = t946 * t496;
t931 = -t935 * qJD(1) + t943 * t496;
t417 = t496 * t503;
t930 = -t355 * t417 + t944 * t496 + (-t358 * t501 - t255 + t795) * qJD(1);
t416 = t496 * t501;
t929 = -t353 * t416 + t949 * t496 + (-t348 * t503 + t254 - t786) * qJD(1);
t928 = -t945 * t496 + (-t501 * t581 + t247 + t787) * qJD(1);
t582 = -Icges(4,2) * t468 + t453;
t288 = Icges(4,6) * t501 + t503 * t582;
t927 = t254 * t454 + t288 * t468;
t926 = t352 + t952;
t577 = t247 * t454 + t255 * t455;
t925 = -t577 - t940;
t924 = t942 * t503;
t923 = t942 * t501;
t914 = rSges(6,3) + qJ(5);
t922 = t940 * t501;
t921 = t941 * t503 + t937;
t746 = t469 * t503;
t850 = -t258 * t751 - t290 * t746 - t941 * t501;
t920 = -t257 * t751 - t289 * t746 + t936 * t501;
t919 = t936 * t503;
t918 = t938 * t501 + t924;
t917 = -t938 * t503 + t923;
t916 = t939 * qJD(1);
t915 = rSges(6,1) + pkin(4);
t899 = t919 + t922;
t734 = -t248 * t754 - t256 * t752;
t898 = -t254 * t754 - t288 * t750 - t921;
t870 = -t252 * t503 - t734 + t898;
t102 = t248 * t753 + t501 * t252 + t256 * t751;
t749 = t468 * t503;
t897 = -t254 * t753 - t288 * t749 - t850;
t868 = t102 + t897;
t913 = t253 * t753 + t287 * t749 + t920;
t359 = pkin(4) * t454 - qJ(5) * t455;
t360 = rSges(6,1) * t454 - rSges(6,3) * t455;
t705 = t359 + t360;
t363 = rSges(6,1) * t455 + rSges(6,3) * t454;
t912 = pkin(4) * t455 + qJ(5) * t454 + t363;
t911 = t943 * t417 + (-Icges(6,1) * t753 + t408 + t944) * t416 + t947 * qJD(1);
t910 = (-Icges(5,2) * t752 - t409 + t949) * t417 + t945 * t416 + t946 * qJD(1);
t883 = -t384 + t387;
t605 = t883 * t496;
t882 = t386 + t582;
t606 = t882 * t496;
t909 = t942 * qJD(1) + t932 * t454 + t933 * t455 - t468 * t606 + t469 * t605;
t889 = -t386 * t503 - t288;
t619 = (-t387 * t501 + t796) * qJD(1) + t889 * t496;
t888 = -t384 * t503 + t290;
t621 = (-t501 * t582 + t788) * qJD(1) + t888 * t496;
t908 = -t454 * t928 + t455 * t930 - t468 * t621 + t469 * t619 + t916;
t890 = -t386 * t501 - t287;
t618 = qJD(1) * t290 + t890 * t496;
t620 = qJD(1) * t288 + t289 * t496 - t384 * t416;
t251 = -Icges(6,2) * t503 + t352 * t501;
t849 = qJD(1) * t251;
t907 = qJD(1) * t936 + t454 * t929 + t455 * t931 + t468 * t620 - t469 * t618 - t849;
t906 = t938 * qJD(1) + t926 * t496;
t905 = qJD(1) * t925 - t496 * t923 + t916;
t904 = -t849 - t924 * t496 + (-t248 * t454 - t290 * t469 - t455 * t935 - t501 * t952 + t927 + t948) * qJD(1);
t679 = qJD(5) * t503;
t403 = t454 * t679;
t667 = t455 * t417;
t684 = qJD(1) * t503;
t902 = rSges(6,2) * t684 + t914 * t667 + t403;
t226 = t501 * t251;
t101 = t247 * t753 + t255 * t751 + t226;
t901 = qJD(1) * t917 - t101 * t417;
t97 = -t251 * t503 + t501 * t577;
t900 = qJD(1) * t918 + t417 * t97;
t685 = qJD(1) * t501;
t544 = -t417 * t454 - t455 * t685;
t653 = t454 * t685;
t740 = t915 * t544 - t914 * t653 + t902;
t312 = t360 * t501;
t486 = t501 * rSges(6,2);
t631 = pkin(4) * t496 - qJD(5);
t739 = (pkin(4) * t684 + qJ(5) * t416) * t455 + (qJ(5) * t684 - t501 * t631) * t454 - t496 * t312 + (t363 * t503 + t486) * qJD(1);
t490 = t503 * rSges(6,2);
t720 = t501 * t912 - t490;
t857 = t915 * t751 + t914 * t753 + t486;
t713 = t359 * t501 + t312;
t855 = t705 * t503;
t881 = -t501 * t905 + t503 * t907;
t880 = t501 * t904 + t503 * t908;
t879 = t501 * t907 + t503 * t905;
t878 = t501 * t908 - t503 * t904;
t877 = t870 * t416 - t899 * t417 - t900;
t876 = t868 * t416 + t913 * t417 + t901;
t875 = t501 * t906 + t503 * t909;
t874 = t501 * t909 - t503 * t906;
t873 = t454 * t931 - t455 * t929 - t468 * t618 - t469 * t620;
t872 = t454 * t930 + t455 * t928 + t468 * t619 + t469 * t621;
t871 = t97 + t899;
t869 = t101 - t913;
t867 = t287 * t469 + t289 * t468 + t953 * t454 + t955 * t455;
t866 = t288 * t469 + t290 * t468 + t935 * t454 + t954 * t455;
t526 = t883 * qJD(1) + t889 * t416 - t890 * t417;
t833 = qJD(1) * t882 + t416 * t888 - t417 * (-Icges(4,2) * t747 + t289 - t434);
t865 = t454 * t910 + t455 * t911 - t468 * t833 + t526 * t469;
t864 = qJD(1) * t926 - t416 * t924 + t417 * t923;
t863 = 2 * qJD(2);
t826 = t416 / 0.2e1;
t825 = -t417 / 0.2e1;
t500 = sin(qJ(2));
t862 = rSges(3,2) * t500;
t809 = pkin(2) * qJD(2);
t361 = rSges(5,1) * t454 + rSges(5,2) * t455;
t313 = t361 * t501;
t812 = rSges(5,1) * t455;
t364 = -rSges(5,2) * t454 + t812;
t483 = t501 * rSges(5,3);
t159 = -t496 * t313 + (t364 * t503 + t483) * qJD(1);
t292 = t364 * t496;
t600 = qJD(1) * t496;
t390 = t501 * t600;
t669 = t500 * t809;
t441 = t501 * t669;
t425 = qJD(1) * t441;
t502 = cos(qJ(2));
t741 = t502 * (qJD(2) ^ 2);
t671 = pkin(2) * t741;
t565 = -t503 * t671 + t425;
t819 = pkin(3) * t468;
t368 = -t496 * t819 - t669;
t467 = qJD(4) * t503;
t504 = -pkin(7) - pkin(6);
t495 = -qJ(4) + t504;
t693 = t495 * t685 + t467;
t591 = t368 * t501 - t693;
t692 = t504 * t685 + t441;
t458 = t502 * pkin(2) + pkin(1);
t818 = pkin(3) * t469;
t397 = t458 + t818;
t700 = t397 - t458;
t118 = t684 * t700 + t591 + t692;
t491 = t501 * pkin(6);
t815 = pkin(1) - t458;
t201 = (-t503 * t815 - t491) * qJD(1) - t692;
t431 = t503 * pkin(1) + t491;
t398 = t431 * qJD(1);
t736 = -t201 - t398;
t665 = -t118 + t736;
t367 = t417 * t818;
t672 = qJD(1) * qJD(4);
t848 = -t496 * t367 + t390 * t819 + t503 * t672;
t42 = -t292 * t417 + t361 * t390 + (-t159 + t665) * qJD(1) + t565 + t848;
t365 = t416 * t819;
t654 = -t365 - t441 - t467;
t436 = t503 * t458;
t603 = -t501 * t504 + t436;
t274 = t603 - t431;
t370 = t503 * t397;
t690 = -t495 + t504;
t203 = t501 * t690 + t370 - t436;
t265 = rSges(5,1) * t751 - rSges(5,2) * t753 + t483;
t735 = t203 + t265;
t660 = -t274 - t735;
t91 = -t361 * t416 + (t431 - t660) * qJD(1) + t654;
t861 = qJD(1) * t91 + t42;
t659 = t203 + t857;
t598 = -t274 - t659;
t680 = qJD(5) * t501;
t644 = t454 * t680;
t73 = t644 - t705 * t416 + (t431 - t598) * qJD(1) + t654;
t860 = t416 * t73 * (-t818 - t912);
t682 = qJD(2) * t503;
t646 = t500 * t682;
t601 = pkin(2) * t646;
t466 = qJD(4) * t501;
t709 = t503 * t368 + t466;
t117 = t601 + (-t501 * t700 + t503 * t690) * qJD(1) + t709;
t859 = qJD(1) * t117 + t501 * t672;
t493 = t503 * pkin(6);
t430 = pkin(1) * t501 - t493;
t463 = t503 * t504;
t695 = t501 * t458 + t463;
t273 = t430 - t695;
t400 = qJD(1) * t430;
t856 = qJD(1) * t273 - t400;
t482 = Icges(3,4) * t502;
t583 = -Icges(3,2) * t500 + t482;
t423 = Icges(3,1) * t500 + t482;
t443 = qJD(5) * t454;
t704 = -t501 * t397 - t503 * t495;
t202 = t695 + t704;
t666 = t503 * t117 + t501 * t118 - t202 * t684;
t853 = t713 * t416 + t739 * t501 + t740 * t503 + t720 * t684 - t443 + t666;
t852 = t927 + t936;
t293 = rSges(4,1) * t747 - rSges(4,2) * t750 - t503 * rSges(4,3);
t810 = rSges(4,2) * t469;
t388 = rSges(4,1) * t468 + t810;
t546 = -t388 * t417 - t601;
t717 = t273 - t430;
t105 = (-t293 + t717) * qJD(1) + t546;
t484 = t501 * rSges(4,3);
t294 = rSges(4,1) * t746 - rSges(4,2) * t749 + t484;
t716 = -t274 - t294;
t106 = -t388 * t416 - t441 + (t431 - t716) * qJD(1);
t345 = t388 * t501;
t346 = t388 * t503;
t813 = rSges(4,1) * t469;
t389 = -rSges(4,2) * t468 + t813;
t683 = qJD(2) * t501;
t727 = -t273 * t683 + t274 * t682;
t96 = t293 * t416 + t294 * t417 + t727;
t847 = -t105 * (qJD(1) * t345 - t417 * t389) - t106 * (-qJD(1) * t346 - t389 * t416) - t96 * (-t416 * t345 - t346 * t417);
t743 = t501 * t502;
t745 = t500 * t501;
t784 = Icges(3,3) * t503;
t328 = Icges(3,5) * t743 - Icges(3,6) * t745 - t784;
t449 = Icges(3,4) * t745;
t797 = Icges(3,5) * t503;
t332 = Icges(3,1) * t743 - t449 - t797;
t789 = Icges(3,6) * t503;
t330 = Icges(3,4) * t743 - Icges(3,2) * t745 - t789;
t766 = t330 * t500;
t571 = -t332 * t502 + t766;
t121 = -t328 * t503 - t501 * t571;
t420 = Icges(3,5) * t502 - Icges(3,6) * t500;
t419 = Icges(3,5) * t500 + Icges(3,6) * t502;
t549 = qJD(2) * t419;
t801 = Icges(3,4) * t500;
t424 = Icges(3,1) * t502 - t801;
t333 = Icges(3,5) * t501 + t424 * t503;
t331 = Icges(3,6) * t501 + t503 * t583;
t765 = t331 * t500;
t570 = -t333 * t502 + t765;
t840 = -t503 * t549 + (-t420 * t501 + t570 + t784) * qJD(1);
t329 = Icges(3,3) * t501 + t420 * t503;
t686 = qJD(1) * t329;
t839 = qJD(1) * t571 - t501 * t549 + t686;
t421 = Icges(3,2) * t502 + t801;
t566 = t421 * t500 - t423 * t502;
t835 = t566 * qJD(1) + t420 * qJD(2);
t834 = t501 * (-t421 * t503 + t333) - t503 * (-Icges(3,2) * t743 + t332 - t449);
t830 = t501 * t825 + t503 * t826;
t829 = t390 / 0.2e1;
t391 = t503 * t600;
t828 = t391 / 0.2e1;
t827 = -t416 / 0.2e1;
t824 = t417 / 0.2e1;
t823 = t501 / 0.2e1;
t822 = -t503 / 0.2e1;
t820 = pkin(2) * t500;
t817 = -qJD(1) / 0.2e1;
t816 = qJD(1) / 0.2e1;
t814 = rSges(3,1) * t502;
t811 = rSges(3,2) * t502;
t485 = t501 * rSges(3,3);
t657 = -t416 * t202 + t727;
t52 = -qJD(5) * t455 + t416 * t720 + t417 * t659 + t657;
t780 = qJD(1) * t52;
t263 = rSges(5,1) * t752 - rSges(5,2) * t754 - t503 * rSges(5,3);
t65 = t263 * t416 + t417 * t735 + t657;
t779 = qJD(1) * t65;
t776 = t105 * t501;
t691 = rSges(3,2) * t745 + t503 * rSges(3,3);
t335 = rSges(3,1) * t743 - t691;
t426 = rSges(3,1) * t500 + t811;
t647 = t426 * t682;
t177 = -t647 + (-t335 - t430) * qJD(1);
t775 = t177 * t501;
t774 = t177 * t503;
t648 = t426 * t683;
t742 = t502 * t503;
t744 = t500 * t503;
t336 = rSges(3,1) * t742 - rSges(3,2) * t744 + t485;
t708 = t336 + t431;
t178 = qJD(1) * t708 - t648;
t378 = t426 * t503;
t773 = t178 * t378;
t758 = t416 * t469;
t757 = t419 * t501;
t756 = t419 * t503;
t755 = t454 * t496;
t748 = t469 * t496;
t738 = -t501 * t202 + t503 * t203;
t464 = pkin(6) * t684;
t200 = -t601 - t464 + (t501 * t815 - t463) * qJD(1);
t381 = qJD(1) * (-pkin(1) * t685 + t464);
t737 = qJD(1) * t200 + t381;
t731 = -qJ(5) * t755 - t363 * t496 - t455 * t631;
t726 = -t501 * t273 + t503 * t274;
t721 = t501 * t293 + t503 * t294;
t719 = -t501 * t328 - t332 * t742;
t718 = t501 * t329 + t333 * t742;
t652 = t468 * t685;
t418 = pkin(3) * t652;
t712 = t361 * t685 + t418;
t699 = rSges(5,2) * t653 + rSges(5,3) * t684;
t698 = rSges(4,2) * t652 + rSges(4,3) * t684;
t697 = -t421 + t424;
t696 = t423 + t583;
t694 = rSges(3,3) * t684 + t685 * t862;
t681 = qJD(5) * t496;
t181 = -t501 * t566 - t756;
t675 = t181 * qJD(1);
t674 = t420 * qJD(1);
t673 = qJD(1) * qJD(2);
t670 = pkin(3) * t748;
t366 = t417 * t819;
t668 = t502 * t809;
t170 = -t417 * t810 + (-t417 * t468 - t469 * t685) * rSges(4,1) + t698;
t171 = -t496 * t345 + (t389 * t503 + t484) * qJD(1);
t664 = t503 * t170 + t501 * t171 + t293 * t684;
t662 = t503 * t200 + t501 * t201 - t273 * t684;
t661 = t202 + t717;
t656 = -t855 * qJD(1) + t455 * t680;
t655 = t705 * t685 + t418;
t651 = t468 * t684;
t649 = t500 * t684;
t643 = -pkin(1) - t814;
t642 = t503 * t673;
t641 = t685 / 0.2e1;
t640 = t684 / 0.2e1;
t639 = -t683 / 0.2e1;
t636 = t682 / 0.2e1;
t635 = -t388 - t820;
t401 = -t819 - t820;
t634 = t401 + t820;
t633 = -t361 - t819;
t630 = t500 * (-t501 ^ 2 - t503 ^ 2);
t317 = t361 * t503;
t616 = -t416 * t313 - t317 * t417;
t267 = t333 * t743;
t613 = t329 * t503 - t267;
t608 = -qJD(1) * t317 - t364 * t416;
t604 = -t328 + t765;
t599 = t501 * t263 + t503 * t265 + t738;
t597 = -t417 * t912 + t455 * t679 - t367;
t596 = -t292 - t670;
t595 = -t705 - t819;
t326 = t389 * t496;
t592 = -t326 - t668;
t590 = qJD(1) * t313 - t417 * t364 - t367;
t588 = t814 - t862;
t579 = -t105 * t503 - t106 * t501;
t578 = -t178 * t501 - t774;
t179 = t330 * t502 + t332 * t500;
t180 = t331 * t502 + t333 * t500;
t564 = -t670 + t731;
t563 = t466 - t601;
t562 = -t361 + t401;
t561 = t73 * t595;
t157 = rSges(5,1) * t544 - rSges(5,2) * t667 + t699;
t559 = t503 * t157 + t501 * t159 + t263 * t684 + t666;
t558 = t720 * t501 + t857 * t503 + t738;
t377 = t426 * t501;
t557 = -t366 + t563;
t555 = t401 - t705;
t552 = -t668 - t670;
t551 = qJD(2) * t423;
t550 = qJD(2) * t421;
t122 = -t331 * t745 - t613;
t548 = (-t121 * t503 + t122 * t501) * qJD(2);
t123 = -t330 * t744 - t719;
t124 = -t331 * t744 + t718;
t547 = (-t123 * t503 + t124 * t501) * qJD(2);
t175 = (t335 * t501 + t336 * t503) * qJD(2);
t545 = t455 * t681 - t671;
t543 = -t292 + t552;
t539 = -t274 * t501 * t673 + t200 * t682 + t201 * t683 - t273 * t642;
t538 = t330 * t503 - t331 * t501;
t537 = qJD(1) * t202 + t563 + t856;
t536 = t552 + t731;
t534 = t416 * t118 - t391 * t202 + t539;
t533 = (-t500 * t696 + t502 * t697) * qJD(1);
t532 = -t397 - t912;
t530 = (-t500 * t642 - t501 * t741) * pkin(2) + t737;
t193 = qJD(1) * t331 - t501 * t550;
t195 = qJD(1) * t333 - t501 * t551;
t514 = qJD(1) * t328 - qJD(2) * t179 - t193 * t500 + t195 * t502;
t192 = -t503 * t550 + (-t501 * t583 + t789) * qJD(1);
t194 = -t503 * t551 + (-t424 * t501 + t797) * qJD(1);
t513 = -qJD(2) * t180 - t192 * t500 + t194 * t502 + t686;
t393 = t583 * qJD(2);
t394 = t424 * qJD(2);
t512 = qJD(1) * t419 - t393 * t500 + t394 * t502 + (-t421 * t502 - t423 * t500) * qJD(2);
t511 = -t500 * t834 + t538 * t502;
t507 = (t870 * t501 - t871 * t503) * t829 + (t868 * t501 - t869 * t503) * t828 + (t864 * t501 + t865 * t503) * t827 + (t881 * t503 + t880 * t501 + (t869 * t501 + t868 * t503) * qJD(1)) * t826 + (t879 * t503 + t878 * t501 + (t871 * t501 + t870 * t503) * qJD(1)) * t825 + (t865 * t501 - t864 * t503) * t824 + (t875 * qJD(1) + t869 * t390 + t868 * t391 + t880 * t416 + t881 * t417) * t823 + (t874 * qJD(1) + t871 * t390 + t870 * t391 + t878 * t416 + t879 * t417) * t822 + (t454 * t911 - t455 * t910 + t526 * t468 + t469 * t833) * t817 + (t873 * t503 + t872 * t501 + (t867 * t501 + t866 * t503) * qJD(1)) * t816 + t877 * t641 + t876 * t640;
t395 = t588 * qJD(2);
t344 = t503 * t366;
t310 = t634 * t503;
t309 = t634 * t501;
t275 = qJD(1) * t310;
t213 = t416 * t309;
t197 = -qJD(2) * t377 + (t503 * t588 + t485) * qJD(1);
t196 = -t682 * t811 + (-t502 * t685 - t646) * rSges(3,1) + t694;
t182 = -t503 * t566 + t757;
t176 = t182 * qJD(1);
t112 = -t395 * t682 + (-t197 - t398 + t648) * qJD(1);
t111 = -t395 * t683 + t381 + (t196 - t647) * qJD(1);
t95 = t512 * t501 - t503 * t835;
t94 = t501 * t835 + t512 * t503;
t93 = -qJD(2) * t570 + t192 * t502 + t194 * t500;
t92 = -t571 * qJD(2) + t193 * t502 + t195 * t500;
t90 = -t361 * t417 + (-t263 + t661) * qJD(1) + t557;
t85 = -t326 * t417 + t388 * t390 + (-t171 + t736) * qJD(1) + t565;
t84 = qJD(1) * t170 - t326 * t416 - t388 * t391 + t530;
t75 = t176 + t547;
t74 = t548 + t675;
t72 = t403 - t705 * t417 + (t661 - t720) * qJD(1) + t557;
t41 = qJD(1) * t157 - t292 * t416 - t361 * t391 + (-t391 * t468 - t416 * t748) * pkin(3) + t530 + t859;
t36 = t170 * t417 + t171 * t416 + t293 * t391 - t294 * t390 + t539;
t23 = t425 + t545 * t503 + t731 * t417 + t705 * t390 + (-t644 + t665 - t739) * qJD(1) + t848;
t22 = t545 * t501 + t564 * t416 + t595 * t391 + ((-t669 + t443) * t503 + t740) * qJD(1) + t737 + t859;
t14 = t159 * t416 + t263 * t391 + (t117 + t157) * t417 - t735 * t390 + t534;
t13 = t454 * t681 + t739 * t416 + t720 * t391 + (t117 + t740) * t417 - t659 * t390 + t534;
t1 = [(t176 + ((t122 - t267 + (t329 + t766) * t503 + t719) * t503 + t718 * t501) * qJD(2)) * t636 + (t74 - t675 + ((t503 * t604 + t124 - t718) * t503 + (t501 * t604 + t123 + t613) * t501) * qJD(2)) * t639 + (t93 + t94) * t683 / 0.2e1 + (-qJD(2) * t566 + t393 * t502 + t394 * t500 + t454 * t933 - t455 * t932 + t468 * t605 + t469 * t606) * qJD(1) + (t23 * (t490 + t704) + t72 * t693 + t22 * (t370 + t857) + t73 * (t709 + t902) + (-t73 * t915 * t755 + (-t73 * t495 + t532 * t72) * qJD(1)) * t503 + (-t22 * t495 - t72 * t368 + (-t496 * t72 * t914 - t23 * t915) * t455 + (-t23 * t914 + t72 * (rSges(6,1) * t496 + t631)) * t454 + (-t72 * rSges(6,2) + t532 * t73) * qJD(1)) * t501 - (-qJD(1) * t720 + t403 + t537 - t72) * t73 - t561 * t417) * m(6) + (-(-qJD(1) * t263 + t417 * t633 + t537 - t90) * t91 + t42 * (-t263 + t704) - t90 * t591 + t41 * (-t495 * t501 + t265 + t370) + t91 * (t699 + t709) + (t313 * t90 - t317 * t91) * t496 + ((-t90 * rSges(5,3) + t91 * (-t397 - t812)) * t501 + (t90 * (-t364 - t397) - t91 * t495) * t503) * qJD(1)) * m(5) + (t85 * (-t293 - t695) + t105 * t692 + t84 * (t294 + t603) + t106 * (-t601 + t698) + (-t106 * t346 + t388 * t776) * t496 + ((-t105 * rSges(4,3) + t106 * (-t458 - t813)) * t501 + (t105 * (-t389 - t458) - t106 * t504) * t503) * qJD(1) - (-qJD(1) * t293 - t105 + t546 + t856) * t106) * m(4) + (-(-qJD(1) * t335 - t177 - t400 - t647) * t178 + t112 * (t501 * t643 + t493 + t691) + t111 * t708 + t178 * (t464 + t694) + (t426 * t775 - t773) * qJD(2) + ((-pkin(1) - t588) * t774 + (t177 * (-rSges(3,3) - pkin(6)) + t178 * t643) * t501) * qJD(1)) * m(3) + (((t287 * t503 + t288 * t501) * t468 + (t253 * t503 + t254 * t501) * t454 + t898 + t920 + t921) * t417 + (-t289 * t747 + (t287 * t501 - t288 * t503) * t468 - t257 * t752 + (t253 * t501 - t254 * t503) * t454 + t102 - t850 + t899 - t919) * t416 + t901) * t824 - (t92 + t95 + t75) * t682 / 0.2e1 + (t867 - t918) * t829 + (t866 + t917) * t828 + ((t503 * t852 + t850 + t897 + t922) * t417 + (-t226 + t734 + t852 * t501 + (t925 + t939) * t503 + t869 + t937) * t416 + t877 + t900) * t827 + (t872 + t875) * t826 + (-t873 + t874 + t876) * t825 + ((t179 + t181) * t501 + (t180 + t182) * t503) * t673 / 0.2e1; ((-t683 * t756 + t674) * t501 + (t533 + (t501 * t757 + t511) * qJD(2)) * t503) * t639 + ((t500 * t697 + t502 * t696) * qJD(1) + (t538 * t500 + t502 * t834) * qJD(2)) * t817 + t507 + (t501 * t93 - t503 * t92 + (t179 * t501 + t180 * t503) * qJD(1)) * t816 + ((-t682 * t757 - t674) * t503 + (t533 + (t503 * t756 + t511) * qJD(2)) * t501) * t636 + (qJD(1) * t94 + (t501 * (t501 * t840 + t513 * t503) - t503 * (t501 * t839 + t514 * t503) + (t123 * t501 + t124 * t503) * qJD(1)) * t863) * t823 + (qJD(1) * t95 + (t501 * (t513 * t501 - t503 * t840) - t503 * (t514 * t501 - t503 * t839) + (t121 * t501 + t122 * t503) * qJD(1)) * t863) * t822 + (t74 + t548) * t641 + (t75 + t547) * t640 + (-t72 * t597 - t73 * (t275 + t656) - t860 - t72 * (-t309 + t713) * qJD(1) - (-t73 * t649 + (-t501 * t73 - t503 * t72) * t502 * qJD(2)) * pkin(2) + t72 * t655 + t13 * (t558 + t726) + (t536 * t72 + (qJD(1) * t73 + t23) * t555) * t503 + (t22 * t555 + t536 * t73 + t598 * t780) * t501 + (-t213 - (t310 - t855) * t417 - t630 * t809 + t662 + t853) * t52) * m(6) + (-t90 * (-qJD(1) * t309 + t590) - t91 * (-pkin(3) * t758 + t275 + t608) - t65 * (t310 * t417 + t213 + t616) - (-t91 * t649 + ((-t501 * t91 - t503 * t90) * t502 + t65 * t630) * qJD(2)) * pkin(2) + t90 * t712 + t14 * (t599 + t726) + t65 * (t559 + t662) + (t543 * t90 + t562 * t861) * t503 + (t41 * t562 + t543 * t91 + t660 * t779) * t501) * m(5) + (-(-t106 * t649 + (t502 * t579 + t630 * t96) * qJD(2)) * pkin(2) + t36 * (t721 + t726) + t96 * (t662 + t664) + (t105 * t592 + (qJD(1) * t106 + t85) * t635) * t503 + (t84 * t635 + t106 * t592 + (t105 * t388 + t716 * t96) * qJD(1)) * t501 + t847) * m(4) + (0.2e1 * t175 * (t196 * t503 + t197 * t501 + (t335 * t503 - t336 * t501) * qJD(1)) + t578 * t395 + (-t111 * t501 - t112 * t503 + (-t178 * t503 + t775) * qJD(1)) * t426 - (t177 * t377 - t773) * qJD(1) - (t175 * (-t377 * t501 - t378 * t503) + t578 * t588) * qJD(2)) * m(3); t507 + (t13 * t558 + (qJD(1) * t561 + t23 * t595) * t503 + (t22 * t595 + t564 * t73 - t659 * t780) * t501 - t73 * (-pkin(3) * t651 + t656) - t860 + (-qJD(1) * t713 + t503 * t564 - t418 - t597 + t655) * t72 + (pkin(3) * t750 * t416 + t417 * t855 + t344 + t853) * t52) * m(6) + (t14 * t599 + (t596 * t91 - t735 * t779) * t501 - t91 * ((-t651 - t758) * pkin(3) + t608) + (t41 * t501 + t503 * t861) * t633 + (t503 * t596 - t418 - t590 + t712) * t90 + (t365 * t501 + t344 + t559 - t616) * t65) * m(5) + (t36 * t721 + t96 * (-t294 * t685 + t664) + t579 * t326 + (-t84 * t501 - t85 * t503 + (-t106 * t503 + t776) * qJD(1)) * t388 + t847) * m(4); 0.2e1 * (t22 * t822 + t23 * t823 + t52 * t830) * m(6) + 0.2e1 * (t41 * t822 + t42 * t823 + t65 * t830) * m(5); (t22 * t754 + t23 * t753 + t667 * t72 + (t755 - (t416 * t501 + t417 * t503) * t454) * t52 + (-t417 * t72 - t13) * t455) * m(6);];
tauc = t1(:);
