% Calculate vector of inverse dynamics joint torques for
% S5RRRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,theta4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:56
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRRPP4_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP4_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP4_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPP4_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPP4_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPP4_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRPP4_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRPP4_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRPP4_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:54:53
% EndTime: 2019-12-31 20:55:44
% DurationCPUTime: 42.94s
% Computational Cost: add. (23356->973), mult. (25184->1168), div. (0->0), fcn. (19842->8), ass. (0->515)
t1017 = Icges(4,3) + Icges(5,3);
t534 = qJ(2) + qJ(3);
t500 = pkin(8) + t534;
t484 = sin(t500);
t485 = cos(t500);
t843 = Icges(6,5) * t485;
t370 = Icges(6,1) * t484 - t843;
t470 = Icges(5,4) * t485;
t372 = Icges(5,1) * t484 + t470;
t1012 = t370 + t372;
t848 = Icges(5,4) * t484;
t368 = Icges(5,2) * t485 + t848;
t469 = Icges(6,5) * t484;
t618 = Icges(6,3) * t485 - t469;
t1011 = t618 + t368;
t363 = Icges(6,3) * t484 + t843;
t536 = sin(qJ(1));
t538 = cos(qJ(1));
t260 = -Icges(6,6) * t538 + t363 * t536;
t804 = t485 * t536;
t806 = t484 * t536;
t836 = Icges(5,6) * t538;
t266 = Icges(5,4) * t804 - Icges(5,2) * t806 - t836;
t1016 = -t260 + t266;
t803 = t485 * t538;
t430 = Icges(6,5) * t803;
t805 = t484 * t538;
t835 = Icges(6,6) * t536;
t261 = Icges(6,3) * t805 + t430 + t835;
t619 = -Icges(5,2) * t484 + t470;
t267 = Icges(5,6) * t536 + t538 * t619;
t1015 = -t261 + t267;
t622 = Icges(6,1) * t485 + t469;
t268 = -Icges(6,4) * t538 + t536 * t622;
t431 = Icges(5,4) * t806;
t844 = Icges(5,5) * t538;
t270 = Icges(5,1) * t804 - t431 - t844;
t1014 = t268 + t270;
t269 = Icges(6,4) * t536 + t538 * t622;
t373 = Icges(5,1) * t485 - t848;
t271 = Icges(5,5) * t536 + t373 * t538;
t996 = t269 + t271;
t503 = sin(t534);
t504 = cos(t534);
t1013 = Icges(4,5) * t504 + Icges(5,5) * t485 - Icges(4,6) * t503 - Icges(5,6) * t484;
t1010 = -t618 * t536 + t1014;
t1009 = t1017 * t538;
t1008 = t373 + t622 - t1011;
t1007 = t363 - t619 - t1012;
t1006 = t1011 * t538 - t996;
t1005 = -t372 * t538 - t1015;
t1004 = t1012 * t536 + t1016;
t1003 = Icges(4,5) * t503 + Icges(4,6) * t504 + (Icges(5,6) - Icges(6,6)) * t485 + (Icges(6,4) + Icges(5,5)) * t484;
t799 = t504 * t536;
t802 = t503 * t536;
t997 = -Icges(4,5) * t799 - Icges(5,5) * t804 + Icges(4,6) * t802 + Icges(5,6) * t806 + t1009;
t1002 = t1013 * t538 + t1017 * t536;
t837 = Icges(4,6) * t538;
t301 = Icges(4,4) * t799 - Icges(4,2) * t802 - t837;
t458 = Icges(4,4) * t802;
t845 = Icges(4,5) * t538;
t303 = Icges(4,1) * t799 - t458 - t845;
t1001 = -t266 * t484 + t270 * t485 - t301 * t503 + t303 * t504;
t367 = Icges(6,4) * t485 + Icges(6,6) * t484;
t265 = Icges(6,2) * t536 + t367 * t538;
t1000 = t265 + t1002;
t849 = Icges(4,4) * t503;
t402 = Icges(4,2) * t504 + t849;
t482 = Icges(4,4) * t504;
t404 = Icges(4,1) * t503 + t482;
t999 = t1011 * t484 - t1012 * t485 + t402 * t503 - t404 * t504;
t405 = Icges(4,1) * t504 - t849;
t304 = Icges(4,5) * t536 + t405 * t538;
t998 = -t271 * t804 - t304 * t799;
t531 = qJD(2) + qJD(3);
t994 = t1008 * t531;
t993 = t1007 * t531;
t992 = -t996 * qJD(1) + t1004 * t531;
t441 = t531 * t538;
t991 = -t370 * t441 + t1005 * t531 + (-t373 * t536 - t268 + t844) * qJD(1);
t440 = t531 * t536;
t990 = -t368 * t440 + t1010 * t531 + (-t363 * t538 + t267 - t835) * qJD(1);
t989 = -t1006 * t531 + (-t536 * t619 + t260 + t836) * qJD(1);
t620 = -Icges(4,2) * t503 + t482;
t302 = Icges(4,6) * t536 + t538 * t620;
t988 = t267 * t484 + t302 * t503;
t987 = t367 + t1013;
t612 = t260 * t484 + t268 * t485;
t986 = -t612 - t1001;
t985 = t1003 * t538;
t984 = t1003 * t536;
t977 = rSges(6,3) + qJ(5);
t909 = t485 * rSges(6,1) + t484 * rSges(6,3);
t983 = -t484 * qJ(5) - t909;
t982 = t1001 * t536;
t981 = t1002 * t538 + t998;
t798 = t504 * t538;
t903 = -t1002 * t536 - t271 * t803 - t304 * t798;
t980 = -t270 * t803 - t303 * t798 + t997 * t536;
t979 = t997 * t538;
t922 = -t999 * t536 - t985;
t921 = -t999 * t538 + t984;
t978 = t1000 * qJD(1);
t871 = rSges(6,1) + pkin(4);
t783 = -t261 * t806 - t269 * t804;
t959 = -t267 * t806 - t302 * t802 - t981;
t925 = -t265 * t538 - t783 + t959;
t960 = t979 + t982;
t107 = t261 * t805 + t536 * t265 + t269 * t803;
t801 = t503 * t538;
t958 = -t267 * t805 - t302 * t801 - t903;
t923 = t107 + t958;
t976 = t266 * t805 + t301 * t801 + t980;
t975 = t1004 * t441 + (-Icges(6,1) * t805 + t1005 + t430) * t440 + t1008 * qJD(1);
t974 = (-Icges(5,2) * t804 + t1010 - t431) * t441 + t1006 * t440 + t1007 * qJD(1);
t973 = t485 * pkin(4) - t983;
t942 = -t402 + t405;
t651 = t942 * t531;
t941 = t404 + t620;
t652 = t941 * t531;
t972 = t1003 * qJD(1) + t993 * t484 + t994 * t485 - t503 * t652 + t504 * t651;
t950 = -t404 * t538 - t302;
t665 = (-t405 * t536 + t845) * qJD(1) + t950 * t531;
t949 = -t402 * t538 + t304;
t667 = (-t536 * t620 + t837) * qJD(1) + t949 * t531;
t971 = -t989 * t484 + t991 * t485 - t503 * t667 + t504 * t665 + t978;
t951 = -t404 * t536 - t301;
t664 = qJD(1) * t304 + t531 * t951;
t666 = qJD(1) * t302 + t303 * t531 - t402 * t440;
t264 = -Icges(6,2) * t538 + t367 * t536;
t901 = qJD(1) * t264;
t970 = t997 * qJD(1) + t990 * t484 + t992 * t485 + t503 * t666 - t504 * t664 - t901;
t969 = t999 * qJD(1) + t987 * t531;
t968 = t986 * qJD(1) - t984 * t531 + t978;
t967 = -t901 - t985 * t531 + (-t1013 * t536 - t261 * t484 - t304 * t504 - t996 * t485 + t1009 + t988) * qJD(1);
t745 = t977 * t804;
t427 = qJ(5) * t803;
t744 = rSges(6,3) * t803 + t427;
t723 = qJD(5) * t538;
t423 = t484 * t723;
t708 = t485 * t441;
t728 = qJD(1) * t538;
t965 = rSges(6,2) * t728 + rSges(6,3) * t708 + t531 * t427 + t423;
t236 = t536 * t264;
t106 = t260 * t805 + t268 * t803 + t236;
t964 = qJD(1) * t921 - t106 * t441;
t102 = -t538 * t264 + t536 * t612;
t963 = -qJD(1) * t922 + t102 * t441;
t535 = sin(qJ(2));
t962 = rSges(3,2) * t535;
t858 = pkin(2) * qJD(2);
t526 = t536 * pkin(6);
t454 = t538 * pkin(1) + t526;
t537 = cos(qJ(2));
t527 = t537 * pkin(2);
t491 = t527 + pkin(1);
t460 = t538 * t491;
t539 = -pkin(7) - pkin(6);
t648 = -t536 * t539 + t460;
t288 = t648 - t454;
t490 = pkin(3) * t504;
t414 = t490 + t491;
t386 = t538 * t414;
t530 = -qJ(4) + t539;
t735 = -t530 + t539;
t213 = t536 * t735 + t386 - t460;
t521 = t536 * rSges(6,2);
t768 = t871 * t803 + t977 * t805 + t521;
t700 = t213 + t768;
t642 = -t288 - t700;
t724 = qJD(5) * t536;
t685 = t484 * t724;
t869 = pkin(3) * t503;
t380 = t440 * t869;
t711 = t535 * t858;
t465 = t536 * t711;
t502 = qJD(4) * t538;
t694 = -t380 - t465 - t502;
t375 = rSges(6,1) * t484 - rSges(6,3) * t485;
t753 = pkin(4) * t484 - qJ(5) * t485 + t375;
t75 = t685 - t753 * t440 + (t454 - t642) * qJD(1) + t694;
t961 = t440 * t75;
t709 = t484 * t441;
t729 = qJD(1) * t536;
t577 = -t485 * t729 - t709;
t693 = t484 * t729;
t788 = t871 * t577 - t977 * t693 + t965;
t677 = pkin(4) * t531 - qJD(5);
t787 = (pkin(4) * t728 + qJ(5) * t440) * t485 + (qJ(5) * t728 - t536 * t677) * t484 - t375 * t440 + (t538 * t909 + t521) * qJD(1);
t525 = t538 * rSges(6,2);
t769 = t973 * t536 - t525;
t948 = -t871 * t806 + t745;
t947 = -t871 * t805 + t744;
t626 = t490 + t973;
t902 = g(1) * t538 + g(2) * t536;
t913 = t484 * t871;
t940 = t626 * t961 + t902 * t913;
t467 = qJD(5) * t484;
t726 = qJD(2) * t538;
t687 = t535 * t726;
t646 = pkin(2) * t687;
t747 = t414 - t491;
t383 = -t531 * t869 - t711;
t501 = qJD(4) * t536;
t757 = t538 * t383 + t501;
t120 = t646 + (-t536 * t747 + t538 * t735) * qJD(1) + t757;
t738 = t530 * t729 + t502;
t636 = t383 * t536 - t738;
t737 = t539 * t729 + t465;
t121 = t728 * t747 + t636 + t737;
t496 = t538 * t539;
t740 = t536 * t491 + t496;
t752 = -t536 * t414 - t538 * t530;
t212 = t740 + t752;
t707 = t538 * t120 + t536 * t121 - t212 * t728;
t939 = -t440 * t948 + t787 * t536 + t788 * t538 + t769 * t728 - t467 + t707;
t382 = t441 * t490;
t692 = t503 * t729;
t442 = pkin(3) * t692;
t938 = t441 * t973 - t485 * t723 + t729 * t753 + t382 + t442;
t936 = -t968 * t536 + t970 * t538;
t935 = t967 * t536 + t971 * t538;
t934 = t970 * t536 + t968 * t538;
t933 = t971 * t536 - t967 * t538;
t932 = t925 * t440 - t960 * t441 - t963;
t931 = t923 * t440 + t976 * t441 + t964;
t930 = t969 * t536 + t972 * t538;
t929 = t972 * t536 - t969 * t538;
t928 = t992 * t484 - t990 * t485 - t503 * t664 - t504 * t666;
t927 = t991 * t484 + t989 * t485 + t503 * t665 + t504 * t667;
t926 = t102 + t960;
t924 = t106 - t976;
t920 = t1014 * t484 + t1016 * t485 + t301 * t504 + t303 * t503;
t919 = t1015 * t485 + t302 * t504 + t304 * t503 + t996 * t484;
t559 = t942 * qJD(1) + t950 * t440 - t441 * t951;
t885 = qJD(1) * t941 + t440 * t949 - t441 * (-Icges(4,2) * t799 + t303 - t458);
t918 = t974 * t484 + t975 * t485 - t503 * t885 + t559 * t504;
t917 = t987 * qJD(1) - t985 * t440 + t984 * t441;
t307 = rSges(4,1) * t799 - rSges(4,2) * t802 - t538 * rSges(4,3);
t519 = t536 * rSges(4,3);
t308 = rSges(4,1) * t798 - rSges(4,2) * t801 + t519;
t528 = t538 * pkin(6);
t453 = pkin(1) * t536 - t528;
t287 = t453 - t740;
t727 = qJD(2) * t536;
t776 = -t287 * t727 + t288 * t726;
t101 = t307 * t440 + t308 * t441 + t776;
t860 = rSges(4,2) * t504;
t406 = rSges(4,1) * t503 + t860;
t580 = -t406 * t441 - t646;
t765 = t287 - t453;
t697 = -t307 + t765;
t110 = qJD(1) * t697 + t580;
t764 = -t288 - t308;
t111 = -t406 * t440 - t465 + (t454 - t764) * qJD(1);
t360 = t406 * t536;
t361 = t406 * t538;
t483 = t504 * rSges(4,1);
t906 = -rSges(4,2) * t503 + t483;
t916 = -t110 * (qJD(1) * t360 - t441 * t906) - t101 * (-t440 * t360 - t361 * t441) - t111 * (-qJD(1) * t361 - t440 * t906);
t876 = t440 / 0.2e1;
t875 = -t441 / 0.2e1;
t376 = rSges(5,1) * t484 + rSges(5,2) * t485;
t329 = t376 * t536;
t518 = t536 * rSges(5,3);
t473 = t485 * rSges(5,1);
t908 = -rSges(5,2) * t484 + t473;
t165 = -t531 * t329 + (t538 * t908 + t518) * qJD(1);
t306 = t908 * t531;
t718 = qJD(1) * qJD(2);
t488 = t536 * t718;
t717 = qJD(1) * qJD(3);
t312 = t536 * t717 + t488 + (-qJDD(2) - qJDD(3)) * t538;
t418 = -qJDD(2) * t538 + t488;
t870 = pkin(2) * t535;
t384 = t418 * t870;
t793 = t537 * qJD(2) ^ 2;
t714 = pkin(2) * t793;
t598 = -t538 * t714 + t384;
t277 = rSges(5,1) * t804 - rSges(5,2) * t806 - t538 * rSges(5,3);
t702 = t212 + t765;
t643 = -t277 + t702;
t864 = pkin(1) - t491;
t209 = (-t538 * t864 - t526) * qJD(1) - t737;
t415 = t454 * qJD(1);
t785 = -t209 - t415;
t706 = -t121 + t785;
t716 = qJD(1) * qJD(4);
t887 = qJDD(4) * t536 + t312 * t869 - t531 * t382 + t538 * t716;
t24 = -t306 * t441 + t312 * t376 + t643 * qJDD(1) + (-t165 + t706) * qJD(1) + t598 + t887;
t279 = rSges(5,1) * t803 - rSges(5,2) * t805 + t518;
t784 = t213 + t279;
t701 = -t288 - t784;
t91 = -t376 * t440 + (t454 - t701) * qJD(1) + t694;
t915 = qJD(1) * t91 + t24;
t420 = qJD(1) * t453;
t911 = qJD(1) * t287 - t420;
t517 = Icges(3,4) * t537;
t621 = -Icges(3,2) * t535 + t517;
t447 = Icges(3,1) * t535 + t517;
t905 = t988 + t997;
t795 = t536 * t537;
t797 = t535 * t536;
t833 = Icges(3,3) * t538;
t344 = Icges(3,5) * t795 - Icges(3,6) * t797 - t833;
t478 = Icges(3,4) * t797;
t846 = Icges(3,5) * t538;
t348 = Icges(3,1) * t795 - t478 - t846;
t838 = Icges(3,6) * t538;
t346 = Icges(3,4) * t795 - Icges(3,2) * t797 - t838;
t818 = t346 * t535;
t606 = -t348 * t537 + t818;
t124 = -t538 * t344 - t536 * t606;
t444 = Icges(3,5) * t537 - Icges(3,6) * t535;
t443 = Icges(3,5) * t535 + Icges(3,6) * t537;
t581 = qJD(2) * t443;
t850 = Icges(3,4) * t535;
t448 = Icges(3,1) * t537 - t850;
t349 = Icges(3,5) * t536 + t448 * t538;
t347 = Icges(3,6) * t536 + t538 * t621;
t817 = t347 * t535;
t605 = -t349 * t537 + t817;
t894 = -t538 * t581 + (-t444 * t536 + t605 + t833) * qJD(1);
t345 = Icges(3,3) * t536 + t444 * t538;
t731 = qJD(1) * t345;
t893 = qJD(1) * t606 - t536 * t581 + t731;
t445 = Icges(3,2) * t537 + t850;
t599 = t445 * t535 - t447 * t537;
t889 = t599 * qJD(1) + t444 * qJD(2);
t888 = qJD(1) * t120 + qJDD(1) * t213 - qJDD(4) * t538 + t536 * t716;
t886 = t536 * (-t445 * t538 + t349) - t538 * (-Icges(3,2) * t795 + t348 - t478);
t882 = t536 * t875 + t538 * t876;
t417 = qJDD(2) * t536 + t538 * t718;
t311 = qJDD(3) * t536 + t538 * t717 + t417;
t881 = t311 / 0.2e1;
t880 = t312 / 0.2e1;
t879 = t417 / 0.2e1;
t878 = t418 / 0.2e1;
t877 = -t440 / 0.2e1;
t874 = t441 / 0.2e1;
t873 = t536 / 0.2e1;
t872 = -t538 / 0.2e1;
t866 = -qJD(1) / 0.2e1;
t865 = qJD(1) / 0.2e1;
t863 = rSges(3,1) * t537;
t862 = rSges(3,2) * t537;
t520 = t536 * rSges(3,3);
t856 = qJDD(1) / 0.2e1;
t698 = -t440 * t212 + t776;
t52 = -qJD(5) * t485 + t440 * t769 + t441 * t700 + t698;
t829 = qJD(1) * t52;
t71 = t277 * t440 + t441 * t784 + t698;
t828 = qJD(1) * t71;
t824 = t110 * t536;
t449 = rSges(3,1) * t535 + t862;
t688 = t449 * t726;
t736 = rSges(3,2) * t797 + t538 * rSges(3,3);
t351 = rSges(3,1) * t795 - t736;
t756 = -t351 - t453;
t184 = qJD(1) * t756 - t688;
t823 = t184 * t536;
t822 = t184 * t538;
t794 = t537 * t538;
t796 = t535 * t538;
t352 = rSges(3,1) * t794 - rSges(3,2) * t796 + t520;
t252 = t352 + t454;
t185 = qJD(1) * t252 - t449 * t727;
t394 = t449 * t538;
t821 = t185 * t394;
t810 = t417 * t535;
t809 = t440 * t504;
t808 = t443 * t536;
t807 = t443 * t538;
t800 = t504 * t531;
t786 = -t536 * t212 + t538 * t213;
t780 = -t485 * t677 + t531 * t983;
t775 = -t536 * t287 + t538 * t288;
t770 = t536 * t307 + t538 * t308;
t767 = -t536 * t344 - t348 * t794;
t766 = t536 * t345 + t349 * t794;
t760 = t376 * t729 + t442;
t497 = pkin(6) * t728;
t749 = qJD(1) * (-pkin(1) * t729 + t497) + qJDD(1) * t454;
t746 = rSges(5,2) * t693 + rSges(5,3) * t728;
t743 = rSges(4,2) * t692 + rSges(4,3) * t728;
t742 = -t445 + t448;
t741 = t447 + t621;
t739 = rSges(3,3) * t728 + t729 * t962;
t730 = qJD(1) * t444;
t725 = qJD(5) * t531;
t188 = -t536 * t599 - t807;
t719 = t188 * qJD(1);
t713 = pkin(3) * t802;
t712 = pkin(3) * t800;
t381 = t441 * t869;
t710 = t537 * t858;
t176 = -t441 * t860 + (-t441 * t503 - t504 * t729) * rSges(4,1) + t743;
t177 = -t531 * t360 + (t538 * t906 + t519) * qJD(1);
t705 = t538 * t176 + t536 * t177 + t307 * t728;
t208 = -t646 - t497 + (t536 * t864 - t496) * qJD(1);
t703 = t538 * t208 + t536 * t209 - t287 * t728;
t696 = qJD(1) * t947 + t485 * t724;
t691 = t503 * t728;
t689 = t535 * t728;
t684 = -pkin(1) - t863;
t683 = t729 / 0.2e1;
t682 = t728 / 0.2e1;
t681 = -t727 / 0.2e1;
t680 = t727 / 0.2e1;
t679 = -t726 / 0.2e1;
t678 = t726 / 0.2e1;
t579 = -t406 - t870;
t578 = -t376 - t869;
t676 = t535 * (-t536 ^ 2 - t538 ^ 2);
t333 = t376 * t538;
t662 = -t440 * t329 - t333 * t441;
t281 = t349 * t795;
t659 = t538 * t345 - t281;
t654 = -qJD(1) * t333 - t440 * t908;
t650 = -t344 + t817;
t649 = -t530 * t536 + t386;
t645 = t536 * t277 + t538 * t279 + t786;
t644 = qJD(1) * t208 + qJDD(1) * t288 + t749;
t640 = -t306 - t712;
t639 = -t753 - t869;
t342 = t906 * t531;
t638 = -t342 - t710;
t637 = t908 + t490;
t421 = -t869 - t870;
t635 = qJD(1) * t329 - t441 * t908 - t382;
t452 = rSges(2,1) * t538 - rSges(2,2) * t536;
t450 = rSges(2,1) * t536 + rSges(2,2) * t538;
t451 = t863 - t962;
t187 = t347 * t537 + t349 * t535;
t582 = qJD(2) * t445;
t199 = -t538 * t582 + (-t536 * t621 + t838) * qJD(1);
t583 = qJD(2) * t447;
t201 = -t538 * t583 + (-t448 * t536 + t846) * qJD(1);
t548 = -qJD(2) * t187 - t199 * t535 + t201 * t537 + t731;
t186 = t346 * t537 + t348 * t535;
t200 = qJD(1) * t347 - t536 * t582;
t202 = qJD(1) * t349 - t536 * t583;
t549 = qJD(1) * t344 - qJD(2) * t186 - t200 * t535 + t202 * t537;
t630 = t536 * (t536 * t894 + t548 * t538) - t538 * (t536 * t893 + t549 * t538);
t629 = t536 * (t548 * t536 - t538 * t894) - t538 * (t549 * t536 - t538 * t893);
t596 = t501 - t646;
t589 = -t381 + t596;
t627 = t702 - t769;
t74 = qJD(1) * t627 - t441 * t753 + t423 + t589;
t628 = t536 * t75 + t538 * t74;
t617 = -t110 * t538 - t111 * t536;
t125 = -t347 * t797 - t659;
t616 = -t124 * t538 + t125 * t536;
t126 = -t346 * t796 - t767;
t127 = -t347 * t796 + t766;
t615 = -t126 * t538 + t127 * t536;
t614 = -t185 * t536 - t822;
t203 = -t726 * t862 + (-t537 * t729 - t687) * rSges(3,1) + t739;
t393 = t449 * t536;
t204 = -qJD(2) * t393 + (t451 * t538 + t520) * qJD(1);
t613 = t203 * t538 + t204 * t536;
t604 = t351 * t536 + t352 * t538;
t600 = t445 * t537 + t447 * t535;
t597 = -t712 + t780;
t595 = -t376 + t421;
t594 = t208 * t726 + t209 * t727 - t417 * t287 - t288 * t418;
t593 = t75 * t639;
t163 = rSges(5,1) * t577 - rSges(5,2) * t708 + t746;
t591 = t538 * t163 + t536 * t165 + t277 * t728 + t707;
t590 = t769 * t536 + t768 * t538 + t786;
t587 = t421 - t753;
t584 = -t710 - t712;
t576 = t440 * t121 - t311 * t212 + t594;
t575 = -t306 + t584;
t571 = t346 * t538 - t347 * t536;
t570 = qJD(1) * t212 + t596 + t911;
t569 = t584 + t780;
t567 = qJDD(5) * t484 + t485 * t725 - t714;
t566 = (-t535 * t741 + t537 * t742) * qJD(1);
t564 = -t414 - t973;
t562 = (-t536 * t793 - t810) * pkin(2) + t644;
t409 = t621 * qJD(2);
t410 = t448 * qJD(2);
t547 = qJD(1) * t443 - qJD(2) * t600 - t409 * t535 + t410 * t537;
t546 = -t535 * t886 + t571 * t537;
t542 = (t536 * t923 - t538 * t924) * t881 + (t536 * t925 - t538 * t926) * t880 + (t536 * t917 + t538 * t918) * t877 + (t936 * t538 + t935 * t536 + (t536 * t924 + t538 * t923) * qJD(1)) * t876 + (t934 * t538 + t933 * t536 + (t536 * t926 + t538 * t925) * qJD(1)) * t875 + (t536 * t918 - t538 * t917) * t874 + (qJD(1) * t930 + qJDD(1) * t921 + t311 * t923 + t312 * t924 + t440 * t935 + t441 * t936) * t873 + (qJD(1) * t929 + qJDD(1) * t922 + t311 * t925 + t312 * t926 + t440 * t933 + t441 * t934) * t872 + (t975 * t484 - t974 * t485 + t559 * t503 + t504 * t885) * t866 + (t928 * t538 + t927 * t536 + (t536 * t920 + t538 * t919) * qJD(1)) * t865 + (t536 * t919 - t538 * t920) * t856 + t932 * t683 + t931 * t682;
t411 = t451 * qJD(2);
t396 = t538 * t421;
t395 = t536 * t421;
t359 = t538 * t381;
t326 = pkin(2) * t796 + t396;
t325 = pkin(2) * t797 + t395;
t289 = qJD(1) * t326;
t224 = t440 * t325;
t189 = -t538 * t599 + t808;
t183 = t189 * qJD(1);
t182 = t604 * qJD(2);
t99 = qJD(1) * t203 + qJDD(1) * t352 - t411 * t727 - t417 * t449 + t749;
t98 = -t411 * t726 + t418 * t449 + t756 * qJDD(1) + (-t204 - t415) * qJD(1);
t97 = t547 * t536 - t538 * t889;
t96 = t536 * t889 + t547 * t538;
t95 = -qJD(2) * t605 + t199 * t537 + t201 * t535;
t94 = -t606 * qJD(2) + t200 * t537 + t202 * t535;
t90 = qJD(1) * t643 - t376 * t441 + t589;
t79 = qJD(2) * t615 + t183;
t78 = qJD(2) * t616 + t719;
t62 = qJD(1) * t176 + qJDD(1) * t308 - t311 * t406 - t342 * t440 + t562;
t61 = t312 * t406 - t342 * t441 + t697 * qJDD(1) + (-t177 + t785) * qJD(1) + t598;
t36 = t176 * t441 + t177 * t440 + t307 * t311 - t308 * t312 + t594;
t25 = qJD(1) * t163 + qJDD(1) * t279 - t306 * t440 - t311 * t376 + (-t311 * t503 - t440 * t800) * pkin(3) + t562 + t888;
t16 = t384 + t780 * t441 + t753 * t312 + t567 * t538 + t627 * qJDD(1) + (-t685 + t706 - t787) * qJD(1) + t887;
t15 = -pkin(2) * t810 + t768 * qJDD(1) + t567 * t536 + t597 * t440 + t639 * t311 + (t423 + t788) * qJD(1) + t644 + t888;
t14 = t165 * t440 + t277 * t311 + (t120 + t163) * t441 - t784 * t312 + t576;
t11 = t484 * t725 - qJDD(5) * t485 + t787 * t440 + t769 * t311 + (t120 + t788) * t441 - t700 * t312 + t576;
t1 = [-m(2) * (-g(1) * t450 + g(2) * t452) + (t183 + ((t125 - t281 + (t345 + t818) * t538 + t767) * t538 + t766 * t536) * qJD(2)) * t678 + (t189 + t187) * t879 + (t188 + t186) * t878 + (-t719 + ((t538 * t650 + t127 - t766) * t538 + (t536 * t650 + t126 + t659) * t536) * qJD(2) + t78) * t681 + (t95 + t96) * t680 + (((t301 * t538 + t302 * t536) * t503 + (t266 * t538 + t267 * t536) * t484 + t959 + t980 + t981) * t441 + (-t303 * t799 + (t301 * t536 - t302 * t538) * t503 - t270 * t804 + (t266 * t536 - t267 * t538) * t484 + t107 - t903 + t960 - t979) * t440 + t964) * t874 + (t94 + t97 + t79) * t679 + (-qJD(2) * t599 + t409 * t537 + t410 * t535 + t994 * t484 - t993 * t485 + t503 * t651 + t504 * t652) * qJD(1) + (t74 * t738 + t75 * (-t709 * t871 + t757 + t965) + (-t467 - t383 + (-t485 * t977 + t913) * t531) * t536 * t74 + ((-t75 * t530 + t564 * t74) * t538 + (-t74 * rSges(6,2) + t564 * t75) * t536) * qJD(1) - (-qJD(1) * t769 + t423 + t570 - t74) * t75 + (t15 - g(2)) * (t649 + t768) + (t16 - g(1)) * (t525 + (-t484 * t977 - t485 * t871) * t536 + t752) - t593 * t441) * m(6) + (-(-qJD(1) * t277 + t441 * t578 + t570 - t90) * t91 - t90 * t636 + t91 * (t746 + t757) + (t329 * t90 - t333 * t91) * t531 + ((-t90 * rSges(5,3) + t91 * (-t414 - t473)) * t536 + (t90 * (-t414 - t908) - t91 * t530) * t538) * qJD(1) + (t25 - g(2)) * (t279 + t649) + (t24 - g(1)) * (-t277 + t752)) * m(5) + (-(-qJD(1) * t307 - t110 + t580 + t911) * t111 + t110 * t737 + t111 * (-t646 + t743) + (-t111 * t361 + t406 * t824) * t531 + ((-t110 * rSges(4,3) + t111 * (-t491 - t483)) * t536 + (t110 * (-t491 - t906) - t111 * t539) * t538) * qJD(1) + (t62 - g(2)) * (t308 + t648) + (t61 - g(1)) * (-t307 - t740)) * m(4) + (t185 * (t497 + t739) + (t449 * t823 - t821) * qJD(2) + ((-pkin(1) - t451) * t822 + (t184 * (-rSges(3,3) - pkin(6)) + t185 * t684) * t536) * qJD(1) - (-qJD(1) * t351 - t184 - t420 - t688) * t185 + (t99 - g(2)) * t252 + (t98 - g(1)) * (t684 * t536 + t528 + t736)) * m(3) + (t919 + t921) * t881 + (t920 + t922) * t880 + ((t538 * t905 + t903 + t958 + t982) * t441 + (-t236 + t783 + t905 * t536 + (t986 + t1000) * t538 + t924 + t998) * t440 + t932 + t963) * t877 + (t927 + t930) * t876 + (t600 + m(2) * (t450 ^ 2 + t452 ^ 2) + Icges(2,3) + t402 * t504 + t404 * t503 + t1011 * t485 + t1012 * t484) * qJDD(1) + (-t928 + t929 + t931) * t875; ((-t726 * t808 - t730) * t538 + (t566 + (t538 * t807 + t546) * qJD(2)) * t536) * t678 + ((-t727 * t807 + t730) * t536 + (t566 + (t536 * t808 + t546) * qJD(2)) * t538) * t681 + ((t535 * t742 + t537 * t741) * qJD(1) + (t571 * t535 + t537 * t886) * qJD(2)) * t866 + (t536 * t95 - t538 * t94 + (t186 * t536 + t187 * t538) * qJD(1)) * t865 + (-t186 * t538 + t187 * t536) * t856 + t542 + ((t124 * t536 + t125 * t538) * qJD(1) + t629) * t679 + ((t126 * t536 + t127 * t538) * qJD(1) + t630) * t680 + t79 * t682 + t78 * t683 + (qJD(1) * t97 + qJD(2) * t629 + qJDD(1) * t188 + t124 * t418 + t125 * t417) * t872 + (qJD(1) * t96 + qJD(2) * t630 + qJDD(1) * t189 + t126 * t418 + t127 * t417) * t873 + t616 * t878 + t615 * t879 + (t11 * (t590 + t775) + (qJD(1) * t75 + t16) * t587 * t538 + (t15 * t587 + t569 * t75 + t642 * t829) * t536 - t75 * (t289 + t696) - (-qJD(2) * t537 * t628 - t75 * t689) * pkin(2) - g(1) * (t396 + t744) - g(2) * (t395 + t745) - g(3) * (t527 + t626) + (t569 * t538 - (-t325 - t948) * qJD(1) + t938) * t74 + (t703 - t224 - (t326 + t947) * t441 - t676 * t858 + t939) * t52 + t940) * m(6) + (t90 * t760 + t14 * (t645 + t775) + t71 * (t591 + t703) + (t575 * t90 + t595 * t915) * t538 + (t25 * t595 + t575 * t91 + t701 * t828) * t536 - g(1) * (t396 - t333) - g(2) * (t395 - t329) - g(3) * (t527 + t637) - t90 * (-qJD(1) * t325 + t635) - t91 * (-pkin(3) * t809 + t289 + t654) - t71 * (t326 * t441 + t224 + t662) - (-t91 * t689 + ((-t536 * t91 - t538 * t90) * t537 + t71 * t676) * qJD(2)) * pkin(2)) * m(5) + (t36 * (t770 + t775) + t101 * (t703 + t705) + (t110 * t638 + (qJD(1) * t111 + t61) * t579) * t538 + (t62 * t579 + t111 * t638 + (t101 * t764 + t110 * t406) * qJD(1)) * t536 - g(3) * (t906 + t527) - t902 * t579 - (-t111 * t689 + (t101 * t676 + t537 * t617) * qJD(2)) * pkin(2) + t916) * m(4) + (g(1) * t394 + g(2) * t393 - g(3) * t451 - (t184 * t393 - t821) * qJD(1) - (t182 * (-t393 * t536 - t394 * t538) + t614 * t451) * qJD(2) + (qJD(2) * t613 + t351 * t417 - t352 * t418) * t604 + t182 * ((t351 * t538 - t352 * t536) * qJD(1) + t613) + t614 * t411 + (-t99 * t536 - t98 * t538 + (-t185 * t538 + t823) * qJD(1)) * t449) * m(3); t542 + (-t75 * (-pkin(3) * t691 + t696) + t11 * t590 + (qJD(1) * t593 + t16 * t639) * t538 + (t15 * t639 + t597 * t75 - t700 * t829) * t536 - g(1) * (-pkin(3) * t801 + t744) - g(2) * (-t713 + t745) - g(3) * t626 + (qJD(1) * t948 + t538 * t597 - t442 + t938) * t74 + (t713 * t440 - t441 * t947 + t359 + t939) * t52 + t940) * m(6) + (-t91 * ((-t691 - t809) * pkin(3) + t654) + t14 * t645 + (t640 * t91 - t784 * t828) * t536 - g(3) * t637 + (t380 * t536 + t359 + t591 - t662) * t71 + (t538 * t640 - t442 - t635 + t760) * t90 + (t25 * t536 + t538 * t915 - t902) * t578) * m(5) + (t36 * t770 + t101 * (-t308 * t729 + t705) + t617 * t342 + (-t62 * t536 - t61 * t538 + (-t111 * t538 + t824) * qJD(1)) * t406 + g(1) * t361 + g(2) * t360 - g(3) * t906 + t916) * m(4); (-m(5) - m(6)) * (g(1) * t536 - g(2) * t538) + 0.2e1 * (t15 * t872 + t16 * t873 + t52 * t882) * m(6) + 0.2e1 * (t24 * t873 + t25 * t872 + t71 * t882) * m(5); ((-t441 * t74 + t531 * t628 + g(3) - t11 - t961) * t485 + (t15 * t536 + t16 * t538 + (-t440 * t536 - t441 * t538 + t531) * t52 - t902) * t484) * m(6);];
tau = t1;
