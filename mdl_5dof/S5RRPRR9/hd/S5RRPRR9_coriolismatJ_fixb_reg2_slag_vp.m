% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:22
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR9_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR9_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR9_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR9_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:22:04
% EndTime: 2019-12-31 20:22:21
% DurationCPUTime: 10.91s
% Computational Cost: add. (15823->495), mult. (30736->694), div. (0->0), fcn. (34688->8), ass. (0->387)
t414 = sin(pkin(9));
t417 = sin(qJ(2));
t419 = cos(qJ(2));
t629 = cos(pkin(9));
t476 = t629 * t419;
t391 = t414 * t417 - t476;
t657 = -t391 / 0.2e1;
t418 = cos(qJ(4));
t407 = t414 * pkin(2) + pkin(7);
t643 = pkin(8) + t407;
t388 = t643 * t418;
t415 = sin(qJ(5));
t416 = sin(qJ(4));
t480 = t643 * t416;
t648 = cos(qJ(5));
t474 = t415 * t388 + t648 * t480;
t660 = t474 / 0.2e1;
t511 = qJD(4) + qJD(5);
t477 = t629 * t417;
t581 = t414 * t419;
t393 = t477 + t581;
t306 = t416 * t393;
t642 = -qJ(3) - pkin(6);
t461 = t642 * t629;
t395 = t417 * t461;
t334 = -t642 * t581 - t395;
t266 = pkin(4) * t306 + t334;
t494 = t648 * t418;
t282 = -t415 * t306 + t393 * t494;
t299 = t648 * t388 - t415 * t480;
t495 = t648 * t416;
t576 = t415 * t418;
t399 = t495 + t576;
t655 = -t399 / 0.2e1;
t408 = -t629 * pkin(2) - pkin(3);
t400 = -t418 * pkin(4) + t408;
t676 = -t400 / 0.2e1;
t681 = -t266 * t655 - t282 * t676 + t299 * t657;
t220 = t399 * t393;
t397 = t415 * t416 - t494;
t656 = -t397 / 0.2e1;
t677 = t220 * t676 + t266 * t656 + t391 * t660;
t481 = t414 * t642;
t464 = t417 * t481;
t427 = -t642 * t476 + t464;
t410 = -t419 * pkin(2) - pkin(1);
t436 = t391 * pkin(3) - t393 * pkin(7) + t410;
t204 = t416 * t436 + t418 * t427;
t166 = -pkin(8) * t306 + t204;
t497 = t648 * t166;
t203 = t416 * t427 - t418 * t436;
t589 = t393 * t418;
t165 = -pkin(8) * t589 - t203;
t579 = t415 * t165;
t105 = -t497 - t579;
t422 = t391 * pkin(4) + t165;
t421 = t415 * t422;
t94 = t497 + t421;
t680 = t105 + t94;
t498 = t648 * t165;
t578 = t415 * t166;
t106 = t498 - t578;
t150 = t648 * t422;
t93 = -t150 + t578;
t679 = t106 + t93;
t654 = t399 / 0.2e1;
t145 = -t220 * t654 + t282 * t656;
t678 = t511 * t145;
t644 = t417 * pkin(2);
t309 = t393 * pkin(3) + t391 * pkin(7) + t644;
t285 = t416 * t309;
t335 = t419 * t481 + t395;
t319 = t418 * t335;
t206 = t319 + t285;
t303 = t416 * t391;
t167 = pkin(8) * t303 + t206;
t496 = t648 * t167;
t462 = -t496 / 0.2e1;
t286 = t418 * t309;
t574 = t416 * t335;
t205 = t286 - t574;
t308 = t418 * t391;
t646 = t393 * pkin(4);
t151 = pkin(8) * t308 + t205 + t646;
t580 = t415 * t151;
t441 = -t580 / 0.2e1 + t462;
t35 = t441 - t677;
t499 = t648 * t151;
t577 = t415 * t167;
t440 = -t577 / 0.2e1 + t499 / 0.2e1;
t37 = t440 + t681;
t34 = t440 - t681;
t661 = -t299 / 0.2e1;
t517 = t393 * qJD(1);
t323 = t391 * t517;
t385 = t477 / 0.2e1 + t581 / 0.2e1;
t666 = t385 * qJD(4) + t323;
t673 = t220 * qJD(1);
t554 = qJD(2) * t399;
t672 = -t145 * qJD(1) + t397 * t554;
t556 = qJD(1) * t282;
t671 = t145 * qJD(2) - t220 * t556;
t670 = t511 * t474;
t669 = t511 * t299;
t573 = t416 * t418;
t475 = 0.2e1 * t393 * t573;
t668 = t94 / 0.2e1;
t469 = t511 * t397;
t389 = t391 ^ 2;
t390 = t393 ^ 2;
t665 = -t390 - t389;
t510 = t390 - t389;
t664 = t385 * qJD(5) + t666;
t658 = t299 / 0.2e1;
t413 = t418 ^ 2;
t653 = -t413 / 0.2e1;
t652 = -t415 / 0.2e1;
t651 = t415 / 0.2e1;
t650 = -t416 / 0.2e1;
t649 = -t418 / 0.2e1;
t647 = pkin(4) * t416;
t645 = t415 * pkin(4);
t482 = t658 + t661;
t483 = -t474 / 0.2e1 + t660;
t88 = -t397 * t482 + t399 * t483;
t639 = t88 * qJD(4);
t638 = pkin(4) * qJD(4);
t637 = qJD(2) * pkin(2);
t100 = t496 + t580;
t278 = t399 * t391;
t352 = t415 * t303;
t466 = t391 * t494;
t281 = -t466 + t352;
t99 = t499 - t577;
t8 = -t100 * t220 + t94 * t278 + t93 * t281 - t99 * t282;
t634 = t8 * qJD(1);
t11 = -t220 * t679 - t282 * t680;
t627 = t11 * qJD(1);
t333 = -t419 * t461 + t464;
t265 = -pkin(4) * t303 + t333;
t14 = t94 * t100 + t266 * t265 - t93 * t99;
t626 = t14 * qJD(1);
t509 = pkin(4) * t589;
t17 = -t93 * t105 + t94 * t106 + t266 * t509;
t624 = t17 * qJD(1);
t429 = -t278 * t660 + t281 * t658 + t393 * t400 / 0.2e1;
t451 = t100 * t655 + t99 * t397 / 0.2e1;
t20 = t429 + t451;
t623 = t20 * qJD(1);
t622 = t205 * t418;
t621 = t206 * t416;
t21 = t220 * t265 - t266 * t278 + t99 * t391 - t93 * t393;
t620 = t21 * qJD(1);
t22 = -t100 * t391 + t265 * t282 + t266 * t281 - t94 * t393;
t619 = t22 * qJD(1);
t23 = t266 * t393 - t93 * t278 + t94 * t281;
t618 = t23 * qJD(1);
t617 = t266 * t220;
t616 = t266 * t282;
t613 = t278 * t391;
t612 = t281 * t220;
t611 = t281 * t391;
t610 = t281 * t397;
t609 = t282 * t278;
t608 = t282 * t393;
t420 = -t421 / 0.2e1 + t645 * t657;
t30 = t579 / 0.2e1 + t420;
t601 = t30 * qJD(1);
t508 = -t648 / 0.2e1;
t463 = t391 * t508;
t443 = -t150 / 0.2e1 + pkin(4) * t463;
t32 = t498 / 0.2e1 + t443;
t600 = t32 * qJD(1);
t599 = t333 * t416;
t598 = t333 * t418;
t597 = t334 * t333;
t596 = t334 * t393;
t595 = t334 * t416;
t594 = t334 * t418;
t38 = (t621 + t622) * t393 + (t203 * t418 - t204 * t416) * t391;
t593 = t38 * qJD(1);
t39 = t105 * t391 + t220 * t509 + t616;
t592 = t39 * qJD(1);
t591 = t393 * t220;
t590 = t393 * t408;
t588 = t397 * t391;
t587 = t399 * t278;
t40 = -t106 * t391 + t282 * t509 - t617;
t586 = t40 * qJD(1);
t583 = t407 * t391;
t41 = -t203 * t205 + t204 * t206 + t597;
t582 = t41 * qJD(1);
t575 = t416 * t220;
t44 = t93 * t391 - t617;
t572 = t44 * qJD(1);
t45 = -t94 * t391 + t616;
t571 = t45 * qJD(1);
t49 = (-t203 + t599) * t393 + (t205 - t595) * t391;
t570 = t49 * qJD(1);
t50 = (-t204 + t598) * t393 + (-t206 - t594) * t391;
t569 = t50 * qJD(1);
t63 = t596 + (-t203 * t416 - t204 * t418) * t391;
t568 = t63 * qJD(1);
t412 = t416 ^ 2;
t430 = (t653 - t412 / 0.2e1) * t583 + t590 / 0.2e1;
t450 = -t622 / 0.2e1 - t621 / 0.2e1;
t65 = t430 + t450;
t567 = t65 * qJD(1);
t68 = -t587 - t610;
t566 = t68 * qJD(1);
t114 = t220 * t397 - t399 * t282;
t565 = t511 * t114;
t439 = t576 / 0.2e1 + t495 / 0.2e1;
t207 = (t654 + t439) * t391;
t561 = t511 * t207;
t212 = (t439 + t655) * t391;
t560 = t511 * t212;
t559 = -t352 / 0.2e1 + t466 / 0.2e1;
t558 = t352 / 0.2e1 + t418 * t463;
t403 = t413 - t412;
t555 = qJD(1) * t419;
t553 = qJD(2) * t400;
t552 = qJD(2) * t418;
t551 = qJD(4) * t416;
t550 = qJD(4) * t418;
t549 = qJD(5) * t400;
t108 = (t333 - t427) * t393 + (-t335 - t334) * t391;
t548 = t108 * qJD(1);
t115 = -t609 - t612;
t547 = t115 * qJD(1);
t116 = t609 - t612;
t546 = t116 * qJD(1);
t130 = t203 * t391 - t334 * t306;
t545 = t130 * qJD(1);
t131 = -t204 * t391 + t334 * t589;
t544 = t131 * qJD(1);
t134 = t335 * t427 + t410 * t644 + t597;
t543 = t134 * qJD(1);
t140 = -t591 + t613;
t542 = t140 * qJD(1);
t141 = t591 + t613;
t541 = t141 * qJD(1);
t142 = t608 + t611;
t540 = t142 * qJD(1);
t143 = t608 - t611;
t539 = t143 * qJD(1);
t174 = -t391 * t427 + t596;
t538 = t174 * qJD(1);
t193 = t207 * qJD(1);
t485 = t588 / 0.2e1;
t208 = t485 + t558;
t194 = t208 * qJD(1);
t486 = -t588 / 0.2e1;
t209 = t486 + t559;
t196 = t209 * qJD(1);
t217 = t393 * t397;
t537 = t217 * qJD(1);
t252 = t510 * t416;
t535 = t252 * qJD(1);
t253 = t665 * t416;
t534 = t253 * qJD(1);
t254 = t510 * t418;
t533 = t254 * qJD(1);
t435 = t414 * t657 - t629 * t393 / 0.2e1;
t269 = (-t417 / 0.2e1 + t435) * pkin(2);
t532 = t269 * qJD(1);
t531 = t510 * qJD(1);
t283 = t391 * t644 + t410 * t393;
t530 = t283 * qJD(1);
t284 = -t410 * t391 + t393 * t644;
t529 = t284 * qJD(1);
t302 = (t412 / 0.2e1 + t653) * t393;
t528 = t302 * qJD(4);
t527 = t303 * qJD(1);
t526 = t306 * qJD(1);
t525 = t308 * qJD(1);
t382 = t412 * t391;
t383 = t413 * t391;
t310 = t382 + t383;
t524 = t310 * qJD(1);
t312 = t665 * t418;
t523 = t312 * qJD(1);
t522 = t665 * qJD(1);
t521 = t385 * qJD(1);
t519 = t391 * qJD(1);
t518 = t391 * qJD(3);
t516 = t393 * qJD(2);
t515 = t393 * qJD(3);
t404 = -t417 ^ 2 + t419 ^ 2;
t514 = t404 * qJD(1);
t513 = t417 * qJD(2);
t512 = t419 * qJD(2);
t507 = t648 / 0.2e1;
t506 = pkin(1) * t417 * qJD(1);
t505 = pkin(1) * t555;
t504 = t647 / 0.2e1;
t503 = t646 / 0.2e1;
t501 = t106 / 0.2e1 + t93 / 0.2e1;
t500 = t668 + t105 / 0.2e1;
t493 = t391 * t550;
t322 = t391 * t516;
t490 = t416 * t550;
t489 = t416 * t552;
t488 = t417 * t512;
t487 = t418 * t517;
t484 = -t285 / 0.2e1 - t319 / 0.2e1;
t479 = t648 * qJD(4);
t478 = t648 * qJD(5);
t471 = t511 * t391;
t470 = t511 * t399;
t468 = t418 * t503;
t467 = -qJD(4) - t519;
t465 = t390 * t490;
t460 = qJD(2) * t475;
t431 = (-t278 * t652 + t281 * t508) * pkin(4);
t3 = t220 * t483 + t282 * t482 + t397 * t501 + t399 * t500 + t431;
t459 = t3 * qJD(1);
t458 = -qJD(5) + t467;
t432 = (-t278 * t508 + t281 * t651) * pkin(4);
t12 = t397 * t500 - t399 * t501 + t432;
t457 = -t12 * qJD(1) + t88 * qJD(2);
t456 = -t205 * t416 + t206 * t418;
t455 = -t391 * t408 - t393 * t407;
t24 = (t282 * t650 + (t399 * t649 + t652) * t393) * pkin(4) + t35;
t274 = -t400 * t397 + t399 * t647;
t454 = t24 * qJD(1) - t274 * qJD(2);
t25 = (-t575 / 0.2e1 + (t397 * t649 + t507) * t393) * pkin(4) + t34;
t273 = t397 * t647 + t400 * t399;
t453 = t25 * qJD(1) - t273 * qJD(2);
t452 = t467 * t418;
t135 = t220 ^ 2 - t282 ^ 2;
t46 = t135 * qJD(1) + t114 * qJD(2);
t275 = t397 ^ 2 - t399 ^ 2;
t81 = t114 * qJD(1) + t275 * qJD(2);
t449 = t583 / 0.2e1 - t590 / 0.2e1;
t448 = t34 * qJD(1) - t399 * t553;
t447 = t35 * qJD(1) + t397 * t553;
t446 = t393 * t452;
t426 = t449 * t416 + t594 / 0.2e1;
t121 = t426 - t484;
t445 = -t121 * qJD(1) - t408 * t552;
t433 = t449 * t418;
t123 = -t286 / 0.2e1 - t433 + (t334 / 0.2e1 + t335 / 0.2e1) * t416;
t444 = -t408 * t416 * qJD(2) - t123 * qJD(1);
t256 = -t302 * qJD(1) + t489;
t442 = t100 * t651 + t99 * t507;
t215 = t390 * qJD(1) * t573 + t302 * qJD(2);
t311 = t403 * t390;
t438 = t311 * qJD(1) + t460;
t437 = qJD(1) * t475 - t403 * qJD(2);
t425 = t105 * t660 + t474 * t668 + t661 * t679;
t1 = (t266 * t650 + t589 * t676 + t442) * pkin(4) + t425;
t112 = t400 * t647;
t434 = -t1 * qJD(1) + t112 * qJD(2) + t88 * qJD(3);
t405 = t417 * t555;
t384 = t391 * qJD(2);
t378 = t385 * qJD(2);
t374 = t418 * t516;
t293 = t303 * qJD(4);
t268 = t644 / 0.2e1 + t435 * pkin(2);
t267 = -t527 - t551;
t211 = t485 + t559;
t210 = t486 + t558;
t202 = t212 * qJD(3);
t197 = t211 * qJD(3);
t195 = t209 * qJD(3);
t192 = t207 * qJD(3);
t154 = -t470 - t193;
t153 = t469 - t196;
t152 = -t194 - t469;
t133 = t207 * qJD(2) + t282 * t519;
t132 = t208 * qJD(2) + t220 * t519;
t124 = t595 / 0.2e1 - t574 / 0.2e1 + t286 / 0.2e1 - t433;
t122 = t426 + t484;
t80 = t212 * qJD(2) + t282 * t458;
t79 = t210 * qJD(2) + t220 * t458;
t64 = t430 - t450;
t36 = t441 + t677;
t33 = t578 - t498 / 0.2e1 + t443;
t31 = -t497 - t579 / 0.2e1 + t420;
t27 = t282 * t504 + t399 * t468 + t462 + (-t646 / 0.2e1 - t151 / 0.2e1) * t415 + t677;
t26 = pkin(4) * t575 / 0.2e1 + t397 * t468 + t648 * t503 + t37;
t19 = t429 - t451;
t13 = t654 * t679 + t656 * t680 + t432;
t4 = t655 * t680 + t656 * t679 + t431;
t2 = pkin(4) * t442 + t266 * t504 + t400 * t468 - t425;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t488, t404 * qJD(2), 0, -t488, 0, 0, -pkin(1) * t513, -pkin(1) * t512, 0, 0, -t322, -t510 * qJD(2), 0, t322, 0, 0, t283 * qJD(2), t284 * qJD(2), t108 * qJD(2) - qJD(3) * t665, t134 * qJD(2) + t174 * qJD(3), -t322 * t413 - t465, -t311 * qJD(4) + t391 * t460, -t391 * t393 * t551 + t254 * qJD(2), -t322 * t412 + t465, -t252 * qJD(2) - t393 * t493, t322, t49 * qJD(2) - t253 * qJD(3) + t131 * qJD(4), t50 * qJD(2) - t312 * qJD(3) + t130 * qJD(4), -t38 * qJD(2), qJD(2) * t41 + qJD(3) * t63, (qJD(2) * t281 - t220 * t511) * t282, t116 * qJD(2) + t135 * t511, t142 * qJD(2) - t220 * t471, (-qJD(2) * t278 + t282 * t511) * t220, t140 * qJD(2) - t282 * t471, t322, t21 * qJD(2) + t141 * qJD(3) + t39 * qJD(4) + t45 * qJD(5), t22 * qJD(2) + t143 * qJD(3) + t40 * qJD(4) + t44 * qJD(5), t8 * qJD(2) + t115 * qJD(3) + t11 * qJD(4), qJD(2) * t14 + qJD(3) * t23 + qJD(4) * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, t514, t512, -t405, -t513, 0, -pkin(6) * t512 - t506, pkin(6) * t513 - t505, 0, 0, -t323, -t531, -t384, t323, -t516, 0, -t333 * qJD(2) + t530, -t335 * qJD(2) + t529, t548 + (t391 * t629 - t393 * t414) * t637, t543 + (-t333 * t629 + t335 * t414) * t637 + t268 * qJD(3), -t528 + (-t413 * t517 - t489) * t391, (t382 - t383) * qJD(2) + (-qJD(4) + t519) * t475, t416 * t516 + t533, t528 + (-t412 * t517 + t489) * t391, t374 - t535, t666, t570 + (t416 * t455 - t598) * qJD(2) + t124 * qJD(4), t569 + (t418 * t455 + t599) * qJD(2) + t122 * qJD(4), qJD(2) * t456 - t593, t582 + (t333 * t408 + t407 * t456) * qJD(2) + t64 * qJD(3), (t554 + t556) * t281 + t678, t546 + (t587 - t610) * qJD(2) + t565, t210 * t511 + t399 * t516 + t540, -(qJD(2) * t397 + t673) * t278 - t678, -t397 * t516 + t542 + t560, t664, t620 + (t265 * t397 - t400 * t278 - t393 * t474) * qJD(2) + t26 * qJD(4) + t37 * qJD(5), t619 + (t265 * t399 + t400 * t281 - t299 * t393) * qJD(2) + t27 * qJD(4) + t36 * qJD(5), t634 + (-t100 * t397 + t299 * t278 + t281 * t474 - t99 * t399) * qJD(2) + t4 * qJD(4), t626 + (t100 * t299 + t265 * t400 - t474 * t99) * qJD(2) + t19 * qJD(3) + t2 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t522, t268 * qJD(2) + t538, 0, 0, 0, 0, 0, 0, -t534, -t523, 0, t64 * qJD(2) + t568, 0, 0, 0, 0, 0, 0, t541 + t560, t211 * t511 + t539, t547, t618 + t19 * qJD(2) + (-t278 * t397 + t281 * t399) * qJD(3) + t13 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, -t438, t467 * t306, t215, t446, t378, t124 * qJD(2) - t204 * qJD(4) + t544, t122 * qJD(2) + t203 * qJD(4) + t545, 0, 0, t671, t46, t79, -t671, t80, t378, t26 * qJD(2) + t105 * qJD(4) + t31 * qJD(5) + t202 + t592, t27 * qJD(2) - t106 * qJD(4) + t33 * qJD(5) + t197 + t586, t627 + t4 * qJD(2) + (t220 * t648 - t282 * t415) * t638, t624 + t2 * qJD(2) + t13 * qJD(3) + (t105 * t648 + t106 * t415) * t638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t671, t46, t79, -t671, t80, t378, t37 * qJD(2) + t31 * qJD(4) - t94 * qJD(5) + t202 + t571, t36 * qJD(2) + t33 * qJD(4) + t93 * qJD(5) + t197 + t572, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, -t514, 0, t405, 0, 0, t506, t505, 0, 0, t323, t531, 0, -t323, 0, 0, -t515 - t530, t518 - t529, -t548, t269 * qJD(3) - t543, t323 * t413 - t528, 0.2e1 * t416 * t446, t308 * qJD(4) - t533, t323 * t412 + t528, -t293 + t535, -t666, t123 * qJD(4) - t418 * t515 - t570, t306 * qJD(3) + t121 * qJD(4) - t569, -t310 * qJD(3) + t593, t65 * qJD(3) - t582, -t281 * t556 + t678, -t546 + t565, -t208 * t511 - t540, t278 * t673 - t678, -t542 - t561, -t664, t217 * qJD(3) - t25 * qJD(4) - t34 * qJD(5) - t620, t220 * qJD(3) - t24 * qJD(4) - t35 * qJD(5) - t619, qJD(3) * t68 - qJD(4) * t3 - t634, qJD(3) * t20 - qJD(4) * t1 - t626; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, t403 * qJD(4), 0, -t490, 0, 0, t408 * t551, t408 * t550, 0, 0, -t397 * t470, t511 * t275, 0, t399 * t469, 0, 0, t273 * qJD(4) + t399 * t549, t274 * qJD(4) - t397 * t549, 0, t112 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t517, t519, 0, t532, 0, 0, 0, 0, 0, 0, -t487, t526, -t524, t567, 0, 0, 0, 0, 0, 0, t537, t673, t566, t623 + t639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, -t437, t525 + t550, -t256, t267, -t521, -t407 * t550 - t444, t407 * t551 - t445, 0, 0, -t672, t81, t152, t672, t154, -t521, -t453 - t669, -t454 + t670, (t397 * t648 - t399 * t415) * t638 - t459, (-t299 * t648 - t415 * t474) * t638 + t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t672, t81, t152, t672, t154, -t521, -t448 - t669, -t447 + t670, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t516, -t384, t522, -t269 * qJD(2) - t538, 0, 0, 0, 0, 0, 0, -t293 + t374 + t534, -t306 * qJD(2) - t493 + t523, t310 * qJD(2), -t65 * qJD(2) - t568, 0, 0, 0, 0, 0, 0, -t217 * qJD(2) - t541 - t561, -t220 * qJD(2) - t209 * t511 - t539, -t68 * qJD(2) - t547, -qJD(2) * t20 - qJD(4) * t12 - t618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t517, -t519, 0, -t532, 0, 0, 0, 0, 0, 0, t487, -t526, t524, -t567, 0, 0, 0, 0, 0, 0, -t537, -t673, -t566, -t623 + t639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, t452, 0, 0, 0, 0, 0, 0, 0, 0, t154, t153, 0, (-t397 * t415 - t399 * t648) * t638 + t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, t153, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, t438, -t308 * qJD(2) + t323 * t416, -t215, t303 * qJD(2) + t391 * t487, t378, -t123 * qJD(2) + t303 * qJD(3) - t544, -t121 * qJD(2) + t418 * t518 - t545, 0, 0, -t671, -t46, t132, t671, t133, t378, t25 * qJD(2) + t30 * qJD(5) + t192 - t592, t24 * qJD(2) + t32 * qJD(5) + t195 - t586, t3 * qJD(2) - t627, qJD(2) * t1 + qJD(3) * t12 - t624; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t256, t437, -t525, t256, t527, t521, t444, t445, 0, 0, t672, -t81, t194, -t672, t193, t521, t453, t454, t459, -t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t527, t418 * t519, 0, 0, 0, 0, 0, 0, 0, 0, t193, t196, 0, -t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t645, -pkin(4) * t478, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t511 * t645 + t601, t600 + (-t479 - t478) * pkin(4), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t671, -t46, t132, t671, t133, t378, t34 * qJD(2) - t30 * qJD(4) + t192 - t571, t35 * qJD(2) - t32 * qJD(4) + t195 - t572, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t672, -t81, t194, -t672, t193, t521, t448, t447, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, t196, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415 * t638 - t601, pkin(4) * t479 - t600, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
