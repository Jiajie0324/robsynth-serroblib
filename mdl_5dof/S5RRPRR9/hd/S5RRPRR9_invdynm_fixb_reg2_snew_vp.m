% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPRR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:22
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPRR9_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR9_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR9_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRR9_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRR9_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR9_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:22:29
% EndTime: 2019-12-31 20:22:48
% DurationCPUTime: 19.56s
% Computational Cost: add. (147696->740), mult. (338836->1037), div. (0->0), fcn. (241727->10), ass. (0->509)
t1302 = sin(pkin(9));
t1303 = cos(pkin(9));
t1311 = cos(qJ(2));
t1396 = qJD(1) * t1311;
t1307 = sin(qJ(2));
t1397 = qJD(1) * t1307;
t1262 = t1302 * t1397 - t1303 * t1396;
t1264 = t1302 * t1396 + t1303 * t1397;
t1222 = t1264 * t1262;
t1410 = qJDD(2) - t1222;
t1419 = t1302 * t1410;
t1418 = t1303 * t1410;
t1305 = sin(qJ(5));
t1306 = sin(qJ(4));
t1310 = cos(qJ(4));
t1231 = -t1310 * qJD(2) + t1306 * t1264;
t1232 = t1306 * qJD(2) + t1310 * t1264;
t1309 = cos(qJ(5));
t1186 = t1309 * t1231 + t1305 * t1232;
t1189 = -t1305 * t1231 + t1309 * t1232;
t1133 = t1189 * t1186;
t1293 = qJD(2) * t1396;
t1362 = t1307 * qJDD(1);
t1272 = t1293 + t1362;
t1295 = t1311 * qJDD(1);
t1353 = qJD(2) * t1397;
t1273 = t1295 - t1353;
t1345 = t1302 * t1272 - t1303 * t1273;
t1221 = qJDD(4) + t1345;
t1219 = qJDD(5) + t1221;
t1413 = -t1133 + t1219;
t1417 = t1305 * t1413;
t1197 = t1232 * t1231;
t1411 = -t1197 + t1221;
t1416 = t1306 * t1411;
t1415 = t1309 * t1413;
t1414 = t1310 * t1411;
t1395 = qJD(2) * t1264;
t1198 = t1345 + t1395;
t1394 = qJD(3) * t1262;
t1252 = -0.2e1 * t1394;
t1308 = sin(qJ(1));
t1312 = cos(qJ(1));
t1283 = t1312 * g(1) + t1308 * g(2);
t1313 = qJD(1) ^ 2;
t1317 = -t1313 * pkin(1) + qJDD(1) * pkin(6) - t1283;
t1244 = -t1307 * g(3) + t1311 * t1317;
t1300 = t1311 ^ 2;
t1297 = t1300 * t1313;
t1327 = qJD(2) * pkin(2) - qJ(3) * t1397;
t1190 = -pkin(2) * t1297 + t1273 * qJ(3) - qJD(2) * t1327 + t1244;
t1315 = t1307 * t1317;
t1372 = t1307 * t1313;
t1398 = qJD(1) * qJD(2);
t1314 = -t1315 - t1272 * qJ(3) + qJDD(2) * pkin(2) + (pkin(2) * t1372 + qJ(3) * t1398 - g(3)) * t1311;
t1364 = t1303 * t1190 + t1302 * t1314;
t1108 = t1252 + t1364;
t1214 = t1262 * pkin(3) - t1264 * pkin(7);
t1409 = qJD(2) ^ 2;
t1081 = -t1409 * pkin(3) + qJDD(2) * pkin(7) - t1262 * t1214 + t1108;
t1282 = t1308 * g(1) - t1312 * g(2);
t1329 = qJDD(1) * pkin(1) + t1282;
t1195 = t1273 * pkin(2) + (qJ(3) * t1300 + pkin(6)) * t1313 - t1327 * t1397 - qJDD(3) + t1329;
t1224 = t1303 * t1272 + t1302 * t1273;
t1256 = qJD(2) * t1262;
t1201 = t1224 - t1256;
t1099 = t1198 * pkin(3) - t1201 * pkin(7) - t1195;
t1017 = t1306 * t1081 - t1310 * t1099;
t1018 = t1310 * t1081 + t1306 * t1099;
t957 = t1306 * t1017 + t1310 * t1018;
t1332 = -t1306 * qJDD(2) - t1310 * t1224;
t1168 = -t1231 * qJD(4) - t1332;
t1333 = t1310 * qJDD(2) - t1306 * t1224;
t1320 = t1232 * qJD(4) - t1333;
t1075 = -t1186 * qJD(5) + t1309 * t1168 - t1305 * t1320;
t1258 = qJD(4) + t1262;
t1251 = qJD(5) + t1258;
t1161 = t1251 * t1186;
t1412 = -t1161 + t1075;
t1212 = t1258 * t1231;
t1140 = t1168 + t1212;
t1347 = t1305 * t1168 + t1309 * t1320;
t1046 = (qJD(5) - t1251) * t1189 + t1347;
t1181 = t1186 ^ 2;
t1182 = t1189 ^ 2;
t1408 = t1231 ^ 2;
t1230 = t1232 ^ 2;
t1250 = t1251 ^ 2;
t1257 = t1258 ^ 2;
t1260 = t1262 ^ 2;
t1261 = t1264 ^ 2;
t1407 = 0.2e1 * qJD(3);
t986 = pkin(4) * t1411 - t1140 * pkin(8) - t1017;
t1205 = t1258 * pkin(4) - t1232 * pkin(8);
t991 = -t1408 * pkin(4) - pkin(8) * t1320 - t1258 * t1205 + t1018;
t934 = t1305 * t991 - t1309 * t986;
t935 = t1305 * t986 + t1309 * t991;
t892 = t1305 * t935 - t1309 * t934;
t1406 = pkin(4) * t892;
t1049 = t1161 + t1075;
t982 = -t1046 * t1305 - t1309 * t1049;
t1405 = pkin(4) * t982;
t1346 = t1302 * t1190 - t1303 * t1314;
t1107 = t1264 * t1407 + t1346;
t1039 = -t1303 * t1107 + t1302 * t1108;
t1404 = pkin(2) * t1039;
t1200 = -t1345 + t1395;
t1202 = t1224 + t1256;
t1143 = t1302 * t1200 - t1303 * t1202;
t1403 = pkin(2) * t1143;
t1402 = pkin(3) * t1302;
t1401 = t1306 * t892;
t1400 = t1310 * t892;
t1080 = -qJDD(2) * pkin(3) - t1409 * pkin(7) + (t1407 + t1214) * t1264 + t1346;
t1399 = -pkin(3) * t1080 + pkin(7) * t957;
t1393 = t1251 * t1189;
t1392 = t1251 * t1305;
t1391 = t1251 * t1309;
t1390 = t1258 * t1306;
t1389 = t1258 * t1310;
t1388 = t1262 * t1302;
t1387 = t1262 * t1303;
t1386 = t1264 * t1302;
t1385 = t1264 * t1303;
t1299 = t1307 ^ 2;
t1384 = t1299 * t1313;
t1383 = t1302 * t1195;
t1217 = qJDD(2) + t1222;
t1382 = t1302 * t1217;
t1381 = t1303 * t1195;
t1380 = t1303 * t1217;
t1013 = pkin(4) * t1320 - t1408 * pkin(8) + t1232 * t1205 + t1080;
t1379 = t1305 * t1013;
t1104 = t1133 + t1219;
t1378 = t1305 * t1104;
t1076 = t1306 * t1080;
t1152 = t1197 + t1221;
t1377 = t1306 * t1152;
t1376 = t1307 * t1039;
t1266 = t1313 * pkin(6) + t1329;
t1375 = t1307 * t1266;
t1291 = t1311 * t1372;
t1280 = qJDD(2) + t1291;
t1374 = t1307 * t1280;
t1281 = qJDD(2) - t1291;
t1373 = t1307 * t1281;
t1371 = t1309 * t1013;
t1370 = t1309 * t1104;
t1077 = t1310 * t1080;
t1369 = t1310 * t1152;
t1368 = t1311 * t1039;
t1367 = t1311 * t1266;
t1366 = t1311 * t1281;
t1363 = t1299 + t1300;
t1361 = t1308 * qJDD(1);
t1360 = t1312 * qJDD(1);
t1359 = t1312 * qJDD(2);
t1358 = -pkin(3) * t1303 - pkin(2);
t1357 = t1302 * t1133;
t1356 = t1302 * t1197;
t1355 = t1303 * t1133;
t1354 = t1303 * t1197;
t1352 = t1308 * t1222;
t1351 = t1312 * t1222;
t1175 = -t1230 - t1257;
t1102 = -t1306 * t1175 - t1369;
t1141 = (qJD(4) + t1258) * t1231 + t1332;
t1350 = pkin(3) * t1141 + pkin(7) * t1102 + t1076;
t1166 = -t1257 - t1408;
t1094 = t1310 * t1166 - t1416;
t1213 = t1258 * t1232;
t1137 = -t1213 - t1320;
t1349 = pkin(3) * t1137 + pkin(7) * t1094 - t1077;
t893 = t1305 * t934 + t1309 * t935;
t1040 = t1302 * t1107 + t1303 * t1108;
t1243 = t1311 * g(3) + t1315;
t1193 = t1307 * t1243 + t1311 * t1244;
t1344 = -t1308 * t1282 - t1312 * t1283;
t1088 = -t1181 - t1182;
t984 = -t1046 * t1309 + t1305 * t1049;
t881 = -pkin(4) * t1088 + pkin(8) * t984 + t893;
t883 = -pkin(8) * t982 - t892;
t931 = -t1306 * t982 + t1310 * t984;
t1343 = -pkin(3) * t1088 + pkin(7) * t931 + t1306 * t883 + t1310 * t881;
t1045 = (qJD(5) + t1251) * t1189 + t1347;
t1114 = -t1250 - t1181;
t1032 = t1309 * t1114 - t1417;
t939 = -pkin(4) * t1045 + pkin(8) * t1032 - t1371;
t1031 = t1305 * t1114 + t1415;
t963 = -pkin(8) * t1031 + t1379;
t970 = -t1306 * t1031 + t1310 * t1032;
t1342 = -pkin(3) * t1045 + pkin(7) * t970 + t1306 * t963 + t1310 * t939;
t1146 = -t1182 - t1250;
t1060 = -t1305 * t1146 - t1370;
t943 = -pkin(4) * t1412 + pkin(8) * t1060 + t1379;
t1057 = t1309 * t1146 - t1378;
t967 = -pkin(8) * t1057 + t1371;
t996 = -t1306 * t1057 + t1310 * t1060;
t1341 = -pkin(3) * t1412 + pkin(7) * t996 + t1306 * t967 + t1310 * t943;
t940 = -t1303 * t1080 + t1302 * t957;
t1340 = pkin(2) * t940 + t1399;
t1339 = t1308 * t1291;
t1338 = t1312 * t1291;
t1138 = (-qJD(4) + t1258) * t1232 + t1333;
t1069 = t1310 * t1138 + t1306 * t1140;
t1160 = t1230 + t1408;
t1337 = pkin(3) * t1160 + pkin(7) * t1069 + t957;
t1249 = -t1261 - t1409;
t1171 = t1303 * t1249 - t1382;
t1336 = pkin(2) * t1171 - t1364;
t1277 = -t1308 * t1313 + t1360;
t1335 = -pkin(5) * t1277 - t1308 * g(3);
t956 = -t1310 * t1017 + t1306 * t1018;
t1192 = t1311 * t1243 - t1307 * t1244;
t1334 = t1312 * t1282 - t1308 * t1283;
t1043 = t1302 * t1094 + t1303 * t1137;
t1331 = pkin(2) * t1043 + t1349;
t1053 = t1302 * t1102 + t1303 * t1141;
t1330 = pkin(2) * t1053 + t1350;
t1328 = pkin(4) * t1031 - t934;
t944 = -t1303 * t1045 + t1302 * t970;
t1326 = pkin(2) * t944 + t1342;
t947 = t1302 * t996 - t1303 * t1412;
t1325 = pkin(2) * t947 + t1341;
t917 = -t1303 * t1088 + t1302 * t931;
t1324 = pkin(2) * t917 + t1343;
t871 = t1310 * t893 - t1401;
t887 = -pkin(4) * t1013 + pkin(8) * t893;
t1323 = -pkin(3) * t1013 + pkin(7) * t871 - pkin(8) * t1401 + t1310 * t887;
t1029 = t1302 * t1069 + t1303 * t1160;
t1322 = pkin(2) * t1029 + t1337;
t1321 = pkin(4) * t1057 - t935;
t866 = -t1303 * t1013 + t1302 * t871;
t1319 = pkin(2) * t866 + t1323;
t1215 = -t1260 - t1409;
t1154 = t1302 * t1215 + t1418;
t1318 = pkin(2) * t1154 - t1107;
t1294 = t1308 * qJDD(2);
t1290 = -t1297 - t1409;
t1289 = t1297 - t1409;
t1288 = -t1384 - t1409;
t1287 = -t1384 + t1409;
t1279 = -t1297 + t1384;
t1278 = t1297 + t1384;
t1276 = t1312 * t1313 + t1361;
t1275 = t1363 * qJDD(1);
t1274 = t1295 - 0.2e1 * t1353;
t1271 = 0.2e1 * t1293 + t1362;
t1269 = t1311 * t1280;
t1268 = t1363 * t1398;
t1259 = -pkin(5) * t1276 + t1312 * g(3);
t1248 = -t1261 + t1409;
t1247 = t1260 - t1409;
t1246 = t1311 * t1272 - t1299 * t1398;
t1245 = -t1307 * t1273 - t1300 * t1398;
t1242 = -t1307 * t1288 - t1366;
t1241 = -t1307 * t1287 + t1269;
t1240 = t1311 * t1290 - t1374;
t1239 = t1311 * t1289 - t1373;
t1238 = t1311 * t1288 - t1373;
t1237 = t1311 * t1287 + t1374;
t1236 = t1307 * t1290 + t1269;
t1235 = t1307 * t1289 + t1366;
t1234 = (t1272 + t1293) * t1307;
t1233 = (t1273 - t1353) * t1311;
t1226 = -t1307 * t1271 + t1311 * t1274;
t1225 = t1311 * t1271 + t1307 * t1274;
t1220 = t1261 - t1260;
t1211 = (t1386 - t1387) * qJD(2);
t1210 = (-t1385 - t1388) * qJD(2);
t1209 = -t1230 + t1257;
t1208 = -t1257 + t1408;
t1207 = -pkin(6) * t1238 - t1367;
t1206 = -pkin(6) * t1236 - t1375;
t1204 = -pkin(1) * t1238 + t1244;
t1203 = -pkin(1) * t1236 + t1243;
t1196 = -t1260 - t1261;
t1194 = t1230 - t1408;
t1188 = -qJD(2) * t1386 + t1303 * t1224;
t1185 = qJD(2) * t1385 + t1302 * t1224;
t1184 = qJD(2) * t1387 + t1302 * t1345;
t1183 = qJD(2) * t1388 - t1303 * t1345;
t1179 = pkin(1) * t1274 + pkin(6) * t1240 + t1367;
t1178 = -pkin(1) * t1271 + pkin(6) * t1242 - t1375;
t1174 = -t1302 * t1249 - t1380;
t1173 = -t1302 * t1248 + t1418;
t1172 = t1303 * t1247 - t1382;
t1170 = t1303 * t1248 + t1419;
t1169 = t1302 * t1247 + t1380;
t1163 = pkin(1) * t1266 + pkin(6) * t1193;
t1159 = -t1182 + t1250;
t1158 = t1181 - t1250;
t1157 = pkin(1) * t1278 + pkin(6) * t1275 + t1193;
t1155 = t1303 * t1215 - t1419;
t1150 = (-t1231 * t1310 + t1232 * t1306) * t1258;
t1149 = (-t1231 * t1306 - t1232 * t1310) * t1258;
t1148 = -t1307 * t1210 + t1311 * t1211;
t1147 = t1311 * t1210 + t1307 * t1211;
t1145 = t1303 * t1200 + t1302 * t1202;
t1144 = -t1303 * t1198 - t1302 * t1201;
t1142 = -t1302 * t1198 + t1303 * t1201;
t1139 = t1168 - t1212;
t1136 = -t1213 + t1320;
t1132 = t1182 - t1181;
t1131 = t1310 * t1168 - t1232 * t1390;
t1130 = t1306 * t1168 + t1232 * t1389;
t1129 = t1231 * t1389 + t1306 * t1320;
t1128 = -t1231 * t1390 + t1310 * t1320;
t1127 = -qJ(3) * t1171 - t1381;
t1126 = -t1307 * t1185 + t1311 * t1188;
t1125 = -t1307 * t1183 + t1311 * t1184;
t1124 = t1311 * t1185 + t1307 * t1188;
t1123 = t1311 * t1183 + t1307 * t1184;
t1122 = -t1307 * t1171 + t1311 * t1174;
t1121 = -t1307 * t1170 + t1311 * t1173;
t1120 = -t1307 * t1169 + t1311 * t1172;
t1119 = t1311 * t1171 + t1307 * t1174;
t1118 = t1311 * t1170 + t1307 * t1173;
t1117 = t1311 * t1169 + t1307 * t1172;
t1116 = t1303 * t1150 + t1302 * t1221;
t1115 = t1302 * t1150 - t1303 * t1221;
t1113 = t1310 * t1208 - t1377;
t1112 = -t1306 * t1209 + t1414;
t1111 = t1306 * t1208 + t1369;
t1110 = t1310 * t1209 + t1416;
t1109 = -qJ(3) * t1154 - t1383;
t1101 = t1310 * t1175 - t1377;
t1096 = (-t1186 * t1309 + t1189 * t1305) * t1251;
t1095 = (-t1186 * t1305 - t1189 * t1309) * t1251;
t1093 = t1306 * t1166 + t1414;
t1091 = -t1307 * t1154 + t1311 * t1155;
t1090 = t1311 * t1154 + t1307 * t1155;
t1089 = -pkin(2) * t1201 + qJ(3) * t1174 - t1383;
t1086 = t1303 * t1131 + t1356;
t1085 = t1303 * t1129 - t1356;
t1084 = t1302 * t1131 - t1354;
t1083 = t1302 * t1129 + t1354;
t1082 = -pkin(2) * t1198 + qJ(3) * t1155 + t1381;
t1074 = -t1189 * qJD(5) - t1347;
t1073 = -t1307 * t1143 + t1311 * t1145;
t1072 = -t1307 * t1142 + t1311 * t1144;
t1071 = t1311 * t1143 + t1307 * t1145;
t1070 = t1311 * t1142 + t1307 * t1144;
t1068 = t1310 * t1137 - t1306 * t1139;
t1067 = t1306 * t1138 - t1310 * t1140;
t1066 = t1306 * t1137 + t1310 * t1139;
t1064 = t1309 * t1158 - t1378;
t1063 = -t1305 * t1159 + t1415;
t1062 = t1305 * t1158 + t1370;
t1061 = t1309 * t1159 + t1417;
t1059 = t1303 * t1113 - t1302 * t1136;
t1058 = t1303 * t1112 + t1302 * t1140;
t1056 = t1302 * t1113 + t1303 * t1136;
t1055 = t1302 * t1112 - t1303 * t1140;
t1054 = t1303 * t1102 - t1302 * t1141;
t1052 = -t1307 * t1115 + t1311 * t1116;
t1051 = t1311 * t1115 + t1307 * t1116;
t1044 = t1303 * t1094 - t1302 * t1137;
t1038 = t1309 * t1075 - t1189 * t1392;
t1037 = t1305 * t1075 + t1189 * t1391;
t1036 = -t1305 * t1074 + t1186 * t1391;
t1035 = t1309 * t1074 + t1186 * t1392;
t1034 = t1303 * t1068 + t1302 * t1194;
t1033 = t1302 * t1068 - t1303 * t1194;
t1030 = t1303 * t1069 - t1302 * t1160;
t1028 = -t1306 * t1095 + t1310 * t1096;
t1027 = t1310 * t1095 + t1306 * t1096;
t1026 = -pkin(1) * t1071 - t1403;
t1025 = -pkin(1) * t1119 + t1252 - t1336;
t1024 = pkin(2) * t1195 + qJ(3) * t1040;
t1023 = -pkin(7) * t1101 + t1077;
t1022 = -t1307 * t1084 + t1311 * t1086;
t1021 = -t1307 * t1083 + t1311 * t1085;
t1020 = t1311 * t1084 + t1307 * t1086;
t1019 = t1311 * t1083 + t1307 * t1085;
t1014 = -pkin(7) * t1093 + t1076;
t1011 = t1303 * t1028 + t1302 * t1219;
t1010 = t1302 * t1028 - t1303 * t1219;
t1009 = -pkin(1) * t1090 - t1318;
t1008 = -qJ(3) * t1143 - t1039;
t1007 = -pkin(6) * t1119 - t1307 * t1089 + t1311 * t1127;
t1006 = -pkin(2) * t1196 + qJ(3) * t1145 + t1040;
t1005 = -t1306 * t1062 + t1310 * t1064;
t1004 = -t1306 * t1061 + t1310 * t1063;
t1003 = t1310 * t1062 + t1306 * t1064;
t1002 = t1310 * t1061 + t1306 * t1063;
t1001 = -pkin(1) * t1201 + pkin(6) * t1122 + t1311 * t1089 + t1307 * t1127;
t1000 = -pkin(6) * t1090 - t1307 * t1082 + t1311 * t1109;
t999 = -pkin(3) * t1101 + t1018;
t998 = -t1307 * t1056 + t1311 * t1059;
t997 = -t1307 * t1055 + t1311 * t1058;
t995 = t1311 * t1056 + t1307 * t1059;
t994 = t1311 * t1055 + t1307 * t1058;
t993 = t1310 * t1057 + t1306 * t1060;
t990 = -pkin(3) * t1093 + t1017;
t989 = -pkin(1) * t1198 + pkin(6) * t1091 + t1311 * t1082 + t1307 * t1109;
t988 = -t1307 * t1053 + t1311 * t1054;
t987 = t1311 * t1053 + t1307 * t1054;
t983 = -t1309 * t1045 - t1305 * t1412;
t981 = -t1305 * t1045 + t1309 * t1412;
t980 = -t1307 * t1043 + t1311 * t1044;
t979 = t1311 * t1043 + t1307 * t1044;
t978 = t1311 * t1040 - t1376;
t977 = t1307 * t1040 + t1368;
t976 = -t1306 * t1037 + t1310 * t1038;
t975 = -t1306 * t1035 + t1310 * t1036;
t974 = t1310 * t1037 + t1306 * t1038;
t973 = t1310 * t1035 + t1306 * t1036;
t972 = -t1307 * t1033 + t1311 * t1034;
t971 = t1311 * t1033 + t1307 * t1034;
t969 = t1310 * t1031 + t1306 * t1032;
t965 = -t1307 * t1029 + t1311 * t1030;
t964 = t1311 * t1029 + t1307 * t1030;
t961 = t1303 * t976 + t1357;
t960 = t1303 * t975 - t1357;
t959 = t1302 * t976 - t1355;
t958 = t1302 * t975 + t1355;
t954 = -t1307 * t1010 + t1311 * t1011;
t953 = t1311 * t1010 + t1307 * t1011;
t952 = t1303 * t1005 - t1302 * t1046;
t951 = t1303 * t1004 + t1302 * t1049;
t950 = t1302 * t1005 + t1303 * t1046;
t949 = t1302 * t1004 - t1303 * t1049;
t948 = t1302 * t1412 + t1303 * t996;
t946 = -pkin(1) * t977 - t1404;
t945 = t1302 * t1045 + t1303 * t970;
t941 = t1302 * t1080 + t1303 * t957;
t937 = -pkin(7) * t1067 - t956;
t936 = -pkin(6) * t1071 - t1307 * t1006 + t1311 * t1008;
t932 = -pkin(1) * t1196 + pkin(6) * t1073 + t1311 * t1006 + t1307 * t1008;
t930 = -t1306 * t981 + t1310 * t983;
t929 = t1306 * t984 + t1310 * t982;
t928 = t1306 * t983 + t1310 * t981;
t926 = -qJ(3) * t1053 + t1303 * t1023 - t1302 * t999;
t925 = -qJ(3) * t1043 + t1303 * t1014 - t1302 * t990;
t924 = -pkin(6) * t977 - qJ(3) * t1368 - t1307 * t1024;
t923 = pkin(1) * t1195 + pkin(6) * t978 - qJ(3) * t1376 + t1311 * t1024;
t922 = t1302 * t1132 + t1303 * t930;
t921 = -t1303 * t1132 + t1302 * t930;
t920 = -pkin(1) * t987 - t1330;
t919 = -pkin(2) * t1101 + qJ(3) * t1054 + t1302 * t1023 + t1303 * t999;
t918 = t1302 * t1088 + t1303 * t931;
t916 = -pkin(1) * t979 - t1331;
t915 = -pkin(2) * t1093 + qJ(3) * t1044 + t1302 * t1014 + t1303 * t990;
t914 = -t1307 * t959 + t1311 * t961;
t913 = -t1307 * t958 + t1311 * t960;
t912 = t1307 * t961 + t1311 * t959;
t911 = t1307 * t960 + t1311 * t958;
t910 = -qJ(3) * t1029 + t1067 * t1402 + t1303 * t937;
t909 = -t1307 * t950 + t1311 * t952;
t908 = -t1307 * t949 + t1311 * t951;
t907 = t1307 * t952 + t1311 * t950;
t906 = t1307 * t951 + t1311 * t949;
t905 = -t1307 * t947 + t1311 * t948;
t904 = t1307 * t948 + t1311 * t947;
t903 = -pkin(3) * t929 - t1405;
t902 = qJ(3) * t1030 + t1358 * t1067 + t1302 * t937;
t901 = -t1307 * t944 + t1311 * t945;
t900 = t1307 * t945 + t1311 * t944;
t899 = -pkin(3) * t993 - t1321;
t898 = -t1307 * t940 + t1311 * t941;
t897 = t1307 * t941 + t1311 * t940;
t896 = -pkin(3) * t969 - t1328;
t895 = -pkin(1) * t964 - t1322;
t894 = -pkin(7) * t993 - t1306 * t943 + t1310 * t967;
t891 = -pkin(7) * t969 - t1306 * t939 + t1310 * t963;
t890 = -qJ(3) * t940 + (-pkin(7) * t1303 + t1402) * t956;
t889 = -t1307 * t921 + t1311 * t922;
t888 = t1307 * t922 + t1311 * t921;
t885 = -t1307 * t917 + t1311 * t918;
t884 = t1307 * t918 + t1311 * t917;
t879 = -pkin(6) * t987 - t1307 * t919 + t1311 * t926;
t878 = -pkin(6) * t979 - t1307 * t915 + t1311 * t925;
t877 = qJ(3) * t941 + (-pkin(7) * t1302 + t1358) * t956;
t876 = -pkin(1) * t1101 + pkin(6) * t988 + t1307 * t926 + t1311 * t919;
t875 = -pkin(1) * t1093 + pkin(6) * t980 + t1307 * t925 + t1311 * t915;
t874 = -pkin(1) * t897 - t1340;
t873 = -pkin(6) * t964 - t1307 * t902 + t1311 * t910;
t872 = -pkin(1) * t1067 + pkin(6) * t965 + t1307 * t910 + t1311 * t902;
t870 = t1306 * t893 + t1400;
t868 = -qJ(3) * t947 - t1302 * t899 + t1303 * t894;
t867 = t1302 * t1013 + t1303 * t871;
t865 = -pkin(1) * t904 - t1325;
t864 = -qJ(3) * t944 - t1302 * t896 + t1303 * t891;
t863 = -pkin(1) * t900 - t1326;
t862 = -pkin(2) * t993 + qJ(3) * t948 + t1302 * t894 + t1303 * t899;
t861 = -pkin(2) * t969 + qJ(3) * t945 + t1302 * t891 + t1303 * t896;
t860 = -pkin(3) * t870 - t1406;
t859 = -pkin(7) * t929 - t1306 * t881 + t1310 * t883;
t858 = -pkin(6) * t897 - t1307 * t877 + t1311 * t890;
t857 = -pkin(1) * t956 + pkin(6) * t898 + t1307 * t890 + t1311 * t877;
t856 = -pkin(7) * t870 - pkin(8) * t1400 - t1306 * t887;
t855 = -t1307 * t866 + t1311 * t867;
t854 = t1307 * t867 + t1311 * t866;
t853 = -qJ(3) * t917 - t1302 * t903 + t1303 * t859;
t852 = -pkin(1) * t884 - t1324;
t851 = -pkin(2) * t929 + qJ(3) * t918 + t1302 * t859 + t1303 * t903;
t850 = -pkin(6) * t904 - t1307 * t862 + t1311 * t868;
t849 = -pkin(1) * t993 + pkin(6) * t905 + t1307 * t868 + t1311 * t862;
t848 = -pkin(6) * t900 - t1307 * t861 + t1311 * t864;
t847 = -pkin(1) * t969 + pkin(6) * t901 + t1307 * t864 + t1311 * t861;
t846 = -qJ(3) * t866 - t1302 * t860 + t1303 * t856;
t845 = -pkin(6) * t884 - t1307 * t851 + t1311 * t853;
t844 = -pkin(1) * t854 - t1319;
t843 = -pkin(1) * t929 + pkin(6) * t885 + t1307 * t853 + t1311 * t851;
t842 = -pkin(2) * t870 + qJ(3) * t867 + t1302 * t856 + t1303 * t860;
t841 = -pkin(6) * t854 - t1307 * t842 + t1311 * t846;
t840 = -pkin(1) * t870 + pkin(6) * t855 + t1307 * t846 + t1311 * t842;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1277, 0, -t1276, 0, t1335, -t1259, -t1334, -pkin(5) * t1334, t1312 * t1246 - t1339, t1312 * t1226 + t1308 * t1279, t1312 * t1241 + t1307 * t1361, t1312 * t1245 + t1339, t1312 * t1239 + t1308 * t1295, t1312 * t1268 + t1294, t1312 * t1206 - t1308 * t1203 - pkin(5) * (t1308 * t1240 + t1312 * t1274), t1312 * t1207 - t1308 * t1204 - pkin(5) * (t1308 * t1242 - t1312 * t1271), t1312 * t1192 - pkin(5) * (t1308 * t1275 + t1312 * t1278), -pkin(5) * (t1308 * t1193 + t1312 * t1266) - (t1308 * pkin(1) - t1312 * pkin(6)) * t1192, t1312 * t1126 + t1352, t1312 * t1072 + t1308 * t1220, t1312 * t1121 + t1308 * t1202, t1312 * t1125 - t1352, t1312 * t1120 + t1200 * t1308, t1312 * t1148 + t1294, t1312 * t1000 - t1308 * t1009 - pkin(5) * (t1308 * t1091 - t1312 * t1198), t1312 * t1007 - t1308 * t1025 - pkin(5) * (t1308 * t1122 - t1312 * t1201), t1312 * t936 - t1308 * t1026 - pkin(5) * (t1308 * t1073 - t1312 * t1196), t1312 * t924 - t1308 * t946 - pkin(5) * (t1312 * t1195 + t1308 * t978), t1312 * t1022 + t1308 * t1130, t1308 * t1066 + t1312 * t972, t1308 * t1110 + t1312 * t997, t1312 * t1021 - t1308 * t1128, t1308 * t1111 + t1312 * t998, t1312 * t1052 + t1308 * t1149, t1312 * t878 - t1308 * t916 - pkin(5) * (-t1312 * t1093 + t1308 * t980), t1312 * t879 - t1308 * t920 - pkin(5) * (-t1312 * t1101 + t1308 * t988), t1312 * t873 - t1308 * t895 - pkin(5) * (-t1312 * t1067 + t1308 * t965), t1312 * t858 - t1308 * t874 - pkin(5) * (t1308 * t898 - t1312 * t956), t1308 * t974 + t1312 * t914, t1308 * t928 + t1312 * t889, t1308 * t1002 + t1312 * t908, t1308 * t973 + t1312 * t913, t1308 * t1003 + t1312 * t909, t1308 * t1027 + t1312 * t954, t1312 * t848 - t1308 * t863 - pkin(5) * (t1308 * t901 - t1312 * t969), t1312 * t850 - t1308 * t865 - pkin(5) * (t1308 * t905 - t1312 * t993), t1312 * t845 - t1308 * t852 - pkin(5) * (t1308 * t885 - t1312 * t929), t1312 * t841 - t1308 * t844 - pkin(5) * (t1308 * t855 - t1312 * t870); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1276, 0, t1277, 0, t1259, t1335, t1344, pkin(5) * t1344, t1308 * t1246 + t1338, t1308 * t1226 - t1312 * t1279, t1308 * t1241 - t1307 * t1360, t1308 * t1245 - t1338, t1308 * t1239 - t1311 * t1360, t1308 * t1268 - t1359, t1308 * t1206 + t1312 * t1203 + pkin(5) * (t1312 * t1240 - t1308 * t1274), t1308 * t1207 + t1312 * t1204 + pkin(5) * (t1312 * t1242 + t1308 * t1271), t1308 * t1192 + pkin(5) * (t1312 * t1275 - t1308 * t1278), pkin(5) * (t1312 * t1193 - t1308 * t1266) - (-t1312 * pkin(1) - t1308 * pkin(6)) * t1192, t1308 * t1126 - t1351, t1308 * t1072 - t1312 * t1220, t1308 * t1121 - t1312 * t1202, t1308 * t1125 + t1351, t1308 * t1120 - t1200 * t1312, t1308 * t1148 - t1359, t1308 * t1000 + t1312 * t1009 + pkin(5) * (t1312 * t1091 + t1308 * t1198), t1308 * t1007 + t1312 * t1025 + pkin(5) * (t1312 * t1122 + t1308 * t1201), t1308 * t936 + t1312 * t1026 + pkin(5) * (t1312 * t1073 + t1308 * t1196), t1308 * t924 + t1312 * t946 + pkin(5) * (-t1308 * t1195 + t1312 * t978), t1308 * t1022 - t1312 * t1130, -t1312 * t1066 + t1308 * t972, -t1312 * t1110 + t1308 * t997, t1308 * t1021 + t1312 * t1128, -t1312 * t1111 + t1308 * t998, t1308 * t1052 - t1312 * t1149, t1308 * t878 + t1312 * t916 + pkin(5) * (t1308 * t1093 + t1312 * t980), t1308 * t879 + t1312 * t920 + pkin(5) * (t1308 * t1101 + t1312 * t988), t1308 * t873 + t1312 * t895 + pkin(5) * (t1308 * t1067 + t1312 * t965), t1308 * t858 + t1312 * t874 + pkin(5) * (t1308 * t956 + t1312 * t898), t1308 * t914 - t1312 * t974, t1308 * t889 - t1312 * t928, -t1312 * t1002 + t1308 * t908, t1308 * t913 - t1312 * t973, -t1312 * t1003 + t1308 * t909, -t1312 * t1027 + t1308 * t954, t1308 * t848 + t1312 * t863 + pkin(5) * (t1308 * t969 + t1312 * t901), t1308 * t850 + t1312 * t865 + pkin(5) * (t1308 * t993 + t1312 * t905), t1308 * t845 + t1312 * t852 + pkin(5) * (t1308 * t929 + t1312 * t885), t1308 * t841 + t1312 * t844 + pkin(5) * (t1308 * t870 + t1312 * t855); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1282, t1283, 0, 0, t1234, t1225, t1237, t1233, t1235, 0, t1179, t1178, t1157, t1163, t1124, t1070, t1118, t1123, t1117, t1147, t989, t1001, t932, t923, t1020, t971, t994, t1019, t995, t1051, t875, t876, t872, t857, t912, t888, t906, t911, t907, t953, t847, t849, t843, t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1313, 0, 0, -g(3), -t1282, 0, t1246, t1226, t1241, t1245, t1239, t1268, t1206, t1207, t1192, pkin(6) * t1192, t1126, t1072, t1121, t1125, t1120, t1148, t1000, t1007, t936, t924, t1022, t972, t997, t1021, t998, t1052, t878, t879, t873, t858, t914, t889, t908, t913, t909, t954, t848, t850, t845, t841; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1313, 0, qJDD(1), 0, g(3), 0, -t1283, 0, t1291, -t1279, -t1362, -t1291, -t1295, -qJDD(2), t1203, t1204, 0, pkin(1) * t1192, -t1222, -t1220, -t1202, t1222, -t1200, -qJDD(2), t1009, t1025, t1026, t946, -t1130, -t1066, -t1110, t1128, -t1111, -t1149, t916, t920, t895, t874, -t974, -t928, -t1002, -t973, -t1003, -t1027, t863, t865, t852, t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1282, t1283, 0, 0, t1234, t1225, t1237, t1233, t1235, 0, t1179, t1178, t1157, t1163, t1124, t1070, t1118, t1123, t1117, t1147, t989, t1001, t932, t923, t1020, t971, t994, t1019, t995, t1051, t875, t876, t872, t857, t912, t888, t906, t911, t907, t953, t847, t849, t843, t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1272, t1274, t1280, -t1293, t1289, t1293, 0, -t1266, t1243, 0, t1188, t1144, t1173, t1184, t1172, t1211, t1109, t1127, t1008, -qJ(3) * t1039, t1086, t1034, t1058, t1085, t1059, t1116, t925, t926, t910, t890, t961, t922, t951, t960, t952, t1011, t864, t868, t853, t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1353, t1271, t1287, t1273, t1281, -t1353, t1266, 0, t1244, 0, t1185, t1142, t1170, t1183, t1169, t1210, t1082, t1089, t1006, t1024, t1084, t1033, t1055, t1083, t1056, t1115, t915, t919, t902, t877, t959, t921, t949, t958, t950, t1010, t861, t862, t851, t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1291, t1279, t1362, t1291, t1295, qJDD(2), -t1243, -t1244, 0, 0, t1222, t1220, t1202, -t1222, t1200, qJDD(2), t1318, t1336 + 0.2e1 * t1394, t1403, t1404, t1130, t1066, t1110, -t1128, t1111, t1149, t1331, t1330, t1322, t1340, t974, t928, t1002, t973, t1003, t1027, t1326, t1325, t1324, t1319; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1224, -t1198, t1410, t1256, t1247, -t1256, 0, -t1195, t1107, 0, t1131, t1068, t1112, t1129, t1113, t1150, t1014, t1023, t937, -pkin(7) * t956, t976, t930, t1004, t975, t1005, t1028, t891, t894, t859, t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1395, t1201, t1248, -t1345, t1217, -t1395, t1195, 0, t1108, 0, -t1197, -t1194, -t1140, t1197, t1136, -t1221, t990, t999, -pkin(3) * t1067, -pkin(3) * t956, -t1133, -t1132, -t1049, t1133, t1046, -t1219, t896, t899, t903, t860; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1222, t1220, t1202, -t1222, t1200, qJDD(2), -t1107, -t1108, 0, 0, t1130, t1066, t1110, -t1128, t1111, t1149, t1349, t1350, t1337, t1399, t974, t928, t1002, t973, t1003, t1027, t1342, t1341, t1343, t1323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1168, t1137, t1411, t1212, t1208, -t1212, 0, t1080, t1017, 0, t1038, t983, t1063, t1036, t1064, t1096, t963, t967, t883, -pkin(8) * t892; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1213, t1139, t1209, -t1320, t1152, -t1213, -t1080, 0, t1018, 0, t1037, t981, t1061, t1035, t1062, t1095, t939, t943, t881, t887; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1197, t1194, t1140, -t1197, -t1136, t1221, -t1017, -t1018, 0, 0, t1133, t1132, t1049, -t1133, -t1046, t1219, t1328, t1321, t1405, t1406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1075, -t1045, t1413, t1161, t1158, -t1161, 0, t1013, t934, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1393, t1412, t1159, t1074, t1104, -t1393, -t1013, 0, t935, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1133, t1132, t1049, -t1133, -t1046, t1219, -t934, -t935, 0, 0;];
m_new_reg = t1;
