% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRPP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:59
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPP5_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP5_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP5_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRRPP5_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:58:33
% EndTime: 2019-12-31 20:58:39
% DurationCPUTime: 3.07s
% Computational Cost: add. (2854->279), mult. (5499->289), div. (0->0), fcn. (5528->4), ass. (0->193)
t177 = qJD(2) + qJD(3);
t179 = sin(qJ(3));
t181 = cos(qJ(2));
t180 = sin(qJ(2));
t283 = cos(qJ(3));
t209 = t283 * t180;
t155 = t179 * t181 + t209;
t296 = t155 ^ 2;
t252 = t179 * t180;
t153 = -t283 * t181 + t252;
t297 = t153 ^ 2;
t66 = t296 - t297;
t32 = t177 * t66;
t316 = t66 * qJD(1);
t294 = -pkin(7) - pkin(6);
t159 = t294 * t181;
t158 = t283 * t159;
t199 = t294 * t252;
t304 = -t158 + t199;
t315 = t304 * pkin(3);
t306 = t177 * t155;
t314 = t153 * t306;
t217 = t283 * pkin(2);
t171 = -t217 - pkin(3);
t313 = t304 * t171;
t142 = t153 * qJ(5);
t312 = t142 + t304;
t165 = t177 * qJ(4);
t292 = t142 / 0.2e1;
t80 = t292 - t142 / 0.2e1;
t311 = -t80 * qJD(1) - t165;
t201 = -t179 * t159 - t294 * t209;
t310 = t177 * t201;
t62 = -t155 * qJ(5) + t201;
t309 = t177 * t62;
t308 = 0.2e1 * t292;
t307 = t177 * t153;
t182 = -pkin(3) - pkin(4);
t250 = t182 * t153;
t302 = qJD(4) * t296;
t299 = t296 * qJD(1);
t211 = t283 * t153;
t280 = t179 * pkin(2);
t169 = qJ(4) + t280;
t255 = t169 * t155;
t259 = t155 * t179;
t298 = -t255 / 0.2e1 - (t211 / 0.2e1 - t259 / 0.2e1) * pkin(2);
t295 = -pkin(4) / 0.2e1;
t293 = -qJ(4) / 0.2e1;
t143 = qJ(4) * t153;
t291 = -t143 / 0.2e1;
t145 = t155 * qJ(4);
t290 = -t145 / 0.2e1;
t289 = t158 / 0.2e1;
t288 = -t158 / 0.2e1;
t168 = -pkin(4) + t171;
t287 = t168 / 0.2e1;
t286 = -t169 / 0.2e1;
t285 = t179 / 0.2e1;
t284 = -t182 / 0.2e1;
t282 = t153 * pkin(3);
t281 = t155 * pkin(4);
t279 = t180 * pkin(2);
t185 = t199 + t288;
t69 = t288 + t185;
t278 = -qJD(2) * t304 - t69 * qJD(3);
t276 = qJD(2) * pkin(2);
t172 = -t181 * pkin(2) - pkin(1);
t198 = t145 - t172;
t45 = t198 + t250;
t146 = t155 * pkin(3);
t88 = t143 + t146;
t51 = -t88 - t281;
t47 = t51 - t279;
t3 = t45 * t47;
t275 = t3 * qJD(1);
t4 = t45 * t51;
t274 = t4 * qJD(1);
t273 = t45 * t153;
t272 = t45 * t155;
t76 = -t198 + t282;
t269 = t76 * t153;
t268 = t76 * t155;
t78 = t88 + t279;
t9 = t76 * t78;
t267 = t9 * qJD(1);
t266 = -t69 * qJD(2) - qJD(3) * t304;
t10 = t76 * t88;
t263 = t10 * qJD(1);
t15 = -t47 * t153 - t272;
t260 = t15 * qJD(1);
t16 = t47 * t155 - t273;
t258 = t16 * qJD(1);
t257 = t168 * t153;
t256 = t169 * t153;
t17 = -t51 * t153 - t272;
t254 = t17 * qJD(1);
t253 = t171 * t153;
t18 = t51 * t155 - t273;
t251 = t18 * qJD(1);
t19 = t172 * t279;
t249 = t19 * qJD(1);
t196 = t169 / 0.2e1 - t280 / 0.2e1;
t21 = t290 + t196 * t155 + (t217 / 0.2e1 + t287 + t284) * t153;
t248 = t21 * qJD(1);
t22 = t153 * t312 - t62 * t155;
t247 = t22 * qJD(1);
t24 = (qJ(4) / 0.2e1 - t196) * t155 + (-t217 / 0.2e1 - t171 / 0.2e1 - pkin(3) / 0.2e1) * t153;
t246 = t24 * qJD(1);
t26 = t78 * t153 + t268;
t245 = t26 * qJD(1);
t27 = -t78 * t155 + t269;
t244 = t27 * qJD(1);
t202 = t291 - t146 / 0.2e1;
t188 = -t279 / 0.2e1 + t202;
t28 = -t256 / 0.2e1 + (t295 + t287) * t155 + t188;
t243 = t28 * qJD(1);
t30 = t88 * t153 + t268;
t242 = t30 * qJD(1);
t31 = -t88 * t155 + t269;
t241 = t31 * qJD(1);
t33 = t291 + (t295 + t182 / 0.2e1) * t155 + t202;
t240 = t33 * qJD(1);
t106 = t288 + t289;
t38 = t106 + t80;
t239 = t38 * qJD(1);
t72 = t153 * t279 + t172 * t155;
t236 = t72 * qJD(1);
t73 = -t172 * t153 + t155 * t279;
t235 = t73 * qJD(1);
t221 = t169 * qJD(2);
t233 = t169 * qJD(3) + t221;
t232 = qJD(1) * t181;
t231 = qJD(3) * t172;
t230 = qJD(4) * t153;
t101 = t296 + t297;
t229 = t101 * qJD(1);
t228 = t106 * qJD(1);
t93 = t106 * qJD(2);
t225 = t153 * qJD(1);
t224 = t155 * qJD(1);
t223 = t155 * qJD(4);
t166 = -t180 ^ 2 + t181 ^ 2;
t222 = t166 * qJD(1);
t220 = t180 * qJD(2);
t219 = t181 * qJD(2);
t175 = qJD(3) * t217;
t164 = t175 + qJD(4);
t218 = t283 / 0.2e1;
t216 = pkin(1) * t180 * qJD(1);
t215 = pkin(1) * t232;
t214 = qJD(3) * t280;
t213 = -t281 / 0.2e1;
t212 = t76 * t224;
t210 = t283 * t169;
t208 = t153 * t224;
t207 = t153 * t223;
t206 = t172 * t225;
t205 = t172 * t224;
t204 = t180 * t219;
t200 = -qJ(4) * qJD(3) - t221;
t111 = (t168 * t179 + t210) * pkin(2);
t184 = (t218 * t312 + t62 * t285) * pkin(2) + t62 * t286 + t312 * t287;
t189 = t284 * t312 - t293 * t62;
t2 = t184 + t189;
t195 = t2 * qJD(1) + t111 * qJD(2);
t114 = (t171 * t179 + t210) * pkin(2);
t183 = (t201 * t285 + t218 * t304) * pkin(2) + t201 * t286 + t313 / 0.2e1;
t190 = t315 / 0.2e1 - t201 * t293;
t8 = t183 + t190;
t194 = t8 * qJD(1) + t114 * qJD(2);
t178 = qJ(4) * qJD(4);
t176 = qJ(4) * t217;
t174 = qJD(2) * t217;
t167 = t180 * t232;
t160 = t169 * qJD(4);
t138 = t155 * qJD(5);
t134 = t153 * qJD(5);
t95 = t106 * qJD(3);
t75 = t179 * t276 + t228;
t71 = qJD(4) - t174;
t60 = -t177 * t280 - t228;
t53 = t164 + t174;
t43 = -t142 + t289 - t185;
t39 = t308 + t304;
t35 = t308 + t69;
t34 = t143 / 0.2e1 + t155 * t284 + t213 + t202;
t29 = t256 / 0.2e1 - t168 * t155 / 0.2e1 + t213 + t188;
t23 = -t253 / 0.2e1 + t290 + t282 / 0.2e1 + t298;
t20 = t257 / 0.2e1 + t145 / 0.2e1 + t250 / 0.2e1 - t298;
t7 = t183 - t190;
t1 = t184 - t189;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, t166 * qJD(2), 0, -t204, 0, 0, -pkin(1) * t220, -pkin(1) * t219, 0, 0, -t314, -t32, 0, t314, 0, 0, t72 * qJD(2) + t155 * t231, t73 * qJD(2) - t153 * t231, 0, t19 * qJD(2), -t314, 0, t32, 0, 0, t314, t26 * qJD(2) + t30 * qJD(3) - t207, 0, t27 * qJD(2) + t31 * qJD(3) + t302, t9 * qJD(2) + t10 * qJD(3) - t223 * t76, -t314, t32, 0, t314, 0, 0, t15 * qJD(2) + t17 * qJD(3) - t207, t16 * qJD(2) + t18 * qJD(3) + t302, t101 * qJD(5), t3 * qJD(2) + t4 * qJD(3) + t22 * qJD(5) + t223 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, t222, t219, -t167, -t220, 0, -pkin(6) * t219 - t216, pkin(6) * t220 - t215, 0, 0, -t208, -t316, -t307, t208, -t306, 0, t236 + t278, t310 + t235, (t211 - t259) * t276, t249 + (-t179 * t201 - t283 * t304) * t276, -t208, -t307, t316, 0, t306, t208, t245 + t278, (-t253 - t255) * qJD(2) + t23 * qJD(3) - t230, -t310 + t244, t267 + (-t169 * t201 + t313) * qJD(2) + t7 * qJD(3) + t69 * qJD(4), -t208, t316, t307, t208, -t306, 0, -qJD(2) * t312 + t43 * qJD(3) + t260, t258 - t309, (t255 + t257) * qJD(2) + t20 * qJD(3) + t230, t275 + (t168 * t312 - t62 * t169) * qJD(2) + t1 * qJD(3) + t35 * qJD(4) + t29 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, -t316, -t307, t208, -t306, 0, t205 + t266, t310 - t206, 0, 0, -t208, -t307, t316, 0, t306, t208, t242 + t266, t23 * qJD(2) + (-t145 + t282) * qJD(3) - t230, -t310 + t241, t263 + t7 * qJD(2) + (-qJ(4) * t201 - t315) * qJD(3) + t304 * qJD(4), -t208, t316, t307, t208, -t306, 0, t43 * qJD(2) - qJD(3) * t312 + t254, t251 - t309, t20 * qJD(2) + (t145 + t250) * qJD(3) + t230, t274 + t1 * qJD(2) + (-t62 * qJ(4) + t182 * t312) * qJD(3) + t39 * qJD(4) + t34 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, -t307, t299, -t212 - t266, 0, 0, 0, 0, 0, 0, -t208, t299, t307, t35 * qJD(2) + t39 * qJD(3) + t224 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, t29 * qJD(2) + t34 * qJD(3) + t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t167, -t222, 0, t167, 0, 0, t216, t215, 0, 0, t208, t316, 0, -t208, 0, 0, -t95 - t236, -t235, 0, -t249, t208, 0, -t316, 0, 0, -t208, -t95 - t245, t24 * qJD(3), -t244, t8 * qJD(3) + t106 * qJD(4) - t267, t208, -t316, 0, -t208, 0, 0, t138 - t95 - t260, t134 - t258, t21 * qJD(3), t2 * qJD(3) + t38 * qJD(4) - t28 * qJD(5) - t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, -t175, 0, 0, 0, 0, 0, 0, 0, 0, -t214, 0, t164, t114 * qJD(3) + t160, 0, 0, 0, 0, 0, 0, -t214, t164, 0, t111 * qJD(3) + t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, -t175 - t174, 0, 0, 0, 0, 0, 0, 0, 0, t60, t246, t53, (-pkin(3) * t280 + t176) * qJD(3) + t160 + t194, 0, 0, 0, 0, 0, 0, t60, t53, t248, (t182 * t280 + t176) * qJD(3) + t160 + t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, t228 + t233, 0, 0, 0, 0, 0, 0, 0, t177, 0, t233 + t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224, t225, 0, -t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, t316, 0, -t208, 0, 0, t93 - t205, t206, 0, 0, t208, 0, -t316, 0, 0, -t208, t93 - t242, -t24 * qJD(2), -t241, -t8 * qJD(2) - t263, t208, -t316, 0, -t208, 0, 0, t138 + t93 - t254, t134 - t251, -t21 * qJD(2), -t2 * qJD(2) + t80 * qJD(4) - t33 * qJD(5) - t274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, t174, 0, 0, 0, 0, 0, 0, 0, 0, t75, -t246, t71, t178 - t194, 0, 0, 0, 0, 0, 0, t75, t71, -t248, t178 - t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t178, 0, 0, 0, 0, 0, 0, 0, qJD(4), 0, t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, t165, 0, 0, 0, 0, 0, 0, 0, t177, 0, -t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224, t225, 0, -t240; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, 0, -t299, t212 - t93, 0, 0, 0, 0, 0, 0, t208, -t299, 0, -t38 * qJD(2) - t80 * qJD(3) + (-qJD(1) * t45 - qJD(5)) * t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, t200 - t228, 0, 0, 0, 0, 0, 0, 0, -t177, 0, t200 - t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, -t165, 0, 0, 0, 0, 0, 0, 0, -t177, 0, t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t306, -t307, -t229, t28 * qJD(2) + t33 * qJD(3) + t223 - t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t224, -t225, 0, t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t224, -t225, 0, t240; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
