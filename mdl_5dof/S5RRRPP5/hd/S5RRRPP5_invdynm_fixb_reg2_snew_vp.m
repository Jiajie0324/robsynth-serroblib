% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRPP5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:59
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRPP5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP5_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP5_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPP5_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPP5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRRPP5_invdynm_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:58:49
% EndTime: 2019-12-31 20:59:04
% DurationCPUTime: 16.47s
% Computational Cost: add. (29344->593), mult. (63274->612), div. (0->0), fcn. (41192->6), ass. (0->376)
t1254 = sin(qJ(2));
t1257 = cos(qJ(2));
t1253 = sin(qJ(3));
t1256 = cos(qJ(3));
t1356 = qJD(1) * t1257;
t1357 = qJD(1) * t1254;
t1204 = t1253 * t1356 + t1256 * t1357;
t1201 = t1204 ^ 2;
t1249 = qJD(2) + qJD(3);
t1380 = t1249 ^ 2;
t1397 = t1201 + t1380;
t1202 = t1253 * t1357 - t1256 * t1356;
t1152 = t1204 * t1202;
t1248 = qJDD(2) + qJDD(3);
t1401 = t1152 + t1248;
t1422 = t1256 * t1401;
t1438 = -t1397 * t1253 + t1422;
t1418 = t1401 * t1253;
t1443 = t1397 * t1256 + t1418;
t1011 = t1254 * t1443 - t1257 * t1438;
t1255 = sin(qJ(1));
t1258 = cos(qJ(1));
t1237 = qJD(2) * t1356;
t1315 = t1254 * qJDD(1);
t1213 = t1237 + t1315;
t1310 = qJD(2) * t1357;
t1314 = t1257 * qJDD(1);
t1284 = t1310 - t1314;
t1115 = -t1202 * qJD(3) + t1256 * t1213 - t1253 * t1284;
t1324 = t1249 * t1202;
t1395 = -t1324 + t1115;
t1469 = pkin(5) * (t1011 * t1258 + t1395 * t1255);
t1470 = pkin(5) * (t1011 * t1255 - t1258 * t1395);
t1381 = t1202 ^ 2;
t1391 = -t1381 - t1201;
t1427 = t1255 * t1391;
t1304 = t1213 * t1253 + t1256 * t1284;
t1068 = (qJD(3) - t1249) * t1204 + t1304;
t1394 = t1324 + t1115;
t1344 = t1394 * t1253;
t1003 = t1068 * t1256 - t1344;
t1055 = t1256 * t1394;
t997 = t1068 * t1253 + t1055;
t958 = t1003 * t1257 - t1254 * t997;
t1500 = pkin(5) * (t1258 * t958 - t1427);
t1420 = t1258 * t1391;
t1499 = pkin(5) * (t1255 * t958 + t1420);
t1396 = t1201 - t1381;
t1346 = t1395 * t1253;
t1114 = qJD(3) * t1204 + t1304;
t1323 = t1249 * t1204;
t1405 = t1114 + t1323;
t1416 = t1405 * t1256;
t1005 = -t1416 - t1346;
t995 = t1405 * t1253 - t1256 * t1395;
t956 = -t1005 * t1257 - t1254 * t995;
t1493 = t1255 * t956 + t1258 * t1396;
t1491 = -t1396 * t1255 + t1258 * t956;
t1390 = t1381 - t1380;
t1094 = -t1256 * t1390 + t1418;
t1437 = t1253 * t1390 + t1422;
t1024 = t1094 * t1257 + t1254 * t1437;
t1406 = t1114 - t1323;
t1498 = t1024 * t1255 - t1406 * t1258;
t1497 = t1024 * t1258 + t1406 * t1255;
t1398 = t1201 - t1380;
t1402 = -t1152 + t1248;
t1417 = t1402 * t1253;
t1085 = t1256 * t1398 - t1417;
t1421 = t1256 * t1402;
t1440 = t1398 * t1253 + t1421;
t1474 = t1085 * t1254 + t1257 * t1440;
t1486 = t1255 * t1474 - t1258 * t1394;
t1485 = t1255 * t1394 + t1258 * t1474;
t952 = t1003 * t1254 + t1257 * t997;
t1496 = pkin(1) * t952;
t1495 = pkin(6) * t952;
t1452 = t1254 * t1438 + t1257 * t1443;
t1483 = pkin(1) * t1452;
t1482 = pkin(6) * t1452;
t1434 = pkin(1) * t1391;
t1494 = pkin(6) * t958 + t1434;
t1476 = pkin(1) * t1395 - pkin(6) * t1011;
t1464 = pkin(7) * t1438;
t1487 = -pkin(2) * t1395 - t1464;
t1473 = -t1085 * t1257 + t1254 * t1440;
t950 = -t1005 * t1254 + t1257 * t995;
t1018 = t1094 * t1254 - t1257 * t1437;
t1376 = pkin(2) * t997;
t1484 = pkin(7) * t997;
t1392 = -t1380 - t1381;
t1439 = t1253 * t1392 + t1421;
t1442 = t1256 * t1392 - t1417;
t1451 = t1254 * t1442 + t1257 * t1439;
t1468 = pkin(1) * t1451;
t1466 = pkin(2) * t1443;
t1465 = pkin(6) * t1451;
t1463 = pkin(7) * t1443;
t1447 = pkin(7) * t1442;
t1477 = -pkin(2) * t1405 + t1447;
t1450 = -t1254 * t1439 + t1257 * t1442;
t1458 = -pkin(1) * t1405 + pkin(6) * t1450;
t1433 = pkin(2) * t1391;
t1475 = -pkin(7) * t1003 - t1433;
t1457 = pkin(5) * (t1255 * t1450 - t1258 * t1405);
t1456 = pkin(5) * (t1405 * t1255 + t1258 * t1450);
t1467 = pkin(2) * t1439;
t1446 = pkin(7) * t1439;
t1445 = qJ(4) * t1391;
t1444 = t1395 * qJ(4);
t1431 = pkin(3) * t1394;
t1430 = qJ(5) * t1394;
t1252 = t1257 ^ 2;
t1260 = qJD(1) ^ 2;
t1222 = t1255 * g(1) - t1258 * g(2);
t1288 = qJDD(1) * pkin(1) + t1222;
t1119 = (pkin(7) * t1252 + pkin(6)) * t1260 - pkin(2) * t1284 - (qJD(2) * pkin(2) - pkin(7) * t1357) * t1357 + t1288;
t1266 = -pkin(3) * t1323 + t1119;
t1264 = t1266 + t1444;
t1147 = t1255 * t1152;
t1321 = t1249 * t1256;
t1294 = t1253 * t1115 + t1204 * t1321;
t1322 = t1249 * t1253;
t1175 = t1204 * t1322;
t1317 = t1256 * t1115 - t1175;
t1382 = -t1254 * t1294 + t1257 * t1317;
t1359 = t1258 * t1382 + t1147;
t1311 = t1202 * t1321;
t1285 = t1114 * t1253 + t1311;
t1293 = -t1256 * t1114 + t1202 * t1322;
t1385 = -t1254 * t1293 + t1257 * t1285;
t1414 = t1258 * t1385 - t1147;
t1148 = t1258 * t1152;
t1360 = t1255 * t1382 - t1148;
t1413 = t1255 * t1385 + t1148;
t1233 = t1258 * t1248;
t1292 = t1175 - t1311;
t1282 = (-t1202 * t1253 - t1204 * t1256) * t1249;
t1408 = t1254 * t1282;
t1386 = t1257 * t1292 - t1408;
t1412 = t1255 * t1386 - t1233;
t1325 = t1248 * t1255;
t1410 = t1258 * t1386 + t1325;
t1404 = pkin(3) * t1402 + qJ(4) * t1392;
t1403 = pkin(3) * t1397 + qJ(4) * t1401;
t1407 = t1257 * t1282;
t1354 = qJD(4) * t1249;
t1235 = 0.2e1 * t1354;
t1353 = qJD(5) * t1202;
t1400 = 0.2e1 * t1353 + t1235;
t1236 = -0.2e1 * t1354;
t1399 = -0.2e1 * t1353 + t1236;
t1244 = t1252 * t1260;
t1259 = qJD(2) ^ 2;
t1228 = -t1244 - t1259;
t1393 = -pkin(4) * t1405 - qJ(5) * t1392;
t1389 = -t1114 * pkin(4) - t1381 * qJ(5) + qJDD(5);
t1174 = -pkin(4) * t1249 - qJ(5) * t1204;
t1388 = (0.2e1 * qJD(4) + t1174) * t1204 + t1389;
t1387 = t1254 * t1292 + t1407;
t1384 = t1254 * t1285 + t1257 * t1293;
t1383 = t1254 * t1317 + t1257 * t1294;
t1379 = pkin(3) + pkin(4);
t1320 = t1254 * t1260;
t1223 = g(1) * t1258 + g(2) * t1255;
t1206 = -pkin(1) * t1260 + qJDD(1) * pkin(6) - t1223;
t1329 = t1206 * t1254;
t1358 = qJD(1) * qJD(2);
t1100 = qJDD(2) * pkin(2) - pkin(7) * t1213 - t1329 + (pkin(2) * t1320 + pkin(7) * t1358 - g(3)) * t1257;
t1173 = -t1254 * g(3) + t1257 * t1206;
t1104 = t1228 * pkin(2) + pkin(7) * t1314 + t1173;
t1028 = -t1256 * t1100 + t1104 * t1253;
t1029 = t1253 * t1100 + t1256 * t1104;
t965 = -t1028 * t1256 + t1029 * t1253;
t1378 = pkin(2) * t965;
t1281 = -t1248 * pkin(3) - qJ(4) * t1380 + qJDD(4) + t1028;
t1277 = -t1248 * pkin(4) + t1281 - t1430;
t1146 = pkin(3) * t1202 - qJ(4) * t1204;
t1307 = -pkin(4) * t1202 - t1146;
t947 = (-0.2e1 * qJD(5) - t1307) * t1204 + t1277;
t1377 = pkin(4) * t947;
t1374 = pkin(3) * t1256;
t1372 = pkin(4) * t1394;
t1371 = t1114 * pkin(3);
t1370 = qJ(5) * t947;
t1290 = pkin(3) * t1380 - t1248 * qJ(4) + t1202 * t1146 - t1029;
t1279 = pkin(4) * t1381 - t1114 * qJ(5) - t1249 * t1174 + t1290;
t949 = -t1279 + t1400;
t1369 = qJ(5) * t949;
t973 = t1235 - t1290;
t1336 = t1146 * t1204;
t975 = t1281 + t1336;
t1368 = -pkin(3) * t975 + qJ(4) * t973;
t1367 = qJ(4) * t1405;
t1365 = qJ(5) * t1402;
t1364 = qJ(5) * t1401;
t1363 = qJ(5) * t1397;
t1362 = t1254 * t965;
t1361 = t1257 * t965;
t1355 = qJD(4) * t1204;
t1343 = t1119 * t1253;
t1342 = t1119 * t1256;
t1205 = t1260 * pkin(6) + t1288;
t1331 = t1205 * t1254;
t1330 = t1205 * t1257;
t1214 = -0.2e1 * t1310 + t1314;
t1159 = t1214 * t1257;
t1232 = t1257 * t1320;
t1220 = qJDD(2) + t1232;
t1328 = t1220 * t1254;
t1221 = qJDD(2) - t1232;
t1327 = t1221 * t1254;
t1326 = t1221 * t1257;
t1318 = -qJ(4) * t1406 - t1431;
t1251 = t1254 ^ 2;
t1316 = t1251 + t1252;
t1313 = 0.2e1 * t1355;
t1309 = -qJ(4) * t1253 - pkin(2);
t1308 = (-t1114 - t1405) * pkin(3);
t966 = t1028 * t1253 + t1256 * t1029;
t1172 = g(3) * t1257 + t1329;
t1103 = t1172 * t1254 + t1257 * t1173;
t1303 = -t1222 * t1255 - t1258 * t1223;
t941 = t1253 * t973 - t1256 * t975;
t1302 = pkin(2) * t941 + t1368;
t1301 = -pkin(3) * t947 + qJ(4) * t949 - t1377;
t1300 = t1255 * t1232;
t1299 = t1258 * t1232;
t998 = -t1253 * t1406 - t1055;
t1298 = pkin(2) * t998 + t1318;
t1297 = -t1029 - t1466;
t1296 = qJ(4) * t1068 + t1372 + t1431;
t1217 = qJDD(1) * t1258 - t1255 * t1260;
t1295 = -pkin(5) * t1217 - g(3) * t1255;
t1102 = t1172 * t1257 - t1173 * t1254;
t1289 = t1222 * t1258 - t1223 * t1255;
t1287 = -t1028 + t1467;
t918 = t1253 * t949 - t1256 * t947;
t1286 = pkin(2) * t918 + t1301;
t1283 = t1296 + t1376;
t1280 = -t1290 + t1403;
t1278 = t1280 + t1466;
t1276 = pkin(4) * t1397 - t1279;
t1275 = -qJ(5) * t1068 + t1279;
t1274 = 0.2e1 * qJD(5) * t1204 - t1277;
t1273 = t1404 - t975;
t1272 = t1276 + t1400;
t1271 = t1273 + t1467;
t1269 = t1276 + t1403 + t1466;
t1268 = t1307 * t1204 + t1274 + t1430;
t1267 = -t1336 + (t1402 - t1152) * pkin(4) + t1274;
t1265 = t1267 + t1404;
t1263 = t1264 + t1313;
t1262 = t1266 - t1371 + 0.2e1 * t1444;
t1261 = t1264 + t1388;
t945 = t1261 - t1371;
t1243 = t1251 * t1260;
t1227 = t1244 - t1259;
t1226 = -t1243 - t1259;
t1225 = -t1243 + t1259;
t1219 = t1244 - t1243;
t1218 = t1243 + t1244;
t1216 = qJDD(1) * t1255 + t1258 * t1260;
t1215 = t1316 * qJDD(1);
t1212 = 0.2e1 * t1237 + t1315;
t1210 = t1257 * t1220;
t1209 = t1316 * t1358;
t1198 = -pkin(5) * t1216 + g(3) * t1258;
t1177 = t1213 * t1257 - t1251 * t1358;
t1176 = -t1252 * t1358 + t1254 * t1284;
t1168 = -t1226 * t1254 - t1326;
t1167 = -t1225 * t1254 + t1210;
t1166 = t1228 * t1257 - t1328;
t1165 = t1227 * t1257 - t1327;
t1164 = t1226 * t1257 - t1327;
t1163 = t1225 * t1257 + t1328;
t1162 = t1228 * t1254 + t1210;
t1161 = t1227 * t1254 + t1326;
t1160 = (t1213 + t1237) * t1254;
t1154 = -t1212 * t1254 + t1159;
t1153 = t1212 * t1257 + t1214 * t1254;
t1127 = (-t1202 * t1256 + t1204 * t1253) * t1249;
t1121 = -pkin(6) * t1164 - t1330;
t1120 = -pkin(6) * t1162 - t1331;
t1113 = -pkin(1) * t1164 + t1173;
t1112 = -pkin(1) * t1162 + t1172;
t1096 = pkin(1) * t1214 + pkin(6) * t1166 + t1330;
t1095 = -pkin(1) * t1212 + pkin(6) * t1168 - t1331;
t1054 = pkin(1) * t1205 + pkin(6) * t1103;
t1043 = pkin(1) * t1218 + pkin(6) * t1215 + t1103;
t1036 = t1127 * t1257 - t1408;
t1033 = t1127 * t1254 + t1407;
t1030 = t1365 - t1367;
t1026 = -t1342 + t1463;
t1025 = -t1343 - t1446;
t1004 = -t1256 * t1406 + t1344;
t976 = t1379 * t1395 - t1364;
t971 = -t1343 + t1487;
t970 = t1342 + t1477;
t969 = t1263 - t1371;
t968 = t975 - t1445;
t967 = -pkin(3) * t1391 + t973;
t964 = t1308 + t1263;
t963 = t1262 + t1313;
t962 = pkin(2) * t1119 + pkin(7) * t966;
t959 = t1004 * t1257 - t1254 * t998;
t953 = t1004 * t1254 + t1257 * t998;
t944 = -t1297 + t1483;
t943 = -t1287 - t1468;
t942 = t1253 * t975 + t1256 * t973;
t940 = -t965 + t1484;
t939 = t1262 + t1363 + t1388;
t938 = -qJ(4) * t1416 - t1253 * t964 - t1446;
t937 = t1268 + t1445;
t936 = -pkin(3) * t1346 + t1256 * t963 - t1463;
t935 = t1475 + t966;
t934 = t1376 + t1496;
t933 = -t1271 - t1468;
t932 = t1026 * t1257 - t1254 * t971 + t1482;
t931 = t1379 * t1391 + t1275 + t1399;
t930 = t1257 * t966 - t1362;
t929 = t1254 * t966 + t1361;
t928 = t1256 * t964 + t1309 * t1405 + t1447;
t927 = t1261 + t1308 + t1393;
t926 = t1464 + t1253 * t963 + (pkin(2) + t1374) * t1395;
t925 = t1236 - t1278 - t1483;
t924 = t1025 * t1257 - t1254 * t970 - t1465;
t923 = t1026 * t1254 + t1257 * t971 - t1476;
t922 = t1025 * t1254 + t1257 * t970 + t1458;
t921 = -pkin(1) * t953 - t1298;
t920 = -t1269 + t1399 - t1483;
t919 = t1253 * t947 + t1256 * t949;
t917 = -pkin(7) * t998 - t1253 * t967 + t1256 * t968;
t916 = qJ(4) * t945 - t1370;
t915 = -t1283 - t1496;
t914 = -t1253 * t976 + t1256 * t939 - t1463;
t913 = pkin(7) * t1004 + t1253 * t968 + t1256 * t967 - t1433;
t912 = -pkin(4) * t1402 - t1404 - t1467 - t1468 + t947;
t911 = t1030 * t1256 - t1253 * t927 - t1446;
t910 = -pkin(1) * t929 - t1378;
t909 = t1253 * t939 + t1256 * t976 - t1487;
t908 = -t1254 * t941 + t1257 * t942;
t907 = t1254 * t942 + t1257 * t941;
t906 = t1030 * t1253 + t1256 * t927 + t1477;
t905 = -pkin(7) * t941 + (-pkin(3) * t1253 + qJ(4) * t1256) * t969;
t904 = t1379 * t945 - t1369;
t903 = pkin(7) * t942 + (-t1309 + t1374) * t969;
t902 = -pkin(6) * t929 - pkin(7) * t1361 - t1254 * t962;
t901 = -t1253 * t931 + t1256 * t937 - t1484;
t900 = -t1254 * t928 + t1257 * t938 - t1465;
t899 = pkin(1) * t1119 + pkin(6) * t930 - pkin(7) * t1362 + t1257 * t962;
t898 = t1253 * t937 + t1256 * t931 - t1475;
t897 = -t1254 * t926 + t1257 * t936 - t1482;
t896 = -t1254 * t935 + t1257 * t940 + t1495;
t895 = t1254 * t938 + t1257 * t928 + t1458;
t894 = t1254 * t940 + t1257 * t935 - t1494;
t893 = t1254 * t936 + t1257 * t926 + t1476;
t892 = -t1254 * t918 + t1257 * t919;
t891 = t1254 * t919 + t1257 * t918;
t890 = -pkin(1) * t907 - t1302;
t889 = -t1254 * t909 + t1257 * t914 - t1482;
t888 = -pkin(6) * t953 - t1254 * t913 + t1257 * t917;
t887 = t1254 * t914 + t1257 * t909 + t1476;
t886 = -t1254 * t906 + t1257 * t911 - t1465;
t885 = pkin(6) * t959 + t1254 * t917 + t1257 * t913 - t1434;
t884 = t1254 * t911 + t1257 * t906 + t1458;
t883 = -pkin(7) * t918 - t1253 * t904 + t1256 * t916;
t882 = -t1254 * t898 + t1257 * t901 - t1495;
t881 = t1254 * t901 + t1257 * t898 + t1494;
t880 = pkin(2) * t945 + pkin(7) * t919 + t1253 * t916 + t1256 * t904;
t879 = -pkin(6) * t907 - t1254 * t903 + t1257 * t905;
t878 = -pkin(1) * t891 - t1286;
t877 = pkin(1) * t969 + pkin(6) * t908 + t1254 * t905 + t1257 * t903;
t876 = -pkin(6) * t891 - t1254 * t880 + t1257 * t883;
t875 = pkin(1) * t945 + pkin(6) * t892 + t1254 * t883 + t1257 * t880;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1217, 0, -t1216, 0, t1295, -t1198, -t1289, -pkin(5) * t1289, t1177 * t1258 - t1300, t1154 * t1258 - t1219 * t1255, t1167 * t1258 + t1255 * t1315, t1176 * t1258 + t1300, t1165 * t1258 + t1255 * t1314, qJDD(2) * t1255 + t1209 * t1258, t1258 * t1120 - t1255 * t1112 - pkin(5) * (t1166 * t1255 + t1214 * t1258), t1258 * t1121 - t1255 * t1113 - pkin(5) * (t1168 * t1255 - t1212 * t1258), t1258 * t1102 - pkin(5) * (t1215 * t1255 + t1218 * t1258), -pkin(5) * (t1103 * t1255 + t1205 * t1258) - (pkin(1) * t1255 - pkin(6) * t1258) * t1102, t1359, -t1491, t1485, t1414, -t1497, t1410, -t1255 * t943 + t1258 * t924 - t1457, -t1255 * t944 + t1258 * t932 - t1470, -t1255 * t934 + t1258 * t896 + t1499, t1258 * t902 - t1255 * t910 - pkin(5) * (t1119 * t1258 + t1255 * t930), t1359, t1485, t1491, t1410, t1497, t1414, -t1255 * t933 + t1258 * t900 - t1457, t1258 * t888 - t1255 * t921 - pkin(5) * (t1255 * t959 - t1420), -t1255 * t925 + t1258 * t897 + t1470, t1258 * t879 - t1255 * t890 - pkin(5) * (t1255 * t908 + t1258 * t969), t1359, t1491, -t1485, t1414, -t1497, t1036 * t1258 + t1325, -t1255 * t912 + t1258 * t886 - t1457, -t1255 * t920 + t1258 * t889 + t1470, -t1255 * t915 + t1258 * t882 - t1499, t1258 * t876 - t1255 * t878 - pkin(5) * (t1255 * t892 + t1258 * t945); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1216, 0, t1217, 0, t1198, t1295, t1303, pkin(5) * t1303, t1177 * t1255 + t1299, t1154 * t1255 + t1219 * t1258, t1167 * t1255 - t1258 * t1315, t1176 * t1255 - t1299, t1165 * t1255 - t1258 * t1314, -qJDD(2) * t1258 + t1209 * t1255, t1255 * t1120 + t1258 * t1112 + pkin(5) * (t1166 * t1258 - t1214 * t1255), t1255 * t1121 + t1258 * t1113 + pkin(5) * (t1168 * t1258 + t1212 * t1255), t1255 * t1102 + pkin(5) * (t1215 * t1258 - t1218 * t1255), pkin(5) * (t1103 * t1258 - t1205 * t1255) - (-pkin(1) * t1258 - pkin(6) * t1255) * t1102, t1360, -t1493, t1486, t1413, -t1498, t1412, t1255 * t924 + t1258 * t943 + t1456, t1255 * t932 + t1258 * t944 + t1469, t1255 * t896 + t1258 * t934 - t1500, t1255 * t902 + t1258 * t910 + pkin(5) * (-t1119 * t1255 + t1258 * t930), t1360, t1486, t1493, t1412, t1498, t1413, t1255 * t900 + t1258 * t933 + t1456, t1255 * t888 + t1258 * t921 + pkin(5) * (t1258 * t959 + t1427), t1255 * t897 + t1258 * t925 - t1469, t1255 * t879 + t1258 * t890 + pkin(5) * (-t1255 * t969 + t1258 * t908), t1360, t1493, -t1486, t1413, -t1498, t1036 * t1255 - t1233, t1255 * t886 + t1258 * t912 + t1456, t1255 * t889 + t1258 * t920 - t1469, t1255 * t882 + t1258 * t915 + t1500, t1255 * t876 + t1258 * t878 + pkin(5) * (-t1255 * t945 + t1258 * t892); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1222, t1223, 0, 0, t1160, t1153, t1163, t1159, t1161, 0, t1096, t1095, t1043, t1054, t1383, -t950, t1473, t1384, -t1018, t1387, t922, t923, t894, t899, t1383, t1473, t950, t1387, t1018, t1384, t895, t885, t893, t877, t1383, t950, -t1473, t1384, -t1018, t1033, t884, t887, t881, t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1260, 0, 0, -g(3), -t1222, 0, t1177, t1154, t1167, t1176, t1165, t1209, t1120, t1121, t1102, pkin(6) * t1102, t1382, -t956, t1474, t1385, -t1024, t1386, t924, t932, t896, t902, t1382, t1474, t956, t1386, t1024, t1385, t900, t888, t897, t879, t1382, t956, -t1474, t1385, -t1024, t1036, t886, t889, t882, t876; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1260, 0, qJDD(1), 0, g(3), 0, -t1223, 0, t1232, t1219, -t1315, -t1232, -t1314, -qJDD(2), t1112, t1113, 0, pkin(1) * t1102, -t1152, -t1396, -t1394, t1152, t1406, -t1248, t943, t944, t934, t910, -t1152, -t1394, t1396, -t1248, -t1406, t1152, t933, t921, t925, t890, -t1152, t1396, t1394, t1152, t1406, -t1248, t912, t920, t915, t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1222, t1223, 0, 0, t1160, t1153, t1163, t1159, t1161, 0, t1096, t1095, t1043, t1054, t1383, -t950, t1473, t1384, -t1018, t1387, t922, t923, t894, t899, t1383, t1473, t950, t1387, t1018, t1384, t895, t885, t893, t877, t1383, t950, -t1473, t1384, -t1018, t1033, t884, t887, t881, t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1213, t1214, t1220, -t1237, t1227, t1237, 0, -t1205, t1172, 0, t1317, t1005, t1440, t1285, -t1094, t1292, t1025, t1026, t940, -pkin(7) * t965, t1317, t1440, -t1005, t1292, t1094, t1285, t938, t917, t936, t905, t1317, -t1005, -t1440, t1285, -t1094, t1127, t911, t914, t901, t883; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1310, t1212, t1225, -t1284, t1221, -t1310, t1205, 0, t1173, 0, t1294, -t995, -t1085, t1293, t1437, t1282, t970, t971, t935, t962, t1294, -t1085, t995, t1282, -t1437, t1293, t928, t913, t926, t903, t1294, t995, t1085, t1293, t1437, t1282, t906, t909, t898, t880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1232, -t1219, t1315, t1232, t1314, qJDD(2), -t1172, -t1173, 0, 0, t1152, t1396, t1394, -t1152, -t1406, t1248, t1287, t1297, -t1376, t1378, t1152, t1394, -t1396, t1248, t1406, -t1152, t1271, t1298, t1235 + t1278, t1302, t1152, -t1396, -t1394, -t1152, -t1406, t1248, t1265 + t1467, t1269 + t1400, t1283, t1286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1115, -t1405, t1402, t1324, t1390, -t1324, 0, -t1119, t1028, 0, t1115, t1402, t1405, -t1324, -t1390, t1324, -t1367, t968, t963, qJ(4) * t969, t1115, t1405, -t1402, t1324, t1390, -t1324, t1030, t939, t937, t916; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1323, t1395, -t1398, -t1114, t1401, -t1323, t1119, 0, t1029, 0, t1323, -t1398, -t1395, -t1323, -t1401, -t1114, t964, t967, pkin(3) * t1395, pkin(3) * t969, t1323, -t1395, t1398, -t1114, t1401, -t1323, t927, t976, t931, t904; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1152, t1396, t1394, -t1152, -t1406, t1248, -t1028, -t1029, 0, 0, t1152, t1394, -t1396, t1248, t1406, -t1152, t1273, t1318, t1235 + t1280, t1368, t1152, -t1396, -t1394, -t1152, -t1406, t1248, t1265, t1272 + t1403, t1296, t1301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1115, t1402, t1405, -t1324, -t1390, t1324, 0, t975, t969, 0, t1115, t1405, -t1402, t1324, t1390, -t1324, t1365, t945 + t1363, t1268, -t1370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1152, t1394, -t1396, t1248, t1406, -t1152, -t975, 0, t973, 0, t1152, -t1396, -t1394, -t1152, -t1406, t1248, t1267, t1272, t1372, -t1377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1323, t1398, t1395, t1323, t1401, t1114, -t969, -t973, 0, 0, -t1323, t1395, -t1398, t1114, -t1401, t1323, -t1204 * t1174 - t1264 - 0.2e1 * t1355 + t1371 - t1389 - t1393, -pkin(4) * t1395 + t1364, -pkin(4) * t1391 - t1275 + t1400, -pkin(4) * t945 + t1369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1115, t1405, -t1402, t1324, t1390, -t1324, 0, t945, -t947, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1323, t1395, -t1398, t1114, -t1401, t1323, -t945, 0, t949, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1152, t1396, t1394, t1152, t1406, -t1248, t947, -t949, 0, 0;];
m_new_reg = t1;
