% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:33
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPR13_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR13_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR13_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRPR13_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:32:58
% EndTime: 2019-12-31 18:33:03
% DurationCPUTime: 2.71s
% Computational Cost: add. (3474->235), mult. (6735->296), div. (0->0), fcn. (7458->6), ass. (0->189)
t159 = sin(qJ(5));
t157 = sin(pkin(8));
t158 = cos(pkin(8));
t270 = sin(qJ(3));
t271 = cos(qJ(3));
t142 = t271 * t157 + t270 * t158;
t266 = pkin(6) + qJ(2);
t190 = t266 * t158;
t191 = t266 * t157;
t94 = t270 * t190 + t271 * t191;
t163 = t142 * pkin(4) + t94;
t254 = t159 * t163;
t160 = cos(qJ(5));
t287 = t160 * t163;
t149 = t271 * t158;
t201 = t270 * t157;
t140 = t201 - t149;
t273 = pkin(3) + pkin(7);
t286 = t273 * t140;
t285 = t273 * t142;
t221 = qJD(5) * t159;
t80 = t159 * t142;
t232 = t80 * qJD(1);
t284 = t232 + t221;
t274 = t142 ^ 2;
t275 = t140 ^ 2;
t278 = t275 - t274;
t283 = t278 * qJD(1);
t282 = t278 * qJD(3);
t279 = t274 + t275;
t281 = t279 * qJD(1);
t280 = t279 * qJD(2);
t84 = t160 * t140;
t189 = 0.2e1 * t159 * t84;
t150 = -t158 * pkin(2) - pkin(1);
t249 = t142 * qJ(4);
t174 = t150 - t249;
t58 = t174 + t286;
t36 = t159 * t58 - t287;
t37 = t160 * t58 + t254;
t12 = (t159 * t36 + t37 * t160) * t142;
t175 = t270 * t191;
t176 = t271 * t190;
t95 = t176 - t175;
t181 = -t95 * t140 + t94 * t142;
t277 = t181 * qJD(1);
t276 = t181 * qJD(2);
t156 = t160 ^ 2;
t272 = t156 / 0.2e1;
t269 = pkin(3) * t142;
t268 = t140 * pkin(3);
t267 = t140 * pkin(4);
t251 = qJ(4) * t140;
t66 = t251 + t285;
t264 = t159 * t66;
t70 = t95 - t267;
t65 = t70 * t160;
t44 = t65 - t264;
t252 = t70 * t159;
t263 = t160 * t66;
t45 = t252 + t263;
t1 = -t163 * t70 - t36 * t44 + t37 * t45;
t265 = t1 * qJD(1);
t257 = t45 * t160;
t260 = t44 * t159;
t2 = t12 + (t257 - t260) * t140;
t262 = t2 * qJD(1);
t4 = (t44 - t65) * t142 + (t36 + t287) * t140;
t261 = t4 * qJD(1);
t259 = t44 * t160;
t258 = t45 * t159;
t5 = (-t45 + t252) * t142 + (t37 - t254) * t140;
t256 = t5 * qJD(1);
t6 = -t70 * t140 + (t37 * t159 - t160 * t36) * t142;
t255 = t6 * qJD(1);
t115 = -t251 / 0.2e1;
t155 = t159 ^ 2;
t183 = (t272 + t155 / 0.2e1) * t142;
t167 = -t183 * t273 + t115;
t173 = t260 / 0.2e1 - t257 / 0.2e1;
t7 = t167 + t173;
t253 = t7 * qJD(1);
t250 = t12 * qJD(1);
t118 = t155 * t142;
t119 = t156 * t142;
t79 = t174 + t268;
t87 = t251 + t269;
t22 = t79 * t87;
t248 = t22 * qJD(1);
t23 = t36 * t142 + t70 * t84;
t247 = t23 * qJD(1);
t24 = t140 * t252 - t37 * t142;
t246 = t24 * qJD(1);
t42 = -t87 * t140 - t79 * t142;
t245 = t42 * qJD(1);
t43 = t79 * t140 - t87 * t142;
t244 = t43 * qJD(1);
t50 = t183 + t119 / 0.2e1 + t118 / 0.2e1;
t241 = t50 * qJD(1);
t116 = t251 / 0.2e1;
t52 = 0.2e1 * t116 + t269;
t240 = t52 * qJD(1);
t54 = t279 * t159;
t239 = t54 * qJD(1);
t55 = (-t155 - t156) * t142 * t140;
t238 = t55 * qJD(1);
t61 = t278 * t159;
t237 = t61 * qJD(1);
t62 = t278 * t160;
t236 = t62 * qJD(1);
t63 = t279 * t160;
t235 = t63 * qJD(1);
t231 = t80 * qJD(5);
t82 = (t272 - t155 / 0.2e1) * t140;
t230 = t82 * qJD(5);
t229 = t84 * qJD(1);
t228 = t84 * qJD(3);
t85 = -t118 - t119;
t227 = t85 * qJD(1);
t224 = t94 * qJD(3);
t88 = t95 * qJD(3);
t145 = t157 ^ 2 + t158 ^ 2;
t148 = t155 - t156;
t223 = qJD(1) * t159;
t222 = qJD(4) * t159;
t220 = qJD(5) * t160;
t219 = qJD(5) * t273;
t134 = t201 / 0.2e1 - t149 / 0.2e1;
t218 = t134 * qJD(1);
t217 = t274 * qJD(1);
t216 = t274 * qJD(4);
t215 = t140 * qJD(1);
t214 = t140 * qJD(2);
t213 = t140 * qJD(3);
t212 = t140 * qJD(4);
t211 = t142 * qJD(1);
t128 = t142 * qJD(2);
t210 = t142 * qJD(3);
t209 = t142 * qJD(4);
t144 = t145 * qJ(2);
t208 = t144 * qJD(1);
t207 = t145 * qJD(1);
t206 = t159 * qJD(3);
t205 = t160 * qJD(3);
t202 = t79 * t211;
t200 = t142 * t221;
t199 = t142 * t220;
t198 = t140 * t211;
t92 = t140 * t210;
t197 = t159 * t215;
t196 = t140 * t206;
t195 = t274 * t223;
t194 = t159 * t220;
t113 = t160 * t211;
t193 = t159 * t205;
t162 = -t267 / 0.2e1 + t176 / 0.2e1 - t175 / 0.2e1;
t172 = -t259 / 0.2e1 - t258 / 0.2e1;
t10 = t162 + t172;
t153 = qJD(3) * qJ(4);
t188 = t10 * qJD(1) + t153;
t187 = t134 * qJD(5) + t198;
t186 = qJD(1) * t150 + qJD(2);
t185 = qJD(5) + t211;
t184 = t275 * t194;
t182 = qJD(3) * t189;
t179 = t258 + t259;
t178 = t249 - t286;
t177 = t185 * t159;
t171 = t285 / 0.2e1 + t116;
t164 = t66 / 0.2e1 + t171;
t47 = t164 * t160;
t170 = qJ(4) * t206 - t47 * qJD(1);
t46 = t164 * t159;
t169 = -qJ(4) * t205 - t46 * qJD(1);
t68 = -t82 * qJD(1) + t193;
t168 = t140 * t177;
t56 = t160 * t223 * t275 + t82 * qJD(3);
t86 = t148 * t275;
t166 = t86 * qJD(1) + t182;
t165 = qJD(1) * t189 - t148 * qJD(3);
t154 = qJ(4) * qJD(4);
t114 = t134 * qJD(3);
t96 = -t113 - t220;
t53 = t116 + t115;
t28 = -t252 - t263 / 0.2e1 + t171 * t160;
t27 = t65 - t264 / 0.2e1 + t171 * t159;
t9 = t162 - t172;
t8 = t167 - t173;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145 * qJD(2), t144 * qJD(2), -t92, t282, 0, t92, 0, 0, t150 * t210, -t150 * t213, t280, t276, 0, 0, 0, -t92, t282, t92, t280, t42 * qJD(3) + t140 * t209, t43 * qJD(3) + t216, t22 * qJD(3) - t79 * t209 + t276, t155 * t92 + t184, -t86 * qJD(5) + t142 * t182, -t61 * qJD(3) + t140 * t199, t156 * t92 - t184, -t62 * qJD(3) - t140 * t200, -t92, t63 * qJD(2) + t4 * qJD(3) + t24 * qJD(5) + t274 * t222, -t54 * qJD(2) + t5 * qJD(3) + t23 * qJD(5) + t160 * t216, t2 * qJD(3) + t55 * qJD(4), t6 * qJD(2) + t1 * qJD(3) - t12 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, t208, 0, 0, 0, 0, 0, 0, 0, 0, t281, t277, 0, 0, 0, 0, 0, 0, t281, 0, 0, t53 * qJD(3) + t277, 0, 0, 0, 0, 0, 0, t235, -t239, 0, t8 * qJD(3) + t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198, t283, -t213, t198, -t210, 0, t150 * t211 - t88, -t150 * t215 + t224, 0, 0, 0, t213, t210, -t198, t283, t198, (-t249 + t268) * qJD(3) - t212, t88 + t245, -t224 + t244, t248 + t53 * qJD(2) + (-t95 * pkin(3) - t94 * qJ(4)) * qJD(3) + t95 * qJD(4), t230 + (t155 * t215 + t193) * t142, (t119 - t118) * qJD(3) + (-qJD(5) + t211) * t189, -t140 * t205 - t237, -t230 + (t156 * t215 - t193) * t142, t196 - t236, -t187, t261 + (-t160 * t178 - t254) * qJD(3) - t84 * qJD(4) + t27 * qJD(5), -t163 * t205 + t256 + t28 * qJD(5) + (qJD(3) * t178 + t212) * t159, -qJD(3) * t179 + t262, t265 + t8 * qJD(2) + (-qJ(4) * t163 - t179 * t273) * qJD(3) + t9 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t213, t198, t217, t88 - t202, 0, 0, 0, 0, 0, 0, t195 - t228, t160 * t217 + t196, t238, t9 * qJD(3) - t250; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, -t166, t185 * t84, -t56, -t168, -t114, t27 * qJD(3) - t37 * qJD(5) + t246, t28 * qJD(3) + t36 * qJD(5) + t247, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t207, -t208, 0, 0, 0, 0, 0, 0, t210, -t213, -t281, -t277, 0, 0, 0, 0, 0, 0, -t281, -t210, t213, t52 * qJD(3) - t209 - t277, 0, 0, 0, 0, 0, 0, t196 - t199 - t235, t228 + t231 + t239, -t85 * qJD(3), -t7 * qJD(3) - t50 * qJD(4) - t255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, -t215, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, t215, t240, 0, 0, 0, 0, 0, 0, t197, t229, -t227, -t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96, t284, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, -t283, 0, -t198, 0, 0, -t186 * t142, t186 * t140, 0, 0, 0, 0, 0, t198, -t283, -t198, 0, t128 - t245, -t214 - t244, -t52 * qJD(2) - t248, -t155 * t198 + t230, -0.2e1 * t160 * t168, -t200 + t237, -t156 * t198 - t230, -t199 + t236, t187, t46 * qJD(5) - t159 * t214 - t261, -t84 * qJD(2) + t47 * qJD(5) - t256, t85 * qJD(2) - t262, t7 * qJD(2) + t10 * qJD(4) - t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, t215, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, -t215, -t240, 0, 0, 0, 0, 0, 0, -t197, -t229, t227, t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t154, -t194, t148 * qJD(5), 0, t194, 0, 0, qJ(4) * t220 + t222, -qJ(4) * t221 + qJD(4) * t160, 0, t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t153, 0, 0, 0, 0, 0, 0, t206, t205, 0, t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, -t165, -t177, t68, t96, t218, t159 * t219 - t169, t160 * t219 - t170, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198, -t217, t128 + t202, 0, 0, 0, 0, 0, 0, -t195 - t231, (-qJD(5) * t142 - t217) * t160, -t238, t50 * qJD(2) - t10 * qJD(3) + t250; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t153, 0, 0, 0, 0, 0, 0, -t206, -t205, 0, -t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t284, -t185 * t160, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, t166, (-t160 * t215 + t206) * t142, t56, (t197 + t205) * t142, -t114, -t46 * qJD(3) + t80 * qJD(4) + t128 * t160 - t246, -t80 * qJD(2) - t47 * qJD(3) + t160 * t209 - t247, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, -t232, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, t165, t159 * t211, -t68, t113, -t218, t169, t170, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, t113, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
