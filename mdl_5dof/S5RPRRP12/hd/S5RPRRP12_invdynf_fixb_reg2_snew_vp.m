% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPRRP12
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:57
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPRRP12_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP12_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP12_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP12_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP12_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RPRRP12_invdynf_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:57:39
% EndTime: 2019-12-31 18:57:41
% DurationCPUTime: 1.52s
% Computational Cost: add. (3760->171), mult. (7402->178), div. (0->0), fcn. (4552->6), ass. (0->106)
t1032 = sin(qJ(3));
t1051 = t1032 * qJD(1);
t1019 = qJD(4) + t1051;
t1058 = qJD(4) + t1019;
t1038 = qJD(1) ^ 2;
t1033 = sin(qJ(1));
t1036 = cos(qJ(1));
t1016 = -t1036 * g(1) - t1033 * g(2);
t1039 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1016;
t1054 = pkin(6) + pkin(1);
t996 = t1054 * t1038 + t1039;
t1031 = sin(qJ(4));
t1034 = cos(qJ(4));
t1035 = cos(qJ(3));
t1053 = qJD(1) * t1035;
t1003 = -t1034 * qJD(3) + t1031 * t1053;
t1002 = t1003 ^ 2;
t1005 = t1031 * qJD(3) + t1034 * t1053;
t1057 = t1005 ^ 2;
t1056 = t1019 ^ 2;
t1055 = -2 * qJD(5);
t1020 = qJD(3) * t1053;
t1021 = t1032 * qJDD(1);
t1006 = t1021 + 0.2e1 * t1020;
t1047 = qJD(3) * t1051;
t1048 = t1035 * qJDD(1);
t1007 = -t1047 + t1048;
t974 = (-t1007 + t1047) * pkin(7) + t1006 * pkin(3) - t996;
t1037 = qJD(3) ^ 2;
t1041 = t1038 * (pkin(3) * t1032 - pkin(7) * t1035);
t1015 = t1033 * g(1) - t1036 * g(2);
t1040 = -t1038 * qJ(2) + qJDD(2) - t1015;
t997 = -t1054 * qJDD(1) + t1040;
t989 = -t1035 * g(3) + t1032 * t997;
t981 = -t1037 * pkin(3) + qJDD(3) * pkin(7) - t1032 * t1041 + t989;
t963 = t1031 * t974 + t1034 * t981;
t1052 = t1005 * t1003;
t1050 = qJD(4) - t1019;
t1029 = t1032 ^ 2;
t1030 = t1035 ^ 2;
t1049 = t1029 + t1030;
t1046 = t1032 * t1038 * t1035;
t1045 = -qJDD(4) - t1020 - t1021;
t962 = -t1031 * t981 + t1034 * t974;
t1044 = -t1034 * qJDD(3) + t1031 * t1007;
t1043 = t1019 * pkin(4) - t1005 * qJ(5);
t988 = t1032 * g(3) + t1035 * t997;
t1042 = -t1031 * qJDD(3) - t1034 * t1007;
t983 = -t1045 - t1052;
t978 = t1050 * t1003 + t1042;
t980 = qJDD(3) * pkin(3) + t1037 * pkin(7) - t1035 * t1041 + t988;
t1018 = -t1030 * t1038 - t1037;
t1017 = -t1029 * t1038 - t1037;
t1014 = -qJDD(3) - t1046;
t1013 = qJDD(3) - t1046;
t1012 = t1049 * t1038;
t1011 = t1033 * qJDD(1) + t1036 * t1038;
t1010 = t1036 * qJDD(1) - t1033 * t1038;
t1009 = t1049 * qJDD(1);
t1008 = -0.2e1 * t1047 + t1048;
t1000 = qJDD(1) * pkin(1) - t1040;
t999 = t1038 * pkin(1) + t1039;
t994 = t1035 * t1014 - t1032 * t1018;
t993 = -t1032 * t1013 + t1035 * t1017;
t992 = t1032 * t1014 + t1035 * t1018;
t991 = t1035 * t1013 + t1032 * t1017;
t990 = -t1056 - t1057;
t987 = -t1056 - t1002;
t986 = -t1005 * qJD(4) - t1044;
t984 = t1045 - t1052;
t982 = -t1002 - t1057;
t977 = -t1058 * t1003 - t1042;
t976 = -t1050 * t1005 - t1044;
t975 = t1058 * t1005 + t1044;
t973 = -t1032 * t988 + t1035 * t989;
t972 = t1032 * t989 + t1035 * t988;
t969 = -t1031 * t990 + t1034 * t984;
t968 = t1031 * t984 + t1034 * t990;
t967 = -t1031 * t983 + t1034 * t987;
t966 = t1031 * t987 + t1034 * t983;
t965 = -t1031 * t978 + t1034 * t976;
t964 = t1031 * t976 + t1034 * t978;
t961 = t1032 * t977 + t1035 * t969;
t960 = t1032 * t969 - t1035 * t977;
t959 = t986 * pkin(4) + t1002 * qJ(5) - t1005 * t1043 - qJDD(5) + t980;
t958 = t1032 * t975 + t1035 * t967;
t957 = t1032 * t967 - t1035 * t975;
t956 = t1032 * t982 + t1035 * t965;
t955 = t1032 * t965 - t1035 * t982;
t954 = -t1002 * pkin(4) + t986 * qJ(5) + t1003 * t1055 - t1019 * t1043 + t963;
t953 = t1033 * t960 + t1036 * t968;
t952 = t1033 * t968 - t1036 * t960;
t951 = t1033 * t957 + t1036 * t966;
t950 = t1033 * t966 - t1036 * t957;
t949 = t983 * pkin(4) + t978 * qJ(5) + t1005 * t1055 + t962;
t948 = -t1031 * t962 + t1034 * t963;
t947 = t1031 * t963 + t1034 * t962;
t946 = t1033 * t955 + t1036 * t964;
t945 = t1033 * t964 - t1036 * t955;
t944 = -t1032 * t980 + t1035 * t948;
t943 = t1032 * t948 + t1035 * t980;
t942 = -t1031 * t949 + t1034 * t954;
t941 = t1031 * t954 + t1034 * t949;
t940 = -t1032 * t959 + t1035 * t942;
t939 = t1032 * t942 + t1035 * t959;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1011, -t1010, 0, -t1033 * t1015 + t1036 * t1016, 0, 0, 0, 0, 0, 0, 0, t1011, t1010, -t1033 * t1000 - t1036 * t999, 0, 0, 0, 0, 0, 0, t1036 * t1006 + t1033 * t991, t1036 * t1008 + t1033 * t992, -t1033 * t1009 - t1036 * t1012, t1033 * t972 - t1036 * t996, 0, 0, 0, 0, 0, 0, t951, t953, t946, t1033 * t943 + t1036 * t947, 0, 0, 0, 0, 0, 0, t951, t953, t946, t1033 * t939 + t1036 * t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1010, -t1011, 0, t1036 * t1015 + t1033 * t1016, 0, 0, 0, 0, 0, 0, 0, -t1010, t1011, t1036 * t1000 - t1033 * t999, 0, 0, 0, 0, 0, 0, t1033 * t1006 - t1036 * t991, t1033 * t1008 - t1036 * t992, t1036 * t1009 - t1033 * t1012, -t1033 * t996 - t1036 * t972, 0, 0, 0, 0, 0, 0, t950, t952, t945, t1033 * t947 - t1036 * t943, 0, 0, 0, 0, 0, 0, t950, t952, t945, t1033 * t941 - t1036 * t939; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t993, t994, 0, t973, 0, 0, 0, 0, 0, 0, t958, t961, t956, t944, 0, 0, 0, 0, 0, 0, t958, t961, t956, t940; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1038, -qJDD(1), 0, t1016, 0, 0, 0, 0, 0, 0, 0, t1038, qJDD(1), -t999, 0, 0, 0, 0, 0, 0, t1006, t1008, -t1012, -t996, 0, 0, 0, 0, 0, 0, t966, t968, t964, t947, 0, 0, 0, 0, 0, 0, t966, t968, t964, t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1038, 0, t1015, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1038, t1000, 0, 0, 0, 0, 0, 0, -t991, -t992, t1009, -t972, 0, 0, 0, 0, 0, 0, -t957, -t960, -t955, -t943, 0, 0, 0, 0, 0, 0, -t957, -t960, -t955, -t939; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t993, t994, 0, t973, 0, 0, 0, 0, 0, 0, t958, t961, t956, t944, 0, 0, 0, 0, 0, 0, t958, t961, t956, t940; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t993, t994, 0, t973, 0, 0, 0, 0, 0, 0, t958, t961, t956, t944, 0, 0, 0, 0, 0, 0, t958, t961, t956, t940; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1038, -qJDD(1), t999, 0, 0, 0, 0, 0, 0, -t1006, -t1008, t1012, t996, 0, 0, 0, 0, 0, 0, -t966, -t968, -t964, -t947, 0, 0, 0, 0, 0, 0, -t966, -t968, -t964, -t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1038, -t1000, 0, 0, 0, 0, 0, 0, t991, t992, -t1009, t972, 0, 0, 0, 0, 0, 0, t957, t960, t955, t943, 0, 0, 0, 0, 0, 0, t957, t960, t955, t939; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1017, t1014, -t1021, t989, 0, 0, 0, 0, 0, 0, t967, t969, t965, t948, 0, 0, 0, 0, 0, 0, t967, t969, t965, t942; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1013, t1018, -t1048, t988, 0, 0, 0, 0, 0, 0, -t975, -t977, -t982, t980, 0, 0, 0, 0, 0, 0, -t975, -t977, -t982, t959; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1006, t1008, -t1012, -t996, 0, 0, 0, 0, 0, 0, t966, t968, t964, t947, 0, 0, 0, 0, 0, 0, t966, t968, t964, t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t987, t984, t976, t963, 0, 0, 0, 0, 0, 0, t987, t984, t976, t954; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t983, t990, t978, t962, 0, 0, 0, 0, 0, 0, t983, t990, t978, t949; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t975, t977, t982, -t980, 0, 0, 0, 0, 0, 0, t975, t977, t982, -t959; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t987, t984, t976, t954; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t983, t990, t978, t949; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t975, t977, t982, -t959;];
f_new_reg = t1;
