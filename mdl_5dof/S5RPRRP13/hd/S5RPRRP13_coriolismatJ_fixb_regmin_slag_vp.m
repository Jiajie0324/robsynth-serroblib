% Calculate minimal parameter regressor of coriolis matrix for
% S5RPRRP13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x24]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:00
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP13_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP13_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP13_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RPRRP13_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:59:39
% EndTime: 2019-12-31 18:59:46
% DurationCPUTime: 2.79s
% Computational Cost: add. (2075->332), mult. (3972->424), div. (0->0), fcn. (3199->4), ass. (0->255)
t177 = cos(qJ(4));
t178 = cos(qJ(3));
t249 = t178 * qJD(3);
t157 = t177 * t249;
t175 = sin(qJ(4));
t176 = sin(qJ(3));
t252 = t176 * qJD(4);
t232 = t175 * t252;
t174 = t178 ^ 2;
t323 = t176 ^ 2;
t247 = t323 / 0.2e1;
t216 = t247 + t174 / 0.2e1;
t94 = (0.1e1 / 0.2e1 + t216) * t175;
t271 = t94 * qJD(1);
t325 = -t157 + t232 + t271;
t153 = t175 * t249;
t158 = t177 * t252;
t163 = t174 * t177;
t318 = t163 / 0.2e1;
t96 = t318 + (t247 + 0.1e1 / 0.2e1) * t177;
t269 = t96 * qJD(1);
t324 = t269 + t153 + t158;
t172 = t175 ^ 2;
t173 = t177 ^ 2;
t143 = t173 - t172;
t250 = t178 * qJD(1);
t233 = t175 * t250;
t213 = t177 * t233;
t186 = -t143 * qJD(3) + 0.2e1 * t213;
t287 = t175 * qJ(5);
t310 = t177 * pkin(4);
t205 = t287 + t310;
t104 = t205 * t178;
t322 = -t104 / 0.2e1;
t284 = t177 * qJ(5);
t128 = pkin(4) * t175 - t284;
t321 = t128 / 0.2e1;
t309 = t178 * pkin(3);
t311 = t176 * pkin(7);
t129 = t309 + t311;
t320 = -t129 / 0.2e1;
t286 = t175 * t178;
t160 = pkin(4) * t286;
t319 = -t160 / 0.2e1;
t317 = t175 / 0.2e1;
t316 = t176 / 0.2e1;
t315 = -t177 / 0.2e1;
t314 = -t178 / 0.2e1;
t313 = t178 / 0.2e1;
t312 = pkin(3) * t177;
t308 = t178 * pkin(7);
t210 = t176 * pkin(3) - t308;
t196 = qJ(2) + t210;
t179 = -pkin(1) - pkin(6);
t281 = t177 * t179;
t238 = t176 * t281;
t75 = t175 * t196 + t238;
t97 = t177 * t247 + t315 + t318;
t85 = t97 * qJD(2);
t307 = -t75 * qJD(4) - t85;
t110 = t177 * t196;
t285 = t175 * t179;
t64 = -t110 + (-pkin(4) + t285) * t176;
t74 = t176 * t285 - t110;
t239 = -t74 / 0.2e1 + t64 / 0.2e1;
t211 = t239 * t177;
t236 = t75 * t317;
t60 = t175 * (qJ(2) - t308) + (t175 * pkin(3) + qJ(5) + t281) * t176;
t304 = t60 * t176;
t37 = t175 * t304;
t181 = (t236 + t211) * t176 - t37 / 0.2e1 + t104 * t314;
t194 = t287 / 0.2e1 + t310 / 0.2e1;
t6 = t181 - t194;
t306 = t6 * qJD(1);
t305 = t60 * t175;
t303 = t60 * t177;
t302 = t64 * t177;
t118 = t175 * t129;
t280 = t178 * t179;
t133 = t177 * t280;
t167 = t178 * qJ(5);
t65 = t133 + t118 + t167;
t301 = t65 * t177;
t168 = t178 * pkin(4);
t237 = t175 * t280;
t283 = t177 * t129;
t66 = -t168 + t237 - t283;
t300 = t66 * t175;
t299 = t74 * t176;
t298 = t75 * t176;
t76 = (-t128 + t179) * t176;
t297 = t76 * t177;
t77 = t160 + (-t179 - t284) * t178;
t296 = t77 * t175;
t295 = t77 * t177;
t8 = t77 * t104 - t60 * t74 + t64 * t75;
t294 = t8 * qJD(1);
t240 = -t60 / 0.2e1 + t75 / 0.2e1;
t9 = (pkin(4) * t316 - t239) * t177 + (qJ(5) * t316 - t240) * t175;
t293 = t9 * qJD(1);
t292 = t104 * t177;
t282 = t177 * t178;
t11 = t176 * t302 - t66 * t282 + t65 * t286 - t37;
t291 = t11 * qJD(1);
t12 = -t75 * t282 + (t303 + (t64 - t74) * t175) * t178;
t290 = t12 * qJD(1);
t13 = (t60 - t297) * t178 + (t65 + t295) * t176;
t289 = t13 * qJD(1);
t14 = -t66 * t176 - t64 * t178 + (-t77 * t176 + t76 * t178) * t175;
t288 = t14 * qJD(1);
t21 = -t298 + (t104 * t175 + t295) * t178;
t279 = t21 * qJD(1);
t22 = -t299 + (-t292 + t296) * t178;
t278 = t22 * qJD(1);
t23 = -t74 * t178 + (t237 + t283) * t176;
t277 = t23 * qJD(1);
t24 = t75 * t178 + (-t133 + t118) * t176;
t276 = t24 * qJD(1);
t25 = -t302 + t305;
t275 = t25 * qJD(1);
t26 = -t77 * t282 + t304;
t274 = t26 * qJD(1);
t29 = -t174 * t285 - t299;
t273 = t29 * qJD(1);
t30 = -t174 * t281 - t298;
t272 = t30 * qJD(1);
t270 = t94 * qJD(2);
t83 = t96 * qJD(2);
t109 = t283 / 0.2e1;
t268 = t109 - t237 / 0.2e1;
t266 = t172 + t173;
t265 = qJD(1) * qJ(2);
t264 = qJD(2) * t176;
t263 = qJD(3) * t175;
t262 = qJD(3) * t177;
t261 = qJD(4) * t175;
t260 = qJD(4) * t177;
t115 = t266 * t178;
t259 = t115 * qJD(1);
t142 = -t174 + t323;
t116 = t142 * t175;
t258 = t116 * qJD(1);
t117 = t177 * t323 - t163;
t257 = t117 * qJD(1);
t256 = t142 * qJD(1);
t255 = t175 * qJD(5);
t254 = t176 * qJD(1);
t253 = t176 * qJD(3);
t166 = t176 * qJD(5);
t251 = t177 * qJD(5);
t248 = t178 * qJD(4);
t246 = -t133 / 0.2e1 - t167;
t120 = -pkin(3) - t205;
t241 = t311 / 0.2e1;
t245 = t177 * t241 - t296 / 0.2e1 - t120 * t282 / 0.2e1;
t244 = pkin(7) * t261;
t243 = pkin(7) * t260;
t242 = -t311 / 0.2e1;
t235 = qJ(2) * t254;
t234 = qJ(2) * t250;
t231 = t175 * t248;
t230 = t177 * t248;
t229 = t175 * t260;
t228 = t175 * t264;
t151 = t175 * t262;
t227 = t175 * t251;
t226 = t176 * t249;
t225 = t178 * t255;
t224 = t176 * t250;
t223 = t286 / 0.2e1;
t222 = t282 / 0.2e1;
t221 = t128 * t314;
t220 = t172 / 0.2e1 - t173 / 0.2e1;
t92 = (-0.1e1 / 0.2e1 + t220) * t178;
t219 = t92 * qJD(1) - t151;
t150 = t175 * t254;
t218 = t94 * qJD(4) + t150;
t95 = (-0.1e1 / 0.2e1 + t216) * t175;
t217 = t95 * qJD(4) - t150;
t106 = t220 * t178;
t215 = t106 * qJD(1) - t151;
t123 = t175 * qJD(1) * t163;
t214 = t106 * qJD(3) + t123;
t159 = qJD(4) + t254;
t212 = t175 * t157;
t208 = 0.2e1 * t212;
t206 = pkin(3) * t223 + t175 * t241;
t204 = t176 * t120 + t308;
t4 = (t303 / 0.2e1 - t76 / 0.2e1 + t64 * t317) * t178 + (t301 / 0.2e1 + t77 / 0.2e1 + t300 / 0.2e1) * t176;
t7 = t60 * t65 + t64 * t66 + t77 * t76;
t203 = t7 * qJD(1) + t4 * qJD(2);
t202 = t300 + t301;
t73 = (-0.1e1 + t266) * t178 * t176;
t201 = t4 * qJD(1) + t73 * qJD(2);
t108 = -t118 / 0.2e1;
t182 = (t221 - t77 / 0.2e1) * t177 + (t120 * t313 + t242 + t322) * t175;
t16 = t108 + t182 + t246;
t61 = t120 * t177 + t128 * t175;
t200 = -t16 * qJD(1) + t61 * qJD(3);
t125 = t179 * t223;
t139 = t177 * t242;
t188 = t128 * t223 + t139 + t296 / 0.2e1 + t120 * t222;
t18 = -t168 + t125 + (t322 + t320) * t177 + t188;
t62 = -t120 * t175 + t128 * t177;
t199 = -t18 * qJD(1) + t62 * qJD(3);
t198 = t95 * qJD(2) + t74 * qJD(4);
t197 = t159 * t178;
t195 = -t65 * qJ(5) / 0.2e1 + t66 * pkin(4) / 0.2e1;
t51 = t139 + (-t309 / 0.2e1 + t320) * t177;
t193 = pkin(3) * t263 - t51 * qJD(1);
t107 = t118 / 0.2e1;
t50 = t107 + t206;
t192 = pkin(3) * t262 - t50 * qJD(1);
t20 = t168 / 0.2e1 + t245 + t268;
t191 = -t20 * qJD(1) + t120 * t263;
t190 = t177 * t197;
t189 = t205 * qJD(4);
t114 = t143 * t174;
t187 = t114 * qJD(1) + t208;
t180 = (t240 * t175 + t211) * pkin(7) + t104 * t120 / 0.2e1 + t77 * t321;
t2 = t180 + t195;
t47 = t319 + (t284 / 0.2e1 + t321) * t178;
t185 = t120 * t128 * qJD(3) + t2 * qJD(1) - t47 * qJD(2);
t184 = -t189 + t251;
t122 = t173 * t174 + t323;
t183 = t122 * qJD(1) + t212 + t252;
t161 = t249 / 0.2e1;
t156 = t177 * t254;
t155 = t177 * t264;
t154 = t176 * t251;
t152 = t175 * t253;
t124 = t177 * t225;
t121 = t159 * qJ(5);
t113 = t156 + t260;
t112 = (t254 + qJD(4) / 0.2e1) * t178;
t103 = -t152 + t230;
t102 = -t177 * t253 - t231;
t101 = t172 * qJD(3) + t213;
t100 = t106 * qJD(4);
t93 = t172 * t314 + t173 * t313 + t314;
t88 = t175 * t197;
t87 = (t233 - t262) * t176;
t57 = -t96 * qJD(4) - t156;
t56 = -t97 * qJD(4) + t156;
t48 = qJ(5) * t222 + t221 + t319;
t28 = t139 + t109 + (-t312 / 0.2e1 - t285) * t178;
t27 = -t133 + t108 + t206;
t19 = t125 - t283 / 0.2e1 - t168 / 0.2e1 + t245;
t17 = -t292 / 0.2e1 + t168 + t188 + t268;
t15 = t107 + t182 - t246;
t10 = t74 * t315 - t305 / 0.2e1 + t236 + t302 / 0.2e1 + t194 * t176;
t5 = t181 + t194;
t3 = t4 * qJD(3);
t1 = t180 - t195;
t31 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t226, t142 * qJD(3), 0, 0, 0, qJ(2) * t249 + t264, -qJ(2) * t253 + qJD(2) * t178, -t173 * t226 - t174 * t229, -t114 * qJD(4) + t176 * t208, -t117 * qJD(3) - t176 * t231, t116 * qJD(3) - t176 * t230, t226, t23 * qJD(3) + t30 * qJD(4) + t155, -t24 * qJD(3) - t29 * qJD(4) - t228, t14 * qJD(3) + t21 * qJD(4) - t174 * t227 + t155, -t115 * qJD(2) - t11 * qJD(3) - t12 * qJD(4) - t176 * t225, t13 * qJD(3) + t22 * qJD(4) + t122 * qJD(5) + t228, t25 * qJD(2) + t7 * qJD(3) + t8 * qJD(4) + t26 * qJD(5); 0, 0, 0, 0, qJD(1), t265, 0, 0, 0, 0, 0, t254, t250, 0, 0, 0, 0, 0, t56, t217, t56, -t259, -t217, t5 * qJD(4) + t97 * qJD(5) + t275 + t3; 0, 0, 0, 0, 0, 0, -t224, t256, -t253, -t249, 0, -t179 * t253 + t234, -t179 * t249 - t235, -t100 + (-t173 * t250 - t151) * t176, t186 * t176 - 0.2e1 * t178 * t229, t153 - t257, t157 + t258, t112, t277 + (t175 * t210 - t238) * qJD(3) + t28 * qJD(4), -t276 + (-pkin(7) * t282 + (t285 + t312) * t176) * qJD(3) + t27 * qJD(4), t288 + (-t175 * t204 - t297) * qJD(3) + t17 * qJD(4) + t93 * qJD(5), qJD(3) * t202 + t10 * qJD(4) - t291, t289 + (-t76 * t175 + t177 * t204) * qJD(3) + t15 * qJD(4) + t124, (pkin(7) * t202 + t76 * t120) * qJD(3) + t1 * qJD(4) + t19 * qJD(5) + t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, -t187, -t88, -t190, t161, t28 * qJD(3) + t272 + t307, t27 * qJD(3) + t198 - t273, t17 * qJD(3) + t279 + t307, -t290 + t10 * qJD(3) + (-t167 * t177 + t160) * qJD(4) - t225, t15 * qJD(3) + t166 - t198 + t278, t294 + t5 * qJD(2) + t1 * qJD(3) + (-t75 * pkin(4) - t74 * qJ(5)) * qJD(4) + t60 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93 * qJD(3) - t123, -t88, t183, t19 * qJD(3) + t60 * qJD(4) + t274 + t85; 0, 0, 0, 0, -qJD(1), -t265, 0, 0, 0, 0, 0, -t254, -t250, 0, 0, 0, 0, 0, t57, t218, t57, t259, -t218, t6 * qJD(4) + t96 * qJD(5) - t275 + t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t253, -t249, 0, 0, 0, 0, 0, t102, -t103, t102, t115 * qJD(3), t103, t120 * t253 + t48 * qJD(4) + (pkin(7) * qJD(3) * t266 + t255) * t178 + t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t324, t325, -t324, 0, -t325, t48 * qJD(3) - t176 * t189 + t154 + t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t324; 0, 0, 0, 0, 0, 0, t224, -t256, 0, 0, 0, -t234, t235, t173 * t224 - t100, -0.2e1 * t175 * t190, t158 + t257, -t232 - t258, -t112, t51 * qJD(4) - t277, t50 * qJD(4) + t276, t18 * qJD(4) - t92 * qJD(5) - t288, -t9 * qJD(4) + t154 + t291, t16 * qJD(4) + t124 - t289, t2 * qJD(4) + t20 * qJD(5) - t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47 * qJD(4) - t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, t143 * qJD(4), 0, 0, 0, -pkin(3) * t261, -pkin(3) * t260, -t62 * qJD(4) + t227, 0, -t61 * qJD(4) + t172 * qJD(5), (qJD(4) * t128 - t255) * t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, -t186, t113, -t150 - t261, -t250 / 0.2e1, -t193 - t243, -t192 + t244, -t199 - t243, t184 - t293, -t200 - t244, pkin(7) * t184 + t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, t113, t101, -t191 + t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, t187, t87, t177 * t224 + t152, t161, -t51 * qJD(3) - t272 + t83, -t50 * qJD(3) - t270 + t273, -t18 * qJD(3) - t279 + t83, t9 * qJD(3) + t290, -t16 * qJD(3) + t166 + t270 - t278, qJ(5) * t166 - t6 * qJD(2) - t2 * qJD(3) - t294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269, -t271, t269, 0, t271, t47 * qJD(3) - t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, t186, -t156, t150, t250 / 0.2e1, t193, t192, t199, t293, t200, -t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92 * qJD(3) + t123, t87, -t183, -qJ(5) * t252 - t20 * qJD(3) - t274 - t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, -t156, -t101, t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t159, -t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t31;
