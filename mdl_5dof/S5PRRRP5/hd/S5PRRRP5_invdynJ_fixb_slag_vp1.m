% Calculate vector of inverse dynamics joint torques for
% S5PRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d4,theta1]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:49
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5PRRRP5_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRP5_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRP5_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRP5_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRP5_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRRP5_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5PRRRP5_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5PRRRP5_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5PRRRP5_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:47:46
% EndTime: 2019-12-05 16:49:16
% DurationCPUTime: 76.45s
% Computational Cost: add. (29436->1071), mult. (46465->1482), div. (0->0), fcn. (44482->8), ass. (0->505)
t953 = Icges(5,5) + Icges(6,5);
t945 = Icges(5,6) + Icges(6,6);
t954 = Icges(5,4) + Icges(6,4);
t926 = Icges(5,1) + Icges(6,1);
t952 = Icges(5,2) + Icges(6,2);
t963 = Icges(5,3) + Icges(6,3);
t508 = qJ(3) + qJ(4);
t496 = sin(t508);
t497 = cos(t508);
t966 = t945 * t496 - t953 * t497;
t965 = t954 * t497;
t964 = t954 * t496;
t512 = sin(qJ(2));
t514 = cos(qJ(2));
t962 = -t963 * t512 + t966 * t514;
t961 = (-t953 * t496 - t945 * t497) * t512;
t960 = -t952 * t496 + t965;
t959 = t926 * t497 - t964;
t510 = cos(pkin(8));
t509 = sin(pkin(8));
t780 = t509 * t514;
t384 = -t496 * t780 - t497 * t510;
t958 = t954 * t384;
t777 = t510 * t514;
t386 = -t496 * t777 + t497 * t509;
t957 = t954 * t386;
t387 = t496 * t509 + t497 * t777;
t956 = t954 * t387;
t385 = -t510 * t496 + t497 * t780;
t955 = t954 * t385;
t507 = qJD(3) + qJD(4);
t724 = qJD(2) * t512;
t573 = t507 * t510 + t509 * t724;
t700 = t507 * t780;
t271 = t496 * t573 - t497 * t700;
t272 = -t496 * t700 - t497 * t573;
t723 = qJD(2) * t514;
t685 = t509 * t723;
t951 = t945 * t271 + t953 * t272 + t963 * t685;
t574 = -t507 * t509 + t510 * t724;
t699 = t507 * t777;
t273 = t496 * t574 - t497 * t699;
t274 = -t496 * t699 - t497 * t574;
t684 = t510 * t723;
t950 = t945 * t273 + t953 * t274 + t963 * t684;
t949 = t962 * qJD(2) - t961 * t507;
t782 = t509 * t512;
t924 = t945 * t384 + t953 * t385 + t963 * t782;
t778 = t510 * t512;
t923 = t945 * t386 + t953 * t387 + t963 * t778;
t938 = t952 * t384 + t945 * t782 + t955;
t937 = t952 * t386 + t945 * t778 + t956;
t936 = t926 * t385 + t953 * t782 + t958;
t935 = t926 * t387 + t953 * t778 + t957;
t918 = t966 * t512 + t963 * t514;
t917 = t960 * t512 - t945 * t514;
t883 = t945 * t512 + t960 * t514;
t916 = t959 * t512 - t953 * t514;
t882 = -t953 * t512 - t959 * t514;
t948 = (t952 * t497 + t964) * t512;
t947 = (t926 * t496 + t965) * t512;
t944 = t952 * t271 + t954 * t272 + t945 * t685;
t943 = t952 * t273 + t954 * t274 + t945 * t684;
t942 = t954 * t271 + t926 * t272 + t953 * t685;
t941 = t954 * t273 + t926 * t274 + t953 * t684;
t940 = -t883 * qJD(2) + t948 * t507;
t939 = t882 * qJD(2) + t947 * t507;
t934 = t949 * t512 + t918 * t723;
t933 = t950 * t512 + t923 * t723;
t932 = t951 * t512 + t924 * t723;
t931 = -t917 * t496 + t916 * t497;
t930 = -t937 * t496 + t935 * t497;
t929 = -t938 * t496 + t936 * t497;
t902 = t938 * t271 + t936 * t272 + t944 * t384 + t942 * t385 + t932 * t509;
t901 = t937 * t271 + t935 * t272 + t943 * t384 + t941 * t385 + t933 * t509;
t900 = t938 * t273 + t936 * t274 + t944 * t386 + t942 * t387 + t932 * t510;
t899 = t937 * t273 + t935 * t274 + t943 * t386 + t941 * t387 + t933 * t510;
t928 = -t917 * t271 - t916 * t272 + t940 * t384 + t939 * t385 + t934 * t509;
t927 = -t917 * t273 - t916 * t274 + t940 * t386 + t939 * t387 + t934 * t510;
t896 = t937 * t384 + t935 * t385 + t923 * t782;
t895 = t938 * t384 + t936 * t385 + t924 * t782;
t894 = t937 * t386 + t935 * t387 + t923 * t778;
t893 = t938 * t386 + t936 * t387 + t924 * t778;
t892 = t929 * t512 - t924 * t514;
t891 = t930 * t512 - t923 * t514;
t890 = t917 * t384 + t916 * t385 - t918 * t782;
t889 = t917 * t386 + t916 * t387 - t918 * t778;
t888 = t931 * t512 + t918 * t514;
t495 = qJD(2) * t509;
t722 = qJD(3) * t512;
t447 = t510 * t722 + t495;
t720 = qJD(4) * t512;
t367 = t510 * t720 + t447;
t725 = qJD(2) * t510;
t448 = t509 * t722 - t725;
t368 = t509 * t720 + t448;
t657 = t507 * t514;
t915 = t961 * t657 + (-t384 * t953 + t945 * t385) * t368 + (-t386 * t953 + t945 * t387) * t367;
t914 = (t931 + t962) * t657 + (t918 * t509 - t929) * t368 + (t918 * t510 - t930) * t367;
t505 = t509 ^ 2;
t506 = t510 ^ 2;
t463 = rSges(3,1) * t512 + rSges(3,2) * t514;
t881 = t505 + t506;
t913 = t463 * t881;
t912 = t509 * t510;
t465 = pkin(2) * t512 - pkin(6) * t514;
t584 = qJD(2) * t465;
t414 = t509 * t584;
t415 = t510 * t584;
t487 = pkin(6) * t780;
t488 = pkin(6) * t777;
t911 = -t509 * t414 - t510 * t415 - (-pkin(2) * t782 + t487) * t495 - (-pkin(2) * t778 + t488) * t725;
t910 = 0.2e1 * qJD(2);
t909 = 2 * qJDD(2);
t494 = qJDD(2) * t509;
t716 = qJD(2) * qJD(3);
t872 = qJDD(3) * t512 + t514 * t716;
t344 = t510 * t872 + t494;
t715 = qJD(2) * qJD(4);
t568 = qJDD(4) * t512 + t514 * t715;
t269 = t510 * t568 + t344;
t713 = qJDD(2) * t510;
t345 = t509 * t872 - t713;
t270 = t509 * t568 + t345;
t491 = t512 * t716;
t348 = t512 * t715 + t491 + (-qJDD(3) - qJDD(4)) * t514;
t908 = t896 * t269 + t895 * t270 + t890 * t348 + t901 * t367 + t902 * t368 + t928 * t657;
t907 = t894 * t269 + t893 * t270 + t889 * t348 + t899 * t367 + t900 * t368 + t927 * t657;
t906 = (t929 * qJD(2) - t951) * t514 + ((-t507 * t938 + t942) * t497 + (-t507 * t936 - t944) * t496 + t924 * qJD(2)) * t512;
t905 = (t930 * qJD(2) - t950) * t514 + ((-t507 * t937 + t941) * t497 + (-t507 * t935 - t943) * t496 + t923 * qJD(2)) * t512;
t904 = t896 * t367 + t895 * t368 - t890 * t657;
t903 = t894 * t367 + t893 * t368 - t889 * t657;
t898 = t891 * t367 + t892 * t368 - t888 * t657;
t897 = (-t931 * qJD(2) - t949) * t514 + ((t917 * t507 + t939) * t497 + (t916 * t507 - t940) * t496 + t918 * qJD(2)) * t512;
t719 = qJD(5) * t512;
t476 = t509 * t719;
t515 = -pkin(7) - pkin(6);
t504 = -qJ(5) + t515;
t727 = t504 - t515;
t513 = cos(qJ(3));
t502 = t513 * pkin(3);
t458 = pkin(4) * t497 + t502;
t450 = pkin(2) + t458;
t493 = t502 + pkin(2);
t734 = t450 - t493;
t278 = t512 * t734 + t514 * t727;
t827 = pkin(4) * t507;
t648 = t496 * t827;
t521 = -qJD(2) * t278 - t514 * t648;
t647 = t497 * t827;
t772 = rSges(6,1) * t272 + rSges(6,2) * t271 + rSges(6,3) * t685 + t509 * t521 - t510 * t647 + t476;
t818 = rSges(6,2) * t497;
t410 = (-rSges(6,1) * t496 - t818) * t512;
t498 = t512 * rSges(6,3);
t665 = t727 * t512;
t550 = t514 * t734 - t665;
t819 = rSges(6,1) * t497;
t641 = -rSges(6,2) * t496 + t819;
t718 = qJD(5) * t514;
t766 = t507 * t410 - t512 * t648 - t718 + (t514 * t641 + t498 + t550) * qJD(2);
t828 = pkin(4) * t496;
t511 = sin(qJ(3));
t829 = pkin(3) * t511;
t457 = t828 + t829;
t669 = -t457 + t829;
t765 = rSges(6,1) * t385 + rSges(6,2) * t384 + rSges(6,3) * t782 + t509 * t550 + t510 * t669;
t764 = rSges(6,1) * t387 + rSges(6,2) * t386 + rSges(6,3) * t778 - t509 * t669 + t510 * t550;
t748 = -rSges(6,3) * t514 + t512 * t641 + t278;
t887 = t917 * t509;
t886 = t917 * t510;
t885 = t916 * t509;
t884 = t916 * t510;
t880 = (t923 * t367 + t924 * t368 + t918 * t657) * t514 + t914 * t512;
t879 = (-t916 + t948) * t657 + (-t385 * t952 + t936 + t958) * t368 + (-t387 * t952 + t935 + t957) * t367;
t878 = (t917 + t947) * t657 + (t926 * t384 - t938 - t955) * t368 + (t926 * t386 - t937 - t956) * t367;
t877 = t915 * t512;
t876 = t892 * t509 + t891 * t510;
t875 = t893 * t509 + t894 * t510;
t874 = t895 * t509 + t896 * t510;
t817 = pkin(3) * qJD(3);
t707 = t511 * t817;
t823 = pkin(2) - t493;
t675 = t823 * t512;
t822 = pkin(6) + t515;
t871 = -t514 * t822 + t675;
t522 = qJD(2) * t871 - t514 * t707;
t706 = t513 * t817;
t176 = t509 * t522 - t510 * t706;
t177 = t509 * t706 + t510 * t522;
t556 = -t512 * t822 - t514 * t823;
t779 = t510 * t511;
t260 = -pkin(3) * t779 + t509 * t556;
t721 = qJD(3) * t514;
t227 = t260 * t721;
t773 = t514 * t515;
t572 = t675 - t773;
t288 = t509 * t572 - t487;
t289 = t510 * t572 - t488;
t873 = t509 * t176 - t447 * t288 + t289 * t448 + t911 + (t177 - t227) * t510;
t775 = t511 * t514;
t426 = t509 * t513 - t510 * t775;
t783 = t509 * t511;
t261 = pkin(3) * t783 + t510 * t556;
t689 = t465 * t495;
t535 = -t261 * t721 + t447 * t871 - t689;
t76 = -t367 * t748 - t657 * t764 + t476 + t535;
t477 = t510 * t719;
t688 = t465 * t725;
t596 = -t448 * t871 + t227 - t688;
t77 = t368 * t748 + t657 * t765 + t477 + t596;
t869 = t367 * t76 - t368 * t77;
t594 = t509 * t775 + t510 * t513;
t418 = t594 * pkin(3);
t784 = t497 * t514;
t786 = t496 * t514;
t864 = rSges(6,1) * t784 - rSges(6,2) * t786 + t514 * t450 + t498;
t863 = t514 * pkin(2) + t512 * pkin(6);
t861 = -t368 * t410 + t514 * t772 + t685 * t748 + t766 * t782;
t277 = qJD(2) * t556 - t512 * t707;
t776 = t511 * t512;
t711 = pkin(3) * t776;
t860 = t514 * t176 + t277 * t782 + t418 * t721 + t448 * t711 - t685 * t871;
t141 = rSges(5,1) * t272 + rSges(5,2) * t271 + rSges(5,3) * t685;
t642 = -rSges(5,1) * t496 - rSges(5,2) * t497;
t411 = t642 * t512;
t499 = t512 * rSges(5,3);
t820 = rSges(5,1) * t497;
t643 = -rSges(5,2) * t496 + t820;
t200 = t507 * t411 + (t514 * t643 + t499) * qJD(2);
t255 = t384 * rSges(5,1) - t385 * rSges(5,2);
t341 = -rSges(5,3) * t514 + t512 * t643;
t859 = t514 * t141 + t200 * t782 - t255 * t657 + t341 * t685 - t368 * t411;
t858 = g(1) * t510 + g(2) * t509;
t621 = Icges(4,5) * t513 - Icges(4,6) * t511;
t388 = -Icges(4,3) * t514 + t512 * t621;
t809 = Icges(4,4) * t513;
t626 = -Icges(4,2) * t511 + t809;
t390 = -Icges(4,6) * t514 + t512 * t626;
t810 = Icges(4,4) * t511;
t631 = Icges(4,1) * t513 - t810;
t392 = -Icges(4,5) * t514 + t512 * t631;
t439 = t863 * t509;
t440 = t863 * t510;
t600 = -t414 * t495 - t415 * t725 + t439 * t494 + t440 * t713 + qJDD(1);
t527 = t447 * t176 - t177 * t448 + t344 * t260 - t261 * t345 + t600;
t771 = rSges(6,1) * t274 + rSges(6,2) * t273 + rSges(6,3) * t684 + t509 * t647 + t510 * t521 + t477;
t19 = qJD(2) * t719 - qJDD(5) * t514 + t269 * t765 - t270 * t764 + t367 * t772 - t368 * t771 + t527;
t678 = t439 * t495 + t440 * t725 + qJD(1);
t567 = t447 * t260 - t261 * t448 + t678;
t59 = t367 * t765 - t368 * t764 + t567 - t718;
t857 = -t19 * t764 - t59 * t771;
t774 = t513 * t514;
t427 = t510 * t774 + t783;
t811 = Icges(4,4) * t427;
t251 = Icges(4,2) * t426 + Icges(4,6) * t778 + t811;
t417 = Icges(4,4) * t426;
t253 = Icges(4,1) * t427 + Icges(4,5) * t778 + t417;
t609 = -t251 * t511 + t253 * t513;
t425 = t509 * t774 - t779;
t812 = Icges(4,4) * t425;
t250 = -Icges(4,2) * t594 + Icges(4,6) * t782 + t812;
t416 = Icges(4,4) * t594;
t252 = Icges(4,1) * t425 + Icges(4,5) * t782 - t416;
t610 = -t250 * t511 + t252 * t513;
t856 = -(-t388 * t510 - t609) * t447 - (-t388 * t509 - t610) * t448;
t442 = (-Icges(4,2) * t513 - t810) * t512;
t523 = t447 * (-Icges(4,2) * t427 + t253 + t417) + t448 * (-Icges(4,2) * t425 + t252 - t416) - t721 * (t392 + t442);
t851 = t269 / 0.2e1;
t850 = t270 / 0.2e1;
t849 = t344 / 0.2e1;
t848 = t345 / 0.2e1;
t847 = t348 / 0.2e1;
t846 = -t367 / 0.2e1;
t845 = t367 / 0.2e1;
t844 = -t368 / 0.2e1;
t843 = t368 / 0.2e1;
t840 = -t447 / 0.2e1;
t839 = t447 / 0.2e1;
t838 = -t448 / 0.2e1;
t837 = t448 / 0.2e1;
t456 = -qJDD(3) * t514 + t491;
t836 = t456 / 0.2e1;
t834 = t657 / 0.2e1;
t833 = -t657 / 0.2e1;
t830 = -t514 / 0.2e1;
t824 = g(3) * t512;
t821 = rSges(4,1) * t513;
t816 = t509 * t59;
t815 = t510 * t76;
t500 = t512 * rSges(4,3);
t249 = Icges(4,5) * t427 + Icges(4,6) * t426 + Icges(4,3) * t778;
t101 = t249 * t782 - t251 * t594 + t253 * t425;
t791 = t101 * t510;
t248 = Icges(4,5) * t425 - Icges(4,6) * t594 + Icges(4,3) * t782;
t102 = t248 * t778 + t250 * t426 + t252 * t427;
t790 = t102 * t509;
t120 = t388 * t782 - t390 * t594 + t392 * t425;
t789 = t120 * t512;
t121 = t388 * t778 + t390 * t426 + t392 * t427;
t788 = t121 * t512;
t787 = t388 * t514;
t215 = rSges(5,1) * t385 + rSges(5,2) * t384 + rSges(5,3) * t782;
t770 = t141 * t778 + t215 * t684;
t143 = rSges(5,1) * t274 + rSges(5,2) * t273 + rSges(5,3) * t684;
t769 = -t143 - t177;
t768 = t765 * t778;
t767 = t764 * t724;
t763 = t176 * t778 + t260 * t684;
t762 = -t200 - t277;
t217 = rSges(5,1) * t387 + rSges(5,2) * t386 + rSges(5,3) * t778;
t757 = -t217 - t261;
t702 = t497 * t782;
t705 = t496 * t782;
t733 = rSges(6,2) * t705 + rSges(6,3) * t780;
t756 = -rSges(6,1) * t702 - t278 * t509 + t733;
t701 = t497 * t778;
t704 = t496 * t778;
t731 = rSges(6,2) * t704 + rSges(6,3) * t777;
t755 = -rSges(6,1) * t701 - t278 * t510 + t731;
t754 = t514 * t260 - t782 * t871;
t254 = t384 * rSges(6,1) - t385 * rSges(6,2);
t355 = t384 * pkin(4);
t751 = -t254 - t355;
t256 = t386 * rSges(6,1) - t387 * rSges(6,2);
t356 = t386 * pkin(4);
t750 = -t256 - t356;
t444 = (-rSges(4,1) * t511 - rSges(4,2) * t513) * t512;
t644 = -rSges(4,2) * t511 + t821;
t268 = qJD(3) * t444 + (t514 * t644 + t500) * qJD(2);
t451 = t863 * qJD(2);
t749 = -t268 - t451;
t746 = t514 * t215 + t341 * t782;
t745 = t871 - t341;
t257 = t386 * rSges(5,1) - t387 * rSges(5,2);
t394 = -rSges(4,3) * t514 + t512 * t644;
t737 = -t394 - t465;
t736 = t509 * t439 + t510 * t440;
t735 = -t457 * t777 + t509 * t458;
t732 = rSges(5,2) * t705 + rSges(5,3) * t780;
t730 = rSges(5,2) * t704 + rSges(5,3) * t777;
t708 = rSges(4,2) * t776;
t729 = rSges(4,3) * t780 + t509 * t708;
t728 = rSges(4,3) * t777 + t510 * t708;
t602 = -t390 * t511 + t392 * t513;
t157 = t512 * t602 - t787;
t717 = t157 * qJD(3);
t714 = qJDD(2) * t465;
t710 = t512 * t828;
t709 = t512 * t821;
t697 = -t177 - t771;
t695 = -t277 - t766;
t694 = -t261 - t764;
t692 = -t451 + t762;
t691 = t871 - t748;
t690 = -t465 + t745;
t687 = t863 * t495;
t686 = t863 * t725;
t683 = t511 * t724;
t682 = t513 * t724;
t681 = t509 * t721;
t680 = t782 / 0.2e1;
t679 = t778 / 0.2e1;
t673 = t724 / 0.2e1;
t672 = t723 / 0.2e1;
t671 = -t721 / 0.2e1;
t670 = t721 / 0.2e1;
t668 = t59 * t764;
t667 = t76 * t748;
t666 = t77 * t765;
t664 = t367 * t255 - t257 * t368;
t663 = -t257 * t657 - t367 * t411;
t661 = t510 * t871 - t289;
t419 = t426 * pkin(3);
t660 = -t447 * t418 - t419 * t448;
t659 = -t457 * t780 - t458 * t510;
t470 = t514 * t493;
t658 = -t512 * t515 + t470;
t656 = t684 * t765 + t772 * t778;
t655 = -t451 + t695;
t653 = t509 * t260 + t510 * t261 + t736;
t652 = t514 * t765 + t748 * t782;
t651 = -t465 + t691;
t650 = t509 * t672;
t649 = t510 * t672;
t645 = -t419 * t721 + t447 * t711;
t464 = rSges(3,1) * t514 - rSges(3,2) * t512;
t640 = t509 * t76 + t510 * t77;
t623 = Icges(3,5) * t514 - Icges(3,6) * t512;
t622 = -Icges(3,5) * t512 - Icges(3,6) * t514;
t100 = t248 * t782 - t250 * t594 + t252 * t425;
t618 = t100 * t509 + t791;
t103 = t249 * t778 + t251 * t426 + t253 * t427;
t617 = t103 * t510 + t790;
t105 = -t248 * t514 + t512 * t610;
t106 = -t249 * t514 + t512 * t609;
t616 = t105 * t509 + t106 * t510;
t611 = t248 * t448 + t249 * t447;
t258 = rSges(4,1) * t425 - rSges(4,2) * t594 + rSges(4,3) * t782;
t259 = rSges(4,1) * t427 + rSges(4,2) * t426 + rSges(4,3) * t778;
t608 = t258 * t510 - t259 * t509;
t603 = t881 * t464;
t601 = qJD(2) * t913;
t395 = rSges(4,1) * t774 - rSges(4,2) * t775 + t500;
t343 = rSges(5,1) * t784 - rSges(5,2) * t786 + t499;
t598 = -qJD(2) * t451 - t714;
t597 = t176 * t721 - t260 * t456 + t448 * t277 - t345 * t871;
t389 = Icges(4,3) * t512 + t514 * t621;
t585 = t389 - t602;
t314 = -qJD(3) * t425 + t509 * t683;
t315 = -qJD(3) * t594 - t509 * t682;
t160 = Icges(4,5) * t315 + Icges(4,6) * t314 + Icges(4,3) * t685;
t579 = t160 * t512 + t248 * t723;
t316 = -qJD(3) * t427 + t510 * t683;
t317 = qJD(3) * t426 - t510 * t682;
t161 = Icges(4,5) * t317 + Icges(4,6) * t316 + Icges(4,3) * t684;
t578 = t161 * t512 + t249 * t723;
t441 = (-Icges(4,5) * t511 - Icges(4,6) * t513) * t512;
t262 = qJD(2) * t389 + qJD(3) * t441;
t575 = t262 * t512 + t388 * t723;
t104 = t258 * t447 - t259 * t448 + t678;
t569 = t104 * t608;
t443 = (-Icges(4,1) * t511 - t809) * t512;
t564 = qJD(2) * t622;
t559 = t598 * t509;
t558 = t598 * t510;
t327 = t658 - t863;
t557 = t261 * t722 - t327 * t447 - t687;
t548 = -(-Icges(4,5) * t594 - Icges(4,6) * t425) * t448 - (Icges(4,5) * t426 - Icges(4,6) * t427) * t447 + t441 * t721;
t393 = Icges(4,5) * t512 + t514 * t631;
t391 = Icges(4,6) * t512 + t514 * t626;
t536 = -t177 * t721 + t456 * t261 - t277 * t447 + t344 * t871;
t534 = t512 * t548;
t533 = -t260 * t722 + t288 * t721 + t448 * t327 - t681 * t871 - t686;
t532 = -t714 + qJDD(5) * t512 + (-t451 + t718) * qJD(2);
t524 = (Icges(4,1) * t426 - t251 - t811) * t447 + (-Icges(4,1) * t594 - t250 - t812) * t448 - (-t390 + t443) * t721;
t520 = (t512 * t875 - t514 * t889) * t851 + (t512 * t874 - t514 * t890) * t850 + (t512 * t876 - t514 * t888) * t847 + (t386 * t879 + t387 * t878 - t510 * t877) * t846 + (t927 * t514 + (t509 * t900 + t510 * t899) * t512 + (t512 * t889 + t514 * t875) * qJD(2)) * t845 + (t384 * t879 + t385 * t878 - t509 * t877) * t844 + (t928 * t514 + (t509 * t902 + t510 * t901) * t512 + (t512 * t890 + t514 * t874) * qJD(2)) * t843 + (t915 * t514 + (-t496 * t879 + t497 * t878) * t512) * t834 + (t897 * t514 + (t509 * t906 + t510 * t905) * t512 + (t512 * t888 + t514 * t876) * qJD(2)) * t833 + (t269 * t891 + t270 * t892 + t348 * t888 + t367 * t905 + t368 * t906 + t657 * t897) * t830 + t908 * t680 + t907 * t679 + t898 * t673 + t904 * t650 + t903 * t649;
t519 = (-t585 * t721 - t856) * t512;
t459 = t507 * t512;
t446 = t512 * t457;
t437 = t463 * t510;
t436 = t463 * t509;
t431 = t622 * t510;
t430 = t622 * t509;
t423 = t510 * t657;
t422 = t509 * t657;
t405 = t510 * t564;
t404 = t509 * t564;
t370 = Icges(3,3) * t509 + t510 * t623;
t369 = -Icges(3,3) * t510 + t509 * t623;
t350 = -t446 + t711;
t325 = -t510 * t709 + t728;
t324 = -t509 * t709 + t729;
t323 = t392 * t510;
t322 = t392 * t509;
t321 = t390 * t510;
t320 = t390 * t509;
t305 = -rSges(5,1) * t701 + t730;
t303 = -rSges(5,1) * t702 + t732;
t287 = rSges(4,1) * t426 - rSges(4,2) * t427;
t286 = -rSges(4,1) * t594 - rSges(4,2) * t425;
t264 = qJD(2) * t393 + qJD(3) * t443;
t263 = qJD(2) * t391 + qJD(3) * t442;
t228 = t261 * t724;
t225 = t260 * t778;
t222 = -t419 + t735;
t221 = t659 + t418;
t188 = t657 * t256;
t186 = t217 * t724;
t183 = t215 * t778;
t171 = t367 * t254;
t167 = rSges(4,1) * t317 + rSges(4,2) * t316 + rSges(4,3) * t684;
t166 = rSges(4,1) * t315 + rSges(4,2) * t314 + rSges(4,3) * t685;
t165 = Icges(4,1) * t317 + Icges(4,4) * t316 + Icges(4,5) * t684;
t164 = Icges(4,1) * t315 + Icges(4,4) * t314 + Icges(4,5) * t685;
t163 = Icges(4,4) * t317 + Icges(4,2) * t316 + Icges(4,6) * t684;
t162 = Icges(4,4) * t315 + Icges(4,2) * t314 + Icges(4,6) * t685;
t125 = t258 * t721 + t394 * t448 - t688;
t124 = -t259 * t721 - t394 * t447 - t689;
t119 = -qJD(2) * t601 + qJDD(2) * t603 + qJDD(1);
t87 = t215 * t657 + t341 * t368 + t596;
t86 = -t217 * t657 - t341 * t367 + t535;
t85 = t166 * t721 - t258 * t456 + t268 * t448 + t345 * t394 + t558;
t84 = -t167 * t721 + t259 * t456 - t268 * t447 - t344 * t394 + t559;
t83 = (qJD(2) * t602 - t262) * t514 + (qJD(2) * t388 - t263 * t511 + t264 * t513 + (-t390 * t513 - t392 * t511) * qJD(3)) * t512;
t82 = t263 * t426 + t264 * t427 + t316 * t390 + t317 * t392 + t510 * t575;
t81 = -t263 * t594 + t264 * t425 + t314 * t390 + t315 * t392 + t509 * t575;
t80 = t215 * t367 - t217 * t368 + t567;
t71 = t166 * t447 - t167 * t448 + t258 * t344 - t259 * t345 + t600;
t70 = t105 * t448 + t106 * t447 - t514 * t717;
t69 = t163 * t426 + t165 * t427 + t251 * t316 + t253 * t317 + t510 * t578;
t68 = t162 * t426 + t164 * t427 + t250 * t316 + t252 * t317 + t510 * t579;
t67 = -t163 * t594 + t165 * t425 + t251 * t314 + t253 * t315 + t509 * t578;
t66 = -t162 * t594 + t164 * t425 + t250 * t314 + t252 * t315 + t509 * t579;
t65 = t102 * t448 + t103 * t447 - t121 * t721;
t64 = t100 * t448 + t101 * t447 - t120 * t721;
t61 = (qJD(2) * t609 - t161) * t514 + (qJD(2) * t249 - t163 * t511 + t165 * t513 + (-t251 * t513 - t253 * t511) * qJD(3)) * t512;
t60 = (qJD(2) * t610 - t160) * t514 + (qJD(2) * t248 - t162 * t511 + t164 * t513 + (-t250 * t513 - t252 * t511) * qJD(3)) * t512;
t46 = t141 * t657 + t200 * t368 - t215 * t348 + t270 * t341 + t558 + t597;
t45 = -t143 * t657 - t200 * t367 + t217 * t348 - t269 * t341 + t536 + t559;
t26 = t141 * t367 - t143 * t368 + t215 * t269 - t217 * t270 + t527;
t21 = t270 * t748 - t348 * t765 + t368 * t766 + t510 * t532 + t657 * t772 + t597;
t20 = -t269 * t748 + t348 * t764 - t367 * t766 + t509 * t532 - t657 * t771 + t536;
t18 = t102 * t345 + t103 * t344 + t121 * t456 + t447 * t69 + t448 * t68 - t721 * t82;
t17 = t100 * t345 + t101 * t344 + t120 * t456 + t447 * t67 + t448 * t66 - t721 * t81;
t1 = [m(2) * qJDD(1) + (-m(2) - m(3) - m(4) - m(5) - m(6)) * g(3) + m(3) * t119 + m(4) * t71 + m(5) * t26 + m(6) * t19; -(t431 * qJD(2) * t505 - t430 * t509 * t725) * t495 / 0.2e1 + (-g(1) * (t488 + t728) - g(2) * (t487 + t729) - g(3) * (t395 + t863) - t858 * t512 * (-pkin(2) - t821) + t71 * t736 + (t125 * t749 + t71 * t259 + t737 * t85) * t510 + (t124 * t749 + t71 * t258 + t737 * t84) * t509 - t125 * (t395 * t448 - t686) - t124 * (-t395 * t447 - t687) - ((t124 * t259 - t125 * t258) * t512 + (t125 * (t394 * t509 + t324) + t124 * (-t394 * t510 - t325) + t569) * t514) * qJD(3) + (t166 * t509 + t167 * t510 - t324 * t447 + t325 * t448 + t911) * t104) * m(4) + (g(1) * t437 + g(2) * t436 - g(3) * t464 + t119 * t603 + (t464 * qJD(2) ^ 2 + qJDD(2) * t463) * t913 + (-t601 - (-t436 * t509 - t437 * t510) * qJD(2)) * (qJD(2) * t603 + qJD(1))) * m(3) + (t880 * t510 + (-t386 * t883 + t387 * t882) * t657 + t889 * t459 + t894 * t423 + t893 * t422 + (-t386 * t887 - t387 * t885) * t368 + (-t386 * t886 - t387 * t884) * t367) * t846 + (t880 * t509 + (-t384 * t883 + t385 * t882) * t657 + t890 * t459 + t896 * t423 + t895 * t422 + (-t384 * t887 - t385 * t885) * t368 + (-t384 * t886 - t385 * t884) * t367) * t844 + (-t914 * t514 + ((t496 * t883 + t497 * t882 + t918) * t657 + (t496 * t887 - t497 * t885 + t924) * t368 + (t496 * t886 - t497 * t884 + t923) * t367) * t512 + t888 * t459 + t891 * t423 + t892 * t422) * t834 + (t430 * qJD(2) * t506 - t431 * t510 * t495) * t725 / 0.2e1 - t70 * t722 / 0.2e1 + (-g(1) * t730 - g(2) * t732 - g(3) * (t343 + t658) - t858 * (-t773 + (-t493 - t820) * t512) + t26 * t653 + (t26 * t217 + t46 * t690 + t692 * t87) * t510 + (t26 * t215 + t45 * t690 + t692 * t86) * t509 - t87 * (-t215 * t459 + t303 * t657 + t341 * t422 + t343 * t368 + t533) - t86 * (t217 * t459 - t305 * t657 - t341 * t423 - t343 * t367 + t661 * t721 + t557) + (t141 * t509 + t143 * t510 - t215 * t423 + t217 * t422 + t261 * t681 - t303 * t367 + t305 * t368 + t873) * t80) * m(5) + (t19 * t653 + (t21 * t651 + t655 * t77 - t857) * t510 + (t19 * t765 + t20 * t651 + t655 * t76) * t509 - g(1) * t731 - g(2) * t733 - g(3) * (-t504 * t512 + t864) - t858 * (-t514 * t504 + (-t450 - t819) * t512) - t77 * t533 - t76 * t557 - (t640 * qJD(5) + (-t261 * t816 + t661 * t76) * qJD(3)) * t514 + (t755 * t76 - t756 * t77) * t657 - (t76 * t764 - t666) * t459 + t667 * t423 - (t748 * t77 - t668) * t422 + t869 * (-t470 - t665 + t864) + (-t756 * t367 + t755 * t368 - t765 * t423 + t772 * t509 - t719 + t873) * t59) * m(6) + (-t100 * t510 + t101 * t509) * t848 + (-t102 * t510 + t103 * t509) * t849 + (t509 * t899 - t510 * t900) * t845 + (t509 * t901 - t510 * t902) * t843 - t903 * t423 / 0.2e1 - t904 * t422 / 0.2e1 + (t509 * t905 - t510 * t906) * t833 + (t509 * t891 - t510 * t892) * t847 + (t509 * t894 - t510 * t893) * t851 + (t509 * t896 - t510 * t895) * t850 - t898 * t459 / 0.2e1 - ((t369 * t506 - t370 * t912) * t909 + (t404 * t506 - t405 * t912) * t910 + t17 + t908) * t510 / 0.2e1 + ((-t369 * t912 + t370 * t505) * t909 + (-t404 * t912 + t405 * t505) * t910 + t18 + t907) * t509 / 0.2e1 + ((t321 * t594 - t323 * t425) * t447 + (t320 * t594 - t322 * t425) * t448 + (t789 + (t391 * t594 - t393 * t425 + t791) * t514) * qJD(3) + (((t100 - t787) * qJD(3) + t611) * t514 + t519) * t509) * t838 + (((t321 * t511 - t323 * t513 + t249) * t447 + (t320 * t511 - t322 * t513 + t248) * t448 + t717) * t512 + ((t585 * t514 + (t391 * t511 - t393 * t513 - t388) * t512 + t616) * qJD(3) + t856) * t514) * t670 + ((-t321 * t426 - t323 * t427) * t447 + (-t320 * t426 - t322 * t427) * t448 + (t788 + (-t391 * t426 - t393 * t427 + t790) * t514) * qJD(3) + (((t103 - t787) * qJD(3) + t611) * t514 + t519) * t510) * t840 + (-t105 * t510 + t106 * t509) * t836 + (t509 * t67 - t510 * t66) * t837 + (t509 * t69 - t510 * t68) * t839 + ((-t60 + t65) * t510 + (t61 + t64) * t509) * t671; t17 * t680 + (-t514 * t83 + (t509 * t60 + t510 * t61) * t512 + (t157 * t512 + t514 * t616) * qJD(2)) * t671 + t70 * t673 + t18 * t679 + (-t120 * t514 + t512 * t618) * t848 + (-t121 * t514 + t512 * t617) * t849 + (t548 * t514 + (-t511 * t523 + t524 * t513) * t512) * t670 + t520 + (-t157 * t514 + t512 * t616) * t836 + (-t514 * t81 + (t509 * t66 + t510 * t67) * t512 + (t514 * t618 + t789) * qJD(2)) * t837 + (t425 * t524 - t509 * t534 - t523 * t594) * t838 + (-t514 * t82 + (t509 * t68 + t510 * t69) * t512 + (t514 * t617 + t788) * qJD(2)) * t839 + (t426 * t523 + t427 * t524 - t510 * t534) * t840 + t65 * t649 + t64 * t650 + (t105 * t345 + t106 * t344 + t157 * t456 + t447 * t61 + t448 * t60 - t721 * t83) * t830 + (-t76 * (-t222 * t657 - t188 + (-t350 - t410) * t367 + t645) - t59 * (t221 * t367 + t171 + (-t222 - t256) * t368 + t660) + t21 * (t652 + t754) + t76 * (t228 + t767) + t19 * (t225 + t768) + t59 * (t656 + t763) + (t20 * t694 + t76 * t697 + (t691 * t815 + t694 * t816) * qJD(2)) * t514 + ((t20 * t691 + t695 * t76) * t510 + (t19 * t694 + t59 * t697) * t509) * t512 - g(1) * (t735 + t256) - g(2) * (t659 + t254) - g(3) * (-t446 + t410) + (-t350 * t368 + (-t221 - t254) * t657 + (-t260 - t765) * t724 + t860 + t861) * t77) * m(6) + (-t86 * (t645 + t663) - t80 * (t660 + t664) - g(1) * (t419 + t257) - g(2) * (-t418 + t255) - (t642 - t829) * t824 + t46 * (t746 + t754) + t86 * (t186 + t228) + t26 * (t183 + t225) + t80 * (t763 + t770) + (t45 * t757 + t86 * t769 + (t509 * t757 * t80 + t510 * t745 * t86) * qJD(2)) * t514 + ((t45 * t745 + t762 * t86) * t510 + (t26 * t757 + t769 * t80) * t509) * t512 + ((-t215 - t260) * t724 + t859 + t860) * t87) * m(5) + (-t125 * (t286 * t721 + t444 * t448) - t124 * (-t287 * t721 - t444 * t447) - t104 * (t286 * t447 - t287 * t448) - g(1) * t287 - g(2) * t286 - g(3) * t444 + (-t124 * t167 + t125 * t166 + t85 * t258 - t84 * t259 + (t569 + (-t124 * t510 + t125 * t509) * t394) * qJD(2)) * t514 + (t125 * (-qJD(2) * t258 + t268 * t509) + t124 * (qJD(2) * t259 - t268 * t510) + t71 * t608 + t104 * (t166 * t510 - t167 * t509) + (t509 * t85 - t510 * t84) * t394) * t512) * m(4); t520 + (t21 * t652 + t76 * t767 + t19 * t768 + (-t20 * t764 - t76 * t771 + (-t509 * t668 - t510 * t667) * qJD(2)) * t514 + (-qJD(2) * t666 + (-t20 * t748 - t76 * t766) * t510 + t857 * t509) * t512 - t76 * (-t356 * t657 - t188 + (-t410 + t710) * t367) + g(1) * t750 + g(2) * t751 - (-t818 + (-rSges(6,1) - pkin(4)) * t496) * t824 + (t368 * t710 + t657 * t751 + t861) * t77 + (-t355 * t367 - t368 * t750 - t171 + t656) * t59) * m(6) + (t46 * t746 + t45 * (-t217 * t514 - t341 * t778) + t26 * (-t217 * t782 + t183) - g(1) * t257 - g(2) * t255 - g(3) * t411 + (-t215 * t724 + t859) * t87 + (-t143 * t514 + t186 + (-t200 * t512 - t341 * t723) * t510 - t663) * t86 + ((-t143 * t512 - t217 * t723) * t509 + t770 - t664) * t80) * m(5); ((qJD(2) * t640 + g(3) - t19 - t869) * t514 + (t20 * t509 + t21 * t510 + (-t509 * t77 + t815) * t657 + (-t367 * t509 + t368 * t510 + qJD(2)) * t59 - t858) * t512) * m(6);];
tau = t1;
