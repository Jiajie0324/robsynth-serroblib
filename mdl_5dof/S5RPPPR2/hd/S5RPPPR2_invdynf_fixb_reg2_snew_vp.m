% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPPPR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d5,theta2,theta3,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 11:23
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPPPR2_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPPR2_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPPR2_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPPPR2_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPPPR2_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPPPR2_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 11:23:53
% EndTime: 2020-01-03 11:23:57
% DurationCPUTime: 3.54s
% Computational Cost: add. (10423->259), mult. (30201->358), div. (0->0), fcn. (21367->10), ass. (0->203)
t1457 = sin(pkin(9));
t1460 = cos(pkin(9));
t1462 = cos(pkin(7));
t1459 = sin(pkin(7));
t1461 = cos(pkin(8));
t1502 = t1459 * t1461;
t1476 = t1457 * t1502 + t1460 * t1462;
t1517 = t1476 * qJDD(1);
t1519 = -qJDD(5) - t1517;
t1416 = t1476 * qJD(1);
t1467 = qJD(1) ^ 2;
t1452 = t1459 ^ 2;
t1454 = t1462 ^ 2;
t1499 = t1452 + t1454;
t1433 = t1499 * t1467;
t1410 = qJD(5) + t1416;
t1518 = qJD(5) + t1410;
t1418 = (-t1457 * t1462 + t1460 * t1502) * qJD(1);
t1463 = sin(qJ(5));
t1465 = cos(qJ(5));
t1458 = sin(pkin(8));
t1508 = qJD(1) * t1459;
t1492 = t1458 * t1508;
t1400 = t1463 * t1418 - t1465 * t1492;
t1516 = t1400 ^ 2;
t1402 = t1465 * t1418 + t1463 * t1492;
t1515 = t1402 ^ 2;
t1514 = t1410 ^ 2;
t1513 = t1416 ^ 2;
t1512 = t1418 ^ 2;
t1511 = 2 * qJD(2);
t1510 = 2 * qJD(4);
t1509 = t1462 * g(1);
t1507 = qJD(1) * t1462;
t1506 = t1402 * t1400;
t1505 = t1418 * t1416;
t1504 = t1452 * t1467;
t1503 = t1454 * t1467;
t1501 = t1462 * t1467;
t1500 = qJD(5) - t1410;
t1498 = qJDD(1) * t1461;
t1497 = t1459 * qJDD(1);
t1449 = t1462 * qJDD(1);
t1464 = sin(qJ(1));
t1496 = t1464 * qJDD(1);
t1466 = cos(qJ(1));
t1495 = t1466 * qJDD(1);
t1494 = -0.2e1 * t1508;
t1493 = qJD(1) * t1416 * t1458;
t1451 = t1458 ^ 2;
t1491 = t1451 * t1504;
t1490 = t1458 * t1501;
t1445 = t1459 * t1501;
t1440 = -t1464 * g(2) + t1466 * g(3);
t1425 = -t1467 * pkin(1) + qJDD(1) * qJ(2) + t1440;
t1406 = -t1459 * g(1) + t1462 * t1425 + t1507 * t1511;
t1479 = -pkin(2) * t1462 - qJ(3) * t1459;
t1430 = t1479 * qJD(1);
t1387 = t1430 * t1507 + t1406;
t1441 = -t1466 * g(2) - t1464 * g(3);
t1421 = -qJDD(1) * pkin(1) - t1467 * qJ(2) + qJDD(2) - t1441;
t1471 = t1479 * qJDD(1) + t1421;
t1485 = qJD(3) * t1494;
t1366 = t1461 * t1387 + (t1471 + t1485) * t1458;
t1420 = (pkin(3) * t1458 - qJ(4) * t1461) * t1508;
t1353 = -pkin(3) * t1503 - qJ(4) * t1449 - t1420 * t1492 + t1366;
t1475 = t1490 + t1498;
t1478 = t1425 + (t1511 + t1430) * qJD(1);
t1487 = qJDD(3) + t1509;
t1470 = (-t1475 * qJ(4) + (qJDD(1) * t1458 - t1461 * t1501) * pkin(3) + t1478) * t1459 + t1487;
t1335 = t1460 * t1353 - t1416 * t1510 + t1457 * t1470;
t1489 = t1460 * t1498;
t1488 = t1458 * t1497;
t1486 = (0.2e1 * qJD(3) + t1420) * t1461;
t1484 = t1457 * t1353 - t1460 * t1470;
t1483 = t1458 * t1387 - t1461 * t1471;
t1444 = t1457 * t1449;
t1411 = t1459 * t1489 - t1444;
t1482 = -t1463 * t1411 + t1465 * t1488;
t1481 = t1458 * t1461 * t1504;
t1480 = t1418 * t1492;
t1477 = -qJ(4) * t1503 + qJDD(4) + t1483;
t1474 = -t1465 * t1411 - t1463 * t1488;
t1453 = t1461 ^ 2;
t1437 = -t1464 * t1467 + t1495;
t1436 = -t1466 * t1467 - t1496;
t1432 = t1461 * t1445;
t1431 = t1499 * qJDD(1);
t1429 = t1462 * t1433;
t1428 = (-t1452 * t1453 - t1454) * t1467;
t1427 = t1459 * t1433;
t1426 = (-t1451 * t1452 - t1454) * t1467;
t1424 = (t1451 + t1453) * t1504;
t1423 = -t1449 - t1481;
t1422 = t1449 - t1481;
t1415 = (t1490 - t1498) * t1459;
t1414 = t1475 * t1459;
t1413 = -t1432 - t1488;
t1412 = -t1432 + t1488;
t1407 = -t1491 - t1512;
t1405 = qJD(2) * t1494 - t1459 * t1425 - t1509;
t1399 = t1461 * t1422 - t1458 * t1428;
t1398 = -t1458 * t1423 + t1461 * t1426;
t1397 = t1458 * t1422 + t1461 * t1428;
t1396 = t1461 * t1423 + t1458 * t1426;
t1395 = t1416 * pkin(4) - t1418 * pkin(6);
t1394 = t1461 * t1413 - t1458 * t1415;
t1393 = t1458 * t1413 + t1461 * t1415;
t1392 = t1444 + (-t1489 - t1493) * t1459;
t1391 = -t1444 + (t1489 - t1493) * t1459;
t1390 = -t1517 + t1480;
t1389 = t1517 + t1480;
t1388 = -t1491 - t1513;
t1386 = -t1488 - t1505;
t1385 = t1488 - t1505;
t1384 = t1478 * t1459 + t1487;
t1381 = -t1512 - t1513;
t1380 = t1462 * t1399 + t1459 * t1414;
t1379 = t1462 * t1398 + t1459 * t1412;
t1378 = t1459 * t1399 - t1462 * t1414;
t1377 = t1459 * t1398 - t1462 * t1412;
t1376 = -t1459 * t1405 + t1462 * t1406;
t1375 = t1462 * t1405 + t1459 * t1406;
t1374 = t1462 * t1394 - t1459 * t1424;
t1373 = t1459 * t1394 + t1462 * t1424;
t1372 = -t1514 - t1515;
t1371 = t1460 * t1386 - t1457 * t1407;
t1370 = t1457 * t1386 + t1460 * t1407;
t1369 = -t1506 + t1519;
t1368 = -t1506 - t1519;
t1367 = -t1514 - t1516;
t1365 = t1461 * t1485 - t1483;
t1362 = t1460 * t1390 - t1457 * t1392;
t1361 = t1457 * t1390 + t1460 * t1392;
t1360 = -t1515 - t1516;
t1359 = -t1457 * t1385 + t1460 * t1388;
t1358 = t1460 * t1385 + t1457 * t1388;
t1357 = t1500 * t1400 + t1474;
t1356 = -t1518 * t1400 - t1474;
t1355 = -t1500 * t1402 + t1482;
t1354 = t1518 * t1402 - t1482;
t1352 = pkin(3) * t1449 + t1486 * t1508 + t1477;
t1350 = t1461 * t1371 + t1458 * t1391;
t1349 = t1458 * t1371 - t1461 * t1391;
t1348 = t1461 * t1359 + t1458 * t1389;
t1347 = t1458 * t1359 - t1461 * t1389;
t1346 = t1461 * t1362 + t1458 * t1381;
t1345 = t1458 * t1362 - t1461 * t1381;
t1344 = t1465 * t1369 - t1463 * t1372;
t1343 = t1463 * t1369 + t1465 * t1372;
t1342 = t1465 * t1367 - t1463 * t1368;
t1341 = t1463 * t1367 + t1465 * t1368;
t1340 = -t1458 * t1365 + t1461 * t1366;
t1339 = t1461 * t1365 + t1458 * t1366;
t1338 = t1462 * t1350 + t1459 * t1370;
t1337 = t1459 * t1350 - t1462 * t1370;
t1336 = -t1411 * pkin(6) + (t1462 * pkin(3) + t1476 * pkin(4)) * qJDD(1) + (t1486 + (pkin(4) * t1418 + pkin(6) * t1416) * t1458) * t1508 + t1477;
t1334 = -0.2e1 * qJD(4) * t1418 - t1484;
t1333 = t1462 * t1340 + t1459 * t1384;
t1332 = t1459 * t1340 - t1462 * t1384;
t1331 = t1465 * t1355 - t1463 * t1357;
t1330 = t1463 * t1355 + t1465 * t1357;
t1329 = t1462 * t1348 + t1459 * t1358;
t1328 = t1459 * t1348 - t1462 * t1358;
t1327 = t1462 * t1346 + t1459 * t1361;
t1326 = t1459 * t1346 - t1462 * t1361;
t1325 = t1460 * t1344 + t1457 * t1356;
t1324 = t1457 * t1344 - t1460 * t1356;
t1323 = t1460 * t1342 + t1457 * t1354;
t1322 = t1457 * t1342 - t1460 * t1354;
t1321 = -pkin(4) * t1491 + pkin(6) * t1488 - t1416 * t1395 + t1335;
t1320 = -pkin(4) * t1488 - pkin(6) * t1491 + (t1510 + t1395) * t1418 + t1484;
t1319 = t1460 * t1331 + t1457 * t1360;
t1318 = t1457 * t1331 - t1460 * t1360;
t1317 = t1461 * t1325 + t1458 * t1343;
t1316 = t1458 * t1325 - t1461 * t1343;
t1315 = -t1457 * t1334 + t1460 * t1335;
t1314 = t1460 * t1334 + t1457 * t1335;
t1313 = t1461 * t1323 + t1458 * t1341;
t1312 = t1458 * t1323 - t1461 * t1341;
t1311 = t1465 * t1321 + t1463 * t1336;
t1310 = -t1463 * t1321 + t1465 * t1336;
t1309 = t1461 * t1319 + t1458 * t1330;
t1308 = t1458 * t1319 - t1461 * t1330;
t1307 = t1461 * t1315 + t1458 * t1352;
t1306 = t1458 * t1315 - t1461 * t1352;
t1305 = t1462 * t1317 + t1459 * t1324;
t1304 = t1459 * t1317 - t1462 * t1324;
t1303 = t1462 * t1313 + t1459 * t1322;
t1302 = t1459 * t1313 - t1462 * t1322;
t1301 = t1462 * t1309 + t1459 * t1318;
t1300 = t1459 * t1309 - t1462 * t1318;
t1299 = -t1463 * t1310 + t1465 * t1311;
t1298 = t1465 * t1310 + t1463 * t1311;
t1297 = t1462 * t1307 + t1459 * t1314;
t1296 = t1459 * t1307 - t1462 * t1314;
t1295 = t1460 * t1299 + t1457 * t1320;
t1294 = t1457 * t1299 - t1460 * t1320;
t1293 = t1461 * t1295 + t1458 * t1298;
t1292 = t1458 * t1295 - t1461 * t1298;
t1291 = t1462 * t1293 + t1459 * t1294;
t1290 = t1459 * t1293 - t1462 * t1294;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1375, 0, 0, 0, 0, 0, 0, t1377, t1378, t1373, t1332, 0, 0, 0, 0, 0, 0, t1328, t1337, t1326, t1296, 0, 0, 0, 0, 0, 0, t1302, t1304, t1300, t1290; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1437, t1436, 0, t1464 * t1440 + t1466 * t1441, 0, 0, 0, 0, 0, 0, -t1464 * t1429 + t1462 * t1495, t1464 * t1427 - t1459 * t1495, t1464 * t1431 + t1466 * t1433, t1464 * t1376 - t1466 * t1421, 0, 0, 0, 0, 0, 0, t1464 * t1379 - t1466 * t1396, t1464 * t1380 - t1466 * t1397, t1464 * t1374 - t1466 * t1393, t1464 * t1333 - t1466 * t1339, 0, 0, 0, 0, 0, 0, t1464 * t1329 - t1466 * t1347, t1464 * t1338 - t1466 * t1349, t1464 * t1327 - t1466 * t1345, t1464 * t1297 - t1466 * t1306, 0, 0, 0, 0, 0, 0, t1464 * t1303 - t1466 * t1312, t1464 * t1305 - t1466 * t1316, t1464 * t1301 - t1466 * t1308, t1464 * t1291 - t1466 * t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t1436, t1437, 0, -t1466 * t1440 + t1464 * t1441, 0, 0, 0, 0, 0, 0, t1466 * t1429 + t1462 * t1496, -t1466 * t1427 - t1459 * t1496, -t1466 * t1431 + t1464 * t1433, -t1466 * t1376 - t1464 * t1421, 0, 0, 0, 0, 0, 0, -t1466 * t1379 - t1464 * t1396, -t1466 * t1380 - t1464 * t1397, -t1466 * t1374 - t1464 * t1393, -t1466 * t1333 - t1464 * t1339, 0, 0, 0, 0, 0, 0, -t1466 * t1329 - t1464 * t1347, -t1466 * t1338 - t1464 * t1349, -t1466 * t1327 - t1464 * t1345, -t1466 * t1297 - t1464 * t1306, 0, 0, 0, 0, 0, 0, -t1466 * t1303 - t1464 * t1312, -t1466 * t1305 - t1464 * t1316, -t1466 * t1301 - t1464 * t1308, -t1466 * t1291 - t1464 * t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1467, -qJDD(1), 0, t1440, 0, 0, 0, 0, 0, 0, -t1429, t1427, t1431, t1376, 0, 0, 0, 0, 0, 0, t1379, t1380, t1374, t1333, 0, 0, 0, 0, 0, 0, t1329, t1338, t1327, t1297, 0, 0, 0, 0, 0, 0, t1303, t1305, t1301, t1291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1467, 0, t1441, 0, 0, 0, 0, 0, 0, t1449, -t1497, t1433, -t1421, 0, 0, 0, 0, 0, 0, -t1396, -t1397, -t1393, -t1339, 0, 0, 0, 0, 0, 0, -t1347, -t1349, -t1345, -t1306, 0, 0, 0, 0, 0, 0, -t1312, -t1316, -t1308, -t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1375, 0, 0, 0, 0, 0, 0, t1377, t1378, t1373, t1332, 0, 0, 0, 0, 0, 0, t1328, t1337, t1326, t1296, 0, 0, 0, 0, 0, 0, t1302, t1304, t1300, t1290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1503, t1445, t1449, t1406, 0, 0, 0, 0, 0, 0, t1398, t1399, t1394, t1340, 0, 0, 0, 0, 0, 0, t1348, t1350, t1346, t1307, 0, 0, 0, 0, 0, 0, t1313, t1317, t1309, t1293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1445, -t1504, -t1497, t1405, 0, 0, 0, 0, 0, 0, -t1412, -t1414, t1424, -t1384, 0, 0, 0, 0, 0, 0, -t1358, -t1370, -t1361, -t1314, 0, 0, 0, 0, 0, 0, -t1322, -t1324, -t1318, -t1294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1449, t1497, -t1433, t1421, 0, 0, 0, 0, 0, 0, t1396, t1397, t1393, t1339, 0, 0, 0, 0, 0, 0, t1347, t1349, t1345, t1306, 0, 0, 0, 0, 0, 0, t1312, t1316, t1308, t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1426, t1422, t1413, t1366, 0, 0, 0, 0, 0, 0, t1359, t1371, t1362, t1315, 0, 0, 0, 0, 0, 0, t1323, t1325, t1319, t1295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1423, t1428, t1415, t1365, 0, 0, 0, 0, 0, 0, -t1389, -t1391, -t1381, -t1352, 0, 0, 0, 0, 0, 0, -t1341, -t1343, -t1330, -t1298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1412, t1414, -t1424, t1384, 0, 0, 0, 0, 0, 0, t1358, t1370, t1361, t1314, 0, 0, 0, 0, 0, 0, t1322, t1324, t1318, t1294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1388, t1386, t1390, t1335, 0, 0, 0, 0, 0, 0, t1342, t1344, t1331, t1299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1385, t1407, t1392, t1334, 0, 0, 0, 0, 0, 0, -t1354, -t1356, -t1360, -t1320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1389, t1391, t1381, t1352, 0, 0, 0, 0, 0, 0, t1341, t1343, t1330, t1298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1367, t1369, t1355, t1311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1368, t1372, t1357, t1310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1354, t1356, t1360, t1320;];
f_new_reg = t1;
