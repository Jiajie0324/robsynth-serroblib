% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPPPR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d5,theta2,theta3,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:32
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPPPR2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPPR2_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPPR2_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPPPR2_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPPPR2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPPPR2_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:32:04
% EndTime: 2019-12-05 17:32:24
% DurationCPUTime: 21.24s
% Computational Cost: add. (65432->723), mult. (188231->992), div. (0->0), fcn. (132261->10), ass. (0->490)
t1145 = sin(pkin(9));
t1147 = sin(pkin(7));
t1137 = t1147 * qJDD(1);
t1146 = sin(pkin(8));
t1218 = t1146 * t1137;
t1148 = cos(pkin(9));
t1150 = cos(pkin(7));
t1149 = cos(pkin(8));
t1242 = t1147 * t1149;
t1187 = t1145 * t1242 + t1148 * t1150;
t1096 = t1187 * qJD(1);
t1226 = qJD(1) * t1242;
t1098 = -qJD(1) * t1145 * t1150 + t1148 * t1226;
t1250 = t1098 * t1096;
t1283 = t1218 - t1250;
t1285 = t1145 * t1283;
t1284 = t1148 * t1283;
t1151 = sin(qJ(5));
t1153 = cos(qJ(5));
t1244 = t1146 * t1147;
t1227 = qJD(1) * t1244;
t1062 = t1098 * t1151 - t1153 * t1227;
t1064 = t1098 * t1153 + t1151 * t1227;
t1006 = t1064 * t1062;
t1278 = t1187 * qJDD(1);
t1086 = qJDD(5) + t1278;
t1280 = -t1006 + t1086;
t1282 = t1151 * t1280;
t1281 = t1153 * t1280;
t1073 = t1098 * t1227;
t1035 = -t1278 + t1073;
t1155 = qJD(1) ^ 2;
t1236 = t1150 * t1155;
t1268 = pkin(2) * t1150;
t1199 = -qJ(3) * t1147 - t1268;
t1272 = 2 * qJD(2);
t1170 = (qJD(1) * t1199 + t1272) * qJD(1);
t1152 = sin(qJ(1));
t1154 = cos(qJ(1));
t1125 = t1152 * g(2) - g(3) * t1154;
t1174 = -t1155 * pkin(1) + qJDD(1) * qJ(2) + t1125;
t1279 = t1170 + t1174;
t1266 = pkin(3) * t1149;
t1198 = -qJ(4) * t1146 - t1266;
t1267 = pkin(3) * t1146;
t1197 = -qJ(4) * t1149 + t1267;
t1263 = t1150 * g(1);
t1212 = qJDD(3) + t1263;
t1159 = ((t1150 * t1198 - pkin(1)) * t1155 + (qJ(2) + t1197) * qJDD(1) + t1170 + t1125) * t1147 + t1212;
t1253 = qJD(1) * t1147;
t1099 = t1197 * t1253;
t1139 = t1150 * qJDD(1);
t1157 = t1150 ^ 2;
t1140 = t1157 * t1155;
t1264 = t1147 * g(1);
t1031 = t1150 * t1279 - t1264;
t1126 = t1154 * g(2) + t1152 * g(3);
t1172 = -t1155 * qJ(2) + qJDD(2) - t1126;
t1189 = -pkin(1) + t1199;
t1160 = qJDD(1) * t1189 + t1172;
t978 = -0.2e1 * qJD(3) * t1227 + t1031 * t1149 + t1146 * t1160;
t950 = -pkin(3) * t1140 - qJ(4) * t1139 - t1099 * t1227 + t978;
t1211 = t1145 * t950 - t1148 * t1159;
t1270 = 2 * qJD(4);
t897 = t1098 * t1270 + t1211;
t898 = -t1096 * t1270 + t1145 * t1159 + t1148 * t950;
t842 = t1145 * t897 + t1148 * t898;
t1209 = t1146 * t1031 - t1149 * t1160;
t1171 = pkin(3) * t1139 - qJ(4) * t1140 + qJDD(4) + t1209;
t1271 = 0.2e1 * qJD(3);
t1210 = (t1271 + t1099) * t1149;
t947 = t1210 * t1253 + t1171;
t825 = t1146 * t947 + t1149 * t842;
t841 = t1145 * t898 - t1148 * t897;
t1277 = -(pkin(2) - t1198) * t841 + qJ(3) * t825;
t1228 = pkin(4) * t1148 + pkin(3);
t1044 = pkin(4) * t1096 - pkin(6) * t1098;
t1143 = t1147 ^ 2;
t1243 = t1146 * t1155;
t871 = -t1096 * t1044 + (-pkin(4) * t1143 * t1243 + pkin(6) * t1137) * t1146 + t898;
t1216 = t1149 * t1137;
t1091 = -t1139 * t1145 + t1148 * t1216;
t902 = t1278 * pkin(4) - t1091 * pkin(6) + (t1210 + (pkin(4) * t1098 + pkin(6) * t1096) * t1146) * t1253 + t1171;
t832 = t1151 * t871 - t1153 * t902;
t833 = t1151 * t902 + t1153 * t871;
t799 = t1151 * t832 + t1153 * t833;
t1249 = t1143 * t1155;
t1273 = t1146 ^ 2;
t1132 = t1273 * t1249;
t870 = -pkin(4) * t1218 - pkin(6) * t1132 + (t1270 + t1044) * t1098 + t1211;
t791 = t1145 * t870 + t1148 * t799;
t798 = t1151 * t833 - t1153 * t832;
t1276 = -(pkin(6) * t1145 + t1228) * t798 + qJ(4) * t791;
t1087 = qJD(5) + t1096;
t1208 = -t1151 * t1091 + t1153 * t1218;
t957 = (-qJD(5) + t1087) * t1064 + t1208;
t1178 = -t1153 * t1091 - t1151 * t1218;
t1001 = -qJD(5) * t1062 - t1178;
t1020 = t1087 * t1062;
t959 = t1001 + t1020;
t891 = t1151 * t957 - t1153 * t959;
t792 = -pkin(6) * t891 - t798;
t893 = t1151 * t959 + t1153 * t957;
t1059 = t1062 ^ 2;
t1060 = t1064 ^ 2;
t965 = t1059 + t1060;
t858 = -t1145 * t965 + t1148 * t893;
t1275 = qJ(4) * t858 + t1145 * t792 - t1228 * t891;
t1206 = t1096 * t1227;
t1037 = t1206 + t1091;
t967 = t1035 * t1145 - t1037 * t1148;
t828 = -qJ(4) * t967 - t841;
t1088 = t1096 ^ 2;
t1089 = t1098 ^ 2;
t1017 = t1088 + t1089;
t969 = t1035 * t1148 + t1037 * t1145;
t923 = -t1017 * t1146 + t1149 * t969;
t1274 = qJ(3) * t923 + t1146 * t828 - (pkin(2) + t1266) * t967;
t1085 = t1087 ^ 2;
t1269 = pkin(2) * t1147;
t1265 = pkin(4) * t1145;
t1260 = qJDD(1) * pkin(1);
t1259 = t1145 * t947;
t1258 = t1148 * t947;
t1257 = t1151 * t870;
t984 = t1006 + t1086;
t1256 = t1151 * t984;
t1255 = t1153 * t870;
t1254 = t1153 * t984;
t1252 = t1087 * t1151;
t1251 = t1087 * t1153;
t1029 = t1250 + t1218;
t1248 = t1145 * t1029;
t1027 = t1147 * t1279 + t1212;
t1247 = t1146 * t1027;
t1222 = t1149 * t1243;
t1114 = t1143 * t1222;
t1101 = t1139 - t1114;
t1246 = t1146 * t1101;
t1102 = -t1139 - t1114;
t1245 = t1146 * t1102;
t1241 = t1147 * t1150;
t1240 = t1148 * t1029;
t1239 = t1149 * t1027;
t1238 = t1149 * t1101;
t1237 = t1149 * t1102;
t1100 = -t1172 + t1260;
t1235 = t1152 * t1100;
t1234 = t1154 * t1100;
t1233 = qJDD(1) * t1146;
t1232 = qJDD(1) * t1149;
t1231 = t1152 * qJDD(1);
t1230 = t1154 * qJDD(1);
t1144 = t1149 ^ 2;
t1225 = t1144 * t1249;
t1224 = t1145 * t1006;
t1223 = t1146 * t1250;
t1221 = t1148 * t1006;
t1220 = t1149 * t1250;
t1219 = t1149 * t1236;
t1133 = t1147 * t1236;
t1217 = t1147 * t1139;
t1215 = t1150 * t1231;
t1214 = t1150 * t1230;
t1213 = t1100 + t1260;
t977 = t1226 * t1271 + t1209;
t915 = t1146 * t977 + t1149 * t978;
t1161 = qJD(1) * t1272 + t1174;
t1067 = t1147 * t1161 + t1263;
t1068 = t1150 * t1161 - t1264;
t1005 = t1067 * t1147 + t1068 * t1150;
t1142 = t1147 * t1143;
t1207 = t1142 * t1222;
t1205 = t1146 * t1219;
t1204 = t1149 * t1133;
t1203 = -pkin(4) * t870 + pkin(6) * t799;
t1202 = -pkin(3) * t947 + qJ(4) * t842;
t1121 = t1154 * t1155 + t1231;
t1201 = pkin(5) * t1121 - g(1) * t1154;
t1200 = -pkin(2) * t1027 + qJ(3) * t915;
t914 = t1146 * t978 - t1149 * t977;
t1193 = t1143 * t1205;
t1004 = t1067 * t1150 - t1068 * t1147;
t1192 = t1125 * t1154 - t1126 * t1152;
t1191 = -t1125 * t1152 - t1126 * t1154;
t1190 = -t1152 * t1155 + t1230;
t1000 = -qJD(5) * t1064 + t1208;
t1111 = (t1143 + t1157) * t1236;
t1186 = -t1111 * t1152 + t1214;
t1185 = t1111 * t1154 + t1215;
t993 = -t1060 - t1085;
t921 = -t1151 * t993 - t1254;
t960 = (qJD(5) + t1087) * t1062 + t1178;
t1184 = pkin(4) * t960 + pkin(6) * t921 + t1257;
t982 = -t1085 - t1059;
t917 = t1153 * t982 - t1282;
t1021 = t1087 * t1064;
t956 = t1000 - t1021;
t1183 = pkin(4) * t956 + pkin(6) * t917 - t1255;
t1034 = -t1073 - t1278;
t1032 = -t1132 - t1088;
t964 = t1032 * t1148 - t1285;
t1182 = pkin(3) * t1034 + qJ(4) * t964 - t1258;
t1036 = -t1206 + t1091;
t1071 = -t1089 - t1132;
t991 = -t1071 * t1145 - t1240;
t1181 = -pkin(3) * t1036 + qJ(4) * t991 + t1259;
t1107 = -t1132 - t1140;
t1054 = t1107 * t1149 - t1245;
t1093 = (t1219 - t1233) * t1147;
t1180 = pkin(2) * t1093 + qJ(3) * t1054 - t1239;
t1110 = -t1140 - t1225;
t1055 = -t1110 * t1146 + t1238;
t1116 = t1146 * t1133;
t1094 = t1116 + t1216;
t1179 = -pkin(2) * t1094 + qJ(3) * t1055 + t1247;
t1177 = pkin(4) * t965 + pkin(6) * t893 + t799;
t1175 = pkin(3) * t1017 + qJ(4) * t969 + t842;
t1092 = (t1219 + t1233) * t1147;
t1095 = -t1116 + t1216;
t1041 = -t1092 * t1149 + t1095 * t1146;
t1103 = t1132 + t1225;
t1173 = pkin(2) * t1103 + qJ(3) * t1041 + t915;
t790 = t1145 * t799 - t1148 * t870;
t770 = -qJ(4) * t790 + (-pkin(6) * t1148 + t1265) * t798;
t774 = -pkin(3) * t790 - t1203;
t777 = t1146 * t798 + t1149 * t791;
t1169 = -pkin(2) * t790 + qJ(3) * t777 + t1146 * t770 + t1149 * t774;
t857 = t1145 * t893 + t1148 * t965;
t781 = -qJ(4) * t857 + t1148 * t792 + t1265 * t891;
t783 = -pkin(3) * t857 - t1177;
t827 = t1146 * t891 + t1149 * t858;
t1168 = -pkin(2) * t857 + qJ(3) * t827 + t1146 * t781 + t1149 * t783;
t916 = t1151 * t982 + t1281;
t816 = -pkin(4) * t916 + t832;
t838 = -pkin(6) * t916 + t1257;
t872 = t1145 * t917 + t1148 * t956;
t786 = -qJ(4) * t872 - t1145 * t816 + t1148 * t838;
t804 = -pkin(3) * t872 - t1183;
t873 = -t1145 * t956 + t1148 * t917;
t840 = t1146 * t916 + t1149 * t873;
t1167 = -pkin(2) * t872 + qJ(3) * t840 + t1146 * t786 + t1149 * t804;
t920 = t1153 * t993 - t1256;
t817 = -pkin(4) * t920 + t833;
t843 = -pkin(6) * t920 + t1255;
t874 = t1145 * t921 + t1148 * t960;
t787 = -qJ(4) * t874 - t1145 * t817 + t1148 * t843;
t805 = -pkin(3) * t874 - t1184;
t875 = -t1145 * t960 + t1148 * t921;
t846 = t1146 * t920 + t1149 * t875;
t1166 = -pkin(2) * t874 + qJ(3) * t846 + t1146 * t787 + t1149 * t805;
t963 = t1032 * t1145 + t1284;
t859 = -pkin(3) * t963 + t897;
t900 = -qJ(4) * t963 + t1259;
t929 = -t1034 * t1146 + t1149 * t964;
t1165 = -pkin(2) * t963 + qJ(3) * t929 + t1146 * t900 + t1149 * t859;
t988 = t1071 * t1148 - t1248;
t866 = -pkin(3) * t988 + t898;
t909 = -qJ(4) * t988 + t1258;
t944 = t1036 * t1146 + t1149 * t991;
t1164 = -pkin(2) * t988 + qJ(3) * t944 + t1146 * t909 + t1149 * t866;
t1163 = -pkin(3) * t916 + qJ(4) * t873 + t1145 * t838 + t1148 * t816;
t1162 = -pkin(3) * t920 + qJ(4) * t875 + t1145 * t843 + t1148 * t817;
t1138 = t1157 * qJDD(1);
t1136 = t1143 * qJDD(1);
t1131 = t1273 * t1137;
t1128 = 0.2e1 * t1217;
t1118 = -t1140 + t1249;
t1117 = t1140 + t1249;
t1113 = t1138 - t1136;
t1112 = t1138 + t1136;
t1109 = t1140 - t1225;
t1108 = (t1147 * t1157 + t1142) * t1155;
t1106 = t1132 - t1140;
t1105 = pkin(5) * t1190 + g(1) * t1152;
t1104 = -t1132 + t1225;
t1084 = t1190 * t1241;
t1083 = t1121 * t1241;
t1080 = (t1144 + t1273) * t1133;
t1079 = (qJDD(1) * t1144 + t1205) * t1147;
t1078 = (-t1144 * t1236 + t1146 * t1232) * t1147;
t1077 = (t1146 * t1236 + t1232) * t1244;
t1076 = -t1146 * t1204 + t1131;
t1075 = t1108 * t1154 + t1147 * t1231;
t1074 = -t1108 * t1152 + t1147 * t1230;
t1070 = -t1089 + t1132;
t1069 = t1088 - t1132;
t1058 = t1079 * t1150 + t1207;
t1057 = t1076 * t1150 - t1207;
t1056 = -t1109 * t1146 + t1237;
t1053 = t1106 * t1149 + t1246;
t1052 = t1109 * t1149 + t1245;
t1051 = t1110 * t1149 + t1246;
t1050 = t1107 * t1146 + t1237;
t1049 = t1106 * t1146 - t1238;
t1047 = t1079 * t1147 - t1193;
t1046 = t1076 * t1147 + t1193;
t1045 = t1089 - t1088;
t1043 = -qJ(2) * t1111 + t1150 * t1213;
t1042 = qJ(2) * t1108 - t1147 * t1213;
t1040 = t1093 * t1149 - t1094 * t1146;
t1039 = -t1092 * t1146 - t1095 * t1149;
t1038 = t1093 * t1146 + t1094 * t1149;
t1025 = -t1073 * t1145 + t1091 * t1148;
t1024 = t1073 * t1148 + t1091 * t1145;
t1023 = t1145 * t1278 + t1148 * t1206;
t1022 = -t1145 * t1206 + t1148 * t1278;
t1019 = -t1060 + t1085;
t1018 = t1059 - t1085;
t1016 = (-t1096 * t1148 + t1098 * t1145) * t1227;
t1015 = (-t1096 * t1145 - t1098 * t1148) * t1227;
t1014 = t1056 * t1150 + t1095 * t1147;
t1013 = t1055 * t1150 + t1094 * t1147;
t1012 = t1054 * t1150 - t1093 * t1147;
t1011 = t1053 * t1150 - t1092 * t1147;
t1010 = t1056 * t1147 - t1095 * t1150;
t1009 = t1055 * t1147 - t1094 * t1150;
t1008 = t1054 * t1147 + t1093 * t1150;
t1007 = t1053 * t1147 + t1092 * t1150;
t1002 = t1060 - t1059;
t999 = t1041 * t1150 - t1103 * t1147;
t998 = t1040 * t1150 + t1104 * t1147;
t997 = t1041 * t1147 + t1103 * t1150;
t996 = t1040 * t1147 - t1104 * t1150;
t995 = t1016 * t1149 + t1131;
t994 = (t1016 - t1216) * t1146;
t992 = t1069 * t1148 - t1248;
t990 = -t1070 * t1145 + t1284;
t989 = t1069 * t1145 + t1240;
t987 = t1070 * t1148 + t1285;
t986 = pkin(1) * t1100 + qJ(2) * t1005;
t981 = pkin(1) * t1117 + qJ(2) * t1112 + t1005;
t980 = -qJ(3) * t1051 + t1239;
t979 = -qJ(3) * t1050 + t1247;
t973 = t1025 * t1149 + t1223;
t972 = t1023 * t1149 - t1223;
t971 = t1025 * t1146 - t1220;
t970 = t1023 * t1146 + t1220;
t968 = t1034 * t1148 - t1036 * t1145;
t966 = t1034 * t1145 + t1036 * t1148;
t962 = (-t1062 * t1153 + t1064 * t1151) * t1087;
t961 = (-t1062 * t1151 - t1064 * t1153) * t1087;
t958 = t1001 - t1020;
t955 = -t1000 - t1021;
t954 = t1001 * t1153 - t1064 * t1252;
t953 = t1001 * t1151 + t1064 * t1251;
t952 = -t1000 * t1151 + t1062 * t1251;
t951 = -t1000 * t1153 - t1062 * t1252;
t949 = -pkin(2) * t1051 + t978;
t948 = -pkin(2) * t1050 + t977;
t945 = t1035 * t1146 + t1149 * t992;
t943 = t1037 * t1146 + t1149 * t990;
t942 = -t1035 * t1149 + t1146 * t992;
t941 = -t1036 * t1149 + t1146 * t991;
t940 = -t1037 * t1149 + t1146 * t990;
t939 = t1015 * t1147 + t1150 * t995;
t938 = -t1015 * t1150 + t1147 * t995;
t937 = t1086 * t1145 + t1148 * t962;
t936 = -t1086 * t1148 + t1145 * t962;
t935 = t1045 * t1146 + t1149 * t968;
t934 = -t1045 * t1149 + t1146 * t968;
t933 = t1018 * t1153 - t1256;
t932 = -t1019 * t1151 + t1281;
t931 = t1018 * t1151 + t1254;
t930 = t1019 * t1153 + t1282;
t928 = t1034 * t1149 + t1146 * t964;
t927 = t1024 * t1147 + t1150 * t973;
t926 = -t1022 * t1147 + t1150 * t972;
t925 = -t1024 * t1150 + t1147 * t973;
t924 = t1022 * t1150 + t1147 * t972;
t922 = t1017 * t1149 + t1146 * t969;
t919 = -pkin(1) * t1008 - t1180;
t918 = -pkin(1) * t1009 - t1179;
t913 = t1148 * t954 + t1224;
t912 = t1148 * t952 - t1224;
t911 = t1145 * t954 - t1221;
t910 = t1145 * t952 + t1221;
t908 = t1147 * t989 + t1150 * t945;
t907 = t1147 * t988 + t1150 * t944;
t906 = t1147 * t987 + t1150 * t943;
t905 = t1147 * t945 - t1150 * t989;
t904 = t1147 * t944 - t1150 * t988;
t903 = t1147 * t943 - t1150 * t987;
t899 = -qJ(3) * t1039 - t914;
t896 = t1027 * t1147 + t1150 * t915;
t895 = -t1027 * t1150 + t1147 * t915;
t892 = -t1151 * t958 + t1153 * t956;
t890 = t1151 * t956 + t1153 * t958;
t889 = t1147 * t966 + t1150 * t935;
t888 = t1147 * t935 - t1150 * t966;
t887 = t1146 * t961 + t1149 * t937;
t886 = t1146 * t937 - t1149 * t961;
t885 = t1147 * t963 + t1150 * t929;
t884 = t1147 * t929 - t1150 * t963;
t883 = t1147 * t967 + t1150 * t923;
t882 = t1147 * t923 - t1150 * t967;
t881 = -t1145 * t955 + t1148 * t933;
t880 = t1145 * t959 + t1148 * t932;
t879 = t1145 * t933 + t1148 * t955;
t878 = t1145 * t932 - t1148 * t959;
t877 = -qJ(2) * t1009 - t1147 * t949 + t1150 * t980;
t876 = -qJ(2) * t1008 - t1147 * t948 + t1150 * t979;
t869 = t1002 * t1145 + t1148 * t892;
t868 = -t1002 * t1148 + t1145 * t892;
t867 = -pkin(1) * t997 - t1173;
t865 = -pkin(1) * t1051 + qJ(2) * t1013 + t1147 * t980 + t1150 * t949;
t864 = -pkin(1) * t1050 + qJ(2) * t1012 + t1147 * t979 + t1150 * t948;
t863 = t1146 * t953 + t1149 * t913;
t862 = -t1146 * t951 + t1149 * t912;
t861 = t1146 * t913 - t1149 * t953;
t860 = t1146 * t912 + t1149 * t951;
t856 = -qJ(2) * t997 + t1039 * t1269 + t1150 * t899;
t855 = -pkin(2) * t941 - t1181;
t854 = t1147 * t936 + t1150 * t887;
t853 = t1147 * t887 - t1150 * t936;
t852 = qJ(2) * t999 + t1147 * t899 + (-pkin(1) - t1268) * t1039;
t851 = t1146 * t931 + t1149 * t881;
t850 = t1146 * t930 + t1149 * t880;
t849 = t1146 * t881 - t1149 * t931;
t848 = t1146 * t880 - t1149 * t930;
t847 = -pkin(2) * t928 - t1182;
t845 = t1146 * t875 - t1149 * t920;
t844 = -pkin(1) * t895 - t1200;
t839 = t1146 * t873 - t1149 * t916;
t837 = t1147 * t911 + t1150 * t863;
t836 = t1147 * t910 + t1150 * t862;
t835 = t1147 * t863 - t1150 * t911;
t834 = t1147 * t862 - t1150 * t910;
t830 = t1146 * t890 + t1149 * t869;
t829 = t1146 * t869 - t1149 * t890;
t826 = t1146 * t858 - t1149 * t891;
t824 = t1146 * t842 - t1149 * t947;
t823 = -qJ(2) * t895 + (-qJ(3) * t1150 + t1269) * t914;
t822 = -qJ(3) * t941 - t1146 * t866 + t1149 * t909;
t821 = t1147 * t879 + t1150 * t851;
t820 = t1147 * t878 + t1150 * t850;
t819 = t1147 * t851 - t1150 * t879;
t818 = t1147 * t850 - t1150 * t878;
t815 = -qJ(3) * t928 - t1146 * t859 + t1149 * t900;
t814 = t1147 * t874 + t1150 * t846;
t813 = t1147 * t846 - t1150 * t874;
t812 = t1147 * t872 + t1150 * t840;
t811 = t1147 * t840 - t1150 * t872;
t810 = -pkin(2) * t922 - t1175;
t809 = qJ(2) * t896 + t1189 * t914;
t808 = -qJ(3) * t922 + t1149 * t828 + t1267 * t967;
t807 = t1147 * t868 + t1150 * t830;
t806 = t1147 * t830 - t1150 * t868;
t803 = t1147 * t857 + t1150 * t827;
t802 = t1147 * t827 - t1150 * t857;
t801 = -pkin(1) * t904 - t1164;
t800 = -pkin(1) * t884 - t1165;
t797 = t1147 * t841 + t1150 * t825;
t796 = t1147 * t825 - t1150 * t841;
t795 = -pkin(1) * t882 - t1274;
t794 = -pkin(2) * t824 - t1202;
t793 = -qJ(2) * t904 - t1147 * t855 + t1150 * t822;
t789 = -qJ(2) * t884 - t1147 * t847 + t1150 * t815;
t788 = -pkin(1) * t941 + qJ(2) * t907 + t1147 * t822 + t1150 * t855;
t785 = -pkin(1) * t928 + qJ(2) * t885 + t1147 * t815 + t1150 * t847;
t784 = -qJ(3) * t824 + t1197 * t841;
t782 = -qJ(2) * t882 - t1147 * t810 + t1150 * t808;
t780 = -pkin(1) * t922 + qJ(2) * t883 + t1147 * t808 + t1150 * t810;
t779 = -pkin(2) * t845 - t1162;
t778 = -pkin(2) * t839 - t1163;
t776 = t1146 * t791 - t1149 * t798;
t775 = -pkin(2) * t826 - t1275;
t773 = -qJ(3) * t845 - t1146 * t805 + t1149 * t787;
t772 = -qJ(3) * t839 - t1146 * t804 + t1149 * t786;
t771 = -pkin(1) * t796 - t1277;
t769 = -pkin(1) * t813 - t1166;
t768 = t1147 * t790 + t1150 * t777;
t767 = t1147 * t777 - t1150 * t790;
t766 = -qJ(2) * t796 - t1147 * t794 + t1150 * t784;
t765 = -pkin(1) * t811 - t1167;
t764 = -qJ(3) * t826 - t1146 * t783 + t1149 * t781;
t763 = -pkin(1) * t824 + qJ(2) * t797 + t1147 * t784 + t1150 * t794;
t762 = -pkin(1) * t802 - t1168;
t761 = -qJ(2) * t813 - t1147 * t779 + t1150 * t773;
t760 = -qJ(2) * t811 - t1147 * t778 + t1150 * t772;
t759 = -pkin(1) * t845 + qJ(2) * t814 + t1147 * t773 + t1150 * t779;
t758 = -pkin(1) * t839 + qJ(2) * t812 + t1147 * t772 + t1150 * t778;
t757 = -pkin(2) * t776 - t1276;
t756 = -qJ(2) * t802 - t1147 * t775 + t1150 * t764;
t755 = -pkin(1) * t826 + qJ(2) * t803 + t1147 * t764 + t1150 * t775;
t754 = -qJ(3) * t776 - t1146 * t774 + t1149 * t770;
t753 = -pkin(1) * t767 - t1169;
t752 = -qJ(2) * t767 - t1147 * t757 + t1150 * t754;
t751 = -pkin(1) * t776 + qJ(2) * t768 + t1147 * t754 + t1150 * t757;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, qJDD(1), t1126, -t1125, 0, 0, t1136, t1128, 0, t1138, 0, 0, t1043, t1042, t981, t986, t1047, t996, t1010, t1046, t1007, t1138, t864, t865, t852, t809, t925, t888, t903, t924, t905, t938, t785, t788, t780, t763, t835, t806, t818, t834, t819, t853, t758, t759, t755, t751; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, -t1121, 0, -t1190, 0, t1201, t1105, -t1192, -pkin(5) * t1192, -t1083, -t1113 * t1152 + t1118 * t1154, t1074, t1083, t1186, 0, pkin(5) * t1185 - t1154 * t1067 + t1147 * t1235, -pkin(5) * t1075 - t1068 * t1154 + t1150 * t1235, -t1152 * t1004 - pkin(5) * (t1112 * t1154 - t1117 * t1152), -pkin(5) * (t1005 * t1154 - t1235) - (pkin(1) * t1154 + qJ(2) * t1152) * t1004, -t1058 * t1152 + t1078 * t1154, t1038 * t1154 - t1152 * t998, -t1014 * t1152 + t1052 * t1154, -t1057 * t1152 - t1077 * t1154, -t1011 * t1152 + t1049 * t1154, t1080 * t1154 + t1147 * t1215, -t1152 * t876 - t1154 * t919 - pkin(5) * (t1012 * t1154 + t1050 * t1152), -t1152 * t877 - t1154 * t918 - pkin(5) * (t1013 * t1154 + t1051 * t1152), -t1152 * t856 - t1154 * t867 - pkin(5) * (t1039 * t1152 + t1154 * t999), -t1152 * t823 - t1154 * t844 - pkin(5) * (t1152 * t914 + t1154 * t896), -t1152 * t927 + t1154 * t971, -t1152 * t889 + t1154 * t934, -t1152 * t906 + t1154 * t940, -t1152 * t926 + t1154 * t970, -t1152 * t908 + t1154 * t942, -t1152 * t939 + t1154 * t994, -t1152 * t789 - t1154 * t800 - pkin(5) * (t1152 * t928 + t1154 * t885), -t1152 * t793 - t1154 * t801 - pkin(5) * (t1152 * t941 + t1154 * t907), -t1152 * t782 - t1154 * t795 - pkin(5) * (t1152 * t922 + t1154 * t883), -t1152 * t766 - t1154 * t771 - pkin(5) * (t1152 * t824 + t1154 * t797), -t1152 * t837 + t1154 * t861, -t1152 * t807 + t1154 * t829, -t1152 * t820 + t1154 * t848, -t1152 * t836 + t1154 * t860, -t1152 * t821 + t1154 * t849, -t1152 * t854 + t1154 * t886, -t1152 * t760 - t1154 * t765 - pkin(5) * (t1152 * t839 + t1154 * t812), -t1152 * t761 - t1154 * t769 - pkin(5) * (t1152 * t845 + t1154 * t814), -t1152 * t756 - t1154 * t762 - pkin(5) * (t1152 * t826 + t1154 * t803), -t1152 * t752 - t1154 * t753 - pkin(5) * (t1152 * t776 + t1154 * t768); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, t1190, 0, -t1121, 0, -t1105, t1201, t1191, pkin(5) * t1191, t1084, t1113 * t1154 + t1118 * t1152, t1075, -t1084, t1185, 0, -pkin(5) * t1186 - t1152 * t1067 - t1147 * t1234, pkin(5) * t1074 - t1068 * t1152 - t1150 * t1234, t1154 * t1004 + pkin(5) * (-t1112 * t1152 - t1117 * t1154), pkin(5) * (-t1005 * t1152 - t1234) - (pkin(1) * t1152 - qJ(2) * t1154) * t1004, t1058 * t1154 + t1078 * t1152, t1038 * t1152 + t1154 * t998, t1014 * t1154 + t1052 * t1152, t1057 * t1154 - t1077 * t1152, t1011 * t1154 + t1049 * t1152, t1080 * t1152 - t1147 * t1214, t1154 * t876 - t1152 * t919 + pkin(5) * (-t1012 * t1152 + t1050 * t1154), t1154 * t877 - t1152 * t918 + pkin(5) * (-t1013 * t1152 + t1051 * t1154), t1154 * t856 - t1152 * t867 + pkin(5) * (t1039 * t1154 - t1152 * t999), t1154 * t823 - t1152 * t844 + pkin(5) * (-t1152 * t896 + t1154 * t914), t1152 * t971 + t1154 * t927, t1152 * t934 + t1154 * t889, t1152 * t940 + t1154 * t906, t1152 * t970 + t1154 * t926, t1152 * t942 + t1154 * t908, t1152 * t994 + t1154 * t939, t1154 * t789 - t1152 * t800 + pkin(5) * (-t1152 * t885 + t1154 * t928), t1154 * t793 - t1152 * t801 + pkin(5) * (-t1152 * t907 + t1154 * t941), t1154 * t782 - t1152 * t795 + pkin(5) * (-t1152 * t883 + t1154 * t922), t1154 * t766 - t1152 * t771 + pkin(5) * (-t1152 * t797 + t1154 * t824), t1152 * t861 + t1154 * t837, t1152 * t829 + t1154 * t807, t1152 * t848 + t1154 * t820, t1152 * t860 + t1154 * t836, t1152 * t849 + t1154 * t821, t1152 * t886 + t1154 * t854, t1154 * t760 - t1152 * t765 + pkin(5) * (-t1152 * t812 + t1154 * t839), t1154 * t761 - t1152 * t769 + pkin(5) * (-t1152 * t814 + t1154 * t845), t1154 * t756 - t1152 * t762 + pkin(5) * (-t1152 * t803 + t1154 * t826), t1154 * t752 - t1152 * t753 + pkin(5) * (-t1152 * t768 + t1154 * t776); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1155, 0, 0, -g(1), -t1126, 0, t1217, t1113, t1108, -t1217, t1111, 0, -t1147 * t1100, -t1150 * t1100, t1004, qJ(2) * t1004, t1058, t998, t1014, t1057, t1011, -t1217, t876, t877, t856, t823, t927, t889, t906, t926, t908, t939, t789, t793, t782, t766, t837, t807, t820, t836, t821, t854, t760, t761, t756, t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1155, 0, qJDD(1), 0, g(1), 0, t1125, 0, t1133, -t1118, -t1137, -t1133, -t1139, 0, t1067, t1068, 0, pkin(1) * t1004, -t1078, -t1038, -t1052, t1077, -t1049, -t1080, t919, t918, t867, t844, -t971, -t934, -t940, -t970, -t942, -t994, t800, t801, t795, t771, -t861, -t829, -t848, -t860, -t849, -t886, t765, t769, t762, t753; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1126, -t1125, 0, 0, t1136, t1128, 0, t1138, 0, 0, t1043, t1042, t981, t986, t1047, t996, t1010, t1046, t1007, t1138, t864, t865, t852, t809, t925, t888, t903, t924, t905, t938, t785, t788, t780, t763, t835, t806, t818, t834, t819, t853, t758, t759, t755, t751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1137, t1139, t1133, 0, t1140, 0, 0, -t1100, t1067, 0, t1079, t1040, t1056, t1076, t1053, 0, t979, t980, t899, -qJ(3) * t914, t973, t935, t943, t972, t945, t995, t815, t822, t808, t784, t863, t830, t850, t862, t851, t887, t772, t773, t764, t754; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1137, -t1249, t1139, -t1133, 0, t1100, 0, t1068, 0, -t1114, -t1104, -t1095, t1114, t1092, t1139, t948, t949, -pkin(2) * t1039, -pkin(2) * t914, -t1024, -t966, -t987, t1022, -t989, -t1015, t847, t855, t810, t794, -t911, -t868, -t878, -t910, -t879, -t936, t778, t779, t775, t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1133, t1118, t1137, t1133, t1139, 0, -t1067, -t1068, 0, 0, t1078, t1038, t1052, -t1077, t1049, t1080, t1180, t1179, t1173, t1200, t971, t934, t940, t970, t942, t994, t1165, t1164, t1274, t1277, t861, t829, t848, t860, t849, t886, t1167, t1166, t1168, t1169; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1216, t1093, t1102, -t1116, t1106, t1116, 0, t1027, t977, 0, t1025, t968, t990, t1023, t992, t1016, t900, t909, t828, -qJ(4) * t841, t913, t869, t880, t912, t881, t937, t786, t787, t781, t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1204, t1094, t1109, -t1218, -t1101, t1204, -t1027, 0, t978, 0, -t1250, -t1045, -t1037, t1250, -t1035, -t1218, t859, t866, -pkin(3) * t967, -pkin(3) * t841, -t953, -t890, -t930, t951, -t931, -t961, t804, t805, t783, t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1114, t1104, t1095, -t1114, -t1092, -t1139, -t977, -t978, 0, 0, t1024, t966, t987, -t1022, t989, t1015, t1182, t1181, t1175, t1202, t911, t868, t878, t910, t879, t936, t1163, t1162, t1275, t1276; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1091, t1034, t1283, t1206, t1069, -t1206, 0, t947, t897, 0, t954, t892, t932, t952, t933, t962, t838, t843, t792, -pkin(6) * t798; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1073, t1036, t1070, -t1278, t1029, -t1073, -t947, 0, t898, 0, -t1006, -t1002, -t959, t1006, t955, -t1086, t816, t817, -pkin(4) * t891, -pkin(4) * t798; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1250, t1045, t1037, -t1250, t1035, t1218, -t897, -t898, 0, 0, t953, t890, t930, -t951, t931, t961, t1183, t1184, t1177, t1203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1001, t956, t1280, t1020, t1018, -t1020, 0, t870, t832, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1021, t958, t1019, t1000, t984, -t1021, -t870, 0, t833, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1006, t1002, t959, -t1006, -t955, t1086, -t832, -t833, 0, 0;];
m_new_reg = t1;
