% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d5,theta2,theta3,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:32
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPPR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPPR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPPR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPPPR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:31:40
% EndTime: 2019-12-05 17:31:45
% DurationCPUTime: 2.23s
% Computational Cost: add. (3350->235), mult. (7909->394), div. (0->0), fcn. (8655->8), ass. (0->208)
t186 = sin(pkin(9));
t189 = cos(pkin(9));
t191 = cos(pkin(7));
t281 = t191 * t189;
t188 = sin(pkin(7));
t190 = cos(pkin(8));
t284 = t190 * t188;
t151 = t186 * t284 + t281;
t149 = t151 ^ 2;
t308 = t186 / 0.2e1;
t307 = -t189 / 0.2e1;
t192 = sin(qJ(5));
t306 = -t192 / 0.2e1;
t193 = cos(qJ(5));
t305 = -t193 / 0.2e1;
t187 = sin(pkin(8));
t275 = t193 * t191;
t155 = t186 * t188 + t190 * t281;
t280 = t192 * t155;
t110 = t187 * t275 - t280;
t277 = t193 * t155;
t278 = t192 * t191;
t111 = t187 * t278 + t277;
t282 = t191 * t186;
t286 = t189 * t188;
t150 = t190 * t282 - t286;
t153 = t189 * t284 - t282;
t214 = -qJ(3) * t188 - pkin(1);
t195 = -t190 * t214 + (pkin(2) * t190 + qJ(2) * t187 + pkin(3)) * t191;
t194 = t151 * pkin(4) - t153 * pkin(6) + t195;
t290 = t187 * t188;
t208 = -pkin(2) * t191 + t214;
t283 = t191 * qJ(2);
t131 = t187 * t208 + t190 * t283;
t115 = -qJ(4) * t191 + t131;
t144 = (pkin(3) * t187 - qJ(4) * t190 + qJ(2)) * t188;
t68 = t189 * t115 + t186 * t144;
t65 = pkin(6) * t290 + t68;
t31 = t192 * t65 - t193 * t194;
t32 = t192 * t194 + t193 * t65;
t67 = -t115 * t186 + t144 * t189;
t64 = -pkin(4) * t290 - t67;
t5 = -t110 * t31 + t111 * t32 + t150 * t64;
t304 = t5 * qJD(1);
t6 = t64 * t153 + (-t192 * t31 - t193 * t32) * t151;
t303 = t6 * qJD(1);
t276 = t193 * t190;
t288 = t187 * t192;
t156 = t189 * t288 + t276;
t132 = t156 * t188;
t279 = t192 * t190;
t287 = t187 * t193;
t157 = t189 * t287 - t279;
t133 = t157 * t188;
t232 = t186 * t290;
t7 = -t132 * t31 - t133 * t32 - t232 * t64;
t302 = t7 * qJD(1);
t112 = t153 * t192 - t188 * t287;
t12 = -t112 * t64 + t151 * t31;
t301 = t12 * qJD(1);
t114 = t153 * t193 + t188 * t288;
t13 = t114 * t64 - t151 * t32;
t300 = t13 * qJD(1);
t299 = t155 * t186;
t298 = t156 * t151;
t297 = t157 * t151;
t181 = t186 ^ 2;
t224 = t150 * t307;
t197 = (t111 * t193 / 0.2e1 + t110 * t306) * t186 + t224;
t206 = -t132 * t156 / 0.2e1 - t133 * t157 / 0.2e1;
t182 = t187 ^ 2;
t293 = t182 * t188;
t16 = t181 * t293 / 0.2e1 + t197 - t206;
t296 = t16 * qJD(1);
t289 = t187 * t191;
t18 = -t67 * t150 + t68 * t155 + t195 * t289;
t295 = t18 * qJD(1);
t183 = t188 ^ 2;
t294 = t182 * t183;
t292 = t186 * t151;
t291 = t186 * t187;
t231 = t187 * t286;
t19 = -t195 * t284 + t231 * t68 - t232 * t67;
t285 = t19 * qJD(1);
t220 = t291 / 0.2e1;
t196 = (t156 * t306 + t157 * t305) * t151 + t153 * t220;
t207 = t110 * t305 + t111 * t306;
t21 = t196 + t207;
t274 = t21 * qJD(1);
t26 = -t151 * t68 - t153 * t67;
t273 = t26 * qJD(1);
t33 = -t110 * t114 - t111 * t112;
t272 = t33 * qJD(1);
t223 = t153 * t307;
t198 = (-t193 ^ 2 / 0.2e1 - t192 ^ 2 / 0.2e1) * t292 + t223;
t205 = t132 * t305 - t133 * t306;
t35 = t198 + t205;
t271 = t35 * qJD(1);
t36 = t112 * t133 - t114 * t132;
t270 = t36 * qJD(1);
t215 = t275 / 0.2e1;
t218 = -t280 / 0.2e1;
t37 = t218 + t297 / 0.2e1 + (t215 - t186 * t114 / 0.2e1) * t187;
t269 = t37 * qJD(1);
t216 = -t277 / 0.2e1;
t217 = -t278 / 0.2e1;
t38 = t216 - t298 / 0.2e1 + (t112 * t308 + t217) * t187;
t268 = t38 * qJD(1);
t41 = (t112 * t193 - t114 * t192) * t151;
t267 = t41 * qJD(1);
t42 = t110 * t151 + t112 * t150;
t266 = t42 * qJD(1);
t43 = -t111 * t151 + t114 * t150;
t265 = t43 * qJD(1);
t44 = t112 ^ 2 - t114 ^ 2;
t264 = t44 * qJD(1);
t45 = -t112 * t153 - t149 * t192;
t263 = t45 * qJD(1);
t219 = t187 * t189 / 0.2e1;
t200 = (t192 * t219 + t276 / 0.2e1) * t188;
t221 = -t292 / 0.2e1;
t202 = t114 * t307 + t193 * t221;
t46 = t200 - t202;
t262 = t46 * qJD(1);
t199 = (t193 * t219 - t279 / 0.2e1) * t188;
t201 = t112 * t307 + t192 * t221;
t47 = t199 + t201;
t261 = t47 * qJD(1);
t50 = -t112 * t232 + t132 * t151;
t260 = t50 * qJD(1);
t51 = -t114 * t232 + t133 * t151;
t259 = t51 * qJD(1);
t222 = -t293 / 0.2e1;
t164 = t181 * t222;
t184 = t190 ^ 2;
t175 = -t184 * t188 / 0.2e1;
t246 = t164 + t175;
t55 = -t299 / 0.2e1 + (t150 / 0.2e1 + t189 * t222) * t189 + t246;
t258 = t55 * qJD(1);
t57 = t150 * t153 - t151 * t155;
t257 = t57 * qJD(1);
t59 = t114 * t153 + t149 * t193;
t256 = t59 * qJD(1);
t130 = -t187 * t283 + t190 * t208;
t63 = t183 * qJ(2) + (-t130 * t187 + t131 * t190) * t191;
t255 = t63 * qJD(1);
t66 = (t130 * t190 + t131 * t187) * t188;
t254 = t66 * qJD(1);
t203 = t151 * t307 + t153 * t308;
t70 = (-t191 / 0.2e1 + t203) * t187;
t253 = t70 * qJD(1);
t71 = -t151 * t231 + t153 * t232;
t252 = t71 * qJD(1);
t204 = t223 + t221;
t73 = -t284 / 0.2e1 + t204;
t251 = t73 * qJD(1);
t79 = (-t150 * t188 + t151 * t191) * t187;
t250 = t79 * qJD(1);
t80 = -t153 * t289 + t155 * t290;
t249 = t80 * qJD(1);
t84 = t192 * t151;
t248 = t84 * qJD(1);
t97 = t153 ^ 2 + t149;
t247 = t97 * qJD(1);
t172 = t191 ^ 2 + t183;
t245 = qJD(1) * t151;
t244 = qJD(1) * t188;
t243 = qJD(5) * t192;
t242 = qJD(5) * t193;
t107 = t151 * t284 + t186 * t294;
t241 = t107 * qJD(1);
t108 = t153 * t284 + t189 * t294;
t240 = t108 * qJD(1);
t239 = t114 * qJD(5);
t147 = (0.1e1 / 0.2e1 + t182 / 0.2e1 + t184 / 0.2e1) * t188;
t238 = t147 * qJD(1);
t159 = (t182 + t184) * t183;
t237 = t159 * qJD(1);
t160 = t172 * t187;
t236 = t160 * qJD(1);
t161 = t172 * t190;
t235 = t161 * qJD(1);
t170 = t172 * qJ(2);
t234 = t170 * qJD(1);
t233 = t172 * qJD(1);
t230 = t187 * t244;
t229 = t191 * t244;
t228 = qJD(3) * t188 * t191;
t227 = qJD(4) * t290;
t226 = t114 * t112 * qJD(1);
t225 = t112 * t239;
t213 = -qJD(5) - t245;
t212 = t153 * t230;
t211 = t151 * t230;
t210 = t187 * t229;
t209 = t190 * t229;
t148 = t222 + t175 + t188 / 0.2e1;
t72 = t284 / 0.2e1 + t204;
t69 = t289 / 0.2e1 + t203 * t187;
t54 = t189 ^ 2 * t222 + t299 / 0.2e1 + t224 + t246;
t49 = t200 + t202;
t48 = t199 - t201;
t40 = -t297 / 0.2e1 + t114 * t220 + t218 + t187 * t215;
t39 = t298 / 0.2e1 - t112 * t291 / 0.2e1 + t216 + t187 * t217;
t34 = t198 - t205;
t20 = t196 - t207;
t17 = t164 + t197 + t206;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172 * qJD(2), t170 * qJD(2), 0, 0, 0, 0, 0, 0, qJD(2) * t160 + t190 * t228, qJD(2) * t161 - t187 * t228, t159 * qJD(3), qJD(2) * t63 - qJD(3) * t66, 0, 0, 0, 0, 0, 0, qJD(2) * t79 + qJD(3) * t107 - t153 * t227, -qJD(2) * t80 + qJD(3) * t108 + t151 * t227, qJD(2) * t57 - qJD(3) * t71 + qJD(4) * t97, qJD(2) * t18 - qJD(3) * t19 + qJD(4) * t26, -t225, t44 * qJD(5), -t112 * t151 * qJD(5), t225, -t151 * t239, 0, qJD(2) * t42 + qJD(3) * t50 - qJD(4) * t45 + qJD(5) * t13, qJD(2) * t43 + qJD(3) * t51 + qJD(4) * t59 + qJD(5) * t12, qJD(2) * t33 + qJD(3) * t36 + qJD(4) * t41, qJD(2) * t5 + qJD(3) * t7 + qJD(4) * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t233, t234, 0, 0, 0, 0, 0, 0, t236, t235, 0, qJD(3) * t148 + t255, 0, 0, 0, 0, 0, 0, t250, -t249, t257, t295 + t54 * qJD(3) + t69 * qJD(4) + (t150 * t186 + t155 * t189 - t190 * t191) * qJD(2) * t187, 0, 0, 0, 0, 0, 0, qJD(5) * t40 + t266, qJD(5) * t39 + t265, t272, t304 + (-t110 * t156 + t111 * t157 + t150 * t291) * qJD(2) + t17 * qJD(3) + t20 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, -t210, t237, qJD(2) * t148 - t254, 0, 0, 0, 0, 0, 0, t241, t240, -t252, qJD(2) * t54 + qJD(4) * t72 - t285, 0, 0, 0, 0, 0, 0, qJD(5) * t49 + t260, qJD(5) * t48 + t259, t270, t302 + t17 * qJD(2) + t34 * qJD(4) + (-t132 * t192 - t133 * t193 + t231) * qJD(3) * t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t212, t211, t247, qJD(2) * t69 + qJD(3) * t72 + t273, 0, 0, 0, 0, 0, 0, -t263, t256, t267, qJD(2) * t20 + qJD(3) * t34 + t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t226, t264, t213 * t112, t226, t213 * t114, 0, qJD(2) * t40 + qJD(3) * t49 - qJD(5) * t32 + t300, qJD(2) * t39 + qJD(3) * t48 + qJD(5) * t31 + t301, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t233, -t234, 0, 0, 0, 0, 0, 0, -t236, -t235, 0, -qJD(3) * t147 - t255, 0, 0, 0, 0, 0, 0, -t250, t249, -t257, qJD(3) * t55 + qJD(4) * t70 - t295, 0, 0, 0, 0, 0, 0, -qJD(5) * t37 - t266, -qJD(5) * t38 - t265, -t272, -qJD(3) * t16 + qJD(4) * t21 - t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t238, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t253, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t157 - t269, qJD(5) * t156 - t268, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209, t210, -t237, qJD(2) * t147 + t254, 0, 0, 0, 0, 0, 0, -t241, -t240, t252, -qJD(2) * t55 + qJD(4) * t73 + t285, 0, 0, 0, 0, 0, 0, -qJD(5) * t46 - t260, -qJD(5) * t47 - t259, -t270, qJD(2) * t16 + qJD(4) * t35 - t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t258, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186 * t242 - t262, t186 * t243 - t261, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212, -t211, -t247, -qJD(2) * t70 - qJD(3) * t73 - t273, 0, 0, 0, 0, 0, 0, -qJD(5) * t84 + t263, -t151 * t242 - t256, -t267, -qJD(2) * t21 - qJD(3) * t35 - t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t253, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243 - t248, t213 * t193, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t226, -t264, t112 * t245, -t226, t114 * t245, 0, qJD(2) * t37 + qJD(3) * t46 + qJD(4) * t84 - t300, qJD(4) * t151 * t193 + qJD(2) * t38 + qJD(3) * t47 - t301, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269, t268, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262, t261, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248, t193 * t245, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
