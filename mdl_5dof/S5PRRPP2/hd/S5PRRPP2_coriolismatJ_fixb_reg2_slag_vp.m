% Calculate inertial parameters regressor of coriolis matrix for
% S5PRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,theta1,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:10
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRRPP2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRPP2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRPP2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRPP2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:10:15
% EndTime: 2019-12-05 16:10:21
% DurationCPUTime: 2.12s
% Computational Cost: add. (1504->174), mult. (3647->249), div. (0->0), fcn. (3913->6), ass. (0->151)
t140 = sin(pkin(8));
t141 = sin(qJ(3));
t143 = cos(qJ(3));
t221 = cos(pkin(8));
t151 = -t140 * t141 + t221 * t143;
t106 = t151 ^ 2;
t212 = t140 * t143;
t111 = t221 * t141 + t212;
t235 = t111 ^ 2;
t38 = t235 - t106;
t258 = t38 * qJD(2);
t257 = t38 * qJD(3);
t256 = t111 / 0.2e1;
t144 = cos(qJ(2));
t255 = t151 * t144;
t142 = sin(qJ(2));
t231 = t142 / 0.2e1;
t87 = t111 * t142;
t89 = t151 * t142;
t237 = t89 * t151 / 0.2e1 + t87 * t256;
t154 = t231 + t237;
t132 = t142 * t144;
t88 = t144 * t111;
t153 = t255 * t89 + t87 * t88 - t132;
t240 = t153 * qJD(1);
t254 = t154 * qJD(4) + t240;
t148 = t231 - t237;
t253 = -qJD(4) * t148 - t240;
t248 = t106 + t235;
t252 = qJD(4) * t248;
t251 = t248 * qJD(2);
t250 = t140 / 0.2e1;
t249 = -qJ(4) - pkin(6);
t124 = t249 * t143;
t114 = t221 * t124;
t123 = t249 * t141;
t214 = t140 * t123;
t247 = -t114 + t214;
t246 = qJD(2) * t153;
t76 = -t221 * t123 - t124 * t140;
t162 = t111 * t76 + t151 * t247;
t243 = qJD(4) * t162;
t241 = t148 * qJD(2);
t239 = t154 * qJD(2);
t236 = -qJD(1) * t148 + qJD(2) * t162;
t165 = -t114 / 0.2e1;
t129 = pkin(3) * t140 + qJ(5);
t233 = -t129 / 0.2e1;
t131 = -t221 * pkin(3) - pkin(4);
t232 = -t131 / 0.2e1;
t230 = t111 * pkin(4);
t229 = t141 * pkin(3);
t174 = t88 / 0.2e1;
t170 = t144 * t221;
t167 = -t170 / 0.2e1;
t181 = t144 * t212;
t195 = -t181 / 0.2e1 + t141 * t167;
t49 = t174 + t195;
t202 = t49 * qJD(1);
t228 = -qJD(3) * t247 - t202;
t227 = qJD(3) * pkin(3);
t222 = -t111 * qJD(4) + t202;
t133 = -pkin(3) * t143 - pkin(2);
t56 = -pkin(4) * t151 - qJ(5) * t111 + t133;
t215 = t151 * qJ(5);
t57 = -t215 + t229 + t230;
t13 = t111 * t56 - t151 * t57;
t220 = qJD(2) * t13;
t46 = t111 * t133 - t151 * t229;
t219 = qJD(2) * t46;
t218 = qJD(3) * t76;
t217 = qJD(3) * t87;
t216 = qJD(3) * t89;
t210 = t144 * t141;
t134 = t229 / 0.2e1;
t19 = t134 + (pkin(4) / 0.2e1 + t232) * t111 - (qJ(5) / 0.2e1 + t129 / 0.2e1) * t151;
t207 = t19 * qJD(2);
t180 = -t221 / 0.2e1;
t147 = t111 * t180 + t151 * t250;
t37 = (-t141 / 0.2e1 + t147) * pkin(3);
t206 = t37 * qJD(2);
t175 = -t88 / 0.2e1;
t166 = t170 / 0.2e1;
t196 = t181 / 0.2e1 + t141 * t166;
t48 = t175 + t196;
t203 = t48 * qJD(1);
t138 = t141 ^ 2;
t139 = t143 ^ 2;
t168 = (t138 + t139) * t144;
t82 = t142 * t168 - t132;
t199 = t82 * qJD(1);
t172 = t210 / 0.2e1;
t198 = t140 * t172 + t143 * t167;
t173 = -t210 / 0.2e1;
t197 = t140 * t173 + t143 * t166;
t194 = qJD(2) * t143;
t193 = qJD(4) * t151;
t192 = qJD(5) * t111;
t191 = t235 * qJD(2);
t190 = t151 * qJD(2);
t98 = t151 * qJD(3);
t189 = t111 * qJD(2);
t100 = t111 * qJD(3);
t127 = t139 - t138;
t188 = t127 * qJD(2);
t187 = t141 * qJD(3);
t186 = t142 * qJD(2);
t185 = t143 * qJD(3);
t184 = t144 * qJD(2);
t183 = pkin(2) * t141 * qJD(2);
t182 = pkin(2) * t194;
t179 = t111 * t186;
t72 = t151 * t189;
t71 = t151 * t100;
t178 = t141 * t185;
t177 = t255 / 0.2e1;
t176 = -t255 / 0.2e1;
t171 = t247 * t255 + t76 * t88;
t145 = -t144 * t57 / 0.2e1;
t152 = t88 * t232 + t233 * t255;
t2 = t145 + t152;
t5 = t56 * t57;
t163 = t2 * qJD(1) + t5 * qJD(2);
t161 = (t111 * t88 + t151 * t255) * qJD(2);
t12 = t133 * t229;
t150 = t88 * t180 + t250 * t255;
t3 = (t172 + t150) * pkin(3);
t160 = -t3 * qJD(1) + t12 * qJD(2);
t14 = -t111 * t57 - t151 * t56;
t50 = t176 + t197;
t159 = -qJD(1) * t50 + qJD(2) * t14;
t47 = t111 * t229 + t133 * t151;
t51 = t177 + t198;
t156 = -qJD(1) * t51 + qJD(2) * t47;
t73 = t165 + t114 / 0.2e1;
t155 = qJD(2) * t73 + qJD(3) * t129;
t128 = t141 * t194;
t55 = t174 + t196;
t54 = t175 + t195;
t53 = t176 + t198;
t52 = t177 + t197;
t44 = t49 * qJD(3);
t42 = t49 * qJD(2);
t40 = 0.2e1 * t165 + t214;
t36 = t147 * pkin(3) + t134;
t28 = qJD(3) * t54 - t151 * t186;
t27 = qJD(2) * t54 - t216;
t20 = -t151 * t233 + t131 * t256 + t134 - t215 / 0.2e1 + t230 / 0.2e1;
t4 = (t150 + t173) * pkin(3);
t1 = t145 - t152;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t186, -t184, 0, 0, 0, 0, 0, 0, 0, 0, -t143 * t186 - t144 * t187, t141 * t186 - t144 * t185, qJD(2) * t168, t199 + (-t142 * pkin(2) + pkin(6) * t168) * qJD(2), 0, 0, 0, 0, 0, 0, t28, qJD(3) * t53 + t179, t161, (t133 * t142 + t171) * qJD(2) + t4 * qJD(3) + t254, 0, 0, 0, 0, 0, 0, t28, t161, qJD(3) * t52 - t179, (t142 * t56 + t171) * qJD(2) + t1 * qJD(3) + t55 * qJD(5) + t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t141 * t184 - t142 * t185, t142 * t187 - t143 * t184, 0, 0, 0, 0, 0, 0, 0, 0, t27, qJD(2) * t53 + t217, 0, t4 * qJD(2) + (-t140 * t87 - t221 * t89) * t227, 0, 0, 0, 0, 0, 0, t27, 0, qJD(2) * t52 - t217, t1 * qJD(2) + (-t129 * t87 + t131 * t89) * qJD(3) + t89 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t55 + t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199, 0, 0, 0, 0, 0, 0, -t44, -t51 * qJD(3), 0, -qJD(3) * t3 + t253, 0, 0, 0, 0, 0, 0, -t44, 0, -t50 * qJD(3), qJD(3) * t2 - qJD(5) * t48 + t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, t127 * qJD(3), 0, -t178, 0, 0, -pkin(2) * t187, -pkin(2) * t185, 0, 0, t71, -t257, 0, -t71, 0, 0, t46 * qJD(3), t47 * qJD(3), t252, qJD(3) * t12 + t243, t71, 0, t257, 0, 0, -t71, qJD(3) * t13 + t151 * t192, t252, qJD(3) * t14 + qJD(5) * t235, qJD(3) * t5 - t56 * t192 + t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, t188, t185, -t128, -t187, 0, -pkin(6) * t185 - t183, pkin(6) * t187 - t182, 0, 0, t72, -t258, t98, -t72, -t100, 0, t219 + t228, t156 + t218, (-t111 * t140 - t151 * t221) * t227, (-t140 * t76 - t221 * t247) * t227 + t36 * qJD(4) + t160, t72, t98, t258, 0, t100, -t72, t220 + t228, (-t111 * t129 + t131 * t151) * qJD(3) + qJD(5) * t151, t159 - t218, (-t129 * t76 + t131 * t247) * qJD(3) + t20 * qJD(4) + t40 * qJD(5) + t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, qJD(3) * t36 + t236, 0, 0, 0, 0, 0, 0, 0, t251, 0, qJD(3) * t20 + t236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, t98, t191, qJD(3) * t40 - t56 * t189 - t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, t51 * qJD(2), 0, qJD(2) * t3, 0, 0, 0, 0, 0, 0, t42, 0, t50 * qJD(2), -qJD(2) * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t128, -t188, 0, t128, 0, 0, t183, t182, 0, 0, -t72, t258, 0, t72, 0, 0, -t219 + t222, -t156 - t193, 0, qJD(4) * t37 - t160, -t72, 0, -t258, 0, 0, t72, -t220 + t222, 0, -t159 + t193, -qJD(4) * t19 + qJD(5) * t73 - t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t129 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, -t190, 0, t206, 0, 0, 0, 0, 0, 0, -t189, 0, t190, -t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, t98, -t251, -qJD(3) * t37 - t236, 0, 0, 0, 0, 0, 0, t100, -t251, -t98, qJD(3) * t19 - t192 - t236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t190, 0, -t206, 0, 0, 0, 0, 0, 0, t189, 0, -t190, t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t72, 0, -t191, t203 - t73 * qJD(3) + (qJD(2) * t56 + qJD(4)) * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t6;
