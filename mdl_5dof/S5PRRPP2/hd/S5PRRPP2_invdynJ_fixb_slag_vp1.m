% Calculate vector of inverse dynamics joint torques for
% S5PRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,theta1,theta4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:10
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5PRRPP2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRPP2_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRPP2_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRPP2_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRPP2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRPP2_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5PRRPP2_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5PRRPP2_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5PRRPP2_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:08:44
% EndTime: 2019-12-05 16:10:07
% DurationCPUTime: 66.71s
% Computational Cost: add. (20234->922), mult. (35627->1238), div. (0->0), fcn. (34183->8), ass. (0->417)
t840 = Icges(6,4) + Icges(5,5);
t839 = Icges(5,6) - Icges(6,6);
t861 = Icges(5,4) - Icges(6,5);
t872 = Icges(6,2) + Icges(5,3);
t870 = Icges(4,3) + t872;
t862 = Icges(5,1) + Icges(6,1);
t433 = qJ(3) + pkin(8);
t423 = sin(t433);
t424 = cos(t433);
t874 = t839 * t423 - t840 * t424;
t873 = t861 * t423;
t818 = Icges(5,2) + Icges(6,3);
t871 = t862 * t424 - t873;
t438 = sin(qJ(2));
t440 = cos(qJ(2));
t437 = sin(qJ(3));
t439 = cos(qJ(3));
t540 = Icges(4,5) * t439 - Icges(4,6) * t437;
t869 = (-t540 + t874) * t440 - t870 * t438;
t868 = (-Icges(4,5) * t437 - Icges(4,6) * t439 - t840 * t423 - t839 * t424) * t438;
t703 = Icges(5,4) * t424;
t544 = -Icges(5,2) * t423 + t703;
t867 = t438 * t544 - t839 * t440;
t435 = cos(pkin(7));
t434 = sin(pkin(7));
t678 = t434 * t440;
t308 = -t435 * t423 + t424 * t678;
t866 = t861 * t308;
t675 = t435 * t440;
t310 = t423 * t434 + t424 * t675;
t865 = t861 * t310;
t307 = t423 * t678 + t424 * t435;
t864 = t861 * t307;
t309 = t423 * t675 - t434 * t424;
t863 = t861 * t309;
t320 = -Icges(4,3) * t440 + t438 * t540;
t856 = t874 * t438 + t872 * t440;
t813 = -t320 + t856;
t680 = t434 * t438;
t836 = t818 * t307 - t839 * t680 - t866;
t676 = t435 * t438;
t835 = t818 * t309 - t839 * t676 - t865;
t851 = t862 * t308 + t840 * t680 - t864;
t850 = t862 * t310 + t840 * t676 - t863;
t683 = t424 * t438;
t391 = Icges(6,5) * t683;
t685 = t423 * t438;
t847 = Icges(6,3) * t685 + t391 - t867;
t696 = Icges(6,5) * t424;
t538 = Icges(6,3) * t423 + t696;
t800 = (-t538 + t544) * t440 + t839 * t438;
t816 = t871 * t438 - t840 * t440;
t799 = -t840 * t438 - t871 * t440;
t860 = (-t818 * t424 - t873) * t438;
t634 = qJD(3) * t440;
t593 = t434 * t634;
t637 = qJD(2) * t438;
t600 = t434 * t637;
t222 = -t424 * t593 + (qJD(3) * t435 + t600) * t423;
t223 = -qJD(3) * t307 - t424 * t600;
t672 = t439 * t440;
t677 = t435 * t437;
t357 = t434 * t672 - t677;
t596 = t437 * t637;
t246 = -qJD(3) * t357 + t434 * t596;
t673 = t437 * t440;
t356 = -t434 * t673 - t435 * t439;
t595 = t439 * t637;
t247 = qJD(3) * t356 - t434 * t595;
t636 = qJD(2) * t440;
t599 = t434 * t636;
t859 = Icges(4,5) * t247 + Icges(4,6) * t246 + t839 * t222 + t840 * t223 + t870 * t599;
t598 = t435 * t637;
t224 = -qJD(3) * t310 + t423 * t598;
t225 = -qJD(3) * t309 - t424 * t598;
t681 = t434 * t437;
t359 = t435 * t672 + t681;
t248 = -qJD(3) * t359 + t435 * t596;
t358 = t434 * t439 - t435 * t673;
t249 = qJD(3) * t358 - t435 * t595;
t597 = t435 * t636;
t858 = Icges(4,5) * t249 + Icges(4,6) * t248 + t839 * t224 + t840 * t225 + t870 * t597;
t825 = Icges(4,5) * t357 + Icges(4,6) * t356 - t839 * t307 + t840 * t308 + t870 * t680;
t824 = Icges(4,5) * t359 + Icges(4,6) * t358 - t839 * t309 + t840 * t310 + t870 * t676;
t857 = t869 * qJD(2) - t868 * qJD(3);
t855 = -t818 * t222 - t861 * t223 - t839 * t599;
t854 = -t818 * t224 - t861 * t225 - t839 * t597;
t853 = t861 * t222 + t862 * t223 + t840 * t599;
t852 = t861 * t224 + t862 * t225 + t840 * t597;
t849 = t800 * qJD(2) + t860 * qJD(3);
t331 = (-Icges(5,1) * t423 - t703) * t438;
t635 = qJD(3) * t438;
t848 = -(-Icges(6,1) * t423 + t696) * t635 - qJD(3) * t331 + t799 * qJD(2);
t846 = t847 * t423 + t816 * t424;
t845 = t857 * t438 + t813 * t636;
t844 = t858 * t438 + t824 * t636;
t843 = t859 * t438 + t825 * t636;
t709 = Icges(4,4) * t359;
t196 = Icges(4,2) * t358 + Icges(4,6) * t676 + t709;
t353 = Icges(4,4) * t358;
t198 = Icges(4,1) * t359 + Icges(4,5) * t676 + t353;
t842 = -t196 * t437 + t198 * t439 + t835 * t423 + t850 * t424;
t710 = Icges(4,4) * t357;
t195 = Icges(4,2) * t356 + Icges(4,6) * t680 + t710;
t352 = Icges(4,4) * t356;
t197 = Icges(4,1) * t357 + Icges(4,5) * t680 + t352;
t841 = -t195 * t437 + t197 * t439 + t836 * t423 + t851 * t424;
t838 = t856 * t440;
t707 = Icges(4,4) * t439;
t545 = -Icges(4,2) * t437 + t707;
t322 = -Icges(4,6) * t440 + t438 * t545;
t708 = Icges(4,4) * t437;
t550 = Icges(4,1) * t439 - t708;
t324 = -Icges(4,5) * t440 + t438 * t550;
t522 = -t322 * t437 + t324 * t439;
t837 = -t522 - t846;
t808 = t846 * t438 + t838;
t832 = -t438 * t538 + t867;
t123 = Icges(4,4) * t247 + Icges(4,2) * t246 + Icges(4,6) * t599;
t125 = Icges(4,1) * t247 + Icges(4,4) * t246 + Icges(4,5) * t599;
t791 = t123 * t356 + t125 * t357 + t195 * t246 + t197 * t247 - t836 * t222 + t851 * t223 + t855 * t307 + t853 * t308 + t843 * t434;
t124 = Icges(4,4) * t249 + Icges(4,2) * t248 + Icges(4,6) * t597;
t126 = Icges(4,1) * t249 + Icges(4,4) * t248 + Icges(4,5) * t597;
t790 = t124 * t356 + t126 * t357 + t196 * t246 + t198 * t247 - t835 * t222 + t850 * t223 + t854 * t307 + t852 * t308 + t844 * t434;
t789 = t123 * t358 + t125 * t359 + t195 * t248 + t197 * t249 - t836 * t224 + t851 * t225 + t855 * t309 + t853 * t310 + t843 * t435;
t788 = t124 * t358 + t126 * t359 + t196 * t248 + t198 * t249 - t835 * t224 + t850 * t225 + t854 * t309 + t852 * t310 + t844 * t435;
t323 = Icges(4,6) * t438 + t440 * t545;
t371 = (-Icges(4,2) * t439 - t708) * t438;
t205 = qJD(2) * t323 + qJD(3) * t371;
t325 = Icges(4,5) * t438 + t440 * t550;
t372 = (-Icges(4,1) * t437 - t707) * t438;
t206 = qJD(2) * t325 + qJD(3) * t372;
t831 = -t205 * t356 - t206 * t357 + t847 * t222 - t816 * t223 - t246 * t322 - t247 * t324 + t849 * t307 + t848 * t308 + t845 * t434;
t830 = -t205 * t358 - t206 * t359 + t847 * t224 - t816 * t225 - t248 * t322 - t249 * t324 + t849 * t309 + t848 * t310 + t845 * t435;
t814 = t195 * t356 + t197 * t357 + t836 * t307 + t851 * t308 + t825 * t680;
t829 = t196 * t356 + t198 * t357 + t835 * t307 + t850 * t308 + t824 * t680;
t828 = t195 * t358 + t197 * t359 + t836 * t309 + t851 * t310 + t825 * t676;
t785 = t196 * t358 + t198 * t359 + t835 * t309 + t850 * t310 + t824 * t676;
t784 = t841 * t438 - t825 * t440;
t783 = t842 * t438 - t824 * t440;
t827 = t847 * t307 + t816 * t308 + t322 * t356 + t324 * t357 - t813 * t680;
t826 = t847 * t309 + t816 * t310 + t322 * t358 + t324 * t359 - t813 * t676;
t823 = t837 - t869;
t592 = t435 * t635;
t639 = qJD(2) * t434;
t374 = t592 + t639;
t594 = t434 * t635;
t638 = qJD(2) * t435;
t375 = t594 - t638;
t822 = (t813 * t434 - t841) * t375 + (t813 * t435 - t842) * t374;
t431 = t434 ^ 2;
t432 = t435 ^ 2;
t809 = rSges(6,1) + pkin(4);
t805 = rSges(6,3) + qJ(5);
t387 = rSges(3,1) * t438 + rSges(3,2) * t440;
t798 = t431 + t432;
t821 = t387 * t798;
t820 = t434 * t435;
t815 = (t374 * t829 + t375 * t814 - t634 * t827) * t434 + (t374 * t785 + t375 * t828 - t634 * t826) * t435;
t812 = t868 * t634 + (-Icges(4,5) * t356 + Icges(4,6) * t357 + t307 * t840 + t839 * t308) * t375 + (-Icges(4,5) * t358 + Icges(4,6) * t359 + t309 * t840 + t839 * t310) * t374;
t811 = 0.2e1 * qJD(2);
t810 = 2 * qJDD(2);
t425 = qJD(4) * t438;
t406 = t434 * t425;
t396 = pkin(2) * t438 - pkin(6) * t440;
t604 = t396 * t639;
t569 = t406 - t604;
t565 = rSges(6,1) * t424 + rSges(6,3) * t423;
t797 = (pkin(4) * t424 + qJ(5) * t423 + t565) * t438;
t654 = -rSges(6,2) * t440 + t797;
t422 = pkin(3) * t439 + pkin(2);
t731 = pkin(2) - t422;
t586 = t731 * t438;
t436 = -qJ(4) - pkin(6);
t730 = pkin(6) + t436;
t795 = -t440 * t730 + t586;
t606 = t795 - t654;
t478 = -t438 * t730 - t440 * t731;
t200 = pkin(3) * t681 + t435 * t478;
t665 = rSges(6,2) * t676 + t309 * t805 + t310 * t809;
t610 = -t200 - t665;
t632 = qJD(5) * t307;
t48 = t374 * t606 + t610 * t634 + t569 + t632;
t807 = t48 * t374;
t199 = -pkin(3) * t677 + t434 * t478;
t167 = t199 * t634;
t408 = t435 * t425;
t603 = t396 * t638;
t489 = -t375 * t795 + t167 + t408 - t603;
t631 = qJD(5) * t309;
t667 = rSges(6,2) * t680 + t307 * t805 + t308 * t809;
t49 = t375 * t654 + t634 * t667 + t489 + t631;
t806 = t49 * t375;
t804 = t832 * t434;
t803 = t832 * t435;
t802 = t816 * t434;
t801 = t816 * t435;
t627 = qJD(2) * qJD(4);
t796 = qJDD(4) * t438 + t440 * t627;
t628 = qJD(2) * qJD(3);
t490 = qJDD(3) * t438 + t440 * t628;
t626 = qJDD(2) * t434;
t280 = t435 * t490 + t626;
t625 = qJDD(2) * t435;
t281 = t434 * t490 - t625;
t382 = -qJDD(3) * t440 + t438 * t628;
t793 = t280 * t829 + t281 * t814 + t374 * t790 + t375 * t791 + t382 * t827 + t634 * t831;
t792 = t280 * t785 + t281 * t828 + t374 * t788 + t375 * t789 + t382 * t826 + t634 * t830;
t762 = (t841 * qJD(2) - t859) * t440 + (-t123 * t437 + t125 * t439 + t853 * t424 + t855 * t423 + (-t195 * t439 - t197 * t437 - t423 * t851 + t424 * t836) * qJD(3) + t825 * qJD(2)) * t438;
t761 = (t842 * qJD(2) - t858) * t440 + (-t124 * t437 + t126 * t439 + t852 * t424 + t854 * t423 + (-t196 * t439 - t198 * t437 - t423 * t850 + t424 * t835) * qJD(3) + t824 * qJD(2)) * t438;
t687 = t320 * t440;
t116 = t438 * t522 - t687;
t629 = t116 * qJD(3);
t787 = t783 * t374 + t784 * t375 - t440 * t629 - t634 * t808;
t782 = (-t634 * t823 + t822) * t438;
t781 = t374 * t824 + t375 * t825;
t756 = t434 * t784 + t435 * t783;
t780 = -t687 + t838;
t779 = t826 * t438;
t778 = t827 * t438;
t777 = t829 * t435;
t776 = t828 * t434;
t151 = rSges(5,1) * t310 - rSges(5,2) * t309 + rSges(5,3) * t676;
t664 = -t151 - t200;
t418 = pkin(6) * t675;
t671 = t440 * t436;
t496 = t586 - t671;
t219 = t435 * t496 - t418;
t621 = rSges(5,1) * t683;
t619 = rSges(5,2) * t685;
t643 = rSges(5,3) * t675 + t435 * t619;
t769 = t435 * t621 - t219 - t643;
t728 = rSges(5,1) * t424;
t567 = -rSges(5,2) * t423 + t728;
t277 = -rSges(5,3) * t440 + t438 * t567;
t655 = t795 - t277;
t768 = t805 * t683;
t767 = t440 * pkin(2) + t438 * pkin(6);
t765 = (t816 + t860) * t634 + (t308 * t818 - t851 + t864) * t375 + (t310 * t818 - t850 + t863) * t374;
t764 = (Icges(6,1) * t685 - t331 - t391 - t847) * t634 + (-t307 * t862 + t836 - t866) * t375 + (-t309 * t862 + t835 - t865) * t374;
t763 = g(1) * t435 + g(2) * t434;
t760 = (qJD(2) * t837 - t857) * t440 + (t205 * t437 - t206 * t439 + t848 * t424 + t849 * t423 + (t322 * t439 + t324 * t437 + t423 * t816 - t424 * t847) * qJD(3) + t813 * qJD(2)) * t438;
t759 = t116 + t808;
t355 = t358 * pkin(3);
t758 = -t309 * t809 + t310 * t805 + t355;
t757 = t812 * t438;
t755 = t435 * t785 + t776;
t754 = t434 * t814 + t777;
t753 = t763 * t438;
t447 = t374 * (-Icges(4,2) * t359 + t198 + t353) + t375 * (-Icges(4,2) * t357 + t197 + t352) - t634 * (t324 + t371);
t747 = -m(5) - m(6);
t746 = t280 / 0.2e1;
t745 = t281 / 0.2e1;
t744 = -t374 / 0.2e1;
t743 = t374 / 0.2e1;
t742 = -t375 / 0.2e1;
t741 = t375 / 0.2e1;
t740 = t382 / 0.2e1;
t735 = pkin(3) * t437;
t732 = g(3) * t438;
t729 = rSges(4,1) * t439;
t727 = pkin(3) * qJD(3);
t428 = t438 * rSges(6,2);
t427 = t438 * rSges(4,3);
t426 = t438 * rSges(5,3);
t714 = rSges(6,2) * t599 - t222 * t805 + t223 * t809 + t632;
t713 = rSges(6,2) * t597 - t224 * t805 + t225 * t809 + t631;
t684 = t423 * t440;
t682 = t424 * t440;
t674 = t437 * t438;
t109 = rSges(5,1) * t225 + rSges(5,2) * t224 + rSges(5,3) * t597;
t618 = t437 * t727;
t446 = qJD(2) * t795 - t440 * t618;
t617 = t439 * t727;
t130 = t434 * t617 + t435 * t446 + t408;
t670 = -t109 - t130;
t129 = t434 * t446 - t435 * t617 + t406;
t669 = t129 * t676 + t199 * t597;
t630 = qJD(5) * t438;
t386 = t423 * t630;
t480 = t423 * t636 + t424 * t635;
t668 = t386 + t480 * qJ(5) + (-t423 * t635 + t424 * t636) * pkin(4) + (-rSges(6,1) * t423 + rSges(6,3) * t424) * t635 + (t440 * t565 + t428) * qJD(2);
t149 = rSges(5,1) * t308 - rSges(5,2) * t307 + rSges(5,3) * t680;
t666 = -t149 - t199;
t566 = -rSges(5,1) * t423 - rSges(5,2) * t424;
t335 = t566 * t438;
t164 = qJD(3) * t335 + (t440 * t567 + t426) * qJD(2);
t633 = qJD(4) * t440;
t203 = qJD(2) * t478 - t438 * t618 - t633;
t663 = -t164 - t203;
t662 = t440 * t199 - t680 * t795;
t661 = -t307 * t809 + t308 * t805;
t660 = t309 * rSges(5,1) + t310 * rSges(5,2) - t355;
t373 = (-rSges(4,1) * t437 - rSges(4,2) * t439) * t438;
t568 = -rSges(4,2) * t437 + t729;
t209 = qJD(3) * t373 + (t440 * t568 + t427) * qJD(2);
t381 = t767 * qJD(2);
t657 = -t209 - t381;
t412 = rSges(6,2) * t678;
t656 = -t434 * t797 + t412;
t653 = t682 * t809 + t684 * t805 + t428;
t187 = -t307 * rSges(5,1) - t308 * rSges(5,2);
t504 = qJD(2) * t396;
t350 = t434 * t504;
t351 = t435 * t504;
t652 = -t434 * t350 - t435 * t351;
t417 = pkin(6) * t678;
t649 = (-pkin(2) * t680 + t417) * t639 + (-pkin(2) * t676 + t418) * t638;
t647 = t685 * t809 - t768;
t338 = -rSges(4,3) * t440 + t438 * t568;
t646 = -t338 - t396;
t368 = t767 * t434;
t369 = t767 * t435;
t645 = t434 * t368 + t435 * t369;
t644 = rSges(5,3) * t678 + t434 * t619;
t620 = rSges(4,2) * t674;
t642 = rSges(4,3) * t678 + t434 * t620;
t641 = rSges(4,3) * t675 + t435 * t620;
t623 = pkin(3) * t674;
t622 = t438 * t729;
t616 = -t130 - t713;
t613 = t440 * t129 + t203 * t680 - t599 * t795;
t612 = -t203 - t668;
t611 = -t199 - t667;
t609 = -t381 + t663;
t415 = rSges(6,2) * t675;
t607 = t435 * t797 - t219 - t415;
t605 = -t396 + t655;
t602 = t767 * t639;
t601 = t767 * t638;
t589 = t368 * t639 + t369 * t638 + qJD(1);
t581 = -t634 / 0.2e1;
t580 = t634 / 0.2e1;
t401 = t440 * t422;
t579 = -t436 * t438 + t401;
t578 = t434 * t129 + t435 * t130 + t652;
t577 = -t381 + t612;
t576 = t434 * t199 + t435 * t200 + t645;
t575 = -t396 + t606;
t388 = rSges(3,1) * t440 - rSges(3,2) * t438;
t107 = rSges(5,1) * t223 + rSges(5,2) * t222 + rSges(5,3) * t599;
t520 = -t350 * t639 - t351 * t638 + t368 * t626 + t369 * t625 + qJDD(1);
t456 = -qJDD(4) * t440 + t374 * t129 + t280 * t199 + t438 * t627 + t520;
t10 = t107 * t374 + t149 * t280 + t281 * t664 + t375 * t670 + t456;
t485 = t374 * t199 + t589 - t633;
t50 = t149 * t374 + t375 * t664 + t485;
t563 = t10 * t149 + t50 * t107;
t218 = t434 * t496 - t417;
t553 = t435 * t167 + t374 * t218 + t425 + t649;
t542 = Icges(3,5) * t440 - Icges(3,6) * t438;
t541 = -Icges(3,5) * t438 - Icges(3,6) * t440;
t201 = rSges(4,1) * t357 + rSges(4,2) * t356 + rSges(4,3) * t680;
t202 = rSges(4,1) * t359 + rSges(4,2) * t358 + rSges(4,3) * t676;
t528 = t201 * t435 - t202 * t434;
t523 = t798 * t388;
t521 = qJD(2) * t821;
t339 = rSges(4,1) * t672 - rSges(4,2) * t673 + t427;
t279 = rSges(5,1) * t682 - rSges(5,2) * t684 + t426;
t519 = -qJD(2) * t381 - qJDD(2) * t396;
t518 = t200 * t635 + t434 * t633 - t602;
t64 = t374 * t655 + t634 * t664 + t569;
t65 = t149 * t634 + t277 * t375 + t489;
t495 = t64 * t151 + t65 * t666;
t74 = t201 * t374 - t202 * t375 + t589;
t493 = t74 * t528;
t486 = qJD(2) * t541;
t482 = t519 * t434;
t481 = t519 * t435;
t354 = t356 * pkin(3);
t39 = t374 * t667 + t375 * t610 + t386 + t485;
t7 = qJD(5) * t480 + qJDD(5) * t685 + t280 * t667 + t281 * t610 + t374 * t714 + t375 * t616 + t456;
t479 = t39 * t714 + t667 * t7;
t263 = t579 - t767;
t477 = t218 * t634 + t375 * t263 + t435 * t633 - t593 * t795 - t601;
t470 = t48 * t665 + t49 * t611;
t457 = t382 * t200 + t434 * t796 + t482;
t453 = t129 * t634 + t375 * t203 - t281 * t795 + t435 * t796 + t481;
t448 = (Icges(4,1) * t358 - t196 - t709) * t374 + (Icges(4,1) * t356 - t195 - t710) * t375 - (-t322 + t372) * t634;
t445 = (t39 * t667 + t48 * t606) * t435 + (t39 * t610 + t49 * t654) * t434;
t367 = t387 * t435;
t366 = t387 * t434;
t361 = t541 * t435;
t360 = t541 * t434;
t343 = t435 * t486;
t342 = t434 * t486;
t311 = t374 * t623;
t302 = Icges(3,3) * t434 + t435 * t542;
t301 = -Icges(3,3) * t435 + t434 * t542;
t284 = t354 * t634;
t259 = (-t375 + t594) * t440;
t258 = (t374 - t592) * t440;
t257 = -t435 * t622 + t641;
t256 = -t434 * t622 + t642;
t255 = t324 * t435;
t254 = t324 * t434;
t253 = t322 * t435;
t252 = t322 * t434;
t244 = t374 * t354;
t239 = -t434 * t621 + t644;
t221 = rSges(4,1) * t358 - rSges(4,2) * t359;
t220 = rSges(4,1) * t356 - rSges(4,2) * t357;
t208 = (t374 * t434 - t375 * t435) * t438;
t168 = t200 * t637;
t162 = t199 * t676;
t128 = rSges(4,1) * t249 + rSges(4,2) * t248 + rSges(4,3) * t597;
t127 = rSges(4,1) * t247 + rSges(4,2) * t246 + rSges(4,3) * t599;
t91 = t201 * t634 + t338 * t375 - t603;
t90 = -t202 * t634 - t338 * t374 - t604;
t85 = -qJD(2) * t521 + qJDD(2) * t523 + qJDD(1);
t55 = t127 * t634 - t201 * t382 + t209 * t375 + t281 * t338 + t481;
t54 = -t128 * t634 + t202 * t382 - t209 * t374 - t280 * t338 + t482;
t41 = t127 * t374 - t128 * t375 + t201 * t280 - t202 * t281 + t520;
t20 = t107 * t634 + t164 * t375 + t277 * t281 + t382 * t666 + t453;
t19 = t151 * t382 + t280 * t655 + t374 * t663 + t634 * t670 + t457;
t9 = -qJD(5) * t224 + qJDD(5) * t309 + t281 * t654 + t375 * t668 + t382 * t611 + t634 * t714 + t453;
t8 = -qJD(5) * t222 + qJDD(5) * t307 + t280 * t606 + t374 * t612 + t382 * t665 + t616 * t634 + t457;
t1 = [m(2) * qJDD(1) + (-m(2) - m(3) - m(4) + t747) * g(3) + m(3) * t85 + m(4) * t41 + m(5) * t10 + m(6) * t7; -(t361 * qJD(2) * t431 - t360 * t434 * t638) * t639 / 0.2e1 + (t360 * qJD(2) * t432 - t361 * t435 * t639) * t638 / 0.2e1 + (t785 * t434 - t435 * t828) * t746 + (t434 * t829 - t435 * t814) * t745 + (((t309 * t800 + t310 * t799 - t323 * t358 - t325 * t359 + t776) * t440 + t779) * qJD(3) + (((t780 + t785) * qJD(3) + t781) * t440 + t782) * t435 + (-t252 * t358 - t254 * t359 + t309 * t804 - t310 * t802) * t375 + (-t253 * t358 - t255 * t359 + t309 * t803 - t310 * t801) * t374) * t744 + (t434 * t788 - t435 * t789) * t743 + (((t307 * t800 + t308 * t799 - t323 * t356 - t325 * t357 + t777) * t440 + t778) * qJD(3) + (((t780 + t814) * qJD(3) + t781) * t440 + t782) * t434 + (-t252 * t356 - t254 * t357 + t307 * t804 - t308 * t802) * t375 + (-t253 * t356 - t255 * t357 + t307 * t803 - t308 * t801) * t374) * t742 + (t434 * t790 - t435 * t791) * t741 + (t434 * t783 - t435 * t784) * t740 - t787 * t635 / 0.2e1 + ((t629 + t808 * qJD(3) + (t252 * t437 - t254 * t439 + t423 * t804 - t424 * t802 + t825) * t375 + (t253 * t437 - t255 * t439 + t423 * t803 - t424 * t801 + t824) * t374) * t438 + ((t823 * t440 + (t323 * t437 - t325 * t439 + t423 * t800 + t424 * t799 + t813) * t438 + t756) * qJD(3) - t822) * t440) * t580 + (-t49 * (-t386 * t435 + t477) - t48 * (-t386 * t434 + t518) - t653 * t806 - (-t263 - t653) * t807 - (t470 * t438 + (t48 * t607 + t49 * t656 + t445) * t440) * qJD(3) - g(1) * (-t435 * t671 + t415) - g(2) * (-t434 * t671 + t412) - g(3) * (t401 + t653) - (-g(3) * t436 + t763 * (-t423 * t805 - t424 * t809 - t422)) * t438 + t7 * t576 + (t49 * t577 + t575 * t9 + t665 * t7) * t435 + (t48 * t577 + t575 * t8 + t479) * t434 + (-qJD(5) * t684 - t656 * t374 - t607 * t375 + t713 * t435 - t553 + t578) * t39) * m(6) + (-t65 * (t279 * t375 + t477) - t64 * (t518 + (-t263 - t279) * t374) - t50 * (t239 * t374 + t375 * t769 + t553) - (t495 * t438 + (t65 * (t277 * t434 + t239) + t64 * (t435 * t655 + t769) + t50 * (t149 * t435 + t434 * t664)) * t440) * qJD(3) - g(1) * t643 - g(2) * t644 - g(3) * (t279 + t579) - t763 * (-t671 + (-t422 - t728) * t438) + t10 * t576 + t50 * t578 + (t10 * t151 + t50 * t109 + t20 * t605 + t609 * t65) * t435 + (t19 * t605 + t609 * t64 + t563) * t434) * m(5) + (t41 * t645 + (t41 * t202 + t55 * t646 + t657 * t91) * t435 + (t41 * t201 + t54 * t646 + t657 * t90) * t434 - t91 * (t339 * t375 - t601) - t90 * (-t339 * t374 - t602) - ((-t201 * t91 + t202 * t90) * t438 + (t91 * (t338 * t434 + t256) + t90 * (-t338 * t435 - t257) + t493) * t440) * qJD(3) - g(1) * (t418 + t641) - g(2) * (t417 + t642) - g(3) * (t339 + t767) - (-pkin(2) - t729) * t753 + (t127 * t434 + t128 * t435 - t256 * t374 + t257 * t375 - t649 + t652) * t74) * m(4) + (g(1) * t367 + g(2) * t366 - g(3) * t388 + t85 * t523 + (t388 * qJD(2) ^ 2 + qJDD(2) * t387) * t821 + (-t521 - (-t366 * t434 - t367 * t435) * qJD(2)) * (qJD(2) * t523 + qJD(1))) * m(3) + ((-t301 * t820 + t302 * t431) * t810 + (-t342 * t820 + t343 * t431) * t811 + t792) * t434 / 0.2e1 - ((t301 * t432 - t302 * t820) * t810 + (t342 * t432 - t343 * t820) * t811 + t793) * t435 / 0.2e1 + (t434 * t761 - t435 * t762 + t815) * t581; (t755 * t438 - t440 * t826) * t746 + (t754 * t438 - t440 * t827) * t745 + (t309 * t765 + t310 * t764 + t358 * t447 + t359 * t448 - t435 * t757) * t744 + (t830 * t440 + (t434 * t789 + t435 * t788) * t438 + (t440 * t755 + t779) * qJD(2)) * t743 + (t307 * t765 + t308 * t764 + t356 * t447 + t357 * t448 - t434 * t757) * t742 + (t831 * t440 + (t434 * t791 + t435 * t790) * t438 + (t440 * t754 + t778) * qJD(2)) * t741 + (t438 * t756 - t440 * t759) * t740 - (t280 * t783 + t281 * t784 + t761 * t374 + t762 * t375 + t759 * t382 + t760 * t634) * t440 / 0.2e1 + t793 * t680 / 0.2e1 + t792 * t676 / 0.2e1 + t787 * t637 / 0.2e1 + (t760 * t440 + (t434 * t762 + t435 * t761) * t438 + (t438 * t759 + t440 * t756) * qJD(2)) * t581 + (t812 * t440 + (t423 * t765 + t424 * t764 - t437 * t447 + t448 * t439) * t438) * t580 + (-t49 * (qJD(5) * t310 + t284) - t48 * (qJD(5) * t308 + t311) - t39 * (t424 * t630 + t244) - (t39 * t661 + t48 * t647) * t374 - (-t48 * t758 + t49 * t661) * t634 - (t49 * (-t623 - t647) - t39 * t758) * t375 + t9 * t662 + t49 * t613 + t48 * t168 + t7 * t162 + t39 * t669 + (qJD(2) * t445 + t48 * t616 + t49 * t714 + t610 * t8 + t667 * t9) * t440 + (t470 * qJD(2) + (t48 * t612 + t606 * t8 + t479) * t435 + (t39 * t616 + t49 * t668 + t610 * t7 + t654 * t9) * t434) * t438 - g(1) * t758 - g(2) * (t354 + t661) - g(3) * t768 - (-t423 * t809 - t735) * t732) * m(6) + (-t65 * (t187 * t634 + t284) - t64 * (-t335 * t374 + t634 * t660 + t311) - t50 * (t187 * t374 + t244) - (t65 * (t335 - t623) + t50 * t660) * t375 + t20 * t662 + t65 * t613 + t64 * t168 + t10 * t162 + t50 * t669 + (t20 * t149 + t65 * t107 + t19 * t664 + t64 * t670 + ((t50 * t149 + t64 * t655) * t435 + (t65 * t277 + t50 * t664) * t434) * qJD(2)) * t440 + (t495 * qJD(2) + (t19 * t655 + t64 * t663 + t563) * t435 + (t10 * t664 + t65 * t164 + t20 * t277 + t50 * t670) * t434) * t438 + g(1) * t660 - g(2) * (t354 + t187) - (t566 - t735) * t732) * m(5) + (-g(1) * t221 - g(2) * t220 - g(3) * t373 + (t91 * t127 - t90 * t128 + t55 * t201 - t54 * t202 + (t493 + (t434 * t91 - t435 * t90) * t338) * qJD(2)) * t440 + (t91 * (-qJD(2) * t201 + t209 * t434) + t90 * (qJD(2) * t202 - t209 * t435) + t41 * t528 + t74 * (t127 * t435 - t128 * t434) + (t434 * t55 - t435 * t54) * t338) * t438 - t91 * (t220 * t634 + t373 * t375) - t90 * (-t221 * t634 - t373 * t374) - t74 * (t220 * t374 - t221 * t375)) * m(4) + t815 * t636 / 0.2e1; t747 * (-g(3) * t440 + t753) + m(5) * (-t10 * t440 + t19 * t680 + t20 * t676) + m(6) * (-t440 * t7 + t676 * t9 + t680 * t8) - m(5) * (t208 * t50 + t258 * t64 + t259 * t65) - m(6) * (t208 * t39 + t258 * t48 + t259 * t49) + (m(5) * (t438 * t50 + t64 * t678 + t65 * t675) / 0.2e1 + m(6) * (t39 * t438 + t48 * t678 + t49 * t675) / 0.2e1) * t811; (-t222 * t48 - t224 * t49 + t480 * t39 + (-g(3) + t7 - t806 + t807) * t685 + (t39 * t375 + t48 * t634 - g(1) + t9) * t309 + (-t39 * t374 - t49 * t634 - g(2) + t8) * t307) * m(6);];
tau = t1;
