% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PRPRR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d4,d5,theta1,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:45
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PRPRR2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPRR2_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPRR2_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRPRR2_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRPRR2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRPRR2_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:45:25
% EndTime: 2019-12-05 15:45:33
% DurationCPUTime: 8.95s
% Computational Cost: add. (33134->413), mult. (48153->567), div. (0->0), fcn. (32648->10), ass. (0->272)
t741 = qJD(2) + qJD(4);
t739 = t741 ^ 2;
t740 = qJDD(2) + qJDD(4);
t750 = sin(qJ(4));
t753 = cos(qJ(4));
t700 = t739 * t753 + t740 * t750;
t703 = t739 * t750 - t740 * t753;
t745 = sin(pkin(9));
t747 = cos(pkin(9));
t635 = t700 * t747 - t703 * t745;
t746 = sin(pkin(8));
t748 = cos(pkin(8));
t720 = g(1) * t746 - t748 * g(2);
t715 = -qJDD(3) + t720;
t648 = pkin(6) * t700 - t715 * t753;
t833 = pkin(6) * t703 - t715 * t750;
t579 = qJ(3) * t635 + t648 * t747 - t745 * t833;
t639 = t700 * t745 + t703 * t747;
t751 = sin(qJ(2));
t754 = cos(qJ(2));
t594 = t635 * t754 - t639 * t751;
t839 = qJ(3) * t639 + t648 * t745 + t747 * t833;
t515 = pkin(5) * t594 + t579 * t754 - t751 * t839;
t598 = t635 * t751 + t639 * t754;
t845 = pkin(5) * t598 + t579 * t751 + t754 * t839;
t721 = g(1) * t748 + g(2) * t746;
t744 = g(3) - qJDD(1);
t684 = -t721 * t751 + t754 * t744;
t682 = qJDD(2) * pkin(2) - t684;
t685 = -t754 * t721 - t751 * t744;
t756 = qJD(2) ^ 2;
t683 = -pkin(2) * t756 + t685;
t613 = t745 * t682 + t747 * t683;
t611 = -pkin(3) * t756 + t613;
t765 = t682 * t747 - t683 * t745;
t757 = qJDD(2) * pkin(3) + t765;
t566 = t611 * t750 - t753 * t757;
t567 = t753 * t611 + t750 * t757;
t783 = t566 * t750 + t753 * t567;
t527 = t566 * t753 - t567 * t750;
t818 = t527 * t747;
t498 = -t745 * t783 + t818;
t819 = t527 * t745;
t835 = t747 * t783 + t819;
t842 = t498 * t751 + t754 * t835;
t482 = t498 * t754 - t751 * t835;
t782 = t747 * t613 - t745 * t765;
t570 = -t613 * t745 - t747 * t765;
t816 = t570 * t754;
t531 = -t751 * t782 + t816;
t817 = t570 * t751;
t836 = t754 * t782 + t817;
t716 = qJDD(2) * t745 + t747 * t756;
t666 = qJ(3) * t716 - t715 * t747;
t717 = qJDD(2) * t747 - t745 * t756;
t766 = -qJ(3) * t717 - t715 * t745;
t779 = -t716 * t751 + t754 * t717;
t834 = -pkin(5) * t779 + t666 * t751 + t754 * t766;
t653 = t754 * t716 + t717 * t751;
t589 = pkin(5) * t653 + t666 * t754 - t751 * t766;
t559 = -pkin(4) * t739 + pkin(7) * t740 + t567;
t749 = sin(qJ(5));
t752 = cos(qJ(5));
t553 = t559 * t749 + t752 * t715;
t554 = t559 * t752 - t715 * t749;
t518 = t749 * t553 + t752 * t554;
t709 = t748 * t720;
t823 = -t721 * t746 + t709;
t821 = pkin(2) * t570;
t820 = pkin(2) * t715;
t726 = t749 * t739 * t752;
t713 = qJDD(5) + t726;
t815 = t713 * t749;
t814 = t713 * t752;
t714 = qJDD(5) - t726;
t813 = t714 * t749;
t812 = t714 * t752;
t811 = t715 * t746;
t806 = t720 * t746;
t742 = t749 ^ 2;
t804 = t739 * t742;
t803 = t746 * t744;
t802 = t748 * t744;
t558 = -t740 * pkin(4) - t739 * pkin(7) + t566;
t555 = t749 * t558;
t801 = t749 * t740;
t556 = t752 * t558;
t729 = t752 * t740;
t800 = -pkin(4) * t558 + pkin(7) * t518;
t743 = t752 ^ 2;
t799 = t742 + t743;
t798 = qJD(5) * t741;
t797 = t748 * qJDD(2);
t755 = qJD(5) ^ 2;
t723 = -t755 - t804;
t670 = -t723 * t749 - t812;
t728 = t752 * t798;
t694 = 0.2e1 * t728 + t801;
t796 = -pkin(4) * t694 + pkin(7) * t670 + t555;
t730 = t743 * t739;
t725 = -t730 - t755;
t668 = t725 * t752 - t815;
t792 = t749 * t798;
t696 = t729 - 0.2e1 * t792;
t795 = pkin(4) * t696 + pkin(7) * t668 - t556;
t502 = t518 * t750 - t558 * t753;
t794 = pkin(3) * t502 + t800;
t793 = -pkin(3) * t700 - t567;
t524 = pkin(3) * t527;
t791 = -pkin(2) * t498 - t524;
t698 = t799 * t740;
t705 = t730 + t804;
t641 = t698 * t750 + t705 * t753;
t642 = t698 * t753 - t705 * t750;
t600 = t641 * t747 + t642 * t745;
t601 = -t641 * t745 + t642 * t747;
t547 = t600 * t754 + t601 * t751;
t774 = pkin(4) * t705 + pkin(7) * t698 + t518;
t767 = pkin(3) * t641 + t774;
t759 = pkin(2) * t600 + t767;
t492 = -pkin(1) * t547 - t759;
t548 = -t600 * t751 + t601 * t754;
t790 = qJ(1) * t548 + t492;
t763 = -pkin(2) * t635 + t793;
t522 = pkin(1) * t594 - t763;
t789 = qJ(1) * t598 + t522;
t770 = -pkin(3) * t703 - t566;
t760 = -pkin(2) * t639 + t770;
t523 = pkin(1) * t598 - t760;
t788 = -qJ(1) * t594 + t523;
t771 = -pkin(2) * t716 - t613;
t580 = pkin(1) * t653 - t771;
t787 = -qJ(1) * t779 + t580;
t758 = pkin(2) * t717 + t765;
t581 = -pkin(1) * t779 - t758;
t786 = -qJ(1) * t653 + t581;
t718 = qJDD(2) * t751 + t754 * t756;
t643 = pkin(1) * t718 + t685;
t719 = qJDD(2) * t754 - t751 * t756;
t785 = qJ(1) * t719 - t643;
t644 = -pkin(1) * t719 + t684;
t784 = qJ(1) * t718 - t644;
t781 = t684 * t751 + t754 * t685;
t777 = -t748 * t721 - t806;
t776 = t750 * t726;
t775 = t753 * t726;
t617 = t670 * t750 - t694 * t753;
t773 = pkin(3) * t617 + t796;
t616 = t668 * t750 + t696 * t753;
t772 = pkin(3) * t616 + t795;
t769 = -t729 + t792;
t680 = pkin(5) * t718 - t720 * t754;
t768 = -pkin(5) * t719 - t720 * t751;
t517 = t553 * t752 - t554 * t749;
t622 = t684 * t754 - t685 * t751;
t503 = t518 * t753 + t558 * t750;
t488 = t502 * t747 + t503 * t745;
t764 = pkin(2) * t488 + t794;
t619 = t670 * t753 + t694 * t750;
t573 = t617 * t747 + t619 * t745;
t762 = pkin(2) * t573 + t773;
t618 = t668 * t753 - t696 * t750;
t572 = t616 * t747 + t618 * t745;
t761 = pkin(2) * t572 + t772;
t734 = t746 * qJDD(2);
t724 = t730 - t755;
t722 = t755 - t804;
t712 = pkin(1) * t715;
t706 = -t730 + t804;
t699 = t748 * t715;
t695 = t728 + t801;
t690 = t799 * t798;
t676 = qJDD(5) * t750 + t690 * t753;
t675 = -qJDD(5) * t753 + t690 * t750;
t672 = t695 * t752 - t742 * t798;
t671 = -t743 * t798 + t749 * t769;
t669 = -t722 * t749 + t814;
t667 = t724 * t752 - t813;
t664 = t723 * t752 - t813;
t663 = t722 * t752 + t815;
t662 = t725 * t749 + t814;
t661 = t724 * t749 + t812;
t650 = (t695 + t728) * t749;
t649 = t749 * t728 + t752 * t769;
t633 = -t694 * t749 + t696 * t752;
t632 = t694 * t752 + t696 * t749;
t631 = t669 * t753 + t750 * t801;
t630 = t667 * t753 + t750 * t729;
t629 = t669 * t750 - t753 * t801;
t628 = t667 * t750 - t753 * t729;
t627 = t672 * t753 - t776;
t626 = t671 * t753 + t776;
t625 = t672 * t750 + t775;
t624 = t671 * t750 - t775;
t609 = -t675 * t745 + t676 * t747;
t608 = t675 * t747 + t676 * t745;
t604 = t633 * t753 + t706 * t750;
t603 = t633 * t750 - t706 * t753;
t602 = pkin(1) * t720 + pkin(5) * t781;
t593 = -t629 * t745 + t631 * t747;
t592 = -t628 * t745 + t630 * t747;
t591 = t629 * t747 + t631 * t745;
t590 = t628 * t747 + t630 * t745;
t585 = -t625 * t745 + t627 * t747;
t584 = -t624 * t745 + t626 * t747;
t583 = t625 * t747 + t627 * t745;
t582 = t624 * t747 + t626 * t745;
t575 = -t617 * t745 + t619 * t747;
t574 = -t616 * t745 + t618 * t747;
t564 = -t608 * t751 + t609 * t754;
t563 = t608 * t754 + t609 * t751;
t562 = -t603 * t745 + t604 * t747;
t561 = t603 * t747 + t604 * t745;
t560 = qJ(3) * t782 + t820;
t550 = -pkin(7) * t664 + t556;
t549 = -pkin(7) * t662 + t555;
t546 = -pkin(4) * t664 + t554;
t545 = -pkin(4) * t662 + t553;
t544 = -t591 * t751 + t593 * t754;
t543 = -t590 * t751 + t592 * t754;
t542 = t591 * t754 + t593 * t751;
t541 = t590 * t754 + t592 * t751;
t540 = -t583 * t751 + t585 * t754;
t539 = -t582 * t751 + t584 * t754;
t538 = t583 * t754 + t585 * t751;
t537 = t582 * t754 + t584 * t751;
t536 = -t573 * t751 + t575 * t754;
t535 = -t572 * t751 + t574 * t754;
t534 = t573 * t754 + t575 * t751;
t533 = t572 * t754 + t574 * t751;
t521 = -t561 * t751 + t562 * t754;
t520 = t561 * t754 + t562 * t751;
t519 = pkin(3) * t715 + pkin(6) * t783;
t510 = -pkin(6) * t641 + t517 * t753;
t509 = pkin(6) * t642 + t517 * t750;
t508 = pkin(1) * t531 + t821;
t507 = -pkin(6) * t617 - t546 * t750 + t550 * t753;
t506 = -pkin(6) * t616 - t545 * t750 + t549 * t753;
t505 = -pkin(3) * t664 + pkin(6) * t619 + t546 * t753 + t550 * t750;
t504 = -pkin(3) * t662 + pkin(6) * t618 + t545 * t753 + t549 * t750;
t500 = pkin(5) * t531 + qJ(3) * t816 - t560 * t751;
t495 = pkin(5) * t836 + qJ(3) * t817 + t560 * t754 + t712;
t494 = -pkin(1) * t534 - t762;
t493 = -pkin(1) * t533 - t761;
t491 = -qJ(3) * t600 - t509 * t745 + t510 * t747;
t490 = qJ(3) * t601 + t509 * t747 + t510 * t745;
t489 = -t502 * t745 + t503 * t747;
t487 = -qJ(3) * t573 - t505 * t745 + t507 * t747;
t486 = -qJ(3) * t572 - t504 * t745 + t506 * t747;
t485 = -pkin(2) * t664 + qJ(3) * t575 + t505 * t747 + t507 * t745;
t484 = -pkin(2) * t662 + qJ(3) * t574 + t504 * t747 + t506 * t745;
t479 = pkin(6) * t818 + qJ(3) * t498 - t519 * t745;
t478 = pkin(6) * t819 + qJ(3) * t835 + t519 * t747 + t820;
t477 = -pkin(6) * t502 - (pkin(4) * t750 - pkin(7) * t753) * t517;
t476 = pkin(6) * t503 - (-pkin(4) * t753 - pkin(7) * t750 - pkin(3)) * t517;
t475 = -pkin(5) * t547 - t490 * t751 + t491 * t754;
t474 = pkin(5) * t548 + t490 * t754 + t491 * t751;
t473 = pkin(1) * t482 - t791;
t472 = -t488 * t751 + t489 * t754;
t471 = t488 * t754 + t489 * t751;
t470 = -pkin(5) * t534 - t485 * t751 + t487 * t754;
t469 = -pkin(5) * t533 - t484 * t751 + t486 * t754;
t468 = -pkin(1) * t664 + pkin(5) * t536 + t485 * t754 + t487 * t751;
t467 = -pkin(1) * t662 + pkin(5) * t535 + t484 * t754 + t486 * t751;
t466 = pkin(5) * t482 - t478 * t751 + t479 * t754;
t465 = pkin(5) * t842 + t478 * t754 + t479 * t751 + t712;
t464 = -qJ(3) * t488 - t476 * t745 + t477 * t747;
t463 = -pkin(1) * t471 - t764;
t462 = pkin(2) * t517 + qJ(3) * t489 + t476 * t747 + t477 * t745;
t461 = -pkin(5) * t471 - t462 * t751 + t464 * t754;
t460 = pkin(1) * t517 + pkin(5) * t472 + t462 * t754 + t464 * t751;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t803, -t802, -t823, -qJ(1) * t823, 0, 0, t748 * t719, 0, -t748 * t718, t734, t784 * t746 + t748 * t768, t680 * t748 + t785 * t746, t748 * t622, -qJ(1) * (t746 * t781 + t709) - (t746 * pkin(1) - t748 * pkin(5)) * t622, 0, 0, t748 * t779, 0, -t748 * t653, t734, -t786 * t746 + t748 * t834, t589 * t748 - t787 * t746, t748 * t531, t748 * t500 - t746 * t508 - qJ(1) * (t746 * t836 + t699), 0, 0, -t748 * t598, 0, -t748 * t594, t746 * t740, -t788 * t746 + t748 * t845, t515 * t748 - t789 * t746, t748 * t482, t748 * t466 - t746 * t473 - qJ(1) * (t746 * t842 + t699), t540 * t748 + t650 * t746, t521 * t748 + t632 * t746, t544 * t748 + t663 * t746, t539 * t748 - t649 * t746, t543 * t748 + t661 * t746, t748 * t564, t748 * t469 - t746 * t493 - qJ(1) * (t535 * t746 - t662 * t748), t748 * t470 - t746 * t494 - qJ(1) * (t536 * t746 - t664 * t748), t475 * t748 - t746 * t790, t748 * t461 - t746 * t463 - qJ(1) * (t472 * t746 + t517 * t748); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t802, -t803, t777, qJ(1) * t777, 0, 0, t746 * t719, 0, -t746 * t718, -t797, t746 * t768 - t784 * t748, t680 * t746 - t785 * t748, t746 * t622, qJ(1) * (t748 * t781 - t806) - (-t748 * pkin(1) - t746 * pkin(5)) * t622, 0, 0, t746 * t779, 0, -t746 * t653, -t797, t746 * t834 + t786 * t748, t589 * t746 + t787 * t748, t746 * t531, t746 * t500 + t748 * t508 + qJ(1) * (t748 * t836 - t811), 0, 0, -t746 * t598, 0, -t746 * t594, -t748 * t740, t746 * t845 + t788 * t748, t515 * t746 + t789 * t748, t746 * t482, t746 * t466 + t748 * t473 + qJ(1) * (t748 * t842 - t811), t540 * t746 - t650 * t748, t521 * t746 - t632 * t748, t544 * t746 - t663 * t748, t539 * t746 + t649 * t748, t543 * t746 - t661 * t748, t746 * t564, t746 * t469 + t748 * t493 + qJ(1) * (t535 * t748 + t662 * t746), t746 * t470 + t748 * t494 + qJ(1) * (t536 * t748 + t664 * t746), t475 * t746 + t748 * t790, t746 * t461 + t748 * t463 + qJ(1) * (t472 * t748 - t517 * t746); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t720, t721, 0, 0, 0, 0, t718, 0, t719, 0, -t680, t768, t781, t602, 0, 0, t653, 0, t779, 0, -t589, t834, t836, t495, 0, 0, t594, 0, -t598, 0, -t515, t845, t842, t465, t538, t520, t542, t537, t541, t563, t467, t468, t474, t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t744, -t720, 0, 0, 0, t719, 0, -t718, 0, t768, t680, t622, pkin(5) * t622, 0, 0, t779, 0, -t653, 0, t834, t589, t531, t500, 0, 0, -t598, 0, -t594, 0, t845, t515, t482, t466, t540, t521, t544, t539, t543, t564, t469, t470, t475, t461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t744, 0, -t721, 0, 0, 0, 0, 0, 0, -qJDD(2), t644, t643, 0, pkin(1) * t622, 0, 0, 0, 0, 0, -qJDD(2), t581, t580, 0, t508, 0, 0, 0, 0, 0, -t740, t523, t522, 0, t473, -t650, -t632, -t663, t649, -t661, 0, t493, t494, t492, t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t720, t721, 0, 0, 0, 0, t718, 0, t719, 0, -t680, t768, t781, t602, 0, 0, t653, 0, t779, 0, -t589, t834, t836, t495, 0, 0, t594, 0, -t598, 0, -t515, t845, t842, t465, t538, t520, t542, t537, t541, t563, t467, t468, t474, t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t756, 0, 0, -t720, t684, 0, 0, 0, t717, 0, -t716, 0, t766, t666, t570, qJ(3) * t570, 0, 0, -t639, 0, -t635, 0, t839, t579, t498, t479, t585, t562, t593, t584, t592, t609, t486, t487, t491, t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t756, 0, qJDD(2), 0, t720, 0, t685, 0, 0, 0, t716, 0, t717, 0, -t666, t766, t782, t560, 0, 0, t635, 0, -t639, 0, -t579, t839, t835, t478, t583, t561, t591, t582, t590, t608, t484, t485, t490, t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t684, -t685, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t758, t771, 0, -t821, 0, 0, 0, 0, 0, t740, t760, t763, 0, t791, t650, t632, t663, -t649, t661, 0, t761, t762, t759, t764; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t756, 0, 0, -t715, -t765, 0, 0, 0, -t703, 0, -t700, 0, t833, t648, t527, pkin(6) * t527, t627, t604, t631, t626, t630, t676, t506, t507, t510, t477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t756, 0, qJDD(2), 0, t715, 0, t613, 0, 0, 0, t700, 0, -t703, 0, -t648, t833, t783, t519, t625, t603, t629, t624, t628, t675, t504, t505, t509, t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t765, -t613, 0, 0, 0, 0, 0, 0, 0, t740, t770, t793, 0, -t524, t650, t632, t663, -t649, t661, 0, t772, t773, t767, t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t740, 0, -t739, 0, 0, -t715, t566, 0, t672, t633, t669, t671, t667, t690, t549, t550, t517, pkin(7) * t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t739, 0, t740, 0, t715, 0, t567, 0, t726, -t706, -t801, -t726, -t729, -qJDD(5), t545, t546, 0, pkin(4) * t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t740, -t566, -t567, 0, 0, t650, t632, t663, -t649, t661, 0, t795, t796, t774, t800; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t695, t696, t713, -t728, t724, t728, 0, t558, t553, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t792, t694, t722, -t769, t714, -t792, -t558, 0, t554, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t726, t706, t801, t726, t729, qJDD(5), -t553, -t554, 0, 0;];
m_new_reg = t1;
