% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:28
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR10_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR10_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR10_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRPRR10_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:26:45
% EndTime: 2019-12-31 20:27:12
% DurationCPUTime: 18.44s
% Computational Cost: add. (20125->781), mult. (51634->1089), div. (0->0), fcn. (56386->10), ass. (0->567)
t510 = sin(qJ(5));
t504 = t510 ^ 2;
t513 = cos(qJ(5));
t506 = t513 ^ 2;
t511 = sin(qJ(4));
t465 = (t504 / 0.2e1 - t506 / 0.2e1) * t511;
t838 = cos(pkin(5));
t626 = t838 * t511;
t509 = sin(pkin(5));
t512 = sin(qJ(2));
t837 = cos(pkin(10));
t625 = t837 * t512;
t508 = sin(pkin(10));
t515 = cos(qJ(2));
t756 = t515 * t508;
t452 = (-t625 - t756) * t509;
t514 = cos(qJ(4));
t786 = t452 * t514;
t405 = t626 - t786;
t779 = t509 * t515;
t780 = t509 * t512;
t450 = t508 * t780 - t779 * t837;
t303 = t405 * t510 - t450 * t513;
t814 = t303 * t513;
t654 = -t814 / 0.2e1;
t791 = t450 * t510;
t796 = t405 * t513;
t305 = t791 + t796;
t811 = t305 * t510;
t565 = t654 - t811 / 0.2e1;
t546 = t565 * t511;
t505 = t511 ^ 2;
t760 = t513 * t505;
t885 = qJD(2) * t510 * t760 - qJD(1) * t546 + qJD(4) * t465;
t774 = t510 * t303;
t810 = t305 * t513;
t194 = -t774 / 0.2e1 + t810 / 0.2e1;
t884 = t194 * qJD(5);
t787 = t452 * t511;
t403 = -t514 * t838 - t787;
t851 = -t511 / 0.2e1;
t650 = t403 * t851;
t848 = t514 / 0.2e1;
t562 = t405 * t848 + t650;
t883 = t562 * qJD(4);
t684 = t514 * qJD(2);
t496 = t511 * t684;
t615 = qJD(1) * t562 + t496;
t696 = t403 * qJD(1);
t882 = -qJD(2) * t562 + t405 * t696;
t736 = qJD(1) * t305;
t881 = -qJD(2) * t546 - qJD(4) * t194 + t303 * t736;
t729 = qJD(4) * t513;
t494 = t510 * t729;
t880 = -qJD(1) * t194 + qJD(2) * t465 - t494;
t449 = t450 ^ 2;
t879 = t449 * t514;
t339 = t514 * t450;
t447 = t452 * t513;
t334 = -t339 * t510 + t447;
t773 = t510 * t334;
t318 = t773 / 0.2e1;
t788 = t452 * t510;
t335 = -t339 * t513 - t788;
t804 = t335 * t513;
t323 = t804 / 0.2e1;
t878 = t323 + t318;
t631 = -t339 / 0.2e1;
t877 = t513 * t631 - t788 / 0.2e1;
t630 = t339 / 0.2e1;
t876 = t513 * t630 + t788 / 0.2e1;
t871 = t546 * qJD(5);
t867 = t403 ^ 2;
t866 = t452 ^ 2;
t672 = pkin(1) * t838;
t608 = t515 * t672;
t842 = pkin(7) + qJ(3);
t627 = t509 * t842;
t443 = -t512 * t627 + t608;
t609 = t512 * t672;
t529 = -t515 * t627 - t609;
t316 = t443 * t837 + t508 * t529;
t302 = t514 * t316;
t683 = pkin(2) * t780;
t328 = -pkin(3) * t452 + pkin(8) * t450 + t683;
t324 = t511 * t328;
t202 = t302 + t324;
t172 = -pkin(9) * t452 + t202;
t765 = t513 * t172;
t315 = t508 * t443 - t529 * t837;
t843 = t514 * pkin(9);
t844 = t511 * pkin(4);
t483 = -t843 + t844;
t210 = -t450 * t483 + t315;
t776 = t510 * t210;
t98 = t765 + t776;
t865 = t98 / 0.2e1;
t864 = -t305 / 0.2e1;
t863 = t305 / 0.2e1;
t862 = -t334 / 0.2e1;
t861 = -t335 / 0.2e1;
t499 = -pkin(2) * t837 - pkin(3);
t597 = -pkin(4) * t514 - pkin(9) * t511;
t534 = t597 + t499;
t498 = pkin(2) * t508 + pkin(8);
t770 = t510 * t514;
t676 = t498 * t770;
t397 = -t513 * t534 + t676;
t860 = -t397 / 0.2e1;
t859 = t403 / 0.2e1;
t858 = t405 / 0.2e1;
t771 = t510 * t511;
t474 = t498 * t771;
t761 = t513 * t483;
t422 = t474 + t761;
t857 = -t422 / 0.2e1;
t767 = t511 * t513;
t675 = t498 * t767;
t772 = t510 * t483;
t423 = -t675 + t772;
t856 = t423 / 0.2e1;
t855 = -t498 / 0.2e1;
t854 = t498 / 0.2e1;
t853 = -t499 / 0.2e1;
t852 = -t510 / 0.2e1;
t850 = t511 / 0.2e1;
t849 = -t514 / 0.2e1;
t847 = t403 * pkin(9);
t846 = t450 * pkin(4);
t845 = t450 * pkin(9);
t841 = pkin(2) * qJD(2);
t518 = pkin(2) * t838 + t443;
t528 = t779 * t842 + t609;
t296 = t508 * t518 + t528 * t837;
t271 = pkin(8) * t838 + t296;
t472 = (-pkin(2) * t515 - pkin(1)) * t509;
t527 = t450 * pkin(3) + t452 * pkin(8) + t472;
t188 = t271 * t511 - t514 * t527;
t157 = t188 - t846;
t758 = t514 * t328;
t768 = t511 * t316;
t201 = t758 - t768;
t171 = pkin(4) * t452 - t201;
t189 = t514 * t271 + t511 * t527;
t158 = t189 + t845;
t295 = -t508 * t528 + t518 * t837;
t270 = -pkin(3) * t838 - t295;
t598 = t403 * pkin(4) - t405 * pkin(9);
t516 = t270 + t598;
t78 = t158 * t510 - t513 * t516;
t79 = t513 * t158 + t510 * t516;
t763 = t513 * t210;
t778 = t510 * t172;
t97 = t763 - t778;
t8 = t157 * t171 - t78 * t97 + t79 * t98;
t840 = t8 * qJD(1);
t9 = -t303 * t98 - t305 * t97 - t334 * t79 + t335 * t78;
t839 = t9 * qJD(1);
t444 = t505 * t450;
t571 = t513 * t865 + t852 * t97;
t521 = t171 * t849 + t511 * t571;
t759 = t513 * t514;
t673 = t498 * t759;
t398 = t510 * t534 + t673;
t564 = t334 * t860 + t398 * t861;
t26 = t444 * t854 + t521 + t564;
t836 = qJD(1) * t26;
t41 = -t157 * t303 + t403 * t78;
t835 = qJD(1) * t41;
t42 = t157 * t305 - t403 * t79;
t834 = qJD(1) * t42;
t823 = t189 * t514;
t50 = -t270 * t452 + (-t188 * t511 - t823) * t450;
t833 = qJD(1) * t50;
t99 = t188 * t450 - t270 * t403;
t832 = qJD(1) * t99;
t269 = pkin(4) * t405 + t847;
t762 = t513 * t269;
t777 = t510 * t188;
t119 = t762 + t777;
t831 = t119 * t510;
t764 = t513 * t188;
t775 = t510 * t269;
t120 = -t764 + t775;
t12 = -t119 * t78 + t120 * t79 + t157 * t189;
t830 = t12 * qJD(1);
t829 = t120 * t513;
t828 = t157 * t510;
t827 = t157 * t513;
t17 = -t119 * t305 - t120 * t303 + (t79 * t510 - t78 * t513) * t403;
t826 = t17 * qJD(1);
t825 = t171 * t510;
t824 = t171 * t513;
t336 = t511 * t450;
t19 = t157 * t334 + t171 * t303 + t336 * t78 + t403 * t97;
t822 = t19 * qJD(1);
t20 = t157 * t335 + t171 * t305 + t336 * t79 - t403 * t98;
t821 = t20 * qJD(1);
t23 = t189 * t303 - t78 * t405 + (t119 - t828) * t403;
t820 = t23 * qJD(1);
t24 = t189 * t305 - t79 * t405 + (-t120 - t827) * t403;
t819 = t24 * qJD(1);
t25 = -t157 * t336 + t334 * t78 + t335 * t79;
t818 = t25 * qJD(1);
t817 = t270 * t511;
t816 = t270 * t514;
t815 = t303 * t335;
t813 = t303 * t514;
t812 = t305 * t334;
t809 = t305 * t514;
t808 = t334 * t403;
t807 = t334 * t513;
t806 = t335 * t403;
t805 = t335 * t510;
t35 = -t188 * t201 + t189 * t202 + t270 * t315;
t803 = t35 * qJD(1);
t36 = -t201 * t405 - t202 * t403 + (-t188 * t514 + t189 * t511) * t450;
t802 = t36 * qJD(1);
t801 = t397 * t514;
t800 = t398 * t514;
t799 = t403 * t514;
t798 = t405 * t452;
t797 = t405 * t511;
t795 = t422 * t511;
t794 = t423 * t511;
t44 = t188 * t452 + t315 * t403 + (t201 - t817) * t450;
t793 = t44 * qJD(1);
t45 = t189 * t452 + t315 * t405 + (-t202 - t816) * t450;
t792 = t45 * qJD(1);
t790 = t449 * t511;
t789 = t452 * t403;
t785 = t498 * t511;
t784 = t498 * t514;
t503 = t509 ^ 2;
t783 = t503 * t515;
t782 = t504 * t514;
t781 = t505 * t510;
t239 = t510 * t403;
t769 = t511 * t303;
t766 = t511 * t514;
t243 = t513 * t403;
t757 = t514 * t334;
t648 = t450 * t855;
t401 = t505 * t648;
t507 = t514 ^ 2;
t538 = t452 * t853 + t507 * t648 + t401;
t566 = t201 * t849 + t202 * t851;
t54 = t538 + t566;
t755 = t54 * qJD(1);
t61 = -(-t296 + t315) * t452 + (t295 - t316) * t450;
t754 = t61 * qJD(1);
t94 = -t295 * t315 + t296 * t316 + t472 * t683;
t753 = t94 * qJD(1);
t129 = (t794 / 0.2e1 + t800 / 0.2e1) * t513 + (-t795 / 0.2e1 + t801 / 0.2e1) * t510 + (t505 / 0.2e1 - t507 / 0.2e1) * t498;
t752 = t129 * qJD(4);
t751 = t504 + t506;
t490 = t506 - t504;
t491 = t507 - t505;
t100 = -t189 * t450 + t270 * t405;
t750 = qJD(1) * t100;
t105 = t812 - t815;
t749 = qJD(1) * t105;
t680 = t303 * t336;
t130 = -t680 - t808;
t748 = qJD(1) * t130;
t679 = t305 * t336;
t133 = -t679 - t806;
t747 = qJD(1) * t133;
t134 = t295 * t452 - t296 * t450;
t746 = qJD(1) * t134;
t144 = t303 * t405 - t510 * t867;
t745 = qJD(1) * t144;
t145 = t305 * t405 - t513 * t867;
t744 = qJD(1) * t145;
t196 = -t315 * t838 + t450 * t683 - t452 * t472;
t743 = qJD(1) * t196;
t197 = t316 * t838 + t450 * t472 + t452 * t683;
t742 = qJD(1) * t197;
t204 = (-t797 + t799) * t450;
t741 = qJD(1) * t204;
t211 = t789 - t790;
t740 = qJD(1) * t211;
t212 = -t789 - t790;
t739 = qJD(1) * t212;
t213 = -t798 - t879;
t738 = qJD(1) * t213;
t737 = qJD(1) * t303;
t735 = qJD(2) * t452;
t734 = qJD(3) * t514;
t733 = qJD(4) * t403;
t732 = qJD(4) * t450;
t731 = qJD(4) * t510;
t730 = qJD(4) * t511;
t728 = qJD(4) * t514;
t727 = qJD(5) * t403;
t726 = qJD(5) * t510;
t725 = qJD(5) * t513;
t724 = qJD(5) * t514;
t317 = -t773 / 0.2e1;
t567 = (-t813 / 0.2e1 + t861) * t513;
t640 = t770 / 0.2e1;
t102 = t305 * t640 + t317 + t567;
t723 = t102 * qJD(1);
t106 = -t812 - t815;
t722 = t106 * qJD(1);
t636 = -t767 / 0.2e1;
t414 = t450 * t636;
t545 = (-t799 / 0.2e1 - t797 / 0.2e1) * t510;
t639 = t769 / 0.2e1;
t519 = t403 * t640 + t545 + t639;
t115 = t414 + t519;
t721 = t115 * qJD(1);
t591 = t811 + t814;
t125 = t591 * t403;
t720 = t125 * qJD(1);
t127 = (t805 - t807) * t511;
t719 = t127 * qJD(1);
t131 = t680 - t808;
t718 = t131 * qJD(1);
t132 = -t679 + t806;
t717 = t132 * qJD(1);
t540 = t303 * t640 + t504 * t650;
t137 = t807 / 0.2e1 + t540;
t716 = t137 * qJD(1);
t632 = t759 / 0.2e1;
t539 = t305 * t632 + t506 * t650;
t139 = -t805 / 0.2e1 + t539;
t715 = t139 * qJD(1);
t643 = -t771 / 0.2e1;
t605 = t403 * t643;
t653 = t813 / 0.2e1;
t552 = t653 + t605;
t150 = t552 + t876;
t714 = t150 * qJD(1);
t642 = t771 / 0.2e1;
t551 = t403 * t642 + t653;
t151 = t551 + t877;
t713 = t151 * qJD(1);
t633 = -t243 / 0.2e1;
t604 = t511 * t633;
t576 = t447 / 0.2e1 + t604;
t649 = -t791 / 0.2e1;
t596 = t864 + t649;
t153 = t514 * t596 + t576;
t712 = t153 * qJD(1);
t155 = (t863 + t649) * t514 + t576;
t711 = t155 * qJD(1);
t426 = t450 * t781;
t170 = t426 - t757;
t710 = t170 * qJD(1);
t192 = (t796 / 0.2e1 + t596) * t511;
t709 = t192 * qJD(1);
t590 = t797 + t799;
t205 = t590 * t450;
t708 = t205 * qJD(1);
t325 = t335 * t514;
t427 = t450 * t760;
t226 = t427 - t325;
t707 = t226 * qJD(1);
t231 = -t798 + t879;
t706 = t231 * qJD(1);
t705 = t239 * qJD(1);
t704 = t243 * qJD(1);
t289 = t449 - t866;
t703 = t289 * qJD(1);
t547 = -t508 * t450 / 0.2e1 + t837 * t452 / 0.2e1;
t298 = (-t780 / 0.2e1 + t547) * pkin(2);
t702 = t298 * qJD(1);
t701 = t336 * qJD(1);
t700 = t339 * qJD(1);
t699 = t787 * qJD(1);
t446 = t450 * t507;
t345 = t444 + t446;
t698 = t345 * qJD(1);
t351 = t449 + t866;
t697 = t351 * qJD(1);
t464 = pkin(7) * t779 + t609;
t411 = pkin(1) * t503 * t512 + t464 * t838;
t695 = t411 * qJD(1);
t463 = pkin(7) * t780 - t608;
t412 = pkin(1) * t783 - t463 * t838;
t694 = t412 * qJD(1);
t448 = (t625 / 0.2e1 + t756 / 0.2e1) * t509;
t693 = t448 * qJD(1);
t692 = t450 * qJD(1);
t691 = t452 * qJD(1);
t688 = t465 * qJD(5);
t468 = (-t512 ^ 2 + t515 ^ 2) * t503;
t687 = t468 * qJD(1);
t686 = t511 * qJD(2);
t685 = t511 * qJD(5);
t682 = pkin(4) * t303 / 0.2e1;
t681 = pkin(4) * t864;
t678 = t512 * t783;
t677 = t510 * t767;
t674 = t403 * t759;
t670 = t303 * t696;
t669 = t305 * t696;
t667 = t510 * t686;
t666 = t513 * t686;
t665 = t511 * t729;
t664 = t510 * t724;
t663 = t513 * t724;
t662 = t403 * t692;
t661 = t450 * t691;
t660 = t450 * t735;
t659 = t514 * t692;
t658 = t514 * t691;
t657 = t510 * t725;
t656 = t511 * t728;
t655 = t157 * t850;
t652 = -t807 / 0.2e1;
t651 = t805 / 0.2e1;
t647 = t785 / 0.2e1;
t646 = t784 / 0.2e1;
t645 = t499 * t858;
t644 = t239 / 0.2e1;
t641 = -t770 / 0.2e1;
t638 = -t336 / 0.2e1;
t637 = t336 / 0.2e1;
t635 = t767 / 0.2e1;
t634 = -t765 / 0.2e1;
t629 = t157 / 0.2e1 - t188 / 0.2e1;
t628 = -t302 / 0.2e1 - t324 / 0.2e1;
t624 = qJD(2) * t838;
t623 = qJD(3) * t838;
t622 = t838 * qJD(1);
t621 = -0.2e1 * t677;
t620 = 0.2e1 * t677;
t429 = t452 * t622;
t613 = t429 + t735;
t612 = -qJD(4) - t692;
t611 = -qJD(5) - t696;
t610 = -qJD(5) + t684;
t607 = t505 * t657;
t606 = qJD(2) * t678;
t415 = t450 * t635;
t603 = t847 / 0.2e1 + t269 / 0.2e1;
t602 = t509 * t622;
t601 = t509 * t624;
t600 = t450 * t622;
t599 = t514 * t621;
t595 = t305 * t850 + t510 * t638;
t159 = (t795 - t801) * t513 + (t794 + t800) * t510;
t561 = t303 * t856 + t422 * t863;
t569 = t398 * t859 + t79 * t849;
t570 = t397 * t859 + t78 * t849;
t3 = (pkin(9) * t862 + t119 * t850 + t570 + t865) * t513 + (t335 * pkin(9) / 0.2e1 - t97 / 0.2e1 + t120 * t850 - t569) * t510 + t561;
t594 = -qJD(1) * t3 - qJD(2) * t159;
t593 = t829 - t831;
t592 = -t201 * t511 + t202 * t514;
t589 = -t422 * t510 + t423 * t513;
t588 = -t450 * t499 + t452 * t498;
t587 = t622 + qJD(2);
t530 = t397 * t858 + t403 * t857 + t78 * t850;
t548 = t845 / 0.2e1 + t403 * t854 - t189 / 0.2e1;
t574 = pkin(4) * t862 - t824 / 0.2e1;
t13 = (t119 / 0.2e1 + t303 * t855) * t514 + (t157 * t849 + t511 * t548) * t510 + t530 + t574;
t224 = t397 * t511 + (t422 - 0.2e1 * t474) * t514;
t586 = -t13 * qJD(1) - t224 * qJD(2);
t560 = t305 * t855 - t827 / 0.2e1;
t563 = t398 * t858 + t403 * t856;
t573 = pkin(4) * t861 + t825 / 0.2e1;
t14 = (-t120 / 0.2e1 + t560) * t514 + (t79 / 0.2e1 + t548 * t513) * t511 + t563 + t573;
t225 = t423 * t514 + (-t398 + 0.2e1 * t673) * t511;
t585 = -t14 * qJD(1) + t225 * qJD(2);
t559 = -t778 / 0.2e1 + t763 / 0.2e1;
t28 = t511 * t560 + t559 + t569;
t343 = -t498 * t760 - t800;
t584 = qJD(1) * t28 + qJD(2) * t343;
t524 = t498 * t639 - t570;
t29 = t634 + (-t210 / 0.2e1 + t655) * t510 + t524;
t342 = -t498 * t781 - t801;
t583 = qJD(1) * t29 - qJD(2) * t342;
t582 = t610 * t511;
t520 = t403 * t641 + t545 - t769 / 0.2e1;
t114 = t415 + t520;
t470 = t491 * t510;
t581 = qJD(1) * t114 + qJD(2) * t470;
t117 = -t674 + (-t796 / 0.2e1 + t596) * t511;
t471 = t507 * t513 - t760;
t580 = -qJD(1) * t117 - qJD(2) * t471;
t214 = -t405 ^ 2 + t867;
t579 = qJD(1) * t214 - qJD(2) * t590;
t578 = -qJD(1) * t590 + qJD(2) * t491;
t577 = t684 - t696;
t575 = t843 / 0.2e1 - t844 / 0.2e1;
t395 = -t786 / 0.2e1 + t626 / 0.2e1;
t572 = t395 * qJD(1) + t686 / 0.2e1;
t568 = t510 * t630 - t447 / 0.2e1 + t604;
t90 = t645 + (t648 - t328 / 0.2e1) * t514 + (t270 / 0.2e1 + t316 / 0.2e1) * t511;
t558 = -qJD(1) * t90 - t499 * t686;
t523 = t816 / 0.2e1 + t403 * t853 + t498 * t637;
t88 = t523 - t628;
t557 = -qJD(1) * t88 - t499 * t684;
t554 = -qJD(4) * t448 + t661;
t553 = -t685 / 0.2e1 + t615;
t550 = -t483 / 0.2e1 + t575;
t549 = t878 * pkin(9);
t517 = t119 * t860 + t120 * t398 / 0.2e1 + t78 * t857 + t79 * t856 + t157 * t646 + t189 * t647;
t522 = t571 * pkin(9) - t171 * pkin(4) / 0.2e1;
t1 = -t517 + t522;
t186 = t498 ^ 2 * t766 - t397 * t422 + t398 * t423;
t544 = -t1 * qJD(1) + t186 * qJD(2) + t129 * qJD(3);
t441 = (-0.1e1 + t751) * t766;
t5 = t549 + (-t79 * t513 / 0.2e1 + t78 * t852 + t189 / 0.2e1) * t514 + (t846 / 0.2e1 - t829 / 0.2e1 + t831 / 0.2e1 - t157 / 0.2e1) * t511;
t543 = t5 * qJD(1) - t129 * qJD(2) - t441 * qJD(3);
t542 = (qJD(4) * t405 - t450 * t686) * t403;
t122 = (-t774 + t810) * t511;
t126 = t303 ^ 2 - t305 ^ 2;
t541 = qJD(1) * t126 - qJD(2) * t122 - qJD(4) * t591;
t354 = t403 * t677;
t82 = t305 * t641 + t318 + t354 + t567;
t537 = t82 * qJD(1) + qJD(2) * t599;
t406 = t550 * t510;
t46 = t510 * t603 + t513 * t629 + t682;
t536 = pkin(4) * t729 - qJD(1) * t46 + qJD(2) * t406;
t407 = t550 * t513;
t48 = t510 * t629 - t513 * t603 + t681;
t535 = pkin(4) * t731 - qJD(1) * t48 - qJD(2) * t407;
t531 = qJD(5) * t395 + t882;
t469 = t490 * t505;
t526 = qJD(1) * t122 + qJD(2) * t469 + qJD(4) * t620;
t525 = qJD(1) * t591 + qJD(2) * t620 - qJD(4) * t490;
t501 = t506 * t514;
t500 = t730 / 0.2e1;
t495 = t510 * t730;
t480 = qJD(1) * t678;
t477 = qJD(5) * t621;
t442 = t448 * qJD(2);
t440 = t452 * t684;
t350 = t474 + t761 / 0.2e1 + t575 * t513;
t349 = t675 - t772 / 0.2e1 - t575 * t510;
t344 = t587 * t450;
t331 = t336 * qJD(4);
t308 = -t701 - t730;
t297 = t683 / 0.2e1 + t547 * pkin(2);
t292 = qJD(2) * t638 + qJD(4) * t395;
t208 = t590 * qJD(4);
t193 = t405 * t636 + t595;
t156 = t809 / 0.2e1 + t568;
t154 = -t809 / 0.2e1 + t568;
t152 = t551 + t876;
t149 = t552 + t877;
t138 = t651 + t539;
t136 = t652 + t540;
t123 = t591 * qJD(5);
t121 = t122 * qJD(5);
t118 = t405 * t635 + t595 + t674;
t116 = t415 + t519;
t113 = t414 + t520;
t101 = (t654 + t811 / 0.2e1) * t514 + t878;
t91 = t498 * t631 + t645 + t817 / 0.2e1 - t768 / 0.2e1 + t758 / 0.2e1;
t89 = t523 + t628;
t81 = t514 * t565 + t317 + t323 + t354;
t53 = t538 - t566;
t49 = pkin(9) * t633 + t681 + t828 / 0.2e1 + t777 / 0.2e1 + t762 / 0.2e1;
t47 = pkin(9) * t644 + t682 + t827 / 0.2e1 + t764 / 0.2e1 - t775 / 0.2e1;
t31 = t157 * t635 + t305 * t647 + t559 - t569;
t30 = t157 * t643 + t634 - t776 / 0.2e1 - t524;
t27 = t401 + t521 - t564;
t16 = pkin(9) * t415 + t120 * t848 + t157 * t632 + t189 * t635 + t305 * t646 + t498 * t604 + t79 * t851 - t563 + t573;
t15 = pkin(9) * t510 * t637 + t119 * t849 + t157 * t640 + t189 * t642 + t303 * t646 + t498 * t605 - t530 + t574;
t6 = t120 * t635 + t79 * t632 + t119 * t643 + t78 * t640 - t823 / 0.2e1 + t655 + pkin(4) * t637 + t549;
t4 = t398 * t644 + t120 * t643 + t79 * t641 + t397 * t633 + t119 * t636 + t78 * t632 + (t652 + t651) * pkin(9) - t561 + t571;
t2 = t517 + t522;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t606, t468 * qJD(2), t515 * t601, -t606, -t512 * t601, 0, -t411 * qJD(2), -t412 * qJD(2), 0, 0, t660, t289 * qJD(2), -t450 * t624, -t660, t452 * t624, 0, qJD(2) * t196 + t452 * t623, -qJD(2) * t197 + t450 * t623, qJD(2) * t61 + qJD(3) * t351, qJD(2) * t94 + qJD(3) * t134, (-t450 * t684 - t733) * t405, qJD(2) * t205 + qJD(4) * t214, qJD(2) * t213 - t403 * t732, t542, -qJD(2) * t212 - t405 * t732, -t660, qJD(2) * t44 - qJD(3) * t211 + qJD(4) * t100, qJD(2) * t45 + qJD(3) * t231 + qJD(4) * t99, qJD(2) * t36 + qJD(3) * t204, qJD(2) * t35 + qJD(3) * t50, (qJD(2) * t335 - qJD(5) * t303 - t403 * t729) * t305, qJD(2) * t106 + qJD(4) * t125 + qJD(5) * t126, qJD(2) * t132 + qJD(4) * t145 - t303 * t727, (qJD(2) * t334 + qJD(5) * t305 - t403 * t731) * t303, qJD(2) * t131 - qJD(4) * t144 - t305 * t727, t542, qJD(2) * t19 + qJD(3) * t130 + qJD(4) * t23 + qJD(5) * t42, qJD(2) * t20 + qJD(3) * t133 + qJD(4) * t24 + qJD(5) * t41, qJD(2) * t9 + qJD(3) * t105 + qJD(4) * t17, qJD(2) * t8 + qJD(3) * t25 + qJD(4) * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, t687, t587 * t779, -t480, -t587 * t780, 0, -qJD(2) * t464 - t695, qJD(2) * t463 - t694, 0, 0, t661, t703, -t344, -t661, t613, 0, -qJD(2) * t315 + t743, -qJD(2) * t316 - t742, t754 + (t450 * t837 + t452 * t508) * t841, t753 + (-t315 * t837 + t316 * t508) * t841 + t297 * qJD(3), t883 + (-qJD(1) * t405 - t686) * t339, t708 + (t444 - t446) * qJD(2) - t208, -t452 * t686 + t738, t336 * t577 - t883, -t440 - t739, -t554, t793 + (-t315 * t514 + t511 * t588) * qJD(2) + t91 * qJD(4), t792 + (t315 * t511 + t514 * t588) * qJD(2) + t89 * qJD(4), qJD(2) * t592 + t802, t803 + (t315 * t499 + t498 * t592) * qJD(2) + t53 * qJD(3), t138 * qJD(4) + t871 + (t666 + t736) * t335, t722 + t81 * qJD(4) - t121 + (-t805 - t807) * t686, t717 + (-t427 - t325) * qJD(2) + t118 * qJD(4) + t149 * qJD(5), t136 * qJD(4) - t871 + (t667 + t737) * t334, t718 + (t426 + t757) * qJD(2) + t113 * qJD(4) + t156 * qJD(5), -t883 + (-qJD(5) / 0.2e1 + t577) * t336, -t97 * t684 + t822 + t15 * qJD(4) + t31 * qJD(5) + (t334 * t498 + t397 * t450 + t825) * t686, t98 * t684 + t821 + t16 * qJD(4) + t30 * qJD(5) + (t335 * t498 + t398 * t450 + t824) * t686, t839 + (-t398 * t334 + t397 * t335 + (-t510 * t98 - t513 * t97) * t511) * qJD(2) + t4 * qJD(4), t840 + (t171 * t785 - t397 * t97 + t398 * t98) * qJD(2) + t27 * qJD(3) + t2 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t429, t600, t697, qJD(2) * t297 + t746, 0, 0, 0, 0, 0, 0, -t740, t706, t741, qJD(2) * t53 + t833, 0, 0, 0, 0, 0, 0, qJD(4) * t116 + qJD(5) * t154 + t748, qJD(4) * t193 + qJD(5) * t152 + t747, qJD(4) * t101 + t749, t818 + t27 * qJD(2) + t6 * qJD(4) + (t339 + t773 + t804) * qJD(3) * t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t882, t579, t612 * t403, t882, t612 * t405, t442, qJD(2) * t91 - qJD(4) * t189 + t750, qJD(2) * t89 + qJD(4) * t188 + t832, 0, 0, t138 * qJD(2) + t884 + (-t731 - t736) * t243, t81 * qJD(2) - t490 * t733 - t123 + t720, qJD(2) * t118 + t405 * t731 + t744, t136 * qJD(2) - t884 + (t729 - t737) * t239, qJD(2) * t113 + t405 * t729 - t745, t531, t820 + t15 * qJD(2) + t116 * qJD(3) + (-t189 * t513 + t510 * t598) * qJD(4) + t49 * qJD(5), t819 + t16 * qJD(2) + t193 * qJD(3) + (t189 * t510 + t513 * t598) * qJD(4) + t47 * qJD(5), qJD(2) * t4 + qJD(3) * t101 + qJD(4) * t593 + t826, t830 + t2 * qJD(2) + t6 * qJD(3) + (-t189 * pkin(4) + pkin(9) * t593) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t881, t541, t149 * qJD(2) + t303 * t611, t881, t156 * qJD(2) + t305 * t611, t292, qJD(2) * t31 + qJD(3) * t154 + qJD(4) * t49 - qJD(5) * t79 + t834, qJD(2) * t30 + qJD(3) * t152 + qJD(4) * t47 + qJD(5) * t78 + t835, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t480, -t687, -t515 * t602, t480, t512 * t602, 0, t695, t694, 0, 0, -t661, -t703, t600, t661, -t429, 0, qJD(3) * t452 - t743, qJD(3) * t450 + t742, -t754, qJD(3) * t298 - t753, t405 * t659 + t883, -t208 - t708, qJD(4) * t339 - t738, t511 * t662 - t883, -t331 + t739, t554, qJD(4) * t90 + t452 * t734 - t793, -qJD(3) * t787 + qJD(4) * t88 - t792, -qJD(3) * t345 - t802, qJD(3) * t54 - t803, qJD(4) * t139 - t335 * t736 + t871, qJD(4) * t82 - t121 - t722, -qJD(4) * t117 + qJD(5) * t150 - t717, qJD(4) * t137 - t334 * t737 - t871, qJD(4) * t114 + qJD(5) * t155 - t718, -t883 + (t696 + qJD(5) / 0.2e1) * t336, -qJD(3) * t170 - qJD(4) * t13 - qJD(5) * t28 - t822, -qJD(3) * t226 - qJD(4) * t14 - qJD(5) * t29 - t821, -qJD(3) * t127 - qJD(4) * t3 - t839, -qJD(3) * t26 - qJD(4) * t1 - t840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t656, t491 * qJD(4), 0, -t656, 0, 0, t499 * t730, t499 * t728, 0, 0, t506 * t656 - t607, qJD(4) * t599 - qJD(5) * t469, -qJD(4) * t471 + t511 * t664, t504 * t656 + t607, qJD(4) * t470 + t511 * t663, -t656, -qJD(4) * t224 - qJD(5) * t343, qJD(4) * t225 + qJD(5) * t342, -t159 * qJD(4), t186 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t691, t692, 0, t702, 0, 0, 0, 0, 0, 0, t658, -t699, -t698, t755, 0, 0, 0, 0, 0, 0, -t710, -t707, -t719, t752 - t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t615, t578, t700 + t728, -t615, t308, -t693, -t498 * t728 - t558, t498 * t730 - t557, 0, 0, t715 - t688 + (t506 * t686 + t494) * t514, (t501 - t782) * qJD(4) + t477 + t537, t495 + t580, t716 + t688 + (t504 * t686 - t494) * t514, t581 + t665, -t553, (t510 * t597 - t673) * qJD(4) + t350 * qJD(5) + t586, (t513 * t597 + t676) * qJD(4) + t349 * qJD(5) + t585, qJD(4) * t589 + t594, (-pkin(4) * t784 + pkin(9) * t589) * qJD(4) + t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t885, -t526, t510 * t582 + t714, t885, t513 * t582 + t711, qJD(1) * t637 + t500, qJD(4) * t350 - qJD(5) * t398 - t584, qJD(4) * t349 + qJD(5) * t397 - t583, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t613, -t344, -t697, -qJD(2) * t298 - t746, 0, 0, 0, 0, 0, 0, -t331 - t440 + t740, qJD(2) * t787 - t450 * t728 - t706, qJD(2) * t345 - t741, -qJD(2) * t54 - t833, 0, 0, 0, 0, 0, 0, qJD(2) * t170 + qJD(4) * t115 + qJD(5) * t153 - t748, qJD(2) * t226 - qJD(4) * t192 + qJD(5) * t151 - t747, qJD(2) * t127 + qJD(4) * t102 - t749, qJD(2) * t26 - qJD(4) * t5 - t818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t691, -t692, 0, -t702, 0, 0, 0, 0, 0, 0, -t658, t699, t698, -t755, 0, 0, 0, 0, 0, 0, t710, t707, t719, t752 + t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t308, t612 * t514, 0, 0, 0, 0, 0, 0, 0, 0, -t664 - t665 + t721, t495 - t663 - t709, t723 + (t501 + t782) * qJD(4), (t751 * t843 - t844) * qJD(4) - t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t510 * t728 - t513 * t685 + t712, t510 * t685 - t513 * t728 + t713, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t882, -t579, -qJD(2) * t339 + t662, -t882, qJD(2) * t336 + t405 * t692, t442, -qJD(2) * t90 + qJD(3) * t336 - t750, -qJD(2) * t88 + t450 * t734 - t832, 0, 0, -qJD(2) * t139 + t513 * t669 + t884, -qJD(2) * t82 - t123 - t720, qJD(2) * t117 + qJD(5) * t243 - t744, -qJD(2) * t137 + t510 * t670 - t884, -qJD(2) * t114 - qJD(5) * t239 + t745, -t531, qJD(2) * t13 - qJD(3) * t115 + qJD(5) * t48 - t820, qJD(2) * t14 + qJD(3) * t192 + qJD(5) * t46 - t819, qJD(2) * t3 - qJD(3) * t102 - t826, qJD(2) * t1 + qJD(3) * t5 - t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t615, -t578, -t700, t615, t701, t693, t558, t557, 0, 0, -t496 * t506 - t688 - t715, t477 - t537, -t580 - t663, -t496 * t504 + t688 - t716, -t581 + t664, t553, qJD(5) * t407 - t586, -qJD(5) * t406 - t585, -t594, -t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t701, t659, 0, 0, 0, 0, 0, 0, 0, 0, -t721, t709, -t723, t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t657, t490 * qJD(5), 0, -t657, 0, 0, -pkin(4) * t726, -pkin(4) * t725, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t880, -t525, -t513 * t610 + t704, t880, t510 * t610 - t705, -t572, -pkin(9) * t725 - t535, pkin(9) * t726 - t536, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t881, -t541, -qJD(2) * t150 - qJD(4) * t243 + t670, -t881, -qJD(2) * t155 + qJD(4) * t239 + t669, t292, qJD(2) * t28 - qJD(3) * t153 - qJD(4) * t48 - t834, qJD(2) * t29 - qJD(3) * t151 - qJD(4) * t46 - t835, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t885, t526, -t714 + (-t667 + t729) * t514, -t885, -t711 + (-t666 - t731) * t514, qJD(1) * t638 + t500, -qJD(4) * t407 + t584, qJD(4) * t406 + t583, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t712, -t713, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t880, t525, t513 * t684 - t704, -t880, -t510 * t684 + t705, t572, t535, t536, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t7;
