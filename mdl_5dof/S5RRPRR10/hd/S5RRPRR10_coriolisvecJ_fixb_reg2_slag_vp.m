% Calculate inertial parameters regressor of coriolis joint torque vector for
% S5RRPRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% tauc_reg [5x(5*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:28
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S5RRPRR10_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR10_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR10_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRPRR10_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:26:40
% EndTime: 2019-12-31 20:26:56
% DurationCPUTime: 6.26s
% Computational Cost: add. (9376->483), mult. (28560->673), div. (0->0), fcn. (22431->10), ass. (0->238)
t167 = sin(pkin(5));
t174 = cos(qJ(2));
t262 = t167 * t174;
t272 = cos(pkin(10));
t211 = t272 * t262;
t150 = qJD(1) * t211;
t166 = sin(pkin(10));
t171 = sin(qJ(2));
t253 = qJD(1) * t167;
t237 = t171 * t253;
t128 = t166 * t237 - t150;
t194 = qJD(4) + t128;
t196 = t166 * t174 + t272 * t171;
t297 = t196 * t167;
t132 = qJD(1) * t297;
t170 = sin(qJ(4));
t173 = cos(qJ(4));
t168 = cos(pkin(5));
t252 = qJD(1) * t168;
t218 = qJD(2) + t252;
t222 = t170 * t132 - t173 * t218;
t294 = qJD(5) + t222;
t101 = t173 * t132 + t170 * t218;
t169 = sin(qJ(5));
t172 = cos(qJ(5));
t189 = t172 * t194;
t62 = t101 * t169 - t189;
t314 = t294 * t62;
t64 = t172 * t101 + t169 * t194;
t313 = t294 * t64;
t159 = t168 * t174 * pkin(1);
t155 = qJD(1) * t159;
t286 = pkin(7) + qJ(3);
t231 = t286 * t171;
t213 = t167 * t231;
t117 = -qJD(1) * t213 + t155;
t291 = pkin(1) * t171;
t158 = t168 * t291;
t293 = t286 * t262 + t158;
t118 = t293 * qJD(1);
t226 = t272 * t118;
t75 = t117 * t166 + t226;
t312 = t75 - t194 * (pkin(4) * t170 - pkin(9) * t173);
t290 = t166 * pkin(2);
t161 = pkin(8) + t290;
t244 = t170 * qJD(4);
t107 = t166 * t118;
t76 = t272 * t117 - t107;
t220 = pkin(2) * t237;
t85 = pkin(3) * t132 + pkin(8) * t128 + t220;
t39 = t170 * t85 + t173 * t76;
t311 = pkin(9) * t132 + t161 * t244 + t39;
t248 = qJD(4) * t173;
t258 = t173 * t128;
t91 = t132 * t169 - t172 * t258;
t310 = -t172 * t248 + t91;
t295 = qJD(4) * t194;
t309 = t173 * t295;
t249 = qJD(3) * t171;
t176 = -t293 * qJD(2) - t167 * t249;
t308 = t176 * t166;
t153 = qJD(2) * t155;
t185 = (-qJD(2) * t231 + qJD(3) * t174) * t167;
t95 = qJD(1) * t185 + t153;
t230 = t272 * t95;
t46 = qJD(1) * t308 + t230;
t193 = t168 * pkin(2) - t213;
t102 = qJD(2) * pkin(2) + qJD(1) * t193 + t155;
t58 = t166 * t102 + t226;
t49 = t218 * pkin(8) + t58;
t146 = (-pkin(2) * t174 - pkin(1)) * t167;
t254 = qJD(1) * t146;
t142 = qJD(3) + t254;
t69 = pkin(3) * t128 - pkin(8) * t132 + t142;
t243 = qJD(1) * qJD(2);
t228 = t167 * t243;
t212 = t171 * t228;
t124 = qJD(2) * t150 - t166 * t212;
t152 = pkin(2) * t212;
t184 = qJD(2) * t297;
t181 = qJD(1) * t184;
t70 = pkin(3) * t181 - t124 * pkin(8) + t152;
t197 = -t170 * t70 - t173 * t46 + t49 * t244 - t69 * t248;
t30 = -t170 * t49 + t173 * t69;
t307 = -t194 * t30 - t197;
t97 = t272 * t176;
t45 = -qJD(1) * t97 + t166 * t95;
t259 = t173 * t124;
t60 = qJD(4) * t222 - t259;
t261 = t170 * t124;
t61 = qJD(4) * t101 + t261;
t22 = pkin(4) * t61 + pkin(9) * t60 + t45;
t31 = t170 * t69 + t173 * t49;
t25 = pkin(9) * t194 + t31;
t57 = t272 * t102 - t107;
t48 = -t218 * pkin(3) - t57;
t29 = pkin(4) * t222 - t101 * pkin(9) + t48;
t6 = t169 * t29 + t172 * t25;
t191 = qJD(2) * t196;
t131 = t167 * t191;
t180 = qJD(1) * t131;
t7 = pkin(9) * t180 - t197;
t2 = -qJD(5) * t6 - t169 * t7 + t172 * t22;
t306 = -t294 * t6 - t2;
t204 = t169 * t25 - t172 * t29;
t1 = -t204 * qJD(5) + t169 * t22 + t172 * t7;
t305 = t294 * t204 + t1;
t163 = t167 ^ 2;
t229 = t163 * t243;
t304 = -0.2e1 * t229;
t302 = t194 * t62;
t246 = qJD(5) * t172;
t90 = -t172 * t132 - t169 * t258;
t208 = t170 * t246 - t90;
t301 = t208 * t64;
t221 = t194 * t170;
t300 = t101 * t221;
t299 = t128 * t218;
t298 = t169 * t294;
t296 = -t170 * t180 - t309;
t269 = qJD(5) * t64;
t28 = -t169 * t60 - t172 * t180 + t269;
t116 = t159 + t193;
t256 = pkin(7) * t262 + t158;
t126 = qJ(3) * t262 + t256;
t83 = t166 * t116 + t272 * t126;
t72 = pkin(8) * t168 + t83;
t263 = t167 * t171;
t136 = t166 * t263 - t211;
t89 = pkin(3) * t136 - pkin(8) * t297 + t146;
t282 = t170 * t89 + t173 * t72;
t156 = qJD(2) * t159;
t103 = t156 + t185;
t51 = t272 * t103 + t308;
t251 = qJD(2) * t171;
t236 = t167 * t251;
t130 = -qJD(2) * t211 + t166 * t236;
t219 = pkin(2) * t236;
t86 = pkin(3) * t131 + pkin(8) * t130 + t219;
t18 = -qJD(4) * t282 - t170 * t51 + t173 * t86;
t292 = t132 ^ 2;
t175 = qJD(1) ^ 2;
t289 = t64 * t62;
t288 = t90 * t294;
t287 = t91 * t294;
t238 = t272 * pkin(2);
t162 = -t238 - pkin(3);
t145 = -t173 * pkin(4) - t170 * pkin(9) + t162;
t265 = t161 * t173;
t106 = t145 * t169 + t172 * t265;
t285 = t106 * qJD(5) - t311 * t169 + t312 * t172;
t105 = t145 * t172 - t169 * t265;
t284 = -t105 * qJD(5) + t312 * t169 + t311 * t172;
t283 = -t170 * t61 - t222 * t248;
t281 = t101 * t222;
t110 = -t168 * t173 + t170 * t297;
t280 = t110 * t61;
t279 = t128 * t31;
t278 = t128 * t64;
t277 = t128 * t222;
t276 = t132 * t222;
t275 = t169 * t61;
t274 = t172 * t61;
t273 = t173 * t61;
t271 = qJD(4) * t294;
t270 = qJD(5) * t62;
t268 = t101 * t132;
t267 = t132 * t128;
t266 = t132 * t168;
t264 = t163 * t175;
t260 = t170 * t172;
t255 = t171 ^ 2 - t174 ^ 2;
t250 = qJD(2) * t174;
t247 = qJD(5) * t169;
t245 = t132 * qJD(2);
t242 = t169 * t271;
t241 = t172 * t271;
t240 = t64 * t248;
t239 = t174 * t264;
t234 = t167 * t168 * t175;
t227 = -t170 * t46 + t173 * t70;
t27 = -qJD(5) * t189 + t101 * t247 - t169 * t180 + t172 * t60;
t225 = -t27 + t270;
t50 = t103 * t166 - t97;
t223 = t172 * t294;
t217 = qJD(2) + 0.2e1 * t252;
t216 = t171 * t239;
t8 = -pkin(4) * t180 + t69 * t244 + t49 * t248 - t227;
t215 = pkin(9) * qJD(5) * t294 + t8;
t214 = -t28 * t260 + t310 * t62;
t210 = pkin(1) * t304;
t207 = -t169 * t6 + t172 * t204;
t206 = -t169 * t204 - t172 * t6;
t37 = pkin(9) * t136 + t282;
t111 = t168 * t170 + t173 * t297;
t82 = t272 * t116 - t166 * t126;
t71 = -t168 * pkin(3) - t82;
t40 = t110 * pkin(4) - t111 * pkin(9) + t71;
t14 = t169 * t40 + t172 * t37;
t13 = -t169 * t37 + t172 * t40;
t41 = -t170 * t72 + t173 * t89;
t38 = -t170 * t76 + t173 * t85;
t88 = t111 * t172 + t136 * t169;
t87 = t111 * t169 - t136 * t172;
t201 = t171 * t174 * t229;
t200 = -t246 * t294 - t275;
t199 = -t247 * t294 + t274;
t24 = -pkin(4) * t194 - t30;
t198 = -pkin(9) * t61 + t24 * t294;
t17 = t170 * t86 + t173 * t51 - t72 * t244 + t89 * t248;
t134 = -pkin(7) * t212 + t153;
t141 = t256 * qJD(2);
t190 = t128 * t194;
t178 = t207 * qJD(5) + t1 * t172 - t169 * t2;
t177 = t173 * t180 + (-t295 - t190) * t170;
t143 = -pkin(7) * t263 + t159;
t140 = -pkin(7) * t236 + t156;
t139 = t256 * qJD(1);
t138 = -pkin(7) * t237 + t155;
t135 = qJD(1) * t141;
t125 = t128 ^ 2;
t81 = -t110 * qJD(4) - t130 * t173;
t80 = t111 * qJD(4) - t130 * t170;
t54 = t64 * t244;
t52 = pkin(4) * t101 + pkin(9) * t222;
t36 = -pkin(4) * t136 - t41;
t35 = -t87 * qJD(5) + t131 * t169 + t172 * t81;
t34 = t88 * qJD(5) - t131 * t172 + t169 * t81;
t32 = -pkin(4) * t132 - t38;
t23 = pkin(4) * t80 - pkin(9) * t81 + t50;
t20 = t169 * t52 + t172 * t30;
t19 = -t169 * t30 + t172 * t52;
t12 = -pkin(4) * t131 - t18;
t11 = pkin(9) * t131 + t17;
t10 = -qJD(4) * t31 + t227;
t4 = -t14 * qJD(5) - t11 * t169 + t172 * t23;
t3 = t13 * qJD(5) + t11 * t172 + t169 * t23;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t201, t255 * t304, t217 * t167 * t250, -0.2e1 * t201, -t217 * t236, 0, -t135 * t168 - t141 * t218 + t171 * t210, -t134 * t168 - t140 * t218 + t174 * t210, (t134 * t174 + t135 * t171 + (-t138 * t174 - t139 * t171) * qJD(2) + (t140 * t174 + t141 * t171 + (-t143 * t174 - t171 * t256) * qJD(2)) * qJD(1)) * t167, t134 * t256 - t135 * t143 - t138 * t141 + t139 * t140, t124 * t297 - t130 * t132, -t124 * t136 + t130 * t128 - t132 * t131 - t181 * t297, t124 * t168 - t130 * t218, t128 * t131 + t136 * t181, -t131 * qJD(2) + (-t131 - t184) * t252, 0, t128 * t219 + t142 * t131 + t136 * t152 + t146 * t180 - t45 * t168 - t218 * t50, t146 * t124 - t142 * t130 + 0.2e1 * t132 * t219 - t46 * t168 - t51 * t218, -t82 * t124 - t51 * t128 + t57 * t130 - t58 * t131 + t50 * t132 - t46 * t136 - t181 * t83 + t297 * t45, -t45 * t82 + t46 * t83 - t50 * t57 + t51 * t58 + (t142 + t254) * t219, t101 * t81 - t111 * t60, -t101 * t80 + t110 * t60 - t111 * t61 - t222 * t81, t101 * t131 + t111 * t180 - t60 * t136 + t194 * t81, t222 * t80 + t280, -t110 * t180 - t131 * t222 - t61 * t136 - t194 * t80, (qJD(4) - t150) * t131 + (t171 * t166 * t131 + t136 * t191) * t253, t10 * t136 + t45 * t110 + t30 * t131 + t18 * t194 + t180 * t41 + t222 * t50 + t48 * t80 + t71 * t61, t50 * t101 + t45 * t111 - t31 * t131 + t136 * t197 - t17 * t194 - t181 * t282 + t48 * t81 - t71 * t60, -t10 * t111 - t101 * t18 + t110 * t197 - t17 * t222 - t282 * t61 - t30 * t81 - t31 * t80 + t41 * t60, t10 * t41 + t17 * t31 + t18 * t30 - t197 * t282 + t45 * t71 + t48 * t50, -t27 * t88 + t35 * t64, t27 * t87 - t28 * t88 - t34 * t64 - t35 * t62, -t110 * t27 + t294 * t35 + t61 * t88 + t64 * t80, t28 * t87 + t34 * t62, -t110 * t28 - t294 * t34 - t61 * t87 - t62 * t80, t294 * t80 + t280, t110 * t2 + t12 * t62 + t13 * t61 - t204 * t80 + t24 * t34 + t28 * t36 + t294 * t4 + t8 * t87, -t1 * t110 + t12 * t64 - t14 * t61 + t24 * t35 - t27 * t36 - t294 * t3 - t6 * t80 + t8 * t88, -t1 * t87 + t13 * t27 - t14 * t28 - t2 * t88 + t204 * t35 - t3 * t62 - t34 * t6 - t4 * t64, t1 * t14 + t12 * t24 + t13 * t2 - t204 * t4 + t3 * t6 + t36 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, t255 * t264, -t174 * t234, t216, t171 * t234, 0, -t174 * pkin(7) * t228 + t139 * t218 + (-t168 * t243 + t264) * t291, pkin(1) * t239 + t138 * t218 - t134, 0, 0, t267, -t125 + t292, t124 + t299, -t267, t245 + (-t184 + t266) * qJD(1), 0, -t128 * t220 - t142 * t132 + t218 * t75 - t45, -t230 + t76 * qJD(2) + t142 * t128 + ((t166 * pkin(1) * t251 + t76) * t168 + (-t166 * (-t286 * t250 - t249) - t171 * pkin(2) * t132) * t167) * qJD(1), -t124 * t238 - t181 * t290 - (-t58 + t75) * t132 + (t76 - t57) * t128, t57 * t75 - t58 * t76 + (-t142 * t237 + t166 * t46 - t272 * t45) * pkin(2), t194 * t173 * t101 - t170 * t60, (-t60 - t277) * t173 - t300 + t283, t173 * t190 - t268 - t296, t221 * t222 - t273, t177 + t276, -t194 * t132, -t30 * t132 + t162 * t61 - t45 * t173 - t194 * t38 - t75 * t222 + (t128 * t170 + t244) * t48 + t296 * t161, -t75 * t101 + t31 * t132 - t162 * t60 - t181 * t265 + t194 * t39 + (t248 + t258) * t48 + (t161 * t295 + t45) * t170, t101 * t38 + t39 * t222 + (-t128 * t30 - t161 * t61 - t197 + (t101 * t161 - t30) * qJD(4)) * t173 + (-t279 - t161 * t60 - t10 + (t161 * t222 - t31) * qJD(4)) * t170, t162 * t45 - t30 * t38 - t31 * t39 - t48 * t75 + (-t10 * t170 - t173 * t197 + (-t170 * t31 - t173 * t30) * qJD(4)) * t161, -t27 * t260 + (-t170 * t247 - t310) * t64, -t301 + (-t240 + (t27 + t270) * t170) * t169 + t214, -t287 + t54 + (t27 + t241) * t173 + (t199 + t278) * t170, t169 * t170 * t28 + (t169 * t248 + t208) * t62, t288 + (t28 - t242) * t173 + (t200 - t302) * t170, t221 * t294 - t273, t105 * t61 - t24 * t90 - t32 * t62 - t285 * t294 + (-t2 + (t161 * t62 + t169 * t24) * qJD(4)) * t173 + (t161 * t28 + t169 * t8 - t194 * t204 + t24 * t246) * t170, -t106 * t61 - t24 * t91 - t32 * t64 + t284 * t294 + (t1 + (t161 * t64 + t172 * t24) * qJD(4)) * t173 + (-t161 * t27 + t172 * t8 - t194 * t6 - t24 * t247) * t170, t105 * t27 - t106 * t28 - t204 * t91 + t6 * t90 + t285 * t64 + t284 * t62 + t207 * t248 + (qJD(5) * t206 - t1 * t169 - t172 * t2) * t170, t1 * t106 + t105 * t2 - t24 * t32 - t284 * t6 + t285 * t204 + (t170 * t8 + t24 * t248) * t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245 + (t131 + t266) * qJD(1), t124 - t299, -t125 - t292, t128 * t58 + t132 * t57 + t152, 0, 0, 0, 0, 0, 0, t177 - t276, -t170 * t181 - t194 * t258 - t268 - t309, (t60 - t277) * t173 + t300 + t283, -t132 * t48 + (t194 * t31 + t10) * t173 + t307 * t170, 0, 0, 0, 0, 0, 0, t288 + (-t28 - t242) * t173 + (t200 + t302) * t170, t287 + t54 + (t27 - t241) * t173 + (-t199 + t278) * t170, t301 + (t170 * t225 + t240) * t169 + t214, -t204 * t90 - t6 * t91 + (-qJD(4) * t206 - t8) * t173 + (t194 * t24 + t178) * t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t281, t101 ^ 2 - t222 ^ 2, t259 + t277, -t281, t101 * t128 - t261, t180, -t48 * t101 + t227 + t279, t222 * t48 - t307, 0, 0, -t169 * t27 + t223 * t64, (-t27 - t314) * t172 + (-t28 - t313) * t169, -t101 * t64 + t223 * t294 + t275, -t172 * t28 + t298 * t62, t101 * t62 - t294 * t298 + t274, -t294 * t101, -pkin(4) * t28 + t101 * t204 + t169 * t198 - t172 * t215 - t19 * t294 - t31 * t62, pkin(4) * t27 + t101 * t6 + t169 * t215 + t172 * t198 + t20 * t294 - t31 * t64, t19 * t64 + t20 * t62 + ((-t28 + t269) * pkin(9) + t305) * t172 + (pkin(9) * t225 + t306) * t169, -pkin(4) * t8 + pkin(9) * t178 + t19 * t204 - t20 * t6 - t24 * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, -t62 ^ 2 + t64 ^ 2, -t27 + t314, -t289, -t28 + t313, t61, -t24 * t64 - t306, t24 * t62 - t305, 0, 0;];
tauc_reg = t5;
