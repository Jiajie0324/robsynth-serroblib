% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPRR10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:28
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPRR10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR10_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR10_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRR10_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRR10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRPRR10_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:27:26
% EndTime: 2019-12-31 20:27:59
% DurationCPUTime: 34.12s
% Computational Cost: add. (263355->862), mult. (696387->1320), div. (0->0), fcn. (545802->12), ass. (0->622)
t1548 = cos(qJ(4));
t1716 = -pkin(4) * t1548 - pkin(3);
t1539 = sin(pkin(10));
t1541 = cos(pkin(10));
t1540 = sin(pkin(5));
t1549 = cos(qJ(2));
t1678 = t1540 * t1549;
t1652 = qJD(1) * t1678;
t1545 = sin(qJ(2));
t1679 = t1540 * t1545;
t1653 = qJD(1) * t1679;
t1496 = t1539 * t1653 - t1541 * t1652;
t1498 = t1539 * t1652 + t1541 * t1653;
t1463 = t1498 * t1496;
t1542 = cos(pkin(5));
t1531 = t1542 * qJDD(1) + qJDD(2);
t1704 = -t1463 + t1531;
t1715 = t1539 * t1704;
t1714 = t1541 * t1704;
t1543 = sin(qJ(5));
t1532 = t1542 * qJD(1) + qJD(2);
t1544 = sin(qJ(4));
t1476 = t1548 * t1498 + t1544 * t1532;
t1547 = cos(qJ(5));
t1583 = qJD(4) + t1496;
t1438 = t1543 * t1476 - t1547 * t1583;
t1440 = t1547 * t1476 + t1543 * t1583;
t1379 = t1440 * t1438;
t1656 = qJDD(1) * t1545;
t1691 = qJD(1) * t1549;
t1504 = (qJD(2) * t1691 + t1656) * t1540;
t1657 = qJDD(1) * t1540;
t1505 = -qJD(2) * t1653 + t1549 * t1657;
t1464 = t1541 * t1504 + t1539 * t1505;
t1638 = -t1544 * t1464 + t1548 * t1531;
t1587 = t1476 * qJD(4) - t1638;
t1399 = qJDD(5) + t1587;
t1706 = -t1379 + t1399;
t1713 = t1543 * t1706;
t1474 = t1544 * t1498 - t1548 * t1532;
t1426 = t1476 * t1474;
t1637 = t1539 * t1504 - t1541 * t1505;
t1462 = qJDD(4) + t1637;
t1705 = -t1426 + t1462;
t1712 = t1544 * t1705;
t1711 = t1547 * t1706;
t1710 = t1548 * t1705;
t1446 = t1583 * t1476;
t1709 = t1587 + t1446;
t1580 = t1583 ^ 2;
t1536 = t1540 ^ 2;
t1551 = qJD(1) ^ 2;
t1692 = qJD(1) * t1532;
t1708 = t1536 * (-t1542 * t1551 + t1692);
t1513 = t1532 * t1653;
t1482 = t1505 - t1513;
t1707 = t1542 * t1482;
t1546 = sin(qJ(1));
t1550 = cos(qJ(1));
t1525 = t1546 * g(1) - t1550 * g(2);
t1694 = pkin(7) * t1540;
t1564 = qJDD(1) * pkin(1) + t1551 * t1694 + t1525;
t1558 = t1542 * t1564;
t1526 = t1550 * g(1) + t1546 * g(2);
t1559 = -t1551 * pkin(1) + pkin(7) * t1657 - t1526;
t1452 = -g(3) * t1679 + t1545 * t1558 + t1549 * t1559;
t1584 = -t1532 * pkin(2) + qJ(3) * t1653;
t1538 = t1549 ^ 2;
t1683 = t1536 * t1551;
t1650 = t1538 * t1683;
t1391 = -pkin(2) * t1650 + t1505 * qJ(3) + t1532 * t1584 + t1452;
t1677 = t1541 * t1391;
t1556 = t1545 * t1559 - t1549 * t1558;
t1667 = t1545 * t1551;
t1649 = t1536 * t1667;
t1693 = t1504 * qJ(3);
t1702 = t1531 * pkin(2) - t1556 + (pkin(2) * t1649 + (qJ(3) * t1692 - g(3)) * t1540) * t1549 - t1693;
t1554 = t1539 * t1702 + t1677;
t1700 = 2 * qJD(3);
t1660 = t1496 * pkin(3) - t1498 * pkin(8) + t1700;
t1701 = t1532 ^ 2;
t1272 = -pkin(3) * t1701 + t1531 * pkin(8) - t1660 * t1496 + t1554;
t1487 = t1542 * g(3) + t1540 * t1564;
t1419 = t1505 * pkin(2) + qJ(3) * t1650 + t1584 * t1653 - qJDD(3) + t1487;
t1686 = t1532 * t1498;
t1427 = t1637 + t1686;
t1486 = t1532 * t1496;
t1703 = -t1486 + t1464;
t1553 = t1427 * pkin(3) - pkin(8) * t1703 - t1419;
t1222 = t1544 * t1272 - t1548 * t1553;
t1223 = t1548 * t1272 + t1544 * t1553;
t1150 = t1544 * t1222 + t1548 * t1223;
t1595 = -t1548 * t1464 - t1544 * t1531;
t1405 = -t1474 * qJD(4) - t1595;
t1445 = t1583 * t1474;
t1365 = t1405 - t1445;
t1514 = t1532 * t1652;
t1479 = t1514 + t1504;
t1524 = t1549 * t1649;
t1502 = t1531 + t1524;
t1436 = t1438 ^ 2;
t1437 = t1440 ^ 2;
t1470 = qJD(5) + t1474;
t1468 = t1470 ^ 2;
t1471 = t1474 ^ 2;
t1472 = t1476 ^ 2;
t1494 = t1496 ^ 2;
t1495 = t1498 ^ 2;
t1699 = pkin(2) * t1540;
t1698 = pkin(2) * t1542;
t1697 = pkin(3) * t1539;
t1696 = pkin(4) * t1544;
t1690 = qJD(3) * t1496;
t1640 = t1539 * t1391 - t1541 * t1702;
t1309 = t1498 * t1700 + t1640;
t1310 = t1554 - 0.2e1 * t1690;
t1228 = -t1541 * t1309 + t1539 * t1310;
t1689 = t1228 * t1549;
t1688 = t1470 * t1543;
t1687 = t1470 * t1547;
t1685 = t1532 * t1539;
t1684 = t1532 * t1541;
t1682 = t1539 * t1419;
t1455 = t1463 + t1531;
t1681 = t1539 * t1455;
t1680 = t1540 * t1531;
t1676 = t1541 * t1419;
t1675 = t1541 * t1455;
t1424 = t1474 * pkin(4) - t1476 * pkin(9);
t1191 = -t1462 * pkin(4) - pkin(9) * t1580 + t1476 * t1424 + t1222;
t1674 = t1543 * t1191;
t1321 = t1379 + t1399;
t1673 = t1543 * t1321;
t1271 = -t1531 * pkin(3) - pkin(8) * t1701 + t1660 * t1498 + t1640;
t1267 = t1544 * t1271;
t1383 = t1426 + t1462;
t1672 = t1544 * t1383;
t1671 = t1545 * t1228;
t1670 = t1545 * t1487;
t1669 = t1545 * t1502;
t1503 = -t1524 + t1531;
t1668 = t1545 * t1503;
t1666 = t1547 * t1191;
t1665 = t1547 * t1321;
t1268 = t1548 * t1271;
t1664 = t1548 * t1383;
t1663 = t1549 * t1487;
t1662 = t1549 * t1502;
t1661 = t1549 * t1503;
t1659 = -pkin(3) * t1271 + pkin(8) * t1150;
t1537 = t1545 ^ 2;
t1658 = t1537 + t1538;
t1655 = -pkin(3) * t1541 - pkin(2);
t1654 = t1540 * t1692;
t1651 = t1537 * t1683;
t1648 = t1539 * t1426;
t1647 = t1540 * t1463;
t1646 = t1541 * t1426;
t1645 = t1542 * t1463;
t1644 = t1544 * t1379;
t1643 = t1548 * t1379;
t1412 = -t1472 - t1580;
t1339 = -t1544 * t1412 - t1664;
t1367 = (0.2e1 * qJD(4) + t1496) * t1474 + t1595;
t1642 = pkin(3) * t1367 + pkin(8) * t1339 + t1267;
t1398 = -t1580 - t1471;
t1325 = t1548 * t1398 - t1712;
t1641 = -pkin(3) * t1709 + pkin(8) * t1325 - t1268;
t1192 = -pkin(4) * t1580 + t1462 * pkin(9) - t1474 * t1424 + t1223;
t1213 = t1709 * pkin(4) - t1365 * pkin(9) + t1271;
t1136 = t1543 * t1192 - t1547 * t1213;
t1137 = t1547 * t1192 + t1543 * t1213;
t1095 = t1543 * t1136 + t1547 * t1137;
t1229 = t1539 * t1309 + t1541 * t1310;
t1639 = -t1543 * t1405 + t1547 * t1462;
t1636 = -t1546 * t1525 - t1550 * t1526;
t1353 = -t1468 - t1436;
t1241 = t1543 * t1353 + t1711;
t1119 = -pkin(4) * t1241 + t1136;
t1145 = -pkin(9) * t1241 + t1674;
t1242 = t1547 * t1353 - t1713;
t1333 = -t1440 * qJD(5) + t1639;
t1395 = t1470 * t1440;
t1278 = t1333 - t1395;
t1196 = t1548 * t1242 - t1544 * t1278;
t1635 = -pkin(3) * t1241 + pkin(8) * t1196 + t1548 * t1119 + t1544 * t1145;
t1376 = -t1437 - t1468;
t1250 = t1547 * t1376 - t1673;
t1121 = -pkin(4) * t1250 + t1137;
t1152 = -pkin(9) * t1250 + t1666;
t1251 = -t1543 * t1376 - t1665;
t1602 = -t1547 * t1405 - t1543 * t1462;
t1282 = (qJD(5) + t1470) * t1438 + t1602;
t1200 = t1548 * t1251 - t1544 * t1282;
t1634 = -pkin(3) * t1250 + pkin(8) * t1200 + t1548 * t1121 + t1544 * t1152;
t1364 = t1476 * t1496 + t1638;
t1366 = t1405 + t1445;
t1289 = t1548 * t1364 + t1544 * t1366;
t1390 = t1471 + t1472;
t1633 = pkin(3) * t1390 + pkin(8) * t1289 + t1150;
t1632 = -pkin(4) * t1191 + pkin(9) * t1095;
t1523 = t1550 * qJDD(1) - t1546 * t1551;
t1631 = -pkin(6) * t1523 - t1546 * g(3);
t1493 = -t1701 - t1651;
t1457 = -t1545 * t1493 - t1661;
t1630 = pkin(7) * t1457 - t1670;
t1509 = -t1701 - t1650;
t1467 = t1549 * t1509 - t1669;
t1629 = pkin(7) * t1467 + t1663;
t1081 = t1548 * t1095 + t1544 * t1191;
t1094 = -t1547 * t1136 + t1543 * t1137;
t1059 = t1539 * t1081 - t1541 * t1094;
t1060 = t1541 * t1081 + t1539 * t1094;
t1627 = t1059 * t1549 + t1060 * t1545;
t1279 = (-qJD(5) + t1470) * t1440 + t1639;
t1334 = -t1438 * qJD(5) - t1602;
t1394 = t1470 * t1438;
t1281 = t1334 + t1394;
t1218 = t1547 * t1279 + t1543 * t1281;
t1342 = t1436 + t1437;
t1180 = t1548 * t1218 - t1544 * t1342;
t1216 = t1543 * t1279 - t1547 * t1281;
t1126 = t1539 * t1180 - t1541 * t1216;
t1127 = t1541 * t1180 + t1539 * t1216;
t1626 = t1126 * t1549 + t1127 * t1545;
t1128 = t1539 * t1150 - t1541 * t1271;
t1129 = t1541 * t1150 + t1539 * t1271;
t1625 = t1128 * t1549 + t1129 * t1545;
t1280 = t1334 - t1394;
t1217 = t1547 * t1278 - t1543 * t1280;
t1378 = t1437 - t1436;
t1188 = t1548 * t1217 + t1544 * t1378;
t1215 = t1543 * t1278 + t1547 * t1280;
t1131 = t1539 * t1188 - t1541 * t1215;
t1132 = t1541 * t1188 + t1539 * t1215;
t1624 = t1131 * t1549 + t1132 * t1545;
t1146 = t1539 * t1196 - t1541 * t1241;
t1147 = t1541 * t1196 + t1539 * t1241;
t1623 = t1146 * t1549 + t1147 * t1545;
t1159 = t1539 * t1200 - t1541 * t1250;
t1160 = t1541 * t1200 + t1539 * t1250;
t1622 = t1159 * t1549 + t1160 * t1545;
t1393 = -t1437 + t1468;
t1265 = -t1543 * t1393 + t1711;
t1205 = t1548 * t1265 + t1544 * t1281;
t1263 = t1547 * t1393 + t1713;
t1164 = t1539 * t1205 - t1541 * t1263;
t1166 = t1541 * t1205 + t1539 * t1263;
t1621 = t1164 * t1549 + t1166 * t1545;
t1392 = t1436 - t1468;
t1266 = t1547 * t1392 - t1673;
t1277 = -t1333 - t1395;
t1206 = t1548 * t1266 - t1544 * t1277;
t1264 = t1543 * t1392 + t1665;
t1165 = t1539 * t1206 - t1541 * t1264;
t1167 = t1541 * t1206 + t1539 * t1264;
t1620 = t1165 * t1549 + t1167 * t1545;
t1274 = -t1543 * t1333 + t1438 * t1687;
t1236 = t1548 * t1274 - t1644;
t1273 = -t1547 * t1333 - t1438 * t1688;
t1182 = t1539 * t1236 + t1541 * t1273;
t1184 = t1541 * t1236 - t1539 * t1273;
t1619 = t1182 * t1549 + t1184 * t1545;
t1276 = t1547 * t1334 - t1440 * t1688;
t1237 = t1548 * t1276 + t1644;
t1275 = t1543 * t1334 + t1440 * t1687;
t1183 = t1539 * t1237 - t1541 * t1275;
t1185 = t1541 * t1237 + t1539 * t1275;
t1618 = t1183 * t1549 + t1185 * t1545;
t1149 = -t1548 * t1222 + t1544 * t1223;
t1336 = (-t1438 * t1547 + t1440 * t1543) * t1470;
t1285 = t1548 * t1336 + t1544 * t1399;
t1335 = (-t1438 * t1543 - t1440 * t1547) * t1470;
t1226 = t1539 * t1285 - t1541 * t1335;
t1227 = t1541 * t1285 + t1539 * t1335;
t1617 = t1226 * t1549 + t1227 * t1545;
t1616 = t1229 * t1545 + t1689;
t1238 = t1539 * t1289 + t1541 * t1390;
t1239 = t1541 * t1289 - t1539 * t1390;
t1615 = t1238 * t1549 + t1239 * t1545;
t1288 = -t1544 * t1365 - t1548 * t1709;
t1425 = t1472 - t1471;
t1243 = t1539 * t1288 - t1541 * t1425;
t1244 = t1541 * t1288 + t1539 * t1425;
t1614 = t1243 * t1549 + t1244 * t1545;
t1247 = t1539 * t1325 - t1541 * t1709;
t1248 = t1541 * t1325 + t1539 * t1709;
t1613 = t1247 * t1549 + t1248 * t1545;
t1252 = t1539 * t1339 + t1541 * t1367;
t1253 = t1541 * t1339 - t1539 * t1367;
t1612 = t1252 * t1549 + t1253 * t1545;
t1444 = -t1472 + t1580;
t1348 = -t1544 * t1444 + t1710;
t1258 = t1539 * t1348 - t1541 * t1366;
t1260 = t1541 * t1348 + t1539 * t1366;
t1611 = t1258 * t1549 + t1260 * t1545;
t1443 = t1471 - t1580;
t1349 = t1548 * t1443 - t1672;
t1362 = -t1446 + t1587;
t1259 = t1539 * t1349 + t1541 * t1362;
t1261 = t1541 * t1349 - t1539 * t1362;
t1610 = t1259 * t1549 + t1261 * t1545;
t1561 = t1548 * t1445;
t1357 = t1544 * t1587 + t1561;
t1311 = t1539 * t1357 + t1646;
t1313 = t1541 * t1357 - t1648;
t1609 = t1311 * t1549 + t1313 * t1545;
t1562 = t1544 * t1446;
t1359 = t1548 * t1405 - t1562;
t1312 = t1539 * t1359 - t1646;
t1314 = t1541 * t1359 + t1648;
t1608 = t1312 * t1549 + t1314 * t1545;
t1381 = -t1561 + t1562;
t1351 = t1539 * t1381 - t1541 * t1462;
t1352 = t1541 * t1381 + t1539 * t1462;
t1607 = t1351 * t1549 + t1352 * t1545;
t1370 = -t1539 * t1427 + t1541 * t1703;
t1372 = -t1541 * t1427 - t1539 * t1703;
t1606 = t1370 * t1549 + t1372 * t1545;
t1432 = t1486 + t1464;
t1586 = -t1637 + t1686;
t1371 = -t1541 * t1432 + t1539 * t1586;
t1373 = t1539 * t1432 + t1541 * t1586;
t1605 = t1371 * t1549 + t1373 * t1545;
t1453 = -t1701 - t1494;
t1386 = t1539 * t1453 + t1714;
t1387 = t1541 * t1453 - t1715;
t1604 = t1386 * t1549 + t1387 * t1545;
t1469 = -t1495 - t1701;
t1396 = t1541 * t1469 - t1681;
t1397 = -t1539 * t1469 - t1675;
t1603 = t1396 * t1549 + t1397 * t1545;
t1484 = -t1495 + t1701;
t1406 = t1541 * t1484 + t1715;
t1408 = -t1539 * t1484 + t1714;
t1601 = t1406 * t1549 + t1408 * t1545;
t1483 = t1494 - t1701;
t1407 = t1539 * t1483 + t1675;
t1409 = t1541 * t1483 - t1681;
t1600 = t1407 * t1549 + t1409 * t1545;
t1420 = t1496 * t1685 - t1541 * t1637;
t1421 = t1496 * t1684 + t1539 * t1637;
t1599 = t1420 * t1549 + t1421 * t1545;
t1422 = t1539 * t1464 + t1498 * t1684;
t1423 = t1541 * t1464 - t1498 * t1685;
t1598 = t1422 * t1549 + t1423 * t1545;
t1441 = (-t1496 * t1539 - t1498 * t1541) * t1532;
t1442 = (-t1496 * t1541 + t1498 * t1539) * t1532;
t1597 = t1441 * t1549 + t1442 * t1545;
t1451 = g(3) * t1678 + t1556;
t1596 = -t1549 * t1451 + t1545 * t1452;
t1385 = t1545 * t1451 + t1549 * t1452;
t1594 = t1479 * t1549 + t1482 * t1545;
t1480 = -t1514 + t1504;
t1481 = t1505 + t1513;
t1593 = -t1480 * t1549 + t1481 * t1545;
t1592 = t1493 * t1549 - t1668;
t1507 = t1701 - t1651;
t1591 = t1507 * t1549 + t1669;
t1590 = t1509 * t1545 + t1662;
t1508 = -t1701 + t1650;
t1589 = t1508 * t1545 + t1661;
t1588 = t1550 * t1525 - t1546 * t1526;
t1083 = -pkin(9) * t1216 - t1094;
t1585 = pkin(8) * t1180 + t1544 * t1083 + t1716 * t1216;
t1582 = pkin(4) * t1278 + pkin(9) * t1242 - t1666;
t1581 = pkin(4) * t1282 + pkin(9) * t1251 + t1674;
t1080 = t1544 * t1095 - t1548 * t1191;
t1045 = -pkin(8) * t1080 + (-pkin(9) * t1548 + t1696) * t1094;
t1051 = -pkin(3) * t1080 - t1632;
t1028 = -pkin(2) * t1080 + qJ(3) * t1060 + t1539 * t1045 + t1541 * t1051;
t1033 = -qJ(3) * t1059 + t1541 * t1045 - t1539 * t1051;
t1042 = -t1545 * t1059 + t1549 * t1060;
t1579 = pkin(7) * t1042 + t1028 * t1549 + t1033 * t1545;
t1179 = t1544 * t1218 + t1548 * t1342;
t1065 = -pkin(8) * t1179 + t1548 * t1083 + t1216 * t1696;
t1567 = pkin(4) * t1342 + pkin(9) * t1218 + t1095;
t1067 = -pkin(3) * t1179 - t1567;
t1043 = -pkin(2) * t1179 + qJ(3) * t1127 + t1539 * t1065 + t1541 * t1067;
t1044 = -qJ(3) * t1126 + t1541 * t1065 - t1539 * t1067;
t1087 = -t1545 * t1126 + t1549 * t1127;
t1578 = pkin(7) * t1087 + t1043 * t1549 + t1044 * t1545;
t1195 = t1544 * t1242 + t1548 * t1278;
t1073 = -pkin(8) * t1195 - t1544 * t1119 + t1548 * t1145;
t1105 = -pkin(3) * t1195 - t1582;
t1048 = -pkin(2) * t1195 + qJ(3) * t1147 + t1539 * t1073 + t1541 * t1105;
t1053 = -qJ(3) * t1146 + t1541 * t1073 - t1539 * t1105;
t1101 = -t1545 * t1146 + t1549 * t1147;
t1577 = pkin(7) * t1101 + t1048 * t1549 + t1053 * t1545;
t1199 = t1544 * t1251 + t1548 * t1282;
t1078 = -pkin(8) * t1199 - t1544 * t1121 + t1548 * t1152;
t1108 = -pkin(3) * t1199 - t1581;
t1049 = -pkin(2) * t1199 + qJ(3) * t1160 + t1539 * t1078 + t1541 * t1108;
t1054 = -qJ(3) * t1159 + t1541 * t1078 - t1539 * t1108;
t1106 = -t1545 * t1159 + t1549 * t1160;
t1576 = pkin(7) * t1106 + t1049 * t1549 + t1054 * t1545;
t1066 = qJ(3) * t1129 + (-pkin(8) * t1539 + t1655) * t1149;
t1072 = -qJ(3) * t1128 + (-pkin(8) * t1541 + t1697) * t1149;
t1088 = -t1545 * t1128 + t1549 * t1129;
t1575 = pkin(7) * t1088 + t1066 * t1549 + t1072 * t1545;
t1287 = t1544 * t1364 - t1548 * t1366;
t1130 = -pkin(8) * t1287 - t1149;
t1100 = qJ(3) * t1239 + t1539 * t1130 + t1287 * t1655;
t1104 = -qJ(3) * t1238 + t1541 * t1130 + t1287 * t1697;
t1177 = -t1545 * t1238 + t1549 * t1239;
t1574 = pkin(7) * t1177 + t1100 * t1549 + t1104 * t1545;
t1324 = t1544 * t1398 + t1710;
t1186 = -pkin(3) * t1324 + t1222;
t1224 = -pkin(8) * t1324 + t1267;
t1116 = -pkin(2) * t1324 + qJ(3) * t1248 + t1541 * t1186 + t1539 * t1224;
t1122 = -qJ(3) * t1247 - t1539 * t1186 + t1541 * t1224;
t1190 = -t1545 * t1247 + t1549 * t1248;
t1573 = pkin(7) * t1190 + t1116 * t1549 + t1122 * t1545;
t1338 = t1548 * t1412 - t1672;
t1189 = -pkin(3) * t1338 + t1223;
t1225 = -pkin(8) * t1338 + t1268;
t1117 = -pkin(2) * t1338 + qJ(3) * t1253 + t1541 * t1189 + t1539 * t1225;
t1123 = -qJ(3) * t1252 - t1539 * t1189 + t1541 * t1225;
t1193 = -t1545 * t1252 + t1549 * t1253;
t1572 = pkin(7) * t1193 + t1117 * t1549 + t1123 * t1545;
t1435 = -t1494 - t1495;
t1197 = -pkin(2) * t1435 + qJ(3) * t1373 + t1229;
t1211 = -qJ(3) * t1371 - t1228;
t1294 = -t1545 * t1371 + t1549 * t1373;
t1571 = pkin(7) * t1294 + t1197 * t1549 + t1211 * t1545;
t1300 = -pkin(2) * t1427 + qJ(3) * t1387 + t1676;
t1319 = -t1545 * t1386 + t1549 * t1387;
t1343 = -qJ(3) * t1386 - t1682;
t1570 = pkin(7) * t1319 + t1300 * t1549 + t1343 * t1545;
t1307 = -pkin(2) * t1703 + qJ(3) * t1397 - t1682;
t1341 = -t1545 * t1396 + t1549 * t1397;
t1350 = -qJ(3) * t1396 - t1676;
t1569 = pkin(7) * t1341 + t1307 * t1549 + t1350 * t1545;
t1433 = t1545 * t1480 + t1549 * t1481;
t1568 = pkin(7) * t1433 + t1385;
t1168 = t1549 * t1229 - t1671;
t1219 = pkin(2) * t1419 + qJ(3) * t1229;
t1566 = pkin(7) * t1168 - qJ(3) * t1671 + t1219 * t1549;
t1565 = pkin(8) * t1081 + (-pkin(9) * t1544 + t1716) * t1094;
t1563 = t1544 * t1445;
t1560 = t1548 * t1446;
t1535 = t1540 * t1536;
t1522 = t1546 * qJDD(1) + t1550 * t1551;
t1516 = t1542 * t1531;
t1511 = t1658 * t1683;
t1510 = (t1537 - t1538) * t1683;
t1506 = -pkin(6) * t1522 + t1550 * g(3);
t1485 = t1658 * t1654;
t1478 = (t1656 + (qJD(2) + t1532) * t1691) * t1540;
t1477 = t1549 * t1504 - t1537 * t1654;
t1473 = -t1545 * t1505 - t1538 * t1654;
t1466 = t1549 * t1508 - t1668;
t1465 = -t1545 * t1507 + t1662;
t1461 = t1495 - t1494;
t1450 = (t1535 * t1549 * t1551 + t1479 * t1542) * t1545;
t1449 = (t1504 * t1540 + t1549 * t1708) * t1545;
t1448 = (t1505 * t1540 - t1545 * t1708) * t1549;
t1447 = (-t1535 * t1667 + t1707) * t1549;
t1434 = -t1545 * t1479 + t1549 * t1482;
t1418 = t1540 * t1482 + t1542 * t1590;
t1417 = -t1540 * t1481 + t1542 * t1589;
t1416 = -t1540 * t1480 + t1542 * t1591;
t1415 = t1540 * t1590 - t1707;
t1414 = t1542 * t1481 + t1540 * t1589;
t1413 = t1542 * t1480 + t1540 * t1591;
t1411 = -t1540 * t1478 + t1542 * t1592;
t1410 = t1542 * t1478 + t1540 * t1592;
t1403 = -t1540 * t1510 + t1542 * t1594;
t1402 = t1540 * t1511 + t1542 * t1593;
t1401 = t1542 * t1510 + t1540 * t1594;
t1400 = -t1542 * t1511 + t1540 * t1593;
t1380 = -t1563 - t1560;
t1377 = -t1545 * t1441 + t1549 * t1442;
t1375 = t1540 * t1487 + t1542 * t1596;
t1374 = -t1542 * t1487 + t1540 * t1596;
t1369 = t1542 * t1597 - t1680;
t1368 = t1540 * t1597 + t1516;
t1358 = t1544 * t1405 + t1560;
t1356 = -t1548 * t1587 + t1563;
t1355 = -t1545 * t1422 + t1549 * t1423;
t1354 = -t1545 * t1420 + t1549 * t1421;
t1347 = t1544 * t1443 + t1664;
t1346 = t1548 * t1444 + t1712;
t1345 = -t1545 * t1407 + t1549 * t1409;
t1344 = -t1545 * t1406 + t1549 * t1408;
t1340 = -t1670 + (-t1415 * t1540 - t1418 * t1542) * pkin(7);
t1332 = -t1663 + (-t1410 * t1540 - t1411 * t1542) * pkin(7);
t1331 = t1542 * t1598 - t1647;
t1330 = t1542 * t1599 + t1647;
t1329 = t1540 * t1598 + t1645;
t1328 = t1540 * t1599 - t1645;
t1327 = -pkin(1) * t1415 + t1540 * t1451 + t1542 * t1629;
t1326 = pkin(1) * t1418 - t1542 * t1451 + t1540 * t1629;
t1318 = -pkin(1) * t1410 + t1540 * t1452 + t1542 * t1630;
t1317 = pkin(1) * t1411 - t1542 * t1452 + t1540 * t1630;
t1306 = -t1540 * t1586 + t1542 * t1600;
t1305 = -t1540 * t1432 + t1542 * t1601;
t1304 = t1540 * t1600 + t1542 * t1586;
t1303 = t1542 * t1432 + t1540 * t1601;
t1302 = pkin(1) * t1375 + t1385 * t1694;
t1301 = t1542 * pkin(7) * t1385 - pkin(1) * t1374;
t1299 = -t1540 * t1703 + t1542 * t1603;
t1298 = t1540 * t1603 + t1542 * t1703;
t1297 = -pkin(1) * t1400 + t1542 * t1568;
t1296 = pkin(1) * t1402 + t1540 * t1568;
t1295 = (-t1374 * t1540 - t1375 * t1542) * pkin(7);
t1293 = -t1545 * t1370 + t1549 * t1372;
t1292 = -t1540 * t1427 + t1542 * t1604;
t1291 = t1542 * t1427 + t1540 * t1604;
t1290 = (-t1400 * t1540 - t1402 * t1542) * pkin(7) - t1596;
t1286 = t1548 * t1365 - t1544 * t1709;
t1284 = t1544 * t1336 - t1548 * t1399;
t1262 = -t1677 - t1539 * (qJ(3) * t1514 - t1451 - t1693) + 0.2e1 * t1690 + (-t1502 * t1539 + t1396) * pkin(2);
t1257 = pkin(2) * t1386 - t1309;
t1256 = -t1545 * t1351 + t1549 * t1352;
t1255 = -t1540 * t1461 + t1542 * t1606;
t1254 = t1542 * t1461 + t1540 * t1606;
t1246 = -t1540 * t1435 + t1542 * t1605;
t1245 = t1542 * t1435 + t1540 * t1605;
t1235 = t1544 * t1276 - t1643;
t1234 = t1544 * t1274 + t1643;
t1233 = -t1545 * t1312 + t1549 * t1314;
t1232 = -t1545 * t1311 + t1549 * t1313;
t1231 = -t1540 * t1380 + t1542 * t1607;
t1230 = t1542 * t1380 + t1540 * t1607;
t1210 = -t1540 * t1358 + t1542 * t1608;
t1209 = -t1540 * t1356 + t1542 * t1609;
t1208 = t1542 * t1358 + t1540 * t1608;
t1207 = t1542 * t1356 + t1540 * t1609;
t1204 = t1544 * t1266 + t1548 * t1277;
t1203 = t1544 * t1265 - t1548 * t1281;
t1202 = -t1545 * t1259 + t1549 * t1261;
t1201 = -t1545 * t1258 + t1549 * t1260;
t1187 = t1544 * t1217 - t1548 * t1378;
t1181 = -t1545 * t1243 + t1549 * t1244;
t1176 = -t1540 * t1347 + t1542 * t1610;
t1175 = -t1540 * t1346 + t1542 * t1611;
t1174 = t1542 * t1347 + t1540 * t1610;
t1173 = t1542 * t1346 + t1540 * t1611;
t1172 = -t1540 * t1338 + t1542 * t1612;
t1171 = t1542 * t1338 + t1540 * t1612;
t1170 = -t1540 * t1324 + t1542 * t1613;
t1169 = t1542 * t1324 + t1540 * t1613;
t1163 = -t1545 * t1307 + t1549 * t1350 + (-t1298 * t1540 - t1299 * t1542) * pkin(7);
t1162 = pkin(2) * t1252 + t1642;
t1161 = -t1545 * t1226 + t1549 * t1227;
t1158 = t1540 * t1419 + t1542 * t1616;
t1157 = -t1542 * t1419 + t1540 * t1616;
t1156 = pkin(2) * t1247 + t1641;
t1155 = -t1545 * t1300 + t1549 * t1343 + (-t1291 * t1540 - t1292 * t1542) * pkin(7);
t1154 = -t1540 * t1286 + t1542 * t1614;
t1153 = t1542 * t1286 + t1540 * t1614;
t1143 = -t1540 * t1287 + t1542 * t1615;
t1142 = t1542 * t1287 + t1540 * t1615;
t1141 = -pkin(1) * t1298 - t1540 * t1262 + t1542 * t1569;
t1140 = pkin(1) * t1299 + t1542 * t1262 + t1540 * t1569;
t1139 = -pkin(1) * t1291 - t1540 * t1257 + t1542 * t1570;
t1138 = pkin(1) * t1292 + t1542 * t1257 + t1540 * t1570;
t1134 = -t1540 * t1284 + t1542 * t1617;
t1133 = t1542 * t1284 + t1540 * t1617;
t1125 = -t1545 * t1183 + t1549 * t1185;
t1124 = -t1545 * t1182 + t1549 * t1184;
t1115 = pkin(2) * t1238 + t1633;
t1114 = -t1545 * t1165 + t1549 * t1167;
t1113 = -t1545 * t1164 + t1549 * t1166;
t1112 = -t1540 * t1235 + t1542 * t1618;
t1111 = -t1540 * t1234 + t1542 * t1619;
t1110 = t1542 * t1235 + t1540 * t1618;
t1109 = t1542 * t1234 + t1540 * t1619;
t1107 = -t1545 * t1197 + t1549 * t1211 + (-t1245 * t1540 - t1246 * t1542) * pkin(7);
t1103 = -pkin(1) * t1245 - t1371 * t1699 + t1542 * t1571;
t1102 = pkin(1) * t1246 + t1371 * t1698 + t1540 * t1571;
t1099 = -t1540 * t1204 + t1542 * t1620;
t1098 = -t1540 * t1203 + t1542 * t1621;
t1097 = t1542 * t1204 + t1540 * t1620;
t1096 = t1542 * t1203 + t1540 * t1621;
t1092 = -t1545 * t1131 + t1549 * t1132;
t1091 = -t1540 * t1199 + t1542 * t1622;
t1090 = t1542 * t1199 + t1540 * t1622;
t1089 = pkin(2) * t1128 + t1659;
t1086 = -t1540 * t1195 + t1542 * t1623;
t1085 = t1542 * t1195 + t1540 * t1623;
t1084 = -qJ(3) * t1689 - t1545 * t1219 + (-t1157 * t1540 - t1158 * t1542) * pkin(7);
t1077 = -t1540 * t1187 + t1542 * t1624;
t1076 = t1542 * t1187 + t1540 * t1624;
t1075 = -pkin(1) * t1157 - t1228 * t1699 + t1542 * t1566;
t1074 = pkin(1) * t1158 + t1228 * t1698 + t1540 * t1566;
t1071 = -t1540 * t1179 + t1542 * t1626;
t1070 = t1542 * t1179 + t1540 * t1626;
t1069 = -t1540 * t1149 + t1542 * t1625;
t1068 = t1542 * t1149 + t1540 * t1625;
t1064 = pkin(2) * t1159 + t1634;
t1063 = pkin(2) * t1146 + t1635;
t1062 = -t1545 * t1117 + t1549 * t1123 + (-t1171 * t1540 - t1172 * t1542) * pkin(7);
t1061 = -t1545 * t1116 + t1549 * t1122 + (-t1169 * t1540 - t1170 * t1542) * pkin(7);
t1058 = -pkin(1) * t1171 - t1540 * t1162 + t1542 * t1572;
t1057 = pkin(1) * t1172 + t1542 * t1162 + t1540 * t1572;
t1056 = -pkin(1) * t1169 - t1540 * t1156 + t1542 * t1573;
t1055 = pkin(1) * t1170 + t1542 * t1156 + t1540 * t1573;
t1052 = pkin(2) * t1126 + t1585;
t1050 = -t1545 * t1100 + t1549 * t1104 + (-t1142 * t1540 - t1143 * t1542) * pkin(7);
t1047 = -pkin(1) * t1142 - t1540 * t1115 + t1542 * t1574;
t1046 = pkin(1) * t1143 + t1542 * t1115 + t1540 * t1574;
t1041 = -t1540 * t1080 + t1542 * t1627;
t1040 = t1542 * t1080 + t1540 * t1627;
t1039 = -t1545 * t1066 + t1549 * t1072 + (-t1068 * t1540 - t1069 * t1542) * pkin(7);
t1038 = pkin(2) * t1059 + t1565;
t1037 = -pkin(1) * t1068 - t1540 * t1089 + t1542 * t1575;
t1036 = pkin(1) * t1069 + t1542 * t1089 + t1540 * t1575;
t1035 = -t1545 * t1049 + t1549 * t1054 + (-t1090 * t1540 - t1091 * t1542) * pkin(7);
t1034 = -t1545 * t1048 + t1549 * t1053 + (-t1085 * t1540 - t1086 * t1542) * pkin(7);
t1032 = -pkin(1) * t1090 - t1540 * t1064 + t1542 * t1576;
t1031 = pkin(1) * t1091 + t1542 * t1064 + t1540 * t1576;
t1030 = -pkin(1) * t1085 - t1540 * t1063 + t1542 * t1577;
t1029 = pkin(1) * t1086 + t1542 * t1063 + t1540 * t1577;
t1027 = -t1545 * t1043 + t1549 * t1044 + (-t1070 * t1540 - t1071 * t1542) * pkin(7);
t1026 = -pkin(1) * t1070 - t1540 * t1052 + t1542 * t1578;
t1025 = pkin(1) * t1071 + t1542 * t1052 + t1540 * t1578;
t1024 = -t1545 * t1028 + t1549 * t1033 + (-t1040 * t1540 - t1041 * t1542) * pkin(7);
t1023 = -pkin(1) * t1040 - t1540 * t1038 + t1542 * t1579;
t1022 = pkin(1) * t1041 + t1542 * t1038 + t1540 * t1579;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1523, 0, -t1522, 0, t1631, -t1506, -t1588, -pkin(6) * t1588, -t1546 * t1450 + t1550 * t1477, -t1546 * t1403 + t1550 * t1434, -t1546 * t1416 + t1550 * t1465, -t1546 * t1447 + t1550 * t1473, -t1546 * t1417 + t1550 * t1466, t1550 * t1485 + t1546 * t1680, t1550 * t1340 - t1546 * t1327 - pkin(6) * (t1550 * t1418 + t1546 * t1467), t1550 * t1332 - t1546 * t1318 - pkin(6) * (t1550 * t1411 + t1546 * t1457), t1550 * t1290 - t1546 * t1297 - pkin(6) * (t1550 * t1402 + t1546 * t1433), t1550 * t1295 - t1546 * t1301 - pkin(6) * (t1550 * t1375 + t1546 * t1385), -t1546 * t1331 + t1550 * t1355, -t1546 * t1255 + t1550 * t1293, -t1546 * t1305 + t1550 * t1344, -t1546 * t1330 + t1550 * t1354, -t1546 * t1306 + t1550 * t1345, -t1546 * t1369 + t1550 * t1377, t1550 * t1155 - t1546 * t1139 - pkin(6) * (t1550 * t1292 + t1546 * t1319), t1550 * t1163 - t1546 * t1141 - pkin(6) * (t1550 * t1299 + t1546 * t1341), t1550 * t1107 - t1546 * t1103 - pkin(6) * (t1550 * t1246 + t1546 * t1294), t1550 * t1084 - t1546 * t1075 - pkin(6) * (t1550 * t1158 + t1546 * t1168), -t1546 * t1210 + t1550 * t1233, -t1546 * t1154 + t1550 * t1181, -t1546 * t1175 + t1550 * t1201, -t1546 * t1209 + t1550 * t1232, -t1546 * t1176 + t1550 * t1202, -t1546 * t1231 + t1550 * t1256, t1550 * t1061 - t1546 * t1056 - pkin(6) * (t1550 * t1170 + t1546 * t1190), t1550 * t1062 - t1546 * t1058 - pkin(6) * (t1550 * t1172 + t1546 * t1193), t1550 * t1050 - t1546 * t1047 - pkin(6) * (t1550 * t1143 + t1546 * t1177), t1550 * t1039 - t1546 * t1037 - pkin(6) * (t1550 * t1069 + t1546 * t1088), -t1546 * t1112 + t1550 * t1125, -t1546 * t1077 + t1550 * t1092, -t1546 * t1098 + t1550 * t1113, -t1546 * t1111 + t1550 * t1124, -t1546 * t1099 + t1550 * t1114, -t1546 * t1134 + t1550 * t1161, t1550 * t1034 - t1546 * t1030 - pkin(6) * (t1550 * t1086 + t1546 * t1101), t1550 * t1035 - t1546 * t1032 - pkin(6) * (t1550 * t1091 + t1546 * t1106), t1550 * t1027 - t1546 * t1026 - pkin(6) * (t1550 * t1071 + t1546 * t1087), t1550 * t1024 - t1546 * t1023 - pkin(6) * (t1550 * t1041 + t1546 * t1042); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1522, 0, t1523, 0, t1506, t1631, t1636, pkin(6) * t1636, t1550 * t1450 + t1546 * t1477, t1550 * t1403 + t1546 * t1434, t1550 * t1416 + t1546 * t1465, t1550 * t1447 + t1546 * t1473, t1550 * t1417 + t1546 * t1466, t1546 * t1485 - t1550 * t1680, t1546 * t1340 + t1550 * t1327 + pkin(6) * (-t1546 * t1418 + t1550 * t1467), t1546 * t1332 + t1550 * t1318 + pkin(6) * (-t1546 * t1411 + t1550 * t1457), t1546 * t1290 + t1550 * t1297 + pkin(6) * (-t1546 * t1402 + t1550 * t1433), t1546 * t1295 + t1550 * t1301 + pkin(6) * (-t1546 * t1375 + t1550 * t1385), t1550 * t1331 + t1546 * t1355, t1550 * t1255 + t1546 * t1293, t1550 * t1305 + t1546 * t1344, t1550 * t1330 + t1546 * t1354, t1550 * t1306 + t1546 * t1345, t1550 * t1369 + t1546 * t1377, t1546 * t1155 + t1550 * t1139 + pkin(6) * (-t1546 * t1292 + t1550 * t1319), t1546 * t1163 + t1550 * t1141 + pkin(6) * (-t1546 * t1299 + t1550 * t1341), t1546 * t1107 + t1550 * t1103 + pkin(6) * (-t1546 * t1246 + t1550 * t1294), t1546 * t1084 + t1550 * t1075 + pkin(6) * (-t1546 * t1158 + t1550 * t1168), t1550 * t1210 + t1546 * t1233, t1550 * t1154 + t1546 * t1181, t1550 * t1175 + t1546 * t1201, t1550 * t1209 + t1546 * t1232, t1550 * t1176 + t1546 * t1202, t1550 * t1231 + t1546 * t1256, t1546 * t1061 + t1550 * t1056 + pkin(6) * (-t1546 * t1170 + t1550 * t1190), t1546 * t1062 + t1550 * t1058 + pkin(6) * (-t1546 * t1172 + t1550 * t1193), t1546 * t1050 + t1550 * t1047 + pkin(6) * (-t1546 * t1143 + t1550 * t1177), t1546 * t1039 + t1550 * t1037 + pkin(6) * (-t1546 * t1069 + t1550 * t1088), t1550 * t1112 + t1546 * t1125, t1550 * t1077 + t1546 * t1092, t1550 * t1098 + t1546 * t1113, t1550 * t1111 + t1546 * t1124, t1550 * t1099 + t1546 * t1114, t1550 * t1134 + t1546 * t1161, t1546 * t1034 + t1550 * t1030 + pkin(6) * (-t1546 * t1086 + t1550 * t1101), t1546 * t1035 + t1550 * t1032 + pkin(6) * (-t1546 * t1091 + t1550 * t1106), t1546 * t1027 + t1550 * t1026 + pkin(6) * (-t1546 * t1071 + t1550 * t1087), t1546 * t1024 + t1550 * t1023 + pkin(6) * (-t1546 * t1041 + t1550 * t1042); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1525, t1526, 0, 0, t1449, t1401, t1413, t1448, t1414, t1516, t1326, t1317, t1296, t1302, t1329, t1254, t1303, t1328, t1304, t1368, t1138, t1140, t1102, t1074, t1208, t1153, t1173, t1207, t1174, t1230, t1055, t1057, t1046, t1036, t1110, t1076, t1096, t1109, t1097, t1133, t1029, t1031, t1025, t1022; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1551, 0, 0, -g(3), -t1525, 0, t1477, t1434, t1465, t1473, t1466, t1485, t1340, t1332, t1290, t1295, t1355, t1293, t1344, t1354, t1345, t1377, t1155, t1163, t1107, t1084, t1233, t1181, t1201, t1232, t1202, t1256, t1061, t1062, t1050, t1039, t1125, t1092, t1113, t1124, t1114, t1161, t1034, t1035, t1027, t1024; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1551, 0, qJDD(1), 0, g(3), 0, -t1526, 0, t1450, t1403, t1416, t1447, t1417, -t1680, t1327, t1318, t1297, t1301, t1331, t1255, t1305, t1330, t1306, t1369, t1139, t1141, t1103, t1075, t1210, t1154, t1175, t1209, t1176, t1231, t1056, t1058, t1047, t1037, t1112, t1077, t1098, t1111, t1099, t1134, t1030, t1032, t1026, t1023; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1525, t1526, 0, 0, t1449, t1401, t1413, t1448, t1414, t1516, t1326, t1317, t1296, t1302, t1329, t1254, t1303, t1328, t1304, t1368, t1138, t1140, t1102, t1074, t1208, t1153, t1173, t1207, t1174, t1230, t1055, t1057, t1046, t1036, t1110, t1076, t1096, t1109, t1097, t1133, t1029, t1031, t1025, t1022; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1504, t1482, t1502, -t1514, t1508, t1514, 0, -t1487, t1451, 0, t1423, t1372, t1408, t1421, t1409, t1442, t1343, t1350, t1211, -qJ(3) * t1228, t1314, t1244, t1260, t1313, t1261, t1352, t1122, t1123, t1104, t1072, t1185, t1132, t1166, t1184, t1167, t1227, t1053, t1054, t1044, t1033; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1513, t1479, t1507, t1505, t1503, -t1513, t1487, 0, t1452, 0, t1422, t1370, t1406, t1420, t1407, t1441, t1300, t1307, t1197, t1219, t1312, t1243, t1258, t1311, t1259, t1351, t1116, t1117, t1100, t1066, t1183, t1131, t1164, t1182, t1165, t1226, t1048, t1049, t1043, t1028; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1524, t1510, t1480, t1524, t1481, t1531, -t1451, -t1452, 0, 0, t1463, t1461, t1432, -t1463, t1586, t1531, t1257, t1262, pkin(2) * t1371, pkin(2) * t1228, t1358, t1286, t1346, t1356, t1347, t1380, t1156, t1162, t1115, t1089, t1235, t1187, t1203, t1234, t1204, t1284, t1063, t1064, t1052, t1038; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1464, -t1427, t1704, t1486, t1483, -t1486, 0, -t1419, t1309, 0, t1359, t1288, t1348, t1357, t1349, t1381, t1224, t1225, t1130, -pkin(8) * t1149, t1237, t1188, t1205, t1236, t1206, t1285, t1073, t1078, t1065, t1045; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1686, t1703, t1484, -t1637, t1455, -t1686, t1419, 0, t1310, 0, -t1426, -t1425, -t1366, t1426, t1362, -t1462, t1186, t1189, -pkin(3) * t1287, -pkin(3) * t1149, -t1275, -t1215, -t1263, t1273, -t1264, -t1335, t1105, t1108, t1067, t1051; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1463, t1461, t1432, -t1463, t1586, t1531, -t1309, -t1310, 0, 0, t1358, t1286, t1346, t1356, t1347, t1380, t1641, t1642, t1633, t1659, t1235, t1187, t1203, t1234, t1204, t1284, t1635, t1634, t1585, t1565; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1405, -t1709, t1705, t1445, t1443, -t1445, 0, t1271, t1222, 0, t1276, t1217, t1265, t1274, t1266, t1336, t1145, t1152, t1083, -pkin(9) * t1094; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1446, t1365, t1444, -t1587, t1383, -t1446, -t1271, 0, t1223, 0, -t1379, -t1378, -t1281, t1379, t1277, -t1399, t1119, t1121, -pkin(4) * t1216, -pkin(4) * t1094; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1426, t1425, t1366, -t1426, -t1362, t1462, -t1222, -t1223, 0, 0, t1275, t1215, t1263, -t1273, t1264, t1335, t1582, t1581, t1567, t1632; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1334, t1278, t1706, t1394, t1392, -t1394, 0, t1191, t1136, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1395, t1280, t1393, t1333, t1321, -t1395, -t1191, 0, t1137, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1379, t1378, t1281, -t1379, -t1277, t1399, -t1136, -t1137, 0, 0;];
m_new_reg = t1;
