% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:28
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRPRR10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:26:41
% EndTime: 2019-12-31 20:27:00
% DurationCPUTime: 7.83s
% Computational Cost: add. (8124->564), mult. (21938->816), div. (0->0), fcn. (24388->10), ass. (0->443)
t325 = sin(pkin(10));
t326 = sin(pkin(5));
t332 = cos(qJ(2));
t527 = t326 * t332;
t329 = sin(qJ(2));
t528 = t326 * t329;
t564 = cos(pkin(10));
t279 = t325 * t528 - t527 * t564;
t278 = t279 ^ 2;
t331 = cos(qJ(4));
t603 = t278 * t331;
t320 = t326 ^ 2;
t602 = t320 * t329;
t327 = sin(qJ(5));
t565 = cos(pkin(5));
t443 = pkin(1) * t565;
t314 = t332 * t443;
t579 = pkin(7) + qJ(3);
t273 = -t528 * t579 + t314;
t246 = pkin(2) * t565 + t273;
t399 = t329 * t443;
t274 = t527 * t579 + t399;
t407 = t564 * t274;
t161 = t246 * t325 + t407;
t140 = pkin(8) * t565 + t161;
t328 = sin(qJ(4));
t406 = t564 * t329;
t529 = t325 * t332;
t281 = (-t406 - t529) * t326;
t444 = -pkin(2) * t332 - pkin(1);
t341 = t279 * pkin(3) + t281 * pkin(8) + t326 * t444;
t93 = t140 * t328 - t331 * t341;
t77 = -pkin(4) * t279 + t93;
t453 = t93 / 0.2e1 - t77 / 0.2e1;
t601 = t453 * t327;
t330 = cos(qJ(5));
t600 = t453 * t330;
t196 = t331 * t279;
t411 = -t196 / 0.2e1;
t536 = t281 * t327;
t599 = t330 * t411 - t536 / 0.2e1;
t410 = t196 / 0.2e1;
t598 = t330 * t410 + t536 / 0.2e1;
t321 = t327 ^ 2;
t323 = t330 ^ 2;
t308 = t323 - t321;
t597 = qJD(4) * t308;
t408 = t565 * t328;
t534 = t281 * t331;
t241 = t408 - t534;
t535 = t281 * t328;
t239 = -t331 * t565 - t535;
t587 = -t328 / 0.2e1;
t429 = t239 * t587;
t584 = t331 / 0.2e1;
t363 = t241 * t584 + t429;
t596 = t363 * qJD(4);
t459 = t331 * qJD(2);
t313 = t328 * t459;
t403 = t363 * qJD(1) + t313;
t466 = t239 * qJD(1);
t359 = -qJD(2) * t363 + t241 * t466;
t595 = t239 ^ 2;
t539 = t279 * t327;
t540 = t241 * t330;
t170 = t539 + t540;
t594 = -t170 / 0.2e1;
t276 = t281 * t330;
t191 = -t196 * t327 + t276;
t593 = -t191 / 0.2e1;
t192 = -t196 * t330 - t536;
t592 = -t192 / 0.2e1;
t591 = -t239 / 0.2e1;
t590 = t239 / 0.2e1;
t589 = t241 / 0.2e1;
t316 = pkin(2) * t325 + pkin(8);
t588 = -t316 / 0.2e1;
t586 = t328 / 0.2e1;
t585 = -t331 / 0.2e1;
t583 = t239 * pkin(9);
t582 = t279 * pkin(9);
t581 = t328 * pkin(4);
t580 = t331 * pkin(9);
t578 = -t77 + t93;
t577 = pkin(2) * qJD(2);
t530 = t325 * t274;
t175 = t273 * t564 - t530;
t167 = t331 * t175;
t458 = pkin(2) * t528;
t185 = -pkin(3) * t281 + pkin(8) * t279 + t458;
t181 = t328 * t185;
t495 = t167 + t181;
t87 = -pkin(9) * t281 + t495;
t576 = t327 * t87;
t575 = t327 * t93;
t574 = t330 * t87;
t573 = t330 * t93;
t168 = t241 * t327 - t279 * t330;
t193 = t328 * t279;
t160 = t246 * t564 - t530;
t139 = -pkin(3) * t565 - t160;
t388 = pkin(4) * t239 - pkin(9) * t241;
t333 = t139 + t388;
t94 = t331 * t140 + t328 * t341;
t78 = t94 + t582;
t26 = t327 * t78 - t330 * t333;
t174 = t325 * t273 + t407;
t301 = -t580 + t581;
t105 = -t279 * t301 + t174;
t517 = t330 * t105;
t35 = t517 - t576;
t511 = t331 * t185;
t519 = t328 * t175;
t86 = pkin(4) * t281 - t511 + t519;
t5 = t168 * t86 + t191 * t77 + t193 * t26 + t239 * t35;
t572 = t5 * qJD(1);
t27 = t327 * t333 + t330 * t78;
t526 = t327 * t105;
t36 = t526 + t574;
t6 = t170 * t86 + t192 * t77 + t193 * t27 - t239 * t36;
t571 = t6 * qJD(1);
t138 = pkin(4) * t241 + t583;
t516 = t330 * t138;
t7 = t94 * t168 - t26 * t241 + (t327 * t578 + t516) * t239;
t570 = t7 * qJD(1);
t569 = t77 * t330;
t525 = t327 * t138;
t8 = t94 * t170 - t27 * t241 + (t330 * t578 - t525) * t239;
t568 = t8 * qJD(1);
t567 = t86 * t327;
t566 = t86 * t330;
t13 = -t168 * t77 + t239 * t26;
t563 = qJD(1) * t13;
t14 = t170 * t77 - t239 * t27;
t562 = qJD(1) * t14;
t37 = -t139 * t239 + t279 * t93;
t561 = qJD(1) * t37;
t38 = t139 * t241 - t279 * t94;
t560 = qJD(1) * t38;
t452 = t168 * t193;
t547 = t191 * t239;
t54 = -t452 - t547;
t559 = qJD(1) * t54;
t451 = t170 * t193;
t546 = t192 * t239;
t57 = -t451 - t546;
t558 = qJD(1) * t57;
t58 = t160 * t281 - t161 * t279;
t557 = qJD(1) * t58;
t65 = t168 * t241 - t327 * t595;
t556 = qJD(1) * t65;
t66 = t170 * t241 - t330 * t595;
t555 = qJD(1) * t66;
t554 = t139 * t331;
t15 = t174 * t239 + t93 * t281 + (t511 + (-t139 - t175) * t328) * t279;
t553 = t15 * qJD(1);
t16 = t174 * t241 + t94 * t281 + (-t495 - t554) * t279;
t552 = t16 * qJD(1);
t551 = t168 * t331;
t550 = t170 * t327;
t549 = t170 * t330;
t548 = t170 * t331;
t545 = t192 * t327;
t21 = -(-t161 + t174) * t281 + (t160 - t175) * t279;
t544 = t21 * qJD(1);
t317 = -pkin(2) * t564 - pkin(3);
t387 = -pkin(4) * t331 - pkin(9) * t328;
t345 = t387 + t317;
t512 = t330 * t331;
t446 = t316 * t512;
t236 = t327 * t345 + t446;
t543 = t236 * t241;
t542 = t241 * t281;
t541 = t241 * t328;
t538 = t278 * t328;
t537 = t281 * t239;
t121 = t330 * t239;
t522 = t327 * t328;
t206 = t121 * t522;
t430 = -t548 / 0.2e1;
t29 = t206 + (-t551 / 0.2e1 + t592) * t330 + (t430 + t191 / 0.2e1) * t327;
t533 = t29 * qJD(1);
t532 = t320 * t332;
t322 = t328 ^ 2;
t531 = t322 * t327;
t524 = t327 * t168;
t523 = t327 * t301;
t521 = t327 * t331;
t520 = t328 * t168;
t518 = t328 * t330;
t515 = t330 * t168;
t514 = t330 * t301;
t513 = t330 * t322;
t510 = t331 * t191;
t509 = t331 * t239;
t34 = pkin(2) * t444 * t602 - t160 * t174 + t161 * t175;
t508 = t34 * qJD(1);
t39 = -t168 * t192 - t170 * t191;
t507 = t39 * qJD(1);
t417 = -t518 / 0.2e1;
t250 = t279 * t417;
t412 = -t509 / 0.2e1;
t351 = (t412 - t541 / 0.2e1) * t327;
t420 = t520 / 0.2e1;
t421 = t521 / 0.2e1;
t334 = t239 * t421 + t351 + t420;
t44 = t250 + t334;
t506 = t44 * qJD(1);
t380 = t515 + t550;
t52 = t380 * t239;
t505 = t52 * qJD(1);
t55 = t452 - t547;
t504 = t55 * qJD(1);
t56 = -t451 + t546;
t503 = t56 * qJD(1);
t413 = t512 / 0.2e1;
t349 = t170 * t413 + t323 * t429;
t60 = -t545 / 0.2e1 + t349;
t502 = t60 * qJD(1);
t423 = -t522 / 0.2e1;
t395 = t239 * t423;
t431 = t551 / 0.2e1;
t356 = t431 + t395;
t70 = t356 + t598;
t501 = t70 * qJD(1);
t422 = t522 / 0.2e1;
t355 = t239 * t422 + t431;
t71 = t355 + t599;
t500 = t71 * qJD(1);
t414 = -t121 / 0.2e1;
t394 = t328 * t414;
t370 = t276 / 0.2e1 + t394;
t428 = -t539 / 0.2e1;
t385 = t594 + t428;
t73 = t331 * t385 + t370;
t499 = t73 * qJD(1);
t75 = (t170 / 0.2e1 + t428) * t331 + t370;
t498 = t75 * qJD(1);
t259 = t279 * t531;
t85 = t259 - t510;
t497 = t85 * qJD(1);
t96 = (t540 / 0.2e1 + t385) * t328;
t496 = t96 * qJD(1);
t324 = t331 ^ 2;
t309 = t324 - t322;
t106 = t537 - t538;
t494 = qJD(1) * t106;
t107 = -t537 - t538;
t493 = qJD(1) * t107;
t108 = -t542 - t603;
t492 = qJD(1) * t108;
t114 = -t542 + t603;
t491 = qJD(1) * t114;
t490 = qJD(1) * t170;
t489 = qJD(1) * t279;
t488 = qJD(1) * t331;
t487 = qJD(2) * t279;
t486 = qJD(3) * t331;
t485 = qJD(4) * t239;
t484 = qJD(4) * t279;
t483 = qJD(4) * t327;
t482 = qJD(4) * t328;
t481 = qJD(4) * t330;
t480 = qJD(4) * t331;
t479 = qJD(5) * t239;
t478 = qJD(5) * t327;
t477 = qJD(5) * t330;
t476 = qJD(5) * t331;
t379 = t509 + t541;
t100 = t379 * t279;
t475 = t100 * qJD(1);
t182 = t192 * t331;
t260 = t279 * t513;
t113 = t260 - t182;
t474 = t113 * qJD(1);
t117 = t327 * t239;
t473 = t117 * qJD(1);
t472 = t121 * qJD(1);
t353 = -t325 * t279 / 0.2e1 + t564 * t281 / 0.2e1;
t163 = (-t528 / 0.2e1 + t353) * pkin(2);
t471 = t163 * qJD(1);
t470 = t193 * qJD(1);
t469 = t196 * qJD(1);
t468 = t535 * qJD(1);
t205 = t281 ^ 2 + t278;
t467 = t205 * qJD(1);
t350 = -pkin(7) * t527 - t399;
t247 = pkin(1) * t602 - t350 * t565;
t465 = t247 * qJD(1);
t287 = pkin(7) * t528 - t314;
t248 = pkin(1) * t532 - t287 * t565;
t464 = t248 * qJD(1);
t277 = (t406 / 0.2e1 + t529 / 0.2e1) * t326;
t463 = t277 * qJD(1);
t291 = (-t329 ^ 2 + t332 ^ 2) * t320;
t462 = t291 * qJD(1);
t461 = t328 * qJD(2);
t460 = t328 * qJD(5);
t457 = pkin(4) * t168 / 0.2e1;
t456 = pkin(4) * t594;
t455 = pkin(4) * t592;
t454 = t583 / 0.2e1;
t450 = t329 * t532;
t449 = t316 * t521;
t296 = t316 * t522;
t448 = t316 * t518;
t447 = t330 * t509;
t445 = -t574 / 0.2e1;
t442 = t170 * t466;
t440 = t330 * t461;
t439 = t327 * t481;
t438 = t328 * t481;
t437 = t327 * t476;
t436 = t330 * t476;
t435 = t279 * t488;
t434 = t281 * t488;
t312 = t327 * t482;
t433 = t327 * t477;
t432 = t328 * t480;
t151 = t170 * t586;
t427 = t170 * t588;
t426 = t316 * t584;
t425 = t317 * t589;
t424 = -t525 / 0.2e1;
t419 = -t193 / 0.2e1;
t418 = t193 / 0.2e1;
t416 = t518 / 0.2e1;
t415 = t516 / 0.2e1;
t409 = -t167 / 0.2e1 - t181 / 0.2e1;
t405 = t565 * qJD(1);
t404 = t296 + t514;
t402 = -qJD(4) - t489;
t401 = -qJD(5) - t466;
t400 = -qJD(5) + t459;
t398 = t330 * t312;
t397 = qJD(1) * t450;
t396 = t327 * t440;
t251 = t279 * t416;
t393 = t582 / 0.2e1 - t94 / 0.2e1;
t392 = t454 + t138 / 0.2e1;
t391 = t466 + qJD(5) / 0.2e1;
t390 = t326 * t405;
t389 = qJD(2) * t326 * t565;
t386 = 0.2e1 * t396;
t384 = t327 * t419 + t151;
t235 = -t330 * t345 + t449;
t342 = t235 * t589 + t404 * t591;
t368 = pkin(4) * t593 - t566 / 0.2e1;
t1 = (t168 * t588 + t415 + t601) * t331 + (t26 / 0.2e1 + (t316 * t590 + t393) * t327) * t328 + t342 + t368;
t111 = t235 * t328 + (t404 - 0.2e1 * t296) * t331;
t383 = -t1 * qJD(1) - t111 * qJD(2);
t112 = t301 * t521 + (-t236 + t446) * t328;
t2 = t455 + t543 / 0.2e1 + (t86 / 0.2e1 + t301 * t590) * t327 + (t424 + t427 + t600) * t331 + (t27 / 0.2e1 + t393 * t330) * t328;
t382 = -t2 * qJD(1) + t112 * qJD(2);
t200 = -t236 * t331 - t316 * t513;
t365 = -t576 / 0.2e1 + t517 / 0.2e1;
t366 = t236 * t590 + t27 * t585;
t9 = (t427 - t569 / 0.2e1) * t328 + t365 + t366;
t381 = qJD(1) * t9 + qJD(2) * t200;
t378 = -t279 * t317 + t281 * t316;
t377 = t405 + qJD(2);
t337 = t235 * t591 + t26 * t584 + t316 * t420;
t10 = t445 + (-t105 / 0.2e1 + t77 * t586) * t327 + t337;
t199 = -t235 * t331 - t316 * t531;
t376 = qJD(1) * t10 - qJD(2) * t199;
t293 = t309 * t327;
t335 = t327 * t412 + t351 - t520 / 0.2e1;
t43 = t251 + t335;
t375 = qJD(1) * t43 + qJD(2) * t293;
t294 = t324 * t330 - t513;
t46 = -t447 + (-t540 / 0.2e1 + t385) * t328;
t374 = -qJD(1) * t46 - qJD(2) * t294;
t373 = t400 * t328;
t109 = -t241 ^ 2 + t595;
t372 = qJD(1) * t109 - qJD(2) * t379;
t371 = -qJD(1) * t379 + qJD(2) * t309;
t369 = t580 / 0.2e1 - t581 / 0.2e1;
t233 = -t534 / 0.2e1 + t408 / 0.2e1;
t367 = t233 * qJD(1) + t461 / 0.2e1;
t364 = t327 * t410 - t276 / 0.2e1 + t394;
t362 = -t515 / 0.2e1 - t550 / 0.2e1;
t336 = t554 / 0.2e1 + t317 * t591 + t316 * t418;
t30 = t336 - t409;
t361 = -qJD(1) * t30 - t317 * t459;
t32 = t425 + (t279 * t588 - t185 / 0.2e1) * t331 + (t139 / 0.2e1 + t175 / 0.2e1) * t328;
t360 = -qJD(1) * t32 - t317 * t461;
t358 = -qJD(4) * t277 + t281 * t489;
t357 = -t460 / 0.2e1 + t403;
t354 = -t301 / 0.2e1 + t369;
t49 = (-t524 + t549) * t328;
t53 = t168 ^ 2 - t170 ^ 2;
t352 = qJD(1) * t53 - qJD(2) * t49 - qJD(4) * t380;
t17 = t327 * t392 + t457 - t600;
t242 = t354 * t327;
t348 = pkin(4) * t481 - qJD(1) * t17 + qJD(2) * t242;
t19 = -t330 * t392 + t456 - t601;
t243 = t354 * t330;
t347 = pkin(4) * t483 - qJD(1) * t19 - qJD(2) * t243;
t92 = t362 * t328;
t98 = -t524 / 0.2e1 + t549 / 0.2e1;
t346 = -qJD(2) * t92 - qJD(4) * t98 + t168 * t490;
t288 = (t321 / 0.2e1 - t323 / 0.2e1) * t328;
t344 = qJD(1) * t98 - qJD(2) * t288 + t439;
t343 = qJD(5) * t233 + t359;
t340 = qJD(2) * t327 * t513 - qJD(1) * t92 + qJD(4) * t288;
t292 = t308 * t322;
t339 = qJD(1) * t49 + qJD(2) * t292 + 0.2e1 * t398;
t338 = qJD(1) * t380 + t386 - t597;
t318 = t482 / 0.2e1;
t297 = -0.2e1 * t328 * t433;
t285 = t288 * qJD(5);
t272 = t277 * qJD(2);
t271 = t281 * t459;
t204 = t296 + t514 / 0.2e1 + t369 * t330;
t203 = t448 - t523 / 0.2e1 - t369 * t327;
t188 = t193 * qJD(4);
t171 = -t470 - t482;
t162 = t458 / 0.2e1 + t353 * pkin(2);
t157 = qJD(2) * t419 + qJD(4) * t233;
t103 = t379 * qJD(4);
t97 = t241 * t417 + t384;
t95 = t98 * qJD(5);
t90 = t92 * qJD(5);
t76 = t548 / 0.2e1 + t364;
t74 = t430 + t364;
t72 = t355 + t598;
t69 = t356 + t599;
t59 = t545 / 0.2e1 + t349;
t50 = t380 * qJD(5);
t48 = t49 * qJD(5);
t47 = t241 * t416 + t384 + t447;
t45 = t251 + t334;
t42 = t250 + t335;
t33 = t316 * t411 + t425 + t139 * t586 - t519 / 0.2e1 + t511 / 0.2e1;
t31 = t336 + t409;
t28 = t206 + t327 * t593 + t192 * t330 / 0.2e1 + t362 * t331;
t20 = pkin(9) * t414 + t456 + t77 * t327 / 0.2e1 + t575 / 0.2e1 + t415;
t18 = t327 * t454 + t457 + t569 / 0.2e1 + t573 / 0.2e1 + t424;
t12 = t151 * t316 + t416 * t77 + t365 - t366;
t11 = t77 * t423 + t445 - t526 / 0.2e1 - t337;
t4 = (-t448 + t523) * t591 - t543 / 0.2e1 + (t525 - t573) * t584 + t27 * t587 + t170 * t426 + t316 * t394 + t94 * t416 + t77 * t413 + pkin(9) * t251 + t455 + t567 / 0.2e1;
t3 = (t516 + t575) * t585 + t26 * t587 + t168 * t426 + t316 * t395 + t94 * t422 + t77 * t421 + t327 * pkin(9) * t418 - t342 + t368;
t22 = [0, 0, 0, qJD(2) * t450, t291 * qJD(2), t332 * t389, -t329 * t389, 0, -t247 * qJD(2), -t248 * qJD(2), qJD(2) * t21 + qJD(3) * t205, qJD(2) * t34 + qJD(3) * t58, (-t279 * t459 - t485) * t241, qJD(2) * t100 + qJD(4) * t109, qJD(2) * t108 - t239 * t484, -qJD(2) * t107 - t241 * t484, -t281 * t487, qJD(2) * t15 - qJD(3) * t106 + qJD(4) * t38, qJD(2) * t16 + qJD(3) * t114 + qJD(4) * t37, (qJD(2) * t192 - qJD(5) * t168 - t239 * t481) * t170, qJD(2) * t39 + qJD(4) * t52 + qJD(5) * t53, qJD(2) * t56 + qJD(4) * t66 - t168 * t479, qJD(2) * t55 - qJD(4) * t65 - t170 * t479, (qJD(4) * t241 - t279 * t461) * t239, qJD(2) * t5 + qJD(3) * t54 + qJD(4) * t7 + qJD(5) * t14, qJD(2) * t6 + qJD(3) * t57 + qJD(4) * t8 + qJD(5) * t13; 0, 0, 0, t397, t462, t377 * t527, -t377 * t528, 0, qJD(2) * t350 - t465, qJD(2) * t287 - t464, t544 + (t279 * t564 + t281 * t325) * t577, t508 + (-t174 * t564 + t175 * t325) * t577 + t162 * qJD(3), t596 + (-qJD(1) * t241 - t461) * t196, -t309 * t487 - t103 + t475, -t281 * t461 + t492, -t271 - t493, -t358, t553 + (-t174 * t331 + t328 * t378) * qJD(2) + t33 * qJD(4), t552 + (t174 * t328 + t331 * t378) * qJD(2) + t31 * qJD(4), t59 * qJD(4) + t90 + (t440 + t490) * t192, t507 + t28 * qJD(4) - t48 + (-t191 * t330 - t545) * t461, t503 + (-t260 - t182) * qJD(2) + t47 * qJD(4) + t69 * qJD(5), t504 + (t259 + t510) * qJD(2) + t42 * qJD(4) + t76 * qJD(5), -t596 + (-t391 + t459) * t193, -t35 * t459 + t572 + t3 * qJD(4) + t12 * qJD(5) + (t191 * t316 + t235 * t279 + t567) * t461, t36 * t459 + t571 + t4 * qJD(4) + t11 * qJD(5) + (t192 * t316 + t236 * t279 + t566) * t461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t467, qJD(2) * t162 + t557, 0, 0, 0, 0, 0, -t494, t491, 0, 0, 0, 0, 0, qJD(4) * t45 + qJD(5) * t74 + t559, qJD(4) * t97 + qJD(5) * t72 + t558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t359, t372, t402 * t239, t402 * t241, t272, qJD(2) * t33 - qJD(4) * t94 + t560, qJD(2) * t31 + qJD(4) * t93 + t561, t59 * qJD(2) + t95 + (-t483 - t490) * t121, t28 * qJD(2) - t308 * t485 - t50 + t505, qJD(2) * t47 + t241 * t483 + t555, qJD(2) * t42 + t241 * t481 - t556, t343, t570 + t3 * qJD(2) + t45 * qJD(3) + (t327 * t388 - t94 * t330) * qJD(4) + t20 * qJD(5), t568 + t4 * qJD(2) + t97 * qJD(3) + (t94 * t327 + t330 * t388) * qJD(4) + t18 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t346, t352, t69 * qJD(2) + t168 * t401, t76 * qJD(2) + t170 * t401, t157, qJD(2) * t12 + qJD(3) * t74 + qJD(4) * t20 - qJD(5) * t27 + t562, qJD(2) * t11 + qJD(3) * t72 + qJD(4) * t18 + qJD(5) * t26 + t563; 0, 0, 0, -t397, -t462, -t332 * t390, t329 * t390, 0, t465, t464, -t544, qJD(3) * t163 - t508, t241 * t435 + t596, -t103 - t475, qJD(4) * t196 - t492, -t188 + t493, t358, qJD(4) * t32 + t281 * t486 - t553, -qJD(3) * t535 + qJD(4) * t30 - t552, qJD(4) * t60 - t192 * t490 + t90, qJD(4) * t29 - t48 - t507, -qJD(4) * t46 + qJD(5) * t70 - t503, qJD(4) * t43 + qJD(5) * t75 - t504, t193 * t391 - t596, -qJD(3) * t85 - qJD(4) * t1 - qJD(5) * t9 - t572, -qJD(3) * t113 - qJD(4) * t2 - qJD(5) * t10 - t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t432, t309 * qJD(4), 0, 0, 0, t317 * t482, t317 * t480, -t322 * t433 + t323 * t432, -qJD(5) * t292 - 0.2e1 * t331 * t398, -qJD(4) * t294 + t328 * t437, qJD(4) * t293 + t328 * t436, -t432, -qJD(4) * t111 - qJD(5) * t200, qJD(4) * t112 + qJD(5) * t199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, 0, 0, 0, 0, 0, t434, -t468, 0, 0, 0, 0, 0, -t497, -t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t403, t371, t469 + t480, t171, -t463, -t316 * t480 - t360, t316 * t482 - t361, t502 - t285 + (t323 * t461 + t439) * t331, t533 + t297 + (-0.2e1 * t396 + t597) * t331, t312 + t374, t375 + t438, -t357, (t327 * t387 - t446) * qJD(4) + t204 * qJD(5) + t383, (t330 * t387 + t449) * qJD(4) + t203 * qJD(5) + t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t340, -t339, t327 * t373 + t501, t330 * t373 + t498, qJD(1) * t418 + t318, qJD(4) * t204 - qJD(5) * t236 - t381, qJD(4) * t203 + qJD(5) * t235 - t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t467, -qJD(2) * t163 - t557, 0, 0, 0, 0, 0, -t188 - t271 + t494, qJD(2) * t535 - t279 * t480 - t491, 0, 0, 0, 0, 0, qJD(2) * t85 + qJD(4) * t44 + qJD(5) * t73 - t559, qJD(2) * t113 - qJD(4) * t96 + qJD(5) * t71 - t558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t471, 0, 0, 0, 0, 0, -t434, t468, 0, 0, 0, 0, 0, t497, t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, t402 * t331, 0, 0, 0, 0, 0, -t437 - t438 + t506, t312 - t436 - t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327 * t480 - t330 * t460 + t499, t327 * t460 - t330 * t480 + t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t359, -t372, -qJD(2) * t196 + t279 * t466, qJD(2) * t193 + t241 * t489, t272, -qJD(2) * t32 + qJD(3) * t193 - t560, -qJD(2) * t30 + t279 * t486 - t561, -qJD(2) * t60 + t330 * t442 + t95, -qJD(2) * t29 - t50 - t505, qJD(2) * t46 + qJD(5) * t121 - t555, -qJD(2) * t43 - qJD(5) * t117 + t556, -t343, qJD(2) * t1 - qJD(3) * t44 + qJD(5) * t19 - t570, qJD(2) * t2 + qJD(3) * t96 + qJD(5) * t17 - t568; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t403, -t371, -t469, t470, t463, t360, t361, -t313 * t323 - t285 - t502, t331 * t386 + t297 - t533, -t374 - t436, -t375 + t437, t357, qJD(5) * t243 - t383, -qJD(5) * t242 - t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t470, t435, 0, 0, 0, 0, 0, -t506, t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t433, t308 * qJD(5), 0, 0, 0, -pkin(4) * t478, -pkin(4) * t477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, -t338, -t330 * t400 + t472, t327 * t400 - t473, -t367, -pkin(9) * t477 - t347, pkin(9) * t478 - t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t346, -t352, -qJD(2) * t70 - qJD(4) * t121 + t168 * t466, -qJD(2) * t75 + qJD(4) * t117 + t442, t157, qJD(2) * t9 - qJD(3) * t73 - qJD(4) * t19 - t562, qJD(2) * t10 - qJD(3) * t71 - qJD(4) * t17 - t563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340, t339, -t501 + (-t327 * t461 + t481) * t331, -t498 + (-t440 - t483) * t331, qJD(1) * t419 + t318, -qJD(4) * t243 + t381, qJD(4) * t242 + t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t499, -t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t344, t338, t330 * t459 - t472, -t327 * t459 + t473, t367, t347, t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t22;
