% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRR11
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d4,d5]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:45
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRR11_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR11_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR11_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR11_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR11_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRRRR11_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:44:52
% EndTime: 2019-12-31 22:45:28
% DurationCPUTime: 38.26s
% Computational Cost: add. (361663->881), mult. (776630->1335), div. (0->0), fcn. (619799->12), ass. (0->626)
t1535 = sin(qJ(5));
t1537 = sin(qJ(3));
t1542 = cos(qJ(3));
t1534 = cos(pkin(5));
t1673 = t1534 * qJD(1);
t1634 = qJD(2) + t1673;
t1533 = sin(pkin(5));
t1538 = sin(qJ(2));
t1675 = t1533 * t1538;
t1645 = qJD(1) * t1675;
t1497 = t1537 * t1634 + t1542 * t1645;
t1543 = cos(qJ(2));
t1654 = t1543 * qJD(1);
t1521 = t1533 * t1654 - qJD(3);
t1536 = sin(qJ(4));
t1541 = cos(qJ(4));
t1472 = t1536 * t1497 + t1541 * t1521;
t1473 = t1541 * t1497 - t1536 * t1521;
t1540 = cos(qJ(5));
t1427 = t1540 * t1472 + t1535 * t1473;
t1429 = -t1535 * t1472 + t1540 * t1473;
t1373 = t1429 * t1427;
t1635 = qJD(2) * t1654;
t1647 = t1538 * qJDD(1);
t1503 = (t1635 + t1647) * t1533;
t1526 = t1534 * qJDD(1) + qJDD(2);
t1630 = -t1537 * t1503 + t1542 * t1526;
t1579 = t1497 * qJD(3) - t1630;
t1452 = qJDD(4) + t1579;
t1451 = qJDD(5) + t1452;
t1701 = -t1373 + t1451;
t1710 = t1535 * t1701;
t1437 = t1473 * t1472;
t1699 = -t1437 + t1452;
t1709 = t1536 * t1699;
t1708 = t1540 * t1701;
t1707 = t1541 * t1699;
t1484 = t1521 * t1497;
t1706 = t1579 - t1484;
t1495 = t1537 * t1645 - t1542 * t1634;
t1441 = (t1495 * t1542 - t1497 * t1537) * t1521;
t1648 = qJDD(1) * t1543;
t1686 = qJD(1) * t1538;
t1578 = qJD(2) * t1686 - t1648;
t1563 = t1578 * t1533;
t1557 = qJDD(3) + t1563;
t1705 = t1538 * t1441 - t1543 * t1557;
t1628 = t1634 ^ 2;
t1680 = t1497 * t1495;
t1551 = t1557 - t1680;
t1704 = t1537 * t1551;
t1703 = t1542 * t1551;
t1585 = -t1542 * t1503 - t1537 * t1526;
t1454 = -t1495 * qJD(3) - t1585;
t1549 = -t1541 * t1454 - t1536 * t1557;
t1388 = -t1472 * qJD(4) - t1549;
t1548 = -t1536 * t1454 + t1541 * t1557;
t1547 = t1473 * qJD(4) - t1548;
t1290 = -t1427 * qJD(5) + t1540 * t1388 - t1535 * t1547;
t1492 = qJD(4) + t1495;
t1489 = qJD(5) + t1492;
t1395 = t1489 * t1427;
t1700 = -t1395 + t1290;
t1449 = t1492 * t1472;
t1364 = t1449 + t1388;
t1483 = t1495 * t1521;
t1421 = t1454 + t1483;
t1632 = t1535 * t1388 + t1540 * t1547;
t1258 = (qJD(5) - t1489) * t1429 + t1632;
t1698 = qJD(1) ^ 2;
t1425 = t1427 ^ 2;
t1426 = t1429 ^ 2;
t1697 = t1472 ^ 2;
t1471 = t1473 ^ 2;
t1487 = t1489 ^ 2;
t1490 = t1492 ^ 2;
t1493 = t1495 ^ 2;
t1494 = t1497 ^ 2;
t1696 = t1521 ^ 2;
t1530 = t1533 ^ 2;
t1695 = pkin(3) * t1537;
t1539 = sin(qJ(1));
t1544 = cos(qJ(1));
t1523 = t1544 * g(1) + t1539 * g(2);
t1692 = pkin(7) * t1533;
t1499 = -t1698 * pkin(1) + qJDD(1) * t1692 - t1523;
t1689 = t1543 * pkin(2);
t1627 = -pkin(8) * t1538 - t1689;
t1687 = qJD(1) * t1533;
t1502 = t1627 * t1687;
t1522 = t1539 * g(1) - t1544 * g(2);
t1559 = qJDD(1) * pkin(1) + t1698 * t1692 + t1522;
t1552 = t1534 * t1559;
t1550 = -g(3) * t1675 + t1538 * t1552;
t1410 = t1526 * pkin(8) - t1628 * pkin(2) + (t1502 * t1687 + t1499) * t1543 + t1550;
t1688 = t1543 * pkin(8);
t1690 = t1538 * pkin(2);
t1626 = -t1688 + t1690;
t1691 = t1534 * g(3);
t1546 = -t1503 * pkin(8) - t1691 + ((-pkin(1) - t1689) * qJDD(1) + ((t1534 * t1626 - t1692) * qJD(1) + (-t1688 + 0.2e1 * t1690) * qJD(2)) * qJD(1) - t1522) * t1533;
t1350 = t1542 * t1410 + t1537 * t1546;
t1463 = t1495 * pkin(3) - t1497 * pkin(9);
t1306 = -t1696 * pkin(3) + pkin(9) * t1557 - t1495 * t1463 + t1350;
t1631 = t1538 * t1499 - t1543 * t1552;
t1409 = -t1526 * pkin(2) - t1628 * pkin(8) + (g(3) * t1543 + t1502 * t1686) * t1533 + t1631;
t1311 = t1706 * pkin(3) - t1421 * pkin(9) + t1409;
t1232 = t1536 * t1306 - t1541 * t1311;
t1203 = pkin(4) * t1699 - t1364 * pkin(10) - t1232;
t1233 = t1541 * t1306 + t1536 * t1311;
t1443 = t1492 * pkin(4) - t1473 * pkin(10);
t1212 = -t1697 * pkin(4) - pkin(10) * t1547 - t1492 * t1443 + t1233;
t1149 = -t1540 * t1203 + t1535 * t1212;
t1150 = t1535 * t1203 + t1540 * t1212;
t1103 = -t1540 * t1149 + t1535 * t1150;
t1694 = pkin(4) * t1103;
t1261 = t1395 + t1290;
t1205 = -t1258 * t1535 - t1540 * t1261;
t1693 = pkin(4) * t1205;
t1685 = t1489 * t1429;
t1684 = t1489 * t1535;
t1683 = t1489 * t1540;
t1682 = t1492 * t1536;
t1681 = t1492 * t1541;
t1679 = t1521 * t1537;
t1678 = t1521 * t1542;
t1677 = t1530 * t1698;
t1676 = t1533 * t1526;
t1674 = t1533 * t1543;
t1349 = t1537 * t1410 - t1542 * t1546;
t1305 = -t1557 * pkin(3) - t1696 * pkin(9) + t1497 * t1463 + t1349;
t1234 = pkin(4) * t1547 - t1697 * pkin(10) + t1473 * t1443 + t1305;
t1672 = t1535 * t1234;
t1332 = t1373 + t1451;
t1671 = t1535 * t1332;
t1670 = t1536 * t1103;
t1669 = t1536 * t1305;
t1379 = t1437 + t1452;
t1668 = t1536 * t1379;
t1667 = t1537 * t1409;
t1446 = -t1557 - t1680;
t1666 = t1537 * t1446;
t1486 = t1533 * t1559 + t1691;
t1664 = t1538 * t1486;
t1638 = t1538 * t1543 * t1698;
t1520 = t1530 * t1638;
t1500 = t1520 + t1526;
t1663 = t1538 * t1500;
t1501 = -t1520 + t1526;
t1662 = t1538 * t1501;
t1661 = t1540 * t1234;
t1660 = t1540 * t1332;
t1659 = t1541 * t1103;
t1658 = t1541 * t1305;
t1657 = t1541 * t1379;
t1656 = t1542 * t1409;
t1655 = t1542 * t1446;
t1653 = t1543 * t1486;
t1652 = t1543 * t1500;
t1651 = t1543 * t1501;
t1531 = t1538 ^ 2;
t1532 = t1543 ^ 2;
t1649 = t1531 + t1532;
t1646 = -pkin(3) * t1542 - pkin(2);
t1644 = t1543 * t1680;
t1643 = t1531 * t1677;
t1642 = t1532 * t1677;
t1641 = t1537 * t1373;
t1640 = t1537 * t1437;
t1639 = t1538 * t1680;
t1637 = t1542 * t1373;
t1636 = t1542 * t1437;
t1633 = 0.2e1 * qJD(2) + t1673;
t1104 = t1535 * t1149 + t1540 * t1150;
t1174 = t1536 * t1232 + t1541 * t1233;
t1272 = t1537 * t1349 + t1542 * t1350;
t1629 = -t1539 * t1522 - t1544 * t1523;
t1625 = -pkin(3) * t1305 + pkin(9) * t1174;
t1519 = t1544 * qJDD(1) - t1539 * t1698;
t1624 = -pkin(6) * t1519 - t1539 * g(3);
t1491 = -t1643 - t1628;
t1462 = -t1538 * t1491 - t1651;
t1623 = pkin(7) * t1462 - t1664;
t1507 = -t1628 - t1642;
t1469 = t1543 * t1507 - t1663;
t1622 = pkin(7) * t1469 + t1653;
t1621 = qJD(1) * t1634;
t1620 = t1530 * t1538 * t1635;
t1079 = t1541 * t1104 - t1670;
t1075 = t1542 * t1079 + t1537 * t1234;
t1078 = t1536 * t1104 + t1659;
t1619 = t1075 * t1538 - t1078 * t1543;
t1207 = -t1258 * t1540 + t1535 * t1261;
t1146 = -t1536 * t1205 + t1541 * t1207;
t1319 = -t1425 - t1426;
t1132 = t1542 * t1146 + t1537 * t1319;
t1144 = t1541 * t1205 + t1536 * t1207;
t1618 = t1132 * t1538 - t1144 * t1543;
t1257 = (qJD(5) + t1489) * t1429 + t1632;
t1204 = -t1535 * t1257 + t1540 * t1700;
t1206 = -t1540 * t1257 - t1535 * t1700;
t1145 = -t1536 * t1204 + t1541 * t1206;
t1372 = t1426 - t1425;
t1138 = t1542 * t1145 + t1537 * t1372;
t1143 = t1541 * t1204 + t1536 * t1206;
t1617 = t1138 * t1538 - t1143 * t1543;
t1156 = t1542 * t1174 + t1537 * t1305;
t1173 = -t1541 * t1232 + t1536 * t1233;
t1616 = t1156 * t1538 - t1173 * t1543;
t1353 = -t1487 - t1425;
t1265 = t1535 * t1353 + t1708;
t1266 = t1540 * t1353 - t1710;
t1210 = -t1536 * t1265 + t1541 * t1266;
t1166 = t1542 * t1210 + t1537 * t1257;
t1209 = t1541 * t1265 + t1536 * t1266;
t1615 = t1166 * t1538 - t1209 * t1543;
t1381 = -t1426 - t1487;
t1281 = t1540 * t1381 - t1671;
t1282 = -t1535 * t1381 - t1660;
t1220 = -t1536 * t1281 + t1541 * t1282;
t1172 = t1542 * t1220 + t1537 * t1700;
t1219 = t1541 * t1281 + t1536 * t1282;
t1614 = t1172 * t1538 - t1219 * t1543;
t1394 = -t1426 + t1487;
t1285 = t1540 * t1394 + t1710;
t1287 = -t1535 * t1394 + t1708;
t1223 = -t1536 * t1285 + t1541 * t1287;
t1178 = t1542 * t1223 + t1537 * t1261;
t1221 = t1541 * t1285 + t1536 * t1287;
t1613 = t1178 * t1538 - t1221 * t1543;
t1393 = t1425 - t1487;
t1286 = t1535 * t1393 + t1660;
t1288 = t1540 * t1393 - t1671;
t1224 = -t1536 * t1286 + t1541 * t1288;
t1179 = t1542 * t1224 - t1537 * t1258;
t1222 = t1541 * t1286 + t1536 * t1288;
t1612 = t1179 * t1538 - t1222 * t1543;
t1289 = -t1429 * qJD(5) - t1632;
t1251 = t1540 * t1289 + t1427 * t1684;
t1252 = -t1535 * t1289 + t1427 * t1683;
t1200 = -t1536 * t1251 + t1541 * t1252;
t1185 = t1542 * t1200 - t1641;
t1198 = t1541 * t1251 + t1536 * t1252;
t1611 = t1185 * t1538 - t1198 * t1543;
t1253 = t1535 * t1290 + t1429 * t1683;
t1254 = t1540 * t1290 - t1429 * t1684;
t1201 = -t1536 * t1253 + t1541 * t1254;
t1186 = t1542 * t1201 + t1641;
t1199 = t1541 * t1253 + t1536 * t1254;
t1610 = t1186 * t1538 - t1199 * t1543;
t1335 = (-t1427 * t1535 - t1429 * t1540) * t1489;
t1336 = (-t1427 * t1540 + t1429 * t1535) * t1489;
t1250 = -t1536 * t1335 + t1541 * t1336;
t1240 = t1542 * t1250 + t1537 * t1451;
t1249 = t1541 * t1335 + t1536 * t1336;
t1609 = t1240 * t1538 - t1249 * t1543;
t1362 = (-qJD(4) + t1492) * t1473 + t1548;
t1280 = t1541 * t1362 + t1536 * t1364;
t1389 = t1471 + t1697;
t1244 = t1542 * t1280 - t1537 * t1389;
t1278 = t1536 * t1362 - t1541 * t1364;
t1608 = t1244 * t1538 - t1278 * t1543;
t1450 = t1492 * t1473;
t1361 = -t1450 - t1547;
t1363 = -t1449 + t1388;
t1279 = t1541 * t1361 - t1536 * t1363;
t1436 = t1471 - t1697;
t1248 = t1542 * t1279 + t1537 * t1436;
t1277 = t1536 * t1361 + t1541 * t1363;
t1607 = t1248 * t1538 - t1277 * t1543;
t1401 = -t1490 - t1697;
t1325 = t1541 * t1401 - t1709;
t1264 = t1542 * t1325 - t1537 * t1361;
t1324 = t1536 * t1401 + t1707;
t1606 = t1264 * t1538 - t1324 * t1543;
t1424 = -t1471 - t1490;
t1330 = -t1536 * t1424 - t1657;
t1365 = (qJD(4) + t1492) * t1472 + t1549;
t1270 = t1542 * t1330 - t1537 * t1365;
t1329 = t1541 * t1424 - t1668;
t1605 = t1270 * t1538 - t1329 * t1543;
t1604 = t1272 * t1538 - t1409 * t1543;
t1445 = -t1471 + t1490;
t1346 = -t1536 * t1445 + t1707;
t1275 = t1542 * t1346 + t1537 * t1364;
t1344 = t1541 * t1445 + t1709;
t1603 = t1275 * t1538 - t1344 * t1543;
t1444 = -t1490 + t1697;
t1347 = t1541 * t1444 - t1668;
t1360 = -t1450 + t1547;
t1276 = t1542 * t1347 - t1537 * t1360;
t1345 = t1536 * t1444 + t1657;
t1602 = t1276 * t1538 - t1345 * t1543;
t1357 = t1472 * t1681 + t1536 * t1547;
t1314 = t1542 * t1357 - t1640;
t1356 = -t1472 * t1682 + t1541 * t1547;
t1601 = t1314 * t1538 + t1356 * t1543;
t1359 = t1541 * t1388 - t1473 * t1682;
t1315 = t1542 * t1359 + t1640;
t1358 = t1536 * t1388 + t1473 * t1681;
t1600 = t1315 * t1538 - t1358 * t1543;
t1271 = -t1542 * t1349 + t1537 * t1350;
t1383 = (-t1472 * t1541 + t1473 * t1536) * t1492;
t1355 = t1542 * t1383 + t1537 * t1452;
t1382 = (-t1472 * t1536 - t1473 * t1541) * t1492;
t1599 = t1355 * t1538 - t1382 * t1543;
t1368 = -t1537 * t1421 - t1542 * t1706;
t1464 = t1494 - t1493;
t1598 = t1368 * t1538 - t1464 * t1543;
t1420 = (-qJD(3) - t1521) * t1497 + t1630;
t1422 = t1454 - t1483;
t1369 = t1542 * t1420 + t1537 * t1422;
t1442 = t1493 + t1494;
t1597 = t1369 * t1538 + t1442 * t1543;
t1459 = -t1696 - t1493;
t1386 = t1542 * t1459 - t1704;
t1596 = t1386 * t1538 - t1543 * t1706;
t1465 = -t1494 - t1696;
t1392 = -t1537 * t1465 + t1655;
t1423 = (qJD(3) - t1521) * t1495 + t1585;
t1595 = t1392 * t1538 + t1423 * t1543;
t1477 = -t1494 + t1696;
t1399 = -t1537 * t1477 + t1703;
t1594 = t1399 * t1538 - t1422 * t1543;
t1476 = t1493 - t1696;
t1400 = t1542 * t1476 + t1666;
t1418 = t1484 + t1579;
t1593 = t1400 * t1538 + t1418 * t1543;
t1460 = g(3) * t1674 + t1631;
t1461 = t1543 * t1499 + t1550;
t1592 = -t1543 * t1460 + t1538 * t1461;
t1390 = t1538 * t1460 + t1543 * t1461;
t1582 = t1533 * t1621;
t1511 = t1543 * t1582;
t1479 = t1511 + t1503;
t1510 = t1538 * t1582;
t1482 = -t1510 - t1563;
t1591 = t1479 * t1543 + t1482 * t1538;
t1480 = -t1511 + t1503;
t1481 = t1510 - t1563;
t1590 = -t1480 * t1543 + t1481 * t1538;
t1589 = t1491 * t1543 - t1662;
t1505 = t1628 - t1643;
t1588 = t1505 * t1543 + t1663;
t1587 = t1507 * t1538 + t1652;
t1506 = -t1628 + t1642;
t1586 = t1506 * t1538 + t1651;
t1584 = t1544 * t1522 - t1539 * t1523;
t1583 = pkin(4) * t1265 - t1149;
t1413 = -t1495 * t1678 + t1537 * t1579;
t1581 = t1413 * t1538 + t1644;
t1415 = t1542 * t1454 + t1497 * t1679;
t1580 = t1415 * t1538 - t1644;
t1577 = pkin(3) * t1361 + pkin(9) * t1325 - t1658;
t1576 = pkin(3) * t1365 + pkin(9) * t1330 + t1669;
t1575 = pkin(4) * t1281 - t1150;
t1097 = -pkin(4) * t1234 + pkin(10) * t1104;
t1065 = -pkin(9) * t1078 - pkin(10) * t1659 - t1536 * t1097;
t1068 = -pkin(3) * t1078 - t1694;
t1074 = t1537 * t1079 - t1542 * t1234;
t1049 = -pkin(8) * t1074 + t1542 * t1065 - t1537 * t1068;
t1553 = -pkin(3) * t1234 + pkin(9) * t1079 - pkin(10) * t1670 + t1541 * t1097;
t1054 = -pkin(2) * t1074 - t1553;
t1064 = t1543 * t1075 + t1538 * t1078;
t1574 = pkin(7) * t1064 + t1049 * t1538 + t1054 * t1543;
t1093 = -pkin(4) * t1319 + pkin(10) * t1207 + t1104;
t1094 = -pkin(10) * t1205 - t1103;
t1067 = -pkin(9) * t1144 - t1536 * t1093 + t1541 * t1094;
t1123 = -pkin(3) * t1144 - t1693;
t1131 = t1537 * t1146 - t1542 * t1319;
t1062 = -pkin(8) * t1131 + t1542 * t1067 - t1537 * t1123;
t1556 = -pkin(3) * t1319 + pkin(9) * t1146 + t1541 * t1093 + t1536 * t1094;
t1066 = -pkin(2) * t1131 - t1556;
t1098 = t1543 * t1132 + t1538 * t1144;
t1573 = pkin(7) * t1098 + t1062 * t1538 + t1066 * t1543;
t1159 = -pkin(4) * t1257 + pkin(10) * t1266 - t1661;
t1193 = -pkin(10) * t1265 + t1672;
t1105 = -pkin(9) * t1209 - t1536 * t1159 + t1541 * t1193;
t1113 = -pkin(3) * t1209 - t1583;
t1165 = t1537 * t1210 - t1542 * t1257;
t1073 = -pkin(8) * t1165 + t1542 * t1105 - t1537 * t1113;
t1555 = -pkin(3) * t1257 + pkin(9) * t1210 + t1541 * t1159 + t1536 * t1193;
t1090 = -pkin(2) * t1165 - t1555;
t1127 = t1543 * t1166 + t1538 * t1209;
t1572 = pkin(7) * t1127 + t1073 * t1538 + t1090 * t1543;
t1164 = -pkin(4) * t1700 + pkin(10) * t1282 + t1672;
t1195 = -pkin(10) * t1281 + t1661;
t1112 = -pkin(9) * t1219 - t1536 * t1164 + t1541 * t1195;
t1119 = -pkin(3) * t1219 - t1575;
t1171 = t1537 * t1220 - t1542 * t1700;
t1077 = -pkin(8) * t1171 + t1542 * t1112 - t1537 * t1119;
t1554 = -pkin(3) * t1700 + pkin(9) * t1220 + t1541 * t1164 + t1536 * t1195;
t1092 = -pkin(2) * t1171 - t1554;
t1139 = t1543 * t1172 + t1538 * t1219;
t1571 = pkin(7) * t1139 + t1077 * t1538 + t1092 * t1543;
t1155 = t1537 * t1174 - t1542 * t1305;
t1099 = -pkin(8) * t1155 + (-pkin(9) * t1542 + t1695) * t1173;
t1118 = -pkin(2) * t1155 - t1625;
t1125 = t1543 * t1156 + t1538 * t1173;
t1570 = pkin(7) * t1125 + t1099 * t1538 + t1118 * t1543;
t1152 = -pkin(9) * t1278 - t1173;
t1243 = t1537 * t1280 + t1542 * t1389;
t1126 = -pkin(8) * t1243 + t1542 * t1152 + t1278 * t1695;
t1561 = pkin(3) * t1389 + pkin(9) * t1280 + t1174;
t1128 = -pkin(2) * t1243 - t1561;
t1208 = t1543 * t1244 + t1538 * t1278;
t1569 = pkin(7) * t1208 + t1126 * t1538 + t1128 * t1543;
t1213 = -pkin(3) * t1324 + t1232;
t1235 = -pkin(9) * t1324 + t1669;
t1263 = t1537 * t1325 + t1542 * t1361;
t1142 = -pkin(8) * t1263 - t1537 * t1213 + t1542 * t1235;
t1175 = -pkin(2) * t1263 - t1577;
t1225 = t1543 * t1264 + t1538 * t1324;
t1568 = pkin(7) * t1225 + t1142 * t1538 + t1175 * t1543;
t1214 = -pkin(3) * t1329 + t1233;
t1238 = -pkin(9) * t1329 + t1658;
t1269 = t1537 * t1330 + t1542 * t1365;
t1147 = -pkin(8) * t1269 - t1537 * t1214 + t1542 * t1238;
t1180 = -pkin(2) * t1269 - t1576;
t1227 = t1543 * t1270 + t1538 * t1329;
t1567 = pkin(7) * t1227 + t1147 * t1538 + t1180 * t1543;
t1385 = t1537 * t1459 + t1703;
t1294 = -pkin(2) * t1385 + t1349;
t1334 = -pkin(8) * t1385 + t1667;
t1340 = t1543 * t1386 + t1538 * t1706;
t1566 = pkin(7) * t1340 + t1294 * t1543 + t1334 * t1538;
t1391 = t1542 * t1465 + t1666;
t1297 = -pkin(2) * t1391 + t1350;
t1341 = -pkin(8) * t1391 + t1656;
t1342 = t1543 * t1392 - t1538 * t1423;
t1565 = pkin(7) * t1342 + t1297 * t1543 + t1341 * t1538;
t1438 = t1538 * t1480 + t1543 * t1481;
t1564 = pkin(7) * t1438 + t1390;
t1367 = t1537 * t1420 - t1542 * t1422;
t1230 = -pkin(8) * t1367 - t1271;
t1318 = t1543 * t1369 - t1538 * t1442;
t1562 = pkin(7) * t1318 + t1230 * t1538 - t1367 * t1689;
t1241 = t1543 * t1272 + t1538 * t1409;
t1560 = pkin(7) * t1241 + t1271 * t1627;
t1529 = t1533 * t1530;
t1518 = t1539 * qJDD(1) + t1544 * t1698;
t1515 = t1534 * t1526;
t1509 = t1649 * t1677;
t1508 = (t1531 - t1532) * t1677;
t1504 = -pkin(6) * t1518 + t1544 * g(3);
t1485 = t1634 * t1649 * t1687;
t1478 = (t1633 * t1654 + t1647) * t1533;
t1475 = t1543 * t1503 - t1531 * t1582;
t1474 = (-t1532 * t1621 + t1538 * t1578) * t1533;
t1468 = t1543 * t1506 - t1662;
t1467 = -t1538 * t1505 + t1652;
t1458 = (t1534 * t1503 + (qJD(2) * t1534 * t1533 + (t1534 ^ 2 * t1533 + t1529) * qJD(1)) * t1654) * t1538;
t1457 = t1503 * t1675 + t1620;
t1456 = -t1530 * t1543 * t1578 - t1620;
t1455 = -t1529 * t1638 + (-t1633 * t1686 + t1648) * t1534 * t1674;
t1440 = (t1495 * t1537 + t1497 * t1542) * t1521;
t1439 = -t1538 * t1479 + t1543 * t1482;
t1435 = t1533 * t1482 + t1534 * t1587;
t1434 = -t1533 * t1481 + t1534 * t1586;
t1433 = -t1533 * t1480 + t1534 * t1588;
t1432 = -t1534 * t1482 + t1533 * t1587;
t1431 = t1534 * t1481 + t1533 * t1586;
t1430 = t1534 * t1480 + t1533 * t1588;
t1417 = -t1533 * t1478 + t1534 * t1589;
t1416 = t1534 * t1478 + t1533 * t1589;
t1414 = t1537 * t1454 - t1497 * t1678;
t1412 = -t1495 * t1679 - t1542 * t1579;
t1411 = t1543 * t1441 + t1538 * t1557;
t1408 = -t1533 * t1508 + t1534 * t1591;
t1407 = t1533 * t1509 + t1534 * t1590;
t1406 = t1534 * t1508 + t1533 * t1591;
t1405 = -t1534 * t1509 + t1533 * t1590;
t1398 = t1537 * t1476 - t1655;
t1397 = t1542 * t1477 + t1704;
t1377 = t1543 * t1415 + t1639;
t1376 = t1543 * t1413 - t1639;
t1375 = t1533 * t1486 + t1534 * t1592;
t1374 = -t1534 * t1486 + t1533 * t1592;
t1371 = -t1533 * t1440 + t1534 * t1705;
t1370 = t1534 * t1440 + t1533 * t1705;
t1366 = t1542 * t1421 - t1537 * t1706;
t1354 = t1537 * t1383 - t1542 * t1452;
t1352 = t1543 * t1400 - t1538 * t1418;
t1351 = t1543 * t1399 + t1538 * t1422;
t1343 = -t1664 + (-t1432 * t1533 - t1435 * t1534) * pkin(7);
t1339 = -t1653 + (-t1416 * t1533 - t1417 * t1534) * pkin(7);
t1338 = -pkin(1) * t1432 + t1533 * t1460 + t1534 * t1622;
t1337 = pkin(1) * t1435 - t1534 * t1460 + t1533 * t1622;
t1328 = t1543 * t1368 + t1538 * t1464;
t1327 = -pkin(1) * t1416 + t1533 * t1461 + t1534 * t1623;
t1326 = pkin(1) * t1417 - t1534 * t1461 + t1533 * t1623;
t1323 = -t1533 * t1414 + t1534 * t1580;
t1322 = -t1533 * t1412 + t1534 * t1581;
t1321 = t1534 * t1414 + t1533 * t1580;
t1320 = t1534 * t1412 + t1533 * t1581;
t1317 = pkin(1) * t1375 + t1390 * t1692;
t1316 = t1534 * pkin(7) * t1390 - pkin(1) * t1374;
t1313 = t1537 * t1359 - t1636;
t1312 = t1537 * t1357 + t1636;
t1308 = -pkin(1) * t1405 + t1534 * t1564;
t1307 = pkin(1) * t1407 + t1533 * t1564;
t1304 = pkin(2) * t1423 + pkin(8) * t1392 + t1667;
t1302 = -t1533 * t1398 + t1534 * t1593;
t1301 = -t1533 * t1397 + t1534 * t1594;
t1300 = t1534 * t1398 + t1533 * t1593;
t1299 = t1534 * t1397 + t1533 * t1594;
t1298 = (-t1374 * t1533 - t1375 * t1534) * pkin(7);
t1296 = -pkin(2) * t1706 + pkin(8) * t1386 - t1656;
t1295 = (-t1405 * t1533 - t1407 * t1534) * pkin(7) - t1592;
t1293 = -t1533 * t1391 + t1534 * t1595;
t1292 = t1534 * t1391 + t1533 * t1595;
t1291 = t1543 * t1355 + t1538 * t1382;
t1284 = -t1533 * t1385 + t1534 * t1596;
t1283 = t1534 * t1385 + t1533 * t1596;
t1274 = t1537 * t1347 + t1542 * t1360;
t1273 = t1537 * t1346 - t1542 * t1364;
t1268 = -t1533 * t1366 + t1534 * t1598;
t1267 = t1534 * t1366 + t1533 * t1598;
t1256 = -t1533 * t1367 + t1534 * t1597;
t1255 = t1534 * t1367 + t1533 * t1597;
t1247 = t1537 * t1279 - t1542 * t1436;
t1246 = t1543 * t1315 + t1538 * t1358;
t1245 = t1543 * t1314 - t1538 * t1356;
t1242 = -pkin(2) * t1409 + pkin(8) * t1272;
t1239 = t1537 * t1250 - t1542 * t1451;
t1237 = -t1533 * t1354 + t1534 * t1599;
t1236 = t1534 * t1354 + t1533 * t1599;
t1229 = t1543 * t1276 + t1538 * t1345;
t1228 = t1543 * t1275 + t1538 * t1344;
t1226 = pkin(2) * t1442 + pkin(8) * t1369 + t1272;
t1218 = -t1533 * t1313 + t1534 * t1600;
t1217 = -t1533 * t1312 + t1534 * t1601;
t1216 = t1534 * t1313 + t1533 * t1600;
t1215 = t1534 * t1312 + t1533 * t1601;
t1211 = t1543 * t1248 + t1538 * t1277;
t1197 = -t1533 * t1271 + t1534 * t1604;
t1196 = t1534 * t1271 + t1533 * t1604;
t1194 = t1543 * t1240 + t1538 * t1249;
t1192 = -t1533 * t1274 + t1534 * t1602;
t1191 = -t1533 * t1273 + t1534 * t1603;
t1190 = t1534 * t1274 + t1533 * t1602;
t1189 = t1534 * t1273 + t1533 * t1603;
t1188 = -t1533 * t1269 + t1534 * t1605;
t1187 = t1534 * t1269 + t1533 * t1605;
t1184 = t1537 * t1201 - t1637;
t1183 = t1537 * t1200 + t1637;
t1182 = -t1533 * t1263 + t1534 * t1606;
t1181 = t1534 * t1263 + t1533 * t1606;
t1177 = t1537 * t1224 + t1542 * t1258;
t1176 = t1537 * t1223 - t1542 * t1261;
t1170 = -t1538 * t1297 + t1543 * t1341 + (-t1292 * t1533 - t1293 * t1534) * pkin(7);
t1169 = -t1538 * t1294 + t1543 * t1334 + (-t1283 * t1533 - t1284 * t1534) * pkin(7);
t1168 = -t1533 * t1247 + t1534 * t1607;
t1167 = t1534 * t1247 + t1533 * t1607;
t1163 = -pkin(1) * t1292 - t1533 * t1304 + t1534 * t1565;
t1162 = pkin(1) * t1293 + t1534 * t1304 + t1533 * t1565;
t1161 = -t1533 * t1243 + t1534 * t1608;
t1160 = t1534 * t1243 + t1533 * t1608;
t1158 = -pkin(1) * t1283 - t1533 * t1296 + t1534 * t1566;
t1157 = pkin(1) * t1284 + t1534 * t1296 + t1533 * t1566;
t1154 = -t1533 * t1239 + t1534 * t1609;
t1153 = t1534 * t1239 + t1533 * t1609;
t1151 = t1367 * t1690 + t1543 * t1230 + (-t1255 * t1533 - t1256 * t1534) * pkin(7);
t1141 = t1543 * t1179 + t1538 * t1222;
t1140 = t1543 * t1178 + t1538 * t1221;
t1137 = t1537 * t1145 - t1542 * t1372;
t1136 = -pkin(2) * t1329 + pkin(8) * t1270 + t1542 * t1214 + t1537 * t1238;
t1135 = t1543 * t1186 + t1538 * t1199;
t1134 = t1543 * t1185 + t1538 * t1198;
t1133 = -pkin(2) * t1324 + pkin(8) * t1264 + t1542 * t1213 + t1537 * t1235;
t1130 = -pkin(1) * t1255 - t1533 * t1226 + t1534 * t1562;
t1129 = pkin(1) * t1256 + t1534 * t1226 + t1533 * t1562;
t1124 = t1626 * t1271 + (-t1196 * t1533 - t1197 * t1534) * pkin(7);
t1122 = -pkin(1) * t1196 - t1533 * t1242 + t1534 * t1560;
t1121 = pkin(1) * t1197 + t1534 * t1242 + t1533 * t1560;
t1120 = pkin(8) * t1244 + t1537 * t1152 + t1278 * t1646;
t1117 = -t1533 * t1177 + t1534 * t1612;
t1116 = -t1533 * t1176 + t1534 * t1613;
t1115 = t1534 * t1177 + t1533 * t1612;
t1114 = t1534 * t1176 + t1533 * t1613;
t1111 = -t1533 * t1184 + t1534 * t1610;
t1110 = -t1533 * t1183 + t1534 * t1611;
t1109 = t1534 * t1184 + t1533 * t1610;
t1108 = t1534 * t1183 + t1533 * t1611;
t1107 = -t1533 * t1171 + t1534 * t1614;
t1106 = t1534 * t1171 + t1533 * t1614;
t1102 = -t1533 * t1165 + t1534 * t1615;
t1101 = t1534 * t1165 + t1533 * t1615;
t1100 = t1543 * t1138 + t1538 * t1143;
t1096 = -t1533 * t1155 + t1534 * t1616;
t1095 = t1534 * t1155 + t1533 * t1616;
t1091 = pkin(8) * t1156 + (-pkin(9) * t1537 + t1646) * t1173;
t1089 = t1543 * t1147 - t1538 * t1180 + (-t1187 * t1533 - t1188 * t1534) * pkin(7);
t1088 = t1543 * t1142 - t1538 * t1175 + (-t1181 * t1533 - t1182 * t1534) * pkin(7);
t1087 = -t1533 * t1137 + t1534 * t1617;
t1086 = t1534 * t1137 + t1533 * t1617;
t1085 = -t1533 * t1131 + t1534 * t1618;
t1084 = t1534 * t1131 + t1533 * t1618;
t1083 = -pkin(1) * t1187 - t1533 * t1136 + t1534 * t1567;
t1082 = pkin(1) * t1188 + t1534 * t1136 + t1533 * t1567;
t1081 = -pkin(1) * t1181 - t1533 * t1133 + t1534 * t1568;
t1080 = pkin(1) * t1182 + t1534 * t1133 + t1533 * t1568;
t1076 = t1543 * t1126 - t1538 * t1128 + (-t1160 * t1533 - t1161 * t1534) * pkin(7);
t1072 = -pkin(2) * t1219 + pkin(8) * t1172 + t1537 * t1112 + t1542 * t1119;
t1071 = -pkin(2) * t1209 + pkin(8) * t1166 + t1537 * t1105 + t1542 * t1113;
t1070 = -pkin(1) * t1160 - t1533 * t1120 + t1534 * t1569;
t1069 = pkin(1) * t1161 + t1534 * t1120 + t1533 * t1569;
t1063 = t1543 * t1099 - t1538 * t1118 + (-t1095 * t1533 - t1096 * t1534) * pkin(7);
t1061 = -pkin(2) * t1144 + pkin(8) * t1132 + t1537 * t1067 + t1542 * t1123;
t1060 = t1543 * t1077 - t1538 * t1092 + (-t1106 * t1533 - t1107 * t1534) * pkin(7);
t1059 = -pkin(1) * t1095 - t1533 * t1091 + t1534 * t1570;
t1058 = pkin(1) * t1096 + t1534 * t1091 + t1533 * t1570;
t1057 = t1543 * t1073 - t1538 * t1090 + (-t1101 * t1533 - t1102 * t1534) * pkin(7);
t1056 = -t1533 * t1074 + t1534 * t1619;
t1055 = t1534 * t1074 + t1533 * t1619;
t1053 = -pkin(1) * t1106 - t1533 * t1072 + t1534 * t1571;
t1052 = pkin(1) * t1107 + t1534 * t1072 + t1533 * t1571;
t1051 = -pkin(1) * t1101 - t1533 * t1071 + t1534 * t1572;
t1050 = pkin(1) * t1102 + t1534 * t1071 + t1533 * t1572;
t1048 = -pkin(2) * t1078 + pkin(8) * t1075 + t1537 * t1065 + t1542 * t1068;
t1047 = t1543 * t1062 - t1538 * t1066 + (-t1084 * t1533 - t1085 * t1534) * pkin(7);
t1046 = -pkin(1) * t1084 - t1533 * t1061 + t1534 * t1573;
t1045 = pkin(1) * t1085 + t1534 * t1061 + t1533 * t1573;
t1044 = t1543 * t1049 - t1538 * t1054 + (-t1055 * t1533 - t1056 * t1534) * pkin(7);
t1043 = -pkin(1) * t1055 - t1533 * t1048 + t1534 * t1574;
t1042 = pkin(1) * t1056 + t1534 * t1048 + t1533 * t1574;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1519, 0, -t1518, 0, t1624, -t1504, -t1584, -pkin(6) * t1584, -t1539 * t1458 + t1544 * t1475, -t1539 * t1408 + t1544 * t1439, -t1539 * t1433 + t1544 * t1467, -t1539 * t1455 + t1544 * t1474, -t1539 * t1434 + t1544 * t1468, t1544 * t1485 + t1539 * t1676, t1544 * t1343 - t1539 * t1338 - pkin(6) * (t1544 * t1435 + t1539 * t1469), t1544 * t1339 - t1539 * t1327 - pkin(6) * (t1544 * t1417 + t1539 * t1462), t1544 * t1295 - t1539 * t1308 - pkin(6) * (t1544 * t1407 + t1539 * t1438), t1544 * t1298 - t1539 * t1316 - pkin(6) * (t1544 * t1375 + t1539 * t1390), -t1539 * t1323 + t1544 * t1377, -t1539 * t1268 + t1544 * t1328, -t1539 * t1301 + t1544 * t1351, -t1539 * t1322 + t1544 * t1376, -t1539 * t1302 + t1544 * t1352, -t1539 * t1371 + t1544 * t1411, t1544 * t1169 - t1539 * t1158 - pkin(6) * (t1544 * t1284 + t1539 * t1340), t1544 * t1170 - t1539 * t1163 - pkin(6) * (t1544 * t1293 + t1539 * t1342), t1544 * t1151 - t1539 * t1130 - pkin(6) * (t1544 * t1256 + t1539 * t1318), t1544 * t1124 - t1539 * t1122 - pkin(6) * (t1544 * t1197 + t1539 * t1241), -t1539 * t1218 + t1544 * t1246, -t1539 * t1168 + t1544 * t1211, -t1539 * t1191 + t1544 * t1228, -t1539 * t1217 + t1544 * t1245, -t1539 * t1192 + t1544 * t1229, -t1539 * t1237 + t1544 * t1291, t1544 * t1088 - t1539 * t1081 - pkin(6) * (t1544 * t1182 + t1539 * t1225), t1544 * t1089 - t1539 * t1083 - pkin(6) * (t1544 * t1188 + t1539 * t1227), t1544 * t1076 - t1539 * t1070 - pkin(6) * (t1544 * t1161 + t1539 * t1208), t1544 * t1063 - t1539 * t1059 - pkin(6) * (t1544 * t1096 + t1539 * t1125), -t1539 * t1111 + t1544 * t1135, -t1539 * t1087 + t1544 * t1100, -t1539 * t1116 + t1544 * t1140, -t1539 * t1110 + t1544 * t1134, -t1539 * t1117 + t1544 * t1141, -t1539 * t1154 + t1544 * t1194, t1544 * t1057 - t1539 * t1051 - pkin(6) * (t1544 * t1102 + t1539 * t1127), t1544 * t1060 - t1539 * t1053 - pkin(6) * (t1544 * t1107 + t1539 * t1139), t1544 * t1047 - t1539 * t1046 - pkin(6) * (t1544 * t1085 + t1539 * t1098), t1544 * t1044 - t1539 * t1043 - pkin(6) * (t1544 * t1056 + t1539 * t1064); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1518, 0, t1519, 0, t1504, t1624, t1629, pkin(6) * t1629, t1544 * t1458 + t1539 * t1475, t1544 * t1408 + t1539 * t1439, t1544 * t1433 + t1539 * t1467, t1544 * t1455 + t1539 * t1474, t1544 * t1434 + t1539 * t1468, t1539 * t1485 - t1544 * t1676, t1539 * t1343 + t1544 * t1338 + pkin(6) * (-t1539 * t1435 + t1544 * t1469), t1539 * t1339 + t1544 * t1327 + pkin(6) * (-t1539 * t1417 + t1544 * t1462), t1539 * t1295 + t1544 * t1308 + pkin(6) * (-t1539 * t1407 + t1544 * t1438), t1539 * t1298 + t1544 * t1316 + pkin(6) * (-t1539 * t1375 + t1544 * t1390), t1544 * t1323 + t1539 * t1377, t1544 * t1268 + t1539 * t1328, t1544 * t1301 + t1539 * t1351, t1544 * t1322 + t1539 * t1376, t1544 * t1302 + t1539 * t1352, t1544 * t1371 + t1539 * t1411, t1539 * t1169 + t1544 * t1158 + pkin(6) * (-t1539 * t1284 + t1544 * t1340), t1539 * t1170 + t1544 * t1163 + pkin(6) * (-t1539 * t1293 + t1544 * t1342), t1539 * t1151 + t1544 * t1130 + pkin(6) * (-t1539 * t1256 + t1544 * t1318), t1539 * t1124 + t1544 * t1122 + pkin(6) * (-t1539 * t1197 + t1544 * t1241), t1544 * t1218 + t1539 * t1246, t1544 * t1168 + t1539 * t1211, t1544 * t1191 + t1539 * t1228, t1544 * t1217 + t1539 * t1245, t1544 * t1192 + t1539 * t1229, t1544 * t1237 + t1539 * t1291, t1539 * t1088 + t1544 * t1081 + pkin(6) * (-t1539 * t1182 + t1544 * t1225), t1539 * t1089 + t1544 * t1083 + pkin(6) * (-t1539 * t1188 + t1544 * t1227), t1539 * t1076 + t1544 * t1070 + pkin(6) * (-t1539 * t1161 + t1544 * t1208), t1539 * t1063 + t1544 * t1059 + pkin(6) * (-t1539 * t1096 + t1544 * t1125), t1544 * t1111 + t1539 * t1135, t1544 * t1087 + t1539 * t1100, t1544 * t1116 + t1539 * t1140, t1544 * t1110 + t1539 * t1134, t1544 * t1117 + t1539 * t1141, t1544 * t1154 + t1539 * t1194, t1539 * t1057 + t1544 * t1051 + pkin(6) * (-t1539 * t1102 + t1544 * t1127), t1539 * t1060 + t1544 * t1053 + pkin(6) * (-t1539 * t1107 + t1544 * t1139), t1539 * t1047 + t1544 * t1046 + pkin(6) * (-t1539 * t1085 + t1544 * t1098), t1539 * t1044 + t1544 * t1043 + pkin(6) * (-t1539 * t1056 + t1544 * t1064); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1522, t1523, 0, 0, t1457, t1406, t1430, t1456, t1431, t1515, t1337, t1326, t1307, t1317, t1321, t1267, t1299, t1320, t1300, t1370, t1157, t1162, t1129, t1121, t1216, t1167, t1189, t1215, t1190, t1236, t1080, t1082, t1069, t1058, t1109, t1086, t1114, t1108, t1115, t1153, t1050, t1052, t1045, t1042; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1698, 0, 0, -g(3), -t1522, 0, t1475, t1439, t1467, t1474, t1468, t1485, t1343, t1339, t1295, t1298, t1377, t1328, t1351, t1376, t1352, t1411, t1169, t1170, t1151, t1124, t1246, t1211, t1228, t1245, t1229, t1291, t1088, t1089, t1076, t1063, t1135, t1100, t1140, t1134, t1141, t1194, t1057, t1060, t1047, t1044; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1698, 0, qJDD(1), 0, g(3), 0, -t1523, 0, t1458, t1408, t1433, t1455, t1434, -t1676, t1338, t1327, t1308, t1316, t1323, t1268, t1301, t1322, t1302, t1371, t1158, t1163, t1130, t1122, t1218, t1168, t1191, t1217, t1192, t1237, t1081, t1083, t1070, t1059, t1111, t1087, t1116, t1110, t1117, t1154, t1051, t1053, t1046, t1043; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1522, t1523, 0, 0, t1457, t1406, t1430, t1456, t1431, t1515, t1337, t1326, t1307, t1317, t1321, t1267, t1299, t1320, t1300, t1370, t1157, t1162, t1129, t1121, t1216, t1167, t1189, t1215, t1190, t1236, t1080, t1082, t1069, t1058, t1109, t1086, t1114, t1108, t1115, t1153, t1050, t1052, t1045, t1042; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1503, t1482, t1500, -t1511, t1506, t1511, 0, -t1486, t1460, 0, t1415, t1368, t1399, t1413, t1400, t1441, t1334, t1341, t1230, -pkin(8) * t1271, t1315, t1248, t1275, t1314, t1276, t1355, t1142, t1147, t1126, t1099, t1186, t1138, t1178, t1185, t1179, t1240, t1073, t1077, t1062, t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1510, t1479, t1505, -t1563, t1501, -t1510, t1486, 0, t1461, 0, -t1680, -t1464, -t1422, t1680, t1418, -t1557, t1294, t1297, -pkin(2) * t1367, -pkin(2) * t1271, -t1358, -t1277, -t1344, t1356, -t1345, -t1382, t1175, t1180, t1128, t1118, -t1199, -t1143, -t1221, -t1198, -t1222, -t1249, t1090, t1092, t1066, t1054; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1520, t1508, t1480, t1520, t1481, t1526, -t1460, -t1461, 0, 0, t1414, t1366, t1397, t1412, t1398, t1440, t1296, t1304, t1226, t1242, t1313, t1247, t1273, t1312, t1274, t1354, t1133, t1136, t1120, t1091, t1184, t1137, t1176, t1183, t1177, t1239, t1071, t1072, t1061, t1048; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1454, -t1706, t1551, -t1483, t1476, t1483, 0, t1409, t1349, 0, t1359, t1279, t1346, t1357, t1347, t1383, t1235, t1238, t1152, -pkin(9) * t1173, t1201, t1145, t1223, t1200, t1224, t1250, t1105, t1112, t1067, t1065; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1484, t1421, t1477, -t1579, -t1446, t1484, -t1409, 0, t1350, 0, -t1437, -t1436, -t1364, t1437, t1360, -t1452, t1213, t1214, -pkin(3) * t1278, -pkin(3) * t1173, -t1373, -t1372, -t1261, t1373, t1258, -t1451, t1113, t1119, t1123, t1068; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1680, t1464, t1422, -t1680, -t1418, t1557, -t1349, -t1350, 0, 0, t1358, t1277, t1344, -t1356, t1345, t1382, t1577, t1576, t1561, t1625, t1199, t1143, t1221, t1198, t1222, t1249, t1555, t1554, t1556, t1553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1388, t1361, t1699, t1449, t1444, -t1449, 0, t1305, t1232, 0, t1254, t1206, t1287, t1252, t1288, t1336, t1193, t1195, t1094, -pkin(10) * t1103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1450, t1363, t1445, -t1547, t1379, -t1450, -t1305, 0, t1233, 0, t1253, t1204, t1285, t1251, t1286, t1335, t1159, t1164, t1093, t1097; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1437, t1436, t1364, -t1437, -t1360, t1452, -t1232, -t1233, 0, 0, t1373, t1372, t1261, -t1373, -t1258, t1451, t1583, t1575, t1693, t1694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1290, -t1257, t1701, t1395, t1393, -t1395, 0, t1234, t1149, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1685, t1700, t1394, t1289, t1332, -t1685, -t1234, 0, t1150, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1373, t1372, t1261, -t1373, -t1258, t1451, -t1149, -t1150, 0, 0;];
m_new_reg = t1;
