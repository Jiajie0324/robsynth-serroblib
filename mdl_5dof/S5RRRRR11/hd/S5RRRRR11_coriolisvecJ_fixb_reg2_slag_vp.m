% Calculate inertial parameters regressor of coriolis joint torque vector for
% S5RRRRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [5x(5*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:45
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S5RRRRR11_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR11_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR11_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRRRR11_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:43:43
% EndTime: 2019-12-31 22:44:07
% DurationCPUTime: 10.13s
% Computational Cost: add. (14646->594), mult. (38302->844), div. (0->0), fcn. (29587->10), ass. (0->244)
t249 = sin(qJ(2));
t342 = cos(pkin(5));
t301 = pkin(1) * t342;
t237 = t249 * t301;
t248 = sin(qJ(3));
t251 = cos(qJ(3));
t276 = pkin(3) * t248 - pkin(9) * t251;
t245 = sin(pkin(5));
t252 = cos(qJ(2));
t329 = t245 * t252;
t387 = (t237 + (pkin(7) + t276) * t329) * qJD(1) - t276 * qJD(3);
t250 = cos(qJ(4));
t314 = qJD(1) * t252;
t297 = t245 * t314;
t315 = qJD(1) * t245;
t298 = t249 * t315;
t247 = sin(qJ(4));
t325 = t247 * t251;
t164 = -t250 * t298 + t297 * t325;
t309 = qJD(3) * t251;
t377 = -t247 * t309 + t164;
t307 = qJD(4) * t250;
t378 = t248 * t307 - t377;
t283 = t252 * t301;
t193 = -pkin(7) * t298 + qJD(1) * t283;
t267 = (pkin(2) * t249 - pkin(8) * t252) * t245;
t194 = qJD(1) * t267;
t128 = t251 * t193 + t248 * t194;
t116 = pkin(9) * t298 + t128;
t223 = -pkin(3) * t251 - pkin(9) * t248 - pkin(2);
t308 = qJD(4) * t247;
t310 = qJD(3) * t248;
t345 = -t250 * t116 + t223 * t307 + (-t250 * t310 - t251 * t308) * pkin(8) - t387 * t247;
t357 = pkin(8) * t247;
t386 = -t116 * t247 + t387 * t250 - t310 * t357;
t321 = t251 * t252;
t165 = (t247 * t249 + t250 * t321) * t315;
t322 = t250 * t251;
t238 = pkin(8) * t322;
t358 = pkin(4) * t248;
t385 = -pkin(10) * t165 + t297 * t358 - (-pkin(10) * t322 + t358) * qJD(3) - (-t238 + (pkin(10) * t248 - t223) * t247) * qJD(4) + t386;
t384 = t378 * pkin(10) - t345;
t287 = t342 * qJD(1);
t270 = t287 + qJD(2);
t178 = t248 * t270 + t251 * t298;
t227 = -qJD(3) + t297;
t134 = t247 * t178 + t227 * t250;
t136 = t178 * t250 - t227 * t247;
t246 = sin(qJ(5));
t359 = cos(qJ(5));
t266 = -t246 * t134 + t359 * t136;
t69 = t359 * t134 + t136 * t246;
t356 = t69 * t266;
t360 = -pkin(10) - pkin(9);
t300 = qJD(4) * t360;
t268 = t248 * t298 - t251 * t270;
t335 = t268 * t247;
t317 = pkin(7) * t329 + t237;
t191 = t342 * pkin(8) + t317;
t155 = qJD(2) * pkin(8) + t191 * qJD(1);
t192 = (-pkin(2) * t252 - pkin(8) * t249 - pkin(1)) * t245;
t170 = qJD(1) * t192;
t103 = -t248 * t155 + t170 * t251;
t121 = pkin(3) * t178 + pkin(9) * t268;
t50 = t250 * t103 + t247 * t121;
t383 = pkin(10) * t335 - t247 * t300 + t50;
t49 = -t103 * t247 + t250 * t121;
t382 = -pkin(4) * t178 - t49 + (-pkin(10) * t268 + t300) * t250;
t364 = qJD(4) + t268;
t381 = t134 * t364;
t380 = t136 * t364;
t291 = t359 * qJD(5);
t379 = (t359 * qJD(4) + t291) * t250;
t275 = t250 * t309 - t165;
t376 = -t248 * t308 + t275;
t104 = t155 * t251 + t170 * t248;
t195 = qJD(2) * t267;
t187 = qJD(1) * t195;
t330 = t245 * t249;
t205 = -pkin(7) * t330 + t283;
t197 = t205 * qJD(2);
t188 = qJD(1) * t197;
t284 = t155 * t309 + t170 * t310 - t251 * t187 + t248 * t188;
t375 = t104 * t227 + t284;
t374 = t266 ^ 2 - t69 ^ 2;
t313 = qJD(2) * t249;
t296 = t245 * t313;
t281 = qJD(1) * t296;
t52 = -t155 * t310 + t170 * t309 + t248 * t187 + t251 * t188;
t45 = pkin(9) * t281 + t52;
t304 = qJD(1) * qJD(2);
t289 = t252 * t304;
t280 = t245 * t289;
t365 = qJD(3) * t268;
t137 = -t251 * t280 + t365;
t311 = qJD(3) * t178;
t138 = t248 * t280 + t311;
t198 = t317 * qJD(2);
t189 = qJD(1) * t198;
t61 = t138 * pkin(3) + t137 * pkin(9) + t189;
t154 = -pkin(2) * t270 - t193;
t86 = pkin(3) * t268 - t178 * pkin(9) + t154;
t89 = -pkin(9) * t227 + t104;
t14 = t247 * t61 + t250 * t45 + t86 * t307 - t308 * t89;
t38 = -t247 * t89 + t250 * t86;
t373 = -t364 * t38 + t14;
t39 = t247 * t86 + t250 * t89;
t15 = -qJD(4) * t39 - t247 * t45 + t250 * t61;
t372 = -t364 * t39 - t15;
t160 = qJD(5) + t364;
t259 = t247 * t137 - t178 * t307 + t227 * t308 + t250 * t281;
t306 = qJD(5) * t246;
t65 = t250 * t137 + t178 * t308 + t227 * t307 - t247 * t281;
t22 = t134 * t291 + t136 * t306 - t246 * t259 + t359 * t65;
t371 = t160 * t69 - t22;
t33 = -pkin(10) * t136 + t38;
t28 = pkin(4) * t364 + t33;
t34 = -pkin(10) * t134 + t39;
t6 = t138 * pkin(4) + t65 * pkin(10) + t15;
t7 = pkin(10) * t259 + t14;
t256 = -t246 * t6 - t28 * t291 + t34 * t306 - t359 * t7;
t88 = pkin(3) * t227 - t103;
t51 = pkin(4) * t134 + t88;
t370 = t51 * t69 + t256;
t242 = t245 ^ 2;
t368 = -0.2e1 * t242 * t304;
t367 = t103 * t227 + t52;
t190 = -t342 * pkin(2) - t205;
t201 = t248 * t330 - t342 * t251;
t202 = t342 * t248 + t251 * t330;
t111 = t201 * pkin(3) - t202 * pkin(9) + t190;
t123 = t251 * t191 + t248 * t192;
t113 = -pkin(9) * t329 + t123;
t48 = t247 * t111 + t250 * t113;
t186 = t247 * t223 + t238;
t363 = qJD(4) + qJD(5);
t303 = t359 * t34;
t10 = t246 * t28 + t303;
t2 = -qJD(5) * t10 - t246 * t7 + t359 * t6;
t362 = -t51 * t266 + t2;
t23 = qJD(5) * t266 - t246 * t65 - t359 * t259;
t361 = t160 * t266 - t23;
t253 = qJD(1) ^ 2;
t228 = t360 * t247;
t229 = t360 * t250;
t157 = t359 * t228 + t246 * t229;
t355 = -t157 * qJD(5) - t382 * t246 + t383 * t359;
t211 = t250 * t223;
t324 = t248 * t250;
t141 = -pkin(10) * t324 + t211 + (-pkin(4) - t357) * t251;
t326 = t247 * t248;
t152 = -pkin(10) * t326 + t186;
t91 = t246 * t141 + t359 * t152;
t354 = t91 * qJD(5) - t384 * t246 + t385 * t359;
t90 = t359 * t141 - t246 * t152;
t353 = -t90 * qJD(5) + t385 * t246 + t384 * t359;
t352 = t246 * t34;
t46 = -pkin(3) * t281 + t284;
t351 = t46 * t247;
t350 = t46 * t250;
t349 = t65 * t247;
t158 = t246 * t228 - t359 * t229;
t348 = -t158 * qJD(5) + t383 * t246 + t382 * t359;
t282 = t359 * t309;
t347 = t359 * t164 - t376 * t246 - t247 * t282 - t248 * t379 + t306 * t326;
t213 = t246 * t250 + t359 * t247;
t144 = t363 * t213;
t346 = t144 * t248 + t359 * t165 - t377 * t246 - t250 * t282;
t344 = -t186 * qJD(4) - t386;
t127 = -t248 * t193 + t194 * t251;
t115 = -pkin(3) * t298 - t127;
t343 = t378 * pkin(4) + pkin(8) * t309 - t115;
t339 = t134 * t247;
t338 = t136 * t134;
t114 = t138 * t201;
t337 = t138 * t251;
t336 = t268 * t227;
t334 = t178 * t268;
t333 = t178 * t227;
t263 = t227 * t248;
t332 = t227 * t251;
t331 = t242 * t253;
t328 = t246 * t247;
t327 = t247 * t138;
t323 = t250 * t138;
t320 = -t213 * t268 - t144;
t265 = t359 * t250 - t328;
t319 = -t265 * t268 + t363 * t328 - t379;
t316 = t249 ^ 2 - t252 ^ 2;
t312 = qJD(2) * t251;
t302 = t247 * t329;
t295 = qJD(2) * t329;
t47 = t250 * t111 - t113 * t247;
t122 = -t248 * t191 + t192 * t251;
t286 = t364 * t250;
t285 = t249 * t252 * t331;
t279 = -t104 + (t308 + t335) * pkin(4);
t278 = t245 * t253 * t342;
t277 = pkin(1) * t368;
t112 = pkin(3) * t329 - t122;
t274 = -t247 * t39 - t250 * t38;
t273 = t242 * t249 * t289;
t269 = 0.2e1 * t287 + qJD(2);
t67 = -t191 * t309 - t192 * t310 + t195 * t251 - t248 * t197;
t149 = t202 * t250 - t302;
t36 = pkin(4) * t201 - pkin(10) * t149 + t47;
t148 = t202 * t247 + t250 * t329;
t40 = -pkin(10) * t148 + t48;
t16 = -t246 * t40 + t359 * t36;
t17 = t246 * t36 + t359 * t40;
t93 = -t246 * t148 + t359 * t149;
t66 = -t191 * t310 + t192 * t309 + t248 * t195 + t251 * t197;
t55 = pkin(9) * t296 + t66;
t146 = qJD(3) * t202 + t248 * t295;
t147 = -qJD(3) * t201 + t251 * t295;
t77 = t146 * pkin(3) - t147 * pkin(9) + t198;
t20 = t111 * t307 - t113 * t308 + t247 * t77 + t250 * t55;
t262 = -pkin(9) * t138 + t364 * t88;
t258 = pkin(1) * (-qJD(2) * t287 + t331);
t56 = -pkin(3) * t296 - t67;
t257 = t259 * t250;
t21 = -t48 * qJD(4) - t247 * t55 + t250 * t77;
t241 = -pkin(4) * t250 - pkin(3);
t217 = (pkin(4) * t247 + pkin(8)) * t248;
t200 = t265 * t248;
t199 = t213 * t248;
t196 = t317 * qJD(1);
t185 = -pkin(8) * t325 + t211;
t92 = t359 * t148 + t246 * t149;
t85 = -qJD(4) * t148 + t147 * t250 + t247 * t296;
t84 = -qJD(4) * t302 + t147 * t247 + t202 * t307 - t250 * t296;
t73 = pkin(4) * t148 + t112;
t35 = pkin(4) * t84 + t56;
t29 = -pkin(4) * t259 + t46;
t27 = t93 * qJD(5) + t246 * t85 + t359 * t84;
t26 = t148 * t291 + t149 * t306 + t246 * t84 - t359 * t85;
t13 = -pkin(10) * t84 + t20;
t12 = t359 * t33 - t352;
t11 = -t246 * t33 - t303;
t9 = t359 * t28 - t352;
t8 = t146 * pkin(4) - t85 * pkin(10) + t21;
t4 = -t17 * qJD(5) - t246 * t13 + t359 * t8;
t3 = t16 * qJD(5) + t359 * t13 + t246 * t8;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t273, t316 * t368, t269 * t295, -0.2e1 * t273, -t269 * t296, 0, -t189 * t342 - t198 * t270 + t249 * t277, -t188 * t342 - t197 * t270 + t252 * t277, (t188 * t252 + t189 * t249 + (-t193 * t252 - t196 * t249) * qJD(2) + (t197 * t252 + t198 * t249 + (-t205 * t252 - t249 * t317) * qJD(2)) * qJD(1)) * t245, t188 * t317 - t189 * t205 - t193 * t198 + t196 * t197, -t137 * t202 + t147 * t178, t137 * t201 - t138 * t202 - t146 * t178 - t147 * t268, -t147 * t227 + (t137 * t252 + (qJD(1) * t202 + t178) * t313) * t245, t146 * t268 + t114, t146 * t227 + (t138 * t252 + (-qJD(1) * t201 - t268) * t313) * t245, (-t227 * t245 - t242 * t314) * t313, t190 * t138 + t154 * t146 + t198 * t268 + t189 * t201 - t67 * t227 + (t252 * t284 + (qJD(1) * t122 + t103) * t313) * t245, -t190 * t137 + t154 * t147 + t198 * t178 + t189 * t202 + t66 * t227 + (t252 * t52 + (-qJD(1) * t123 - t104) * t313) * t245, -t103 * t147 - t104 * t146 + t122 * t137 - t123 * t138 - t178 * t67 - t201 * t52 + t202 * t284 - t268 * t66, t103 * t67 + t104 * t66 - t122 * t284 + t123 * t52 + t154 * t198 + t189 * t190, t136 * t85 - t149 * t65, -t85 * t134 - t136 * t84 + t65 * t148 + t149 * t259, t136 * t146 + t138 * t149 - t201 * t65 + t364 * t85, t134 * t84 - t148 * t259, -t134 * t146 - t148 * t138 + t201 * t259 - t364 * t84, t146 * t364 + t114, -t112 * t259 + t56 * t134 + t47 * t138 + t38 * t146 + t46 * t148 + t15 * t201 + t21 * t364 + t88 * t84, -t112 * t65 + t136 * t56 - t138 * t48 - t14 * t201 - t146 * t39 + t149 * t46 - t20 * t364 + t85 * t88, -t20 * t134 - t21 * t136 - t14 * t148 - t15 * t149 + t259 * t48 - t38 * t85 - t39 * t84 + t47 * t65, t112 * t46 + t14 * t48 + t15 * t47 + t20 * t39 + t21 * t38 + t56 * t88, -t22 * t93 - t26 * t266, t22 * t92 - t23 * t93 + t26 * t69 - t266 * t27, t138 * t93 + t146 * t266 - t160 * t26 - t201 * t22, t23 * t92 + t27 * t69, -t138 * t92 - t146 * t69 - t160 * t27 - t201 * t23, t146 * t160 + t114, t138 * t16 + t146 * t9 + t160 * t4 + t2 * t201 + t23 * t73 + t27 * t51 + t29 * t92 + t35 * t69, -t10 * t146 - t138 * t17 - t160 * t3 + t201 * t256 - t22 * t73 - t26 * t51 + t266 * t35 + t29 * t93, -t10 * t27 + t16 * t22 - t17 * t23 - t2 * t93 + t256 * t92 + t26 * t9 - t266 * t4 - t3 * t69, t10 * t3 + t16 * t2 - t17 * t256 + t29 * t73 + t35 * t51 + t4 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t285, t316 * t331, -t252 * t278, t285, t249 * t278, 0, -pkin(7) * t280 + t196 * t270 + t249 * t258, pkin(7) * t281 + t193 * t270 + t252 * t258, 0, 0, -t137 * t248 - t178 * t332, (-t137 + t336) * t251 + (-t138 + t333) * t248, -t227 * t309 + (t227 * t321 + (t248 * qJD(2) - t178) * t249) * t315, -t263 * t268 - t337, t227 * t310 + (-t252 * t263 + (t268 + t312) * t249) * t315, t227 * t298, -pkin(2) * t138 + t127 * t227 - t196 * t268 - t189 * t251 + (pkin(8) * t332 + t154 * t248) * qJD(3) + (-t103 * t249 + (-pkin(8) * t313 - t154 * t252) * t248) * t315, pkin(2) * t137 - t128 * t227 - t196 * t178 + t189 * t248 + (-pkin(8) * t263 + t154 * t251) * qJD(3) + (-t154 * t321 + (-pkin(8) * t312 + t104) * t249) * t315, t127 * t178 + t128 * t268 + ((-t138 + t311) * pkin(8) + t367) * t251 + ((-t137 + t365) * pkin(8) + t375) * t248, -t189 * pkin(2) - t103 * t127 - t104 * t128 - t154 * t196 + (t284 * t248 + t52 * t251 + (-t103 * t251 - t104 * t248) * qJD(3)) * pkin(8), t376 * t136 - t65 * t324, t165 * t134 + t136 * t164 + (-t134 * t250 - t136 * t247) * t309 + (t257 + t349 + (-t136 * t250 + t339) * qJD(4)) * t248, t65 * t251 + t275 * t364 + (-t136 * t227 - t308 * t364 + t323) * t248, t378 * t134 - t259 * t326, -t259 * t251 + t377 * t364 + (t134 * t227 - t307 * t364 - t327) * t248, -t263 * t364 - t337, -t115 * t134 + t185 * t138 - t88 * t164 + t344 * t364 + (-t15 + (pkin(8) * t134 + t247 * t88) * qJD(3)) * t251 + (-pkin(8) * t259 - t227 * t38 + t307 * t88 + t351) * t248, -t115 * t136 - t186 * t138 - t88 * t165 - t345 * t364 + (t14 + (pkin(8) * t136 + t250 * t88) * qJD(3)) * t251 + (-pkin(8) * t65 + t227 * t39 - t308 * t88 + t350) * t248, t186 * t259 + t185 * t65 + t39 * t164 + t38 * t165 - t344 * t136 - t345 * t134 + t274 * t309 + (-t14 * t247 - t15 * t250 + (t247 * t38 - t250 * t39) * qJD(4)) * t248, -t88 * t115 + t14 * t186 + t15 * t185 + t345 * t39 + t344 * t38 + (t248 * t46 + t309 * t88) * pkin(8), -t22 * t200 - t266 * t346, t22 * t199 - t200 * t23 + t266 * t347 + t346 * t69, t200 * t138 - t160 * t346 + t22 * t251 - t263 * t266, t23 * t199 - t347 * t69, -t199 * t138 + t160 * t347 + t23 * t251 + t263 * t69, -t160 * t263 - t337, t90 * t138 - t354 * t160 + t29 * t199 - t2 * t251 + t217 * t23 - t263 * t9 + t343 * t69 - t347 * t51, t10 * t263 - t91 * t138 + t353 * t160 + t29 * t200 - t217 * t22 - t251 * t256 + t266 * t343 - t346 * t51, t347 * t10 + t199 * t256 - t2 * t200 + t90 * t22 - t91 * t23 + t266 * t354 + t346 * t9 + t353 * t69, -t353 * t10 + t2 * t90 + t29 * t217 - t256 * t91 + t343 * t51 - t354 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t334, t178 ^ 2 - t268 ^ 2, -t137 - t336, -t334, -t333 - t138, t281, -t154 * t178 - t375, t154 * t268 - t367, 0, 0, t136 * t286 - t349, (-t65 - t381) * t250 + (t259 - t380) * t247, -t136 * t178 + t286 * t364 + t327, t339 * t364 + t257, -t247 * t364 ^ 2 + t134 * t178 + t323, -t364 * t178, pkin(3) * t259 - t350 - t38 * t178 - t104 * t134 + (-pkin(9) * t307 - t49) * t364 + t262 * t247, pkin(3) * t65 - t104 * t136 + t39 * t178 + t351 + (pkin(9) * t308 + t50) * t364 + t262 * t250, t50 * t134 + t49 * t136 + ((qJD(4) * t136 + t259) * pkin(9) + t373) * t250 + ((qJD(4) * t134 - t65) * pkin(9) + t372) * t247, -t46 * pkin(3) - t88 * t104 - t38 * t49 - t39 * t50 + (qJD(4) * t274 + t14 * t250 - t15 * t247) * pkin(9), -t22 * t213 - t266 * t319, -t213 * t23 - t22 * t265 + t266 * t320 + t319 * t69, t213 * t138 - t160 * t319 - t178 * t266, -t23 * t265 - t320 * t69, t138 * t265 + t160 * t320 + t69 * t178, -t160 * t178, t157 * t138 + t160 * t348 - t9 * t178 + t241 * t23 - t265 * t29 + t279 * t69 - t320 * t51, t10 * t178 - t158 * t138 + t355 * t160 + t29 * t213 - t241 * t22 + t266 * t279 - t319 * t51, t320 * t10 + t157 * t22 - t158 * t23 - t2 * t213 - t256 * t265 - t266 * t348 + t319 * t9 + t355 * t69, -t355 * t10 + t2 * t157 - t158 * t256 + t29 * t241 + t279 * t51 + t348 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, -t134 ^ 2 + t136 ^ 2, -t65 + t381, -t338, t259 + t380, t138, -t88 * t136 - t372, t134 * t88 - t373, 0, 0, t356, t374, t371, -t356, t361, t138, -t11 * t160 + (-t136 * t69 + t359 * t138 - t160 * t306) * pkin(4) + t362, t12 * t160 + (-t136 * t266 - t138 * t246 - t160 * t291) * pkin(4) + t370, t10 * t266 + t11 * t266 + t12 * t69 - t9 * t69 + (t359 * t22 - t23 * t246 + (t246 * t266 - t359 * t69) * qJD(5)) * pkin(4), -t10 * t12 - t9 * t11 + (t359 * t2 - t256 * t246 - t136 * t51 + (t359 * t10 - t246 * t9) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, t374, t371, -t356, t361, t138, t10 * t160 + t362, t9 * t160 + t370, 0, 0;];
tauc_reg = t1;
