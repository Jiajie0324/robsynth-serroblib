% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:19
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR8_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR8_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR8_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR8_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:18:17
% EndTime: 2019-12-31 20:18:35
% DurationCPUTime: 10.66s
% Computational Cost: add. (13354->488), mult. (25876->665), div. (0->0), fcn. (30128->8), ass. (0->401)
t323 = cos(qJ(5));
t319 = sin(pkin(9));
t322 = sin(qJ(2));
t324 = cos(qJ(2));
t531 = cos(pkin(9));
t389 = t531 * t324;
t299 = -t319 * t322 + t389;
t510 = t319 * t324;
t300 = t322 * t531 + t510;
t321 = sin(qJ(4));
t558 = cos(qJ(4));
t266 = -t299 * t558 + t300 * t321;
t515 = t266 ^ 2;
t295 = t558 * t300;
t501 = t321 * t299;
t585 = t295 + t501;
t600 = t585 ^ 2;
t601 = t600 - t515;
t608 = t601 * t323;
t611 = t608 * qJD(1);
t595 = t323 * t266;
t603 = t595 / 0.2e1;
t604 = -t595 / 0.2e1;
t606 = t604 + t603;
t612 = qJD(5) * t606;
t613 = t611 + t612;
t424 = qJD(2) + qJD(4);
t320 = sin(qJ(5));
t609 = t601 * t320;
t610 = t609 * qJD(1);
t382 = t295 / 0.2e1;
t584 = t382 + t501 / 0.2e1;
t588 = t585 * qJD(1);
t602 = t266 * t588;
t607 = qJD(5) * t584 + t602;
t605 = t601 * qJD(1);
t596 = t320 * t585;
t399 = t596 / 0.2e1;
t318 = t323 ^ 2;
t597 = t318 * t266;
t244 = -t597 / 0.2e1;
t245 = t597 / 0.2e1;
t552 = t266 * pkin(8);
t598 = t585 * pkin(4);
t172 = t598 + t552;
t599 = -t266 / 0.2e1;
t381 = pkin(2) * t531 + pkin(3);
t557 = pkin(2) * t319;
t292 = t321 * t557 - t381 * t558;
t286 = -pkin(4) + t292;
t566 = t286 / 0.2e1;
t562 = t292 / 0.2e1;
t571 = t585 / 0.2e1;
t555 = pkin(8) * t585;
t311 = -pkin(2) * t324 - pkin(1);
t280 = -pkin(3) * t299 + t311;
t379 = pkin(4) * t266 - t555;
t332 = t280 + t379;
t547 = -qJ(3) - pkin(6);
t378 = t547 * t531;
t355 = t322 * t378;
t272 = t510 * t547 + t355;
t548 = t300 * pkin(7);
t329 = t272 - t548;
t328 = t321 * t329;
t390 = t319 * t547;
t302 = t322 * t390;
t274 = -t389 * t547 + t302;
t550 = t299 * pkin(7);
t220 = t274 + t550;
t416 = t558 * t220;
t132 = t416 + t328;
t508 = t320 * t132;
t73 = -t323 * t332 + t508;
t499 = t323 * t132;
t74 = t320 * t332 + t499;
t594 = (t320 * t74 - t323 * t73) * t266;
t436 = t266 * qJD(4);
t593 = -qJD(2) * t266 - t436;
t592 = qJD(1) * t266;
t591 = qJD(3) * t266;
t589 = t584 * qJD(1);
t587 = 0.2e1 * t585;
t317 = t320 ^ 2;
t306 = t318 - t317;
t586 = t424 * t306;
t165 = 0.2e1 * t604;
t271 = t324 * t378 - t302;
t333 = t271 - t550;
t330 = t321 * t333;
t273 = t324 * t390 + t355;
t219 = t273 - t548;
t417 = t558 * t219;
t131 = t417 + t330;
t500 = t323 * t131;
t316 = t322 * pkin(2);
t549 = t300 * pkin(3);
t281 = t316 + t549;
t133 = t281 + t172;
t507 = t320 * t133;
t76 = t500 + t507;
t536 = t76 * t323;
t498 = t323 * t133;
t509 = t320 * t131;
t75 = t498 - t509;
t539 = t75 * t320;
t583 = t536 / 0.2e1 - t539 / 0.2e1;
t567 = -t286 / 0.2e1;
t391 = t562 + t567;
t293 = t321 * t381 + t557 * t558;
t561 = t293 / 0.2e1;
t287 = pkin(8) + t293;
t565 = -t287 / 0.2e1;
t331 = (t565 + t561) * t585 + t391 * t266;
t582 = -t555 / 0.2e1 + t331;
t504 = t320 * t323;
t569 = t266 / 0.2e1;
t140 = (t599 + t569) * t504;
t560 = t317 / 0.2e1;
t148 = (t560 - t318 / 0.2e1) * t585;
t461 = t148 * qJD(5);
t581 = -qJD(4) * t140 + t461;
t580 = qJD(2) * t140 + t461;
t139 = t165 * t320;
t579 = -t139 * qJD(4) + t461;
t578 = -t139 * qJD(2) + t461;
t315 = qJD(5) * t323;
t308 = t320 * t315;
t465 = t140 * qJD(1);
t577 = t465 - t308;
t576 = t465 + t308;
t413 = qJD(1) * t504;
t57 = t148 * t424 + t413 * t600;
t574 = t300 ^ 2;
t573 = t75 / 0.2e1;
t572 = -t76 / 0.2e1;
t564 = t287 / 0.2e1;
t563 = -t292 / 0.2e1;
t556 = pkin(4) * t320;
t211 = t558 * t333;
t503 = t321 * t219;
t129 = -t211 + t503;
t554 = t129 * pkin(4);
t546 = qJD(2) * pkin(2);
t212 = t558 * t329;
t502 = t321 * t220;
t130 = -t212 + t502;
t524 = t130 * t129;
t3 = -t73 * t75 + t74 * t76 + t524;
t545 = t3 * qJD(1);
t537 = t76 * t320;
t538 = t75 * t323;
t4 = (t537 + t538) * t585 - t594;
t544 = t4 * qJD(1);
t497 = t323 * t172;
t522 = t130 * t320;
t85 = t497 + t522;
t506 = t320 * t172;
t521 = t130 * t323;
t86 = t506 - t521;
t5 = t130 * t132 - t73 * t85 + t74 * t86;
t543 = t5 * qJD(1);
t533 = t86 * t320;
t534 = t85 * t323;
t6 = (t533 + t534) * t585 - t594;
t542 = t6 * qJD(1);
t541 = t73 * t320;
t540 = t74 * t323;
t535 = t85 * t320;
t532 = t86 * t323;
t363 = t129 * t585 - t130 * t266;
t10 = t75 * t266 + t320 * t363 - t585 * t73;
t530 = t10 * qJD(1);
t11 = -t76 * t266 + t323 * t363 - t585 * t74;
t529 = t11 * qJD(1);
t12 = (-t73 + t508) * t585 + (t85 - t522) * t266;
t528 = t12 * qJD(1);
t527 = t129 * t320;
t526 = t129 * t323;
t13 = (-t74 + t499) * t585 + (-t86 - t521) * t266;
t525 = t13 * qJD(1);
t523 = t130 * t585;
t14 = t523 - (t540 + t541) * t266;
t520 = t14 * qJD(1);
t377 = (t318 / 0.2e1 + t560) * t266;
t334 = -t287 * t377 + t566 * t585;
t353 = -t538 / 0.2e1 - t537 / 0.2e1;
t16 = t334 + t353;
t519 = t16 * qJD(1);
t18 = -t131 * t266 - t132 * t585 + t363;
t518 = t18 * qJD(1);
t327 = t555 / 0.2e1 + pkin(4) * t599 + t331;
t394 = t132 / 0.2e1 - t129 / 0.2e1;
t19 = t320 * t327 - t323 * t394;
t517 = t19 * qJD(1);
t336 = -pkin(8) * t377 - t598 / 0.2e1;
t352 = -t534 / 0.2e1 - t533 / 0.2e1;
t23 = t336 + t352;
t516 = t23 * qJD(1);
t513 = t286 * t320;
t30 = t131 * t132 + t280 * t281 + t524;
t512 = t30 * qJD(1);
t153 = t320 * t266;
t495 = t323 * t585;
t44 = -t130 * t596 + t266 * t73;
t494 = t44 * qJD(1);
t45 = t130 * t495 - t266 * t74;
t493 = t45 * qJD(1);
t50 = -t132 * t266 + t523;
t492 = t50 * qJD(1);
t87 = (-t271 - t274) * t300 + (-t272 + t273) * t299;
t491 = t87 * qJD(1);
t257 = t317 * t266;
t234 = -t257 / 0.2e1;
t400 = t266 * t560;
t372 = t245 + t400;
t88 = t244 + t234 + t372;
t490 = t88 * qJD(1);
t235 = t257 / 0.2e1;
t91 = t245 + t235 + t372;
t489 = t91 * qJD(1);
t96 = t600 + t515;
t93 = t96 * t320;
t487 = t93 * qJD(1);
t95 = t96 * t323;
t485 = t95 * qJD(1);
t484 = t96 * qJD(1);
t349 = t293 * t569 + t563 * t585;
t312 = t316 / 0.2e1;
t387 = t312 + t549 / 0.2e1;
t98 = t349 + t387;
t482 = t98 * qJD(1);
t392 = 0.2e1 * t571;
t160 = t392 * t323;
t438 = t585 * qJD(2);
t481 = qJD(4) * t160 + t323 * t438;
t479 = qJD(1) * t280;
t478 = qJD(1) * t324;
t477 = qJD(2) * t323;
t476 = qJD(4) * t323;
t475 = qJD(5) * t320;
t100 = t271 * t272 + t273 * t274 + t311 * t316;
t474 = t100 * qJD(1);
t103 = t266 * t281 + t280 * t585;
t473 = t103 * qJD(1);
t104 = -t266 * t280 + t281 * t585;
t472 = t104 * qJD(1);
t138 = -t272 * t300 + t274 * t299;
t468 = t138 * qJD(1);
t462 = t148 * qJD(1);
t460 = t596 * qJD(1);
t393 = t571 - t585 / 0.2e1;
t151 = t393 * t320;
t459 = t151 * qJD(1);
t152 = t392 * t320;
t458 = t152 * qJD(1);
t457 = t153 * qJD(1);
t155 = 0.2e1 * t599 * t320;
t145 = t155 * qJD(1);
t159 = t393 * t323;
t456 = t159 * qJD(1);
t455 = t160 * qJD(1);
t454 = t595 * qJD(1);
t164 = 0.2e1 * t603;
t453 = t164 * qJD(1);
t452 = t165 * qJD(1);
t170 = t257 + t597;
t451 = t170 * qJD(1);
t171 = t306 * t600;
t450 = t171 * qJD(1);
t198 = 0.2e1 * t382 + t501;
t448 = t198 * qJD(1);
t335 = (t319 * t299 / 0.2e1 - t531 * t300 / 0.2e1) * pkin(2);
t215 = -t316 / 0.2e1 + t335;
t447 = t215 * qJD(1);
t298 = t299 ^ 2;
t217 = t298 - t574;
t446 = t217 * qJD(1);
t254 = -t299 * t316 + t300 * t311;
t445 = t254 * qJD(1);
t255 = t299 * t311 + t300 * t316;
t444 = t255 * qJD(1);
t263 = t382 - t295 / 0.2e1;
t441 = t263 * qJD(1);
t440 = t263 * qJD(4);
t437 = t585 * qJD(3);
t433 = t585 * qJD(4);
t270 = t298 + t574;
t432 = t270 * qJD(1);
t431 = t293 * qJD(2);
t283 = t293 * qJD(4);
t430 = t299 * qJD(1);
t429 = t300 * qJD(1);
t428 = t300 * qJD(2);
t307 = -t322 ^ 2 + t324 ^ 2;
t427 = t307 * qJD(1);
t426 = t322 * qJD(2);
t425 = t324 * qJD(2);
t422 = pkin(1) * t322 * qJD(1);
t421 = pkin(1) * t478;
t415 = t317 * t588;
t414 = t318 * t588;
t412 = qJD(5) * t266 * t585;
t409 = t585 * t592;
t408 = t266 * t479;
t407 = t585 * t479;
t406 = t299 * t429;
t405 = t299 * t428;
t404 = t320 * t477;
t403 = t320 * t476;
t402 = t322 * t425;
t401 = t323 * t588;
t398 = t320 * t569;
t395 = t130 / 0.2e1 + t131 / 0.2e1;
t216 = (-t317 - t318) * t292;
t388 = t424 * t323;
t386 = t600 * t308;
t384 = t585 * t413;
t383 = t244 + t400;
t380 = pkin(4) / 0.2e1 + t391;
t376 = -0.2e1 * t384;
t375 = 0.2e1 * t384;
t374 = t211 / 0.2e1 - t503 / 0.2e1;
t373 = -t212 / 0.2e1 + t502 / 0.2e1;
t371 = t320 * t388;
t370 = t424 * t504;
t368 = t536 - t539;
t367 = t532 - t535;
t366 = t266 * t384;
t101 = t216 * t287 + t286 * t293;
t350 = t130 * t561 + t132 * t566;
t2 = t554 / 0.2e1 + (pkin(8) * t572 + t563 * t74 + t564 * t86) * t323 + (pkin(8) * t573 + t563 * t73 + t565 * t85) * t320 + t350;
t365 = -t2 * qJD(1) - t101 * qJD(2);
t9 = (t86 / 0.2e1 + t572) * t323 + (-t85 / 0.2e1 + t573) * t320;
t364 = -qJD(1) * t9 - qJD(2) * t216;
t361 = -t286 * t266 - t287 * t585;
t326 = -t330 / 0.2e1 - t417 / 0.2e1;
t78 = -t326 + t373;
t360 = -qJD(1) * t78 - qJD(2) * t292;
t325 = t328 / 0.2e1 + t416 / 0.2e1;
t77 = t325 + t374;
t359 = qJD(1) * t77 + t431;
t358 = t585 * (-qJD(5) - t592);
t357 = qJD(4) * t198 + t438;
t354 = t552 / 0.2e1 + t598 / 0.2e1;
t351 = t532 / 0.2e1 - t535 / 0.2e1;
t348 = t266 * t564 + t567 * t585;
t22 = t320 * t394 + t323 * t327;
t347 = -qJD(1) * t22 - t320 * t431;
t339 = t133 / 0.2e1 + t348;
t31 = t320 * t339 + t323 * t395;
t346 = -qJD(1) * t31 - t286 * t477;
t33 = t320 * t395 - t323 * t339;
t345 = -qJD(1) * t33 - qJD(2) * t513;
t342 = (t433 + t438) * t266;
t341 = t593 * t585;
t340 = t172 / 0.2e1 + t354;
t199 = t380 * t320;
t48 = t340 * t323;
t338 = qJD(1) * t48 + qJD(2) * t199 + qJD(4) * t556;
t200 = t380 * t323;
t46 = t340 * t320;
t337 = pkin(4) * t476 - qJD(1) * t46 + qJD(2) * t200;
t309 = t322 * t478;
t305 = t306 * qJD(5);
t297 = t299 * qJD(2);
t282 = t292 * qJD(4);
t279 = t320 * t283;
t218 = -0.2e1 * t585 * t308;
t214 = t312 + t335;
t213 = t216 * qJD(4);
t202 = (-pkin(4) / 0.2e1 + t566 + t562) * t323;
t201 = -t556 / 0.2e1 + t513 / 0.2e1 + t320 * t562;
t175 = t376 + t586;
t174 = t375 - t586;
t169 = t424 * t584;
t158 = t399 - t596 / 0.2e1;
t157 = 0.2e1 * t399;
t156 = -t153 / 0.2e1 + t398;
t147 = t159 * qJD(4);
t144 = t156 * qJD(5);
t143 = t155 * qJD(5);
t135 = t145 - t475;
t127 = t370 - t462;
t126 = -t371 + t462;
t99 = -t349 + t387;
t90 = t245 + t234 + t383;
t89 = t244 + t235 + t383;
t80 = -t325 + t374;
t79 = t326 + t373;
t49 = t522 + t497 / 0.2e1 - t354 * t323;
t47 = t521 - t506 / 0.2e1 + t354 * t320;
t34 = t522 / 0.2e1 - t509 / 0.2e1 + t498 / 0.2e1 - t348 * t323;
t32 = t521 / 0.2e1 - t500 / 0.2e1 - t507 / 0.2e1 + t348 * t320;
t24 = t336 - t352;
t21 = t508 / 0.2e1 + pkin(4) * t603 + t527 / 0.2e1 + t582 * t323;
t20 = -t499 / 0.2e1 + pkin(4) * t398 - t526 / 0.2e1 + t582 * t320;
t15 = t334 - t353;
t8 = t351 + t583;
t1 = -t554 / 0.2e1 + (-t540 / 0.2e1 - t541 / 0.2e1) * t292 + t351 * t287 + t350 + t583 * pkin(8);
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402, t307 * qJD(2), 0, -t402, 0, 0, -pkin(1) * t426, -pkin(1) * t425, 0, 0, t405, t217 * qJD(2), 0, -t405, 0, 0, t254 * qJD(2), t255 * qJD(2), qJD(2) * t87 + qJD(3) * t270, qJD(2) * t100 + qJD(3) * t138, t341, -t424 * t601, 0, t342, 0, 0, qJD(2) * t103 + t280 * t433, qJD(2) * t104 - t280 * t436, qJD(2) * t18 + qJD(3) * t96, qJD(2) * t30 + qJD(3) * t50, t318 * t341 - t386, -0.2e1 * t320 * t495 * t593 - t171 * qJD(5), -t320 * t412 + t424 * t608, t317 * t341 + t386, -t323 * t412 - t424 * t609, t342, qJD(2) * t10 + qJD(3) * t93 + qJD(4) * t12 + qJD(5) * t45, qJD(2) * t11 + qJD(3) * t95 + qJD(4) * t13 + qJD(5) * t44, -qJD(2) * t4 - qJD(4) * t6, qJD(2) * t3 + qJD(3) * t14 + qJD(4) * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, t427, t425, -t309, -t426, 0, -pkin(6) * t425 - t422, pkin(6) * t426 - t421, 0, 0, t406, t446, t297, -t406, -t428, 0, qJD(2) * t271 + t445, -qJD(2) * t273 + t444, t491 + (-t299 * t531 - t300 * t319) * t546, t474 + (t271 * t531 + t273 * t319) * t546 + t214 * qJD(3), -t409, -t605, t593, t602, -t357, 0, -qJD(2) * t129 + qJD(4) * t80 + t473, -qJD(2) * t131 + qJD(4) * t79 + t472, t518 + (-t292 * t266 - t293 * t585) * qJD(2), t512 + (t129 * t292 + t131 * t293) * qJD(2) + t99 * qJD(3), -(t404 + t414) * t266 - t579, 0.2e1 * t366 + (t257 - t597) * qJD(2) + t89 * qJD(4) + t218, qJD(4) * t157 + t320 * t438 + t613, -(-t404 + t415) * t266 + t579, t144 + t481 - t610, t607, t530 + (t320 * t361 - t526) * qJD(2) + t20 * qJD(4) + t34 * qJD(5), t529 + (t323 * t361 + t527) * qJD(2) + t21 * qJD(4) + t32 * qJD(5), qJD(2) * t368 + qJD(4) * t8 - t544, t545 + (t129 * t286 + t287 * t368) * qJD(2) + t15 * qJD(3) + t1 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t432, qJD(2) * t214 + t468, 0, 0, 0, 0, 0, 0, t440, 0, t484, qJD(2) * t99 + t492, 0, 0, 0, 0, 0, 0, t144 - t147 + t487, qJD(4) * t158 + t485 + t612, t90 * qJD(4), qJD(2) * t15 + qJD(4) * t24 + t520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t602, -t605, t593, t602, -qJD(2) * t198 - t433, 0, qJD(2) * t80 + qJD(3) * t263 - qJD(4) * t132 + t407, qJD(2) * t79 + qJD(4) * t130 - t408, 0, 0, (-t403 - t414) * t266 - t578, t89 * qJD(2) + t218 + (-qJD(4) * t306 + t375) * t266, qJD(2) * t157 + t320 * t433 + t613, (t403 - t415) * t266 + t578, qJD(2) * t160 + t323 * t433 - t610, t607, t528 + t20 * qJD(2) - t159 * qJD(3) + (t320 * t379 - t499) * qJD(4) + t49 * qJD(5), t525 + t21 * qJD(2) + t158 * qJD(3) + (t323 * t379 + t508) * qJD(4) + t47 * qJD(5), qJD(2) * t8 + qJD(3) * t90 + qJD(4) * t367 - t542, t543 + t1 * qJD(2) + t24 * qJD(3) + (-t132 * pkin(4) + pkin(8) * t367) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, -t371 * t587 - t450, t320 * t358 + t424 * t606, t57, t156 * qJD(2) + t323 * t358, t169, qJD(2) * t34 + qJD(3) * t156 + qJD(4) * t49 - qJD(5) * t74 + t493, qJD(2) * t32 + qJD(3) * t606 + qJD(4) * t47 + qJD(5) * t73 + t494, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, -t427, 0, t309, 0, 0, t422, t421, 0, 0, -t406, -t446, 0, t406, 0, 0, -qJD(3) * t300 - t445, -qJD(3) * t299 - t444, -t491, qJD(3) * t215 - t474, t409, t605, 0, -t602, -t440, 0, -qJD(4) * t77 - t437 - t473, qJD(4) * t78 - t472 + t591, -t518, -qJD(3) * t98 - t512, t318 * t409 - t581, qJD(4) * t88 + t218 - 0.2e1 * t366, -qJD(4) * t151 + qJD(5) * t164 - t611, t317 * t409 + t581, t143 - t147 + t610, -t607, qJD(4) * t19 + qJD(5) * t33 - t323 * t437 - t530, qJD(3) * t596 + qJD(4) * t22 + qJD(5) * t31 - t529, -qJD(3) * t170 + qJD(4) * t9 + t544, qJD(3) * t16 + qJD(4) * t2 - t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t283, t282, 0, 0, t308, t305, 0, -t308, 0, 0, -t283 * t323 + t286 * t475, t286 * t315 + t279, t213, t101 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t429, -t430, 0, t447, 0, 0, 0, 0, 0, 0, -t588, t592, 0, -t482, 0, 0, 0, 0, 0, 0, -t401, t460, -t451, t519; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t441, 0, -t283 - t359, t282 - t360, 0, 0, t576, t305 + t490, -t459, -t576, -t456, 0, t201 * qJD(5) - t293 * t388 + t517, qJD(5) * t202 + t279 - t347, t213 - t364, (-t293 * pkin(4) + pkin(8) * t216) * qJD(4) - t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127, t175, t315 + t453, t126, t135, -t589, qJD(4) * t201 - t287 * t315 - t345, qJD(4) * t202 + t287 * t475 - t346, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t428, t297, -t432, -qJD(2) * t215 - t468, 0, 0, 0, 0, 0, 0, t357, t593, -t484, qJD(2) * t98 - t492, 0, 0, 0, 0, 0, 0, t143 + t481 - t487, -qJD(2) * t596 - qJD(4) * t152 + qJD(5) * t165 - t485, qJD(2) * t170 + qJD(4) * t91, -qJD(2) * t16 - qJD(4) * t23 - t520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t429, t430, 0, -t447, 0, 0, 0, 0, 0, 0, t588, -t592, 0, t482, 0, 0, 0, 0, 0, 0, t401, -t460, t451, -t519; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t448, -t592, 0, 0, 0, 0, 0, 0, 0, 0, t455, -t458, t489, -t516; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, -t315 + t452, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t602, t605, 0, -t602, t263 * qJD(2), 0, qJD(2) * t77 - qJD(3) * t198 - t407, -qJD(2) * t78 + t408 + t591, 0, 0, t318 * t602 - t580, -qJD(2) * t88 + t266 * t376 + t218, qJD(2) * t151 + qJD(5) * t595 - t611, t317 * t602 + t580, qJD(2) * t159 - qJD(5) * t153 + t610, -t607, -qJD(2) * t19 - qJD(3) * t160 - qJD(5) * t48 - t528, -qJD(2) * t22 + qJD(3) * t152 + qJD(5) * t46 - t525, -qJD(2) * t9 - qJD(3) * t91 + t542, -qJD(2) * t2 + qJD(3) * t23 - t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441, 0, t359, t360, 0, 0, -t577, t305 - t490, t459, t577, t456, 0, -qJD(5) * t199 + t323 * t431 - t517, -qJD(5) * t200 + t347, t364, t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t448, t592, 0, 0, 0, 0, 0, 0, 0, 0, -t455, t458, -t489, t516; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t308, t305, 0, -t308, 0, 0, -pkin(4) * t475, -pkin(4) * t315, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127, t175, t315 + t454, t126, -t457 - t475, -t589, -pkin(8) * t315 - t338, pkin(8) * t475 - t337, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, t370 * t587 + t450, -qJD(2) * t164 - qJD(4) * t595 + t320 * t602, -t57, -qJD(2) * t155 + qJD(4) * t153 + t323 * t602, t169, -qJD(2) * t33 - qJD(3) * t155 + qJD(4) * t48 - t493, -qJD(2) * t31 - qJD(3) * t165 - qJD(4) * t46 - t494, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, t174, -t453, t127, -t145, t589, qJD(4) * t199 + t345, qJD(4) * t200 + t346, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, -t452, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, t174, -t454, t127, t457, t589, t338, t337, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t7;
