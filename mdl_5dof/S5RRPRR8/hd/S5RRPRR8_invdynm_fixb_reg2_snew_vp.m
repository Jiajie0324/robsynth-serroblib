% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:19
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPRR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR8_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR8_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR8_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:18:44
% EndTime: 2019-12-31 20:19:04
% DurationCPUTime: 21.69s
% Computational Cost: add. (158252->734), mult. (370592->1031), div. (0->0), fcn. (271261->10), ass. (0->509)
t1307 = cos(qJ(2));
t1293 = t1307 * qJDD(1);
t1303 = sin(qJ(2));
t1398 = qJD(1) * t1303;
t1354 = qJD(2) * t1398;
t1269 = t1293 - t1354;
t1298 = t1307 ^ 2;
t1310 = qJD(1) ^ 2;
t1320 = qJD(2) * pkin(2) - qJ(3) * t1398;
t1304 = sin(qJ(1));
t1308 = cos(qJ(1));
t1278 = t1304 * g(1) - t1308 * g(2);
t1321 = qJDD(1) * pkin(1) + t1278;
t1192 = t1269 * pkin(2) - t1320 * t1398 - qJDD(3) + t1321 + (t1298 * qJ(3) + pkin(6)) * t1310;
t1299 = sin(pkin(9));
t1300 = cos(pkin(9));
t1397 = qJD(1) * t1307;
t1258 = -t1299 * t1398 + t1300 * t1397;
t1259 = (t1299 * t1307 + t1300 * t1303) * qJD(1);
t1227 = t1258 * t1259;
t1406 = qJDD(2) + t1227;
t1415 = t1299 * t1406;
t1414 = t1300 * t1406;
t1301 = sin(qJ(5));
t1302 = sin(qJ(4));
t1306 = cos(qJ(4));
t1219 = t1302 * t1258 + t1306 * t1259;
t1289 = qJD(2) * t1397;
t1365 = t1303 * qJDD(1);
t1268 = t1289 + t1365;
t1229 = t1300 * t1268 + t1299 * t1269;
t1342 = t1299 * t1268 - t1300 * t1269;
t1343 = t1302 * t1229 + t1306 * t1342;
t1144 = -t1219 * qJD(4) - t1343;
t1143 = qJDD(5) - t1144;
t1305 = cos(qJ(5));
t1368 = qJD(2) + qJD(4);
t1193 = t1301 * t1219 - t1305 * t1368;
t1195 = t1305 * t1219 + t1301 * t1368;
t1151 = t1195 * t1193;
t1408 = t1143 - t1151;
t1413 = t1301 * t1408;
t1217 = -t1306 * t1258 + t1302 * t1259;
t1166 = t1219 * t1217;
t1296 = qJDD(2) + qJDD(4);
t1407 = -t1166 + t1296;
t1412 = t1302 * t1407;
t1411 = t1305 * t1408;
t1410 = t1306 * t1407;
t1145 = -t1217 * qJD(4) + t1306 * t1229 - t1302 * t1342;
t1210 = t1368 * t1217;
t1409 = t1145 - t1210;
t1256 = t1258 ^ 2;
t1334 = qJD(2) * pkin(3) - t1259 * pkin(7);
t1122 = -pkin(3) * t1342 + t1256 * pkin(7) - t1259 * t1334 + t1192;
t1361 = t1368 ^ 2;
t1395 = qJD(3) * t1258;
t1251 = 0.2e1 * t1395;
t1375 = t1303 * t1310;
t1279 = t1308 * g(1) + t1304 * g(2);
t1262 = -t1310 * pkin(1) + qJDD(1) * pkin(6) - t1279;
t1378 = t1303 * t1262;
t1399 = qJD(1) * qJD(2);
t1185 = qJDD(2) * pkin(2) - t1268 * qJ(3) - t1378 + (pkin(2) * t1375 + qJ(3) * t1399 - g(3)) * t1307;
t1244 = -t1303 * g(3) + t1307 * t1262;
t1294 = t1298 * t1310;
t1186 = -pkin(2) * t1294 + t1269 * qJ(3) - qJD(2) * t1320 + t1244;
t1367 = t1299 * t1185 + t1300 * t1186;
t1124 = t1251 + t1367;
t1091 = -t1256 * pkin(3) - pkin(7) * t1342 - qJD(2) * t1334 + t1124;
t1123 = 0.2e1 * qJD(3) * t1259 - t1300 * t1185 + t1299 * t1186;
t1254 = qJD(2) * t1258;
t1201 = t1229 - t1254;
t1311 = pkin(3) * t1406 - t1201 * pkin(7) - t1123;
t1021 = t1306 * t1091 + t1302 * t1311;
t1164 = t1217 * pkin(4) - t1219 * pkin(8);
t1001 = -t1361 * pkin(4) + t1296 * pkin(8) - t1217 * t1164 + t1021;
t1345 = t1368 * t1219;
t1018 = -t1409 * pkin(8) + (-t1144 + t1345) * pkin(4) - t1122;
t954 = t1301 * t1001 - t1305 * t1018;
t955 = t1305 * t1001 + t1301 * t1018;
t914 = t1301 * t954 + t1305 * t955;
t1190 = t1193 ^ 2;
t1191 = t1195 ^ 2;
t1214 = qJD(5) + t1217;
t1213 = t1214 ^ 2;
t1215 = t1217 ^ 2;
t1216 = t1219 ^ 2;
t1257 = t1259 ^ 2;
t1063 = -t1300 * t1123 + t1299 * t1124;
t1405 = pkin(2) * t1063;
t1396 = qJD(2) * t1259;
t1199 = -t1342 + t1396;
t1147 = t1299 * t1199 - t1300 * t1201;
t1404 = pkin(2) * t1147;
t1403 = pkin(4) * t1302;
t1020 = t1302 * t1091 - t1306 * t1311;
t1000 = -t1296 * pkin(4) - t1361 * pkin(8) + t1219 * t1164 + t1020;
t1402 = -pkin(4) * t1000 + pkin(8) * t914;
t961 = -t1306 * t1020 + t1302 * t1021;
t1401 = t1299 * t961;
t1400 = t1300 * t961;
t1394 = t1214 * t1301;
t1393 = t1214 * t1305;
t1392 = t1258 * t1299;
t1391 = t1258 * t1300;
t1390 = t1259 * t1299;
t1389 = t1259 * t1300;
t1297 = t1303 ^ 2;
t1388 = t1297 * t1310;
t1387 = t1299 * t1192;
t1223 = qJDD(2) - t1227;
t1386 = t1299 * t1223;
t1385 = t1300 * t1192;
t1384 = t1300 * t1223;
t997 = t1301 * t1000;
t1088 = t1143 + t1151;
t1383 = t1301 * t1088;
t1382 = t1302 * t1122;
t1162 = t1166 + t1296;
t1381 = t1302 * t1162;
t1380 = t1303 * t1063;
t1261 = t1310 * pkin(6) + t1321;
t1379 = t1303 * t1261;
t1285 = t1307 * t1375;
t1276 = qJDD(2) + t1285;
t1377 = t1303 * t1276;
t1277 = qJDD(2) - t1285;
t1376 = t1303 * t1277;
t998 = t1305 * t1000;
t1374 = t1305 * t1088;
t1373 = t1306 * t1122;
t1372 = t1306 * t1162;
t1371 = t1307 * t1063;
t1370 = t1307 * t1261;
t1369 = t1307 * t1277;
t1366 = t1297 + t1298;
t1364 = t1304 * qJDD(1);
t1363 = t1308 * qJDD(1);
t1362 = t1308 * qJDD(2);
t898 = -t1306 * t1000 + t1302 * t914;
t1360 = pkin(3) * t898 + t1402;
t1359 = -pkin(4) * t1306 - pkin(3);
t1130 = -t1191 - t1213;
t1040 = -t1301 * t1130 - t1374;
t1324 = -t1305 * t1145 - t1301 * t1296;
t1080 = (qJD(5) + t1214) * t1193 + t1324;
t1358 = pkin(4) * t1080 + pkin(8) * t1040 + t997;
t1117 = -t1213 - t1190;
t1035 = t1305 * t1117 - t1413;
t1159 = t1214 * t1195;
t1344 = -t1301 * t1145 + t1305 * t1296;
t1317 = t1195 * qJD(5) - t1344;
t1076 = -t1159 - t1317;
t1357 = pkin(4) * t1076 + pkin(8) * t1035 - t998;
t962 = t1302 * t1020 + t1306 * t1021;
t915 = t1299 * t962 + t1400;
t960 = pkin(3) * t961;
t1356 = pkin(2) * t915 + t960;
t1355 = t1302 * t1151;
t1353 = t1304 * t1166;
t1352 = t1304 * t1227;
t1351 = t1306 * t1151;
t1350 = t1308 * t1166;
t1349 = t1308 * t1227;
t1204 = -t1216 - t1361;
t1120 = t1306 * t1204 - t1381;
t1348 = pkin(3) * t1120 - t1021;
t1111 = qJD(2) * t1219 - t1343;
t1114 = t1145 + t1210;
t1051 = t1302 * t1111 - t1306 * t1114;
t1049 = pkin(3) * t1051;
t1053 = t1306 * t1111 + t1302 * t1114;
t980 = t1300 * t1051 + t1299 * t1053;
t1347 = pkin(2) * t980 + t1049;
t1064 = t1299 * t1123 + t1300 * t1124;
t1243 = t1307 * g(3) + t1378;
t1189 = t1303 * t1243 + t1307 * t1244;
t1341 = -t1304 * t1278 - t1308 * t1279;
t1077 = (-qJD(5) + t1214) * t1195 + t1344;
t1099 = -t1193 * qJD(5) - t1324;
t1158 = t1214 * t1193;
t1079 = t1099 + t1158;
t1013 = t1305 * t1077 + t1301 * t1079;
t1116 = t1190 + t1191;
t1340 = pkin(4) * t1116 + pkin(8) * t1013 + t914;
t987 = t1302 * t1040 + t1306 * t1080;
t1339 = pkin(3) * t987 + t1358;
t984 = t1302 * t1035 + t1306 * t1076;
t1338 = pkin(3) * t984 + t1357;
t1337 = t1304 * t1285;
t1336 = t1308 * t1285;
t1309 = qJD(2) ^ 2;
t1249 = -t1257 - t1309;
t1173 = t1300 * t1249 - t1386;
t1335 = pkin(2) * t1173 - t1367;
t1273 = -t1304 * t1310 + t1363;
t1333 = -pkin(5) * t1273 - t1304 * g(3);
t1331 = t1302 * t1210;
t1330 = t1302 * t1345;
t1329 = t1306 * t1210;
t1328 = t1306 * t1345;
t1160 = -t1361 - t1215;
t1100 = t1302 * t1160 + t1410;
t1327 = pkin(3) * t1100 - t1020;
t971 = t1302 * t1013 + t1306 * t1116;
t1326 = pkin(3) * t971 + t1340;
t899 = t1302 * t1000 + t1306 * t914;
t877 = t1299 * t899 + t1300 * t898;
t1325 = pkin(2) * t877 + t1360;
t913 = t1301 * t955 - t1305 * t954;
t1188 = t1307 * t1243 - t1303 * t1244;
t1323 = t1308 * t1278 - t1304 * t1279;
t1121 = -t1302 * t1204 - t1372;
t1060 = t1300 * t1120 + t1299 * t1121;
t1322 = pkin(2) * t1060 + t1348;
t985 = t1306 * t1035 - t1302 * t1076;
t935 = t1299 * t985 + t1300 * t984;
t1319 = pkin(2) * t935 + t1338;
t988 = t1306 * t1040 - t1302 * t1080;
t937 = t1299 * t988 + t1300 * t987;
t1318 = pkin(2) * t937 + t1339;
t1101 = t1306 * t1160 - t1412;
t1036 = t1300 * t1100 + t1299 * t1101;
t1316 = pkin(2) * t1036 + t1327;
t972 = t1306 * t1013 - t1302 * t1116;
t923 = t1299 * t972 + t1300 * t971;
t1315 = pkin(2) * t923 + t1326;
t1221 = -t1309 - t1256;
t1167 = t1299 * t1221 + t1414;
t1314 = pkin(2) * t1167 - t1123;
t1292 = t1304 * qJDD(2);
t1284 = -t1294 - t1309;
t1283 = t1294 - t1309;
t1282 = -t1309 - t1388;
t1281 = t1309 - t1388;
t1275 = -t1294 + t1388;
t1274 = t1294 + t1388;
t1272 = t1308 * t1310 + t1364;
t1271 = t1366 * qJDD(1);
t1270 = t1293 - 0.2e1 * t1354;
t1267 = 0.2e1 * t1289 + t1365;
t1265 = t1307 * t1276;
t1264 = t1366 * t1399;
t1255 = -pkin(5) * t1272 + t1308 * g(3);
t1248 = -t1257 + t1309;
t1247 = t1256 - t1309;
t1246 = t1307 * t1268 - t1297 * t1399;
t1245 = -t1303 * t1269 - t1298 * t1399;
t1242 = -t1303 * t1282 - t1369;
t1241 = -t1303 * t1281 + t1265;
t1240 = t1307 * t1284 - t1377;
t1239 = t1307 * t1283 - t1376;
t1238 = t1307 * t1282 - t1376;
t1237 = t1307 * t1281 + t1377;
t1236 = t1303 * t1284 + t1265;
t1235 = t1303 * t1283 + t1369;
t1234 = (t1268 + t1289) * t1303;
t1233 = (t1269 - t1354) * t1307;
t1231 = -t1303 * t1267 + t1307 * t1270;
t1230 = t1307 * t1267 + t1303 * t1270;
t1226 = t1257 - t1256;
t1212 = (t1390 + t1391) * qJD(2);
t1211 = (-t1389 + t1392) * qJD(2);
t1208 = -t1216 + t1361;
t1207 = t1215 - t1361;
t1206 = -pkin(6) * t1238 - t1370;
t1205 = -pkin(6) * t1236 - t1379;
t1203 = -pkin(1) * t1238 + t1244;
t1202 = -pkin(1) * t1236 + t1243;
t1200 = t1229 + t1254;
t1197 = t1342 + t1396;
t1196 = -t1256 - t1257;
t1184 = -qJD(2) * t1390 + t1300 * t1229;
t1183 = qJD(2) * t1389 + t1299 * t1229;
t1182 = -qJD(2) * t1391 + t1299 * t1342;
t1181 = -qJD(2) * t1392 - t1300 * t1342;
t1179 = pkin(1) * t1270 + pkin(6) * t1240 + t1370;
t1178 = -pkin(1) * t1267 + pkin(6) * t1242 - t1379;
t1176 = -t1299 * t1249 - t1384;
t1175 = -t1299 * t1248 + t1414;
t1174 = t1300 * t1247 - t1386;
t1172 = t1300 * t1248 + t1415;
t1171 = t1299 * t1247 + t1384;
t1170 = pkin(1) * t1261 + pkin(6) * t1189;
t1169 = pkin(1) * t1274 + pkin(6) * t1271 + t1189;
t1168 = t1300 * t1221 - t1415;
t1165 = t1216 - t1215;
t1157 = -t1191 + t1213;
t1156 = t1190 - t1213;
t1155 = -t1303 * t1211 + t1307 * t1212;
t1154 = t1307 * t1211 + t1303 * t1212;
t1153 = -t1329 + t1330;
t1152 = -t1331 - t1328;
t1150 = t1191 - t1190;
t1149 = t1300 * t1199 + t1299 * t1201;
t1148 = -t1300 * t1197 - t1299 * t1200;
t1146 = -t1299 * t1197 + t1300 * t1200;
t1142 = -qJ(3) * t1173 - t1385;
t1141 = -t1215 - t1216;
t1140 = -t1303 * t1183 + t1307 * t1184;
t1139 = -t1303 * t1181 + t1307 * t1182;
t1138 = t1307 * t1183 + t1303 * t1184;
t1137 = t1307 * t1181 + t1303 * t1182;
t1136 = -t1303 * t1173 + t1307 * t1176;
t1135 = -t1303 * t1172 + t1307 * t1175;
t1134 = -t1303 * t1171 + t1307 * t1174;
t1133 = t1307 * t1173 + t1303 * t1176;
t1132 = t1307 * t1172 + t1303 * t1175;
t1131 = t1307 * t1171 + t1303 * t1174;
t1129 = -qJ(3) * t1167 - t1387;
t1128 = t1306 * t1207 - t1381;
t1127 = -t1302 * t1208 + t1410;
t1126 = t1302 * t1207 + t1372;
t1125 = t1306 * t1208 + t1412;
t1109 = (0.2e1 * qJD(4) + qJD(2)) * t1219 + t1343;
t1108 = t1306 * t1145 - t1330;
t1107 = t1302 * t1145 + t1328;
t1106 = -t1302 * t1144 + t1329;
t1105 = t1306 * t1144 + t1331;
t1104 = -t1303 * t1167 + t1307 * t1168;
t1103 = t1307 * t1167 + t1303 * t1168;
t1102 = -pkin(2) * t1200 + qJ(3) * t1176 - t1387;
t1096 = -pkin(2) * t1197 + qJ(3) * t1168 + t1385;
t1095 = (-t1193 * t1305 + t1195 * t1301) * t1214;
t1094 = (-t1193 * t1301 - t1195 * t1305) * t1214;
t1093 = -t1299 * t1152 + t1300 * t1153;
t1092 = t1300 * t1152 + t1299 * t1153;
t1086 = -t1303 * t1147 + t1307 * t1149;
t1085 = -t1303 * t1146 + t1307 * t1148;
t1084 = t1307 * t1147 + t1303 * t1149;
t1083 = t1307 * t1146 + t1303 * t1148;
t1078 = t1099 - t1158;
t1075 = -t1159 + t1317;
t1072 = t1305 * t1099 - t1195 * t1394;
t1071 = t1301 * t1099 + t1195 * t1393;
t1070 = t1193 * t1393 + t1301 * t1317;
t1069 = -t1193 * t1394 + t1305 * t1317;
t1068 = -t1299 * t1126 + t1300 * t1128;
t1067 = -t1299 * t1125 + t1300 * t1127;
t1066 = t1300 * t1126 + t1299 * t1128;
t1065 = t1300 * t1125 + t1299 * t1127;
t1062 = -pkin(7) * t1120 - t1373;
t1061 = -t1299 * t1120 + t1300 * t1121;
t1059 = t1306 * t1095 + t1302 * t1143;
t1058 = t1302 * t1095 - t1306 * t1143;
t1057 = t1305 * t1156 - t1383;
t1056 = -t1301 * t1157 + t1411;
t1055 = t1301 * t1156 + t1374;
t1054 = t1305 * t1157 + t1413;
t1052 = -t1306 * t1109 - t1302 * t1409;
t1050 = -t1302 * t1109 + t1306 * t1409;
t1048 = -pkin(7) * t1100 - t1382;
t1047 = -t1299 * t1107 + t1300 * t1108;
t1046 = -t1299 * t1105 + t1300 * t1106;
t1045 = t1300 * t1107 + t1299 * t1108;
t1044 = t1300 * t1105 + t1299 * t1106;
t1043 = -pkin(1) * t1084 - t1404;
t1042 = -pkin(1) * t1133 + t1251 - t1335;
t1041 = pkin(2) * t1192 + qJ(3) * t1064;
t1039 = t1305 * t1130 - t1383;
t1037 = -t1299 * t1100 + t1300 * t1101;
t1034 = t1301 * t1117 + t1411;
t1032 = t1306 * t1072 + t1355;
t1031 = t1306 * t1070 - t1355;
t1030 = t1302 * t1072 - t1351;
t1029 = t1302 * t1070 + t1351;
t1028 = -pkin(1) * t1103 - t1314;
t1027 = -qJ(3) * t1147 - t1063;
t1026 = -t1303 * t1092 + t1307 * t1093;
t1025 = t1307 * t1092 + t1303 * t1093;
t1024 = -pkin(6) * t1133 - t1303 * t1102 + t1307 * t1142;
t1023 = -pkin(3) * t1409 + pkin(7) * t1121 - t1382;
t1022 = -pkin(2) * t1196 + qJ(3) * t1149 + t1064;
t1016 = -pkin(3) * t1109 + pkin(7) * t1101 + t1373;
t1015 = -pkin(1) * t1200 + pkin(6) * t1136 + t1307 * t1102 + t1303 * t1142;
t1014 = -pkin(6) * t1103 - t1303 * t1096 + t1307 * t1129;
t1012 = t1305 * t1076 - t1301 * t1078;
t1011 = t1301 * t1077 - t1305 * t1079;
t1010 = t1301 * t1076 + t1305 * t1078;
t1008 = -pkin(1) * t1197 + pkin(6) * t1104 + t1307 * t1096 + t1303 * t1129;
t1007 = -t1303 * t1066 + t1307 * t1068;
t1006 = -t1303 * t1065 + t1307 * t1067;
t1005 = t1307 * t1066 + t1303 * t1068;
t1004 = t1307 * t1065 + t1303 * t1067;
t1003 = t1307 * t1064 - t1380;
t1002 = t1303 * t1064 + t1371;
t996 = -t1303 * t1060 + t1307 * t1061;
t995 = t1307 * t1060 + t1303 * t1061;
t994 = t1306 * t1057 - t1302 * t1075;
t993 = t1306 * t1056 + t1302 * t1079;
t992 = t1302 * t1057 + t1306 * t1075;
t991 = t1302 * t1056 - t1306 * t1079;
t990 = -t1299 * t1058 + t1300 * t1059;
t989 = t1300 * t1058 + t1299 * t1059;
t982 = -t1299 * t1051 + t1300 * t1053;
t981 = -t1299 * t1050 + t1300 * t1052;
t979 = t1300 * t1050 + t1299 * t1052;
t978 = t1306 * t1012 + t1302 * t1150;
t977 = t1302 * t1012 - t1306 * t1150;
t976 = -t1303 * t1045 + t1307 * t1047;
t975 = -t1303 * t1044 + t1307 * t1046;
t974 = t1307 * t1045 + t1303 * t1047;
t973 = t1307 * t1044 + t1303 * t1046;
t969 = -t1303 * t1036 + t1307 * t1037;
t968 = t1307 * t1036 + t1303 * t1037;
t967 = -t1299 * t1030 + t1300 * t1032;
t966 = -t1299 * t1029 + t1300 * t1031;
t965 = t1300 * t1030 + t1299 * t1032;
t964 = t1300 * t1029 + t1299 * t1031;
t963 = -pkin(1) * t1002 - t1405;
t959 = -pkin(8) * t1039 + t998;
t958 = -pkin(8) * t1034 + t997;
t957 = -qJ(3) * t1060 - t1299 * t1023 + t1300 * t1062;
t956 = pkin(3) * t1122 + pkin(7) * t962;
t951 = -pkin(6) * t1084 - t1303 * t1022 + t1307 * t1027;
t950 = -pkin(1) * t1196 + pkin(6) * t1086 + t1307 * t1022 + t1303 * t1027;
t949 = -qJ(3) * t1036 - t1299 * t1016 + t1300 * t1048;
t948 = -pkin(2) * t1409 + qJ(3) * t1061 + t1300 * t1023 + t1299 * t1062;
t947 = -t1299 * t992 + t1300 * t994;
t946 = -t1299 * t991 + t1300 * t993;
t945 = t1299 * t994 + t1300 * t992;
t944 = t1299 * t993 + t1300 * t991;
t943 = -pkin(6) * t1002 - qJ(3) * t1371 - t1303 * t1041;
t942 = -pkin(7) * t1051 - t961;
t941 = pkin(1) * t1192 + pkin(6) * t1003 - qJ(3) * t1380 + t1307 * t1041;
t940 = -t1303 * t989 + t1307 * t990;
t939 = t1303 * t990 + t1307 * t989;
t938 = -t1299 * t987 + t1300 * t988;
t936 = -t1299 * t984 + t1300 * t985;
t934 = -t1303 * t980 + t1307 * t982;
t933 = -t1303 * t979 + t1307 * t981;
t932 = t1303 * t982 + t1307 * t980;
t931 = t1303 * t981 + t1307 * t979;
t930 = -t1299 * t977 + t1300 * t978;
t929 = t1299 * t978 + t1300 * t977;
t928 = -pkin(2) * t1109 + qJ(3) * t1037 + t1300 * t1016 + t1299 * t1048;
t927 = -pkin(3) * t1141 + pkin(7) * t1053 + t962;
t926 = -pkin(4) * t1039 + t955;
t925 = -pkin(4) * t1034 + t954;
t924 = -t1299 * t971 + t1300 * t972;
t922 = -pkin(1) * t995 - t1322;
t921 = -t1303 * t965 + t1307 * t967;
t920 = -t1303 * t964 + t1307 * t966;
t919 = t1303 * t967 + t1307 * t965;
t918 = t1303 * t966 + t1307 * t964;
t917 = -pkin(1) * t968 - t1316;
t916 = t1300 * t962 - t1401;
t911 = -pkin(1) * t932 - t1347;
t910 = -t1303 * t945 + t1307 * t947;
t909 = -t1303 * t944 + t1307 * t946;
t908 = t1303 * t947 + t1307 * t945;
t907 = t1303 * t946 + t1307 * t944;
t906 = -t1303 * t937 + t1307 * t938;
t905 = t1303 * t938 + t1307 * t937;
t904 = -t1303 * t935 + t1307 * t936;
t903 = t1303 * t936 + t1307 * t935;
t902 = -pkin(8) * t1011 - t913;
t901 = -t1303 * t929 + t1307 * t930;
t900 = t1303 * t930 + t1307 * t929;
t896 = -pkin(6) * t995 - t1303 * t948 + t1307 * t957;
t895 = -t1303 * t923 + t1307 * t924;
t894 = t1303 * t924 + t1307 * t923;
t893 = -pkin(1) * t1409 + pkin(6) * t996 + t1303 * t957 + t1307 * t948;
t892 = -pkin(7) * t987 - t1302 * t926 + t1306 * t959;
t891 = -pkin(7) * t984 - t1302 * t925 + t1306 * t958;
t890 = -qJ(3) * t980 - t1299 * t927 + t1300 * t942;
t889 = -pkin(6) * t968 - t1303 * t928 + t1307 * t949;
t888 = -pkin(2) * t1141 + qJ(3) * t982 + t1299 * t942 + t1300 * t927;
t887 = -pkin(3) * t1039 + pkin(7) * t988 + t1302 * t959 + t1306 * t926;
t886 = -pkin(3) * t1034 + pkin(7) * t985 + t1302 * t958 + t1306 * t925;
t885 = -pkin(1) * t1109 + pkin(6) * t969 + t1303 * t949 + t1307 * t928;
t884 = -t1303 * t915 + t1307 * t916;
t883 = t1303 * t916 + t1307 * t915;
t882 = -pkin(7) * t1400 - qJ(3) * t915 - t1299 * t956;
t881 = pkin(2) * t1122 - pkin(7) * t1401 + qJ(3) * t916 + t1300 * t956;
t880 = -pkin(7) * t971 + t1011 * t1403 + t1306 * t902;
t879 = pkin(7) * t972 + t1359 * t1011 + t1302 * t902;
t878 = -t1299 * t898 + t1300 * t899;
t876 = -pkin(1) * t905 - t1318;
t875 = -pkin(1) * t903 - t1319;
t874 = -pkin(1) * t883 - t1356;
t873 = -pkin(7) * t898 + (-pkin(8) * t1306 + t1403) * t913;
t872 = -qJ(3) * t937 - t1299 * t887 + t1300 * t892;
t871 = -qJ(3) * t935 - t1299 * t886 + t1300 * t891;
t870 = -pkin(1) * t894 - t1315;
t869 = -pkin(6) * t932 - t1303 * t888 + t1307 * t890;
t868 = -pkin(2) * t1039 + qJ(3) * t938 + t1299 * t892 + t1300 * t887;
t867 = -pkin(1) * t1141 + pkin(6) * t934 + t1303 * t890 + t1307 * t888;
t866 = -pkin(2) * t1034 + qJ(3) * t936 + t1299 * t891 + t1300 * t886;
t865 = pkin(7) * t899 + (-pkin(8) * t1302 + t1359) * t913;
t864 = -qJ(3) * t923 - t1299 * t879 + t1300 * t880;
t863 = -pkin(2) * t1011 + qJ(3) * t924 + t1299 * t880 + t1300 * t879;
t862 = -t1303 * t877 + t1307 * t878;
t861 = t1303 * t878 + t1307 * t877;
t860 = -pkin(6) * t883 - t1303 * t881 + t1307 * t882;
t859 = pkin(1) * t1122 + pkin(6) * t884 + t1303 * t882 + t1307 * t881;
t858 = -pkin(6) * t905 - t1303 * t868 + t1307 * t872;
t857 = -pkin(6) * t903 - t1303 * t866 + t1307 * t871;
t856 = -pkin(1) * t1039 + pkin(6) * t906 + t1303 * t872 + t1307 * t868;
t855 = -pkin(1) * t1034 + pkin(6) * t904 + t1303 * t871 + t1307 * t866;
t854 = -qJ(3) * t877 - t1299 * t865 + t1300 * t873;
t853 = -pkin(1) * t861 - t1325;
t852 = -pkin(6) * t894 - t1303 * t863 + t1307 * t864;
t851 = -pkin(2) * t913 + qJ(3) * t878 + t1299 * t873 + t1300 * t865;
t850 = -pkin(1) * t1011 + pkin(6) * t895 + t1303 * t864 + t1307 * t863;
t849 = -pkin(6) * t861 - t1303 * t851 + t1307 * t854;
t848 = -pkin(1) * t913 + pkin(6) * t862 + t1303 * t854 + t1307 * t851;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1273, 0, -t1272, 0, t1333, -t1255, -t1323, -pkin(5) * t1323, t1308 * t1246 - t1337, t1308 * t1231 + t1304 * t1275, t1308 * t1241 + t1303 * t1364, t1308 * t1245 + t1337, t1308 * t1239 + t1304 * t1293, t1308 * t1264 + t1292, t1308 * t1205 - t1304 * t1202 - pkin(5) * (t1304 * t1240 + t1308 * t1270), t1308 * t1206 - t1304 * t1203 - pkin(5) * (t1304 * t1242 - t1308 * t1267), t1308 * t1188 - pkin(5) * (t1304 * t1271 + t1308 * t1274), -pkin(5) * (t1304 * t1189 + t1308 * t1261) - (t1304 * pkin(1) - t1308 * pkin(6)) * t1188, t1308 * t1140 - t1352, t1308 * t1085 + t1304 * t1226, t1308 * t1135 + t1304 * t1201, t1308 * t1139 + t1352, t1308 * t1134 + t1199 * t1304, t1308 * t1155 + t1292, t1308 * t1014 - t1304 * t1028 - pkin(5) * (t1304 * t1104 - t1308 * t1197), t1308 * t1024 - t1304 * t1042 - pkin(5) * (t1304 * t1136 - t1308 * t1200), t1308 * t951 - t1304 * t1043 - pkin(5) * (t1304 * t1086 - t1308 * t1196), t1308 * t943 - t1304 * t963 - pkin(5) * (t1304 * t1003 + t1308 * t1192), t1308 * t976 + t1353, t1304 * t1165 + t1308 * t933, t1308 * t1006 + t1304 * t1114, t1308 * t975 - t1353, t1308 * t1007 + t1111 * t1304, t1308 * t1026 + t1304 * t1296, t1308 * t889 - t1304 * t917 - pkin(5) * (-t1308 * t1109 + t1304 * t969), t1308 * t896 - t1304 * t922 - pkin(5) * (t1304 * t996 - t1308 * t1409), t1308 * t869 - t1304 * t911 - pkin(5) * (-t1308 * t1141 + t1304 * t934), t1308 * t860 - t1304 * t874 - pkin(5) * (t1308 * t1122 + t1304 * t884), t1304 * t1071 + t1308 * t921, t1304 * t1010 + t1308 * t901, t1304 * t1054 + t1308 * t909, -t1304 * t1069 + t1308 * t920, t1304 * t1055 + t1308 * t910, t1304 * t1094 + t1308 * t940, t1308 * t857 - t1304 * t875 - pkin(5) * (-t1308 * t1034 + t1304 * t904), t1308 * t858 - t1304 * t876 - pkin(5) * (-t1308 * t1039 + t1304 * t906), t1308 * t852 - t1304 * t870 - pkin(5) * (-t1308 * t1011 + t1304 * t895), t1308 * t849 - t1304 * t853 - pkin(5) * (t1304 * t862 - t1308 * t913); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1272, 0, t1273, 0, t1255, t1333, t1341, pkin(5) * t1341, t1304 * t1246 + t1336, t1304 * t1231 - t1308 * t1275, t1304 * t1241 - t1303 * t1363, t1304 * t1245 - t1336, t1304 * t1239 - t1307 * t1363, t1304 * t1264 - t1362, t1304 * t1205 + t1308 * t1202 + pkin(5) * (t1308 * t1240 - t1304 * t1270), t1304 * t1206 + t1308 * t1203 + pkin(5) * (t1308 * t1242 + t1304 * t1267), t1304 * t1188 + pkin(5) * (t1308 * t1271 - t1304 * t1274), pkin(5) * (t1308 * t1189 - t1304 * t1261) - (-t1308 * pkin(1) - t1304 * pkin(6)) * t1188, t1304 * t1140 + t1349, t1304 * t1085 - t1308 * t1226, t1304 * t1135 - t1308 * t1201, t1304 * t1139 - t1349, t1304 * t1134 - t1199 * t1308, t1304 * t1155 - t1362, t1304 * t1014 + t1308 * t1028 + pkin(5) * (t1308 * t1104 + t1304 * t1197), t1304 * t1024 + t1308 * t1042 + pkin(5) * (t1308 * t1136 + t1304 * t1200), t1304 * t951 + t1308 * t1043 + pkin(5) * (t1308 * t1086 + t1304 * t1196), t1304 * t943 + t1308 * t963 + pkin(5) * (t1308 * t1003 - t1304 * t1192), t1304 * t976 - t1350, -t1308 * t1165 + t1304 * t933, t1304 * t1006 - t1308 * t1114, t1304 * t975 + t1350, t1304 * t1007 - t1111 * t1308, t1304 * t1026 - t1308 * t1296, t1304 * t889 + t1308 * t917 + pkin(5) * (t1304 * t1109 + t1308 * t969), t1304 * t896 + t1308 * t922 + pkin(5) * (t1304 * t1409 + t1308 * t996), t1304 * t869 + t1308 * t911 + pkin(5) * (t1304 * t1141 + t1308 * t934), t1304 * t860 + t1308 * t874 + pkin(5) * (-t1304 * t1122 + t1308 * t884), -t1308 * t1071 + t1304 * t921, -t1308 * t1010 + t1304 * t901, -t1308 * t1054 + t1304 * t909, t1308 * t1069 + t1304 * t920, -t1308 * t1055 + t1304 * t910, -t1308 * t1094 + t1304 * t940, t1304 * t857 + t1308 * t875 + pkin(5) * (t1304 * t1034 + t1308 * t904), t1304 * t858 + t1308 * t876 + pkin(5) * (t1304 * t1039 + t1308 * t906), t1304 * t852 + t1308 * t870 + pkin(5) * (t1304 * t1011 + t1308 * t895), t1304 * t849 + t1308 * t853 + pkin(5) * (t1304 * t913 + t1308 * t862); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1278, t1279, 0, 0, t1234, t1230, t1237, t1233, t1235, 0, t1179, t1178, t1169, t1170, t1138, t1083, t1132, t1137, t1131, t1154, t1008, t1015, t950, t941, t974, t931, t1004, t973, t1005, t1025, t885, t893, t867, t859, t919, t900, t907, t918, t908, t939, t855, t856, t850, t848; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1310, 0, 0, -g(3), -t1278, 0, t1246, t1231, t1241, t1245, t1239, t1264, t1205, t1206, t1188, pkin(6) * t1188, t1140, t1085, t1135, t1139, t1134, t1155, t1014, t1024, t951, t943, t976, t933, t1006, t975, t1007, t1026, t889, t896, t869, t860, t921, t901, t909, t920, t910, t940, t857, t858, t852, t849; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1310, 0, qJDD(1), 0, g(3), 0, -t1279, 0, t1285, -t1275, -t1365, -t1285, -t1293, -qJDD(2), t1202, t1203, 0, pkin(1) * t1188, t1227, -t1226, -t1201, -t1227, -t1199, -qJDD(2), t1028, t1042, t1043, t963, -t1166, -t1165, -t1114, t1166, -t1111, -t1296, t917, t922, t911, t874, -t1071, -t1010, -t1054, t1069, -t1055, -t1094, t875, t876, t870, t853; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1278, t1279, 0, 0, t1234, t1230, t1237, t1233, t1235, 0, t1179, t1178, t1169, t1170, t1138, t1083, t1132, t1137, t1131, t1154, t1008, t1015, t950, t941, t974, t931, t1004, t973, t1005, t1025, t885, t893, t867, t859, t919, t900, t907, t918, t908, t939, t855, t856, t850, t848; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1268, t1270, t1276, -t1289, t1283, t1289, 0, -t1261, t1243, 0, t1184, t1148, t1175, t1182, t1174, t1212, t1129, t1142, t1027, -qJ(3) * t1063, t1047, t981, t1067, t1046, t1068, t1093, t949, t957, t890, t882, t967, t930, t946, t966, t947, t990, t871, t872, t864, t854; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1354, t1267, t1281, t1269, t1277, -t1354, t1261, 0, t1244, 0, t1183, t1146, t1172, t1181, t1171, t1211, t1096, t1102, t1022, t1041, t1045, t979, t1065, t1044, t1066, t1092, t928, t948, t888, t881, t965, t929, t944, t964, t945, t989, t866, t868, t863, t851; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1285, t1275, t1365, t1285, t1293, qJDD(2), -t1243, -t1244, 0, 0, -t1227, t1226, t1201, t1227, t1199, qJDD(2), t1314, t1335 - 0.2e1 * t1395, t1404, t1405, t1166, t1165, t1114, -t1166, t1111, t1296, t1316, t1322, t1347, t1356, t1071, t1010, t1054, -t1069, t1055, t1094, t1319, t1318, t1315, t1325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1229, -t1197, t1406, -t1254, t1247, t1254, 0, -t1192, t1123, 0, t1108, t1052, t1127, t1106, t1128, t1153, t1048, t1062, t942, -pkin(7) * t961, t1032, t978, t993, t1031, t994, t1059, t891, t892, t880, t873; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1396, t1200, t1248, -t1342, t1223, -t1396, t1192, 0, t1124, 0, t1107, t1050, t1125, t1105, t1126, t1152, t1016, t1023, t927, t956, t1030, t977, t991, t1029, t992, t1058, t886, t887, t879, t865; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1227, t1226, t1201, t1227, t1199, qJDD(2), -t1123, -t1124, 0, 0, t1166, t1165, t1114, -t1166, t1111, t1296, t1327, t1348, t1049, t960, t1071, t1010, t1054, -t1069, t1055, t1094, t1338, t1339, t1326, t1360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1145, -t1109, t1407, t1210, t1207, -t1210, 0, -t1122, t1020, 0, t1072, t1012, t1056, t1070, t1057, t1095, t958, t959, t902, -pkin(8) * t913; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1345, t1409, t1208, t1144, t1162, -t1345, t1122, 0, t1021, 0, -t1151, -t1150, -t1079, t1151, t1075, -t1143, t925, t926, -pkin(4) * t1011, -pkin(4) * t913; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1166, t1165, t1114, -t1166, t1111, t1296, -t1020, -t1021, 0, 0, t1071, t1010, t1054, -t1069, t1055, t1094, t1357, t1358, t1340, t1402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1099, t1076, t1408, t1158, t1156, -t1158, 0, t1000, t954, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1159, t1078, t1157, -t1317, t1088, -t1159, -t1000, 0, t955, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1151, t1150, t1079, -t1151, -t1075, t1143, -t954, -t955, 0, 0;];
m_new_reg = t1;
