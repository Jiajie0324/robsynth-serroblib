% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRPRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:19
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRPRR8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR8_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR8_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRR8_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRR8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR8_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:19:04
% EndTime: 2019-12-31 20:19:08
% DurationCPUTime: 4.33s
% Computational Cost: add. (24691->255), mult. (57904->357), div. (0->0), fcn. (42507->10), ass. (0->201)
t1601 = cos(qJ(2));
t1588 = t1601 * qJDD(1);
t1597 = sin(qJ(2));
t1634 = qJD(1) * t1597;
t1620 = qJD(2) * t1634;
t1570 = t1588 - t1620;
t1592 = t1601 ^ 2;
t1604 = qJD(1) ^ 2;
t1610 = qJD(2) * pkin(2) - qJ(3) * t1634;
t1598 = sin(qJ(1));
t1602 = cos(qJ(1));
t1578 = t1598 * g(1) - t1602 * g(2);
t1611 = qJDD(1) * pkin(1) + t1578;
t1528 = t1570 * pkin(2) - t1610 * t1634 - qJDD(3) + t1611 + (t1592 * qJ(3) + pkin(6)) * t1604;
t1635 = qJD(1) * qJD(2);
t1619 = t1601 * t1635;
t1622 = t1597 * qJDD(1);
t1569 = t1619 + t1622;
t1593 = sin(pkin(9));
t1594 = cos(pkin(9));
t1548 = -t1593 * t1569 + t1594 * t1570;
t1561 = (-t1593 * t1597 + t1594 * t1601) * qJD(1);
t1560 = t1561 ^ 2;
t1563 = (t1593 * t1601 + t1594 * t1597) * qJD(1);
t1614 = qJD(2) * pkin(3) - t1563 * pkin(7);
t1503 = t1548 * pkin(3) + t1560 * pkin(7) - t1563 * t1614 + t1528;
t1596 = sin(qJ(4));
t1600 = cos(qJ(4));
t1540 = -t1600 * t1561 + t1596 * t1563;
t1539 = qJD(5) + t1540;
t1643 = qJD(5) + t1539;
t1542 = t1596 * t1561 + t1600 * t1563;
t1590 = qJD(2) + qJD(4);
t1595 = sin(qJ(5));
t1599 = cos(qJ(5));
t1529 = t1595 * t1542 - t1599 * t1590;
t1642 = t1529 ^ 2;
t1531 = t1599 * t1542 + t1595 * t1590;
t1641 = t1531 ^ 2;
t1640 = t1539 ^ 2;
t1639 = t1540 ^ 2;
t1638 = t1542 ^ 2;
t1637 = t1563 ^ 2;
t1636 = t1590 ^ 2;
t1633 = qJD(2) * t1561;
t1632 = qJD(2) * t1563;
t1631 = t1531 * t1529;
t1630 = t1542 * t1540;
t1629 = t1563 * t1561;
t1628 = t1592 * t1604;
t1579 = -t1602 * g(1) - t1598 * g(2);
t1566 = -t1604 * pkin(1) + qJDD(1) * pkin(6) + t1579;
t1627 = t1597 * t1566;
t1626 = t1597 * t1604;
t1625 = qJD(4) - t1590;
t1624 = qJD(5) - t1539;
t1524 = qJDD(2) * pkin(2) - t1569 * qJ(3) - t1627 + (pkin(2) * t1626 + qJ(3) * t1635 - g(3)) * t1601;
t1555 = -t1597 * g(3) + t1601 * t1566;
t1525 = -pkin(2) * t1628 + t1570 * qJ(3) - qJD(2) * t1610 + t1555;
t1505 = 0.2e1 * qJD(3) * t1561 + t1593 * t1524 + t1594 * t1525;
t1490 = -t1560 * pkin(3) + t1548 * pkin(7) - qJD(2) * t1614 + t1505;
t1504 = -0.2e1 * qJD(3) * t1563 + t1594 * t1524 - t1593 * t1525;
t1549 = t1594 * t1569 + t1593 * t1570;
t1536 = -t1549 + t1633;
t1545 = qJDD(2) + t1629;
t1605 = t1545 * pkin(3) + t1536 * pkin(7) + t1504;
t1466 = t1600 * t1490 + t1596 * t1605;
t1591 = t1597 ^ 2;
t1623 = t1591 + t1592;
t1621 = qJDD(2) + qJDD(4);
t1465 = -t1596 * t1490 + t1600 * t1605;
t1612 = -t1596 * t1548 - t1600 * t1549;
t1510 = -t1540 * qJD(4) - t1612;
t1617 = t1590 * t1540 - t1510;
t1616 = -t1595 * t1510 + t1599 * t1621;
t1615 = -t1600 * t1548 + t1596 * t1549;
t1609 = -t1599 * t1510 - t1595 * t1621;
t1608 = -t1542 * qJD(4) - qJDD(5) - t1615;
t1495 = (qJD(4) + t1590) * t1542 + t1615;
t1603 = qJD(2) ^ 2;
t1582 = t1601 * t1626;
t1581 = -t1603 - t1628;
t1580 = -t1591 * t1604 - t1603;
t1577 = -qJDD(2) + t1582;
t1576 = qJDD(2) + t1582;
t1575 = t1623 * t1604;
t1574 = -t1598 * qJDD(1) - t1602 * t1604;
t1573 = t1602 * qJDD(1) - t1598 * t1604;
t1572 = t1623 * qJDD(1);
t1571 = t1588 - 0.2e1 * t1620;
t1568 = 0.2e1 * t1619 + t1622;
t1565 = t1604 * pkin(6) + t1611;
t1556 = -t1603 - t1637;
t1554 = -t1601 * g(3) - t1627;
t1553 = t1601 * t1577 - t1597 * t1580;
t1552 = -t1597 * t1576 + t1601 * t1581;
t1551 = t1597 * t1577 + t1601 * t1580;
t1550 = t1601 * t1576 + t1597 * t1581;
t1546 = -qJDD(2) + t1629;
t1544 = -t1603 - t1560;
t1537 = -t1636 - t1638;
t1535 = t1549 + t1633;
t1534 = t1548 + t1632;
t1533 = -t1548 + t1632;
t1532 = -t1560 - t1637;
t1527 = -t1597 * t1554 + t1601 * t1555;
t1526 = t1601 * t1554 + t1597 * t1555;
t1521 = t1594 * t1546 - t1593 * t1556;
t1520 = t1593 * t1546 + t1594 * t1556;
t1519 = t1594 * t1544 - t1593 * t1545;
t1518 = t1593 * t1544 + t1594 * t1545;
t1517 = t1540 * pkin(4) - t1542 * pkin(8);
t1516 = -t1621 - t1630;
t1515 = t1621 - t1630;
t1514 = -t1636 - t1639;
t1512 = t1594 * t1534 - t1593 * t1536;
t1511 = t1593 * t1534 + t1594 * t1536;
t1509 = -t1638 - t1639;
t1508 = -t1597 * t1520 + t1601 * t1521;
t1507 = t1601 * t1520 + t1597 * t1521;
t1506 = -t1640 - t1641;
t1502 = t1600 * t1516 - t1596 * t1537;
t1501 = t1596 * t1516 + t1600 * t1537;
t1500 = -t1640 - t1642;
t1499 = -t1641 - t1642;
t1498 = t1625 * t1540 + t1612;
t1496 = -t1625 * t1542 - t1615;
t1494 = -t1597 * t1518 + t1601 * t1519;
t1493 = t1601 * t1518 + t1597 * t1519;
t1492 = t1600 * t1514 - t1596 * t1515;
t1491 = t1596 * t1514 + t1600 * t1515;
t1488 = t1608 - t1631;
t1487 = -t1608 - t1631;
t1486 = -t1597 * t1511 + t1601 * t1512;
t1485 = t1601 * t1511 + t1597 * t1512;
t1482 = t1624 * t1529 + t1609;
t1481 = -t1643 * t1529 - t1609;
t1480 = -t1624 * t1531 + t1616;
t1479 = t1643 * t1531 - t1616;
t1478 = -t1593 * t1504 + t1594 * t1505;
t1477 = t1594 * t1504 + t1593 * t1505;
t1476 = -t1593 * t1501 + t1594 * t1502;
t1475 = t1594 * t1501 + t1593 * t1502;
t1474 = t1600 * t1496 - t1596 * t1498;
t1473 = t1596 * t1496 + t1600 * t1498;
t1472 = t1599 * t1488 - t1595 * t1506;
t1471 = t1595 * t1488 + t1599 * t1506;
t1470 = -t1593 * t1491 + t1594 * t1492;
t1469 = t1594 * t1491 + t1593 * t1492;
t1468 = -t1595 * t1487 + t1599 * t1500;
t1467 = t1599 * t1487 + t1595 * t1500;
t1464 = t1495 * pkin(4) + t1617 * pkin(8) - t1503;
t1463 = t1599 * t1480 - t1595 * t1482;
t1462 = t1595 * t1480 + t1599 * t1482;
t1461 = -t1597 * t1477 + t1601 * t1478;
t1460 = t1601 * t1477 + t1597 * t1478;
t1459 = -t1636 * pkin(4) + t1621 * pkin(8) - t1540 * t1517 + t1466;
t1458 = -t1621 * pkin(4) - t1636 * pkin(8) + t1542 * t1517 - t1465;
t1457 = -t1597 * t1475 + t1601 * t1476;
t1456 = t1601 * t1475 + t1597 * t1476;
t1455 = t1600 * t1472 + t1596 * t1481;
t1454 = t1596 * t1472 - t1600 * t1481;
t1453 = t1600 * t1468 + t1596 * t1479;
t1452 = t1596 * t1468 - t1600 * t1479;
t1451 = -t1593 * t1473 + t1594 * t1474;
t1450 = t1594 * t1473 + t1593 * t1474;
t1449 = t1600 * t1463 + t1596 * t1499;
t1448 = t1596 * t1463 - t1600 * t1499;
t1447 = -t1597 * t1469 + t1601 * t1470;
t1446 = t1601 * t1469 + t1597 * t1470;
t1445 = -t1596 * t1465 + t1600 * t1466;
t1444 = t1600 * t1465 + t1596 * t1466;
t1443 = t1599 * t1459 + t1595 * t1464;
t1442 = -t1595 * t1459 + t1599 * t1464;
t1441 = -t1593 * t1454 + t1594 * t1455;
t1440 = t1594 * t1454 + t1593 * t1455;
t1439 = -t1593 * t1452 + t1594 * t1453;
t1438 = t1594 * t1452 + t1593 * t1453;
t1437 = -t1597 * t1450 + t1601 * t1451;
t1436 = t1601 * t1450 + t1597 * t1451;
t1435 = -t1593 * t1448 + t1594 * t1449;
t1434 = t1594 * t1448 + t1593 * t1449;
t1433 = -t1593 * t1444 + t1594 * t1445;
t1432 = t1594 * t1444 + t1593 * t1445;
t1431 = -t1595 * t1442 + t1599 * t1443;
t1430 = t1599 * t1442 + t1595 * t1443;
t1429 = -t1597 * t1440 + t1601 * t1441;
t1428 = t1601 * t1440 + t1597 * t1441;
t1427 = -t1597 * t1438 + t1601 * t1439;
t1426 = t1601 * t1438 + t1597 * t1439;
t1425 = t1600 * t1431 + t1596 * t1458;
t1424 = t1596 * t1431 - t1600 * t1458;
t1423 = -t1597 * t1434 + t1601 * t1435;
t1422 = t1601 * t1434 + t1597 * t1435;
t1421 = -t1597 * t1432 + t1601 * t1433;
t1420 = t1601 * t1432 + t1597 * t1433;
t1419 = -t1593 * t1424 + t1594 * t1425;
t1418 = t1594 * t1424 + t1593 * t1425;
t1417 = -t1597 * t1418 + t1601 * t1419;
t1416 = t1601 * t1418 + t1597 * t1419;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1574, -t1573, 0, -t1598 * t1578 + t1602 * t1579, 0, 0, 0, 0, 0, 0, t1602 * t1552 - t1598 * t1571, t1602 * t1553 + t1598 * t1568, t1602 * t1572 - t1598 * t1575, t1602 * t1527 - t1598 * t1565, 0, 0, 0, 0, 0, 0, t1602 * t1494 + t1598 * t1533, t1602 * t1508 + t1598 * t1535, t1602 * t1486 + t1598 * t1532, t1602 * t1461 - t1598 * t1528, 0, 0, 0, 0, 0, 0, t1602 * t1447 + t1598 * t1495, t1602 * t1457 - t1598 * t1617, t1602 * t1437 + t1598 * t1509, t1602 * t1421 - t1598 * t1503, 0, 0, 0, 0, 0, 0, t1602 * t1427 + t1598 * t1467, t1602 * t1429 + t1598 * t1471, t1602 * t1423 + t1598 * t1462, t1602 * t1417 + t1598 * t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1573, t1574, 0, t1602 * t1578 + t1598 * t1579, 0, 0, 0, 0, 0, 0, t1598 * t1552 + t1602 * t1571, t1598 * t1553 - t1602 * t1568, t1598 * t1572 + t1602 * t1575, t1598 * t1527 + t1602 * t1565, 0, 0, 0, 0, 0, 0, t1598 * t1494 - t1602 * t1533, t1598 * t1508 - t1602 * t1535, t1598 * t1486 - t1602 * t1532, t1598 * t1461 + t1602 * t1528, 0, 0, 0, 0, 0, 0, t1598 * t1447 - t1602 * t1495, t1598 * t1457 + t1602 * t1617, t1598 * t1437 - t1602 * t1509, t1598 * t1421 + t1602 * t1503, 0, 0, 0, 0, 0, 0, t1598 * t1427 - t1602 * t1467, t1598 * t1429 - t1602 * t1471, t1598 * t1423 - t1602 * t1462, t1598 * t1417 - t1602 * t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1550, t1551, 0, t1526, 0, 0, 0, 0, 0, 0, t1493, t1507, t1485, t1460, 0, 0, 0, 0, 0, 0, t1446, t1456, t1436, t1420, 0, 0, 0, 0, 0, 0, t1426, t1428, t1422, t1416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1604, -qJDD(1), 0, t1579, 0, 0, 0, 0, 0, 0, t1552, t1553, t1572, t1527, 0, 0, 0, 0, 0, 0, t1494, t1508, t1486, t1461, 0, 0, 0, 0, 0, 0, t1447, t1457, t1437, t1421, 0, 0, 0, 0, 0, 0, t1427, t1429, t1423, t1417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1604, 0, t1578, 0, 0, 0, 0, 0, 0, t1571, -t1568, t1575, t1565, 0, 0, 0, 0, 0, 0, -t1533, -t1535, -t1532, t1528, 0, 0, 0, 0, 0, 0, -t1495, t1617, -t1509, t1503, 0, 0, 0, 0, 0, 0, -t1467, -t1471, -t1462, -t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1550, t1551, 0, t1526, 0, 0, 0, 0, 0, 0, t1493, t1507, t1485, t1460, 0, 0, 0, 0, 0, 0, t1446, t1456, t1436, t1420, 0, 0, 0, 0, 0, 0, t1426, t1428, t1422, t1416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1581, t1577, t1588, t1555, 0, 0, 0, 0, 0, 0, t1519, t1521, t1512, t1478, 0, 0, 0, 0, 0, 0, t1470, t1476, t1451, t1433, 0, 0, 0, 0, 0, 0, t1439, t1441, t1435, t1419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1576, t1580, -t1622, t1554, 0, 0, 0, 0, 0, 0, t1518, t1520, t1511, t1477, 0, 0, 0, 0, 0, 0, t1469, t1475, t1450, t1432, 0, 0, 0, 0, 0, 0, t1438, t1440, t1434, t1418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1571, t1568, -t1575, -t1565, 0, 0, 0, 0, 0, 0, t1533, t1535, t1532, -t1528, 0, 0, 0, 0, 0, 0, t1495, -t1617, t1509, -t1503, 0, 0, 0, 0, 0, 0, t1467, t1471, t1462, t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1544, t1546, t1534, t1505, 0, 0, 0, 0, 0, 0, t1492, t1502, t1474, t1445, 0, 0, 0, 0, 0, 0, t1453, t1455, t1449, t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1545, t1556, t1536, t1504, 0, 0, 0, 0, 0, 0, t1491, t1501, t1473, t1444, 0, 0, 0, 0, 0, 0, t1452, t1454, t1448, t1424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1533, t1535, t1532, -t1528, 0, 0, 0, 0, 0, 0, t1495, -t1617, t1509, -t1503, 0, 0, 0, 0, 0, 0, t1467, t1471, t1462, t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1514, t1516, t1496, t1466, 0, 0, 0, 0, 0, 0, t1468, t1472, t1463, t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1515, t1537, t1498, t1465, 0, 0, 0, 0, 0, 0, -t1479, -t1481, -t1499, -t1458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1495, -t1617, t1509, -t1503, 0, 0, 0, 0, 0, 0, t1467, t1471, t1462, t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1500, t1488, t1480, t1443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1487, t1506, t1482, t1442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1479, t1481, t1499, t1458;];
f_new_reg = t1;
