% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRPRR13
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:34
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRPRR13_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR13_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR13_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRR13_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRR13_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR13_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:34:47
% EndTime: 2019-12-31 20:34:51
% DurationCPUTime: 4.00s
% Computational Cost: add. (29343->258), mult. (64403->351), div. (0->0), fcn. (45837->10), ass. (0->202)
t1580 = cos(qJ(2));
t1597 = t1580 * qJD(1);
t1561 = -qJD(4) + t1597;
t1556 = -qJD(5) + t1561;
t1615 = qJD(5) - t1556;
t1592 = qJD(2) * t1597;
t1576 = sin(qJ(2));
t1593 = t1576 * qJDD(1);
t1545 = t1592 + t1593;
t1572 = sin(pkin(9));
t1573 = cos(pkin(9));
t1529 = t1572 * qJDD(2) + t1573 * t1545;
t1603 = qJD(1) * t1576;
t1541 = -t1573 * qJD(2) + t1572 * t1603;
t1533 = t1541 * t1597;
t1512 = -t1529 + t1533;
t1564 = qJD(2) * t1603;
t1566 = t1580 * qJDD(1);
t1546 = t1566 - t1564;
t1542 = t1572 * qJD(2) + t1573 * t1603;
t1599 = t1542 * t1541;
t1514 = -t1546 - t1599;
t1614 = qJD(2) ^ 2;
t1575 = sin(qJ(4));
t1579 = cos(qJ(4));
t1517 = t1579 * t1541 + t1575 * t1542;
t1519 = -t1575 * t1541 + t1579 * t1542;
t1574 = sin(qJ(5));
t1578 = cos(qJ(5));
t1492 = t1578 * t1517 + t1574 * t1519;
t1613 = t1492 ^ 2;
t1494 = -t1574 * t1517 + t1578 * t1519;
t1612 = t1494 ^ 2;
t1611 = t1517 ^ 2;
t1610 = t1519 ^ 2;
t1609 = t1541 ^ 2;
t1608 = t1542 ^ 2;
t1607 = t1556 ^ 2;
t1606 = t1561 ^ 2;
t1605 = -2 * qJD(3);
t1604 = t1580 * g(3);
t1602 = t1494 * t1492;
t1601 = t1517 * t1561;
t1600 = t1519 * t1517;
t1570 = t1580 ^ 2;
t1582 = qJD(1) ^ 2;
t1598 = t1570 * t1582;
t1596 = qJD(4) + t1561;
t1595 = qJD(5) + t1556;
t1577 = sin(qJ(1));
t1581 = cos(qJ(1));
t1554 = t1577 * g(1) - t1581 * g(2);
t1538 = qJDD(1) * pkin(1) + t1582 * pkin(6) + t1554;
t1499 = (-t1545 - t1592) * qJ(3) + (-t1546 + t1564) * pkin(2) - t1538;
t1555 = -t1581 * g(1) - t1577 * g(2);
t1539 = -t1582 * pkin(1) + qJDD(1) * pkin(6) + t1555;
t1527 = -t1576 * g(3) + t1580 * t1539;
t1543 = (-pkin(2) * t1580 - qJ(3) * t1576) * qJD(1);
t1505 = -t1614 * pkin(2) + qJDD(2) * qJ(3) + t1543 * t1597 + t1527;
t1474 = t1573 * t1499 - t1572 * t1505 + t1542 * t1605;
t1456 = t1514 * pkin(3) + t1512 * pkin(7) + t1474;
t1475 = t1572 * t1499 + t1573 * t1505 + t1541 * t1605;
t1530 = -pkin(3) * t1597 - t1542 * pkin(7);
t1587 = t1573 * qJDD(2) - t1572 * t1545;
t1458 = -t1609 * pkin(3) + t1587 * pkin(7) + t1530 * t1597 + t1475;
t1433 = t1575 * t1456 + t1579 * t1458;
t1569 = t1576 ^ 2;
t1594 = t1569 + t1570;
t1591 = t1542 * t1597;
t1590 = -qJDD(4) + t1546;
t1432 = t1579 * t1456 - t1575 * t1458;
t1584 = -t1579 * t1529 - t1575 * t1587;
t1485 = -t1517 * qJD(4) - t1584;
t1588 = t1575 * t1529 - t1579 * t1587;
t1585 = t1519 * qJD(4) + t1588;
t1589 = -t1574 * t1485 - t1578 * t1585;
t1586 = -qJDD(5) + t1590;
t1488 = -t1590 - t1600;
t1583 = -t1578 * t1485 + t1574 * t1585;
t1504 = t1604 + qJDD(3) - t1614 * qJ(3) - qJDD(2) * pkin(2) + (qJD(1) * t1543 + t1539) * t1576;
t1476 = -t1587 * pkin(3) - t1609 * pkin(7) + t1542 * t1530 + t1504;
t1560 = t1580 * t1582 * t1576;
t1559 = -t1598 - t1614;
t1558 = -t1569 * t1582 - t1614;
t1553 = -qJDD(2) + t1560;
t1552 = qJDD(2) + t1560;
t1551 = t1594 * t1582;
t1550 = -t1577 * qJDD(1) - t1581 * t1582;
t1549 = t1581 * qJDD(1) - t1577 * t1582;
t1548 = t1594 * qJDD(1);
t1547 = t1566 - 0.2e1 * t1564;
t1544 = 0.2e1 * t1592 + t1593;
t1531 = -t1598 - t1608;
t1526 = -t1576 * t1539 - t1604;
t1525 = t1580 * t1553 - t1576 * t1558;
t1524 = -t1576 * t1552 + t1580 * t1559;
t1523 = t1576 * t1553 + t1580 * t1558;
t1522 = t1580 * t1552 + t1576 * t1559;
t1520 = -t1598 - t1609;
t1513 = t1546 - t1599;
t1511 = t1529 + t1533;
t1510 = t1587 - t1591;
t1509 = -t1587 - t1591;
t1507 = -t1608 - t1609;
t1506 = -t1561 * pkin(4) - t1519 * pkin(8);
t1503 = -t1606 - t1610;
t1501 = -t1576 * t1526 + t1580 * t1527;
t1500 = t1580 * t1526 + t1576 * t1527;
t1496 = t1573 * t1513 - t1572 * t1531;
t1495 = t1572 * t1513 + t1573 * t1531;
t1491 = -t1606 - t1611;
t1490 = -t1572 * t1514 + t1573 * t1520;
t1489 = t1573 * t1514 + t1572 * t1520;
t1487 = t1590 - t1600;
t1484 = t1573 * t1510 - t1572 * t1512;
t1483 = t1572 * t1510 + t1573 * t1512;
t1480 = -t1607 - t1612;
t1479 = -t1610 - t1611;
t1478 = t1580 * t1496 + t1576 * t1511;
t1477 = t1576 * t1496 - t1580 * t1511;
t1473 = t1580 * t1490 + t1576 * t1509;
t1472 = t1576 * t1490 - t1580 * t1509;
t1471 = t1596 * t1517 + t1584;
t1470 = t1485 + t1601;
t1469 = -t1596 * t1519 - t1588;
t1468 = (qJD(4) - t1561) * t1519 + t1588;
t1467 = t1580 * t1484 + t1576 * t1507;
t1466 = t1576 * t1484 - t1580 * t1507;
t1465 = t1579 * t1487 - t1575 * t1503;
t1464 = t1575 * t1487 + t1579 * t1503;
t1463 = -t1607 - t1613;
t1462 = -t1575 * t1488 + t1579 * t1491;
t1461 = t1579 * t1488 + t1575 * t1491;
t1460 = -t1586 - t1602;
t1459 = t1586 - t1602;
t1453 = -t1612 - t1613;
t1452 = -t1572 * t1474 + t1573 * t1475;
t1451 = t1573 * t1474 + t1572 * t1475;
t1450 = t1579 * t1469 - t1575 * t1471;
t1449 = t1575 * t1469 + t1579 * t1471;
t1448 = t1578 * t1459 - t1574 * t1480;
t1447 = t1574 * t1459 + t1578 * t1480;
t1446 = -t1572 * t1464 + t1573 * t1465;
t1445 = t1573 * t1464 + t1572 * t1465;
t1444 = t1580 * t1452 + t1576 * t1504;
t1443 = t1576 * t1452 - t1580 * t1504;
t1442 = t1585 * pkin(4) - t1611 * pkin(8) + t1519 * t1506 + t1476;
t1441 = -t1574 * t1460 + t1578 * t1463;
t1440 = t1578 * t1460 + t1574 * t1463;
t1439 = -t1572 * t1461 + t1573 * t1462;
t1438 = t1573 * t1461 + t1572 * t1462;
t1437 = t1595 * t1492 + t1583;
t1436 = -t1615 * t1492 - t1583;
t1435 = -t1595 * t1494 + t1589;
t1434 = t1615 * t1494 - t1589;
t1431 = t1580 * t1446 + t1576 * t1470;
t1430 = t1576 * t1446 - t1580 * t1470;
t1429 = t1580 * t1439 + t1576 * t1468;
t1428 = t1576 * t1439 - t1580 * t1468;
t1427 = -t1572 * t1449 + t1573 * t1450;
t1426 = t1573 * t1449 + t1572 * t1450;
t1425 = -t1575 * t1447 + t1579 * t1448;
t1424 = t1579 * t1447 + t1575 * t1448;
t1423 = -t1611 * pkin(4) - t1585 * pkin(8) + t1561 * t1506 + t1433;
t1422 = (-t1485 + t1601) * pkin(8) + t1488 * pkin(4) + t1432;
t1421 = t1580 * t1427 + t1576 * t1479;
t1420 = t1576 * t1427 - t1580 * t1479;
t1419 = -t1575 * t1440 + t1579 * t1441;
t1418 = t1579 * t1440 + t1575 * t1441;
t1417 = t1578 * t1435 - t1574 * t1437;
t1416 = t1574 * t1435 + t1578 * t1437;
t1415 = -t1575 * t1432 + t1579 * t1433;
t1414 = t1579 * t1432 + t1575 * t1433;
t1413 = -t1572 * t1424 + t1573 * t1425;
t1412 = t1573 * t1424 + t1572 * t1425;
t1411 = t1574 * t1422 + t1578 * t1423;
t1410 = t1578 * t1422 - t1574 * t1423;
t1409 = -t1572 * t1418 + t1573 * t1419;
t1408 = t1573 * t1418 + t1572 * t1419;
t1407 = -t1575 * t1416 + t1579 * t1417;
t1406 = t1579 * t1416 + t1575 * t1417;
t1405 = t1580 * t1413 + t1576 * t1436;
t1404 = t1576 * t1413 - t1580 * t1436;
t1403 = -t1572 * t1414 + t1573 * t1415;
t1402 = t1573 * t1414 + t1572 * t1415;
t1401 = t1580 * t1409 + t1576 * t1434;
t1400 = t1576 * t1409 - t1580 * t1434;
t1399 = t1580 * t1403 + t1576 * t1476;
t1398 = t1576 * t1403 - t1580 * t1476;
t1397 = -t1574 * t1410 + t1578 * t1411;
t1396 = t1578 * t1410 + t1574 * t1411;
t1395 = -t1572 * t1406 + t1573 * t1407;
t1394 = t1573 * t1406 + t1572 * t1407;
t1393 = t1580 * t1395 + t1576 * t1453;
t1392 = t1576 * t1395 - t1580 * t1453;
t1391 = -t1575 * t1396 + t1579 * t1397;
t1390 = t1579 * t1396 + t1575 * t1397;
t1389 = -t1572 * t1390 + t1573 * t1391;
t1388 = t1573 * t1390 + t1572 * t1391;
t1387 = t1580 * t1389 + t1576 * t1442;
t1386 = t1576 * t1389 - t1580 * t1442;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1550, -t1549, 0, -t1577 * t1554 + t1581 * t1555, 0, 0, 0, 0, 0, 0, t1581 * t1524 - t1577 * t1547, t1581 * t1525 + t1577 * t1544, t1581 * t1548 - t1577 * t1551, t1581 * t1501 - t1577 * t1538, 0, 0, 0, 0, 0, 0, t1581 * t1473 + t1577 * t1489, t1581 * t1478 + t1577 * t1495, t1581 * t1467 + t1577 * t1483, t1581 * t1444 + t1577 * t1451, 0, 0, 0, 0, 0, 0, t1581 * t1429 + t1577 * t1438, t1581 * t1431 + t1577 * t1445, t1581 * t1421 + t1577 * t1426, t1581 * t1399 + t1577 * t1402, 0, 0, 0, 0, 0, 0, t1581 * t1401 + t1577 * t1408, t1581 * t1405 + t1577 * t1412, t1581 * t1393 + t1577 * t1394, t1581 * t1387 + t1577 * t1388; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1549, t1550, 0, t1581 * t1554 + t1577 * t1555, 0, 0, 0, 0, 0, 0, t1577 * t1524 + t1581 * t1547, t1577 * t1525 - t1581 * t1544, t1577 * t1548 + t1581 * t1551, t1577 * t1501 + t1581 * t1538, 0, 0, 0, 0, 0, 0, t1577 * t1473 - t1581 * t1489, t1577 * t1478 - t1581 * t1495, t1577 * t1467 - t1581 * t1483, t1577 * t1444 - t1581 * t1451, 0, 0, 0, 0, 0, 0, t1577 * t1429 - t1581 * t1438, t1577 * t1431 - t1581 * t1445, t1577 * t1421 - t1581 * t1426, t1577 * t1399 - t1581 * t1402, 0, 0, 0, 0, 0, 0, t1577 * t1401 - t1581 * t1408, t1577 * t1405 - t1581 * t1412, t1577 * t1393 - t1581 * t1394, t1577 * t1387 - t1581 * t1388; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1522, t1523, 0, t1500, 0, 0, 0, 0, 0, 0, t1472, t1477, t1466, t1443, 0, 0, 0, 0, 0, 0, t1428, t1430, t1420, t1398, 0, 0, 0, 0, 0, 0, t1400, t1404, t1392, t1386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1582, -qJDD(1), 0, t1555, 0, 0, 0, 0, 0, 0, t1524, t1525, t1548, t1501, 0, 0, 0, 0, 0, 0, t1473, t1478, t1467, t1444, 0, 0, 0, 0, 0, 0, t1429, t1431, t1421, t1399, 0, 0, 0, 0, 0, 0, t1401, t1405, t1393, t1387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1582, 0, t1554, 0, 0, 0, 0, 0, 0, t1547, -t1544, t1551, t1538, 0, 0, 0, 0, 0, 0, -t1489, -t1495, -t1483, -t1451, 0, 0, 0, 0, 0, 0, -t1438, -t1445, -t1426, -t1402, 0, 0, 0, 0, 0, 0, -t1408, -t1412, -t1394, -t1388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1522, t1523, 0, t1500, 0, 0, 0, 0, 0, 0, t1472, t1477, t1466, t1443, 0, 0, 0, 0, 0, 0, t1428, t1430, t1420, t1398, 0, 0, 0, 0, 0, 0, t1400, t1404, t1392, t1386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1559, t1553, t1566, t1527, 0, 0, 0, 0, 0, 0, t1490, t1496, t1484, t1452, 0, 0, 0, 0, 0, 0, t1439, t1446, t1427, t1403, 0, 0, 0, 0, 0, 0, t1409, t1413, t1395, t1389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1552, t1558, -t1593, t1526, 0, 0, 0, 0, 0, 0, -t1509, -t1511, -t1507, -t1504, 0, 0, 0, 0, 0, 0, -t1468, -t1470, -t1479, -t1476, 0, 0, 0, 0, 0, 0, -t1434, -t1436, -t1453, -t1442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1547, t1544, -t1551, -t1538, 0, 0, 0, 0, 0, 0, t1489, t1495, t1483, t1451, 0, 0, 0, 0, 0, 0, t1438, t1445, t1426, t1402, 0, 0, 0, 0, 0, 0, t1408, t1412, t1394, t1388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1520, t1513, t1510, t1475, 0, 0, 0, 0, 0, 0, t1462, t1465, t1450, t1415, 0, 0, 0, 0, 0, 0, t1419, t1425, t1407, t1391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1514, t1531, t1512, t1474, 0, 0, 0, 0, 0, 0, t1461, t1464, t1449, t1414, 0, 0, 0, 0, 0, 0, t1418, t1424, t1406, t1390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1509, t1511, t1507, t1504, 0, 0, 0, 0, 0, 0, t1468, t1470, t1479, t1476, 0, 0, 0, 0, 0, 0, t1434, t1436, t1453, t1442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1491, t1487, t1469, t1433, 0, 0, 0, 0, 0, 0, t1441, t1448, t1417, t1397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1488, t1503, t1471, t1432, 0, 0, 0, 0, 0, 0, t1440, t1447, t1416, t1396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1468, t1470, t1479, t1476, 0, 0, 0, 0, 0, 0, t1434, t1436, t1453, t1442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1463, t1459, t1435, t1411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1460, t1480, t1437, t1410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1434, t1436, t1453, t1442;];
f_new_reg = t1;
