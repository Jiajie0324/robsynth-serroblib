% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:34
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR13_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR13_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR13_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR13_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:33:58
% EndTime: 2019-12-31 20:34:24
% DurationCPUTime: 16.07s
% Computational Cost: add. (17024->607), mult. (35858->830), div. (0->0), fcn. (38839->8), ass. (0->456)
t435 = sin(qJ(5));
t433 = sin(pkin(9));
t434 = cos(pkin(9));
t437 = cos(qJ(2));
t436 = sin(qJ(2));
t666 = pkin(7) + qJ(3);
t669 = t437 * pkin(2);
t463 = -t666 * t436 - pkin(1) - t669;
t442 = (-pkin(6) * t433 - pkin(3)) * t437 + t463 * t434;
t639 = t434 * t437;
t567 = pkin(6) * t639;
t445 = t433 * t463 + t567;
t675 = sin(qJ(4));
t677 = cos(qJ(4));
t217 = -t677 * t442 + t675 * t445;
t549 = t675 * t433;
t557 = t677 * t434;
t391 = t549 - t557;
t375 = t391 * t436;
t174 = t375 * pkin(8) - t217;
t668 = t437 * pkin(4);
t441 = t174 - t668;
t440 = t435 * t441;
t218 = t675 * t442 + t677 * t445;
t548 = t675 * t434;
t558 = t677 * t433;
t395 = t558 + t548;
t372 = t395 * t436;
t175 = -t372 * pkin(8) + t218;
t676 = cos(qJ(5));
t554 = t676 * t175;
t88 = t554 + t440;
t637 = t435 * t174;
t95 = -t554 - t637;
t736 = t95 + t88;
t533 = t666 * t434;
t534 = t666 * t433;
t339 = t675 * t533 + t677 * t534;
t289 = -t395 * pkin(8) - t339;
t340 = t677 * t533 - t675 * t534;
t290 = -t391 * pkin(8) + t340;
t171 = t676 * t289 - t435 * t290;
t281 = t676 * t372 - t435 * t375;
t316 = t676 * t391 + t435 * t395;
t680 = -t437 / 0.2e1;
t421 = -pkin(3) * t434 - pkin(2);
t367 = pkin(4) * t391 + t421;
t689 = -t367 / 0.2e1;
t642 = t433 * t436;
t399 = pkin(3) * t642 + t436 * pkin(6);
t331 = pkin(4) * t372 + t399;
t690 = -t331 / 0.2e1;
t452 = t171 * t680 - t281 * t689 - t316 * t690;
t405 = t436 * pkin(2) - qJ(3) * t437;
t418 = pkin(6) * t642;
t368 = t434 * t405 + t418;
t328 = t436 * pkin(3) - pkin(7) * t639 + t368;
t311 = t675 * t328;
t640 = t434 * t436;
t369 = -pkin(6) * t640 + t433 * t405;
t641 = t433 * t437;
t338 = -pkin(7) * t641 + t369;
t333 = t677 * t338;
t226 = t333 + t311;
t374 = t395 * t437;
t176 = -pkin(8) * t374 + t226;
t553 = t676 * t176;
t523 = -t553 / 0.2e1;
t312 = t677 * t328;
t550 = t675 * t338;
t225 = -t550 + t312;
t407 = t437 * t549;
t525 = t437 * t557;
t377 = t525 - t407;
t670 = t436 * pkin(4);
t173 = -t377 * pkin(8) + t225 + t670;
t638 = t435 * t173;
t459 = -t638 / 0.2e1 + t523;
t29 = t452 + t459;
t738 = qJD(4) + qJD(5);
t149 = t676 * t441;
t636 = t435 * t175;
t87 = -t149 + t636;
t555 = t676 * t174;
t96 = t555 - t636;
t737 = t87 + t96;
t650 = t281 ^ 2;
t362 = t676 * t375;
t633 = t435 * t372;
t705 = -t362 - t633;
t651 = t705 ^ 2;
t727 = t650 - t651;
t735 = qJD(1) * t727;
t648 = t316 ^ 2;
t384 = t676 * t395;
t630 = t435 * t391;
t704 = t384 - t630;
t649 = t704 ^ 2;
t728 = t648 - t649;
t734 = qJD(2) * t728;
t447 = t435 * t289;
t552 = t676 * t290;
t172 = t552 + t447;
t699 = -t172 / 0.2e1;
t679 = t437 / 0.2e1;
t731 = t172 * t679;
t723 = t704 / 0.2e1;
t730 = t281 * t723;
t725 = -t316 / 0.2e1;
t729 = t705 * t725;
t726 = t738 * t171;
t724 = -t704 / 0.2e1;
t722 = t705 / 0.2e1;
t602 = qJD(1) * t437;
t721 = t281 * t602;
t607 = qJD(1) * t705;
t547 = t281 * t607;
t600 = qJD(2) * t704;
t545 = t316 * t600;
t720 = t331 * t281;
t719 = t331 * t705;
t259 = t705 * t602;
t624 = t738 * t316;
t493 = t600 + t607;
t601 = qJD(2) * t316;
t608 = qJD(1) * t281;
t718 = t601 + t608;
t717 = qJD(3) * t281;
t716 = qJD(3) * t316;
t715 = qJD(4) * t281;
t110 = t281 * t724 + t729;
t714 = t110 * qJD(5);
t685 = -t395 / 0.2e1;
t686 = -t391 / 0.2e1;
t235 = t372 * t685 - t375 * t686;
t713 = t235 * qJD(4);
t712 = t281 * qJD(5);
t711 = -qJD(1) * t110 + t545;
t598 = qJD(2) * t395;
t710 = -qJD(1) * t235 + t391 * t598;
t709 = -qJD(2) * t110 + t547;
t603 = qJD(1) * t375;
t708 = qJD(2) * t235 + t372 * t603;
t537 = -t447 / 0.2e1;
t431 = t436 ^ 2;
t414 = t437 ^ 2 - t431;
t551 = t676 * t377;
t632 = t435 * t374;
t623 = -t632 / 0.2e1 + t551 / 0.2e1;
t703 = t375 ^ 2;
t702 = t395 ^ 2;
t698 = -t705 / 0.2e1;
t694 = t316 / 0.2e1;
t522 = -t362 / 0.2e1;
t688 = t372 / 0.2e1;
t687 = t375 / 0.2e1;
t521 = t384 / 0.2e1;
t684 = t399 / 0.2e1;
t428 = t437 * pkin(6);
t683 = t428 / 0.2e1;
t682 = -t435 / 0.2e1;
t681 = t435 / 0.2e1;
t482 = 0.2e1 * t723 * t705;
t483 = (t694 - t725) * t281;
t48 = t482 + t483;
t678 = t48 * qJD(3);
t674 = t374 * pkin(4);
t673 = t375 * pkin(4);
t672 = t395 * pkin(4);
t671 = t435 * pkin(4);
t667 = -qJD(4) / 0.2e1;
t49 = -t482 + t483;
t67 = t281 * t316 - t704 * t705;
t665 = t49 * qJD(4) + t67 * qJD(5);
t664 = pkin(4) * qJD(4);
t644 = t395 * t375;
t645 = t372 * t391;
t236 = -t644 + t645;
t663 = t236 * qJD(3);
t27 = -t281 * t88 + t705 * t87;
t662 = qJD(1) * t27;
t44 = t281 * t673 + t437 * t95 - t719;
t661 = qJD(1) * t44;
t45 = t437 * t96 - t673 * t705 - t720;
t660 = qJD(1) * t45;
t62 = -t437 * t87 - t720;
t659 = qJD(1) * t62;
t63 = -t437 * t88 - t719;
t658 = qJD(1) * t63;
t361 = t676 * t374;
t631 = t435 * t377;
t283 = t361 + t631;
t286 = t551 - t632;
t556 = t676 * t173;
t635 = t435 * t176;
t89 = t556 - t635;
t90 = t553 + t638;
t10 = -t281 * t90 - t283 * t88 + t286 * t87 - t705 * t89;
t657 = t10 * qJD(1);
t11 = -t737 * t281 - t736 * t705;
t656 = t11 * qJD(1);
t417 = pkin(3) * t641;
t400 = t428 + t417;
t332 = t400 + t674;
t12 = t331 * t332 - t87 * t89 + t88 * t90;
t655 = t12 * qJD(1);
t13 = -t331 * t673 - t87 * t95 + t88 * t96;
t654 = t13 * qJD(1);
t21 = -t332 * t281 - t331 * t283 + t87 * t436 + t437 * t89;
t653 = t21 * qJD(1);
t22 = t331 * t286 + t332 * t705 - t88 * t436 + t437 * t90;
t652 = t22 * qJD(1);
t647 = t316 * t437;
t646 = t704 * t437;
t43 = t217 * t377 - t218 * t374 + t225 * t375 - t226 * t372;
t643 = t43 * qJD(1);
t50 = -t217 * t225 + t218 * t226 + t399 * t400;
t629 = t50 * qJD(1);
t78 = t217 * t436 + t225 * t437 - t400 * t372 - t399 * t374;
t628 = t78 * qJD(1);
t79 = -t218 * t436 + t226 * t437 - t400 * t375 + t399 * t377;
t627 = t79 * qJD(1);
t107 = t316 * t722 + t730;
t626 = t107 * qJD(4) - t714;
t108 = t729 - t730;
t625 = t108 * qJD(4) + t714;
t429 = t433 ^ 2;
t430 = t434 ^ 2;
t413 = t430 + t429;
t101 = -t217 * t375 - t218 * t372;
t622 = qJD(1) * t101;
t449 = t340 * t679 + t395 * t684 - t421 * t375 / 0.2e1;
t485 = t312 / 0.2e1 - t550 / 0.2e1;
t111 = -t449 + t485;
t621 = qJD(1) * t111;
t450 = t339 * t679 + t391 * t684 + t421 * t688;
t536 = -t311 / 0.2e1 - t333 / 0.2e1;
t112 = t450 + t536;
t620 = qJD(1) * t112;
t134 = -t217 * t437 - t399 * t372;
t619 = qJD(1) * t134;
t135 = -t218 * t437 + t399 * t375;
t618 = qJD(1) * t135;
t156 = t281 * t436 - t283 * t437;
t617 = qJD(1) * t156;
t157 = t286 * t437 - t436 * t705;
t616 = qJD(1) * t157;
t519 = -t361 / 0.2e1 - t631 / 0.2e1;
t539 = t704 * t680;
t185 = t539 - t519;
t615 = qJD(1) * t185;
t186 = t539 + t519;
t614 = qJD(1) * t186;
t187 = -t646 / 0.2e1 + t519;
t613 = qJD(1) * t187;
t188 = -t647 / 0.2e1 + t623;
t612 = qJD(1) * t188;
t538 = t316 * t679;
t190 = -t538 + t623;
t611 = qJD(1) * t190;
t191 = -t538 - t623;
t610 = qJD(1) * t191;
t518 = -t436 * qJ(3) - t669;
t486 = -pkin(1) + t518;
t358 = -pkin(6) * t641 + t434 * t486;
t359 = t433 * t486 + t567;
t245 = (t358 * t434 + t359 * t433) * t436;
t609 = qJD(1) * t245;
t287 = t372 * t436 - t374 * t437;
t606 = qJD(1) * t287;
t288 = t375 * t436 + t377 * t437;
t605 = qJD(1) * t288;
t604 = qJD(1) * t372;
t599 = qJD(2) * t367;
t597 = qJD(2) * t421;
t596 = qJD(2) * t434;
t595 = qJD(3) * t437;
t594 = qJD(4) * t705;
t593 = qJD(4) * t704;
t592 = qJD(4) * t375;
t591 = qJD(4) * t395;
t314 = t521 - t384 / 0.2e1;
t590 = qJD(5) * t314;
t588 = qJD(5) * t704;
t587 = qJD(5) * t367;
t100 = -t281 * t286 - t283 * t705;
t586 = t100 * qJD(1);
t131 = (t358 * t437 + t368 * t436) * t434 + (t359 * t437 + t369 * t436) * t433;
t585 = t131 * qJD(1);
t158 = pkin(6) ^ 2 * t436 * t437 + t358 * t368 + t359 * t369;
t584 = t158 * qJD(1);
t215 = -t372 * t377 + t374 * t375;
t583 = t215 * qJD(1);
t240 = -t358 * t436 + (t368 - 0.2e1 * t418) * t437;
t582 = t240 * qJD(1);
t241 = t369 * t437 + (-t359 + 0.2e1 * t567) * t436;
t581 = t241 * qJD(1);
t457 = -t558 / 0.2e1 - t548 / 0.2e1;
t303 = (t685 - t457) * t437;
t580 = t303 * qJD(1);
t304 = (t685 + t457) * t437;
t579 = t304 * qJD(1);
t305 = t391 * t680 + t525 / 0.2e1 - t407 / 0.2e1;
t578 = t305 * qJD(1);
t306 = t407 / 0.2e1 + (t686 - t557 / 0.2e1) * t437;
t577 = t306 * qJD(1);
t576 = t372 * qJD(4);
t390 = t413 * t431;
t575 = t390 * qJD(1);
t386 = t391 * qJD(4);
t393 = t414 * t433;
t574 = t393 * qJD(1);
t394 = t414 * t434;
t573 = t394 * qJD(1);
t572 = t413 * qJD(2);
t571 = t414 * qJD(1);
t570 = t436 * qJD(1);
t569 = t436 * qJD(2);
t568 = t437 * qJD(2);
t566 = -t676 / 0.2e1;
t565 = t676 / 0.2e1;
t564 = pkin(1) * t570;
t563 = pkin(1) * t602;
t562 = pkin(6) * t568;
t561 = -t673 / 0.2e1;
t560 = t672 / 0.2e1;
t559 = t668 / 0.2e1;
t543 = t433 * t596;
t542 = t436 * t595;
t541 = t395 * t386;
t540 = t436 * t568;
t415 = t437 * t570;
t535 = t417 / 0.2e1 + t683;
t532 = t676 * qJD(4);
t531 = t676 * qJD(5);
t530 = -0.2e1 * t433 * t640;
t357 = t375 * t602;
t529 = qJD(2) * t304 + t357;
t528 = -qJD(4) + t602;
t527 = -qJD(5) + t602;
t526 = qJD(3) + t597;
t524 = t434 * t415;
t520 = t436 * t565;
t446 = t737 * t699 - t736 * t171 / 0.2e1;
t462 = t89 * t565 + t90 * t681;
t1 = (t331 * t685 + t367 * t687 + t462) * pkin(4) + t446;
t32 = t367 * t672;
t517 = -t1 * qJD(1) + t32 * qJD(2);
t439 = t737 * t725 + t736 * t724 + (t722 + t698) * t172;
t456 = (t283 * t682 + t286 * t566) * pkin(4);
t3 = t456 - t439;
t516 = t3 * qJD(1);
t444 = -t171 * t698 - t281 * t699 + t88 * t694 + t724 * t87;
t484 = t674 / 0.2e1 + t535;
t15 = t444 + t484;
t64 = -t171 * t704 - t172 * t316;
t515 = qJD(1) * t15 - qJD(2) * t64;
t438 = -t440 / 0.2e1 + t435 * t559;
t37 = t637 / 0.2e1 + t438;
t91 = t537 + t447 / 0.2e1;
t514 = qJD(1) * t37 - qJD(2) * t91;
t464 = -t149 / 0.2e1 + t676 * t559;
t39 = t555 / 0.2e1 + t464;
t513 = t39 * qJD(1);
t98 = t650 + t651;
t512 = qJD(1) * t98 + qJD(2) * t48;
t511 = qJD(2) * t49 + t735;
t510 = -t368 * t433 + t369 * t434;
t125 = t648 + t649;
t509 = qJD(1) * t48 + qJD(2) * t125;
t508 = qJD(1) * t49 + t734;
t507 = qJD(2) * t67 + t735;
t132 = -t316 * t672 - t367 * t704;
t454 = t689 * t705 + t690 * t704 - t731;
t458 = -t635 / 0.2e1 + t556 / 0.2e1;
t18 = (t281 * t685 + t316 * t687 + t520) * pkin(4) + t454 + t458;
t506 = qJD(1) * t18 + qJD(2) * t132;
t133 = t316 * t367 - t672 * t704;
t17 = (t436 * t682 + t685 * t705 + t687 * t704) * pkin(4) + t29;
t505 = qJD(1) * t17 + qJD(2) * t133;
t504 = qJD(1) * t67 + t734;
t184 = t339 * t395 - t340 * t391;
t443 = t217 * t685 + t218 * t391 / 0.2e1 + t339 * t687 + t340 * t688;
t60 = t443 + t535;
t503 = qJD(1) * t60 - qJD(2) * t184;
t461 = -t281 * t681 + t566 * t705;
t128 = (t687 + t461) * pkin(4);
t460 = -t316 * t681 + t566 * t704;
t165 = (t685 + t460) * pkin(4);
t502 = qJD(1) * t128 + qJD(2) * t165;
t139 = t644 + t645;
t370 = t372 ^ 2;
t244 = t370 - t703;
t501 = qJD(1) * t244 + qJD(2) * t139;
t387 = t391 ^ 2;
t292 = t387 - t702;
t500 = qJD(1) * t139 + qJD(2) * t292;
t229 = 0.2e1 * t522 - t633;
t252 = 0.2e1 * t521 - t630;
t498 = qJD(1) * t229 + qJD(2) * t252;
t297 = t370 + t703;
t497 = qJD(1) * t297 + qJD(2) * t236;
t337 = t387 + t702;
t496 = qJD(1) * t236 + qJD(2) * t337;
t481 = t358 * t433 / 0.2e1 - t359 * t434 / 0.2e1;
t242 = t683 + t481;
t401 = t413 * qJ(3);
t495 = qJD(1) * t242 - qJD(2) * t401;
t278 = t522 + t362 / 0.2e1;
t494 = qJD(1) * t278 + qJD(2) * t314;
t491 = -qJD(2) * t391 - t604;
t490 = t598 - t603;
t489 = qJD(5) * t252 + t593;
t488 = qJD(5) * t705 + t594;
t487 = t712 + t715;
t451 = t331 * t723 + t367 * t722 + t731;
t28 = -t451 + t458;
t480 = qJD(1) * t28 - t599 * t704;
t479 = qJD(1) * t29 + t316 * t599;
t478 = qJD(2) * t107 + t608 * t705;
t477 = qJD(1) * t107 + t601 * t704;
t476 = qJD(2) * t108 - t547;
t475 = qJD(1) * t108 - t545;
t466 = qJD(2) * t303 + t357 - t592;
t465 = qJD(2) * t186 - qJD(5) * t278 - t259;
t455 = qJD(2) * t185 + qJD(5) * t229 - t259 + t594;
t448 = qJD(2) * t518 + t595;
t425 = -t570 / 0.2e1;
t424 = t570 / 0.2e1;
t423 = t569 / 0.2e1;
t388 = t436 * t667 + t415;
t371 = t415 + (t667 - qJD(5) / 0.2e1) * t436;
t243 = t683 - t481;
t237 = t305 * qJD(2) - t372 * t602;
t192 = t646 / 0.2e1 + t519;
t189 = t647 / 0.2e1 + t623;
t183 = -t306 * qJD(2) + t372 * t528;
t166 = pkin(4) * t460 + t560;
t137 = t139 * qJD(4);
t129 = pkin(4) * t461 + t561;
t114 = t449 + t485;
t113 = -t450 + t536;
t97 = t190 * qJD(2) - t721;
t94 = -t552 + 0.2e1 * t537;
t65 = -t191 * qJD(2) + t281 * t528 - t712;
t61 = -t443 + t535;
t40 = t636 - t555 / 0.2e1 + t464;
t38 = -t554 - t637 / 0.2e1 + t438;
t31 = t451 + t458;
t30 = -t452 + t459;
t20 = t705 * t560 + t704 * t561 + t523 + (-t670 / 0.2e1 - t173 / 0.2e1) * t435 - t452;
t19 = pkin(4) * t520 + t281 * t560 + t316 * t561 - t454 + t458;
t16 = -t444 + t484;
t4 = t456 + t439;
t2 = pkin(4) * t462 + t331 * t560 + t367 * t561 - t446;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t540, t414 * qJD(2), 0, -t540, 0, 0, -pkin(1) * t569, -pkin(1) * t568, 0, 0, t430 * t540, t530 * t568, -t394 * qJD(2), t429 * t540, t393 * qJD(2), -t540, -t240 * qJD(2) + t434 * t542, t241 * qJD(2) - t433 * t542, -qJD(2) * t131 + qJD(3) * t390, qJD(2) * t158 - qJD(3) * t245, -(qJD(2) * t377 - t576) * t375, qJD(2) * t215 + qJD(4) * t244, -t288 * qJD(2) + t437 * t576, (qJD(2) * t374 - t592) * t372, -t287 * qJD(2) - t437 * t592, -t540, -t78 * qJD(2) - t135 * qJD(4) - t375 * t595, t79 * qJD(2) + t134 * qJD(4) - t372 * t595, qJD(2) * t43 + qJD(3) * t297, qJD(2) * t50 + qJD(3) * t101, (qJD(2) * t286 - t487) * t705, qJD(2) * t100 + t738 * t727, -t157 * qJD(2) + t437 * t487, (qJD(2) * t283 + t488) * t281, -t156 * qJD(2) + t437 * t488, -t540, -t21 * qJD(2) - t44 * qJD(4) - t63 * qJD(5) + t595 * t705, t22 * qJD(2) + t45 * qJD(4) + t62 * qJD(5) - t281 * t595, qJD(2) * t10 + qJD(3) * t98 + qJD(4) * t11, qJD(2) * t12 + qJD(3) * t27 + qJD(4) * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415, t571, t568, -t415, -t569, 0, -t562 - t564, pkin(6) * t569 - t563, 0, 0, (t430 * t570 + t543) * t437, (qJD(1) * t530 + (-t429 + t430) * qJD(2)) * t437, t433 * t569 - t573, (t429 * t570 - t543) * t437, t434 * t569 + t574, -t415, t433 * t448 - t434 * t562 - t582, t433 * t562 + t434 * t448 + t581, qJD(2) * t510 - t585, t584 + (-pkin(2) * t428 + qJ(3) * t510) * qJD(2) + t243 * qJD(3), t377 * t490 + t713, t583 + (-t374 * t395 - t377 * t391) * qJD(2) + t137, -qJD(4) * t306 + t395 * t569 - t605, -t374 * t491 - t713, -qJD(4) * t303 - t391 * t569 - t606, -t388, -t628 + (-t339 * t436 + t374 * t421 + t391 * t400) * qJD(2) - t304 * qJD(3) + t114 * qJD(4), t627 + (-t340 * t436 + t377 * t421 + t395 * t400) * qJD(2) + t305 * qJD(3) + t113 * qJD(4), t643 + (-t225 * t395 - t226 * t391 + t339 * t377 - t340 * t374) * qJD(2) + t663, t629 + (-t225 * t339 + t226 * t340 + t400 * t421) * qJD(2) + t61 * qJD(3), t493 * t286 + t625, t586 + (-t283 * t704 - t286 * t316) * qJD(2) + t665, -qJD(4) * t191 + qJD(5) * t189 + t569 * t704 - t616, t283 * t718 + t626, -qJD(4) * t185 + qJD(5) * t192 - t316 * t569 - t617, -t371, -t653 + (t171 * t436 + t283 * t367 + t316 * t332) * qJD(2) - t186 * qJD(3) + t19 * qJD(4) + t31 * qJD(5), t652 + (-t172 * t436 + t286 * t367 + t332 * t704) * qJD(2) + t190 * qJD(3) + t20 * qJD(4) + t30 * qJD(5), t657 + (-t171 * t286 - t172 * t283 - t316 * t90 - t704 * t89) * qJD(2) + t4 * qJD(4) + t678, t655 + (t171 * t89 + t172 * t90 + t332 * t367) * qJD(2) + t16 * qJD(3) + t2 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (qJD(2) * t433 + t434 * t570) * t437, (-t433 * t570 + t596) * t437, t575, qJD(2) * t243 - t609, 0, 0, 0, 0, 0, 0, -t529, t237, t497, qJD(2) * t61 + t622, 0, 0, 0, 0, 0, 0, -t465, t97, t512, qJD(2) * t16 + qJD(4) * t129 + t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t708, t501, t183, -t708, -t466, t423, qJD(2) * t114 - qJD(4) * t218 - t618, qJD(2) * t113 + qJD(4) * t217 + t619, 0, 0, t476, t511, t65, t478, -t455, t423, qJD(2) * t19 + qJD(4) * t95 + qJD(5) * t38 - t661, qJD(2) * t20 - qJD(4) * t96 + qJD(5) * t40 + t660, t656 + t4 * qJD(2) + (t281 * t676 - t435 * t705) * t664, t654 + t2 * qJD(2) + t129 * qJD(3) + (t435 * t96 + t676 * t95) * t664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t709, t507, t189 * qJD(2) + t281 * t527 - t715, t709, t192 * qJD(2) - t229 * qJD(4) + t527 * t705, t423, qJD(2) * t31 + qJD(3) * t278 + qJD(4) * t38 - qJD(5) * t88 - t658, qJD(2) * t30 + qJD(4) * t40 + qJD(5) * t87 + t659, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t415, -t571, 0, t415, 0, 0, t564, t563, 0, 0, -t430 * t415, 0.2e1 * t433 * t524, t573, -t429 * t415, -t574, t415, t582, -t581, t585, -qJD(3) * t242 - t584, t377 * t603 + t713, t137 - t583, -qJD(4) * t305 + t605, -t374 * t604 - t713, -qJD(4) * t304 + t606, t388, -qJD(3) * t303 - qJD(4) * t111 + t628, qJD(3) * t306 - qJD(4) * t112 - t627, -t643 + t663, -qJD(3) * t60 - t629, -t286 * t607 + t625, -t586 + t665, -qJD(4) * t190 - qJD(5) * t188 + t616, -t283 * t608 + t626, -qJD(4) * t186 - qJD(5) * t187 + t617, t371, -qJD(3) * t185 - qJD(4) * t18 - qJD(5) * t28 + t653, qJD(3) * t191 - qJD(4) * t17 - qJD(5) * t29 - t652, -qJD(4) * t3 - t657 + t678, -qJD(3) * t15 - qJD(4) * t1 - t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t413 * qJD(3), t401 * qJD(3), -t541, t292 * qJD(4), 0, t541, 0, 0, t421 * t591, -t421 * t386, qJD(3) * t337, qJD(3) * t184, -t624 * t704, t738 * t728, 0, (t588 + t593) * t316, 0, 0, -qJD(4) * t132 + t587 * t704, -qJD(4) * t133 - t316 * t587, qJD(3) * t125, qJD(3) * t64 + qJD(4) * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t572, -t495, 0, 0, 0, 0, 0, 0, -t580, t577, t496, -t503, 0, 0, 0, 0, 0, 0, t590 - t615, t610, t509, qJD(4) * t166 - t515; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t710, t500, -t386 - t578, t710, -t579 - t591, t425, -qJD(4) * t340 + t395 * t597 - t621, qJD(4) * t339 - t391 * t597 - t620, 0, 0, t475, t508, -t611 - t624, t477, -t489 - t614, t425, -qJD(4) * t172 + qJD(5) * t94 - t506, -t505 - t726, (t316 * t676 - t435 * t704) * t664 - t516, t166 * qJD(3) + (t171 * t435 - t172 * t676) * t664 + t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t711, t504, -t612 - t624, t711, -qJD(4) * t252 - t588 - t613, t425, qJD(3) * t314 + qJD(4) * t94 - qJD(5) * t172 - t480, -t479 - t726, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524, t433 * t415, -t575, qJD(2) * t242 + t609, 0, 0, 0, 0, 0, 0, t466, t183, -t497, qJD(2) * t60 - t622, 0, 0, 0, 0, 0, 0, t455, t65, -t512, qJD(2) * t15 - qJD(4) * t128 - t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t572, t495, 0, 0, 0, 0, 0, 0, t580 + t591, -t386 - t577, -t496, t503, 0, 0, 0, 0, 0, 0, t489 + t615, -t610 - t624, -t509, -qJD(4) * t165 + t515; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, t491, 0, 0, 0, 0, 0, 0, 0, 0, t493, -t718, 0, -t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t498, -t718, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t708, -t501, t237, t708, t529, t423, qJD(2) * t111 + qJD(3) * t375 + t618, qJD(2) * t112 + qJD(3) * t372 - t619, 0, 0, -t476, -t511, t97, -t478, t465, t423, qJD(2) * t18 - qJD(3) * t705 + qJD(5) * t37 + t661, qJD(2) * t17 + qJD(5) * t39 - t660 + t717, qJD(2) * t3 - t656, qJD(2) * t1 + qJD(3) * t128 - t654; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t710, -t500, t578, -t710, t579, t424, -t395 * t526 + t621, t391 * t526 + t620, 0, 0, -t475, -t508, t611, -t477, -t590 + t614, t424, -qJD(3) * t704 - qJD(5) * t91 + t506, t505 + t716, t516, qJD(3) * t165 - t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t490, -t491, 0, 0, 0, 0, 0, 0, 0, 0, -t493, t718, 0, t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t671, -pkin(4) * t531, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t494, 0, -t671 * t738 + t514, (-t532 - t531) * pkin(4) + t513, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t709, -t507, t188 * qJD(2) - t721, -t709, t187 * qJD(2) + t278 * qJD(4) - t259, t423, qJD(2) * t28 - qJD(3) * t229 - qJD(4) * t37 + t658, qJD(2) * t29 - qJD(4) * t39 - t659 + t717, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t711, -t504, t612, -t711, qJD(4) * t314 + t613, t424, -qJD(3) * t252 + qJD(4) * t91 + t480, t479 + t716, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t498, t718, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, 0, t435 * t664 - t514, pkin(4) * t532 - t513, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
