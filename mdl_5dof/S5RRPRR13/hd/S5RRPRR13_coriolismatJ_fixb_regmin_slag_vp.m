% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRR13
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:34
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR13_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR13_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR13_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR13_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:33:55
% EndTime: 2019-12-31 20:34:12
% DurationCPUTime: 7.48s
% Computational Cost: add. (5912->430), mult. (13622->609), div. (0->0), fcn. (15099->8), ass. (0->340)
t508 = qJD(4) + qJD(5);
t287 = sin(pkin(9));
t463 = pkin(7) + qJ(3);
t261 = t463 * t287;
t288 = cos(pkin(9));
t262 = t463 * t288;
t290 = sin(qJ(4));
t293 = cos(qJ(4));
t203 = -t261 * t290 + t262 * t293;
t422 = t293 * t288;
t429 = t290 * t287;
t483 = t422 - t429;
t161 = pkin(8) * t483 + t203;
t289 = sin(qJ(5));
t292 = cos(qJ(5));
t202 = t261 * t293 + t262 * t290;
t423 = t293 * t287;
t428 = t290 * t288;
t251 = t423 + t428;
t318 = -pkin(8) * t251 - t202;
t77 = t161 * t292 + t289 * t318;
t507 = t508 * t77;
t332 = -t161 * t289 + t292 * t318;
t506 = t508 * t332;
t329 = -t251 * t292 - t289 * t483;
t382 = t329 * qJD(5);
t481 = qJD(4) * t329 + t382;
t291 = sin(qJ(2));
t232 = t251 * t291;
t235 = t483 * t291;
t151 = t232 * t292 + t235 * t289;
t225 = t292 * t235;
t433 = t289 * t232;
t484 = t225 - t433;
t490 = t151 ^ 2 - t484 ^ 2;
t505 = qJD(1) * t490;
t180 = t251 * t289 - t292 * t483;
t489 = t180 ^ 2 - t329 ^ 2;
t504 = qJD(2) * t489;
t294 = cos(qJ(2));
t368 = t294 * qJD(1);
t503 = t151 * t368;
t478 = t329 / 0.2e1;
t502 = t151 * t478;
t440 = t287 * t291;
t254 = pkin(3) * t440 + pkin(6) * t291;
t194 = pkin(4) * t232 + t254;
t501 = t194 * t151;
t500 = t194 * t484;
t276 = -pkin(3) * t288 - pkin(2);
t228 = -pkin(4) * t483 + t276;
t475 = -t228 / 0.2e1;
t499 = t475 * t484;
t137 = t484 * t368;
t384 = t180 * qJD(5);
t406 = -qJD(4) * t180 - t384;
t383 = t180 * qJD(2);
t391 = t151 * qJD(1);
t498 = -t383 - t391;
t401 = qJD(2) * t329;
t402 = qJD(1) * t484;
t497 = -t401 + t402;
t496 = qJD(3) * t151;
t495 = qJD(3) * t180;
t494 = qJD(3) * t329;
t493 = qJD(4) * t151;
t491 = t151 * qJD(5);
t488 = t151 / 0.2e1;
t472 = -t251 / 0.2e1;
t487 = t276 / 0.2e1;
t236 = t483 * t294;
t424 = t292 * t236;
t234 = t251 * t294;
t432 = t289 * t234;
t404 = -t432 / 0.2e1 + t424 / 0.2e1;
t480 = t484 / 0.2e1;
t479 = -t180 / 0.2e1;
t477 = -t194 / 0.2e1;
t476 = t194 / 0.2e1;
t355 = t225 / 0.2e1;
t474 = -t235 / 0.2e1;
t473 = t483 / 0.2e1;
t471 = t254 / 0.2e1;
t283 = t294 * pkin(6);
t470 = t283 / 0.2e1;
t469 = -t294 / 0.2e1;
t468 = t294 / 0.2e1;
t467 = pkin(4) * t235;
t466 = pkin(4) * t251;
t465 = t291 * pkin(4);
t464 = t294 * pkin(4);
t18 = -t151 * t479 + t180 * t488 + t329 * t480 + t478 * t484;
t23 = t151 * t180 + t329 * t484;
t462 = qJD(4) * t18 + qJD(5) * t23;
t40 = -t180 * t480 + t502;
t41 = t479 * t484 + t502;
t461 = qJD(4) * t40 + qJD(5) * t41;
t460 = pkin(4) * qJD(4);
t459 = pkin(4) * qJD(5);
t263 = pkin(2) * t291 - qJ(3) * t294;
t273 = pkin(6) * t440;
t229 = t263 * t288 + t273;
t437 = t288 * t294;
t191 = pkin(3) * t291 - pkin(7) * t437 + t229;
t177 = t293 * t191;
t438 = t288 * t291;
t230 = -pkin(6) * t438 + t263 * t287;
t439 = t287 * t294;
t201 = -pkin(7) * t439 + t230;
t430 = t290 * t201;
t351 = t177 - t430;
t78 = -pkin(8) * t236 + t351 + t465;
t458 = t289 * t78;
t341 = -pkin(2) * t294 - qJ(3) * t291;
t258 = -pkin(1) + t341;
t245 = t288 * t258;
t188 = -pkin(7) * t438 + t245 + (-pkin(6) * t287 - pkin(3)) * t294;
t274 = pkin(6) * t437;
t222 = t258 * t287 + t274;
t200 = -pkin(7) * t440 + t222;
t107 = -t188 * t293 + t200 * t290;
t79 = -pkin(8) * t235 - t107;
t457 = t289 * t79;
t108 = t188 * t290 + t200 * t293;
t80 = -pkin(8) * t232 + t108;
t456 = t289 * t80;
t176 = t290 * t191;
t196 = t293 * t201;
t405 = t196 + t176;
t81 = -pkin(8) * t234 + t405;
t455 = t289 * t81;
t454 = t292 * t78;
t453 = t292 * t79;
t452 = t292 * t80;
t451 = t292 * t81;
t224 = t292 * t234;
t431 = t289 * t236;
t153 = t224 + t431;
t255 = pkin(3) * t439 + t283;
t195 = pkin(4) * t234 + t255;
t73 = t79 - t464;
t27 = -t292 * t73 + t456;
t5 = (t454 - t455) * t294 + t27 * t291 - t195 * t151 - t194 * t153;
t450 = t5 * qJD(1);
t156 = t424 - t432;
t28 = t289 * t73 + t452;
t6 = (t451 + t458) * t294 - t28 * t291 + t195 * t484 + t194 * t156;
t449 = t6 * qJD(1);
t33 = -t452 - t457;
t15 = -t151 * t467 + t294 * t33 - t500;
t448 = qJD(1) * t15;
t34 = t453 - t456;
t16 = t294 * t34 + t467 * t484 - t501;
t447 = qJD(1) * t16;
t19 = -t27 * t294 - t501;
t446 = qJD(1) * t19;
t20 = -t28 * t294 - t500;
t445 = qJD(1) * t20;
t444 = t180 * t294;
t443 = t329 * t294;
t24 = t107 * t291 - t232 * t255 - t234 * t254 + t294 * t351;
t442 = t24 * qJD(1);
t25 = -t108 * t291 + t235 * t255 + t236 * t254 + t294 * t405;
t441 = t25 * qJD(1);
t37 = -t151 * t156 - t153 * t484;
t421 = t37 * qJD(1);
t298 = t203 * t468 + t235 * t487 + t251 * t471;
t343 = t177 / 0.2e1 - t430 / 0.2e1;
t42 = -t298 + t343;
t420 = t42 * qJD(1);
t299 = t202 * t468 + t232 * t487 - t471 * t483;
t353 = -t176 / 0.2e1 - t196 / 0.2e1;
t43 = t299 + t353;
t419 = t43 * qJD(1);
t221 = -pkin(6) * t439 + t245;
t48 = (t221 * t294 + t229 * t291) * t288 + (t222 * t294 + t230 * t291) * t287;
t418 = t48 * qJD(1);
t51 = -t107 * t294 - t232 * t254;
t417 = t51 * qJD(1);
t52 = -t108 * t294 - t235 * t254;
t416 = t52 * qJD(1);
t64 = t151 * t291 - t153 * t294;
t415 = t64 * qJD(1);
t65 = t156 * t294 - t291 * t484;
t414 = t65 * qJD(1);
t66 = pkin(6) ^ 2 * t291 * t294 + t221 * t229 + t222 * t230;
t413 = t66 * qJD(1);
t303 = t329 * t468;
t342 = -t224 / 0.2e1 - t431 / 0.2e1;
t83 = t303 - t342;
t412 = t83 * qJD(1);
t84 = t303 + t342;
t411 = t84 * qJD(1);
t85 = t443 / 0.2e1 + t342;
t410 = t85 * qJD(1);
t86 = -t444 / 0.2e1 + t404;
t409 = t86 * qJD(1);
t356 = t180 * t468;
t88 = -t356 + t404;
t408 = t88 * qJD(1);
t89 = -t356 - t404;
t407 = t89 * qJD(1);
t269 = t287 ^ 2 + t288 ^ 2;
t129 = (t221 * t288 + t222 * t287) * t291;
t403 = qJD(1) * t129;
t400 = qJD(2) * t228;
t399 = qJD(3) * t294;
t398 = qJD(4) * t484;
t105 = -t232 * t236 - t234 * t235;
t397 = t105 * qJD(1);
t124 = -t221 * t291 + (t229 - 0.2e1 * t273) * t294;
t396 = t124 * qJD(1);
t125 = t230 * t294 + (-t222 + 0.2e1 * t274) * t291;
t395 = t125 * qJD(1);
t149 = t355 - t225 / 0.2e1;
t393 = t149 * qJD(1);
t157 = t232 * t291 - t234 * t294;
t390 = t157 * qJD(1);
t158 = -t235 * t291 + t236 * t294;
t389 = t158 * qJD(1);
t312 = -t428 / 0.2e1 - t423 / 0.2e1;
t168 = (t472 - t312) * t294;
t388 = t168 * qJD(1);
t169 = (t472 + t312) * t294;
t387 = t169 * qJD(1);
t170 = t422 * t468 + (-t483 + t429) * t469;
t386 = t170 * qJD(1);
t171 = (t473 - t422 / 0.2e1 + t429 / 0.2e1) * t294;
t385 = t171 * qJD(1);
t381 = t232 * qJD(3);
t380 = t232 * qJD(4);
t379 = t235 * qJD(1);
t378 = t235 * qJD(3);
t377 = t235 * qJD(4);
t286 = t291 ^ 2;
t248 = t269 * t286;
t376 = t248 * qJD(1);
t375 = t483 * qJD(2);
t243 = t483 * qJD(4);
t374 = t251 * qJD(2);
t373 = t251 * qJD(4);
t372 = t269 * qJD(2);
t270 = t294 ^ 2 - t286;
t371 = t270 * qJD(1);
t370 = t291 * qJD(1);
t369 = t291 * qJD(2);
t367 = t294 * qJD(2);
t366 = pkin(1) * t370;
t365 = pkin(1) * t368;
t364 = pkin(6) * t367;
t363 = t467 / 0.2e1;
t362 = t466 / 0.2e1;
t361 = -t455 / 0.2e1;
t360 = -t451 / 0.2e1;
t359 = t291 * t399;
t358 = t291 * t367;
t357 = t291 * t368;
t352 = pkin(4) * t508;
t220 = t235 * t368;
t350 = qJD(2) * t169 - t220;
t349 = -qJD(4) + t368;
t348 = -qJD(5) + t368;
t347 = qJD(2) * t276 + qJD(3);
t346 = t465 / 0.2e1 + t78 / 0.2e1;
t345 = t464 / 0.2e1 - t73 / 0.2e1;
t344 = t368 - qJD(4) / 0.2e1;
t296 = -t151 * t475 - t180 * t477 + t332 * t469;
t317 = -t458 / 0.2e1 + t360;
t1 = (-t289 * t291 / 0.2e1 + t484 * t472 - t329 * t474) * pkin(4) + t296 + t317;
t50 = t180 * t228 + t329 * t466;
t340 = -qJD(1) * t1 - qJD(2) * t50;
t295 = t329 * t476 - t468 * t77 + t499;
t316 = t361 + t454 / 0.2e1;
t2 = (t292 * t291 / 0.2e1 + t151 * t472 + t180 * t474) * pkin(4) + t295 + t316;
t49 = -t180 * t466 + t228 * t329;
t339 = -qJD(1) * t2 - qJD(2) * t49;
t319 = t79 / 0.2e1 + t345;
t11 = t319 * t289;
t338 = t11 * qJD(1);
t13 = t319 * t292;
t337 = t13 * qJD(1);
t336 = qJD(2) * t18 + t505;
t335 = qJD(1) * t18 + t504;
t334 = qJD(2) * t23 + t505;
t333 = qJD(1) * t23 + t504;
t330 = -t229 * t287 + t230 * t288;
t128 = t232 ^ 2 - t235 ^ 2;
t55 = -t232 * t483 - t235 * t251;
t328 = qJD(1) * t128 + qJD(2) * t55;
t162 = -t251 ^ 2 + t483 ^ 2;
t327 = qJD(1) * t55 + qJD(2) * t162;
t115 = 0.2e1 * t355 - t433;
t325 = qJD(1) * t115 - t401;
t313 = t221 * t287 / 0.2e1 - t222 * t288 / 0.2e1;
t126 = t470 + t313;
t256 = t269 * qJ(3);
t324 = qJD(1) * t126 - qJD(2) * t256;
t322 = -qJD(1) * t232 + t375;
t321 = t374 + t379;
t320 = t491 + t493;
t301 = t180 * t476 + t228 * t488 - t332 * t468;
t8 = t301 + t317;
t315 = qJD(1) * t8 + t180 * t400;
t300 = -t329 * t477 + t469 * t77 + t499;
t7 = t300 + t316;
t314 = qJD(1) * t7 + t329 * t400;
t311 = -qJD(2) * t41 + t151 * t402;
t310 = qJD(2) * t40 - t391 * t484;
t309 = -qJD(1) * t41 - t180 * t401;
t308 = qJD(1) * t40 + t329 * t383;
t307 = qJD(2) * t84 - qJD(5) * t149 - t137;
t120 = t232 * t472 + t235 * t473;
t306 = qJD(2) * t120 - t232 * t379;
t305 = -qJD(1) * t120 - t374 * t483;
t304 = qJD(2) * t168 - t220 + t377;
t302 = qJD(2) * t83 + qJD(5) * t115 - t137 + t398;
t297 = qJD(2) * t341 + t399;
t280 = -t370 / 0.2e1;
t279 = t370 / 0.2e1;
t278 = t369 / 0.2e1;
t246 = t344 * t291;
t231 = (-qJD(5) / 0.2e1 + t344) * t291;
t127 = t470 - t313;
t121 = qJD(2) * t170 - t232 * t368;
t109 = t120 * qJD(4);
t90 = -t443 / 0.2e1 + t342;
t87 = t444 / 0.2e1 + t404;
t82 = -t171 * qJD(2) + t232 * t349;
t54 = t55 * qJD(4);
t45 = t298 + t343;
t44 = -t299 + t353;
t35 = qJD(2) * t88 - t503;
t21 = -t89 * qJD(2) + t151 * t349 - t491;
t14 = t456 - t453 / 0.2e1 + t345 * t292;
t12 = -t452 - t457 / 0.2e1 + t345 * t289;
t10 = -t300 + t316;
t9 = -t301 + t317;
t4 = -t289 * t346 - t329 * t363 + t362 * t484 - t296 + t360;
t3 = t151 * t362 + t180 * t363 + t292 * t346 - t295 + t361;
t17 = [0, 0, 0, t358, t270 * qJD(2), 0, 0, 0, -pkin(1) * t369, -pkin(1) * t367, -qJD(2) * t124 + t288 * t359, qJD(2) * t125 - t287 * t359, -qJD(2) * t48 + qJD(3) * t248, qJD(2) * t66 - qJD(3) * t129, (qJD(2) * t236 - t380) * t235, qJD(2) * t105 + qJD(4) * t128, -qJD(2) * t158 + t294 * t380, -qJD(2) * t157 + t294 * t377, -t358, -qJD(2) * t24 - qJD(4) * t52 + t294 * t378, qJD(2) * t25 + qJD(4) * t51 - t294 * t381, (qJD(2) * t156 - t320) * t484, qJD(2) * t37 + t490 * t508, -t65 * qJD(2) + t294 * t320, -t64 * qJD(2) + (qJD(5) * t484 + t398) * t294, -t358, -qJD(2) * t5 - qJD(4) * t15 - qJD(5) * t20 + t399 * t484, qJD(2) * t6 + qJD(4) * t16 + qJD(5) * t19 - t151 * t399; 0, 0, 0, t357, t371, t367, -t369, 0, -t364 - t366, pkin(6) * t369 - t365, -t274 * qJD(2) + t287 * t297 - t396, t287 * t364 + t288 * t297 + t395, qJD(2) * t330 - t418, t413 + (-pkin(2) * t283 + qJ(3) * t330) * qJD(2) + t127 * qJD(3), t236 * t321 + t109, t397 + (-t234 * t251 + t236 * t483) * qJD(2) + t54, -qJD(4) * t171 + t251 * t369 - t389, -qJD(4) * t168 + t369 * t483 - t390, -t246, -t442 + (-t202 * t291 + t234 * t276 - t255 * t483) * qJD(2) - t169 * qJD(3) + t45 * qJD(4), t441 + (-t203 * t291 + t236 * t276 + t251 * t255) * qJD(2) + t170 * qJD(3) + t44 * qJD(4), t156 * t497 + t461, t421 + (t153 * t329 - t156 * t180) * qJD(2) + t462, -qJD(4) * t89 + qJD(5) * t87 - t329 * t369 - t414, -qJD(4) * t83 + qJD(5) * t90 - t180 * t369 - t415, -t231, -t450 + (t153 * t228 + t180 * t195 + t291 * t332) * qJD(2) - t84 * qJD(3) + t3 * qJD(4) + t10 * qJD(5), t449 + (t156 * t228 - t195 * t329 - t291 * t77) * qJD(2) + t88 * qJD(3) + t4 * qJD(4) + t9 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (qJD(2) * t287 + t288 * t370) * t294, (qJD(2) * t288 - t287 * t370) * t294, t376, qJD(2) * t127 - t403, 0, 0, 0, 0, 0, -t350, t121, 0, 0, 0, 0, 0, -t307, t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t306, t328, t82, -t304, t278, qJD(2) * t45 - qJD(4) * t108 - t416, qJD(2) * t44 + qJD(4) * t107 + t417, t310, t336, t21, -t302, t278, qJD(2) * t3 + qJD(4) * t33 + qJD(5) * t12 - t448, qJD(2) * t4 - qJD(4) * t34 + qJD(5) * t14 + t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t311, t334, t87 * qJD(2) + t151 * t348 - t493, t90 * qJD(2) - t115 * qJD(4) + t348 * t484, t278, qJD(2) * t10 + qJD(3) * t149 + qJD(4) * t12 - qJD(5) * t28 - t445, qJD(2) * t9 + qJD(4) * t14 + qJD(5) * t27 + t446; 0, 0, 0, -t357, -t371, 0, 0, 0, t366, t365, t396, -t395, t418, -qJD(3) * t126 - t413, -t236 * t379 + t109, t54 - t397, -qJD(4) * t170 + t389, -qJD(4) * t169 + t390, t246, -qJD(3) * t168 - qJD(4) * t42 + t442, qJD(3) * t171 - qJD(4) * t43 - t441, -t156 * t402 + t461, -t421 + t462, -qJD(4) * t88 - qJD(5) * t86 + t414, -qJD(4) * t84 - qJD(5) * t85 + t415, t231, -qJD(3) * t83 - qJD(4) * t2 - qJD(5) * t7 + t450, qJD(3) * t89 - qJD(4) * t1 - qJD(5) * t8 - t449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269 * qJD(3), t256 * qJD(3), t483 * t373, t162 * qJD(4), 0, 0, 0, t276 * t373, t276 * t243, -t406 * t329, t508 * t489, 0, 0, 0, -qJD(4) * t49 - t228 * t382, -qJD(4) * t50 - t228 * t384; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, -t324, 0, 0, 0, 0, 0, -t388, t385, 0, 0, 0, 0, 0, -t412, t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t305, t327, t243 - t386, -t373 - t387, t280, -qJD(4) * t203 + t276 * t374 - t420, qJD(4) * t202 + t276 * t375 - t419, t308, t335, t406 - t408, -t411 + t481, t280, t339 - t507, t340 - t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, t333, -t409 + t406, -t410 + t481, t280, -t314 - t507, -t315 - t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t288 * t357, t287 * t357, -t376, qJD(2) * t126 + t403, 0, 0, 0, 0, 0, t304, t82, 0, 0, 0, 0, 0, t302, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372, t324, 0, 0, 0, 0, 0, t373 + t388, t243 - t385, 0, 0, 0, 0, 0, t412 - t481, t406 - t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321, t322, 0, 0, 0, 0, 0, t497, t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t325, t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t306, -t328, t121, t350, t278, qJD(2) * t42 - t378 + t416, qJD(2) * t43 + t381 - t417, -t310, -t336, t35, t307, t278, qJD(2) * t2 - qJD(3) * t484 + qJD(5) * t11 + t448, qJD(2) * t1 + qJD(5) * t13 - t447 + t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t305, -t327, t386, t387, t279, -t251 * t347 + t420, -t347 * t483 + t419, -t308, -t335, t408, t411, t279, -t339 + t494, -t340 + t495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t321, -t322, 0, 0, 0, 0, 0, -t497, -t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289 * t459, -t292 * t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t393, 0, -t289 * t352 + t338, -t292 * t352 + t337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, -t334, qJD(2) * t86 - t503, qJD(2) * t85 + qJD(4) * t149 - t137, t278, qJD(2) * t7 - qJD(3) * t115 - qJD(4) * t11 + t445, qJD(2) * t8 - qJD(4) * t13 - t446 + t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, -t333, t409, t410, t279, t314 + t494, t315 + t495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325, -t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, 0, t289 * t460 - t338, t292 * t460 - t337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t17;
