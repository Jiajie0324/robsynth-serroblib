% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRPR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:21
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRPR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR8_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR8_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPR8_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:20:55
% EndTime: 2019-12-31 21:21:16
% DurationCPUTime: 22.48s
% Computational Cost: add. (59044->662), mult. (124500->820), div. (0->0), fcn. (84791->8), ass. (0->437)
t1256 = qJD(2) + qJD(3);
t1254 = t1256 ^ 2;
t1260 = sin(qJ(3));
t1261 = sin(qJ(2));
t1264 = cos(qJ(3));
t1265 = cos(qJ(2));
t1218 = (t1260 * t1265 + t1261 * t1264) * qJD(1);
t1379 = t1218 ^ 2;
t1190 = t1379 + t1254;
t1255 = qJDD(2) + qJDD(3);
t1362 = qJD(1) * t1265;
t1363 = qJD(1) * t1261;
t1216 = t1260 * t1363 - t1264 * t1362;
t1357 = t1218 * t1216;
t1407 = t1357 + t1255;
t1427 = t1260 * t1407;
t1110 = t1264 * t1190 + t1427;
t1421 = t1264 * t1407;
t1112 = -t1260 * t1190 + t1421;
t1039 = t1265 * t1110 + t1261 * t1112;
t1450 = pkin(1) * t1039;
t1449 = pkin(6) * t1039;
t1042 = t1261 * t1110 - t1265 * t1112;
t1448 = pkin(6) * t1042;
t1262 = sin(qJ(1));
t1447 = t1262 * t1042;
t1266 = cos(qJ(1));
t1446 = t1266 * t1042;
t1213 = t1216 ^ 2;
t1199 = t1254 - t1213;
t1117 = -t1260 * t1199 + t1421;
t1122 = t1264 * t1199 + t1427;
t1056 = t1261 * t1117 + t1265 * t1122;
t1248 = qJD(2) * t1362;
t1328 = t1261 * qJDD(1);
t1228 = t1248 + t1328;
t1321 = qJD(2) * t1363;
t1326 = t1265 * qJDD(1);
t1291 = t1321 - t1326;
t1142 = t1218 * qJD(3) + t1260 * t1228 + t1264 * t1291;
t1356 = t1256 * t1218;
t1410 = t1142 - t1356;
t1445 = t1262 * t1056 - t1266 * t1410;
t1444 = t1266 * t1056 + t1262 * t1410;
t1386 = -t1379 + t1254;
t1408 = t1255 - t1357;
t1426 = t1260 * t1408;
t1115 = t1264 * t1386 + t1426;
t1420 = t1264 * t1408;
t1119 = -t1260 * t1386 + t1420;
t1054 = t1261 * t1115 - t1265 * t1119;
t1443 = t1262 * t1054;
t1442 = t1266 * t1054;
t1441 = pkin(2) * t1110;
t1159 = -t1254 - t1213;
t1083 = t1260 * t1159 + t1420;
t1086 = -t1264 * t1159 + t1426;
t1016 = t1261 * t1083 + t1265 * t1086;
t1409 = t1142 + t1356;
t1440 = pkin(5) * (t1266 * t1016 - t1262 * t1409);
t1439 = pkin(5) * (t1262 * t1016 + t1266 * t1409);
t1438 = pkin(7) * t1110;
t1437 = pkin(7) * t1112;
t1051 = t1265 * t1117 - t1261 * t1122;
t1013 = t1265 * t1083 - t1261 * t1086;
t1436 = pkin(1) * t1013;
t1435 = pkin(6) * t1013;
t1434 = -pkin(1) * t1409 - pkin(6) * t1016;
t1049 = t1265 * t1115 + t1261 * t1119;
t1430 = pkin(2) * t1083;
t1429 = pkin(7) * t1083;
t1428 = pkin(7) * t1086;
t1425 = t1260 * t1409;
t1424 = t1260 * t1410;
t1340 = t1264 * t1409;
t1419 = t1264 * t1410;
t1168 = t1379 - t1213;
t1414 = t1262 * t1168;
t1411 = t1266 * t1168;
t1378 = 2 * qJD(4);
t1387 = -t1213 - t1379;
t1406 = pkin(1) * t1387;
t1405 = pkin(2) * t1387;
t1259 = sin(qJ(5));
t1263 = cos(qJ(5));
t1176 = -t1263 * t1216 + t1259 * t1256;
t1178 = t1259 * t1216 + t1263 * t1256;
t1132 = t1178 * t1176;
t1279 = t1264 * t1228 - t1260 * t1291;
t1143 = -t1216 * qJD(3) + t1279;
t1137 = qJDD(5) + t1143;
t1389 = -t1132 + t1137;
t1404 = t1259 * t1389;
t1402 = t1262 * t1387;
t1401 = t1263 * t1389;
t1399 = t1266 * t1387;
t1258 = t1265 ^ 2;
t1268 = qJD(1) ^ 2;
t1237 = t1262 * g(1) - t1266 * g(2);
t1296 = qJDD(1) * pkin(1) + t1237;
t1146 = (t1258 * pkin(7) + pkin(6)) * t1268 - pkin(2) * t1291 - (qJD(2) * pkin(2) - pkin(7) * t1363) * t1363 + t1296;
t1398 = pkin(3) * t1356 - t1218 * t1378 - t1146;
t1289 = (-t1216 * t1260 - t1218 * t1264) * t1256;
t1290 = (-t1216 * t1264 + t1218 * t1260) * t1256;
t1384 = -t1261 * t1289 + t1265 * t1290;
t1397 = -t1266 * t1255 + t1262 * t1384;
t1318 = t1266 * t1357;
t1355 = t1256 * t1260;
t1301 = t1264 * t1143 - t1218 * t1355;
t1354 = t1256 * t1264;
t1303 = t1260 * t1143 + t1218 * t1354;
t1381 = -t1261 * t1303 + t1265 * t1301;
t1396 = t1262 * t1381 - t1318;
t1292 = t1260 * t1142 + t1216 * t1354;
t1302 = -t1264 * t1142 + t1216 * t1355;
t1383 = -t1261 * t1302 + t1265 * t1292;
t1395 = t1262 * t1383 + t1318;
t1320 = t1262 * t1357;
t1394 = t1266 * t1381 + t1320;
t1393 = t1266 * t1383 - t1320;
t1392 = t1262 * t1255 + t1266 * t1384;
t1203 = t1216 * t1256;
t1108 = -t1203 + t1143;
t1391 = t1108 * qJ(4);
t1194 = t1218 * pkin(4) - t1256 * pkin(8);
t1269 = -t1391 + t1398;
t1377 = pkin(3) + pkin(8);
t962 = -t1213 * pkin(4) + t1377 * t1142 - t1218 * t1194 + t1269;
t1343 = t1261 * t1268;
t1238 = t1266 * g(1) + t1262 * g(2);
t1221 = -t1268 * pkin(1) + qJDD(1) * pkin(6) - t1238;
t1346 = t1261 * t1221;
t1364 = qJD(1) * qJD(2);
t1126 = qJDD(2) * pkin(2) - t1228 * pkin(7) - t1346 + (pkin(2) * t1343 + pkin(7) * t1364 - g(3)) * t1265;
t1193 = -t1261 * g(3) + t1265 * t1221;
t1252 = t1258 * t1268;
t1267 = qJD(2) ^ 2;
t1242 = -t1252 - t1267;
t1131 = t1242 * pkin(2) + pkin(7) * t1326 + t1193;
t1067 = -t1264 * t1126 + t1260 * t1131;
t1166 = t1216 * pkin(3) - t1218 * qJ(4);
t1009 = -t1255 * pkin(3) - t1254 * qJ(4) + t1218 * t1166 + qJDD(4) + t1067;
t1109 = t1203 + t1143;
t981 = t1109 * pkin(4) - pkin(8) * t1408 + t1009;
t925 = t1259 * t962 - t1263 * t981;
t926 = t1259 * t981 + t1263 * t962;
t894 = t1259 * t926 - t1263 * t925;
t1080 = -t1176 * qJD(5) + t1259 * t1142 + t1263 * t1255;
t1211 = qJD(5) + t1218;
t1154 = t1211 * t1176;
t1390 = t1080 - t1154;
t1315 = -t1263 * t1142 + t1259 * t1255;
t1061 = (qJD(5) - t1211) * t1178 + t1315;
t1385 = t1261 * t1290 + t1265 * t1289;
t1382 = t1261 * t1292 + t1265 * t1302;
t1380 = t1261 * t1301 + t1265 * t1303;
t1173 = t1176 ^ 2;
t1174 = t1178 ^ 2;
t1209 = t1211 ^ 2;
t1068 = t1260 * t1126 + t1264 * t1131;
t992 = -t1264 * t1067 + t1260 * t1068;
t1376 = pkin(2) * t992;
t1375 = pkin(4) * t894;
t1278 = -t1254 * pkin(3) + t1255 * qJ(4) - t1216 * t1166 + t1068;
t984 = -t1142 * pkin(4) - t1213 * pkin(8) + (t1378 + t1194) * t1256 + t1278;
t1374 = pkin(4) * t984;
t1063 = t1080 + t1154;
t989 = -t1061 * t1259 - t1263 * t1063;
t1373 = pkin(4) * t989;
t1372 = pkin(8) * t894;
t1034 = -t1264 * t1109 - t1424;
t1371 = pkin(2) * t1034;
t1370 = pkin(3) * t1260;
t1369 = pkin(3) * t1264;
t1367 = t1259 * t984;
t1366 = t1261 * t992;
t982 = t1263 * t984;
t1365 = t1265 * t992;
t1360 = t1211 * t1178;
t1359 = t1211 * t1259;
t1358 = t1211 * t1263;
t1257 = t1261 ^ 2;
t1353 = t1257 * t1268;
t1072 = t1132 + t1137;
t1352 = t1259 * t1072;
t1351 = t1260 * t1146;
t1220 = t1268 * pkin(6) + t1296;
t1347 = t1261 * t1220;
t1244 = t1265 * t1343;
t1235 = qJDD(2) + t1244;
t1345 = t1261 * t1235;
t1236 = qJDD(2) - t1244;
t1344 = t1261 * t1236;
t1341 = t1263 * t1072;
t1339 = t1264 * t1146;
t1335 = t1265 * t1220;
t1229 = -0.2e1 * t1321 + t1326;
t1180 = t1265 * t1229;
t1334 = t1265 * t1236;
t1004 = t1256 * t1378 + t1278;
t1332 = -pkin(3) * t1009 + qJ(4) * t1004;
t1104 = (-qJD(3) + t1256) * t1216 + t1279;
t1331 = -pkin(3) * t1104 - qJ(4) * t1410;
t1330 = -t1174 + t1209;
t1329 = t1257 + t1258;
t1327 = t1262 * qJDD(1);
t1325 = t1266 * qJDD(1);
t1324 = -t1174 - t1209;
t1322 = t1260 * t1132;
t1319 = t1264 * t1132;
t1317 = qJ(4) * t1260 + pkin(2);
t1011 = t1263 * t1324 - t1352;
t1316 = -pkin(8) * t1011 + t982;
t993 = t1260 * t1067 + t1264 * t1068;
t1192 = t1265 * g(3) + t1346;
t1130 = t1261 * t1192 + t1265 * t1193;
t1313 = -t1262 * t1237 - t1266 * t1238;
t1312 = -pkin(3) * t894 + qJ(4) * t984 - t1372;
t1311 = t1262 * t1244;
t1310 = t1266 * t1244;
t952 = t1260 * t1004 - t1264 * t1009;
t1309 = pkin(2) * t952 + t1332;
t1031 = -t1264 * t1104 - t1424;
t1308 = pkin(2) * t1031 + t1331;
t1232 = -t1262 * t1268 + t1325;
t1307 = -pkin(5) * t1232 - t1262 * g(3);
t1060 = (qJD(5) + t1211) * t1178 + t1315;
t1306 = pkin(4) * t1060 + t982;
t1305 = pkin(4) * t1390 - t1367;
t1097 = -t1209 - t1173;
t1006 = t1259 * t1097 + t1401;
t1304 = -pkin(8) * t1006 + t1367;
t895 = t1259 * t925 + t1263 * t926;
t1129 = t1265 * t1192 - t1261 * t1193;
t1300 = t1266 * t1237 - t1262 * t1238;
t1298 = -pkin(3) * t1011 + qJ(4) * t1390 + t1316;
t1297 = -pkin(8) * t989 - t894;
t1295 = -pkin(4) * t1006 + t925;
t1294 = -t1067 + t1430;
t890 = t1260 * t984 - t1264 * t894;
t1293 = pkin(2) * t890 + t1312;
t1288 = -pkin(3) * t1006 + qJ(4) * t1060 + t1304;
t1287 = -pkin(4) * t1011 + t926;
t1082 = -t1173 - t1174;
t1286 = pkin(4) * t1082 - t895;
t963 = -t1264 * t1011 + t1260 * t1390;
t1285 = pkin(2) * t963 + t1298;
t1284 = -t1068 - t1441;
t1283 = -pkin(3) * t989 + qJ(4) * t1082 + t1297;
t960 = -t1264 * t1006 + t1260 * t1060;
t1281 = pkin(2) * t960 + t1288;
t955 = t1260 * t1082 - t1264 * t989;
t1280 = pkin(2) * t955 + t1283;
t1277 = -pkin(3) * t1408 - qJ(4) * t1159 + t1009;
t1276 = t1277 - t1430;
t1274 = (-qJD(3) - t1256) * t1216 + t1279;
t1273 = pkin(3) * t1190 + qJ(4) * t1407 + t1004;
t1271 = t1273 + t1441;
t1270 = -t1142 * pkin(3) - t1398;
t1241 = t1252 - t1267;
t1240 = -t1267 - t1353;
t1239 = t1267 - t1353;
t1234 = -t1252 + t1353;
t1233 = t1252 + t1353;
t1231 = t1266 * t1268 + t1327;
t1230 = t1329 * qJDD(1);
t1227 = 0.2e1 * t1248 + t1328;
t1225 = t1265 * t1235;
t1224 = t1329 * t1364;
t1212 = -pkin(5) * t1231 + t1266 * g(3);
t1196 = t1265 * t1228 - t1257 * t1364;
t1195 = -t1258 * t1364 + t1261 * t1291;
t1189 = -t1261 * t1240 - t1334;
t1188 = -t1261 * t1239 + t1225;
t1187 = t1265 * t1242 - t1345;
t1186 = t1265 * t1241 - t1344;
t1185 = t1265 * t1240 - t1344;
t1184 = t1265 * t1239 + t1345;
t1183 = t1261 * t1242 + t1225;
t1182 = t1261 * t1241 + t1334;
t1181 = (t1228 + t1248) * t1261;
t1172 = -t1261 * t1227 + t1180;
t1171 = t1265 * t1227 + t1261 * t1229;
t1153 = t1173 - t1209;
t1148 = -pkin(6) * t1185 - t1335;
t1147 = -pkin(6) * t1183 - t1347;
t1140 = -pkin(1) * t1185 + t1193;
t1139 = -pkin(1) * t1183 + t1192;
t1127 = t1174 - t1173;
t1124 = pkin(1) * t1229 + pkin(6) * t1187 + t1335;
t1123 = -pkin(1) * t1227 + pkin(6) * t1189 - t1347;
t1096 = pkin(1) * t1220 + pkin(6) * t1130;
t1087 = pkin(1) * t1233 + pkin(6) * t1230 + t1130;
t1079 = -t1178 * qJD(5) - t1315;
t1078 = (-t1176 * t1263 + t1178 * t1259) * t1211;
t1077 = (-t1176 * t1259 - t1178 * t1263) * t1211;
t1065 = -t1339 + t1438;
t1059 = -t1351 - t1429;
t1046 = t1263 * t1080 - t1178 * t1359;
t1045 = t1259 * t1080 + t1178 * t1358;
t1044 = t1259 * t1079 - t1176 * t1358;
t1043 = -t1263 * t1079 - t1176 * t1359;
t1038 = t1260 * t1109 - t1419;
t1037 = -t1260 * t1274 - t1340;
t1036 = -t1260 * t1108 - t1340;
t1035 = t1260 * t1104 - t1419;
t1033 = t1264 * t1274 - t1425;
t1032 = t1264 * t1108 - t1425;
t1030 = t1260 * t1077 + t1264 * t1137;
t1029 = -t1264 * t1077 + t1260 * t1137;
t1028 = t1263 * t1153 - t1352;
t1027 = -t1259 * t1330 + t1401;
t1026 = t1259 * t1153 + t1341;
t1025 = t1263 * t1330 + t1404;
t1012 = -t1259 * t1324 - t1341;
t1007 = t1263 * t1097 - t1404;
t1002 = -pkin(2) * t1108 - t1351 - t1437;
t1001 = t1260 * t1045 + t1319;
t1000 = -t1260 * t1043 - t1319;
t999 = -t1264 * t1045 + t1322;
t998 = t1264 * t1043 - t1322;
t997 = -pkin(2) * t1409 + t1339 - t1428;
t996 = t1270 + t1391;
t995 = -qJ(4) * t1387 + t1009;
t994 = -pkin(3) * t1387 + t1004;
t991 = -t1061 * t1263 + t1259 * t1063;
t990 = -t1263 * t1060 - t1259 * t1390;
t988 = -t1259 * t1060 + t1263 * t1390;
t986 = (t1142 + t1409) * pkin(3) + t1269;
t985 = (t1274 + t1108) * qJ(4) + t1270;
t979 = pkin(2) * t1146 + pkin(7) * t993;
t978 = -t1261 * t1034 + t1265 * t1038;
t977 = -t1261 * t1033 + t1265 * t1037;
t976 = -t1261 * t1032 + t1265 * t1036;
t975 = -t1261 * t1031 + t1265 * t1035;
t974 = t1265 * t1034 + t1261 * t1038;
t973 = t1265 * t1033 + t1261 * t1037;
t972 = t1265 * t1032 + t1261 * t1036;
t971 = t1265 * t1031 + t1261 * t1035;
t970 = t1260 * t1025 + t1264 * t1063;
t969 = t1260 * t1026 - t1264 * t1061;
t968 = -t1264 * t1025 + t1260 * t1063;
t967 = -t1264 * t1026 - t1260 * t1061;
t966 = -t1261 * t1029 + t1265 * t1030;
t965 = t1265 * t1029 + t1261 * t1030;
t964 = t1260 * t1011 + t1264 * t1390;
t961 = t1260 * t1006 + t1264 * t1060;
t959 = -t1284 + t1450;
t958 = t1264 * t1127 + t1260 * t988;
t957 = t1260 * t1127 - t1264 * t988;
t956 = t1264 * t1082 + t1260 * t989;
t954 = -t1294 - t1436;
t953 = t1264 * t1004 + t1260 * t1009;
t951 = -pkin(7) * t1034 - t992;
t950 = t1265 * t1001 - t1261 * t999;
t949 = t1265 * t1000 - t1261 * t998;
t948 = t1261 * t1001 + t1265 * t999;
t947 = t1261 * t1000 + t1265 * t998;
t946 = t1264 * t985 - t1274 * t1370 - t1438;
t945 = qJ(4) * t1340 - t1260 * t986 + t1429;
t944 = pkin(7) * t1038 - t1405 + t993;
t943 = -pkin(1) * t974 - t1371;
t942 = -t1271 - t1450;
t941 = -t1261 * t1002 + t1265 * t1065 + t1449;
t940 = t1265 * t993 - t1366;
t939 = t1261 * t993 + t1365;
t938 = t1437 + t1260 * t985 + (pkin(2) + t1369) * t1274;
t937 = -t1276 + t1436;
t936 = t1264 * t986 + t1317 * t1409 + t1428;
t935 = t1265 * t1059 - t1261 * t997 - t1435;
t934 = -pkin(1) * t1108 + t1265 * t1002 + t1261 * t1065 + t1448;
t933 = -qJ(4) * t991 + t1373;
t932 = t1261 * t1059 + t1265 * t997 + t1434;
t931 = -pkin(1) * t971 - t1308;
t930 = -t1261 * t968 + t1265 * t970;
t929 = -t1261 * t967 + t1265 * t969;
t928 = t1261 * t970 + t1265 * t968;
t927 = t1261 * t969 + t1265 * t967;
t922 = -pkin(7) * t1031 - t1260 * t994 + t1264 * t995;
t921 = -t1261 * t963 + t1265 * t964;
t920 = t1261 * t964 + t1265 * t963;
t919 = -t1261 * t960 + t1265 * t961;
t918 = t1261 * t961 + t1265 * t960;
t917 = pkin(7) * t1035 + t1260 * t995 + t1264 * t994 - t1405;
t916 = -t1261 * t957 + t1265 * t958;
t915 = t1261 * t958 + t1265 * t957;
t914 = -t1261 * t955 + t1265 * t956;
t913 = t1261 * t956 + t1265 * t955;
t912 = -pkin(1) * t939 - t1376;
t911 = -t1261 * t952 + t1265 * t953;
t910 = t1261 * t953 + t1265 * t952;
t909 = -t1377 * t1012 + t1305;
t908 = -t1377 * t1007 + t1306;
t907 = -pkin(7) * t952 + (qJ(4) * t1264 - t1370) * t996;
t906 = -qJ(4) * t1012 - t1287;
t905 = -qJ(4) * t1007 - t1295;
t904 = pkin(7) * t953 + (t1317 + t1369) * t996;
t903 = -pkin(6) * t939 - pkin(7) * t1365 - t1261 * t979;
t902 = -t1261 * t938 + t1265 * t946 - t1449;
t901 = pkin(1) * t1146 + pkin(6) * t940 - pkin(7) * t1366 + t1265 * t979;
t900 = -t1261 * t936 + t1265 * t945 + t1435;
t899 = -pkin(6) * t974 - t1261 * t944 + t1265 * t951;
t898 = pkin(1) * t1274 + t1261 * t946 + t1265 * t938 - t1448;
t897 = pkin(6) * t978 + t1261 * t951 + t1265 * t944 - t1406;
t896 = t1261 * t945 + t1265 * t936 - t1434;
t892 = -pkin(1) * t910 - t1309;
t891 = t1260 * t894 + t1264 * t984;
t889 = -pkin(6) * t971 - t1261 * t917 + t1265 * t922;
t888 = pkin(6) * t975 + t1261 * t922 + t1265 * t917 - t1406;
t887 = -pkin(1) * t920 - t1285;
t886 = -pkin(1) * t918 - t1281;
t885 = -t1377 * t991 + t1286;
t884 = -pkin(7) * t963 - t1260 * t909 + t1264 * t906;
t883 = -pkin(7) * t960 - t1260 * t908 + t1264 * t905;
t882 = -pkin(2) * t1012 + pkin(7) * t964 + t1260 * t906 + t1264 * t909;
t881 = -pkin(2) * t1007 + pkin(7) * t961 + t1260 * t905 + t1264 * t908;
t880 = -qJ(4) * t895 + t1375;
t879 = -pkin(6) * t910 - t1261 * t904 + t1265 * t907;
t878 = -t1377 * t895 + t1374;
t877 = -pkin(7) * t955 - t1260 * t885 + t1264 * t933;
t876 = pkin(1) * t996 + pkin(6) * t911 + t1261 * t907 + t1265 * t904;
t875 = -pkin(1) * t913 - t1280;
t874 = -t1261 * t890 + t1265 * t891;
t873 = t1261 * t891 + t1265 * t890;
t872 = -pkin(2) * t991 + pkin(7) * t956 + t1260 * t933 + t1264 * t885;
t871 = -pkin(6) * t920 - t1261 * t882 + t1265 * t884;
t870 = -pkin(6) * t918 - t1261 * t881 + t1265 * t883;
t869 = -pkin(1) * t1012 + pkin(6) * t921 + t1261 * t884 + t1265 * t882;
t868 = -pkin(1) * t1007 + pkin(6) * t919 + t1261 * t883 + t1265 * t881;
t867 = -pkin(6) * t913 - t1261 * t872 + t1265 * t877;
t866 = -pkin(7) * t890 - t1260 * t878 + t1264 * t880;
t865 = -pkin(1) * t991 + pkin(6) * t914 + t1261 * t877 + t1265 * t872;
t864 = -pkin(1) * t873 - t1293;
t863 = -pkin(2) * t895 + pkin(7) * t891 + t1260 * t880 + t1264 * t878;
t862 = -pkin(6) * t873 - t1261 * t863 + t1265 * t866;
t861 = -pkin(1) * t895 + pkin(6) * t874 + t1261 * t866 + t1265 * t863;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1232, 0, -t1231, 0, t1307, -t1212, -t1300, -pkin(5) * t1300, t1266 * t1196 - t1311, t1266 * t1172 + t1262 * t1234, t1266 * t1188 + t1261 * t1327, t1266 * t1195 + t1311, t1266 * t1186 + t1262 * t1326, t1262 * qJDD(2) + t1266 * t1224, t1266 * t1147 - t1262 * t1139 - pkin(5) * (t1262 * t1187 + t1266 * t1229), t1266 * t1148 - t1262 * t1140 - pkin(5) * (t1262 * t1189 - t1266 * t1227), t1266 * t1129 - pkin(5) * (t1262 * t1230 + t1266 * t1233), -pkin(5) * (t1262 * t1130 + t1266 * t1220) - (t1262 * pkin(1) - t1266 * pkin(6)) * t1129, t1394, t1266 * t976 + t1414, t1262 * t1109 - t1442, t1393, -t1444, t1392, -t1262 * t954 + t1266 * t935 + t1439, t1266 * t941 - t1262 * t959 - pkin(5) * (-t1108 * t1266 + t1447), t1266 * t899 - t1262 * t943 - pkin(5) * (t1262 * t978 - t1399), t1266 * t903 - t1262 * t912 - pkin(5) * (t1266 * t1146 + t1262 * t940), t1392, -t1262 * t1104 + t1442, t1444, t1394, t1266 * t977 + t1414, t1393, t1266 * t889 - t1262 * t931 - pkin(5) * (t1262 * t975 - t1399), -t1262 * t937 + t1266 * t900 - t1439, t1266 * t902 - t1262 * t942 - pkin(5) * (t1266 * t1274 - t1447), t1266 * t879 - t1262 * t892 - pkin(5) * (t1262 * t911 + t1266 * t996), t1262 * t1046 + t1266 * t950, t1262 * t990 + t1266 * t916, t1262 * t1027 + t1266 * t930, -t1262 * t1044 + t1266 * t949, t1262 * t1028 + t1266 * t929, t1262 * t1078 + t1266 * t966, t1266 * t870 - t1262 * t886 - pkin(5) * (-t1266 * t1007 + t1262 * t919), t1266 * t871 - t1262 * t887 - pkin(5) * (-t1266 * t1012 + t1262 * t921), t1266 * t867 - t1262 * t875 - pkin(5) * (t1262 * t914 - t1266 * t991), t1266 * t862 - t1262 * t864 - pkin(5) * (t1262 * t874 - t1266 * t895); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1231, 0, t1232, 0, t1212, t1307, t1313, pkin(5) * t1313, t1262 * t1196 + t1310, t1262 * t1172 - t1266 * t1234, t1262 * t1188 - t1261 * t1325, t1262 * t1195 - t1310, t1262 * t1186 - t1265 * t1325, -t1266 * qJDD(2) + t1262 * t1224, t1262 * t1147 + t1266 * t1139 + pkin(5) * (t1266 * t1187 - t1262 * t1229), t1262 * t1148 + t1266 * t1140 + pkin(5) * (t1266 * t1189 + t1262 * t1227), t1262 * t1129 + pkin(5) * (t1266 * t1230 - t1262 * t1233), pkin(5) * (t1266 * t1130 - t1262 * t1220) - (-t1266 * pkin(1) - t1262 * pkin(6)) * t1129, t1396, t1262 * t976 - t1411, -t1266 * t1109 - t1443, t1395, -t1445, t1397, t1262 * t935 + t1266 * t954 - t1440, t1262 * t941 + t1266 * t959 + pkin(5) * (t1108 * t1262 + t1446), t1262 * t899 + t1266 * t943 + pkin(5) * (t1266 * t978 + t1402), t1262 * t903 + t1266 * t912 + pkin(5) * (-t1262 * t1146 + t1266 * t940), t1397, t1266 * t1104 + t1443, t1445, t1396, t1262 * t977 - t1411, t1395, t1262 * t889 + t1266 * t931 + pkin(5) * (t1266 * t975 + t1402), t1262 * t900 + t1266 * t937 + t1440, t1262 * t902 + t1266 * t942 + pkin(5) * (-t1262 * t1274 - t1446), t1262 * t879 + t1266 * t892 + pkin(5) * (-t1262 * t996 + t1266 * t911), -t1266 * t1046 + t1262 * t950, t1262 * t916 - t1266 * t990, -t1266 * t1027 + t1262 * t930, t1266 * t1044 + t1262 * t949, -t1266 * t1028 + t1262 * t929, -t1266 * t1078 + t1262 * t966, t1262 * t870 + t1266 * t886 + pkin(5) * (t1262 * t1007 + t1266 * t919), t1262 * t871 + t1266 * t887 + pkin(5) * (t1262 * t1012 + t1266 * t921), t1262 * t867 + t1266 * t875 + pkin(5) * (t1262 * t991 + t1266 * t914), t1262 * t862 + t1266 * t864 + pkin(5) * (t1262 * t895 + t1266 * t874); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1237, t1238, 0, 0, t1181, t1171, t1184, t1180, t1182, 0, t1124, t1123, t1087, t1096, t1380, t972, t1049, t1382, t1051, t1385, t932, t934, t897, t901, t1385, -t1049, -t1051, t1380, t973, t1382, t888, t896, t898, t876, t948, t915, t928, t947, t927, t965, t868, t869, t865, t861; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1268, 0, 0, -g(3), -t1237, 0, t1196, t1172, t1188, t1195, t1186, t1224, t1147, t1148, t1129, pkin(6) * t1129, t1381, t976, -t1054, t1383, -t1056, t1384, t935, t941, t899, t903, t1384, t1054, t1056, t1381, t977, t1383, t889, t900, t902, t879, t950, t916, t930, t949, t929, t966, t870, t871, t867, t862; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1268, 0, qJDD(1), 0, g(3), 0, -t1238, 0, t1244, -t1234, -t1328, -t1244, -t1326, -qJDD(2), t1139, t1140, 0, pkin(1) * t1129, -t1357, -t1168, -t1109, t1357, t1410, -t1255, t954, t959, t943, t912, -t1255, t1104, -t1410, -t1357, -t1168, t1357, t931, t937, t942, t892, -t1046, -t990, -t1027, t1044, -t1028, -t1078, t886, t887, t875, t864; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1237, t1238, 0, 0, t1181, t1171, t1184, t1180, t1182, 0, t1124, t1123, t1087, t1096, t1380, t972, t1049, t1382, t1051, t1385, t932, t934, t897, t901, t1385, -t1049, -t1051, t1380, t973, t1382, t888, t896, t898, t876, t948, t915, t928, t947, t927, t965, t868, t869, t865, t861; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1228, t1229, t1235, -t1248, t1241, t1248, 0, -t1220, t1192, 0, t1301, t1036, t1119, t1292, -t1122, t1290, t1059, t1065, t951, -pkin(7) * t992, t1290, -t1119, t1122, t1301, t1037, t1292, t922, t945, t946, t907, t1001, t958, t970, t1000, t969, t1030, t883, t884, t877, t866; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1321, t1227, t1239, -t1291, t1236, -t1321, t1220, 0, t1193, 0, t1303, t1032, t1115, t1302, t1117, t1289, t997, t1002, t944, t979, t1289, -t1115, -t1117, t1303, t1033, t1302, t917, t936, t938, t904, t999, t957, t968, t998, t967, t1029, t881, t882, t872, t863; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1244, t1234, t1328, t1244, t1326, qJDD(2), -t1192, -t1193, 0, 0, t1357, t1168, t1109, -t1357, -t1410, t1255, t1294, t1284, t1371, t1376, t1255, -t1104, t1410, t1357, t1168, -t1357, t1308, t1276, t1271, t1309, t1046, t990, t1027, -t1044, t1028, t1078, t1281, t1285, t1280, t1293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1143, -t1409, t1408, t1203, -t1199, -t1203, 0, -t1146, t1067, 0, -t1203, -t1408, t1199, t1143, -t1409, t1203, t995, qJ(4) * t1409, t985, qJ(4) * t996, t1132, t1127, t1063, -t1132, -t1061, t1137, t905, t906, t933, t880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1356, t1108, t1386, -t1142, t1407, -t1356, t1146, 0, t1068, 0, -t1356, -t1386, -t1407, t1356, t1274, -t1142, t994, t986, pkin(3) * t1274, pkin(3) * t996, -t1045, -t988, -t1025, t1043, -t1026, -t1077, t908, t909, t885, t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1357, t1168, t1109, -t1357, -t1410, t1255, -t1067, -t1068, 0, 0, t1255, -t1104, t1410, t1357, t1168, -t1357, t1331, t1277, t1273, t1332, t1046, t990, t1027, -t1044, t1028, t1078, t1288, t1298, t1283, t1312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1255, -t1104, t1410, t1357, t1168, -t1357, 0, t1009, t1004, 0, t1046, t990, t1027, -t1044, t1028, t1078, t1304, t1316, t1297, -t1372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1203, t1408, -t1199, -t1143, t1409, -t1203, -t1009, 0, -t996, 0, -t1132, -t1127, -t1063, t1132, t1061, -t1137, t1295, t1287, -t1373, -t1375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1356, t1386, t1407, -t1356, -t1274, t1142, -t1004, t996, 0, 0, t1045, t988, t1025, -t1043, t1026, t1077, pkin(8) * t1007 - t1306, pkin(8) * t1012 - t1305, pkin(8) * t991 - t1286, pkin(8) * t895 - t1374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1080, -t1060, t1389, t1154, t1153, -t1154, 0, t984, t925, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1360, t1390, t1330, t1079, t1072, -t1360, -t984, 0, t926, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1132, t1127, t1063, -t1132, -t1061, t1137, -t925, -t926, 0, 0;];
m_new_reg = t1;
