% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:21
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR8_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR8_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR8_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPR8_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:20:31
% EndTime: 2019-12-31 21:20:43
% DurationCPUTime: 7.07s
% Computational Cost: add. (6835->447), mult. (13099->532), div. (0->0), fcn. (13788->6), ass. (0->330)
t300 = sin(qJ(3));
t478 = t300 * pkin(2);
t280 = qJ(4) + t478;
t487 = t280 / 0.2e1;
t303 = cos(qJ(2));
t482 = cos(qJ(3));
t283 = t482 * t303;
t301 = sin(qJ(2));
t432 = t300 * t301;
t252 = -t283 + t432;
t249 = t252 ^ 2;
t299 = sin(qJ(5));
t297 = t299 ^ 2;
t302 = cos(qJ(5));
t298 = t302 ^ 2;
t273 = t297 - t298;
t163 = t273 * t249;
t295 = qJD(2) + qJD(3);
t503 = t295 * t302;
t510 = t299 * t503;
t319 = 0.2e1 * t510 * t252;
t515 = t163 * qJD(1) + t319;
t382 = t482 * pkin(2);
t284 = -t382 - pkin(3);
t279 = -pkin(8) + t284;
t492 = -pkin(7) - pkin(6);
t355 = t492 * t482;
t256 = t301 * t355;
t431 = t300 * t303;
t359 = t492 * t431;
t188 = -t256 - t359;
t254 = t482 * t301 + t431;
t479 = t254 * pkin(4);
t316 = t188 + t479;
t444 = t252 * qJ(4);
t172 = pkin(3) * t254 + t444;
t242 = t254 * pkin(8);
t125 = t172 + t242;
t429 = t302 * t125;
t342 = t492 * t283;
t377 = t300 * t492;
t358 = t301 * t377;
t190 = -t342 + t358;
t480 = t252 * pkin(4);
t139 = t190 - t480;
t447 = t139 * t299;
t86 = t429 + t447;
t465 = t86 * t299;
t128 = t139 * t302;
t434 = t299 * t125;
t85 = t128 - t434;
t466 = t85 * t302;
t477 = t466 / 0.2e1 + t465 / 0.2e1;
t514 = -t477 * t279 + t316 * t487;
t494 = t254 ^ 2;
t383 = t494 - t249;
t513 = t295 * t383;
t486 = t298 / 0.2e1;
t156 = (t486 - t297 / 0.2e1) * t252;
t104 = -t156 * qJD(1) + t510;
t512 = t383 * qJD(1);
t505 = t295 * t254;
t511 = t252 * t505;
t451 = t299 * t316;
t450 = t302 * t316;
t493 = pkin(3) + pkin(8);
t441 = t493 * t252;
t379 = -t478 / 0.2e1;
t349 = t379 + t487;
t491 = -qJ(4) / 0.2e1;
t317 = (t491 + t349) * t254;
t356 = t382 / 0.2e1;
t483 = t493 / 0.2e1;
t509 = t317 + t252 * (t279 / 0.2e1 + t356 + t483);
t257 = t303 * t355;
t327 = -t342 / 0.2e1;
t186 = t257 / 0.2e1 + t327;
t391 = t186 * qJD(1);
t475 = qJD(2) * pkin(2);
t499 = t300 * t475 + t391;
t506 = t295 * t252;
t504 = t295 * t299;
t502 = qJ(4) + t280;
t387 = t280 * qJD(2);
t501 = -t387 - t391;
t305 = -t480 / 0.2e1 + t358 / 0.2e1 + t327;
t294 = t301 * pkin(2);
t160 = t172 + t294;
t109 = t160 + t242;
t430 = t302 * t109;
t187 = -t257 + t358;
t136 = t187 - t480;
t433 = t299 * t136;
t80 = t430 + t433;
t467 = t80 * t299;
t428 = t302 * t136;
t435 = t299 * t109;
t79 = t428 - t435;
t468 = t79 * t302;
t330 = t467 / 0.2e1 + t468 / 0.2e1;
t15 = t305 - t330;
t500 = -qJD(1) * t15 - t387;
t289 = qJD(3) * t478;
t498 = t289 + t499;
t357 = t303 * t377;
t189 = t256 + t357;
t310 = (t187 - t190) * t254 + (-t188 - t189) * t252;
t497 = t310 * qJD(1);
t496 = t310 * qJD(2);
t376 = t482 * t252;
t351 = -t376 / 0.2e1;
t437 = t280 * t254;
t439 = t254 * t300;
t443 = t252 * t279;
t495 = -pkin(2) * (t439 / 0.2e1 + t351) + t443 / 0.2e1 + t437 / 0.2e1;
t406 = qJD(1) * t302;
t371 = t299 * t406;
t81 = t156 * t295 + t249 * t371;
t141 = -0.2e1 * t252 * t371 + t273 * t295;
t490 = qJ(4) / 0.2e1;
t489 = t128 / 0.2e1;
t488 = -t139 / 0.2e1;
t481 = t252 * pkin(3);
t138 = t189 - t479;
t285 = -t303 * pkin(2) - pkin(1);
t440 = t254 * qJ(4);
t332 = t285 - t440;
t105 = t332 + t441;
t71 = t299 * t105 - t450;
t72 = t302 * t105 + t451;
t3 = t138 * t139 - t71 * t79 + t72 * t80;
t474 = t3 * qJD(1);
t4 = -t139 * t316 - t71 * t85 + t72 * t86;
t473 = t4 * qJD(1);
t154 = t299 * t254;
t438 = t254 * t302;
t350 = t71 * t154 + t72 * t438;
t5 = (-t299 * t79 + t302 * t80) * t252 + t350;
t472 = t5 * qJD(1);
t6 = (-t299 * t85 + t302 * t86) * t252 + t350;
t471 = t6 * qJD(1);
t470 = t71 * t302;
t469 = t72 * t299;
t19 = (-t299 * t71 - t72 * t302) * t254;
t463 = qJD(1) * t19;
t157 = t302 * t252;
t41 = t139 * t157 + t254 * t71;
t462 = qJD(1) * t41;
t442 = t252 * t299;
t42 = t139 * t442 - t254 * t72;
t461 = qJD(1) * t42;
t153 = t332 + t481;
t445 = t153 * t254;
t73 = -t160 * t252 - t445;
t460 = qJD(1) * t73;
t446 = t153 * t252;
t74 = -t160 * t254 + t446;
t459 = qJD(1) * t74;
t83 = -t172 * t252 - t445;
t458 = qJD(1) * t83;
t84 = -t172 * t254 + t446;
t457 = qJD(1) * t84;
t448 = t138 * t302;
t99 = t139 * t438;
t10 = t79 * t254 - t99 + (t71 - t448) * t252;
t456 = t10 * qJD(1);
t449 = t138 * t299;
t11 = (-t80 + t447) * t254 + (t72 + t449) * t252;
t455 = t11 * qJD(1);
t12 = t85 * t254 - t99 + (t71 + t450) * t252;
t454 = t12 * qJD(1);
t13 = (-t86 + t447) * t254 + (t72 - t451) * t252;
t453 = t13 * qJD(1);
t436 = t284 * t252;
t338 = t187 * t188 + t189 * t190;
t39 = t153 * t160 + t338;
t427 = t39 * qJD(1);
t40 = t153 * t172;
t426 = t40 * qJD(1);
t50 = t285 * t294 + t338;
t423 = t50 * qJD(1);
t223 = pkin(2) * t351;
t56 = t223 + (-t284 / 0.2e1 - pkin(3) / 0.2e1) * t252 - t317;
t422 = t56 * qJD(1);
t414 = t297 + t298;
t97 = t414 * t254 * t252;
t421 = t97 * qJD(1);
t143 = -t257 / 0.2e1 + t327 + t358;
t420 = t143 * qJD(2) + t190 * qJD(3);
t290 = qJD(3) * t382;
t292 = qJD(4) * t299;
t417 = t299 * t290 + t292;
t293 = qJD(4) * t302;
t416 = t302 * t290 + t293;
t413 = qJ(4) * qJD(3);
t146 = t252 * t294 + t254 * t285;
t412 = qJD(1) * t146;
t147 = -t252 * t285 + t254 * t294;
t411 = qJD(1) * t147;
t410 = qJD(1) * t252;
t409 = qJD(1) * t254;
t408 = qJD(1) * t285;
t407 = qJD(1) * t299;
t405 = qJD(1) * t303;
t404 = qJD(3) * t186;
t403 = qJD(3) * t285;
t402 = qJD(5) * t299;
t401 = qJD(5) * t302;
t400 = qJD(5) * t493;
t113 = t383 * t299;
t399 = t113 * qJD(1);
t114 = t383 * t302;
t398 = t114 * qJD(1);
t395 = t154 * qJD(1);
t393 = t156 * qJD(5);
t176 = t186 * qJD(2);
t243 = t432 / 0.2e1 - t283 / 0.2e1;
t390 = t243 * qJD(1);
t389 = t494 * qJD(1);
t240 = t252 * qJD(4);
t274 = -t301 ^ 2 + t303 ^ 2;
t388 = t274 * qJD(1);
t386 = t301 * qJD(2);
t385 = t303 * qJD(2);
t384 = t290 + qJD(4);
t381 = pkin(1) * t301 * qJD(1);
t380 = pkin(1) * t405;
t378 = t478 / 0.2e1;
t375 = t482 * t280;
t374 = t153 * t409;
t373 = t252 * t408;
t372 = t254 * t408;
t370 = t254 * t402;
t369 = t254 * t401;
t368 = t252 * t409;
t367 = t494 * t407;
t366 = t301 * t385;
t278 = t299 * t401;
t232 = t254 * t406;
t365 = -t440 / 0.2e1;
t364 = -t316 / 0.2e1 - t138 / 0.2e1;
t363 = t297 / 0.2e1 + t486;
t362 = t414 * t300;
t124 = qJD(5) * t243 + t368;
t360 = qJD(5) + t409;
t288 = qJD(2) * t382;
t354 = t249 * t278;
t241 = pkin(2) * t362;
t346 = t252 * t504;
t344 = t467 + t468;
t343 = t465 + t466;
t341 = t440 - t441;
t306 = t138 * t490 - t330 * t493;
t1 = (t482 * t488 + (-t469 / 0.2e1 + t470 / 0.2e1) * t300) * pkin(2) + t306 + t514;
t144 = (t279 * t362 + t375) * pkin(2);
t340 = -t1 * qJD(1) + t144 * qJD(2);
t7 = -t330 + t477;
t339 = qJD(1) * t7 + qJD(2) * t241;
t337 = t437 + t443;
t207 = -pkin(2) * t375 - t284 * t478;
t307 = -t349 * t188 + (t356 + t284 / 0.2e1) * t190;
t331 = t187 * pkin(3) / 0.2e1 + t189 * t491;
t37 = t307 + t331;
t336 = t37 * qJD(1) - t207 * qJD(2);
t142 = -t256 - t357 / 0.2e1 - t359 / 0.2e1;
t335 = -qJD(2) * t142 - qJD(3) * t188;
t334 = -qJD(2) * t189 + qJD(3) * t142;
t333 = -qJD(2) * t187 - qJD(3) * t143;
t328 = t491 - t349;
t325 = -t279 * t254 / 0.2e1 + t252 * t487;
t324 = t254 * t483 + t444 / 0.2e1;
t315 = t109 / 0.2e1 + t325;
t35 = (t488 + t136 / 0.2e1) * t299 + t315 * t302;
t323 = -qJD(1) * t35 + t299 * t387;
t33 = t489 - t428 / 0.2e1 + t315 * t299;
t322 = -qJD(1) * t33 - t302 * t387;
t321 = t360 * t442;
t314 = t125 / 0.2e1 + t324;
t17 = t305 - t477;
t205 = -qJ(4) + (-0.1e1 / 0.2e1 + t363) * t478;
t313 = qJD(1) * t17 - qJD(2) * t205 + t413;
t23 = t509 * t299 + t364 * t302;
t312 = -t23 * qJD(1) - t288 * t302;
t25 = t364 * t299 - t509 * t302;
t311 = -t25 * qJD(1) - t288 * t299;
t195 = t328 * t299;
t88 = t314 * t302;
t309 = -t88 * qJD(1) - t195 * qJD(2) + t299 * t413;
t196 = t328 * t302;
t87 = t314 * t299;
t308 = -t87 * qJD(1) + t196 * qJD(2) - t302 * t413;
t296 = qJ(4) * qJD(4);
t291 = qJ(4) * t382;
t277 = t301 * t405;
t272 = t295 * qJ(4);
t269 = t280 * qJD(4);
t262 = t273 * qJD(5);
t234 = t241 * qJD(3);
t233 = t299 * t240;
t231 = t254 * t407;
t206 = t363 * t478 + qJ(4) + t378;
t204 = -t232 - t401;
t203 = -t231 - t402;
t198 = (t378 + t502 / 0.2e1) * t302;
t197 = (t379 - t502 / 0.2e1) * t299;
t162 = t295 * t243;
t150 = t157 * qJD(4);
t98 = -0.2e1 * t302 * t321;
t94 = -t369 - t398;
t93 = -t370 - t399;
t92 = -t298 * t368 - t393;
t91 = -t297 * t368 + t393;
t90 = t346 + t398;
t89 = -t252 * t503 + t399;
t57 = t223 - t436 / 0.2e1 + t365 + t481 / 0.2e1 - t349 * t254;
t55 = -t393 + (t298 * t410 - t510) * t254;
t54 = t393 + (t297 * t410 + t510) * t254;
t49 = 0.2e1 * (-qJD(5) + t409) * t299 * t157 - t273 * t505;
t48 = -t447 - t429 / 0.2e1 + t324 * t302;
t47 = t128 - t434 / 0.2e1 + t324 * t299;
t38 = t307 - t331;
t36 = -t447 / 0.2e1 - t430 / 0.2e1 - t433 / 0.2e1 + t325 * t302;
t34 = t489 - t435 / 0.2e1 + t428 / 0.2e1 + t325 * t299;
t24 = -t451 / 0.2e1 + t157 * t483 + t449 / 0.2e1 + (t365 - t495) * t302;
t22 = -t450 / 0.2e1 + t154 * t490 + t448 / 0.2e1 + (-t441 / 0.2e1 + t495) * t299;
t16 = t305 + t477;
t14 = t305 + t330;
t8 = -t330 - t477;
t2 = t139 * t356 + t378 * t469 + t379 * t470 + t306 - t514;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366, t274 * qJD(2), 0, -t366, 0, 0, -pkin(1) * t386, -pkin(1) * t385, 0, 0, -t511, -t513, 0, t511, 0, 0, qJD(2) * t146 + t254 * t403, qJD(2) * t147 - t252 * t403, t496, t50 * qJD(2), 0, 0, 0, -t511, -t513, t511, t496, qJD(2) * t73 + qJD(3) * t83 + t240 * t254, qJD(2) * t74 + qJD(3) * t84 + qJD(4) * t494, qJD(2) * t39 + qJD(3) * t40 - qJD(4) * t445, t297 * t511 + t354, -t163 * qJD(5) + t254 * t319, t113 * t295 + t252 * t369, t298 * t511 - t354, t114 * t295 - t252 * t370, -t511, qJD(2) * t10 + qJD(3) * t12 + qJD(5) * t42 + t494 * t292, qJD(2) * t11 + qJD(3) * t13 + qJD(5) * t41 + t293 * t494, qJD(2) * t5 + qJD(3) * t6 - qJD(4) * t97, qJD(2) * t3 + qJD(3) * t4 + qJD(4) * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t277, t388, t385, -t277, -t386, 0, -pkin(6) * t385 - t381, pkin(6) * t386 - t380, 0, 0, -t368, -t512, -t506, t368, -t505, 0, t333 + t412, t334 + t411, t497 + (t376 - t439) * t475, t423 + (-t482 * t187 + t189 * t300) * t475, 0, t506, t505, -t368, -t512, t368, t497 + (-t436 - t437) * qJD(2) + t57 * qJD(3) - t240, -t333 + t460, -t334 + t459, t427 + (t187 * t284 + t189 * t280) * qJD(2) + t38 * qJD(3) + t143 * qJD(4), t54, t49, t89, t55, t90, -t124, t456 + (-t302 * t337 + t449) * qJD(2) + t24 * qJD(3) - t150 + t34 * qJD(5), t455 + (t299 * t337 + t448) * qJD(2) + t22 * qJD(3) + t233 + t36 * qJD(5), -qJD(2) * t344 + t8 * qJD(3) + t472, t474 + (t138 * t280 + t279 * t344) * qJD(2) + t2 * qJD(3) + t14 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t368, -t512, -t506, t368, -t505, 0, t372 - t420, -t335 - t373, 0, 0, 0, t506, t505, -t368, -t512, t368, t57 * qJD(2) + (-t440 + t481) * qJD(3) - t240, t420 + t458, t335 + t457, t426 + t38 * qJD(2) + (-pkin(3) * t190 - qJ(4) * t188) * qJD(3) + t190 * qJD(4), t54, t49, t89, t55, t90, -t124, t454 + t24 * qJD(2) + (-t302 * t341 - t451) * qJD(3) - t150 + t47 * qJD(5), t453 + t22 * qJD(2) + (t299 * t341 - t450) * qJD(3) + t233 + t48 * qJD(5), t8 * qJD(2) - qJD(3) * t343 + t471, t473 + t2 * qJD(2) + (-qJ(4) * t316 - t343 * t493) * qJD(3) + t16 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t506, t368, t389, -t374 + t420, 0, 0, 0, 0, 0, 0, -t157 * t295 + t367, t302 * t389 + t346, -t421, qJD(2) * t14 + qJD(3) * t16 + t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, -t515, t360 * t157, -t81, -t321, -t162, qJD(2) * t34 + qJD(3) * t47 - qJD(5) * t72 + t461, qJD(2) * t36 + qJD(3) * t48 + qJD(5) * t71 + t462, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t277, -t388, 0, t277, 0, 0, t381, t380, 0, 0, t368, t512, 0, -t368, 0, 0, -t404 - t412, -t411, -t497, -t423, 0, 0, 0, t368, t512, -t368, qJD(3) * t56 - t497, t404 - t460, -t459, qJD(3) * t37 + qJD(4) * t186 - t427, t91, t98, t93, t92, t94, t124, qJD(3) * t25 + qJD(5) * t33 - t456, qJD(3) * t23 + qJD(5) * t35 - t455, -qJD(3) * t7 - t472, -qJD(3) * t1 + qJD(4) * t15 - t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, -t290, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, t384, -qJD(3) * t207 + t269, -t278, t262, 0, t278, 0, 0, t280 * t401 + t417, -t280 * t402 + t416, -t234, qJD(3) * t144 + t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t498, -t290 - t288, 0, 0, 0, 0, 0, 0, 0, 0, t422, t498, t384 + t288, (-pkin(3) * t478 + t291) * qJD(3) + t269 + t336, -t278, t262, 0, t278, 0, 0, t198 * qJD(5) - t311 + t417, t197 * qJD(5) - t312 + t416, -t234 - t339, (-t241 * t493 + t291) * qJD(3) + t206 * qJD(4) + t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295, qJD(3) * t280 - t501, 0, 0, 0, 0, 0, 0, t504, t503, 0, qJD(3) * t206 - t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, t141, t203, t104, t204, t390, qJD(3) * t198 - t279 * t402 - t322, qJD(3) * t197 - t279 * t401 - t323, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t368, t512, 0, -t368, 0, 0, -t372 + t176, t373, 0, 0, 0, 0, 0, t368, t512, -t368, -t56 * qJD(2), -t176 - t458, -t457, -qJD(2) * t37 - t426, t91, t98, t93, t92, t94, t124, -qJD(2) * t25 + qJD(5) * t87 - t454, -qJD(2) * t23 + qJD(5) * t88 - t453, qJD(2) * t7 - t471, qJD(2) * t1 + qJD(4) * t17 - t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t499, t288, 0, 0, 0, 0, 0, 0, 0, 0, -t422, -t499, qJD(4) - t288, t296 - t336, -t278, t262, 0, t278, 0, 0, -t196 * qJD(5) + t292 + t311, t195 * qJD(5) + t293 + t312, t339, -qJD(4) * t205 - t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t296, -t278, t262, 0, t278, 0, 0, qJ(4) * t401 + t292, -qJ(4) * t402 + t293, 0, t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295, t272, 0, 0, 0, 0, 0, 0, t504, t503, 0, t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, t141, t203, t104, t204, t390, t299 * t400 - t308, t302 * t400 - t309, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t368, -t389, -t176 + t374, 0, 0, 0, 0, 0, 0, -t154 * qJD(5) - t367, (-qJD(5) * t254 - t389) * t302, t421, -qJD(2) * t15 - qJD(3) * t17 - t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, -t413 + t501, 0, 0, 0, 0, 0, 0, -t504, -t503, 0, qJD(3) * t205 + t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, -t272, 0, 0, 0, 0, 0, 0, -t504, -t503, 0, -t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t395 - t402, -t360 * t302, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, t515, (-t252 * t406 + t504) * t254, t81, (t252 * t407 + t503) * t254, -t162, -qJD(2) * t33 - qJD(3) * t87 + qJD(4) * t154 - t461, -qJD(2) * t35 - qJD(3) * t88 + t254 * t293 - t462, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t141, t231, -t104, t232, -t390, qJD(3) * t196 + t322, -qJD(3) * t195 + t323, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t141, t231, -t104, t232, -t390, t308, t309, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t395, t232, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t9;
