% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:04
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP8_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP8_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP8_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRPRP8_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:04:31
% EndTime: 2019-12-31 20:04:37
% DurationCPUTime: 3.42s
% Computational Cost: add. (2826->223), mult. (5113->263), div. (0->0), fcn. (4976->4), ass. (0->181)
t202 = sin(qJ(4));
t203 = sin(qJ(2));
t204 = cos(qJ(4));
t205 = cos(qJ(2));
t167 = t203 * t202 + t205 * t204;
t308 = pkin(6) - pkin(7);
t183 = t308 * t205;
t318 = t308 * t203;
t329 = t204 * t183 + t202 * t318;
t332 = -t167 * qJ(5) + t329;
t312 = t332 / 0.2e1;
t235 = qJD(2) - qJD(4);
t269 = t332 * qJD(4);
t335 = qJD(2) * t332 - t269;
t169 = -t205 * t202 + t203 * t204;
t153 = t169 * qJ(5);
t279 = t202 * t183;
t324 = t204 * t318;
t327 = -t324 + t279;
t67 = t327 + t153;
t333 = t235 * t329;
t307 = t324 / 0.2e1;
t160 = t167 ^ 2;
t314 = t169 ^ 2;
t71 = t314 - t160;
t330 = t71 * qJD(1);
t113 = t307 - t324 / 0.2e1;
t309 = -pkin(2) - pkin(3);
t175 = t202 * qJ(3) - t204 * t309;
t328 = -t113 * qJD(1) + t175 * qJD(2);
t319 = t235 * t169;
t326 = t167 * t319;
t237 = t204 * qJD(3);
t323 = -t237 + t328;
t161 = t175 * qJD(4);
t322 = t161 - t328;
t236 = t205 * qJD(3);
t262 = -t205 * pkin(2) - t203 * qJ(3);
t321 = t262 * qJD(2) + t236;
t320 = t235 * t167;
t316 = t113 * qJD(2);
t315 = t113 * qJD(4);
t313 = -pkin(4) / 0.2e1;
t310 = -t332 / 0.2e1;
t174 = -pkin(4) - t175;
t306 = -t174 / 0.2e1;
t305 = t174 / 0.2e1;
t303 = -t202 / 0.2e1;
t302 = t202 / 0.2e1;
t301 = t203 / 0.2e1;
t300 = -t204 / 0.2e1;
t299 = t167 * pkin(4);
t298 = t169 * pkin(4);
t177 = -pkin(1) + t262;
t152 = t205 * pkin(3) - t177;
t104 = t152 + t299;
t197 = t205 * qJ(3);
t158 = t309 * t203 + t197;
t105 = t158 - t298;
t3 = t104 * t105;
t295 = t3 * qJD(1);
t291 = t104 * t167;
t290 = t104 * t169;
t288 = t329 * t204;
t15 = t152 * t158;
t287 = t15 * qJD(1);
t285 = t174 * t202;
t284 = t175 * t202;
t176 = t204 * qJ(3) + t202 * t309;
t283 = t176 * t167;
t282 = t176 * t204;
t219 = t175 / 0.2e1 + t305;
t19 = (pkin(4) / 0.2e1 + t219) * t167;
t281 = t19 * qJD(1);
t20 = -t167 * t332 + t169 * t67;
t280 = t20 * qJD(1);
t26 = t105 * t167 - t290;
t278 = t26 * qJD(1);
t27 = t105 * t169 + t291;
t277 = t27 * qJD(1);
t206 = (-pkin(2) / 0.2e1 - pkin(3) / 0.2e1) * t203 + t197 / 0.2e1;
t28 = t283 / 0.2e1 + (t313 + t305) * t169 + t206;
t276 = t28 * qJD(1);
t33 = -t167 * t298 - t290;
t275 = t33 * qJD(1);
t34 = -t314 * pkin(4) + t291;
t274 = t34 * qJD(1);
t97 = t288 / 0.2e1;
t38 = t97 - t288 / 0.2e1;
t273 = t38 * qJD(3);
t41 = -t152 * t169 + t158 * t167;
t271 = t41 * qJD(1);
t42 = t152 * t167 + t158 * t169;
t270 = t42 * qJD(1);
t207 = t167 * t302 + t204 * t169 / 0.2e1;
t79 = t301 + t207;
t266 = t79 * qJD(1);
t165 = t176 * qJD(4);
t245 = t176 * qJD(2);
t263 = t245 - t165;
t261 = qJD(1) * t203;
t260 = qJD(1) * t205;
t259 = qJD(2) * qJ(3);
t258 = qJD(3) * t203;
t257 = qJD(4) * t202;
t106 = t160 + t314;
t256 = t106 * qJD(1);
t180 = t203 * pkin(2) - t197;
t110 = t177 * t205 + t180 * t203;
t255 = t110 * qJD(1);
t111 = -t177 * t203 + t180 * t205;
t254 = t111 * qJD(1);
t252 = t167 * qJD(1);
t251 = t167 * qJD(4);
t250 = t167 * qJD(5);
t249 = t169 * qJD(1);
t248 = t169 * qJD(4);
t247 = t169 * qJD(5);
t201 = t203 ^ 2;
t184 = t205 ^ 2 - t201;
t244 = t184 * qJD(1);
t243 = t184 * qJD(2);
t242 = t201 * qJD(1);
t241 = t202 * qJD(2);
t240 = t202 * qJD(3);
t239 = t203 * qJD(2);
t238 = t204 * qJD(2);
t193 = t205 * qJD(2);
t234 = pkin(4) * t312;
t233 = pkin(1) * t261;
t232 = pkin(1) * t260;
t231 = pkin(4) * t249;
t230 = pkin(6) * t239;
t229 = pkin(6) * t193;
t226 = t104 * t261;
t225 = t152 * t252;
t224 = t152 * t249;
t223 = t152 * t261;
t222 = t167 * t249;
t221 = t177 * t180 * qJD(1);
t220 = t177 * t261;
t217 = -t245 - t240;
t6 = pkin(4) * t290;
t214 = t6 * qJD(1);
t1 = t219 * t332 + t234;
t51 = (-t174 - t175) * t176;
t213 = t1 * qJD(1) - t51 * qJD(2);
t35 = (t313 + t219) * t202;
t212 = t35 * qJD(2);
t9 = (t312 + t310) * t204;
t93 = t282 - t285;
t211 = t9 * qJD(1) - t93 * qJD(2);
t73 = -t279 + 0.2e1 * t307;
t209 = t38 * qJD(1);
t103 = t282 + t284;
t208 = t103 * qJD(2);
t186 = t203 * t193;
t185 = t203 * t260;
t179 = -qJD(4) * t204 + t238;
t178 = t241 - t257;
t137 = t203 * t249;
t136 = t169 * t258;
t135 = t203 * t252;
t134 = t167 * t258;
t127 = t237 - t161;
t126 = t240 + t165;
t125 = t176 * t169;
t80 = t301 - t207;
t50 = -t204 * t167 + t202 * t169;
t49 = t50 * qJD(3);
t37 = t38 * qJD(4);
t36 = -t284 / 0.2e1 - t285 / 0.2e1 + pkin(4) * t303;
t31 = -t153 + t73;
t29 = -t283 / 0.2e1 + t169 * t306 - t298 / 0.2e1 + t206;
t25 = t235 * t71;
t24 = t50 * qJD(2);
t18 = -t299 / 0.2e1 + t219 * t167;
t17 = -t300 * t329 + 0.2e1 * t327 * t302 + t97;
t10 = t204 * t312 - t300 * t332 + (t302 - t303) * t67;
t2 = t175 * t310 + t332 * t306 + t234;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t186, t243, 0, -t186, 0, 0, -pkin(1) * t239, -pkin(1) * t193, 0, 0, t186, 0, -t243, 0, 0, -t186, -t111 * qJD(2) + t203 * t236, 0, -t110 * qJD(2) + t201 * qJD(3), (qJD(2) * t180 - t258) * t177, t326, t25, 0, -t326, 0, 0, t41 * qJD(2) + t152 * t248 + t134, t42 * qJD(2) - t152 * t251 + t136, 0, t15 * qJD(2) + t152 * t258, t326, t25, 0, -t326, 0, 0, t26 * qJD(2) - t33 * qJD(4) + t134, t27 * qJD(2) - t34 * qJD(4) + t136, t106 * qJD(5), t3 * qJD(2) + t6 * qJD(4) + t20 * qJD(5) + t104 * t258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, t244, t193, -t185, -t239, 0, -t229 - t233, t230 - t232, 0, 0, t185, t193, -t244, 0, t239, -t185, -t229 - t254, t321, -t230 - t255, t321 * pkin(6) + t221, t222, t330, -t320, -t222, -t319, 0, t271 - t333, qJD(2) * t327 + t73 * qJD(4) + t270, (t175 * t167 + t125) * qJD(2) + t49, t287 + (-t175 * t329 + t176 * t327) * qJD(2) + t17 * qJD(3), t222, t330, -t320, -t222, -t319, 0, t278 - t335, qJD(2) * t67 + t31 * qJD(4) + t277, (-t174 * t167 + t125) * qJD(2) + t49 + t18 * qJD(4), t295 + (t174 * t332 + t67 * t176) * qJD(2) + t10 * qJD(3) + t2 * qJD(4) + t29 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, t193, t242, -t220 + t229, 0, 0, 0, 0, 0, 0, t135, t137, t24, t17 * qJD(2) + t223 + t37, 0, 0, 0, 0, 0, 0, t135, t137, t24, t10 * qJD(2) + t80 * qJD(5) + t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t222, -t330, t320, t222, t319, 0, t224 + t333, t73 * qJD(2) + qJD(4) * t327 - t225, 0, t273, -t222, -t330, t320, t222, t319, 0, -t275 + t335, t31 * qJD(2) + t67 * qJD(4) - t274, pkin(4) * t251 + t18 * qJD(2), -pkin(4) * t269 + t2 * qJD(2) + t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, t29 * qJD(2) + t80 * qJD(3) + t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, -t244, 0, t185, 0, 0, t233, t232, 0, 0, -t185, 0, t244, 0, 0, t185, t254, 0, t255, -t221, -t222, -t330, 0, t222, 0, 0, -t271, -t270 + t315, 0, -t287, -t222, -t330, 0, t222, 0, 0, t247 - t278, -t250 - t277 + t315, t19 * qJD(4), -t9 * qJD(3) - t1 * qJD(4) - t28 * qJD(5) - t295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), 0, 0, 0, 0, 0, 0, t126, t127, 0, t103 * qJD(3), 0, 0, 0, 0, 0, 0, t126, t127, 0, t93 * qJD(3) + t51 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t259, 0, 0, 0, 0, 0, 0, t241, t238, 0, t208, 0, 0, 0, 0, 0, 0, t241, t238, 0, t36 * qJD(4) - t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, t322, 0, 0, 0, 0, 0, 0, 0, 0, t263, t322, t281, -pkin(4) * t165 + t36 * qJD(3) - t213; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249, -t252, 0, -t276; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, 0, -t242, t220, 0, 0, 0, 0, 0, 0, -t135, -t137, 0, -t223 + t37, 0, 0, 0, 0, 0, 0, -t135, -t137, 0, t9 * qJD(2) - t79 * qJD(5) - t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t259, 0, 0, 0, 0, 0, 0, -t178, -t179, 0, -t208, 0, 0, 0, 0, 0, 0, -t178, -t179, 0, -t35 * qJD(4) + t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, t179, 0, t209, 0, 0, 0, 0, 0, 0, t178, t179, 0, -pkin(4) * t257 - t212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222, t330, 0, -t222, 0, 0, -t224, t225 - t316, 0, -t273, t222, t330, 0, -t222, 0, 0, -t247 + t275, t250 + t274 - t316, -t19 * qJD(2), -pkin(4) * t247 + t1 * qJD(2) - t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, t323, 0, 0, 0, 0, 0, 0, 0, 0, t217, t323, -t281, t35 * qJD(3) + t213; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t241, -t238, 0, -t209, 0, 0, 0, 0, 0, 0, -t241, -t238, 0, t212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t249, t252, 0, -t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319, t320, -t256, pkin(4) * t248 + t28 * qJD(2) + t79 * qJD(3) - t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t249, t252, 0, t276; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249, -t252, 0, t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t4;
