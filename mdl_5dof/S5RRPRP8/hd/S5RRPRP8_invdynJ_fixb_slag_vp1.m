% Calculate vector of inverse dynamics joint torques for
% S5RRPRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:04
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRPRP8_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP8_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP8_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRP8_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRP8_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRPRP8_invdynJ_fixb_slag_vp1: pkin has to be [7x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRPRP8_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRPRP8_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRPRP8_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:03:21
% EndTime: 2019-12-31 20:04:25
% DurationCPUTime: 56.78s
% Computational Cost: add. (14306->968), mult. (37094->1153), div. (0->0), fcn. (34995->6), ass. (0->463)
t1053 = Icges(5,4) + Icges(6,4);
t549 = cos(qJ(2));
t547 = sin(qJ(2));
t829 = Icges(3,4) * t547;
t453 = Icges(3,2) * t549 + t829;
t529 = Icges(4,5) * t547;
t1089 = Icges(4,3) * t549 + t453 - t529;
t822 = Icges(4,5) * t549;
t455 = Icges(4,1) * t547 - t822;
t532 = Icges(3,4) * t549;
t1086 = Icges(3,1) * t547 + t455 + t532;
t1020 = Icges(5,1) + Icges(6,1);
t1035 = Icges(5,5) + Icges(6,5);
t1052 = Icges(5,2) + Icges(6,2);
t1034 = Icges(5,6) + Icges(6,6);
t1088 = Icges(5,3) + Icges(6,3);
t450 = Icges(3,5) * t549 - Icges(3,6) * t547;
t548 = sin(qJ(1));
t550 = cos(qJ(1));
t322 = Icges(3,3) * t548 + t450 * t550;
t452 = Icges(4,4) * t549 + Icges(4,6) * t547;
t324 = Icges(4,2) * t548 + t452 * t550;
t1087 = t322 + t324;
t635 = Icges(4,1) * t549 + t529;
t327 = -Icges(4,4) * t550 + t548 * t635;
t793 = t547 * t548;
t499 = Icges(3,4) * t793;
t791 = t548 * t549;
t823 = Icges(3,5) * t550;
t329 = Icges(3,1) * t791 - t499 - t823;
t1080 = -t327 - t329;
t328 = Icges(4,4) * t548 + t550 * t635;
t458 = Icges(3,1) * t549 - t829;
t330 = Icges(3,5) * t548 + t458 * t550;
t1079 = t328 + t330;
t715 = qJD(1) * qJD(2);
t437 = qJDD(2) * t548 + t550 * t715;
t714 = qJD(1) * qJD(4);
t300 = -qJDD(4) * t548 - t550 * t714 + t437;
t510 = t548 * t715;
t301 = -t548 * t714 + t510 + (-qJDD(2) + qJDD(4)) * t550;
t866 = cos(qJ(4));
t696 = t547 * t866;
t659 = t548 * t696;
t546 = sin(qJ(4));
t790 = t549 * t546;
t708 = t548 * t790;
t367 = -t659 + t708;
t695 = t549 * t866;
t794 = t547 * t546;
t603 = t695 + t794;
t368 = t603 * t548;
t658 = t550 * t696;
t789 = t549 * t550;
t707 = t546 * t789;
t369 = -t658 + t707;
t370 = t603 * t550;
t445 = (qJD(2) - qJD(4)) * t548;
t722 = qJD(2) * t550;
t446 = -qJD(4) * t550 + t722;
t726 = qJD(1) * t550;
t727 = qJD(1) * t548;
t859 = -qJD(1) / 0.2e1;
t873 = t446 / 0.2e1;
t1083 = t1053 * t369;
t1014 = t1020 * t370 - t1035 * t548 - t1083;
t1068 = t1053 * t367;
t1078 = t1053 * t603;
t429 = t696 - t790;
t950 = t1020 * t429 - t1078;
t952 = -t1020 * t368 - t1035 * t550 + t1068;
t916 = (-t1052 * t368 - t1068 - t952) * t446 - (-t1052 * t370 + t1014 - t1083) * t445 + (t1052 * t429 + t1078 - t950) * qJD(1);
t1058 = t1053 * t370;
t1015 = -t1034 * t548 - t1052 * t369 + t1058;
t1050 = -t1034 * t369 + t1035 * t370 - t1088 * t548;
t938 = t1014 * t370 - t1015 * t369 - t1050 * t548;
t1069 = t1053 * t368;
t1077 = t1053 * t429;
t951 = -t1052 * t603 + t1077;
t953 = t1034 * t550 - t1052 * t367 + t1069;
t947 = (-t1020 * t367 - t1069 - t953) * t446 + (t1020 * t369 + t1015 + t1058) * t445 + (t1020 * t603 + t1077 + t951) * qJD(1);
t960 = t1014 * t429 - t1015 * t603;
t961 = -t952 * t429 - t953 * t603;
t1059 = -t1034 * t603 + t1035 * t429;
t962 = -t1059 * t548 - t951 * t369 + t950 * t370;
t964 = t1059 * t550 - t951 * t367 + t950 * t368;
t954 = -t1034 * t367 + t1035 * t368 + t1088 * t550;
t969 = -t953 * t369 - t952 * t370 - t954 * t548;
t970 = t1014 * t368 - t1015 * t367 + t1050 * t550;
t971 = -t953 * t367 - t952 * t368 + t954 * t550;
t581 = t603 * qJD(4);
t251 = qJD(2) * t603 - t581;
t147 = t251 * t550 - t429 * t727;
t910 = t429 * qJD(4);
t557 = -qJD(2) * t429 + t910;
t148 = t550 * t557 - t603 * t727;
t1025 = t1020 * t148 - t1035 * t726 + t1053 * t147;
t1027 = t1034 * t726 - t1052 * t147 - t1053 * t148;
t974 = t1014 * t251 - t1015 * t557 + t1025 * t429 + t1027 * t603;
t149 = t251 * t548 + t429 * t726;
t150 = qJD(1) * t370 + t548 * t557;
t1024 = -t1020 * t150 + t1035 * t727 - t1053 * t149;
t1026 = -t1034 * t727 + t1052 * t149 + t1053 * t150;
t975 = t1024 * t429 + t1026 * t603 + t952 * t251 + t953 * t557;
t1017 = t1020 * t251 - t1053 * t557;
t1018 = t1052 * t557 - t1053 * t251;
t1019 = -t1034 * t557 + t1035 * t251;
t976 = t1017 * t368 + t1018 * t367 + t1019 * t550 - t1059 * t727 + t951 * t149 + t950 * t150;
t977 = t1017 * t370 + t1018 * t369 - t1019 * t548 - t1059 * t726 + t951 * t147 + t950 * t148;
t978 = t962 * qJD(1) + t938 * t445 - t969 * t446;
t1029 = t1034 * t147 + t1035 * t148 - t1088 * t726;
t980 = t1014 * t150 + t1015 * t149 + t1025 * t368 + t1027 * t367 + t1029 * t550 - t1050 * t727;
t1028 = t1034 * t149 + t1035 * t150 - t1088 * t727;
t981 = t1024 * t368 + t1026 * t367 - t1028 * t550 - t953 * t149 + t952 * t150 + t954 * t727;
t982 = t1014 * t148 + t1015 * t147 + t1025 * t370 + t1027 * t369 - t1029 * t548 - t1050 * t726;
t983 = t1024 * t370 + t1026 * t369 + t1028 * t548 - t953 * t147 + t952 * t148 + t954 * t726;
t987 = -t970 / 0.2e1 - t969 / 0.2e1;
t992 = (t1034 * t368 + t1035 * t367) * t446 + (-t1034 * t370 - t1035 * t369) * t445 + (-t1034 * t429 - t1035 * t603) * qJD(1);
t1085 = -(t977 * qJD(1) + t962 * qJDD(1) + t982 * t445 + t983 * t446) * t548 / 0.2e1 + (t976 * qJD(1) + t964 * qJDD(1) + t980 * t445 + t981 * t446) * t550 / 0.2e1 + (t975 * t550 + t974 * t548 + (t961 * t548 + t960 * t550) * qJD(1)) * t859 - (t960 * t548 - t961 * t550) * qJDD(1) / 0.2e1 - (t964 * qJD(1) + t970 * t445 - t971 * t446) * t727 / 0.2e1 - t978 * t726 / 0.2e1 + (t987 * t548 + t971 * t550) * t301 + (-t938 * t548 - t987 * t550) * t300 - (t369 * t916 - t947 * t370 + (t938 * qJD(1) + t983) * t550 + (t969 * qJD(1) + t982 - t992) * t548) * t445 / 0.2e1 + (t367 * t916 - t947 * t368 + (t971 * qJD(1) + t980) * t548 + (t970 * qJD(1) + t981 + t992) * t550) * t873;
t448 = Icges(4,3) * t547 + t822;
t319 = -Icges(4,6) * t550 + t448 * t548;
t813 = Icges(3,6) * t550;
t325 = Icges(3,4) * t791 - Icges(3,2) * t793 - t813;
t1082 = t319 - t325;
t498 = Icges(4,5) * t789;
t792 = t547 * t550;
t812 = Icges(4,6) * t548;
t320 = Icges(4,3) * t792 + t498 + t812;
t632 = -Icges(3,2) * t547 + t532;
t326 = Icges(3,6) * t548 + t550 * t632;
t1081 = -t320 + t326;
t1076 = t448 - t632;
t1075 = (Icges(3,6) - Icges(4,6)) * t549 + (Icges(4,4) + Icges(3,5)) * t547;
t1072 = t458 + t635;
t1071 = t1089 * qJD(2);
t1070 = t1086 * qJD(2);
t1065 = -t947 * t429 + t916 * t603;
t1060 = t1079 * t789 + t1087 * t548 + t320 * t792;
t1041 = t1086 * t549 - t1089 * t547;
t323 = -Icges(4,2) * t550 + t452 * t548;
t298 = t548 * t323;
t810 = Icges(3,3) * t550;
t321 = Icges(3,5) * t791 - Icges(3,6) * t793 - t810;
t1057 = t1080 * t789 - t319 * t792 - t548 * t321 - t298;
t802 = t323 * t550;
t621 = t319 * t547 + t327 * t549;
t923 = t548 * t621;
t115 = -t802 + t923;
t801 = t325 * t547;
t618 = -t329 * t549 + t801;
t959 = -t321 * t550 - t548 * t618 + t115;
t958 = -t325 * t792 - t1057;
t957 = -t326 * t792 + t1060;
t1049 = t1071 * t550 + (t548 * t632 - t319 - t813) * qJD(1);
t1048 = t1071 * t548 + (t448 * t550 - t326 + t812) * qJD(1);
t1047 = -t1070 * t550 + (-t458 * t548 - t327 + t823) * qJD(1);
t1046 = -qJD(1) * t1079 + t1070 * t548;
t1045 = t1076 * qJD(2);
t1044 = t1072 * qJD(2);
t1043 = -t450 - t452;
t1042 = t1075 * qJD(2);
t1040 = -t1086 * t547 - t1089 * t549;
t800 = t326 * t547;
t1039 = t1079 * t549 + t320 * t547 - t800;
t1038 = t618 - t621;
t943 = t1079 * t547 + t1081 * t549;
t942 = t1080 * t547 + t1082 * t549;
t287 = t330 * t791;
t668 = t322 * t550 - t287;
t118 = -t326 * t793 - t668;
t653 = -t320 * t793 + t324 * t550 - t328 * t791;
t939 = -t653 + t118;
t934 = t1075 * t550;
t933 = t1075 * t548;
t956 = t1041 * t548 - t934;
t955 = t1041 * t550 + t933;
t1033 = t1087 * qJD(1);
t1030 = t550 ^ 2;
t646 = t368 * rSges(6,1) - t367 * rSges(6,2);
t190 = -rSges(6,3) * t550 - t646;
t545 = -qJ(5) - pkin(7);
t710 = pkin(3) * t791;
t506 = pkin(4) * t794;
t516 = pkin(4) * t866 + pkin(3);
t739 = t549 * t516 + t506;
t746 = t739 * t548;
t1013 = t190 + t710 + (pkin(7) + t545) * t550 - t746;
t1011 = qJD(1) * t1075 + t1040 * qJD(2) + t1044 * t549 + t1045 * t547;
t1010 = -t943 * qJD(2) + t1047 * t549 + t1049 * t547 + t1033;
t912 = qJD(1) * t323;
t1009 = -qJD(1) * t321 - t942 * qJD(2) + t1046 * t549 - t1048 * t547 - t912;
t1008 = -t1082 * t550 + (-Icges(4,1) * t792 + t455 * t550 - t1081 + t498) * t548;
t1007 = t957 * t548 - t958 * t550;
t1006 = t939 * t548 - t959 * t550;
t1005 = t1086 - t1076;
t1004 = t1072 - t1089;
t1003 = (Icges(3,2) * t791 + t1080 + t499) * t550 + (-t453 * t550 + t1079) * t548;
t1002 = qJD(1) * t1041 + qJD(2) * t1043;
t1001 = qJD(1) * t1038 - t1042 * t548 + t1033;
t1000 = -t912 - t1042 * t550 + (-t450 * t548 - t1039 + t810) * qJD(1);
t840 = -rSges(6,3) + t545;
t275 = rSges(5,1) * t603 + t429 * rSges(5,2);
t995 = t275 * t445;
t994 = t275 * t446;
t993 = t955 * qJD(1);
t991 = t956 * qJD(1);
t725 = qJD(2) * t547;
t690 = t516 * t725;
t723 = qJD(2) * t549;
t986 = -(t546 * t723 + t910) * pkin(4) + t690;
t243 = -t367 * rSges(5,1) - t368 * rSges(5,2);
t247 = -t369 * rSges(5,1) - t370 * rSges(5,2);
t985 = -t243 * t445 - t247 * t446;
t590 = -t547 * t722 - t549 * t727;
t302 = pkin(3) * t590 - pkin(7) * t726;
t721 = qJD(3) * t549;
t524 = t547 * qJ(3);
t917 = t549 * pkin(2) + t524;
t371 = qJD(2) * t917 - t721;
t507 = pkin(3) * t789;
t436 = -pkin(7) * t548 + t507;
t459 = pkin(2) * t547 - qJ(3) * t549;
t693 = t547 * t727;
t720 = qJD(3) * t550;
t491 = t547 * t720;
t687 = t549 * t722;
t738 = qJ(3) * t687 + t491;
t195 = pkin(2) * t590 - qJ(3) * t693 + t738;
t405 = pkin(2) * t789 + qJ(3) * t792;
t474 = t550 * pkin(1) + t548 * pkin(6);
t520 = pkin(6) * t726;
t747 = qJD(1) * (-pkin(1) * t727 + t520) + qJDD(1) * t474;
t713 = qJD(2) * qJD(3);
t937 = qJDD(3) * t547 + t549 * t713;
t591 = qJDD(1) * t405 + t747 + t937 * t548 + (t195 + t491) * qJD(1);
t724 = qJD(2) * t548;
t788 = t549 * qJD(2) ^ 2;
t554 = qJD(1) * t302 + qJDD(1) * t436 + (-t437 * t547 - t548 * t788) * pkin(3) - t437 * t459 - t371 * t724 + t591;
t719 = qJD(5) * t548;
t856 = pkin(3) - t516;
t681 = t856 * t547;
t709 = pkin(4) * t790;
t765 = rSges(6,1) * t429 - rSges(6,2) * t603 - t681 - t709;
t682 = t856 * t549;
t775 = -rSges(6,1) * t251 + rSges(6,2) * t557 + qJD(2) * t682 - (t546 * t725 - t581) * pkin(4);
t922 = t370 * rSges(6,1) - t369 * rSges(6,2) + t550 * t506 + t516 * t789 + t840 * t548;
t776 = -t436 + t922;
t665 = qJD(4) * t709;
t863 = pkin(7) * t550;
t471 = pkin(4) * t658;
t472 = pkin(4) * t707;
t913 = t148 * rSges(6,1) + t147 * rSges(6,2) + qJD(2) * t472 + qJD(4) * t471 + t545 * t726;
t936 = -t682 + t506;
t839 = -rSges(6,3) * t726 - t719 + (qJD(2) * t681 - t665) * t550 + (-t936 * t548 + t863) * qJD(1) + t913;
t13 = t775 * t445 - t765 * t300 + t776 * qJDD(1) + (-t719 + t839) * qJD(1) + t554 + qJDD(5) * t550;
t984 = -g(2) + t13;
t973 = t1006 * qJD(2) + t991;
t972 = t1007 * qJD(2) + t993;
t968 = t1038 * qJD(2) + t1046 * t547 + t1048 * t549;
t967 = t1039 * qJD(2) + t1047 * t547 - t1049 * t549;
t966 = -t1002 * t548 + t1011 * t550;
t965 = t1002 * t550 + t1011 * t548;
t435 = t710 + t863;
t401 = t917 * t548;
t651 = t401 * t724 + t405 * t722 - t721;
t599 = t435 * t724 + t436 * t722 + t651;
t42 = -t1013 * t445 + t446 * t776 + t599;
t963 = t42 * t446;
t949 = -t1003 * t547 + t1008 * t549;
t946 = (t1004 * t549 - t1005 * t547) * qJD(1);
t944 = t802 + t1060;
t941 = t1001 * t1030 + (t1010 * t548 + (-t1000 + t1009) * t550) * t548;
t940 = t1009 * t1030 + (t1000 * t548 + (-t1001 + t1010) * t550) * t548;
t935 = t1043 * qJD(1);
t648 = -t368 * rSges(5,1) + t367 * rSges(5,2);
t191 = -rSges(5,3) * t550 + t648;
t609 = -pkin(1) - t917;
t931 = (t609 - t739) * qJD(1) - qJD(5);
t928 = t42 * t1013;
t865 = pkin(3) * t547;
t670 = -t459 - t865;
t589 = t670 * t722 + t491;
t541 = t550 * pkin(6);
t473 = pkin(1) * t548 - t541;
t750 = -t401 - t473;
t701 = -t435 + t750;
t637 = t701 + t1013;
t55 = qJD(1) * t637 - t765 * t446 + t589 - t719;
t927 = t55 * t765;
t417 = t459 * t724;
t689 = t547 * t724;
t484 = pkin(3) * t689;
t523 = qJD(3) * t547;
t684 = t548 * t523;
t606 = -t417 - t484 + t684;
t749 = -t405 - t436;
t663 = t749 - t776;
t718 = qJD(5) * t550;
t56 = t718 - t765 * t445 + (t474 - t663) * qJD(1) + t606;
t926 = t56 * t765;
t921 = t367 * rSges(6,1) + t368 * rSges(6,2) + pkin(4) * t708;
t920 = t369 * rSges(6,1) + t370 * rSges(6,2) + t472;
t274 = rSges(6,1) * t603 + t429 * rSges(6,2);
t919 = -t274 - t739;
t442 = qJD(1) * t473;
t918 = -qJD(1) * t401 - t442;
t650 = t549 * rSges(4,1) + t547 * rSges(4,3);
t535 = t548 * rSges(4,2);
t362 = rSges(4,1) * t789 + rSges(4,3) * t792 + t535;
t660 = t405 + t474;
t198 = t660 + t362;
t860 = g(2) * t548;
t899 = (g(1) * t550 + t860) * t547;
t692 = t549 * t726;
t735 = pkin(7) * t727 + t484;
t303 = pkin(3) * t692 - t735;
t438 = -qJDD(2) * t550 + t510;
t382 = t547 * t726 + t548 * t723;
t485 = pkin(2) * t689;
t652 = t485 - t684;
t196 = pkin(2) * t692 + qJ(3) * t382 - t652;
t592 = -qJDD(3) * t549 + t195 * t722 + t196 * t724 + t437 * t401 + t547 * t713;
t564 = t302 * t722 + t303 * t724 + t437 * t435 + t438 * t749 + t592;
t647 = -t150 * rSges(6,1) - t149 * rSges(6,2);
t838 = -rSges(6,3) * t727 + (t936 * qJD(1) + qJD(5)) * t550 + (qJD(1) * t545 - t986) * t548 + t735 - t647;
t11 = -t1013 * t300 - t301 * t776 + t445 * t838 + t446 * t839 + t564;
t892 = t11 * t776 + t42 * t839;
t891 = -t1013 * t11 + t42 * t838;
t886 = m(4) / 0.2e1;
t885 = m(5) / 0.2e1;
t884 = m(6) / 0.2e1;
t883 = -pkin(2) - pkin(3);
t878 = t437 / 0.2e1;
t877 = t438 / 0.2e1;
t868 = -rSges(4,1) - pkin(2);
t867 = -rSges(5,3) - pkin(7);
t864 = pkin(3) * t549;
t862 = g(1) * t548;
t855 = rSges(3,1) * t549;
t854 = rSges(4,1) * t547;
t534 = t548 * rSges(3,3);
t841 = -rSges(4,3) - qJ(3);
t461 = rSges(3,1) * t547 + rSges(3,2) * t549;
t691 = t461 * t722;
t733 = rSges(3,2) * t793 + t550 * rSges(3,3);
t361 = rSges(3,1) * t791 - t733;
t755 = -t361 - t473;
t156 = qJD(1) * t755 - t691;
t806 = t156 * t548;
t805 = t156 * t550;
t363 = rSges(3,1) * t789 - rSges(3,2) * t792 + t534;
t279 = t363 + t474;
t157 = qJD(1) * t279 - t461 * t724;
t404 = t461 * t550;
t804 = t157 * t404;
t273 = rSges(5,1) * t429 - rSges(5,2) * t603;
t799 = t446 * t273;
t786 = t148 * rSges(5,1) + t147 * rSges(5,2);
t774 = t548 * t681 + t921;
t773 = pkin(4) * t659 - t921;
t772 = t550 * t681 + t920;
t771 = t471 - t920;
t766 = pkin(4) * t695 + t274 + t506;
t764 = t864 + t919;
t757 = t370 * rSges(5,1) - t369 * rSges(5,2);
t754 = -t362 - t405;
t753 = t548 * t401 + t550 * t405;
t752 = -t650 * qJD(2) - t371;
t495 = qJ(3) * t789;
t402 = -pkin(2) * t792 + t495;
t751 = qJD(1) * t402 + t548 * t721;
t418 = t459 * t727;
t486 = pkin(3) * t693;
t748 = t418 + t486;
t460 = -rSges(4,3) * t549 + t854;
t741 = -t459 - t460;
t740 = -t917 - t650;
t737 = rSges(4,2) * t726 + rSges(4,3) * t687;
t736 = rSges(3,2) * t693 + rSges(3,3) * t726;
t492 = t549 * t720;
t734 = t486 + t492;
t732 = t548 ^ 2 + t1030;
t711 = pkin(3) * t792;
t706 = t550 * t195 + t548 * t196 + t401 * t726;
t193 = -rSges(5,3) * t548 + t757;
t705 = -t193 + t749;
t704 = t438 * t459 + t937 * t550;
t493 = qJ(3) * t791;
t398 = -pkin(2) * t793 + t493;
t703 = t398 * t724 + t402 * t722 + t523;
t538 = t550 * rSges(4,2);
t360 = t548 * t650 - t538;
t702 = -t360 + t750;
t698 = t520 + t738;
t697 = t541 - t746;
t694 = t550 * t868;
t683 = -pkin(1) - t855;
t674 = -t724 / 0.2e1;
t673 = t724 / 0.2e1;
t672 = -t722 / 0.2e1;
t671 = t722 / 0.2e1;
t669 = t732 * t547;
t667 = -t321 + t800;
t666 = qJD(2) * t752;
t664 = t191 + t701;
t661 = t548 * t435 + t550 * t436 + t753;
t657 = -t273 + t670;
t656 = -pkin(3) * t723 - t371;
t466 = rSges(2,1) * t550 - rSges(2,2) * t548;
t462 = rSges(2,1) * t548 + rSges(2,2) * t550;
t465 = -rSges(3,2) * t547 + t855;
t649 = rSges(5,1) * t150 + rSges(5,2) * t149;
t130 = rSges(5,1) * t251 - rSges(5,2) * t557;
t573 = t438 * t865 + (-pkin(3) * t788 - qJD(2) * t371) * t550 + t704;
t434 = t474 * qJD(1);
t607 = -t196 - t434 - t684;
t600 = -t303 + t607;
t97 = -rSges(5,3) * t727 + t649;
t23 = -t130 * t446 + t273 * t301 + t664 * qJDD(1) + (t600 - t97) * qJD(1) + t573;
t95 = -rSges(5,3) * t726 + t786;
t24 = qJD(1) * t95 + qJDD(1) * t193 - t130 * t445 - t273 * t300 + t554;
t644 = t23 * t550 + t24 * t548;
t639 = -t548 * t56 - t55 * t550;
t70 = qJD(1) * t664 + t589 - t799;
t71 = -t273 * t445 + (t474 - t705) * qJD(1) + t606;
t638 = t548 * t71 + t550 * t70;
t624 = -t157 * t548 - t805;
t237 = rSges(3,1) * t590 - rSges(3,2) * t687 + t736;
t400 = t461 * t548;
t239 = -qJD(2) * t400 + (t465 * t550 + t534) * qJD(1);
t623 = t237 * t550 + t239 * t548;
t616 = t361 * t548 + t363 * t550;
t611 = t670 - t765;
t610 = -t130 + t656;
t605 = t550 * t302 + t548 * t303 + t435 * t726 + t706;
t604 = t722 * t741 + t491;
t602 = -qJ(3) * t723 - t523;
t601 = t656 + t775;
t584 = t609 - t864;
t578 = t547 * t841 + t549 * t868 - pkin(1);
t575 = -qJD(1) * t435 + t589 + t918;
t503 = rSges(4,3) * t789;
t501 = rSges(4,3) * t791;
t431 = t465 * qJD(2);
t403 = -rSges(4,1) * t792 + t503;
t399 = -rSges(4,1) * t793 + t501;
t383 = t687 - t693;
t381 = t732 * t725;
t238 = -t460 * t724 + (t550 * t650 + t535) * qJD(1);
t236 = rSges(4,1) * t590 - rSges(4,3) * t693 + t737;
t151 = t616 * qJD(2);
t113 = -t417 + (-qJD(2) * t460 + t523) * t548 + t198 * qJD(1);
t112 = qJD(1) * t702 + t604;
t111 = (t360 * t548 + t362 * t550) * qJD(2) + t651;
t103 = qJD(1) * t237 + qJDD(1) * t363 - t431 * t724 - t437 * t461 + t747;
t102 = -t431 * t722 + t438 * t461 + t755 * qJDD(1) + (-t239 - t434) * qJD(1);
t61 = -t191 * t445 + t193 * t446 + t599;
t52 = qJD(1) * t236 + qJDD(1) * t362 + t437 * t741 + t548 * t666 + t591;
t51 = t438 * t460 + t550 * t666 + t702 * qJDD(1) + (-t238 + t607) * qJD(1) + t704;
t41 = t360 * t437 + t754 * t438 + (t236 * t550 + t238 * t548) * qJD(2) + t592;
t22 = -t191 * t300 - t193 * t301 + t445 * t97 + t446 * t95 + t564;
t12 = -qJDD(5) * t548 + t775 * t446 + t765 * t301 + t637 * qJDD(1) + (t600 - t718 - t838) * qJD(1) + t573;
t1 = [-m(2) * (-g(1) * t462 + g(2) * t466) + t978 * t873 + (((t118 - t287 + (t322 + t801) * t550 + t1057) * t550 + (t115 - t923 + t944) * t548) * qJD(2) + t993) * t671 + (qJD(2) * t1041 + t1017 * t429 + t1018 * t603 + t1044 * t547 - t1045 * t549 + t950 * t251 - t951 * t557) * qJD(1) + (-g(1) * (t545 * t550 + t190 + t697) - t609 * t862 + t926 * t446 + (t548 * t609 + t550 * t840 - t646 + t697) * t12 + (t485 + t647 + t931 * t550 + (t602 + (-pkin(6) - t840) * qJD(1) + t986) * t548) * t55 + (t719 + t55 - t1013 * qJD(1) - t575 + t698 + t913 + (-rSges(6,3) * qJD(1) - pkin(2) * t725 - t665 - t690) * t550 + t931 * t548) * t56 + t984 * (t660 + t922)) * m(6) + (-g(1) * (t191 + t541 - t863) - (t549 * t883 - pkin(1) - t524) * t862 + t23 * (t541 + t648) + t70 * (t485 - t649 + t735) + t71 * (t698 + t786) + (t71 * t725 * t883 + t23 * t867) * t550 + (t23 * t584 + t602 * t70) * t548 + ((t584 * t70 + t71 * t867) * t550 + (t70 * (rSges(5,3) - pkin(6)) + t71 * t584) * t548) * qJD(1) - (qJD(1) * t191 + t575 - t70 - t799) * t71 + (-g(2) + t24) * (t548 * t867 + t507 + t660 + t757)) * m(5) + (t112 * t652 + t113 * (t698 + t737) + (t113 * t547 * t694 + t112 * (t549 * t841 + t854) * t548) * qJD(2) + (t112 * t578 * t550 + (t112 * (-rSges(4,2) - pkin(6)) + t113 * (t609 - t650)) * t548) * qJD(1) - (-qJD(1) * t360 - t112 + t604 + t918) * t113 + (t52 - g(2)) * t198 + (t51 - g(1)) * (t548 * t578 + t538 + t541)) * m(4) + (-(-qJD(1) * t361 - t156 - t442 - t691) * t157 + t157 * (t520 + t736) + (t461 * t806 - t804) * qJD(2) + ((-pkin(1) - t465) * t805 + (t156 * (-rSges(3,3) - pkin(6)) + t157 * t683) * t548) * qJD(1) + (t103 - g(2)) * t279 + (t102 - g(1)) * (t683 * t548 + t541 + t733)) * m(3) + (t960 + t962) * t300 / 0.2e1 + (t961 + t964) * t301 / 0.2e1 + (t943 + t955) * t878 + (-t942 + t956) * t877 + (t974 + t977) * t445 / 0.2e1 + (t966 + t967) * t673 + (((t550 * t667 - t944 + t957) * t550 + (t548 * t667 - t298 + t653 + t668 + t958) * t548) * qJD(2) + t973 - t991) * t674 - (-t975 + t976 + t978) * t446 / 0.2e1 + (t965 - t968 + t972) * t672 + (m(2) * (t462 ^ 2 + t466 ^ 2) + Icges(2,3) + t950 * t429 - t951 * t603 - t1040) * qJDD(1); t1007 * t878 + t1006 * t877 + (t966 * qJD(1) + t940 * qJD(2) + t955 * qJDD(1) + t957 * t437 + t958 * t438) * t548 / 0.2e1 - (t965 * qJD(1) + t941 * qJD(2) + t956 * qJDD(1) + t939 * t437 + t959 * t438) * t550 / 0.2e1 + (t968 * t550 + t967 * t548 + (-t942 * t548 + t943 * t550) * qJD(1)) * qJD(1) / 0.2e1 + (t943 * t548 + t942 * t550) * qJDD(1) / 0.2e1 + t973 * t727 / 0.2e1 + t972 * t726 / 0.2e1 + ((-t934 * t724 - t935) * t548 + ((t933 * t548 + t949) * qJD(2) + t946) * t550) * t674 + ((t958 * t548 + t957 * t550) * qJD(1) + t940) * t673 + ((t959 * t548 + t939 * t550) * qJD(1) + t941) * t672 + ((-t933 * t722 + t935) * t550 + ((t934 * t550 + t949) * qJD(2) + t946) * t548) * t671 + (-g(1) * (t495 + t920) - g(2) * (t493 + t921) - g(3) * (t917 - t919) - (-pkin(2) - t516) * t899 + t11 * t661 + t42 * t605 + (t12 * t611 + (t56 * t611 - t928) * qJD(1) + t892) * t550 + (t13 * t611 + t56 * t601 + (t42 * t663 + t927) * qJD(1) + t891) * t548 - t56 * t751 - t42 * t703 - t772 * t963 - (t42 * t774 + t56 * t764) * t445 - (t639 * t917 + (-t42 * t669 + t549 * t639) * pkin(3)) * qJD(2) - t56 * (-t711 + t772) * qJD(1) + (t748 + t601 * t550 - t734 - t764 * t446 - (-t398 - t774) * qJD(1)) * t55) * m(6) + (-g(1) * (t495 - t247) - g(2) * (t493 - t243) - g(3) * (t275 + t917 + t864) - t883 * t899 + t70 * t748 + t22 * t661 + t61 * t605 + (t23 * t657 + t70 * t610 + t22 * t193 + t61 * t95 + (-t191 * t61 + t657 * t71) * qJD(1)) * t550 + (t24 * t657 + t71 * t610 - t22 * t191 + t61 * t97 + (t70 * t273 + t61 * t705) * qJD(1)) * t548 - t70 * (t734 - t994) - t71 * (t751 - t995) - t61 * (t703 + t985) - (t70 * (t243 - t398) + t71 * (-t247 - t711)) * qJD(1) - (-t638 * t917 + (-t549 * t638 - t61 * t669) * pkin(3)) * qJD(2)) * m(5) + (-g(1) * (t495 + t503) - g(2) * (t493 + t501) + g(3) * t740 - (g(1) * t694 + t860 * t868) * t547 + t112 * t418 + t41 * t753 + t111 * t706 + (t51 * t741 + t112 * t752 + t41 * t362 + t111 * t236 + (t111 * t360 + t113 * t741) * qJD(1)) * t550 + (t52 * t741 + t113 * t752 + t41 * t360 + t111 * t238 + (t111 * t754 + t112 * t460) * qJD(1)) * t548 - t112 * (t492 + (-t398 - t399) * qJD(1)) - t113 * (qJD(1) * t403 + t751) - t111 * t703 - ((t111 * t403 + t112 * t740) * t550 + (t111 * t399 + t113 * t740) * t548) * qJD(2)) * m(4) + ((qJD(2) * t623 + t361 * t437 - t363 * t438) * t616 + t151 * ((t361 * t550 - t363 * t548) * qJD(1) + t623) + t624 * t431 + (-t102 * t550 - t103 * t548 + (-t157 * t550 + t806) * qJD(1)) * t461 - (t156 * t400 - t804) * qJD(1) - (t151 * (-t400 * t548 - t404 * t550) + t624 * t465) * qJD(2) + g(1) * t404 + g(2) * t400 - g(3) * t465) * m(3) + ((t1003 * t549 + t1008 * t547) * qJD(2) + (t1004 * t547 + t1005 * t549) * qJD(1) - t1065) * t859 - t1085; (-m(4) - m(5) - m(6)) * (-g(3) * t549 + t899) - m(4) * (t111 * t381 + t112 * t383 + t113 * t382) - m(5) * (t381 * t61 + t382 * t71 + t383 * t70) - m(6) * (t381 * t42 + t382 * t56 + t383 * t55) + 0.2e1 * ((t112 * t722 + t113 * t724 - t41) * t886 + (t70 * t722 + t71 * t724 - t22) * t885 + (t55 * t722 + t56 * t724 - t11) * t884) * t549 + 0.2e1 * ((qJD(2) * t111 - t112 * t727 + t113 * t726 + t51 * t550 + t52 * t548) * t886 + (qJD(2) * t61 - t70 * t727 + t71 * t726 + t644) * t885 + (qJD(2) * t42 + t12 * t550 + t13 * t548 - t55 * t727 + t56 * t726) * t884) * t547; t1065 * t859 + (-g(1) * t771 - g(2) * t773 + g(3) * t766 + (t12 * t765 - t55 * t775 + (t926 + t928) * qJD(1) - t892) * t550 + (t13 * t765 - t56 * t775 + (t42 * t776 - t927) * qJD(1) - t891) * t548 - (t42 * t771 + t55 * t766) * t446 - (t42 * t773 + t56 * t766) * t445 - (-t55 * t773 + t56 * t771) * qJD(1)) * m(6) + (-t70 * (-qJD(1) * t243 + t994) - t71 * (qJD(1) * t247 + t995) + t22 * (t191 * t548 - t193 * t550) + t638 * t130 + ((-t548 * t70 + t550 * t71) * qJD(1) + t644) * t273 - g(1) * t247 - g(2) * t243 + g(3) * t275 + (-t548 * t97 - t550 * t95 + (t191 * t550 + t193 * t548) * qJD(1) + t985) * t61) * m(5) + t1085; (t862 + (-t12 + t963) * t548 + (-t42 * t445 + t984) * t550) * m(6);];
tau = t1;
