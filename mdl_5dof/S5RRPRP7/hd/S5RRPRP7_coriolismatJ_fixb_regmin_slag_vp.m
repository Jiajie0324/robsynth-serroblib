% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x23]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:02
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:01:34
% EndTime: 2019-12-31 20:01:43
% DurationCPUTime: 4.02s
% Computational Cost: add. (4514->335), mult. (8819->455), div. (0->0), fcn. (9384->6), ass. (0->272)
t199 = cos(qJ(4));
t196 = sin(pkin(8));
t198 = sin(qJ(2));
t200 = cos(qJ(2));
t330 = cos(pkin(8));
t175 = t196 * t198 - t330 * t200;
t173 = t175 ^ 2;
t240 = t330 * t198;
t303 = t196 * t200;
t177 = t240 + t303;
t174 = t177 ^ 2;
t266 = -t174 - t173;
t372 = t266 * t199;
t377 = qJD(1) * t372;
t197 = sin(qJ(4));
t373 = t266 * t197;
t376 = qJD(1) * t373;
t375 = qJD(3) * t372;
t374 = qJD(3) * t373;
t170 = t177 * qJ(5);
t352 = -qJ(3) - pkin(6);
t181 = t352 * t198;
t183 = t352 * t200;
t128 = -t330 * t181 - t183 * t196;
t370 = t128 * t199;
t354 = t198 * pkin(2);
t106 = pkin(3) * t177 + pkin(7) * t175 + t354;
t87 = t197 * t106;
t333 = -t370 / 0.2e1 + t87 / 0.2e1;
t371 = -t170 - t333;
t368 = t196 * t181 - t330 * t183;
t314 = t368 * t197;
t313 = t368 * t199;
t369 = 0.2e1 * t197;
t278 = qJD(4) * t197;
t99 = t197 * t175;
t294 = t99 * qJD(1);
t367 = t294 + t278;
t101 = t197 * t177;
t104 = t199 * t177;
t231 = pkin(4) * t101 - qJ(5) * t104;
t69 = t128 + t231;
t366 = -t69 / 0.2e1;
t365 = -t106 / 0.2e1;
t364 = t177 / 0.2e1;
t194 = t197 ^ 2;
t363 = -t194 / 0.2e1;
t195 = t199 ^ 2;
t362 = -t195 / 0.2e1;
t361 = -t197 / 0.2e1;
t360 = t197 / 0.2e1;
t359 = -t199 / 0.2e1;
t358 = t199 / 0.2e1;
t357 = pkin(4) * t197;
t356 = t175 * pkin(4);
t355 = t177 * pkin(4);
t353 = t199 * pkin(4);
t351 = qJD(2) * pkin(2);
t311 = t175 * qJ(5);
t258 = -pkin(2) * t200 - pkin(1);
t208 = t175 * pkin(3) - t177 * pkin(7) + t258;
t63 = t197 * t208 + t313;
t49 = t63 + t311;
t350 = t175 * t49;
t62 = -t199 * t208 + t314;
t349 = t175 * t62;
t348 = t175 * t63;
t300 = t199 * qJ(5);
t182 = t300 - t357;
t68 = t182 * t175 + t368;
t347 = t197 * t68;
t346 = t199 * t68;
t50 = t62 - t356;
t331 = -t370 + t87;
t51 = t170 + t331;
t299 = t199 * t106;
t301 = t128 * t197;
t52 = -t299 - t301 - t355;
t3 = t49 * t51 + t50 * t52 + t68 * t69;
t345 = t3 * qJD(1);
t302 = t197 * qJ(5);
t229 = t302 + t353;
t96 = t229 * t177;
t4 = -t49 * t62 + t50 * t63 + t69 * t96;
t344 = t4 * qJD(1);
t343 = t49 * t199;
t103 = t199 * t175;
t5 = t50 * t103 - t52 * t104 + (t177 * t51 - t350) * t197;
t342 = t5 * qJD(1);
t341 = t50 * t197;
t6 = -t63 * t104 + (t343 + (t50 - t62) * t197) * t177;
t340 = t6 * qJD(1);
t339 = t69 * t197;
t338 = t69 * t199;
t262 = -t49 / 0.2e1 + t63 / 0.2e1;
t217 = t311 / 0.2e1 - t262;
t261 = -t62 / 0.2e1 + t50 / 0.2e1;
t219 = t356 / 0.2e1 - t261;
t7 = t217 * t197 + t219 * t199;
t337 = t7 * qJD(1);
t8 = t219 * t197 - t217 * t199;
t336 = t8 * qJD(1);
t191 = -t330 * pkin(2) - pkin(3);
t171 = -t229 + t191;
t241 = t104 / 0.2e1;
t335 = t171 * t241 + t339 / 0.2e1;
t334 = t301 / 0.2e1 + t299 / 0.2e1;
t15 = t177 * t69 + (-t341 - t343) * t175;
t329 = qJD(1) * t15;
t22 = -t348 + (t96 * t197 + t338) * t177;
t328 = qJD(1) * t22;
t23 = -t349 + (-t96 * t199 + t339) * t177;
t327 = qJD(1) * t23;
t26 = -t69 * t104 + t350;
t326 = qJD(1) * t26;
t32 = -t128 * t101 + t349;
t325 = qJD(1) * t32;
t33 = t128 * t104 - t348;
t324 = qJD(1) * t33;
t53 = t128 * t177 - t175 * t368;
t323 = qJD(1) * t53;
t265 = t174 - t173;
t73 = t265 * t197;
t322 = qJD(1) * t73;
t75 = t265 * t199;
t320 = qJD(1) * t75;
t318 = qJD(3) * t99;
t317 = qJD(4) * t62;
t11 = (t49 - t346) * t177 + (t51 + t338) * t175;
t316 = t11 * qJD(1);
t12 = (-t50 + t347) * t177 + (-t52 - t339) * t175;
t315 = t12 * qJD(1);
t190 = pkin(2) * t196 + pkin(7);
t310 = t177 * t190;
t18 = (-t62 + t314) * t177 + t299 * t175;
t309 = t18 * qJD(1);
t308 = t182 * t197;
t19 = (-t63 + t313) * t177 + (-t370 - t331) * t175;
t307 = t19 * qJD(1);
t306 = t190 * t175;
t305 = t191 * t177;
t245 = t171 * t364;
t206 = (t362 + t363) * t306 + t245;
t218 = t52 * t358 + t51 * t361;
t21 = t206 + t218;
t298 = t21 * qJD(1);
t34 = t258 * t354;
t296 = t34 * qJD(1);
t207 = -t196 * t175 / 0.2e1 - t330 * t177 / 0.2e1;
t80 = (-t198 / 0.2e1 + t207) * pkin(2);
t295 = t80 * qJD(1);
t292 = t177 * t363 + t195 * t364;
t186 = t195 - t194;
t288 = qJD(1) * t175;
t287 = qJD(1) * t177;
t286 = qJD(1) * t197;
t285 = qJD(1) * t199;
t284 = qJD(1) * t200;
t283 = qJD(2) * t197;
t282 = qJD(2) * t199;
t281 = qJD(3) * t197;
t280 = qJD(3) * t199;
t279 = qJD(4) * t175;
t277 = qJD(4) * t199;
t276 = qJD(5) * t197;
t275 = t101 * qJD(1);
t95 = t103 * qJD(1);
t274 = t104 * qJD(1);
t164 = t194 * t175;
t165 = t195 * t175;
t107 = t164 + t165;
t273 = t107 * qJD(1);
t272 = t266 * qJD(1);
t172 = t240 / 0.2e1 + t303 / 0.2e1;
t271 = t172 * qJD(1);
t169 = t175 * qJD(5);
t187 = -t198 ^ 2 + t200 ^ 2;
t270 = t187 * qJD(1);
t269 = t198 * qJD(2);
t268 = t199 * qJD(5);
t267 = t200 * qJD(2);
t264 = pkin(1) * t198 * qJD(1);
t263 = pkin(1) * t284;
t166 = t355 / 0.2e1;
t242 = t306 / 0.2e1;
t260 = -t171 * t104 / 0.2e1 + t199 * t242 - t339 / 0.2e1;
t259 = t166 + t334;
t257 = t195 * t287;
t256 = t175 * t278;
t255 = t175 * t277;
t254 = t190 * t278;
t253 = t190 * t277;
t252 = t197 * t268;
t251 = t175 * t177 * qJD(2);
t250 = t197 * t277;
t249 = t177 * t286;
t248 = t177 * t276;
t188 = t197 * t282;
t247 = t198 * t284;
t246 = t177 * t285;
t161 = t177 * t282;
t244 = -t308 / 0.2e1;
t243 = -t306 / 0.2e1;
t71 = t172 + t292;
t239 = qJD(1) * t71 + t188;
t97 = (t194 / 0.2e1 + t362) * t177;
t238 = qJD(1) * t97 - t188;
t142 = t174 * t197 * t285;
t237 = qJD(2) * t97 + t142;
t236 = qJD(4) + t288;
t235 = t197 * t246;
t234 = t197 * t161;
t233 = -t355 / 0.2e1 - t301 / 0.2e1;
t232 = -t96 / 0.2e1 + t243;
t230 = 0.2e1 * t234;
t228 = t197 * t52 + t199 * t51;
t227 = t171 * t175 + t310;
t226 = -t175 * t191 - t310;
t114 = t171 * t199 - t308;
t202 = (t182 * t364 + t366) * t199 + (t245 + t232) * t197;
t17 = t202 + t371;
t225 = -qJD(1) * t17 + qJD(2) * t114;
t115 = -t171 * t197 - t182 * t199;
t13 = (t244 - pkin(4) / 0.2e1) * t177 + (t365 + t232) * t199 + t233 + t335;
t224 = -qJD(1) * t13 + qJD(2) * t115;
t223 = t236 * t197;
t222 = t236 * t199;
t221 = -qJD(4) * t182 - t276;
t220 = -t51 * qJ(5) / 0.2e1 + t52 * pkin(4) / 0.2e1;
t201 = (t262 * t197 + t261 * t199) * t190 + t182 * t366 + t96 * t171 / 0.2e1;
t2 = t201 + t220;
t216 = t171 * t182 * qJD(2) - t2 * qJD(1);
t25 = t259 + t260;
t215 = -qJD(1) * t25 + t171 * t283;
t137 = t199 * t243;
t30 = t137 + (t305 / 0.2e1 + t365) * t199;
t214 = -qJD(1) * t30 - t191 * t283;
t203 = (t242 - t305 / 0.2e1) * t197 + t370 / 0.2e1;
t28 = t203 + t333;
t213 = -qJD(1) * t28 - t191 * t282;
t212 = t177 * t222;
t211 = qJD(4) * t172 + t175 * t287;
t108 = t186 * t174;
t210 = qJD(1) * t108 + t230;
t209 = -qJD(2) * t186 + 0.2e1 * t235;
t205 = -t229 * qJD(4) + t268;
t121 = t174 * t195 + t173;
t204 = qJD(1) * t121 + t234 + t279;
t163 = t172 * qJD(2);
t160 = t177 * t283;
t143 = t199 * t248;
t141 = t236 * qJ(5);
t131 = qJD(2) * t194 + t235;
t94 = t103 * qJD(4);
t90 = t99 * qJD(4);
t88 = t97 * qJD(4);
t79 = t354 / 0.2e1 + t207 * pkin(2);
t78 = t95 + t277;
t72 = -t172 + t292;
t64 = -qJD(2) * t103 + t175 * t249;
t61 = t63 * qJD(4);
t45 = t177 * t223;
t31 = t128 * t360 + t191 * t241 + t137 + t334;
t29 = t203 - t333;
t24 = -t299 / 0.2e1 + t233 + t260;
t20 = t206 - t218;
t16 = t202 - t371;
t14 = t177 * t244 + t232 * t199 + t166 + t259 + t335;
t10 = t62 * t359 + t49 * t361 + t63 * t360 + t50 * t358 + (t302 / 0.2e1 + t353 / 0.2e1) * t175;
t9 = t62 * t361 + t343 / 0.2e1 + t63 * t359 + t341 / 0.2e1 + (-t300 / 0.2e1 + t357 / 0.2e1) * t175;
t1 = t201 - t220;
t27 = [0, 0, 0, t198 * t267, t187 * qJD(2), 0, 0, 0, -pkin(1) * t269, -pkin(1) * t267, -qJD(3) * t266, qJD(2) * t34 + qJD(3) * t53, -t174 * t250 - t195 * t251, -qJD(4) * t108 + t175 * t230, qJD(2) * t75 - t177 * t256, -qJD(2) * t73 - t177 * t255, t251, qJD(2) * t18 + qJD(4) * t33 - t374, qJD(2) * t19 + qJD(4) * t32 - t375, qJD(2) * t12 + qJD(4) * t22 - t174 * t252 - t374, -qJD(2) * t5 - qJD(4) * t6 - t175 * t248, qJD(2) * t11 + qJD(4) * t23 + qJD(5) * t121 + t375, qJD(2) * t3 + qJD(3) * t15 + qJD(4) * t4 + qJD(5) * t26; 0, 0, 0, t247, t270, t267, -t269, 0, -pkin(6) * t267 - t264, pkin(6) * t269 - t263, (t330 * t175 - t177 * t196) * t351, t296 + (-t128 * t196 - t330 * t368) * t351 + t79 * qJD(3), -t88 + (-t188 - t257) * t175, (t164 - t165) * qJD(2) + (-qJD(4) + t288) * t104 * t369, t160 + t320, t161 - t322, t211, t309 + (t197 * t226 - t313) * qJD(2) + t31 * qJD(4), t307 + (t199 * t226 + t314) * qJD(2) + t29 * qJD(4), t315 + (-t197 * t227 - t346) * qJD(2) + t14 * qJD(4) + t72 * qJD(5), qJD(2) * t228 + t10 * qJD(4) - t342, t316 + (t199 * t227 - t347) * qJD(2) + t16 * qJD(4) + t143, t345 + (t171 * t68 + t190 * t228) * qJD(2) + t20 * qJD(3) + t1 * qJD(4) + t24 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t272, qJD(2) * t79 + t323, 0, 0, 0, 0, 0, -t376, -t377, -t376, 0, t377, qJD(2) * t20 + qJD(4) * t9 + t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t237, -t210, -t45, -t212, t163, qJD(2) * t31 + t324 - t61, qJD(2) * t29 + t317 + t325, qJD(2) * t14 + t328 - t61, t10 * qJD(2) + qJD(4) * t231 - t248 - t340, qJD(2) * t16 + t169 - t317 + t327, t344 + t1 * qJD(2) + t9 * qJD(3) + (-pkin(4) * t63 - qJ(5) * t62) * qJD(4) + t49 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t72 - t142, -t45, t204, qJD(2) * t24 + qJD(4) * t49 + t326; 0, 0, 0, -t247, -t270, 0, 0, 0, t264, t263, 0, qJD(3) * t80 - t296, t175 * t257 - t88, -t212 * t369, t94 - t320, -t90 + t322, -t211, qJD(4) * t30 - t177 * t280 - t309, qJD(3) * t101 + qJD(4) * t28 - t307, -qJD(3) * t104 + qJD(4) * t13 + qJD(5) * t71 - t315, -qJD(3) * t107 - qJD(4) * t7 + qJD(5) * t103 + t342, qJD(4) * t17 - t177 * t281 + t143 - t316, qJD(3) * t21 + qJD(4) * t2 + qJD(5) * t25 - t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t250, t186 * qJD(4), 0, 0, 0, t191 * t278, t191 * t277, -qJD(4) * t115 + t252, 0, -qJD(4) * t114 + qJD(5) * t194, t221 * t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295, 0, 0, 0, 0, 0, -t246, t275, -t274, -t273, -t249, t298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t238, -t209, t78, -t367, -t271, -t214 - t253, -t213 + t254, -t224 - t253, t205 - t337, -t225 - t254, t190 * t205 - t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, t78, t131, -t215 + t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t272, -qJD(2) * t80 - t323, 0, 0, 0, 0, 0, t161 - t90 + t376, -qJD(2) * t101 - t255 + t377, qJD(2) * t104 - t256 + t376, t107 * qJD(2), t160 + t94 - t377, -qJD(2) * t21 - qJD(4) * t8 + qJD(5) * t99 - t329; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t295, 0, 0, 0, 0, 0, t246, -t275, t274, t273, t249, -t298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367, -t222, -t223, 0, t78, -t221 - t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, t210, t64, qJD(2) * t99 + t175 * t246, t163, -qJD(2) * t30 + t318 - t324, -qJD(2) * t28 + t175 * t280 - t325, -qJD(2) * t13 + t175 * t281 - t328, qJD(2) * t7 + t340, -qJD(2) * t17 - qJD(3) * t103 + t169 - t327, qJ(5) * t169 - qJD(2) * t2 + qJD(3) * t8 - t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, t209, -t95, t294, t271, t214, t213, t224, t337, t225, t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t294, t175 * t285, t175 * t286, 0, -t95, t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t71 + t142, t64, -t204, -qJ(5) * t279 - qJD(2) * t25 - t318 - t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239, -t95, -t131, t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t236, -t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t27;
