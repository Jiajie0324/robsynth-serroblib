% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPRP7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:02
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPRP7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP7_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP7_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRP7_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRP7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP7_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:02:02
% EndTime: 2019-12-31 20:02:23
% DurationCPUTime: 22.79s
% Computational Cost: add. (61942->676), mult. (142378->838), div. (0->0), fcn. (98232->8), ass. (0->451)
t1391 = cos(qJ(4));
t1388 = sin(qJ(4));
t1385 = sin(pkin(8));
t1386 = cos(pkin(8));
t1392 = cos(qJ(2));
t1495 = qJD(1) * t1392;
t1389 = sin(qJ(2));
t1496 = qJD(1) * t1389;
t1347 = t1385 * t1495 + t1386 * t1496;
t1311 = -t1391 * qJD(2) + t1388 * t1347;
t1375 = qJD(2) * t1495;
t1450 = t1389 * qJDD(1);
t1355 = t1375 + t1450;
t1378 = t1392 * qJDD(1);
t1443 = qJD(2) * t1496;
t1422 = -t1378 + t1443;
t1303 = t1386 * t1355 - t1385 * t1422;
t1415 = -t1388 * qJDD(2) - t1391 * t1303;
t1241 = -t1311 * qJD(4) - t1415;
t1345 = t1385 * t1496 - t1386 * t1495;
t1341 = qJD(4) + t1345;
t1490 = t1311 * t1341;
t1523 = t1241 - t1490;
t1473 = t1388 * t1523;
t1313 = t1388 * qJD(2) + t1391 * t1347;
t1435 = t1391 * qJDD(2) - t1388 * t1303;
t1240 = t1313 * qJD(4) - t1435;
t1287 = t1341 * t1313;
t1524 = t1240 + t1287;
t1122 = t1391 * t1524 + t1473;
t1310 = t1313 ^ 2;
t1506 = t1311 ^ 2;
t1519 = t1310 - t1506;
t1090 = t1385 * t1122 + t1386 * t1519;
t1092 = t1386 * t1122 - t1385 * t1519;
t1030 = t1389 * t1090 - t1392 * t1092;
t1461 = t1391 * t1523;
t1120 = -t1388 * t1524 + t1461;
t1390 = sin(qJ(1));
t1393 = cos(qJ(1));
t1604 = t1390 * t1030 - t1393 * t1120;
t1603 = t1393 * t1030 + t1390 * t1120;
t1505 = t1341 ^ 2;
t1281 = t1506 - t1505;
t1269 = t1313 * t1311;
t1434 = t1385 * t1355 + t1386 * t1422;
t1300 = qJDD(4) + t1434;
t1520 = t1269 + t1300;
t1541 = t1388 * t1520;
t1174 = t1391 * t1281 - t1541;
t1204 = t1240 - t1287;
t1111 = t1385 * t1174 + t1386 * t1204;
t1115 = t1386 * t1174 - t1385 * t1204;
t1055 = t1389 * t1111 - t1392 * t1115;
t1538 = t1391 * t1520;
t1170 = t1388 * t1281 + t1538;
t1602 = t1390 * t1055 + t1393 * t1170;
t1601 = t1393 * t1055 - t1390 * t1170;
t1027 = t1392 * t1090 + t1389 * t1092;
t1052 = t1392 * t1111 + t1389 * t1115;
t1282 = t1310 - t1505;
t1521 = -t1269 + t1300;
t1471 = t1388 * t1521;
t1560 = -t1391 * t1282 + t1471;
t1522 = t1241 + t1490;
t1459 = t1391 * t1521;
t1559 = t1388 * t1282 + t1459;
t1572 = t1385 * t1522 + t1386 * t1559;
t1573 = t1385 * t1559 - t1386 * t1522;
t1580 = -t1389 * t1573 + t1392 * t1572;
t1600 = t1390 * t1580 - t1393 * t1560;
t1599 = t1390 * t1560 + t1393 * t1580;
t1237 = t1505 + t1310;
t1150 = t1391 * t1237 + t1541;
t1598 = pkin(1) * t1150;
t1516 = -t1505 - t1506;
t1533 = t1391 * t1516 - t1471;
t1557 = t1385 * t1524 + t1386 * t1533;
t1558 = t1385 * t1533 - t1386 * t1524;
t1570 = t1389 * t1557 + t1392 * t1558;
t1597 = pkin(1) * t1570;
t1596 = pkin(2) * t1150;
t1595 = pkin(3) * t1150;
t1594 = pkin(6) * t1570;
t1593 = pkin(7) * t1150;
t1161 = t1388 * t1237 - t1538;
t1592 = pkin(7) * t1161;
t1591 = t1385 * t1161;
t1590 = t1386 * t1161;
t1588 = t1390 * t1150;
t1585 = t1393 * t1150;
t1534 = t1388 * t1516 + t1459;
t1571 = -t1389 * t1558 + t1392 * t1557;
t1583 = -pkin(1) * t1534 + pkin(6) * t1571;
t1582 = pkin(5) * (t1390 * t1571 - t1393 * t1534);
t1581 = pkin(5) * (t1390 * t1534 + t1393 * t1571);
t1579 = t1389 * t1572 + t1392 * t1573;
t1578 = pkin(2) * t1558;
t1577 = qJ(3) * t1558;
t1574 = -pkin(2) * t1534 + qJ(3) * t1557;
t1567 = pkin(3) * t1534;
t1566 = pkin(7) * t1533;
t1565 = pkin(7) * t1534;
t1564 = -qJ(5) * t1388 - pkin(3);
t1563 = qJ(5) * t1523;
t1489 = t1341 * t1388;
t1194 = -t1391 * t1240 + t1311 * t1489;
t1488 = t1341 * t1391;
t1441 = t1311 * t1488;
t1410 = t1388 * t1240 + t1441;
t1445 = t1385 * t1269;
t1511 = t1386 * t1410 - t1445;
t1444 = t1386 * t1269;
t1512 = t1385 * t1410 + t1444;
t1529 = -t1389 * t1512 + t1392 * t1511;
t1556 = -t1393 * t1194 + t1390 * t1529;
t1525 = (t1311 * t1388 + t1313 * t1391) * t1341;
t1277 = t1313 * t1489;
t1419 = t1277 - t1441;
t1510 = t1385 * t1300 + t1386 * t1419;
t1513 = -t1386 * t1300 + t1385 * t1419;
t1531 = -t1389 * t1513 + t1392 * t1510;
t1555 = t1390 * t1531 + t1393 * t1525;
t1554 = t1390 * t1194 + t1393 * t1529;
t1553 = -t1390 * t1525 + t1393 * t1531;
t1518 = t1310 + t1506;
t1552 = pkin(3) * t1518;
t1301 = t1347 * t1345;
t1515 = qJDD(2) - t1301;
t1551 = t1385 * t1515;
t1550 = t1385 * t1518;
t1546 = t1386 * t1515;
t1545 = t1386 * t1518;
t1494 = qJD(2) * t1347;
t1270 = t1434 + t1494;
t1197 = t1388 * t1241 + t1313 * t1488;
t1198 = t1391 * t1241 - t1277;
t1420 = t1386 * t1198 + t1445;
t1421 = t1385 * t1198 - t1444;
t1509 = -t1389 * t1421 + t1392 * t1420;
t1535 = -t1393 * t1197 + t1390 * t1509;
t1532 = t1390 * t1197 + t1393 * t1509;
t1530 = t1389 * t1510 + t1392 * t1513;
t1528 = t1389 * t1511 + t1392 * t1512;
t1493 = qJD(3) * t1345;
t1335 = -0.2e1 * t1493;
t1365 = t1393 * g(1) + t1390 * g(2);
t1394 = qJD(1) ^ 2;
t1401 = -t1394 * pkin(1) + qJDD(1) * pkin(6) - t1365;
t1325 = -t1389 * g(3) + t1392 * t1401;
t1383 = t1392 ^ 2;
t1380 = t1383 * t1394;
t1507 = qJD(2) ^ 2;
t1372 = -t1380 - t1507;
t1259 = t1372 * pkin(2) + t1378 * qJ(3) + t1325;
t1399 = t1389 * t1401;
t1465 = t1389 * t1394;
t1497 = qJD(1) * qJD(2);
t1395 = -t1399 - t1355 * qJ(3) + qJDD(2) * pkin(2) + (pkin(2) * t1465 + qJ(3) * t1497 - g(3)) * t1392;
t1452 = t1386 * t1259 + t1385 * t1395;
t1165 = t1335 + t1452;
t1291 = t1345 * pkin(3) - t1347 * pkin(7);
t1135 = -t1507 * pkin(3) + qJDD(2) * pkin(7) - t1345 * t1291 + t1165;
t1364 = t1390 * g(1) - t1393 * g(2);
t1412 = qJDD(1) * pkin(1) + t1364;
t1266 = (t1383 * qJ(3) + pkin(6)) * t1394 - pkin(2) * t1422 - qJDD(3) - (qJD(2) * pkin(2) - qJ(3) * t1496) * t1496 + t1412;
t1339 = qJD(2) * t1345;
t1273 = -t1339 + t1303;
t1156 = t1270 * pkin(3) - t1273 * pkin(7) - t1266;
t1072 = t1388 * t1135 - t1391 * t1156;
t1073 = t1391 * t1135 + t1388 * t1156;
t1020 = t1388 * t1072 + t1391 * t1073;
t1491 = qJD(5) * t1341;
t1328 = 0.2e1 * t1491;
t1263 = t1311 * pkin(4) - t1313 * qJ(5);
t1418 = -pkin(4) * t1505 + t1300 * qJ(5) - t1311 * t1263 + t1073;
t1058 = t1328 + t1418;
t1060 = -t1300 * pkin(4) - qJ(5) * t1505 + t1313 * t1263 + qJDD(5) + t1072;
t1009 = t1391 * t1058 + t1388 * t1060;
t1436 = t1385 * t1259 - t1386 * t1395;
t1411 = -qJDD(2) * pkin(3) - t1507 * pkin(7) + t1436;
t1134 = (0.2e1 * qJD(3) + t1291) * t1347 + t1411;
t1514 = t1240 * pkin(4) - t1563;
t1064 = (pkin(4) * t1341 - 0.2e1 * qJD(5)) * t1313 + t1134 + t1514;
t1403 = pkin(7) * t1009 + (-pkin(4) * t1391 + t1564) * t1064;
t994 = t1385 * t1009 - t1386 * t1064;
t1517 = pkin(2) * t994 + t1403;
t1508 = t1389 * t1420 + t1392 * t1421;
t1343 = t1345 ^ 2;
t1344 = t1347 ^ 2;
t1492 = qJD(3) * t1347;
t1164 = t1436 + 0.2e1 * t1492;
t1094 = -t1386 * t1164 + t1385 * t1165;
t1503 = pkin(2) * t1094;
t1272 = -t1434 + t1494;
t1274 = t1339 + t1303;
t1213 = t1385 * t1272 - t1386 * t1274;
t1502 = pkin(2) * t1213;
t1292 = -t1343 - t1507;
t1228 = t1385 * t1292 + t1546;
t1501 = pkin(2) * t1228;
t1500 = pkin(3) * t1385;
t1498 = qJ(5) * t1391;
t1487 = t1345 * t1385;
t1486 = t1345 * t1386;
t1485 = t1347 * t1385;
t1484 = t1347 * t1386;
t1382 = t1389 ^ 2;
t1483 = t1382 * t1394;
t1481 = t1385 * t1266;
t1295 = qJDD(2) + t1301;
t1480 = t1385 * t1295;
t1477 = t1386 * t1266;
t1476 = t1386 * t1295;
t1130 = t1388 * t1134;
t1474 = t1388 * t1522;
t1469 = t1389 * t1094;
t1349 = t1394 * pkin(6) + t1412;
t1468 = t1389 * t1349;
t1373 = t1392 * t1465;
t1362 = qJDD(2) + t1373;
t1467 = t1389 * t1362;
t1363 = qJDD(2) - t1373;
t1466 = t1389 * t1363;
t1131 = t1391 * t1134;
t1462 = t1391 * t1522;
t1457 = t1392 * t1094;
t1456 = t1392 * t1349;
t1356 = t1378 - 0.2e1 * t1443;
t1314 = t1392 * t1356;
t1455 = t1392 * t1363;
t1453 = -pkin(3) * t1134 + pkin(7) * t1020;
t1451 = t1382 + t1383;
t1449 = t1390 * qJDD(1);
t1448 = t1393 * qJDD(1);
t1447 = t1393 * qJDD(2);
t1446 = -pkin(3) * t1386 - pkin(2);
t1442 = t1390 * t1301;
t1440 = t1393 * t1301;
t1211 = (qJD(4) + t1341) * t1311 + t1415;
t1439 = pkin(3) * t1211 + t1130 + t1592;
t1438 = -pkin(3) * t1524 - t1131 + t1566;
t1095 = t1385 * t1164 + t1386 * t1165;
t1324 = t1392 * g(3) + t1399;
t1262 = t1389 * t1324 + t1392 * t1325;
t1433 = -t1390 * t1364 - t1393 * t1365;
t1432 = t1390 * t1373;
t1431 = t1393 * t1373;
t1026 = pkin(4) * t1518 + t1058;
t1032 = qJ(5) * t1518 + t1060;
t1123 = -t1391 * t1204 + t1474;
t1430 = pkin(7) * t1123 + t1391 * t1026 + t1388 * t1032 + t1552;
t1206 = (-qJD(4) + t1341) * t1313 + t1435;
t1125 = t1391 * t1206 + t1474;
t1429 = pkin(7) * t1125 + t1020 + t1552;
t1011 = t1385 * t1020 - t1386 * t1134;
t1428 = pkin(2) * t1011 + t1453;
t1332 = -t1344 - t1507;
t1244 = t1386 * t1332 - t1480;
t1427 = pkin(2) * t1244 - t1452;
t1359 = -t1390 * t1394 + t1448;
t1426 = -pkin(5) * t1359 - t1390 * g(3);
t1425 = -pkin(4) * t1060 + qJ(5) * t1058;
t1424 = -pkin(4) * t1522 - qJ(5) * t1204;
t1019 = -t1391 * t1072 + t1388 * t1073;
t1261 = t1392 * t1324 - t1389 * t1325;
t1416 = t1393 * t1364 - t1390 * t1365;
t1414 = t1438 + t1578;
t1104 = t1386 * t1211 + t1591;
t1413 = pkin(2) * t1104 + t1439;
t1337 = -0.2e1 * t1492;
t1398 = 0.2e1 * qJD(5) * t1313 - t1347 * t1291 + t1337 - t1411 - t1514;
t1041 = -pkin(4) * t1287 + t1398 + t1563;
t1409 = pkin(3) * t1523 + pkin(4) * t1461 + t1388 * t1041 - t1592;
t1086 = t1385 * t1123 + t1545;
t1408 = pkin(2) * t1086 + t1430;
t1087 = t1385 * t1125 + t1545;
t1407 = pkin(2) * t1087 + t1429;
t1042 = (-t1524 - t1287) * pkin(4) + t1398;
t1406 = t1391 * t1042 + t1564 * t1524 + t1566;
t1096 = t1386 * t1523 - t1591;
t1404 = pkin(2) * t1096 + t1409;
t1402 = t1406 + t1578;
t1400 = pkin(4) * t1237 + qJ(5) * t1520 + t1418;
t1396 = pkin(4) * t1521 + qJ(5) * t1516 - t1060;
t1376 = t1390 * qJDD(2);
t1371 = t1380 - t1507;
t1370 = -t1483 - t1507;
t1369 = -t1483 + t1507;
t1361 = -t1380 + t1483;
t1360 = t1380 + t1483;
t1358 = t1393 * t1394 + t1449;
t1357 = t1451 * qJDD(1);
t1354 = 0.2e1 * t1375 + t1450;
t1352 = t1392 * t1362;
t1351 = t1451 * t1497;
t1342 = -pkin(5) * t1358 + t1393 * g(3);
t1331 = -t1344 + t1507;
t1330 = t1343 - t1507;
t1327 = t1392 * t1355 - t1382 * t1497;
t1326 = -t1383 * t1497 + t1389 * t1422;
t1323 = -t1389 * t1370 - t1455;
t1322 = -t1389 * t1369 + t1352;
t1321 = t1392 * t1372 - t1467;
t1320 = t1392 * t1371 - t1466;
t1319 = t1392 * t1370 - t1466;
t1318 = t1392 * t1369 + t1467;
t1317 = t1389 * t1372 + t1352;
t1316 = t1389 * t1371 + t1455;
t1315 = (t1355 + t1375) * t1389;
t1305 = -t1389 * t1354 + t1314;
t1304 = t1392 * t1354 + t1389 * t1356;
t1299 = t1344 - t1343;
t1285 = (t1485 - t1486) * qJD(2);
t1284 = (-t1484 - t1487) * qJD(2);
t1279 = -pkin(6) * t1319 - t1456;
t1278 = -pkin(6) * t1317 - t1468;
t1276 = -pkin(1) * t1319 + t1325;
t1275 = -pkin(1) * t1317 + t1324;
t1267 = -t1343 - t1344;
t1258 = -qJD(2) * t1485 + t1386 * t1303;
t1257 = qJD(2) * t1484 + t1385 * t1303;
t1256 = qJD(2) * t1486 + t1385 * t1434;
t1255 = qJD(2) * t1487 - t1386 * t1434;
t1253 = pkin(1) * t1356 + pkin(6) * t1321 + t1456;
t1252 = -pkin(1) * t1354 + pkin(6) * t1323 - t1468;
t1247 = -t1385 * t1332 - t1476;
t1246 = -t1385 * t1331 + t1546;
t1245 = t1386 * t1330 - t1480;
t1243 = t1386 * t1331 + t1551;
t1242 = t1385 * t1330 + t1476;
t1235 = pkin(1) * t1349 + pkin(6) * t1262;
t1232 = pkin(1) * t1360 + pkin(6) * t1357 + t1262;
t1229 = t1386 * t1292 - t1551;
t1217 = -t1389 * t1284 + t1392 * t1285;
t1216 = t1392 * t1284 + t1389 * t1285;
t1215 = t1386 * t1272 + t1385 * t1274;
t1214 = -t1386 * t1270 - t1385 * t1273;
t1212 = -t1385 * t1270 + t1386 * t1273;
t1192 = -qJ(3) * t1244 - t1477;
t1188 = -t1389 * t1257 + t1392 * t1258;
t1187 = -t1389 * t1255 + t1392 * t1256;
t1186 = t1392 * t1257 + t1389 * t1258;
t1185 = t1392 * t1255 + t1389 * t1256;
t1184 = -t1389 * t1244 + t1392 * t1247;
t1183 = -t1389 * t1243 + t1392 * t1246;
t1182 = -t1389 * t1242 + t1392 * t1245;
t1181 = t1392 * t1244 + t1389 * t1247;
t1180 = t1392 * t1243 + t1389 * t1246;
t1179 = t1392 * t1242 + t1389 * t1245;
t1166 = -qJ(3) * t1228 - t1481;
t1147 = -t1389 * t1228 + t1392 * t1229;
t1146 = t1392 * t1228 + t1389 * t1229;
t1145 = -pkin(2) * t1273 + qJ(3) * t1247 - t1481;
t1136 = -pkin(2) * t1270 + qJ(3) * t1229 + t1477;
t1129 = -t1389 * t1213 + t1392 * t1215;
t1128 = -t1389 * t1212 + t1392 * t1214;
t1127 = t1392 * t1213 + t1389 * t1215;
t1126 = t1392 * t1212 + t1389 * t1214;
t1121 = t1388 * t1206 - t1462;
t1119 = -t1388 * t1204 - t1462;
t1106 = -t1385 * t1211 + t1590;
t1098 = -t1385 * t1523 - t1590;
t1089 = t1386 * t1125 - t1550;
t1088 = t1386 * t1123 - t1550;
t1085 = -pkin(1) * t1127 - t1502;
t1084 = -pkin(1) * t1181 + t1335 - t1427;
t1083 = pkin(2) * t1266 + qJ(3) * t1095;
t1082 = t1131 + t1593;
t1069 = t1130 - t1565;
t1068 = -pkin(1) * t1146 + t1164 - t1501;
t1067 = -qJ(3) * t1213 - t1094;
t1066 = -pkin(6) * t1181 - t1389 * t1145 + t1392 * t1192;
t1065 = -pkin(2) * t1267 + qJ(3) * t1215 + t1095;
t1062 = -pkin(3) * t1119 - t1424;
t1061 = -pkin(1) * t1273 + pkin(6) * t1184 + t1392 * t1145 + t1389 * t1192;
t1059 = -pkin(6) * t1146 - t1389 * t1136 + t1392 * t1166;
t1057 = t1073 + t1595;
t1048 = t1072 - t1567;
t1047 = -pkin(1) * t1270 + pkin(6) * t1147 + t1392 * t1136 + t1389 * t1166;
t1045 = -t1389 * t1104 + t1392 * t1106;
t1043 = t1392 * t1104 + t1389 * t1106;
t1037 = -t1389 * t1096 + t1392 * t1098;
t1035 = t1392 * t1096 + t1389 * t1098;
t1034 = t1392 * t1095 - t1469;
t1033 = t1389 * t1095 + t1457;
t1024 = -t1389 * t1087 + t1392 * t1089;
t1023 = -t1389 * t1086 + t1392 * t1088;
t1022 = t1392 * t1087 + t1389 * t1089;
t1021 = t1392 * t1086 + t1389 * t1088;
t1017 = -t1396 - t1567;
t1016 = -t1400 - 0.2e1 * t1491 - t1595;
t1015 = -t1388 * t1042 - t1498 * t1524 - t1565;
t1014 = -pkin(4) * t1473 + t1391 * t1041 - t1593;
t1013 = -pkin(1) * t1033 - t1503;
t1012 = t1386 * t1020 + t1385 * t1134;
t1010 = -pkin(7) * t1121 - t1019;
t1008 = t1388 * t1058 - t1391 * t1060;
t1006 = -pkin(6) * t1127 - t1389 * t1065 + t1392 * t1067;
t1005 = -pkin(1) * t1267 + pkin(6) * t1129 + t1392 * t1065 + t1389 * t1067;
t1004 = -qJ(3) * t1104 - t1385 * t1057 + t1386 * t1082;
t1003 = -t1385 * t1048 + t1386 * t1069 - t1577;
t1002 = -pkin(6) * t1033 - qJ(3) * t1457 - t1389 * t1083;
t1001 = pkin(1) * t1266 + pkin(6) * t1034 - qJ(3) * t1469 + t1392 * t1083;
t1000 = -pkin(1) * t1043 - t1413;
t999 = qJ(3) * t1106 + t1386 * t1057 + t1385 * t1082 + t1596;
t998 = -t1414 - t1597;
t997 = t1386 * t1048 + t1385 * t1069 + t1574;
t996 = -pkin(7) * t1119 - t1388 * t1026 + t1391 * t1032;
t995 = t1386 * t1009 + t1385 * t1064;
t993 = -qJ(3) * t1087 + t1386 * t1010 + t1121 * t1500;
t992 = qJ(3) * t1089 + t1385 * t1010 + t1446 * t1121;
t991 = -t1402 - t1597;
t990 = -pkin(1) * t1035 - t1404;
t989 = -t1389 * t1011 + t1392 * t1012;
t988 = t1392 * t1011 + t1389 * t1012;
t987 = t1386 * t1015 - t1385 * t1017 - t1577;
t986 = -pkin(7) * t1008 + (pkin(4) * t1388 - t1498) * t1064;
t985 = -qJ(3) * t1096 + t1386 * t1014 - t1385 * t1016;
t984 = -pkin(1) * t1022 - t1407;
t983 = -pkin(3) * t1008 - t1425;
t982 = t1385 * t1015 + t1386 * t1017 + t1574;
t981 = qJ(3) * t1098 + t1385 * t1014 + t1386 * t1016 - t1596;
t980 = -qJ(3) * t1086 - t1385 * t1062 + t1386 * t996;
t979 = -qJ(3) * t1011 + (-pkin(7) * t1386 + t1500) * t1019;
t978 = -pkin(2) * t1119 + qJ(3) * t1088 + t1386 * t1062 + t1385 * t996;
t977 = -pkin(1) * t1021 - t1408;
t976 = -t1389 * t994 + t1392 * t995;
t975 = t1389 * t995 + t1392 * t994;
t974 = -pkin(6) * t1043 + t1392 * t1004 - t1389 * t999;
t973 = t1392 * t1003 - t1389 * t997 - t1594;
t972 = qJ(3) * t1012 + (-pkin(7) * t1385 + t1446) * t1019;
t971 = pkin(6) * t1045 + t1389 * t1004 + t1392 * t999 + t1598;
t970 = t1389 * t1003 + t1392 * t997 + t1583;
t969 = -pkin(1) * t988 - t1428;
t968 = -pkin(6) * t1022 - t1389 * t992 + t1392 * t993;
t967 = -pkin(1) * t1121 + pkin(6) * t1024 + t1389 * t993 + t1392 * t992;
t966 = -t1389 * t982 + t1392 * t987 - t1594;
t965 = -pkin(6) * t1035 - t1389 * t981 + t1392 * t985;
t964 = t1389 * t987 + t1392 * t982 + t1583;
t963 = pkin(6) * t1037 + t1389 * t985 + t1392 * t981 - t1598;
t962 = -pkin(6) * t1021 - t1389 * t978 + t1392 * t980;
t961 = -qJ(3) * t994 - t1385 * t983 + t1386 * t986;
t960 = -pkin(1) * t1119 + pkin(6) * t1023 + t1389 * t980 + t1392 * t978;
t959 = -pkin(2) * t1008 + qJ(3) * t995 + t1385 * t986 + t1386 * t983;
t958 = -pkin(1) * t975 - t1517;
t957 = -pkin(6) * t988 - t1389 * t972 + t1392 * t979;
t956 = -pkin(1) * t1019 + pkin(6) * t989 + t1389 * t979 + t1392 * t972;
t955 = -pkin(6) * t975 - t1389 * t959 + t1392 * t961;
t954 = -pkin(1) * t1008 + pkin(6) * t976 + t1389 * t961 + t1392 * t959;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1359, 0, -t1358, 0, t1426, -t1342, -t1416, -pkin(5) * t1416, t1393 * t1327 - t1432, t1393 * t1305 + t1390 * t1361, t1393 * t1322 + t1389 * t1449, t1393 * t1326 + t1432, t1393 * t1320 + t1390 * t1378, t1393 * t1351 + t1376, t1393 * t1278 - t1390 * t1275 - pkin(5) * (t1390 * t1321 + t1393 * t1356), t1393 * t1279 - t1390 * t1276 - pkin(5) * (t1390 * t1323 - t1393 * t1354), t1393 * t1261 - pkin(5) * (t1390 * t1357 + t1393 * t1360), -pkin(5) * (t1390 * t1262 + t1393 * t1349) - (t1390 * pkin(1) - t1393 * pkin(6)) * t1261, t1393 * t1188 + t1442, t1393 * t1128 + t1390 * t1299, t1393 * t1183 + t1390 * t1274, t1393 * t1187 - t1442, t1393 * t1182 + t1272 * t1390, t1393 * t1217 + t1376, t1393 * t1059 - t1390 * t1068 - pkin(5) * (t1390 * t1147 - t1393 * t1270), t1393 * t1066 - t1390 * t1084 - pkin(5) * (t1390 * t1184 - t1393 * t1273), t1393 * t1006 - t1390 * t1085 - pkin(5) * (t1390 * t1129 - t1393 * t1267), t1393 * t1002 - t1390 * t1013 - pkin(5) * (t1390 * t1034 + t1393 * t1266), t1532, t1603, t1599, t1554, -t1601, t1553, -t1390 * t998 + t1393 * t973 - t1582, t1393 * t974 - t1390 * t1000 - pkin(5) * (t1390 * t1045 + t1585), t1393 * t968 - t1390 * t984 - pkin(5) * (t1390 * t1024 - t1393 * t1121), t1393 * t957 - t1390 * t969 - pkin(5) * (-t1393 * t1019 + t1390 * t989), t1532, t1599, -t1603, t1553, t1601, t1554, -t1390 * t991 + t1393 * t966 - t1582, t1393 * t962 - t1390 * t977 - pkin(5) * (t1390 * t1023 - t1393 * t1119), t1393 * t965 - t1390 * t990 - pkin(5) * (t1390 * t1037 - t1585), t1393 * t955 - t1390 * t958 - pkin(5) * (-t1393 * t1008 + t1390 * t976); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1358, 0, t1359, 0, t1342, t1426, t1433, pkin(5) * t1433, t1390 * t1327 + t1431, t1390 * t1305 - t1393 * t1361, t1390 * t1322 - t1389 * t1448, t1390 * t1326 - t1431, t1390 * t1320 - t1392 * t1448, t1390 * t1351 - t1447, t1390 * t1278 + t1393 * t1275 + pkin(5) * (t1393 * t1321 - t1390 * t1356), t1390 * t1279 + t1393 * t1276 + pkin(5) * (t1393 * t1323 + t1390 * t1354), t1390 * t1261 + pkin(5) * (t1393 * t1357 - t1390 * t1360), pkin(5) * (t1393 * t1262 - t1390 * t1349) - (-t1393 * pkin(1) - t1390 * pkin(6)) * t1261, t1390 * t1188 - t1440, t1390 * t1128 - t1393 * t1299, t1390 * t1183 - t1393 * t1274, t1390 * t1187 + t1440, t1390 * t1182 - t1272 * t1393, t1390 * t1217 - t1447, t1390 * t1059 + t1393 * t1068 + pkin(5) * (t1393 * t1147 + t1390 * t1270), t1390 * t1066 + t1393 * t1084 + pkin(5) * (t1393 * t1184 + t1390 * t1273), t1390 * t1006 + t1393 * t1085 + pkin(5) * (t1393 * t1129 + t1390 * t1267), t1390 * t1002 + t1393 * t1013 + pkin(5) * (t1393 * t1034 - t1390 * t1266), t1535, t1604, t1600, t1556, -t1602, t1555, t1390 * t973 + t1393 * t998 + t1581, t1390 * t974 + t1393 * t1000 + pkin(5) * (t1393 * t1045 - t1588), t1390 * t968 + t1393 * t984 + pkin(5) * (t1393 * t1024 + t1390 * t1121), t1390 * t957 + t1393 * t969 + pkin(5) * (t1390 * t1019 + t1393 * t989), t1535, t1600, -t1604, t1555, t1602, t1556, t1390 * t966 + t1393 * t991 + t1581, t1390 * t962 + t1393 * t977 + pkin(5) * (t1393 * t1023 + t1390 * t1119), t1390 * t965 + t1393 * t990 + pkin(5) * (t1393 * t1037 + t1588), t1390 * t955 + t1393 * t958 + pkin(5) * (t1390 * t1008 + t1393 * t976); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1364, t1365, 0, 0, t1315, t1304, t1318, t1314, t1316, 0, t1253, t1252, t1232, t1235, t1186, t1126, t1180, t1185, t1179, t1216, t1047, t1061, t1005, t1001, t1508, -t1027, t1579, t1528, t1052, t1530, t970, t971, t967, t956, t1508, t1579, t1027, t1530, -t1052, t1528, t964, t960, t963, t954; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1394, 0, 0, -g(3), -t1364, 0, t1327, t1305, t1322, t1326, t1320, t1351, t1278, t1279, t1261, pkin(6) * t1261, t1188, t1128, t1183, t1187, t1182, t1217, t1059, t1066, t1006, t1002, t1509, t1030, t1580, t1529, -t1055, t1531, t973, t974, t968, t957, t1509, t1580, -t1030, t1531, t1055, t1529, t966, t962, t965, t955; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1394, 0, qJDD(1), 0, g(3), 0, -t1365, 0, t1373, -t1361, -t1450, -t1373, -t1378, -qJDD(2), t1275, t1276, 0, pkin(1) * t1261, -t1301, -t1299, -t1274, t1301, -t1272, -qJDD(2), t1068, t1084, t1085, t1013, -t1197, -t1120, -t1560, -t1194, -t1170, t1525, t998, t1000, t984, t969, -t1197, -t1560, t1120, t1525, t1170, -t1194, t991, t977, t990, t958; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1364, t1365, 0, 0, t1315, t1304, t1318, t1314, t1316, 0, t1253, t1252, t1232, t1235, t1186, t1126, t1180, t1185, t1179, t1216, t1047, t1061, t1005, t1001, t1508, -t1027, t1579, t1528, t1052, t1530, t970, t971, t967, t956, t1508, t1579, t1027, t1530, -t1052, t1528, t964, t960, t963, t954; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1355, t1356, t1362, -t1375, t1371, t1375, 0, -t1349, t1324, 0, t1258, t1214, t1246, t1256, t1245, t1285, t1166, t1192, t1067, -qJ(3) * t1094, t1420, -t1092, t1572, t1511, t1115, t1510, t1003, t1004, t993, t979, t1420, t1572, t1092, t1510, -t1115, t1511, t987, t980, t985, t961; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1443, t1354, t1369, -t1422, t1363, -t1443, t1349, 0, t1325, 0, t1257, t1212, t1243, t1255, t1242, t1284, t1136, t1145, t1065, t1083, t1421, -t1090, t1573, t1512, t1111, t1513, t997, t999, t992, t972, t1421, t1573, t1090, t1513, -t1111, t1512, t982, t978, t981, t959; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1373, t1361, t1450, t1373, t1378, qJDD(2), -t1324, -t1325, 0, 0, t1301, t1299, t1274, -t1301, t1272, qJDD(2), t1337 - t1436 + t1501, t1427 + 0.2e1 * t1493, t1502, t1503, t1197, t1120, t1560, t1194, t1170, -t1525, t1414, t1413, t1407, t1428, t1197, t1560, -t1120, -t1525, -t1170, t1194, t1402, t1408, t1404, t1517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1303, -t1270, t1515, t1339, t1330, -t1339, 0, -t1266, t1164, 0, t1198, -t1122, t1559, t1410, t1174, t1419, t1069, t1082, t1010, -pkin(7) * t1019, t1198, t1559, t1122, t1419, -t1174, t1410, t1015, t996, t1014, t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1494, t1273, t1331, -t1434, t1295, -t1494, t1266, 0, t1165, 0, -t1269, -t1519, -t1522, t1269, t1204, -t1300, t1048, t1057, -pkin(3) * t1121, -pkin(3) * t1019, -t1269, -t1522, t1519, -t1300, -t1204, t1269, t1017, t1062, t1016, t983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1301, t1299, t1274, -t1301, t1272, qJDD(2), -t1164, -t1165, 0, 0, t1197, t1120, t1560, t1194, t1170, -t1525, t1438, t1439, t1429, t1453, t1197, t1560, -t1120, -t1525, -t1170, t1194, t1406, t1430, t1409, t1403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1241, -t1524, t1521, t1490, t1281, -t1490, 0, t1134, t1072, 0, t1241, t1521, t1524, -t1490, -t1281, t1490, -qJ(5) * t1524, t1032, t1041, -qJ(5) * t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1287, t1523, -t1282, -t1240, t1520, -t1287, -t1134, 0, t1073, 0, t1287, -t1282, -t1523, -t1287, -t1520, -t1240, t1042, t1026, pkin(4) * t1523, -pkin(4) * t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1269, t1519, t1522, -t1269, -t1204, t1300, -t1072, -t1073, 0, 0, t1269, t1522, -t1519, t1300, t1204, -t1269, t1396, t1424, t1328 + t1400, t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1241, t1521, t1524, -t1490, -t1281, t1490, 0, t1060, -t1064, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1269, t1522, -t1519, t1300, t1204, -t1269, -t1060, 0, t1058, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1287, t1282, t1523, t1287, t1520, t1240, t1064, -t1058, 0, 0;];
m_new_reg = t1;
