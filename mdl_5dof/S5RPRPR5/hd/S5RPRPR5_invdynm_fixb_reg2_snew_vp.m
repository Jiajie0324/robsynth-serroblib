% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRPR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:58
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRPR5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR5_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR5_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR5_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR5_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:57:46
% EndTime: 2019-12-05 17:58:06
% DurationCPUTime: 20.50s
% Computational Cost: add. (115607->715), mult. (302492->993), div. (0->0), fcn. (213627->10), ass. (0->490)
t1193 = cos(pkin(8));
t1179 = t1193 * qJD(1) - qJD(3);
t1306 = t1179 ^ 2;
t1190 = sin(pkin(9));
t1191 = sin(pkin(8));
t1192 = cos(pkin(9));
t1195 = sin(qJ(3));
t1198 = cos(qJ(3));
t1135 = (t1190 * t1198 + t1192 * t1195) * t1191 * qJD(1);
t1307 = t1135 ^ 2;
t1075 = -t1306 - t1307;
t1289 = qJD(1) * t1198;
t1250 = t1191 * t1289;
t1274 = t1191 * t1195;
t1251 = qJD(1) * t1274;
t1136 = -t1190 * t1251 + t1192 * t1250;
t1092 = t1136 * t1135;
t1256 = t1193 * qJDD(1);
t1178 = -qJDD(3) + t1256;
t1309 = -t1092 - t1178;
t1314 = t1192 * t1309;
t1012 = t1190 * t1075 + t1314;
t1196 = sin(qJ(1));
t1199 = cos(qJ(1));
t1168 = t1196 * g(2) - t1199 * g(3);
t1200 = qJD(1) ^ 2;
t1150 = -t1200 * pkin(1) + qJDD(1) * qJ(2) + t1168;
t1300 = pkin(2) * t1193;
t1231 = -pkin(6) * t1191 - t1300;
t1304 = 2 * qJD(2);
t1260 = t1231 * qJD(1) + t1304;
t1226 = t1260 * qJD(1) + t1150;
t1298 = t1191 * g(1);
t1086 = t1193 * t1226 - t1298;
t1169 = t1199 * g(2) + t1196 * g(3);
t1212 = -t1200 * qJ(2) + qJDD(2) - t1169;
t1228 = -pkin(1) + t1231;
t1123 = qJDD(1) * t1228 + t1212;
t1110 = t1198 * t1123;
t1183 = t1191 * qJDD(1);
t1175 = t1198 * t1183;
t1142 = -qJD(3) * t1251 + t1175;
t1188 = t1191 ^ 2;
t1283 = t1179 * qJD(1);
t1249 = t1191 * t1283;
t1262 = t1198 * t1200;
t1004 = -t1178 * pkin(3) - t1142 * qJ(4) + t1110 + (-pkin(3) * t1188 * t1262 + qJ(4) * t1249 - t1086) * t1195;
t1039 = t1198 * t1086 + t1195 * t1123;
t1139 = -t1179 * pkin(3) - qJ(4) * t1250;
t1279 = t1188 * t1200;
t1305 = t1195 ^ 2;
t1177 = t1305 * t1279;
t1257 = qJDD(1) * t1195;
t1221 = qJD(3) * t1289 + t1257;
t1215 = t1221 * t1191;
t1007 = -pkin(3) * t1177 - qJ(4) * t1215 + t1179 * t1139 + t1039;
t1229 = -0.2e1 * qJD(4) * t1136 + t1192 * t1004 - t1190 * t1007;
t1316 = pkin(3) * t1012 + t1229;
t1315 = t1190 * t1309;
t1194 = sin(qJ(5));
t1197 = cos(qJ(5));
t1082 = t1197 * t1135 + t1194 * t1136;
t1084 = -t1194 * t1135 + t1197 * t1136;
t1020 = t1084 * t1082;
t1167 = -qJDD(5) + t1178;
t1311 = -t1020 - t1167;
t1313 = t1194 * t1311;
t1312 = t1197 * t1311;
t1152 = t1195 * t1249;
t1114 = t1142 + t1152;
t1103 = t1198 * t1114;
t1095 = t1192 * t1142 - t1190 * t1215;
t1236 = t1190 * t1142 + t1192 * t1215;
t1000 = -t1082 * qJD(5) + t1197 * t1095 - t1194 * t1236;
t1172 = -qJD(5) + t1179;
t1069 = t1082 * t1172;
t1310 = t1069 + t1000;
t1122 = t1135 * t1179;
t1055 = -t1122 + t1095;
t1308 = t1122 + t1095;
t1237 = t1194 * t1095 + t1197 * t1236;
t968 = (qJD(5) + t1172) * t1084 + t1237;
t1079 = t1082 ^ 2;
t1080 = t1084 ^ 2;
t1132 = t1136 ^ 2;
t1166 = t1172 ^ 2;
t1288 = qJD(4) * t1135;
t1127 = -0.2e1 * t1288;
t1258 = t1190 * t1004 + t1192 * t1007;
t935 = t1127 + t1258;
t884 = t1190 * t935 + t1192 * t1229;
t1303 = pkin(3) * t884;
t1282 = t1179 * t1136;
t1051 = t1236 + t1282;
t996 = -t1051 * t1190 - t1192 * t1055;
t1302 = pkin(3) * t996;
t1301 = pkin(2) * t1191;
t1297 = t1193 * g(1);
t1296 = qJDD(1) * pkin(1);
t899 = pkin(4) * t1309 - t1055 * pkin(7) + t1229;
t1108 = -t1179 * pkin(4) - t1136 * pkin(7);
t911 = -t1307 * pkin(4) - pkin(7) * t1236 + t1179 * t1108 + t935;
t863 = t1194 * t911 - t1197 * t899;
t864 = t1194 * t899 + t1197 * t911;
t828 = t1194 * t864 - t1197 * t863;
t1295 = t1190 * t828;
t1294 = t1192 * t828;
t1019 = t1297 + qJDD(4) + pkin(3) * t1215 - qJ(4) * t1177 + (t1150 + (t1139 * t1198 + t1260) * qJD(1)) * t1191;
t954 = pkin(4) * t1236 - t1307 * pkin(7) + t1136 * t1108 + t1019;
t1293 = t1194 * t954;
t1292 = t1195 * t884;
t1291 = t1197 * t954;
t1290 = t1198 * t884;
t1286 = t1172 * t1084;
t1285 = t1172 * t1194;
t1284 = t1172 * t1197;
t1281 = t1179 * t1190;
t1280 = t1179 * t1192;
t1278 = t1190 * t1019;
t1076 = -t1092 + t1178;
t1277 = t1190 * t1076;
t1276 = t1191 * t1178;
t1275 = t1191 * t1193;
t1273 = t1192 * t1019;
t1272 = t1192 * t1076;
t1015 = -t1020 + t1167;
t1271 = t1194 * t1015;
t1085 = t1191 * t1226 + t1297;
t1270 = t1195 * t1085;
t1243 = t1195 * t1262;
t1165 = t1188 * t1243;
t1140 = -t1165 + t1178;
t1269 = t1195 * t1140;
t1141 = -t1165 - t1178;
t1268 = t1195 * t1141;
t1143 = -t1212 + t1296;
t1267 = t1196 * t1143;
t1266 = t1197 * t1015;
t1265 = t1198 * t1085;
t1264 = t1198 * t1140;
t1263 = t1198 * t1141;
t1261 = t1199 * t1143;
t1255 = t1196 * qJDD(1);
t1254 = t1199 * qJDD(1);
t829 = t1194 * t863 + t1197 * t864;
t805 = t1190 * t829 + t1294;
t827 = pkin(4) * t828;
t1253 = pkin(3) * t805 + t827;
t971 = -t1069 + t1000;
t908 = -t1194 * t968 - t1197 * t971;
t910 = t1194 * t971 - t1197 * t968;
t867 = t1190 * t910 + t1192 * t908;
t905 = pkin(4) * t908;
t1252 = pkin(3) * t867 + t905;
t1189 = t1198 ^ 2;
t1248 = t1189 * t1279;
t1247 = t1191 * t1020;
t1246 = t1191 * t1092;
t1245 = t1193 * t1020;
t1244 = t1193 * t1092;
t1242 = t1191 * t1256;
t1241 = t1143 + t1296;
t885 = -t1190 * t1229 + t1192 * t935;
t1240 = qJD(1) * (qJD(3) - t1179);
t1239 = qJD(1) * t1304 + t1150;
t1038 = t1195 * t1086 - t1110;
t987 = t1195 * t1038 + t1198 * t1039;
t1118 = t1239 * t1191 + t1297;
t1119 = t1239 * t1193 - t1298;
t1063 = t1191 * t1118 + t1193 * t1119;
t1187 = t1191 * t1188;
t1235 = t1187 * t1243;
t1234 = -pkin(2) * t1085 + pkin(6) * t987;
t1104 = -t1132 - t1306;
t1022 = t1192 * t1104 + t1277;
t1233 = pkin(3) * t1022 - t1258;
t1014 = -t1166 - t1079;
t952 = t1194 * t1014 + t1312;
t1232 = pkin(4) * t952 - t863;
t1163 = t1199 * t1200 + t1255;
t1230 = pkin(5) * t1163 - t1199 * g(1);
t1227 = t1193 * t1165;
t986 = -t1198 * t1038 + t1195 * t1039;
t1062 = t1193 * t1118 - t1191 * t1119;
t1225 = t1199 * t1168 - t1196 * t1169;
t1224 = -t1196 * t1168 - t1199 * t1169;
t1223 = -t1196 * t1200 + t1254;
t1060 = -t1080 - t1166;
t976 = t1197 * t1060 + t1271;
t1222 = pkin(4) * t976 - t864;
t1202 = t1193 ^ 2;
t1155 = (t1188 + t1202) * t1193 * t1200;
t1220 = -t1196 * t1155 + t1193 * t1254;
t1219 = t1199 * t1155 + t1193 * t1255;
t953 = t1197 * t1014 - t1313;
t893 = t1190 * t953 + t1192 * t952;
t1218 = pkin(3) * t893 + t1232;
t1131 = -t1306 - t1248;
t1088 = -t1195 * t1131 + t1264;
t1115 = t1240 * t1274 - t1175;
t1217 = pkin(2) * t1115 + pkin(6) * t1088 + t1270;
t1146 = -t1177 - t1306;
t1101 = t1198 * t1146 - t1268;
t1153 = t1198 * t1249;
t1113 = t1153 - t1215;
t1216 = pkin(2) * t1113 + pkin(6) * t1101 - t1265;
t979 = -t1194 * t1060 + t1266;
t914 = t1190 * t979 + t1192 * t976;
t1214 = pkin(3) * t914 + t1222;
t1111 = -t1142 + t1152;
t1112 = t1153 + t1215;
t1058 = -t1195 * t1111 - t1198 * t1112;
t1148 = t1177 + t1248;
t1213 = pkin(2) * t1148 + pkin(6) * t1058 + t987;
t806 = t1192 * t829 - t1295;
t817 = -pkin(4) * t954 + pkin(7) * t829;
t789 = -pkin(3) * t954 - pkin(7) * t1295 + qJ(4) * t806 + t1192 * t817;
t792 = -pkin(7) * t1294 - qJ(4) * t805 - t1190 * t817;
t796 = -t1195 * t805 + t1198 * t806;
t1211 = -pkin(2) * t954 + pkin(6) * t796 + t1195 * t792 + t1198 * t789;
t992 = -t1079 - t1080;
t813 = -pkin(4) * t992 + pkin(7) * t910 + t829;
t815 = -pkin(7) * t908 - t828;
t869 = -t1190 * t908 + t1192 * t910;
t799 = -pkin(3) * t992 + qJ(4) * t869 + t1190 * t815 + t1192 * t813;
t800 = -qJ(4) * t867 - t1190 * t813 + t1192 * t815;
t833 = -t1195 * t867 + t1198 * t869;
t1210 = -pkin(2) * t992 + pkin(6) * t833 + t1195 * t800 + t1198 * t799;
t967 = (qJD(5) - t1172) * t1084 + t1237;
t881 = -pkin(4) * t967 + pkin(7) * t953 - t1291;
t894 = -t1190 * t952 + t1192 * t953;
t896 = -pkin(7) * t952 + t1293;
t822 = -pkin(3) * t967 + qJ(4) * t894 + t1190 * t896 + t1192 * t881;
t835 = -qJ(4) * t893 - t1190 * t881 + t1192 * t896;
t857 = -t1195 * t893 + t1198 * t894;
t1209 = -pkin(2) * t967 + pkin(6) * t857 + t1195 * t835 + t1198 * t822;
t883 = -pkin(4) * t1310 + pkin(7) * t979 + t1293;
t906 = -pkin(7) * t976 + t1291;
t915 = -t1190 * t976 + t1192 * t979;
t834 = -pkin(3) * t1310 + qJ(4) * t915 + t1190 * t906 + t1192 * t883;
t837 = -qJ(4) * t914 - t1190 * t883 + t1192 * t906;
t872 = -t1195 * t914 + t1198 * t915;
t1208 = -pkin(2) * t1310 + pkin(6) * t872 + t1195 * t837 + t1198 * t834;
t1050 = t1236 - t1282;
t1013 = t1192 * t1075 - t1315;
t936 = -pkin(3) * t1050 + qJ(4) * t1013 - t1273;
t951 = -t1195 * t1012 + t1198 * t1013;
t956 = -qJ(4) * t1012 + t1278;
t1207 = -pkin(2) * t1050 + pkin(6) * t951 + t1195 * t956 + t1198 * t936;
t1023 = -t1190 * t1104 + t1272;
t939 = -pkin(3) * t1308 + qJ(4) * t1023 + t1278;
t966 = -qJ(4) * t1022 + t1273;
t974 = -t1195 * t1022 + t1198 * t1023;
t1206 = -pkin(2) * t1308 + pkin(6) * t974 + t1195 * t966 + t1198 * t939;
t1064 = -t1132 - t1307;
t998 = -t1051 * t1192 + t1190 * t1055;
t865 = -pkin(3) * t1064 + qJ(4) * t998 + t885;
t870 = -qJ(4) * t996 - t884;
t930 = -t1195 * t996 + t1198 * t998;
t1205 = -pkin(2) * t1064 + pkin(6) * t930 + t1195 * t870 + t1198 * t865;
t841 = t1198 * t885 - t1292;
t879 = -pkin(3) * t1019 + qJ(4) * t885;
t1204 = -pkin(2) * t1019 + pkin(6) * t841 - qJ(4) * t1292 + t1198 * t879;
t1185 = t1202 * t1200;
t1184 = t1202 * qJDD(1);
t1182 = t1188 * qJDD(1);
t1174 = t1200 * t1275;
t1170 = 0.2e1 * t1242;
t1161 = -t1185 + t1279;
t1160 = t1185 + t1279;
t1159 = t1193 * t1178;
t1158 = t1184 - t1182;
t1157 = t1184 + t1182;
t1154 = (t1191 * t1202 + t1187) * t1200;
t1149 = -t1177 + t1248;
t1147 = t1306 - t1248;
t1145 = t1177 - t1306;
t1144 = pkin(5) * t1223 + t1196 * g(1);
t1134 = t1223 * t1275;
t1133 = t1163 * t1275;
t1125 = t1199 * t1154 + t1191 * t1255;
t1124 = -t1196 * t1154 + t1191 * t1254;
t1120 = (-t1189 - t1305) * t1249;
t1117 = -t1132 + t1306;
t1116 = -t1306 + t1307;
t1106 = t1195 * t1142 - t1189 * t1249;
t1105 = (-t1198 * t1221 - t1305 * t1283) * t1191;
t1102 = (t1198 * t1240 + t1257) * t1274;
t1100 = t1198 * t1145 + t1269;
t1099 = -t1195 * t1147 + t1263;
t1098 = t1195 * t1146 + t1263;
t1097 = t1195 * t1145 - t1264;
t1096 = t1198 * t1147 + t1268;
t1094 = -qJ(2) * t1155 + t1241 * t1193;
t1093 = qJ(2) * t1154 - t1241 * t1191;
t1090 = t1132 - t1307;
t1087 = t1198 * t1131 + t1269;
t1074 = t1193 * t1103 + t1235;
t1073 = t1193 * t1102 - t1235;
t1072 = t1191 * t1103 - t1227;
t1071 = t1191 * t1102 + t1227;
t1068 = -t1080 + t1166;
t1067 = t1079 - t1166;
t1066 = (t1135 * t1192 - t1136 * t1190) * t1179;
t1065 = (t1135 * t1190 + t1136 * t1192) * t1179;
t1059 = t1198 * t1113 - t1195 * t1114;
t1057 = t1195 * t1113 + t1103;
t1056 = t1198 * t1111 - t1195 * t1112;
t1049 = t1192 * t1095 + t1136 * t1281;
t1048 = t1190 * t1095 - t1136 * t1280;
t1047 = -t1135 * t1280 + t1190 * t1236;
t1046 = -t1135 * t1281 - t1192 * t1236;
t1045 = t1193 * t1101 - t1191 * t1113;
t1044 = t1193 * t1100 - t1191 * t1112;
t1043 = t1193 * t1099 - t1191 * t1111;
t1042 = t1191 * t1101 + t1193 * t1113;
t1041 = t1191 * t1100 + t1193 * t1112;
t1040 = t1191 * t1099 + t1193 * t1111;
t1036 = t1193 * t1088 - t1191 * t1115;
t1035 = t1191 * t1088 + t1193 * t1115;
t1034 = pkin(1) * t1143 + qJ(2) * t1063;
t1033 = t1192 * t1116 + t1277;
t1032 = -t1190 * t1117 + t1314;
t1031 = t1190 * t1116 - t1272;
t1030 = t1192 * t1117 + t1315;
t1029 = pkin(1) * t1160 + qJ(2) * t1157 + t1063;
t1028 = -pkin(6) * t1098 + t1270;
t1027 = t1193 * t1059 + t1191 * t1149;
t1026 = t1193 * t1058 - t1191 * t1148;
t1025 = t1191 * t1059 - t1193 * t1149;
t1024 = t1191 * t1058 + t1193 * t1148;
t1021 = -pkin(6) * t1087 + t1265;
t1018 = t1080 - t1079;
t1011 = (t1082 * t1197 - t1084 * t1194) * t1172;
t1010 = (t1082 * t1194 + t1084 * t1197) * t1172;
t1009 = -pkin(2) * t1098 + t1038;
t1008 = -pkin(2) * t1087 + t1039;
t1006 = -t1195 * t1065 + t1198 * t1066;
t1005 = t1198 * t1065 + t1195 * t1066;
t999 = -t1084 * qJD(5) - t1237;
t997 = -t1192 * t1050 - t1190 * t1308;
t995 = -t1190 * t1050 + t1192 * t1308;
t994 = t1193 * t1006 - t1276;
t993 = t1191 * t1006 + t1159;
t991 = -t1195 * t1048 + t1198 * t1049;
t990 = -t1195 * t1046 + t1198 * t1047;
t989 = t1198 * t1048 + t1195 * t1049;
t988 = t1198 * t1046 + t1195 * t1047;
t985 = t1197 * t1067 + t1271;
t984 = -t1194 * t1068 + t1312;
t983 = t1194 * t1067 - t1266;
t982 = t1197 * t1068 + t1313;
t981 = -t1195 * t1031 + t1198 * t1033;
t980 = -t1195 * t1030 + t1198 * t1032;
t978 = t1198 * t1031 + t1195 * t1033;
t977 = t1198 * t1030 + t1195 * t1032;
t973 = t1198 * t1022 + t1195 * t1023;
t965 = -pkin(1) * t1042 - t1216;
t964 = t1197 * t1000 + t1084 * t1285;
t963 = t1194 * t1000 - t1084 * t1284;
t962 = -t1082 * t1284 - t1194 * t999;
t961 = -t1082 * t1285 + t1197 * t999;
t960 = t1193 * t991 + t1246;
t959 = t1193 * t990 - t1246;
t958 = t1191 * t991 - t1244;
t957 = t1191 * t990 + t1244;
t955 = -pkin(1) * t1035 - t1217;
t950 = t1191 * t1085 + t1193 * t987;
t949 = t1198 * t1012 + t1195 * t1013;
t948 = -t1193 * t1085 + t1191 * t987;
t946 = -pkin(6) * t1056 - t986;
t945 = -t1190 * t1010 + t1192 * t1011;
t944 = t1192 * t1010 + t1190 * t1011;
t943 = -t1191 * t1051 + t1193 * t981;
t942 = t1191 * t1055 + t1193 * t980;
t941 = t1193 * t1051 + t1191 * t981;
t940 = -t1193 * t1055 + t1191 * t980;
t938 = t1191 * t1308 + t1193 * t974;
t937 = t1191 * t974 - t1193 * t1308;
t933 = t1191 * t1050 + t1193 * t951;
t932 = -t1193 * t1050 + t1191 * t951;
t931 = -qJ(2) * t1042 - t1191 * t1009 + t1193 * t1028;
t929 = -t1195 * t995 + t1198 * t997;
t928 = t1195 * t998 + t1198 * t996;
t927 = t1195 * t997 + t1198 * t995;
t925 = -qJ(2) * t1035 - t1191 * t1008 + t1193 * t1021;
t924 = -pkin(1) * t1098 + qJ(2) * t1045 + t1193 * t1009 + t1191 * t1028;
t923 = -pkin(1) * t1024 - t1213;
t922 = t1191 * t1090 + t1193 * t929;
t921 = -t1193 * t1090 + t1191 * t929;
t920 = -t1190 * t983 + t1192 * t985;
t919 = -t1190 * t982 + t1192 * t984;
t918 = t1190 * t985 + t1192 * t983;
t917 = t1190 * t984 + t1192 * t982;
t916 = -pkin(1) * t1087 + qJ(2) * t1036 + t1193 * t1008 + t1191 * t1021;
t913 = t1191 * t1064 + t1193 * t930;
t912 = -t1193 * t1064 + t1191 * t930;
t909 = -t1194 * t1310 - t1197 * t967;
t907 = -t1194 * t967 + t1197 * t1310;
t904 = -qJ(2) * t1024 + t1056 * t1301 + t1193 * t946;
t903 = -t1190 * t963 + t1192 * t964;
t902 = -t1190 * t961 + t1192 * t962;
t901 = t1190 * t964 + t1192 * t963;
t900 = t1190 * t962 + t1192 * t961;
t897 = -pkin(1) * t948 - t1234;
t895 = -pkin(2) * t928 - t1302;
t892 = qJ(2) * t1026 + t1191 * t946 + (-pkin(1) - t1300) * t1056;
t891 = -t1195 * t944 + t1198 * t945;
t890 = t1195 * t945 + t1198 * t944;
t889 = -t1191 * t1167 + t1193 * t891;
t888 = t1193 * t1167 + t1191 * t891;
t887 = -qJ(2) * t948 + (-pkin(6) * t1193 + t1301) * t986;
t886 = -pkin(2) * t973 + t1127 - t1233;
t882 = -pkin(2) * t949 - t1316;
t880 = -pkin(6) * t973 - t1195 * t939 + t1198 * t966;
t878 = -t1195 * t918 + t1198 * t920;
t877 = -t1195 * t917 + t1198 * t919;
t876 = t1195 * t920 + t1198 * t918;
t875 = t1195 * t919 + t1198 * t917;
t874 = -pkin(6) * t949 - t1195 * t936 + t1198 * t956;
t873 = qJ(2) * t950 + t1228 * t986;
t871 = t1195 * t915 + t1198 * t914;
t868 = -t1190 * t907 + t1192 * t909;
t866 = t1190 * t909 + t1192 * t907;
t861 = -t1195 * t901 + t1198 * t903;
t860 = -t1195 * t900 + t1198 * t902;
t859 = t1195 * t903 + t1198 * t901;
t858 = t1195 * t902 + t1198 * t900;
t856 = t1195 * t894 + t1198 * t893;
t855 = -t1191 * t968 + t1193 * t878;
t854 = t1191 * t971 + t1193 * t877;
t853 = t1191 * t878 + t1193 * t968;
t852 = t1191 * t877 - t1193 * t971;
t851 = t1193 * t861 + t1247;
t850 = t1193 * t860 - t1247;
t849 = t1191 * t861 - t1245;
t848 = t1191 * t860 + t1245;
t847 = t1191 * t1310 + t1193 * t872;
t846 = t1191 * t872 - t1193 * t1310;
t845 = -pkin(1) * t937 - t1206;
t844 = -pkin(1) * t932 - t1207;
t843 = t1191 * t967 + t1193 * t857;
t842 = t1191 * t857 - t1193 * t967;
t840 = t1195 * t885 + t1290;
t839 = t1191 * t1019 + t1193 * t841;
t838 = -t1193 * t1019 + t1191 * t841;
t836 = -qJ(2) * t937 - t1191 * t886 + t1193 * t880;
t832 = -t1195 * t866 + t1198 * t868;
t831 = t1195 * t869 + t1198 * t867;
t830 = t1195 * t868 + t1198 * t866;
t826 = -qJ(2) * t932 - t1191 * t882 + t1193 * t874;
t825 = -pkin(1) * t973 + qJ(2) * t938 + t1191 * t880 + t1193 * t886;
t824 = t1191 * t1018 + t1193 * t832;
t823 = -t1193 * t1018 + t1191 * t832;
t821 = t1191 * t992 + t1193 * t833;
t820 = t1191 * t833 - t1193 * t992;
t819 = -pkin(2) * t840 - t1303;
t818 = -pkin(6) * t928 - t1195 * t865 + t1198 * t870;
t816 = -pkin(1) * t949 + qJ(2) * t933 + t1191 * t874 + t1193 * t882;
t814 = -pkin(2) * t871 - t1214;
t812 = -pkin(1) * t912 - t1205;
t811 = -pkin(2) * t856 - t1218;
t810 = -pkin(6) * t840 - qJ(4) * t1290 - t1195 * t879;
t809 = -qJ(2) * t912 - t1191 * t895 + t1193 * t818;
t808 = -pkin(2) * t831 - t1252;
t807 = -pkin(1) * t928 + qJ(2) * t913 + t1191 * t818 + t1193 * t895;
t804 = -pkin(6) * t871 - t1195 * t834 + t1198 * t837;
t803 = -pkin(1) * t838 - t1204;
t802 = -pkin(6) * t856 - t1195 * t822 + t1198 * t835;
t801 = -pkin(1) * t846 - t1208;
t798 = -pkin(1) * t842 - t1209;
t797 = -qJ(2) * t838 - t1191 * t819 + t1193 * t810;
t795 = t1195 * t806 + t1198 * t805;
t794 = -qJ(2) * t846 - t1191 * t814 + t1193 * t804;
t793 = -pkin(1) * t840 + qJ(2) * t839 + t1191 * t810 + t1193 * t819;
t791 = t1191 * t954 + t1193 * t796;
t790 = t1191 * t796 - t1193 * t954;
t788 = -pkin(1) * t871 + qJ(2) * t847 + t1191 * t804 + t1193 * t814;
t787 = -qJ(2) * t842 - t1191 * t811 + t1193 * t802;
t786 = -pkin(1) * t856 + qJ(2) * t843 + t1191 * t802 + t1193 * t811;
t785 = -pkin(2) * t795 - t1253;
t784 = -pkin(6) * t831 - t1195 * t799 + t1198 * t800;
t783 = -pkin(1) * t820 - t1210;
t782 = -qJ(2) * t820 - t1191 * t808 + t1193 * t784;
t781 = -pkin(1) * t831 + qJ(2) * t821 + t1191 * t784 + t1193 * t808;
t780 = -pkin(6) * t795 - t1195 * t789 + t1198 * t792;
t779 = -pkin(1) * t790 - t1211;
t778 = -qJ(2) * t790 - t1191 * t785 + t1193 * t780;
t777 = -pkin(1) * t795 + qJ(2) * t791 + t1191 * t780 + t1193 * t785;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, qJDD(1), t1169, -t1168, 0, 0, t1182, t1170, 0, t1184, 0, 0, t1094, t1093, t1029, t1034, t1072, t1025, t1040, t1071, t1041, t1159, t924, t916, t892, t873, t958, t921, t940, t957, t941, t993, t816, t825, t807, t793, t849, t823, t852, t848, t853, t888, t786, t788, t781, t777; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, -t1163, 0, -t1223, 0, t1230, t1144, -t1225, -pkin(5) * t1225, -t1133, -t1196 * t1158 + t1199 * t1161, t1124, t1133, t1220, 0, pkin(5) * t1219 - t1199 * t1118 + t1191 * t1267, -pkin(5) * t1125 - t1199 * t1119 + t1193 * t1267, -t1196 * t1062 - pkin(5) * (t1199 * t1157 - t1196 * t1160), -pkin(5) * (t1199 * t1063 - t1267) - (t1199 * pkin(1) + t1196 * qJ(2)) * t1062, -t1196 * t1074 + t1199 * t1106, -t1196 * t1027 + t1199 * t1057, -t1196 * t1043 + t1199 * t1096, -t1196 * t1073 + t1199 * t1105, -t1196 * t1044 + t1199 * t1097, -t1199 * t1120 + t1196 * t1276, -t1196 * t931 - t1199 * t965 - pkin(5) * (t1199 * t1045 + t1196 * t1098), -t1196 * t925 - t1199 * t955 - pkin(5) * (t1199 * t1036 + t1196 * t1087), -t1196 * t904 - t1199 * t923 - pkin(5) * (t1199 * t1026 + t1196 * t1056), -t1196 * t887 - t1199 * t897 - pkin(5) * (t1196 * t986 + t1199 * t950), -t1196 * t960 + t1199 * t989, -t1196 * t922 + t1199 * t927, -t1196 * t942 + t1199 * t977, -t1196 * t959 + t1199 * t988, -t1196 * t943 + t1199 * t978, t1199 * t1005 - t1196 * t994, -t1196 * t826 - t1199 * t844 - pkin(5) * (t1196 * t949 + t1199 * t933), -t1196 * t836 - t1199 * t845 - pkin(5) * (t1196 * t973 + t1199 * t938), -t1196 * t809 - t1199 * t812 - pkin(5) * (t1196 * t928 + t1199 * t913), -t1196 * t797 - t1199 * t803 - pkin(5) * (t1196 * t840 + t1199 * t839), -t1196 * t851 + t1199 * t859, -t1196 * t824 + t1199 * t830, -t1196 * t854 + t1199 * t875, -t1196 * t850 + t1199 * t858, -t1196 * t855 + t1199 * t876, -t1196 * t889 + t1199 * t890, -t1196 * t787 - t1199 * t798 - pkin(5) * (t1196 * t856 + t1199 * t843), -t1196 * t794 - t1199 * t801 - pkin(5) * (t1196 * t871 + t1199 * t847), -t1196 * t782 - t1199 * t783 - pkin(5) * (t1196 * t831 + t1199 * t821), -t1196 * t778 - t1199 * t779 - pkin(5) * (t1196 * t795 + t1199 * t791); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, t1223, 0, -t1163, 0, -t1144, t1230, t1224, pkin(5) * t1224, t1134, t1199 * t1158 + t1196 * t1161, t1125, -t1134, t1219, 0, -pkin(5) * t1220 - t1196 * t1118 - t1191 * t1261, pkin(5) * t1124 - t1196 * t1119 - t1193 * t1261, t1199 * t1062 + pkin(5) * (-t1196 * t1157 - t1199 * t1160), pkin(5) * (-t1196 * t1063 - t1261) - (t1196 * pkin(1) - t1199 * qJ(2)) * t1062, t1199 * t1074 + t1196 * t1106, t1199 * t1027 + t1196 * t1057, t1199 * t1043 + t1196 * t1096, t1199 * t1073 + t1196 * t1105, t1199 * t1044 + t1196 * t1097, -t1196 * t1120 - t1199 * t1276, t1199 * t931 - t1196 * t965 + pkin(5) * (-t1196 * t1045 + t1199 * t1098), t1199 * t925 - t1196 * t955 + pkin(5) * (-t1196 * t1036 + t1199 * t1087), t1199 * t904 - t1196 * t923 + pkin(5) * (-t1196 * t1026 + t1199 * t1056), t1199 * t887 - t1196 * t897 + pkin(5) * (-t1196 * t950 + t1199 * t986), t1196 * t989 + t1199 * t960, t1196 * t927 + t1199 * t922, t1196 * t977 + t1199 * t942, t1196 * t988 + t1199 * t959, t1196 * t978 + t1199 * t943, t1196 * t1005 + t1199 * t994, t1199 * t826 - t1196 * t844 + pkin(5) * (-t1196 * t933 + t1199 * t949), t1199 * t836 - t1196 * t845 + pkin(5) * (-t1196 * t938 + t1199 * t973), t1199 * t809 - t1196 * t812 + pkin(5) * (-t1196 * t913 + t1199 * t928), t1199 * t797 - t1196 * t803 + pkin(5) * (-t1196 * t839 + t1199 * t840), t1196 * t859 + t1199 * t851, t1196 * t830 + t1199 * t824, t1196 * t875 + t1199 * t854, t1196 * t858 + t1199 * t850, t1196 * t876 + t1199 * t855, t1196 * t890 + t1199 * t889, t1199 * t787 - t1196 * t798 + pkin(5) * (-t1196 * t843 + t1199 * t856), t1199 * t794 - t1196 * t801 + pkin(5) * (-t1196 * t847 + t1199 * t871), t1199 * t782 - t1196 * t783 + pkin(5) * (-t1196 * t821 + t1199 * t831), t1199 * t778 - t1196 * t779 + pkin(5) * (-t1196 * t791 + t1199 * t795); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1200, 0, 0, -g(1), -t1169, 0, t1242, t1158, t1154, -t1242, t1155, 0, -t1191 * t1143, -t1193 * t1143, t1062, qJ(2) * t1062, t1074, t1027, t1043, t1073, t1044, -t1276, t931, t925, t904, t887, t960, t922, t942, t959, t943, t994, t826, t836, t809, t797, t851, t824, t854, t850, t855, t889, t787, t794, t782, t778; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1200, 0, qJDD(1), 0, g(1), 0, t1168, 0, t1174, -t1161, -t1183, -t1174, -t1256, 0, t1118, t1119, 0, pkin(1) * t1062, -t1106, -t1057, -t1096, -t1105, -t1097, t1120, t965, t955, t923, t897, -t989, -t927, -t977, -t988, -t978, -t1005, t844, t845, t812, t803, -t859, -t830, -t875, -t858, -t876, -t890, t798, t801, t783, t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1169, -t1168, 0, 0, t1182, t1170, 0, t1184, 0, 0, t1094, t1093, t1029, t1034, t1072, t1025, t1040, t1071, t1041, t1159, t924, t916, t892, t873, t958, t921, t940, t957, t941, t993, t816, t825, t807, t793, t849, t823, t852, t848, t853, t888, t786, t788, t781, t777; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1183, t1256, t1174, 0, t1185, 0, 0, -t1143, t1118, 0, t1103, t1059, t1099, t1102, t1100, 0, t1028, t1021, t946, -pkin(6) * t986, t991, t929, t980, t990, t981, t1006, t874, t880, t818, t810, t861, t832, t877, t860, t878, t891, t802, t804, t784, t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1183, -t1279, t1256, -t1174, 0, t1143, 0, t1119, 0, -t1165, -t1149, t1111, t1165, t1112, t1178, t1009, t1008, -pkin(2) * t1056, -pkin(2) * t986, -t1092, -t1090, -t1055, t1092, t1051, t1178, t882, t886, t895, t819, -t1020, -t1018, -t971, t1020, t968, t1167, t811, t814, t808, t785; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1174, t1161, t1183, t1174, t1256, 0, -t1118, -t1119, 0, 0, t1106, t1057, t1096, t1105, t1097, -t1120, t1216, t1217, t1213, t1234, t989, t927, t977, t988, t978, t1005, t1207, t1206, t1205, t1204, t859, t830, t875, t858, t876, t890, t1209, t1208, t1210, t1211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1142, t1113, t1141, -t1152, t1145, t1152, 0, t1085, t1038, 0, t1049, t997, t1032, t1047, t1033, t1066, t956, t966, t870, -qJ(4) * t884, t903, t868, t919, t902, t920, t945, t835, t837, t800, t792; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1153, t1114, t1147, -t1215, -t1140, t1153, -t1085, 0, t1039, 0, t1048, t995, t1030, t1046, t1031, t1065, t936, t939, t865, t879, t901, t866, t917, t900, t918, t944, t822, t834, t799, t789; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1165, t1149, -t1111, -t1165, -t1112, -t1178, -t1038, -t1039, 0, 0, t1092, t1090, t1055, -t1092, -t1051, -t1178, t1316, t1233 + 0.2e1 * t1288, t1302, t1303, t1020, t1018, t971, -t1020, -t968, -t1167, t1218, t1214, t1252, t1253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1095, -t1050, t1309, -t1122, t1116, t1122, 0, t1019, -t1229, 0, t964, t909, t984, t962, t985, t1011, t896, t906, t815, -pkin(7) * t828; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1282, t1308, t1117, -t1236, -t1076, t1282, -t1019, 0, t935, 0, t963, t907, t982, t961, t983, t1010, t881, t883, t813, t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1092, t1090, t1055, -t1092, -t1051, -t1178, t1229, -t935, 0, 0, t1020, t1018, t971, -t1020, -t968, -t1167, t1232, t1222, t905, t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1000, -t967, t1311, -t1069, t1067, t1069, 0, t954, t863, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1286, t1310, t1068, t999, -t1015, t1286, -t954, 0, t864, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1020, t1018, t971, -t1020, -t968, -t1167, -t863, -t864, 0, 0;];
m_new_reg = t1;
