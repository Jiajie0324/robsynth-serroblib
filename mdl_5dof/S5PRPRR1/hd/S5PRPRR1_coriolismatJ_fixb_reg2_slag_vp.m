% Calculate inertial parameters regressor of coriolis matrix for
% S5PRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d4,d5,theta1,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:43
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRPRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRPRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:43:11
% EndTime: 2019-12-05 15:43:15
% DurationCPUTime: 1.69s
% Computational Cost: add. (3499->104), mult. (7013->145), div. (0->0), fcn. (8205->6), ass. (0->96)
t220 = qJD(4) + qJD(5);
t135 = sin(pkin(9));
t136 = cos(pkin(9));
t138 = sin(qJ(4));
t207 = cos(qJ(4));
t125 = t138 * t135 - t207 * t136;
t127 = t207 * t135 + t138 * t136;
t137 = sin(qJ(5));
t206 = cos(qJ(5));
t149 = t206 * t125 + t137 * t127;
t195 = t149 ^ 2;
t117 = t206 * t127;
t192 = t137 * t125;
t210 = t117 - t192;
t198 = t210 ^ 2;
t216 = t195 - t198;
t219 = t216 * qJD(2);
t211 = t149 * qJD(2);
t217 = t210 * t211;
t202 = pkin(6) + qJ(3);
t152 = t202 * t136;
t153 = t202 * t135;
t109 = t138 * t152 + t207 * t153;
t83 = -t127 * pkin(7) - t109;
t110 = -t138 * t153 + t207 * t152;
t84 = -t125 * pkin(7) + t110;
t44 = -t137 * t84 + t206 * t83;
t215 = t220 * t44;
t212 = qJD(3) * t149;
t172 = t149 * qJD(5);
t141 = qJD(4) * t149 + t172;
t139 = t137 * t83;
t160 = -t139 / 0.2e1;
t163 = t206 * t84;
t45 = t163 + t139;
t123 = t125 ^ 2;
t208 = t127 ^ 2;
t147 = t117 / 0.2e1;
t205 = pkin(4) * t137;
t204 = t127 * pkin(4);
t201 = qJD(4) * pkin(4);
t194 = t149 * t137;
t22 = t195 + t198;
t189 = t22 * qJD(2);
t132 = -t136 * pkin(3) - pkin(2);
t111 = t125 * pkin(4) + t132;
t35 = -t111 * t210 - t149 * t204;
t187 = t35 * qJD(2);
t36 = t111 * t149 - t204 * t210;
t186 = t36 * qJD(2);
t162 = t206 * t210;
t140 = -t194 / 0.2e1 - t162 / 0.2e1;
t40 = (-t127 / 0.2e1 + t140) * pkin(4);
t184 = t40 * qJD(2);
t51 = t127 * t109 - t110 * t125;
t181 = t51 * qJD(2);
t69 = 0.2e1 * t147 - t192;
t179 = t69 * qJD(2);
t85 = t123 - t208;
t178 = t85 * qJD(2);
t98 = t147 - t117 / 0.2e1;
t177 = t98 * qJD(2);
t94 = t98 * qJD(5);
t176 = t210 * qJD(2);
t175 = t210 * qJD(4);
t130 = t135 ^ 2 + t136 ^ 2;
t173 = qJD(2) * t111;
t169 = t210 * qJD(5);
t104 = t123 + t208;
t168 = t104 * qJD(2);
t167 = t125 * qJD(2);
t121 = t125 * qJD(4);
t166 = t127 * qJD(2);
t122 = t127 * qJD(4);
t129 = t130 * qJ(3);
t165 = t129 * qJD(2);
t164 = t130 * qJD(2);
t157 = t149 * t173;
t156 = t210 * t173;
t155 = t125 * t166;
t154 = t125 * t122;
t151 = t206 * qJD(4);
t150 = t206 * qJD(5);
t148 = qJD(2) * t132 + qJD(3);
t7 = t111 * t204;
t146 = t7 * qJD(2);
t10 = -t149 * t45 - t210 * t44;
t144 = t10 * qJD(2);
t15 = t160 + t139 / 0.2e1;
t143 = -t98 * qJD(1) - t15 * qJD(2);
t142 = t69 * qJD(5) + t175;
t93 = t98 * qJD(4);
t46 = -t69 * qJD(4) - t169;
t41 = t204 / 0.2e1 + t140 * pkin(4);
t18 = -t163 + 0.2e1 * t160;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t122, t121, 0, 0, 0, 0, 0, 0, 0, 0, -t142, t141, 0, (-t162 - t194) * t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, t141, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130 * qJD(3), t129 * qJD(3), -t154, t85 * qJD(4), 0, t154, 0, 0, t132 * t122, -t132 * t121, t104 * qJD(3), t51 * qJD(3), -t141 * t210, t220 * t216, 0, (t169 + t175) * t149, 0, 0, -t35 * qJD(4) + t111 * t169, -t36 * qJD(4) - t111 * t172, t22 * qJD(3), t10 * qJD(3) + t7 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, t165, 0, 0, 0, 0, 0, 0, 0, 0, t168, t181, 0, 0, 0, 0, 0, 0, t94, 0, t189, t41 * qJD(4) + t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t155, t178, -t121, t155, -t122, 0, -t110 * qJD(4) + t132 * t166, t109 * qJD(4) - t132 * t167, 0, 0, -t217, t219, -t141, t217, -t142, 0, -qJD(4) * t45 + t18 * qJD(5) - t187, -t186 - t215, (-t137 * t210 + t149 * t206) * t201, t41 * qJD(3) + (t137 * t44 - t206 * t45) * t201 + t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t217, t219, -t141, t217, t46, 0, t98 * qJD(3) + t18 * qJD(4) - t45 * qJD(5) + t156, -t157 - t215, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t164, -t165, 0, 0, 0, 0, 0, 0, t122, -t121, -t168, -t181, 0, 0, 0, 0, 0, 0, t142, -t141, -t189, -t40 * qJD(4) - t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, -t167, 0, 0, 0, 0, 0, 0, 0, 0, t176, -t211, 0, -t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, -t211, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t94, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155, -t178, 0, -t155, 0, 0, -t148 * t127, t148 * t125, 0, 0, t217, -t219, 0, -t217, -t94, 0, -qJD(3) * t210 - t15 * qJD(5) + t187, t186 + t212, 0, t40 * qJD(3) - t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, t167, 0, 0, 0, 0, 0, 0, 0, 0, -t176, t211, 0, t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t205, -pkin(4) * t150, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, 0, -t205 * t220 + t143, (-t151 - t150) * pkin(4), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, -t219, 0, -t217, t93, 0, -t69 * qJD(3) + t15 * qJD(4) - t156, t157 + t212, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t179, t211, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177, 0, t137 * t201 - t143, pkin(4) * t151, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
