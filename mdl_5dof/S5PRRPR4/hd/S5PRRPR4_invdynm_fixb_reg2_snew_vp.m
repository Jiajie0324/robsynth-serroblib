% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PRRPR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d5,theta1,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:24
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PRRPR4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRPR4_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRPR4_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRPR4_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRPR4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRRPR4_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:23:47
% EndTime: 2019-12-05 16:24:04
% DurationCPUTime: 18.13s
% Computational Cost: add. (82846->654), mult. (185929->915), div. (0->0), fcn. (130818->10), ass. (0->444)
t1062 = sin(pkin(9));
t1064 = cos(pkin(9));
t1068 = sin(qJ(3));
t1071 = cos(qJ(3));
t1020 = (t1062 * t1071 + t1064 * t1068) * qJD(2);
t1135 = qJD(2) * t1071;
t1051 = qJD(3) * t1135;
t1117 = t1068 * qJDD(2);
t1030 = t1051 + t1117;
t1160 = qJD(2) ^ 2;
t1047 = t1068 * t1160 * t1071;
t1040 = qJDD(3) + t1047;
t1063 = sin(pkin(8));
t1065 = cos(pkin(8));
t1037 = g(1) * t1063 - g(2) * t1065;
t1038 = g(1) * t1065 + g(2) * t1063;
t1069 = sin(qJ(2));
t1072 = cos(qJ(2));
t1154 = g(3) - qJDD(1);
t1008 = -t1038 * t1072 - t1069 * t1154;
t986 = -pkin(2) * t1160 + qJDD(2) * pkin(6) + t1008;
t948 = t1037 * t1071 + t1068 * t986;
t912 = (-t1030 + t1051) * qJ(4) + t1040 * pkin(3) - t948;
t1136 = qJD(2) * t1068;
t1039 = qJD(3) * pkin(3) - qJ(4) * t1136;
t1158 = t1071 ^ 2;
t1055 = t1158 * t1160;
t1107 = qJD(3) * t1136;
t1115 = t1071 * qJDD(2);
t1088 = -t1107 + t1115;
t951 = -t1037 * t1068 + t1071 * t986;
t913 = -pkin(3) * t1055 + qJ(4) * t1088 - qJD(3) * t1039 + t951;
t1091 = -0.2e1 * qJD(4) * t1020 - t1062 * t913 + t1064 * t912;
t1019 = t1062 * t1136 - t1064 * t1135;
t976 = t1020 * t1019;
t1162 = qJDD(3) - t976;
t1170 = t1064 * t1162;
t1073 = qJD(3) ^ 2;
t1159 = t1019 ^ 2;
t969 = -t1073 - t1159;
t909 = t1062 * t969 + t1170;
t1172 = pkin(3) * t909 + t1091;
t1171 = t1062 * t1162;
t1067 = sin(qJ(5));
t1058 = qJDD(3) + qJDD(5);
t1070 = cos(qJ(5));
t958 = t1019 * t1070 + t1020 * t1067;
t960 = -t1019 * t1067 + t1020 * t1070;
t906 = t960 * t958;
t1166 = -t906 + t1058;
t1169 = t1067 * t1166;
t1168 = t1070 * t1166;
t1087 = 0.2e1 * t1107 - t1115;
t991 = t1087 * t1071;
t1098 = t1030 * t1062 - t1064 * t1088;
t979 = t1030 * t1064 + t1062 * t1088;
t887 = -qJD(5) * t958 - t1067 * t1098 + t1070 * t979;
t1059 = qJD(3) + qJD(5);
t947 = t1059 * t958;
t1167 = -t947 + t887;
t1016 = t1019 * qJD(3);
t1165 = -t979 - t1016;
t1164 = t1063 * t1154;
t1163 = t1065 * t1154;
t1022 = t1065 * t1037;
t1161 = -t1038 * t1063 + t1022;
t1100 = t1067 * t979 + t1070 * t1098;
t853 = (qJD(5) - t1059) * t960 + t1100;
t956 = t958 ^ 2;
t957 = t960 ^ 2;
t1018 = t1020 ^ 2;
t1057 = t1059 ^ 2;
t1134 = qJD(4) * t1019;
t1013 = -0.2e1 * t1134;
t1153 = t1062 * t912 + t1064 * t913;
t839 = t1013 + t1153;
t785 = t1062 * t839 + t1064 * t1091;
t1157 = pkin(3) * t785;
t1130 = t1020 * qJD(3);
t933 = -t1098 + t1130;
t889 = t1062 * t933 + t1064 * t1165;
t1156 = pkin(3) * t889;
t811 = pkin(4) * t1162 + pkin(7) * t1165 + t1091;
t1006 = qJD(3) * pkin(4) - pkin(7) * t1020;
t815 = -pkin(4) * t1159 - pkin(7) * t1098 - qJD(3) * t1006 + t839;
t769 = t1067 * t815 - t1070 * t811;
t770 = t1067 * t811 + t1070 * t815;
t730 = t1067 * t770 - t1070 * t769;
t1152 = t1062 * t730;
t1007 = -t1038 * t1069 + t1072 * t1154;
t985 = -qJDD(2) * pkin(2) - pkin(6) * t1160 + t1007;
t922 = -pkin(3) * t1088 - qJ(4) * t1055 + t1039 * t1136 + qJDD(4) + t985;
t1151 = t1062 * t922;
t971 = qJDD(3) + t976;
t1150 = t1062 * t971;
t1149 = t1064 * t730;
t1148 = t1064 * t922;
t1147 = t1064 * t971;
t858 = pkin(4) * t1098 - pkin(7) * t1159 + t1006 * t1020 + t922;
t1146 = t1067 * t858;
t903 = t906 + t1058;
t1145 = t1067 * t903;
t1144 = t1068 * t785;
t1143 = t1068 * t985;
t1142 = t1070 * t858;
t1141 = t1070 * t903;
t1140 = t1071 * t785;
t1139 = t1071 * t985;
t1138 = t960 * t1059;
t1137 = qJD(2) * qJD(3);
t1132 = t1019 * t1062;
t1131 = t1019 * t1064;
t1129 = t1020 * t1062;
t1128 = t1020 * t1064;
t1127 = t1059 * t1067;
t1126 = t1059 * t1070;
t1060 = t1068 ^ 2;
t1125 = t1060 * t1160;
t1124 = t1063 * t1037;
t1122 = t1068 * t1040;
t1041 = qJDD(3) - t1047;
t1121 = t1068 * t1041;
t1120 = t1071 * t1040;
t1119 = t1071 * t1041;
t1116 = t1069 * qJDD(2);
t1114 = t1072 * qJDD(2);
t1113 = t1072 * qJDD(3);
t1112 = t1060 + t1158;
t1111 = t1069 * t906;
t1110 = t1072 * t906;
t731 = t1067 * t769 + t1070 * t770;
t702 = t1062 * t731 + t1149;
t729 = pkin(4) * t730;
t1109 = pkin(3) * t702 + t729;
t857 = t947 + t887;
t798 = -t1067 * t853 - t1070 * t857;
t800 = t1067 * t857 - t1070 * t853;
t759 = t1062 * t800 + t1064 * t798;
t796 = pkin(4) * t798;
t1108 = pkin(3) * t759 + t796;
t1106 = t1069 * t976;
t1105 = t1072 * t976;
t1032 = t1112 * qJDD(2);
t1035 = t1055 + t1125;
t896 = t1068 * t948 + t1071 * t951;
t1083 = pkin(2) * t1035 + pkin(6) * t1032 + t896;
t983 = t1032 * t1069 + t1035 * t1072;
t859 = -pkin(1) * t983 - t1083;
t984 = t1032 * t1072 - t1035 * t1069;
t1104 = qJ(1) * t984 + t859;
t1033 = t1072 * t1160 + t1116;
t1034 = -t1069 * t1160 + t1114;
t977 = -pkin(1) * t1034 + t1007;
t1103 = qJ(1) * t1033 - t977;
t978 = pkin(1) * t1033 + t1008;
t1102 = qJ(1) * t1034 - t978;
t786 = -t1062 * t1091 + t1064 * t839;
t1099 = t1007 * t1069 + t1008 * t1072;
t1097 = -t1038 * t1065 - t1124;
t1011 = -t1018 - t1073;
t918 = t1011 * t1064 - t1150;
t1096 = pkin(3) * t918 - t1153;
t1095 = t1069 * t1047;
t1094 = t1072 * t1047;
t1093 = -pkin(2) * t985 + pkin(6) * t896;
t901 = -t1057 - t956;
t840 = t1067 * t901 + t1168;
t1092 = pkin(4) * t840 - t769;
t990 = pkin(5) * t1033 - t1037 * t1072;
t1090 = -pkin(5) * t1034 - t1037 * t1069;
t894 = t1068 * t951 - t1071 * t948;
t941 = t1007 * t1072 - t1008 * t1069;
t936 = -t957 - t1057;
t862 = t1070 * t936 - t1145;
t1089 = pkin(4) * t862 - t770;
t841 = t1070 * t901 - t1169;
t787 = t1062 * t841 + t1064 * t840;
t1086 = pkin(3) * t787 + t1092;
t1046 = -t1055 - t1073;
t998 = t1046 * t1071 - t1122;
t1085 = -pkin(2) * t1087 + pkin(6) * t998 - t1139;
t1044 = -t1073 - t1125;
t1000 = -t1044 * t1068 - t1119;
t1029 = 0.2e1 * t1051 + t1117;
t1084 = -pkin(2) * t1029 + pkin(6) * t1000 + t1143;
t863 = -t1067 * t936 - t1141;
t802 = t1062 * t863 + t1064 * t862;
t1082 = pkin(3) * t802 + t1089;
t703 = t1064 * t731 - t1152;
t723 = -pkin(4) * t858 + pkin(7) * t731;
t686 = -pkin(3) * t858 - pkin(7) * t1152 + qJ(4) * t703 + t1064 * t723;
t689 = -pkin(7) * t1149 - qJ(4) * t702 - t1062 * t723;
t692 = -t1068 * t702 + t1071 * t703;
t1081 = -pkin(2) * t858 + pkin(6) * t692 + t1068 * t689 + t1071 * t686;
t883 = -t956 - t957;
t710 = -pkin(4) * t883 + pkin(7) * t800 + t731;
t715 = -pkin(7) * t798 - t730;
t761 = -t1062 * t798 + t1064 * t800;
t695 = -pkin(3) * t883 + qJ(4) * t761 + t1062 * t715 + t1064 * t710;
t696 = -qJ(4) * t759 - t1062 * t710 + t1064 * t715;
t721 = -t1068 * t759 + t1071 * t761;
t1080 = -pkin(2) * t883 + pkin(6) * t721 + t1068 * t696 + t1071 * t695;
t852 = (qJD(5) + t1059) * t960 + t1100;
t773 = -pkin(4) * t852 + pkin(7) * t841 - t1142;
t788 = -t1062 * t840 + t1064 * t841;
t794 = -pkin(7) * t840 + t1146;
t716 = -pkin(3) * t852 + qJ(4) * t788 + t1062 * t794 + t1064 * t773;
t725 = -qJ(4) * t787 - t1062 * t773 + t1064 * t794;
t752 = -t1068 * t787 + t1071 * t788;
t1079 = -pkin(2) * t852 + pkin(6) * t752 + t1068 * t725 + t1071 * t716;
t776 = -pkin(4) * t1167 + pkin(7) * t863 + t1146;
t801 = -pkin(7) * t862 + t1142;
t803 = -t1062 * t862 + t1064 * t863;
t724 = -pkin(3) * t1167 + qJ(4) * t803 + t1062 * t801 + t1064 * t776;
t732 = -qJ(4) * t802 - t1062 * t776 + t1064 * t801;
t763 = -t1068 * t802 + t1071 * t803;
t1078 = -pkin(2) * t1167 + pkin(6) * t763 + t1068 * t732 + t1071 * t724;
t891 = -t1062 * t1165 + t1064 * t933;
t930 = -t1018 - t1159;
t771 = -pkin(3) * t930 + qJ(4) * t891 + t786;
t774 = -qJ(4) * t889 - t785;
t820 = -t1068 * t889 + t1071 * t891;
t1077 = -pkin(2) * t930 + pkin(6) * t820 + t1068 * t774 + t1071 * t771;
t910 = t1064 * t969 - t1171;
t931 = t1098 + t1130;
t824 = -pkin(3) * t931 + qJ(4) * t910 - t1148;
t843 = -t1068 * t909 + t1071 * t910;
t860 = -qJ(4) * t909 + t1151;
t1076 = -pkin(2) * t931 + pkin(6) * t843 + t1068 * t860 + t1071 * t824;
t921 = -t1011 * t1062 - t1147;
t934 = -t1016 + t979;
t833 = -pkin(3) * t934 + qJ(4) * t921 + t1151;
t873 = -t1068 * t918 + t1071 * t921;
t874 = -qJ(4) * t918 + t1148;
t1075 = -pkin(2) * t934 + pkin(6) * t873 + t1068 * t874 + t1071 * t833;
t750 = t1071 * t786 - t1144;
t777 = -pkin(3) * t922 + qJ(4) * t786;
t1074 = -pkin(2) * t922 + pkin(6) * t750 - qJ(4) * t1144 + t1071 * t777;
t1053 = t1069 * qJDD(3);
t1045 = t1055 - t1073;
t1043 = t1073 - t1125;
t1036 = -t1055 + t1125;
t1028 = t1112 * t1137;
t1010 = -t1018 + t1073;
t1009 = -t1073 + t1159;
t1005 = t1028 * t1072 + t1053;
t1004 = t1030 * t1071 - t1060 * t1137;
t1003 = t1028 * t1069 - t1113;
t1002 = -t1068 * t1088 - t1137 * t1158;
t999 = -t1043 * t1068 + t1120;
t997 = t1045 * t1071 - t1121;
t996 = t1044 * t1071 - t1121;
t995 = t1043 * t1071 + t1122;
t994 = t1046 * t1068 + t1120;
t993 = t1045 * t1068 + t1119;
t992 = (t1030 + t1051) * t1068;
t981 = -t1029 * t1068 - t991;
t980 = t1029 * t1071 - t1068 * t1087;
t974 = t1018 - t1159;
t968 = t1004 * t1072 - t1095;
t967 = t1002 * t1072 + t1095;
t966 = t1004 * t1069 + t1094;
t965 = t1002 * t1069 - t1094;
t964 = t1068 * t1116 + t1072 * t999;
t963 = t1069 * t1115 + t1072 * t997;
t962 = -t1068 * t1114 + t1069 * t999;
t961 = t1069 * t997 - t1071 * t1114;
t955 = (t1129 - t1131) * qJD(3);
t954 = (-t1128 - t1132) * qJD(3);
t953 = t1000 * t1072 + t1029 * t1069;
t952 = t1069 * t1087 + t1072 * t998;
t950 = t1000 * t1069 - t1029 * t1072;
t949 = t1069 * t998 - t1072 * t1087;
t945 = -t957 + t1057;
t944 = t956 - t1057;
t938 = t1036 * t1069 + t1072 * t981;
t937 = -t1036 * t1072 + t1069 * t981;
t929 = -pkin(6) * t996 + t1139;
t928 = -pkin(6) * t994 + t1143;
t927 = -qJD(3) * t1129 + t1064 * t979;
t926 = qJD(3) * t1128 + t1062 * t979;
t925 = qJD(3) * t1131 + t1062 * t1098;
t924 = qJD(3) * t1132 - t1064 * t1098;
t923 = pkin(1) * t1037 + pkin(5) * t1099;
t920 = -t1010 * t1062 + t1170;
t919 = t1009 * t1064 - t1150;
t917 = t1010 * t1064 + t1171;
t916 = t1009 * t1062 + t1147;
t915 = -pkin(2) * t996 + t951;
t914 = -pkin(2) * t994 + t948;
t905 = t957 - t956;
t900 = -t1068 * t954 + t1071 * t955;
t899 = t1068 * t955 + t1071 * t954;
t898 = (t1067 * t960 - t1070 * t958) * t1059;
t897 = (-t1067 * t958 - t1070 * t960) * t1059;
t893 = t1072 * t900 + t1053;
t892 = t1069 * t900 - t1113;
t890 = -t1062 * t934 - t1064 * t931;
t888 = -t1062 * t931 + t1064 * t934;
t886 = -qJD(5) * t960 - t1100;
t885 = -pkin(1) * t949 - t1085;
t884 = -pkin(1) * t950 - t1084;
t882 = -t1068 * t926 + t1071 * t927;
t881 = -t1068 * t924 + t1071 * t925;
t880 = t1068 * t927 + t1071 * t926;
t879 = t1068 * t925 + t1071 * t924;
t878 = -pkin(5) * t983 - t1072 * t894;
t877 = pkin(5) * t984 - t1069 * t894;
t876 = t1069 * t985 + t1072 * t896;
t875 = t1069 * t896 - t1072 * t985;
t872 = -t1068 * t917 + t1071 * t920;
t871 = -t1068 * t916 + t1071 * t919;
t870 = t1068 * t921 + t1071 * t918;
t869 = t1068 * t920 + t1071 * t917;
t868 = t1068 * t919 + t1071 * t916;
t867 = t1070 * t944 - t1145;
t866 = -t1067 * t945 + t1168;
t865 = t1067 * t944 + t1141;
t864 = t1070 * t945 + t1169;
t851 = t1072 * t882 + t1106;
t850 = t1072 * t881 - t1106;
t849 = t1069 * t882 - t1105;
t848 = t1069 * t881 + t1105;
t847 = t1070 * t887 - t1127 * t960;
t846 = t1067 * t887 + t1126 * t960;
t845 = -t1067 * t886 + t1126 * t958;
t844 = t1070 * t886 + t1127 * t958;
t842 = t1068 * t910 + t1071 * t909;
t836 = -pkin(5) * t950 - t1069 * t915 + t1072 * t929;
t835 = -pkin(5) * t949 - t1069 * t914 + t1072 * t928;
t832 = t1069 * t934 + t1072 * t873;
t831 = -t1069 * t1165 + t1072 * t872;
t830 = t1069 * t933 + t1072 * t871;
t829 = t1069 * t873 - t1072 * t934;
t828 = t1069 * t872 + t1072 * t1165;
t827 = t1069 * t871 - t1072 * t933;
t826 = -t1062 * t897 + t1064 * t898;
t825 = t1062 * t898 + t1064 * t897;
t823 = -pkin(1) * t996 + pkin(5) * t953 + t1069 * t929 + t1072 * t915;
t822 = -pkin(1) * t994 + pkin(5) * t952 + t1069 * t928 + t1072 * t914;
t821 = t1069 * t931 + t1072 * t843;
t819 = -t1068 * t888 + t1071 * t890;
t818 = t1069 * t843 - t1072 * t931;
t817 = t1068 * t891 + t1071 * t889;
t816 = t1068 * t890 + t1071 * t888;
t814 = -pkin(1) * t875 - t1093;
t813 = t1069 * t974 + t1072 * t819;
t812 = t1069 * t819 - t1072 * t974;
t809 = t1069 * t930 + t1072 * t820;
t808 = t1069 * t820 - t1072 * t930;
t807 = -t1062 * t865 + t1064 * t867;
t806 = -t1062 * t864 + t1064 * t866;
t805 = t1062 * t867 + t1064 * t865;
t804 = t1062 * t866 + t1064 * t864;
t799 = -t1067 * t1167 - t1070 * t852;
t797 = -t1067 * t852 + t1070 * t1167;
t795 = -pkin(5) * t875 + (pkin(2) * t1069 - pkin(6) * t1072) * t894;
t793 = -t1062 * t846 + t1064 * t847;
t792 = -t1062 * t844 + t1064 * t845;
t791 = t1062 * t847 + t1064 * t846;
t790 = t1062 * t845 + t1064 * t844;
t789 = -pkin(2) * t817 - t1156;
t784 = -pkin(2) * t870 + t1013 - t1096;
t783 = -t1068 * t825 + t1071 * t826;
t782 = t1068 * t826 + t1071 * t825;
t781 = t1058 * t1069 + t1072 * t783;
t780 = -t1058 * t1072 + t1069 * t783;
t779 = pkin(5) * t876 + (-pkin(2) * t1072 - pkin(6) * t1069 - pkin(1)) * t894;
t778 = -pkin(2) * t842 - t1172;
t775 = -pkin(6) * t870 - t1068 * t833 + t1071 * t874;
t772 = -pkin(6) * t842 - t1068 * t824 + t1071 * t860;
t767 = -t1068 * t805 + t1071 * t807;
t766 = -t1068 * t804 + t1071 * t806;
t765 = t1068 * t807 + t1071 * t805;
t764 = t1068 * t806 + t1071 * t804;
t762 = t1068 * t803 + t1071 * t802;
t760 = -t1062 * t797 + t1064 * t799;
t758 = t1062 * t799 + t1064 * t797;
t757 = -t1068 * t791 + t1071 * t793;
t756 = -t1068 * t790 + t1071 * t792;
t755 = t1068 * t793 + t1071 * t791;
t754 = t1068 * t792 + t1071 * t790;
t753 = -pkin(1) * t829 - t1075;
t751 = t1068 * t788 + t1071 * t787;
t749 = t1068 * t786 + t1140;
t748 = -t1069 * t853 + t1072 * t767;
t747 = t1069 * t857 + t1072 * t766;
t746 = t1069 * t767 + t1072 * t853;
t745 = t1069 * t766 - t1072 * t857;
t744 = t1069 * t1167 + t1072 * t763;
t743 = t1069 * t763 - t1072 * t1167;
t742 = t1072 * t757 + t1111;
t741 = t1072 * t756 - t1111;
t740 = t1069 * t757 - t1110;
t739 = t1069 * t756 + t1110;
t738 = -pkin(1) * t818 - t1076;
t737 = t1069 * t922 + t1072 * t750;
t736 = t1069 * t750 - t1072 * t922;
t735 = t1069 * t852 + t1072 * t752;
t734 = t1069 * t752 - t1072 * t852;
t733 = -pkin(5) * t829 - t1069 * t784 + t1072 * t775;
t728 = -pkin(2) * t749 - t1157;
t727 = -pkin(1) * t870 + pkin(5) * t832 + t1069 * t775 + t1072 * t784;
t726 = -pkin(5) * t818 - t1069 * t778 + t1072 * t772;
t722 = -pkin(6) * t817 - t1068 * t771 + t1071 * t774;
t720 = -t1068 * t758 + t1071 * t760;
t719 = t1068 * t761 + t1071 * t759;
t718 = t1068 * t760 + t1071 * t758;
t717 = -pkin(1) * t842 + pkin(5) * t821 + t1069 * t772 + t1072 * t778;
t714 = t1069 * t905 + t1072 * t720;
t713 = t1069 * t720 - t1072 * t905;
t712 = t1069 * t883 + t1072 * t721;
t711 = t1069 * t721 - t1072 * t883;
t709 = -pkin(6) * t749 - qJ(4) * t1140 - t1068 * t777;
t708 = -pkin(2) * t762 - t1082;
t707 = -pkin(1) * t808 - t1077;
t706 = -pkin(2) * t751 - t1086;
t705 = -pkin(5) * t808 - t1069 * t789 + t1072 * t722;
t704 = -pkin(1) * t817 + pkin(5) * t809 + t1069 * t722 + t1072 * t789;
t701 = -pkin(2) * t719 - t1108;
t700 = -pkin(1) * t736 - t1074;
t699 = -pkin(6) * t762 - t1068 * t724 + t1071 * t732;
t698 = -pkin(6) * t751 - t1068 * t716 + t1071 * t725;
t697 = -pkin(5) * t736 - t1069 * t728 + t1072 * t709;
t694 = -pkin(1) * t743 - t1078;
t693 = -pkin(1) * t749 + pkin(5) * t737 + t1069 * t709 + t1072 * t728;
t691 = t1068 * t703 + t1071 * t702;
t690 = -pkin(1) * t734 - t1079;
t688 = t1069 * t858 + t1072 * t692;
t687 = t1069 * t692 - t1072 * t858;
t685 = -pkin(5) * t743 - t1069 * t708 + t1072 * t699;
t684 = -pkin(1) * t762 + pkin(5) * t744 + t1069 * t699 + t1072 * t708;
t683 = -pkin(5) * t734 - t1069 * t706 + t1072 * t698;
t682 = -pkin(1) * t751 + pkin(5) * t735 + t1069 * t698 + t1072 * t706;
t681 = -pkin(2) * t691 - t1109;
t680 = -pkin(6) * t719 - t1068 * t695 + t1071 * t696;
t679 = -pkin(1) * t711 - t1080;
t678 = -pkin(5) * t711 - t1069 * t701 + t1072 * t680;
t677 = -pkin(6) * t691 - t1068 * t686 + t1071 * t689;
t676 = -pkin(1) * t719 + pkin(5) * t712 + t1069 * t680 + t1072 * t701;
t675 = -pkin(1) * t687 - t1081;
t674 = -pkin(5) * t687 - t1069 * t681 + t1072 * t677;
t673 = -pkin(1) * t691 + pkin(5) * t688 + t1069 * t677 + t1072 * t681;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1164, -t1163, -t1161, -qJ(1) * t1161, 0, 0, t1065 * t1034, 0, -t1065 * t1033, t1063 * qJDD(2), t1063 * t1103 + t1065 * t1090, t1063 * t1102 + t1065 * t990, t1065 * t941, -qJ(1) * (t1063 * t1099 + t1022) - (pkin(1) * t1063 - pkin(5) * t1065) * t941, t1063 * t992 + t1065 * t968, t1063 * t980 + t1065 * t938, t1063 * t995 + t1065 * t964, -t1063 * t991 + t1065 * t967, t1063 * t993 + t1065 * t963, t1065 * t1005, t1065 * t835 - t1063 * t885 - qJ(1) * (t1063 * t952 - t1065 * t994), t1065 * t836 - t1063 * t884 - qJ(1) * (t1063 * t953 - t1065 * t996), -t1063 * t1104 + t1065 * t878, t1065 * t795 - t1063 * t814 - qJ(1) * (t1063 * t876 - t1065 * t894), t1063 * t880 + t1065 * t851, t1063 * t816 + t1065 * t813, t1063 * t869 + t1065 * t831, t1063 * t879 + t1065 * t850, t1063 * t868 + t1065 * t830, t1063 * t899 + t1065 * t893, t1065 * t726 - t1063 * t738 - qJ(1) * (t1063 * t821 - t1065 * t842), t1065 * t733 - t1063 * t753 - qJ(1) * (t1063 * t832 - t1065 * t870), t1065 * t705 - t1063 * t707 - qJ(1) * (t1063 * t809 - t1065 * t817), t1065 * t697 - t1063 * t700 - qJ(1) * (t1063 * t737 - t1065 * t749), t1063 * t755 + t1065 * t742, t1063 * t718 + t1065 * t714, t1063 * t764 + t1065 * t747, t1063 * t754 + t1065 * t741, t1063 * t765 + t1065 * t748, t1063 * t782 + t1065 * t781, t1065 * t683 - t1063 * t690 - qJ(1) * (t1063 * t735 - t1065 * t751), t1065 * t685 - t1063 * t694 - qJ(1) * (t1063 * t744 - t1065 * t762), t1065 * t678 - t1063 * t679 - qJ(1) * (t1063 * t712 - t1065 * t719), t1065 * t674 - t1063 * t675 - qJ(1) * (t1063 * t688 - t1065 * t691); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1163, -t1164, t1097, qJ(1) * t1097, 0, 0, t1063 * t1034, 0, -t1063 * t1033, -t1065 * qJDD(2), t1063 * t1090 - t1065 * t1103, t1063 * t990 - t1065 * t1102, t1063 * t941, qJ(1) * (t1065 * t1099 - t1124) - (-pkin(1) * t1065 - pkin(5) * t1063) * t941, t1063 * t968 - t1065 * t992, t1063 * t938 - t1065 * t980, t1063 * t964 - t1065 * t995, t1063 * t967 + t1065 * t991, t1063 * t963 - t1065 * t993, t1063 * t1005, t1063 * t835 + t1065 * t885 + qJ(1) * (t1063 * t994 + t1065 * t952), t1063 * t836 + t1065 * t884 + qJ(1) * (t1063 * t996 + t1065 * t953), t1063 * t878 + t1065 * t1104, t1063 * t795 + t1065 * t814 + qJ(1) * (t1063 * t894 + t1065 * t876), t1063 * t851 - t1065 * t880, t1063 * t813 - t1065 * t816, t1063 * t831 - t1065 * t869, t1063 * t850 - t1065 * t879, t1063 * t830 - t1065 * t868, t1063 * t893 - t1065 * t899, t1063 * t726 + t1065 * t738 + qJ(1) * (t1063 * t842 + t1065 * t821), t1063 * t733 + t1065 * t753 + qJ(1) * (t1063 * t870 + t1065 * t832), t1063 * t705 + t1065 * t707 + qJ(1) * (t1063 * t817 + t1065 * t809), t1063 * t697 + t1065 * t700 + qJ(1) * (t1063 * t749 + t1065 * t737), t1063 * t742 - t1065 * t755, t1063 * t714 - t1065 * t718, t1063 * t747 - t1065 * t764, t1063 * t741 - t1065 * t754, t1063 * t748 - t1065 * t765, t1063 * t781 - t1065 * t782, t1063 * t683 + t1065 * t690 + qJ(1) * (t1063 * t751 + t1065 * t735), t1063 * t685 + t1065 * t694 + qJ(1) * (t1063 * t762 + t1065 * t744), t1063 * t678 + t1065 * t679 + qJ(1) * (t1063 * t719 + t1065 * t712), t1063 * t674 + t1065 * t675 + qJ(1) * (t1063 * t691 + t1065 * t688); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1037, t1038, 0, 0, 0, 0, t1033, 0, t1034, 0, -t990, t1090, t1099, t923, t966, t937, t962, t965, t961, t1003, t822, t823, t877, t779, t849, t812, t828, t848, t827, t892, t717, t727, t704, t693, t740, t713, t745, t739, t746, t780, t682, t684, t676, t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1154, -t1037, 0, 0, 0, t1034, 0, -t1033, 0, t1090, t990, t941, pkin(5) * t941, t968, t938, t964, t967, t963, t1005, t835, t836, t878, t795, t851, t813, t831, t850, t830, t893, t726, t733, t705, t697, t742, t714, t747, t741, t748, t781, t683, t685, t678, t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1154, 0, -t1038, 0, 0, 0, 0, 0, 0, -qJDD(2), t977, t978, 0, pkin(1) * t941, -t992, -t980, -t995, t991, -t993, 0, t885, t884, t859, t814, -t880, -t816, -t869, -t879, -t868, -t899, t738, t753, t707, t700, -t755, -t718, -t764, -t754, -t765, -t782, t690, t694, t679, t675; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1037, t1038, 0, 0, 0, 0, t1033, 0, t1034, 0, -t990, t1090, t1099, t923, t966, t937, t962, t965, t961, t1003, t822, t823, t877, t779, t849, t812, t828, t848, t827, t892, t717, t727, t704, t693, t740, t713, t745, t739, t746, t780, t682, t684, t676, t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1160, 0, 0, -t1037, t1007, 0, t1004, t981, t999, t1002, t997, t1028, t928, t929, -t894, -pkin(6) * t894, t882, t819, t872, t881, t871, t900, t772, t775, t722, t709, t757, t720, t766, t756, t767, t783, t698, t699, t680, t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1160, 0, qJDD(2), 0, t1037, 0, t1008, 0, t1047, -t1036, -t1117, -t1047, -t1115, -qJDD(3), t914, t915, 0, -pkin(2) * t894, -t976, -t974, t1165, t976, -t933, -qJDD(3), t778, t784, t789, t728, -t906, -t905, -t857, t906, t853, -t1058, t706, t708, t701, t681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1007, -t1008, 0, 0, t992, t980, t995, -t991, t993, 0, t1085, t1084, t1083, t1093, t880, t816, t869, t879, t868, t899, t1076, t1075, t1077, t1074, t755, t718, t764, t754, t765, t782, t1079, t1078, t1080, t1081; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1030, -t1087, t1040, -t1051, t1045, t1051, 0, t985, t948, 0, t927, t890, t920, t925, t919, t955, t860, t874, t774, -qJ(4) * t785, t793, t760, t806, t792, t807, t826, t725, t732, t696, t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1107, t1029, t1043, t1088, t1041, -t1107, -t985, 0, t951, 0, t926, t888, t917, t924, t916, t954, t824, t833, t771, t777, t791, t758, t804, t790, t805, t825, t716, t724, t695, t686; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1047, t1036, t1117, t1047, t1115, qJDD(3), -t948, -t951, 0, 0, t976, t974, -t1165, -t976, t933, qJDD(3), t1172, t1096 + 0.2e1 * t1134, t1156, t1157, t906, t905, t857, -t906, -t853, t1058, t1086, t1082, t1108, t1109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t979, -t931, t1162, t1016, t1009, -t1016, 0, t922, -t1091, 0, t847, t799, t866, t845, t867, t898, t794, t801, t715, -pkin(7) * t730; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1130, t934, t1010, -t1098, t971, -t1130, -t922, 0, t839, 0, t846, t797, t864, t844, t865, t897, t773, t776, t710, t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t976, t974, -t1165, -t976, t933, qJDD(3), t1091, -t839, 0, 0, t906, t905, t857, -t906, -t853, t1058, t1092, t1089, t796, t729; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t887, -t852, t1166, t947, t944, -t947, 0, t858, t769, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1138, t1167, t945, t886, t903, -t1138, -t858, 0, t770, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t906, t905, t857, -t906, -t853, t1058, -t769, -t770, 0, 0;];
m_new_reg = t1;
