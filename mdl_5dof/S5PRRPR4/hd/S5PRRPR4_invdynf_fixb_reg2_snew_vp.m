% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5PRRPR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d5,theta1,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:24
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5PRRPR4_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRPR4_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRPR4_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRPR4_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRPR4_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRRPR4_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:24:04
% EndTime: 2019-12-05 16:24:07
% DurationCPUTime: 2.83s
% Computational Cost: add. (13248->210), mult. (29747->298), div. (0->0), fcn. (21035->10), ass. (0->171)
t1326 = qJD(3) + qJD(5);
t1369 = qJD(5) + t1326;
t1329 = sin(pkin(9));
t1331 = cos(pkin(9));
t1338 = cos(qJ(3));
t1359 = qJD(2) * t1338;
t1335 = sin(qJ(3));
t1360 = qJD(2) * t1335;
t1295 = t1329 * t1360 - t1331 * t1359;
t1297 = (t1329 * t1338 + t1331 * t1335) * qJD(2);
t1334 = sin(qJ(5));
t1337 = cos(qJ(5));
t1269 = t1337 * t1295 + t1334 * t1297;
t1368 = t1269 ^ 2;
t1271 = -t1334 * t1295 + t1337 * t1297;
t1367 = t1271 ^ 2;
t1366 = t1295 ^ 2;
t1365 = t1297 ^ 2;
t1364 = t1326 ^ 2;
t1363 = t1338 ^ 2;
t1362 = -2 * qJD(4);
t1361 = -g(3) + qJDD(1);
t1358 = t1271 * t1269;
t1357 = t1295 * qJD(3);
t1356 = t1297 * qJD(3);
t1355 = t1297 * t1295;
t1330 = sin(pkin(8));
t1332 = cos(pkin(8));
t1311 = t1330 * g(1) - t1332 * g(2);
t1354 = t1330 * t1311;
t1341 = qJD(2) ^ 2;
t1353 = t1363 * t1341;
t1352 = qJD(5) - t1326;
t1312 = -t1332 * g(1) - t1330 * g(2);
t1336 = sin(qJ(2));
t1339 = cos(qJ(2));
t1289 = t1339 * t1312 + t1336 * t1361;
t1282 = -t1341 * pkin(2) + qJDD(2) * pkin(6) + t1289;
t1266 = t1338 * t1282 - t1335 * t1311;
t1351 = t1335 * qJDD(2);
t1350 = t1338 * qJDD(2);
t1319 = t1335 * t1341 * t1338;
t1314 = qJDD(3) + t1319;
t1349 = -qJDD(3) - qJDD(5);
t1327 = t1335 ^ 2;
t1348 = t1327 + t1363;
t1347 = qJD(3) * t1360;
t1346 = qJD(3) * t1359;
t1263 = -t1335 * t1282 - t1338 * t1311;
t1305 = t1346 + t1351;
t1249 = (-t1305 + t1346) * qJ(4) + t1314 * pkin(3) + t1263;
t1313 = qJD(3) * pkin(3) - qJ(4) * t1360;
t1343 = -t1347 + t1350;
t1250 = -pkin(3) * t1353 + t1343 * qJ(4) - qJD(3) * t1313 + t1266;
t1220 = t1329 * t1249 + t1331 * t1250 + t1295 * t1362;
t1277 = t1331 * t1305 + t1329 * t1343;
t1258 = -t1277 - t1357;
t1344 = t1329 * t1305 - t1331 * t1343;
t1345 = -t1334 * t1277 - t1337 * t1344;
t1288 = -t1336 * t1312 + t1339 * t1361;
t1273 = qJDD(3) - t1355;
t1219 = t1331 * t1249 - t1329 * t1250 + t1297 * t1362;
t1281 = -qJDD(2) * pkin(2) - t1341 * pkin(6) - t1288;
t1342 = -t1337 * t1277 + t1334 * t1344;
t1253 = -t1343 * pkin(3) - qJ(4) * t1353 + t1313 * t1360 + qJDD(4) + t1281;
t1340 = qJD(3) ^ 2;
t1318 = -t1340 - t1353;
t1317 = -t1327 * t1341 - t1340;
t1315 = -qJDD(3) + t1319;
t1310 = t1348 * t1341;
t1309 = t1339 * qJDD(2) - t1336 * t1341;
t1308 = -t1336 * qJDD(2) - t1339 * t1341;
t1307 = t1348 * qJDD(2);
t1306 = -0.2e1 * t1347 + t1350;
t1304 = 0.2e1 * t1346 + t1351;
t1299 = t1332 * t1311;
t1290 = -t1340 - t1365;
t1287 = qJD(3) * pkin(4) - t1297 * pkin(7);
t1286 = t1338 * t1315 - t1335 * t1317;
t1285 = -t1335 * t1314 + t1338 * t1318;
t1284 = t1335 * t1315 + t1338 * t1317;
t1283 = t1338 * t1314 + t1335 * t1318;
t1280 = t1339 * t1307 - t1336 * t1310;
t1279 = t1336 * t1307 + t1339 * t1310;
t1274 = -qJDD(3) - t1355;
t1272 = -t1340 - t1366;
t1268 = t1339 * t1286 + t1336 * t1304;
t1267 = t1339 * t1285 - t1336 * t1306;
t1265 = t1336 * t1286 - t1339 * t1304;
t1264 = t1336 * t1285 + t1339 * t1306;
t1261 = -t1336 * t1288 + t1339 * t1289;
t1260 = t1339 * t1288 + t1336 * t1289;
t1259 = -t1364 - t1367;
t1257 = t1277 - t1357;
t1256 = -t1344 + t1356;
t1255 = t1344 + t1356;
t1254 = -t1365 - t1366;
t1252 = t1331 * t1274 - t1329 * t1290;
t1251 = t1329 * t1274 + t1331 * t1290;
t1247 = t1331 * t1272 - t1329 * t1273;
t1246 = t1329 * t1272 + t1331 * t1273;
t1243 = t1349 - t1358;
t1242 = -t1349 - t1358;
t1241 = -t1364 - t1368;
t1240 = -t1335 * t1263 + t1338 * t1266;
t1239 = t1338 * t1263 + t1335 * t1266;
t1238 = t1331 * t1256 - t1329 * t1258;
t1237 = t1329 * t1256 + t1331 * t1258;
t1236 = -t1367 - t1368;
t1235 = t1339 * t1240 + t1336 * t1281;
t1234 = t1336 * t1240 - t1339 * t1281;
t1233 = -t1335 * t1251 + t1338 * t1252;
t1232 = t1338 * t1251 + t1335 * t1252;
t1231 = t1337 * t1243 - t1334 * t1259;
t1230 = t1334 * t1243 + t1337 * t1259;
t1229 = t1344 * pkin(4) - t1366 * pkin(7) + t1297 * t1287 + t1253;
t1228 = t1352 * t1269 + t1342;
t1227 = -t1369 * t1269 - t1342;
t1226 = -t1352 * t1271 + t1345;
t1225 = t1369 * t1271 - t1345;
t1224 = -t1335 * t1246 + t1338 * t1247;
t1223 = t1338 * t1246 + t1335 * t1247;
t1222 = t1337 * t1241 - t1334 * t1242;
t1221 = t1334 * t1241 + t1337 * t1242;
t1218 = t1339 * t1233 + t1336 * t1257;
t1217 = t1336 * t1233 - t1339 * t1257;
t1216 = t1339 * t1224 + t1336 * t1255;
t1215 = -t1335 * t1237 + t1338 * t1238;
t1214 = t1336 * t1224 - t1339 * t1255;
t1213 = t1338 * t1237 + t1335 * t1238;
t1212 = -t1366 * pkin(4) - t1344 * pkin(7) - qJD(3) * t1287 + t1220;
t1211 = t1273 * pkin(4) + t1258 * pkin(7) + t1219;
t1210 = t1339 * t1215 + t1336 * t1254;
t1209 = t1336 * t1215 - t1339 * t1254;
t1208 = -t1329 * t1230 + t1331 * t1231;
t1207 = t1331 * t1230 + t1329 * t1231;
t1206 = t1337 * t1226 - t1334 * t1228;
t1205 = t1334 * t1226 + t1337 * t1228;
t1204 = -t1329 * t1221 + t1331 * t1222;
t1203 = t1331 * t1221 + t1329 * t1222;
t1202 = -t1329 * t1219 + t1331 * t1220;
t1201 = t1331 * t1219 + t1329 * t1220;
t1200 = t1334 * t1211 + t1337 * t1212;
t1199 = t1337 * t1211 - t1334 * t1212;
t1198 = -t1335 * t1207 + t1338 * t1208;
t1197 = t1338 * t1207 + t1335 * t1208;
t1196 = -t1329 * t1205 + t1331 * t1206;
t1195 = t1331 * t1205 + t1329 * t1206;
t1194 = -t1335 * t1203 + t1338 * t1204;
t1193 = t1338 * t1203 + t1335 * t1204;
t1192 = -t1335 * t1201 + t1338 * t1202;
t1191 = t1338 * t1201 + t1335 * t1202;
t1190 = t1339 * t1198 + t1336 * t1227;
t1189 = t1336 * t1198 - t1339 * t1227;
t1188 = t1339 * t1192 + t1336 * t1253;
t1187 = t1336 * t1192 - t1339 * t1253;
t1186 = t1339 * t1194 + t1336 * t1225;
t1185 = t1336 * t1194 - t1339 * t1225;
t1184 = -t1334 * t1199 + t1337 * t1200;
t1183 = t1337 * t1199 + t1334 * t1200;
t1182 = -t1335 * t1195 + t1338 * t1196;
t1181 = t1338 * t1195 + t1335 * t1196;
t1180 = t1339 * t1182 + t1336 * t1236;
t1179 = t1336 * t1182 - t1339 * t1236;
t1178 = -t1329 * t1183 + t1331 * t1184;
t1177 = t1331 * t1183 + t1329 * t1184;
t1176 = -t1335 * t1177 + t1338 * t1178;
t1175 = t1338 * t1177 + t1335 * t1178;
t1174 = t1339 * t1176 + t1336 * t1229;
t1173 = t1336 * t1176 - t1339 * t1229;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1332 * t1312 - t1354, 0, 0, 0, 0, 0, 0, t1332 * t1308, -t1332 * t1309, 0, t1332 * t1261 - t1354, 0, 0, 0, 0, 0, 0, t1332 * t1267 + t1330 * t1283, t1332 * t1268 + t1330 * t1284, t1332 * t1280, t1332 * t1235 + t1330 * t1239, 0, 0, 0, 0, 0, 0, t1332 * t1216 + t1330 * t1223, t1332 * t1218 + t1330 * t1232, t1332 * t1210 + t1330 * t1213, t1332 * t1188 + t1330 * t1191, 0, 0, 0, 0, 0, 0, t1332 * t1186 + t1330 * t1193, t1332 * t1190 + t1330 * t1197, t1332 * t1180 + t1330 * t1181, t1332 * t1174 + t1330 * t1175; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1330 * t1312 + t1299, 0, 0, 0, 0, 0, 0, t1330 * t1308, -t1330 * t1309, 0, t1330 * t1261 + t1299, 0, 0, 0, 0, 0, 0, t1330 * t1267 - t1332 * t1283, t1330 * t1268 - t1332 * t1284, t1330 * t1280, t1330 * t1235 - t1332 * t1239, 0, 0, 0, 0, 0, 0, t1330 * t1216 - t1332 * t1223, t1330 * t1218 - t1332 * t1232, t1330 * t1210 - t1332 * t1213, t1330 * t1188 - t1332 * t1191, 0, 0, 0, 0, 0, 0, t1330 * t1186 - t1332 * t1193, t1330 * t1190 - t1332 * t1197, t1330 * t1180 - t1332 * t1181, t1330 * t1174 - t1332 * t1175; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1361, 0, 0, 0, 0, 0, 0, t1309, t1308, 0, t1260, 0, 0, 0, 0, 0, 0, t1264, t1265, t1279, t1234, 0, 0, 0, 0, 0, 0, t1214, t1217, t1209, t1187, 0, 0, 0, 0, 0, 0, t1185, t1189, t1179, t1173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1312, 0, 0, 0, 0, 0, 0, t1308, -t1309, 0, t1261, 0, 0, 0, 0, 0, 0, t1267, t1268, t1280, t1235, 0, 0, 0, 0, 0, 0, t1216, t1218, t1210, t1188, 0, 0, 0, 0, 0, 0, t1186, t1190, t1180, t1174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1311, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1311, 0, 0, 0, 0, 0, 0, -t1283, -t1284, 0, -t1239, 0, 0, 0, 0, 0, 0, -t1223, -t1232, -t1213, -t1191, 0, 0, 0, 0, 0, 0, -t1193, -t1197, -t1181, -t1175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1361, 0, 0, 0, 0, 0, 0, t1309, t1308, 0, t1260, 0, 0, 0, 0, 0, 0, t1264, t1265, t1279, t1234, 0, 0, 0, 0, 0, 0, t1214, t1217, t1209, t1187, 0, 0, 0, 0, 0, 0, t1185, t1189, t1179, t1173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1341, -qJDD(2), 0, t1289, 0, 0, 0, 0, 0, 0, t1285, t1286, t1307, t1240, 0, 0, 0, 0, 0, 0, t1224, t1233, t1215, t1192, 0, 0, 0, 0, 0, 0, t1194, t1198, t1182, t1176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1341, 0, t1288, 0, 0, 0, 0, 0, 0, t1306, -t1304, t1310, -t1281, 0, 0, 0, 0, 0, 0, -t1255, -t1257, -t1254, -t1253, 0, 0, 0, 0, 0, 0, -t1225, -t1227, -t1236, -t1229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1311, 0, 0, 0, 0, 0, 0, t1283, t1284, 0, t1239, 0, 0, 0, 0, 0, 0, t1223, t1232, t1213, t1191, 0, 0, 0, 0, 0, 0, t1193, t1197, t1181, t1175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1318, t1315, t1350, t1266, 0, 0, 0, 0, 0, 0, t1247, t1252, t1238, t1202, 0, 0, 0, 0, 0, 0, t1204, t1208, t1196, t1178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1314, t1317, -t1351, t1263, 0, 0, 0, 0, 0, 0, t1246, t1251, t1237, t1201, 0, 0, 0, 0, 0, 0, t1203, t1207, t1195, t1177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1306, t1304, -t1310, t1281, 0, 0, 0, 0, 0, 0, t1255, t1257, t1254, t1253, 0, 0, 0, 0, 0, 0, t1225, t1227, t1236, t1229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1272, t1274, t1256, t1220, 0, 0, 0, 0, 0, 0, t1222, t1231, t1206, t1184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1273, t1290, t1258, t1219, 0, 0, 0, 0, 0, 0, t1221, t1230, t1205, t1183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1255, t1257, t1254, t1253, 0, 0, 0, 0, 0, 0, t1225, t1227, t1236, t1229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1241, t1243, t1226, t1200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1242, t1259, t1228, t1199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1225, t1227, t1236, t1229;];
f_new_reg = t1;
