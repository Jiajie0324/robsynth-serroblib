% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPPR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:37
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPPR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR7_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR7_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPPR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPPR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPPR7_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:36:50
% EndTime: 2019-12-31 19:37:11
% DurationCPUTime: 22.32s
% Computational Cost: add. (49230->651), mult. (115716->793), div. (0->0), fcn. (77267->8), ass. (0->433)
t1276 = qJD(2) ^ 2;
t1267 = sin(pkin(8));
t1268 = cos(pkin(8));
t1271 = sin(qJ(2));
t1274 = cos(qJ(2));
t1230 = (t1267 * t1274 + t1268 * t1271) * qJD(1);
t1394 = t1230 ^ 2;
t1209 = t1394 + t1276;
t1375 = qJD(1) * t1274;
t1376 = qJD(1) * t1271;
t1228 = t1267 * t1376 - t1268 * t1375;
t1352 = t1230 * t1228;
t1438 = qJDD(2) + t1352;
t1450 = t1438 * t1267;
t1105 = t1209 * t1268 + t1450;
t1449 = t1438 * t1268;
t1111 = -t1209 * t1267 + t1449;
t1050 = t1105 * t1271 - t1111 * t1274;
t1272 = sin(qJ(1));
t1275 = cos(qJ(1));
t1258 = qJD(2) * t1375;
t1333 = t1271 * qJDD(1);
t1240 = t1258 + t1333;
t1326 = qJD(2) * t1376;
t1332 = t1274 * qJDD(1);
t1297 = t1326 - t1332;
t1180 = t1268 * t1240 - t1267 * t1297;
t1355 = t1228 * qJD(2);
t1403 = -t1355 + t1180;
t1499 = pkin(5) * (t1050 * t1275 + t1272 * t1403);
t1498 = pkin(5) * (t1050 * t1272 - t1275 * t1403);
t1041 = t1105 * t1274 + t1111 * t1271;
t1497 = pkin(1) * t1041;
t1496 = pkin(6) * t1041;
t1495 = -pkin(1) * t1403 + pkin(6) * t1050;
t1225 = t1228 ^ 2;
t1208 = t1276 - t1225;
t1103 = -t1208 * t1267 + t1449;
t1110 = t1208 * t1268 + t1450;
t1046 = t1103 * t1271 + t1110 * t1274;
t1179 = t1240 * t1267 + t1268 * t1297;
t1374 = qJD(2) * t1230;
t1441 = t1179 - t1374;
t1494 = t1046 * t1272 - t1275 * t1441;
t1493 = t1046 * t1275 + t1272 * t1441;
t1373 = qJD(3) * t1228;
t1487 = pkin(2) * t1105;
t1490 = 0.2e1 * t1373 - t1487;
t1402 = -t1394 + t1276;
t1439 = qJDD(2) - t1352;
t1456 = t1267 * t1439;
t1106 = t1268 * t1402 + t1456;
t1455 = t1268 * t1439;
t1112 = -t1267 * t1402 + t1455;
t1049 = t1106 * t1271 - t1112 * t1274;
t1406 = t1180 + t1355;
t1489 = t1049 * t1272 + t1275 * t1406;
t1488 = t1049 * t1275 - t1272 * t1406;
t1162 = -t1276 - t1225;
t1091 = t1162 * t1267 + t1455;
t1094 = -t1162 * t1268 + t1456;
t1022 = t1091 * t1271 + t1094 * t1274;
t1440 = t1179 + t1374;
t1486 = pkin(5) * (t1022 * t1275 - t1272 * t1440);
t1485 = pkin(5) * (t1022 * t1272 + t1275 * t1440);
t1484 = qJ(3) * t1105;
t1483 = qJ(3) * t1111;
t1401 = t1394 - t1225;
t1447 = -t1267 * t1440 + t1268 * t1403;
t1365 = t1403 * t1267;
t1366 = t1440 * t1268;
t1464 = -t1365 - t1366;
t1471 = -t1271 * t1447 + t1274 * t1464;
t1482 = t1272 * t1471 - t1275 * t1401;
t1481 = t1272 * t1401 + t1275 * t1471;
t1039 = t1103 * t1274 - t1110 * t1271;
t1019 = t1091 * t1274 - t1094 * t1271;
t1480 = pkin(1) * t1019;
t1446 = t1267 * t1406 - t1268 * t1441;
t1448 = -t1267 * t1441 - t1268 * t1406;
t1461 = t1271 * t1446 + t1274 * t1448;
t1479 = pkin(1) * t1461;
t1478 = pkin(6) * t1019;
t1477 = pkin(6) * t1461;
t1476 = -pkin(1) * t1440 - pkin(6) * t1022;
t1404 = -t1225 - t1394;
t1462 = -t1271 * t1448 + t1274 * t1446;
t1475 = -pkin(1) * t1404 + pkin(6) * t1462;
t1472 = t1271 * t1464 + t1274 * t1447;
t1470 = pkin(5) * (t1272 * t1462 - t1275 * t1404);
t1469 = pkin(5) * (t1272 * t1404 + t1275 * t1462);
t1042 = t1106 * t1274 + t1112 * t1271;
t1387 = pkin(2) * t1448;
t1468 = qJ(3) * t1448;
t1372 = qJD(3) * t1230;
t1459 = pkin(2) * t1091;
t1465 = -0.2e1 * t1372 + t1459;
t1463 = -pkin(2) * t1404 + qJ(3) * t1446;
t1458 = qJ(3) * t1091;
t1457 = qJ(3) * t1094;
t1411 = t1403 * qJ(4);
t1437 = 2 * qJD(4);
t1270 = sin(qJ(5));
t1273 = cos(qJ(5));
t1186 = qJD(2) * t1270 - t1273 * t1228;
t1188 = qJD(2) * t1273 + t1228 * t1270;
t1137 = t1188 * t1186;
t1175 = qJDD(5) + t1180;
t1409 = -t1137 + t1175;
t1428 = t1270 * t1409;
t1423 = t1273 * t1409;
t1265 = t1274 ^ 2;
t1277 = qJD(1) ^ 2;
t1249 = t1272 * g(1) - t1275 * g(2);
t1301 = qJDD(1) * pkin(1) + t1249;
t1134 = (qJ(3) * t1265 + pkin(6)) * t1277 - pkin(2) * t1297 - qJDD(3) - (qJD(2) * pkin(2) - qJ(3) * t1376) * t1376 + t1301;
t1418 = pkin(3) * t1374 - t1230 * t1437 - t1134;
t1259 = t1272 * qJDD(2);
t1350 = t1230 * t1268;
t1354 = t1228 * t1267;
t1295 = (-t1350 - t1354) * qJD(2);
t1351 = t1230 * t1267;
t1353 = t1228 * t1268;
t1296 = (t1351 - t1353) * qJD(2);
t1399 = -t1271 * t1295 + t1274 * t1296;
t1417 = t1275 * t1399 + t1259;
t1327 = t1275 * t1352;
t1307 = -qJD(2) * t1351 + t1268 * t1180;
t1309 = qJD(2) * t1350 + t1267 * t1180;
t1396 = -t1271 * t1309 + t1274 * t1307;
t1416 = t1272 * t1396 - t1327;
t1298 = qJD(2) * t1353 + t1179 * t1267;
t1308 = qJD(2) * t1354 - t1268 * t1179;
t1398 = -t1271 * t1308 + t1274 * t1298;
t1415 = t1272 * t1398 + t1327;
t1334 = qJDD(2) * t1275;
t1414 = t1272 * t1399 - t1334;
t1328 = t1272 * t1352;
t1413 = t1275 * t1396 + t1328;
t1412 = t1275 * t1398 - t1328;
t1341 = t1271 * t1277;
t1250 = g(1) * t1275 + g(2) * t1272;
t1234 = -pkin(1) * t1277 + qJDD(1) * pkin(6) - t1250;
t1342 = t1271 * t1234;
t1377 = qJD(1) * qJD(2);
t1126 = qJDD(2) * pkin(2) - t1240 * qJ(3) - t1342 + (pkin(2) * t1341 + qJ(3) * t1377 - g(3)) * t1274;
t1200 = -t1271 * g(3) + t1274 * t1234;
t1260 = t1265 * t1277;
t1255 = -t1260 - t1276;
t1127 = t1255 * pkin(2) + qJ(3) * t1332 + t1200;
t1321 = -t1268 * t1126 + t1267 * t1127;
t1293 = -qJDD(2) * pkin(3) - t1276 * qJ(4) + qJDD(4) + t1321;
t1161 = pkin(3) * t1228 - qJ(4) * t1230;
t1340 = 0.2e1 * qJD(3) + t1161;
t974 = -qJDD(2) * pkin(7) + t1406 * pkin(4) + (pkin(7) * t1228 + t1340) * t1230 + t1293;
t1203 = pkin(4) * t1230 - qJD(2) * pkin(7);
t1278 = -t1411 + t1418;
t1393 = pkin(3) + pkin(7);
t986 = -t1225 * pkin(4) + t1393 * t1179 - t1230 * t1203 + t1278;
t937 = t1270 * t986 - t1273 * t974;
t938 = t1270 * t974 + t1273 * t986;
t908 = t1270 * t938 - t1273 * t937;
t1101 = -qJD(5) * t1186 + qJDD(2) * t1273 + t1179 * t1270;
t1223 = qJD(5) + t1230;
t1156 = t1223 * t1186;
t1410 = t1101 - t1156;
t1408 = pkin(3) * t1209 + qJ(4) * t1438;
t1407 = -pkin(3) * t1439 - qJ(4) * t1162;
t1319 = t1270 * qJDD(2) - t1273 * t1179;
t1069 = (qJD(5) - t1223) * t1188 + t1319;
t1400 = t1271 * t1296 + t1274 * t1295;
t1397 = t1271 * t1298 + t1274 * t1308;
t1395 = t1271 * t1307 + t1274 * t1309;
t1184 = t1186 ^ 2;
t1185 = t1188 ^ 2;
t1221 = t1223 ^ 2;
t1030 = t1321 + 0.2e1 * t1372;
t1306 = t1267 * t1126 + t1268 * t1127;
t1031 = t1306 - 0.2e1 * t1373;
t975 = -t1030 * t1268 + t1031 * t1267;
t1392 = pkin(2) * t975;
t1391 = pkin(4) * t908;
t1288 = -t1276 * pkin(3) + qJDD(2) * qJ(4) + t1306;
t1284 = -t1340 * t1228 + t1288;
t981 = -t1179 * pkin(4) - t1225 * pkin(7) + (t1437 + t1203) * qJD(2) + t1284;
t1390 = pkin(4) * t981;
t1071 = t1101 + t1156;
t995 = -t1069 * t1270 - t1071 * t1273;
t1389 = pkin(4) * t995;
t1388 = pkin(7) * t908;
t1382 = pkin(3) * t1268;
t1380 = t1270 * t981;
t1379 = t1271 * t975;
t979 = t1273 * t981;
t1378 = t1274 * t975;
t1371 = qJD(4) * qJD(2);
t1090 = t1137 + t1175;
t1369 = t1090 * t1273;
t1368 = t1134 * t1267;
t1367 = t1134 * t1268;
t1358 = t1223 * t1188;
t1357 = t1223 * t1270;
t1356 = t1223 * t1273;
t1233 = t1277 * pkin(6) + t1301;
t1349 = t1233 * t1271;
t1348 = t1233 * t1274;
t1241 = -0.2e1 * t1326 + t1332;
t1189 = t1241 * t1274;
t1256 = t1274 * t1341;
t1247 = qJDD(2) + t1256;
t1347 = t1247 * t1271;
t1248 = qJDD(2) - t1256;
t1346 = t1248 * t1271;
t1345 = t1248 * t1274;
t1264 = t1271 ^ 2;
t1344 = t1264 * t1277;
t1343 = t1270 * t1090;
t1009 = t1284 + 0.2e1 * t1371;
t1011 = t1340 * t1230 + t1293;
t1338 = -pkin(3) * t1011 + qJ(4) * t1009;
t1337 = -pkin(3) * t1406 - qJ(4) * t1441;
t1336 = -t1185 + t1221;
t1335 = t1264 + t1265;
t1331 = -t1185 - t1221;
t1330 = t1267 * t1137;
t1329 = t1268 * t1137;
t1325 = qJ(4) * t1267 + pkin(2);
t1027 = t1273 * t1331 - t1343;
t1323 = -pkin(7) * t1027 + t979;
t976 = t1030 * t1267 + t1268 * t1031;
t1199 = t1274 * g(3) + t1342;
t1130 = t1199 * t1271 + t1274 * t1200;
t1320 = -t1249 * t1272 - t1275 * t1250;
t1318 = -pkin(3) * t908 + qJ(4) * t981 - t1388;
t1317 = t1272 * t1256;
t1316 = t1275 * t1256;
t955 = t1009 * t1267 - t1011 * t1268;
t1315 = pkin(2) * t955 + t1338;
t1314 = t1337 + t1387;
t1244 = qJDD(1) * t1275 - t1272 * t1277;
t1313 = -pkin(5) * t1244 - g(3) * t1272;
t1068 = (qJD(5) + t1223) * t1188 + t1319;
t1312 = pkin(4) * t1068 + t979;
t1311 = pkin(4) * t1410 - t1380;
t1099 = -t1221 - t1184;
t1024 = t1270 * t1099 + t1423;
t1310 = -pkin(7) * t1024 + t1380;
t909 = t1270 * t937 + t1273 * t938;
t1129 = t1199 * t1274 - t1200 * t1271;
t1305 = t1249 * t1275 - t1250 * t1272;
t1303 = -pkin(3) * t1027 + qJ(4) * t1410 + t1323;
t1302 = -pkin(7) * t995 - t908;
t1300 = -pkin(4) * t1024 + t937;
t903 = t1267 * t981 - t1268 * t908;
t1299 = pkin(2) * t903 + t1318;
t1294 = -pkin(3) * t1024 + qJ(4) * t1068 + t1310;
t1292 = -pkin(4) * t1027 + t938;
t1097 = -t1184 - t1185;
t1291 = pkin(4) * t1097 - t909;
t984 = -t1027 * t1268 + t1267 * t1410;
t1290 = pkin(2) * t984 + t1303;
t1289 = -pkin(3) * t995 + qJ(4) * t1097 + t1302;
t977 = -t1024 * t1268 + t1068 * t1267;
t1287 = pkin(2) * t977 + t1294;
t969 = t1097 * t1267 - t1268 * t995;
t1285 = pkin(2) * t969 + t1289;
t1283 = t1011 + t1407;
t1280 = t1009 + t1408;
t1279 = -t1179 * pkin(3) - t1418;
t1254 = t1260 - t1276;
t1253 = -t1276 - t1344;
t1252 = t1276 - t1344;
t1246 = -t1260 + t1344;
t1245 = t1260 + t1344;
t1243 = qJDD(1) * t1272 + t1275 * t1277;
t1242 = t1335 * qJDD(1);
t1239 = 0.2e1 * t1258 + t1333;
t1237 = t1274 * t1247;
t1236 = t1335 * t1377;
t1224 = -pkin(5) * t1243 + g(3) * t1275;
t1202 = t1240 * t1274 - t1264 * t1377;
t1201 = -t1265 * t1377 + t1271 * t1297;
t1198 = -t1253 * t1271 - t1345;
t1197 = -t1252 * t1271 + t1237;
t1196 = t1255 * t1274 - t1347;
t1195 = t1254 * t1274 - t1346;
t1194 = t1253 * t1274 - t1346;
t1193 = t1252 * t1274 + t1347;
t1192 = t1255 * t1271 + t1237;
t1191 = t1254 * t1271 + t1345;
t1190 = (t1240 + t1258) * t1271;
t1182 = -t1239 * t1271 + t1189;
t1181 = t1239 * t1274 + t1241 * t1271;
t1151 = t1184 - t1221;
t1150 = -pkin(6) * t1194 - t1348;
t1149 = -pkin(6) * t1192 - t1349;
t1147 = -pkin(1) * t1194 + t1200;
t1146 = -pkin(1) * t1192 + t1199;
t1131 = t1185 - t1184;
t1117 = pkin(1) * t1241 + pkin(6) * t1196 + t1348;
t1116 = -pkin(1) * t1239 + pkin(6) * t1198 - t1349;
t1100 = -qJD(5) * t1188 - t1319;
t1098 = pkin(1) * t1233 + pkin(6) * t1130;
t1096 = pkin(1) * t1245 + pkin(6) * t1242 + t1130;
t1086 = (-t1186 * t1273 + t1188 * t1270) * t1223;
t1085 = (-t1186 * t1270 - t1188 * t1273) * t1223;
t1063 = t1101 * t1273 - t1188 * t1357;
t1062 = t1101 * t1270 + t1188 * t1356;
t1061 = t1100 * t1270 - t1186 * t1356;
t1060 = -t1100 * t1273 - t1186 * t1357;
t1059 = -t1367 + t1484;
t1038 = t1085 * t1267 + t1175 * t1268;
t1037 = -t1085 * t1268 + t1175 * t1267;
t1036 = t1151 * t1273 - t1343;
t1035 = -t1270 * t1336 + t1423;
t1034 = t1151 * t1270 + t1369;
t1033 = t1273 * t1336 + t1428;
t1032 = -t1368 - t1458;
t1028 = -t1270 * t1331 - t1369;
t1025 = t1099 * t1273 - t1428;
t1018 = -pkin(2) * t1403 - t1368 - t1483;
t1017 = t1279 + t1411;
t1016 = t1062 * t1267 + t1329;
t1015 = -t1060 * t1267 - t1329;
t1014 = -t1062 * t1268 + t1330;
t1013 = t1060 * t1268 - t1330;
t1012 = -pkin(2) * t1440 + t1367 - t1457;
t999 = (t1179 + t1440) * pkin(3) + t1278;
t998 = t1279 + 0.2e1 * t1411;
t997 = -t1069 * t1273 + t1270 * t1071;
t996 = -t1068 * t1273 - t1270 * t1410;
t994 = -t1270 * t1068 + t1273 * t1410;
t992 = -qJ(4) * t1404 + t1011;
t991 = -pkin(3) * t1404 + t1009;
t990 = t1033 * t1267 + t1071 * t1268;
t989 = t1034 * t1267 - t1069 * t1268;
t988 = -t1033 * t1268 + t1071 * t1267;
t987 = -t1034 * t1268 - t1069 * t1267;
t985 = t1027 * t1267 + t1268 * t1410;
t983 = -t1037 * t1271 + t1038 * t1274;
t982 = t1037 * t1274 + t1038 * t1271;
t978 = t1024 * t1267 + t1068 * t1268;
t973 = t1131 * t1268 + t1267 * t994;
t972 = t1131 * t1267 - t1268 * t994;
t970 = t1097 * t1268 + t1267 * t995;
t968 = -t1387 - t1479;
t967 = t1031 + t1487 + t1497;
t966 = pkin(2) * t1134 + qJ(3) * t976;
t965 = -pkin(3) * t1365 + t1268 * t998 - t1484;
t964 = -t1014 * t1271 + t1016 * t1274;
t963 = -t1013 * t1271 + t1015 * t1274;
t962 = t1014 * t1274 + t1016 * t1271;
t961 = t1013 * t1274 + t1015 * t1271;
t960 = qJ(4) * t1366 - t1267 * t999 + t1458;
t959 = t1030 - t1459 - t1480;
t958 = -t975 - t1468;
t957 = t1483 + t1267 * t998 + (pkin(2) + t1382) * t1403;
t956 = t1009 * t1268 + t1011 * t1267;
t954 = t1268 * t999 + t1325 * t1440 + t1457;
t953 = -t1018 * t1271 + t1059 * t1274 + t1496;
t952 = -t1314 - t1479;
t951 = t1463 + t976;
t950 = t1161 * t1228 - t1288 - 0.2e1 * t1371 - t1408 + t1490 - t1497;
t949 = -qJ(4) * t997 + t1389;
t948 = t1018 * t1274 + t1059 * t1271 + t1495;
t947 = -t1012 * t1271 + t1032 * t1274 - t1478;
t946 = -t1271 * t988 + t1274 * t990;
t945 = -t1271 * t987 + t1274 * t989;
t944 = t1271 * t990 + t1274 * t988;
t943 = t1271 * t989 + t1274 * t987;
t942 = -t1161 * t1230 - t1293 - t1407 + t1465 + t1480;
t941 = t1012 * t1274 + t1032 * t1271 + t1476;
t940 = -t1271 * t984 + t1274 * t985;
t939 = t1271 * t985 + t1274 * t984;
t934 = -t1271 * t977 + t1274 * t978;
t933 = t1271 * t978 + t1274 * t977;
t932 = t1274 * t976 - t1379;
t931 = t1271 * t976 + t1378;
t930 = -t1271 * t972 + t1274 * t973;
t929 = t1271 * t973 + t1274 * t972;
t928 = -t1267 * t991 + t1268 * t992 - t1468;
t927 = -t1271 * t969 + t1274 * t970;
t926 = t1271 * t970 + t1274 * t969;
t925 = t1267 * t992 + t1268 * t991 + t1463;
t924 = -t1393 * t1028 + t1311;
t923 = -t1393 * t1025 + t1312;
t922 = -qJ(3) * t955 + (-pkin(3) * t1267 + qJ(4) * t1268) * t1017;
t921 = -t1271 * t955 + t1274 * t956;
t920 = t1271 * t956 + t1274 * t955;
t919 = -pkin(1) * t931 - t1392;
t918 = -qJ(4) * t1028 - t1292;
t917 = -qJ(4) * t1025 - t1300;
t916 = -t1271 * t957 + t1274 * t965 - t1496;
t915 = qJ(3) * t956 + (t1325 + t1382) * t1017;
t914 = t1271 * t965 + t1274 * t957 - t1495;
t913 = -t1271 * t954 + t1274 * t960 + t1478;
t912 = t1271 * t960 + t1274 * t954 - t1476;
t911 = -t1271 * t951 + t1274 * t958 - t1477;
t910 = t1271 * t958 + t1274 * t951 + t1475;
t906 = -pkin(6) * t931 - qJ(3) * t1378 - t1271 * t966;
t905 = pkin(1) * t1134 + pkin(6) * t932 - qJ(3) * t1379 + t1274 * t966;
t904 = t1267 * t908 + t1268 * t981;
t902 = -t1271 * t925 + t1274 * t928 - t1477;
t901 = -pkin(1) * t939 - t1290;
t900 = -pkin(1) * t933 - t1287;
t899 = t1271 * t928 + t1274 * t925 + t1475;
t898 = -pkin(1) * t920 - t1315;
t897 = -t1393 * t997 + t1291;
t896 = -qJ(3) * t984 - t1267 * t924 + t1268 * t918;
t895 = -qJ(3) * t977 - t1267 * t923 + t1268 * t917;
t894 = -pkin(2) * t1028 + qJ(3) * t985 + t1267 * t918 + t1268 * t924;
t893 = -pkin(2) * t1025 + qJ(3) * t978 + t1267 * t917 + t1268 * t923;
t892 = -qJ(4) * t909 + t1391;
t891 = -qJ(3) * t969 - t1267 * t897 + t1268 * t949;
t890 = -t1393 * t909 + t1390;
t889 = -pkin(6) * t920 - t1271 * t915 + t1274 * t922;
t888 = -pkin(1) * t926 - t1285;
t887 = -pkin(2) * t997 + qJ(3) * t970 + t1267 * t949 + t1268 * t897;
t886 = pkin(1) * t1017 + pkin(6) * t921 + t1271 * t922 + t1274 * t915;
t885 = -t1271 * t903 + t1274 * t904;
t884 = t1271 * t904 + t1274 * t903;
t883 = -pkin(6) * t939 - t1271 * t894 + t1274 * t896;
t882 = -pkin(6) * t933 - t1271 * t893 + t1274 * t895;
t881 = -pkin(1) * t1028 + pkin(6) * t940 + t1271 * t896 + t1274 * t894;
t880 = -pkin(1) * t1025 + pkin(6) * t934 + t1271 * t895 + t1274 * t893;
t879 = -pkin(6) * t926 - t1271 * t887 + t1274 * t891;
t878 = -pkin(1) * t997 + pkin(6) * t927 + t1271 * t891 + t1274 * t887;
t877 = -qJ(3) * t903 - t1267 * t890 + t1268 * t892;
t876 = -pkin(1) * t884 - t1299;
t875 = -pkin(2) * t909 + qJ(3) * t904 + t1267 * t892 + t1268 * t890;
t874 = -pkin(6) * t884 - t1271 * t875 + t1274 * t877;
t873 = -pkin(1) * t909 + pkin(6) * t885 + t1271 * t877 + t1274 * t875;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1244, 0, -t1243, 0, t1313, -t1224, -t1305, -pkin(5) * t1305, t1202 * t1275 - t1317, t1182 * t1275 + t1246 * t1272, t1197 * t1275 + t1272 * t1333, t1201 * t1275 + t1317, t1195 * t1275 + t1272 * t1332, t1236 * t1275 + t1259, t1275 * t1149 - t1272 * t1146 - pkin(5) * (t1196 * t1272 + t1241 * t1275), t1275 * t1150 - t1272 * t1147 - pkin(5) * (t1198 * t1272 - t1239 * t1275), t1275 * t1129 - pkin(5) * (t1242 * t1272 + t1245 * t1275), -pkin(5) * (t1130 * t1272 + t1233 * t1275) - (pkin(1) * t1272 - pkin(6) * t1275) * t1129, t1413, t1481, -t1488, t1412, -t1493, t1417, -t1272 * t959 + t1275 * t947 + t1485, -t1272 * t967 + t1275 * t953 - t1498, -t1272 * t968 + t1275 * t911 - t1470, t1275 * t906 - t1272 * t919 - pkin(5) * (t1134 * t1275 + t1272 * t932), t1417, t1488, t1493, t1413, t1481, t1412, -t1272 * t952 + t1275 * t902 - t1470, -t1272 * t942 + t1275 * t913 - t1485, -t1272 * t950 + t1275 * t916 + t1498, t1275 * t889 - t1272 * t898 - pkin(5) * (t1017 * t1275 + t1272 * t921), t1063 * t1272 + t1275 * t964, t1272 * t996 + t1275 * t930, t1035 * t1272 + t1275 * t946, -t1061 * t1272 + t1275 * t963, t1036 * t1272 + t1275 * t945, t1086 * t1272 + t1275 * t983, t1275 * t882 - t1272 * t900 - pkin(5) * (-t1025 * t1275 + t1272 * t934), t1275 * t883 - t1272 * t901 - pkin(5) * (-t1028 * t1275 + t1272 * t940), t1275 * t879 - t1272 * t888 - pkin(5) * (t1272 * t927 - t1275 * t997), t1275 * t874 - t1272 * t876 - pkin(5) * (t1272 * t885 - t1275 * t909); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1243, 0, t1244, 0, t1224, t1313, t1320, pkin(5) * t1320, t1202 * t1272 + t1316, t1182 * t1272 - t1246 * t1275, t1197 * t1272 - t1275 * t1333, t1201 * t1272 - t1316, t1195 * t1272 - t1275 * t1332, t1236 * t1272 - t1334, t1272 * t1149 + t1275 * t1146 + pkin(5) * (t1196 * t1275 - t1241 * t1272), t1272 * t1150 + t1275 * t1147 + pkin(5) * (t1198 * t1275 + t1239 * t1272), t1272 * t1129 + pkin(5) * (t1242 * t1275 - t1245 * t1272), pkin(5) * (t1130 * t1275 - t1233 * t1272) - (-pkin(1) * t1275 - pkin(6) * t1272) * t1129, t1416, t1482, -t1489, t1415, -t1494, t1414, t1272 * t947 + t1275 * t959 - t1486, t1272 * t953 + t1275 * t967 + t1499, t1272 * t911 + t1275 * t968 + t1469, t1272 * t906 + t1275 * t919 + pkin(5) * (-t1134 * t1272 + t1275 * t932), t1414, t1489, t1494, t1416, t1482, t1415, t1272 * t902 + t1275 * t952 + t1469, t1272 * t913 + t1275 * t942 + t1486, t1272 * t916 + t1275 * t950 - t1499, t1272 * t889 + t1275 * t898 + pkin(5) * (-t1017 * t1272 + t1275 * t921), -t1063 * t1275 + t1272 * t964, t1272 * t930 - t1275 * t996, -t1035 * t1275 + t1272 * t946, t1061 * t1275 + t1272 * t963, -t1036 * t1275 + t1272 * t945, -t1086 * t1275 + t1272 * t983, t1272 * t882 + t1275 * t900 + pkin(5) * (t1025 * t1272 + t1275 * t934), t1272 * t883 + t1275 * t901 + pkin(5) * (t1028 * t1272 + t1275 * t940), t1272 * t879 + t1275 * t888 + pkin(5) * (t1272 * t997 + t1275 * t927), t1272 * t874 + t1275 * t876 + pkin(5) * (t1272 * t909 + t1275 * t885); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1249, t1250, 0, 0, t1190, t1181, t1193, t1189, t1191, 0, t1117, t1116, t1096, t1098, t1395, t1472, t1042, t1397, t1039, t1400, t941, t948, t910, t905, t1400, -t1042, -t1039, t1395, t1472, t1397, t899, t912, t914, t886, t962, t929, t944, t961, t943, t982, t880, t881, t878, t873; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1277, 0, 0, -g(3), -t1249, 0, t1202, t1182, t1197, t1201, t1195, t1236, t1149, t1150, t1129, pkin(6) * t1129, t1396, t1471, -t1049, t1398, -t1046, t1399, t947, t953, t911, t906, t1399, t1049, t1046, t1396, t1471, t1398, t902, t913, t916, t889, t964, t930, t946, t963, t945, t983, t882, t883, t879, t874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1277, 0, qJDD(1), 0, g(3), 0, -t1250, 0, t1256, -t1246, -t1333, -t1256, -t1332, -qJDD(2), t1146, t1147, 0, pkin(1) * t1129, -t1352, -t1401, -t1406, t1352, t1441, -qJDD(2), t959, t967, t968, t919, -qJDD(2), t1406, -t1441, -t1352, -t1401, t1352, t952, t942, t950, t898, -t1063, -t996, -t1035, t1061, -t1036, -t1086, t900, t901, t888, t876; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1249, t1250, 0, 0, t1190, t1181, t1193, t1189, t1191, 0, t1117, t1116, t1096, t1098, t1395, t1472, t1042, t1397, t1039, t1400, t941, t948, t910, t905, t1400, -t1042, -t1039, t1395, t1472, t1397, t899, t912, t914, t886, t962, t929, t944, t961, t943, t982, t880, t881, t878, t873; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1240, t1241, t1247, -t1258, t1254, t1258, 0, -t1233, t1199, 0, t1307, t1464, t1112, t1298, -t1110, t1296, t1032, t1059, t958, -qJ(3) * t975, t1296, -t1112, t1110, t1307, t1464, t1298, t928, t960, t965, t922, t1016, t973, t990, t1015, t989, t1038, t895, t896, t891, t877; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1326, t1239, t1252, -t1297, t1248, -t1326, t1233, 0, t1200, 0, t1309, t1447, t1106, t1308, t1103, t1295, t1012, t1018, t951, t966, t1295, -t1106, -t1103, t1309, t1447, t1308, t925, t954, t957, t915, t1014, t972, t988, t1013, t987, t1037, t893, t894, t887, t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1256, t1246, t1333, t1256, t1332, qJDD(2), -t1199, -t1200, 0, 0, t1352, t1401, t1406, -t1352, -t1441, qJDD(2), -t1321 + t1465, -t1306 + t1490, t1387, t1392, qJDD(2), -t1406, t1441, t1352, t1401, -t1352, t1314, t1283 - t1459, t1280 + t1487, t1315, t1063, t996, t1035, -t1061, t1036, t1086, t1287, t1290, t1285, t1299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1180, -t1440, t1439, t1355, -t1208, -t1355, 0, -t1134, t1030, 0, -t1355, -t1439, t1208, t1180, -t1440, t1355, t992, qJ(4) * t1440, t998, qJ(4) * t1017, t1137, t1131, t1071, -t1137, -t1069, t1175, t917, t918, t949, t892; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1374, t1403, t1402, -t1179, t1438, -t1374, t1134, 0, t1031, 0, -t1374, -t1402, -t1438, t1374, t1403, -t1179, t991, t999, pkin(3) * t1403, pkin(3) * t1017, -t1062, -t994, -t1033, t1060, -t1034, -t1085, t923, t924, t897, t890; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1352, t1401, t1406, -t1352, -t1441, qJDD(2), -t1030, -t1031, 0, 0, qJDD(2), -t1406, t1441, t1352, t1401, -t1352, t1337, t1283, t1280, t1338, t1063, t996, t1035, -t1061, t1036, t1086, t1294, t1303, t1289, t1318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1406, t1441, t1352, t1401, -t1352, 0, t1011, t1009, 0, t1063, t996, t1035, -t1061, t1036, t1086, t1310, t1323, t1302, -t1388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1355, t1439, -t1208, -t1180, t1440, -t1355, -t1011, 0, -t1017, 0, -t1137, -t1131, -t1071, t1137, t1069, -t1175, t1300, t1292, -t1389, -t1391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1374, t1402, t1438, -t1374, -t1403, t1179, -t1009, t1017, 0, 0, t1062, t994, t1033, -t1060, t1034, t1085, pkin(7) * t1025 - t1312, pkin(7) * t1028 - t1311, pkin(7) * t997 - t1291, pkin(7) * t909 - t1390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1101, -t1068, t1409, t1156, t1151, -t1156, 0, t981, t937, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1358, t1410, t1336, t1100, t1090, -t1358, -t981, 0, t938, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1137, t1131, t1071, -t1137, -t1069, t1175, -t937, -t938, 0, 0;];
m_new_reg = t1;
