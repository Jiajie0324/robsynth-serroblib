% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:37
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPPR7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPPR7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:36:28
% EndTime: 2019-12-31 19:36:34
% DurationCPUTime: 3.78s
% Computational Cost: add. (3840->269), mult. (7327->347), div. (0->0), fcn. (8014->6), ass. (0->211)
t177 = sin(qJ(5));
t178 = sin(qJ(2));
t310 = -qJ(3) - pkin(6);
t158 = t310 * t178;
t176 = sin(pkin(8));
t180 = cos(qJ(2));
t283 = t176 * t180;
t291 = cos(pkin(8));
t105 = t291 * t158 + t310 * t283;
t155 = t291 * t178 + t283;
t77 = -t155 * pkin(4) + t105;
t295 = t77 * t177;
t179 = cos(qJ(5));
t337 = t77 * t179;
t169 = t291 * t180;
t284 = t176 * t178;
t153 = -t169 + t284;
t313 = t153 * pkin(4);
t285 = t176 * t158;
t327 = t310 * t169;
t332 = -t327 + t285;
t334 = t332 - t313;
t336 = t177 * t334;
t335 = t179 * t334;
t189 = -t327 / 0.2e1;
t249 = qJD(5) * t177;
t89 = t177 * t155;
t260 = t89 * qJD(1);
t333 = t260 + t249;
t317 = t155 ^ 2;
t318 = t153 ^ 2;
t323 = t318 - t317;
t331 = t323 * qJD(1);
t330 = t323 * qJD(2);
t324 = t317 + t318;
t329 = t324 * qJD(1);
t328 = qJD(3) * t324;
t92 = t179 * t153;
t210 = 0.2e1 * t177 * t92;
t171 = -t180 * pkin(2) - pkin(1);
t197 = -t155 * qJ(4) + t171;
t316 = pkin(3) + pkin(7);
t60 = t316 * t153 + t197;
t42 = t177 * t60 + t337;
t43 = t179 * t60 - t295;
t12 = (t177 * t42 + t43 * t179) * t155;
t102 = t327 / 0.2e1 + t189;
t168 = t176 * pkin(2) + qJ(4);
t233 = t168 * qJD(2);
t326 = t102 * qJD(1) + t233;
t181 = -t313 / 0.2e1 + t285 / 0.2e1 + t189;
t173 = t178 * pkin(2);
t288 = t153 * qJ(4);
t209 = t173 + t288;
t61 = t316 * t155 + t209;
t305 = t179 * t61;
t47 = t305 + t336;
t299 = t47 * t177;
t307 = t177 * t61;
t46 = t335 - t307;
t300 = t46 * t179;
t194 = -t300 / 0.2e1 - t299 / 0.2e1;
t10 = t181 + t194;
t325 = t10 * qJD(1) + t233;
t200 = -t105 * t155 - t153 * t332;
t321 = qJD(3) * t200;
t319 = t200 * qJD(1);
t315 = -t155 / 0.2e1;
t175 = t179 ^ 2;
t314 = t175 / 0.2e1;
t312 = t155 * pkin(3);
t309 = qJD(2) * pkin(2);
t1 = t334 * t77 - t42 * t46 + t43 * t47;
t308 = t1 * qJD(1);
t298 = t47 * t179;
t301 = t46 * t177;
t2 = t12 + (t298 - t301) * t153;
t303 = t2 * qJD(1);
t4 = (t46 - t335) * t155 + (t42 - t337) * t153;
t302 = t4 * qJD(1);
t5 = (-t47 + t336) * t155 + (t43 + t295) * t153;
t297 = t5 * qJD(1);
t6 = -t334 * t153 + (t43 * t177 - t179 * t42) * t155;
t296 = t6 * qJD(1);
t170 = -t291 * pkin(2) - pkin(3);
t167 = -pkin(7) + t170;
t174 = t177 ^ 2;
t205 = (t314 + t174 / 0.2e1) * t155;
t287 = t153 * t168;
t213 = -t287 / 0.2e1;
t183 = t167 * t205 + t213;
t195 = t301 / 0.2e1 - t298 / 0.2e1;
t8 = t183 + t195;
t292 = t8 * qJD(1);
t289 = t12 * qJD(1);
t286 = t168 * t155;
t132 = t174 * t155;
t133 = t175 * t155;
t88 = t153 * pkin(3) + t197;
t94 = t209 + t312;
t26 = t88 * t94;
t282 = t26 * qJD(1);
t27 = t42 * t155 + t334 * t92;
t281 = t27 * qJD(1);
t28 = t153 * t336 - t43 * t155;
t280 = t28 * qJD(1);
t31 = t171 * t173;
t277 = t31 * qJD(1);
t44 = -t94 * t153 - t88 * t155;
t276 = t44 * qJD(1);
t45 = t88 * t153 - t94 * t155;
t275 = t45 * qJD(1);
t172 = t173 / 0.2e1;
t50 = t172 + (pkin(3) / 0.2e1 - t170 / 0.2e1) * t155 + (qJ(4) / 0.2e1 + t168 / 0.2e1) * t153;
t272 = t50 * qJD(1);
t52 = t205 + t133 / 0.2e1 + t132 / 0.2e1;
t271 = t52 * qJD(1);
t54 = t324 * t177;
t270 = t54 * qJD(1);
t55 = (-t174 - t175) * t155 * t153;
t269 = t55 * qJD(1);
t62 = t323 * t177;
t268 = t62 * qJD(1);
t63 = t323 * t179;
t267 = t63 * qJD(1);
t64 = t324 * t179;
t266 = t64 * qJD(1);
t184 = (-t176 * t153 / 0.2e1 + t291 * t315) * pkin(2);
t73 = -t173 / 0.2e1 + t184;
t265 = t73 * qJD(1);
t80 = t153 * t173 + t171 * t155;
t262 = t80 * qJD(1);
t81 = -t171 * t153 + t155 * t173;
t261 = t81 * qJD(1);
t259 = t89 * qJD(5);
t91 = (t314 - t174 / 0.2e1) * t153;
t258 = t91 * qJD(5);
t257 = t92 * qJD(1);
t256 = t92 * qJD(2);
t95 = -t132 - t133;
t255 = t95 * qJD(1);
t164 = t174 - t175;
t252 = qJD(1) * t177;
t251 = qJD(1) * t180;
t250 = qJD(4) * t177;
t248 = qJD(5) * t179;
t246 = t332 * qJD(2);
t245 = t105 * qJD(2);
t145 = t284 / 0.2e1 - t169 / 0.2e1;
t244 = t145 * qJD(1);
t243 = t317 * qJD(1);
t242 = t317 * qJD(4);
t241 = t153 * qJD(1);
t240 = t153 * qJD(2);
t239 = t153 * qJD(3);
t238 = t153 * qJD(4);
t237 = t155 * qJD(1);
t236 = t155 * qJD(2);
t140 = t155 * qJD(3);
t235 = t155 * qJD(4);
t165 = -t178 ^ 2 + t180 ^ 2;
t234 = t165 * qJD(1);
t232 = t177 * qJD(2);
t231 = t178 * qJD(2);
t230 = t179 * qJD(2);
t229 = t180 * qJD(2);
t227 = pkin(1) * t178 * qJD(1);
t226 = pkin(1) * t251;
t223 = t88 * t237;
t222 = t155 * t249;
t221 = t155 * t248;
t220 = t153 * t237;
t100 = t153 * t236;
t219 = t177 * t241;
t218 = t153 * t232;
t217 = t317 * t252;
t216 = t178 * t229;
t215 = t177 * t248;
t129 = t179 * t237;
t214 = t177 * t230;
t208 = t145 * qJD(5) + t220;
t207 = qJD(5) + t237;
t206 = t318 * t215;
t204 = qJD(2) * t210;
t202 = t299 + t300;
t199 = t153 * t167 + t286;
t198 = t207 * t177;
t193 = t167 * t315 + t287 / 0.2e1;
t186 = t61 / 0.2e1 + t193;
t24 = t186 * t179;
t192 = -t24 * qJD(1) + t168 * t232;
t22 = t186 * t177;
t191 = -t22 * qJD(1) - t168 * t230;
t70 = -t91 * qJD(1) + t214;
t190 = t153 * t198;
t56 = t179 * t252 * t318 + t91 * qJD(2);
t96 = t164 * t318;
t188 = t96 * qJD(1) + t204;
t187 = qJD(1) * t210 - t164 * qJD(2);
t166 = t178 * t251;
t159 = t168 * qJD(4);
t130 = t145 * qJD(2);
t113 = -t129 - t248;
t79 = t285 + 0.2e1 * t189;
t72 = t172 + t184;
t51 = t213 + t170 * t155 / 0.2e1 + t172 + t288 / 0.2e1 + t312 / 0.2e1;
t25 = -t336 - t305 / 0.2e1 + t193 * t179;
t23 = t335 - t307 / 0.2e1 + t193 * t177;
t9 = t181 - t194;
t7 = t183 - t195;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, t165 * qJD(2), 0, -t216, 0, 0, -pkin(1) * t231, -pkin(1) * t229, 0, 0, -t100, t330, 0, t100, 0, 0, t80 * qJD(2), t81 * qJD(2), t328, t31 * qJD(2) + t321, 0, 0, 0, -t100, t330, t100, t328, t44 * qJD(2) + t153 * t235, t45 * qJD(2) + t242, t26 * qJD(2) - t235 * t88 + t321, t100 * t174 + t206, -t96 * qJD(5) + t155 * t204, -t62 * qJD(2) + t153 * t221, t100 * t175 - t206, -t63 * qJD(2) - t153 * t222, -t100, t4 * qJD(2) + t64 * qJD(3) + t28 * qJD(5) + t317 * t250, t5 * qJD(2) - t54 * qJD(3) + t27 * qJD(5) + t179 * t242, t2 * qJD(2) + t55 * qJD(4), t1 * qJD(2) + t6 * qJD(3) - t12 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, t234, t229, -t166, -t231, 0, -pkin(6) * t229 - t227, pkin(6) * t231 - t226, 0, 0, -t220, t331, -t240, t220, -t236, 0, -t246 + t262, -t245 + t261, (t153 * t291 - t155 * t176) * t309, t277 + (t105 * t176 - t291 * t332) * t309 + t72 * qJD(3), 0, t240, t236, -t220, t331, t220, (-t170 * t153 - t286) * qJD(2) - t238, t246 + t276, t245 + t275, t282 + (t105 * t168 + t170 * t332) * qJD(2) + t51 * qJD(3) + t79 * qJD(4), t258 + (t174 * t241 + t214) * t155, (t133 - t132) * qJD(2) + (-qJD(5) + t237) * t210, -t153 * t230 - t268, -t258 + (t175 * t241 - t214) * t155, t218 - t267, -t208, t302 + (-t179 * t199 + t295) * qJD(2) - t92 * qJD(4) + t23 * qJD(5), t77 * t230 + t297 + t25 * qJD(5) + (qJD(2) * t199 + t238) * t177, -qJD(2) * t202 + t303, t308 + (t167 * t202 + t77 * t168) * qJD(2) + t7 * qJD(3) + t9 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t329, t72 * qJD(2) + t319, 0, 0, 0, 0, 0, 0, t329, 0, 0, t51 * qJD(2) + t319, 0, 0, 0, 0, 0, 0, t266, -t270, 0, t7 * qJD(2) + t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t240, t220, t243, t79 * qJD(2) - t223, 0, 0, 0, 0, 0, 0, t217 - t256, t179 * t243 + t218, t269, t9 * qJD(2) - t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, -t188, t207 * t92, -t56, -t190, -t130, t23 * qJD(2) - t43 * qJD(5) + t280, t25 * qJD(2) + t42 * qJD(5) + t281, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, -t234, 0, t166, 0, 0, t227, t226, 0, 0, t220, -t331, 0, -t220, 0, 0, -t140 - t262, t239 - t261, 0, t73 * qJD(3) - t277, 0, 0, 0, t220, -t331, -t220, 0, t140 - t276, -t239 - t275, -t50 * qJD(3) + t102 * qJD(4) - t282, -t174 * t220 + t258, -0.2e1 * t179 * t190, -t222 + t268, -t175 * t220 - t258, -t221 + t267, t208, t22 * qJD(5) - t177 * t239 - t302, -t92 * qJD(3) + t24 * qJD(5) - t297, t95 * qJD(3) - t303, t8 * qJD(3) + t10 * qJD(4) - t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t159, -t215, t164 * qJD(5), 0, t215, 0, 0, t168 * t248 + t250, qJD(4) * t179 - t168 * t249, 0, t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t237, t241, 0, t265, 0, 0, 0, 0, 0, 0, 0, t237, -t241, -t272, 0, 0, 0, 0, 0, 0, -t219, -t257, t255, t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t326, 0, 0, 0, 0, 0, 0, t232, t230, 0, t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, -t187, -t198, t70, t113, t244, -t167 * t249 - t191, -t167 * t248 - t192, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, -t240, -t329, -t73 * qJD(2) - t319, 0, 0, 0, 0, 0, 0, -t329, -t236, t240, t50 * qJD(2) - t235 - t319, 0, 0, 0, 0, 0, 0, t218 - t221 - t266, t256 + t259 + t270, -t95 * qJD(2), -t8 * qJD(2) - t52 * qJD(4) - t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, -t241, 0, -t265, 0, 0, 0, 0, 0, 0, 0, -t237, t241, t272, 0, 0, 0, 0, 0, 0, t219, t257, -t255, -t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t237, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, t333, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t220, -t243, -t102 * qJD(2) + t140 + t223, 0, 0, 0, 0, 0, 0, -t217 - t259, (-qJD(5) * t155 - t243) * t179, -t269, -t10 * qJD(2) + t52 * qJD(3) + t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t326, 0, 0, 0, 0, 0, 0, -t232, -t230, 0, -t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t333, -t207 * t179, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, t188, (-t179 * t241 + t232) * t155, t56, (t219 + t230) * t155, -t130, -t22 * qJD(2) + t89 * qJD(4) + t140 * t179 - t280, -t24 * qJD(2) - t89 * qJD(3) + t179 * t235 - t281, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, t187, t177 * t237, -t70, t129, -t244, t191, t192, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, -t260, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, t129, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
