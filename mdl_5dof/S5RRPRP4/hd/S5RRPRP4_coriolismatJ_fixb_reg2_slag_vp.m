% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:53
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRPRP4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:53:01
% EndTime: 2019-12-31 19:53:03
% DurationCPUTime: 1.68s
% Computational Cost: add. (740->204), mult. (1499->174), div. (0->0), fcn. (1011->4), ass. (0->138)
t93 = sin(qJ(4));
t95 = cos(qJ(4));
t53 = -t93 * pkin(4) + t95 * qJ(5);
t112 = -qJ(3) + t53;
t161 = t112 * t95;
t94 = sin(qJ(2));
t166 = t94 * pkin(1);
t40 = -t112 + t166;
t162 = t40 * t95;
t158 = t162 / 0.2e1 - t161 / 0.2e1;
t148 = t93 * qJ(5);
t165 = t95 * pkin(4);
t52 = t148 + t165;
t43 = t52 * t93;
t174 = t158 + t43;
t91 = t93 ^ 2;
t92 = t95 ^ 2;
t173 = t91 + t92;
t137 = t93 * qJD(5);
t172 = qJD(4) * t53 + t137;
t74 = t91 - t92;
t89 = qJD(1) + qJD(2);
t171 = t89 * t74;
t77 = qJ(3) + t166;
t116 = qJ(3) / 0.2e1 + t77 / 0.2e1;
t170 = t116 * t95;
t96 = cos(qJ(2));
t164 = t96 * pkin(1);
t160 = t52 * t95;
t159 = t77 * t96;
t97 = -pkin(2) - pkin(7);
t156 = t173 * t97 * t166;
t150 = pkin(1) * qJD(2);
t82 = t96 * t150;
t66 = t93 * t82;
t86 = qJD(3) * t93;
t155 = t66 + t86;
t68 = t95 * t82;
t87 = qJD(3) * t95;
t154 = t68 + t87;
t84 = t92 * qJD(5);
t153 = t84 - t87;
t151 = pkin(1) * qJD(1);
t81 = t96 * t151;
t69 = t95 * t81;
t152 = t87 - t69;
t115 = t173 * t94;
t117 = -pkin(2) - t164;
t76 = -pkin(7) + t117;
t114 = t76 * t115;
t7 = (t40 * t96 + t114) * pkin(1);
t149 = t7 * qJD(1);
t10 = (t114 + t159) * pkin(1);
t146 = t10 * qJD(1);
t12 = t43 + t162;
t145 = t12 * qJD(1);
t32 = t40 * t93;
t13 = -t32 + t160;
t144 = t13 * qJD(1);
t26 = -pkin(1) * t159 - t117 * t166;
t143 = t26 * qJD(1);
t142 = t40 * qJD(1);
t41 = pkin(1) * t115;
t34 = t41 * qJD(1);
t141 = t112 * qJD(2);
t140 = t74 * qJD(4);
t139 = t77 * qJD(1);
t138 = t93 * qJD(4);
t136 = t95 * qJD(1);
t85 = t95 * qJD(4);
t135 = t82 + qJD(3);
t134 = qJ(3) * qJD(2);
t133 = qJ(3) * qJD(4);
t132 = qJD(4) * qJ(5);
t130 = -t68 + t153;
t129 = t94 * t150;
t128 = t94 * t151;
t127 = -t166 / 0.2e1;
t80 = t166 / 0.2e1;
t126 = t52 * t142;
t125 = t40 * t136;
t124 = t93 * t139;
t123 = t77 * t136;
t122 = t76 * t138;
t121 = t97 * t138;
t120 = t76 * t85;
t119 = t97 * t85;
t118 = t91 / 0.2e1 + t92 / 0.2e1;
t50 = t89 * t95;
t113 = -t137 * t95 + t86;
t16 = t43 - t161;
t64 = t95 * t80;
t4 = t64 - t174;
t111 = qJD(1) * t4 - qJD(2) * t16;
t42 = t112 * t93;
t17 = t42 + t160;
t109 = t160 - t32 / 0.2e1 + t42 / 0.2e1;
t61 = t93 * t80;
t3 = t61 + t109;
t110 = qJD(1) * t3 + qJD(2) * t17;
t24 = -qJ(3) + (-0.1e1 / 0.2e1 + t118) * t166;
t14 = t24 + t53;
t108 = qJD(1) * t14 + t141;
t106 = t113 + t66;
t105 = -qJD(1) * t24 + t134;
t99 = (t148 / 0.2e1 + t165 / 0.2e1) * t166;
t1 = (t112 / 0.2e1 - t40 / 0.2e1) * t52 + t99;
t104 = t1 * qJD(1) + t141 * t52;
t65 = t95 * t127;
t8 = t65 + t158;
t103 = qJD(1) * t8 - t141 * t95;
t62 = t93 * t127;
t19 = t116 * t93 + t62;
t102 = qJD(1) * t19 + t134 * t93;
t20 = t64 - t170;
t101 = qJD(1) * t20 - t134 * t95;
t100 = qJD(4) * t52 - qJD(5) * t95 + qJD(3);
t25 = t118 * t166 + qJ(3) + t80;
t90 = qJ(3) * qJD(3);
t83 = qJ(3) * t164;
t75 = t93 * t85;
t73 = t89 * qJ(3);
t70 = t77 * qJD(3);
t67 = t93 * t81;
t49 = t89 * t92;
t48 = t89 * t93;
t44 = t89 * t166;
t36 = t93 * t50;
t35 = t41 * qJD(2);
t22 = t64 + t170;
t21 = t62 - (qJ(3) + t77) * t93 / 0.2e1;
t15 = t25 - t53;
t11 = -t35 - t34;
t9 = t65 - t158;
t6 = t61 - t109;
t5 = t64 + t174;
t2 = t99 + (t40 - t112) * t52 / 0.2e1;
t18 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t129, -t82, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, t135, -qJD(2) * t26 + t70, -t75, t140, 0, t75, 0, 0, t77 * t85 + t155, -t138 * t77 + t154, -t35, qJD(2) * t10 + t70, -t75, 0, -t140, 0, 0, t75, qJD(4) * t12 + t106, -t35, -qJD(4) * t13 + t130, t7 * qJD(2) + t100 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, -t81 - t82, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, t81 + t135, -t143 + (-pkin(2) * t166 + t83) * qJD(2) + t70, -t75, t140, 0, t75, 0, 0, qJD(4) * t22 + t155 + t67, qJD(4) * t21 + t154 + t69, t11, t146 + (t83 + t156) * qJD(2) + t25 * qJD(3), -t75, 0, -t140, 0, 0, t75, qJD(4) * t5 + t106 + t67, t11, qJD(4) * t6 + t130 - t69, t149 + (-t112 * t164 + t156) * qJD(2) + t15 * qJD(3) + t2 * qJD(4) + t9 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, qJD(2) * t77 + t139, 0, 0, 0, 0, 0, 0, t48, t50, 0, qJD(2) * t25 + t139, 0, 0, 0, 0, 0, 0, t48, 0, -t50, qJD(2) * t15 + t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, t171, -t138, t36, -t85, 0, qJD(2) * t22 - t122 + t123, qJD(2) * t21 - t120 - t124, 0, 0, -t36, -t138, -t171, 0, t85, t36, qJD(2) * t5 - t122 + t145, -t172, qJD(2) * t6 + t120 - t144, t2 * qJD(2) + t172 * t76 + t126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, -t138, t49, qJD(2) * t9 + t122 - t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, t81, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t128, -t81 + qJD(3), t90 + t143, -t75, t140, 0, t75, 0, 0, -qJD(4) * t20 - t67 + t86, -qJD(4) * t19 + t152, t34, -qJD(3) * t24 - t146, -t75, 0, -t140, 0, 0, t75, -qJD(4) * t4 + t113 - t67, t34, -qJD(4) * t3 - t152 + t84, -qJD(3) * t14 - qJD(4) * t1 - qJD(5) * t8 - t149; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t90, -t75, t140, 0, t75, 0, 0, t133 * t95 + t86, -t133 * t93 + t87, 0, t90, -t75, 0, -t140, 0, 0, t75, qJD(4) * t16 + t113, 0, -qJD(4) * t17 + t153, -t100 * t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, t73, 0, 0, 0, 0, 0, 0, t48, t50, 0, t105, 0, 0, 0, 0, 0, 0, t48, 0, -t50, -t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, t171, -t138, t36, -t85, 0, -t101 - t121, -t102 - t119, 0, 0, -t36, -t138, -t171, 0, t85, t36, -t111 - t121, -t172, -t110 + t119, t172 * t97 - t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, -t138, t49, -t103 + t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t89, -t139 - t134, 0, 0, 0, 0, 0, 0, -t48, -t50, 0, qJD(2) * t24 - t139, 0, 0, 0, 0, 0, 0, -t48, 0, t50, qJD(2) * t14 - t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t89, -t73, 0, 0, 0, 0, 0, 0, -t48, -t50, 0, -t105, 0, 0, 0, 0, 0, 0, -t48, 0, t50, t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t138, -t85, 0, 0, 0, 0, 0, 0, 0, 0, -t138, 0, t85, t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, -t171, 0, -t36, 0, 0, qJD(2) * t20 - t123, qJD(2) * t19 + t124, 0, 0, t36, 0, t171, 0, 0, -t36, qJD(2) * t4 - t145, 0, qJD(2) * t3 + t144, qJD(2) * t1 - t126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, -t171, 0, -t36, 0, 0, t101, t102, 0, 0, t36, 0, t171, 0, 0, -t36, t111, 0, t110, t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, -t49, qJD(2) * t8 + t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, -t49, t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4), -t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t18;
