% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PPRRP4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d3,d4,theta1]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:34
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PPRRP4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PPRRP4_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PPRRP4_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PPRRP4_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PPRRP4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5PPRRP4_invdynm_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:34:47
% EndTime: 2019-12-31 17:34:51
% DurationCPUTime: 3.98s
% Computational Cost: add. (7868->394), mult. (15834->397), div. (0->0), fcn. (9148->6), ass. (0->256)
t556 = cos(qJ(3));
t554 = sin(qJ(3));
t600 = t554 * qJDD(3);
t652 = qJD(3) ^ 2;
t511 = t556 * t652 + t600;
t547 = g(3) - qJDD(1);
t487 = pkin(5) * t511 + t556 * t547;
t550 = sin(pkin(7));
t551 = cos(pkin(7));
t599 = t556 * qJDD(3);
t512 = t554 * t652 - t599;
t584 = pkin(5) * t512 + t554 * t547;
t656 = t551 * t511 + t550 * t512;
t667 = -qJ(1) * t656 + t551 * t487 + t550 * t584;
t553 = sin(qJ(4));
t555 = cos(qJ(4));
t528 = t553 * t652 * t555;
t518 = qJDD(4) + t528;
t641 = pkin(4) * t518;
t516 = t551 * g(1) + t550 * g(2);
t515 = t550 * g(1) - t551 * g(2);
t587 = qJDD(2) - t515;
t461 = -t554 * t516 - t556 * t587;
t462 = -t556 * t516 + t554 * t587;
t424 = t556 * t461 - t554 * t462;
t582 = t554 * t461 + t556 * t462;
t666 = t550 * t424 - t551 * t582;
t665 = t551 * t424 + t550 * t582;
t459 = -t550 * t511 + t551 * t512;
t664 = qJ(1) * t459 + t550 * t487 - t551 * t584;
t546 = t555 ^ 2;
t543 = t546 * t652;
t557 = qJD(4) ^ 2;
t524 = -t543 - t557;
t617 = t553 * t518;
t478 = t555 * t524 - t617;
t603 = qJD(3) * qJD(4);
t536 = t553 * t603;
t540 = t555 * qJDD(3);
t507 = t540 - 0.2e1 * t536;
t440 = t554 * t478 + t556 * t507;
t442 = t556 * t478 - t554 * t507;
t659 = -pkin(1) * t440 + qJ(2) * t442;
t545 = t553 ^ 2;
t604 = t545 * t652;
t522 = -t557 - t604;
t519 = qJDD(4) - t528;
t612 = t555 * t519;
t480 = -t553 * t522 - t612;
t537 = t555 * t603;
t601 = t553 * qJDD(3);
t504 = 0.2e1 * t537 + t601;
t441 = t554 * t480 - t556 * t504;
t443 = t556 * t480 + t554 * t504;
t658 = -pkin(1) * t441 + qJ(2) * t443;
t606 = t545 + t546;
t510 = t606 * qJDD(3);
t513 = t543 + t604;
t463 = t554 * t510 + t556 * t513;
t464 = t556 * t510 - t554 * t513;
t657 = -pkin(1) * t463 + qJ(2) * t464;
t496 = t550 * t516;
t655 = t551 * t587 + t496;
t497 = t551 * t516;
t654 = t550 * t587 - t497;
t651 = pkin(1) + pkin(2);
t613 = t555 * t518;
t474 = t553 * t524 + t613;
t650 = pkin(1) * t474;
t616 = t553 * t519;
t476 = t555 * t522 - t616;
t649 = pkin(1) * t476;
t648 = pkin(2) * t440;
t647 = pkin(2) * t441;
t646 = pkin(2) * t463;
t535 = t555 * t547;
t454 = -t652 * pkin(3) + qJDD(3) * pkin(6) + t462;
t618 = t553 * t454;
t434 = -t535 + t618;
t435 = t555 * t454 + t553 * t547;
t390 = t555 * t434 - t553 * t435;
t645 = pkin(3) * t390;
t644 = pkin(3) * t474;
t643 = pkin(3) * t476;
t505 = t537 + t601;
t573 = -t535 + (t505 - t537) * qJ(5) - t641;
t602 = (qJD(3) * qJD(5));
t591 = t454 + (2 * t602);
t399 = t553 * t591 + t573;
t642 = pkin(4) * t399;
t391 = t553 * t434 + t555 * t435;
t453 = -qJDD(3) * pkin(3) - t652 * pkin(6) + t461;
t378 = t556 * t391 + t554 * t453;
t640 = pkin(5) * t378;
t639 = pkin(5) * t424;
t638 = pkin(5) * t582;
t637 = pkin(5) * t440;
t636 = pkin(5) * t441;
t635 = pkin(5) * t463;
t634 = pkin(5) * t464;
t633 = pkin(6) * t474;
t632 = pkin(6) * t476;
t631 = pkin(6) * t556;
t630 = qJ(1) * (-t551 * t440 + t550 * t442);
t629 = qJ(1) * (-t551 * t441 + t550 * t443);
t628 = qJ(1) * (-t551 * t463 + t550 * t464);
t626 = qJ(2) * t474;
t625 = qJ(2) * t476;
t624 = qJ(2) * t547;
t621 = t550 * t547;
t533 = t551 * t547;
t620 = t553 * t399;
t619 = t553 * t453;
t615 = t555 * t399;
t614 = t555 * t453;
t611 = -pkin(2) * t474 + pkin(5) * t442;
t610 = -pkin(2) * t476 + pkin(5) * t443;
t609 = pkin(3) * t507 + pkin(6) * t478;
t608 = pkin(3) * t504 - pkin(6) * t480;
t607 = pkin(3) * t513 + pkin(6) * t510;
t605 = qJD(3) * t553;
t598 = pkin(4) * t601;
t597 = t555 * t602;
t596 = t553 * t600;
t595 = t553 * t599;
t377 = t554 * t391 - t556 * t453;
t594 = -pkin(5) * t377 - t554 * t645;
t593 = t551 * t515 - t496;
t592 = -t550 * t515 - t497;
t590 = t554 * t528;
t589 = t556 * t528;
t588 = pkin(3) * t453 - pkin(6) * t391;
t586 = t609 - t614;
t585 = -t608 + t619;
t506 = t540 - t536;
t517 = qJD(4) * pkin(4) - qJ(5) * t605;
t583 = pkin(4) * t543 - t506 * qJ(5) + qJD(4) * t517 - t435;
t581 = -pkin(3) * t556 - pkin(6) * t554 - pkin(2);
t414 = -t506 * pkin(4) - qJ(5) * t543 + t517 * t605 + qJDD(5) + t453;
t396 = pkin(4) * t507 + qJ(5) * t524 - t414;
t580 = -qJ(5) * t617 + t555 * t396 + t609;
t579 = t391 + t607;
t531 = 0.2e1 * t597;
t400 = t531 - t583;
t372 = t553 * t400 - t615;
t374 = -pkin(4) * t414 + qJ(5) * t400;
t350 = -pkin(6) * t372 + qJ(5) * t615 - t553 * t374;
t358 = -pkin(3) * t372 + t642;
t373 = t555 * t400 + t620;
t359 = t554 * t373 - t556 * t414;
t578 = -pkin(5) * t359 + t556 * t350 - t554 * t358;
t409 = -qJ(5) * t522 + t414;
t469 = -pkin(4) * t504 - qJ(5) * t519;
t379 = t555 * t409 - t553 * t469 - t632;
t564 = pkin(4) * t522 + t583;
t384 = t531 - t564 - t643;
t577 = t556 * t379 - t554 * t384 - t636;
t380 = -qJ(5) * t613 - t553 * t396 - t633;
t383 = t399 - t641 - t644;
t576 = t556 * t380 - t554 * t383 - t637;
t412 = t434 - t644;
t418 = t619 - t633;
t575 = -t554 * t412 + t556 * t418 - t637;
t413 = t435 - t643;
t419 = t614 - t632;
t574 = -t554 * t413 + t556 * t419 - t636;
t572 = -t586 - t648;
t571 = -t585 - t647;
t570 = t554 * t379 + t556 * t384 + t610;
t569 = t554 * t380 + t556 * t383 + t611;
t388 = pkin(4) * t513 + qJ(5) * t540 + t400;
t397 = (qJ(5) * qJDD(3) + t591) * t553 + t573;
t568 = t555 * t388 + t553 * t397 + t607;
t567 = t553 * t409 + t555 * t469 - t608;
t566 = t556 * t412 + t554 * t418 + t611;
t565 = t556 * t413 + t554 * t419 + t610;
t360 = t556 * t373 + t554 * t414;
t563 = -pkin(5) * t360 - t554 * t350 - t556 * t358;
t562 = -t580 - t648;
t561 = -t579 - t646;
t560 = pkin(3) * t414 - pkin(6) * t373 - qJ(5) * t620 - t555 * t374;
t559 = -t568 - t646;
t558 = -t567 - t647;
t523 = t543 - t557;
t521 = t557 - t604;
t514 = -t543 + t604;
t502 = t606 * t603;
t484 = t554 * qJDD(4) + t556 * t502;
t483 = t555 * t505 - t545 * t603;
t482 = -t556 * qJDD(4) + t554 * t502;
t481 = -t553 * t506 - t546 * t603;
t479 = -t553 * t521 + t613;
t477 = t555 * t523 - t616;
t475 = t555 * t521 + t617;
t473 = t553 * t523 + t612;
t472 = (t505 + t537) * t553;
t471 = -t555 * t506 + t537 * t553;
t470 = -pkin(1) * t587 - qJ(2) * t516;
t456 = -t553 * t504 + t555 * t507;
t455 = t555 * t504 + t553 * t507;
t452 = t556 * t483 - t590;
t451 = t556 * t481 + t590;
t450 = t554 * t483 + t589;
t449 = t554 * t481 - t589;
t448 = t556 * t479 + t596;
t447 = t556 * t477 + t540 * t554;
t446 = t554 * t479 - t595;
t445 = t554 * t477 - t555 * t599;
t431 = t556 * t456 + t554 * t514;
t430 = t554 * t456 - t556 * t514;
t428 = t550 * t482 + t551 * t484;
t427 = -t551 * t482 + t550 * t484;
t421 = -qJ(2) * t511 + t651 * t512 + t461;
t420 = qJ(2) * t512 + t651 * t511 + t462;
t417 = qJ(1) * (t550 * t463 + t551 * t464);
t411 = t624 + t639;
t410 = t651 * t547 - t638;
t408 = t550 * t450 + t551 * t452;
t407 = t550 * t449 + t551 * t451;
t406 = -t551 * t450 + t550 * t452;
t405 = -t551 * t449 + t550 * t451;
t404 = t550 * t446 + t551 * t448;
t403 = t550 * t445 + t551 * t447;
t402 = -t551 * t446 + t550 * t448;
t401 = -t551 * t445 + t550 * t447;
t393 = qJ(1) * (t550 * t441 + t551 * t443);
t392 = qJ(1) * (t550 * t440 + t551 * t442);
t386 = t550 * t430 + t551 * t431;
t385 = -t551 * t430 + t550 * t431;
t382 = t556 * t390 - t635;
t381 = t554 * t390 + t634;
t371 = -t553 * t388 + t555 * t397;
t370 = qJ(2) * t582 + t424 * t651;
t369 = t561 + t657;
t368 = t571 + t658;
t367 = t572 + t659;
t366 = t574 + t625;
t365 = t575 + t626;
t364 = -pkin(4) * t596 + t556 * t371 - t635;
t363 = pkin(4) * t595 + t554 * t371 + t634;
t362 = -t565 + t649;
t361 = -t566 + t650;
t357 = t562 + t659;
t356 = t558 + t658;
t355 = t559 + t657;
t354 = t577 + t625;
t353 = t576 + t626;
t352 = -t570 + t649;
t351 = -t569 + t650;
t348 = -(qJ(2) - t631) * t390 + t594;
t347 = -t640 - (pkin(1) - t581) * t390;
t346 = qJ(2) * t378 - t651 * t377 + t588;
t345 = qJ(2) * t372 + t578;
t344 = qJ(2) * t360 - t651 * t359 + t560;
t343 = t651 * t372 + t563;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t621, -t533, -t593, -qJ(1) * t593, 0, 0, 0, 0, 0, 0, -t621, t655, t533, qJ(1) * t655 + (-t550 * pkin(1) + t551 * qJ(2)) * t547, 0, 0, -t459, 0, -t656, 0, -t664, t667, t665, -qJ(1) * t665 - t550 * t410 + t551 * t411, t408, t386, t404, t407, t403, t428, -t550 * t361 + t551 * t365 - t630, -t550 * t362 + t551 * t366 - t629, t550 * t381 + t551 * t382 - t628, t551 * t348 - t550 * t347 - qJ(1) * (-t551 * t377 + t550 * t378), t408, t386, t404, t407, t403, t428, -t550 * t351 + t551 * t353 - t630, -t550 * t352 + t551 * t354 - t629, t550 * t363 + t551 * t364 - t628, t551 * t345 - t550 * t343 - qJ(1) * (-t551 * t359 + t550 * t360); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t533, -t621, t592, qJ(1) * t592, 0, 0, 0, 0, 0, 0, t533, t654, t621, qJ(1) * t654 + (t551 * pkin(1) + t550 * qJ(2)) * t547, 0, 0, -t656, 0, t459, 0, t667, t664, t666, -qJ(1) * t666 + t551 * t410 + t550 * t411, t406, t385, t402, t405, t401, t427, t551 * t361 + t550 * t365 + t392, t551 * t362 + t550 * t366 + t393, -t551 * t381 + t550 * t382 + t417, t550 * t348 + t551 * t347 + qJ(1) * (t550 * t377 + t551 * t378), t406, t385, t402, t405, t401, t427, t551 * t351 + t550 * t353 + t392, t551 * t352 + t550 * t354 + t393, -t551 * t363 + t550 * t364 + t417, t550 * t345 + t551 * t343 + qJ(1) * (t550 * t359 + t551 * t360); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t515, t516, 0, 0, 0, 0, 0, 0, 0, 0, -t587, 0, -t516, t470, 0, 0, 0, 0, 0, -qJDD(3), t421, t420, 0, t370, -t472, -t455, -t475, t471, -t473, 0, t367, t368, t369, t346, -t472, -t455, -t475, t471, -t473, 0, t357, t356, t355, t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t547, -t515, 0, 0, 0, 0, 0, 0, 0, 0, t587, t547, t624, 0, 0, -t512, 0, -t511, 0, t584, t487, t424, t411, t452, t431, t448, t451, t447, t484, t365, t366, t382, t348, t452, t431, t448, t451, t447, t484, t353, t354, t364, t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t547, 0, -t516, 0, 0, 0, 0, 0, 0, 0, t547, -t516, 0, pkin(1) * t547, 0, 0, -t511, 0, t512, 0, t487, -t584, -t582, t410, -t450, -t430, -t446, -t449, -t445, -t482, t361, t362, -t381, t347, -t450, -t430, -t446, -t449, -t445, -t482, t351, t352, -t363, t343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t515, t516, 0, 0, 0, 0, 0, 0, 0, 0, -t587, 0, -t516, t470, 0, 0, 0, 0, 0, -qJDD(3), t421, t420, 0, t370, -t472, -t455, -t475, t471, -t473, 0, t367, t368, t369, t346, -t472, -t455, -t475, t471, -t473, 0, t357, t356, t355, t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t587, t547, 0, 0, 0, -t512, 0, -t511, 0, t584, t487, t424, t639, t452, t431, t448, t451, t447, t484, t575, t574, t382, t390 * t631 + t594, t452, t431, t448, t451, t447, t484, t576, t577, t364, t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t587, 0, -t516, 0, 0, 0, 0, 0, 0, -qJDD(3), pkin(2) * t512 + t461, pkin(2) * t511 + t462, 0, pkin(2) * t424, -t472, -t455, -t475, t471, -t473, 0, t572, t571, t561, -pkin(2) * t377 + t588, -t472, -t455, -t475, t471, -t473, 0, t562, t558, t559, -pkin(2) * t359 + t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t547, t516, 0, 0, 0, 0, t511, 0, -t512, 0, -t487, t584, t582, -pkin(2) * t547 + t638, t450, t430, t446, t449, t445, t482, t566, t565, t381, -t390 * t581 + t640, t450, t430, t446, t449, t445, t482, t569, t570, t363, -pkin(2) * t372 - t563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), 0, -t652, 0, 0, t547, t461, 0, t483, t456, t479, t481, t477, t502, t418, t419, t390, pkin(6) * t390, t483, t456, t479, t481, t477, t502, t380, t379, t371, t350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t652, 0, qJDD(3), 0, -t547, 0, t462, 0, t528, -t514, -t601, -t528, -t540, -qJDD(4), t412, t413, 0, t645, t528, -t514, -t601, -t528, -t540, -qJDD(4), t383, t384, t598, t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t461, -t462, 0, 0, t472, t455, t475, -t471, t473, 0, t586, t585, t579, -t588, t472, t455, t475, -t471, t473, 0, t580, t567, t568, -t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t505, t507, t518, -t537, t523, t537, 0, t453, t434, 0, t505, t507, t518, -t537, t523, t537, -qJ(5) * t518, t409, t397, qJ(5) * t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t536, t504, t521, t506, t519, -t536, -t453, 0, t435, 0, t536, t504, t521, t506, t519, -t536, t396, t469, t388, t374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t528, t514, t601, t528, t540, qJDD(4), -t434, -t435, 0, 0, -t528, t514, t601, t528, t540, qJDD(4), -0.2e1 * t553 * t602 - t573 - t618 + t641, t564 - 0.2e1 * t597, -t598, -t642; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t505, t507, t518, -t537, t523, t537, 0, t414, t399, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t536, t504, t521, t506, t519, -t536, -t414, 0, t400, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t528, t514, t601, t528, t540, qJDD(4), -t399, -t400, 0, 0;];
m_new_reg = t1;
