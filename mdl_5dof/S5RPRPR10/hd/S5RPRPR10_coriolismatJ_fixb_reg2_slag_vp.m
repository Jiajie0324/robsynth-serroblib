% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:26
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPR10_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR10_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR10_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRPR10_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:26:09
% EndTime: 2019-12-31 18:26:11
% DurationCPUTime: 1.39s
% Computational Cost: add. (1656->143), mult. (2561->189), div. (0->0), fcn. (2446->6), ass. (0->109)
t137 = cos(pkin(8));
t154 = cos(qJ(3));
t156 = -pkin(1) - pkin(2);
t96 = sin(qJ(3));
t78 = t154 * qJ(2) + t96 * t156;
t94 = sin(pkin(8));
t146 = t94 * t78;
t77 = t96 * qJ(2) - t154 * t156;
t49 = -t137 * t77 - t146;
t158 = -t49 / 0.2e1;
t76 = -pkin(3) - t77;
t45 = t137 * t76 - t146;
t43 = pkin(4) - t45;
t110 = t137 * pkin(3);
t90 = -t110 - pkin(4);
t112 = t90 / 0.2e1 - t43 / 0.2e1;
t95 = sin(qJ(5));
t92 = t95 ^ 2;
t97 = cos(qJ(5));
t93 = t97 ^ 2;
t111 = t93 / 0.2e1 + t92 / 0.2e1;
t155 = t94 * pkin(3);
t89 = pkin(7) + t155;
t105 = t111 * t89;
t72 = t137 * t78;
t48 = -t94 * t77 + t72;
t159 = -t48 / 0.2e1;
t46 = t94 * t76 + t72;
t44 = -pkin(7) + t46;
t74 = -t137 * t154 + t94 * t96;
t75 = t137 * t96 + t94 * t154;
t1 = (-t111 * t49 + t112) * t75 + (t111 * t44 - t105 + t159) * t74;
t145 = t92 + t93;
t10 = (0.1e1 - t145) * t75 * t74;
t9 = t10 * qJD(2);
t164 = t1 * qJD(1) - t9;
t118 = qJD(1) - qJD(3);
t106 = t118 * t48;
t85 = t93 - t92;
t163 = t118 * t85;
t125 = t75 * qJD(3);
t127 = t75 * qJD(1);
t162 = t127 - t125;
t130 = t74 * qJD(1);
t161 = -t74 * qJD(3) + t130;
t41 = t145 * t74;
t134 = t41 * qJD(1);
t160 = -t41 * qJD(3) + t134;
t153 = t43 * t75;
t152 = t43 * t95;
t151 = t45 * t75;
t150 = t46 * t74;
t149 = t74 * t94;
t148 = t75 * t90;
t147 = t90 * t95;
t144 = pkin(3) * qJD(3);
t3 = (-t110 / 0.2e1 + t158 + t45 / 0.2e1) * t75 + (-t155 / 0.2e1 + t46 / 0.2e1 + t159) * t74;
t142 = t3 * qJD(1);
t15 = t145 * t49;
t5 = t44 * t15 + t43 * t48;
t141 = t5 * qJD(1);
t6 = -t44 * t41 + t153;
t140 = t6 * qJD(1);
t7 = -t45 * t48 + t46 * t49;
t139 = t7 * qJD(1);
t8 = -t150 - t151;
t138 = t8 * qJD(1);
t136 = qJD(1) * t97;
t135 = qJD(3) * t97;
t133 = t41 * qJD(2);
t50 = t78 * t154 + t77 * t96;
t131 = t50 * qJD(1);
t129 = t74 * qJD(2);
t126 = t75 * qJD(2);
t124 = t85 * qJD(5);
t123 = t95 * qJD(5);
t122 = t96 * qJD(1);
t121 = t96 * qJD(2);
t120 = t97 * qJD(5);
t119 = qJ(2) * qJD(1);
t117 = qJD(1) * t152;
t116 = t43 * t136;
t114 = t48 * t74 / 0.2e1;
t113 = t49 * t75 / 0.2e1;
t109 = t154 * qJD(1);
t108 = t154 * qJD(2);
t107 = t137 * t75;
t104 = t158 + t112;
t103 = t48 * qJD(1) + t126;
t102 = t48 * qJD(3) + t126;
t11 = t104 * t95;
t101 = t11 * qJD(1) - qJD(3) * t147;
t12 = t104 * t97;
t100 = t12 * qJD(1) - t90 * t135;
t36 = t74 * t95;
t63 = t97 * t127;
t99 = -t36 * qJD(5) + t97 * t125 - t63;
t38 = t74 * t97;
t62 = t95 * t127;
t98 = t38 * qJD(5) + t95 * t125 - t62;
t87 = t95 * t120;
t82 = -qJD(3) * t154 + t109;
t81 = t118 * t96;
t67 = (-t135 + t136) * t95;
t14 = (t158 - t112) * t97;
t13 = -t147 / 0.2e1 + t152 / 0.2e1 + t95 * t158;
t4 = t113 - t150 / 0.2e1 + t114 - t151 / 0.2e1 + (-t149 / 0.2e1 - t107 / 0.2e1) * pkin(3);
t2 = t114 + t153 / 0.2e1 + t148 / 0.2e1 - t74 * t105 + (-t44 * t74 / 0.2e1 + t113) * t145;
t16 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), 0, 0, 0, 0, 0, 0, t78 * qJD(3) + t121, -t77 * qJD(3) + t108, 0, t50 * qJD(2), 0, 0, 0, 0, 0, 0, t102, t49 * qJD(3) - t129, 0, t8 * qJD(2) + t7 * qJD(3), t87, t124, 0, -t87, 0, 0, t102 * t97 - t43 * t123, -t102 * t95 - t43 * t120, -t15 * qJD(3) + t133, t6 * qJD(2) + t5 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t119, 0, 0, 0, 0, 0, 0, t122, t109, 0, t131, 0, 0, 0, 0, 0, 0, t127, -t130, 0, t4 * qJD(3) + t138, 0, 0, 0, 0, 0, 0, t63, -t62, t134, t2 * qJD(3) + t140 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118 * t78, -t118 * t77, 0, 0, 0, 0, 0, 0, 0, 0, t106, t118 * t49, 0, t139 + t4 * qJD(2) + (-t137 * t48 + t49 * t94) * t144, -t87, -t124, 0, t87, 0, 0, t13 * qJD(5) + t106 * t97, t14 * qJD(5) - t95 * t106, -t118 * t15, t141 + t2 * qJD(2) + (t15 * t89 + t48 * t90) * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t163, -t120, -t67, t123, 0, t13 * qJD(3) - t120 * t44 - t117, t14 * qJD(3) + t123 * t44 - t116, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t119, 0, 0, 0, 0, 0, 0, -t81, -t82, 0, -t131, 0, 0, 0, 0, 0, 0, -t162, t161, 0, -t3 * qJD(3) - t138, 0, 0, 0, 0, 0, 0, t99, -t98, -t160, -t1 * qJD(3) - t140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t82, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t161, 0, -t142 + (-t107 - t149) * t144, 0, 0, 0, 0, 0, 0, -t99, t98, t160, (-t41 * t89 + t148) * qJD(3) - t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118 * t36 - t120 * t75, -t118 * t38 + t123 * t75, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t78 * qJD(1) - t121, t77 * qJD(1) - t108, 0, 0, 0, 0, 0, 0, 0, 0, -t103, -t49 * qJD(1) + t129, 0, t3 * qJD(2) - t139, -t87, -t124, 0, t87, 0, 0, -t11 * qJD(5) - t103 * t97, -t12 * qJD(5) + t103 * t95, t15 * qJD(1) - t133, t1 * qJD(2) - t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t122, -t109, 0, 0, 0, 0, 0, 0, 0, 0, -t127, t130, 0, t142, 0, 0, 0, 0, 0, 0, -t63, t62, -t134, t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t124, 0, -t87, 0, 0, t90 * t123, t90 * t120, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, -t163, t120, t67, -t123, 0, -t120 * t89 - t101, t123 * t89 - t100, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, -t120, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, -t163, 0, t67, 0, 0, t36 * qJD(2) + t11 * qJD(3) + t117, t38 * qJD(2) + t12 * qJD(3) + t116, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36 * qJD(1), t38 * qJD(1), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t163, 0, -t67, 0, 0, t101, t100, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t16;
