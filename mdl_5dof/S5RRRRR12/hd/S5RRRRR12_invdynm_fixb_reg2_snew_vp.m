% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRR12
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,alpha3,d1,d2,d3,d4,d5]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:58
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRR12_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR12_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR12_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR12_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR12_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S5RRRRR12_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:57:11
% EndTime: 2019-12-31 22:58:21
% DurationCPUTime: 74.21s
% Computational Cost: add. (860979->1006), mult. (2145532->1599), div. (0->0), fcn. (1794481->14), ass. (0->729)
t1786 = sin(qJ(5));
t1785 = cos(pkin(5));
t2002 = qJD(1) * t1785;
t1775 = qJD(2) + t2002;
t1788 = sin(qJ(3));
t1789 = sin(qJ(2));
t1793 = cos(qJ(3));
t1784 = cos(pkin(6));
t1794 = cos(qJ(2));
t1971 = t1784 * t1794;
t1782 = sin(pkin(6));
t1975 = t1782 * t1788;
t1783 = sin(pkin(5));
t2003 = qJD(1) * t1783;
t1735 = t1775 * t1975 + (t1788 * t1971 + t1789 * t1793) * t2003;
t1787 = sin(qJ(4));
t1792 = cos(qJ(4));
t1972 = t1783 * t1794;
t1958 = qJD(1) * t1972;
t1767 = t1782 * t1958;
t1978 = t1775 * t1784;
t1946 = -t1767 + t1978;
t1940 = qJD(3) + t1946;
t1714 = t1792 * t1735 + t1787 * t1940;
t1791 = cos(qJ(5));
t1944 = t1784 * t1958;
t1845 = t1775 * t1782 + t1944;
t1973 = t1783 * t1789;
t1959 = qJD(1) * t1973;
t1733 = t1788 * t1959 - t1793 * t1845;
t1823 = qJD(4) + t1733;
t1675 = t1714 * t1786 - t1791 * t1823;
t1677 = t1791 * t1714 + t1786 * t1823;
t1632 = t1677 * t1675;
t1773 = qJD(2) * t1959;
t1964 = qJDD(1) * t1794;
t1934 = t1783 * t1964 - t1773;
t1945 = qJDD(1) * t1785 + qJDD(2);
t1807 = t1782 * t1945 + t1784 * t1934;
t1965 = qJDD(1) * t1789;
t2001 = qJD(1) * t1794;
t1855 = qJD(2) * t2001 + t1965;
t1822 = t1855 * t1783;
t1803 = t1788 * t1807 + t1793 * t1822;
t1690 = -t1733 * qJD(3) + t1803;
t1739 = -t1782 * t1934 + t1784 * t1945 + qJDD(3);
t1948 = -t1787 * t1690 + t1792 * t1739;
t1857 = t1714 * qJD(4) - t1948;
t1639 = qJDD(5) + t1857;
t2017 = -t1632 + t1639;
t2026 = t1786 * t2017;
t1712 = t1735 * t1787 - t1792 * t1940;
t1669 = t1714 * t1712;
t1809 = t1788 * t1822 - t1807 * t1793;
t1806 = t1735 * qJD(3) + t1809;
t1689 = qJDD(4) + t1806;
t2016 = -t1669 + t1689;
t2025 = t1787 * t2016;
t2024 = t1791 * t2017;
t2023 = t1792 * t2016;
t1774 = t1775 ^ 2;
t1790 = sin(qJ(1));
t1795 = cos(qJ(1));
t1771 = t1790 * g(1) - t1795 * g(2);
t1863 = qJDD(1) * pkin(1) + t1771;
t1850 = t1785 * t1863;
t1772 = g(1) * t1795 + t1790 * g(2);
t2014 = qJD(1) ^ 2;
t2006 = t2014 * pkin(1);
t1854 = t1772 + t2006;
t1933 = t1945 * pkin(2);
t2008 = pkin(9) * t1782;
t1802 = t1774 * t2008 + t1789 * t1854 + t1794 * t1850 + t1933;
t1864 = -pkin(2) * t1794 - t1789 * t2008;
t1853 = t1789 * t1864;
t2007 = pkin(9) * t1784;
t1961 = -pkin(8) - t2007;
t2009 = pkin(8) * t1785;
t1963 = t1794 * t2009;
t2004 = t1794 * g(3);
t1799 = (-t2004 + t1961 * t1965 + ((-t1783 * t1853 + t1963) * qJD(1) + (-qJD(2) + t1775) * pkin(9) * t1971) * qJD(1)) * t1783 + t1802;
t2005 = t1785 * g(3);
t1943 = t1773 * pkin(2) - t2005;
t1780 = t1789 ^ 2;
t1781 = t1794 ^ 2;
t1966 = t1780 + t1781;
t1967 = qJD(2) + t1775;
t1974 = t1782 * t1794;
t1977 = t1775 * t1789;
t1801 = ((-pkin(1) + t1864) * qJDD(1) + (pkin(2) * t1977 - pkin(8) * t2003 + (-t1966 * t1784 * t2003 - t1967 * t1974) * pkin(9)) * qJD(1) - t1771) * t1783 + t1943;
t2022 = t1782 * t1801 + t1784 * t1799;
t1685 = t1823 * t1714;
t2021 = t1857 + t1685;
t1819 = t1823 ^ 2;
t1932 = t1940 ^ 2;
t1779 = t1783 ^ 2;
t2020 = t1779 * t1789;
t1986 = t1735 * t1733;
t1808 = t1739 - t1986;
t2019 = t1788 * t1808;
t2018 = t1793 * t1808;
t1875 = -t1792 * t1690 - t1787 * t1739;
t1641 = -t1712 * qJD(4) - t1875;
t1684 = t1823 * t1712;
t1609 = t1641 - t1684;
t1717 = t1940 * t1733;
t1660 = -t1717 + t1690;
t1860 = t1940 * t1735;
t2015 = -t1788 * t1717 - t1793 * t1860;
t1672 = t1675 ^ 2;
t1673 = t1677 ^ 2;
t1709 = qJD(5) + t1712;
t1708 = t1709 ^ 2;
t1710 = t1712 ^ 2;
t1711 = t1714 ^ 2;
t1730 = t1733 ^ 2;
t1731 = t1735 ^ 2;
t2013 = pkin(3) * t1788;
t2012 = pkin(3) * t1793;
t2011 = pkin(4) * t1787;
t2010 = pkin(8) * t1783;
t1704 = pkin(3) * t1733 - pkin(10) * t1735;
t1776 = g(3) * t1973;
t1824 = qJDD(1) * t2010 - t1772;
t1970 = t1785 * t1789;
t1666 = t1794 * t1824 + t1789 * t1850 - t1776 - pkin(2) * t1774 + t1807 * pkin(9) + (-pkin(1) * t2001 + (t1977 * t2007 + (pkin(8) * t1970 + t1864 * t1972) * qJD(1)) * t1783) * qJD(1);
t1968 = t1793 * t1666;
t1553 = -pkin(3) * t1932 + t1739 * pkin(10) - t1733 * t1704 + t2022 * t1788 + t1968;
t1797 = -t1782 * t1799 + t1784 * t1801 - t1660 * pkin(10) + (t1806 + t1860) * pkin(3);
t1479 = t1553 * t1787 - t1792 * t1797;
t1667 = pkin(4) * t1712 - pkin(11) * t1714;
t1442 = -t1689 * pkin(4) - pkin(11) * t1819 + t1667 * t1714 + t1479;
t2000 = t1442 * t1786;
t1999 = t1442 * t1791;
t1574 = t1788 * t1666 - t2022 * t1793;
t1552 = -t1739 * pkin(3) - t1932 * pkin(10) + t1735 * t1704 + t1574;
t1998 = t1552 * t1787;
t1997 = t1552 * t1792;
t1570 = t1632 + t1639;
t1996 = t1570 * t1786;
t1995 = t1570 * t1791;
t1618 = t1782 * t1802 - t1784 * t1943 + (t1782 * (-pkin(8) * t1965 - t2004) - t1784 * (-pkin(2) * t1964 - t1863) + ((t1782 * t1963 + (-t1782 * t1853 - t1784 * (-t1966 * t2007 - pkin(8))) * t1783) * qJD(1) + (-pkin(2) * t1789 + 0.2e1 * pkin(9) * t1974) * t1978) * qJD(1)) * t1783;
t1994 = t1618 * t1788;
t1993 = t1618 * t1793;
t1627 = t1669 + t1689;
t1992 = t1627 * t1787;
t1991 = t1627 * t1792;
t1679 = -t1739 - t1986;
t1990 = t1679 * t1788;
t1989 = t1679 * t1793;
t1988 = t1709 * t1786;
t1987 = t1709 * t1791;
t1816 = t2014 * t2010 + t1863;
t1746 = t1783 * t1816 + t2005;
t1985 = t1746 * t1789;
t1984 = t1746 * t1794;
t1969 = t1789 * t2014;
t1951 = t1794 * t1969;
t1770 = t1779 * t1951;
t1751 = t1770 + t1945;
t1983 = t1751 * t1789;
t1982 = t1751 * t1794;
t1752 = -t1770 + t1945;
t1981 = t1752 * t1789;
t1980 = t1752 * t1794;
t1976 = t1779 * t2014;
t1480 = t1792 * t1553 + t1787 * t1797;
t1962 = -pkin(4) * t1792 - pkin(3);
t1960 = t1775 * t2003;
t1957 = t1780 * t1976;
t1956 = t1781 * t1976;
t1955 = t1787 * t1632;
t1954 = t1792 * t1632;
t1953 = t1788 * t1669;
t1952 = t1793 * t1669;
t1950 = -t1775 + t2002;
t1443 = -pkin(4) * t1819 + t1689 * pkin(11) - t1712 * t1667 + t1480;
t1471 = t2021 * pkin(4) - t1609 * pkin(11) + t1552;
t1399 = t1443 * t1786 - t1791 * t1471;
t1400 = t1443 * t1791 + t1471 * t1786;
t1348 = t1399 * t1786 + t1791 * t1400;
t1408 = t1479 * t1787 + t1792 * t1480;
t1949 = -t1641 * t1786 + t1791 * t1689;
t1947 = -t1771 * t1790 - t1795 * t1772;
t1942 = -pkin(4) * t1442 + pkin(11) * t1348;
t1769 = qJDD(1) * t1795 - t1790 * t2014;
t1941 = -pkin(7) * t1769 - g(3) * t1790;
t1939 = 0.2e1 * qJD(3) + t1946;
t1750 = -t1957 - t1774;
t1724 = -t1750 * t1789 - t1980;
t1938 = pkin(8) * t1724 - t1985;
t1756 = -t1774 - t1956;
t1728 = t1756 * t1794 - t1983;
t1937 = pkin(8) * t1728 + t1984;
t1688 = -t1932 - t1730;
t1638 = t1688 * t1793 - t2019;
t1936 = pkin(9) * t1638 + t1993;
t1697 = -t1731 - t1932;
t1644 = -t1697 * t1788 + t1989;
t1935 = pkin(9) * t1644 - t1994;
t1330 = t1348 * t1787 - t1442 * t1792;
t1331 = t1348 * t1792 + t1442 * t1787;
t1347 = -t1399 * t1791 + t1400 * t1786;
t1930 = t1331 * t1788 - t1347 * t1793;
t1292 = -t1330 * t1782 + t1784 * t1930;
t1304 = t1331 * t1793 + t1347 * t1788;
t1931 = t1292 * t1794 + t1304 * t1789;
t1407 = -t1479 * t1792 + t1480 * t1787;
t1922 = t1408 * t1788 - t1552 * t1793;
t1351 = -t1407 * t1782 + t1784 * t1922;
t1393 = t1408 * t1793 + t1552 * t1788;
t1929 = t1351 * t1794 + t1393 * t1789;
t1546 = (-qJD(5) + t1709) * t1677 + t1949;
t1883 = -t1641 * t1791 - t1689 * t1786;
t1573 = -qJD(5) * t1675 - t1883;
t1647 = t1709 * t1675;
t1548 = t1573 + t1647;
t1477 = t1546 * t1791 + t1548 * t1786;
t1598 = t1672 + t1673;
t1438 = t1477 * t1787 + t1598 * t1792;
t1439 = t1477 * t1792 - t1598 * t1787;
t1475 = t1546 * t1786 - t1548 * t1791;
t1919 = t1439 * t1788 - t1475 * t1793;
t1362 = -t1438 * t1782 + t1784 * t1919;
t1397 = t1439 * t1793 + t1475 * t1788;
t1928 = t1362 * t1794 + t1397 * t1789;
t1572 = -qJD(5) * t1677 + t1949;
t1648 = t1709 * t1677;
t1545 = t1572 - t1648;
t1547 = t1573 - t1647;
t1476 = t1545 * t1791 - t1547 * t1786;
t1631 = t1673 - t1672;
t1448 = t1476 * t1787 - t1631 * t1792;
t1449 = t1476 * t1792 + t1631 * t1787;
t1474 = t1545 * t1786 + t1547 * t1791;
t1916 = t1449 * t1788 - t1474 * t1793;
t1368 = -t1448 * t1782 + t1784 * t1916;
t1405 = t1449 * t1793 + t1474 * t1788;
t1927 = t1368 * t1794 + t1405 * t1789;
t1615 = -t1708 - t1672;
t1520 = t1615 * t1791 - t2026;
t1454 = t1520 * t1787 + t1545 * t1792;
t1455 = t1520 * t1792 - t1545 * t1787;
t1519 = t1615 * t1786 + t2024;
t1914 = t1455 * t1788 - t1519 * t1793;
t1380 = -t1454 * t1782 + t1784 * t1914;
t1418 = t1455 * t1793 + t1519 * t1788;
t1926 = t1380 * t1794 + t1418 * t1789;
t1621 = -t1673 - t1708;
t1525 = -t1621 * t1786 - t1995;
t1549 = (qJD(5) + t1709) * t1675 + t1883;
t1459 = t1525 * t1787 + t1549 * t1792;
t1460 = t1525 * t1792 - t1549 * t1787;
t1524 = t1621 * t1791 - t1996;
t1913 = t1460 * t1788 - t1524 * t1793;
t1382 = -t1459 * t1782 + t1784 * t1913;
t1426 = t1460 * t1793 + t1524 * t1788;
t1925 = t1382 * t1794 + t1426 * t1789;
t1646 = -t1673 + t1708;
t1538 = -t1646 * t1786 + t2024;
t1466 = t1538 * t1787 - t1548 * t1792;
t1468 = t1538 * t1792 + t1548 * t1787;
t1536 = t1646 * t1791 + t2026;
t1912 = t1468 * t1788 - t1536 * t1793;
t1388 = -t1466 * t1782 + t1784 * t1912;
t1428 = t1468 * t1793 + t1536 * t1788;
t1924 = t1388 * t1794 + t1428 * t1789;
t1645 = t1672 - t1708;
t1539 = t1645 * t1791 - t1996;
t1544 = -t1572 - t1648;
t1467 = t1539 * t1787 + t1544 * t1792;
t1469 = t1539 * t1792 - t1544 * t1787;
t1537 = t1645 * t1786 + t1995;
t1911 = t1469 * t1788 - t1537 * t1793;
t1389 = -t1467 * t1782 + t1784 * t1911;
t1429 = t1469 * t1793 + t1537 * t1788;
t1923 = t1389 * t1794 + t1429 * t1789;
t1541 = -t1572 * t1786 + t1675 * t1987;
t1508 = t1541 * t1787 + t1954;
t1510 = t1541 * t1792 - t1955;
t1540 = -t1572 * t1791 - t1675 * t1988;
t1905 = t1510 * t1788 + t1540 * t1793;
t1412 = -t1508 * t1782 + t1784 * t1905;
t1446 = t1510 * t1793 - t1540 * t1788;
t1921 = t1412 * t1794 + t1446 * t1789;
t1543 = t1573 * t1791 - t1677 * t1988;
t1509 = t1543 * t1787 - t1954;
t1511 = t1543 * t1792 + t1955;
t1542 = t1573 * t1786 + t1677 * t1987;
t1904 = t1511 * t1788 - t1542 * t1793;
t1413 = -t1509 * t1782 + t1784 * t1904;
t1447 = t1511 * t1793 + t1542 * t1788;
t1920 = t1413 * t1794 + t1447 * t1789;
t1587 = (-t1675 * t1791 + t1677 * t1786) * t1709;
t1556 = t1587 * t1787 - t1639 * t1792;
t1557 = t1587 * t1792 + t1639 * t1787;
t1586 = (-t1675 * t1786 - t1677 * t1791) * t1709;
t1899 = t1557 * t1788 - t1586 * t1793;
t1441 = -t1556 * t1782 + t1784 * t1899;
t1499 = t1557 * t1793 + t1586 * t1788;
t1918 = t1441 * t1794 + t1499 * t1789;
t1608 = t1714 * t1733 + t1948;
t1610 = t1641 + t1684;
t1533 = t1608 * t1787 - t1610 * t1792;
t1535 = t1608 * t1792 + t1610 * t1787;
t1642 = t1710 + t1711;
t1900 = t1535 * t1788 + t1642 * t1793;
t1445 = -t1533 * t1782 + t1784 * t1900;
t1512 = t1535 * t1793 - t1642 * t1788;
t1917 = t1445 * t1794 + t1512 * t1789;
t1532 = t1609 * t1792 - t1787 * t2021;
t1534 = -t1609 * t1787 - t1792 * t2021;
t1668 = t1711 - t1710;
t1901 = t1534 * t1788 - t1668 * t1793;
t1453 = -t1532 * t1782 + t1784 * t1901;
t1517 = t1534 * t1793 + t1668 * t1788;
t1915 = t1453 * t1794 + t1517 * t1789;
t1651 = -t1819 - t1710;
t1578 = t1651 * t1787 + t2023;
t1579 = t1651 * t1792 - t2025;
t1895 = t1579 * t1788 - t1793 * t2021;
t1482 = -t1578 * t1782 + t1784 * t1895;
t1522 = t1579 * t1793 + t1788 * t2021;
t1910 = t1482 * t1794 + t1522 * t1789;
t1814 = t1785 * t1816;
t1817 = qJD(1) * t1845;
t1575 = t1968 + (t1784 * (-g(3) * t1972 + t1794 * t1814 + t1933) + t1782 * (-pkin(2) * t1934 - t1746) + (t1784 * (-qJD(2) * t1944 + t1775 * t1845) + t1782 * (-qJD(2) * t1767 - t1817 * t1972)) * pkin(9) + (t1784 * t1854 + (pkin(2) * t1817 + (-pkin(9) * t1782 ^ 2 + t1784 * t1961) * qJDD(1)) * t1783) * t1789) * t1788;
t1896 = -t1574 * t1793 + t1575 * t1788;
t1486 = t1618 * t1782 + t1784 * t1896;
t1507 = t1574 * t1788 + t1575 * t1793;
t1909 = t1486 * t1794 + t1507 * t1789;
t1665 = -t1711 - t1819;
t1582 = t1665 * t1792 - t1992;
t1583 = -t1665 * t1787 - t1991;
t1611 = (0.2e1 * qJD(4) + t1733) * t1712 + t1875;
t1893 = t1583 * t1788 + t1611 * t1793;
t1488 = -t1582 * t1782 + t1784 * t1893;
t1523 = t1583 * t1793 - t1611 * t1788;
t1908 = t1488 * t1794 + t1523 * t1789;
t1683 = -t1711 + t1819;
t1590 = t1683 * t1792 + t2025;
t1592 = -t1683 * t1787 + t2023;
t1890 = t1592 * t1788 - t1610 * t1793;
t1492 = -t1590 * t1782 + t1784 * t1890;
t1530 = t1592 * t1793 + t1610 * t1788;
t1907 = t1492 * t1794 + t1530 * t1789;
t1682 = t1710 - t1819;
t1591 = t1682 * t1787 + t1991;
t1593 = t1682 * t1792 - t1992;
t1606 = -t1685 + t1857;
t1889 = t1593 * t1788 + t1606 * t1793;
t1493 = -t1591 * t1782 + t1784 * t1889;
t1531 = t1593 * t1793 - t1606 * t1788;
t1906 = t1493 * t1794 + t1531 * t1789;
t1813 = t1787 * t1684;
t1602 = -t1792 * t1857 + t1813;
t1811 = t1792 * t1684;
t1603 = t1787 * t1857 + t1811;
t1859 = t1603 * t1788 + t1952;
t1515 = -t1602 * t1782 + t1784 * t1859;
t1565 = t1603 * t1793 - t1953;
t1903 = t1515 * t1794 + t1565 * t1789;
t1810 = t1792 * t1685;
t1604 = t1787 * t1641 + t1810;
t1812 = t1787 * t1685;
t1605 = t1792 * t1641 - t1812;
t1858 = t1605 * t1788 - t1952;
t1516 = -t1604 * t1782 + t1784 * t1858;
t1566 = t1605 * t1793 + t1953;
t1902 = t1516 * t1794 + t1566 * t1789;
t1633 = -t1813 - t1810;
t1634 = -t1811 + t1812;
t1884 = t1634 * t1788 - t1689 * t1793;
t1560 = -t1633 * t1782 + t1784 * t1884;
t1599 = t1634 * t1793 + t1689 * t1788;
t1898 = t1560 * t1794 + t1599 * t1789;
t1674 = -t1730 - t1731;
t1661 = t1717 + t1690;
t1804 = t1735 * t1946 - t1809;
t1880 = -t1661 * t1793 + t1788 * t1804;
t1568 = -t1674 * t1782 + t1784 * t1880;
t1601 = t1661 * t1788 + t1793 * t1804;
t1897 = t1568 * t1794 + t1601 * t1789;
t1705 = t1731 - t1730;
t1656 = t1735 * t1939 + t1809;
t1881 = -t1656 * t1788 + t1660 * t1793;
t1581 = -t1705 * t1782 + t1784 * t1881;
t1600 = -t1656 * t1793 - t1660 * t1788;
t1894 = t1581 * t1794 + t1600 * t1789;
t1876 = t1688 * t1788 + t2018;
t1585 = -t1656 * t1782 + t1784 * t1876;
t1892 = t1585 * t1794 + t1638 * t1789;
t1659 = -t1733 * t1939 + t1803;
t1879 = t1697 * t1793 + t1990;
t1589 = -t1659 * t1782 + t1784 * t1879;
t1891 = t1589 * t1794 + t1644 * t1789;
t1716 = -t1731 + t1932;
t1877 = t1716 * t1793 + t2019;
t1596 = -t1661 * t1782 + t1784 * t1877;
t1649 = -t1716 * t1788 + t2018;
t1888 = t1596 * t1794 + t1649 * t1789;
t1715 = t1730 - t1932;
t1878 = t1715 * t1788 - t1989;
t1597 = -t1782 * t1804 + t1784 * t1878;
t1650 = t1715 * t1793 + t1990;
t1887 = t1597 * t1794 + t1650 * t1789;
t1805 = t1793 * t1806;
t1862 = t1788 * t1940;
t1623 = -t1784 * t1805 + (t1782 * t1735 + t1784 * t1862) * t1733;
t1847 = t1793 * t1717;
t1654 = t1788 * t1806 + t1847;
t1886 = t1623 * t1794 + t1654 * t1789;
t1861 = t1793 * t1940;
t1625 = t1784 * t1788 * t1690 + (-t1782 * t1733 + t1784 * t1861) * t1735;
t1848 = t1788 * t1860;
t1655 = t1793 * t1690 - t1848;
t1885 = t1625 * t1794 + t1655 * t1789;
t1653 = -t1782 * t1739 + t1784 * t2015;
t1671 = -t1847 + t1848;
t1882 = t1653 * t1794 + t1671 * t1789;
t1815 = t1824 - t2006;
t1722 = t1789 * t1815 + (t1783 * g(3) - t1814) * t1794;
t1723 = t1789 * t1814 + t1794 * t1815 - t1776;
t1874 = -t1722 * t1794 + t1723 * t1789;
t1678 = t1722 * t1789 + t1723 * t1794;
t1760 = t1775 * t1958;
t1741 = t1760 + t1822;
t1759 = t1775 * t1959;
t1744 = -t1759 + t1934;
t1873 = t1741 * t1794 + t1744 * t1789;
t1742 = -t1760 + t1822;
t1743 = t1759 + t1934;
t1872 = -t1742 * t1794 + t1743 * t1789;
t1871 = t1750 * t1794 - t1981;
t1754 = t1774 - t1957;
t1870 = t1754 * t1794 + t1983;
t1869 = t1756 * t1789 + t1982;
t1755 = -t1774 + t1956;
t1868 = t1755 * t1789 + t1980;
t1867 = t1771 * t1795 - t1790 * t1772;
t1865 = t1783 * t1945;
t1852 = pkin(4) * t1545 + pkin(11) * t1520 - t1999;
t1851 = pkin(4) * t1549 + pkin(11) * t1525 + t2000;
t1285 = pkin(10) * t1331 + (-pkin(11) * t1787 + t1962) * t1347;
t1291 = t1330 * t1784 + t1782 * t1930;
t1294 = -pkin(10) * t1330 + (-pkin(11) * t1792 + t2011) * t1347;
t1301 = -pkin(3) * t1330 - t1942;
t1831 = pkin(9) * t1304 + t1294 * t1788 + t1301 * t1793;
t1261 = -pkin(2) * t1291 - t1285 * t1782 + t1784 * t1831;
t1267 = t1294 * t1793 - t1301 * t1788 + (-t1291 * t1782 - t1292 * t1784) * pkin(9);
t1277 = -t1292 * t1789 + t1304 * t1794;
t1844 = pkin(8) * t1277 + t1261 * t1794 + t1267 * t1789;
t1336 = -pkin(11) * t1475 - t1347;
t1311 = pkin(10) * t1439 + t1336 * t1787 + t1475 * t1962;
t1361 = t1438 * t1784 + t1782 * t1919;
t1313 = -pkin(10) * t1438 + t1336 * t1792 + t1475 * t2011;
t1820 = pkin(4) * t1598 + pkin(11) * t1477 + t1348;
t1318 = -pkin(3) * t1438 - t1820;
t1830 = pkin(9) * t1397 + t1313 * t1788 + t1318 * t1793;
t1276 = -pkin(2) * t1361 - t1311 * t1782 + t1784 * t1830;
t1280 = t1313 * t1793 - t1318 * t1788 + (-t1361 * t1782 - t1362 * t1784) * pkin(9);
t1328 = -t1362 * t1789 + t1397 * t1794;
t1843 = pkin(8) * t1328 + t1276 * t1794 + t1280 * t1789;
t1377 = -pkin(4) * t1519 + t1399;
t1415 = -pkin(11) * t1519 + t2000;
t1326 = -pkin(3) * t1519 + pkin(10) * t1455 + t1377 * t1792 + t1415 * t1787;
t1379 = t1454 * t1784 + t1782 * t1914;
t1329 = -pkin(10) * t1454 - t1377 * t1787 + t1415 * t1792;
t1364 = -pkin(3) * t1454 - t1852;
t1829 = pkin(9) * t1418 + t1329 * t1788 + t1364 * t1793;
t1282 = -pkin(2) * t1379 - t1326 * t1782 + t1784 * t1829;
t1293 = t1329 * t1793 - t1364 * t1788 + (-t1379 * t1782 - t1380 * t1784) * pkin(9);
t1349 = -t1380 * t1789 + t1418 * t1794;
t1842 = pkin(8) * t1349 + t1282 * t1794 + t1293 * t1789;
t1378 = -pkin(4) * t1524 + t1400;
t1416 = -pkin(11) * t1524 + t1999;
t1327 = -pkin(3) * t1524 + pkin(10) * t1460 + t1378 * t1792 + t1416 * t1787;
t1381 = t1459 * t1784 + t1782 * t1913;
t1334 = -pkin(10) * t1459 - t1378 * t1787 + t1416 * t1792;
t1366 = -pkin(3) * t1459 - t1851;
t1828 = pkin(9) * t1426 + t1334 * t1788 + t1366 * t1793;
t1284 = -pkin(2) * t1381 - t1327 * t1782 + t1784 * t1828;
t1295 = t1334 * t1793 - t1366 * t1788 + (-t1381 * t1782 - t1382 * t1784) * pkin(9);
t1352 = -t1382 * t1789 + t1426 * t1794;
t1841 = pkin(8) * t1352 + t1284 * t1794 + t1295 * t1789;
t1350 = t1407 * t1784 + t1782 * t1922;
t1394 = -pkin(3) * t1552 + pkin(10) * t1408;
t1818 = pkin(9) * t1393 + (-pkin(10) * t1788 - t2012) * t1407;
t1299 = -pkin(2) * t1350 - t1394 * t1782 + t1784 * t1818;
t1300 = (-pkin(10) * t1793 + t2013) * t1407 + (-t1350 * t1782 - t1351 * t1784) * pkin(9);
t1321 = -t1351 * t1789 + t1393 * t1794;
t1840 = pkin(8) * t1321 + t1299 * t1794 + t1300 * t1789;
t1383 = pkin(3) * t1642 + pkin(10) * t1535 + t1408;
t1444 = t1533 * t1784 + t1782 * t1900;
t1392 = -pkin(10) * t1533 - t1407;
t1821 = pkin(9) * t1512 + t1392 * t1788 - t1533 * t2012;
t1315 = -pkin(2) * t1444 - t1383 * t1782 + t1784 * t1821;
t1337 = t1533 * t2013 + t1392 * t1793 + (-t1444 * t1782 - t1445 * t1784) * pkin(9);
t1409 = -t1445 * t1789 + t1512 * t1794;
t1839 = pkin(8) * t1409 + t1315 * t1794 + t1337 * t1789;
t1456 = -pkin(3) * t2021 + pkin(10) * t1579 - t1997;
t1481 = t1578 * t1784 + t1782 * t1895;
t1436 = -pkin(3) * t1578 + t1479;
t1495 = -pkin(10) * t1578 + t1998;
t1827 = pkin(9) * t1522 + t1436 * t1793 + t1495 * t1788;
t1343 = -pkin(2) * t1481 - t1456 * t1782 + t1784 * t1827;
t1359 = -t1436 * t1788 + t1495 * t1793 + (-t1481 * t1782 - t1482 * t1784) * pkin(9);
t1427 = -t1482 * t1789 + t1522 * t1794;
t1838 = pkin(8) * t1427 + t1343 * t1794 + t1359 * t1789;
t1461 = pkin(3) * t1611 + pkin(10) * t1583 + t1998;
t1487 = t1582 * t1784 + t1782 * t1893;
t1437 = -pkin(3) * t1582 + t1480;
t1498 = -pkin(10) * t1582 + t1997;
t1826 = pkin(9) * t1523 + t1437 * t1793 + t1498 * t1788;
t1346 = -pkin(2) * t1487 - t1461 * t1782 + t1784 * t1826;
t1360 = -t1437 * t1788 + t1498 * t1793 + (-t1487 * t1782 - t1488 * t1784) * pkin(9);
t1430 = -t1488 * t1789 + t1523 * t1794;
t1837 = pkin(8) * t1430 + t1346 * t1794 + t1360 * t1789;
t1485 = -t1618 * t1784 + t1782 * t1896;
t1414 = (-t1485 * t1782 - t1486 * t1784) * pkin(9);
t1423 = -t1486 * t1789 + t1507 * t1794;
t1424 = -pkin(2) * t1485 + t1507 * t2007;
t1836 = pkin(8) * t1423 + t1414 * t1789 + t1424 * t1794;
t1567 = t1674 * t1784 + t1782 * t1880;
t1431 = (-t1567 * t1782 - t1568 * t1784) * pkin(9) - t1896;
t1825 = pkin(9) * t1601 + t1507;
t1435 = -pkin(2) * t1567 + t1784 * t1825;
t1518 = -t1568 * t1789 + t1601 * t1794;
t1835 = pkin(8) * t1518 + t1431 * t1789 + t1435 * t1794;
t1584 = t1656 * t1784 + t1782 * t1876;
t1458 = -pkin(2) * t1584 + t1574 * t1782 + t1784 * t1936;
t1489 = -t1994 + (-t1584 * t1782 - t1585 * t1784) * pkin(9);
t1551 = -t1585 * t1789 + t1638 * t1794;
t1834 = pkin(8) * t1551 + t1458 * t1794 + t1489 * t1789;
t1588 = t1659 * t1784 + t1782 * t1879;
t1463 = -pkin(2) * t1588 + t1575 * t1782 + t1784 * t1935;
t1494 = -t1993 + (-t1588 * t1782 - t1589 * t1784) * pkin(9);
t1558 = -t1589 * t1789 + t1644 * t1794;
t1833 = pkin(8) * t1558 + t1463 * t1794 + t1494 * t1789;
t1706 = t1742 * t1789 + t1743 * t1794;
t1832 = pkin(8) * t1706 + t1678;
t1740 = (t1967 * t2001 + t1965) * t1783;
t1778 = t1783 * t1779;
t1768 = t1790 * qJDD(1) + t2014 * t1795;
t1766 = t1785 * t1945;
t1758 = t1966 * t1976;
t1757 = (t1780 - t1781) * t1976;
t1753 = -pkin(7) * t1768 + g(3) * t1795;
t1745 = t1966 * t1960;
t1737 = (-t1780 * t1775 * qJD(1) + t1794 * t1855) * t1783;
t1736 = -t1781 * t1960 - t1789 * t1934;
t1727 = t1755 * t1794 - t1981;
t1726 = -t1754 * t1789 + t1982;
t1721 = t1740 * t1970 + t1778 * t1951;
t1720 = (t1965 + (qJD(2) - t1950) * t2001) * t2020;
t1719 = (qJD(1) * t1950 * t2020 + t1783 * t1934) * t1794;
t1718 = (-t1778 * t1969 + (-t1773 + (-qJD(1) * t1977 + t1964) * t1783) * t1785) * t1794;
t1707 = -t1741 * t1789 + t1744 * t1794;
t1703 = t1744 * t1783 + t1785 * t1869;
t1702 = -t1743 * t1783 + t1785 * t1868;
t1701 = -t1742 * t1783 + t1785 * t1870;
t1700 = -t1744 * t1785 + t1783 * t1869;
t1699 = t1743 * t1785 + t1783 * t1868;
t1698 = t1742 * t1785 + t1783 * t1870;
t1696 = -t1740 * t1783 + t1785 * t1871;
t1695 = t1740 * t1785 + t1783 * t1871;
t1694 = -t1757 * t1783 + t1785 * t1873;
t1693 = t1758 * t1783 + t1785 * t1872;
t1692 = t1757 * t1785 + t1783 * t1873;
t1691 = -t1758 * t1785 + t1783 * t1872;
t1663 = t1746 * t1783 + t1785 * t1874;
t1662 = -t1746 * t1785 + t1783 * t1874;
t1652 = t1784 * t1739 + t1782 * t2015;
t1643 = -t1985 + (-t1700 * t1783 - t1703 * t1785) * pkin(8);
t1637 = -t1984 + (-t1695 * t1783 - t1696 * t1785) * pkin(8);
t1636 = -pkin(1) * t1700 + t1722 * t1783 + t1785 * t1937;
t1635 = pkin(1) * t1703 - t1722 * t1785 + t1783 * t1937;
t1630 = -pkin(1) * t1695 + t1723 * t1783 + t1785 * t1938;
t1629 = pkin(1) * t1696 - t1723 * t1785 + t1783 * t1938;
t1624 = t1690 * t1975 + (t1784 * t1733 + t1782 * t1861) * t1735;
t1622 = -t1782 * t1805 + (-t1784 * t1735 + t1782 * t1862) * t1733;
t1620 = pkin(1) * t1663 + t1678 * t2010;
t1619 = -pkin(1) * t1662 + t1678 * t2009;
t1617 = -pkin(1) * t1691 + t1785 * t1832;
t1616 = pkin(1) * t1693 + t1783 * t1832;
t1614 = -t1653 * t1789 + t1671 * t1794;
t1613 = (-t1662 * t1783 - t1663 * t1785) * pkin(8);
t1612 = (-t1691 * t1783 - t1693 * t1785) * pkin(8) - t1874;
t1595 = t1782 * t1878 + t1784 * t1804;
t1594 = t1661 * t1784 + t1782 * t1877;
t1580 = t1705 * t1784 + t1782 * t1881;
t1577 = -t1625 * t1789 + t1655 * t1794;
t1576 = -t1623 * t1789 + t1654 * t1794;
t1564 = -t1652 * t1783 + t1785 * t1882;
t1563 = t1652 * t1785 + t1783 * t1882;
t1562 = -t1597 * t1789 + t1650 * t1794;
t1561 = -t1596 * t1789 + t1649 * t1794;
t1559 = t1633 * t1784 + t1782 * t1884;
t1529 = -t1624 * t1783 + t1785 * t1885;
t1528 = -t1622 * t1783 + t1785 * t1886;
t1527 = t1624 * t1785 + t1783 * t1885;
t1526 = t1622 * t1785 + t1783 * t1886;
t1521 = -t1581 * t1789 + t1600 * t1794;
t1514 = t1604 * t1784 + t1782 * t1858;
t1513 = t1602 * t1784 + t1782 * t1859;
t1506 = -t1560 * t1789 + t1599 * t1794;
t1505 = -t1595 * t1783 + t1785 * t1887;
t1504 = -t1594 * t1783 + t1785 * t1888;
t1503 = t1595 * t1785 + t1783 * t1887;
t1502 = t1594 * t1785 + t1783 * t1888;
t1501 = -t1588 * t1783 + t1785 * t1891;
t1500 = t1588 * t1785 + t1783 * t1891;
t1497 = -t1584 * t1783 + t1785 * t1892;
t1496 = t1584 * t1785 + t1783 * t1892;
t1491 = t1591 * t1784 + t1782 * t1889;
t1490 = t1590 * t1784 + t1782 * t1890;
t1484 = -t1580 * t1783 + t1785 * t1894;
t1483 = t1580 * t1785 + t1783 * t1894;
t1473 = -t1567 * t1783 + t1785 * t1897;
t1472 = t1567 * t1785 + t1783 * t1897;
t1465 = -t1516 * t1789 + t1566 * t1794;
t1464 = -t1515 * t1789 + t1565 * t1794;
t1462 = pkin(2) * t1589 - t1575 * t1784 + t1782 * t1935;
t1457 = pkin(2) * t1585 - t1574 * t1784 + t1782 * t1936;
t1452 = t1532 * t1784 + t1782 * t1901;
t1451 = -t1559 * t1783 + t1785 * t1898;
t1450 = t1559 * t1785 + t1783 * t1898;
t1440 = t1556 * t1784 + t1782 * t1899;
t1434 = pkin(2) * t1568 + t1782 * t1825;
t1433 = -t1493 * t1789 + t1531 * t1794;
t1432 = -t1492 * t1789 + t1530 * t1794;
t1425 = pkin(2) * t1486 + t1507 * t2008;
t1422 = -t1514 * t1783 + t1785 * t1902;
t1421 = -t1513 * t1783 + t1785 * t1903;
t1420 = t1514 * t1785 + t1783 * t1902;
t1419 = t1513 * t1785 + t1783 * t1903;
t1417 = -t1453 * t1789 + t1517 * t1794;
t1411 = t1509 * t1784 + t1782 * t1904;
t1410 = t1508 * t1784 + t1782 * t1905;
t1406 = -t1441 * t1789 + t1499 * t1794;
t1404 = -t1491 * t1783 + t1785 * t1906;
t1403 = -t1490 * t1783 + t1785 * t1907;
t1402 = t1491 * t1785 + t1783 * t1906;
t1401 = t1490 * t1785 + t1783 * t1907;
t1396 = -t1487 * t1783 + t1785 * t1908;
t1395 = t1487 * t1785 + t1783 * t1908;
t1391 = -t1481 * t1783 + t1785 * t1910;
t1390 = t1481 * t1785 + t1783 * t1910;
t1387 = t1467 * t1784 + t1782 * t1911;
t1386 = t1466 * t1784 + t1782 * t1912;
t1385 = -t1485 * t1783 + t1785 * t1909;
t1384 = t1485 * t1785 + t1783 * t1909;
t1376 = -t1452 * t1783 + t1785 * t1915;
t1375 = t1452 * t1785 + t1783 * t1915;
t1374 = -t1413 * t1789 + t1447 * t1794;
t1373 = -t1412 * t1789 + t1446 * t1794;
t1372 = -t1444 * t1783 + t1785 * t1917;
t1371 = t1444 * t1785 + t1783 * t1917;
t1370 = -t1440 * t1783 + t1785 * t1918;
t1369 = t1440 * t1785 + t1783 * t1918;
t1367 = t1448 * t1784 + t1782 * t1916;
t1365 = -t1463 * t1789 + t1494 * t1794 + (-t1500 * t1783 - t1501 * t1785) * pkin(8);
t1363 = -t1458 * t1789 + t1489 * t1794 + (-t1496 * t1783 - t1497 * t1785) * pkin(8);
t1358 = -t1389 * t1789 + t1429 * t1794;
t1357 = -t1388 * t1789 + t1428 * t1794;
t1356 = -pkin(1) * t1500 - t1462 * t1783 + t1785 * t1833;
t1355 = pkin(1) * t1501 + t1462 * t1785 + t1783 * t1833;
t1354 = -pkin(1) * t1496 - t1457 * t1783 + t1785 * t1834;
t1353 = pkin(1) * t1497 + t1457 * t1785 + t1783 * t1834;
t1345 = pkin(2) * t1488 + t1461 * t1784 + t1782 * t1826;
t1344 = t1431 * t1794 - t1435 * t1789 + (-t1472 * t1783 - t1473 * t1785) * pkin(8);
t1342 = pkin(2) * t1482 + t1456 * t1784 + t1782 * t1827;
t1341 = -t1411 * t1783 + t1785 * t1920;
t1340 = -t1410 * t1783 + t1785 * t1921;
t1339 = t1411 * t1785 + t1783 * t1920;
t1338 = t1410 * t1785 + t1783 * t1921;
t1335 = -t1368 * t1789 + t1405 * t1794;
t1333 = -pkin(1) * t1472 - t1434 * t1783 + t1785 * t1835;
t1332 = pkin(1) * t1473 + t1434 * t1785 + t1783 * t1835;
t1325 = -t1387 * t1783 + t1785 * t1923;
t1324 = -t1386 * t1783 + t1785 * t1924;
t1323 = t1387 * t1785 + t1783 * t1923;
t1322 = t1386 * t1785 + t1783 * t1924;
t1320 = -t1381 * t1783 + t1785 * t1925;
t1319 = t1381 * t1785 + t1783 * t1925;
t1317 = -t1379 * t1783 + t1785 * t1926;
t1316 = t1379 * t1785 + t1783 * t1926;
t1314 = pkin(2) * t1445 + t1383 * t1784 + t1782 * t1821;
t1312 = t1414 * t1794 - t1424 * t1789 + (-t1384 * t1783 - t1385 * t1785) * pkin(8);
t1310 = -t1367 * t1783 + t1785 * t1927;
t1309 = t1367 * t1785 + t1783 * t1927;
t1308 = -pkin(1) * t1384 - t1425 * t1783 + t1785 * t1836;
t1307 = pkin(1) * t1385 + t1425 * t1785 + t1783 * t1836;
t1306 = -t1361 * t1783 + t1785 * t1928;
t1305 = t1361 * t1785 + t1783 * t1928;
t1303 = -t1350 * t1783 + t1785 * t1929;
t1302 = t1350 * t1785 + t1783 * t1929;
t1298 = pkin(2) * t1351 + t1394 * t1784 + t1782 * t1818;
t1297 = -t1346 * t1789 + t1360 * t1794 + (-t1395 * t1783 - t1396 * t1785) * pkin(8);
t1296 = -t1343 * t1789 + t1359 * t1794 + (-t1390 * t1783 - t1391 * t1785) * pkin(8);
t1290 = -pkin(1) * t1395 - t1345 * t1783 + t1785 * t1837;
t1289 = pkin(1) * t1396 + t1345 * t1785 + t1783 * t1837;
t1288 = -pkin(1) * t1390 - t1342 * t1783 + t1785 * t1838;
t1287 = pkin(1) * t1391 + t1342 * t1785 + t1783 * t1838;
t1286 = -t1315 * t1789 + t1337 * t1794 + (-t1371 * t1783 - t1372 * t1785) * pkin(8);
t1283 = pkin(2) * t1382 + t1327 * t1784 + t1782 * t1828;
t1281 = pkin(2) * t1380 + t1326 * t1784 + t1782 * t1829;
t1279 = -pkin(1) * t1371 - t1314 * t1783 + t1785 * t1839;
t1278 = pkin(1) * t1372 + t1314 * t1785 + t1783 * t1839;
t1275 = pkin(2) * t1362 + t1311 * t1784 + t1782 * t1830;
t1274 = -t1291 * t1783 + t1785 * t1931;
t1273 = t1291 * t1785 + t1783 * t1931;
t1272 = -t1284 * t1789 + t1295 * t1794 + (-t1319 * t1783 - t1320 * t1785) * pkin(8);
t1271 = -t1299 * t1789 + t1300 * t1794 + (-t1302 * t1783 - t1303 * t1785) * pkin(8);
t1270 = -t1282 * t1789 + t1293 * t1794 + (-t1316 * t1783 - t1317 * t1785) * pkin(8);
t1269 = -pkin(1) * t1302 - t1298 * t1783 + t1785 * t1840;
t1268 = pkin(1) * t1303 + t1298 * t1785 + t1783 * t1840;
t1266 = -pkin(1) * t1319 - t1283 * t1783 + t1785 * t1841;
t1265 = pkin(1) * t1320 + t1283 * t1785 + t1783 * t1841;
t1264 = -pkin(1) * t1316 - t1281 * t1783 + t1785 * t1842;
t1263 = pkin(1) * t1317 + t1281 * t1785 + t1783 * t1842;
t1262 = -t1276 * t1789 + t1280 * t1794 + (-t1305 * t1783 - t1306 * t1785) * pkin(8);
t1260 = pkin(2) * t1292 + t1285 * t1784 + t1782 * t1831;
t1259 = -pkin(1) * t1305 - t1275 * t1783 + t1785 * t1843;
t1258 = pkin(1) * t1306 + t1275 * t1785 + t1783 * t1843;
t1257 = -t1261 * t1789 + t1267 * t1794 + (-t1273 * t1783 - t1274 * t1785) * pkin(8);
t1256 = -pkin(1) * t1273 - t1260 * t1783 + t1785 * t1844;
t1255 = pkin(1) * t1274 + t1260 * t1785 + t1783 * t1844;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1769, 0, -t1768, 0, t1941, -t1753, -t1867, -pkin(7) * t1867, -t1790 * t1721 + t1737 * t1795, -t1790 * t1694 + t1707 * t1795, -t1790 * t1701 + t1726 * t1795, -t1790 * t1718 + t1736 * t1795, -t1790 * t1702 + t1727 * t1795, t1795 * t1745 + t1790 * t1865, t1795 * t1643 - t1790 * t1636 - pkin(7) * (t1703 * t1795 + t1790 * t1728), t1795 * t1637 - t1790 * t1630 - pkin(7) * (t1696 * t1795 + t1790 * t1724), t1795 * t1612 - t1790 * t1617 - pkin(7) * (t1693 * t1795 + t1790 * t1706), t1795 * t1613 - t1790 * t1619 - pkin(7) * (t1663 * t1795 + t1790 * t1678), -t1790 * t1529 + t1577 * t1795, -t1790 * t1484 + t1521 * t1795, -t1790 * t1504 + t1561 * t1795, -t1790 * t1528 + t1576 * t1795, -t1790 * t1505 + t1562 * t1795, -t1790 * t1564 + t1614 * t1795, t1795 * t1363 - t1790 * t1354 - pkin(7) * (t1497 * t1795 + t1790 * t1551), t1795 * t1365 - t1790 * t1356 - pkin(7) * (t1501 * t1795 + t1790 * t1558), t1795 * t1344 - t1790 * t1333 - pkin(7) * (t1473 * t1795 + t1790 * t1518), t1795 * t1312 - t1790 * t1308 - pkin(7) * (t1385 * t1795 + t1790 * t1423), -t1790 * t1422 + t1465 * t1795, -t1790 * t1376 + t1417 * t1795, -t1790 * t1403 + t1432 * t1795, -t1790 * t1421 + t1464 * t1795, -t1790 * t1404 + t1433 * t1795, -t1790 * t1451 + t1506 * t1795, t1795 * t1296 - t1790 * t1288 - pkin(7) * (t1391 * t1795 + t1790 * t1427), t1795 * t1297 - t1790 * t1290 - pkin(7) * (t1396 * t1795 + t1790 * t1430), t1795 * t1286 - t1790 * t1279 - pkin(7) * (t1372 * t1795 + t1790 * t1409), t1795 * t1271 - t1790 * t1269 - pkin(7) * (t1303 * t1795 + t1790 * t1321), -t1790 * t1341 + t1374 * t1795, -t1790 * t1310 + t1335 * t1795, -t1790 * t1324 + t1357 * t1795, -t1790 * t1340 + t1373 * t1795, -t1790 * t1325 + t1358 * t1795, -t1790 * t1370 + t1406 * t1795, t1795 * t1270 - t1790 * t1264 - pkin(7) * (t1317 * t1795 + t1790 * t1349), t1795 * t1272 - t1790 * t1266 - pkin(7) * (t1320 * t1795 + t1790 * t1352), t1795 * t1262 - t1790 * t1259 - pkin(7) * (t1306 * t1795 + t1790 * t1328), t1795 * t1257 - t1790 * t1256 - pkin(7) * (t1274 * t1795 + t1790 * t1277); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1768, 0, t1769, 0, t1753, t1941, t1947, pkin(7) * t1947, t1721 * t1795 + t1790 * t1737, t1694 * t1795 + t1790 * t1707, t1701 * t1795 + t1790 * t1726, t1718 * t1795 + t1790 * t1736, t1702 * t1795 + t1790 * t1727, t1790 * t1745 - t1795 * t1865, t1790 * t1643 + t1795 * t1636 + pkin(7) * (-t1790 * t1703 + t1728 * t1795), t1790 * t1637 + t1795 * t1630 + pkin(7) * (-t1790 * t1696 + t1724 * t1795), t1790 * t1612 + t1795 * t1617 + pkin(7) * (-t1790 * t1693 + t1706 * t1795), t1790 * t1613 + t1795 * t1619 + pkin(7) * (-t1790 * t1663 + t1678 * t1795), t1529 * t1795 + t1790 * t1577, t1484 * t1795 + t1790 * t1521, t1504 * t1795 + t1790 * t1561, t1528 * t1795 + t1790 * t1576, t1505 * t1795 + t1790 * t1562, t1564 * t1795 + t1790 * t1614, t1790 * t1363 + t1795 * t1354 + pkin(7) * (-t1790 * t1497 + t1551 * t1795), t1790 * t1365 + t1795 * t1356 + pkin(7) * (-t1790 * t1501 + t1558 * t1795), t1790 * t1344 + t1795 * t1333 + pkin(7) * (-t1790 * t1473 + t1518 * t1795), t1790 * t1312 + t1795 * t1308 + pkin(7) * (-t1790 * t1385 + t1423 * t1795), t1422 * t1795 + t1790 * t1465, t1376 * t1795 + t1790 * t1417, t1403 * t1795 + t1790 * t1432, t1421 * t1795 + t1790 * t1464, t1404 * t1795 + t1790 * t1433, t1451 * t1795 + t1790 * t1506, t1790 * t1296 + t1795 * t1288 + pkin(7) * (-t1790 * t1391 + t1427 * t1795), t1790 * t1297 + t1795 * t1290 + pkin(7) * (-t1790 * t1396 + t1430 * t1795), t1790 * t1286 + t1795 * t1279 + pkin(7) * (-t1790 * t1372 + t1409 * t1795), t1790 * t1271 + t1795 * t1269 + pkin(7) * (-t1790 * t1303 + t1321 * t1795), t1341 * t1795 + t1790 * t1374, t1310 * t1795 + t1790 * t1335, t1324 * t1795 + t1790 * t1357, t1340 * t1795 + t1790 * t1373, t1325 * t1795 + t1790 * t1358, t1370 * t1795 + t1790 * t1406, t1790 * t1270 + t1795 * t1264 + pkin(7) * (-t1790 * t1317 + t1349 * t1795), t1790 * t1272 + t1795 * t1266 + pkin(7) * (-t1790 * t1320 + t1352 * t1795), t1790 * t1262 + t1795 * t1259 + pkin(7) * (-t1790 * t1306 + t1328 * t1795), t1790 * t1257 + t1795 * t1256 + pkin(7) * (-t1790 * t1274 + t1277 * t1795); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1771, t1772, 0, 0, t1720, t1692, t1698, t1719, t1699, t1766, t1635, t1629, t1616, t1620, t1527, t1483, t1502, t1526, t1503, t1563, t1353, t1355, t1332, t1307, t1420, t1375, t1401, t1419, t1402, t1450, t1287, t1289, t1278, t1268, t1339, t1309, t1322, t1338, t1323, t1369, t1263, t1265, t1258, t1255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2014, 0, 0, -g(3), -t1771, 0, t1737, t1707, t1726, t1736, t1727, t1745, t1643, t1637, t1612, t1613, t1577, t1521, t1561, t1576, t1562, t1614, t1363, t1365, t1344, t1312, t1465, t1417, t1432, t1464, t1433, t1506, t1296, t1297, t1286, t1271, t1374, t1335, t1357, t1373, t1358, t1406, t1270, t1272, t1262, t1257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2014, 0, qJDD(1), 0, g(3), 0, -t1772, 0, t1721, t1694, t1701, t1718, t1702, -t1865, t1636, t1630, t1617, t1619, t1529, t1484, t1504, t1528, t1505, t1564, t1354, t1356, t1333, t1308, t1422, t1376, t1403, t1421, t1404, t1451, t1288, t1290, t1279, t1269, t1341, t1310, t1324, t1340, t1325, t1370, t1264, t1266, t1259, t1256; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1771, t1772, 0, 0, t1720, t1692, t1698, t1719, t1699, t1766, t1635, t1629, t1616, t1620, t1527, t1483, t1502, t1526, t1503, t1563, t1353, t1355, t1332, t1307, t1420, t1375, t1401, t1419, t1402, t1450, t1287, t1289, t1278, t1268, t1339, t1309, t1322, t1338, t1323, t1369, t1263, t1265, t1258, t1255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1822, t1744, t1751, -t1760, t1755, t1760, 0, -t1746, t1722, 0, t1655, t1600, t1649, t1654, t1650, t1671, t1489, t1494, t1431, t1414, t1566, t1517, t1530, t1565, t1531, t1599, t1359, t1360, t1337, t1300, t1447, t1405, t1428, t1446, t1429, t1499, t1293, t1295, t1280, t1267; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1759, t1741, t1754, t1934, t1752, -t1759, t1746, 0, t1723, 0, t1625, t1581, t1596, t1623, t1597, t1653, t1458, t1463, t1435, t1424, t1516, t1453, t1492, t1515, t1493, t1560, t1343, t1346, t1315, t1299, t1413, t1368, t1388, t1412, t1389, t1441, t1282, t1284, t1276, t1261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1770, t1757, t1742, t1770, t1743, t1945, -t1722, -t1723, 0, 0, t1624, t1580, t1594, t1622, t1595, t1652, t1457, t1462, t1434, t1425, t1514, t1452, t1490, t1513, t1491, t1559, t1342, t1345, t1314, t1298, t1411, t1367, t1386, t1410, t1387, t1440, t1281, t1283, t1275, t1260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1690, -t1656, t1808, t1717, t1715, -t1717, 0, -t1618, t1574, 0, t1605, t1534, t1592, t1603, t1593, t1634, t1495, t1498, t1392, -pkin(10) * t1407, t1511, t1449, t1468, t1510, t1469, t1557, t1329, t1334, t1313, t1294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1860, t1660, t1716, -t1806, -t1679, -t1860, t1618, 0, t1575, 0, -t1669, -t1668, -t1610, t1669, t1606, -t1689, t1436, t1437, -pkin(3) * t1533, -pkin(3) * t1407, -t1542, -t1474, -t1536, t1540, -t1537, -t1586, t1364, t1366, t1318, t1301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1986, t1705, t1661, -t1986, t1804, t1739, -t1574, -t1575, 0, 0, t1604, t1532, t1590, t1602, t1591, t1633, t1456, t1461, t1383, t1394, t1509, t1448, t1466, t1508, t1467, t1556, t1326, t1327, t1311, t1285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1641, -t2021, t2016, t1684, t1682, -t1684, 0, t1552, t1479, 0, t1543, t1476, t1538, t1541, t1539, t1587, t1415, t1416, t1336, -pkin(11) * t1347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1685, t1609, t1683, -t1857, t1627, -t1685, -t1552, 0, t1480, 0, -t1632, -t1631, -t1548, t1632, t1544, -t1639, t1377, t1378, -pkin(4) * t1475, -pkin(4) * t1347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1669, t1668, t1610, -t1669, -t1606, t1689, -t1479, -t1480, 0, 0, t1542, t1474, t1536, -t1540, t1537, t1586, t1852, t1851, t1820, t1942; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1573, t1545, t2017, t1647, t1645, -t1647, 0, t1442, t1399, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1648, t1547, t1646, t1572, t1570, -t1648, -t1442, 0, t1400, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1632, t1631, t1548, -t1632, -t1544, t1639, -t1399, -t1400, 0, 0;];
m_new_reg = t1;
