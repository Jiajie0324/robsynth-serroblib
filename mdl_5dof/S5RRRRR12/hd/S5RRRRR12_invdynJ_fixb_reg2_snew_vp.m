% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S5RRRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,alpha3,d1,d2,d3,d4,d5]';
% 
% Output:
% tauJ_reg [5x(5*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:58
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S5RRRRR12_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR12_invdynJ_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR12_invdynJ_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR12_invdynJ_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR12_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S5RRRRR12_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:55:29
% EndTime: 2019-12-31 22:56:06
% DurationCPUTime: 18.04s
% Computational Cost: add. (137189->672), mult. (341827->1066), div. (0->0), fcn. (285816->14), ass. (0->440)
t289 = cos(pkin(5));
t417 = qJD(1) * t289;
t281 = qJD(2) + t417;
t411 = qJD(2) + t281;
t290 = sin(qJ(5));
t292 = sin(qJ(3));
t293 = sin(qJ(2));
t296 = cos(qJ(3));
t287 = sin(pkin(5));
t418 = qJD(1) * t287;
t288 = cos(pkin(6));
t297 = cos(qJ(2));
t425 = t288 * t297;
t286 = sin(pkin(6));
t431 = t286 * t292;
t256 = t281 * t431 + (t292 * t425 + t293 * t296) * t418;
t415 = qJD(1) * t297;
t393 = t287 * t415;
t266 = t281 * t288 - t286 * t393 + qJD(3);
t291 = sin(qJ(4));
t295 = cos(qJ(4));
t243 = t256 * t295 + t266 * t291;
t294 = cos(qJ(5));
t385 = t288 * t393;
t416 = qJD(1) * t293;
t394 = t287 * t416;
t429 = t286 * t296;
t254 = -t281 * t429 + t292 * t394 - t296 * t385;
t328 = qJD(4) + t254;
t220 = t243 * t290 - t294 * t328;
t222 = t243 * t294 + t290 * t328;
t190 = t222 * t220;
t405 = qJDD(1) * t297;
t407 = qJD(1) * qJD(2);
t343 = -t293 * t407 + t405;
t323 = t343 * t288;
t390 = t297 * t407;
t406 = qJDD(1) * t293;
t344 = t390 + t406;
t384 = qJDD(1) * t289 + qJDD(2);
t348 = t286 * t384;
t304 = (t292 * t323 + t296 * t344) * t287 + t292 * t348;
t233 = -t254 * qJD(3) + t304;
t324 = t343 * t287;
t312 = t286 * t324 - t288 * t384 - qJDD(3);
t388 = t233 * t291 + t295 * t312;
t195 = -qJD(4) * t243 - t388;
t194 = qJDD(5) - t195;
t479 = -t190 + t194;
t487 = t290 * t479;
t241 = t256 * t291 - t266 * t295;
t215 = t243 * t241;
t325 = t344 * t287;
t313 = t292 * t325 + (-t287 * t323 - t348) * t296;
t308 = t256 * qJD(3) + t313;
t232 = qJDD(4) + t308;
t478 = -t215 + t232;
t486 = t291 * t478;
t485 = t294 * t479;
t484 = t295 * t478;
t483 = t411 * pkin(2) * t293;
t280 = t281 ^ 2;
t470 = sin(qJ(1));
t471 = cos(qJ(1));
t341 = g(1) * t470 - g(2) * t471;
t319 = qJDD(1) * pkin(1) + t341;
t314 = t289 * t319;
t342 = g(1) * t471 + g(2) * t470;
t473 = qJD(1) ^ 2;
t321 = pkin(1) * t473 + t342;
t350 = t384 * pkin(2);
t464 = pkin(9) * t286;
t303 = t280 * t464 + t293 * t321 + t297 * t314 + t350;
t430 = t286 * t293;
t468 = pkin(2) * t297;
t349 = -pkin(9) * t430 - t468;
t334 = t349 * t287;
t463 = pkin(9) * t288;
t381 = (-qJD(2) + t281) * t463;
t395 = pkin(8) + t463;
t465 = pkin(8) * t289;
t403 = t297 * t465;
t458 = t297 * g(3);
t300 = (-t458 - t395 * t406 + ((-t293 * t334 + t403) * qJD(1) + t297 * t381) * qJD(1)) * t287 + t303;
t345 = -pkin(1) + t349;
t387 = t297 * t411;
t460 = t289 * g(3);
t284 = t293 ^ 2;
t285 = t297 ^ 2;
t477 = -t284 - t285;
t302 = -t460 + (t345 * qJDD(1) + (-pkin(8) * t418 + (t288 * t418 * t477 - t286 * t387) * pkin(9) + t483) * qJD(1) - t341) * t287;
t482 = t286 * t302 + t288 * t300;
t322 = t328 ^ 2;
t434 = t256 * t254;
t307 = -t312 - t434;
t481 = t292 * t307;
t480 = t296 * t307;
t352 = -t295 * t233 + t291 * t312;
t196 = -t241 * qJD(4) - t352;
t228 = t328 * t241;
t178 = t196 - t228;
t246 = t266 * t254;
t208 = -t246 + t233;
t412 = t287 * t473;
t310 = pkin(8) * t412 + t319;
t309 = t289 * t310;
t461 = t287 * pkin(8);
t311 = qJDD(1) * t461 - t321;
t247 = t293 * t311 + (t287 * g(3) - t309) * t297;
t428 = t287 * t293;
t282 = g(3) * t428;
t248 = t293 * t309 + t297 * t311 - t282;
t476 = t293 * t247 + t297 * t248;
t238 = qJD(5) + t241;
t389 = t196 * t290 - t232 * t294;
t129 = (qJD(5) - t238) * t222 + t389;
t283 = t287 ^ 2;
t475 = (t417 - t411) * t283;
t217 = t220 ^ 2;
t218 = t222 ^ 2;
t237 = t238 ^ 2;
t239 = t241 ^ 2;
t240 = t243 ^ 2;
t251 = t254 ^ 2;
t252 = t256 ^ 2;
t474 = t266 ^ 2;
t212 = -t297 * t321 + t293 * t314 - t282 + pkin(9) * t348 - pkin(2) * t280 + (t395 * t405 + ((t293 * t465 + t297 * t334) * qJD(1) + t293 * t381) * qJD(1)) * t287;
t150 = t292 * t212 - t296 * t482;
t235 = pkin(3) * t254 - pkin(10) * t256;
t136 = pkin(3) * t312 - pkin(10) * t474 + t256 * t235 + t150;
t421 = t296 * t212;
t137 = -t474 * pkin(3) - pkin(10) * t312 - t254 * t235 + t292 * t482 + t421;
t433 = t266 * t256;
t298 = -t286 * t300 + t288 * t302 - t208 * pkin(10) + (t308 + t433) * pkin(3);
t91 = t137 * t291 - t295 * t298;
t92 = t137 * t295 + t291 * t298;
t51 = t291 * t91 + t295 * t92;
t44 = t136 * t292 + t296 * t51;
t472 = pkin(9) * t44;
t467 = pkin(3) * t296;
t466 = pkin(4) * t291;
t213 = pkin(4) * t241 - pkin(11) * t243;
t66 = -pkin(4) * t322 + pkin(11) * t232 - t213 * t241 + t92;
t320 = t328 * t243;
t85 = -t178 * pkin(11) + (-t195 + t320) * pkin(4) + t136;
t48 = t290 * t66 - t294 * t85;
t49 = t290 * t85 + t294 * t66;
t26 = t290 * t48 + t294 * t49;
t65 = -pkin(4) * t232 - pkin(11) * t322 + t213 * t243 + t91;
t19 = t26 * t291 - t295 * t65;
t20 = t26 * t295 + t291 * t65;
t25 = t290 * t49 - t294 * t48;
t378 = t20 * t292 - t25 * t296;
t7 = -t19 * t286 + t288 * t378;
t459 = t293 * t7;
t457 = t290 * t65;
t50 = t291 * t92 - t295 * t91;
t456 = t292 * t50;
t371 = -t136 * t296 + t292 * t51;
t28 = -t286 * t50 + t288 * t371;
t455 = t293 * t28;
t169 = t217 + t218;
t359 = -t196 * t294 - t232 * t290;
t149 = -qJD(5) * t220 - t359;
t201 = t238 * t220;
t133 = t149 + t201;
t89 = -t129 * t294 + t133 * t290;
t63 = -t169 * t291 + t295 * t89;
t87 = -t129 * t290 - t133 * t294;
t377 = t292 * t63 - t296 * t87;
t62 = t169 * t295 + t291 * t89;
t30 = -t286 * t62 + t288 * t377;
t454 = t293 * t30;
t181 = -t237 - t217;
t111 = t181 * t290 + t485;
t112 = t181 * t294 - t487;
t408 = qJD(5) + t238;
t130 = -t222 * t408 - t389;
t73 = t112 * t295 - t130 * t291;
t375 = -t111 * t296 + t292 * t73;
t72 = t112 * t291 + t130 * t295;
t37 = -t286 * t72 + t288 * t375;
t453 = t293 * t37;
t183 = -t218 - t237;
t146 = t190 + t194;
t444 = t146 * t290;
t115 = t183 * t294 - t444;
t443 = t146 * t294;
t116 = -t183 * t290 - t443;
t134 = t220 * t408 + t359;
t77 = t116 * t295 - t134 * t291;
t374 = -t115 * t296 + t292 * t77;
t76 = t116 * t291 + t134 * t295;
t39 = -t286 * t76 + t288 * t374;
t452 = t293 * t39;
t175 = -t243 * t254 + t388;
t179 = t196 + t228;
t118 = -t175 * t291 - t179 * t295;
t120 = -t175 * t295 + t179 * t291;
t197 = t239 + t240;
t367 = t120 * t292 + t197 * t296;
t68 = -t118 * t286 + t288 * t367;
t451 = t293 * t68;
t202 = -t322 - t239;
t152 = t202 * t291 + t484;
t153 = t202 * t295 - t486;
t327 = 0.2e1 * qJD(4) + t254;
t176 = -t243 * t327 - t388;
t364 = t153 * t292 + t176 * t296;
t94 = -t152 * t286 + t288 * t364;
t450 = t293 * t94;
t211 = -t240 - t322;
t187 = t215 + t232;
t440 = t187 * t291;
t155 = t211 * t295 - t440;
t439 = t187 * t295;
t156 = -t211 * t291 - t439;
t180 = t241 * t327 + t352;
t363 = t156 * t292 + t180 * t296;
t98 = -t155 * t286 + t288 * t363;
t449 = t293 * t98;
t448 = t294 * t65;
t447 = t296 * t50;
t446 = t136 * t291;
t445 = t136 * t295;
t401 = pkin(2) * t405;
t182 = t288 * t460 + (-t288 * (-t319 - t401) + ((-t349 * t430 - t288 * (t463 * t477 - pkin(8))) * t418 - t288 * t483) * qJD(1)) * t287 + (t303 + (-pkin(8) * t406 - t458 + (0.2e1 * pkin(9) * t281 * t425 + t403 * qJD(1)) * qJD(1)) * t287) * t286;
t442 = t182 * t292;
t441 = t182 * t296;
t223 = t312 - t434;
t438 = t223 * t292;
t437 = t223 * t296;
t436 = t238 * t290;
t435 = t238 * t294;
t432 = t266 * t296;
t427 = t287 * t297;
t426 = t288 * t292;
t219 = -t251 - t252;
t209 = t246 + t233;
t305 = (-qJD(3) + t266) * t256 - t313;
t357 = -t209 * t296 + t292 * t305;
t144 = -t219 * t286 + t288 * t357;
t424 = t293 * t144;
t413 = t283 * t473;
t279 = t297 * t293 * t413;
t268 = t279 + t384;
t422 = t293 * t268;
t269 = -t279 + t384;
t419 = t297 * t269;
t410 = qJD(3) + t266;
t400 = t291 * t190;
t399 = t295 * t190;
t398 = t292 * t215;
t397 = t296 * t215;
t396 = -pkin(4) * t295 - pkin(3);
t392 = t284 * t413;
t391 = t285 * t413;
t383 = t287 * t390;
t382 = -pkin(4) * t65 + pkin(11) * t26;
t231 = -t474 - t251;
t193 = t231 * t296 - t481;
t380 = pkin(9) * t193 + t441;
t234 = -t252 - t474;
t198 = -t234 * t292 + t437;
t379 = pkin(9) * t198 - t442;
t189 = t218 - t217;
t132 = t149 - t201;
t88 = t130 * t294 - t132 * t290;
t70 = t189 * t291 + t295 * t88;
t86 = t130 * t290 + t132 * t294;
t376 = t292 * t70 - t296 * t86;
t200 = -t218 + t237;
t121 = t200 * t294 + t487;
t123 = -t200 * t290 + t485;
t82 = t123 * t295 + t133 * t291;
t373 = -t121 * t296 + t292 * t82;
t199 = t217 - t237;
t122 = t199 * t290 + t443;
t124 = t199 * t294 - t444;
t83 = t124 * t295 - t129 * t291;
t372 = -t122 * t296 + t292 * t83;
t148 = -qJD(5) * t222 - t389;
t126 = -t148 * t290 + t220 * t435;
t106 = t126 * t295 - t400;
t125 = -t148 * t294 - t220 * t436;
t370 = t106 * t292 + t125 * t296;
t128 = t149 * t294 - t222 * t436;
t107 = t128 * t295 + t400;
t127 = t149 * t290 + t222 * t435;
t369 = t107 * t292 - t127 * t296;
t119 = t176 * t295 - t178 * t291;
t214 = t240 - t239;
t368 = t119 * t292 - t214 * t296;
t160 = (-t220 * t294 + t222 * t290) * t238;
t141 = t160 * t295 + t194 * t291;
t159 = (-t220 * t290 - t222 * t294) * t238;
t366 = t141 * t292 - t159 * t296;
t262 = t287 * t310 + t460;
t333 = t281 * t286 + t385;
t151 = t421 + (t288 * (-g(3) * t427 + t297 * t309 + t350) + t286 * (-t287 * t401 - t262) + (t288 * (t281 * t333 - t288 * t383) + t286 * (-t286 * t383 - t333 * t393)) * pkin(9) + (t288 * t321 + ((-pkin(9) * t286 ^ 2 - t288 * t395) * qJDD(1) + (t286 * t411 + t385) * qJD(1) * pkin(2)) * t287) * t293) * t292;
t365 = t150 * t296 - t151 * t292;
t103 = t150 * t292 + t151 * t296;
t227 = -t240 + t322;
t165 = -t227 * t291 + t484;
t362 = t165 * t292 - t179 * t296;
t226 = t239 - t322;
t166 = t226 * t295 - t440;
t361 = t166 * t292 + t175 * t296;
t316 = t295 * t228;
t317 = t291 * t320;
t192 = -t316 + t317;
t360 = t192 * t292 - t232 * t296;
t204 = t256 * t410 + t313;
t358 = -t204 * t292 + t208 * t296;
t356 = t234 * t296 + t438;
t244 = t251 - t474;
t355 = t244 * t292 - t437;
t245 = -t252 + t474;
t354 = t245 * t296 + t481;
t353 = t231 * t292 + t480;
t351 = -t254 * t292 - t256 * t296;
t172 = -t195 * t291 + t316;
t347 = t172 * t292 + t397;
t174 = t196 * t295 - t317;
t346 = t174 * t292 - t397;
t10 = -pkin(3) * t19 - t382;
t11 = t20 * t296 + t25 * t292;
t8 = -pkin(10) * t19 + (-pkin(11) * t295 + t466) * t25;
t340 = pkin(9) * t11 + t10 * t296 + t292 * t8;
t339 = pkin(4) * t130 + pkin(11) * t112 - t448;
t338 = pkin(4) * t134 + pkin(11) * t116 + t457;
t22 = -pkin(11) * t87 - t25;
t13 = -pkin(10) * t62 + t22 * t295 + t466 * t87;
t329 = pkin(4) * t169 + pkin(11) * t89 + t26;
t15 = -pkin(3) * t62 - t329;
t46 = t292 * t87 + t296 * t63;
t337 = pkin(9) * t46 + t13 * t292 + t15 * t296;
t34 = -pkin(4) * t111 + t48;
t54 = -pkin(11) * t111 + t457;
t18 = -pkin(10) * t72 - t291 * t34 + t295 * t54;
t31 = -pkin(3) * t72 - t339;
t56 = t111 * t292 + t296 * t73;
t336 = pkin(9) * t56 + t18 * t292 + t296 * t31;
t35 = -pkin(4) * t115 + t49;
t55 = -pkin(11) * t115 + t448;
t21 = -pkin(10) * t76 - t291 * t35 + t295 * t55;
t32 = -pkin(3) * t76 - t338;
t58 = t115 * t292 + t296 * t77;
t335 = pkin(9) * t58 + t21 * t292 + t296 * t32;
t101 = -pkin(10) * t152 + t446;
t113 = t153 * t296 - t176 * t292;
t60 = -pkin(3) * t152 + t91;
t332 = pkin(9) * t113 + t101 * t292 + t296 * t60;
t102 = -pkin(10) * t155 + t445;
t114 = t156 * t296 - t180 * t292;
t61 = -pkin(3) * t155 + t92;
t331 = pkin(9) * t114 + t102 * t292 + t296 * t61;
t170 = t209 * t292 + t296 * t305;
t330 = pkin(9) * t170 + t103;
t108 = t120 * t296 - t197 * t292;
t43 = -pkin(10) * t118 - t50;
t326 = pkin(9) * t108 - t118 * t467 + t292 * t43;
t318 = t291 * t228;
t315 = t295 * t320;
t306 = t296 * t308;
t273 = t281 * t393;
t272 = t281 * t394;
t271 = (t284 - t285) * t413;
t270 = -t280 - t391;
t267 = -t392 - t280;
t261 = -t272 + t324;
t260 = t272 + t324;
t259 = -t273 + t325;
t236 = t252 - t251;
t207 = -t254 * t410 + t304;
t203 = t266 * t286 * t351 - t288 * t312;
t191 = -t318 - t315;
t185 = t233 * t431 + (t254 * t288 + t266 * t429) * t256;
t184 = -t286 * t306 + (-t256 * t288 + t266 * t431) * t254;
t173 = t196 * t291 + t315;
t171 = t195 * t295 + t318;
t168 = t286 * t355 + t288 * t305;
t167 = t209 * t288 + t286 * t354;
t164 = t226 * t291 + t439;
t163 = t227 * t295 + t486;
t162 = -t207 * t286 + t288 * t356;
t161 = t207 * t288 + t286 * t356;
t158 = -t204 * t286 + t288 * t353;
t157 = t204 * t288 + t286 * t353;
t154 = t236 * t288 + t286 * t358;
t142 = t191 * t288 + t286 * t360;
t140 = t160 * t291 - t194 * t295;
t117 = t176 * t291 + t178 * t295;
t110 = t173 * t288 + t286 * t346;
t109 = t171 * t288 + t286 * t347;
t105 = t128 * t291 - t399;
t104 = t126 * t291 + t399;
t100 = t164 * t288 + t286 * t361;
t99 = t163 * t288 + t286 * t362;
t97 = t155 * t288 + t286 * t363;
t96 = t182 * t286 - t288 * t365;
t95 = -t182 * t288 - t286 * t365;
t93 = t152 * t288 + t286 * t364;
t81 = t124 * t291 + t129 * t295;
t80 = t123 * t291 - t133 * t295;
t79 = pkin(2) * t162 - t151 * t288 + t286 * t379;
t78 = pkin(3) * t180 + pkin(10) * t156 + t446;
t75 = pkin(2) * t158 - t150 * t288 + t286 * t380;
t74 = pkin(3) * t176 + pkin(10) * t153 - t445;
t71 = t117 * t288 + t286 * t368;
t69 = -t189 * t295 + t291 * t88;
t67 = t118 * t288 + t286 * t367;
t64 = t140 * t288 + t286 * t366;
t59 = pkin(2) * t144 + t286 * t330;
t57 = pkin(2) * t96 + t103 * t464;
t53 = t105 * t288 + t286 * t369;
t52 = t104 * t288 + t286 * t370;
t45 = -pkin(3) * t136 + pkin(10) * t51;
t42 = t286 * t372 + t288 * t81;
t41 = t286 * t373 + t288 * t80;
t40 = pkin(3) * t197 + pkin(10) * t120 + t51;
t38 = t286 * t374 + t288 * t76;
t36 = t286 * t375 + t288 * t72;
t33 = t286 * t376 + t288 * t69;
t29 = t286 * t377 + t288 * t62;
t27 = t286 * t371 + t288 * t50;
t24 = pkin(2) * t98 + t286 * t331 + t288 * t78;
t23 = pkin(2) * t94 + t286 * t332 + t288 * t74;
t17 = -pkin(3) * t115 + pkin(10) * t77 + t291 * t55 + t295 * t35;
t16 = -pkin(3) * t111 + pkin(10) * t73 + t291 * t54 + t295 * t34;
t14 = pkin(2) * t68 + t286 * t326 + t288 * t40;
t12 = pkin(10) * t63 + t22 * t291 + t396 * t87;
t9 = pkin(2) * t28 + t288 * t45 + (t472 + (-pkin(10) * t292 - t467) * t50) * t286;
t6 = t19 * t288 + t286 * t378;
t5 = pkin(10) * t20 + (-pkin(11) * t291 + t396) * t25;
t4 = pkin(2) * t39 + t17 * t288 + t286 * t335;
t3 = pkin(2) * t37 + t16 * t288 + t286 * t336;
t2 = pkin(2) * t30 + t12 * t288 + t286 * t337;
t1 = pkin(2) * t7 + t286 * t340 + t288 * t5;
t47 = [0, 0, 0, 0, 0, qJDD(1), t341, t342, 0, 0, (t283 * t406 - t415 * t475) * t293, t289 * t271 + (t293 * t261 + (t273 + t325) * t297) * t287, t289 * t259 + (t422 + t297 * (t280 - t392)) * t287, (t283 * t405 + t416 * t475) * t297, t289 * t260 + (t293 * (-t280 + t391) + t419) * t287, t289 * t384, (-t247 + pkin(1) * (t268 * t297 + t270 * t293)) * t289 + (t297 * t262 + pkin(1) * t261 + pkin(8) * (t270 * t297 - t422)) * t287, -t262 * t428 - t289 * t248 + pkin(1) * ((t267 * t297 - t269 * t293) * t289 + (-qJD(1) * t387 - t406) * t283) + (-t267 * t293 - t419) * t461, pkin(1) * ((-t259 * t297 + t260 * t293) * t289 - t477 * t283 * t412) + (t259 * t293 + t260 * t297) * t461 + t476 * t287, pkin(1) * (t287 * t262 + (-t247 * t297 + t248 * t293) * t289) + t476 * t461, t289 * t185 + (t293 * (t233 * t296 - t292 * t433) + t297 * (t233 * t426 + (-t254 * t286 + t288 * t432) * t256)) * t287, t289 * t154 + (t293 * (-t204 * t296 - t208 * t292) + t297 * (-t236 * t286 + t288 * t358)) * t287, t289 * t167 + (t293 * (-t245 * t292 + t480) + t297 * (-t209 * t286 + t288 * t354)) * t287, (t254 * t432 + t292 * t308) * t428 + (-t288 * t306 + (t256 * t286 + t266 * t426) * t254) * t427 + t289 * t184, t289 * t168 + (t293 * (t244 * t296 + t438) + t297 * (-t286 * t305 + t288 * t355)) * t287, t286 * t312 * t427 + t289 * t203 + (t293 * (-t254 * t296 + t256 * t292) + t351 * t425) * t287 * t266, (t75 + pkin(1) * (t158 * t297 + t193 * t293)) * t289 + (t293 * (-t442 + (-t157 * t286 - t158 * t288) * pkin(9)) + t297 * (-pkin(2) * t157 + t150 * t286 + t288 * t380) - pkin(1) * t157 + pkin(8) * (-t158 * t293 + t193 * t297)) * t287, (t79 + pkin(1) * (t162 * t297 + t198 * t293)) * t289 + (t293 * (-t441 + (-t161 * t286 - t162 * t288) * pkin(9)) + t297 * (-pkin(2) * t161 + t151 * t286 + t288 * t379) - pkin(1) * t161 + pkin(8) * (-t162 * t293 + t198 * t297)) * t287, (t59 + pkin(1) * (t144 * t297 + t170 * t293)) * t289 + (t293 * t365 + pkin(8) * (t170 * t297 - t424) + t345 * (t219 * t288 + t286 * t357) + (-pkin(9) * t424 + t297 * t330) * t288) * t287, (t57 + pkin(1) * (t103 * t293 + t297 * t96)) * t289 + (pkin(8) * (t103 * t297 - t293 * t96) + (-pkin(1) - t468) * t95 + (t293 * (-t286 * t95 - t288 * t96) + t103 * t425) * pkin(9)) * t287, t289 * t110 + (t293 * (t174 * t296 + t398) + t297 * (-t173 * t286 + t288 * t346)) * t287, t289 * t71 + (t293 * (t119 * t296 + t214 * t292) + t297 * (-t117 * t286 + t288 * t368)) * t287, t289 * t99 + (t293 * (t165 * t296 + t179 * t292) + t297 * (-t163 * t286 + t288 * t362)) * t287, t289 * t109 + (t293 * (t172 * t296 - t398) + t297 * (-t171 * t286 + t288 * t347)) * t287, t289 * t100 + (t293 * (t166 * t296 - t175 * t292) + t297 * (-t164 * t286 + t288 * t361)) * t287, t289 * t142 + (t293 * (t192 * t296 + t232 * t292) + t297 * (-t191 * t286 + t288 * t360)) * t287, (t23 + pkin(1) * (t113 * t293 + t297 * t94)) * t289 + (t293 * (t101 * t296 - t292 * t60 - t464 * t93) + t297 * (-pkin(2) * t93 - t286 * t74) - pkin(1) * t93 + pkin(8) * (t113 * t297 - t450) + (-pkin(9) * t450 + t297 * t332) * t288) * t287, (t24 + pkin(1) * (t114 * t293 + t297 * t98)) * t289 + (t293 * (t102 * t296 - t292 * t61 - t464 * t97) + t297 * (-pkin(2) * t97 - t286 * t78) - pkin(1) * t97 + pkin(8) * (t114 * t297 - t449) + (-pkin(9) * t449 + t297 * t331) * t288) * t287, (t14 + pkin(1) * (t108 * t293 + t297 * t68)) * t289 + (t293 * (pkin(3) * t118 * t292 + t296 * t43 - t464 * t67) + t297 * (-pkin(2) * t67 - t286 * t40) - pkin(1) * t67 + pkin(8) * (t108 * t297 - t451) + (-pkin(9) * t451 + t297 * t326) * t288) * t287, (t9 + pkin(1) * (t28 * t297 + t293 * t44)) * t289 + (t293 * (pkin(3) * t456 - pkin(10) * t447 - t27 * t464) + t297 * (-pkin(2) * t27 - t286 * t45) - pkin(1) * t27 + pkin(8) * (t297 * t44 - t455) + (-pkin(9) * t455 + t297 * (-pkin(3) * t447 - pkin(10) * t456 + t472)) * t288) * t287, t289 * t53 + (t293 * (t107 * t296 + t127 * t292) + t297 * (-t105 * t286 + t288 * t369)) * t287, t289 * t33 + (t293 * (t292 * t86 + t296 * t70) + t297 * (-t286 * t69 + t288 * t376)) * t287, t289 * t41 + (t293 * (t121 * t292 + t296 * t82) + t297 * (-t286 * t80 + t288 * t373)) * t287, t289 * t52 + (t293 * (t106 * t296 - t125 * t292) + t297 * (-t104 * t286 + t288 * t370)) * t287, t289 * t42 + (t293 * (t122 * t292 + t296 * t83) + t297 * (-t286 * t81 + t288 * t372)) * t287, t289 * t64 + (t293 * (t141 * t296 + t159 * t292) + t297 * (-t140 * t286 + t288 * t366)) * t287, (t3 + pkin(1) * (t293 * t56 + t297 * t37)) * t289 + (t293 * (t18 * t296 - t292 * t31 - t36 * t464) + t297 * (-pkin(2) * t36 - t16 * t286) - pkin(1) * t36 + pkin(8) * (t297 * t56 - t453) + (-pkin(9) * t453 + t297 * t336) * t288) * t287, (t4 + pkin(1) * (t293 * t58 + t297 * t39)) * t289 + (t293 * (t21 * t296 - t292 * t32 - t38 * t464) + t297 * (-pkin(2) * t38 - t17 * t286) - pkin(1) * t38 + pkin(8) * (t297 * t58 - t452) + (-pkin(9) * t452 + t297 * t335) * t288) * t287, (t2 + pkin(1) * (t293 * t46 + t297 * t30)) * t289 + (t293 * (t13 * t296 - t15 * t292 - t29 * t464) + t297 * (-pkin(2) * t29 - t12 * t286) - pkin(1) * t29 + pkin(8) * (t297 * t46 - t454) + (-pkin(9) * t454 + t297 * t337) * t288) * t287, (t1 + pkin(1) * (t11 * t293 + t297 * t7)) * t289 + (t293 * (-t10 * t292 + t296 * t8 - t464 * t6) + t297 * (-pkin(2) * t6 - t286 * t5) - pkin(1) * t6 + pkin(8) * (t11 * t297 - t459) + (-pkin(9) * t459 + t297 * t340) * t288) * t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t279, t271, t259, t279, t260, t384, -t247, -t248, 0, 0, t185, t154, t167, t184, t168, t203, t75, t79, t59, t57, t110, t71, t99, t109, t100, t142, t23, t24, t14, t9, t53, t33, t41, t52, t42, t64, t3, t4, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t434, t236, t209, -t434, t305, -t312, -t150, -t151, 0, 0, t173, t117, t163, t171, t164, t191, t74, t78, t40, t45, t105, t69, t80, t104, t81, t140, t16, t17, t12, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, t214, t179, -t215, -t175, t232, -t91, -t92, 0, 0, t127, t86, t121, -t125, t122, t159, t339, t338, t329, t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, t189, t133, -t190, -t129, t194, -t48, -t49, 0, 0;];
tauJ_reg = t47;
