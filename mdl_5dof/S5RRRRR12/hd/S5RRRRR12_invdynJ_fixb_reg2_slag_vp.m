% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S5RRRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,alpha3,d1,d2,d3,d4,d5]';
% 
% Output:
% tau_reg [5x(5*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:58
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S5RRRRR12_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR12_invdynJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR12_invdynJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR12_invdynJ_fixb_reg2_slag_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR12_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S5RRRRR12_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:55:19
% EndTime: 2019-12-31 22:56:17
% DurationCPUTime: 28.98s
% Computational Cost: add. (29151->904), mult. (85163->1265), div. (0->0), fcn. (70555->14), ass. (0->391)
t344 = sin(pkin(5));
t347 = sin(qJ(3));
t348 = sin(qJ(2));
t351 = cos(qJ(2));
t552 = cos(pkin(6));
t575 = cos(qJ(3));
t459 = t552 * t575;
t387 = t347 * t351 + t348 * t459;
t379 = t387 * qJD(2);
t482 = t351 * t552;
t388 = t347 * t482 + t575 * t348;
t359 = qJD(3) * t388 + t379;
t512 = qJDD(1) * t348;
t497 = t347 * t512;
t357 = (qJD(1) * t359 + t497) * t344;
t553 = cos(pkin(5));
t479 = t553 * qJD(1);
t435 = t479 + qJD(2);
t551 = sin(pkin(6));
t393 = t551 * t435;
t383 = t347 * t393;
t472 = t553 * qJDD(1);
t424 = t472 + qJDD(2);
t392 = t424 * t551;
t429 = t351 * t459;
t412 = t344 * t429;
t528 = -qJDD(1) * t412 - t575 * t392;
t370 = qJD(3) * t383 + t528;
t356 = -t370 - t357;
t604 = -qJDD(4) + t356;
t507 = pkin(1) * t553;
t336 = t351 * t507;
t325 = qJD(1) * t336;
t417 = t344 * (-t552 * pkin(9) - pkin(8));
t403 = t348 * t417;
t227 = qJD(1) * t403 + t325;
t335 = t348 * t507;
t371 = t351 * t417 - t335;
t228 = t371 * qJD(1);
t481 = t351 * t551;
t401 = pkin(2) * t348 - pkin(9) * t481;
t522 = qJD(1) * t344;
t263 = t401 * t522;
t486 = t347 * t551;
t288 = pkin(2) * t459 - pkin(9) * t486;
t487 = t347 * t552;
t530 = t288 * qJD(3) - t575 * t227 - t228 * t487 - t263 * t486;
t389 = -t348 * t487 + t575 * t351;
t260 = t389 * t344;
t248 = qJD(1) * t260;
t458 = t551 * t575;
t422 = qJD(3) * t458;
t400 = t422 - t248;
t149 = -t551 * t228 + t552 * t263;
t259 = t387 * t344;
t247 = qJD(1) * t259;
t603 = -t247 * pkin(3) + t248 * pkin(10) - t149 + (pkin(3) * t486 - pkin(10) * t458) * qJD(3);
t489 = t344 * t551;
t457 = qJD(1) * t489;
t426 = t348 * t457;
t602 = pkin(10) * t426 - t530;
t346 = sin(qJ(4));
t350 = cos(qJ(4));
t283 = t346 * t486 - t350 * t552;
t532 = qJD(4) * t283 + t346 * t426 - t400 * t350;
t483 = t350 * t551;
t284 = t346 * t552 + t347 * t483;
t531 = qJD(4) * t284 + t400 * t346 + t350 * t426;
t290 = pkin(2) * t487 + pkin(9) * t458;
t529 = t290 * qJD(3) - t347 * t227 + t228 * t459 + t263 * t458;
t454 = qJD(3) * t486;
t415 = t454 - t247;
t505 = t348 * t522;
t469 = t347 * t505;
t527 = -qJD(1) * t412 - t575 * t393;
t195 = t469 + t527;
t397 = qJD(4) + t195;
t352 = cos(qJ(1));
t480 = t352 * t553;
t574 = sin(qJ(1));
t285 = t574 * t348 - t351 * t480;
t286 = t348 * t480 + t574 * t351;
t538 = t344 * t352;
t164 = -t285 * t487 + t286 * t575 - t486 * t538;
t490 = t344 * t552;
t232 = t285 * t551 - t352 * t490;
t116 = t164 * t350 + t232 * t346;
t163 = t285 * t459 + t286 * t347 + t458 * t538;
t345 = sin(qJ(5));
t349 = cos(qJ(5));
t601 = t116 * t345 - t163 * t349;
t600 = t116 * t349 + t163 * t345;
t573 = pkin(10) * t350;
t269 = t552 * pkin(10) + t290;
t506 = t551 * pkin(2);
t270 = -pkin(3) * t458 - pkin(10) * t486 - t506;
t517 = qJD(4) * t350;
t518 = qJD(4) * t346;
t557 = -t269 * t518 + t270 * t517 + t603 * t346 - t602 * t350;
t380 = t388 * t344;
t197 = qJD(1) * t380 + t383;
t124 = pkin(3) * t197 + pkin(10) * t195;
t539 = t344 * t351;
t525 = pkin(8) * t539 + t335;
t273 = t525 * qJD(1);
t462 = t344 * t482;
t188 = t273 + (qJD(1) * t462 + t393) * pkin(9);
t375 = t553 * pkin(2) + t403;
t194 = qJD(2) * pkin(2) + qJD(1) * t375 + t325;
t485 = t348 * t551;
t398 = -pkin(2) * t351 - pkin(9) * t485 - pkin(1);
t243 = t398 * t522;
t86 = -t347 * t188 + t194 * t459 + t243 * t458;
t64 = t346 * t124 + t350 * t86;
t599 = pkin(10) * t518 + t64;
t581 = pkin(3) * t426 + t529;
t466 = t344 * t485;
t425 = qJD(2) * t466;
t465 = t344 * t481;
t203 = qJD(1) * t425 - qJDD(1) * t465 + t552 * t424 + qJDD(3);
t471 = pkin(8) * t505;
t448 = qJD(2) * t479;
t431 = pkin(1) * t448;
t467 = pkin(1) * t472;
t511 = qJDD(1) * t351;
t498 = t344 * t511;
t508 = pkin(8) * t498 + t348 * t467 + t351 * t431;
t192 = -qJD(2) * t471 + t508;
t475 = qJDD(1) * t552;
t449 = t351 * t475;
t478 = t552 * qJD(2);
t450 = qJD(1) * t478;
t130 = (t392 + (-t348 * t450 + t449) * t344) * pkin(9) + t192;
t324 = t351 * t467;
t395 = -t348 * t431 + t324;
t513 = qJD(1) * qJD(2);
t500 = t351 * t513;
t411 = -t500 - t512;
t396 = t411 * pkin(8);
t136 = t424 * pkin(2) + ((-t348 * t475 - t351 * t450) * pkin(9) + t396) * t344 + t395;
t391 = qJD(2) * t401;
t169 = (qJD(1) * t391 + qJDD(1) * t398) * t344;
t477 = t552 * qJD(3);
t456 = t347 * t477;
t502 = t575 * qJD(3);
t37 = -t347 * t130 + t136 * t459 + t169 * t458 - t188 * t502 - t194 * t456 - t243 * t454;
t30 = -pkin(3) * t203 - t37;
t499 = t344 * t512;
t103 = (t478 + qJD(3)) * t469 - t347 * t392 - t575 * t499 + (-t347 * t449 - t500 * t575) * t344 + t527 * qJD(3);
t378 = t351 * t457 - t552 * t435 - qJD(3);
t242 = t350 * t378;
t58 = qJD(4) * t242 + t350 * t103 + t197 * t518 - t346 * t203;
t476 = -t346 * t103 - t350 * t203;
t140 = t350 * t197 - t346 * t378;
t519 = qJD(4) * t140;
t59 = t476 + t519;
t10 = pkin(4) * t59 + pkin(11) * t58 + t30;
t135 = -t551 * t194 + t552 * t243;
t72 = t195 * pkin(3) - t197 * pkin(10) + t135;
t87 = t575 * t188 + (t552 * t194 + t551 * t243) * t347;
t76 = -pkin(10) * t378 + t87;
t39 = t346 * t72 + t350 * t76;
t34 = pkin(11) * t397 + t39;
t138 = t197 * t346 + t242;
t75 = pkin(3) * t378 - t86;
t44 = t138 * pkin(4) - t140 * pkin(11) + t75;
t442 = t34 * t345 - t349 * t44;
t423 = qJD(3) * t459;
t520 = qJD(3) * t347;
t386 = -t575 * t130 - t136 * t487 - t169 * t486 + t188 * t520 - t194 * t423 - t243 * t422;
t29 = pkin(10) * t203 - t386;
t80 = -t551 * t136 + t552 * t169;
t35 = -pkin(3) * t356 + t103 * pkin(10) + t80;
t414 = -t350 * t29 - t346 * t35 - t72 * t517 + t76 * t518;
t368 = -qJDD(4) - t370;
t580 = t357 - t368;
t5 = pkin(11) * t580 - t414;
t1 = -t442 * qJD(5) + t345 * t10 + t349 * t5;
t137 = qJD(5) + t138;
t596 = t442 * t137 + t1;
t595 = t415 * pkin(11) + t557;
t594 = t531 * pkin(4) + t532 * pkin(11) + t581;
t460 = t553 * t574;
t390 = t352 * t348 + t351 * t460;
t591 = t390 * t551 + t574 * t490;
t38 = -t346 * t76 + t350 * t72;
t590 = -t397 * t38 - t414;
t589 = pkin(11) * t197 + t599;
t588 = -qJD(5) * t573 - t87 + t397 * (pkin(4) * t346 - pkin(11) * t350);
t117 = -t164 * t346 + t232 * t350;
t341 = t344 ^ 2;
t587 = 0.2e1 * t341;
t16 = t34 * t349 + t345 * t44;
t2 = -qJD(5) * t16 + t349 * t10 - t345 * t5;
t586 = -t16 * t137 - t2;
t582 = t350 * t269 + t346 * t270;
t556 = -qJD(4) * t582 + t602 * t346 + t603 * t350;
t584 = t138 * t397;
t583 = t140 * t397;
t579 = t390 * t552 - t574 * t489;
t578 = (qJDD(2) + 0.2e1 * t472) * t344;
t94 = t349 * t140 + t345 * t397;
t550 = qJD(5) * t94;
t25 = -t345 * t58 + t349 * t604 + t550;
t277 = t525 * qJD(2);
t576 = qJD(3) * t197 + t344 * (qJD(1) * t379 + t497) + qJDD(4) + t528;
t495 = t346 * t29 - t350 * t35;
t8 = -qJD(4) * t39 - t495;
t226 = t336 + t375;
t526 = pkin(2) * t539 + pkin(9) * t466;
t253 = -pkin(1) * t344 - t526;
t146 = -t551 * t226 + t552 * t253;
t444 = t553 * t551;
t402 = t575 * t444;
t536 = t347 * t348;
t221 = t344 * t536 - t402 - t412;
t220 = t221 * pkin(3);
t418 = t347 * t444;
t222 = t418 + t380;
t84 = -t222 * pkin(10) + t146 + t220;
t212 = (t462 + t444) * pkin(9) + t525;
t106 = t575 * t212 + t226 * t487 + t253 * t486;
t282 = -t553 * t552 + t465;
t89 = -pkin(10) * t282 + t106;
t569 = t346 * t84 + t350 * t89;
t326 = qJD(2) * t336;
t229 = qJD(2) * t403 + t326;
t230 = t371 * qJD(2);
t264 = t344 * t391;
t66 = -t212 * t520 + t226 * t423 + t575 * t229 + t230 * t487 + t253 * t422 + t264 * t486;
t61 = pkin(10) * t425 + t66;
t147 = qJD(3) * t418 + t344 * t359;
t148 = qJD(3) * t402 + ((t429 - t536) * qJD(3) + t389 * qJD(2)) * t344;
t150 = -t551 * t230 + t552 * t264;
t70 = t147 * pkin(3) - t148 * pkin(10) + t150;
t14 = -qJD(4) * t569 - t346 * t61 + t350 * t70;
t353 = qJD(1) ^ 2;
t382 = t349 * t397;
t92 = t140 * t345 - t382;
t572 = t94 * t92;
t268 = -t552 * pkin(3) - t288;
t159 = t283 * pkin(4) - t284 * pkin(11) + t268;
t162 = -pkin(11) * t458 + t582;
t90 = t159 * t349 - t162 * t345;
t571 = qJD(5) * t90 + t594 * t345 + t595 * t349;
t91 = t159 * t345 + t162 * t349;
t570 = -qJD(5) * t91 - t595 * t345 + t594 * t349;
t568 = t137 * t92;
t516 = qJD(5) * t345;
t24 = -qJD(5) * t382 + t140 * t516 + t345 * t604 + t349 * t58;
t565 = t24 * t345;
t564 = t25 * t349;
t57 = qJDD(5) + t59;
t563 = t345 * t57;
t562 = t345 * t92;
t561 = t349 * t57;
t560 = t75 * t195;
t559 = t94 * t137;
t558 = -pkin(4) * t415 - t556;
t318 = -pkin(4) * t350 - pkin(11) * t346 - pkin(3);
t515 = qJD(5) * t349;
t555 = t318 * t515 + t345 * t588 - t349 * t589;
t554 = -t318 * t516 + t345 * t589 + t349 * t588;
t549 = t140 * t138;
t548 = t163 * t346;
t547 = t163 * t350;
t287 = -t348 * t460 + t351 * t352;
t167 = t287 * t347 + t575 * t579;
t546 = t167 * t346;
t545 = t167 * t350;
t544 = t197 * t195;
t543 = t221 * t346;
t542 = t221 * t350;
t541 = t341 * t353;
t540 = t344 * t348;
t537 = t345 * t350;
t535 = t349 * t350;
t235 = t345 * t284 + t349 * t458;
t534 = qJD(5) * t235 - t415 * t345 + t532 * t349;
t430 = t345 * t458;
t533 = -qJD(5) * t430 + t284 * t515 - t532 * t345 - t415 * t349;
t524 = t574 * t344 * pkin(8) + t352 * pkin(1);
t342 = t348 ^ 2;
t343 = t351 ^ 2;
t523 = t342 - t343;
t521 = qJD(2) * t344;
t509 = t351 * t541;
t504 = t348 * t521;
t503 = qJD(4) + t527;
t501 = pkin(1) * t587;
t492 = t286 * t551;
t491 = t287 * t551;
t488 = t346 * t551;
t474 = t397 * t346;
t473 = t137 * t349;
t470 = t348 * t509;
t468 = t348 * t500;
t461 = -t574 * pkin(1) + pkin(8) * t538;
t455 = t344 * t353 * t553;
t168 = t287 * t575 - t347 * t579;
t119 = t168 * t346 - t350 * t591;
t452 = g(1) * t117 + g(2) * t119;
t451 = -g(1) * t163 + g(2) * t167;
t121 = -t195 * t537 - t349 * t197;
t447 = -t345 * t517 + t121;
t122 = -t195 * t535 + t197 * t345;
t446 = t349 * t517 - t122;
t443 = -t16 * t345 + t349 * t442;
t46 = pkin(11) * t221 + t569;
t157 = t222 * t346 + t282 * t350;
t158 = t222 * t350 - t282 * t346;
t105 = -t347 * t212 + t226 * t459 + t253 * t458;
t88 = t282 * pkin(3) - t105;
t53 = t157 * pkin(4) - t158 * pkin(11) + t88;
t18 = t345 * t53 + t349 * t46;
t17 = -t345 * t46 + t349 * t53;
t47 = -t346 * t89 + t350 * t84;
t63 = t124 * t350 - t346 * t86;
t112 = t158 * t349 + t221 * t345;
t111 = t158 * t345 - t221 * t349;
t172 = -t346 * t269 + t350 * t270;
t434 = 0.2e1 * t479 + qJD(2);
t432 = t260 * pkin(3) + pkin(10) * t259 + t526;
t421 = -t285 * pkin(2) + pkin(9) * t492;
t420 = -t390 * pkin(2) + pkin(9) * t491;
t419 = g(1) * t352 + g(2) * t574;
t13 = t346 * t70 + t350 * t61 + t84 * t517 - t89 * t518;
t33 = -pkin(4) * t397 - t38;
t413 = -pkin(11) * t57 + t137 * t33;
t410 = t351 * (t477 + qJD(2));
t409 = g(1) * t119 - g(2) * t117 + g(3) * t157;
t120 = t168 * t350 + t346 * t591;
t408 = -g(1) * t120 - g(2) * t116 - g(3) * t158;
t185 = -t285 * t575 - t286 * t487;
t141 = t185 * t346 - t286 * t483;
t187 = -t287 * t487 - t390 * t575;
t143 = t187 * t346 - t287 * t483;
t198 = t260 * t346 - t350 * t466;
t407 = -g(1) * t143 - g(2) * t141 - g(3) * t198;
t406 = g(1) * t167 + g(2) * t163 + g(3) * t221;
t405 = g(1) * t168 + g(2) * t164 + g(3) * t222;
t184 = -t285 * t347 + t286 * t459;
t186 = t287 * t459 - t347 * t390;
t404 = -g(1) * t186 - g(2) * t184 - g(3) * t259;
t6 = -pkin(4) * t580 - t8;
t399 = t409 - t6;
t385 = t185 * pkin(3) + t184 * pkin(10) + t421;
t384 = t187 * pkin(3) + t186 * pkin(10) + t420;
t381 = qJD(4) * t397;
t377 = pkin(11) * qJD(5) * t137 - t399;
t376 = -t286 * pkin(2) - pkin(9) * t232 + t461;
t374 = t348 * (qJD(2) * t459 + t502);
t369 = t378 * t551;
t367 = -pkin(3) * t164 - pkin(10) * t163 + t376;
t366 = qJD(3) * t369;
t365 = t369 * t540;
t67 = -t212 * t502 - t226 * t456 - t347 * t229 + t230 * t459 - t253 * t454 + t264 * t458;
t364 = t287 * pkin(2) + t591 * pkin(9) + t524;
t361 = t195 * t397 + t381;
t360 = t168 * pkin(3) + t167 * pkin(10) + t364;
t62 = -pkin(3) * t425 - t67;
t289 = -pkin(8) * t540 + t336;
t276 = -pkin(8) * t504 + t326;
t271 = t325 - t471;
t266 = pkin(10) * t535 + t318 * t345;
t265 = -pkin(10) * t537 + t318 * t349;
t236 = t349 * t284 - t430;
t199 = t260 * t350 + t346 * t466;
t193 = t344 * t396 + t395;
t161 = pkin(4) * t458 - t172;
t155 = t167 * pkin(3);
t153 = t163 * pkin(3);
t144 = t187 * t350 + t287 * t488;
t142 = t185 * t350 + t286 * t488;
t79 = -qJD(4) * t157 + t148 * t350 + t346 * t425;
t78 = qJD(4) * t158 + t148 * t346 - t350 * t425;
t77 = pkin(4) * t140 + pkin(11) * t138;
t74 = t120 * t349 + t167 * t345;
t73 = -t120 * t345 + t167 * t349;
t51 = -pkin(4) * t197 - t63;
t45 = -pkin(4) * t221 - t47;
t43 = -qJD(5) * t111 + t147 * t345 + t349 * t79;
t42 = qJD(5) * t112 - t147 * t349 + t345 * t79;
t23 = t345 * t77 + t349 * t38;
t22 = -t345 * t38 + t349 * t77;
t19 = t78 * pkin(4) - t79 * pkin(11) + t62;
t12 = -pkin(4) * t147 - t14;
t11 = pkin(11) * t147 + t13;
t4 = -qJD(5) * t18 - t11 * t345 + t19 * t349;
t3 = qJD(5) * t17 + t11 * t349 + t19 * t345;
t7 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t574 - g(2) * t352, t419, 0, 0, (qJDD(1) * t342 + 0.2e1 * t468) * t341, (t348 * t511 - t523 * t513) * t587, t351 * t434 * t521 + t348 * t578, (qJDD(1) * t343 - 0.2e1 * t468) * t341, t351 * t578 - t434 * t504, t424 * t553, -t277 * t435 + t289 * t424 + t193 * t553 + g(1) * t286 - g(2) * t287 + (-t348 * t513 + t511) * t501, -g(1) * t285 + g(2) * t390 - t192 * t553 - t276 * t435 + t411 * t501 - t424 * t525, ((-t271 * qJD(2) + qJDD(1) * t525 + t192 + (-qJD(2) * t289 + t276) * qJD(1)) * t351 + (-t273 * qJD(2) - qJDD(1) * t289 - t193) * t348 - t419) * t344, t341 * qJDD(1) * pkin(1) ^ 2 - g(1) * t461 - g(2) * t524 + t192 * t525 + t193 * t289 - t271 * t277 + t273 * t276, -t103 * t222 + t148 * t197, t103 * t221 - t147 * t197 - t148 * t195 + t222 * t356, t103 * t282 - t148 * t378 + t197 * t425 + t222 * t203, t147 * t195 - t221 * t356, t147 * t378 - t195 * t425 - t221 * t203 - t282 * t356, -qJD(2) * t365 - t203 * t282, g(1) * t164 - g(2) * t168 + t105 * t203 + t135 * t147 - t146 * t356 + t150 * t195 + t80 * t221 - t37 * t282 - t378 * t67 + t425 * t86, -t146 * t103 - t106 * t203 + t135 * t148 + t150 * t197 + t80 * t222 - t282 * t386 + t378 * t66 - t425 * t87 + t451, g(1) * t232 - g(2) * t591 + t105 * t103 + t106 * t356 - t87 * t147 - t86 * t148 - t66 * t195 - t67 * t197 + t221 * t386 - t37 * t222, -g(1) * t376 - g(2) * t364 + t37 * t105 - t106 * t386 + t135 * t150 + t80 * t146 + t87 * t66 + t86 * t67, t140 * t79 - t158 * t58, -t138 * t79 - t140 * t78 + t157 * t58 - t158 * t59, t79 * t503 - t158 * t368 - t58 * t221 + t140 * t147 + (t158 * t497 + (t158 * t374 + (t158 * t410 + t79 * t348) * t347) * qJD(1)) * t344, t138 * t78 + t157 * t59, -t78 * t503 + t157 * t368 - t59 * t221 - t138 * t147 + (-t157 * t497 + (-t157 * t374 + (-t157 * t410 - t78 * t348) * t347) * qJD(1)) * t344, -t368 * t221 + t503 * t147 + (t221 * t497 + (t221 * t374 + (t348 * t147 + t221 * t410) * t347) * qJD(1)) * t344, g(1) * t116 - g(2) * t120 + t62 * t138 + t14 * t397 + t38 * t147 + t30 * t157 + t8 * t221 - t47 * t604 + t88 * t59 + t75 * t78, -t13 * t397 + t62 * t140 - t39 * t147 + t30 * t158 + t221 * t414 + t569 * t604 - t88 * t58 + t75 * t79 + t452, -t13 * t138 - t14 * t140 + t157 * t414 - t158 * t8 - t38 * t79 - t39 * t78 + t47 * t58 - t569 * t59 - t451, -g(1) * t367 - g(2) * t360 + t39 * t13 + t38 * t14 + t30 * t88 - t414 * t569 + t8 * t47 + t75 * t62, -t112 * t24 + t43 * t94, t111 * t24 - t112 * t25 - t42 * t94 - t43 * t92, t112 * t57 + t137 * t43 - t157 * t24 + t78 * t94, t111 * t25 + t42 * t92, -t111 * t57 - t137 * t42 - t157 * t25 - t78 * t92, t137 * t78 + t157 * t57, g(1) * t600 - g(2) * t74 + t6 * t111 + t12 * t92 + t4 * t137 + t2 * t157 + t17 * t57 + t45 * t25 + t33 * t42 - t442 * t78, -g(1) * t601 - g(2) * t73 - t1 * t157 + t6 * t112 + t12 * t94 - t3 * t137 - t16 * t78 - t18 * t57 - t45 * t24 + t33 * t43, -t1 * t111 - t112 * t2 - t16 * t42 + t17 * t24 - t18 * t25 - t3 * t92 - t4 * t94 + t43 * t442 - t452, t1 * t18 + t16 * t3 + t2 * t17 - t442 * t4 + t6 * t45 + t33 * t12 - g(1) * (-pkin(4) * t116 + t117 * pkin(11) + t367) - g(2) * (t120 * pkin(4) + t119 * pkin(11) + t360); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t470, t523 * t541, -t351 * t455 + t499, t470, t348 * t455 + t498, t424, t324 + t273 * t435 + g(1) * t390 + g(2) * t285 + (-t448 + t541) * t348 * pkin(1) + (-g(3) * t351 + t396) * t344, pkin(1) * t509 + t271 * t435 + g(1) * t287 + g(2) * t286 + (pkin(8) * t513 + g(3)) * t540 - t508, 0, 0, -t103 * t486 + t197 * t400, -t103 * t458 + t356 * t486 + t248 * t195 + t197 * t247 + (-t195 * t458 - t197 * t486) * qJD(3), -t103 * t552 - t197 * t426 + t203 * t486 + t248 * t378 - t575 * t366, t195 * t415 + t356 * t458, t195 * t426 + t203 * t458 - t247 * t378 + t347 * t366 + t356 * t552, qJD(1) * t365 + t203 * t552, -g(1) * t187 - g(2) * t185 - g(3) * t260 + t415 * t135 - t149 * t195 + t288 * t203 + t356 * t506 + t37 * t552 + t529 * t378 - t86 * t426 - t80 * t458, t103 * t506 + t400 * t135 - t149 * t197 - t290 * t203 + t530 * t378 + t386 * t552 + t87 * t426 + t80 * t486 - t404, -g(3) * t466 - t386 * t458 - g(1) * t491 - g(2) * t492 - t37 * t486 + t288 * t103 + t290 * t356 + t87 * t247 + t86 * t248 + t529 * t197 - t530 * t195 + (-t458 * t86 - t486 * t87) * qJD(3), -g(1) * t420 - g(2) * t421 - g(3) * t526 - t135 * t149 + t37 * t288 - t290 * t386 - t506 * t80 - t529 * t86 + t530 * t87, -t140 * t532 - t284 * t58, t138 * t532 - t140 * t531 + t283 * t58 - t284 * t59, -t284 * t368 + t58 * t458 + t415 * t140 + (t284 * t497 + (t284 * t374 + (t284 * t410 - t348 * t532) * t347) * qJD(1)) * t344 - t532 * t503, t138 * t531 + t283 * t59, t283 * t368 + t59 * t458 - t415 * t138 + (-t283 * t497 + (-t283 * t374 + (-t283 * t410 - t348 * t531) * t347) * qJD(1)) * t344 - t531 * t503, t397 * t415 + t458 * t604, -g(1) * t144 - g(2) * t142 - g(3) * t199 + t581 * t138 - t172 * t604 + t268 * t59 + t30 * t283 + t415 * t38 + t556 * t397 - t458 * t8 + t531 * t75, t581 * t140 - t268 * t58 + t30 * t284 - t415 * t39 - t557 * t397 - t414 * t458 - t532 * t75 + t582 * t604 - t407, -t557 * t138 - t556 * t140 + t172 * t58 + t283 * t414 - t284 * t8 + t532 * t38 - t531 * t39 - t582 * t59 + t404, -g(1) * t384 - g(2) * t385 - g(3) * t432 + t8 * t172 + t30 * t268 + t556 * t38 + t557 * t39 - t414 * t582 + t581 * t75, -t236 * t24 - t534 * t94, t235 * t24 - t236 * t25 - t533 * t94 + t534 * t92, -t137 * t534 + t236 * t57 - t24 * t283 + t531 * t94, t235 * t25 + t533 * t92, -t137 * t533 - t235 * t57 - t25 * t283 - t531 * t92, t137 * t531 + t283 * t57, t90 * t57 + t2 * t283 + t161 * t25 + t6 * t235 - g(1) * (t144 * t349 + t186 * t345) - g(2) * (t142 * t349 + t184 * t345) - g(3) * (t199 * t349 + t259 * t345) + t558 * t92 + t533 * t33 - t531 * t442 + t570 * t137, -t91 * t57 - t1 * t283 - t161 * t24 + t6 * t236 - g(1) * (-t144 * t345 + t186 * t349) - g(2) * (-t142 * t345 + t184 * t349) - g(3) * (-t199 * t345 + t259 * t349) + t558 * t94 - t534 * t33 - t531 * t16 - t571 * t137, -t1 * t235 - t16 * t533 - t2 * t236 + t24 * t90 - t25 * t91 - t442 * t534 - t570 * t94 - t571 * t92 + t407, t1 * t91 + t2 * t90 + t6 * t161 - g(1) * (t144 * pkin(4) + t143 * pkin(11) + t384) - g(2) * (t142 * pkin(4) + t141 * pkin(11) + t385) - g(3) * (pkin(4) * t199 + pkin(11) * t198 + t432) + t558 * t33 + t571 * t16 - t570 * t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t544, -t195 ^ 2 + t197 ^ 2, -t195 * t378 - t103, -t544, -t197 * t378 + t356, t203, -t135 * t197 - t378 * t87 + t37 + t406, t135 * t195 - t378 * t86 + t386 + t405, 0, 0, -t346 * t58 + t350 * t583, (-t58 - t584) * t350 + (-t59 - t583) * t346, -t140 * t197 + t346 * t576 + t350 * t361, t138 * t474 - t350 * t59, t138 * t197 - t346 * t361 + t350 * t576, -t397 * t197, -pkin(3) * t59 + g(1) * t545 + g(2) * t547 + g(3) * t542 - t87 * t138 - t38 * t197 - t30 * t350 - t381 * t573 - t397 * t63 + t518 * t75 + (pkin(10) * t604 + t560) * t346, pkin(3) * t58 - g(1) * t546 - g(2) * t548 - g(3) * t543 - t87 * t140 + t39 * t197 + t30 * t346 + t350 * t560 + t599 * t397 + t517 * t75 + t573 * t604, t138 * t64 + t140 * t63 + ((-t59 + t519) * pkin(10) + t590) * t350 + (-t8 - t397 * t39 + (qJD(4) * t138 - t58) * pkin(10)) * t346 - t405, -t30 * pkin(3) + g(1) * t155 + g(2) * t153 + g(3) * t220 - t38 * t63 - t39 * t64 - t75 * t87 + (-t8 * t346 - t414 * t350 + (-t346 * t39 - t350 * t38) * qJD(4) - t405) * pkin(10), -t24 * t346 * t349 + (-t346 * t516 + t446) * t94, t121 * t94 + t122 * t92 + (-t345 * t94 - t349 * t92) * t517 + (t565 - t564 + (-t349 * t94 + t562) * qJD(5)) * t346, t24 * t350 + t446 * t137 + (-t137 * t516 + t397 * t94 + t561) * t346, t25 * t345 * t346 + (t346 * t515 - t447) * t92, t25 * t350 + t447 * t137 + (-t137 * t515 - t397 * t92 - t563) * t346, t137 * t474 - t350 * t57, -t33 * t121 + t265 * t57 - t51 * t92 + t554 * t137 - t405 * t345 + (-t2 + (pkin(10) * t92 + t33 * t345) * qJD(4) + t406 * t349) * t350 + (pkin(10) * t25 + t33 * t515 + t6 * t345 - t397 * t442) * t346, -t33 * t122 - t266 * t57 - t51 * t94 - t555 * t137 - t405 * t349 + (t1 + (pkin(10) * t94 + t33 * t349) * qJD(4) - t406 * t345) * t350 + (-pkin(10) * t24 - t16 * t397 - t33 * t516 + t6 * t349) * t346, t121 * t16 - t122 * t442 + t24 * t265 - t25 * t266 - t554 * t94 - t555 * t92 + t443 * t517 + (-t1 * t345 - t2 * t349 + (-t16 * t349 - t345 * t442) * qJD(5) + t406) * t346, t1 * t266 + t2 * t265 - t33 * t51 - g(1) * (-pkin(4) * t545 - pkin(11) * t546 - t155) - g(2) * (-pkin(4) * t547 - pkin(11) * t548 - t153) - g(3) * (-pkin(4) * t542 - pkin(11) * t543 - t220) + t555 * t16 - t554 * t442 + (t33 * t517 + t346 * t6 - t405) * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t549, -t138 ^ 2 + t140 ^ 2, -t58 + t584, -t549, t140 * t195 - t476, -t604, -t75 * t140 + t195 * t39 + t409 - t495, t75 * t138 - t408 - t590, 0, 0, t473 * t94 - t565, (-t24 - t568) * t349 + (-t25 - t559) * t345, t137 * t473 - t140 * t94 + t563, t137 * t562 - t564, -t137 ^ 2 * t345 + t140 * t92 + t561, -t137 * t140, -pkin(4) * t25 - t137 * t22 + t140 * t442 + t345 * t413 - t349 * t377 - t39 * t92, pkin(4) * t24 + t137 * t23 + t140 * t16 + t345 * t377 + t349 * t413 - t39 * t94, t22 * t94 + t23 * t92 + ((-t25 + t550) * pkin(11) + t596) * t349 + ((qJD(5) * t92 - t24) * pkin(11) + t586) * t345 + t408, t442 * t22 - t16 * t23 - t33 * t39 + t399 * pkin(4) + (qJD(5) * t443 + t1 * t349 - t2 * t345 + t408) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t572, -t92 ^ 2 + t94 ^ 2, -t24 + t568, -t572, t559 - t25, t57, -g(1) * t73 + g(2) * t601 + g(3) * t111 - t33 * t94 - t586, g(1) * t74 + g(2) * t600 + g(3) * t112 + t33 * t92 - t596, 0, 0;];
tau_reg = t7;
