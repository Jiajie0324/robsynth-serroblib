% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5PRRRR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d4,d5,theta1]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:06
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5PRRRR3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR3_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR3_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRR3_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRR3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRRRR3_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:06:42
% EndTime: 2019-12-05 17:06:44
% DurationCPUTime: 2.19s
% Computational Cost: add. (6946->132), mult. (9950->198), div. (0->0), fcn. (7310->10), ass. (0->111)
t1026 = sin(pkin(9));
t1027 = cos(pkin(9));
t1031 = sin(qJ(2));
t1035 = cos(qJ(2));
t1030 = sin(qJ(3));
t1034 = cos(qJ(3));
t1022 = qJD(2) + qJD(3);
t1018 = qJD(4) + t1022;
t1016 = t1018 ^ 2;
t1021 = qJDD(2) + qJDD(3);
t1017 = qJDD(4) + t1021;
t1029 = sin(qJ(4));
t1033 = cos(qJ(4));
t1040 = -t1033 * t1016 - t1029 * t1017;
t993 = t1029 * t1016 - t1033 * t1017;
t1052 = t1030 * t993 + t1034 * t1040;
t972 = -t1030 * t1040 + t1034 * t993;
t1057 = t1031 * t972 + t1035 * t1052;
t954 = -t1031 * t1052 + t1035 * t972;
t1063 = t1026 * t954 + t1027 * t1057;
t1062 = -t1026 * t1057 + t1027 * t954;
t1020 = t1022 ^ 2;
t1039 = -t1034 * t1020 - t1030 * t1021;
t998 = t1030 * t1020 - t1034 * t1021;
t1051 = t1031 * t998 + t1035 * t1039;
t976 = -t1031 * t1039 + t1035 * t998;
t1059 = t1026 * t976 + t1027 * t1051;
t1058 = -t1026 * t1051 + t1027 * t976;
t1012 = t1026 * g(1) - t1027 * g(2);
t1013 = -t1027 * g(1) - t1026 * g(2);
t986 = t1035 * t1012 - t1031 * t1013;
t984 = qJDD(2) * pkin(2) + t986;
t1037 = qJD(2) ^ 2;
t987 = t1031 * t1012 + t1035 * t1013;
t985 = -t1037 * pkin(2) + t987;
t960 = -t1030 * t985 + t1034 * t984;
t1038 = t1021 * pkin(3) + t960;
t961 = t1030 * t984 + t1034 * t985;
t959 = -t1020 * pkin(3) + t961;
t943 = t1029 * t1038 + t1033 * t959;
t1046 = qJD(5) * t1018;
t1028 = sin(qJ(5));
t1045 = t1028 * t1017;
t1032 = cos(qJ(5));
t1044 = t1032 * t1017;
t1023 = t1028 ^ 2;
t1024 = t1032 ^ 2;
t1043 = t1023 + t1024;
t942 = -t1029 * t959 + t1033 * t1038;
t1009 = t1035 * qJDD(2) - t1031 * t1037;
t1010 = -t1031 * qJDD(2) - t1035 * t1037;
t1042 = -t1026 * t1009 + t1027 * t1010;
t1041 = t1027 * t1009 + t1026 * t1010;
t1036 = qJD(5) ^ 2;
t1025 = -g(3) + qJDD(1);
t1008 = t1028 * t1016 * t1032;
t1007 = -t1024 * t1016 - t1036;
t1006 = -t1023 * t1016 - t1036;
t1002 = -qJDD(5) + t1008;
t1001 = qJDD(5) + t1008;
t995 = t1043 * t1016;
t990 = t1043 * t1017;
t989 = -0.2e1 * t1028 * t1046 + t1044;
t988 = 0.2e1 * t1032 * t1046 + t1045;
t983 = t1032 * t1002 - t1028 * t1006;
t982 = -t1028 * t1001 + t1032 * t1007;
t981 = t1028 * t1002 + t1032 * t1006;
t980 = t1032 * t1001 + t1028 * t1007;
t971 = -t1029 * t995 + t1033 * t990;
t968 = t1029 * t990 + t1033 * t995;
t967 = t1029 * t988 + t1033 * t983;
t966 = -t1029 * t989 + t1033 * t982;
t965 = t1029 * t983 - t1033 * t988;
t964 = t1029 * t982 + t1033 * t989;
t963 = -t1031 * t986 + t1035 * t987;
t962 = t1031 * t987 + t1035 * t986;
t953 = -t1030 * t968 + t1034 * t971;
t950 = t1030 * t971 + t1034 * t968;
t949 = -t1030 * t965 + t1034 * t967;
t948 = -t1030 * t964 + t1034 * t966;
t947 = t1030 * t967 + t1034 * t965;
t946 = t1030 * t966 + t1034 * t964;
t945 = -t1030 * t960 + t1034 * t961;
t944 = t1030 * t961 + t1034 * t960;
t941 = -t1016 * pkin(4) + t1017 * pkin(8) + t943;
t940 = -t1017 * pkin(4) - t1016 * pkin(8) - t942;
t939 = t1028 * t1025 + t1032 * t941;
t938 = t1032 * t1025 - t1028 * t941;
t937 = -t1031 * t950 + t1035 * t953;
t936 = t1031 * t953 + t1035 * t950;
t935 = -t1031 * t947 + t1035 * t949;
t934 = -t1031 * t946 + t1035 * t948;
t933 = t1031 * t949 + t1035 * t947;
t932 = t1031 * t948 + t1035 * t946;
t931 = -t1031 * t944 + t1035 * t945;
t930 = t1031 * t945 + t1035 * t944;
t929 = -t1029 * t942 + t1033 * t943;
t928 = t1029 * t943 + t1033 * t942;
t927 = -t1028 * t938 + t1032 * t939;
t926 = t1028 * t939 + t1032 * t938;
t925 = t1029 * t940 + t1033 * t927;
t924 = t1029 * t927 - t1033 * t940;
t923 = -t1030 * t928 + t1034 * t929;
t922 = t1030 * t929 + t1034 * t928;
t921 = -t1030 * t924 + t1034 * t925;
t920 = t1030 * t925 + t1034 * t924;
t919 = -t1031 * t922 + t1035 * t923;
t918 = t1031 * t923 + t1035 * t922;
t917 = -t1031 * t920 + t1035 * t921;
t916 = t1031 * t921 + t1035 * t920;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1026 * t1012 + t1027 * t1013, 0, 0, 0, 0, 0, 0, t1042, -t1041, 0, -t1026 * t962 + t1027 * t963, 0, 0, 0, 0, 0, 0, t1059, t1058, 0, -t1026 * t930 + t1027 * t931, 0, 0, 0, 0, 0, 0, t1063, t1062, 0, -t1026 * t918 + t1027 * t919, 0, 0, 0, 0, 0, 0, -t1026 * t932 + t1027 * t934, -t1026 * t933 + t1027 * t935, -t1026 * t936 + t1027 * t937, -t1026 * t916 + t1027 * t917; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1027 * t1012 + t1026 * t1013, 0, 0, 0, 0, 0, 0, t1041, t1042, 0, t1026 * t963 + t1027 * t962, 0, 0, 0, 0, 0, 0, -t1058, t1059, 0, t1026 * t931 + t1027 * t930, 0, 0, 0, 0, 0, 0, -t1062, t1063, 0, t1026 * t919 + t1027 * t918, 0, 0, 0, 0, 0, 0, t1026 * t934 + t1027 * t932, t1026 * t935 + t1027 * t933, t1026 * t937 + t1027 * t936, t1026 * t917 + t1027 * t916; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, t980, t981, 0, t926; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1013, 0, 0, 0, 0, 0, 0, t1010, -t1009, 0, t963, 0, 0, 0, 0, 0, 0, t1051, t976, 0, t931, 0, 0, 0, 0, 0, 0, t1057, t954, 0, t919, 0, 0, 0, 0, 0, 0, t934, t935, t937, t917; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1012, 0, 0, 0, 0, 0, 0, t1009, t1010, 0, t962, 0, 0, 0, 0, 0, 0, -t976, t1051, 0, t930, 0, 0, 0, 0, 0, 0, -t954, t1057, 0, t918, 0, 0, 0, 0, 0, 0, t932, t933, t936, t916; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, t980, t981, 0, t926; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1037, -qJDD(2), 0, t987, 0, 0, 0, 0, 0, 0, t1039, t998, 0, t945, 0, 0, 0, 0, 0, 0, t1052, t972, 0, t923, 0, 0, 0, 0, 0, 0, t948, t949, t953, t921; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1037, 0, t986, 0, 0, 0, 0, 0, 0, -t998, t1039, 0, t944, 0, 0, 0, 0, 0, 0, -t972, t1052, 0, t922, 0, 0, 0, 0, 0, 0, t946, t947, t950, t920; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, t980, t981, 0, t926; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1020, -t1021, 0, t961, 0, 0, 0, 0, 0, 0, t1040, t993, 0, t929, 0, 0, 0, 0, 0, 0, t966, t967, t971, t925; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1021, -t1020, 0, t960, 0, 0, 0, 0, 0, 0, -t993, t1040, 0, t928, 0, 0, 0, 0, 0, 0, t964, t965, t968, t924; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, t980, t981, 0, t926; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1016, -t1017, 0, t943, 0, 0, 0, 0, 0, 0, t982, t983, t990, t927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1017, -t1016, 0, t942, 0, 0, 0, 0, 0, 0, t989, -t988, t995, -t940; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1025, 0, 0, 0, 0, 0, 0, t980, t981, 0, t926; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1007, t1002, t1044, t939; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1001, t1006, -t1045, t938; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t989, t988, -t995, t940;];
f_new_reg = t1;
