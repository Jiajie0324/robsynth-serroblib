% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PRPRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d4,d5,theta1]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:01
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PRPRR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPRR7_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPRR7_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRPRR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRPRR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRPRR7_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:01:00
% EndTime: 2019-12-05 16:01:08
% DurationCPUTime: 8.24s
% Computational Cost: add. (21951->517), mult. (42090->628), div. (0->0), fcn. (27314->8), ass. (0->332)
t754 = sin(pkin(8));
t760 = sin(qJ(2));
t763 = cos(qJ(2));
t765 = qJD(2) ^ 2;
t723 = qJDD(2) * t760 + t763 * t765;
t755 = cos(pkin(8));
t727 = g(1) * t754 - g(2) * t755;
t811 = -pkin(5) * t723 + t727 * t763;
t884 = t754 * t811;
t883 = t755 * t811;
t758 = sin(qJ(5));
t747 = qJDD(4) + qJDD(5);
t759 = sin(qJ(4));
t761 = cos(qJ(5));
t762 = cos(qJ(4));
t702 = (-t758 * t762 - t759 * t761) * qJD(2);
t824 = qJD(2) * t762;
t704 = -qJD(2) * t758 * t759 + t761 * t824;
t848 = t704 * t702;
t877 = t747 + t848;
t882 = t758 * t877;
t881 = t761 * t877;
t819 = t763 * qJDD(2);
t724 = t760 * t765 - t819;
t672 = pkin(5) * t724 - t727 * t760;
t880 = t672 * t754;
t879 = t672 * t755;
t742 = t762 * qJDD(2);
t823 = qJD(2) * qJD(4);
t815 = t759 * t823;
t717 = t742 - t815;
t814 = t762 * t823;
t820 = t759 * qJDD(2);
t775 = t814 + t820;
t627 = qJD(5) * t702 + t717 * t761 - t758 * t775;
t748 = qJD(4) + qJD(5);
t840 = t748 * t702;
t878 = t627 + t840;
t753 = qJDD(2) * pkin(2);
t728 = g(1) * t755 + g(2) * t754;
t752 = g(3) - qJDD(1);
t695 = -t728 * t760 + t752 * t763;
t786 = -qJDD(3) - t695;
t668 = -qJ(3) * t765 - t753 - t786;
t663 = -qJDD(2) * pkin(6) + t668;
t657 = t762 * t663;
t623 = -t727 * t759 - t657;
t624 = t663 * t759 - t727 * t762;
t876 = -t623 * t762 + t624 * t759;
t709 = t755 * t727;
t875 = -t728 * t754 + t709;
t827 = t762 * t765;
t589 = qJDD(4) * pkin(4) - pkin(7) * t717 + t657 + (-pkin(4) * t827 - pkin(7) * t823 + t727) * t759;
t731 = qJD(4) * pkin(4) - pkin(7) * t824;
t750 = t759 ^ 2;
t837 = t750 * t765;
t592 = -pkin(4) * t837 - pkin(7) * t775 - qJD(4) * t731 + t624;
t541 = -t589 * t761 + t592 * t758;
t542 = t589 * t758 + t592 * t761;
t512 = t541 * t758 + t542 * t761;
t511 = -t541 * t761 + t542 * t758;
t855 = t511 * t762;
t497 = t512 * t759 + t855;
t756 = t765 * pkin(6);
t696 = -t728 * t763 - t752 * t760;
t822 = qJDD(2) * qJ(3);
t767 = -pkin(2) * t765 + t696 + t822;
t866 = 2 * qJD(3);
t611 = t775 * pkin(4) - pkin(7) * t837 - t756 + (t731 * t762 + t866) * qJD(2) + t767;
t505 = -pkin(4) * t611 + pkin(7) * t512;
t784 = pkin(7) * t855 + t505 * t759;
t865 = -pkin(6) - pkin(2);
t874 = qJ(3) * t611 + t497 * t865 - t784;
t797 = -t717 * t758 - t761 * t775;
t603 = (-qJD(5) + t748) * t704 + t797;
t606 = -t840 + t627;
t561 = t603 * t758 - t606 * t761;
t563 = t603 * t761 + t606 * t758;
t517 = t561 * t762 + t563 * t759;
t700 = t702 ^ 2;
t701 = t704 ^ 2;
t630 = -t700 - t701;
t501 = -pkin(4) * t630 + pkin(7) * t563 + t512;
t504 = -pkin(7) * t561 - t511;
t803 = t501 * t759 - t504 * t762;
t873 = qJ(3) * t630 + t517 * t865 - t803;
t746 = t748 ^ 2;
t644 = -t746 - t700;
t590 = t644 * t758 + t881;
t591 = t644 * t761 - t882;
t543 = t590 * t762 + t591 * t759;
t698 = t704 * t748;
t776 = qJD(5) * t704 - t797;
t601 = t698 + t776;
t853 = t611 * t761;
t526 = -pkin(4) * t601 + pkin(7) * t591 - t853;
t854 = t611 * t758;
t552 = -pkin(7) * t590 + t854;
t802 = t526 * t759 - t552 * t762;
t872 = qJ(3) * t601 + t543 * t865 - t802;
t687 = -t701 - t746;
t654 = -t848 + t747;
t851 = t654 * t758;
t607 = t687 * t761 - t851;
t850 = t654 * t761;
t608 = -t687 * t758 - t850;
t565 = t607 * t762 + t608 * t759;
t534 = -pkin(4) * t878 + pkin(7) * t608 + t854;
t567 = -pkin(7) * t607 + t853;
t801 = t534 * t759 - t567 * t762;
t871 = qJ(3) * t878 + t565 * t865 - t801;
t818 = qJD(2) * t866;
t667 = t767 + t818;
t659 = t667 - t756;
t870 = qJ(3) * t659 + t865 * t876;
t764 = qJD(4) ^ 2;
t733 = -t764 - t837;
t736 = t759 * t827;
t730 = qJDD(4) - t736;
t841 = t730 * t762;
t680 = t733 * t759 + t841;
t716 = 0.2e1 * t814 + t820;
t849 = t659 * t759;
t869 = qJ(3) * t716 + t680 * t865 + t849;
t643 = t762 * t659;
t751 = t762 ^ 2;
t836 = t751 * t765;
t795 = -t764 - t836;
t729 = qJDD(4) + t736;
t828 = t759 * t729;
t684 = t762 * t795 - t828;
t718 = t742 - 0.2e1 * t815;
t868 = qJ(3) * t718 + t684 * t865 + t643;
t825 = t750 + t751;
t722 = t825 * qJDD(2);
t725 = t825 * t765;
t867 = -qJ(3) * t725 - t722 * t865 - t876;
t864 = pkin(1) * t723;
t863 = pkin(1) * t724;
t862 = pkin(3) * t876;
t861 = pkin(3) * t659;
t860 = pkin(3) * t722;
t858 = qJ(1) * t723;
t857 = qJ(1) * t724;
t847 = t722 * t760;
t846 = t722 * t763;
t845 = t727 * t754;
t843 = t729 * t762;
t842 = t730 * t759;
t839 = t748 * t758;
t838 = t748 * t761;
t835 = t754 * t723;
t834 = t754 * t724;
t833 = t754 * t752;
t832 = t755 * t723;
t831 = t755 * t724;
t830 = t755 * t752;
t829 = t759 * t511;
t821 = t755 * qJDD(2);
t817 = t760 * t848;
t816 = t763 * t848;
t510 = pkin(4) * t511;
t813 = -pkin(3) * t497 - t510;
t559 = pkin(4) * t561;
t812 = -pkin(3) * t517 - t559;
t669 = -t725 * t760 + t846;
t539 = -pkin(1) * t669 - t867;
t670 = -t725 * t763 - t847;
t809 = qJ(1) * t670 + t539;
t766 = t696 + t818 + 0.2e1 * t822;
t641 = -t766 - t864;
t808 = -t641 + t857;
t782 = -0.2e1 * t753 - t786;
t642 = -t782 - t863;
t807 = t642 + t858;
t661 = t696 + t864;
t806 = t661 + t857;
t662 = t695 + t863;
t805 = -t662 + t858;
t799 = t667 * t763 + t668 * t760;
t798 = t695 * t760 + t696 * t763;
t796 = -t728 * t755 - t845;
t794 = t760 * t736;
t793 = t763 * t736;
t792 = t759 * t814;
t791 = -pkin(3) * t684 + t624;
t790 = pkin(4) * t590 - t541;
t789 = -pkin(2) * t668 + qJ(3) * t667;
t788 = pkin(3) * t716 + t643;
t787 = pkin(3) * t718 - t849;
t578 = t623 * t759 + t624 * t762;
t613 = t667 * t760 - t668 * t763;
t633 = t695 * t763 - t696 * t760;
t783 = -pkin(3) * t680 + t623;
t777 = pkin(4) * t607 - t542;
t774 = -pkin(3) * t543 - t790;
t773 = pkin(3) * t630 - t501 * t762 - t504 * t759;
t772 = pkin(3) * t601 - t526 * t762 - t552 * t759;
t771 = pkin(3) * t878 - t534 * t762 - t567 * t759;
t770 = pkin(3) * t611 + pkin(7) * t829 - t505 * t762;
t768 = -pkin(3) * t565 - t777;
t741 = t754 * qJDD(2);
t734 = t764 - t836;
t732 = -t764 + t837;
t726 = (-t750 + t751) * t765;
t719 = pkin(1) * t727;
t715 = t825 * t823;
t694 = -t701 + t746;
t693 = t700 - t746;
t692 = qJDD(4) * t763 - t715 * t760;
t691 = qJDD(4) * t760 + t715 * t763;
t690 = t717 * t759 + t751 * t823;
t689 = t750 * t823 - t762 * t775;
t686 = -t759 * t795 - t843;
t685 = t733 * t762 - t842;
t683 = t734 * t762 + t842;
t682 = -t732 * t762 + t828;
t681 = t734 * t759 - t841;
t679 = t732 * t759 + t843;
t678 = -t717 * t762 + t792;
t677 = t759 * t775 + t792;
t666 = t716 * t762 + t718 * t759;
t665 = -t716 * t759 + t718 * t762;
t660 = t701 - t700;
t652 = t689 * t760 - t793;
t651 = t690 * t760 + t793;
t650 = -t689 * t763 - t794;
t649 = -t690 * t763 + t794;
t648 = t683 * t760 + t762 * t819;
t647 = t679 * t760 - t759 * t819;
t646 = -t683 * t763 + t742 * t760;
t645 = -t679 * t763 - t760 * t820;
t640 = t684 * t760 + t718 * t763;
t639 = t680 * t760 + t716 * t763;
t638 = -t684 * t763 + t718 * t760;
t637 = -t680 * t763 + t716 * t760;
t636 = (t702 * t761 + t704 * t758) * t748;
t635 = (t702 * t758 - t704 * t761) * t748;
t629 = t665 * t760 + t726 * t763;
t628 = -t665 * t763 + t726 * t760;
t620 = pkin(5) * t798 + t719;
t619 = t693 * t761 - t851;
t618 = -t694 * t758 + t881;
t617 = t693 * t758 + t850;
t616 = t694 * t761 + t882;
t602 = -t698 + t776;
t598 = t627 * t761 - t704 * t839;
t597 = t627 * t758 + t704 * t838;
t596 = -t702 * t838 + t758 * t776;
t595 = -t702 * t839 - t761 * t776;
t585 = -pkin(5) * t613 + (-pkin(2) * t760 + qJ(3) * t763) * t727;
t584 = t635 * t762 + t636 * t759;
t583 = t635 * t759 - t636 * t762;
t582 = -qJ(3) * t686 - t791;
t581 = -qJ(3) * t685 - t783;
t580 = t685 * t865 + t788;
t579 = t686 * t865 + t787;
t576 = pkin(5) * t799 + t719 + (pkin(2) * t763 + qJ(3) * t760) * t727;
t575 = t584 * t760 + t747 * t763;
t574 = -t584 * t763 + t747 * t760;
t573 = pkin(3) * t725 + t578;
t572 = -pkin(1) * t613 - t789;
t571 = t617 * t762 + t619 * t759;
t570 = t616 * t762 + t618 * t759;
t569 = t617 * t759 - t619 * t762;
t568 = t616 * t759 - t618 * t762;
t566 = -t607 * t759 + t608 * t762;
t562 = -t601 * t761 - t758 * t878;
t560 = -t601 * t758 + t761 * t878;
t558 = t659 * t763 + t760 * t876;
t557 = t659 * t760 - t763 * t876;
t554 = -pkin(1) * t638 - t868;
t553 = -pkin(1) * t637 - t869;
t550 = t597 * t762 + t598 * t759;
t549 = t597 * t759 - t598 * t762;
t548 = t595 * t762 + t596 * t759;
t547 = t595 * t759 - t596 * t762;
t546 = -pkin(3) * t846 - pkin(5) * t669 + t573 * t760;
t545 = -pkin(3) * t847 + pkin(5) * t670 - t573 * t763;
t544 = -t590 * t759 + t591 * t762;
t538 = t550 * t760 - t816;
t537 = t548 * t760 + t816;
t536 = -t550 * t763 - t817;
t535 = -t548 * t763 + t817;
t533 = t570 * t760 + t606 * t763;
t532 = t571 * t760 - t602 * t763;
t531 = -t570 * t763 + t606 * t760;
t530 = -t571 * t763 - t602 * t760;
t529 = -qJ(3) * t578 + t862;
t528 = t565 * t760 + t763 * t878;
t527 = -t565 * t763 + t760 * t878;
t525 = t543 * t760 + t601 * t763;
t524 = -t543 * t763 + t601 * t760;
t523 = t578 * t865 + t861;
t522 = -pkin(5) * t638 - t579 * t760 + t582 * t763;
t521 = -pkin(5) * t637 - t580 * t760 + t581 * t763;
t520 = -pkin(1) * t686 + pkin(5) * t640 + t579 * t763 + t582 * t760;
t519 = -pkin(1) * t685 + pkin(5) * t639 + t580 * t763 + t581 * t760;
t518 = -t561 * t759 + t563 * t762;
t516 = t560 * t762 + t562 * t759;
t515 = t560 * t759 - t562 * t762;
t514 = t516 * t760 + t660 * t763;
t513 = -t516 * t763 + t660 * t760;
t508 = t517 * t760 + t630 * t763;
t507 = -t517 * t763 + t630 * t760;
t506 = -pkin(1) * t557 - t870;
t502 = -qJ(3) * t566 - t768;
t500 = -qJ(3) * t544 - t774;
t499 = -pkin(5) * t557 - t523 * t760 + t529 * t763;
t498 = t512 * t762 - t829;
t496 = t566 * t865 + t771;
t495 = -pkin(1) * t578 + pkin(5) * t558 + t523 * t763 + t529 * t760;
t494 = -qJ(3) * t518 - t812;
t493 = t497 * t760 + t611 * t763;
t492 = -t497 * t763 + t611 * t760;
t491 = t544 * t865 + t772;
t490 = -pkin(1) * t527 - t871;
t489 = -pkin(1) * t524 - t872;
t488 = -pkin(5) * t527 - t496 * t760 + t502 * t763;
t487 = -pkin(1) * t566 + pkin(5) * t528 + t496 * t763 + t502 * t760;
t486 = -pkin(5) * t524 - t491 * t760 + t500 * t763;
t485 = t518 * t865 + t773;
t484 = -qJ(3) * t498 - t813;
t483 = -pkin(1) * t544 + pkin(5) * t525 + t491 * t763 + t500 * t760;
t482 = -pkin(1) * t507 - t873;
t481 = t498 * t865 + t770;
t480 = -pkin(5) * t507 - t485 * t760 + t494 * t763;
t479 = -pkin(1) * t492 - t874;
t478 = -pkin(1) * t518 + pkin(5) * t508 + t485 * t763 + t494 * t760;
t477 = -pkin(5) * t492 - t481 * t760 + t484 * t763;
t476 = -pkin(1) * t498 + pkin(5) * t493 + t481 * t763 + t484 * t760;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t833, -t830, -t875, -qJ(1) * t875, 0, 0, -t831, 0, -t832, t741, t754 * t805 + t879, -t754 * t806 - t883, t755 * t633, -qJ(1) * (t754 * t798 + t709) - (pkin(1) * t754 - pkin(5) * t755) * t633, t741, t831, t832, 0, 0, 0, -t755 * t613, -t754 * t807 - t879, t754 * t808 + t883, t755 * t585 - t754 * t572 - qJ(1) * (t754 * t799 + t709), t651 * t755 - t678 * t754, t629 * t755 - t666 * t754, t648 * t755 - t681 * t754, t652 * t755 + t677 * t754, t647 * t755 - t682 * t754, t755 * t692, t755 * t521 - t754 * t553 - qJ(1) * (t639 * t754 - t685 * t755), t755 * t522 - t754 * t554 - qJ(1) * (t640 * t754 - t686 * t755), t546 * t755 - t754 * t809, t755 * t499 - t754 * t506 - qJ(1) * (t558 * t754 - t578 * t755), t538 * t755 - t549 * t754, t514 * t755 - t515 * t754, t533 * t755 - t568 * t754, t537 * t755 - t547 * t754, t532 * t755 - t569 * t754, t575 * t755 - t583 * t754, t755 * t486 - t754 * t489 - qJ(1) * (t525 * t754 - t544 * t755), t755 * t488 - t754 * t490 - qJ(1) * (t528 * t754 - t566 * t755), t755 * t480 - t754 * t482 - qJ(1) * (t508 * t754 - t518 * t755), t755 * t477 - t754 * t479 - qJ(1) * (t493 * t754 - t498 * t755); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t830, -t833, t796, qJ(1) * t796, 0, 0, -t834, 0, -t835, -t821, -t755 * t805 + t880, t755 * t806 - t884, t754 * t633, qJ(1) * (t755 * t798 - t845) - (-pkin(1) * t755 - pkin(5) * t754) * t633, -t821, t834, t835, 0, 0, 0, -t754 * t613, t755 * t807 - t880, -t755 * t808 + t884, t754 * t585 + t755 * t572 + qJ(1) * (t755 * t799 - t845), t651 * t754 + t678 * t755, t629 * t754 + t666 * t755, t648 * t754 + t681 * t755, t652 * t754 - t677 * t755, t647 * t754 + t682 * t755, t754 * t692, t754 * t521 + t755 * t553 + qJ(1) * (t639 * t755 + t685 * t754), t754 * t522 + t755 * t554 + qJ(1) * (t640 * t755 + t686 * t754), t546 * t754 + t755 * t809, t754 * t499 + t755 * t506 + qJ(1) * (t558 * t755 + t578 * t754), t538 * t754 + t549 * t755, t514 * t754 + t515 * t755, t533 * t754 + t568 * t755, t537 * t754 + t547 * t755, t532 * t754 + t569 * t755, t575 * t754 + t583 * t755, t754 * t486 + t755 * t489 + qJ(1) * (t525 * t755 + t544 * t754), t754 * t488 + t755 * t490 + qJ(1) * (t528 * t755 + t566 * t754), t754 * t480 + t755 * t482 + qJ(1) * (t508 * t755 + t518 * t754), t754 * t477 + t755 * t479 + qJ(1) * (t493 * t755 + t498 * t754); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t727, t728, 0, 0, 0, 0, t723, 0, -t724, 0, t811, t672, t798, t620, 0, -t723, t724, 0, 0, 0, t799, -t811, -t672, t576, t649, t628, t646, t650, t645, t691, t519, t520, t545, t495, t536, t513, t531, t535, t530, t574, t483, t487, t478, t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t752, -t727, 0, 0, 0, -t724, 0, -t723, 0, t672, -t811, t633, pkin(5) * t633, 0, t724, t723, 0, 0, 0, -t613, -t672, t811, t585, t651, t629, t648, t652, t647, t692, t521, t522, t546, t499, t538, t514, t533, t537, t532, t575, t486, t488, t480, t477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t752, 0, -t728, 0, 0, 0, 0, 0, 0, -qJDD(2), t662, t661, 0, pkin(1) * t633, -qJDD(2), 0, 0, 0, 0, 0, 0, t642, t641, t572, t678, t666, t681, -t677, t682, 0, t553, t554, t539, t506, t549, t515, t568, t547, t569, t583, t489, t490, t482, t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t727, t728, 0, 0, 0, 0, t723, 0, -t724, 0, t811, t672, t798, t620, 0, -t723, t724, 0, 0, 0, t799, -t811, -t672, t576, t649, t628, t646, t650, t645, t691, t519, t520, t545, t495, t536, t513, t531, t535, t530, t574, t483, t487, t478, t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t765, 0, 0, -t727, t695, 0, 0, -qJDD(2), t765, 0, 0, 0, t668, 0, t727, qJ(3) * t727, t736, t726, t742, -t736, -t820, qJDD(4), t581, t582, -t860, t529, -t848, t660, t606, t848, -t602, t747, t500, t502, t494, t484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t765, 0, qJDD(2), 0, t727, 0, t696, 0, 0, -t765, -qJDD(2), 0, 0, 0, t667, -t727, 0, pkin(2) * t727, -t690, -t665, -t683, -t689, -t679, t715, t580, t579, -t573, t523, -t550, -t516, -t570, -t548, -t571, -t584, t491, t496, t485, t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t695, -t696, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t782, t766, t789, -t678, -t666, -t681, t677, -t682, 0, t869, t868, t867, t870, -t549, -t515, -t568, -t547, -t569, -t583, t872, t871, t873, t874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t668, t667, 0, -t678, -t666, -t681, t677, -t682, 0, -pkin(6) * t680 + t849, -pkin(6) * t684 + t643, pkin(6) * t722 - t876, -pkin(6) * t876, -t549, -t515, -t568, -t547, -t569, -t583, -pkin(6) * t543 - t802, -pkin(6) * t565 - t801, -pkin(6) * t517 - t803, -pkin(6) * t497 - t784; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t765, 0, 0, 0, -t668, 0, -t727, 0, -t736, -t726, -t742, t736, t820, -qJDD(4), t783, t791, t860, -t862, t848, -t660, -t606, -t848, t602, -t747, t774, t768, t812, t813; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t765, qJDD(2), 0, 0, 0, -t667, t727, 0, 0, t690, t665, t683, t689, t679, -t715, pkin(6) * t685 - t788, pkin(6) * t686 - t787, t573, pkin(6) * t578 - t861, t550, t516, t570, t548, t571, t584, pkin(6) * t544 - t772, pkin(6) * t566 - t771, pkin(6) * t518 - t773, pkin(6) * t498 - t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t717, -t716, t730, t815, t732, -t815, 0, t659, t623, 0, t598, t562, t618, t596, t619, t636, t552, t567, t504, -pkin(7) * t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t814, t718, t734, -t775, t729, -t814, -t659, 0, t624, 0, t597, t560, t616, t595, t617, t635, t526, t534, t501, t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t736, t726, t742, -t736, -t820, qJDD(4), -t623, -t624, 0, 0, -t848, t660, t606, t848, -t602, t747, t790, t777, t559, t510; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t627, -t601, t877, -t840, t693, t840, 0, t611, t541, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t698, t878, t694, -t776, t654, -t698, -t611, 0, t542, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t848, t660, t606, t848, -t602, t747, -t541, -t542, 0, 0;];
m_new_reg = t1;
