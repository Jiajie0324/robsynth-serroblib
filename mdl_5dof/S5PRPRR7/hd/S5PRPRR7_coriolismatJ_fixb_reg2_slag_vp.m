% Calculate inertial parameters regressor of coriolis matrix for
% S5PRPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:01
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRPRR7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPRR7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPRR7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRPRR7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:00:52
% EndTime: 2019-12-05 16:00:56
% DurationCPUTime: 1.58s
% Computational Cost: add. (2127->125), mult. (4360->176), div. (0->0), fcn. (4622->6), ass. (0->100)
t177 = qJD(4) + qJD(5);
t151 = sin(qJ(4));
t156 = -pkin(2) - pkin(6);
t229 = -pkin(7) + t156;
t128 = t229 * t151;
t150 = sin(qJ(5));
t153 = cos(qJ(5));
t154 = cos(qJ(4));
t168 = t229 * t154;
t165 = t128 * t150 - t153 * t168;
t197 = t153 * t151;
t199 = t150 * t154;
t125 = t197 + t199;
t152 = sin(qJ(2));
t158 = -t197 / 0.2e1 - t199 / 0.2e1;
t77 = (t125 / 0.2e1 + t158) * t152;
t190 = t77 * qJD(1);
t231 = t165 * t177 - t190;
t97 = t153 * t128 + t150 * t168;
t230 = t177 * t97;
t196 = t153 * t154;
t200 = t150 * t151;
t127 = t196 - t200;
t94 = t177 * t127;
t228 = t125 * t94;
t207 = qJD(4) * pkin(4);
t227 = (t125 * t153 - t127 * t150) * t207;
t148 = t151 ^ 2;
t149 = t154 ^ 2;
t189 = t148 + t149;
t139 = pkin(4) * t151 + qJ(3);
t183 = t139 * qJD(2);
t159 = -t200 / 0.2e1 + t196 / 0.2e1;
t76 = (-t127 / 0.2e1 + t159) * t152;
t191 = t76 * qJD(1);
t226 = -t127 * t183 + t191;
t220 = pkin(4) * t154;
t74 = t125 * t220 + t127 * t139;
t225 = -qJD(2) * t74 + t191;
t221 = t152 / 0.2e1;
t210 = pkin(4) * qJD(5);
t112 = t152 * t127;
t202 = t112 * t127;
t114 = t152 * t125;
t201 = t114 * t125;
t198 = t152 * t154;
t155 = cos(qJ(2));
t113 = t127 * t155;
t115 = t125 * t155;
t141 = t152 * t155;
t33 = -t112 * t113 - t114 * t115 + t141;
t195 = t33 * qJD(1);
t64 = t125 ^ 2 - t127 ^ 2;
t194 = t64 * qJD(2);
t75 = -t125 * t139 + t127 * t220;
t192 = t75 * qJD(2);
t188 = qJD(5) * t139;
t166 = t152 * t189;
t105 = t155 * t166 - t141;
t187 = t105 * qJD(1);
t186 = t125 * qJD(2);
t185 = t127 * qJD(2);
t135 = t148 - t149;
t184 = t135 * qJD(2);
t182 = t151 * qJD(2);
t181 = t151 * qJD(4);
t142 = t152 * qJD(2);
t180 = t154 * qJD(2);
t179 = t154 * qJD(4);
t178 = t155 * qJD(2);
t174 = qJ(3) * t182;
t173 = qJ(3) * t180;
t172 = t125 * t185;
t171 = t125 * t183;
t169 = t151 * t179;
t167 = pkin(4) * t177;
t117 = (0.1e1 / 0.2e1 - t148 / 0.2e1 - t149 / 0.2e1) * t152;
t146 = qJD(2) * qJ(3);
t164 = qJD(1) * t117 + t146;
t161 = -t202 / 0.2e1 - t201 / 0.2e1;
t42 = t221 + t161;
t162 = -qJD(1) * t42 - t183;
t160 = t114 * t150 / 0.2e1 + t112 * t153 / 0.2e1;
t1 = (-t198 / 0.2e1 + t160) * pkin(4);
t26 = t139 * t220;
t157 = -t1 * qJD(1) + t26 * qJD(2);
t147 = qJ(3) * qJD(3);
t143 = t155 * qJ(3);
t138 = t151 * t180;
t116 = (0.1e1 + t189) * t221;
t93 = t177 * t125;
t79 = t127 * t221 + t152 * t159;
t78 = (-t125 / 0.2e1 + t158) * t152;
t67 = t77 * qJD(2);
t65 = t76 * qJD(2);
t41 = t221 - t161;
t35 = t79 * qJD(2) + t115 * t177;
t34 = t78 * qJD(2) + t113 * t177;
t2 = (t198 / 0.2e1 + t160) * pkin(4);
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, -t178, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, t178, (-pkin(2) * t152 + t143) * qJD(2) + t152 * qJD(3), 0, 0, 0, 0, 0, 0, t151 * t178 + t152 * t179, -t152 * t181 + t154 * t178, -t189 * t142, -t187 + (t156 * t166 + t143) * qJD(2) + t116 * qJD(3), 0, 0, 0, 0, 0, 0, t125 * t178 + t177 * t79, t127 * t178 + t177 * t78, (-t201 - t202) * qJD(2), t195 + (-t112 * t165 + t114 * t97 + t139 * t155) * qJD(2) + t41 * qJD(3) + t2 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152 * t180 + t155 * t181, -t142 * t151 + t155 * t179, 0, 0, 0, 0, 0, 0, 0, 0, t35, t34, 0, t2 * qJD(2) + (-t113 * t150 + t115 * t153) * t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, t34, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t117 + t187, 0, 0, 0, 0, 0, 0, -t177 * t76, -t177 * t77, 0, qJD(3) * t42 - qJD(4) * t1 - t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t147, -t169, t135 * qJD(4), 0, t169, 0, 0, qJ(3) * t179 + qJD(3) * t151, -qJ(3) * t181 + qJD(3) * t154, 0, t147, -t228, t177 * t64, 0, t228, 0, 0, qJD(3) * t125 + qJD(4) * t74 + t127 * t188, qJD(3) * t127 + qJD(4) * t75 - t125 * t188, 0, qJD(3) * t139 + qJD(4) * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t146, 0, 0, 0, 0, 0, 0, t182, t180, 0, t164, 0, 0, 0, 0, 0, 0, t186, t185, 0, -t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t138, t184, -t181, t138, -t179, 0, -t156 * t181 + t173, -t156 * t179 - t174, 0, 0, -t172, t194, -t93, t172, -t94, 0, -t225 - t230, t192 + t231, t227, (-t150 * t165 - t153 * t97) * t207 + t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, t194, -t93, t172, -t94, 0, -t226 - t230, -t171 + t231, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t117 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t146, 0, 0, 0, 0, 0, 0, -t182, -t180, 0, -t164, 0, 0, 0, 0, 0, 0, -t186, -t185, 0, t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t181, -t179, 0, 0, 0, 0, 0, 0, 0, 0, -t93, -t94, 0, -t227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t93, -t94, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, t67, 0, qJD(2) * t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, -t184, 0, -t138, 0, 0, -t173, t174, 0, 0, t172, -t194, 0, -t172, 0, 0, t225, t190 - t192, 0, -t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150 * t210, -t153 * t210, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150 * t167, -t153 * t167, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t65, t67, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, -t194, 0, -t172, 0, 0, t226, t190 + t171, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150 * t207, t153 * t207, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
