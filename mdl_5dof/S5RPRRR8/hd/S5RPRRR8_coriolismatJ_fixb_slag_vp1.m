% Calculate matrix of centrifugal and coriolis load on the joints for
% S5RPRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% Cq [5x5]
%   matrix of coriolis and centrifugal joint torques.
%   Gives coriolis joint torques when multiplied with joint velocities

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:06
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Cq = S5RPRRR8_coriolismatJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR8_coriolismatJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR8_coriolismatJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRR8_coriolismatJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RPRRR8_coriolismatJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RPRRR8_coriolismatJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RPRRR8_coriolismatJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolismat_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:05:44
% EndTime: 2019-12-31 19:06:02
% DurationCPUTime: 14.32s
% Computational Cost: add. (36511->570), mult. (58828->727), div. (0->0), fcn. (70174->8), ass. (0->397)
t726 = sin(qJ(3));
t727 = sin(qJ(1));
t728 = cos(qJ(3));
t729 = cos(qJ(1));
t450 = t729 * t726 - t727 * t728;
t449 = -t727 * t726 - t729 * t728;
t470 = sin(qJ(4));
t471 = cos(qJ(4));
t672 = Icges(5,4) * t471;
t516 = -Icges(5,2) * t470 + t672;
t345 = Icges(5,6) * t449 + t516 * t450;
t673 = Icges(5,4) * t470;
t520 = Icges(5,1) * t471 - t673;
t349 = Icges(5,5) * t449 + t520 * t450;
t819 = t345 * t471 + t349 * t470;
t649 = t819 * t450;
t344 = -Icges(5,6) * t450 + t516 * t449;
t348 = -Icges(5,5) * t450 + t520 * t449;
t820 = t344 * t471 + t348 * t470;
t852 = t820 * t449;
t856 = t649 / 0.2e1 - t852 / 0.2e1;
t199 = t852 / 0.2e1;
t665 = Icges(5,2) * t471;
t515 = t665 + t673;
t497 = t470 * t515;
t519 = Icges(5,1) * t470 + t672;
t611 = t471 * t519;
t846 = -t470 / 0.2e1;
t802 = t497 / 0.2e1 + t520 * t846 - t471 * t516 / 0.2e1 - t611 / 0.2e1;
t855 = t199 + t802 + t856;
t854 = -t852 / 0.4e1;
t469 = qJ(4) + qJ(5);
t466 = sin(t469);
t467 = cos(t469);
t445 = -rSges(6,1) * t466 - rSges(6,2) * t467;
t377 = t450 * t445;
t625 = t450 * t470;
t359 = pkin(4) * t625 - t377;
t691 = pkin(4) * t470;
t543 = -t445 + t691;
t810 = t543 * t450;
t853 = m(6) * (t359 - t810);
t670 = Icges(6,4) * t467;
t514 = -Icges(6,2) * t466 + t670;
t326 = -Icges(6,6) * t450 + t514 * t449;
t671 = Icges(6,4) * t466;
t518 = Icges(6,1) * t467 - t671;
t330 = -Icges(6,5) * t450 + t518 * t449;
t843 = (t326 * t467 + t330 * t466) * t449;
t327 = Icges(6,6) * t449 + t514 * t450;
t331 = Icges(6,5) * t449 + t518 * t450;
t844 = (t327 * t467 + t331 * t466) * t450;
t849 = t844 / 0.2e1 - t843 / 0.2e1;
t422 = rSges(5,2) * t625;
t434 = t449 * rSges(5,3);
t538 = -t422 + t434;
t685 = rSges(5,1) * t471;
t545 = pkin(3) + t685;
t689 = t449 * pkin(7);
t277 = -t545 * t450 - t538 - t689;
t529 = -t727 * pkin(1) + t729 * qJ(2);
t491 = -t727 * pkin(2) + t529;
t253 = -t277 + t491;
t688 = t450 * pkin(7);
t633 = t449 * t470;
t807 = rSges(5,2) * t633 + t450 * rSges(5,3);
t275 = t545 * t449 - t688 - t807;
t496 = t729 * pkin(1) + t727 * qJ(2);
t483 = t729 * pkin(2) + t496;
t254 = t483 - t275;
t458 = -rSges(5,1) * t470 - rSges(5,2) * t471;
t386 = t450 * t458;
t387 = t458 * t449;
t690 = pkin(4) * t471;
t465 = pkin(3) + t690;
t684 = rSges(6,1) * t467;
t539 = t465 + t684;
t682 = rSges(6,2) * t466;
t571 = t449 * t682;
t472 = -pkin(8) - pkin(7);
t674 = rSges(6,3) - t472;
t266 = t539 * t449 - t674 * t450 - t571;
t239 = t483 - t266;
t606 = t239 - t266;
t416 = t450 * t682;
t268 = -t674 * t449 - t539 * t450 + t416;
t238 = -t268 + t491;
t609 = -t238 + t268;
t756 = m(6) / 0.2e1;
t757 = m(5) / 0.2e1;
t811 = t543 * t449;
t851 = t802 + (-t606 * t811 - t609 * t810) * t756 + ((t254 - t275) * t387 + (-t253 + t277) * t386) * t757;
t848 = -t843 / 0.4e1 + t844 / 0.4e1;
t847 = -t450 / 0.4e1;
t664 = Icges(6,2) * t467;
t513 = t664 + t671;
t498 = t466 * t513;
t517 = Icges(6,1) * t466 + t670;
t618 = t467 * t517;
t784 = t498 - t618;
t509 = Icges(6,5) * t466 + Icges(6,6) * t467;
t815 = t509 * t450;
t837 = t449 * (t784 * t449 + t815);
t551 = -t837 / 0.4e1;
t479 = (-t518 + t664) * t467 + (t514 + t517 + t670) * t466;
t587 = t513 * t449 - t330;
t588 = -t513 * t450 + t331;
t589 = -t517 * t449 - t326;
t590 = -t517 * t450 - t327;
t730 = t450 / 0.2e1;
t733 = -t449 / 0.2e1;
t510 = Icges(6,5) * t467 - Icges(6,6) * t466;
t813 = t510 * t450;
t324 = -Icges(6,3) * t449 - t813;
t626 = t450 * t467;
t599 = t449 * t324 - t331 * t626;
t623 = t327 * t466;
t131 = -t450 * t623 - t599;
t814 = t510 * t449;
t325 = Icges(6,3) * t450 - t814;
t620 = t330 * t467;
t598 = -t449 * t325 + t450 * t620;
t622 = t326 * t466;
t132 = -t450 * t622 + t598;
t634 = t449 * t467;
t836 = t450 * t324;
t597 = t331 * t634 + t836;
t133 = -t449 * t623 + t597;
t835 = t450 * t325;
t596 = t449 * t620 + t835;
t134 = -t449 * t622 + t596;
t818 = t449 / 0.2e1;
t777 = (-t131 * t449 + t132 * t450) * t730 + (-t133 * t449 + t134 * t450) * t818;
t817 = -t450 / 0.2e1;
t842 = t777 - (t449 * t479 + t813) * t817 - (t450 * t479 - t814) * t818 - (t589 * t466 - t587 * t467) * t730 - (t590 * t466 + t588 * t467) * t733;
t378 = t449 * t445;
t695 = m(6) * (t727 * t377 + t378 * t729);
t264 = t695 / 0.2e1;
t809 = -t449 * t729 - t450 * t727;
t816 = m(6) * t445;
t693 = t809 * t816;
t569 = t693 / 0.2e1;
t827 = t264 + t569;
t841 = qJD(5) * t827;
t572 = t827 * qJD(2);
t759 = m(4) / 0.2e1;
t247 = t729 * t268;
t778 = t266 * t727 + t247;
t273 = t729 * t277;
t779 = t275 * t727 + t273;
t393 = t449 * rSges(4,1) + t450 * rSges(4,2);
t521 = -t450 * rSges(4,1) + t449 * rSges(4,2);
t780 = t393 * t727 + t729 * t521;
t562 = t778 * t756 + t779 * t757 + t780 * t759;
t840 = m(6) * (t266 * t378 - t268 * t377);
t839 = t238 * t810;
t838 = t331 * t467;
t616 = t344 * t470;
t617 = t345 * t470;
t613 = t348 * t471;
t614 = t349 * t471;
t512 = Icges(5,5) * t471 - Icges(5,6) * t470;
t342 = -Icges(5,3) * t449 - t512 * t450;
t834 = t450 * t342;
t343 = Icges(5,3) * t450 - t512 * t449;
t833 = t450 * t343;
t832 = t727 * t810;
t831 = t729 * t811;
t826 = -t238 * t266 + t239 * t268;
t825 = -t253 * t275 + t254 * t277;
t595 = t449 * t342 - t450 * t614;
t787 = -t343 - t617;
t824 = -t787 * t450 + t595;
t789 = -t325 - t623;
t823 = -t789 * t450 + t599;
t372 = t509 * t449;
t793 = t450 * (t784 * t450 - t372);
t547 = -t793 / 0.4e1;
t705 = m(5) * t458;
t511 = Icges(5,5) * t470 + Icges(5,6) * t471;
t381 = t511 * t449;
t812 = t511 * t450;
t447 = t450 ^ 2;
t448 = t449 ^ 2;
t786 = t447 + t448;
t563 = -m(6) * t778 / 0.2e1 - m(5) * t779 / 0.2e1 - m(4) * t780 / 0.2e1;
t334 = rSges(6,1) * t626 + t449 * rSges(6,3) - t416;
t424 = t449 * t472;
t267 = -t450 * t465 - t334 + t424;
t421 = t450 * t685;
t577 = t421 + t434;
t683 = rSges(5,2) * t470;
t276 = (-pkin(3) + t683) * t450 - t689 - t577;
t568 = (-t276 * t729 + t273) * t757 + (-t267 * t729 + t247) * t756;
t808 = t563 - t568;
t806 = t569 - t695 / 0.2e1;
t367 = -t393 + t483;
t478 = t491 - t521;
t804 = t367 * t521 - t478 * t393;
t785 = t497 - t611;
t280 = t785 * t449 + t812;
t362 = -pkin(4) * t633 + t378;
t582 = t811 + t362;
t602 = t267 - t268;
t600 = t276 - t277;
t797 = m(5) * t600;
t801 = t854 + (t266 * t582 + t602 * t359) * t756 - t386 * t797 / 0.2e1;
t607 = t239 + t266;
t800 = -t649 / 0.4e1 + (t268 * t359 + t607 * t362 + t839) * t756 + ((-t253 - t277) * t450 + (t254 + t275) * t449) * t705 / 0.2e1;
t799 = t512 / 0.2e1;
t798 = t471 / 0.2e1;
t796 = m(6) * t602;
t299 = t450 * t334;
t687 = pkin(3) - t465;
t308 = t687 * t450 + t424 + t689;
t336 = -rSges(6,1) * t634 + t450 * rSges(6,3) + t571;
t118 = t308 * t450 + (t687 * t449 - t450 * t472 + t336 - t688) * t449 - t299;
t235 = -t450 * t377 - t378 * t449;
t446 = t682 - t684;
t640 = t446 * t450;
t641 = t446 * t449;
t487 = t587 * t466 + t589 * t467;
t488 = t588 * t466 - t590 * t467;
t686 = (t447 * t372 + (t488 * t449 + (-t815 + t487) * t450) * t449) * t730 + (t448 * t815 + (t487 * t450 + (-t372 + t488) * t449) * t450) * t733;
t17 = t686 + m(6) * (t118 * t235 - t359 * t640 + t362 * t641);
t795 = t17 * qJD(5);
t794 = (t377 * t449 - t378 * t450) * t445;
t791 = (-t449 * t810 + t450 * t811) * t445;
t790 = -t324 + t622;
t788 = -t342 + t616;
t549 = t793 / 0.4e1;
t783 = t547 + t549;
t553 = t837 / 0.4e1;
t781 = t551 + t553;
t85 = (-t326 * t450 - t327 * t449) * t466 + t597 + t598;
t775 = ((-t133 + t85) * t450 + (-t134 + (t620 - t622) * t449 + t823) * t449) * t730 + ((-t131 - t823) * t450 + (-t132 + (t789 + t838) * t449 + t836) * t449) * t733;
t774 = ((t133 + (t790 - t620) * t450) * t450 + (t790 * t449 + t134 - t596 + t835) * t449) * t730 + ((t131 + (-t838 + t623) * t450 + t596) * t450 + (-t450 * t790 + t132 - t85) * t449) * t733;
t473 = (-t831 - t832) * t756 + (t727 * t386 + t387 * t729) * t757;
t771 = t547 + t848;
t770 = t551 - t848;
t281 = t785 * t450 - t381;
t629 = t450 * t281;
t769 = -t629 / 0.4e1 + t800 - (-t820 + t280) * t449 / 0.4e1;
t636 = t449 * t280;
t768 = -t636 / 0.4e1 + t801 + (-t819 + t281) * t847;
t532 = t498 / 0.2e1 - t466 * t518 / 0.2e1 - t467 * t514 / 0.2e1 - t618 / 0.2e1;
t546 = t629 / 0.4e1;
t550 = t636 / 0.4e1;
t765 = t546 + t550 + t851;
t764 = 2 * qJD(1);
t763 = 4 * qJD(1);
t762 = 2 * qJD(3);
t761 = 4 * qJD(3);
t760 = 4 * qJD(4);
t139 = -t450 * t617 - t595;
t594 = -t449 * t343 + t450 * t613;
t140 = -t450 * t616 + t594;
t87 = -t139 * t449 + t140 * t450;
t755 = t87 / 0.2e1;
t592 = t449 * t614 + t834;
t141 = -t449 * t617 + t592;
t591 = t449 * t613 + t833;
t142 = -t449 * t616 + t591;
t88 = -t141 * t449 + t142 * t450;
t754 = t88 / 0.2e1;
t116 = (-t450 * pkin(3) - t267 + t308 - t334 - t689) * t449;
t168 = t336 * t449 - t299;
t750 = m(6) * (t116 * t168 - t582 * t377);
t749 = t378 * t853;
t748 = m(6) * (t116 * t118 + t582 * t359);
t747 = t362 * t853;
t743 = m(6) * (t609 * t377 + t606 * t378);
t741 = ((-t238 - t268) * t450 + t607 * t449) * t816;
t740 = t377 * t796;
t506 = -t359 * t378 - t362 * t377;
t525 = -t238 * t641 - t239 * t640;
t739 = m(6) * (t506 + t525);
t738 = m(6) * (t525 - t791);
t524 = -t266 * t640 - t268 * t641;
t737 = m(6) * (-t506 + t524);
t736 = m(6) * (t524 + t791);
t735 = m(6) * t826;
t725 = m(3) * ((t729 * rSges(3,3) + t529) * t729 + (t727 * rSges(3,3) + t496) * t727);
t724 = m(4) * t804;
t721 = m(4) * (t367 * t727 + t478 * t729);
t718 = m(5) * t825;
t352 = -t538 - t421;
t189 = t352 * t450 + (-t449 * t685 + t807) * t449;
t716 = m(5) * t189 * (t352 - t422 + t577) * t449;
t714 = t275 * t797;
t713 = m(5) * (t253 * t386 - t254 * t387);
t712 = m(5) * (t275 * t387 - t277 * t386);
t244 = t253 * t729;
t711 = m(5) * (t254 * t727 + t244);
t706 = t809 * t705;
t704 = t266 * t796;
t703 = m(6) * (t239 * t811 - t839);
t702 = m(6) * (-t266 * t811 + t268 * t810);
t236 = t238 * t729;
t701 = m(6) * (t239 * t727 + t236);
t355 = t362 * t729;
t700 = m(6) * (-t355 - t831);
t696 = m(6) * (t359 * t727 - t355);
t494 = -t727 * t449 + t729 * t450;
t692 = m(6) * t494 * t446;
t644 = t386 * t458;
t643 = t387 * t458;
t610 = t700 / 0.2e1;
t240 = -t267 + t491;
t608 = t238 - t240;
t319 = t706 / 0.2e1;
t605 = t696 / 0.2e1 + t319;
t255 = -t276 + t491;
t604 = t253 - t255;
t586 = -t519 * t450 - t345;
t585 = -t519 * t449 - t344;
t584 = -t515 * t450 + t349;
t583 = t515 * t449 - t348;
t575 = qJD(4) * t449;
t574 = qJD(4) * t450;
t476 = t319 + (-t355 + t832) * t756;
t101 = t473 + t476;
t573 = t101 * qJD(2);
t542 = -t446 + t690;
t541 = t774 + t777;
t540 = t775 - t777;
t531 = t750 / 0.2e1 + t541;
t530 = t749 / 0.2e1 + t540;
t480 = (-t520 + t665) * t471 + (t516 + t519 + t672) * t470;
t527 = t586 * t470 / 0.2e1 + t584 * t798 + t449 * t799 + t480 * t817 + t754;
t526 = t450 * t799 + t480 * t818 + t583 * t798 + t585 * t846 + t755;
t508 = t359 * t811 + t362 * t810;
t502 = t553 + t770 + t783;
t501 = t549 + t771 + t781;
t500 = t532 + t849;
t499 = t532 - t849;
t493 = -t774 - t842;
t492 = -t775 + t842;
t490 = -t532 - t802;
t486 = t584 * t470 - t586 * t471;
t485 = t583 * t470 + t585 * t471;
t482 = t499 + t849;
t481 = t500 - t849;
t477 = t501 + t502 - t532;
t475 = t500 + t547 + t502 - t771 + t781;
t474 = t499 + t551 + t501 - t770 + t783;
t460 = t683 - t685;
t363 = t542 * t449;
t360 = t542 * t450;
t300 = qJD(5) * t692;
t195 = -t649 / 0.2e1;
t163 = t786 * t691 + t235;
t129 = t264 - t693 / 0.2e1;
t119 = t238 * t377 - t239 * t378;
t106 = -t532 + t840;
t102 = -t473 + t476;
t100 = m(6) * t119 - t532;
t96 = (-t344 * t450 - t345 * t449) * t470 + t592 + t594;
t92 = t736 / 0.2e1;
t91 = t737 / 0.2e1;
t83 = t738 / 0.2e1;
t82 = t739 / 0.2e1;
t68 = -t740 / 0.2e1;
t64 = t741 / 0.2e1;
t59 = t743 / 0.2e1;
t58 = t701 + t711 + t721 + t725;
t53 = t605 + t610 - t473;
t52 = -t696 / 0.2e1 - t706 / 0.2e1 + t473 + t610;
t51 = -t700 / 0.2e1 + t605 + t473;
t50 = t490 + t702 + t712;
t47 = t490 + t703 + t713;
t44 = t704 + t714;
t43 = t718 + t724 + t735;
t38 = (t139 + (-t614 + t617) * t450 + t591) * t450 + (-t450 * t788 + t140 - t96) * t449;
t37 = (-t141 + t96) * t450 + (-t142 + (t613 - t616) * t449 + t824) * t449;
t36 = (t141 + (t788 - t613) * t450) * t450 + (t788 * t449 + t142 - t591 + t833) * t449;
t35 = (-t139 - t824) * t450 + (-t140 + (t787 + t614) * t449 + t834) * t449;
t22 = m(6) * (t786 * t445 * t446 + t168 * t235) + t686;
t21 = t22 * qJD(5);
t20 = t562 - t808;
t19 = t563 + t568 - t562;
t18 = t562 + t808;
t16 = -t743 / 0.2e1 + t64 + t477 + t68;
t15 = t740 / 0.2e1 + t64 + t59 + t475;
t14 = -t741 / 0.2e1 + t59 + t68 + t474;
t11 = t91 - t736 / 0.2e1 + t530;
t10 = t92 - t737 / 0.2e1 + t530;
t9 = t82 - t738 / 0.2e1 + t531;
t8 = t83 - t739 / 0.2e1 + t531;
t7 = t768 + t477 + 0.2e1 * t550 + 0.2e1 * t546 + t769 - t851;
t6 = t819 * t847 + t475 + t765 + t769 - t801 + t856;
t5 = t199 + t195 + t854 + t474 + t765 + t768 - t800;
t4 = t91 + t92 - t749 / 0.2e1 + t492;
t3 = t82 + t83 - t750 / 0.2e1 + t493;
t2 = (t37 / 0.2e1 - t87 / 0.2e1) * t450 + (-t88 / 0.2e1 - t35 / 0.2e1) * t449 + t747 + t540;
t1 = (t36 / 0.2e1 + t755) * t450 + (t754 - t38 / 0.2e1) * t449 + t716 + t748 + t541;
t12 = [(-m(5) * t604 * t254 / 0.4e1 - m(6) * t608 * t239 / 0.4e1) * t763 + t58 * qJD(2) + t43 * qJD(3) + t47 * qJD(4) + t100 * qJD(5), qJD(1) * t58 + qJD(3) * t18 + qJD(4) * t51 + t841, t43 * qJD(1) + t18 * qJD(2) + t6 * qJD(4) + t15 * qJD(5) + (-t704 / 0.4e1 - t714 / 0.4e1) * t761 + (-t756 * t826 - t757 * t825 - t804 * t759) * t762, t47 * qJD(1) + t51 * qJD(2) + t6 * qJD(3) + (m(6) * (t238 * t363 + t239 * t360 + t508) + t493) * qJD(4) + t3 * qJD(5) + (-t716 / 0.4e1 - t748 / 0.4e1) * t760 + (-t36 / 0.2e1 + m(5) * (-t254 * t460 + t643) - t526) * t574 + (t38 / 0.2e1 + m(5) * (-t253 * t460 - t644) - t527) * t575, t100 * qJD(1) + t572 + t15 * qJD(3) + t3 * qJD(4) + ((t525 - t794) * m(6) + t493) * qJD(5); t19 * qJD(3) + t52 * qJD(4) + t129 * qJD(5) + (-t701 / 0.4e1 - t711 / 0.4e1 - t721 / 0.4e1 - t725 / 0.4e1) * t763 + ((-t729 * t240 + t236) * t756 + (-t729 * t255 + t244) * t757) * t764, 0, t19 * qJD(1) + t102 * qJD(4) + t806 * qJD(5) + t562 * t762, t52 * qJD(1) + t102 * qJD(3) + 0.2e1 * ((-t360 * t729 + t363 * t727) * t756 + t494 * t460 * t757) * qJD(4) + t300, t129 * qJD(1) + qJD(3) * t806 + qJD(4) * t692 + t300; t20 * qJD(2) + t44 * qJD(3) + t5 * qJD(4) + t14 * qJD(5) + (-t735 / 0.4e1 - t718 / 0.4e1 - t724 / 0.4e1) * t763 + ((t602 * t239 - t266 * t608) * t756 + (t600 * t254 - t275 * t604) * t757) * t764, qJD(1) * t20 - qJD(4) * t101 - t841, t44 * qJD(1) + t50 * qJD(4) + t106 * qJD(5), t5 * qJD(1) - t573 + t50 * qJD(3) + (m(6) * (t266 * t360 + t268 * t363 - t508) + t492) * qJD(4) + t4 * qJD(5) - t747 * t760 / 0.4e1 + (-t37 / 0.2e1 + m(5) * (-t275 * t460 - t643) + t526) * t574 + (t35 / 0.2e1 + m(5) * (-t277 * t460 + t644) + t527) * t575, t14 * qJD(1) - t572 + t106 * qJD(3) + t4 * qJD(4) + ((t524 + t794) * m(6) + t492) * qJD(5); t53 * qJD(2) + t7 * qJD(3) + t1 * qJD(4) + t9 * qJD(5) + (-t713 / 0.4e1 - t703 / 0.4e1) * t763 + (t481 + m(6) * (t582 * t239 - t608 * t359) + (-t819 / 0.2e1 + t604 * t705) * t450 + t855) * qJD(1), qJD(1) * t53 + qJD(3) * t101, t7 * qJD(1) + t573 + t2 * qJD(4) + t11 * qJD(5) + (-t702 / 0.4e1 - t712 / 0.4e1) * t761 + (-t268 * t853 + t195 + t482 + t855) * qJD(3), t1 * qJD(1) + t2 * qJD(3) + (m(5) * (t189 * (-t386 * t450 - t449 * t387) + t786 * t460 * t458) + (t447 * t381 + (t486 * t449 + (-t812 + t485) * t450) * t449) * t730 + (t448 * t812 + (t485 * t450 + (-t381 + t486) * t449) * t450) * t733 + m(6) * (t118 * t163 + t359 * t360 - t362 * t363) + t686) * qJD(4) + t795, t9 * qJD(1) + t11 * qJD(3) + t17 * qJD(4) + t795; (t481 + (t608 * t377 - t119) * m(6)) * qJD(1) + t806 * qJD(2) + t16 * qJD(3) + t8 * qJD(4) + t541 * qJD(5), qJD(1) * t806 + qJD(3) * t827, t16 * qJD(1) + t572 + (t482 - t840) * qJD(3) + t10 * qJD(4) + t540 * qJD(5), t8 * qJD(1) + t10 * qJD(3) + ((t163 * t168 + (-t360 * t450 - t363 * t449) * t445) * m(6) + t686) * qJD(4) + t21, qJD(1) * t541 + qJD(3) * t540 + qJD(4) * t22 + t21;];
Cq = t12;
