% Calculate inertial parameters regressor of coriolis matrix for
% S5PRRRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:08
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRRRR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRRRR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:08:04
% EndTime: 2019-12-05 17:08:08
% DurationCPUTime: 2.38s
% Computational Cost: add. (3648->198), mult. (7428->251), div. (0->0), fcn. (7161->6), ass. (0->159)
t244 = qJD(4) + qJD(5);
t199 = cos(qJ(3));
t274 = t199 * pkin(2);
t188 = -pkin(3) - t274;
t300 = pkin(3) / 0.2e1 - t188 / 0.2e1;
t196 = sin(qJ(4));
t286 = -pkin(8) - pkin(7);
t179 = t286 * t196;
t198 = cos(qJ(4));
t180 = t286 * t198;
t195 = sin(qJ(5));
t278 = cos(qJ(5));
t222 = -t278 * t179 - t195 * t180;
t299 = t244 * t222;
t197 = sin(qJ(3));
t275 = t197 * pkin(2);
t187 = pkin(7) + t275;
t273 = pkin(8) + t187;
t161 = t273 * t196;
t162 = t273 * t198;
t223 = t278 * t161 + t195 * t162;
t298 = t244 * t223;
t112 = -t195 * t161 + t278 * t162;
t297 = t244 * t112;
t127 = t195 * t179 - t278 * t180;
t296 = t244 * t127;
t238 = t278 * t196;
t258 = t195 * t198;
t168 = t238 + t258;
t138 = t168 * t274;
t295 = -t138 / 0.2e1;
t245 = qJD(2) + qJD(3);
t237 = t278 * t198;
t259 = t195 * t196;
t207 = t237 - t259;
t94 = -t168 ^ 2 + t207 ^ 2;
t294 = t245 * t94;
t293 = t244 * t207;
t193 = t196 ^ 2;
t194 = t198 ^ 2;
t184 = t194 - t193;
t292 = t245 * t184;
t291 = t245 * t168 * t207;
t239 = -t274 / 0.2e1;
t288 = t239 - t300;
t281 = -t127 / 0.2e1;
t229 = t281 + t127 / 0.2e1;
t282 = t222 / 0.2e1;
t230 = -t222 / 0.2e1 + t282;
t283 = -t112 / 0.2e1;
t231 = t283 + t112 / 0.2e1;
t284 = t223 / 0.2e1;
t232 = -t223 / 0.2e1 + t284;
t5 = (t229 + t231) * t168 - (-t230 - t232) * t207;
t285 = t5 * qJD(4);
t139 = t207 * t274;
t280 = t139 / 0.2e1;
t277 = pkin(4) * t195;
t276 = pkin(4) * t196;
t20 = t230 * t168 - t207 * t229;
t272 = t20 * qJD(4);
t268 = pkin(2) * qJD(2);
t267 = pkin(2) * qJD(3);
t266 = pkin(3) * qJD(3);
t265 = qJD(4) * pkin(4);
t189 = -t198 * pkin(4) - pkin(3);
t177 = t189 - t274;
t263 = t177 * t207;
t262 = t177 * t168;
t261 = t189 * t207;
t260 = t189 * t168;
t41 = t168 * t280 + t207 * t295;
t257 = t41 * qJD(2);
t42 = t138 * t168 + t139 * t207;
t256 = t42 * qJD(2);
t153 = t207 * t276;
t80 = -t153 + t262;
t255 = t80 * qJD(2);
t154 = t168 * t276;
t81 = t154 + t263;
t254 = t81 * qJD(2);
t253 = qJD(2) * t177;
t252 = qJD(2) * t188;
t251 = qJD(3) * t189;
t250 = qJD(5) * t207;
t224 = (t193 + t194) * t199;
t106 = (t187 * t224 + t188 * t197) * pkin(2);
t249 = t106 * qJD(2);
t160 = pkin(2) * t224;
t248 = t160 * qJD(2);
t247 = t168 * qJD(5);
t246 = t196 * qJD(4);
t192 = t198 * qJD(4);
t243 = (-t168 * t195 - t207 * t278) * t265;
t242 = t197 * t267;
t241 = t197 * t268;
t236 = t207 * t253;
t235 = t168 * t253;
t234 = t196 * t252;
t233 = t198 * t252;
t228 = t189 / 0.2e1 + t177 / 0.2e1;
t227 = t278 * qJD(4);
t226 = t278 * qJD(5);
t225 = pkin(2) * t245;
t119 = t244 * t168;
t221 = t207 * t241;
t220 = t168 * t241;
t219 = t196 * t241;
t218 = t197 * t225;
t217 = t5 * qJD(3);
t216 = t5 * qJD(2);
t11 = t232 * t168 - t207 * t231;
t21 = t177 * t276;
t215 = t11 * qJD(1) + t21 * qJD(2);
t25 = t112 * t139 + t138 * t223 + t177 * t275;
t214 = t41 * qJD(1) + t25 * qJD(2);
t213 = t11 * qJD(2) + t20 * qJD(3);
t103 = -t153 + t260;
t202 = (-t258 / 0.2e1 - t238 / 0.2e1) * t274;
t43 = -t228 * t168 + t202;
t35 = t153 + t43;
t212 = t35 * qJD(2) - t103 * qJD(3);
t104 = t154 + t261;
t201 = (-t237 / 0.2e1 + t259 / 0.2e1) * t274;
t44 = -t207 * t228 + t201;
t36 = -t154 + t44;
t211 = t36 * qJD(2) - t104 * qJD(3);
t210 = t239 + t300;
t132 = t210 * t196;
t209 = t132 * qJD(2) + t196 * t266;
t133 = t210 * t198;
t208 = t133 * qJD(2) + t198 * t266;
t206 = t44 * qJD(2) - t207 * t251;
t205 = t43 * qJD(2) - t168 * t251;
t204 = t195 * t280 + t278 * t295;
t26 = t189 * t276;
t200 = -t112 * t282 - t127 * t284 - t222 * t283 - t223 * t281;
t6 = (-t228 * t196 + t204) * pkin(4) + t200;
t203 = t20 * qJD(1) - t6 * qJD(2) + t26 * qJD(3);
t45 = t261 / 0.2e1 + t263 / 0.2e1 + t201;
t46 = t260 / 0.2e1 + t262 / 0.2e1 + t202;
t185 = t196 * t192;
t183 = t196 * t242;
t178 = t184 * qJD(4);
t157 = t245 * t198 * t196;
t155 = t160 * qJD(3);
t151 = t168 * t242;
t150 = t207 * t242;
t135 = t288 * t198;
t134 = t288 * t196;
t59 = t207 * t119;
t57 = t168 * t293;
t40 = t42 * qJD(3);
t38 = t154 + t45;
t37 = -t153 + t46;
t28 = t244 * t94;
t7 = t204 * pkin(4) - t200 + (t177 + t189) * t276 / 0.2e1;
t1 = t41 * qJD(3) + t11 * qJD(4);
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257 + t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t246, -t192, 0, 0, 0, 0, 0, 0, 0, 0, -t119, -t293, 0, (-t278 * t168 + t195 * t207) * t265 + t213; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, -t293, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t242, -t199 * t267, 0, 0, t185, t178, 0, -t185, 0, 0, t188 * t246 - t198 * t242, t188 * t192 + t183, t155, t106 * qJD(3), t59, t28, 0, -t57, 0, 0, t80 * qJD(4) + t177 * t247 - t150, t81 * qJD(4) + t177 * t250 + t151, t40, t25 * qJD(3) + t21 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218, -t199 * t225, 0, 0, t185, t178, 0, -t185, 0, 0, t134 * qJD(4) - t198 * t218, t135 * qJD(4) + t183 + t219, t155 + t248, t249 + (-pkin(3) * t197 + pkin(7) * t224) * t267, t59, t28, 0, -t57, 0, 0, t37 * qJD(4) + t46 * qJD(5) - t150 - t221, t38 * qJD(4) + t45 * qJD(5) + t151 + t220, t40 + t256 + t285, (t139 * t127 + t138 * t222 + t189 * t275) * qJD(3) + t7 * qJD(4) + t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, t292, t192, -t157, -t246, 0, t134 * qJD(3) - t187 * t192 + t234, t135 * qJD(3) + t187 * t246 + t233, 0, 0, t291, t294, t293, -t291, -t119, 0, t37 * qJD(3) + t255 - t297, t38 * qJD(3) + t254 + t298, t217 + t243, t7 * qJD(3) + (-t112 * t278 - t195 * t223) * t265 + t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, t294, t293, -t291, -t119, 0, t46 * qJD(3) + t235 - t297, t45 * qJD(3) + t236 + t298, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257 + t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, t199 * t268, 0, 0, t185, t178, 0, -t185, 0, 0, -t132 * qJD(4) + t198 * t241, -t133 * qJD(4) - t219, -t248, -t249, t59, t28, 0, -t57, 0, 0, -t35 * qJD(4) - t43 * qJD(5) + t221, -t36 * qJD(4) - t44 * qJD(5) - t220, -t256 + t285, -t6 * qJD(4) - t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, t178, 0, -t185, 0, 0, -pkin(3) * t246, -pkin(3) * t192, 0, 0, t59, t28, 0, -t57, 0, 0, t103 * qJD(4) + t189 * t247, t104 * qJD(4) + t189 * t250, 0, t26 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, t292, t192, -t157, -t246, 0, -pkin(7) * t192 - t209, pkin(7) * t246 - t208, 0, 0, t291, t294, t293, -t291, -t119, 0, -t212 - t296, -t211 + t299, t216 + t243, (-t127 * t278 - t195 * t222) * t265 + t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, t294, t293, -t291, -t119, 0, -t205 - t296, -t206 + t299, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t213; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t157, -t292, 0, t157, 0, 0, t132 * qJD(3) - t234, t133 * qJD(3) - t233, 0, 0, -t291, -t294, 0, t291, 0, 0, t35 * qJD(3) - t255, t36 * qJD(3) - t254, -t217, t6 * qJD(3) - t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t157, -t292, 0, t157, 0, 0, t209, t208, 0, 0, -t291, -t294, 0, t291, 0, 0, t212, t211, -t216, -t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t277, -pkin(4) * t226, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t244 * t277, (-t227 - t226) * pkin(4), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, -t294, 0, t291, 0, 0, t43 * qJD(3) - t235, t44 * qJD(3) - t236, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, -t294, 0, t291, 0, 0, t205, t206, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195 * t265, pkin(4) * t227, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t2;
