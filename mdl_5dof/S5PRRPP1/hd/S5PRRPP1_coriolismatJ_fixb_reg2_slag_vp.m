% Calculate inertial parameters regressor of coriolis matrix for
% S5PRRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,theta1,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:07
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRRPP1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRPP1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRPP1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRPP1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:07:01
% EndTime: 2019-12-05 16:07:04
% DurationCPUTime: 1.26s
% Computational Cost: add. (1161->111), mult. (2434->139), div. (0->0), fcn. (2602->4), ass. (0->83)
t138 = cos(pkin(8));
t93 = sin(pkin(8));
t94 = sin(qJ(3));
t95 = cos(qJ(3));
t78 = t138 * t94 + t93 * t95;
t150 = t78 ^ 2;
t76 = -t138 * t95 + t93 * t94;
t73 = t76 ^ 2;
t31 = t73 - t150;
t163 = t31 * qJD(2);
t162 = t31 * qJD(3);
t39 = t73 + t150;
t161 = t39 * qJD(2);
t160 = t39 * qJD(4);
t159 = qJ(4) + pkin(6);
t82 = t159 * t94;
t144 = t93 * t82;
t83 = t159 * t95;
t81 = t138 * t83;
t109 = t81 - t144;
t50 = t138 * t82 + t93 * t83;
t105 = -t109 * t76 + t50 * t78;
t153 = qJD(4) * t105;
t152 = t105 * qJD(2);
t107 = t81 / 0.2e1;
t149 = t78 * pkin(4);
t148 = t94 * pkin(3);
t147 = t76 * t93;
t86 = t93 * pkin(3) + qJ(5);
t146 = t86 * t76;
t88 = -t138 * pkin(3) - pkin(4);
t145 = t88 * t78;
t143 = qJD(3) * pkin(3);
t140 = t76 * qJ(5);
t89 = -t95 * pkin(3) - pkin(2);
t36 = t76 * pkin(4) - t78 * qJ(5) + t89;
t37 = t140 + t148 + t149;
t9 = t36 * t78 + t37 * t76;
t139 = t9 * qJD(2);
t137 = qJD(2) * t95;
t10 = t36 * t76 - t37 * t78;
t136 = t10 * qJD(2);
t90 = t148 / 0.2e1;
t17 = t90 + (pkin(4) / 0.2e1 - t88 / 0.2e1) * t78 + (qJ(5) / 0.2e1 + t86 / 0.2e1) * t76;
t131 = t17 * qJD(2);
t108 = t138 * t78;
t98 = -t147 / 0.2e1 - t108 / 0.2e1;
t24 = (-t94 / 0.2e1 + t98) * pkin(3);
t130 = t24 * qJD(2);
t34 = t76 * t148 + t89 * t78;
t127 = t34 * qJD(2);
t35 = t78 * t148 - t89 * t76;
t126 = t35 * qJD(2);
t123 = t50 * qJD(3);
t122 = t150 * qJD(2);
t121 = t76 * qJD(2);
t120 = t76 * qJD(3);
t119 = t76 * qJD(4);
t118 = t78 * qJD(2);
t117 = t78 * qJD(3);
t116 = t78 * qJD(5);
t84 = -t94 ^ 2 + t95 ^ 2;
t115 = t84 * qJD(2);
t114 = t94 * qJD(3);
t113 = t95 * qJD(3);
t112 = pkin(2) * t94 * qJD(2);
t111 = pkin(2) * t137;
t47 = t76 * t118;
t46 = t76 * t117;
t110 = t94 * t113;
t3 = t36 * t37;
t104 = t3 * qJD(2);
t8 = t89 * t148;
t103 = t8 * qJD(2);
t48 = t107 - t81 / 0.2e1;
t100 = t48 * qJD(2) + t86 * qJD(3);
t85 = t94 * t137;
t68 = t78 * qJD(4);
t38 = t109 * qJD(3);
t33 = 0.2e1 * t107 - t144;
t23 = t98 * pkin(3) + t90;
t18 = -t146 / 0.2e1 + t145 / 0.2e1 + t90 + t140 / 0.2e1 + t149 / 0.2e1;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t114, -t113, 0, 0, 0, 0, 0, 0, 0, 0, -t117, t120, 0, (-t108 - t147) * t143, 0, 0, 0, 0, 0, 0, -t117, 0, -t120, (t145 - t146) * qJD(3) + t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, t84 * qJD(3), 0, -t110, 0, 0, -pkin(2) * t114, -pkin(2) * t113, 0, 0, -t46, t162, 0, t46, 0, 0, t34 * qJD(3), t35 * qJD(3), t160, t8 * qJD(3) + t153, -t46, 0, -t162, 0, 0, t46, t9 * qJD(3) - t76 * t116, t160, t10 * qJD(3) + qJD(5) * t150, t3 * qJD(3) - t36 * t116 + t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, t115, t113, -t85, -t114, 0, -pkin(6) * t113 - t112, pkin(6) * t114 - t111, 0, 0, -t47, t163, -t120, t47, -t117, 0, -t38 + t127, t123 + t126, (t138 * t76 - t78 * t93) * t143, (-t109 * t138 - t50 * t93) * t143 + t23 * qJD(4) + t103, -t47, -t120, -t163, 0, t117, t47, -t38 + t139, (-t88 * t76 - t86 * t78) * qJD(3) - qJD(5) * t76, -t123 + t136, (t109 * t88 - t50 * t86) * qJD(3) + t18 * qJD(4) + t33 * qJD(5) + t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, t23 * qJD(3) + t152, 0, 0, 0, 0, 0, 0, 0, t161, 0, t18 * qJD(3) + t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, -t120, t122, t33 * qJD(3) - t36 * t118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, -t115, 0, t85, 0, 0, t112, t111, 0, 0, t47, -t163, 0, -t47, 0, 0, -t68 - t127, t119 - t126, 0, t24 * qJD(4) - t103, t47, 0, t163, 0, 0, -t47, -t68 - t139, 0, -t119 - t136, -t17 * qJD(4) + t48 * qJD(5) - t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t86 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, t121, 0, t130, 0, 0, 0, 0, 0, 0, -t118, 0, -t121, -t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, -t120, -t161, -t24 * qJD(3) - t152, 0, 0, 0, 0, 0, 0, t117, -t161, t120, t17 * qJD(3) - t116 - t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, -t121, 0, -t130, 0, 0, 0, 0, 0, 0, t118, 0, t121, t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, -t122, -t48 * qJD(3) + (qJD(2) * t36 + qJD(4)) * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
