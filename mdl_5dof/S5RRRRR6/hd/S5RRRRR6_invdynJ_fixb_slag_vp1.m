% Calculate vector of inverse dynamics joint torques for
% S5RRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4,d5]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 19:01
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRRRR6_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR6_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR6_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR6_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR6_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRR6_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRR6_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRR6_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRR6_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 19:00:03
% EndTime: 2019-12-05 19:00:31
% DurationCPUTime: 20.00s
% Computational Cost: add. (31810->938), mult. (22276->1127), div. (0->0), fcn. (17602->10), ass. (0->531)
t457 = qJD(3) + qJD(4);
t447 = qJD(5) + t457;
t461 = qJ(1) + qJ(2);
t451 = cos(t461);
t430 = qJDD(3) * t451;
t639 = qJDD(4) * t451 + t430;
t449 = sin(t461);
t458 = qJD(1) + qJD(2);
t693 = t449 * t458;
t187 = qJDD(5) * t451 - t447 * t693 + t639;
t224 = -t457 * t693 + t639;
t460 = qJ(3) + qJ(4);
t453 = qJ(5) + t460;
t441 = cos(t453);
t426 = t441 * rSges(6,1);
t440 = sin(t453);
t337 = -rSges(6,2) * t440 + t426;
t264 = t337 * t447;
t431 = qJD(4) * t451;
t432 = qJD(3) * t451;
t351 = t432 + t431;
t633 = qJD(5) * t451;
t296 = t633 + t351;
t336 = rSges(6,1) * t440 + rSges(6,2) * t441;
t448 = sin(t460);
t456 = qJDD(1) + qJDD(2);
t462 = sin(qJ(3));
t635 = qJD(3) * t462;
t606 = t449 * t635;
t401 = pkin(3) * t606;
t466 = -pkin(8) - pkin(7);
t683 = t458 * t466;
t645 = t449 * t683 + t401;
t464 = cos(qJ(3));
t455 = t464 * pkin(3);
t442 = t455 + pkin(2);
t759 = pkin(2) - t442;
t762 = pkin(7) * t449;
t180 = (t451 * t759 + t762) * t458 + t645;
t636 = qJD(3) * t458;
t315 = -t449 * t636 + t430;
t765 = pkin(2) * t451;
t362 = t762 + t765;
t463 = sin(qJ(1));
t465 = cos(qJ(1));
t468 = qJD(1) ^ 2;
t508 = (-qJDD(1) * t463 - t465 * t468) * pkin(1);
t760 = t451 * pkin(7);
t556 = -t449 * pkin(2) + t760;
t488 = -t458 ^ 2 * t362 + t456 * t556 + t508;
t758 = pkin(7) + t466;
t824 = t758 * t451;
t503 = t759 * t449 - t824;
t682 = t464 * qJD(3) ^ 2;
t474 = t458 * t180 + t456 * t503 + (-t315 * t462 - t451 * t682) * pkin(3) + t488;
t628 = pkin(3) * t635;
t763 = pkin(4) * t448;
t335 = -t457 * t763 - t628;
t459 = -pkin(9) + t466;
t684 = t458 * t459;
t568 = (-t335 + t684) * t449;
t450 = cos(t460);
t439 = pkin(4) * t450;
t383 = t439 + t442;
t646 = t383 - t442;
t687 = t451 * t458;
t125 = -t646 * t687 + t568 - t645;
t699 = t441 * t451;
t625 = rSges(6,1) * t699;
t525 = rSges(6,3) * t449 + t625;
t700 = t441 * t449;
t702 = t440 * t449;
t278 = rSges(6,1) * t702 + rSges(6,2) * t700;
t701 = t440 * t451;
t380 = rSges(6,2) * t701;
t612 = t278 * t447 + t458 * t380;
t141 = -t458 * t525 + t612;
t680 = t125 + t141;
t689 = t450 * t457;
t638 = t459 - t466;
t588 = t638 * t451;
t820 = rSges(6,2) * t702 + t451 * rSges(6,3);
t522 = -t820 + t588;
t589 = t383 + t426;
t559 = -t442 + t589;
t839 = t449 * t559 + t522;
t18 = -t187 * t336 - t296 * t264 + t680 * t458 - t839 * t456 + (-t224 * t448 - t351 * t689) * pkin(4) + t474;
t859 = g(3) - t18;
t690 = t450 * t451;
t624 = rSges(5,1) * t690;
t526 = rSges(5,3) * t449 + t624;
t697 = t448 * t449;
t393 = rSges(5,1) * t697;
t616 = t449 * t689;
t619 = t448 * t687;
t610 = t457 * t393 + (t616 + t619) * rSges(5,2);
t157 = -t458 * t526 + t610;
t435 = t450 * rSges(5,1);
t360 = -rSges(5,2) * t448 + t435;
t301 = t360 * t457;
t358 = rSges(5,1) * t448 + rSges(5,2) * t450;
t694 = t449 * t450;
t631 = rSges(5,1) * t694;
t819 = rSges(5,2) * t697 + t451 * rSges(5,3);
t533 = t631 - t819;
t40 = t458 * t157 - t224 * t358 - t351 * t301 - t456 * t533 + t474;
t852 = t40 - g(3);
t626 = rSges(6,1) * t700;
t713 = t336 * t451;
t611 = -t447 * t713 - t458 * t626;
t140 = t458 * t820 + t611;
t295 = t447 * t449;
t858 = t451 * t140 + t278 * t295 + t296 * t713;
t857 = t458 * t278 - t296 * t337 - t336 * t693;
t554 = rSges(3,1) * t449 + rSges(3,2) * t451;
t302 = t554 * t458;
t749 = pkin(1) * qJD(1);
t630 = t463 * t749;
t283 = t302 + t630;
t375 = Icges(6,4) * t702;
t239 = -Icges(6,1) * t700 + Icges(6,5) * t451 + t375;
t376 = Icges(6,4) * t701;
t240 = Icges(6,1) * t699 + Icges(6,5) * t449 - t376;
t425 = Icges(6,4) * t441;
t547 = -Icges(6,2) * t440 + t425;
t818 = Icges(6,1) * t440 + t425;
t831 = t818 + t547;
t480 = t295 * (-Icges(6,2) * t699 + t240 - t376) + t296 * (Icges(6,2) * t700 + t239 + t375) + t458 * t831;
t237 = Icges(6,6) * t451 - t449 * t547;
t238 = Icges(6,4) * t699 - Icges(6,2) * t701 + Icges(6,6) * t449;
t742 = Icges(6,4) * t440;
t330 = Icges(6,2) * t441 + t742;
t333 = Icges(6,1) * t441 - t742;
t789 = t295 * (t451 * t818 + t238) + t296 * (-t449 * t818 + t237) + t458 * (t330 - t333);
t856 = t480 * t440 + t441 * t789;
t389 = Icges(5,4) * t697;
t251 = -Icges(5,1) * t694 + Icges(5,5) * t451 + t389;
t696 = t448 * t451;
t390 = Icges(5,4) * t696;
t252 = Icges(5,1) * t690 + Icges(5,5) * t449 - t390;
t350 = t449 * t457;
t433 = Icges(5,4) * t450;
t548 = -Icges(5,2) * t448 + t433;
t817 = Icges(5,1) * t448 + t433;
t832 = t817 + t548;
t478 = t350 * (-Icges(5,2) * t690 + t252 - t390) + t351 * (Icges(5,2) * t694 + t251 + t389) + t458 * t832;
t513 = t548 * t449;
t249 = Icges(5,6) * t451 - t513;
t250 = Icges(5,4) * t690 - Icges(5,2) * t696 + Icges(5,6) * t449;
t743 = Icges(5,4) * t448;
t354 = Icges(5,2) * t450 + t743;
t357 = Icges(5,1) * t450 - t743;
t788 = t350 * (t451 * t817 + t250) + t351 * (-t449 * t817 + t249) + t458 * (t354 - t357);
t855 = t478 * t448 + t450 * t788;
t651 = t442 * t693 + t451 * t683;
t654 = -t383 * t693 - t451 * t684;
t124 = (t335 + t628) * t451 + t651 + t654;
t314 = qJDD(3) * t449 + t451 * t636;
t223 = qJDD(4) * t449 + t458 * t431 + t314;
t186 = qJDD(5) * t449 + t458 * t633 + t223;
t766 = pkin(1) * t465;
t767 = pkin(1) * t463;
t557 = -qJDD(1) * t766 + t468 * t767;
t764 = pkin(3) * t462;
t519 = t449 * pkin(3) * t682 + t314 * t764 + t557;
t391 = t451 * t442;
t234 = t449 * t758 - t391 + t765;
t320 = t451 * t383;
t198 = t449 * t638 - t320 + t391;
t242 = -t380 + t525;
t677 = t198 - t242;
t614 = t234 + t677;
t565 = -t362 + t614;
t413 = pkin(2) * t693;
t179 = t413 + (-pkin(7) * t458 - t628) * t451 - t651;
t305 = pkin(7) * t687 - t413;
t678 = -t179 - t305;
t19 = t186 * t336 + t264 * t295 + (t223 * t448 + t350 * t689) * pkin(4) + (-t124 - t140 + t678) * t458 + t565 * t456 + t519;
t854 = -g(2) + t19;
t707 = t358 * t451;
t609 = -t457 * t707 - t458 * t631;
t156 = t458 * t819 + t609;
t395 = rSges(5,2) * t696;
t256 = -t395 + t526;
t669 = t234 - t256;
t613 = -t362 + t669;
t41 = t223 * t358 + t301 * t350 + (-t156 + t678) * t458 + t613 * t456 + t519;
t851 = t41 - g(2);
t685 = t451 * t464;
t527 = -rSges(4,1) * t685 - rSges(4,3) * t449;
t634 = qJD(3) * t464;
t686 = t451 * t462;
t607 = rSges(4,1) * t606 + (t449 * t634 + t458 * t686) * rSges(4,2);
t178 = t458 * t527 + t607;
t754 = rSges(4,2) * t462;
t757 = rSges(4,1) * t464;
t416 = -t754 + t757;
t368 = t416 * qJD(3);
t414 = rSges(4,1) * t462 + rSges(4,2) * t464;
t691 = t449 * t464;
t632 = rSges(4,1) * t691;
t692 = t449 * t462;
t640 = rSges(4,2) * t692 + t451 * rSges(4,3);
t534 = t632 - t640;
t84 = t458 * t178 - t315 * t414 - t368 * t432 - t456 * t534 + t488;
t850 = t84 - g(3);
t603 = t451 * t634;
t604 = t451 * t635;
t608 = -rSges(4,1) * t604 - rSges(4,2) * t603 - t458 * t632;
t177 = t458 * t640 + t608;
t637 = qJD(3) * t449;
t423 = rSges(4,2) * t686;
t277 = -t423 - t527;
t656 = -t277 - t362;
t85 = t368 * t637 + t314 * t414 + (-t177 - t305) * t458 + t656 * t456 + t557;
t849 = t85 - g(2);
t361 = rSges(3,1) * t451 - t449 * rSges(3,2);
t848 = t302 * t458 - t361 * t456 - g(2) + t557;
t303 = -rSges(3,1) * t687 + rSges(3,2) * t693;
t847 = t303 * t458 - t456 * t554 - g(3) + t508;
t452 = Icges(4,4) * t464;
t549 = -Icges(4,2) * t462 + t452;
t816 = Icges(4,1) * t462 + t452;
t641 = t816 + t549;
t744 = Icges(4,4) * t462;
t408 = Icges(4,2) * t464 + t744;
t411 = Icges(4,1) * t464 - t744;
t642 = t408 - t411;
t846 = (t462 * t641 + t464 * t642) * t458;
t291 = rSges(5,2) * t694 + t393;
t845 = t451 * t156 + t291 * t350 + t351 * t707;
t844 = t451 * t179 - (-t449 ^ 2 - t451 ^ 2) * t628;
t236 = Icges(6,5) * t699 - Icges(6,6) * t701 + Icges(6,3) * t449;
t843 = t451 * t236 - t240 * t700;
t248 = Icges(5,5) * t690 - Icges(5,6) * t696 + Icges(5,3) * t449;
t842 = t451 * t248 - t252 * t694;
t506 = t295 * t336 + t350 * t763 + t401;
t322 = t458 * t362;
t821 = -t458 * t234 + t322;
t841 = t677 * t458 + t506 - t568 - t612 - t821;
t396 = pkin(4) * t697;
t348 = t458 * t396;
t840 = -t351 * t439 - t348 + t857;
t838 = pkin(3) * t603;
t837 = -t458 * t256 - t610 - t645 - t821;
t349 = pkin(4) * t619;
t822 = t449 * t264 + t336 * t687;
t836 = pkin(4) * t616 - t350 * t439 + t349 + t822;
t835 = t458 * t291 - t351 * t360 - t358 * t693;
t254 = t458 * t277;
t834 = -t607 - t254 - t322;
t833 = t451 * t124 + t858;
t567 = t350 * t358 + t401;
t629 = t465 * t749;
t505 = t567 - t629;
t101 = t458 * t613 + t505;
t830 = (t301 * t449 - t350 * t360 + t358 * t687 - t458 * t707) * t101;
t268 = Icges(4,4) * t685 - Icges(4,2) * t686 + Icges(4,6) * t449;
t421 = Icges(4,4) * t686;
t270 = Icges(4,1) * t685 + Icges(4,5) * t449 - t421;
t541 = t268 * t462 - t270 * t464;
t828 = t451 * t541;
t543 = t250 * t448 - t252 * t450;
t825 = t543 * t451;
t353 = Icges(5,5) * t450 - Icges(5,6) * t448;
t247 = Icges(5,3) * t451 - t353 * t449;
t673 = -t449 * t247 - t251 * t690;
t815 = t673 - t842;
t329 = Icges(6,5) * t441 - Icges(6,6) * t440;
t509 = t329 * t449;
t235 = Icges(6,3) * t451 - t509;
t675 = -t449 * t235 - t239 * t699;
t814 = t675 - t843;
t709 = t354 * t457;
t812 = -Icges(5,6) * t458 + t709;
t714 = t330 * t447;
t811 = -Icges(6,6) * t458 + t714;
t253 = t458 * t534;
t321 = t458 * t556;
t529 = t414 * t432 + t253 - t321;
t154 = t529 + t630;
t334 = t414 * t637;
t560 = t334 - t629;
t155 = t458 * t656 + t560;
t810 = t154 * t451 + t155 * t449;
t328 = Icges(6,5) * t440 + Icges(6,6) * t441;
t808 = -Icges(6,3) * t458 + t328 * t447;
t352 = Icges(5,5) * t448 + Icges(5,6) * t450;
t807 = -Icges(5,3) * t458 + t352 * t457;
t806 = -Icges(6,5) * t458 + t447 * t818;
t805 = -Icges(5,5) * t458 + t457 * t817;
t267 = Icges(4,6) * t451 - t449 * t549;
t420 = Icges(4,4) * t692;
t269 = -Icges(4,1) * t691 + Icges(4,5) * t451 + t420;
t167 = t267 * t464 + t269 * t462;
t514 = t549 * t458;
t801 = -Icges(4,6) * t458 + qJD(3) * t408;
t172 = t449 * t801 - t451 * t514;
t517 = t458 * t411;
t799 = -Icges(4,5) * t458 + qJD(3) * t816;
t174 = t449 * t799 - t451 * t517;
t407 = Icges(4,5) * t464 - Icges(4,6) * t462;
t511 = t407 * t449;
t265 = Icges(4,3) * t451 - t511;
t804 = qJD(3) * t167 + t172 * t462 - t174 * t464 - t265 * t458;
t168 = t268 * t464 + t270 * t462;
t171 = -t449 * t514 - t451 * t801;
t173 = -t449 * t517 - t451 * t799;
t266 = Icges(4,5) * t685 - Icges(4,6) * t686 + Icges(4,3) * t449;
t803 = qJD(3) * t168 + t171 * t462 - t173 * t464 - t266 * t458;
t406 = Icges(4,5) * t462 + Icges(4,6) * t464;
t802 = -Icges(4,3) * t458 + qJD(3) * t406;
t364 = t549 * qJD(3);
t365 = t411 * qJD(3);
t538 = t408 * t464 + t462 * t816;
t800 = qJD(3) * t538 + t364 * t462 - t365 * t464 - t406 * t458;
t657 = -Icges(4,2) * t685 + t270 - t421;
t659 = t451 * t816 + t268;
t797 = t462 * t657 + t464 * t659;
t658 = Icges(4,2) * t691 + t269 + t420;
t660 = -t449 * t816 + t267;
t796 = -t462 * t658 - t464 * t660;
t572 = -t333 * t447 + t714;
t573 = t831 * t447;
t795 = -t328 * t458 + t440 * t573 + t441 * t572;
t515 = t333 * t458;
t584 = t237 * t447 - t449 * t806 + t451 * t515;
t512 = t547 * t458;
t586 = t239 * t447 + t449 * t811 - t451 * t512;
t794 = -t235 * t458 + t440 * t586 + t441 * t584;
t585 = t238 * t447 + t449 * t515 + t451 * t806;
t587 = t240 * t447 - t449 * t512 - t451 * t811;
t793 = -t236 * t458 + t440 * t587 + t441 * t585;
t569 = -t357 * t457 + t709;
t570 = t832 * t457;
t792 = -t352 * t458 + t448 * t570 + t450 * t569;
t516 = t357 * t458;
t580 = t249 * t457 - t449 * t805 + t451 * t516;
t582 = t251 * t457 + t449 * t812 - t548 * t687;
t791 = -t247 * t458 + t448 * t582 + t450 * t580;
t581 = t250 * t457 + t449 * t516 + t451 * t805;
t583 = t252 * t457 - t451 * t812 - t458 * t513;
t790 = -t248 * t458 + t448 * t583 + t450 * t581;
t787 = t186 / 0.2e1;
t786 = t187 / 0.2e1;
t785 = t223 / 0.2e1;
t784 = t224 / 0.2e1;
t783 = -t295 / 0.2e1;
t782 = t295 / 0.2e1;
t781 = -t296 / 0.2e1;
t780 = t296 / 0.2e1;
t779 = t314 / 0.2e1;
t778 = t315 / 0.2e1;
t777 = -t350 / 0.2e1;
t776 = t350 / 0.2e1;
t775 = -t351 / 0.2e1;
t774 = t351 / 0.2e1;
t773 = t449 / 0.2e1;
t772 = t451 / 0.2e1;
t771 = t456 / 0.2e1;
t770 = -t458 / 0.2e1;
t769 = t458 / 0.2e1;
t768 = -rSges(4,3) - pkin(7);
t761 = g(3) * t451;
t748 = t18 * t451;
t271 = t328 * t449;
t540 = t330 * t440 - t441 * t818;
t139 = -t451 * t540 + t271;
t729 = t139 * t458;
t285 = t352 * t449;
t539 = t354 * t448 - t450 * t817;
t159 = -t451 * t539 + t285;
t726 = t159 * t458;
t306 = t406 * t449;
t537 = t408 * t462 - t464 * t816;
t189 = -t451 * t537 + t306;
t725 = t189 * t458;
t720 = t251 * t450;
t719 = t267 * t462;
t718 = t269 * t464;
t716 = t328 * t451;
t712 = t352 * t451;
t710 = t353 * t458;
t708 = t358 * t449;
t386 = -t763 - t764;
t706 = t386 * t449;
t705 = t406 * t451;
t704 = t407 * t458;
t312 = t414 * t449;
t703 = t414 * t451;
t695 = t449 * t236;
t294 = t449 * t336;
t679 = t179 * t432 - t315 * t234;
t676 = t451 * t235 + t237 * t702;
t674 = t451 * t247 + t249 * t697;
t217 = t451 * t242;
t672 = -t451 * t198 + t217;
t671 = t451 * t265 + t267 * t692;
t670 = t449 * t265 + t269 * t685;
t643 = t396 + t294;
t424 = pkin(3) * t692;
t627 = pkin(3) * t634;
t623 = t237 * t701;
t622 = t249 * t696;
t602 = -t693 / 0.2e1;
t601 = t687 / 0.2e1;
t600 = -pkin(2) - t757;
t596 = -t637 / 0.2e1;
t595 = t637 / 0.2e1;
t594 = -t432 / 0.2e1;
t593 = t432 / 0.2e1;
t590 = -t442 - t435;
t211 = t295 * t337;
t578 = t458 * t713 + t211;
t571 = -t266 - t718;
t566 = pkin(3) * t604;
t563 = t413 - t608;
t562 = -pkin(2) - t590;
t561 = -pkin(4) * t689 - t264;
t558 = t337 + t439;
t417 = rSges(2,1) * t465 - t463 * rSges(2,2);
t555 = rSges(2,1) * t463 + rSges(2,2) * t465;
t119 = -t269 * t691 + t671;
t120 = t451 * t266 + t268 * t692 - t270 * t691;
t546 = t119 * t451 + t120 * t449;
t121 = -t267 * t686 + t670;
t122 = t266 * t449 - t828;
t545 = t121 * t451 + t122 * t449;
t131 = t238 * t441 + t240 * t440;
t544 = t238 * t440 - t240 * t441;
t147 = t250 * t450 + t252 * t448;
t542 = -t718 + t719;
t532 = t626 - t820;
t528 = t824 - t819;
t284 = -t361 * t458 - t629;
t521 = -t458 * t503 - t321 + t566;
t520 = -qJD(3) * t180 - t314 * t759;
t504 = -t335 * t451 - t611 - t654;
t500 = t271 * t296 - t295 * t716 + t329 * t458;
t499 = t285 * t351 - t350 * t712 + t710;
t497 = -t451 * t808 + (-t509 + t544) * t458;
t496 = -t329 * t687 + t808 * t449 + (t237 * t440 - t239 * t441) * t458;
t495 = -t449 * t710 - t451 * t807 + t458 * t543;
t494 = -t451 * t710 + t807 * t449 + (t249 * t448 - t720) * t458;
t493 = -t451 * t802 + (-t511 + t541) * t458;
t492 = -t407 * t687 + t449 * t802 + t458 * t542;
t491 = t329 * t447 + t458 * t540;
t490 = t353 * t457 + t458 * t539;
t489 = t407 * qJD(3) + t458 * t537;
t176 = -t625 - t320 + t380 + (-rSges(6,3) + t459) * t449;
t196 = -t624 - t391 + t395 + (-rSges(5,3) + t466) * t449;
t487 = t566 - t609 + t651;
t209 = t449 * t600 + t640 + t760;
t210 = t449 * t768 + t451 * t600 + t423;
t486 = t351 * t358 + t458 * t533 + t521;
t485 = t451 * t277 + t449 * t534;
t175 = -t449 * t589 - t451 * t459 + t820;
t195 = t449 * t590 - t451 * t466 + t819;
t106 = -t239 * t700 + t676;
t201 = t238 * t702;
t107 = t201 + t843;
t108 = -t623 - t675;
t109 = -t451 * t544 + t695;
t130 = t237 * t441 + t239 * t440;
t138 = t449 * t540 + t716;
t26 = t496 * t449 - t451 * t794;
t27 = t497 * t449 - t451 * t793;
t28 = t449 * t794 + t496 * t451;
t29 = t449 * t793 + t497 * t451;
t127 = t138 * t458;
t42 = t106 * t296 + t107 * t295 + t127;
t43 = t108 * t296 + t109 * t295 + t729;
t70 = t491 * t449 - t451 * t795;
t71 = t449 * t795 + t491 * t451;
t72 = -t440 * t584 + t441 * t586;
t73 = -t440 * t585 + t441 * t587;
t484 = (t108 * t187 + t109 * t186 + t139 * t456 + t26 * t296 + t27 * t295 + t458 * t70) * t773 + ((t131 * t458 + t72) * t451 + (-t130 * t458 + t73) * t449) * t769 + (t106 * t187 + t107 * t186 + t138 * t456 + t28 * t296 + t29 * t295 + t458 * t71) * t772 + (t500 * t449 - t451 * t856) * t783 + (t856 * t449 + t500 * t451) * t781 + (-t440 * t789 + t441 * t480) * t770 + t42 * t602 + t43 * t601 + ((t109 * t458 + t26) * t451 + (-t108 * t458 + t27) * t449) * t782 + (t108 * t451 + t109 * t449) * t787 + (t106 * t451 + t107 * t449) * t786 + ((t107 * t458 + t28) * t451 + (-t106 * t458 + t29) * t449) * t780 + (t130 * t451 + t131 * t449) * t771;
t482 = (-pkin(2) + t589) * t449 + (pkin(7) + t459) * t451 - t820;
t477 = t296 * t336 + t351 * t763 + t521 + (t449 * t646 + t532 + t588) * t458;
t476 = (-t248 - t720) * t449 + t825 + t674;
t475 = t238 * t701 - t695 + (-t239 * t449 - t240 * t451) * t441 + t676;
t82 = t477 + t630;
t83 = t458 * t565 + t506 - t629;
t473 = (-t83 * t820 - t82 * (-t525 - t320)) * t458;
t100 = t486 + t630;
t472 = (-t101 * t819 - t100 * (-t526 - t391)) * t458;
t110 = -t251 * t694 + t674;
t206 = t250 * t697;
t111 = t206 + t842;
t112 = -t622 - t673;
t113 = t248 * t449 - t825;
t146 = t249 * t450 + t251 * t448;
t158 = t449 * t539 + t712;
t30 = t494 * t449 - t451 * t791;
t31 = t495 * t449 - t451 * t790;
t32 = t449 * t791 + t494 * t451;
t33 = t449 * t790 + t495 * t451;
t145 = t158 * t458;
t55 = t110 * t351 + t111 * t350 + t145;
t56 = t112 * t351 + t113 * t350 + t726;
t78 = -t448 * t580 + t450 * t582;
t79 = -t448 * t581 + t450 * t583;
t80 = t490 * t449 - t451 * t792;
t81 = t449 * t792 + t490 * t451;
t471 = ((t111 * t458 + t32) * t451 + (-t110 * t458 + t33) * t449) * t774 + (t110 * t224 + t111 * t223 + t158 * t456 + t32 * t351 + t33 * t350 + t458 * t81) * t772 + ((t113 * t458 + t30) * t451 + (-t112 * t458 + t31) * t449) * t776 + (t855 * t449 + t499 * t451) * t775 + (t499 * t449 - t451 * t855) * t777 + (t112 * t224 + t113 * t223 + t159 * t456 + t30 * t351 + t31 * t350 + t458 * t80) * t773 + (t110 * t451 + t111 * t449) * t784 + (t112 * t451 + t113 * t449) * t785 + t56 * t601 + t55 * t602 + (-t448 * t788 + t450 * t478) * t770 + t484 + ((t147 * t458 + t78) * t451 + (-t146 * t458 + t79) * t449) * t769 + (t146 * t451 + t147 * t449) * t771;
t470 = ((-t154 * t768 - t155 * t754) * t449 + (-t154 * t600 + t155 * t768) * t451) * t458;
t188 = t449 * t537 + t705;
t181 = t188 * t458;
t68 = qJD(3) * t546 + t181;
t69 = qJD(3) * t545 + t725;
t88 = -qJD(3) * t542 + t172 * t464 + t174 * t462;
t89 = -qJD(3) * t541 + t171 * t464 + t173 * t462;
t94 = t489 * t449 - t451 * t800;
t95 = t449 * t800 + t489 * t451;
t469 = (t127 + (t109 + t475) * t296 + (-t108 + t201 - t623 - t814) * t295) * t783 + (t181 + ((t122 + t671 + t828) * t451 + (-t121 + (t571 - t719) * t451 + t120 + t670) * t449) * qJD(3)) * t596 + (t145 + (t113 + t476) * t351 + (-t112 + t206 - t622 - t815) * t350) * t777 + (t139 + t131) * t787 + (t138 + t130) * t786 + (t147 + t159) * t785 + (t158 + t146) * t784 + (-t729 + (t107 + (t237 * t451 - t238 * t449) * t440 + t814) * t296 + (-t106 + t475) * t295 + t43) * t781 + (t72 + t71) * t780 + (t189 + t168) * t779 + (t188 + t167) * t778 + (-t726 + (t111 + (t249 * t451 - t250 * t449) * t448 + t815) * t351 + (-t110 + t476) * t350 + t56) * t775 + (t78 + t81) * t774 + (t69 - t725 + ((t120 + (-t266 + t719) * t451 - t670) * t451 + (t449 * t571 - t119 + t671) * t449) * qJD(3)) * t594 + (t88 + t95) * t593 + (t73 + t70 + t42) * t782 + (t79 + t80 + t55) * t776 + (t89 + t94 + t68) * t595 + (-qJD(3) * t537 + t364 * t464 + t365 * t462 - t440 * t572 + t441 * t573 - t448 * t569 + t450 * t570) * t458 + (t330 * t441 + t354 * t450 + t440 * t818 + t448 * t817 + Icges(3,3) + t538) * t456;
t327 = t451 * t386;
t263 = pkin(3) * t686 + t327;
t262 = -t424 - t706;
t228 = t451 * t256;
t214 = t451 * t234;
t208 = t234 * t432;
t161 = t485 * qJD(3);
t93 = t351 * t256 + t350 * t533 - t503 * t637 - t208;
t59 = -t208 - t351 * t198 + t296 * t242 - t295 * t820 + t350 * t588 + (-t503 * qJD(3) + t295 * t426 + t350 * t646) * t449;
t47 = t449 * t803 + t493 * t451;
t46 = t449 * t804 + t492 * t451;
t45 = t493 * t449 - t451 * t803;
t44 = t492 * t449 - t451 * t804;
t23 = t224 * t256 + t351 * t156 - t223 * t819 - t350 * t157 + t314 * t824 + (t223 * t435 + t520) * t449 + t679;
t9 = -t224 * t198 + t351 * t124 - t350 * t125 + t187 * t242 + t296 * t140 - t186 * t820 - t295 * t141 + (t223 * t638 + t314 * t758) * t451 + (t186 * t426 + t223 * t646 + t520) * t449 + t679;
t1 = [Icges(2,3) * qJDD(1) + t469 + (t848 * (-t361 - t766) + t847 * (-t554 - t767) + (t284 - t303 + t629) * t283) * m(3) + ((qJDD(1) * t555 + g(3)) * t555 + (qJDD(1) * t417 + g(2)) * t417) * m(2) + (t83 * (t504 + t630) + t473 + t854 * (t176 - t766) - t859 * (t175 - t767) + (-t83 + t841) * t82) * m(6) + (t101 * (t487 + t630) + t472 + t851 * (t196 - t766) + t852 * (t195 - t767) + (-t101 + t505 + t629 + t837) * t100) * m(5) + (t155 * (t563 + t630) + t470 + t849 * (t210 - t766) + t850 * (t209 - t767) + (-t155 + t560 + t629 + t834) * t154) * m(4); t469 + (t473 + (-t477 + t504) * t83 + t841 * t82 + t854 * t176 - t859 * t175) * m(6) + (t472 + t851 * t196 + t852 * t195 + (-t486 + t487) * t101 + (t567 + t837) * t100) * m(5) + (t470 + t849 * t210 + t850 * t209 + (t563 - t529) * t155 + (t334 + t834) * t154) * m(4) + (-t283 * t303 + t284 * t302 + (-t283 * t458 - t848) * t361 - (t284 * t458 + t847) * t554) * m(3); (t167 * t451 + t168 * t449) * t771 + t546 * t778 + t545 * t779 + ((-t462 * t642 + t464 * t641) * t458 + ((t449 * t657 + t451 * t658) * t464 + (-t449 * t659 - t451 * t660) * t462) * qJD(3)) * t770 + ((t122 * t458 + t44) * t451 + (-t121 * t458 + t45) * t449) * t595 + ((t168 * t458 + t88) * t451 + (-t167 * t458 + t89) * t449) * t769 + ((t120 * t458 + t46) * t451 + (-t119 * t458 + t47) * t449) * t593 + ((t306 * t432 + t704) * t451 + (t846 + (t797 * t449 + (-t705 - t796) * t451) * qJD(3)) * t449) * t594 + (t121 * t315 + t122 * t314 + t189 * t456 + t458 * t94 + (t44 * t451 + t449 * t45) * qJD(3)) * t773 + (t119 * t315 + t120 * t314 + t188 * t456 + t458 * t95 + (t449 * t47 + t451 * t46) * qJD(3)) * t772 + ((-t637 * t705 + t704) * t449 + (-t846 + (t796 * t451 + (t306 - t797) * t449) * qJD(3)) * t451) * t596 + t471 + t68 * t602 + t69 * t601 + (-g(1) * (t455 + t558) - g(2) * (t278 - t706) - g(3) * (t327 - t713) + t9 * (t449 * t482 - t214 + t672) + t19 * (t424 + t643) + (-t336 + t386) * t748 + (-(t561 - t627) * t451 + t262 * t458 - t838 + t840) * t82 + ((-t180 - t680) * t449 + (t449 * t614 + t451 * t482) * t458 + t262 * t350 - t263 * t351 + t833 + t844) * t59 + (-t211 - (-t263 + t713) * t458 + t836) * t83) * m(6) + (t23 * (-t214 + t228 + (t449 * t562 + t528) * t449) + t41 * (t424 + t708) - g(1) * (t360 + t455) - g(2) * (t424 + t291) + ((-t180 - t157) * t449 + (t528 * t451 + (t451 * t562 + t669) * t449) * t458 + t844 + t845) * t93 + (t40 * t451 - t761) * (-t358 - t764) + (-(-t301 - t627) * t451 + t835 - t838) * t100 + t830) * m(5) + (-g(1) * t416 - g(2) * t312 + g(3) * t703 + (t315 * t277 + t314 * t534 + (t451 * t177 - t449 * t178) * qJD(3)) * t485 + t161 * ((-t178 - t254) * t449 + (t177 + t253) * t451) + t85 * t312 - t84 * t703 + (-t154 * t693 + t155 * t687) * t414 + t810 * t368 - (-t154 * t312 + t155 * t703) * t458 - (t161 * (-t312 * t449 - t451 * t703) + t810 * t416) * qJD(3)) * m(4); t471 + (t9 * (t839 * t449 + t672) + t19 * t643 - g(1) * t558 - g(2) * (t396 + t278) + (-t349 - t578 + t836) * t83 + (-t451 * t561 + t348 + t840) * t82 + (t748 - t761) * (-t336 - t763) + (-t680 * t449 + (t522 * t451 + (t451 * t559 + t677) * t449) * t458 - (-t350 * t449 - t351 * t451) * t763 + t833) * t59) * m(6) + (-g(1) * t360 - g(2) * t291 + t23 * (t449 * t533 + t228) + t41 * t708 + (-t449 * t157 + (-t449 * t256 + t451 * t533) * t458 + t845) * t93 + t830 + (t301 * t451 + t835) * t100 - t852 * t707) * m(5); t484 + (-g(1) * t337 - g(2) * t278 + t9 * (t449 * t532 + t217) + t19 * t294 + (-t449 * t141 + (-t449 * t242 + t451 * t532) * t458 + t858) * t59 + (-t578 + t822) * t83 + (t264 * t451 + t857) * t82 + t859 * t713) * m(6);];
tau = t1;
