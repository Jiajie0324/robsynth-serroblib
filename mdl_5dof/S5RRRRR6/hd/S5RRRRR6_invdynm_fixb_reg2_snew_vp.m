% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRR6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4,d5]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 12:16
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRR6_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR6_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR6_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR6_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR6_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRR6_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 12:15:44
% EndTime: 2020-01-03 12:16:00
% DurationCPUTime: 16.84s
% Computational Cost: add. (163384->652), mult. (211504->931), div. (0->0), fcn. (143913->10), ass. (0->452)
t1229 = cos(qJ(2));
t1217 = qJDD(1) + qJDD(2);
t1224 = sin(qJ(2));
t1281 = t1224 * t1217;
t1219 = qJD(1) + qJD(2);
t1310 = t1219 ^ 2;
t1181 = t1229 * t1310 + t1281;
t1161 = pkin(6) * t1181 - t1229 * g(1);
t1225 = sin(qJ(1));
t1230 = cos(qJ(1));
t1274 = t1229 * t1217;
t1184 = t1224 * t1310 - t1274;
t1242 = t1225 * t1181 + t1230 * t1184;
t1318 = pkin(6) * t1184 - t1224 * g(1);
t1330 = pkin(5) * t1242 + t1225 * t1161 + t1230 * t1318;
t1131 = t1230 * t1181 - t1225 * t1184;
t1329 = -pkin(5) * t1131 - t1230 * t1161 + t1225 * t1318;
t1200 = t1225 * g(2) - t1230 * g(3);
t1232 = qJD(1) ^ 2;
t1188 = -t1232 * pkin(1) - t1200;
t1201 = t1230 * g(2) + t1225 * g(3);
t1234 = qJDD(1) * pkin(1) - t1201;
t1133 = t1224 * t1188 - t1229 * t1234;
t1134 = t1229 * t1188 + t1224 * t1234;
t1254 = t1224 * t1133 + t1229 * t1134;
t1075 = t1229 * t1133 - t1224 * t1134;
t1273 = t1230 * t1075;
t1328 = t1225 * t1254 - t1273;
t1280 = t1225 * t1075;
t1327 = t1230 * t1254 + t1280;
t1221 = sin(qJ(5));
t1222 = sin(qJ(4));
t1227 = cos(qJ(4));
t1228 = cos(qJ(3));
t1290 = t1219 * t1228;
t1223 = sin(qJ(3));
t1291 = t1219 * t1223;
t1164 = t1222 * t1291 - t1227 * t1290;
t1165 = (t1222 * t1228 + t1223 * t1227) * t1219;
t1226 = cos(qJ(5));
t1103 = t1226 * t1164 + t1221 * t1165;
t1105 = -t1221 * t1164 + t1226 * t1165;
t1043 = t1105 * t1103;
t1216 = qJDD(3) + qJDD(4);
t1207 = qJDD(5) + t1216;
t1314 = -t1043 + t1207;
t1322 = t1221 * t1314;
t1125 = t1165 * t1164;
t1313 = -t1125 + t1216;
t1321 = t1222 * t1313;
t1320 = t1226 * t1314;
t1319 = t1227 * t1313;
t1218 = qJD(3) + qJD(4);
t1210 = qJD(5) + t1218;
t1095 = t1210 * t1103;
t1203 = qJD(3) * t1290;
t1282 = t1223 * t1217;
t1175 = t1203 + t1282;
t1266 = qJD(3) * t1291;
t1275 = t1228 * t1217;
t1237 = -t1266 + t1275;
t1080 = -t1164 * qJD(4) + t1227 * t1175 + t1222 * t1237;
t1253 = t1222 * t1175 - t1227 * t1237;
t1236 = t1165 * qJD(4) + t1253;
t995 = -t1103 * qJD(5) + t1226 * t1080 - t1221 * t1236;
t1317 = -t1095 + t995;
t1123 = -t1310 * pkin(2) + t1217 * pkin(7) + t1134;
t1285 = t1223 * t1123;
t1097 = t1228 * g(1) + t1285;
t1098 = -t1223 * g(1) + t1228 * t1123;
t1033 = t1223 * t1097 + t1228 * t1098;
t1156 = t1218 * t1164;
t1312 = -t1156 + t1080;
t1060 = t1156 + t1080;
t1255 = t1221 * t1080 + t1226 * t1236;
t967 = (qJD(5) - t1210) * t1105 + t1255;
t1056 = (qJD(4) - t1218) * t1165 + t1253;
t1101 = t1103 ^ 2;
t1102 = t1105 ^ 2;
t1311 = t1164 ^ 2;
t1163 = t1165 ^ 2;
t1206 = t1210 ^ 2;
t1215 = t1218 ^ 2;
t1309 = t1228 ^ 2;
t1049 = qJDD(3) * pkin(3) - t1175 * pkin(8) - t1285 + (-g(1) + (pkin(3) * t1291 + pkin(8) * qJD(3)) * t1219) * t1228;
t1191 = qJD(3) * pkin(3) - pkin(8) * t1291;
t1205 = t1309 * t1310;
t1050 = -pkin(3) * t1205 + pkin(8) * t1237 - qJD(3) * t1191 + t1098;
t991 = -t1227 * t1049 + t1222 * t1050;
t992 = t1222 * t1049 + t1227 * t1050;
t925 = t1222 * t992 - t1227 * t991;
t1308 = pkin(3) * t925;
t997 = -t1056 * t1222 - t1227 * t1060;
t1307 = pkin(3) * t997;
t1122 = -t1217 * pkin(2) - t1310 * pkin(7) + t1133;
t1054 = -t1237 * pkin(3) - pkin(8) * t1205 + t1191 * t1291 + t1122;
t1150 = t1218 * pkin(4) - t1165 * pkin(9);
t977 = pkin(4) * t1236 - t1311 * pkin(9) + t1165 * t1150 + t1054;
t1304 = t1221 * t977;
t939 = t1313 * pkin(4) - t1060 * pkin(9) - t991;
t941 = -t1311 * pkin(4) - pkin(9) * t1236 - t1218 * t1150 + t992;
t889 = t1221 * t941 - t1226 * t939;
t890 = t1221 * t939 + t1226 * t941;
t846 = t1221 * t890 - t1226 * t889;
t1303 = t1222 * t846;
t1302 = t1223 * t925;
t1301 = t1226 * t977;
t1300 = t1227 * t846;
t1299 = t1228 * t925;
t1298 = qJD(3) * t1219;
t1297 = t1210 * t1105;
t1296 = t1210 * t1221;
t1295 = t1210 * t1226;
t1294 = t1218 * t1165;
t1293 = t1218 * t1222;
t1292 = t1218 * t1227;
t1220 = t1223 ^ 2;
t1289 = t1220 * t1310;
t1036 = t1043 + t1207;
t1288 = t1221 * t1036;
t1287 = t1222 * t1054;
t1115 = t1125 + t1216;
t1286 = t1222 * t1115;
t1106 = t1223 * t1122;
t1199 = t1228 * t1310 * t1223;
t1189 = qJDD(3) + t1199;
t1284 = t1223 * t1189;
t1190 = qJDD(3) - t1199;
t1283 = t1223 * t1190;
t1279 = t1226 * t1036;
t1278 = t1227 * t1054;
t1277 = t1227 * t1115;
t1107 = t1228 * t1122;
t1176 = -0.2e1 * t1266 + t1275;
t1135 = t1228 * t1176;
t1276 = t1228 * t1190;
t1270 = -pkin(2) * t1122 + pkin(7) * t1033;
t1269 = t1220 + t1309;
t847 = t1221 * t889 + t1226 * t890;
t813 = t1222 * t847 + t1300;
t845 = pkin(4) * t846;
t1268 = pkin(3) * t813 + t845;
t970 = t1095 + t995;
t910 = -t1221 * t967 - t1226 * t970;
t912 = t1221 * t970 - t1226 * t967;
t862 = t1222 * t912 + t1227 * t910;
t908 = pkin(4) * t910;
t1267 = pkin(3) * t862 + t908;
t1265 = t1224 * t1043;
t1264 = t1224 * t1125;
t1263 = t1229 * t1043;
t1262 = t1229 * t1125;
t1231 = qJD(3) ^ 2;
t1195 = -t1231 - t1289;
t1146 = -t1223 * t1195 - t1276;
t1174 = 0.2e1 * t1203 + t1282;
t1261 = -pkin(2) * t1174 + pkin(7) * t1146 + t1106;
t1197 = -t1205 - t1231;
t1144 = t1228 * t1197 - t1284;
t1260 = pkin(2) * t1176 + pkin(7) * t1144 - t1107;
t1192 = -t1225 * qJDD(1) - t1230 * t1232;
t1259 = pkin(5) * t1192 + t1230 * g(1);
t926 = t1222 * t991 + t1227 * t992;
t814 = t1227 * t847 - t1303;
t839 = -pkin(4) * t977 + pkin(9) * t847;
t792 = -pkin(3) * t977 + pkin(8) * t814 - pkin(9) * t1303 + t1227 * t839;
t797 = -pkin(8) * t813 - pkin(9) * t1300 - t1222 * t839;
t800 = -t1223 * t813 + t1228 * t814;
t1258 = -pkin(2) * t977 + pkin(7) * t800 + t1223 * t797 + t1228 * t792;
t966 = (qJD(5) + t1210) * t1105 + t1255;
t1034 = -t1206 - t1101;
t980 = t1226 * t1034 - t1322;
t887 = -pkin(4) * t966 + pkin(9) * t980 - t1301;
t979 = t1221 * t1034 + t1320;
t918 = -pkin(9) * t979 + t1304;
t920 = -t1222 * t979 + t1227 * t980;
t830 = -pkin(3) * t966 + pkin(8) * t920 + t1222 * t918 + t1227 * t887;
t919 = t1222 * t980 + t1227 * t979;
t838 = -pkin(8) * t919 - t1222 * t887 + t1227 * t918;
t875 = -t1223 * t919 + t1228 * t920;
t1257 = -pkin(2) * t966 + pkin(7) * t875 + t1223 * t838 + t1228 * t830;
t1084 = -t1102 - t1206;
t1007 = -t1221 * t1084 - t1279;
t893 = -pkin(4) * t1317 + pkin(9) * t1007 + t1304;
t1006 = t1226 * t1084 - t1288;
t923 = -pkin(9) * t1006 + t1301;
t933 = -t1222 * t1006 + t1227 * t1007;
t835 = -pkin(3) * t1317 + pkin(8) * t933 + t1222 * t923 + t1227 * t893;
t932 = t1227 * t1006 + t1222 * t1007;
t843 = -pkin(8) * t932 - t1222 * t893 + t1227 * t923;
t881 = -t1223 * t932 + t1228 * t933;
t1256 = -pkin(2) * t1317 + pkin(7) * t881 + t1223 * t843 + t1228 * t835;
t1252 = -t1225 * t1200 - t1230 * t1201;
t1023 = -t1101 - t1102;
t827 = -pkin(4) * t1023 + pkin(9) * t912 + t847;
t831 = -pkin(9) * t910 - t846;
t864 = -t1222 * t910 + t1227 * t912;
t803 = -pkin(3) * t1023 + pkin(8) * t864 + t1222 * t831 + t1227 * t827;
t805 = -pkin(8) * t862 - t1222 * t827 + t1227 * t831;
t826 = -t1223 * t862 + t1228 * t864;
t1251 = -pkin(2) * t1023 + pkin(7) * t826 + t1223 * t805 + t1228 * t803;
t1083 = -t1163 - t1311;
t999 = -t1056 * t1227 + t1222 * t1060;
t892 = -pkin(3) * t1083 + pkin(8) * t999 + t926;
t896 = -pkin(8) * t997 - t925;
t931 = -t1223 * t997 + t1228 * t999;
t1250 = -pkin(2) * t1083 + pkin(7) * t931 + t1223 * t896 + t1228 * t892;
t1055 = (qJD(4) + t1218) * t1165 + t1253;
t1109 = -t1215 - t1311;
t1039 = t1227 * t1109 - t1321;
t945 = -pkin(3) * t1055 + pkin(8) * t1039 - t1278;
t1038 = t1222 * t1109 + t1319;
t983 = -t1223 * t1038 + t1228 * t1039;
t990 = -pkin(8) * t1038 + t1287;
t1249 = -pkin(2) * t1055 + pkin(7) * t983 + t1223 * t990 + t1228 * t945;
t1147 = -t1163 - t1215;
t1063 = t1227 * t1147 - t1286;
t1001 = -pkin(8) * t1063 + t1278;
t1064 = -t1222 * t1147 - t1277;
t1004 = -t1223 * t1063 + t1228 * t1064;
t949 = -pkin(3) * t1312 + pkin(8) * t1064 + t1287;
t1248 = -pkin(2) * t1312 + pkin(7) * t1004 + t1223 * t1001 + t1228 * t949;
t1247 = t1224 * t1199;
t1246 = t1229 * t1199;
t1179 = t1269 * t1217;
t1185 = t1205 + t1289;
t1245 = pkin(2) * t1185 + pkin(7) * t1179 + t1033;
t1244 = pkin(3) * t1063 - t992;
t1243 = pkin(4) * t979 - t889;
t1032 = t1228 * t1097 - t1223 * t1098;
t1241 = t1230 * t1200 - t1225 * t1201;
t1240 = pkin(3) * t1038 - t991;
t1239 = pkin(4) * t1006 - t890;
t878 = t1228 * t926 - t1302;
t907 = -pkin(3) * t1054 + pkin(8) * t926;
t1238 = -pkin(2) * t1054 + pkin(7) * t878 - pkin(8) * t1302 + t1228 * t907;
t1235 = pkin(3) * t919 + t1243;
t1233 = pkin(3) * t932 + t1239;
t1196 = t1205 - t1231;
t1194 = t1231 - t1289;
t1193 = t1230 * qJDD(1) - t1225 * t1232;
t1186 = -t1205 + t1289;
t1180 = t1228 * t1189;
t1172 = pkin(5) * t1193 + t1225 * g(1);
t1171 = t1269 * t1298;
t1154 = -t1163 + t1215;
t1153 = -t1215 + t1311;
t1152 = t1224 * qJDD(3) + t1229 * t1171;
t1151 = -t1229 * qJDD(3) + t1224 * t1171;
t1149 = t1228 * t1175 - t1220 * t1298;
t1148 = -t1223 * t1237 - t1309 * t1298;
t1145 = -t1223 * t1194 + t1180;
t1143 = t1228 * t1196 - t1283;
t1142 = t1228 * t1195 - t1283;
t1141 = t1228 * t1194 + t1284;
t1140 = t1223 * t1197 + t1180;
t1139 = t1223 * t1196 + t1276;
t1136 = (t1175 + t1203) * t1223;
t1130 = t1229 * t1179 - t1224 * t1185;
t1128 = t1224 * t1179 + t1229 * t1185;
t1127 = -t1223 * t1174 + t1135;
t1126 = t1228 * t1174 + t1223 * t1176;
t1124 = t1163 - t1311;
t1121 = t1229 * t1145 + t1223 * t1281;
t1120 = t1229 * t1143 + t1224 * t1275;
t1119 = t1224 * t1145 - t1223 * t1274;
t1118 = t1224 * t1143 - t1228 * t1274;
t1113 = t1229 * t1149 - t1247;
t1112 = t1229 * t1148 + t1247;
t1111 = t1224 * t1149 + t1246;
t1110 = t1224 * t1148 - t1246;
t1100 = -pkin(1) * t1181 - t1134;
t1099 = -pkin(1) * t1184 - t1133;
t1094 = t1229 * t1146 + t1224 * t1174;
t1093 = t1229 * t1144 - t1224 * t1176;
t1092 = t1224 * t1146 - t1229 * t1174;
t1091 = t1224 * t1144 + t1229 * t1176;
t1090 = -t1102 + t1206;
t1089 = t1101 - t1206;
t1088 = (-t1164 * t1227 + t1165 * t1222) * t1218;
t1087 = (-t1164 * t1222 - t1165 * t1227) * t1218;
t1082 = t1229 * t1127 + t1224 * t1186;
t1081 = t1224 * t1127 - t1229 * t1186;
t1072 = pkin(1) * t1075;
t1071 = pkin(1) * g(1) + pkin(6) * t1254;
t1070 = t1227 * t1153 - t1286;
t1069 = -t1222 * t1154 + t1319;
t1068 = t1222 * t1153 + t1277;
t1067 = t1227 * t1154 + t1321;
t1066 = -pkin(7) * t1142 + t1107;
t1065 = -pkin(7) * t1140 + t1106;
t1062 = -pkin(2) * t1142 + t1098;
t1061 = -pkin(2) * t1140 + t1097;
t1048 = t1227 * t1080 - t1165 * t1293;
t1047 = t1222 * t1080 + t1165 * t1292;
t1046 = t1164 * t1292 + t1222 * t1236;
t1045 = t1164 * t1293 - t1227 * t1236;
t1040 = t1102 - t1101;
t1029 = (-t1103 * t1226 + t1105 * t1221) * t1210;
t1028 = (-t1103 * t1221 - t1105 * t1226) * t1210;
t1027 = -t1223 * t1087 + t1228 * t1088;
t1026 = t1228 * t1087 + t1223 * t1088;
t1025 = t1229 * t1027 + t1224 * t1216;
t1024 = t1224 * t1027 - t1229 * t1216;
t1021 = pkin(1) * t1091 + t1260;
t1020 = pkin(1) * t1092 + t1261;
t1019 = -pkin(6) * t1128 + t1229 * t1032;
t1018 = pkin(6) * t1130 + t1224 * t1032;
t1017 = t1229 * t1033 + t1224 * t1122;
t1016 = t1224 * t1033 - t1229 * t1122;
t1015 = -t1223 * t1068 + t1228 * t1070;
t1014 = -t1223 * t1067 + t1228 * t1069;
t1013 = t1228 * t1068 + t1223 * t1070;
t1012 = t1228 * t1067 + t1223 * t1069;
t1011 = t1226 * t1089 - t1288;
t1010 = -t1221 * t1090 + t1320;
t1009 = t1221 * t1089 + t1279;
t1008 = t1226 * t1090 + t1322;
t1003 = t1228 * t1063 + t1223 * t1064;
t998 = -t1227 * t1055 - t1222 * t1312;
t996 = -t1222 * t1055 + t1227 * t1312;
t994 = -t1105 * qJD(5) - t1255;
t993 = pkin(1) * t1128 + t1245;
t987 = -t1223 * t1047 + t1228 * t1048;
t986 = -t1223 * t1045 + t1228 * t1046;
t985 = t1228 * t1047 + t1223 * t1048;
t984 = t1228 * t1045 + t1223 * t1046;
t982 = t1228 * t1038 + t1223 * t1039;
t976 = -pkin(6) * t1092 - t1224 * t1062 + t1229 * t1066;
t975 = -pkin(6) * t1091 - t1224 * t1061 + t1229 * t1065;
t973 = -t1222 * t1028 + t1227 * t1029;
t972 = t1227 * t1028 + t1222 * t1029;
t963 = t1229 * t987 + t1264;
t962 = t1229 * t986 - t1264;
t961 = -t1105 * t1296 + t1226 * t995;
t960 = t1224 * t987 - t1262;
t959 = t1224 * t986 + t1262;
t958 = t1105 * t1295 + t1221 * t995;
t957 = t1103 * t1295 - t1221 * t994;
t956 = t1103 * t1296 + t1226 * t994;
t955 = -pkin(1) * t1142 + pkin(6) * t1094 + t1229 * t1062 + t1224 * t1066;
t954 = -pkin(1) * t1140 + pkin(6) * t1093 + t1229 * t1061 + t1224 * t1065;
t953 = t1229 * t1015 - t1224 * t1056;
t952 = t1229 * t1014 + t1224 * t1060;
t951 = t1224 * t1015 + t1229 * t1056;
t950 = t1224 * t1014 - t1229 * t1060;
t948 = t1229 * t1004 + t1224 * t1312;
t947 = t1224 * t1004 - t1229 * t1312;
t943 = t1224 * t1055 + t1229 * t983;
t942 = -t1229 * t1055 + t1224 * t983;
t940 = pkin(1) * t1016 + t1270;
t937 = -t1222 * t1009 + t1227 * t1011;
t936 = -t1222 * t1008 + t1227 * t1010;
t935 = t1227 * t1009 + t1222 * t1011;
t934 = t1227 * t1008 + t1222 * t1010;
t930 = -t1223 * t996 + t1228 * t998;
t929 = t1223 * t999 + t1228 * t997;
t928 = t1223 * t998 + t1228 * t996;
t924 = -pkin(6) * t1016 - (pkin(2) * t1224 - pkin(7) * t1229) * t1032;
t922 = t1224 * t1124 + t1229 * t930;
t921 = -t1229 * t1124 + t1224 * t930;
t917 = t1224 * t1083 + t1229 * t931;
t916 = -t1229 * t1083 + t1224 * t931;
t915 = -pkin(2) * t1003 - t1244;
t914 = -t1223 * t972 + t1228 * t973;
t913 = t1223 * t973 + t1228 * t972;
t911 = -t1221 * t1317 - t1226 * t966;
t909 = -t1221 * t966 + t1226 * t1317;
t905 = t1224 * t1207 + t1229 * t914;
t904 = -t1229 * t1207 + t1224 * t914;
t903 = -t1222 * t958 + t1227 * t961;
t902 = -t1222 * t956 + t1227 * t957;
t901 = t1222 * t961 + t1227 * t958;
t900 = t1222 * t957 + t1227 * t956;
t899 = -pkin(2) * t982 - t1240;
t898 = pkin(6) * t1017 - (-pkin(2) * t1229 - pkin(7) * t1224 - pkin(1)) * t1032;
t897 = -pkin(2) * t929 - t1307;
t894 = -pkin(7) * t1003 + t1228 * t1001 - t1223 * t949;
t886 = -t1223 * t935 + t1228 * t937;
t885 = -t1223 * t934 + t1228 * t936;
t884 = t1223 * t937 + t1228 * t935;
t883 = t1223 * t936 + t1228 * t934;
t882 = -pkin(7) * t982 - t1223 * t945 + t1228 * t990;
t880 = t1223 * t933 + t1228 * t932;
t877 = t1223 * t926 + t1299;
t874 = t1223 * t920 + t1228 * t919;
t872 = t1224 * t1054 + t1229 * t878;
t871 = -t1229 * t1054 + t1224 * t878;
t870 = -t1224 * t967 + t1229 * t886;
t869 = t1224 * t970 + t1229 * t885;
t868 = t1224 * t886 + t1229 * t967;
t867 = t1224 * t885 - t1229 * t970;
t866 = t1224 * t1317 + t1229 * t881;
t865 = t1224 * t881 - t1229 * t1317;
t863 = -t1222 * t909 + t1227 * t911;
t861 = t1222 * t911 + t1227 * t909;
t860 = pkin(1) * t947 + t1248;
t859 = -t1223 * t901 + t1228 * t903;
t858 = -t1223 * t900 + t1228 * t902;
t857 = t1223 * t903 + t1228 * t901;
t856 = t1223 * t902 + t1228 * t900;
t855 = pkin(1) * t942 + t1249;
t854 = t1229 * t859 + t1265;
t853 = t1229 * t858 - t1265;
t852 = t1224 * t859 - t1263;
t851 = t1224 * t858 + t1263;
t850 = t1224 * t966 + t1229 * t875;
t849 = t1224 * t875 - t1229 * t966;
t848 = -pkin(2) * t877 - t1308;
t844 = -pkin(6) * t947 - t1224 * t915 + t1229 * t894;
t841 = -pkin(6) * t942 - t1224 * t899 + t1229 * t882;
t840 = -pkin(1) * t1003 + pkin(6) * t948 + t1224 * t894 + t1229 * t915;
t836 = -pkin(7) * t929 - t1223 * t892 + t1228 * t896;
t833 = -pkin(7) * t877 - pkin(8) * t1299 - t1223 * t907;
t832 = -pkin(1) * t982 + pkin(6) * t943 + t1224 * t882 + t1229 * t899;
t828 = -pkin(2) * t880 - t1233;
t825 = -t1223 * t861 + t1228 * t863;
t824 = t1223 * t864 + t1228 * t862;
t823 = t1223 * t863 + t1228 * t861;
t821 = t1224 * t1040 + t1229 * t825;
t820 = -t1229 * t1040 + t1224 * t825;
t819 = t1224 * t1023 + t1229 * t826;
t818 = -t1229 * t1023 + t1224 * t826;
t817 = pkin(1) * t916 + t1250;
t816 = -pkin(2) * t874 - t1235;
t815 = -pkin(6) * t916 - t1224 * t897 + t1229 * t836;
t812 = pkin(1) * t871 + t1238;
t811 = -pkin(1) * t929 + pkin(6) * t917 + t1224 * t836 + t1229 * t897;
t810 = -pkin(2) * t824 - t1267;
t809 = -pkin(7) * t880 - t1223 * t835 + t1228 * t843;
t808 = -pkin(6) * t871 - t1224 * t848 + t1229 * t833;
t807 = -pkin(7) * t874 - t1223 * t830 + t1228 * t838;
t806 = -pkin(1) * t877 + pkin(6) * t872 + t1224 * t833 + t1229 * t848;
t801 = pkin(1) * t865 + t1256;
t799 = t1223 * t814 + t1228 * t813;
t795 = t1224 * t977 + t1229 * t800;
t794 = t1224 * t800 - t1229 * t977;
t793 = pkin(1) * t849 + t1257;
t790 = -pkin(6) * t865 - t1224 * t828 + t1229 * t809;
t789 = -pkin(1) * t880 + pkin(6) * t866 + t1224 * t809 + t1229 * t828;
t788 = -pkin(6) * t849 - t1224 * t816 + t1229 * t807;
t787 = -pkin(1) * t874 + pkin(6) * t850 + t1224 * t807 + t1229 * t816;
t786 = -pkin(2) * t799 - t1268;
t785 = -pkin(7) * t824 - t1223 * t803 + t1228 * t805;
t784 = pkin(1) * t818 + t1251;
t783 = -pkin(7) * t799 - t1223 * t792 + t1228 * t797;
t782 = -pkin(6) * t818 - t1224 * t810 + t1229 * t785;
t781 = -pkin(1) * t824 + pkin(6) * t819 + t1224 * t785 + t1229 * t810;
t780 = pkin(1) * t794 + t1258;
t779 = -pkin(6) * t794 - t1224 * t786 + t1229 * t783;
t778 = -pkin(1) * t799 + pkin(6) * t795 + t1224 * t783 + t1229 * t786;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, qJDD(1), -t1201, t1200, 0, 0, 0, 0, 0, 0, 0, t1217, t1099, t1100, 0, -t1072, t1136, t1126, t1141, t1135, t1139, 0, t1021, t1020, t993, t940, t985, t928, t1012, t984, t1013, t1026, t855, t860, t817, t812, t857, t823, t883, t856, t884, t913, t793, t801, t784, t780; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, -t1192, 0, t1193, 0, t1259, -t1172, -t1241, -pkin(5) * t1241, 0, 0, t1131, 0, -t1242, 0, t1329, t1330, t1327, pkin(5) * t1327 + pkin(6) * t1280 + t1230 * t1071, t1230 * t1111 + t1225 * t1113, t1230 * t1081 + t1225 * t1082, t1230 * t1119 + t1225 * t1121, t1230 * t1110 + t1225 * t1112, t1230 * t1118 + t1225 * t1120, t1230 * t1151 + t1225 * t1152, t1225 * t975 + t1230 * t954 - pkin(5) * (t1225 * t1091 - t1230 * t1093), t1225 * t976 + t1230 * t955 - pkin(5) * (t1225 * t1092 - t1230 * t1094), t1225 * t1019 + t1230 * t1018 - pkin(5) * (t1225 * t1128 - t1230 * t1130), t1225 * t924 + t1230 * t898 - pkin(5) * (t1225 * t1016 - t1230 * t1017), t1225 * t963 + t1230 * t960, t1225 * t922 + t1230 * t921, t1225 * t952 + t1230 * t950, t1225 * t962 + t1230 * t959, t1225 * t953 + t1230 * t951, t1230 * t1024 + t1225 * t1025, t1225 * t841 + t1230 * t832 - pkin(5) * (t1225 * t942 - t1230 * t943), t1225 * t844 + t1230 * t840 - pkin(5) * (t1225 * t947 - t1230 * t948), t1225 * t815 + t1230 * t811 - pkin(5) * (t1225 * t916 - t1230 * t917), t1225 * t808 + t1230 * t806 - pkin(5) * (t1225 * t871 - t1230 * t872), t1225 * t854 + t1230 * t852, t1225 * t821 + t1230 * t820, t1225 * t869 + t1230 * t867, t1225 * t853 + t1230 * t851, t1225 * t870 + t1230 * t868, t1225 * t905 + t1230 * t904, t1225 * t788 + t1230 * t787 - pkin(5) * (t1225 * t849 - t1230 * t850), t1225 * t790 + t1230 * t789 - pkin(5) * (t1225 * t865 - t1230 * t866), t1225 * t782 + t1230 * t781 - pkin(5) * (t1225 * t818 - t1230 * t819), t1225 * t779 + t1230 * t778 - pkin(5) * (t1225 * t794 - t1230 * t795); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, -t1193, 0, -t1192, 0, t1172, t1259, t1252, pkin(5) * t1252, 0, 0, t1242, 0, t1131, 0, -t1330, t1329, t1328, pkin(5) * t1328 - pkin(6) * t1273 + t1225 * t1071, t1225 * t1111 - t1230 * t1113, t1225 * t1081 - t1230 * t1082, t1225 * t1119 - t1230 * t1121, t1225 * t1110 - t1230 * t1112, t1225 * t1118 - t1230 * t1120, t1225 * t1151 - t1230 * t1152, -t1230 * t975 + t1225 * t954 + pkin(5) * (t1230 * t1091 + t1225 * t1093), -t1230 * t976 + t1225 * t955 + pkin(5) * (t1230 * t1092 + t1225 * t1094), -t1230 * t1019 + t1225 * t1018 + pkin(5) * (t1230 * t1128 + t1225 * t1130), -t1230 * t924 + t1225 * t898 + pkin(5) * (t1230 * t1016 + t1225 * t1017), t1225 * t960 - t1230 * t963, t1225 * t921 - t1230 * t922, t1225 * t950 - t1230 * t952, t1225 * t959 - t1230 * t962, t1225 * t951 - t1230 * t953, t1225 * t1024 - t1230 * t1025, -t1230 * t841 + t1225 * t832 + pkin(5) * (t1225 * t943 + t1230 * t942), -t1230 * t844 + t1225 * t840 + pkin(5) * (t1225 * t948 + t1230 * t947), -t1230 * t815 + t1225 * t811 + pkin(5) * (t1225 * t917 + t1230 * t916), -t1230 * t808 + t1225 * t806 + pkin(5) * (t1225 * t872 + t1230 * t871), t1225 * t852 - t1230 * t854, t1225 * t820 - t1230 * t821, t1225 * t867 - t1230 * t869, t1225 * t851 - t1230 * t853, t1225 * t868 - t1230 * t870, t1225 * t904 - t1230 * t905, -t1230 * t788 + t1225 * t787 + pkin(5) * (t1225 * t850 + t1230 * t849), -t1230 * t790 + t1225 * t789 + pkin(5) * (t1225 * t866 + t1230 * t865), -t1230 * t782 + t1225 * t781 + pkin(5) * (t1225 * t819 + t1230 * t818), -t1230 * t779 + t1225 * t778 + pkin(5) * (t1225 * t795 + t1230 * t794); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1232, 0, 0, -g(1), t1201, 0, 0, 0, -t1184, 0, -t1181, 0, t1318, t1161, t1075, pkin(6) * t1075, t1113, t1082, t1121, t1112, t1120, t1152, t975, t976, t1019, t924, t963, t922, t952, t962, t953, t1025, t841, t844, t815, t808, t854, t821, t869, t853, t870, t905, t788, t790, t782, t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1232, 0, qJDD(1), 0, g(1), 0, -t1200, 0, 0, 0, t1181, 0, -t1184, 0, -t1161, t1318, t1254, t1071, t1111, t1081, t1119, t1110, t1118, t1151, t954, t955, t1018, t898, t960, t921, t950, t959, t951, t1024, t832, t840, t811, t806, t852, t820, t867, t851, t868, t904, t787, t789, t781, t778; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1201, t1200, 0, 0, 0, 0, 0, 0, 0, t1217, t1099, t1100, 0, -t1072, t1136, t1126, t1141, t1135, t1139, 0, t1021, t1020, t993, t940, t985, t928, t1012, t984, t1013, t1026, t855, t860, t817, t812, t857, t823, t883, t856, t884, t913, t793, t801, t784, t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1217, 0, -t1310, 0, 0, -g(1), t1133, 0, t1149, t1127, t1145, t1148, t1143, t1171, t1065, t1066, t1032, pkin(7) * t1032, t987, t930, t1014, t986, t1015, t1027, t882, t894, t836, t833, t859, t825, t885, t858, t886, t914, t807, t809, t785, t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1310, 0, t1217, 0, g(1), 0, t1134, 0, t1199, -t1186, -t1282, -t1199, -t1275, -qJDD(3), t1061, t1062, 0, pkin(2) * t1032, -t1125, -t1124, -t1060, t1125, t1056, -t1216, t899, t915, t897, t848, -t1043, -t1040, -t970, t1043, t967, -t1207, t816, t828, t810, t786; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1217, -t1133, -t1134, 0, 0, t1136, t1126, t1141, t1135, t1139, 0, t1260, t1261, t1245, t1270, t985, t928, t1012, t984, t1013, t1026, t1249, t1248, t1250, t1238, t857, t823, t883, t856, t884, t913, t1257, t1256, t1251, t1258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1175, t1176, t1189, -t1203, t1196, t1203, 0, t1122, t1097, 0, t1048, t998, t1069, t1046, t1070, t1088, t990, t1001, t896, -pkin(8) * t925, t903, t863, t936, t902, t937, t973, t838, t843, t805, t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1266, t1174, t1194, t1237, t1190, -t1266, -t1122, 0, t1098, 0, t1047, t996, t1067, t1045, t1068, t1087, t945, t949, t892, t907, t901, t861, t934, t900, t935, t972, t830, t835, t803, t792; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1199, t1186, t1282, t1199, t1275, qJDD(3), -t1097, -t1098, 0, 0, t1125, t1124, t1060, -t1125, -t1056, t1216, t1240, t1244, t1307, t1308, t1043, t1040, t970, -t1043, -t967, t1207, t1235, t1233, t1267, t1268; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1080, -t1055, t1313, t1156, t1153, -t1156, 0, t1054, t991, 0, t961, t911, t1010, t957, t1011, t1029, t918, t923, t831, -pkin(9) * t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1294, t1312, t1154, -t1236, t1115, -t1294, -t1054, 0, t992, 0, t958, t909, t1008, t956, t1009, t1028, t887, t893, t827, t839; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1125, t1124, t1060, -t1125, -t1056, t1216, -t991, -t992, 0, 0, t1043, t1040, t970, -t1043, -t967, t1207, t1243, t1239, t908, t845; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t995, -t966, t1314, t1095, t1089, -t1095, 0, t977, t889, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1297, t1317, t1090, t994, t1036, -t1297, -t977, 0, t890, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1043, t1040, t970, -t1043, -t967, t1207, -t889, -t890, 0, 0;];
m_new_reg = t1;
