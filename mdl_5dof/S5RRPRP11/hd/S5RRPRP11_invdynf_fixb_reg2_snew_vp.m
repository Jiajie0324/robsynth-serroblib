% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRPRP11
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:14
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRPRP11_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP11_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP11_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRP11_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRP11_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRPRP11_invdynf_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:14:35
% EndTime: 2019-12-31 20:14:38
% DurationCPUTime: 2.51s
% Computational Cost: add. (4054->212), mult. (8534->196), div. (0->0), fcn. (4920->6), ass. (0->122)
t1497 = cos(qJ(2));
t1528 = qJD(1) * t1497;
t1483 = qJD(2) * t1528;
t1494 = sin(qJ(2));
t1513 = t1494 * qJDD(1);
t1460 = t1483 + t1513;
t1453 = qJDD(4) + t1460;
t1493 = sin(qJ(4));
t1496 = cos(qJ(4));
t1455 = t1493 * qJD(2) + t1496 * t1528;
t1457 = t1496 * qJD(2) - t1493 * t1528;
t1527 = t1457 * t1455;
t1425 = t1453 + t1527;
t1452 = t1457 ^ 2;
t1525 = t1494 * qJD(1);
t1478 = qJD(4) + t1525;
t1532 = t1478 ^ 2;
t1538 = -t1452 - t1532;
t1399 = t1493 * t1425 - t1496 * t1538;
t1482 = qJD(2) * t1525;
t1512 = t1497 * qJDD(1);
t1461 = -t1482 + t1512;
t1507 = t1496 * qJDD(2) - t1493 * t1461;
t1516 = qJD(4) + t1478;
t1415 = -t1516 * t1455 + t1507;
t1384 = t1494 * t1399 - t1497 * t1415;
t1401 = t1496 * t1425 + t1493 * t1538;
t1495 = sin(qJ(1));
t1498 = cos(qJ(1));
t1565 = t1495 * t1384 - t1498 * t1401;
t1564 = t1498 * t1384 + t1495 * t1401;
t1517 = -qJD(4) + t1478;
t1417 = t1517 * t1455 + t1507;
t1509 = -t1493 * qJDD(2) - t1496 * t1461;
t1504 = t1517 * t1457 + t1509;
t1535 = t1493 * t1417 + t1496 * t1504;
t1436 = t1455 ^ 2;
t1424 = t1452 + t1436;
t1533 = -t1496 * t1417 + t1493 * t1504;
t1554 = -t1497 * t1424 + t1494 * t1533;
t1561 = t1495 * t1554 - t1498 * t1535;
t1426 = t1453 - t1527;
t1537 = -t1532 - t1436;
t1547 = -t1493 * t1426 + t1496 * t1537;
t1503 = t1516 * t1457 - t1509;
t1542 = t1496 * t1426 + t1493 * t1537;
t1553 = t1494 * t1542 + t1497 * t1503;
t1560 = t1495 * t1553 - t1498 * t1547;
t1559 = t1495 * t1535 + t1498 * t1554;
t1558 = t1495 * t1547 + t1498 * t1553;
t1386 = t1497 * t1399 + t1494 * t1415;
t1555 = -t1494 * t1424 - t1497 * t1533;
t1552 = t1494 * t1503 - t1497 * t1542;
t1500 = qJD(1) ^ 2;
t1520 = t1497 * t1500;
t1476 = t1494 * t1520;
t1467 = t1476 + qJDD(2);
t1499 = qJD(2) ^ 2;
t1490 = t1497 ^ 2;
t1526 = t1490 * t1500;
t1473 = -t1499 - t1526;
t1442 = t1494 * t1467 - t1497 * t1473;
t1462 = -0.2e1 * t1482 + t1512;
t1546 = t1495 * t1442 - t1498 * t1462;
t1545 = t1498 * t1442 + t1495 * t1462;
t1468 = qJDD(2) - t1476;
t1489 = t1494 ^ 2;
t1472 = -t1489 * t1500 - t1499;
t1443 = t1497 * t1468 + t1494 * t1472;
t1459 = 0.2e1 * t1483 + t1513;
t1544 = t1495 * t1443 + t1498 * t1459;
t1543 = t1498 * t1443 - t1495 * t1459;
t1470 = t1495 * g(1) - t1498 * g(2);
t1505 = -qJDD(1) * pkin(1) - t1470;
t1531 = 2 * qJD(3);
t1536 = pkin(2) * t1482 - (t1460 + t1483) * qJ(3) - t1525 * t1531 + t1505;
t1530 = t1497 * g(3);
t1529 = t1500 * pkin(6);
t1469 = pkin(3) * t1525 - qJD(2) * pkin(7);
t1396 = -t1469 * t1525 + (-pkin(3) * t1490 - pkin(6)) * t1500 + (-pkin(2) - pkin(7)) * t1461 + t1536;
t1506 = -qJDD(2) * pkin(2) - t1499 * qJ(3) + qJDD(3) + t1530;
t1471 = -t1498 * g(1) - t1495 * g(2);
t1449 = -t1500 * pkin(1) + qJDD(1) * pkin(6) + t1471;
t1511 = t1500 * (-pkin(2) * t1497 - qJ(3) * t1494) + t1449;
t1404 = -qJDD(2) * pkin(7) + (t1460 - t1483) * pkin(3) + (-pkin(7) * t1520 + t1511) * t1494 + t1506;
t1376 = t1496 * t1396 + t1493 * t1404;
t1514 = t1489 + t1490;
t1510 = -t1493 * t1396 + t1496 * t1404;
t1437 = t1497 * t1467 + t1494 * t1473;
t1439 = t1494 * t1468 - t1497 * t1472;
t1486 = t1494 * g(3);
t1501 = -t1499 * pkin(2) + qJDD(2) * qJ(3) + t1511 * t1497 - t1486;
t1403 = t1461 * pkin(3) - pkin(7) * t1526 + (t1531 + t1469) * qJD(2) + t1501;
t1466 = t1514 * t1500;
t1465 = -t1495 * qJDD(1) - t1498 * t1500;
t1464 = t1498 * qJDD(1) - t1495 * t1500;
t1463 = t1514 * qJDD(1);
t1448 = -t1505 + t1529;
t1446 = t1497 * t1449 - t1486;
t1445 = -t1494 * t1449 - t1530;
t1435 = t1498 * t1463 - t1495 * t1466;
t1434 = t1495 * t1463 + t1498 * t1466;
t1432 = t1455 * pkin(4) - t1457 * qJ(5);
t1421 = t1511 * t1494 + t1506;
t1420 = qJD(2) * t1531 + t1501;
t1419 = -t1494 * t1445 + t1497 * t1446;
t1418 = t1497 * t1445 + t1494 * t1446;
t1409 = t1461 * pkin(2) + t1529 - t1536;
t1394 = t1497 * t1420 + t1494 * t1421;
t1393 = t1494 * t1420 - t1497 * t1421;
t1374 = t1503 * pkin(4) - qJ(5) * t1415 - 0.2e1 * qJD(5) * t1457 + t1403;
t1373 = -t1453 * pkin(4) - qJ(5) * t1532 + t1457 * t1432 + qJDD(5) - t1510;
t1371 = -pkin(4) * t1532 + t1453 * qJ(5) + 0.2e1 * qJD(5) * t1478 - t1455 * t1432 + t1376;
t1370 = t1496 * t1376 - t1493 * t1510;
t1369 = t1493 * t1376 + t1496 * t1510;
t1368 = t1494 * t1369 + t1497 * t1403;
t1367 = -t1497 * t1369 + t1494 * t1403;
t1366 = t1496 * t1371 + t1493 * t1373;
t1365 = t1493 * t1371 - t1496 * t1373;
t1364 = t1494 * t1365 + t1497 * t1374;
t1363 = -t1497 * t1365 + t1494 * t1374;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1465, -t1464, 0, -t1495 * t1470 + t1498 * t1471, 0, 0, 0, 0, 0, 0, -t1545, -t1543, t1435, t1498 * t1419 - t1495 * t1448, 0, 0, 0, 0, 0, 0, t1435, t1545, t1543, t1498 * t1394 - t1495 * t1409, 0, 0, 0, 0, 0, 0, t1558, -t1564, t1559, t1498 * t1368 + t1495 * t1370, 0, 0, 0, 0, 0, 0, t1558, t1559, t1564, t1498 * t1364 + t1495 * t1366; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1464, t1465, 0, t1498 * t1470 + t1495 * t1471, 0, 0, 0, 0, 0, 0, -t1546, -t1544, t1434, t1495 * t1419 + t1498 * t1448, 0, 0, 0, 0, 0, 0, t1434, t1546, t1544, t1495 * t1394 + t1498 * t1409, 0, 0, 0, 0, 0, 0, t1560, -t1565, t1561, t1495 * t1368 - t1498 * t1370, 0, 0, 0, 0, 0, 0, t1560, t1561, t1565, t1495 * t1364 - t1498 * t1366; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1437, -t1439, 0, t1418, 0, 0, 0, 0, 0, 0, 0, -t1437, t1439, t1393, 0, 0, 0, 0, 0, 0, t1552, t1386, t1555, t1367, 0, 0, 0, 0, 0, 0, t1552, t1555, -t1386, t1363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1500, -qJDD(1), 0, t1471, 0, 0, 0, 0, 0, 0, -t1442, -t1443, t1463, t1419, 0, 0, 0, 0, 0, 0, t1463, t1442, t1443, t1394, 0, 0, 0, 0, 0, 0, t1553, -t1384, t1554, t1368, 0, 0, 0, 0, 0, 0, t1553, t1554, t1384, t1364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1500, 0, t1470, 0, 0, 0, 0, 0, 0, t1462, -t1459, t1466, t1448, 0, 0, 0, 0, 0, 0, t1466, -t1462, t1459, t1409, 0, 0, 0, 0, 0, 0, -t1547, t1401, -t1535, -t1370, 0, 0, 0, 0, 0, 0, -t1547, -t1535, -t1401, -t1366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1437, -t1439, 0, t1418, 0, 0, 0, 0, 0, 0, 0, -t1437, t1439, t1393, 0, 0, 0, 0, 0, 0, t1552, t1386, t1555, t1367, 0, 0, 0, 0, 0, 0, t1552, t1555, -t1386, t1363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1473, -t1468, t1512, t1446, 0, 0, 0, 0, 0, 0, t1512, -t1473, t1468, t1420, 0, 0, 0, 0, 0, 0, t1503, t1415, -t1424, t1403, 0, 0, 0, 0, 0, 0, t1503, -t1424, -t1415, t1374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1467, t1472, -t1513, t1445, 0, 0, 0, 0, 0, 0, -t1513, -t1467, -t1472, -t1421, 0, 0, 0, 0, 0, 0, -t1542, t1399, -t1533, -t1369, 0, 0, 0, 0, 0, 0, -t1542, -t1533, -t1399, -t1365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1462, t1459, -t1466, -t1448, 0, 0, 0, 0, 0, 0, -t1466, t1462, -t1459, -t1409, 0, 0, 0, 0, 0, 0, t1547, -t1401, t1535, t1370, 0, 0, 0, 0, 0, 0, t1547, t1535, t1401, t1366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1466, t1462, -t1459, -t1409, 0, 0, 0, 0, 0, 0, t1547, -t1401, t1535, t1370, 0, 0, 0, 0, 0, 0, t1547, t1535, t1401, t1366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1512, t1473, -t1468, -t1420, 0, 0, 0, 0, 0, 0, -t1503, -t1415, t1424, -t1403, 0, 0, 0, 0, 0, 0, -t1503, t1424, t1415, -t1374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1513, t1467, t1472, t1421, 0, 0, 0, 0, 0, 0, t1542, -t1399, t1533, t1369, 0, 0, 0, 0, 0, 0, t1542, t1533, t1399, t1365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, -t1425, t1504, t1376, 0, 0, 0, 0, 0, 0, t1537, t1504, t1425, t1371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1426, t1538, -t1417, t1510, 0, 0, 0, 0, 0, 0, t1426, -t1417, -t1538, -t1373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1503, t1415, -t1424, t1403, 0, 0, 0, 0, 0, 0, t1503, -t1424, -t1415, t1374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, t1504, t1425, t1371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1503, -t1424, -t1415, t1374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1426, t1417, t1538, t1373;];
f_new_reg = t1;
