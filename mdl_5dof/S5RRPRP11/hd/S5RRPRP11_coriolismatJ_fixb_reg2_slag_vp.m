% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:14
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP11_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP11_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP11_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRPRP11_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:14:09
% EndTime: 2019-12-31 20:14:17
% DurationCPUTime: 4.18s
% Computational Cost: add. (2899->375), mult. (5538->441), div. (0->0), fcn. (4614->4), ass. (0->286)
t218 = sin(qJ(4));
t220 = cos(qJ(4));
t329 = t220 * qJ(5);
t162 = -t218 * pkin(4) + t329;
t152 = qJ(3) - t162;
t219 = sin(qJ(2));
t222 = -pkin(2) - pkin(7);
t331 = t219 * t222;
t221 = cos(qJ(2));
t359 = t221 / 0.2e1;
t372 = t152 * t359 + t331 / 0.2e1;
t363 = pkin(3) + pkin(6);
t371 = t218 * t363;
t324 = t222 * t221;
t332 = t219 * qJ(3);
t135 = -pkin(1) - t332 + t324;
t370 = t363 * t219;
t73 = t218 * t135 - t220 * t370;
t328 = t220 * t135;
t74 = t218 * t370 + t328;
t34 = (t73 * t218 + t74 * t220) * t219;
t239 = t162 * qJD(4) + t218 * qJD(5);
t358 = t219 * pkin(4);
t66 = t73 - t358;
t283 = -t73 / 0.2e1 + t66 / 0.2e1;
t63 = t328 + (qJ(5) + t371) * t219;
t284 = t63 / 0.2e1 - t74 / 0.2e1;
t7 = (t219 * qJ(5) / 0.2e1 + t284) * t220 + (-t358 / 0.2e1 + t283) * t218;
t352 = t7 * qJD(1);
t369 = t239 + t352;
t204 = t221 * qJD(2);
t181 = t218 * t204;
t215 = t219 ^ 2;
t217 = t221 ^ 2;
t327 = t220 * t217;
t148 = t220 * t215 - t327;
t302 = t148 * qJD(1);
t368 = t302 - t181;
t292 = t219 * qJD(4);
t275 = t220 * t292;
t367 = t302 + t275;
t293 = t219 * qJD(2);
t214 = t218 ^ 2;
t216 = t220 ^ 2;
t175 = t214 - t216;
t294 = t219 * qJD(1);
t326 = t220 * t221;
t366 = 0.2e1 * t218 * (-qJD(4) + t294) * t326 + t175 * t293;
t365 = pkin(4) / 0.2e1;
t208 = t221 * pkin(6);
t210 = t221 * pkin(3);
t167 = t208 + t210;
t206 = t221 * qJ(5);
t188 = t218 * t206;
t190 = pkin(4) * t326;
t311 = t188 + t190;
t96 = t167 + t311;
t364 = t96 / 0.2e1;
t132 = t162 * t221;
t362 = t132 / 0.2e1;
t325 = t221 * qJ(3);
t163 = t219 * pkin(2) - t325;
t141 = t219 * pkin(7) + t163;
t361 = t141 / 0.2e1;
t360 = -t221 / 0.2e1;
t121 = t220 * t141;
t150 = t167 * t218;
t76 = t121 + t150;
t69 = t206 + t76;
t209 = t221 * pkin(4);
t151 = t167 * t220;
t335 = t218 * t141;
t75 = t151 - t335;
t71 = -t209 - t75;
t161 = pkin(4) * t220 + t218 * qJ(5);
t95 = (-t161 - t363) * t219;
t3 = t63 * t69 + t66 * t71 + t96 * t95;
t357 = t3 * qJD(1);
t4 = t96 * t132 - t63 * t73 + t66 * t74;
t356 = t4 * qJD(1);
t355 = t63 * t219;
t354 = t63 * t220;
t353 = t69 * t218;
t351 = t71 * t220;
t350 = t73 * t219;
t349 = t74 * t219;
t348 = t75 * t220;
t347 = t76 * t218;
t251 = t283 * t218;
t334 = t218 * t219;
t8 = -t219 * t329 / 0.2e1 + t334 * t365 + t284 * t220 + t251;
t346 = t8 * qJD(4);
t9 = (t221 * t69 - t355) * t220 + (-t219 * t66 + t221 * t71) * t218;
t345 = t9 * qJD(1);
t344 = t96 * t220;
t343 = qJ(3) * t218;
t333 = t218 * t221;
t10 = -t63 * t333 + (t218 * t74 + (t66 - t73) * t220) * t221;
t342 = t10 * qJD(1);
t11 = t76 * t326 - t75 * t333 - t34;
t341 = t11 * qJD(1);
t12 = -t167 * t370 - t73 * t75 + t74 * t76;
t340 = t12 * qJD(1);
t13 = t69 * t219 + t63 * t221 + (-t219 * t96 + t221 * t95) * t218;
t339 = t13 * qJD(1);
t338 = t132 * t218;
t14 = (t95 * t220 - t66) * t221 + (-t71 - t344) * t219;
t337 = t14 * qJD(1);
t336 = t152 * t220;
t280 = t363 * t221;
t22 = -t73 * t221 + (t75 + (-t280 - t167) * t220) * t219;
t330 = t22 * qJD(1);
t23 = t74 * t221 - t167 * t334 + (-t218 * t280 + t76) * t219;
t323 = t23 * qJD(1);
t26 = -t349 + (t132 * t220 - t96 * t218) * t221;
t322 = t26 * qJD(1);
t27 = -t350 + (t338 + t344) * t221;
t321 = t27 * qJD(1);
t28 = (t66 * t218 + t354) * t219;
t320 = t28 * qJD(1);
t319 = t34 * qJD(1);
t40 = t96 * t333 + t355;
t318 = t40 * qJD(1);
t41 = t167 * t326 - t350;
t317 = t41 * qJD(1);
t42 = -t167 * t333 - t349;
t316 = t42 * qJD(1);
t315 = t73 * qJD(4);
t248 = -t221 * pkin(2) - t332;
t153 = -pkin(1) + t248;
t83 = t153 * t221 + t163 * t219;
t314 = t83 * qJD(1);
t84 = -t153 * t219 + t163 * t221;
t313 = t84 * qJD(1);
t108 = -t335 / 0.2e1;
t312 = t108 + t151 / 0.2e1;
t176 = t217 - t215;
t310 = qJD(3) * t219;
t309 = qJD(3) * t220;
t308 = qJD(4) * t220;
t307 = qJD(4) * t222;
t118 = (t214 + t216) * t221 * t219;
t306 = t118 * qJD(1);
t259 = t216 / 0.2e1 - t214 / 0.2e1;
t136 = t259 * t221;
t305 = t136 * qJD(4);
t145 = t176 * t218;
t304 = t145 * qJD(1);
t301 = t152 * qJD(2);
t299 = t175 * qJD(4);
t298 = t176 * qJD(1);
t297 = t215 * qJD(1);
t296 = t215 * qJD(3);
t201 = t218 * qJD(2);
t202 = t219 * qJD(5);
t203 = t220 * qJD(2);
t291 = t220 * qJD(5);
t290 = t221 * qJD(1);
t289 = t221 * qJD(3);
t288 = -t150 / 0.2e1 - t206;
t287 = pkin(1) * t294;
t286 = pkin(1) * t290;
t285 = pkin(6) * t293;
t282 = -t344 / 0.2e1 + t372 * t218;
t278 = t220 * t290;
t277 = t218 * t292;
t276 = t218 * t307;
t274 = t220 * t307;
t273 = t153 * t163 * qJD(1);
t272 = t153 * t294;
t271 = t218 * t294;
t183 = t219 * t204;
t182 = t219 * t290;
t185 = t218 * t308;
t270 = t220 * t296;
t184 = t218 * t203;
t269 = t218 * t291;
t268 = t220 * t294;
t267 = t219 * t309;
t266 = t221 * t291;
t264 = t161 * t359;
t262 = -t220 * t222 / 0.2e1;
t261 = -t325 / 0.2e1;
t260 = t208 / 0.2e1 + t210 / 0.2e1;
t212 = qJD(2) * qJ(3);
t236 = -t348 / 0.2e1 - t347 / 0.2e1;
t30 = t236 + t260;
t258 = t30 * qJD(1) + t212;
t119 = (-0.1e1 / 0.2e1 + t259) * t221;
t257 = t119 * qJD(1) + t184;
t92 = t136 * qJD(1) + t184;
t156 = t218 * qJD(1) * t327;
t87 = t136 * qJD(2) - t156;
t189 = qJD(4) + t294;
t255 = qJD(3) - t291;
t254 = t217 * t185;
t253 = t218 * t278;
t252 = t221 * t184;
t249 = 0.2e1 * t252;
t247 = -t351 + t353;
t245 = t347 + t348;
t244 = t219 * t262 + t220 * t261;
t110 = -t121 / 0.2e1;
t224 = (t264 + t364) * t218 + (-t132 / 0.2e1 + t372) * t220;
t17 = t110 + t224 + t288;
t81 = -t152 * t218 + t161 * t220;
t243 = -t17 * qJD(1) + t81 * qJD(2);
t140 = -t151 / 0.2e1;
t158 = -t218 * t331 / 0.2e1;
t229 = t220 * t264 - t152 * t333 / 0.2e1 + t158 + t344 / 0.2e1;
t19 = -t209 + t140 + (t362 + t361) * t218 + t229;
t80 = t161 * t218 + t336;
t242 = -t19 * qJD(1) - t80 * qJD(2);
t233 = t188 / 0.2e1 + t190 / 0.2e1 + t260;
t237 = -t353 / 0.2e1 + t351 / 0.2e1;
t21 = t233 + t237;
t241 = t21 * qJD(1) + t301;
t143 = t189 * t218;
t240 = t292 + t297;
t238 = -t69 * qJ(5) / 0.2e1 + t71 * t365;
t223 = t74 * t262 + (t354 / 0.2e1 + t251) * t222 + t152 * t362 + t161 * t364;
t2 = t223 + t238;
t235 = -t2 * qJD(1) - t161 * t301;
t234 = -t7 * qJD(4) - t218 * t202;
t109 = t121 / 0.2e1;
t65 = t109 + t244;
t232 = qJ(3) * t201 - t65 * qJD(1);
t64 = t158 + (t261 + t361) * t218;
t231 = -qJ(3) * t203 - t64 * qJD(1);
t25 = t209 / 0.2e1 + t282 + t312;
t230 = -t25 * qJD(1) + t152 * t203;
t112 = t221 * t143;
t195 = t214 * t217;
t147 = t216 * t217 - t195;
t90 = t147 * qJD(1) + t249;
t101 = t175 * qJD(2) + 0.2e1 * t253;
t228 = t148 * qJD(2) + t221 * t277;
t227 = -t147 * qJD(4) + t219 * t249;
t226 = t248 * qJD(2) + t289;
t155 = t215 + t195;
t225 = -t155 * qJD(1) + t252 - t292;
t213 = qJ(3) * qJD(3);
t205 = qJD(3) * t218;
t200 = pkin(6) * t204;
t194 = -t290 / 0.2e1;
t193 = t290 / 0.2e1;
t192 = t204 / 0.2e1;
t187 = t220 * t289;
t186 = t220 * t204;
t180 = t218 * t310;
t179 = t218 * t296;
t172 = t220 * t324;
t164 = t176 * qJD(2);
t154 = t189 * qJ(5);
t144 = t189 * t220;
t142 = qJD(4) * t359 + t182;
t130 = t240 * t220;
t129 = t220 * t297 - t181;
t128 = t240 * t218;
t127 = t218 * t297 + t186;
t126 = -t216 * qJD(2) + t253;
t120 = t214 * t359 + t216 * t360 + t360;
t114 = t189 * t326;
t113 = (t278 + t201) * t219;
t111 = (t218 * t290 - t203) * t219;
t103 = t118 * qJD(3);
t100 = -t216 * t183 - t254;
t99 = -t214 * t183 + t254;
t98 = -t277 + t304;
t97 = t186 - t304;
t94 = t220 * t112;
t89 = -t145 * qJD(2) - t221 * t275;
t88 = t216 * t182 + t305;
t85 = t214 * t182 - t305;
t72 = t74 * qJD(4);
t58 = t305 + (-t216 * t290 - t184) * t219;
t57 = -t305 + (-t214 * t290 + t184) * t219;
t44 = -t150 + t110 + t244;
t43 = t218 * t261 + t108 + t151 + t158;
t29 = -t236 + t260;
t24 = t335 / 0.2e1 + t140 - t209 / 0.2e1 + t282;
t20 = t233 - t237;
t18 = t338 / 0.2e1 + t209 + t229 + t312;
t16 = t109 + t224 - t288;
t1 = t223 - t238;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183, t164, 0, -t183, 0, 0, -pkin(1) * t293, -pkin(1) * t204, 0, 0, 0, 0, 0, t183, t164, -t183, 0, t84 * qJD(2) - t219 * t289, -t83 * qJD(2) + t296, (qJD(2) * t163 - t310) * t153, t99, -t227, t89, t100, t228, t183, t22 * qJD(2) + t42 * qJD(4) + t179, -t23 * qJD(2) - t41 * qJD(4) + t270, -t11 * qJD(2) + t103, t12 * qJD(2) - t34 * qJD(3), t99, t89, t227, t183, -t228, t100, t14 * qJD(2) + t26 * qJD(4) + t217 * t269 + t179, -t9 * qJD(2) - t10 * qJD(4) - t219 * t266 + t103, t13 * qJD(2) + t27 * qJD(4) + t155 * qJD(5) - t270, t3 * qJD(2) - t28 * qJD(3) + t4 * qJD(4) + t40 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, t298, t204, -t182, -t293, 0, -t200 - t287, t285 - t286, 0, 0, 0, -t204, t293, t182, t298, -t182, t226, t200 + t313, -t285 - t314, pkin(6) * t226 + t273, t57, -t366, t97, t58, t368, t142, t330 + (t172 + (-qJ(3) * t220 - t371) * t219) * qJD(2) + t187 + t43 * qJD(4), -t323 + (-t218 * t324 + (-t363 * t220 + t343) * t219) * qJD(2) - t218 * t289 + t44 * qJD(4), -qJD(2) * t245 - t341, t340 + (-qJ(3) * t370 + t222 * t245) * qJD(2) + t29 * qJD(3), t57, t97, t366, t142, -t368, t58, t337 + (t95 * t218 - t219 * t336 + t172) * qJD(2) + t187 + t18 * qJD(4) + t120 * qJD(5), -qJD(2) * t247 - t345 - t346, -t95 * t203 + t339 + t16 * qJD(4) + (-t152 * t293 + (t222 * qJD(2) + t255) * t221) * t218, t357 + (t95 * t152 + t222 * t247) * qJD(2) + t20 * qJD(3) + t1 * qJD(4) + t24 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, -t182, t297, t200 - t272, 0, 0, 0, 0, 0, 0, t127, t129, t306, t29 * qJD(2) - t319, 0, 0, 0, 0, 0, 0, t127, t306, -t129, t20 * qJD(2) - t320 + t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, t90, -t114, t87, t112, t192, t43 * qJD(2) + t316 - t72, t44 * qJD(2) + t315 - t317, 0, 0, -t87, -t114, -t90, t192, -t112, t87, t18 * qJD(2) + t322 - t72, -t8 * qJD(2) + qJD(4) * t311 - t266 - t342, t16 * qJD(2) + t202 - t315 + t321, t356 + t1 * qJD(2) + t8 * qJD(3) + (-t74 * pkin(4) - t73 * qJ(5)) * qJD(4) + t63 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120 * qJD(2) + t156, -t114, -t225, t24 * qJD(2) + t63 * qJD(4) + t318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t182, -t298, 0, t182, 0, 0, t287, t286, 0, 0, 0, 0, 0, -t182, -t298, t182, 0, -t313, t314, -t273, t85, 0.2e1 * t94, t98, t88, -t367, -t142, t64 * qJD(4) - t330, t65 * qJD(4) + t323, t341, t30 * qJD(3) - t340, t85, t98, -0.2e1 * t94, -t142, t367, t88, t19 * qJD(4) - t119 * qJD(5) - t337, t234 + t345, t17 * qJD(4) - t218 * t266 - t339, t21 * qJD(3) + t2 * qJD(4) + t25 * qJD(5) - t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t213, -t185, t299, 0, t185, 0, 0, qJ(3) * t308 + t205, -qJD(4) * t343 + t309, 0, t213, -t185, 0, -t299, 0, 0, t185, t80 * qJD(4) + t205 - t269, 0, -t81 * qJD(4) + t216 * qJD(5) - t309, (qJD(4) * t161 + t255) * t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t212, 0, 0, 0, 0, 0, 0, t201, t203, 0, t258, 0, 0, 0, 0, 0, 0, t201, 0, -t203, t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92, t101, -t143, t92, -t144, t194, -t231 - t276, -t232 - t274, 0, 0, -t92, -t143, -t101, t194, t144, t92, -t242 - t276, -t369, -t243 + t274, t239 * t222 - t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, -t143, -t126, -t230 + t276; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, -t297, t272, 0, 0, 0, 0, 0, 0, -t128, -t130, -t306, -t30 * qJD(2) + t319, 0, 0, 0, 0, 0, 0, -t128, -t306, t130, -t21 * qJD(2) - t234 + t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t212, 0, 0, 0, 0, 0, 0, -t201, -t203, 0, -t258, 0, 0, 0, 0, 0, 0, -t201, 0, t203, -t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t143, -t144, 0, 0, 0, 0, 0, 0, 0, 0, -t143, 0, t144, t369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, -t90, t113, -t87, -t111, t192, -t64 * qJD(2) + t180 - t316, -t65 * qJD(2) + t267 + t317, 0, 0, t87, t113, t90, t192, t111, -t87, -t19 * qJD(2) + t180 - t322, t7 * qJD(2) + t342, -t17 * qJD(2) + t202 - t267 - t321, qJ(5) * t202 - t2 * qJD(2) - t7 * qJD(3) - t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, -t101, t271, -t92, t268, t193, t231, t232, 0, 0, t92, t271, t101, t193, -t268, -t92, t242, t352, t243, t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271, t268, 0, 0, 0, 0, 0, 0, 0, 0, t271, 0, -t268, -t352; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119 * qJD(2) - t156, t113, t225, -qJ(5) * t292 - t25 * qJD(2) - t180 - t318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, t271, t126, t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, -t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
