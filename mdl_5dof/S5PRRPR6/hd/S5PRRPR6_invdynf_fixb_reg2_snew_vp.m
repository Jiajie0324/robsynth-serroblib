% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5PRRPR6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d2,d3,d5,theta1,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:33
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5PRRPR6_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRPR6_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRPR6_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRPR6_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRPR6_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5PRRPR6_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:33:44
% EndTime: 2019-12-05 16:33:47
% DurationCPUTime: 3.63s
% Computational Cost: add. (17510->241), mult. (36684->367), div. (0->0), fcn. (26655->12), ass. (0->206)
t1539 = sin(pkin(9));
t1542 = cos(pkin(9));
t1516 = t1539 * g(1) - t1542 * g(2);
t1543 = cos(pkin(5));
t1578 = t1543 * t1516;
t1535 = -g(3) + qJDD(1);
t1540 = sin(pkin(5));
t1579 = t1540 * t1535;
t1592 = t1578 + t1579;
t1549 = cos(qJ(3));
t1577 = t1549 * qJD(2);
t1525 = -qJD(5) + t1577;
t1591 = qJD(5) - t1525;
t1572 = qJD(3) * t1577;
t1546 = sin(qJ(3));
t1574 = t1546 * qJDD(2);
t1509 = t1572 + t1574;
t1538 = sin(pkin(10));
t1541 = cos(pkin(10));
t1488 = t1538 * qJDD(3) + t1541 * t1509;
t1583 = qJD(2) * t1546;
t1503 = -t1541 * qJD(3) + t1538 * t1583;
t1491 = t1503 * t1577;
t1468 = -t1488 + t1491;
t1528 = qJD(3) * t1583;
t1531 = t1549 * qJDD(2);
t1510 = t1531 - t1528;
t1505 = t1538 * qJD(3) + t1541 * t1583;
t1581 = t1505 * t1503;
t1471 = -t1510 - t1581;
t1590 = qJD(3) ^ 2;
t1545 = sin(qJ(5));
t1548 = cos(qJ(5));
t1473 = t1548 * t1503 + t1545 * t1505;
t1589 = t1473 ^ 2;
t1475 = -t1545 * t1503 + t1548 * t1505;
t1588 = t1475 ^ 2;
t1587 = t1503 ^ 2;
t1586 = t1505 ^ 2;
t1585 = t1525 ^ 2;
t1584 = -2 * qJD(4);
t1582 = t1475 * t1473;
t1534 = t1549 ^ 2;
t1551 = qJD(2) ^ 2;
t1580 = t1534 * t1551;
t1576 = qJD(5) + t1525;
t1517 = -t1542 * g(1) - t1539 * g(2);
t1547 = sin(qJ(2));
t1550 = cos(qJ(2));
t1472 = t1550 * t1517 + t1592 * t1547;
t1460 = -t1551 * pkin(2) + qJDD(2) * pkin(7) + t1472;
t1554 = -t1540 * t1516 + t1543 * t1535;
t1454 = t1549 * t1460 + t1546 * t1554;
t1533 = t1546 ^ 2;
t1575 = t1533 + t1534;
t1573 = t1505 * t1577;
t1507 = (-pkin(3) * t1549 - qJ(4) * t1546) * qJD(2);
t1437 = -t1590 * pkin(3) + qJDD(3) * qJ(4) + t1507 * t1577 + t1454;
t1568 = t1547 * t1517 - t1592 * t1550;
t1459 = -qJDD(2) * pkin(2) - t1551 * pkin(7) + t1568;
t1442 = (-t1509 - t1572) * qJ(4) + (-t1510 + t1528) * pkin(3) + t1459;
t1413 = t1541 * t1437 + t1538 * t1442 + t1503 * t1584;
t1571 = -qJDD(5) + t1510;
t1569 = -t1541 * qJDD(3) + t1538 * t1509;
t1570 = -t1545 * t1488 - t1548 * t1569;
t1412 = -t1538 * t1437 + t1541 * t1442 + t1505 * t1584;
t1403 = t1471 * pkin(4) + t1468 * pkin(8) + t1412;
t1489 = -pkin(4) * t1577 - t1505 * pkin(8);
t1406 = -t1587 * pkin(4) - t1569 * pkin(8) + t1489 * t1577 + t1413;
t1381 = t1548 * t1403 - t1545 * t1406;
t1382 = t1545 * t1403 + t1548 * t1406;
t1374 = t1548 * t1381 + t1545 * t1382;
t1375 = -t1545 * t1381 + t1548 * t1382;
t1364 = -t1538 * t1374 + t1541 * t1375;
t1486 = t1549 * t1554;
t1436 = qJDD(4) - t1486 - t1590 * qJ(4) - qJDD(3) * pkin(3) + (qJD(2) * t1507 + t1460) * t1546;
t1415 = t1569 * pkin(4) - t1587 * pkin(8) + t1505 * t1489 + t1436;
t1362 = t1549 * t1364 + t1546 * t1415;
t1363 = t1541 * t1374 + t1538 * t1375;
t1567 = t1362 * t1547 - t1363 * t1550;
t1425 = -t1576 * t1475 + t1570;
t1552 = -t1548 * t1488 + t1545 * t1569;
t1427 = t1576 * t1473 + t1552;
t1407 = t1545 * t1425 + t1548 * t1427;
t1408 = t1548 * t1425 - t1545 * t1427;
t1384 = -t1538 * t1407 + t1541 * t1408;
t1434 = -t1588 - t1589;
t1380 = t1549 * t1384 + t1546 * t1434;
t1383 = t1541 * t1407 + t1538 * t1408;
t1566 = t1380 * t1547 - t1383 * t1550;
t1392 = -t1538 * t1412 + t1541 * t1413;
t1386 = t1549 * t1392 + t1546 * t1436;
t1391 = t1541 * t1412 + t1538 * t1413;
t1565 = t1386 * t1547 - t1391 * t1550;
t1445 = -t1571 - t1582;
t1452 = -t1585 - t1589;
t1416 = t1548 * t1445 + t1545 * t1452;
t1417 = -t1545 * t1445 + t1548 * t1452;
t1400 = -t1538 * t1416 + t1541 * t1417;
t1424 = t1591 * t1475 - t1570;
t1388 = t1549 * t1400 + t1546 * t1424;
t1399 = t1541 * t1416 + t1538 * t1417;
t1564 = t1388 * t1547 - t1399 * t1550;
t1444 = t1571 - t1582;
t1457 = -t1585 - t1588;
t1420 = t1545 * t1444 + t1548 * t1457;
t1421 = t1548 * t1444 - t1545 * t1457;
t1405 = -t1538 * t1420 + t1541 * t1421;
t1426 = -t1591 * t1473 - t1552;
t1390 = t1549 * t1405 + t1546 * t1426;
t1404 = t1541 * t1420 + t1538 * t1421;
t1563 = t1390 * t1547 - t1404 * t1550;
t1453 = -t1546 * t1460 + t1486;
t1419 = -t1546 * t1453 + t1549 * t1454;
t1562 = t1419 * t1547 - t1459 * t1550;
t1466 = -t1569 - t1573;
t1441 = t1541 * t1466 - t1538 * t1468;
t1463 = -t1586 - t1587;
t1423 = t1549 * t1441 + t1546 * t1463;
t1440 = t1538 * t1466 + t1541 * t1468;
t1561 = t1423 * t1547 - t1440 * t1550;
t1478 = -t1580 - t1587;
t1447 = -t1538 * t1471 + t1541 * t1478;
t1465 = t1569 - t1573;
t1429 = t1549 * t1447 + t1546 * t1465;
t1446 = t1541 * t1471 + t1538 * t1478;
t1560 = t1429 * t1547 - t1446 * t1550;
t1470 = t1510 - t1581;
t1490 = -t1580 - t1586;
t1456 = t1541 * t1470 - t1538 * t1490;
t1467 = t1488 + t1491;
t1433 = t1549 * t1456 + t1546 * t1467;
t1455 = t1538 * t1470 + t1541 * t1490;
t1559 = t1433 * t1547 - t1455 * t1550;
t1558 = t1547 * t1472 - t1550 * t1568;
t1524 = t1546 * t1551 * t1549;
t1518 = qJDD(3) + t1524;
t1523 = -t1580 - t1590;
t1483 = -t1546 * t1518 + t1549 * t1523;
t1511 = t1531 - 0.2e1 * t1528;
t1557 = t1483 * t1547 + t1511 * t1550;
t1519 = -qJDD(3) + t1524;
t1522 = -t1533 * t1551 - t1590;
t1484 = t1549 * t1519 - t1546 * t1522;
t1508 = 0.2e1 * t1572 + t1574;
t1556 = t1484 * t1547 - t1508 * t1550;
t1512 = t1575 * qJDD(2);
t1515 = t1575 * t1551;
t1555 = t1512 * t1547 + t1515 * t1550;
t1553 = t1550 * qJDD(2) - t1547 * t1551;
t1514 = -t1547 * qJDD(2) - t1550 * t1551;
t1497 = t1553 * t1543;
t1496 = t1514 * t1543;
t1495 = t1553 * t1540;
t1494 = t1514 * t1540;
t1482 = t1546 * t1519 + t1549 * t1522;
t1481 = t1549 * t1518 + t1546 * t1523;
t1479 = t1550 * t1512 - t1547 * t1515;
t1477 = t1555 * t1543;
t1476 = t1555 * t1540;
t1462 = t1550 * t1484 + t1547 * t1508;
t1461 = t1550 * t1483 - t1547 * t1511;
t1451 = -t1540 * t1482 + t1556 * t1543;
t1450 = -t1540 * t1481 + t1557 * t1543;
t1449 = t1543 * t1482 + t1556 * t1540;
t1448 = t1543 * t1481 + t1557 * t1540;
t1443 = t1550 * t1472 + t1547 * t1568;
t1432 = t1546 * t1456 - t1549 * t1467;
t1431 = t1540 ^ 2 * t1516 + (t1558 - t1579) * t1543;
t1430 = t1543 ^ 2 * t1535 + (t1558 - t1578) * t1540;
t1428 = t1546 * t1447 - t1549 * t1465;
t1422 = t1546 * t1441 - t1549 * t1463;
t1418 = t1549 * t1453 + t1546 * t1454;
t1414 = t1550 * t1433 + t1547 * t1455;
t1411 = t1550 * t1419 + t1547 * t1459;
t1410 = t1550 * t1429 + t1547 * t1446;
t1409 = t1550 * t1423 + t1547 * t1440;
t1402 = -t1540 * t1432 + t1559 * t1543;
t1401 = t1543 * t1432 + t1559 * t1540;
t1398 = -t1540 * t1428 + t1560 * t1543;
t1397 = t1543 * t1428 + t1560 * t1540;
t1396 = -t1540 * t1418 + t1562 * t1543;
t1395 = t1543 * t1418 + t1562 * t1540;
t1394 = -t1540 * t1422 + t1561 * t1543;
t1393 = t1543 * t1422 + t1561 * t1540;
t1389 = t1546 * t1405 - t1549 * t1426;
t1387 = t1546 * t1400 - t1549 * t1424;
t1385 = t1546 * t1392 - t1549 * t1436;
t1379 = t1546 * t1384 - t1549 * t1434;
t1378 = t1550 * t1390 + t1547 * t1404;
t1377 = t1550 * t1388 + t1547 * t1399;
t1376 = t1550 * t1386 + t1547 * t1391;
t1373 = -t1540 * t1389 + t1563 * t1543;
t1372 = t1543 * t1389 + t1563 * t1540;
t1371 = t1550 * t1380 + t1547 * t1383;
t1370 = -t1540 * t1387 + t1564 * t1543;
t1369 = t1543 * t1387 + t1564 * t1540;
t1368 = -t1540 * t1385 + t1565 * t1543;
t1367 = t1543 * t1385 + t1565 * t1540;
t1366 = -t1540 * t1379 + t1566 * t1543;
t1365 = t1543 * t1379 + t1566 * t1540;
t1361 = t1546 * t1364 - t1549 * t1415;
t1360 = t1550 * t1362 + t1547 * t1363;
t1359 = -t1540 * t1361 + t1567 * t1543;
t1358 = t1543 * t1361 + t1567 * t1540;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1539 * t1516 + t1542 * t1517, 0, 0, 0, 0, 0, 0, -t1539 * t1497 + t1542 * t1514, -t1539 * t1496 - t1542 * t1553, 0, -t1539 * t1431 + t1542 * t1443, 0, 0, 0, 0, 0, 0, -t1539 * t1450 + t1542 * t1461, -t1539 * t1451 + t1542 * t1462, -t1539 * t1477 + t1542 * t1479, -t1539 * t1396 + t1542 * t1411, 0, 0, 0, 0, 0, 0, -t1539 * t1398 + t1542 * t1410, -t1539 * t1402 + t1542 * t1414, -t1539 * t1394 + t1542 * t1409, -t1539 * t1368 + t1542 * t1376, 0, 0, 0, 0, 0, 0, -t1539 * t1370 + t1542 * t1377, -t1539 * t1373 + t1542 * t1378, -t1539 * t1366 + t1542 * t1371, -t1539 * t1359 + t1542 * t1360; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1542 * t1516 + t1539 * t1517, 0, 0, 0, 0, 0, 0, t1542 * t1497 + t1539 * t1514, t1542 * t1496 - t1539 * t1553, 0, t1542 * t1431 + t1539 * t1443, 0, 0, 0, 0, 0, 0, t1542 * t1450 + t1539 * t1461, t1542 * t1451 + t1539 * t1462, t1542 * t1477 + t1539 * t1479, t1542 * t1396 + t1539 * t1411, 0, 0, 0, 0, 0, 0, t1542 * t1398 + t1539 * t1410, t1542 * t1402 + t1539 * t1414, t1542 * t1394 + t1539 * t1409, t1542 * t1368 + t1539 * t1376, 0, 0, 0, 0, 0, 0, t1542 * t1370 + t1539 * t1377, t1542 * t1373 + t1539 * t1378, t1542 * t1366 + t1539 * t1371, t1542 * t1359 + t1539 * t1360; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1535, 0, 0, 0, 0, 0, 0, t1495, t1494, 0, t1430, 0, 0, 0, 0, 0, 0, t1448, t1449, t1476, t1395, 0, 0, 0, 0, 0, 0, t1397, t1401, t1393, t1367, 0, 0, 0, 0, 0, 0, t1369, t1372, t1365, t1358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1517, 0, 0, 0, 0, 0, 0, t1514, -t1553, 0, t1443, 0, 0, 0, 0, 0, 0, t1461, t1462, t1479, t1411, 0, 0, 0, 0, 0, 0, t1410, t1414, t1409, t1376, 0, 0, 0, 0, 0, 0, t1377, t1378, t1371, t1360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1516, 0, 0, 0, 0, 0, 0, t1497, t1496, 0, t1431, 0, 0, 0, 0, 0, 0, t1450, t1451, t1477, t1396, 0, 0, 0, 0, 0, 0, t1398, t1402, t1394, t1368, 0, 0, 0, 0, 0, 0, t1370, t1373, t1366, t1359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1535, 0, 0, 0, 0, 0, 0, t1495, t1494, 0, t1430, 0, 0, 0, 0, 0, 0, t1448, t1449, t1476, t1395, 0, 0, 0, 0, 0, 0, t1397, t1401, t1393, t1367, 0, 0, 0, 0, 0, 0, t1369, t1372, t1365, t1358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1551, -qJDD(2), 0, t1472, 0, 0, 0, 0, 0, 0, t1483, t1484, t1512, t1419, 0, 0, 0, 0, 0, 0, t1429, t1433, t1423, t1386, 0, 0, 0, 0, 0, 0, t1388, t1390, t1380, t1362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1551, 0, -t1568, 0, 0, 0, 0, 0, 0, t1511, -t1508, t1515, -t1459, 0, 0, 0, 0, 0, 0, -t1446, -t1455, -t1440, -t1391, 0, 0, 0, 0, 0, 0, -t1399, -t1404, -t1383, -t1363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1554, 0, 0, 0, 0, 0, 0, t1481, t1482, 0, t1418, 0, 0, 0, 0, 0, 0, t1428, t1432, t1422, t1385, 0, 0, 0, 0, 0, 0, t1387, t1389, t1379, t1361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1523, t1519, t1531, t1454, 0, 0, 0, 0, 0, 0, t1447, t1456, t1441, t1392, 0, 0, 0, 0, 0, 0, t1400, t1405, t1384, t1364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1518, t1522, -t1574, t1453, 0, 0, 0, 0, 0, 0, -t1465, -t1467, -t1463, -t1436, 0, 0, 0, 0, 0, 0, -t1424, -t1426, -t1434, -t1415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1511, t1508, -t1515, t1459, 0, 0, 0, 0, 0, 0, t1446, t1455, t1440, t1391, 0, 0, 0, 0, 0, 0, t1399, t1404, t1383, t1363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1478, t1470, t1466, t1413, 0, 0, 0, 0, 0, 0, t1417, t1421, t1408, t1375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1471, t1490, t1468, t1412, 0, 0, 0, 0, 0, 0, t1416, t1420, t1407, t1374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1465, t1467, t1463, t1436, 0, 0, 0, 0, 0, 0, t1424, t1426, t1434, t1415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1452, t1444, t1425, t1382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1445, t1457, t1427, t1381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1424, t1426, t1434, t1415;];
f_new_reg = t1;
