% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPPRR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5,theta2,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:45
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPPRR4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR4_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR4_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPPRR4_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPPRR4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPPRR4_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:45:32
% EndTime: 2019-12-05 17:45:51
% DurationCPUTime: 19.55s
% Computational Cost: add. (106460->712), mult. (296661->996), div. (0->0), fcn. (211029->10), ass. (0->490)
t1190 = sin(qJ(5));
t1187 = sin(pkin(8));
t1186 = sin(pkin(9));
t1188 = cos(pkin(9));
t1191 = sin(qJ(4));
t1194 = cos(qJ(4));
t1226 = t1186 * t1194 + t1188 * t1191;
t1215 = t1226 * t1187;
t1129 = qJD(1) * t1215;
t1265 = t1187 * t1188;
t1268 = t1186 * t1187;
t1130 = (-t1191 * t1268 + t1194 * t1265) * qJD(1);
t1193 = cos(qJ(5));
t1077 = t1193 * t1129 + t1130 * t1190;
t1079 = -t1129 * t1190 + t1130 * t1193;
t1022 = t1079 * t1077;
t1189 = cos(pkin(8));
t1256 = t1189 * qJDD(1);
t1173 = -qJDD(4) + t1256;
t1163 = -qJDD(5) + t1173;
t1309 = -t1022 - t1163;
t1315 = t1190 * t1309;
t1090 = t1130 * t1129;
t1306 = -t1090 - t1173;
t1314 = t1191 * t1306;
t1313 = t1193 * t1309;
t1312 = t1194 * t1306;
t1192 = sin(qJ(1));
t1195 = cos(qJ(1));
t1165 = g(2) * t1195 + g(3) * t1192;
t1196 = qJD(1) ^ 2;
t1209 = -qJ(2) * t1196 + qJDD(2) - t1165;
t1299 = pkin(2) * t1189;
t1231 = -qJ(3) * t1187 - t1299;
t1224 = -pkin(1) + t1231;
t1311 = -0.2e1 * qJD(1) * qJD(3) * t1187 + qJDD(1) * t1224 + t1209;
t1262 = t1189 * t1196;
t1288 = qJD(1) * t1189;
t1174 = -qJD(4) + t1288;
t1310 = (qJD(4) + t1174) * t1130;
t1178 = t1187 * qJDD(1);
t1244 = t1188 * t1178;
t1246 = t1186 * t1178;
t1088 = -qJD(4) * t1129 - t1191 * t1246 + t1194 * t1244;
t1212 = t1226 * t1178;
t1199 = qJD(4) * t1130 + t1212;
t1003 = -t1077 * qJD(5) + t1193 * t1088 - t1190 * t1199;
t1168 = -qJD(5) + t1174;
t1068 = t1077 * t1168;
t1308 = t1068 + t1003;
t1115 = t1129 * t1174;
t1046 = t1088 - t1115;
t1307 = t1088 + t1115;
t1239 = t1088 * t1190 + t1193 * t1199;
t967 = (qJD(5) + t1168) * t1079 + t1239;
t1075 = t1077 ^ 2;
t1076 = t1079 ^ 2;
t1305 = t1129 ^ 2;
t1126 = t1130 ^ 2;
t1162 = t1168 ^ 2;
t1172 = t1174 ^ 2;
t1304 = t1186 ^ 2;
t1303 = 2 * qJD(2);
t1164 = g(2) * t1192 - t1195 * g(3);
t1141 = -pkin(1) * t1196 + qJDD(1) * qJ(2) + t1164;
t1261 = t1231 * qJD(1) + t1303;
t1229 = t1261 * qJD(1) + t1141;
t1297 = g(1) * t1187;
t1082 = t1189 * t1229 - t1297;
t1222 = t1311 * t1188;
t1223 = -pkin(3) * t1189 - pkin(6) * t1265;
t1264 = t1187 * t1189;
t1183 = t1187 ^ 2;
t1298 = pkin(3) * t1183;
t1011 = t1223 * qJDD(1) + (-t1082 + (pkin(6) * t1264 - t1188 * t1298) * t1196) * t1186 + t1222;
t1027 = t1188 * t1082 + t1311 * t1186;
t1142 = t1223 * qJD(1);
t1267 = t1186 * t1196;
t1012 = t1142 * t1288 + (-pkin(6) * t1178 - t1267 * t1298) * t1186 + t1027;
t940 = -t1194 * t1011 + t1012 * t1191;
t941 = t1191 * t1011 + t1194 * t1012;
t889 = t1191 * t941 - t1194 * t940;
t1302 = pkin(3) * t889;
t1043 = -t1212 - t1310;
t996 = t1043 * t1191 - t1046 * t1194;
t1301 = pkin(3) * t996;
t1300 = pkin(2) * t1187;
t1296 = g(1) * t1189;
t1295 = qJDD(1) * pkin(1);
t1294 = t1186 * t889;
t1293 = t1188 * t889;
t1269 = t1183 * t1196;
t1170 = t1304 * t1269;
t1242 = qJDD(3) + t1296;
t1258 = qJDD(1) * t1186;
t1031 = -pkin(6) * t1170 + (pkin(3) * t1258 + t1141 + (t1142 * t1188 + t1261) * qJD(1)) * t1187 + t1242;
t1109 = -pkin(4) * t1174 - pkin(7) * t1130;
t965 = pkin(4) * t1199 - t1305 * pkin(7) + t1109 * t1130 + t1031;
t1292 = t1190 * t965;
t912 = pkin(4) * t1306 - t1046 * pkin(7) - t940;
t915 = -t1305 * pkin(4) - pkin(7) * t1199 + t1174 * t1109 + t941;
t871 = t1190 * t915 - t1193 * t912;
t872 = t1190 * t912 + t1193 * t915;
t836 = t1190 * t872 - t1193 * t871;
t1291 = t1191 * t836;
t1290 = t1193 * t965;
t1289 = t1194 * t836;
t1018 = -t1022 + t1163;
t1287 = t1018 * t1190;
t1286 = t1018 * t1193;
t1285 = t1031 * t1191;
t1284 = t1031 * t1194;
t1072 = -t1090 + t1173;
t1283 = t1072 * t1191;
t1282 = t1072 * t1194;
t1080 = t1187 * t1229 + t1242;
t1281 = t1080 * t1186;
t1280 = t1080 * t1188;
t1248 = t1188 * t1267;
t1152 = t1183 * t1248;
t1136 = -t1152 + t1256;
t1279 = t1136 * t1186;
t1278 = t1136 * t1188;
t1137 = -t1152 - t1256;
t1277 = t1137 * t1186;
t1276 = t1137 * t1188;
t1275 = t1168 * t1079;
t1274 = t1168 * t1190;
t1273 = t1168 * t1193;
t1272 = t1174 * t1130;
t1271 = t1174 * t1191;
t1270 = t1174 * t1194;
t1135 = -t1209 + t1295;
t1266 = t1187 * t1135;
t1263 = t1189 * t1135;
t1257 = qJDD(1) * t1188;
t837 = t1190 * t871 + t1193 * t872;
t808 = t1191 * t837 + t1289;
t835 = pkin(4) * t836;
t1255 = pkin(3) * t808 + t835;
t970 = -t1068 + t1003;
t906 = -t1190 * t967 - t1193 * t970;
t908 = t1190 * t970 - t1193 * t967;
t866 = t1191 * t908 + t1194 * t906;
t904 = pkin(4) * t906;
t1254 = pkin(3) * t866 + t904;
t1253 = t1187 * t1022;
t1252 = t1189 * t1022;
t1251 = t1187 * t1090;
t1250 = t1189 * t1090;
t1184 = t1188 ^ 2;
t1249 = t1184 * t1269;
t1247 = t1188 * t1262;
t1171 = t1187 * t1262;
t1245 = t1187 * t1256;
t1243 = t1135 + t1295;
t890 = t1191 * t940 + t1194 * t941;
t1240 = qJD(1) * t1303 + t1141;
t1026 = t1082 * t1186 - t1222;
t976 = t1026 * t1186 + t1188 * t1027;
t1112 = t1187 * t1240 + t1296;
t1113 = t1189 * t1240 - t1297;
t1054 = t1112 * t1187 + t1189 * t1113;
t1182 = t1187 * t1183;
t1238 = t1182 * t1248;
t1237 = t1186 * t1247;
t1236 = t1188 * t1171;
t1103 = -t1126 - t1172;
t1024 = t1103 * t1194 + t1283;
t1235 = pkin(3) * t1024 - t941;
t1015 = -t1162 - t1075;
t955 = t1015 * t1190 + t1313;
t1234 = pkin(4) * t955 - t871;
t1158 = qJDD(1) * t1192 + t1195 * t1196;
t1233 = pkin(5) * t1158 - g(1) * t1195;
t1232 = -pkin(2) * t1080 + qJ(3) * t976;
t1230 = t1183 * t1237;
t975 = -t1026 * t1188 + t1027 * t1186;
t1053 = t1112 * t1189 - t1113 * t1187;
t1228 = t1164 * t1195 - t1165 * t1192;
t1227 = -t1164 * t1192 - t1165 * t1195;
t1225 = qJDD(1) * t1195 - t1192 * t1196;
t1070 = -t1172 - t1305;
t1016 = t1070 * t1191 + t1312;
t1221 = pkin(3) * t1016 - t940;
t1051 = -t1076 - t1162;
t979 = t1051 * t1193 + t1287;
t1220 = pkin(4) * t979 - t872;
t1185 = t1189 ^ 2;
t1148 = (t1183 + t1185) * t1262;
t1219 = -t1148 * t1192 + t1195 * t1256;
t1218 = t1148 * t1195 + t1192 * t1256;
t1217 = t1247 - t1258;
t956 = t1015 * t1193 - t1315;
t897 = t1191 * t956 + t1194 * t955;
t1216 = pkin(3) * t897 + t1234;
t1180 = t1185 * t1196;
t1144 = -t1170 - t1180;
t1100 = t1144 * t1188 - t1277;
t1132 = t1217 * t1187;
t1214 = pkin(2) * t1132 + qJ(3) * t1100 - t1280;
t1147 = -t1180 - t1249;
t1101 = -t1147 * t1186 + t1278;
t1153 = t1186 * t1171;
t1133 = t1153 + t1244;
t1213 = -pkin(2) * t1133 + qJ(3) * t1101 + t1281;
t1211 = qJDD(1) * t1215;
t980 = -t1051 * t1190 + t1286;
t916 = t1191 * t980 + t1194 * t979;
t1210 = pkin(3) * t916 + t1220;
t1131 = (t1247 + t1258) * t1187;
t1134 = -t1153 + t1244;
t1087 = -t1131 * t1188 + t1134 * t1186;
t1138 = t1170 + t1249;
t1208 = pkin(2) * t1138 + qJ(3) * t1087 + t976;
t809 = t1194 * t837 - t1291;
t825 = -pkin(4) * t965 + pkin(7) * t837;
t793 = -pkin(3) * t965 + pkin(6) * t809 - pkin(7) * t1291 + t1194 * t825;
t796 = -pkin(6) * t808 - pkin(7) * t1289 - t1191 * t825;
t798 = -t1186 * t808 + t1188 * t809;
t1207 = -pkin(2) * t965 + qJ(3) * t798 + t1186 * t796 + t1188 * t793;
t999 = -t1075 - t1076;
t816 = -pkin(4) * t999 + pkin(7) * t908 + t837;
t818 = -pkin(7) * t906 - t836;
t868 = -t1191 * t906 + t1194 * t908;
t801 = -pkin(3) * t999 + pkin(6) * t868 + t1191 * t818 + t1194 * t816;
t803 = -pkin(6) * t866 - t1191 * t816 + t1194 * t818;
t831 = -t1186 * t866 + t1188 * t868;
t1206 = -pkin(2) * t999 + qJ(3) * t831 + t1186 * t803 + t1188 * t801;
t966 = (qJD(5) - t1168) * t1079 + t1239;
t883 = -pkin(4) * t966 + pkin(7) * t956 - t1290;
t898 = -t1191 * t955 + t1194 * t956;
t899 = -pkin(7) * t955 + t1292;
t826 = -pkin(3) * t966 + pkin(6) * t898 + t1191 * t899 + t1194 * t883;
t838 = -pkin(6) * t897 - t1191 * t883 + t1194 * t899;
t860 = -t1186 * t897 + t1188 * t898;
t1205 = -pkin(2) * t966 + qJ(3) * t860 + t1186 * t838 + t1188 * t826;
t886 = -pkin(4) * t1308 + pkin(7) * t980 + t1292;
t910 = -pkin(7) * t979 + t1290;
t917 = -t1191 * t979 + t1194 * t980;
t834 = -pkin(3) * t1308 + pkin(6) * t917 + t1191 * t910 + t1194 * t886;
t840 = -pkin(6) * t916 - t1191 * t886 + t1194 * t910;
t875 = -t1186 * t916 + t1188 * t917;
t1204 = -pkin(2) * t1308 + qJ(3) * t875 + t1186 * t840 + t1188 * t834;
t1041 = (qJD(4) - t1174) * t1130 + t1211;
t1017 = t1070 * t1194 - t1314;
t936 = -pkin(3) * t1041 + pkin(6) * t1017 - t1284;
t954 = -t1016 * t1186 + t1017 * t1188;
t972 = -pkin(6) * t1016 + t1285;
t1203 = -pkin(2) * t1041 + qJ(3) * t954 + t1186 * t972 + t1188 * t936;
t1025 = -t1103 * t1191 + t1282;
t946 = -pkin(3) * t1307 + pkin(6) * t1025 + t1285;
t974 = -t1024 * t1186 + t1025 * t1188;
t977 = -pkin(6) * t1024 + t1284;
t1202 = -pkin(2) * t1307 + qJ(3) * t974 + t1186 * t977 + t1188 * t946;
t1055 = -t1126 - t1305;
t998 = t1043 * t1194 + t1046 * t1191;
t873 = -pkin(3) * t1055 + pkin(6) * t998 + t890;
t881 = -pkin(6) * t996 - t889;
t931 = -t1186 * t996 + t1188 * t998;
t1201 = -pkin(2) * t1055 + qJ(3) * t931 + t1186 * t881 + t1188 * t873;
t847 = t1188 * t890 - t1294;
t885 = -pkin(3) * t1031 + pkin(6) * t890;
t1200 = -pkin(2) * t1031 - pkin(6) * t1294 + qJ(3) * t847 + t1188 * t885;
t1179 = t1185 * qJDD(1);
t1177 = t1183 * qJDD(1);
t1166 = 0.2e1 * t1245;
t1155 = -t1180 + t1269;
t1154 = t1180 + t1269;
t1151 = t1179 - t1177;
t1150 = t1179 + t1177;
t1146 = t1180 - t1249;
t1145 = (t1185 * t1187 + t1182) * t1196;
t1143 = t1170 - t1180;
t1140 = pkin(5) * t1225 + g(1) * t1192;
t1139 = -t1170 + t1249;
t1128 = t1225 * t1264;
t1127 = t1158 * t1264;
t1125 = (t1184 + t1304) * t1171;
t1124 = (qJDD(1) * t1184 + t1237) * t1187;
t1123 = (-t1184 * t1262 + t1186 * t1257) * t1187;
t1122 = (t1186 * t1262 + t1257) * t1268;
t1121 = t1217 * t1268;
t1118 = t1145 * t1195 + t1192 * t1178;
t1117 = -t1145 * t1192 + t1195 * t1178;
t1111 = -t1126 + t1172;
t1110 = -t1172 + t1305;
t1105 = t1124 * t1189 + t1238;
t1104 = -t1121 * t1189 - t1238;
t1102 = -t1146 * t1186 + t1276;
t1099 = t1143 * t1188 + t1279;
t1098 = t1146 * t1188 + t1277;
t1097 = t1147 * t1188 + t1279;
t1096 = t1144 * t1186 + t1276;
t1095 = t1143 * t1186 - t1278;
t1094 = t1124 * t1187 - t1230;
t1093 = -t1121 * t1187 + t1230;
t1092 = -qJ(2) * t1148 + t1243 * t1189;
t1091 = qJ(2) * t1145 - t1243 * t1187;
t1089 = t1126 - t1305;
t1086 = t1132 * t1188 - t1133 * t1186;
t1085 = -t1131 * t1186 - t1134 * t1188;
t1084 = t1132 * t1186 + t1133 * t1188;
t1067 = -t1076 + t1162;
t1066 = t1075 - t1162;
t1065 = (t1129 * t1194 - t1130 * t1191) * t1174;
t1064 = (t1129 * t1191 + t1130 * t1194) * t1174;
t1063 = t1102 * t1189 + t1134 * t1187;
t1062 = t1101 * t1189 + t1133 * t1187;
t1061 = t1100 * t1189 - t1132 * t1187;
t1060 = t1099 * t1189 - t1131 * t1187;
t1059 = t1102 * t1187 - t1134 * t1189;
t1058 = t1101 * t1187 - t1133 * t1189;
t1057 = t1100 * t1187 + t1132 * t1189;
t1056 = t1099 * t1187 + t1131 * t1189;
t1050 = t1087 * t1189 - t1138 * t1187;
t1049 = t1086 * t1189 + t1139 * t1187;
t1048 = t1087 * t1187 + t1138 * t1189;
t1047 = t1086 * t1187 - t1139 * t1189;
t1042 = t1211 + t1310;
t1040 = t1088 * t1194 + t1130 * t1271;
t1039 = t1088 * t1191 - t1130 * t1270;
t1038 = -t1129 * t1270 + t1191 * t1199;
t1037 = -t1129 * t1271 - t1194 * t1199;
t1036 = t1110 * t1194 + t1283;
t1035 = -t1111 * t1191 + t1312;
t1034 = t1110 * t1191 - t1282;
t1033 = t1111 * t1194 + t1314;
t1032 = pkin(1) * t1135 + qJ(2) * t1054;
t1030 = pkin(1) * t1154 + qJ(2) * t1150 + t1054;
t1029 = -qJ(3) * t1097 + t1280;
t1028 = -qJ(3) * t1096 + t1281;
t1021 = t1076 - t1075;
t1014 = (t1077 * t1193 - t1079 * t1190) * t1168;
t1013 = (t1077 * t1190 + t1079 * t1193) * t1168;
t1010 = -pkin(2) * t1097 + t1027;
t1009 = -pkin(2) * t1096 + t1026;
t1005 = -t1064 * t1186 + t1065 * t1188;
t1004 = t1064 * t1188 + t1065 * t1186;
t1002 = -qJD(5) * t1079 - t1239;
t1001 = t1005 * t1189 - t1173 * t1187;
t1000 = t1005 * t1187 + t1173 * t1189;
t997 = -t1041 * t1194 - t1191 * t1307;
t995 = -t1041 * t1191 + t1194 * t1307;
t994 = -t1039 * t1186 + t1040 * t1188;
t993 = -t1037 * t1186 + t1038 * t1188;
t992 = t1039 * t1188 + t1040 * t1186;
t991 = t1037 * t1188 + t1038 * t1186;
t990 = t1066 * t1193 + t1287;
t989 = -t1067 * t1190 + t1313;
t988 = t1066 * t1190 - t1286;
t987 = t1067 * t1193 + t1315;
t986 = -pkin(1) * t1057 - t1214;
t985 = -pkin(1) * t1058 - t1213;
t984 = -t1034 * t1186 + t1036 * t1188;
t983 = -t1033 * t1186 + t1035 * t1188;
t982 = t1034 * t1188 + t1036 * t1186;
t981 = t1033 * t1188 + t1035 * t1186;
t973 = t1024 * t1188 + t1025 * t1186;
t964 = t1003 * t1193 + t1079 * t1274;
t963 = t1003 * t1190 - t1079 * t1273;
t962 = -t1002 * t1190 - t1077 * t1273;
t961 = t1002 * t1193 - t1077 * t1274;
t960 = t1189 * t994 + t1251;
t959 = t1189 * t993 - t1251;
t958 = t1187 * t994 - t1250;
t957 = t1187 * t993 + t1250;
t953 = t1016 * t1188 + t1017 * t1186;
t951 = -qJ(3) * t1085 - t975;
t950 = t1080 * t1187 + t1189 * t976;
t949 = -t1080 * t1189 + t1187 * t976;
t948 = -t1013 * t1191 + t1014 * t1194;
t947 = t1013 * t1194 + t1014 * t1191;
t945 = -t1042 * t1187 + t1189 * t984;
t944 = t1046 * t1187 + t1189 * t983;
t943 = t1042 * t1189 + t1187 * t984;
t942 = -t1046 * t1189 + t1187 * t983;
t938 = t1187 * t1307 + t1189 * t974;
t937 = t1187 * t974 - t1189 * t1307;
t935 = -qJ(2) * t1058 - t1010 * t1187 + t1029 * t1189;
t934 = -qJ(2) * t1057 - t1009 * t1187 + t1028 * t1189;
t933 = t1041 * t1187 + t1189 * t954;
t932 = -t1041 * t1189 + t1187 * t954;
t930 = -t1186 * t995 + t1188 * t997;
t929 = t1186 * t998 + t1188 * t996;
t928 = t1186 * t997 + t1188 * t995;
t927 = -pkin(1) * t1048 - t1208;
t926 = -pkin(1) * t1097 + qJ(2) * t1062 + t1010 * t1189 + t1029 * t1187;
t925 = -pkin(1) * t1096 + qJ(2) * t1061 + t1009 * t1189 + t1028 * t1187;
t924 = -t1191 * t988 + t1194 * t990;
t923 = -t1191 * t987 + t1194 * t989;
t922 = t1191 * t990 + t1194 * t988;
t921 = t1191 * t989 + t1194 * t987;
t920 = -qJ(2) * t1048 + t1085 * t1300 + t1189 * t951;
t919 = t1089 * t1187 + t1189 * t930;
t918 = -t1089 * t1189 + t1187 * t930;
t914 = t1055 * t1187 + t1189 * t931;
t913 = -t1055 * t1189 + t1187 * t931;
t909 = qJ(2) * t1050 + t1187 * t951 + (-pkin(1) - t1299) * t1085;
t907 = -t1190 * t1308 - t1193 * t966;
t905 = -t1190 * t966 + t1193 * t1308;
t903 = -t1191 * t963 + t1194 * t964;
t902 = -t1191 * t961 + t1194 * t962;
t901 = t1191 * t964 + t1194 * t963;
t900 = t1191 * t962 + t1194 * t961;
t896 = -pkin(2) * t929 - t1301;
t895 = -pkin(1) * t949 - t1232;
t894 = -t1186 * t947 + t1188 * t948;
t893 = t1186 * t948 + t1188 * t947;
t892 = -t1163 * t1187 + t1189 * t894;
t891 = t1163 * t1189 + t1187 * t894;
t888 = -pkin(2) * t973 - t1235;
t887 = -pkin(2) * t953 - t1221;
t884 = -qJ(2) * t949 + (-qJ(3) * t1189 + t1300) * t975;
t882 = -qJ(3) * t973 - t1186 * t946 + t1188 * t977;
t880 = -qJ(3) * t953 - t1186 * t936 + t1188 * t972;
t879 = -t1186 * t922 + t1188 * t924;
t878 = -t1186 * t921 + t1188 * t923;
t877 = t1186 * t924 + t1188 * t922;
t876 = t1186 * t923 + t1188 * t921;
t874 = t1186 * t917 + t1188 * t916;
t869 = qJ(2) * t950 + t1224 * t975;
t867 = -t1191 * t905 + t1194 * t907;
t865 = t1191 * t907 + t1194 * t905;
t864 = -t1186 * t901 + t1188 * t903;
t863 = -t1186 * t900 + t1188 * t902;
t862 = t1186 * t903 + t1188 * t901;
t861 = t1186 * t902 + t1188 * t900;
t859 = t1186 * t898 + t1188 * t897;
t858 = -t1187 * t967 + t1189 * t879;
t857 = t1187 * t970 + t1189 * t878;
t856 = t1187 * t879 + t1189 * t967;
t855 = t1187 * t878 - t1189 * t970;
t854 = t1187 * t1308 + t1189 * t875;
t853 = t1187 * t875 - t1189 * t1308;
t852 = t1189 * t864 + t1253;
t851 = t1189 * t863 - t1253;
t850 = t1187 * t864 - t1252;
t849 = t1187 * t863 + t1252;
t848 = -pkin(1) * t937 - t1202;
t846 = t1186 * t890 + t1293;
t845 = -pkin(1) * t932 - t1203;
t844 = t1187 * t966 + t1189 * t860;
t843 = t1187 * t860 - t1189 * t966;
t842 = t1031 * t1187 + t1189 * t847;
t841 = -t1031 * t1189 + t1187 * t847;
t839 = -qJ(2) * t937 - t1187 * t888 + t1189 * t882;
t833 = -pkin(2) * t846 - t1302;
t832 = -qJ(2) * t932 - t1187 * t887 + t1189 * t880;
t830 = -t1186 * t865 + t1188 * t867;
t829 = t1186 * t868 + t1188 * t866;
t828 = t1186 * t867 + t1188 * t865;
t827 = -pkin(1) * t973 + qJ(2) * t938 + t1187 * t882 + t1189 * t888;
t824 = -qJ(3) * t929 - t1186 * t873 + t1188 * t881;
t823 = t1021 * t1187 + t1189 * t830;
t822 = -t1021 * t1189 + t1187 * t830;
t821 = t1187 * t999 + t1189 * t831;
t820 = t1187 * t831 - t1189 * t999;
t819 = -pkin(1) * t953 + qJ(2) * t933 + t1187 * t880 + t1189 * t887;
t817 = -pkin(2) * t874 - t1210;
t815 = -pkin(1) * t913 - t1201;
t814 = -pkin(6) * t1293 - qJ(3) * t846 - t1186 * t885;
t813 = -pkin(2) * t859 - t1216;
t812 = -qJ(2) * t913 - t1187 * t896 + t1189 * t824;
t811 = -pkin(2) * t829 - t1254;
t810 = -pkin(1) * t929 + qJ(2) * t914 + t1187 * t824 + t1189 * t896;
t807 = -pkin(1) * t841 - t1200;
t806 = -qJ(3) * t874 - t1186 * t834 + t1188 * t840;
t805 = -qJ(3) * t859 - t1186 * t826 + t1188 * t838;
t804 = -pkin(1) * t853 - t1204;
t802 = -qJ(2) * t841 - t1187 * t833 + t1189 * t814;
t800 = -pkin(1) * t843 - t1205;
t799 = -pkin(1) * t846 + qJ(2) * t842 + t1187 * t814 + t1189 * t833;
t797 = t1186 * t809 + t1188 * t808;
t795 = t1187 * t965 + t1189 * t798;
t794 = t1187 * t798 - t1189 * t965;
t792 = -qJ(2) * t853 - t1187 * t817 + t1189 * t806;
t791 = -pkin(1) * t874 + qJ(2) * t854 + t1187 * t806 + t1189 * t817;
t790 = -qJ(2) * t843 - t1187 * t813 + t1189 * t805;
t789 = -pkin(1) * t859 + qJ(2) * t844 + t1187 * t805 + t1189 * t813;
t788 = -pkin(2) * t797 - t1255;
t787 = -qJ(3) * t829 - t1186 * t801 + t1188 * t803;
t786 = -pkin(1) * t820 - t1206;
t785 = -qJ(2) * t820 - t1187 * t811 + t1189 * t787;
t784 = -pkin(1) * t829 + qJ(2) * t821 + t1187 * t787 + t1189 * t811;
t783 = -qJ(3) * t797 - t1186 * t793 + t1188 * t796;
t782 = -pkin(1) * t794 - t1207;
t781 = -qJ(2) * t794 - t1187 * t788 + t1189 * t783;
t780 = -pkin(1) * t797 + qJ(2) * t795 + t1187 * t783 + t1189 * t788;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, qJDD(1), t1165, -t1164, 0, 0, t1177, t1166, 0, t1179, 0, 0, t1092, t1091, t1030, t1032, t1094, t1047, t1059, t1093, t1056, t1179, t925, t926, t909, t869, t958, t918, t942, t957, t943, t1000, t819, t827, t810, t799, t850, t822, t855, t849, t856, t891, t789, t791, t784, t780; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, -t1158, 0, -t1225, 0, t1233, t1140, -t1228, -pkin(5) * t1228, -t1127, -t1151 * t1192 + t1155 * t1195, t1117, t1127, t1219, 0, pkin(5) * t1218 - t1195 * t1112 + t1192 * t1266, -pkin(5) * t1118 - t1113 * t1195 + t1192 * t1263, -t1192 * t1053 - pkin(5) * (t1150 * t1195 - t1154 * t1192), -pkin(5) * (t1054 * t1195 - t1135 * t1192) - (pkin(1) * t1195 + qJ(2) * t1192) * t1053, -t1105 * t1192 + t1123 * t1195, -t1049 * t1192 + t1084 * t1195, -t1063 * t1192 + t1098 * t1195, -t1104 * t1192 - t1122 * t1195, -t1060 * t1192 + t1095 * t1195, t1125 * t1195 + t1192 * t1245, -t1192 * t934 - t1195 * t986 - pkin(5) * (t1061 * t1195 + t1096 * t1192), -t1192 * t935 - t1195 * t985 - pkin(5) * (t1062 * t1195 + t1097 * t1192), -t1192 * t920 - t1195 * t927 - pkin(5) * (t1050 * t1195 + t1085 * t1192), -t1192 * t884 - t1195 * t895 - pkin(5) * (t1192 * t975 + t1195 * t950), -t1192 * t960 + t1195 * t992, -t1192 * t919 + t1195 * t928, -t1192 * t944 + t1195 * t981, -t1192 * t959 + t1195 * t991, -t1192 * t945 + t1195 * t982, -t1001 * t1192 + t1004 * t1195, -t1192 * t832 - t1195 * t845 - pkin(5) * (t1192 * t953 + t1195 * t933), -t1192 * t839 - t1195 * t848 - pkin(5) * (t1192 * t973 + t1195 * t938), -t1192 * t812 - t1195 * t815 - pkin(5) * (t1192 * t929 + t1195 * t914), -t1192 * t802 - t1195 * t807 - pkin(5) * (t1192 * t846 + t1195 * t842), -t1192 * t852 + t1195 * t862, -t1192 * t823 + t1195 * t828, -t1192 * t857 + t1195 * t876, -t1192 * t851 + t1195 * t861, -t1192 * t858 + t1195 * t877, -t1192 * t892 + t1195 * t893, -t1192 * t790 - t1195 * t800 - pkin(5) * (t1192 * t859 + t1195 * t844), -t1192 * t792 - t1195 * t804 - pkin(5) * (t1192 * t874 + t1195 * t854), -t1192 * t785 - t1195 * t786 - pkin(5) * (t1192 * t829 + t1195 * t821), -t1192 * t781 - t1195 * t782 - pkin(5) * (t1192 * t797 + t1195 * t795); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, t1225, 0, -t1158, 0, -t1140, t1233, t1227, pkin(5) * t1227, t1128, t1151 * t1195 + t1155 * t1192, t1118, -t1128, t1218, 0, -pkin(5) * t1219 - t1192 * t1112 - t1195 * t1266, pkin(5) * t1117 - t1113 * t1192 - t1195 * t1263, t1195 * t1053 + pkin(5) * (-t1150 * t1192 - t1154 * t1195), pkin(5) * (-t1054 * t1192 - t1135 * t1195) - (pkin(1) * t1192 - qJ(2) * t1195) * t1053, t1105 * t1195 + t1123 * t1192, t1049 * t1195 + t1084 * t1192, t1063 * t1195 + t1098 * t1192, t1104 * t1195 - t1122 * t1192, t1060 * t1195 + t1095 * t1192, t1125 * t1192 - t1195 * t1245, t1195 * t934 - t1192 * t986 + pkin(5) * (-t1061 * t1192 + t1096 * t1195), t1195 * t935 - t1192 * t985 + pkin(5) * (-t1062 * t1192 + t1097 * t1195), t1195 * t920 - t1192 * t927 + pkin(5) * (-t1050 * t1192 + t1085 * t1195), t1195 * t884 - t1192 * t895 + pkin(5) * (-t1192 * t950 + t1195 * t975), t1192 * t992 + t1195 * t960, t1192 * t928 + t1195 * t919, t1192 * t981 + t1195 * t944, t1192 * t991 + t1195 * t959, t1192 * t982 + t1195 * t945, t1001 * t1195 + t1004 * t1192, t1195 * t832 - t1192 * t845 + pkin(5) * (-t1192 * t933 + t1195 * t953), t1195 * t839 - t1192 * t848 + pkin(5) * (-t1192 * t938 + t1195 * t973), t1195 * t812 - t1192 * t815 + pkin(5) * (-t1192 * t914 + t1195 * t929), t1195 * t802 - t1192 * t807 + pkin(5) * (-t1192 * t842 + t1195 * t846), t1192 * t862 + t1195 * t852, t1192 * t828 + t1195 * t823, t1192 * t876 + t1195 * t857, t1192 * t861 + t1195 * t851, t1192 * t877 + t1195 * t858, t1192 * t893 + t1195 * t892, t1195 * t790 - t1192 * t800 + pkin(5) * (-t1192 * t844 + t1195 * t859), t1195 * t792 - t1192 * t804 + pkin(5) * (-t1192 * t854 + t1195 * t874), t1195 * t785 - t1192 * t786 + pkin(5) * (-t1192 * t821 + t1195 * t829), t1195 * t781 - t1192 * t782 + pkin(5) * (-t1192 * t795 + t1195 * t797); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1196, 0, 0, -g(1), -t1165, 0, t1245, t1151, t1145, -t1245, t1148, 0, -t1266, -t1263, t1053, qJ(2) * t1053, t1105, t1049, t1063, t1104, t1060, -t1245, t934, t935, t920, t884, t960, t919, t944, t959, t945, t1001, t832, t839, t812, t802, t852, t823, t857, t851, t858, t892, t790, t792, t785, t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1196, 0, qJDD(1), 0, g(1), 0, t1164, 0, t1171, -t1155, -t1178, -t1171, -t1256, 0, t1112, t1113, 0, pkin(1) * t1053, -t1123, -t1084, -t1098, t1122, -t1095, -t1125, t986, t985, t927, t895, -t992, -t928, -t981, -t991, -t982, -t1004, t845, t848, t815, t807, -t862, -t828, -t876, -t861, -t877, -t893, t800, t804, t786, t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1165, -t1164, 0, 0, t1177, t1166, 0, t1179, 0, 0, t1092, t1091, t1030, t1032, t1094, t1047, t1059, t1093, t1056, t1179, t925, t926, t909, t869, t958, t918, t942, t957, t943, t1000, t819, t827, t810, t799, t850, t822, t855, t849, t856, t891, t789, t791, t784, t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1178, t1256, t1171, 0, t1180, 0, 0, -t1135, t1112, 0, t1124, t1086, t1102, -t1121, t1099, 0, t1028, t1029, t951, -qJ(3) * t975, t994, t930, t983, t993, t984, t1005, t880, t882, t824, t814, t864, t830, t878, t863, t879, t894, t805, t806, t787, t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1178, -t1269, t1256, -t1171, 0, t1135, 0, t1113, 0, -t1152, -t1139, -t1134, t1152, t1131, t1256, t1009, t1010, -pkin(2) * t1085, -pkin(2) * t975, -t1090, -t1089, -t1046, t1090, t1042, t1173, t887, t888, t896, t833, -t1022, -t1021, -t970, t1022, t967, t1163, t813, t817, t811, t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1171, t1155, t1178, t1171, t1256, 0, -t1112, -t1113, 0, 0, t1123, t1084, t1098, -t1122, t1095, t1125, t1214, t1213, t1208, t1232, t992, t928, t981, t991, t982, t1004, t1203, t1202, t1201, t1200, t862, t828, t876, t861, t877, t893, t1205, t1204, t1206, t1207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1244, t1132, t1137, -t1153, t1143, t1153, 0, t1080, t1026, 0, t1040, t997, t1035, t1038, t1036, t1065, t972, t977, t881, -pkin(6) * t889, t903, t867, t923, t902, t924, t948, t838, t840, t803, t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1236, t1133, t1146, -t1246, -t1136, t1236, -t1080, 0, t1027, 0, t1039, t995, t1033, t1037, t1034, t1064, t936, t946, t873, t885, t901, t865, t921, t900, t922, t947, t826, t834, t801, t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1152, t1139, t1134, -t1152, -t1131, -t1256, -t1026, -t1027, 0, 0, t1090, t1089, t1046, -t1090, -t1042, -t1173, t1221, t1235, t1301, t1302, t1022, t1021, t970, -t1022, -t967, -t1163, t1216, t1210, t1254, t1255; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1088, -t1041, t1306, -t1115, t1110, t1115, 0, t1031, t940, 0, t964, t907, t989, t962, t990, t1014, t899, t910, t818, -pkin(7) * t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1272, t1307, t1111, -t1199, -t1072, t1272, -t1031, 0, t941, 0, t963, t905, t987, t961, t988, t1013, t883, t886, t816, t825; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1090, t1089, t1046, -t1090, -t1042, -t1173, -t940, -t941, 0, 0, t1022, t1021, t970, -t1022, -t967, -t1163, t1234, t1220, t904, t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1003, -t966, t1309, -t1068, t1066, t1068, 0, t965, t871, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1275, t1308, t1067, t1002, -t1018, t1275, -t965, 0, t872, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1022, t1021, t970, -t1022, -t967, -t1163, -t871, -t872, 0, 0;];
m_new_reg = t1;
