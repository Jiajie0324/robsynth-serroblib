% Calculate inertial parameters regressor of coriolis matrix for
% S5PRRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d5,theta1,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:20
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRRPR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRPR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRPR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRRPR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:19:48
% EndTime: 2019-12-05 16:19:52
% DurationCPUTime: 2.28s
% Computational Cost: add. (4046->124), mult. (8040->170), div. (0->0), fcn. (9256->6), ass. (0->117)
t259 = qJD(3) + qJD(5);
t159 = sin(qJ(5));
t246 = cos(qJ(5));
t160 = sin(qJ(3));
t242 = -qJ(4) - pkin(6);
t150 = t242 * t160;
t161 = cos(qJ(3));
t151 = t242 * t161;
t158 = sin(pkin(9));
t235 = cos(pkin(9));
t122 = t158 * t150 - t235 * t151;
t143 = t158 * t160 - t235 * t161;
t97 = t143 * pkin(7) - t122;
t145 = t158 * t161 + t235 * t160;
t167 = t235 * t150 + t158 * t151;
t98 = -t145 * pkin(7) + t167;
t260 = -t159 * t98 + t246 * t97;
t261 = t259 * t260;
t50 = t159 * t97 + t246 * t98;
t258 = t259 * t50;
t136 = t246 * t145;
t227 = t159 * t143;
t248 = t136 - t227;
t230 = t248 ^ 2;
t180 = t246 * t143 + t159 * t145;
t232 = t180 ^ 2;
t253 = -t230 + t232;
t257 = t253 * qJD(2);
t249 = t180 * qJD(2);
t254 = t248 * t249;
t250 = qJD(4) * t180;
t205 = t180 * qJD(5);
t169 = qJD(3) * t180 + t205;
t142 = t143 ^ 2;
t247 = t145 ^ 2;
t178 = t136 / 0.2e1;
t245 = pkin(3) * t158;
t244 = t145 * pkin(4);
t243 = t160 * pkin(3);
t241 = qJD(3) * pkin(3);
t177 = t235 * pkin(3) + pkin(4);
t133 = t159 * t245 - t246 * t177;
t234 = t248 * t133;
t134 = t159 * t177 + t246 * t245;
t231 = t180 * t134;
t228 = t143 * t158;
t26 = t230 + t232;
t224 = t26 * qJD(2);
t168 = -t234 / 0.2e1 + t231 / 0.2e1;
t157 = t243 / 0.2e1;
t179 = t157 + t244 / 0.2e1;
t38 = t168 + t179;
t222 = t38 * qJD(2);
t156 = -t161 * pkin(3) - pkin(2);
t123 = t143 * pkin(4) + t156;
t124 = t243 + t244;
t41 = t123 * t248 + t124 * t180;
t221 = t41 * qJD(2);
t42 = -t123 * t180 + t124 * t248;
t220 = t42 * qJD(2);
t57 = -t122 * t143 - t145 * t167;
t217 = t57 * qJD(2);
t80 = 0.2e1 * t178 - t227;
t215 = t80 * qJD(2);
t182 = t235 * t145;
t165 = -t228 / 0.2e1 - t182 / 0.2e1;
t91 = (-t160 / 0.2e1 + t165) * pkin(3);
t214 = t91 * qJD(2);
t96 = t142 - t247;
t213 = t96 * qJD(2);
t212 = qJD(2) * t123;
t211 = qJD(2) * t161;
t100 = t143 * t243 + t156 * t145;
t210 = t100 * qJD(2);
t101 = -t156 * t143 + t145 * t243;
t209 = t101 * qJD(2);
t108 = t178 - t136 / 0.2e1;
t208 = t108 * qJD(2);
t104 = t108 * qJD(5);
t207 = t248 * qJD(2);
t206 = t248 * qJD(3);
t202 = t248 * qJD(5);
t114 = t142 + t247;
t201 = t114 * qJD(2);
t200 = t143 * qJD(2);
t140 = t143 * qJD(3);
t199 = t145 * qJD(2);
t141 = t145 * qJD(3);
t153 = -t160 ^ 2 + t161 ^ 2;
t198 = t153 * qJD(2);
t197 = t160 * qJD(3);
t196 = t161 * qJD(3);
t195 = pkin(2) * t160 * qJD(2);
t194 = pkin(2) * t211;
t191 = t180 * t207;
t188 = t180 * t212;
t187 = t248 * t212;
t186 = t143 * t199;
t185 = t143 * t141;
t184 = t160 * t196;
t9 = t123 * t124;
t176 = t9 * qJD(2);
t12 = t180 * t260 - t248 * t50;
t174 = t12 * qJD(2);
t40 = t156 * t243;
t173 = t40 * qJD(2);
t171 = t133 * qJD(3);
t170 = t80 * qJD(5) + t206;
t164 = t108 * qJD(1) + t134 * qJD(3);
t154 = t160 * t211;
t126 = t134 * qJD(5);
t125 = t133 * qJD(5);
t103 = t108 * qJD(3);
t90 = t165 * pkin(3) + t157;
t52 = -t80 * qJD(3) - t202;
t39 = -t168 + t179;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t197, -t196, 0, 0, 0, 0, 0, 0, 0, 0, -t141, t140, 0, (-t182 - t228) * t241, 0, 0, 0, 0, 0, 0, -t170, t169, 0, (-t231 + t234) * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, t169, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, t153 * qJD(3), 0, -t184, 0, 0, -pkin(2) * t197, -pkin(2) * t196, 0, 0, -t185, t96 * qJD(3), 0, t185, 0, 0, t100 * qJD(3), t101 * qJD(3), t114 * qJD(4), t40 * qJD(3) + t57 * qJD(4), -t169 * t248, t259 * t253, 0, (t202 + t206) * t180, 0, 0, t41 * qJD(3) + t123 * t202, t42 * qJD(3) - t123 * t205, t26 * qJD(4), t9 * qJD(3) + t12 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, t198, t196, -t154, -t197, 0, -pkin(6) * t196 - t195, pkin(6) * t197 - t194, 0, 0, -t186, t213, -t140, t186, -t141, 0, -qJD(3) * t122 + t210, -qJD(3) * t167 + t209, (t235 * t143 - t145 * t158) * t241, (-t122 * t235 + t158 * t167) * t241 + t90 * qJD(4) + t173, -t254, t257, -t169, t191, -t170, 0, t221 + t261, t220 - t258, (-t133 * t180 - t134 * t248) * qJD(3), (-t133 * t260 + t50 * t134) * qJD(3) + t39 * qJD(4) + t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, t90 * qJD(3) + t217, 0, 0, 0, 0, 0, 0, t104, 0, t224, t39 * qJD(3) + t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, t257, -t169, t254, t52, 0, t108 * qJD(4) + t187 + t261, -t188 - t258, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t154, -t198, 0, t154, 0, 0, t195, t194, 0, 0, t186, -t213, 0, -t186, 0, 0, -t145 * qJD(4) - t210, t143 * qJD(4) - t209, 0, t91 * qJD(4) - t173, t254, -t257, 0, -t191, -t104, 0, -qJD(4) * t248 - t221, -t220 + t250, 0, -t38 * qJD(4) - t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126, t125, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199, t200, 0, t214, 0, 0, 0, 0, 0, 0, -t207, t249, 0, -t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, 0, -t126 - t164, t125 + t171, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141, -t140, -t201, -t91 * qJD(3) - t217, 0, 0, 0, 0, 0, 0, t170, -t169, -t224, t38 * qJD(3) - t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, -t200, 0, -t214, 0, 0, 0, 0, 0, 0, t207, -t249, 0, t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, -t249, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, -t257, 0, -t254, t103, 0, -t80 * qJD(4) - t187, t188 + t250, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, 0, t164, -t171, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, t249, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
