% Calculate minimal parameter regressor of coriolis matrix for
% S5PRRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:17
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRRRR8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5PRRRR8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:16:45
% EndTime: 2019-12-05 17:16:59
% DurationCPUTime: 4.04s
% Computational Cost: add. (2992->288), mult. (7428->460), div. (0->0), fcn. (8204->10), ass. (0->259)
t337 = qJD(3) + qJD(4);
t242 = sin(qJ(5));
t243 = sin(qJ(3));
t246 = cos(qJ(3));
t241 = sin(pkin(5));
t244 = sin(qJ(2));
t372 = t241 * t244;
t383 = cos(pkin(5));
t199 = t243 * t372 - t383 * t246;
t200 = t383 * t243 + t246 * t372;
t390 = sin(qJ(4));
t391 = cos(qJ(4));
t269 = -t390 * t199 + t391 * t200;
t232 = t390 * t246;
t233 = t391 * t243;
t213 = -t233 - t232;
t398 = -t213 / 0.2e1;
t318 = t269 * t398;
t420 = t242 * t318;
t326 = t390 * t243;
t327 = t391 * t246;
t211 = t326 - t327;
t410 = t337 * t213;
t288 = t211 * t410;
t400 = pkin(7) + pkin(8);
t221 = t400 * t243;
t222 = t400 * t246;
t268 = -t390 * t221 + t391 * t222;
t412 = t268 * t242;
t245 = cos(qJ(5));
t237 = -pkin(3) * t246 - pkin(2);
t388 = pkin(4) * t211;
t292 = pkin(9) * t213 + t388;
t267 = t237 + t292;
t49 = -t245 * t267 + t412;
t419 = (t49 - t412) * t213;
t411 = t268 * t245;
t50 = t242 * t267 + t411;
t418 = (t50 - t411) * t213;
t290 = t391 * t221 + t390 * t222;
t264 = -t327 / 0.2e1 + t326 / 0.2e1;
t247 = cos(qJ(2));
t371 = t241 * t247;
t399 = -t211 / 0.2e1;
t86 = (t399 + t264) * t371;
t361 = t86 * qJD(1);
t417 = t337 * t290 - t361;
t291 = t391 * t199 + t390 * t200;
t314 = t371 / 0.2e1;
t87 = t211 * t314 + t264 * t371;
t416 = t87 * qJD(2) + t337 * t291;
t415 = t337 * t268;
t201 = t233 / 0.2e1 + t232 / 0.2e1;
t88 = -t201 * t371 + t213 * t314;
t414 = t88 * qJD(2) - t337 * t269;
t413 = 0.2e1 * t213;
t145 = t337 * t211;
t206 = t213 ^ 2;
t336 = -t211 ^ 2 + t206;
t334 = t391 * pkin(3);
t236 = -t334 - pkin(4);
t373 = t236 * t211;
t333 = t390 * pkin(3);
t235 = t333 + pkin(9);
t374 = t235 * t213;
t408 = t388 / 0.2e1 + t374 / 0.2e1 - t373 / 0.2e1 + (t390 * t398 + t391 * t399) * pkin(3);
t353 = qJD(2) * t237;
t85 = (t398 - t201) * t371;
t362 = t85 * qJD(1);
t407 = t213 * t353 + t362;
t389 = pkin(3) * t243;
t119 = t211 * t389 - t213 * t237;
t406 = -qJD(2) * t119 + t362;
t240 = t245 ^ 2;
t401 = t242 ^ 2;
t124 = (-t401 / 0.2e1 + t240 / 0.2e1) * t213;
t366 = t242 * t245;
t323 = qJD(2) * t366;
t404 = t124 * t337 + t206 * t323;
t335 = -t240 + t401;
t108 = -0.2e1 * t213 * t323 + t335 * t337;
t397 = t213 / 0.2e1;
t396 = t235 / 0.2e1;
t395 = -t242 / 0.2e1;
t394 = t242 / 0.2e1;
t393 = -t245 / 0.2e1;
t392 = t245 / 0.2e1;
t387 = t211 * pkin(9);
t386 = t213 * pkin(4);
t370 = t242 * t269;
t71 = t245 * t371 + t370;
t385 = t71 * t211;
t365 = t245 * t269;
t72 = -t242 * t371 + t365;
t384 = t72 * t211;
t83 = t336 * t242;
t382 = qJD(2) * t83;
t84 = t336 * t245;
t381 = qJD(2) * t84;
t378 = t290 * t242;
t377 = t290 * t245;
t376 = t213 * t242;
t375 = t213 * t245;
t147 = -t386 + t387;
t131 = t147 + t389;
t369 = t242 * t131;
t125 = t242 * t211;
t367 = t242 * t244;
t364 = t245 * t131;
t128 = t245 * t211;
t120 = -t211 * t237 - t213 * t389;
t358 = qJD(2) * t120;
t357 = qJD(2) * t124;
t134 = t335 * t206;
t356 = qJD(2) * t134;
t355 = qJD(2) * t211;
t354 = qJD(2) * t213;
t352 = qJD(2) * t244;
t351 = qJD(2) * t246;
t350 = qJD(3) * t242;
t349 = qJD(3) * t245;
t348 = qJD(4) * t237;
t347 = qJD(4) * t242;
t346 = qJD(4) * t245;
t345 = qJD(5) * t242;
t344 = qJD(5) * t245;
t343 = t336 * qJD(2);
t342 = t125 * qJD(2);
t123 = t128 * qJD(2);
t341 = t201 * qJD(2);
t227 = -t243 ^ 2 + t246 ^ 2;
t340 = t227 * qJD(2);
t339 = t243 * qJD(3);
t338 = t246 * qJD(3);
t332 = pkin(2) * t243 * qJD(2);
t331 = pkin(2) * t351;
t329 = t71 * t397;
t328 = t72 * t397;
t325 = t211 * t353;
t322 = qJD(5) * t211 * t213;
t152 = t211 * t354;
t321 = t241 * t352;
t320 = qJD(2) * t371;
t230 = t242 * t344;
t319 = t243 * t351;
t99 = t291 * t394;
t100 = t291 * t392;
t317 = t376 / 0.2e1;
t316 = -t375 / 0.2e1;
t315 = t372 / 0.2e1;
t313 = -t370 / 0.2e1;
t159 = t211 * t371;
t312 = t159 * t395;
t310 = -t365 / 0.2e1;
t309 = t159 * t393;
t303 = t391 * qJD(3);
t302 = t391 * qJD(4);
t301 = t390 * qJD(3);
t300 = t390 * qJD(4);
t298 = t337 * t245;
t297 = pkin(3) * t300;
t296 = pkin(3) * t301;
t295 = -t334 / 0.2e1;
t289 = t242 * t298;
t287 = t337 * t366;
t258 = t247 * t213;
t255 = t241 * t258;
t252 = -t255 / 0.2e1;
t251 = t245 * t252 + t329;
t3 = t251 + t420;
t9 = t364 * t211 + t419;
t286 = t3 * qJD(1) + t9 * qJD(2);
t1 = t213 * t313 + t251;
t11 = t147 * t128 + t419;
t285 = t1 * qJD(1) + t11 * qJD(2);
t10 = -t369 * t211 + t418;
t253 = t255 / 0.2e1;
t250 = t242 * t253 + t328;
t8 = t269 * t316 + t250;
t284 = t8 * qJD(1) + t10 * qJD(2);
t12 = -t147 * t125 + t418;
t6 = t213 * t310 + t250;
t283 = t6 * qJD(1) + t12 * qJD(2);
t277 = t295 - t236 / 0.2e1;
t248 = (t396 - t333 / 0.2e1 - pkin(9) / 0.2e1) * t213 + (-pkin(4) / 0.2e1 + t277) * t211;
t13 = t248 * t242;
t282 = t13 * qJD(2);
t274 = t291 * t397 + t315;
t17 = -t312 + t384 / 0.2e1 + t274 * t245;
t31 = -t211 * t50 - t290 * t375;
t281 = qJD(1) * t17 - qJD(2) * t31;
t18 = -t309 - t385 / 0.2e1 - t274 * t242;
t30 = t211 * t49 + t290 * t376;
t280 = qJD(1) * t18 - qJD(2) * t30;
t279 = -t373 + t374;
t278 = t213 * (qJD(5) + t355);
t276 = t387 / 0.2e1 - t386 / 0.2e1;
t275 = t211 * t396 + t236 * t397;
t273 = t245 * t278;
t90 = -qJD(5) * t201 + t152;
t272 = pkin(4) / 0.2e1 + t277;
t271 = t147 / 0.2e1 + t276;
t270 = t289 * t413;
t266 = t131 / 0.2e1 + t275;
t168 = t272 * t242;
t27 = t271 * t245;
t262 = pkin(4) * t347 + qJD(2) * t27 + qJD(3) * t168;
t169 = t272 * t245;
t25 = t271 * t242;
t261 = pkin(4) * t346 - qJD(2) * t25 + qJD(3) * t169;
t21 = t266 * t242;
t260 = -qJD(2) * t21 - t236 * t349;
t23 = t266 * t245;
t259 = qJD(2) * t23 - t236 * t350;
t257 = (-t301 - t300) * pkin(3);
t256 = t213 * t258;
t16 = t248 * t245;
t254 = -t16 * qJD(2) - t242 * t296;
t225 = t242 * t297;
t220 = t335 * qJD(5);
t171 = pkin(4) * t393 + t236 * t392 + t245 * t295;
t170 = pkin(4) * t395 + t236 * t394 + t242 * t295;
t151 = t245 * t253;
t150 = t242 * t252;
t132 = t337 * t201;
t121 = t124 * qJD(5);
t104 = t123 + t344;
t103 = -t342 - t345;
t77 = t86 * qJD(2);
t75 = t85 * qJD(2);
t74 = t287 - t357;
t73 = -t289 + t357;
t70 = 0.2e1 * t242 * t273;
t55 = -t240 * t152 - t121;
t48 = qJD(5) * t128 - t381;
t47 = -qJD(5) * t125 + t382;
t46 = -t291 * t393 + t100;
t45 = 0.2e1 * t100;
t44 = -t291 * t395 + t99;
t43 = 0.2e1 * t99;
t42 = t269 * t393 + t310;
t37 = t370 / 0.2e1 + t269 * t394;
t34 = -t121 + (t240 * t354 - t289) * t211;
t33 = -t242 * t410 + t381;
t32 = -t213 * t298 - t382;
t29 = (qJD(5) - t355) * t366 * t413 + t335 * t145;
t28 = t147 * t392 - t276 * t245 + t378;
t26 = t147 * t395 + t276 * t242 + t377;
t24 = t378 / 0.2e1 - t290 * t395 + t364 / 0.2e1 - t275 * t245;
t22 = t377 / 0.2e1 - t290 * t393 - t369 / 0.2e1 + t275 * t242;
t20 = -t384 / 0.2e1 + t291 * t316 - t312 + t245 * t315;
t19 = t385 / 0.2e1 + t291 * t317 - t309 - t241 * t367 / 0.2e1;
t15 = t412 + pkin(9) * t375 / 0.2e1 + t408 * t245;
t14 = pkin(9) * t317 + t408 * t242 - t411;
t7 = t245 * t318 + t150 + t328;
t5 = t150 + (t72 / 0.2e1 + t310) * t213;
t4 = t151 + t329 + t420;
t2 = t151 + (t71 / 0.2e1 + t313) * t213;
t35 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t321, -t320, 0, 0, 0, 0, 0, (-t244 * t351 - t247 * t339) * t241, (t243 * t352 - t247 * t338) * t241, 0, 0, 0, 0, 0, t211 * t321 + t337 * t88, -t213 * t321 + t337 * t87, 0, 0, 0, 0, 0, (t159 * t125 + (t128 * t244 + t242 * t256) * t241) * qJD(2) + t4 * qJD(3) + t2 * qJD(4) + t20 * qJD(5), (t159 * t128 + (-t211 * t367 + t245 * t256) * t241) * qJD(2) + t7 * qJD(3) + t5 * qJD(4) + t19 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200 * qJD(3) - t243 * t320, t199 * qJD(3) - t246 * t320, 0, 0, 0, 0, 0, t414, t416, 0, 0, 0, 0, 0, qJD(2) * t4 + qJD(4) * t42 + qJD(5) * t44 - t269 * t349, qJD(2) * t7 + qJD(4) * t37 + qJD(5) * t46 + t269 * t350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t414, t416, 0, 0, 0, 0, 0, qJD(2) * t2 + qJD(3) * t42 + qJD(5) * t43 - t269 * t346, qJD(2) * t5 + qJD(3) * t37 + qJD(5) * t45 + t269 * t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t20 + qJD(3) * t44 + qJD(4) * t43 - qJD(5) * t72, qJD(2) * t19 + qJD(3) * t46 + qJD(4) * t45 + qJD(5) * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t337 * t85, -t337 * t86, 0, 0, 0, 0, 0, qJD(3) * t3 + qJD(4) * t1 - qJD(5) * t17, qJD(3) * t8 + qJD(4) * t6 - qJD(5) * t18; 0, 0, 0, 0, t243 * t338, t227 * qJD(3), 0, 0, 0, -pkin(2) * t339, -pkin(2) * t338, t288, -t337 * t336, 0, 0, 0, qJD(3) * t119 - t213 * t348, qJD(3) * t120 - t211 * t348, -t206 * t230 + t240 * t288, qJD(5) * t134 - t211 * t270, t242 * t322 + t337 * t84, t245 * t322 - t337 * t83, -t288, qJD(3) * t9 + qJD(4) * t11 + qJD(5) * t31, qJD(3) * t10 + qJD(4) * t12 + qJD(5) * t30; 0, 0, 0, 0, t319, t340, t338, -t339, 0, -pkin(7) * t338 - t332, pkin(7) * t339 - t331, t152, -t343, -t145, t410, 0, -t406 - t415, t358 + t417, t34, t29, t33, t32, -t90, (t242 * t279 - t411) * qJD(3) + t14 * qJD(4) + t24 * qJD(5) + t286, (t245 * t279 + t412) * qJD(3) + t15 * qJD(4) + t22 * qJD(5) + t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152, -t343, -t145, t410, 0, -t407 - t415, -t325 + t417, t34, t29, t33, t32, -t90, t14 * qJD(3) + (t242 * t292 - t411) * qJD(4) + t28 * qJD(5) + t285, t15 * qJD(3) + (t245 * t292 + t412) * qJD(4) + t26 * qJD(5) + t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t404, t287 * t413 + t356, t242 * t278, t273, t132, qJD(3) * t24 + qJD(4) * t28 - qJD(5) * t50 - t281, qJD(3) * t22 + qJD(4) * t26 + qJD(5) * t49 - t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, t77, 0, 0, 0, 0, 0, -qJD(2) * t3, -qJD(2) * t8; 0, 0, 0, 0, -t319, -t340, 0, 0, 0, t332, t331, -t152, t343, 0, 0, 0, t406, t361 - t358, t55, t70, t48, t47, t90, qJD(4) * t13 - qJD(5) * t23 - t286, qJD(4) * t16 + qJD(5) * t21 - t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t297, -pkin(3) * t302, t230, -t220, 0, 0, 0, t236 * t345 - t245 * t297, t236 * t344 + t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, (-t303 - t302) * pkin(3), t230, -t220, 0, 0, 0, t170 * qJD(5) + t245 * t257 + t282, t171 * qJD(5) + t225 - t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, -t108, t104, t103, -t341, qJD(4) * t170 - t235 * t344 - t259, qJD(4) * t171 + t235 * t345 - t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, t77, 0, 0, 0, 0, 0, -qJD(2) * t1, -qJD(2) * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t152, t343, 0, 0, 0, t407, t361 + t325, t55, t70, t48, t47, t90, -qJD(3) * t13 - qJD(5) * t27 - t285, -qJD(3) * t16 + qJD(5) * t25 - t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, pkin(3) * t303, t230, -t220, 0, 0, 0, -t168 * qJD(5) + t245 * t296 - t282, -t169 * qJD(5) + t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t230, -t220, 0, 0, 0, -pkin(4) * t345, -pkin(4) * t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, -t108, t104, t103, -t341, -pkin(9) * t344 - t262, pkin(9) * t345 - t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t17, qJD(2) * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t404, -t270 - t356, -t128 * t337 - t152 * t242, t125 * t337 - t152 * t245, t132, qJD(3) * t23 + qJD(4) * t27 + t281, -qJD(3) * t21 - qJD(4) * t25 + t280; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, t108, -t123, t342, t341, qJD(4) * t168 + t259, qJD(4) * t169 + t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, t108, -t123, t342, t341, t262, t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t35;
