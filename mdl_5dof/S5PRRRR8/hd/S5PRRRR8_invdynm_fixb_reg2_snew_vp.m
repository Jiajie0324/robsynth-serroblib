% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PRRRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d2,d3,d4,d5,theta1]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:17
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PRRRR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR8_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR8_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5PRRRR8_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:17:20
% EndTime: 2019-12-05 17:17:40
% DurationCPUTime: 21.25s
% Computational Cost: add. (129941->756), mult. (259220->1153), div. (0->0), fcn. (190355->12), ass. (0->538)
t1251 = sin(qJ(5));
t1252 = sin(qJ(4));
t1253 = sin(qJ(3));
t1256 = cos(qJ(4));
t1257 = cos(qJ(3));
t1206 = (t1252 * t1257 + t1253 * t1256) * qJD(2);
t1255 = cos(qJ(5));
t1345 = qJD(3) + qJD(4);
t1172 = t1251 * t1206 - t1255 * t1345;
t1174 = t1255 * t1206 + t1251 * t1345;
t1132 = t1174 * t1172;
t1363 = qJD(2) * t1257;
t1235 = qJD(3) * t1363;
t1343 = t1253 * qJDD(2);
t1213 = t1235 + t1343;
t1364 = qJD(2) * t1253;
t1332 = qJD(3) * t1364;
t1341 = t1257 * qJDD(2);
t1277 = -t1332 + t1341;
t1325 = t1252 * t1213 - t1256 * t1277;
t1135 = -t1206 * qJD(4) - t1325;
t1133 = qJDD(5) - t1135;
t1379 = -t1132 + t1133;
t1387 = t1251 * t1379;
t1204 = t1252 * t1364 - t1256 * t1363;
t1164 = t1206 * t1204;
t1243 = qJDD(3) + qJDD(4);
t1378 = -t1164 + t1243;
t1386 = t1252 * t1378;
t1385 = t1255 * t1379;
t1384 = t1256 * t1378;
t1136 = -t1204 * qJD(4) + t1256 * t1213 + t1252 * t1277;
t1194 = t1345 * t1204;
t1383 = -t1194 + t1136;
t1247 = sin(pkin(5));
t1249 = cos(pkin(5));
t1246 = sin(pkin(10));
t1248 = cos(pkin(10));
t1329 = t1246 * g(1) - t1248 * g(2);
t1369 = g(3) - qJDD(1);
t1382 = -t1247 * t1369 + t1249 * t1329;
t1339 = t1345 ^ 2;
t1160 = t1204 * pkin(4) - t1206 * pkin(9);
t1190 = t1247 * t1329 + t1249 * t1369;
t1220 = t1248 * g(1) + t1246 * g(2);
t1254 = sin(qJ(2));
t1258 = cos(qJ(2));
t1149 = -t1258 * t1220 + t1254 * t1382;
t1375 = qJD(2) ^ 2;
t1261 = -t1375 * pkin(2) + qJDD(2) * pkin(7) + t1149;
t1106 = -t1253 * t1190 + t1257 * t1261;
t1224 = qJD(3) * pkin(3) - pkin(8) * t1364;
t1374 = t1257 ^ 2;
t1241 = t1374 * t1375;
t1064 = -pkin(3) * t1241 + pkin(8) * t1277 - qJD(3) * t1224 + t1106;
t1105 = t1257 * t1190 + t1253 * t1261;
t1229 = t1253 * t1375 * t1257;
t1221 = qJDD(3) + t1229;
t1260 = -t1105 + (-t1213 + t1235) * pkin(8) + t1221 * pkin(3);
t996 = t1256 * t1064 + t1252 * t1260;
t981 = -pkin(4) * t1339 + t1243 * pkin(9) - t1204 * t1160 + t996;
t1148 = -t1254 * t1220 - t1258 * t1382;
t1139 = -qJDD(2) * pkin(2) - t1375 * pkin(7) + t1148;
t1093 = -t1277 * pkin(3) - pkin(8) * t1241 + t1224 * t1364 + t1139;
t1327 = t1206 * t1345;
t994 = -t1383 * pkin(9) + (-t1135 + t1327) * pkin(4) + t1093;
t921 = t1251 * t981 - t1255 * t994;
t922 = t1251 * t994 + t1255 * t981;
t876 = t1251 * t921 + t1255 * t922;
t1381 = t1246 * t1369;
t1380 = t1248 * t1369;
t1377 = -t1248 * t1220 - t1246 * t1329;
t1376 = -t1246 * t1220 + t1248 * t1329;
t1170 = t1172 ^ 2;
t1171 = t1174 ^ 2;
t1196 = qJD(5) + t1204;
t1195 = t1196 ^ 2;
t1202 = t1204 ^ 2;
t1203 = t1206 ^ 2;
t995 = t1252 * t1064 - t1256 * t1260;
t926 = t1252 * t996 - t1256 * t995;
t1373 = pkin(3) * t926;
t1118 = t1206 * qJD(3) - t1325;
t1121 = t1194 + t1136;
t1037 = t1252 * t1118 - t1256 * t1121;
t1372 = pkin(3) * t1037;
t1371 = pkin(4) * t1252;
t1088 = t1254 * t1148 + t1258 * t1149;
t1370 = pkin(6) * t1088;
t980 = -t1243 * pkin(4) - pkin(9) * t1339 + t1206 * t1160 + t995;
t1368 = -pkin(4) * t980 + pkin(9) * t876;
t977 = t1251 * t980;
t1367 = t1253 * t926;
t978 = t1255 * t980;
t1366 = t1257 * t926;
t1365 = qJD(2) * qJD(3);
t1362 = t1196 * t1251;
t1361 = t1196 * t1255;
t1244 = t1253 ^ 2;
t1360 = t1244 * t1375;
t1070 = t1132 + t1133;
t1358 = t1251 * t1070;
t1357 = t1252 * t1093;
t1156 = t1164 + t1243;
t1356 = t1252 * t1156;
t1355 = t1253 * t1139;
t1354 = t1253 * t1221;
t1222 = qJDD(3) - t1229;
t1353 = t1253 * t1222;
t1352 = t1254 * t1190;
t1351 = t1255 * t1070;
t1350 = t1256 * t1093;
t1349 = t1256 * t1156;
t1348 = t1257 * t1139;
t1214 = -0.2e1 * t1332 + t1341;
t1175 = t1257 * t1214;
t1347 = t1257 * t1222;
t1346 = t1258 * t1190;
t1344 = t1247 * qJDD(2);
t1342 = t1254 * qJDD(2);
t1340 = t1258 * qJDD(2);
t1338 = t1244 + t1374;
t1337 = -pkin(4) * t1256 - pkin(3);
t1130 = -t1171 - t1195;
t1018 = -t1251 * t1130 - t1351;
t1290 = -t1255 * t1136 - t1251 * t1243;
t1057 = (qJD(5) + t1196) * t1172 + t1290;
t1336 = pkin(4) * t1057 + pkin(9) * t1018 + t977;
t1107 = -t1195 - t1170;
t1014 = t1255 * t1107 - t1387;
t1326 = -t1251 * t1136 + t1255 * t1243;
t1085 = -t1174 * qJD(5) + t1326;
t1145 = t1174 * t1196;
t1054 = t1085 - t1145;
t1335 = pkin(4) * t1054 + pkin(9) * t1014 - t978;
t1334 = t1258 * t1164;
t1333 = t1252 * t1132;
t1331 = t1254 * t1164;
t1330 = t1256 * t1132;
t927 = t1252 * t995 + t1256 * t996;
t1032 = t1253 * t1105 + t1257 * t1106;
t1090 = t1170 + t1171;
t1053 = (-qJD(5) + t1196) * t1174 + t1326;
t1086 = -t1172 * qJD(5) - t1290;
t1144 = t1196 * t1172;
t1056 = t1086 + t1144;
t985 = t1255 * t1053 + t1251 * t1056;
t1324 = pkin(4) * t1090 + pkin(9) * t985 + t876;
t868 = t1252 * t876 - t1256 * t980;
t1323 = pkin(3) * t868 + t1368;
t1322 = t1258 * t1229;
t1321 = t1254 * t1229;
t1185 = -t1203 - t1339;
t1122 = t1256 * t1185 - t1356;
t1320 = pkin(3) * t1122 - t996;
t1319 = t1252 * t1327;
t1318 = t1252 * t1194;
t1317 = t1256 * t1327;
t1316 = t1256 * t1194;
t1031 = t1257 * t1105 - t1253 * t1106;
t1215 = t1338 * qJDD(2);
t1218 = t1241 + t1360;
t1167 = t1258 * t1215 - t1254 * t1218;
t1314 = pkin(6) * t1167 + t1031 * t1254;
t1216 = -t1254 * t1375 + t1340;
t1313 = -pkin(6) * t1216 - t1352;
t1283 = t1258 * t1375 + t1342;
t1312 = -pkin(6) * t1283 + t1346;
t875 = t1251 * t922 - t1255 * t921;
t869 = t1252 * t980 + t1256 * t876;
t833 = -t1253 * t868 + t1257 * t869;
t1311 = t1254 * t833 - t1258 * t875;
t951 = t1256 * t1090 + t1252 * t985;
t952 = -t1252 * t1090 + t1256 * t985;
t893 = -t1253 * t951 + t1257 * t952;
t983 = t1251 * t1053 - t1255 * t1056;
t1310 = t1254 * t893 - t1258 * t983;
t1131 = t1171 - t1170;
t1055 = t1086 - t1144;
t986 = t1255 * t1054 - t1251 * t1055;
t961 = -t1256 * t1131 + t1252 * t986;
t962 = t1252 * t1131 + t1256 * t986;
t897 = -t1253 * t961 + t1257 * t962;
t984 = t1251 * t1054 + t1255 * t1055;
t1309 = t1254 * t897 - t1258 * t984;
t1013 = t1251 * t1107 + t1385;
t963 = t1252 * t1014 + t1256 * t1054;
t964 = t1256 * t1014 - t1252 * t1054;
t901 = -t1253 * t963 + t1257 * t964;
t1308 = -t1013 * t1258 + t1254 * t901;
t1017 = t1255 * t1130 - t1358;
t965 = t1252 * t1018 + t1256 * t1057;
t966 = t1256 * t1018 - t1252 * t1057;
t907 = -t1253 * t965 + t1257 * t966;
t1307 = -t1017 * t1258 + t1254 * t907;
t1143 = -t1171 + t1195;
t1026 = t1255 * t1143 + t1387;
t1028 = -t1251 * t1143 + t1385;
t969 = t1252 * t1028 - t1256 * t1056;
t971 = t1256 * t1028 + t1252 * t1056;
t910 = -t1253 * t969 + t1257 * t971;
t1306 = -t1026 * t1258 + t1254 * t910;
t1142 = t1170 - t1195;
t1027 = t1251 * t1142 + t1351;
t1029 = t1255 * t1142 - t1358;
t1052 = -t1085 - t1145;
t970 = t1252 * t1029 + t1256 * t1052;
t972 = t1256 * t1029 - t1252 * t1052;
t911 = -t1253 * t970 + t1257 * t972;
t1305 = -t1027 * t1258 + t1254 * t911;
t1042 = -t1255 * t1085 - t1172 * t1362;
t1043 = -t1251 * t1085 + t1172 * t1361;
t1006 = t1252 * t1043 + t1330;
t1008 = t1256 * t1043 - t1333;
t941 = -t1253 * t1006 + t1257 * t1008;
t1304 = t1042 * t1258 + t1254 * t941;
t1044 = t1251 * t1086 + t1174 * t1361;
t1045 = t1255 * t1086 - t1174 * t1362;
t1007 = t1252 * t1045 - t1330;
t1009 = t1256 * t1045 + t1333;
t942 = -t1253 * t1007 + t1257 * t1009;
t1303 = -t1044 * t1258 + t1254 * t942;
t1076 = (-t1172 * t1251 - t1174 * t1255) * t1196;
t1077 = (-t1172 * t1255 + t1174 * t1251) * t1196;
t1034 = t1252 * t1077 - t1256 * t1133;
t1035 = t1256 * t1077 + t1252 * t1133;
t968 = -t1253 * t1034 + t1257 * t1035;
t1302 = -t1076 * t1258 + t1254 * t968;
t885 = t1257 * t927 - t1367;
t1301 = -t1093 * t1258 + t1254 * t885;
t1138 = -t1202 - t1203;
t1039 = t1256 * t1118 + t1252 * t1121;
t976 = -t1253 * t1037 + t1257 * t1039;
t1300 = -t1138 * t1258 + t1254 * t976;
t1163 = t1203 - t1202;
t1116 = (0.2e1 * qJD(4) + qJD(3)) * t1206 + t1325;
t1036 = -t1252 * t1116 + t1256 * t1383;
t1038 = -t1256 * t1116 - t1252 * t1383;
t975 = -t1253 * t1036 + t1257 * t1038;
t1299 = -t1163 * t1258 + t1254 * t975;
t1298 = pkin(3) * t963 + t1335;
t1297 = pkin(3) * t965 + t1336;
t1150 = -t1339 - t1202;
t1091 = t1252 * t1150 + t1384;
t1092 = t1256 * t1150 - t1386;
t1020 = -t1253 * t1091 + t1257 * t1092;
t1296 = t1020 * t1254 - t1116 * t1258;
t1295 = t1032 * t1254 - t1139 * t1258;
t1123 = -t1252 * t1185 - t1349;
t1041 = -t1253 * t1122 + t1257 * t1123;
t1294 = t1041 * t1254 - t1258 * t1383;
t1192 = -t1203 + t1339;
t1126 = t1256 * t1192 + t1386;
t1128 = -t1252 * t1192 + t1384;
t1048 = -t1253 * t1126 + t1257 * t1128;
t1293 = t1048 * t1254 - t1121 * t1258;
t1191 = t1202 - t1339;
t1127 = t1252 * t1191 + t1349;
t1129 = t1256 * t1191 - t1356;
t1049 = -t1253 * t1127 + t1257 * t1129;
t1292 = t1049 * t1254 - t1118 * t1258;
t1140 = -t1318 - t1317;
t1141 = -t1316 + t1319;
t1075 = -t1253 * t1140 + t1257 * t1141;
t1291 = t1075 * t1254 - t1243 * t1258;
t1087 = t1258 * t1148 - t1254 * t1149;
t1212 = 0.2e1 * t1235 + t1343;
t1166 = -t1253 * t1212 + t1175;
t1219 = -t1241 + t1360;
t1289 = t1166 * t1254 - t1219 * t1258;
t1259 = qJD(3) ^ 2;
t1228 = -t1241 - t1259;
t1182 = t1257 * t1228 - t1354;
t1288 = t1182 * t1254 + t1214 * t1258;
t1226 = -t1259 - t1360;
t1184 = -t1253 * t1226 - t1347;
t1287 = t1184 * t1254 - t1212 * t1258;
t1199 = t1283 * t1249;
t1286 = t1248 * t1199 + t1246 * t1216;
t1285 = t1246 * t1199 - t1248 * t1216;
t1284 = t1215 * t1254 + t1218 * t1258;
t1210 = t1338 * t1365;
t1282 = -qJDD(3) * t1258 + t1210 * t1254;
t1281 = pkin(3) * t1091 - t995;
t1280 = pkin(3) * t951 + t1324;
t1101 = t1256 * t1135 + t1318;
t1102 = -t1252 * t1135 + t1316;
t1024 = -t1253 * t1101 + t1257 * t1102;
t1279 = t1024 * t1254 + t1334;
t1103 = t1252 * t1136 + t1317;
t1104 = t1256 * t1136 - t1319;
t1025 = -t1253 * t1103 + t1257 * t1104;
t1278 = t1025 * t1254 - t1334;
t1227 = t1241 - t1259;
t1181 = t1257 * t1227 - t1353;
t1276 = t1181 * t1254 - t1257 * t1340;
t1211 = t1257 * t1221;
t1225 = t1259 - t1360;
t1183 = -t1253 * t1225 + t1211;
t1275 = t1183 * t1254 - t1253 * t1340;
t824 = pkin(8) * t869 + (-pkin(9) * t1252 + t1337) * t875;
t830 = -pkin(8) * t868 + (-pkin(9) * t1256 + t1371) * t875;
t832 = t1253 * t869 + t1257 * t868;
t811 = -pkin(7) * t832 - t1253 * t824 + t1257 * t830;
t819 = -pkin(2) * t832 - t1323;
t829 = t1254 * t875 + t1258 * t833;
t1274 = pkin(6) * t829 + t1254 * t811 + t1258 * t819;
t870 = -pkin(9) * t983 - t875;
t837 = pkin(8) * t952 + t1252 * t870 + t1337 * t983;
t841 = -pkin(8) * t951 + t1256 * t870 + t983 * t1371;
t892 = t1253 * t952 + t1257 * t951;
t821 = -pkin(7) * t892 - t1253 * t837 + t1257 * t841;
t834 = -pkin(2) * t892 - t1280;
t877 = t1254 * t983 + t1258 * t893;
t1273 = pkin(6) * t877 + t1254 * t821 + t1258 * t834;
t894 = -pkin(4) * t1013 + t921;
t923 = -pkin(9) * t1013 + t977;
t849 = -pkin(3) * t1013 + pkin(8) * t964 + t1252 * t923 + t1256 * t894;
t859 = -pkin(8) * t963 - t1252 * t894 + t1256 * t923;
t900 = t1253 * t964 + t1257 * t963;
t827 = -pkin(7) * t900 - t1253 * t849 + t1257 * t859;
t854 = -pkin(2) * t900 - t1298;
t886 = t1254 * t1013 + t1258 * t901;
t1272 = pkin(6) * t886 + t1254 * t827 + t1258 * t854;
t895 = -pkin(4) * t1017 + t922;
t925 = -pkin(9) * t1017 + t978;
t852 = -pkin(3) * t1017 + pkin(8) * t966 + t1252 * t925 + t1256 * t895;
t860 = -pkin(8) * t965 - t1252 * t895 + t1256 * t925;
t906 = t1253 * t966 + t1257 * t965;
t828 = -pkin(7) * t906 - t1253 * t852 + t1257 * t860;
t855 = -pkin(2) * t906 - t1297;
t887 = t1254 * t1017 + t1258 * t907;
t1271 = pkin(6) * t887 + t1254 * t828 + t1258 * t855;
t884 = t1253 * t927 + t1366;
t917 = -pkin(3) * t1093 + pkin(8) * t927;
t845 = -pkin(7) * t884 - pkin(8) * t1366 - t1253 * t917;
t867 = -pkin(2) * t884 - t1373;
t878 = t1254 * t1093 + t1258 * t885;
t1270 = pkin(6) * t878 + t1254 * t845 + t1258 * t867;
t905 = -pkin(3) * t1138 + pkin(8) * t1039 + t927;
t913 = -pkin(8) * t1037 - t926;
t974 = t1257 * t1037 + t1253 * t1039;
t856 = -pkin(7) * t974 - t1253 * t905 + t1257 * t913;
t928 = -pkin(2) * t974 - t1372;
t957 = t1254 * t1138 + t1258 * t976;
t1269 = pkin(6) * t957 + t1254 * t856 + t1258 * t928;
t1019 = t1257 * t1091 + t1253 * t1092;
t1021 = -pkin(8) * t1091 + t1357;
t990 = -pkin(3) * t1116 + pkin(8) * t1092 - t1350;
t914 = -pkin(7) * t1019 + t1257 * t1021 - t1253 * t990;
t924 = -pkin(2) * t1019 - t1281;
t988 = t1258 * t1020 + t1254 * t1116;
t1268 = pkin(6) * t988 + t1254 * t914 + t1258 * t924;
t1033 = -pkin(8) * t1122 + t1350;
t1040 = t1257 * t1122 + t1253 * t1123;
t992 = -pkin(3) * t1383 + pkin(8) * t1123 + t1357;
t918 = -pkin(7) * t1040 + t1257 * t1033 - t1253 * t992;
t929 = -pkin(2) * t1040 - t1320;
t997 = t1258 * t1041 + t1254 * t1383;
t1267 = pkin(6) * t997 + t1254 * t918 + t1258 * t929;
t1187 = -t1253 * t1277 - t1374 * t1365;
t1266 = t1187 * t1254 - t1322;
t1188 = t1257 * t1213 - t1244 * t1365;
t1265 = t1188 * t1254 + t1322;
t1178 = t1253 * t1228 + t1211;
t1072 = -pkin(2) * t1178 + t1105;
t1099 = -pkin(7) * t1178 + t1355;
t1146 = t1258 * t1182 - t1254 * t1214;
t1264 = pkin(6) * t1146 + t1072 * t1258 + t1099 * t1254;
t1180 = t1257 * t1226 - t1353;
t1073 = -pkin(2) * t1180 + t1106;
t1100 = -pkin(7) * t1180 + t1348;
t1147 = t1258 * t1184 + t1254 * t1212;
t1263 = pkin(6) * t1147 + t1073 * t1258 + t1100 * t1254;
t1004 = t1258 * t1032 + t1254 * t1139;
t1262 = pkin(6) * t1004 - (-pkin(2) * t1258 - pkin(7) * t1254) * t1031;
t1238 = t1249 * qJDD(2);
t1200 = t1216 * t1249;
t1198 = t1216 * t1247;
t1197 = t1283 * t1247;
t1189 = t1254 * qJDD(3) + t1258 * t1210;
t1179 = t1257 * t1225 + t1354;
t1177 = t1253 * t1227 + t1347;
t1176 = (t1213 + t1235) * t1253;
t1169 = t1282 * t1249;
t1168 = t1282 * t1247;
t1165 = t1257 * t1212 + t1253 * t1214;
t1162 = t1284 * t1249;
t1161 = t1284 * t1247;
t1159 = -t1246 * t1200 - t1248 * t1283;
t1158 = t1248 * t1200 - t1246 * t1283;
t1154 = t1258 * t1188 - t1321;
t1153 = t1258 * t1187 + t1321;
t1152 = t1258 * t1183 + t1253 * t1342;
t1151 = t1258 * t1181 + t1254 * t1341;
t1137 = t1258 * t1166 + t1254 * t1219;
t1125 = -t1346 + (t1197 * t1247 + t1199 * t1249) * pkin(6);
t1124 = -t1352 + (-t1198 * t1247 - t1200 * t1249) * pkin(6);
t1115 = -t1247 * t1176 + t1249 * t1265;
t1114 = -t1247 * t1175 + t1249 * t1266;
t1113 = t1249 * t1176 + t1247 * t1265;
t1112 = t1249 * t1175 + t1247 * t1266;
t1111 = -t1247 * t1179 + t1249 * t1275;
t1110 = -t1247 * t1177 + t1249 * t1276;
t1109 = t1249 * t1179 + t1247 * t1275;
t1108 = t1249 * t1177 + t1247 * t1276;
t1097 = -t1247 * t1180 + t1249 * t1287;
t1096 = -t1247 * t1178 + t1249 * t1288;
t1095 = t1249 * t1180 + t1247 * t1287;
t1094 = t1249 * t1178 + t1247 * t1288;
t1084 = -t1247 * t1165 + t1249 * t1289;
t1083 = t1249 * t1165 + t1247 * t1289;
t1082 = pkin(2) * t1214 + pkin(7) * t1182 - t1348;
t1081 = -pkin(2) * t1212 + pkin(7) * t1184 + t1355;
t1079 = t1088 * t1249;
t1078 = t1088 * t1247;
t1074 = t1257 * t1140 + t1253 * t1141;
t1068 = -pkin(1) * t1198 + t1247 * t1148 + t1249 * t1312;
t1067 = pkin(1) * t1197 + t1247 * t1149 + t1249 * t1313;
t1066 = pkin(1) * t1200 - t1249 * t1148 + t1247 * t1312;
t1065 = -pkin(1) * t1199 - t1249 * t1149 + t1247 * t1313;
t1060 = t1258 * t1075 + t1254 * t1243;
t1059 = -t1087 * t1249 + t1247 * t1190;
t1058 = -t1087 * t1247 - t1249 * t1190;
t1047 = t1257 * t1127 + t1253 * t1129;
t1046 = t1257 * t1126 + t1253 * t1128;
t1023 = t1257 * t1103 + t1253 * t1104;
t1022 = t1257 * t1101 + t1253 * t1102;
t1015 = pkin(2) * t1218 + pkin(7) * t1215 + t1032;
t1011 = t1258 * t1025 + t1331;
t1010 = t1258 * t1024 - t1331;
t1005 = -pkin(2) * t1139 + pkin(7) * t1032;
t1003 = pkin(1) * t1059 + t1247 * t1370;
t1002 = -pkin(1) * t1058 + t1249 * t1370;
t1001 = t1258 * t1049 + t1118 * t1254;
t1000 = t1258 * t1048 + t1254 * t1121;
t999 = -t1247 * t1074 + t1249 * t1291;
t998 = t1249 * t1074 + t1247 * t1291;
t989 = t1258 * t1031 + (-t1161 * t1247 - t1162 * t1249) * pkin(6);
t987 = (-t1058 * t1247 - t1059 * t1249) * pkin(6);
t973 = t1257 * t1036 + t1253 * t1038;
t967 = t1257 * t1034 + t1253 * t1035;
t960 = t1254 * t1163 + t1258 * t975;
t959 = -t1254 * t1073 + t1258 * t1100 + (-t1095 * t1247 - t1097 * t1249) * pkin(6);
t958 = -t1254 * t1072 + t1258 * t1099 + (-t1094 * t1247 - t1096 * t1249) * pkin(6);
t956 = -t1247 * t1047 + t1249 * t1292;
t955 = -t1247 * t1046 + t1249 * t1293;
t954 = t1249 * t1047 + t1247 * t1292;
t953 = t1249 * t1046 + t1247 * t1293;
t950 = -t1247 * t1023 + t1249 * t1278;
t949 = -t1247 * t1022 + t1249 * t1279;
t948 = t1249 * t1023 + t1247 * t1278;
t947 = t1249 * t1022 + t1247 * t1279;
t946 = -t1247 * t1040 + t1249 * t1294;
t945 = t1249 * t1040 + t1247 * t1294;
t944 = t1031 * t1247 + t1249 * t1295;
t943 = -t1031 * t1249 + t1247 * t1295;
t940 = t1257 * t1007 + t1253 * t1009;
t939 = t1257 * t1006 + t1253 * t1008;
t938 = -pkin(1) * t1095 - t1247 * t1081 + t1249 * t1263;
t937 = -pkin(1) * t1094 - t1247 * t1082 + t1249 * t1264;
t936 = pkin(1) * t1097 + t1249 * t1081 + t1247 * t1263;
t935 = pkin(1) * t1096 + t1249 * t1082 + t1247 * t1264;
t934 = t1254 * t1076 + t1258 * t968;
t933 = -pkin(1) * t1161 - t1247 * t1015 + t1249 * t1314;
t932 = pkin(1) * t1162 + t1249 * t1015 + t1247 * t1314;
t931 = -t1247 * t1019 + t1249 * t1296;
t930 = t1249 * t1019 + t1247 * t1296;
t916 = t1254 * t1044 + t1258 * t942;
t915 = -t1254 * t1042 + t1258 * t941;
t912 = -pkin(2) * t1383 + pkin(7) * t1041 + t1253 * t1033 + t1257 * t992;
t909 = t1253 * t972 + t1257 * t970;
t908 = t1253 * t971 + t1257 * t969;
t904 = -t1247 * t973 + t1249 * t1299;
t903 = t1247 * t1299 + t1249 * t973;
t902 = -pkin(2) * t1116 + pkin(7) * t1020 + t1253 * t1021 + t1257 * t990;
t899 = -t1247 * t974 + t1249 * t1300;
t898 = t1247 * t1300 + t1249 * t974;
t896 = t1253 * t962 + t1257 * t961;
t891 = -t1247 * t967 + t1249 * t1302;
t890 = t1247 * t1302 + t1249 * t967;
t889 = t1254 * t1027 + t1258 * t911;
t888 = t1254 * t1026 + t1258 * t910;
t883 = t1254 * t984 + t1258 * t897;
t882 = -t1247 * t940 + t1249 * t1303;
t881 = -t1247 * t939 + t1249 * t1304;
t880 = t1247 * t1303 + t1249 * t940;
t879 = t1247 * t1304 + t1249 * t939;
t873 = -(pkin(2) * t1254 - pkin(7) * t1258) * t1031 + (-t1247 * t943 - t1249 * t944) * pkin(6);
t872 = -pkin(1) * t943 - t1247 * t1005 + t1249 * t1262;
t871 = pkin(1) * t944 + t1249 * t1005 + t1247 * t1262;
t866 = -t1247 * t909 + t1249 * t1305;
t865 = -t1247 * t908 + t1249 * t1306;
t864 = t1247 * t1305 + t1249 * t909;
t863 = t1247 * t1306 + t1249 * t908;
t862 = -t1247 * t906 + t1249 * t1307;
t861 = t1247 * t1307 + t1249 * t906;
t858 = -t1247 * t900 + t1249 * t1308;
t857 = t1247 * t1308 + t1249 * t900;
t853 = -pkin(2) * t1138 + pkin(7) * t976 + t1253 * t913 + t1257 * t905;
t851 = -t1247 * t896 + t1249 * t1309;
t850 = t1247 * t1309 + t1249 * t896;
t848 = -t1254 * t929 + t1258 * t918 + (-t1247 * t945 - t1249 * t946) * pkin(6);
t847 = -t1247 * t892 + t1249 * t1310;
t846 = t1247 * t1310 + t1249 * t892;
t844 = -t1247 * t884 + t1249 * t1301;
t843 = t1247 * t1301 + t1249 * t884;
t842 = -t1254 * t924 + t1258 * t914 + (-t1247 * t930 - t1249 * t931) * pkin(6);
t840 = -pkin(2) * t1093 + pkin(7) * t885 - pkin(8) * t1367 + t1257 * t917;
t839 = -pkin(1) * t945 - t1247 * t912 + t1249 * t1267;
t838 = pkin(1) * t946 + t1247 * t1267 + t1249 * t912;
t836 = -pkin(1) * t930 - t1247 * t902 + t1249 * t1268;
t835 = pkin(1) * t931 + t1247 * t1268 + t1249 * t902;
t831 = -t1254 * t928 + t1258 * t856 + (-t1247 * t898 - t1249 * t899) * pkin(6);
t826 = -pkin(2) * t1017 + pkin(7) * t907 + t1253 * t860 + t1257 * t852;
t825 = -pkin(2) * t1013 + pkin(7) * t901 + t1253 * t859 + t1257 * t849;
t823 = -pkin(1) * t898 - t1247 * t853 + t1249 * t1269;
t822 = pkin(1) * t899 + t1247 * t1269 + t1249 * t853;
t820 = -pkin(2) * t983 + pkin(7) * t893 + t1253 * t841 + t1257 * t837;
t818 = -t1247 * t832 + t1249 * t1311;
t817 = t1247 * t1311 + t1249 * t832;
t816 = -t1254 * t867 + t1258 * t845 + (-t1247 * t843 - t1249 * t844) * pkin(6);
t815 = -pkin(1) * t843 - t1247 * t840 + t1249 * t1270;
t814 = pkin(1) * t844 + t1247 * t1270 + t1249 * t840;
t813 = -t1254 * t855 + t1258 * t828 + (-t1247 * t861 - t1249 * t862) * pkin(6);
t812 = -t1254 * t854 + t1258 * t827 + (-t1247 * t857 - t1249 * t858) * pkin(6);
t810 = -t1254 * t834 + t1258 * t821 + (-t1247 * t846 - t1249 * t847) * pkin(6);
t809 = -pkin(2) * t875 + pkin(7) * t833 + t1253 * t830 + t1257 * t824;
t808 = -pkin(1) * t861 - t1247 * t826 + t1249 * t1271;
t807 = pkin(1) * t862 + t1247 * t1271 + t1249 * t826;
t806 = -pkin(1) * t857 - t1247 * t825 + t1249 * t1272;
t805 = pkin(1) * t858 + t1247 * t1272 + t1249 * t825;
t804 = -pkin(1) * t846 - t1247 * t820 + t1249 * t1273;
t803 = pkin(1) * t847 + t1247 * t1273 + t1249 * t820;
t802 = -t1254 * t819 + t1258 * t811 + (-t1247 * t817 - t1249 * t818) * pkin(6);
t801 = -pkin(1) * t817 - t1247 * t809 + t1249 * t1274;
t800 = pkin(1) * t818 + t1247 * t1274 + t1249 * t809;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1381, -t1380, -t1376, -qJ(1) * t1376, 0, 0, -t1285, 0, t1159, t1246 * t1344, -qJ(1) * t1158 - t1246 * t1068 + t1248 * t1124, qJ(1) * t1286 - t1246 * t1067 + t1248 * t1125, -t1246 * t1079 + t1248 * t1087, t1248 * t987 - t1246 * t1002 - qJ(1) * (t1248 * t1059 + t1246 * t1088), -t1246 * t1115 + t1248 * t1154, -t1246 * t1084 + t1248 * t1137, -t1246 * t1111 + t1248 * t1152, -t1246 * t1114 + t1248 * t1153, -t1246 * t1110 + t1248 * t1151, -t1246 * t1169 + t1248 * t1189, t1248 * t958 - t1246 * t937 - qJ(1) * (t1248 * t1096 + t1246 * t1146), t1248 * t959 - t1246 * t938 - qJ(1) * (t1248 * t1097 + t1246 * t1147), t1248 * t989 - t1246 * t933 - qJ(1) * (t1248 * t1162 + t1246 * t1167), t1248 * t873 - t1246 * t872 - qJ(1) * (t1246 * t1004 + t1248 * t944), t1248 * t1011 - t1246 * t950, -t1246 * t904 + t1248 * t960, t1248 * t1000 - t1246 * t955, t1248 * t1010 - t1246 * t949, t1248 * t1001 - t1246 * t956, t1248 * t1060 - t1246 * t999, t1248 * t842 - t1246 * t836 - qJ(1) * (t1246 * t988 + t1248 * t931), t1248 * t848 - t1246 * t839 - qJ(1) * (t1246 * t997 + t1248 * t946), t1248 * t831 - t1246 * t823 - qJ(1) * (t1246 * t957 + t1248 * t899), t1248 * t816 - t1246 * t815 - qJ(1) * (t1246 * t878 + t1248 * t844), -t1246 * t882 + t1248 * t916, -t1246 * t851 + t1248 * t883, -t1246 * t865 + t1248 * t888, -t1246 * t881 + t1248 * t915, -t1246 * t866 + t1248 * t889, -t1246 * t891 + t1248 * t934, t1248 * t812 - t1246 * t806 - qJ(1) * (t1246 * t886 + t1248 * t858), t1248 * t813 - t1246 * t808 - qJ(1) * (t1246 * t887 + t1248 * t862), t1248 * t810 - t1246 * t804 - qJ(1) * (t1246 * t877 + t1248 * t847), t1248 * t802 - t1246 * t801 - qJ(1) * (t1246 * t829 + t1248 * t818); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1380, -t1381, t1377, qJ(1) * t1377, 0, 0, t1286, 0, t1158, -t1248 * t1344, qJ(1) * t1159 + t1248 * t1068 + t1246 * t1124, qJ(1) * t1285 + t1248 * t1067 + t1246 * t1125, t1248 * t1079 + t1246 * t1087, t1246 * t987 + t1248 * t1002 + qJ(1) * (-t1246 * t1059 + t1248 * t1088), t1248 * t1115 + t1246 * t1154, t1248 * t1084 + t1246 * t1137, t1248 * t1111 + t1246 * t1152, t1248 * t1114 + t1246 * t1153, t1248 * t1110 + t1246 * t1151, t1248 * t1169 + t1246 * t1189, t1246 * t958 + t1248 * t937 + qJ(1) * (-t1246 * t1096 + t1248 * t1146), t1246 * t959 + t1248 * t938 + qJ(1) * (-t1246 * t1097 + t1248 * t1147), t1246 * t989 + t1248 * t933 + qJ(1) * (-t1246 * t1162 + t1248 * t1167), t1246 * t873 + t1248 * t872 + qJ(1) * (t1248 * t1004 - t1246 * t944), t1246 * t1011 + t1248 * t950, t1246 * t960 + t1248 * t904, t1246 * t1000 + t1248 * t955, t1246 * t1010 + t1248 * t949, t1246 * t1001 + t1248 * t956, t1246 * t1060 + t1248 * t999, t1246 * t842 + t1248 * t836 + qJ(1) * (-t1246 * t931 + t1248 * t988), t1246 * t848 + t1248 * t839 + qJ(1) * (-t1246 * t946 + t1248 * t997), t1246 * t831 + t1248 * t823 + qJ(1) * (-t1246 * t899 + t1248 * t957), t1246 * t816 + t1248 * t815 + qJ(1) * (-t1246 * t844 + t1248 * t878), t1246 * t916 + t1248 * t882, t1246 * t883 + t1248 * t851, t1246 * t888 + t1248 * t865, t1246 * t915 + t1248 * t881, t1246 * t889 + t1248 * t866, t1246 * t934 + t1248 * t891, t1246 * t812 + t1248 * t806 + qJ(1) * (-t1246 * t858 + t1248 * t886), t1246 * t813 + t1248 * t808 + qJ(1) * (-t1246 * t862 + t1248 * t887), t1246 * t810 + t1248 * t804 + qJ(1) * (-t1246 * t847 + t1248 * t877), t1246 * t802 + t1248 * t801 + qJ(1) * (-t1246 * t818 + t1248 * t829); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1329, t1220, 0, 0, 0, 0, t1197, 0, t1198, t1238, t1066, t1065, t1078, t1003, t1113, t1083, t1109, t1112, t1108, t1168, t935, t936, t932, t871, t948, t903, t953, t947, t954, t998, t835, t838, t822, t814, t880, t850, t863, t879, t864, t890, t805, t807, t803, t800; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1369, -t1329, 0, 0, 0, t1216, 0, -t1283, 0, t1124, t1125, t1087, t987, t1154, t1137, t1152, t1153, t1151, t1189, t958, t959, t989, t873, t1011, t960, t1000, t1010, t1001, t1060, t842, t848, t831, t816, t916, t883, t888, t915, t889, t934, t812, t813, t810, t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1369, 0, -t1220, 0, 0, 0, t1199, 0, t1200, -t1344, t1068, t1067, t1079, t1002, t1115, t1084, t1111, t1114, t1110, t1169, t937, t938, t933, t872, t950, t904, t955, t949, t956, t999, t836, t839, t823, t815, t882, t851, t865, t881, t866, t891, t806, t808, t804, t801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1329, t1220, 0, 0, 0, 0, t1197, 0, t1198, t1238, t1066, t1065, t1078, t1003, t1113, t1083, t1109, t1112, t1108, t1168, t935, t936, t932, t871, t948, t903, t953, t947, t954, t998, t835, t838, t822, t814, t880, t850, t863, t879, t864, t890, t805, t807, t803, t800; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1375, 0, 0, -t1190, t1148, 0, t1188, t1166, t1183, t1187, t1181, t1210, t1099, t1100, t1031, pkin(7) * t1031, t1025, t975, t1048, t1024, t1049, t1075, t914, t918, t856, t845, t942, t897, t910, t941, t911, t968, t827, t828, t821, t811; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1375, 0, qJDD(2), 0, t1190, 0, t1149, 0, t1229, -t1219, -t1343, -t1229, -t1341, -qJDD(3), t1072, t1073, 0, pkin(2) * t1031, -t1164, -t1163, -t1121, t1164, -t1118, -t1243, t924, t929, t928, t867, -t1044, -t984, -t1026, t1042, -t1027, -t1076, t854, t855, t834, t819; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1148, -t1149, 0, 0, t1176, t1165, t1179, t1175, t1177, 0, t1082, t1081, t1015, t1005, t1023, t973, t1046, t1022, t1047, t1074, t902, t912, t853, t840, t940, t896, t908, t939, t909, t967, t825, t826, t820, t809; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1213, t1214, t1221, -t1235, t1227, t1235, 0, t1139, t1105, 0, t1104, t1038, t1128, t1102, t1129, t1141, t1021, t1033, t913, -pkin(8) * t926, t1009, t962, t971, t1008, t972, t1035, t859, t860, t841, t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1332, t1212, t1225, t1277, t1222, -t1332, -t1139, 0, t1106, 0, t1103, t1036, t1126, t1101, t1127, t1140, t990, t992, t905, t917, t1007, t961, t969, t1006, t970, t1034, t849, t852, t837, t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1229, t1219, t1343, t1229, t1341, qJDD(3), -t1105, -t1106, 0, 0, t1164, t1163, t1121, -t1164, t1118, t1243, t1281, t1320, t1372, t1373, t1044, t984, t1026, -t1042, t1027, t1076, t1298, t1297, t1280, t1323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1136, -t1116, t1378, t1194, t1191, -t1194, 0, t1093, t995, 0, t1045, t986, t1028, t1043, t1029, t1077, t923, t925, t870, -pkin(9) * t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1327, t1383, t1192, t1135, t1156, -t1327, -t1093, 0, t996, 0, -t1132, -t1131, -t1056, t1132, t1052, -t1133, t894, t895, -pkin(4) * t983, -pkin(4) * t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1164, t1163, t1121, -t1164, t1118, t1243, -t995, -t996, 0, 0, t1044, t984, t1026, -t1042, t1027, t1076, t1335, t1336, t1324, t1368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1086, t1054, t1379, t1144, t1142, -t1144, 0, t980, t921, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1145, t1055, t1143, t1085, t1070, -t1145, -t980, 0, t922, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1132, t1131, t1056, -t1132, -t1052, t1133, -t921, -t922, 0, 0;];
m_new_reg = t1;
