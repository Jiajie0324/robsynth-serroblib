% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRPR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:25
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRPR9_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR9_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR9_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR9_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR9_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRPR9_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:24:52
% EndTime: 2019-12-31 18:25:03
% DurationCPUTime: 11.87s
% Computational Cost: add. (26017->567), mult. (52613->675), div. (0->0), fcn. (29375->8), ass. (0->376)
t1002 = cos(qJ(1));
t1001 = cos(qJ(3));
t1003 = qJD(1) ^ 2;
t1058 = t1001 * t1003;
t998 = sin(qJ(3));
t974 = t998 * t1058;
t963 = qJDD(3) - t974;
t1066 = t1001 * t963;
t1108 = qJD(3) ^ 2;
t989 = t998 ^ 2;
t984 = t989 * t1003;
t968 = -t984 - t1108;
t906 = t998 * t968 + t1066;
t1057 = t998 * qJDD(1);
t1061 = qJD(1) * t1001;
t980 = qJD(3) * t1061;
t951 = 0.2e1 * t980 + t1057;
t993 = sin(pkin(8));
t994 = cos(pkin(8));
t840 = t993 * t906 + t994 * t951;
t844 = t994 * t906 - t993 * t951;
t999 = sin(qJ(1));
t1158 = pkin(5) * (t1002 * t840 + t999 * t844);
t1157 = pkin(5) * (t1002 * t844 - t999 * t840);
t1156 = pkin(1) * t840;
t962 = qJDD(3) + t974;
t1082 = t998 * t962;
t1107 = t1001 ^ 2;
t985 = t1107 * t1003;
t970 = -t985 - t1108;
t902 = t1001 * t970 - t1082;
t1062 = qJD(1) * qJD(3);
t1046 = t998 * t1062;
t983 = t1001 * qJDD(1);
t953 = t983 - 0.2e1 * t1046;
t838 = t993 * t902 + t994 * t953;
t842 = t994 * t902 - t993 * t953;
t1155 = pkin(5) * (t1002 * t838 + t999 * t842);
t1154 = pkin(5) * (t1002 * t842 - t999 * t838);
t1153 = qJ(2) * t840;
t1081 = t998 * t963;
t899 = t1001 * t968 - t1081;
t1152 = pkin(1) * t899 + qJ(2) * t844;
t1067 = t1001 * t962;
t967 = -t984 + t1108;
t905 = -t998 * t967 + t1067;
t860 = -t994 * t1057 + t993 * t905;
t864 = t993 * t1057 + t994 * t905;
t1149 = t1002 * t864 - t999 * t860;
t1148 = t1002 * t860 + t999 * t864;
t1147 = pkin(1) * t838;
t1146 = qJ(2) * t838;
t894 = t998 * t970 + t1067;
t1145 = pkin(1) * t894 - qJ(2) * t842;
t969 = t985 - t1108;
t901 = t1001 * t969 - t1081;
t858 = t993 * t901 - t994 * t983;
t862 = t994 * t901 + t993 * t983;
t1142 = t1002 * t862 - t999 * t858;
t1141 = t1002 * t858 + t999 * t862;
t1139 = pkin(2) * t894;
t1138 = pkin(6) * t894;
t965 = t999 * g(1) - t1002 * g(2);
t1017 = qJDD(1) * pkin(1) + t965;
t966 = t1002 * g(1) + t999 * g(2);
t949 = -t1003 * pkin(1) - t966;
t873 = -t994 * t1017 + t993 * t949;
t874 = t1017 * t993 + t994 * t949;
t1041 = t993 * t873 + t994 * t874;
t802 = t994 * t873 - t993 * t874;
t1075 = t999 * t802;
t1137 = t1002 * t1041 + t1075;
t1065 = t1002 * t802;
t1136 = -t1041 * t999 + t1065;
t1135 = -pkin(2) * t951 - pkin(6) * t906;
t1134 = 2 * qJD(4);
t1132 = pkin(2) * t899;
t1131 = pkin(6) * t899;
t952 = t980 + t1057;
t1130 = t952 + t980;
t1000 = cos(qJ(5));
t997 = sin(qJ(5));
t943 = t997 * qJD(3) + t1000 * t1061;
t945 = t1000 * qJD(3) - t997 * t1061;
t885 = t945 * t943;
t931 = qJDD(5) + t952;
t1122 = -t885 + t931;
t1129 = t1122 * t997;
t1128 = t1000 * t1122;
t1022 = -pkin(3) * t1001 - qJ(4) * t998;
t857 = -t1003 * pkin(2) + qJDD(1) * pkin(6) + t874;
t1038 = t1003 * t1022 + t857;
t990 = g(3) - qJDD(2);
t1076 = t998 * t990;
t1006 = -t1108 * pkin(3) + t1038 * t1001 - t1076;
t1005 = qJD(3) * t1134 + t1006;
t1127 = t1005 + (qJDD(3) + t963) * qJ(4) - pkin(3) * t968;
t1126 = pkin(2) * t953 + pkin(6) * t902;
t956 = t994 * qJDD(1) - t993 * t1003;
t1020 = -qJ(2) * t956 - t993 * t990;
t955 = t993 * qJDD(1) + t994 * t1003;
t1118 = t1002 * t955 + t999 * t956;
t919 = qJ(2) * t955 - t994 * t990;
t1125 = pkin(5) * t1118 + t1002 * t919 - t1020 * t999;
t880 = t1002 * t956 - t999 * t955;
t1124 = -pkin(5) * t880 + t1002 * t1020 + t999 * t919;
t979 = t1001 * t990;
t831 = t998 * t857 + t979;
t833 = t1001 * t857 - t1076;
t768 = t1001 * t833 + t998 * t831;
t1024 = -t983 + t1046;
t871 = -t943 * qJD(5) + t1000 * qJDD(3) + t1024 * t997;
t1064 = t998 * qJD(1);
t975 = qJD(5) + t1064;
t921 = t975 * t943;
t1121 = -t921 + t871;
t856 = -qJDD(1) * pkin(2) - t1003 * pkin(6) + t873;
t1008 = t1024 * pkin(3) - t1130 * qJ(4) + t856;
t1063 = pkin(4) * t1064 - qJD(3) * pkin(7) + t1134;
t1105 = pkin(3) + pkin(7);
t759 = -pkin(4) * t985 - t983 * pkin(7) + (t1105 * qJD(3) - t1063) * t1064 + t1008;
t1028 = -qJDD(3) * pkin(3) - t1108 * qJ(4) + qJDD(4) + t979;
t764 = -qJDD(3) * pkin(7) + (t952 - t980) * pkin(4) + (-pkin(7) * t1058 + t1038) * t998 + t1028;
t704 = -t1000 * t764 + t997 * t759;
t705 = t1000 * t759 + t997 * t764;
t1119 = -t1000 * t704 + t997 * t705;
t893 = t998 * t969 + t1066;
t799 = t1038 * t998 + t1028;
t1115 = -pkin(3) * t962 - qJ(4) * t970 + t799;
t1037 = -t997 * qJDD(3) + t1000 * t1024;
t822 = (-qJD(5) + t975) * t945 + t1037;
t825 = t921 + t871;
t756 = -t1000 * t825 + t997 * t822;
t929 = t943 ^ 2;
t930 = t945 ^ 2;
t850 = -t929 - t930;
t1113 = qJ(4) * t850 - t1105 * t756 - t1119;
t1059 = qJDD(3) * qJ(4);
t763 = -t1024 * pkin(4) - pkin(7) * t985 + t1063 * qJD(3) + t1006 + t1059;
t1086 = t997 * t763;
t971 = t975 ^ 2;
t872 = -t971 - t929;
t785 = t997 * t872 + t1128;
t1013 = t945 * qJD(5) - t1037;
t922 = t975 * t945;
t820 = t1013 + t922;
t1112 = qJ(4) * t820 - t1105 * t785 + t1086;
t760 = t1000 * t763;
t1055 = -t930 - t971;
t853 = t885 + t931;
t1085 = t997 * t853;
t794 = t1000 * t1055 - t1085;
t1110 = qJ(4) * t1121 - t1105 * t794 + t760;
t1109 = qJ(4) * t763 - t1105 * t1119;
t1106 = -2 * qJD(4);
t1100 = pkin(4) * t1119;
t1099 = pkin(4) * t756;
t1098 = pkin(4) * t763;
t1054 = t989 + t1107;
t957 = t1054 * qJDD(1);
t960 = t984 + t985;
t882 = t993 * t957 + t994 * t960;
t883 = t994 * t957 - t993 * t960;
t1097 = pkin(5) * (t1002 * t882 + t999 * t883);
t1095 = qJ(2) * t882;
t1092 = t975 * t997;
t848 = t998 * t856;
t1084 = t998 * t951;
t1083 = t998 * t953;
t1072 = -pkin(2) * t856 + pkin(6) * t768;
t1071 = pkin(2) * t960 + pkin(6) * t957;
t1070 = t1000 * t853;
t1069 = t1000 * t975;
t849 = t1001 * t856;
t1068 = t1001 * t951;
t891 = t1001 * t953;
t1053 = t945 * t1092;
t1052 = t998 * t885;
t1051 = t1135 + t848;
t1050 = t1126 - t849;
t1049 = t1001 * t885;
t1040 = -t1002 * t966 - t999 * t965;
t671 = t1000 * t705 + t997 * t704;
t654 = -t1105 * t671 + t1098;
t656 = -qJ(4) * t671 + t1100;
t666 = t1001 * t763 + t1119 * t998;
t1036 = -pkin(2) * t671 + pkin(6) * t666 + t1001 * t654 + t998 * t656;
t1016 = -pkin(4) * t785 + t704;
t786 = t1000 * t872 - t1129;
t674 = -qJ(4) * t786 - t1016;
t1021 = pkin(4) * t820 + t760;
t682 = -t1105 * t786 + t1021;
t738 = t1001 * t820 + t998 * t785;
t1035 = -pkin(2) * t786 + pkin(6) * t738 + t1001 * t682 + t998 * t674;
t1010 = -pkin(4) * t794 + t705;
t795 = -t997 * t1055 - t1070;
t676 = -qJ(4) * t795 - t1010;
t1025 = pkin(4) * t1121 - t1086;
t685 = -t1105 * t795 + t1025;
t743 = t1001 * t1121 + t998 * t794;
t1034 = -pkin(2) * t795 + pkin(6) * t743 + t1001 * t685 + t998 * t676;
t1011 = pkin(4) * t850 - t671;
t758 = t1000 * t822 + t997 * t825;
t662 = -t1105 * t758 + t1011;
t696 = -qJ(4) * t758 + t1099;
t721 = t1001 * t850 + t998 * t756;
t1033 = -pkin(2) * t758 + pkin(6) * t721 + t1001 * t662 + t998 * t696;
t793 = t1005 + t1059;
t780 = pkin(3) * t960 + t793;
t782 = qJ(4) * t960 + t799;
t1032 = t1001 * t780 + t998 * t782 + t1071;
t1031 = t1071 + t768;
t1030 = t993 * t974;
t1029 = t994 * t974;
t959 = t1002 * qJDD(1) - t999 * t1003;
t1027 = -pkin(5) * t959 - t999 * g(3);
t1026 = -pkin(3) * t799 + qJ(4) * t793;
t1023 = pkin(3) * t998 - qJ(4) * t1001;
t767 = t1001 * t831 - t998 * t833;
t897 = t1001 * t967 + t1082;
t1018 = t1002 * t965 - t999 * t966;
t1004 = t1064 * t1106 + t1008;
t772 = -pkin(3) * t1046 + qJ(4) * t951 - t1004;
t1014 = pkin(3) * t1068 + t998 * t772 - t1135;
t773 = (-t953 + t1046) * pkin(3) + t1004;
t1012 = -qJ(4) * t1083 + t1001 * t773 - t1126;
t729 = t1001 * t793 + t998 * t799;
t783 = (pkin(3) * qJD(3) + t1106) * t1064 + t1008;
t1007 = pkin(6) * t729 + (-pkin(2) + t1022) * t783;
t961 = t984 - t985;
t958 = t999 * qJDD(1) + t1002 * t1003;
t946 = t1023 * qJDD(1);
t938 = t1054 * t1062;
t923 = -pkin(5) * t958 + t1002 * g(3);
t915 = -t930 + t971;
t914 = t929 - t971;
t913 = t1001 * t952 - t989 * t1062;
t912 = t1024 * t998 - t1107 * t1062;
t911 = t993 * qJDD(3) + t994 * t938;
t910 = -t994 * qJDD(3) + t993 * t938;
t909 = t943 * t1069;
t892 = t1130 * t998;
t884 = t930 - t929;
t879 = pkin(1) * t882;
t878 = qJ(2) * t883;
t877 = t891 - t1084;
t876 = t1068 + t1083;
t869 = t994 * t913 - t1030;
t868 = t994 * t912 + t1030;
t867 = t993 * t913 + t1029;
t866 = t993 * t912 - t1029;
t837 = -pkin(1) * t955 - t874;
t836 = pkin(1) * t956 - t873;
t835 = t909 - t1053;
t834 = (-t1000 * t945 - t943 * t997) * t975;
t832 = t994 * t877 + t993 * t961;
t830 = t993 * t877 - t994 * t961;
t827 = t1002 * t911 - t999 * t910;
t826 = t1002 * t910 + t999 * t911;
t821 = t1013 - t922;
t817 = t945 * t1069 + t997 * t871;
t816 = t1013 * t997 + t909;
t815 = -t1000 * t871 + t1053;
t814 = t1000 * t1013 - t943 * t1092;
t812 = pkin(5) * (t1002 * t883 - t999 * t882);
t811 = t1001 * t931 + t998 * t834;
t810 = -t1001 * t834 + t998 * t931;
t809 = t849 - t1131;
t808 = t848 - t1138;
t807 = t997 * t915 - t1128;
t806 = t997 * t914 + t1070;
t805 = -t1000 * t914 + t1085;
t804 = t1000 * t915 + t1129;
t798 = pkin(1) * t802;
t797 = t833 - t1132;
t796 = t831 - t1139;
t791 = pkin(1) * t990 + qJ(2) * t1041;
t790 = t1002 * t869 - t999 * t867;
t789 = t1002 * t868 - t999 * t866;
t788 = t1002 * t867 + t999 * t869;
t787 = t1002 * t866 + t999 * t868;
t777 = t998 * t817 + t1049;
t776 = -t998 * t814 - t1049;
t775 = -t1001 * t817 + t1052;
t774 = t1001 * t814 - t1052;
t769 = t1002 * t832 - t999 * t830;
t766 = t1002 * t830 + t999 * t832;
t757 = t1000 * t820 + t1121 * t997;
t755 = t1000 * t1121 - t997 * t820;
t753 = -t1115 + t1139;
t752 = t994 * t811 - t993 * t835;
t751 = t993 * t811 + t994 * t835;
t750 = -t1127 + t1132;
t749 = t1050 + t1147;
t748 = t1051 - t1156;
t747 = t1001 * t825 + t998 * t804;
t746 = -t1001 * t821 + t998 * t806;
t745 = -t1001 * t804 + t998 * t825;
t744 = -t1001 * t806 - t998 * t821;
t742 = -t1001 * t794 + t1121 * t998;
t740 = t994 * t767 - t1095;
t739 = t993 * t767 + t878;
t737 = -t1001 * t785 + t998 * t820;
t736 = -pkin(3) * t1084 + t1001 * t772 + t1131;
t735 = -qJ(4) * t891 - t998 * t773 + t1138;
t733 = t994 * t768 + t993 * t856;
t732 = t993 * t768 - t994 * t856;
t731 = t1001 * t884 + t998 * t755;
t730 = -t1001 * t755 + t998 * t884;
t728 = -t1001 * t799 + t998 * t793;
t726 = t879 + t1031;
t725 = t994 * t777 - t993 * t815;
t724 = t994 * t776 + t993 * t816;
t723 = t993 * t777 + t994 * t815;
t722 = t993 * t776 - t994 * t816;
t720 = -t1001 * t756 + t998 * t850;
t718 = t1001 * t782 - t998 * t780;
t717 = -t993 * t797 + t994 * t809 + t1153;
t716 = -t993 * t796 + t994 * t808 - t1146;
t715 = t1014 + t1156;
t714 = t1012 - t1147;
t713 = t994 * t747 - t993 * t807;
t712 = t994 * t746 - t993 * t805;
t711 = t993 * t747 + t994 * t807;
t710 = t993 * t746 + t994 * t805;
t709 = t994 * t743 + t993 * t795;
t708 = t993 * t743 - t994 * t795;
t707 = t994 * t797 + t993 * t809 - t1152;
t706 = t994 * t796 + t993 * t808 - t1145;
t703 = t994 * t718 - t993 * t946 - t1095;
t702 = t993 * t718 + t994 * t946 + t878;
t701 = t994 * t738 + t993 * t786;
t700 = t993 * t738 - t994 * t786;
t697 = t879 + t1032;
t694 = t994 * t729 + t993 * t783;
t693 = t993 * t729 - t994 * t783;
t692 = t994 * t731 - t993 * t757;
t691 = t993 * t731 + t994 * t757;
t690 = t994 * t721 + t993 * t758;
t689 = t993 * t721 - t994 * t758;
t688 = pkin(1) * t732 + t1072;
t687 = -pkin(2) * t728 - t1026;
t686 = t994 * t735 - t993 * t753 + t1146;
t684 = t994 * t736 - t993 * t750 - t1153;
t680 = -pkin(6) * t728 + t1023 * t783;
t679 = t993 * t735 + t994 * t753 + t1145;
t678 = t993 * t736 + t994 * t750 + t1152;
t677 = -qJ(2) * t732 - (pkin(2) * t993 - pkin(6) * t994) * t767;
t672 = -pkin(2) * t742 - t1110;
t668 = -pkin(2) * t737 - t1112;
t667 = qJ(2) * t733 - (-pkin(2) * t994 - pkin(6) * t993 - pkin(1)) * t767;
t665 = -t1001 * t1119 + t998 * t763;
t663 = pkin(1) * t693 + t1007;
t660 = -pkin(6) * t742 + t1001 * t676 - t998 * t685;
t659 = -pkin(6) * t737 + t1001 * t674 - t998 * t682;
t658 = -qJ(2) * t693 + t994 * t680 - t993 * t687;
t657 = -pkin(2) * t720 - t1113;
t652 = t994 * t666 + t993 * t671;
t651 = t993 * t666 - t994 * t671;
t650 = -pkin(1) * t728 + qJ(2) * t694 + t993 * t680 + t994 * t687;
t649 = pkin(1) * t708 + t1034;
t648 = -pkin(6) * t720 + t1001 * t696 - t998 * t662;
t647 = pkin(1) * t700 + t1035;
t646 = -qJ(2) * t708 + t994 * t660 - t993 * t672;
t645 = pkin(1) * t689 + t1033;
t644 = -qJ(2) * t700 + t994 * t659 - t993 * t668;
t643 = -pkin(2) * t665 - t1109;
t642 = -pkin(1) * t742 + qJ(2) * t709 + t993 * t660 + t994 * t672;
t641 = -pkin(1) * t737 + qJ(2) * t701 + t993 * t659 + t994 * t668;
t640 = -qJ(2) * t689 + t994 * t648 - t993 * t657;
t639 = -pkin(1) * t720 + qJ(2) * t690 + t993 * t648 + t994 * t657;
t638 = -pkin(6) * t665 + t1001 * t656 - t998 * t654;
t637 = pkin(1) * t651 + t1036;
t636 = -qJ(2) * t651 + t994 * t638 - t993 * t643;
t635 = -pkin(1) * t665 + qJ(2) * t652 + t993 * t638 + t994 * t643;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t959, 0, -t958, 0, t1027, -t923, -t1018, -pkin(5) * t1018, 0, 0, t880, 0, -t1118, 0, t1124, t1125, t1136, pkin(5) * t1136 + qJ(2) * t1065 - t999 * t791, t790, t769, t1149, t789, t1142, t827, t1002 * t716 - t999 * t706 - t1155, t1002 * t717 - t999 * t707 + t1158, t1002 * t740 - t999 * t739 - t1097, t1002 * t677 - t999 * t667 - pkin(5) * (t1002 * t732 + t999 * t733), t827, -t1149, -t1142, t790, t769, t789, t1002 * t703 - t999 * t702 - t1097, t1002 * t686 - t999 * t679 + t1155, t1002 * t684 - t999 * t678 - t1158, t1002 * t658 - t999 * t650 - pkin(5) * (t1002 * t693 + t999 * t694), t1002 * t725 - t999 * t723, t1002 * t692 - t999 * t691, t1002 * t713 - t999 * t711, t1002 * t724 - t999 * t722, t1002 * t712 - t999 * t710, t1002 * t752 - t999 * t751, t1002 * t644 - t999 * t641 - pkin(5) * (t1002 * t700 + t999 * t701), t1002 * t646 - t999 * t642 - pkin(5) * (t1002 * t708 + t999 * t709), t1002 * t640 - t999 * t639 - pkin(5) * (t1002 * t689 + t999 * t690), t1002 * t636 - t999 * t635 - pkin(5) * (t1002 * t651 + t999 * t652); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t958, 0, t959, 0, t923, t1027, t1040, pkin(5) * t1040, 0, 0, t1118, 0, t880, 0, -t1125, t1124, t1137, pkin(5) * t1137 + qJ(2) * t1075 + t1002 * t791, t788, t766, t1148, t787, t1141, t826, t1002 * t706 + t999 * t716 + t1154, t1002 * t707 + t999 * t717 - t1157, t1002 * t739 + t999 * t740 + t812, t999 * t677 + t1002 * t667 + pkin(5) * (t1002 * t733 - t999 * t732), t826, -t1148, -t1141, t788, t766, t787, t1002 * t702 + t999 * t703 + t812, t1002 * t679 + t999 * t686 - t1154, t1002 * t678 + t999 * t684 + t1157, t999 * t658 + t1002 * t650 + pkin(5) * (t1002 * t694 - t999 * t693), t1002 * t723 + t999 * t725, t1002 * t691 + t999 * t692, t1002 * t711 + t999 * t713, t1002 * t722 + t999 * t724, t1002 * t710 + t999 * t712, t1002 * t751 + t999 * t752, t999 * t644 + t1002 * t641 + pkin(5) * (t1002 * t701 - t999 * t700), t999 * t646 + t1002 * t642 + pkin(5) * (t1002 * t709 - t999 * t708), t999 * t640 + t1002 * t639 + pkin(5) * (t1002 * t690 - t999 * t689), t999 * t636 + t1002 * t635 + pkin(5) * (t1002 * t652 - t999 * t651); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t965, t966, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t836, t837, 0, -t798, t892, t876, t897, t891, t893, 0, t749, t748, t726, t688, 0, -t897, -t893, t892, t876, t891, t697, t714, t715, t663, t775, t730, t745, t774, t744, t810, t647, t649, t645, t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1003, 0, 0, -g(3), -t965, 0, 0, 0, t956, 0, -t955, 0, t1020, t919, t802, qJ(2) * t802, t869, t832, t864, t868, t862, t911, t716, t717, t740, t677, t911, -t864, -t862, t869, t832, t868, t703, t686, t684, t658, t725, t692, t713, t724, t712, t752, t644, t646, t640, t636; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1003, 0, qJDD(1), 0, g(3), 0, -t966, 0, 0, 0, t955, 0, t956, 0, -t919, t1020, t1041, t791, t867, t830, t860, t866, t858, t910, t706, t707, t739, t667, t910, -t860, -t858, t867, t830, t866, t702, t679, t678, t650, t723, t691, t711, t722, t710, t751, t641, t642, t639, t635; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t965, t966, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t836, t837, 0, -t798, t892, t876, t897, t891, t893, 0, t749, t748, t726, t688, 0, -t897, -t893, t892, t876, t891, t697, t714, t715, t663, t775, t730, t745, t774, t744, t810, t647, t649, t645, t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1003, 0, 0, -t990, t873, 0, t913, t877, t905, t912, t901, t938, t808, t809, t767, pkin(6) * t767, t938, -t905, -t901, t913, t877, t912, t718, t735, t736, t680, t777, t731, t747, t776, t746, t811, t659, t660, t648, t638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1003, 0, qJDD(1), 0, t990, 0, t874, 0, t974, -t961, -t1057, -t974, -t983, -qJDD(3), t796, t797, 0, pkin(2) * t767, -qJDD(3), t1057, t983, t974, -t961, -t974, t946, t753, t750, t687, t815, t757, t807, -t816, t805, t835, t668, t672, t657, t643; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t873, -t874, 0, 0, t892, t876, t897, t891, t893, 0, t1050, t1051, t1031, t1072, 0, -t897, -t893, t892, t876, t891, t1032, t1012, t1014, t1007, t775, t730, t745, t774, t744, t810, t1035, t1034, t1033, t1036; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t952, t953, t962, -t980, t969, t980, 0, t856, t831, 0, t980, -t962, -t969, t952, t953, -t980, t782, -qJ(4) * t953, t772, -qJ(4) * t783, t885, t884, t825, -t885, -t821, t931, t674, t676, t696, t656; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1046, t951, t967, -t1024, t963, -t1046, -t856, 0, t833, 0, -t1046, -t967, -t963, t1046, t951, -t1024, t780, t773, pkin(3) * t951, -pkin(3) * t783, -t817, -t755, -t804, t814, -t806, -t834, t682, t685, t662, t654; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t974, t961, t1057, t974, t983, qJDD(3), -t831, -t833, 0, 0, qJDD(3), -t1057, -t983, -t974, t961, t974, -t946, t1115, t1127, t1026, -t815, -t757, -t807, t816, -t805, -t835, t1112, t1110, t1113, t1109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t1057, -t983, -t974, t961, t974, 0, t799, t793, 0, -t815, -t757, -t807, t816, -t805, -t835, -pkin(7) * t785 + t1086, -pkin(7) * t794 + t760, -pkin(7) * t756 - t1119, -pkin(7) * t1119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t980, t962, t969, -t952, -t953, t980, -t799, 0, t783, 0, -t885, -t884, -t825, t885, t821, -t931, t1016, t1010, -t1099, -t1100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1046, t967, t963, -t1046, -t951, t1024, -t793, -t783, 0, 0, t817, t755, t804, -t814, t806, t834, pkin(7) * t786 - t1021, pkin(7) * t795 - t1025, pkin(7) * t758 - t1011, pkin(7) * t671 - t1098; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t871, -t820, t1122, t921, t914, -t921, 0, t763, t704, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t922, t1121, t915, -t1013, t853, -t922, -t763, 0, t705, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t885, t884, t825, -t885, -t821, t931, -t704, -t705, 0, 0;];
m_new_reg = t1;
