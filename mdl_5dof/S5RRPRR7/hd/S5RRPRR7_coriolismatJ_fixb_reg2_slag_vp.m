% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:16
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRR7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:15:45
% EndTime: 2019-12-31 20:15:49
% DurationCPUTime: 2.84s
% Computational Cost: add. (4770->255), mult. (7787->268), div. (0->0), fcn. (7554->6), ass. (0->178)
t223 = cos(qJ(2));
t310 = t223 * pkin(1);
t263 = -pkin(2) - t310;
t200 = -pkin(7) + t263;
t219 = sin(qJ(4));
t212 = t219 * pkin(8);
t164 = t219 * t200 - t212;
t222 = cos(qJ(4));
t165 = (-pkin(8) + t200) * t222;
t218 = sin(qJ(5));
t221 = cos(qJ(5));
t103 = t221 * t164 + t218 * t165;
t290 = t221 * t222;
t293 = t218 * t219;
t172 = t290 - t293;
t326 = t103 / 0.2e1;
t15 = (t326 - t103 / 0.2e1) * t172;
t269 = qJD(4) + qJD(5);
t291 = t221 * t219;
t292 = t218 * t222;
t170 = t291 + t292;
t214 = qJD(1) + qJD(2);
t322 = t214 * t172;
t332 = t170 * t322;
t224 = -pkin(2) - pkin(7);
t181 = t219 * t224 - t212;
t182 = (-pkin(8) + t224) * t222;
t249 = t218 * t181 - t221 * t182;
t316 = t249 / 0.2e1;
t331 = (-t249 / 0.2e1 + t316) * t170;
t330 = t269 * t249;
t250 = t218 * t164 - t221 * t165;
t329 = t269 * t250;
t328 = t269 * t103;
t123 = t221 * t181 + t218 * t182;
t327 = t269 * t123;
t94 = t170 ^ 2 - t172 ^ 2;
t324 = t214 * t94;
t119 = t269 * t172;
t61 = t170 * t119;
t323 = t214 * t170;
t216 = t219 ^ 2;
t217 = t222 ^ 2;
t198 = t216 - t217;
t321 = t214 * t198;
t302 = qJD(4) * pkin(4);
t268 = (t170 * t221 - t172 * t218) * t302;
t220 = sin(qJ(2));
t311 = t220 * pkin(1);
t201 = qJ(3) + t311;
t320 = qJ(3) + t201;
t4 = -t331 - t15;
t317 = t4 * qJD(4);
t312 = pkin(4) * t222;
t309 = t15 * qJD(4);
t308 = t331 * qJD(4);
t305 = pkin(1) * qJD(1);
t304 = pkin(1) * qJD(2);
t303 = pkin(4) * qJD(5);
t142 = t172 * t311;
t300 = t142 * t172;
t143 = t170 * t311;
t299 = t143 * t170;
t213 = t219 * pkin(4);
t183 = t201 + t213;
t298 = t183 * t170;
t297 = t183 * t172;
t296 = t201 * t223;
t202 = qJ(3) + t213;
t295 = t202 * t170;
t294 = t202 * t172;
t26 = t103 * t143 - t142 * t250 + t183 * t310;
t289 = t26 * qJD(1);
t54 = -t299 - t300;
t288 = t54 * qJD(1);
t155 = t170 * t312;
t92 = t155 + t297;
t287 = t92 * qJD(1);
t156 = t172 * t312;
t93 = t156 - t298;
t286 = t93 * qJD(1);
t251 = (t216 + t217) * t220;
t97 = (t200 * t251 + t296) * pkin(1);
t285 = t97 * qJD(1);
t166 = t170 * qJD(3);
t208 = t223 * t304;
t284 = t170 * t208 + t166;
t167 = t172 * qJD(3);
t283 = t172 * t208 + t167;
t210 = qJD(3) * t219;
t282 = t219 * t208 + t210;
t211 = qJD(3) * t222;
t281 = t222 * t208 + t211;
t280 = qJ(3) * qJD(2);
t279 = qJD(5) * t183;
t278 = qJD(5) * t202;
t139 = -pkin(1) * t296 - t263 * t311;
t277 = t139 * qJD(1);
t168 = pkin(1) * t251;
t276 = t168 * qJD(1);
t275 = t183 * qJD(1);
t274 = t201 * qJD(1);
t273 = t202 * qJD(2);
t272 = t219 * qJD(4);
t271 = t222 * qJD(4);
t270 = t208 + qJD(3);
t267 = t220 * t304;
t266 = t220 * t305;
t207 = t223 * t305;
t264 = -t311 / 0.2e1;
t206 = t311 / 0.2e1;
t262 = t170 * t275;
t261 = t172 * t275;
t260 = t219 * t274;
t259 = t222 * t274;
t254 = t202 / 0.2e1 + t183 / 0.2e1;
t253 = t216 / 0.2e1 + t217 / 0.2e1;
t252 = pkin(4) * t269;
t185 = t214 * t222;
t248 = t170 * t207;
t247 = t172 * t207;
t246 = t219 * t207;
t245 = t222 * t207;
t244 = t4 * qJD(2);
t243 = t4 * qJD(1);
t242 = t15 * qJD(1) + qJD(2) * t331;
t24 = t183 * t312;
t241 = t24 * qJD(1) + t15 * qJD(3);
t105 = t155 + t294;
t227 = (-t293 / 0.2e1 + t290 / 0.2e1) * t311;
t55 = -t254 * t172 + t227;
t37 = -t155 + t55;
t239 = t37 * qJD(1) - t105 * qJD(2);
t106 = t156 - t295;
t226 = (-t291 / 0.2e1 - t292 / 0.2e1) * t311;
t56 = t254 * t170 + t226;
t38 = -t156 + t56;
t238 = t38 * qJD(1) - t106 * qJD(2);
t234 = t300 / 0.2e1 + t299 / 0.2e1;
t41 = t264 + t234 - t202;
t237 = -t41 * qJD(1) + t273;
t137 = -qJ(3) + (-0.1e1 / 0.2e1 + t253) * t311;
t236 = -t137 * qJD(1) + t280;
t235 = t206 - qJ(3) / 0.2e1 - t201 / 0.2e1;
t233 = t143 * t218 / 0.2e1 + t142 * t221 / 0.2e1;
t232 = t56 * qJD(1) + t170 * t273;
t231 = t55 * qJD(1) - t172 * t273;
t133 = t235 * t219;
t230 = -t133 * qJD(1) + t219 * t280;
t134 = t235 * t222;
t229 = t134 * qJD(1) - t222 * t280;
t27 = t202 * t312;
t225 = -t103 * t316 + t249 * t326;
t5 = (-t254 * t222 + t233) * pkin(4) + t225;
t228 = -t5 * qJD(1) + t27 * qJD(2) + qJD(3) * t331;
t57 = -t295 / 0.2e1 - t298 / 0.2e1 + t226;
t58 = t294 / 0.2e1 + t297 / 0.2e1 + t227;
t215 = qJ(3) * qJD(3);
t209 = qJ(3) * t310;
t199 = t219 * t271;
t197 = t214 * qJ(3);
t194 = t201 * qJD(3);
t187 = t198 * qJD(4);
t184 = t214 * t219;
t173 = t214 * t311;
t159 = t219 * t185;
t157 = t168 * qJD(2);
t138 = t253 * t311 + qJ(3) + t206;
t136 = (t206 + t320 / 0.2e1) * t222;
t135 = (t264 - t320 / 0.2e1) * t219;
t116 = t269 * t170;
t44 = t54 * qJD(2);
t42 = t206 + t234 + t202;
t40 = t156 + t57;
t39 = t155 + t58;
t34 = t269 * t94;
t6 = t233 * pkin(4) - t225 + (t183 + t202) * t312 / 0.2e1;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267, -t208, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, t270, -t139 * qJD(2) + t194, -t199, t187, 0, t199, 0, 0, t201 * t271 + t282, -t201 * t272 + t281, -t157, t97 * qJD(2) + t194, -t61, t34, 0, t61, 0, 0, t92 * qJD(4) + t172 * t279 + t284, t93 * qJD(4) - t170 * t279 + t283, t44, t26 * qJD(2) + t183 * qJD(3) + t24 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, -t207 - t208, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173, t207 + t270, -t277 + (-pkin(2) * t311 + t209) * qJD(2) + t194, -t199, t187, 0, t199, 0, 0, t136 * qJD(4) + t246 + t282, t135 * qJD(4) + t245 + t281, -t157 - t276, t285 + (t224 * t168 + t209) * qJD(2) + t138 * qJD(3), -t61, t34, 0, t61, 0, 0, t39 * qJD(4) + t58 * qJD(5) + t248 + t284, t40 * qJD(4) + t57 * qJD(5) + t247 + t283, t44 + t288 + t317, t289 + (t143 * t123 - t142 * t249 + t202 * t310) * qJD(2) + t42 * qJD(3) + t6 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, t201 * qJD(2) + t274, 0, 0, 0, 0, 0, 0, t184, t185, 0, t138 * qJD(2) + t274, 0, 0, 0, 0, 0, 0, t323, t322, 0, t42 * qJD(2) + t275 + t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t159, t321, -t272, t159, -t271, 0, t136 * qJD(2) - t200 * t272 + t259, t135 * qJD(2) - t200 * t271 - t260, 0, 0, -t332, t324, -t116, t332, -t119, 0, t39 * qJD(2) + t287 - t328, t40 * qJD(2) + t286 + t329, t244 + t268, t6 * qJD(2) + (-t103 * t221 - t218 * t250) * t302 + t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t332, t324, -t116, t332, -t119, 0, t58 * qJD(2) + t261 - t328, t57 * qJD(2) - t262 + t329, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, t207, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t266, -t207 + qJD(3), t215 + t277, -t199, t187, 0, t199, 0, 0, -t134 * qJD(4) + t210 - t246, t133 * qJD(4) + t211 - t245, t276, -t137 * qJD(3) - t285, -t61, t34, 0, t61, 0, 0, -t37 * qJD(4) - t55 * qJD(5) + t166 - t248, -t38 * qJD(4) - t56 * qJD(5) + t167 - t247, -t288 + t317, -t41 * qJD(3) - t5 * qJD(4) - t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t215, -t199, t187, 0, t199, 0, 0, qJ(3) * t271 + t210, -qJ(3) * t272 + t211, 0, t215, -t61, t34, 0, t61, 0, 0, t105 * qJD(4) + t172 * t278 + t166, t106 * qJD(4) - t170 * t278 + t167, 0, t202 * qJD(3) + t27 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, t197, 0, 0, 0, 0, 0, 0, t184, t185, 0, t236, 0, 0, 0, 0, 0, 0, t323, t322, 0, t237 + t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t159, t321, -t272, t159, -t271, 0, -t224 * t272 - t229, -t224 * t271 - t230, 0, 0, -t332, t324, -t116, t332, -t119, 0, -t239 - t327, -t238 + t330, t243 + t268, (-t123 * t221 - t218 * t249) * t302 + t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t332, t324, -t116, t332, -t119, 0, -t231 - t327, -t232 + t330, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, -t274 - t280, 0, 0, 0, 0, 0, 0, -t184, -t185, 0, t137 * qJD(2) - t274, 0, 0, 0, 0, 0, 0, -t323, -t322, 0, t41 * qJD(2) - t275 + t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, -t197, 0, 0, 0, 0, 0, 0, -t184, -t185, 0, -t236, 0, 0, 0, 0, 0, 0, -t323, -t322, 0, -t237 + t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t272, -t271, 0, 0, 0, 0, 0, 0, 0, 0, -t116, -t119, 0, t242 - t268; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116, -t119, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, -t321, 0, -t159, 0, 0, t134 * qJD(2) - t259, -t133 * qJD(2) + t260, 0, 0, t332, -t324, 0, -t332, 0, 0, t37 * qJD(2) - t287, t38 * qJD(2) - t286, -t244, t5 * qJD(2) - t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, -t321, 0, -t159, 0, 0, t229, t230, 0, 0, t332, -t324, 0, -t332, 0, 0, t239, t238, -t243, -t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218 * t303, -t221 * t303, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218 * t252, -t221 * t252, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332, -t324, 0, -t332, 0, 0, t55 * qJD(2) - t261, t56 * qJD(2) + t262, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332, -t324, 0, -t332, 0, 0, t231, t232, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218 * t302, t221 * t302, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
