% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRPRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:16
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRPRR7_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR7_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR7_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRR7_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRR7_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRR7_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:16:02
% EndTime: 2019-12-31 20:16:03
% DurationCPUTime: 1.84s
% Computational Cost: add. (6051->180), mult. (7574->212), div. (0->0), fcn. (4696->8), ass. (0->125)
t1085 = qJD(1) + qJD(2);
t1082 = t1085 ^ 2;
t1083 = qJDD(1) + qJDD(2);
t1090 = sin(qJ(2));
t1094 = cos(qJ(2));
t1058 = t1094 * t1082 + t1090 * t1083;
t1060 = t1090 * t1082 - t1094 * t1083;
t1091 = sin(qJ(1));
t1095 = cos(qJ(1));
t1100 = t1095 * t1058 - t1091 * t1060;
t1103 = t1091 * t1058 + t1095 * t1060;
t1088 = sin(qJ(5));
t1089 = sin(qJ(4));
t1092 = cos(qJ(5));
t1093 = cos(qJ(4));
t1046 = (-t1088 * t1093 - t1089 * t1092) * t1085;
t1121 = t1046 ^ 2;
t1115 = t1085 * t1093;
t1116 = t1085 * t1089;
t1048 = -t1088 * t1116 + t1092 * t1115;
t1120 = t1048 ^ 2;
t1084 = qJD(4) + qJD(5);
t1119 = t1084 ^ 2;
t1118 = 2 * qJD(3);
t1117 = t1048 * t1046;
t1086 = t1089 ^ 2;
t1114 = t1086 * t1082;
t1113 = t1089 * t1083;
t1112 = t1093 * t1083;
t1111 = qJD(5) - t1084;
t1110 = qJD(5) + t1084;
t1073 = t1091 * g(1) - t1095 * g(2);
t1063 = qJDD(1) * pkin(1) + t1073;
t1074 = -t1095 * g(1) - t1091 * g(2);
t1097 = qJD(1) ^ 2;
t1064 = -t1097 * pkin(1) + t1074;
t1039 = t1094 * t1063 - t1090 * t1064;
t1034 = -t1083 * pkin(2) - t1082 * qJ(3) + qJDD(3) - t1039;
t1031 = -t1083 * pkin(7) + t1034;
t1022 = t1089 * g(3) + t1093 * t1031;
t1087 = t1093 ^ 2;
t1109 = t1086 + t1087;
t1108 = -qJDD(4) - qJDD(5);
t1107 = t1089 * t1082 * t1093;
t1106 = qJD(4) * t1116;
t1105 = qJD(4) * t1115;
t1023 = -t1093 * g(3) + t1089 * t1031;
t1053 = -t1105 - t1113;
t1054 = -t1106 + t1112;
t1104 = t1092 * t1053 - t1088 * t1054;
t1065 = qJDD(4) - t1107;
t1101 = -t1088 * t1053 - t1092 * t1054;
t1040 = t1090 * t1063 + t1094 * t1064;
t1098 = -t1082 * pkin(2) + t1083 * qJ(3) + t1040;
t1032 = t1085 * t1118 + t1098;
t1096 = qJD(4) ^ 2;
t1078 = t1082 * pkin(7);
t1071 = -t1087 * t1082 - t1096;
t1070 = -t1096 - t1114;
t1069 = -t1091 * qJDD(1) - t1095 * t1097;
t1068 = t1095 * qJDD(1) - t1091 * t1097;
t1067 = qJD(4) * pkin(4) - pkin(8) * t1115;
t1066 = -qJDD(4) - t1107;
t1062 = t1109 * t1082;
t1057 = t1109 * t1083;
t1055 = -0.2e1 * t1106 + t1112;
t1052 = 0.2e1 * t1105 + t1113;
t1045 = -t1119 - t1120;
t1044 = t1093 * t1066 - t1089 * t1071;
t1043 = -t1089 * t1065 + t1093 * t1070;
t1042 = t1089 * t1066 + t1093 * t1071;
t1041 = t1093 * t1065 + t1089 * t1070;
t1038 = -t1090 * t1057 - t1094 * t1062;
t1037 = t1094 * t1057 - t1090 * t1062;
t1036 = t1108 + t1117;
t1035 = -t1108 + t1117;
t1033 = -t1119 - t1121;
t1030 = t1090 * t1042 + t1094 * t1055;
t1029 = t1090 * t1041 + t1094 * t1052;
t1028 = -t1094 * t1042 + t1090 * t1055;
t1027 = -t1094 * t1041 + t1090 * t1052;
t1024 = t1032 - t1078;
t1021 = -t1120 - t1121;
t1020 = -t1090 * t1039 + t1094 * t1040;
t1019 = t1094 * t1039 + t1090 * t1040;
t1018 = t1092 * t1036 - t1088 * t1045;
t1017 = t1088 * t1036 + t1092 * t1045;
t1016 = -t1111 * t1046 + t1101;
t1015 = t1110 * t1046 - t1101;
t1014 = -t1111 * t1048 + t1104;
t1013 = t1110 * t1048 - t1104;
t1012 = t1092 * t1033 - t1088 * t1035;
t1011 = t1088 * t1033 + t1092 * t1035;
t1010 = -pkin(4) * t1114 + t1053 * pkin(8) - qJD(4) * t1067 + t1023;
t1009 = -pkin(8) * t1114 - t1053 * pkin(4) - t1078 + (t1067 * t1093 + t1118) * t1085 + t1098;
t1008 = (-t1054 - t1106) * pkin(8) + t1065 * pkin(4) + t1022;
t1007 = t1094 * t1032 + t1090 * t1034;
t1006 = t1090 * t1032 - t1094 * t1034;
t1005 = -t1089 * t1022 + t1093 * t1023;
t1004 = t1093 * t1022 + t1089 * t1023;
t1003 = -t1089 * t1017 + t1093 * t1018;
t1002 = t1093 * t1017 + t1089 * t1018;
t1001 = t1092 * t1014 - t1088 * t1016;
t1000 = t1088 * t1014 + t1092 * t1016;
t999 = t1090 * t1004 + t1094 * t1024;
t998 = -t1094 * t1004 + t1090 * t1024;
t997 = -t1089 * t1011 + t1093 * t1012;
t996 = t1093 * t1011 + t1089 * t1012;
t995 = t1088 * t1008 + t1092 * t1010;
t994 = t1092 * t1008 - t1088 * t1010;
t993 = t1090 * t1002 + t1094 * t1015;
t992 = -t1094 * t1002 + t1090 * t1015;
t991 = t1094 * t1013 + t1090 * t996;
t990 = t1090 * t1013 - t1094 * t996;
t989 = -t1089 * t1000 + t1093 * t1001;
t988 = t1093 * t1000 + t1089 * t1001;
t987 = -t1088 * t994 + t1092 * t995;
t986 = t1088 * t995 + t1092 * t994;
t985 = t1094 * t1021 + t1090 * t988;
t984 = t1090 * t1021 - t1094 * t988;
t983 = -t1089 * t986 + t1093 * t987;
t982 = t1089 * t987 + t1093 * t986;
t981 = t1094 * t1009 + t1090 * t982;
t980 = t1090 * t1009 - t1094 * t982;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1069, -t1068, 0, -t1091 * t1073 + t1095 * t1074, 0, 0, 0, 0, 0, 0, -t1100, t1103, 0, -t1091 * t1019 + t1095 * t1020, 0, 0, 0, 0, 0, 0, 0, t1100, -t1103, -t1091 * t1006 + t1095 * t1007, 0, 0, 0, 0, 0, 0, -t1091 * t1027 + t1095 * t1029, -t1091 * t1028 + t1095 * t1030, -t1091 * t1037 + t1095 * t1038, -t1091 * t998 + t1095 * t999, 0, 0, 0, 0, 0, 0, -t1091 * t990 + t1095 * t991, -t1091 * t992 + t1095 * t993, -t1091 * t984 + t1095 * t985, -t1091 * t980 + t1095 * t981; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1068, t1069, 0, t1095 * t1073 + t1091 * t1074, 0, 0, 0, 0, 0, 0, -t1103, -t1100, 0, t1095 * t1019 + t1091 * t1020, 0, 0, 0, 0, 0, 0, 0, t1103, t1100, t1095 * t1006 + t1091 * t1007, 0, 0, 0, 0, 0, 0, t1095 * t1027 + t1091 * t1029, t1095 * t1028 + t1091 * t1030, t1095 * t1037 + t1091 * t1038, t1091 * t999 + t1095 * t998, 0, 0, 0, 0, 0, 0, t1091 * t991 + t1095 * t990, t1091 * t993 + t1095 * t992, t1091 * t985 + t1095 * t984, t1091 * t981 + t1095 * t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1043, t1044, 0, t1005, 0, 0, 0, 0, 0, 0, t997, t1003, t989, t983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1097, -qJDD(1), 0, t1074, 0, 0, 0, 0, 0, 0, -t1058, t1060, 0, t1020, 0, 0, 0, 0, 0, 0, 0, t1058, -t1060, t1007, 0, 0, 0, 0, 0, 0, t1029, t1030, t1038, t999, 0, 0, 0, 0, 0, 0, t991, t993, t985, t981; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1097, 0, t1073, 0, 0, 0, 0, 0, 0, -t1060, -t1058, 0, t1019, 0, 0, 0, 0, 0, 0, 0, t1060, t1058, t1006, 0, 0, 0, 0, 0, 0, t1027, t1028, t1037, t998, 0, 0, 0, 0, 0, 0, t990, t992, t984, t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1043, t1044, 0, t1005, 0, 0, 0, 0, 0, 0, t997, t1003, t989, t983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1082, -t1083, 0, t1040, 0, 0, 0, 0, 0, 0, 0, t1082, t1083, t1032, 0, 0, 0, 0, 0, 0, t1052, t1055, -t1062, t1024, 0, 0, 0, 0, 0, 0, t1013, t1015, t1021, t1009; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1083, -t1082, 0, t1039, 0, 0, 0, 0, 0, 0, 0, -t1083, t1082, -t1034, 0, 0, 0, 0, 0, 0, -t1041, -t1042, t1057, -t1004, 0, 0, 0, 0, 0, 0, -t996, -t1002, -t988, -t982; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1043, t1044, 0, t1005, 0, 0, 0, 0, 0, 0, t997, t1003, t989, t983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1043, t1044, 0, t1005, 0, 0, 0, 0, 0, 0, t997, t1003, t989, t983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1082, -t1083, -t1032, 0, 0, 0, 0, 0, 0, -t1052, -t1055, t1062, -t1024, 0, 0, 0, 0, 0, 0, -t1013, -t1015, -t1021, -t1009; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1083, -t1082, t1034, 0, 0, 0, 0, 0, 0, t1041, t1042, -t1057, t1004, 0, 0, 0, 0, 0, 0, t996, t1002, t988, t982; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1070, t1066, -t1113, t1023, 0, 0, 0, 0, 0, 0, t1012, t1018, t1001, t987; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1065, t1071, -t1112, t1022, 0, 0, 0, 0, 0, 0, t1011, t1017, t1000, t986; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1052, t1055, -t1062, t1024, 0, 0, 0, 0, 0, 0, t1013, t1015, t1021, t1009; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1033, t1036, t1014, t995; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1035, t1045, t1016, t994; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1013, t1015, t1021, t1009;];
f_new_reg = t1;
