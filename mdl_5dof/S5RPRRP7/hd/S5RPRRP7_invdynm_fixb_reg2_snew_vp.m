% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRRP7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:46
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRRP7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP7_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP7_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP7_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP7_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:45:57
% EndTime: 2019-12-31 18:46:13
% DurationCPUTime: 16.88s
% Computational Cost: add. (34709->591), mult. (67218->726), div. (0->0), fcn. (42171->8), ass. (0->392)
t1230 = sin(qJ(1));
t1233 = cos(qJ(1));
t1224 = sin(pkin(8));
t1225 = cos(pkin(8));
t1229 = sin(qJ(3));
t1232 = cos(qJ(3));
t1228 = sin(qJ(4));
t1231 = cos(qJ(4));
t1317 = qJD(1) * t1229;
t1177 = t1228 * qJD(3) + t1231 * t1317;
t1169 = t1177 ^ 2;
t1175 = -t1231 * qJD(3) + t1228 * t1317;
t1330 = t1175 ^ 2;
t1345 = t1169 - t1330;
t1290 = t1232 * qJD(1);
t1214 = qJD(3) * t1290;
t1285 = t1229 * qJDD(1);
t1183 = t1214 + t1285;
t1247 = -t1228 * qJDD(3) - t1231 * t1183;
t1111 = -t1175 * qJD(4) - t1247;
t1208 = -qJD(4) + t1290;
t1315 = t1175 * t1208;
t1349 = t1111 + t1315;
t1308 = t1228 * t1349;
t1270 = t1231 * qJDD(3) - t1228 * t1183;
t1110 = t1177 * qJD(4) - t1270;
t1157 = t1177 * t1208;
t1351 = t1110 - t1157;
t995 = t1231 * t1351 + t1308;
t956 = -t1229 * t1345 + t1232 * t995;
t993 = -t1228 * t1351 + t1231 * t1349;
t896 = t1224 * t956 + t1225 * t993;
t898 = -t1224 * t993 + t1225 * t956;
t1429 = t1230 * t898 + t1233 * t896;
t1428 = t1230 * t896 - t1233 * t898;
t1329 = t1208 ^ 2;
t1146 = t1330 - t1329;
t1128 = t1177 * t1175;
t1213 = qJD(3) * t1317;
t1284 = t1232 * qJDD(1);
t1184 = -t1213 + t1284;
t1170 = -qJDD(4) + t1184;
t1347 = -t1128 + t1170;
t1293 = t1231 * t1347;
t1039 = t1228 * t1146 - t1293;
t1306 = t1228 * t1347;
t1044 = t1231 * t1146 + t1306;
t1062 = t1110 + t1157;
t981 = t1232 * t1044 - t1229 * t1062;
t924 = -t1225 * t1039 + t1224 * t981;
t928 = t1224 * t1039 + t1225 * t981;
t1427 = t1230 * t928 + t1233 * t924;
t1426 = t1230 * t924 - t1233 * t928;
t1147 = t1169 - t1329;
t1348 = -t1128 - t1170;
t1305 = t1228 * t1348;
t1386 = -t1231 * t1147 + t1305;
t1350 = t1111 - t1315;
t1292 = t1231 * t1348;
t1385 = t1228 * t1147 + t1292;
t1395 = t1229 * t1350 + t1232 * t1385;
t1409 = t1224 * t1386 + t1225 * t1395;
t1410 = t1224 * t1395 - t1225 * t1386;
t1425 = -t1230 * t1410 + t1233 * t1409;
t1424 = t1230 * t1409 + t1233 * t1410;
t1343 = -t1329 - t1330;
t1365 = t1228 * t1343 + t1292;
t1363 = t1231 * t1343 - t1305;
t1380 = t1229 * t1351 + t1232 * t1363;
t1398 = t1224 * t1380 - t1225 * t1365;
t1423 = pkin(1) * t1398;
t1113 = t1329 + t1169;
t1015 = t1231 * t1113 - t1306;
t1422 = pkin(2) * t1015;
t1421 = pkin(3) * t1015;
t1420 = pkin(7) * t1015;
t1025 = t1228 * t1113 + t1293;
t1419 = pkin(7) * t1025;
t1418 = qJ(2) * t1398;
t1417 = t1224 * t1015;
t1415 = t1225 * t1015;
t1413 = t1229 * t1025;
t1412 = t1232 * t1025;
t1381 = t1229 * t1363 - t1232 * t1351;
t1397 = t1224 * t1365 + t1225 * t1380;
t1411 = -pkin(1) * t1381 + qJ(2) * t1397;
t954 = t1229 * t995 + t1232 * t1345;
t977 = t1229 * t1044 + t1232 * t1062;
t1408 = pkin(5) * (-t1230 * t1398 + t1233 * t1397);
t1407 = pkin(5) * (t1230 * t1397 + t1233 * t1398);
t1405 = pkin(2) * t1381;
t1404 = pkin(6) * t1381;
t1399 = -pkin(2) * t1365 + pkin(6) * t1380;
t1396 = t1229 * t1385 - t1232 * t1350;
t1393 = pkin(3) * t1365;
t1392 = pkin(7) * t1363;
t1391 = pkin(7) * t1365;
t1390 = qJ(5) * t1349;
t1199 = t1233 * g(1) + t1230 * g(2);
t1234 = qJD(1) ^ 2;
t1179 = -t1234 * pkin(1) - t1199;
t1198 = t1230 * g(1) - t1233 * g(2);
t1245 = qJDD(1) * pkin(1) + t1198;
t1114 = t1224 * t1179 - t1225 * t1245;
t1115 = t1225 * t1179 + t1224 * t1245;
t1272 = t1224 * t1114 + t1225 * t1115;
t1033 = t1225 * t1114 - t1224 * t1115;
t1287 = t1233 * t1033;
t1387 = -t1230 * t1272 + t1287;
t1299 = t1230 * t1033;
t1384 = t1233 * t1272 + t1299;
t1187 = t1224 * qJDD(1) + t1225 * t1234;
t1188 = t1225 * qJDD(1) - t1224 * t1234;
t1119 = -t1230 * t1187 + t1233 * t1188;
t1323 = g(3) - qJDD(2);
t1152 = -qJ(2) * t1187 + t1225 * t1323;
t1336 = -qJ(2) * t1188 - t1224 * t1323;
t1383 = -pkin(5) * t1119 - t1230 * t1152 + t1233 * t1336;
t1346 = t1233 * t1187 + t1230 * t1188;
t1382 = -pkin(5) * t1346 + t1233 * t1152 + t1230 * t1336;
t1314 = t1208 * t1228;
t1141 = t1177 * t1314;
t1313 = t1208 * t1231;
t1281 = t1175 * t1313;
t1251 = -t1141 + t1281;
t1332 = -t1229 * t1170 + t1232 * t1251;
t1352 = (t1175 * t1228 + t1177 * t1231) * t1208;
t1358 = t1224 * t1332 - t1225 * t1352;
t1359 = t1224 * t1352 + t1225 * t1332;
t1379 = t1230 * t1359 + t1233 * t1358;
t1378 = -t1230 * t1358 + t1233 * t1359;
t1055 = t1231 * t1110 + t1175 * t1314;
t1243 = t1228 * t1110 - t1281;
t1282 = t1229 * t1128;
t1333 = t1232 * t1243 - t1282;
t1360 = -t1224 * t1055 + t1225 * t1333;
t1361 = t1225 * t1055 + t1224 * t1333;
t1377 = -t1230 * t1361 + t1233 * t1360;
t1376 = t1230 * t1360 + t1233 * t1361;
t1344 = t1169 + t1330;
t1375 = pkin(3) * t1344;
t1374 = t1229 * t1344;
t1370 = t1232 * t1344;
t1098 = -t1234 * pkin(2) + qJDD(1) * pkin(6) + t1115;
t1326 = pkin(3) * t1232;
t1261 = -pkin(7) * t1229 - t1326;
t1181 = t1261 * qJD(1);
t1212 = t1232 * t1323;
t1331 = qJD(3) ^ 2;
t1035 = (qJD(1) * t1181 + t1098) * t1229 - qJDD(3) * pkin(3) - t1331 * pkin(7) + t1212;
t1366 = t1110 * pkin(4) + t1035 - t1390;
t1058 = t1228 * t1111 - t1177 * t1313;
t1059 = t1231 * t1111 + t1141;
t1252 = t1232 * t1059 + t1282;
t1335 = t1224 * t1058 + t1225 * t1252;
t1340 = -t1225 * t1058 + t1224 * t1252;
t1357 = -t1230 * t1340 + t1233 * t1335;
t1356 = t1230 * t1335 + t1233 * t1340;
t1072 = t1229 * t1098 + t1212;
t1074 = t1232 * t1098 - t1229 * t1323;
t1002 = t1229 * t1072 + t1232 * t1074;
t1276 = qJ(5) * t1228 + pkin(3);
t1325 = pkin(4) * t1231;
t1316 = qJD(5) * t1208;
t1196 = -0.2e1 * t1316;
t1118 = t1175 * pkin(4) - t1177 * qJ(5);
t1097 = -qJDD(1) * pkin(2) - t1234 * pkin(6) + t1114;
t1254 = -t1184 + t1213;
t1255 = t1183 + t1214;
t1020 = pkin(3) * t1254 - pkin(7) * t1255 + t1097;
t1036 = -t1331 * pkin(3) + qJDD(3) * pkin(7) + t1181 * t1290 + t1074;
t952 = t1228 * t1020 + t1231 * t1036;
t1250 = -pkin(4) * t1329 - t1170 * qJ(5) - t1175 * t1118 + t952;
t910 = t1196 + t1250;
t951 = -t1231 * t1020 + t1228 * t1036;
t915 = t1170 * pkin(4) - qJ(5) * t1329 + t1177 * t1118 + qJDD(5) + t951;
t871 = t1228 * t915 + t1231 * t910;
t930 = (-pkin(4) * t1208 - 0.2e1 * qJD(5)) * t1177 + t1366;
t1341 = -(t1276 + t1325) * t930 + pkin(7) * t871;
t1236 = 0.2e1 * qJD(5) * t1177 - t1366;
t903 = (-t1351 + t1157) * pkin(4) + t1236;
t1339 = t1231 * t903 - t1276 * t1351 + t1392;
t902 = pkin(4) * t1157 + t1236 + t1390;
t1338 = -t1419 + (pkin(3) + t1325) * t1349 + t1228 * t902;
t1337 = t1232 * t1170 + t1229 * t1251;
t1280 = t1232 * t1128;
t1334 = t1229 * t1243 + t1280;
t1327 = pkin(3) * t1229;
t1320 = qJ(5) * t1231;
t1319 = -pkin(2) * t1097 + pkin(6) * t1002;
t1318 = qJD(1) * qJD(3);
t1220 = t1229 ^ 2;
t1312 = t1220 * t1234;
t1310 = t1228 * t1035;
t1307 = t1228 * t1350;
t1086 = t1229 * t1097;
t1207 = t1232 * t1234 * t1229;
t1194 = qJDD(3) + t1207;
t1301 = t1229 * t1194;
t1195 = qJDD(3) - t1207;
t1300 = t1229 * t1195;
t1296 = t1231 * t1035;
t1294 = t1231 * t1350;
t1087 = t1232 * t1097;
t1288 = t1232 * t1195;
t1221 = t1232 ^ 2;
t1286 = t1220 + t1221;
t1203 = -t1312 - t1331;
t1140 = -t1229 * t1203 - t1288;
t1182 = 0.2e1 * t1214 + t1285;
t1279 = -pkin(2) * t1182 + pkin(6) * t1140 + t1086;
t1218 = t1221 * t1234;
t1205 = -t1218 - t1331;
t1138 = t1232 * t1205 - t1301;
t1185 = -0.2e1 * t1213 + t1284;
t1278 = pkin(2) * t1185 + pkin(6) * t1138 - t1087;
t890 = t1228 * t951 + t1231 * t952;
t1260 = -pkin(4) * t915 + qJ(5) * t910;
t870 = t1228 * t910 - t1231 * t915;
t847 = -pkin(3) * t870 - t1260;
t850 = -pkin(7) * t870 + (pkin(4) * t1228 - t1320) * t930;
t860 = t1229 * t930 + t1232 * t871;
t1275 = -pkin(2) * t870 + pkin(6) * t860 + t1229 * t850 + t1232 * t847;
t900 = pkin(4) * t1344 + t910;
t901 = qJ(5) * t1344 + t915;
t992 = -t1228 * t1062 - t1294;
t862 = -pkin(7) * t992 - t1228 * t900 + t1231 * t901;
t1258 = -pkin(4) * t1350 - qJ(5) * t1062;
t908 = -pkin(3) * t992 - t1258;
t996 = -t1231 * t1062 + t1307;
t937 = t1232 * t996 - t1374;
t1274 = -pkin(2) * t992 + pkin(6) * t937 + t1229 * t862 + t1232 * t908;
t1271 = -t1230 * t1198 - t1233 * t1199;
t875 = -pkin(4) * t1308 + t1231 * t902 - t1420;
t1237 = pkin(4) * t1113 - qJ(5) * t1347 + t1250;
t882 = -t1237 + 0.2e1 * t1316 - t1421;
t965 = -t1229 * t1349 - t1412;
t1269 = pkin(6) * t965 + t1229 * t875 + t1232 * t882 - t1422;
t880 = -t1228 * t903 - t1320 * t1351 - t1391;
t1235 = pkin(4) * t1348 + qJ(5) * t1343 - t915;
t884 = -t1235 - t1393;
t1268 = t1229 * t880 + t1232 * t884 + t1399;
t905 = t951 - t1393;
t950 = t1310 - t1391;
t1267 = t1229 * t950 + t1232 * t905 + t1399;
t909 = t952 + t1421;
t958 = t1296 + t1420;
t1068 = (qJD(4) - t1208) * t1175 + t1247;
t973 = -t1229 * t1068 + t1412;
t1266 = pkin(6) * t973 + t1229 * t958 + t1232 * t909 + t1422;
t1265 = t1224 * t1207;
t1264 = t1225 * t1207;
t1189 = t1286 * qJDD(1);
t1192 = t1218 + t1312;
t1263 = pkin(2) * t1192 + pkin(6) * t1189 + t1002;
t1262 = -pkin(3) * t1035 + pkin(7) * t890;
t1191 = t1233 * qJDD(1) - t1230 * t1234;
t1259 = -pkin(5) * t1191 - t1230 * g(3);
t1253 = t1229 * t1059 - t1280;
t889 = t1228 * t952 - t1231 * t951;
t1001 = t1232 * t1072 - t1229 * t1074;
t1248 = t1233 * t1198 - t1230 * t1199;
t1063 = (-qJD(4) - t1208) * t1177 + t1270;
t994 = t1228 * t1063 - t1294;
t873 = -pkin(7) * t994 - t889;
t998 = t1231 * t1063 + t1307;
t938 = t1232 * t998 - t1374;
t1244 = pkin(6) * t938 + t1229 * t873 + (-pkin(2) - t1326) * t994;
t1242 = -pkin(3) * t1351 - t1296 + t1392;
t1241 = pkin(3) * t1068 + t1310 + t1419;
t1240 = pkin(7) * t998 + t1375 + t890;
t879 = t1229 * t1035 + t1232 * t890;
t1239 = pkin(6) * t879 + (-pkin(2) + t1261) * t889;
t1238 = pkin(7) * t996 + t1228 * t901 + t1231 * t900 + t1375;
t1204 = t1218 - t1331;
t1202 = -t1312 + t1331;
t1193 = -t1218 + t1312;
t1190 = t1230 * qJDD(1) + t1233 * t1234;
t1174 = t1232 * t1194;
t1173 = t1286 * t1318;
t1158 = -pkin(5) * t1190 + t1233 * g(3);
t1145 = t1232 * t1183 - t1220 * t1318;
t1144 = -t1229 * t1184 - t1221 * t1318;
t1143 = t1224 * qJDD(3) + t1225 * t1173;
t1142 = -t1225 * qJDD(3) + t1224 * t1173;
t1139 = -t1229 * t1202 + t1174;
t1137 = t1232 * t1204 - t1300;
t1136 = t1232 * t1203 - t1300;
t1135 = t1232 * t1202 + t1301;
t1134 = t1229 * t1205 + t1174;
t1133 = t1229 * t1204 + t1288;
t1132 = t1255 * t1229;
t1131 = t1254 * t1232;
t1122 = t1225 * t1189 - t1224 * t1192;
t1121 = t1224 * t1189 + t1225 * t1192;
t1117 = -t1229 * t1182 + t1232 * t1185;
t1116 = t1232 * t1182 + t1229 * t1185;
t1108 = t1225 * t1145 - t1265;
t1107 = t1225 * t1144 + t1265;
t1106 = t1224 * t1145 + t1264;
t1105 = t1224 * t1144 - t1264;
t1104 = t1225 * t1139 + t1224 * t1285;
t1103 = t1225 * t1137 + t1224 * t1284;
t1102 = t1224 * t1139 - t1225 * t1285;
t1101 = t1224 * t1137 - t1225 * t1284;
t1084 = t1225 * t1140 + t1224 * t1182;
t1083 = t1225 * t1138 - t1224 * t1185;
t1082 = t1224 * t1140 - t1225 * t1182;
t1081 = t1224 * t1138 + t1225 * t1185;
t1080 = -pkin(1) * t1187 - t1115;
t1079 = pkin(1) * t1188 - t1114;
t1073 = t1225 * t1117 + t1224 * t1193;
t1071 = t1224 * t1117 - t1225 * t1193;
t1046 = -pkin(6) * t1136 + t1087;
t1041 = -pkin(6) * t1134 + t1086;
t1030 = pkin(1) * t1033;
t1028 = -pkin(2) * t1136 + t1074;
t1027 = -pkin(2) * t1134 + t1072;
t1019 = pkin(1) * t1323 + qJ(2) * t1272;
t984 = pkin(1) * t1081 + t1278;
t983 = pkin(1) * t1082 + t1279;
t971 = t1232 * t1068 + t1413;
t968 = -qJ(2) * t1121 + t1225 * t1001;
t967 = qJ(2) * t1122 + t1224 * t1001;
t963 = t1232 * t1349 - t1413;
t960 = t1225 * t1002 + t1224 * t1097;
t959 = t1224 * t1002 - t1225 * t1097;
t949 = pkin(1) * t1121 + t1263;
t936 = t1229 * t998 + t1370;
t935 = t1229 * t996 + t1370;
t932 = -qJ(2) * t1082 - t1224 * t1028 + t1225 * t1046;
t931 = -qJ(2) * t1081 - t1224 * t1027 + t1225 * t1041;
t920 = t1225 * t973 - t1417;
t918 = t1224 * t973 + t1415;
t917 = -pkin(1) * t1136 + qJ(2) * t1084 + t1225 * t1028 + t1224 * t1046;
t916 = -pkin(1) * t1134 + qJ(2) * t1083 + t1225 * t1027 + t1224 * t1041;
t913 = t1225 * t965 + t1417;
t911 = t1224 * t965 - t1415;
t895 = t1224 * t994 + t1225 * t938;
t894 = t1224 * t992 + t1225 * t937;
t893 = t1224 * t938 - t1225 * t994;
t892 = t1224 * t937 - t1225 * t992;
t891 = pkin(1) * t959 + t1319;
t887 = -pkin(2) * t971 - t1241;
t886 = -t1242 - t1405;
t885 = -qJ(2) * t959 - (pkin(2) * t1224 - pkin(6) * t1225) * t1001;
t878 = -t1232 * t1035 + t1229 * t890;
t868 = qJ(2) * t960 - (-pkin(2) * t1225 - pkin(6) * t1224 - pkin(1)) * t1001;
t867 = -pkin(6) * t971 - t1229 * t909 + t1232 * t958;
t866 = -t1229 * t905 + t1232 * t950 - t1404;
t865 = -t1339 - t1405;
t864 = -pkin(2) * t963 - t1338;
t863 = -pkin(2) * t936 - t1240;
t859 = t1229 * t871 - t1232 * t930;
t857 = t1224 * t889 + t1225 * t879;
t856 = t1224 * t879 - t1225 * t889;
t855 = -pkin(6) * t936 + t1232 * t873 + t994 * t1327;
t854 = -pkin(2) * t878 - t1262;
t853 = pkin(1) * t918 + t1266;
t852 = t1267 + t1423;
t851 = -pkin(2) * t935 - t1238;
t848 = -t1229 * t884 + t1232 * t880 - t1404;
t845 = -pkin(6) * t963 - t1229 * t882 + t1232 * t875;
t844 = -pkin(6) * t878 + (-pkin(7) * t1232 + t1327) * t889;
t843 = -pkin(6) * t935 - t1229 * t908 + t1232 * t862;
t842 = -qJ(2) * t918 - t1224 * t887 + t1225 * t867;
t841 = t1224 * t870 + t1225 * t860;
t840 = t1224 * t860 - t1225 * t870;
t839 = pkin(1) * t893 + t1244;
t838 = -t1224 * t886 + t1225 * t866 - t1418;
t837 = t1268 + t1423;
t836 = -pkin(1) * t971 + qJ(2) * t920 + t1224 * t867 + t1225 * t887;
t835 = pkin(1) * t911 + t1269;
t834 = t1224 * t866 + t1225 * t886 + t1411;
t833 = pkin(1) * t892 + t1274;
t832 = -qJ(2) * t893 - t1224 * t863 + t1225 * t855;
t831 = -t1224 * t865 + t1225 * t848 - t1418;
t830 = -pkin(2) * t859 - t1341;
t829 = -qJ(2) * t911 - t1224 * t864 + t1225 * t845;
t828 = -pkin(1) * t936 + qJ(2) * t895 + t1224 * t855 + t1225 * t863;
t827 = t1224 * t848 + t1225 * t865 + t1411;
t826 = -pkin(1) * t963 + qJ(2) * t913 + t1224 * t845 + t1225 * t864;
t825 = pkin(1) * t856 + t1239;
t824 = -qJ(2) * t892 - t1224 * t851 + t1225 * t843;
t823 = -pkin(1) * t935 + qJ(2) * t894 + t1224 * t843 + t1225 * t851;
t822 = -pkin(6) * t859 - t1229 * t847 + t1232 * t850;
t821 = -qJ(2) * t856 - t1224 * t854 + t1225 * t844;
t820 = -pkin(1) * t878 + qJ(2) * t857 + t1224 * t844 + t1225 * t854;
t819 = pkin(1) * t840 + t1275;
t818 = -qJ(2) * t840 - t1224 * t830 + t1225 * t822;
t817 = -pkin(1) * t859 + qJ(2) * t841 + t1224 * t822 + t1225 * t830;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1191, 0, -t1190, 0, t1259, -t1158, -t1248, -pkin(5) * t1248, 0, 0, t1119, 0, -t1346, 0, t1383, -t1382, t1387, pkin(5) * t1387 + qJ(2) * t1287 - t1230 * t1019, -t1230 * t1106 + t1233 * t1108, -t1230 * t1071 + t1233 * t1073, -t1230 * t1102 + t1233 * t1104, -t1230 * t1105 + t1233 * t1107, -t1230 * t1101 + t1233 * t1103, -t1230 * t1142 + t1233 * t1143, t1233 * t931 - t1230 * t916 - pkin(5) * (t1233 * t1081 + t1230 * t1083), t1233 * t932 - t1230 * t917 - pkin(5) * (t1233 * t1082 + t1230 * t1084), t1233 * t968 - t1230 * t967 - pkin(5) * (t1233 * t1121 + t1230 * t1122), t1233 * t885 - t1230 * t868 - pkin(5) * (t1230 * t960 + t1233 * t959), t1357, t1428, t1425, t1377, -t1426, t1378, -t1230 * t834 + t1233 * t838 - t1407, t1233 * t842 - t1230 * t836 - pkin(5) * (t1230 * t920 + t1233 * t918), t1233 * t832 - t1230 * t828 - pkin(5) * (t1230 * t895 + t1233 * t893), t1233 * t821 - t1230 * t820 - pkin(5) * (t1230 * t857 + t1233 * t856), t1357, t1425, -t1428, t1378, t1426, t1377, -t1230 * t827 + t1233 * t831 - t1407, t1233 * t824 - t1230 * t823 - pkin(5) * (t1230 * t894 + t1233 * t892), t1233 * t829 - t1230 * t826 - pkin(5) * (t1230 * t913 + t1233 * t911), t1233 * t818 - t1230 * t817 - pkin(5) * (t1230 * t841 + t1233 * t840); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1190, 0, t1191, 0, t1158, t1259, t1271, pkin(5) * t1271, 0, 0, t1346, 0, t1119, 0, t1382, t1383, t1384, pkin(5) * t1384 + qJ(2) * t1299 + t1233 * t1019, t1233 * t1106 + t1230 * t1108, t1233 * t1071 + t1230 * t1073, t1233 * t1102 + t1230 * t1104, t1233 * t1105 + t1230 * t1107, t1233 * t1101 + t1230 * t1103, t1233 * t1142 + t1230 * t1143, t1230 * t931 + t1233 * t916 + pkin(5) * (-t1230 * t1081 + t1233 * t1083), t1230 * t932 + t1233 * t917 + pkin(5) * (-t1230 * t1082 + t1233 * t1084), t1230 * t968 + t1233 * t967 + pkin(5) * (-t1230 * t1121 + t1233 * t1122), t1230 * t885 + t1233 * t868 + pkin(5) * (-t1230 * t959 + t1233 * t960), t1356, -t1429, t1424, t1376, t1427, t1379, t1230 * t838 + t1233 * t834 + t1408, t1230 * t842 + t1233 * t836 + pkin(5) * (-t1230 * t918 + t1233 * t920), t1230 * t832 + t1233 * t828 + pkin(5) * (-t1230 * t893 + t1233 * t895), t1230 * t821 + t1233 * t820 + pkin(5) * (-t1230 * t856 + t1233 * t857), t1356, t1424, t1429, t1379, -t1427, t1376, t1230 * t831 + t1233 * t827 + t1408, t1230 * t824 + t1233 * t823 + pkin(5) * (-t1230 * t892 + t1233 * t894), t1230 * t829 + t1233 * t826 + pkin(5) * (-t1230 * t911 + t1233 * t913), t1230 * t818 + t1233 * t817 + pkin(5) * (-t1230 * t840 + t1233 * t841); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1198, t1199, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1079, t1080, 0, -t1030, t1132, t1116, t1135, -t1131, t1133, 0, t984, t983, t949, t891, t1253, -t954, t1396, t1334, t977, t1337, t852, t853, t839, t825, t1253, t1396, t954, t1337, -t977, t1334, t837, t833, t835, t819; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1234, 0, 0, -g(3), -t1198, 0, 0, 0, t1188, 0, -t1187, 0, t1336, -t1152, t1033, qJ(2) * t1033, t1108, t1073, t1104, t1107, t1103, t1143, t931, t932, t968, t885, t1335, -t898, t1409, t1360, t928, t1359, t838, t842, t832, t821, t1335, t1409, t898, t1359, -t928, t1360, t831, t824, t829, t818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1234, 0, qJDD(1), 0, g(3), 0, -t1199, 0, 0, 0, t1187, 0, t1188, 0, t1152, t1336, t1272, t1019, t1106, t1071, t1102, t1105, t1101, t1142, t916, t917, t967, t868, t1340, -t896, t1410, t1361, t924, t1358, t834, t836, t828, t820, t1340, t1410, t896, t1358, -t924, t1361, t827, t823, t826, t817; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1198, t1199, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1079, t1080, 0, -t1030, t1132, t1116, t1135, -t1131, t1133, 0, t984, t983, t949, t891, t1253, -t954, t1396, t1334, t977, t1337, t852, t853, t839, t825, t1253, t1396, t954, t1337, -t977, t1334, t837, t833, t835, t819; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1234, 0, 0, -t1323, t1114, 0, t1145, t1117, t1139, t1144, t1137, t1173, t1041, t1046, t1001, pkin(6) * t1001, t1252, -t956, t1395, t1333, t981, t1332, t866, t867, t855, t844, t1252, t1395, t956, t1332, -t981, t1333, t848, t843, t845, t822; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1234, 0, qJDD(1), 0, t1323, 0, t1115, 0, t1207, -t1193, -t1285, -t1207, -t1284, -qJDD(3), t1027, t1028, 0, pkin(2) * t1001, -t1058, -t993, -t1386, t1055, -t1039, -t1352, t886, t887, t863, t854, -t1058, -t1386, t993, -t1352, t1039, t1055, t865, t851, t864, t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1114, -t1115, 0, 0, t1132, t1116, t1135, -t1131, t1133, 0, t1278, t1279, t1263, t1319, t1253, -t954, t1396, t1334, t977, t1337, t1267, t1266, t1244, t1239, t1253, t1396, t954, t1337, -t977, t1334, t1268, t1274, t1269, t1275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1183, t1185, t1194, -t1214, t1204, t1214, 0, t1097, t1072, 0, t1059, -t995, t1385, t1243, t1044, t1251, t950, t958, t873, -pkin(7) * t889, t1059, t1385, t995, t1251, -t1044, t1243, t880, t862, t875, t850; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1213, t1182, t1202, t1184, t1195, -t1213, -t1097, 0, t1074, 0, -t1128, -t1345, -t1350, t1128, t1062, t1170, t905, t909, -pkin(3) * t994, -pkin(3) * t889, -t1128, -t1350, t1345, t1170, -t1062, t1128, t884, t908, t882, t847; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1207, t1193, t1285, t1207, t1284, qJDD(3), -t1072, -t1074, 0, 0, t1058, t993, t1386, -t1055, t1039, t1352, t1242, t1241, t1240, t1262, t1058, t1386, -t993, t1352, -t1039, -t1055, t1339, t1238, t1338, t1341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1111, -t1351, t1348, -t1315, t1146, t1315, 0, t1035, t951, 0, t1111, t1348, t1351, t1315, -t1146, -t1315, -qJ(5) * t1351, t901, t902, -qJ(5) * t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1157, t1349, -t1147, -t1110, -t1347, t1157, -t1035, 0, t952, 0, -t1157, -t1147, -t1349, t1157, t1347, -t1110, t903, t900, pkin(4) * t1349, -pkin(4) * t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1128, t1345, t1350, -t1128, -t1062, -t1170, -t951, -t952, 0, 0, t1128, t1350, -t1345, -t1170, t1062, -t1128, t1235, t1258, t1196 + t1237, t1260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1111, t1348, t1351, t1315, -t1146, -t1315, 0, t915, -t930, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1128, t1350, -t1345, -t1170, t1062, -t1128, -t915, 0, t910, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1157, t1147, t1349, -t1157, -t1347, t1110, t930, -t910, 0, 0;];
m_new_reg = t1;
