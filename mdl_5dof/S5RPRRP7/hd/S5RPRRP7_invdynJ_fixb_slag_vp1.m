% Calculate vector of inverse dynamics joint torques for
% S5RPRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:46
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RPRRP7_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP7_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP7_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP7_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP7_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP7_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RPRRP7_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RPRRP7_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RPRRP7_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:44:33
% EndTime: 2019-12-31 18:45:35
% DurationCPUTime: 54.28s
% Computational Cost: add. (26837->976), mult. (35749->1252), div. (0->0), fcn. (34246->8), ass. (0->465)
t806 = Icges(5,1) + Icges(6,1);
t832 = Icges(6,4) + Icges(5,5);
t831 = Icges(5,6) - Icges(6,6);
t424 = sin(qJ(4));
t856 = (Icges(5,4) - Icges(6,5)) * t424;
t805 = Icges(5,2) + Icges(6,3);
t855 = Icges(6,2) + Icges(5,3);
t427 = cos(qJ(4));
t854 = -t831 * t424 + t832 * t427;
t853 = t806 * t427 - t856;
t425 = sin(qJ(3));
t428 = cos(qJ(3));
t680 = Icges(5,4) * t427;
t510 = -Icges(5,2) * t424 + t680;
t852 = t425 * t510 - t831 * t428;
t423 = qJ(1) + pkin(8);
t415 = sin(t423);
t416 = cos(t423);
t647 = t427 * t428;
t282 = t415 * t647 - t416 * t424;
t257 = Icges(6,5) * t282;
t649 = t424 * t428;
t652 = t416 * t427;
t281 = t415 * t649 + t652;
t657 = t415 * t425;
t136 = -Icges(6,6) * t657 - Icges(6,3) * t281 - t257;
t260 = Icges(5,4) * t282;
t144 = -Icges(5,2) * t281 + Icges(5,6) * t657 + t260;
t842 = t136 + t144;
t591 = t416 * t647;
t284 = t415 * t424 + t591;
t258 = Icges(6,5) * t284;
t656 = t415 * t427;
t283 = t416 * t649 - t656;
t653 = t416 * t425;
t137 = Icges(6,6) * t653 + Icges(6,3) * t283 + t258;
t682 = Icges(5,4) * t284;
t146 = -Icges(5,2) * t283 + Icges(5,6) * t653 + t682;
t841 = t137 - t146;
t138 = Icges(5,5) * t282 - Icges(5,6) * t281 + Icges(5,3) * t657;
t141 = Icges(6,4) * t282 + Icges(6,2) * t657 + Icges(6,6) * t281;
t840 = t138 + t141;
t140 = Icges(5,5) * t284 - Icges(5,6) * t283 + Icges(5,3) * t653;
t143 = Icges(6,4) * t284 + Icges(6,2) * t653 + Icges(6,6) * t283;
t814 = t140 + t143;
t256 = Icges(6,5) * t281;
t147 = Icges(6,1) * t282 + Icges(6,4) * t657 + t256;
t259 = Icges(5,4) * t281;
t151 = -Icges(5,1) * t282 - Icges(5,5) * t657 + t259;
t839 = t147 - t151;
t676 = Icges(6,5) * t283;
t149 = Icges(6,1) * t284 + Icges(6,4) * t653 + t676;
t261 = Icges(5,4) * t283;
t152 = Icges(5,1) * t284 + Icges(5,5) * t653 - t261;
t838 = t149 + t152;
t648 = t425 * t427;
t397 = Icges(6,5) * t648;
t650 = t424 * t425;
t830 = Icges(6,3) * t650 + t397 - t852;
t674 = Icges(6,5) * t427;
t507 = Icges(6,3) * t424 + t674;
t775 = (t507 - t510) * t428 - t831 * t425;
t813 = t854 * t425 - t855 * t428;
t851 = t855 * t425 + t854 * t428;
t811 = t853 * t425 - t832 * t428;
t774 = t832 * t425 + t853 * t428;
t850 = (t805 * t427 + t856) * t425;
t849 = (-t832 * t424 - t831 * t427) * t425;
t797 = rSges(6,1) + pkin(4);
t820 = -t283 * t842 + t839 * t284 + t840 * t653;
t819 = t283 * t841 + t284 * t838 + t653 * t814;
t607 = qJD(3) * t425;
t577 = t424 * t607;
t605 = qJD(4) * t424;
t130 = qJD(1) * t281 - qJD(4) * t591 - t415 * t605 + t416 * t577;
t602 = qJD(4) * t428;
t403 = qJD(1) - t602;
t452 = t403 * t424 - t427 * t607;
t610 = qJD(1) * t428;
t552 = -qJD(4) + t610;
t131 = t416 * t452 - t552 * t656;
t606 = qJD(3) * t428;
t578 = t416 * t606;
t611 = qJD(1) * t425;
t583 = t415 * t611;
t466 = t578 - t583;
t68 = Icges(6,5) * t131 + Icges(6,6) * t466 - Icges(6,3) * t130;
t74 = Icges(5,4) * t131 + Icges(5,2) * t130 + Icges(5,6) * t466;
t848 = t68 - t74;
t603 = qJD(4) * t427;
t612 = qJD(1) * t416;
t613 = qJD(1) * t415;
t132 = -t415 * t577 - t416 * t605 - t427 * t613 + (t415 * t603 + t424 * t612) * t428;
t133 = t415 * t452 + t552 * t652;
t816 = t415 * t606;
t468 = t416 * t611 + t816;
t69 = Icges(6,5) * t133 + Icges(6,6) * t468 + Icges(6,3) * t132;
t75 = Icges(5,4) * t133 - Icges(5,2) * t132 + Icges(5,6) * t468;
t847 = t69 - t75;
t70 = Icges(5,5) * t131 + Icges(5,6) * t130 + Icges(5,3) * t466;
t72 = Icges(6,4) * t131 + Icges(6,2) * t466 - Icges(6,6) * t130;
t846 = t70 + t72;
t71 = Icges(5,5) * t133 - Icges(5,6) * t132 + Icges(5,3) * t468;
t73 = Icges(6,4) * t133 + Icges(6,2) * t468 + Icges(6,6) * t132;
t845 = t71 + t73;
t76 = Icges(6,1) * t131 + Icges(6,4) * t466 - Icges(6,5) * t130;
t78 = Icges(5,1) * t131 + Icges(5,4) * t130 + Icges(5,5) * t466;
t844 = t76 + t78;
t77 = Icges(6,1) * t133 + Icges(6,4) * t468 + Icges(6,5) * t132;
t79 = Icges(5,1) * t133 - Icges(5,4) * t132 + Icges(5,5) * t468;
t843 = t77 + t79;
t761 = t283 * t830 + t284 * t811 + t653 * t813;
t787 = rSges(6,3) + qJ(5);
t837 = qJD(3) * t775 + qJD(4) * t850;
t836 = qJD(3) * t851 + qJD(4) * t849;
t330 = (-Icges(5,1) * t424 - t680) * t425;
t604 = qJD(4) * t425;
t835 = (-Icges(6,1) * t424 + t674) * t604 + qJD(4) * t330 + t774 * qJD(3);
t834 = t424 * t830 + t427 * t811;
t800 = t144 * t424 + t151 * t427;
t801 = t136 * t424 - t147 * t427;
t833 = t800 + t801;
t429 = cos(qJ(1));
t422 = t429 * pkin(1);
t822 = -t281 * t842 + t839 * t282 + t840 * t657;
t821 = t281 * t841 + t282 * t838 + t657 * t814;
t762 = t281 * t830 + t282 * t811 + t657 * t813;
t336 = rSges(3,1) * t415 + rSges(3,2) * t416;
t426 = sin(qJ(1));
t711 = pkin(1) * t426;
t314 = -t336 - t711;
t537 = t282 * rSges(5,1) - t281 * rSges(5,2);
t156 = -rSges(5,3) * t657 - t537;
t702 = rSges(5,1) * t427;
t536 = -rSges(5,2) * t424 + t702;
t306 = -rSges(5,3) * t428 + t425 * t536;
t608 = qJD(3) * t416;
t317 = -t415 * t604 + t608;
t829 = t156 * t403 - t306 * t317;
t255 = qJD(5) * t283;
t809 = -t787 * t281 - t282 * t797;
t645 = rSges(6,2) * t657 - t809;
t828 = t403 * t645 - t255;
t599 = qJD(1) * qJD(3);
t320 = -qJDD(3) * t416 + t415 * t599;
t598 = qJDD(4) * t425;
t174 = qJD(4) * t468 + t415 * t598 + t320;
t340 = qJD(3) * t604 - qJDD(4) * t428 + qJDD(1);
t597 = pkin(3) * t657;
t355 = qJD(3) * t597;
t651 = t416 * t428;
t387 = pkin(3) * t651;
t200 = pkin(7) * t468 + qJD(1) * t387 - t355;
t825 = t415 * pkin(6);
t339 = t416 * pkin(2) + t825;
t318 = t339 * qJD(1);
t421 = t428 * pkin(3);
t752 = t425 * pkin(7) + t421;
t349 = t752 * qJD(3);
t382 = pkin(3) * t425 - pkin(7) * t428;
t310 = t752 * t415;
t412 = t416 * pkin(6);
t338 = pkin(2) * t415 - t412;
t560 = -t338 - t711;
t543 = -t310 + t560;
t430 = qJD(1) ^ 2;
t596 = t430 * t422;
t434 = t320 * t382 + (-t200 - t318) * qJD(1) + t543 * qJDD(1) - t349 * t608 - t596;
t533 = rSges(6,1) * t427 + rSges(6,3) * t424;
t764 = (-pkin(4) * t427 - qJ(5) * t424 - t533) * t425;
t625 = -rSges(6,2) * t428 - t764;
t601 = qJD(5) * t424;
t394 = t425 * t601;
t419 = t425 * rSges(6,2);
t465 = t424 * t606 + t425 * t603;
t640 = t394 + t465 * qJ(5) + (-t424 * t604 + t427 * t606) * pkin(4) + (-rSges(6,1) * t424 + rSges(6,3) * t427) * t604 + (t428 * t533 + t419) * qJD(3);
t254 = qJD(5) * t281;
t760 = -t787 * t132 - t133 * t797 - t254;
t704 = rSges(6,2) * t468 - t760;
t6 = -qJD(5) * t130 + qJDD(5) * t283 + t174 * t625 - t317 * t640 - t340 * t645 - t403 * t704 + t434;
t827 = t6 - g(1);
t319 = qJDD(3) * t415 + t416 * t599;
t173 = qJD(4) * t466 + t416 * t598 + t319;
t609 = qJD(3) * t415;
t316 = t416 * t604 + t609;
t356 = pkin(7) * t578;
t579 = t416 * t607;
t467 = -t415 * t610 - t579;
t199 = pkin(3) * t467 - pkin(7) * t583 + t356;
t312 = pkin(7) * t653 + t387;
t393 = pkin(6) * t612;
t545 = qJDD(1) * t422 - t430 * t711;
t479 = qJD(1) * (-pkin(2) * t613 + t393) + qJDD(1) * t339 + t545;
t438 = qJD(1) * t199 + qJDD(1) * t312 - t319 * t382 - t349 * t609 + t479;
t643 = rSges(6,2) * t653 + t283 * t787 + t284 * t797;
t759 = rSges(6,2) * t578 - t787 * t130 + t131 * t797 + t255;
t705 = -rSges(6,2) * t583 + t759;
t7 = qJD(5) * t132 + qJDD(5) * t281 - t173 * t625 - t316 * t640 + t340 * t643 + t403 * t705 + t438;
t826 = t7 - g(2);
t796 = t130 * t842 + t131 * t839 + t283 * t847 + t284 * t843 + t466 * t840 + t653 * t845;
t795 = -t130 * t841 + t131 * t838 + t283 * t848 + t284 * t844 + t466 * t814 + t653 * t846;
t794 = -t132 * t842 + t133 * t839 + t281 * t847 + t282 * t843 + t468 * t840 + t657 * t845;
t793 = t132 * t841 + t133 * t838 + t281 * t848 + t282 * t844 + t468 * t814 + t657 * t846;
t789 = t316 * t819 - t317 * t820 + t403 * t761;
t824 = -t130 * t830 + t131 * t811 + t283 * t837 + t284 * t835 + t466 * t813 + t653 * t836;
t823 = t132 * t830 + t133 * t811 + t281 * t837 + t282 * t835 + t468 * t813 + t657 * t836;
t783 = t141 * t428;
t56 = -t425 * t801 - t783;
t786 = t138 * t428;
t58 = -t425 * t800 - t786;
t818 = t56 + t58;
t504 = t137 * t424 + t149 * t427;
t57 = -t143 * t428 + t425 * t504;
t502 = -t146 * t424 + t152 * t427;
t59 = -t140 * t428 + t425 * t502;
t817 = t57 + t59;
t754 = t425 * t834 - t428 * t813;
t812 = -t425 * t507 + t852;
t810 = (-t834 + t851) * t403 + (t415 * t813 - t833) * t317 + (-t416 * t813 - t502 - t504) * t316;
t808 = -t316 * t625 + t643 * t403 + t254;
t622 = -t787 * t648 + t650 * t797;
t807 = (qJD(3) * t834 - t836) * t428 + (t835 * t427 + t837 * t424 + (-t424 * t811 + t427 * t830) * qJD(4) + t813 * qJD(3)) * t425;
t804 = -t849 * t403 + (-t281 * t832 - t282 * t831) * t317 + (t283 * t832 + t284 * t831) * t316;
t799 = t819 * t173 + t820 * t174 + t795 * t316 - t796 * t317 + t761 * t340 + t824 * t403;
t798 = t173 * t821 + t174 * t822 + t316 * t793 - t317 * t794 + t340 * t762 + t403 * t823;
t16 = (-qJD(3) * t801 - t73) * t428 + (qJD(3) * t141 + t424 * t69 + t427 * t77 + (-t136 * t427 - t147 * t424) * qJD(4)) * t425;
t18 = (-qJD(3) * t800 - t71) * t428 + (qJD(3) * t138 - t424 * t75 + t427 * t79 + (-t144 * t427 + t151 * t424) * qJD(4)) * t425;
t792 = t16 + t18;
t17 = (qJD(3) * t504 - t72) * t428 + (qJD(3) * t143 + t424 * t68 + t427 * t76 + (t137 * t427 - t149 * t424) * qJD(4)) * t425;
t19 = (qJD(3) * t502 - t70) * t428 + (qJD(3) * t140 - t424 * t74 + t427 * t78 + (-t146 * t427 - t152 * t424) * qJD(4)) * t425;
t791 = t17 + t19;
t790 = t821 * t316 - t822 * t317 + t762 * t403;
t788 = t316 * t817 - t317 * t818 + t403 * t754;
t780 = t812 * t415;
t779 = t812 * t416;
t778 = t811 * t415;
t777 = t811 * t416;
t408 = t415 * rSges(4,3);
t240 = rSges(4,1) * t651 - rSges(4,2) * t653 + t408;
t751 = t422 + t339;
t198 = t240 + t751;
t773 = t312 + t751;
t772 = t394 - t349 - t640;
t771 = t810 * t425;
t770 = t316 * t814 - t317 * t840 + t403 * t813;
t746 = t415 * t818 + t416 * t817;
t769 = t415 * t817 - t416 * t818;
t745 = t415 * t820 + t416 * t819;
t768 = t415 * t819 - t416 * t820;
t744 = t415 * t822 + t416 * t821;
t767 = t415 * t821 - t416 * t822;
t321 = t382 * t609;
t463 = qJD(1) * t773 - t321;
t45 = t463 + t808;
t555 = t45 * t625;
t573 = t310 * t609 + t312 * t608 + qJD(2);
t37 = t316 * t645 + t317 * t643 + t394 + t573;
t557 = t37 * t645;
t766 = t555 - t557;
t655 = t415 * t428;
t384 = pkin(7) * t655;
t309 = t384 - t597;
t386 = pkin(7) * t651;
t311 = -pkin(3) * t653 + t386;
t765 = t416 * t199 + t415 * t200 - t309 * t609 + t310 * t612 - t311 * t608;
t337 = t416 * rSges(3,1) - rSges(3,2) * t415;
t315 = t337 + t422;
t417 = Icges(4,4) * t428;
t511 = -Icges(4,2) * t425 + t417;
t361 = Icges(4,1) * t425 + t417;
t750 = (-t811 + t850) * t403 + (-t282 * t805 + t256 - t259 + t839) * t317 + (t284 * t805 + t261 - t676 - t838) * t316;
t749 = (-Icges(6,1) * t650 + t330 + t397 + t830) * t403 + (t281 * t806 - t257 + t260 + t842) * t317 + (-t283 * t806 + t258 - t682 + t841) * t316;
t748 = t804 * t425;
t739 = t340 * t754 + t403 * t807;
t736 = t425 * (g(1) * t416 + g(2) * t415);
t668 = Icges(4,3) * t416;
t232 = Icges(4,5) * t655 - Icges(4,6) * t657 - t668;
t373 = Icges(4,4) * t657;
t678 = Icges(4,5) * t416;
t236 = Icges(4,1) * t655 - t373 - t678;
t671 = Icges(4,6) * t416;
t234 = Icges(4,4) * t655 - Icges(4,2) * t657 - t671;
t662 = t234 * t425;
t499 = -t236 * t428 + t662;
t93 = -t416 * t232 - t415 * t499;
t358 = Icges(4,5) * t428 - Icges(4,6) * t425;
t357 = Icges(4,5) * t425 + Icges(4,6) * t428;
t470 = qJD(3) * t357;
t683 = Icges(4,4) * t425;
t362 = Icges(4,1) * t428 - t683;
t237 = Icges(4,5) * t415 + t362 * t416;
t235 = Icges(4,6) * t415 + t416 * t511;
t661 = t235 * t425;
t498 = -t237 * t428 + t661;
t735 = -t416 * t470 + (-t358 * t415 + t498 + t668) * qJD(1);
t233 = Icges(4,3) * t415 + t358 * t416;
t615 = qJD(1) * t233;
t734 = qJD(1) * t499 - t415 * t470 + t615;
t359 = Icges(4,2) * t428 + t683;
t493 = t359 * t425 - t361 * t428;
t733 = t493 * qJD(1) + t358 * qJD(3);
t469 = t199 * t608 + t200 * t609 + t319 * t310 - t312 * t320 + qJDD(2);
t5 = qJD(5) * t465 + qJDD(5) * t650 + t173 * t645 - t174 * t643 + t316 * t704 + t317 * t705 + t469;
t732 = t37 * t705 + t5 * t643;
t632 = -Icges(4,2) * t655 + t236 - t373;
t634 = t361 * t415 + t234;
t731 = -t425 * t632 - t428 * t634;
t728 = t173 / 0.2e1;
t727 = t174 / 0.2e1;
t726 = -t316 / 0.2e1;
t725 = t316 / 0.2e1;
t724 = -t317 / 0.2e1;
t723 = t317 / 0.2e1;
t722 = t319 / 0.2e1;
t721 = t320 / 0.2e1;
t720 = t340 / 0.2e1;
t719 = -t403 / 0.2e1;
t718 = t403 / 0.2e1;
t713 = -rSges(6,2) - pkin(7);
t712 = -rSges(5,3) - pkin(7);
t710 = g(1) * t415;
t703 = rSges(4,1) * t428;
t700 = t16 * t317;
t699 = t17 * t316;
t698 = t18 * t317;
t697 = t19 * t316;
t582 = t382 * t608;
t444 = qJD(1) * t543 - t582;
t64 = t444 + t829;
t690 = t416 * t64;
t418 = t425 * rSges(5,3);
t688 = t56 * t174;
t687 = t57 * t173;
t686 = t58 * t174;
t685 = t59 * t173;
t616 = rSges(4,2) * t657 + t416 * rSges(4,3);
t239 = rSges(4,1) * t655 - t616;
t544 = -t239 + t560;
t367 = rSges(4,1) * t425 + rSges(4,2) * t428;
t580 = t367 * t608;
t115 = qJD(1) * t544 - t580;
t665 = t115 * t415;
t664 = t115 * t416;
t116 = qJD(1) * t198 - t367 * t609;
t304 = t367 * t416;
t663 = t116 * t304;
t659 = t357 * t415;
t658 = t357 * t416;
t642 = -t281 * t797 + t282 * t787;
t641 = -t283 * t797 + t284 * t787;
t333 = (-rSges(5,1) * t424 - rSges(5,2) * t427) * t425;
t209 = qJD(4) * t333 + (t428 * t536 + t418) * qJD(3);
t639 = -t209 - t349;
t638 = -t415 * t232 - t236 * t651;
t637 = t415 * t233 + t237 * t651;
t376 = rSges(6,2) * t655;
t636 = t415 * t764 + t376;
t380 = rSges(6,2) * t651;
t635 = t416 * t764 + t380;
t633 = -t361 * t416 - t235;
t631 = -t359 * t416 + t237;
t628 = t415 * t310 + t416 * t312;
t624 = -t306 - t382;
t623 = -t647 * t797 - t649 * t787 - t419;
t594 = rSges(5,2) * t650;
t621 = rSges(5,3) * t655 + t415 * t594;
t620 = rSges(5,3) * t651 + t416 * t594;
t619 = rSges(4,2) * t583 + rSges(4,3) * t612;
t618 = -t359 + t362;
t617 = t361 + t511;
t614 = qJD(1) * t358;
t165 = -t415 * t493 - t658;
t600 = t165 * qJD(1);
t595 = rSges(5,1) * t648;
t590 = t131 * rSges(5,1) + t130 * rSges(5,2) + rSges(5,3) * t578;
t158 = t284 * rSges(5,1) - t283 * rSges(5,2) + rSges(5,3) * t653;
t586 = -t382 - t625;
t584 = -pkin(2) - t421;
t572 = -pkin(2) - t703;
t569 = t612 / 0.2e1;
t568 = -t609 / 0.2e1;
t567 = t609 / 0.2e1;
t566 = -t608 / 0.2e1;
t565 = t608 / 0.2e1;
t563 = t606 / 0.2e1;
t558 = t412 - t711;
t44 = -t317 * t625 + t444 - t828;
t556 = t44 * t625;
t211 = t237 * t655;
t554 = t416 * t233 - t211;
t553 = -t232 + t661;
t540 = qJD(1) * t311 - t609 * t752;
t370 = rSges(2,1) * t429 - rSges(2,2) * t426;
t368 = rSges(2,1) * t426 + rSges(2,2) * t429;
t369 = -rSges(4,2) * t425 + t703;
t538 = rSges(5,1) * t133 - rSges(5,2) * t132;
t124 = t235 * t428 + t237 * t425;
t471 = qJD(3) * t359;
t161 = -t416 * t471 + (-t415 * t511 + t671) * qJD(1);
t472 = qJD(3) * t361;
t163 = -t416 * t472 + (-t362 * t415 + t678) * qJD(1);
t436 = -qJD(3) * t124 - t161 * t425 + t163 * t428 + t615;
t123 = t234 * t428 + t236 * t425;
t162 = qJD(1) * t235 - t415 * t471;
t164 = qJD(1) * t237 - t415 * t472;
t437 = qJD(1) * t232 - qJD(3) * t123 - t162 * t425 + t164 * t428;
t531 = -(t415 * t734 + t437 * t416) * t416 + (t415 * t735 + t436 * t416) * t415;
t530 = -(t437 * t415 - t416 * t734) * t416 + (t436 * t415 - t416 * t735) * t415;
t94 = -t235 * t657 - t554;
t517 = t415 * t94 - t416 * t93;
t95 = -t234 * t653 - t638;
t96 = -t235 * t653 + t637;
t516 = t415 * t96 - t416 * t95;
t506 = -t116 * t415 - t664;
t501 = -t156 * t416 - t158 * t415;
t167 = rSges(4,1) * t467 - rSges(4,2) * t578 + t619;
t303 = t367 * t415;
t168 = -qJD(3) * t303 + (t369 * t416 + t408) * qJD(1);
t500 = t167 * t416 + t168 * t415;
t497 = t239 * t415 + t240 * t416;
t494 = t359 * t428 + t361 * t425;
t492 = -pkin(2) - t752;
t308 = rSges(5,1) * t647 - rSges(5,2) * t649 + t418;
t324 = qJD(1) * t338;
t491 = -qJD(1) * t310 - t324 - t582;
t476 = -qJD(1) * t309 - t608 * t752;
t475 = -pkin(3) * t579 + t356 + t393;
t474 = t425 * t713 + t584;
t473 = t425 * t712 + t584;
t464 = t37 * t704 + t5 * t645;
t458 = -t44 * t645 + t45 * t643;
t457 = -t37 * t643 + t556;
t456 = -t425 * t631 + t428 * t633;
t445 = (-t425 * t617 + t428 * t618) * qJD(1);
t55 = -t156 * t316 + t158 * t317 + t573;
t65 = t158 * t403 - t306 * t316 + t463;
t439 = t55 * t501 + (t415 * t64 - t416 * t65) * t306;
t342 = t511 * qJD(3);
t343 = t362 * qJD(3);
t435 = qJD(1) * t357 - qJD(3) * t494 - t342 * t425 + t343 * t428;
t433 = t457 * t415 - t416 * t766;
t344 = t369 * qJD(3);
t322 = t382 * t613;
t229 = -t416 * t595 + t620;
t227 = -t415 * t595 + t621;
t195 = -rSges(5,1) * t283 - rSges(5,2) * t284;
t190 = -rSges(5,1) * t281 - rSges(5,2) * t282;
t166 = -t416 * t493 + t659;
t134 = t166 * qJD(1);
t114 = qJD(3) * t497 + qJD(2);
t85 = rSges(5,3) * t468 + t538;
t83 = -rSges(5,3) * t583 + t590;
t67 = t435 * t415 - t416 * t733;
t66 = t415 * t733 + t435 * t416;
t63 = qJD(1) * t167 + qJDD(1) * t240 - t319 * t367 - t344 * t609 + t479;
t62 = -t596 - t344 * t608 + t320 * t367 + (-t168 - t318) * qJD(1) + t544 * qJDD(1);
t61 = -qJD(3) * t498 + t161 * t428 + t163 * t425;
t60 = -t499 * qJD(3) + t162 * t428 + t164 * t425;
t54 = qJD(3) * t500 + t239 * t319 - t240 * t320 + qJDD(2);
t41 = qJD(3) * t516 + t134;
t40 = qJD(3) * t517 + t600;
t26 = t158 * t340 - t173 * t306 - t209 * t316 + t403 * t83 + t438;
t25 = t156 * t340 + t174 * t306 - t209 * t317 - t403 * t85 + t434;
t20 = -t156 * t173 - t158 * t174 + t316 * t85 + t317 * t83 + t469;
t1 = [(t61 + t66) * t567 + (t40 - t600 + ((t416 * t553 - t637 + t96) * t416 + (t415 * t553 + t554 + t95) * t415) * qJD(3)) * t568 + (t116 * (t393 + t619) + (t367 * t665 - t663) * qJD(3) + ((-t115 * t429 - t116 * t426) * pkin(1) + (-pkin(2) - t369) * t664 + (t115 * (-rSges(4,3) - pkin(6)) + t116 * t572) * t415) * qJD(1) - (-t580 - t115 - t324 + (-t239 - t711) * qJD(1)) * t116 + (t63 - g(2)) * t198 + (t62 - g(1)) * (t572 * t415 + t558 + t616)) * m(4) + (t60 + t67 + t41) * t566 + (t425 * t833 + t783 + t786 + t818) * t316 * t719 - t700 / 0.2e1 + t699 / 0.2e1 + t687 / 0.2e1 + t688 / 0.2e1 + (t165 + t123) * t721 + t824 * t725 + (t823 + t789) * t724 + t789 * t723 - m(2) * (-g(1) * t368 + g(2) * t370) + (m(3) * (t314 ^ 2 + t337 * t315) + t494 + m(2) * (t368 ^ 2 + t370 ^ 2) + Icges(2,3) + Icges(3,3)) * qJDD(1) + (t166 + t124) * t722 + t761 * t728 + t762 * t727 + (t134 + ((t94 - t211 + (t233 + t662) * t416 + t638) * t416 + t637 * t415) * qJD(3)) * t565 + t685 / 0.2e1 + t686 / 0.2e1 + t739 + (-qJD(3) * t493 + t342 * t428 + t343 * t425) * qJD(1) + (t555 * t317 + t826 * (t773 + t643) + t827 * (t558 + t809) + (t6 * t415 - t710) * t474 + (-t491 + t475 + t759 + (t492 - t419) * t613 + t828) * t45 + (t713 * t816 - t321 + t355 + t760 + (t474 * t416 - t422 + t773 - t825) * qJD(1) + t808) * t44) * m(6) + (-(-qJD(1) * t711 + t491 - t64 + t829) * t65 - t473 * t710 + t64 * (t355 - t538) + t65 * (t475 + t590) + (t606 * t64 * t712 + t25 * t473) * t415 + ((-t426 * t65 - t429 * t64) * pkin(1) + t473 * t690 + (-t64 * pkin(6) + t65 * (t492 - t418)) * t415) * qJD(1) + (-g(2) + t26) * (t773 + t158) + (-g(1) + t25) * (-t537 + t558)) * m(5) + t697 / 0.2e1 - t698 / 0.2e1 + ((-t336 * t430 - g(2) + t545) * t315 + (-t596 + (-0.2e1 * t337 - t422 + t315) * t430 - g(1)) * t314) * m(3); m(3) * qJDD(2) + m(4) * t54 + m(5) * t20 + m(6) * t5 + (-m(3) - m(4) - m(5) - m(6)) * g(3); -(t415 * t790 + t416 * t789) * t602 / 0.2e1 - (qJD(1) * t67 + qJD(3) * t530 + qJDD(1) * t165 + t319 * t94 + t320 * t93 + t798) * t416 / 0.2e1 + (qJD(1) * t66 + qJD(3) * t531 + qJDD(1) * t166 + t319 * t96 + t320 * t95 + t799) * t415 / 0.2e1 + (g(1) * t304 + g(2) * t303 - g(3) * t369 - (t115 * t303 - t663) * qJD(1) - (t114 * (-t303 * t415 - t304 * t416) + t506 * t369) * qJD(3) + t54 * t497 + t114 * ((t239 * t416 - t240 * t415) * qJD(1) + t500) + t506 * t344 + (-t63 * t415 - t62 * t416 + (-t116 * t416 + t665) * qJD(1)) * t367) * m(4) + ((-t608 * t659 - t614) * t416 + (t445 + (t456 * t415 + (t658 - t731) * t416) * qJD(3)) * t415) * t565 + ((-t609 * t658 + t614) * t415 + (t445 + (-t731 * t416 + (t659 + t456) * t415) * qJD(3)) * t416) * t568 + (t5 * t628 + (qJD(1) * t557 + t6 * t586 + t732) * t416 + (qJD(1) * t556 + t7 * t586 + t464) * t415 - g(1) * (t380 + t386) - g(2) * (t376 + t384) - g(3) * (t752 - t623) - (-t424 * t787 - t427 * t797 - pkin(3)) * t736 - (t425 * t458 + t428 * t433) * qJD(4) + (-t623 * t316 - t635 * t403 + t415 * t772 + t586 * t612 - t540) * t45 + ((-t312 - t643) * t613 - t428 * t601 - t635 * t317 - t636 * t316 + t765) * t37 + (-t623 * t317 + t636 * t403 + t416 * t772 + t322 - t476) * t44) * m(6) + t767 * t727 + t768 * t728 + t769 * t720 + ((qJD(4) * t746 - t810) * t428 + ((t424 * t775 + t427 * t774 + t813) * t403 + (-t424 * t780 + t427 * t778 - t840) * t317 + (t424 * t779 - t427 * t777 + t814) * t316 + t754 * qJD(4)) * t425) * t719 + (qJD(1) * t745 + t415 * t795 - t416 * t796) * t725 + ((t762 * t425 + t651 * t821) * qJD(4) + ((qJD(4) * t822 + t770) * t428 + t771) * t415 + (t281 * t775 + t282 * t774) * t403 + (-t281 * t780 + t282 * t778) * t317 + (t281 * t779 - t282 * t777) * t316) * t723 + ((t761 * t425 + t655 * t820) * qJD(4) + ((qJD(4) * t819 + t770) * t428 + t771) * t416 + (t283 * t775 + t284 * t774) * t403 + (-t283 * t780 + t284 * t778) * t317 + (t283 * t779 - t284 * t777) * t316) * t726 + (-g(1) * (t386 + t620) - g(2) * (t384 + t621) - g(3) * (t308 + t752) - (-pkin(3) - t702) * t736 - t64 * (-t227 * t403 - t308 * t317 + t476) - t65 * (t229 * t403 - t308 * t316 + t540) - ((t156 * t64 + t158 * t65) * t425 + t439 * t428) * qJD(4) + t64 * t322 + t20 * t628 + (t20 * t158 + t64 * t639 + (qJD(1) * t65 + t25) * t624) * t416 + (qJD(1) * t306 * t64 - t156 * t20 + t26 * t624 + t65 * t639) * t415 + (-t227 * t316 - t229 * t317 + (-qJD(1) * t156 + t83) * t416 + (t85 + (-t158 - t312) * qJD(1)) * t415 + t765) * t55) * m(5) - t788 * t604 / 0.2e1 + (t41 + t789) * t569 + (t40 + t790) * t613 / 0.2e1 + (qJD(1) * t746 + t415 * t791 - t416 * t792) * t718 + (qJD(1) * t744 + t415 * t793 - t416 * t794) * t724 + qJD(1) * (t415 * t61 - t416 * t60 + (t123 * t415 + t124 * t416) * qJD(1)) / 0.2e1 + t517 * t721 + t516 * t722 + ((t93 * t415 + t94 * t416) * qJD(1) + t530) * t566 + qJDD(1) * (-t123 * t416 + t124 * t415) / 0.2e1 + ((t95 * t415 + t96 * t416) * qJD(1) + t531) * t567 - qJD(1) * ((t425 * t618 + t428 * t617) * qJD(1) + ((t415 * t631 - t416 * t632) * t428 + (t415 * t633 + t416 * t634) * t425) * qJD(3)) / 0.2e1; (t425 * t745 - t428 * t761) * t728 + (t744 * t425 - t428 * t762) * t727 + (t283 * t750 + t284 * t749 - t416 * t748) * t726 + ((qJD(3) * t745 - t824) * t428 + (-qJD(1) * t768 + t761 * qJD(3) + t415 * t796 + t416 * t795) * t425) * t725 + ((qJD(3) * t744 - t823) * t428 + (-qJD(1) * t767 + t762 * qJD(3) + t415 * t794 + t416 * t793) * t425) * t724 + (t281 * t750 + t282 * t749 - t415 * t748) * t723 + (t425 * t746 - t428 * t754) * t720 + (t804 * t428 + (t424 * t750 + t427 * t749) * t425) * t719 + ((qJD(3) * t746 - t807) * t428 + (-qJD(1) * t769 + t754 * qJD(3) + t415 * t792 + t416 * t791) * t425) * t718 - (t687 + t688 + t699 - t700 + t685 + t686 + t697 - t698 + t739) * t428 / 0.2e1 + t798 * t657 / 0.2e1 + t799 * t653 / 0.2e1 + t788 * t607 / 0.2e1 + ((qJD(3) * t433 + t44 * t704 - t45 * t705 + t6 * t645 - t643 * t7) * t428 + (t458 * qJD(3) + (qJD(1) * t457 - t45 * t640 - t625 * t7 + t464) * t416 + (qJD(1) * t766 + t44 * t640 + t6 * t625 - t732) * t415) * t425 - g(1) * t641 - g(2) * t642 + g(3) * t622 - (t282 * t45 + t284 * t44 + t37 * t648) * qJD(5) - (-t44 * t642 + t45 * t641) * t403 - (t37 * t641 + t44 * t622) * t317 - (t37 * t642 + t45 * t622) * t316) * m(6) + (-g(1) * t195 - g(2) * t190 - g(3) * t333 + (qJD(3) * t439 - t156 * t25 - t26 * t158 + t64 * t85 - t65 * t83) * t428 + (t64 * (qJD(3) * t156 + t209 * t415) + t65 * (qJD(3) * t158 - t209 * t416) + t20 * t501 + t55 * (t156 * t613 - t158 * t612 - t415 * t83 + t416 * t85) + (t25 * t415 - t26 * t416 + (t415 * t65 + t690) * qJD(1)) * t306) * t425 - t64 * (-t190 * t403 - t317 * t333) - t65 * (t195 * t403 - t316 * t333) - t55 * (t190 * t316 + t195 * t317)) * m(5) + t789 * (t416 * t563 - t583 / 0.2e1) + t790 * (t415 * t563 + t425 * t569); (-t130 * t44 + t132 * t45 + t465 * t37 + (t316 * t45 + t317 * t44 - g(3) + t5) * t650 + (-t37 * t317 - t45 * t403 + t827) * t283 + (-t316 * t37 + t403 * t44 + t826) * t281) * m(6);];
tau = t1;
