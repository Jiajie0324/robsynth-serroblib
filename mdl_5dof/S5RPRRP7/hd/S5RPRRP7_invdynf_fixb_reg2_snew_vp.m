% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPRRP7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:46
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPRRP7_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP7_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP7_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP7_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP7_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP7_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:46:13
% EndTime: 2019-12-31 18:46:16
% DurationCPUTime: 3.03s
% Computational Cost: add. (5826->203), mult. (11332->240), div. (0->0), fcn. (7226->8), ass. (0->139)
t1583 = sin(qJ(3));
t1611 = qJD(1) * t1583;
t1571 = qJD(3) * t1611;
t1586 = cos(qJ(3));
t1601 = t1586 * qJDD(1);
t1597 = t1571 - t1601;
t1596 = -qJDD(4) - t1597;
t1582 = sin(qJ(4));
t1585 = cos(qJ(4));
t1544 = -t1585 * qJD(3) + t1582 * t1611;
t1546 = t1582 * qJD(3) + t1585 * t1611;
t1609 = t1546 * t1544;
t1510 = t1596 - t1609;
t1543 = t1546 ^ 2;
t1604 = t1586 * qJD(1);
t1567 = qJD(4) - t1604;
t1613 = t1567 ^ 2;
t1618 = -t1543 - t1613;
t1487 = t1585 * t1510 - t1582 * t1618;
t1600 = qJD(3) * t1604;
t1602 = t1583 * qJDD(1);
t1550 = t1600 + t1602;
t1591 = -t1544 * qJD(4) + t1582 * qJDD(3) + t1585 * t1550;
t1610 = t1544 * t1567;
t1590 = t1591 - t1610;
t1471 = t1586 * t1487 + t1583 * t1590;
t1485 = t1582 * t1510 + t1585 * t1618;
t1578 = sin(pkin(8));
t1579 = cos(pkin(8));
t1452 = t1578 * t1471 - t1579 * t1485;
t1454 = t1579 * t1471 + t1578 * t1485;
t1584 = sin(qJ(1));
t1587 = cos(qJ(1));
t1640 = t1587 * t1452 + t1584 * t1454;
t1639 = t1584 * t1452 - t1587 * t1454;
t1500 = t1591 + t1610;
t1598 = -t1585 * qJDD(3) + t1582 * t1550;
t1592 = (-qJD(4) + t1567) * t1546 - t1598;
t1616 = -t1585 * t1500 + t1582 * t1592;
t1526 = t1544 ^ 2;
t1509 = t1543 + t1526;
t1615 = t1582 * t1500 + t1585 * t1592;
t1628 = -t1583 * t1509 + t1586 * t1615;
t1633 = t1578 * t1616 + t1579 * t1628;
t1634 = t1578 * t1628 - t1579 * t1616;
t1638 = -t1584 * t1634 + t1587 * t1633;
t1637 = t1584 * t1633 + t1587 * t1634;
t1469 = t1583 * t1487 - t1586 * t1590;
t1511 = t1596 + t1609;
t1617 = -t1613 - t1526;
t1622 = -t1585 * t1511 + t1582 * t1617;
t1632 = t1578 * t1622;
t1631 = t1579 * t1622;
t1621 = t1582 * t1511 + t1585 * t1617;
t1630 = t1583 * t1621;
t1629 = t1586 * t1621;
t1627 = t1586 * t1509 + t1583 * t1615;
t1614 = qJD(3) ^ 2;
t1612 = -g(3) + qJDD(2);
t1561 = -t1587 * g(1) - t1584 * g(2);
t1588 = qJD(1) ^ 2;
t1547 = -t1588 * pkin(1) + t1561;
t1560 = t1584 * g(1) - t1587 * g(2);
t1593 = qJDD(1) * pkin(1) + t1560;
t1520 = t1579 * t1547 + t1578 * t1593;
t1514 = -t1588 * pkin(2) + qJDD(1) * pkin(6) + t1520;
t1502 = t1586 * t1514 + t1583 * t1612;
t1548 = (-pkin(3) * t1586 - pkin(7) * t1583) * qJD(1);
t1493 = -t1614 * pkin(3) + qJDD(3) * pkin(7) + t1548 * t1604 + t1502;
t1519 = -t1578 * t1547 + t1579 * t1593;
t1513 = -qJDD(1) * pkin(2) - t1588 * pkin(6) - t1519;
t1589 = (-t1550 - t1600) * pkin(7) + (t1597 + t1571) * pkin(3) + t1513;
t1462 = t1585 * t1493 + t1582 * t1589;
t1574 = t1583 ^ 2;
t1575 = t1586 ^ 2;
t1603 = t1574 + t1575;
t1461 = -t1582 * t1493 + t1585 * t1589;
t1552 = -t1578 * qJDD(1) - t1579 * t1588;
t1553 = t1579 * qJDD(1) - t1578 * t1588;
t1599 = t1587 * t1552 - t1584 * t1553;
t1595 = t1584 * t1552 + t1587 * t1553;
t1594 = -t1546 * qJD(4) - t1598;
t1570 = t1586 * t1612;
t1492 = -t1570 - qJDD(3) * pkin(3) - t1614 * pkin(7) + (qJD(1) * t1548 + t1514) * t1583;
t1566 = t1586 * t1588 * t1583;
t1564 = -t1575 * t1588 - t1614;
t1563 = -t1574 * t1588 - t1614;
t1559 = -qJDD(3) + t1566;
t1558 = qJDD(3) + t1566;
t1557 = t1603 * t1588;
t1556 = -t1584 * qJDD(1) - t1587 * t1588;
t1555 = t1587 * qJDD(1) - t1584 * t1588;
t1554 = t1603 * qJDD(1);
t1551 = -0.2e1 * t1571 + t1601;
t1549 = 0.2e1 * t1600 + t1602;
t1530 = t1586 * t1559 - t1583 * t1563;
t1529 = -t1583 * t1558 + t1586 * t1564;
t1528 = t1583 * t1559 + t1586 * t1563;
t1527 = t1586 * t1558 + t1583 * t1564;
t1523 = t1579 * t1554 - t1578 * t1557;
t1522 = t1578 * t1554 + t1579 * t1557;
t1521 = t1544 * pkin(4) - t1546 * qJ(5);
t1506 = t1579 * t1530 + t1578 * t1549;
t1505 = t1579 * t1529 - t1578 * t1551;
t1504 = t1578 * t1530 - t1579 * t1549;
t1503 = t1578 * t1529 + t1579 * t1551;
t1501 = -t1583 * t1514 + t1570;
t1495 = (qJD(4) + t1567) * t1546 + t1598;
t1494 = t1567 * t1546 - t1594;
t1491 = -t1578 * t1519 + t1579 * t1520;
t1490 = t1579 * t1519 + t1578 * t1520;
t1478 = -t1583 * t1501 + t1586 * t1502;
t1477 = t1586 * t1501 + t1583 * t1502;
t1472 = t1583 * t1494 + t1629;
t1470 = -t1586 * t1494 + t1630;
t1468 = t1583 * t1495 + t1629;
t1466 = -t1586 * t1495 + t1630;
t1464 = t1579 * t1478 + t1578 * t1513;
t1463 = t1578 * t1478 - t1579 * t1513;
t1456 = -t1594 * pkin(4) + (pkin(4) * t1567 - (2 * qJD(5))) * t1546 + t1492 - t1590 * qJ(5);
t1455 = t1579 * t1472 + t1632;
t1453 = t1578 * t1472 - t1631;
t1451 = t1596 * pkin(4) - qJ(5) * t1613 + t1546 * t1521 + qJDD(5) - t1461;
t1450 = t1579 * t1468 + t1632;
t1448 = t1578 * t1468 - t1631;
t1446 = -pkin(4) * t1613 - t1596 * qJ(5) + 0.2e1 * qJD(5) * t1567 - t1544 * t1521 + t1462;
t1441 = -t1582 * t1461 + t1585 * t1462;
t1440 = t1585 * t1461 + t1582 * t1462;
t1439 = t1586 * t1441 + t1583 * t1492;
t1438 = t1583 * t1441 - t1586 * t1492;
t1437 = t1585 * t1446 + t1582 * t1451;
t1436 = t1582 * t1446 - t1585 * t1451;
t1435 = t1586 * t1437 + t1583 * t1456;
t1434 = t1583 * t1437 - t1586 * t1456;
t1433 = t1579 * t1439 + t1578 * t1440;
t1432 = t1578 * t1439 - t1579 * t1440;
t1431 = t1579 * t1435 + t1578 * t1436;
t1430 = t1578 * t1435 - t1579 * t1436;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1556, -t1555, 0, -t1584 * t1560 + t1587 * t1561, 0, 0, 0, 0, 0, 0, t1599, -t1595, 0, -t1584 * t1490 + t1587 * t1491, 0, 0, 0, 0, 0, 0, -t1584 * t1503 + t1587 * t1505, -t1584 * t1504 + t1587 * t1506, -t1584 * t1522 + t1587 * t1523, -t1584 * t1463 + t1587 * t1464, 0, 0, 0, 0, 0, 0, -t1584 * t1448 + t1587 * t1450, -t1639, t1638, -t1584 * t1432 + t1587 * t1433, 0, 0, 0, 0, 0, 0, -t1584 * t1453 + t1587 * t1455, t1638, t1639, -t1584 * t1430 + t1587 * t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1555, t1556, 0, t1587 * t1560 + t1584 * t1561, 0, 0, 0, 0, 0, 0, t1595, t1599, 0, t1587 * t1490 + t1584 * t1491, 0, 0, 0, 0, 0, 0, t1587 * t1503 + t1584 * t1505, t1587 * t1504 + t1584 * t1506, t1587 * t1522 + t1584 * t1523, t1587 * t1463 + t1584 * t1464, 0, 0, 0, 0, 0, 0, t1587 * t1448 + t1584 * t1450, t1640, t1637, t1587 * t1432 + t1584 * t1433, 0, 0, 0, 0, 0, 0, t1587 * t1453 + t1584 * t1455, t1637, -t1640, t1587 * t1430 + t1584 * t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1612, 0, 0, 0, 0, 0, 0, t1527, t1528, 0, t1477, 0, 0, 0, 0, 0, 0, t1466, t1469, t1627, t1438, 0, 0, 0, 0, 0, 0, t1470, t1627, -t1469, t1434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1588, -qJDD(1), 0, t1561, 0, 0, 0, 0, 0, 0, t1552, -t1553, 0, t1491, 0, 0, 0, 0, 0, 0, t1505, t1506, t1523, t1464, 0, 0, 0, 0, 0, 0, t1450, t1454, t1633, t1433, 0, 0, 0, 0, 0, 0, t1455, t1633, -t1454, t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1588, 0, t1560, 0, 0, 0, 0, 0, 0, t1553, t1552, 0, t1490, 0, 0, 0, 0, 0, 0, t1503, t1504, t1522, t1463, 0, 0, 0, 0, 0, 0, t1448, t1452, t1634, t1432, 0, 0, 0, 0, 0, 0, t1453, t1634, -t1452, t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1612, 0, 0, 0, 0, 0, 0, t1527, t1528, 0, t1477, 0, 0, 0, 0, 0, 0, t1466, t1469, t1627, t1438, 0, 0, 0, 0, 0, 0, t1470, t1627, -t1469, t1434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1588, -qJDD(1), 0, t1520, 0, 0, 0, 0, 0, 0, t1529, t1530, t1554, t1478, 0, 0, 0, 0, 0, 0, t1468, t1471, t1628, t1439, 0, 0, 0, 0, 0, 0, t1472, t1628, -t1471, t1435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1588, 0, t1519, 0, 0, 0, 0, 0, 0, t1551, -t1549, t1557, -t1513, 0, 0, 0, 0, 0, 0, -t1622, -t1485, -t1616, -t1440, 0, 0, 0, 0, 0, 0, -t1622, -t1616, t1485, -t1436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1612, 0, 0, 0, 0, 0, 0, t1527, t1528, 0, t1477, 0, 0, 0, 0, 0, 0, t1466, t1469, t1627, t1438, 0, 0, 0, 0, 0, 0, t1470, t1627, -t1469, t1434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1564, t1559, t1601, t1502, 0, 0, 0, 0, 0, 0, t1621, t1487, t1615, t1441, 0, 0, 0, 0, 0, 0, t1621, t1615, -t1487, t1437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1558, t1563, -t1602, t1501, 0, 0, 0, 0, 0, 0, -t1495, -t1590, t1509, -t1492, 0, 0, 0, 0, 0, 0, -t1494, t1509, t1590, -t1456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1551, t1549, -t1557, t1513, 0, 0, 0, 0, 0, 0, t1622, t1485, t1616, t1440, 0, 0, 0, 0, 0, 0, t1622, t1616, -t1485, t1436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1617, t1510, t1592, t1462, 0, 0, 0, 0, 0, 0, t1617, t1592, -t1510, t1446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1511, t1618, -t1500, t1461, 0, 0, 0, 0, 0, 0, -t1511, -t1500, -t1618, -t1451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1495, t1590, -t1509, t1492, 0, 0, 0, 0, 0, 0, t1494, -t1509, -t1590, t1456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1617, t1592, -t1510, t1446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1494, -t1509, -t1590, t1456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1511, t1500, t1618, t1451;];
f_new_reg = t1;
