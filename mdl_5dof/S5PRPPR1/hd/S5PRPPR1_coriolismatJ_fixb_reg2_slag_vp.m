% Calculate inertial parameters regressor of coriolis matrix for
% S5PRPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d5,theta1,theta3,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:22
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRPPR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPPR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPPR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRPPR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:22:16
% EndTime: 2019-12-05 15:22:19
% DurationCPUTime: 1.26s
% Computational Cost: add. (1703->105), mult. (4011->174), div. (0->0), fcn. (4211->6), ass. (0->108)
t111 = sin(pkin(9));
t170 = sin(qJ(5));
t128 = t170 * t111;
t113 = cos(pkin(9));
t171 = cos(qJ(5));
t129 = t171 * t113;
t91 = t128 - t129;
t179 = -t91 / 0.2e1;
t127 = t170 * t113;
t130 = t171 * t111;
t92 = t130 + t127;
t178 = -t92 / 0.2e1;
t174 = t113 ^ 2;
t175 = t111 ^ 2;
t177 = t174 + t175;
t112 = sin(pkin(8));
t77 = t92 * t112;
t80 = t91 * t112;
t167 = t77 * t178 + t80 * t179;
t76 = t77 ^ 2;
t176 = t80 ^ 2;
t172 = t112 / 0.2e1;
t114 = cos(pkin(8));
t138 = qJD(2) * t114;
t69 = t80 * t138;
t75 = t80 * qJD(5);
t166 = -t69 + t75;
t131 = -t114 * pkin(3) - pkin(2);
t164 = t111 * qJ(3);
t115 = (-pkin(4) - t164) * t114 + ((-pkin(6) - qJ(4)) * t112 + t131) * t113;
t119 = -t112 * qJ(4) + t131;
t71 = t113 * t114 * qJ(3) + t111 * t119;
t63 = -t111 * t112 * pkin(6) + t71;
t29 = -t171 * t115 + t170 * t63;
t30 = t170 * t115 + t171 * t63;
t8 = -t80 * t29 - t30 * t77;
t165 = t8 * qJD(2);
t163 = t112 * t114;
t93 = (pkin(4) * t111 + qJ(3)) * t112;
t15 = -t29 * t114 - t93 * t77;
t158 = t15 * qJD(2);
t16 = -t30 * t114 + t93 * t80;
t157 = t16 * qJD(2);
t79 = t92 * t114;
t82 = t91 * t114;
t25 = t80 * t82 / 0.2e1 + t77 * t79 / 0.2e1 - t163 / 0.2e1;
t156 = t25 * qJD(2);
t28 = t82 * t77 - t79 * t80;
t155 = t28 * qJD(2);
t31 = t172 - t167;
t154 = t31 * qJD(2);
t70 = t113 * t119 - t114 * t164;
t34 = (t111 * t71 + t113 * t70) * t112;
t153 = t34 * qJD(2);
t35 = t76 - t176;
t152 = t35 * qJD(2);
t39 = -t112 * t77 - t79 * t114;
t151 = t39 * qJD(2);
t40 = -t112 * t80 - t82 * t114;
t150 = t40 * qJD(2);
t42 = t76 + t176;
t149 = t42 * qJD(2);
t116 = -t127 / 0.2e1 - t130 / 0.2e1;
t50 = (t178 + t116) * t114;
t148 = t50 * qJD(2);
t117 = -t129 / 0.2e1 + t128 / 0.2e1;
t51 = (t91 / 0.2e1 + t117) * t114;
t147 = t51 * qJD(2);
t122 = t175 / 0.2e1 + t174 / 0.2e1;
t65 = (-0.1e1 / 0.2e1 + t122) * t163;
t146 = t65 * qJD(2);
t145 = t77 * qJD(2);
t144 = t77 * qJD(5);
t143 = t80 * qJD(2);
t83 = (0.1e1 / 0.2e1 + t122) * t112;
t142 = t83 * qJD(2);
t109 = t112 ^ 2;
t88 = t177 * t109;
t141 = t88 * qJD(2);
t102 = t114 ^ 2 + t109;
t89 = t102 * t111;
t140 = t89 * qJD(2);
t90 = t102 * t113;
t139 = t90 * qJD(2);
t137 = qJD(4) * t114;
t136 = qJD(5) * t114;
t100 = t102 * qJ(3);
t135 = t100 * qJD(2);
t134 = t102 * qJD(2);
t133 = t77 * t143;
t132 = t77 * t75;
t126 = t112 * t138;
t125 = t112 * t137;
t124 = t111 * t126;
t123 = t113 * t126;
t7 = t93 * t112 + t29 * t79 - t30 * t82;
t121 = t25 * qJD(1) + t7 * qJD(2);
t33 = t109 * qJ(3) + (-t111 * t70 + t113 * t71) * t114;
t120 = -t65 * qJD(1) - t33 * qJD(2);
t84 = t172 - t177 * t112 / 0.2e1;
t68 = t77 * t138;
t64 = t65 * qJD(3);
t53 = (t92 / 0.2e1 + t116) * t114;
t52 = (t179 + t117) * t114;
t41 = t68 - t144;
t32 = t172 + t167;
t1 = t25 * qJD(3);
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, t144, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102 * qJD(3), t100 * qJD(3), 0, 0, 0, 0, 0, 0, t89 * qJD(3) + t113 * t125, t90 * qJD(3) - t111 * t125, t88 * qJD(4), t33 * qJD(3) - t34 * qJD(4), t132, t35 * qJD(5), t77 * t136, -t132, -t80 * t136, 0, -t39 * qJD(3) - t16 * qJD(5) - t80 * t137, t40 * qJD(3) + t15 * qJD(5) - t77 * t137, t28 * qJD(3) + t42 * qJD(4), t7 * qJD(3) + t8 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134, t135, 0, 0, 0, 0, 0, 0, t140, t139, 0, t84 * qJD(4) - t120, 0, 0, 0, 0, 0, 0, t53 * qJD(5) - t151, t52 * qJD(5) + t150, t155, (t79 * t91 - t82 * t92) * qJD(3) + t32 * qJD(4) + t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, -t124, t141, t84 * qJD(3) - t153, 0, 0, 0, 0, 0, 0, -t69, -t68, t149, t32 * qJD(3) + t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, t152, t41, -t133, t166, 0, t53 * qJD(3) - t30 * qJD(5) - t157, t52 * qJD(3) + t29 * qJD(5) + t158, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t146, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t134, -t135, 0, 0, 0, 0, 0, 0, -t140, -t139, 0, -t83 * qJD(4) + t120, 0, 0, 0, 0, 0, 0, -t50 * qJD(5) + t151, -t51 * qJD(5) - t150, -t155, -t31 * qJD(4) - t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92 * qJD(5) - t148, t91 * qJD(5) - t147, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, t124, -t141, t83 * qJD(3) + t153, 0, 0, 0, 0, 0, 0, -t166, t41, -t149, t31 * qJD(3) - t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t143, -t145, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t133, -t152, -t68, t133, t69, 0, t50 * qJD(3) + t80 * qJD(4) + t157, t51 * qJD(3) + t77 * qJD(4) - t158, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, t147, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, t145, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t2;
