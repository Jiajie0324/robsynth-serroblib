% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S5PRPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d5,theta1,theta3,theta4]';
% 
% Output:
% tauB_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:22
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S5PRPPR1_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPPR1_invdynB_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPPR1_invdynB_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRPPR1_invdynB_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRPPR1_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRPPR1_invdynB_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:22:17
% EndTime: 2019-12-05 15:22:28
% DurationCPUTime: 10.46s
% Computational Cost: add. (28049->544), mult. (70594->849), div. (0->0), fcn. (48913->10), ass. (0->393)
t541 = cos(pkin(7));
t543 = sin(qJ(2));
t545 = cos(qJ(2));
t538 = sin(pkin(7));
t511 = t538 * g(1) - t541 * g(2);
t512 = t541 * g(1) + t538 * g(2);
t565 = t545 * t511 + t543 * t512;
t593 = -t543 * t511 + t545 * t512;
t567 = -t543 * t565 - t545 * t593;
t399 = t543 * t593 - t545 * t565;
t610 = t538 * t399;
t334 = t541 * t567 + t610;
t601 = t541 * t399;
t640 = -t538 * t567 + t601;
t546 = qJD(2) ^ 2;
t584 = t543 * qJDD(2);
t507 = t545 * t546 + t584;
t583 = t545 * qJDD(2);
t508 = -t543 * t546 + t583;
t448 = -t538 * t507 + t541 * t508;
t534 = g(3) - qJDD(1);
t480 = pkin(5) * t507 - t545 * t534;
t559 = -pkin(5) * t508 - t543 * t534;
t639 = -qJ(1) * t448 + t538 * t480 + t541 * t559;
t535 = qJDD(2) * pkin(2);
t436 = -t546 * qJ(3) + qJDD(3) - t535 - t565;
t537 = sin(pkin(8));
t540 = cos(pkin(8));
t622 = pkin(3) * t540;
t560 = -qJ(4) * t537 - t622;
t592 = qJD(2) * t537;
t638 = -0.2e1 * qJD(4) * t592 + t560 * qJDD(2) + t436;
t536 = sin(pkin(9));
t539 = cos(pkin(9));
t542 = sin(qJ(5));
t544 = cos(qJ(5));
t555 = t536 * t544 + t539 * t542;
t552 = t555 * t537;
t470 = qJD(2) * t552;
t587 = qJDD(2) * t537;
t571 = t536 * t587;
t612 = t537 * t539;
t576 = t544 * t612;
t420 = -t470 * qJD(5) + qJDD(2) * t576 - t542 * t571;
t591 = t540 * qJD(2);
t517 = -qJD(5) + t591;
t621 = t470 * t517;
t637 = t420 + t621;
t437 = -t546 * pkin(2) + qJDD(2) * qJ(3) - t593;
t624 = 2 * qJD(3);
t636 = qJD(2) * t624 + t437;
t626 = t541 * t507 + t538 * t508;
t634 = qJ(1) * t626 + t541 * t480 - t538 * t559;
t530 = t537 ^ 2;
t532 = t540 ^ 2;
t602 = t540 * t546;
t493 = (t530 + t532) * t602;
t569 = t540 * t583;
t457 = -t543 * t493 + t569;
t570 = t540 * t584;
t459 = t545 * t493 + t570;
t402 = t541 * t457 - t538 * t459;
t633 = t538 * t457 + t541 * t459;
t585 = t540 * qJDD(2);
t516 = -qJDD(5) + t585;
t472 = -t542 * t536 * t592 + qJD(2) * t576;
t620 = t472 * t470;
t551 = -t516 - t620;
t629 = t542 * t551;
t628 = t544 * t551;
t627 = (qJD(5) + t517) * t472;
t466 = t470 ^ 2;
t467 = t472 ^ 2;
t515 = t517 ^ 2;
t623 = pkin(3) * t537;
t619 = t517 * t542;
t618 = t517 * t544;
t617 = t530 * t546;
t413 = -t537 * t534 + t636 * t540;
t498 = t560 * qJD(2);
t380 = t498 * t591 + t413;
t553 = t638 * t539;
t554 = -pkin(4) * t540 - pkin(6) * t612;
t611 = t537 * t540;
t318 = t554 * qJDD(2) + (-t380 + (-pkin(4) * t530 * t539 + pkin(6) * t611) * t546) * t536 + t553;
t332 = t539 * t380 + t638 * t536;
t485 = t554 * qJD(2);
t528 = t536 ^ 2;
t514 = t528 * t617;
t319 = -pkin(4) * t514 - pkin(6) * t571 + t485 * t591 + t332;
t268 = -t544 * t318 + t542 * t319;
t269 = t542 * t318 + t544 * t319;
t234 = -t544 * t268 + t542 * t269;
t616 = t536 * t234;
t522 = t540 * t534;
t582 = qJDD(4) + t522;
t590 = t624 + t498;
t379 = (t590 * qJD(2) + t437) * t537 + t582;
t615 = t536 * t379;
t579 = t536 * t539 * t546;
t501 = t530 * t579;
t481 = -t501 + t585;
t614 = t536 * t481;
t482 = -t501 - t585;
t613 = t536 * t482;
t607 = t538 * t534;
t606 = t539 * t234;
t605 = t539 * t379;
t604 = t539 * t481;
t603 = t539 * t482;
t600 = t541 * t534;
t588 = qJDD(2) * t536;
t355 = -pkin(6) * t514 + (pkin(4) * t588 + t437 + (t485 * t539 + t590) * qJD(2)) * t537 + t582;
t599 = t542 * t355;
t407 = t516 - t620;
t598 = t542 * t407;
t597 = t543 * t436;
t596 = t544 * t355;
t595 = t544 * t407;
t594 = t545 * t436;
t586 = qJDD(2) * t539;
t531 = t539 ^ 2;
t580 = t531 * t617;
t578 = t536 * t602;
t577 = t537 * t620;
t575 = t537 * t602;
t574 = t539 * t602;
t573 = t540 * t620;
t572 = t536 * t586;
t568 = -t436 + t535;
t235 = t542 * t268 + t544 * t269;
t412 = t636 * t537 + t522;
t358 = t537 * t412 + t540 * t413;
t452 = -t538 * t511 - t541 * t512;
t529 = t537 * t530;
t563 = t529 * t579;
t562 = t536 * t574;
t561 = t537 * t569;
t558 = t540 * t501;
t331 = t536 * t380 - t553;
t285 = -t539 * t331 + t536 * t332;
t286 = t536 * t331 + t539 * t332;
t357 = t540 * t412 - t537 * t413;
t468 = t507 * t611;
t469 = -t543 * t575 + t561;
t557 = t541 * t468 + t538 * t469;
t556 = t538 * t468 - t541 * t469;
t451 = t541 * t511 - t538 * t512;
t550 = qJDD(2) * t552;
t549 = t555 * t587;
t525 = t532 * t546;
t524 = t532 * qJDD(2);
t523 = t530 * qJDD(2);
t503 = t525 - t617;
t502 = t525 + t617;
t500 = t524 - t523;
t499 = t524 + t523;
t492 = -t525 - t580;
t491 = t525 - t580;
t490 = (t532 * t537 + t529) * t546;
t489 = -t514 - t525;
t488 = t514 - t525;
t484 = t514 - t580;
t483 = t514 + t580;
t476 = (t578 - t586) * t537;
t475 = (t578 + t586) * t537;
t474 = (t574 - t588) * t537;
t473 = (t574 + t588) * t537;
t465 = (-t528 - t531) * t575;
t464 = (qJDD(2) * t531 + t562) * t537;
t463 = (t531 * t602 - t572) * t537;
t462 = (t528 * t602 + t572) * t537;
t461 = (qJDD(2) * t528 - t562) * t537;
t458 = t545 * t490 + t537 * t584;
t455 = t543 * t490 - t537 * t583;
t446 = t545 * t500 - t543 * t503;
t445 = t545 * t499 - t543 * t502;
t444 = t543 * t500 + t545 * t503;
t443 = t543 * t499 + t545 * t502;
t439 = -t467 + t515;
t438 = t466 - t515;
t434 = -t543 * t465 - t561;
t433 = t545 * t465 - t537 * t570;
t432 = t540 * t464 + t563;
t431 = t540 * t461 - t563;
t430 = -t467 - t515;
t429 = -t536 * t491 + t603;
t428 = -t536 * t492 + t604;
t427 = t539 * t489 - t613;
t426 = t539 * t488 + t614;
t425 = -t539 * t491 - t613;
t424 = t539 * t492 + t614;
t423 = t536 * t489 + t603;
t422 = -t536 * t488 + t604;
t421 = -t467 + t466;
t419 = -t472 * qJD(5) - t550;
t417 = -t539 * t473 - t536 * t476;
t416 = t539 * t474 - t536 * t475;
t415 = -t536 * t473 + t539 * t476;
t414 = -t536 * t474 - t539 * t475;
t406 = -t515 - t466;
t403 = -t538 * t455 + t541 * t458;
t401 = t541 * t455 + t538 * t458;
t396 = (t470 * t544 - t472 * t542) * t517;
t395 = (t470 * t542 + t472 * t544) * t517;
t394 = -t538 * t443 + t541 * t445;
t393 = t540 * t429 - t537 * t476;
t392 = t540 * t428 + t537 * t475;
t391 = t540 * t427 - t537 * t474;
t390 = t540 * t426 - t537 * t473;
t389 = t541 * t443 + t538 * t445;
t388 = t537 * t428 - t540 * t475;
t387 = t537 * t427 + t540 * t474;
t386 = pkin(1) * t534 + pkin(5) * t567;
t385 = -t466 - t467;
t384 = t545 * t432 - t543 * t463;
t383 = t545 * t431 - t543 * t462;
t382 = t543 * t432 + t545 * t463;
t381 = t543 * t431 + t545 * t462;
t377 = t540 * t417 - t537 * t483;
t376 = t540 * t416 - t537 * t484;
t375 = t537 * t417 + t540 * t483;
t374 = -t420 + t621;
t371 = -t550 - t627;
t370 = t549 + t627;
t369 = (qJD(5) - t517) * t472 + t549;
t368 = t544 * t420 + t472 * t619;
t367 = t542 * t420 - t472 * t618;
t366 = -t542 * t419 - t470 * t618;
t365 = t544 * t419 - t470 * t619;
t364 = t544 * t438 + t598;
t363 = -t542 * t439 + t628;
t362 = t542 * t438 - t595;
t361 = t544 * t439 + t629;
t360 = -t542 * t430 + t595;
t359 = t544 * t430 + t598;
t354 = t545 * t393 - t543 * t425;
t353 = t545 * t392 + t543 * t424;
t352 = t545 * t391 + t543 * t423;
t351 = t545 * t390 - t543 * t422;
t350 = t544 * t406 - t629;
t349 = t543 * t393 + t545 * t425;
t348 = t543 * t392 - t545 * t424;
t347 = t543 * t391 - t545 * t423;
t346 = t543 * t390 + t545 * t422;
t345 = t542 * t406 + t628;
t344 = -qJ(4) * t424 + t605;
t343 = -qJ(4) * t423 + t615;
t342 = -pkin(5) * t455 - t543 * t413 + t540 * t594;
t341 = -pkin(5) * t457 - t543 * t412 + t537 * t594;
t340 = pkin(5) * t458 + t545 * t413 + t540 * t597;
t339 = -pkin(5) * t459 + t545 * t412 + t537 * t597;
t338 = t545 * t377 + t543 * t415;
t337 = t545 * t376 - t543 * t414;
t336 = t543 * t377 - t545 * t415;
t335 = t543 * t376 + t545 * t414;
t330 = -t536 * t395 + t539 * t396;
t329 = -t539 * t395 - t536 * t396;
t328 = -pkin(5) * t443 + t545 * t357;
t327 = pkin(5) * t445 + t543 * t357;
t326 = t545 * t358 + t597;
t325 = t543 * t358 - t594;
t324 = t540 * t330 - t537 * t516;
t323 = t544 * t371 - t542 * t374;
t322 = -t544 * t369 - t542 * t637;
t321 = t542 * t371 + t544 * t374;
t320 = -t542 * t369 + t544 * t637;
t317 = -t536 * t367 + t539 * t368;
t316 = -t536 * t365 + t539 * t366;
t315 = -t539 * t367 - t536 * t368;
t314 = -t539 * t365 - t536 * t366;
t313 = -pkin(3) * t424 + t332;
t312 = -pkin(3) * t423 + t331;
t308 = -t536 * t362 + t539 * t364;
t307 = -t536 * t361 + t539 * t363;
t306 = -t539 * t362 - t536 * t364;
t305 = -t539 * t361 - t536 * t363;
t304 = -t536 * t359 + t539 * t360;
t303 = t539 * t359 + t536 * t360;
t302 = -pkin(2) * t387 - pkin(3) * t474 - qJ(4) * t427 + t605;
t301 = -pkin(2) * t388 + pkin(3) * t475 - qJ(4) * t428 - t615;
t300 = -pkin(6) * t359 + t596;
t299 = t540 * t317 + t577;
t298 = t540 * t316 - t577;
t297 = -pkin(6) * t345 + t599;
t296 = -t538 * t348 + t541 * t353;
t295 = -t538 * t347 + t541 * t352;
t294 = -t536 * t345 + t539 * t350;
t293 = t541 * t348 + t538 * t353;
t292 = t541 * t347 + t538 * t352;
t291 = t539 * t345 + t536 * t350;
t290 = -t538 * t336 + t541 * t338;
t289 = t541 * t336 + t538 * t338;
t288 = t540 * t308 - t537 * t370;
t287 = t540 * t307 - t537 * t374;
t284 = t540 * t304 + t537 * t637;
t283 = t537 * t304 - t540 * t637;
t282 = -pkin(4) * t637 + pkin(6) * t360 + t599;
t281 = t545 * t324 - t543 * t329;
t280 = t543 * t324 + t545 * t329;
t279 = -pkin(4) * t369 + pkin(6) * t350 - t596;
t278 = -t538 * t325 + t541 * t326;
t277 = t541 * t325 + t538 * t326;
t276 = t540 * t294 + t537 * t369;
t275 = t537 * t294 - t540 * t369;
t274 = -qJ(4) * t415 - t285;
t273 = -t536 * t321 + t539 * t323;
t272 = -t536 * t320 + t539 * t322;
t271 = t539 * t321 + t536 * t323;
t270 = -t539 * t320 - t536 * t322;
t267 = t540 * t286 + t537 * t379;
t266 = t537 * t286 - t540 * t379;
t264 = -qJ(3) * t388 - t537 * t313 + t540 * t344;
t263 = -qJ(3) * t387 - t537 * t312 + t540 * t343;
t262 = t540 * t272 - t537 * t421;
t261 = -pkin(5) * t325 - (pkin(2) * t543 - qJ(3) * t545) * t357;
t260 = t540 * t273 + t537 * t385;
t259 = t537 * t273 - t540 * t385;
t258 = t545 * t299 - t543 * t315;
t257 = t545 * t298 - t543 * t314;
t256 = t543 * t299 + t545 * t315;
t255 = t543 * t298 + t545 * t314;
t254 = -pkin(2) * t375 - pkin(3) * t483 - qJ(4) * t417 - t286;
t253 = -qJ(3) * t375 + t540 * t274 + t415 * t623;
t252 = t545 * t288 - t543 * t306;
t251 = t545 * t287 - t543 * t305;
t250 = t543 * t288 + t545 * t306;
t249 = t543 * t287 + t545 * t305;
t248 = -pkin(3) * t271 - pkin(4) * t321;
t247 = pkin(5) * t326 - (-pkin(2) * t545 - qJ(3) * t543 - pkin(1)) * t357;
t246 = t545 * t284 + t543 * t303;
t245 = t543 * t284 - t545 * t303;
t244 = t545 * t276 + t543 * t291;
t243 = t543 * t276 - t545 * t291;
t242 = t545 * t267 + t543 * t285;
t241 = t543 * t267 - t545 * t285;
t240 = -pkin(3) * t303 - pkin(4) * t359 + t269;
t239 = -pkin(5) * t348 + t545 * t264 - t543 * t301;
t238 = -pkin(5) * t347 + t545 * t263 - t543 * t302;
t237 = -pkin(3) * t291 - pkin(4) * t345 + t268;
t236 = -pkin(2) * t266 + pkin(3) * t379 - qJ(4) * t286;
t233 = t545 * t262 - t543 * t270;
t232 = t543 * t262 + t545 * t270;
t231 = -qJ(4) * t303 - t536 * t282 + t539 * t300;
t230 = t545 * t260 + t543 * t271;
t229 = t543 * t260 - t545 * t271;
t228 = -pkin(1) * t388 + pkin(5) * t353 + t543 * t264 + t545 * t301;
t227 = -pkin(1) * t387 + pkin(5) * t352 + t543 * t263 + t545 * t302;
t226 = -qJ(4) * t291 - t536 * t279 + t539 * t297;
t225 = -pkin(4) * t355 + pkin(6) * t235;
t224 = -pkin(6) * t321 - t234;
t223 = -qJ(3) * t266 + (-qJ(4) * t540 + t623) * t285;
t222 = -pkin(4) * t385 + pkin(6) * t323 + t235;
t221 = -t538 * t245 + t541 * t246;
t220 = t541 * t245 + t538 * t246;
t219 = -pkin(5) * t336 + t545 * t253 - t543 * t254;
t218 = -pkin(1) * t375 + pkin(5) * t338 + t543 * t253 + t545 * t254;
t217 = -pkin(2) * t283 + pkin(3) * t637 - qJ(4) * t304 - t539 * t282 - t536 * t300;
t216 = -t538 * t243 + t541 * t244;
t215 = t541 * t243 + t538 * t244;
t214 = -pkin(2) * t275 + pkin(3) * t369 - qJ(4) * t294 - t539 * t279 - t536 * t297;
t213 = -t538 * t241 + t541 * t242;
t212 = t541 * t241 + t538 * t242;
t211 = t539 * t235 - t616;
t210 = t536 * t235 + t606;
t209 = -t538 * t229 + t541 * t230;
t208 = t541 * t229 + t538 * t230;
t207 = t540 * t211 + t537 * t355;
t206 = t537 * t211 - t540 * t355;
t205 = -qJ(3) * t283 + t540 * t231 - t537 * t240;
t204 = -qJ(3) * t275 + t540 * t226 - t537 * t237;
t203 = -pkin(3) * t210 - pkin(4) * t234;
t202 = -qJ(4) * t271 - t536 * t222 + t539 * t224;
t201 = -pkin(5) * t241 + t545 * t223 - t543 * t236;
t200 = -pkin(1) * t266 + pkin(5) * t242 + t543 * t223 + t545 * t236;
t199 = -pkin(2) * t259 + pkin(3) * t385 - qJ(4) * t273 - t539 * t222 - t536 * t224;
t198 = -pkin(6) * t606 - qJ(4) * t210 - t536 * t225;
t197 = t545 * t207 + t543 * t210;
t196 = t543 * t207 - t545 * t210;
t195 = -qJ(3) * t259 + t540 * t202 - t537 * t248;
t194 = -pkin(5) * t245 + t545 * t205 - t543 * t217;
t193 = -pkin(5) * t243 + t545 * t204 - t543 * t214;
t192 = -pkin(1) * t283 + pkin(5) * t246 + t543 * t205 + t545 * t217;
t191 = -pkin(1) * t275 + pkin(5) * t244 + t543 * t204 + t545 * t214;
t190 = -pkin(2) * t206 + pkin(3) * t355 + pkin(6) * t616 - qJ(4) * t211 - t539 * t225;
t189 = -t538 * t196 + t541 * t197;
t188 = t541 * t196 + t538 * t197;
t187 = -pkin(5) * t229 + t545 * t195 - t543 * t199;
t186 = -qJ(3) * t206 + t540 * t198 - t537 * t203;
t185 = -pkin(1) * t259 + pkin(5) * t230 + t543 * t195 + t545 * t199;
t184 = -pkin(5) * t196 + t545 * t186 - t543 * t190;
t183 = -pkin(1) * t206 + pkin(5) * t197 + t543 * t186 + t545 * t190;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, 0, 0, 0, 0, 0, 0, -t626, -t448, 0, t334, 0, 0, 0, 0, 0, 0, -t633, t403, t394, t278, 0, 0, 0, 0, 0, 0, t295, t296, t290, t213, 0, 0, 0, 0, 0, 0, t216, t221, t209, t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, 0, 0, 0, 0, 0, 0, t448, -t626, 0, -t640, 0, 0, 0, 0, 0, 0, t402, t401, t389, t277, 0, 0, 0, 0, 0, 0, t292, t293, t289, t212, 0, 0, 0, 0, 0, 0, t215, t220, t208, t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t534, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t534, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t357, 0, 0, 0, 0, 0, 0, t387, t388, t375, t266, 0, 0, 0, 0, 0, 0, t275, t283, t259, t206; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t607, -t600, -t451, -qJ(1) * t451, 0, 0, t448, 0, -t626, 0, t639, t634, t640, pkin(5) * t601 + qJ(1) * t640 - t538 * t386, -t556, -t538 * t444 + t541 * t446, t403, t556, t633, 0, -qJ(1) * t402 - t538 * t339 + t541 * t341, -qJ(1) * t401 - t538 * t340 + t541 * t342, -qJ(1) * t389 - t538 * t327 + t541 * t328, -qJ(1) * t277 - t538 * t247 + t541 * t261, -t538 * t382 + t541 * t384, -t538 * t335 + t541 * t337, -t538 * t349 + t541 * t354, -t538 * t381 + t541 * t383, -t538 * t346 + t541 * t351, -t538 * t433 + t541 * t434, -qJ(1) * t292 - t538 * t227 + t541 * t238, -qJ(1) * t293 - t538 * t228 + t541 * t239, -qJ(1) * t289 - t538 * t218 + t541 * t219, -qJ(1) * t212 - t538 * t200 + t541 * t201, -t538 * t256 + t541 * t258, -t538 * t232 + t541 * t233, -t538 * t249 + t541 * t251, -t538 * t255 + t541 * t257, -t538 * t250 + t541 * t252, -t538 * t280 + t541 * t281, -qJ(1) * t215 - t538 * t191 + t541 * t193, -qJ(1) * t220 - t538 * t192 + t541 * t194, -qJ(1) * t208 - t538 * t185 + t541 * t187, -qJ(1) * t188 - t538 * t183 + t541 * t184; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t600, -t607, t452, qJ(1) * t452, 0, 0, t626, 0, t448, 0, -t634, t639, t334, pkin(5) * t610 + qJ(1) * t334 + t541 * t386, t557, t541 * t444 + t538 * t446, t401, -t557, -t402, 0, -qJ(1) * t633 + t541 * t339 + t538 * t341, qJ(1) * t403 + t541 * t340 + t538 * t342, qJ(1) * t394 + t541 * t327 + t538 * t328, qJ(1) * t278 + t541 * t247 + t538 * t261, t541 * t382 + t538 * t384, t541 * t335 + t538 * t337, t541 * t349 + t538 * t354, t541 * t381 + t538 * t383, t541 * t346 + t538 * t351, t541 * t433 + t538 * t434, qJ(1) * t295 + t541 * t227 + t538 * t238, qJ(1) * t296 + t541 * t228 + t538 * t239, qJ(1) * t290 + t541 * t218 + t538 * t219, qJ(1) * t213 + t541 * t200 + t538 * t201, t541 * t256 + t538 * t258, t541 * t232 + t538 * t233, t541 * t249 + t538 * t251, t541 * t255 + t538 * t257, t541 * t250 + t538 * t252, t541 * t280 + t538 * t281, qJ(1) * t216 + t541 * t191 + t538 * t193, qJ(1) * t221 + t541 * t192 + t538 * t194, qJ(1) * t209 + t541 * t185 + t538 * t187, qJ(1) * t189 + t541 * t183 + t538 * t184; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t511, t512, 0, 0, 0, 0, 0, 0, 0, qJDD(2), pkin(1) * t508 + t565, -pkin(1) * t507 + t593, 0, -pkin(1) * t399, t523, 0.2e1 * t537 * t585, 0, t524, 0, 0, pkin(1) * t457 - qJ(3) * t493 + t540 * t568, pkin(1) * t455 + qJ(3) * t490 - t537 * t568, pkin(1) * t443 + pkin(2) * t502 + qJ(3) * t499 + t358, pkin(1) * t325 - pkin(2) * t436 + qJ(3) * t358, t537 * t464 - t558, t537 * t416 + t540 * t484, t537 * t429 + t540 * t476, t537 * t461 + t558, t537 * t426 + t540 * t473, t524, pkin(1) * t347 - pkin(2) * t423 + qJ(3) * t391 + t540 * t312 + t537 * t343, pkin(1) * t348 - pkin(2) * t424 + qJ(3) * t392 + t540 * t313 + t537 * t344, pkin(1) * t336 + qJ(3) * t377 + t537 * t274 + (-pkin(2) - t622) * t415, pkin(1) * t241 + qJ(3) * t267 + (-pkin(2) + t560) * t285, t537 * t317 - t573, t537 * t272 + t540 * t421, t537 * t307 + t540 * t374, t537 * t316 + t573, t537 * t308 + t540 * t370, t537 * t330 + t540 * t516, pkin(1) * t243 - pkin(2) * t291 + qJ(3) * t276 + t537 * t226 + t540 * t237, pkin(1) * t245 - pkin(2) * t303 + qJ(3) * t284 + t537 * t231 + t540 * t240, pkin(1) * t229 - pkin(2) * t271 + qJ(3) * t260 + t537 * t202 + t540 * t248, pkin(1) * t196 - pkin(2) * t210 + qJ(3) * t207 + t537 * t198 + t540 * t203;];
tauB_reg = t1;
