% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S5PRRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,alpha3,d2,d3,d4,d5,theta1]';
% 
% Output:
% MMD_reg [((5+1)*5/2)x(5*10)]
%   inertial parameter regressor of inertia matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:27
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S5PRRRR10_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR10_inertiaDJ_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR10_inertiaDJ_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S5PRRRR10_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:26:06
% EndTime: 2019-12-05 17:26:18
% DurationCPUTime: 3.34s
% Computational Cost: add. (3159->333), mult. (9629->633), div. (0->0), fcn. (9501->12), ass. (0->175)
t71 = sin(qJ(4));
t204 = -0.4e1 * t71;
t72 = sin(qJ(3));
t76 = cos(qJ(3));
t123 = pkin(3) * t72 - pkin(9) * t76;
t139 = -pkin(9) * t72 - pkin(2);
t114 = pkin(3) * t76 - t139;
t191 = t71 * pkin(8);
t75 = cos(qJ(4));
t91 = t114 * t75 + t76 * t191;
t201 = t91 * qJD(4);
t67 = sin(pkin(6));
t174 = cos(pkin(6));
t137 = t76 * t174;
t183 = t67 * t72;
t95 = -pkin(2) * t137 + pkin(8) * t183;
t41 = -t174 * pkin(3) + t95;
t153 = t71 * t183;
t45 = -t75 * t174 + t153;
t182 = t67 * t75;
t46 = t71 * t174 + t72 * t182;
t81 = t45 * pkin(4) - t46 * pkin(10) + t41;
t42 = t95 * qJD(3);
t138 = t72 * t174;
t125 = pkin(2) * t138;
t94 = t174 * pkin(9) + t125;
t92 = qJD(4) * t94;
t83 = -t75 * t42 - t71 * t92;
t203 = -(-t201 + (t72 * pkin(10) + t123 * t71) * qJD(3)) * t67 - t83 - qJD(5) * t81;
t103 = t71 * t114;
t202 = (t75 * pkin(8) * t76 - t103) * qJD(4);
t77 = cos(qJ(2));
t136 = t77 * t174;
t73 = sin(qJ(2));
t200 = t76 * t136 - t72 * t73;
t166 = qJD(4) * t76;
t172 = qJD(3) * t72;
t199 = t71 * t166 + t75 * t172;
t169 = qJD(4) * t71;
t171 = qJD(3) * t76;
t145 = t67 * t171;
t161 = t46 * qJD(4);
t32 = t71 * t145 + t161;
t109 = t45 * t169 - t32 * t75;
t70 = sin(qJ(5));
t63 = t70 ^ 2;
t74 = cos(qJ(5));
t65 = t74 ^ 2;
t176 = t63 - t65;
t135 = qJD(5) * t176;
t57 = qJD(4) * t153;
t131 = t174 * qJD(4);
t96 = t131 + t145;
t198 = -t75 * t96 + t57;
t197 = t76 ^ 2;
t196 = 0.2e1 * t67;
t195 = pkin(9) * t67;
t68 = sin(pkin(5));
t69 = cos(pkin(5));
t97 = t136 * t72 + t73 * t76;
t31 = t69 * t183 + t68 * t97;
t44 = -t68 * t77 * t67 + t69 * t174;
t21 = t31 * t71 - t44 * t75;
t173 = qJD(2) * t68;
t144 = t73 * t173;
t129 = t67 * t144;
t20 = t69 * t145 + (t200 * qJD(3) + (-t138 * t73 + t76 * t77) * qJD(2)) * t68;
t22 = t31 * t75 + t44 * t71;
t5 = qJD(4) * t22 - t129 * t75 + t20 * t71;
t194 = t21 * t5;
t193 = t5 * t71;
t192 = t70 * pkin(9);
t146 = t67 * t172;
t181 = t67 * t76;
t33 = t74 * t181 + t70 * t46;
t16 = qJD(5) * t33 - t70 * t146 + t198 * t74;
t190 = t16 * t70;
t154 = t70 * t181;
t164 = qJD(5) * t74;
t17 = -qJD(5) * t154 - t74 * t146 + t46 * t164 - t198 * t70;
t189 = t17 * t74;
t19 = t69 * t146 + (t97 * qJD(3) + (t137 * t73 + t72 * t77) * qJD(2)) * t68;
t30 = -t69 * t181 - t200 * t68;
t188 = t30 * t19;
t157 = pkin(8) * t181;
t49 = t125 + t157;
t43 = t49 * qJD(3);
t187 = t30 * t43;
t185 = t33 * t70;
t34 = t74 * t46 - t154;
t184 = t34 * t74;
t180 = t70 * t71;
t179 = t71 * t74;
t177 = t74 * t75;
t28 = -t67 * t103 + t75 * (t94 + t157);
t64 = t71 ^ 2;
t175 = -t75 ^ 2 + t64;
t170 = qJD(4) * t70;
t168 = qJD(4) * t74;
t167 = qJD(4) * t75;
t165 = qJD(5) * t70;
t163 = qJD(5) * t75;
t162 = t41 * qJD(4);
t160 = 0.2e1 * t45 * t32;
t159 = t75 * t192;
t158 = pkin(9) * t177;
t156 = -0.2e1 * pkin(3) * qJD(4);
t155 = -0.2e1 * pkin(4) * qJD(5);
t152 = pkin(9) * t167;
t62 = t67 ^ 2;
t151 = t62 * t171;
t149 = t70 * t163;
t148 = t74 * t163;
t143 = t70 * t164;
t142 = t71 * t167;
t141 = t74 * t167;
t134 = t175 * qJD(4);
t133 = 0.2e1 * t142;
t132 = qJD(3) * t174;
t130 = t62 * t144;
t128 = t72 * t151;
t127 = t70 * t141;
t126 = t64 * t143;
t122 = -t75 * pkin(4) - t71 * pkin(10);
t121 = pkin(4) * t71 - pkin(10) * t75;
t24 = -pkin(10) * t181 + t28;
t7 = -t70 * t24 + t74 * t81;
t8 = t74 * t24 + t70 * t81;
t120 = -t7 * t74 - t70 * t8;
t119 = t72 * t132;
t11 = -t22 * t70 + t30 * t74;
t12 = t22 * t74 + t30 * t70;
t118 = -t11 * t74 - t12 * t70;
t104 = qJD(3) * t123;
t13 = (-t104 * t71 + t201) * t67 - t83;
t82 = t71 * t42 - t75 * t92;
t14 = (t104 * t75 - t202) * t67 + t82;
t117 = -t13 * t75 - t14 * t71;
t116 = -t33 * t74 - t34 * t70;
t113 = pkin(3) - t122;
t102 = t74 * t113;
t38 = -t102 - t159;
t39 = -t113 * t70 + t158;
t115 = -t38 * t74 - t39 * t70;
t112 = t21 * t164 + t5 * t70;
t111 = t21 * t165 - t5 * t74;
t110 = t121 * t70;
t10 = (t202 + (-t72 * pkin(4) - t123 * t75) * qJD(3)) * t67 - t82;
t93 = t71 * t94;
t23 = t93 + (-t75 * t139 + (t75 * pkin(3) + pkin(4) + t191) * t76) * t67;
t108 = t10 * t70 + t23 * t164;
t107 = -t10 * t74 + t23 * t165;
t106 = t45 * t164 + t70 * t32;
t105 = t45 * t165 - t74 * t32;
t101 = -t75 * t166 + t71 * t172;
t100 = -t71 * t165 + t141;
t99 = t71 * t168 + t149;
t98 = t71 * t164 + t70 * t167;
t79 = pkin(2) * t119 + t32 * pkin(4) + pkin(8) * t145 + pkin(10) * t198;
t1 = t24 * t165 + t203 * t74 - t70 * t79;
t2 = -t24 * t164 + t203 * t70 + t74 * t79;
t87 = qJD(5) * t120 - t1 * t74 - t2 * t70;
t6 = -qJD(4) * t21 + t129 * t71 + t20 * t75;
t3 = -qJD(5) * t12 + t19 * t74 - t6 * t70;
t4 = qJD(5) * t11 + t19 * t70 + t6 * t74;
t86 = qJD(5) * t118 - t3 * t70 + t4 * t74;
t85 = t193 + t6 * t75 + (t21 * t75 - t22 * t71) * qJD(4);
t25 = pkin(9) * t99 - qJD(4) * t110 + qJD(5) * t102;
t26 = -t39 * qJD(5) + (pkin(9) * t180 + t121 * t74) * qJD(4);
t84 = qJD(5) * t115 - t25 * t74 - t26 * t70;
t60 = -0.2e1 * t142;
t53 = -0.2e1 * t128;
t35 = t135 * t71 - t127;
t27 = -t67 * t91 - t93;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t129 * t44 + 0.2e1 * t31 * t20 + 0.2e1 * t188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t22 * t6 + 0.2e1 * t188 + 0.2e1 * t194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t11 * t3 + 0.2e1 * t12 * t4 + 0.2e1 * t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, -t77 * t173, 0, 0, 0, 0, 0, 0, 0, 0, -t76 * t130 + t44 * t146 - t19 * t174, t72 * t130 + t44 * t145 - t20 * t174, (t19 * t72 + t20 * t76 + (t30 * t76 - t31 * t72) * qJD(3)) * t67, -pkin(2) * t130 + t19 * t95 + t20 * t49 - t31 * t42 + t187, 0, 0, 0, 0, 0, 0, t19 * t45 + t30 * t32 + (-t21 * t172 + t5 * t76) * t67, -t22 * t146 + t6 * t181 + t19 * t46 - t198 * t30, -t198 * t21 - t22 * t32 - t6 * t45 + t5 * t46, -t22 * t13 - t21 * t14 + t19 * t41 - t5 * t27 + t6 * t28 + t187, 0, 0, 0, 0, 0, 0, t11 * t32 + t21 * t17 + t3 * t45 + t5 * t33, -t12 * t32 - t21 * t16 + t5 * t34 - t4 * t45, t11 * t16 - t12 * t17 - t3 * t34 - t4 * t33, -t12 * t1 + t21 * t10 + t11 * t2 + t5 * t23 + t3 * t7 + t4 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t128, 0.2e1 * (-t72 ^ 2 + t197) * t62 * qJD(3), 0.2e1 * t132 * t181, t53, -0.2e1 * t67 * t119, 0, -0.2e1 * t62 * pkin(2) * t172 - 0.2e1 * t43 * t174, -0.2e1 * pkin(2) * t151 + 0.2e1 * t42 * t174, (-t42 * t76 + t43 * t72 + (-t49 * t72 + t76 * t95) * qJD(3)) * t196, -0.2e1 * t49 * t42 + 0.2e1 * t43 * t95, -0.2e1 * t46 * t198, 0.2e1 * t198 * t45 - 0.2e1 * t46 * t32, (-(t131 * t75 - t57) * t76 + (-t197 * t182 + t46 * t72) * qJD(3)) * t196, t160, (-t45 * t172 + t32 * t76) * t196, t53, 0.2e1 * t41 * t32 + 0.2e1 * t43 * t45 + 0.2e1 * (-t14 * t76 + t27 * t172) * t67, -0.2e1 * t13 * t181 - 0.2e1 * t28 * t146 - 0.2e1 * t198 * t41 + 0.2e1 * t43 * t46, 0.2e1 * t13 * t45 - 0.2e1 * t14 * t46 + 0.2e1 * t198 * t27 - 0.2e1 * t28 * t32, -0.2e1 * t28 * t13 + 0.2e1 * t27 * t14 + 0.2e1 * t41 * t43, -0.2e1 * t34 * t16, 0.2e1 * t16 * t33 - 0.2e1 * t34 * t17, -0.2e1 * t16 * t45 + 0.2e1 * t34 * t32, 0.2e1 * t33 * t17, -0.2e1 * t17 * t45 - 0.2e1 * t33 * t32, t160, 0.2e1 * t10 * t33 + 0.2e1 * t23 * t17 + 0.2e1 * t2 * t45 + 0.2e1 * t7 * t32, 0.2e1 * t1 * t45 + 0.2e1 * t10 * t34 - 0.2e1 * t23 * t16 - 0.2e1 * t8 * t32, 0.2e1 * t1 * t33 + 0.2e1 * t7 * t16 - 0.2e1 * t8 * t17 - 0.2e1 * t2 * t34, -0.2e1 * t8 * t1 + 0.2e1 * t23 * t10 + 0.2e1 * t7 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19, -t20, 0, 0, 0, 0, 0, 0, 0, 0, t30 * t169 - t19 * t75, t30 * t167 + t19 * t71, t85, -t19 * pkin(3) + pkin(9) * t85, 0, 0, 0, 0, 0, 0, (t170 * t21 - t3) * t75 + (qJD(4) * t11 + t112) * t71, (t168 * t21 + t4) * t75 + (-qJD(4) * t12 - t111) * t71, t118 * t167 + (-t3 * t74 - t4 * t70 + (t11 * t70 - t12 * t74) * qJD(5)) * t71, t11 * t26 - t12 * t25 + t3 * t38 + t4 * t39 + (t167 * t21 + t193) * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, 0, -t146, 0, -t43, t42, 0, 0, -t57 * t71 + (t71 * t96 + t161) * t75, -t45 * t167 - t75 * t198 + (-t161 - t32) * t71, t101 * t67, t109, t199 * t67, 0, -pkin(3) * t32 - t101 * t195 + t71 * t162 - t43 * t75, pkin(3) * t198 + t75 * t162 - t199 * t195 + t43 * t71, t46 * t152 - t27 * t167 - t28 * t169 + t117 + (-t198 * t71 + t109) * pkin(9), -t43 * pkin(3) + ((-t27 * t75 - t28 * t71) * qJD(4) + t117) * pkin(9), t100 * t34 - t16 * t179, t116 * t167 + (t190 - t189 + (-t184 + t185) * qJD(5)) * t71, (t168 * t45 + t16) * t75 + (qJD(4) * t34 - t105) * t71, t17 * t180 + t33 * t98, (-t170 * t45 + t17) * t75 + (-qJD(4) * t33 - t106) * t71, t109, t26 * t45 + t38 * t32 + (-t2 + (pkin(9) * t33 + t23 * t70) * qJD(4)) * t75 + (pkin(9) * t17 + qJD(4) * t7 + t108) * t71, t25 * t45 - t39 * t32 + (-t1 + (pkin(9) * t34 + t23 * t74) * qJD(4)) * t75 + (-pkin(9) * t16 - qJD(4) * t8 - t107) * t71, t38 * t16 - t39 * t17 + t25 * t33 - t26 * t34 + t120 * t167 + (t1 * t70 - t2 * t74 + (t7 * t70 - t74 * t8) * qJD(5)) * t71, -t1 * t39 + t2 * t38 - t8 * t25 + t7 * t26 + (t10 * t71 + t167 * t23) * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, -0.2e1 * t134, 0, t60, 0, 0, t71 * t156, t75 * t156, 0, 0, 0.2e1 * t65 * t142 - 0.2e1 * t126, t127 * t204 + 0.2e1 * t135 * t64, 0.2e1 * t71 * t149 + 0.2e1 * t168 * t175, 0.2e1 * t142 * t63 + 0.2e1 * t126, -0.2e1 * t134 * t70 + 0.2e1 * t71 * t148, t60, 0.2e1 * t38 * t169 - 0.2e1 * t26 * t75 + 0.2e1 * (t133 * t70 + t164 * t64) * pkin(9), -0.2e1 * t39 * t169 - 0.2e1 * t25 * t75 + 0.2e1 * (t133 * t74 - t165 * t64) * pkin(9), 0.2e1 * t115 * t167 + 0.2e1 * (t25 * t70 - t26 * t74 + (t38 * t70 - t39 * t74) * qJD(5)) * t71, 0.2e1 * pkin(9) ^ 2 * t142 - 0.2e1 * t39 * t25 + 0.2e1 * t38 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t5, -t6, 0, 0, 0, 0, 0, 0, 0, 0, t111, t112, t86, -t5 * pkin(4) + pkin(10) * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198, 0, -t32, t146, t14, t13, 0, 0, t34 * t164 - t190, qJD(5) * t116 - t16 * t74 - t70 * t17, t106, t165 * t33 - t189, -t105, 0, -pkin(4) * t17 - pkin(10) * t106 + t107, pkin(4) * t16 + pkin(10) * t105 + t108, (-t190 - t189 + (t184 + t185) * qJD(5)) * pkin(10) + t87, -t10 * pkin(4) + pkin(10) * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, 0, -t169, 0, -t152, pkin(9) * t169, 0, 0, -t35, t143 * t204 - t167 * t176, t169 * t70 - t148, t35, t99, 0, (pkin(10) * t177 + (-t74 * pkin(4) + t192) * t71) * qJD(5) + (t122 * t70 - t158) * qJD(4), (pkin(9) * t179 + t110) * qJD(5) + (t122 * t74 + t159) * qJD(4), t84, -pkin(4) * t152 + pkin(10) * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t143, -0.2e1 * t135, 0, -0.2e1 * t143, 0, 0, t70 * t155, t74 * t155, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, -t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16, 0, -t17, t32, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, 0, -t98, t169, t26, t25, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, 0, -t165, 0, -pkin(10) * t164, pkin(10) * t165, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg = t9;
