% Calculate minimal parameter regressor of coriolis matrix for
% S5PRRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,alpha3,d2,d3,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:27
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRRRR10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S5PRRRR10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:26:09
% EndTime: 2019-12-05 17:26:33
% DurationCPUTime: 10.13s
% Computational Cost: add. (5846->636), mult. (17103->998), div. (0->0), fcn. (19060->12), ass. (0->480)
t395 = sin(qJ(5));
t397 = sin(qJ(3));
t676 = cos(pkin(6));
t518 = t397 * t676;
t508 = pkin(2) * t518;
t393 = sin(pkin(6));
t401 = cos(qJ(3));
t644 = t393 * t401;
t337 = pkin(8) * t644 + t508;
t323 = pkin(9) * t676 + t337;
t487 = -pkin(3) * t401 - pkin(9) * t397;
t324 = (-pkin(2) + t487) * t393;
t396 = sin(qJ(4));
t400 = cos(qJ(4));
t180 = t396 * t323 - t400 * t324;
t165 = pkin(4) * t644 + t180;
t524 = t180 / 0.2e1 - t165 / 0.2e1;
t705 = t395 * t524;
t399 = cos(qJ(5));
t704 = t399 * t524;
t645 = t393 * t397;
t332 = t396 * t645 - t400 * t676;
t201 = t399 * t332;
t527 = -t201 / 0.2e1;
t567 = t395 * t644;
t519 = t396 * t676;
t334 = t400 * t645 + t519;
t624 = t399 * t334;
t266 = -t567 + t624;
t658 = t266 * t400;
t703 = t396 * t527 + t658 / 0.2e1;
t635 = t395 * t396;
t533 = -t635 / 0.2e1;
t620 = t399 * t401;
t565 = t393 * t620;
t637 = t395 * t334;
t264 = t565 + t637;
t661 = t264 * t400;
t426 = t332 * t533 + t661 / 0.2e1;
t388 = t395 ^ 2;
t390 = t399 ^ 2;
t376 = t390 - t388;
t702 = t376 * qJD(4);
t686 = -t396 / 0.2e1;
t539 = t332 * t686;
t683 = t400 / 0.2e1;
t437 = t334 * t683 + t539;
t701 = t437 * qJD(4);
t581 = t400 * qJD(3);
t380 = t396 * t581;
t514 = qJD(2) * t437 + t380;
t587 = t332 * qJD(2);
t434 = -qJD(3) * t437 + t334 * t587;
t700 = t332 ^ 2;
t394 = sin(pkin(5));
t682 = cos(qJ(2));
t492 = t676 * t682;
t677 = cos(pkin(5));
t520 = t393 * t677;
t398 = sin(qJ(2));
t630 = t398 * t401;
t261 = t397 * t520 + (t397 * t492 + t630) * t394;
t563 = t682 * t394;
t408 = -t393 * t563 + t676 * t677;
t162 = t261 * t400 + t396 * t408;
t699 = t162 / 0.2e1;
t698 = -t264 / 0.2e1;
t697 = t264 / 0.2e1;
t696 = -t266 / 0.2e1;
t370 = t399 * t645;
t304 = t400 * t567 - t370;
t695 = -t304 / 0.2e1;
t694 = t304 / 0.2e1;
t617 = t400 * t401;
t634 = t395 * t397;
t305 = (t399 * t617 + t634) * t393;
t693 = -t305 / 0.2e1;
t692 = t305 / 0.2e1;
t691 = -t332 / 0.2e1;
t690 = t332 / 0.2e1;
t689 = -t334 / 0.2e1;
t688 = t334 / 0.2e1;
t687 = t370 / 0.2e1;
t685 = t396 / 0.2e1;
t684 = -t400 / 0.2e1;
t681 = t332 * pkin(10);
t680 = t396 * pkin(4);
t679 = t400 * pkin(10);
t678 = -qJD(5) / 0.2e1;
t675 = t162 * t395;
t674 = t162 * t399;
t673 = t165 * t399;
t336 = (pkin(3) * t397 - pkin(9) * t401) * t393;
t618 = t400 * t336;
t517 = t401 * t676;
t335 = -pkin(2) * t517 + pkin(8) * t645;
t632 = t396 * t335;
t467 = t618 + t632;
t185 = -pkin(4) * t645 - t467;
t672 = t185 * t395;
t671 = t185 * t399;
t643 = t394 * t398;
t568 = t400 * t643;
t509 = t393 * t568;
t495 = t398 * t518;
t561 = t682 * t401;
t301 = (-t495 + t561) * t394;
t653 = t301 * t396;
t217 = -t509 + t653;
t670 = t217 * t395;
t669 = t217 * t399;
t570 = t396 * t643;
t510 = t393 * t570;
t652 = t301 * t400;
t218 = t510 + t652;
t668 = t218 * t395;
t667 = t218 * t399;
t569 = t397 * t643;
t260 = t569 + (-t492 * t394 - t520) * t401;
t666 = t260 * t395;
t665 = t260 * t399;
t664 = t261 * t395;
t663 = t261 * t399;
t662 = t264 * t396;
t660 = t266 * t395;
t659 = t266 * t399;
t494 = t398 * t517;
t562 = t682 * t397;
t300 = (t494 + t562) * t394;
t657 = t300 * t395;
t656 = t300 * t396;
t655 = t300 * t399;
t654 = t300 * t400;
t651 = t305 * t395;
t485 = -t400 * pkin(4) - t396 * pkin(10);
t463 = -pkin(3) + t485;
t621 = t399 * t400;
t578 = pkin(9) * t621;
t307 = t395 * t463 + t578;
t650 = t307 * t334;
t322 = -pkin(3) * t676 + t335;
t649 = t322 * t400;
t387 = t393 ^ 2;
t392 = t401 ^ 2;
t648 = t387 * t392;
t647 = t387 * t397;
t389 = t396 ^ 2;
t646 = t389 * t395;
t642 = t395 * t180;
t328 = t396 * t336;
t329 = t400 * t335;
t612 = t328 - t329;
t186 = pkin(10) * t645 + t612;
t641 = t395 * t186;
t231 = t334 * pkin(4) + t681;
t640 = t395 * t231;
t367 = -t679 + t680;
t238 = t508 + (pkin(8) + t367) * t644;
t639 = t395 * t238;
t638 = t395 * t264;
t636 = t395 * t367;
t633 = t395 * t400;
t631 = t396 * t399;
t629 = t399 * t180;
t628 = t399 * t186;
t627 = t399 * t231;
t626 = t399 * t238;
t625 = t399 * t264;
t623 = t399 * t367;
t622 = t399 * t389;
t619 = t400 * t332;
t279 = t201 * t635;
t50 = t279 + (-t661 / 0.2e1 + t693) * t399 + (-t658 / 0.2e1 + t694) * t395;
t616 = t50 * qJD(2);
t73 = -t305 * t264 - t266 * t304;
t615 = t73 * qJD(2);
t468 = t625 + t660;
t80 = t468 * t332;
t614 = t80 * qJD(2);
t613 = -t165 + t180;
t391 = t400 ^ 2;
t377 = t391 - t389;
t611 = qJD(2) * t266;
t610 = qJD(2) * t401;
t609 = qJD(3) * t393;
t608 = qJD(3) * t401;
t607 = qJD(4) * t395;
t606 = qJD(4) * t396;
t605 = qJD(4) * t399;
t604 = qJD(4) * t400;
t603 = qJD(5) * t395;
t602 = qJD(5) * t399;
t601 = qJD(5) * t400;
t526 = t621 / 0.2e1;
t419 = t266 * t526 + t390 * t539;
t101 = -t651 / 0.2e1 + t419;
t600 = t101 * qJD(2);
t106 = t264 * t334 - t395 * t700;
t599 = t106 * qJD(2);
t107 = t266 * t334 - t399 * t700;
t598 = t107 * qJD(2);
t536 = -t644 / 0.2e1;
t500 = t395 * t536;
t530 = t631 / 0.2e1;
t108 = t687 + t332 * t530 + (t500 + t696) * t400;
t597 = t108 * qJD(2);
t525 = t620 / 0.2e1;
t416 = (t400 * t525 + t634 / 0.2e1) * t393;
t109 = t416 - t426;
t596 = t109 * qJD(2);
t571 = t396 * t644;
t114 = -t264 * t571 - t304 * t332;
t595 = t114 * qJD(2);
t115 = t266 * t571 + t305 * t332;
t594 = t115 * qJD(2);
t151 = -t334 * t396 - t619;
t170 = t151 * t644;
t593 = t170 * qJD(2);
t197 = t395 * t332;
t592 = t197 * qJD(2);
t591 = t201 * qJD(2);
t252 = -t332 * t645 + t396 * t648;
t590 = t252 * qJD(2);
t253 = -t334 * t645 + t400 * t648;
t589 = t253 * qJD(2);
t588 = t264 * qJD(5);
t586 = t332 * qJD(4);
t585 = t334 * qJD(4);
t343 = (-t397 ^ 2 + t392) * t387;
t584 = t343 * qJD(2);
t583 = t393 * qJD(4);
t582 = t396 * qJD(3);
t580 = pkin(9) * t633;
t383 = pkin(9) * t635;
t579 = pkin(9) * t631;
t577 = pkin(3) * t689;
t576 = pkin(4) * t697;
t575 = pkin(4) * t696;
t574 = pkin(4) * t693;
t573 = pkin(9) * t696;
t572 = t681 / 0.2e1;
t566 = t395 * t619;
t564 = t399 * t619;
t560 = t393 * t610;
t559 = t393 * t608;
t558 = t399 * t582;
t557 = t401 * t583;
t556 = t395 * t601;
t555 = t399 * t601;
t554 = t266 * t587;
t552 = t387 * t610;
t551 = t397 * t609;
t550 = t395 * t602;
t549 = t395 * t605;
t548 = t396 * t604;
t547 = t396 * t605;
t546 = -t670 / 0.2e1;
t545 = -t669 / 0.2e1;
t544 = t260 * t691;
t543 = t260 * t688;
t541 = t266 * t685;
t538 = -t645 / 0.2e1;
t537 = t645 / 0.2e1;
t535 = t644 / 0.2e1;
t534 = -t640 / 0.2e1;
t532 = t635 / 0.2e1;
t531 = t633 / 0.2e1;
t529 = -t628 / 0.2e1;
t528 = t627 / 0.2e1;
t523 = t328 / 0.2e1 - t329 / 0.2e1;
t522 = t260 * t676;
t521 = t261 * t676;
t516 = t676 * qJD(2);
t515 = t383 + t623;
t513 = pkin(9) * t535;
t512 = -qJD(5) - t587;
t511 = -qJD(5) + t581;
t507 = t608 * t647;
t506 = t397 * t552;
t505 = t395 * t558;
t504 = t395 * t547;
t503 = t400 * t560;
t502 = t396 * t536;
t501 = t396 * t535;
t499 = t395 * t535;
t497 = t393 * t525;
t493 = t572 + t231 / 0.2e1;
t491 = t393 * t516;
t490 = t676 * t609;
t84 = t666 + t674;
t489 = t666 / 0.2e1 - t84 / 0.2e1;
t83 = -t665 + t675;
t488 = t665 / 0.2e1 + t83 / 0.2e1;
t486 = t332 * pkin(4) - t334 * pkin(10);
t484 = 0.2e1 * t505;
t161 = t261 * t396 - t400 * t408;
t483 = t261 / 0.2e1 + t161 * t686;
t482 = pkin(10) * t502;
t481 = -qJD(4) + t560;
t444 = t162 * t697 + t689 * t83;
t11 = t669 / 0.2e1 + t444;
t181 = t400 * t323 + t396 * t324;
t166 = -pkin(10) * t644 + t181;
t404 = t322 + t486;
t59 = t395 * t166 - t399 * t404;
t9 = t181 * t264 - t59 * t334 + (t395 * t613 + t627) * t332;
t480 = t11 * qJD(1) + t9 * qJD(2);
t94 = t626 - t641;
t15 = t165 * t304 + t185 * t264 + t94 * t332 - t571 * t59;
t430 = t260 * t698 + t536 * t83;
t469 = t655 - t668;
t432 = t469 * t400;
t122 = t260 * t633 + t663;
t441 = t122 * t690 + t161 * t694;
t5 = t432 / 0.2e1 + (t546 + t430) * t396 + t441;
t479 = t5 * qJD(1) + t15 * qJD(2);
t60 = t399 * t166 + t395 * t404;
t95 = t628 + t639;
t16 = t165 * t305 + t185 * t266 - t95 * t332 - t571 * t60;
t429 = t260 * t696 + t536 * t84;
t470 = t657 + t667;
t433 = t470 * t400;
t123 = -t260 * t621 + t664;
t440 = t123 * t691 + t161 * t692;
t8 = -t433 / 0.2e1 + (t545 + t429) * t396 + t440;
t478 = t8 * qJD(1) + t16 * qJD(2);
t10 = t181 * t266 - t60 * t334 + (t399 * t613 - t640) * t332;
t443 = t266 * t699 + t689 * t84;
t14 = t546 + t443;
t477 = t14 * qJD(1) + t10 * qJD(2);
t439 = -t668 / 0.2e1 + t655 / 0.2e1;
t445 = t161 * t696 + t690 * t84;
t25 = t439 + t445;
t38 = t165 * t266 - t60 * t332;
t476 = qJD(1) * t25 - qJD(2) * t38;
t438 = -t667 / 0.2e1 - t657 / 0.2e1;
t446 = t161 * t697 + t691 * t83;
t26 = t438 + t446;
t37 = -t165 * t264 + t59 * t332;
t475 = qJD(1) * t26 - qJD(2) * t37;
t428 = t161 * t538 + t261 * t690;
t33 = t654 / 0.2e1 + t428;
t43 = t180 * t645 - t322 * t571 - t337 * t332 + t467 * t644;
t474 = t33 * qJD(1) - t43 * qJD(2);
t427 = t162 * t538 + t261 * t688;
t36 = -t656 / 0.2e1 + t427;
t44 = t337 * t334 + (-t181 * t397 + (t612 + t649) * t401) * t393;
t473 = t36 * qJD(1) + t44 * qJD(2);
t45 = t544 + t652 / 0.2e1 + (-t161 * t401 / 0.2e1 + t570 / 0.2e1) * t393;
t89 = -t180 * t644 - t322 * t332;
t472 = -qJD(1) * t45 - qJD(2) * t89;
t47 = t543 + t653 / 0.2e1 + (t401 * t699 - t568 / 0.2e1) * t393;
t90 = -t181 * t644 - t322 * t334;
t471 = -qJD(1) * t47 + qJD(2) * t90;
t466 = t516 + qJD(3);
t354 = t377 * t395;
t62 = t566 + (t497 + t637 / 0.2e1 + t697) * t396;
t465 = -t62 * qJD(2) + t354 * qJD(3);
t355 = t399 * t391 - t622;
t61 = -t564 + (t499 - t624 / 0.2e1 + t696) * t396;
t464 = -t61 * qJD(2) - t355 * qJD(3);
t462 = t511 * t396;
t461 = pkin(10) * t536 - t181 / 0.2e1;
t405 = t408 * t393;
t402 = -t563 / 0.2e1 - t405 / 0.2e1;
t453 = -t494 / 0.2e1;
t102 = t394 * t453 + t521 / 0.2e1 + t402 * t397;
t269 = -pkin(2) * t647 - t337 * t676;
t460 = t102 * qJD(1) - t269 * qJD(2);
t454 = t495 / 0.2e1;
t103 = t394 * t454 - t522 / 0.2e1 + t402 * t401;
t268 = t387 * pkin(2) * t401 - t335 * t676;
t459 = t103 * qJD(1) + t268 * qJD(2);
t171 = -t334 ^ 2 + t700;
t458 = qJD(2) * t171 + qJD(3) * t151;
t457 = t151 * qJD(2) + t377 * qJD(3);
t456 = t581 - t587;
t455 = qJD(2) * t334 + t582;
t452 = t679 / 0.2e1 - t680 / 0.2e1;
t451 = pkin(4) * t695 - t671 / 0.2e1;
t330 = t400 * t537 + t519 / 0.2e1;
t450 = t330 * qJD(2) + t582 / 0.2e1;
t87 = t577 + (t513 - t336 / 0.2e1) * t400 + (t322 / 0.2e1 - t335 / 0.2e1) * t396;
t449 = pkin(3) * t582 - t87 * qJD(2);
t406 = pkin(3) * t690 + t649 / 0.2e1 + pkin(9) * t502;
t85 = t406 + t523;
t448 = pkin(3) * t581 - t85 * qJD(2);
t447 = t393 * t487;
t442 = t307 * t690 + t60 * t684;
t436 = -t641 / 0.2e1 + t626 / 0.2e1;
t435 = -t625 / 0.2e1 - t660 / 0.2e1;
t431 = t396 * t678 + t514;
t425 = -t367 / 0.2e1 + t452;
t306 = -t399 * t463 + t580;
t412 = t306 * t688 + t515 * t691;
t1 = (pkin(9) * t698 + t528 + t705) * t400 + (t59 / 0.2e1 + (pkin(9) * t690 + t461) * t395) * t396 + t412 + t451;
t159 = t306 * t396 + (t515 - 0.2e1 * t383) * t400;
t22 = (-t675 / 0.2e1 + t488) * t396;
t424 = -t22 * qJD(1) - t1 * qJD(2) - t159 * qJD(3);
t160 = t367 * t633 + (-t307 + t578) * t396;
t2 = t574 + t650 / 0.2e1 + (t185 / 0.2e1 + t367 * t690) * t395 + (t534 + t573 + t704) * t400 + (t60 / 0.2e1 + t461 * t399) * t396;
t21 = (-t674 / 0.2e1 - t489) * t396;
t423 = -t21 * qJD(1) - t2 * qJD(2) + t160 * qJD(3);
t70 = (-t638 + t659) * t396;
t93 = t264 ^ 2 - t266 ^ 2;
t422 = qJD(2) * t93 - qJD(3) * t70 - qJD(4) * t468;
t17 = (t573 - t673 / 0.2e1) * t396 + t436 + t442;
t257 = -pkin(9) * t622 - t307 * t400;
t29 = t399 * t483 + t400 * t489;
t421 = t29 * qJD(1) + t17 * qJD(2) + t257 * qJD(3);
t411 = t306 * t691 + t59 * t683 + pkin(9) * t662 / 0.2e1;
t18 = t529 + (-t238 / 0.2e1 + t165 * t685) * t395 + t411;
t256 = -pkin(9) * t646 - t306 * t400;
t30 = -t395 * t483 + t400 * t488;
t420 = t30 * qJD(1) + t18 * qJD(2) - t256 * qJD(3);
t262 = t425 * t395;
t39 = t395 * t493 + t576 - t704;
t418 = pkin(4) * t605 - t39 * qJD(2) + t262 * qJD(3);
t263 = t425 * t399;
t41 = -t399 * t493 + t575 - t705;
t417 = pkin(4) * t607 - t41 * qJD(2) - t263 * qJD(3);
t121 = t435 * t396;
t131 = -t638 / 0.2e1 + t659 / 0.2e1;
t415 = -t121 * qJD(3) - t131 * qJD(4) + t264 * t611;
t338 = (t388 / 0.2e1 - t390 / 0.2e1) * t396;
t414 = t131 * qJD(2) - t338 * qJD(3) + t549;
t413 = t330 * qJD(5) + t434;
t353 = t376 * t389;
t410 = t70 * qJD(2) + t353 * qJD(3) + 0.2e1 * t504;
t409 = qJD(2) * t468 + t484 - t702;
t407 = qJD(3) * t395 * t622 - t121 * qJD(2) + t338 * qJD(4);
t403 = t405 / 0.2e1;
t385 = t606 / 0.2e1;
t368 = qJD(3) * t537;
t359 = -0.2e1 * t396 * t550;
t331 = t338 * qJD(5);
t325 = (t552 - t583 / 0.2e1) * t397;
t259 = qJD(3) * t501 + t330 * qJD(4);
t230 = t383 + t623 / 0.2e1 + t452 * t399;
t229 = t579 - t636 / 0.2e1 - t452 * t395;
t146 = t151 * qJD(4);
t130 = t131 * qJD(5);
t129 = t260 * t400;
t127 = t260 * t396;
t120 = t121 * qJD(5);
t111 = t400 * t500 + t687 + t703;
t110 = t416 + t426;
t105 = -t521 / 0.2e1 + t397 * t403 + (-t562 / 0.2e1 + t453) * t394;
t104 = t522 / 0.2e1 + t401 * t403 + (-t561 / 0.2e1 + t454) * t394;
t100 = t651 / 0.2e1 + t419;
t88 = t400 * t513 + t577 + t322 * t685 + t632 / 0.2e1 + t618 / 0.2e1;
t86 = t406 - t523;
t74 = t468 * qJD(5);
t69 = t70 * qJD(5);
t64 = t334 * t530 + t396 * t499 + t541 + t564;
t63 = -t566 + t334 * t533 - t662 / 0.2e1 + t396 * t497;
t58 = t161 * t399;
t56 = t161 * t395;
t49 = t395 * t695 + t399 * t692 + t400 * t435 + t279;
t48 = t162 * t535 + t543 - t653 / 0.2e1 + t509 / 0.2e1;
t46 = t161 * t536 + t544 - t652 / 0.2e1 - t510 / 0.2e1;
t42 = pkin(10) * t527 + t575 + t165 * t395 / 0.2e1 + t642 / 0.2e1 + t528;
t40 = t395 * t572 + t576 + t673 / 0.2e1 + t629 / 0.2e1 + t534;
t35 = t656 / 0.2e1 + t427;
t34 = -t654 / 0.2e1 + t428;
t32 = t84 * t683 + t161 * t530 + t260 * t531 + t663 / 0.2e1;
t31 = t83 * t684 + t161 * t533 + t260 * t526 - t664 / 0.2e1;
t28 = t439 - t445;
t27 = t438 - t446;
t24 = t162 * t530 + t260 * t533 + t686 * t84;
t23 = t162 * t532 + t260 * t530 + t686 * t83;
t20 = pkin(9) * t541 + t165 * t530 + t436 - t442;
t19 = t165 * t533 + t529 - t639 / 0.2e1 - t411;
t13 = t670 / 0.2e1 + t443;
t12 = t545 + t444;
t7 = t433 / 0.2e1 + t217 * t530 + t429 * t396 + t440;
t6 = -t432 / 0.2e1 + t217 * t532 + t430 * t396 + t441;
t4 = (-t579 + t636) * t691 - t650 / 0.2e1 + (-t629 + t640) * t683 + t60 * t686 + t181 * t530 + t165 * t526 + t399 * t482 + t574 + t672 / 0.2e1 + t703 * pkin(9);
t3 = (t627 + t642) * t684 + t59 * t686 + t181 * t532 + t165 * t531 + t395 * t482 - t412 + t451 + t426 * pkin(9);
t51 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -qJD(2) * t643, -qJD(2) * t563, 0, 0, 0, 0, 0, (-t387 * t394 * t630 - t300 * t676) * qJD(2) + t105 * qJD(3), (-t301 * t676 + t387 * t569) * qJD(2) + t104 * qJD(3), 0, 0, 0, 0, 0, (t217 * t644 + t300 * t332) * qJD(2) + t34 * qJD(3) + t48 * qJD(4), (t218 * t644 + t300 * t334) * qJD(2) + t35 * qJD(3) + t46 * qJD(4), 0, 0, 0, 0, 0, (t217 * t264 + t332 * t469) * qJD(2) + t6 * qJD(3) + t12 * qJD(4) + t28 * qJD(5), (t217 * t266 - t332 * t470) * qJD(2) + t7 * qJD(3) + t13 * qJD(4) + t27 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, t105 * qJD(2) - t261 * qJD(3), t104 * qJD(2) + t260 * qJD(3), 0, 0, 0, 0, 0, t34 * qJD(2) + t127 * qJD(4) - t261 * t581, t35 * qJD(2) + t129 * qJD(4) + t261 * t582, 0, 0, 0, 0, 0, t6 * qJD(2) + (-t122 * t400 - t260 * t646) * qJD(3) + t23 * qJD(4) + t32 * qJD(5), t7 * qJD(2) + (t123 * t400 - t260 * t622) * qJD(3) + t24 * qJD(4) + t31 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t48 + qJD(3) * t127 - qJD(4) * t162, qJD(2) * t46 + qJD(3) * t129 + qJD(4) * t161, 0, 0, 0, 0, 0, t12 * qJD(2) + t23 * qJD(3) + t56 * qJD(5) - t162 * t605, t13 * qJD(2) + t24 * qJD(3) + t58 * qJD(5) + t162 * t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t28 + qJD(3) * t32 + qJD(4) * t56 - qJD(5) * t84, qJD(2) * t27 + qJD(3) * t31 + qJD(4) * t58 + qJD(5) * t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102 * qJD(3), -t103 * qJD(3), 0, 0, 0, 0, 0, qJD(3) * t33 + qJD(4) * t47, qJD(3) * t36 + qJD(4) * t45, 0, 0, 0, 0, 0, qJD(3) * t5 + qJD(4) * t11 - qJD(5) * t25, qJD(3) * t8 + qJD(4) * t14 - qJD(5) * t26; 0, 0, 0, 0, t507, t343 * qJD(3), t401 * t490, -t397 * t490, 0, t269 * qJD(3), -t268 * qJD(3), (t400 * t559 - t586) * t334, qJD(3) * t170 + qJD(4) * t171, -t253 * qJD(3) + t332 * t557, t252 * qJD(3) + t334 * t557, -t507, -qJD(3) * t43 - qJD(4) * t90, qJD(3) * t44 + qJD(4) * t89, (qJD(3) * t305 - t399 * t586 - t588) * t266, qJD(3) * t73 + qJD(4) * t80 + qJD(5) * t93, t115 * qJD(3) + t107 * qJD(4) - t332 * t588, -t266 * t332 * qJD(5) + t114 * qJD(3) - t106 * qJD(4), (t396 * t559 + t585) * t332, qJD(3) * t15 + qJD(4) * t9 + qJD(5) * t38, qJD(3) * t16 + qJD(4) * t10 + qJD(5) * t37; 0, 0, 0, 0, t506, t584, t466 * t644, -t466 * t645, 0, -t337 * qJD(3) - t460, t335 * qJD(3) - t459, t393 * t455 * t617 + t701, t377 * t559 + t146 + t593, t396 * t551 - t589, t400 * t551 + t590, -t325, (-t337 * t400 + t396 * t447) * qJD(3) + t88 * qJD(4) + t474, (t337 * t396 + t400 * t447) * qJD(3) + t86 * qJD(4) + t473, t100 * qJD(4) + t120 + (t558 + t611) * t305, t615 + t49 * qJD(4) - t69 + (-t304 * t399 - t651) * t582, t594 + (-t305 * t400 + t389 * t565) * qJD(3) + t64 * qJD(4) + t110 * qJD(5), t595 + (t304 * t400 - t389 * t567) * qJD(3) + t63 * qJD(4) + t111 * qJD(5), -t701 + (qJD(5) / 0.2e1 - t456) * t571, -t94 * t581 + t3 * qJD(4) + t20 * qJD(5) + (pkin(9) * t304 - t306 * t644 + t672) * t582 + t479, t95 * t581 + t4 * qJD(4) + t19 * qJD(5) + (pkin(9) * t305 - t307 * t644 + t671) * t582 + t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t434, t458, t481 * t332, t481 * t334, t368, qJD(3) * t88 - qJD(4) * t181 - t471, qJD(3) * t86 + qJD(4) * t180 - t472, t100 * qJD(3) + t130 + (-t607 - t611) * t201, t49 * qJD(3) - t376 * t586 + t614 - t74, t64 * qJD(3) + t395 * t585 + t598, t63 * qJD(3) + t399 * t585 - t599, t413, t3 * qJD(3) + (-t181 * t399 + t395 * t486) * qJD(4) + t42 * qJD(5) + t480, t4 * qJD(3) + (t181 * t395 + t399 * t486) * qJD(4) + t40 * qJD(5) + t477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t415, t422, t110 * qJD(3) + t264 * t512, t111 * qJD(3) + t266 * t512, t259, qJD(3) * t20 + qJD(4) * t42 - qJD(5) * t60 - t476, qJD(3) * t19 + qJD(4) * t40 + qJD(5) * t59 - t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, t102 * qJD(2), t103 * qJD(2), 0, 0, 0, 0, 0, -qJD(2) * t33, -qJD(2) * t36, 0, 0, 0, 0, 0, -qJD(2) * t5 - qJD(4) * t22 - qJD(5) * t29, -qJD(2) * t8 - qJD(4) * t21 - qJD(5) * t30; 0, 0, 0, 0, -t506, -t584, -t401 * t491, t397 * t491, 0, t460, t459, -t334 * t503 + t701, t146 - t593, -t400 * t557 + t589, t396 * t557 - t590, t325, qJD(4) * t87 - t474, qJD(4) * t85 - t473, t101 * qJD(4) - t305 * t611 + t120, qJD(4) * t50 - t615 - t69, -qJD(4) * t61 - qJD(5) * t109 - t594, -qJD(4) * t62 - qJD(5) * t108 - t595, -t701 + (-t587 + t678) * t571, -qJD(4) * t1 - qJD(5) * t17 - t479, -qJD(4) * t2 - qJD(5) * t18 - t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t548, t377 * qJD(4), 0, 0, 0, -pkin(3) * t606, -pkin(3) * t604, -t389 * t550 + t390 * t548, -t353 * qJD(5) - 0.2e1 * t400 * t504, -t355 * qJD(4) + t396 * t556, t354 * qJD(4) + t396 * t555, -t548, -t159 * qJD(4) - t257 * qJD(5), t160 * qJD(4) + t256 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t514, t457, -t481 * t400, t481 * t396, qJD(2) * t538, -pkin(9) * t604 - t449, pkin(9) * t606 - t448, t600 - t331 + (t390 * t582 + t549) * t400, t616 + t359 + (-0.2e1 * t505 + t702) * t400, t395 * t606 + t464, t465 + t547, -t431, (t395 * t485 - t578) * qJD(4) + t230 * qJD(5) + t424, (t399 * t485 + t580) * qJD(4) + t229 * qJD(5) + t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t407, -t410, t395 * t462 - t596, t399 * t462 - t597, qJD(2) * t502 + t385, t230 * qJD(4) - t307 * qJD(5) - t421, t229 * qJD(4) + t306 * qJD(5) - t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t47, -qJD(2) * t45, 0, 0, 0, 0, 0, -qJD(2) * t11 + qJD(3) * t22, -qJD(2) * t14 + qJD(3) * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t434, -t458, t456 * t644, -t455 * t644, t368, -qJD(3) * t87 + t471, -qJD(3) * t85 + t472, -t101 * qJD(3) + t399 * t554 + t130, -qJD(3) * t50 - t614 - t74, qJD(3) * t61 + qJD(5) * t201 - t598, qJD(3) * t62 - qJD(5) * t197 + t599, -t413, qJD(3) * t1 + qJD(5) * t41 - t480, qJD(3) * t2 + qJD(5) * t39 - t477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t514, -t457, t503, -t396 * t560, qJD(2) * t537, t449, t448, -t380 * t390 - t331 - t600, t400 * t484 + t359 - t616, -t464 - t555, -t465 + t556, t431, t263 * qJD(5) - t424, -t262 * qJD(5) - t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t550, t376 * qJD(5), 0, 0, 0, -pkin(4) * t603, -pkin(4) * t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t414, -t409, -t399 * t511 + t591, t395 * t511 - t592, -t450, -pkin(10) * t602 - t417, pkin(10) * t603 - t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t25 + qJD(3) * t29, qJD(2) * t26 + qJD(3) * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415, -t422, t109 * qJD(3) - t201 * qJD(4) + t264 * t587, t108 * qJD(3) + t197 * qJD(4) + t554, t259, qJD(3) * t17 - qJD(4) * t41 + t476, qJD(3) * t18 - qJD(4) * t39 + t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407, t410, t596 + (-t395 * t582 + t605) * t400, t597 + (-t558 - t607) * t400, qJD(2) * t501 + t385, -t263 * qJD(4) + t421, t262 * qJD(4) + t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t414, t409, t399 * t581 - t591, -t395 * t581 + t592, t450, t417, t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t51;
