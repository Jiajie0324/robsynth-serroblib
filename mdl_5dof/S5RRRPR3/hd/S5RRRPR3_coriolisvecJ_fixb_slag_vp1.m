% Calculate vector of centrifugal and Coriolis load on the joints for
% S5RRRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 12:10
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5RRRPR3_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR3_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR3_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR3_coriolisvecJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRPR3_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRPR3_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRPR3_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 12:08:50
% EndTime: 2020-01-03 12:09:21
% DurationCPUTime: 24.29s
% Computational Cost: add. (22112->758), mult. (16495->938), div. (0->0), fcn. (12844->10), ass. (0->442)
t751 = Icges(4,3) + Icges(5,3);
t383 = qJ(1) + qJ(2);
t372 = sin(t383);
t382 = qJ(3) + pkin(9);
t370 = cos(t382);
t373 = cos(t383);
t588 = t370 * t373;
t369 = sin(t382);
t590 = t369 * t373;
t209 = Icges(5,4) * t588 - Icges(5,2) * t590 + Icges(5,6) * t372;
t387 = cos(qJ(3));
t581 = t373 * t387;
t385 = sin(qJ(3));
t582 = t373 * t385;
t230 = Icges(4,4) * t581 - Icges(4,2) * t582 + Icges(4,6) * t372;
t750 = -t209 * t369 - t230 * t385;
t289 = Icges(5,5) * t370 - Icges(5,6) * t369;
t329 = Icges(4,5) * t387 - Icges(4,6) * t385;
t435 = t329 * t372;
t714 = t289 * t372 - t751 * t373 + t435;
t713 = Icges(4,5) * t581 + Icges(5,5) * t588 - Icges(4,6) * t582 - Icges(5,6) * t590 + t751 * t372;
t631 = Icges(5,4) * t369;
t290 = Icges(5,2) * t370 + t631;
t632 = Icges(4,4) * t385;
t330 = Icges(4,2) * t387 + t632;
t374 = Icges(4,4) * t387;
t689 = Icges(4,1) * t385 + t374;
t578 = t387 * t689;
t357 = Icges(5,4) * t370;
t691 = Icges(5,1) * t369 + t357;
t746 = -t290 * t369 - t330 * t385 + t370 * t691 + t578;
t320 = Icges(5,4) * t590;
t211 = Icges(5,1) * t588 + Icges(5,5) * t372 - t320;
t350 = Icges(4,4) * t582;
t232 = Icges(4,1) * t581 + Icges(4,5) * t372 - t350;
t749 = -t211 * t370 - t232 * t387 - t750;
t293 = Icges(5,1) * t370 - t631;
t440 = t293 * t372;
t210 = -Icges(5,5) * t373 + t440;
t333 = Icges(4,1) * t387 - t632;
t441 = t333 * t372;
t231 = -Icges(4,5) * t373 + t441;
t585 = t372 * t387;
t589 = t370 * t372;
t716 = -t210 * t589 - t231 * t585;
t748 = t211 * t589 + t232 * t585;
t462 = -Icges(5,2) * t369 + t357;
t208 = -Icges(5,6) * t373 + t372 * t462;
t463 = -Icges(4,2) * t385 + t374;
t438 = t463 * t372;
t229 = -Icges(4,6) * t373 + t438;
t715 = t208 * t590 + t229 * t582;
t288 = Icges(5,5) * t369 + Icges(5,6) * t370;
t328 = Icges(4,5) * t385 + Icges(4,6) * t387;
t747 = t288 + t328;
t586 = t372 * t385;
t591 = t369 * t372;
t725 = -t208 * t591 - t229 * t586 - t714 * t373 - t716;
t724 = -t209 * t591 - t230 * t586 - t713 * t373 + t748;
t723 = -t210 * t588 - t231 * t581 - t714 * t372 + t715;
t722 = -t713 * t372 + t749 * t373;
t244 = t288 * t373;
t260 = t328 * t373;
t745 = t746 * t372 - t244 - t260;
t597 = t328 * t372;
t599 = t288 * t372;
t744 = -t290 * t590 - t330 * t582 + t373 * t578 + t588 * t691 + t597 + t599;
t706 = -t210 * t370 - t231 * t387;
t705 = t208 * t369 + t229 * t385;
t718 = t208 * t370 + t210 * t369 + t229 * t387 + t231 * t385;
t381 = qJD(1) + qJD(2);
t743 = t746 * t381 + (-t289 - t329) * qJD(3);
t741 = t705 + t706;
t709 = t209 * t370 + t211 * t369 + t230 * t387 + t232 * t385;
t271 = t462 * qJD(3);
t272 = t293 * qJD(3);
t304 = t463 * qJD(3);
t305 = t333 * qJD(3);
t740 = t271 * t369 - t272 * t370 + t304 * t385 - t305 * t387 - t747 * t381 + (t290 * t370 + t330 * t387 + t369 * t691 + t385 * t689) * qJD(3);
t739 = t747 * qJD(3) - t751 * t381;
t738 = t745 * t381;
t737 = (t722 * t372 - t723 * t373) * qJD(3);
t736 = (t724 * t372 - t725 * t373) * qJD(3);
t690 = t372 * rSges(3,1) + t373 * rSges(3,2);
t254 = t690 * t381;
t386 = sin(qJ(1));
t637 = pkin(1) * qJD(1);
t520 = t386 * t637;
t237 = t520 + t254;
t735 = t744 * t381;
t371 = qJ(5) + t382;
t361 = sin(t371);
t362 = cos(t371);
t630 = Icges(6,4) * t361;
t280 = Icges(6,1) * t362 - t630;
t439 = t280 * t372;
t196 = -Icges(6,5) * t373 + t439;
t594 = t361 * t373;
t308 = Icges(6,4) * t594;
t592 = t362 * t373;
t197 = Icges(6,1) * t592 + Icges(6,5) * t372 - t308;
t277 = Icges(6,2) * t362 + t630;
t380 = qJD(3) + qJD(5);
t297 = t372 * t380;
t584 = t373 * t380;
t356 = Icges(6,4) * t362;
t461 = -Icges(6,2) * t361 + t356;
t692 = Icges(6,1) * t361 + t356;
t702 = t692 + t461;
t400 = t297 * (-Icges(6,2) * t592 + t197 - t308) - t584 * (-t277 * t372 + t196) + t381 * t702;
t436 = t461 * t372;
t194 = -Icges(6,6) * t373 + t436;
t195 = Icges(6,4) * t592 - Icges(6,2) * t594 + Icges(6,6) * t372;
t662 = t297 * (t373 * t692 + t195) - t584 * (t372 * t692 + t194) + t381 * (t277 - t280);
t734 = t400 * t361 + t362 * t662;
t411 = t372 * (-Icges(5,2) * t588 + t211 - t320) - t373 * (-t290 * t372 + t210);
t667 = -t373 * t208 + t209 * t372;
t733 = -t411 * t369 - t370 * t667;
t732 = t736 + t738;
t731 = -t735 + t737;
t437 = t462 * t381;
t677 = -Icges(5,6) * t381 + qJD(3) * t290;
t141 = -t372 * t677 + t373 * t437;
t583 = t373 * t381;
t670 = -Icges(5,5) * t381 + qJD(3) * t691;
t143 = t293 * t583 - t372 * t670;
t675 = -Icges(4,6) * t381 + qJD(3) * t330;
t157 = -t372 * t675 + t463 * t583;
t669 = -Icges(4,5) * t381 + qJD(3) * t689;
t159 = t333 * t583 - t372 * t669;
t730 = t741 * qJD(3) - t141 * t370 - t143 * t369 - t157 * t387 - t159 * t385;
t140 = t372 * t437 + t373 * t677;
t142 = t373 * t670 + t381 * t440;
t156 = t373 * t675 + t381 * t438;
t158 = t373 * t669 + t381 * t441;
t729 = -qJD(3) * t749 - t140 * t370 - t142 * t369 - t156 * t387 - t158 * t385;
t728 = t743 * t372 + t740 * t373;
t727 = -t740 * t372 + t743 * t373;
t726 = rSges(5,2) * t370;
t648 = pkin(4) * t369;
t649 = pkin(3) * t385;
t474 = t648 + t649;
t294 = t474 * qJD(3);
t257 = t372 * t294;
t258 = t373 * t294;
t645 = rSges(5,1) * t369;
t295 = t645 + t726;
t494 = t295 + t649;
t687 = qJD(3) * t494;
t721 = t373 * t687;
t540 = t689 + t463;
t541 = t330 - t333;
t720 = (t385 * t540 + t387 * t541) * t381;
t547 = t691 + t462;
t548 = t290 - t293;
t719 = (t369 * t547 + t370 * t548) * t381;
t377 = t387 * pkin(3);
t364 = t377 + pkin(2);
t287 = t364 * t583;
t534 = qJD(3) * t385;
t519 = pkin(3) * t534;
t532 = qJD(4) * t373;
t587 = t372 * t381;
t539 = pkin(2) * t583 + pkin(7) * t587;
t384 = -qJ(4) - pkin(7);
t580 = t381 * t384;
t149 = -t532 + t287 + (-t519 - t580) * t372 - t539;
t324 = t373 * t364;
t650 = pkin(2) * t373;
t199 = t650 - t324 + (pkin(7) + t384) * t372;
t186 = t381 * t199;
t717 = t149 + t186;
t434 = t289 * t381;
t712 = t329 * t583 - t739 * t372 + t373 * t434 + t741 * t381;
t711 = t372 * t434 + (t435 - t749) * t381 + t739 * t373;
t352 = rSges(4,2) * t582;
t528 = rSges(4,1) * t581;
t234 = rSges(4,3) * t372 - t352 + t528;
t215 = t381 * t234;
t302 = pkin(7) * t372 + t650;
t273 = t381 * t302;
t344 = rSges(4,1) * t385 + rSges(4,2) * t387;
t536 = qJD(3) * t372;
t508 = t344 * t536;
t544 = rSges(4,3) * t587 + t381 * t528;
t710 = -t215 - t273 + t508 + t539 + t544;
t647 = pkin(4) * t370;
t314 = t364 + t647;
t269 = t373 * t314;
t379 = -pkin(8) + t384;
t537 = t379 - t384;
t167 = t372 * t537 - t269 + t324;
t165 = t381 * t167;
t313 = rSges(6,2) * t594;
t525 = rSges(6,1) * t592;
t201 = rSges(6,3) * t372 - t313 + t525;
t187 = t381 * t201;
t551 = rSges(6,3) * t587 + t381 * t525;
t557 = t314 * t583 - t257;
t708 = t551 + t557 - t187 + t165;
t322 = rSges(5,2) * t590;
t527 = rSges(5,1) * t588;
t214 = rSges(5,3) * t372 - t322 + t527;
t188 = t381 * t214;
t549 = rSges(5,3) * t587 + t381 * t527;
t707 = t287 + t549 - t188;
t704 = -t709 * qJD(3) + t140 * t369 - t142 * t370 + t156 * t385 - t158 * t387 + t713 * t381;
t703 = -t718 * qJD(3) - t141 * t369 + t143 * t370 - t157 * t385 + t159 * t387 + t714 * t381;
t701 = 0.2e1 * qJD(3);
t276 = Icges(6,5) * t362 - Icges(6,6) * t361;
t433 = t276 * t372;
t192 = -Icges(6,3) * t373 + t433;
t610 = t195 * t361;
t459 = -t197 * t362 + t610;
t445 = -t192 + t459;
t700 = t584 * t445;
t321 = rSges(5,1) * t589;
t213 = -rSges(5,2) * t591 - rSges(5,3) * t373 + t321;
t363 = t372 * pkin(2);
t301 = -pkin(7) * t373 + t363;
t355 = t373 * t384;
t542 = t372 * t364 + t355;
t198 = -t301 + t542;
t569 = t198 + t301;
t699 = t381 * (t213 + t569);
t639 = rSges(6,2) * t361;
t522 = t381 * t639;
t552 = rSges(6,3) * t583 + t372 * t522;
t695 = -t258 + t552;
t694 = t273 - t186;
t250 = t295 * t373;
t354 = pkin(3) * t582;
t693 = t354 + t250;
t600 = t277 * t380;
t688 = -Icges(6,6) * t381 + t600;
t388 = cos(qJ(1));
t366 = t388 * t637;
t686 = t366 - t694;
t638 = rSges(6,2) * t362;
t643 = rSges(6,1) * t361;
t281 = t638 + t643;
t225 = t281 * t372;
t226 = t281 * t373;
t642 = rSges(6,1) * t362;
t282 = -t639 + t642;
t556 = t372 * t314 + t373 * t379;
t166 = -t542 + t556;
t181 = t198 * t536;
t593 = t362 * t372;
t312 = rSges(6,1) * t593;
t595 = t361 * t372;
t200 = -rSges(6,2) * t595 - rSges(6,3) * t373 + t312;
t575 = -t167 - t199;
t45 = t200 * t297 + t201 * t584 + t181 + (t166 * t372 + t373 * t575) * qJD(3);
t203 = t584 * t281;
t358 = qJD(4) * t372;
t475 = -t358 + t520;
t482 = t166 + t200 + t569;
t535 = qJD(3) * t373;
t69 = t381 * t482 + t474 * t535 + t203 + t475;
t685 = -t69 * (-t381 * t225 + t282 * t584) - t45 * (-t225 * t297 - t226 * t584);
t684 = (-t372 ^ 2 - t373 ^ 2) * t649;
t275 = Icges(6,5) * t361 + Icges(6,6) * t362;
t683 = -Icges(6,3) * t381 + t275 * t380;
t682 = -Icges(6,5) * t381 + t380 * t692;
t351 = rSges(4,1) * t585;
t233 = -rSges(4,2) * t586 - rSges(4,3) * t373 + t351;
t507 = t344 * t535;
t681 = -t381 * (t233 + t301) - t507;
t485 = -t280 * t380 + t600;
t486 = t702 * t380;
t665 = -t275 * t381 + t361 * t486 + t362 * t485;
t490 = t194 * t380 - t280 * t583 + t372 * t682;
t492 = t196 * t380 - t372 * t688 + t461 * t583;
t664 = -t192 * t381 + t361 * t492 + t362 * t490;
t193 = Icges(6,5) * t592 - Icges(6,6) * t594 + Icges(6,3) * t372;
t491 = t195 * t380 + t373 * t682 + t381 * t439;
t493 = t197 * t380 - t373 * t688 - t381 * t436;
t663 = -t193 * t381 + t361 * t493 + t362 * t491;
t251 = t381 * t297;
t661 = t251 / 0.2e1;
t252 = t381 * t584;
t660 = -t252 / 0.2e1;
t659 = -t297 / 0.2e1;
t658 = t297 / 0.2e1;
t657 = t584 / 0.2e1;
t656 = -t584 / 0.2e1;
t655 = -t372 / 0.2e1;
t654 = -t373 / 0.2e1;
t653 = -t381 / 0.2e1;
t652 = t381 / 0.2e1;
t651 = rSges(4,3) + pkin(7);
t376 = t386 * pkin(1);
t378 = t388 * pkin(1);
t646 = rSges(4,1) * t387;
t644 = rSges(5,1) * t370;
t641 = rSges(4,2) * t385;
t640 = rSges(5,2) * t369;
t404 = -t532 - t257;
t598 = t297 * t281;
t395 = t366 + t404 - t598;
t514 = t201 + t575;
t70 = (t302 + t514) * t381 + t395;
t636 = t381 * t70;
t602 = t275 * t372;
t115 = -t277 * t594 + t592 * t692 + t602;
t617 = t115 * t381;
t135 = -t508 + t366 + (t234 + t302) * t381;
t615 = t135 * t381;
t611 = t194 * t361;
t609 = t196 * t362;
t220 = t275 * t373;
t596 = t329 * t381;
t579 = t381 * t385;
t342 = pkin(7) * t583;
t504 = t373 * t534;
t484 = pkin(3) * t504;
t148 = t484 + t342 - t358 + (t355 + (-pkin(2) + t364) * t372) * t381;
t577 = t484 - t258 - (t537 * t373 + (t314 - t364) * t372) * t381 - t148;
t523 = t381 * t640;
t550 = rSges(5,3) * t583 + t372 * t523;
t576 = -t535 * t726 - (t369 * t535 + t370 * t587) * rSges(5,1) + t550 - t148;
t568 = -t199 + t214;
t563 = t372 * t689 + t229;
t562 = t373 * t689 + t230;
t561 = -t330 * t372 + t231;
t560 = -Icges(4,2) * t581 + t232 - t350;
t390 = qJD(1) ^ 2;
t365 = t390 * t378;
t558 = t381 * t539 + t365;
t555 = t269 - t313;
t524 = rSges(4,2) * t579;
t545 = rSges(4,3) * t583 + t372 * t524;
t543 = -t322 + t324;
t538 = t351 + t363;
t533 = qJD(3) * t387;
t531 = t390 * t376;
t530 = pkin(3) * t586;
t389 = qJD(3) ^ 2;
t529 = t389 * t377;
t526 = t380 * t643;
t521 = t380 * t638;
t174 = t198 * t583;
t124 = t373 * t521 + (t361 * t584 + t362 * t587) * rSges(6,1) - t552;
t518 = -t124 + t577;
t125 = -t372 * t526 + (-t297 * t362 - t361 * t583) * rSges(6,2) + t551;
t517 = t200 * t583 + (t125 - t187) * t372;
t516 = qJD(3) * t174 + t717 * t536;
t515 = t717 * t372 + t174;
t512 = t312 + t556;
t510 = t342 + t545;
t509 = t321 + t542;
t502 = t587 / 0.2e1;
t501 = -t583 / 0.2e1;
t500 = pkin(2) + t646;
t498 = t536 / 0.2e1;
t497 = -t535 / 0.2e1;
t496 = t535 / 0.2e1;
t489 = -t193 - t611;
t488 = -t193 + t609;
t300 = rSges(3,1) * t373 - rSges(3,2) * t372;
t238 = t300 * t381 + t366;
t483 = t381 * t149 + t373 * t529 + t558;
t476 = t381 * t358 - t531;
t255 = rSges(3,1) * t583 - rSges(3,2) * t587;
t473 = -t377 - t647;
t472 = -t532 + t694;
t471 = t372 * t494;
t469 = -t641 + t646;
t296 = -t640 + t644;
t134 = t520 - t681;
t460 = t134 * t373 - t135 * t372;
t117 = -t195 * t362 - t197 * t361;
t452 = -t277 * t361 + t362 * t692;
t447 = -t281 - t474;
t444 = qJD(3) * t344;
t432 = t213 * t372 + t373 * t568;
t147 = (t233 * t372 + t234 * t373) * qJD(3);
t429 = -t372 * t533 - t373 * t579;
t424 = t220 * t297 - t276 * t381 - t584 * t602;
t421 = -t373 * t683 + (-t433 + t459) * t381;
t420 = -t276 * t583 + t683 * t372 + (t609 - t611) * t381;
t415 = -t276 * t380 + t381 * t452;
t410 = t385 * t561 + t387 * t563;
t409 = t385 * t560 + t387 * t562;
t407 = -t372 * t687 - t532;
t116 = t194 * t362 + t196 * t361;
t16 = t420 * t372 + t373 * t664;
t17 = t421 * t372 - t373 * t663;
t18 = -t372 * t664 + t420 * t373;
t19 = t372 * t663 + t421 * t373;
t114 = t372 * t452 - t220;
t110 = t114 * t381;
t168 = t196 * t593;
t88 = -t192 * t373 - t194 * t595 + t168;
t169 = t197 * t593;
t89 = t193 * t373 + t195 * t595 - t169;
t36 = -t297 * t89 - t584 * t88 + t110;
t170 = t194 * t594;
t90 = -t192 * t372 - t196 * t592 + t170;
t91 = t193 * t372 - t373 * t459;
t37 = -t297 * t91 - t584 * t90 - t617;
t54 = t415 * t372 + t373 * t665;
t55 = -t372 * t665 + t415 * t373;
t56 = -t361 * t490 + t362 * t492;
t57 = t361 * t491 - t362 * t493;
t406 = (-t16 * t584 - t17 * t297 + t251 * t90 - t252 * t91 + t381 * t54) * t655 + ((-t117 * t381 - t56) * t373 + (t116 * t381 - t57) * t372) * t652 + (t424 * t372 + t373 * t734) * t658 + (-t372 * t734 + t424 * t373) * t657 + (-t18 * t584 - t19 * t297 + t251 * t88 - t252 * t89 + t381 * t55) * t654 + (-t361 * t662 + t362 * t400) * t653 + ((-t381 * t91 - t16) * t373 + (t381 * t90 - t17) * t372) * t659 + t36 * t502 + t37 * t501 + ((-t381 * t89 - t18) * t373 + (t381 * t88 - t19) * t372) * t656 + (-t372 * t89 - t373 * t88) * t661 + (-t372 * t91 - t373 * t90) * t660;
t405 = t366 + t407;
t146 = -t536 * t645 + (-t369 * t583 - t370 * t536) * rSges(5,2) + t549;
t402 = (t146 - t188) * t372 + (t213 * t381 + t576) * t373;
t394 = (t110 - (t372 * t489 + t168 + t91) * t584 + (t169 - t170 + t90 + (t192 - t610) * t372) * t297 + (t297 * t488 - t700) * t373) * t658 + t252 * t115 / 0.2e1 + t117 * t660 + (t114 + t116) * t661 + (t617 - (-t170 + t89) * t584 + (-t168 + t88) * t297 + (-t297 * t445 - t488 * t584) * t373 + (-t297 * t489 + t700) * t372 + t37) * t657 + (t56 + t55) * t656 + ((((t714 - t749) * t373 + t716 + t722) * t373 + ((t714 + t750) * t372 + (t705 - t706) * t373 - t715 + t723 + t748) * t372) * qJD(3) + t738) * t498 + (t57 + t54 + t36) * t659 + (t727 - t730) * t497 + ((((t706 + t713) * t373 + t715 + t724) * t373 + ((t705 + t713) * t372 + t716 + t725) * t372) * qJD(3) + t731 + t735) * t496 - (t728 - t729 + t732) * t536 / 0.2e1 + (t744 * t373 + (t718 + t745) * t372) * qJD(3) * t652 + (t746 * qJD(3) + t271 * t370 + t272 * t369 + t304 * t387 + t305 * t385 - t361 * t485 + t362 * t486 - t709 * t497) * t381;
t160 = rSges(4,2) * t373 * t533 + (t381 * t585 + t504) * rSges(4,1) - t545;
t256 = pkin(2) * t587 - t342;
t315 = t469 * qJD(3);
t85 = -t531 - t315 * t536 + (-t160 - t256 - t507) * t381;
t161 = -rSges(4,1) * t372 * t534 + rSges(4,2) * t429 + t544;
t86 = t161 * t381 + (t315 * t373 - t344 * t587) * qJD(3) + t558;
t393 = (-t134 * t444 - t500 * t615 - t641 * t86 + t651 * t85) * t372 + (-t134 * t524 - t135 * t444 + t500 * t85 - t651 * t86) * t373;
t242 = t282 * t380;
t25 = -t242 * t297 - t252 * t281 + t473 * t389 * t372 + (-t256 + t518 - t258) * t381 + t476;
t107 = -t287 + (-t381 * t537 + t519) * t372 + t557;
t26 = pkin(4) * t389 * t588 + t242 * t584 - t251 * t281 + (t107 + t125 + t404) * t381 + t483;
t392 = (t25 * (rSges(6,3) - t379) - t26 * t639 - t69 * t281 * t380 + (t70 * (-t314 - t642) - t69 * t379) * t381) * t372 + (t25 * t642 + t70 * (-t379 * t381 - t521 - t526) - t26 * rSges(6,3) + t69 * (-qJD(4) - t522)) * t373;
t274 = t296 * qJD(3);
t58 = (-qJD(3) * t274 - t529) * t372 + (-t256 + t576 - t721) * t381 + t476;
t59 = t274 * t535 + (t146 + t407) * t381 + t483;
t83 = t494 * t535 + t475 + t699;
t84 = (t302 + t568) * t381 + t405;
t391 = (t58 * (rSges(5,3) - t384) - t59 * t640 + (t84 * (-t364 - t644) - t83 * t384) * t381 - t83 * t687) * t372 + (t58 * t644 - t59 * rSges(5,3) + t83 * (-qJD(4) - t523) + (-t580 - t687) * t84) * t373;
t266 = t344 * t373;
t265 = t344 * t372;
t249 = t295 * t372;
t218 = t373 * t474 - t354;
t217 = (-t474 + t649) * t372;
t205 = t255 * t381 + t365;
t204 = -t254 * t381 - t531;
t202 = t297 * t282;
t185 = t372 * t200;
t184 = t372 * t198;
t80 = qJD(3) * t432 + t181;
t7 = -t124 * t584 + t125 * t297 + t200 * t252 - t201 * t251 + ((t107 + t165) * t372 + (t166 * t381 + t577) * t373) * qJD(3) + t516;
t1 = [t394 + m(3) * (t204 * (t300 + t378) + t205 * (t376 + t690) + (-t238 + t255 + t366) * t237) + (t25 * (t378 + t555) + t70 * (-t475 + t695) + t26 * (t376 + t512) + t392 + (t70 - t395 + t686 + t708) * t69) * m(6) + (t58 * (t378 + t543) + t84 * (-t475 + t550) + t59 * (t376 + t509) + t391 + (t84 - t405 + t686 + t707) * t83) * m(5) + (t85 * (-t352 + t378) + t135 * (t510 - t520) + t86 * (t376 + t538) + t393 + (t135 + t710) * t134) * m(4); t394 + (t25 * t555 + t26 * t512 + t482 * t636 + t392 + (t203 + t695 + t258) * t70 + (-t472 + t598 + t708 + t257) * t69) * m(6) + (t59 * t509 + t58 * t543 + t391 + (t550 + t699 + t721) * t84 + (qJD(3) * t471 - t472 + t707) * t83) * m(5) + (-t85 * t352 + t538 * t86 + t393 + (t510 - t681) * t135 + t710 * t134) * m(4) + (t204 * t300 + t205 * t690 + t237 * t255 - t238 * t254 - (t237 * t300 - t238 * t690) * t381) * m(3); t406 + ((-t369 * t548 + t370 * t547 - t385 * t541 + t387 * t540) * t381 + ((t372 * t560 - t373 * t561) * t387 + (-t372 * t562 + t373 * t563) * t385 - t369 * t667 + t370 * t411) * qJD(3)) * t653 + ((t709 * t381 + t730) * t373 + (t718 * t381 + t729) * t372) * t652 + ((t260 * t536 - t596) * t372 + (t720 + (-t410 * t373 + (-t597 + t409) * t372) * qJD(3)) * t373 + (t244 * t536 - t434) * t372 + (t719 + (-t372 * t599 - t733) * qJD(3)) * t373) * t498 + ((-t535 * t597 - t596) * t373 + (-t720 + (-t409 * t372 + (t260 + t410) * t373) * qJD(3)) * t372 + (-t535 * t599 - t434) * t373 + (-t719 + (t373 * t244 + t733) * qJD(3)) * t372) * t496 + (t7 * (t184 + t185) + t45 * (t515 + t517) + t26 * t354 + (t7 * t514 + t45 * t518 + t26 * (t281 + t648) + t69 * t242 + (t45 * t166 + t447 * t70) * t381) * t373 + (t7 * t166 + t45 * t107 + t25 * t447 + t70 * (-pkin(3) * t533 - qJD(3) * t647 - t242) + (t45 * t167 + t447 * t69) * t381) * t372 + t70 * t202 - (t70 * (-t218 - t226 - t354) + t69 * (t217 - t530)) * t381 - (t45 * (-t218 * t373 + t684) + (t45 * t217 + t473 * t70) * t372) * qJD(3) + t685) * m(6) + ((qJD(3) * t402 + t516) * (t184 + t432) + t80 * (t402 + t515) - t58 * t471 + t84 * (pkin(3) * t429 - t274 * t372 - t295 * t583) + t59 * t693 + t83 * (t274 * t373 - t381 * t471) - (-t84 * t693 + t83 * (-t249 - t530)) * t381 - (t80 * (-t250 * t373 + t684) + t83 * t296 * t373 + (-t80 * t249 + t84 * (-t296 - t377)) * t372) * qJD(3)) * m(5) + (-(-t134 * t265 - t135 * t266) * t381 - (t147 * (-t265 * t372 - t266 * t373) + t460 * t469) * qJD(3) + 0.2e1 * t147 * ((t233 * t381 - t160) * t373 + (t161 - t215) * t372) + t460 * t315 + ((t86 - t615) * t373 + (-t134 * t381 - t85) * t372) * t344) * m(4) + (t728 * t381 + ((t703 * t373 + t722 * t381) * t373 + (t711 * t372 + t723 * t381 + (-t704 + t712) * t373) * t372) * t701) * t655 + (t727 * t381 + ((t712 * t373 + t724 * t381) * t373 + (t704 * t372 + t725 * t381 + (-t703 + t711) * t373) * t372) * t701) * t654 + (t732 + t736) * t502 + (t731 + t737) * t501; m(5) * (-t372 * t59 - t373 * t58) + m(6) * (-t25 * t373 - t26 * t372); t406 + (t7 * (t201 * t373 + t185) + t45 * (-t124 * t373 + t517) + (-t372 * t70 + t373 * t69) * t242 + ((t26 - t636) * t373 + (-t381 * t69 - t25) * t372) * t281 - t70 * (-t226 * t381 - t202) + t685) * m(6);];
tauc = t1(:);
