% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRPR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 12:10
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRPR3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR3_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR3_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR3_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR3_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 12:10:10
% EndTime: 2020-01-03 12:10:13
% DurationCPUTime: 2.98s
% Computational Cost: add. (23366->217), mult. (31717->314), div. (0->0), fcn. (21339->10), ass. (0->179)
t1494 = qJD(1) + qJD(2);
t1491 = t1494 ^ 2;
t1492 = qJDD(1) + qJDD(2);
t1500 = sin(qJ(2));
t1504 = cos(qJ(2));
t1471 = t1500 * t1491 - t1504 * t1492;
t1501 = sin(qJ(1));
t1505 = cos(qJ(1));
t1511 = -t1504 * t1491 - t1500 * t1492;
t1541 = t1501 * t1471 + t1505 * t1511;
t1540 = -t1505 * t1471 + t1501 * t1511;
t1493 = qJD(3) + qJD(5);
t1537 = qJD(5) + t1493;
t1496 = sin(pkin(9));
t1497 = cos(pkin(9));
t1503 = cos(qJ(3));
t1523 = t1494 * t1503;
t1499 = sin(qJ(3));
t1524 = t1494 * t1499;
t1457 = t1496 * t1524 - t1497 * t1523;
t1459 = (t1496 * t1503 + t1497 * t1499) * t1494;
t1498 = sin(qJ(5));
t1502 = cos(qJ(5));
t1431 = t1502 * t1457 + t1498 * t1459;
t1536 = t1431 ^ 2;
t1433 = -t1498 * t1457 + t1502 * t1459;
t1535 = t1433 ^ 2;
t1534 = t1457 ^ 2;
t1533 = t1459 ^ 2;
t1532 = t1493 ^ 2;
t1531 = t1503 ^ 2;
t1530 = -2 * qJD(4);
t1529 = qJD(3) * t1457;
t1528 = qJD(3) * t1459;
t1527 = t1433 * t1431;
t1526 = t1459 * t1457;
t1525 = t1491 * t1499;
t1484 = -t1501 * g(2) + t1505 * g(3);
t1507 = qJD(1) ^ 2;
t1474 = -t1507 * pkin(1) + t1484;
t1485 = -t1505 * g(2) - t1501 * g(3);
t1509 = qJDD(1) * pkin(1) + t1485;
t1446 = t1504 * t1474 + t1500 * t1509;
t1440 = -t1491 * pkin(2) + t1492 * pkin(7) + t1446;
t1522 = t1499 * t1440;
t1521 = t1499 * t1492;
t1520 = t1503 * t1492;
t1519 = t1531 * t1491;
t1518 = qJD(5) - t1493;
t1517 = -qJDD(3) - qJDD(5);
t1495 = t1499 ^ 2;
t1516 = t1495 + t1531;
t1515 = qJD(3) * t1524;
t1514 = qJD(3) * t1523;
t1463 = t1514 + t1521;
t1411 = qJDD(3) * pkin(3) - t1463 * qJ(4) - t1522 + (qJD(3) * t1494 * qJ(4) + pkin(3) * t1525 - g(1)) * t1503;
t1430 = -t1499 * g(1) + t1503 * t1440;
t1475 = qJD(3) * pkin(3) - qJ(4) * t1524;
t1510 = -t1515 + t1520;
t1412 = -pkin(3) * t1519 + t1510 * qJ(4) - qJD(3) * t1475 + t1430;
t1382 = t1496 * t1411 + t1497 * t1412 + t1457 * t1530;
t1442 = t1497 * t1463 + t1496 * t1510;
t1422 = -t1442 - t1529;
t1512 = t1496 * t1463 - t1497 * t1510;
t1513 = -t1498 * t1442 - t1502 * t1512;
t1445 = -t1500 * t1474 + t1504 * t1509;
t1436 = qJDD(3) - t1526;
t1381 = t1497 * t1411 - t1496 * t1412 + t1459 * t1530;
t1439 = -t1492 * pkin(2) - t1491 * pkin(7) - t1445;
t1508 = -t1502 * t1442 + t1498 * t1512;
t1413 = -t1510 * pkin(3) - qJ(4) * t1519 + t1475 * t1524 + qJDD(4) + t1439;
t1506 = qJD(3) ^ 2;
t1483 = t1503 * t1525;
t1482 = -t1506 - t1519;
t1481 = -t1495 * t1491 - t1506;
t1479 = t1505 * qJDD(1) - t1501 * t1507;
t1478 = -t1501 * qJDD(1) - t1505 * t1507;
t1477 = -qJDD(3) + t1483;
t1476 = qJDD(3) + t1483;
t1473 = t1516 * t1491;
t1468 = t1516 * t1492;
t1464 = -0.2e1 * t1515 + t1520;
t1462 = 0.2e1 * t1514 + t1521;
t1452 = -t1506 - t1533;
t1451 = qJD(3) * pkin(4) - t1459 * pkin(8);
t1450 = t1503 * t1477 - t1499 * t1481;
t1449 = -t1499 * t1476 + t1503 * t1482;
t1448 = t1499 * t1477 + t1503 * t1481;
t1447 = t1503 * t1476 + t1499 * t1482;
t1444 = t1504 * t1468 - t1500 * t1473;
t1443 = t1500 * t1468 + t1504 * t1473;
t1437 = -qJDD(3) - t1526;
t1435 = -t1506 - t1534;
t1429 = -t1503 * g(1) - t1522;
t1427 = t1504 * t1450 + t1500 * t1462;
t1426 = t1504 * t1449 - t1500 * t1464;
t1425 = t1500 * t1450 - t1504 * t1462;
t1424 = t1500 * t1449 + t1504 * t1464;
t1423 = -t1532 - t1535;
t1421 = t1442 - t1529;
t1420 = -t1512 + t1528;
t1419 = t1512 + t1528;
t1418 = -t1533 - t1534;
t1417 = -t1500 * t1445 + t1504 * t1446;
t1416 = t1504 * t1445 + t1500 * t1446;
t1415 = t1497 * t1437 - t1496 * t1452;
t1414 = t1496 * t1437 + t1497 * t1452;
t1407 = t1497 * t1435 - t1496 * t1436;
t1406 = t1496 * t1435 + t1497 * t1436;
t1405 = t1517 - t1527;
t1404 = -t1517 - t1527;
t1403 = -t1532 - t1536;
t1402 = -t1499 * t1429 + t1503 * t1430;
t1401 = t1503 * t1429 + t1499 * t1430;
t1400 = t1497 * t1420 - t1496 * t1422;
t1399 = t1496 * t1420 + t1497 * t1422;
t1398 = -t1535 - t1536;
t1397 = t1504 * t1402 + t1500 * t1439;
t1396 = t1500 * t1402 - t1504 * t1439;
t1395 = -t1499 * t1414 + t1503 * t1415;
t1394 = t1503 * t1414 + t1499 * t1415;
t1393 = t1502 * t1405 - t1498 * t1423;
t1392 = t1498 * t1405 + t1502 * t1423;
t1391 = t1518 * t1431 + t1508;
t1390 = -t1537 * t1431 - t1508;
t1389 = -t1518 * t1433 + t1513;
t1388 = t1537 * t1433 - t1513;
t1387 = t1512 * pkin(4) - t1534 * pkin(8) + t1459 * t1451 + t1413;
t1386 = -t1499 * t1406 + t1503 * t1407;
t1385 = t1503 * t1406 + t1499 * t1407;
t1384 = t1502 * t1403 - t1498 * t1404;
t1383 = t1498 * t1403 + t1502 * t1404;
t1380 = t1504 * t1395 + t1500 * t1421;
t1379 = t1500 * t1395 - t1504 * t1421;
t1378 = t1504 * t1386 + t1500 * t1419;
t1377 = t1500 * t1386 - t1504 * t1419;
t1376 = -t1499 * t1399 + t1503 * t1400;
t1375 = t1503 * t1399 + t1499 * t1400;
t1374 = -t1534 * pkin(4) - t1512 * pkin(8) - qJD(3) * t1451 + t1382;
t1373 = t1436 * pkin(4) + t1422 * pkin(8) + t1381;
t1372 = -t1496 * t1392 + t1497 * t1393;
t1371 = t1497 * t1392 + t1496 * t1393;
t1370 = t1504 * t1376 + t1500 * t1418;
t1369 = t1500 * t1376 - t1504 * t1418;
t1368 = t1502 * t1389 - t1498 * t1391;
t1367 = t1498 * t1389 + t1502 * t1391;
t1366 = -t1496 * t1383 + t1497 * t1384;
t1365 = t1497 * t1383 + t1496 * t1384;
t1364 = -t1496 * t1381 + t1497 * t1382;
t1363 = t1497 * t1381 + t1496 * t1382;
t1362 = t1498 * t1373 + t1502 * t1374;
t1361 = t1502 * t1373 - t1498 * t1374;
t1360 = -t1499 * t1371 + t1503 * t1372;
t1359 = t1503 * t1371 + t1499 * t1372;
t1358 = -t1496 * t1367 + t1497 * t1368;
t1357 = t1497 * t1367 + t1496 * t1368;
t1356 = -t1499 * t1365 + t1503 * t1366;
t1355 = t1503 * t1365 + t1499 * t1366;
t1354 = -t1499 * t1363 + t1503 * t1364;
t1353 = t1503 * t1363 + t1499 * t1364;
t1352 = t1504 * t1360 + t1500 * t1390;
t1351 = t1500 * t1360 - t1504 * t1390;
t1350 = t1504 * t1354 + t1500 * t1413;
t1349 = t1500 * t1354 - t1504 * t1413;
t1348 = t1504 * t1356 + t1500 * t1388;
t1347 = t1500 * t1356 - t1504 * t1388;
t1346 = -t1498 * t1361 + t1502 * t1362;
t1345 = t1502 * t1361 + t1498 * t1362;
t1344 = -t1499 * t1357 + t1503 * t1358;
t1343 = t1503 * t1357 + t1499 * t1358;
t1342 = t1504 * t1344 + t1500 * t1398;
t1341 = t1500 * t1344 - t1504 * t1398;
t1340 = -t1496 * t1345 + t1497 * t1346;
t1339 = t1497 * t1345 + t1496 * t1346;
t1338 = -t1499 * t1339 + t1503 * t1340;
t1337 = t1503 * t1339 + t1499 * t1340;
t1336 = t1504 * t1338 + t1500 * t1387;
t1335 = t1500 * t1338 - t1504 * t1387;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1447, t1448, 0, t1401, 0, 0, 0, 0, 0, 0, t1385, t1394, t1375, t1353, 0, 0, 0, 0, 0, 0, t1355, t1359, t1343, t1337; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1479, t1478, 0, t1501 * t1484 + t1505 * t1485, 0, 0, 0, 0, 0, 0, t1540, t1541, 0, t1505 * t1416 + t1501 * t1417, 0, 0, 0, 0, 0, 0, t1505 * t1424 + t1501 * t1426, t1505 * t1425 + t1501 * t1427, t1505 * t1443 + t1501 * t1444, t1505 * t1396 + t1501 * t1397, 0, 0, 0, 0, 0, 0, t1505 * t1377 + t1501 * t1378, t1505 * t1379 + t1501 * t1380, t1505 * t1369 + t1501 * t1370, t1505 * t1349 + t1501 * t1350, 0, 0, 0, 0, 0, 0, t1505 * t1347 + t1501 * t1348, t1505 * t1351 + t1501 * t1352, t1505 * t1341 + t1501 * t1342, t1505 * t1335 + t1501 * t1336; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t1478, t1479, 0, -t1505 * t1484 + t1501 * t1485, 0, 0, 0, 0, 0, 0, -t1541, t1540, 0, t1501 * t1416 - t1505 * t1417, 0, 0, 0, 0, 0, 0, t1501 * t1424 - t1505 * t1426, t1501 * t1425 - t1505 * t1427, t1501 * t1443 - t1505 * t1444, t1501 * t1396 - t1505 * t1397, 0, 0, 0, 0, 0, 0, t1501 * t1377 - t1505 * t1378, t1501 * t1379 - t1505 * t1380, t1501 * t1369 - t1505 * t1370, t1501 * t1349 - t1505 * t1350, 0, 0, 0, 0, 0, 0, t1501 * t1347 - t1505 * t1348, t1501 * t1351 - t1505 * t1352, t1501 * t1341 - t1505 * t1342, t1501 * t1335 - t1505 * t1336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1507, -qJDD(1), 0, t1484, 0, 0, 0, 0, 0, 0, t1511, t1471, 0, t1417, 0, 0, 0, 0, 0, 0, t1426, t1427, t1444, t1397, 0, 0, 0, 0, 0, 0, t1378, t1380, t1370, t1350, 0, 0, 0, 0, 0, 0, t1348, t1352, t1342, t1336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1507, 0, t1485, 0, 0, 0, 0, 0, 0, -t1471, t1511, 0, t1416, 0, 0, 0, 0, 0, 0, t1424, t1425, t1443, t1396, 0, 0, 0, 0, 0, 0, t1377, t1379, t1369, t1349, 0, 0, 0, 0, 0, 0, t1347, t1351, t1341, t1335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1447, t1448, 0, t1401, 0, 0, 0, 0, 0, 0, t1385, t1394, t1375, t1353, 0, 0, 0, 0, 0, 0, t1355, t1359, t1343, t1337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1491, -t1492, 0, t1446, 0, 0, 0, 0, 0, 0, t1449, t1450, t1468, t1402, 0, 0, 0, 0, 0, 0, t1386, t1395, t1376, t1354, 0, 0, 0, 0, 0, 0, t1356, t1360, t1344, t1338; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1492, -t1491, 0, t1445, 0, 0, 0, 0, 0, 0, t1464, -t1462, t1473, -t1439, 0, 0, 0, 0, 0, 0, -t1419, -t1421, -t1418, -t1413, 0, 0, 0, 0, 0, 0, -t1388, -t1390, -t1398, -t1387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1447, t1448, 0, t1401, 0, 0, 0, 0, 0, 0, t1385, t1394, t1375, t1353, 0, 0, 0, 0, 0, 0, t1355, t1359, t1343, t1337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1482, t1477, t1520, t1430, 0, 0, 0, 0, 0, 0, t1407, t1415, t1400, t1364, 0, 0, 0, 0, 0, 0, t1366, t1372, t1358, t1340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1476, t1481, -t1521, t1429, 0, 0, 0, 0, 0, 0, t1406, t1414, t1399, t1363, 0, 0, 0, 0, 0, 0, t1365, t1371, t1357, t1339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1464, t1462, -t1473, t1439, 0, 0, 0, 0, 0, 0, t1419, t1421, t1418, t1413, 0, 0, 0, 0, 0, 0, t1388, t1390, t1398, t1387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1435, t1437, t1420, t1382, 0, 0, 0, 0, 0, 0, t1384, t1393, t1368, t1346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1436, t1452, t1422, t1381, 0, 0, 0, 0, 0, 0, t1383, t1392, t1367, t1345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1419, t1421, t1418, t1413, 0, 0, 0, 0, 0, 0, t1388, t1390, t1398, t1387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1403, t1405, t1389, t1362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1404, t1423, t1391, t1361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1388, t1390, t1398, t1387;];
f_new_reg = t1;
