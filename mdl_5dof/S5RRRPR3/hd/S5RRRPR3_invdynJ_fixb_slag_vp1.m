% Calculate vector of inverse dynamics joint torques for
% S5RRRPR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 12:10
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRRPR3_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR3_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR3_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR3_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR3_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR3_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRPR3_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRPR3_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRPR3_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 12:08:50
% EndTime: 2020-01-03 12:09:28
% DurationCPUTime: 31.06s
% Computational Cost: add. (23902->838), mult. (17623->1014), div. (0->0), fcn. (13787->10), ass. (0->464)
t420 = qJ(3) + pkin(9);
t406 = sin(t420);
t407 = cos(t420);
t312 = Icges(5,5) * t407 - Icges(5,6) * t406;
t423 = sin(qJ(3));
t425 = cos(qJ(3));
t359 = Icges(4,5) * t425 - Icges(4,6) * t423;
t801 = t312 + t359;
t806 = Icges(4,3) + Icges(5,3);
t421 = qJ(1) + qJ(2);
t409 = sin(t421);
t805 = t801 * t409;
t410 = cos(t421);
t621 = t407 * t410;
t623 = t406 * t410;
t227 = Icges(5,4) * t621 - Icges(5,2) * t623 + Icges(5,6) * t409;
t613 = t410 * t425;
t614 = t410 * t423;
t248 = Icges(4,4) * t613 - Icges(4,2) * t614 + Icges(4,6) * t409;
t804 = -t227 * t406 - t248 * t423;
t760 = -t806 * t410 + t805;
t759 = Icges(4,5) * t613 + Icges(5,5) * t621 - Icges(4,6) * t614 - Icges(5,6) * t623 + t806 * t409;
t347 = Icges(5,4) * t623;
t229 = Icges(5,1) * t621 + Icges(5,5) * t409 - t347;
t380 = Icges(4,4) * t614;
t250 = Icges(4,1) * t613 + Icges(4,5) * t409 - t380;
t795 = -t229 * t407 - t250 * t425 - t804;
t667 = Icges(5,4) * t406;
t316 = Icges(5,1) * t407 - t667;
t472 = t316 * t409;
t228 = -Icges(5,5) * t410 + t472;
t668 = Icges(4,4) * t423;
t363 = Icges(4,1) * t425 - t668;
t473 = t363 * t409;
t249 = -Icges(4,5) * t410 + t473;
t617 = t409 * t425;
t622 = t407 * t409;
t762 = -t228 * t622 - t249 * t617;
t803 = t229 * t622 + t250 * t617;
t388 = Icges(5,4) * t407;
t496 = -Icges(5,2) * t406 + t388;
t226 = -Icges(5,6) * t410 + t409 * t496;
t411 = Icges(4,4) * t425;
t497 = -Icges(4,2) * t423 + t411;
t470 = t497 * t409;
t247 = -Icges(4,6) * t410 + t470;
t761 = t226 * t623 + t247 * t614;
t311 = Icges(5,5) * t406 + Icges(5,6) * t407;
t358 = Icges(4,5) * t423 + Icges(4,6) * t425;
t802 = t311 + t358;
t313 = Icges(5,2) * t407 + t667;
t360 = Icges(4,2) * t425 + t668;
t725 = Icges(4,1) * t423 + t411;
t727 = Icges(5,1) * t406 + t388;
t800 = -t313 * t406 - t360 * t423 + t407 * t727 + t425 * t725;
t618 = t409 * t423;
t624 = t406 * t409;
t744 = -t226 * t624 - t247 * t618 - t760 * t410 - t762;
t743 = t227 * t624 + t248 * t618 + t759 * t410 - t803;
t742 = -t228 * t621 - t249 * t613 - t760 * t409 + t761;
t741 = t759 * t409 - t795 * t410;
t799 = t313 * t407 + t360 * t425 + t406 * t727 + t423 * t725;
t755 = -t228 * t407 - t249 * t425;
t754 = t226 * t406 + t247 * t423;
t734 = t226 * t407 + t228 * t406 + t247 * t425 + t249 * t423;
t262 = t311 * t410;
t277 = t358 * t410;
t764 = t800 * t409 - t262 - t277;
t630 = t358 * t409;
t633 = t311 * t409;
t763 = -t313 * t623 - t360 * t614 + t613 * t725 + t621 * t727 + t630 + t633;
t798 = -t754 - t755;
t733 = t227 * t407 + t229 * t406 + t248 * t425 + t250 * t423;
t419 = qJD(1) + qJD(2);
t797 = t802 * qJD(3) - t806 * t419;
t615 = t410 * t419;
t372 = pkin(7) * t615;
t619 = t409 * t419;
t273 = pkin(2) * t619 - t372;
t567 = qJD(3) * t419;
t284 = -qJDD(3) * t409 - t410 * t567;
t678 = rSges(5,1) * t406;
t768 = rSges(5,2) * t407;
t318 = t678 + t768;
t416 = qJDD(1) + qJDD(2);
t424 = sin(qJ(1));
t413 = t424 * pkin(1);
t426 = cos(qJ(1));
t428 = qJD(1) ^ 2;
t653 = pkin(1) * qJDD(1);
t512 = -t413 * t428 + t426 * t653;
t563 = qJD(4) * t419;
t681 = pkin(3) * t423;
t440 = -qJDD(4) * t410 + t284 * t681 + t409 * t563 + t512;
t682 = pkin(2) * t410;
t325 = pkin(7) * t409 + t682;
t414 = t425 * pkin(3);
t398 = t414 + pkin(2);
t353 = t410 * t398;
t422 = -qJ(4) - pkin(7);
t218 = t682 - t353 + (pkin(7) + t422) * t409;
t349 = rSges(5,2) * t623;
t558 = rSges(5,1) * t621;
t511 = -t349 + t558;
t232 = rSges(5,3) * t409 + t511;
t601 = -t218 + t232;
t543 = t325 + t601;
t427 = qJD(3) ^ 2;
t560 = t427 * t414;
t319 = t407 * rSges(5,1) - rSges(5,2) * t406;
t296 = t319 * qJD(3);
t570 = qJD(3) * t296;
t385 = t410 * t422;
t390 = qJD(4) * t409;
t566 = qJD(3) * t423;
t537 = t410 * t566;
t518 = pkin(3) * t537;
t151 = t518 + t372 - t390 + (t385 + (-pkin(2) + t398) * t409) * t419;
t568 = qJD(3) * t410;
t554 = rSges(5,2) * t624;
t584 = rSges(5,3) * t615 + t419 * t554;
t610 = -t568 * t768 - (t406 * t568 + t407 * t619) * rSges(5,1) + t584 - t151;
t37 = t284 * t318 + (-t560 - t570) * t409 + (-t273 + t610) * t419 + t543 * t416 + t440;
t779 = t37 - g(2);
t796 = -t801 * qJD(3) + t800 * t419;
t794 = -t741 * t409 - t742 * t410;
t793 = -t743 * t409 - t744 * t410;
t293 = t496 * qJD(3);
t294 = t316 * qJD(3);
t328 = t497 * qJD(3);
t329 = t363 * qJD(3);
t792 = t799 * qJD(3) + t293 * t406 - t294 * t407 + t328 * t423 - t329 * t425 - t802 * t419;
t791 = t764 * t419;
t790 = -t797 * t409 - t798 * t419 + t801 * t615;
t789 = (-t795 + t805) * t419 + t797 * t410;
t680 = pkin(4) * t406;
t507 = t680 + t681;
t317 = t507 * qJD(3);
t274 = t409 * t317;
t408 = qJ(5) + t420;
t396 = cos(t408);
t674 = rSges(6,2) * t396;
t395 = sin(t408);
t677 = rSges(6,1) * t395;
t304 = t674 + t677;
t418 = qJD(3) + qJD(5);
t320 = t409 * t418;
t564 = qJD(4) * t410;
t788 = -t320 * t304 - t274 - t564;
t726 = t409 * rSges(3,1) + t410 * rSges(3,2);
t271 = t726 * t419;
t673 = pkin(1) * qJD(1);
t552 = t424 * t673;
t255 = t552 + t271;
t787 = t763 * t419;
t469 = t496 * t419;
t714 = -Icges(5,6) * t419 + qJD(3) * t313;
t143 = t409 * t469 + t410 * t714;
t707 = -Icges(5,5) * t419 + qJD(3) * t727;
t145 = t410 * t707 + t419 * t472;
t712 = -Icges(4,6) * t419 + qJD(3) * t360;
t161 = t410 * t712 + t419 * t470;
t706 = -Icges(4,5) * t419 + qJD(3) * t725;
t163 = t410 * t706 + t419 * t473;
t786 = qJD(3) * t733 - t143 * t406 + t145 * t407 - t161 * t423 + t163 * t425 - t419 * t759;
t144 = -t409 * t714 + t410 * t469;
t146 = t316 * t615 - t409 * t707;
t162 = -t409 * t712 + t497 * t615;
t164 = t363 * t615 - t409 * t706;
t785 = t734 * qJD(3) + t144 * t406 - t146 * t407 + t162 * t423 - t164 * t425 - t760 * t419;
t666 = Icges(6,4) * t395;
t302 = Icges(6,1) * t396 - t666;
t471 = t302 * t409;
t215 = -Icges(6,5) * t410 + t471;
t627 = t395 * t410;
t332 = Icges(6,4) * t627;
t625 = t396 * t410;
t216 = Icges(6,1) * t625 + Icges(6,5) * t409 - t332;
t299 = Icges(6,2) * t396 + t666;
t616 = t410 * t418;
t386 = Icges(6,4) * t396;
t495 = -Icges(6,2) * t395 + t386;
t728 = Icges(6,1) * t395 + t386;
t751 = t728 + t495;
t434 = t320 * (-Icges(6,2) * t625 + t216 - t332) - t616 * (-t299 * t409 + t215) + t419 * t751;
t468 = t495 * t409;
t213 = -Icges(6,6) * t410 + t468;
t214 = Icges(6,4) * t625 - Icges(6,2) * t627 + Icges(6,6) * t409;
t698 = t320 * (t410 * t728 + t214) - t616 * (t409 * t728 + t213) + t419 * (t299 - t302);
t784 = t434 * t395 + t396 * t698;
t445 = t409 * (-Icges(5,2) * t621 + t229 - t347) - t410 * (-t313 * t409 + t228);
t703 = -t410 * t226 + t227 * t409;
t783 = -t445 * t406 - t407 * t703;
t310 = t398 * t615;
t551 = pkin(3) * t566;
t417 = -pkin(8) + t422;
t571 = t417 - t422;
t573 = pkin(4) * t407 + t414;
t340 = pkin(2) + t573;
t590 = t340 * t615 - t274;
t110 = -t310 + (-t419 * t571 + t551) * t409 + t590;
t557 = t418 * t677;
t556 = rSges(6,1) * t625;
t585 = rSges(6,3) * t619 + t419 * t556;
t128 = -t409 * t557 + (-t320 * t396 - t395 * t615) * rSges(6,2) + t585;
t357 = t409 * t567;
t562 = -qJDD(3) - qJDD(5);
t206 = qJD(5) * t619 + t410 * t562 + t357;
t387 = t396 * rSges(6,1);
t675 = rSges(6,2) * t395;
t305 = t387 - t675;
t260 = t305 * t418;
t285 = -qJDD(3) * t410 + t357;
t519 = t310 - t564;
t574 = pkin(2) * t615 + pkin(7) * t619;
t152 = (-t419 * t422 - t551) * t409 + t519 - t574;
t397 = t409 * pkin(2);
t324 = -pkin(7) * t410 + t397;
t577 = t409 * t398 + t385;
t217 = -t324 + t577;
t415 = t426 * pkin(1);
t572 = t428 * t415 + t424 * t653;
t515 = t416 * t324 + t419 * t574 + t572;
t439 = -qJDD(4) * t409 + t419 * t152 + t416 * t217 + t410 * t560 + t515;
t589 = t409 * t340 + t410 * t417;
t179 = -t577 + t589;
t626 = t396 * t409;
t628 = t395 * t409;
t219 = rSges(6,1) * t626 - rSges(6,2) * t628 - rSges(6,3) * t410;
t609 = t179 + t219;
t620 = t407 * t427;
t13 = -t285 * t681 - t206 * t304 + t260 * t616 + t609 * t416 + (-t285 * t406 + t410 * t620) * pkin(4) + (t110 + t128 - t564) * t419 + t439;
t782 = t13 - g(3);
t205 = t409 * t562 - t419 * t616;
t510 = -rSges(6,2) * t627 + t556;
t220 = rSges(6,3) * t409 + t510;
t290 = t410 * t340;
t180 = t409 * t571 - t290 + t353;
t608 = -t180 - t218;
t545 = t220 + t608;
t516 = t325 + t545;
t339 = rSges(6,2) * t625;
t553 = t419 * t675;
t586 = rSges(6,3) * t615 + t409 * t553;
t127 = t418 * t339 + (t395 * t616 + t396 * t619) * rSges(6,1) - t586;
t275 = t410 * t317;
t612 = t518 - t275 - (t571 * t410 + (t340 - t398) * t409) * t419 - t151;
t548 = -t127 + t612;
t14 = -t409 * t560 + t205 * t304 - t260 * t320 + (t284 * t406 - t409 * t620) * pkin(4) + (-t273 + t548) * t419 + t516 * t416 + t440;
t781 = t14 - g(2);
t569 = qJD(3) * t409;
t583 = rSges(5,3) * t619 + t419 * t558;
t149 = -t569 * t678 + (-t406 * t615 - t407 * t569) * rSges(5,2) + t583;
t348 = rSges(5,1) * t622;
t231 = -rSges(5,3) * t410 + t348 - t554;
t529 = t318 + t681;
t36 = t149 * t419 + t231 * t416 + (-t563 + t570) * t410 - t529 * t285 + t439;
t780 = t36 - g(3);
t565 = qJD(3) * t425;
t538 = t409 * t565;
t549 = t419 * t614;
t559 = rSges(4,1) * t613;
t578 = rSges(4,3) * t619 + t419 * t559;
t166 = -rSges(4,1) * t409 * t566 + (-t538 - t549) * rSges(4,2) + t578;
t555 = rSges(4,2) * t618;
t509 = rSges(4,1) * t617 - t555;
t251 = -rSges(4,3) * t410 + t509;
t679 = rSges(4,1) * t425;
t376 = -rSges(4,2) * t423 + t679;
t341 = t376 * qJD(3);
t374 = rSges(4,1) * t423 + rSges(4,2) * t425;
t71 = t166 * t419 + t251 * t416 - t285 * t374 + t341 * t568 + t515;
t778 = t71 - g(3);
t550 = t419 * t617;
t579 = -rSges(4,3) * t615 - t419 * t555;
t165 = rSges(4,2) * t410 * t565 + (t537 + t550) * rSges(4,1) + t579;
t382 = rSges(4,2) * t614;
t252 = rSges(4,3) * t409 - t382 + t559;
t591 = t252 + t325;
t72 = -t341 * t569 + t284 * t374 + (-t165 - t273) * t419 + t591 * t416 + t512;
t777 = t72 - g(2);
t272 = rSges(3,1) * t615 - rSges(3,2) * t619;
t776 = t272 * t419 + t416 * t726 - g(3) + t572;
t323 = rSges(3,1) * t410 - t409 * rSges(3,2);
t775 = -t271 * t419 + t323 * t416 - g(2) + t512;
t774 = qJD(3) * t793 + t791;
t773 = qJD(3) * t794 - t787;
t772 = qJD(3) * t798 + t144 * t407 + t146 * t406 + t162 * t425 + t164 * t423;
t771 = qJD(3) * t795 + t143 * t407 + t145 * t406 + t161 * t425 + t163 * t423;
t770 = t409 * t796 + t410 * t792;
t769 = -t409 * t792 + t410 * t796;
t403 = t426 * t673;
t767 = t409 * t529;
t750 = -qJD(3) * t767 - t564;
t438 = t403 + t750;
t87 = t419 * t543 + t438;
t506 = t87 * t529;
t575 = t725 + t497;
t576 = t360 - t363;
t766 = (t423 * t575 + t425 * t576) * t419;
t581 = t727 + t496;
t582 = t313 - t316;
t765 = (t406 * t581 + t407 * t582) * t419;
t203 = t419 * t218;
t295 = t419 * t325;
t731 = t295 - t203;
t758 = -t419 * t232 + t519 + t583 - t731;
t233 = t419 * t252;
t542 = t374 * t569;
t757 = -rSges(4,2) * t549 - t233 - t295 + t542 + t574 + t578;
t204 = t419 * t220;
t756 = t419 * t180 - t204 + t585 + t590 - t731;
t753 = t149 * t409 + t410 * t610;
t718 = -t374 * t568 - t419 * (t251 + t324);
t137 = t552 - t718;
t138 = t419 * t591 + t403 - t542;
t282 = t374 * t409;
t283 = t374 * t410;
t752 = -t137 * t282 - t138 * t283;
t749 = t409 * t790 - t410 * t785;
t748 = t409 * t789 + t410 * t786;
t747 = t409 * t785 + t410 * t790;
t746 = -t409 * t786 + t410 * t789;
t508 = -t390 + t552;
t602 = t217 + t324;
t737 = t419 * (t231 + t602);
t86 = t529 * t568 + t508 + t737;
t745 = t86 * t410;
t298 = Icges(6,5) * t396 - Icges(6,6) * t395;
t211 = -Icges(6,3) * t410 + t298 * t409;
t644 = t214 * t395;
t491 = -t216 * t396 + t644;
t474 = -t211 + t491;
t739 = t616 * t474;
t732 = -t275 + t586;
t730 = t319 + t414;
t268 = rSges(5,1) * t623 + rSges(5,2) * t621;
t384 = pkin(3) * t614;
t729 = t384 + t268;
t634 = t299 * t418;
t724 = -Icges(6,6) * t419 + t634;
t243 = t304 * t409;
t244 = rSges(6,1) * t627 + t339;
t195 = t217 * t569;
t47 = t219 * t320 + t220 * t616 + t195 + (t179 * t409 + t410 * t608) * qJD(3);
t223 = t616 * t304;
t517 = t602 + t609;
t69 = t419 * t517 + t507 * t568 + t223 + t508;
t722 = -t69 * (-t419 * t243 + t305 * t616) - t47 * (-t243 * t320 - t244 * t616);
t721 = (-t409 ^ 2 - t410 ^ 2) * t681;
t297 = Icges(6,5) * t395 + Icges(6,6) * t396;
t720 = -Icges(6,3) * t419 + t297 * t418;
t719 = -Icges(6,5) * t419 + t418 * t728;
t520 = -t302 * t418 + t634;
t521 = t751 * t418;
t701 = -t297 * t419 + t395 * t521 + t396 * t520;
t525 = t213 * t418 - t302 * t615 + t409 * t719;
t527 = t215 * t418 - t409 * t724 + t495 * t615;
t700 = -t211 * t419 + t395 * t527 + t396 * t525;
t212 = Icges(6,5) * t625 - Icges(6,6) * t627 + Icges(6,3) * t409;
t526 = t214 * t418 + t410 * t719 + t419 * t471;
t528 = t216 * t418 - t410 * t724 - t419 * t468;
t699 = -t212 * t419 + t395 * t528 + t396 * t526;
t697 = t205 / 0.2e1;
t696 = t206 / 0.2e1;
t694 = t284 / 0.2e1;
t693 = t285 / 0.2e1;
t692 = -t320 / 0.2e1;
t691 = t320 / 0.2e1;
t690 = t616 / 0.2e1;
t689 = -t616 / 0.2e1;
t688 = -t409 / 0.2e1;
t687 = -t410 / 0.2e1;
t686 = t416 / 0.2e1;
t685 = -t419 / 0.2e1;
t684 = t419 / 0.2e1;
t683 = rSges(4,3) + pkin(7);
t433 = t403 + t788;
t70 = t419 * t516 + t433;
t672 = t419 * t70;
t636 = t297 * t409;
t116 = -t299 * t627 + t625 * t728 + t636;
t652 = t116 * t419;
t645 = t213 * t395;
t643 = t215 * t396;
t238 = t297 * t410;
t465 = t298 * t419;
t632 = t312 * t419;
t631 = t507 * t410;
t629 = t359 * t419;
t611 = t152 * t569 + t285 * t218;
t596 = t409 * t725 + t247;
t595 = t410 * t725 + t248;
t594 = -t360 * t409 + t249;
t593 = -Icges(4,2) * t613 + t250 - t380;
t561 = pkin(3) * t618;
t547 = t219 * t615 + (t128 - t204) * t409;
t546 = t217 * t615 + (t152 + t203) * t409;
t535 = t619 / 0.2e1;
t534 = -t615 / 0.2e1;
t533 = -t569 / 0.2e1;
t532 = t569 / 0.2e1;
t531 = -t568 / 0.2e1;
t530 = t568 / 0.2e1;
t524 = -t212 - t645;
t523 = -t212 + t643;
t256 = t323 * t419 + t403;
t377 = rSges(2,1) * t426 - t424 * rSges(2,2);
t375 = rSges(2,1) * t424 + rSges(2,2) * t426;
t492 = t137 * t410 - t138 * t409;
t118 = -t214 * t396 - t216 * t395;
t484 = t251 * t409 + t252 * t410;
t483 = -t299 * t395 + t396 * t728;
t477 = -t304 - t507;
t464 = t231 * t409 + t410 * t601;
t458 = t238 * t320 - t616 * t636 - t465;
t455 = -t409 * t465 - t410 * t720 + t419 * t491;
t454 = -t410 * t465 + t720 * t409 + (t643 - t645) * t419;
t449 = -t298 * t418 + t419 * t483;
t444 = t423 * t594 + t425 * t596;
t443 = t423 * t593 + t425 * t595;
t177 = t231 + t577;
t155 = t219 + t589;
t199 = -t410 * t683 + t397 + t509;
t178 = t353 + (rSges(5,3) - t422) * t409 + t511;
t156 = t290 + (rSges(6,3) - t417) * t409 + t510;
t200 = -t382 + (pkin(2) + t679) * t410 + t683 * t409;
t115 = t409 * t483 - t238;
t117 = t213 * t396 + t215 * t395;
t18 = t454 * t409 + t410 * t700;
t19 = t455 * t409 - t410 * t699;
t20 = -t409 * t700 + t454 * t410;
t21 = t409 * t699 + t455 * t410;
t113 = t115 * t419;
t182 = t215 * t626;
t89 = -t211 * t410 - t213 * t628 + t182;
t183 = t216 * t626;
t90 = t212 * t410 + t214 * t628 - t183;
t38 = -t320 * t90 - t616 * t89 + t113;
t184 = t213 * t627;
t91 = -t211 * t409 - t215 * t625 + t184;
t92 = t212 * t409 - t410 * t491;
t39 = -t320 * t92 - t616 * t91 - t652;
t56 = t449 * t409 + t410 * t701;
t57 = -t409 * t701 + t449 * t410;
t58 = -t395 * t525 + t396 * t527;
t59 = t395 * t526 - t396 * t528;
t437 = (-t116 * t416 - t18 * t616 - t19 * t320 + t205 * t92 + t206 * t91 + t419 * t56) * t688 + ((-t118 * t419 - t58) * t410 + (t117 * t419 - t59) * t409) * t684 + (t458 * t409 + t410 * t784) * t691 + (-t409 * t784 + t458 * t410) * t690 + (t115 * t416 - t20 * t616 + t205 * t90 + t206 * t89 - t21 * t320 + t419 * t57) * t687 + (-t395 * t698 + t396 * t434) * t685 + ((-t419 * t92 - t18) * t410 + (t419 * t91 - t19) * t409) * t692 + t38 * t535 + t39 * t534 + ((-t419 * t90 - t20) * t410 + (t419 * t89 - t21) * t409) * t689 + (-t409 * t92 - t410 * t91) * t697 + (-t409 * t90 - t410 * t89) * t696 + (-t117 * t410 - t118 * t409) * t686;
t436 = -rSges(4,1) * t550 - t273 - t579;
t432 = t752 * qJD(3);
t431 = (t70 * (-t417 * t419 - t418 * t674 - t557) + t69 * (-qJD(4) - t553)) * t410 + (-t69 * t304 * t418 + (t70 * (-t340 - t387) - t69 * t417) * t419) * t409;
t430 = t118 * t697 + (t113 - (t409 * t524 + t182 + t92) * t616 + (t183 - t184 + t91 + (t211 - t644) * t409) * t320 + (t320 * t523 - t739) * t410) * t691 - t205 * t116 / 0.2e1 + (t115 + t117) * t696 - t763 * t284 / 0.2e1 - t733 * t694 + (t39 + t652 - (-t184 + t90) * t616 + (-t182 + t89) * t320 + (-t320 * t474 - t523 * t616) * t410 + (-t320 * t524 + t739) * t409) * t690 + (t58 + t57) * t689 + ((((t760 - t795) * t410 + t762 - t741) * t410 + ((t760 + t804) * t409 + (t754 - t755) * t410 - t761 + t742 + t803) * t409) * qJD(3) + t791) * t532 + (t59 + t56 + t38) * t692 + (t800 * qJD(3) + t293 * t407 + t294 * t406 + t328 * t425 + t329 * t423 - t395 * t520 + t396 * t521) * t419 + (t764 + t734) * t693 + (t769 + t772) * t531 + ((((t755 + t759) * t410 + t761 - t743) * t410 + ((t754 + t759) * t409 + t762 + t744) * t409) * qJD(3) + t773 + t787) * t530 + (t299 * t396 + t395 * t728 + Icges(3,3) + t799) * t416 + (t770 + t771 + t774) * t533;
t429 = (t87 * (-t348 - t577) + t86 * (-t409 * t422 - t349)) * t419 + (-t410 * t506 - t767 * t86) * qJD(3);
t303 = t409 * t507;
t267 = t318 * t409;
t236 = -t384 + t631;
t235 = -t303 + t561;
t222 = t320 * t305;
t201 = t409 * t219;
t198 = t409 * t217;
t150 = t484 * qJD(3);
t83 = qJD(3) * t464 + t195;
t7 = -t127 * t616 + t128 * t320 + t180 * t285 - t205 * t219 - t206 * t220 + (-t179 - t217) * t284 + (t110 * t409 + t410 * t612) * qJD(3) + t611;
t1 = [Icges(2,3) * qJDD(1) + t430 + (t775 * (t323 + t415) + t776 * (t413 + t726) + (-t256 + t272 + t403) * t255) * m(3) + ((t375 ^ 2 + t377 ^ 2) * qJDD(1) - g(2) * t377 - g(3) * t375) * m(2) + (t70 * (-t508 + t732) + t431 + (t70 - t433 + t403 + t756) * t69 + t781 * (t415 + t156) + t782 * (t155 + t413)) * m(6) + (t87 * (-t508 + t584) + t429 + (t403 + t87 - t438 + t758) * t86 + t779 * (t415 + t178) + t780 * (t177 + t413)) * m(5) + (t138 * (t436 - t552) + t432 + t777 * (t415 + t200) + t778 * (t413 + t199) + (t138 + t757) * t137) * m(4); t430 + (t517 * t672 + t431 + t781 * t156 + t782 * t155 + (t756 - t788) * t69 + (t223 + t732 + t275) * t70) * m(6) + (t506 * t568 + t429 + (-t750 + t758) * t86 + t779 * t178 + t780 * t177 + (t584 + t737) * t87) * m(5) + (t432 + t777 * t200 + t778 * t199 + (t436 - t718) * t138 + t757 * t137) * m(4) + (t255 * t272 - t256 * t271 + (-t255 * t419 + t775) * t323 + (t256 * t419 + t776) * t726) * m(3); t437 + t794 * t694 + t793 * t693 + (t770 * t419 - t763 * t416 + t742 * t285 + t741 * t284 + (t748 * t409 + t749 * t410) * qJD(3)) * t688 + (t769 * t419 + t764 * t416 + t744 * t285 + t743 * t284 + (t746 * t409 + t747 * t410) * qJD(3)) * t687 + (t409 * t733 - t410 * t734) * t686 + ((-t406 * t582 + t407 * t581 - t423 * t576 + t425 * t575) * t419 + ((t409 * t593 - t410 * t594) * t425 + (-t409 * t595 + t410 * t596) * t423 - t406 * t703 + t407 * t445) * qJD(3)) * t685 + ((t419 * t733 - t772) * t410 + (t419 * t734 - t771) * t409) * t684 + t774 * t535 + t773 * t534 + ((-t419 * t741 + t749) * t410 + (t419 * t742 + t748) * t409) * t533 + ((t277 * t569 - t629) * t409 + (t766 + (-t444 * t410 + (-t630 + t443) * t409) * qJD(3)) * t410 + (t262 * t569 - t632) * t409 + (t765 + (-t409 * t633 - t783) * qJD(3)) * t410) * t532 + ((-t419 * t743 + t747) * t410 + (t419 * t744 + t746) * t409) * t531 + ((-t568 * t630 - t629) * t410 + (-t766 + (-t443 * t409 + (t277 + t444) * t410) * qJD(3)) * t409 + (-t568 * t633 - t632) * t410 + (-t765 + (t410 * t262 + t783) * qJD(3)) * t409) * t530 + (-g(1) * (t305 + t573) - g(2) * (-t303 - t243) - g(3) * (t244 + t631) + t7 * (t198 + t201) + t47 * (t546 + t547) + t13 * t384 + (t7 * t545 + t47 * t548 + t13 * (t304 + t680) + t69 * t260 + (t47 * t179 + t477 * t70) * t419) * t410 + (t7 * t179 + t47 * t110 + t14 * t477 + t70 * (-pkin(3) * t565 - t260) + (t47 * t180 + t477 * t69) * t419) * t409 + t70 * t222 - (t70 * (-t236 - t244 - t384) + t69 * (t235 - t561)) * t419 - (t47 * (-t236 * t410 + t721) + (t47 * t235 - t70 * t414) * t409) * qJD(3) + t722) * m(6) + (-g(1) * t730 - g(3) * t729 + (-t232 * t285 + (-t217 - t231) * t284 + t753 * qJD(3) + t611) * (t198 + t464) + t83 * (t546 + t753) - t87 * pkin(3) * t538 + t36 * (t318 * t410 + t384) - (t83 * (-t268 * t410 + t721) + t319 * t745 + (-t83 * t267 - t730 * t87) * t409) * qJD(3) + ((t83 * t231 - t506) * t410 + (-t83 * t232 - t529 * t86) * t409 + t87 * t729 - t86 * (-t267 - t561)) * t419 + (-t87 * t409 + t745) * t296 - t779 * t767) * m(5) + ((-t251 * t284 - t252 * t285 + (-t165 * t410 + t166 * t409) * qJD(3)) * t484 + t150 * ((t251 * t419 - t165) * t410 + (t166 - t233) * t409) + t492 * t341 + ((-t138 * t419 + t71) * t410 + (-t137 * t419 - t72) * t409) * t374 - t752 * t419 - (t150 * (-t282 * t409 - t283 * t410) + t492 * t376) * qJD(3) - g(1) * t376 + g(2) * t282 - g(3) * t283) * m(4); (-m(5) - m(6)) * (-g(2) * t410 - g(3) * t409) + m(5) * (-t36 * t409 - t37 * t410) + m(6) * (-t13 * t409 - t14 * t410); t437 + (t7 * (t220 * t410 + t201) + t47 * (-t127 * t410 + t547) + (-t409 * t70 + t410 * t69) * t260 + ((t13 - t672) * t410 + (-t419 * t69 - t14) * t409) * t304 - t70 * (-t244 * t419 - t222) - g(1) * t305 + g(2) * t243 - g(3) * t244 + t722) * m(6);];
tau = t1;
