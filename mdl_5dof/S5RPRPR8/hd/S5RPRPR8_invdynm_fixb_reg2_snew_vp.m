% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRPR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:22
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRPR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR8_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR8_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR8_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:22:33
% EndTime: 2019-12-31 18:22:48
% DurationCPUTime: 15.97s
% Computational Cost: add. (78332->656), mult. (163454->920), div. (0->0), fcn. (107117->10), ass. (0->447)
t1139 = sin(qJ(1));
t1142 = cos(qJ(1));
t1109 = g(1) * t1142 + g(2) * t1139;
t1143 = qJD(1) ^ 2;
t1092 = -pkin(1) * t1143 - t1109;
t1133 = sin(pkin(8));
t1135 = cos(pkin(8));
t1108 = g(1) * t1139 - t1142 * g(2);
t1155 = qJDD(1) * pkin(1) + t1108;
t1035 = t1092 * t1133 - t1135 * t1155;
t1036 = t1135 * t1092 + t1133 * t1155;
t1170 = t1035 * t1133 + t1135 * t1036;
t966 = t1035 * t1135 - t1036 * t1133;
t1206 = t1142 * t966;
t1242 = -t1139 * t1170 + t1206;
t1209 = t1139 * t966;
t1241 = t1142 * t1170 + t1209;
t1099 = qJDD(1) * t1133 + t1135 * t1143;
t1100 = qJDD(1) * t1135 - t1133 * t1143;
t1039 = -t1099 * t1139 + t1142 * t1100;
t1218 = g(3) - qJDD(2);
t1067 = -qJ(2) * t1099 + t1135 * t1218;
t1226 = -qJ(2) * t1100 - t1133 * t1218;
t1240 = -pkin(5) * t1039 - t1067 * t1139 + t1142 * t1226;
t1227 = t1142 * t1099 + t1100 * t1139;
t1239 = -pkin(5) * t1227 + t1067 * t1142 + t1139 * t1226;
t1137 = sin(qJ(5));
t1138 = sin(qJ(3));
t1203 = qJD(1) * t1138;
t1121 = qJD(3) * t1203;
t1141 = cos(qJ(3));
t1184 = t1141 * qJDD(1);
t1096 = -t1121 + t1184;
t1085 = -qJDD(5) + t1096;
t1132 = sin(pkin(9));
t1134 = cos(pkin(9));
t1083 = -t1134 * qJD(3) + t1132 * t1203;
t1084 = qJD(3) * t1132 + t1134 * t1203;
t1140 = cos(qJ(5));
t1031 = t1140 * t1083 + t1084 * t1137;
t1033 = -t1083 * t1137 + t1084 * t1140;
t970 = t1033 * t1031;
t1232 = -t1085 - t970;
t1238 = t1137 * t1232;
t1237 = t1140 * t1232;
t1019 = -t1143 * pkin(2) + qJDD(1) * pkin(6) + t1036;
t1120 = t1141 * t1218;
t986 = t1019 * t1138 + t1120;
t988 = t1141 * t1019 - t1138 * t1218;
t933 = t1138 * t986 + t1141 * t988;
t1202 = qJD(1) * t1141;
t1116 = -qJD(5) + t1202;
t1008 = t1031 * t1116;
t1122 = qJD(3) * t1202;
t1185 = t1138 * qJDD(1);
t1095 = t1122 + t1185;
t1062 = qJDD(3) * t1132 + t1095 * t1134;
t1157 = qJDD(3) * t1134 - t1132 * t1095;
t943 = -t1031 * qJD(5) + t1140 * t1062 + t1137 * t1157;
t1233 = t1008 + t943;
t1199 = t1084 * t1083;
t1153 = -t1096 - t1199;
t1231 = t1132 * t1153;
t1230 = t1134 * t1153;
t1198 = t1084 * t1141;
t1072 = qJD(1) * t1198;
t1012 = t1157 - t1072;
t1169 = t1062 * t1137 - t1140 * t1157;
t910 = (qJD(5) + t1116) * t1033 + t1169;
t1225 = qJD(3) ^ 2;
t1029 = t1031 ^ 2;
t1030 = t1033 ^ 2;
t1224 = t1083 ^ 2;
t1082 = t1084 ^ 2;
t1114 = t1116 ^ 2;
t1179 = t1083 * t1202;
t1159 = -t1062 + t1179;
t1018 = -qJDD(1) * pkin(2) - t1143 * pkin(6) + t1035;
t1160 = t1095 + t1122;
t957 = -t1160 * qJ(4) + (-t1096 + t1121) * pkin(3) + t1018;
t1220 = pkin(3) * t1141;
t1161 = -qJ(4) * t1138 - t1220;
t1091 = t1161 * qJD(1);
t968 = -t1225 * pkin(3) + qJDD(3) * qJ(4) + t1091 * t1202 + t988;
t877 = 0.2e1 * qJD(4) * t1084 + t1132 * t968 - t1134 * t957;
t851 = pkin(4) * t1153 + pkin(7) * t1159 - t877;
t1063 = -pkin(4) * t1202 - pkin(7) * t1084;
t878 = -0.2e1 * qJD(4) * t1083 + t1132 * t957 + t1134 * t968;
t855 = -pkin(4) * t1224 + pkin(7) * t1157 + t1063 * t1202 + t878;
t796 = t1137 * t855 - t1140 * t851;
t797 = t1137 * t851 + t1140 * t855;
t753 = t1137 * t797 - t1140 * t796;
t1223 = pkin(4) * t753;
t914 = -t1008 + t943;
t846 = -t1137 * t910 - t1140 * t914;
t1222 = pkin(4) * t846;
t1221 = pkin(3) * t1138;
t1215 = t1132 * t753;
t963 = qJDD(4) + t1120 - t1225 * qJ(4) - qJDD(3) * pkin(3) + (qJD(1) * t1091 + t1019) * t1138;
t1214 = t1132 * t963;
t1213 = t1134 * t753;
t1212 = t1134 * t963;
t887 = -pkin(4) * t1157 - pkin(7) * t1224 + t1063 * t1084 + t963;
t1211 = t1137 * t887;
t946 = t1085 - t970;
t1210 = t1137 * t946;
t1208 = t1140 * t887;
t1207 = t1140 * t946;
t1205 = -pkin(2) * t1018 + pkin(6) * t933;
t1204 = qJD(1) * qJD(3);
t1015 = t1096 - t1199;
t1201 = t1015 * t1132;
t1200 = t1015 * t1134;
t1197 = t1096 * t1138;
t1115 = t1141 * t1143 * t1138;
t1106 = qJDD(3) + t1115;
t1194 = t1106 * t1138;
t1107 = qJDD(3) - t1115;
t1193 = t1107 * t1138;
t1192 = t1107 * t1141;
t1191 = t1116 * t1033;
t1190 = t1116 * t1137;
t1189 = t1116 * t1140;
t1128 = t1138 ^ 2;
t1188 = t1128 * t1143;
t1004 = t1138 * t1018;
t1005 = t1141 * t1018;
t1129 = t1141 ^ 2;
t1186 = t1128 + t1129;
t1183 = t1138 * t970;
t1182 = t1141 * t970;
t1181 = t1138 * t1199;
t1180 = t1083 * t1198;
t1111 = -t1188 - t1225;
t1056 = -t1111 * t1138 - t1192;
t1094 = 0.2e1 * t1122 + t1185;
t1178 = -pkin(2) * t1094 + pkin(6) * t1056 + t1004;
t1125 = t1129 * t1143;
t1113 = -t1125 - t1225;
t1054 = t1113 * t1141 - t1194;
t1097 = -0.2e1 * t1121 + t1184;
t1177 = pkin(2) * t1097 + pkin(6) * t1054 - t1005;
t821 = t1132 * t877 + t1134 * t878;
t754 = t1137 * t796 + t1140 * t797;
t733 = t1132 * t754 + t1213;
t744 = -pkin(4) * t887 + pkin(7) * t754;
t716 = -pkin(7) * t1213 - qJ(4) * t733 - t1132 * t744;
t724 = -pkin(3) * t733 - t1223;
t734 = t1134 * t754 - t1215;
t731 = t1138 * t887 + t1141 * t734;
t1176 = -pkin(2) * t733 + pkin(6) * t731 + t1138 * t716 + t1141 * t724;
t848 = t1137 * t914 - t1140 * t910;
t934 = -t1029 - t1030;
t739 = -pkin(4) * t934 + pkin(7) * t848 + t754;
t740 = -pkin(7) * t846 - t753;
t791 = t1132 * t848 + t1134 * t846;
t722 = -qJ(4) * t791 - t1132 * t739 + t1134 * t740;
t769 = -pkin(3) * t791 - t1222;
t793 = -t1132 * t846 + t1134 * t848;
t780 = t1138 * t934 + t1141 * t793;
t1175 = -pkin(2) * t791 + pkin(6) * t780 + t1138 * t722 + t1141 * t769;
t958 = -t1114 - t1029;
t880 = t1140 * t958 - t1238;
t909 = (qJD(5) - t1116) * t1033 + t1169;
t803 = -pkin(4) * t909 + pkin(7) * t880 - t1208;
t879 = t1137 * t958 + t1237;
t827 = t1132 * t880 + t1134 * t879;
t830 = -pkin(7) * t879 + t1211;
t750 = -qJ(4) * t827 - t1132 * t803 + t1134 * t830;
t1156 = pkin(4) * t879 - t796;
t755 = -pkin(3) * t827 - t1156;
t828 = -t1132 * t879 + t1134 * t880;
t801 = t1138 * t909 + t1141 * t828;
t1174 = -pkin(2) * t827 + pkin(6) * t801 + t1138 * t750 + t1141 * t755;
t984 = -t1030 - t1114;
t892 = -t1137 * t984 + t1207;
t811 = -pkin(4) * t1233 + pkin(7) * t892 + t1211;
t891 = t1140 * t984 + t1210;
t833 = -pkin(7) * t891 + t1208;
t835 = t1132 * t892 + t1134 * t891;
t758 = -qJ(4) * t835 - t1132 * t811 + t1134 * t833;
t1150 = pkin(4) * t891 - t797;
t761 = -pkin(3) * t835 - t1150;
t836 = -t1132 * t891 + t1134 * t892;
t810 = t1138 * t1233 + t1141 * t836;
t1173 = -pkin(2) * t835 + pkin(6) * t810 + t1138 * t758 + t1141 * t761;
t1034 = -t1125 - t1224;
t954 = t1034 * t1132 + t1230;
t852 = -pkin(3) * t954 + t877;
t882 = -qJ(4) * t954 + t1214;
t1011 = t1072 + t1157;
t955 = t1034 * t1134 - t1231;
t918 = -t1011 * t1138 + t1141 * t955;
t1172 = -pkin(2) * t954 + pkin(6) * t918 + t1138 * t882 + t1141 * t852;
t1071 = -t1082 - t1125;
t974 = t1071 * t1134 + t1201;
t854 = -pkin(3) * t974 + t878;
t888 = -qJ(4) * t974 + t1212;
t1014 = t1062 + t1179;
t977 = -t1071 * t1132 + t1200;
t925 = t1014 * t1138 + t1141 * t977;
t1171 = -pkin(2) * t974 + pkin(6) * t925 + t1138 * t888 + t1141 * t854;
t1168 = -t1108 * t1139 - t1142 * t1109;
t1101 = t1186 * qJDD(1);
t1104 = t1125 + t1188;
t1167 = pkin(2) * t1104 + pkin(6) * t1101 + t933;
t1166 = t1132 * t1179;
t1165 = t1133 * t1115;
t1164 = t1135 * t1115;
t1163 = -pkin(3) * t963 + qJ(4) * t821;
t1103 = qJDD(1) * t1142 - t1139 * t1143;
t1162 = -pkin(5) * t1103 - g(3) * t1139;
t820 = t1132 * t878 - t1134 * t877;
t931 = t1138 * t988 - t1141 * t986;
t1158 = t1108 * t1142 - t1109 * t1139;
t939 = t1012 * t1132 + t1134 * t1159;
t804 = -qJ(4) * t939 - t820;
t1003 = t1082 + t1224;
t941 = t1012 * t1134 - t1132 * t1159;
t895 = -t1003 * t1138 + t1141 * t941;
t1154 = pkin(6) * t895 + t1138 * t804 + (-pkin(2) - t1220) * t939;
t1152 = pkin(3) * t1011 + qJ(4) * t955 - t1212;
t1151 = -pkin(3) * t1014 + qJ(4) * t977 + t1214;
t1149 = pkin(3) * t1003 + qJ(4) * t941 + t821;
t807 = t1138 * t963 + t1141 * t821;
t1148 = pkin(6) * t807 + (-pkin(2) + t1161) * t820;
t1147 = -pkin(3) * t934 + qJ(4) * t793 + t1132 * t740 + t1134 * t739;
t1146 = -pkin(3) * t909 + qJ(4) * t828 + t1132 * t830 + t1134 * t803;
t1145 = -pkin(3) * t1233 + qJ(4) * t836 + t1132 * t833 + t1134 * t811;
t1144 = -pkin(3) * t887 - pkin(7) * t1215 + qJ(4) * t734 + t1134 * t744;
t1112 = t1125 - t1225;
t1110 = -t1188 + t1225;
t1105 = -t1125 + t1188;
t1102 = qJDD(1) * t1139 + t1142 * t1143;
t1089 = t1141 * t1106;
t1088 = t1186 * t1204;
t1078 = t1141 * t1096;
t1073 = -pkin(5) * t1102 + g(3) * t1142;
t1070 = -t1082 + t1125;
t1069 = -t1125 + t1224;
t1064 = t1134 * t1072;
t1061 = t1095 * t1141 - t1128 * t1204;
t1060 = -t1129 * t1204 - t1197;
t1059 = qJDD(3) * t1133 + t1088 * t1135;
t1058 = -qJDD(3) * t1135 + t1088 * t1133;
t1055 = -t1110 * t1138 + t1089;
t1053 = t1112 * t1141 - t1193;
t1052 = t1111 * t1141 - t1193;
t1051 = t1110 * t1141 + t1194;
t1050 = t1113 * t1138 + t1089;
t1049 = t1112 * t1138 + t1192;
t1048 = t1160 * t1138;
t1047 = -t1122 * t1138 + t1078;
t1043 = t1101 * t1135 - t1104 * t1133;
t1042 = t1101 * t1133 + t1104 * t1135;
t1041 = t1082 - t1224;
t1038 = -t1094 * t1138 + t1097 * t1141;
t1037 = t1094 * t1141 + t1097 * t1138;
t1027 = t1061 * t1135 - t1165;
t1026 = t1060 * t1135 + t1165;
t1025 = t1061 * t1133 + t1164;
t1024 = t1060 * t1133 - t1164;
t1023 = t1055 * t1135 + t1133 * t1185;
t1022 = t1053 * t1135 + t1133 * t1184;
t1021 = t1055 * t1133 - t1135 * t1185;
t1020 = t1053 * t1133 - t1135 * t1184;
t1002 = (t1083 * t1134 - t1084 * t1132) * t1202;
t1001 = -t1064 - t1166;
t1000 = -t1030 + t1114;
t999 = t1029 - t1114;
t998 = t1056 * t1135 + t1094 * t1133;
t997 = t1054 * t1135 - t1097 * t1133;
t996 = t1056 * t1133 - t1094 * t1135;
t995 = t1054 * t1133 + t1097 * t1135;
t994 = -pkin(1) * t1099 - t1036;
t993 = pkin(1) * t1100 - t1035;
t992 = t1062 * t1134 + t1072 * t1132;
t991 = t1062 * t1132 - t1064;
t990 = -t1132 * t1157 - t1134 * t1179;
t989 = t1134 * t1157 - t1166;
t987 = t1038 * t1135 + t1105 * t1133;
t985 = t1038 * t1133 - t1105 * t1135;
t981 = t1002 * t1141 - t1197;
t980 = t1002 * t1138 + t1078;
t979 = t1069 * t1134 + t1201;
t978 = -t1070 * t1132 + t1230;
t976 = t1069 * t1132 - t1200;
t975 = t1070 * t1134 + t1231;
t972 = -pkin(6) * t1052 + t1005;
t971 = -pkin(6) * t1050 + t1004;
t969 = t1030 - t1029;
t962 = pkin(1) * t966;
t961 = -pkin(2) * t1052 + t988;
t960 = -pkin(2) * t1050 + t986;
t956 = pkin(1) * t1218 + qJ(2) * t1170;
t953 = t1141 * t992 + t1181;
t952 = t1141 * t990 - t1181;
t951 = t1138 * t992 - t1180;
t950 = t1138 * t990 + t1180;
t942 = -qJD(5) * t1033 - t1169;
t940 = t1011 * t1134 - t1014 * t1132;
t938 = t1011 * t1132 + t1014 * t1134;
t936 = (t1031 * t1140 - t1033 * t1137) * t1116;
t935 = (t1031 * t1137 + t1033 * t1140) * t1116;
t929 = -t1001 * t1133 + t1135 * t981;
t928 = t1001 * t1135 + t1133 * t981;
t927 = t1012 * t1138 + t1141 * t979;
t926 = -t1138 * t1159 + t1141 * t978;
t924 = -t1012 * t1141 + t1138 * t979;
t923 = t1138 * t978 + t1141 * t1159;
t922 = -t1014 * t1141 + t1138 * t977;
t920 = t1041 * t1138 + t1141 * t940;
t919 = -t1041 * t1141 + t1138 * t940;
t917 = t1011 * t1141 + t1138 * t955;
t916 = pkin(1) * t995 + t1177;
t915 = pkin(1) * t996 + t1178;
t907 = t1140 * t999 + t1210;
t906 = -t1000 * t1137 + t1237;
t905 = t1137 * t999 - t1207;
t904 = t1000 * t1140 + t1238;
t903 = t1033 * t1190 + t1140 * t943;
t902 = -t1033 * t1189 + t1137 * t943;
t901 = -t1031 * t1189 - t1137 * t942;
t900 = -t1031 * t1190 + t1140 * t942;
t899 = t1133 * t991 + t1135 * t953;
t898 = t1133 * t989 + t1135 * t952;
t897 = t1133 * t953 - t1135 * t991;
t896 = t1133 * t952 - t1135 * t989;
t894 = t1003 * t1141 + t1138 * t941;
t890 = -qJ(2) * t1042 - t1135 * t931;
t889 = qJ(2) * t1043 - t1133 * t931;
t885 = t1018 * t1133 + t1135 * t933;
t884 = -t1018 * t1135 + t1133 * t933;
t883 = pkin(1) * t1042 + t1167;
t875 = -t1132 * t935 + t1134 * t936;
t874 = t1132 * t936 + t1134 * t935;
t873 = t1133 * t976 + t1135 * t927;
t872 = t1133 * t975 + t1135 * t926;
t871 = t1133 * t974 + t1135 * t925;
t870 = t1133 * t927 - t1135 * t976;
t869 = t1133 * t926 - t1135 * t975;
t868 = t1133 * t925 - t1135 * t974;
t867 = -qJ(2) * t996 - t1133 * t961 + t1135 * t972;
t866 = -qJ(2) * t995 - t1133 * t960 + t1135 * t971;
t865 = -t1085 * t1138 + t1141 * t875;
t864 = t1085 * t1141 + t1138 * t875;
t863 = t1133 * t954 + t1135 * t918;
t862 = t1133 * t918 - t1135 * t954;
t861 = t1133 * t938 + t1135 * t920;
t860 = t1133 * t920 - t1135 * t938;
t859 = -pkin(1) * t1052 + qJ(2) * t998 + t1133 * t972 + t1135 * t961;
t858 = -pkin(1) * t1050 + qJ(2) * t997 + t1133 * t971 + t1135 * t960;
t857 = t1133 * t939 + t1135 * t895;
t856 = t1133 * t895 - t1135 * t939;
t847 = -t1137 * t1233 - t1140 * t909;
t845 = -t1137 * t909 + t1140 * t1233;
t844 = -t1132 * t905 + t1134 * t907;
t843 = -t1132 * t904 + t1134 * t906;
t842 = t1132 * t907 + t1134 * t905;
t841 = t1132 * t906 + t1134 * t904;
t840 = -t1132 * t902 + t1134 * t903;
t839 = -t1132 * t900 + t1134 * t901;
t838 = t1132 * t903 + t1134 * t902;
t837 = t1132 * t901 + t1134 * t900;
t832 = pkin(1) * t884 + t1205;
t831 = -pkin(2) * t922 - t1151;
t829 = -pkin(2) * t917 - t1152;
t825 = t1141 * t840 + t1183;
t824 = t1141 * t839 - t1183;
t823 = t1138 * t840 - t1182;
t822 = t1138 * t839 + t1182;
t818 = -qJ(2) * t884 + (pkin(2) * t1133 - pkin(6) * t1135) * t931;
t817 = t1133 * t874 + t1135 * t865;
t816 = t1133 * t865 - t1135 * t874;
t815 = -t1138 * t910 + t1141 * t844;
t814 = t1138 * t914 + t1141 * t843;
t813 = t1138 * t844 + t1141 * t910;
t812 = t1138 * t843 - t1141 * t914;
t809 = t1138 * t836 - t1141 * t1233;
t806 = t1138 * t821 - t1141 * t963;
t800 = t1138 * t828 - t1141 * t909;
t798 = qJ(2) * t885 + (-pkin(2) * t1135 - pkin(6) * t1133 - pkin(1)) * t931;
t794 = -pkin(6) * t922 - t1138 * t854 + t1141 * t888;
t792 = -t1132 * t845 + t1134 * t847;
t790 = t1132 * t847 + t1134 * t845;
t788 = -pkin(6) * t917 - t1138 * t852 + t1141 * t882;
t787 = t1138 * t969 + t1141 * t792;
t786 = t1138 * t792 - t1141 * t969;
t785 = -pkin(2) * t894 - t1149;
t784 = t1133 * t838 + t1135 * t825;
t783 = t1133 * t837 + t1135 * t824;
t782 = t1133 * t825 - t1135 * t838;
t781 = t1133 * t824 - t1135 * t837;
t779 = t1138 * t793 - t1141 * t934;
t777 = -pkin(6) * t894 + t1141 * t804 + t1221 * t939;
t776 = t1133 * t842 + t1135 * t815;
t775 = t1133 * t841 + t1135 * t814;
t774 = t1133 * t815 - t1135 * t842;
t773 = t1133 * t814 - t1135 * t841;
t772 = t1133 * t835 + t1135 * t810;
t771 = t1133 * t810 - t1135 * t835;
t770 = pkin(1) * t868 + t1171;
t767 = t1133 * t820 + t1135 * t807;
t766 = t1133 * t807 - t1135 * t820;
t765 = t1133 * t827 + t1135 * t801;
t764 = t1133 * t801 - t1135 * t827;
t763 = pkin(1) * t862 + t1172;
t762 = -pkin(2) * t806 - t1163;
t759 = pkin(1) * t856 + t1154;
t756 = -qJ(2) * t868 - t1133 * t831 + t1135 * t794;
t751 = -qJ(2) * t862 - t1133 * t829 + t1135 * t788;
t748 = -pkin(1) * t922 + qJ(2) * t871 + t1133 * t794 + t1135 * t831;
t747 = t1133 * t790 + t1135 * t787;
t746 = t1133 * t787 - t1135 * t790;
t745 = -pkin(6) * t806 + (-qJ(4) * t1141 + t1221) * t820;
t743 = t1133 * t791 + t1135 * t780;
t742 = t1133 * t780 - t1135 * t791;
t741 = -pkin(1) * t917 + qJ(2) * t863 + t1133 * t788 + t1135 * t829;
t738 = -qJ(2) * t856 - t1133 * t785 + t1135 * t777;
t737 = -pkin(2) * t809 - t1145;
t736 = -pkin(1) * t894 + qJ(2) * t857 + t1133 * t777 + t1135 * t785;
t735 = -pkin(2) * t800 - t1146;
t730 = t1138 * t734 - t1141 * t887;
t728 = pkin(1) * t766 + t1148;
t727 = -pkin(6) * t809 - t1138 * t761 + t1141 * t758;
t726 = -pkin(6) * t800 - t1138 * t755 + t1141 * t750;
t725 = -qJ(2) * t766 - t1133 * t762 + t1135 * t745;
t720 = -pkin(1) * t806 + qJ(2) * t767 + t1133 * t745 + t1135 * t762;
t719 = pkin(1) * t771 + t1173;
t718 = pkin(1) * t764 + t1174;
t717 = -pkin(2) * t779 - t1147;
t714 = t1133 * t733 + t1135 * t731;
t713 = t1133 * t731 - t1135 * t733;
t712 = -qJ(2) * t771 - t1133 * t737 + t1135 * t727;
t711 = -pkin(6) * t779 - t1138 * t769 + t1141 * t722;
t710 = -pkin(1) * t809 + qJ(2) * t772 + t1133 * t727 + t1135 * t737;
t709 = -qJ(2) * t764 - t1133 * t735 + t1135 * t726;
t708 = -pkin(1) * t800 + qJ(2) * t765 + t1133 * t726 + t1135 * t735;
t707 = pkin(1) * t742 + t1175;
t706 = -pkin(2) * t730 - t1144;
t705 = -pkin(6) * t730 - t1138 * t724 + t1141 * t716;
t704 = -qJ(2) * t742 - t1133 * t717 + t1135 * t711;
t703 = -pkin(1) * t779 + qJ(2) * t743 + t1133 * t711 + t1135 * t717;
t702 = pkin(1) * t713 + t1176;
t701 = -qJ(2) * t713 - t1133 * t706 + t1135 * t705;
t700 = -pkin(1) * t730 + qJ(2) * t714 + t1133 * t705 + t1135 * t706;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1103, 0, -t1102, 0, t1162, -t1073, -t1158, -pkin(5) * t1158, 0, 0, t1039, 0, -t1227, 0, t1240, -t1239, t1242, pkin(5) * t1242 + qJ(2) * t1206 - t1139 * t956, -t1025 * t1139 + t1027 * t1142, -t1139 * t985 + t1142 * t987, -t1021 * t1139 + t1023 * t1142, -t1024 * t1139 + t1026 * t1142, -t1020 * t1139 + t1022 * t1142, -t1058 * t1139 + t1059 * t1142, t1142 * t866 - t1139 * t858 - pkin(5) * (t1139 * t997 + t1142 * t995), t1142 * t867 - t1139 * t859 - pkin(5) * (t1139 * t998 + t1142 * t996), t1142 * t890 - t1139 * t889 - pkin(5) * (t1042 * t1142 + t1043 * t1139), t1142 * t818 - t1139 * t798 - pkin(5) * (t1139 * t885 + t1142 * t884), -t1139 * t897 + t1142 * t899, -t1139 * t860 + t1142 * t861, -t1139 * t869 + t1142 * t872, -t1139 * t896 + t1142 * t898, -t1139 * t870 + t1142 * t873, -t1139 * t928 + t1142 * t929, t1142 * t751 - t1139 * t741 - pkin(5) * (t1139 * t863 + t1142 * t862), t1142 * t756 - t1139 * t748 - pkin(5) * (t1139 * t871 + t1142 * t868), t1142 * t738 - t1139 * t736 - pkin(5) * (t1139 * t857 + t1142 * t856), t1142 * t725 - t1139 * t720 - pkin(5) * (t1139 * t767 + t1142 * t766), -t1139 * t782 + t1142 * t784, -t1139 * t746 + t1142 * t747, -t1139 * t773 + t1142 * t775, -t1139 * t781 + t1142 * t783, -t1139 * t774 + t1142 * t776, -t1139 * t816 + t1142 * t817, t1142 * t709 - t1139 * t708 - pkin(5) * (t1139 * t765 + t1142 * t764), t1142 * t712 - t1139 * t710 - pkin(5) * (t1139 * t772 + t1142 * t771), t1142 * t704 - t1139 * t703 - pkin(5) * (t1139 * t743 + t1142 * t742), t1142 * t701 - t1139 * t700 - pkin(5) * (t1139 * t714 + t1142 * t713); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1102, 0, t1103, 0, t1073, t1162, t1168, pkin(5) * t1168, 0, 0, t1227, 0, t1039, 0, t1239, t1240, t1241, pkin(5) * t1241 + qJ(2) * t1209 + t1142 * t956, t1025 * t1142 + t1027 * t1139, t1139 * t987 + t1142 * t985, t1021 * t1142 + t1023 * t1139, t1024 * t1142 + t1026 * t1139, t1020 * t1142 + t1022 * t1139, t1058 * t1142 + t1059 * t1139, t1139 * t866 + t1142 * t858 + pkin(5) * (-t1139 * t995 + t1142 * t997), t1139 * t867 + t1142 * t859 + pkin(5) * (-t1139 * t996 + t1142 * t998), t1139 * t890 + t1142 * t889 + pkin(5) * (-t1042 * t1139 + t1043 * t1142), t1139 * t818 + t1142 * t798 + pkin(5) * (-t1139 * t884 + t1142 * t885), t1139 * t899 + t1142 * t897, t1139 * t861 + t1142 * t860, t1139 * t872 + t1142 * t869, t1139 * t898 + t1142 * t896, t1139 * t873 + t1142 * t870, t1139 * t929 + t1142 * t928, t1139 * t751 + t1142 * t741 + pkin(5) * (-t1139 * t862 + t1142 * t863), t1139 * t756 + t1142 * t748 + pkin(5) * (-t1139 * t868 + t1142 * t871), t1139 * t738 + t1142 * t736 + pkin(5) * (-t1139 * t856 + t1142 * t857), t1139 * t725 + t1142 * t720 + pkin(5) * (-t1139 * t766 + t1142 * t767), t1139 * t784 + t1142 * t782, t1139 * t747 + t1142 * t746, t1139 * t775 + t1142 * t773, t1139 * t783 + t1142 * t781, t1139 * t776 + t1142 * t774, t1139 * t817 + t1142 * t816, t1139 * t709 + t1142 * t708 + pkin(5) * (-t1139 * t764 + t1142 * t765), t1139 * t712 + t1142 * t710 + pkin(5) * (-t1139 * t771 + t1142 * t772), t1139 * t704 + t1142 * t703 + pkin(5) * (-t1139 * t742 + t1142 * t743), t1139 * t701 + t1142 * t700 + pkin(5) * (-t1139 * t713 + t1142 * t714); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1108, t1109, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t993, t994, 0, -t962, t1048, t1037, t1051, t1047, t1049, 0, t916, t915, t883, t832, t951, t919, t923, t950, t924, t980, t763, t770, t759, t728, t823, t786, t812, t822, t813, t864, t718, t719, t707, t702; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1143, 0, 0, -g(3), -t1108, 0, 0, 0, t1100, 0, -t1099, 0, t1226, -t1067, t966, qJ(2) * t966, t1027, t987, t1023, t1026, t1022, t1059, t866, t867, t890, t818, t899, t861, t872, t898, t873, t929, t751, t756, t738, t725, t784, t747, t775, t783, t776, t817, t709, t712, t704, t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1143, 0, qJDD(1), 0, g(3), 0, -t1109, 0, 0, 0, t1099, 0, t1100, 0, t1067, t1226, t1170, t956, t1025, t985, t1021, t1024, t1020, t1058, t858, t859, t889, t798, t897, t860, t869, t896, t870, t928, t741, t748, t736, t720, t782, t746, t773, t781, t774, t816, t708, t710, t703, t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1108, t1109, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t993, t994, 0, -t962, t1048, t1037, t1051, t1047, t1049, 0, t916, t915, t883, t832, t951, t919, t923, t950, t924, t980, t763, t770, t759, t728, t823, t786, t812, t822, t813, t864, t718, t719, t707, t702; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1143, 0, 0, -t1218, t1035, 0, t1061, t1038, t1055, t1060, t1053, t1088, t971, t972, -t931, -pkin(6) * t931, t953, t920, t926, t952, t927, t981, t788, t794, t777, t745, t825, t787, t814, t824, t815, t865, t726, t727, t711, t705; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1143, 0, qJDD(1), 0, t1218, 0, t1036, 0, t1115, -t1105, -t1185, -t1115, -t1184, -qJDD(3), t960, t961, 0, -pkin(2) * t931, -t991, -t938, -t975, -t989, -t976, t1001, t829, t831, t785, t762, -t838, -t790, -t841, -t837, -t842, -t874, t735, t737, t717, t706; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1035, -t1036, 0, 0, t1048, t1037, t1051, t1047, t1049, 0, t1177, t1178, t1167, t1205, t951, t919, t923, t950, t924, t980, t1172, t1171, t1154, t1148, t823, t786, t812, t822, t813, t864, t1174, t1173, t1175, t1176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1095, t1097, t1106, -t1122, t1112, t1122, 0, t1018, t986, 0, t992, t940, t978, t990, t979, t1002, t882, t888, t804, -qJ(4) * t820, t840, t792, t843, t839, t844, t875, t750, t758, t722, t716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1121, t1094, t1110, t1096, t1107, -t1121, -t1018, 0, t988, 0, -t1199, -t1041, t1159, t1199, -t1012, t1096, t852, t854, -pkin(3) * t939, -pkin(3) * t820, -t970, -t969, -t914, t970, t910, t1085, t755, t761, t769, t724; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1115, t1105, t1185, t1115, t1184, qJDD(3), -t986, -t988, 0, 0, t991, t938, t975, t989, t976, -t1001, t1152, t1151, t1149, t1163, t838, t790, t841, t837, t842, t874, t1146, t1145, t1147, t1144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1062, t1011, t1153, -t1179, t1069, t1179, 0, t963, t877, 0, t903, t847, t906, t901, t907, t936, t830, t833, t740, -pkin(7) * t753; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1072, t1014, t1070, t1157, -t1015, t1072, -t963, 0, t878, 0, t902, t845, t904, t900, t905, t935, t803, t811, t739, t744; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1199, t1041, -t1159, -t1199, t1012, -t1096, -t877, -t878, 0, 0, t970, t969, t914, -t970, -t910, -t1085, t1156, t1150, t1222, t1223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t943, -t909, t1232, -t1008, t999, t1008, 0, t887, t796, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1191, t1233, t1000, t942, -t946, t1191, -t887, 0, t797, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t970, t969, t914, -t970, -t910, -t1085, -t796, -t797, 0, 0;];
m_new_reg = t1;
