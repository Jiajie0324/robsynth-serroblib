% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPRPR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:22
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPRPR8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR8_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR8_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR8_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR8_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:22:48
% EndTime: 2019-12-31 18:22:50
% DurationCPUTime: 2.51s
% Computational Cost: add. (12427->221), mult. (26025->309), div. (0->0), fcn. (17146->10), ass. (0->176)
t1418 = cos(qJ(3));
t1433 = t1418 * qJD(1);
t1393 = -qJD(5) + t1433;
t1446 = qJD(5) - t1393;
t1429 = qJD(3) * t1433;
t1415 = sin(qJ(3));
t1430 = t1415 * qJDD(1);
t1377 = t1429 + t1430;
t1409 = sin(pkin(9));
t1411 = cos(pkin(9));
t1358 = t1409 * qJDD(3) + t1411 * t1377;
t1437 = qJD(1) * t1415;
t1371 = -t1411 * qJD(3) + t1409 * t1437;
t1361 = t1371 * t1433;
t1339 = -t1358 + t1361;
t1398 = qJD(3) * t1437;
t1402 = t1418 * qJDD(1);
t1378 = t1402 - t1398;
t1373 = t1409 * qJD(3) + t1411 * t1437;
t1435 = t1373 * t1371;
t1341 = -t1378 - t1435;
t1445 = qJD(3) ^ 2;
t1414 = sin(qJ(5));
t1417 = cos(qJ(5));
t1344 = t1417 * t1371 + t1414 * t1373;
t1444 = t1344 ^ 2;
t1346 = -t1414 * t1371 + t1417 * t1373;
t1443 = t1346 ^ 2;
t1442 = t1371 ^ 2;
t1441 = t1373 ^ 2;
t1440 = t1393 ^ 2;
t1439 = -2 * qJD(4);
t1438 = -g(3) + qJDD(2);
t1436 = t1346 * t1344;
t1406 = t1418 ^ 2;
t1420 = qJD(1) ^ 2;
t1434 = t1406 * t1420;
t1432 = qJD(5) + t1393;
t1416 = sin(qJ(1));
t1419 = cos(qJ(1));
t1389 = -t1419 * g(1) - t1416 * g(2);
t1375 = -t1420 * pkin(1) + t1389;
t1410 = sin(pkin(8));
t1412 = cos(pkin(8));
t1388 = t1416 * g(1) - t1419 * g(2);
t1422 = qJDD(1) * pkin(1) + t1388;
t1349 = t1412 * t1375 + t1410 * t1422;
t1343 = -t1420 * pkin(2) + qJDD(1) * pkin(6) + t1349;
t1328 = t1418 * t1343 + t1415 * t1438;
t1405 = t1415 ^ 2;
t1431 = t1405 + t1406;
t1428 = t1373 * t1433;
t1348 = -t1410 * t1375 + t1412 * t1422;
t1342 = -qJDD(1) * pkin(2) - t1420 * pkin(6) - t1348;
t1317 = (-t1377 - t1429) * qJ(4) + (-t1378 + t1398) * pkin(3) + t1342;
t1374 = (-pkin(3) * t1418 - qJ(4) * t1415) * qJD(1);
t1323 = -t1445 * pkin(3) + qJDD(3) * qJ(4) + t1374 * t1433 + t1328;
t1288 = t1409 * t1317 + t1411 * t1323 + t1371 * t1439;
t1427 = -qJDD(5) + t1378;
t1424 = -t1411 * qJDD(3) + t1409 * t1377;
t1426 = -t1414 * t1358 - t1417 * t1424;
t1380 = -t1410 * qJDD(1) - t1412 * t1420;
t1381 = t1412 * qJDD(1) - t1410 * t1420;
t1425 = t1419 * t1380 - t1416 * t1381;
t1287 = t1411 * t1317 - t1409 * t1323 + t1373 * t1439;
t1423 = t1416 * t1380 + t1419 * t1381;
t1421 = -t1417 * t1358 + t1414 * t1424;
t1397 = t1418 * t1438;
t1320 = qJDD(4) - t1397 - t1445 * qJ(4) - qJDD(3) * pkin(3) + (qJD(1) * t1374 + t1343) * t1415;
t1392 = t1418 * t1420 * t1415;
t1391 = -t1434 - t1445;
t1390 = -t1405 * t1420 - t1445;
t1387 = -qJDD(3) + t1392;
t1386 = qJDD(3) + t1392;
t1385 = t1431 * t1420;
t1384 = -t1416 * qJDD(1) - t1419 * t1420;
t1383 = t1419 * qJDD(1) - t1416 * t1420;
t1382 = t1431 * qJDD(1);
t1379 = t1402 - 0.2e1 * t1398;
t1376 = 0.2e1 * t1429 + t1430;
t1360 = -t1434 - t1441;
t1359 = -pkin(4) * t1433 - t1373 * pkin(7);
t1356 = t1418 * t1387 - t1415 * t1390;
t1355 = -t1415 * t1386 + t1418 * t1391;
t1354 = t1415 * t1387 + t1418 * t1390;
t1353 = t1418 * t1386 + t1415 * t1391;
t1351 = t1412 * t1382 - t1410 * t1385;
t1350 = t1410 * t1382 + t1412 * t1385;
t1347 = -t1434 - t1442;
t1340 = t1378 - t1435;
t1338 = t1358 + t1361;
t1337 = -t1424 - t1428;
t1336 = t1424 - t1428;
t1333 = -t1441 - t1442;
t1332 = t1412 * t1356 + t1410 * t1376;
t1331 = t1412 * t1355 - t1410 * t1379;
t1330 = t1410 * t1356 - t1412 * t1376;
t1329 = t1410 * t1355 + t1412 * t1379;
t1327 = -t1415 * t1343 + t1397;
t1326 = -t1440 - t1443;
t1325 = t1411 * t1340 - t1409 * t1360;
t1324 = t1409 * t1340 + t1411 * t1360;
t1322 = -t1410 * t1348 + t1412 * t1349;
t1321 = t1412 * t1348 + t1410 * t1349;
t1318 = -t1440 - t1444;
t1316 = -t1409 * t1341 + t1411 * t1347;
t1315 = t1411 * t1341 + t1409 * t1347;
t1314 = -t1427 - t1436;
t1313 = t1427 - t1436;
t1310 = t1411 * t1337 - t1409 * t1339;
t1309 = t1409 * t1337 + t1411 * t1339;
t1308 = -t1443 - t1444;
t1307 = -t1415 * t1327 + t1418 * t1328;
t1306 = t1418 * t1327 + t1415 * t1328;
t1305 = t1418 * t1325 + t1415 * t1338;
t1304 = t1415 * t1325 - t1418 * t1338;
t1303 = t1418 * t1316 + t1415 * t1336;
t1302 = t1415 * t1316 - t1418 * t1336;
t1301 = t1432 * t1344 + t1421;
t1300 = -t1446 * t1344 - t1421;
t1299 = -t1432 * t1346 + t1426;
t1298 = t1446 * t1346 - t1426;
t1297 = t1418 * t1310 + t1415 * t1333;
t1296 = t1415 * t1310 - t1418 * t1333;
t1295 = t1417 * t1313 - t1414 * t1326;
t1294 = t1414 * t1313 + t1417 * t1326;
t1293 = t1424 * pkin(4) - t1442 * pkin(7) + t1373 * t1359 + t1320;
t1292 = t1412 * t1307 + t1410 * t1342;
t1291 = t1410 * t1307 - t1412 * t1342;
t1290 = -t1414 * t1314 + t1417 * t1318;
t1289 = t1417 * t1314 + t1414 * t1318;
t1286 = t1412 * t1305 + t1410 * t1324;
t1285 = t1410 * t1305 - t1412 * t1324;
t1284 = t1412 * t1303 + t1410 * t1315;
t1283 = t1410 * t1303 - t1412 * t1315;
t1282 = t1412 * t1297 + t1410 * t1309;
t1281 = t1410 * t1297 - t1412 * t1309;
t1280 = -t1442 * pkin(4) - t1424 * pkin(7) + t1359 * t1433 + t1288;
t1279 = t1341 * pkin(4) + t1339 * pkin(7) + t1287;
t1278 = t1417 * t1299 - t1414 * t1301;
t1277 = t1414 * t1299 + t1417 * t1301;
t1276 = -t1409 * t1294 + t1411 * t1295;
t1275 = t1411 * t1294 + t1409 * t1295;
t1274 = -t1409 * t1289 + t1411 * t1290;
t1273 = t1411 * t1289 + t1409 * t1290;
t1272 = -t1409 * t1287 + t1411 * t1288;
t1271 = t1411 * t1287 + t1409 * t1288;
t1270 = t1418 * t1276 + t1415 * t1300;
t1269 = t1415 * t1276 - t1418 * t1300;
t1268 = t1418 * t1272 + t1415 * t1320;
t1267 = t1415 * t1272 - t1418 * t1320;
t1266 = t1418 * t1274 + t1415 * t1298;
t1265 = t1415 * t1274 - t1418 * t1298;
t1264 = t1414 * t1279 + t1417 * t1280;
t1263 = t1417 * t1279 - t1414 * t1280;
t1262 = -t1409 * t1277 + t1411 * t1278;
t1261 = t1411 * t1277 + t1409 * t1278;
t1260 = t1418 * t1262 + t1415 * t1308;
t1259 = t1415 * t1262 - t1418 * t1308;
t1258 = t1412 * t1270 + t1410 * t1275;
t1257 = t1410 * t1270 - t1412 * t1275;
t1256 = t1412 * t1268 + t1410 * t1271;
t1255 = t1410 * t1268 - t1412 * t1271;
t1254 = t1412 * t1266 + t1410 * t1273;
t1253 = t1410 * t1266 - t1412 * t1273;
t1252 = -t1414 * t1263 + t1417 * t1264;
t1251 = t1417 * t1263 + t1414 * t1264;
t1250 = t1412 * t1260 + t1410 * t1261;
t1249 = t1410 * t1260 - t1412 * t1261;
t1248 = -t1409 * t1251 + t1411 * t1252;
t1247 = t1411 * t1251 + t1409 * t1252;
t1246 = t1418 * t1248 + t1415 * t1293;
t1245 = t1415 * t1248 - t1418 * t1293;
t1244 = t1412 * t1246 + t1410 * t1247;
t1243 = t1410 * t1246 - t1412 * t1247;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1384, -t1383, 0, -t1416 * t1388 + t1419 * t1389, 0, 0, 0, 0, 0, 0, t1425, -t1423, 0, -t1416 * t1321 + t1419 * t1322, 0, 0, 0, 0, 0, 0, -t1416 * t1329 + t1419 * t1331, -t1416 * t1330 + t1419 * t1332, -t1416 * t1350 + t1419 * t1351, -t1416 * t1291 + t1419 * t1292, 0, 0, 0, 0, 0, 0, -t1416 * t1283 + t1419 * t1284, -t1416 * t1285 + t1419 * t1286, -t1416 * t1281 + t1419 * t1282, -t1416 * t1255 + t1419 * t1256, 0, 0, 0, 0, 0, 0, -t1416 * t1253 + t1419 * t1254, -t1416 * t1257 + t1419 * t1258, -t1416 * t1249 + t1419 * t1250, -t1416 * t1243 + t1419 * t1244; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1383, t1384, 0, t1419 * t1388 + t1416 * t1389, 0, 0, 0, 0, 0, 0, t1423, t1425, 0, t1419 * t1321 + t1416 * t1322, 0, 0, 0, 0, 0, 0, t1419 * t1329 + t1416 * t1331, t1419 * t1330 + t1416 * t1332, t1419 * t1350 + t1416 * t1351, t1419 * t1291 + t1416 * t1292, 0, 0, 0, 0, 0, 0, t1419 * t1283 + t1416 * t1284, t1419 * t1285 + t1416 * t1286, t1419 * t1281 + t1416 * t1282, t1419 * t1255 + t1416 * t1256, 0, 0, 0, 0, 0, 0, t1419 * t1253 + t1416 * t1254, t1419 * t1257 + t1416 * t1258, t1419 * t1249 + t1416 * t1250, t1419 * t1243 + t1416 * t1244; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1438, 0, 0, 0, 0, 0, 0, t1353, t1354, 0, t1306, 0, 0, 0, 0, 0, 0, t1302, t1304, t1296, t1267, 0, 0, 0, 0, 0, 0, t1265, t1269, t1259, t1245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1420, -qJDD(1), 0, t1389, 0, 0, 0, 0, 0, 0, t1380, -t1381, 0, t1322, 0, 0, 0, 0, 0, 0, t1331, t1332, t1351, t1292, 0, 0, 0, 0, 0, 0, t1284, t1286, t1282, t1256, 0, 0, 0, 0, 0, 0, t1254, t1258, t1250, t1244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1420, 0, t1388, 0, 0, 0, 0, 0, 0, t1381, t1380, 0, t1321, 0, 0, 0, 0, 0, 0, t1329, t1330, t1350, t1291, 0, 0, 0, 0, 0, 0, t1283, t1285, t1281, t1255, 0, 0, 0, 0, 0, 0, t1253, t1257, t1249, t1243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1438, 0, 0, 0, 0, 0, 0, t1353, t1354, 0, t1306, 0, 0, 0, 0, 0, 0, t1302, t1304, t1296, t1267, 0, 0, 0, 0, 0, 0, t1265, t1269, t1259, t1245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1420, -qJDD(1), 0, t1349, 0, 0, 0, 0, 0, 0, t1355, t1356, t1382, t1307, 0, 0, 0, 0, 0, 0, t1303, t1305, t1297, t1268, 0, 0, 0, 0, 0, 0, t1266, t1270, t1260, t1246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1420, 0, t1348, 0, 0, 0, 0, 0, 0, t1379, -t1376, t1385, -t1342, 0, 0, 0, 0, 0, 0, -t1315, -t1324, -t1309, -t1271, 0, 0, 0, 0, 0, 0, -t1273, -t1275, -t1261, -t1247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1438, 0, 0, 0, 0, 0, 0, t1353, t1354, 0, t1306, 0, 0, 0, 0, 0, 0, t1302, t1304, t1296, t1267, 0, 0, 0, 0, 0, 0, t1265, t1269, t1259, t1245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1391, t1387, t1402, t1328, 0, 0, 0, 0, 0, 0, t1316, t1325, t1310, t1272, 0, 0, 0, 0, 0, 0, t1274, t1276, t1262, t1248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1386, t1390, -t1430, t1327, 0, 0, 0, 0, 0, 0, -t1336, -t1338, -t1333, -t1320, 0, 0, 0, 0, 0, 0, -t1298, -t1300, -t1308, -t1293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1379, t1376, -t1385, t1342, 0, 0, 0, 0, 0, 0, t1315, t1324, t1309, t1271, 0, 0, 0, 0, 0, 0, t1273, t1275, t1261, t1247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1347, t1340, t1337, t1288, 0, 0, 0, 0, 0, 0, t1290, t1295, t1278, t1252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1341, t1360, t1339, t1287, 0, 0, 0, 0, 0, 0, t1289, t1294, t1277, t1251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1336, t1338, t1333, t1320, 0, 0, 0, 0, 0, 0, t1298, t1300, t1308, t1293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1318, t1313, t1299, t1264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1314, t1326, t1301, t1263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1298, t1300, t1308, t1293;];
f_new_reg = t1;
