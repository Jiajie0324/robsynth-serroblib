% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRRR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4,d5]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:31
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRRR9_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR9_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR9_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR9_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR9_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRR9_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:30:58
% EndTime: 2019-12-31 22:31:02
% DurationCPUTime: 4.12s
% Computational Cost: add. (33266->260), mult. (67890->353), div. (0->0), fcn. (48839->10), ass. (0->204)
t1610 = cos(qJ(2));
t1630 = t1610 * qJD(1);
t1590 = -qJD(3) + t1630;
t1585 = -qJD(4) + t1590;
t1579 = -qJD(5) + t1585;
t1648 = qJD(5) - t1579;
t1647 = qJD(2) ^ 2;
t1604 = sin(qJ(3));
t1609 = cos(qJ(3));
t1605 = sin(qJ(2));
t1636 = qJD(1) * t1605;
t1569 = -t1609 * qJD(2) + t1604 * t1636;
t1570 = t1604 * qJD(2) + t1609 * t1636;
t1603 = sin(qJ(4));
t1608 = cos(qJ(4));
t1552 = t1608 * t1569 + t1603 * t1570;
t1554 = -t1603 * t1569 + t1608 * t1570;
t1602 = sin(qJ(5));
t1607 = cos(qJ(5));
t1525 = t1607 * t1552 + t1602 * t1554;
t1646 = t1525 ^ 2;
t1527 = -t1602 * t1552 + t1607 * t1554;
t1645 = t1527 ^ 2;
t1644 = t1552 ^ 2;
t1643 = t1554 ^ 2;
t1642 = t1569 ^ 2;
t1641 = t1570 ^ 2;
t1640 = t1579 ^ 2;
t1639 = t1585 ^ 2;
t1638 = t1590 ^ 2;
t1637 = t1610 * g(3);
t1635 = t1527 * t1525;
t1634 = t1552 * t1585;
t1633 = t1554 * t1552;
t1632 = t1569 * t1590;
t1631 = t1570 * t1569;
t1629 = qJD(3) + t1590;
t1628 = qJD(4) + t1585;
t1627 = qJD(5) + t1579;
t1606 = sin(qJ(1));
t1611 = cos(qJ(1));
t1583 = t1606 * g(1) - t1611 * g(2);
t1612 = qJD(1) ^ 2;
t1566 = qJDD(1) * pkin(1) + t1612 * pkin(6) + t1583;
t1624 = qJD(2) * t1630;
t1625 = t1605 * qJDD(1);
t1573 = t1624 + t1625;
t1593 = qJD(2) * t1636;
t1595 = t1610 * qJDD(1);
t1574 = t1595 - 0.2e1 * t1593;
t1530 = (-t1573 - t1624) * pkin(7) - t1574 * pkin(2) - t1566;
t1584 = -t1611 * g(1) - t1606 * g(2);
t1567 = -t1612 * pkin(1) + qJDD(1) * pkin(6) + t1584;
t1561 = -t1605 * g(3) + t1610 * t1567;
t1571 = (-pkin(2) * t1610 - pkin(7) * t1605) * qJD(1);
t1540 = -t1647 * pkin(2) + qJDD(2) * pkin(7) + t1571 * t1630 + t1561;
t1513 = t1609 * t1530 - t1604 * t1540;
t1623 = t1595 - qJDD(3) - t1593;
t1545 = -t1623 - t1631;
t1618 = -t1604 * qJDD(2) - t1609 * t1573;
t1549 = -t1569 * qJD(3) - t1618;
t1487 = (-t1549 + t1632) * pkin(8) + t1545 * pkin(3) + t1513;
t1514 = t1604 * t1530 + t1609 * t1540;
t1562 = -t1590 * pkin(3) - t1570 * pkin(8);
t1620 = -t1609 * qJDD(2) + t1604 * t1573;
t1616 = -t1570 * qJD(3) - t1620;
t1489 = -t1642 * pkin(3) + t1616 * pkin(8) + t1590 * t1562 + t1514;
t1464 = t1603 * t1487 + t1608 * t1489;
t1598 = t1605 ^ 2;
t1599 = t1610 ^ 2;
t1626 = t1598 + t1599;
t1463 = t1608 * t1487 - t1603 * t1489;
t1613 = -t1608 * t1549 - t1603 * t1616;
t1512 = -t1552 * qJD(4) - t1613;
t1621 = t1603 * t1549 - t1608 * t1616;
t1615 = t1554 * qJD(4) + t1621;
t1622 = -t1602 * t1512 - t1607 * t1615;
t1619 = -qJDD(4) + t1623;
t1617 = -qJDD(5) + t1619;
t1519 = -t1619 - t1633;
t1539 = t1637 - qJDD(2) * pkin(2) - t1647 * pkin(7) + (qJD(1) * t1571 + t1567) * t1605;
t1614 = -t1607 * t1512 + t1602 * t1615;
t1507 = -t1616 * pkin(3) - t1642 * pkin(8) + t1570 * t1562 + t1539;
t1589 = t1610 * t1612 * t1605;
t1588 = -t1599 * t1612 - t1647;
t1587 = -t1598 * t1612 - t1647;
t1582 = -qJDD(2) + t1589;
t1581 = qJDD(2) + t1589;
t1578 = t1626 * t1612;
t1577 = -t1606 * qJDD(1) - t1611 * t1612;
t1576 = t1611 * qJDD(1) - t1606 * t1612;
t1575 = t1626 * qJDD(1);
t1572 = 0.2e1 * t1624 + t1625;
t1560 = -t1605 * t1567 - t1637;
t1559 = t1610 * t1582 - t1605 * t1587;
t1558 = -t1605 * t1581 + t1610 * t1588;
t1557 = t1605 * t1582 + t1610 * t1587;
t1556 = t1610 * t1581 + t1605 * t1588;
t1555 = -t1638 - t1641;
t1550 = -t1638 - t1642;
t1544 = t1623 - t1631;
t1543 = -t1641 - t1642;
t1541 = -t1585 * pkin(4) - t1554 * pkin(9);
t1537 = -t1639 - t1643;
t1536 = -t1605 * t1560 + t1610 * t1561;
t1535 = t1610 * t1560 + t1605 * t1561;
t1534 = t1629 * t1569 + t1618;
t1533 = t1549 + t1632;
t1532 = -t1629 * t1570 - t1620;
t1531 = (qJD(3) - t1590) * t1570 + t1620;
t1524 = t1609 * t1544 - t1604 * t1555;
t1523 = t1604 * t1544 + t1609 * t1555;
t1522 = -t1639 - t1644;
t1521 = -t1604 * t1545 + t1609 * t1550;
t1520 = t1609 * t1545 + t1604 * t1550;
t1518 = t1619 - t1633;
t1516 = -t1640 - t1645;
t1515 = -t1643 - t1644;
t1509 = t1609 * t1532 - t1604 * t1534;
t1508 = t1604 * t1532 + t1609 * t1534;
t1506 = t1610 * t1524 + t1605 * t1533;
t1505 = t1605 * t1524 - t1610 * t1533;
t1504 = t1608 * t1518 - t1603 * t1537;
t1503 = t1603 * t1518 + t1608 * t1537;
t1502 = t1610 * t1521 + t1605 * t1531;
t1501 = t1605 * t1521 - t1610 * t1531;
t1500 = t1628 * t1552 + t1613;
t1499 = t1512 + t1634;
t1498 = -t1628 * t1554 - t1621;
t1497 = (qJD(4) - t1585) * t1554 + t1621;
t1496 = -t1640 - t1646;
t1495 = -t1617 - t1635;
t1494 = t1617 - t1635;
t1493 = -t1603 * t1519 + t1608 * t1522;
t1492 = t1608 * t1519 + t1603 * t1522;
t1491 = t1610 * t1509 + t1605 * t1543;
t1490 = t1605 * t1509 - t1610 * t1543;
t1484 = -t1645 - t1646;
t1483 = -t1604 * t1513 + t1609 * t1514;
t1482 = t1609 * t1513 + t1604 * t1514;
t1481 = t1607 * t1494 - t1602 * t1516;
t1480 = t1602 * t1494 + t1607 * t1516;
t1479 = t1610 * t1483 + t1605 * t1539;
t1478 = t1605 * t1483 - t1610 * t1539;
t1477 = -t1604 * t1503 + t1609 * t1504;
t1476 = t1609 * t1503 + t1604 * t1504;
t1475 = t1608 * t1498 - t1603 * t1500;
t1474 = t1603 * t1498 + t1608 * t1500;
t1473 = -t1602 * t1495 + t1607 * t1496;
t1472 = t1607 * t1495 + t1602 * t1496;
t1471 = -t1604 * t1492 + t1609 * t1493;
t1470 = t1609 * t1492 + t1604 * t1493;
t1469 = t1615 * pkin(4) - t1644 * pkin(9) + t1554 * t1541 + t1507;
t1468 = t1627 * t1525 + t1614;
t1467 = -t1648 * t1525 - t1614;
t1466 = -t1627 * t1527 + t1622;
t1465 = t1648 * t1527 - t1622;
t1462 = t1610 * t1477 + t1605 * t1499;
t1461 = t1605 * t1477 - t1610 * t1499;
t1460 = t1610 * t1471 + t1605 * t1497;
t1459 = t1605 * t1471 - t1610 * t1497;
t1458 = -t1603 * t1480 + t1608 * t1481;
t1457 = t1608 * t1480 + t1603 * t1481;
t1456 = -t1644 * pkin(4) - t1615 * pkin(9) + t1585 * t1541 + t1464;
t1455 = -t1604 * t1474 + t1609 * t1475;
t1454 = t1609 * t1474 + t1604 * t1475;
t1453 = (-t1512 + t1634) * pkin(9) + t1519 * pkin(4) + t1463;
t1452 = -t1603 * t1472 + t1608 * t1473;
t1451 = t1608 * t1472 + t1603 * t1473;
t1450 = t1610 * t1455 + t1605 * t1515;
t1449 = t1605 * t1455 - t1610 * t1515;
t1448 = t1607 * t1466 - t1602 * t1468;
t1447 = t1602 * t1466 + t1607 * t1468;
t1446 = -t1603 * t1463 + t1608 * t1464;
t1445 = t1608 * t1463 + t1603 * t1464;
t1444 = -t1604 * t1457 + t1609 * t1458;
t1443 = t1609 * t1457 + t1604 * t1458;
t1442 = t1602 * t1453 + t1607 * t1456;
t1441 = t1607 * t1453 - t1602 * t1456;
t1440 = -t1604 * t1451 + t1609 * t1452;
t1439 = t1609 * t1451 + t1604 * t1452;
t1438 = t1610 * t1444 + t1605 * t1467;
t1437 = t1605 * t1444 - t1610 * t1467;
t1436 = -t1603 * t1447 + t1608 * t1448;
t1435 = t1608 * t1447 + t1603 * t1448;
t1434 = -t1604 * t1445 + t1609 * t1446;
t1433 = t1609 * t1445 + t1604 * t1446;
t1432 = t1610 * t1440 + t1605 * t1465;
t1431 = t1605 * t1440 - t1610 * t1465;
t1430 = t1610 * t1434 + t1605 * t1507;
t1429 = t1605 * t1434 - t1610 * t1507;
t1428 = -t1602 * t1441 + t1607 * t1442;
t1427 = t1607 * t1441 + t1602 * t1442;
t1426 = -t1604 * t1435 + t1609 * t1436;
t1425 = t1609 * t1435 + t1604 * t1436;
t1424 = t1610 * t1426 + t1605 * t1484;
t1423 = t1605 * t1426 - t1610 * t1484;
t1422 = -t1603 * t1427 + t1608 * t1428;
t1421 = t1608 * t1427 + t1603 * t1428;
t1420 = -t1604 * t1421 + t1609 * t1422;
t1419 = t1609 * t1421 + t1604 * t1422;
t1418 = t1610 * t1420 + t1605 * t1469;
t1417 = t1605 * t1420 - t1610 * t1469;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1577, -t1576, 0, -t1606 * t1583 + t1611 * t1584, 0, 0, 0, 0, 0, 0, t1611 * t1558 - t1606 * t1574, t1611 * t1559 + t1606 * t1572, t1611 * t1575 - t1606 * t1578, t1611 * t1536 - t1606 * t1566, 0, 0, 0, 0, 0, 0, t1611 * t1502 + t1606 * t1520, t1611 * t1506 + t1606 * t1523, t1611 * t1491 + t1606 * t1508, t1611 * t1479 + t1606 * t1482, 0, 0, 0, 0, 0, 0, t1611 * t1460 + t1606 * t1470, t1611 * t1462 + t1606 * t1476, t1611 * t1450 + t1606 * t1454, t1611 * t1430 + t1606 * t1433, 0, 0, 0, 0, 0, 0, t1611 * t1432 + t1606 * t1439, t1611 * t1438 + t1606 * t1443, t1611 * t1424 + t1606 * t1425, t1611 * t1418 + t1606 * t1419; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1576, t1577, 0, t1611 * t1583 + t1606 * t1584, 0, 0, 0, 0, 0, 0, t1606 * t1558 + t1611 * t1574, t1606 * t1559 - t1611 * t1572, t1606 * t1575 + t1611 * t1578, t1606 * t1536 + t1611 * t1566, 0, 0, 0, 0, 0, 0, t1606 * t1502 - t1611 * t1520, t1606 * t1506 - t1611 * t1523, t1606 * t1491 - t1611 * t1508, t1606 * t1479 - t1611 * t1482, 0, 0, 0, 0, 0, 0, t1606 * t1460 - t1611 * t1470, t1606 * t1462 - t1611 * t1476, t1606 * t1450 - t1611 * t1454, t1606 * t1430 - t1611 * t1433, 0, 0, 0, 0, 0, 0, t1606 * t1432 - t1611 * t1439, t1606 * t1438 - t1611 * t1443, t1606 * t1424 - t1611 * t1425, t1606 * t1418 - t1611 * t1419; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1556, t1557, 0, t1535, 0, 0, 0, 0, 0, 0, t1501, t1505, t1490, t1478, 0, 0, 0, 0, 0, 0, t1459, t1461, t1449, t1429, 0, 0, 0, 0, 0, 0, t1431, t1437, t1423, t1417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1612, -qJDD(1), 0, t1584, 0, 0, 0, 0, 0, 0, t1558, t1559, t1575, t1536, 0, 0, 0, 0, 0, 0, t1502, t1506, t1491, t1479, 0, 0, 0, 0, 0, 0, t1460, t1462, t1450, t1430, 0, 0, 0, 0, 0, 0, t1432, t1438, t1424, t1418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1612, 0, t1583, 0, 0, 0, 0, 0, 0, t1574, -t1572, t1578, t1566, 0, 0, 0, 0, 0, 0, -t1520, -t1523, -t1508, -t1482, 0, 0, 0, 0, 0, 0, -t1470, -t1476, -t1454, -t1433, 0, 0, 0, 0, 0, 0, -t1439, -t1443, -t1425, -t1419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1556, t1557, 0, t1535, 0, 0, 0, 0, 0, 0, t1501, t1505, t1490, t1478, 0, 0, 0, 0, 0, 0, t1459, t1461, t1449, t1429, 0, 0, 0, 0, 0, 0, t1431, t1437, t1423, t1417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1588, t1582, t1595, t1561, 0, 0, 0, 0, 0, 0, t1521, t1524, t1509, t1483, 0, 0, 0, 0, 0, 0, t1471, t1477, t1455, t1434, 0, 0, 0, 0, 0, 0, t1440, t1444, t1426, t1420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1581, t1587, -t1625, t1560, 0, 0, 0, 0, 0, 0, -t1531, -t1533, -t1543, -t1539, 0, 0, 0, 0, 0, 0, -t1497, -t1499, -t1515, -t1507, 0, 0, 0, 0, 0, 0, -t1465, -t1467, -t1484, -t1469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1574, t1572, -t1578, -t1566, 0, 0, 0, 0, 0, 0, t1520, t1523, t1508, t1482, 0, 0, 0, 0, 0, 0, t1470, t1476, t1454, t1433, 0, 0, 0, 0, 0, 0, t1439, t1443, t1425, t1419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1550, t1544, t1532, t1514, 0, 0, 0, 0, 0, 0, t1493, t1504, t1475, t1446, 0, 0, 0, 0, 0, 0, t1452, t1458, t1436, t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1545, t1555, t1534, t1513, 0, 0, 0, 0, 0, 0, t1492, t1503, t1474, t1445, 0, 0, 0, 0, 0, 0, t1451, t1457, t1435, t1421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1531, t1533, t1543, t1539, 0, 0, 0, 0, 0, 0, t1497, t1499, t1515, t1507, 0, 0, 0, 0, 0, 0, t1465, t1467, t1484, t1469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1522, t1518, t1498, t1464, 0, 0, 0, 0, 0, 0, t1473, t1481, t1448, t1428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1519, t1537, t1500, t1463, 0, 0, 0, 0, 0, 0, t1472, t1480, t1447, t1427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1497, t1499, t1515, t1507, 0, 0, 0, 0, 0, 0, t1465, t1467, t1484, t1469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1496, t1494, t1466, t1442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1495, t1516, t1468, t1441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1465, t1467, t1484, t1469;];
f_new_reg = t1;
