% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4,d5]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:31
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRR9_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR9_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR9_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR9_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR9_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRR9_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:30:37
% EndTime: 2019-12-31 22:30:58
% DurationCPUTime: 21.86s
% Computational Cost: add. (206171->755), mult. (421278->1036), div. (0->0), fcn. (304203->10), ass. (0->505)
t1306 = sin(qJ(5));
t1308 = sin(qJ(3));
t1313 = cos(qJ(3));
t1309 = sin(qJ(2));
t1393 = qJD(1) * t1309;
t1265 = -t1313 * qJD(2) + t1308 * t1393;
t1266 = t1308 * qJD(2) + t1313 * t1393;
t1307 = sin(qJ(4));
t1312 = cos(qJ(4));
t1227 = t1312 * t1265 + t1307 * t1266;
t1228 = -t1307 * t1265 + t1312 * t1266;
t1311 = cos(qJ(5));
t1172 = t1311 * t1227 + t1306 * t1228;
t1174 = -t1306 * t1227 + t1311 * t1228;
t1120 = t1174 * t1172;
t1297 = qJD(2) * t1393;
t1314 = cos(qJ(2));
t1359 = t1314 * qJDD(1);
t1271 = -t1297 + t1359;
t1262 = -qJDD(3) + t1271;
t1259 = -qJDD(4) + t1262;
t1255 = -qJDD(5) + t1259;
t1410 = -t1120 - t1255;
t1416 = t1306 * t1410;
t1182 = t1228 * t1227;
t1408 = -t1182 - t1259;
t1415 = t1307 * t1408;
t1414 = t1311 * t1410;
t1413 = t1312 * t1408;
t1392 = t1266 * t1265;
t1328 = -t1262 - t1392;
t1412 = t1308 * t1328;
t1411 = t1313 * t1328;
t1367 = t1314 * qJD(1);
t1298 = qJD(2) * t1367;
t1361 = t1309 * qJDD(1);
t1270 = t1298 + t1361;
t1335 = -t1308 * qJDD(2) - t1313 * t1270;
t1223 = -t1265 * qJD(3) - t1335;
t1336 = t1313 * qJDD(2) - t1308 * t1270;
t1327 = t1266 * qJD(3) - t1336;
t1144 = -t1227 * qJD(4) + t1312 * t1223 - t1307 * t1327;
t1348 = t1307 * t1223 + t1312 * t1327;
t1332 = t1228 * qJD(4) + t1348;
t1065 = -t1172 * qJD(5) + t1311 * t1144 - t1306 * t1332;
t1294 = -qJD(3) + t1367;
t1286 = -qJD(4) + t1294;
t1279 = -qJD(5) + t1286;
t1158 = t1172 * t1279;
t1409 = t1158 + t1065;
t1214 = t1227 * t1286;
t1115 = -t1214 + t1144;
t1407 = t1214 + t1144;
t1251 = t1265 * t1294;
t1196 = t1223 - t1251;
t1349 = t1306 * t1144 + t1311 * t1332;
t1040 = (qJD(5) + t1279) * t1174 + t1349;
t1112 = (qJD(4) + t1286) * t1228 + t1348;
t1406 = qJD(2) ^ 2;
t1169 = t1172 ^ 2;
t1170 = t1174 ^ 2;
t1405 = t1227 ^ 2;
t1226 = t1228 ^ 2;
t1404 = t1265 ^ 2;
t1261 = t1266 ^ 2;
t1276 = t1279 ^ 2;
t1285 = t1286 ^ 2;
t1292 = t1294 ^ 2;
t1310 = sin(qJ(1));
t1315 = cos(qJ(1));
t1283 = t1310 * g(1) - t1315 * g(2);
t1316 = qJD(1) ^ 2;
t1257 = qJDD(1) * pkin(1) + t1316 * pkin(6) + t1283;
t1338 = -t1271 + t1297;
t1339 = t1270 + t1298;
t1191 = pkin(2) * t1338 - pkin(7) * t1339 - t1257;
t1284 = t1315 * g(1) + t1310 * g(2);
t1258 = -t1316 * pkin(1) + qJDD(1) * pkin(6) - t1284;
t1245 = -t1309 * g(3) + t1314 * t1258;
t1401 = pkin(2) * t1314;
t1342 = -pkin(7) * t1309 - t1401;
t1268 = t1342 * qJD(1);
t1208 = -t1406 * pkin(2) + qJDD(2) * pkin(7) + t1268 * t1367 + t1245;
t1146 = -t1313 * t1191 + t1308 * t1208;
t1088 = t1328 * pkin(3) - t1196 * pkin(8) - t1146;
t1147 = t1308 * t1191 + t1313 * t1208;
t1246 = -t1294 * pkin(3) - t1266 * pkin(8);
t1093 = -t1404 * pkin(3) - pkin(8) * t1327 + t1294 * t1246 + t1147;
t1029 = -t1312 * t1088 + t1307 * t1093;
t1030 = t1307 * t1088 + t1312 * t1093;
t973 = -t1312 * t1029 + t1307 * t1030;
t1403 = pkin(3) * t973;
t1402 = pkin(2) * t1309;
t1061 = -t1112 * t1307 - t1312 * t1115;
t1400 = pkin(3) * t1061;
t1399 = t1314 * g(3);
t1211 = -t1286 * pkin(4) - t1228 * pkin(9);
t1005 = -t1405 * pkin(4) - pkin(9) * t1332 + t1286 * t1211 + t1030;
t998 = pkin(4) * t1408 - t1115 * pkin(9) - t1029;
t954 = t1306 * t1005 - t1311 * t998;
t955 = t1311 * t1005 + t1306 * t998;
t918 = t1306 * t955 - t1311 * t954;
t1398 = t1307 * t918;
t1397 = t1308 * t973;
t1396 = t1312 * t918;
t1395 = t1313 * t973;
t1394 = qJD(1) * qJD(2);
t1391 = t1279 * t1174;
t1390 = t1279 * t1306;
t1389 = t1279 * t1311;
t1388 = t1286 * t1228;
t1387 = t1286 * t1307;
t1386 = t1286 * t1312;
t1385 = t1294 * t1308;
t1384 = t1294 * t1313;
t1302 = t1309 ^ 2;
t1383 = t1302 * t1316;
t1207 = t1399 - qJDD(2) * pkin(2) - t1406 * pkin(7) + (qJD(1) * t1268 + t1258) * t1309;
t1127 = t1327 * pkin(3) - t1404 * pkin(8) + t1266 * t1246 + t1207;
t1045 = pkin(4) * t1332 - t1405 * pkin(9) + t1228 * t1211 + t1127;
t1382 = t1306 * t1045;
t1103 = -t1120 + t1255;
t1381 = t1306 * t1103;
t1380 = t1307 * t1127;
t1160 = -t1182 + t1259;
t1379 = t1307 * t1160;
t1378 = t1308 * t1207;
t1217 = t1262 - t1392;
t1377 = t1308 * t1217;
t1376 = t1309 * t1257;
t1293 = t1314 * t1316 * t1309;
t1281 = -t1293 + qJDD(2);
t1375 = t1309 * t1281;
t1282 = qJDD(2) + t1293;
t1374 = t1309 * t1282;
t1373 = t1311 * t1045;
t1372 = t1311 * t1103;
t1371 = t1312 * t1127;
t1370 = t1312 * t1160;
t1369 = t1313 * t1207;
t1368 = t1313 * t1217;
t1366 = t1314 * t1257;
t1365 = t1314 * t1281;
t1303 = t1314 ^ 2;
t1362 = t1302 + t1303;
t1360 = t1310 * qJDD(1);
t1358 = t1315 * qJDD(1);
t919 = t1306 * t954 + t1311 * t955;
t894 = t1307 * t919 + t1396;
t917 = pkin(4) * t918;
t1357 = pkin(3) * t894 + t917;
t1043 = -t1158 + t1065;
t981 = -t1040 * t1306 - t1311 * t1043;
t983 = -t1040 * t1311 + t1306 * t1043;
t942 = t1307 * t983 + t1312 * t981;
t979 = pkin(4) * t981;
t1356 = pkin(3) * t942 + t979;
t1355 = t1309 * t1120;
t1354 = t1309 * t1182;
t1353 = t1309 * t1392;
t1352 = t1314 * t1120;
t1351 = t1314 * t1182;
t1350 = t1314 * t1392;
t974 = t1307 * t1029 + t1312 * t1030;
t1084 = t1308 * t1146 + t1313 * t1147;
t1244 = t1309 * t1258 + t1399;
t1200 = t1309 * t1244 + t1314 * t1245;
t1347 = -t1310 * t1283 - t1315 * t1284;
t1346 = t1310 * t1293;
t1345 = t1315 * t1293;
t1201 = -t1226 - t1285;
t1123 = t1312 * t1201 + t1379;
t1344 = pkin(3) * t1123 - t1030;
t1343 = -pkin(2) * t1207 + pkin(7) * t1084;
t1275 = -t1310 * t1316 + t1358;
t1341 = -pkin(5) * t1275 - t1310 * g(3);
t1110 = -t1276 - t1169;
t1057 = t1306 * t1110 + t1414;
t1340 = pkin(4) * t1057 - t954;
t1083 = -t1313 * t1146 + t1308 * t1147;
t1199 = t1314 * t1244 - t1309 * t1245;
t1337 = t1315 * t1283 - t1310 * t1284;
t1166 = -t1285 - t1405;
t1101 = t1307 * t1166 + t1413;
t1334 = pkin(3) * t1101 - t1029;
t1153 = -t1170 - t1276;
t1077 = t1311 * t1153 + t1381;
t1333 = pkin(4) * t1077 - t955;
t1058 = t1311 * t1110 - t1416;
t995 = t1312 * t1057 + t1307 * t1058;
t1331 = pkin(3) * t995 + t1340;
t1224 = -t1292 - t1404;
t1164 = t1313 * t1224 - t1412;
t1252 = t1294 * t1266;
t1193 = t1252 - t1327;
t1330 = pkin(2) * t1193 + pkin(7) * t1164 - t1369;
t1231 = -t1261 - t1292;
t1168 = -t1308 * t1231 + t1368;
t1197 = (qJD(3) - t1294) * t1265 + t1335;
t1329 = pkin(2) * t1197 + pkin(7) * t1168 + t1378;
t1194 = (-qJD(3) - t1294) * t1266 + t1336;
t1141 = t1313 * t1194 + t1308 * t1196;
t1216 = t1261 + t1404;
t1326 = pkin(2) * t1216 + pkin(7) * t1141 + t1084;
t1078 = -t1306 * t1153 + t1372;
t1010 = t1312 * t1077 + t1307 * t1078;
t1325 = pkin(3) * t1010 + t1333;
t1039 = (qJD(5) - t1279) * t1174 + t1349;
t959 = -pkin(4) * t1039 + pkin(9) * t1058 - t1373;
t994 = -pkin(9) * t1057 + t1382;
t996 = -t1307 * t1057 + t1312 * t1058;
t914 = -pkin(3) * t1039 + pkin(8) * t996 + t1307 * t994 + t1312 * t959;
t922 = -pkin(8) * t995 - t1307 * t959 + t1312 * t994;
t952 = -t1308 * t995 + t1313 * t996;
t1324 = -pkin(2) * t1039 + pkin(7) * t952 + t1308 * t922 + t1313 * t914;
t1004 = -pkin(9) * t1077 + t1373;
t1011 = -t1307 * t1077 + t1312 * t1078;
t966 = -pkin(4) * t1409 + pkin(9) * t1078 + t1382;
t915 = -pkin(3) * t1409 + pkin(8) * t1011 + t1307 * t1004 + t1312 * t966;
t924 = -pkin(8) * t1010 + t1312 * t1004 - t1307 * t966;
t961 = -t1308 * t1010 + t1313 * t1011;
t1323 = -pkin(2) * t1409 + pkin(7) * t961 + t1308 * t924 + t1313 * t915;
t895 = t1312 * t919 - t1398;
t912 = -pkin(4) * t1045 + pkin(9) * t919;
t876 = -pkin(3) * t1045 + pkin(8) * t895 - pkin(9) * t1398 + t1312 * t912;
t879 = -pkin(8) * t894 - pkin(9) * t1396 - t1307 * t912;
t882 = -t1308 * t894 + t1313 * t895;
t1322 = -pkin(2) * t1045 + pkin(7) * t882 + t1308 * t879 + t1313 * t876;
t1085 = -t1169 - t1170;
t899 = -pkin(4) * t1085 + pkin(9) * t983 + t919;
t905 = -pkin(9) * t981 - t918;
t944 = -t1307 * t981 + t1312 * t983;
t885 = -pkin(3) * t1085 + pkin(8) * t944 + t1307 * t905 + t1312 * t899;
t886 = -pkin(8) * t942 - t1307 * t899 + t1312 * t905;
t909 = -t1308 * t942 + t1313 * t944;
t1321 = -pkin(2) * t1085 + pkin(7) * t909 + t1308 * t886 + t1313 * t885;
t1063 = -t1112 * t1312 + t1307 * t1115;
t1002 = -t1308 * t1061 + t1313 * t1063;
t1148 = -t1226 - t1405;
t956 = -pkin(3) * t1148 + pkin(8) * t1063 + t974;
t957 = -pkin(8) * t1061 - t973;
t1320 = -pkin(2) * t1148 + pkin(7) * t1002 + t1308 * t957 + t1313 * t956;
t1102 = t1312 * t1166 - t1415;
t1111 = (qJD(4) - t1286) * t1228 + t1348;
t1019 = -pkin(3) * t1111 + pkin(8) * t1102 - t1371;
t1050 = -t1308 * t1101 + t1313 * t1102;
t1066 = -pkin(8) * t1101 + t1380;
t1319 = -pkin(2) * t1111 + pkin(7) * t1050 + t1313 * t1019 + t1308 * t1066;
t1124 = -t1307 * t1201 + t1370;
t1023 = -pkin(3) * t1407 + pkin(8) * t1124 + t1380;
t1068 = -t1308 * t1123 + t1313 * t1124;
t1069 = -pkin(8) * t1123 + t1371;
t1318 = -pkin(2) * t1407 + pkin(7) * t1068 + t1313 * t1023 + t1308 * t1069;
t935 = t1313 * t974 - t1397;
t970 = -pkin(3) * t1127 + pkin(8) * t974;
t1317 = -pkin(2) * t1127 + pkin(7) * t935 - pkin(8) * t1397 + t1313 * t970;
t1300 = t1303 * t1316;
t1291 = -t1300 - t1406;
t1290 = t1300 - t1406;
t1289 = -t1383 - t1406;
t1288 = -t1383 + t1406;
t1278 = -t1300 + t1383;
t1277 = t1300 + t1383;
t1274 = t1315 * t1316 + t1360;
t1273 = t1362 * qJDD(1);
t1272 = -0.2e1 * t1297 + t1359;
t1269 = 0.2e1 * t1298 + t1361;
t1264 = t1314 * t1282;
t1263 = t1362 * t1394;
t1254 = -pkin(5) * t1274 + t1315 * g(3);
t1250 = -t1261 + t1292;
t1249 = -t1292 + t1404;
t1248 = t1314 * t1270 - t1302 * t1394;
t1247 = -t1309 * t1271 - t1303 * t1394;
t1243 = -t1309 * t1289 - t1365;
t1242 = -t1309 * t1288 + t1264;
t1241 = t1314 * t1291 - t1374;
t1240 = t1314 * t1290 - t1375;
t1239 = t1314 * t1289 - t1375;
t1238 = t1314 * t1288 + t1374;
t1237 = t1309 * t1291 + t1264;
t1236 = t1309 * t1290 + t1365;
t1235 = t1339 * t1309;
t1234 = t1338 * t1314;
t1232 = t1261 - t1404;
t1230 = -t1309 * t1269 + t1314 * t1272;
t1229 = t1314 * t1269 + t1309 * t1272;
t1213 = -t1226 + t1285;
t1212 = -t1285 + t1405;
t1210 = -pkin(6) * t1239 - t1366;
t1209 = -pkin(6) * t1237 - t1376;
t1206 = (t1265 * t1313 - t1266 * t1308) * t1294;
t1205 = (t1265 * t1308 + t1266 * t1313) * t1294;
t1203 = -pkin(1) * t1239 + t1245;
t1202 = -pkin(1) * t1237 + t1244;
t1195 = t1223 + t1251;
t1192 = t1252 + t1327;
t1190 = pkin(1) * t1272 + pkin(6) * t1241 + t1366;
t1189 = -pkin(1) * t1269 + pkin(6) * t1243 - t1376;
t1186 = t1313 * t1223 + t1266 * t1385;
t1185 = t1308 * t1223 - t1266 * t1384;
t1184 = -t1265 * t1384 + t1308 * t1327;
t1183 = t1265 * t1385 + t1313 * t1327;
t1181 = t1314 * t1206 - t1309 * t1262;
t1180 = t1309 * t1206 + t1314 * t1262;
t1179 = t1226 - t1405;
t1178 = t1313 * t1249 + t1377;
t1177 = -t1308 * t1250 + t1411;
t1176 = t1308 * t1249 - t1368;
t1175 = t1313 * t1250 + t1412;
t1171 = pkin(1) * t1257 + pkin(6) * t1200;
t1167 = t1313 * t1231 + t1377;
t1165 = pkin(1) * t1277 + pkin(6) * t1273 + t1200;
t1163 = t1308 * t1224 + t1411;
t1157 = -t1170 + t1276;
t1156 = t1169 - t1276;
t1155 = (t1227 * t1312 - t1228 * t1307) * t1286;
t1154 = (t1227 * t1307 + t1228 * t1312) * t1286;
t1152 = t1314 * t1186 + t1353;
t1151 = t1314 * t1184 - t1353;
t1150 = t1309 * t1186 - t1350;
t1149 = t1309 * t1184 + t1350;
t1140 = t1313 * t1193 - t1308 * t1195;
t1139 = t1308 * t1194 - t1313 * t1196;
t1138 = t1308 * t1193 + t1313 * t1195;
t1137 = -pkin(7) * t1167 + t1369;
t1136 = t1314 * t1178 - t1309 * t1192;
t1135 = t1314 * t1177 + t1309 * t1196;
t1134 = t1309 * t1178 + t1314 * t1192;
t1133 = t1309 * t1177 - t1314 * t1196;
t1132 = t1312 * t1212 + t1379;
t1131 = -t1307 * t1213 + t1413;
t1130 = t1307 * t1212 - t1370;
t1129 = t1312 * t1213 + t1415;
t1128 = -pkin(7) * t1163 + t1378;
t1126 = t1314 * t1168 - t1309 * t1197;
t1125 = t1309 * t1168 + t1314 * t1197;
t1122 = t1314 * t1164 - t1309 * t1193;
t1121 = t1309 * t1164 + t1314 * t1193;
t1119 = t1169 - t1170;
t1118 = t1314 * t1140 + t1309 * t1232;
t1117 = t1309 * t1140 - t1314 * t1232;
t1109 = t1312 * t1144 + t1228 * t1387;
t1108 = t1307 * t1144 - t1228 * t1386;
t1107 = -t1227 * t1386 + t1307 * t1332;
t1106 = -t1227 * t1387 - t1312 * t1332;
t1100 = t1314 * t1141 - t1309 * t1216;
t1099 = t1309 * t1141 + t1314 * t1216;
t1098 = (t1172 * t1311 - t1174 * t1306) * t1279;
t1097 = (t1172 * t1306 + t1174 * t1311) * t1279;
t1096 = -pkin(2) * t1167 + t1147;
t1095 = -t1308 * t1154 + t1313 * t1155;
t1094 = t1313 * t1154 + t1308 * t1155;
t1092 = -pkin(2) * t1163 + t1146;
t1090 = t1314 * t1095 - t1309 * t1259;
t1089 = t1309 * t1095 + t1314 * t1259;
t1082 = t1311 * t1156 + t1381;
t1081 = -t1306 * t1157 + t1414;
t1080 = t1306 * t1156 - t1372;
t1079 = t1311 * t1157 + t1416;
t1075 = -t1308 * t1130 + t1313 * t1132;
t1074 = -t1308 * t1129 + t1313 * t1131;
t1073 = t1313 * t1130 + t1308 * t1132;
t1072 = t1313 * t1129 + t1308 * t1131;
t1071 = t1314 * t1084 + t1309 * t1207;
t1070 = t1309 * t1084 - t1314 * t1207;
t1067 = t1313 * t1123 + t1308 * t1124;
t1064 = -t1174 * qJD(5) - t1349;
t1062 = -t1312 * t1111 - t1307 * t1407;
t1060 = -t1307 * t1111 + t1312 * t1407;
t1059 = -pkin(1) * t1125 - t1329;
t1055 = -t1308 * t1108 + t1313 * t1109;
t1054 = -t1308 * t1106 + t1313 * t1107;
t1053 = t1313 * t1108 + t1308 * t1109;
t1052 = t1313 * t1106 + t1308 * t1107;
t1051 = -pkin(1) * t1121 - t1330;
t1049 = t1313 * t1101 + t1308 * t1102;
t1048 = -pkin(7) * t1139 - t1083;
t1047 = -t1307 * t1097 + t1312 * t1098;
t1046 = t1312 * t1097 + t1307 * t1098;
t1038 = t1311 * t1065 + t1174 * t1390;
t1037 = t1306 * t1065 - t1174 * t1389;
t1036 = -t1306 * t1064 - t1172 * t1389;
t1035 = t1311 * t1064 - t1172 * t1390;
t1034 = t1314 * t1055 + t1354;
t1033 = t1314 * t1054 - t1354;
t1032 = t1309 * t1055 - t1351;
t1031 = t1309 * t1054 + t1351;
t1027 = t1314 * t1075 - t1309 * t1112;
t1026 = t1314 * t1074 + t1309 * t1115;
t1025 = t1309 * t1075 + t1314 * t1112;
t1024 = t1309 * t1074 - t1314 * t1115;
t1022 = t1314 * t1068 + t1309 * t1407;
t1021 = t1309 * t1068 - t1314 * t1407;
t1020 = -pkin(6) * t1125 - t1309 * t1096 + t1314 * t1137;
t1018 = -pkin(6) * t1121 - t1309 * t1092 + t1314 * t1128;
t1017 = t1314 * t1050 + t1309 * t1111;
t1016 = t1309 * t1050 - t1314 * t1111;
t1015 = -t1307 * t1080 + t1312 * t1082;
t1014 = -t1307 * t1079 + t1312 * t1081;
t1013 = t1312 * t1080 + t1307 * t1082;
t1012 = t1312 * t1079 + t1307 * t1081;
t1009 = -pkin(1) * t1167 + pkin(6) * t1126 + t1314 * t1096 + t1309 * t1137;
t1008 = -pkin(1) * t1099 - t1326;
t1007 = -pkin(1) * t1070 - t1343;
t1006 = -pkin(1) * t1163 + pkin(6) * t1122 + t1314 * t1092 + t1309 * t1128;
t1003 = -pkin(6) * t1099 + t1314 * t1048 + t1139 * t1402;
t1001 = -t1308 * t1060 + t1313 * t1062;
t1000 = t1313 * t1061 + t1308 * t1063;
t999 = t1313 * t1060 + t1308 * t1062;
t993 = -t1308 * t1046 + t1313 * t1047;
t992 = t1313 * t1046 + t1308 * t1047;
t991 = t1314 * t1001 + t1309 * t1179;
t990 = t1309 * t1001 - t1314 * t1179;
t989 = -t1309 * t1255 + t1314 * t993;
t988 = t1314 * t1255 + t1309 * t993;
t987 = -pkin(6) * t1070 + (-pkin(7) * t1314 + t1402) * t1083;
t986 = t1314 * t1002 + t1309 * t1148;
t985 = t1309 * t1002 - t1314 * t1148;
t984 = pkin(6) * t1100 + t1309 * t1048 + (-pkin(1) - t1401) * t1139;
t982 = -t1311 * t1039 - t1306 * t1409;
t980 = -t1306 * t1039 + t1311 * t1409;
t978 = -t1307 * t1037 + t1312 * t1038;
t977 = -t1307 * t1035 + t1312 * t1036;
t976 = t1312 * t1037 + t1307 * t1038;
t975 = t1312 * t1035 + t1307 * t1036;
t972 = -pkin(2) * t1067 - t1344;
t971 = -pkin(2) * t1049 - t1334;
t969 = -pkin(2) * t1000 - t1400;
t968 = pkin(6) * t1071 + (-pkin(1) + t1342) * t1083;
t967 = -pkin(7) * t1067 - t1308 * t1023 + t1313 * t1069;
t965 = -t1308 * t1013 + t1313 * t1015;
t964 = -t1308 * t1012 + t1313 * t1014;
t963 = t1313 * t1013 + t1308 * t1015;
t962 = t1313 * t1012 + t1308 * t1014;
t960 = t1313 * t1010 + t1308 * t1011;
t958 = -pkin(7) * t1049 - t1308 * t1019 + t1313 * t1066;
t951 = t1308 * t996 + t1313 * t995;
t950 = -t1309 * t1040 + t1314 * t965;
t949 = t1309 * t1043 + t1314 * t964;
t948 = t1314 * t1040 + t1309 * t965;
t947 = -t1314 * t1043 + t1309 * t964;
t946 = t1309 * t1409 + t1314 * t961;
t945 = t1309 * t961 - t1314 * t1409;
t943 = -t1307 * t980 + t1312 * t982;
t941 = t1307 * t982 + t1312 * t980;
t940 = -t1308 * t976 + t1313 * t978;
t939 = -t1308 * t975 + t1313 * t977;
t938 = t1308 * t978 + t1313 * t976;
t937 = t1308 * t977 + t1313 * t975;
t936 = -pkin(1) * t1021 - t1318;
t934 = t1308 * t974 + t1395;
t933 = t1309 * t1039 + t1314 * t952;
t932 = -t1314 * t1039 + t1309 * t952;
t931 = -pkin(1) * t1016 - t1319;
t930 = t1314 * t940 + t1355;
t929 = t1314 * t939 - t1355;
t928 = t1309 * t940 - t1352;
t927 = t1309 * t939 + t1352;
t926 = t1309 * t1127 + t1314 * t935;
t925 = -t1314 * t1127 + t1309 * t935;
t923 = -pkin(6) * t1021 - t1309 * t972 + t1314 * t967;
t921 = -pkin(2) * t934 - t1403;
t920 = -pkin(6) * t1016 - t1309 * t971 + t1314 * t958;
t916 = -pkin(1) * t1067 + pkin(6) * t1022 + t1309 * t967 + t1314 * t972;
t913 = -pkin(1) * t1049 + pkin(6) * t1017 + t1309 * t958 + t1314 * t971;
t911 = -pkin(7) * t1000 - t1308 * t956 + t1313 * t957;
t910 = -pkin(2) * t960 - t1325;
t908 = -t1308 * t941 + t1313 * t943;
t907 = t1308 * t944 + t1313 * t942;
t906 = t1308 * t943 + t1313 * t941;
t904 = -t1309 * t1119 + t1314 * t908;
t903 = t1314 * t1119 + t1309 * t908;
t902 = t1309 * t1085 + t1314 * t909;
t901 = -t1314 * t1085 + t1309 * t909;
t900 = -pkin(7) * t934 - pkin(8) * t1395 - t1308 * t970;
t898 = -pkin(2) * t951 - t1331;
t897 = -pkin(1) * t985 - t1320;
t896 = -pkin(6) * t985 - t1309 * t969 + t1314 * t911;
t893 = -pkin(1) * t925 - t1317;
t892 = -pkin(1) * t1000 + pkin(6) * t986 + t1309 * t911 + t1314 * t969;
t891 = -pkin(2) * t907 - t1356;
t890 = -pkin(7) * t960 - t1308 * t915 + t1313 * t924;
t889 = -pkin(7) * t951 - t1308 * t914 + t1313 * t922;
t888 = -pkin(6) * t925 - t1309 * t921 + t1314 * t900;
t887 = -pkin(1) * t945 - t1323;
t884 = -pkin(1) * t932 - t1324;
t883 = -pkin(1) * t934 + pkin(6) * t926 + t1309 * t900 + t1314 * t921;
t881 = t1308 * t895 + t1313 * t894;
t880 = -pkin(6) * t945 - t1309 * t910 + t1314 * t890;
t878 = t1309 * t1045 + t1314 * t882;
t877 = -t1314 * t1045 + t1309 * t882;
t875 = -pkin(1) * t960 + pkin(6) * t946 + t1309 * t890 + t1314 * t910;
t874 = -pkin(6) * t932 - t1309 * t898 + t1314 * t889;
t873 = -pkin(1) * t951 + pkin(6) * t933 + t1309 * t889 + t1314 * t898;
t872 = -pkin(2) * t881 - t1357;
t871 = -pkin(7) * t907 - t1308 * t885 + t1313 * t886;
t870 = -pkin(1) * t901 - t1321;
t869 = -pkin(6) * t901 - t1309 * t891 + t1314 * t871;
t868 = -pkin(7) * t881 - t1308 * t876 + t1313 * t879;
t867 = -pkin(1) * t907 + pkin(6) * t902 + t1309 * t871 + t1314 * t891;
t866 = -pkin(1) * t877 - t1322;
t865 = -pkin(6) * t877 - t1309 * t872 + t1314 * t868;
t864 = -pkin(1) * t881 + pkin(6) * t878 + t1309 * t868 + t1314 * t872;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1275, 0, -t1274, 0, t1341, -t1254, -t1337, -pkin(5) * t1337, t1315 * t1248 - t1346, t1315 * t1230 + t1310 * t1278, t1315 * t1242 + t1309 * t1360, t1315 * t1247 + t1346, t1315 * t1240 + t1310 * t1359, t1310 * qJDD(2) + t1315 * t1263, t1315 * t1209 - t1310 * t1202 - pkin(5) * (t1310 * t1241 + t1315 * t1272), t1315 * t1210 - t1310 * t1203 - pkin(5) * (t1310 * t1243 - t1315 * t1269), t1315 * t1199 - pkin(5) * (t1310 * t1273 + t1315 * t1277), -pkin(5) * (t1310 * t1200 + t1315 * t1257) - (t1310 * pkin(1) - t1315 * pkin(6)) * t1199, t1315 * t1152 + t1310 * t1185, t1315 * t1118 + t1310 * t1138, t1315 * t1135 + t1310 * t1175, t1315 * t1151 - t1310 * t1183, t1315 * t1136 + t1310 * t1176, t1315 * t1181 + t1310 * t1205, t1315 * t1018 - t1310 * t1051 - pkin(5) * (t1310 * t1122 - t1315 * t1163), t1315 * t1020 - t1310 * t1059 - pkin(5) * (t1310 * t1126 - t1315 * t1167), t1315 * t1003 - t1310 * t1008 - pkin(5) * (t1310 * t1100 - t1315 * t1139), t1315 * t987 - t1310 * t1007 - pkin(5) * (t1310 * t1071 - t1315 * t1083), t1315 * t1034 + t1310 * t1053, t1310 * t999 + t1315 * t991, t1315 * t1026 + t1310 * t1072, t1315 * t1033 + t1310 * t1052, t1315 * t1027 + t1310 * t1073, t1315 * t1090 + t1310 * t1094, t1315 * t920 - t1310 * t931 - pkin(5) * (t1310 * t1017 - t1315 * t1049), t1315 * t923 - t1310 * t936 - pkin(5) * (t1310 * t1022 - t1315 * t1067), t1315 * t896 - t1310 * t897 - pkin(5) * (-t1315 * t1000 + t1310 * t986), t1315 * t888 - t1310 * t893 - pkin(5) * (t1310 * t926 - t1315 * t934), t1310 * t938 + t1315 * t930, t1310 * t906 + t1315 * t904, t1310 * t962 + t1315 * t949, t1310 * t937 + t1315 * t929, t1310 * t963 + t1315 * t950, t1310 * t992 + t1315 * t989, t1315 * t874 - t1310 * t884 - pkin(5) * (t1310 * t933 - t1315 * t951), t1315 * t880 - t1310 * t887 - pkin(5) * (t1310 * t946 - t1315 * t960), t1315 * t869 - t1310 * t870 - pkin(5) * (t1310 * t902 - t1315 * t907), t1315 * t865 - t1310 * t866 - pkin(5) * (t1310 * t878 - t1315 * t881); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1274, 0, t1275, 0, t1254, t1341, t1347, pkin(5) * t1347, t1310 * t1248 + t1345, t1310 * t1230 - t1315 * t1278, t1310 * t1242 - t1309 * t1358, t1310 * t1247 - t1345, t1310 * t1240 - t1314 * t1358, -t1315 * qJDD(2) + t1310 * t1263, t1310 * t1209 + t1315 * t1202 + pkin(5) * (t1315 * t1241 - t1310 * t1272), t1310 * t1210 + t1315 * t1203 + pkin(5) * (t1315 * t1243 + t1310 * t1269), t1310 * t1199 + pkin(5) * (t1315 * t1273 - t1310 * t1277), pkin(5) * (t1315 * t1200 - t1310 * t1257) - (-t1315 * pkin(1) - t1310 * pkin(6)) * t1199, t1310 * t1152 - t1315 * t1185, t1310 * t1118 - t1315 * t1138, t1310 * t1135 - t1315 * t1175, t1310 * t1151 + t1315 * t1183, t1310 * t1136 - t1315 * t1176, t1310 * t1181 - t1315 * t1205, t1310 * t1018 + t1315 * t1051 + pkin(5) * (t1315 * t1122 + t1310 * t1163), t1310 * t1020 + t1315 * t1059 + pkin(5) * (t1315 * t1126 + t1310 * t1167), t1310 * t1003 + t1315 * t1008 + pkin(5) * (t1315 * t1100 + t1310 * t1139), t1310 * t987 + t1315 * t1007 + pkin(5) * (t1315 * t1071 + t1310 * t1083), t1310 * t1034 - t1315 * t1053, t1310 * t991 - t1315 * t999, t1310 * t1026 - t1315 * t1072, t1310 * t1033 - t1315 * t1052, t1027 * t1310 - t1073 * t1315, t1090 * t1310 - t1094 * t1315, t1310 * t920 + t1315 * t931 + pkin(5) * (t1017 * t1315 + t1049 * t1310), t1310 * t923 + t1315 * t936 + pkin(5) * (t1022 * t1315 + t1067 * t1310), t1310 * t896 + t1315 * t897 + pkin(5) * (t1000 * t1310 + t1315 * t986), t1310 * t888 + t1315 * t893 + pkin(5) * (t1310 * t934 + t1315 * t926), t1310 * t930 - t1315 * t938, t1310 * t904 - t1315 * t906, t1310 * t949 - t1315 * t962, t1310 * t929 - t1315 * t937, t1310 * t950 - t1315 * t963, t1310 * t989 - t1315 * t992, t1310 * t874 + t1315 * t884 + pkin(5) * (t1310 * t951 + t1315 * t933), t1310 * t880 + t1315 * t887 + pkin(5) * (t1310 * t960 + t1315 * t946), t1310 * t869 + t1315 * t870 + pkin(5) * (t1310 * t907 + t1315 * t902), t1310 * t865 + t1315 * t866 + pkin(5) * (t1310 * t881 + t1315 * t878); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1283, t1284, 0, 0, t1235, t1229, t1238, -t1234, t1236, 0, t1190, t1189, t1165, t1171, t1150, t1117, t1133, t1149, t1134, t1180, t1006, t1009, t984, t968, t1032, t990, t1024, t1031, t1025, t1089, t913, t916, t892, t883, t928, t903, t947, t927, t948, t988, t873, t875, t867, t864; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1316, 0, 0, -g(3), -t1283, 0, t1248, t1230, t1242, t1247, t1240, t1263, t1209, t1210, t1199, pkin(6) * t1199, t1152, t1118, t1135, t1151, t1136, t1181, t1018, t1020, t1003, t987, t1034, t991, t1026, t1033, t1027, t1090, t920, t923, t896, t888, t930, t904, t949, t929, t950, t989, t874, t880, t869, t865; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1316, 0, qJDD(1), 0, g(3), 0, -t1284, 0, t1293, -t1278, -t1361, -t1293, -t1359, -qJDD(2), t1202, t1203, 0, pkin(1) * t1199, -t1185, -t1138, -t1175, t1183, -t1176, -t1205, t1051, t1059, t1008, t1007, -t1053, -t999, -t1072, -t1052, -t1073, -t1094, t931, t936, t897, t893, -t938, -t906, -t962, -t937, -t963, -t992, t884, t887, t870, t866; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1283, t1284, 0, 0, t1235, t1229, t1238, -t1234, t1236, 0, t1190, t1189, t1165, t1171, t1150, t1117, t1133, t1149, t1134, t1180, t1006, t1009, t984, t968, t1032, t990, t1024, t1031, t1025, t1089, t913, t916, t892, t883, t928, t903, t947, t927, t948, t988, t873, t875, t867, t864; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1270, t1272, t1282, -t1298, t1290, t1298, 0, -t1257, t1244, 0, t1186, t1140, t1177, t1184, t1178, t1206, t1128, t1137, t1048, -pkin(7) * t1083, t1055, t1001, t1074, t1054, t1075, t1095, t958, t967, t911, t900, t940, t908, t964, t939, t965, t993, t889, t890, t871, t868; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1297, t1269, t1288, t1271, t1281, -t1297, t1257, 0, t1245, 0, -t1392, -t1232, -t1196, t1392, t1192, t1262, t1092, t1096, -pkin(2) * t1139, -pkin(2) * t1083, -t1182, -t1179, -t1115, t1182, t1112, t1259, t971, t972, t969, t921, -t1120, t1119, -t1043, t1120, t1040, t1255, t898, t910, t891, t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1293, t1278, t1361, t1293, t1359, qJDD(2), -t1244, -t1245, 0, 0, t1185, t1138, t1175, -t1183, t1176, t1205, t1330, t1329, t1326, t1343, t1053, t999, t1072, t1052, t1073, t1094, t1319, t1318, t1320, t1317, t938, t906, t962, t937, t963, t992, t1324, t1323, t1321, t1322; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1223, t1193, t1328, -t1251, t1249, t1251, 0, t1207, t1146, 0, t1109, t1062, t1131, t1107, t1132, t1155, t1066, t1069, t957, -pkin(8) * t973, t978, t943, t1014, t977, t1015, t1047, t922, t924, t886, t879; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1252, t1195, t1250, -t1327, -t1217, t1252, -t1207, 0, t1147, 0, t1108, t1060, t1129, t1106, t1130, t1154, t1019, t1023, t956, t970, t976, t941, t1012, t975, t1013, t1046, t914, t915, t885, t876; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1392, t1232, t1196, -t1392, -t1192, -t1262, -t1146, -t1147, 0, 0, t1182, t1179, t1115, -t1182, -t1112, -t1259, t1334, t1344, t1400, t1403, t1120, -t1119, t1043, -t1120, -t1040, -t1255, t1331, t1325, t1356, t1357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1144, -t1111, t1408, -t1214, t1212, t1214, 0, t1127, t1029, 0, t1038, t982, t1081, t1036, t1082, t1098, t994, t1004, t905, -pkin(9) * t918; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1388, t1407, t1213, -t1332, -t1160, t1388, -t1127, 0, t1030, 0, t1037, t980, t1079, t1035, t1080, t1097, t959, t966, t899, t912; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1182, t1179, t1115, -t1182, -t1112, -t1259, -t1029, -t1030, 0, 0, t1120, -t1119, t1043, -t1120, -t1040, -t1255, t1340, t1333, t979, t917; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1065, -t1039, t1410, -t1158, t1156, t1158, 0, t1045, t954, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1391, t1409, t1157, t1064, -t1103, t1391, -t1045, 0, t955, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1120, -t1119, t1043, -t1120, -t1040, -t1255, -t954, -t955, 0, 0;];
m_new_reg = t1;
