% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRPR11
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:28
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRPR11_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR11_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR11_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR11_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR11_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRPR11_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:28:15
% EndTime: 2019-12-31 18:28:32
% DurationCPUTime: 17.18s
% Computational Cost: add. (47370->618), mult. (117202->758), div. (0->0), fcn. (83514->8), ass. (0->419)
t1166 = sin(pkin(8));
t1167 = cos(pkin(8));
t1170 = sin(qJ(3));
t1173 = cos(qJ(3));
t1297 = t1166 * t1173 + t1167 * t1170;
t1128 = t1297 * qJD(1);
t1123 = t1128 ^ 2;
t1175 = qJD(3) ^ 2;
t1079 = t1175 + t1123;
t1259 = t1166 * t1170;
t1126 = (-t1167 * t1173 + t1259) * qJD(1);
t1266 = t1128 * t1126;
t1295 = qJDD(3) + t1266;
t1252 = t1170 * t1295;
t1011 = t1173 * t1079 + t1252;
t1242 = t1173 * t1295;
t1032 = t1170 * t1079 - t1242;
t937 = t1167 * t1011 - t1166 * t1032;
t1354 = pkin(1) * t937;
t1353 = qJ(2) * t937;
t975 = t1166 * t1011 + t1167 * t1032;
t1352 = qJ(2) * t975;
t1171 = sin(qJ(1));
t1351 = t1171 * t975;
t1174 = cos(qJ(1));
t1350 = t1174 * t975;
t1151 = t1167 * qJDD(1);
t1143 = t1173 * t1151;
t1149 = t1166 * qJDD(1);
t1124 = t1170 * t1149 - t1143;
t1289 = t1126 ^ 2;
t1106 = t1289 - t1175;
t1021 = t1170 * t1106 + t1242;
t1027 = t1173 * t1106 - t1252;
t971 = t1166 * t1021 - t1167 * t1027;
t1349 = -t1174 * t1124 + t1171 * t971;
t1348 = t1171 * t1124 + t1174 * t971;
t1347 = pkin(2) * t1011;
t1346 = pkin(6) * t1011;
t1345 = pkin(6) * t1032;
t1107 = t1123 - t1175;
t1296 = qJDD(3) - t1266;
t1251 = t1170 * t1296;
t1322 = -t1173 * t1107 + t1251;
t1068 = t1173 * t1296;
t1323 = t1170 * t1107 + t1068;
t1331 = -t1166 * t1322 + t1167 * t1323;
t1344 = t1171 * t1331;
t1343 = t1174 * t1331;
t964 = t1167 * t1021 + t1166 * t1027;
t1125 = t1297 * qJDD(1);
t1309 = -t1173 * t1124 + t1170 * t1125;
t1310 = -t1170 * t1124 - t1173 * t1125;
t1317 = t1166 * t1309 + t1167 * t1310;
t1342 = pkin(1) * t1317;
t1298 = -t1175 - t1289;
t1305 = t1173 * t1298 - t1251;
t1311 = t1170 * t1298 + t1068;
t1319 = t1166 * t1305 + t1167 * t1311;
t1341 = pkin(1) * t1319;
t1340 = qJ(2) * t1317;
t1339 = qJ(2) * t1319;
t1267 = t1128 * qJD(3);
t1086 = t1124 + 0.2e1 * t1267;
t1320 = -t1166 * t1311 + t1167 * t1305;
t1338 = -pkin(1) * t1086 + qJ(2) * t1320;
t1043 = -t1289 - t1123;
t1318 = -t1166 * t1310 + t1167 * t1309;
t1337 = -pkin(1) * t1043 + qJ(2) * t1318;
t1336 = pkin(5) * (-t1174 * t1086 + t1171 * t1320);
t1335 = pkin(5) * (-t1174 * t1043 + t1171 * t1318);
t1334 = pkin(5) * (t1171 * t1086 + t1174 * t1320);
t1333 = pkin(5) * (t1171 * t1043 + t1174 * t1318);
t1332 = t1166 * t1323 + t1167 * t1322;
t1281 = pkin(2) * t1310;
t1329 = pkin(2) * t1311;
t1328 = pkin(6) * t1305;
t1327 = pkin(6) * t1310;
t1326 = pkin(6) * t1311;
t1321 = -pkin(2) * t1043 + pkin(6) * t1309;
t1117 = qJD(3) * t1126;
t1088 = t1125 - t1117;
t1301 = -t1117 + t1088;
t1203 = t1301 * qJ(4);
t1169 = sin(qJ(5));
t1172 = cos(qJ(5));
t1065 = -t1172 * t1126 + t1169 * t1128;
t1067 = t1169 * t1126 + t1172 * t1128;
t1009 = t1067 * t1065;
t1158 = qJDD(3) - qJDD(5);
t1302 = -t1009 - t1158;
t1316 = t1169 * t1302;
t1300 = t1123 - t1289;
t1315 = t1171 * t1300;
t1314 = t1172 * t1302;
t1313 = t1174 * t1300;
t1140 = t1174 * g(1) + t1171 * g(2);
t1176 = qJD(1) ^ 2;
t1222 = -t1176 * pkin(1) + qJDD(1) * qJ(2) + 0.2e1 * qJD(1) * qJD(2) - t1140;
t1312 = pkin(6) * qJDD(1) + t1222;
t1265 = t1128 * t1173;
t1268 = t1126 * t1170;
t1191 = (-t1265 - t1268) * qJD(3);
t1104 = t1170 * t1267;
t1228 = t1173 * t1117;
t1204 = t1104 - t1228;
t1290 = -t1166 * t1191 + t1167 * t1204;
t1308 = t1171 * qJDD(3) + t1174 * t1290;
t1226 = t1174 * t1266;
t1188 = t1124 + t1267;
t1182 = t1170 * t1188 + t1228;
t1205 = qJD(3) * t1268 - t1173 * t1188;
t1293 = -t1166 * t1205 + t1167 * t1182;
t1307 = t1171 * t1293 + t1226;
t1306 = -t1174 * qJDD(3) + t1171 * t1290;
t1229 = t1171 * t1266;
t1304 = t1174 * t1293 - t1229;
t1161 = qJD(3) - qJD(5);
t1053 = t1065 * t1161;
t987 = -t1065 * qJD(5) + t1172 * t1088 + t1169 * t1188;
t1303 = t1053 + t987;
t1041 = t1117 + t1088;
t1075 = t1126 * pkin(3) - t1128 * qJ(4);
t1256 = t1167 * t1176;
t1278 = t1167 * g(3);
t1049 = -t1278 + (pkin(2) * t1256 - t1312) * t1166;
t1160 = t1167 ^ 2;
t1152 = t1160 * t1176;
t1279 = t1166 * g(3);
t1056 = -pkin(2) * t1152 + t1312 * t1167 - t1279;
t990 = -t1173 * t1049 + t1170 * t1056;
t953 = -qJDD(3) * pkin(3) - t1175 * qJ(4) + t1128 * t1075 + qJDD(4) + t990;
t911 = -t1296 * pkin(4) - t1041 * pkin(7) + t953;
t1103 = -qJD(3) * pkin(4) - t1128 * pkin(7);
t1269 = qJD(4) * qJD(3);
t1154 = 0.2e1 * t1269;
t991 = t1170 * t1049 + t1173 * t1056;
t1202 = -t1175 * pkin(3) + qJDD(3) * qJ(4) - t1126 * t1075 + t991;
t951 = t1154 + t1202;
t915 = -t1289 * pkin(4) + pkin(7) * t1188 + qJD(3) * t1103 + t951;
t866 = t1169 * t915 - t1172 * t911;
t867 = t1169 * t911 + t1172 * t915;
t829 = t1169 * t867 - t1172 * t866;
t1159 = t1166 ^ 2;
t1299 = t1159 + t1160;
t1294 = t1176 * t1299;
t1220 = t1169 * t1088 - t1172 * t1188;
t941 = (qJD(5) + t1161) * t1067 + t1220;
t1292 = t1166 * t1182 + t1167 * t1205;
t1291 = t1166 * t1204 + t1167 * t1191;
t1063 = t1065 ^ 2;
t1064 = t1067 ^ 2;
t1157 = t1161 ^ 2;
t1288 = 0.2e1 * qJD(4);
t1287 = pkin(3) + pkin(4);
t920 = t1170 * t991 - t1173 * t990;
t1286 = pkin(2) * t920;
t1285 = pkin(4) * t829;
t945 = -t1053 + t987;
t892 = -t1169 * t941 - t1172 * t945;
t1284 = pkin(4) * t892;
t1283 = pkin(7) * t829;
t830 = t1169 * t866 + t1172 * t867;
t1282 = pkin(7) * t830;
t1280 = pkin(3) * t1173;
t1276 = qJDD(1) * pkin(1);
t1275 = -pkin(3) * t953 + qJ(4) * t951;
t1274 = t1166 * t920;
t1273 = t1167 * t920;
t1112 = pkin(3) * t1267;
t1139 = t1171 * g(1) - t1174 * g(2);
t1211 = -qJDD(2) + t1139;
t1184 = (t1299 * pkin(6) + qJ(2)) * t1176 + t1211;
t1232 = t1167 * pkin(2) + pkin(1);
t1180 = (-pkin(3) * t1259 + t1232) * qJDD(1) - t1112 + t1184;
t908 = t1143 * pkin(3) - t1188 * pkin(4) - t1289 * pkin(7) + (-qJD(3) * pkin(3) + t1103 + t1288) * t1128 + t1203 + t1180;
t1271 = t1169 * t908;
t907 = t1172 * t908;
t1264 = t1159 * t1176;
t1263 = t1161 * t1067;
t1262 = t1161 * t1169;
t1261 = t1161 * t1172;
t1260 = t1166 * t1167;
t1005 = -t1009 + t1158;
t1255 = t1169 * t1005;
t1254 = t1170 * t1301;
t1080 = t1232 * qJDD(1) + t1184;
t1253 = t1170 * t1080;
t1250 = t1170 * t1086;
t1120 = t1176 * qJ(2) + t1211 + t1276;
t1246 = t1171 * t1120;
t1244 = t1172 * t1005;
t1243 = t1173 * t1080;
t1241 = t1173 * t1086;
t1240 = t1174 * t1120;
t1237 = -pkin(3) * t1125 - qJ(4) * t1124;
t1236 = t1171 * qJDD(1);
t1235 = t1174 * qJDD(1);
t1233 = t1128 * t1288;
t1047 = -t1064 - t1157;
t957 = t1172 * t1047 + t1255;
t1231 = -pkin(7) * t957 + t907;
t1230 = t1171 * t1009;
t1227 = t1174 * t1009;
t1225 = -qJ(4) * t1170 - pkin(2);
t1224 = t1166 * t1151;
t1223 = t1120 + t1276;
t921 = t1170 * t990 + t1173 * t991;
t1095 = t1222 * t1166 + t1278;
t1096 = t1222 * t1167 - t1279;
t1020 = t1166 * t1095 + t1167 * t1096;
t1219 = -t1171 * t1139 - t1174 * t1140;
t896 = t1170 * t951 - t1173 * t953;
t1218 = pkin(2) * t896 + t1275;
t1217 = -pkin(3) * t829 + qJ(4) * t830 - t1285;
t894 = t1169 * t945 - t1172 * t941;
t1216 = -pkin(3) * t892 + qJ(4) * t894 - t1284;
t1215 = -pkin(4) * t957 + t867;
t1214 = -t991 - t1347;
t1213 = t1237 + t1281;
t1138 = -t1171 * t1176 + t1235;
t1212 = -pkin(5) * t1138 - t1171 * g(3);
t1004 = -t1157 - t1063;
t928 = t1169 * t1004 + t1314;
t1210 = -pkin(7) * t928 + t1271;
t958 = -t1169 * t1047 + t1244;
t1209 = -pkin(7) * t958 - t1271;
t929 = t1172 * t1004 - t1316;
t1208 = -pkin(7) * t929 + t907;
t1037 = qJD(3) * t1265 + t1170 * t1088;
t1038 = t1173 * t1088 - t1104;
t983 = -t1166 * t1037 + t1167 * t1038;
t1207 = t1174 * t983 + t1229;
t1206 = t1171 * t983 - t1226;
t1019 = t1167 * t1095 - t1166 * t1096;
t1201 = t1174 * t1139 - t1171 * t1140;
t1137 = t1174 * t1176 + t1236;
t1200 = -pkin(4) * t928 + t866;
t1199 = -pkin(7) * t892 - t829;
t1198 = -pkin(7) * t894 - t830;
t1197 = -pkin(3) * t957 + qJ(4) * t958 + t1215;
t1196 = -t990 + t1329;
t808 = t1170 * t830 - t1173 * t829;
t1195 = pkin(2) * t808 + t1217;
t848 = t1170 * t894 - t1173 * t892;
t1194 = pkin(2) * t848 + t1216;
t1131 = t1167 * t1294;
t1193 = -t1171 * t1131 + t1167 * t1235;
t1192 = t1174 * t1131 + t1167 * t1236;
t1190 = pkin(3) * t1079 + qJ(4) * t1295 + t1202;
t1189 = -pkin(3) * t928 + qJ(4) * t929 + t1200;
t900 = t1170 * t958 - t1173 * t957;
t1187 = pkin(2) * t900 + t1197;
t881 = t1170 * t929 - t1173 * t928;
t1186 = pkin(2) * t881 + t1189;
t1185 = t1190 + t1347;
t1183 = pkin(3) * t1296 + qJ(4) * t1298 - t953;
t1181 = t1183 + t1329;
t1179 = (t1143 - t1267) * pkin(3) + t1233 + t1180;
t1150 = t1160 * qJDD(1);
t1148 = t1159 * qJDD(1);
t1142 = t1166 * t1256;
t1141 = 0.2e1 * t1224;
t1136 = -t1152 + t1264;
t1135 = t1152 + t1264;
t1134 = t1150 - t1148;
t1133 = t1150 + t1148;
t1130 = t1166 * t1294;
t1121 = -pkin(5) * t1137 + t1174 * g(3);
t1101 = t1138 * t1260;
t1100 = t1137 * t1260;
t1098 = t1174 * t1130 + t1166 * t1236;
t1097 = t1171 * t1130 - t1166 * t1235;
t1087 = t1125 - 0.2e1 * t1117;
t1055 = -qJ(2) * t1131 + t1223 * t1167;
t1054 = qJ(2) * t1130 - t1223 * t1166;
t1051 = -t1064 + t1157;
t1050 = t1063 - t1157;
t1017 = -t1170 * t1087 - t1241;
t1015 = t1173 * t1087 - t1250;
t1008 = t1064 - t1063;
t1001 = pkin(1) * t1120 + qJ(2) * t1020;
t996 = (t1065 * t1172 - t1067 * t1169) * t1161;
t995 = (t1065 * t1169 + t1067 * t1172) * t1161;
t994 = t1241 + t1254;
t993 = -t1173 * t1301 + t1250;
t992 = pkin(1) * t1135 + qJ(2) * t1133 + t1020;
t988 = -t1243 + t1346;
t986 = -t1067 * qJD(5) - t1220;
t985 = -t1253 - t1326;
t984 = -t1063 - t1064;
t980 = t1167 * t1037 + t1166 * t1038;
t963 = t1172 * t1050 + t1255;
t962 = -t1169 * t1051 + t1314;
t961 = t1169 * t1050 - t1244;
t960 = t1172 * t1051 + t1316;
t959 = -pkin(2) * t1087 - t1253 + t1345;
t954 = -pkin(2) * t1086 + t1243 + t1328;
t950 = -t1166 * t1015 + t1167 * t1017;
t948 = t1167 * t1015 + t1166 * t1017;
t940 = (qJD(5) - t1161) * t1067 + t1220;
t935 = t1203 + t1179;
t934 = t1067 * t1262 + t1172 * t987;
t933 = -t1067 * t1261 + t1169 * t987;
t932 = -t1065 * t1261 - t1169 * t986;
t931 = t1065 * t1262 - t1172 * t986;
t930 = -t1213 - t1342;
t925 = t1170 * t995 + t1173 * t996;
t924 = t1170 * t996 - t1173 * t995;
t923 = -t1166 * t993 + t1167 * t994;
t922 = t1166 * t994 + t1167 * t993;
t919 = t1233 - t1112 + t1203 + (-t1086 - t1188) * pkin(3) + t1080;
t918 = -qJ(4) * t1043 + t953;
t917 = -pkin(3) * t1043 + t951;
t916 = t1179 + 0.2e1 * t1203;
t914 = pkin(2) * t1080 + pkin(6) * t921;
t912 = -t1281 - t1342;
t906 = -t920 - t1327;
t905 = t1170 * t961 + t1173 * t963;
t904 = t1170 * t960 + t1173 * t962;
t903 = t1170 * t963 - t1173 * t961;
t902 = t1170 * t962 - t1173 * t960;
t901 = t1170 * t957 + t1173 * t958;
t899 = -t1214 + t1354;
t898 = -qJ(4) * t1241 - t1170 * t919 - t1326;
t897 = t1170 * t953 + t1173 * t951;
t895 = t1321 + t921;
t893 = -t1169 * t1303 - t1172 * t940;
t891 = -t1169 * t940 + t1172 * t1303;
t888 = -t1196 - t1341;
t887 = t1225 * t1086 + t1173 * t919 + t1328;
t886 = t1170 * t933 + t1173 * t934;
t885 = -t1170 * t931 + t1173 * t932;
t884 = t1170 * t934 - t1173 * t933;
t883 = t1170 * t932 + t1173 * t931;
t882 = t1170 * t928 + t1173 * t929;
t880 = -pkin(3) * t1254 + t1173 * t916 - t1346;
t879 = -t1166 * t959 + t1167 * t988 + t1353;
t878 = -t1166 * t924 + t1167 * t925;
t877 = t1166 * t925 + t1167 * t924;
t876 = t1167 * t921 - t1274;
t875 = t1166 * t921 + t1273;
t874 = -t1181 - t1341;
t873 = -t1345 + t1170 * t916 + (pkin(2) + t1280) * t1301;
t872 = -pkin(1) * t1087 + t1166 * t988 + t1167 * t959 + t1352;
t871 = -t1166 * t954 + t1167 * t985 - t1339;
t870 = -t1170 * t917 + t1173 * t918 - t1327;
t869 = -t1185 - 0.2e1 * t1269 - t1354;
t868 = t1166 * t985 + t1167 * t954 + t1338;
t863 = t1170 * t918 + t1173 * t917 + t1321;
t862 = qJ(4) * t1303 + t1231;
t861 = -t1166 * t903 + t1167 * t905;
t860 = -t1166 * t902 + t1167 * t904;
t859 = t1166 * t905 + t1167 * t903;
t858 = t1166 * t904 + t1167 * t902;
t857 = -t1166 * t900 + t1167 * t901;
t856 = t1166 * t901 + t1167 * t900;
t855 = qJ(4) * t940 + t1210;
t854 = -pkin(1) * t875 - t1286;
t853 = -t1166 * t896 + t1167 * t897;
t852 = t1166 * t897 + t1167 * t896;
t851 = -pkin(6) * t896 + (-pkin(3) * t1170 + qJ(4) * t1173) * t935;
t850 = t1170 * t892 + t1173 * t894;
t849 = t1170 * t891 + t1173 * t893;
t847 = t1170 * t893 - t1173 * t891;
t846 = -t1166 * t884 + t1167 * t886;
t845 = -t1166 * t883 + t1167 * t885;
t844 = t1166 * t886 + t1167 * t884;
t843 = t1166 * t885 + t1167 * t883;
t842 = -t1166 * t881 + t1167 * t882;
t841 = t1166 * t882 + t1167 * t881;
t840 = t1287 * t1303 + t1209;
t839 = t1287 * t940 + t1208;
t838 = -t1166 * t895 + t1167 * t906 - t1340;
t837 = -t1166 * t887 + t1167 * t898 - t1339;
t836 = t1166 * t898 + t1167 * t887 + t1338;
t835 = pkin(6) * t897 + (-t1225 + t1280) * t935;
t834 = t1166 * t906 + t1167 * t895 + t1337;
t833 = -pkin(6) * t1273 - qJ(2) * t875 - t1166 * t914;
t832 = pkin(1) * t1080 - pkin(6) * t1274 + qJ(2) * t876 + t1167 * t914;
t831 = -t1166 * t873 + t1167 * t880 - t1353;
t826 = pkin(1) * t1301 + t1166 * t880 + t1167 * t873 - t1352;
t825 = -t1166 * t863 + t1167 * t870 - t1340;
t824 = t1166 * t870 + t1167 * t863 + t1337;
t823 = qJ(4) * t908 - t1283;
t822 = -pkin(1) * t852 - t1218;
t821 = -t1166 * t848 + t1167 * t850;
t820 = -t1166 * t847 + t1167 * t849;
t819 = t1166 * t850 + t1167 * t848;
t818 = t1166 * t849 + t1167 * t847;
t817 = qJ(4) * t984 + t1199;
t816 = t1287 * t908 - t1282;
t815 = t1287 * t984 + t1198;
t814 = -pkin(6) * t900 - t1170 * t840 + t1173 * t862;
t813 = -pkin(6) * t881 - t1170 * t839 + t1173 * t855;
t812 = pkin(2) * t1303 + pkin(6) * t901 + t1170 * t862 + t1173 * t840;
t811 = -pkin(1) * t856 - t1187;
t810 = pkin(2) * t940 + pkin(6) * t882 + t1170 * t855 + t1173 * t839;
t809 = t1170 * t829 + t1173 * t830;
t807 = -pkin(1) * t841 - t1186;
t806 = -qJ(2) * t852 - t1166 * t835 + t1167 * t851;
t805 = pkin(1) * t935 + qJ(2) * t853 + t1166 * t851 + t1167 * t835;
t804 = -pkin(1) * t819 - t1194;
t803 = -pkin(6) * t848 - t1170 * t815 + t1173 * t817;
t802 = pkin(2) * t984 + pkin(6) * t850 + t1170 * t817 + t1173 * t815;
t801 = -qJ(2) * t856 - t1166 * t812 + t1167 * t814;
t800 = -t1166 * t808 + t1167 * t809;
t799 = t1166 * t809 + t1167 * t808;
t798 = pkin(1) * t1303 + qJ(2) * t857 + t1166 * t814 + t1167 * t812;
t797 = -qJ(2) * t841 - t1166 * t810 + t1167 * t813;
t796 = pkin(1) * t940 + qJ(2) * t842 + t1166 * t813 + t1167 * t810;
t795 = -pkin(6) * t808 - t1170 * t816 + t1173 * t823;
t794 = pkin(2) * t908 + pkin(6) * t809 + t1170 * t823 + t1173 * t816;
t793 = -qJ(2) * t819 - t1166 * t802 + t1167 * t803;
t792 = -pkin(1) * t799 - t1195;
t791 = pkin(1) * t984 + qJ(2) * t821 + t1166 * t803 + t1167 * t802;
t790 = -qJ(2) * t799 - t1166 * t794 + t1167 * t795;
t789 = pkin(1) * t908 + qJ(2) * t800 + t1166 * t795 + t1167 * t794;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1138, 0, -t1137, 0, t1212, -t1121, -t1201, -pkin(5) * t1201, t1101, t1174 * t1134 + t1171 * t1136, t1098, -t1101, t1192, 0, -pkin(5) * t1193 - t1171 * t1095 - t1166 * t1240, -pkin(5) * t1097 - t1171 * t1096 - t1167 * t1240, t1174 * t1019 - pkin(5) * (t1171 * t1133 + t1174 * t1135), -pkin(5) * (t1171 * t1020 + t1240) - (t1171 * pkin(1) - t1174 * qJ(2)) * t1019, t1207, t1174 * t950 + t1315, t1171 * t1125 + t1343, t1304, -t1348, t1308, -t1171 * t888 + t1174 * t871 - t1336, t1174 * t879 - t1171 * t899 - pkin(5) * (-t1174 * t1087 + t1351), -t1171 * t912 + t1174 * t838 - t1335, t1174 * t833 - t1171 * t854 - pkin(5) * (t1174 * t1080 + t1171 * t876), t1207, t1171 * t1041 + t1343, t1174 * t923 - t1315, t1308, t1348, t1304, -t1171 * t874 + t1174 * t837 - t1336, -t1171 * t930 + t1174 * t825 - t1335, t1174 * t831 - t1171 * t869 - pkin(5) * (t1174 * t1301 - t1351), t1174 * t806 - t1171 * t822 - pkin(5) * (t1171 * t853 + t1174 * t935), t1174 * t846 - t1230, -t1171 * t1008 + t1174 * t820, -t1171 * t945 + t1174 * t860, t1174 * t845 + t1230, t1171 * t941 + t1174 * t861, t1171 * t1158 + t1174 * t878, t1174 * t797 - t1171 * t807 - pkin(5) * (t1171 * t842 + t1174 * t940), t1174 * t801 - t1171 * t811 - pkin(5) * (t1171 * t857 + t1174 * t1303), t1174 * t793 - t1171 * t804 - pkin(5) * (t1171 * t821 + t1174 * t984), t1174 * t790 - t1171 * t792 - pkin(5) * (t1171 * t800 + t1174 * t908); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1137, 0, t1138, 0, t1121, t1212, t1219, pkin(5) * t1219, t1100, t1171 * t1134 - t1174 * t1136, t1097, -t1100, -t1193, 0, -pkin(5) * t1192 + t1174 * t1095 - t1166 * t1246, pkin(5) * t1098 + t1174 * t1096 - t1167 * t1246, t1171 * t1019 + pkin(5) * (t1174 * t1133 - t1171 * t1135), pkin(5) * (t1174 * t1020 - t1246) - (-t1174 * pkin(1) - t1171 * qJ(2)) * t1019, t1206, t1171 * t950 - t1313, -t1174 * t1125 + t1344, t1307, -t1349, t1306, t1171 * t871 + t1174 * t888 + t1334, t1171 * t879 + t1174 * t899 + pkin(5) * (t1171 * t1087 + t1350), t1171 * t838 + t1174 * t912 + t1333, t1171 * t833 + t1174 * t854 + pkin(5) * (-t1171 * t1080 + t1174 * t876), t1206, -t1174 * t1041 + t1344, t1171 * t923 + t1313, t1306, t1349, t1307, t1171 * t837 + t1174 * t874 + t1334, t1171 * t825 + t1174 * t930 + t1333, t1171 * t831 + t1174 * t869 + pkin(5) * (-t1171 * t1301 - t1350), t1171 * t806 + t1174 * t822 + pkin(5) * (-t1171 * t935 + t1174 * t853), t1171 * t846 + t1227, t1174 * t1008 + t1171 * t820, t1171 * t860 + t1174 * t945, t1171 * t845 - t1227, t1171 * t861 - t1174 * t941, -t1174 * t1158 + t1171 * t878, t1171 * t797 + t1174 * t807 + pkin(5) * (-t1171 * t940 + t1174 * t842), t1171 * t801 + t1174 * t811 + pkin(5) * (-t1171 * t1303 + t1174 * t857), t1171 * t793 + t1174 * t804 + pkin(5) * (-t1171 * t984 + t1174 * t821), t1171 * t790 + t1174 * t792 + pkin(5) * (-t1171 * t908 + t1174 * t800); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1139, t1140, 0, 0, t1148, t1141, 0, t1150, 0, 0, t1055, t1054, t992, t1001, t980, t948, t1332, t1292, t964, t1291, t868, t872, t834, t832, t980, t1332, t922, t1291, -t964, t1292, t836, t824, t826, t805, t844, t818, t858, t843, t859, t877, t796, t798, t791, t789; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1176, 0, 0, -g(3), -t1139, 0, t1224, t1134, t1130, -t1224, t1131, 0, -t1166 * t1120, -t1167 * t1120, t1019, qJ(2) * t1019, t983, t950, t1331, t1293, -t971, t1290, t871, t879, t838, t833, t983, t1331, t923, t1290, t971, t1293, t837, t825, t831, t806, t846, t820, t860, t845, t861, t878, t797, t801, t793, t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1176, 0, qJDD(1), 0, g(3), 0, -t1140, 0, t1142, -t1136, -t1149, -t1142, -t1151, 0, t1095, t1096, 0, pkin(1) * t1019, -t1266, -t1300, -t1125, t1266, t1124, -qJDD(3), t888, t899, t912, t854, -t1266, -t1041, t1300, -qJDD(3), -t1124, t1266, t874, t930, t869, t822, t1009, t1008, t945, -t1009, -t941, -t1158, t807, t811, t804, t792; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1139, t1140, 0, 0, t1148, t1141, 0, t1150, 0, 0, t1055, t1054, t992, t1001, t980, t948, t1332, t1292, t964, t1291, t868, t872, t834, t832, t980, t1332, t922, t1291, -t964, t1292, t836, t824, t826, t805, t844, t818, t858, t843, t859, t877, t796, t798, t791, t789; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1149, t1151, t1142, 0, t1152, 0, 0, -t1120, t1095, 0, t1038, t1017, t1323, t1182, t1027, t1204, t985, t988, t906, -pkin(6) * t920, t1038, t1323, t994, t1204, -t1027, t1182, t898, t870, t880, t851, t886, t849, t904, t885, t905, t925, t813, t814, t803, t795; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1149, -t1264, t1151, -t1142, 0, t1120, 0, t1096, 0, t1037, t1015, t1322, t1205, t1021, t1191, t954, t959, t895, t914, t1037, t1322, t993, t1191, -t1021, t1205, t887, t863, t873, t835, t884, t847, t902, t883, t903, t924, t810, t812, t802, t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1142, t1136, t1149, t1142, t1151, 0, -t1095, -t1096, 0, 0, t1266, t1300, t1125, -t1266, -t1124, qJDD(3), t1196, t1214, t1281, t1286, t1266, t1041, -t1300, qJDD(3), t1124, -t1266, t1181, t1213, t1154 + t1185, t1218, -t1009, -t1008, -t945, t1009, t941, t1158, t1186, t1187, t1194, t1195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1088, -t1086, t1296, t1117, t1106, -t1117, 0, -t1080, t990, 0, t1088, t1296, t1086, -t1117, -t1106, t1117, -qJ(4) * t1086, t918, t916, qJ(4) * t935, t934, t893, t962, t932, t963, t996, t855, t862, t817, t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1267, t1087, -t1107, -t1188, t1295, -t1267, t1080, 0, t991, 0, t1267, -t1107, -t1301, -t1267, -t1295, -t1188, t919, t917, pkin(3) * t1301, pkin(3) * t935, -t933, -t891, -t960, t931, -t961, -t995, t839, t840, t815, t816; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1266, t1300, t1125, -t1266, -t1124, qJDD(3), -t990, -t991, 0, 0, t1266, t1041, -t1300, qJDD(3), t1124, -t1266, t1183, t1237, t1154 + t1190, t1275, -t1009, -t1008, -t945, t1009, t941, t1158, t1189, t1197, t1216, t1217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1088, t1296, t1086, -t1117, -t1106, t1117, 0, t953, t935, 0, t934, t893, t962, t932, t963, t996, t1210, t1231, t1199, -t1283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1266, t1041, -t1300, qJDD(3), t1124, -t1266, -t953, 0, t951, 0, -t1009, -t1008, -t945, t1009, t941, t1158, t1200, t1215, -t1284, -t1285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1267, t1107, t1301, t1267, t1295, t1188, -t935, -t951, 0, 0, t933, t891, t960, -t931, t961, t995, -pkin(4) * t940 - t1208, -pkin(4) * t1303 - t1209, -pkin(4) * t984 - t1198, -pkin(4) * t908 + t1282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t987, -t940, t1302, -t1053, t1050, t1053, 0, t908, t866, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1263, t1303, t1051, t986, -t1005, t1263, -t908, 0, t867, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1009, t1008, t945, -t1009, -t941, -t1158, -t866, -t867, 0, 0;];
m_new_reg = t1;
