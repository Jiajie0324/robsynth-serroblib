% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPRRP10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:52
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPRRP10_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP10_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP10_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP10_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP10_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP10_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:52:32
% EndTime: 2019-12-31 18:52:35
% DurationCPUTime: 2.43s
% Computational Cost: add. (9452->199), mult. (22793->257), div. (0->0), fcn. (16848->8), ass. (0->149)
t1338 = qJD(1) ^ 2;
t1334 = sin(qJ(1));
t1337 = cos(qJ(1));
t1316 = t1334 * g(1) - t1337 * g(2);
t1350 = -qJDD(2) + t1316;
t1330 = cos(pkin(8));
t1353 = pkin(2) * t1330 + pkin(1);
t1329 = sin(pkin(8));
t1326 = t1329 ^ 2;
t1327 = t1330 ^ 2;
t1358 = t1326 + t1327;
t1287 = t1353 * qJDD(1) + (t1358 * pkin(6) + qJ(2)) * t1338 + t1350;
t1313 = t1358 * t1338;
t1333 = sin(qJ(3));
t1336 = cos(qJ(3));
t1307 = (t1329 * t1333 - t1330 * t1336) * qJD(1);
t1304 = qJD(4) + t1307;
t1376 = qJD(4) + t1304;
t1348 = t1329 * t1336 + t1330 * t1333;
t1375 = t1348 * qJDD(1);
t1372 = qJD(3) ^ 2;
t1309 = t1348 * qJD(1);
t1332 = sin(qJ(4));
t1335 = cos(qJ(4));
t1296 = -t1335 * qJD(3) + t1332 * t1309;
t1371 = t1296 ^ 2;
t1298 = t1332 * qJD(3) + t1335 * t1309;
t1370 = t1298 ^ 2;
t1369 = t1304 ^ 2;
t1368 = t1307 ^ 2;
t1367 = t1309 ^ 2;
t1366 = -2 * qJD(5);
t1365 = t1330 * g(3);
t1364 = qJD(2) * qJD(1);
t1363 = t1298 * t1296;
t1362 = t1307 * qJD(3);
t1303 = t1309 * qJD(3);
t1361 = t1309 * t1307;
t1360 = t1327 * t1338;
t1359 = qJD(4) - t1304;
t1351 = t1337 * g(1) + t1334 * g(2);
t1342 = -t1338 * pkin(1) + qJDD(1) * qJ(2) - t1351;
t1294 = -t1329 * g(3) + (t1342 + 0.2e1 * t1364) * t1330;
t1322 = t1330 * qJDD(1);
t1283 = -pkin(2) * t1360 + pkin(6) * t1322 + t1294;
t1354 = -0.2e1 * t1364;
t1341 = -t1365 + (t1354 + t1353 * t1338 + (-pkin(6) - qJ(2)) * qJDD(1) + t1351) * t1329;
t1262 = t1336 * t1283 + t1333 * t1341;
t1285 = t1307 * pkin(3) - t1309 * pkin(7);
t1251 = -t1372 * pkin(3) + qJDD(3) * pkin(7) - t1307 * t1285 + t1262;
t1292 = t1375 - t1362;
t1357 = t1329 * qJDD(1);
t1349 = -t1336 * t1322 + t1333 * t1357;
t1346 = t1303 + t1349;
t1254 = (-t1292 + t1362) * pkin(7) + (t1346 + t1303) * pkin(3) - t1287;
t1232 = t1335 * t1251 + t1332 * t1254;
t1356 = t1334 * qJDD(1);
t1355 = t1337 * qJDD(1);
t1231 = -t1332 * t1251 + t1335 * t1254;
t1261 = -t1333 * t1283 + t1336 * t1341;
t1352 = -t1335 * qJDD(3) + t1332 * t1292;
t1347 = -t1332 * qJDD(3) - t1335 * t1292;
t1345 = -t1298 * qJD(4) - t1352;
t1343 = -qJDD(4) - t1346;
t1250 = -qJDD(3) * pkin(3) - t1372 * pkin(7) + t1309 * t1285 - t1261;
t1260 = t1359 * t1296 + t1347;
t1263 = -t1343 - t1363;
t1318 = t1330 * t1338 * t1329;
t1315 = -t1337 * t1338 - t1356;
t1314 = -t1334 * t1338 + t1355;
t1312 = t1358 * qJDD(1);
t1311 = t1330 * t1313;
t1310 = t1329 * t1313;
t1305 = qJDD(1) * pkin(1) + t1338 * qJ(2) + t1350;
t1299 = -t1367 - t1372;
t1293 = -t1365 + (-t1342 + t1354) * t1329;
t1291 = t1375 - 0.2e1 * t1362;
t1290 = 0.2e1 * t1303 + t1349;
t1289 = -qJDD(3) - t1361;
t1288 = qJDD(3) - t1361;
t1286 = -t1368 - t1372;
t1281 = t1304 * pkin(4) - t1298 * qJ(5);
t1278 = -t1367 - t1368;
t1277 = -t1346 + t1303;
t1276 = -t1369 - t1370;
t1275 = t1336 * t1289 - t1333 * t1299;
t1274 = t1333 * t1289 + t1336 * t1299;
t1273 = -t1369 - t1371;
t1272 = -t1329 * t1293 + t1330 * t1294;
t1271 = t1330 * t1293 + t1329 * t1294;
t1269 = -t1370 - t1371;
t1268 = t1336 * t1277 + t1333 * t1375;
t1267 = t1333 * t1277 - t1336 * t1375;
t1266 = t1336 * t1286 - t1333 * t1288;
t1265 = t1333 * t1286 + t1336 * t1288;
t1264 = t1343 - t1363;
t1259 = -t1376 * t1296 - t1347;
t1258 = -t1359 * t1298 - t1352;
t1257 = t1376 * t1298 + t1352;
t1256 = -t1329 * t1274 + t1330 * t1275;
t1255 = t1330 * t1274 + t1329 * t1275;
t1249 = t1335 * t1264 - t1332 * t1276;
t1248 = t1332 * t1264 + t1335 * t1276;
t1246 = -t1329 * t1267 + t1330 * t1268;
t1245 = t1330 * t1267 + t1329 * t1268;
t1244 = -t1332 * t1263 + t1335 * t1273;
t1243 = t1335 * t1263 + t1332 * t1273;
t1242 = -t1329 * t1265 + t1330 * t1266;
t1241 = t1330 * t1265 + t1329 * t1266;
t1240 = -t1333 * t1261 + t1336 * t1262;
t1239 = t1336 * t1261 + t1333 * t1262;
t1238 = t1335 * t1258 - t1332 * t1260;
t1237 = t1332 * t1258 + t1335 * t1260;
t1236 = t1336 * t1249 + t1333 * t1259;
t1235 = t1333 * t1249 - t1336 * t1259;
t1234 = t1336 * t1244 + t1333 * t1257;
t1233 = t1333 * t1244 - t1336 * t1257;
t1230 = t1336 * t1238 + t1333 * t1269;
t1229 = t1333 * t1238 - t1336 * t1269;
t1228 = -t1345 * pkin(4) - t1371 * qJ(5) + t1298 * t1281 + qJDD(5) + t1250;
t1227 = -t1329 * t1239 + t1330 * t1240;
t1226 = t1330 * t1239 + t1329 * t1240;
t1225 = -t1304 * t1281 + t1345 * qJ(5) + (-pkin(4) * t1296 + t1366) * t1296 + t1232;
t1224 = t1263 * pkin(4) + t1260 * qJ(5) + t1298 * t1366 + t1231;
t1223 = -t1329 * t1235 + t1330 * t1236;
t1222 = t1330 * t1235 + t1329 * t1236;
t1221 = -t1329 * t1233 + t1330 * t1234;
t1220 = t1330 * t1233 + t1329 * t1234;
t1219 = -t1332 * t1231 + t1335 * t1232;
t1218 = t1335 * t1231 + t1332 * t1232;
t1217 = -t1329 * t1229 + t1330 * t1230;
t1216 = t1330 * t1229 + t1329 * t1230;
t1215 = t1337 * t1223 + t1334 * t1248;
t1214 = t1334 * t1223 - t1337 * t1248;
t1213 = t1337 * t1221 + t1334 * t1243;
t1212 = t1334 * t1221 - t1337 * t1243;
t1211 = t1336 * t1219 + t1333 * t1250;
t1210 = t1333 * t1219 - t1336 * t1250;
t1209 = t1337 * t1217 + t1334 * t1237;
t1208 = t1334 * t1217 - t1337 * t1237;
t1207 = -t1332 * t1224 + t1335 * t1225;
t1206 = t1335 * t1224 + t1332 * t1225;
t1205 = t1336 * t1207 + t1333 * t1228;
t1204 = t1333 * t1207 - t1336 * t1228;
t1203 = -t1329 * t1210 + t1330 * t1211;
t1202 = t1330 * t1210 + t1329 * t1211;
t1201 = -t1329 * t1204 + t1330 * t1205;
t1200 = t1330 * t1204 + t1329 * t1205;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1315, -t1314, 0, -t1334 * t1316 - t1337 * t1351, 0, 0, 0, 0, 0, 0, -t1337 * t1311 - t1330 * t1356, t1337 * t1310 + t1329 * t1356, t1337 * t1312 - t1334 * t1313, t1337 * t1272 - t1334 * t1305, 0, 0, 0, 0, 0, 0, t1337 * t1242 + t1334 * t1290, t1337 * t1256 + t1334 * t1291, t1337 * t1246 + t1334 * t1278, t1337 * t1227 - t1334 * t1287, 0, 0, 0, 0, 0, 0, t1213, t1215, t1209, t1337 * t1203 + t1334 * t1218, 0, 0, 0, 0, 0, 0, t1213, t1215, t1209, t1337 * t1201 + t1334 * t1206; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1314, t1315, 0, t1337 * t1316 - t1334 * t1351, 0, 0, 0, 0, 0, 0, -t1334 * t1311 + t1330 * t1355, t1334 * t1310 - t1329 * t1355, t1334 * t1312 + t1337 * t1313, t1334 * t1272 + t1337 * t1305, 0, 0, 0, 0, 0, 0, t1334 * t1242 - t1337 * t1290, t1334 * t1256 - t1337 * t1291, t1334 * t1246 - t1337 * t1278, t1334 * t1227 + t1337 * t1287, 0, 0, 0, 0, 0, 0, t1212, t1214, t1208, t1334 * t1203 - t1337 * t1218, 0, 0, 0, 0, 0, 0, t1212, t1214, t1208, t1334 * t1201 - t1337 * t1206; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1271, 0, 0, 0, 0, 0, 0, t1241, t1255, t1245, t1226, 0, 0, 0, 0, 0, 0, t1220, t1222, t1216, t1202, 0, 0, 0, 0, 0, 0, t1220, t1222, t1216, t1200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1338, -qJDD(1), 0, -t1351, 0, 0, 0, 0, 0, 0, -t1311, t1310, t1312, t1272, 0, 0, 0, 0, 0, 0, t1242, t1256, t1246, t1227, 0, 0, 0, 0, 0, 0, t1221, t1223, t1217, t1203, 0, 0, 0, 0, 0, 0, t1221, t1223, t1217, t1201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1338, 0, t1316, 0, 0, 0, 0, 0, 0, t1322, -t1357, t1313, t1305, 0, 0, 0, 0, 0, 0, -t1290, -t1291, -t1278, t1287, 0, 0, 0, 0, 0, 0, -t1243, -t1248, -t1237, -t1218, 0, 0, 0, 0, 0, 0, -t1243, -t1248, -t1237, -t1206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1271, 0, 0, 0, 0, 0, 0, t1241, t1255, t1245, t1226, 0, 0, 0, 0, 0, 0, t1220, t1222, t1216, t1202, 0, 0, 0, 0, 0, 0, t1220, t1222, t1216, t1200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1360, t1318, t1322, t1294, 0, 0, 0, 0, 0, 0, t1266, t1275, t1268, t1240, 0, 0, 0, 0, 0, 0, t1234, t1236, t1230, t1211, 0, 0, 0, 0, 0, 0, t1234, t1236, t1230, t1205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1318, -t1326 * t1338, -t1357, t1293, 0, 0, 0, 0, 0, 0, t1265, t1274, t1267, t1239, 0, 0, 0, 0, 0, 0, t1233, t1235, t1229, t1210, 0, 0, 0, 0, 0, 0, t1233, t1235, t1229, t1204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1322, t1357, -t1313, -t1305, 0, 0, 0, 0, 0, 0, t1290, t1291, t1278, -t1287, 0, 0, 0, 0, 0, 0, t1243, t1248, t1237, t1218, 0, 0, 0, 0, 0, 0, t1243, t1248, t1237, t1206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1286, t1289, t1277, t1262, 0, 0, 0, 0, 0, 0, t1244, t1249, t1238, t1219, 0, 0, 0, 0, 0, 0, t1244, t1249, t1238, t1207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1288, t1299, -t1375, t1261, 0, 0, 0, 0, 0, 0, -t1257, -t1259, -t1269, -t1250, 0, 0, 0, 0, 0, 0, -t1257, -t1259, -t1269, -t1228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1290, t1291, t1278, -t1287, 0, 0, 0, 0, 0, 0, t1243, t1248, t1237, t1218, 0, 0, 0, 0, 0, 0, t1243, t1248, t1237, t1206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1273, t1264, t1258, t1232, 0, 0, 0, 0, 0, 0, t1273, t1264, t1258, t1225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1263, t1276, t1260, t1231, 0, 0, 0, 0, 0, 0, t1263, t1276, t1260, t1224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1257, t1259, t1269, t1250, 0, 0, 0, 0, 0, 0, t1257, t1259, t1269, t1228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1273, t1264, t1258, t1225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1263, t1276, t1260, t1224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1257, t1259, t1269, t1228;];
f_new_reg = t1;
