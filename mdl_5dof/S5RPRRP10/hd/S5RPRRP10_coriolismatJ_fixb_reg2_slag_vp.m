% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:52
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP10_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP10_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP10_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP10_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:52:10
% EndTime: 2019-12-31 18:52:17
% DurationCPUTime: 4.43s
% Computational Cost: add. (5673->352), mult. (11548->450), div. (0->0), fcn. (12298->6), ass. (0->294)
t262 = sin(qJ(4));
t258 = t262 ^ 2;
t264 = cos(qJ(4));
t259 = t264 ^ 2;
t403 = -t259 / 0.2e1;
t410 = t403 - t258 / 0.2e1;
t260 = sin(pkin(8));
t401 = cos(qJ(3));
t312 = t401 * t260;
t261 = cos(pkin(8));
t263 = sin(qJ(3));
t354 = t263 * t261;
t238 = t312 + t354;
t355 = t262 * t264;
t314 = t238 * t355;
t294 = 0.2e1 * t314;
t236 = t263 * t260 - t401 * t261;
t399 = t236 * pkin(4);
t353 = t264 * qJ(5);
t253 = -t261 * pkin(2) - pkin(1);
t288 = t236 * pkin(3) - t238 * pkin(7);
t272 = t253 + t288;
t396 = pkin(6) + qJ(2);
t295 = t396 * t260;
t289 = t263 * t295;
t241 = t396 * t261;
t313 = t401 * t241;
t174 = t313 - t289;
t356 = t262 * t174;
t91 = -t264 * t272 + t356;
t72 = t238 * t353 + t91;
t55 = -t72 + t399;
t409 = t55 + t72;
t328 = t238 * qJD(1);
t216 = t264 * t328;
t322 = t262 * qJD(3);
t192 = t216 + t322;
t233 = t236 ^ 2;
t234 = t238 ^ 2;
t408 = -t234 - t233;
t318 = t234 - t233;
t229 = t312 / 0.2e1 + t354 / 0.2e1;
t397 = t238 * pkin(3);
t398 = t236 * pkin(7);
t169 = t397 + t398;
t160 = t264 * t169;
t173 = t263 * t241 + t401 * t295;
t370 = t173 * t262;
t100 = t160 + t370;
t152 = t264 * t236;
t228 = t238 * pkin(4);
t61 = qJ(5) * t152 + t100 + t228;
t407 = t61 / 0.2e1;
t406 = -t160 / 0.2e1;
t166 = t173 * t264;
t162 = t166 / 0.2e1;
t395 = pkin(7) + qJ(5);
t243 = t395 * t264;
t405 = -t243 / 0.2e1;
t402 = -t262 / 0.2e1;
t400 = pkin(4) * t234;
t149 = t262 * t238;
t352 = t264 * t174;
t92 = t262 * t272 + t352;
t73 = -qJ(5) * t149 + t92;
t386 = t73 * t264;
t391 = t55 * t262;
t394 = -t391 / 0.2e1 + t386 / 0.2e1;
t123 = pkin(4) * t149 + t173;
t147 = t262 * t236;
t124 = -pkin(4) * t147 + t174;
t159 = t262 * t169;
t101 = -t166 + t159;
t81 = qJ(5) * t147 + t101;
t3 = t123 * t124 + t55 * t61 + t73 * t81;
t393 = t3 * qJD(1);
t315 = t72 / 0.2e1 + t55 / 0.2e1;
t316 = t399 / 0.2e1;
t278 = t316 + t315;
t4 = t278 * t264;
t392 = t4 * qJD(1);
t390 = t55 * t264;
t285 = t73 * t262 + t390;
t384 = t81 * t262;
t388 = t61 * t264;
t6 = (t384 + t388) * t238 - t285 * t236;
t389 = t6 * qJD(1);
t7 = t409 * t149;
t387 = t7 * qJD(1);
t365 = t238 * t264;
t8 = t123 * pkin(4) * t365 - t409 * t73;
t385 = t8 * qJD(1);
t9 = t278 * t262;
t383 = t9 * qJD(1);
t382 = t100 * t264;
t381 = t101 * t262;
t375 = t124 * t262;
t377 = t123 * t262;
t11 = (t55 + t375) * t238 + (t61 - t377) * t236;
t380 = t11 * qJD(1);
t12 = (t381 + t382) * t238 + (-t92 * t262 + t264 * t91) * t236;
t379 = t12 * qJD(1);
t378 = t123 * t238;
t376 = t123 * t264;
t374 = t124 * t264;
t13 = -t91 * t100 + t92 * t101 + t173 * t174;
t373 = t13 * qJD(1);
t14 = (-t73 + t374) * t238 + (-t81 - t376) * t236;
t372 = t14 * qJD(1);
t371 = t173 * t238;
t18 = t378 + (-t386 + t391) * t236;
t369 = t18 * qJD(1);
t254 = -t264 * pkin(4) - pkin(3);
t300 = t238 * t254 / 0.2e1;
t361 = t243 * t264;
t242 = t395 * t262;
t364 = t242 * t262;
t266 = (-t361 / 0.2e1 - t364 / 0.2e1) * t236 + t300;
t277 = -t388 / 0.2e1 - t384 / 0.2e1;
t19 = t266 + t277;
t368 = t19 * qJD(1);
t21 = (-t91 + t356) * t238 + (t100 - t370) * t236;
t367 = t21 * qJD(1);
t22 = (-t92 + t352) * t238 + (-t101 - t166) * t236;
t366 = t22 * qJD(1);
t363 = t242 * t264;
t362 = t243 * t262;
t25 = t285 * t238;
t360 = t25 * qJD(1);
t359 = t254 * t262;
t358 = t254 * t264;
t26 = t371 + (-t262 * t91 - t92 * t264) * t236;
t357 = t26 * qJD(1);
t270 = t410 * t398 - t397 / 0.2e1;
t274 = t382 / 0.2e1 + t381 / 0.2e1;
t29 = t270 - t274;
t351 = t29 * qJD(1);
t31 = -t73 * t236 + (t262 * t400 + t378) * t264;
t350 = t31 * qJD(1);
t32 = -t123 * t149 + t72 * t236 + t259 * t400;
t349 = t32 * qJD(1);
t45 = -t173 * t149 + t91 * t236;
t348 = t45 * qJD(1);
t46 = t173 * t365 - t92 * t236;
t347 = t46 * qJD(1);
t346 = t73 * qJD(4);
t80 = -t174 * t236 + t371;
t345 = t80 * qJD(1);
t344 = -t159 / 0.2e1 + t162;
t246 = t260 ^ 2 + t261 ^ 2;
t249 = t258 + t259;
t250 = t259 - t258;
t343 = qJD(2) * t264;
t342 = qJD(4) * t262;
t255 = qJD(4) * t264;
t290 = t410 * t238;
t114 = t290 - t229;
t341 = t114 * qJD(1);
t116 = t318 * t262;
t340 = t116 * qJD(1);
t117 = t408 * t262;
t339 = t117 * qJD(1);
t118 = t318 * t264;
t338 = t118 * qJD(1);
t337 = t318 * qJD(1);
t296 = t258 / 0.2e1 + t403;
t146 = t296 * t238;
t336 = t146 * qJD(4);
t335 = t147 * qJD(1);
t334 = t149 * qJD(1);
t140 = t152 * qJD(1);
t222 = t258 * t236;
t223 = t259 * t236;
t155 = t222 + t223;
t333 = t155 * qJD(1);
t156 = t249 * t234;
t332 = t156 * qJD(1);
t158 = t408 * t264;
t90 = t158 * qJD(1);
t331 = t408 * qJD(1);
t330 = t229 * qJD(1);
t329 = t236 * qJD(1);
t225 = t236 * qJD(3);
t327 = t238 * qJD(3);
t240 = t246 * qJ(2);
t326 = t240 * qJD(1);
t325 = t243 * qJD(4);
t324 = t246 * qJD(1);
t323 = t249 * qJD(3);
t321 = t262 * qJD(5);
t320 = t264 * qJD(3);
t319 = t264 * qJD(5);
t317 = pkin(4) * t342;
t311 = t238 * t342;
t310 = t238 * t255;
t309 = t236 * t328;
t172 = t236 * t327;
t251 = t262 * t255;
t308 = t262 * t328;
t307 = t238 * t321;
t306 = t262 * t320;
t305 = t264 * t329;
t304 = t236 * t343;
t303 = t238 * t343;
t302 = t238 * t319;
t301 = t377 / 0.2e1;
t161 = t370 / 0.2e1;
t299 = t358 / 0.2e1;
t298 = qJ(5) * t402;
t297 = t152 / 0.2e1;
t165 = t236 * t216;
t99 = t147 * qJD(3) + t165;
t293 = t262 * t316;
t292 = qJD(1) * t253 + qJD(2);
t291 = t234 * t251;
t287 = qJD(3) * t294;
t286 = t165 + t310;
t1 = t315 * t243 + (t407 - t238 * t358 / 0.2e1 - t377 / 0.2e1) * pkin(4);
t110 = pkin(4) * t359;
t284 = -t1 * qJD(1) + t110 * qJD(3);
t283 = -t100 * t262 + t101 * t264;
t265 = -t313 / 0.2e1 + t293 + t289 / 0.2e1;
t268 = (-t362 / 0.2e1 + t363 / 0.2e1) * t238 + t394;
t16 = t265 + t268;
t183 = t361 + t364;
t282 = t16 * qJD(1) + t183 * qJD(3);
t221 = pkin(4) * t355 - t359;
t269 = (t296 * pkin(4) + t299) * t238;
t24 = -t228 + t406 + (t123 / 0.2e1 - t173 / 0.2e1) * t262 + (t405 - t353 / 0.2e1) * t236 + t269;
t281 = t24 * qJD(1) - t221 * qJD(3);
t232 = t258 * pkin(4) + t358;
t271 = -pkin(4) * t314 - t376 / 0.2e1 + t262 * t300;
t27 = (t298 - t242 / 0.2e1) * t236 + t271 + t344;
t280 = -t27 * qJD(1) + t232 * qJD(3);
t279 = t398 / 0.2e1 + t397 / 0.2e1;
t273 = t279 * t264;
t43 = t406 - t273;
t276 = pkin(3) * t322 - t43 * qJD(1);
t267 = t279 * t262 + t162;
t41 = -t166 / 0.2e1 + t159 / 0.2e1 + t267;
t275 = pkin(3) * t320 - t41 * qJD(1);
t75 = (-qJD(4) - t329) * t149;
t122 = -t146 * qJD(1) + t306;
t190 = t308 - t320;
t119 = t229 * qJD(4) + t309;
t102 = t234 * qJD(1) * t355 + t146 * qJD(3);
t157 = t250 * t234;
t106 = t157 * qJD(1) + t287;
t167 = qJD(1) * t294 - t250 * qJD(3);
t244 = t250 * qJD(4);
t218 = t229 * qJD(3);
t215 = t238 * t320;
t191 = -t255 - t305;
t184 = t192 * pkin(4);
t154 = t160 / 0.2e1;
t145 = t158 * qJD(2);
t143 = t155 * qJD(2);
t141 = t155 * qJD(3);
t136 = t149 * qJD(2);
t134 = t147 * qJD(2);
t131 = t147 * qJD(4);
t126 = t255 + t140;
t125 = -t335 - t342;
t115 = t117 * qJD(2);
t113 = t290 + t229;
t108 = -t259 * t172 - t291;
t107 = -t258 * t172 + t291;
t104 = 0.2e1 * t264 * t75;
t98 = t259 * t309 - t336;
t97 = -t152 * qJD(3) + t236 * t308;
t96 = t258 * t309 + t336;
t93 = -t157 * qJD(4) + t236 * t287;
t83 = t118 * qJD(3) - t236 * t311;
t82 = -t116 * qJD(3) - t236 * t310;
t79 = t152 * qJD(4) - t338;
t77 = -t131 + t340;
t71 = -t336 + (-t259 * t328 - t306) * t236;
t70 = t336 + (-t258 * t328 + t306) * t236;
t69 = (t222 - t223) * qJD(3) + (-qJD(4) + t329) * t294;
t68 = -t149 * qJD(3) - t236 * t255 + t90;
t54 = t238 * t322 + t338;
t53 = t215 - t340;
t52 = -t131 + t215 + t339;
t44 = 0.2e1 * t161 + t154 - t273;
t42 = t267 + t344;
t30 = t270 + t274;
t28 = -t271 + t344 + (t242 / 0.2e1 + t298) * t236;
t23 = qJ(5) * t297 + t236 * t405 + t154 + t161 + t228 + t269 + t301;
t20 = t266 - t277;
t15 = -t265 + t268;
t10 = t72 * t402 - t386 / 0.2e1 + t293 + t394;
t5 = -t72 * t264 / 0.2e1 - t390 / 0.2e1 + pkin(4) * t297;
t2 = t299 * t228 + t409 * t405 + (t301 + t407) * pkin(4);
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246 * qJD(2), t240 * qJD(2), -t172, -t318 * qJD(3), 0, t172, 0, 0, t253 * t327, -t253 * t225, -t408 * qJD(2), t80 * qJD(2), t108, t93, t83, t107, t82, t172, t21 * qJD(3) + t46 * qJD(4) - t115, t22 * qJD(3) + t45 * qJD(4) - t145, -t12 * qJD(3), t26 * qJD(2) + t13 * qJD(3), t108, t93, t83, t107, t82, t172, t11 * qJD(3) + t31 * qJD(4) - t236 * t302 - t115, t14 * qJD(3) + t32 * qJD(4) + t236 * t307 - t145, -t6 * qJD(3) + t7 * qJD(4) + t156 * qJD(5), t18 * qJD(2) + t3 * qJD(3) + t8 * qJD(4) - t25 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t324, t326, 0, 0, 0, 0, 0, 0, 0, 0, -t331, t345, 0, 0, 0, 0, 0, 0, -t339, -t90, 0, t30 * qJD(3) + t357, 0, 0, 0, 0, 0, 0, -t339, -t90, 0, t20 * qJD(3) + t10 * qJD(4) + t113 * qJD(5) + t369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, -t337, -t225, t309, -t327, 0, -t174 * qJD(3) + t253 * t328, t173 * qJD(3) - t253 * t329, 0, 0, t71, t69, t54, t70, t53, t119, t367 + (t262 * t288 - t352) * qJD(3) + t44 * qJD(4), t366 + (t264 * t288 + t356) * qJD(3) + t42 * qJD(4), qJD(3) * t283 - t379, t373 + t30 * qJD(2) + (-t174 * pkin(3) + pkin(7) * t283) * qJD(3), t71, t69, t54, t70, t53, t119, t380 + (-t147 * t254 - t242 * t238 - t374) * qJD(3) + t23 * qJD(4) - t147 * qJD(5), t372 + (-t152 * t254 - t243 * t238 + t375) * qJD(3) + t28 * qJD(4) - t236 * t319, -t389 + (-t61 * t262 + t81 * t264 + (t362 - t363) * t236) * qJD(3) + t5 * qJD(4), t393 + t20 * qJD(2) + (t124 * t254 - t61 * t242 + t81 * t243) * qJD(3) + t2 * qJD(4) + t15 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, -t106, t75, t102, -t286, t218, t44 * qJD(3) - t92 * qJD(4) + t347, t42 * qJD(3) + t91 * qJD(4) + t348, 0, 0, -t102, -t106, t75, t102, -t286, t218, t23 * qJD(3) - t346 + t350, t28 * qJD(3) + t72 * qJD(4) + t349, pkin(4) * t311 + t5 * qJD(3) + t387, -pkin(4) * t346 + t10 * qJD(2) + t2 * qJD(3) + t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t99, t190 * t236, t332, t113 * qJD(2) + t15 * qJD(3) - t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t324, -t326, 0, 0, 0, 0, 0, 0, t327, -t225, t331, -t345, 0, 0, 0, 0, 0, 0, t52, t68, t141, -t29 * qJD(3) - t357, 0, 0, 0, 0, 0, 0, t52, t68, t141, -t19 * qJD(3) - t9 * qJD(4) + t114 * qJD(5) - t369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t328, -t329, 0, 0, 0, 0, 0, 0, 0, 0, t216, -t334, t333, -t351, 0, 0, 0, 0, 0, 0, t216, -t334, t333, -t368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, t191, 0, 0, 0, 0, 0, 0, 0, 0, t125, t191, 0, -t317 - t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, t337, 0, -t309, 0, 0, -t292 * t238, t292 * t236, 0, 0, t98, t104, t79, t96, t77, -t119, t43 * qJD(4) - t303 - t367, t41 * qJD(4) + t136 - t366, -t143 + t379, t29 * qJD(2) - t373, t98, t104, t79, t96, t77, -t119, t24 * qJD(4) - t303 - t380, -t27 * qJD(4) + t136 - t372, -t4 * qJD(4) - t143 + t389, t19 * qJD(2) - t1 * qJD(4) + t16 * qJD(5) - t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t328, t329, 0, 0, 0, 0, 0, 0, 0, 0, -t216, t334, -t333, t351, 0, 0, 0, 0, 0, 0, -t216, t334, -t333, t368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, t244, 0, -t251, 0, 0, -pkin(3) * t342, -pkin(3) * t255, 0, 0, t251, t244, 0, -t251, 0, 0, -t221 * qJD(4), t232 * qJD(4), t249 * qJD(5), t110 * qJD(4) + t183 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, -t167, t126, -t122, t125, -t330, -pkin(7) * t255 - t276, pkin(7) * t342 - t275, 0, 0, t122, -t167, t126, -t122, t125, -t330, t281 - t325, t242 * qJD(4) + t280, -pkin(4) * t255 - t392, -pkin(4) * t325 + t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t323, t282; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, t106, t97, -t102, t99, t218, -t43 * qJD(3) + t134 - t347, -t41 * qJD(3) + t304 - t348, 0, 0, t102, t106, t97, -t102, t99, t218, -t24 * qJD(3) + t134 - t302 - t350, t27 * qJD(3) + t304 + t307 - t349, t4 * qJD(3) - t387, -pkin(4) * t302 + t9 * qJD(2) + t1 * qJD(3) - t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335, t305, 0, 0, 0, 0, 0, 0, 0, 0, t335, t305, 0, t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t122, t167, -t140, t122, t335, t330, t276, t275, 0, 0, -t122, t167, -t140, t122, t335, t330, -t281 - t321, -t280 - t319, t392, -pkin(4) * t321 - t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t192, t190, 0, -t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, t75, -t332, pkin(4) * t310 - t114 * qJD(2) - t16 * qJD(3) + t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342, t255, -t323, -t282 + t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, -t190, 0, t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t17;
