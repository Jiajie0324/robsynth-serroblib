% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRRP10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:52
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRRP10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP10_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP10_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP10_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP10_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:52:21
% EndTime: 2019-12-31 18:52:32
% DurationCPUTime: 11.42s
% Computational Cost: add. (57254->592), mult. (137226->754), div. (0->0), fcn. (100381->8), ass. (0->413)
t1070 = sin(pkin(8));
t1061 = t1070 * qJDD(1);
t1071 = cos(pkin(8));
t1063 = t1071 * qJDD(1);
t1074 = sin(qJ(3));
t1077 = cos(qJ(3));
t1040 = t1061 * t1074 - t1077 * t1063;
t1097 = t1070 * t1077 + t1071 * t1074;
t1044 = t1097 * qJD(1);
t1140 = t1044 * qJD(3);
t1089 = -t1040 - t1140;
t1087 = qJDD(4) - t1089;
t1073 = sin(qJ(4));
t1076 = cos(qJ(4));
t1022 = -t1076 * qJD(3) + t1073 * t1044;
t1024 = t1073 * qJD(3) + t1076 * t1044;
t983 = t1024 * t1022;
t1193 = t1087 - t983;
t1199 = pkin(4) * t1193;
t1148 = t1073 * t1193;
t1042 = (t1070 * t1074 - t1071 * t1077) * qJD(1);
t1010 = t1044 * t1042;
t1192 = qJDD(3) - t1010;
t1198 = t1074 * t1192;
t1145 = t1076 * t1193;
t1197 = t1077 * t1192;
t1075 = sin(qJ(1));
t1078 = cos(qJ(1));
t1054 = t1075 * g(1) - t1078 * g(2);
t1102 = -qJDD(2) + t1054;
t1121 = pkin(2) * t1071 + pkin(1);
t1068 = t1070 ^ 2;
t1080 = t1071 ^ 2;
t1126 = t1068 + t1080;
t1187 = qJD(1) ^ 2;
t1001 = t1121 * qJDD(1) + (pkin(6) * t1126 + qJ(2)) * t1187 + t1102;
t1144 = qJD(5) * t1022;
t1013 = -0.2e1 * t1144;
t1020 = t1022 ^ 2;
t1035 = qJD(4) + t1042;
t1005 = t1040 + 0.2e1 * t1140;
t1033 = t1042 * qJD(3);
t1041 = t1097 * qJDD(1);
t1007 = -t1033 + t1041;
t1082 = (-t1007 + t1033) * pkin(7) + t1005 * pkin(3) - t1001;
t1186 = qJD(3) ^ 2;
t1164 = t1071 * g(3);
t1055 = t1078 * g(1) + t1075 * g(2);
t1189 = (qJ(2) + pkin(6)) * qJDD(1) - t1055;
t1083 = -t1164 + ((qJD(1) * t1121 - (2 * qJD(2))) * qJD(1) - t1189) * t1070;
t1165 = t1070 * g(3);
t1185 = 2 * qJD(2);
t993 = -t1165 + t1189 * t1071 + (t1071 * t1185 + (-t1071 * pkin(1) - t1080 * pkin(2)) * qJD(1)) * qJD(1);
t940 = t1074 * t1083 + t1077 * t993;
t999 = t1042 * pkin(3) - t1044 * pkin(7);
t903 = -t1186 * pkin(3) + qJDD(3) * pkin(7) - t1042 * t999 + t940;
t849 = t1073 * t1082 + t1076 * t903;
t1107 = -t1076 * qJDD(3) + t1073 * t1007;
t961 = -t1024 * qJD(4) - t1107;
t986 = t1035 * pkin(4) - t1024 * qJ(5);
t1101 = -t1020 * pkin(4) + t961 * qJ(5) - t1035 * t986 + t849;
t814 = t1013 + t1101;
t932 = (qJD(4) - t1035) * t1024 + t1107;
t1021 = t1024 ^ 2;
t957 = -t1020 - t1021;
t785 = -pkin(4) * t957 - qJ(5) * t932 + t814;
t848 = t1073 * t903 - t1076 * t1082;
t994 = t1035 * t1022;
t1086 = qJ(5) * t994 + 0.2e1 * qJD(5) * t1024 - t1199 + t848;
t962 = -t1022 * qJD(4) + t1073 * qJDD(3) + t1076 * t1007;
t935 = t962 + t994;
t791 = (t935 + t962) * qJ(5) + t1086;
t1196 = -t1073 * t791 - t1076 * t785;
t939 = t1074 * t993 - t1077 * t1083;
t902 = -qJDD(3) * pkin(3) - t1186 * pkin(7) + t1044 * t999 + t939;
t839 = -t961 * pkin(4) - t1020 * qJ(5) + t1024 * t986 + qJDD(5) + t902;
t1034 = t1035 ^ 2;
t974 = -t1021 - t1034;
t827 = -qJ(5) * t974 + t839;
t1194 = t962 - t994;
t948 = t1087 + t983;
t877 = -pkin(4) * t1194 - qJ(5) * t948;
t1195 = -t1073 * t827 - t1076 * t877;
t797 = t1073 * t848 + t1076 * t849;
t1190 = t1187 * t1126;
t1038 = t1042 ^ 2;
t1039 = t1044 ^ 2;
t966 = -t1034 - t1020;
t889 = t1076 * t966 - t1148;
t931 = (qJD(4) + t1035) * t1024 + t1107;
t855 = t1074 * t889 - t1077 * t931;
t856 = t1074 * t931 + t1077 * t889;
t802 = t1070 * t856 + t1071 * t855;
t1184 = pkin(1) * t802;
t878 = t1074 * t940 - t1077 * t939;
t1183 = pkin(2) * t878;
t953 = -t1040 * t1074 - t1077 * t1041;
t1182 = pkin(2) * t953;
t873 = -t1073 * t932 - t1076 * t935;
t1181 = pkin(3) * t873;
t888 = t1073 * t966 + t1145;
t1180 = pkin(3) * t888;
t1149 = t1073 * t948;
t900 = t1076 * t974 - t1149;
t1179 = pkin(3) * t900;
t807 = t962 * qJ(5) + t1086;
t1178 = pkin(4) * t807;
t1177 = pkin(4) * t935;
t875 = t1073 * t935 - t1076 * t932;
t843 = t1074 * t875 - t1077 * t957;
t844 = t1074 * t957 + t1077 * t875;
t794 = -t1070 * t843 + t1071 * t844;
t1176 = pkin(5) * (t1075 * t794 - t1078 * t873);
t803 = -t1070 * t855 + t1071 * t856;
t1175 = pkin(5) * (t1075 * t803 - t1078 * t888);
t1146 = t1076 * t948;
t901 = -t1073 * t974 - t1146;
t862 = t1074 * t901 - t1077 * t1194;
t863 = t1074 * t1194 + t1077 * t901;
t806 = -t1070 * t862 + t1071 * t863;
t1174 = pkin(5) * (t1075 * t806 - t1078 * t900);
t1173 = pkin(6) * t843;
t1172 = pkin(6) * t855;
t1171 = pkin(6) * t862;
t1170 = pkin(7) * t873;
t1169 = pkin(7) * t888;
t1168 = pkin(7) * t900;
t1166 = pkin(3) * t1074;
t793 = t1070 * t844 + t1071 * t843;
t1163 = qJ(2) * t793;
t1162 = qJ(2) * t802;
t805 = t1070 * t863 + t1071 * t862;
t1161 = qJ(2) * t805;
t1160 = qJDD(1) * pkin(1);
t1159 = -pkin(1) * t873 + qJ(2) * t794;
t1158 = -pkin(1) * t888 + qJ(2) * t803;
t1157 = -pkin(1) * t900 + qJ(2) * t806;
t1156 = -pkin(3) * t957 + pkin(7) * t875;
t1155 = -pkin(3) * t931 + pkin(7) * t889;
t1154 = -pkin(3) * t1194 + pkin(7) * t901;
t1153 = -pkin(3) * t902 + pkin(7) * t797;
t1152 = t1070 * t878;
t1151 = t1071 * t878;
t1150 = t1073 * t807;
t894 = t1073 * t902;
t1147 = t1076 * t807;
t895 = t1076 * t902;
t1143 = t1035 * t1024;
t1142 = t1035 * t1073;
t1141 = t1035 * t1076;
t1139 = t1068 * t1187;
t1138 = t1070 * t1071;
t1137 = t1074 * t1001;
t1003 = qJDD(3) + t1010;
t1136 = t1074 * t1003;
t1135 = t1074 * t1042;
t1134 = t1074 * t1044;
t1036 = t1187 * qJ(2) + t1102 + t1160;
t1133 = t1075 * t1036;
t1132 = t1077 * t1001;
t1131 = t1077 * t1003;
t1130 = t1077 * t1042;
t1129 = t1077 * t1044;
t1128 = t1078 * t1036;
t1125 = t1075 * qJDD(1);
t1124 = t1078 * qJDD(1);
t1123 = t894 + t1154;
t1122 = -t895 + t1155;
t1120 = -pkin(3) * t1077 - pkin(2);
t1119 = -pkin(2) * t888 + pkin(6) * t856;
t1118 = -pkin(2) * t900 + pkin(6) * t863;
t1117 = t1074 * t983;
t1116 = t1075 * t1010;
t1115 = t1077 * t983;
t1114 = t1078 * t1010;
t1113 = t1070 * t1063;
t1112 = t1036 + t1160;
t879 = t1074 * t939 + t1077 * t940;
t1111 = t1156 - t1196;
t1110 = t1154 - t1195;
t1109 = t1156 + t797;
t854 = pkin(2) * t855;
t1108 = t854 + t1122;
t1085 = qJDD(1) * qJ(2) + (-pkin(1) * qJD(1) + t1185) * qJD(1) - t1055;
t1011 = t1070 * t1085 + t1164;
t1012 = t1071 * t1085 - t1165;
t965 = t1070 * t1011 + t1071 * t1012;
t1106 = -t1075 * t1054 - t1078 * t1055;
t774 = t1074 * t797 - t1077 * t902;
t1105 = pkin(2) * t774 + t1153;
t1029 = -t1039 - t1186;
t970 = t1077 * t1029 - t1136;
t1104 = pkin(2) * t970 - t940;
t1053 = -t1075 * t1187 + t1124;
t1103 = -pkin(5) * t1053 - t1075 * g(3);
t842 = pkin(2) * t843;
t1100 = -pkin(1) * t793 - t1156 - t842;
t861 = pkin(2) * t862;
t1099 = -pkin(1) * t805 - t1154 - t861;
t796 = t1073 * t849 - t1076 * t848;
t964 = t1071 * t1011 - t1070 * t1012;
t1098 = t1078 * t1054 - t1075 * t1055;
t1052 = t1078 * t1187 + t1125;
t1000 = -t1038 - t1186;
t950 = t1074 * t1000 + t1197;
t1096 = pkin(2) * t950 - t939;
t762 = t1076 * t814 + t1150;
t772 = -pkin(4) * t839 + qJ(5) * t814;
t1095 = -pkin(3) * t839 + pkin(7) * t762 + qJ(5) * t1150 + t1076 * t772;
t813 = -pkin(4) * t931 + qJ(5) * t966 - t839;
t1094 = -qJ(5) * t1148 + t1076 * t813 + t1155;
t1046 = t1071 * t1190;
t1093 = -t1075 * t1046 + t1071 * t1124;
t1092 = t1078 * t1046 + t1071 * t1125;
t1091 = pkin(4) * t974 - t1101;
t1090 = t1094 + t854;
t752 = t1074 * t762 - t1077 * t839;
t1088 = pkin(2) * t752 + t1095;
t1084 = -t807 + t1199;
t1064 = t1080 * t1187;
t1062 = t1080 * qJDD(1);
t1060 = t1068 * qJDD(1);
t1057 = t1187 * t1138;
t1056 = 0.2e1 * t1113;
t1051 = -t1064 + t1139;
t1050 = t1064 + t1139;
t1049 = t1062 - t1060;
t1048 = t1062 + t1060;
t1045 = t1070 * t1190;
t1037 = -pkin(5) * t1052 + t1078 * g(3);
t1028 = -t1039 + t1186;
t1027 = t1038 - t1186;
t1026 = t1053 * t1138;
t1025 = t1052 * t1138;
t1019 = t1078 * t1045 + t1070 * t1125;
t1018 = t1075 * t1045 - t1070 * t1124;
t1009 = t1039 - t1038;
t1006 = -0.2e1 * t1033 + t1041;
t997 = (-t1130 + t1134) * qJD(3);
t996 = (-t1129 - t1135) * qJD(3);
t992 = -qJ(2) * t1046 + t1071 * t1112;
t991 = qJ(2) * t1045 - t1070 * t1112;
t989 = -t1021 + t1034;
t988 = t1020 - t1034;
t982 = -t1038 - t1039;
t980 = t1021 - t1020;
t978 = -qJD(3) * t1134 + t1077 * t1007;
t977 = qJD(3) * t1129 + t1074 * t1007;
t976 = qJD(3) * t1130 - t1074 * t1089;
t975 = qJD(3) * t1135 + t1077 * t1089;
t973 = -t1074 * t1029 - t1131;
t972 = -t1074 * t1028 + t1197;
t971 = t1077 * t1027 - t1136;
t969 = t1077 * t1028 + t1198;
t968 = t1074 * t1027 + t1131;
t956 = -t1077 * t1005 - t1074 * t1006;
t955 = -t1040 * t1077 + t1074 * t1041;
t954 = -t1074 * t1005 + t1077 * t1006;
t951 = t1077 * t1000 - t1198;
t946 = pkin(1) * t1036 + qJ(2) * t965;
t945 = (-t1022 * t1076 + t1024 * t1073) * t1035;
t944 = (-t1022 * t1073 - t1024 * t1076) * t1035;
t943 = -t1070 * t996 + t1071 * t997;
t942 = t1070 * t997 + t1071 * t996;
t941 = pkin(1) * t1050 + qJ(2) * t1048 + t965;
t937 = -pkin(6) * t970 - t1132;
t928 = -pkin(6) * t950 - t1137;
t927 = -t1024 * t1142 + t1076 * t962;
t926 = t1024 * t1141 + t1073 * t962;
t925 = t1022 * t1141 - t1073 * t961;
t924 = -t1022 * t1142 - t1076 * t961;
t923 = -t1070 * t977 + t1071 * t978;
t922 = -t1070 * t975 + t1071 * t976;
t921 = t1070 * t978 + t1071 * t977;
t920 = t1070 * t976 + t1071 * t975;
t919 = -t1070 * t970 + t1071 * t973;
t918 = -t1070 * t969 + t1071 * t972;
t917 = -t1070 * t968 + t1071 * t971;
t916 = t1070 * t973 + t1071 * t970;
t915 = t1070 * t972 + t1071 * t969;
t914 = t1070 * t971 + t1071 * t968;
t913 = t1074 * t1087 + t1077 * t945;
t912 = t1074 * t945 - t1077 * t1087;
t911 = t1076 * t988 - t1149;
t910 = -t1073 * t989 + t1145;
t909 = t1073 * t988 + t1146;
t908 = t1076 * t989 + t1148;
t907 = -pkin(2) * t1006 + pkin(6) * t973 - t1137;
t904 = -pkin(2) * t1005 + pkin(6) * t951 + t1132;
t893 = -t1070 * t954 + t1071 * t956;
t892 = -t1070 * t953 + t1071 * t955;
t891 = t1070 * t956 + t1071 * t954;
t890 = t1070 * t955 + t1071 * t953;
t887 = -t1070 * t950 + t1071 * t951;
t886 = t1070 * t951 + t1071 * t950;
t883 = t1077 * t927 + t1117;
t882 = t1077 * t925 - t1117;
t881 = t1074 * t927 - t1115;
t880 = t1074 * t925 + t1115;
t874 = -t1073 * t1194 - t1076 * t931;
t872 = -t1073 * t931 + t1076 * t1194;
t869 = pkin(2) * t1001 + pkin(6) * t879;
t868 = -pkin(1) * t890 - t1182;
t867 = -t1074 * t932 + t1077 * t911;
t866 = t1074 * t935 + t1077 * t910;
t865 = t1074 * t911 + t1077 * t932;
t864 = t1074 * t910 - t1077 * t935;
t859 = -pkin(6) * t953 - t878;
t858 = -t1070 * t912 + t1071 * t913;
t857 = t1070 * t913 + t1071 * t912;
t852 = t1074 * t980 + t1077 * t874;
t851 = t1074 * t874 - t1077 * t980;
t850 = -pkin(1) * t916 - t1104;
t845 = t895 - t1168;
t841 = pkin(6) * t844;
t840 = t894 - t1169;
t837 = -pkin(2) * t982 + pkin(6) * t955 + t879;
t836 = -pkin(1) * t886 - t1096;
t835 = t1177 - t1181;
t834 = -t1070 * t881 + t1071 * t883;
t833 = -t1070 * t880 + t1071 * t882;
t832 = t1070 * t883 + t1071 * t881;
t831 = t1070 * t882 + t1071 * t880;
t830 = t1075 * t944 + t1078 * t858;
t829 = t1075 * t858 - t1078 * t944;
t828 = -qJ(2) * t916 - t1070 * t907 + t1071 * t937;
t825 = t1071 * t879 - t1152;
t824 = t1070 * t879 + t1151;
t823 = -pkin(1) * t1006 + qJ(2) * t919 + t1070 * t937 + t1071 * t907;
t822 = -qJ(2) * t886 - t1070 * t904 + t1071 * t928;
t821 = t849 - t1179;
t820 = t848 - t1180;
t819 = -pkin(1) * t1005 + qJ(2) * t887 + t1070 * t928 + t1071 * t904;
t818 = t1075 * t926 + t1078 * t834;
t817 = -t1075 * t924 + t1078 * t833;
t816 = t1075 * t834 - t1078 * t926;
t815 = t1075 * t833 + t1078 * t924;
t811 = -t1070 * t865 + t1071 * t867;
t810 = -t1070 * t864 + t1071 * t866;
t809 = t1070 * t867 + t1071 * t865;
t808 = t1070 * t866 + t1071 * t864;
t800 = -t1070 * t851 + t1071 * t852;
t799 = t1070 * t852 + t1071 * t851;
t798 = -pkin(1) * t824 - t1183;
t789 = t1075 * t909 + t1078 * t811;
t788 = t1075 * t908 + t1078 * t810;
t787 = t1075 * t811 - t1078 * t909;
t786 = t1075 * t810 - t1078 * t908;
t783 = t1013 - t1091 - t1179;
t781 = pkin(5) * (t1075 * t900 + t1078 * t806);
t779 = pkin(5) * (t1075 * t888 + t1078 * t803);
t778 = -t1073 * t877 + t1076 * t827 - t1168;
t777 = -qJ(5) * t1145 - t1073 * t813 - t1169;
t776 = -qJ(2) * t890 - t1070 * t837 + t1071 * t859;
t775 = t1074 * t902 + t1077 * t797;
t773 = -t1084 - t1180;
t771 = -pkin(1) * t982 + qJ(2) * t892 + t1070 * t859 + t1071 * t837;
t769 = t1075 * t872 + t1078 * t800;
t768 = t1075 * t800 - t1078 * t872;
t767 = -pkin(6) * t1151 - qJ(2) * t824 - t1070 * t869;
t766 = -t796 - t1170;
t764 = pkin(5) * (t1075 * t873 + t1078 * t794);
t763 = pkin(1) * t1001 - pkin(6) * t1152 + qJ(2) * t825 + t1071 * t869;
t761 = t1073 * t814 - t1147;
t759 = -t1074 * t821 + t1077 * t845 - t1171;
t758 = -t1074 * t820 + t1077 * t840 - t1172;
t757 = t1074 * t845 + t1077 * t821 + t1118;
t756 = t1074 * t840 + t1077 * t820 + t1119;
t755 = t1099 - t894;
t754 = -t1108 - t1184;
t753 = t1074 * t839 + t1077 * t762;
t751 = t1077 * t766 + t873 * t1166 - t1173;
t750 = -t1070 * t774 + t1071 * t775;
t749 = t1070 * t775 + t1071 * t774;
t748 = -pkin(3) * t761 + t1178;
t747 = -t1073 * t785 + t1076 * t791 - t1170;
t746 = t1074 * t766 + t1120 * t873 + t841;
t745 = t1099 + t1195;
t744 = -t1090 - t1184;
t743 = -t1074 * t783 + t1077 * t778 - t1171;
t742 = -t1074 * t773 + t1077 * t777 - t1172;
t741 = t1100 - t797;
t740 = t1074 * t778 + t1077 * t783 + t1118;
t739 = t1074 * t777 + t1077 * t773 + t1119;
t738 = -pkin(6) * t774 + (-pkin(7) * t1077 + t1166) * t796;
t737 = -t1074 * t835 + t1077 * t747 - t1173;
t736 = -pkin(7) * t761 + qJ(5) * t1147 - t1073 * t772;
t735 = -pkin(2) * t873 + t1074 * t747 + t1077 * t835 + t841;
t734 = t1100 + t1196;
t733 = pkin(6) * t775 + (-pkin(7) * t1074 + t1120) * t796;
t732 = -t1070 * t752 + t1071 * t753;
t731 = t1070 * t753 + t1071 * t752;
t730 = -t1070 * t757 + t1071 * t759 - t1161;
t729 = -t1070 * t756 + t1071 * t758 - t1162;
t728 = t1070 * t759 + t1071 * t757 + t1157;
t727 = t1070 * t758 + t1071 * t756 + t1158;
t726 = -pkin(1) * t749 - t1105;
t725 = -t1070 * t746 + t1071 * t751 - t1163;
t724 = t1070 * t751 + t1071 * t746 + t1159;
t723 = -t1070 * t740 + t1071 * t743 - t1161;
t722 = t1070 * t743 + t1071 * t740 + t1157;
t721 = -t1070 * t739 + t1071 * t742 - t1162;
t720 = t1070 * t742 + t1071 * t739 + t1158;
t719 = -pkin(6) * t752 - t1074 * t748 + t1077 * t736;
t718 = -t1070 * t735 + t1071 * t737 - t1163;
t717 = t1070 * t737 + t1071 * t735 + t1159;
t716 = -qJ(2) * t749 - t1070 * t733 + t1071 * t738;
t715 = -pkin(2) * t761 + pkin(6) * t753 + t1074 * t736 + t1077 * t748;
t714 = -pkin(1) * t731 - t1088;
t713 = -pkin(1) * t796 + qJ(2) * t750 + t1070 * t738 + t1071 * t733;
t712 = -qJ(2) * t731 - t1070 * t715 + t1071 * t719;
t711 = -pkin(1) * t761 + qJ(2) * t732 + t1070 * t719 + t1071 * t715;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1053, 0, -t1052, 0, t1103, -t1037, -t1098, -pkin(5) * t1098, t1026, t1078 * t1049 + t1075 * t1051, t1019, -t1026, t1092, 0, -pkin(5) * t1093 - t1075 * t1011 - t1070 * t1128, -pkin(5) * t1018 - t1075 * t1012 - t1071 * t1128, t1078 * t964 - pkin(5) * (t1075 * t1048 + t1078 * t1050), -pkin(5) * (t1075 * t965 + t1128) - (t1075 * pkin(1) - t1078 * qJ(2)) * t964, t1078 * t923 + t1116, t1075 * t1009 + t1078 * t893, t1075 * t1041 + t1078 * t918, t1078 * t922 - t1116, -t1075 * t1040 + t1078 * t917, t1075 * qJDD(3) + t1078 * t943, t1078 * t822 - t1075 * t836 - pkin(5) * (-t1078 * t1005 + t1075 * t887), t1078 * t828 - t1075 * t850 - pkin(5) * (-t1078 * t1006 + t1075 * t919), t1078 * t776 - t1075 * t868 - pkin(5) * (t1075 * t892 - t1078 * t982), t1078 * t767 - t1075 * t798 - pkin(5) * (t1078 * t1001 + t1075 * t825), t818, t769, t788, t817, t789, t830, -t1075 * t754 + t1078 * t729 - t1175, -t1075 * t755 + t1078 * t730 - t1174, -t1075 * t741 + t1078 * t725 - t1176, t1078 * t716 - t1075 * t726 - pkin(5) * (t1075 * t750 - t1078 * t796), t818, t769, t788, t817, t789, t830, -t1075 * t744 + t1078 * t721 - t1175, -t1075 * t745 + t1078 * t723 - t1174, -t1075 * t734 + t1078 * t718 - t1176, t1078 * t712 - t1075 * t714 - pkin(5) * (t1075 * t732 - t1078 * t761); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1052, 0, t1053, 0, t1037, t1103, t1106, pkin(5) * t1106, t1025, t1075 * t1049 - t1078 * t1051, t1018, -t1025, -t1093, 0, -pkin(5) * t1092 + t1078 * t1011 - t1070 * t1133, pkin(5) * t1019 + t1078 * t1012 - t1071 * t1133, t1075 * t964 + pkin(5) * (t1078 * t1048 - t1075 * t1050), pkin(5) * (t1078 * t965 - t1133) - (-t1078 * pkin(1) - t1075 * qJ(2)) * t964, t1075 * t923 - t1114, -t1078 * t1009 + t1075 * t893, -t1078 * t1041 + t1075 * t918, t1075 * t922 + t1114, t1078 * t1040 + t1075 * t917, -t1078 * qJDD(3) + t1075 * t943, t1075 * t822 + t1078 * t836 + pkin(5) * (t1075 * t1005 + t1078 * t887), t1075 * t828 + t1078 * t850 + pkin(5) * (t1075 * t1006 + t1078 * t919), t1075 * t776 + t1078 * t868 + pkin(5) * (t1075 * t982 + t1078 * t892), t1075 * t767 + t1078 * t798 + pkin(5) * (-t1075 * t1001 + t1078 * t825), t816, t768, t786, t815, t787, t829, t1075 * t729 + t1078 * t754 + t779, t1075 * t730 + t1078 * t755 + t781, t1075 * t725 + t1078 * t741 + t764, t1075 * t716 + t1078 * t726 + pkin(5) * (t1075 * t796 + t1078 * t750), t816, t768, t786, t815, t787, t829, t1075 * t721 + t1078 * t744 + t779, t1075 * t723 + t1078 * t745 + t781, t1075 * t718 + t1078 * t734 + t764, t1075 * t712 + t1078 * t714 + pkin(5) * (t1075 * t761 + t1078 * t732); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1054, t1055, 0, 0, t1060, t1056, 0, t1062, 0, 0, t992, t991, t941, t946, t921, t891, t915, t920, t914, t942, t819, t823, t771, t763, t832, t799, t808, t831, t809, t857, t727, t728, t724, t713, t832, t799, t808, t831, t809, t857, t720, t722, t717, t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1187, 0, 0, -g(3), -t1054, 0, t1113, t1049, t1045, -t1113, t1046, 0, -t1070 * t1036, -t1071 * t1036, t964, qJ(2) * t964, t923, t893, t918, t922, t917, t943, t822, t828, t776, t767, t834, t800, t810, t833, t811, t858, t729, t730, t725, t716, t834, t800, t810, t833, t811, t858, t721, t723, t718, t712; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1187, 0, qJDD(1), 0, g(3), 0, -t1055, 0, t1057, -t1051, -t1061, -t1057, -t1063, 0, t1011, t1012, 0, pkin(1) * t964, -t1010, -t1009, -t1041, t1010, t1040, -qJDD(3), t836, t850, t868, t798, -t926, -t872, -t908, t924, -t909, -t944, t754, t755, t741, t726, -t926, -t872, -t908, t924, -t909, -t944, t744, t745, t734, t714; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1054, t1055, 0, 0, t1060, t1056, 0, t1062, 0, 0, t992, t991, t941, t946, t921, t891, t915, t920, t914, t942, t819, t823, t771, t763, t832, t799, t808, t831, t809, t857, t727, t728, t724, t713, t832, t799, t808, t831, t809, t857, t720, t722, t717, t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1061, t1063, t1057, 0, t1064, 0, 0, -t1036, t1011, 0, t978, t956, t972, t976, t971, t997, t928, t937, t859, -pkin(6) * t878, t883, t852, t866, t882, t867, t913, t758, t759, t751, t738, t883, t852, t866, t882, t867, t913, t742, t743, t737, t719; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1061, -t1139, t1063, -t1057, 0, t1036, 0, t1012, 0, t977, t954, t969, t975, t968, t996, t904, t907, t837, t869, t881, t851, t864, t880, t865, t912, t756, t757, t746, t733, t881, t851, t864, t880, t865, t912, t739, t740, t735, t715; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1057, t1051, t1061, t1057, t1063, 0, -t1011, -t1012, 0, 0, t1010, t1009, t1041, -t1010, -t1040, qJDD(3), t1096, t1104, t1182, t1183, t926, t872, t908, -t924, t909, t944, t1108, t861 + t1123, t842 + t1109, t1105, t926, t872, t908, -t924, t909, t944, t1090, t861 + t1110, t842 + t1111, t1088; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1007, -t1005, t1192, t1033, t1027, -t1033, 0, -t1001, t939, 0, t927, t874, t910, t925, t911, t945, t840, t845, t766, -pkin(7) * t796, t927, t874, t910, t925, t911, t945, t777, t778, t747, t736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1140, t1006, t1028, t1089, t1003, -t1140, t1001, 0, t940, 0, -t983, -t980, -t935, t983, t932, -t1087, t820, t821, -t1181, -pkin(3) * t796, -t983, -t980, -t935, t983, t932, -t1087, t773, t783, t835, t748; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1010, t1009, t1041, -t1010, -t1040, qJDD(3), -t939, -t940, 0, 0, t926, t872, t908, -t924, t909, t944, t1122, t1123, t1109, t1153, t926, t872, t908, -t924, t909, t944, t1094, t1110, t1111, t1095; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t962, -t931, t1193, t994, t988, -t994, 0, t902, t848, 0, t962, -t931, t1193, t994, t988, -t994, -qJ(5) * t1193, t827, t791, qJ(5) * t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1143, t1194, t989, t961, t948, -t1143, -t902, 0, t849, 0, t1143, t1194, t989, t961, t948, -t1143, t813, t877, t785, t772; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t983, t980, t935, -t983, -t932, t1087, -t848, -t849, 0, 0, t983, t980, t935, -t983, -t932, t1087, t1084, t1091 + 0.2e1 * t1144, -t1177, -t1178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t962, -t931, t1193, t994, t988, -t994, 0, t839, t807, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1143, t1194, t989, t961, t948, -t1143, -t839, 0, t814, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t983, t980, t935, -t983, -t932, t1087, -t807, -t814, 0, 0;];
m_new_reg = t1;
