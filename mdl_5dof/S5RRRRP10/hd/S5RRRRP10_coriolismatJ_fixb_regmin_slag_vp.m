% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:13
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRP10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:12:24
% EndTime: 2019-12-31 22:12:47
% DurationCPUTime: 10.83s
% Computational Cost: add. (10664->698), mult. (26264->1024), div. (0->0), fcn. (27182->8), ass. (0->503)
t427 = sin(qJ(3));
t430 = cos(qJ(3));
t510 = -pkin(3) * t430 - pkin(9) * t427;
t386 = -pkin(2) + t510;
t429 = cos(qJ(4));
t366 = t429 * t386;
t646 = t427 * t429;
t509 = -qJ(5) * t646 + t366;
t426 = sin(qJ(4));
t648 = t426 * t430;
t591 = pkin(8) * t648;
t282 = t509 - t591;
t696 = pkin(8) * t426;
t263 = (-pkin(4) - t696) * t430 + t509;
t720 = -t263 / 0.2e1;
t538 = t282 / 0.2e1 + t720;
t425 = sin(pkin(5));
t431 = cos(qJ(2));
t641 = t429 * t431;
t579 = t425 * t641;
t681 = cos(pkin(5));
t536 = t681 * t427;
t428 = sin(qJ(2));
t654 = t425 * t428;
t355 = t430 * t654 + t536;
t660 = t355 * t426;
t277 = t579 + t660;
t575 = pkin(1) * t681;
t653 = t425 * t431;
t358 = pkin(7) * t653 + t428 * t575;
t337 = pkin(8) * t681 + t358;
t640 = t430 * t337;
t512 = -pkin(2) * t431 - pkin(8) * t428;
t338 = (-pkin(1) + t512) * t425;
t647 = t427 * t338;
t190 = t640 + t647;
t174 = -pkin(9) * t653 + t190;
t356 = pkin(7) * t654 - t431 * t575;
t336 = -pkin(2) * t681 + t356;
t353 = t427 * t654 - t430 * t681;
t511 = pkin(3) * t353 - pkin(9) * t355;
t433 = t336 + t511;
t97 = t174 * t429 + t426 * t433;
t77 = -qJ(5) * t277 + t97;
t732 = t538 * t77;
t189 = t337 * t427 - t338 * t430;
t173 = pkin(3) * t653 + t189;
t731 = (t189 / 0.2e1 - t173 / 0.2e1) * t426;
t730 = -t263 + t282;
t203 = t429 * t353;
t545 = -t203 / 0.2e1;
t580 = t426 * t653;
t659 = t355 * t429;
t279 = -t580 + t659;
t668 = t279 * t430;
t729 = t427 * t545 + t668 / 0.2e1;
t649 = t426 * t427;
t549 = -t649 / 0.2e1;
t670 = t277 * t430;
t457 = t353 * t549 + t670 / 0.2e1;
t420 = t426 ^ 2;
t422 = t429 ^ 2;
t402 = t422 - t420;
t728 = qJD(3) * t402;
t704 = -t427 / 0.2e1;
t554 = t353 * t704;
t700 = t430 / 0.2e1;
t467 = t355 * t700 + t554;
t727 = t467 * qJD(3);
t593 = t430 * qJD(2);
t406 = t427 * t593;
t532 = qJD(1) * t467 + t406;
t599 = t353 * qJD(1);
t463 = -qJD(2) * t467 + t355 * t599;
t726 = t279 ^ 2;
t725 = t353 ^ 2;
t694 = t353 * pkin(4);
t96 = t174 * t426 - t429 * t433;
t76 = -qJ(5) * t279 - t96;
t58 = t76 + t694;
t724 = t58 / 0.2e1;
t242 = pkin(3) * t355 + pkin(9) * t353;
t219 = t429 * t242;
t652 = t426 * t189;
t534 = t219 + t652;
t86 = pkin(4) * t355 + qJ(5) * t203 + t534;
t723 = t86 / 0.2e1;
t689 = t430 * pkin(9);
t692 = t427 * pkin(3);
t389 = -t689 + t692;
t243 = t389 * t653 + t358;
t228 = t429 * t243;
t357 = (pkin(2) * t428 - pkin(8) * t431) * t425;
t344 = t427 * t357;
t345 = t430 * t356;
t632 = t344 - t345;
t194 = pkin(9) * t654 + t632;
t651 = t426 * t194;
t125 = t228 - t651;
t637 = t430 * t431;
t645 = t428 * t426;
t320 = (t429 * t637 + t645) * t425;
t581 = t427 * t653;
t94 = pkin(4) * t581 - qJ(5) * t320 + t125;
t722 = t94 / 0.2e1;
t721 = t219 / 0.2e1;
t719 = t263 / 0.2e1;
t264 = t279 * t426;
t557 = -t264 / 0.2e1;
t376 = t429 * t389;
t413 = pkin(8) * t649;
t631 = t413 + t376;
t642 = t429 * t430;
t272 = pkin(4) * t427 - qJ(5) * t642 + t631;
t718 = t272 / 0.2e1;
t717 = t277 / 0.2e1;
t716 = -t279 / 0.2e1;
t589 = pkin(8) * t642;
t322 = t386 * t426 + t589;
t283 = -qJ(5) * t649 + t322;
t714 = t283 / 0.2e1;
t713 = -t320 / 0.2e1;
t712 = -t353 / 0.2e1;
t711 = t353 / 0.2e1;
t375 = t426 * t389;
t710 = t375 / 0.2e1;
t687 = -qJ(5) - pkin(9);
t387 = t687 * t426;
t709 = t387 / 0.2e1;
t388 = t687 * t429;
t708 = t388 / 0.2e1;
t707 = -t388 / 0.2e1;
t391 = t429 * t654;
t706 = t391 / 0.2e1;
t705 = -t426 / 0.2e1;
t703 = t427 / 0.2e1;
t702 = t429 / 0.2e1;
t701 = -t430 / 0.2e1;
t699 = pkin(4) * t279;
t698 = pkin(4) * t320;
t697 = pkin(8) * t277;
t319 = t430 * t580 - t391;
t695 = t319 * pkin(4);
t693 = t426 * pkin(4);
t691 = t430 * pkin(4);
t690 = t430 * pkin(8);
t688 = -qJD(4) / 0.2e1;
t686 = t58 - t76;
t685 = pkin(4) * qJD(4);
t684 = pkin(4) * qJD(5);
t683 = t58 * t429;
t682 = t77 * t426;
t13 = t686 * t277;
t680 = t13 * qJD(1);
t127 = pkin(4) * t277 + t173;
t14 = t127 * t699 - t686 * t77;
t679 = t14 * qJD(1);
t199 = t426 * t353;
t182 = t429 * t189;
t218 = t426 * t242;
t633 = t182 - t218;
t105 = qJ(5) * t199 - t633;
t148 = -pkin(4) * t199 + t190;
t15 = t105 * t77 + t127 * t148 + t58 * t86;
t678 = t15 * qJD(1);
t188 = t429 * t194;
t227 = t426 * t243;
t126 = t188 + t227;
t106 = -qJ(5) * t319 + t126;
t343 = t427 * t356;
t638 = t430 * t357;
t533 = t343 + t638;
t193 = -pkin(3) * t654 - t533;
t146 = t193 + t695;
t16 = t106 * t77 + t127 * t146 + t58 * t94;
t677 = t16 * qJD(1);
t17 = -t105 * t277 - t86 * t279 + (t682 + t683) * t353;
t676 = t17 * qJD(1);
t675 = t173 * t429;
t18 = -t106 * t277 - t279 * t94 - t319 * t77 - t320 * t58;
t674 = t18 * qJD(1);
t673 = t193 * t426;
t672 = t193 * t429;
t27 = t190 * t277 - t96 * t355 + (t219 + (-t173 + t189) * t426) * t353;
t671 = t27 * qJD(1);
t669 = t279 * t429;
t28 = t190 * t279 - t97 * t355 + (t633 - t675) * t353;
t667 = t28 * qJD(1);
t29 = t125 * t353 + t173 * t319 + t193 * t277 - t581 * t96;
t666 = t29 * qJD(1);
t30 = -t126 * t353 + t173 * t320 + t193 * t279 - t581 * t97;
t665 = t30 * qJD(1);
t31 = -t277 * t77 - t279 * t58;
t664 = t31 * qJD(1);
t663 = t320 * t426;
t662 = t322 * t355;
t661 = t336 * t430;
t38 = -t173 * t277 + t353 * t96;
t658 = t38 * qJD(1);
t39 = t173 * t279 - t353 * t97;
t657 = t39 * qJD(1);
t419 = t425 ^ 2;
t424 = t431 ^ 2;
t656 = t419 * t424;
t655 = t419 * t428;
t650 = t426 * t277;
t644 = t429 * t277;
t421 = t427 ^ 2;
t643 = t429 * t421;
t639 = t430 * t353;
t63 = t189 * t654 - t336 * t581 - t353 * t358 + t533 * t653;
t636 = t63 * qJD(1);
t64 = t358 * t355 + (-t190 * t428 + (t632 + t661) * t431) * t425;
t635 = t64 * qJD(1);
t292 = t203 * t649;
t75 = t292 + (-t670 / 0.2e1 + t713) * t429 + (-t668 / 0.2e1 + t319 / 0.2e1) * t426;
t634 = t75 * qJD(1);
t401 = t422 + t420;
t423 = t430 ^ 2;
t403 = t423 - t421;
t630 = qJD(1) * t279;
t629 = qJD(1) * t431;
t628 = qJD(2) * t425;
t627 = qJD(2) * t431;
t626 = qJD(3) * t426;
t625 = qJD(3) * t427;
t624 = qJD(3) * t429;
t623 = qJD(3) * t430;
t622 = qJD(4) * t279;
t621 = qJD(4) * t426;
t620 = qJD(4) * t429;
t619 = qJD(4) * t430;
t109 = -t277 * t320 - t279 * t319;
t618 = t109 * qJD(1);
t113 = (t644 + t264) * t353;
t617 = t113 * qJD(1);
t121 = -t189 * t653 - t336 * t353;
t616 = t121 * qJD(1);
t122 = -t190 * t653 - t336 * t355;
t615 = t122 * qJD(1);
t543 = t642 / 0.2e1;
t451 = t279 * t543 + t422 * t554;
t129 = -t663 / 0.2e1 + t451;
t614 = t129 * qJD(1);
t130 = t277 * t355 - t426 * t725;
t613 = t130 * qJD(1);
t131 = t279 * t355 - t429 * t725;
t612 = t131 * qJD(1);
t551 = -t653 / 0.2e1;
t520 = t426 * t551;
t544 = t203 / 0.2e1;
t133 = t706 + t427 * t544 + (t520 + t716) * t430;
t611 = t133 * qJD(1);
t542 = t641 / 0.2e1;
t448 = (t430 * t542 + t645 / 0.2e1) * t425;
t134 = t448 - t457;
t610 = t134 * qJD(1);
t137 = -t277 * t581 - t319 * t353;
t609 = t137 * qJD(1);
t138 = t279 * t581 + t320 * t353;
t608 = t138 * qJD(1);
t159 = -t355 * t427 - t639;
t179 = t159 * t653;
t607 = t179 * qJD(1);
t606 = t199 * qJD(1);
t605 = t203 * qJD(1);
t265 = -t353 * t654 + t427 * t656;
t604 = t265 * qJD(1);
t266 = -t355 * t654 + t430 * t656;
t603 = t266 * qJD(1);
t602 = t277 * qJD(4);
t285 = pkin(1) * t655 + t358 * t681;
t601 = t285 * qJD(1);
t286 = pkin(1) * t419 * t431 - t356 * t681;
t600 = t286 * qJD(1);
t598 = t353 * qJD(3);
t597 = t355 * qJD(3);
t365 = (-t428 ^ 2 + t424) * t419;
t596 = t365 * qJD(1);
t595 = t425 * qJD(3);
t594 = t427 * qJD(2);
t592 = pkin(4) * t646;
t590 = pkin(8) * t646;
t588 = pkin(4) * t621;
t587 = pkin(4) * t620;
t586 = t699 / 0.2e1;
t585 = -t694 / 0.2e1;
t584 = t693 / 0.2e1;
t583 = -t691 / 0.2e1;
t582 = -t76 / 0.2e1 + t724;
t578 = t426 * t639;
t577 = t429 * t639;
t576 = pkin(8) + t693;
t574 = t279 * t599;
t573 = t425 * t629;
t572 = t425 * t627;
t571 = t429 * t594;
t570 = t431 * t595;
t569 = t426 * t624;
t568 = t427 * t624;
t567 = t426 * t619;
t566 = t429 * t619;
t564 = t419 * t629;
t563 = t428 * t628;
t562 = t426 * t620;
t561 = t427 * t623;
t560 = t173 * t426 / 0.2e1;
t559 = t277 * t704;
t556 = t279 * t703;
t553 = -t654 / 0.2e1;
t552 = t654 / 0.2e1;
t550 = t653 / 0.2e1;
t548 = t648 / 0.2e1;
t547 = -t646 / 0.2e1;
t546 = t646 / 0.2e1;
t541 = t182 / 0.2e1 - t218 / 0.2e1;
t540 = -t188 / 0.2e1 - t227 / 0.2e1;
t537 = t344 / 0.2e1 - t345 / 0.2e1;
t535 = t681 * qJD(1);
t531 = pkin(4) * t546;
t530 = pkin(8) * t550;
t529 = -qJD(4) - t599;
t528 = -qJD(4) + t593;
t527 = t426 * t568;
t526 = t627 * t655;
t525 = t428 * t564;
t524 = t430 * t573;
t523 = t426 * t571;
t522 = t427 * t551;
t521 = t427 * t550;
t519 = t426 * t550;
t518 = t425 * t542;
t515 = t375 - t590;
t514 = t425 * t535;
t513 = t681 * t628;
t508 = 0.2e1 * t523;
t507 = t228 / 0.2e1 - t651 / 0.2e1;
t506 = t343 / 0.2e1 + t638 / 0.2e1;
t505 = -t388 * t704 + t720;
t504 = pkin(9) * t522;
t503 = -qJD(3) + t573;
t284 = -qJ(5) * t648 + t515;
t377 = t576 * t427;
t378 = t576 * t430;
t432 = t105 * t714 + t127 * t378 / 0.2e1 + t148 * t377 / 0.2e1 + t58 * t718 + t77 * t284 / 0.2e1 + t86 * t719;
t417 = -pkin(4) * t429 - pkin(3);
t443 = t106 * t707 + t146 * t417 / 0.2e1 + t94 * t709;
t1 = -t432 + t443;
t78 = t263 * t272 + t283 * t284 + t377 * t378;
t502 = -qJD(1) * t1 + qJD(2) * t78;
t442 = t105 * t704 + t283 * t711 + t701 * t77;
t447 = t263 * t711 + t58 * t701 + t704 * t86;
t466 = t319 * t707 + t320 * t709;
t468 = t272 * t716 - t284 * t277 / 0.2e1;
t4 = (-t106 / 0.2e1 + t447) * t429 + (t722 + t442) * t426 + t466 + t468;
t79 = (t263 * t430 + t272 * t427) * t429 + (t283 * t430 + t284 * t427) * t426;
t501 = t4 * qJD(1) - t79 * qJD(2);
t5 = -t732 + t582 * t283 + (t127 * t547 + t377 * t716 + t722) * pkin(4);
t82 = t283 * t730 + t377 * t592;
t500 = -qJD(1) * t5 + qJD(2) * t82;
t435 = -t277 * t538 + t582 * t649;
t10 = t698 / 0.2e1 + t435;
t80 = t730 * t649;
t499 = -qJD(1) * t10 + qJD(2) * t80;
t11 = (t694 / 0.2e1 + t582) * t429;
t51 = (t691 / 0.2e1 + t538) * t429;
t498 = qJD(1) * t11 - qJD(2) * t51;
t497 = t535 + qJD(2);
t141 = (t263 * t429 + t283 * t426) * t427;
t434 = t695 / 0.2e1 + pkin(3) * t553 - t506;
t469 = t277 * t714 + t279 * t719;
t23 = (t682 / 0.2e1 + t683 / 0.2e1) * t427 + t434 + t469;
t496 = -qJD(1) * t23 - qJD(2) * t141;
t321 = -t366 + t591;
t169 = t321 * t427 + (-t413 + t376) * t430;
t455 = t321 * t355 / 0.2e1 + t631 * t712;
t479 = -pkin(3) * t319 / 0.2e1 - t672 / 0.2e1;
t490 = pkin(9) * t551 - t190 / 0.2e1;
t19 = (t721 - t697 / 0.2e1 + t731) * t430 + (t96 / 0.2e1 + (pkin(8) * t711 + t490) * t426) * t427 + t455 + t479;
t495 = -t19 * qJD(1) - t169 * qJD(2);
t170 = t375 * t430 + (-t322 + t589) * t427;
t477 = pkin(8) * t716 - t675 / 0.2e1;
t478 = pkin(3) * t713 + t673 / 0.2e1;
t20 = t353 * t710 + t662 / 0.2e1 + (t477 + t541) * t430 + (t97 / 0.2e1 + t490 * t429) * t427 + t478;
t494 = -t20 * qJD(1) + t170 * qJD(2);
t269 = -t321 * t430 - t421 * t696;
t474 = t321 * t712 + t700 * t96;
t33 = (t697 / 0.2e1 + t560) * t427 + t474 + t540;
t493 = qJD(1) * t33 - qJD(2) * t269;
t270 = -pkin(8) * t643 - t322 * t430;
t473 = t322 * t711 + t701 * t97;
t32 = t427 * t477 + t473 + t507;
t492 = qJD(1) * t32 + qJD(2) * t270;
t491 = t528 * t427;
t101 = -t577 + (t519 - t659 / 0.2e1 + t716) * t427;
t374 = t423 * t429 - t643;
t489 = -qJD(1) * t101 - qJD(2) * t374;
t102 = t578 + (t518 + t660 / 0.2e1 + t717) * t427;
t373 = t403 * t426;
t488 = -qJD(1) * t102 + qJD(2) * t373;
t144 = (-t650 - t669) * t427;
t371 = t401 * t421;
t487 = qJD(1) * t144 - qJD(2) * t371;
t181 = -t355 ^ 2 + t725;
t486 = qJD(1) * t181 + qJD(2) * t159;
t485 = qJD(1) * t159 + qJD(2) * t403;
t484 = t593 - t599;
t483 = qJD(1) * t355 + t594;
t150 = t264 - t644;
t482 = qJD(1) * t150 + qJD(3) * t401;
t481 = t689 / 0.2e1 - t692 / 0.2e1;
t480 = -pkin(2) * t355 / 0.2e1 + t336 * t703;
t346 = t430 * t552 + t536 / 0.2e1;
t476 = t346 * qJD(1) + t594 / 0.2e1;
t475 = t425 * t512;
t436 = pkin(2) * t711 + t661 / 0.2e1 + pkin(8) * t522;
t117 = t436 + t537;
t472 = pkin(2) * t593 - qJD(1) * t117;
t119 = -t343 / 0.2e1 + (t530 - t357 / 0.2e1) * t430 + t480;
t471 = pkin(2) * t594 - qJD(1) * t119;
t470 = (t387 * t704 + t714) * t429;
t465 = t647 / 0.2e1 + t640 / 0.2e1;
t464 = -t644 / 0.2e1 + t557;
t462 = -t571 - t626;
t461 = pkin(3) * t716 + pkin(9) * t545;
t460 = t427 * t688 + t532;
t459 = t481 * t426;
t458 = t481 * t429;
t180 = t417 * t693;
t36 = t538 * t388 + (t377 * t705 + t417 * t547 + t718) * pkin(4);
t7 = -t582 * t388 + (t127 * t705 + t417 * t716 + t723) * pkin(4);
t456 = -qJD(1) * t7 - qJD(2) * t36 + qJD(3) * t180;
t100 = -t690 / 0.2e1 + t470 + (t583 + t505) * t426;
t441 = t279 * t709 + t277 * t707 - t77 * t429 / 0.2e1;
t25 = (t585 + t724) * t426 + t441 + t465;
t288 = -t387 * t426 - t388 * t429;
t454 = -qJD(1) * t25 + qJD(2) * t100 + qJD(3) * t288;
t108 = (-t650 + t669) * t427;
t111 = -t644 + 0.2e1 * t557;
t274 = t277 ^ 2;
t124 = t274 - t726;
t453 = qJD(1) * t124 - qJD(2) * t108 + qJD(3) * t111;
t160 = t274 + t726;
t452 = qJD(1) * t160 - qJD(2) * t144 + qJD(3) * t150;
t275 = t710 - t459;
t440 = pkin(3) * t717 + t675 / 0.2e1 + pkin(9) * t199 / 0.2e1;
t40 = t440 - t541;
t450 = pkin(3) * t624 - qJD(1) * t40 - qJD(2) * t275;
t276 = -t376 / 0.2e1 + t458;
t42 = -t219 / 0.2e1 - t731 + t461;
t449 = pkin(3) * t626 - qJD(1) * t42 - qJD(2) * t276;
t143 = t464 * t427;
t149 = -t650 / 0.2e1 + t669 / 0.2e1;
t446 = -qJD(2) * t143 - qJD(3) * t149 + t277 * t630;
t359 = (t420 / 0.2e1 - t422 / 0.2e1) * t427;
t445 = qJD(1) * t149 - qJD(2) * t359 + t569;
t444 = qJD(4) * t346 + t463;
t372 = t402 * t421;
t439 = qJD(1) * t108 + qJD(2) * t372 + 0.2e1 * t527;
t438 = -qJD(1) * t111 + t508 - t728;
t437 = qJD(2) * t426 * t643 - qJD(1) * t143 + qJD(3) * t359;
t415 = t625 / 0.2e1;
t390 = qJD(2) * t552;
t381 = -0.2e1 * t427 * t562;
t352 = t359 * qJD(4);
t339 = (t564 - t595 / 0.2e1) * t428;
t273 = qJD(2) * t521 + qJD(3) * t346;
t241 = t413 + t376 / 0.2e1 + t458;
t240 = t590 - t375 / 0.2e1 - t459;
t191 = (t462 - t630) * pkin(4);
t154 = t159 * qJD(3);
t147 = t150 * qJD(5);
t145 = t149 * qJD(4);
t142 = t144 * qJD(5);
t140 = t143 * qJD(4);
t136 = t430 * t520 + t706 + t729;
t135 = t448 + t457;
t128 = t663 / 0.2e1 + t451;
t120 = t430 * t530 + t480 + t506;
t118 = t436 - t537;
t110 = t111 * qJD(4);
t107 = t108 * qJD(4);
t104 = t355 * t546 + t427 * t519 + t556 + t577;
t103 = t355 * t549 + t427 * t518 + t559 - t578;
t99 = t690 / 0.2e1 + pkin(4) * t548 + t470 + t505 * t426;
t74 = t319 * t705 + t320 * t702 + t430 * t464 + t292;
t52 = (t538 + t583) * t429;
t43 = t560 + t652 / 0.2e1 + t721 + t461;
t41 = t440 + t541;
t37 = pkin(4) * t718 + t263 * t708 + t282 * t707 + t377 * t584 + t417 * t531;
t35 = pkin(8) * t556 + t173 * t546 - t473 + t507;
t34 = pkin(8) * t559 + t173 * t549 - t474 + t540;
t26 = t426 * t585 + t58 * t705 - t441 + t465;
t24 = t547 * t58 + t549 * t77 + t434 - t469;
t22 = t515 * t712 - t662 / 0.2e1 + t633 * t701 + t97 * t704 + t190 * t546 + t173 * t543 + t429 * t504 + t478 + t729 * pkin(8);
t21 = t534 * t701 + t96 * t704 + t190 * t649 / 0.2e1 + t173 * t548 + t426 * t504 - t455 + t479 + t457 * pkin(8);
t12 = t76 * t702 - t683 / 0.2e1 + pkin(4) * t544;
t9 = -t698 / 0.2e1 + t435;
t8 = pkin(4) * t723 + t127 * t584 + t417 * t586 + t58 * t708 + t707 * t76;
t6 = t76 * t714 - t58 * t283 / 0.2e1 + t377 * t586 + t127 * t531 + pkin(4) * t722 + t732;
t3 = t106 * t702 + t426 * t442 + t429 * t447 + t705 * t94 - t466 + t468;
t2 = t432 + t443;
t44 = [0, 0, 0, t526, t365 * qJD(2), t431 * t513, -t428 * t513, 0, -t285 * qJD(2), -t286 * qJD(2), (t430 * t572 - t598) * t355, qJD(2) * t179 + qJD(3) * t181, -qJD(2) * t266 + t353 * t570, qJD(2) * t265 + t355 * t570, -t526, -qJD(2) * t63 - qJD(3) * t122, qJD(2) * t64 + qJD(3) * t121, (qJD(2) * t320 - t429 * t598 - t602) * t279, qJD(2) * t109 + qJD(3) * t113 + qJD(4) * t124, qJD(2) * t138 + qJD(3) * t131 - t353 * t602, qJD(2) * t137 - qJD(3) * t130 - t353 * t622, (t427 * t572 + t597) * t353, qJD(2) * t29 + qJD(3) * t27 + qJD(4) * t39, qJD(2) * t30 + qJD(3) * t28 + qJD(4) * t38, qJD(2) * t18 + qJD(3) * t17 + qJD(4) * t13 + qJD(5) * t160, qJD(2) * t16 + qJD(3) * t15 + qJD(4) * t14 + qJD(5) * t31; 0, 0, 0, t525, t596, t497 * t653, -t497 * t654, 0, -qJD(2) * t358 - t601, qJD(2) * t356 - t600, t425 * t483 * t637 + t727, t403 * t572 + t154 + t607, t427 * t563 - t603, t430 * t563 + t604, -t339, -t636 + (-t358 * t430 + t427 * t475) * qJD(2) + t120 * qJD(3), t635 + (t358 * t427 + t430 * t475) * qJD(2) + t118 * qJD(3), t128 * qJD(3) + t140 + (t571 + t630) * t320, t618 + t74 * qJD(3) - t107 + (-t319 * t429 - t663) * t594, t608 + (-t320 * t430 + t421 * t579) * qJD(2) + t104 * qJD(3) + t135 * qJD(4), t609 + (t319 * t430 - t421 * t580) * qJD(2) + t103 * qJD(3) + t136 * qJD(4), -t727 + (qJD(4) / 0.2e1 - t484) * t581, -t125 * t593 + t666 + t21 * qJD(3) + t35 * qJD(4) + (pkin(8) * t319 - t321 * t653 + t673) * t594, t126 * t593 + t665 + t22 * qJD(3) + t34 * qJD(4) + (pkin(8) * t320 - t322 * t653 + t672) * t594, t674 + (-t263 * t320 - t283 * t319 + (-t106 * t426 - t429 * t94) * t427) * qJD(2) + t3 * qJD(3) + t9 * qJD(4) - t142, t677 + (t106 * t283 + t146 * t377 + t263 * t94) * qJD(2) + t2 * qJD(3) + t6 * qJD(4) + t24 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t463, t486, t503 * t353, t503 * t355, t390, qJD(2) * t120 - qJD(3) * t190 - t615, qJD(2) * t118 + qJD(3) * t189 + t616, t128 * qJD(2) + t145 + (-t626 - t630) * t203, t74 * qJD(2) - t402 * t598 + t110 + t617, qJD(2) * t104 + t426 * t597 + t612, qJD(2) * t103 + t429 * t597 - t613, t444, t671 + t21 * qJD(2) + (-t190 * t429 + t426 * t511) * qJD(3) + t43 * qJD(4), t667 + t22 * qJD(2) + (t190 * t426 + t429 * t511) * qJD(3) + t41 * qJD(4), t676 + t3 * qJD(2) + (t105 * t429 - t86 * t426 + (t387 * t429 - t388 * t426) * t353) * qJD(3) + t12 * qJD(4) + t147, t678 + t2 * qJD(2) + (-t105 * t388 + t148 * t417 + t387 * t86) * qJD(3) + t8 * qJD(4) + t26 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t446, t453, t135 * qJD(2) + t277 * t529, t136 * qJD(2) + t279 * t529, t273, qJD(2) * t35 + qJD(3) * t43 - qJD(4) * t97 + t657, qJD(2) * t34 + qJD(3) * t41 + qJD(4) * t96 + t658, pkin(4) * t602 + qJD(2) * t9 + qJD(3) * t12 + t680, qJD(2) * t6 + qJD(3) * t8 - t685 * t77 + t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, qJD(2) * t24 + qJD(3) * t26 + t664; 0, 0, 0, -t525, -t596, -t431 * t514, t428 * t514, 0, t601, t600, -t355 * t524 + t727, t154 - t607, -t430 * t570 + t603, t427 * t570 - t604, t339, qJD(3) * t119 + t636, qJD(3) * t117 - t635, qJD(3) * t129 - t320 * t630 + t140, qJD(3) * t75 - t107 - t618, -qJD(3) * t101 - qJD(4) * t134 - t608, -qJD(3) * t102 - qJD(4) * t133 - t609, -t727 + (-t599 + t688) * t581, -qJD(3) * t19 - qJD(4) * t32 - t666, -qJD(3) * t20 - qJD(4) * t33 - t665, qJD(3) * t4 + qJD(4) * t10 - t142 - t674, -qJD(3) * t1 - qJD(4) * t5 - qJD(5) * t23 - t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t561, t403 * qJD(3), 0, 0, 0, -pkin(2) * t625, -pkin(2) * t623, -t421 * t562 + t422 * t561, -qJD(4) * t372 - 0.2e1 * t430 * t527, -qJD(3) * t374 + t427 * t567, qJD(3) * t373 + t427 * t566, -t561, -qJD(3) * t169 - qJD(4) * t270, qJD(3) * t170 + qJD(4) * t269, -qJD(3) * t79 - qJD(4) * t80 + qJD(5) * t371, qJD(3) * t78 + qJD(4) * t82 - qJD(5) * t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t532, t485, -t503 * t430, t503 * t427, qJD(1) * t553, -pkin(8) * t623 - t471, pkin(8) * t625 - t472, t614 - t352 + (t422 * t594 + t569) * t430, t634 + t381 + (-0.2e1 * t523 + t728) * t430, t426 * t625 + t489, t488 + t568, -t460, (t426 * t510 - t589) * qJD(3) + t241 * qJD(4) + t495, (t429 * t510 + t591) * qJD(3) + t240 * qJD(4) + t494, ((-t387 * t430 + t284) * t429 + (t388 * t430 - t272) * t426) * qJD(3) + t52 * qJD(4) + t501, (t272 * t387 - t284 * t388 + t378 * t417) * qJD(3) + t37 * qJD(4) + t99 * qJD(5) + t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t437, -t439, t426 * t491 - t610, t429 * t491 - t611, qJD(1) * t522 + t415, qJD(3) * t241 - qJD(4) * t322 - t492, qJD(3) * t240 + qJD(4) * t321 - t493, qJD(3) * t52 + t427 * t588 - t499, qJD(3) * t37 - t283 * t685 + t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487, qJD(3) * t99 + t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t463, -t486, t484 * t653, -t483 * t653, t390, -qJD(2) * t119 + t615, -qJD(2) * t117 - t616, -qJD(2) * t129 + t429 * t574 + t145, -qJD(2) * t75 + t110 - t617, qJD(2) * t101 + qJD(4) * t203 - t612, qJD(2) * t102 - qJD(4) * t199 + t613, -t444, qJD(2) * t19 + qJD(4) * t42 - t671, qJD(2) * t20 + qJD(4) * t40 - t667, -qJD(2) * t4 - qJD(4) * t11 + t147 - t676, qJD(2) * t1 - qJD(4) * t7 - qJD(5) * t25 - t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t532, -t485, t524, -t427 * t573, qJD(1) * t552, t471, t472, -t406 * t422 - t352 - t614, t430 * t508 + t381 - t634, -t489 - t566, -t488 + t567, t460, qJD(4) * t276 - t495, qJD(4) * t275 - t494, qJD(4) * t51 - t501, -qJD(4) * t36 + qJD(5) * t100 - t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t562, t402 * qJD(4), 0, 0, 0, -pkin(3) * t621, -pkin(3) * t620, t401 * qJD(5), qJD(4) * t180 + qJD(5) * t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t445, -t438, -t429 * t528 + t605, t426 * t528 - t606, -t476, -pkin(9) * t620 - t449, pkin(9) * t621 - t450, -t498 - t587, t388 * t685 + t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t482, t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t446, -t453, qJD(2) * t134 - qJD(3) * t203 + t277 * t599, qJD(2) * t133 + qJD(3) * t199 + t574, t273, qJD(2) * t32 - qJD(3) * t42 - t657, qJD(2) * t33 - qJD(3) * t40 - t658, -qJD(2) * t10 + qJD(3) * t11 - t680, qJD(2) * t5 + qJD(3) * t7 - t279 * t684 - t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t437, t439, t610 + (-t426 * t594 + t624) * t430, t430 * t462 + t611, qJD(1) * t521 + t415, -qJD(3) * t276 + t492, -qJD(3) * t275 + t493, -qJD(3) * t51 + t499, qJD(3) * t36 - qJD(5) * t592 - t500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t445, t438, t429 * t593 - t605, -t426 * t593 + t606, t476, t449, t450, t498, -t426 * t684 - t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t452, pkin(4) * t622 + qJD(2) * t23 + qJD(3) * t25 - t664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t487, -qJD(3) * t100 + t427 * t587 - t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t482, -t454 + t588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t44;
