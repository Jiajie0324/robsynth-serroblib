% Calculate inertial parameters regressor of coriolis joint torque vector for
% S5RRRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d4]';
% 
% Output:
% tauc_reg [5x(5*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:13
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S5RRRRP10_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP10_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP10_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRP10_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:12:22
% EndTime: 2019-12-31 22:12:39
% DurationCPUTime: 6.18s
% Computational Cost: add. (8406->520), mult. (22751->719), div. (0->0), fcn. (17148->8), ass. (0->241)
t206 = sin(qJ(2));
t301 = cos(pkin(5));
t262 = pkin(1) * t301;
t196 = t206 * t262;
t205 = sin(qJ(3));
t208 = cos(qJ(3));
t233 = pkin(3) * t205 - pkin(9) * t208;
t203 = sin(pkin(5));
t209 = cos(qJ(2));
t287 = t203 * t209;
t340 = (t196 + (pkin(7) + t233) * t287) * qJD(1) - t233 * qJD(3);
t204 = sin(qJ(4));
t207 = cos(qJ(4));
t274 = qJD(1) * t209;
t192 = t203 * t274;
t239 = t208 * t192;
t275 = qJD(1) * t206;
t260 = t203 * t275;
t127 = t204 * t239 - t207 * t260;
t270 = qJD(3) * t208;
t339 = -t204 * t270 + t127;
t268 = qJD(4) * t207;
t338 = t205 * t268 - t339;
t249 = t301 * qJD(1);
t224 = t249 + qJD(2);
t241 = t205 * t260;
t139 = -t208 * t224 + t241;
t134 = qJD(4) + t139;
t269 = qJD(4) * t204;
t278 = pkin(7) * t287 + t196;
t155 = t301 * pkin(8) + t278;
t123 = qJD(2) * pkin(8) + t155 * qJD(1);
t156 = (-pkin(2) * t209 - pkin(8) * t206 - pkin(1)) * t203;
t133 = qJD(1) * t156;
t221 = t203 * (pkin(2) * t206 - pkin(8) * t209);
t159 = qJD(2) * t221;
t150 = qJD(1) * t159;
t242 = t209 * t262;
t288 = t203 * t206;
t169 = -pkin(7) * t288 + t242;
t161 = t169 * qJD(2);
t151 = qJD(1) * t161;
t272 = qJD(3) * t205;
t218 = t123 * t272 - t133 * t270 - t205 * t150 - t208 * t151;
t264 = qJD(1) * qJD(2);
t253 = t203 * t264;
t237 = t206 * t253;
t40 = pkin(9) * t237 - t218;
t236 = t209 * t253;
t225 = t205 * t236;
t141 = t205 * t224 + t208 * t260;
t266 = t141 * qJD(3);
t111 = t225 + t266;
t227 = pkin(7) * t236;
t232 = qJD(2) * t249;
t324 = qJD(3) * t241 - t208 * (qJD(3) * t224 + t236);
t59 = pkin(1) * t206 * t232 + t111 * pkin(3) + pkin(9) * t324 + t227;
t157 = -pkin(7) * t260 + qJD(1) * t242;
t122 = -pkin(2) * t224 - t157;
t76 = t139 * pkin(3) - t141 * pkin(9) + t122;
t230 = t192 - qJD(3);
t85 = t208 * t123 + t205 * t133;
t79 = -pkin(9) * t230 + t85;
t251 = -t204 * t59 - t207 * t40 - t76 * t268 + t79 * t269;
t33 = -t204 * t79 + t207 * t76;
t337 = -t134 * t33 - t251;
t336 = qJD(4) * t230 + t324;
t335 = -t205 * t324 + t208 * t266;
t200 = t203 ^ 2;
t254 = t200 * t264;
t334 = -0.2e1 * t254;
t34 = t204 * t76 + t207 * t79;
t9 = -qJD(4) * t34 - t204 * t40 + t207 * t59;
t333 = -t134 * t34 - t9;
t263 = pkin(8) * t272;
t158 = qJD(1) * t221;
t103 = t208 * t157 + t205 * t158;
t92 = pkin(9) * t260 + t103;
t332 = t340 * t207 + (-t263 - t92) * t204;
t186 = -pkin(3) * t208 - pkin(9) * t205 - pkin(2);
t331 = -t186 * t268 + t340 * t204 + t207 * t92;
t107 = t141 * t204 + t207 * t230;
t300 = t107 * t134;
t60 = t141 * t269 - t204 * t237 + t336 * t207;
t330 = -t60 - t300;
t109 = t207 * t141 - t204 * t230;
t297 = t109 * t134;
t61 = t141 * t268 - t336 * t204 - t207 * t237;
t329 = t61 + t297;
t328 = t206 * t209;
t327 = t103 + t263;
t165 = t205 * t288 - t208 * t301;
t258 = qJD(2) * t287;
t116 = -qJD(3) * t165 + t208 * t258;
t326 = -qJD(4) * t287 + t116;
t282 = t207 * t208;
t197 = pkin(8) * t282;
t149 = t204 * t186 + t197;
t325 = t239 - t270;
t323 = t109 ^ 2;
t210 = qJD(1) ^ 2;
t322 = pkin(4) * t111;
t321 = pkin(8) * t208;
t320 = t107 * pkin(4);
t319 = -qJ(5) - pkin(9);
t24 = -qJ(5) * t109 + t33;
t20 = pkin(4) * t134 + t24;
t318 = t20 - t24;
t276 = qJD(1) * t203;
t281 = t207 * t209;
t128 = (t204 * t206 + t208 * t281) * t276;
t240 = t205 * t192;
t265 = t207 * qJD(5);
t317 = pkin(4) * t240 - qJ(5) * t128 + t205 * t265 - (pkin(4) * t205 - qJ(5) * t282) * qJD(3) - (-t197 + (qJ(5) * t205 - t186) * t204) * qJD(4) + t332;
t284 = t205 * t207;
t316 = -qJ(5) * t127 - (-pkin(8) * qJD(3) - qJ(5) * qJD(4)) * t284 - (-qJD(5) * t205 + (-pkin(8) * qJD(4) - qJ(5) * qJD(3)) * t208) * t204 + t331;
t315 = t149 * qJD(4) + t332;
t271 = qJD(3) * t207;
t314 = -(-t205 * t271 - t208 * t269) * pkin(8) + t331;
t84 = -t205 * t123 + t208 * t133;
t97 = pkin(3) * t141 + pkin(9) * t139;
t46 = t204 * t97 + t207 * t84;
t154 = -pkin(2) * t301 - t169;
t166 = t205 * t301 + t208 * t288;
t88 = t165 * pkin(3) - t166 * pkin(9) + t154;
t99 = t208 * t155 + t205 * t156;
t90 = -pkin(9) * t287 + t99;
t44 = t204 * t88 + t207 * t90;
t25 = -qJ(5) * t107 + t34;
t313 = t134 * t25;
t49 = -t123 * t270 - t133 * t272 + t208 * t150 - t205 * t151;
t41 = -pkin(3) * t237 - t49;
t21 = pkin(4) * t61 + t41;
t310 = t204 * t21;
t309 = t204 * t41;
t308 = t207 * t21;
t307 = t207 * t41;
t306 = t60 * t204;
t305 = t61 * t207;
t102 = -t205 * t157 + t158 * t208;
t91 = -pkin(3) * t260 - t102;
t304 = t338 * pkin(4) + pkin(8) * t270 - t91;
t252 = qJD(4) * t319;
t292 = t139 * t204;
t303 = -qJ(5) * t292 + t204 * t252 + t265 - t46;
t291 = t139 * t207;
t45 = -t204 * t84 + t207 * t97;
t302 = -pkin(4) * t141 - qJ(5) * t291 - t204 * qJD(5) + t207 * t252 - t45;
t299 = t107 * t204;
t298 = t109 * t107;
t296 = t109 * t204;
t295 = t111 * t165;
t294 = t111 * t208;
t293 = t134 * t141;
t290 = t141 * t139;
t238 = t141 * t192;
t289 = t200 * t210;
t286 = t204 * t111;
t285 = t204 * t205;
t283 = t207 * t111;
t277 = t206 ^ 2 - t209 ^ 2;
t273 = qJD(2) * t206;
t267 = t122 * qJD(3);
t259 = t203 * t273;
t43 = -t204 * t90 + t207 * t88;
t250 = qJD(5) + t320;
t98 = -t205 * t155 + t156 * t208;
t248 = t134 * t207;
t247 = t209 * t230;
t246 = t230 * t203;
t245 = qJD(3) * t230;
t243 = t289 * t328;
t235 = t203 * t210 * t301;
t234 = pkin(1) * t334;
t89 = pkin(3) * t287 - t98;
t231 = t207 * t270 - t128;
t229 = -t204 * t34 - t207 * t33;
t228 = -t49 * t205 - t208 * t218;
t226 = t254 * t328;
t223 = 0.2e1 * t249 + qJD(2);
t63 = -t155 * t270 - t156 * t272 + t159 * t208 - t205 * t161;
t222 = qJ(5) * t61 + t251;
t62 = -t155 * t272 + t156 * t270 + t205 * t159 + t208 * t161;
t53 = pkin(9) * t259 + t62;
t115 = qJD(3) * t166 + t205 * t258;
t162 = t278 * qJD(2);
t68 = t115 * pkin(3) - t116 * pkin(9) + t162;
t14 = t204 * t68 + t207 * t53 + t88 * t268 - t269 * t90;
t220 = t230 * t205;
t78 = pkin(3) * t230 - t84;
t219 = -pkin(9) * t111 + t134 * t78;
t215 = pkin(1) * (-t232 + t289);
t54 = -pkin(3) * t259 - t63;
t15 = -qJD(4) * t44 - t204 * t53 + t207 * t68;
t213 = qJ(5) * t60 + t9;
t199 = -pkin(4) * t207 - pkin(3);
t188 = t319 * t207;
t187 = t319 * t204;
t177 = (pkin(4) * t204 + pkin(8)) * t205;
t174 = t207 * t186;
t160 = t278 * qJD(1);
t152 = qJD(1) * t162;
t148 = -t204 * t321 + t174;
t121 = -qJ(5) * t285 + t149;
t118 = t166 * t207 - t204 * t287;
t117 = t166 * t204 + t203 * t281;
t112 = -qJ(5) * t284 + t174 + (-pkin(8) * t204 - pkin(4)) * t208;
t106 = t107 ^ 2;
t74 = -t166 * t269 + t204 * t259 + t326 * t207;
t73 = t166 * t268 + t326 * t204 - t207 * t259;
t65 = -pkin(4) * t292 + t85;
t64 = pkin(4) * t117 + t89;
t52 = -t134 * t220 - t294;
t50 = t115 * t134 + t295;
t47 = t250 + t78;
t42 = -t106 + t323;
t35 = -qJ(5) * t117 + t44;
t32 = -t61 + t297;
t31 = -t60 + t300;
t29 = pkin(4) * t165 - qJ(5) * t118 + t43;
t28 = pkin(4) * t73 + t54;
t27 = -t109 * t141 + t134 * t248 + t286;
t26 = -t134 ^ 2 * t204 + t107 * t141 + t283;
t23 = t134 * t299 - t305;
t22 = t109 * t248 - t306;
t19 = t107 * t73 + t117 * t61;
t18 = t109 * t74 - t118 * t60;
t17 = t338 * t107 + t61 * t285;
t16 = -t60 * t284 + (-t205 * t269 + t231) * t109;
t13 = t208 * t61 + t339 * t134 + (t107 * t230 - t134 * t268 - t286) * t205;
t12 = t208 * t60 + t231 * t134 + (-t109 * t230 - t134 * t269 + t283) * t205;
t11 = t109 * t115 + t111 * t118 + t134 * t74 - t165 * t60;
t10 = -t107 * t115 - t111 * t117 - t134 * t73 - t165 * t61;
t7 = -t329 * t204 + t330 * t207;
t6 = -qJ(5) * t73 - qJD(5) * t117 + t14;
t5 = pkin(4) * t115 - qJ(5) * t74 - qJD(5) * t118 + t15;
t4 = -t107 * t74 - t109 * t73 + t117 * t60 - t118 * t61;
t3 = -qJD(5) * t107 - t222;
t2 = t107 * t128 + t109 * t127 + (-t107 * t207 - t296) * t270 + (t306 - t305 + (-t109 * t207 + t299) * qJD(4)) * t205;
t1 = -qJD(5) * t109 + t213 + t322;
t8 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t226, t277 * t334, t223 * t258, -0.2e1 * t226, -t223 * t259, 0, -t152 * t301 - t162 * t224 + t206 * t234, -t151 * t301 - t161 * t224 + t209 * t234, (t151 * t209 + t152 * t206 + (-t157 * t209 - t160 * t206) * qJD(2) + (t161 * t209 + t162 * t206 + (-t169 * t209 - t206 * t278) * qJD(2)) * qJD(1)) * t203, t151 * t278 - t152 * t169 - t157 * t162 + t160 * t161, t141 * t116 - t166 * t324, -t166 * t111 - t141 * t115 - t116 * t139 + t165 * t324, -t116 * t230 + t141 * t259 + t166 * t237 + t287 * t324, t115 * t139 + t295, t115 * t230 + (t111 * t209 + (-qJD(1) * t165 - t139) * t273) * t203, (-t200 * t274 - t246) * t273, -t63 * t230 + t162 * t139 + t154 * t111 + t152 * t165 + t122 * t115 + (-t49 * t209 + (qJD(1) * t98 + t84) * t273) * t203, t122 * t116 + t162 * t141 + t152 * t166 - t154 * t324 - t218 * t287 + t230 * t62 - t237 * t99 - t259 * t85, -t99 * t111 - t85 * t115 - t84 * t116 - t62 * t139 - t63 * t141 + t165 * t218 - t49 * t166 + t324 * t98, t122 * t162 + t152 * t154 - t218 * t99 + t49 * t98 + t62 * t85 + t63 * t84, t18, t4, t11, t19, t10, t50, t107 * t54 + t111 * t43 + t115 * t33 + t117 * t41 + t134 * t15 + t165 * t9 + t61 * t89 + t73 * t78, t109 * t54 - t111 * t44 - t115 * t34 + t118 * t41 - t134 * t14 + t165 * t251 - t60 * t89 + t74 * t78, -t107 * t14 - t109 * t15 + t117 * t251 - t118 * t9 - t33 * t74 - t34 * t73 + t43 * t60 - t44 * t61, t14 * t34 + t15 * t33 - t251 * t44 + t41 * t89 + t43 * t9 + t54 * t78, t18, t4, t11, t19, t10, t50, t1 * t165 + t107 * t28 + t111 * t29 + t115 * t20 + t117 * t21 + t134 * t5 + t47 * t73 + t61 * t64, t109 * t28 - t111 * t35 - t115 * t25 + t118 * t21 - t134 * t6 - t165 * t3 + t47 * t74 - t60 * t64, -t1 * t118 - t107 * t6 - t109 * t5 - t117 * t3 - t20 * t74 - t25 * t73 + t29 * t60 - t35 * t61, t1 * t29 + t20 * t5 + t21 * t64 + t25 * t6 + t28 * t47 + t3 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, t277 * t289, -t209 * t235, t243, t206 * t235, 0, t160 * t224 + t206 * t215 - t227, pkin(7) * t237 + t157 * t224 + t209 * t215, 0, 0, -t208 * t238 + t335, -t208 * t324 + t325 * t139 + (-t111 + t238 - t266) * t205, -t208 * t245 + (t208 * t247 + (t205 * qJD(2) - t141) * t206) * t276, -t139 * t220 - t294, t205 * t245 + (-t205 * t247 + (qJD(2) * t208 + t139) * t206) * t276, t246 * t275, -pkin(2) * t111 + t205 * t267 + t102 * t230 - t160 * t139 + (pkin(8) * t245 - t152) * t208 + (-t206 * t84 + (-pkin(8) * t273 - t122 * t209) * t205) * t276, pkin(2) * t324 - t122 * t239 - t160 * t141 + t152 * t205 + t208 * t267 - t327 * t230 - t237 * t321 + t260 * t85, t102 * t141 + t228 + (t240 - t272) * t85 + t325 * t84 + t327 * t139 + (-t294 + t335) * pkin(8), -pkin(2) * t152 - t102 * t84 - t103 * t85 - t122 * t160 + ((-t85 * t205 - t84 * t208) * qJD(3) + t228) * pkin(8), t16, t2, t12, t17, t13, t52, -t107 * t91 + t111 * t148 - t127 * t78 - t315 * t134 + (-t9 + (pkin(8) * t107 + t204 * t78) * qJD(3)) * t208 + (pkin(8) * t61 - t230 * t33 + t268 * t78 + t309) * t205, -t109 * t91 - t111 * t149 - t128 * t78 + t314 * t134 + (-t251 + (pkin(8) * t109 + t207 * t78) * qJD(3)) * t208 + (-pkin(8) * t60 + t230 * t34 - t269 * t78 + t307) * t205, t127 * t34 + t128 * t33 + t148 * t60 - t149 * t61 + t315 * t109 + t314 * t107 + t229 * t270 + (t204 * t251 - t207 * t9 + (t204 * t33 - t207 * t34) * qJD(4)) * t205, t148 * t9 - t149 * t251 - t78 * t91 - t314 * t34 - t315 * t33 + (t205 * t41 + t270 * t78) * pkin(8), t16, t2, t12, t17, t13, t52, t111 * t112 - t127 * t47 + t177 * t61 + (qJD(3) * t204 * t47 - t1) * t208 - t317 * t134 + t304 * t107 + (-t20 * t230 + t268 * t47 + t310) * t205, -t111 * t121 - t128 * t47 - t177 * t60 + (t271 * t47 + t3) * t208 + t316 * t134 + t304 * t109 + (t230 * t25 - t269 * t47 + t308) * t205, t112 * t60 - t121 * t61 + t127 * t25 + t128 * t20 + t317 * t109 + t316 * t107 + (-t20 * t207 - t204 * t25) * t270 + (-t1 * t207 - t204 * t3 + (t20 * t204 - t207 * t25) * qJD(4)) * t205, t1 * t112 + t121 * t3 + t177 * t21 - t317 * t20 - t316 * t25 + t304 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t290, -t139 ^ 2 + t141 ^ 2, -t139 * t230 - t324, -t290, -t225 - t238, t237, -t122 * t141 - t230 * t85 + t49, t122 * t139 - t230 * t84 + t218, 0, 0, t22, t7, t27, t23, t26, -t293, -pkin(3) * t61 - t107 * t85 - t141 * t33 - t307 + (-pkin(9) * t268 - t45) * t134 + t219 * t204, pkin(3) * t60 - t109 * t85 + t141 * t34 + t309 + (pkin(9) * t269 + t46) * t134 + t219 * t207, t107 * t46 + t109 * t45 + ((qJD(4) * t109 - t61) * pkin(9) + t337) * t207 + ((qJD(4) * t107 - t60) * pkin(9) + t333) * t204, -pkin(3) * t41 - t33 * t45 - t34 * t46 - t78 * t85 + (qJD(4) * t229 - t204 * t9 - t207 * t251) * pkin(9), t22, t7, t27, t23, t26, -t293, -t107 * t65 + t111 * t187 - t141 * t20 + t199 * t61 - t308 + t302 * t134 + (t139 * t47 + (t47 + t320) * qJD(4)) * t204, t47 * t291 - t109 * t65 + t111 * t188 + t141 * t25 - t199 * t60 + t310 - t303 * t134 + (pkin(4) * t296 + t207 * t47) * qJD(4), t187 * t60 + t188 * t61 - t302 * t109 - t303 * t107 + (-t134 * t20 + t3) * t207 + (-t1 - t313) * t204, t1 * t187 - t188 * t3 + t199 * t21 + (pkin(4) * t269 - t65) * t47 + t303 * t25 + t302 * t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t42, t31, -t298, t32, t111, -t109 * t78 - t333, t107 * t78 - t337, 0, 0, t298, t42, t31, -t298, t32, t111, 0.2e1 * t322 + t313 + (-t250 - t47) * t109 + t213, -pkin(4) * t323 + t134 * t24 + (qJD(5) + t47) * t107 + t222, t60 * pkin(4) - t318 * t107, t318 * t25 + (-t109 * t47 + t1) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t329, t330, -t106 - t323, t107 * t25 + t109 * t20 + t21;];
tauc_reg = t8;
