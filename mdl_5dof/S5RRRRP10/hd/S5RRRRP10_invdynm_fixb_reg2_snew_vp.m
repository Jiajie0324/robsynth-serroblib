% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRP10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:13
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRP10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP10_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP10_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP10_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRP10_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:13:01
% EndTime: 2019-12-31 22:13:24
% DurationCPUTime: 23.53s
% Computational Cost: add. (155186->746), mult. (335943->1047), div. (0->0), fcn. (263202->10), ass. (0->545)
t1360 = sin(qJ(3));
t1364 = cos(qJ(3));
t1358 = cos(pkin(5));
t1505 = t1358 * qJD(1);
t1456 = qJD(2) + t1505;
t1357 = sin(pkin(5));
t1361 = sin(qJ(2));
t1507 = t1357 * t1361;
t1468 = qJD(1) * t1507;
t1322 = t1360 * t1456 + t1364 * t1468;
t1359 = sin(qJ(4));
t1363 = cos(qJ(4));
t1365 = cos(qJ(2));
t1506 = t1357 * t1365;
t1350 = qJD(1) * t1506;
t1473 = t1350 - qJD(3);
t1296 = t1359 * t1322 + t1363 * t1473;
t1298 = t1363 * t1322 - t1359 * t1473;
t1257 = t1298 * t1296;
t1514 = qJD(2) * qJD(1);
t1460 = t1365 * t1514;
t1470 = t1361 * qJDD(1);
t1327 = (t1460 + t1470) * t1357;
t1450 = t1358 * qJDD(1) + qJDD(2);
t1452 = t1360 * t1327 - t1364 * t1450;
t1395 = t1322 * qJD(3) + t1452;
t1273 = qJDD(4) + t1395;
t1548 = t1257 - t1273;
t1549 = t1548 * pkin(4);
t1431 = qJD(1) * t1456;
t1398 = t1357 * t1431;
t1501 = t1359 * t1548;
t1491 = t1363 * t1548;
t1320 = t1360 * t1468 - t1364 * t1456;
t1308 = t1473 * t1320;
t1442 = t1364 * t1308;
t1309 = t1473 * t1322;
t1443 = t1360 * t1309;
t1261 = t1442 - t1443;
t1471 = qJDD(1) * t1365;
t1391 = t1361 * t1514 - t1471;
t1382 = t1391 * t1357;
t1374 = qJDD(3) + t1382;
t1547 = t1361 * t1261 - t1365 * t1374;
t1449 = t1456 ^ 2;
t1469 = t1473 ^ 2;
t1509 = t1322 * t1320;
t1371 = t1374 - t1509;
t1546 = t1360 * t1371;
t1545 = t1364 * t1371;
t1379 = -t1364 * t1327 - t1360 * t1450;
t1274 = -t1320 * qJD(3) - t1379;
t1214 = -t1296 * qJD(4) + t1363 * t1274 + t1359 * t1374;
t1316 = qJD(4) + t1320;
t1270 = t1316 * t1296;
t1542 = -t1270 + t1214;
t1245 = t1308 + t1274;
t1454 = t1359 * t1274 - t1363 * t1374;
t1188 = (qJD(4) - t1316) * t1298 + t1454;
t1541 = qJD(1) ^ 2;
t1294 = t1296 ^ 2;
t1295 = t1298 ^ 2;
t1314 = t1316 ^ 2;
t1318 = t1320 ^ 2;
t1319 = t1322 ^ 2;
t1354 = t1357 ^ 2;
t1191 = t1270 + t1214;
t1116 = -t1188 * t1363 + t1359 * t1191;
t1216 = -t1294 - t1295;
t1089 = t1360 * t1116 - t1364 * t1216;
t1090 = t1364 * t1116 + t1360 * t1216;
t1114 = -t1188 * t1359 - t1363 * t1191;
t1425 = t1090 * t1361 - t1114 * t1365;
t1018 = -t1357 * t1089 + t1358 * t1425;
t1054 = t1365 * t1090 + t1361 * t1114;
t1362 = sin(qJ(1));
t1366 = cos(qJ(1));
t1540 = pkin(6) * (t1366 * t1018 + t1362 * t1054);
t1539 = pkin(2) * t1089;
t1224 = -t1314 - t1294;
t1154 = t1363 * t1224 + t1501;
t1187 = (qJD(4) + t1316) * t1298 + t1454;
t1098 = t1360 * t1154 - t1364 * t1187;
t1538 = pkin(2) * t1098;
t1248 = -t1295 - t1314;
t1204 = t1257 + t1273;
t1492 = t1363 * t1204;
t1161 = -t1359 * t1248 - t1492;
t1103 = t1360 * t1161 - t1364 * t1542;
t1537 = pkin(2) * t1103;
t1536 = pkin(3) * t1114;
t1153 = t1359 * t1224 - t1491;
t1535 = pkin(3) * t1153;
t1502 = t1359 * t1204;
t1160 = t1363 * t1248 - t1502;
t1534 = pkin(3) * t1160;
t1533 = pkin(3) * t1360;
t1532 = pkin(3) * t1364;
t1347 = t1366 * g(1) + t1362 * g(2);
t1527 = pkin(7) * t1357;
t1324 = -t1541 * pkin(1) + qJDD(1) * t1527 - t1347;
t1346 = t1362 * g(1) - t1366 * g(2);
t1377 = qJDD(1) * pkin(1) + t1541 * t1527 + t1346;
t1373 = t1358 * t1377;
t1281 = -g(3) * t1507 + t1365 * t1324 + t1361 * t1373;
t1517 = t1365 * pkin(2);
t1448 = -pkin(8) * t1361 - t1517;
t1399 = t1541 * t1448;
t1485 = t1365 * t1354;
t1233 = -pkin(2) * t1449 + pkin(8) * t1450 + t1399 * t1485 + t1281;
t1516 = t1365 * pkin(8);
t1518 = t1361 * pkin(2);
t1447 = -t1516 + t1518;
t1519 = t1358 * g(3);
t1369 = -t1327 * pkin(8) - t1519 + ((-pkin(1) - t1517) * qJDD(1) + ((t1358 * t1447 - t1527) * qJD(1) + (-t1516 + 0.2e1 * t1518) * qJD(2)) * qJD(1) - t1346) * t1357;
t1176 = t1364 * t1233 + t1360 * t1369;
t1283 = t1320 * pkin(3) - t1322 * pkin(9);
t1135 = -pkin(3) * t1469 + pkin(9) * t1374 - t1320 * t1283 + t1176;
t1453 = t1361 * t1324 - t1365 * t1373;
t1232 = -t1450 * pkin(2) - t1449 * pkin(8) + (t1365 * g(3) + t1399 * t1507) * t1357 + t1453;
t1484 = 0.2e1 * qJD(3) - t1350;
t1368 = -t1245 * pkin(9) + (t1484 * t1322 + t1452) * pkin(3) + t1232;
t1078 = t1359 * t1135 - t1363 * t1368;
t1376 = qJ(5) * t1270 + 0.2e1 * qJD(5) * t1298 + t1078 + t1549;
t1049 = t1214 * qJ(5) + t1376;
t1531 = pkin(4) * t1049;
t1530 = pkin(4) * t1191;
t1099 = t1364 * t1154 + t1360 * t1187;
t1423 = t1099 * t1361 - t1153 * t1365;
t1041 = -t1357 * t1098 + t1358 * t1423;
t1068 = t1365 * t1099 + t1361 * t1153;
t1529 = pkin(6) * (t1366 * t1041 + t1362 * t1068);
t1104 = t1364 * t1161 + t1360 * t1542;
t1422 = t1104 * t1361 - t1160 * t1365;
t1044 = -t1357 * t1103 + t1358 * t1422;
t1073 = t1365 * t1104 + t1361 * t1160;
t1528 = pkin(6) * (t1366 * t1044 + t1362 * t1073);
t1526 = pkin(7) * t1358;
t1525 = pkin(8) * t1089;
t1524 = pkin(8) * t1098;
t1523 = pkin(8) * t1103;
t1522 = pkin(9) * t1114;
t1521 = pkin(9) * t1153;
t1520 = pkin(9) * t1160;
t1515 = qJD(1) * t1365;
t1513 = qJD(5) * t1296;
t1512 = t1316 * t1298;
t1511 = t1316 * t1359;
t1510 = t1316 * t1363;
t1508 = t1354 * t1541;
t1504 = t1359 * t1049;
t1175 = t1360 * t1233 - t1364 * t1369;
t1134 = -t1374 * pkin(3) - t1469 * pkin(9) + t1322 * t1283 + t1175;
t1503 = t1359 * t1134;
t1500 = t1360 * t1232;
t1267 = -t1374 - t1509;
t1499 = t1360 * t1267;
t1311 = t1357 * t1377 + t1519;
t1497 = t1361 * t1311;
t1462 = t1361 * t1365 * t1541;
t1345 = t1354 * t1462;
t1325 = t1345 + t1450;
t1496 = t1361 * t1325;
t1326 = -t1345 + t1450;
t1495 = t1361 * t1326;
t1494 = t1363 * t1049;
t1493 = t1363 * t1134;
t1490 = t1364 * t1232;
t1489 = t1364 * t1267;
t1488 = t1365 * t1311;
t1487 = t1365 * t1325;
t1486 = t1365 * t1326;
t1482 = pkin(1) * t1018 + t1054 * t1527;
t1481 = pkin(1) * t1041 + t1068 * t1527;
t1480 = pkin(1) * t1044 + t1073 * t1527;
t1479 = -pkin(2) * t1114 + pkin(8) * t1090;
t1478 = -pkin(2) * t1153 + pkin(8) * t1099;
t1477 = -pkin(2) * t1160 + pkin(8) * t1104;
t1476 = -pkin(3) * t1216 + pkin(9) * t1116;
t1079 = t1363 * t1135 + t1359 * t1368;
t1475 = pkin(3) * t1187 - pkin(9) * t1154;
t1474 = pkin(3) * t1542 - pkin(9) * t1161;
t1355 = t1361 ^ 2;
t1356 = t1365 ^ 2;
t1472 = t1355 + t1356;
t1467 = t1365 * t1509;
t1466 = t1355 * t1508;
t1465 = t1356 * t1508;
t1464 = t1360 * t1257;
t1463 = t1361 * t1509;
t1461 = t1364 * t1257;
t1017 = t1358 * t1089 + t1357 * t1425;
t1459 = -pkin(1) * t1017 + t1054 * t1526;
t1040 = t1358 * t1098 + t1357 * t1423;
t1458 = -pkin(1) * t1040 + t1068 * t1526;
t1043 = t1358 * t1103 + t1357 * t1422;
t1457 = -pkin(1) * t1043 + t1073 * t1526;
t1455 = 0.2e1 * qJD(2) + t1505;
t1035 = t1359 * t1078 + t1363 * t1079;
t1106 = t1360 * t1175 + t1364 * t1176;
t1451 = -t1362 * t1346 - t1366 * t1347;
t1446 = -pkin(3) * t1134 + pkin(9) * t1035;
t1344 = t1366 * qJDD(1) - t1362 * t1541;
t1445 = -pkin(6) * t1344 - t1362 * g(3);
t1444 = t1360 * t1308;
t1441 = t1364 * t1309;
t1440 = -t1475 - t1493;
t1439 = -t1474 + t1503;
t1315 = -t1466 - t1449;
t1282 = -t1361 * t1315 - t1486;
t1438 = pkin(7) * t1282 - t1497;
t1331 = -t1449 - t1465;
t1288 = t1365 * t1331 - t1496;
t1437 = pkin(7) * t1288 + t1488;
t1081 = t1530 - t1536;
t1289 = -0.2e1 * t1513;
t1213 = -t1298 * qJD(4) - t1454;
t1263 = t1316 * pkin(4) - t1298 * qJ(5);
t1429 = t1294 * pkin(4) - t1213 * qJ(5) + t1316 * t1263 - t1079;
t1055 = t1289 - t1429;
t1033 = -pkin(4) * t1216 - qJ(5) * t1188 + t1055;
t1038 = (t1191 + t1214) * qJ(5) + t1376;
t980 = -t1359 * t1033 + t1363 * t1038 - t1522;
t969 = -t1360 * t1081 + t1364 * t980 - t1525;
t1388 = t1363 * t1033 + t1359 * t1038 + t1476;
t970 = -t1388 - t1539;
t1436 = t1361 * t969 + t1365 * t970;
t1370 = -t1049 - t1549;
t1021 = -t1370 - t1535;
t1080 = -t1213 * pkin(4) - t1294 * qJ(5) + t1298 * t1263 + qJDD(5) + t1134;
t1058 = -pkin(4) * t1187 + qJ(5) * t1224 - t1080;
t1025 = qJ(5) * t1491 - t1359 * t1058 - t1521;
t973 = -t1360 * t1021 + t1364 * t1025 - t1524;
t1380 = qJ(5) * t1501 + t1363 * t1058 - t1475;
t995 = -t1380 - t1538;
t1435 = t1361 * t973 + t1365 * t995;
t1072 = -qJ(5) * t1248 + t1080;
t1123 = -pkin(4) * t1542 - qJ(5) * t1204;
t1030 = t1363 * t1072 - t1359 * t1123 - t1520;
t1383 = pkin(4) * t1248 + t1429;
t1032 = t1289 - t1383 - t1534;
t975 = t1364 * t1030 - t1360 * t1032 - t1523;
t1387 = t1359 * t1072 + t1363 * t1123 - t1474;
t998 = -t1387 - t1537;
t1434 = t1361 * t975 + t1365 * t998;
t1034 = -t1363 * t1078 + t1359 * t1079;
t1010 = -t1034 - t1522;
t983 = t1364 * t1010 + t1114 * t1533 - t1525;
t1400 = t1035 + t1476;
t988 = -t1400 - t1539;
t1433 = t1361 * t983 + t1365 * t988;
t997 = t1363 * t1055 + t1504;
t985 = t1360 * t1080 + t1364 * t997;
t996 = t1359 * t1055 - t1494;
t1432 = t1361 * t985 - t1365 * t996;
t1430 = t1354 * t1361 * t1460;
t1060 = t1078 - t1535;
t1082 = t1503 - t1521;
t1001 = -t1360 * t1060 + t1364 * t1082 - t1524;
t1036 = -t1440 - t1538;
t1428 = t1001 * t1361 + t1036 * t1365;
t1061 = t1079 - t1534;
t1085 = t1493 - t1520;
t1002 = -t1360 * t1061 + t1364 * t1085 - t1523;
t1037 = -t1439 - t1537;
t1427 = t1002 * t1361 + t1037 * t1365;
t1012 = t1364 * t1035 + t1360 * t1134;
t1426 = t1012 * t1361 - t1034 * t1365;
t1115 = -t1363 * t1187 - t1359 * t1542;
t1255 = t1295 - t1294;
t1094 = t1364 * t1115 + t1360 * t1255;
t1113 = -t1359 * t1187 + t1363 * t1542;
t1424 = t1094 * t1361 - t1113 * t1365;
t1421 = t1106 * t1361 - t1232 * t1365;
t1265 = -t1295 + t1314;
t1172 = -t1359 * t1265 - t1491;
t1109 = t1364 * t1172 + t1360 * t1191;
t1170 = t1363 * t1265 - t1501;
t1420 = t1109 * t1361 - t1170 * t1365;
t1264 = t1294 - t1314;
t1173 = t1363 * t1264 - t1502;
t1110 = t1364 * t1173 - t1360 * t1188;
t1171 = t1359 * t1264 + t1492;
t1419 = t1110 * t1361 - t1171 * t1365;
t1182 = -t1359 * t1213 + t1296 * t1510;
t1142 = t1364 * t1182 - t1464;
t1181 = -t1363 * t1213 - t1296 * t1511;
t1418 = t1142 * t1361 + t1181 * t1365;
t1184 = t1363 * t1214 - t1298 * t1511;
t1143 = t1364 * t1184 + t1464;
t1183 = t1359 * t1214 + t1298 * t1510;
t1417 = t1143 * t1361 - t1183 * t1365;
t1105 = -t1364 * t1175 + t1360 * t1176;
t1207 = (-t1296 * t1363 + t1298 * t1359) * t1316;
t1180 = t1364 * t1207 + t1360 * t1273;
t1206 = (-t1296 * t1359 - t1298 * t1363) * t1316;
t1416 = t1180 * t1361 - t1206 * t1365;
t1243 = t1309 - t1395;
t1195 = t1364 * t1243 - t1360 * t1245;
t1284 = t1319 - t1318;
t1415 = t1195 * t1361 - t1284 * t1365;
t1244 = -t1350 * t1322 - t1452;
t1246 = -t1308 + t1274;
t1196 = t1364 * t1244 + t1360 * t1246;
t1262 = t1318 + t1319;
t1414 = t1196 * t1361 + t1262 * t1365;
t1279 = -t1469 - t1318;
t1211 = t1364 * t1279 - t1546;
t1413 = t1211 * t1361 + t1243 * t1365;
t1285 = -t1319 - t1469;
t1219 = -t1360 * t1285 + t1489;
t1247 = t1484 * t1320 + t1379;
t1412 = t1219 * t1361 + t1247 * t1365;
t1302 = -t1319 + t1469;
t1222 = -t1360 * t1302 + t1545;
t1411 = t1222 * t1361 - t1246 * t1365;
t1301 = t1318 - t1469;
t1223 = t1364 * t1301 + t1499;
t1242 = t1309 + t1395;
t1410 = t1223 * t1361 + t1242 * t1365;
t1280 = g(3) * t1506 + t1453;
t1409 = -t1365 * t1280 + t1361 * t1281;
t1217 = t1361 * t1280 + t1365 * t1281;
t1335 = t1365 * t1398;
t1304 = t1335 + t1327;
t1334 = t1361 * t1398;
t1307 = -t1334 - t1382;
t1408 = t1304 * t1365 + t1307 * t1361;
t1305 = -t1335 + t1327;
t1306 = t1334 - t1382;
t1407 = -t1305 * t1365 + t1306 * t1361;
t1406 = t1315 * t1365 - t1495;
t1329 = t1449 - t1466;
t1405 = t1329 * t1365 + t1496;
t1404 = t1331 * t1361 + t1487;
t1330 = -t1449 + t1465;
t1403 = t1330 * t1361 + t1486;
t1402 = t1366 * t1346 - t1362 * t1347;
t1401 = t1357 * t1450;
t1236 = t1360 * t1395 - t1442;
t1397 = t1236 * t1361 + t1467;
t1238 = t1364 * t1274 + t1443;
t1396 = t1238 * t1361 - t1467;
t1394 = (-t1017 * t1357 - t1018 * t1358) * pkin(7);
t1393 = (-t1040 * t1357 - t1041 * t1358) * pkin(7);
t1392 = (-t1043 * t1357 - t1044 * t1358) * pkin(7);
t1015 = -pkin(4) * t1080 + qJ(5) * t1055;
t964 = -pkin(9) * t996 + qJ(5) * t1494 - t1359 * t1015;
t979 = -pkin(3) * t996 + t1531;
t984 = -t1364 * t1080 + t1360 * t997;
t949 = -pkin(8) * t984 - t1360 * t979 + t1364 * t964;
t1372 = -pkin(3) * t1080 + pkin(9) * t997 + qJ(5) * t1504 + t1363 * t1015;
t951 = -pkin(2) * t984 - t1372;
t963 = t1361 * t996 + t1365 * t985;
t1390 = pkin(7) * t963 + t1361 * t949 + t1365 * t951;
t1011 = t1360 * t1035 - t1364 * t1134;
t968 = -pkin(8) * t1011 + (-pkin(9) * t1364 + t1533) * t1034;
t974 = -pkin(2) * t1011 - t1446;
t982 = t1365 * t1012 + t1361 * t1034;
t1389 = pkin(7) * t982 + t1361 * t968 + t1365 * t974;
t1210 = t1360 * t1279 + t1545;
t1122 = -pkin(2) * t1210 + t1175;
t1162 = -pkin(8) * t1210 + t1500;
t1166 = t1365 * t1211 - t1361 * t1243;
t1386 = pkin(7) * t1166 + t1122 * t1365 + t1162 * t1361;
t1218 = t1364 * t1285 + t1499;
t1126 = -pkin(2) * t1218 + t1176;
t1167 = -pkin(8) * t1218 + t1490;
t1168 = t1365 * t1219 - t1361 * t1247;
t1385 = pkin(7) * t1168 + t1126 * t1365 + t1167 * t1361;
t1258 = t1361 * t1305 + t1365 * t1306;
t1384 = pkin(7) * t1258 + t1217;
t1194 = t1360 * t1244 - t1364 * t1246;
t1076 = -pkin(8) * t1194 - t1105;
t1146 = t1365 * t1196 - t1361 * t1262;
t1381 = pkin(7) * t1146 + t1076 * t1361 - t1194 * t1517;
t1086 = t1365 * t1106 + t1361 * t1232;
t1378 = pkin(7) * t1086 + t1105 * t1448;
t1353 = t1357 * t1354;
t1343 = t1362 * qJDD(1) + t1366 * t1541;
t1340 = t1358 * t1450;
t1333 = t1472 * t1508;
t1332 = (t1355 - t1356) * t1508;
t1328 = -pkin(6) * t1343 + t1366 * g(3);
t1310 = t1472 * t1398;
t1303 = (t1455 * t1515 + t1470) * t1357;
t1300 = t1365 * t1327 - t1355 * t1398;
t1299 = (-t1356 * t1431 + t1361 * t1391) * t1357;
t1287 = t1365 * t1330 - t1495;
t1286 = -t1361 * t1329 + t1487;
t1278 = (t1358 * t1327 + (qJD(2) * t1358 * t1357 + (t1358 ^ 2 * t1357 + t1353) * qJD(1)) * t1515) * t1361;
t1277 = t1327 * t1507 + t1430;
t1276 = -t1391 * t1485 - t1430;
t1275 = -t1353 * t1462 + (-qJD(1) * t1361 * t1455 + t1471) * t1358 * t1506;
t1260 = t1444 + t1441;
t1259 = -t1361 * t1304 + t1365 * t1307;
t1254 = t1357 * t1307 + t1358 * t1404;
t1253 = -t1357 * t1306 + t1358 * t1403;
t1252 = -t1357 * t1305 + t1358 * t1405;
t1251 = -t1358 * t1307 + t1357 * t1404;
t1250 = t1358 * t1306 + t1357 * t1403;
t1249 = t1358 * t1305 + t1357 * t1405;
t1240 = -t1357 * t1303 + t1358 * t1406;
t1239 = t1358 * t1303 + t1357 * t1406;
t1237 = t1360 * t1274 - t1441;
t1235 = -t1364 * t1395 - t1444;
t1234 = t1365 * t1261 + t1361 * t1374;
t1231 = -t1357 * t1332 + t1358 * t1408;
t1230 = t1357 * t1333 + t1358 * t1407;
t1229 = t1358 * t1332 + t1357 * t1408;
t1228 = -t1358 * t1333 + t1357 * t1407;
t1221 = t1360 * t1301 - t1489;
t1220 = t1364 * t1302 + t1546;
t1202 = t1365 * t1238 + t1463;
t1201 = t1365 * t1236 - t1463;
t1200 = t1357 * t1311 + t1358 * t1409;
t1199 = -t1358 * t1311 + t1357 * t1409;
t1198 = -t1357 * t1260 + t1547 * t1358;
t1197 = t1358 * t1260 + t1547 * t1357;
t1193 = t1360 * t1243 + t1364 * t1245;
t1179 = t1360 * t1207 - t1364 * t1273;
t1178 = t1365 * t1223 - t1361 * t1242;
t1177 = t1365 * t1222 + t1361 * t1246;
t1169 = -t1497 + (-t1251 * t1357 - t1254 * t1358) * pkin(7);
t1165 = -t1488 + (-t1239 * t1357 - t1240 * t1358) * pkin(7);
t1164 = -pkin(1) * t1251 + t1357 * t1280 + t1358 * t1437;
t1163 = pkin(1) * t1254 - t1358 * t1280 + t1357 * t1437;
t1157 = t1365 * t1195 + t1361 * t1284;
t1156 = -pkin(1) * t1239 + t1357 * t1281 + t1358 * t1438;
t1155 = pkin(1) * t1240 - t1358 * t1281 + t1357 * t1438;
t1150 = -t1357 * t1237 + t1358 * t1396;
t1149 = -t1357 * t1235 + t1358 * t1397;
t1148 = t1358 * t1237 + t1357 * t1396;
t1147 = t1358 * t1235 + t1357 * t1397;
t1145 = pkin(1) * t1200 + t1217 * t1527;
t1144 = -pkin(1) * t1199 + t1217 * t1526;
t1141 = t1360 * t1184 - t1461;
t1140 = t1360 * t1182 + t1461;
t1137 = -pkin(1) * t1228 + t1358 * t1384;
t1136 = pkin(1) * t1230 + t1357 * t1384;
t1133 = pkin(2) * t1247 + pkin(8) * t1219 + t1500;
t1131 = -t1357 * t1221 + t1358 * t1410;
t1130 = -t1357 * t1220 + t1358 * t1411;
t1129 = t1358 * t1221 + t1357 * t1410;
t1128 = t1358 * t1220 + t1357 * t1411;
t1127 = (-t1199 * t1357 - t1200 * t1358) * pkin(7);
t1125 = pkin(2) * t1243 + pkin(8) * t1211 - t1490;
t1124 = (-t1228 * t1357 - t1230 * t1358) * pkin(7) - t1409;
t1121 = -t1357 * t1218 + t1358 * t1412;
t1120 = t1358 * t1218 + t1357 * t1412;
t1119 = t1365 * t1180 + t1361 * t1206;
t1118 = -t1357 * t1210 + t1358 * t1413;
t1117 = t1358 * t1210 + t1357 * t1413;
t1108 = t1360 * t1173 + t1364 * t1188;
t1107 = t1360 * t1172 - t1364 * t1191;
t1101 = -t1357 * t1193 + t1358 * t1415;
t1100 = t1358 * t1193 + t1357 * t1415;
t1096 = -t1357 * t1194 + t1358 * t1414;
t1095 = t1358 * t1194 + t1357 * t1414;
t1093 = t1360 * t1115 - t1364 * t1255;
t1092 = t1365 * t1143 + t1361 * t1183;
t1091 = t1365 * t1142 - t1361 * t1181;
t1087 = -pkin(2) * t1232 + pkin(8) * t1106;
t1084 = -t1357 * t1179 + t1358 * t1416;
t1083 = t1358 * t1179 + t1357 * t1416;
t1075 = t1365 * t1110 + t1361 * t1171;
t1074 = t1365 * t1109 + t1361 * t1170;
t1071 = pkin(2) * t1262 + pkin(8) * t1196 + t1106;
t1065 = -t1357 * t1141 + t1358 * t1417;
t1064 = -t1357 * t1140 + t1358 * t1418;
t1063 = t1358 * t1141 + t1357 * t1417;
t1062 = t1358 * t1140 + t1357 * t1418;
t1059 = t1365 * t1094 + t1361 * t1113;
t1057 = -t1362 * t1084 + t1366 * t1119;
t1056 = t1366 * t1084 + t1362 * t1119;
t1051 = -t1357 * t1105 + t1358 * t1421;
t1050 = t1358 * t1105 + t1357 * t1421;
t1048 = -t1357 * t1108 + t1358 * t1419;
t1047 = -t1357 * t1107 + t1358 * t1420;
t1046 = t1358 * t1108 + t1357 * t1419;
t1045 = t1358 * t1107 + t1357 * t1420;
t1031 = -t1361 * t1126 + t1365 * t1167 + (-t1120 * t1357 - t1121 * t1358) * pkin(7);
t1029 = -t1362 * t1065 + t1366 * t1092;
t1028 = -t1362 * t1064 + t1366 * t1091;
t1027 = t1366 * t1065 + t1362 * t1092;
t1026 = t1366 * t1064 + t1362 * t1091;
t1024 = -t1361 * t1122 + t1365 * t1162 + (-t1117 * t1357 - t1118 * t1358) * pkin(7);
t1023 = -t1357 * t1093 + t1358 * t1424;
t1022 = t1358 * t1093 + t1357 * t1424;
t1020 = -pkin(1) * t1120 - t1357 * t1133 + t1358 * t1385;
t1019 = pkin(1) * t1121 + t1358 * t1133 + t1357 * t1385;
t1014 = -pkin(1) * t1117 - t1357 * t1125 + t1358 * t1386;
t1013 = pkin(1) * t1118 + t1358 * t1125 + t1357 * t1386;
t1009 = -t1362 * t1048 + t1366 * t1075;
t1008 = -t1362 * t1047 + t1366 * t1074;
t1007 = t1366 * t1048 + t1362 * t1075;
t1006 = t1366 * t1047 + t1362 * t1074;
t1005 = t1194 * t1518 + t1365 * t1076 + (-t1095 * t1357 - t1096 * t1358) * pkin(7);
t1003 = pkin(6) * (-t1362 * t1044 + t1366 * t1073);
t999 = pkin(6) * (-t1362 * t1041 + t1366 * t1068);
t994 = t1364 * t1061 + t1360 * t1085 + t1477;
t993 = t1364 * t1060 + t1360 * t1082 + t1478;
t992 = -pkin(1) * t1095 - t1357 * t1071 + t1358 * t1381;
t991 = pkin(1) * t1096 + t1358 * t1071 + t1357 * t1381;
t990 = -t1362 * t1023 + t1366 * t1059;
t989 = t1366 * t1023 + t1362 * t1059;
t986 = pkin(6) * (-t1362 * t1018 + t1366 * t1054);
t981 = t1447 * t1105 + (-t1050 * t1357 - t1051 * t1358) * pkin(7);
t978 = -pkin(1) * t1050 - t1357 * t1087 + t1358 * t1378;
t977 = pkin(1) * t1051 + t1358 * t1087 + t1357 * t1378;
t976 = t1360 * t1010 - t1114 * t1532 + t1479;
t972 = t1360 * t1030 + t1364 * t1032 + t1477;
t971 = t1364 * t1021 + t1360 * t1025 + t1478;
t967 = t1364 * t1081 + t1360 * t980 + t1479;
t966 = -t1357 * t1011 + t1358 * t1426;
t965 = t1358 * t1011 + t1357 * t1426;
t962 = pkin(8) * t1012 + (-pkin(9) * t1360 - pkin(2) - t1532) * t1034;
t961 = t1365 * t1002 - t1361 * t1037 + t1392;
t960 = t1365 * t1001 - t1361 * t1036 + t1393;
t959 = -t1357 * t984 + t1358 * t1432;
t958 = t1357 * t1432 + t1358 * t984;
t957 = -t1357 * t994 + t1358 * t1427 + t1457;
t956 = t1357 * t1427 + t1358 * t994 + t1480;
t955 = -t1361 * t998 + t1365 * t975 + t1392;
t954 = -t1357 * t993 + t1358 * t1428 + t1458;
t953 = t1428 * t1357 + t1358 * t993 + t1481;
t952 = -t1361 * t995 + t1365 * t973 + t1393;
t950 = -t1361 * t988 + t1365 * t983 + t1394;
t948 = -t1357 * t972 + t1358 * t1434 + t1457;
t947 = t1357 * t1434 + t1358 * t972 + t1480;
t946 = -t1357 * t976 + t1358 * t1433 + t1459;
t945 = t1357 * t1433 + t1358 * t976 + t1482;
t944 = -t1361 * t970 + t1365 * t969 + t1394;
t943 = -t1357 * t971 + t1358 * t1435 + t1458;
t942 = t1435 * t1357 + t1358 * t971 + t1481;
t941 = -pkin(2) * t996 + pkin(8) * t985 + t1360 * t964 + t1364 * t979;
t940 = -t1357 * t967 + t1358 * t1436 + t1459;
t939 = t1357 * t1436 + t1358 * t967 + t1482;
t938 = -t1361 * t974 + t1365 * t968 + (-t1357 * t965 - t1358 * t966) * pkin(7);
t937 = -pkin(1) * t965 - t1357 * t962 + t1358 * t1389;
t936 = pkin(1) * t966 + t1357 * t1389 + t1358 * t962;
t935 = -t1361 * t951 + t1365 * t949 + (-t1357 * t958 - t1358 * t959) * pkin(7);
t934 = -pkin(1) * t958 - t1357 * t941 + t1358 * t1390;
t933 = pkin(1) * t959 + t1357 * t1390 + t1358 * t941;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1344, 0, -t1343, 0, t1445, -t1328, -t1402, -pkin(6) * t1402, -t1362 * t1278 + t1366 * t1300, -t1362 * t1231 + t1366 * t1259, -t1362 * t1252 + t1366 * t1286, -t1362 * t1275 + t1366 * t1299, -t1362 * t1253 + t1366 * t1287, t1366 * t1310 + t1362 * t1401, t1366 * t1169 - t1362 * t1164 - pkin(6) * (t1366 * t1254 + t1362 * t1288), t1366 * t1165 - t1362 * t1156 - pkin(6) * (t1366 * t1240 + t1362 * t1282), t1366 * t1124 - t1362 * t1137 - pkin(6) * (t1366 * t1230 + t1362 * t1258), t1366 * t1127 - t1362 * t1144 - pkin(6) * (t1366 * t1200 + t1362 * t1217), -t1362 * t1150 + t1366 * t1202, -t1362 * t1101 + t1366 * t1157, -t1362 * t1130 + t1366 * t1177, -t1362 * t1149 + t1366 * t1201, -t1362 * t1131 + t1366 * t1178, -t1362 * t1198 + t1366 * t1234, t1366 * t1024 - t1362 * t1014 - pkin(6) * (t1366 * t1118 + t1362 * t1166), t1366 * t1031 - t1362 * t1020 - pkin(6) * (t1366 * t1121 + t1362 * t1168), t1366 * t1005 - t1362 * t992 - pkin(6) * (t1366 * t1096 + t1362 * t1146), t1366 * t981 - t1362 * t978 - pkin(6) * (t1366 * t1051 + t1362 * t1086), t1029, t990, t1008, t1028, t1009, t1057, -t1362 * t954 + t1366 * t960 - t1529, -t1362 * t957 + t1366 * t961 - t1528, -t1362 * t946 + t1366 * t950 - t1540, t1366 * t938 - t1362 * t937 - pkin(6) * (t1362 * t982 + t1366 * t966), t1029, t990, t1008, t1028, t1009, t1057, -t1362 * t943 + t1366 * t952 - t1529, -t1362 * t948 + t1366 * t955 - t1528, -t1362 * t940 + t1366 * t944 - t1540, t1366 * t935 - t1362 * t934 - pkin(6) * (t1362 * t963 + t1366 * t959); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1343, 0, t1344, 0, t1328, t1445, t1451, pkin(6) * t1451, t1366 * t1278 + t1362 * t1300, t1366 * t1231 + t1362 * t1259, t1366 * t1252 + t1362 * t1286, t1366 * t1275 + t1362 * t1299, t1366 * t1253 + t1362 * t1287, t1362 * t1310 - t1366 * t1401, t1362 * t1169 + t1366 * t1164 + pkin(6) * (-t1362 * t1254 + t1366 * t1288), t1362 * t1165 + t1366 * t1156 + pkin(6) * (-t1362 * t1240 + t1366 * t1282), t1362 * t1124 + t1366 * t1137 + pkin(6) * (-t1362 * t1230 + t1366 * t1258), t1362 * t1127 + t1366 * t1144 + pkin(6) * (-t1362 * t1200 + t1366 * t1217), t1366 * t1150 + t1362 * t1202, t1366 * t1101 + t1362 * t1157, t1366 * t1130 + t1362 * t1177, t1366 * t1149 + t1362 * t1201, t1366 * t1131 + t1362 * t1178, t1366 * t1198 + t1362 * t1234, t1362 * t1024 + t1366 * t1014 + pkin(6) * (-t1362 * t1118 + t1366 * t1166), t1362 * t1031 + t1366 * t1020 + pkin(6) * (-t1362 * t1121 + t1366 * t1168), t1362 * t1005 + t1366 * t992 + pkin(6) * (-t1362 * t1096 + t1366 * t1146), t1362 * t981 + t1366 * t978 + pkin(6) * (-t1362 * t1051 + t1366 * t1086), t1027, t989, t1006, t1026, t1007, t1056, t1362 * t960 + t1366 * t954 + t999, t1362 * t961 + t1366 * t957 + t1003, t1362 * t950 + t1366 * t946 + t986, t1362 * t938 + t1366 * t937 + pkin(6) * (-t1362 * t966 + t1366 * t982), t1027, t989, t1006, t1026, t1007, t1056, t1362 * t952 + t1366 * t943 + t999, t1362 * t955 + t1366 * t948 + t1003, t1362 * t944 + t1366 * t940 + t986, t1362 * t935 + t1366 * t934 + pkin(6) * (-t1362 * t959 + t1366 * t963); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1346, t1347, 0, 0, t1277, t1229, t1249, t1276, t1250, t1340, t1163, t1155, t1136, t1145, t1148, t1100, t1128, t1147, t1129, t1197, t1013, t1019, t991, t977, t1063, t1022, t1045, t1062, t1046, t1083, t953, t956, t945, t936, t1063, t1022, t1045, t1062, t1046, t1083, t942, t947, t939, t933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1541, 0, 0, -g(3), -t1346, 0, t1300, t1259, t1286, t1299, t1287, t1310, t1169, t1165, t1124, t1127, t1202, t1157, t1177, t1201, t1178, t1234, t1024, t1031, t1005, t981, t1092, t1059, t1074, t1091, t1075, t1119, t960, t961, t950, t938, t1092, t1059, t1074, t1091, t1075, t1119, t952, t955, t944, t935; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1541, 0, qJDD(1), 0, g(3), 0, -t1347, 0, t1278, t1231, t1252, t1275, t1253, -t1401, t1164, t1156, t1137, t1144, t1150, t1101, t1130, t1149, t1131, t1198, t1014, t1020, t992, t978, t1065, t1023, t1047, t1064, t1048, t1084, t954, t957, t946, t937, t1065, t1023, t1047, t1064, t1048, t1084, t943, t948, t940, t934; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1346, t1347, 0, 0, t1277, t1229, t1249, t1276, t1250, t1340, t1163, t1155, t1136, t1145, t1148, t1100, t1128, t1147, t1129, t1197, t1013, t1019, t991, t977, t1063, t1022, t1045, t1062, t1046, t1083, t953, t956, t945, t936, t1063, t1022, t1045, t1062, t1046, t1083, t942, t947, t939, t933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1327, t1307, t1325, -t1335, t1330, t1335, 0, -t1311, t1280, 0, t1238, t1195, t1222, t1236, t1223, t1261, t1162, t1167, t1076, -pkin(8) * t1105, t1143, t1094, t1109, t1142, t1110, t1180, t1001, t1002, t983, t968, t1143, t1094, t1109, t1142, t1110, t1180, t973, t975, t969, t949; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1334, t1304, t1329, -t1382, t1326, -t1334, t1311, 0, t1281, 0, -t1509, -t1284, -t1246, t1509, t1242, -t1374, t1122, t1126, -pkin(2) * t1194, -pkin(2) * t1105, -t1183, -t1113, -t1170, t1181, -t1171, -t1206, t1036, t1037, t988, t974, -t1183, -t1113, -t1170, t1181, -t1171, -t1206, t995, t998, t970, t951; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1345, t1332, t1305, t1345, t1306, t1450, -t1280, -t1281, 0, 0, t1237, t1193, t1220, t1235, t1221, t1260, t1125, t1133, t1071, t1087, t1141, t1093, t1107, t1140, t1108, t1179, t993, t994, t976, t962, t1141, t1093, t1107, t1140, t1108, t1179, t971, t972, t967, t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1274, t1243, t1371, -t1308, t1301, t1308, 0, t1232, t1175, 0, t1184, t1115, t1172, t1182, t1173, t1207, t1082, t1085, t1010, -pkin(9) * t1034, t1184, t1115, t1172, t1182, t1173, t1207, t1025, t1030, t980, t964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1309, t1245, t1302, -t1395, -t1267, t1309, -t1232, 0, t1176, 0, -t1257, -t1255, -t1191, t1257, t1188, -t1273, t1060, t1061, -t1536, -pkin(3) * t1034, -t1257, -t1255, -t1191, t1257, t1188, -t1273, t1021, t1032, t1081, t979; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1509, t1284, t1246, -t1509, -t1242, t1374, -t1175, -t1176, 0, 0, t1183, t1113, t1170, -t1181, t1171, t1206, t1440, t1439, t1400, t1446, t1183, t1113, t1170, -t1181, t1171, t1206, t1380, t1387, t1388, t1372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1214, -t1187, -t1548, t1270, t1264, -t1270, 0, t1134, t1078, 0, t1214, -t1187, -t1548, t1270, t1264, -t1270, qJ(5) * t1548, t1072, t1038, qJ(5) * t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1512, t1542, t1265, t1213, t1204, -t1512, -t1134, 0, t1079, 0, t1512, t1542, t1265, t1213, t1204, -t1512, t1058, t1123, t1033, t1015; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1257, t1255, t1191, -t1257, -t1188, t1273, -t1078, -t1079, 0, 0, t1257, t1255, t1191, -t1257, -t1188, t1273, t1370, t1383 + 0.2e1 * t1513, -t1530, -t1531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1214, -t1187, -t1548, t1270, t1264, -t1270, 0, t1080, t1049, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1512, t1542, t1265, t1213, t1204, -t1512, -t1080, 0, t1055, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1257, t1255, t1191, -t1257, -t1188, t1273, -t1049, -t1055, 0, 0;];
m_new_reg = t1;
