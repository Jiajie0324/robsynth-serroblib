% Calculate vector of inverse dynamics joint torques for
% S5PRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d4,theta1]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:53
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5PRRRP6_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRP6_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRP6_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRP6_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRP6_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRRP6_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5PRRRP6_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5PRRRP6_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5PRRRP6_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:50:47
% EndTime: 2019-12-05 16:52:16
% DurationCPUTime: 77.13s
% Computational Cost: add. (28849->1049), mult. (45635->1467), div. (0->0), fcn. (44142->8), ass. (0->485)
t936 = Icges(6,4) + Icges(5,5);
t935 = Icges(5,6) - Icges(6,6);
t941 = Icges(5,4) - Icges(6,5);
t942 = Icges(5,1) + Icges(6,1);
t951 = Icges(6,2) + Icges(5,3);
t507 = qJ(3) + qJ(4);
t497 = sin(t507);
t498 = cos(t507);
t953 = -t935 * t497 + t936 * t498;
t952 = t941 * t497;
t915 = Icges(5,2) + Icges(6,3);
t511 = sin(qJ(2));
t513 = cos(qJ(2));
t950 = -t951 * t511 - t953 * t513;
t949 = (-t936 * t497 - t935 * t498) * t511;
t948 = t942 * t498 - t952;
t793 = Icges(5,4) * t498;
t626 = -Icges(5,2) * t497 + t793;
t947 = t511 * t626 - t935 * t513;
t509 = cos(pkin(8));
t508 = sin(pkin(8));
t766 = t508 * t513;
t699 = t498 * t766;
t387 = -t509 * t497 + t699;
t946 = t941 * t387;
t763 = t509 * t513;
t389 = t497 * t508 + t498 * t763;
t945 = t941 * t389;
t386 = t497 * t766 + t498 * t509;
t944 = t941 * t386;
t388 = t497 * t763 - t508 * t498;
t943 = t941 * t388;
t506 = qJD(3) + qJD(4);
t720 = qJD(2) * t511;
t575 = t506 * t509 + t508 * t720;
t270 = t497 * t575 - t506 * t699;
t770 = t506 * t508;
t697 = t497 * t770;
t271 = -t498 * t575 - t513 * t697;
t719 = qJD(2) * t513;
t682 = t508 * t719;
t940 = t935 * t270 + t936 * t271 + t951 * t682;
t681 = t509 * t720;
t698 = t506 * t763;
t272 = t497 * t681 - t498 * t698 - t697;
t273 = -t497 * t698 + (-t681 + t770) * t498;
t680 = t509 * t719;
t939 = t935 * t272 + t936 * t273 + t951 * t680;
t938 = t950 * qJD(2) - t949 * t506;
t768 = t508 * t511;
t914 = t915 * t386 - t935 * t768 - t946;
t764 = t509 * t511;
t913 = t915 * t388 - t935 * t764 - t945;
t912 = -t935 * t386 + t936 * t387 + t951 * t768;
t911 = -t935 * t388 + t936 * t389 + t951 * t764;
t928 = t942 * t387 + t936 * t768 - t944;
t927 = t942 * t389 + t936 * t764 - t943;
t772 = t498 * t511;
t469 = Icges(6,5) * t772;
t774 = t497 * t511;
t926 = Icges(6,3) * t774 + t469 - t947;
t786 = Icges(6,5) * t498;
t620 = Icges(6,3) * t497 + t786;
t869 = (-t620 + t626) * t513 + t935 * t511;
t925 = t953 * t511 - t951 * t513;
t905 = t948 * t511 - t936 * t513;
t868 = -t936 * t511 - t948 * t513;
t937 = (-t915 * t498 - t952) * t511;
t934 = -t915 * t270 - t941 * t271 - t935 * t682;
t933 = -t915 * t272 - t941 * t273 - t935 * t680;
t932 = t941 * t270 + t942 * t271 + t936 * t682;
t931 = t941 * t272 + t942 * t273 + t936 * t680;
t930 = t869 * qJD(2) + t937 * t506;
t403 = (-Icges(5,1) * t497 - t793) * t511;
t455 = t506 * t511;
t929 = -(-Icges(6,1) * t497 + t786) * t455 - t403 * t506 + t868 * qJD(2);
t924 = t938 * t511 - t925 * t719;
t923 = t939 * t511 + t911 * t719;
t922 = t940 * t511 + t912 * t719;
t921 = t926 * t497 + t905 * t498;
t920 = t913 * t497 + t927 * t498;
t919 = t914 * t497 + t928 * t498;
t878 = rSges(6,3) + qJ(5);
t895 = rSges(6,1) + pkin(4);
t890 = -t914 * t270 + t928 * t271 + t934 * t386 + t932 * t387 + t922 * t508;
t889 = -t913 * t270 + t927 * t271 + t933 * t386 + t931 * t387 + t923 * t508;
t888 = -t914 * t272 + t928 * t273 + t934 * t388 + t932 * t389 + t922 * t509;
t887 = -t913 * t272 + t927 * t273 + t933 * t388 + t931 * t389 + t923 * t509;
t918 = t926 * t270 - t905 * t271 + t930 * t386 + t929 * t387 + t924 * t508;
t917 = t926 * t272 - t905 * t273 + t930 * t388 + t929 * t389 + t924 * t509;
t884 = t913 * t386 + t927 * t387 + t911 * t768;
t883 = t914 * t386 + t928 * t387 + t912 * t768;
t882 = t913 * t388 + t927 * t389 + t911 * t764;
t881 = t914 * t388 + t928 * t389 + t912 * t764;
t880 = t919 * t511 - t912 * t513;
t879 = t920 * t511 - t911 * t513;
t877 = t926 * t386 + t905 * t387 + t925 * t768;
t876 = t926 * t388 + t905 * t389 + t925 * t764;
t875 = t921 * t511 - t925 * t513;
t906 = -t511 * t620 + t947;
t496 = qJD(2) * t508;
t718 = qJD(3) * t511;
t447 = t509 * t718 + t496;
t716 = qJD(4) * t511;
t369 = t509 * t716 + t447;
t721 = qJD(2) * t509;
t448 = t508 * t718 - t721;
t370 = t508 * t716 + t448;
t656 = t506 * t513;
t904 = t949 * t656 + (t936 * t386 + t935 * t387) * t370 + (t936 * t388 + t935 * t389) * t369;
t903 = (t921 + t950) * t656 + (-t925 * t508 - t919) * t370 + (-t925 * t509 - t920) * t369;
t504 = t508 ^ 2;
t505 = t509 ^ 2;
t459 = rSges(3,1) * t511 + rSges(3,2) * t513;
t866 = t504 + t505;
t902 = t459 * t866;
t901 = t508 * t509;
t723 = t878 * t772;
t463 = pkin(2) * t511 - pkin(6) * t513;
t585 = qJD(2) * t463;
t419 = t508 * t585;
t420 = t509 * t585;
t489 = pkin(6) * t766;
t490 = pkin(6) * t763;
t900 = -t508 * t419 - t509 * t420 - (-pkin(2) * t768 + t489) * t496 - (-pkin(2) * t764 + t490) * t721;
t642 = rSges(6,1) * t498 + rSges(6,3) * t497;
t855 = (-pkin(4) * t498 - qJ(5) * t497 - t642) * t511;
t899 = 0.2e1 * qJD(2);
t898 = 2 * qJDD(2);
t495 = qJDD(2) * t508;
t711 = qJD(2) * qJD(3);
t857 = qJDD(3) * t511 + t513 * t711;
t345 = t509 * t857 + t495;
t710 = qJD(2) * qJD(4);
t568 = qJDD(4) * t511 + t513 * t710;
t268 = t509 * t568 + t345;
t709 = qJDD(2) * t509;
t346 = t508 * t857 - t709;
t269 = t508 * t568 + t346;
t493 = t511 * t711;
t349 = t511 * t710 + t493 + (-qJDD(3) - qJDD(4)) * t513;
t897 = t268 * t884 + t269 * t883 + t349 * t877 + t369 * t889 + t370 * t890 + t656 * t918;
t896 = t268 * t882 + t269 * t881 + t349 * t876 + t369 * t887 + t370 * t888 + t656 * t917;
t894 = (t919 * qJD(2) - t940) * t513 + ((t506 * t914 + t932) * t498 + (-t506 * t928 + t934) * t497 + t912 * qJD(2)) * t511;
t893 = (t920 * qJD(2) - t939) * t513 + ((t506 * t913 + t931) * t498 + (-t506 * t927 + t933) * t497 + t911 * qJD(2)) * t511;
t892 = t369 * t884 + t370 * t883 - t656 * t877;
t891 = t369 * t882 + t370 * t881 - t656 * t876;
t886 = t369 * t879 + t370 * t880 - t656 * t875;
t885 = (-t921 * qJD(2) - t938) * t513 + ((-t506 * t926 + t929) * t498 + (t506 * t905 + t930) * t497 - t925 * qJD(2)) * t511;
t773 = t497 * t513;
t715 = qJD(5) * t386;
t758 = rSges(6,2) * t682 - t878 * t270 + t271 * t895 + t715;
t713 = qJD(5) * t511;
t461 = t497 * t713;
t501 = t511 * rSges(6,2);
t700 = t498 * t455;
t554 = t497 * t719 + t700;
t751 = t461 + t554 * qJ(5) + (-t455 * t497 + t498 * t719) * pkin(4) + (-rSges(6,1) * t497 + rSges(6,3) * t498) * t455 + (t513 * t642 + t501) * qJD(2);
t749 = rSges(6,2) * t768 + t878 * t386 + t387 * t895;
t748 = rSges(6,2) * t764 + t878 * t388 + t389 * t895;
t874 = -t386 * t895 + t878 * t387;
t742 = t388 * t895 - t878 * t389;
t873 = t906 * t508;
t872 = t906 * t509;
t871 = t905 * t508;
t870 = t905 * t509;
t736 = -rSges(6,2) * t513 - t855;
t867 = -t774 * t895 + t723;
t865 = (t369 * t911 + t370 * t912 - t656 * t925) * t513 + t903 * t511;
t864 = (t905 + t937) * t656 + (t387 * t915 - t928 + t944) * t370 + (t389 * t915 - t927 + t943) * t369;
t863 = (Icges(6,1) * t774 - t403 - t469 - t926) * t656 + (-t386 * t942 + t914 - t946) * t370 + (-t388 * t942 + t913 - t945) * t369;
t862 = t904 * t511;
t861 = t508 * t880 + t509 * t879;
t860 = t508 * t881 + t509 * t882;
t859 = t508 * t883 + t509 * t884;
t510 = sin(qJ(3));
t804 = pkin(3) * qJD(3);
t702 = t510 * t804;
t512 = cos(qJ(3));
t494 = pkin(3) * t512 + pkin(2);
t808 = pkin(2) - t494;
t671 = t808 * t511;
t514 = -pkin(7) - pkin(6);
t807 = pkin(6) + t514;
t856 = -t513 * t807 + t671;
t521 = qJD(2) * t856 - t513 * t702;
t701 = t512 * t804;
t170 = t508 * t521 - t509 * t701;
t171 = t508 * t701 + t509 * t521;
t552 = -t511 * t807 - t513 * t808;
t765 = t509 * t510;
t258 = -pkin(3) * t765 + t508 * t552;
t717 = qJD(3) * t513;
t222 = t258 * t717;
t759 = t513 * t514;
t572 = t671 - t759;
t285 = t508 * t572 - t489;
t286 = t509 * t572 - t490;
t858 = t508 * t170 - t447 * t285 + t286 * t448 + t900 + (t171 - t222) * t509;
t761 = t510 * t513;
t429 = t508 * t512 - t509 * t761;
t769 = t508 * t510;
t259 = pkin(3) * t769 + t509 * t552;
t686 = t463 * t496;
t534 = -t259 * t717 + t447 * t856 - t686;
t78 = -t369 * t736 - t656 * t748 + t534 + t715;
t685 = t463 * t721;
t596 = -t448 * t856 + t222 - t685;
t714 = qJD(5) * t388;
t79 = t370 * t736 + t656 * t749 + t596 + t714;
t853 = t369 * t78 - t370 * t79 - g(3);
t847 = t513 * pkin(2) + t511 * pkin(6);
t845 = -qJD(5) * t389 - t370 * t867 + t513 * t758 - t656 * t874 + t682 * t736 + t751 * t768;
t276 = qJD(2) * t552 - t511 * t702;
t427 = -t508 * t761 - t509 * t512;
t423 = t427 * pkin(3);
t762 = t510 * t511;
t707 = pkin(3) * t762;
t844 = t513 * t170 + t276 * t768 - t423 * t717 + t448 * t707 - t682 * t856;
t141 = rSges(5,1) * t271 + rSges(5,2) * t270 + rSges(5,3) * t682;
t643 = -rSges(5,1) * t497 - rSges(5,2) * t498;
t414 = t643 * t511;
t499 = t511 * rSges(5,3);
t805 = rSges(5,1) * t498;
t644 = -rSges(5,2) * t497 + t805;
t196 = t506 * t414 + (t513 * t644 + t499) * qJD(2);
t250 = -t386 * rSges(5,1) - t387 * rSges(5,2);
t342 = -rSges(5,3) * t513 + t511 * t644;
t843 = t513 * t141 + t196 * t768 - t250 * t656 + t342 * t682 - t370 * t414;
t842 = g(1) * t509 + g(2) * t508;
t622 = Icges(4,5) * t512 - Icges(4,6) * t510;
t390 = -Icges(4,3) * t513 + t511 * t622;
t797 = Icges(4,4) * t512;
t627 = -Icges(4,2) * t510 + t797;
t392 = -Icges(4,6) * t513 + t511 * t627;
t798 = Icges(4,4) * t510;
t632 = Icges(4,1) * t512 - t798;
t394 = -Icges(4,5) * t513 + t511 * t632;
t439 = t847 * t508;
t440 = t847 * t509;
t601 = -t419 * t496 - t420 * t721 + t439 * t495 + t440 * t709 + qJDD(1);
t527 = t447 * t170 - t448 * t171 + t345 * t258 - t346 * t259 + t601;
t757 = rSges(6,2) * t680 - t272 * t878 + t273 * t895 + t714;
t19 = qJD(5) * t554 + qJDD(5) * t774 + t268 * t749 - t269 * t748 + t369 * t758 - t370 * t757 + t527;
t674 = t439 * t496 + t440 * t721 + qJD(1);
t567 = t447 * t258 - t259 * t448 + t674;
t69 = t369 * t749 - t370 * t748 + t461 + t567;
t841 = -t19 * t748 - t69 * t757;
t760 = t512 * t513;
t430 = t509 * t760 + t769;
t799 = Icges(4,4) * t430;
t245 = Icges(4,2) * t429 + Icges(4,6) * t764 + t799;
t422 = Icges(4,4) * t429;
t247 = Icges(4,1) * t430 + Icges(4,5) * t764 + t422;
t610 = -t245 * t510 + t247 * t512;
t428 = t508 * t760 - t765;
t800 = Icges(4,4) * t428;
t244 = Icges(4,2) * t427 + Icges(4,6) * t768 + t800;
t421 = Icges(4,4) * t427;
t246 = Icges(4,1) * t428 + Icges(4,5) * t768 + t421;
t611 = -t244 * t510 + t246 * t512;
t840 = -(-t390 * t509 - t610) * t447 - (-t390 * t508 - t611) * t448;
t442 = (-Icges(4,2) * t512 - t798) * t511;
t522 = t447 * (-Icges(4,2) * t430 + t247 + t422) + t448 * (-Icges(4,2) * t428 + t246 + t421) - t717 * (t394 + t442);
t835 = t268 / 0.2e1;
t834 = t269 / 0.2e1;
t833 = t345 / 0.2e1;
t832 = t346 / 0.2e1;
t831 = t349 / 0.2e1;
t830 = -t369 / 0.2e1;
t829 = t369 / 0.2e1;
t828 = -t370 / 0.2e1;
t827 = t370 / 0.2e1;
t824 = -t447 / 0.2e1;
t823 = t447 / 0.2e1;
t822 = -t448 / 0.2e1;
t821 = t448 / 0.2e1;
t453 = -qJDD(3) * t513 + t493;
t820 = t453 / 0.2e1;
t818 = t656 / 0.2e1;
t817 = -t656 / 0.2e1;
t814 = -t513 / 0.2e1;
t812 = pkin(3) * t510;
t809 = g(3) * t511;
t806 = rSges(4,1) * t512;
t803 = t508 * t69;
t500 = t511 * rSges(4,3);
t243 = Icges(4,5) * t430 + Icges(4,6) * t429 + Icges(4,3) * t764;
t101 = t243 * t768 + t245 * t427 + t247 * t428;
t779 = t101 * t509;
t242 = Icges(4,5) * t428 + Icges(4,6) * t427 + Icges(4,3) * t768;
t102 = t242 * t764 + t244 * t429 + t246 * t430;
t778 = t102 * t508;
t120 = t390 * t768 + t392 * t427 + t394 * t428;
t777 = t120 * t511;
t121 = t390 * t764 + t392 * t429 + t394 * t430;
t776 = t121 * t511;
t775 = t390 * t513;
t771 = t498 * t513;
t212 = rSges(5,1) * t387 - rSges(5,2) * t386 + rSges(5,3) * t768;
t756 = t141 * t764 + t212 * t680;
t143 = rSges(5,1) * t273 + rSges(5,2) * t272 + rSges(5,3) * t680;
t755 = -t143 - t171;
t754 = t170 * t764 + t258 * t680;
t753 = t749 * t764;
t752 = t748 * t720;
t750 = -t196 - t276;
t214 = rSges(5,1) * t389 - rSges(5,2) * t388 + rSges(5,3) * t764;
t747 = -t214 - t259;
t746 = t513 * t258 - t768 * t856;
t444 = (-rSges(4,1) * t510 - rSges(4,2) * t512) * t511;
t645 = -rSges(4,2) * t510 + t806;
t267 = qJD(3) * t444 + (t513 * t645 + t500) * qJD(2);
t450 = t847 * qJD(2);
t741 = -t267 - t450;
t484 = rSges(6,2) * t766;
t740 = t508 * t855 + t484;
t487 = rSges(6,2) * t763;
t739 = t509 * t855 + t487;
t738 = t513 * t212 + t342 * t768;
t737 = t856 - t342;
t254 = -t388 * rSges(5,1) - t389 * rSges(5,2);
t396 = -rSges(4,3) * t513 + t511 * t645;
t729 = -t396 - t463;
t728 = t508 * t439 + t509 * t440;
t703 = rSges(5,2) * t774;
t727 = rSges(5,3) * t766 + t508 * t703;
t726 = rSges(5,3) * t763 + t509 * t703;
t704 = rSges(4,2) * t762;
t725 = rSges(4,3) * t766 + t508 * t704;
t724 = rSges(4,3) * t763 + t509 * t704;
t603 = -t392 * t510 + t394 * t512;
t151 = t511 * t603 - t775;
t712 = t151 * qJD(3);
t706 = t511 * t806;
t705 = rSges(5,1) * t772;
t695 = -t171 - t757;
t692 = -t276 - t751;
t691 = -t450 + t750;
t690 = -t259 - t748;
t689 = t856 - t736;
t688 = -t463 + t737;
t687 = t895 * t497;
t684 = t847 * t496;
t683 = t847 * t721;
t679 = t510 * t720;
t678 = t512 * t720;
t677 = t508 * t717;
t676 = t768 / 0.2e1;
t675 = t764 / 0.2e1;
t669 = t720 / 0.2e1;
t668 = t719 / 0.2e1;
t667 = -t717 / 0.2e1;
t666 = t717 / 0.2e1;
t665 = t69 * t748;
t664 = t78 * t736;
t663 = t79 * t749;
t662 = t369 * t250 - t254 * t370;
t661 = -t254 * t656 - t369 * t414;
t659 = t509 * t856 - t286;
t424 = t429 * pkin(3);
t658 = t447 * t423 - t424 * t448;
t470 = t513 * t494;
t657 = -t511 * t514 + t470;
t655 = t680 * t749 + t758 * t764;
t653 = -t450 + t692;
t652 = t508 * t258 + t509 * t259 + t728;
t651 = t513 * t749 + t736 * t768;
t650 = -t463 + t689;
t649 = t508 * t668;
t648 = t509 * t668;
t646 = -t424 * t717 + t447 * t707;
t460 = rSges(3,1) * t513 - rSges(3,2) * t511;
t624 = Icges(3,5) * t513 - Icges(3,6) * t511;
t623 = -Icges(3,5) * t511 - Icges(3,6) * t513;
t100 = t242 * t768 + t244 * t427 + t246 * t428;
t619 = t100 * t508 + t779;
t103 = t243 * t764 + t245 * t429 + t247 * t430;
t618 = t103 * t509 + t778;
t105 = -t242 * t513 + t511 * t611;
t106 = -t243 * t513 + t511 * t610;
t617 = t105 * t508 + t106 * t509;
t612 = t242 * t448 + t243 * t447;
t256 = rSges(4,1) * t428 + rSges(4,2) * t427 + rSges(4,3) * t768;
t257 = rSges(4,1) * t430 + rSges(4,2) * t429 + rSges(4,3) * t764;
t609 = t256 * t509 - t257 * t508;
t604 = t866 * t460;
t602 = qJD(2) * t902;
t397 = rSges(4,1) * t760 - rSges(4,2) * t761 + t500;
t344 = rSges(5,1) * t771 - rSges(5,2) * t773 + t499;
t599 = -qJD(2) * t450 - qJDD(2) * t463;
t391 = Icges(4,3) * t511 + t513 * t622;
t586 = t391 - t603;
t311 = -qJD(3) * t428 + t508 * t679;
t312 = qJD(3) * t427 - t508 * t678;
t152 = Icges(4,5) * t312 + Icges(4,6) * t311 + Icges(4,3) * t682;
t580 = t152 * t511 + t242 * t719;
t313 = -qJD(3) * t430 + t509 * t679;
t314 = qJD(3) * t429 - t509 * t678;
t153 = Icges(4,5) * t314 + Icges(4,6) * t313 + Icges(4,3) * t680;
t579 = t153 * t511 + t243 * t719;
t441 = (-Icges(4,5) * t510 - Icges(4,6) * t512) * t511;
t260 = qJD(2) * t391 + qJD(3) * t441;
t576 = t260 * t511 + t390 * t719;
t104 = t256 * t447 - t257 * t448 + t674;
t569 = t104 * t609;
t443 = (-Icges(4,1) * t510 - t797) * t511;
t564 = qJD(2) * t623;
t559 = t599 * t508;
t558 = t599 * t509;
t557 = t369 * t874 + t370 * t742 + t498 * t713;
t556 = qJD(5) * t387 - t369 * t867 + t656 * t742;
t328 = t657 - t847;
t553 = t259 * t718 - t328 * t447 - t684;
t546 = -(Icges(4,5) * t427 - Icges(4,6) * t428) * t448 - (Icges(4,5) * t429 - Icges(4,6) * t430) * t447 + t441 * t717;
t395 = Icges(4,5) * t511 + t513 * t632;
t393 = Icges(4,6) * t511 + t513 * t627;
t533 = t511 * t546;
t532 = -t258 * t718 + t285 * t717 + t448 * t328 - t677 * t856 - t683;
t524 = t170 * t717 - t258 * t453 + t448 * t276 - t346 * t856 + t558;
t523 = (Icges(4,1) * t429 - t245 - t799) * t447 + (Icges(4,1) * t427 - t244 - t800) * t448 - (-t392 + t443) * t717;
t520 = -t171 * t717 + t453 * t259 - t276 * t447 + t345 * t856 + t559;
t519 = (t511 * t860 - t513 * t876) * t835 + (t511 * t859 - t513 * t877) * t834 + (t511 * t861 - t513 * t875) * t831 + (t388 * t864 + t389 * t863 - t509 * t862) * t830 + (t917 * t513 + (t508 * t888 + t509 * t887) * t511 + (t511 * t876 + t513 * t860) * qJD(2)) * t829 + (t386 * t864 + t387 * t863 - t508 * t862) * t828 + (t918 * t513 + (t508 * t890 + t509 * t889) * t511 + (t511 * t877 + t513 * t859) * qJD(2)) * t827 + (t904 * t513 + (t497 * t864 + t498 * t863) * t511) * t818 + (t885 * t513 + (t508 * t894 + t509 * t893) * t511 + (t511 * t875 + t513 * t861) * qJD(2)) * t817 + (t268 * t879 + t269 * t880 + t349 * t875 + t369 * t893 + t370 * t894 + t656 * t885) * t814 + t897 * t676 + t896 * t675 + t886 * t669 + t892 * t649 + t891 * t648;
t518 = (-t586 * t717 - t840) * t511;
t438 = t459 * t509;
t437 = t459 * t508;
t432 = t623 * t509;
t431 = t623 * t508;
t426 = t509 * t656;
t425 = t508 * t656;
t407 = t509 * t564;
t406 = t508 * t564;
t372 = Icges(3,3) * t508 + t509 * t624;
t371 = -Icges(3,3) * t509 + t508 * t624;
t322 = -t509 * t706 + t724;
t321 = -t508 * t706 + t725;
t320 = t394 * t509;
t319 = t394 * t508;
t318 = t392 * t509;
t317 = t392 * t508;
t302 = -t509 * t705 + t726;
t300 = -t508 * t705 + t727;
t284 = rSges(4,1) * t429 - rSges(4,2) * t430;
t283 = rSges(4,1) * t427 - rSges(4,2) * t428;
t262 = qJD(2) * t395 + qJD(3) * t443;
t261 = qJD(2) * t393 + qJD(3) * t442;
t223 = t259 * t720;
t219 = t258 * t764;
t180 = t214 * t720;
t177 = t212 * t764;
t159 = rSges(4,1) * t314 + rSges(4,2) * t313 + rSges(4,3) * t680;
t158 = rSges(4,1) * t312 + rSges(4,2) * t311 + rSges(4,3) * t682;
t157 = Icges(4,1) * t314 + Icges(4,4) * t313 + Icges(4,5) * t680;
t156 = Icges(4,1) * t312 + Icges(4,4) * t311 + Icges(4,5) * t682;
t155 = Icges(4,4) * t314 + Icges(4,2) * t313 + Icges(4,6) * t680;
t154 = Icges(4,4) * t312 + Icges(4,2) * t311 + Icges(4,6) * t682;
t125 = t256 * t717 + t396 * t448 - t685;
t124 = -t257 * t717 - t396 * t447 - t686;
t119 = -qJD(2) * t602 + qJDD(2) * t604 + qJDD(1);
t87 = t212 * t656 + t342 * t370 + t596;
t86 = -t214 * t656 - t342 * t369 + t534;
t85 = t158 * t717 - t256 * t453 + t267 * t448 + t346 * t396 + t558;
t84 = -t159 * t717 + t257 * t453 - t267 * t447 - t345 * t396 + t559;
t83 = (qJD(2) * t603 - t260) * t513 + (qJD(2) * t390 - t261 * t510 + t262 * t512 + (-t392 * t512 - t394 * t510) * qJD(3)) * t511;
t82 = t261 * t429 + t262 * t430 + t313 * t392 + t314 * t394 + t509 * t576;
t81 = t261 * t427 + t262 * t428 + t311 * t392 + t312 * t394 + t508 * t576;
t80 = t212 * t369 - t214 * t370 + t567;
t71 = t158 * t447 - t159 * t448 + t256 * t345 - t257 * t346 + t601;
t70 = t105 * t448 + t106 * t447 - t513 * t712;
t68 = t155 * t429 + t157 * t430 + t245 * t313 + t247 * t314 + t509 * t579;
t67 = t154 * t429 + t156 * t430 + t244 * t313 + t246 * t314 + t509 * t580;
t66 = t155 * t427 + t157 * t428 + t245 * t311 + t247 * t312 + t508 * t579;
t65 = t154 * t427 + t156 * t428 + t244 * t311 + t246 * t312 + t508 * t580;
t64 = t102 * t448 + t103 * t447 - t121 * t717;
t63 = t100 * t448 + t101 * t447 - t120 * t717;
t60 = (qJD(2) * t610 - t153) * t513 + (qJD(2) * t243 - t155 * t510 + t157 * t512 + (-t245 * t512 - t247 * t510) * qJD(3)) * t511;
t59 = (qJD(2) * t611 - t152) * t513 + (qJD(2) * t242 - t154 * t510 + t156 * t512 + (-t244 * t512 - t246 * t510) * qJD(3)) * t511;
t46 = t141 * t656 + t196 * t370 - t212 * t349 + t269 * t342 + t524;
t45 = -t143 * t656 - t196 * t369 + t214 * t349 - t268 * t342 + t520;
t26 = t141 * t369 - t143 * t370 + t212 * t268 - t214 * t269 + t527;
t21 = -qJD(5) * t272 + qJDD(5) * t388 + t269 * t736 - t349 * t749 + t370 * t751 + t656 * t758 + t524;
t20 = -qJD(5) * t270 + qJDD(5) * t386 - t268 * t736 + t349 * t748 - t369 * t751 - t656 * t757 + t520;
t18 = t102 * t346 + t103 * t345 + t121 * t453 + t447 * t68 + t448 * t67 - t717 * t82;
t17 = t100 * t346 + t101 * t345 + t120 * t453 + t447 * t66 + t448 * t65 - t717 * t81;
t1 = [m(2) * qJDD(1) + (-m(2) - m(3) - m(4) - m(5) - m(6)) * g(3) + m(3) * t119 + m(4) * t71 + m(5) * t26 + m(6) * t19; ((-t59 + t64) * t509 + (t60 + t63) * t508) * t667 + (t508 * t887 - t509 * t888) * t829 + (t508 * t889 - t509 * t890) * t827 - t891 * t426 / 0.2e1 - t892 * t425 / 0.2e1 + (t508 * t893 - t509 * t894) * t817 + (t431 * qJD(2) * t505 - t432 * t509 * t496) * t721 / 0.2e1 + (t508 * t879 - t509 * t880) * t831 + (t508 * t882 - t509 * t881) * t835 + (t508 * t884 - t509 * t883) * t834 - t886 * t455 / 0.2e1 + ((-t318 * t427 - t320 * t428) * t447 + (-t317 * t427 - t319 * t428) * t448 + (t777 + (-t393 * t427 - t395 * t428 + t779) * t513) * qJD(3) + (((t100 - t775) * qJD(3) + t612) * t513 + t518) * t508) * t822 + ((-t318 * t429 - t320 * t430) * t447 + (-t317 * t429 - t319 * t430) * t448 + (t776 + (-t393 * t429 - t395 * t430 + t778) * t513) * qJD(3) + (((t103 - t775) * qJD(3) + t612) * t513 + t518) * t509) * t824 + (((t318 * t510 - t320 * t512 + t243) * t447 + (t317 * t510 - t319 * t512 + t242) * t448 + t712) * t511 + ((t586 * t513 + (t393 * t510 - t395 * t512 - t390) * t511 + t617) * qJD(3) + t840) * t513) * t666 + (-t87 * (-t212 * t455 + t300 * t656 + t342 * t425 + t344 * t370 + t532) - t86 * (t214 * t455 - t302 * t656 - t342 * t426 - t344 * t369 + t659 * t717 + t553) + t26 * t652 + (t26 * t214 + t46 * t688 + t691 * t87) * t509 + (t26 * t212 + t45 * t688 + t691 * t86) * t508 - g(1) * t726 - g(2) * t727 - g(3) * (t344 + t657) - t842 * (-t759 + (-t494 - t805) * t511) + (t141 * t508 + t143 * t509 - t212 * t426 + t214 * t425 + t259 * t677 - t300 * t369 + t302 * t370 + t858) * t80) * m(5) + (-t903 * t513 + ((t497 * t869 + t498 * t868 - t925) * t656 + (t497 * t873 - t498 * t871 + t912) * t370 + (t497 * t872 - t498 * t870 + t911) * t369) * t511 + t875 * t455 + t879 * t426 + t880 * t425) * t818 + (t71 * t728 + (t125 * t741 + t71 * t257 + t729 * t85) * t509 + (t124 * t741 + t71 * t256 + t729 * t84) * t508 - t125 * (t397 * t448 - t683) - t124 * (-t397 * t447 - t684) - ((t124 * t257 - t125 * t256) * t511 + (t125 * (t396 * t508 + t321) + t124 * (-t396 * t509 - t322) + t569) * t513) * qJD(3) - g(1) * (t490 + t724) - g(2) * (t489 + t725) - g(3) * (t397 + t847) - t842 * t511 * (-pkin(2) - t806) + (t158 * t508 + t159 * t509 - t321 * t447 + t322 * t448 + t900) * t104) * m(4) + (-t79 * (-t461 * t509 + t532) - t78 * (-t461 * t508 + t553) - (-t259 * t803 + t659 * t78) * t717 + (t739 * t78 - t740 * t79) * t656 - (t748 * t78 - t663) * t455 + t664 * t426 - (t736 * t79 - t665) * t425 + t19 * t652 + (t21 * t650 + t653 * t79 - t841) * t509 + (t19 * t749 + t20 * t650 + t653 * t78) * t508 - g(1) * (-t509 * t759 + t487) - g(2) * (-t508 * t759 + t484) - g(3) * t470 - (-g(3) * t514 + t842 * (-t497 * t878 - t498 * t895 - t494)) * t511 + t853 * (t771 * t895 + t773 * t878 + t501) + (-qJD(5) * t773 - t740 * t369 + t739 * t370 - t749 * t426 + t758 * t508 + t858) * t69) * m(6) + (-t100 * t509 + t101 * t508) * t832 + (-t102 * t509 + t103 * t508) * t833 + (-t105 * t509 + t106 * t508) * t820 + (t508 * t66 - t509 * t65) * t821 + (t508 * t68 - t509 * t67) * t823 - ((t371 * t505 - t372 * t901) * t898 + (t406 * t505 - t407 * t901) * t899 + t17 + t897) * t509 / 0.2e1 + ((-t371 * t901 + t372 * t504) * t898 + t18 + (-t406 * t901 + t407 * t504) * t899 + t896) * t508 / 0.2e1 - t70 * t718 / 0.2e1 + (t865 * t509 + (t388 * t869 + t389 * t868) * t656 + t876 * t455 + t882 * t426 + t881 * t425 + (t388 * t873 - t389 * t871) * t370 + (t388 * t872 - t389 * t870) * t369) * t830 + (t865 * t508 + (t386 * t869 + t387 * t868) * t656 + t877 * t455 + t884 * t426 + t883 * t425 + (t386 * t873 - t387 * t871) * t370 + (t386 * t872 - t387 * t870) * t369) * t828 - (t432 * qJD(2) * t504 - t431 * t508 * t721) * t496 / 0.2e1 + (g(1) * t438 + g(2) * t437 - g(3) * t460 + t119 * t604 + (t460 * qJD(2) ^ 2 + qJDD(2) * t459) * t902 + (-t602 - (-t437 * t508 - t438 * t509) * qJD(2)) * (qJD(2) * t604 + qJD(1))) * m(3); t519 + t64 * t648 + t63 * t649 + (t546 * t513 + (-t510 * t522 + t523 * t512) * t511) * t666 + (-t513 * t83 + (t508 * t59 + t509 * t60) * t511 + (t151 * t511 + t513 * t617) * qJD(2)) * t667 + t70 * t669 + t18 * t675 + t17 * t676 + (-t120 * t513 + t511 * t619) * t832 + (-t121 * t513 + t511 * t618) * t833 + (-t151 * t513 + t511 * t617) * t820 + (-t513 * t81 + (t508 * t65 + t509 * t66) * t511 + (t513 * t619 + t777) * qJD(2)) * t821 + (t427 * t522 + t428 * t523 - t508 * t533) * t822 + (-t513 * t82 + (t508 * t67 + t509 * t68) * t511 + (t513 * t618 + t776) * qJD(2)) * t823 + (t429 * t522 + t430 * t523 - t509 * t533) * t824 + (t105 * t346 + t106 * t345 + t151 * t453 + t447 * t60 + t448 * t59 - t717 * t83) * t814 + (t21 * (t651 + t746) + t78 * (t223 + t752) + t19 * (t219 + t753) + t69 * (t655 + t754) + (t20 * t690 + t78 * t695 + (t509 * t689 * t78 + t690 * t803) * qJD(2)) * t513 + ((t20 * t689 + t692 * t78) * t509 + (t19 * t690 + t69 * t695) * t508) * t511 - t78 * (t556 + t646) - t69 * (t557 + t658) - g(1) * (t424 - t742) - g(2) * (t423 + t874) - g(3) * t723 - (-t687 - t812) * t809 + ((-t258 - t749) * t720 + t844 + t845) * t79) * m(6) + (-t86 * (t646 + t661) - t80 * (t658 + t662) + t46 * (t738 + t746) + t86 * (t180 + t223) + t26 * (t177 + t219) + t80 * (t754 + t756) + (t45 * t747 + t86 * t755 + (t508 * t747 * t80 + t509 * t737 * t86) * qJD(2)) * t513 + ((t45 * t737 + t750 * t86) * t509 + (t26 * t747 + t755 * t80) * t508) * t511 - g(1) * (t424 + t254) - g(2) * (t423 + t250) - (t643 - t812) * t809 + ((-t212 - t258) * t720 + t843 + t844) * t87) * m(5) + (-t125 * (t283 * t717 + t444 * t448) - t124 * (-t284 * t717 - t444 * t447) - t104 * (t283 * t447 - t284 * t448) + (-t124 * t159 + t125 * t158 + t85 * t256 - t84 * t257 + (t569 + (-t124 * t509 + t125 * t508) * t396) * qJD(2)) * t513 + (t125 * (-qJD(2) * t256 + t267 * t508) + t124 * (qJD(2) * t257 - t267 * t509) + t71 * t609 + t104 * (t158 * t509 - t159 * t508) + (t508 * t85 - t509 * t84) * t396) * t511 - g(1) * t284 - g(2) * t283 - g(3) * t444) * m(4); t519 + (g(1) * t742 - g(2) * t874 - g(3) * (-t511 * t687 + t723) - t556 * t78 + t21 * t651 + t78 * t752 + t19 * t753 + (-t20 * t748 - t78 * t757 + (-t508 * t665 - t509 * t664) * qJD(2)) * t513 + (-qJD(2) * t663 + (-t20 * t736 - t751 * t78) * t509 + t841 * t508) * t511 + t845 * t79 + (-t557 + t655) * t69) * m(6) + (t46 * t738 + t45 * (-t214 * t513 - t342 * t764) + t26 * (-t214 * t768 + t177) - g(1) * t254 - g(2) * t250 - g(3) * t414 + (-t212 * t720 + t843) * t87 + (-t143 * t513 + t180 + (-t196 * t511 - t342 * t719) * t509 - t661) * t86 + ((-t143 * t511 - t214 * t719) * t508 + t756 - t662) * t80) * m(5); (t69 * t700 - t270 * t78 - t272 * t79 + (t19 * t511 + t69 * t719) * t497 + t853 * t774 + (t370 * t69 + t656 * t78 - g(1) + t21) * t388 + (-t369 * t69 - t656 * t79 - g(2) + t20) * t386) * m(6);];
tau = t1;
