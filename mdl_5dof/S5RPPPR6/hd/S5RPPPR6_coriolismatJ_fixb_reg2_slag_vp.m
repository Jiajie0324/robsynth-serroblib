% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d5,theta2,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:48
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPPR6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPPR6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPPR6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPPPR6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:47:56
% EndTime: 2019-12-31 17:47:59
% DurationCPUTime: 1.75s
% Computational Cost: add. (1629->178), mult. (3688->286), div. (0->0), fcn. (3568->6), ass. (0->165)
t133 = sin(pkin(8));
t138 = cos(qJ(5));
t136 = cos(pkin(7));
t137 = sin(qJ(5));
t212 = t137 * t136;
t134 = sin(pkin(7));
t216 = t134 * t138;
t87 = t133 * t216 + t212;
t224 = t138 * t87;
t211 = t138 * t136;
t217 = t134 * t137;
t84 = -t133 * t217 + t211;
t225 = t137 * t84;
t236 = (t224 / 0.2e1 - t225 / 0.2e1) * t133;
t130 = t136 ^ 2;
t86 = t133 * t211 - t217;
t234 = t86 / 0.2e1;
t127 = t133 ^ 2;
t233 = -t127 / 0.2e1;
t135 = cos(pkin(8));
t129 = t135 ^ 2;
t232 = t129 / 0.2e1;
t231 = -t136 / 0.2e1;
t131 = t137 ^ 2;
t132 = t138 ^ 2;
t155 = -t132 / 0.2e1 - t131 / 0.2e1;
t213 = t136 * t133;
t57 = (-0.1e1 / 0.2e1 - t155) * t135 * t213;
t230 = t57 * qJD(4);
t85 = t133 * t212 + t216;
t229 = t85 * t86;
t228 = pkin(3) + qJ(2);
t114 = t228 * t134;
t154 = -t134 * qJ(3) - pkin(1);
t88 = (-pkin(2) - qJ(4)) * t136 + t154;
t60 = t133 * t114 + t135 * t88;
t227 = t133 * t85;
t226 = t133 * t86;
t218 = t134 * t135;
t139 = (pkin(4) * t135 + pkin(6) * t133 + t228) * t136;
t56 = pkin(6) * t134 + t60;
t27 = t137 * t56 - t138 * t139;
t28 = t137 * t139 + t138 * t56;
t147 = t114 * t135 - t133 * t88;
t55 = -pkin(4) * t134 - t147;
t3 = -t218 * t55 - t27 * t84 + t28 * t87;
t223 = t3 * qJD(1);
t214 = t135 * t138;
t144 = t133 * t55 + t214 * t28;
t169 = t135 * t217;
t4 = t134 * t144 + t169 * t27;
t222 = t4 * qJD(1);
t215 = t135 * t136;
t12 = -t215 * t27 - t55 * t85;
t221 = t12 * qJD(1);
t220 = t129 * t130;
t13 = -t215 * t28 - t55 * t86;
t219 = t13 * qJD(1);
t14 = t228 * t130 + (t60 * t133 + t135 * t147) * t134;
t210 = t14 * qJD(1);
t141 = t133 * t147;
t15 = -t134 * t141 + t218 * t60;
t209 = t15 * qJD(1);
t16 = -t136 * t141 + t215 * t60;
t208 = t16 * qJD(1);
t18 = -t236 + (t233 + (-0.1e1 / 0.2e1 + t155) * t129) * t134;
t207 = t18 * qJD(1);
t120 = t127 * t231;
t150 = t155 * t129;
t140 = t136 * t150 + t120;
t143 = -t84 * t138 / 0.2e1 - t87 * t137 / 0.2e1;
t30 = t140 + t143;
t206 = t30 * qJD(1);
t31 = t84 * t86 + t85 * t87;
t205 = t31 * qJD(1);
t173 = t85 * t214;
t33 = t134 * t173 - t169 * t86;
t204 = t33 * qJD(1);
t170 = t135 * t212;
t34 = t136 * t173 - t170 * t86;
t203 = t34 * qJD(1);
t35 = t85 ^ 2 - t86 ^ 2;
t202 = t35 * qJD(1);
t174 = t232 + 0.1e1 / 0.2e1;
t151 = t136 * t174;
t160 = -t217 / 0.2e1;
t38 = t138 * t151 + (t160 + t234) * t133;
t201 = t38 * qJD(1);
t158 = t216 / 0.2e1;
t39 = t137 * t151 + (t85 / 0.2e1 + t158) * t133;
t200 = t39 * qJD(1);
t44 = (t134 * t85 + t136 * t84) * t135;
t199 = t44 * qJD(1);
t45 = (-t134 * t86 + t136 * t87) * t135;
t198 = t45 * qJD(1);
t157 = t212 / 0.2e1;
t146 = t133 * t157 - t85 / 0.2e1;
t159 = -t216 / 0.2e1;
t47 = (t159 + t146) * t135;
t197 = t47 * qJD(1);
t156 = -t211 / 0.2e1;
t145 = t133 * t156 + t234;
t49 = (t160 + t145) * t135;
t196 = t49 * qJD(1);
t195 = t57 * qJD(1);
t58 = (t129 * t212 + t227) * t134;
t194 = t58 * qJD(1);
t59 = (t129 * t211 + t226) * t134;
t193 = t59 * qJD(1);
t61 = t137 * t220 + t213 * t85;
t192 = t61 * qJD(1);
t62 = t138 * t220 + t213 * t86;
t191 = t62 * qJD(1);
t184 = t127 + t129;
t89 = t184 * t134;
t80 = t136 * t89;
t190 = t80 * qJD(1);
t82 = (t127 / 0.2e1 + t174) * t136;
t189 = t82 * qJD(1);
t188 = t89 * qJD(1);
t128 = t134 ^ 2;
t118 = t128 + t130;
t90 = t118 * t133;
t187 = t90 * qJD(1);
t91 = t184 * t130;
t186 = t91 * qJD(1);
t92 = t118 * t135;
t185 = t92 * qJD(1);
t183 = qJD(4) * t136;
t182 = qJD(5) * t137;
t181 = qJD(5) * t138;
t113 = t118 * qJ(2);
t180 = t113 * qJD(1);
t179 = t118 * qJD(1);
t178 = t128 * qJD(1);
t177 = t128 * qJD(3);
t176 = t134 * qJD(1);
t175 = t134 * qJD(3);
t172 = qJD(1) * t229;
t171 = qJD(5) * t229;
t168 = qJD(1) * t215;
t167 = t135 * t183;
t166 = qJD(5) * t215;
t165 = t135 * t182;
t164 = t135 * t181;
t163 = t133 * t178;
t162 = t136 * t176;
t161 = t135 * t178;
t153 = t133 * t162;
t152 = t135 * t162;
t149 = qJD(5) + t168;
t5 = t136 * t144 + t170 * t27;
t148 = -qJD(1) * t5 - qJD(3) * t57;
t142 = t134 * t183 + t177;
t115 = t118 * qJD(2);
t101 = -pkin(2) * t136 + t154;
t98 = t113 * qJD(2);
t83 = t129 * t231 + t120 + t136 / 0.2e1;
t48 = t169 / 0.2e1 + t145 * t135;
t46 = (t146 + t158) * t135;
t41 = t129 * t156 - t226 / 0.2e1 + t133 * t160 + t211 / 0.2e1;
t40 = t129 * t157 + t227 / 0.2e1 + t133 * t159 - t212 / 0.2e1;
t29 = t140 - t143;
t17 = (t232 + t233 + t150) * t134 + t236;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, t98, 0, 0, 0, 0, 0, 0, t115, -t136 * t175, t177, -t101 * t175 + t98, 0, 0, 0, 0, 0, 0, t92 * qJD(2) + t133 * t142, -t90 * qJD(2) + t135 * t142, qJD(3) * t80 + qJD(4) * t91, qJD(2) * t14 - qJD(3) * t15 - qJD(4) * t16, -t171, t35 * qJD(5), t85 * t166, t171, t86 * t166, 0, qJD(2) * t44 + qJD(3) * t58 + qJD(4) * t61 + qJD(5) * t13, -qJD(2) * t45 + qJD(3) * t59 + qJD(4) * t62 - qJD(5) * t12, qJD(2) * t31 - qJD(3) * t33 - qJD(4) * t34, qJD(2) * t3 - qJD(3) * t4 - qJD(4) * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, t180, 0, 0, 0, 0, 0, 0, t179, 0, 0, t180, 0, 0, 0, 0, 0, 0, t185, -t187, 0, qJD(4) * t83 + t210, 0, 0, 0, 0, 0, 0, qJD(5) * t41 + t199, qJD(5) * t40 - t198, t205, t223 + t17 * qJD(3) + t29 * qJD(4) + (-t133 * t134 + t224 - t225) * qJD(2) * t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t162, t178, -t101 * t176, 0, 0, 0, 0, 0, 0, t163, t161, t190, -t209, 0, 0, 0, 0, 0, 0, qJD(5) * t48 + t194, qJD(5) * t46 + t193, -t204, -t222 + t17 * qJD(2) + (-t131 - t132 + 0.1e1) * t135 * t133 * t175 - t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, t152, t186, qJD(2) * t83 - t208, 0, 0, 0, 0, 0, 0, t192, t191, -t203, qJD(2) * t29 + t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, t202, t149 * t85, t172, t149 * t86, 0, qJD(2) * t41 + qJD(3) * t48 - qJD(5) * t28 + t219, qJD(2) * t40 + qJD(3) * t46 + qJD(5) * t27 - t221, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t179, -t180, 0, 0, 0, 0, 0, 0, -t179, 0, 0, -t180 - t175, 0, 0, 0, 0, 0, 0, -t185, t187, 0, -qJD(3) * t89 - qJD(4) * t82 - t210, 0, 0, 0, 0, 0, 0, -qJD(5) * t38 - t199, qJD(5) * t39 + t198, -t205, qJD(3) * t18 + qJD(4) * t30 - t223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t188, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, 0, 0, 0, 0, 0, 0, 0, 0, 0, t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t164 - t201, t165 + t200, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t178, (qJD(1) * t101 + qJD(2)) * t134, 0, 0, 0, 0, 0, 0, -t163, -t161, -t190, qJD(2) * t89 + t209, 0, 0, 0, 0, 0, 0, qJD(5) * t49 - t194, qJD(5) * t47 - t193, t204, -qJD(2) * t18 + t222 - t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t133 * t181 + t196, t133 * t182 + t197, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t153, -t152, -t186, qJD(2) * t82 + t208, 0, 0, 0, 0, 0, 0, -t136 * t165 - t192, -t136 * t164 - t191, t203, -qJD(2) * t30 - t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t149 * t137, -t149 * t138, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, -t202, -t85 * t168, -t172, -t86 * t168, 0, qJD(2) * t38 - qJD(3) * t49 + t137 * t167 - t219, -qJD(2) * t39 - qJD(3) * t47 + t138 * t167 + t221, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, -t200, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t196, -t197, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137 * t168, t138 * t168, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
