% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:18
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPR6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRPR6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:17:53
% EndTime: 2019-12-31 18:17:55
% DurationCPUTime: 0.80s
% Computational Cost: add. (489->95), mult. (957->90), div. (0->0), fcn. (740->6), ass. (0->71)
t57 = sin(qJ(3));
t67 = cos(pkin(8)) * pkin(1) + pkin(2);
t63 = t57 * t67;
t93 = cos(qJ(3));
t95 = sin(pkin(8)) * pkin(1);
t69 = t93 * t95;
t36 = t69 + t63;
t34 = qJ(4) + t36;
t100 = -qJ(4) / 0.2e1 - t34 / 0.2e1;
t56 = sin(qJ(5));
t53 = t56 ^ 2;
t58 = cos(qJ(5));
t54 = t58 ^ 2;
t45 = t53 - t54;
t51 = qJD(1) + qJD(3);
t99 = t51 * t45;
t81 = t36 * qJD(3);
t82 = t36 * qJD(1);
t98 = t82 + t81;
t35 = t57 * t95 - t93 * t67;
t92 = t34 * t35;
t49 = qJD(4) * t56;
t83 = t35 * qJD(3);
t91 = -t56 * t83 + t49;
t50 = qJD(4) * t58;
t90 = -t58 * t83 + t50;
t11 = (t53 + t54) * t36;
t65 = -pkin(3) + t35;
t33 = -pkin(7) + t65;
t1 = t33 * t11 - t92;
t89 = t1 * qJD(1);
t2 = t65 * t36 - t92;
t88 = t2 * qJD(1);
t87 = t35 * qJ(4);
t86 = t11 * qJD(1);
t85 = t34 * qJD(1);
t84 = t35 * qJD(1);
t80 = t56 * qJD(1);
t79 = t56 * qJD(5);
t78 = t58 * qJD(1);
t77 = t58 * qJD(5);
t76 = -t83 + qJD(4);
t75 = qJ(4) * qJD(3);
t74 = qJ(4) * qJD(5);
t73 = t34 * t80;
t72 = t34 * t78;
t71 = t35 * t80;
t70 = t35 * t78;
t40 = t51 * t58;
t68 = (t53 / 0.2e1 + t54 / 0.2e1) * t36;
t66 = t36 / 0.2e1 + t100;
t60 = -qJ(4) - t69 / 0.2e1 - t63 / 0.2e1;
t4 = t68 + t60;
t64 = -t4 * qJD(1) + t75;
t6 = t66 * t56;
t62 = -t6 * qJD(1) + t56 * t75;
t7 = t66 * t58;
t61 = t7 * qJD(1) - t58 * t75;
t59 = -pkin(3) - pkin(7);
t52 = qJ(4) * qJD(4);
t46 = t56 * t77;
t44 = t51 * qJ(4);
t42 = t45 * qJD(5);
t39 = t51 * t56;
t37 = t56 * t40;
t20 = t34 * qJD(4);
t10 = t11 * qJD(3);
t9 = t34 * t58;
t8 = (-t36 / 0.2e1 + t100) * t56;
t5 = t68 - t60;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t76, t2 * qJD(3) + t20, -t46, t42, 0, t46, 0, 0, t34 * t77 + t91, -t34 * t79 + t90, -t10, t1 * qJD(3) + t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, t84 + t83, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, -t84 + t76, t88 + (-t36 * pkin(3) - t87) * qJD(3) + t20, -t46, t42, 0, t46, 0, 0, t9 * qJD(5) - t71 + t91, t8 * qJD(5) - t70 + t90, -t10 - t86, t89 + (t59 * t11 - t87) * qJD(3) + t5 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51, t34 * qJD(3) + t85, 0, 0, 0, 0, 0, 0, t39, t40, 0, t5 * qJD(3) + t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t99, -t79, t37, -t77, 0, t9 * qJD(3) - t33 * t79 + t72, t8 * qJD(3) - t33 * t77 - t73, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t77, t79, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, -t84, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, t84 + qJD(4), t52 - t88, -t46, t42, 0, t46, 0, 0, -t7 * qJD(5) + t49 + t71, t6 * qJD(5) + t50 + t70, t86, -t4 * qJD(4) - t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t52, -t46, t42, 0, t46, 0, 0, t58 * t74 + t49, -t56 * t74 + t50, 0, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51, t44, 0, 0, 0, 0, 0, 0, t39, t40, 0, t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t99, -t79, t37, -t77, 0, -t59 * t79 - t61, -t59 * t77 - t62, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, -t85 - t75, 0, 0, 0, 0, 0, 0, -t39, -t40, 0, t4 * qJD(3) - t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, -t44, 0, 0, 0, 0, 0, 0, -t39, -t40, 0, -t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t79, -t77, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, -t99, 0, -t37, 0, 0, t7 * qJD(3) - t72, -t6 * qJD(3) + t73, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, -t99, 0, -t37, 0, 0, t61, t62, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
