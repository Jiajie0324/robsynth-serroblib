% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4,d5]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x31]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:26
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRR8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRR8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:25:50
% EndTime: 2019-12-31 22:26:12
% DurationCPUTime: 9.72s
% Computational Cost: add. (8773->513), mult. (18682->687), div. (0->0), fcn. (20790->8), ass. (0->440)
t384 = sin(qJ(2));
t386 = cos(qJ(2));
t633 = sin(qJ(3));
t635 = cos(qJ(3));
t343 = t384 * t633 - t386 * t635;
t640 = -t343 / 0.2e1;
t385 = cos(qJ(4));
t624 = t385 * pkin(4);
t377 = -pkin(3) - t624;
t689 = t377 / 0.2e1;
t691 = t343 / 0.2e1;
t514 = t635 * pkin(2);
t376 = -t514 - pkin(3);
t355 = t376 - t624;
t690 = t355 / 0.2e1;
t521 = qJD(2) + qJD(3);
t370 = t633 * t386;
t373 = t635 * t384;
t345 = -t373 - t370;
t383 = sin(qJ(4));
t634 = cos(qJ(5));
t499 = t634 * t383;
t382 = sin(qJ(5));
t569 = t382 * t385;
t430 = t499 + t569;
t205 = t430 * t345;
t643 = pkin(8) + pkin(9);
t357 = t643 * t383;
t359 = t643 * t385;
t431 = -t357 * t634 - t359 * t382;
t687 = t205 * t689 + t431 * t640;
t644 = pkin(6) + pkin(7);
t358 = t644 * t384;
t360 = t644 * t386;
t449 = t358 * t635 + t360 * t633;
t680 = t449 * t385;
t488 = t680 / 0.2e1;
t229 = t385 * t343;
t327 = t345 * pkin(4);
t681 = t449 * t383;
t688 = pkin(9) * t229 - t327 + t681;
t520 = qJD(4) + qJD(5);
t226 = t383 * t343;
t516 = pkin(9) * t226;
t627 = t345 * pkin(3);
t628 = t343 * pkin(8);
t252 = -t627 + t628;
t236 = t383 * t252;
t548 = t680 - t236;
t123 = t516 - t548;
t500 = t634 * t123;
t454 = -t500 / 0.2e1;
t237 = t385 * t252;
t101 = t237 + t688;
t575 = t382 * t101;
t419 = -t575 / 0.2e1 + t454;
t686 = t419 - t687;
t498 = t634 * t385;
t570 = t382 * t383;
t655 = t498 - t570;
t203 = t655 * t345;
t266 = -t357 * t382 + t359 * t634;
t685 = t203 * t689 + t266 * t691;
t513 = t633 * pkin(2);
t375 = t513 + pkin(8);
t623 = pkin(9) + t375;
t328 = t623 * t383;
t329 = t623 * t385;
t472 = t328 * t634 + t329 * t382;
t679 = t205 * t690 + t472 * t691;
t221 = -t328 * t382 + t329 * t634;
t684 = t203 * t690 + t221 * t691;
t660 = t521 * t345;
t683 = t343 * t660;
t330 = t373 / 0.2e1 + t370 / 0.2e1;
t545 = qJD(1) * t345;
t494 = t343 * t545;
t173 = -qJD(4) * t330 + t494;
t470 = t521 * t430;
t641 = t430 / 0.2e1;
t642 = -t655 / 0.2e1;
t86 = t203 * t642 + t205 * t641;
t63 = t86 * qJD(1) + t470 * t655;
t590 = t345 * t383;
t179 = -pkin(4) * t590 + t449;
t610 = t179 * t430;
t142 = t610 / 0.2e1;
t504 = t634 * t101;
t571 = t382 * t123;
t417 = -t571 / 0.2e1 + t504 / 0.2e1;
t35 = t142 + t417 - t685;
t625 = t384 * pkin(2);
t232 = t252 + t625;
t216 = t385 * t232;
t100 = t216 + t688;
t505 = t634 * t100;
t215 = t383 * t232;
t549 = -t215 + t680;
t117 = t516 - t549;
t572 = t382 * t117;
t418 = -t572 / 0.2e1 + t505 / 0.2e1;
t29 = t142 + t418 - t684;
t501 = t634 * t117;
t455 = -t501 / 0.2e1;
t576 = t382 * t100;
t420 = -t576 / 0.2e1 + t455;
t678 = t420 - t679;
t677 = t418 + t684;
t676 = t417 + t685;
t378 = -pkin(2) * t386 - pkin(1);
t630 = t343 * pkin(3);
t451 = t345 * pkin(8) + t630;
t224 = t378 + t451;
t450 = -t358 * t633 + t360 * t635;
t663 = t450 * t383;
t126 = -t224 * t385 + t663;
t675 = (t126 - t663) * t345;
t662 = t450 * t385;
t127 = t224 * t383 + t662;
t674 = (t127 - t662) * t345;
t673 = t521 * t449;
t672 = t521 * t450;
t671 = t520 * t221;
t670 = t520 * t266;
t669 = t520 * t431;
t668 = 0.2e1 * t345;
t666 = t343 * t520;
t433 = -pkin(4) * t226 + t450;
t665 = t433 * t655;
t664 = t433 * t430;
t250 = t521 * t343;
t339 = t345 ^ 2;
t519 = -t343 ^ 2 + t339;
t591 = t345 * t375;
t592 = t343 * t376;
t654 = t630 / 0.2e1 - t592 / 0.2e1 + t591 / 0.2e1 + (-t633 * t345 / 0.2e1 + t635 * t640) * pkin(2);
t137 = qJD(5) * t330 - t173;
t515 = -t634 / 0.2e1;
t462 = pkin(4) * t515;
t631 = pkin(4) * t383;
t510 = -t631 / 0.2e1;
t589 = t345 * t385;
t517 = pkin(4) * t589;
t652 = t205 * t510 + t655 * t517 / 0.2e1 + t345 * t462;
t547 = qJD(1) * t203;
t38 = -t205 * t547 + t521 * t86;
t67 = t203 * t430 + t205 * t655;
t82 = -t203 ^ 2 + t205 ^ 2;
t11 = t82 * qJD(1) + t521 * t67;
t193 = -t430 ^ 2 + t655 ^ 2;
t47 = t67 * qJD(1) + t193 * t521;
t207 = t655 * t343;
t114 = pkin(9) * t590 + t127;
t502 = t634 * t114;
t113 = pkin(9) * t589 - t126;
t629 = t343 * pkin(4);
t95 = t113 + t629;
t54 = t382 * t95 + t502;
t651 = -t179 * t207 - t203 * t433 + t345 * t54;
t204 = t430 * t343;
t573 = t382 * t114;
t94 = t634 * t95;
t53 = -t94 + t573;
t650 = -t179 * t204 - t205 * t433 + t345 * t53;
t381 = t385 ^ 2;
t646 = t383 ^ 2;
t225 = (-t646 / 0.2e1 + t381 / 0.2e1) * t345;
t566 = t383 * t385;
t497 = qJD(1) * t566;
t649 = t225 * t521 + t339 * t497;
t518 = -t381 + t646;
t195 = -0.2e1 * t345 * t497 + t518 * t521;
t648 = t520 * t472;
t645 = -pkin(3) / 0.2e1;
t639 = t375 / 0.2e1;
t638 = t383 / 0.2e1;
t637 = -t385 / 0.2e1;
t636 = t385 / 0.2e1;
t632 = pkin(2) * t343;
t626 = t382 * pkin(4);
t622 = t520 * t67;
t621 = t520 * t86;
t620 = pkin(3) * qJD(3);
t2 = (t505 - t572) * t343 + t650;
t619 = t2 * qJD(1);
t3 = -(t501 + t576) * t343 + t651;
t618 = t3 * qJD(1);
t4 = (t504 - t571) * t343 + t650;
t617 = t4 * qJD(1);
t5 = -(t500 + t575) * t343 + t651;
t616 = t5 * qJD(1);
t613 = t179 * t203;
t612 = t179 * t205;
t611 = t179 * t655;
t453 = -t629 / 0.2e1 - t95 / 0.2e1;
t18 = (t113 / 0.2e1 + t453) * t382;
t609 = t18 * qJD(1);
t424 = -t94 / 0.2e1 + t343 * t462;
t503 = t634 * t113;
t20 = t503 / 0.2e1 + t424;
t606 = t20 * qJD(1);
t604 = t472 * t345;
t602 = t221 * t345;
t600 = t431 * t345;
t595 = t266 * t345;
t574 = t382 * t113;
t61 = -t502 - t574;
t30 = t205 * t517 + t343 * t61 - t613;
t594 = t30 * qJD(1);
t62 = t503 - t573;
t31 = t203 * t517 - t343 * t62 + t612;
t593 = t31 * qJD(1);
t587 = t355 * t204;
t585 = t355 * t207;
t584 = t355 * t655;
t583 = t355 * t430;
t581 = t377 * t204;
t579 = t377 * t207;
t578 = t377 * t655;
t577 = t377 * t430;
t41 = t343 * t53 + t612;
t564 = t41 * qJD(1);
t42 = -t343 * t54 - t613;
t563 = t42 * qJD(1);
t45 = t216 * t343 + t675;
t562 = t45 * qJD(1);
t46 = t674 + (t549 - t680) * t343;
t561 = t46 * qJD(1);
t51 = t237 * t343 + t675;
t560 = t51 * qJD(1);
t52 = t674 + (t548 - t680) * t343;
t559 = t52 * qJD(1);
t463 = -t514 / 0.2e1;
t435 = -t376 / 0.2e1 + t463;
t461 = -t513 / 0.2e1;
t389 = (t461 + t639 - pkin(8) / 0.2e1) * t345 + (t645 + t435) * t343;
t57 = t389 * t383;
t558 = t57 * qJD(1);
t68 = -t203 * t204 - t205 * t207;
t556 = t68 * qJD(1);
t78 = -t126 * t343 - t449 * t590;
t555 = t78 * qJD(1);
t79 = -t127 * t343 - t449 * t589;
t554 = t79 * qJD(1);
t87 = t204 * t343 - t205 * t345;
t551 = t87 * qJD(1);
t88 = t203 * t345 - t207 * t343;
t550 = t88 * qJD(1);
t546 = qJD(1) * t343;
t544 = qJD(1) * t378;
t543 = qJD(1) * t386;
t542 = qJD(2) * t355;
t541 = qJD(2) * t376;
t540 = qJD(3) * t377;
t539 = qJD(3) * t378;
t538 = qJD(4) * t383;
t537 = qJD(4) * t385;
t536 = qJD(5) * t355;
t535 = qJD(5) * t377;
t416 = t569 / 0.2e1 + t499 / 0.2e1;
t129 = (t641 + t416) * t343;
t124 = t129 * qJD(1);
t415 = -t498 / 0.2e1 + t570 / 0.2e1;
t130 = (t642 + t415) * t343;
t125 = t130 * qJD(1);
t170 = t519 * t383;
t534 = t170 * qJD(1);
t171 = t519 * t385;
t533 = t171 * qJD(1);
t532 = t519 * qJD(1);
t213 = t343 * t625 - t345 * t378;
t531 = t213 * qJD(1);
t214 = -t343 * t378 - t345 * t625;
t530 = t214 * qJD(1);
t529 = t225 * qJD(1);
t528 = t226 * qJD(1);
t219 = t229 * qJD(1);
t235 = t518 * t339;
t527 = t235 * qJD(1);
t526 = t330 * qJD(1);
t365 = -t384 ^ 2 + t386 ^ 2;
t524 = t365 * qJD(1);
t523 = t384 * qJD(2);
t522 = t386 * qJD(2);
t512 = pkin(1) * t384 * qJD(1);
t511 = pkin(1) * t543;
t508 = t327 / 0.2e1;
t141 = t611 / 0.2e1;
t487 = t589 / 0.2e1;
t507 = -pkin(4) * t430 * t487 + t203 * t510 + t141;
t506 = t385 * t635;
t496 = qJD(4) * t343 * t345;
t493 = t343 * t544;
t492 = t345 * t544;
t368 = t383 * t537;
t491 = t384 * t543;
t490 = -t611 / 0.2e1;
t489 = -t610 / 0.2e1;
t482 = -t215 / 0.2e1 + t488;
t481 = t236 / 0.2e1 - t680 / 0.2e1;
t479 = t689 + t690;
t478 = t635 * qJD(2);
t477 = t635 * qJD(3);
t476 = t634 * qJD(4);
t475 = t634 * qJD(5);
t474 = t633 * qJD(2);
t473 = t633 * qJD(3);
t468 = t521 * t385;
t467 = t520 * t430;
t466 = qJD(4) + t546;
t465 = pkin(2) * t473;
t464 = pkin(2) * t474;
t460 = t635 * t570;
t457 = t635 * t634;
t456 = -t506 / 0.2e1;
t448 = t383 * t468;
t446 = t521 * t566;
t442 = qJD(5) + t466;
t321 = t655 * t631;
t185 = -t321 + t583;
t391 = (t205 * t638 + (-t636 * t655 + t515) * t345) * pkin(4) + t489;
t8 = t391 + t677;
t440 = -qJD(1) * t8 + qJD(2) * t185;
t322 = t430 * t631;
t186 = t322 + t584;
t392 = (t203 * t638 + (t382 / 0.2e1 - t430 * t637) * t345) * pkin(4) + t490;
t7 = t392 + t678;
t439 = -qJD(1) * t7 + qJD(2) * t186;
t438 = t591 - t592;
t437 = t345 * t466;
t436 = -t457 / 0.2e1;
t434 = t627 / 0.2e1 - t628 / 0.2e1;
t432 = t376 * t345 / 0.2e1 + t343 * t639;
t26 = t489 + t677;
t429 = qJD(1) * t26 - t430 * t542;
t27 = t490 + t678;
t428 = qJD(1) * t27 - t542 * t655;
t414 = t432 * t385;
t71 = -t216 / 0.2e1 - t414;
t427 = -qJD(1) * t71 - t383 * t541;
t395 = t383 * t432 + t488;
t69 = t395 - t482;
t426 = -qJD(1) * t69 - t385 * t541;
t425 = t385 * t437;
t423 = pkin(3) / 0.2e1 + t435;
t422 = t434 * t385;
t421 = t448 * t668;
t394 = (t382 * t456 + t383 * t436) * pkin(2);
t133 = -t430 * t479 + t394;
t118 = t321 + t133;
t14 = t391 + t676;
t211 = -t321 + t577;
t410 = qJD(1) * t14 + qJD(2) * t118 - qJD(3) * t211;
t393 = (t385 * t436 + t460 / 0.2e1) * pkin(2);
t134 = -t479 * t655 + t393;
t119 = -t322 + t134;
t13 = t392 + t686;
t212 = t322 + t578;
t409 = qJD(1) * t13 + qJD(2) * t119 - qJD(3) * t212;
t388 = -t665 / 0.2e1 + t604 / 0.2e1 - t587 / 0.2e1 + (-t382 * t506 - t383 * t457) * t632 / 0.2e1 + t205 * t461;
t400 = t665 / 0.2e1 + t600 / 0.2e1 + t581 / 0.2e1;
t23 = t388 + t400;
t408 = -qJD(1) * t23 + t464 * t655;
t59 = t389 * t385;
t407 = -qJD(1) * t59 - t383 * t464;
t387 = t664 / 0.2e1 + t602 / 0.2e1 - t585 / 0.2e1 - (t385 * t457 - t460) * t632 / 0.2e1 + t203 * t461;
t399 = -t664 / 0.2e1 - t595 / 0.2e1 + t579 / 0.2e1;
t25 = t387 + t399;
t406 = -qJD(1) * t25 - t430 * t464;
t279 = t423 * t383;
t75 = -t237 / 0.2e1 + t422;
t405 = -qJD(1) * t75 + qJD(2) * t279 + t383 * t620;
t280 = t423 * t385;
t396 = -t383 * t434 + t488;
t73 = t396 + t481;
t404 = -qJD(1) * t73 + qJD(2) * t280 + t385 * t620;
t403 = (-t474 - t473) * pkin(2);
t32 = t489 + t676;
t402 = qJD(1) * t32 + qJD(2) * t133 - t430 * t540;
t33 = t490 + t686;
t401 = qJD(1) * t33 + qJD(2) * t134 - t540 * t655;
t135 = t578 / 0.2e1 + t584 / 0.2e1 + t393;
t136 = t577 / 0.2e1 + t583 / 0.2e1 + t394;
t363 = t383 * t465;
t356 = t518 * qJD(4);
t311 = t430 * t465;
t310 = t655 * t465;
t282 = pkin(2) * t456 + pkin(3) * t637 + t376 * t636;
t281 = t376 * t638 + (t463 + t645) * t383;
t233 = t521 * t330;
t217 = t225 * qJD(4);
t184 = t219 + t537;
t183 = -t528 - t538;
t155 = t446 - t529;
t154 = -t448 + t529;
t147 = t655 * t467;
t145 = 0.2e1 * t383 * t425;
t132 = (-t430 / 0.2e1 + t416) * t343;
t131 = t343 * t415 - t640 * t655;
t128 = -t381 * t494 - t217;
t121 = t322 + t135;
t120 = -t321 + t136;
t112 = qJD(4) * t229 - t533;
t111 = -qJD(4) * t226 + t534;
t110 = t520 * t193;
t97 = -t467 - t124;
t96 = t520 * t655 - t125;
t83 = -t217 + (t381 * t545 - t448) * t343;
t81 = -t383 * t660 + t533;
t80 = -t345 * t468 - t534;
t77 = (qJD(4) - t546) * t566 * t668 + t518 * t250;
t76 = t681 + t237 / 0.2e1 + t422;
t74 = t396 - t481;
t72 = t681 + t216 / 0.2e1 - t414;
t70 = t395 + t482;
t60 = pkin(8) * t487 + t385 * t654 + t663;
t58 = -t662 + pkin(8) * t590 / 0.2e1 + t654 * t383;
t56 = t130 * t521 - t205 * t546;
t55 = t129 * t521 - t203 * t546;
t50 = -t130 * t520 - t550;
t49 = -t129 * t520 - t551;
t44 = t131 * t521 + t205 * t442;
t43 = t132 * t521 + t203 * t442;
t40 = -t207 * t547 + t621;
t37 = t131 * t520 - t430 * t660 + t550;
t36 = t132 * t520 - t655 * t660 + t551;
t34 = t141 + t419 + t687;
t28 = t141 + t420 + t679;
t24 = t387 - t399;
t22 = t388 - t400;
t21 = t573 - t503 / 0.2e1 + t424;
t19 = -t502 - t574 / 0.2e1 + t453 * t382;
t17 = -(t470 - t547) * t207 + t621;
t16 = t454 + (t508 - t101 / 0.2e1) * t382 + t507 + t687;
t15 = t652 + t35;
t10 = t455 + (t508 - t100 / 0.2e1) * t382 + t507 + t679;
t9 = t652 + t29;
t6 = -t556 + t622;
t1 = t556 + t521 * (t204 * t430 - t207 * t655) + t622;
t12 = [0, 0, 0, t384 * t522, t365 * qJD(2), 0, 0, 0, -pkin(1) * t523, -pkin(1) * t522, t683, -t521 * t519, 0, 0, 0, qJD(2) * t213 - t345 * t539, qJD(2) * t214 - t343 * t539, -t339 * t368 + t381 * t683, t235 * qJD(4) - t343 * t421, t171 * t521 + t383 * t496, -t170 * t521 + t385 * t496, -t683, qJD(2) * t45 + qJD(3) * t51 + qJD(4) * t79, qJD(2) * t46 + qJD(3) * t52 - qJD(4) * t78, (-t205 * t520 + t207 * t521) * t203, t520 * t82 + t521 * t68, t205 * t666 + t521 * t88, t203 * t666 + t521 * t87, -t683, qJD(2) * t2 + qJD(3) * t4 + qJD(4) * t30 + qJD(5) * t42, qJD(2) * t3 + qJD(3) * t5 + qJD(4) * t31 + qJD(5) * t41; 0, 0, 0, t491, t524, t522, -t523, 0, -pkin(6) * t522 - t512, pkin(6) * t523 - t511, t494, -t532, -t250, t660, 0, t531 - t672, t530 + t673, t83, t77, t81, t80, -t173, t562 + (t383 * t438 - t662) * qJD(2) + t58 * qJD(3) + t72 * qJD(4), t561 + (t385 * t438 + t663) * qJD(2) + t60 * qJD(3) + t70 * qJD(4), t17, t1, t37, t36, t137, t619 + (-t587 + t604 - t665) * qJD(2) + t22 * qJD(3) + t9 * qJD(4) + t29 * qJD(5), t618 + (-t585 + t602 + t664) * qJD(2) + t24 * qJD(3) + t10 * qJD(4) + t28 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, -t532, -t250, t660, 0, -t492 - t672, -t493 + t673, t83, t77, t81, t80, -t173, t560 + t58 * qJD(2) + (t383 * t451 - t662) * qJD(3) + t76 * qJD(4), t559 + t60 * qJD(2) + (t385 * t451 + t663) * qJD(3) + t74 * qJD(4), t17, t1, t37, t36, t137, t617 + t22 * qJD(2) + (-t581 - t600 - t665) * qJD(3) + t15 * qJD(4) + t35 * qJD(5), t616 + t24 * qJD(2) + (-t579 + t595 + t664) * qJD(3) + t16 * qJD(4) + t34 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t649, t446 * t668 + t527, t383 * t437, t425, t233, qJD(2) * t72 + qJD(3) * t76 - qJD(4) * t127 + t554, qJD(2) * t70 + qJD(3) * t74 + qJD(4) * t126 - t555, t38, t11, t44, t43, t233, qJD(2) * t9 + qJD(3) * t15 + qJD(4) * t61 + qJD(5) * t19 + t594, qJD(2) * t10 + qJD(3) * t16 - qJD(4) * t62 + qJD(5) * t21 + t593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, t11, t44, t43, t233, qJD(2) * t29 + qJD(3) * t35 + qJD(4) * t19 - qJD(5) * t54 + t563, qJD(2) * t28 + qJD(3) * t34 + qJD(4) * t21 + qJD(5) * t53 + t564; 0, 0, 0, -t491, -t524, 0, 0, 0, t512, t511, -t494, t532, 0, 0, 0, -t531, -t530, t128, t145, t112, t111, t173, qJD(3) * t57 + qJD(4) * t71 - t562, qJD(3) * t59 + qJD(4) * t69 - t561, t40, t6, t50, t49, -t137, qJD(3) * t23 - qJD(4) * t8 - qJD(5) * t26 - t619, qJD(3) * t25 - qJD(4) * t7 - qJD(5) * t27 - t618; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t465, -pkin(2) * t477, t368, -t356, 0, 0, 0, t376 * t538 - t385 * t465, t376 * t537 + t363, t147, t110, 0, 0, 0, qJD(4) * t185 + t430 * t536 - t310, qJD(4) * t186 + t536 * t655 + t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t403, (-t478 - t477) * pkin(2), t368, -t356, 0, 0, 0, t281 * qJD(4) + t385 * t403 + t558, qJD(4) * t282 + t363 - t407, t147, t110, 0, 0, 0, qJD(4) * t120 + qJD(5) * t136 - t310 - t408, qJD(4) * t121 + qJD(5) * t135 + t311 - t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155, -t195, t184, t183, -t526, qJD(3) * t281 - t375 * t537 - t427, qJD(3) * t282 + t375 * t538 - t426, t63, t47, t96, t97, -t526, qJD(3) * t120 + t440 - t671, qJD(3) * t121 + t439 + t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, t47, t96, t97, -t526, qJD(3) * t136 - t429 - t671, qJD(3) * t135 - t428 + t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t494, t532, 0, 0, 0, t492, t493, t128, t145, t112, t111, t173, -qJD(2) * t57 + qJD(4) * t75 - t560, -qJD(2) * t59 + qJD(4) * t73 - t559, t40, t6, t50, t49, -t137, -qJD(2) * t23 - qJD(4) * t14 - qJD(5) * t32 - t617, -qJD(2) * t25 - qJD(4) * t13 - qJD(5) * t33 - t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t464, pkin(2) * t478, t368, -t356, 0, 0, 0, -qJD(4) * t279 + t385 * t464 - t558, -qJD(4) * t280 + t407, t147, t110, 0, 0, 0, -qJD(4) * t118 - qJD(5) * t133 + t408, -qJD(4) * t119 - qJD(5) * t134 + t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t368, -t356, 0, 0, 0, -pkin(3) * t538, -pkin(3) * t537, t147, t110, 0, 0, 0, qJD(4) * t211 + t430 * t535, qJD(4) * t212 + t535 * t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155, -t195, t184, t183, -t526, -pkin(8) * t537 - t405, pkin(8) * t538 - t404, t63, t47, t96, t97, -t526, -t410 - t670, -t409 - t669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, t47, t96, t97, -t526, -t402 - t670, -t401 - t669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t649, -t421 - t527, -t229 * t521 - t383 * t494, t226 * t521 - t385 * t494, t233, -qJD(2) * t71 - qJD(3) * t75 - t554, -qJD(2) * t69 - qJD(3) * t73 + t555, -t38, -t11, t56, t55, t233, qJD(2) * t8 + qJD(3) * t14 + qJD(5) * t18 - t594, qJD(2) * t7 + qJD(3) * t13 + qJD(5) * t20 - t593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, t195, -t219, t528, t526, qJD(3) * t279 + t427, qJD(3) * t280 + t426, -t63, -t47, t125, t124, t526, qJD(3) * t118 - t440, qJD(3) * t119 - t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, t195, -t219, t528, t526, t405, t404, -t63, -t47, t125, t124, t526, t410, t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t626, -pkin(4) * t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t520 * t626 + t609, t606 + (-t476 - t475) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, -t11, t56, t55, t233, qJD(2) * t26 + qJD(3) * t32 - qJD(4) * t18 - t563, qJD(2) * t27 + qJD(3) * t33 - qJD(4) * t20 - t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t63, -t47, t125, t124, t526, qJD(3) * t133 + t429, qJD(3) * t134 + t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t63, -t47, t125, t124, t526, t402, t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t626 - t609, pkin(4) * t476 - t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t12;
