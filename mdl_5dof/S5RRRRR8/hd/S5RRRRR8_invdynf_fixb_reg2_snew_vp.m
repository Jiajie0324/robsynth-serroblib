% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4,d5]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:26
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRRR8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR8_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR8_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR8_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRR8_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:26:44
% EndTime: 2019-12-31 22:26:48
% DurationCPUTime: 3.88s
% Computational Cost: add. (28022->260), mult. (56740->358), div. (0->0), fcn. (41176->10), ass. (0->206)
t1639 = sin(qJ(3));
t1644 = cos(qJ(3));
t1645 = cos(qJ(2));
t1680 = qJD(1) * t1645;
t1640 = sin(qJ(2));
t1681 = qJD(1) * t1640;
t1605 = t1639 * t1681 - t1644 * t1680;
t1604 = qJD(4) + t1605;
t1603 = qJD(5) + t1604;
t1691 = qJD(5) + t1603;
t1632 = t1645 * qJDD(1);
t1666 = qJD(2) * t1681;
t1613 = t1632 - t1666;
t1636 = t1645 ^ 2;
t1648 = qJD(1) ^ 2;
t1641 = sin(qJ(1));
t1646 = cos(qJ(1));
t1621 = t1641 * g(1) - t1646 * g(2);
t1658 = qJDD(1) * pkin(1) + t1621;
t1659 = qJD(2) * pkin(2) - pkin(7) * t1681;
t1582 = t1613 * pkin(2) + (t1636 * pkin(7) + pkin(6)) * t1648 - t1659 * t1681 + t1658;
t1607 = (t1639 * t1645 + t1640 * t1644) * qJD(1);
t1634 = qJD(2) + qJD(3);
t1638 = sin(qJ(4));
t1643 = cos(qJ(4));
t1591 = t1638 * t1607 - t1643 * t1634;
t1593 = t1643 * t1607 + t1638 * t1634;
t1637 = sin(qJ(5));
t1642 = cos(qJ(5));
t1571 = t1642 * t1591 + t1637 * t1593;
t1690 = t1571 ^ 2;
t1573 = -t1637 * t1591 + t1642 * t1593;
t1689 = t1573 ^ 2;
t1688 = t1591 ^ 2;
t1687 = t1593 ^ 2;
t1686 = t1603 ^ 2;
t1685 = t1604 ^ 2;
t1684 = t1605 ^ 2;
t1683 = t1607 ^ 2;
t1682 = t1634 ^ 2;
t1679 = t1573 * t1571;
t1678 = t1593 * t1591;
t1677 = t1604 * t1591;
t1676 = t1607 * t1605;
t1675 = t1636 * t1648;
t1674 = t1640 * t1648;
t1673 = qJD(3) - t1634;
t1672 = qJD(4) - t1604;
t1671 = qJD(5) - t1603;
t1665 = qJD(2) * t1680;
t1669 = t1640 * qJDD(1);
t1612 = t1665 + t1669;
t1661 = t1639 * t1612 - t1644 * t1613;
t1564 = (qJD(3) + t1634) * t1607 + t1661;
t1660 = -t1644 * t1612 - t1639 * t1613;
t1580 = -t1605 * qJD(3) - t1660;
t1663 = t1634 * t1605 - t1580;
t1529 = t1564 * pkin(3) + t1663 * pkin(8) - t1582;
t1622 = -t1646 * g(1) - t1641 * g(2);
t1652 = -t1648 * pkin(1) + qJDD(1) * pkin(6) + t1622;
t1600 = -t1640 * g(3) + t1645 * t1652;
t1579 = -pkin(2) * t1675 + t1613 * pkin(7) - qJD(2) * t1659 + t1600;
t1651 = t1640 * t1652;
t1649 = -t1651 - t1612 * pkin(7) + qJDD(2) * pkin(2) + (qJD(2) * pkin(7) * qJD(1) + pkin(2) * t1674 - g(3)) * t1645;
t1552 = t1644 * t1579 + t1639 * t1649;
t1588 = t1605 * pkin(3) - t1607 * pkin(8);
t1668 = qJDD(2) + qJDD(3);
t1535 = -t1682 * pkin(3) + t1668 * pkin(8) - t1605 * t1588 + t1552;
t1505 = t1638 * t1529 + t1643 * t1535;
t1635 = t1640 ^ 2;
t1670 = t1635 + t1636;
t1504 = t1643 * t1529 - t1638 * t1535;
t1656 = -t1643 * t1580 - t1638 * t1668;
t1558 = -t1591 * qJD(4) - t1656;
t1662 = t1638 * t1580 - t1643 * t1668;
t1657 = t1593 * qJD(4) + t1662;
t1664 = -t1637 * t1558 - t1642 * t1657;
t1551 = -t1639 * t1579 + t1644 * t1649;
t1655 = t1607 * qJD(3) + qJDD(4) + t1661;
t1534 = -t1668 * pkin(3) - t1682 * pkin(8) + t1607 * t1588 - t1551;
t1654 = -qJDD(5) - t1655;
t1553 = t1655 - t1678;
t1650 = -t1642 * t1558 + t1637 * t1657;
t1647 = qJD(2) ^ 2;
t1626 = t1645 * t1674;
t1624 = -t1647 - t1675;
t1623 = -t1635 * t1648 - t1647;
t1620 = -qJDD(2) + t1626;
t1619 = qJDD(2) + t1626;
t1618 = t1670 * t1648;
t1617 = -t1641 * qJDD(1) - t1646 * t1648;
t1616 = t1646 * qJDD(1) - t1641 * t1648;
t1615 = t1670 * qJDD(1);
t1614 = t1632 - 0.2e1 * t1666;
t1611 = 0.2e1 * t1665 + t1669;
t1608 = t1648 * pkin(6) + t1658;
t1599 = -t1645 * g(3) - t1651;
t1598 = -t1682 - t1683;
t1597 = t1645 * t1620 - t1640 * t1623;
t1596 = -t1640 * t1619 + t1645 * t1624;
t1595 = t1640 * t1620 + t1645 * t1623;
t1594 = t1645 * t1619 + t1640 * t1624;
t1587 = -t1668 - t1676;
t1586 = t1668 - t1676;
t1585 = -t1682 - t1684;
t1583 = t1604 * pkin(4) - t1593 * pkin(9);
t1581 = -t1683 - t1684;
t1578 = -t1640 * t1599 + t1645 * t1600;
t1577 = t1645 * t1599 + t1640 * t1600;
t1570 = -t1685 - t1687;
t1569 = t1644 * t1587 - t1639 * t1598;
t1568 = t1639 * t1587 + t1644 * t1598;
t1567 = t1673 * t1605 + t1660;
t1565 = -t1673 * t1607 - t1661;
t1563 = -t1685 - t1688;
t1561 = t1644 * t1585 - t1639 * t1586;
t1560 = t1639 * t1585 + t1644 * t1586;
t1559 = -t1687 - t1688;
t1555 = -t1686 - t1689;
t1554 = -t1655 - t1678;
t1550 = t1672 * t1591 + t1656;
t1549 = t1558 - t1677;
t1548 = -t1672 * t1593 - t1662;
t1547 = (qJD(4) + t1604) * t1593 + t1662;
t1546 = -t1686 - t1690;
t1545 = -t1640 * t1568 + t1645 * t1569;
t1544 = t1645 * t1568 + t1640 * t1569;
t1543 = t1644 * t1565 - t1639 * t1567;
t1542 = t1639 * t1565 + t1644 * t1567;
t1541 = -t1640 * t1560 + t1645 * t1561;
t1540 = t1645 * t1560 + t1640 * t1561;
t1539 = t1654 - t1679;
t1538 = -t1654 - t1679;
t1537 = t1643 * t1554 - t1638 * t1570;
t1536 = t1638 * t1554 + t1643 * t1570;
t1532 = -t1689 - t1690;
t1531 = -t1638 * t1553 + t1643 * t1563;
t1530 = t1643 * t1553 + t1638 * t1563;
t1526 = -t1639 * t1551 + t1644 * t1552;
t1525 = t1644 * t1551 + t1639 * t1552;
t1524 = t1643 * t1548 - t1638 * t1550;
t1523 = t1638 * t1548 + t1643 * t1550;
t1522 = t1642 * t1539 - t1637 * t1555;
t1521 = t1637 * t1539 + t1642 * t1555;
t1520 = -t1640 * t1542 + t1645 * t1543;
t1519 = t1645 * t1542 + t1640 * t1543;
t1518 = t1644 * t1537 + t1639 * t1549;
t1517 = t1639 * t1537 - t1644 * t1549;
t1516 = -t1637 * t1538 + t1642 * t1546;
t1515 = t1642 * t1538 + t1637 * t1546;
t1514 = t1644 * t1531 + t1639 * t1547;
t1513 = t1639 * t1531 - t1644 * t1547;
t1512 = t1671 * t1571 + t1650;
t1511 = -t1691 * t1571 - t1650;
t1510 = -t1671 * t1573 + t1664;
t1509 = t1691 * t1573 - t1664;
t1508 = t1644 * t1524 + t1639 * t1559;
t1507 = t1639 * t1524 - t1644 * t1559;
t1506 = t1657 * pkin(4) - t1688 * pkin(9) + t1593 * t1583 + t1534;
t1503 = -t1640 * t1525 + t1645 * t1526;
t1502 = t1645 * t1525 + t1640 * t1526;
t1501 = -t1688 * pkin(4) - t1657 * pkin(9) - t1604 * t1583 + t1505;
t1500 = -t1638 * t1521 + t1643 * t1522;
t1499 = t1643 * t1521 + t1638 * t1522;
t1498 = (-t1558 - t1677) * pkin(9) + t1553 * pkin(4) + t1504;
t1497 = -t1640 * t1517 + t1645 * t1518;
t1496 = t1645 * t1517 + t1640 * t1518;
t1495 = -t1638 * t1515 + t1643 * t1516;
t1494 = t1643 * t1515 + t1638 * t1516;
t1493 = -t1640 * t1513 + t1645 * t1514;
t1492 = t1645 * t1513 + t1640 * t1514;
t1491 = t1642 * t1510 - t1637 * t1512;
t1490 = t1637 * t1510 + t1642 * t1512;
t1489 = -t1640 * t1507 + t1645 * t1508;
t1488 = t1645 * t1507 + t1640 * t1508;
t1487 = -t1638 * t1504 + t1643 * t1505;
t1486 = t1643 * t1504 + t1638 * t1505;
t1485 = t1644 * t1500 + t1639 * t1511;
t1484 = t1639 * t1500 - t1644 * t1511;
t1483 = t1644 * t1487 + t1639 * t1534;
t1482 = t1639 * t1487 - t1644 * t1534;
t1481 = t1644 * t1495 + t1639 * t1509;
t1480 = t1639 * t1495 - t1644 * t1509;
t1479 = t1637 * t1498 + t1642 * t1501;
t1478 = t1642 * t1498 - t1637 * t1501;
t1477 = -t1638 * t1490 + t1643 * t1491;
t1476 = t1643 * t1490 + t1638 * t1491;
t1475 = t1644 * t1477 + t1639 * t1532;
t1474 = t1639 * t1477 - t1644 * t1532;
t1473 = -t1640 * t1484 + t1645 * t1485;
t1472 = t1645 * t1484 + t1640 * t1485;
t1471 = -t1640 * t1482 + t1645 * t1483;
t1470 = t1645 * t1482 + t1640 * t1483;
t1469 = -t1640 * t1480 + t1645 * t1481;
t1468 = t1645 * t1480 + t1640 * t1481;
t1467 = -t1637 * t1478 + t1642 * t1479;
t1466 = t1642 * t1478 + t1637 * t1479;
t1465 = -t1640 * t1474 + t1645 * t1475;
t1464 = t1645 * t1474 + t1640 * t1475;
t1463 = -t1638 * t1466 + t1643 * t1467;
t1462 = t1643 * t1466 + t1638 * t1467;
t1461 = t1644 * t1463 + t1639 * t1506;
t1460 = t1639 * t1463 - t1644 * t1506;
t1459 = -t1640 * t1460 + t1645 * t1461;
t1458 = t1645 * t1460 + t1640 * t1461;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1617, -t1616, 0, -t1641 * t1621 + t1646 * t1622, 0, 0, 0, 0, 0, 0, t1646 * t1596 - t1641 * t1614, t1646 * t1597 + t1641 * t1611, t1646 * t1615 - t1641 * t1618, t1646 * t1578 - t1641 * t1608, 0, 0, 0, 0, 0, 0, t1646 * t1541 + t1641 * t1564, t1646 * t1545 - t1641 * t1663, t1646 * t1520 + t1641 * t1581, t1646 * t1503 - t1641 * t1582, 0, 0, 0, 0, 0, 0, t1646 * t1493 + t1641 * t1530, t1646 * t1497 + t1641 * t1536, t1646 * t1489 + t1641 * t1523, t1646 * t1471 + t1641 * t1486, 0, 0, 0, 0, 0, 0, t1646 * t1469 + t1641 * t1494, t1646 * t1473 + t1641 * t1499, t1646 * t1465 + t1641 * t1476, t1646 * t1459 + t1641 * t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1616, t1617, 0, t1646 * t1621 + t1641 * t1622, 0, 0, 0, 0, 0, 0, t1641 * t1596 + t1646 * t1614, t1641 * t1597 - t1646 * t1611, t1641 * t1615 + t1646 * t1618, t1641 * t1578 + t1646 * t1608, 0, 0, 0, 0, 0, 0, t1641 * t1541 - t1646 * t1564, t1641 * t1545 + t1646 * t1663, t1641 * t1520 - t1646 * t1581, t1641 * t1503 + t1646 * t1582, 0, 0, 0, 0, 0, 0, t1641 * t1493 - t1646 * t1530, t1641 * t1497 - t1646 * t1536, t1641 * t1489 - t1646 * t1523, t1641 * t1471 - t1646 * t1486, 0, 0, 0, 0, 0, 0, t1641 * t1469 - t1646 * t1494, t1641 * t1473 - t1646 * t1499, t1641 * t1465 - t1646 * t1476, t1641 * t1459 - t1646 * t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1594, t1595, 0, t1577, 0, 0, 0, 0, 0, 0, t1540, t1544, t1519, t1502, 0, 0, 0, 0, 0, 0, t1492, t1496, t1488, t1470, 0, 0, 0, 0, 0, 0, t1468, t1472, t1464, t1458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1648, -qJDD(1), 0, t1622, 0, 0, 0, 0, 0, 0, t1596, t1597, t1615, t1578, 0, 0, 0, 0, 0, 0, t1541, t1545, t1520, t1503, 0, 0, 0, 0, 0, 0, t1493, t1497, t1489, t1471, 0, 0, 0, 0, 0, 0, t1469, t1473, t1465, t1459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1648, 0, t1621, 0, 0, 0, 0, 0, 0, t1614, -t1611, t1618, t1608, 0, 0, 0, 0, 0, 0, -t1564, t1663, -t1581, t1582, 0, 0, 0, 0, 0, 0, -t1530, -t1536, -t1523, -t1486, 0, 0, 0, 0, 0, 0, -t1494, -t1499, -t1476, -t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1594, t1595, 0, t1577, 0, 0, 0, 0, 0, 0, t1540, t1544, t1519, t1502, 0, 0, 0, 0, 0, 0, t1492, t1496, t1488, t1470, 0, 0, 0, 0, 0, 0, t1468, t1472, t1464, t1458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1624, t1620, t1632, t1600, 0, 0, 0, 0, 0, 0, t1561, t1569, t1543, t1526, 0, 0, 0, 0, 0, 0, t1514, t1518, t1508, t1483, 0, 0, 0, 0, 0, 0, t1481, t1485, t1475, t1461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1619, t1623, -t1669, t1599, 0, 0, 0, 0, 0, 0, t1560, t1568, t1542, t1525, 0, 0, 0, 0, 0, 0, t1513, t1517, t1507, t1482, 0, 0, 0, 0, 0, 0, t1480, t1484, t1474, t1460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1614, t1611, -t1618, -t1608, 0, 0, 0, 0, 0, 0, t1564, -t1663, t1581, -t1582, 0, 0, 0, 0, 0, 0, t1530, t1536, t1523, t1486, 0, 0, 0, 0, 0, 0, t1494, t1499, t1476, t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1585, t1587, t1565, t1552, 0, 0, 0, 0, 0, 0, t1531, t1537, t1524, t1487, 0, 0, 0, 0, 0, 0, t1495, t1500, t1477, t1463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1586, t1598, t1567, t1551, 0, 0, 0, 0, 0, 0, -t1547, -t1549, -t1559, -t1534, 0, 0, 0, 0, 0, 0, -t1509, -t1511, -t1532, -t1506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1564, -t1663, t1581, -t1582, 0, 0, 0, 0, 0, 0, t1530, t1536, t1523, t1486, 0, 0, 0, 0, 0, 0, t1494, t1499, t1476, t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1563, t1554, t1548, t1505, 0, 0, 0, 0, 0, 0, t1516, t1522, t1491, t1467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1553, t1570, t1550, t1504, 0, 0, 0, 0, 0, 0, t1515, t1521, t1490, t1466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1547, t1549, t1559, t1534, 0, 0, 0, 0, 0, 0, t1509, t1511, t1532, t1506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1546, t1539, t1510, t1479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1538, t1555, t1512, t1478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1509, t1511, t1532, t1506;];
f_new_reg = t1;
