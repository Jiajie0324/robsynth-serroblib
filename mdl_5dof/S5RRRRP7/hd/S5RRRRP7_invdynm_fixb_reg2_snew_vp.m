% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRP7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:58
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRP7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP7_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP7_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP7_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP7_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:58:19
% EndTime: 2019-12-31 21:58:41
% DurationCPUTime: 22.63s
% Computational Cost: add. (74201->670), mult. (151815->833), div. (0->0), fcn. (106404->8), ass. (0->444)
t1423 = cos(qJ(4));
t1419 = sin(qJ(4));
t1420 = sin(qJ(3));
t1421 = sin(qJ(2));
t1424 = cos(qJ(3));
t1425 = cos(qJ(2));
t1383 = (t1420 * t1425 + t1421 * t1424) * qJD(1);
t1492 = qJD(2) + qJD(3);
t1349 = t1383 * t1419 - t1423 * t1492;
t1526 = qJD(1) * t1425;
t1527 = qJD(1) * t1421;
t1381 = t1420 * t1527 - t1424 * t1526;
t1411 = qJD(2) * t1526;
t1488 = t1421 * qJDD(1);
t1391 = t1411 + t1488;
t1414 = t1425 * qJDD(1);
t1478 = qJD(2) * t1527;
t1457 = -t1414 + t1478;
t1318 = -qJD(3) * t1381 + t1391 * t1424 - t1420 * t1457;
t1487 = qJDD(2) + qJDD(3);
t1441 = -t1423 * t1318 - t1419 * t1487;
t1267 = -t1349 * qJD(4) - t1441;
t1377 = qJD(4) + t1381;
t1502 = t1349 * t1377;
t1545 = -t1502 + t1267;
t1515 = t1545 * t1419;
t1351 = t1383 * t1423 + t1419 * t1492;
t1474 = -t1419 * t1318 + t1423 * t1487;
t1266 = qJD(4) * t1351 - t1474;
t1331 = t1377 * t1351;
t1552 = t1266 + t1331;
t1163 = -t1423 * t1552 - t1515;
t1347 = t1351 ^ 2;
t1536 = t1349 ^ 2;
t1548 = t1347 - t1536;
t1126 = t1163 * t1420 - t1424 * t1548;
t1128 = t1163 * t1424 + t1420 * t1548;
t1064 = t1126 * t1421 - t1128 * t1425;
t1514 = t1545 * t1423;
t1159 = -t1419 * t1552 + t1514;
t1422 = sin(qJ(1));
t1426 = cos(qJ(1));
t1633 = t1064 * t1422 + t1159 * t1426;
t1632 = t1064 * t1426 - t1159 * t1422;
t1535 = t1377 ^ 2;
t1327 = t1536 - t1535;
t1311 = t1351 * t1349;
t1473 = t1420 * t1391 + t1424 * t1457;
t1317 = -t1383 * qJD(3) - t1473;
t1314 = qJDD(4) - t1317;
t1550 = t1311 + t1314;
t1566 = t1550 * t1419;
t1211 = t1327 * t1423 - t1566;
t1241 = t1266 - t1331;
t1145 = t1211 * t1420 + t1241 * t1424;
t1149 = t1211 * t1424 - t1241 * t1420;
t1088 = t1145 * t1421 - t1149 * t1425;
t1565 = t1550 * t1423;
t1207 = t1327 * t1419 + t1565;
t1631 = t1088 * t1422 + t1207 * t1426;
t1630 = t1088 * t1426 - t1207 * t1422;
t1063 = t1126 * t1425 + t1128 * t1421;
t1085 = t1145 * t1425 + t1149 * t1421;
t1328 = t1347 - t1535;
t1551 = -t1311 + t1314;
t1511 = t1551 * t1419;
t1590 = -t1328 * t1423 + t1511;
t1544 = t1502 + t1267;
t1510 = t1551 * t1423;
t1589 = t1328 * t1419 + t1510;
t1601 = t1420 * t1544 + t1424 * t1589;
t1602 = t1420 * t1589 - t1424 * t1544;
t1609 = -t1421 * t1602 + t1425 * t1601;
t1629 = t1422 * t1609 - t1426 * t1590;
t1628 = t1422 * t1590 + t1426 * t1609;
t1282 = t1535 + t1347;
t1182 = t1282 * t1423 + t1566;
t1627 = pkin(1) * t1182;
t1543 = -t1535 - t1536;
t1561 = t1423 * t1543 - t1511;
t1585 = t1420 * t1552 + t1424 * t1561;
t1588 = t1420 * t1561 - t1424 * t1552;
t1599 = t1421 * t1585 + t1425 * t1588;
t1626 = pkin(1) * t1599;
t1625 = pkin(2) * t1182;
t1624 = pkin(3) * t1182;
t1623 = pkin(6) * t1599;
t1622 = pkin(8) * t1182;
t1196 = t1282 * t1419 - t1565;
t1621 = pkin(8) * t1196;
t1618 = t1182 * t1422;
t1617 = t1182 * t1426;
t1616 = t1196 * t1420;
t1615 = t1196 * t1424;
t1562 = t1419 * t1543 + t1510;
t1600 = -t1421 * t1588 + t1425 * t1585;
t1612 = -pkin(1) * t1562 + pkin(6) * t1600;
t1611 = pkin(5) * (t1422 * t1600 - t1426 * t1562);
t1610 = pkin(5) * (t1422 * t1562 + t1426 * t1600);
t1608 = t1421 * t1601 + t1425 * t1602;
t1607 = pkin(2) * t1588;
t1606 = pkin(7) * t1588;
t1603 = -pkin(2) * t1562 + pkin(7) * t1585;
t1596 = pkin(3) * t1562;
t1595 = pkin(8) * t1561;
t1594 = pkin(8) * t1562;
t1593 = -qJ(5) * t1419 - pkin(3);
t1501 = t1377 * t1419;
t1226 = -t1266 * t1423 + t1349 * t1501;
t1500 = t1377 * t1423;
t1481 = t1349 * t1500;
t1446 = t1266 * t1419 + t1481;
t1483 = t1420 * t1311;
t1540 = t1424 * t1446 - t1483;
t1482 = t1424 * t1311;
t1541 = t1420 * t1446 + t1482;
t1557 = -t1421 * t1541 + t1425 * t1540;
t1587 = -t1226 * t1426 + t1422 * t1557;
t1553 = (t1349 * t1419 + t1351 * t1423) * t1377;
t1321 = t1351 * t1501;
t1454 = t1321 - t1481;
t1539 = t1314 * t1420 + t1424 * t1454;
t1542 = -t1314 * t1424 + t1420 * t1454;
t1559 = -t1421 * t1542 + t1425 * t1539;
t1586 = t1422 * t1559 + t1426 * t1553;
t1584 = t1226 * t1422 + t1426 * t1557;
t1583 = -t1422 * t1553 + t1426 * t1559;
t1547 = t1347 + t1536;
t1582 = pkin(3) * t1547;
t1581 = qJ(5) * t1545;
t1577 = t1420 * t1547;
t1341 = t1383 * t1381;
t1549 = -t1341 + t1487;
t1575 = t1420 * t1549;
t1571 = t1424 * t1547;
t1569 = t1424 * t1549;
t1372 = t1492 * t1381;
t1564 = -t1372 + t1318;
t1229 = t1267 * t1419 + t1351 * t1500;
t1230 = t1267 * t1423 - t1321;
t1455 = t1230 * t1424 + t1483;
t1456 = t1230 * t1420 - t1482;
t1538 = -t1421 * t1456 + t1425 * t1455;
t1563 = -t1229 * t1426 + t1422 * t1538;
t1560 = t1229 * t1422 + t1426 * t1538;
t1558 = t1421 * t1539 + t1425 * t1542;
t1556 = t1421 * t1540 + t1425 * t1541;
t1486 = t1492 ^ 2;
t1418 = t1425 ^ 2;
t1428 = qJD(1) ^ 2;
t1400 = t1422 * g(1) - g(2) * t1426;
t1448 = qJDD(1) * pkin(1) + t1400;
t1320 = (pkin(7) * t1418 + pkin(6)) * t1428 - pkin(2) * t1457 - (qJD(2) * pkin(2) - pkin(7) * t1527) * t1527 + t1448;
t1475 = t1492 * t1383;
t1179 = -t1564 * pkin(8) + (-t1317 + t1475) * pkin(3) - t1320;
t1401 = g(1) * t1426 + g(2) * t1422;
t1437 = -pkin(1) * t1428 + qJDD(1) * pkin(6) - t1401;
t1364 = -t1421 * g(3) + t1425 * t1437;
t1415 = t1418 * t1428;
t1427 = qJD(2) ^ 2;
t1405 = -t1415 - t1427;
t1308 = pkin(2) * t1405 + pkin(7) * t1414 + t1364;
t1434 = t1421 * t1437;
t1493 = t1421 * t1428;
t1528 = qJD(1) * qJD(2);
t1429 = -t1434 - t1391 * pkin(7) + qJDD(2) * pkin(2) + (pkin(2) * t1493 + pkin(7) * t1528 - g(3)) * t1425;
t1252 = t1308 * t1424 + t1420 * t1429;
t1338 = pkin(3) * t1381 - pkin(8) * t1383;
t1191 = -pkin(3) * t1486 + pkin(8) * t1487 - t1338 * t1381 + t1252;
t1116 = -t1179 * t1423 + t1191 * t1419;
t1117 = t1179 * t1419 + t1191 * t1423;
t1056 = t1116 * t1419 + t1117 * t1423;
t1525 = qJD(5) * t1377;
t1369 = 0.2e1 * t1525;
t1302 = pkin(4) * t1349 - qJ(5) * t1351;
t1453 = -pkin(4) * t1535 + qJ(5) * t1314 - t1302 * t1349 + t1117;
t1093 = t1369 + t1453;
t1096 = -pkin(4) * t1314 - qJ(5) * t1535 + t1302 * t1351 + qJDD(5) + t1116;
t1044 = t1093 * t1423 + t1096 * t1419;
t1251 = t1308 * t1420 - t1424 * t1429;
t1190 = -pkin(3) * t1487 - pkin(8) * t1486 + t1338 * t1383 + t1251;
t1433 = t1266 * pkin(4) + t1190 - t1581;
t1101 = (pkin(4) * t1377 - 0.2e1 * qJD(5)) * t1351 + t1433;
t1031 = t1044 * t1420 - t1101 * t1424;
t1439 = pkin(8) * t1044 + (-pkin(4) * t1423 + t1593) * t1101;
t1546 = pkin(2) * t1031 + t1439;
t1537 = t1421 * t1455 + t1425 * t1456;
t1379 = t1381 ^ 2;
t1380 = t1383 ^ 2;
t1165 = -t1251 * t1424 + t1252 * t1420;
t1533 = pkin(2) * t1165;
t1285 = qJD(2) * t1383 - t1473;
t1288 = t1372 + t1318;
t1217 = t1285 * t1420 - t1288 * t1424;
t1532 = pkin(2) * t1217;
t1531 = pkin(3) * t1420;
t1529 = qJ(5) * t1423;
t1524 = t1165 * t1421;
t1523 = t1165 * t1425;
t1517 = t1544 * t1419;
t1516 = t1544 * t1423;
t1508 = t1320 * t1420;
t1507 = t1320 * t1424;
t1336 = t1341 + t1487;
t1504 = t1336 * t1420;
t1503 = t1336 * t1424;
t1384 = t1428 * pkin(6) + t1448;
t1499 = t1384 * t1421;
t1498 = t1384 * t1425;
t1392 = t1414 - 0.2e1 * t1478;
t1352 = t1392 * t1425;
t1407 = t1425 * t1493;
t1398 = qJDD(2) + t1407;
t1497 = t1398 * t1421;
t1399 = qJDD(2) - t1407;
t1496 = t1399 * t1421;
t1495 = t1399 * t1425;
t1417 = t1421 ^ 2;
t1494 = t1417 * t1428;
t1186 = t1419 * t1190;
t1187 = t1423 * t1190;
t1490 = -pkin(3) * t1190 + pkin(8) * t1056;
t1489 = t1417 + t1418;
t1485 = -pkin(3) * t1424 - pkin(2);
t1480 = t1422 * t1341;
t1479 = t1426 * t1341;
t1248 = (qJD(4) + t1377) * t1349 + t1441;
t1477 = pkin(3) * t1248 + t1186 + t1621;
t1476 = -pkin(3) * t1552 - t1187 + t1595;
t1166 = t1251 * t1420 + t1252 * t1424;
t1363 = t1425 * g(3) + t1434;
t1307 = t1363 * t1421 + t1364 * t1425;
t1472 = -t1400 * t1422 - t1401 * t1426;
t1471 = t1422 * t1407;
t1470 = t1426 * t1407;
t1075 = pkin(4) * t1547 + t1093;
t1077 = qJ(5) * t1547 + t1096;
t1162 = -t1241 * t1423 + t1517;
t1469 = pkin(8) * t1162 + t1075 * t1423 + t1077 * t1419 + t1582;
t1243 = (-qJD(4) + t1377) * t1351 + t1474;
t1164 = t1243 * t1423 + t1517;
t1468 = pkin(8) * t1164 + t1056 + t1582;
t1048 = t1056 * t1420 - t1190 * t1424;
t1467 = pkin(2) * t1048 + t1490;
t1362 = -t1380 - t1486;
t1289 = t1362 * t1424 - t1504;
t1466 = pkin(2) * t1289 - t1252;
t1395 = qJDD(1) * t1426 - t1422 * t1428;
t1465 = -pkin(5) * t1395 - g(3) * t1422;
t1464 = t1420 * t1372;
t1463 = t1420 * t1475;
t1462 = t1424 * t1372;
t1461 = t1424 * t1475;
t1460 = -pkin(4) * t1096 + qJ(5) * t1093;
t1459 = -pkin(4) * t1544 - qJ(5) * t1241;
t1055 = -t1116 * t1423 + t1117 * t1419;
t1306 = t1363 * t1425 - t1364 * t1421;
t1451 = t1400 * t1426 - t1401 * t1422;
t1450 = t1476 + t1607;
t1134 = t1248 * t1424 + t1616;
t1449 = pkin(2) * t1134 + t1477;
t1334 = -t1486 - t1379;
t1273 = t1334 * t1420 + t1569;
t1447 = pkin(2) * t1273 - t1251;
t1432 = 0.2e1 * qJD(5) * t1351 - t1433;
t1080 = -pkin(4) * t1331 + t1432 + t1581;
t1445 = pkin(3) * t1545 + pkin(4) * t1514 + t1080 * t1419 - t1621;
t1120 = t1162 * t1420 + t1571;
t1444 = pkin(2) * t1120 + t1469;
t1121 = t1164 * t1420 + t1571;
t1443 = pkin(2) * t1121 + t1468;
t1081 = (-t1552 - t1331) * pkin(4) + t1432;
t1442 = t1423 * t1081 + t1552 * t1593 + t1595;
t1130 = t1424 * t1545 - t1616;
t1440 = pkin(2) * t1130 + t1445;
t1438 = t1442 + t1607;
t1436 = pkin(4) * t1282 + qJ(5) * t1550 + t1453;
t1430 = pkin(4) * t1551 + qJ(5) * t1543 - t1096;
t1404 = t1415 - t1427;
t1403 = -t1427 - t1494;
t1402 = t1427 - t1494;
t1397 = -t1415 + t1494;
t1396 = t1415 + t1494;
t1394 = qJDD(1) * t1422 + t1426 * t1428;
t1393 = t1489 * qJDD(1);
t1390 = 0.2e1 * t1411 + t1488;
t1388 = t1425 * t1398;
t1387 = t1489 * t1528;
t1378 = -pkin(5) * t1394 + g(3) * t1426;
t1368 = -t1380 + t1486;
t1367 = t1379 - t1486;
t1366 = t1391 * t1425 - t1417 * t1528;
t1365 = -t1418 * t1528 + t1421 * t1457;
t1361 = -t1403 * t1421 - t1495;
t1360 = -t1402 * t1421 + t1388;
t1359 = t1405 * t1425 - t1497;
t1358 = t1404 * t1425 - t1496;
t1357 = t1403 * t1425 - t1496;
t1356 = t1402 * t1425 + t1497;
t1355 = t1405 * t1421 + t1388;
t1354 = t1404 * t1421 + t1495;
t1353 = (t1391 + t1411) * t1421;
t1343 = -t1390 * t1421 + t1352;
t1342 = t1390 * t1425 + t1392 * t1421;
t1340 = t1380 - t1379;
t1325 = -t1462 + t1463;
t1324 = -t1464 - t1461;
t1323 = -pkin(6) * t1357 - t1498;
t1322 = -pkin(6) * t1355 - t1499;
t1319 = -t1379 - t1380;
t1316 = -pkin(1) * t1357 + t1364;
t1315 = -pkin(1) * t1355 + t1363;
t1298 = pkin(1) * t1392 + pkin(6) * t1359 + t1498;
t1297 = -pkin(1) * t1390 + pkin(6) * t1361 - t1499;
t1294 = t1367 * t1424 - t1504;
t1293 = -t1368 * t1420 + t1569;
t1292 = t1367 * t1420 + t1503;
t1291 = t1368 * t1424 + t1575;
t1290 = -t1362 * t1420 - t1503;
t1283 = (0.2e1 * qJD(3) + qJD(2)) * t1383 + t1473;
t1280 = pkin(1) * t1384 + pkin(6) * t1307;
t1279 = t1318 * t1424 - t1463;
t1278 = t1318 * t1420 + t1461;
t1277 = -t1317 * t1420 + t1462;
t1276 = t1317 * t1424 + t1464;
t1275 = pkin(1) * t1396 + pkin(6) * t1393 + t1307;
t1274 = t1334 * t1424 - t1575;
t1259 = -t1324 * t1421 + t1325 * t1425;
t1258 = t1324 * t1425 + t1325 * t1421;
t1249 = -pkin(7) * t1289 - t1507;
t1239 = -pkin(7) * t1273 - t1508;
t1234 = -t1292 * t1421 + t1294 * t1425;
t1233 = -t1291 * t1421 + t1293 * t1425;
t1232 = t1292 * t1425 + t1294 * t1421;
t1231 = t1291 * t1425 + t1293 * t1421;
t1221 = -t1289 * t1421 + t1290 * t1425;
t1220 = t1289 * t1425 + t1290 * t1421;
t1219 = t1285 * t1424 + t1288 * t1420;
t1218 = -t1283 * t1424 - t1420 * t1564;
t1216 = -t1283 * t1420 + t1424 * t1564;
t1203 = -t1278 * t1421 + t1279 * t1425;
t1202 = -t1276 * t1421 + t1277 * t1425;
t1201 = t1278 * t1425 + t1279 * t1421;
t1200 = t1276 * t1425 + t1277 * t1421;
t1199 = -t1273 * t1421 + t1274 * t1425;
t1198 = t1273 * t1425 + t1274 * t1421;
t1178 = -pkin(2) * t1564 + pkin(7) * t1290 - t1508;
t1167 = -pkin(2) * t1283 + pkin(7) * t1274 + t1507;
t1160 = t1243 * t1419 - t1516;
t1158 = -t1241 * t1419 - t1516;
t1154 = pkin(2) * t1320 + pkin(7) * t1166;
t1153 = -t1217 * t1421 + t1219 * t1425;
t1152 = -t1216 * t1421 + t1218 * t1425;
t1151 = t1217 * t1425 + t1219 * t1421;
t1150 = t1216 * t1425 + t1218 * t1421;
t1136 = -t1248 * t1420 + t1615;
t1132 = -t1420 * t1545 - t1615;
t1129 = -pkin(1) * t1220 - t1466;
t1124 = t1187 + t1622;
t1123 = t1164 * t1424 - t1577;
t1122 = t1162 * t1424 - t1577;
t1119 = -pkin(1) * t1198 - t1447;
t1118 = t1186 - t1594;
t1113 = -pkin(7) * t1217 - t1165;
t1104 = -pkin(2) * t1319 + pkin(7) * t1219 + t1166;
t1103 = -pkin(1) * t1151 - t1532;
t1102 = -pkin(6) * t1220 - t1178 * t1421 + t1249 * t1425;
t1099 = t1166 * t1425 - t1524;
t1098 = t1166 * t1421 + t1523;
t1097 = -pkin(6) * t1198 - t1167 * t1421 + t1239 * t1425;
t1095 = -pkin(1) * t1564 + pkin(6) * t1221 + t1178 * t1425 + t1249 * t1421;
t1094 = -pkin(3) * t1158 - t1459;
t1092 = t1117 + t1624;
t1091 = t1116 - t1596;
t1090 = -pkin(1) * t1283 + pkin(6) * t1199 + t1167 * t1425 + t1239 * t1421;
t1073 = -t1134 * t1421 + t1136 * t1425;
t1071 = t1134 * t1425 + t1136 * t1421;
t1068 = -t1130 * t1421 + t1132 * t1425;
t1066 = t1130 * t1425 + t1132 * t1421;
t1061 = -t1121 * t1421 + t1123 * t1425;
t1060 = -t1120 * t1421 + t1122 * t1425;
t1059 = t1121 * t1425 + t1123 * t1421;
t1058 = t1120 * t1425 + t1122 * t1421;
t1057 = -pkin(1) * t1098 - t1533;
t1053 = -t1430 - t1596;
t1052 = -t1436 - 0.2e1 * t1525 - t1624;
t1051 = -t1081 * t1419 - t1529 * t1552 - t1594;
t1050 = -pkin(4) * t1515 + t1080 * t1423 - t1622;
t1049 = t1056 * t1424 + t1190 * t1420;
t1047 = -pkin(8) * t1160 - t1055;
t1046 = -pkin(6) * t1098 - pkin(7) * t1523 - t1154 * t1421;
t1045 = pkin(1) * t1320 + pkin(6) * t1099 - pkin(7) * t1524 + t1154 * t1425;
t1043 = t1093 * t1419 - t1096 * t1423;
t1041 = -pkin(6) * t1151 - t1104 * t1421 + t1113 * t1425;
t1040 = -pkin(1) * t1319 + pkin(6) * t1153 + t1104 * t1425 + t1113 * t1421;
t1039 = -pkin(7) * t1134 - t1092 * t1420 + t1124 * t1424;
t1038 = -t1091 * t1420 + t1118 * t1424 - t1606;
t1037 = pkin(7) * t1136 + t1092 * t1424 + t1124 * t1420 + t1625;
t1036 = -pkin(1) * t1071 - t1449;
t1035 = t1091 * t1424 + t1118 * t1420 + t1603;
t1034 = -t1450 - t1626;
t1033 = -pkin(8) * t1158 - t1075 * t1419 + t1077 * t1423;
t1032 = t1044 * t1424 + t1101 * t1420;
t1030 = -pkin(7) * t1121 + t1047 * t1424 + t1160 * t1531;
t1029 = -t1048 * t1421 + t1049 * t1425;
t1028 = t1048 * t1425 + t1049 * t1421;
t1027 = pkin(7) * t1123 + t1047 * t1420 + t1160 * t1485;
t1026 = -t1438 - t1626;
t1025 = -pkin(1) * t1066 - t1440;
t1024 = -pkin(8) * t1043 + (pkin(4) * t1419 - t1529) * t1101;
t1023 = t1051 * t1424 - t1053 * t1420 - t1606;
t1022 = -pkin(3) * t1043 - t1460;
t1021 = -pkin(7) * t1130 + t1050 * t1424 - t1052 * t1420;
t1020 = -pkin(1) * t1059 - t1443;
t1019 = t1051 * t1420 + t1053 * t1424 + t1603;
t1018 = pkin(7) * t1132 + t1050 * t1420 + t1052 * t1424 - t1625;
t1017 = -pkin(7) * t1120 + t1033 * t1424 - t1094 * t1420;
t1016 = -pkin(7) * t1048 + (-pkin(8) * t1424 + t1531) * t1055;
t1015 = -pkin(1) * t1058 - t1444;
t1014 = -pkin(2) * t1158 + pkin(7) * t1122 + t1033 * t1420 + t1094 * t1424;
t1013 = -t1031 * t1421 + t1032 * t1425;
t1012 = t1031 * t1425 + t1032 * t1421;
t1011 = pkin(7) * t1049 + (-pkin(8) * t1420 + t1485) * t1055;
t1010 = -pkin(6) * t1071 - t1037 * t1421 + t1039 * t1425;
t1009 = -t1035 * t1421 + t1038 * t1425 - t1623;
t1008 = pkin(6) * t1073 + t1037 * t1425 + t1039 * t1421 + t1627;
t1007 = t1035 * t1425 + t1038 * t1421 + t1612;
t1006 = -pkin(1) * t1028 - t1467;
t1005 = -pkin(6) * t1059 - t1027 * t1421 + t1030 * t1425;
t1004 = -pkin(1) * t1160 + pkin(6) * t1061 + t1027 * t1425 + t1030 * t1421;
t1003 = -t1019 * t1421 + t1023 * t1425 - t1623;
t1002 = -pkin(6) * t1066 - t1018 * t1421 + t1021 * t1425;
t1001 = t1019 * t1425 + t1023 * t1421 + t1612;
t1000 = pkin(6) * t1068 + t1018 * t1425 + t1021 * t1421 - t1627;
t999 = -pkin(7) * t1031 - t1022 * t1420 + t1024 * t1424;
t998 = -pkin(6) * t1058 - t1014 * t1421 + t1017 * t1425;
t997 = -pkin(1) * t1158 + pkin(6) * t1060 + t1014 * t1425 + t1017 * t1421;
t996 = -pkin(2) * t1043 + pkin(7) * t1032 + t1022 * t1424 + t1024 * t1420;
t995 = -pkin(1) * t1012 - t1546;
t994 = -pkin(6) * t1028 - t1011 * t1421 + t1016 * t1425;
t993 = -pkin(1) * t1055 + pkin(6) * t1029 + t1011 * t1425 + t1016 * t1421;
t992 = -pkin(6) * t1012 - t1421 * t996 + t1425 * t999;
t991 = -pkin(1) * t1043 + pkin(6) * t1013 + t1421 * t999 + t1425 * t996;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1395, 0, -t1394, 0, t1465, -t1378, -t1451, -pkin(5) * t1451, t1366 * t1426 - t1471, t1343 * t1426 + t1397 * t1422, t1360 * t1426 + t1422 * t1488, t1365 * t1426 + t1471, t1358 * t1426 + t1414 * t1422, qJDD(2) * t1422 + t1387 * t1426, t1426 * t1322 - t1422 * t1315 - pkin(5) * (t1359 * t1422 + t1392 * t1426), t1426 * t1323 - t1422 * t1316 - pkin(5) * (t1361 * t1422 - t1390 * t1426), t1426 * t1306 - pkin(5) * (t1393 * t1422 + t1396 * t1426), -pkin(5) * (t1307 * t1422 + t1384 * t1426) - (pkin(1) * t1422 - pkin(6) * t1426) * t1306, t1203 * t1426 + t1480, t1152 * t1426 + t1340 * t1422, t1233 * t1426 + t1288 * t1422, t1202 * t1426 - t1480, t1234 * t1426 + t1285 * t1422, t1259 * t1426 + t1422 * t1487, t1426 * t1097 - t1422 * t1119 - pkin(5) * (t1199 * t1422 - t1283 * t1426), t1426 * t1102 - t1422 * t1129 - pkin(5) * (t1221 * t1422 - t1426 * t1564), t1426 * t1041 - t1422 * t1103 - pkin(5) * (t1153 * t1422 - t1319 * t1426), t1426 * t1046 - t1422 * t1057 - pkin(5) * (t1099 * t1422 + t1320 * t1426), t1560, -t1632, t1628, t1584, -t1630, t1583, t1426 * t1009 - t1422 * t1034 - t1611, t1426 * t1010 - t1422 * t1036 - pkin(5) * (t1073 * t1422 + t1617), t1426 * t1005 - t1422 * t1020 - pkin(5) * (t1061 * t1422 - t1160 * t1426), t1426 * t994 - t1422 * t1006 - pkin(5) * (t1029 * t1422 - t1055 * t1426), t1560, t1628, t1632, t1583, t1630, t1584, t1426 * t1003 - t1422 * t1026 - t1611, t1426 * t998 - t1422 * t1015 - pkin(5) * (t1060 * t1422 - t1158 * t1426), t1426 * t1002 - t1422 * t1025 - pkin(5) * (t1068 * t1422 - t1617), t1426 * t992 - t1422 * t995 - pkin(5) * (t1013 * t1422 - t1043 * t1426); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1394, 0, t1395, 0, t1378, t1465, t1472, pkin(5) * t1472, t1366 * t1422 + t1470, t1343 * t1422 - t1397 * t1426, t1360 * t1422 - t1426 * t1488, t1365 * t1422 - t1470, t1358 * t1422 - t1414 * t1426, -qJDD(2) * t1426 + t1387 * t1422, t1422 * t1322 + t1426 * t1315 + pkin(5) * (t1359 * t1426 - t1392 * t1422), t1422 * t1323 + t1426 * t1316 + pkin(5) * (t1361 * t1426 + t1390 * t1422), t1422 * t1306 + pkin(5) * (t1393 * t1426 - t1396 * t1422), pkin(5) * (t1307 * t1426 - t1384 * t1422) - (-pkin(1) * t1426 - pkin(6) * t1422) * t1306, t1203 * t1422 - t1479, t1152 * t1422 - t1340 * t1426, t1233 * t1422 - t1288 * t1426, t1202 * t1422 + t1479, t1234 * t1422 - t1285 * t1426, t1259 * t1422 - t1426 * t1487, t1422 * t1097 + t1426 * t1119 + pkin(5) * (t1199 * t1426 + t1283 * t1422), t1422 * t1102 + t1426 * t1129 + pkin(5) * (t1221 * t1426 + t1422 * t1564), t1422 * t1041 + t1426 * t1103 + pkin(5) * (t1153 * t1426 + t1319 * t1422), t1422 * t1046 + t1426 * t1057 + pkin(5) * (t1099 * t1426 - t1320 * t1422), t1563, -t1633, t1629, t1587, -t1631, t1586, t1422 * t1009 + t1426 * t1034 + t1610, t1422 * t1010 + t1426 * t1036 + pkin(5) * (t1073 * t1426 - t1618), t1422 * t1005 + t1426 * t1020 + pkin(5) * (t1061 * t1426 + t1160 * t1422), t1422 * t994 + t1426 * t1006 + pkin(5) * (t1029 * t1426 + t1055 * t1422), t1563, t1629, t1633, t1586, t1631, t1587, t1422 * t1003 + t1426 * t1026 + t1610, t1422 * t998 + t1426 * t1015 + pkin(5) * (t1060 * t1426 + t1158 * t1422), t1422 * t1002 + t1426 * t1025 + pkin(5) * (t1068 * t1426 + t1618), t1422 * t992 + t1426 * t995 + pkin(5) * (t1013 * t1426 + t1043 * t1422); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1400, t1401, 0, 0, t1353, t1342, t1356, t1352, t1354, 0, t1298, t1297, t1275, t1280, t1201, t1150, t1231, t1200, t1232, t1258, t1090, t1095, t1040, t1045, t1537, t1063, t1608, t1556, t1085, t1558, t1007, t1008, t1004, t993, t1537, t1608, -t1063, t1558, -t1085, t1556, t1001, t997, t1000, t991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1428, 0, 0, -g(3), -t1400, 0, t1366, t1343, t1360, t1365, t1358, t1387, t1322, t1323, t1306, pkin(6) * t1306, t1203, t1152, t1233, t1202, t1234, t1259, t1097, t1102, t1041, t1046, t1538, -t1064, t1609, t1557, -t1088, t1559, t1009, t1010, t1005, t994, t1538, t1609, t1064, t1559, t1088, t1557, t1003, t998, t1002, t992; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1428, 0, qJDD(1), 0, g(3), 0, -t1401, 0, t1407, -t1397, -t1488, -t1407, -t1414, -qJDD(2), t1315, t1316, 0, pkin(1) * t1306, -t1341, -t1340, -t1288, t1341, -t1285, -t1487, t1119, t1129, t1103, t1057, -t1229, -t1159, -t1590, -t1226, -t1207, t1553, t1034, t1036, t1020, t1006, -t1229, -t1590, t1159, t1553, t1207, -t1226, t1026, t1015, t1025, t995; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1400, t1401, 0, 0, t1353, t1342, t1356, t1352, t1354, 0, t1298, t1297, t1275, t1280, t1201, t1150, t1231, t1200, t1232, t1258, t1090, t1095, t1040, t1045, t1537, t1063, t1608, t1556, t1085, t1558, t1007, t1008, t1004, t993, t1537, t1608, -t1063, t1558, -t1085, t1556, t1001, t997, t1000, t991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1391, t1392, t1398, -t1411, t1404, t1411, 0, -t1384, t1363, 0, t1279, t1218, t1293, t1277, t1294, t1325, t1239, t1249, t1113, -pkin(7) * t1165, t1455, t1128, t1601, t1540, t1149, t1539, t1038, t1039, t1030, t1016, t1455, t1601, -t1128, t1539, -t1149, t1540, t1023, t1017, t1021, t999; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1478, t1390, t1402, -t1457, t1399, -t1478, t1384, 0, t1364, 0, t1278, t1216, t1291, t1276, t1292, t1324, t1167, t1178, t1104, t1154, t1456, t1126, t1602, t1541, t1145, t1542, t1035, t1037, t1027, t1011, t1456, t1602, -t1126, t1542, -t1145, t1541, t1019, t1014, t1018, t996; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1407, t1397, t1488, t1407, t1414, qJDD(2), -t1363, -t1364, 0, 0, t1341, t1340, t1288, -t1341, t1285, t1487, t1447, t1466, t1532, t1533, t1229, t1159, t1590, t1226, t1207, -t1553, t1450, t1449, t1443, t1467, t1229, t1590, -t1159, -t1553, -t1207, t1226, t1438, t1444, t1440, t1546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1318, -t1283, t1549, t1372, t1367, -t1372, 0, -t1320, t1251, 0, t1230, t1163, t1589, t1446, t1211, t1454, t1118, t1124, t1047, -pkin(8) * t1055, t1230, t1589, -t1163, t1454, -t1211, t1446, t1051, t1033, t1050, t1024; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1475, t1564, t1368, t1317, t1336, -t1475, t1320, 0, t1252, 0, -t1311, -t1548, -t1544, t1311, t1241, -t1314, t1091, t1092, -pkin(3) * t1160, -pkin(3) * t1055, -t1311, -t1544, t1548, -t1314, -t1241, t1311, t1053, t1094, t1052, t1022; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1341, t1340, t1288, -t1341, t1285, t1487, -t1251, -t1252, 0, 0, t1229, t1159, t1590, t1226, t1207, -t1553, t1476, t1477, t1468, t1490, t1229, t1590, -t1159, -t1553, -t1207, t1226, t1442, t1469, t1445, t1439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1267, -t1552, t1551, t1502, t1327, -t1502, 0, t1190, t1116, 0, t1267, t1551, t1552, -t1502, -t1327, t1502, -qJ(5) * t1552, t1077, t1080, -qJ(5) * t1101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1331, t1545, -t1328, -t1266, t1550, -t1331, -t1190, 0, t1117, 0, t1331, -t1328, -t1545, -t1331, -t1550, -t1266, t1081, t1075, pkin(4) * t1545, -pkin(4) * t1101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1311, t1548, t1544, -t1311, -t1241, t1314, -t1116, -t1117, 0, 0, t1311, t1544, -t1548, t1314, t1241, -t1311, t1430, t1459, t1369 + t1436, t1460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1267, t1551, t1552, -t1502, -t1327, t1502, 0, t1096, -t1101, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1311, t1544, -t1548, t1314, t1241, -t1311, -t1096, 0, t1093, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1331, t1328, t1545, t1331, t1550, t1266, t1101, -t1093, 0, 0;];
m_new_reg = t1;
