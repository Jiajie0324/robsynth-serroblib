% Calculate vector of inverse dynamics joint torques for
% S5RRRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:58
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRRRP7_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP7_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP7_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP7_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP7_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP7_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP7_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP7_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP7_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:56:08
% EndTime: 2019-12-31 21:57:43
% DurationCPUTime: 80.39s
% Computational Cost: add. (39297->1289), mult. (54850->1654), div. (0->0), fcn. (51699->8), ass. (0->632)
t1153 = Icges(5,1) + Icges(6,1);
t1167 = Icges(6,4) + Icges(5,5);
t1166 = Icges(5,6) - Icges(6,6);
t625 = sin(qJ(4));
t1196 = (Icges(5,4) - Icges(6,5)) * t625;
t1152 = Icges(5,2) + Icges(6,3);
t628 = cos(qJ(4));
t1195 = -t1166 * t625 + t1167 * t628;
t1194 = t1153 * t628 - t1196;
t1192 = Icges(6,2) + Icges(5,3);
t624 = qJ(2) + qJ(3);
t604 = sin(t624);
t605 = cos(t624);
t1002 = Icges(5,4) * t628;
t767 = -Icges(5,2) * t625 + t1002;
t1193 = -t1166 * t605 + t604 * t767;
t954 = t604 * t628;
t549 = Icges(6,5) * t954;
t956 = t604 * t625;
t1165 = Icges(6,3) * t956 - t1193 + t549;
t1157 = -t1167 * t605 + t1194 * t604;
t995 = Icges(6,5) * t628;
t761 = Icges(6,3) * t625 + t995;
t1191 = (t761 - t767) * t605;
t1190 = t1195 * t605;
t1189 = t1194 * t605;
t1188 = t1152 * t628 + t1196;
t1187 = -t1166 * t628 - t1167 * t625;
t627 = sin(qJ(1));
t879 = qJD(4) * t627;
t837 = t605 * t879;
t885 = qJD(1) * t627;
t1186 = -t837 + t885;
t1159 = -t1192 * t605 + t1195 * t604;
t630 = cos(qJ(1));
t936 = t630 * t625;
t942 = t627 * t628;
t486 = t605 * t936 - t942;
t940 = t628 * t630;
t945 = t625 * t627;
t487 = t605 * t940 + t945;
t953 = t604 * t630;
t1083 = t1157 * t487 + t1159 * t953 + t1165 * t486;
t246 = Icges(5,5) * t487 - Icges(5,6) * t486 + Icges(5,3) * t953;
t249 = Icges(6,4) * t487 + Icges(6,2) * t953 + Icges(6,6) * t486;
t1160 = t246 + t249;
t997 = Icges(6,5) * t486;
t255 = Icges(6,1) * t487 + Icges(6,4) * t953 + t997;
t443 = Icges(5,4) * t486;
t258 = Icges(5,1) * t487 + Icges(5,5) * t953 - t443;
t1173 = t255 + t258;
t440 = Icges(6,5) * t487;
t243 = Icges(6,6) * t953 + Icges(6,3) * t486 + t440;
t1004 = Icges(5,4) * t487;
t252 = -Icges(5,2) * t486 + Icges(5,6) * t953 + t1004;
t1175 = t243 - t252;
t1124 = t1160 * t953 + t1173 * t487 + t1175 * t486;
t484 = t605 * t945 + t940;
t485 = t605 * t942 - t936;
t955 = t604 * t627;
t244 = Icges(5,5) * t485 - Icges(5,6) * t484 + Icges(5,3) * t955;
t247 = Icges(6,4) * t485 + Icges(6,2) * t955 + Icges(6,6) * t484;
t1122 = t244 + t247;
t439 = Icges(6,5) * t485;
t242 = -Icges(6,6) * t955 - Icges(6,3) * t484 - t439;
t442 = Icges(5,4) * t485;
t250 = -Icges(5,2) * t484 + Icges(5,6) * t955 + t442;
t1123 = t242 + t250;
t438 = Icges(6,5) * t484;
t253 = Icges(6,1) * t485 + Icges(6,4) * t955 + t438;
t441 = Icges(5,4) * t484;
t257 = -Icges(5,1) * t485 - Icges(5,5) * t955 + t441;
t1174 = t253 - t257;
t1125 = t1122 * t953 - t1123 * t486 + t1174 * t487;
t603 = qJD(2) * t627;
t528 = qJD(3) * t627 + t603;
t877 = qJD(4) * t630;
t431 = t604 * t877 + t528;
t621 = qJD(2) + qJD(3);
t529 = t621 * t630;
t432 = -t604 * t879 + t529;
t881 = qJD(4) * t605;
t565 = qJD(1) - t881;
t1133 = t1083 * t565 + t1124 * t431 - t1125 * t432;
t1084 = t1157 * t485 + t1159 * t955 + t1165 * t484;
t1126 = t1160 * t955 + t1173 * t485 + t1175 * t484;
t1127 = t1122 * t955 - t1123 * t484 + t1174 * t485;
t1134 = t1084 * t565 + t1126 * t431 - t1127 * t432;
t592 = t605 * pkin(3);
t1076 = pkin(8) * t604 + t592;
t950 = t605 * t627;
t566 = pkin(8) * t950;
t868 = pkin(3) * t955;
t479 = t566 - t868;
t507 = pkin(3) * t604 - pkin(8) * t605;
t1185 = qJD(1) * t479 + t1076 * t529 + t507 * t885;
t836 = t605 * t877;
t861 = t604 * t936;
t218 = qJD(1) * t484 + t621 * t861 - t625 * t879 - t628 * t836;
t724 = t565 * t625;
t799 = qJD(1) * t605 - qJD(4);
t863 = t604 * t529;
t219 = t630 * t724 + (-t627 * t799 - t863) * t628;
t843 = t604 * t885;
t859 = t605 * t529;
t684 = -t843 + t859;
t126 = Icges(6,5) * t219 + Icges(6,6) * t684 - Icges(6,3) * t218;
t132 = Icges(5,4) * t219 + Icges(5,2) * t218 + Icges(5,6) * t684;
t1184 = t126 - t132;
t862 = t604 * t945;
t878 = qJD(4) * t628;
t884 = qJD(1) * t630;
t220 = -t621 * t862 - t625 * t877 - t628 * t885 + (t625 * t884 + t627 * t878) * t605;
t946 = t621 * t628;
t221 = t799 * t940 + (-t604 * t946 + t724) * t627;
t947 = t621 * t627;
t685 = t604 * t884 + t605 * t947;
t127 = Icges(6,5) * t221 + Icges(6,6) * t685 + Icges(6,3) * t220;
t133 = Icges(5,4) * t221 - Icges(5,2) * t220 + Icges(5,6) * t685;
t1183 = t127 - t133;
t128 = Icges(5,5) * t219 + Icges(5,6) * t218 + Icges(5,3) * t684;
t130 = Icges(6,4) * t219 + Icges(6,2) * t684 - Icges(6,6) * t218;
t1182 = t128 + t130;
t129 = Icges(5,5) * t221 - Icges(5,6) * t220 + Icges(5,3) * t685;
t131 = Icges(6,4) * t221 + Icges(6,2) * t685 + Icges(6,6) * t220;
t1181 = t129 + t131;
t134 = Icges(6,1) * t219 + Icges(6,4) * t684 - Icges(6,5) * t218;
t136 = Icges(5,1) * t219 + Icges(5,4) * t218 + Icges(5,5) * t684;
t1180 = t134 + t136;
t135 = Icges(6,1) * t221 + Icges(6,4) * t685 + Icges(6,5) * t220;
t137 = Icges(5,1) * t221 - Icges(5,4) * t220 + Icges(5,5) * t685;
t1179 = t135 + t137;
t1178 = t1191 * t621 + (qJD(4) * t1188 - t1166 * t621) * t604;
t1177 = t1190 * t621 + (qJD(4) * t1187 + t1192 * t621) * t604;
t771 = -Icges(5,1) * t625 - t1002;
t1176 = t1189 * t621 + (t1167 * t621 + (-Icges(6,1) * t625 + t771 + t995) * qJD(4)) * t604;
t1128 = rSges(6,3) + qJ(5);
t1142 = rSges(6,1) + pkin(4);
t585 = t604 * rSges(6,2);
t949 = t605 * t628;
t951 = t605 * t625;
t1079 = -t1128 * t951 - t1142 * t949 - t585;
t778 = rSges(6,1) * t628 + rSges(6,3) * t625;
t1156 = (-pkin(4) * t628 - qJ(5) * t625 - t778) * t604;
t556 = rSges(6,2) * t950;
t1116 = t1156 * t627 + t556;
t876 = qJD(5) * t625;
t540 = t604 * t876;
t915 = -rSges(6,2) * t605 - t1156;
t1172 = -t1079 * t432 + t1116 * t565 + t1186 * t915 + t540 * t630 + t1185;
t1171 = t1157 * t628 + t1165 * t625;
t434 = qJD(5) * t484;
t948 = t605 * t630;
t570 = pkin(3) * t948;
t482 = pkin(8) * t953 + t570;
t626 = sin(qJ(2));
t944 = t626 * t627;
t869 = pkin(2) * t944;
t572 = qJD(2) * t869;
t617 = t627 * pkin(6);
t544 = pkin(1) * t630 + t617;
t629 = cos(qJ(2));
t618 = t629 * pkin(2);
t595 = t618 + pkin(1);
t631 = -pkin(7) - pkin(6);
t803 = t595 * t630 - t627 * t631;
t394 = t803 - t544;
t912 = t394 + t544;
t687 = (t482 + t912) * qJD(1) - t528 * t507 - t572;
t929 = rSges(6,2) * t953 + t1128 * t486 + t1142 * t487;
t1097 = t431 * t915 - t565 * t929 - t434 - t687;
t870 = -qJDD(2) - qJDD(3);
t871 = qJDD(4) * t604;
t880 = qJD(4) * t621;
t882 = qJD(4) * t604;
t873 = qJD(1) * qJD(2);
t589 = t627 * t873;
t872 = qJD(1) * qJD(3);
t890 = t627 * t872 + t589;
t207 = (t605 * t880 + t871) * t627 + (qJD(1) * t882 + t870) * t630 + t890;
t433 = -qJDD(4) * t605 + t604 * t880 + qJDD(1);
t517 = t621 * t868;
t273 = pkin(8) * t685 + qJD(1) * t570 - t517;
t413 = t630 * t870 + t890;
t424 = t1076 * t621;
t1027 = pkin(2) * t626;
t522 = -qJDD(2) * t630 + t589;
t938 = t629 * qJD(2) ^ 2;
t726 = -pkin(2) * t630 * t938 + t1027 * t522;
t480 = t1076 * t627;
t619 = t630 * pkin(6);
t543 = pkin(1) * t627 - t619;
t598 = t630 * t631;
t894 = -t595 * t627 - t598;
t393 = t543 + t894;
t913 = t393 - t543;
t846 = -t480 + t913;
t1021 = pkin(1) - t595;
t892 = t631 * t885 + t572;
t322 = (-t1021 * t630 - t617) * qJD(1) - t892;
t519 = t544 * qJD(1);
t925 = -t322 - t519;
t643 = t413 * t507 + (-t273 + t925) * qJD(1) + t846 * qJDD(1) - t529 * t424 + t726;
t1081 = -t1128 * t484 - t1142 * t485;
t931 = rSges(6,2) * t955 - t1081;
t860 = t621 * t951;
t683 = t604 * t878 + t860;
t952 = t605 * t621;
t933 = t778 * t952 + (rSges(6,2) * t621 + (-rSges(6,1) * t625 + rSges(6,3) * t628) * qJD(4)) * t604 + t540 + t683 * qJ(5) + (t605 * t946 - t625 * t882) * pkin(4);
t1150 = -t1128 * t220 - t1142 * t221 - t434;
t934 = -rSges(6,2) * t685 + t1150;
t24 = -qJD(5) * t218 + qJDD(5) * t486 + t207 * t915 - t432 * t933 - t433 * t931 + t565 * t934 + t643;
t1170 = (-qJD(1) * t1097 + t24) * t630;
t435 = qJD(5) * t486;
t1169 = -t565 * t931 + t435;
t883 = qJD(2) * t630;
t839 = t626 * t883;
t800 = pkin(2) * t839;
t1078 = -t507 * t529 - t800;
t661 = qJD(1) * t846 + t1078;
t83 = -t432 * t915 + t1169 + t661;
t1168 = t630 * t83;
t783 = rSges(5,1) * t485 - rSges(5,2) * t484;
t264 = -rSges(5,3) * t955 - t783;
t1019 = rSges(5,1) * t628;
t782 = -rSges(5,2) * t625 + t1019;
t389 = -rSges(5,3) * t605 + t604 * t782;
t1164 = t264 * t565 - t389 * t432;
t1163 = t24 - g(1);
t1140 = t1122 * t684 + t1123 * t218 + t1174 * t219 + t1179 * t487 + t1181 * t953 + t1183 * t486;
t1139 = t1160 * t684 + t1173 * t219 - t1175 * t218 + t1180 * t487 + t1182 * t953 + t1184 * t486;
t1138 = t1122 * t685 - t1123 * t220 + t1174 * t221 + t1179 * t485 + t1181 * t955 + t1183 * t484;
t1137 = t1160 * t685 + t1173 * t221 + t1175 * t220 + t1180 * t485 + t1182 * t955 + t1184 * t484;
t1131 = t1157 * t219 + t1159 * t684 - t1165 * t218 + t1176 * t487 + t1177 * t953 + t1178 * t486;
t1130 = t1157 * t221 + t1159 * t685 + t1165 * t220 + t1176 * t485 + t1177 * t955 + t1178 * t484;
t743 = -t242 * t625 + t253 * t628;
t114 = -t247 * t605 + t604 * t743;
t741 = -t250 * t625 - t257 * t628;
t116 = -t244 * t605 + t604 * t741;
t1162 = t114 + t116;
t742 = t243 * t625 + t255 * t628;
t115 = -t249 * t605 + t604 * t742;
t740 = -t252 * t625 + t258 * t628;
t117 = -t246 * t605 + t604 * t740;
t1161 = t115 + t117;
t1082 = -t1159 * t605 + t1171 * t604;
t1158 = -t604 * t761 + t1193;
t1155 = (t1192 * t604 - t1171 + t1190) * t565 + (t1159 * t627 + t741 + t743) * t432 + (-t1159 * t630 - t740 - t742) * t431;
t902 = -t1128 * t954 + t1142 * t956;
t1154 = (t1171 * t621 - t1177) * t605 + (t1176 * t628 + t1178 * t625 + t1159 * t621 + (-t1157 * t625 + t1165 * t628) * qJD(4)) * t604;
t1151 = rSges(6,2) * t859 - t1128 * t218 + t1142 * t219 + t435;
t1149 = (-t1166 * t485 - t1167 * t484) * t432 + (t1166 * t487 + t1167 * t486) * t431 - t1187 * t565 * t604;
t521 = qJDD(2) * t627 + t630 * t873;
t412 = qJDD(3) * t627 + t630 * t872 + t521;
t206 = qJD(4) * t684 + t630 * t871 + t412;
t1144 = t1083 * t433 + t1124 * t206 + t1125 * t207 + t1131 * t565 + t1139 * t431 - t1140 * t432;
t1143 = t1084 * t433 + t1126 * t206 + t1127 * t207 + t1130 * t565 + t1137 * t431 - t1138 * t432;
t518 = pkin(8) * t859;
t686 = -t605 * t885 - t863;
t272 = pkin(3) * t686 - pkin(8) * t843 + t518;
t599 = pkin(6) * t884;
t321 = -t800 - t599 + (t1021 * t627 - t598) * qJD(1);
t901 = qJD(1) * (-pkin(1) * t885 + t599) + qJDD(1) * t544;
t659 = qJD(1) * t321 + qJDD(1) * t394 + (-t521 * t626 - t627 * t938) * pkin(2) + t901;
t642 = qJD(1) * t272 + qJDD(1) * t482 - t412 * t507 - t424 * t528 + t659;
t935 = -rSges(6,2) * t843 + t1151;
t25 = qJD(5) * t220 + qJDD(5) * t484 - t206 * t915 - t431 * t933 + t433 * t929 + t565 * t935 + t642;
t1141 = t25 - g(2);
t37 = (t621 * t743 - t131) * t605 + (t127 * t625 + t135 * t628 + t247 * t621 + (-t242 * t628 - t253 * t625) * qJD(4)) * t604;
t39 = (t621 * t741 - t129) * t605 + (-t133 * t625 + t137 * t628 + t244 * t621 + (-t250 * t628 + t257 * t625) * qJD(4)) * t604;
t1136 = t37 + t39;
t38 = (t621 * t742 - t130) * t605 + (t126 * t625 + t134 * t628 + t249 * t621 + (t243 * t628 - t255 * t625) * qJD(4)) * t604;
t40 = (t621 * t740 - t128) * t605 + (-t132 * t625 + t136 * t628 + t246 * t621 + (-t252 * t628 - t258 * t625) * qJD(4)) * t604;
t1135 = t38 + t40;
t1132 = t1082 * t565 + t1161 * t431 - t1162 * t432;
t1129 = rSges(3,2) * t626;
t1120 = t1158 * t627;
t1119 = t1158 * t630;
t1118 = t1157 * t627;
t1117 = t1157 * t630;
t563 = rSges(6,2) * t948;
t1115 = t1156 * t630 + t563;
t1114 = -t1166 * t604 + t1191;
t1113 = t1167 * t604 + t1189;
t990 = Icges(4,6) * t630;
t402 = Icges(4,4) * t950 - Icges(4,2) * t955 - t990;
t583 = Icges(4,4) * t605;
t503 = Icges(4,1) * t604 + t583;
t1112 = -t503 * t627 - t402;
t768 = -Icges(4,2) * t604 + t583;
t403 = Icges(4,6) * t627 + t630 * t768;
t1111 = -t503 * t630 - t403;
t1005 = Icges(4,4) * t604;
t504 = Icges(4,1) * t605 - t1005;
t405 = Icges(4,5) * t627 + t504 * t630;
t501 = Icges(4,2) * t605 + t1005;
t1110 = -t501 * t630 + t405;
t1109 = -t501 + t504;
t1108 = t503 + t768;
t1063 = g(1) * t630 + g(2) * t627;
t1055 = t604 * t1063;
t920 = -t393 * t603 + t394 * t883;
t720 = t480 * t528 + t482 * t529 + t920;
t72 = t431 * t931 + t432 * t929 + t540 + t720;
t569 = pkin(8) * t948;
t481 = -pkin(3) * t953 + t569;
t805 = qJD(1) * t481 - t1076 * t528;
t810 = t479 * t528 + t481 * t529;
t817 = t1097 * t915;
t818 = t83 * t931;
t819 = t72 * t929;
t1107 = -t72 * (t1115 * t432 + t1116 * t431 + t605 * t876 + t836 * t931 + t810) + t1097 * (t1079 * t431 + t1115 * t565 - t540 * t627 + t882 * t929 + t805) - (-t604 * t818 + (-t627 * t819 + t630 * t817) * t605) * qJD(4) - (-t1128 * t625 - t1142 * t628 - pkin(3)) * t1055;
t266 = rSges(5,1) * t487 - rSges(5,2) * t486 + rSges(5,3) * t953;
t103 = t266 * t565 - t389 * t431 + t687;
t867 = rSges(5,1) * t954;
t899 = rSges(5,2) * t862 + rSges(5,3) * t950;
t343 = -t627 * t867 + t899;
t898 = rSges(5,2) * t861 + rSges(5,3) * t948;
t345 = -t630 * t867 + t898;
t584 = t604 * rSges(5,3);
t391 = rSges(5,1) * t949 - rSges(5,2) * t951 + t584;
t95 = -t264 * t431 + t266 * t432 + t720;
t1106 = -t103 * (t266 * t882 + t345 * t565 - t389 * t836 - t391 * t431 + t805) - t95 * (-t264 * t836 - t266 * t837 + t343 * t431 + t345 * t432 + t810) - (-pkin(3) - t1019) * t1055;
t1105 = t1155 * t604;
t1104 = -t1122 * t432 + t1159 * t565 + t1160 * t431;
t1072 = t1161 * t630 + t1162 * t627;
t1103 = -t1161 * t627 + t1162 * t630;
t1071 = t1124 * t630 + t1125 * t627;
t1102 = -t1124 * t627 + t1125 * t630;
t1070 = t1126 * t630 + t1127 * t627;
t1101 = -t1126 * t627 + t1127 * t630;
t1100 = t1186 * t389 - t264 * t882 + t343 * t565 + t391 * t432 + t1185;
t784 = rSges(5,1) * t221 - rSges(5,2) * t220;
t141 = rSges(5,3) * t685 + t784;
t781 = -rSges(5,1) * t625 - rSges(5,2) * t628;
t199 = t782 * t952 + (rSges(5,3) * t621 + qJD(4) * t781) * t604;
t41 = -t141 * t565 - t199 * t432 + t207 * t389 + t264 * t433 + t643;
t1099 = (qJD(1) * t103 + t41) * t630;
t1098 = -t72 * t931 - t817;
t586 = t605 * rSges(4,1);
t1065 = -rSges(4,2) * t604 + t586;
t407 = rSges(4,1) * t950 - rSges(4,2) * t955 - rSges(4,3) * t630;
t613 = t627 * rSges(4,3);
t408 = rSges(4,1) * t948 - rSges(4,2) * t953 + t613;
t151 = t407 * t528 + t408 * t529 + t920;
t505 = rSges(4,1) * t604 + rSges(4,2) * t605;
t689 = -t505 * t529 - t800;
t849 = -t407 + t913;
t161 = qJD(1) * t849 + t689;
t162 = -t505 * t528 - t572 + (t408 + t912) * qJD(1);
t476 = t505 * t627;
t478 = t505 * t630;
t1096 = -t161 * (qJD(1) * t476 - t1065 * t529) - t151 * (-t476 * t528 - t478 * t529) - t162 * (-qJD(1) * t478 - t1065 * t528);
t526 = qJD(1) * t543;
t1080 = qJD(1) * t393 - t526;
t612 = Icges(3,4) * t629;
t769 = -Icges(3,2) * t626 + t612;
t1075 = (t1188 * t604 - t1157) * t565 + (-t1152 * t485 + t1174 + t438 - t441) * t432 + (t1152 * t487 - t1173 + t443 - t997) * t431;
t1074 = (-Icges(6,1) * t956 + t771 * t604 + t1165 + t549) * t565 + (t1153 * t484 + t1123 - t439 + t442) * t432 + (-t1153 * t486 - t1004 + t1175 + t440) * t431;
t1073 = t1149 * t604;
t534 = Icges(3,1) * t626 + t612;
t1064 = t1082 * t433 + t1154 * t565;
t941 = t627 * t629;
t987 = Icges(3,3) * t630;
t425 = Icges(3,5) * t941 - Icges(3,6) * t944 - t987;
t1000 = Icges(3,5) * t630;
t580 = Icges(3,4) * t944;
t429 = Icges(3,1) * t941 - t1000 - t580;
t991 = Icges(3,6) * t630;
t427 = Icges(3,4) * t941 - Icges(3,2) * t944 - t991;
t962 = t427 * t626;
t732 = -t429 * t629 + t962;
t168 = -t425 * t630 - t627 * t732;
t500 = Icges(4,5) * t605 - Icges(4,6) * t604;
t499 = Icges(4,5) * t604 + Icges(4,6) * t605;
t959 = t499 * t630;
t964 = t403 * t604;
t986 = Icges(4,3) * t630;
t1061 = -t621 * t959 + (-t405 * t605 - t500 * t627 + t964 + t986) * qJD(1);
t550 = Icges(4,4) * t955;
t999 = Icges(4,5) * t630;
t404 = Icges(4,1) * t950 - t550 - t999;
t734 = t402 * t604 - t404 * t605;
t401 = Icges(4,3) * t627 + t500 * t630;
t888 = qJD(1) * t401;
t960 = t499 * t627;
t1060 = qJD(1) * t734 - t621 * t960 + t888;
t531 = Icges(3,5) * t629 - Icges(3,6) * t626;
t530 = Icges(3,5) * t626 + Icges(3,6) * t629;
t691 = qJD(2) * t530;
t1006 = Icges(3,4) * t626;
t535 = Icges(3,1) * t629 - t1006;
t430 = Icges(3,5) * t627 + t535 * t630;
t428 = Icges(3,6) * t627 + t630 * t769;
t961 = t428 * t626;
t731 = -t430 * t629 + t961;
t1059 = -t630 * t691 + (-t531 * t627 + t731 + t987) * qJD(1);
t426 = Icges(3,3) * t627 + t531 * t630;
t887 = qJD(1) * t426;
t1058 = qJD(1) * t732 - t627 * t691 + t887;
t729 = t501 * t604 - t503 * t605;
t1057 = qJD(1) * t729 + t500 * t621;
t532 = Icges(3,2) * t629 + t1006;
t727 = t532 * t626 - t534 * t629;
t1056 = t727 * qJD(1) + qJD(2) * t531;
t1054 = t627 * (-t532 * t630 + t430) - t630 * (-Icges(3,2) * t941 + t429 - t580);
t1051 = qJD(1) * t1108 + t528 * t1110 - t529 * (-Icges(4,2) * t950 + t404 - t550);
t1050 = t206 / 0.2e1;
t1049 = t207 / 0.2e1;
t1048 = t412 / 0.2e1;
t1047 = t413 / 0.2e1;
t1046 = -t431 / 0.2e1;
t1045 = t431 / 0.2e1;
t1044 = -t432 / 0.2e1;
t1043 = t432 / 0.2e1;
t1041 = t521 / 0.2e1;
t1040 = t522 / 0.2e1;
t1039 = -t528 / 0.2e1;
t1038 = t528 / 0.2e1;
t1037 = -t529 / 0.2e1;
t1036 = t529 / 0.2e1;
t1035 = -t565 / 0.2e1;
t1034 = t565 / 0.2e1;
t1032 = t627 / 0.2e1;
t1031 = -t630 / 0.2e1;
t1029 = -rSges(6,2) - pkin(8);
t1028 = -rSges(5,3) - pkin(8);
t1026 = g(1) * t627;
t1023 = -qJD(1) / 0.2e1;
t1022 = qJD(1) / 0.2e1;
t1020 = rSges(3,1) * t629;
t1018 = rSges(3,2) * t629;
t1016 = t37 * t432;
t1015 = t38 * t431;
t1014 = t39 * t432;
t1013 = t40 * t431;
t614 = t627 * rSges(3,3);
t1012 = t627 * t1097;
t1011 = qJDD(1) / 0.2e1;
t983 = qJD(1) * t72;
t981 = qJD(1) * t95;
t980 = t103 * t627;
t975 = t114 * t207;
t974 = t115 * t206;
t973 = t116 * t207;
t972 = t117 * t206;
t969 = t161 * t627;
t536 = rSges(3,1) * t626 + t1018;
t840 = t536 * t883;
t891 = rSges(3,2) * t944 + rSges(3,3) * t630;
t436 = rSges(3,1) * t941 - t891;
t905 = -t436 - t543;
t268 = qJD(1) * t905 - t840;
t968 = t268 * t627;
t967 = t268 * t630;
t939 = t629 * t630;
t943 = t626 * t630;
t437 = rSges(3,1) * t939 - rSges(3,2) * t943 + t614;
t364 = t437 + t544;
t269 = qJD(1) * t364 - t536 * t603;
t496 = t536 * t630;
t966 = t269 * t496;
t958 = t530 * t627;
t957 = t530 * t630;
t400 = Icges(4,5) * t950 - Icges(4,6) * t955 - t986;
t937 = t630 * t400;
t932 = -t199 - t424;
t928 = -t266 - t482;
t927 = t1128 * t485 - t1142 * t484;
t926 = t1128 * t487 - t1142 * t486;
t924 = -t400 * t627 - t404 * t948;
t923 = t401 * t627 + t405 * t948;
t919 = -t393 * t627 + t394 * t630;
t918 = t407 * t627 + t408 * t630;
t917 = -t425 * t627 - t429 * t939;
t916 = t426 * t627 + t430 * t939;
t908 = t480 * t627 + t482 * t630;
t897 = rSges(4,2) * t843 + rSges(4,3) * t884;
t896 = -t532 + t535;
t895 = t534 + t769;
t893 = rSges(3,3) * t884 + t1129 * t885;
t886 = qJD(1) * t531;
t185 = -t627 * t729 - t959;
t875 = t185 * qJD(1);
t274 = -t627 * t727 - t957;
t874 = t274 * qJD(1);
t864 = qJD(2) * t618;
t858 = -t424 - t933;
t232 = rSges(4,1) * t686 - rSges(4,2) * t859 + t897;
t233 = -t621 * t476 + (t1065 * t630 + t613) * qJD(1);
t857 = t232 * t630 + t233 * t627 + t407 * t884;
t856 = rSges(5,1) * t219 + rSges(5,2) * t218 + rSges(5,3) * t859;
t854 = t272 * t630 + t273 * t627 + t480 * t884;
t853 = -t482 - t929;
t852 = t321 * t630 + t322 * t627 - t393 * t884;
t847 = t517 + t892;
t845 = t1029 * t604;
t844 = t1028 * t604;
t841 = t626 * t884;
t831 = t952 / 0.2e1;
t830 = -pkin(1) - t1020;
t828 = t885 / 0.2e1;
t827 = t884 / 0.2e1;
t826 = -t603 / 0.2e1;
t825 = t603 / 0.2e1;
t824 = -t883 / 0.2e1;
t823 = t883 / 0.2e1;
t688 = -t505 - t1027;
t820 = -t507 - t1027;
t816 = (-t627 ^ 2 - t630 ^ 2) * t626;
t815 = (-t627 * t768 + t990) * qJD(1) + t1110 * t621;
t814 = qJD(1) * t403 + t404 * t621 - t501 * t947;
t813 = (-t504 * t627 + t999) * qJD(1) + t1111 * t621;
t812 = qJD(1) * t405 + t1112 * t621;
t346 = t405 * t950;
t811 = t401 * t630 - t346;
t373 = t430 * t941;
t809 = t426 * t630 - t373;
t808 = -t400 + t964;
t807 = t1108 * t621;
t806 = t1109 * t621;
t804 = -t425 + t961;
t798 = -t264 * t627 + t266 * t630 + t908;
t791 = t566 - t869;
t790 = -pkin(2) * t943 + t569;
t789 = -t389 + t820;
t421 = t1065 * t621;
t788 = -t421 - t864;
t787 = -t424 - t864;
t539 = rSges(2,1) * t630 - rSges(2,2) * t627;
t537 = rSges(2,1) * t627 + rSges(2,2) * t630;
t538 = t1020 - t1129;
t271 = t428 * t629 + t430 * t626;
t692 = qJD(2) * t532;
t292 = -t630 * t692 + (-t627 * t769 + t991) * qJD(1);
t693 = qJD(2) * t534;
t294 = -t630 * t693 + (-t535 * t627 + t1000) * qJD(1);
t646 = -qJD(2) * t271 - t292 * t626 + t294 * t629 + t887;
t270 = t427 * t629 + t429 * t626;
t293 = qJD(1) * t428 - t627 * t692;
t295 = qJD(1) * t430 - t627 * t693;
t647 = qJD(1) * t425 - qJD(2) * t270 - t293 * t626 + t295 * t629;
t776 = t627 * (t1059 * t627 + t630 * t646) - t630 * (t1058 * t627 + t630 * t647);
t775 = t627 * (-t1059 * t630 + t627 * t646) - t630 * (-t1058 * t630 + t627 * t647);
t102 = t1164 + t661;
t759 = t102 * t630 + t980;
t746 = -t161 * t630 - t162 * t627;
t169 = -t428 * t944 - t809;
t745 = -t168 * t630 + t169 * t627;
t170 = -t427 * t943 - t917;
t171 = -t428 * t943 + t916;
t744 = -t170 * t630 + t171 * t627;
t739 = -t264 * t630 - t266 * t627;
t738 = -t269 * t627 - t967;
t296 = -t883 * t1018 + (-t629 * t885 - t839) * rSges(3,1) + t893;
t495 = t536 * t627;
t297 = -qJD(2) * t495 + (t538 * t630 + t614) * qJD(1);
t737 = t296 * t630 + t297 * t627;
t187 = t402 * t605 + t404 * t604;
t730 = t436 * t627 + t437 * t630;
t728 = t532 * t629 + t534 * t626;
t725 = t820 - t915;
t723 = -t199 + t787;
t722 = -t595 - t1076;
t721 = t321 * t883 + t322 * t603 - t393 * t521 - t394 * t522;
t718 = t803 + t482;
t717 = t845 - t592;
t716 = t844 - t592;
t139 = -rSges(5,3) * t843 + t856;
t715 = t139 * t630 + t141 * t627 - t264 * t884 + t854;
t714 = t627 * t931 + t630 * t929 + t908;
t701 = t787 - t933;
t694 = t734 * t627;
t690 = t1076 - t1079;
t682 = t391 + t1076;
t677 = qJD(1) * t500 - t528 * t959 + t529 * t960;
t676 = t83 * t915 - t819;
t675 = t427 * t630 - t428 * t627;
t673 = -t627 * t934 + t630 * t935 + t884 * t931 + t854;
t670 = -pkin(3) * t863 + t518 - t800;
t663 = (-t626 * t895 + t629 * t896) * qJD(1);
t662 = -qJD(1) * t480 + t1078 + t1080;
t653 = qJD(1) * t1109 + t1111 * t528 - t1112 * t529;
t652 = t272 * t529 + t273 * t528 + t412 * t480 - t413 * t482 + t721;
t650 = qJD(1) * t400 - t604 * t814 + t605 * t812;
t649 = -t604 * t815 + t605 * t813 + t888;
t648 = qJD(1) * t499 - t604 * t807 + t605 * t806;
t510 = t769 * qJD(2);
t511 = t535 * qJD(2);
t645 = qJD(1) * t530 - qJD(2) * t728 - t510 * t626 + t511 * t629;
t641 = -t1054 * t626 + t629 * t675;
t637 = -t1051 * t604 + t605 * t653;
t100 = t1057 * t627 + t630 * t648;
t101 = -t1057 * t630 + t627 * t648;
t112 = t604 * t812 + t605 * t814;
t113 = t604 * t813 + t605 * t815;
t163 = -t694 - t937;
t164 = -t403 * t955 - t811;
t165 = -t402 * t953 - t924;
t166 = -t403 * t953 + t923;
t186 = -t630 * t729 + t960;
t188 = t403 * t605 + t405 * t604;
t78 = t1060 * t627 + t630 * t650;
t79 = t1061 * t627 + t630 * t649;
t80 = -t1060 * t630 + t627 * t650;
t81 = -t1061 * t630 + t627 * t649;
t91 = -t163 * t529 + t164 * t528 + t875;
t184 = t186 * qJD(1);
t92 = -t165 * t529 + t166 * t528 + t184;
t635 = (t1051 * t605 + t604 * t653) * t1023 - t1132 * t882 / 0.2e1 + (t92 + t1133) * t827 + (t91 + t1134) * t828 + ((t1083 * t604 + t1125 * t950) * qJD(4) + ((qJD(4) * t1124 + t1104) * t605 + t1105) * t630 + (t1113 * t487 + t1114 * t486) * t565 + (t1118 * t487 - t1120 * t486) * t432 + (-t1117 * t487 + t1119 * t486) * t431) * t1046 + ((t1084 * t604 + t1126 * t948) * qJD(4) + ((qJD(4) * t1127 + t1104) * t605 + t1105) * t627 + (t1113 * t485 + t1114 * t484) * t565 + (t1118 * t485 - t1120 * t484) * t432 + (-t1117 * t485 + t1119 * t484) * t431) * t1043 + (t627 * t637 - t630 * t677) * t1036 + (t627 * t81 - t630 * t80 + (t163 * t627 + t164 * t630) * qJD(1)) * t1037 + (t627 * t79 - t630 * t78 + (t165 * t627 + t166 * t630) * qJD(1)) * t1038 + (t627 * t677 + t630 * t637) * t1039 + (-t163 * t630 + t164 * t627) * t1047 + (-t165 * t630 + t166 * t627) * t1048 + ((qJD(4) * t1072 - t1155) * t605 + ((t1113 * t628 + t1114 * t625 + t1159) * t565 + (t1118 * t628 - t1120 * t625 - t1122) * t432 + (-t1117 * t628 + t1119 * t625 + t1160) * t431 + t1082 * qJD(4)) * t604) * t1035 + (-t187 * t630 + t188 * t627) * t1011 + (-t112 * t630 + t113 * t627 + (t187 * t627 + t188 * t630) * qJD(1)) * t1022 - t1101 * t207 / 0.2e1 - t1102 * t206 / 0.2e1 - t1103 * t433 / 0.2e1 + (qJD(1) * t1072 + t1135 * t627 - t1136 * t630) * t1034 + (qJD(1) * t1070 + t1137 * t627 - t1138 * t630) * t1044 + (qJD(1) * t1071 + t1139 * t627 - t1140 * t630) * t1045 + (qJD(1) * t101 + qJDD(1) * t185 + t163 * t413 + t164 * t412 + t528 * t81 - t529 * t80 + t1143) * t1031 + (qJD(1) * t100 + qJDD(1) * t186 + t165 * t413 + t166 * t412 + t528 * t79 - t529 * t78 + t1144) * t1032 - (t1133 * t630 + t1134 * t627) * t881 / 0.2e1;
t514 = t538 * qJD(2);
t474 = t781 * t604;
t319 = -rSges(5,1) * t486 - rSges(5,2) * t487;
t314 = -rSges(5,1) * t484 - rSges(5,2) * t485;
t275 = -t630 * t727 + t958;
t267 = t275 * qJD(1);
t240 = t730 * qJD(2);
t149 = qJD(1) * t296 + qJDD(1) * t437 - t514 * t603 - t521 * t536 + t901;
t148 = -t514 * t883 + t522 * t536 + t905 * qJDD(1) + (-t297 - t519) * qJD(1);
t121 = -t1056 * t630 + t627 * t645;
t120 = t1056 * t627 + t630 * t645;
t119 = -qJD(2) * t731 + t292 * t629 + t294 * t626;
t118 = -qJD(2) * t732 + t293 * t629 + t295 * t626;
t99 = qJD(2) * t744 + t267;
t98 = qJD(2) * t745 + t874;
t94 = qJD(1) * t232 + qJDD(1) * t408 - t412 * t505 - t421 * t528 + t659;
t93 = t413 * t505 - t421 * t529 + t849 * qJDD(1) + (-t233 + t925) * qJD(1) + t726;
t73 = t232 * t529 + t233 * t528 + t407 * t412 - t408 * t413 + t721;
t42 = t139 * t565 - t199 * t431 - t206 * t389 + t266 * t433 + t642;
t28 = t139 * t432 + t141 * t431 - t206 * t264 - t207 * t266 + t652;
t19 = qJD(5) * t683 + qJDD(5) * t956 + t206 * t931 - t207 * t929 - t431 * t934 + t432 * t935 + t652;
t1 = [(t100 + t113) * t1038 + (-qJD(2) * t727 + t510 * t629 + t511 * t626 + t604 * t806 + t605 * t807) * qJD(1) + (t91 - t875 + (t166 - t694 - t923) * t529 + (t627 * t808 + t165 - t346) * t528 + ((t401 + t734) * t528 + t808 * t529) * t630) * t1039 + (-(-qJD(1) * t436 - t268 - t526 - t840) * t269 + t269 * (t599 + t893) + (t536 * t968 - t966) * qJD(2) + ((-pkin(1) - t538) * t967 + (t268 * (-rSges(3,3) - pkin(6)) + t269 * t830) * t627) * qJD(1) + (-g(2) + t149) * t364 + (-g(1) + t148) * (t627 * t830 + t619 + t891)) * m(3) + (t161 * t892 + t162 * (-t800 + t897) + (-t162 * t478 + t505 * t969) * t621 + ((-t161 * rSges(4,3) + t162 * (-t595 - t586)) * t627 + (t161 * (-t595 - t1065) - t162 * t631) * t630) * qJD(1) - (-qJD(1) * t407 + t1080 - t161 + t689) * t162 + (t94 - g(2)) * (t408 + t803) + (t93 - g(1)) * (-t407 + t894)) * m(4) + (t267 + ((t169 - t373 + (t426 + t962) * t630 + t917) * t630 + t916 * t627) * qJD(2)) * t823 + (t98 - t874 + ((t630 * t804 + t171 - t916) * t630 + (t627 * t804 + t170 + t809) * t627) * qJD(2)) * t826 + (t274 + t270) * t1040 + (t119 + t120) * t825 + (-(-t102 + t1164 + t662) * t103 + t102 * (-t784 + t847) + t103 * (t670 + t856) + (t41 * t844 + (t102 * t1028 * t621 - pkin(3) * t41) * t605) * t627 + ((-t595 + t716) * t980 + (t102 * (t722 - t584) - t103 * t631) * t630) * qJD(1) - t716 * t1026 + (t42 - g(2)) * (t718 + t266) + (t41 - g(1)) * (-t783 + t894)) * m(5) + (m(2) * (t537 ^ 2 + t539 ^ 2) + t728 + t501 * t605 + t503 * t604 + Icges(2,3)) * qJDD(1) + (t118 + t121 + t99) * t824 + (t275 + t271) * t1041 + t1015 / 0.2e1 - t1016 / 0.2e1 + t1131 * t1045 + (t1130 + t1133) * t1044 + (t184 + (t164 + (t402 * t630 + t403 * t627) * t604 + t811 + t924) * t529 + (-t404 * t950 + t937 + t163 + (t402 * t627 - t403 * t630) * t604 + t923) * t528) * t1036 + (t101 + t112 + t92) * t1037 + t1083 * t1050 + t1084 * t1049 + t1133 * t1043 + t1064 + (-t817 * t432 + t83 * (t847 + t1150) + (t24 * t845 + (t1029 * t621 * t83 - pkin(3) * t24) * t605) * t627 + (-(-t595 + t717) * t1012 + (t722 - t585) * t1168) * qJD(1) - t717 * t1026 + t1141 * (t718 + t929) + t1163 * (t894 + t1081) + (t631 * t884 - t1151 + t1169 + t662 - t670 - t83) * t1097) * m(6) + t1013 / 0.2e1 - t1014 / 0.2e1 + t972 / 0.2e1 + t973 / 0.2e1 + t974 / 0.2e1 + t975 / 0.2e1 - m(2) * (-g(1) * t537 + g(2) * t539) + (t185 + t187) * t1047 + (t1122 * t605 + (t1123 * t625 - t1174 * t628) * t604 + t1162) * t431 * t1035 + (t186 + t188) * t1048; ((t626 * t896 + t629 * t895) * qJD(1) + (t1054 * t629 + t626 * t675) * qJD(2)) * t1023 + ((t168 * t627 + t169 * t630) * qJD(1) + t775) * t824 + ((t170 * t627 + t171 * t630) * qJD(1) + t776) * t825 + t99 * t827 + t98 * t828 + (qJD(1) * t121 + qJD(2) * t775 + qJDD(1) * t274 + t168 * t522 + t169 * t521) * t1031 + (qJD(1) * t120 + qJD(2) * t776 + qJDD(1) * t275 + t170 * t522 + t171 * t521) * t1032 + t745 * t1040 + t744 * t1041 + (-t118 * t630 + t119 * t627 + (t270 * t627 + t271 * t630) * qJD(1)) * t1022 + t635 + (-t270 * t630 + t271 * t627) * t1011 + ((-t883 * t958 - t886) * t630 + (t663 + (t630 * t957 + t641) * qJD(2)) * t627) * t823 + ((-t603 * t957 + t886) * t627 + (t663 + (t627 * t958 + t641) * qJD(2)) * t630) * t826 + (-g(1) * (t563 + t790) - g(2) * (t556 + t791) - g(3) * (t618 + t690) + t19 * (t714 + t919) + t72 * (t673 + t852) + t725 * t1170 + (t25 * t725 - t1097 * t701 + (-t394 + t853) * t983) * t627 - (t1097 * t841 + ((t1012 - t1168) * t629 + t72 * t816) * qJD(2)) * pkin(2) + t1107 + (t630 * t701 + t1172) * t83) * m(6) + (t28 * (t798 + t919) + t95 * (t715 + t852) + t789 * t1099 + (t42 * t789 + t103 * t723 + (-t394 + t928) * t981) * t627 - (-t103 * t841 + (-t629 * t759 + t816 * t95) * qJD(2)) * pkin(2) - g(1) * (t790 + t898) - g(2) * (t791 + t899) - g(3) * (t618 + t682) + (t630 * t723 + t1100) * t102 + t1106) * m(5) + (-g(3) * (t1065 + t618) - t1063 * t688 + t73 * (t918 + t919) + t151 * (t852 + t857) + (t161 * t788 + (qJD(1) * t162 + t93) * t688) * t630 + (t94 * t688 + t162 * t788 + (t161 * t505 + t151 * (-t394 - t408)) * qJD(1)) * t627 - (-t162 * t841 + (t151 * t816 + t629 * t746) * qJD(2)) * pkin(2) + t1096) * m(4) + ((qJD(2) * t737 + t436 * t521 - t437 * t522) * t730 + t240 * ((t436 * t630 - t437 * t627) * qJD(1) + t737) + t738 * t514 + (-t148 * t630 - t149 * t627 + (-t269 * t630 + t968) * qJD(1)) * t536 + g(1) * t496 + g(2) * t495 - g(3) * t538 - (t268 * t495 - t966) * qJD(1) - (t240 * (-t495 * t627 - t496 * t630) + t738 * t538) * qJD(2)) * m(3); t635 + (-g(1) * (t563 + t569) - g(2) * (t556 + t566) - g(3) * t690 + t19 * t714 + t72 * t673 + (-t1097 * t858 + t853 * t983) * t627 + (t25 * t627 + t1170) * (-t507 - t915) + (t630 * t858 + t1172) * t83 + t1107) * m(6) + (-g(1) * (t569 + t898) - g(2) * (t566 + t899) - g(3) * t682 + t28 * t798 + t95 * t715 + (t103 * t932 + t928 * t981) * t627 + (t42 * t627 + t1099) * (-t389 - t507) + (t630 * t932 + t1100) * t102 + t1106) * m(5) + (g(1) * t478 + g(2) * t476 - g(3) * t1065 + t73 * t918 + t151 * (-t408 * t885 + t857) + t746 * t421 + (-t94 * t627 - t93 * t630 + (-t162 * t630 + t969) * qJD(1)) * t505 + t1096) * m(4); t1132 * t604 * t621 / 0.2e1 + t1143 * t955 / 0.2e1 + t1144 * t953 / 0.2e1 + (t1071 * t604 - t1083 * t605) * t1050 + (t1070 * t604 - t1084 * t605) * t1049 + (-t1073 * t630 + t1074 * t487 + t1075 * t486) * t1046 + ((t1071 * t621 - t1131) * t605 + (qJD(1) * t1102 + t1083 * t621 + t1139 * t630 + t1140 * t627) * t604) * t1045 + ((t1070 * t621 - t1130) * t605 + (qJD(1) * t1101 + t1084 * t621 + t1137 * t630 + t1138 * t627) * t604) * t1044 + (-t1073 * t627 + t1074 * t485 + t1075 * t484) * t1043 + (t1072 * t604 - t1082 * t605) * t433 / 0.2e1 + (t1149 * t605 + (t1074 * t628 + t1075 * t625) * t604) * t1035 + ((t1072 * t621 - t1154) * t605 + (qJD(1) * t1103 + t1082 * t621 + t1135 * t630 + t1136 * t627) * t604) * t1034 - (t1015 + t974 + t975 - t1016 + t1013 + t972 + t973 - t1014 + t1064) * t605 / 0.2e1 + (-g(1) * t926 - g(2) * t927 + g(3) * t902 + (t24 * t931 - t83 * t934 - t25 * t929 + t1097 * t935 + (-t1098 * t630 + t676 * t627) * t621) * t605 + ((-t1097 * t929 - t818) * t621 + (qJD(1) * t676 + t1097 * t933 + t19 * t931 - t25 * t915 - t72 * t934) * t630 + (qJD(1) * t1098 - t19 * t929 + t24 * t915 - t72 * t935 + t83 * t933) * t627) * t604 - (-t1097 * t485 + t487 * t83 + t72 * t954) * qJD(5) - (-t1097 * t926 - t83 * t927) * t565 - (t72 * t926 + t83 * t902) * t432 - (-t1097 * t902 + t72 * t927) * t431) * m(6) + ((t102 * t141 - t103 * t139 - t41 * t264 - t42 * t266 + (t95 * t739 + (t102 * t627 - t103 * t630) * t389) * t621) * t605 + (t102 * (t199 * t627 + t264 * t621) + t103 * (-t199 * t630 + t266 * t621) + t28 * t739 + t95 * (-t139 * t627 + t141 * t630 + t264 * t885 - t266 * t884) + (qJD(1) * t759 + t41 * t627 - t42 * t630) * t389) * t604 - g(1) * t319 - g(2) * t314 - g(3) * t474 - t102 * (-t314 * t565 - t432 * t474) - t103 * (t319 * t565 - t431 * t474) - t95 * (t314 * t431 + t319 * t432)) * m(5) + t1134 * (t604 * t827 + t627 * t831) + t1133 * (-t843 / 0.2e1 + t630 * t831); (t72 * t860 - t218 * t83 - t220 * t1097 + (t19 * t625 + t72 * t878) * t604 + (-t1097 * t431 + t432 * t83 - g(3)) * t956 + (t1097 * t565 - t432 * t72 + t1163) * t486 + (-t431 * t72 + t565 * t83 + t1141) * t484) * m(6);];
tau = t1;
