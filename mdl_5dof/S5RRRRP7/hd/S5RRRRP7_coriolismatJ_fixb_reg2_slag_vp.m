% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:58
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:57:50
% EndTime: 2019-12-31 21:58:10
% DurationCPUTime: 12.86s
% Computational Cost: add. (10861->673), mult. (21852->775), div. (0->0), fcn. (22474->6), ass. (0->490)
t425 = sin(qJ(2));
t696 = cos(qJ(3));
t547 = t696 * t425;
t424 = sin(qJ(3));
t427 = cos(qJ(2));
t620 = t424 * t427;
t384 = t547 + t620;
t691 = t384 * pkin(4);
t423 = sin(qJ(4));
t714 = -pkin(7) - pkin(6);
t394 = t714 * t427;
t514 = -t424 * t394 - t714 * t547;
t735 = t514 * t423;
t750 = -t691 / 0.2e1 - t735 / 0.2e1;
t426 = cos(qJ(4));
t619 = t426 * qJ(5);
t634 = t384 * t423;
t493 = pkin(4) * t634 - t384 * t619;
t179 = t493 + t514;
t655 = t179 * t423;
t169 = t655 / 0.2e1;
t390 = pkin(4) * t423 - t619;
t629 = t390 * t423;
t529 = t629 / 0.2e1;
t749 = t169 + (t529 - pkin(4) / 0.2e1) * t384 + t750;
t381 = t384 ^ 2;
t422 = t426 ^ 2;
t364 = t422 * t381;
t621 = t424 * t425;
t382 = -t696 * t427 + t621;
t718 = t382 ^ 2;
t276 = t364 + t718;
t572 = t382 * qJD(4);
t565 = qJD(2) + qJD(3);
t724 = t565 * t426;
t736 = t423 * t724;
t745 = t384 * t736;
t748 = t276 * qJD(1) + t572 + t745;
t386 = t696 * t394;
t505 = t714 * t621;
t722 = -t386 + t505;
t732 = t722 * t426;
t707 = -t732 / 0.2e1;
t734 = t514 * t426;
t747 = -t734 / 0.2e1;
t261 = t735 / 0.2e1;
t373 = t384 * qJ(5);
t692 = t384 * pkin(3);
t693 = t382 * pkin(8);
t278 = t692 + t693;
t688 = t425 * pkin(2);
t246 = t278 + t688;
t226 = t423 * t246;
t609 = t226 / 0.2e1 + t747;
t744 = -t373 - t609;
t625 = t423 * qJ(5);
t687 = t426 * pkin(4);
t487 = t625 + t687;
t389 = -pkin(3) - t487;
t563 = t696 * pkin(2);
t372 = -t563 + t389;
t349 = t372 * t423;
t380 = t389 * t423;
t603 = t349 / 0.2e1 + t380 / 0.2e1;
t628 = t390 * t426;
t743 = t628 - t603;
t417 = -t427 * pkin(2) - pkin(1);
t690 = t384 * pkin(8);
t494 = t382 * pkin(3) - t690;
t450 = t417 + t494;
t733 = t722 * t423;
t154 = -t426 * t450 + t733;
t694 = t382 * pkin(4);
t119 = t154 - t694;
t239 = t423 * t382;
t241 = t426 * t382;
t723 = -pkin(4) * t239 + qJ(5) * t241 + t722;
t731 = t723 * t423;
t742 = (-t119 + t731) * t384;
t741 = (-t154 + t733) * t384;
t155 = t423 * t450 + t732;
t740 = (-t155 + t732) * t384;
t637 = t382 * qJ(5);
t118 = t155 + t637;
t730 = t723 * t426;
t739 = t179 * t241 + (t118 - t730) * t384;
t695 = t722 * pkin(3);
t738 = t179 * t723;
t725 = t565 * t384;
t737 = t382 * t725;
t643 = t514 * t722;
t274 = t565 * t382;
t658 = t723 * t389;
t421 = t423 ^ 2;
t729 = t421 + t422;
t564 = t381 - t718;
t199 = t564 * t423;
t583 = t199 * qJD(1);
t87 = t384 * t724 - t583;
t728 = t565 * t514;
t706 = t372 / 0.2e1;
t471 = t563 / 0.2e1 + t706;
t703 = -t389 / 0.2e1;
t727 = t382 * (t703 + t471);
t689 = t424 * pkin(2);
t415 = pkin(8) + t689;
t552 = t415 / 0.2e1 - pkin(8) / 0.2e1;
t726 = t384 * t552;
t405 = t422 - t421;
t579 = t239 * qJD(1);
t585 = qJD(4) * t423;
t206 = t579 + t585;
t113 = -qJD(4) * t239 + t583;
t584 = qJD(4) * t426;
t544 = t384 * t584;
t720 = t199 * t565 + t382 * t544;
t237 = (t421 / 0.2e1 - t422 / 0.2e1) * t384;
t622 = t423 * t426;
t546 = qJD(1) * t622;
t327 = t381 * t546;
t96 = t237 * t565 + t327;
t573 = t382 * qJD(1);
t542 = t384 * t573;
t277 = t426 * t542;
t719 = t239 * t565 + t277;
t501 = t384 * t546;
t213 = t405 * t565 - 0.2e1 * t501;
t81 = t405 * t274 - 0.2e1 * t384 * (-qJD(4) + t573) * t622;
t506 = qJD(4) + t573;
t85 = t506 * t634;
t717 = -0.2e1 * t426 * t85;
t716 = -pkin(3) / 0.2e1;
t715 = pkin(3) / 0.2e1;
t161 = -t734 + t226;
t122 = t373 + t161;
t713 = -t122 / 0.2e1;
t617 = t426 * t278;
t175 = t617 + t735;
t132 = -t175 - t691;
t712 = t132 / 0.2e1;
t236 = t487 * t384;
t711 = -t236 / 0.2e1;
t710 = -t246 / 0.2e1;
t709 = -t278 / 0.2e1;
t708 = t734 / 0.2e1;
t705 = -t384 / 0.2e1;
t704 = t384 / 0.2e1;
t497 = t386 / 0.2e1;
t702 = t389 / 0.2e1;
t416 = -t563 - pkin(3);
t701 = -t416 / 0.2e1;
t700 = t416 / 0.2e1;
t699 = -t423 / 0.2e1;
t698 = t424 / 0.2e1;
t697 = t426 / 0.2e1;
t686 = qJD(2) * pkin(2);
t618 = t426 * t246;
t160 = t618 + t735;
t125 = -t160 - t691;
t9 = t118 * t122 + t119 * t125 + t738;
t685 = t9 * qJD(1);
t663 = t155 * t423;
t665 = t154 * t426;
t20 = -t665 / 0.2e1 + t118 * t699 + t663 / 0.2e1 + t119 * t697 + (t625 / 0.2e1 + t687 / 0.2e1) * t382;
t684 = t20 * qJD(4);
t524 = -t154 / 0.2e1 + t119 / 0.2e1;
t19 = -t663 / 0.2e1 + (t637 / 0.2e1 + t118 / 0.2e1) * t423 + (t694 / 0.2e1 - t524) * t426;
t683 = -t19 * qJD(4) + t241 * qJD(5);
t250 = t423 * t278;
t176 = -t734 + t250;
t131 = t373 + t176;
t27 = (t131 / 0.2e1 + t713) * t426 + (t712 - t125 / 0.2e1) * t423;
t682 = qJD(1) * t27;
t34 = (t176 / 0.2e1 - t161 / 0.2e1) * t426 + (-t175 / 0.2e1 + t160 / 0.2e1) * t423;
t681 = qJD(1) * t34;
t664 = t155 * t382;
t50 = -t664 + (t179 * t426 + t236 * t423) * t384;
t680 = qJD(1) * t50;
t666 = t154 * t382;
t51 = -t666 + (-t236 * t426 + t655) * t384;
t679 = qJD(1) * t51;
t83 = -t514 * t634 + t666;
t678 = qJD(1) * t83;
t632 = t384 * t426;
t84 = t514 * t632 - t664;
t677 = qJD(1) * t84;
t10 = t118 * t131 + t119 * t132 + t738;
t676 = t10 * qJD(1);
t11 = -t118 * t154 + t119 * t155 + t179 * t236;
t675 = t11 * qJD(1);
t674 = t118 * t382;
t94 = t119 * t241;
t12 = t94 - t125 * t632 + (t122 * t384 - t674) * t423;
t673 = t12 * qJD(1);
t672 = t122 * t426;
t671 = t125 * t423;
t13 = t94 - t132 * t632 + (t131 * t384 - t674) * t423;
t670 = t13 * qJD(1);
t669 = t131 * t426;
t668 = t132 * t423;
t15 = ((t118 - t155) * t426 + (t119 - t154) * t423) * t384;
t667 = t15 * qJD(1);
t662 = t160 * t423;
t661 = t161 * t426;
t660 = t175 * t423;
t659 = t176 * t426;
t16 = t19 * qJD(1);
t21 = t122 * t382 + t739;
t652 = t21 * qJD(1);
t22 = t742 + (-t125 - t655) * t382;
t651 = t22 * qJD(1);
t23 = t131 * t382 + t739;
t650 = t23 * qJD(1);
t24 = t742 + (-t132 - t655) * t382;
t649 = t24 * qJD(1);
t457 = (-t663 + t665) * t382;
t25 = (t160 * t426 + t161 * t423) * t384 + t457;
t648 = t25 * qJD(1);
t28 = (t175 * t426 + t176 * t423) * t384 + t457;
t647 = t28 * qJD(1);
t29 = -t154 * t160 + t155 * t161 + t643;
t646 = t29 * qJD(1);
t30 = -t154 * t175 + t155 * t176 + t643;
t641 = t30 * qJD(1);
t640 = t372 * t382;
t639 = t372 * t390;
t638 = t372 * t426;
t636 = t382 * t416;
t635 = t384 * t415;
t633 = t384 * t424;
t631 = t389 * t426;
t630 = t390 * t389;
t627 = t415 * t382;
t626 = t416 * t384;
t46 = t741 + (t160 - t735) * t382;
t616 = t46 * qJD(1);
t47 = t740 + (-t161 - t734) * t382;
t615 = t47 * qJD(1);
t48 = t741 + (t175 - t735) * t382;
t614 = t48 * qJD(1);
t49 = t740 + (-t176 - t734) * t382;
t613 = t49 * qJD(1);
t60 = -t179 * t632 + t674;
t612 = t60 * qJD(1);
t89 = t417 * t688;
t610 = t89 * qJD(1);
t607 = t618 / 0.2e1 + t261;
t606 = t250 / 0.2e1 + t747;
t605 = -t250 / 0.2e1 + t708;
t244 = t617 / 0.2e1;
t604 = t244 + t261;
t601 = t421 * t705 + t422 * t704;
t451 = t729 * t696;
t374 = t451 * pkin(2);
t358 = t374 * qJD(3);
t575 = t374 * qJD(2);
t600 = t358 + t575;
t599 = t729 * pkin(8) * t563;
t588 = qJD(3) * t426;
t591 = qJD(2) * t426;
t598 = (t588 + t591) * t423;
t560 = qJD(3) * t689;
t402 = t423 * t560;
t420 = t421 * qJD(5);
t597 = t420 - t402;
t224 = t382 * t688 + t417 * t384;
t596 = qJD(1) * t224;
t225 = -t417 * t382 + t384 * t688;
t595 = qJD(1) * t225;
t594 = qJD(1) * t384;
t593 = qJD(1) * t427;
t592 = qJD(2) * t423;
t590 = qJD(3) * t417;
t589 = qJD(3) * t423;
t587 = qJD(4) * t154;
t200 = t564 * t426;
t582 = t200 * qJD(1);
t581 = t564 * qJD(1);
t580 = t237 * qJD(4);
t233 = t241 * qJD(1);
t249 = t421 * t381 - t364;
t578 = t249 * qJD(1);
t577 = t249 * qJD(4);
t293 = t497 - t386 / 0.2e1;
t576 = t293 * qJD(1);
t375 = t547 / 0.2e1 + t620 / 0.2e1;
t574 = t375 * qJD(1);
t371 = t382 * qJD(5);
t571 = t405 * qJD(4);
t406 = -t425 ^ 2 + t427 ^ 2;
t570 = t406 * qJD(1);
t569 = t423 * qJD(5);
t568 = t425 * qJD(2);
t567 = t426 * qJD(5);
t566 = t427 * qJD(2);
t562 = pkin(1) * t425 * qJD(1);
t561 = pkin(1) * t593;
t559 = pkin(8) * t585;
t558 = pkin(8) * t584;
t557 = t424 * t686;
t556 = t691 / 0.2e1;
t555 = pkin(8) * t699;
t554 = pkin(8) * t697;
t553 = t715 + t701;
t170 = -t655 / 0.2e1;
t525 = t241 / 0.2e1;
t533 = -t632 / 0.2e1;
t551 = t372 * t533 + t415 * t525 + t170;
t530 = -t631 / 0.2e1;
t550 = pkin(8) * t525 + t384 * t530 + t170;
t549 = t423 * t696;
t548 = t696 * t382;
t545 = t415 * t585;
t543 = t415 * t584;
t541 = t417 * t573;
t540 = t417 * t594;
t412 = t423 * t584;
t539 = t384 * t569;
t409 = t423 * t567;
t538 = t425 * t566;
t537 = t179 * t390 / 0.2e1;
t534 = -t635 / 0.2e1;
t532 = t632 / 0.2e1;
t531 = t384 * t702;
t528 = t416 * t697;
t526 = -t241 / 0.2e1;
t522 = t702 + t706;
t521 = t696 * qJD(2);
t520 = t696 * qJD(3);
t454 = (t689 / 0.2e1 - t552) * t384;
t37 = (t454 - t727) * t423;
t401 = t426 * t557;
t518 = -t37 * qJD(1) + t401;
t513 = t632 * t689;
t323 = -t513 / 0.2e1;
t39 = t323 + (t726 + t727) * t426;
t400 = t423 * t557;
t517 = -t39 * qJD(1) + t400;
t322 = t513 / 0.2e1;
t504 = -t563 / 0.2e1;
t472 = t504 + t701;
t447 = (t716 + t472) * t382;
t59 = t322 + (t447 - t726) * t426;
t516 = -t59 * qJD(1) - t400;
t56 = t707 + t732 / 0.2e1 + (t454 + t447) * t423;
t515 = -t56 * qJD(1) + t401;
t509 = t426 * t560;
t508 = t384 * t555;
t502 = t381 * t412;
t500 = -t549 / 0.2e1;
t499 = t549 / 0.2e1;
t498 = t696 * t697;
t496 = t711 - t693 / 0.2e1;
t492 = t711 - t627 / 0.2e1;
t491 = t277 + t544;
t194 = t375 + t601;
t163 = t194 * qJD(1) + t598;
t189 = t237 * qJD(1) - t598;
t486 = t382 * t389 + t690;
t463 = t669 / 0.2e1 + t668 / 0.2e1;
t429 = t463 * t415 + (t118 * t498 + t119 * t499 + t179 * t698) * pkin(2) + t723 * t706;
t464 = -t672 / 0.2e1 - t671 / 0.2e1;
t2 = -t658 / 0.2e1 + t464 * pkin(8) + t429;
t442 = t451 * t415;
t201 = (t372 * t424 + t442) * pkin(2);
t485 = t2 * qJD(1) + t201 * qJD(2);
t234 = (t416 * t424 + t442) * pkin(2);
t461 = t659 / 0.2e1 - t660 / 0.2e1;
t428 = t461 * t415 + (t154 * t499 + t155 * t498 + t514 * t698) * pkin(2) + t722 * t700;
t462 = -t661 / 0.2e1 + t662 / 0.2e1;
t8 = t695 / 0.2e1 + t462 * pkin(8) + t428;
t484 = -t8 * qJD(1) - t234 * qJD(2);
t483 = t671 + t672;
t482 = t668 + t669;
t481 = t661 - t662;
t480 = t659 - t660;
t479 = t635 + t640;
t478 = -t635 - t636;
t256 = t629 + t638;
t465 = (t390 * t705 - t179 / 0.2e1) * t426;
t432 = t465 + (t372 * t704 + t492) * t423;
t43 = t432 + t744;
t477 = -t43 * qJD(1) + t256 * qJD(2);
t257 = -t349 + t628;
t254 = t372 * t532;
t31 = t254 + (t710 + t492) * t426 + t749;
t476 = -t31 * qJD(1) + t257 * qJD(2);
t474 = qJD(4) * t390 - t569;
t473 = t409 - t509;
t468 = qJ(5) * t713 + t125 * pkin(4) / 0.2e1;
t467 = -t131 * qJ(5) / 0.2e1 + pkin(4) * t712;
t438 = t524 * t426 + (-t118 / 0.2e1 + t155 / 0.2e1) * t423;
t430 = t236 * t706 + t438 * t415 + t537;
t4 = t430 + t468;
t466 = t4 * qJD(1) + qJD(2) * t639;
t53 = t556 + t551 + t607;
t460 = -t53 * qJD(1) + t372 * t592;
t306 = t415 * t526;
t74 = t306 + (t626 / 0.2e1 + t710) * t426;
t459 = -t74 * qJD(1) - t416 * t592;
t435 = (t627 / 0.2e1 - t626 / 0.2e1) * t423 + t708;
t72 = t435 + t609;
t458 = -t72 * qJD(1) - t416 * t591;
t202 = t375 * qJD(4) + t542;
t455 = t384 * t529 + t169 + 0.2e1 * t556;
t453 = -0.2e1 * t745;
t452 = 0.2e1 * t745;
t397 = pkin(2) * t500;
t184 = t397 + t743;
t291 = -t380 + t628;
t286 = t426 * t531;
t40 = t286 + (t709 + t496) * t426 + t749;
t449 = -t40 * qJD(1) + t184 * qJD(2) + t291 * qJD(3);
t398 = pkin(2) * t498;
t185 = t426 * t522 + t398 + t629;
t290 = t629 + t631;
t433 = t465 + (t531 + t496) * t423;
t45 = -t373 + t433 + t605;
t448 = -t45 * qJD(1) + t185 * qJD(2) + t290 * qJD(3);
t314 = t423 * t553 + t397;
t338 = pkin(8) * t526;
t78 = t338 + (-t692 / 0.2e1 + t709) * t426;
t445 = pkin(3) * t589 - t78 * qJD(1) + t314 * qJD(2);
t399 = t426 * t504;
t315 = t426 * t553 + t399;
t437 = (t693 / 0.2e1 + t692 / 0.2e1) * t423 + t708;
t76 = t437 + t606;
t444 = pkin(3) * t588 - t76 * qJD(1) + t315 * qJD(2);
t436 = (pkin(4) * t500 + qJ(5) * t498) * pkin(2);
t165 = -t390 * t522 + t436;
t431 = t438 * pkin(8) + t236 * t702 + t537;
t6 = t431 + t467;
t443 = t6 * qJD(1) - t165 * qJD(2) + qJD(3) * t630;
t396 = pkin(2) * t499;
t209 = t396 + t603;
t55 = t556 + t550 + t604;
t441 = -t55 * qJD(1) + t209 * qJD(2) + t389 * t589;
t439 = -qJD(4) * t487 + t567;
t434 = (-t548 / 0.2e1 + t633 / 0.2e1) * pkin(2) + t534;
t413 = t425 * t593;
t328 = t384 * t409;
t326 = t506 * qJ(5);
t317 = t426 * t716 + t399 + t528;
t316 = pkin(3) * t699 + t423 * t700 + t397;
t273 = t421 * t565 + t501;
t247 = t565 * t375;
t215 = 0.2e1 * t497 - t505;
t210 = t396 - t603;
t208 = t233 + t584;
t195 = -t375 + t601;
t193 = t195 * qJD(5);
t192 = t194 * qJD(5);
t187 = t397 - t743;
t186 = -t638 / 0.2e1 - t629 + t530 + t398;
t166 = t630 / 0.2e1 + t639 / 0.2e1 + t436;
t157 = t422 * t542 - t580;
t156 = t421 * t542 + t580;
t153 = t155 * qJD(4);
t136 = t452 - t578;
t135 = t453 + t578;
t124 = -t422 * t737 - t502;
t123 = -t421 * t737 + t502;
t115 = qJD(4) * t241 - t582;
t93 = -t241 * t565 + t423 * t542;
t91 = -t580 + (-t422 * t594 - t736) * t382;
t90 = t580 + (-t421 * t594 + t736) * t382;
t88 = t423 * t725 + t582;
t80 = t200 * t565 - t572 * t634;
t79 = pkin(3) * t533 + t244 + 0.2e1 * t261 + t338;
t77 = t437 + t605;
t75 = t384 * t528 + t261 + t306 + t607;
t73 = t435 - t609;
t58 = t322 + t733 + pkin(8) * t533 + pkin(3) * t525 + (t382 * t472 + t534) * t426;
t57 = 0.2e1 * t707 + t508 + t239 * t715 + (-t636 / 0.2e1 + t434) * t423;
t54 = -t617 / 0.2e1 + t550 + t750;
t52 = -t618 / 0.2e1 + t551 + t750;
t44 = t373 + t433 + t606;
t42 = t432 - t744;
t41 = t426 * t496 + t286 + t455 + t604;
t38 = t323 - t731 + pkin(8) * t532 + t389 * t525 + (t635 / 0.2e1 + t471 * t382) * t426;
t36 = -t730 + t239 * t703 + t508 + (-t640 / 0.2e1 + t434) * t423;
t33 = t461 - t462;
t32 = t426 * t492 + t254 + t455 + t607;
t26 = t463 - t464;
t14 = t439 - t16;
t7 = t161 * t554 + t160 * t555 - t695 / 0.2e1 + t428;
t5 = t431 - t467;
t3 = t430 - t468;
t1 = t122 * t554 + t658 / 0.2e1 + pkin(8) * t671 / 0.2e1 + t429;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t538, t406 * qJD(2), 0, -t538, 0, 0, -pkin(1) * t568, -pkin(1) * t566, 0, 0, -t737, -t565 * t564, 0, t737, 0, 0, t224 * qJD(2) + t384 * t590, t225 * qJD(2) - t382 * t590, 0, qJD(2) * t89, t124, t382 * t452 + t577, t80, t123, -t720, t737, qJD(2) * t46 + qJD(3) * t48 + qJD(4) * t84, qJD(2) * t47 + qJD(3) * t49 + qJD(4) * t83, -qJD(2) * t25 - qJD(3) * t28, qJD(2) * t29 + qJD(3) * t30, t124, t80, t382 * t453 - t577, t737, t720, t123, t22 * qJD(2) + t24 * qJD(3) + t50 * qJD(4) - t381 * t409, -t12 * qJD(2) - t13 * qJD(3) - t15 * qJD(4) - t382 * t539, qJD(2) * t21 + qJD(3) * t23 + qJD(4) * t51 + qJD(5) * t276, qJD(2) * t9 + qJD(3) * t10 + qJD(4) * t11 + qJD(5) * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t413, t570, t566, -t413, -t568, 0, -pkin(6) * t566 - t562, pkin(6) * t568 - t561, 0, 0, -t542, -t581, -t274, t542, -t725, 0, -qJD(2) * t722 + qJD(3) * t215 + t596, t595 + t728, (t548 - t633) * t686, t610 + (-t424 * t514 - t696 * t722) * t686, t91, -t81, t88, t90, t87, t202, t616 + (t423 * t478 - t732) * qJD(2) + t57 * qJD(3) + t75 * qJD(4), t615 + (t426 * t478 + t733) * qJD(2) + t58 * qJD(3) + t73 * qJD(4), qJD(2) * t481 + t33 * qJD(3) - t648, t646 + (t415 * t481 + t416 * t722) * qJD(2) + t7 * qJD(3), t91, t88, t81, t202, -t87, t90, t651 + (-t423 * t479 - t730) * qJD(2) + t36 * qJD(3) + t32 * qJD(4) + t193, qJD(2) * t483 + t26 * qJD(3) - t673 + t684, t652 + (t426 * t479 - t731) * qJD(2) + t38 * qJD(3) + t42 * qJD(4) + t328, t685 + (t372 * t723 + t415 * t483) * qJD(2) + t1 * qJD(3) + t3 * qJD(4) + t52 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t542, -t581, -t274, t542, -t725, 0, t215 * qJD(2) - qJD(3) * t722 + t540, -t541 + t728, 0, 0, t91, -t81, t88, t90, t87, t202, t614 + t57 * qJD(2) + (t423 * t494 - t732) * qJD(3) + t79 * qJD(4), t613 + t58 * qJD(2) + (t426 * t494 + t733) * qJD(3) + t77 * qJD(4), t33 * qJD(2) + qJD(3) * t480 - t647, t641 + t7 * qJD(2) + (pkin(8) * t480 - t695) * qJD(3), t91, t88, t81, t202, -t87, t90, t649 + t36 * qJD(2) + (-t423 * t486 - t730) * qJD(3) + t41 * qJD(4) + t193, t26 * qJD(2) + qJD(3) * t482 - t670 + t684, t650 + t38 * qJD(2) + (t426 * t486 - t731) * qJD(3) + t44 * qJD(4) + t328, t676 + t1 * qJD(2) + (pkin(8) * t482 + t658) * qJD(3) + t5 * qJD(4) + t54 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, t135, -t85, t96, -t491, t247, qJD(2) * t75 + qJD(3) * t79 - t153 + t677, qJD(2) * t73 + qJD(3) * t77 + t587 + t678, 0, 0, -t96, -t85, t136, t247, t491, t96, qJD(2) * t32 + qJD(3) * t41 - t153 + t680, qJD(4) * t493 + t20 * t565 - t539 - t667, qJD(2) * t42 + qJD(3) * t44 + t371 - t587 + t679, t675 + t3 * qJD(2) + t5 * qJD(3) + (-pkin(4) * t155 - qJ(5) * t154) * qJD(4) + t118 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195 * t565 - t327, -t85, t748, qJD(2) * t52 + qJD(3) * t54 + qJD(4) * t118 + t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t413, -t570, 0, t413, 0, 0, t562, t561, 0, 0, t542, t581, 0, -t542, 0, 0, qJD(3) * t293 - t596, -t595, 0, -t610, t157, t717, t115, t156, t113, -t202, qJD(3) * t56 + qJD(4) * t74 - t616, qJD(3) * t59 + qJD(4) * t72 - t615, qJD(3) * t34 + t648, qJD(3) * t8 - t646, t157, t115, -t717, -t202, -t113, t156, qJD(3) * t37 + qJD(4) * t31 + t192 - t651, qJD(3) * t27 + t673 + t683, qJD(3) * t39 + qJD(4) * t43 + t328 - t652, qJD(3) * t2 + qJD(4) * t4 + qJD(5) * t53 - t685; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t560, -pkin(2) * t520, 0, 0, t412, t571, 0, -t412, 0, 0, t416 * t585 - t509, t416 * t584 + t402, t358, t234 * qJD(3), t412, 0, -t571, 0, 0, -t412, -t257 * qJD(4) + t473, t358, -t256 * qJD(4) + t597, t201 * qJD(3) + t372 * t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t565 * t689 + t576, (-t521 - t520) * pkin(2), 0, 0, t412, t571, 0, -t412, 0, 0, t316 * qJD(4) - t509 - t515, t317 * qJD(4) + t402 - t516, t600 + t681, (-pkin(3) * t689 + t599) * qJD(3) - t484, t412, 0, -t571, 0, 0, -t412, t187 * qJD(4) + t473 - t518, t600 + t682, t186 * qJD(4) - t517 + t597, (t389 * t689 + t599) * qJD(3) + t166 * qJD(4) + t210 * qJD(5) + t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, t213, t208, t189, -t206, -t574, t316 * qJD(3) - t459 - t543, t317 * qJD(3) - t458 + t545, 0, 0, -t189, t208, -t213, -t574, t206, t189, t187 * qJD(3) - t476 - t543, t14, t186 * qJD(3) - t477 - t545, t166 * qJD(3) + t415 * t439 + t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, t208, t273, t210 * qJD(3) - t460 + t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t542, t581, 0, -t542, 0, 0, -t293 * qJD(2) - t540, t541, 0, 0, t157, t717, t115, t156, t113, -t202, -qJD(2) * t56 + qJD(4) * t78 - t614, -qJD(2) * t59 + qJD(4) * t76 - t613, -qJD(2) * t34 + t647, -qJD(2) * t8 - t641, t157, t115, -t717, -t202, -t113, t156, -qJD(2) * t37 + qJD(4) * t40 + t192 - t649, -qJD(2) * t27 + t670 + t683, -qJD(2) * t39 + qJD(4) * t45 + t328 - t650, -qJD(2) * t2 + qJD(4) * t6 + qJD(5) * t55 - t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t557 - t576, pkin(2) * t521, 0, 0, t412, t571, 0, -t412, 0, 0, -t314 * qJD(4) + t515, -t315 * qJD(4) + t516, -t575 - t681, t484, t412, 0, -t571, 0, 0, -t412, -t184 * qJD(4) + t409 + t518, -t575 - t682, -t185 * qJD(4) + t420 + t517, -qJD(4) * t165 - qJD(5) * t209 - t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t412, t571, 0, -t412, 0, 0, -pkin(3) * t585, -pkin(3) * t584, 0, 0, t412, 0, -t571, 0, 0, -t412, -t291 * qJD(4) + t409, 0, -t290 * qJD(4) + t420, t474 * t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, t213, t208, t189, -t206, -t574, -t445 - t558, -t444 + t559, 0, 0, -t189, t208, -t213, -t574, t206, t189, -t449 - t558, t14, -t448 - t559, pkin(8) * t439 + t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, t208, t273, -t441 + t558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96, t136, t93, -t96, t719, t247, -qJD(2) * t74 - qJD(3) * t78 - t677, -qJD(2) * t72 - qJD(3) * t76 - t678, 0, 0, t96, t93, t135, t247, -t719, -t96, -qJD(2) * t31 - qJD(3) * t40 - t680, t19 * t565 + t667, -qJD(2) * t43 - qJD(3) * t45 + t371 - t679, qJ(5) * t371 - t4 * qJD(2) - t6 * qJD(3) - t675; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, -t213, -t233, -t189, t579, t574, t314 * qJD(3) + t459, t315 * qJD(3) + t458, 0, 0, t189, -t233, t213, t574, -t579, -t189, qJD(3) * t184 + t476, t16, qJD(3) * t185 + t477, t165 * qJD(3) - t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, -t213, -t233, -t189, t579, t574, t445, t444, 0, 0, t189, -t233, t213, t574, -t579, -t189, t449, t16, t448, -t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t506, t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194 * t565 + t327, t93, -t748, -qJ(5) * t572 - t53 * qJD(2) - t55 * qJD(3) - t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, -t233, -t273, t209 * qJD(3) + t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, -t233, -t273, t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t506, -t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t17;
