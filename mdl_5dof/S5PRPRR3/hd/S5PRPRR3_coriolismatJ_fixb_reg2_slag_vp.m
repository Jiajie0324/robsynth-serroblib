% Calculate inertial parameters regressor of coriolis matrix for
% S5PRPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d4,d5,theta1,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:48
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRPRR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPRR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPRR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRPRR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:47:42
% EndTime: 2019-12-05 15:47:48
% DurationCPUTime: 1.59s
% Computational Cost: add. (2715->101), mult. (5894->169), div. (0->0), fcn. (6734->8), ass. (0->93)
t183 = qJD(4) + qJD(5);
t162 = cos(qJ(4));
t158 = sin(pkin(9));
t153 = pkin(2) * t158 + pkin(6);
t217 = pkin(7) + t153;
t143 = t217 * t162;
t159 = sin(qJ(5));
t160 = sin(qJ(4));
t172 = t217 * t160;
t220 = cos(qJ(5));
t168 = t143 * t159 + t172 * t220;
t161 = sin(qJ(2));
t204 = cos(pkin(9));
t221 = cos(qJ(2));
t144 = t158 * t161 - t204 * t221;
t181 = t220 * t162;
t202 = t159 * t160;
t164 = t181 / 0.2e1 - t202 / 0.2e1;
t230 = t181 - t202;
t57 = (-t230 / 0.2e1 + t164) * t144;
t195 = t57 * qJD(1);
t233 = t168 * t183 - t195;
t104 = t143 * t220 - t159 * t172;
t232 = t183 * t104;
t231 = t183 * t230;
t182 = t220 * t160;
t201 = t159 * t162;
t148 = t182 + t201;
t154 = -pkin(2) * t204 - pkin(3);
t149 = -pkin(4) * t162 + t154;
t190 = qJD(2) * t149;
t165 = t201 / 0.2e1 + t182 / 0.2e1;
t56 = (-t148 / 0.2e1 + t165) * t144;
t196 = t56 * qJD(1);
t229 = -t148 * t190 + t196;
t218 = pkin(4) * t160;
t90 = t148 * t149 - t218 * t230;
t228 = -qJD(2) * t90 + t196;
t224 = t230 / 0.2e1;
t223 = t148 / 0.2e1;
t219 = pkin(4) * t159;
t209 = qJD(4) * pkin(4);
t145 = t158 * t221 + t161 * t204;
t203 = t144 * t145;
t109 = t144 * t160;
t93 = t144 * t148;
t95 = t144 * t230;
t33 = -t223 * t95 + t224 * t93;
t198 = t33 * qJD(1);
t156 = t160 ^ 2;
t157 = t162 ^ 2;
t191 = -t156 - t157;
t36 = (0.1e1 + t191) * t203;
t197 = t36 * qJD(1);
t91 = t148 * t218 + t149 * t230;
t193 = t91 * qJD(2);
t92 = -t148 ^ 2 + t230 ^ 2;
t192 = t92 * qJD(2);
t189 = qJD(2) * t162;
t188 = qJD(5) * t149;
t187 = t145 * qJD(2);
t150 = t157 - t156;
t186 = t150 * qJD(2);
t185 = t160 * qJD(4);
t184 = t162 * qJD(4);
t180 = t148 * t230 * qJD(2);
t179 = t230 * t190;
t177 = t154 * t160 * qJD(2);
t176 = t154 * t189;
t175 = t160 * t184;
t171 = t220 * qJD(4);
t170 = t220 * qJD(5);
t169 = t191 * t144;
t113 = t183 * t148;
t94 = t148 * t145;
t96 = t230 * t145;
t24 = -t93 * t94 - t95 * t96 + t203;
t167 = qJD(1) * t24 + qJD(3) * t33;
t166 = -t95 * t159 / 0.2e1 + t93 * t220 / 0.2e1;
t2 = (-t109 / 0.2e1 + t166) * pkin(4);
t28 = t149 * t218;
t163 = -t2 * qJD(1) + t28 * qJD(2);
t151 = t160 * t189;
t110 = t144 * t162;
t59 = (t165 + t223) * t144;
t58 = (t164 + t224) * t144;
t52 = t57 * qJD(2);
t50 = t56 * qJD(2);
t31 = t59 * qJD(2) - t183 * t96;
t30 = t58 * qJD(2) + t183 * t94;
t3 = (t109 / 0.2e1 + t166) * pkin(4);
t1 = t33 * qJD(2);
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t24 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t161 * qJD(2), -t221 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, -t187, t144 * qJD(2), 0, (-t144 * t158 - t145 * t204) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, 0, qJD(4) * t109 - t162 * t187, qJD(4) * t110 + t160 * t187, qJD(2) * t169, t197 + (t145 * t154 + t153 * t169) * qJD(2), 0, 0, 0, 0, 0, 0, t183 * t59 - t187 * t230, t148 * t187 + t183 * t58, (-t148 * t93 - t230 * t95) * qJD(2), (-t104 * t95 + t145 * t149 - t168 * t93) * qJD(2) + t3 * qJD(4) + t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t109 - t145 * t184, qJD(2) * t110 + t145 * t185, 0, 0, 0, 0, 0, 0, 0, 0, t31, t30, 0, t3 * qJD(2) + (-t159 * t94 - t220 * t96) * t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, t30, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t197, 0, 0, 0, 0, 0, 0, -t183 * t56, -t183 * t57, 0, -qJD(4) * t2 - t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, t150 * qJD(4), 0, -t175, 0, 0, t154 * t185, t154 * t184, 0, 0, t230 * t113, t183 * t92, 0, -t148 * t231, 0, 0, qJD(4) * t90 + t148 * t188, qJD(4) * t91 + t188 * t230, 0, t28 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, t186, t184, -t151, -t185, 0, -t153 * t184 + t177, t153 * t185 + t176, 0, 0, t180, t192, t231, -t180, -t113, 0, -t228 - t232, t193 + t233, (-t148 * t159 - t220 * t230) * t209, (-t104 * t220 - t159 * t168) * t209 + t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, t192, t231, -t180, -t113, 0, -t229 - t232, t179 + t233, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, -t184, 0, 0, 0, 0, 0, 0, 0, 0, -t113, -t231, 0, (-t148 * t220 + t159 * t230) * t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, -t231, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, t52, 0, t2 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151, -t186, 0, t151, 0, 0, -t177, -t176, 0, 0, -t180, -t192, 0, t180, 0, 0, t228, t195 - t193, 0, -t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t219, -pkin(4) * t170, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t183 * t219, (-t171 - t170) * pkin(4), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, t52, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, -t192, 0, t180, 0, 0, t229, t195 - t179, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159 * t209, pkin(4) * t171, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t4;
