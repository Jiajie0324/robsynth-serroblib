% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:02
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRR6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:01:46
% EndTime: 2019-12-31 19:01:53
% DurationCPUTime: 4.90s
% Computational Cost: add. (6974->331), mult. (13264->459), div. (0->0), fcn. (13556->8), ass. (0->271)
t302 = sin(qJ(3));
t463 = cos(qJ(4));
t369 = t463 * t302;
t301 = sin(qJ(4));
t304 = cos(qJ(3));
t416 = t301 * t304;
t275 = t369 + t416;
t272 = t275 ^ 2;
t300 = sin(qJ(5));
t298 = t300 ^ 2;
t303 = cos(qJ(5));
t299 = t303 ^ 2;
t284 = t299 - t298;
t197 = t284 * t272;
t483 = 0.2e1 * t275;
t382 = qJD(3) + qJD(4);
t479 = t382 * t303;
t489 = t300 * t479;
t315 = t489 * t483;
t494 = t197 * qJD(1) + t315;
t290 = sin(pkin(9)) * pkin(1) + pkin(6);
t482 = pkin(7) + t290;
t270 = t482 * t304;
t252 = t463 * t270;
t356 = t482 * t302;
t345 = t301 * t356;
t478 = t252 - t345;
t485 = t478 * t303;
t469 = -t485 / 0.2e1;
t465 = t298 / 0.2e1;
t187 = (t465 - t299 / 0.2e1) * t275;
t118 = -t187 * qJD(1) + t489;
t486 = t478 * t300;
t291 = -cos(pkin(9)) * pkin(1) - pkin(2);
t278 = -t304 * pkin(3) + t291;
t273 = t301 * t302 - t463 * t304;
t460 = t273 * pkin(4);
t342 = -t275 * pkin(8) + t460;
t308 = t278 + t342;
t95 = -t303 * t308 + t486;
t493 = (-t95 + t486) * t275;
t96 = t300 * t308 + t485;
t492 = (-t96 + t485) * t275;
t449 = t96 * t303;
t450 = t95 * t300;
t467 = t478 / 0.2e1;
t491 = (t467 - t450 / 0.2e1 - t449 / 0.2e1) * t273;
t461 = t478 * pkin(4);
t490 = t275 * t479;
t352 = t301 * t270 + t463 * t356;
t488 = t352 * t300;
t487 = t352 * t303;
t436 = t352 * t478;
t484 = t382 * t352;
t191 = t303 * t273;
t481 = t191 * t382;
t480 = t382 * t273;
t381 = -t273 ^ 2 + t272;
t477 = t299 + t298;
t372 = t463 * t273;
t425 = t275 * t301;
t457 = t301 * pkin(3);
t293 = pkin(8) + t457;
t427 = t275 * t293;
t379 = t463 * pkin(3);
t294 = -t379 - pkin(4);
t429 = t273 * t294;
t476 = t460 / 0.2e1 - t427 / 0.2e1 - t429 / 0.2e1 + (-t372 / 0.2e1 + t425 / 0.2e1) * pkin(3);
t89 = (0.1e1 - t477) * t275 * t273;
t410 = t89 * qJD(2);
t458 = t275 * pkin(4);
t459 = t273 * pkin(8);
t206 = t458 + t459;
t418 = t300 * t206;
t105 = t418 - t487;
t442 = t105 * t303;
t413 = t303 * t206;
t104 = t413 + t488;
t443 = t104 * t300;
t324 = t442 / 0.2e1 - t443 / 0.2e1;
t468 = t352 / 0.2e1;
t5 = (t468 + t324) * t275 + t491;
t475 = t5 * qJD(1) + t410;
t456 = t302 * pkin(3);
t194 = t206 + t456;
t419 = t300 * t194;
t103 = -t487 + t419;
t444 = t103 * t303;
t414 = t303 * t194;
t102 = t414 + t488;
t445 = t102 * t300;
t325 = -t444 / 0.2e1 + t445 / 0.2e1;
t4 = (t468 - t325) * t275 + t491;
t474 = t4 * qJD(1) + t410;
t417 = t300 * t303;
t367 = qJD(1) * t417;
t67 = t382 * t187 + t272 * t367;
t156 = -0.2e1 * t275 * t367 + t382 * t284;
t471 = pkin(4) / 0.2e1;
t470 = pkin(8) / 0.2e1;
t344 = -t252 / 0.2e1;
t466 = t294 / 0.2e1;
t464 = -t300 / 0.2e1;
t462 = pkin(4) * t303;
t455 = pkin(3) * qJD(4);
t454 = qJD(3) * pkin(3);
t320 = (-t96 * t300 + t303 * t95) * t273;
t9 = (t102 * t303 + t103 * t300) * t275 + t320;
t451 = t9 * qJD(1);
t50 = t95 * t273 - t275 * t488;
t448 = qJD(1) * t50;
t424 = t275 * t303;
t51 = -t96 * t273 + t352 * t424;
t447 = qJD(1) * t51;
t10 = (t104 * t303 + t105 * t300) * t275 + t320;
t446 = t10 * qJD(1);
t14 = t493 + (t102 - t488) * t273;
t441 = t14 * qJD(1);
t15 = t492 + (-t103 - t487) * t273;
t440 = t15 * qJD(1);
t16 = t493 + (t104 - t488) * t273;
t439 = t16 * qJD(1);
t17 = t492 + (-t105 - t487) * t273;
t433 = t17 * qJD(1);
t349 = -t379 / 0.2e1;
t328 = -t294 / 0.2e1 + t349;
t373 = t457 / 0.2e1;
t306 = (-t293 / 0.2e1 + t373 + t470) * t275 + (-pkin(4) / 0.2e1 + t328) * t273;
t19 = t469 + t485 / 0.2e1 + t306 * t300;
t432 = t19 * qJD(1);
t358 = t467 - t478 / 0.2e1;
t359 = -t352 / 0.2e1 + t468;
t24 = -t358 * t273 + t359 * t275;
t431 = t24 * qJD(1);
t428 = t273 * t301;
t426 = t275 * t294;
t423 = t294 * t303;
t422 = t298 * t273;
t189 = t300 * t273;
t409 = t382 * t189;
t398 = qJD(4) * t300;
t400 = qJD(3) * t300;
t407 = (t398 + t400) * t275;
t142 = t273 * t456 + t278 * t275;
t405 = qJD(1) * t142;
t404 = qJD(1) * t273;
t403 = qJD(1) * t275;
t402 = qJD(1) * t278;
t401 = qJD(1) * t304;
t399 = qJD(4) * t278;
t397 = qJD(5) * t300;
t396 = qJD(5) * t303;
t128 = t381 * t300;
t395 = t128 * qJD(1);
t129 = t381 * t303;
t394 = t129 * qJD(1);
t143 = -t278 * t273 + t275 * t456;
t393 = t143 * qJD(1);
t392 = t381 * qJD(1);
t164 = t344 + t252 / 0.2e1;
t391 = t164 * qJD(1);
t389 = t187 * qJD(5);
t175 = t189 * qJD(1);
t388 = t189 * qJD(5);
t182 = t191 * qJD(1);
t271 = t369 / 0.2e1 + t416 / 0.2e1;
t386 = t271 * qJD(1);
t285 = -t302 ^ 2 + t304 ^ 2;
t385 = t285 * qJD(1);
t384 = t302 * qJD(3);
t383 = t304 * qJD(3);
t378 = t301 * t454;
t377 = t301 * t455;
t374 = pkin(8) * t464;
t371 = t463 * t298;
t370 = t463 * t299;
t368 = t275 * t402;
t366 = t275 * t396;
t365 = t275 * t397;
t364 = t273 * t403;
t363 = t273 * t402;
t362 = t291 * t302 * qJD(1);
t361 = t291 * t401;
t288 = t300 * t396;
t360 = t302 * t383;
t357 = t299 / 0.2e1 + t465;
t355 = t463 * qJD(3);
t354 = t463 * qJD(4);
t353 = t477 * t273;
t201 = t382 * t275;
t348 = t272 * t288;
t343 = t382 * t457;
t341 = t357 * t293;
t340 = t273 * t201;
t338 = t275 * t480;
t7 = -t102 * t95 + t103 * t96 + t436;
t336 = t7 * qJD(1) + t4 * qJD(2);
t8 = -t95 * t104 + t96 * t105 + t436;
t335 = t8 * qJD(1) + t5 * qJD(2);
t45 = t278 * t456;
t334 = t45 * qJD(1) + t24 * qJD(2);
t333 = t444 - t445;
t332 = t442 - t443;
t331 = -t427 - t429;
t13 = (t105 / 0.2e1 - t103 / 0.2e1) * t303 + (-t104 / 0.2e1 + t102 / 0.2e1) * t300;
t314 = t371 + t370;
t269 = t314 * pkin(3);
t330 = -qJD(1) * t13 - qJD(3) * t269;
t329 = t275 * (-qJD(5) - t404);
t327 = t459 / 0.2e1 + t458 / 0.2e1;
t323 = t293 * t273 / 0.2e1 - t426 / 0.2e1;
t312 = t194 / 0.2e1 + t323;
t43 = t359 * t300 - t312 * t303;
t322 = -qJD(1) * t43 - t294 * t400;
t41 = t312 * t300 + t359 * t303;
t321 = -qJD(1) * t41 - qJD(3) * t423;
t319 = t303 * t329;
t130 = t271 * qJD(5) + t364;
t318 = t471 + t328;
t22 = t358 * t300 + t306 * t303;
t317 = -qJD(1) * t22 - t300 * t378;
t316 = t206 / 0.2e1 + t327;
t184 = (t293 * t314 + t294 * t301) * pkin(3);
t305 = t324 * t293 + (t301 * t468 + (t449 + t450) * t463 / 0.2e1) * pkin(3) + t478 * t466;
t3 = t461 / 0.2e1 + t325 * pkin(8) + t305;
t311 = t370 / 0.2e1 + t371 / 0.2e1;
t37 = (t311 * pkin(3) + t466 + t471) * t275 + (t357 * pkin(8) - t341 + t373) * t273;
t313 = t3 * qJD(1) + t37 * qJD(2) + t184 * qJD(3);
t221 = t318 * t300;
t48 = t316 * t303;
t310 = pkin(4) * t398 + qJD(1) * t48 + qJD(3) * t221;
t222 = t318 * t303;
t46 = t316 * t300;
t309 = -qJD(1) * t46 + qJD(3) * t222 + qJD(4) * t462;
t289 = t302 * t401;
t283 = t300 * t377;
t280 = t284 * qJD(5);
t265 = t299 * t273;
t262 = t269 * qJD(4);
t224 = -t462 / 0.2e1 + t423 / 0.2e1 + t303 * t349;
t223 = pkin(4) * t464 + (t349 + t466) * t300;
t195 = t382 * t271;
t181 = t191 * qJD(5);
t141 = t182 + t396;
t140 = -t175 - t397;
t113 = 0.2e1 * t344 + t345;
t111 = 0.2e1 * t300 * t319;
t109 = t299 * t364 - t389;
t108 = t298 * t364 + t389;
t107 = t382 * (-t265 - t422);
t106 = t388 - t490;
t84 = t181 - t394;
t83 = -t388 + t395;
t58 = -t389 + (-t299 * t403 - t489) * t273;
t57 = t389 + (-t298 * t403 + t489) * t273;
t56 = t394 + t407;
t55 = -t395 + t490;
t54 = (-qJD(5) + t404) * t417 * t483 + t382 * (-t265 + t422);
t49 = t488 + t413 / 0.2e1 - t327 * t303;
t47 = t487 - t418 / 0.2e1 + t327 * t300;
t44 = t488 + t414 / 0.2e1 - t323 * t303;
t42 = t487 - t419 / 0.2e1 + t323 * t300;
t40 = t181 + t407;
t36 = t426 / 0.2e1 - t458 / 0.2e1 - t273 * t341 + (t428 / 0.2e1 + t311 * t275) * pkin(3) - t477 * t459 / 0.2e1;
t21 = t486 - pkin(8) * t424 / 0.2e1 + t476 * t303;
t20 = t275 * t374 + t476 * t300 + 0.2e1 * t469;
t12 = t324 - t325;
t6 = t24 * qJD(3);
t2 = t444 * t470 + t102 * t374 - t461 / 0.2e1 + t305;
t1 = qJD(3) * t4 + qJD(4) * t5;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t360, t285 * qJD(3), 0, -t360, 0, 0, t291 * t384, t291 * t383, 0, 0, -t340, -t382 * t381, 0, t338, 0, 0, qJD(3) * t142 + t275 * t399, qJD(3) * t143 - t273 * t399, 0, t45 * qJD(3), -t299 * t340 - t348, -t197 * qJD(5) + t273 * t315, t129 * t382 - t273 * t365, -t298 * t340 + t348, -t128 * t382 - t273 * t366, t338, qJD(3) * t14 + qJD(4) * t16 + qJD(5) * t51, qJD(3) * t15 + qJD(4) * t17 + qJD(5) * t50, -qJD(3) * t9 - qJD(4) * t10, qJD(3) * t7 + qJD(4) * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, t385, t383, -t289, -t384, 0, -t290 * t383 + t362, t290 * t384 + t361, 0, 0, -t364, -t392, -t480, t364, -t201, 0, -qJD(3) * t478 + qJD(4) * t113 + t405, t393 + t484, (t372 - t425) * t454, (-t301 * t352 - t463 * t478) * t454 + t334, t58, t54, t56, t57, t55, t130, t441 + (t300 * t331 - t485) * qJD(3) + t20 * qJD(4) + t44 * qJD(5), t440 + (t303 * t331 + t486) * qJD(3) + t21 * qJD(4) + t42 * qJD(5), qJD(3) * t333 + t12 * qJD(4) - t451, (t293 * t333 + t294 * t478) * qJD(3) + t2 * qJD(4) + t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t364, -t392, -t480, t364, -t201, 0, qJD(3) * t113 - qJD(4) * t478 + t368, -t363 + t484, 0, 0, t58, t54, t56, t57, t55, t130, t439 + t20 * qJD(3) + (t300 * t342 - t485) * qJD(4) + t49 * qJD(5), t433 + t21 * qJD(3) + (t303 * t342 + t486) * qJD(4) + t47 * qJD(5), t12 * qJD(3) + qJD(4) * t332 - t446, t2 * qJD(3) + (pkin(8) * t332 - t461) * qJD(4) + t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, -t494, t300 * t329, t67, t319, t195, qJD(3) * t44 + qJD(4) * t49 - qJD(5) * t96 + t447, qJD(3) * t42 + qJD(4) * t47 + qJD(5) * t95 + t448, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t382 * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t384, -t383, 0, 0, 0, 0, 0, 0, 0, 0, -t201, t480, 0, t431 + (-t275 * t463 - t428) * t454, 0, 0, 0, 0, 0, 0, t106, t40, t107, (-t293 * t353 + t426) * qJD(3) + t36 * qJD(4) + t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t201, t480, 0, 0, 0, 0, 0, 0, 0, 0, t106, t40, t107, t36 * qJD(3) + (-pkin(8) * t353 - t458) * qJD(4) + t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366 + t409, t365 + t481, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, -t385, 0, t289, 0, 0, -t362, -t361, 0, 0, t364, t392, 0, -t364, 0, 0, qJD(4) * t164 - t405, -t393, 0, -t334, t109, t111, t84, t108, t83, -t130, qJD(4) * t19 + qJD(5) * t43 - t441, qJD(4) * t22 + qJD(5) * t41 - t440, qJD(4) * t13 + t451, qJD(4) * t3 - t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t431, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t37 - t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t377, -pkin(3) * t354, 0, 0, t288, t280, 0, -t288, 0, 0, t294 * t397 - t303 * t377, t294 * t396 + t283, t262, t184 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t343 + t391, (-t355 - t354) * pkin(3), 0, 0, t288, t280, 0, -t288, 0, 0, t223 * qJD(5) - t303 * t343 + t432, qJD(5) * t224 + t283 - t317, t262 - t330, (-pkin(4) * t301 + pkin(8) * t314) * t455 + t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, t156, t141, -t118, t140, -t386, qJD(4) * t223 - t293 * t396 - t322, qJD(4) * t224 + t293 * t397 - t321, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, t392, 0, -t364, 0, 0, -qJD(3) * t164 - t368, t363, 0, 0, t109, t111, t84, t108, t83, -t130, -qJD(3) * t19 - qJD(5) * t48 - t439, -qJD(3) * t22 + qJD(5) * t46 - t433, -qJD(3) * t13 + t446, -qJD(3) * t3 - t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t37 - t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378 - t391, pkin(3) * t355, 0, 0, t288, t280, 0, -t288, 0, 0, -qJD(5) * t221 + t303 * t378 - t432, -qJD(5) * t222 + t317, t330, -t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t288, t280, 0, -t288, 0, 0, -pkin(4) * t397, -pkin(4) * t396, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, t156, t141, -t118, t140, -t386, -pkin(8) * t396 - t310, pkin(8) * t397 - t309, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t494, t300 * t364 - t481, -t67, t303 * t364 + t409, t195, -qJD(3) * t43 + qJD(4) * t48 - t447, -qJD(3) * t41 - qJD(4) * t46 - t448, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, -t156, -t182, t118, t175, t386, qJD(4) * t221 + t322, qJD(4) * t222 + t321, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, -t156, -t182, t118, t175, t386, t310, t309, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t11;
