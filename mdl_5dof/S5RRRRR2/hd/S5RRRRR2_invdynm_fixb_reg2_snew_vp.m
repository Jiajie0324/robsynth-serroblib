% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [2x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:54
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRR2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(2,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR2_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR2_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR2_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [2 1]), ...
  'S5RRRRR2_invdynm_fixb_reg2_snew_vp: pkin has to be [2x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:54:01
% EndTime: 2019-12-05 18:54:09
% DurationCPUTime: 8.23s
% Computational Cost: add. (30925->467), mult. (43328->680), div. (0->0), fcn. (32315->10), ass. (0->369)
t958 = sin(qJ(1));
t963 = cos(qJ(1));
t939 = t963 * g(1) + t958 * g(2);
t965 = qJD(1) ^ 2;
t927 = -t965 * pkin(1) - t939;
t957 = sin(qJ(2));
t962 = cos(qJ(2));
t938 = t958 * g(1) - t963 * g(2);
t969 = qJDD(1) * pkin(1) + t938;
t886 = t962 * t927 + t957 * t969;
t956 = sin(qJ(3));
t961 = cos(qJ(3));
t878 = -t956 * g(3) + t961 * t886;
t951 = qJD(1) + qJD(2);
t947 = t951 ^ 2;
t953 = t961 ^ 2;
t944 = t953 * t947;
t964 = qJD(3) ^ 2;
t935 = -t944 - t964;
t859 = t935 * pkin(2) + t878;
t955 = sin(qJ(4));
t960 = cos(qJ(4));
t877 = t961 * g(3) + t956 * t886;
t937 = t961 * t947 * t956;
t988 = qJDD(3) + t937;
t966 = pkin(2) * t988 - t877;
t804 = t859 * t955 - t960 * t966;
t798 = t960 * t804;
t1004 = t960 * t859;
t805 = t955 * t966 + t1004;
t747 = -t805 * t955 + t798;
t1047 = t747 * t961;
t1046 = t956 * t747;
t1003 = t960 * t961;
t1011 = t955 * t956;
t910 = (-t1003 + t1011) * t951;
t1010 = t955 * t961;
t912 = (t956 * t960 + t1010) * t951;
t879 = t912 * t910;
t948 = qJDD(3) + qJDD(4);
t1040 = -t879 + t948;
t1045 = t1040 * t955;
t1044 = t1040 * t960;
t991 = qJD(3) * t951;
t940 = t961 * t991;
t949 = qJDD(1) + qJDD(2);
t941 = t956 * t949;
t918 = t941 + t940;
t1002 = t961 * t949;
t981 = t956 * t991;
t968 = t981 - t1002;
t979 = t955 * t918 + t960 * t968;
t846 = -qJD(4) * t912 - t979;
t843 = qJDD(5) - t846;
t950 = qJD(3) + qJD(4);
t954 = sin(qJ(5));
t959 = cos(qJ(5));
t891 = t912 * t954 - t959 * t950;
t893 = t912 * t959 + t950 * t954;
t845 = t893 * t891;
t1041 = t843 - t845;
t1043 = t1041 * t954;
t1042 = t1041 * t959;
t993 = t956 * t877 + t961 * t878;
t885 = t957 * t927 - t962 * t969;
t884 = t962 * t885;
t840 = -t886 * t957 + t884;
t823 = (qJD(4) - t950) * t912 + t979;
t887 = t891 ^ 2;
t888 = t893 ^ 2;
t907 = qJD(5) + t910;
t906 = t907 ^ 2;
t908 = t910 ^ 2;
t909 = t912 ^ 2;
t946 = t950 ^ 2;
t821 = t877 * t961 - t878 * t956;
t1039 = pkin(1) * t821;
t851 = t885 + (t968 + t981) * pkin(2);
t771 = t805 * t954 - t959 * t851;
t772 = t805 * t959 + t851 * t954;
t717 = t771 * t954 + t772 * t959;
t691 = t717 * t955 - t798;
t1038 = pkin(2) * t691;
t1037 = pkin(2) * t747;
t967 = t960 * t918 - t955 * t968;
t847 = -t910 * qJD(4) + t967;
t905 = t950 * t910;
t827 = t905 + t847;
t768 = -t823 * t955 - t827 * t960;
t1036 = pkin(2) * t768;
t1035 = pkin(2) * t956;
t1034 = pkin(2) * t961;
t1033 = t957 * g(3);
t1032 = t958 * g(3);
t1031 = t962 * g(3);
t1030 = t963 * g(3);
t796 = t843 + t845;
t1029 = t796 * t954;
t1028 = t796 * t959;
t1027 = t804 * t955;
t868 = t879 + t948;
t1025 = t868 * t955;
t1024 = t868 * t960;
t1022 = t907 * t954;
t1021 = t907 * t959;
t919 = -0.2e1 * t981 + t1002;
t889 = t919 * t961;
t1020 = t988 * t956;
t929 = qJDD(3) - t937;
t1019 = t929 * t956;
t1018 = t929 * t961;
t1017 = t950 * t912;
t1016 = t950 * t955;
t1015 = t950 * t960;
t952 = t956 ^ 2;
t1014 = t952 * t947;
t1013 = t954 * t804;
t1012 = t955 * t851;
t882 = t956 * t885;
t1009 = t956 * t957;
t1008 = t957 * t949;
t1007 = t959 * t804;
t716 = t771 * t959 - t772 * t954;
t1006 = t960 * t716;
t1005 = t960 * t851;
t883 = t961 * t885;
t1001 = t962 * t716;
t1000 = t962 * t851;
t999 = t962 * t949;
t980 = -t954 * t847 + t959 * t948;
t783 = (-qJD(5) + t907) * t893 + t980;
t973 = -t959 * t847 - t954 * t948;
t810 = -qJD(5) * t891 - t973;
t857 = t907 * t891;
t785 = t810 + t857;
t723 = t783 * t954 - t785 * t959;
t673 = -pkin(2) * t723 + t716 * t955;
t998 = t956 * t1006 + t961 * t673;
t828 = -t906 - t887;
t751 = t828 * t954 + t1042;
t683 = -pkin(2) * t751 + t955 * t1013 + t771 * t960;
t729 = -t771 * t955 + t954 * t798;
t997 = t961 * t683 + t956 * t729;
t837 = -t888 - t906;
t754 = t837 * t959 - t1029;
t686 = -pkin(2) * t754 + t955 * t1007 + t772 * t960;
t730 = -t772 * t955 + t959 * t798;
t996 = t961 * t686 + t956 * t730;
t748 = t960 * t805 + t1027;
t850 = -t908 - t909;
t732 = -pkin(2) * t850 + t748;
t995 = t961 * t732 + t1046;
t989 = qJD(4) + t950;
t825 = -t989 * t910 + t967;
t789 = -pkin(2) * t825 + t1012;
t994 = t956 * t1005 + t961 * t789;
t992 = t952 + t953;
t987 = t716 * t1034;
t986 = t851 * t1034;
t985 = t955 * t845;
t984 = t960 * t845;
t983 = t957 * t879;
t982 = t962 * t879;
t922 = t962 * t947 + t1008;
t923 = -t957 * t947 + t999;
t978 = -t922 * t958 + t963 * t923;
t977 = t957 * t937;
t976 = t962 * t937;
t822 = t989 * t912 + t979;
t790 = -pkin(2) * t822 - t1005;
t975 = t851 * t1011 + t961 * t790;
t972 = t922 * t963 + t923 * t958;
t971 = t957 * t963 + t958 * t962;
t970 = -t957 * t958 + t962 * t963;
t809 = -qJD(5) * t893 + t980;
t934 = t944 - t964;
t933 = -t964 - t1014;
t932 = t964 - t1014;
t931 = t963 * qJDD(1) - t958 * t965;
t930 = t958 * qJDD(1) + t963 * t965;
t926 = -t944 + t1014;
t925 = t971 * g(3);
t924 = t970 * g(3);
t921 = t961 * t988;
t917 = t941 + 0.2e1 * t940;
t916 = t992 * t991;
t904 = -t909 + t946;
t903 = t908 - t946;
t902 = qJDD(3) * t957 + t916 * t962;
t901 = -qJDD(3) * t962 + t916 * t957;
t900 = t918 * t961 - t952 * t991;
t899 = -t953 * t991 + t956 * t968;
t898 = -t909 - t946;
t897 = -t932 * t956 + t921;
t896 = t934 * t961 - t1019;
t895 = t932 * t961 + t1020;
t894 = t934 * t956 + t1018;
t890 = (t918 + t940) * t956;
t881 = -t917 * t956 + t889;
t880 = t917 * t961 + t919 * t956;
t876 = t909 - t908;
t875 = t956 * t1008 + t897 * t962;
t874 = t957 * t1002 + t896 * t962;
t873 = t897 * t957 - t956 * t999;
t872 = t896 * t957 - t961 * t999;
t866 = t900 * t962 - t977;
t865 = t899 * t962 + t977;
t864 = t900 * t957 + t976;
t863 = t899 * t957 - t976;
t862 = -t946 - t908;
t861 = -pkin(1) * t922 - t886;
t860 = pkin(1) * t923 - t885;
t858 = t907 * t893;
t856 = -t888 + t906;
t855 = t887 - t906;
t854 = (-t910 * t960 + t912 * t955) * t950;
t853 = (-t910 * t955 - t912 * t960) * t950;
t849 = t881 * t962 + t926 * t957;
t848 = t881 * t957 - t926 * t962;
t842 = t888 - t887;
t839 = t885 * t957 + t886 * t962;
t838 = pkin(1) * t840;
t836 = t903 * t960 - t1025;
t835 = -t904 * t955 + t1044;
t834 = t903 * t955 + t1024;
t833 = t904 * t960 + t1045;
t832 = -t898 * t955 - t1024;
t831 = t898 * t960 - t1025;
t830 = -t878 * t957 + t961 * t884;
t829 = -t877 * t957 + t956 * t884;
t826 = -t905 + t847;
t819 = -t883 + pkin(1) * (t957 * (t935 * t961 - t1020) + t962 * t919);
t818 = t882 + pkin(1) * (t957 * (-t933 * t956 - t1018) - t962 * t917);
t817 = -t912 * t1016 + t847 * t960;
t816 = t912 * t1015 + t847 * t955;
t815 = t910 * t1015 - t846 * t955;
t814 = t910 * t1016 + t846 * t960;
t813 = t887 + t888;
t812 = t862 * t960 - t1045;
t811 = t862 * t955 + t1044;
t807 = (-t891 * t959 + t893 * t954) * t907;
t806 = (-t891 * t954 - t893 * t959) * t907;
t803 = t957 * t883 + t962 * t878 - pkin(1) * (t933 * t961 - t1019);
t802 = t885 * t1009 + t962 * t877 - pkin(1) * (t935 * t956 + t921);
t801 = -t853 * t956 + t854 * t961;
t800 = t853 * t961 + t854 * t956;
t794 = pkin(1) * (t962 * (t944 + t1014) + t992 * t1008) + t993;
t793 = t801 * t962 + t948 * t957;
t792 = t801 * t957 - t948 * t962;
t791 = pkin(1) * (t957 * t993 - t884);
t786 = (qJD(5) + t907) * t891 + t973;
t784 = t810 - t857;
t782 = t809 - t858;
t781 = -t809 - t858;
t780 = -t834 * t956 + t836 * t961;
t779 = -t833 * t956 + t835 * t961;
t778 = t834 * t961 + t836 * t956;
t777 = t833 * t961 + t835 * t956;
t776 = -t893 * t1022 + t810 * t959;
t775 = t893 * t1021 + t810 * t954;
t774 = t891 * t1021 - t809 * t954;
t773 = -t891 * t1022 - t959 * t809;
t770 = -t823 * t960 + t827 * t955;
t769 = -t822 * t960 - t826 * t955;
t767 = -t822 * t955 + t826 * t960;
t766 = t807 * t960 + t843 * t955;
t765 = t807 * t955 - t843 * t960;
t764 = t855 * t959 - t1029;
t763 = -t856 * t954 + t1042;
t762 = t855 * t954 + t1028;
t761 = t856 * t959 + t1043;
t760 = -t816 * t956 + t817 * t961;
t759 = -t814 * t956 + t815 * t961;
t758 = t816 * t961 + t817 * t956;
t757 = t814 * t961 + t815 * t956;
t756 = t1004 - t955 * t877 + (t955 * t988 - t831) * pkin(2);
t755 = -t837 * t954 - t1028;
t753 = -pkin(2) * t811 + t804;
t752 = t828 * t959 - t1043;
t750 = t851 * t1003 - t789 * t956;
t749 = t851 * t1010 - t790 * t956;
t745 = t776 * t960 + t985;
t744 = t774 * t960 - t985;
t743 = t776 * t955 - t984;
t742 = t774 * t955 + t984;
t740 = t760 * t962 + t983;
t739 = t759 * t962 - t983;
t738 = t760 * t957 - t982;
t737 = t759 * t957 + t982;
t736 = t780 * t962 - t823 * t957;
t735 = t779 * t962 + t827 * t957;
t734 = t780 * t957 + t823 * t962;
t733 = t779 * t957 - t827 * t962;
t728 = (t956 * t1000 - t747 * t957) * pkin(2);
t725 = t783 * t959 + t785 * t954;
t724 = t782 * t959 - t784 * t954;
t722 = t782 * t954 + t784 * t959;
t721 = t764 * t960 - t781 * t955;
t720 = t763 * t960 + t785 * t955;
t719 = t764 * t955 + t781 * t960;
t718 = t763 * t955 - t785 * t960;
t714 = -t767 * t956 + t769 * t961;
t713 = t767 * t961 + t769 * t956;
t711 = -t765 * t956 + t766 * t961;
t710 = t765 * t961 + t766 * t956;
t709 = t755 * t960 - t786 * t955;
t708 = t755 * t955 + t786 * t960;
t707 = t752 * t960 - t782 * t955;
t706 = t752 * t955 + t782 * t960;
t705 = t724 * t960 + t842 * t955;
t704 = t724 * t955 - t842 * t960;
t703 = t714 * t962 + t876 * t957;
t702 = t714 * t957 - t876 * t962;
t701 = t750 * t962 - t756 * t957;
t700 = t725 * t960 - t813 * t955;
t699 = t725 * t955 + t813 * t960;
t698 = t749 * t962 - t753 * t957;
t697 = -t743 * t956 + t745 * t961;
t696 = -t742 * t956 + t744 * t961;
t695 = t743 * t961 + t745 * t956;
t694 = t742 * t961 + t744 * t956;
t693 = pkin(1) * (t957 * (-t831 * t956 + t832 * t961) - t962 * t825) + t994;
t692 = t717 * t960 + t1027;
t690 = t711 * t962 + t806 * t957;
t689 = t711 * t957 - t806 * t962;
t688 = pkin(2) * t708 + t1013;
t687 = pkin(2) * t706 - t1007;
t684 = pkin(1) * (t957 * (-t811 * t956 + t812 * t961) - t962 * t822) + t975;
t681 = -t732 * t956 + t1047;
t680 = t957 * t750 + t962 * t756 - pkin(1) * (t831 * t961 + t832 * t956);
t679 = -t986 + pkin(1) * (t957 * (t748 * t961 + t1046) - t1000);
t678 = t957 * t749 + t962 * t753 - pkin(1) * (t811 * t961 + t812 * t956);
t677 = t697 * t962 + t775 * t957;
t676 = t696 * t962 - t773 * t957;
t675 = t697 * t957 - t775 * t962;
t674 = t696 * t957 + t773 * t962;
t671 = -t719 * t956 + t721 * t961;
t670 = -t718 * t956 + t720 * t961;
t669 = t719 * t961 + t721 * t956;
t668 = t718 * t961 + t720 * t956;
t667 = t957 * t1036 + t681 * t962;
t666 = -pkin(1) * (t748 * t956 - t1047) + (t851 * t1009 + t747 * t962) * pkin(2);
t665 = pkin(2) * t699 + t717;
t664 = -t704 * t956 + t705 * t961;
t663 = t704 * t961 + t705 * t956;
t662 = -t686 * t956 + t730 * t961;
t661 = -t683 * t956 + t729 * t961;
t660 = (-t956 * t1001 + t691 * t957) * pkin(2);
t659 = t671 * t962 + t762 * t957;
t658 = t670 * t962 + t761 * t957;
t657 = t671 * t957 - t762 * t962;
t656 = t670 * t957 - t761 * t962;
t655 = pkin(1) * (t957 * (-t768 * t956 + t770 * t961) - t962 * t850) + t995;
t654 = t716 * t1003 - t673 * t956;
t653 = t957 * t681 - t962 * t1036 - pkin(1) * (t768 * t961 + t770 * t956);
t652 = t664 * t962 + t722 * t957;
t651 = t664 * t957 - t722 * t962;
t650 = t662 * t962 + t688 * t957;
t649 = t661 * t962 + t687 * t957;
t648 = t987 + pkin(1) * (t957 * (-t691 * t956 + t692 * t961) + t1001);
t647 = pkin(1) * (t957 * (-t708 * t956 + t709 * t961) - t962 * t754) + t996;
t646 = pkin(1) * (t957 * (-t706 * t956 + t707 * t961) - t962 * t751) + t997;
t645 = -pkin(1) * (t691 * t961 + t692 * t956) + (-t1009 * t716 - t691 * t962) * pkin(2);
t644 = t654 * t962 + t665 * t957;
t643 = t957 * t662 - t962 * t688 - pkin(1) * (t708 * t961 + t709 * t956);
t642 = t957 * t661 - t962 * t687 - pkin(1) * (t706 * t961 + t707 * t956);
t641 = pkin(1) * (t957 * (-t699 * t956 + t700 * t961) - t962 * t723) + t998;
t640 = t957 * t654 - t962 * t665 - pkin(1) * (t699 * t961 + t700 * t956);
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t931, 0, -t930, 0, -t1032, -t1030, -t938 * t963 + t939 * t958, 0, 0, 0, t978, 0, -t972, 0, -t925, -t924, -t839 * t958 + t840 * t963, -pkin(1) * t1032, -t864 * t958 + t866 * t963, -t848 * t958 + t849 * t963, -t873 * t958 + t875 * t963, -t863 * t958 + t865 * t963, -t872 * t958 + t874 * t963, -t901 * t958 + t902 * t963, -t802 * t958 + t829 * t963, -t803 * t958 + t830 * t963, t970 * t821, -t958 * t1039, -t738 * t958 + t740 * t963, -t702 * t958 + t703 * t963, -t733 * t958 + t735 * t963, -t737 * t958 + t739 * t963, -t734 * t958 + t736 * t963, -t792 * t958 + t793 * t963, -t678 * t958 + t698 * t963, -t680 * t958 + t701 * t963, -t653 * t958 + t667 * t963, -t666 * t958 + t728 * t963, -t675 * t958 + t677 * t963, -t651 * t958 + t652 * t963, -t656 * t958 + t658 * t963, -t674 * t958 + t676 * t963, -t657 * t958 + t659 * t963, -t689 * t958 + t690 * t963, -t642 * t958 + t649 * t963, -t643 * t958 + t650 * t963, -t640 * t958 + t644 * t963, -t645 * t958 + t660 * t963; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t930, 0, t931, 0, t1030, -t1032, -t938 * t958 - t939 * t963, 0, 0, 0, t972, 0, t978, 0, t924, -t925, t839 * t963 + t840 * t958, pkin(1) * t1030, t864 * t963 + t866 * t958, t848 * t963 + t849 * t958, t873 * t963 + t875 * t958, t863 * t963 + t865 * t958, t872 * t963 + t874 * t958, t901 * t963 + t902 * t958, t802 * t963 + t829 * t958, t803 * t963 + t830 * t958, t971 * t821, t963 * t1039, t738 * t963 + t740 * t958, t702 * t963 + t703 * t958, t733 * t963 + t735 * t958, t737 * t963 + t739 * t958, t734 * t963 + t736 * t958, t792 * t963 + t793 * t958, t678 * t963 + t698 * t958, t680 * t963 + t701 * t958, t653 * t963 + t667 * t958, t666 * t963 + t728 * t958, t675 * t963 + t677 * t958, t651 * t963 + t652 * t958, t656 * t963 + t658 * t958, t674 * t963 + t676 * t958, t657 * t963 + t659 * t958, t689 * t963 + t690 * t958, t642 * t963 + t649 * t958, t643 * t963 + t650 * t958, t640 * t963 + t644 * t958, t645 * t963 + t660 * t958; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t938, t939, 0, 0, 0, 0, 0, 0, 0, t949, t860, t861, 0, -t838, t890, t880, t895, t889, t894, 0, t819, t818, t794, t791, t758, t713, t777, t757, t778, t800, t684, t693, t655, t679, t695, t663, t668, t694, t669, t710, t646, t647, t641, t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t965, 0, 0, -g(3), -t938, 0, 0, 0, t923, 0, -t922, 0, -t1033, -t1031, t840, 0, t866, t849, t875, t865, t874, t902, t829, t830, t962 * t821, 0, t740, t703, t735, t739, t736, t793, t698, t701, t667, t728, t677, t652, t658, t676, t659, t690, t649, t650, t644, t660; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t965, 0, qJDD(1), 0, g(3), 0, -t939, 0, 0, 0, t922, 0, t923, 0, t1031, -t1033, t839, pkin(1) * g(3), t864, t848, t873, t863, t872, t901, t802, t803, t957 * t821, t1039, t738, t702, t733, t737, t734, t792, t678, t680, t653, t666, t675, t651, t656, t674, t657, t689, t642, t643, t640, t645; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t938, t939, 0, 0, 0, 0, 0, 0, 0, t949, t860, t861, 0, -t838, t890, t880, t895, t889, t894, 0, t819, t818, t794, t791, t758, t713, t777, t757, t778, t800, t684, t693, t655, t679, t695, t663, t668, t694, t669, t710, t646, t647, t641, t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t949, 0, -t947, 0, 0, -g(3), t885, 0, t900, t881, t897, t899, t896, t916, t882, t883, t821, 0, t760, t714, t779, t759, t780, t801, t749, t750, t681, t851 * t1035, t697, t664, t670, t696, t671, t711, t661, t662, t654, -t716 * t1035; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t947, 0, t949, 0, g(3), 0, t886, 0, t937, -t926, -t941, -t937, -t1002, -qJDD(3), t877, t878, 0, 0, -t879, -t876, -t827, t879, t823, -t948, t753, t756, -t1036, t1037, -t775, -t722, -t761, t773, -t762, -t806, -t687, -t688, -t665, -t1038; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t949, -t885, -t886, 0, 0, t890, t880, t895, t889, t894, 0, -t883, t882, t993, 0, t758, t713, t777, t757, t778, t800, t975, t994, t995, -t986, t695, t663, t668, t694, t669, t710, t997, t996, t998, t987; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t918, t919, t988, -t940, t934, t940, 0, t885, t877, 0, t817, t769, t835, t815, t836, t854, t1012, t1005, t747, 0, t745, t705, t720, t744, t721, t766, t729, t730, t1006, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t981, t917, t932, -t968, t929, -t981, -t885, 0, t878, 0, t816, t767, t833, t814, t834, t853, t790, t789, t732, -pkin(2) * t851, t743, t704, t718, t742, t719, t765, t683, t686, t673, pkin(2) * t716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t937, t926, t941, t937, t1002, qJDD(3), -t877, -t878, 0, 0, t879, t876, t827, -t879, -t823, t948, -t753, -t756, t1036, -t1037, t775, t722, t761, -t773, t762, t806, t687, t688, t665, t1038; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, -t822, t1040, t905, t903, -t905, 0, t851, t804, 0, t776, t724, t763, t774, t764, t807, t1013, t1007, t716, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1017, t826, t904, t846, t868, -t1017, -t851, 0, t805, 0, -t845, -t842, -t785, t845, t781, -t843, t771, t772, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t879, t876, t827, -t879, -t823, t948, -t804, -t805, 0, 0, t775, t722, t761, -t773, t762, t806, -t1007, t1013, t717, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t810, t782, t1041, t857, t855, -t857, 0, t804, t771, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t858, t784, t856, t809, t796, -t858, -t804, 0, t772, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, t842, t785, -t845, -t781, t843, -t771, -t772, 0, 0;];
m_new_reg = t1;
