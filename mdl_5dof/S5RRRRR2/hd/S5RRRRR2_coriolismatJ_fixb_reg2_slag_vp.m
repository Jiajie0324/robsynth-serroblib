% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [2x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:54
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(2,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [2 1]), ...
  'S5RRRRR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [2x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:53:50
% EndTime: 2019-12-05 18:54:03
% DurationCPUTime: 7.45s
% Computational Cost: add. (4700->448), mult. (15229->614), div. (0->0), fcn. (14793->8), ass. (0->397)
t329 = sin(qJ(3));
t540 = cos(qJ(4));
t437 = t540 * t329;
t328 = sin(qJ(4));
t332 = cos(qJ(3));
t489 = t328 * t332;
t299 = t437 + t489;
t564 = 0.2e1 * t299;
t436 = t540 * t332;
t490 = t328 * t329;
t363 = t436 - t490;
t458 = qJD(3) + qJD(4);
t562 = t458 * t299;
t566 = t363 * t562;
t327 = sin(qJ(5));
t323 = t327 ^ 2;
t331 = cos(qJ(5));
t325 = t331 ^ 2;
t544 = -t325 / 0.2e1;
t205 = (t323 / 0.2e1 + t544) * t299;
t296 = t299 ^ 2;
t459 = qJD(1) + qJD(2);
t491 = t327 * t331;
t552 = t459 * t491;
t55 = t458 * t205 + t296 * t552;
t565 = -0.2e1 * t299;
t415 = t363 * t459;
t315 = t325 - t323;
t561 = t458 * t315;
t457 = -t363 ^ 2 + t296;
t146 = t457 * t327;
t560 = t459 * t146;
t147 = t457 * t331;
t559 = t459 * t147;
t495 = t299 * t331;
t538 = pkin(2) * t328;
t273 = t495 * t538;
t537 = pkin(2) * t331;
t444 = t537 / 0.2e1;
t404 = t328 * t444;
t163 = -t273 / 0.2e1 + t299 * t404;
t558 = t459 * t163;
t557 = t459 * t457;
t556 = t459 * t205;
t206 = t327 * t363;
t104 = t459 * t206;
t209 = t331 * t363;
t105 = t459 * t209;
t214 = t315 * t296;
t555 = t459 * t214;
t295 = t437 / 0.2e1 + t489 / 0.2e1;
t554 = t459 * t295;
t324 = t329 ^ 2;
t326 = t332 ^ 2;
t316 = t326 - t324;
t553 = t459 * t316;
t412 = t459 * t332;
t330 = sin(qJ(2));
t535 = t330 * pkin(1);
t455 = t331 * t535;
t333 = cos(qJ(2));
t533 = t333 * pkin(1);
t268 = t363 * t533;
t492 = t327 * t268;
t216 = t455 - t492;
t510 = t216 * t327;
t196 = -t510 / 0.2e1;
t486 = t331 * t268;
t218 = t327 * t535 + t486;
t507 = t218 * t331;
t551 = t196 + t507 / 0.2e1;
t477 = t323 + t325;
t267 = t363 * t535;
t112 = t331 * t267;
t534 = t332 * pkin(2);
t398 = t533 + t534;
t189 = -t327 * t398 + t112;
t442 = t534 / 0.2e1;
t374 = t327 * t442 - t189 / 0.2e1;
t340 = (t112 / 0.2e1 + t374) * t299;
t349 = pkin(1) * t299;
t266 = t333 * t349;
t498 = t266 * t327;
t422 = -t498 / 0.2e1;
t12 = t422 + t340;
t161 = t163 * qJD(3);
t471 = qJD(2) * t332;
t451 = pkin(2) * t471;
t406 = t327 * t451;
t550 = qJD(1) * t12 + t299 * t406 + t161;
t265 = t330 * t349;
t499 = t265 * t331;
t423 = t499 / 0.2e1;
t424 = -t499 / 0.2e1;
t141 = t423 + t424;
t501 = t265 * t327;
t425 = t501 / 0.2e1;
t426 = -t501 / 0.2e1;
t140 = t425 + t426;
t549 = -t507 / 0.2e1 + t510 / 0.2e1;
t493 = t327 * t267;
t188 = t331 * t398 + t493;
t548 = t188 * t327 + t189 * t331;
t546 = t266 / 0.2e1;
t545 = t299 / 0.2e1;
t543 = t328 / 0.2e1;
t542 = t329 / 0.2e1;
t541 = -t332 / 0.2e1;
t539 = pkin(2) * t327;
t536 = t329 * pkin(2);
t420 = t544 - t323 / 0.2e1;
t439 = t540 * t267;
t452 = t540 / 0.2e1;
t500 = t265 * t328;
t17 = (-t439 / 0.2e1 + (0.1e1 / 0.2e1 + t420) * t500 + t548 * t452) * pkin(2);
t532 = t17 * qJD(4);
t528 = pkin(1) * qJD(2);
t527 = pkin(2) * qJD(4);
t526 = qJD(3) * pkin(2);
t383 = t216 * t331 + t218 * t327;
t73 = t383 * t299;
t525 = qJD(1) * t73;
t496 = t299 * t327;
t81 = -t188 * t363 - t265 * t496;
t524 = qJD(1) * t81;
t82 = t189 * t363 + t265 * t495;
t523 = qJD(1) * t82;
t95 = -t216 * t363 + t266 * t496;
t522 = qJD(1) * t95;
t96 = t218 * t363 + t266 * t495;
t521 = qJD(1) * t96;
t456 = t327 * t536;
t217 = t456 - t499;
t509 = t217 * t327;
t215 = t331 * t536 + t501;
t511 = t215 * t331;
t516 = t189 * t327;
t517 = t188 * t331;
t61 = (-t516 + t517) * t363;
t15 = (t509 + t511) * t299 - t61;
t520 = t15 * qJD(1);
t18 = -t188 * t215 + t189 * t217 + t265 * t267;
t519 = t18 * qJD(1);
t502 = t265 * t266;
t19 = -t188 * t216 + t189 * t218 + t502;
t514 = t19 * qJD(1);
t513 = t215 * t363;
t512 = t215 * t327;
t508 = t217 * t331;
t135 = t188 * t299;
t193 = t265 * t206;
t194 = t299 * t493;
t441 = t194 - t135 + t193;
t22 = t441 - t513;
t506 = t22 * qJD(1);
t26 = (-t189 + t112) * t299;
t23 = t26 - (-t217 - t499) * t363;
t505 = t23 * qJD(1);
t25 = -t441 + t193;
t504 = t25 * qJD(1);
t503 = t26 * qJD(1);
t497 = t268 * t328;
t361 = t374 * t363;
t443 = -t535 / 0.2e1;
t372 = t265 * t545 + t443;
t31 = t492 / 0.2e1 + t372 * t331 - t361;
t494 = t31 * qJD(1);
t488 = t329 * t363;
t360 = (t331 * t442 + t188 / 0.2e1) * t363;
t33 = t486 / 0.2e1 - t372 * t327 - t360;
t487 = t33 * qJD(1);
t485 = t332 * t299;
t334 = pkin(2) ^ 2;
t484 = t334 * t332;
t483 = t61 * qJD(1);
t373 = t398 * pkin(2);
t71 = t329 * t373;
t482 = t71 * qJD(1);
t72 = t267 * t268 - t398 * t535 + t502;
t481 = t72 * qJD(1);
t142 = 0.2e1 * t425;
t143 = 0.2e1 * t423;
t242 = t265 * qJD(4);
t479 = qJD(3) * t265 + t242;
t244 = t267 * qJD(4);
t478 = -qJD(3) * t267 - t244;
t454 = t363 * t534;
t271 = t323 * t454;
t272 = t325 * t454;
t169 = t271 + t272;
t476 = t324 + t326;
t111 = t266 * t299 + t268 * t363;
t475 = qJD(1) * t111;
t286 = pkin(2) * t488;
t370 = t398 * t299;
t166 = -t286 - t370;
t474 = qJD(1) * t166;
t287 = t299 * t536;
t371 = t398 * t363;
t167 = t287 - t371;
t473 = qJD(1) * t167;
t472 = qJD(1) * t330;
t470 = qJD(3) * t328;
t469 = qJD(4) * t331;
t468 = qJD(5) * t327;
t467 = qJD(5) * t331;
t466 = t140 * qJD(1);
t465 = t141 * qJD(1);
t464 = t205 * qJD(5);
t224 = (-0.1e1 + t476) * pkin(1) ^ 2 * t333 * t330;
t463 = t224 * qJD(1);
t294 = t476 * t533;
t462 = t294 * qJD(1);
t461 = t295 * qJD(5);
t460 = t329 * qJD(3);
t322 = t332 * qJD(3);
t453 = pkin(2) * t485;
t450 = t332 * t527;
t449 = t330 * t528;
t448 = t328 * t527;
t447 = pkin(2) * t470;
t446 = pkin(1) * t472;
t445 = qJD(1) * t533;
t440 = t266 * t540;
t438 = t540 * t363;
t435 = t329 * t472;
t434 = t330 * t471;
t433 = t327 * t470;
t432 = t333 * t460;
t431 = t333 * t322;
t430 = t363 * t468;
t429 = t363 * t467;
t319 = t327 * t467;
t320 = t329 * t322;
t421 = -t485 / 0.2e1;
t419 = qJD(5) * t540;
t418 = t540 * qJD(3);
t417 = t540 * qJD(4);
t416 = t477 * t329;
t414 = t333 * t459;
t413 = t459 * t299;
t411 = t458 * t328;
t409 = t458 * t331;
t408 = t363 * t446;
t407 = t299 * t446;
t405 = t331 * t451;
t308 = -t456 / 0.2e1;
t277 = pkin(2) * t421;
t403 = pkin(2) * t418;
t402 = t296 * t319;
t401 = t327 * t419;
t400 = t331 * t419;
t399 = t440 / 0.2e1;
t397 = t420 * t265;
t396 = -t135 / 0.2e1 + t193 / 0.2e1 + t194 / 0.2e1;
t124 = t363 * t413;
t122 = t299 * t415;
t393 = t458 * t491;
t391 = t327 * t409;
t390 = -pkin(2) * t440 / 0.2e1;
t101 = pkin(2) * t299 * t416 - t169;
t339 = -(t516 / 0.2e1 - t517 / 0.2e1) * t363 + t271 / 0.2e1 + t272 / 0.2e1;
t336 = (-t509 / 0.2e1 - t511 / 0.2e1 + t420 * t536) * t299 + t339;
t2 = t336 + t549;
t389 = qJD(1) * t2 - qJD(2) * t101;
t382 = -t485 - t488;
t170 = t382 * t539;
t337 = -(t308 - t217 / 0.2e1 + t424) * t363 + t340;
t6 = t422 + t337;
t388 = qJD(1) * t6 - qJD(2) * t170;
t171 = t382 * t537;
t345 = -t513 / 0.2e1 + t396;
t347 = (-t488 / 0.2e1 + t421) * pkin(2);
t7 = (t546 + t347) * t331 + t345;
t387 = t7 * qJD(1) + t171 * qJD(2);
t264 = t416 * t484;
t364 = t189 * t542 + t217 * t541;
t365 = t215 * t541 - t188 * t329 / 0.2e1;
t4 = (t399 + (-t218 * t328 / 0.2e1 + t365) * t331 + (t216 * t543 + t364) * t327) * pkin(2);
t386 = qJD(1) * t4 - qJD(2) * t264;
t24 = (t267 - t548) * t265;
t385 = qJD(1) * t24 + qJD(3) * t17;
t384 = t508 - t512;
t10 = t339 + t549;
t381 = qJD(1) * t10 + qJD(2) * t169;
t353 = t299 * t452 - t363 * t543;
t341 = t542 + t353;
t136 = t341 * t539;
t66 = t136 + t141;
t380 = -t66 * qJD(1) - t136 * qJD(2);
t139 = t341 * t537;
t68 = -t139 + t140;
t379 = -t68 * qJD(1) + t139 * qJD(2);
t199 = -t286 - t453;
t114 = t453 + (t545 - t295) * t533;
t97 = t286 + t114;
t378 = qJD(1) * t97 - qJD(2) * t199;
t200 = t287 - t454;
t351 = -t436 / 0.2e1 + t490 / 0.2e1;
t115 = t454 + (t363 / 0.2e1 + t351) * t533;
t98 = -t287 + t115;
t377 = qJD(1) * t98 - qJD(2) * t200;
t352 = t477 * t540;
t223 = (-t540 + t352) * t334 * t328;
t376 = qJD(1) * t17 + qJD(3) * t223;
t293 = t352 * pkin(2);
t366 = t512 / 0.2e1 - t508 / 0.2e1;
t54 = t397 + t366;
t375 = -qJD(1) * t54 - qJD(3) * t293;
t369 = (-qJD(2) * t363 + qJD(5)) * t534;
t368 = qJD(1) * t398;
t367 = qJD(4) * t398;
t362 = -t438 * t537 - t273;
t359 = t299 * (-qJD(5) + t415);
t358 = qJD(1) * t114 + t299 * t451;
t357 = -qJD(1) * t115 - t363 * t451;
t356 = t363 * t368;
t355 = t299 * t368;
t354 = t391 * t564;
t338 = (-t484 / 0.2e1 - t373 / 0.2e1) * t329;
t109 = (-t497 / 0.2e1 + t399) * pkin(2) + t338;
t350 = t329 * t334 * t471 - qJD(1) * t109;
t348 = pkin(2) * (-t299 * t328 - t438);
t346 = -t418 - t417;
t342 = -t363 * t425 + t396;
t13 = (t277 + t546) * t331 + t342;
t343 = qJD(1) * t13 - t299 * t405;
t29 = t331 * t359;
t187 = qJD(3) * t348;
t137 = t353 * t539 + t308;
t138 = t329 * t444 - t353 * t537;
t116 = t351 * t533 - t363 * t442 - t371 / 0.2e1;
t117 = -t295 * t533 + t277 - t370 / 0.2e1;
t314 = t329 * t449;
t313 = t327 * t448;
t307 = t316 * qJD(3);
t306 = t315 * qJD(5);
t291 = t329 * t412;
t289 = t294 * qJD(2);
t288 = t293 * qJD(4);
t279 = t299 * t449;
t278 = t363 * t449;
t239 = -t266 * t331 / 0.2e1;
t238 = t498 / 0.2e1;
t219 = t458 * t363;
t210 = t458 * t295;
t160 = t163 * qJD(4);
t119 = t552 * t565 + t561;
t118 = t552 * t564 - t561;
t113 = t163 + t493;
t110 = t111 * qJD(2);
t108 = pkin(2) * t497 / 0.2e1 + t390 + t338;
t107 = t124 - t461;
t106 = -t122 + t461;
t103 = t467 - t105;
t102 = -t468 + t104;
t100 = t287 + t116;
t99 = -t286 + t117;
t93 = t325 * t566 - t402;
t92 = t323 * t566 + t402;
t90 = t96 * qJD(2);
t89 = t95 * qJD(2);
t83 = t458 * t457;
t80 = t391 - t556;
t79 = -t393 + t556;
t76 = 0.2e1 * t327 * t29;
t70 = t73 * qJD(2);
t69 = t138 + t142;
t67 = t137 + t143;
t65 = -t122 * t325 - t464;
t64 = -t122 * t323 + t464;
t63 = -t214 * qJD(5) - t354 * t363;
t58 = t354 + t555;
t57 = t393 * t565 - t555;
t53 = t397 - t366;
t52 = t147 * t458 + t299 * t430;
t51 = -t146 * t458 + t299 * t429;
t50 = -t209 * qJD(5) - t559;
t49 = t206 * qJD(5) + t560;
t47 = -t122 * t331 - t206 * t458;
t46 = -t122 * t327 + t209 * t458;
t42 = -t464 - (-t325 * t413 - t393) * t363;
t41 = t464 - (-t323 * t413 + t391) * t363;
t34 = t299 * t426 - t486 / 0.2e1 + t327 * t443 - t360;
t32 = t299 * t423 - t492 / 0.2e1 + t455 / 0.2e1 - t361;
t28 = t327 * t359;
t27 = t363 * t561 + (-qJD(5) - t415) * t491 * t564;
t21 = t327 * t562 + t559;
t20 = t299 * t409 - t560;
t14 = t277 * t331 + t239 + t342;
t11 = t238 + t340;
t9 = t339 + t551;
t8 = t331 * t347 + t239 + t345;
t5 = t238 + t337;
t3 = t218 * t404 + t196 * t538 + t390 + (t327 * t364 + t331 * t365) * pkin(2);
t1 = t336 + t551;
t16 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t449, -t333 * t528, 0, 0, t320, t307, 0, -t320, 0, 0, (-t432 - t434) * pkin(1), -pkin(1) * t431 + t314, t289, t224 * qJD(2), t566, -t83, 0, -t566, 0, 0, qJD(3) * t166 - t299 * t367 - t278, qJD(3) * t167 - t363 * t367 + t279, t110, qJD(2) * t72 - qJD(3) * t71, t93, t63, t52, t92, t51, -t566, qJD(3) * t22 - qJD(4) * t25 + qJD(5) * t82 + t89, qJD(3) * t23 + qJD(4) * t26 + qJD(5) * t81 + t90, -qJD(3) * t15 + qJD(4) * t61 - t70, qJD(2) * t19 + qJD(3) * t18 + qJD(4) * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t459 * t535, -pkin(1) * t414, 0, 0, t320, t307, 0, -t320, 0, 0, (-t330 * t412 - t432) * pkin(1), t314 + (-t431 + t435) * pkin(1), t289 + t462, t463, t566, -t83, 0, -t566, 0, 0, qJD(3) * t99 + qJD(4) * t117 - t278 - t408, qJD(3) * t100 + qJD(4) * t116 + t279 + t407, t110 + t475, -pkin(1) * pkin(2) * t434 + qJD(3) * t108 + t481, t93, t63, t52, t92, t51, -t566, qJD(3) * t8 + qJD(4) * t14 + qJD(5) * t32 + t522 + t89, qJD(3) * t5 + qJD(4) * t11 + qJD(5) * t34 + t521 + t90, qJD(3) * t1 + qJD(4) * t9 - t525 - t70, t3 * qJD(3) - t383 * t451 + t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, t553, t322, -t291, -t460, 0, (-t322 * t330 - t329 * t414) * pkin(1), (t330 * t460 - t333 * t412) * pkin(1), 0, 0, t124, -t557, t219, -t122, -t562, 0, qJD(2) * t99 + t474 + t478, qJD(2) * t100 + t473 + t479, t187, -t482 + t108 * qJD(2) + (-t439 - t500) * t526, t42, t27, t21, t41, t20, t106, t506 + t8 * qJD(2) + (t327 * t348 - t112) * qJD(3) - t112 * qJD(4) + t69 * qJD(5), t505 + t5 * qJD(2) + (t362 + t493) * qJD(3) + t113 * qJD(4) + t67 * qJD(5), qJD(2) * t1 + qJD(3) * t384 + qJD(4) * t53 - t520, t519 + t3 * qJD(2) + (t328 * t384 - t439) * t526 + t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, -t557, t219, -t122, -t562, 0, qJD(2) * t117 - t355 + t478, qJD(2) * t116 - t356 + t479, 0, 0, t42, t27, t21, t41, t20, t106, qJD(2) * t14 - qJD(3) * t112 + qJD(5) * t142 - t244 * t331 - t504, qJD(2) * t11 + qJD(3) * t113 + qJD(5) * t143 + t244 * t327 + t503, t9 * qJD(2) + t53 * qJD(3) - t242 * t477 + t483, t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, t57, t28, t55, t29, t210, qJD(2) * t32 + qJD(3) * t69 + qJD(4) * t142 - qJD(5) * t189 + t523, qJD(2) * t34 + qJD(3) * t67 + qJD(4) * t143 + qJD(5) * t188 + t524, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t446, t445, 0, 0, t320, t307, 0, -t320, 0, 0, t332 * t446, -pkin(1) * t435, -t462, -t463, t566, -t83, 0, -t566, 0, 0, -qJD(3) * t97 - qJD(4) * t114 + t408, -qJD(3) * t98 - qJD(4) * t115 - t407, -t475, qJD(3) * t109 - t481, t93, t63, t52, t92, t51, -t566, qJD(3) * t7 + qJD(4) * t13 + qJD(5) * t31 - t522, qJD(3) * t6 + qJD(4) * t12 + qJD(5) * t33 - t521, qJD(3) * t2 + qJD(4) * t10 + t525, qJD(3) * t4 - t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, t307, 0, -t320, 0, 0, 0, 0, 0, 0, t566, -t83, 0, -t566, 0, 0, qJD(3) * t199 - t299 * t450, qJD(3) * t200 - t363 * t450, 0, -t334 * t320, t93, t63, t52, t92, t51, -t566, t171 * qJD(3) + (-t299 * t469 - t430) * t534, -t170 * qJD(3) + (qJD(4) * t496 - t429) * t534, -qJD(3) * t101 + qJD(4) * t169, -t264 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, t553, t322, -t291, -t460, 0, 0, 0, 0, 0, t124, -t557, t219, -t122, -t562, 0, -t378, -t377, t187, -t350, t42, t27, t21, t41, t20, t106, t138 * qJD(5) + t187 * t327 + t387, qJD(3) * t362 + qJD(5) * t137 + t160 + t388, t389, t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, -t557, t219, -t122, -t562, 0, -t358, t357, 0, 0, t42, t27, t21, t41, t20, t106, t343, t550, t381, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, t57, t28, t55, t29, t210, t138 * qJD(3) + t327 * t369 + t494, t137 * qJD(3) + t331 * t369 + t487, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, -t553, 0, t291, 0, 0, t329 * t445, t332 * t445, 0, 0, -t124, t557, 0, t122, 0, 0, qJD(2) * t97 - t474, qJD(2) * t98 - t473, 0, -qJD(2) * t109 + t482, t65, t76, t50, t64, t49, t107, -qJD(2) * t7 + qJD(5) * t68 - t506, -qJD(2) * t6 + qJD(5) * t66 + t160 - t505, -qJD(2) * t2 + qJD(4) * t54 + t520, -qJD(2) * t4 - t519 + t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, -t553, 0, t291, 0, 0, 0, 0, 0, 0, -t124, t557, 0, t122, 0, 0, t378, t377, 0, t350, t65, t76, t50, t64, t49, t107, -qJD(5) * t139 - t387, qJD(5) * t136 + t160 - t388, -t389, -t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t448, -pkin(2) * t417, 0, 0, t319, t306, 0, -t319, 0, 0, (-t328 * t469 - t401) * pkin(2), -pkin(2) * t400 + t313, t288, t223 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -pkin(2) * t411, t346 * pkin(2), 0, 0, t319, t306, 0, -t319, 0, 0, (-t331 * t411 - t401) * pkin(2), t313 + t558 + (-t400 + t433) * pkin(2), t288 - t375, t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, t119, t103, t79, t102, -t554, (t327 * t346 - t328 * t467) * pkin(2) - t379, (t328 * t468 + t331 * t346) * pkin(2) - t380, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, t557, 0, t122, 0, 0, qJD(2) * t114 + t355, qJD(2) * t115 + t356, 0, 0, t65, t76, t50, t64, t49, t107, -qJD(2) * t13 - qJD(5) * t140 + t504, -qJD(2) * t12 - qJD(5) * t141 - t161 - t503, -qJD(2) * t10 - qJD(3) * t54 - t483, -t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, t557, 0, t122, 0, 0, t358, -t357, 0, 0, t65, t76, t50, t64, t49, t107, -t343, -t550, -t381, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t447, t403, 0, 0, t319, t306, 0, -t319, 0, 0, t331 * t447, -pkin(2) * t433 - t558, t375, -t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t319, t306, 0, -t319, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, t119, t103, t79, t102, -t554, -t466, -t465, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t58, t46, -t55, t47, t210, -qJD(2) * t31 - qJD(3) * t68 + qJD(4) * t140 - t523, -qJD(2) * t33 - qJD(3) * t66 + qJD(4) * t141 - t524, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t58, t46, -t55, t47, t210, qJD(3) * t139 + t363 * t406 - t494, -qJD(3) * t136 + t363 * t405 - t487, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, t118, t105, t80, -t104, t554, t327 * t403 + t379, t331 * t403 + t380, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, t118, t105, t80, -t104, t554, t466, t465, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t16;
