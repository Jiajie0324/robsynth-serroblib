% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [2x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-29 15:26
% Revision: 932832b1be1be80f59b7f1a581a1a8f328bdb39d (2019-03-29)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(2,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [2 1]), ...
  'S5RRRRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [2x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-29 15:26:33
% EndTime: 2019-03-29 15:26:41
% DurationCPUTime: 3.52s
% Computational Cost: add. (2799->304), mult. (8424->434), div. (0->0), fcn. (8574->8), ass. (0->282)
t214 = cos(qJ(3));
t356 = sin(qJ(4));
t205 = t356 * t214;
t211 = sin(qJ(3));
t357 = cos(qJ(4));
t206 = t357 * t211;
t182 = -t206 - t205;
t375 = 0.2e1 * t182;
t294 = t356 * t211;
t296 = t357 * t214;
t180 = t294 - t296;
t310 = qJD(3) + qJD(4);
t366 = t310 * t182;
t377 = t180 * t366;
t376 = t357 * t180 + t356 * t182;
t213 = cos(qJ(5));
t209 = t213 ^ 2;
t210 = sin(qJ(5));
t360 = t210 ^ 2;
t116 = (-t360 / 0.2e1 + t209 / 0.2e1) * t182;
t179 = t182 ^ 2;
t311 = qJD(1) + qJD(2);
t328 = t210 * t213;
t363 = t311 * t328;
t29 = t116 * t310 + t179 * t363;
t309 = -t180 ^ 2 + t179;
t86 = t309 * t210;
t374 = t311 * t86;
t87 = t309 * t213;
t373 = t311 * t87;
t372 = t311 * t309;
t212 = sin(qJ(2));
t352 = t212 * pkin(1);
t159 = t180 * t352;
t331 = t210 * t159;
t113 = t182 * t331;
t215 = cos(qJ(2));
t350 = t215 * pkin(1);
t351 = t214 * pkin(2);
t192 = -t350 - t351;
t109 = -t213 * t192 - t331;
t77 = t109 * t182;
t13 = -t113 - t77;
t317 = qJD(2) * t214;
t305 = pkin(2) * t317;
t264 = t182 * t305;
t62 = t213 * t159;
t110 = t210 * t192 - t62;
t226 = t215 * t182;
t224 = pkin(1) * t226;
t218 = t224 / 0.2e1;
t281 = t62 / 0.2e1;
t299 = -t351 / 0.2e1;
t335 = t182 * t210;
t358 = t182 / 0.2e1;
t6 = t110 * t358 + t182 * t281 + t210 * t218 + t299 * t335;
t371 = -t6 * qJD(1) + t210 * t264;
t369 = t116 * t311;
t308 = -t209 + t360;
t125 = t308 * t179;
t368 = t125 * t311;
t367 = t308 * t310;
t128 = t310 * t180;
t117 = t210 * t180;
t58 = t311 * t117;
t120 = t213 * t180;
t59 = t311 * t120;
t178 = t206 / 0.2e1 + t205 / 0.2e1;
t365 = t311 * t178;
t273 = t311 * t180;
t200 = -t211 ^ 2 + t214 ^ 2;
t364 = t311 * t200;
t158 = t182 * t352;
t337 = t158 * t213;
t282 = -t337 / 0.2e1;
t283 = t337 / 0.2e1;
t83 = t282 + t283;
t338 = t158 * t210;
t284 = -t338 / 0.2e1;
t82 = t284 + t338 / 0.2e1;
t353 = t211 * pkin(2);
t307 = t210 * t353;
t127 = t307 + t337;
t193 = -t307 / 0.2e1;
t362 = (t193 - t127 / 0.2e1 + t283) * t180;
t355 = pkin(2) * t210;
t354 = pkin(2) * t213;
t349 = pkin(1) * qJD(2);
t43 = -t110 * t180 + t182 * t337;
t348 = qJD(1) * t43;
t160 = t180 * t350;
t222 = t182 * t226;
t50 = t160 * t117 + (t212 * t120 + t210 * t222) * pkin(1);
t347 = qJD(1) * t50;
t329 = t210 * t212;
t51 = t160 * t120 + (-t180 * t329 + t213 * t222) * pkin(1);
t346 = qJD(1) * t51;
t327 = t211 * t180;
t174 = pkin(2) * t327;
t333 = t192 * t182;
t96 = t174 - t333;
t345 = qJD(1) * t96;
t175 = t182 * t353;
t334 = t192 * t180;
t97 = -t175 - t334;
t344 = qJD(1) * t97;
t112 = t158 * t117;
t306 = t213 * t353;
t341 = (t306 - t338) * t180;
t11 = t112 + t341 - t13;
t343 = t11 * qJD(1);
t14 = (t110 + t62) * t182;
t12 = t14 + (-t127 + t337) * t180;
t342 = t12 * qJD(1);
t340 = t13 * qJD(1);
t339 = t14 * qJD(1);
t298 = t351 / 0.2e1;
t242 = t210 * t298 - t110 / 0.2e1;
t238 = t242 * t180;
t300 = t352 / 0.2e1;
t241 = -t158 * t358 + t300;
t330 = t210 * t160;
t18 = -t330 / 0.2e1 - t241 * t213 + t238;
t336 = t18 * qJD(1);
t237 = (t213 * t298 + t109 / 0.2e1) * t180;
t326 = t213 * t160;
t20 = -t326 / 0.2e1 + t241 * t210 + t237;
t332 = t20 * qJD(1);
t325 = t214 * t182;
t42 = t109 * t180 - t158 * t335;
t324 = t42 * qJD(1);
t323 = t82 * qJD(1);
t322 = t83 * qJD(1);
t84 = 0.2e1 * t284;
t85 = 0.2e1 * t282;
t321 = t310 * t158;
t142 = t159 * qJD(4);
t320 = t159 * qJD(3) + t142;
t319 = qJD(1) * t192;
t318 = qJD(1) * t212;
t316 = qJD(5) * t210;
t315 = qJD(5) * t213;
t314 = t178 * qJD(5);
t313 = t182 * qJD(4);
t312 = t211 * qJD(3);
t208 = t214 * qJD(3);
t304 = qJD(4) * t351;
t303 = t212 * t349;
t302 = pkin(1) * t318;
t301 = qJD(1) * t350;
t293 = t211 * t318;
t292 = t215 * t312;
t291 = t215 * t208;
t290 = t180 * t316;
t289 = t180 * t315;
t288 = t180 * t319;
t287 = t182 * t319;
t203 = t210 * t315;
t286 = t341 / 0.2e1;
t280 = t325 / 0.2e1;
t279 = qJD(5) * t357;
t278 = qJD(5) * t356;
t277 = t357 * qJD(3);
t276 = t357 * qJD(4);
t275 = t356 * qJD(3);
t274 = t356 * qJD(4);
t272 = t311 * t212;
t271 = t311 * t215;
t270 = t311 * t182;
t268 = t310 * t213;
t267 = t180 * t302;
t266 = t182 * t302;
t265 = t180 * t305;
t195 = t306 / 0.2e1;
t165 = pkin(2) * t280;
t263 = pkin(2) * t274;
t262 = pkin(2) * t277;
t261 = pkin(2) * t275;
t260 = t180 * t284;
t259 = t210 * t279;
t258 = t213 * t279;
t257 = t210 * t275;
t256 = t299 + t192 / 0.2e1;
t255 = t112 / 0.2e1 + t113 / 0.2e1 + t77 / 0.2e1;
t252 = t182 * t273;
t72 = t180 * t270;
t251 = t210 * t268;
t250 = t310 * t328;
t2 = t6 + t362;
t245 = t325 + t327;
t99 = t245 * t355;
t249 = t2 * qJD(1) - t99 * qJD(2);
t100 = t245 * t354;
t217 = -t224 / 0.2e1;
t225 = t165 * t213 + t255;
t216 = t213 * t217 + t225;
t3 = t180 * t195 + t216 + t286;
t248 = t3 * qJD(1) + t100 * qJD(2);
t227 = t356 * t180 / 0.2e1 - t357 * t182 / 0.2e1;
t221 = t211 / 0.2e1 + t227;
t78 = t221 * t355;
t35 = t78 + t83;
t247 = -t35 * qJD(1) - t78 * qJD(2);
t81 = t221 * t354;
t37 = -t81 + t82;
t246 = -t37 * qJD(1) + t81 * qJD(2);
t114 = pkin(2) * t325 + t174;
t219 = t178 * t350;
t64 = t182 * t256 - t219;
t52 = -t174 + t64;
t244 = qJD(1) * t52 - qJD(2) * t114;
t115 = t180 * t351 - t175;
t220 = (-t296 / 0.2e1 + t294 / 0.2e1) * t350;
t65 = t180 * t256 + t220;
t53 = t175 + t65;
t243 = qJD(1) * t53 - qJD(2) * t115;
t240 = (qJD(2) * t180 + qJD(5)) * t351;
t239 = t376 * t354;
t236 = -t65 * qJD(1) + t265;
t235 = -t64 * qJD(1) + t264;
t234 = t182 * (qJD(5) + t273);
t233 = t251 * t375;
t231 = -t277 - t276;
t230 = -t275 - t274;
t7 = t260 + t216;
t228 = t7 * qJD(1) + t213 * t264;
t17 = t213 * t234;
t223 = t376 * t355;
t5 = t210 * t217 + (t281 - t242) * t182;
t79 = t227 * t355 + t193;
t80 = -t227 * t354 + t195;
t66 = t180 * t298 - t334 / 0.2e1 + t220;
t67 = t165 - t333 / 0.2e1 - t219;
t204 = t211 * t208;
t198 = t211 * t303;
t197 = t210 * t263;
t191 = t200 * qJD(3);
t190 = t308 * qJD(5);
t177 = t311 * t214 * t211;
t167 = t182 * t303;
t166 = t180 * t303;
t137 = t213 * t218;
t121 = t310 * t178;
t111 = t116 * qJD(5);
t69 = t363 * t375 - t367;
t68 = -0.2e1 * t182 * t363 + t367;
t61 = t72 - t314;
t60 = -t252 + t314;
t57 = t315 + t59;
t56 = -t316 - t58;
t55 = -t175 + t66;
t54 = t174 + t67;
t49 = -t179 * t203 + t209 * t377;
t48 = t51 * qJD(2);
t47 = t50 * qJD(2);
t44 = t310 * t309;
t41 = t250 - t369;
t40 = -t251 + t369;
t39 = 0.2e1 * t210 * t17;
t38 = t80 + t84;
t36 = t79 + t85;
t34 = -t209 * t252 - t111;
t33 = t125 * qJD(5) - t180 * t233;
t32 = -t233 - t368;
t31 = t250 * t375 + t368;
t28 = t182 * t290 + t310 * t87;
t27 = t182 * t289 - t310 * t86;
t26 = qJD(5) * t120 - t373;
t25 = -qJD(5) * t117 + t374;
t24 = t117 * t310 - t213 * t252;
t23 = -t120 * t310 - t210 * t252;
t22 = -t111 + (t209 * t270 - t251) * t180;
t21 = t182 * t284 + t326 / 0.2e1 - pkin(1) * t329 / 0.2e1 + t237;
t19 = t182 * t283 + t330 / 0.2e1 + t213 * t300 + t238;
t16 = t210 * t234;
t15 = t308 * t128 + (qJD(5) - t273) * t328 * t375;
t10 = -t210 * t366 + t373;
t9 = -t182 * t268 - t374;
t8 = t260 + t137 + t225;
t4 = t286 + t137 + (t327 / 0.2e1 + t280) * t354 + t255;
t1 = t362 + t5;
t30 = [0, 0, 0, 0, -t303, -t215 * t349, t204, t191, 0, 0, 0 (-t212 * t317 - t292) * pkin(1), -pkin(1) * t291 + t198, t377, -t44, 0, 0, 0, t96 * qJD(3) - t192 * t313 + t166, t97 * qJD(3) - qJD(4) * t334 - t167, t49, t33, t28, t27, -t377, t11 * qJD(3) - t13 * qJD(4) + qJD(5) * t43 + t47, t12 * qJD(3) + t14 * qJD(4) + t42 * qJD(5) + t48; 0, 0, 0, 0, -pkin(1) * t272, -pkin(1) * t271, t204, t191, 0, 0, 0 (-t214 * t272 - t292) * pkin(1), t198 + (-t291 + t293) * pkin(1), t377, -t44, 0, 0, 0, t54 * qJD(3) + t67 * qJD(4) + t166 + t267, t55 * qJD(3) + t66 * qJD(4) - t167 - t266, t49, t33, t28, t27, -t377, t4 * qJD(3) + t8 * qJD(4) + t19 * qJD(5) + t347 + t47, t1 * qJD(3) + t5 * qJD(4) + t21 * qJD(5) + t346 + t48; 0, 0, 0, 0, 0, 0, t177, t364, t208, -t312, 0 (-t208 * t212 - t211 * t271) * pkin(1) (t212 * t312 - t214 * t271) * pkin(1), t72, -t372, -t128, t366, 0, qJD(2) * t54 + t320 + t345, qJD(2) * t55 - t321 + t344, t22, t15, t10, t9, t60, t343 + t4 * qJD(2) + (t223 + t62) * qJD(3) + t62 * qJD(4) + t38 * qJD(5), t342 + t1 * qJD(2) + (t239 - t331) * qJD(3) - t331 * qJD(4) + t36 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, -t372, -t128, t366, 0, t67 * qJD(2) - t287 + t320, t66 * qJD(2) - t288 - t321, t22, t15, t10, t9, t60, t8 * qJD(2) + t62 * qJD(3) + t84 * qJD(5) + t142 * t213 - t340, t5 * qJD(2) - qJD(3) * t331 + t85 * qJD(5) - t142 * t210 + t339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t29, t31, t16, t17, t121, t19 * qJD(2) + t38 * qJD(3) + qJD(4) * t84 - qJD(5) * t110 + t348, t21 * qJD(2) + t36 * qJD(3) + qJD(4) * t85 + qJD(5) * t109 + t324; 0, 0, 0, 0, t302, t301, t204, t191, 0, 0, 0, t214 * t302, -pkin(1) * t293, t377, -t44, 0, 0, 0, -t52 * qJD(3) - t64 * qJD(4) - t267, -t53 * qJD(3) - t65 * qJD(4) + t266, t49, t33, t28, t27, -t377, t3 * qJD(3) + t7 * qJD(4) + t18 * qJD(5) - t347, t2 * qJD(3) + t6 * qJD(4) + t20 * qJD(5) - t346; 0, 0, 0, 0, 0, 0, t204, t191, 0, 0, 0, 0, 0, t377, -t44, 0, 0, 0, t114 * qJD(3) + t182 * t304, t115 * qJD(3) + t180 * t304, t49, t33, t28, t27, -t377, t100 * qJD(3) + (t213 * t313 + t290) * t351, -t99 * qJD(3) + (-t210 * t313 + t289) * t351; 0, 0, 0, 0, 0, 0, t177, t364, t208, -t312, 0, 0, 0, t72, -t372, -t128, t366, 0, -t244, -t243, t22, t15, t10, t9, t60, qJD(3) * t223 + t80 * qJD(5) + t248, qJD(3) * t239 + t79 * qJD(5) + t249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, -t372, -t128, t366, 0, t235, t236, t22, t15, t10, t9, t60, t228, -t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t29, t31, t16, t17, t121, t80 * qJD(3) + t210 * t240 + t336, t79 * qJD(3) + t213 * t240 + t332; 0, 0, 0, 0, 0, 0, -t177, -t364, 0, 0, 0, t211 * t301, t214 * t301, -t72, t372, 0, 0, 0, qJD(2) * t52 - t345, qJD(2) * t53 - t344, t34, t39, t26, t25, t61, -t3 * qJD(2) + t37 * qJD(5) - t343, -t2 * qJD(2) + t35 * qJD(5) - t342; 0, 0, 0, 0, 0, 0, -t177, -t364, 0, 0, 0, 0, 0, -t72, t372, 0, 0, 0, t244, t243, t34, t39, t26, t25, t61, -qJD(5) * t81 - t248, qJD(5) * t78 - t249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263, -pkin(2) * t276, t203, -t190, 0, 0, 0 (-t213 * t274 - t259) * pkin(2), -pkin(2) * t258 + t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t230 * pkin(2), t231 * pkin(2), t203, -t190, 0, 0, 0 (t213 * t230 - t259) * pkin(2), t197 + (t257 - t258) * pkin(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, t69, t57, t56, -t365 (t210 * t231 - t213 * t278) * pkin(2) - t246 (t210 * t278 + t213 * t231) * pkin(2) - t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t72, t372, 0, 0, 0, t64 * qJD(2) + t287, t65 * qJD(2) + t288, t34, t39, t26, t25, t61, -t7 * qJD(2) - qJD(5) * t82 + t340, -t6 * qJD(2) - qJD(5) * t83 - t339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t72, t372, 0, 0, 0, -t235, -t236, t34, t39, t26, t25, t61, -t228, t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, t262, t203, -t190, 0, 0, 0, t213 * t261, -pkin(2) * t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, -t190, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, t69, t57, t56, -t365, -t323, -t322; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, t32, t23, t24, t121, -t18 * qJD(2) - t37 * qJD(3) + qJD(4) * t82 - t348, -t20 * qJD(2) - t35 * qJD(3) + qJD(4) * t83 - t324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, t32, t23, t24, t121, t81 * qJD(3) - t210 * t265 - t336, -t78 * qJD(3) - t213 * t265 - t332; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, t68, -t59, t58, t365, t210 * t262 + t246, t213 * t262 + t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, t68, -t59, t58, t365, t323, t322; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t30;
