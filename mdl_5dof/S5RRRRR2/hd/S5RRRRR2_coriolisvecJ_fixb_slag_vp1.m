% Calculate vector of centrifugal and Coriolis load on the joints for
% S5RRRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [2x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:54
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5RRRRR2_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(2,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR2_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR2_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [2 1]), ...
  'S5RRRRR2_coriolisvecJ_fixb_slag_vp1: pkin has to be [2x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRR2_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRR2_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRR2_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:52:56
% EndTime: 2019-12-05 18:53:29
% DurationCPUTime: 22.09s
% Computational Cost: add. (35992->867), mult. (31723->1219), div. (0->0), fcn. (29317->10), ass. (0->469)
t420 = qJ(3) + qJ(4);
t413 = cos(t420);
t421 = qJ(1) + qJ(2);
t414 = cos(t421);
t425 = cos(qJ(5));
t643 = t414 * t425;
t412 = sin(t421);
t422 = sin(qJ(5));
t655 = t412 * t422;
t304 = t413 * t655 + t643;
t645 = t414 * t422;
t653 = t412 * t425;
t305 = t413 * t653 - t645;
t411 = sin(t420);
t660 = t411 * t412;
t191 = Icges(6,5) * t305 - Icges(6,6) * t304 + Icges(6,3) * t660;
t292 = Icges(6,4) * t305;
t194 = -Icges(6,2) * t304 + Icges(6,6) * t660 + t292;
t291 = Icges(6,4) * t304;
t198 = -Icges(6,1) * t305 - Icges(6,5) * t660 + t291;
t758 = t194 * t422 + t198 * t425;
t94 = -t191 * t413 - t758 * t411;
t519 = Icges(6,5) * t425 - Icges(6,6) * t422;
t271 = -Icges(6,3) * t413 + t411 * t519;
t685 = Icges(6,4) * t425;
t521 = -Icges(6,2) * t422 + t685;
t275 = -Icges(6,6) * t413 + t411 * t521;
t686 = Icges(6,4) * t422;
t525 = Icges(6,1) * t425 - t686;
t279 = -Icges(6,5) * t413 + t411 * t525;
t123 = t271 * t660 - t275 * t304 + t279 * t305;
t396 = qJD(3) * t412;
t336 = qJD(4) * t412 + t396;
t610 = qJD(5) * t414;
t283 = t411 * t610 + t336;
t418 = qJD(3) + qJD(4);
t337 = t414 * t418;
t612 = qJD(5) * t411;
t284 = -t412 * t612 + t337;
t419 = qJD(1) + qJD(2);
t611 = qJD(5) * t413;
t742 = t419 - t611;
t85 = t191 * t660 - t194 * t304 - t198 * t305;
t306 = -t413 * t645 + t653;
t307 = t413 * t643 + t655;
t659 = t411 * t414;
t193 = Icges(6,5) * t307 + Icges(6,6) * t306 + Icges(6,3) * t659;
t687 = Icges(6,4) * t307;
t196 = Icges(6,2) * t306 + Icges(6,6) * t659 + t687;
t293 = Icges(6,4) * t306;
t199 = Icges(6,1) * t307 + Icges(6,5) * t659 + t293;
t86 = t193 * t660 - t304 * t196 + t305 * t199;
t36 = t123 * t742 + t283 * t86 - t284 * t85;
t124 = t271 * t659 + t275 * t306 + t279 * t307;
t87 = t191 * t659 + t306 * t194 - t198 * t307;
t88 = t193 * t659 + t306 * t196 + t307 * t199;
t37 = t124 * t742 + t283 * t88 - t284 * t87;
t533 = -rSges(6,1) * t305 + rSges(6,2) * t304;
t200 = rSges(6,3) * t660 - t533;
t754 = t200 * t742;
t623 = rSges(5,2) * t660 + t414 * rSges(5,3);
t657 = t412 * t413;
t266 = rSges(5,1) * t657 - t623;
t254 = t419 * t266;
t344 = rSges(5,1) * t411 + rSges(5,2) * t413;
t753 = -t337 * t344 - t254;
t403 = Icges(5,4) * t413;
t342 = Icges(5,1) * t411 + t403;
t522 = -Icges(5,2) * t411 + t403;
t752 = t342 + t522;
t751 = t412 ^ 2 + t414 ^ 2;
t646 = t414 * t419;
t600 = t411 * t646;
t650 = t413 * t418;
t481 = t412 * t650 + t600;
t424 = sin(qJ(1));
t701 = pkin(1) * qJD(1);
t603 = t424 * t701;
t345 = rSges(3,1) * t412 + rSges(3,2) * t414;
t664 = t345 * t419;
t289 = -t603 - t664;
t616 = qJD(3) * t419;
t750 = qJD(4) * t419 + t616;
t749 = t36 * t412 + t37 * t414;
t748 = 0.2e1 * qJD(3);
t423 = sin(qJ(3));
t615 = qJD(3) * t423;
t587 = t414 * t615;
t426 = cos(qJ(3));
t652 = t412 * t426;
t479 = -t419 * t652 - t587;
t472 = t479 * pkin(2);
t448 = t472 - t603;
t532 = rSges(6,1) * t425 - rSges(6,2) * t422;
t285 = -rSges(6,3) * t413 + t411 * t532;
t670 = t284 * t285;
t441 = t448 - t670;
t119 = t441 - t754;
t202 = t307 * rSges(6,1) + t306 * rSges(6,2) + rSges(6,3) * t659;
t588 = t412 * t615;
t366 = pkin(2) * t588;
t642 = t414 * t426;
t393 = pkin(2) * t642;
t503 = -t393 * t419 + t366;
t470 = -t202 * t742 + t283 * t285 + t503;
t427 = cos(qJ(1));
t606 = t427 * t701;
t120 = -t470 + t606;
t658 = t411 * t418;
t467 = t422 * t658 + t425 * t742;
t649 = t413 * t419;
t550 = -qJD(5) + t649;
t176 = t412 * t467 - t550 * t645;
t466 = t422 * t742 - t425 * t658;
t177 = t412 * t466 + t550 * t643;
t534 = rSges(6,1) * t177 + rSges(6,2) * t176;
t114 = rSges(6,3) * t481 + t534;
t496 = t532 * t413;
t531 = -rSges(6,1) * t422 - rSges(6,2) * t425;
t212 = t418 * t496 + (rSges(6,3) * t418 + qJD(5) * t531) * t411;
t308 = t750 * t412;
t222 = qJD(5) * t481 + t308;
t428 = qJD(3) ^ 2;
t706 = pkin(2) * t426;
t546 = (-t419 ^ 2 - t428) * t706;
t416 = t427 * pkin(1);
t429 = qJD(1) ^ 2;
t608 = t429 * t416;
t455 = 0.2e1 * t419 * t366 + t414 * t546 - t608;
t586 = t418 * t612;
t51 = -t114 * t742 - t200 * t586 - t212 * t284 + t222 * t285 + t455;
t564 = t120 * t419 + t51;
t703 = rSges(6,3) * t411;
t747 = (-rSges(6,3) * t119 * t650 + t564 * (-t703 - t706)) * t412;
t607 = rSges(5,1) * t658;
t592 = -t481 * rSges(5,2) - t412 * t607;
t651 = t413 * t414;
t622 = rSges(5,1) * t651 + t412 * rSges(5,3);
t169 = t419 * t622 + t592;
t704 = rSges(5,2) * t411;
t705 = rSges(5,1) * t413;
t346 = -t704 + t705;
t313 = t346 * t418;
t100 = -t169 * t419 + t308 * t344 - t313 * t337 + t455;
t541 = -t366 + t606;
t267 = -rSges(5,2) * t659 + t622;
t733 = -t336 * t344 + t419 * (t267 + t393);
t143 = t541 + t733;
t746 = t143 * t419 + t100;
t614 = qJD(3) * t426;
t602 = rSges(4,2) * t614;
t641 = t419 * t423;
t213 = rSges(4,2) * t412 * t641 + rSges(4,1) * t479 + rSges(4,3) * t646 - t414 * t602;
t654 = t412 * t423;
t286 = rSges(4,1) * t652 - rSges(4,2) * t654 - t414 * rSges(4,3);
t265 = t419 * t286;
t744 = t213 + t265;
t502 = rSges(4,1) * t642 + t412 * rSges(4,3);
t415 = Icges(4,4) * t426;
t523 = -Icges(4,2) * t423 + t415;
t377 = Icges(4,1) * t423 + t415;
t142 = t448 + t753;
t548 = pkin(2) * t587;
t174 = t414 * t467 + t550 * t655;
t175 = t414 * t466 - t550 * t653;
t597 = t413 * t337;
t593 = t175 * rSges(6,1) + t174 * rSges(6,2) + rSges(6,3) * t597;
t741 = -t548 + t593 + t754;
t382 = rSges(4,1) * t423 + rSges(4,2) * t426;
t617 = qJD(3) * t414;
t589 = t382 * t617;
t216 = -t589 - t603 - t265;
t242 = t412 * t285;
t243 = t414 * t285;
t287 = t496 + t703;
t584 = t413 * t610;
t585 = t412 * t611;
t604 = pkin(2) * t614;
t621 = t751 * t604;
t98 = t200 * t283 + t202 * t284 + t621;
t739 = -t119 * (-t200 * t612 + t242 * t742 - t284 * t287 + t285 * t585) - t120 * (t202 * t612 - t243 * t742 - t283 * t287 - t285 * t584) - t98 * (t200 * t584 - t202 * t585 - t283 * t242 - t243 * t284);
t131 = t266 * t336 + t267 * t337 + t621;
t302 = t344 * t412;
t303 = t344 * t414;
t738 = -t142 * (t302 * t419 - t337 * t346) - t131 * (-t336 * t302 - t303 * t337) - t143 * (-t419 * t303 - t336 * t346);
t688 = Icges(5,4) * t411;
t343 = Icges(5,1) * t413 - t688;
t493 = t343 * t414;
t264 = Icges(5,5) * t412 + t493;
t339 = Icges(5,5) * t413 - Icges(5,6) * t411;
t338 = Icges(5,5) * t411 + Icges(5,6) * t413;
t460 = Icges(5,3) * t419 - t338 * t418;
t656 = t412 * t419;
t490 = t522 * t414;
t262 = Icges(5,6) * t412 + t490;
t673 = t262 * t411;
t737 = -t339 * t656 + t414 * t460 + t419 * (-t264 * t413 + t673);
t487 = t339 * t414;
t261 = Icges(5,4) * t657 - Icges(5,2) * t660 - Icges(5,6) * t414;
t359 = Icges(5,4) * t660;
t263 = Icges(5,1) * t657 - Icges(5,5) * t414 - t359;
t511 = t261 * t411 - t263 * t413;
t736 = t412 * t460 + (t487 + t511) * t419;
t374 = Icges(4,5) * t426 - Icges(4,6) * t423;
t373 = Icges(4,5) * t423 + Icges(4,6) * t426;
t456 = Icges(4,3) * t419 - qJD(3) * t373;
t689 = Icges(4,4) * t423;
t378 = Icges(4,1) * t426 - t689;
t494 = t378 * t414;
t282 = Icges(4,5) * t412 + t494;
t491 = t523 * t414;
t278 = Icges(4,6) * t412 + t491;
t671 = t278 * t423;
t507 = -t282 * t426 + t671;
t735 = -t374 * t656 + t414 * t456 + t419 * t507;
t488 = t374 * t414;
t388 = Icges(4,4) * t654;
t281 = Icges(4,1) * t652 - Icges(4,5) * t414 - t388;
t277 = Icges(4,4) * t652 - Icges(4,2) * t654 - Icges(4,6) * t414;
t672 = t277 * t423;
t508 = -t281 * t426 + t672;
t734 = t412 * t456 + (t488 + t508) * t419;
t340 = Icges(5,2) * t413 + t688;
t506 = t340 * t411 - t342 * t413;
t732 = t339 * t418 + t419 * t506;
t375 = Icges(4,2) * t426 + t689;
t505 = t375 * t423 - t377 * t426;
t731 = t374 * qJD(3) + t419 * t505;
t273 = Icges(4,5) * t652 - Icges(4,6) * t654 - Icges(4,3) * t414;
t136 = -t414 * t273 - t412 * t508;
t596 = t414 * t641;
t214 = -rSges(4,1) * t588 - rSges(4,2) * t596 - t412 * t602 + t419 * t502;
t627 = -Icges(4,2) * t652 + t281 - t388;
t630 = t377 * t412 + t277;
t730 = -t423 * t627 - t426 * t630;
t486 = t519 * t413;
t509 = -t275 * t422 + t279 * t425;
t514 = -t196 * t422 + t199 * t425;
t729 = t283 * (-t271 * t414 - t514) - t284 * (-t271 * t412 + t758) + t742 * (Icges(6,3) * t411 + t486 - t509);
t520 = -Icges(6,2) * t425 - t686;
t728 = t283 * (-Icges(6,2) * t307 + t199 + t293) - t284 * (-Icges(6,2) * t305 - t198 - t291) + t742 * (t520 * t411 + t279);
t727 = t336 * (-t340 * t414 + t264) - t337 * (-Icges(5,2) * t657 + t263 - t359) + t419 * t752;
t726 = t222 / 0.2e1;
t309 = t750 * t414;
t601 = t411 * t656;
t480 = t597 - t601;
t223 = qJD(5) * t480 + t309;
t725 = t223 / 0.2e1;
t724 = -t283 / 0.2e1;
t723 = t283 / 0.2e1;
t722 = -t284 / 0.2e1;
t721 = t284 / 0.2e1;
t720 = t308 / 0.2e1;
t719 = t309 / 0.2e1;
t718 = -t336 / 0.2e1;
t717 = t336 / 0.2e1;
t716 = -t337 / 0.2e1;
t715 = t337 / 0.2e1;
t714 = -t742 / 0.2e1;
t713 = t742 / 0.2e1;
t712 = t412 / 0.2e1;
t711 = -t414 / 0.2e1;
t710 = -t419 / 0.2e1;
t709 = t419 / 0.2e1;
t708 = pkin(1) * t424;
t707 = pkin(2) * t423;
t108 = Icges(6,5) * t177 + Icges(6,6) * t176 + Icges(6,3) * t481;
t110 = Icges(6,4) * t177 + Icges(6,2) * t176 + Icges(6,6) * t481;
t112 = Icges(6,1) * t177 + Icges(6,4) * t176 + Icges(6,5) * t481;
t24 = (-t418 * t758 - t108) * t413 + (-t110 * t422 + t112 * t425 + t191 * t418 + (-t194 * t425 + t198 * t422) * qJD(5)) * t411;
t700 = t24 * t284;
t107 = Icges(6,5) * t175 + Icges(6,6) * t174 + Icges(6,3) * t480;
t109 = Icges(6,4) * t175 + Icges(6,2) * t174 + Icges(6,6) * t480;
t111 = Icges(6,1) * t175 + Icges(6,4) * t174 + Icges(6,5) * t480;
t25 = (t418 * t514 - t107) * t413 + (-t109 * t422 + t111 * t425 + t193 * t418 + (-t196 * t425 - t199 * t422) * qJD(5)) * t411;
t699 = t25 * t283;
t694 = t94 * t222;
t95 = -t193 * t413 + t411 * t514;
t693 = t95 * t223;
t135 = -t271 * t413 + t411 * t509;
t518 = -Icges(6,5) * t422 - Icges(6,6) * t425;
t203 = t418 * t486 + (Icges(6,3) * t418 + qJD(5) * t518) * t411;
t489 = t521 * t413;
t206 = t418 * t489 + (Icges(6,6) * t418 + qJD(5) * t520) * t411;
t492 = t525 * t413;
t524 = -Icges(6,1) * t422 - t685;
t209 = t418 * t492 + (Icges(6,5) * t418 + qJD(5) * t524) * t411;
t58 = (t418 * t509 - t203) * t413 + (-t206 * t422 + t209 * t425 + t271 * t418 + (-t275 * t425 - t279 * t422) * qJD(5)) * t411;
t692 = t135 * t586 + t58 * t742;
t677 = t142 * t419;
t666 = t338 * t414;
t178 = -t412 * t506 - t666;
t675 = t178 * t419;
t662 = t373 * t414;
t218 = -t412 * t505 - t662;
t674 = t218 * t419;
t644 = t414 * t423;
t288 = -rSges(4,2) * t644 + t502;
t669 = t288 * t419;
t667 = t338 * t412;
t665 = t340 * t418;
t663 = t373 * t412;
t661 = t374 * t419;
t259 = Icges(5,5) * t657 - Icges(5,6) * t660 - Icges(5,3) * t414;
t648 = t414 * t259;
t640 = t412 * t200 + t414 * t202;
t637 = -t412 * t259 - t263 * t651;
t260 = Icges(5,3) * t412 + t487;
t636 = t412 * t260 + t264 * t651;
t635 = t412 * t266 + t414 * t267;
t634 = -t412 * t273 - t281 * t642;
t274 = Icges(4,3) * t412 + t488;
t633 = t412 * t274 + t282 * t642;
t629 = -t377 * t414 - t278;
t626 = -t375 * t414 + t282;
t625 = rSges(5,2) * t601 + rSges(5,3) * t646;
t620 = -t375 + t378;
t619 = t377 + t523;
t618 = t751 * t706;
t609 = t429 * t708;
t605 = pkin(2) * t615;
t113 = -rSges(6,3) * t601 + t593;
t595 = t414 * t113 + t412 * t114 + t200 * t646;
t168 = -rSges(5,2) * t597 + (-t337 * t411 - t412 * t649) * rSges(5,1) + t625;
t594 = t412 * t169 + (t168 + t254) * t414;
t590 = t393 + t622;
t583 = t658 / 0.2e1;
t582 = t656 / 0.2e1;
t580 = t646 / 0.2e1;
t579 = -t396 / 0.2e1;
t576 = t617 / 0.2e1;
t573 = -t285 - t707;
t572 = -t344 - t707;
t17 = t108 * t659 + t110 * t306 + t112 * t307 + t174 * t194 - t175 * t198 + t191 * t480;
t571 = t419 * t88 - t17;
t18 = t107 * t659 + t109 * t306 + t111 * t307 + t174 * t196 + t175 * t199 + t193 * t480;
t570 = t419 * t87 + t18;
t19 = t108 * t660 - t110 * t304 + t112 * t305 + t176 * t194 - t177 * t198 + t191 * t481;
t569 = t419 * t86 - t19;
t20 = t107 * t660 - t109 * t304 + t111 * t305 + t176 * t196 + t177 * t199 + t193 * t481;
t568 = t419 * t85 + t20;
t567 = t419 * t95 - t24;
t566 = t419 * t94 + t25;
t347 = t414 * rSges(3,1) - rSges(3,2) * t412;
t454 = t412 * t546 - 0.2e1 * t419 * t548 - t609;
t50 = t113 * t742 + t202 * t586 - t212 * t283 - t223 * t285 + t454;
t565 = t119 * t419 - t50;
t563 = t423 * t751;
t462 = Icges(5,6) * t419 - t665;
t562 = t264 * t418 + t414 * t462 - t522 * t656;
t561 = t263 * t418 + t412 * t462 + t419 * t490;
t464 = Icges(5,5) * t419 - t342 * t418;
t560 = -t262 * t418 - t343 * t656 + t414 * t464;
t559 = -t261 * t418 + t412 * t464 + t419 * t493;
t239 = t264 * t657;
t558 = t414 * t260 - t239;
t251 = t282 * t652;
t557 = t414 * t274 - t251;
t556 = -t259 + t673;
t554 = -t273 + t671;
t553 = t382 * t396 - t669;
t552 = t752 * t418;
t551 = t343 * t418 - t665;
t547 = t393 + t202;
t543 = qJD(5) * t583;
t315 = rSges(3,1) * t646 - rSges(3,2) * t656;
t540 = -t212 - t604;
t539 = -t313 - t604;
t538 = -t705 - t706;
t535 = rSges(4,1) * t426 - rSges(4,2) * t423;
t530 = t412 * t85 + t414 * t86;
t529 = t412 * t87 + t414 * t88;
t528 = t412 * t94 + t414 * t95;
t517 = -t119 * t414 - t120 * t412;
t516 = -t142 * t414 - t143 * t412;
t513 = t200 * t414 - t202 * t412;
t217 = -t553 + t606;
t512 = -t216 * t414 - t217 * t412;
t155 = t261 * t413 + t263 * t411;
t189 = t277 * t426 + t281 * t423;
t190 = t278 * t426 + t282 * t423;
t504 = t428 * pkin(2) * t563;
t485 = t511 * t412;
t137 = -t278 * t654 - t557;
t484 = (-t136 * t414 + t137 * t412) * qJD(3);
t138 = -t277 * t644 - t634;
t139 = -t278 * t644 + t633;
t483 = (-t138 * t414 + t139 * t412) * qJD(3);
t183 = (t286 * t412 + t288 * t414) * qJD(3);
t477 = -t191 * t284 + t193 * t283 + t271 * t742;
t476 = (-Icges(6,5) * t304 - Icges(6,6) * t305) * t284 - (Icges(6,5) * t306 - Icges(6,6) * t307) * t283 - t518 * t411 * t742;
t475 = t336 * t666 - t337 * t667 - t339 * t419;
t474 = -t423 * t626 + t426 * t629;
t471 = t751 * t605;
t469 = t411 * t476;
t465 = (-t423 * t619 + t426 * t620) * t419;
t458 = Icges(4,5) * t419 - qJD(3) * t377;
t457 = Icges(4,6) * t419 - qJD(3) * t375;
t451 = (Icges(6,1) * t306 - t196 - t687) * t283 - (-Icges(6,1) * t304 - t194 - t292) * t284 + (t524 * t411 - t275) * t742;
t449 = (-t342 * t414 - t262) * t336 - (-t342 * t412 - t261) * t337 + (-t340 + t343) * t419;
t445 = t259 * t419 - t411 * t561 + t413 * t559;
t444 = t260 * t419 - t411 * t562 + t413 * t560;
t443 = t338 * t419 - t411 * t552 + t413 * t551;
t442 = -rSges(6,3) * t600 + t503 - t534;
t207 = t414 * t457 - t523 * t656;
t210 = -t378 * t656 + t414 * t458;
t439 = -qJD(3) * t190 - t207 * t423 + t210 * t426 + t274 * t419;
t208 = t412 * t457 + t419 * t491;
t211 = t412 * t458 + t419 * t494;
t438 = -qJD(3) * t189 - t208 * t423 + t211 * t426 + t273 * t419;
t349 = t523 * qJD(3);
t350 = t378 * qJD(3);
t437 = -t349 * t423 + t350 * t426 + t373 * t419 + (-t375 * t426 - t377 * t423) * qJD(3);
t126 = -t485 - t648;
t127 = -t262 * t660 - t558;
t128 = -t261 * t659 - t637;
t129 = -t262 * t659 + t636;
t156 = t262 * t413 + t264 * t411;
t235 = t275 * t412;
t236 = t275 * t414;
t237 = t279 * t412;
t238 = t279 * t414;
t276 = Icges(6,6) * t411 + t489;
t280 = Icges(6,5) * t411 + t492;
t48 = t174 * t275 + t175 * t279 + t203 * t659 + t206 * t306 + t209 * t307 + t271 * t480;
t3 = t124 * t586 - t17 * t284 + t18 * t283 + t222 * t87 + t223 * t88 + t48 * t742;
t49 = t176 * t275 + t177 * t279 + t203 * t660 - t206 * t304 + t209 * t305 + t271 * t481;
t4 = t123 * t586 - t19 * t284 + t20 * t283 + t222 * t85 + t223 * t86 + t49 * t742;
t41 = t135 * t742 + t283 * t95 - t284 * t94;
t432 = -t411 * t727 + t449 * t413;
t433 = t729 * t411;
t52 = t412 * t736 + t445 * t414;
t53 = t412 * t737 + t444 * t414;
t54 = t445 * t412 - t414 * t736;
t55 = t444 * t412 - t414 * t737;
t70 = -t126 * t337 + t127 * t336 + t675;
t179 = -t414 * t506 + t667;
t154 = t179 * t419;
t71 = -t128 * t337 + t129 * t336 + t154;
t89 = t411 * t559 + t413 * t561;
t90 = t411 * t560 + t413 * t562;
t91 = t412 * t732 + t443 * t414;
t92 = t443 * t412 - t414 * t732;
t434 = (((t236 * t422 - t238 * t425 + t193) * t283 - (t235 * t422 - t237 * t425 + t191) * t284 + (-t276 * t422 + t280 * t425 + t271) * t742 + t135 * qJD(5)) * t411 + (qJD(5) * t528 - t729) * t413) * t714 - t41 * t612 / 0.2e1 + (-t126 * t414 + t127 * t412) * t720 + ((t236 * t304 - t238 * t305) * t283 - (t235 * t304 - t237 * t305) * t284 + (-t276 * t304 + t280 * t305) * t742 + (t123 * t411 + t651 * t86) * qJD(5) + ((qJD(5) * t85 + t477) * t413 + t433) * t412) * t721 + (t412 * t568 + t414 * t569) * t722 + (t412 * t570 + t414 * t571) * t723 + ((-t236 * t306 - t238 * t307) * t283 - (-t235 * t306 - t237 * t307) * t284 + (t276 * t306 + t280 * t307) * t742 + (t124 * t411 + t657 * t87) * qJD(5) + ((qJD(5) * t88 + t477) * t413 + t433) * t414) * t724 + (t412 * t88 - t414 * t87) * t725 + (t412 * t86 - t414 * t85) * t726 + (t412 * t566 + t414 * t567) * t713 + (t412 * t432 + t414 * t475) * t715 + ((t127 * t419 - t54) * t414 + (t126 * t419 + t55) * t412) * t716 + ((t129 * t419 - t52) * t414 + (t128 * t419 + t53) * t412) * t717 + (-t412 * t475 + t414 * t432) * t718 + (-t128 * t414 + t129 * t412) * t719 + ((t156 * t419 - t89) * t414 + (t155 * t419 + t90) * t412) * t709 + (t449 * t411 + t413 * t727) * t710 + (t412 * t95 - t414 * t94) * t543 + (t128 * t308 + t129 * t309 + t336 * t53 - t337 * t52 + t419 * t91 + t3) * t712 + (t126 * t308 + t127 * t309 + t336 * t55 - t337 * t54 + t419 * t92 + t4) * t711 + (t70 + t36) * t582 + (t71 + t37) * t580 - t749 * t611 / 0.2e1;
t103 = -qJD(3) * t508 + t208 * t426 + t211 * t423;
t104 = -qJD(3) * t507 + t207 * t426 + t210 * t423;
t117 = t412 * t731 + t437 * t414;
t118 = t437 * t412 - t414 * t731;
t219 = -t414 * t505 + t663;
t215 = t219 * t419;
t75 = t484 + t674;
t76 = t215 + t483;
t431 = -(t103 + t118 + t76) * t617 / 0.2e1 + (t104 + t117) * t396 / 0.2e1 + t692 + t693 / 0.2e1 + t48 * t723 + t124 * t725 + t123 * t726 + (-qJD(3) * t505 + t349 * t426 + t350 * t423 + t411 * t551 + t413 * t552) * t419 + (t154 + (t127 + (t261 * t414 + t262 * t412) * t411 + t558 + t637) * t337 + (-t263 * t657 + t648 + t126 + (t261 * t412 - t262 * t414) * t411 + t636) * t336) * t715 + (t179 + t156) * t719 + (t215 + ((t137 - t251 + (t274 + t672) * t414 + t634) * t414 + t633 * t412) * qJD(3)) * t576 + (t70 - t675 + (t129 - t485 - t636) * t337 + (t556 * t412 + t128 - t239) * t336 + ((t260 + t511) * t336 + t556 * t337) * t414) * t718 + (t178 + t155) * t720 + (t90 + t91) * t717 + t37 * t721 + t699 / 0.2e1 - t700 / 0.2e1 + (t89 + t92 + t71) * t716 + (t49 + t37) * t722 + (-t674 + ((t414 * t554 + t139 - t633) * t414 + (t412 * t554 + t138 + t557) * t412) * qJD(3) + t75) * t579 + t694 / 0.2e1 + ((t190 + t219) * t414 + (t189 + t218) * t412) * t616 / 0.2e1;
t99 = t168 * t419 - t309 * t344 - t313 * t336 + t454;
t430 = (t100 * t538 + (-t142 * rSges(5,3) + t143 * t538) * t419) * t412 + (-t99 * t704 + t143 * (-rSges(5,2) * t650 - t605 - t607) + t538 * t677) * t414;
t353 = t535 * qJD(3);
t327 = t382 * t414;
t326 = t382 * t412;
t325 = t531 * t411;
t290 = t347 * t419 + t606;
t256 = -t315 * t419 - t608;
t255 = -t419 * t664 - t609;
t232 = rSges(6,1) * t306 - rSges(6,2) * t307;
t231 = -rSges(6,1) * t304 - rSges(6,2) * t305;
t133 = -t608 - t214 * t419 + (-t353 * t414 + t382 * t656) * qJD(3);
t132 = -t609 + t213 * t419 + (-t353 * t412 - t382 * t646) * qJD(3);
t72 = t168 * t337 + t169 * t336 + t266 * t309 - t267 * t308 - t504;
t38 = t113 * t284 + t114 * t283 + t200 * t223 - t202 * t222 - t504;
t1 = [m(3) * (t256 * (-t345 - t708) + t255 * (t347 + t416) + (-t315 - t606 + t290) * t289) + t431 + (t51 * (t533 - t708) + t119 * (t442 - t606) + t50 * (t416 + t547) + (-t603 + t119 - t441 + t741) * t120 + t747) * m(6) + m(5) * (t100 * (t623 - t708) + t142 * (-t541 - t592) + t99 * (t416 + t590) + t143 * (-t603 + t625) + t430) + (t133 * (-t286 - t708) + t216 * (-t214 - t606) + t132 * (t288 + t416) + t217 * (t213 - t603)) * m(4); t431 + (t50 * t547 + t51 * t533 + (-t472 + t670 + t741) * t120 + (t442 - t470) * t119 + t747) * m(6) + (t100 * t623 + t99 * t590 + t430 + (-t472 + t625 - t753) * t143 + (-t592 + t733) * t142) * m(5) + (t132 * t288 - t133 * t286 + (t589 + t744) * t217 + (-t214 - t553) * t216) * m(4) + (-(-t289 * t347 - t290 * t345) * t419 + t255 * t347 - t256 * t345 - t289 * t315 - t290 * t664) * m(3); ((t190 * t419 - t103) * t414 + (t189 * t419 + t104) * t412) * t709 + t434 + ((t423 * t620 + t426 * t619) * t419 + ((t412 * t626 - t414 * t627) * t426 + (t412 * t629 + t414 * t630) * t423) * qJD(3)) * t710 + ((-t396 * t662 + t661) * t412 + (t465 + (-t730 * t414 + (t663 + t474) * t412) * qJD(3)) * t414) * t579 + ((-t617 * t663 - t661) * t414 + (t465 + (t474 * t412 + (t662 - t730) * t414) * qJD(3)) * t412) * t576 + (t117 * t419 + ((t139 * t419 - t412 * t734 - t438 * t414) * t414 + (t138 * t419 + t412 * t735 + t439 * t414) * t412) * t748) * t712 + (t118 * t419 + ((t137 * t419 - t438 * t412 + t414 * t734) * t414 + (t136 * t419 + t439 * t412 - t414 * t735) * t412) * t748) * t711 + (t484 + t75) * t582 + (t483 + t76) * t580 + (-(-t120 * t596 + (t426 * t517 - t563 * t98) * qJD(3)) * pkin(2) + t38 * (t618 + t640) + t98 * (-t471 + t595) + (t50 * t573 + t120 * t540 + (t119 * t285 - t202 * t98) * t419) * t412 + (t119 * t540 + t564 * t573) * t414 + t739) * m(6) + (-(-t143 * t596 + (-t131 * t563 + t426 * t516) * qJD(3)) * pkin(2) + t72 * (t618 + t635) + t131 * (-t471 + t594) + (t99 * t572 + t143 * t539 + (-t131 * t267 + t142 * t344) * t419) * t412 + (t142 * t539 + t572 * t746) * t414 + t738) * m(5) + (-(t216 * t326 - t217 * t327) * t419 - (t183 * (-t326 * t412 - t327 * t414) + t512 * t535) * qJD(3) + 0.2e1 * t183 * (t744 * t414 + (t214 - t669) * t412) + t512 * t353 + ((-t217 * t419 - t133) * t414 + (t216 * t419 - t132) * t412) * t382) * m(4); t434 + (t38 * t640 + t98 * (-t202 * t656 + t595) + t517 * t212 + (t412 * t565 - t414 * t564) * t285 + t739) * m(6) + (t72 * t635 + t131 * (-t267 * t656 + t594) + t516 * t313 + (-t746 * t414 + (-t99 + t677) * t412) * t344 + t738) * m(5); -t37 * t601 / 0.2e1 + t3 * t659 / 0.2e1 + (-t124 * t413 + t411 * t529) * t725 + ((t418 * t529 - t48) * t413 + (t124 * t418 - t412 * t571 + t414 * t570) * t411) * t723 + t411 * t36 * t580 + t4 * t660 / 0.2e1 + (-t123 * t413 + t411 * t530) * t726 + ((t418 * t530 - t49) * t413 + (t123 * t418 - t412 * t569 + t414 * t568) * t411) * t722 + t41 * t583 - t413 * (t692 + t693 + t694 + t699 - t700) / 0.2e1 + (-t135 * t413 + t411 * t528) * t543 + ((t418 * t528 - t58) * t413 + (t135 * t418 - t412 * t567 + t414 * t566) * t411) * t713 + (t306 * t728 + t451 * t307 - t414 * t469) * t724 + (-t304 * t728 + t305 * t451 - t412 * t469) * t721 + (t476 * t413 + (-t422 * t728 + t425 * t451) * t411) * t714 + t749 * t650 / 0.2e1 + ((-t120 * t113 + t119 * t114 + t51 * t200 - t50 * t202 + (t98 * t513 + (t119 * t412 - t120 * t414) * t285) * t418) * t413 + (t119 * (-t200 * t418 + t212 * t412) + t120 * (t202 * t418 - t212 * t414) + t38 * t513 + t98 * (-t113 * t412 + t114 * t414 - t200 * t656 - t202 * t646) + (t412 * t564 + t414 * t565) * t285) * t411 - t119 * (-t231 * t742 - t284 * t325) - t120 * (t232 * t742 - t283 * t325) - t98 * (t231 * t283 + t232 * t284)) * m(6);];
tauc = t1(:);
