% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:55
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPRP6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRP6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRP6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RPPRP6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:55:21
% EndTime: 2019-12-31 17:55:23
% DurationCPUTime: 1.06s
% Computational Cost: add. (1356->102), mult. (2303->101), div. (0->0), fcn. (2542->4), ass. (0->75)
t126 = sin(qJ(4));
t127 = cos(qJ(4));
t88 = sin(pkin(7));
t89 = cos(pkin(7));
t74 = -t126 * t88 + t127 * t89;
t129 = t74 ^ 2;
t72 = t126 * t89 + t127 * t88;
t68 = t72 ^ 2;
t37 = t68 - t129;
t139 = t37 * qJD(1);
t138 = t37 * qJD(4);
t125 = -pkin(1) - qJ(3);
t96 = -pkin(6) + t125;
t76 = t96 * t88;
t92 = t96 * t89;
t41 = t126 * t76 - t127 * t92;
t42 = t126 * t92 + t127 * t76;
t90 = t41 * t74 - t42 * t72;
t131 = t90 * qJD(1);
t91 = -t68 / 0.2e1 - t129 / 0.2e1;
t25 = 0.1e1 / 0.2e1 + t91;
t137 = t25 * qJD(2) + t131;
t26 = -0.1e1 / 0.2e1 + t91;
t136 = -t26 * qJD(2) - t131;
t132 = t68 + t129;
t135 = t132 * qJD(1);
t134 = t132 * qJD(3);
t93 = -t72 * pkin(4) + t74 * qJ(5);
t133 = qJD(4) * t93 + t72 * qJD(5);
t84 = t88 ^ 2;
t85 = t89 ^ 2;
t79 = t84 + t85;
t130 = t90 * qJD(3);
t80 = pkin(3) * t88 + qJ(2);
t38 = t80 - t93;
t43 = pkin(4) * t74 + qJ(5) * t72;
t1 = t38 * t43;
t124 = t1 * qJD(1);
t123 = qJD(2) * t74;
t15 = t38 * t74 + t43 * t72;
t122 = t15 * qJD(1);
t16 = t38 * t72 - t43 * t74;
t121 = t16 * qJD(1);
t118 = t26 * qJD(1);
t117 = t43 * qJD(1);
t114 = t38 * qJD(1);
t113 = t41 * qJD(4);
t39 = t42 * qJD(4);
t110 = t129 * qJD(1);
t71 = t79 * t125;
t109 = t71 * qJD(1);
t108 = t72 * qJD(1);
t107 = t72 * qJD(4);
t105 = t74 * qJD(1);
t104 = t74 * qJD(4);
t103 = t74 * qJD(5);
t94 = -t84 / 0.2e1 - t85 / 0.2e1;
t78 = -0.1e1 / 0.2e1 + t94;
t102 = t78 * qJD(1);
t101 = t79 * qJD(1);
t100 = t80 * qJD(1);
t99 = t88 * qJD(1);
t98 = t89 * qJD(1);
t97 = qJD(4) * qJ(5);
t53 = t72 * t105;
t52 = t72 * t104;
t95 = t74 * t100;
t87 = qJ(2) * qJD(2);
t86 = qJD(1) * qJ(2);
t77 = 0.1e1 / 0.2e1 + t94;
t65 = qJD(2) * t72;
t63 = t74 * qJD(3);
t21 = t26 * qJD(3);
t19 = t25 * qJD(3);
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t87, 0, 0, 0, 0, 0, 0, qJD(2) * t88, qJD(2) * t89, t79 * qJD(3), -qJD(3) * t71 + t87, -t52, t138, 0, t52, 0, 0, t104 * t80 + t65, -t107 * t80 + t123, t134, qJD(2) * t80 + t130, -t52, 0, -t138, 0, 0, t52, qJD(4) * t15 - t103 * t72 + t65, t134, qJD(4) * t16 + qJD(5) * t129 - t123, t130 + t1 * qJD(4) + (qJD(2) - t103) * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t86, 0, 0, 0, 0, 0, 0, t99, t98, 0, qJD(3) * t77 + t86, 0, 0, 0, 0, 0, 0, t108, t105, 0, t19 + t100, 0, 0, 0, 0, 0, 0, t108, 0, -t105, t19 + t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t101, qJD(2) * t77 - t109, 0, 0, 0, 0, 0, 0, 0, 0, t135, t137, 0, 0, 0, 0, 0, 0, 0, t135, 0, t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, t139, -t107, t53, -t104, 0, -t39 + t95, -t100 * t72 + t113, 0, 0, -t53, -t107, -t139, 0, t104, t53, -t39 + t122, -t133, -t113 + t121, t124 + (-pkin(4) * t42 - qJ(5) * t41) * qJD(4) + t42 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, -t107, t110, -t105 * t38 + t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t86, 0, 0, 0, 0, 0, 0, -t99, -t98, 0, qJD(3) * t78 - t86, 0, 0, 0, 0, 0, 0, -t108, -t105, 0, t21 - t100, 0, 0, 0, 0, 0, 0, -t108, 0, t105, t21 - t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107, -t104, 0, 0, 0, 0, 0, 0, 0, 0, -t107, 0, t104, t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, -qJD(2) * t78 + t109, 0, 0, 0, 0, 0, 0, t104, -t107, -t135, t136, 0, 0, 0, 0, 0, 0, t104, -t135, t107, qJD(4) * t43 - t103 + t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, -t108, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, t108, t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, -t139, 0, -t53, 0, 0, -t63 - t95, (qJD(3) + t100) * t72, 0, 0, t53, 0, t139, 0, 0, -t53, -t63 - t122, 0, -qJD(3) * t72 - t121, -qJD(3) * t43 - t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105, t108, 0, 0, 0, 0, 0, 0, 0, 0, -t105, 0, -t108, -t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0, -t110, (qJD(3) + t114) * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4), -t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t2;
