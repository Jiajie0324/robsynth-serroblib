% Calculate inertial parameters regressor of coriolis matrix for
% S5PPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d3,d4,theta1,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:11
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PPRRP3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PPRRP3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PPRRP3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PPRRP3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:11:22
% EndTime: 2019-12-05 15:11:24
% DurationCPUTime: 0.97s
% Computational Cost: add. (465->97), mult. (1529->130), div. (0->0), fcn. (1434->6), ass. (0->77)
t80 = sin(qJ(4));
t76 = t80 ^ 2;
t82 = cos(qJ(4));
t77 = t82 ^ 2;
t120 = t76 + t77;
t137 = pkin(6) * t120;
t81 = sin(qJ(3));
t83 = cos(qJ(3));
t122 = t81 * t83;
t28 = (-0.1e1 + t120) * t122;
t78 = sin(pkin(8));
t123 = t78 * t83;
t79 = cos(pkin(8));
t48 = t123 * t80 + t79 * t82;
t125 = t48 * t80;
t96 = -t123 * t82 + t79 * t80;
t93 = t96 * t82;
t84 = (t93 / 0.2e1 - t125 / 0.2e1 + t123 / 0.2e1) * t83 + (t77 / 0.2e1 - 0.1e1 / 0.2e1 + t76 / 0.2e1) * t78 * t81 ^ 2;
t130 = -t84 * qJD(1) + t28 * qJD(2);
t124 = t78 * t81;
t129 = -t78 ^ 2 * t122 + (-t93 + t125) * t124;
t136 = t129 * qJD(3);
t135 = -qJD(1) * t129 - qJD(2) * t84;
t132 = t84 * qJD(3);
t106 = t81 * qJD(3);
t97 = t78 * t106;
t21 = qJD(4) * t96 + t80 * t97;
t117 = t82 * qJ(5);
t126 = t80 * pkin(4);
t61 = -t117 + t126;
t128 = t61 / 0.2e1;
t121 = t83 * t137;
t116 = qJD(3) * t80;
t115 = qJD(3) * t82;
t92 = -pkin(4) * t82 - qJ(5) * t80;
t58 = -pkin(3) + t92;
t22 = t58 * t82 + t61 * t80;
t114 = t22 * qJD(3);
t23 = -t58 * t80 + t61 * t82;
t113 = t23 * qJD(3);
t70 = t77 - t76;
t111 = t70 * qJD(3);
t110 = t70 * qJD(4);
t109 = t76 * qJD(3);
t108 = t80 * qJD(4);
t107 = t80 * qJD(5);
t75 = t82 * qJD(4);
t105 = t82 * qJD(5);
t104 = t83 * qJD(3);
t103 = qJD(4) * qJ(5);
t102 = pkin(3) * t116;
t101 = pkin(3) * t115;
t100 = pkin(6) * t108;
t99 = pkin(6) * t75;
t98 = t58 * t116;
t95 = t120 * qJD(3);
t89 = t117 / 0.2e1 - t126 / 0.2e1;
t88 = qJD(4) * t48 + t82 * t97;
t49 = -t104 * t82 + t108 * t81;
t50 = t104 * t80 + t75 * t81;
t87 = t128 + t89;
t19 = t87 * t83;
t3 = t87 * t124;
t86 = t58 * t61 * qJD(3) + t3 * qJD(1) - t19 * qJD(2);
t85 = qJD(4) * t92 + t105;
t72 = t80 * t75;
t71 = t80 * t115;
t53 = t120 * t104;
t52 = -t106 * t82 - t108 * t83;
t51 = t106 * t80 - t75 * t83;
t46 = t95 * t124;
t41 = t49 * t78;
t40 = t50 * t78;
t24 = t28 * qJD(3);
t20 = (-t61 / 0.2e1 + t89) * t83;
t4 = (t128 - t89) * t124;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t136, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t78 * t104, t97, 0, 0, 0, 0, 0, 0, 0, 0, t41, t40, -t46, (-pkin(3) * t83 - t137 * t81) * qJD(3) * t78 + t135, 0, 0, 0, 0, 0, 0, t41, -t46, -t40, t4 * qJD(4) + (t58 * t104 + (-pkin(6) * t95 - t107) * t81) * t78 + t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, t88, 0, 0, 0, 0, 0, 0, 0, 0, t21, 0, -t88, t4 * qJD(3) + (pkin(4) * t96 - t48 * qJ(5)) * qJD(4) - t96 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106, -t104, 0, 0, 0, 0, 0, 0, 0, 0, t52, t51, t53, (-pkin(3) * t81 + t121) * qJD(3) + t130, 0, 0, 0, 0, 0, 0, t52, t53, -t51, (t58 * t81 + t121) * qJD(3) + t20 * qJD(4) + t83 * t107 + t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, t49, 0, 0, 0, 0, 0, 0, 0, 0, -t50, 0, -t49, t20 * qJD(3) + t81 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t3 - t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t19 - t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, t110, 0, -t72, 0, 0, -pkin(3) * t108, -pkin(3) * t75, 0, 0, t72, 0, -t110, 0, 0, -t72, -qJD(4) * t23 + t105 * t80, 0, -qJD(4) * t22 + qJD(5) * t76, (qJD(4) * t61 - t107) * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t111, t75, -t71, -t108, 0, -t99 - t102, t100 - t101, 0, 0, t71, t75, -t111, 0, t108, -t71, -t99 - t113, t85, -t100 - t114, pkin(6) * t85 + t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t75, t109, -t98 + t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t3 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t71, -t111, 0, t71, 0, 0, t102, t101, 0, 0, -t71, 0, t111, 0, 0, t71, t113, 0, t114, -t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t71, 0, -t109, t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4), -t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
