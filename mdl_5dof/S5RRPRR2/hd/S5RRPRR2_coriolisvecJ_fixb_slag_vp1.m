% Calculate vector of centrifugal and Coriolis load on the joints for
% S5RRPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:29
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5RRPRR2_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR2_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR2_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR2_coriolisvecJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRPRR2_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRPRR2_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRPRR2_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:27:04
% EndTime: 2019-12-05 18:28:17
% DurationCPUTime: 47.34s
% Computational Cost: add. (24683->966), mult. (23254->1224), div. (0->0), fcn. (18166->10), ass. (0->547)
t911 = Icges(3,3) + Icges(4,3);
t486 = qJ(2) + pkin(9);
t450 = sin(t486);
t451 = cos(t486);
t490 = sin(qJ(2));
t492 = cos(qJ(2));
t904 = Icges(3,5) * t492 + Icges(4,5) * t451 - Icges(3,6) * t490 - Icges(4,6) * t450;
t493 = cos(qJ(1));
t910 = t911 * t493;
t491 = sin(qJ(1));
t730 = t491 * t492;
t732 = t490 * t491;
t735 = t451 * t491;
t737 = t450 * t491;
t896 = -Icges(3,5) * t730 - Icges(4,5) * t735 + Icges(3,6) * t732 + Icges(4,6) * t737 + t910;
t905 = t911 * t491 + t904 * t493;
t906 = Icges(3,5) * t490 + Icges(4,5) * t450 + Icges(3,6) * t492 + Icges(4,6) * t451;
t780 = Icges(4,6) * t493;
t274 = Icges(4,4) * t735 - Icges(4,2) * t737 - t780;
t781 = Icges(3,6) * t493;
t305 = Icges(3,4) * t730 - Icges(3,2) * t732 - t781;
t909 = t274 * t450 + t305 * t490;
t409 = Icges(4,4) * t737;
t788 = Icges(4,5) * t493;
t276 = Icges(4,1) * t735 - t409 - t788;
t428 = Icges(3,4) * t732;
t789 = Icges(3,5) * t493;
t307 = Icges(3,1) * t730 - t428 - t789;
t890 = -t276 * t451 - t307 * t492 + t909;
t887 = -t890 * t491 + t896 * t493;
t792 = Icges(4,4) * t450;
t361 = Icges(4,1) * t451 - t792;
t277 = Icges(4,5) * t491 + t361 * t493;
t793 = Icges(3,4) * t490;
t401 = Icges(3,1) * t492 - t793;
t308 = Icges(3,5) * t491 + t401 * t493;
t907 = -t277 * t735 - t308 * t730;
t358 = Icges(4,2) * t451 + t792;
t432 = Icges(4,4) * t451;
t360 = Icges(4,1) * t450 + t432;
t398 = Icges(3,2) * t492 + t793;
t471 = Icges(3,4) * t492;
t400 = Icges(3,1) * t490 + t471;
t903 = t358 * t450 - t360 * t451 + t398 * t490 - t400 * t492;
t902 = t905 * t493 + t907;
t729 = t492 * t493;
t734 = t451 * t493;
t845 = -t277 * t734 - t308 * t729 - t905 * t491;
t901 = -t276 * t734 - t307 * t729 + t896 * t491;
t851 = t906 * t493;
t850 = t906 * t491;
t576 = -Icges(4,2) * t450 + t432;
t275 = Icges(4,6) * t491 + t493 * t576;
t577 = -Icges(3,2) * t490 + t471;
t306 = Icges(3,6) * t491 + t493 * t577;
t900 = t275 * t450 + t306 * t490;
t886 = -t275 * t737 - t306 * t732 - t902;
t731 = t490 * t493;
t736 = t450 * t493;
t885 = -t274 * t736 - t305 * t731 - t901;
t884 = -t275 * t736 - t306 * t731 - t845;
t898 = -t903 * t491 - t851;
t897 = -t903 * t493 + t850;
t866 = t274 * t451 + t276 * t450 + t305 * t492 + t307 * t490;
t865 = t275 * t451 + t277 * t450 + t306 * t492 + t308 * t490;
t894 = t906 * qJD(2);
t893 = t277 * t451 + t308 * t492 - t900;
t892 = rSges(3,2) * t490;
t333 = t576 * qJD(2);
t334 = t361 * qJD(2);
t370 = t577 * qJD(2);
t371 = t401 * qJD(2);
t891 = -t333 * t450 + t334 * t451 - t370 * t490 + t371 * t492 + (-t358 * t451 - t360 * t450 - t398 * t492 - t400 * t490) * qJD(2) + t906 * qJD(1);
t889 = t905 * qJD(1);
t888 = t903 * qJD(1) + t904 * qJD(2);
t883 = t897 * qJD(1);
t547 = qJD(2) * t358;
t159 = -t493 * t547 + (-t491 * t576 + t780) * qJD(1);
t549 = qJD(2) * t360;
t161 = -t493 * t549 + (-t361 * t491 + t788) * qJD(1);
t548 = qJD(2) * t398;
t190 = -t493 * t548 + (-t491 * t577 + t781) * qJD(1);
t550 = qJD(2) * t400;
t192 = -t493 * t550 + (-t401 * t491 + t789) * qJD(1);
t882 = -t865 * qJD(2) - t159 * t450 + t161 * t451 - t190 * t490 + t192 * t492 + t889;
t160 = qJD(1) * t275 - t491 * t547;
t162 = qJD(1) * t277 - t491 * t549;
t191 = qJD(1) * t306 - t491 * t548;
t193 = qJD(1) * t308 - t491 * t550;
t881 = t896 * qJD(1) + t866 * qJD(2) + t160 * t450 - t162 * t451 + t191 * t490 - t193 * t492;
t880 = (t884 * t491 - t885 * t493) * qJD(2);
t879 = (t886 * t491 - t887 * t493) * qJD(2);
t878 = t898 * qJD(1);
t877 = t890 * qJD(1) - t894 * t491 + t889;
t876 = -t894 * t493 + (-t491 * t904 - t893 + t910) * qJD(1);
t875 = 0.2e1 * qJD(2);
t874 = t878 + t879;
t873 = t880 + t883;
t872 = t888 * t491 + t891 * t493;
t871 = t891 * t491 - t888 * t493;
t870 = t890 * qJD(2) - t160 * t451 - t162 * t450 - t191 * t492 - t193 * t490;
t869 = t893 * qJD(2) + t159 * t451 + t161 * t450 + t190 * t492 + t192 * t490;
t284 = rSges(4,1) * t735 - rSges(4,2) * t737 - t493 * rSges(4,3);
t474 = t491 * rSges(4,3);
t285 = rSges(4,1) * t734 - rSges(4,2) * t736 + t474;
t566 = t284 * t491 + t285 * t493;
t482 = t493 * pkin(6);
t413 = pkin(1) * t491 - t482;
t489 = -qJ(3) - pkin(6);
t442 = t493 * t489;
t481 = t492 * pkin(2);
t444 = t481 + pkin(1);
t681 = t491 * t444 + t442;
t269 = t413 - t681;
t480 = t491 * pkin(6);
t414 = t493 * pkin(1) + t480;
t416 = t493 * t444;
t598 = -t489 * t491 + t416;
t270 = t598 - t414;
t711 = -t491 * t269 + t493 * t270;
t539 = t566 + t711;
t457 = qJD(2) * t491;
t667 = qJD(2) * t493;
t712 = -t269 * t457 + t270 * t667;
t83 = qJD(2) * t566 + t712;
t868 = qJD(2) * t539 + t83;
t453 = qJ(4) + t486;
t443 = qJ(5) + t453;
t424 = sin(t443);
t425 = cos(t443);
t801 = rSges(6,2) * t425;
t328 = rSges(6,1) * t424 + t801;
t278 = t328 * t491;
t803 = rSges(6,1) * t425;
t329 = -rSges(6,2) * t424 + t803;
t485 = qJD(2) + qJD(4);
t452 = qJD(5) + t485;
t472 = t491 * rSges(6,3);
t136 = -t452 * t278 + (t329 * t493 + t472) * qJD(1);
t238 = t329 * t452;
t662 = qJD(1) * qJD(2);
t440 = t491 * t662;
t660 = qJD(1) * qJD(4);
t367 = t491 * t660 + t440;
t659 = qJD(1) * qJD(5);
t325 = t491 * t659 + t367;
t353 = t452 * t493;
t395 = t485 * t493;
t434 = sin(t453);
t811 = pkin(3) * t450;
t390 = t457 * t811;
t433 = pkin(3) * t451;
t494 = qJD(2) ^ 2;
t554 = (-t481 - t433) * t494;
t812 = pkin(2) * t490;
t419 = t457 * t812;
t661 = qJD(1) * qJD(3);
t682 = qJD(1) * t419 + t493 * t661;
t526 = qJD(1) * t390 + t493 * t554 + t682;
t669 = qJD(1) * t491;
t423 = t489 * t669;
t384 = -t811 - t812;
t362 = t384 * qJD(2);
t484 = -pkin(7) + t489;
t418 = t484 * t669;
t599 = t362 * t491 - t418;
t668 = qJD(1) * t493;
t372 = t433 + t444;
t688 = t372 - t444;
t124 = t668 * t688 + t419 + t423 + t599;
t456 = qJD(3) * t493;
t679 = t419 + t456;
t647 = t423 + t679;
t807 = pkin(1) - t444;
t185 = (-t493 * t807 - t480) * qJD(1) - t647;
t375 = t414 * qJD(1);
t725 = -t185 - t375;
t656 = -t124 + t725;
t435 = cos(t453);
t740 = t435 * t485;
t810 = pkin(4) * t434;
t262 = -t485 * t810 + t362;
t302 = pkin(4) * t435 + t372;
t699 = t302 - t372;
t458 = -pkin(8) + t484;
t733 = t458 * t491;
t91 = t418 + (t262 - t362) * t491 + (t493 * t699 - t733) * qJD(1);
t18 = -t238 * t353 + t325 * t328 + (t367 * t434 - t395 * t740) * pkin(4) + (-t136 - t91 + t656) * qJD(1) + t526;
t394 = qJD(4) * t491 + t457;
t352 = qJD(5) * t491 + t394;
t345 = t493 * t372;
t676 = -t484 + t489;
t202 = t491 * t676 + t345 - t416;
t722 = -t202 - t270;
t289 = t493 * t302;
t677 = -t458 + t484;
t156 = t491 * t677 + t289 - t345;
t743 = t425 * t493;
t745 = t424 * t493;
t241 = rSges(6,1) * t743 - rSges(6,2) * t745 + t472;
t726 = -t156 - t241;
t593 = t722 + t726;
t648 = -t390 - t679;
t57 = -t394 * t810 - t328 * t352 + (t414 - t593) * qJD(1) + t648;
t867 = t493 * (qJD(1) * t57 + t18);
t744 = t425 * t491;
t746 = t424 * t491;
t778 = Icges(6,6) * t493;
t226 = Icges(6,4) * t744 - Icges(6,2) * t746 - t778;
t412 = Icges(6,4) * t425;
t321 = Icges(6,1) * t424 + t412;
t864 = -t321 * t491 - t226;
t574 = -Icges(6,2) * t424 + t412;
t227 = Icges(6,6) * t491 + t493 * t574;
t863 = -t321 * t493 - t227;
t790 = Icges(6,4) * t424;
t322 = Icges(6,1) * t425 - t790;
t229 = Icges(6,5) * t491 + t322 * t493;
t319 = Icges(6,2) * t425 + t790;
t862 = -t319 * t493 + t229;
t739 = t435 * t491;
t742 = t434 * t491;
t779 = Icges(5,6) * t493;
t251 = Icges(5,4) * t739 - Icges(5,2) * t742 - t779;
t421 = Icges(5,4) * t435;
t340 = Icges(5,1) * t434 + t421;
t861 = -t340 * t491 - t251;
t575 = -Icges(5,2) * t434 + t421;
t252 = Icges(5,6) * t491 + t493 * t575;
t860 = -t340 * t493 - t252;
t791 = Icges(5,4) * t434;
t341 = Icges(5,1) * t435 - t791;
t254 = Icges(5,5) * t491 + t341 * t493;
t338 = Icges(5,2) * t435 + t791;
t859 = -t338 * t493 + t254;
t858 = t321 + t574;
t646 = t434 * t669;
t381 = pkin(4) * t646;
t749 = t395 * t435;
t857 = pkin(4) * t749 + t328 * t669 + t381;
t856 = t340 + t575;
t531 = t305 * t493 - t306 * t491;
t532 = t274 * t493 - t275 * t491;
t829 = t491 * (-t358 * t493 + t277) - t493 * (-Icges(4,2) * t735 + t276 - t409);
t830 = t491 * (-t398 * t493 + t308) - t493 * (-Icges(3,2) * t730 + t307 - t428);
t855 = -t450 * t829 + t532 * t451 - t490 * t830 + t531 * t492;
t683 = t400 + t577;
t684 = -t398 + t401;
t690 = t360 + t576;
t691 = -t358 + t361;
t854 = (-t450 * t690 + t451 * t691 - t490 * t683 + t492 * t684) * qJD(1);
t853 = t904 * qJD(1);
t645 = t450 * t669;
t852 = pkin(3) * t645;
t382 = rSges(6,2) * t746;
t689 = rSges(6,3) * t668 + qJD(1) * t382;
t135 = -t353 * t801 + (-t353 * t424 - t425 * t669) * rSges(6,1) + t689;
t441 = t493 * t662;
t368 = t493 * t660 + t441;
t326 = t493 * t659 + t368;
t640 = t490 * t667;
t595 = pkin(2) * t640;
t728 = t493 * t362;
t123 = t595 + t728 + (-t491 * t688 + t493 * t676) * qJD(1);
t449 = pkin(6) * t668;
t455 = qJD(3) * t491;
t184 = -t595 - t449 + t455 + (t491 * t807 - t442) * qJD(1);
t365 = qJD(1) * (-pkin(1) * t669 + t449);
t651 = qJD(1) * t184 + t491 * t661 + t365;
t522 = qJD(1) * t123 + t491 * t554 + t651;
t239 = t493 * t262;
t90 = t239 - t728 + (-t491 * t699 + t493 * t677) * qJD(1);
t17 = -t238 * t352 - t326 * t328 + (-t368 * t434 - t394 * t740) * pkin(4) + (t135 + t90 + t728) * qJD(1) + t522;
t849 = t17 * t491;
t385 = qJD(1) * t413;
t847 = qJD(1) * t269 - t385;
t530 = t455 + t728;
t846 = t896 + t900;
t692 = t491 * t372 + t493 * t484;
t201 = t681 - t692;
t843 = qJD(1) * t201 + t847;
t318 = Icges(6,5) * t425 - Icges(6,6) * t424;
t317 = Icges(6,5) * t424 + Icges(6,6) * t425;
t757 = t317 * t493;
t767 = t227 * t424;
t774 = Icges(6,3) * t493;
t842 = -t452 * t757 + (-t229 * t425 - t318 * t491 + t767 + t774) * qJD(1);
t380 = Icges(6,4) * t746;
t786 = Icges(6,5) * t493;
t228 = Icges(6,1) * t744 - t380 - t786;
t572 = t226 * t424 - t228 * t425;
t225 = Icges(6,3) * t491 + t318 * t493;
t675 = qJD(1) * t225;
t758 = t317 * t491;
t841 = qJD(1) * t572 - t452 * t758 + t675;
t337 = Icges(5,5) * t435 - Icges(5,6) * t434;
t336 = Icges(5,5) * t434 + Icges(5,6) * t435;
t754 = t336 * t493;
t765 = t252 * t434;
t775 = Icges(5,3) * t493;
t840 = -t485 * t754 + (-t254 * t435 - t337 * t491 + t765 + t775) * qJD(1);
t389 = Icges(5,4) * t742;
t787 = Icges(5,5) * t493;
t253 = Icges(5,1) * t739 - t389 - t787;
t570 = t251 * t434 - t253 * t435;
t250 = Icges(5,3) * t491 + t337 * t493;
t674 = qJD(1) * t250;
t755 = t336 * t491;
t839 = qJD(1) * t570 - t485 * t755 + t674;
t563 = t319 * t424 - t321 * t425;
t834 = qJD(1) * t563 + t318 * t452;
t562 = t338 * t434 - t340 * t435;
t833 = qJD(1) * t562 + t337 * t485;
t828 = qJD(1) * t858 + t352 * t862 - t353 * (-Icges(6,2) * t744 + t228 - t380);
t827 = qJD(1) * t856 + t394 * t859 - t395 * (-Icges(5,2) * t739 + t253 - t389);
t826 = t325 / 0.2e1;
t825 = t326 / 0.2e1;
t824 = -t352 / 0.2e1;
t823 = t352 / 0.2e1;
t822 = -t353 / 0.2e1;
t821 = t353 / 0.2e1;
t820 = t367 / 0.2e1;
t819 = t368 / 0.2e1;
t818 = -t394 / 0.2e1;
t817 = t394 / 0.2e1;
t816 = -t395 / 0.2e1;
t815 = t395 / 0.2e1;
t814 = t491 / 0.2e1;
t813 = -t493 / 0.2e1;
t809 = -qJD(1) / 0.2e1;
t808 = qJD(1) / 0.2e1;
t806 = rSges(3,1) * t492;
t805 = rSges(4,1) * t451;
t804 = rSges(5,1) * t435;
t802 = rSges(4,2) * t451;
t475 = t491 * rSges(3,3);
t473 = t491 * rSges(5,3);
t507 = -t353 * t328 - t395 * t810 + t530;
t705 = t269 - t413;
t650 = t201 + t705;
t700 = -t491 * t302 - t493 * t458;
t155 = t692 + t700;
t240 = rSges(6,1) * t744 - t493 * rSges(6,3) - t382;
t727 = t155 - t240;
t56 = (t650 + t727) * qJD(1) + t507;
t800 = t491 * t56;
t342 = rSges(5,1) * t434 + rSges(5,2) * t435;
t257 = rSges(5,1) * t739 - rSges(5,2) * t742 - t493 * rSges(5,3);
t523 = -t395 * t342 + t530;
t77 = (-t257 + t650) * qJD(1) + t523;
t799 = t77 * t342;
t363 = rSges(4,1) * t450 + t802;
t629 = -t363 - t812;
t586 = t493 * t629;
t557 = qJD(2) * t586;
t537 = t455 + t557;
t98 = (-t284 + t705) * qJD(1) + t537;
t798 = t98 * t363;
t591 = -t201 * t457 + t202 * t667 + t712;
t29 = -t155 * t394 + t156 * t395 + t240 * t352 + t241 * t353 + t591;
t773 = qJD(1) * t29;
t678 = rSges(3,2) * t732 + t493 * rSges(3,3);
t323 = rSges(3,1) * t730 - t678;
t403 = rSges(3,1) * t490 + rSges(3,2) * t492;
t641 = t403 * t667;
t169 = -t641 + (-t323 - t413) * qJD(1);
t771 = t169 * t491;
t770 = t169 * t493;
t642 = t403 * t457;
t324 = rSges(3,1) * t729 - rSges(3,2) * t731 + t475;
t695 = t324 + t414;
t170 = qJD(1) * t695 - t642;
t355 = t403 * t493;
t769 = t170 * t355;
t224 = Icges(6,5) * t744 - Icges(6,6) * t746 - t774;
t768 = t224 * t493;
t249 = Icges(5,5) * t739 - Icges(5,6) * t742 - t775;
t766 = t249 * t493;
t756 = t319 * t452;
t753 = t338 * t485;
t750 = t394 * t435;
t741 = t434 * t493;
t738 = t435 * t493;
t724 = -t491 * t224 - t228 * t743;
t723 = t491 * t225 + t229 * t743;
t721 = -t491 * t249 - t253 * t738;
t720 = t491 * t250 + t254 * t738;
t717 = t491 * t240 + t493 * t241;
t258 = rSges(5,1) * t738 - rSges(5,2) * t741 + t473;
t716 = t491 * t257 + t493 * t258;
t627 = t384 + t812;
t292 = t627 * t491;
t293 = t627 * t493;
t710 = t292 * t457 + t293 * t667;
t704 = -t270 - t285;
t327 = t384 - t810;
t694 = t327 - t384;
t687 = rSges(5,2) * t646 + rSges(5,3) * t668;
t686 = rSges(4,2) * t645 + rSges(4,3) * t668;
t680 = rSges(3,3) * t668 + t669 * t892;
t107 = -t491 * t563 - t757;
t666 = t107 * qJD(1);
t118 = -t491 * t562 - t754;
t665 = t118 * qJD(1);
t658 = pkin(2) * t731;
t657 = qJD(2) * t481;
t655 = t493 * t135 + t491 * t136 + t240 * t668;
t151 = -rSges(5,2) * t749 + (-t395 * t434 - t435 * t669) * rSges(5,1) + t687;
t300 = t342 * t491;
t343 = -rSges(5,2) * t434 + t804;
t152 = -t485 * t300 + (t343 * t493 + t473) * qJD(1);
t654 = t493 * t151 + t491 * t152 + t257 * t668;
t653 = t184 * t667 + t185 * t457 - t269 * t441;
t652 = t493 * t184 + t491 * t185 - t269 * t668;
t649 = -t258 + t722;
t643 = t363 * t457;
t639 = t492 * t667;
t636 = -pkin(1) - t806;
t635 = t669 / 0.2e1;
t634 = t668 / 0.2e1;
t633 = -t457 / 0.2e1;
t630 = t667 / 0.2e1;
t364 = -rSges(4,2) * t450 + t805;
t628 = -t364 - t481;
t624 = (-t491 ^ 2 - t493 ^ 2) * t490;
t623 = (-t491 * t574 + t778) * qJD(1) + t862 * t452;
t622 = qJD(1) * t227 + t228 * t452 - t491 * t756;
t621 = (-t322 * t491 + t786) * qJD(1) + t863 * t452;
t620 = qJD(1) * t229 + t452 * t864;
t619 = (-t491 * t575 + t779) * qJD(1) + t859 * t485;
t618 = qJD(1) * t252 + t253 * t485 - t491 * t753;
t617 = (-t341 * t491 + t787) * qJD(1) + t860 * t485;
t616 = qJD(1) * t254 + t485 * t861;
t197 = t229 * t744;
t615 = t225 * t493 - t197;
t279 = t328 * t493;
t614 = -t352 * t278 - t279 * t353;
t205 = t254 * t739;
t613 = t250 * t493 - t205;
t301 = t342 * t493;
t612 = -t394 * t300 - t301 * t395;
t610 = -t224 + t767;
t609 = t858 * t452;
t608 = t322 * t452 - t756;
t607 = -t249 + t765;
t606 = -qJD(1) * t279 - t329 * t352;
t603 = t856 * t485;
t602 = t341 * t485 - t753;
t601 = -qJD(1) * t301 - t343 * t394;
t208 = t353 * t329;
t597 = qJD(1) * t278 - t208;
t596 = qJD(1) * t300 - t395 * t343;
t594 = -t491 * t155 + t493 * t156 + t717;
t590 = -t491 * t201 + t493 * t202 + t711;
t589 = -pkin(4) * t740 - t238;
t584 = t806 - t892;
t583 = -t491 * t57 - t493 * t56;
t78 = -t342 * t394 + (t414 - t649) * qJD(1) + t648;
t582 = -t491 * t78 - t493 * t77;
t573 = -t170 * t491 - t770;
t110 = t226 * t425 + t228 * t424;
t127 = t251 * t435 + t253 * t434;
t559 = -t342 + t384;
t558 = -t155 * t668 + t491 * t91 + t493 * t90 + t655;
t556 = t493 * t123 + t491 * t124 - t201 * t668 + t652;
t335 = t364 * qJD(2);
t555 = -qJD(2) * t335 - t481 * t494;
t354 = t403 * t491;
t315 = t363 * t491;
t552 = t572 * t491;
t551 = t570 * t491;
t165 = (t323 * t491 + t324 * t493) * qJD(2);
t540 = -qJD(2) * t433 - t657;
t287 = t343 * t485;
t536 = -t287 + t540;
t535 = qJD(1) * t318 - t352 * t757 + t353 * t758;
t534 = qJD(1) * t337 - t394 * t754 + t395 * t755;
t533 = t327 - t328;
t111 = t227 * t425 + t229 * t424;
t513 = qJD(1) * t224 - t424 * t622 + t425 * t620;
t19 = t491 * t841 + t513 * t493;
t512 = -t424 * t623 + t425 * t621 + t675;
t20 = t491 * t842 + t512 * t493;
t21 = t513 * t491 - t493 * t841;
t22 = t512 * t491 - t493 * t842;
t84 = -t552 - t768;
t85 = -t227 * t746 - t615;
t32 = t352 * t85 - t353 * t84 + t666;
t108 = -t493 * t563 + t758;
t106 = t108 * qJD(1);
t86 = -t226 * t745 - t724;
t87 = -t227 * t745 + t723;
t33 = t352 * t87 - t353 * t86 + t106;
t509 = qJD(1) * t317 - t424 * t609 + t425 * t608;
t48 = t491 * t834 + t509 * t493;
t49 = t509 * t491 - t493 * t834;
t519 = t863 * t352 - t864 * t353 + (-t319 + t322) * qJD(1);
t497 = -t424 * t828 + t519 * t425;
t58 = t424 * t620 + t425 * t622;
t59 = t424 * t621 + t425 * t623;
t529 = (qJD(1) * t48 - t19 * t353 + t20 * t352 + t325 * t86 + t326 * t87) * t814 + (t491 * t59 - t493 * t58 + (t110 * t491 + t111 * t493) * qJD(1)) * t808 + (t491 * t535 + t493 * t497) * t824 + (t491 * t497 - t493 * t535) * t821 + (qJD(1) * t49 - t21 * t353 + t22 * t352 + t325 * t84 + t326 * t85) * t813 + (t519 * t424 + t425 * t828) * t809 + t32 * t635 + t33 * t634 + (-t19 * t493 + t20 * t491 + (t491 * t86 + t493 * t87) * qJD(1)) * t823 + (t491 * t85 - t493 * t84) * t826 + (t491 * t87 - t493 * t86) * t825 + (-t21 * t493 + t22 * t491 + (t491 * t84 + t493 * t85) * qJD(1)) * t822;
t525 = t29 * t614 + t57 * t606;
t524 = t540 + t589;
t521 = t123 * t667 + t124 * t457 - t201 * t441 + t440 * t722 + t653;
t518 = t860 * t394 - t861 * t395 + (-t338 + t341) * qJD(1);
t511 = qJD(1) * t249 - t434 * t618 + t435 * t616;
t510 = -t434 * t619 + t435 * t617 + t674;
t508 = qJD(1) * t336 - t434 * t603 + t435 * t602;
t128 = t252 * t435 + t254 * t434;
t24 = t491 * t839 + t511 * t493;
t25 = t491 * t840 + t510 * t493;
t26 = t511 * t491 - t493 * t839;
t27 = t510 * t491 - t493 * t840;
t92 = -t551 - t766;
t93 = -t252 * t742 - t613;
t40 = t394 * t93 - t395 * t92 + t665;
t119 = -t493 * t562 + t755;
t109 = t119 * qJD(1);
t94 = -t251 * t741 - t721;
t95 = -t252 * t741 + t720;
t41 = t394 * t95 - t395 * t94 + t109;
t496 = -t434 * t827 + t518 * t435;
t60 = t491 * t833 + t508 * t493;
t61 = t508 * t491 - t493 * t833;
t67 = t434 * t616 + t435 * t618;
t68 = t434 * t617 + t435 * t619;
t500 = (t491 * t534 + t493 * t496) * t818 + (qJD(1) * t61 - t26 * t395 + t27 * t394 + t367 * t92 + t368 * t93) * t813 + t40 * t635 + (-t24 * t493 + t25 * t491 + (t491 * t94 + t493 * t95) * qJD(1)) * t817 + (qJD(1) * t60 - t24 * t395 + t25 * t394 + t367 * t94 + t368 * t95) * t814 + (t491 * t496 - t493 * t534) * t815 + (t491 * t95 - t493 * t94) * t819 + (t491 * t93 - t493 * t92) * t820 + (-t26 * t493 + t27 * t491 + (t491 * t92 + t493 * t93) * qJD(1)) * t816 + t529 + (t518 * t434 + t435 * t827) * t809 + t41 * t634 + (t491 * t68 - t493 * t67 + (t127 * t491 + t128 * t493) * qJD(1)) * t808;
t373 = t584 * qJD(2);
t316 = t363 * t493;
t271 = qJD(1) * t293;
t204 = t694 * t493;
t203 = t694 * t491;
t196 = -qJD(2) * t354 + (t493 * t584 + t475) * qJD(1);
t195 = -rSges(3,2) * t639 + (-t492 * t669 - t640) * rSges(3,1) + t680;
t164 = -qJD(2) * t315 + (t364 * t493 + t474) * qJD(1);
t163 = -t667 * t802 + (-t450 * t667 - t451 * t669) * rSges(4,1) + t686;
t105 = -t373 * t667 + (-t196 - t375 + t642) * qJD(1);
t104 = -t373 * t457 + t365 + (t195 - t641) * qJD(1);
t99 = -t643 + (t414 - t704) * qJD(1) - t679;
t72 = t555 * t493 + (-t164 + t643 + t725) * qJD(1) + t682;
t71 = t555 * t491 + (t163 + t557) * qJD(1) + t651;
t64 = t257 * t394 + t258 * t395 + t591;
t43 = -t287 * t395 + t342 * t367 + (-t152 + t656) * qJD(1) + t526;
t42 = -t287 * t394 - t342 * t368 + (t151 + t728) * qJD(1) + t522;
t11 = t151 * t395 + t152 * t394 + t257 * t368 - t258 * t367 + t521;
t7 = t135 * t353 + t136 * t352 - t155 * t368 - t156 * t367 + t240 * t326 - t241 * t325 + t394 * t91 + t395 * t90 + t521;
t1 = [(t109 + (t93 + (t251 * t493 + t252 * t491) * t434 + t613 + t721) * t395 + (-t253 * t739 + t766 + t92 + (t251 * t491 - t252 * t493) * t434 + t720) * t394) * t815 + (t106 + (t85 + (t226 * t493 + t227 * t491) * t424 + t615 + t724) * t353 + (-t228 * t744 + t768 + t84 + (t226 * t491 - t227 * t493) * t424 + t723) * t352) * t821 + (t107 + t110) * t826 + (t108 + t111) * t825 + (-t666 + (t87 - t552 - t723) * t353 + (t491 * t610 - t197 + t86) * t352 + ((t225 + t572) * t352 + t610 * t353) * t493 + t32) * t824 + (t59 + t48) * t823 + (t118 + t127) * t820 + (t119 + t128) * t819 + (-t665 + (t95 - t551 - t720) * t395 + (t491 * t607 - t205 + t94) * t394 + ((t250 + t570) * t394 + t607 * t395) * t493 + t40) * t818 + (t68 + t60) * t817 + ((((t905 + t909) * t493 + t886 + t901 + t907) * t493 - t845 * t491) * qJD(2) + t883) * t630 + (t18 * (-t240 + t700) + t56 * (-t262 * t491 + t456) + t17 * (t241 + t289 - t733) + t328 * t800 * t452 + (-t279 * t452 + t239 + t455 - t507 + t56 + t689 - t843) * t57) * m(6) + (t333 * t451 + t334 * t450 + t370 * t492 + t371 * t490 + t424 * t608 + t425 * t609 + t434 * t602 + t435 * t603 - t903 * qJD(2) + ((t56 * (-t302 - t329) - t57 * t458) * t493 + (t56 * (-rSges(6,3) + t458) + t57 * (-t302 - t803)) * t491 - t727 * t57) * m(6)) * qJD(1) + (t43 * (-t257 - t692) + t77 * (t456 - t599) + t42 * (-t484 * t491 + t258 + t345) + t78 * (t687 + t530) + (-t301 * t78 + t491 * t799) * t485 + ((-t77 * rSges(5,3) + t78 * (-t372 - t804)) * t491 + (t77 * (-t343 - t372) - t78 * t484) * t493) * qJD(1) - (-qJD(1) * t257 + t523 - t77 + t843) * t78) * m(5) + (t72 * (-t284 - t681) + t98 * t647 + t71 * (t285 + t598) + t99 * (t455 + t686) + (t491 * t798 + t586 * t99) * qJD(2) + ((-t98 * rSges(4,3) + t99 * (-t444 - t805)) * t491 + (t98 * (-t364 - t444) - t99 * t489) * t493) * qJD(1) - (-qJD(1) * t284 + t537 + t847 - t98) * t99) * m(4) + (-(-qJD(1) * t323 - t169 - t385 - t641) * t170 + t105 * (t491 * t636 + t482 + t678) + t104 * t695 + t170 * (t449 + t680) + (t403 * t771 - t769) * qJD(2) + ((-pkin(1) - t584) * t770 + (t169 * (-rSges(3,3) - pkin(6)) + t170 * t636) * t491) * qJD(1)) * m(3) + (t58 + t49 + t33) * t822 + (t67 + t61 + t41) * t816 + (((t493 * t846 + t845 + t884) * t493 + (t491 * t846 + t885 + t902) * t491) * qJD(2) + t874 - t878) * t633 + (t869 + t872) * t457 / 0.2e1 - (-t870 + t871 + t873) * t667 / 0.2e1 + ((t866 + t898) * t491 + (t865 + t897) * t493) * t662 / 0.2e1; t500 + ((t532 * t450 + t451 * t829 + t531 * t490 + t492 * t830) * qJD(2) + (t450 * t691 + t451 * t690 + t490 * t684 + t492 * t683) * qJD(1)) * t809 + (t870 * t493 + t869 * t491 + (t491 * t866 + t493 * t865) * qJD(1)) * t808 + ((-t457 * t851 + t853) * t491 + ((t491 * t850 + t855) * qJD(2) + t854) * t493) * t633 + ((-t667 * t850 - t853) * t493 + ((t493 * t851 + t855) * qJD(2) + t854) * t491) * t630 + (-t29 * (t203 * t394 + t204 * t395 + t614 + t710) - (t583 * t433 + (t29 * t624 + t492 * t583) * pkin(2)) * qJD(2) + t7 * (t590 + t594) + t29 * (t556 + t558) + t533 * t867 + (t17 * t533 + t593 * t773) * t491 + (pkin(4) * t750 - t271 - t606 - (t204 - t658) * qJD(1) + t524 * t491) * t57 + (t208 - (-t203 + t278 - t292) * qJD(1) + t524 * t493 + t852 + t857) * t56) * m(6) + (-t78 * (-qJD(1) * t658 + t271 + t601) - t64 * (t612 + t710) - (t582 * t433 + (t492 * t582 + t624 * t64) * pkin(2)) * qJD(2) + t11 * (t590 + t716) + t64 * (t556 + t654) + (qJD(1) * t78 + t43) * t559 * t493 + (t42 * t559 + t78 * t536 + (t64 * t649 + t799) * qJD(1)) * t491 + (qJD(1) * t292 + t493 * t536 - t596 + t852) * t77) * m(5) + (t72 * t586 + (t163 * t667 + t164 * t457 + t653) * t539 + t83 * t652 + (-t98 * t335 + t83 * t163 + (t284 * t868 + t629 * t99) * qJD(1)) * t493 + (t71 * t629 + t99 * (-t335 - t657) + t83 * t164 + (t704 * t868 + t798) * qJD(1)) * t491 - (t98 * t315 + t99 * (-t316 - t658)) * qJD(1) - ((-t83 * t316 + t628 * t98) * t493 + (-t83 * t315 + t628 * t99) * t491) * qJD(2) + (-qJD(2) * t624 * t83 - t639 * t98) * pkin(2)) * m(4) + (0.2e1 * t165 * (t195 * t493 + t196 * t491 + (t323 * t493 - t324 * t491) * qJD(1)) + t573 * t373 + (-t104 * t491 - t105 * t493 + (-t170 * t493 + t771) * qJD(1)) * t403 - (t169 * t354 - t769) * qJD(1) - (t165 * (-t354 * t491 - t355 * t493) + t573 * t584) * qJD(2)) * m(3) + (t872 * qJD(1) + ((t884 * qJD(1) + t881 * t493) * t493 + (t876 * t491 + t885 * qJD(1) + (-t877 + t882) * t493) * t491) * t875) * t814 + (t871 * qJD(1) + ((t886 * qJD(1) + t877 * t493) * t493 + (t882 * t491 + t887 * qJD(1) + (-t876 + t881) * t493) * t491) * t875) * t813 + (t874 + t879) * t635 + (t873 + t880) * t634; 0.2e1 * (t17 * t813 + t18 * t814) * m(6) + 0.2e1 * (t42 * t813 + t43 * t814) * m(5) + 0.2e1 * (t71 * t813 + t72 * t814) * m(4); t500 + (t7 * t594 + t29 * t558 + (t57 * t589 + t726 * t773) * t491 - (-t57 * t750 + (-t57 * t668 + t29 * (-t394 * t491 - t395 * t493)) * t434) * pkin(4) - t525 + (t849 + t867) * (-t328 - t810) + (t493 * t589 - t381 - t597 + t857) * t56) * m(6) + (t11 * t716 + t582 * t287 + (-t42 * t491 - t43 * t493 + (t491 * t77 - t493 * t78) * qJD(1)) * t342 - t77 * t596 - t78 * t601 + (-t258 * t669 - t612 + t654) * t64) * m(5); t529 + (-t56 * t597 - t525 + t7 * t717 + t29 * (-t241 * t669 + t655) + t583 * t238 + (-t849 - t18 * t493 + (-t493 * t57 + t800) * qJD(1)) * t328) * m(6);];
tauc = t1(:);
