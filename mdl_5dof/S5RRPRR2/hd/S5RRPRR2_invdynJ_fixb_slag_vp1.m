% Calculate vector of inverse dynamics joint torques for
% S5RRPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:29
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRPRR2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR2_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR2_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRR2_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRR2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR2_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRPRR2_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRPRR2_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRPRR2_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:27:04
% EndTime: 2019-12-05 18:28:25
% DurationCPUTime: 56.90s
% Computational Cost: add. (26664->1062), mult. (24849->1318), div. (0->0), fcn. (19567->10), ass. (0->570)
t951 = Icges(3,3) + Icges(4,3);
t513 = qJ(2) + pkin(9);
t474 = sin(t513);
t475 = cos(t513);
t517 = sin(qJ(2));
t519 = cos(qJ(2));
t939 = Icges(3,5) * t519 + Icges(4,5) * t475 - Icges(3,6) * t517 - Icges(4,6) * t474;
t520 = cos(qJ(1));
t950 = t951 * t520;
t518 = sin(qJ(1));
t765 = t518 * t519;
t768 = t517 * t518;
t770 = t475 * t518;
t772 = t474 * t518;
t940 = -Icges(3,5) * t765 - Icges(4,5) * t770 + Icges(3,6) * t768 + Icges(4,6) * t772 + t950;
t945 = t951 * t518 + t939 * t520;
t812 = Icges(4,6) * t520;
t288 = Icges(4,4) * t770 - Icges(4,2) * t772 - t812;
t813 = Icges(3,6) * t520;
t322 = Icges(3,4) * t765 - Icges(3,2) * t768 - t813;
t949 = t288 * t474 + t322 * t517;
t428 = Icges(4,4) * t772;
t820 = Icges(4,5) * t520;
t290 = Icges(4,1) * t770 - t428 - t820;
t451 = Icges(3,4) * t768;
t821 = Icges(3,5) * t520;
t324 = Icges(3,1) * t765 - t451 - t821;
t928 = -t290 * t475 - t324 * t519 + t949;
t913 = -t928 * t518 + t940 * t520;
t824 = Icges(4,4) * t474;
t380 = Icges(4,1) * t475 - t824;
t291 = Icges(4,5) * t518 + t380 * t520;
t825 = Icges(3,4) * t517;
t421 = Icges(3,1) * t519 - t825;
t325 = Icges(3,5) * t518 + t421 * t520;
t947 = -t291 * t770 - t325 * t765;
t946 = Icges(3,5) * t517 + Icges(4,5) * t474 + Icges(3,6) * t519 + Icges(4,6) * t475;
t377 = Icges(4,2) * t475 + t824;
t455 = Icges(4,4) * t475;
t379 = Icges(4,1) * t474 + t455;
t418 = Icges(3,2) * t519 + t825;
t498 = Icges(3,4) * t519;
t420 = Icges(3,1) * t517 + t498;
t937 = t377 * t474 - t379 * t475 + t418 * t517 - t420 * t519;
t944 = t520 * t945 + t947;
t764 = t519 * t520;
t769 = t475 * t520;
t879 = -t291 * t769 - t325 * t764 - t518 * t945;
t943 = -t290 * t769 - t324 * t764 + t518 * t940;
t602 = -Icges(4,2) * t474 + t455;
t289 = Icges(4,6) * t518 + t520 * t602;
t603 = -Icges(3,2) * t517 + t498;
t323 = Icges(3,6) * t518 + t520 * t603;
t941 = t289 * t474 + t323 * t517;
t912 = -t289 * t772 - t323 * t768 - t944;
t767 = t517 * t520;
t771 = t474 * t520;
t911 = -t288 * t771 - t322 * t767 - t943;
t910 = -t289 * t771 - t323 * t767 - t879;
t907 = t288 * t475 + t290 * t474 + t322 * t519 + t324 * t517;
t906 = t289 * t475 + t291 * t474 + t323 * t519 + t325 * t517;
t938 = t946 * qJD(2);
t936 = -t377 * t475 - t379 * t474 - t418 * t519 - t420 * t517;
t935 = t291 * t475 + t325 * t519 - t941;
t890 = t946 * t520;
t889 = t946 * t518;
t909 = -t518 * t937 - t890;
t908 = -t520 * t937 + t889;
t934 = t945 * qJD(1);
t933 = t520 ^ 2;
t932 = rSges(3,2) * t517;
t349 = t602 * qJD(2);
t350 = t380 * qJD(2);
t387 = t603 * qJD(2);
t388 = t421 * qJD(2);
t931 = t946 * qJD(1) + t936 * qJD(2) - t349 * t474 + t350 * t475 - t387 * t517 + t388 * t519;
t567 = qJD(2) * t377;
t164 = -t520 * t567 + (-t518 * t602 + t812) * qJD(1);
t569 = qJD(2) * t379;
t166 = -t520 * t569 + (-t380 * t518 + t820) * qJD(1);
t568 = qJD(2) * t418;
t196 = -t520 * t568 + (-t518 * t603 + t813) * qJD(1);
t570 = qJD(2) * t420;
t198 = -t520 * t570 + (-t421 * t518 + t821) * qJD(1);
t930 = -t906 * qJD(2) - t164 * t474 + t166 * t475 - t196 * t517 + t198 * t519 + t934;
t165 = qJD(1) * t289 - t518 * t567;
t167 = qJD(1) * t291 - t518 * t569;
t197 = qJD(1) * t323 - t518 * t568;
t199 = qJD(1) * t325 - t518 * t570;
t929 = t940 * qJD(1) + t907 * qJD(2) + t165 * t474 - t167 * t475 + t197 * t517 - t199 * t519;
t927 = t910 * t518 - t911 * t520;
t926 = t912 * t518 - t913 * t520;
t925 = t937 * qJD(1) + t939 * qJD(2);
t924 = t928 * qJD(1) - t938 * t518 + t934;
t923 = -t938 * t520 + (-t939 * t518 - t935 + t950) * qJD(1);
t836 = rSges(4,2) * t475;
t382 = rSges(4,1) * t474 + t836;
t332 = t382 * t518;
t501 = t518 * rSges(4,3);
t456 = t475 * rSges(4,1);
t881 = -rSges(4,2) * t474 + t456;
t169 = -qJD(2) * t332 + (t520 * t881 + t501) * qJD(1);
t351 = t881 * qJD(2);
t693 = qJD(1) * qJD(2);
t464 = t518 * t693;
t399 = -qJDD(2) * t520 + t464;
t692 = qJD(1) * qJD(3);
t845 = pkin(2) * t517;
t677 = qJDD(3) * t518 + t399 * t845 + t520 * t692;
t298 = rSges(4,1) * t770 - rSges(4,2) * t772 - t520 * rSges(4,3);
t509 = t520 * pkin(6);
t432 = pkin(1) * t518 - t509;
t516 = -qJ(3) - pkin(6);
t466 = t520 * t516;
t508 = t519 * pkin(2);
t468 = t508 + pkin(1);
t714 = t518 * t468 + t466;
t283 = t432 - t714;
t736 = t283 - t432;
t678 = -t298 + t736;
t507 = t518 * pkin(6);
t700 = qJD(1) * t518;
t446 = t516 * t700;
t688 = pkin(2) * t768;
t440 = qJD(2) * t688;
t483 = qJD(3) * t520;
t712 = t440 + t483;
t675 = t446 + t712;
t839 = pkin(1) - t468;
t191 = (-t520 * t839 - t507) * qJD(1) - t675;
t433 = t520 * pkin(1) + t507;
t393 = t433 * qJD(1);
t756 = -t191 - t393;
t521 = qJD(2) ^ 2;
t763 = t519 * t521;
t54 = t382 * t399 + (-pkin(2) * t763 - qJD(2) * t351) * t520 + t678 * qJDD(1) + (-t169 + t756) * qJD(1) + t677;
t922 = t54 - g(1);
t921 = t908 * qJD(1);
t920 = t909 * qJD(1);
t919 = t926 * qJD(2) + t920;
t918 = t927 * qJD(2) + t921;
t917 = t925 * t518 + t931 * t520;
t916 = t931 * t518 - t925 * t520;
t915 = t928 * qJD(2) - t165 * t475 - t167 * t474 - t197 * t519 - t199 * t517;
t914 = t935 * qJD(2) + t164 * t475 + t166 * t474 + t196 * t519 + t198 * t517;
t480 = qJ(4) + t513;
t467 = qJ(5) + t480;
t448 = cos(t467);
t779 = t448 * t518;
t447 = sin(t467);
t781 = t447 * t518;
t810 = Icges(6,6) * t520;
t237 = Icges(6,4) * t779 - Icges(6,2) * t781 - t810;
t431 = Icges(6,4) * t448;
t338 = Icges(6,1) * t447 + t431;
t905 = -t338 * t518 - t237;
t600 = -Icges(6,2) * t447 + t431;
t238 = Icges(6,6) * t518 + t520 * t600;
t904 = -t338 * t520 - t238;
t822 = Icges(6,4) * t447;
t339 = Icges(6,1) * t448 - t822;
t240 = Icges(6,5) * t518 + t339 * t520;
t336 = Icges(6,2) * t448 + t822;
t903 = -t336 * t520 + t240;
t459 = cos(t480);
t774 = t459 * t518;
t458 = sin(t480);
t777 = t458 * t518;
t811 = Icges(5,6) * t520;
t264 = Icges(5,4) * t774 - Icges(5,2) * t777 - t811;
t442 = Icges(5,4) * t459;
t356 = Icges(5,1) * t458 + t442;
t902 = -t356 * t518 - t264;
t601 = -Icges(5,2) * t458 + t442;
t265 = Icges(5,6) * t518 + t520 * t601;
t901 = -t356 * t520 - t265;
t823 = Icges(5,4) * t458;
t357 = Icges(5,1) * t459 - t823;
t267 = Icges(5,5) * t518 + t357 * t520;
t354 = Icges(5,2) * t459 + t823;
t900 = -t354 * t520 + t267;
t899 = t338 + t600;
t833 = rSges(6,2) * t448;
t343 = rSges(6,1) * t447 + t833;
t674 = t458 * t700;
t400 = pkin(4) * t674;
t512 = qJD(2) + qJD(4);
t415 = t512 * t520;
t784 = t415 * t459;
t898 = pkin(4) * t784 + t343 * t700 + t400;
t897 = t356 + t601;
t555 = t322 * t520 - t323 * t518;
t556 = t288 * t520 - t289 * t518;
t864 = t518 * (-t377 * t520 + t291) - t520 * (-Icges(4,2) * t770 + t290 - t428);
t865 = t518 * (-t418 * t520 + t325) - t520 * (-Icges(3,2) * t765 + t324 - t451);
t896 = -t474 * t864 + t556 * t475 - t517 * t865 + t555 * t519;
t715 = t420 + t603;
t716 = -t418 + t421;
t723 = t379 + t602;
t724 = -t377 + t380;
t895 = (-t474 * t723 + t475 * t724 - t517 * t715 + t519 * t716) * qJD(1);
t894 = t924 * t933 + (t930 * t518 + (-t923 + t929) * t520) * t518;
t893 = t929 * t933 + (t923 * t518 + (-t924 + t930) * t520) * t518;
t892 = t939 * qJD(1);
t673 = t474 * t700;
t891 = pkin(3) * t673;
t476 = qJD(5) + t512;
t370 = t476 * t520;
t401 = rSges(6,2) * t781;
t699 = qJD(1) * t520;
t721 = rSges(6,3) * t699 + qJD(1) * t401;
t137 = -t370 * t833 + (-t370 * t447 - t448 * t700) * rSges(6,1) + t721;
t398 = qJDD(2) * t518 + t520 * t693;
t691 = qJD(1) * qJD(4);
t306 = qJDD(4) * t518 + t520 * t691 + t398;
t690 = qJD(1) * qJD(5);
t219 = qJDD(5) * t518 + t520 * t690 + t306;
t436 = t448 * rSges(6,1);
t834 = rSges(6,2) * t447;
t883 = t436 - t834;
t249 = t883 * t476;
t484 = qJD(2) * t518;
t414 = qJD(4) * t518 + t484;
t369 = qJD(5) * t518 + t414;
t844 = pkin(3) * t474;
t403 = -t844 - t845;
t381 = t403 * qJD(2);
t347 = t520 * t381;
t698 = qJD(2) * t520;
t670 = t517 * t698;
t628 = pkin(2) * t670;
t511 = -pkin(7) + t516;
t708 = -t511 + t516;
t457 = pkin(3) * t475;
t710 = t457 + t508;
t389 = pkin(1) + t710;
t720 = t389 - t468;
t125 = t628 + t347 + (-t518 * t720 + t520 * t708) * qJD(1);
t362 = t520 * t389;
t437 = t520 * t468;
t211 = t518 * t708 + t362 - t437;
t473 = pkin(6) * t699;
t482 = qJD(3) * t518;
t190 = -t628 - t473 + t482 + (t518 * t839 - t466) * qJD(1);
t632 = -t516 * t518 + t437;
t284 = t632 - t433;
t722 = qJD(1) * (-pkin(1) * t700 + t473) + qJDD(1) * t433;
t529 = qJD(1) * t190 + qJDD(1) * t284 + t518 * t692 + (-t398 * t517 - t518 * t763) * pkin(2) - qJDD(3) * t520 + t722;
t525 = qJD(1) * t125 + qJDD(1) * t211 + (-t398 * t474 - t521 * t770) * pkin(3) + t529;
t445 = pkin(4) * t459;
t631 = t445 + t389;
t303 = t520 * t631;
t485 = -pkin(8) + t511;
t707 = t511 - t485;
t160 = t518 * t707 + t303 - t362;
t499 = t518 * rSges(6,3);
t778 = t448 * t520;
t780 = t447 * t520;
t252 = rSges(6,1) * t778 - rSges(6,2) * t780 + t499;
t757 = t160 + t252;
t775 = t459 * t512;
t843 = pkin(4) * t458;
t276 = -t512 * t843 + t381;
t250 = t520 * t276;
t619 = t389 - t631;
t94 = -t347 + t250 + (t518 * t619 + t520 * t707) * qJD(1);
t11 = t525 + t757 * qJDD(1) + (t94 + t137) * qJD(1) + (-t306 * t458 - t414 * t775) * pkin(4) - t369 * t249 - t219 * t343;
t888 = t11 * t518;
t292 = t343 * t518;
t138 = -t476 * t292 + (t520 * t883 + t499) * qJD(1);
t689 = -qJDD(2) - qJDD(4);
t709 = t518 * t691 + t464;
t220 = t518 * t690 + (-qJDD(5) + t689) * t520 + t709;
t307 = t520 * t689 + t709;
t545 = -t520 * t521 * t710 + t399 * t844 + t677;
t725 = t518 * t389 + t520 * t511;
t210 = t714 - t725;
t680 = t210 + t736;
t731 = -t520 * t485 - t518 * t631;
t159 = t725 + t731;
t251 = rSges(6,1) * t779 - t520 * rSges(6,3) - t401;
t758 = t159 - t251;
t608 = t680 + t758;
t439 = t511 * t700;
t633 = t518 * t381 - t439;
t126 = t699 * t720 + t440 + t446 + t633;
t685 = -t126 + t756;
t766 = t518 * t485;
t95 = t439 + (t276 - t381) * t518 + (-t520 * t619 - t766) * qJD(1);
t10 = t220 * t343 - t370 * t249 + (t307 * t458 - t415 * t775) * pkin(4) + t608 * qJDD(1) + (-t95 - t138 + t685) * qJD(1) + t545;
t753 = -t211 - t284;
t626 = t753 - t757;
t676 = -t484 * t844 - t712;
t59 = -t414 * t843 - t343 * t369 + (t433 - t626) * qJD(1) + t676;
t887 = qJD(1) * t59 + t10;
t563 = -t382 - t845;
t886 = t520 * t563;
t405 = qJD(1) * t432;
t885 = qJD(1) * t283 - t405;
t884 = t881 + t508;
t443 = t459 * rSges(5,1);
t882 = -rSges(5,2) * t458 + t443;
t553 = t482 + t347;
t880 = t940 + t941;
t878 = qJD(1) * t210 + t885;
t335 = Icges(6,5) * t448 - Icges(6,6) * t447;
t334 = Icges(6,5) * t447 + Icges(6,6) * t448;
t792 = t334 * t520;
t799 = t238 * t447;
t806 = Icges(6,3) * t520;
t877 = -t476 * t792 + (-t240 * t448 - t335 * t518 + t799 + t806) * qJD(1);
t397 = Icges(6,4) * t781;
t818 = Icges(6,5) * t520;
t239 = Icges(6,1) * t779 - t397 - t818;
t592 = t237 * t447 - t239 * t448;
t236 = Icges(6,3) * t518 + t335 * t520;
t706 = qJD(1) * t236;
t793 = t334 * t518;
t876 = qJD(1) * t592 - t476 * t793 + t706;
t353 = Icges(5,5) * t459 - Icges(5,6) * t458;
t352 = Icges(5,5) * t458 + Icges(5,6) * t459;
t789 = t352 * t520;
t798 = t265 * t458;
t807 = Icges(5,3) * t520;
t875 = -t512 * t789 + (-t267 * t459 - t353 * t518 + t798 + t807) * qJD(1);
t409 = Icges(5,4) * t777;
t819 = Icges(5,5) * t520;
t266 = Icges(5,1) * t774 - t409 - t819;
t590 = t264 * t458 - t266 * t459;
t263 = Icges(5,3) * t518 + t353 * t520;
t705 = qJD(1) * t263;
t790 = t352 * t518;
t874 = qJD(1) * t590 - t512 * t790 + t705;
t583 = t336 * t447 - t338 * t448;
t869 = qJD(1) * t583 + t335 * t476;
t581 = t354 * t458 - t356 * t459;
t868 = qJD(1) * t581 + t353 * t512;
t863 = qJD(1) * t899 + t369 * t903 - t370 * (-Icges(6,2) * t779 + t239 - t397);
t862 = qJD(1) * t897 + t414 * t900 - t415 * (-Icges(5,2) * t774 + t266 - t409);
t861 = t219 / 0.2e1;
t860 = t220 / 0.2e1;
t859 = t306 / 0.2e1;
t858 = t307 / 0.2e1;
t857 = -t369 / 0.2e1;
t856 = t369 / 0.2e1;
t855 = -t370 / 0.2e1;
t854 = t370 / 0.2e1;
t853 = t398 / 0.2e1;
t852 = t399 / 0.2e1;
t851 = -t414 / 0.2e1;
t850 = t414 / 0.2e1;
t849 = -t415 / 0.2e1;
t848 = t415 / 0.2e1;
t847 = t518 / 0.2e1;
t846 = -t520 / 0.2e1;
t842 = g(2) * t518;
t841 = -qJD(1) / 0.2e1;
t840 = qJD(1) / 0.2e1;
t838 = rSges(3,1) * t519;
t502 = t518 * rSges(3,3);
t500 = t518 * rSges(5,3);
t536 = -t370 * t343 - t415 * t843 + t553;
t58 = qJD(1) * t608 + t536;
t832 = t518 * t58;
t358 = rSges(5,1) * t458 + rSges(5,2) * t459;
t546 = -t415 * t358 + t553;
t271 = rSges(5,1) * t774 - rSges(5,2) * t777 - t520 * rSges(5,3);
t622 = -t271 + t680;
t78 = qJD(1) * t622 + t546;
t831 = t78 * t358;
t830 = qJDD(1) / 0.2e1;
t743 = -t283 * t484 + t284 * t698;
t624 = -t210 * t484 + t211 * t698 + t743;
t31 = -t159 * t414 + t160 * t415 + t251 * t369 + t252 * t370 + t624;
t805 = qJD(1) * t31;
t561 = qJD(2) * t886 + t482;
t102 = qJD(1) * t678 + t561;
t803 = t102 * t382;
t422 = rSges(3,1) * t517 + rSges(3,2) * t519;
t671 = t422 * t698;
t711 = rSges(3,2) * t768 + t520 * rSges(3,3);
t340 = rSges(3,1) * t765 - t711;
t727 = -t340 - t432;
t176 = qJD(1) * t727 - t671;
t802 = t176 * t518;
t801 = t176 * t520;
t341 = rSges(3,1) * t764 - rSges(3,2) * t767 + t502;
t256 = t341 + t433;
t177 = qJD(1) * t256 - t422 * t484;
t372 = t422 * t520;
t800 = t177 * t372;
t791 = t336 * t476;
t788 = t354 * t512;
t785 = t414 * t459;
t776 = t458 * t520;
t773 = t459 * t520;
t235 = Icges(6,5) * t779 - Icges(6,6) * t781 - t806;
t762 = t520 * t235;
t262 = Icges(5,5) * t774 - Icges(5,6) * t777 - t807;
t761 = t520 * t262;
t755 = -t518 * t235 - t239 * t778;
t754 = t518 * t236 + t240 * t778;
t752 = -t518 * t262 - t266 * t773;
t751 = t518 * t263 + t267 * t773;
t748 = t518 * t251 + t520 * t252;
t272 = rSges(5,1) * t773 - rSges(5,2) * t776 + t500;
t747 = t518 * t271 + t520 * t272;
t742 = -t518 * t283 + t520 * t284;
t373 = t518 * t403;
t310 = t373 + t688;
t374 = t520 * t403;
t687 = pkin(2) * t767;
t311 = t374 + t687;
t741 = t310 * t484 + t311 * t698;
t299 = rSges(4,1) * t769 - rSges(4,2) * t771 + t501;
t735 = -t284 - t299;
t719 = rSges(5,2) * t674 + rSges(5,3) * t699;
t718 = rSges(4,2) * t673 + rSges(4,3) * t699;
t713 = rSges(3,3) * t699 + t700 * t932;
t109 = -t518 * t583 - t792;
t697 = t109 * qJD(1);
t120 = -t518 * t581 - t789;
t696 = t120 * qJD(1);
t686 = qJD(2) * t508;
t684 = t520 * t137 + t518 * t138 + t251 * t699;
t155 = -rSges(5,2) * t784 + (-t415 * t458 - t459 * t700) * rSges(5,1) + t719;
t318 = t358 * t518;
t156 = -t512 * t318 + (t520 * t882 + t500) * qJD(1);
t683 = t520 * t155 + t518 * t156 + t271 * t699;
t682 = t190 * t698 + t191 * t484 - t398 * t283;
t681 = t520 * t190 + t518 * t191 - t283 * t699;
t679 = -t272 + t753;
t669 = t519 * t698;
t666 = -pkin(1) - t838;
t665 = t700 / 0.2e1;
t664 = t699 / 0.2e1;
t663 = -t484 / 0.2e1;
t662 = t484 / 0.2e1;
t661 = -t698 / 0.2e1;
t660 = t698 / 0.2e1;
t658 = t517 * (-t518 ^ 2 - t933);
t657 = (-t518 * t600 + t810) * qJD(1) + t903 * t476;
t656 = qJD(1) * t238 + t239 * t476 - t518 * t791;
t655 = (-t339 * t518 + t818) * qJD(1) + t904 * t476;
t654 = qJD(1) * t240 + t476 * t905;
t653 = (-t518 * t601 + t811) * qJD(1) + t900 * t512;
t652 = qJD(1) * t265 + t266 * t512 - t518 * t788;
t651 = (-t357 * t518 + t819) * qJD(1) + t901 * t512;
t650 = qJD(1) * t267 + t512 * t902;
t204 = t240 * t779;
t649 = t520 * t236 - t204;
t293 = t343 * t520;
t648 = -t369 * t292 - t293 * t370;
t215 = t267 * t774;
t647 = t520 * t263 - t215;
t319 = t358 * t520;
t646 = -t414 * t318 - t319 * t415;
t644 = -t235 + t799;
t643 = t899 * t476;
t642 = t339 * t476 - t791;
t641 = -t262 + t798;
t640 = -qJD(1) * t293 - t369 * t883;
t637 = t897 * t512;
t636 = t357 * t512 - t788;
t635 = -qJD(1) * t319 - t414 * t882;
t218 = t370 * t883;
t630 = qJD(1) * t292 - t218;
t629 = qJD(1) * t318 - t415 * t882;
t627 = -t518 * t159 + t520 * t160 + t748;
t623 = -t518 * t210 + t520 * t211 + t742;
t621 = -pkin(4) * t775 - t249;
t620 = t883 + t445;
t425 = rSges(2,1) * t520 - rSges(2,2) * t518;
t423 = rSges(2,1) * t518 + rSges(2,2) * t520;
t424 = t838 - t932;
t610 = -t518 * t59 - t520 * t58;
t79 = -t358 * t414 + (t433 - t679) * qJD(1) + t676;
t609 = -t518 * t79 - t520 * t78;
t168 = -t698 * t836 + (-t474 * t698 - t475 * t700) * rSges(4,1) + t718;
t595 = t168 * t520 + t169 * t518;
t594 = -t177 * t518 - t801;
t202 = -rSges(3,2) * t669 + (-t519 * t700 - t670) * rSges(3,1) + t713;
t371 = t422 * t518;
t203 = -qJD(2) * t371 + (t424 * t520 + t502) * qJD(1);
t593 = t202 * t520 + t203 * t518;
t112 = t237 * t448 + t239 * t447;
t129 = t264 * t459 + t266 * t458;
t586 = t298 * t518 + t299 * t520;
t582 = t340 * t518 + t341 * t520;
t576 = -t358 + t403;
t575 = -t159 * t699 + t518 * t95 + t520 * t94 + t684;
t574 = t520 * t125 + t518 * t126 - t210 * t699 + t681;
t573 = -t631 - t436;
t572 = t592 * t518;
t571 = t590 * t518;
t564 = -qJD(2) * t457 - t686;
t342 = t403 - t843;
t301 = t882 * t512;
t560 = -t301 + t564;
t559 = qJD(1) * t335 - t369 * t792 + t370 * t793;
t558 = qJD(1) * t353 - t414 * t789 + t415 * t790;
t557 = t342 - t343;
t550 = t125 * t698 + t126 * t484 - t398 * t210 + t399 * t753 + t682;
t110 = -t520 * t583 + t793;
t113 = t238 * t448 + t240 * t447;
t542 = qJD(1) * t235 - t447 * t656 + t448 * t654;
t21 = t518 * t876 + t542 * t520;
t541 = -t447 * t657 + t448 * t655 + t706;
t22 = t518 * t877 + t541 * t520;
t23 = t542 * t518 - t520 * t876;
t24 = t541 * t518 - t520 * t877;
t88 = -t572 - t762;
t89 = -t238 * t781 - t649;
t34 = t369 * t89 - t370 * t88 + t697;
t108 = t110 * qJD(1);
t90 = -t237 * t780 - t755;
t91 = -t238 * t780 + t754;
t35 = t369 * t91 - t370 * t90 + t108;
t538 = qJD(1) * t334 - t447 * t643 + t448 * t642;
t48 = t518 * t869 + t538 * t520;
t49 = t538 * t518 - t520 * t869;
t544 = t904 * t369 - t905 * t370 + (-t336 + t339) * qJD(1);
t524 = -t447 * t863 + t544 * t448;
t62 = t447 * t654 + t448 * t656;
t63 = t447 * t655 + t448 * t657;
t549 = (qJD(1) * t48 + qJDD(1) * t110 - t21 * t370 + t219 * t91 + t22 * t369 + t220 * t90) * t847 + (t518 * t63 - t520 * t62 + (t112 * t518 + t113 * t520) * qJD(1)) * t840 + (t518 * t559 + t520 * t524) * t857 + (t518 * t524 - t520 * t559) * t854 + (qJD(1) * t49 + qJDD(1) * t109 + t219 * t89 + t220 * t88 - t23 * t370 + t24 * t369) * t846 + (t544 * t447 + t448 * t863) * t841 + t34 * t665 + t35 * t664 + (-t21 * t520 + t22 * t518 + (t518 * t90 + t520 * t91) * qJD(1)) * t856 + (t518 * t91 - t520 * t90) * t861 + (t518 * t89 - t520 * t88) * t860 + (-t23 * t520 + t24 * t518 + (t518 * t88 + t520 * t89) * qJD(1)) * t855 + (-t112 * t520 + t113 * t518) * t830;
t548 = t31 * t648 + t59 * t640;
t547 = t564 + t621;
t543 = t901 * t414 - t902 * t415 + (-t354 + t357) * qJD(1);
t540 = qJD(1) * t262 - t458 * t652 + t459 * t650;
t539 = -t458 * t653 + t459 * t651 + t705;
t537 = qJD(1) * t352 - t458 * t637 + t459 * t636;
t121 = -t520 * t581 + t790;
t130 = t265 * t459 + t267 * t458;
t26 = t518 * t874 + t540 * t520;
t27 = t518 * t875 + t539 * t520;
t28 = t540 * t518 - t520 * t874;
t29 = t539 * t518 - t520 * t875;
t96 = -t571 - t761;
t97 = -t265 * t777 - t647;
t42 = t414 * t97 - t415 * t96 + t696;
t111 = t121 * qJD(1);
t98 = -t264 * t776 - t752;
t99 = -t265 * t776 + t751;
t43 = t414 * t99 - t415 * t98 + t111;
t523 = -t458 * t862 + t543 * t459;
t64 = t518 * t868 + t537 * t520;
t65 = t537 * t518 - t520 * t868;
t69 = t458 * t650 + t459 * t652;
t70 = t458 * t651 + t459 * t653;
t526 = (-t28 * t520 + t29 * t518 + (t518 * t96 + t520 * t97) * qJD(1)) * t849 + (-t26 * t520 + t27 * t518 + (t518 * t98 + t520 * t99) * qJD(1)) * t850 + (t518 * t70 - t520 * t69 + (t129 * t518 + t130 * t520) * qJD(1)) * t840 + (qJD(1) * t65 + qJDD(1) * t120 - t28 * t415 + t29 * t414 + t306 * t97 + t307 * t96) * t846 + (t518 * t97 - t520 * t96) * t858 + (t518 * t99 - t520 * t98) * t859 + (t543 * t458 + t459 * t862) * t841 + (qJD(1) * t64 + qJDD(1) * t121 - t26 * t415 + t27 * t414 + t306 * t99 + t307 * t98) * t847 + t42 * t665 + (-t129 * t520 + t130 * t518) * t830 + t43 * t664 + (t518 * t523 - t520 * t558) * t848 + (t518 * t558 + t520 * t523) * t851 + t549;
t390 = t424 * qJD(2);
t333 = t382 * t520;
t309 = t520 * t342;
t308 = t518 * t342;
t285 = qJD(1) * t311;
t213 = -t374 + t309;
t212 = -t373 + t308;
t172 = t582 * qJD(2);
t103 = -t382 * t484 + (t433 - t735) * qJD(1) - t712;
t87 = qJD(2) * t586 + t743;
t86 = qJD(1) * t202 + qJDD(1) * t341 - t390 * t484 - t398 * t422 + t722;
t85 = -t390 * t698 + t399 * t422 + t727 * qJDD(1) + (-t203 - t393) * qJD(1);
t66 = t271 * t414 + t272 * t415 + t624;
t55 = qJD(1) * t168 + qJDD(1) * t299 - t351 * t484 - t382 * t398 + t529;
t20 = qJD(1) * t155 + qJDD(1) * t272 - t301 * t414 - t306 * t358 + t525;
t19 = -t301 * t415 + t307 * t358 + t622 * qJDD(1) + (-t156 + t685) * qJD(1) + t545;
t12 = t155 * t415 + t156 * t414 + t271 * t306 - t272 * t307 + t550;
t7 = t137 * t370 + t138 * t369 - t159 * t306 - t160 * t307 + t219 * t251 - t220 * t252 + t414 * t95 + t415 * t94 + t550;
t1 = [(m(2) * (t423 ^ 2 + t425 ^ 2) + t336 * t448 + t338 * t447 + Icges(2,3) + t354 * t459 + t356 * t458 - t936) * qJDD(1) + (-t937 * qJD(2) + t349 * t475 + t350 * t474 + t387 * t519 + t388 * t517 + t447 * t642 + t448 * t643 + t458 * t636 + t459 * t637) * qJD(1) + (((t520 * t880 + t879 + t910) * t520 + (t518 * t880 + t911 + t944) * t518) * qJD(2) + t919 - t920) * t663 + ((((t945 + t949) * t520 + t912 + t943 + t947) * t520 - t879 * t518) * qJD(2) + t921) * t660 + (t110 + t113) * t861 + (t109 + t112) * t860 + (t121 + t130) * t859 + (t120 + t129) * t858 + (t48 + t63) * t856 + (t62 + t49 + t35) * t855 + (t70 + t64) * t850 + (-t696 + (t99 - t571 - t751) * t415 + (t518 * t641 - t215 + t98) * t414 + ((t263 + t590) * t414 + t641 * t415) * t520 + t42) * t851 + (-t697 + (t91 - t572 - t754) * t370 + (t518 * t644 - t204 + t90) * t369 + ((t236 + t592) * t369 + t644 * t370) * t520 + t34) * t857 + (t177 * (t473 + t713) + (t422 * t802 - t800) * qJD(2) + ((-pkin(1) - t424) * t801 + (t176 * (-rSges(3,3) - pkin(6)) + t177 * t666) * t518) * qJD(1) - (-qJD(1) * t340 - t176 - t405 - t671) * t177 + (t86 - g(2)) * t256 + (t85 - g(1)) * (t666 * t518 + t509 + t711)) * m(3) + (t914 + t917) * t662 + (-t915 + t916 + t918) * t661 + (t108 + (t89 + (t237 * t520 + t238 * t518) * t447 + t649 + t755) * t370 + (-t239 * t779 + t762 + t88 + (t237 * t518 - t238 * t520) * t447 + t754) * t369) * t854 + (t111 + (t97 + (t264 * t520 + t265 * t518) * t458 + t647 + t752) * t415 + (-t266 * t774 + t761 + t96 + (t264 * t518 - t265 * t520) * t458 + t751) * t414) * t848 + (t906 + t908) * t853 + (t907 + t909) * t852 + (t78 * (t483 - t633) + t79 * (t719 + t553) + (-t319 * t79 + t518 * t831) * t512 + ((-t78 * rSges(5,3) + t79 * (-t389 - t443)) * t518 + (t78 * (-t389 - t882) - t79 * t511) * t520) * qJD(1) - (-qJD(1) * t271 + t546 - t78 + t878) * t79 + (t20 - g(2)) * (-t511 * t518 + t272 + t362) + (t19 - g(1)) * (-t271 - t725)) * m(5) + (t102 * t675 + t103 * (t482 + t718) + (t103 * t886 + t518 * t803) * qJD(2) + ((-t102 * rSges(4,3) + t103 * (-t468 - t456)) * t518 + (t102 * (-t468 - t881) - t103 * t516) * t520) * qJD(1) - (-qJD(1) * t298 - t102 + t561 + t885) * t103 + (t55 - g(2)) * (t299 + t632) + t922 * (-t298 - t714)) * m(4) + (t69 + t65 + t43) * t849 - m(2) * (-g(1) * t423 + g(2) * t425) + (t58 * (-t518 * t276 + t483) + t59 * (t250 + t482 + t721) + (-t293 * t59 + t343 * t832) * t476 + ((t58 * (t573 + t834) - t59 * t485) * t520 + (t58 * (t485 - rSges(6,3)) + t59 * t573) * t518) * qJD(1) - (qJD(1) * t758 + t536 - t58 + t878) * t59 + (t11 - g(2)) * (t252 + t303 - t766) + (t10 - g(1)) * (-t251 + t731)) * m(6); t526 + t927 * t853 + t926 * t852 + (qJD(1) * t917 + qJD(2) * t893 + qJDD(1) * t908 + t398 * t910 + t399 * t911) * t847 + (qJD(1) * t916 + qJD(2) * t894 + qJDD(1) * t909 + t398 * t912 + t399 * t913) * t846 + ((t556 * t474 + t475 * t864 + t555 * t517 + t519 * t865) * qJD(2) + (t474 * t724 + t475 * t723 + t517 * t716 + t519 * t715) * qJD(1)) * t841 + (t915 * t520 + t914 * t518 + (t518 * t907 + t520 * t906) * qJD(1)) * t840 + (t518 * t906 - t520 * t907) * t830 + t919 * t665 + t918 * t664 + ((-t484 * t890 + t892) * t518 + ((t518 * t889 + t896) * qJD(2) + t895) * t520) * t663 + ((t518 * t911 + t520 * t910) * qJD(1) + t893) * t662 + ((t518 * t913 + t520 * t912) * qJD(1) + t894) * t661 + ((-t698 * t889 - t892) * t520 + ((t520 * t890 + t896) * qJD(2) + t895) * t518) * t660 + (-t31 * (t212 * t414 + t213 * t415 + t648 + t741) - (t610 * t457 + (t31 * t658 + t519 * t610) * pkin(2)) * qJD(2) - g(1) * (t309 - t293) - g(2) * (t308 - t292) - g(3) * (t620 + t710) + t7 * (t623 + t627) + t31 * (t574 + t575) + t887 * t557 * t520 + (t11 * t557 + t626 * t805) * t518 + (pkin(4) * t785 - t285 - t640 - (t213 - t687) * qJD(1) + t547 * t518) * t59 + (t218 - (-t212 + t292 - t310) * qJD(1) + t547 * t520 + t891 + t898) * t58) * m(6) + (t12 * (t623 + t747) + t66 * (t574 + t683) + (qJD(1) * t79 + t19) * t576 * t520 + (t20 * t576 + t79 * t560 + (t66 * t679 + t831) * qJD(1)) * t518 - g(1) * (t374 - t319) - g(2) * (t373 - t318) - g(3) * (t882 + t710) - t79 * (-qJD(1) * t687 + t285 + t635) - t66 * (t646 + t741) - (t609 * t457 + (t519 * t609 + t658 * t66) * pkin(2)) * qJD(2) + (qJD(1) * t310 + t560 * t520 - t629 + t891) * t78) * m(5) + (-(t102 * t332 + t103 * (-t333 - t687)) * qJD(1) - (t87 * pkin(2) * t658 + (-t102 * t884 - t87 * t333) * t520 + (-t103 * t884 - t87 * t332) * t518) * qJD(2) + t102 * (-pkin(2) * t669 - t351 * t520) + (qJD(2) * t595 + t298 * t398 + t399 * t735 + t682) * (t586 + t742) + t87 * (t595 + t681) + (t103 * t563 + t87 * t298) * t699 + (t55 * t563 + t103 * (-t351 - t686) + (t735 * t87 + t803) * qJD(1)) * t518 - g(3) * t884 - t563 * t842 + t922 * t886) * m(4) + (g(1) * t372 + g(2) * t371 - g(3) * t424 - (t176 * t371 - t800) * qJD(1) - (t172 * (-t371 * t518 - t372 * t520) + t594 * t424) * qJD(2) + (qJD(2) * t593 + t340 * t398 - t341 * t399) * t582 + t172 * ((t340 * t520 - t341 * t518) * qJD(1) + t593) + t594 * t390 + (-t86 * t518 - t85 * t520 + (-t177 * t520 + t802) * qJD(1)) * t422) * m(3); (-m(4) - m(5) - m(6)) * (g(1) * t518 - g(2) * t520) + 0.2e1 * (t10 * t847 + t11 * t846) * m(6) + 0.2e1 * (t19 * t847 + t20 * t846) * m(5) + 0.2e1 * (t54 * t847 + t55 * t846) * m(4); t526 + (-(-t59 * t785 + (-t59 * t699 + t31 * (-t414 * t518 - t415 * t520)) * t458) * pkin(4) - t548 + t7 * t627 + t31 * t575 + (t59 * t621 - t757 * t805) * t518 - g(3) * t620 + (t520 * t621 - t400 - t630 + t898) * t58 + (t888 - t842 + (-g(1) + t887) * t520) * (-t343 - t843)) * m(6) + (t12 * t747 + t609 * t301 + (-t19 * t520 - t20 * t518 + (t518 * t78 - t520 * t79) * qJD(1)) * t358 - t629 * t78 - t635 * t79 + g(1) * t319 + g(2) * t318 - g(3) * t882 + (-t272 * t700 - t646 + t683) * t66) * m(5); t549 + (t7 * t748 + t31 * (-t252 * t700 + t684) + t610 * t249 + (-t10 * t520 - t888 + (-t520 * t59 + t832) * qJD(1)) * t343 - t58 * t630 - t548 + g(1) * t293 + g(2) * t292 - g(3) * t883) * m(6);];
tau = t1;
