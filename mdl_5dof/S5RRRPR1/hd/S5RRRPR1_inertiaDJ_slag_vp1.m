% Calculate time derivative of joint inertia matrix for
% S5RRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% MqD [5x5]
%   time derivative of inertia matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:39
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Mq = S5RRRPR1_inertiaDJ_slag_vp11(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR1_inertiaDJ_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR1_inertiaDJ_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR1_inertiaDJ_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRPR1_inertiaDJ_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRPR1_inertiaDJ_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRPR1_inertiaDJ_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From inertia_joint_joint_time_derivative_floatb_twist_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:37:48
% EndTime: 2019-12-05 18:38:12
% DurationCPUTime: 13.00s
% Computational Cost: add. (16405->651), mult. (14224->874), div. (0->0), fcn. (11130->10), ass. (0->379)
t282 = sin(qJ(1));
t284 = cos(qJ(1));
t280 = qJ(2) + qJ(3);
t264 = pkin(9) + t280;
t254 = sin(t264);
t255 = cos(t264);
t338 = Icges(5,5) * t255 - Icges(5,6) * t254;
t172 = Icges(5,3) * t282 + t284 * t338;
t267 = sin(t280);
t268 = cos(t280);
t339 = Icges(4,5) * t268 - Icges(4,6) * t267;
t190 = Icges(4,3) * t282 + t284 * t339;
t510 = t172 + t190;
t218 = Icges(5,5) * t254 + Icges(5,6) * t255;
t224 = Icges(4,5) * t267 + Icges(4,6) * t268;
t503 = t218 + t224;
t450 = Icges(5,4) * t254;
t219 = Icges(5,2) * t255 + t450;
t449 = Icges(5,4) * t255;
t220 = Icges(5,1) * t254 + t449;
t452 = Icges(4,4) * t267;
t225 = Icges(4,2) * t268 + t452;
t451 = Icges(4,4) * t268;
t226 = Icges(4,1) * t267 + t451;
t509 = t219 * t254 - t220 * t255 + t225 * t267 - t226 * t268;
t257 = qJ(5) + t264;
t250 = sin(t257);
t458 = rSges(6,2) * t250;
t251 = cos(t257);
t464 = rSges(6,1) * t251;
t352 = -t458 + t464;
t164 = t282 * rSges(6,3) + t284 * t352;
t271 = t282 * rSges(5,3);
t465 = rSges(5,1) * t255;
t353 = -rSges(5,2) * t254 + t465;
t180 = t284 * t353 + t271;
t272 = t282 * rSges(4,3);
t466 = rSges(4,1) * t268;
t354 = -rSges(4,2) * t267 + t466;
t197 = t284 * t354 + t272;
t171 = -Icges(5,3) * t284 + t282 * t338;
t189 = -Icges(4,3) * t284 + t282 * t339;
t342 = -Icges(5,2) * t254 + t449;
t173 = -Icges(5,6) * t284 + t282 * t342;
t347 = Icges(5,1) * t255 - t450;
t175 = -Icges(5,5) * t284 + t282 * t347;
t330 = t173 * t254 - t175 * t255;
t490 = t284 * t330;
t343 = -Icges(4,2) * t267 + t451;
t191 = -Icges(4,6) * t284 + t282 * t343;
t348 = Icges(4,1) * t268 - t452;
t193 = -Icges(4,5) * t284 + t282 * t348;
t328 = t191 * t267 - t193 * t268;
t491 = t284 * t328;
t508 = t490 + t491 + (-t171 - t189) * t282;
t192 = Icges(4,6) * t282 + t284 * t343;
t194 = Icges(4,5) * t282 + t284 * t348;
t327 = t192 * t267 - t194 * t268;
t174 = Icges(5,6) * t282 + t284 * t342;
t176 = Icges(5,5) * t282 + t284 * t347;
t329 = t174 * t254 - t176 * t255;
t507 = (-t327 - t329) * t284 + t510 * t282;
t277 = qJD(2) + qJD(3);
t186 = t342 * t277;
t187 = t347 * t277;
t201 = t343 * t277;
t202 = t348 * t277;
t424 = t226 * t277;
t425 = t225 * t277;
t426 = t220 * t277;
t427 = t219 * t277;
t502 = (t202 - t425) * t268 + (-t201 - t424) * t267 + (t187 - t427) * t255 + (-t186 - t426) * t254 + t503 * qJD(1);
t285 = -pkin(7) - pkin(6);
t281 = sin(qJ(2));
t390 = qJD(2) * t281;
t384 = pkin(2) * t390;
t500 = qJD(1) * t285 + t384;
t499 = (t338 + t339) * t277 + t509 * qJD(1);
t457 = rSges(6,2) * t251;
t217 = rSges(6,1) * t250 + t457;
t263 = qJD(5) + t277;
t314 = t217 * t263;
t459 = rSges(5,2) * t255;
t221 = rSges(5,1) * t254 + t459;
t313 = t221 * t277;
t283 = cos(qJ(2));
t243 = rSges(3,1) * t281 + rSges(3,2) * t283;
t311 = qJD(2) * t243;
t498 = t282 * t311;
t453 = Icges(3,4) * t283;
t345 = -Icges(3,2) * t281 + t453;
t208 = Icges(3,6) * t282 + t284 * t345;
t454 = Icges(3,4) * t281;
t350 = Icges(3,1) * t283 - t454;
t210 = Icges(3,5) * t282 + t284 * t350;
t325 = t208 * t281 - t210 * t283;
t497 = t282 * t325;
t496 = t282 * t327;
t495 = t282 * t329;
t447 = Icges(6,4) * t251;
t341 = -Icges(6,2) * t250 + t447;
t155 = Icges(6,6) * t282 + t284 * t341;
t448 = Icges(6,4) * t250;
t346 = Icges(6,1) * t251 - t448;
t157 = Icges(6,5) * t282 + t284 * t346;
t331 = t155 * t250 - t157 * t251;
t494 = t282 * t331;
t258 = t283 * pkin(2) + pkin(1);
t469 = pkin(1) - t258;
t493 = t282 * t469;
t207 = -Icges(3,6) * t284 + t282 * t345;
t209 = -Icges(3,5) * t284 + t282 * t350;
t326 = t207 * t281 - t209 * t283;
t492 = t284 * t326;
t154 = -Icges(6,6) * t284 + t282 * t341;
t156 = -Icges(6,5) * t284 + t282 * t346;
t332 = t154 * t250 - t156 * t251;
t489 = t284 * t332;
t337 = Icges(6,5) * t251 - Icges(6,6) * t250;
t152 = -Icges(6,3) * t284 + t282 * t337;
t488 = qJD(1) * t152;
t487 = qJD(1) * t171;
t486 = qJD(1) * t189;
t340 = Icges(3,5) * t283 - Icges(3,6) * t281;
t205 = -Icges(3,3) * t284 + t282 * t340;
t212 = Icges(6,2) * t251 + t448;
t213 = Icges(6,1) * t250 + t447;
t324 = t212 * t250 - t213 * t251;
t485 = qJD(1) * t324 + t337 * t263;
t276 = -qJ(4) + t285;
t399 = t276 - t285;
t256 = pkin(3) * t268;
t233 = t256 + t258;
t406 = t233 - t258;
t139 = t282 * t406 + t284 * t399;
t269 = -pkin(8) + t276;
t400 = t269 - t276;
t472 = pkin(4) * t255;
t204 = t233 + t472;
t409 = t204 - t233;
t109 = t282 * t409 + t284 * t400;
t482 = 2 * m(3);
t481 = 2 * m(4);
t480 = 2 * m(5);
t479 = 2 * m(6);
t278 = t282 ^ 2;
t279 = t284 ^ 2;
t478 = t282 / 0.2e1;
t477 = -t284 / 0.2e1;
t476 = m(3) * t243;
t461 = rSges(4,2) * t268;
t227 = rSges(4,1) * t267 + t461;
t475 = m(4) * t227;
t474 = pkin(2) * t281;
t473 = pkin(3) * t267;
t471 = t282 * pkin(6);
t275 = t284 * pkin(6);
t429 = t212 * t263;
t84 = qJD(1) * t155 - t282 * t429;
t369 = t156 * t263 + t84;
t428 = t213 * t263;
t86 = qJD(1) * t157 - t282 * t428;
t371 = t154 * t263 - t86;
t153 = Icges(6,3) * t282 + t284 * t337;
t397 = qJD(1) * t153;
t40 = -t152 * t284 - t282 * t332;
t41 = -t153 * t284 - t494;
t422 = t251 * t263;
t423 = t250 * t263;
t211 = Icges(6,5) * t250 + Icges(6,6) * t251;
t308 = t263 * t211;
t81 = -t284 * t308 - t488;
t82 = -t282 * t308 + t397;
t83 = -qJD(1) * t154 - t284 * t429;
t85 = -qJD(1) * t156 - t284 * t428;
t2 = (t284 * t82 + (t41 + t489) * qJD(1)) * t284 + (t40 * qJD(1) + (-t155 * t422 - t157 * t423 - t250 * t83 + t251 * t85 + t397) * t282 + (-t81 + t371 * t251 + t369 * t250 + (-t152 - t331) * qJD(1)) * t284) * t282;
t470 = t284 * t2;
t468 = -pkin(6) - t285;
t467 = rSges(3,1) * t283;
t463 = rSges(3,2) * t281;
t456 = rSges(3,3) * t284;
t273 = t282 * rSges(3,3);
t455 = rSges(6,3) - t269;
t203 = t354 * t277;
t434 = t203 * t282;
t433 = t207 * t283;
t432 = t208 * t283;
t431 = t209 * t281;
t430 = t210 * t281;
t421 = t254 * t277;
t420 = t255 * t277;
t419 = t263 * t284;
t418 = t267 * t277;
t417 = t268 * t277;
t416 = t269 * t282;
t415 = t277 * t282;
t414 = t277 * t284;
t223 = t284 * t233;
t244 = t284 * t258;
t140 = -t282 * t399 + t223 - t244;
t413 = t282 * t139 + t284 * t140;
t412 = -t140 - t180;
t163 = -rSges(6,3) * t284 + t282 * t352;
t89 = t282 * t163 + t284 * t164;
t183 = t284 * t285 + t275 - t493;
t184 = -t284 * pkin(1) + t282 * t468 + t244;
t411 = t282 * t183 + t284 * t184;
t196 = -t284 * rSges(4,3) + t282 * t354;
t111 = t282 * t196 + t284 * t197;
t393 = qJD(1) * t282;
t377 = t267 * t393;
t239 = pkin(3) * t377;
t410 = t221 * t393 + t239;
t222 = -pkin(3) * t418 - t384;
t214 = t284 * t222;
t265 = qJD(4) * t282;
t408 = t214 + t265;
t392 = qJD(1) * t284;
t407 = rSges(6,3) * t392 + t393 * t458;
t378 = t254 * t393;
t405 = rSges(5,2) * t378 + rSges(5,3) * t392;
t404 = rSges(4,2) * t377 + rSges(4,3) * t392;
t247 = t276 * t393;
t266 = qJD(4) * t284;
t403 = t247 + t266;
t402 = t500 * t282;
t401 = t284 * t467 + t273;
t398 = t278 + t279;
t396 = qJD(1) * t172;
t395 = qJD(1) * t190;
t206 = Icges(3,3) * t282 + t284 * t340;
t394 = qJD(1) * t206;
t389 = qJD(2) * t283;
t368 = t157 * t263 + t83;
t370 = -t155 * t263 + t85;
t42 = t152 * t282 - t489;
t43 = t153 * t282 - t284 * t331;
t388 = t282 * ((t282 * t81 + (t42 + t494) * qJD(1)) * t282 + (t43 * qJD(1) + (t154 * t422 + t156 * t423 + t250 * t84 - t251 * t86 - t488) * t284 + (-t82 + t370 * t251 - t368 * t250 + (t153 - t332) * qJD(1)) * t282) * t284) + (t282 * t41 - t284 * t40) * t393 + (t282 * t43 - t284 * t42) * t392;
t359 = t284 * t384;
t387 = t139 * t392 + t282 * (t222 * t282 + t392 * t406 + t402 - t403) + t284 * (-qJD(1) * t139 + t359 + t408);
t386 = t163 * t392 + t282 * (qJD(1) * t164 - t282 * t314) + t284 * (-t419 * t457 + (-t250 * t419 - t251 * t393) * rSges(6,1) + t407);
t385 = t284 * t463;
t383 = pkin(2) * t389;
t312 = t227 * t277;
t382 = t282 * (qJD(1) * t197 - t282 * t312) + t284 * (-t414 * t461 + (-t267 * t414 - t268 * t393) * rSges(4,1) + t404) + t196 * t392;
t198 = t284 * t204;
t110 = -t282 * t400 + t198 - t223;
t381 = -t110 - t140 - t164;
t380 = t282 * ((-t284 * t469 - t471) * qJD(1) - t402) + t284 * (-t359 + (t284 * t468 + t493) * qJD(1)) + t183 * t392;
t379 = pkin(4) * t378 + t217 * t393 + t239;
t376 = t281 * t393;
t375 = t393 / 0.2e1;
t374 = t392 / 0.2e1;
t373 = -t227 - t474;
t372 = -t221 - t473;
t99 = qJD(1) * t174 - t282 * t427;
t367 = t175 * t277 + t99;
t98 = -qJD(1) * t173 - t284 * t427;
t366 = t176 * t277 + t98;
t100 = -qJD(1) * t175 - t284 * t426;
t365 = -t174 * t277 + t100;
t101 = qJD(1) * t176 - t282 * t426;
t364 = t173 * t277 - t101;
t114 = -qJD(1) * t191 - t284 * t425;
t363 = t194 * t277 + t114;
t115 = qJD(1) * t192 - t282 * t425;
t362 = t193 * t277 + t115;
t116 = -qJD(1) * t193 - t284 * t424;
t361 = -t192 * t277 + t116;
t117 = qJD(1) * t194 - t282 * t424;
t360 = t191 * t277 - t117;
t179 = -rSges(5,3) * t284 + t282 * t353;
t35 = t282 * t179 + t284 * t180 + t413;
t195 = t353 * t277;
t358 = -pkin(3) * t417 - t195;
t357 = -pkin(4) * t254 - t473;
t356 = t388 - t470;
t355 = -t463 + t467;
t315 = -t204 - t352;
t94 = t282 * t315 + t284 * t455;
t95 = t164 + t198 - t416;
t351 = t282 * t95 + t284 * t94;
t349 = Icges(3,1) * t281 + t453;
t344 = Icges(3,2) * t283 + t454;
t318 = -t217 + t357;
t294 = t318 - t474;
t120 = t294 * t282;
t121 = t294 * t284;
t336 = t120 * t282 + t121 * t284;
t125 = t318 * t282;
t126 = t318 * t284;
t335 = t125 * t282 + t126 * t284;
t321 = t179 * t392 + t282 * (qJD(1) * t180 - t282 * t313) + t284 * (-t414 * t459 + (-t254 * t414 - t255 * t393) * rSges(5,1) + t405) + t387;
t320 = -pkin(1) - t355;
t319 = t372 - t474;
t317 = -t258 - t354;
t316 = -t233 - t353;
t15 = t282 * t109 + t284 * t110 + t413 + t89;
t303 = t277 * t224;
t302 = t277 * t218;
t301 = qJD(2) * t349;
t300 = qJD(2) * t344;
t299 = qJD(2) * (-Icges(3,5) * t281 - Icges(3,6) * t283);
t159 = t341 * t263;
t160 = t346 * t263;
t289 = qJD(1) * t211 + (t160 - t429) * t251 + (-t159 - t428) * t250;
t298 = (t250 * t370 + t251 * t368 + t282 * t485 + t289 * t284) * t478 + (-t250 * t371 + t251 * t369 + t289 * t282 - t284 * t485) * t477 + (t154 * t251 + t156 * t250 - t211 * t284 - t282 * t324) * t375 + (t155 * t251 + t157 * t250 + t211 * t282 - t284 * t324) * t374;
t142 = t319 * t284;
t112 = -t284 * t303 - t486;
t113 = -t282 * t303 + t395;
t51 = -t171 * t284 - t282 * t330;
t52 = -t172 * t284 - t495;
t55 = -t189 * t284 - t282 * t328;
t56 = -t190 * t284 - t496;
t96 = -t284 * t302 - t487;
t97 = -t282 * t302 + t396;
t297 = t388 + ((-t51 - t55) * t393 + t508 * t392) * t284 + (((t96 + t112) * t282 + (t495 + t496 - t508) * qJD(1)) * t282 + (t52 + t56) * t393 + t507 * t392 + ((-t366 * t254 + t365 * t255 - t363 * t267 + t361 * t268 - t113 - t97) * t282 + (-t101 * t255 + t115 * t267 - t117 * t268 + t173 * t420 + t175 * t421 + t191 * t417 + t193 * t418 + t254 * t99 - t486 - t487) * t284 + ((-t330 - t328 + t510) * t282 + t507) * qJD(1)) * t284) * t282;
t161 = t352 * t263;
t296 = -t161 + (-t472 - t256) * t277;
t295 = t358 - t383;
t170 = t277 * t357 - t384;
t147 = t284 * t170;
t293 = t109 * t392 + t282 * (t247 + (t170 - t222) * t282 + (t284 * t409 - t416) * qJD(1)) + t284 * (-qJD(1) * t109 + t147 - t214) + t386 + t387;
t292 = rSges(3,2) * t376 + rSges(3,3) * t392 - t284 * t311;
t291 = t296 - t383;
t4 = (t284 * t97 + (t52 + t490) * qJD(1)) * t284 + (t51 * qJD(1) + (t100 * t255 - t174 * t420 - t176 * t421 - t254 * t98 + t396) * t282 + (-t96 + t364 * t255 + t367 * t254 + (-t171 - t329) * qJD(1)) * t284) * t282;
t7 = (t284 * t113 + (t56 + t491) * qJD(1)) * t284 + (t55 * qJD(1) + (-t114 * t267 + t116 * t268 - t192 * t417 - t194 * t418 + t395) * t282 + (-t112 + t360 * t268 + t362 * t267 + (-t189 - t327) * qJD(1)) * t284) * t282;
t290 = (-t2 - t4 - t7) * t284 + t297;
t286 = t298 + (t254 * t365 + t255 * t366 + t267 * t361 + t268 * t363 + t499 * t282 + t502 * t284) * t478 + (-t254 * t364 + t255 * t367 - t267 * t360 + t268 * t362 + t502 * t282 - t499 * t284) * t477 + (t173 * t255 + t175 * t254 + t191 * t268 + t193 * t267 - t282 * t509 - t503 * t284) * t375 + (t174 * t255 + t176 * t254 + t192 * t268 + t194 * t267 + t503 * t282 - t284 * t509) * t374;
t249 = pkin(2) * t376;
t232 = t355 * qJD(2);
t216 = -t385 + t401;
t215 = t282 * t355 - t456;
t182 = t373 * t284;
t181 = t373 * t282;
t167 = t471 + (pkin(1) - t463) * t284 + t401;
t166 = t282 * t320 + t275 + t456;
t151 = t372 * t284;
t150 = t372 * t282;
t141 = t319 * t282;
t138 = -t282 * t285 + t197 + t244;
t137 = (rSges(4,3) - t285) * t284 + t317 * t282;
t132 = t282 * t299 + t394;
t131 = -qJD(1) * t205 + t284 * t299;
t123 = -t282 * t276 + t180 + t223;
t122 = (rSges(5,3) - t276) * t284 + t316 * t282;
t119 = t498 + ((-rSges(3,3) - pkin(6)) * t282 + t320 * t284) * qJD(1);
t118 = (t275 + (-pkin(1) - t467) * t282) * qJD(1) + t292;
t103 = -t227 * t392 - t434 + (-t281 * t392 - t282 * t389) * pkin(2);
t102 = t227 * t393 + t249 + (-t203 - t383) * t284;
t78 = -t221 * t392 - t195 * t282 + (-t267 * t392 - t268 * t415) * pkin(3);
t77 = t284 * t358 + t410;
t74 = t206 * t282 - t325 * t284;
t73 = t205 * t282 - t492;
t72 = -t206 * t284 - t497;
t71 = -t205 * t284 - t282 * t326;
t70 = t227 * t415 + (t284 * t317 - t272) * qJD(1) + t402;
t69 = (-t258 - t466) * t393 + (-t312 - t500) * t284 + t404;
t62 = qJD(1) * t142 + t282 * t295;
t61 = t284 * t295 + t249 + t410;
t50 = qJD(1) * t126 + t282 * t296;
t49 = t284 * t296 + t379;
t48 = (-t222 + t313) * t282 + (t284 * t316 - t271) * qJD(1) + t403;
t47 = -t284 * t313 + (-t284 * t276 + (-t233 - t465) * t282) * qJD(1) + t405 + t408;
t46 = t111 + t411;
t39 = qJD(1) * t121 + t282 * t291;
t38 = t284 * t291 + t249 + t379;
t37 = t266 + (-t170 + t314) * t282 + (-t282 * t455 + t284 * t315) * qJD(1);
t36 = t147 + t265 - t284 * t314 + (-t269 * t284 + (-t204 - t464) * t282) * qJD(1) + t407;
t34 = -t197 * t393 + t382;
t29 = t35 + t411;
t26 = -t164 * t393 + t386;
t12 = (-t184 - t197) * t393 + t380 + t382;
t11 = t15 + t411;
t10 = t393 * t412 + t321;
t9 = (-t184 + t412) * t393 + t321 + t380;
t8 = t381 * t393 + t293;
t5 = (-t184 + t381) * t393 + t293 + t380;
t1 = [t213 * t422 + t250 * t160 - t212 * t423 + t251 * t159 + (t122 * t48 + t123 * t47) * t480 + (t36 * t95 + t37 * t94) * t479 + t226 * t417 + t267 * t202 - t225 * t418 + t268 * t201 + t220 * t420 + t254 * t187 - t219 * t421 + t255 * t186 + (t137 * t70 + t138 * t69) * t481 + (t118 * t167 + t119 * t166) * t482 + (t350 - t344) * t390 + (t349 + t345) * t389; (-qJD(2) * t326 + (qJD(1) * t208 - t282 * t300) * t283 + (qJD(1) * t210 - t282 * t301) * t281) * t477 + (-qJD(2) * t325 + (-qJD(1) * t207 - t284 * t300) * t283 + (-qJD(1) * t209 - t284 * t301) * t281) * t478 + ((t432 / 0.2e1 + t430 / 0.2e1 - t167 * t476) * t284 + (t166 * t476 + t433 / 0.2e1 + t431 / 0.2e1) * t282) * qJD(1) + m(3) * ((-t118 * t282 - t119 * t284) * t243 + (-t166 * t284 - t167 * t282) * t232) + t286 + (t279 / 0.2e1 + t278 / 0.2e1) * t340 * qJD(2) + m(4) * (t102 * t137 + t103 * t138 + t181 * t69 + t182 * t70) + m(5) * (t122 * t61 + t123 * t62 + t141 * t47 + t142 * t48) + m(6) * (t120 * t36 + t121 * t37 + t38 * t94 + t39 * t95); t282 * ((t282 * t131 + (t73 + t497) * qJD(1)) * t282 + (t74 * qJD(1) + (t207 * t389 + t209 * t390) * t284 + (-t132 + (-t430 - t432) * qJD(2) + (t206 - t326) * qJD(1)) * t282) * t284) + t297 - t284 * ((t284 * t132 + (t72 + t492) * qJD(1)) * t284 + (t71 * qJD(1) + (-t208 * t389 - t210 * t390 + t394) * t282 + (-t131 + (t431 + t433) * qJD(2) - t325 * qJD(1)) * t284) * t282) + (t11 * t5 + t120 * t39 + t121 * t38) * t479 + (t141 * t62 + t142 * t61 + t29 * t9) * t480 + (t102 * t182 + t103 * t181 + t12 * t46) * t481 + (t282 * t72 - t284 * t71) * t393 + (t282 * t74 - t284 * t73) * t392 + ((t215 * t282 + t216 * t284) * ((qJD(1) * t215 + t292) * t284 + (-t498 + (-t216 - t385 + t273) * qJD(1)) * t282) + t398 * t243 * t232) * t482 - t470 - t284 * t4 - t284 * t7; m(5) * (t122 * t77 + t123 * t78 + t150 * t47 + t151 * t48) + m(6) * (t125 * t36 + t126 * t37 + t49 * t94 + t50 * t95) + t286 + (-t282 * t69 - t284 * t70 + (t137 * t282 - t138 * t284) * qJD(1)) * t475 + m(4) * (-t137 * t284 - t138 * t282) * t203; (-t102 * t284 - t103 * t282 + (-t181 * t284 + t182 * t282) * qJD(1)) * t475 + t290 + m(4) * (-t182 * t203 * t284 + t111 * t12 - t181 * t434 + t34 * t46) + m(6) * (t11 * t8 + t120 * t50 + t121 * t49 + t125 * t39 + t126 * t38 + t15 * t5) + m(5) * (t10 * t29 + t141 * t78 + t142 * t77 + t150 * t62 + t151 * t61 + t35 * t9); (t125 * t50 + t126 * t49 + t15 * t8) * t479 + (t10 * t35 + t150 * t78 + t151 * t77) * t480 + (t203 * t227 * t398 + t111 * t34) * t481 + t290; m(5) * (t282 * t48 - t284 * t47 + (t122 * t284 + t123 * t282) * qJD(1)) + m(6) * (qJD(1) * t351 + t282 * t37 - t284 * t36); m(6) * (qJD(1) * t336 + t282 * t38 - t284 * t39) + m(5) * (t282 * t61 - t284 * t62 + (t141 * t282 + t142 * t284) * qJD(1)); m(6) * (qJD(1) * t335 + t282 * t49 - t284 * t50) + m(5) * (t282 * t77 - t284 * t78 + (t150 * t282 + t151 * t284) * qJD(1)); 0; m(6) * (-t351 * t161 + (-t282 * t36 - t284 * t37 + (t282 * t94 - t284 * t95) * qJD(1)) * t217) + t298; m(6) * (t11 * t26 + t5 * t89 - t336 * t161 + (-t282 * t39 - t284 * t38 + (-t120 * t284 + t121 * t282) * qJD(1)) * t217) + t356; m(6) * (t15 * t26 + t8 * t89 - t335 * t161 + (-t282 * t50 - t284 * t49 + (-t125 * t284 + t126 * t282) * qJD(1)) * t217) + t356; 0; (t161 * t217 * t398 + t26 * t89) * t479 + t356;];
%% Postprocessing: Reshape Output
% From vec2symmat_5_matlab.m
res = [t1(1), t1(2), t1(4), t1(7), t1(11); t1(2), t1(3), t1(5), t1(8), t1(12); t1(4), t1(5), t1(6), t1(9), t1(13); t1(7), t1(8), t1(9), t1(10), t1(14); t1(11), t1(12), t1(13), t1(14), t1(15);];
Mq = res;
