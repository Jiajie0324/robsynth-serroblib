% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPPR10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:45
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPPR10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR10_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR10_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPPR10_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPPR10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPPR10_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:45:09
% EndTime: 2019-12-31 19:45:28
% DurationCPUTime: 19.61s
% Computational Cost: add. (47891->661), mult. (106884->790), div. (0->0), fcn. (69556->8), ass. (0->434)
t1253 = sin(pkin(8));
t1254 = cos(pkin(8));
t1256 = sin(qJ(2));
t1362 = qJD(1) * t1256;
t1208 = t1253 * qJD(2) + t1254 * t1362;
t1204 = t1208 ^ 2;
t1259 = cos(qJ(2));
t1251 = t1259 ^ 2;
t1261 = qJD(1) ^ 2;
t1246 = t1251 * t1261;
t1157 = t1246 + t1204;
t1206 = -t1254 * qJD(2) + t1253 * t1362;
t1164 = t1208 * t1206;
t1239 = qJD(2) * t1362;
t1321 = t1259 * qJDD(1);
t1217 = -t1239 + t1321;
t1394 = -t1164 + t1217;
t1344 = t1394 * t1254;
t1090 = t1157 * t1253 + t1344;
t1329 = t1259 * qJD(1);
t1240 = qJD(2) * t1329;
t1323 = t1256 * qJDD(1);
t1216 = t1240 + t1323;
t1183 = t1253 * qJDD(2) + t1254 * t1216;
t1313 = t1206 * t1329;
t1272 = t1183 + t1313;
t1045 = t1090 * t1259 + t1256 * t1272;
t1345 = t1394 * t1253;
t1075 = t1157 * t1254 - t1345;
t1257 = sin(qJ(1));
t1260 = cos(qJ(1));
t1473 = pkin(5) * (t1045 * t1260 - t1075 * t1257);
t1472 = pkin(5) * (t1045 * t1257 + t1075 * t1260);
t1039 = t1090 * t1256 - t1259 * t1272;
t1471 = pkin(1) * t1039;
t1470 = pkin(6) * t1039;
t1469 = pkin(1) * t1075 + pkin(6) * t1045;
t1375 = t1206 ^ 2;
t1187 = t1375 - t1246;
t1095 = t1187 * t1254 + t1345;
t1192 = t1208 * t1329;
t1306 = -t1254 * qJDD(2) + t1253 * t1216;
t1140 = -t1306 - t1192;
t1050 = t1095 * t1259 + t1140 * t1256;
t1089 = t1187 * t1253 - t1344;
t1466 = t1050 * t1257 - t1089 * t1260;
t1465 = t1050 * t1260 + t1089 * t1257;
t1346 = t1272 * t1253;
t1409 = t1192 - t1306;
t1350 = t1409 * t1254;
t1058 = t1346 - t1350;
t1392 = t1204 - t1375;
t1036 = t1058 * t1259 - t1256 * t1392;
t1351 = t1409 * t1253;
t1055 = t1254 * t1272 + t1351;
t1464 = t1036 * t1257 + t1055 * t1260;
t1463 = t1036 * t1260 - t1055 * t1257;
t1391 = t1204 + t1375;
t1292 = -t1183 + t1313;
t1418 = t1140 * t1254 - t1292 * t1253;
t1435 = t1256 * t1418 + t1259 * t1391;
t1461 = pkin(1) * t1435;
t1460 = pkin(2) * t1075;
t1433 = -t1256 * t1391 + t1259 * t1418;
t1459 = pkin(6) * t1433;
t1458 = pkin(6) * t1435;
t1457 = qJ(3) * t1075;
t1456 = qJ(3) * t1090;
t1044 = t1095 * t1256 - t1140 * t1259;
t1188 = t1204 - t1246;
t1395 = -t1164 - t1217;
t1343 = t1395 * t1253;
t1423 = -t1188 * t1254 + t1343;
t1342 = t1395 * t1254;
t1422 = t1188 * t1253 + t1342;
t1434 = -t1256 * t1292 + t1259 * t1422;
t1451 = t1257 * t1434 - t1260 * t1423;
t1450 = t1257 * t1423 + t1260 * t1434;
t1419 = t1140 * t1253 + t1292 * t1254;
t1449 = pkin(5) * (t1257 * t1433 - t1260 * t1419);
t1448 = pkin(5) * (t1257 * t1419 + t1260 * t1433);
t1390 = -t1375 - t1246;
t1407 = t1254 * t1390 - t1343;
t1420 = t1256 * t1407 + t1259 * t1409;
t1447 = pkin(1) * t1420;
t1446 = pkin(2) * t1419;
t1445 = pkin(6) * t1420;
t1444 = t1409 * pkin(3);
t1443 = qJ(3) * t1419;
t1408 = t1253 * t1390 + t1342;
t1417 = -t1256 * t1409 + t1259 * t1407;
t1438 = -pkin(1) * t1408 + pkin(6) * t1417;
t1437 = pkin(2) * t1391 + qJ(3) * t1418;
t1034 = t1058 * t1256 + t1259 * t1392;
t1436 = t1256 * t1422 + t1259 * t1292;
t1432 = pkin(5) * (t1257 * t1417 - t1260 * t1408);
t1431 = pkin(5) * (t1257 * t1408 + t1260 * t1417);
t1429 = pkin(2) * t1408;
t1428 = qJ(3) * t1408;
t1421 = pkin(2) * t1409 + qJ(3) * t1407;
t1255 = sin(qJ(5));
t1258 = cos(qJ(5));
t1153 = -t1258 * t1206 + t1208 * t1255;
t1155 = t1255 * t1206 + t1258 * t1208;
t1083 = t1155 * t1153;
t1209 = qJDD(5) + t1217;
t1397 = -t1083 + t1209;
t1415 = t1255 * t1397;
t1412 = t1258 * t1397;
t1305 = t1253 * t1313;
t1118 = t1254 * t1306 + t1305;
t1264 = t1253 * t1306 - t1254 * t1313;
t1315 = t1256 * t1164;
t1380 = t1259 * t1264 - t1315;
t1406 = t1118 * t1260 + t1257 * t1380;
t1405 = -t1118 * t1257 + t1260 * t1380;
t1184 = t1254 * t1192;
t1129 = t1184 + t1305;
t1276 = (t1206 * t1254 - t1208 * t1253) * t1329;
t1332 = t1256 * t1217;
t1379 = t1259 * t1276 - t1332;
t1404 = -t1129 * t1260 + t1257 * t1379;
t1403 = t1129 * t1257 + t1260 * t1379;
t1226 = t1257 * g(1) - t1260 * g(2);
t1199 = qJDD(1) * pkin(1) + t1261 * pkin(6) + t1226;
t1293 = t1216 + t1240;
t1104 = -t1293 * qJ(3) + (-t1217 + t1239) * pkin(2) - t1199;
t1227 = t1260 * g(1) + t1257 * g(2);
t1200 = -t1261 * pkin(1) + qJDD(1) * pkin(6) - t1227;
t1178 = -t1256 * g(3) + t1259 * t1200;
t1370 = pkin(2) * t1259;
t1298 = -qJ(3) * t1256 - t1370;
t1214 = t1298 * qJD(1);
t1376 = qJD(2) ^ 2;
t1116 = -t1376 * pkin(2) + qJDD(2) * qJ(3) + t1214 * t1329 + t1178;
t1309 = -t1254 * t1104 + t1253 * t1116;
t1278 = t1217 * pkin(3) - qJ(4) * t1246 + qJDD(4) + t1309;
t1158 = t1206 * pkin(3) - t1208 * qJ(4);
t1327 = (2 * qJD(3)) + t1158;
t975 = t1217 * pkin(4) + t1292 * pkin(7) + (pkin(4) * t1206 + t1327) * t1208 + t1278;
t1285 = pkin(4) * t1329 - pkin(7) * t1208;
t1325 = t1253 * t1104 + t1254 * t1116;
t1288 = -pkin(3) * t1246 - t1217 * qJ(4) - t1206 * t1158 + t1325;
t1361 = qJD(3) * t1206;
t1196 = -0.2e1 * t1361;
t1318 = qJD(4) * t1329;
t1393 = t1196 - 0.2e1 * t1318;
t995 = t1288 + t1393;
t987 = -pkin(4) * t1375 + pkin(7) * t1306 - t1285 * t1329 + t995;
t928 = t1255 * t987 - t1258 * t975;
t929 = t1255 * t975 + t1258 * t987;
t901 = t1255 * t929 - t1258 * t928;
t1398 = (qJD(1) * t1214 + t1200) * t1256;
t1063 = -t1153 * qJD(5) + t1258 * t1183 + t1255 * t1306;
t1235 = qJD(5) + t1329;
t1136 = t1235 * t1153;
t1396 = -t1136 + t1063;
t1374 = pkin(3) + pkin(4);
t1308 = t1255 * t1183 - t1258 * t1306;
t1023 = (qJD(5) - t1235) * t1155 + t1308;
t1027 = t1136 + t1063;
t982 = -t1023 * t1255 - t1027 * t1258;
t984 = -t1023 * t1258 + t1027 * t1255;
t1389 = qJ(4) * t984 - t1374 * t982;
t902 = t1255 * t928 + t1258 * t929;
t1388 = qJ(4) * t902 - t1374 * t901;
t1369 = t1259 * g(3);
t1282 = -qJDD(2) * pkin(2) - t1376 * qJ(3) + qJDD(3) + t1369;
t1274 = t1183 * qJ(4) - t1282 + t1444;
t1333 = t1256 * t1200;
t1387 = -(qJ(4) * t1206 * t1259 - t1214 * t1256) * qJD(1) - t1274 + t1333;
t1151 = t1153 ^ 2;
t1233 = t1235 ^ 2;
t1080 = -t1233 - t1151;
t1003 = t1080 * t1255 + t1412;
t1004 = t1080 * t1258 - t1415;
t1386 = qJ(4) * t1004 - t1374 * t1003 + t928;
t1359 = qJD(4) * t1208;
t1005 = -0.2e1 * t1359 + t1387;
t1319 = pkin(3) * t1254 + pkin(2);
t1311 = t1327 * t1208;
t997 = t1311 + t1278;
t951 = t1253 * t997 + t1254 * t995;
t1385 = -t1005 * (qJ(4) * t1253 + t1319) + qJ(3) * t951;
t1152 = t1155 ^ 2;
t1112 = -t1152 - t1233;
t1065 = t1083 + t1209;
t1358 = t1065 * t1255;
t1006 = t1112 * t1258 - t1358;
t1357 = t1065 * t1258;
t1007 = -t1112 * t1255 - t1357;
t1384 = qJ(4) * t1007 - t1374 * t1006 + t929;
t1121 = t1183 * t1253 - t1184;
t1122 = t1183 * t1254 + t1253 * t1192;
t1290 = t1259 * t1122 + t1315;
t1383 = -t1260 * t1121 + t1257 * t1290;
t1201 = t1259 * t1217;
t1382 = t1256 * t1276 + t1201;
t1314 = t1259 * t1164;
t1381 = t1256 * t1264 + t1314;
t1378 = t1121 * t1257 + t1260 * t1290;
t1195 = 0.2e1 * t1359;
t998 = t1195 - t1398 + (t1272 + t1313) * qJ(4) + t1274;
t1377 = t1253 * t998 + t1272 * t1319 - t1456;
t1373 = pkin(7) * t901;
t1372 = pkin(7) * t902;
t1371 = pkin(2) * t1256;
t991 = pkin(4) * t1306 + pkin(7) * t1375 - t1208 * t1285 + t1005;
t1364 = t1255 * t991;
t990 = t1258 * t991;
t1363 = qJD(1) * qJD(2);
t1360 = qJD(3) * t1208;
t1115 = t1282 + t1398;
t1356 = t1115 * t1253;
t1355 = t1115 * t1254;
t1339 = t1199 * t1256;
t1338 = t1199 * t1259;
t1337 = t1235 * t1155;
t1336 = t1235 * t1255;
t1335 = t1235 * t1258;
t1250 = t1256 ^ 2;
t1334 = t1250 * t1261;
t1234 = t1259 * t1261 * t1256;
t1224 = -t1234 + qJDD(2);
t1331 = t1256 * t1224;
t1225 = qJDD(2) + t1234;
t1330 = t1256 * t1225;
t1328 = t1259 * t1224;
t1324 = t1250 + t1251;
t1322 = t1257 * qJDD(1);
t1320 = t1260 * qJDD(1);
t1317 = t1256 * t1083;
t1316 = t1259 * t1083;
t1033 = t1196 + t1325;
t1312 = -pkin(7) * t1006 - t990;
t1032 = t1309 + 0.2e1 * t1360;
t986 = t1032 * t1253 + t1254 * t1033;
t1177 = t1333 + t1369;
t1107 = t1177 * t1256 + t1259 * t1178;
t1307 = -t1226 * t1257 - t1260 * t1227;
t1304 = t1257 * t1234;
t1303 = t1260 * t1234;
t1301 = -pkin(3) * t997 + qJ(4) * t995;
t1221 = -t1257 * t1261 + t1320;
t1300 = -pkin(5) * t1221 - g(3) * t1257;
t1299 = -pkin(2) * t1115 + qJ(3) * t986;
t1297 = pkin(3) * t1292 + qJ(4) * t1140;
t1296 = -pkin(7) * t1003 - t1364;
t1295 = -pkin(7) * t1004 - t990;
t1294 = -pkin(7) * t1007 + t1364;
t1291 = t1256 * t1122 - t1314;
t985 = -t1032 * t1254 + t1033 * t1253;
t1106 = t1177 * t1259 - t1178 * t1256;
t1287 = t1226 * t1260 - t1227 * t1257;
t1284 = -pkin(7) * t982 - t901;
t1283 = -pkin(7) * t984 - t902;
t1279 = -t1355 + t1421;
t1277 = -pkin(2) * t1272 + t1356 + t1456;
t1275 = t1437 + t986;
t886 = t1253 * t901 + t1254 * t902;
t891 = -t1374 * t991 - t1372;
t898 = -qJ(4) * t991 - t1373;
t1271 = -pkin(2) * t991 + qJ(3) * t886 + t1253 * t898 + t1254 * t891;
t1022 = (qJD(5) + t1235) * t1155 + t1308;
t914 = t1374 * t1022 + t1295;
t935 = qJ(4) * t1022 + t1296;
t959 = t1003 * t1253 + t1004 * t1254;
t1270 = pkin(2) * t1022 + qJ(3) * t959 + t1253 * t935 + t1254 * t914;
t918 = t1374 * t1396 + t1294;
t937 = qJ(4) * t1396 + t1312;
t967 = t1006 * t1253 + t1007 * t1254;
t1269 = pkin(2) * t1396 + qJ(3) * t967 + t1253 * t937 + t1254 * t918;
t1051 = -t1151 - t1152;
t890 = t1374 * t1051 + t1283;
t893 = qJ(4) * t1051 + t1284;
t933 = t1253 * t982 + t1254 * t984;
t1268 = pkin(2) * t1051 + qJ(3) * t933 + t1253 * t893 + t1254 * t890;
t999 = t1195 - t1387 + t1444;
t1267 = qJ(4) * t1351 + t1254 * t999 + t1421;
t988 = pkin(3) * t1391 + t995;
t989 = qJ(4) * t1391 + t997;
t1266 = t1253 * t989 + t1254 * t988 + t1437;
t1265 = pkin(3) * t1157 - qJ(4) * t1394 + t1288;
t1262 = -pkin(3) * t1395 - qJ(4) * t1390 + t1278;
t1232 = -t1246 - t1376;
t1231 = t1246 - t1376;
t1230 = -t1334 - t1376;
t1229 = -t1334 + t1376;
t1223 = -t1246 + t1334;
t1222 = t1246 + t1334;
t1220 = t1260 * t1261 + t1322;
t1219 = t1324 * qJDD(1);
t1218 = -0.2e1 * t1239 + t1321;
t1215 = 0.2e1 * t1240 + t1323;
t1212 = t1259 * t1225;
t1211 = t1324 * t1363;
t1193 = -pkin(5) * t1220 + t1260 * g(3);
t1182 = t1259 * t1216 - t1250 * t1363;
t1181 = -t1251 * t1363 - t1332;
t1176 = -t1256 * t1230 - t1328;
t1175 = -t1256 * t1229 + t1212;
t1174 = t1259 * t1232 - t1330;
t1173 = t1259 * t1231 - t1331;
t1172 = t1259 * t1230 - t1331;
t1171 = t1259 * t1229 + t1330;
t1170 = t1256 * t1232 + t1212;
t1169 = t1256 * t1231 + t1328;
t1168 = t1293 * t1256;
t1167 = -t1256 * t1240 + t1201;
t1160 = -t1256 * t1215 + t1259 * t1218;
t1159 = t1259 * t1215 + t1256 * t1218;
t1127 = -t1152 + t1233;
t1126 = t1151 - t1233;
t1124 = -pkin(6) * t1172 - t1338;
t1123 = -pkin(6) * t1170 - t1339;
t1114 = -pkin(1) * t1172 + t1178;
t1113 = -pkin(1) * t1170 + t1177;
t1103 = pkin(1) * t1218 + pkin(6) * t1174 + t1338;
t1102 = -pkin(1) * t1215 + pkin(6) * t1176 - t1339;
t1082 = t1152 - t1151;
t1081 = pkin(1) * t1199 + pkin(6) * t1107;
t1079 = pkin(1) * t1222 + pkin(6) * t1219 + t1107;
t1062 = -qJD(5) * t1155 - t1308;
t1053 = (-t1153 * t1258 + t1155 * t1255) * t1235;
t1052 = (-t1153 * t1255 - t1155 * t1258) * t1235;
t1038 = t1355 + t1457;
t1020 = t1126 * t1258 - t1358;
t1019 = -t1127 * t1255 + t1412;
t1018 = t1126 * t1255 + t1357;
t1017 = t1127 * t1258 + t1415;
t1016 = t1063 * t1258 - t1155 * t1336;
t1015 = t1063 * t1255 + t1155 * t1335;
t1014 = -t1062 * t1255 + t1153 * t1335;
t1013 = -t1062 * t1258 - t1153 * t1336;
t1012 = t1356 - t1428;
t1002 = -t1297 - t1446;
t1001 = t1052 * t1253 + t1053 * t1254;
t1000 = -t1052 * t1254 + t1053 * t1253;
t996 = t1033 + t1460;
t994 = t1001 * t1259 - t1209 * t1256;
t993 = t1001 * t1256 + t1209 * t1259;
t992 = t1032 - t1429;
t983 = -t1022 * t1258 - t1255 * t1396;
t981 = -t1022 * t1255 + t1258 * t1396;
t979 = t1018 * t1253 + t1020 * t1254;
t978 = t1017 * t1253 + t1019 * t1254;
t977 = -t1018 * t1254 + t1020 * t1253;
t976 = -t1017 * t1254 + t1019 * t1253;
t974 = t1015 * t1253 + t1016 * t1254;
t973 = -t1013 * t1253 + t1014 * t1254;
t972 = -t1015 * t1254 + t1016 * t1253;
t971 = t1013 * t1254 + t1014 * t1253;
t970 = -t1277 - t1471;
t966 = -t1006 * t1254 + t1007 * t1253;
t965 = -t1279 - t1447;
t964 = qJ(4) * t1350 - t1253 * t999 - t1428;
t963 = t1115 * t1256 + t1259 * t986;
t962 = -t1115 * t1259 + t1256 * t986;
t961 = -pkin(3) * t1346 + t1254 * t998 - t1457;
t960 = t1262 + t1311 - t1429;
t958 = -t1003 * t1254 + t1004 * t1253;
t957 = -t985 - t1443;
t956 = t1259 * t974 - t1317;
t955 = t1259 * t973 + t1317;
t954 = t1256 * t974 + t1316;
t953 = t1256 * t973 - t1316;
t952 = -t1265 + 0.2e1 * t1318 + 0.2e1 * t1361 - t1460;
t950 = t1253 * t995 - t1254 * t997;
t949 = t1023 * t1256 + t1259 * t979;
t948 = -t1027 * t1256 + t1259 * t978;
t947 = -t1023 * t1259 + t1256 * t979;
t946 = t1027 * t1259 + t1256 * t978;
t945 = -t1256 * t1396 + t1259 * t967;
t944 = t1256 * t967 + t1259 * t1396;
t943 = t1038 * t1259 - t1256 * t996 - t1470;
t942 = -t1267 - t1447;
t941 = -t1022 * t1256 + t1259 * t959;
t940 = t1022 * t1259 + t1256 * t959;
t939 = t1012 * t1259 - t1256 * t992 - t1445;
t938 = -t1377 + t1471;
t936 = t1038 * t1256 + t1259 * t996 + t1469;
t934 = -t1275 - t1461;
t932 = t1253 * t981 + t1254 * t983;
t931 = t1253 * t984 - t1254 * t982;
t930 = t1253 * t983 - t1254 * t981;
t925 = t1005 * t1256 + t1259 * t951;
t924 = -t1005 * t1259 + t1256 * t951;
t923 = t1012 * t1256 + t1259 * t992 + t1438;
t922 = -t1253 * t988 + t1254 * t989 - t1443;
t921 = t1259 * t957 + t1371 * t1419 - t1458;
t920 = -t1082 * t1256 + t1259 * t932;
t919 = t1082 * t1259 + t1256 * t932;
t917 = -pkin(1) * t962 - t1299;
t916 = -t1051 * t1256 + t1259 * t933;
t915 = t1051 * t1259 + t1256 * t933;
t913 = t1459 + t1256 * t957 + (-pkin(1) - t1370) * t1419;
t912 = -qJ(3) * t950 + (pkin(3) * t1253 - qJ(4) * t1254) * t1005;
t911 = -t1256 * t960 + t1259 * t964 - t1445;
t910 = -t1266 - t1461;
t909 = -pkin(2) * t950 - t1301;
t908 = -t1256 * t952 + t1259 * t961 + t1470;
t907 = t1256 * t964 + t1259 * t960 + t1438;
t906 = -pkin(6) * t962 + (-qJ(3) * t1259 + t1371) * t985;
t905 = -t1002 * t1256 + t1259 * t922 - t1458;
t904 = t1256 * t961 + t1259 * t952 - t1469;
t903 = -pkin(1) * t1419 + t1002 * t1259 + t1256 * t922 + t1459;
t900 = pkin(6) * t963 + (-pkin(1) + t1298) * t985;
t899 = -pkin(2) * t966 - t1384;
t897 = -pkin(2) * t931 - t1389;
t896 = -pkin(2) * t958 - t1386;
t895 = -pkin(1) * t924 - t1385;
t894 = -qJ(3) * t966 - t1253 * t918 + t1254 * t937;
t892 = -qJ(3) * t958 - t1253 * t914 + t1254 * t935;
t889 = -pkin(1) * t944 - t1269;
t888 = -pkin(6) * t924 - t1256 * t909 + t1259 * t912;
t887 = -pkin(1) * t940 - t1270;
t885 = t1253 * t902 - t1254 * t901;
t884 = t1256 * t991 + t1259 * t886;
t883 = t1256 * t886 - t1259 * t991;
t882 = -pkin(1) * t950 + pkin(6) * t925 + t1256 * t912 + t1259 * t909;
t881 = -pkin(6) * t944 - t1256 * t899 + t1259 * t894;
t880 = -pkin(1) * t966 + pkin(6) * t945 + t1256 * t894 + t1259 * t899;
t879 = -pkin(6) * t940 - t1256 * t896 + t1259 * t892;
t878 = -qJ(3) * t931 - t1253 * t890 + t1254 * t893;
t877 = -pkin(1) * t958 + pkin(6) * t941 + t1256 * t892 + t1259 * t896;
t876 = -pkin(1) * t915 - t1268;
t875 = -qJ(3) * t885 - t1253 * t891 + t1254 * t898;
t874 = -pkin(2) * t885 - t1388;
t873 = -pkin(6) * t915 - t1256 * t897 + t1259 * t878;
t872 = -pkin(1) * t931 + pkin(6) * t916 + t1256 * t878 + t1259 * t897;
t871 = -pkin(1) * t883 - t1271;
t870 = -pkin(6) * t883 - t1256 * t874 + t1259 * t875;
t869 = -pkin(1) * t885 + pkin(6) * t884 + t1256 * t875 + t1259 * t874;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1221, 0, -t1220, 0, t1300, -t1193, -t1287, -pkin(5) * t1287, t1182 * t1260 - t1304, t1160 * t1260 + t1223 * t1257, t1175 * t1260 + t1256 * t1322, t1181 * t1260 + t1304, t1173 * t1260 + t1257 * t1321, qJDD(2) * t1257 + t1211 * t1260, t1260 * t1123 - t1257 * t1113 - pkin(5) * (t1174 * t1257 + t1218 * t1260), t1260 * t1124 - t1257 * t1114 - pkin(5) * (t1176 * t1257 - t1215 * t1260), t1260 * t1106 - pkin(5) * (t1219 * t1257 + t1222 * t1260), -pkin(5) * (t1107 * t1257 + t1199 * t1260) - (pkin(1) * t1257 - pkin(6) * t1260) * t1106, t1378, -t1463, t1450, t1405, t1465, t1403, -t1257 * t965 + t1260 * t939 - t1432, -t1257 * t970 + t1260 * t943 - t1472, -t1257 * t934 + t1260 * t921 - t1449, t1260 * t906 - t1257 * t917 - pkin(5) * (t1257 * t963 - t1260 * t985), t1378, t1450, t1463, t1403, -t1465, t1405, -t1257 * t942 + t1260 * t911 - t1432, -t1257 * t910 + t1260 * t905 - t1449, -t1257 * t938 + t1260 * t908 + t1472, t1260 * t888 - t1257 * t895 - pkin(5) * (t1257 * t925 - t1260 * t950), t1257 * t972 + t1260 * t956, t1257 * t930 + t1260 * t920, t1257 * t976 + t1260 * t948, t1257 * t971 + t1260 * t955, t1257 * t977 + t1260 * t949, t1000 * t1257 + t1260 * t994, t1260 * t879 - t1257 * t887 - pkin(5) * (t1257 * t941 - t1260 * t958), t1260 * t881 - t1257 * t889 - pkin(5) * (t1257 * t945 - t1260 * t966), t1260 * t873 - t1257 * t876 - pkin(5) * (t1257 * t916 - t1260 * t931), t1260 * t870 - t1257 * t871 - pkin(5) * (t1257 * t884 - t1260 * t885); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1220, 0, t1221, 0, t1193, t1300, t1307, pkin(5) * t1307, t1182 * t1257 + t1303, t1160 * t1257 - t1223 * t1260, t1175 * t1257 - t1256 * t1320, t1181 * t1257 - t1303, t1173 * t1257 - t1259 * t1320, -qJDD(2) * t1260 + t1211 * t1257, t1257 * t1123 + t1260 * t1113 + pkin(5) * (t1174 * t1260 - t1218 * t1257), t1257 * t1124 + t1260 * t1114 + pkin(5) * (t1176 * t1260 + t1215 * t1257), t1257 * t1106 + pkin(5) * (t1219 * t1260 - t1222 * t1257), pkin(5) * (t1107 * t1260 - t1199 * t1257) - (-pkin(1) * t1260 - pkin(6) * t1257) * t1106, t1383, -t1464, t1451, t1406, t1466, t1404, t1257 * t939 + t1260 * t965 + t1431, t1257 * t943 + t1260 * t970 + t1473, t1257 * t921 + t1260 * t934 + t1448, t1257 * t906 + t1260 * t917 + pkin(5) * (t1257 * t985 + t1260 * t963), t1383, t1451, t1464, t1404, -t1466, t1406, t1257 * t911 + t1260 * t942 + t1431, t1257 * t905 + t1260 * t910 + t1448, t1257 * t908 + t1260 * t938 - t1473, t1257 * t888 + t1260 * t895 + pkin(5) * (t1257 * t950 + t1260 * t925), t1257 * t956 - t1260 * t972, t1257 * t920 - t1260 * t930, t1257 * t948 - t1260 * t976, t1257 * t955 - t1260 * t971, t1257 * t949 - t1260 * t977, -t1000 * t1260 + t1257 * t994, t1257 * t879 + t1260 * t887 + pkin(5) * (t1257 * t958 + t1260 * t941), t1257 * t881 + t1260 * t889 + pkin(5) * (t1257 * t966 + t1260 * t945), t1257 * t873 + t1260 * t876 + pkin(5) * (t1257 * t931 + t1260 * t916), t1257 * t870 + t1260 * t871 + pkin(5) * (t1257 * t885 + t1260 * t884); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1226, t1227, 0, 0, t1168, t1159, t1171, t1167, t1169, 0, t1103, t1102, t1079, t1081, t1291, -t1034, t1436, t1381, t1044, t1382, t923, t936, t913, t900, t1291, t1436, t1034, t1382, -t1044, t1381, t907, t903, t904, t882, t954, t919, t946, t953, t947, t993, t877, t880, t872, t869; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1261, 0, 0, -g(3), -t1226, 0, t1182, t1160, t1175, t1181, t1173, t1211, t1123, t1124, t1106, pkin(6) * t1106, t1290, -t1036, t1434, t1380, t1050, t1379, t939, t943, t921, t906, t1290, t1434, t1036, t1379, -t1050, t1380, t911, t905, t908, t888, t956, t920, t948, t955, t949, t994, t879, t881, t873, t870; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1261, 0, qJDD(1), 0, g(3), 0, -t1227, 0, t1234, -t1223, -t1323, -t1234, -t1321, -qJDD(2), t1113, t1114, 0, pkin(1) * t1106, -t1121, -t1055, -t1423, t1118, -t1089, -t1129, t965, t970, t934, t917, -t1121, -t1423, t1055, -t1129, t1089, t1118, t942, t910, t938, t895, -t972, -t930, -t976, -t971, -t977, -t1000, t887, t889, t876, t871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1226, t1227, 0, 0, t1168, t1159, t1171, t1167, t1169, 0, t1103, t1102, t1079, t1081, t1291, -t1034, t1436, t1381, t1044, t1382, t923, t936, t913, t900, t1291, t1436, t1034, t1382, -t1044, t1381, t907, t903, t904, t882, t954, t919, t946, t953, t947, t993, t877, t880, t872, t869; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1216, t1218, t1225, -t1240, t1231, t1240, 0, -t1199, t1177, 0, t1122, -t1058, t1422, t1264, t1095, t1276, t1012, t1038, t957, -qJ(3) * t985, t1122, t1422, t1058, t1276, -t1095, t1264, t964, t922, t961, t912, t974, t932, t978, t973, t979, t1001, t892, t894, t878, t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1239, t1215, t1229, t1217, t1224, -t1239, t1199, 0, t1178, 0, -t1164, -t1392, t1292, t1164, -t1140, t1217, t992, t996, -t1446, -pkin(2) * t985, -t1164, t1292, t1392, t1217, t1140, t1164, t960, t1002, t952, t909, t1083, t1082, t1027, -t1083, -t1023, t1209, t896, t899, t897, t874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1234, t1223, t1323, t1234, t1321, qJDD(2), -t1177, -t1178, 0, 0, t1121, t1055, t1423, -t1118, t1089, t1129, t1279, t1277, t1275, t1299, t1121, t1423, -t1055, t1129, -t1089, -t1118, t1267, t1266, t1377, t1385, t972, t930, t976, t971, t977, t1000, t1270, t1269, t1268, t1271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1183, t1409, t1395, -t1313, t1187, t1313, 0, t1115, t1032, 0, t1183, t1395, -t1409, t1313, -t1187, -t1313, qJ(4) * t1409, t989, t998, -qJ(4) * t1005, t1016, t983, t1019, t1014, t1020, t1053, t935, t937, t893, t898; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1192, t1272, -t1188, -t1306, -t1394, t1192, -t1115, 0, t1033, 0, -t1192, -t1188, -t1272, t1192, t1394, -t1306, t999, t988, pkin(3) * t1272, -pkin(3) * t1005, -t1015, -t981, -t1017, t1013, -t1018, -t1052, t914, t918, t890, t891; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1164, t1392, -t1292, -t1164, t1140, -t1217, -t1032, -t1033, 0, 0, t1164, -t1292, -t1392, -t1217, -t1140, -t1164, -t1208 * t1158 - t1262 - 0.2e1 * t1360, t1297, t1265 + t1393, t1301, -t1083, -t1082, -t1027, t1083, t1023, -t1209, t1386, t1384, t1389, t1388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1183, t1395, -t1409, t1313, -t1187, -t1313, 0, t997, -t1005, 0, t1016, t983, t1019, t1014, t1020, t1053, t1296, t1312, t1284, -t1373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1164, -t1292, -t1392, -t1217, -t1140, -t1164, -t997, 0, t995, 0, -t1083, -t1082, -t1027, t1083, t1023, -t1209, -pkin(4) * t1003 + t928, -pkin(4) * t1006 + t929, -pkin(4) * t982, -pkin(4) * t901; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1192, t1188, t1272, -t1192, -t1394, t1306, t1005, -t995, 0, 0, t1015, t981, t1017, -t1013, t1018, t1052, -pkin(4) * t1022 - t1295, -pkin(4) * t1396 - t1294, -pkin(4) * t1051 - t1283, pkin(4) * t991 + t1372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1063, -t1022, t1397, t1136, t1126, -t1136, 0, -t991, t928, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1337, t1396, t1127, t1062, t1065, -t1337, t991, 0, t929, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1083, t1082, t1027, -t1083, -t1023, t1209, -t928, -t929, 0, 0;];
m_new_reg = t1;
