% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:45
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPPR10_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR10_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR10_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPPR10_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:44:46
% EndTime: 2019-12-31 19:44:56
% DurationCPUTime: 5.90s
% Computational Cost: add. (4699->439), mult. (9940->617), div. (0->0), fcn. (9776->6), ass. (0->342)
t281 = sin(pkin(8));
t282 = cos(pkin(8));
t284 = sin(qJ(2));
t469 = cos(qJ(5));
t368 = t469 * t284;
t283 = sin(qJ(5));
t428 = t283 * t284;
t189 = -t281 * t368 + t282 * t428;
t369 = t469 * t282;
t223 = t283 * t281 + t369;
t191 = t223 * t284;
t370 = t469 * t281;
t429 = t283 * t282;
t227 = t370 - t429;
t479 = -t227 / 0.2e1;
t480 = -t223 / 0.2e1;
t69 = t189 * t479 + t191 * t480;
t495 = t69 * qJD(5);
t409 = qJD(2) * t227;
t494 = -qJD(1) * t69 + t223 * t409;
t413 = qJD(1) * t191;
t493 = -qJD(2) * t69 + t189 * t413;
t285 = cos(qJ(2));
t412 = qJD(1) * t285;
t342 = qJD(5) + t412;
t492 = t189 * t342;
t467 = t281 * pkin(6);
t375 = -pkin(3) - t467;
t315 = t282 * pkin(2) - t375;
t465 = -pkin(7) + qJ(3);
t491 = (t465 * t284 + pkin(1)) * t282 + (pkin(4) + t315) * t285;
t277 = t281 ^ 2;
t278 = t282 ^ 2;
t258 = t278 + t277;
t234 = t258 * qJ(3);
t389 = t234 * qJD(2);
t426 = t284 * qJ(3);
t328 = -pkin(2) * t285 - t426;
t312 = -pkin(1) + t328;
t436 = t281 * t285;
t173 = -pkin(6) * t436 + t282 * t312;
t432 = t282 * t285;
t268 = pkin(6) * t432;
t174 = t281 * t312 + t268;
t474 = t282 / 0.2e1;
t476 = -t281 / 0.2e1;
t307 = t173 * t476 + t174 * t474;
t466 = t285 * pkin(6);
t377 = t466 / 0.2e1;
t75 = t377 - t307;
t490 = -qJD(1) * t75 + t389;
t435 = t282 * qJ(4);
t330 = pkin(6) / 0.2e1 - t435 / 0.2e1;
t468 = t281 * pkin(3);
t290 = (t468 / 0.2e1 + t330) * t285;
t156 = -t285 * qJ(4) + t174;
t157 = -t282 * (-pkin(1) - t426) + t315 * t285;
t308 = -t156 * t282 / 0.2e1 + t157 * t476;
t53 = t290 + t308;
t489 = -qJD(1) * t53 + t389;
t385 = t284 * qJD(2);
t361 = t282 * t385;
t280 = t285 ^ 2;
t279 = t284 ^ 2;
t439 = t279 * t281;
t225 = -t280 * t281 + t439;
t392 = t225 * qJD(1);
t488 = t392 - t361;
t384 = t285 * qJD(2);
t487 = t189 ^ 2;
t486 = t191 ^ 2;
t485 = t223 ^ 2;
t484 = t227 ^ 2;
t483 = pkin(3) + pkin(4);
t482 = -t189 / 0.2e1;
t481 = t191 / 0.2e1;
t478 = t227 / 0.2e1;
t254 = t285 * t370;
t477 = t254 / 0.2e1;
t475 = t281 / 0.2e1;
t473 = -t283 / 0.2e1;
t472 = -t284 / 0.2e1;
t471 = t284 / 0.2e1;
t443 = t227 * t191;
t444 = t223 * t189;
t26 = -t443 - t444;
t470 = t26 * qJD(3);
t427 = t283 * t285;
t192 = t282 * t427 - t254;
t193 = t223 * t285;
t437 = t281 * t284;
t134 = pkin(7) * t437 + t156;
t58 = t134 * t283 - t469 * t491;
t59 = t469 * t134 + t491 * t283;
t462 = qJ(3) * t285;
t250 = t284 * pkin(2) - t462;
t120 = (-pkin(7) * t285 - t250) * t282 + (-pkin(4) + t375) * t284;
t373 = t469 * t120;
t433 = t282 * t284;
t178 = -pkin(6) * t433 + t281 * t250;
t158 = t284 * qJ(4) + t178;
t136 = pkin(7) * t436 + t158;
t430 = t283 * t136;
t62 = t373 - t430;
t372 = t469 * t136;
t431 = t283 * t120;
t63 = t372 + t431;
t6 = -t189 * t63 - t191 * t62 - t192 * t59 + t193 * t58;
t464 = t6 * qJD(1);
t343 = -pkin(6) + t435;
t298 = -t483 * t281 + t343;
t154 = t298 * t284;
t155 = t298 * t285;
t7 = t154 * t155 - t58 * t62 + t59 * t63;
t463 = t7 * qJD(1);
t374 = t285 * t469;
t15 = -t154 * t433 + t59 * t374 + t58 * t427;
t461 = qJD(1) * t15;
t16 = t189 * t59 - t191 * t58;
t460 = qJD(1) * t16;
t246 = t465 * t282;
t345 = t465 * t281;
t151 = t469 * t246 + t283 * t345;
t344 = qJ(4) * t281 + pkin(2);
t205 = t483 * t282 + t344;
t288 = -t151 * t285 / 0.2e1 + t154 * t478 + t205 * t481;
t293 = -t430 / 0.2e1 + t373 / 0.2e1;
t17 = -t288 + t293;
t459 = qJD(1) * t17;
t150 = t246 * t283 - t469 * t345;
t446 = t150 * t285;
t289 = t446 / 0.2e1 + t154 * t480 + t205 * t482;
t294 = -t431 / 0.2e1 - t372 / 0.2e1;
t18 = -t289 + t294;
t458 = qJD(1) * t18;
t381 = t469 / 0.2e1;
t331 = t223 * t381;
t442 = t227 * t285;
t353 = -t442 / 0.2e1;
t371 = t469 * t193;
t48 = t285 * t331 + t371 / 0.2e1 + (t353 + t192 / 0.2e1) * t283;
t457 = qJD(1) * t48;
t311 = -t343 + t468;
t184 = t311 * t284;
t232 = -pkin(3) * t282 - t344;
t60 = pkin(3) * t472 + (pkin(6) * t472 + t184 / 0.2e1) * t281 + (-t250 / 0.2e1 + t462 / 0.2e1 + t232 * t471) * t282;
t455 = qJD(1) * t60;
t71 = t156 * t437 - t157 * t433;
t454 = qJD(1) * t71;
t78 = (t173 * t282 + t174 * t281) * t284;
t452 = qJD(1) * t78;
t445 = t156 * t285;
t79 = t184 * t433 + t445;
t451 = qJD(1) * t79;
t87 = -t189 * t374 + t191 * t427;
t450 = qJD(1) * t87;
t99 = t189 * t284 - t192 * t285;
t449 = qJD(1) * t99;
t13 = t154 * t192 + t155 * t189 + t58 * t284 + t285 * t62;
t448 = t13 * qJD(1);
t14 = -t154 * t193 - t155 * t191 - t59 * t284 + t285 * t63;
t447 = t14 * qJD(1);
t434 = t282 * t250;
t159 = t375 * t284 - t434;
t185 = t311 * t285;
t24 = t156 * t158 + t157 * t159 + t184 * t185;
t441 = t24 * qJD(1);
t27 = -t157 * t432 - t159 * t433 + (t158 * t284 + t445) * t281;
t440 = t27 * qJD(1);
t28 = t154 * t189 - t285 * t58;
t438 = t28 * qJD(1);
t29 = t154 * t191 - t285 * t59;
t425 = t29 * qJD(1);
t383 = pkin(6) * t437;
t177 = t383 + t434;
t31 = (t173 * t285 + t177 * t284) * t282 + (t174 * t285 + t178 * t284) * t281;
t424 = t31 * qJD(1);
t318 = t184 * t285 + t185 * t284;
t32 = -t156 * t284 + t158 * t285 + t282 * t318;
t423 = t32 * qJD(1);
t33 = -t157 * t284 + t159 * t285 + t281 * t318;
t422 = t33 * qJD(1);
t40 = pkin(6) ^ 2 * t284 * t285 + t173 * t177 + t174 * t178;
t421 = t40 * qJD(1);
t65 = -t189 * t193 - t191 * t192;
t420 = t65 * qJD(1);
t73 = -t173 * t284 + (t177 - 0.2e1 * t383) * t285;
t419 = t73 * qJD(1);
t74 = t178 * t285 + (-t174 + 0.2e1 * t268) * t284;
t418 = t74 * qJD(1);
t417 = t285 * t369 / 0.2e1 + t427 * t475;
t332 = -t374 / 0.2e1;
t347 = -t427 / 0.2e1;
t416 = t281 * t347 + t282 * t332;
t264 = t280 - t279;
t100 = -t191 * t284 + t193 * t285;
t415 = qJD(1) * t100;
t414 = qJD(1) * t189;
t411 = (t277 - t278) * t384;
t410 = qJD(2) * t223;
t408 = qJD(2) * t281;
t407 = qJD(3) * t285;
t406 = qJD(4) * t281;
t405 = qJD(4) * t282;
t404 = qJD(4) * t285;
t403 = qJD(5) * t223;
t348 = -t429 / 0.2e1;
t112 = t477 + (t348 + t479) * t285;
t402 = t112 * qJD(1);
t113 = t477 + (t348 + t478) * t285;
t401 = t113 * qJD(1);
t354 = t193 / 0.2e1;
t114 = t354 + t417;
t400 = t114 * qJD(1);
t115 = t354 + t416;
t399 = t115 * qJD(1);
t144 = t189 * t433 + t280 * t283;
t398 = t144 * qJD(1);
t145 = t191 * t433 + t469 * t280;
t397 = t145 * qJD(1);
t396 = t189 * qJD(3);
t395 = t189 * qJD(5);
t394 = t191 * qJD(3);
t183 = t191 * qJD(5);
t221 = t258 * t279;
t393 = t221 * qJD(1);
t391 = t225 * qJD(2);
t226 = t264 * t282;
t212 = t226 * qJD(1);
t213 = t227 * qJD(5);
t390 = t232 * qJD(2);
t388 = t258 * qJD(2);
t387 = t264 * qJD(1);
t386 = t284 * qJD(1);
t382 = -t469 / 0.2e1;
t380 = pkin(1) * t386;
t379 = pkin(1) * t412;
t378 = pkin(6) * t384;
t376 = t62 * t469;
t366 = t189 * t412;
t365 = t191 * t412;
t364 = t282 * t386;
t362 = t282 * t408;
t360 = qJD(3) * t433;
t359 = t223 * t213;
t262 = t281 * t407;
t358 = t281 * t405;
t357 = t282 * t412;
t356 = t284 * t384;
t267 = t285 * t386;
t355 = -t193 / 0.2e1;
t352 = t189 * t475;
t351 = t191 * t475;
t350 = -t433 / 0.2e1;
t349 = t433 / 0.2e1;
t346 = qJD(5) * t469;
t341 = qJD(2) * t205 - qJD(3);
t340 = qJD(1) * t282 * t439;
t339 = t281 * t361;
t338 = t284 * t262;
t337 = t277 * t267;
t336 = t278 * t267;
t335 = t281 * t267;
t334 = t282 * t267;
t333 = qJD(1) * t374;
t329 = -t183 - t365;
t50 = -t150 * t227 + t151 * t223;
t286 = t150 * t481 + t151 * t482 + t58 * t478 + t59 * t480;
t287 = ((pkin(3) / 0.2e1 + pkin(4) / 0.2e1) * t281 + t330) * t285;
t9 = t287 + t286;
t327 = -qJD(1) * t9 + qJD(2) * t50;
t326 = t285 * t339;
t325 = t281 * t334;
t324 = -t232 * t285 + t426;
t64 = -t486 - t487;
t323 = qJD(1) * t64 + qJD(2) * t26;
t80 = -t484 - t485;
t322 = qJD(1) * t26 + qJD(2) * t80;
t39 = -t443 + t444;
t77 = -t486 + t487;
t321 = qJD(1) * t77 + qJD(2) * t39;
t320 = t158 * t282 + t159 * t281;
t319 = -t177 * t281 + t178 * t282;
t103 = -t484 + t485;
t317 = qJD(1) * t39 + qJD(2) * t103;
t295 = t223 * t473 + t227 * t382;
t108 = t476 + t295;
t296 = t189 * t473 + t191 * t382;
t82 = t350 + t296;
t316 = qJD(1) * t82 + qJD(2) * t108;
t314 = t410 + t414;
t313 = t409 + t413;
t310 = t282 * t347 + t477;
t297 = t154 * t475 + t205 * t349;
t12 = t151 * t332 - t376 / 0.2e1 + (-t446 / 0.2e1 - t63 / 0.2e1) * t283 + t297;
t306 = qJD(1) * t12 + t205 * t408;
t83 = t352 + (t223 * t474 + t381) * t284;
t301 = qJD(1) * t83 + t223 * t408;
t86 = t351 + (t227 * t474 + t473) * t284;
t300 = qJD(1) * t86 + t227 * t408;
t194 = (-0.1e1 / 0.2e1 + t277 / 0.2e1 - t278 / 0.2e1) * t284;
t299 = -qJD(1) * t194 + t362;
t219 = t364 + t408;
t236 = t278 * t279 + t280;
t292 = qJD(1) * t236 + t339;
t271 = -t385 / 0.2e1;
t247 = t258 * qJD(3);
t245 = t285 * t360;
t244 = t278 * t356;
t243 = t277 * t356;
t233 = t284 * t358;
t229 = t234 * qJD(3);
t218 = qJD(5) * t471 + t267;
t216 = -0.2e1 * t325;
t215 = 0.2e1 * t325;
t211 = t226 * qJD(2);
t206 = t221 * qJD(3);
t204 = qJD(2) * t277 + t281 * t364;
t195 = t277 * t472 + t278 * t471 + t472;
t187 = t219 * t285;
t186 = -t282 * t384 + t335;
t176 = (t278 * t386 + t362) * t285;
t175 = (t277 * t386 - t362) * t285;
t163 = t281 * t385 - t212;
t119 = t353 + t310;
t118 = t442 / 0.2e1 + t310;
t117 = t355 + t417;
t116 = t355 + t416;
t107 = t476 - t295;
t85 = t351 + t227 * t349 + t428 / 0.2e1;
t84 = t352 + t223 * t349 - t368 / 0.2e1;
t81 = t350 - t296;
t76 = t377 + t307;
t61 = -qJ(3) * t432 / 0.2e1 + t232 * t350 + t184 * t476 - t434 / 0.2e1 + (-t467 / 0.2e1 - pkin(3) / 0.2e1) * t284;
t54 = t290 - t308;
t47 = t192 * t473 - t371 / 0.2e1 + (t227 * t473 + t331) * t285;
t38 = t39 * qJD(5);
t20 = t288 + t293;
t19 = t289 + t294;
t11 = t63 * t283 / 0.2e1 + t376 / 0.2e1 + (t150 * t473 + t151 * t382) * t285 + t297;
t10 = t287 - t286;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, t264 * qJD(2), 0, -t356, 0, 0, -pkin(1) * t385, -pkin(1) * t384, 0, 0, t244, -0.2e1 * t326, -t211, t243, -t391, -t356, -qJD(2) * t73 + t245, t74 * qJD(2) - t338, -qJD(2) * t31 + t206, qJD(2) * t40 - qJD(3) * t78, t244, -t211, 0.2e1 * t326, -t356, t391, t243, qJD(2) * t33 - t279 * t358 + t245, -t27 * qJD(2) + t404 * t437 + t206, -t32 * qJD(2) + t236 * qJD(4) + t338, qJD(2) * t24 - qJD(3) * t71 - qJD(4) * t79, (qJD(2) * t193 - t395) * t191, qJD(2) * t65 + qJD(5) * t77, t100 * qJD(2) - t285 * t395, (qJD(2) * t192 + t183) * t189, t99 * qJD(2) - t183 * t285, -t356, t13 * qJD(2) + t144 * qJD(4) + t29 * qJD(5) + t285 * t394, -t14 * qJD(2) + t145 * qJD(4) - t28 * qJD(5) - t285 * t396, qJD(2) * t6 + qJD(3) * t64 - qJD(4) * t87, qJD(2) * t7 + qJD(3) * t16 - qJD(4) * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, t387, t384, -t267, -t385, 0, -t378 - t380, pkin(6) * t385 - t379, 0, 0, t176, t216 - t411, t163, t175, -t488, -t267, -t419 + (t281 * t328 - t268) * qJD(2) + t262, t281 * t378 + t418 + (qJD(2) * t328 + t407) * t282, qJD(2) * t319 - t424, t421 + (-pkin(2) * t466 + qJ(3) * t319) * qJD(2) + t76 * qJD(3), t176, t163, t215 + t411, -t267, t488, t175, t422 + (-t185 * t282 - t281 * t324) * qJD(2) + t262 + t195 * qJD(4), qJD(2) * t320 - t440, -t185 * t408 - t423 + t233 + (qJD(2) * t324 - t407) * t282, t441 + (qJ(3) * t320 + t185 * t232) * qJD(2) + t54 * qJD(3) + t61 * qJD(4), t193 * t313 + t495, t420 + (-t192 * t227 - t193 * t223) * qJD(2) + t38, qJD(5) * t117 - t227 * t385 + t415, t192 * t314 - t495, qJD(5) * t119 + t223 * t385 + t449, -t218, t448 + (t150 * t284 + t155 * t223 + t192 * t205) * qJD(2) + t118 * qJD(3) + t84 * qJD(4) + t20 * qJD(5), -t447 + (t151 * t284 + t155 * t227 + t193 * t205) * qJD(2) + t116 * qJD(3) + t85 * qJD(4) + t19 * qJD(5), t464 + (t150 * t193 - t151 * t192 - t223 * t63 - t227 * t62) * qJD(2) + t47 * qJD(4) + t470, t463 + (-t150 * t62 + t151 * t63 + t155 * t205) * qJD(2) + t10 * qJD(3) + t11 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t187, -t186, t393, qJD(2) * t76 - t452, 0, 0, 0, 0, 0, 0, t187, t393, t186, qJD(2) * t54 - t454, 0, 0, 0, 0, 0, 0, t118 * qJD(2) + t365, t116 * qJD(2) - t366, t323, qJD(2) * t10 + qJD(4) * t81 + t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t195 - t340, t335, t292, qJD(2) * t61 - t451, 0, 0, 0, 0, 0, 0, qJD(2) * t84 + t398, qJD(2) * t85 + t397, qJD(2) * t47 - t450, qJD(2) * t11 + qJD(3) * t81 - t461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t493, t321, t117 * qJD(2) - t492, t493, t119 * qJD(2) + t329, t271, qJD(2) * t20 - qJD(5) * t59 + t425, qJD(2) * t19 + qJD(5) * t58 - t438, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267, -t387, 0, t267, 0, 0, t380, t379, 0, 0, -t336, t215, t212, -t337, t392, t267, t419, -t418, t424, -qJD(3) * t75 - t421, -t336, t212, t216, t267, -t392, -t337, -qJD(4) * t194 - t422, -t282 * t404 + t440, t233 + t423, -qJD(3) * t53 - qJD(4) * t60 - t441, -t193 * t413 + t495, t38 - t420, -qJD(5) * t114 - t415, -t192 * t414 - t495, -qJD(5) * t113 - t449, t218, -qJD(3) * t112 + qJD(4) * t83 - qJD(5) * t17 - t448, -qJD(3) * t115 + qJD(4) * t86 - qJD(5) * t18 + t447, qJD(4) * t48 - t464 + t470, -qJD(3) * t9 + qJD(4) * t12 - t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t247, t229, 0, 0, 0, 0, 0, 0, t358, t247, t277 * qJD(4), -t232 * t406 + t229, -t359, t103 * qJD(5), 0, t359, 0, 0, t205 * t213 + t223 * t406, -t205 * t403 + t227 * t406, qJD(3) * t80, qJD(3) * t50 + t205 * t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t388, t490, 0, 0, 0, 0, 0, 0, 0, t388, 0, t489, 0, 0, 0, 0, 0, 0, -t402, -t399, t322, qJD(4) * t107 + t327; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t299, -t357, t204, -t281 * t390 - t455, 0, 0, 0, 0, 0, 0, t301, t300, t457, qJD(3) * t107 + t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t494, t317, -t400 - t403, t494, -t213 - t401, t386 / 0.2e1, -qJD(5) * t151 + t205 * t409 - t459, qJD(5) * t150 - t205 * t410 - t458, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334, t335, -t393, qJD(2) * t75 + t452, 0, 0, 0, 0, 0, 0, -t334, -t393, -t335, qJD(2) * t53 - t284 * t405 + t454, 0, 0, 0, 0, 0, 0, t112 * qJD(2) + t329, t115 * qJD(2) + t492, -t323, qJD(2) * t9 + qJD(4) * t82 - t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t388, -t490, 0, 0, 0, 0, 0, 0, 0, -t388, 0, -t406 - t489, 0, 0, 0, 0, 0, 0, -t213 + t402, t399 + t403, -t322, qJD(4) * t108 - t327; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313, t314, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t194 + t340, -t186, -t292, qJD(2) * t60 + t360 + t451, 0, 0, 0, 0, 0, 0, -t83 * qJD(2) - qJD(5) * t427 - t398, -t86 * qJD(2) - t285 * t346 - t397, -qJD(2) * t48 + t450, -qJD(2) * t12 - qJD(3) * t82 + t461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t299, t357, -t204, t455 + (qJD(3) + t390) * t281, 0, 0, 0, 0, 0, 0, -t301, -t300, -t457, -qJD(3) * t108 - t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t342 * t283, -t333 - t346, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t493, -t321, t114 * qJD(2) + t366, -t493, t113 * qJD(2) + t365, t271, t17 * qJD(2) + t283 * t404 + t394 - t425, t18 * qJD(2) + qJD(4) * t374 - t396 + t438, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, -t317, t400, -t494, t401, -t386 / 0.2e1, -t227 * t341 + t459, t223 * t341 + t458, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t313, -t314, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283 * t412, t333, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
