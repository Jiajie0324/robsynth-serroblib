% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:45
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPPR10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPPR10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:44:43
% EndTime: 2019-12-31 19:44:51
% DurationCPUTime: 2.75s
% Computational Cost: add. (1825->326), mult. (4212->478), div. (0->0), fcn. (4091->6), ass. (0->259)
t180 = sin(pkin(8));
t181 = cos(pkin(8));
t183 = sin(qJ(2));
t184 = cos(qJ(5));
t284 = t184 * t183;
t182 = sin(qJ(5));
t288 = t182 * t183;
t105 = -t180 * t284 + t181 * t288;
t185 = cos(qJ(2));
t245 = t185 * qJD(1);
t218 = qJD(5) + t245;
t331 = t105 * t218;
t176 = t180 ^ 2;
t177 = t181 ^ 2;
t159 = t177 + t176;
t136 = t159 * qJ(3);
t252 = t136 * qJD(2);
t322 = -t181 / 0.2e1;
t323 = t180 / 0.2e1;
t286 = t183 * qJ(3);
t211 = -t185 * pkin(2) - t286;
t138 = -pkin(1) + t211;
t294 = t180 * t185;
t167 = pkin(6) * t294;
t93 = t181 * t138 - t167;
t290 = t181 * t185;
t168 = pkin(6) * t290;
t94 = t180 * t138 + t168;
t197 = t94 * t322 + t93 * t323;
t316 = t185 * pkin(6);
t240 = t316 / 0.2e1;
t30 = t240 + t197;
t330 = -t30 * qJD(1) + t252;
t293 = t181 * qJ(4);
t317 = t180 * pkin(3);
t189 = (pkin(6) / 0.2e1 - t293 / 0.2e1 + t317 / 0.2e1) * t185;
t324 = -t180 / 0.2e1;
t85 = -t185 * qJ(4) + t94;
t174 = t185 * pkin(3);
t86 = t174 - t93;
t198 = t85 * t322 + t86 * t324;
t17 = t189 + t198;
t329 = -t17 * qJD(1) + t252;
t328 = pkin(3) + pkin(4);
t126 = t182 * t180 + t184 * t181;
t107 = t126 * t183;
t327 = -t107 / 0.2e1;
t289 = t182 * t181;
t129 = t184 * t180 - t289;
t326 = -t129 / 0.2e1;
t283 = t184 * t185;
t156 = t180 * t283;
t325 = t156 / 0.2e1;
t321 = t181 / 0.2e1;
t320 = -t183 / 0.2e1;
t319 = t183 / 0.2e1;
t318 = pkin(6) * t180;
t315 = -pkin(7) + qJ(3);
t287 = t182 * t185;
t108 = t181 * t287 - t156;
t186 = t185 * pkin(4) + t167 + t174 + (-pkin(7) * t183 - t138) * t181;
t295 = t180 * t183;
t67 = pkin(7) * t295 + t85;
t20 = t182 * t67 - t184 * t186;
t282 = t185 * qJ(3);
t152 = t183 * pkin(2) - t282;
t239 = -pkin(3) - t318;
t60 = (-pkin(7) * t185 - t152) * t181 + (-pkin(4) + t239) * t183;
t311 = t184 * t60;
t291 = t181 * t183;
t96 = -pkin(6) * t291 + t180 * t152;
t87 = t183 * qJ(4) + t96;
t68 = pkin(7) * t294 + t87;
t312 = t182 * t68;
t219 = -pkin(6) + t293;
t191 = -t328 * t180 + t219;
t83 = t191 * t183;
t84 = t191 * t185;
t1 = (t311 - t312) * t185 + t20 * t183 + t84 * t105 + t83 * t108;
t314 = t1 * qJD(1);
t313 = t182 * t60;
t310 = t184 * t68;
t109 = t126 * t185;
t21 = t182 * t186 + t184 * t67;
t2 = (t310 + t313) * t185 - t21 * t183 - t84 * t107 - t83 * t109;
t309 = t2 * qJD(1);
t220 = t180 * qJ(4) + pkin(2);
t117 = t328 * t181 + t220;
t147 = t315 * t180;
t148 = t315 * t181;
t80 = t182 * t147 + t184 * t148;
t187 = t117 * t327 + t80 * t185 / 0.2e1 + t83 * t326;
t199 = -t312 / 0.2e1 + t311 / 0.2e1;
t3 = t187 + t199;
t308 = t3 * qJD(1);
t79 = -t184 * t147 + t182 * t148;
t188 = t117 * t105 / 0.2e1 - t79 * t185 / 0.2e1 + t83 * t126 / 0.2e1;
t200 = -t313 / 0.2e1 - t310 / 0.2e1;
t4 = t188 + t200;
t307 = t4 * qJD(1);
t202 = -t219 + t317;
t100 = t202 * t183;
t101 = t202 * t185;
t292 = t181 * t152;
t88 = t239 * t183 - t292;
t7 = t100 * t101 + t85 * t87 + t86 * t88;
t306 = t7 * qJD(1);
t304 = t85 * t185;
t8 = -t86 * t290 - t88 * t291 + (t183 * t87 + t304) * t180;
t305 = t8 * qJD(1);
t9 = t83 * t105 - t20 * t185;
t303 = t9 * qJD(1);
t10 = t83 * t107 - t21 * t185;
t302 = t10 * qJD(1);
t243 = pkin(6) * t295;
t95 = t243 + t292;
t11 = (t183 * t95 + t185 * t93) * t181 + (t183 * t96 + t185 * t94) * t180;
t301 = t11 * qJD(1);
t205 = t100 * t185 + t101 * t183;
t12 = t181 * t205 - t85 * t183 + t87 * t185;
t300 = t12 * qJD(1);
t299 = t129 * t185;
t13 = t180 * t205 - t86 * t183 + t88 * t185;
t298 = t13 * qJD(1);
t285 = t183 * t185;
t16 = pkin(6) ^ 2 * t285 + t93 * t95 + t94 * t96;
t297 = t16 * qJD(1);
t134 = -t181 * pkin(3) - t220;
t22 = pkin(3) * t320 + (pkin(6) * t320 + t100 / 0.2e1) * t180 + (-t152 / 0.2e1 + t282 / 0.2e1 + t134 * t319) * t181;
t281 = t22 * qJD(1);
t24 = -t109 * t105 - t107 * t108;
t280 = t24 * qJD(1);
t27 = -t86 * t291 + t85 * t295;
t279 = t27 * qJD(1);
t28 = -t93 * t183 + (t95 - 0.2e1 * t243) * t185;
t278 = t28 * qJD(1);
t29 = t96 * t185 + (-t94 + 0.2e1 * t168) * t183;
t277 = t29 * qJD(1);
t33 = (t180 * t94 + t181 * t93) * t183;
t275 = t33 * qJD(1);
t34 = t100 * t291 + t304;
t274 = t34 * qJD(1);
t42 = t105 * t183 - t108 * t185;
t273 = t42 * qJD(1);
t43 = -t107 * t183 + t109 * t185;
t272 = t43 * qJD(1);
t222 = -t289 / 0.2e1;
t52 = t325 + (t222 + t326) * t185;
t271 = t52 * qJD(1);
t53 = t325 + (t222 + t129 / 0.2e1) * t185;
t270 = t53 * qJD(1);
t227 = t109 / 0.2e1;
t265 = t283 * t321 + t287 * t323;
t54 = t227 + t265;
t269 = t54 * qJD(1);
t221 = -t287 / 0.2e1;
t223 = -t290 / 0.2e1;
t264 = t180 * t221 + t184 * t223;
t55 = t227 + t264;
t268 = t55 * qJD(1);
t179 = t185 ^ 2;
t73 = t105 * t291 + t182 * t179;
t267 = t73 * qJD(1);
t74 = t107 * t291 + t184 * t179;
t266 = t74 * qJD(1);
t263 = qJD(3) * t185;
t262 = qJD(4) * t185;
t261 = qJD(5) * t185;
t260 = t105 * qJD(3);
t259 = t105 * qJD(5);
t258 = t107 * qJD(1);
t257 = t107 * qJD(3);
t99 = t107 * qJD(5);
t256 = t126 * qJD(2);
t255 = t126 * qJD(5);
t178 = t183 ^ 2;
t128 = t159 * t178;
t254 = t128 * qJD(1);
t253 = t129 * qJD(2);
t121 = t129 * qJD(5);
t251 = t159 * qJD(2);
t164 = t179 - t178;
t250 = t164 * qJD(1);
t249 = t180 * qJD(2);
t248 = t180 * qJD(4);
t247 = t183 * qJD(1);
t246 = t183 * qJD(2);
t244 = t185 * qJD(2);
t242 = pkin(1) * t247;
t241 = pkin(1) * t245;
t238 = t105 * t245;
t237 = t107 * t245;
t162 = t180 * t263;
t236 = t181 * t248;
t235 = t181 * t249;
t234 = t181 * t247;
t233 = qJD(3) * t291;
t232 = qJD(4) * t291;
t231 = t181 * t245;
t230 = t183 * t244;
t229 = t183 * t245;
t228 = -t109 / 0.2e1;
t226 = t105 * t323;
t225 = t107 * t323;
t224 = t291 / 0.2e1;
t217 = qJD(2) * t117 - qJD(3);
t216 = t181 * t178 * t180 * qJD(1);
t215 = t181 * t229;
t214 = t180 * t229;
t213 = t183 * t162;
t212 = -t99 - t237;
t210 = t88 * t180 + t87 * t181;
t209 = -t95 * t180 + t96 * t181;
t208 = -t134 * t185 + t286;
t15 = t126 * t105 - t129 * t107;
t32 = t105 ^ 2 - t107 ^ 2;
t207 = t32 * qJD(1) + t15 * qJD(2);
t46 = t126 ^ 2 - t129 ^ 2;
t206 = t15 * qJD(1) + t46 * qJD(2);
t204 = t105 * qJD(1) + t256;
t203 = t253 + t258;
t201 = t181 * t221 + t325;
t26 = t105 * t326 + t126 * t327;
t196 = -t26 * qJD(2) + t105 * t258;
t195 = -t26 * qJD(1) + t126 * t253;
t35 = t226 + (t126 * t321 + t184 / 0.2e1) * t183;
t194 = t35 * qJD(1) + t126 * t249;
t38 = t225 + (t129 * t321 - t182 / 0.2e1) * t183;
t193 = t38 * qJD(1) + t129 * t249;
t110 = (-0.1e1 / 0.2e1 + t176 / 0.2e1 - t177 / 0.2e1) * t183;
t192 = -t110 * qJD(1) + t235;
t125 = t234 + t249;
t139 = t177 * t178 + t179;
t190 = t139 * qJD(1) + t183 * t235;
t170 = -t246 / 0.2e1;
t149 = t159 * qJD(3);
t146 = t185 * t233;
t135 = t180 * t232;
t131 = t136 * qJD(3);
t124 = (t245 + qJD(5) / 0.2e1) * t183;
t118 = t128 * qJD(3);
t116 = t176 * qJD(2) + t180 * t234;
t111 = t176 * t320 + t177 * t319 + t320;
t103 = t125 * t185;
t102 = -t181 * t244 + t214;
t59 = -t299 / 0.2e1 + t201;
t58 = t299 / 0.2e1 + t201;
t57 = t228 + t265;
t56 = t228 + t264;
t37 = t225 + t129 * t224 + t288 / 0.2e1;
t36 = t226 + t126 * t224 - t284 / 0.2e1;
t31 = t240 - t197;
t25 = t26 * qJD(5);
t23 = qJ(3) * t223 - t134 * t291 / 0.2e1 + t100 * t324 - t292 / 0.2e1 + (-t318 / 0.2e1 - pkin(3) / 0.2e1) * t183;
t18 = t189 - t198;
t14 = t15 * qJD(5);
t6 = -t187 + t199;
t5 = -t188 + t200;
t19 = [0, 0, 0, t230, t164 * qJD(2), 0, 0, 0, -pkin(1) * t246, -pkin(1) * t244, -t28 * qJD(2) + t146, t29 * qJD(2) - t213, -t11 * qJD(2) + t118, t16 * qJD(2) - t33 * qJD(3), t13 * qJD(2) - t178 * t236 + t146, -t8 * qJD(2) + t248 * t285 + t118, -t12 * qJD(2) + t139 * qJD(4) + t213, t7 * qJD(2) - t27 * qJD(3) - t34 * qJD(4), (qJD(2) * t109 - t259) * t107, t24 * qJD(2) + t32 * qJD(5), t43 * qJD(2) - t185 * t259, t42 * qJD(2) - t185 * t99, -t230, t1 * qJD(2) + t73 * qJD(4) + t10 * qJD(5) + t185 * t257, -t2 * qJD(2) + t74 * qJD(4) - t9 * qJD(5) - t185 * t260; 0, 0, 0, t229, t250, t244, -t246, 0, -pkin(6) * t244 - t242, pkin(6) * t246 - t241, -t278 + (t211 * t180 - t168) * qJD(2) + t162, t277 + t167 * qJD(2) + (t211 * qJD(2) + t263) * t181, qJD(2) * t209 - t301, t297 + (-pkin(2) * t316 + qJ(3) * t209) * qJD(2) + t31 * qJD(3), t298 + (-t101 * t181 - t180 * t208) * qJD(2) + t162 + t111 * qJD(4), qJD(2) * t210 - t305, -t101 * t249 - t300 + t135 + (qJD(2) * t208 - t263) * t181, t306 + (qJ(3) * t210 + t101 * t134) * qJD(2) + t18 * qJD(3) + t23 * qJD(4), t109 * t203 + t25, t280 + (-t129 * t108 - t109 * t126) * qJD(2) + t14, t57 * qJD(5) - t129 * t246 + t272, t59 * qJD(5) + t126 * t246 + t273, -t124, t314 + (t117 * t108 + t84 * t126 + t79 * t183) * qJD(2) + t58 * qJD(3) + t36 * qJD(4) + t6 * qJD(5), -t309 + (t117 * t109 + t84 * t129 + t80 * t183) * qJD(2) + t56 * qJD(3) + t37 * qJD(4) + t5 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, -t102, t254, t31 * qJD(2) - t275, t103, t254, t102, t18 * qJD(2) - t279, 0, 0, 0, 0, 0, t58 * qJD(2) + t237, t56 * qJD(2) - t238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111 * qJD(2) - t216, t214, t190, t23 * qJD(2) - t274, 0, 0, 0, 0, 0, t36 * qJD(2) + t267, t37 * qJD(2) + t266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t196, t207, t57 * qJD(2) - t331, t59 * qJD(2) + t212, t170, t6 * qJD(2) - t21 * qJD(5) + t302, t5 * qJD(2) + t20 * qJD(5) - t303; 0, 0, 0, -t229, -t250, 0, 0, 0, t242, t241, t278, -t277, t301, -t30 * qJD(3) - t297, -t110 * qJD(4) - t298, -t181 * t262 + t305, t135 + t300, -t17 * qJD(3) - t22 * qJD(4) - t306, -t109 * t258 + t25, t14 - t280, -t54 * qJD(5) - t272, -t53 * qJD(5) - t273, t124, -t52 * qJD(3) + t35 * qJD(4) - t3 * qJD(5) - t314, -t55 * qJD(3) + t38 * qJD(4) - t4 * qJD(5) + t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149, t131, t236, t149, t176 * qJD(4), -t134 * t248 + t131, -t126 * t121, t46 * qJD(5), 0, 0, 0, t117 * t121 + t126 * t248, -t117 * t255 + t129 * t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, t330, 0, t251, 0, t329, 0, 0, 0, 0, 0, -t271, -t268; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, -t231, t116, -t134 * t249 - t281, 0, 0, 0, 0, 0, t194, t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195, t206, -t255 - t269, -t121 - t270, t247 / 0.2e1, -t80 * qJD(5) + t117 * t253 - t308, t79 * qJD(5) - t117 * t256 - t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, t214, -t254, t30 * qJD(2) + t275, -t215, -t254, -t214, t17 * qJD(2) - t232 + t279, 0, 0, 0, 0, 0, t52 * qJD(2) + t212, t55 * qJD(2) + t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251, -t330, 0, -t251, 0, -t248 - t329, 0, 0, 0, 0, 0, -t121 + t271, t255 + t268; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t125, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110 * qJD(2) + t216, -t102, -t190, t22 * qJD(2) + t233 + t274, 0, 0, 0, 0, 0, -t35 * qJD(2) - t182 * t261 - t267, -t38 * qJD(2) - t184 * t261 - t266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t192, t231, -t116, t281 + (t134 * qJD(2) + qJD(3)) * t180, 0, 0, 0, 0, 0, -t194, -t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218 * t182, -t218 * t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196, -t207, t54 * qJD(2) + t238, t53 * qJD(2) + t237, t170, t3 * qJD(2) + t182 * t262 + t257 - t302, t4 * qJD(2) + t184 * t262 - t260 + t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195, -t206, t269, t270, -t247 / 0.2e1, -t129 * t217 + t308, t126 * t217 + t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, -t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182 * t245, t184 * t245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t19;
