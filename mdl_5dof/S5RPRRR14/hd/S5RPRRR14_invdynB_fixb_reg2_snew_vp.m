% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S5RPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,alpha3,d1,d3,d4,d5,theta2]';
% 
% Output:
% tauB_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:22
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S5RPRRR14_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR14_invdynB_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR14_invdynB_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR14_invdynB_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR14_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S5RPRRR14_invdynB_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:20:20
% EndTime: 2019-12-31 19:21:07
% DurationCPUTime: 48.86s
% Computational Cost: add. (399334->925), mult. (1251065->1564), div. (0->0), fcn. (1057906->14), ass. (0->690)
t987 = cos(pkin(6));
t991 = sin(qJ(3));
t1163 = t987 * t991;
t984 = sin(pkin(6));
t1171 = t984 * t991;
t983 = sin(pkin(11));
t985 = sin(pkin(5));
t986 = cos(pkin(11));
t988 = cos(pkin(5));
t995 = cos(qJ(3));
t1009 = t988 * t1171 + (t986 * t1163 + t983 * t995) * t985;
t1007 = t1009 * qJDD(1);
t1173 = t983 * t991;
t1168 = t985 * t987;
t1135 = t986 * t1168;
t1170 = t984 * t995;
t1207 = -t995 * t1135 - t988 * t1170;
t931 = (t1173 * t985 + t1207) * qJD(1);
t896 = -t931 * qJD(3) + t1007;
t933 = t1009 * qJD(1);
t1169 = t985 * t986;
t1197 = -t984 * t1169 + t987 * t988;
t946 = qJD(1) * t1197 + qJD(3);
t990 = sin(qJ(4));
t994 = cos(qJ(4));
t914 = t994 * t933 + t990 * t946;
t1142 = qJDD(1) * t986;
t1121 = t985 * t1142;
t1141 = t988 * qJDD(1);
t945 = -t1121 * t984 + t987 * t1141 + qJDD(3);
t1128 = t914 * qJD(4) + t990 * t896 - t994 * t945;
t1114 = qJDD(5) + t1128;
t926 = qJD(4) + t931;
t989 = sin(qJ(5));
t993 = cos(qJ(5));
t875 = t989 * t914 - t993 * t926;
t877 = t993 * t914 + t989 * t926;
t822 = t877 * t875;
t1200 = -t822 + t1114;
t1212 = t1200 * t989;
t1211 = t1200 * t993;
t912 = t990 * t933 - t994 * t946;
t863 = t914 * t912;
t1143 = qJDD(1) * t985;
t1122 = t983 * t1143;
t1040 = qJDD(1) * t1207 + t1122 * t991;
t1015 = -t933 * qJD(3) - t1040;
t891 = qJDD(4) - t1015;
t1204 = -t863 + t891;
t1210 = t1204 * t990;
t1209 = t1204 * t994;
t1127 = t912 * qJD(4) - t994 * t896 - t990 * t945;
t880 = t926 * t912;
t808 = -t880 - t1127;
t1174 = t983 * t985;
t1140 = pkin(8) * t1174;
t1017 = t985 * (-pkin(2) * t1169 - t1140 * t984);
t1147 = qJD(2) * t985;
t1172 = t984 * t988;
t1044 = t1135 + t1172;
t1205 = pkin(8) * t1044;
t1208 = ((-t983 * t1017 + t988 * t1205) * qJD(1) - 0.2e1 * t983 * t1147) * qJD(1);
t1185 = t926 * t914;
t1206 = t1128 + t1185;
t917 = t946 * t931;
t858 = -t917 + t896;
t978 = t983 ^ 2;
t981 = t986 ^ 2;
t1148 = t978 + t981;
t1188 = qJ(2) * t985;
t992 = sin(qJ(1));
t996 = cos(qJ(1));
t972 = t992 * g(1) - t996 * g(2);
t997 = qJD(1) ^ 2;
t1041 = -t997 * t1188 - t972;
t1016 = qJDD(1) * pkin(1) - t1041;
t1012 = t988 * t1016;
t1203 = (-t985 * g(3) + t1012) * t986;
t1182 = t933 * t931;
t1014 = t945 - t1182;
t1202 = t1014 * t991;
t1201 = t1014 * t995;
t1129 = t875 * qJD(5) + t1127 * t993 - t989 * t891;
t907 = qJD(5) + t912;
t837 = t907 * t875;
t745 = -t837 - t1129;
t1138 = t983 * t986 * t997;
t980 = t985 ^ 2;
t982 = t988 ^ 2;
t1199 = (t980 + t982) * t985 * t1138;
t1118 = -t1127 * t989 - t993 * t891;
t742 = (qJD(5) - t907) * t877 + t1118;
t1119 = t988 * g(3) - qJDD(2);
t1189 = t988 * pkin(2);
t1191 = pkin(8) * t984;
t1001 = -t1119 + ((-pkin(2) * t986 - t983 * t1191 - pkin(1)) * qJDD(1) + t1041 + (t983 * t1189 + (-t1148 * t1168 - t986 * t1172) * pkin(8)) * t997) * t985;
t1133 = pkin(2) * t1141;
t1004 = -g(3) * t1169 + t1012 * t986 + t1133;
t973 = t996 * g(1) + t992 * g(2);
t1042 = t997 * pkin(1) + t973;
t1013 = qJ(2) * t1143 - t1042;
t1116 = t987 * t1140;
t813 = -t987 * t1001 + (-qJDD(1) * t1116 - t1013 * t983 + t1004 + t1208) * t984;
t872 = t875 ^ 2;
t873 = t877 ^ 2;
t906 = t907 ^ 2;
t910 = t912 ^ 2;
t911 = t914 ^ 2;
t1196 = t926 ^ 2;
t929 = t931 ^ 2;
t930 = t933 ^ 2;
t1195 = t946 ^ 2;
t1194 = pkin(3) * t991;
t1193 = pkin(3) * t995;
t1192 = pkin(4) * t990;
t1190 = pkin(8) * t987;
t1187 = t907 * t989;
t1186 = t907 * t993;
t1184 = t926 * t990;
t1183 = t926 * t994;
t1181 = t933 * t991;
t1180 = t978 * t980;
t1179 = t980 * t981;
t1178 = t980 * t997;
t934 = t1016 * t985 + t1119;
t1177 = t983 * t934;
t964 = t980 * t1138;
t951 = t964 + t1141;
t1176 = t983 * t951;
t952 = -t964 + t1141;
t1175 = t983 * t952;
t1167 = t986 * t934;
t1166 = t986 * t951;
t1165 = t986 * t952;
t1162 = t987 * t995;
t1161 = t988 * t997;
t1120 = -qJ(2) - t1190;
t1008 = -g(3) * t1174 + t1012 * t983;
t849 = t986 * t1013 + qJDD(1) * t1205 + (0.2e1 * t986 * t1147 + (t986 * t1017 - t988 * (-t1116 + t1189)) * qJD(1)) * qJD(1) + t1008;
t761 = t995 * t849 + (t987 * t1004 + t984 * (-pkin(2) * t1121 - t934) + t1197 * t997 * t1205) * t991 + (t987 * t1042 + ((-pkin(8) * t984 ^ 2 + t1120 * t987) * qJDD(1) + (pkin(2) * qJD(1) * t1044 - 0.2e1 * t987 * qJD(2)) * qJD(1)) * t985) * t1173;
t892 = t931 * pkin(3) - t933 * pkin(9);
t732 = -t1195 * pkin(3) + t945 * pkin(9) - t931 * t892 + t761;
t1146 = qJD(3) + t946;
t854 = t1146 * t933 + t1040;
t999 = t854 * pkin(3) - t858 * pkin(9) - t813;
t672 = t990 * t732 - t994 * t999;
t853 = t912 * pkin(4) - t914 * pkin(10);
t639 = -t891 * pkin(4) - t1196 * pkin(10) + t914 * t853 + t672;
t1160 = t989 * t639;
t765 = t822 + t1114;
t1159 = t989 * t765;
t760 = t991 * t849 - (t1133 + t1203 + (t1120 * t1143 + t1042) * t983 + t1208) * t1162 - t1001 * t1170;
t731 = -t945 * pkin(3) - t1195 * pkin(9) + t933 * t892 + t760;
t1158 = t990 * t731;
t826 = t863 + t891;
t1157 = t990 * t826;
t1156 = t991 * t813;
t882 = -t945 - t1182;
t1155 = t991 * t882;
t1154 = t993 * t639;
t1153 = t993 * t765;
t1152 = t994 * t731;
t1151 = t994 * t826;
t1150 = t995 * t813;
t1149 = t995 * t882;
t673 = t994 * t732 + t990 * t999;
t640 = -t1196 * pkin(4) + t891 * pkin(10) - t912 * t853 + t673;
t670 = t1206 * pkin(4) - pkin(10) * t808 + t731;
t595 = t993 * t640 + t989 * t670;
t1144 = qJDD(1) * t980;
t1139 = t995 * t863;
t1134 = t985 * t1161;
t1132 = t990 * t822;
t1131 = t991 * t863;
t1130 = t994 * t822;
t1126 = -pkin(4) * t994 - pkin(3);
t1124 = t983 * t1142;
t1123 = t985 * t1141;
t594 = t989 * t640 - t993 * t670;
t602 = t990 * t672 + t994 * t673;
t936 = -t992 * t972 - t996 * t973;
t970 = t996 * qJDD(1) - t992 * t997;
t1113 = -pkin(7) * t970 - t992 * g(3);
t881 = -t1195 - t929;
t828 = t995 * t881 - t1202;
t1112 = pkin(8) * t828 + t1150;
t885 = -t930 - t1195;
t830 = -t991 * t885 + t1149;
t1111 = pkin(8) * t830 - t1156;
t959 = (-t982 - t1179) * t997;
t922 = t986 * t959 - t1176;
t1110 = qJ(2) * t922 + t1167;
t957 = (-t982 - t1180) * t997;
t924 = -t983 * t957 - t1165;
t1109 = qJ(2) * t924 - t1177;
t544 = t989 * t594 + t993 * t595;
t527 = t994 * t544 + t990 * t639;
t543 = -t993 * t594 + t989 * t595;
t1107 = t527 * t991 - t543 * t995;
t526 = t990 * t544 - t994 * t639;
t486 = t1107 * t987 - t984 * t526;
t504 = t995 * t527 + t991 * t543;
t1108 = t486 * t986 + t504 * t983;
t1099 = t602 * t991 - t731 * t995;
t601 = -t994 * t672 + t990 * t673;
t546 = t1099 * t987 - t984 * t601;
t589 = t995 * t602 + t991 * t731;
t1106 = t546 * t986 + t589 * t983;
t746 = -t837 + t1129;
t677 = -t742 * t993 - t989 * t746;
t782 = t872 + t873;
t637 = t994 * t677 - t990 * t782;
t675 = -t742 * t989 + t993 * t746;
t1095 = t637 * t991 - t675 * t995;
t636 = t990 * t677 + t994 * t782;
t562 = t1095 * t987 - t984 * t636;
t596 = t995 * t637 + t991 * t675;
t1105 = t562 * t986 + t596 * t983;
t743 = (-qJD(5) - t907) * t877 - t1118;
t676 = t993 * t743 - t989 * t745;
t815 = -t873 + t872;
t649 = t994 * t676 - t990 * t815;
t674 = -t989 * t743 - t993 * t745;
t1093 = t649 * t991 + t674 * t995;
t648 = t990 * t676 + t994 * t815;
t568 = t1093 * t987 - t984 * t648;
t599 = t995 * t649 - t991 * t674;
t1104 = t568 * t986 + t599 * t983;
t798 = -t906 - t872;
t715 = t993 * t798 - t1212;
t653 = t994 * t715 - t990 * t743;
t714 = t989 * t798 + t1211;
t1091 = t653 * t991 - t714 * t995;
t652 = t990 * t715 + t994 * t743;
t577 = t1091 * t987 - t984 * t652;
t612 = t995 * t653 + t991 * t714;
t1103 = t577 * t986 + t612 * t983;
t814 = -t873 - t906;
t719 = -t989 * t814 - t1153;
t659 = t994 * t719 + t745 * t990;
t718 = t993 * t814 - t1159;
t1090 = t659 * t991 - t718 * t995;
t658 = t990 * t719 - t745 * t994;
t579 = t1090 * t987 - t984 * t658;
t618 = t995 * t659 + t991 * t718;
t1102 = t579 * t986 + t618 * t983;
t836 = -t873 + t906;
t728 = -t989 * t836 + t1211;
t666 = t994 * t728 - t990 * t746;
t726 = -t993 * t836 - t1212;
t1089 = t666 * t991 + t726 * t995;
t664 = t990 * t728 + t994 * t746;
t585 = t1089 * t987 - t984 * t664;
t622 = t995 * t666 - t991 * t726;
t1101 = t585 * t986 + t622 * t983;
t835 = t872 - t906;
t729 = t993 * t835 - t1159;
t667 = t994 * t729 - t990 * t742;
t727 = -t989 * t835 - t1153;
t1088 = t667 * t991 + t727 * t995;
t665 = t990 * t729 + t994 * t742;
t586 = t1088 * t987 - t984 * t665;
t623 = t995 * t667 - t991 * t727;
t1100 = t586 * t986 + t623 * t983;
t772 = -t877 * qJD(5) - t1118;
t738 = t875 * t1186 - t989 * t772;
t706 = t994 * t738 - t1132;
t737 = -t875 * t1187 - t993 * t772;
t1082 = t706 * t991 + t737 * t995;
t704 = t990 * t738 + t1130;
t606 = t1082 * t987 - t984 * t704;
t644 = t995 * t706 - t991 * t737;
t1098 = t606 * t986 + t644 * t983;
t740 = -t1129 * t993 - t877 * t1187;
t707 = t994 * t740 + t1132;
t739 = t1129 * t989 - t877 * t1186;
t1081 = t707 * t991 + t739 * t995;
t705 = t990 * t740 - t1130;
t607 = t1081 * t987 - t984 * t705;
t645 = t995 * t707 - t991 * t739;
t1097 = t607 * t986 + t645 * t983;
t775 = (-t875 * t993 + t877 * t989) * t907;
t749 = t1114 * t990 + t994 * t775;
t774 = (t875 * t989 + t877 * t993) * t907;
t1076 = t749 * t991 + t774 * t995;
t748 = -t1114 * t994 + t990 * t775;
t633 = t1076 * t987 - t984 * t748;
t695 = t995 * t749 - t991 * t774;
t1096 = t633 * t986 + t695 * t983;
t807 = -t1128 + t1185;
t809 = -t880 + t1127;
t736 = t994 * t807 - t990 * t809;
t829 = t910 + t911;
t1077 = t736 * t991 + t829 * t995;
t734 = t990 * t807 + t994 * t809;
t647 = t1077 * t987 - t984 * t734;
t708 = t995 * t736 - t991 * t829;
t1094 = t647 * t986 + t708 * t983;
t735 = -t1206 * t994 - t990 * t808;
t860 = -t911 + t910;
t1078 = t735 * t991 + t860 * t995;
t733 = -t1206 * t990 + t994 * t808;
t651 = t1078 * t987 - t984 * t733;
t713 = t995 * t735 - t991 * t860;
t1092 = t651 * t986 + t713 * t983;
t1074 = -t995 * t760 + t991 * t761;
t679 = t1074 * t987 + t984 * t813;
t701 = t991 * t760 + t995 * t761;
t1087 = t679 * t986 + t701 * t983;
t842 = -t1196 - t910;
t768 = t994 * t842 - t1210;
t1072 = -t1206 * t995 + t768 * t991;
t767 = t990 * t842 + t1209;
t683 = t1072 * t987 - t984 * t767;
t717 = t1206 * t991 + t995 * t768;
t1086 = t683 * t986 + t717 * t983;
t848 = -t911 - t1196;
t779 = -t990 * t848 - t1151;
t1070 = t779 * t991 - t808 * t995;
t778 = t994 * t848 - t1157;
t686 = t1070 * t987 - t984 * t778;
t721 = t995 * t779 + t808 * t991;
t1085 = t686 * t986 + t721 * t983;
t879 = -t911 + t1196;
t790 = -t990 * t879 + t1209;
t1067 = t790 * t991 + t809 * t995;
t788 = t994 * t879 + t1210;
t691 = t1067 * t987 - t984 * t788;
t724 = t995 * t790 - t991 * t809;
t1084 = t691 * t986 + t724 * t983;
t878 = t910 - t1196;
t791 = t994 * t878 - t1157;
t1066 = t791 * t991 - t807 * t995;
t789 = t990 * t878 + t1151;
t692 = t1066 * t987 - t984 * t789;
t725 = t995 * t791 + t807 * t991;
t1083 = t692 * t986 + t725 * t983;
t801 = t1128 * t990 + t912 * t1183;
t1046 = t801 * t991 + t1139;
t800 = -t1128 * t994 + t912 * t1184;
t711 = t1046 * t987 - t984 * t800;
t758 = t995 * t801 - t1131;
t1080 = t711 * t986 + t758 * t983;
t803 = -t1127 * t994 - t914 * t1184;
t1045 = t803 * t991 - t1139;
t802 = -t1127 * t990 + t914 * t1183;
t712 = t1045 * t987 - t984 * t802;
t759 = t995 * t803 + t1131;
t1079 = t712 * t986 + t759 * t983;
t824 = (-t912 * t994 + t914 * t990) * t926;
t1061 = t824 * t991 - t891 * t995;
t823 = (-t912 * t990 - t914 * t994) * t926;
t753 = t1061 * t987 - t984 * t823;
t797 = t995 * t824 + t991 * t891;
t1075 = t753 * t986 + t797 * t983;
t1010 = (-qJD(3) + t946) * t933 - t1040;
t859 = t917 + t896;
t1058 = t1010 * t991 - t859 * t995;
t874 = -t929 - t930;
t763 = t1058 * t987 - t984 * t874;
t812 = t1010 * t995 + t991 * t859;
t1073 = t763 * t986 + t812 * t983;
t1059 = -t854 * t991 + t858 * t995;
t897 = t930 - t929;
t777 = t1059 * t987 - t984 * t897;
t811 = -t995 * t854 - t991 * t858;
t1071 = t777 * t986 + t811 * t983;
t1057 = t881 * t991 + t1201;
t781 = t1057 * t987 - t984 * t854;
t1069 = t781 * t986 + t828 * t983;
t1056 = t885 * t995 + t1155;
t857 = -t1146 * t931 + t1007;
t784 = t1056 * t987 - t984 * t857;
t1068 = t784 * t986 + t830 * t983;
t916 = -t930 + t1195;
t1054 = t916 * t995 + t1202;
t794 = t1054 * t987 - t984 * t859;
t843 = -t991 * t916 + t1201;
t1065 = t794 * t986 + t843 * t983;
t915 = t929 - t1195;
t1055 = t915 * t991 - t1149;
t795 = -t1010 * t984 + t1055 * t987;
t844 = t995 * t915 + t1155;
t1064 = t795 * t986 + t844 * t983;
t1011 = t995 * t1015;
t817 = t987 * t1011 + (t946 * t1163 + t984 * t933) * t931;
t850 = -t1015 * t991 + t995 * t917;
t1063 = t817 * t986 + t850 * t983;
t819 = t896 * t1163 + (t946 * t1162 - t984 * t931) * t933;
t852 = -t946 * t1181 + t995 * t896;
t1062 = t819 * t986 + t852 * t983;
t1043 = t946 * (-t931 * t991 - t933 * t995);
t846 = t1043 * t987 - t984 * t945;
t864 = (-t931 * t995 + t1181) * t946;
t1060 = t846 * t986 + t864 * t983;
t1005 = (qJ(2) * qJDD(1) + 0.2e1 * qJD(1) * qJD(2)) * t985 - t1042;
t908 = t1005 * t983 - t1203;
t909 = t1005 * t986 + t1008;
t1053 = -t986 * t908 + t983 * t909;
t851 = t983 * t908 + t986 * t909;
t966 = t986 * t1134;
t947 = t966 + t1122;
t965 = t983 * t1134;
t950 = -t965 + t1121;
t1052 = t947 * t986 + t950 * t983;
t948 = -t966 + t1122;
t949 = t965 + t1121;
t1051 = -t948 * t986 + t949 * t983;
t956 = (t982 - t1180) * t997;
t1050 = t956 * t986 + t1176;
t1049 = t959 * t983 + t1166;
t1048 = t957 * t986 - t1175;
t958 = (-t982 + t1179) * t997;
t1047 = t958 * t983 + t1165;
t935 = t996 * t972 - t992 * t973;
t490 = -pkin(9) * t526 + (-pkin(10) * t994 + t1192) * t543;
t499 = -pkin(3) * t526 + pkin(4) * t639 - pkin(10) * t544;
t1039 = pkin(8) * t504 + t490 * t991 + t499 * t995;
t531 = -pkin(10) * t675 - t543;
t511 = -pkin(9) * t636 + t675 * t1192 + t994 * t531;
t518 = -pkin(3) * t636 - pkin(4) * t782 - pkin(10) * t677 - t544;
t1038 = pkin(8) * t596 + t511 * t991 + t518 * t995;
t574 = -pkin(4) * t714 + t594;
t608 = -pkin(10) * t714 + t1160;
t524 = -pkin(9) * t652 - t990 * t574 + t994 * t608;
t563 = -pkin(3) * t652 - pkin(4) * t743 - pkin(10) * t715 + t1154;
t1037 = pkin(8) * t612 + t524 * t991 + t563 * t995;
t575 = -pkin(4) * t718 + t595;
t610 = -pkin(10) * t718 + t1154;
t528 = -pkin(9) * t658 - t990 * t575 + t994 * t610;
t566 = -pkin(3) * t658 + pkin(4) * t745 - pkin(10) * t719 - t1160;
t1036 = pkin(8) * t618 + t528 * t991 + t566 * t995;
t630 = -pkin(3) * t767 + t672;
t687 = -pkin(9) * t767 + t1158;
t1035 = pkin(8) * t717 + t630 * t995 + t687 * t991;
t631 = -pkin(3) * t778 + t673;
t693 = -pkin(9) * t778 + t1152;
t1034 = pkin(8) * t721 + t631 * t995 + t693 * t991;
t1033 = pkin(8) * t812 + t701;
t479 = pkin(9) * t527 + (-pkin(10) * t990 + t1126) * t543;
t485 = t1107 * t984 + t987 * t526;
t457 = -pkin(2) * t485 + t1039 * t987 - t984 * t479;
t463 = t995 * t490 - t991 * t499 + (-t485 * t984 - t486 * t987) * pkin(8);
t472 = -t983 * t486 + t986 * t504;
t1032 = qJ(2) * t472 + t457 * t986 + t463 * t983;
t510 = pkin(9) * t637 + t1126 * t675 + t990 * t531;
t561 = t1095 * t984 + t987 * t636;
t471 = -pkin(2) * t561 + t1038 * t987 - t984 * t510;
t474 = t995 * t511 - t991 * t518 + (-t561 * t984 - t562 * t987) * pkin(8);
t525 = -t983 * t562 + t986 * t596;
t1031 = qJ(2) * t525 + t471 * t986 + t474 * t983;
t522 = -pkin(3) * t714 + pkin(9) * t653 + t994 * t574 + t990 * t608;
t576 = t1091 * t984 + t987 * t652;
t476 = -pkin(2) * t576 + t1037 * t987 - t984 * t522;
t489 = t995 * t524 - t991 * t563 + (-t576 * t984 - t577 * t987) * pkin(8);
t542 = -t983 * t577 + t986 * t612;
t1030 = qJ(2) * t542 + t476 * t986 + t489 * t983;
t523 = -pkin(3) * t718 + pkin(9) * t659 + t994 * t575 + t990 * t610;
t578 = t1090 * t984 + t987 * t658;
t478 = -pkin(2) * t578 + t1036 * t987 - t984 * t523;
t491 = t995 * t528 - t991 * t566 + (-t578 * t984 - t579 * t987) * pkin(8);
t549 = -t983 * t579 + t986 * t618;
t1029 = qJ(2) * t549 + t478 * t986 + t491 * t983;
t1018 = pkin(8) * t589 + (-pkin(9) * t991 - t1193) * t601;
t545 = t1099 * t984 + t987 * t601;
t590 = -pkin(3) * t731 + pkin(9) * t602;
t495 = -pkin(2) * t545 + t1018 * t987 - t984 * t590;
t496 = (-pkin(9) * t995 + t1194) * t601 + (-t545 * t984 - t546 * t987) * pkin(8);
t519 = -t983 * t546 + t986 * t589;
t1028 = qJ(2) * t519 + t495 * t986 + t496 * t983;
t591 = -pkin(9) * t734 - t601;
t1019 = pkin(8) * t708 - t734 * t1193 + t591 * t991;
t582 = pkin(3) * t829 + pkin(9) * t736 + t602;
t646 = t1077 * t984 + t987 * t734;
t513 = -pkin(2) * t646 + t1019 * t987 - t984 * t582;
t532 = t734 * t1194 + t995 * t591 + (-t646 * t984 - t647 * t987) * pkin(8);
t609 = -t983 * t647 + t986 * t708;
t1027 = qJ(2) * t609 + t513 * t986 + t532 * t983;
t654 = -pkin(3) * t1206 + pkin(9) * t768 - t1152;
t682 = t1072 * t984 + t987 * t767;
t538 = -pkin(2) * t682 + t1035 * t987 - t984 * t654;
t554 = -t991 * t630 + t995 * t687 + (-t682 * t984 - t683 * t987) * pkin(8);
t621 = -t983 * t683 + t986 * t717;
t1026 = qJ(2) * t621 + t538 * t986 + t554 * t983;
t657 = -pkin(3) * t808 + pkin(9) * t779 + t1158;
t685 = t1070 * t984 + t987 * t778;
t541 = -pkin(2) * t685 + t1034 * t987 - t984 * t657;
t557 = -t991 * t631 + t995 * t693 + (-t685 * t984 - t686 * t987) * pkin(8);
t624 = -t983 * t686 + t986 * t721;
t1025 = qJ(2) * t624 + t541 * t986 + t557 * t983;
t678 = t1074 * t984 - t987 * t813;
t603 = (-t678 * t984 - t679 * t987) * pkin(8);
t613 = -t983 * t679 + t986 * t701;
t614 = -pkin(2) * t678 + t701 * t1190;
t1024 = qJ(2) * t613 + t603 * t983 + t614 * t986;
t762 = t1058 * t984 + t987 * t874;
t625 = (-t762 * t984 - t763 * t987) * pkin(8) - t1074;
t629 = -pkin(2) * t762 + t1033 * t987;
t716 = -t983 * t763 + t986 * t812;
t1023 = qJ(2) * t716 + t625 * t983 + t629 * t986;
t780 = t1057 * t984 + t987 * t854;
t656 = -pkin(2) * t780 + t1112 * t987 + t984 * t760;
t688 = -t1156 + (-t780 * t984 - t781 * t987) * pkin(8);
t741 = -t983 * t781 + t986 * t828;
t1022 = qJ(2) * t741 + t656 * t986 + t688 * t983;
t783 = t1056 * t984 + t987 * t857;
t661 = -pkin(2) * t783 + t1111 * t987 + t984 * t761;
t694 = -t1150 + (-t783 * t984 - t784 * t987) * pkin(8);
t754 = -t983 * t784 + t986 * t830;
t1021 = qJ(2) * t754 + t661 * t986 + t694 * t983;
t918 = t983 * t948 + t986 * t949;
t1020 = qJ(2) * t918 + t851;
t969 = t992 * qJDD(1) + t996 * t997;
t955 = -pkin(7) * t969 + t996 * g(3);
t954 = t1148 * t1178;
t953 = (t978 - t981) * t1178;
t943 = t1148 * t1134;
t942 = (-t978 * t1161 + t1124) * t985;
t941 = (-t981 * t1161 - t1124) * t985;
t928 = t1123 * t978 + t1199;
t927 = t1123 * t981 - t1199;
t923 = -t983 * t956 + t1166;
t921 = t986 * t958 - t1175;
t919 = -t983 * t947 + t986 * t950;
t903 = t1048 * t988 - t985 * t947;
t902 = t1050 * t988 - t985 * t948;
t901 = t1049 * t988 + t985 * t950;
t900 = t1047 * t988 - t985 * t949;
t899 = t1048 * t985 + t988 * t947;
t898 = t1049 * t985 - t988 * t950;
t895 = t1052 * t988 - t985 * t953;
t894 = t1051 * t988 + t985 * t954;
t893 = t1051 * t985 - t988 * t954;
t868 = -t992 * t903 + t996 * t924;
t867 = -t992 * t901 + t996 * t922;
t866 = t996 * t903 + t992 * t924;
t865 = t996 * t901 + t992 * t922;
t862 = -t992 * t894 + t996 * t918;
t861 = t996 * t894 + t992 * t918;
t845 = t1043 * t984 + t987 * t945;
t834 = t1053 * t988 + t985 * t934;
t833 = t1053 * t985 - t988 * t934;
t832 = -t1167 + (-t899 * t985 - t903 * t988) * qJ(2);
t831 = -t1177 + (-t898 * t985 - t901 * t988) * qJ(2);
t821 = -pkin(1) * t898 + t1110 * t988 + t985 * t908;
t820 = -pkin(1) * t899 + t1109 * t988 + t985 * t909;
t818 = t896 * t1171 + (t946 * t1170 + t987 * t931) * t933;
t816 = t984 * t1011 + (t946 * t1171 - t987 * t933) * t931;
t804 = -pkin(1) * t893 + t1020 * t988;
t799 = -t983 * t846 + t986 * t864;
t796 = (-t893 * t985 - t894 * t988) * qJ(2) - t1053;
t793 = t1010 * t987 + t1055 * t984;
t792 = t1054 * t984 + t987 * t859;
t787 = t988 * qJ(2) * t851 - pkin(1) * t833;
t786 = -t992 * t834 + t996 * t851;
t785 = t996 * t834 + t992 * t851;
t776 = t1059 * t984 + t987 * t897;
t771 = (-t833 * t985 - t834 * t988) * qJ(2);
t770 = -t983 * t819 + t986 * t852;
t769 = -t983 * t817 + t986 * t850;
t757 = t1060 * t988 - t985 * t845;
t756 = -t983 * t795 + t986 * t844;
t755 = -t983 * t794 + t986 * t843;
t752 = t1061 * t984 + t987 * t823;
t723 = t1062 * t988 - t985 * t818;
t722 = t1063 * t988 - t985 * t816;
t720 = -t983 * t777 + t986 * t811;
t710 = t1045 * t984 + t987 * t802;
t709 = t1046 * t984 + t987 * t800;
t703 = t1064 * t988 - t985 * t793;
t702 = t1065 * t988 - t985 * t792;
t700 = -t983 * t753 + t986 * t797;
t699 = t1068 * t988 - t985 * t783;
t698 = t1068 * t985 + t988 * t783;
t697 = t1069 * t988 - t985 * t780;
t696 = t1069 * t985 + t988 * t780;
t690 = t1066 * t984 + t987 * t789;
t689 = t1067 * t984 + t987 * t788;
t684 = t1071 * t988 - t985 * t776;
t681 = t1073 * t988 - t985 * t762;
t680 = t1073 * t985 + t988 * t762;
t663 = -t983 * t712 + t986 * t759;
t662 = -t983 * t711 + t986 * t758;
t660 = pkin(2) * t784 + t1111 * t984 - t987 * t761;
t655 = pkin(2) * t781 + t1112 * t984 - t987 * t760;
t650 = t1078 * t984 + t987 * t733;
t643 = t1075 * t988 - t985 * t752;
t642 = -t992 * t699 + t996 * t754;
t641 = t996 * t699 + t992 * t754;
t635 = -t992 * t697 + t996 * t741;
t634 = t996 * t697 + t992 * t741;
t632 = t1076 * t984 + t987 * t748;
t628 = pkin(2) * t763 + t1033 * t984;
t627 = -t983 * t692 + t986 * t725;
t626 = -t983 * t691 + t986 * t724;
t620 = -t992 * t681 + t996 * t716;
t619 = t996 * t681 + t992 * t716;
t617 = t1079 * t988 - t985 * t710;
t616 = t1080 * t988 - t985 * t709;
t615 = pkin(2) * t679 + t701 * t1191;
t611 = -t983 * t651 + t986 * t713;
t605 = t1081 * t984 + t987 * t705;
t604 = t1082 * t984 + t987 * t704;
t600 = -t983 * t633 + t986 * t695;
t598 = t1083 * t988 - t985 * t690;
t597 = t1084 * t988 - t985 * t689;
t593 = t1085 * t988 - t985 * t685;
t592 = t1085 * t985 + t988 * t685;
t588 = t1086 * t988 - t985 * t682;
t587 = t1086 * t985 + t988 * t682;
t584 = t1088 * t984 + t987 * t665;
t583 = t1089 * t984 + t987 * t664;
t581 = t1087 * t988 - t985 * t678;
t580 = t1087 * t985 + t988 * t678;
t573 = t1092 * t988 - t985 * t650;
t572 = t1094 * t988 - t985 * t646;
t571 = t1094 * t985 + t988 * t646;
t570 = -t983 * t607 + t986 * t645;
t569 = -t983 * t606 + t986 * t644;
t567 = t1093 * t984 + t987 * t648;
t565 = -t983 * t661 + t986 * t694 + (-t698 * t985 - t699 * t988) * qJ(2);
t564 = t1096 * t988 - t985 * t632;
t560 = -t983 * t656 + t986 * t688 + (-t696 * t985 - t697 * t988) * qJ(2);
t559 = -t992 * t593 + t996 * t624;
t558 = t996 * t593 + t992 * t624;
t556 = -t992 * t588 + t996 * t621;
t555 = t996 * t588 + t992 * t621;
t553 = -t983 * t586 + t986 * t623;
t552 = -t983 * t585 + t986 * t622;
t551 = -pkin(1) * t698 + t1021 * t988 - t985 * t660;
t550 = -pkin(1) * t696 + t1022 * t988 - t985 * t655;
t548 = -t992 * t581 + t996 * t613;
t547 = t996 * t581 + t992 * t613;
t540 = pkin(2) * t686 + t1034 * t984 + t987 * t657;
t539 = t986 * t625 - t983 * t629 + (-t680 * t985 - t681 * t988) * qJ(2);
t537 = pkin(2) * t683 + t1035 * t984 + t987 * t654;
t536 = -t992 * t572 + t996 * t609;
t535 = t996 * t572 + t992 * t609;
t534 = t1097 * t988 - t985 * t605;
t533 = t1098 * t988 - t985 * t604;
t530 = -t983 * t568 + t986 * t599;
t529 = -pkin(1) * t680 + t1023 * t988 - t985 * t628;
t521 = t1100 * t988 - t985 * t584;
t520 = t1101 * t988 - t985 * t583;
t517 = t1102 * t988 - t985 * t578;
t516 = t1102 * t985 + t988 * t578;
t515 = t1103 * t988 - t985 * t576;
t514 = t1103 * t985 + t988 * t576;
t512 = pkin(2) * t647 + t1019 * t984 + t987 * t582;
t509 = t1104 * t988 - t985 * t567;
t508 = t986 * t603 - t983 * t614 + (-t580 * t985 - t581 * t988) * qJ(2);
t507 = t1105 * t988 - t985 * t561;
t506 = t1105 * t985 + t988 * t561;
t505 = -pkin(1) * t580 + t1024 * t988 - t985 * t615;
t503 = t1106 * t988 - t985 * t545;
t502 = t1106 * t985 + t988 * t545;
t501 = -t992 * t517 + t996 * t549;
t500 = t996 * t517 + t992 * t549;
t498 = -t992 * t515 + t996 * t542;
t497 = t996 * t515 + t992 * t542;
t494 = pkin(2) * t546 + t1018 * t984 + t987 * t590;
t493 = -t983 * t541 + t986 * t557 + (-t592 * t985 - t593 * t988) * qJ(2);
t492 = -t983 * t538 + t986 * t554 + (-t587 * t985 - t588 * t988) * qJ(2);
t488 = -t992 * t507 + t996 * t525;
t487 = t996 * t507 + t992 * t525;
t484 = -pkin(1) * t592 + t1025 * t988 - t985 * t540;
t483 = -pkin(1) * t587 + t1026 * t988 - t985 * t537;
t482 = -t992 * t503 + t996 * t519;
t481 = t996 * t503 + t992 * t519;
t480 = -t983 * t513 + t986 * t532 + (-t571 * t985 - t572 * t988) * qJ(2);
t477 = pkin(2) * t579 + t1036 * t984 + t987 * t523;
t475 = pkin(2) * t577 + t1037 * t984 + t987 * t522;
t473 = -pkin(1) * t571 + t1027 * t988 - t985 * t512;
t470 = pkin(2) * t562 + t1038 * t984 + t987 * t510;
t469 = t1108 * t988 - t985 * t485;
t468 = t1108 * t985 + t988 * t485;
t467 = -t983 * t478 + t986 * t491 + (-t516 * t985 - t517 * t988) * qJ(2);
t466 = -t983 * t495 + t986 * t496 + (-t502 * t985 - t503 * t988) * qJ(2);
t465 = -t983 * t476 + t986 * t489 + (-t514 * t985 - t515 * t988) * qJ(2);
t464 = -pkin(1) * t502 + t1028 * t988 - t985 * t494;
t462 = -pkin(1) * t516 + t1029 * t988 - t985 * t477;
t461 = -pkin(1) * t514 + t1030 * t988 - t985 * t475;
t460 = -t992 * t469 + t996 * t472;
t459 = t996 * t469 + t992 * t472;
t458 = -t983 * t471 + t986 * t474 + (-t506 * t985 - t507 * t988) * qJ(2);
t456 = pkin(2) * t486 + t1039 * t984 + t987 * t479;
t455 = -pkin(1) * t506 + t1031 * t988 - t985 * t470;
t454 = -t983 * t457 + t986 * t463 + (-t468 * t985 - t469 * t988) * qJ(2);
t453 = -pkin(1) * t468 + t1032 * t988 - t985 * t456;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t969, -t970, 0, t936, 0, 0, 0, 0, 0, 0, t867, t868, t862, t786, 0, 0, 0, 0, 0, 0, t635, t642, t620, t548, 0, 0, 0, 0, 0, 0, t556, t559, t536, t482, 0, 0, 0, 0, 0, 0, t498, t501, t488, t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t970, -t969, 0, t935, 0, 0, 0, 0, 0, 0, t865, t866, t861, t785, 0, 0, 0, 0, 0, 0, t634, t641, t619, t547, 0, 0, 0, 0, 0, 0, t555, t558, t535, t481, 0, 0, 0, 0, 0, 0, t497, t500, t487, t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t898, t899, t893, t833, 0, 0, 0, 0, 0, 0, t696, t698, t680, t580, 0, 0, 0, 0, 0, 0, t587, t592, t571, t502, 0, 0, 0, 0, 0, 0, t514, t516, t506, t468; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t970, 0, -t969, 0, t1113, -t955, -t935, -pkin(7) * t935, -t992 * t928 + t996 * t942, -t992 * t895 + t996 * t919, -t992 * t902 + t996 * t923, -t992 * t927 + t996 * t941, -t992 * t900 + t996 * t921, t1123 * t992 + t996 * t943, -pkin(7) * t865 - t992 * t821 + t996 * t831, -pkin(7) * t866 - t992 * t820 + t996 * t832, -pkin(7) * t861 + t996 * t796 - t992 * t804, -pkin(7) * t785 + t996 * t771 - t992 * t787, -t992 * t723 + t996 * t770, -t992 * t684 + t996 * t720, -t992 * t702 + t996 * t755, -t992 * t722 + t996 * t769, -t992 * t703 + t996 * t756, -t992 * t757 + t996 * t799, -pkin(7) * t634 - t992 * t550 + t996 * t560, -pkin(7) * t641 - t992 * t551 + t996 * t565, -pkin(7) * t619 - t992 * t529 + t996 * t539, -pkin(7) * t547 - t992 * t505 + t996 * t508, -t992 * t617 + t996 * t663, -t992 * t573 + t996 * t611, -t992 * t597 + t996 * t626, -t992 * t616 + t996 * t662, -t992 * t598 + t996 * t627, -t992 * t643 + t996 * t700, -pkin(7) * t555 - t992 * t483 + t996 * t492, -pkin(7) * t558 - t992 * t484 + t996 * t493, -pkin(7) * t535 - t992 * t473 + t996 * t480, -pkin(7) * t481 - t992 * t464 + t996 * t466, -t992 * t534 + t996 * t570, -t992 * t509 + t996 * t530, -t992 * t520 + t996 * t552, -t992 * t533 + t996 * t569, -t992 * t521 + t996 * t553, -t992 * t564 + t996 * t600, -pkin(7) * t497 - t992 * t461 + t996 * t465, -pkin(7) * t500 - t992 * t462 + t996 * t467, -pkin(7) * t487 - t992 * t455 + t996 * t458, -pkin(7) * t459 - t992 * t453 + t996 * t454; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t969, 0, t970, 0, t955, t1113, t936, pkin(7) * t936, t996 * t928 + t992 * t942, t996 * t895 + t992 * t919, t996 * t902 + t992 * t923, t996 * t927 + t992 * t941, t996 * t900 + t992 * t921, -t1123 * t996 + t992 * t943, pkin(7) * t867 + t996 * t821 + t992 * t831, pkin(7) * t868 + t996 * t820 + t992 * t832, pkin(7) * t862 + t992 * t796 + t996 * t804, pkin(7) * t786 + t992 * t771 + t996 * t787, t996 * t723 + t992 * t770, t996 * t684 + t992 * t720, t996 * t702 + t992 * t755, t996 * t722 + t992 * t769, t996 * t703 + t992 * t756, t996 * t757 + t992 * t799, pkin(7) * t635 + t996 * t550 + t992 * t560, pkin(7) * t642 + t996 * t551 + t992 * t565, pkin(7) * t620 + t996 * t529 + t992 * t539, pkin(7) * t548 + t996 * t505 + t992 * t508, t996 * t617 + t992 * t663, t996 * t573 + t992 * t611, t996 * t597 + t992 * t626, t996 * t616 + t992 * t662, t996 * t598 + t992 * t627, t996 * t643 + t992 * t700, pkin(7) * t556 + t996 * t483 + t992 * t492, pkin(7) * t559 + t996 * t484 + t992 * t493, pkin(7) * t536 + t996 * t473 + t992 * t480, pkin(7) * t482 + t996 * t464 + t992 * t466, t996 * t534 + t992 * t570, t996 * t509 + t992 * t530, t996 * t520 + t992 * t552, t996 * t533 + t992 * t569, t996 * t521 + t992 * t553, t996 * t564 + t992 * t600, pkin(7) * t498 + t996 * t461 + t992 * t465, pkin(7) * t501 + t996 * t462 + t992 * t467, pkin(7) * t488 + t996 * t455 + t992 * t458, pkin(7) * t460 + t996 * t453 + t992 * t454; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t972, t973, 0, 0, t978 * t1144, t1052 * t985 + t988 * t953, t1050 * t985 + t988 * t948, t981 * t1144, t1047 * t985 + t988 * t949, t982 * qJDD(1), pkin(1) * t901 + t1110 * t985 - t988 * t908, pkin(1) * t903 + t1109 * t985 - t988 * t909, pkin(1) * t894 + t1020 * t985, pkin(1) * t834 + t851 * t1188, t1062 * t985 + t988 * t818, t1071 * t985 + t988 * t776, t1065 * t985 + t988 * t792, t1063 * t985 + t988 * t816, t1064 * t985 + t988 * t793, t1060 * t985 + t988 * t845, pkin(1) * t697 + t1022 * t985 + t988 * t655, pkin(1) * t699 + t1021 * t985 + t988 * t660, pkin(1) * t681 + t1023 * t985 + t988 * t628, pkin(1) * t581 + t1024 * t985 + t988 * t615, t1079 * t985 + t988 * t710, t1092 * t985 + t988 * t650, t1084 * t985 + t988 * t689, t1080 * t985 + t988 * t709, t1083 * t985 + t988 * t690, t1075 * t985 + t988 * t752, pkin(1) * t588 + t1026 * t985 + t988 * t537, pkin(1) * t593 + t1025 * t985 + t988 * t540, pkin(1) * t572 + t1027 * t985 + t988 * t512, pkin(1) * t503 + t1028 * t985 + t988 * t494, t1097 * t985 + t988 * t605, t1104 * t985 + t988 * t567, t1101 * t985 + t988 * t583, t1098 * t985 + t988 * t604, t1100 * t985 + t988 * t584, t1096 * t985 + t988 * t632, pkin(1) * t515 + t1030 * t985 + t988 * t475, pkin(1) * t517 + t1029 * t985 + t988 * t477, pkin(1) * t507 + t1031 * t985 + t988 * t470, pkin(1) * t469 + t1032 * t985 + t988 * t456;];
tauB_reg = t1;
