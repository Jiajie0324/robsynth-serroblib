% Calculate vector of inverse dynamics joint torques for
% S5RPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,alpha3,d1,d3,d4,d5,theta2]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:22
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RPRRR14_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(11,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR14_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR14_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR14_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR14_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S5RPRRR14_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RPRRR14_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RPRRR14_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RPRRR14_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:16:55
% EndTime: 2019-12-31 19:19:04
% DurationCPUTime: 106.18s
% Computational Cost: add. (109121->1499), mult. (319101->1997), div. (0->0), fcn. (390535->14), ass. (0->520)
t583 = sin(qJ(3));
t580 = cos(pkin(5));
t749 = cos(pkin(11));
t768 = sin(qJ(1));
t677 = t768 * t749;
t746 = sin(pkin(11));
t771 = cos(qJ(1));
t679 = t771 * t746;
t622 = -t580 * t679 - t677;
t770 = cos(qJ(3));
t676 = t768 * t746;
t681 = t771 * t749;
t623 = -t580 * t681 + t676;
t747 = sin(pkin(6));
t748 = sin(pkin(5));
t670 = t748 * t747;
t750 = cos(pkin(6));
t862 = t623 * t750 + t771 * t670;
t824 = t862 * t770;
t472 = -t583 * t622 + t824;
t672 = t750 * t748;
t517 = t623 * t747 - t771 * t672;
t834 = qJD(3) * t517;
t406 = qJD(4) * t472 + t834;
t812 = t862 * t583;
t475 = t622 * t770 + t812;
t582 = sin(qJ(4));
t769 = cos(qJ(4));
t827 = t475 * t582 + t517 * t769;
t265 = -qJD(5) * t827 + t406;
t547 = -t580 * t676 + t681;
t624 = t580 * t677 + t679;
t825 = -t624 * t750 + t768 * t670;
t809 = t825 * t770;
t476 = t547 * t583 - t809;
t613 = t624 * t747;
t641 = t768 * t672;
t518 = t613 + t641;
t511 = qJD(3) * t518;
t407 = qJD(4) * t476 + t511;
t807 = t825 * t583;
t477 = t547 * t770 + t807;
t649 = -t477 * t582 + t518 * t769;
t266 = -qJD(5) * t649 + t407;
t545 = t580 * t750 - t670 * t749;
t528 = qJD(3) * t545 + qJD(1);
t669 = t748 * t746;
t671 = t749 * t748;
t808 = t747 * t580 + t750 * t671;
t595 = -t583 * t669 + t770 * t808;
t478 = -qJD(4) * t595 + t528;
t515 = t583 * t808 + t770 * t669;
t648 = -t515 * t582 + t545 * t769;
t365 = -qJD(5) * t648 + t478;
t402 = t475 * t769 - t517 * t582;
t581 = sin(qJ(5));
t584 = cos(qJ(5));
t291 = t402 * t581 + t472 * t584;
t294 = t402 * t584 - t472 * t581;
t135 = Icges(6,5) * t294 - Icges(6,6) * t291 + Icges(6,3) * t827;
t739 = Icges(6,4) * t294;
t138 = -Icges(6,2) * t291 + Icges(6,6) * t827 + t739;
t285 = Icges(6,4) * t291;
t141 = Icges(6,1) * t294 + Icges(6,5) * t827 - t285;
t48 = t135 * t827 - t138 * t291 + t141 * t294;
t404 = t477 * t769 + t518 * t582;
t295 = -t404 * t581 + t476 * t584;
t296 = t404 * t584 + t476 * t581;
t136 = Icges(6,5) * t296 + Icges(6,6) * t295 - Icges(6,3) * t649;
t738 = Icges(6,4) * t296;
t139 = Icges(6,2) * t295 - Icges(6,6) * t649 + t738;
t286 = Icges(6,4) * t295;
t142 = Icges(6,1) * t296 - Icges(6,5) * t649 + t286;
t49 = -t136 * t827 + t291 * t139 - t142 * t294;
t471 = t515 * t769 + t545 * t582;
t382 = -t471 * t581 - t584 * t595;
t383 = t471 * t584 - t581 * t595;
t208 = Icges(6,5) * t383 + Icges(6,6) * t382 - Icges(6,3) * t648;
t737 = Icges(6,4) * t383;
t209 = Icges(6,2) * t382 - Icges(6,6) * t648 + t737;
t379 = Icges(6,4) * t382;
t210 = Icges(6,1) * t383 - Icges(6,5) * t648 + t379;
t68 = -t208 * t827 + t209 * t291 - t210 * t294;
t16 = t265 * t48 + t266 * t49 + t365 * t68;
t50 = t135 * t649 - t138 * t295 - t141 * t296;
t51 = -t136 * t649 + t295 * t139 + t296 * t142;
t69 = -t208 * t649 + t209 * t295 + t210 * t296;
t17 = t265 * t50 + t266 * t51 + t69 * t365;
t54 = t135 * t648 - t138 * t382 - t141 * t383;
t667 = t294 * rSges(6,1) - t291 * rSges(6,2);
t143 = -rSges(6,3) * t827 - t667;
t766 = t402 * pkin(4);
t257 = pkin(10) * t827 + t766;
t729 = t143 - t257;
t211 = rSges(6,1) * t383 + rSges(6,2) * t382 - rSges(6,3) * t648;
t351 = pkin(4) * t471 - pkin(10) * t648;
t887 = -t143 * t365 + t211 * t265 + t257 * t478 + t351 * t406;
t408 = Icges(4,5) * t515 + Icges(4,6) * t595 + Icges(4,3) * t545;
t743 = Icges(4,4) * t515;
t409 = Icges(4,2) * t595 + Icges(4,6) * t545 + t743;
t501 = Icges(4,4) * t595;
t410 = Icges(4,1) * t515 + Icges(4,5) * t545 + t501;
t147 = t408 * t518 - t409 * t476 + t410 * t477;
t303 = Icges(4,5) * t475 + Icges(4,6) * t472 - Icges(4,3) * t517;
t745 = Icges(4,4) * t475;
t306 = Icges(4,2) * t472 - Icges(4,6) * t517 + t745;
t453 = Icges(4,4) * t472;
t309 = Icges(4,1) * t475 - Icges(4,5) * t517 + t453;
t105 = -t303 * t518 + t306 * t476 - t309 * t477;
t304 = Icges(4,5) * t477 - Icges(4,6) * t476 + Icges(4,3) * t518;
t744 = Icges(4,4) * t477;
t307 = -Icges(4,2) * t476 + Icges(4,6) * t518 + t744;
t454 = Icges(4,4) * t476;
t310 = Icges(4,1) * t477 + Icges(4,5) * t518 - t454;
t106 = t518 * t304 - t476 * t307 + t477 * t310;
t659 = t105 * t517 + t106 * t518;
t47 = qJD(3) * t659 + t147 * t528;
t216 = Icges(5,5) * t402 - Icges(5,6) * t827 - Icges(5,3) * t472;
t742 = Icges(5,4) * t402;
t219 = -Icges(5,2) * t827 - Icges(5,6) * t472 + t742;
t384 = Icges(5,4) * t827;
t222 = Icges(5,1) * t402 - Icges(5,5) * t472 - t384;
t72 = -t216 * t472 - t219 * t827 + t222 * t402;
t217 = Icges(5,5) * t404 + Icges(5,6) * t649 + Icges(5,3) * t476;
t741 = Icges(5,4) * t404;
t220 = Icges(5,2) * t649 + Icges(5,6) * t476 + t741;
t385 = Icges(5,4) * t649;
t223 = Icges(5,1) * t404 + Icges(5,5) * t476 + t385;
t73 = t472 * t217 + t220 * t827 - t223 * t402;
t297 = Icges(5,5) * t471 + Icges(5,6) * t648 - Icges(5,3) * t595;
t740 = Icges(5,4) * t471;
t298 = Icges(5,2) * t648 - Icges(5,6) * t595 + t740;
t445 = Icges(5,4) * t648;
t299 = Icges(5,1) * t471 - Icges(5,5) * t595 + t445;
t861 = -t297 * t472 - t298 * t827 + t299 * t402;
t30 = t406 * t72 + t407 * t73 - t861 * t478;
t74 = -t216 * t476 - t219 * t649 - t222 * t404;
t75 = t476 * t217 + t220 * t649 + t404 * t223;
t90 = t297 * t476 + t298 * t649 + t299 * t404;
t31 = t406 * t74 + t407 * t75 + t90 * t478;
t81 = t216 * t595 - t219 * t648 - t222 * t471;
t225 = t402 * rSges(5,1) - rSges(5,2) * t827 - t472 * rSges(5,3);
t361 = -t475 * pkin(3) + t472 * pkin(9);
t680 = t771 * t748;
t704 = t768 * pkin(1);
t553 = -qJ(2) * t680 + t704;
t835 = t517 * pkin(8);
t602 = pkin(2) * t622 - t835;
t826 = t602 - t553;
t869 = -t361 + t826;
t884 = t869 + t225;
t104 = t517 * t304 - t472 * t307 - t310 * t475;
t845 = t303 * t517 - t306 * t472 - t309 * t475;
t660 = t104 * t518 - t845 * t517;
t300 = rSges(5,1) * t471 + rSges(5,2) * t648 - rSges(5,3) * t595;
t878 = t225 * t478 + t300 * t406;
t125 = -t303 * t545 - t306 * t595 - t309 * t515;
t312 = t475 * rSges(4,1) + t472 * rSges(4,2) - t517 * rSges(4,3);
t868 = t826 + t312;
t411 = rSges(4,1) * t515 + rSges(4,2) * t595 + rSges(4,3) * t545;
t867 = t312 * t528 + t411 * t834;
t434 = pkin(3) * t515 - pkin(9) * t595;
t866 = -t361 * t528 + t434 * t834;
t693 = t834 / 0.2e1;
t844 = -t408 * t517 + t409 * t472 + t410 * t475;
t539 = t623 * rSges(3,2);
t701 = rSges(3,1) * t622 + rSges(3,3) * t680 + t539;
t720 = -t553 + t701;
t537 = t547 * qJD(1);
t714 = qJD(3) * t583;
t337 = qJD(1) * t807 - qJD(3) * t824 + t537 * t770 + t622 * t714;
t498 = t518 * qJD(1);
t206 = -qJD(4) * t402 + t337 * t582 - t498 * t769;
t336 = -qJD(1) * t809 - qJD(3) * t475 + t537 * t583;
t427 = qJD(3) * t498 + qJDD(3) * t517;
t213 = qJD(4) * t336 + qJDD(4) * t472 + t427;
t100 = qJD(5) * t206 - qJDD(5) * t827 + t213;
t536 = t622 * qJD(1);
t335 = qJD(1) * t812 + qJD(3) * t809 + t536 * t770 - t547 * t714;
t497 = t517 * qJD(1);
t204 = qJD(4) * t404 + t335 * t582 + t497 * t769;
t334 = -qJD(1) * t824 + qJD(3) * t477 + t536 * t583;
t428 = -qJD(3) * t497 + qJDD(3) * t518;
t214 = qJD(4) * t334 + qJDD(4) * t476 + t428;
t101 = qJD(5) * t204 - qJDD(5) * t649 + t214;
t493 = t595 * qJD(3);
t377 = qJD(4) * t648 + t493 * t769;
t494 = t515 * qJD(3);
t229 = -qJD(5) * t383 - t377 * t581 + t494 * t584;
t230 = qJD(5) * t382 + t377 * t584 + t494 * t581;
t376 = qJD(4) * t471 + t493 * t582;
t107 = Icges(6,5) * t230 + Icges(6,6) * t229 + Icges(6,3) * t376;
t108 = Icges(6,4) * t230 + Icges(6,2) * t229 + Icges(6,6) * t376;
t109 = Icges(6,1) * t230 + Icges(6,4) * t229 + Icges(6,5) * t376;
t205 = qJD(4) * t649 + t335 * t769 - t497 * t582;
t121 = -qJD(5) * t296 - t205 * t581 + t334 * t584;
t122 = qJD(5) * t295 + t205 * t584 + t334 * t581;
t19 = -t107 * t649 + t108 * t295 + t109 * t296 + t121 * t209 + t122 * t210 + t204 * t208;
t527 = qJDD(3) * t545 + qJDD(1);
t398 = qJD(4) * t494 - qJDD(4) * t595 + t527;
t212 = qJD(5) * t376 - qJDD(5) * t648 + t398;
t207 = qJD(4) * t827 + t337 * t769 + t498 * t582;
t123 = qJD(5) * t294 - t207 * t581 + t336 * t584;
t124 = qJD(5) * t291 + t207 * t584 + t336 * t581;
t57 = Icges(6,5) * t124 + Icges(6,6) * t123 + Icges(6,3) * t206;
t59 = Icges(6,4) * t124 + Icges(6,2) * t123 + Icges(6,6) * t206;
t61 = Icges(6,1) * t124 + Icges(6,4) * t123 + Icges(6,5) * t206;
t8 = -t121 * t138 - t122 * t141 - t135 * t204 + t295 * t59 + t296 * t61 - t57 * t649;
t56 = Icges(6,5) * t122 + Icges(6,6) * t121 + Icges(6,3) * t204;
t58 = Icges(6,4) * t122 + Icges(6,2) * t121 + Icges(6,6) * t204;
t60 = Icges(6,1) * t122 + Icges(6,4) * t121 + Icges(6,5) * t204;
t9 = t121 * t139 + t122 * t142 + t136 * t204 + t295 * t58 + t296 * t60 - t56 * t649;
t1 = t100 * t50 + t101 * t51 + t19 * t365 + t212 * t69 + t265 * t8 + t266 * t9;
t93 = Icges(5,5) * t207 - Icges(5,6) * t206 + Icges(5,3) * t336;
t95 = Icges(5,4) * t207 - Icges(5,2) * t206 + Icges(5,6) * t336;
t97 = Icges(5,1) * t207 - Icges(5,4) * t206 + Icges(5,5) * t336;
t21 = t204 * t219 - t205 * t222 - t216 * t334 + t404 * t97 + t476 * t93 + t649 * t95;
t92 = Icges(5,5) * t205 - Icges(5,6) * t204 + Icges(5,3) * t334;
t94 = Icges(5,4) * t205 - Icges(5,2) * t204 + Icges(5,6) * t334;
t96 = Icges(5,1) * t205 - Icges(5,4) * t204 + Icges(5,5) * t334;
t22 = -t204 * t220 + t205 * t223 + t217 * t334 + t404 * t96 + t476 * t92 + t649 * t94;
t231 = Icges(5,5) * t377 - Icges(5,6) * t376 + Icges(5,3) * t494;
t232 = Icges(5,4) * t377 - Icges(5,2) * t376 + Icges(5,6) * t494;
t233 = Icges(5,1) * t377 - Icges(5,4) * t376 + Icges(5,5) * t494;
t35 = -t204 * t298 + t205 * t299 + t231 * t476 + t232 * t649 + t233 * t404 + t297 * t334;
t823 = t21 * t406 + t213 * t74 + t214 * t75 + t22 * t407 + t35 * t478 + t398 * t90 + t1;
t10 = -t123 * t138 - t124 * t141 - t135 * t206 + t291 * t59 - t294 * t61 - t57 * t827;
t11 = t123 * t139 + t124 * t142 + t136 * t206 + t291 * t58 - t294 * t60 - t56 * t827;
t20 = -t107 * t827 + t108 * t291 - t109 * t294 + t123 * t209 + t124 * t210 + t206 * t208;
t2 = t10 * t265 + t100 * t48 + t101 * t49 + t11 * t266 + t20 * t365 + t212 * t68;
t23 = t206 * t219 - t207 * t222 - t216 * t336 - t402 * t97 + t472 * t93 + t827 * t95;
t24 = -t206 * t220 + t207 * t223 + t217 * t336 - t402 * t96 + t472 * t92 + t827 * t94;
t36 = -t206 * t298 + t207 * t299 + t231 * t472 + t232 * t827 - t233 * t402 + t297 * t336;
t822 = t213 * t72 + t214 * t73 + t23 * t406 + t24 * t407 + t36 * t478 - t398 * t861 + t2;
t55 = -t136 * t648 + t139 * t382 + t142 * t383;
t755 = t55 * t101;
t756 = t54 * t100;
t13 = t136 * t376 + t139 * t229 + t142 * t230 + t382 * t58 + t383 * t60 - t56 * t648;
t759 = t13 * t266;
t12 = -t135 * t376 - t138 * t229 - t141 * t230 + t382 * t59 + t383 * t61 - t57 * t648;
t760 = t12 * t265;
t27 = -t107 * t648 + t108 * t382 + t109 * t383 + t208 * t376 + t209 * t229 + t210 * t230;
t71 = -t208 * t648 + t209 * t382 + t210 * t383;
t764 = t71 * t212 + t27 * t365;
t3 = t755 + t756 + t759 + t760 + t764;
t82 = -t217 * t595 + t220 * t648 + t223 * t471;
t753 = t82 * t214;
t754 = t81 * t213;
t29 = t217 * t494 - t220 * t376 + t223 * t377 + t471 * t96 - t595 * t92 + t648 * t94;
t757 = t29 * t407;
t28 = -t216 * t494 + t219 * t376 - t222 * t377 + t471 * t97 - t595 * t93 + t648 * t95;
t758 = t28 * t406;
t102 = -t297 * t595 + t298 * t648 + t299 * t471;
t53 = -t231 * t595 + t232 * t648 + t233 * t471 + t297 * t494 - t298 * t376 + t299 * t377;
t763 = t102 * t398 + t53 * t478;
t821 = t753 + t754 + t757 + t758 + t763 + t3;
t820 = t30 + t16;
t819 = t31 + t17;
t364 = t477 * pkin(3) + t476 * pkin(9);
t145 = t296 * rSges(6,1) + t295 * rSges(6,2) - rSges(6,3) * t649;
t259 = t404 * pkin(4) - pkin(10) * t649;
t728 = t145 + t259;
t817 = -t364 - t728;
t726 = t211 + t351;
t816 = -t434 - t726;
t815 = rSges(6,1) * t584 - rSges(6,2) * t581;
t561 = pkin(8) * t641;
t608 = pkin(8) * t613;
t482 = t547 * pkin(2) + t561 + t608;
t579 = t771 * pkin(1);
t678 = t748 * t768;
t717 = qJ(2) * t678 + t579;
t598 = t482 + t717;
t541 = t624 * rSges(3,2);
t484 = t547 * rSges(3,1) + rSges(3,3) * t678 - t541;
t469 = t484 + t717;
t806 = -t17 / 0.2e1;
t805 = -t31 / 0.2e1;
t804 = t100 / 0.2e1;
t803 = t101 / 0.2e1;
t802 = t212 / 0.2e1;
t801 = t213 / 0.2e1;
t800 = t214 / 0.2e1;
t799 = -t265 / 0.2e1;
t798 = t265 / 0.2e1;
t797 = -t266 / 0.2e1;
t796 = t266 / 0.2e1;
t793 = -t365 / 0.2e1;
t792 = t365 / 0.2e1;
t791 = t398 / 0.2e1;
t790 = -t406 / 0.2e1;
t789 = t406 / 0.2e1;
t788 = -t407 / 0.2e1;
t787 = t407 / 0.2e1;
t786 = t427 / 0.2e1;
t785 = t428 / 0.2e1;
t782 = -t478 / 0.2e1;
t781 = t478 / 0.2e1;
t772 = -rSges(6,3) - pkin(10);
t767 = t207 * pkin(4);
t127 = t205 * pkin(4) + t204 * pkin(10);
t62 = t122 * rSges(6,1) + t121 * rSges(6,2) + t204 * rSges(6,3);
t752 = t127 + t62;
t128 = t206 * pkin(10) + t767;
t668 = -t124 * rSges(6,1) - t123 * rSges(6,2);
t63 = t206 * rSges(6,3) - t668;
t751 = t128 + t63;
t736 = t125 * t427;
t126 = t304 * t545 + t307 * t595 + t310 * t515;
t735 = t126 * t428;
t734 = t472 * t582;
t733 = t476 * t582;
t732 = t595 * t582;
t110 = rSges(6,1) * t230 + rSges(6,2) * t229 + rSges(6,3) * t376;
t242 = pkin(4) * t377 + pkin(10) * t376;
t731 = t110 + t242;
t414 = Icges(4,5) * t493 - Icges(4,6) * t494;
t415 = Icges(4,4) * t493 - Icges(4,2) * t494;
t416 = Icges(4,1) * t493 - Icges(4,4) * t494;
t118 = -t409 * t494 + t410 * t493 + t414 * t545 + t415 * t595 + t416 * t515;
t154 = t408 * t545 + t409 * t595 + t410 * t515;
t730 = t118 * t528 + t154 * t527;
t228 = t337 * pkin(3) + t336 * pkin(9);
t727 = t518 * t228 - t497 * t361;
t226 = t404 * rSges(5,1) + rSges(5,2) * t649 + t476 * rSges(5,3);
t725 = -t226 - t364;
t724 = -t300 - t434;
t418 = pkin(3) * t493 + pkin(9) * t494;
t723 = t517 * t418 + t498 * t434;
t722 = Icges(4,1) * t595 - t409 - t743;
t721 = Icges(4,2) * t515 - t410 - t501;
t700 = t472 * t769;
t342 = -pkin(4) * t700 - pkin(10) * t734;
t699 = t476 * t769;
t343 = -pkin(4) * t699 - pkin(10) * t733;
t698 = t595 * t769;
t423 = pkin(4) * t698 + pkin(10) * t732;
t572 = qJD(2) * t680;
t719 = qJD(1) * t572 + qJDD(2) * t678;
t571 = qJD(2) * t678;
t718 = -qJD(1) * t553 + t571;
t713 = qJD(4) * t475;
t712 = qJD(4) * t477;
t711 = qJD(4) * t515;
t710 = qJD(5) * t582;
t709 = 2 * m(3);
t708 = 2 * m(4);
t707 = 2 * m(5);
t706 = 2 * m(6);
t98 = t205 * rSges(5,1) - t204 * rSges(5,2) + t334 * rSges(5,3);
t194 = t335 * rSges(4,1) - t334 * rSges(4,2) - t497 * rSges(4,3);
t696 = t581 * t769;
t338 = t472 * t696 - t475 * t584;
t695 = t584 * t769;
t339 = -t472 * t695 - t475 * t581;
t175 = t339 * rSges(6,1) + t338 * rSges(6,2) - rSges(6,3) * t734;
t340 = t476 * t696 + t477 * t584;
t341 = -t476 * t695 + t477 * t581;
t176 = t341 * rSges(6,1) + t340 * rSges(6,2) - rSges(6,3) * t733;
t421 = t515 * t584 - t595 * t696;
t422 = t515 * t581 + t595 * t695;
t263 = t422 * rSges(6,1) + t421 * rSges(6,2) + rSges(6,3) * t732;
t313 = t477 * rSges(4,1) - t476 * rSges(4,2) + t518 * rSges(4,3);
t703 = qJD(1) * t602 + t718;
t653 = qJD(1) * t680;
t702 = t536 * rSges(3,1) + rSges(3,3) * t653 + qJD(1) * t539;
t694 = -t834 / 0.2e1;
t691 = t511 / 0.2e1;
t690 = t537 * pkin(2) + qJD(1) * t608;
t227 = t335 * pkin(3) + t334 * pkin(9);
t360 = -t472 * pkin(3) - pkin(9) * t475;
t363 = -t476 * pkin(3) + pkin(9) * t477;
t433 = pkin(3) * t595 + pkin(9) * t515;
t255 = pkin(4) * t827 - pkin(10) * t402;
t258 = pkin(4) * t649 + pkin(10) * t404;
t350 = pkin(4) * t648 + pkin(10) * t471;
t688 = -t708 / 0.2e1;
t687 = t708 / 0.2e1;
t686 = -t707 / 0.2e1;
t685 = t707 / 0.2e1;
t684 = -t706 / 0.2e1;
t683 = t706 / 0.2e1;
t682 = -t360 * t528 + t433 * t834;
t674 = t360 * t511 - t363 * t834;
t673 = t528 * t363 - t433 * t511;
t188 = Icges(4,5) * t335 - Icges(4,6) * t334 - Icges(4,3) * t497;
t189 = Icges(4,5) * t337 - Icges(4,6) * t336 + Icges(4,3) * t498;
t190 = Icges(4,4) * t335 - Icges(4,2) * t334 - Icges(4,6) * t497;
t191 = Icges(4,4) * t337 - Icges(4,2) * t336 + Icges(4,6) * t498;
t192 = Icges(4,1) * t335 - Icges(4,4) * t334 - Icges(4,5) * t497;
t193 = Icges(4,1) * t337 - Icges(4,4) * t336 + Icges(4,5) * t498;
t666 = (t189 * t518 - t191 * t476 + t193 * t477 + t303 * t497 + t306 * t334 - t309 * t335) * t517 + (t188 * t518 - t190 * t476 + t192 * t477 - t304 * t497 - t307 * t334 + t310 * t335) * t518;
t665 = (t189 * t517 - t191 * t472 - t193 * t475 - t303 * t498 + t306 * t336 - t309 * t337) * t517 + (t188 * t517 - t190 * t472 - t192 * t475 + t304 * t498 - t307 * t336 + t310 * t337) * t518;
t64 = t189 * t545 + t191 * t595 + t193 * t515 + t306 * t494 - t309 * t493;
t65 = t188 * t545 + t190 * t595 + t192 * t515 - t307 * t494 + t310 * t493;
t664 = t517 * t64 + t518 * t65;
t663 = -Icges(6,1) * t584 + Icges(6,4) * t581;
t662 = -Icges(6,4) * t584 + Icges(6,2) * t581;
t661 = -Icges(6,5) * t584 + Icges(6,6) * t581;
t195 = t337 * rSges(4,1) - t336 * rSges(4,2) + t498 * rSges(4,3);
t658 = -t194 * t517 + t195 * t518;
t657 = -t312 * t518 - t313 * t517;
t656 = (-Icges(4,5) * t472 + Icges(4,6) * t475) * t517 + (-Icges(4,5) * t476 - Icges(4,6) * t477) * t518;
t655 = qJD(1) * t826 + t571;
t654 = qJD(1) * t598 - t572;
t281 = -rSges(5,1) * t700 + rSges(5,2) * t734 - rSges(5,3) * t475;
t282 = -rSges(5,1) * t699 + rSges(5,2) * t733 + t477 * rSges(5,3);
t371 = rSges(5,1) * t698 - rSges(5,2) * t732 + t515 * rSges(5,3);
t186 = -rSges(6,3) * t402 + t815 * t827;
t187 = t404 * rSges(6,3) + t649 * t815;
t271 = t471 * rSges(6,3) + t648 * t815;
t652 = qJD(1) * t678;
t578 = qJD(2) * t580;
t651 = t361 * t511 - t364 * t834 + t578;
t647 = -Icges(5,1) * t769 + Icges(5,4) * t582;
t646 = -Icges(5,4) * t769 + Icges(5,2) * t582;
t645 = -Icges(5,5) * t769 + Icges(5,6) * t582;
t644 = qJ(2) * t653 - qJD(1) * t704 + t571;
t564 = rSges(2,1) * t771 - rSges(2,2) * t768;
t563 = rSges(2,1) * t768 + rSges(2,2) * t771;
t99 = t207 * rSges(5,1) - t206 * rSges(5,2) + t336 * rSges(5,3);
t638 = (Icges(6,5) * t291 + Icges(6,6) * t294) * t265 + (Icges(6,5) * t295 - Icges(6,6) * t296) * t266 + (Icges(6,5) * t382 - Icges(6,6) * t383) * t365;
t637 = (Icges(5,5) * t827 + Icges(5,6) * t402) * t406 + (Icges(5,5) * t649 - Icges(5,6) * t404) * t407 + (Icges(5,5) * t648 - Icges(5,6) * t471) * t478;
t636 = t703 + t866;
t635 = (-Icges(4,1) * t476 - t307 - t744) * t518 + (-Icges(4,1) * t472 + t306 + t745) * t517;
t634 = (Icges(4,2) * t477 - t310 + t454) * t518 + (-Icges(4,2) * t475 + t309 + t453) * t517;
t632 = t655 + t866;
t631 = t364 * t528 - t434 * t511 + t654;
t577 = qJDD(2) * t580;
t628 = -t227 * t834 + t228 * t511 + t428 * t361 - t364 * t427 + t577;
t627 = qJDD(1) * t717 - qJDD(2) * t680 + (t571 + t644) * qJD(1);
t523 = qJD(1) * t717 - t572;
t625 = (-qJD(1) * t561 - t523 - t690) * qJD(1) + t826 * qJDD(1) + t719;
t600 = t536 * pkin(2) - qJD(1) * t835;
t621 = qJD(1) * t600 + qJDD(1) * t482 + t627;
t618 = (Icges(6,1) * t295 - t139 - t738) * t266 + (Icges(6,1) * t291 + t138 + t739) * t265 + (Icges(6,1) * t382 - t209 - t737) * t365;
t617 = (-Icges(6,2) * t296 + t142 + t286) * t266 + (Icges(6,2) * t294 - t141 + t285) * t265 + (-Icges(6,2) * t383 + t210 + t379) * t365;
t616 = (Icges(5,1) * t649 - t220 - t741) * t407 + (Icges(5,1) * t827 + t219 + t742) * t406 + (Icges(5,1) * t648 - t298 - t740) * t478;
t615 = (Icges(5,2) * t404 - t223 - t385) * t407 + (-Icges(5,2) * t402 + t222 - t384) * t406 + (Icges(5,2) * t471 - t299 - t445) * t478;
t601 = -t228 * t528 - t361 * t527 + t418 * t834 + t427 * t434 + t625;
t597 = t528 * t227 + t527 * t364 - t418 * t511 - t428 * t434 + t621;
t594 = t364 + t598;
t593 = t537 * rSges(3,1) + rSges(3,3) * t652 - qJD(1) * t541;
t592 = t572 + (-t561 - t717) * qJD(1) - t690;
t591 = (Icges(6,3) * t404 + t139 * t581 - t142 * t584 - t649 * t661) * t266 + (-Icges(6,3) * t402 - t138 * t581 + t141 * t584 - t661 * t827) * t265 + (Icges(6,3) * t471 + t209 * t581 - t210 * t584 - t648 * t661) * t365;
t590 = t600 + t644;
t588 = -t228 + t592;
t587 = (Icges(5,3) * t477 + t220 * t582 - t223 * t769 + t476 * t645) * t407 + (-Icges(5,3) * t475 - t219 * t582 + t222 * t769 + t472 * t645) * t406 + (Icges(5,3) * t515 + t298 * t582 - t299 * t769 - t595 * t645) * t478;
t586 = t227 + t590;
t534 = g(1) * t678 - g(2) * t680 + g(3) * t580;
t432 = rSges(4,1) * t595 - rSges(4,2) * t515;
t429 = Icges(4,5) * t595 - Icges(4,6) * t515;
t426 = qJD(1) * t469 - t572;
t425 = qJD(1) * t720 + t571;
t424 = t595 * t710 + t711;
t417 = rSges(4,1) * t493 - rSges(4,2) * t494;
t378 = t517 * t434;
t369 = Icges(5,5) * t515 - t595 * t647;
t368 = Icges(5,6) * t515 - t595 * t646;
t359 = -rSges(4,1) * t476 - rSges(4,2) * t477;
t358 = -rSges(4,1) * t472 + rSges(4,2) * t475;
t349 = rSges(5,1) * t648 - rSges(5,2) * t471;
t345 = -t476 * t710 + t712;
t344 = -t472 * t710 - t713;
t322 = t545 * t364;
t317 = t518 * t361;
t284 = qJD(1) * t702 + qJDD(1) * t484 + t627;
t283 = t719 + t720 * qJDD(1) + (-t523 - t593) * qJD(1);
t280 = Icges(5,5) * t477 + t476 * t647;
t279 = -Icges(5,5) * t475 + t472 * t647;
t278 = Icges(5,6) * t477 + t476 * t646;
t277 = -Icges(5,6) * t475 + t472 * t646;
t270 = Icges(6,5) * t471 - t648 * t663;
t269 = Icges(6,6) * t471 - t648 * t662;
t262 = Icges(6,1) * t422 + Icges(6,4) * t421 + Icges(6,5) * t732;
t261 = Icges(6,4) * t422 + Icges(6,2) * t421 + Icges(6,6) * t732;
t260 = Icges(6,5) * t422 + Icges(6,6) * t421 + Icges(6,3) * t732;
t254 = rSges(5,1) * t649 - rSges(5,2) * t404;
t253 = rSges(5,1) * t827 + rSges(5,2) * t402;
t246 = rSges(6,1) * t382 - rSges(6,2) * t383;
t235 = t598 + t313;
t234 = rSges(5,1) * t377 - rSges(5,2) * t376 + rSges(5,3) * t494;
t199 = t545 * t227;
t185 = Icges(6,5) * t404 - t649 * t663;
t184 = -Icges(6,5) * t402 - t663 * t827;
t183 = Icges(6,6) * t404 - t649 * t662;
t182 = -Icges(6,6) * t402 - t662 * t827;
t174 = Icges(6,1) * t341 + Icges(6,4) * t340 - Icges(6,5) * t733;
t173 = Icges(6,1) * t339 + Icges(6,4) * t338 - Icges(6,5) * t734;
t172 = Icges(6,4) * t341 + Icges(6,2) * t340 - Icges(6,6) * t733;
t171 = Icges(6,4) * t339 + Icges(6,2) * t338 - Icges(6,6) * t734;
t170 = Icges(6,5) * t341 + Icges(6,6) * t340 - Icges(6,3) * t733;
t169 = Icges(6,5) * t339 + Icges(6,6) * t338 - Icges(6,3) * t734;
t168 = rSges(6,1) * t295 - rSges(6,2) * t296;
t167 = rSges(6,1) * t291 + rSges(6,2) * t294;
t153 = t313 * t528 - t411 * t511 + t654;
t152 = t655 + t867;
t151 = qJD(3) * t657 + t578;
t133 = t594 + t226;
t87 = t594 + t728;
t86 = t226 * t478 - t300 * t407 + t631;
t85 = t632 + t878;
t80 = t528 * t194 + t527 * t313 - t428 * t411 - t417 * t511 + t621;
t79 = -t195 * t528 + t312 * t527 + t411 * t427 + t417 * t834 + t625;
t78 = -t336 * t409 + t337 * t410 + t408 * t498 + t414 * t517 - t415 * t472 - t416 * t475;
t77 = -t334 * t409 + t335 * t410 - t408 * t497 + t414 * t518 - t415 * t476 + t416 * t477;
t76 = -t225 * t407 - t226 * t406 + t651;
t70 = qJD(3) * t658 - t312 * t428 - t313 * t427 + t577;
t41 = t145 * t365 - t211 * t266 + t259 * t478 - t351 * t407 + t631;
t40 = t632 + t887;
t37 = t143 * t266 - t145 * t265 - t257 * t407 - t259 * t406 + t651;
t34 = -t214 * t300 + t398 * t226 - t407 * t234 + t478 * t98 + t597;
t33 = t213 * t300 + t225 * t398 + t234 * t406 - t478 * t99 + t601;
t32 = t102 * t478 + t406 * t81 + t407 * t82;
t26 = -t213 * t226 - t214 * t225 - t406 * t98 + t407 * t99 + t628;
t18 = t265 * t54 + t266 * t55 + t365 * t71;
t15 = -t101 * t211 - t266 * t110 + t478 * t127 + t212 * t145 - t214 * t351 - t407 * t242 + t398 * t259 + t365 * t62 + t597;
t14 = t100 * t211 + t110 * t265 - t128 * t478 - t143 * t212 + t213 * t351 + t242 * t406 + t257 * t398 - t365 * t63 + t601;
t7 = -t100 * t145 + t101 * t143 - t127 * t406 + t128 * t407 - t213 * t259 - t214 * t257 - t265 * t62 + t266 * t63 + t628;
t4 = [(-t40 + t636 + t887) * t41 * t684 + (m(2) * (t563 ^ 2 + t564 ^ 2) + (0.2e1 * Icges(3,5) * t669 + 0.2e1 * Icges(3,6) * t671 + Icges(3,3) * t580) * t580 + (t749 ^ 2 * Icges(3,2) + (Icges(3,1) * t746 + 0.2e1 * Icges(3,4) * t749) * t746) * t748 ^ 2 + Icges(2,3)) * qJDD(1) + (t636 - t85 + t878) * t86 * t686 + (t79 * t868 + t152 * (-t195 + t592) + t80 * t235 + t153 * (t590 + t194)) * t687 - m(4) * (g(1) * t868 + g(2) * t235) - t844 * t786 - m(6) * (g(1) * (t869 - t729) + g(2) * t87) - m(5) * (g(1) * t884 + g(2) * t133) + (t33 * t884 + t85 * (t588 - t99) + t34 * t133 + t86 * (t586 + t98)) * t685 + (-t152 + t703 + t867) * t153 * t688 + (t64 + t78 + t47) * t693 + t17 * t799 - t406 * t805 - t265 * t806 - t861 * t801 + (t14 * (-t772 * t827 + t667 + t766 + t869) + t40 * (t206 * t772 + t588 + t668 - t767) + t15 * t87 + t41 * (t586 + t752)) * t683 + t763 + t764 - (qJD(1) * t701 - t425 + t718) * t426 * t709 / 0.2e1 + (t283 * t720 + t425 * (-qJ(2) * t652 - qJD(1) * t579 + t572 - t593) + t284 * t469 + t426 * (t644 + t702)) * t709 / 0.2e1 + t760 / 0.2e1 + t756 / 0.2e1 + t19 * t796 + t20 * t798 + t90 * t800 + (t77 + t65) * t691 + t47 * t694 + t69 * t803 + t68 * t804 + t757 / 0.2e1 + t758 / 0.2e1 + t31 * t790 - m(3) * (g(1) * t720 + g(2) * t469) + t730 + t755 / 0.2e1 + t147 * t785 + t35 * t787 + t36 * t789 + t753 / 0.2e1 + t754 / 0.2e1 + t759 / 0.2e1 + t735 / 0.2e1 + t736 / 0.2e1 - m(2) * (-g(1) * t563 + g(2) * t564); (t14 * t678 - t15 * t680 + t7 * t580 - t534) * m(6) + (t26 * t580 + t33 * t678 - t34 * t680 - t534) * m(5) + (t70 * t580 + t678 * t79 - t680 * t80 - t534) * m(4) + (qJDD(2) * t580 ^ 2 + t283 * t678 - t284 * t680 - t534) * m(3); -((t429 * t518 + t476 * t721 + t477 * t722) * t528 + (t476 * t634 + t477 * t635 + t518 * t656) * qJD(3)) * t511 / 0.2e1 + (qJD(3) * t660 - t844 * t528 + t820) * t498 / 0.2e1 + (-t104 * t497 - t498 * t845 + t545 * t78 + t665) * t693 + (qJD(3) * t665 + t104 * t428 - t427 * t845 - t527 * t844 + t528 * t78 + t822) * t517 / 0.2e1 + (-t545 * t844 + t660) * t786 + (t79 * (t312 * t545 + t411 * t517) + t152 * (-t195 * t545 + t411 * t498 + t417 * t517) + t80 * (t313 * t545 - t411 * t518) + t153 * (t194 * t545 + t411 * t497 - t417 * t518) + t70 * t657 + t151 * (t312 * t497 - t313 * t498 + t658)) * t687 + ((t429 * t517 + t472 * t721 - t475 * t722) * t528 + (t472 * t634 - t475 * t635 + t517 * t656) * qJD(3)) * t694 + (t105 * t498 - t106 * t497 + t545 * t77 + t666) * t691 + (t19 * t545 - t497 * t51 + t498 * t50 + t517 * t8 + t518 * t9) * t796 + (t10 * t517 + t11 * t518 + t20 * t545 + t48 * t498 - t49 * t497) * t798 + t528 * (t118 * t545 + t125 * t498 - t126 * t497 + t664) / 0.2e1 + (t28 * t517 + t29 * t518 - t497 * t82 + t498 * t81 + t53 * t545) * t781 + (t21 * t517 + t22 * t518 + t35 * t545 - t497 * t75 + t498 * t74) * t787 + (t23 * t517 + t24 * t518 + t36 * t545 - t497 * t73 + t498 * t72) * t789 + (t12 * t517 + t13 * t518 + t27 * t545 - t497 * t55 + t498 * t54) * t792 - ((t429 * t545 + t515 * t722 - t595 * t721) * t528 + (t515 * t635 + t545 * t656 - t595 * t634) * qJD(3)) * t528 / 0.2e1 + (t40 * (-t143 * t424 - t175 * t365 + t211 * t344 + t263 * t265 - t342 * t478 + t406 * t423 + (t257 * t515 - t351 * t475) * qJD(4) + t682) + t41 * (t145 * t424 + t176 * t365 - t211 * t345 - t263 * t266 + t343 * t478 - t407 * t423 + (t259 * t515 - t351 * t477) * qJD(4) + t673) + t37 * (t143 * t345 - t145 * t344 + t175 * t266 - t176 * t265 + t342 * t407 - t343 * t406 + (-t257 * t477 + t259 * t475) * qJD(4) + t674)) * t684 + (t152 * (-t358 * t528 + t432 * t834) + t153 * (t359 * t528 - t432 * t511) + (t358 * t518 - t359 * t517) * qJD(3) * t151) * t688 + (t517 * t72 + t518 * t73 - t545 * t861) * t801 + ((t515 * t217 + t278 * t648 + t471 * t280) * t407 + (-t216 * t515 + t277 * t648 + t471 * t279) * t406 + (t515 * t297 + t368 * t648 + t471 * t369) * t478 + (t102 * t515 - t475 * t81 + t477 * t82) * qJD(4) - t587 * t595) * t782 + ((t477 * t217 + t278 * t649 + t404 * t280) * t407 + (-t216 * t477 + t277 * t649 + t404 * t279) * t406 + (t477 * t297 + t368 * t649 + t404 * t369) * t478 + (-t475 * t74 + t477 * t75 + t515 * t90) * qJD(4) + t587 * t476) * t788 + ((-t217 * t475 + t278 * t827 - t280 * t402) * t407 + (t216 * t475 + t277 * t827 - t279 * t402) * t406 + (-t297 * t475 + t368 * t827 - t369 * t402) * t478 + (-t475 * t72 + t477 * t73 - t515 * t861) * qJD(4) + t587 * t472) * t790 + (t85 * (-t281 * t478 + t371 * t406 + (t225 * t515 - t300 * t475) * qJD(4) + t682) + t86 * (t282 * t478 - t371 * t407 + (t226 * t515 - t300 * t477) * qJD(4) + t673) + t76 * (t281 * t407 - t282 * t406 + (-t225 * t477 + t226 * t475) * qJD(4) + t674)) * t686 + (t33 * (t300 * t517 + t378 + (t225 - t361) * t545) + t85 * (t234 * t517 + t300 * t498 + (-t228 - t99) * t545 + t723) + t34 * (t226 * t545 + t518 * t724 + t322) + t86 * (t545 * t98 + t199 + (-t234 - t418) * t518 - t724 * t497) + t26 * (-t225 * t518 + t517 * t725 + t317) + t76 * (t225 * t497 + t518 * t99 + (-t227 - t98) * t517 + t725 * t498 + t727)) * t685 - t344 * t16 / 0.2e1 + (t517 * t74 + t518 * t75 + t545 * t90) * t800 + (t517 * t54 + t518 * t55 + t545 * t71) * t802 + (t50 * t517 + t51 * t518 + t545 * t69) * t803 - (t47 + t819) * t497 / 0.2e1 + (t48 * t517 + t49 * t518 + t545 * t68) * t804 + t712 * t805 + t345 * t806 + t527 * (t125 * t517 + t126 * t518 + t154 * t545) / 0.2e1 + (-g(1) * (t363 + t176 + t343) - g(2) * (t360 + t175 + t342) - g(3) * (t433 + t263 + t423) + t14 * t378 + t40 * (t726 * t498 + t723) + t15 * t322 + t41 * (-t816 * t497 + t199) + t7 * t317 + t37 * (-t729 * t497 + t817 * t498 + t727) + (t14 * (-t361 - t729) + t40 * (-t228 - t751) + t15 * t728 + t41 * t752) * t545 + (t15 * t816 + t41 * (-t418 - t731) + t7 * t729 + t37 * t751) * t518 + (t14 * t726 + t40 * t731 + t7 * t817 + t37 * (-t227 - t752)) * t517) * m(6) + ((t136 * t732 + t139 * t421 + t142 * t422 - t170 * t648 + t172 * t382 + t174 * t383) * t266 + t55 * t345 + (-t135 * t732 - t138 * t421 - t141 * t422 - t169 * t648 + t171 * t382 + t173 * t383) * t265 + t54 * t344 + (t208 * t732 + t209 * t421 + t210 * t422 - t260 * t648 + t261 * t382 + t262 * t383) * t365 + t71 * t424) * t793 + ((-t136 * t733 + t139 * t340 + t142 * t341 - t170 * t649 + t172 * t295 + t174 * t296) * t266 + t51 * t345 + (t135 * t733 - t138 * t340 - t141 * t341 - t169 * t649 + t171 * t295 + t173 * t296) * t265 + t50 * t344 + (-t208 * t733 + t209 * t340 + t210 * t341 - t260 * t649 + t261 * t295 + t262 * t296) * t365 + t69 * t424) * t797 + ((-t136 * t734 + t139 * t338 + t142 * t339 - t170 * t827 + t172 * t291 - t174 * t294) * t266 + t49 * t345 + (t135 * t734 - t138 * t338 - t141 * t339 - t169 * t827 + t171 * t291 - t173 * t294) * t265 + t48 * t344 + (-t208 * t734 + t209 * t338 + t210 * t339 - t260 * t827 + t261 * t291 - t262 * t294) * t365 + t68 * t424) * t799 + (qJD(3) * t664 + t730 + t735 + t736 + t821) * t545 / 0.2e1 + (qJD(3) * t666 + t105 * t427 + t106 * t428 + t147 * t527 + t528 * t77 + t823) * t518 / 0.2e1 + t30 * t713 / 0.2e1 - t32 * t711 / 0.2e1 - m(5) * (g(1) * (t282 + t363) + g(2) * (t281 + t360) + g(3) * (t371 + t433)) + (t147 * t545 + t659) * t785 + (t102 * t545 + t517 * t81 + t518 * t82) * t791 - m(4) * (g(1) * t359 + g(2) * t358 + g(3) * t432) - t424 * t18 / 0.2e1; ((t136 * t471 + t183 * t382 + t185 * t383) * t266 + (-t135 * t471 + t182 * t382 + t184 * t383) * t265 + (t208 * t471 + t269 * t382 + t270 * t383) * t365 + (-t402 * t54 + t404 * t55 + t471 * t71) * qJD(5) - t591 * t648) * t793 + ((t136 * t404 + t183 * t295 + t185 * t296) * t266 + (-t135 * t404 + t182 * t295 + t184 * t296) * t265 + (t208 * t404 + t269 * t295 + t270 * t296) * t365 + (-t402 * t50 + t404 * t51 + t471 * t69) * qJD(5) - t591 * t649) * t797 + ((-t136 * t402 + t183 * t291 - t185 * t294) * t266 + (t135 * t402 + t182 * t291 - t184 * t294) * t265 + (-t208 * t402 + t269 * t291 - t270 * t294) * t365 + (-t402 * t48 + t404 * t49 + t471 * t68) * qJD(5) - t591 * t827) * t799 + (t471 * t616 - t595 * t637 - t615 * t648) * t782 + (-t19 * t595 + t334 * t51 + t336 * t50 + t472 * t8 + t476 * t9 + t494 * t69) * t796 + (t10 * t472 + t11 * t476 - t20 * t595 + t334 * t49 + t336 * t48 + t494 * t68) * t798 + (t472 * t74 + t476 * t75 - t595 * t90) * t800 + (t472 * t54 + t476 * t55 - t595 * t71) * t802 + (t472 * t50 + t476 * t51 - t595 * t69) * t803 + (t14 * (t472 * t726 + t595 * t729) + t40 * (t336 * t726 + t472 * t731 - t494 * t729 + t595 * t751) + t15 * (-t476 * t726 - t595 * t728) + t41 * (-t334 * t726 - t476 * t731 + t494 * t728 - t595 * t752) + t7 * (-t472 * t728 + t476 * t729) + t37 * (t334 * t729 - t336 * t728 - t472 * t752 + t476 * t751)) * t683 + (t472 * t48 + t476 * t49 - t595 * t68) * t804 + (t102 * t494 + t28 * t472 + t29 * t476 + t334 * t82 + t336 * t81 - t53 * t595) * t781 + (t21 * t472 + t22 * t476 + t334 * t75 + t336 * t74 - t35 * t595 + t494 * t90) * t787 + (-t102 * t595 + t472 * t81 + t476 * t82) * t791 + (t12 * t472 + t13 * t476 - t27 * t595 + t334 * t55 + t336 * t54 + t494 * t71) * t792 + (t404 * t616 + t476 * t637 - t615 * t649) * t788 + (-t402 * t616 + t472 * t637 - t615 * t827) * t790 + (t40 * (-t186 * t365 - t255 * t478 + t265 * t271 + t350 * t406 + (-t143 * t471 - t211 * t402) * qJD(5)) + t41 * (t187 * t365 + t258 * t478 - t266 * t271 - t350 * t407 + (t145 * t471 - t211 * t404) * qJD(5)) + t37 * (t186 * t266 - t187 * t265 + t255 * t407 - t258 * t406 + (t143 * t404 + t145 * t402) * qJD(5))) * t684 - (-t16 * t402 + t17 * t404 + t18 * t471) * qJD(5) / 0.2e1 + (t85 * (-t253 * t478 + t349 * t406) + t86 * (t254 * t478 - t349 * t407) + t76 * (t253 * t407 - t254 * t406)) * t686 + (t472 * t72 + t476 * t73 + t595 * t861) * t801 + (t23 * t472 + t24 * t476 + t334 * t73 + t336 * t72 - t36 * t595 - t494 * t861) * t789 + (t33 * (-t225 * t595 + t300 * t472) + t85 * (t225 * t494 + t234 * t472 + t300 * t336 + t595 * t99) + t34 * (-t226 * t595 - t300 * t476) + t86 * (t226 * t494 - t234 * t476 - t300 * t334 - t595 * t98) + t26 * (-t225 * t476 - t226 * t472) + t76 * (-t225 * t334 - t226 * t336 - t472 * t98 + t476 * t99)) * t685 + (t32 + t18) * t494 / 0.2e1 - m(5) * (g(1) * t254 + g(2) * t253 + g(3) * t349) + t819 * t334 / 0.2e1 + t820 * t336 / 0.2e1 - t821 * t595 / 0.2e1 + t822 * t472 / 0.2e1 + t823 * t476 / 0.2e1 - m(6) * (g(1) * (t187 + t258) + g(2) * (t186 + t255) + g(3) * (t271 + t350)); (t14 * (t143 * t648 - t211 * t827) + t40 * (-t110 * t827 - t143 * t376 + t206 * t211 + t63 * t648) + t15 * (-t145 * t648 + t211 * t649) + t41 * (t110 * t649 + t145 * t376 - t204 * t211 - t62 * t648) + t7 * (-t143 * t649 + t145 * t827) + t37 * (t143 * t204 - t145 * t206 + t62 * t827 - t63 * t649)) * t683 + t204 * t17 / 0.2e1 - t649 * t1 / 0.2e1 + (-t50 * t827 - t51 * t649 - t648 * t69) * t803 + (-t19 * t648 + t204 * t51 + t206 * t50 + t376 * t69 - t649 * t9 - t8 * t827) * t796 + t206 * t16 / 0.2e1 - t827 * t2 / 0.2e1 + (-t48 * t827 - t49 * t649 - t648 * t68) * t804 + (-t10 * t827 - t11 * t649 - t20 * t648 + t204 * t49 + t206 * t48 + t376 * t68) * t798 + t376 * t18 / 0.2e1 - t648 * t3 / 0.2e1 + (-t54 * t827 - t55 * t649 - t648 * t71) * t802 + (-t12 * t827 - t13 * t649 + t204 * t55 + t206 * t54 - t27 * t648 + t376 * t71) * t792 + (t40 * (-t167 * t365 + t246 * t265) + t41 * (t168 * t365 - t246 * t266) + t37 * (t167 * t266 - t168 * t265)) * t684 + (t295 * t617 + t296 * t618 - t638 * t649) * t797 + (t291 * t617 - t294 * t618 - t638 * t827) * t799 + (t382 * t617 + t383 * t618 - t638 * t648) * t793 - m(6) * (g(1) * t168 + g(2) * t167 + g(3) * t246);];
tau = t4;
