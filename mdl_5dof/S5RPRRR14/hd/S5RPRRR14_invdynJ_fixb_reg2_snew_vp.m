% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S5RPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,alpha3,d1,d3,d4,d5,theta2]';
% 
% Output:
% tauJ_reg [5x(5*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:22
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S5RPRRR14_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR14_invdynJ_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR14_invdynJ_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR14_invdynJ_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR14_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S5RPRRR14_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:19:56
% EndTime: 2019-12-31 19:20:20
% DurationCPUTime: 15.87s
% Computational Cost: add. (84849->655), mult. (265803->1051), div. (0->0), fcn. (224676->14), ass. (0->403)
t255 = sin(pkin(11));
t256 = sin(pkin(6));
t257 = sin(pkin(5));
t258 = cos(pkin(11));
t259 = cos(pkin(6));
t429 = sin(qJ(1));
t430 = cos(qJ(1));
t306 = t429 * g(1) - t430 * g(2);
t288 = qJDD(1) * pkin(1) + t306;
t260 = cos(pkin(5));
t351 = t260 * g(3) - qJDD(2);
t369 = qJDD(1) * t257;
t354 = t258 * t369;
t269 = -pkin(2) * t354 - t257 * t288 - t351;
t280 = t260 * t288;
t368 = qJDD(1) * t260;
t360 = pkin(2) * t368;
t385 = t257 * t258;
t270 = -g(3) * t385 + t258 * t280 + t360;
t307 = t430 * g(1) + t429 * g(2);
t281 = qJ(2) * t369 - t307;
t254 = t260 ^ 2;
t424 = pkin(8) * t256;
t297 = (t255 * pkin(1) + t254 * t424) * qJD(1);
t393 = t255 * t256;
t427 = pkin(2) * t258;
t314 = -pkin(8) * t393 - t427;
t378 = qJD(1) * t260;
t379 = qJD(1) * t257;
t423 = pkin(8) * t259;
t428 = pkin(2) * t255;
t251 = t255 ^ 2;
t253 = t258 ^ 2;
t438 = -t251 - t253;
t452 = -2 * qJD(2);
t450 = t255 * t452;
t155 = (t256 * t297 + t257 * (t378 * ((qJ(2) + 0.2e1 * t423) * t256 * t258 - t259 * t428) - (t314 * t393 + t259 * (t423 * t438 - qJ(2))) * t379 + t256 * t450)) * qJD(1) + t256 * (-t255 * t281 + t270) - t259 * t269;
t261 = sin(qJ(5));
t266 = cos(qJ(3));
t263 = sin(qJ(3));
t382 = t259 * t263;
t388 = t256 * t263;
t277 = t260 * t388 + (t255 * t266 + t258 * t382) * t257;
t225 = t277 * qJD(1);
t363 = t256 * t385;
t232 = -qJD(1) * t363 + t259 * t378 + qJD(3);
t262 = sin(qJ(4));
t265 = cos(qJ(4));
t215 = t225 * t265 + t232 * t262;
t264 = cos(qJ(5));
t391 = t255 * t263;
t384 = t258 * t259;
t361 = t257 * t384;
t387 = t256 * t266;
t445 = -t260 * t387 - t266 * t361;
t223 = qJD(1) * t445 + t379 * t391;
t293 = qJD(4) + t223;
t190 = t215 * t261 - t264 * t293;
t192 = t264 * t215 + t261 * t293;
t158 = t192 * t190;
t275 = t277 * qJDD(1);
t205 = -t223 * qJD(3) + t275;
t231 = -t256 * t354 + t259 * t368 + qJDD(3);
t349 = t262 * t205 - t265 * t231;
t171 = -t215 * qJD(4) - t349;
t170 = qJDD(5) - t171;
t440 = -t158 + t170;
t449 = t261 * t440;
t213 = t225 * t262 - t265 * t232;
t185 = t215 * t213;
t355 = t255 * t369;
t303 = qJDD(1) * t445 + t263 * t355;
t287 = -qJD(3) * t225 - t303;
t203 = qJDD(4) - t287;
t439 = -t185 + t203;
t448 = t262 * t439;
t447 = t264 * t440;
t446 = t265 * t439;
t290 = t293 ^ 2;
t389 = t256 * t260;
t311 = t361 + t389;
t443 = t311 * pkin(8);
t397 = t225 * t223;
t286 = t231 - t397;
t442 = t263 * t286;
t441 = t266 * t286;
t317 = -t265 * t205 - t262 * t231;
t172 = -t213 * qJD(4) - t317;
t195 = t293 * t213;
t151 = t172 - t195;
t218 = t232 * t223;
t182 = -t218 + t205;
t383 = t259 * t260;
t437 = -t363 + t383;
t208 = qJD(5) + t213;
t350 = t172 * t261 - t264 * t203;
t109 = (qJD(5) - t208) * t192 + t350;
t187 = t190 ^ 2;
t188 = t192 ^ 2;
t207 = t208 ^ 2;
t211 = t213 ^ 2;
t212 = t215 ^ 2;
t221 = t223 ^ 2;
t222 = t225 ^ 2;
t434 = t232 ^ 2;
t433 = qJD(1) ^ 2;
t432 = 2 * qJD(2);
t421 = t257 * g(3);
t274 = t280 - t421;
t298 = t314 * t257;
t353 = qJ(2) + t423;
t346 = t260 * t353;
t176 = t258 * t281 + t274 * t255 + qJDD(1) * t443 + ((-pkin(1) * t258 - pkin(2) * t254) * qJD(1) + (t258 * t432 + (t255 * t346 + t258 * t298) * qJD(1)) * t257) * qJD(1);
t386 = t257 * qJ(2);
t120 = t266 * t176 + (t259 * (t433 * pkin(1) + t307) + ((-pkin(8) * t256 ^ 2 - t259 * t353) * qJDD(1) + (pkin(2) * qJD(1) * t311 + t259 * t452) * qJD(1)) * t257) * t391 + (t256 * t269 + t259 * t270 + ((-t256 * t257 + t258 * t383) * t386 + t437 * t443) * t433) * t263;
t204 = pkin(3) * t223 - pkin(9) * t225;
t100 = -t434 * pkin(3) + t231 * pkin(9) - t223 * t204 + t120;
t373 = qJD(3) + t232;
t178 = t373 * t225 + t303;
t267 = t178 * pkin(3) - t182 * pkin(9) - t155;
t68 = t100 * t262 - t265 * t267;
t69 = t265 * t100 + t262 * t267;
t40 = t262 * t68 + t265 * t69;
t310 = -pkin(1) + t314;
t376 = t257 * t433;
t381 = t259 * t266;
t119 = t263 * t176 - (t360 + t274 * t258 + (-t353 * t369 + t307) * t255 + (t297 + (t450 + (-t255 * t298 + t258 * t346) * qJD(1)) * t257) * qJD(1)) * t381 - ((qJDD(1) * t310 - t306) * t257 + (t260 * t428 - t386 + (t257 * t259 * t438 - t258 * t389) * pkin(8)) * t376 - t351) * t387;
t99 = -t231 * pkin(3) - t434 * pkin(9) + t225 * t204 + t119;
t32 = t263 * t99 + t266 * t40;
t431 = pkin(8) * t32;
t426 = pkin(3) * t266;
t425 = pkin(4) * t262;
t177 = pkin(4) * t213 - pkin(10) * t215;
t50 = -pkin(4) * t290 + t203 * pkin(10) - t213 * t177 + t69;
t289 = t293 * t215;
t66 = -t151 * pkin(10) + (-t171 + t289) * pkin(4) + t99;
t36 = t261 * t50 - t264 * t66;
t37 = t261 * t66 + t264 * t50;
t18 = t261 * t36 + t264 * t37;
t49 = -t203 * pkin(4) - pkin(10) * t290 + t177 * t215 + t68;
t13 = t18 * t262 - t265 * t49;
t14 = t18 * t265 + t262 * t49;
t17 = t261 * t37 - t264 * t36;
t343 = t14 * t263 - t17 * t266;
t3 = -t256 * t13 + t343 * t259;
t422 = t255 * t3;
t342 = t263 * t40 - t266 * t99;
t39 = t262 * t69 - t265 * t68;
t20 = -t256 * t39 + t259 * t342;
t420 = t20 * t255;
t136 = t187 + t188;
t324 = -t172 * t264 - t203 * t261;
t129 = -qJD(5) * t190 - t324;
t169 = t208 * t190;
t113 = t129 + t169;
t73 = -t109 * t264 + t113 * t261;
t48 = -t136 * t262 + t265 * t73;
t71 = -t109 * t261 - t113 * t264;
t341 = t263 * t48 - t266 * t71;
t47 = t136 * t265 + t262 * t73;
t22 = -t256 * t47 + t259 * t341;
t419 = t22 * t255;
t371 = qJD(5) + t208;
t110 = -t371 * t192 - t350;
t143 = -t207 - t187;
t89 = t143 * t264 - t449;
t56 = -t110 * t262 + t265 * t89;
t88 = t143 * t261 + t447;
t339 = t263 * t56 - t266 * t88;
t55 = t110 * t265 + t262 * t89;
t28 = -t256 * t55 + t259 * t339;
t418 = t255 * t28;
t114 = t371 * t190 + t324;
t156 = -t188 - t207;
t124 = t158 + t170;
t405 = t124 * t264;
t92 = -t156 * t261 - t405;
t60 = -t114 * t262 + t265 * t92;
t406 = t124 * t261;
t91 = t156 * t264 - t406;
t338 = t263 * t60 - t266 * t91;
t59 = t114 * t265 + t262 * t92;
t30 = -t256 * t59 + t259 * t338;
t417 = t255 * t30;
t148 = -t215 * t223 + t349;
t152 = t172 + t195;
t102 = -t148 * t262 - t152 * t265;
t104 = -t148 * t265 + t152 * t262;
t165 = t211 + t212;
t332 = t104 * t263 + t165 * t266;
t52 = -t256 * t102 + t259 * t332;
t416 = t255 * t52;
t173 = -t290 - t211;
t126 = t173 * t262 + t446;
t127 = t173 * t265 - t448;
t292 = 0.2e1 * qJD(4) + t223;
t149 = -t215 * t292 - t349;
t329 = t127 * t263 + t149 * t266;
t77 = -t256 * t126 + t259 * t329;
t415 = t255 * t77;
t175 = -t212 - t290;
t162 = t185 + t203;
t402 = t162 * t262;
t132 = t175 * t265 - t402;
t401 = t162 * t265;
t133 = -t175 * t262 - t401;
t153 = t213 * t292 + t317;
t328 = t133 * t263 + t153 * t266;
t79 = -t256 * t132 + t259 * t328;
t414 = t255 * t79;
t413 = t261 * t49;
t412 = t262 * t99;
t411 = t263 * t39;
t410 = t264 * t49;
t409 = t265 * t99;
t408 = t266 * t39;
t189 = -t221 - t222;
t183 = t218 + t205;
t278 = (-qJD(3) + t232) * t225 - t303;
t322 = -t183 * t266 + t263 * t278;
t122 = -t256 * t189 + t259 * t322;
t407 = t122 * t255;
t404 = t155 * t263;
t403 = t155 * t266;
t197 = -t231 - t397;
t400 = t197 * t266;
t399 = t208 * t261;
t398 = t208 * t264;
t396 = t225 * t263;
t252 = t257 ^ 2;
t395 = t251 * t252;
t394 = t252 * t253;
t392 = t255 * t257;
t380 = t263 * t197;
t375 = t258 * t433;
t374 = t260 * t433;
t370 = qJDD(1) * t252;
t366 = t262 * t158;
t365 = t265 * t158;
t364 = t266 * t185;
t359 = t263 * t185;
t358 = -pkin(4) * t265 - pkin(3);
t356 = t257 * t374;
t347 = -pkin(4) * t49 + pkin(10) * t18;
t196 = -t434 - t221;
t164 = t196 * t266 - t442;
t345 = pkin(8) * t164 + t403;
t200 = -t222 - t434;
t166 = -t263 * t200 + t400;
t344 = pkin(8) * t166 - t404;
t157 = t188 - t187;
t112 = t129 - t169;
t72 = t110 * t264 - t112 * t261;
t54 = t157 * t262 + t265 * t72;
t70 = t110 * t261 + t112 * t264;
t340 = t263 * t54 - t266 * t70;
t168 = -t188 + t207;
t96 = -t168 * t261 + t447;
t63 = t113 * t262 + t265 * t96;
t94 = t168 * t264 + t449;
t337 = t263 * t63 - t266 * t94;
t167 = t187 - t207;
t97 = t167 * t264 - t406;
t64 = -t109 * t262 + t265 * t97;
t95 = t167 * t261 + t405;
t336 = t263 * t64 - t266 * t95;
t128 = -qJD(5) * t192 - t350;
t105 = -t128 * t264 - t190 * t399;
t106 = -t128 * t261 + t190 * t398;
t85 = t106 * t265 - t366;
t335 = t105 * t266 + t263 * t85;
t107 = t129 * t261 + t192 * t398;
t108 = t129 * t264 - t192 * t399;
t86 = t108 * t265 + t366;
t334 = -t107 * t266 + t263 * t86;
t103 = t149 * t265 - t151 * t262;
t184 = t212 - t211;
t333 = t103 * t263 - t184 * t266;
t131 = (-t190 * t264 + t192 * t261) * t208;
t116 = t131 * t265 + t170 * t262;
t130 = (-t190 * t261 - t192 * t264) * t208;
t331 = t116 * t263 - t130 * t266;
t330 = t119 * t266 - t263 * t120;
t82 = t263 * t119 + t120 * t266;
t194 = -t212 + t290;
t141 = -t194 * t262 + t446;
t327 = t141 * t263 - t152 * t266;
t193 = t211 - t290;
t142 = t193 * t265 - t402;
t326 = t142 * t263 + t148 * t266;
t283 = t265 * t195;
t284 = t262 * t289;
t160 = -t283 + t284;
t325 = t160 * t263 - t203 * t266;
t323 = -t178 * t263 + t182 * t266;
t321 = t196 * t263 + t441;
t320 = t200 * t266 + t380;
t216 = t221 - t434;
t319 = t216 * t263 - t400;
t217 = -t222 + t434;
t318 = t217 * t266 + t442;
t272 = (-pkin(1) * qJD(1) + t257 * t432) * qJD(1) + t281;
t276 = qJ(2) * t376 + t288;
t273 = t260 * t276 - t421;
t209 = t255 * t272 - t258 * t273;
t210 = t255 * t273 + t258 * t272;
t316 = t209 * t255 + t210 * t258;
t315 = -t223 * t263 - t225 * t266;
t145 = -t262 * t171 + t283;
t313 = t145 * t263 + t364;
t147 = t265 * t172 - t284;
t312 = t147 * t263 - t364;
t4 = -pkin(9) * t13 + (-pkin(10) * t265 + t425) * t17;
t5 = -pkin(3) * t13 - t347;
t6 = t14 * t266 + t263 * t17;
t309 = pkin(8) * t6 + t263 * t4 + t266 * t5;
t38 = t263 * t71 + t266 * t48;
t16 = -pkin(10) * t71 - t17;
t8 = -pkin(9) * t47 + t16 * t265 + t71 * t425;
t295 = pkin(4) * t136 + pkin(10) * t73 + t18;
t9 = -pkin(3) * t47 - t295;
t308 = pkin(8) * t38 + t263 * t8 + t266 * t9;
t305 = pkin(4) * t110 + pkin(10) * t89 - t410;
t304 = pkin(4) * t114 + pkin(10) * t92 + t413;
t25 = -pkin(4) * t88 + t36;
t41 = -pkin(10) * t88 + t413;
t12 = -pkin(9) * t55 - t25 * t262 + t265 * t41;
t23 = -pkin(3) * t55 - t305;
t43 = t263 * t88 + t266 * t56;
t302 = pkin(8) * t43 + t12 * t263 + t23 * t266;
t26 = -pkin(4) * t91 + t37;
t42 = -pkin(10) * t91 + t410;
t15 = -pkin(9) * t59 - t26 * t262 + t265 * t42;
t24 = -pkin(3) * t59 - t304;
t44 = t263 * t91 + t266 * t60;
t301 = pkin(8) * t44 + t15 * t263 + t24 * t266;
t45 = -pkin(3) * t126 + t68;
t80 = -pkin(9) * t126 + t412;
t90 = t127 * t266 - t263 * t149;
t300 = pkin(8) * t90 + t263 * t80 + t266 * t45;
t46 = -pkin(3) * t132 + t69;
t81 = -pkin(9) * t132 + t409;
t93 = t133 * t266 - t263 * t153;
t299 = pkin(8) * t93 + t263 * t81 + t266 * t46;
t154 = t263 * t183 + t266 * t278;
t296 = pkin(8) * t154 + t82;
t34 = -pkin(9) * t102 - t39;
t87 = t104 * t266 - t263 * t165;
t294 = pkin(8) * t87 - t102 * t426 + t263 * t34;
t285 = t262 * t195;
t282 = t265 * t289;
t279 = t266 * t287;
t247 = t258 * t356;
t246 = t255 * t356;
t245 = t252 * t255 * t375;
t241 = (-t254 - t394) * t433;
t240 = (-t254 - t395) * t433;
t239 = t438 * t252 * t433;
t238 = -t245 + t368;
t237 = t245 + t368;
t236 = -t246 + t354;
t235 = t246 + t354;
t234 = -t247 + t355;
t233 = t247 + t355;
t226 = t257 * t276 + t351;
t206 = t222 - t221;
t181 = -t373 * t223 + t275;
t159 = -t285 - t282;
t146 = t262 * t172 + t282;
t144 = t265 * t171 + t285;
t140 = t193 * t262 + t401;
t139 = t194 * t265 + t448;
t138 = -t256 * t181 + t259 * t320;
t137 = t259 * t181 + t256 * t320;
t135 = -t256 * t178 + t259 * t321;
t134 = t259 * t178 + t256 * t321;
t121 = t259 * t189 + t256 * t322;
t115 = t131 * t262 - t170 * t265;
t101 = t149 * t262 + t151 * t265;
t84 = t108 * t262 - t365;
t83 = t106 * t262 + t365;
t78 = t259 * t132 + t256 * t328;
t76 = t259 * t126 + t256 * t329;
t75 = t256 * t155 - t259 * t330;
t74 = -t259 * t155 - t256 * t330;
t62 = t109 * t265 + t262 * t97;
t61 = -t113 * t265 + t262 * t96;
t58 = pkin(3) * t153 + pkin(9) * t133 + t412;
t57 = pkin(3) * t149 + pkin(9) * t127 - t409;
t53 = -t157 * t265 + t262 * t72;
t51 = t259 * t102 + t256 * t332;
t33 = -pkin(3) * t99 + pkin(9) * t40;
t31 = pkin(3) * t165 + pkin(9) * t104 + t40;
t29 = t256 * t338 + t259 * t59;
t27 = t256 * t339 + t259 * t55;
t21 = t256 * t341 + t259 * t47;
t19 = t256 * t342 + t259 * t39;
t11 = -pkin(3) * t91 + pkin(9) * t60 + t26 * t265 + t262 * t42;
t10 = -pkin(3) * t88 + pkin(9) * t56 + t25 * t265 + t262 * t41;
t7 = pkin(9) * t48 + t16 * t262 + t358 * t71;
t2 = t259 * t13 + t343 * t256;
t1 = pkin(9) * t14 + (-pkin(10) * t262 + t358) * t17;
t35 = [0, 0, 0, 0, 0, qJDD(1), t306, t307, 0, 0, t251 * t370, (t233 * t258 + t236 * t255) * t257 + (t251 - t253) * t252 * t374, t237 * t392 + t260 * t234 + t257 * (t254 - t395) * t375, t253 * t370, t238 * t385 + t260 * t235 + t255 * (-t254 + t394) * t376, t254 * qJDD(1), (-t209 + pkin(1) * (t237 * t258 + t241 * t255)) * t260 + (t258 * t226 + pkin(1) * t236 + qJ(2) * (-t237 * t255 + t241 * t258)) * t257, (-t210 + pkin(1) * (-t238 * t255 + t240 * t258)) * t260 + (-t255 * t226 - pkin(1) * t233 + qJ(2) * (-t238 * t258 - t240 * t255)) * t257, pkin(1) * (-t234 * t258 + t235 * t255) * t260 + (-pkin(1) * t239 + qJ(2) * (t234 * t255 + t235 * t258) + t316) * t257, pkin(1) * (t226 * t257 + (-t209 * t258 + t210 * t255) * t260) + t316 * t386, t260 * (t205 * t388 + (t223 * t259 + t232 * t387) * t225) + (t255 * (t205 * t266 - t232 * t396) + t258 * (t205 * t382 + (-t223 * t256 + t232 * t381) * t225)) * t257, t260 * (t259 * t206 + t256 * t323) + (t255 * (-t178 * t266 - t263 * t182) + t258 * (-t256 * t206 + t259 * t323)) * t257, t260 * (t259 * t183 + t256 * t318) + (t255 * (-t263 * t217 + t441) + t258 * (-t256 * t183 + t259 * t318)) * t257, (t218 * t266 - t263 * t287) * t392 + (t259 * t279 + (t225 * t256 + t232 * t382) * t223) * t385 + t260 * (t256 * t279 + (-t225 * t259 + t232 * t388) * t223), t260 * (t256 * t319 + t259 * t278) + (t255 * (t216 * t266 + t380) + t258 * (-t256 * t278 + t259 * t319)) * t257, t437 * t231 + ((t255 * (-t223 * t266 + t396) + t315 * t384) * t257 + t315 * t389) * t232, (pkin(2) * t135 - t259 * t119 + pkin(1) * (t135 * t258 + t164 * t255) + t345 * t256) * t260 + (t255 * (-t404 + (-t134 * t256 - t135 * t259) * pkin(8)) + t258 * (-pkin(2) * t134 + t256 * t119 + t259 * t345) - pkin(1) * t134 + qJ(2) * (-t135 * t255 + t164 * t258)) * t257, (pkin(2) * t138 - t120 * t259 + pkin(1) * (t138 * t258 + t166 * t255) + t344 * t256) * t260 + (t255 * (-t403 + (-t137 * t256 - t138 * t259) * pkin(8)) + t258 * (-pkin(2) * t137 + t120 * t256 + t259 * t344) - pkin(1) * t137 + qJ(2) * (-t138 * t255 + t166 * t258)) * t257, (pkin(2) * t122 + pkin(1) * (t122 * t258 + t154 * t255) + t296 * t256) * t260 + (t255 * t330 + qJ(2) * (t154 * t258 - t407) + t310 * t121 + (-pkin(8) * t407 + t258 * t296) * t259) * t257, (t82 * t424 + pkin(2) * t75 + pkin(1) * (t255 * t82 + t258 * t75)) * t260 + (qJ(2) * (-t255 * t75 + t258 * t82) + (-pkin(1) - t427) * t74 + (t255 * (-t256 * t74 - t259 * t75) + t82 * t384) * pkin(8)) * t257, t260 * (t259 * t146 + t256 * t312) + (t255 * (t147 * t266 + t359) + t258 * (-t256 * t146 + t259 * t312)) * t257, t260 * (t259 * t101 + t256 * t333) + (t255 * (t103 * t266 + t263 * t184) + t258 * (-t256 * t101 + t259 * t333)) * t257, t260 * (t259 * t139 + t256 * t327) + (t255 * (t141 * t266 + t263 * t152) + t258 * (-t256 * t139 + t259 * t327)) * t257, t260 * (t259 * t144 + t256 * t313) + (t255 * (t145 * t266 - t359) + t258 * (-t256 * t144 + t259 * t313)) * t257, t260 * (t259 * t140 + t256 * t326) + (t255 * (t142 * t266 - t263 * t148) + t258 * (-t256 * t140 + t259 * t326)) * t257, t260 * (t259 * t159 + t256 * t325) + (t255 * (t160 * t266 + t263 * t203) + t258 * (-t256 * t159 + t259 * t325)) * t257, (pkin(2) * t77 + t259 * t57 + pkin(1) * (t255 * t90 + t258 * t77) + t300 * t256) * t260 + (t255 * (-t263 * t45 + t266 * t80 - t424 * t76) + t258 * (-pkin(2) * t76 - t256 * t57) - pkin(1) * t76 + qJ(2) * (t258 * t90 - t415) + (-pkin(8) * t415 + t258 * t300) * t259) * t257, (pkin(2) * t79 + t259 * t58 + pkin(1) * (t255 * t93 + t258 * t79) + t299 * t256) * t260 + (t255 * (-t263 * t46 + t266 * t81 - t424 * t78) + t258 * (-pkin(2) * t78 - t256 * t58) - pkin(1) * t78 + qJ(2) * (t258 * t93 - t414) + (-pkin(8) * t414 + t258 * t299) * t259) * t257, (pkin(2) * t52 + t259 * t31 + pkin(1) * (t255 * t87 + t258 * t52) + t294 * t256) * t260 + (t255 * (t263 * pkin(3) * t102 + t266 * t34 - t424 * t51) + t258 * (-pkin(2) * t51 - t256 * t31) - pkin(1) * t51 + qJ(2) * (t258 * t87 - t416) + (-pkin(8) * t416 + t258 * t294) * t259) * t257, (pkin(2) * t20 + t259 * t33 + pkin(1) * (t20 * t258 + t255 * t32) + (t431 + (-pkin(9) * t263 - t426) * t39) * t256) * t260 + (t255 * (pkin(3) * t411 - pkin(9) * t408 - t19 * t424) + t258 * (-pkin(2) * t19 - t256 * t33) - pkin(1) * t19 + qJ(2) * (t258 * t32 - t420) + (-pkin(8) * t420 + t258 * (-pkin(3) * t408 - pkin(9) * t411 + t431)) * t259) * t257, t260 * (t256 * t334 + t259 * t84) + (t255 * (t263 * t107 + t266 * t86) + t258 * (-t256 * t84 + t259 * t334)) * t257, t260 * (t256 * t340 + t259 * t53) + (t255 * (t263 * t70 + t266 * t54) + t258 * (-t256 * t53 + t259 * t340)) * t257, t260 * (t256 * t337 + t259 * t61) + (t255 * (t263 * t94 + t266 * t63) + t258 * (-t256 * t61 + t259 * t337)) * t257, t260 * (t256 * t335 + t259 * t83) + (t255 * (-t263 * t105 + t266 * t85) + t258 * (-t256 * t83 + t259 * t335)) * t257, t260 * (t256 * t336 + t259 * t62) + (t255 * (t263 * t95 + t266 * t64) + t258 * (-t256 * t62 + t259 * t336)) * t257, t260 * (t259 * t115 + t256 * t331) + (t255 * (t116 * t266 + t263 * t130) + t258 * (-t256 * t115 + t259 * t331)) * t257, (pkin(2) * t28 + t259 * t10 + pkin(1) * (t255 * t43 + t258 * t28) + t302 * t256) * t260 + (t255 * (t12 * t266 - t263 * t23 - t27 * t424) + t258 * (-pkin(2) * t27 - t256 * t10) - pkin(1) * t27 + qJ(2) * (t258 * t43 - t418) + (-pkin(8) * t418 + t258 * t302) * t259) * t257, (pkin(2) * t30 + t259 * t11 + pkin(1) * (t255 * t44 + t258 * t30) + t301 * t256) * t260 + (t255 * (t15 * t266 - t263 * t24 - t29 * t424) + t258 * (-pkin(2) * t29 - t256 * t11) - pkin(1) * t29 + qJ(2) * (t258 * t44 - t417) + (-pkin(8) * t417 + t258 * t301) * t259) * t257, (pkin(2) * t22 + t259 * t7 + pkin(1) * (t22 * t258 + t255 * t38) + t308 * t256) * t260 + (t255 * (-t21 * t424 - t263 * t9 + t266 * t8) + t258 * (-pkin(2) * t21 - t256 * t7) - pkin(1) * t21 + qJ(2) * (t258 * t38 - t419) + (-pkin(8) * t419 + t258 * t308) * t259) * t257, (pkin(2) * t3 + t259 * t1 + pkin(1) * (t255 * t6 + t258 * t3) + t309 * t256) * t260 + (t255 * (-t2 * t424 - t263 * t5 + t266 * t4) + t258 * (-pkin(2) * t2 - t256 * t1) - pkin(1) * t2 + qJ(2) * (t258 * t6 - t422) + (-pkin(8) * t422 + t258 * t309) * t259) * t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t236, t233, t239, -t226, 0, 0, 0, 0, 0, 0, t134, t137, t121, t74, 0, 0, 0, 0, 0, 0, t76, t78, t51, t19, 0, 0, 0, 0, 0, 0, t27, t29, t21, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t397, t206, t183, -t397, t278, t231, -t119, -t120, 0, 0, t146, t101, t139, t144, t140, t159, t57, t58, t31, t33, t84, t53, t61, t83, t62, t115, t10, t11, t7, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, t184, t152, -t185, -t148, t203, -t68, -t69, 0, 0, t107, t70, t94, -t105, t95, t130, t305, t304, t295, t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, t157, t113, -t158, -t109, t170, -t36, -t37, 0, 0;];
tauJ_reg = t35;
