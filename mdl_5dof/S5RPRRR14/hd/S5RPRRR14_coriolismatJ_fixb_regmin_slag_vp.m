% Calculate minimal parameter regressor of coriolis matrix for
% S5RPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,alpha3,d1,d3,d4,d5,theta2]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:22
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRR14_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR14_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR14_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S5RPRRR14_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:19:46
% EndTime: 2019-12-31 19:20:11
% DurationCPUTime: 11.57s
% Computational Cost: add. (14076->672), mult. (40376->1008), div. (0->0), fcn. (46642->12), ass. (0->510)
t412 = cos(qJ(5));
t411 = sin(qJ(3));
t692 = sin(pkin(6));
t694 = cos(pkin(5));
t500 = t694 * t692;
t693 = cos(pkin(6));
t712 = cos(qJ(3));
t512 = t693 * t712;
t407 = sin(pkin(5));
t408 = cos(pkin(11));
t656 = t407 * t408;
t406 = sin(pkin(11));
t657 = t406 * t407;
t312 = t411 * t657 - t500 * t712 - t512 * t656;
t567 = pkin(1) * t694;
t617 = qJ(2) * t656 + t406 * t567;
t304 = (t656 * t693 + t500) * pkin(8) + t617;
t390 = t408 * t567;
t315 = t694 * pkin(2) + t390 + (-pkin(8) * t693 - qJ(2)) * t657;
t331 = (-pkin(8) * t406 * t692 - pkin(2) * t408 - pkin(1)) * t407;
t149 = t712 * t304 + (t315 * t693 + t331 * t692) * t411;
t530 = t407 * t692;
t459 = t408 * t530 - t693 * t694;
t125 = -pkin(9) * t459 + t149;
t410 = sin(qJ(4));
t413 = cos(qJ(4));
t242 = -t315 * t692 + t331 * t693;
t476 = t411 * t500;
t529 = t411 * t693;
t566 = t712 * t406;
t314 = t476 + (t408 * t529 + t566) * t407;
t504 = pkin(3) * t312 - pkin(9) * t314;
t430 = t242 + t504;
t76 = t125 * t410 - t413 * t430;
t63 = -pkin(4) * t312 + t76;
t570 = t76 / 0.2e1 - t63 / 0.2e1;
t738 = t412 * t570;
t409 = sin(qJ(5));
t737 = t570 * t409;
t259 = t314 * t410 + t413 * t459;
t132 = t412 * t259;
t535 = -t132 / 0.2e1;
t518 = t410 * t535;
t666 = t312 * t409;
t445 = t459 * t410;
t663 = t314 * t413;
t261 = -t445 + t663;
t670 = t261 * t412;
t177 = t666 + t670;
t676 = t177 * t413;
t736 = t676 / 0.2e1 + t518;
t647 = t409 * t410;
t542 = -t647 / 0.2e1;
t665 = t312 * t412;
t672 = t261 * t409;
t175 = -t665 + t672;
t679 = t175 * t413;
t735 = t259 * t542 + t679 / 0.2e1;
t402 = t409 ^ 2;
t404 = t412 ^ 2;
t391 = t404 - t402;
t734 = t391 * qJD(4);
t716 = -t410 / 0.2e1;
t549 = t259 * t716;
t713 = t413 / 0.2e1;
t469 = t261 * t713 + t549;
t733 = t469 * qJD(4);
t580 = t413 * qJD(3);
t395 = t410 * t580;
t526 = qJD(1) * t469 + t395;
t587 = t259 * qJD(1);
t458 = -qJD(3) * t469 + t261 * t587;
t732 = t259 ^ 2;
t731 = t312 ^ 2;
t730 = -t175 / 0.2e1;
t729 = t175 / 0.2e1;
t728 = -t177 / 0.2e1;
t219 = t413 * t312;
t303 = t314 * t412;
t212 = -t219 * t409 - t303;
t727 = -t212 / 0.2e1;
t664 = t314 * t409;
t213 = -t219 * t412 + t664;
t726 = -t213 / 0.2e1;
t725 = -t259 / 0.2e1;
t724 = t259 / 0.2e1;
t723 = -t261 / 0.2e1;
t722 = -t312 / 0.2e1;
t511 = t692 * t712;
t486 = t412 * t511;
t528 = t692 * t411;
t354 = t410 * t693 + t413 * t528;
t649 = t409 * t354;
t319 = t486 + t649;
t721 = t319 / 0.2e1;
t487 = t409 * t511;
t636 = t412 * t354;
t320 = -t487 + t636;
t720 = -t320 / 0.2e1;
t353 = t410 * t528 - t413 * t693;
t719 = -t353 / 0.2e1;
t718 = t353 / 0.2e1;
t717 = t354 / 0.2e1;
t715 = t410 / 0.2e1;
t714 = -t413 / 0.2e1;
t711 = pkin(9) * t312;
t710 = pkin(10) * t259;
t709 = t312 * pkin(10);
t708 = t410 * pkin(4);
t707 = t413 * pkin(10);
t706 = -t63 + t76;
t705 = t409 * t76;
t148 = t304 * t411 - t315 * t512 - t331 * t511;
t147 = t413 * t148;
t223 = pkin(3) * t314 + t711;
t222 = t410 * t223;
t618 = t222 - t147;
t98 = pkin(10) * t314 + t618;
t704 = t409 * t98;
t703 = t412 * t76;
t702 = t412 * t98;
t124 = pkin(3) * t459 + t148;
t503 = pkin(4) * t259 - pkin(10) * t261;
t414 = t124 + t503;
t77 = t413 * t125 + t410 * t430;
t64 = t77 + t709;
t25 = t409 * t64 - t412 * t414;
t136 = pkin(4) * t261 + t710;
t640 = t412 * t136;
t5 = t77 * t175 - t25 * t261 + (t409 * t706 + t640) * t259;
t701 = t5 * qJD(1);
t26 = t409 * t414 + t412 * t64;
t653 = t409 * t136;
t6 = t77 * t177 - t26 * t261 + (t412 * t706 - t653) * t259;
t700 = t6 * qJD(1);
t699 = t63 * t412;
t216 = t410 * t312;
t383 = -t707 + t708;
t108 = -t312 * t383 + t149;
t641 = t412 * t108;
t39 = t641 - t704;
t632 = t413 * t223;
t644 = t410 * t148;
t97 = -pkin(4) * t314 - t632 - t644;
t7 = t175 * t97 + t212 * t63 + t216 * t25 + t259 * t39;
t698 = t7 * qJD(1);
t654 = t409 * t108;
t40 = t654 + t702;
t8 = t177 * t97 + t213 * t63 + t216 * t26 - t259 * t40;
t697 = t8 * qJD(1);
t696 = t97 * t409;
t695 = t97 * t412;
t13 = -t175 * t63 + t25 * t259;
t691 = qJD(1) * t13;
t14 = t177 * t63 - t259 * t26;
t690 = qJD(1) * t14;
t27 = -t124 * t259 + t312 * t76;
t689 = qJD(1) * t27;
t28 = t124 * t261 - t312 * t77;
t688 = qJD(1) * t28;
t484 = t406 * t512;
t655 = t408 * t411;
t340 = (t484 + t655) * t407;
t637 = t412 * t340;
t516 = t406 * t530;
t491 = t410 * t516;
t515 = t406 * t529;
t565 = t712 * t408;
t341 = (-t515 + t565) * t407;
t630 = t413 * t341;
t286 = t491 + t630;
t651 = t409 * t286;
t462 = -t651 / 0.2e1 + t637 / 0.2e1;
t466 = t177 * t718 + t259 * t720;
t66 = t462 - t466;
t687 = qJD(1) * t66;
t638 = t412 * t286;
t650 = t409 * t340;
t461 = -t650 / 0.2e1 - t638 / 0.2e1;
t468 = t175 * t719 + t259 * t721;
t67 = t461 - t468;
t686 = qJD(1) * t67;
t490 = t413 * t516;
t643 = t410 * t341;
t285 = -t490 + t643;
t496 = t637 - t651;
t80 = t175 * t285 + t259 * t496;
t685 = qJD(1) * t80;
t497 = t638 + t650;
t81 = t177 * t285 - t259 * t497;
t684 = qJD(1) * t81;
t91 = -t148 * t459 - t242 * t312;
t683 = qJD(1) * t91;
t92 = t149 * t459 + t242 * t314;
t682 = qJD(1) * t92;
t681 = t124 * t413;
t680 = t175 * t410;
t678 = t177 * t409;
t677 = t177 * t412;
t19 = t149 * t259 - t76 * t314 + (t632 + (-t124 + t148) * t410) * t312;
t675 = t19 * qJD(1);
t20 = t149 * t261 - t77 * t314 + (-t618 - t681) * t312;
t674 = t20 * qJD(1);
t673 = t213 * t409;
t671 = t261 * t410;
t669 = t285 * t409;
t668 = t285 * t412;
t478 = t511 / 0.2e1;
t427 = t175 * t478 + t312 * t721;
t455 = t496 * t413;
t485 = t413 * t511;
t343 = -t409 * t485 + t412 * t528;
t464 = t212 * t718 + t343 * t724;
t548 = -t669 / 0.2e1;
t29 = t455 / 0.2e1 + (t548 + t427) * t410 + t464;
t667 = t29 * qJD(1);
t426 = t320 * t312 / 0.2e1 + t177 * t478;
t456 = t497 * t413;
t344 = t409 * t528 + t412 * t485;
t463 = t213 * t718 + t344 * t725;
t547 = -t668 / 0.2e1;
t32 = -t456 / 0.2e1 + (t547 + t426) * t410 + t463;
t662 = t32 * qJD(1);
t226 = t132 * t647;
t34 = t226 + (-t679 / 0.2e1 + t726) * t412 + (-t676 / 0.2e1 + t212 / 0.2e1) * t409;
t661 = t34 * qJD(1);
t660 = t340 * t413;
t502 = -pkin(4) * t413 - pkin(10) * t410;
t493 = -pkin(3) + t502;
t633 = t412 * t413;
t577 = pkin(9) * t633;
t346 = t409 * t493 + t577;
t659 = t346 * t261;
t403 = t410 ^ 2;
t658 = t403 * t409;
t652 = t409 * t175;
t648 = t409 * t383;
t646 = t409 * t413;
t467 = t175 * t717 + t319 * t723;
t41 = t668 / 0.2e1 + t467;
t645 = t41 * qJD(1);
t642 = t410 * t412;
t639 = t412 * t175;
t635 = t412 * t383;
t634 = t412 * t403;
t631 = t413 * t259;
t465 = t177 * t717 + t261 * t720;
t44 = t548 + t465;
t629 = t44 * qJD(1);
t47 = -t175 * t213 - t177 * t212;
t628 = t47 * qJD(1);
t499 = t639 + t678;
t52 = t499 * t259;
t627 = t52 * qJD(1);
t72 = t175 * t261 - t409 * t732;
t626 = t72 * qJD(1);
t73 = t177 * t261 - t412 * t732;
t625 = t73 * qJD(1);
t78 = t175 * t216 - t212 * t259;
t624 = t78 * qJD(1);
t79 = -t177 * t216 + t213 * t259;
t623 = t79 * qJD(1);
t534 = t633 / 0.2e1;
t441 = t177 * t534 + t404 * t549;
t84 = -t673 / 0.2e1 + t441;
t622 = t84 * qJD(1);
t545 = t665 / 0.2e1;
t86 = (t729 + t545) * t413 + (t549 - t314 / 0.2e1) * t409;
t621 = t86 * qJD(1);
t546 = -t666 / 0.2e1;
t87 = t518 - t303 / 0.2e1 + (t177 / 0.2e1 + t546) * t413;
t620 = t87 * qJD(1);
t505 = t528 / 0.2e1;
t438 = t259 * t505 + t314 * t719;
t89 = t660 / 0.2e1 + t438;
t619 = t89 * qJD(1);
t405 = t413 ^ 2;
t392 = t405 - t403;
t117 = t259 * t340 - t285 * t312;
t616 = qJD(1) * t117;
t118 = t261 * t340 - t286 * t312;
t615 = qJD(1) * t118;
t614 = qJD(1) * t177;
t189 = t312 * t516 + t340 * t459;
t613 = qJD(1) * t189;
t190 = t314 * t516 + t341 * t459;
t612 = qJD(1) * t190;
t611 = qJD(1) * t312;
t610 = qJD(4) * t259;
t609 = qJD(4) * t312;
t608 = qJD(4) * t409;
t607 = qJD(4) * t410;
t606 = qJD(4) * t412;
t605 = qJD(4) * t413;
t604 = qJD(5) * t259;
t603 = qJD(5) * t409;
t602 = qJD(5) * t412;
t601 = qJD(5) * t413;
t498 = t631 + t671;
t103 = t498 * t312;
t600 = t103 * qJD(1);
t110 = t259 * t314 - t410 * t731;
t599 = t110 * qJD(1);
t111 = t261 * t314 - t413 * t731;
t598 = t111 * qJD(1);
t479 = -t511 / 0.2e1;
t424 = t261 * t479 + t354 * t722;
t429 = -t643 / 0.2e1 + t490 / 0.2e1;
t112 = -t424 + t429;
t597 = t112 * qJD(1);
t425 = t259 * t478 + t312 * t718;
t428 = -t630 / 0.2e1 - t491 / 0.2e1;
t113 = -t425 + t428;
t596 = t113 * qJD(1);
t506 = -t528 / 0.2e1;
t437 = t261 * t506 + t314 * t717;
t544 = t340 * t715;
t119 = t544 + t437;
t595 = t119 * qJD(1);
t128 = t409 * t259;
t594 = t128 * qJD(1);
t593 = t132 * qJD(1);
t174 = -t314 ^ 2 + t731;
t592 = t174 * qJD(1);
t416 = t693 * t314 / 0.2e1 + t459 * t505;
t417 = (-t655 / 0.2e1 - t484 / 0.2e1) * t407;
t185 = t417 - t416;
t591 = t185 * qJD(1);
t415 = t459 * t478 + t693 * t722;
t187 = (t565 / 0.2e1 - t515 / 0.2e1) * t407 + t415;
t590 = t187 * qJD(1);
t589 = t216 * qJD(1);
t588 = t219 * qJD(1);
t266 = (t617 * t408 + (qJ(2) * t657 - t390) * t406) * t407;
t586 = t266 * qJD(1);
t507 = t529 / 0.2e1;
t305 = t476 / 0.2e1 + (t566 / 0.2e1 + t408 * t507) * t407;
t585 = t305 * qJD(1);
t584 = t312 * qJD(3);
t583 = t354 * qJD(4);
t356 = (t406 ^ 2 + t408 ^ 2) * t407 ^ 2;
t582 = t356 * qJD(1);
t581 = t410 * qJD(3);
t579 = pkin(9) * t646;
t397 = pkin(9) * t647;
t578 = pkin(9) * t642;
t576 = pkin(3) * t723;
t575 = pkin(4) * t729;
t574 = pkin(4) * t728;
t573 = pkin(4) * t726;
t572 = pkin(9) * t728;
t571 = t710 / 0.2e1;
t569 = t412 * t631;
t568 = -t702 / 0.2e1;
t564 = t177 * t587;
t562 = t261 * t611;
t561 = t412 * t581;
t560 = t409 * t601;
t559 = t412 * t601;
t558 = t314 * t611;
t557 = t314 * t584;
t556 = t409 * t602;
t555 = t409 * t606;
t554 = t410 * t605;
t553 = t410 * t606;
t551 = t177 * t715;
t543 = -t653 / 0.2e1;
t541 = t647 / 0.2e1;
t540 = t646 / 0.2e1;
t539 = -t216 / 0.2e1;
t538 = t216 / 0.2e1;
t537 = t642 / 0.2e1;
t536 = t640 / 0.2e1;
t533 = -t219 / 0.2e1;
t532 = -t147 / 0.2e1 + t222 / 0.2e1;
t531 = t407 * t694;
t527 = t397 + t635;
t525 = pkin(10) * t538;
t524 = -qJD(4) - t611;
t523 = -qJD(5) - t587;
t522 = -qJD(5) + t580;
t521 = t409 * t561;
t520 = t409 * t553;
t517 = t709 / 0.2e1 - t77 / 0.2e1;
t514 = t571 + t136 / 0.2e1;
t513 = t587 + qJD(5) / 0.2e1;
t510 = qJD(1) * t531;
t509 = qJD(2) * t531;
t508 = qJD(3) * t528;
t501 = 0.2e1 * t521;
t370 = t392 * t409;
t49 = -t409 * t631 + (-t672 / 0.2e1 + t730 + t545) * t410;
t495 = qJD(1) * t49 + qJD(3) * t370;
t371 = t405 * t412 - t634;
t50 = -t569 + (t546 - t670 / 0.2e1 + t728) * t410;
t494 = -qJD(1) * t50 - qJD(3) * t371;
t492 = t522 * t410;
t109 = -t261 ^ 2 + t732;
t489 = qJD(1) * t109 - qJD(3) * t498;
t488 = -qJD(1) * t498 + qJD(3) * t392;
t483 = t406 * t510;
t482 = t408 * t510;
t481 = qJD(4) * t511;
t480 = qJD(3) * t511;
t477 = t707 / 0.2e1 - t708 / 0.2e1;
t475 = pkin(4) * t727 - t695 / 0.2e1;
t258 = t663 / 0.2e1 - t445 / 0.2e1;
t474 = t258 * qJD(1) + t581 / 0.2e1;
t422 = pkin(3) * t724 + t681 / 0.2e1 + pkin(9) * t538;
t35 = t422 + t532;
t473 = pkin(3) * t580 - qJD(1) * t35;
t37 = t576 + (-t711 / 0.2e1 - t223 / 0.2e1) * t413 + (t124 / 0.2e1 - t148 / 0.2e1) * t410;
t472 = pkin(3) * t581 - qJD(1) * t37;
t471 = t26 * t714 + t346 * t724;
t470 = -t704 / 0.2e1 + t641 / 0.2e1;
t460 = -t639 / 0.2e1 - t678 / 0.2e1;
t457 = qJD(4) * t305 + t558;
t454 = t412 * t479;
t453 = t413 * t479;
t452 = qJD(5) * t716 + t526;
t451 = -t383 / 0.2e1 + t477;
t450 = t353 * t716 + t505;
t54 = (-t652 + t677) * t410;
t65 = t175 ^ 2 - t177 ^ 2;
t449 = qJD(1) * t65 - qJD(3) * t54 - qJD(4) * t499;
t345 = -t412 * t493 + t579;
t431 = t345 * t261 / 0.2e1 + t527 * t725;
t1 = (pkin(9) * t730 + t536 + t737) * t413 + (t25 / 0.2e1 + (pkin(9) * t724 + t517) * t409) * t410 + t431 + t475;
t439 = t454 + t721;
t138 = (-t649 / 0.2e1 + t439) * t410;
t256 = t345 * t410 + (t527 - 0.2e1 * t397) * t413;
t448 = -t1 * qJD(1) - t138 * qJD(2) - t256 * qJD(3);
t440 = t409 * t479 + t720;
t137 = (-t636 / 0.2e1 - t440) * t410;
t2 = t573 + t659 / 0.2e1 + (t97 / 0.2e1 + t383 * t724) * t409 + (t543 + t572 + t738) * t413 + (t26 / 0.2e1 + t517 * t412) * t410;
t257 = t383 * t646 + (-t346 + t577) * t410;
t447 = -t2 * qJD(1) - t137 * qJD(2) + t257 * qJD(3);
t197 = t412 * t450 + t413 * t440;
t311 = -pkin(9) * t634 - t346 * t413;
t9 = (t572 - t699 / 0.2e1) * t410 + t470 + t471;
t446 = qJD(1) * t9 + qJD(2) * t197 + qJD(3) * t311;
t421 = t25 * t713 + t345 * t725 + pkin(9) * t680 / 0.2e1;
t10 = t568 + (-t108 / 0.2e1 + t63 * t715) * t409 + t421;
t198 = -t409 * t450 + t413 * t439;
t310 = -pkin(9) * t658 - t345 * t413;
t444 = qJD(1) * t10 + qJD(2) * t198 - qJD(3) * t310;
t443 = qJD(3) * t459;
t442 = t459 * qJD(1);
t15 = t409 * t514 + t575 - t738;
t317 = t451 * t409;
t436 = pkin(4) * t606 - qJD(1) * t15 + qJD(3) * t317;
t17 = -t412 * t514 + t574 - t737;
t318 = t451 * t412;
t435 = pkin(4) * t608 - qJD(1) * t17 - qJD(3) * t318;
t100 = t460 * t410;
t102 = -t652 / 0.2e1 + t677 / 0.2e1;
t434 = -qJD(3) * t100 - qJD(4) * t102 + t175 * t614;
t355 = (t402 / 0.2e1 - t404 / 0.2e1) * t410;
t433 = qJD(1) * t102 - qJD(3) * t355 + t555;
t432 = qJD(5) * t258 + t458;
t423 = t442 - qJD(3);
t369 = t391 * t403;
t420 = qJD(1) * t54 + qJD(3) * t369 + 0.2e1 * t520;
t419 = qJD(1) * t499 + t501 - t734;
t418 = qJD(3) * t409 * t634 - qJD(1) * t100 + qJD(4) * t355;
t399 = t607 / 0.2e1;
t373 = -0.2e1 * t410 * t556;
t352 = t355 * qJD(5);
t301 = t305 * qJD(3);
t300 = t397 + t635 / 0.2e1 + t477 * t412;
t299 = t578 - t648 / 0.2e1 - t477 * t409;
t278 = t353 * t412;
t277 = t353 * t409;
t200 = t320 * t713 + t353 * t537 + t409 * t453 + t412 * t505;
t199 = t319 * t714 + t353 * t542 + t409 * t506 + t412 * t453;
t188 = -t407 * t565 / 0.2e1 + t507 * t657 + t415;
t186 = t417 + t416;
t173 = qJD(3) * t539 + qJD(4) * t258;
t140 = t320 * t716 + t354 * t537 + t478 * t647;
t139 = t319 * t716 + t354 * t541 + t410 * t454;
t120 = t544 - t437;
t115 = t424 + t429;
t114 = t425 + t428;
t104 = t498 * qJD(4);
t101 = t102 * qJD(5);
t99 = t100 * qJD(5);
t90 = -t660 / 0.2e1 + t438;
t88 = t312 * t540 + t303 / 0.2e1 + t736;
t85 = t412 * t533 + t664 / 0.2e1 + t735;
t83 = t673 / 0.2e1 + t441;
t69 = t462 + t466;
t68 = t461 + t468;
t59 = t499 * qJD(5);
t53 = t54 * qJD(5);
t51 = t261 * t537 + t409 * t539 + t551 + t569;
t48 = -t680 / 0.2e1 + t412 * t539 + (-t631 - t671 / 0.2e1) * t409;
t43 = t669 / 0.2e1 + t465;
t42 = t547 + t467;
t38 = pkin(9) * t533 + t576 + t124 * t715 + t644 / 0.2e1 + t632 / 0.2e1;
t36 = t422 - t532;
t33 = t226 + t409 * t727 + t213 * t412 / 0.2e1 + t460 * t413;
t31 = t456 / 0.2e1 + t285 * t537 + t426 * t410 + t463;
t30 = -t455 / 0.2e1 + t285 * t541 + t427 * t410 + t464;
t18 = pkin(10) * t535 + t574 + t63 * t409 / 0.2e1 + t705 / 0.2e1 + t536;
t16 = t409 * t571 + t575 + t699 / 0.2e1 + t703 / 0.2e1 + t543;
t12 = pkin(9) * t551 + t537 * t63 + t470 - t471;
t11 = t63 * t542 + t568 - t654 / 0.2e1 - t421;
t4 = (-t578 + t648) * t725 - t659 / 0.2e1 + (t653 - t703) * t713 + t26 * t716 + t77 * t537 + t63 * t534 + t412 * t525 + t573 + t696 / 0.2e1 + t736 * pkin(9);
t3 = (t640 + t705) * t714 + t25 * t716 + t77 * t541 + t63 * t540 + t409 * t525 - t431 + t475 + t735 * pkin(9);
t21 = [0, 0, 0, -t406 * t509, -t408 * t509, t356 * qJD(2), t266 * qJD(2), -t557, t174 * qJD(3), t312 * t443, t314 * t443, 0, qJD(2) * t189 + qJD(3) * t92, qJD(2) * t190 + qJD(3) * t91, (-t312 * t580 - t610) * t261, qJD(3) * t103 + qJD(4) * t109, qJD(3) * t111 - t259 * t609, -qJD(3) * t110 - t261 * t609, t557, qJD(2) * t117 + qJD(3) * t19 + qJD(4) * t28, qJD(2) * t118 + qJD(3) * t20 + qJD(4) * t27, (qJD(3) * t213 - qJD(5) * t175 - t259 * t606) * t177, qJD(3) * t47 + qJD(4) * t52 + qJD(5) * t65, qJD(3) * t79 + qJD(4) * t73 - t175 * t604, qJD(3) * t78 - qJD(4) * t72 - t177 * t604, (qJD(4) * t261 - t312 * t581) * t259, qJD(2) * t80 + qJD(3) * t7 + qJD(4) * t5 + qJD(5) * t14, qJD(2) * t81 + qJD(3) * t8 + qJD(4) * t6 + qJD(5) * t13; 0, 0, 0, -t483, -t482, t582, t586, 0, 0, 0, 0, 0, qJD(3) * t186 + t613, qJD(3) * t188 + t612, 0, 0, 0, 0, 0, qJD(3) * t90 + qJD(4) * t115 + t616, qJD(3) * t120 + qJD(4) * t114 + t615, 0, 0, 0, 0, 0, qJD(3) * t30 + qJD(4) * t42 + qJD(5) * t69 + t685, qJD(3) * t31 + qJD(4) * t43 + qJD(5) * t68 + t684; 0, 0, 0, 0, 0, 0, 0, -t558, t592, t423 * t312, t423 * t314, 0, qJD(2) * t186 - qJD(3) * t149 + t682, qJD(2) * t188 + qJD(3) * t148 + t683, t733 + (-qJD(1) * t261 - t581) * t219, -t392 * t584 - t104 + t600, t314 * t581 + t598, t314 * t580 - t599, t457, t675 + t90 * qJD(2) + (-t149 * t413 + t410 * t504) * qJD(3) + t38 * qJD(4), t674 + t120 * qJD(2) + (t149 * t410 + t413 * t504) * qJD(3) + t36 * qJD(4), t83 * qJD(4) + t99 + (t561 + t614) * t213, t628 + t33 * qJD(4) - t53 + (-t212 * t412 - t673) * t581, t623 + (-t213 * t413 - t312 * t634) * qJD(3) + t51 * qJD(4) + t85 * qJD(5), t624 + (t212 * t413 + t312 * t658) * qJD(3) + t48 * qJD(4) + t88 * qJD(5), -t733 + (-t513 + t580) * t216, -t39 * t580 + t698 + t30 * qJD(2) + t3 * qJD(4) + t12 * qJD(5) + (pkin(9) * t212 + t312 * t345 + t696) * t581, t40 * t580 + t697 + t31 * qJD(2) + t4 * qJD(4) + t11 * qJD(5) + (pkin(9) * t213 + t312 * t346 + t695) * t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t458, t489, t524 * t259, t524 * t261, t301, qJD(2) * t115 + qJD(3) * t38 - qJD(4) * t77 + t688, qJD(2) * t114 + qJD(3) * t36 + qJD(4) * t76 + t689, t83 * qJD(3) + t101 + (-t608 - t614) * t132, t33 * qJD(3) - t391 * t610 - t59 + t627, qJD(3) * t51 + t261 * t608 + t625, qJD(3) * t48 + t261 * t606 - t626, t432, t701 + t42 * qJD(2) + t3 * qJD(3) + (t409 * t503 - t77 * t412) * qJD(4) + t18 * qJD(5), t700 + t43 * qJD(2) + t4 * qJD(3) + (t77 * t409 + t412 * t503) * qJD(4) + t16 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t434, t449, qJD(3) * t85 + t175 * t523, qJD(3) * t88 + t177 * t523, t173, qJD(2) * t69 + qJD(3) * t12 + qJD(4) * t18 - qJD(5) * t26 + t690, qJD(2) * t68 + qJD(3) * t11 + qJD(4) * t16 + qJD(5) * t25 + t691; 0, 0, 0, t483, t482, -t582, -t586, 0, 0, 0, 0, 0, -qJD(3) * t185 - t613, qJD(3) * t187 - t612, 0, 0, 0, 0, 0, qJD(3) * t89 - qJD(4) * t112 - t616, -qJD(3) * t119 - qJD(4) * t113 - t615, 0, 0, 0, 0, 0, qJD(3) * t29 + qJD(4) * t41 - qJD(5) * t66 - t685, qJD(3) * t32 + qJD(4) * t44 - qJD(5) * t67 - t684; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t508 - t591, -t480 + t590, 0, 0, 0, 0, 0, -t410 * t481 - t413 * t508 + t619, t410 * t508 - t413 * t481 - t595, 0, 0, 0, 0, 0, t667 + (-t343 * t413 + t403 * t487) * qJD(3) + t139 * qJD(4) + t200 * qJD(5), t662 + (t344 * t413 + t403 * t486) * qJD(3) + t140 * qJD(4) + t199 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t410 * t480 - t583 - t597, qJD(4) * t353 - t413 * t480 - t596, 0, 0, 0, 0, 0, qJD(3) * t139 + qJD(5) * t277 - t412 * t583 + t645, qJD(3) * t140 + qJD(5) * t278 + t409 * t583 + t629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t200 + qJD(4) * t277 - qJD(5) * t320 - t687, qJD(3) * t199 + qJD(4) * t278 + qJD(5) * t319 - t686; 0, 0, 0, 0, 0, 0, 0, t558, -t592, -t312 * t442, -t314 * t442, 0, qJD(2) * t185 - t682, -qJD(2) * t187 - t683, t413 * t562 + t733, -t104 - t600, qJD(4) * t219 - t598, -qJD(4) * t216 + t599, -t457, -qJD(2) * t89 + qJD(4) * t37 - t675, qJD(2) * t119 + qJD(4) * t35 - t674, qJD(4) * t84 - t213 * t614 + t99, qJD(4) * t34 - t53 - t628, -qJD(4) * t50 + qJD(5) * t86 - t623, qJD(4) * t49 + qJD(5) * t87 - t624, t216 * t513 - t733, -qJD(2) * t29 - qJD(4) * t1 - qJD(5) * t9 - t698, -qJD(2) * t32 - qJD(4) * t2 - qJD(5) * t10 - t697; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t591, -t590, 0, 0, 0, 0, 0, -t619, t595, 0, 0, 0, 0, 0, -qJD(4) * t138 - qJD(5) * t197 - t667, -qJD(4) * t137 - qJD(5) * t198 - t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t554, t392 * qJD(4), 0, 0, 0, -pkin(3) * t607, -pkin(3) * t605, -t403 * t556 + t404 * t554, -qJD(5) * t369 - 0.2e1 * t413 * t520, -qJD(4) * t371 + t410 * t560, qJD(4) * t370 + t410 * t559, -t554, -qJD(4) * t256 - qJD(5) * t311, qJD(4) * t257 + qJD(5) * t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t526, t488, t588 + t605, -t589 - t607, -t585, -pkin(9) * t605 - t472, pkin(9) * t607 - t473, t622 - t352 + (t404 * t581 + t555) * t413, t661 + t373 + (-0.2e1 * t521 + t734) * t413, t409 * t607 + t494, t495 + t553, -t452, (t409 * t502 - t577) * qJD(4) + t300 * qJD(5) + t448, (t412 * t502 + t579) * qJD(4) + t299 * qJD(5) + t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t418, -t420, t409 * t492 + t621, t412 * t492 + t620, qJD(1) * t538 + t399, qJD(4) * t300 - qJD(5) * t346 - t446, qJD(4) * t299 + qJD(5) * t345 - t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t458, -t489, -qJD(3) * t219 + t312 * t587, qJD(3) * t216 + t562, t301, qJD(2) * t112 - qJD(3) * t37 - t688, qJD(2) * t113 - qJD(3) * t35 - t689, -qJD(3) * t84 + t412 * t564 + t101, -qJD(3) * t34 - t59 - t627, qJD(3) * t50 + qJD(5) * t132 - t625, -qJD(3) * t49 - qJD(5) * t128 + t626, -t432, -qJD(2) * t41 + qJD(3) * t1 + qJD(5) * t17 - t701, -qJD(2) * t44 + qJD(3) * t2 + qJD(5) * t15 - t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t597, t596, 0, 0, 0, 0, 0, qJD(3) * t138 - t645, qJD(3) * t137 - t629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t526, -t488, -t588, t589, t585, t472, t473, -t395 * t404 - t352 - t622, t413 * t501 + t373 - t661, -t494 - t559, -t495 + t560, t452, qJD(5) * t318 - t448, -qJD(5) * t317 - t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t556, t391 * qJD(5), 0, 0, 0, -pkin(4) * t603, -pkin(4) * t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t433, -t419, -t412 * t522 + t593, t409 * t522 - t594, -t474, -pkin(10) * t602 - t435, pkin(10) * t603 - t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t434, -t449, -qJD(3) * t86 - qJD(4) * t132 + t175 * t587, -qJD(3) * t87 + qJD(4) * t128 + t564, t173, qJD(2) * t66 + qJD(3) * t9 - qJD(4) * t17 - t690, qJD(2) * t67 + qJD(3) * t10 - qJD(4) * t15 - t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t197 + t687, qJD(3) * t198 + t686; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, t420, -t621 + (-t409 * t581 + t606) * t413, -t620 + (-t561 - t608) * t413, qJD(1) * t539 + t399, -qJD(4) * t318 + t446, qJD(4) * t317 + t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t433, t419, t412 * t580 - t593, -t409 * t580 + t594, t474, t435, t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t21;
