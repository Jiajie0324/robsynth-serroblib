% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S5RPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,alpha3,d1,d3,d4,d5,theta2]';
% 
% Output:
% MMD_reg [((5+1)*5/2)x(5*10)]
%   inertial parameter regressor of inertia matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:22
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S5RPRRR14_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR14_inertiaDJ_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR14_inertiaDJ_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S5RPRRR14_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:19:43
% EndTime: 2019-12-31 19:19:58
% DurationCPUTime: 4.94s
% Computational Cost: add. (7751->334), mult. (22836->643), div. (0->0), fcn. (23968->12), ass. (0->173)
t185 = cos(pkin(5));
t152 = pkin(1) * t185;
t71 = cos(pkin(11));
t100 = t185 * pkin(2) + t71 * t152;
t155 = -pkin(2) * t71 - pkin(1);
t184 = cos(pkin(6));
t68 = sin(pkin(11));
t70 = sin(pkin(5));
t194 = t68 * t70;
t69 = sin(pkin(6));
t195 = t68 * t69;
t208 = t184 * ((-t184 * pkin(8) - qJ(2)) * t194 + t100) + t69 * (-pkin(8) * t195 + t155) * t70;
t76 = cos(qJ(4));
t146 = t76 * t184;
t74 = sin(qJ(3));
t193 = t69 * t74;
t73 = sin(qJ(4));
t51 = t73 * t193 - t146;
t174 = t51 * qJD(4);
t204 = cos(qJ(3));
t151 = qJD(3) * t204;
t138 = t69 * t151;
t52 = t73 * t184 + t76 * t193;
t181 = qJD(4) * t52;
t44 = t73 * t138 + t181;
t116 = t76 * t174 + t44 * t73;
t180 = qJD(4) * t73;
t137 = t76 * t151;
t91 = t69 * t137 - t174;
t213 = -t52 * t180 + t91 * t76 + t116;
t192 = t70 * t71;
t109 = -t185 * t184 + t69 * t192;
t212 = 0.2e1 * t109;
t148 = t70 * t184;
t206 = qJD(2) * t68;
t125 = t148 * t206;
t183 = qJD(2) * t70;
t159 = t71 * t183;
t186 = qJ(2) * t70;
t102 = t68 * t152 + t71 * t186;
t149 = t69 * t185;
t99 = t71 * t148 + t149;
t89 = t99 * pkin(8) + t102;
t22 = t208 * t204 - t74 * t89;
t17 = -qJD(3) * t22 + t74 * t125 - t204 * t159;
t124 = t204 * t148;
t167 = t74 * t194;
t42 = -t71 * t124 - t204 * t149 + t167;
t147 = t74 * t184;
t43 = t74 * t149 + (t71 * t147 + t204 * t68) * t70;
t136 = t42 * pkin(3) - t43 * pkin(9);
t30 = -t69 * t100 + (qJ(2) * t195 + t184 * t155) * t70;
t84 = t136 + t30;
t211 = -qJD(4) * t84 + t17;
t39 = t43 * qJD(3);
t141 = t183 * t195;
t38 = t42 * qJD(3);
t103 = t109 * pkin(9);
t86 = t204 * t89;
t23 = t208 * t74 + t86;
t82 = -t103 + t23;
t209 = -t39 * pkin(3) - t38 * pkin(9) + qJD(4) * t82 - t141;
t7 = t209 * t73 + t211 * t76;
t21 = t109 * pkin(3) - t22;
t32 = t109 * t76 + t73 * t43;
t33 = -t109 * t73 + t43 * t76;
t80 = t32 * pkin(4) - t33 * pkin(10) + t21;
t210 = -t39 * pkin(10) - qJD(5) * t80 + t7;
t72 = sin(qJ(5));
t64 = t72 ^ 2;
t75 = cos(qJ(5));
t66 = t75 ^ 2;
t188 = t64 - t66;
t145 = qJD(5) * t188;
t205 = pkin(9) * t72;
t25 = -t43 * t180 + (-t109 * qJD(4) - t38) * t76;
t27 = t33 * t75 + t42 * t72;
t15 = t27 * qJD(5) + t25 * t72 - t39 * t75;
t203 = t15 * t75;
t177 = qJD(5) * t72;
t16 = t39 * t72 - t33 * t177 + (qJD(5) * t42 + t25) * t75;
t202 = t16 * t72;
t24 = t33 * qJD(4) - t38 * t73;
t201 = t24 * t76;
t200 = t25 * t73;
t26 = t33 * t72 - t42 * t75;
t199 = t26 * t72;
t198 = t27 * t75;
t196 = t51 * t44;
t191 = t72 * t73;
t190 = t73 * t75;
t189 = t75 * t76;
t13 = t73 * t84 + t76 * t82;
t65 = t73 ^ 2;
t187 = -t76 ^ 2 + t65;
t182 = qJD(3) * t74;
t179 = qJD(4) * t75;
t178 = qJD(4) * t76;
t176 = qJD(5) * t75;
t175 = qJD(5) * t76;
t173 = 0.2e1 * t32 * t24;
t172 = 0.2e1 * t42 * t39;
t171 = t76 * t205;
t170 = pkin(9) * t189;
t169 = -0.2e1 * pkin(3) * qJD(4);
t168 = -0.2e1 * pkin(4) * qJD(5);
t166 = pkin(9) * t178;
t165 = t75 * t178;
t164 = t72 * t175;
t163 = t75 * t175;
t160 = t69 * t182;
t158 = t72 * t176;
t157 = t73 * t178;
t156 = t73 * t179;
t154 = t69 * t204;
t18 = qJD(3) * t86 + t124 * t206 + t74 * t159 + t208 * t182;
t153 = t204 * t18;
t150 = qJD(4) * t204;
t144 = t187 * qJD(4);
t143 = 0.2e1 * t157;
t142 = t76 * t156;
t140 = t65 * t158;
t139 = t72 * t154;
t135 = -pkin(4) * t76 - t73 * pkin(10);
t134 = pkin(4) * t73 - pkin(10) * t76;
t11 = pkin(10) * t42 + t13;
t3 = -t72 * t11 + t75 * t80;
t4 = t75 * t11 + t72 * t80;
t133 = -t3 * t75 - t4 * t72;
t132 = -t26 * t75 - t27 * t72;
t107 = t75 * t154 + t72 * t52;
t46 = t75 * t52 - t139;
t131 = t107 * t75 - t46 * t72;
t127 = pkin(3) - t135;
t108 = t75 * t127;
t48 = -t108 - t171;
t49 = -t72 * t127 + t170;
t130 = -t48 * t75 - t49 * t72;
t128 = -0.2e1 * t185 * t183;
t126 = -pkin(1) * t70 - pkin(2) * t192;
t92 = -t68 * t186 + t100;
t12 = t76 * (t184 * t126 - t69 * t92 + t136) + (-t204 * t102 - t126 * t193 - t92 * t147 + t103 - (t204 * t99 + (-t184 ^ 2 - t69 ^ 2) * t167) * pkin(8)) * t73;
t10 = -t42 * pkin(4) - t12;
t8 = -t209 * t76 + t211 * t73;
t6 = -t39 * pkin(4) - t8;
t122 = t10 * t176 + t6 * t72;
t121 = t10 * t177 - t6 * t75;
t120 = t134 * t72;
t119 = t32 * t180 - t201;
t118 = t42 * t178 + t73 * t39;
t117 = t42 * t180 - t39 * t76;
t115 = t32 * t176 + t24 * t72;
t114 = t32 * t177 - t24 * t75;
t113 = t51 * t176 + t44 * t72;
t112 = t51 * t177 - t44 * t75;
t111 = 0.2e1 * (t68 ^ 2 + t71 ^ 2) * t70 ^ 2 * qJD(2);
t106 = -t73 * t177 + t165;
t105 = t156 + t164;
t104 = t73 * t176 + t72 * t178;
t78 = t24 * pkin(4) - t25 * pkin(10) + t18;
t1 = t11 * t177 + t210 * t75 - t72 * t78;
t2 = -t11 * t176 + t210 * t72 + t75 * t78;
t96 = t133 * qJD(5) - t1 * t75 - t2 * t72;
t95 = -t7 * t76 - t8 * t73 + (-t12 * t76 - t13 * t73) * qJD(4);
t28 = t107 * qJD(5) - t72 * t160 - t75 * t91;
t29 = qJD(5) * t139 + t75 * t160 - t52 * t176 - t72 * t91;
t94 = t131 * qJD(5) - t28 * t75 - t29 * t72;
t34 = t105 * pkin(9) - qJD(4) * t120 + qJD(5) * t108;
t35 = -t49 * qJD(5) + (pkin(9) * t191 + t75 * t134) * qJD(4);
t93 = t130 * qJD(5) - t34 * t75 - t35 * t72;
t61 = -0.2e1 * t157;
t47 = t73 * t145 - t72 * t165;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68 * t128, t71 * t128, t111, qJ(2) * t111, -0.2e1 * t43 * t38, 0.2e1 * t38 * t42 - 0.2e1 * t39 * t43, t38 * t212, t172, t39 * t212, 0, 0.2e1 * t109 * t18 + 0.2e1 * t141 * t42 + 0.2e1 * t30 * t39, -0.2e1 * t109 * t17 + 0.2e1 * t141 * t43 - 0.2e1 * t30 * t38, 0.2e1 * t17 * t42 + 0.2e1 * t18 * t43 + 0.2e1 * t22 * t38 - 0.2e1 * t23 * t39, 0.2e1 * t141 * t30 - 0.2e1 * t17 * t23 - 0.2e1 * t18 * t22, 0.2e1 * t33 * t25, -0.2e1 * t24 * t33 - 0.2e1 * t25 * t32, 0.2e1 * t25 * t42 + 0.2e1 * t33 * t39, t173, -0.2e1 * t24 * t42 - 0.2e1 * t32 * t39, t172, 0.2e1 * t12 * t39 + 0.2e1 * t18 * t32 + 0.2e1 * t21 * t24 + 0.2e1 * t42 * t8, -0.2e1 * t13 * t39 + 0.2e1 * t18 * t33 + 0.2e1 * t21 * t25 + 0.2e1 * t42 * t7, -0.2e1 * t12 * t25 - 0.2e1 * t13 * t24 + 0.2e1 * t32 * t7 - 0.2e1 * t33 * t8, 0.2e1 * t12 * t8 - 0.2e1 * t13 * t7 + 0.2e1 * t18 * t21, 0.2e1 * t27 * t16, -0.2e1 * t15 * t27 - 0.2e1 * t16 * t26, 0.2e1 * t16 * t32 + 0.2e1 * t24 * t27, 0.2e1 * t26 * t15, -0.2e1 * t15 * t32 - 0.2e1 * t24 * t26, t173, 0.2e1 * t10 * t15 + 0.2e1 * t2 * t32 + 0.2e1 * t24 * t3 + 0.2e1 * t26 * t6, 0.2e1 * t1 * t32 + 0.2e1 * t10 * t16 - 0.2e1 * t24 * t4 + 0.2e1 * t27 * t6, 0.2e1 * t1 * t26 - 0.2e1 * t15 * t4 - 0.2e1 * t16 * t3 - 0.2e1 * t2 * t27, -0.2e1 * t1 * t4 + 0.2e1 * t10 * t6 + 0.2e1 * t2 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109 * t160 + t184 * t39, t109 * t138 - t184 * t38, (t204 * t38 - t39 * t74 + (-t204 * t42 + t43 * t74) * qJD(3)) * t69, (t125 - t153 - t17 * t74 + (t204 * t23 - t22 * t74) * qJD(3)) * t69, 0, 0, 0, 0, 0, 0, -t51 * t39 - t44 * t42 + (t32 * t182 - t204 * t24) * t69, -t154 * t25 + t160 * t33 - t52 * t39 - t42 * t91, -t52 * t24 + t51 * t25 - t32 * t91 + t44 * t33, -t12 * t44 + t13 * t91 - t153 * t69 + t160 * t21 - t8 * t51 - t7 * t52, 0, 0, 0, 0, 0, 0, -t107 * t24 + t15 * t51 + t26 * t44 + t29 * t32, t16 * t51 - t24 * t46 + t27 * t44 + t28 * t32, t107 * t16 - t15 * t46 + t26 * t28 - t27 * t29, -t1 * t46 + t10 * t44 - t107 * t2 - t28 * t4 + t29 * t3 + t51 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t146 * t181 + 0.2e1 * t196 + 0.2e1 * (t52 * (-t180 * t74 + t137) - t74 * t138) * t69, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t107 * t29 - 0.2e1 * t28 * t46 + 0.2e1 * t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, 0, -t39, 0, -t18, t17, 0, 0, t178 * t33 + t200, -t73 * t24 + t25 * t76 + (-t32 * t76 - t33 * t73) * qJD(4), t118, t119, -t117, 0, -pkin(3) * t24 - pkin(9) * t118 - t18 * t76 + t180 * t21, -pkin(3) * t25 + pkin(9) * t117 + t178 * t21 + t18 * t73, (-t201 + t200 + (t32 * t73 + t33 * t76) * qJD(4)) * pkin(9) + t95, -t18 * pkin(3) + pkin(9) * t95, t106 * t27 + t16 * t190, t132 * t178 + (-t203 - t202 + (-t198 + t199) * qJD(5)) * t73, (t179 * t32 - t16) * t76 + (qJD(4) * t27 - t114) * t73, t104 * t26 + t15 * t191, (-qJD(4) * t32 * t72 + t15) * t76 + (-qJD(4) * t26 - t115) * t73, t119, t48 * t24 + t35 * t32 + (-t2 + (pkin(9) * t26 + t10 * t72) * qJD(4)) * t76 + (pkin(9) * t15 + qJD(4) * t3 + t122) * t73, -t49 * t24 + t34 * t32 + (-t1 + (pkin(9) * t27 + t10 * t75) * qJD(4)) * t76 + (pkin(9) * t16 - qJD(4) * t4 - t121) * t73, -t49 * t15 - t48 * t16 + t34 * t26 - t35 * t27 + t133 * t178 + (t1 * t72 - t2 * t75 + (t3 * t72 - t4 * t75) * qJD(5)) * t73, -t1 * t49 + t2 * t48 + t3 * t35 - t4 * t34 + (t10 * t178 + t6 * t73) * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t160, -t138, 0, 0, 0, 0, 0, 0, 0, 0, (-t150 * t73 - t182 * t76) * t69, (-t150 * t76 + t182 * t73) * t69, t213, -pkin(3) * t160 + t213 * pkin(9), 0, 0, 0, 0, 0, 0, (t174 * t72 - t29) * t76 + (-qJD(4) * t107 + t113) * t73, (t174 * t75 - t28) * t76 + (-qJD(4) * t46 - t112) * t73, t131 * t178 + (t28 * t72 - t29 * t75 + (-t107 * t72 - t46 * t75) * qJD(5)) * t73, pkin(9) * t116 - t107 * t35 - t28 * t49 + t29 * t48 - t46 * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, -0.2e1 * t144, 0, t61, 0, 0, t73 * t169, t76 * t169, 0, 0, 0.2e1 * t157 * t66 - 0.2e1 * t140, -0.4e1 * t142 * t72 + 0.2e1 * t145 * t65, 0.2e1 * t164 * t73 + 0.2e1 * t179 * t187, 0.2e1 * t157 * t64 + 0.2e1 * t140, -0.2e1 * t144 * t72 + 0.2e1 * t163 * t73, t61, 0.2e1 * t48 * t180 - 0.2e1 * t35 * t76 + 0.2e1 * (t143 * t72 + t176 * t65) * pkin(9), -0.2e1 * t49 * t180 - 0.2e1 * t34 * t76 + 0.2e1 * (-t177 * t65 + 0.2e1 * t142) * pkin(9), 0.2e1 * t130 * t178 + 0.2e1 * (t34 * t72 - t35 * t75 + (t48 * t72 - t49 * t75) * qJD(5)) * t73, 0.2e1 * pkin(9) ^ 2 * t157 - 0.2e1 * t49 * t34 + 0.2e1 * t48 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, 0, -t24, t39, t8, t7, 0, 0, t176 * t27 + t202, qJD(5) * t132 - t15 * t72 + t16 * t75, t115, t177 * t26 - t203, -t114, 0, -pkin(4) * t15 - pkin(10) * t115 + t121, -pkin(4) * t16 + pkin(10) * t114 + t122, (-t203 + t202 + (t198 + t199) * qJD(5)) * pkin(10) + t96, -pkin(4) * t6 + pkin(10) * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, -t91, 0, 0, 0, 0, 0, 0, 0, 0, t112, t113, t94, -pkin(4) * t44 + pkin(10) * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, 0, -t180, 0, -t166, pkin(9) * t180, 0, 0, -t47, -0.4e1 * t158 * t73 - t178 * t188, t180 * t72 - t163, t47, t105, 0, (pkin(10) * t189 + (-pkin(4) * t75 + t205) * t73) * qJD(5) + (t135 * t72 - t170) * qJD(4), (pkin(9) * t190 + t120) * qJD(5) + (t135 * t75 + t171) * qJD(4), t93, -pkin(4) * t166 + pkin(10) * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t158, -0.2e1 * t145, 0, -0.2e1 * t158, 0, 0, t72 * t168, t75 * t168, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, 0, -t15, t24, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t29, t28, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, -t104, t180, t35, t34, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, 0, -t177, 0, -pkin(10) * t176, pkin(10) * t177, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg = t5;
