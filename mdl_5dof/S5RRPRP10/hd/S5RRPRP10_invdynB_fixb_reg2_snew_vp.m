% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S5RRPRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4]';
% 
% Output:
% tauB_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:11
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S5RRPRP10_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP10_invdynB_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP10_invdynB_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRP10_invdynB_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRP10_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRPRP10_invdynB_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:11:11
% EndTime: 2019-12-31 20:11:20
% DurationCPUTime: 5.95s
% Computational Cost: add. (12955->431), mult. (27221->552), div. (0->0), fcn. (15631->6), ass. (0->326)
t539 = sin(qJ(2));
t534 = t539 ^ 2;
t545 = qJD(1) ^ 2;
t526 = t534 * t545;
t544 = qJD(2) ^ 2;
t514 = -t526 - t544;
t542 = cos(qJ(2));
t579 = t542 * t545 * t539;
t509 = qJDD(2) - t579;
t601 = t542 * t509;
t457 = t539 * t514 + t601;
t587 = qJD(1) * qJD(2);
t575 = t542 * t587;
t585 = t539 * qJDD(1);
t498 = 0.2e1 * t575 + t585;
t540 = sin(qJ(1));
t543 = cos(qJ(1));
t412 = t540 * t457 + t543 * t498;
t662 = pkin(5) * t412;
t416 = t543 * t457 - t540 * t498;
t661 = pkin(5) * t416;
t535 = t542 ^ 2;
t528 = t535 * t545;
t516 = -t528 - t544;
t508 = qJDD(2) + t579;
t616 = t539 * t508;
t456 = -t542 * t516 + t616;
t524 = t539 * t587;
t583 = t542 * qJDD(1);
t501 = -0.2e1 * t524 + t583;
t411 = t540 * t456 - t543 * t501;
t660 = pkin(5) * t411;
t415 = t543 * t456 + t540 * t501;
t659 = pkin(5) * t415;
t538 = sin(qJ(4));
t541 = cos(qJ(4));
t591 = qJD(1) * t542;
t491 = t538 * qJD(2) + t541 * t591;
t493 = t541 * qJD(2) - t538 * t591;
t442 = t493 * t491;
t499 = t575 + t585;
t484 = qJDD(4) + t499;
t648 = t442 - t484;
t658 = t648 * pkin(4);
t602 = t542 * t508;
t447 = t539 * t516 + t602;
t657 = pkin(1) * t447;
t656 = pkin(6) * t447;
t655 = pkin(6) * t457;
t513 = -t526 + t544;
t451 = -t539 * t513 + t602;
t582 = t543 * qJDD(1);
t654 = t540 * t451 - t539 * t582;
t584 = t540 * qJDD(1);
t653 = t543 * t451 + t539 * t584;
t652 = 2 * qJD(3);
t637 = pkin(2) + pkin(7);
t615 = t539 * t509;
t449 = -t542 * t514 + t615;
t651 = pkin(1) * t449;
t650 = pkin(6) * t449;
t649 = pkin(6) * t456;
t619 = t538 * t648;
t605 = t541 * t648;
t515 = t528 - t544;
t454 = -t542 * t515 + t615;
t647 = t540 * t454 + t542 * t582;
t646 = t543 * t454 - t540 * t583;
t565 = t499 + t575;
t645 = t565 * qJ(3);
t482 = t491 ^ 2;
t588 = t539 * qJD(1);
t520 = qJD(4) + t588;
t517 = t520 ^ 2;
t431 = -t517 - t482;
t364 = t538 * t431 - t605;
t365 = t541 * t431 + t619;
t644 = pkin(3) * t364 - qJ(3) * t365;
t483 = t493 ^ 2;
t436 = -t483 - t517;
t421 = t442 + t484;
t620 = t538 * t421;
t375 = t541 * t436 - t620;
t606 = t541 * t421;
t376 = -t538 * t436 - t606;
t643 = pkin(3) * t375 - qJ(3) * t376;
t500 = -t524 + t583;
t430 = -t491 * qJD(4) + t541 * qJDD(2) - t538 * t500;
t470 = t520 * t491;
t642 = t430 - t470;
t640 = -pkin(2) * t524 + t588 * t652;
t510 = pkin(3) * t588 - qJD(2) * pkin(7);
t511 = t540 * g(1) - t543 * g(2);
t558 = -qJDD(1) * pkin(1) - t511;
t548 = t558 - t640 - t645;
t353 = -t510 * t588 + (-pkin(3) * t535 - pkin(6)) * t545 - t637 * t500 + t548;
t512 = t543 * g(1) + t540 * g(2);
t478 = -t545 * pkin(1) + qJDD(1) * pkin(6) - t512;
t460 = t542 * g(3) + t539 * t478;
t625 = qJ(3) * t539;
t636 = pkin(2) * t542;
t567 = -t625 - t636;
t496 = t567 * qJD(1);
t557 = -qJDD(2) * pkin(2) - t544 * qJ(3) + t496 * t588 + qJDD(3) + t460;
t367 = -t508 * pkin(7) + (t499 - t575) * pkin(3) + t557;
t595 = -t538 * t353 + t541 * t367;
t639 = qJ(5) * t470 + 0.2e1 * qJD(5) * t493 - t595 + t658;
t312 = t541 * t353 + t538 * t367;
t571 = t538 * qJDD(2) + t541 * t500;
t429 = -t493 * qJD(4) - t571;
t459 = t520 * pkin(4) - t493 * qJ(5);
t556 = t429 * qJ(5) - 0.2e1 * qJD(5) * t491 - t520 * t459 + t312;
t638 = t539 * t515 + t601;
t396 = t430 + t470;
t554 = (-qJD(4) + t520) * t493 - t571;
t344 = -t541 * t396 + t538 * t554;
t419 = -t482 - t483;
t318 = t539 * t344 + t542 * t419;
t346 = t538 * t396 + t541 * t554;
t290 = t540 * t318 - t543 * t346;
t635 = pkin(5) * t290;
t391 = (qJD(4) + t520) * t493 + t571;
t327 = t539 * t364 + t542 * t391;
t299 = t540 * t327 - t543 * t365;
t634 = pkin(5) * t299;
t330 = t539 * t375 + t542 * t642;
t302 = t540 * t330 - t543 * t376;
t633 = pkin(5) * t302;
t592 = t534 + t535;
t503 = t592 * qJDD(1);
t506 = t526 + t528;
t437 = t540 * t503 + t543 * t506;
t632 = pkin(5) * t437;
t317 = -t542 * t344 + t539 * t419;
t631 = pkin(6) * t317;
t326 = -t542 * t364 + t539 * t391;
t630 = pkin(6) * t326;
t329 = -t542 * t375 + t539 * t642;
t629 = pkin(6) * t329;
t628 = t545 * pkin(6);
t624 = t520 * t538;
t623 = t520 * t541;
t287 = -t430 * qJ(5) - t639;
t622 = t538 * t287;
t593 = t539 * g(3) - t542 * t478;
t555 = t544 * pkin(2) - t496 * t591 + t593;
t550 = qJDD(2) * qJ(3) - t555;
t549 = t500 * pkin(3) - pkin(7) * t528 + t550;
t572 = (t652 + t510) * qJD(2);
t366 = t572 + t549;
t621 = t538 * t366;
t477 = -t558 + t628;
t618 = t539 * t477;
t617 = t539 * t498;
t608 = t541 * t287;
t607 = t541 * t366;
t604 = t542 * t477;
t603 = t542 * t501;
t598 = -pkin(1) * t346 + pkin(6) * t318;
t597 = -pkin(1) * t365 + pkin(6) * t327;
t596 = -pkin(1) * t376 + pkin(6) * t330;
t594 = pkin(1) * t506 + pkin(6) * t503;
t586 = qJD(3) * qJD(2);
t581 = t539 * t442;
t580 = t542 * t442;
t297 = pkin(3) * t344 - qJ(3) * t346;
t399 = t539 * t460 - t542 * t593;
t444 = -t540 * t511 - t543 * t512;
t570 = t540 * t579;
t569 = t543 * t579;
t505 = -t540 * t545 + t582;
t568 = -pkin(5) * t505 - t540 * g(3);
t566 = pkin(2) * t539 - qJ(3) * t542;
t279 = t538 * t312 + t541 * t595;
t280 = t541 * t312 - t538 * t595;
t398 = t542 * t460 + t539 * t593;
t563 = t542 * t513 + t616;
t443 = t543 * t511 - t540 * t512;
t561 = pkin(3) * t391 - t637 * t365;
t560 = pkin(3) * t642 - t637 * t376;
t559 = pkin(3) * t419 - t637 * t346;
t553 = -pkin(1) * t317 - qJ(3) * t419 + t637 * t344;
t552 = -pkin(1) * t326 - qJ(3) * t391 + t637 * t364;
t551 = -pkin(1) * t329 - qJ(3) * t642 + t637 * t375;
t400 = t550 + 0.2e1 * t586;
t547 = t500 * pkin(2) + t477 + t640;
t546 = -t429 * pkin(4) - t482 * qJ(5) + t493 * t459 + qJDD(5) + t549;
t315 = t572 + t546;
t529 = -0.2e1 * t586;
t507 = -t526 + t528;
t504 = t543 * t545 + t584;
t494 = t566 * qJDD(1);
t486 = t592 * t587;
t474 = -pkin(5) * t504 + t543 * g(3);
t467 = -t483 + t517;
t466 = t482 - t517;
t465 = t540 * qJDD(2) + t543 * t486;
t464 = t542 * t499 - t534 * t587;
t463 = -t543 * qJDD(2) + t540 * t486;
t462 = -t539 * t500 - t535 * t587;
t446 = t565 * t539;
t445 = (t500 - t524) * t542;
t439 = t483 - t482;
t438 = t543 * t503 - t540 * t506;
t435 = pkin(5) * t438;
t434 = t603 - t617;
t433 = t542 * t498 + t539 * t501;
t428 = t543 * t464 - t570;
t427 = t543 * t462 + t570;
t426 = t540 * t464 + t569;
t425 = t540 * t462 - t569;
t409 = -t604 + t650;
t408 = -t618 - t656;
t407 = (t491 * t541 - t493 * t538) * t520;
t406 = (t491 * t538 + t493 * t541) * t520;
t405 = t543 * t434 - t540 * t507;
t404 = t540 * t434 + t543 * t507;
t402 = -t593 + t651;
t401 = t460 - t657;
t389 = qJ(3) * t506 + t557;
t388 = pkin(2) * t506 + t400;
t387 = -t538 * t430 - t493 * t623;
t386 = t538 * t429 - t491 * t623;
t385 = -t541 * t430 + t493 * t624;
t384 = -t541 * t429 - t491 * t624;
t383 = t547 + t645;
t382 = -t539 * t406 + t542 * t484;
t381 = t542 * t406 + t539 * t484;
t380 = t538 * t467 + t605;
t379 = -t538 * t466 - t606;
t378 = -t541 * t466 + t620;
t377 = -t541 * t467 + t619;
t374 = -t628 + (-t500 - t501) * pkin(2) + t548;
t373 = (t498 + t565) * qJ(3) + t547;
t372 = t543 * t399 - t540 * t477;
t371 = t540 * t399 + t543 * t477;
t358 = pkin(2) * t508 + qJ(3) * t516 - t557 + t657;
t357 = -t539 * t387 + t580;
t356 = -t539 * t384 - t580;
t355 = t542 * t387 + t581;
t354 = t542 * t384 - t581;
t352 = -t651 + pkin(2) * t514 + t529 + (-qJDD(2) - t509) * qJ(3) + t555;
t349 = -pkin(4) * t642 - qJ(5) * t421;
t348 = t542 * t400 + t539 * t557;
t347 = t539 * t400 - t542 * t557;
t345 = t541 * t391 + t538 * t642;
t343 = t538 * t391 - t541 * t642;
t339 = t543 * t382 - t540 * t407;
t338 = t540 * t382 + t543 * t407;
t337 = -pkin(2) * t617 + t542 * t373 - t650;
t336 = -qJ(3) * t603 - t539 * t374 + t656;
t335 = -t539 * t388 + t542 * t389;
t334 = -t539 * t377 + t542 * t396;
t333 = -t539 * t379 + t542 * t554;
t332 = t542 * t377 + t539 * t396;
t331 = t542 * t379 + t539 * t554;
t324 = -t539 * t343 + t542 * t439;
t323 = t542 * t343 + t539 * t439;
t322 = t543 * t357 - t540 * t385;
t321 = t543 * t356 - t540 * t386;
t320 = t540 * t357 + t543 * t385;
t319 = t540 * t356 + t543 * t386;
t314 = t543 * t348 - t540 * t383;
t313 = t540 * t348 + t543 * t383;
t309 = -qJ(5) * t436 + t315;
t308 = t543 * t334 - t540 * t380;
t307 = t543 * t333 - t540 * t378;
t306 = t540 * t334 + t543 * t380;
t305 = t540 * t333 + t543 * t378;
t304 = -pkin(1) * t347 + pkin(2) * t557 - qJ(3) * t400;
t303 = t543 * t330 + t540 * t376;
t301 = pkin(5) * t303;
t300 = t543 * t327 + t540 * t365;
t298 = pkin(5) * t300;
t296 = -pkin(6) * t347 - t566 * t383;
t295 = -pkin(4) * t391 + qJ(5) * t431 - qJD(2) * t510 + t529 - t546;
t294 = t543 * t324 - t540 * t345;
t293 = t540 * t324 + t543 * t345;
t292 = -t482 * pkin(4) + t556;
t291 = t543 * t318 + t540 * t346;
t289 = pkin(5) * t291;
t288 = t560 - t621;
t286 = -pkin(4) * t396 + t297;
t284 = t561 + t607;
t283 = -t312 + t643;
t282 = t595 + t644;
t281 = (t396 + t430) * qJ(5) + t639;
t278 = qJ(5) * t554 + (-t419 - t482) * pkin(4) + t556;
t277 = t551 - t607;
t276 = t552 - t621;
t275 = -pkin(4) * t315 + qJ(5) * t292;
t274 = t539 * t279 + t542 * t366;
t273 = -t542 * t279 + t539 * t366;
t272 = (t436 + t482) * pkin(4) - t556 + t643;
t271 = t287 + t644 - t658;
t270 = -t538 * t309 - t541 * t349 + t560;
t269 = -qJ(5) * t619 - t541 * t295 + t561;
t268 = t541 * t292 - t622;
t267 = t538 * t292 + t608;
t266 = -t280 + t559;
t265 = -t541 * t309 + t538 * t349 + t551;
t264 = -qJ(5) * t605 + t538 * t295 + t552;
t263 = pkin(3) * t279 - qJ(3) * t280;
t262 = t539 * t267 + t542 * t315;
t261 = -t542 * t267 + t539 * t315;
t260 = t542 * t283 - t539 * t288 - t629;
t259 = t542 * t282 - t539 * t284 - t630;
t258 = t279 + t553;
t257 = pkin(3) * t366 - t637 * t280;
t256 = t543 * t274 + t540 * t280;
t255 = t540 * t274 - t543 * t280;
t254 = -t541 * t278 - t538 * t281 + t559;
t253 = -t539 * t266 + t542 * t297 - t631;
t252 = -t539 * t270 + t542 * t272 - t629;
t251 = -t539 * t269 + t542 * t271 - t630;
t250 = t538 * t278 - t541 * t281 + t553;
t249 = -pkin(1) * t273 - qJ(3) * t366 + t637 * t279;
t248 = t543 * t262 + t540 * t268;
t247 = t540 * t262 - t543 * t268;
t246 = pkin(3) * t267 + pkin(4) * t287 - qJ(3) * t268;
t245 = -t539 * t254 + t542 * t286 - t631;
t244 = -pkin(6) * t273 - t539 * t257 + t542 * t263;
t243 = pkin(3) * t315 + qJ(5) * t622 - t637 * t268 - t541 * t275;
t242 = -pkin(1) * t261 - qJ(3) * t315 + qJ(5) * t608 + t637 * t267 + t538 * t275;
t241 = -pkin(6) * t261 - t539 * t243 + t542 * t246;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t504, -t505, 0, t444, 0, 0, 0, 0, 0, 0, -t415, -t416, t438, t372, 0, 0, 0, 0, 0, 0, t438, t415, t416, t314, 0, 0, 0, 0, 0, 0, t300, t303, t291, t256, 0, 0, 0, 0, 0, 0, t300, t303, t291, t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t505, -t504, 0, t443, 0, 0, 0, 0, 0, 0, -t411, -t412, t437, t371, 0, 0, 0, 0, 0, 0, t437, t411, t412, t313, 0, 0, 0, 0, 0, 0, t299, t302, t290, t255, 0, 0, 0, 0, 0, 0, t299, t302, t290, t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t447, -t449, 0, -t398, 0, 0, 0, 0, 0, 0, 0, -t447, t449, t347, 0, 0, 0, 0, 0, 0, t326, t329, t317, t273, 0, 0, 0, 0, 0, 0, t326, t329, t317, t261; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t505, 0, -t504, 0, t568, -t474, -t443, -pkin(5) * t443, t428, t405, t653, t427, -t646, t465, -t540 * t401 + t543 * t408 + t660, -t540 * t402 + t543 * t409 + t662, t543 * t398 - t632, -pkin(5) * t371 - (pkin(1) * t540 - pkin(6) * t543) * t398, t465, -t653, t646, t428, t405, t427, t543 * t335 - t540 * t494 - t632, t543 * t336 - t540 * t358 - t660, t543 * t337 - t540 * t352 - t662, -pkin(5) * t313 + t543 * t296 - t540 * t304, t322, t294, t308, t321, t307, t339, t543 * t259 - t540 * t276 - t634, t543 * t260 - t540 * t277 - t633, t543 * t253 - t540 * t258 - t635, -pkin(5) * t255 + t543 * t244 - t540 * t249, t322, t294, t308, t321, t307, t339, t543 * t251 - t540 * t264 - t634, t543 * t252 - t540 * t265 - t633, t543 * t245 - t540 * t250 - t635, -pkin(5) * t247 + t543 * t241 - t540 * t242; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t504, 0, t505, 0, t474, t568, t444, pkin(5) * t444, t426, t404, t654, t425, -t647, t463, t543 * t401 + t540 * t408 - t659, t543 * t402 + t540 * t409 - t661, t540 * t398 + t435, pkin(5) * t372 - (-pkin(1) * t543 - pkin(6) * t540) * t398, t463, -t654, t647, t426, t404, t425, t540 * t335 + t543 * t494 + t435, t540 * t336 + t543 * t358 + t659, t540 * t337 + t543 * t352 + t661, pkin(5) * t314 + t540 * t296 + t543 * t304, t320, t293, t306, t319, t305, t338, t540 * t259 + t543 * t276 + t298, t540 * t260 + t543 * t277 + t301, t540 * t253 + t543 * t258 + t289, pkin(5) * t256 + t540 * t244 + t543 * t249, t320, t293, t306, t319, t305, t338, t540 * t251 + t543 * t264 + t298, t540 * t252 + t543 * t265 + t301, t540 * t245 + t543 * t250 + t289, pkin(5) * t248 + t540 * t241 + t543 * t242; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t511, t512, 0, 0, t446, t433, t563, t445, t638, 0, pkin(1) * t501 + t604 - t649, -pkin(1) * t498 - t618 - t655, t399 + t594, pkin(1) * t477 + pkin(6) * t399, 0, -t563, -t638, t446, t433, t445, t542 * t388 + t539 * t389 + t594, t649 + t542 * t374 + (-pkin(1) - t625) * t501, t655 + t539 * t373 + (pkin(1) + t636) * t498, pkin(6) * t348 + (pkin(1) - t567) * t383, t355, t323, t332, t354, t331, t381, t539 * t282 + t542 * t284 + t597, t539 * t283 + t542 * t288 + t596, t542 * t266 + t539 * t297 + t598, -pkin(1) * t280 + pkin(6) * t274 + t542 * t257 + t539 * t263, t355, t323, t332, t354, t331, t381, t542 * t269 + t539 * t271 + t597, t542 * t270 + t539 * t272 + t596, t542 * t254 + t539 * t286 + t598, -pkin(1) * t268 + pkin(6) * t262 + t542 * t243 + t539 * t246;];
tauB_reg = t1;
