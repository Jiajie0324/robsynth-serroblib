% Calculate vector of inverse dynamics joint torques for
% S5RRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:48
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRRRP2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP2_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:47:33
% EndTime: 2019-12-05 18:48:11
% DurationCPUTime: 30.37s
% Computational Cost: add. (25278->785), mult. (19988->914), div. (0->0), fcn. (15736->8), ass. (0->442)
t906 = Icges(5,4) + Icges(6,4);
t889 = Icges(5,2) + Icges(6,2);
t907 = Icges(5,1) + Icges(6,1);
t450 = qJ(3) + qJ(4);
t439 = sin(t450);
t908 = t906 * t439;
t905 = Icges(5,5) + Icges(6,5);
t904 = Icges(5,6) + Icges(6,6);
t441 = cos(t450);
t874 = t889 * t441 + t908;
t903 = t907 * t441 - t908;
t451 = qJ(1) + qJ(2);
t442 = cos(t451);
t681 = t439 * t442;
t902 = t906 * t681;
t425 = Icges(6,4) * t441;
t426 = Icges(5,4) * t441;
t870 = t907 * t439 + t425 + t426;
t901 = Icges(5,3) + Icges(6,3);
t440 = sin(t451);
t676 = t441 * t442;
t866 = t904 * t440 + t906 * t676 - t889 * t681;
t886 = t905 * t440 + t907 * t676 - t902;
t682 = t439 * t440;
t900 = t906 * t682;
t448 = qJD(3) + qJD(4);
t899 = t874 * t448;
t536 = -Icges(6,2) * t439 + t425;
t502 = t536 * t440;
t537 = -Icges(5,2) * t439 + t426;
t867 = -t440 * t537 + t904 * t442 - t502;
t680 = t440 * t441;
t887 = t905 * t442 - t907 * t680 + t900;
t898 = t905 * t439 + t904 * t441;
t449 = qJD(1) + qJD(2);
t896 = t903 * t449;
t895 = t870 * t448 - t905 * t449;
t894 = -t904 * t449 + t899;
t893 = t537 + t536 + t870;
t342 = Icges(6,5) * t441 - Icges(6,6) * t439;
t344 = Icges(5,5) * t441 - Icges(5,6) * t439;
t500 = t344 * t440;
t892 = -t342 * t440 + t901 * t442 - t500;
t888 = t901 * t440 + t905 * t676 - t904 * t681;
t891 = t874 * t439 - t870 * t441;
t890 = t866 * t439 - t886 * t441;
t885 = t898 * t440;
t884 = -t448 * t903 + t899;
t883 = t893 * t448;
t882 = -t895 * t440 + t896 * t442 + t867 * t448;
t881 = t896 * t440 + t895 * t442 + t866 * t448;
t503 = t537 * t449;
t674 = t442 * t449;
t880 = t894 * t440 - t442 * t503 + t887 * t448 - t536 * t674;
t879 = -t440 * t503 - t894 * t442 + t886 * t448 - t449 * t502;
t878 = t898 * t442;
t877 = t887 * t441;
t876 = t898 * t448 - t901 * t449;
t828 = t891 * t440 + t878;
t827 = -t891 * t442 + t885;
t875 = t866 * t682;
t873 = t867 * t681;
t872 = t892 * t440 + t887 * t676;
t871 = t892 * t442 + t867 * t682;
t869 = t890 * t442;
t868 = t888 * t442 - t886 * t680;
t835 = -t680 * t887 + t871;
t834 = t868 + t875;
t833 = t872 - t873;
t832 = t440 * t888 - t869;
t339 = t440 * t448;
t340 = t442 * t448;
t865 = t893 * t449 + (t680 * t889 + t887 + t900) * t340 + (-t676 * t889 + t886 - t902) * t339;
t864 = t891 * t449 + (t342 + t344) * t448;
t693 = t342 * t449;
t863 = -t344 * t674 - t442 * t693 + (t867 * t439 - t877) * t449 + t876 * t440;
t862 = -t440 * t693 + (-t500 + t890) * t449 - t876 * t442;
t433 = pkin(4) * t441;
t454 = cos(qJ(3));
t445 = t454 * pkin(3);
t434 = t445 + pkin(2);
t372 = t433 + t434;
t317 = t442 * t372;
t612 = rSges(6,1) * t676;
t515 = -rSges(6,3) * t440 - t612;
t861 = t515 - t317;
t860 = t439 * t879 + t441 * t881 - t449 * t888;
t859 = t880 * t439 + t882 * t441 - t892 * t449;
t858 = t883 * t439 + t884 * t441 - t898 * t449;
t821 = (-t874 + t903) * t449 + (t870 * t440 - t867) * t340 + (-t870 * t442 - t866) * t339;
t857 = -t865 * t439 + t821 * t441;
t613 = rSges(5,1) * t676;
t516 = rSges(5,3) * t440 + t613;
t605 = t439 * t339;
t675 = t441 * t448;
t602 = t440 * t675;
t603 = t439 * t674;
t812 = t602 + t603;
t595 = rSges(5,1) * t605 + t812 * rSges(5,2);
t156 = -t449 * t516 + t595;
t422 = qJDD(3) * t442;
t679 = t440 * t449;
t216 = qJDD(4) * t442 - t448 * t679 + t422;
t429 = t441 * rSges(5,1);
t357 = -rSges(5,2) * t439 + t429;
t297 = t357 * t448;
t354 = rSges(5,1) * t439 + rSges(5,2) * t441;
t446 = qJDD(1) + qJDD(2);
t452 = sin(qJ(3));
t621 = qJD(3) * t452;
t589 = t440 * t621;
t398 = pkin(3) * t589;
t456 = -pkin(8) - pkin(7);
t670 = t449 * t456;
t632 = t440 * t670 + t398;
t738 = pkin(2) - t434;
t741 = pkin(7) * t440;
t179 = (t442 * t738 + t741) * t449 + t632;
t744 = pkin(2) * t442;
t359 = t741 + t744;
t453 = sin(qJ(1));
t455 = cos(qJ(1));
t458 = qJD(1) ^ 2;
t498 = (-qJDD(1) * t453 - t455 * t458) * pkin(1);
t739 = t442 * pkin(7);
t546 = -pkin(2) * t440 + t739;
t478 = -t449 ^ 2 * t359 + t446 * t546 + t498;
t737 = pkin(7) + t456;
t582 = t737 * t442;
t494 = t440 * t738 - t582;
t474 = t449 * t179 + t446 * t494 + t478;
t794 = rSges(5,2) * t682 + t442 * rSges(5,3);
t522 = rSges(5,1) * t680 - t794;
t669 = t454 * qJD(3) ^ 2;
t622 = qJD(3) * t449;
t312 = -t440 * t622 + t422;
t697 = t312 * t452;
t34 = -t446 * t522 + t449 * t156 - t216 * t354 - t340 * t297 + (-t442 * t669 - t697) * pkin(3) + t474;
t852 = t34 - g(3);
t855 = t828 * t449;
t384 = t442 * t434;
t391 = rSges(6,2) * t681;
t447 = -qJ(5) + t456;
t625 = t447 - t456;
t663 = t440 * t625 + t384 + t391 + t861;
t543 = rSges(3,1) * t440 + rSges(3,2) * t442;
t298 = t543 * t449;
t732 = pkin(1) * qJD(1);
t617 = t453 * t732;
t268 = t298 + t617;
t423 = qJD(5) * t440;
t600 = t441 * t340;
t671 = t447 * t449;
t813 = -t439 * t340 - t441 * t679;
t854 = t813 * rSges(6,1) - rSges(6,2) * t600 - t372 * t679 - t442 * t671 + t423;
t853 = t827 * t449;
t428 = t441 * rSges(6,1);
t356 = -rSges(6,2) * t439 + t428;
t296 = t356 * t448;
t730 = t441 * rSges(6,2);
t353 = rSges(6,1) * t439 + t730;
t574 = t372 + t428;
t549 = -t434 + t574;
t619 = pkin(3) * t669;
t616 = pkin(3) * t621;
t742 = pkin(4) * t439;
t322 = -t448 * t742 - t616;
t424 = qJD(5) * t442;
t495 = t424 + (-t322 + t671) * t440 + rSges(6,1) * t605 + t812 * rSges(6,2);
t633 = -t372 + t434;
t666 = t449 * t515 + t633 * t674 + t495 - t632;
t795 = rSges(6,2) * t682 + t442 * rSges(6,3);
t18 = -pkin(3) * t697 + t446 * t795 - t216 * t353 - t340 * t296 + t666 * t449 + (-t216 * t439 - t340 * t675) * pkin(4) + (-t446 * t549 + qJDD(5)) * t440 + (qJD(5) * t449 - t446 * t625 - t619) * t442 + t474;
t805 = t18 - g(3);
t311 = qJDD(3) * t440 + t442 * t622;
t215 = qJD(4) * t674 + qJDD(4) * t440 + t311;
t745 = pkin(1) * t455;
t746 = pkin(1) * t453;
t547 = -qJDD(1) * t745 + t458 * t746;
t743 = pkin(3) * t452;
t508 = t311 * t743 + t440 * t619 + t547;
t232 = t440 * t737 - t384 + t744;
t598 = t232 + t663;
t556 = -t359 + t598;
t409 = pkin(2) * t679;
t639 = t434 * t679 + t442 * t670;
t178 = t409 + (-pkin(7) * t449 - t616) * t442 - t639;
t301 = pkin(7) * t674 - t409;
t664 = -t178 - t301;
t667 = (t322 + t616) * t442 + t639 + t449 * t795 + t854;
t19 = qJDD(5) * t442 + t215 * t353 + t296 * t339 + (t215 * t439 + t339 * t675) * pkin(4) + t556 * t446 + (-t423 + t664 - t667) * t449 + t508;
t804 = t19 - g(2);
t593 = t813 * rSges(5,1) - rSges(5,2) * t600;
t154 = t449 * t794 + t593;
t392 = rSges(5,2) * t681;
t252 = -t392 + t516;
t655 = t232 - t252;
t597 = -t359 + t655;
t35 = t215 * t354 + t297 * t339 + (-t154 + t664) * t449 + t597 * t446 + t508;
t851 = t35 - g(2);
t672 = t442 * t454;
t517 = -rSges(4,1) * t672 - rSges(4,3) * t440;
t620 = qJD(3) * t454;
t673 = t442 * t452;
t591 = rSges(4,1) * t589 + (t440 * t620 + t449 * t673) * rSges(4,2);
t177 = t449 * t517 + t591;
t735 = rSges(4,2) * t452;
t736 = rSges(4,1) * t454;
t412 = -t735 + t736;
t367 = t412 * qJD(3);
t410 = rSges(4,1) * t452 + rSges(4,2) * t454;
t677 = t440 * t454;
t618 = rSges(4,1) * t677;
t678 = t440 * t452;
t626 = rSges(4,2) * t678 + t442 * rSges(4,3);
t523 = t618 - t626;
t623 = qJD(3) * t442;
t85 = t449 * t177 - t312 * t410 - t367 * t623 - t446 * t523 + t478;
t850 = t85 - g(3);
t586 = t442 * t620;
t587 = t442 * t621;
t592 = -rSges(4,1) * t587 - rSges(4,2) * t586 - t449 * t618;
t176 = t449 * t626 + t592;
t624 = qJD(3) * t440;
t419 = rSges(4,2) * t673;
t266 = -t419 - t517;
t641 = -t266 - t359;
t86 = t367 * t624 + t311 * t410 + (-t176 - t301) * t449 + t641 * t446 + t547;
t849 = t86 - g(2);
t299 = -rSges(3,1) * t674 + rSges(3,2) * t679;
t848 = t299 * t449 - t446 * t543 - g(3) + t498;
t358 = rSges(3,1) * t442 - t440 * rSges(3,2);
t847 = t298 * t449 - t358 * t446 - g(2) + t547;
t846 = t863 * t440 - t859 * t442;
t845 = t862 * t440 - t860 * t442;
t844 = t859 * t440 + t863 * t442;
t843 = t860 * t440 + t862 * t442;
t842 = t834 * t339 + t835 * t340 + t855;
t841 = t832 * t339 + t833 * t340 + t853;
t840 = -t439 * t882 + t441 * t880;
t839 = -t439 * t881 + t441 * t879;
t838 = t864 * t440 - t858 * t442;
t837 = t858 * t440 + t864 * t442;
t443 = Icges(4,4) * t454;
t538 = -Icges(4,2) * t452 + t443;
t791 = Icges(4,1) * t452 + t443;
t627 = t791 + t538;
t726 = Icges(4,4) * t452;
t404 = Icges(4,2) * t454 + t726;
t407 = Icges(4,1) * t454 - t726;
t628 = t404 - t407;
t836 = (t452 * t627 + t454 * t628) * t449;
t283 = rSges(5,1) * t682 + rSges(5,2) * t680;
t687 = t354 * t442;
t831 = t442 * t154 + t283 * t339 + t340 * t687;
t830 = t439 * t887 + t867 * t441;
t829 = t439 * t886 + t866 * t441;
t826 = t442 * t178 - (-t440 ^ 2 - t442 ^ 2) * t616;
t284 = t353 * t442;
t825 = t340 * t284 + t667 * t442;
t548 = t356 + t433;
t822 = (-t877 - t888) * t440 + t869 + t871;
t820 = -t339 * t878 + t340 * t885 + t344 * t449 + t693;
t282 = rSges(6,1) * t682 + rSges(6,2) * t680;
t393 = pkin(4) * t682;
t337 = t449 * t393;
t819 = t449 * t282 - t340 * t548 - t353 * t679 - t337;
t818 = pkin(3) * t586;
t319 = t449 * t359;
t796 = -t449 * t232 + t319;
t817 = -t449 * t252 - t595 - t632 - t796;
t338 = pkin(4) * t603;
t816 = pkin(4) * t602 + t440 * t296 - t548 * t339 + t353 * t674 + t338;
t815 = t449 * t283 - t340 * t357 - t354 * t679;
t250 = t449 * t266;
t814 = -t591 - t250 - t319;
t811 = t663 * t449 - t495 - t796;
t810 = -t868 - t872;
t512 = t442 * t625 - t795;
t614 = t455 * t732;
t550 = -t398 + t614;
t696 = t339 * t354;
t497 = -t550 + t696;
t100 = t449 * t597 + t497;
t806 = (t297 * t440 - t339 * t357 + t354 * t674 - t449 * t687) * t100;
t263 = Icges(4,4) * t672 - Icges(4,2) * t673 + Icges(4,6) * t440;
t417 = Icges(4,4) * t673;
t265 = Icges(4,1) * t672 + Icges(4,5) * t440 - t417;
t530 = t263 * t452 - t265 * t454;
t803 = t442 * t530;
t249 = t449 * t523;
t318 = t449 * t546;
t519 = t410 * t623 + t249 - t318;
t151 = t519 + t617;
t321 = t410 * t624;
t551 = t321 - t614;
t152 = t449 * t641 + t551;
t785 = t151 * t442 + t152 * t440;
t576 = t353 + t742;
t783 = t339 * t576 + t424;
t504 = t538 * t440;
t262 = Icges(4,6) * t442 - t504;
t416 = Icges(4,4) * t678;
t264 = -Icges(4,1) * t677 + Icges(4,5) * t442 + t416;
t168 = t262 * t454 + t264 * t452;
t775 = -Icges(4,6) * t449 + qJD(3) * t404;
t173 = t440 * t775 - t538 * t674;
t505 = t407 * t449;
t773 = -Icges(4,5) * t449 + qJD(3) * t791;
t175 = t440 * t773 - t442 * t505;
t403 = Icges(4,5) * t454 - Icges(4,6) * t452;
t501 = t403 * t440;
t260 = Icges(4,3) * t442 - t501;
t778 = qJD(3) * t168 + t173 * t452 - t175 * t454 - t260 * t449;
t169 = t263 * t454 + t265 * t452;
t172 = -t442 * t775 - t449 * t504;
t174 = -t440 * t505 - t442 * t773;
t261 = Icges(4,5) * t672 - Icges(4,6) * t673 + Icges(4,3) * t440;
t777 = qJD(3) * t169 + t172 * t452 - t174 * t454 - t261 * t449;
t402 = Icges(4,5) * t452 + Icges(4,6) * t454;
t776 = -Icges(4,3) * t449 + qJD(3) * t402;
t361 = t538 * qJD(3);
t362 = t407 * qJD(3);
t527 = t404 * t454 + t452 * t791;
t774 = qJD(3) * t527 + t361 * t452 - t362 * t454 - t402 * t449;
t642 = -Icges(4,2) * t672 + t265 - t417;
t644 = t442 * t791 + t263;
t770 = t452 * t642 + t454 * t644;
t643 = Icges(4,2) * t677 + t264 + t416;
t645 = -t440 * t791 + t262;
t769 = -t452 * t643 - t454 * t645;
t760 = t215 / 0.2e1;
t759 = t216 / 0.2e1;
t758 = t311 / 0.2e1;
t757 = t312 / 0.2e1;
t756 = -t339 / 0.2e1;
t755 = t339 / 0.2e1;
t754 = -t340 / 0.2e1;
t753 = t340 / 0.2e1;
t752 = t440 / 0.2e1;
t751 = t442 / 0.2e1;
t750 = t446 / 0.2e1;
t749 = -t449 / 0.2e1;
t748 = t449 / 0.2e1;
t747 = -rSges(4,3) - pkin(7);
t740 = g(3) * t442;
t731 = t18 * t442;
t302 = t402 * t440;
t526 = t404 * t452 - t454 * t791;
t188 = -t442 * t526 + t302;
t707 = t188 * t449;
t700 = t262 * t452;
t699 = t264 * t454;
t688 = t354 * t440;
t375 = -t742 - t743;
t686 = t375 * t440;
t685 = t402 * t442;
t684 = t403 * t449;
t308 = t410 * t440;
t683 = t410 * t442;
t665 = t178 * t623 - t312 * t232;
t658 = t663 * t442;
t657 = t442 * t260 + t262 * t678;
t656 = t440 * t260 + t264 * t672;
t629 = t440 * t353 + t393;
t420 = pkin(3) * t678;
t615 = pkin(3) * t620;
t585 = -t679 / 0.2e1;
t584 = t674 / 0.2e1;
t583 = -pkin(2) - t736;
t581 = -t624 / 0.2e1;
t580 = t624 / 0.2e1;
t579 = -t623 / 0.2e1;
t578 = t623 / 0.2e1;
t575 = -t434 - t429;
t562 = -t261 - t699;
t557 = pkin(3) * t587;
t554 = t409 - t592;
t553 = -pkin(2) - t575;
t552 = -pkin(4) * t675 - t296;
t413 = rSges(2,1) * t455 - t453 * rSges(2,2);
t544 = rSges(2,1) * t453 + rSges(2,2) * t455;
t121 = -t264 * t677 + t657;
t122 = t442 * t261 + t263 * t678 - t265 * t677;
t535 = t121 * t442 + t122 * t440;
t123 = -t262 * t673 + t656;
t124 = t261 * t440 - t803;
t534 = t123 * t442 + t124 * t440;
t531 = -t699 + t700;
t518 = -t794 + t582;
t269 = -t358 * t449 - t614;
t510 = -t449 * t494 - t318 + t557;
t509 = -qJD(3) * t179 - t311 * t738;
t496 = t398 + t783;
t484 = -t442 * t776 + (-t501 + t530) * t449;
t483 = -t403 * t674 + t440 * t776 + t449 * t531;
t480 = t403 * qJD(3) + t449 * t526;
t479 = -t322 * t442 - t854;
t194 = -t613 - t384 + t392 + (-rSges(5,3) + t456) * t440;
t182 = -t612 - t317 + t391 + (-rSges(6,3) + t447) * t440;
t477 = t557 - t593 + t639;
t207 = t440 * t583 + t626 + t739;
t208 = t440 * t747 + t442 * t583 + t419;
t476 = t340 * t354 + t449 * t522 + t510;
t475 = t442 * t266 + t440 * t523;
t181 = -t440 * t574 - t442 * t447 + t795;
t193 = t440 * t575 - t442 * t456 + t794;
t473 = -t232 * t623 - t494 * t624;
t472 = (-pkin(2) + t574) * t440 + (pkin(7) + t447) * t442 - t795;
t467 = t440 * t549 + t512;
t466 = t340 * t576 - t423 + t510 + (rSges(6,1) * t680 - t440 * t633 + t512) * t449;
t83 = t466 + t617;
t84 = t449 * t556 + t496 - t614;
t463 = (-t84 * t795 - t83 * t861) * t449;
t99 = t476 + t617;
t462 = (-t100 * t794 - t99 * (-t516 - t384)) * t449;
t461 = (t832 * t440 + t833 * t442) * t760 + (t834 * t440 + t835 * t442) * t759 + (t820 * t440 + t857 * t442) * t756 + ((t832 * t449 + t846) * t442 + (-t833 * t449 + t845) * t440) * t755 + (-t857 * t440 + t820 * t442) * t754 + ((t834 * t449 + t844) * t442 + (-t835 * t449 + t843) * t440) * t753 + (t832 * t215 + t833 * t216 + t845 * t339 + t846 * t340 + t827 * t446 + t838 * t449) * t752 + (t834 * t215 + t835 * t216 + t843 * t339 + t844 * t340 + t828 * t446 + t837 * t449) * t751 + (t829 * t440 + t830 * t442) * t750 + (t821 * t439 + t865 * t441) * t749 + ((t829 * t449 + t840) * t442 + (-t830 * t449 + t839) * t440) * t748 + t842 * t585 + t841 * t584;
t460 = ((-t151 * t747 - t152 * t735) * t440 + (-t151 * t583 + t152 * t747) * t442) * t449;
t187 = t440 * t526 + t685;
t180 = t187 * t449;
t64 = qJD(3) * t535 + t180;
t65 = qJD(3) * t534 + t707;
t89 = -qJD(3) * t531 + t173 * t454 + t175 * t452;
t90 = -qJD(3) * t530 + t172 * t454 + t174 * t452;
t94 = t480 * t440 - t442 * t774;
t95 = t440 * t774 + t480 * t442;
t459 = (t180 + ((t124 + t657 + t803) * t442 + (-t123 + (t562 - t700) * t442 + t122 + t656) * t440) * qJD(3)) * t581 + (t188 + t169) * t758 + (t187 + t168) * t757 + ((t822 + t832) * t340 + (-t810 - t833 - t873 + t875) * t339 + t855) * t756 + (-t707 + ((t122 + (-t261 + t700) * t442 - t656) * t442 + (t440 * t562 - t121 + t657) * t440) * qJD(3) + t65) * t579 + (t95 + t89) * t578 + (t90 + t94 + t64) * t580 + (-qJD(3) * t526 + t361 * t454 + t362 * t452 - t439 * t884 + t441 * t883) * t449 + (t827 + t829) * t760 + (t828 + t830) * t759 + (((-t866 * t440 + t867 * t442) * t439 + t810 + t834) * t340 + (t822 - t835) * t339 + t841 - t853) * t754 + (t837 + t840) * t753 + (t870 * t439 + t874 * t441 + Icges(3,3) + t527) * t446 + (t838 + t839 + t842) * t755;
t320 = t442 * t375;
t258 = pkin(3) * t673 + t320;
t257 = -t420 - t686;
t224 = t442 * t252;
t211 = t442 * t232;
t162 = t475 * qJD(3);
t93 = t340 * t252 + t339 * t522 + t473;
t57 = t339 * t467 - t340 * t663 + t473;
t39 = t440 * t777 + t484 * t442;
t38 = t440 * t778 + t483 * t442;
t37 = t484 * t440 - t442 * t777;
t36 = t483 * t440 - t442 * t778;
t21 = t216 * t252 + t340 * t154 - t215 * t794 - t339 * t156 + t311 * t582 + (t215 * t429 + t509) * t440 + t665;
t9 = -t215 * t795 + t667 * t340 - t666 * t339 - t663 * t216 + (t215 * t625 + t311 * t737) * t442 + (t215 * t549 + t509) * t440 + t665;
t1 = [Icges(2,3) * qJDD(1) + t459 + (t847 * (-t358 - t745) + t848 * (-t543 - t746) + (t269 - t299 + t614) * t268) * m(3) + ((qJDD(1) * t544 + g(3)) * t544 + (qJDD(1) * t413 + g(2)) * t413) * m(2) + (t84 * (t479 + t617) + t463 + (-t550 + t783 - t84 + t614 + t811) * t83 + t804 * (t182 - t745) + t805 * (t181 - t746)) * m(6) + (t100 * (t477 + t617) + t462 + (-t100 + t497 + t614 + t817) * t99 + t851 * (t194 - t745) + t852 * (t193 - t746)) * m(5) + (t152 * (t554 + t617) + t460 + t849 * (t208 - t745) + t850 * (t207 - t746) + (-t152 + t551 + t614 + t814) * t151) * m(4); t459 + (t463 + (t479 - t466) * t84 + (t496 + t811) * t83 + t804 * t182 + t805 * t181) * m(6) + (t462 + (t398 + t696 + t817) * t99 + t851 * t194 + t852 * t193 + (t477 - t476) * t100) * m(5) + (t460 + t849 * t208 + t850 * t207 + (t554 - t519) * t152 + (t321 + t814) * t151) * m(4) + (-t268 * t299 + t269 * t298 + (-t268 * t449 - t847) * t358 - (t269 * t449 + t848) * t543) * m(3); t65 * t584 + t64 * t585 + ((t169 * t449 + t89) * t442 + (-t168 * t449 + t90) * t440) * t748 + ((t122 * t449 + t38) * t442 + (-t121 * t449 + t39) * t440) * t578 + ((-t624 * t685 + t684) * t440 + (-t836 + (t769 * t442 + (t302 - t770) * t440) * qJD(3)) * t442) * t581 + ((t124 * t449 + t36) * t442 + (-t123 * t449 + t37) * t440) * t580 + (t168 * t442 + t169 * t440) * t750 + t534 * t758 + t535 * t757 + t461 + ((t302 * t623 + t684) * t442 + (t836 + (t770 * t440 + (-t685 - t769) * t442) * qJD(3)) * t440) * t579 + ((-t452 * t628 + t454 * t627) * t449 + ((t440 * t642 + t442 * t643) * t454 + (-t440 * t644 - t442 * t645) * t452) * qJD(3)) * t749 + (t121 * t312 + t122 * t311 + t187 * t446 + t449 * t95 + (t38 * t442 + t39 * t440) * qJD(3)) * t751 + (t123 * t312 + t124 * t311 + t188 * t446 + t449 * t94 + (t36 * t442 + t37 * t440) * qJD(3)) * t752 + (-g(1) * (t445 + t548) - g(2) * (t282 - t686) - g(3) * (t320 - t284) + t9 * (t440 * t472 - t211 - t658) + t19 * (t420 + t629) + (-t353 + t375) * t731 + (t257 * t449 - (t552 - t615) * t442 - t818 + t819) * t83 + (-t258 * t340 - (-t257 - t282) * t339 + (-t179 - t666) * t440 + (t440 * t598 + t442 * t472) * t449 + t825 + t826) * t57 + (-(-t258 + t284) * t449 + t816) * t84) * m(6) + (-g(1) * (t357 + t445) - g(2) * (t420 + t283) + t21 * (-t211 + t224 + (t440 * t553 + t518) * t440) + t35 * (t420 + t688) + (-(-t297 - t615) * t442 + t815 - t818) * t99 + ((-t179 - t156) * t440 + (t518 * t442 + (t442 * t553 + t655) * t440) * t449 + t826 + t831) * t93 + (t34 * t442 - t740) * (-t354 - t743) + t806) * m(5) + (-(-t151 * t308 + t152 * t683) * t449 - (t162 * (-t308 * t440 - t442 * t683) + t785 * t412) * qJD(3) + (t312 * t266 + t311 * t523 + (t442 * t176 - t440 * t177) * qJD(3)) * t475 + t162 * ((-t177 - t250) * t440 + (t176 + t249) * t442) + t86 * t308 - t85 * t683 + (-t151 * t679 + t152 * t674) * t410 + t785 * t367 - g(1) * t412 - g(2) * t308 + g(3) * t683) * m(4); t461 + (-g(1) * t548 - g(2) * (t393 + t282) - (-t730 + (-rSges(6,1) - pkin(4)) * t439) * t740 + t9 * (t440 * t467 - t658) + t19 * t629 - t576 * t731 + (-t284 * t449 - t338 + t816) * t84 + (-t442 * t552 + t337 + t819) * t83 + (t282 * t339 - (-t339 * t440 - t340 * t442) * t742 - t666 * t440 + (t512 * t442 + (t442 * t549 + t663) * t440) * t449 + t825) * t57) * m(6) + (t21 * (t440 * t522 + t224) + t35 * t688 - g(1) * t357 - g(2) * t283 + (-t440 * t156 + (-t440 * t252 + t442 * t522) * t449 + t831) * t93 + (t297 * t442 + t815) * t99 + t806 - t852 * t687) * m(5); ((t57 * t339 + t804) * t442 + (-t57 * t340 + t805) * t440) * m(6);];
tau = t1;
