% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x22]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 12:12
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 12:11:48
% EndTime: 2020-01-03 12:11:54
% DurationCPUTime: 2.74s
% Computational Cost: add. (4262->268), mult. (8003->343), div. (0->0), fcn. (7976->6), ass. (0->223)
t202 = cos(qJ(4));
t203 = cos(qJ(3));
t281 = t202 * t203;
t199 = sin(qJ(4));
t200 = sin(qJ(3));
t284 = t199 * t200;
t168 = -t281 + t284;
t291 = t168 * qJ(5);
t327 = pkin(7) + pkin(8);
t183 = t327 * t203;
t173 = t202 * t183;
t182 = t327 * t200;
t285 = t199 * t182;
t334 = -t173 + t285;
t100 = t334 + t291;
t325 = -t100 / 0.2e1;
t263 = qJD(3) + qJD(4);
t107 = t202 * t182 + t199 * t183;
t282 = t202 * t200;
t283 = t199 * t203;
t170 = t282 + t283;
t160 = t170 * qJ(5);
t336 = -t107 - t160;
t344 = -t336 / 0.2e1;
t343 = t336 / 0.2e1;
t201 = sin(qJ(2));
t312 = t201 * pkin(1);
t190 = pkin(7) + t312;
t309 = pkin(8) + t190;
t162 = t309 * t203;
t152 = t202 * t162;
t161 = t309 * t200;
t286 = t199 * t161;
t335 = -t152 + t286;
t86 = t335 + t291;
t264 = qJD(1) + qJD(2);
t249 = -t199 * t168 / 0.2e1;
t319 = -t200 / 0.2e1;
t311 = t202 * pkin(3);
t191 = pkin(4) + t311;
t322 = -t191 / 0.2e1;
t329 = -pkin(4) / 0.2e1;
t62 = (t322 + t329) * t170 + (t249 + t319) * pkin(3);
t342 = t264 * t62;
t321 = t191 / 0.2e1;
t234 = -t311 / 0.2e1 + t321;
t84 = (t329 + t234) * t168;
t341 = t264 * t84;
t81 = t202 * t161 + t199 * t162;
t340 = -t160 - t81;
t167 = t168 ^ 2;
t330 = t170 ^ 2;
t105 = t167 - t330;
t339 = t264 * t105;
t120 = t167 + t330;
t338 = t264 * t120;
t187 = -t200 ^ 2 + t203 ^ 2;
t337 = t264 * t187;
t204 = cos(qJ(2));
t310 = t204 * pkin(1);
t192 = -pkin(2) - t310;
t257 = -t310 / 0.2e1;
t333 = t257 + t192 / 0.2e1;
t332 = t263 * t107;
t331 = t263 * t81;
t328 = -t340 / 0.2e1;
t326 = t86 * pkin(4);
t248 = -t152 / 0.2e1;
t247 = -t173 / 0.2e1;
t318 = t202 / 0.2e1;
t317 = pkin(3) * t199;
t316 = pkin(4) * t168;
t315 = pkin(4) * t170;
t314 = t100 * pkin(4);
t313 = t200 * pkin(3);
t307 = pkin(1) * qJD(1);
t306 = pkin(1) * qJD(2);
t305 = pkin(2) * qJD(2);
t304 = pkin(3) * qJD(4);
t303 = pkin(4) * qJD(4);
t302 = qJD(3) * pkin(3);
t301 = t340 * t170;
t300 = t86 * t168;
t83 = t316 / 0.2e1 + t234 * t168;
t299 = t83 * qJD(4) + (t191 * t168 - t170 * t317) * qJD(3);
t267 = t168 * qJD(4);
t298 = pkin(4) * t267 + t83 * qJD(3);
t297 = t336 * t170;
t296 = t100 * t168;
t193 = -t203 * pkin(3) - pkin(2);
t136 = t193 + t316;
t126 = t136 - t310;
t141 = t313 + t315;
t295 = t126 * t141;
t294 = t295 * qJD(1);
t293 = t141 * t136;
t16 = t126 * t315;
t292 = t16 * qJD(1);
t180 = t193 - t310;
t290 = t180 * t168;
t289 = t180 * t170;
t288 = t193 * t168;
t287 = t193 * t170;
t137 = t170 * t310;
t138 = t168 * t310;
t23 = t126 * t312 - t137 * t340 + t138 * t86;
t280 = t23 * qJD(1);
t24 = t300 - t301;
t279 = t24 * qJD(1);
t42 = t137 * t170 + t138 * t168;
t278 = t42 * qJD(1);
t153 = t168 * t313;
t98 = t153 + t289;
t275 = t98 * qJD(1);
t154 = t170 * t313;
t99 = t154 - t290;
t274 = t99 * qJD(1);
t272 = qJD(1) * t180;
t271 = qJD(1) * t192;
t270 = qJD(2) * t193;
t266 = t170 * qJD(4);
t265 = t200 * qJD(3);
t198 = t203 * qJD(3);
t118 = t120 * qJD(5);
t246 = t343 + t344;
t5 = t246 * t168;
t255 = t343 + t340 / 0.2e1;
t6 = (t344 + t328 + t255) * t168;
t262 = t6 * qJD(3) - t5 * qJD(4) + t118;
t261 = t201 * t306;
t260 = t199 * t304;
t259 = t201 * t307;
t258 = t312 / 0.2e1;
t253 = t168 * t272;
t252 = t170 * t272;
t251 = t200 * t271;
t250 = t203 * t271;
t245 = t136 / 0.2e1 + t126 / 0.2e1;
t244 = t193 / 0.2e1 + t180 / 0.2e1;
t243 = pkin(1) * t264;
t242 = pkin(3) * t263;
t239 = t264 * t170;
t117 = t263 * t170;
t238 = t168 * t259;
t237 = t170 * t259;
t236 = t200 * t259;
t235 = pkin(4) * t266 - t62 * qJD(3);
t233 = t201 * t243;
t230 = t245 * t170;
t207 = -t100 * t328 + t325 * t340;
t212 = -t137 * t321 - t138 * t317 / 0.2e1;
t1 = -t141 * t245 + t207 + t212;
t229 = -t1 * qJD(1) + qJD(2) * t293;
t228 = t5 * qJD(2);
t227 = t6 * qJD(2);
t226 = t5 * qJD(1);
t225 = t6 * qJD(1);
t22 = t136 * t315;
t208 = t246 * t86;
t8 = -t208 + (t137 / 0.2e1 + t230) * pkin(4);
t224 = -t8 * qJD(1) - t22 * qJD(2);
t14 = t168 * (t325 - t86 / 0.2e1) + t170 * t255 + t258;
t25 = t296 - t297;
t223 = -t14 * qJD(1) + t25 * qJD(2);
t112 = t153 + t287;
t210 = (-t283 / 0.2e1 - t282 / 0.2e1) * t310;
t43 = -t170 * t244 + t210;
t37 = -t153 + t43;
t220 = -t37 * qJD(1) + t112 * qJD(2);
t113 = t154 - t288;
t209 = (-t281 / 0.2e1 + t284 / 0.2e1) * t310;
t44 = t168 * t244 + t209;
t38 = -t154 + t44;
t219 = t38 * qJD(1) - t113 * qJD(2);
t111 = t248 + t152 / 0.2e1;
t122 = t247 + t173 / 0.2e1;
t218 = t111 * qJD(1) + t122 * qJD(2);
t217 = t257 + pkin(2) / 0.2e1 - t192 / 0.2e1;
t127 = t217 * t200;
t216 = t127 * qJD(1) + t200 * t305;
t128 = t217 * t203;
t215 = t128 * qJD(1) + t203 * t305;
t214 = t44 * qJD(1) + t168 * t270;
t213 = -t43 * qJD(1) + t170 * t270;
t206 = (pkin(3) * t318 + t322) * t86;
t10 = -t326 / 0.2e1 - t206;
t150 = (-t191 + t311) * t317;
t205 = (-t100 * t318 + t246 * t199) * pkin(3) - t100 * t322;
t18 = -t314 / 0.2e1 + t205;
t211 = -t10 * qJD(1) - t18 * qJD(2) - t150 * qJD(3);
t45 = -t288 / 0.2e1 - t290 / 0.2e1 + t209;
t46 = t287 / 0.2e1 + t289 / 0.2e1 + t210;
t188 = t200 * t198;
t186 = t200 * t261;
t181 = t187 * qJD(3);
t159 = t264 * t203 * t200;
t158 = qJD(5) * t315;
t149 = t170 * t261;
t148 = t168 * t261;
t130 = (-pkin(2) / 0.2e1 + t333) * t203;
t129 = pkin(2) * t319 + t200 * t333;
t116 = t263 * t168;
t115 = pkin(4) * t239;
t108 = 0.2e1 * t247 + t285;
t82 = 0.2e1 * t248 + t286;
t72 = t84 * qJD(3);
t71 = t84 * qJD(4);
t68 = t168 * t239;
t67 = t168 * t117;
t61 = pkin(3) * t249 + t170 * t322 + t313 / 0.2e1 + t315 / 0.2e1;
t57 = t62 * qJD(5);
t56 = t61 * qJD(3);
t55 = t61 * qJD(5);
t41 = t42 * qJD(2);
t40 = t154 + t45;
t39 = t153 + t46;
t34 = t263 * t105;
t17 = t314 / 0.2e1 + t205;
t15 = t296 / 0.2e1 + t300 / 0.2e1 - t297 / 0.2e1 - t301 / 0.2e1 + t258;
t9 = t326 / 0.2e1 - t206;
t7 = (-t137 / 0.2e1 + t230) * pkin(4) - t208;
t2 = t293 / 0.2e1 + t295 / 0.2e1 - t207 + t212;
t3 = [0, 0, 0, 0, -t261, -t204 * t306, t188, t181, 0, 0, 0, t192 * t265 - t203 * t261, t192 * t198 + t186, -t67, t34, 0, 0, 0, t98 * qJD(3) + t180 * t266 + t148, t99 * qJD(3) - t180 * t267 + t149, t118 + t41, t23 * qJD(2) + qJD(3) * t295 + t16 * qJD(4) + t24 * qJD(5); 0, 0, 0, 0, -t233, -t204 * t243, t188, t181, 0, 0, 0, t129 * qJD(3) - t203 * t233, t130 * qJD(3) + t186 + t236, -t67, t34, 0, 0, 0, t39 * qJD(3) + t46 * qJD(4) + t148 + t238, t40 * qJD(3) + t45 * qJD(4) + t149 + t237, t262 + t41 + t278, t280 + (t100 * t138 + t136 * t312 - t137 * t336) * qJD(2) + t2 * qJD(3) + t7 * qJD(4) + t15 * qJD(5); 0, 0, 0, 0, 0, 0, t159, t337, t198, -t265, 0, t129 * qJD(2) - t190 * t198 + t251, t130 * qJD(2) + t190 * t265 + t250, -t68, t339, -t116, -t117, 0, t39 * qJD(2) + qJD(3) * t335 + t82 * qJD(4) + t275, t40 * qJD(2) + t274 + t331, t227 + t299, t294 + t2 * qJD(2) + (t86 * t191 + t317 * t340) * qJD(3) + t9 * qJD(4) + t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, t339, -t116, -t117, 0, t46 * qJD(2) + t82 * qJD(3) + qJD(4) * t335 + t252, t45 * qJD(2) - t253 + t331, -t228 + t298, t7 * qJD(2) + t9 * qJD(3) + t303 * t86 + t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, t15 * qJD(2) + t279 + t56; 0, 0, 0, 0, t259, t204 * t307, t188, t181, 0, 0, 0, -t127 * qJD(3) + t203 * t259, -t128 * qJD(3) - t236, -t67, t34, 0, 0, 0, -t37 * qJD(3) - t43 * qJD(4) - t238, -t38 * qJD(3) - t44 * qJD(4) - t237, t262 - t278, -t1 * qJD(3) + t8 * qJD(4) - t14 * qJD(5) - t280; 0, 0, 0, 0, 0, 0, t188, t181, 0, 0, 0, -pkin(2) * t265, -pkin(2) * t198, -t67, t34, 0, 0, 0, t112 * qJD(3) + t193 * t266, t113 * qJD(3) - t193 * t267, t118, qJD(3) * t293 + t22 * qJD(4) + t25 * qJD(5); 0, 0, 0, 0, 0, 0, t159, t337, t198, -t265, 0, -pkin(7) * t198 - t216, pkin(7) * t265 - t215, -t68, t339, -t116, -t117, 0, qJD(3) * t334 + t108 * qJD(4) + t220, -t219 + t332, t225 + t299, (t100 * t191 + t317 * t336) * qJD(3) + t17 * qJD(4) + t55 + t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, t339, -t116, -t117, 0, t108 * qJD(3) + qJD(4) * t334 + t213, -t214 + t332, -t226 + t298, t17 * qJD(3) + t100 * t303 - t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, t223 + t56; 0, 0, 0, 0, 0, 0, -t159, -t337, 0, 0, 0, t127 * qJD(2) - t251, t128 * qJD(2) - t250, t68, -t339, 0, 0, 0, t37 * qJD(2) + t111 * qJD(4) - t275, t38 * qJD(2) - t274, -t227 + t71, t1 * qJD(2) + t10 * qJD(4) - t294 + t57; 0, 0, 0, 0, 0, 0, -t159, -t337, 0, 0, 0, t216, t215, t68, -t339, 0, 0, 0, t122 * qJD(4) - t220, t219, -t225 + t71, t18 * qJD(4) - t229 + t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260, -t202 * t304, 0, t150 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199 * t242 + t218, -t202 * t242, t341, -pkin(4) * t260 - t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, -t339, 0, 0, 0, t43 * qJD(2) - t111 * qJD(3) - t252, t44 * qJD(2) + t253, t228 - t72, -t8 * qJD(2) - t10 * qJD(3) - t158 - t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, -t339, 0, 0, 0, -t122 * qJD(3) - t213, t214, t226 - t72, -t18 * qJD(3) - t158 + t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199 * t302 - t218, t202 * t302, -t341, t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338, t14 * qJD(2) + t235 - t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338, -t223 + t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
