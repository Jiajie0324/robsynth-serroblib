% Calculate vector of centrifugal and Coriolis load on the joints for
% S5RRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:48
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5RRRRP2_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:47:33
% EndTime: 2019-12-05 18:48:07
% DurationCPUTime: 26.04s
% Computational Cost: add. (23405->693), mult. (18744->831), div. (0->0), fcn. (14684->8), ass. (0->408)
t854 = Icges(5,4) + Icges(6,4);
t835 = Icges(5,2) + Icges(6,2);
t855 = Icges(5,1) + Icges(6,1);
t412 = qJ(3) + qJ(4);
t402 = sin(t412);
t856 = t854 * t402;
t853 = Icges(5,5) + Icges(6,5);
t852 = Icges(5,6) + Icges(6,6);
t404 = cos(t412);
t848 = t835 * t404 + t856;
t851 = t855 * t404 - t856;
t413 = qJ(1) + qJ(2);
t405 = cos(t413);
t646 = t402 * t405;
t850 = t854 * t646;
t392 = Icges(6,4) * t404;
t393 = Icges(5,4) * t404;
t815 = t855 * t402 + t392 + t393;
t849 = Icges(5,3) + Icges(6,3);
t403 = sin(t413);
t640 = t404 * t405;
t811 = t852 * t403 + t854 * t640 - t835 * t646;
t832 = t853 * t403 + t855 * t640 - t850;
t647 = t402 * t403;
t847 = t854 * t647;
t410 = qJD(3) + qJD(4);
t846 = t848 * t410;
t498 = -Icges(5,2) * t402 + t393;
t467 = t498 * t403;
t497 = -Icges(6,2) * t402 + t392;
t812 = -t403 * t497 + t852 * t405 - t467;
t644 = t403 * t404;
t838 = t853 * t405 - t855 * t644 + t847;
t845 = t853 * t402 + t852 * t404;
t411 = qJD(1) + qJD(2);
t843 = t851 * t411;
t842 = t815 * t410 - t853 * t411;
t841 = -t852 * t411 + t846;
t840 = t498 + t497 + t815;
t318 = Icges(5,5) * t404 - Icges(5,6) * t402;
t316 = Icges(6,5) * t404 - Icges(6,6) * t402;
t463 = t316 * t403;
t839 = -t318 * t403 + t849 * t405 - t463;
t834 = t849 * t403 + t853 * t640 - t852 * t646;
t837 = t848 * t402 - t815 * t404;
t836 = t811 * t402 - t832 * t404;
t831 = t845 * t403;
t830 = -t410 * t851 + t846;
t829 = t840 * t410;
t828 = -t842 * t403 + t843 * t405 + t410 * t812;
t827 = t403 * t843 + t405 * t842 + t410 * t811;
t466 = t497 * t411;
t638 = t405 * t411;
t826 = t403 * t841 - t405 * t466 + t410 * t838 - t498 * t638;
t825 = -t403 * t466 - t405 * t841 + t410 * t832 - t411 * t467;
t824 = t845 * t405;
t823 = t838 * t404;
t822 = t845 * t410 - t849 * t411;
t821 = t837 * t403 + t824;
t820 = t837 * t405 - t831;
t819 = t811 * t647;
t818 = t812 * t646;
t817 = t839 * t403 + t838 * t640;
t816 = t839 * t405 + t812 * t647;
t814 = t836 * t405;
t813 = t834 * t405 - t832 * t644;
t788 = -t644 * t838 + t816;
t787 = t813 + t819;
t786 = t817 - t818;
t785 = t834 * t403 - t814;
t416 = cos(qJ(3));
t408 = t416 * pkin(3);
t398 = t408 + pkin(2);
t703 = pkin(4) * t404;
t346 = t398 + t703;
t606 = rSges(6,2) * t646 - t405 * t346;
t313 = t403 * t410;
t314 = t405 * t410;
t810 = t840 * t411 + (t835 * t644 + t838 + t847) * t314 + (-t835 * t640 + t832 - t850) * t313;
t809 = t837 * t411 + (t316 + t318) * t410;
t655 = t318 * t411;
t808 = -t316 * t638 - t405 * t655 + (t812 * t402 - t823) * t411 + t822 * t403;
t807 = -t403 * t655 + (-t463 + t836) * t411 - t822 * t405;
t806 = t825 * t402 + t827 * t404 - t834 * t411;
t805 = t826 * t402 + t828 * t404 - t839 * t411;
t804 = t829 * t402 + t830 * t404 - t411 * t845;
t778 = (t851 - t848) * t411 + (t815 * t403 - t812) * t314 + (-t815 * t405 - t811) * t313;
t803 = -t810 * t402 + t778 * t404;
t801 = t821 * t411;
t358 = t405 * t398;
t477 = -rSges(6,1) * t640 - rSges(6,3) * t403;
t418 = -pkin(8) - pkin(7);
t409 = -qJ(5) + t418;
t590 = t409 - t418;
t629 = t403 * t590 + t358 + t477 + t606;
t390 = qJD(5) * t403;
t564 = t404 * t314;
t635 = t409 * t411;
t643 = t403 * t411;
t776 = -t402 * t314 - t404 * t643;
t475 = -t776 * rSges(6,1) + rSges(6,2) * t564 + t346 * t643 + t405 * t635 - t390;
t800 = t820 * t411;
t799 = t808 * t403 - t805 * t405;
t798 = t807 * t403 - t806 * t405;
t797 = t805 * t403 + t808 * t405;
t796 = t806 * t403 + t807 * t405;
t795 = t787 * t313 + t788 * t314 + t801;
t794 = t785 * t313 + t786 * t314 - t800;
t793 = -t828 * t402 + t826 * t404;
t792 = -t827 * t402 + t825 * t404;
t791 = t809 * t403 - t804 * t405;
t790 = t804 * t403 + t809 * t405;
t414 = sin(qJ(3));
t406 = Icges(4,4) * t416;
t499 = -Icges(4,2) * t414 + t406;
t756 = Icges(4,1) * t414 + t406;
t592 = t756 + t499;
t688 = Icges(4,4) * t414;
t373 = Icges(4,2) * t416 + t688;
t376 = Icges(4,1) * t416 - t688;
t593 = t373 - t376;
t789 = (t414 * t592 + t416 * t593) * t411;
t587 = qJD(3) * t414;
t580 = pkin(3) * t587;
t704 = pkin(4) * t402;
t296 = -t410 * t704 - t580;
t596 = rSges(6,2) * t647 + t405 * rSges(6,3);
t634 = t411 * t418;
t605 = t398 * t643 + t405 * t634;
t632 = (t296 + t580) * t405 + t605 + t411 * t596 - t475;
t784 = -t402 * t838 - t812 * t404;
t783 = t832 * t402 + t811 * t404;
t506 = rSges(3,1) * t403 + rSges(3,2) * t405;
t278 = t506 * t411;
t415 = sin(qJ(1));
t693 = pkin(1) * qJD(1);
t581 = t415 * t693;
t247 = t278 + t581;
t694 = rSges(6,2) * t402;
t696 = rSges(6,1) * t404;
t331 = -t694 + t696;
t780 = t331 + t703;
t779 = (-t823 - t834) * t403 + t814 + t816;
t777 = -t824 * t313 + t831 * t314 + t316 * t411 + t655;
t639 = t404 * t410;
t566 = t403 * t639;
t568 = t402 * t638;
t775 = t566 + t568;
t474 = t405 * t590 - t596;
t774 = -t813 - t817;
t770 = 0.2e1 * qJD(3);
t699 = pkin(7) + t418;
t768 = t405 * t699;
t636 = t405 * t416;
t637 = t405 * t414;
t242 = Icges(4,4) * t636 - Icges(4,2) * t637 + Icges(4,6) * t403;
t386 = Icges(4,4) * t637;
t244 = Icges(4,1) * t636 + Icges(4,5) * t403 - t386;
t493 = t242 * t414 - t244 * t416;
t765 = t493 * t405;
t558 = t776 * rSges(5,1) - rSges(5,2) * t564;
t759 = rSges(5,2) * t647 + t405 * rSges(5,3);
t150 = t411 * t759 + t558;
t330 = rSges(5,1) * t402 + rSges(5,2) * t404;
t262 = t330 * t403;
t652 = t330 * t405;
t762 = t405 * t150 + t262 * t313 + t314 * t652;
t378 = pkin(2) * t643;
t174 = t378 + (-pkin(7) * t411 - t580) * t405 - t605;
t401 = t405 ^ 2;
t761 = t405 * t174 - (-t403 ^ 2 - t401) * t580;
t706 = pkin(2) * t405;
t210 = t403 * t699 - t358 + t706;
t702 = pkin(7) * t403;
t334 = t702 + t706;
t294 = t411 * t334;
t760 = t411 * t210 - t294;
t642 = t403 * t414;
t591 = rSges(4,2) * t642 + t405 * rSges(4,3);
t363 = pkin(4) * t647;
t311 = t411 * t363;
t329 = rSges(6,1) * t402 + rSges(6,2) * t404;
t645 = t403 * t329;
t755 = -t780 * t314 - t329 * t643 + t411 * t645 - t311;
t586 = qJD(3) * t416;
t549 = t405 * t586;
t752 = pkin(3) * t549;
t276 = t331 * t410;
t312 = pkin(4) * t568;
t751 = pkin(4) * t566 + t403 * t276 - t780 * t313 + t329 * t638 + t312;
t697 = rSges(5,1) * t404;
t332 = -rSges(5,2) * t402 + t697;
t750 = t411 * t262 - t314 * t332 - t330 * t643;
t391 = qJD(5) * t405;
t570 = t402 * t313;
t504 = rSges(6,1) * t570 + t775 * rSges(6,2) + t403 * t635 + t391;
t263 = t329 * t405;
t749 = t314 * t263 + t632 * t405;
t388 = rSges(4,2) * t637;
t582 = rSges(4,1) * t636;
t479 = -rSges(4,3) * t403 - t582;
t245 = -t388 - t479;
t229 = t411 * t245;
t552 = t403 * t587;
t555 = rSges(4,1) * t552 + (t403 * t586 + t411 * t637) * rSges(4,2);
t746 = -t229 - t294 - t555;
t540 = t329 + t704;
t745 = t313 * t540 + t391;
t468 = t499 * t403;
t241 = Icges(4,6) * t405 - t468;
t385 = Icges(4,4) * t642;
t641 = t403 * t416;
t243 = -Icges(4,1) * t641 + Icges(4,5) * t405 + t385;
t164 = t241 * t416 + t243 * t414;
t737 = -Icges(4,6) * t411 + qJD(3) * t373;
t169 = t403 * t737 - t499 * t638;
t471 = t411 * t376;
t735 = -Icges(4,5) * t411 + qJD(3) * t756;
t171 = t403 * t735 - t405 * t471;
t372 = Icges(4,5) * t416 - Icges(4,6) * t414;
t239 = Icges(4,3) * t405 - t372 * t403;
t740 = qJD(3) * t164 + t169 * t414 - t171 * t416 - t239 * t411;
t165 = t242 * t416 + t244 * t414;
t168 = -t405 * t737 - t411 * t468;
t170 = -t403 * t471 - t405 * t735;
t240 = Icges(4,5) * t636 - Icges(4,6) * t637 + Icges(4,3) * t403;
t739 = qJD(3) * t165 + t168 * t414 - t170 * t416 - t240 * t411;
t371 = Icges(4,5) * t414 + Icges(4,6) * t416;
t738 = -Icges(4,3) * t411 + qJD(3) * t371;
t336 = t499 * qJD(3);
t337 = t376 * qJD(3);
t736 = qJD(3) * (t373 * t416 + t414 * t756) + t336 * t414 - t337 * t416 - t371 * t411;
t362 = rSges(5,2) * t646;
t577 = rSges(5,1) * t640;
t478 = rSges(5,3) * t403 + t577;
t231 = -t362 + t478;
t560 = rSges(5,1) * t570 + t775 * rSges(5,2);
t368 = pkin(3) * t552;
t597 = t403 * t634 + t368;
t734 = -t411 * t231 - t560 - t597 + t760;
t277 = t332 * t410;
t417 = cos(qJ(1));
t578 = t417 * t693;
t511 = -t368 + t578;
t660 = t313 * t330;
t459 = -t511 + t660;
t621 = t210 - t231;
t96 = (-t334 + t621) * t411 + t459;
t733 = (t277 * t403 - t313 * t332 + t330 * t638 - t411 * t652) * t96;
t732 = t629 * t411 - t504 + t760;
t608 = -Icges(4,2) * t636 + t244 - t386;
t610 = t405 * t756 + t242;
t730 = t414 * t608 + t416 * t610;
t609 = Icges(4,2) * t641 + t243 + t385;
t611 = -t403 * t756 + t241;
t729 = -t414 * t609 - t416 * t611;
t267 = t410 * t643;
t720 = -t267 / 0.2e1;
t268 = t314 * t411;
t719 = t268 / 0.2e1;
t718 = -t313 / 0.2e1;
t717 = t313 / 0.2e1;
t716 = -t314 / 0.2e1;
t715 = t314 / 0.2e1;
t714 = t403 / 0.2e1;
t713 = t405 / 0.2e1;
t712 = -t411 / 0.2e1;
t711 = t411 / 0.2e1;
t710 = -rSges(4,3) - pkin(7);
t709 = pkin(1) * t415;
t708 = pkin(1) * t417;
t707 = pkin(1) * qJD(1) ^ 2;
t705 = pkin(3) * t414;
t701 = t405 * pkin(7);
t700 = pkin(2) - t398;
t698 = rSges(4,1) * t416;
t695 = rSges(4,2) * t414;
t545 = t405 * t700;
t175 = (t545 + t702) * t411 + t597;
t585 = t417 * t707;
t515 = -t411 ^ 2 * t334 - t585;
t584 = qJD(3) ^ 2 * t408;
t440 = -t405 * t584 + t515 + (t175 + t368) * t411;
t598 = -t346 + t398;
t631 = t296 * t403 - t411 * t477 - t598 * t638 - t504 + t597;
t33 = t267 * t329 - t276 * t314 + (t267 * t402 - t314 * t639) * pkin(4) + (t391 - t631) * t411 + t440;
t692 = t33 * t405;
t379 = rSges(4,1) * t414 + rSges(4,2) * t416;
t589 = qJD(3) * t403;
t295 = t379 * t589;
t512 = t295 - t578;
t148 = (-t245 - t334) * t411 + t512;
t673 = t148 * t403;
t282 = t371 * t403;
t489 = t373 * t414 - t416 * t756;
t178 = -t405 * t489 + t282;
t670 = t178 * t411;
t663 = t241 * t414;
t662 = t243 * t416;
t505 = -t695 + t698;
t342 = t505 * qJD(3);
t651 = t342 * t405;
t650 = t371 * t405;
t649 = t372 * t411;
t288 = t379 * t403;
t648 = t379 * t405;
t281 = pkin(7) * t638 - t378;
t630 = -t174 - t281;
t624 = t629 * t405;
t623 = t405 * t239 + t241 * t642;
t622 = t403 * t239 + t243 * t636;
t594 = t363 + t645;
t588 = qJD(3) * t405;
t389 = pkin(3) * t642;
t583 = rSges(4,1) * t641;
t579 = pkin(3) * t586;
t571 = t379 * t643;
t562 = t210 + t629;
t399 = t415 * t707;
t550 = t405 * t587;
t521 = pkin(3) * t550;
t557 = t403 * t584 + t411 * t521 + t399;
t556 = -rSges(4,1) * t550 - rSges(4,2) * t549 - t411 * t583;
t553 = t379 * t588;
t548 = -t643 / 0.2e1;
t547 = t638 / 0.2e1;
t546 = -pkin(2) - t698;
t544 = -t589 / 0.2e1;
t542 = -t588 / 0.2e1;
t541 = t588 / 0.2e1;
t333 = rSges(3,1) * t405 - t403 * rSges(3,2);
t539 = -t398 - t697;
t538 = t346 + t696;
t526 = -t240 - t662;
t519 = t378 - t556;
t518 = -pkin(2) - t539;
t514 = -pkin(4) * t639 - t276;
t513 = t591 + t701;
t279 = -rSges(3,1) * t638 + rSges(3,2) * t643;
t510 = -t398 + t538;
t349 = -t704 - t705;
t509 = -t405 * t418 + t759;
t494 = -t662 + t663;
t486 = t583 - t591;
t485 = -t358 + t362 - t577;
t484 = rSges(5,1) * t644 - t759;
t112 = t405 * t240 + t242 * t642 - t244 * t641;
t228 = t411 * t486;
t293 = t411 * (-pkin(2) * t403 + t701);
t481 = t228 - t293 + t553;
t480 = -t759 + t768;
t248 = -t333 * t411 - t578;
t457 = t403 * t700 - t768;
t472 = -t411 * t457 - t293 + t521;
t462 = t388 - t582 - t706;
t111 = -t243 * t641 + t623;
t461 = (t111 * t405 + t112 * t403) * qJD(3);
t113 = -t241 * t637 + t622;
t114 = t240 * t403 - t765;
t460 = (t113 * t405 + t114 * t403) * qJD(3);
t458 = t368 + t745;
t447 = -t649 * t403 - t405 * t738 + t411 * t493;
t446 = t403 * t738 - t649 * t405 + t411 * t494;
t443 = t372 * qJD(3) + t411 * t489;
t442 = t521 - t558 + t605;
t441 = t314 * t330 + t411 * t484 + t472;
t158 = (t405 * t245 + t403 * t486) * qJD(3);
t439 = -t210 * t588 - t457 * t589;
t438 = (-pkin(2) + t538) * t403 + (pkin(7) + t409) * t405 - t596;
t433 = t403 * t510 + t474;
t430 = t314 * t540 - t390 + t472 + (rSges(6,1) * t644 - t403 * t598 + t474) * t411;
t426 = t174 * t588 + (t411 * t401 * t699 + (-t175 + (t210 - t545) * t411) * t403) * qJD(3);
t425 = (t787 * t403 + t788 * t405) * t720 + (t785 * t403 + t786 * t405) * t719 + (t777 * t403 + t803 * t405) * t718 + ((t785 * t411 + t799) * t405 + (-t786 * t411 + t798) * t403) * t717 + (-t803 * t403 + t777 * t405) * t716 + ((t787 * t411 + t797) * t405 + (-t788 * t411 + t796) * t403) * t715 + (-t786 * t267 + t785 * t268 + t798 * t313 + t799 * t314 + t791 * t411) * t714 + (-t788 * t267 + t787 * t268 + t796 * t313 + t797 * t314 + t790 * t411) * t713 + (t778 * t402 + t810 * t404) * t712 + ((t783 * t411 + t793) * t405 + (t784 * t411 + t792) * t403) * t711 + t795 * t548 + t794 * t547;
t64 = t268 * t330 + t277 * t313 + (-t150 + t630) * t411 + t557;
t152 = -t411 * t478 + t560;
t65 = t152 * t411 + t267 * t330 - t277 * t314 + t440;
t95 = t441 + t581;
t424 = (t64 * (-rSges(5,3) + t418) + t65 * t539) * t403 + (-t96 * t759 - t95 * (-t478 - t358)) * t411;
t147 = t481 + t581;
t172 = t411 * t591 + t556;
t97 = t342 * t589 + t399 + (-t172 - t281 + t553) * t411;
t173 = t411 * t479 + t555;
t98 = t173 * t411 + (t571 - t651) * qJD(3) + t515;
t423 = (t546 * t98 + t710 * t97) * t403 + ((-t147 * t710 - t148 * t695) * t403 + (-t147 * t546 + t148 * t710) * t405) * t411;
t177 = t403 * t489 + t650;
t176 = t177 * t411;
t58 = t176 + t461;
t59 = t460 + t670;
t87 = -qJD(3) * t494 + t169 * t416 + t171 * t414;
t88 = -qJD(3) * t493 + t168 * t416 + t170 * t414;
t92 = t443 * t403 - t405 * t736;
t93 = t403 * t736 + t443 * t405;
t422 = (t176 + ((t114 + t623 + t765) * t405 + (-t113 + (t526 - t663) * t405 + t112 + t622) * t403) * qJD(3)) * t544 + ((t779 + t785) * t314 + (-t774 - t786 - t818 + t819) * t313 + t801) * t718 + (t59 - t670 + ((t112 + (-t240 + t663) * t405 - t622) * t405 + (t403 * t526 - t111 + t623) * t403) * qJD(3)) * t542 + (t87 + t93) * t541 + (t88 + t92 + t58) * t589 / 0.2e1 + (-t784 + t821) * t720 + (t783 - t820) * t719 + (((-t811 * t403 + t812 * t405) * t402 + t774 + t787) * t314 + (t779 - t788) * t313 + t794 + t800) * t716 + (t790 + t793) * t715 + (t791 + t792 + t795) * t717 + ((t164 + t177) * t544 + (t165 + t178) * t541 - qJD(3) * t489 + t336 * t416 + t337 * t414 + t829 * t404 - t830 * t402) * t411;
t32 = t268 * t329 + t276 * t313 + (t268 * t402 + t313 * t639) * pkin(4) + (-t390 + t630 - t632) * t411 + t557;
t83 = t430 + t581;
t84 = -t578 + (-t334 + t562) * t411 + t458;
t421 = (t32 * (-rSges(6,3) + t409) - t84 * t411 * t694 - t33 * t538 - t83 * (-rSges(6,3) * t411 - t296)) * t403 + (-t32 * t696 - t84 * t296 - t33 * t409 + (-t84 * rSges(6,3) + t538 * t83) * t411) * t405;
t237 = (t349 + t705) * t405;
t236 = -t349 * t403 - t389;
t212 = t279 * t411 - t585;
t211 = t278 * t411 + t399;
t202 = t405 * t231;
t192 = t405 * t210;
t91 = t314 * t231 + t313 * t484 + t439;
t55 = t313 * t433 - t314 * t629 + t439;
t23 = t314 * t150 - t313 * t152 - t267 * t231 + t268 * t484 + t426;
t9 = t267 * t629 + t268 * t433 + t313 * t631 + t314 * t632 + t426;
t1 = [m(3) * (t211 * (-t333 - t708) + t212 * (-t506 - t709) + (t248 - t279 + t578) * t247) + t422 + (t32 * (t606 - t708) + t84 * (t475 + t581) + t33 * (t596 - t709) + t421 + (-t511 + t578 + t732 + t745 - t84) * t83) * m(6) + (t64 * (t485 - t708) + t96 * (t442 + t581) + t65 * (t509 - t709) + t424 + (t578 + t459 - t96 + t734) * t95) * m(5) + (t97 * (t462 - t708) + t148 * (t519 + t581) + t98 * (t513 - t709) + t423 + (t578 - t148 + t512 + t746) * t147) * m(4); t422 + (t32 * t606 + t33 * t596 + t421 + (-t430 + t475) * t84 + (t458 + t732) * t83) * m(6) + (t64 * t485 + t65 * t509 + t424 + (-t441 + t442) * t96 + (t368 + t660 + t734) * t95) * m(5) + (t97 * t462 + t98 * t513 + t423 + (-t481 + t519) * t148 + (t295 + t746) * t147) * m(4) + (-t211 * t333 - t212 * t506 - t247 * t279 + t248 * t278 - (t247 * t333 + t248 * t506) * t411) * m(3); ((t282 * t588 + t649) * t405 + (t789 + (t730 * t403 + (-t650 - t729) * t405) * qJD(3)) * t403) * t542 + ((-t589 * t650 + t649) * t403 + (-t789 + (t729 * t405 + (t282 - t730) * t403) * qJD(3)) * t405) * t544 + t425 + ((-t414 * t593 + t416 * t592) * t411 + ((t403 * t608 + t405 * t609) * t416 + (-t403 * t610 - t405 * t611) * t414) * qJD(3)) * t712 + ((t165 * t411 + t87) * t405 + (-t164 * t411 + t88) * t403) * t711 + (t411 * t92 + ((t114 * t411 + t446 * t403 - t405 * t740) * t405 + (-t113 * t411 + t447 * t403 - t405 * t739) * t403) * t770) * t714 + (t411 * t93 + ((t411 * t112 + t403 * t740 + t446 * t405) * t405 + (-t111 * t411 + t403 * t739 + t447 * t405) * t403) * t770) * t713 + (t461 + t58) * t548 + (t460 + t59) * t547 + (t9 * (t403 * t438 - t192 - t624) + t32 * (t389 + t594) + (-t329 + t349) * t692 + (-(-t237 + t263) * t411 + t751) * t84 + (t236 * t411 - (t514 - t579) * t405 - t752 + t755) * t83 + (-t237 * t314 - (-t236 - t645) * t313 + (-t175 + t631) * t403 + (t403 * t562 + t405 * t438) * t411 + t749 + t761) * t55) * m(6) + (t23 * (-t192 + t202 + (t403 * t518 + t480) * t403) + t64 * (t389 + t262) + t65 * (-t330 - t705) * t405 + t733 + (-(-t277 - t579) * t405 + t750 - t752) * t95 + ((-t175 - t152) * t403 + (t480 * t405 + (t405 * t518 + t621) * t403) * t411 + t761 + t762) * t91) * m(5) + (t148 * t379 * t638 - t147 * t571 + t147 * t651 + 0.2e1 * t158 * ((-t173 - t229) * t403 + (t172 + t228) * t405) + t97 * t288 + t342 * t673 - t98 * t648 - (-t147 * t288 + t148 * t648) * t411 - (t158 * (-t288 * t403 - t405 * t648) + (t147 * t405 + t673) * t505) * qJD(3)) * m(4); t425 + (t9 * (t403 * t433 - t624) + t32 * t594 - t540 * t692 + (-t263 * t411 - t312 + t751) * t84 + (-t405 * t514 + t311 + t755) * t83 + (t631 * t403 + (t474 * t405 + (t405 * t510 + t629) * t403) * t411 + t645 * t313 - (-t313 * t403 - t314 * t405) * t704 + t749) * t55) * m(6) + (t23 * (t403 * t484 + t202) + t64 * t262 - t65 * t652 + (-t403 * t152 + (-t403 * t231 + t405 * t484) * t411 + t762) * t91 + t733 + (t277 * t405 + t750) * t95) * m(5); 0.2e1 * (t32 * t713 + t33 * t714 - t55 * (-t313 * t405 + t314 * t403) / 0.2e1) * m(6);];
tauc = t1(:);
