% Calculate vector of centrifugal and Coriolis load on the joints for
% S5RRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 12:12
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5RRRRP2_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP2_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 12:11:05
% EndTime: 2020-01-03 12:11:40
% DurationCPUTime: 28.07s
% Computational Cost: add. (23405->696), mult. (18744->869), div. (0->0), fcn. (14684->8), ass. (0->402)
t827 = Icges(5,2) + Icges(6,2);
t826 = Icges(5,1) + Icges(6,1);
t825 = Icges(5,4) + Icges(6,4);
t823 = Icges(5,5) + Icges(6,5);
t822 = Icges(5,6) + Icges(6,6);
t407 = qJ(3) + qJ(4);
t397 = cos(t407);
t395 = sin(t407);
t667 = Icges(6,4) * t395;
t668 = Icges(5,4) * t395;
t803 = t827 * t397 + t667 + t668;
t385 = Icges(6,4) * t397;
t386 = Icges(5,4) * t397;
t783 = t826 * t395 + t385 + t386;
t408 = qJ(1) + qJ(2);
t396 = sin(t408);
t398 = cos(t408);
t620 = t397 * t398;
t627 = t395 * t398;
t808 = t822 * t396 + t825 * t620 - t627 * t827;
t804 = -t822 * t395 + t823 * t397;
t821 = t825 * t627;
t405 = qJD(3) + qJD(4);
t820 = t803 * t405;
t819 = Icges(5,3) + Icges(6,3);
t485 = -Icges(6,2) * t395 + t385;
t462 = t485 * t396;
t486 = -Icges(5,2) * t395 + t386;
t785 = t396 * t486 - t822 * t398 + t462;
t323 = Icges(5,1) * t397 - t668;
t321 = Icges(6,1) * t397 - t667;
t465 = t321 * t396;
t807 = t323 * t396 - t823 * t398 + t465;
t813 = t823 * t396 + t826 * t620 - t821;
t818 = t823 * t395 + t822 * t397;
t817 = -t321 - t323;
t406 = qJD(1) + qJD(2);
t816 = t783 * t405 - t823 * t406;
t815 = t822 * t406 - t820;
t814 = t486 + t485 + t783;
t812 = t804 * t396;
t811 = -t395 * t803 + t397 * t783;
t810 = t808 * t395;
t786 = -t819 * t398 + t812;
t809 = t819 * t396 + t823 * t620 - t822 * t627;
t805 = t818 * t398;
t802 = -t813 * t397 + t810;
t801 = t817 * t405 + t820;
t800 = t814 * t405;
t466 = t323 * t406;
t616 = t398 * t406;
t799 = -t321 * t616 + t816 * t396 - t398 * t466 + t785 * t405;
t798 = t396 * t466 + t816 * t398 + t808 * t405 + t406 * t465;
t463 = t486 * t406;
t797 = t815 * t396 + t398 * t463 + t807 * t405 + t485 * t616;
t796 = -t396 * t463 + t815 * t398 + t813 * t405 - t406 * t462;
t795 = t818 * t396;
t794 = t807 * t397;
t793 = t785 * t395;
t792 = t818 * t405 - t819 * t406;
t791 = t811 * t396 - t805;
t790 = t783 * t620 - t803 * t627 + t795;
t624 = t396 * t397;
t789 = t807 * t624;
t788 = t813 * t624;
t787 = t785 * t627;
t411 = cos(qJ(3));
t402 = t411 * pkin(3);
t390 = t402 + pkin(2);
t681 = pkin(4) * t397;
t339 = t390 + t681;
t584 = -rSges(6,2) * t627 + t398 * t339;
t628 = t395 * t396;
t751 = -t786 * t398 - t785 * t628 + t789;
t750 = t809 * t398 + t808 * t628 - t788;
t749 = -t786 * t396 - t807 * t620 + t787;
t748 = t809 * t396 - t802 * t398;
t348 = t398 * t390;
t413 = -pkin(8) - pkin(7);
t404 = -qJ(5) + t413;
t566 = t404 - t413;
t607 = -rSges(6,1) * t620 + t348 - t584 + (-rSges(6,3) + t566) * t396;
t310 = t396 * t405;
t617 = t398 * t405;
t782 = (t803 * t396 - t807) * t617 + t814 * t406 + (-t620 * t827 + t813 - t821) * t310;
t781 = -t804 * t405 + t811 * t406;
t780 = t804 * t616 + (t793 - t794) * t406 - t792 * t396;
t779 = (-t802 + t812) * t406 + t792 * t398;
t778 = -t786 + t802;
t777 = t796 * t395 + t798 * t397 - t809 * t406;
t776 = t797 * t395 + t799 * t397 - t786 * t406;
t775 = t800 * t395 + t801 * t397 - t818 * t406;
t742 = (t396 * t783 + t785) * t617 + (-t803 - t817) * t406 + (-t398 * t783 - t808) * t310;
t774 = -t782 * t395 + t397 * t742;
t754 = t397 * t617;
t773 = pkin(4) * t754;
t399 = Icges(4,4) * t411;
t409 = sin(qJ(3));
t487 = -Icges(4,2) * t409 + t399;
t669 = Icges(4,4) * t409;
t358 = Icges(4,2) * t411 + t669;
t710 = -Icges(4,6) * t406 + qJD(3) * t358;
t169 = -t396 * t710 + t487 * t616;
t361 = Icges(4,1) * t411 - t669;
t467 = t361 * t406;
t721 = Icges(4,1) * t409 + t399;
t707 = -Icges(4,5) * t406 + qJD(3) * t721;
t171 = -t396 * t707 + t398 * t467;
t614 = t398 * t411;
t615 = t398 * t409;
t246 = Icges(4,4) * t614 - Icges(4,2) * t615 + Icges(4,6) * t396;
t378 = Icges(4,4) * t615;
t248 = Icges(4,1) * t614 + Icges(4,5) * t396 - t378;
t480 = t246 * t411 + t248 * t409;
t247 = -Icges(4,5) * t398 + t361 * t396;
t638 = t247 * t411;
t464 = t487 * t396;
t245 = -Icges(4,6) * t398 + t464;
t640 = t245 * t409;
t481 = t638 - t640;
t772 = -qJD(3) * t481 - t169 * t411 - t171 * t409 + t406 * t480;
t770 = t791 * t406;
t324 = rSges(6,1) * t395 + rSges(6,2) * t397;
t682 = pkin(4) * t395;
t768 = t324 + t682;
t545 = rSges(6,1) * t624 + t396 * t339 + t398 * t404;
t722 = t396 * rSges(3,1) + t398 * rSges(3,2);
t285 = t722 * t406;
t410 = sin(qJ(1));
t674 = pkin(1) * qJD(1);
t556 = t410 * t674;
t252 = t556 + t285;
t563 = qJD(3) * t409;
t555 = pkin(3) * t563;
t626 = t395 * t405;
t303 = -pkin(4) * t626 - t555;
t550 = t397 * t616;
t623 = t396 * t406;
t767 = rSges(6,1) * t550 + rSges(6,3) * t623 + t396 * t303 + t339 * t616;
t766 = t790 * t406;
t765 = (-t809 + t794) * t398 - t787;
t764 = t780 * t396 - t776 * t398;
t763 = t779 * t396 + t777 * t398;
t762 = t776 * t396 + t780 * t398;
t761 = -t777 * t396 + t779 * t398;
t760 = -t750 * t310 - t751 * t617 + t770;
t759 = -t748 * t310 - t749 * t617 - t766;
t758 = t799 * t395 - t797 * t397;
t757 = -t798 * t395 + t796 * t397;
t756 = t781 * t396 + t775 * t398;
t755 = -t775 * t396 + t781 * t398;
t569 = t721 + t487;
t570 = t358 - t361;
t752 = (t409 * t569 + t411 * t570) * t406;
t304 = t390 * t616;
t619 = t397 * t405;
t452 = -t395 * t616 - t396 * t619;
t553 = t395 * t310;
t561 = qJD(5) * t398;
t610 = -t561 - t304 + (-t406 * t566 + t555) * t396 - rSges(6,1) * t553 + rSges(6,2) * t452 + t767;
t747 = t807 * t395 + t785 * t397;
t746 = -t395 * t813 - t397 * t808;
t568 = pkin(2) * t616 + pkin(7) * t623;
t612 = t406 * t413;
t175 = t304 + (-t555 - t612) * t396 - t568;
t684 = pkin(2) * t398;
t214 = t684 - t348 + (pkin(7) + t413) * t396;
t205 = t406 * t214;
t745 = t175 + t205;
t744 = t607 * t406;
t383 = t398 * t413;
t573 = t396 * t390 + t383;
t608 = -rSges(6,2) * t628 - rSges(6,3) * t398 + t545 - t573;
t741 = t805 * t310 - t804 * t406 - t795 * t617;
t380 = rSges(4,2) * t615;
t558 = rSges(4,1) * t614;
t250 = rSges(4,3) * t396 - t380 + t558;
t229 = t406 * t250;
t331 = pkin(7) * t396 + t684;
t302 = t406 * t331;
t372 = rSges(4,1) * t409 + rSges(4,2) * t411;
t565 = qJD(3) * t396;
t541 = t372 * t565;
t574 = rSges(4,3) * t623 + t406 * t558;
t740 = -t229 - t302 + t541 + t568 + t574;
t384 = qJD(5) * t396;
t552 = t395 * t623;
t500 = rSges(6,2) * t552 + rSges(6,3) * t616 + t398 * t303 + t384;
t536 = t398 * t563;
t505 = pkin(3) * t536;
t739 = t500 + t505;
t538 = t396 * t563;
t504 = pkin(3) * t538;
t453 = -t504 - t561;
t424 = -t310 * t768 + t453;
t725 = t302 - t205;
t738 = -t424 - t725 + t744 + t767;
t352 = rSges(5,2) * t627;
t233 = rSges(5,1) * t620 + rSges(5,3) * t396 - t352;
t212 = t406 * t233;
t325 = rSges(5,1) * t395 + rSges(5,2) * t397;
t455 = -t310 * t325 - t504;
t580 = rSges(5,1) * t550 + rSges(5,3) * t623;
t736 = t304 + t580 - t212 - t455 - t725;
t732 = t778 * t617;
t731 = (t809 + t793) * t396 - t789;
t730 = 0.2e1 * qJD(3);
t269 = t325 * t396;
t271 = t325 * t398;
t676 = rSges(5,2) * t395;
t679 = rSges(5,1) * t397;
t328 = -t676 + t679;
t350 = rSges(5,1) * t624;
t231 = -rSges(5,2) * t628 - rSges(5,3) * t398 + t350;
t389 = t396 * pkin(2);
t330 = -pkin(7) * t398 + t389;
t213 = -t330 + t573;
t564 = qJD(3) * t398;
t495 = t213 * t565 - t214 * t564;
t91 = t231 * t310 + t233 * t617 + t495;
t237 = t617 * t325;
t444 = t505 + t556;
t605 = t213 + t330;
t546 = t231 + t605;
t95 = t406 * t546 + t237 + t444;
t412 = cos(qJ(1));
t392 = t412 * t674;
t604 = -t214 + t233;
t96 = t392 + (t331 + t604) * t406 + t455;
t718 = -(-t406 * t269 + t328 * t617) * t95 - t91 * (-t269 * t310 - t271 * t617) - t96 * (-t271 * t406 - t310 * t328);
t621 = t396 * t411;
t379 = rSges(4,1) * t621;
t622 = t396 * t409;
t249 = -rSges(4,2) * t622 - rSges(4,3) * t398 + t379;
t540 = t372 * t564;
t713 = -t406 * (t249 + t330) - t540;
t164 = t245 * t411 + t247 * t409;
t357 = Icges(4,5) * t411 - Icges(4,6) * t409;
t461 = t357 * t396;
t243 = -Icges(4,3) * t398 + t461;
t712 = qJD(3) * t164 + t169 * t409 - t171 * t411 - t243 * t406;
t356 = Icges(4,5) * t409 + Icges(4,6) * t411;
t711 = -Icges(4,3) * t406 + qJD(3) * t356;
t333 = t487 * qJD(3);
t334 = t361 * qJD(3);
t709 = qJD(3) * (t358 * t411 + t409 * t721) + t333 * t409 - t334 * t411 - t356 * t406;
t168 = t398 * t710 + t406 * t464;
t170 = t396 * t467 + t398 * t707;
t244 = Icges(4,5) * t614 - Icges(4,6) * t615 + Icges(4,3) * t396;
t708 = qJD(3) * t480 - t168 * t409 + t170 * t411 - t244 * t406;
t705 = t406 * (t605 + t608) - t384 + t768 * t617;
t274 = t406 * t310;
t696 = t274 / 0.2e1;
t275 = t617 * t406;
t694 = -t275 / 0.2e1;
t693 = -t310 / 0.2e1;
t692 = t310 / 0.2e1;
t691 = t617 / 0.2e1;
t690 = -t617 / 0.2e1;
t689 = -t396 / 0.2e1;
t688 = -t398 / 0.2e1;
t687 = -t406 / 0.2e1;
t686 = t406 / 0.2e1;
t685 = rSges(4,3) + pkin(7);
t683 = pkin(3) * t409;
t401 = t410 * pkin(1);
t403 = t412 * pkin(1);
t680 = rSges(4,1) * t411;
t678 = rSges(6,1) * t397;
t677 = rSges(4,2) * t409;
t675 = rSges(6,2) * t395;
t673 = t406 * t96;
t148 = -t541 + t392 + (t250 + t331) * t406;
t654 = t148 * t406;
t630 = t356 * t396;
t180 = -t358 * t615 + t614 * t721 + t630;
t651 = t180 * t406;
t639 = t246 * t409;
t291 = t356 * t398;
t629 = t357 * t406;
t625 = t395 * t406;
t618 = t398 * t324;
t613 = t406 * t409;
t451 = t395 * t617 + t397 * t623;
t611 = (t566 * t398 + (t339 - t390) * t396) * t406 + rSges(6,1) * t451 + rSges(6,2) * t754 - t739;
t609 = t608 * t396;
t327 = -t675 + t678;
t595 = (-t327 - t681) * t310;
t283 = t327 * t405;
t594 = t398 * t283 + t773;
t593 = t396 * t721 + t245;
t592 = t398 * t721 + t246;
t591 = -t358 * t396 + t247;
t590 = -Icges(4,2) * t614 + t248 - t378;
t415 = qJD(1) ^ 2;
t391 = t415 * t403;
t588 = t406 * t568 + t391;
t582 = rSges(5,2) * t552 + rSges(5,3) * t616;
t557 = rSges(4,2) * t613;
t575 = rSges(4,3) * t616 + t396 * t557;
t572 = t348 - t352;
t571 = pkin(4) * t627 + t618;
t567 = t379 + t389;
t562 = qJD(3) * t411;
t560 = t415 * t401;
t559 = qJD(3) ^ 2 * t402;
t382 = pkin(3) * t615;
t554 = pkin(3) * t562;
t188 = t213 * t616;
t152 = -rSges(5,1) * t553 + rSges(5,2) * t452 + t580;
t549 = t231 * t616 + (t152 - t212) * t396;
t548 = t396 * t745 + t188;
t547 = -t214 - t607;
t370 = pkin(7) * t616;
t543 = t370 + t575;
t542 = t350 + t573;
t537 = t396 * t562;
t534 = t623 / 0.2e1;
t533 = -t616 / 0.2e1;
t532 = pkin(2) + t680;
t530 = t565 / 0.2e1;
t528 = t564 / 0.2e1;
t526 = -t325 - t683;
t268 = t324 * t396;
t512 = -t406 * t268 + t327 * t617;
t329 = rSges(3,1) * t398 - rSges(3,2) * t396;
t253 = t329 * t406 + t392;
t506 = qJD(3) * (-t396 ^ 2 - t398 ^ 2);
t503 = t406 * t175 + t398 * t559 + t588;
t496 = -pkin(4) * t619 - t283;
t286 = rSges(3,1) * t616 - rSges(3,2) * t623;
t340 = -t682 - t683;
t494 = t406 * t526;
t493 = t406 * t768;
t491 = -t677 + t680;
t147 = t556 - t713;
t484 = t147 * t398 - t148 * t396;
t479 = -t248 * t411 + t639;
t475 = -t358 * t409 + t411 * t721;
t474 = -t324 + t340;
t472 = t608 * t616 + (t744 + t610) * t396;
t174 = t505 + t370 + (t383 + (-pkin(2) + t390) * t396) * t406;
t289 = pkin(2) * t623 - t370;
t469 = -t174 - t289 - t505;
t468 = qJD(3) * t372;
t458 = qJD(3) * t188 - t174 * t564 + t565 * t745;
t208 = t247 * t621;
t111 = -t243 * t398 - t245 * t622 + t208;
t209 = t248 * t621;
t112 = t244 * t398 + t246 * t622 - t209;
t457 = (-t111 * t398 - t112 * t396) * qJD(3);
t210 = t245 * t615;
t113 = -t243 * t396 - t247 * t614 + t210;
t114 = t244 * t396 - t398 * t479;
t456 = (-t113 * t398 - t114 * t396) * qJD(3);
t158 = (t249 * t396 + t250 * t398) * qJD(3);
t454 = t474 * t406;
t450 = -t396 * t559 - t560;
t439 = -t398 * t711 + (-t461 + t479) * t406;
t438 = -t357 * t616 + t396 * t711 + t406 * t481;
t435 = -t357 * qJD(3) + t406 * t475;
t434 = t409 * t591 + t411 * t593;
t433 = t409 * t590 + t411 * t592;
t431 = -rSges(5,1) * t626 - rSges(5,2) * t619 - t555;
t420 = (-t396 * t750 - t398 * t751) * t696 + (-t396 * t748 - t398 * t749) * t694 + ((-t406 * t748 + t764) * t398 + (t406 * t749 + t763) * t396) * t693 + (t741 * t396 - t774 * t398) * t692 + (t774 * t396 + t741 * t398) * t691 + ((-t406 * t750 + t762) * t398 + (t406 * t751 + t761) * t396) * t690 + (t749 * t274 - t748 * t275 + t763 * t310 + t756 * t406 + t617 * t764) * t689 + (t274 * t751 - t275 * t750 + t310 * t761 + t406 * t755 + t617 * t762) * t688 + (t742 * t395 + t782 * t397) * t687 + ((-t406 * t746 + t758) * t398 + (t406 * t747 + t757) * t396) * t686 + t760 * t534 + t759 * t533;
t179 = t396 * t475 - t291;
t176 = t179 * t406;
t58 = t176 + t457;
t59 = t456 - t651;
t88 = qJD(3) * t479 + t168 * t411 + t170 * t409;
t92 = t435 * t396 + t398 * t709;
t93 = -t396 * t709 + t435 * t398;
t419 = (t176 + ((t113 + t209 - t210 + (t243 - t639) * t396) * t396 + (-t208 - t114 + (t243 - t479) * t398 + (t638 + t640) * t396) * t398) * qJD(3)) * t530 + t790 * t275 / 0.2e1 + t746 * t694 + (-t732 * t398 + (t731 - t748) * t617 + ((t786 - t810) * t396 + t749 + t765 + t788) * t310 + t770) * t692 + (t59 + t651 + ((-t112 + t210 + (t244 - t638) * t398) * t398 + (t111 - t208 + (t244 + t640) * t396) * t396) * qJD(3)) * t528 - (t88 + t92 + t58) * t565 / 0.2e1 + (qJD(3) * t475 + t333 * t411 + t334 * t409 - t801 * t395 + t800 * t397) * t406 + (t747 + t791) * t696 + (t732 * t396 + (-t750 - t765) * t617 + (-t778 * t398 + t731 + t751) * t310 + t759 + t766) * t691 + (t755 - t758) * t690 + (t756 - t757 + t760) * t693 - (t93 - t772) * t564 / 0.2e1 + (t398 * t180 + (t164 + t179) * t396) * qJD(3) * t686;
t172 = rSges(4,2) * t398 * t562 + (t406 * t621 + t536) * rSges(4,1) - t575;
t337 = t491 * qJD(3);
t97 = -t560 - t337 * t565 + (-t172 - t289 - t540) * t406;
t173 = -rSges(4,1) * t538 + (-t398 * t613 - t537) * rSges(4,2) + t574;
t98 = t173 * t406 + (t337 * t398 - t372 * t623) * qJD(3) + t588;
t418 = (-t147 * t468 - t532 * t654 - t677 * t98 + t685 * t97) * t396 + (-t147 * t557 - t148 * t468 + t532 * t97 - t685 * t98) * t398;
t32 = -t275 * t324 - t283 * t310 + (-t275 * t395 - t310 * t619) * pkin(4) + (t469 + t384 - t611) * t406 + t450;
t33 = -t274 * t324 + t283 * t617 + (-t274 * t395 + t617 * t619) * pkin(4) + (t453 + t610) * t406 + t503;
t83 = t444 + t705;
t84 = t392 + (t331 + t547) * t406 + t424;
t417 = (t32 * (rSges(6,3) - t404) - t33 * t675 - t83 * t324 * t405 + (t84 * (-t339 - t678) - t83 * t404) * t406) * t396 + (t32 * t678 + t84 * (-rSges(6,1) * t626 - rSges(6,2) * t619 - t404 * t406) - t33 * rSges(6,3) + t83 * (-rSges(6,2) * t625 - qJD(5))) * t398;
t150 = rSges(5,1) * t451 + rSges(5,2) * t754 - t582;
t284 = t328 * t405;
t64 = -t275 * t325 - t284 * t310 + (-t150 + t469) * t406 + t450;
t65 = -t274 * t325 + t284 * t617 + (t152 - t504) * t406 + t503;
t416 = (t64 * (rSges(5,3) - t413) - t65 * t676 + t95 * t431 + (t96 * (-t390 - t679) - t95 * t413) * t406) * t396 + (t64 * t679 + t96 * (t431 - t612) - t65 * rSges(5,3) - t95 * rSges(5,2) * t625) * t398;
t297 = t372 * t398;
t296 = t372 * t396;
t241 = -t340 * t398 - t382;
t240 = (t340 + t683) * t396;
t216 = t286 * t406 + t391;
t215 = -t285 * t406 - t560;
t207 = t396 * t231;
t204 = t396 * t213;
t202 = t617 * t618;
t55 = t310 * t608 - t607 * t617 + t495;
t23 = -t150 * t617 + t152 * t310 + t231 * t275 - t233 * t274 + t458;
t9 = t274 * t607 + t275 * t608 + t310 * t610 - t611 * t617 + t458;
t1 = [t419 + m(3) * (t215 * (t329 + t403) + t216 * (t401 + t722) + (-t253 + t286 + t392) * t252) + (t32 * (t403 + t584) + t84 * (t500 - t556) + t33 * (t401 + t545) + t417 + (t84 + t738) * t83) * m(6) + (t64 * (t403 + t572) + t96 * (-t556 + t582) + t65 * (t401 + t542) + t416 + (t96 + t736) * t95) * m(5) + (t97 * (-t380 + t403) + t148 * (t543 - t556) + t98 * (t401 + t567) + t418 + (t148 + t740) * t147) * m(4); t419 + (t32 * t584 + t33 * t545 + t417 + (t705 + t739) * t84 + t738 * t83) * m(6) + (t542 * t65 + t546 * t673 + t572 * t64 + t416 + (t582 + t237 + t505) * t96 + t736 * t95) * m(5) + (-t97 * t380 + t567 * t98 + t418 + (t543 - t713) * t148 + t740 * t147) * m(4) + (-(t252 * t329 - t253 * t722) * t406 + t215 * t329 + t216 * t722 + t252 * t286 - t253 * t285) * m(3); ((-t564 * t630 - t629) * t398 + (-t752 + (-t433 * t396 + (t291 + t434) * t398) * qJD(3)) * t396) * t528 + ((t291 * t565 - t629) * t396 + (t752 + (-t434 * t398 + (-t630 + t433) * t396) * qJD(3)) * t398) * t530 + ((-t409 * t570 + t411 * t569) * t406 + ((t396 * t590 - t398 * t591) * t411 + (-t396 * t592 + t398 * t593) * t409) * qJD(3)) * t687 + t420 + (t772 * t398 + (t164 * t406 - t88) * t396) * t686 + (t406 * t92 + ((-t114 * t406 - t438 * t396 - t398 * t712) * t398 + (t113 * t406 - t439 * t396 + t398 * t708) * t396) * t730) * t689 + (t406 * t93 + ((-t406 * t112 + t396 * t712 - t438 * t398) * t398 + (t111 * t406 - t396 * t708 - t439 * t398) * t396) * t730) * t688 + (t58 + t457) * t534 + (t59 + t456) * t533 + (t33 * (t382 + t571) + t32 * t474 * t396 + (t398 * t547 + t204 + t609) * t9 + (pkin(3) * t537 - t595 - (-t241 - t618 - t382) * t406 + t454 * t398 + (t496 - t554) * t396) * t84 + (-t773 - t512 - (-pkin(3) * t622 + t240) * t406 + t594 + t454 * t396) * t83 + (t241 * t617 + t202 - (t240 - t268) * t310 - t506 * t683 + t472 + t548 + (-t174 - t611) * t398) * t55) * m(6) + (t23 * (t204 + t207) + t91 * (t548 + t549) + t65 * t382 + (t23 * t604 + t91 * (-t150 - t174) + t65 * t325 + t95 * t284 + t96 * t494) * t398 + (t64 * t526 + t96 * (-t284 - t554) + t95 * t494) * t396 - (-t96 * t537 + ((-t396 * t95 - t398 * t96) * t406 + t91 * t506) * t409) * pkin(3) + t718) * m(5) + (-(-t147 * t296 - t148 * t297) * t406 - (t158 * (-t296 * t396 - t297 * t398) + t484 * t491) * qJD(3) + 0.2e1 * t158 * ((t249 * t406 - t172) * t398 + (t173 - t229) * t396) + t484 * t337 + ((t98 - t654) * t398 + (-t147 * t406 - t97) * t396) * t372) * m(4); t420 + (-t55 * (-t268 * t310 - t202) - t84 * (-t406 * t618 + t595) - t83 * t512 - (t83 * t754 + (t55 * (-t310 * t396 - t398 * t617) + (-t396 * t83 - t398 * t84) * t406) * t395) * pkin(4) + t9 * t609 + t55 * t472 + t33 * t571 + t83 * t594 + (-t493 * t84 - t55 * t611 - t607 * t9) * t398 + (-t32 * t768 - t493 * t83 + t496 * t84) * t396) * m(6) + (t23 * (t233 * t398 + t207) + t91 * (-t150 * t398 + t549) + (-t396 * t96 + t398 * t95) * t284 + ((t65 - t673) * t398 + (-t406 * t95 - t64) * t396) * t325 + t718) * m(5); 0.2e1 * (t32 * t688 + t33 * t689 - t55 * (-t310 * t398 + t396 * t617) / 0.2e1) * m(6);];
tauc = t1(:);
