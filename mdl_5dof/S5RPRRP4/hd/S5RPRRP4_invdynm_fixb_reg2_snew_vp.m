% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRRP4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:07
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRRP4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP4_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP4_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP4_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP4_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:07:19
% EndTime: 2019-12-05 18:07:33
% DurationCPUTime: 14.66s
% Computational Cost: add. (50491->612), mult. (124700->758), div. (0->0), fcn. (85705->8), ass. (0->427)
t1043 = cos(pkin(8));
t1107 = t1043 * qJDD(1);
t1030 = -qJDD(3) + t1107;
t1019 = -qJDD(4) + t1030;
t1044 = sin(qJ(4));
t1045 = sin(qJ(3));
t1047 = cos(qJ(4));
t1048 = cos(qJ(3));
t1042 = sin(pkin(8));
t1119 = qJD(1) * t1042;
t986 = (-t1044 * t1048 - t1045 * t1047) * t1119;
t1118 = qJD(1) * t1048;
t1097 = t1042 * t1118;
t1113 = t1042 * t1045;
t1098 = qJD(1) * t1113;
t988 = -t1044 * t1098 + t1047 * t1097;
t1148 = t988 * t986;
t1177 = t1019 - t1148;
t1180 = t1177 * pkin(4);
t1135 = t1044 * t1177;
t1126 = t1047 * t1177;
t1031 = qJD(1) * t1043 - qJD(3);
t1023 = -qJD(4) + t1031;
t1120 = t986 * t1023;
t1040 = t1042 ^ 2;
t1099 = t1031 * t1119;
t1050 = qJD(1) ^ 2;
t1110 = t1048 * t1050;
t1046 = sin(qJ(1));
t1049 = cos(qJ(1));
t1020 = g(2) * t1046 - t1049 * g(3);
t1002 = -pkin(1) * t1050 + qJDD(1) * qJ(2) + t1020;
t1157 = pkin(2) * t1043;
t1084 = -pkin(6) * t1042 - t1157;
t1007 = t1084 * qJD(1);
t1174 = 2 * qJD(2);
t1079 = t1002 + (t1174 + t1007) * qJD(1);
t1156 = g(1) * t1042;
t935 = t1043 * t1079 - t1156;
t1021 = g(2) * t1049 + g(3) * t1046;
t1059 = -qJ(2) * t1050 + qJDD(2) - t1021;
t1081 = -pkin(1) + t1084;
t973 = qJDD(1) * t1081 + t1059;
t959 = t1048 * t973;
t1035 = t1042 * qJDD(1);
t1027 = t1048 * t1035;
t994 = -qJD(3) * t1098 + t1027;
t1054 = -pkin(3) * t1030 - pkin(7) * t994 + t959 + (-pkin(3) * t1040 * t1110 + pkin(7) * t1099 - t935) * t1045;
t1115 = t1040 * t1050;
t1175 = t1045 ^ 2;
t1029 = t1175 * t1115;
t1108 = qJDD(1) * t1045;
t1072 = qJD(3) * t1118 + t1108;
t1060 = t1072 * t1042;
t902 = t1045 * t973 + t1048 * t935;
t991 = -pkin(3) * t1031 - pkin(7) * t1097;
t861 = -pkin(3) * t1029 - pkin(7) * t1060 + t1031 * t991 + t902;
t815 = t1044 * t861 - t1047 * t1054;
t1058 = qJ(5) * t1120 + 0.2e1 * qJD(5) * t988 + t1180 + t815;
t922 = t986 * qJD(4) - t1044 * t1060 + t1047 * t994;
t782 = qJ(5) * t922 + t1058;
t1055 = -t782 - t1180;
t1018 = t1023 ^ 2;
t984 = t986 ^ 2;
t929 = -t1018 - t984;
t866 = t1044 * t929 - t1126;
t865 = pkin(3) * t866;
t1179 = t1055 + t865;
t1178 = t922 - t1120;
t1003 = t1031 * t1098;
t963 = t1003 + t994;
t953 = t1048 * t963;
t1092 = t1044 * t994 + t1047 * t1060;
t882 = (qJD(4) + t1023) * t988 + t1092;
t921 = -qJD(4) * t988 - t1092;
t957 = -pkin(4) * t1023 - qJ(5) * t988;
t1176 = -t921 * pkin(4) - t984 * qJ(5) + t957 * t988 + qJDD(5);
t985 = t988 ^ 2;
t1028 = t1031 ^ 2;
t885 = t1120 + t922;
t844 = -t1044 * t882 - t1047 * t885;
t846 = t1044 * t885 - t1047 * t882;
t792 = -t1045 * t844 + t1048 * t846;
t923 = -t984 - t985;
t778 = t1042 * t792 - t1043 * t923;
t1173 = pkin(1) * t778;
t867 = t1047 * t929 + t1135;
t828 = -t1045 * t866 + t1048 * t867;
t881 = (qJD(4) - t1023) * t988 + t1092;
t798 = t1042 * t828 - t1043 * t881;
t1172 = pkin(1) * t798;
t930 = t1019 + t1148;
t1136 = t1044 * t930;
t951 = -t985 - t1018;
t876 = t1047 * t951 + t1136;
t1127 = t1047 * t930;
t877 = -t1044 * t951 + t1127;
t840 = -t1045 * t876 + t1048 * t877;
t804 = t1042 * t840 - t1043 * t1178;
t1171 = pkin(1) * t804;
t827 = t1045 * t867 + t1048 * t866;
t1170 = pkin(2) * t827;
t838 = t1045 * t877 + t1048 * t876;
t1169 = pkin(2) * t838;
t816 = t1044 * t1054 + t1047 * t861;
t759 = t1044 * t816 - t1047 * t815;
t1168 = pkin(3) * t759;
t779 = t1042 * t923 + t1043 * t792;
t790 = t1045 * t846 + t1048 * t844;
t1167 = pkin(5) * (t1046 * t790 + t1049 * t779);
t799 = t1042 * t881 + t1043 * t828;
t1166 = pkin(5) * (t1046 * t827 + t1049 * t799);
t805 = t1042 * t1178 + t1043 * t840;
t1165 = pkin(5) * (t1046 * t838 + t1049 * t805);
t1164 = pkin(6) * t790;
t1163 = pkin(6) * t827;
t1162 = pkin(6) * t838;
t1161 = pkin(7) * t844;
t1160 = pkin(7) * t866;
t1159 = pkin(7) * t876;
t1158 = pkin(2) * t1042;
t1155 = g(1) * t1043;
t1154 = qJ(2) * t778;
t1153 = qJ(2) * t798;
t1152 = qJ(2) * t804;
t1150 = qJDD(1) * pkin(1);
t1147 = -pkin(1) * t790 + qJ(2) * t779;
t1146 = -pkin(2) * t923 + pkin(6) * t792;
t1145 = -pkin(1) * t827 + qJ(2) * t799;
t1144 = -pkin(1) * t838 + qJ(2) * t805;
t1143 = -pkin(2) * t881 + pkin(6) * t828;
t1142 = -pkin(2) * t1178 + pkin(6) * t840;
t1141 = qJD(5) * t986;
t1139 = t1023 * t988;
t1138 = t1044 * t782;
t1086 = pkin(3) * t1060 - pkin(7) * t1029 + t1155;
t1091 = -t1048 * t991 - t1007;
t873 = (t1002 + (t1174 - t1091) * qJD(1)) * t1042 + t1086;
t1137 = t1044 * t873;
t1134 = t1045 * t759;
t934 = t1042 * t1079 + t1155;
t1133 = t1045 * t934;
t1095 = t1045 * t1110;
t1016 = t1040 * t1095;
t992 = -t1016 + t1030;
t1132 = t1045 * t992;
t993 = -t1016 - t1030;
t1131 = t1045 * t993;
t995 = -t1059 + t1150;
t1130 = t1046 * t995;
t1129 = t1047 * t782;
t1128 = t1047 * t873;
t1125 = t1048 * t759;
t1124 = t1048 * t934;
t1123 = t1048 * t992;
t1122 = t1048 * t993;
t1121 = t1049 * t995;
t1117 = t1023 * t1044;
t1116 = t1023 * t1047;
t1114 = t1042 * t1043;
t1112 = t1042 * t1046;
t1111 = t1042 * t1049;
t875 = pkin(3) * t876;
t1106 = t875 - t816;
t1105 = t1042 * t1148;
t1104 = t1043 * t1148;
t842 = pkin(3) * t844;
t755 = -pkin(2) * t790 - t842;
t1082 = t984 * pkin(4) - t921 * qJ(5) - t1023 * t957 - t816;
t976 = 0.2e1 * t1141;
t785 = t976 - t1082;
t736 = t1044 * t785 - t1129;
t781 = pkin(4) * t782;
t1103 = pkin(3) * t736 - t781;
t1102 = -pkin(3) * t923 + pkin(7) * t846;
t1101 = -pkin(3) * t881 + pkin(7) * t867;
t1100 = -pkin(3) * t1178 + pkin(7) * t877;
t1041 = t1048 ^ 2;
t1096 = t1041 * t1115;
t1094 = t1042 * t1107;
t1093 = t995 + t1150;
t1089 = qJD(1) * t1174 + t1002;
t968 = t1042 * t1089 + t1155;
t969 = t1043 * t1089 - t1156;
t915 = t1042 * t968 + t1043 * t969;
t760 = t1044 * t815 + t1047 * t816;
t901 = t1045 * t935 - t959;
t852 = t1045 * t901 + t1048 * t902;
t1090 = qJD(1) * (qJD(3) - t1031);
t1039 = t1042 * t1040;
t1088 = t1039 * t1095;
t1087 = -pkin(2) * t934 + pkin(6) * t852;
t1085 = t815 - t865;
t1014 = qJDD(1) * t1046 + t1049 * t1050;
t1083 = pkin(5) * t1014 - g(1) * t1049;
t913 = t1042 * t969 - t1043 * t968;
t851 = t1045 * t902 - t1048 * t901;
t1080 = t1043 * t1016;
t1078 = t1020 * t1049 - t1021 * t1046;
t1077 = -t1020 * t1046 - t1021 * t1049;
t1076 = qJDD(1) * t1049 - t1046 * t1050;
t1075 = pkin(4) * t951 + t1082;
t1073 = t875 + t1075;
t1052 = t1043 ^ 2;
t1006 = (t1040 + t1052) * t1043 * t1050;
t1071 = -t1006 * t1046 + t1049 * t1107;
t1070 = t1006 * t1049 + t1046 * t1107;
t979 = -t1096 - t1028;
t937 = -t1045 * t979 + t1123;
t964 = t1090 * t1113 - t1027;
t1069 = pkin(2) * t964 + pkin(6) * t937 + t1133;
t998 = -t1029 - t1028;
t950 = t1048 * t998 - t1131;
t1004 = t1031 * t1097;
t962 = t1004 - t1060;
t1068 = pkin(2) * t962 + pkin(6) * t950 - t1124;
t756 = -pkin(4) * t923 - qJ(5) * t882 + t785;
t764 = (t885 + t922) * qJ(5) + t1058;
t727 = t1044 * t764 + t1047 * t756 + t1102;
t729 = -t1044 * t756 + t1047 * t764 - t1161;
t1067 = t1045 * t729 + t1048 * t727 + t1146;
t743 = t1102 + t760;
t745 = -t759 - t1161;
t1066 = t1045 * t745 + t1048 * t743 + t1146;
t793 = -pkin(4) * t881 + qJ(5) * t929 - 0.2e1 * qJD(2) * t1119 + (qJD(1) * t1091 - t1002) * t1042 - t1086 - t1176;
t752 = qJ(5) * t1135 + t1047 * t793 + t1101;
t762 = qJ(5) * t1126 - t1044 * t793 - t1160;
t1065 = t1045 * t762 + t1048 * t752 + t1143;
t822 = t873 + t1176;
t813 = -qJ(5) * t951 + t822;
t855 = -pkin(4) * t1178 + qJ(5) * t930;
t753 = t1044 * t813 + t1047 * t855 + t1100;
t765 = -t1044 * t855 + t1047 * t813 - t1159;
t1064 = t1045 * t765 + t1048 * t753 + t1142;
t801 = t1101 - t1128;
t830 = t1137 - t1160;
t1063 = t1045 * t830 + t1048 * t801 + t1143;
t808 = t1100 + t1137;
t839 = t1128 - t1159;
t1062 = t1045 * t839 + t1048 * t808 + t1142;
t1000 = t1029 + t1096;
t960 = t1003 - t994;
t961 = t1004 + t1060;
t911 = -t1045 * t960 - t1048 * t961;
t1061 = pkin(2) * t1000 + pkin(6) * t911 + t852;
t737 = t1047 * t785 + t1138;
t750 = -pkin(4) * t822 + qJ(5) * t785;
t712 = -pkin(3) * t822 + pkin(7) * t737 + qJ(5) * t1138 + t1047 * t750;
t715 = -pkin(7) * t736 + qJ(5) * t1129 - t1044 * t750;
t721 = -t1045 * t736 + t1048 * t737;
t1057 = -pkin(2) * t822 + pkin(6) * t721 + t1045 * t715 + t1048 * t712;
t734 = t1048 * t760 - t1134;
t751 = -pkin(3) * t873 + pkin(7) * t760;
t1056 = -pkin(2) * t873 + pkin(6) * t734 - pkin(7) * t1134 + t1048 * t751;
t1037 = t1052 * t1050;
t1036 = t1052 * qJDD(1);
t1034 = t1040 * qJDD(1);
t1026 = t1050 * t1114;
t1022 = 0.2e1 * t1094;
t1012 = -t1037 + t1115;
t1011 = t1037 + t1115;
t1010 = t1043 * t1030;
t1009 = t1036 - t1034;
t1008 = t1036 + t1034;
t1005 = (t1042 * t1052 + t1039) * t1050;
t1001 = -t1029 + t1096;
t999 = t1028 - t1096;
t997 = t1029 - t1028;
t996 = pkin(5) * t1076 + g(1) * t1046;
t983 = t1076 * t1114;
t982 = t1014 * t1114;
t977 = -0.2e1 * t1141;
t975 = t1005 * t1049 + t1046 * t1035;
t974 = -t1005 * t1046 + t1049 * t1035;
t972 = (-t1041 - t1175) * t1099;
t966 = -t985 + t1018;
t965 = t984 - t1018;
t955 = -t1041 * t1099 + t1045 * t994;
t954 = (-t1175 * t1031 * qJD(1) - t1048 * t1072) * t1042;
t952 = (t1048 * t1090 + t1108) * t1113;
t949 = t1048 * t997 + t1132;
t948 = -t1045 * t999 + t1122;
t947 = t1045 * t998 + t1122;
t946 = t1045 * t997 - t1123;
t945 = t1048 * t999 + t1131;
t941 = -qJ(2) * t1006 + t1093 * t1043;
t940 = qJ(2) * t1005 - t1093 * t1042;
t938 = t985 - t984;
t936 = t1048 * t979 + t1132;
t928 = t1043 * t953 + t1088;
t927 = t1043 * t952 - t1088;
t925 = t1042 * t953 - t1080;
t924 = t1042 * t952 + t1080;
t920 = (-t1044 * t988 - t1047 * t986) * t1023;
t919 = (-t1044 * t986 + t1047 * t988) * t1023;
t912 = -t1045 * t963 + t1048 * t962;
t910 = t1045 * t962 + t953;
t909 = -t1045 * t961 + t1048 * t960;
t908 = -t1042 * t962 + t1043 * t950;
t907 = -t1042 * t961 + t1043 * t949;
t906 = -t1042 * t960 + t1043 * t948;
t905 = t1042 * t950 + t1043 * t962;
t904 = t1042 * t949 + t1043 * t961;
t903 = t1042 * t948 + t1043 * t960;
t899 = -t1042 * t964 + t1043 * t937;
t898 = t1042 * t937 + t1043 * t964;
t897 = pkin(1) * t995 + qJ(2) * t915;
t896 = t1047 * t965 + t1136;
t895 = -t1044 * t966 - t1126;
t894 = t1044 * t965 - t1127;
t893 = t1047 * t966 - t1135;
t892 = pkin(1) * t1011 + qJ(2) * t1008 + t915;
t891 = -pkin(6) * t947 + t1133;
t890 = t1001 * t1042 + t1043 * t912;
t889 = -t1000 * t1042 + t1043 * t911;
t888 = -t1001 * t1043 + t1042 * t912;
t887 = t1000 * t1043 + t1042 * t911;
t878 = pkin(4) * t885;
t872 = -pkin(6) * t936 + t1124;
t871 = t1047 * t922 + t988 * t1117;
t870 = t1044 * t922 - t988 * t1116;
t869 = -t1044 * t921 + t986 * t1116;
t868 = t1047 * t921 + t986 * t1117;
t863 = -pkin(2) * t947 + t901;
t862 = -pkin(2) * t936 + t902;
t860 = -t1045 * t919 + t1048 * t920;
t859 = t1045 * t920 + t1048 * t919;
t854 = -t1019 * t1042 + t1043 * t860;
t853 = t1019 * t1043 + t1042 * t860;
t850 = -t1045 * t894 + t1048 * t896;
t849 = -t1045 * t893 + t1048 * t895;
t848 = t1045 * t896 + t1048 * t894;
t847 = t1045 * t895 + t1048 * t893;
t845 = -t1044 * t1178 - t1047 * t881;
t843 = -t1044 * t881 + t1047 * t1178;
t835 = -pkin(1) * t905 - t1068;
t834 = -t1045 * t870 + t1048 * t871;
t833 = -t1045 * t868 + t1048 * t869;
t832 = t1045 * t871 + t1048 * t870;
t831 = t1045 * t869 + t1048 * t868;
t829 = -pkin(1) * t898 - t1069;
t826 = t1042 * t934 + t1043 * t852;
t825 = t1042 * t852 - t1043 * t934;
t821 = -pkin(6) * t909 - t851;
t820 = t1043 * t834 - t1105;
t819 = t1043 * t833 + t1105;
t818 = t1042 * t834 + t1104;
t817 = t1042 * t833 - t1104;
t812 = -t1042 * t882 + t1043 * t850;
t811 = t1042 * t885 + t1043 * t849;
t810 = t1042 * t850 + t1043 * t882;
t809 = t1042 * t849 - t1043 * t885;
t807 = t1046 * t859 + t1049 * t854;
t806 = -t1046 * t854 + t1049 * t859;
t802 = -qJ(2) * t905 - t1042 * t863 + t1043 * t891;
t800 = -qJ(2) * t898 - t1042 * t862 + t1043 * t872;
t796 = -pkin(1) * t947 + qJ(2) * t908 + t1042 * t891 + t1043 * t863;
t795 = -pkin(1) * t887 - t1061;
t794 = -pkin(1) * t936 + qJ(2) * t899 + t1042 * t872 + t1043 * t862;
t791 = -t1045 * t843 + t1048 * t845;
t789 = t1045 * t845 + t1048 * t843;
t786 = -qJ(2) * t887 + t1043 * t821 + t909 * t1158;
t784 = t1042 * t938 + t1043 * t791;
t783 = t1042 * t791 - t1043 * t938;
t780 = -pkin(1) * t825 - t1087;
t776 = t1046 * t832 + t1049 * t820;
t775 = t1046 * t831 + t1049 * t819;
t774 = -t1046 * t820 + t1049 * t832;
t773 = -t1046 * t819 + t1049 * t831;
t772 = t1046 * t848 + t1049 * t812;
t771 = t1046 * t847 + t1049 * t811;
t770 = -t1046 * t812 + t1049 * t848;
t769 = -t1046 * t811 + t1049 * t847;
t768 = qJ(2) * t889 + t1042 * t821 + (-pkin(1) - t1157) * t909;
t766 = pkin(5) * (-t1046 * t805 + t1049 * t838);
t761 = pkin(5) * (-t1046 * t799 + t1049 * t827);
t758 = -t1106 - t1169;
t757 = -qJ(2) * t825 + (-pkin(6) * t1043 + t1158) * t851;
t754 = t1085 - t1170;
t749 = t755 + t878;
t748 = -t1045 * t808 + t1048 * t839 - t1162;
t747 = qJ(2) * t826 + t1081 * t851;
t746 = -t1045 * t801 + t1048 * t830 - t1163;
t744 = -t1073 + t976 - t1169;
t742 = -t1170 - t1179;
t741 = t1046 * t789 + t1049 * t784;
t740 = -t1046 * t784 + t1049 * t789;
t738 = pkin(5) * (-t1046 * t779 + t1049 * t790);
t735 = -t1062 - t1171;
t733 = t1045 * t760 + t1125;
t732 = -t1063 - t1172;
t731 = t1042 * t873 + t1043 * t734;
t730 = t1042 * t734 - t1043 * t873;
t728 = -t1045 * t753 + t1048 * t765 - t1162;
t726 = -t1045 * t752 + t1048 * t762 - t1163;
t725 = -t1042 * t758 + t1043 * t748 - t1152;
t724 = -pkin(2) * t733 - t1168;
t723 = -t1042 * t754 + t1043 * t746 - t1153;
t722 = -t1064 - t1171;
t720 = t1045 * t737 + t1048 * t736;
t719 = t1042 * t748 + t1043 * t758 + t1144;
t718 = -t1065 - t1172;
t717 = t1042 * t746 + t1043 * t754 + t1145;
t716 = -t1045 * t743 + t1048 * t745 - t1164;
t714 = t1042 * t822 + t1043 * t721;
t713 = t1042 * t721 - t1043 * t822;
t711 = -pkin(6) * t733 - pkin(7) * t1125 - t1045 * t751;
t710 = -t1042 * t744 + t1043 * t728 - t1152;
t709 = -t1066 - t1173;
t708 = -t1042 * t742 + t1043 * t726 - t1153;
t707 = t1042 * t728 + t1043 * t744 + t1144;
t706 = t1042 * t726 + t1043 * t742 + t1145;
t705 = -t1042 * t755 + t1043 * t716 - t1154;
t704 = -pkin(2) * t720 - t1103;
t703 = -t1045 * t727 + t1048 * t729 - t1164;
t702 = t1042 * t716 + t1043 * t755 + t1147;
t701 = -t1067 - t1173;
t700 = -pkin(1) * t730 - t1056;
t699 = -t1042 * t749 + t1043 * t703 - t1154;
t698 = t1042 * t703 + t1043 * t749 + t1147;
t697 = -qJ(2) * t730 - t1042 * t724 + t1043 * t711;
t696 = -pkin(6) * t720 - t1045 * t712 + t1048 * t715;
t695 = -pkin(1) * t733 + qJ(2) * t731 + t1042 * t711 + t1043 * t724;
t694 = -pkin(1) * t713 - t1057;
t693 = -qJ(2) * t713 - t1042 * t704 + t1043 * t696;
t692 = -pkin(1) * t720 + qJ(2) * t714 + t1042 * t696 + t1043 * t704;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, qJDD(1), t1021, -t1020, 0, 0, t1034, t1022, 0, t1036, 0, 0, t941, t940, t892, t897, t925, t888, t903, t924, t904, t1010, t796, t794, t768, t747, t818, t783, t809, t817, t810, t853, t717, t719, t702, t695, t818, t783, t809, t817, t810, t853, t706, t707, t698, t692; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, -t1014, 0, -t1076, 0, t1083, t996, -t1078, -pkin(5) * t1078, -t982, -t1009 * t1046 + t1012 * t1049, t974, t982, t1071, 0, pkin(5) * t1070 - t1049 * t968 + t1112 * t995, -pkin(5) * t975 + t1043 * t1130 - t1049 * t969, t1046 * t913 - pkin(5) * (t1008 * t1049 - t1011 * t1046), -pkin(5) * (t1049 * t915 - t1130) + (t1049 * pkin(1) + t1046 * qJ(2)) * t913, -t1046 * t928 + t1049 * t955, -t1046 * t890 + t1049 * t910, -t1046 * t906 + t1049 * t945, -t1046 * t927 + t1049 * t954, -t1046 * t907 + t1049 * t946, t1030 * t1112 - t1049 * t972, -t1046 * t802 - t1049 * t835 - pkin(5) * (t1046 * t947 + t1049 * t908), -t1046 * t800 - t1049 * t829 - pkin(5) * (t1046 * t936 + t1049 * t899), -t1046 * t786 - t1049 * t795 - pkin(5) * (t1046 * t909 + t1049 * t889), -t1046 * t757 - t1049 * t780 - pkin(5) * (t1046 * t851 + t1049 * t826), t774, t740, t769, t773, t770, t806, -t1046 * t723 - t1049 * t732 - t1166, -t1046 * t725 - t1049 * t735 - t1165, -t1046 * t705 - t1049 * t709 - t1167, -t1046 * t697 - t1049 * t700 - pkin(5) * (t1046 * t733 + t1049 * t731), t774, t740, t769, t773, t770, t806, -t1046 * t708 - t1049 * t718 - t1166, -t1046 * t710 - t1049 * t722 - t1165, -t1046 * t699 - t1049 * t701 - t1167, -t1046 * t693 - t1049 * t694 - pkin(5) * (t1046 * t720 + t1049 * t714); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, t1076, 0, -t1014, 0, -t996, t1083, t1077, pkin(5) * t1077, t983, t1009 * t1049 + t1012 * t1046, t975, -t983, t1070, 0, -pkin(5) * t1071 - t1046 * t968 - t1111 * t995, pkin(5) * t974 - t1043 * t1121 - t1046 * t969, -t1049 * t913 + pkin(5) * (-t1008 * t1046 - t1011 * t1049), pkin(5) * (-t1046 * t915 - t1121) + (t1046 * pkin(1) - t1049 * qJ(2)) * t913, t1046 * t955 + t1049 * t928, t1046 * t910 + t1049 * t890, t1046 * t945 + t1049 * t906, t1046 * t954 + t1049 * t927, t1046 * t946 + t1049 * t907, -t1030 * t1111 - t1046 * t972, t1049 * t802 - t1046 * t835 + pkin(5) * (-t1046 * t908 + t1049 * t947), t1049 * t800 - t1046 * t829 + pkin(5) * (-t1046 * t899 + t1049 * t936), t1049 * t786 - t1046 * t795 + pkin(5) * (-t1046 * t889 + t1049 * t909), t1049 * t757 - t1046 * t780 + pkin(5) * (-t1046 * t826 + t1049 * t851), t776, t741, t771, t775, t772, t807, -t1046 * t732 + t1049 * t723 + t761, -t1046 * t735 + t1049 * t725 + t766, -t1046 * t709 + t1049 * t705 + t738, t1049 * t697 - t1046 * t700 + pkin(5) * (-t1046 * t731 + t1049 * t733), t776, t741, t771, t775, t772, t807, -t1046 * t718 + t1049 * t708 + t761, -t1046 * t722 + t1049 * t710 + t766, -t1046 * t701 + t1049 * t699 + t738, t1049 * t693 - t1046 * t694 + pkin(5) * (-t1046 * t714 + t1049 * t720); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1050, 0, 0, -g(1), -t1021, 0, t1094, t1009, t1005, -t1094, t1006, 0, -t1042 * t995, -t1043 * t995, -t913, -qJ(2) * t913, t928, t890, t906, t927, t907, -t1042 * t1030, t802, t800, t786, t757, t820, t784, t811, t819, t812, t854, t723, t725, t705, t697, t820, t784, t811, t819, t812, t854, t708, t710, t699, t693; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1050, 0, qJDD(1), 0, g(1), 0, t1020, 0, t1026, -t1012, -t1035, -t1026, -t1107, 0, t968, t969, 0, -pkin(1) * t913, -t955, -t910, -t945, -t954, -t946, t972, t835, t829, t795, t780, -t832, -t789, -t847, -t831, -t848, -t859, t732, t735, t709, t700, -t832, -t789, -t847, -t831, -t848, -t859, t718, t722, t701, t694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1021, -t1020, 0, 0, t1034, t1022, 0, t1036, 0, 0, t941, t940, t892, t897, t925, t888, t903, t924, t904, t1010, t796, t794, t768, t747, t818, t783, t809, t817, t810, t853, t717, t719, t702, t695, t818, t783, t809, t817, t810, t853, t706, t707, t698, t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1035, t1107, t1026, 0, t1037, 0, 0, -t995, t968, 0, t953, t912, t948, t952, t949, 0, t891, t872, t821, -pkin(6) * t851, t834, t791, t849, t833, t850, t860, t746, t748, t716, t711, t834, t791, t849, t833, t850, t860, t726, t728, t703, t696; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1035, -t1115, t1107, -t1026, 0, t995, 0, t969, 0, -t1016, -t1001, t960, t1016, t961, t1030, t863, t862, -pkin(2) * t909, -pkin(2) * t851, t1148, -t938, -t885, -t1148, t882, t1019, t754, t758, t755, t724, t1148, -t938, -t885, -t1148, t882, t1019, t742, t744, t749, t704; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1026, t1012, t1035, t1026, t1107, 0, -t968, -t969, 0, 0, t955, t910, t945, t954, t946, -t972, t1068, t1069, t1061, t1087, t832, t789, t847, t831, t848, t859, t1063, t1062, t1066, t1056, t832, t789, t847, t831, t848, t859, t1065, t1064, t1067, t1057; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t994, t962, t993, -t1003, t997, t1003, 0, t934, t901, 0, t871, t845, t895, t869, t896, t920, t830, t839, t745, -pkin(7) * t759, t871, t845, t895, t869, t896, t920, t762, t765, t729, t715; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1004, t963, t999, -t1060, -t992, t1004, -t934, 0, t902, 0, t870, t843, t893, t868, t894, t919, t801, t808, t743, t751, t870, t843, t893, t868, t894, t919, t752, t753, t727, t712; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1016, t1001, -t960, -t1016, -t961, -t1030, -t901, -t902, 0, 0, -t1148, t938, t885, t1148, -t882, -t1019, -t1085, t1106, t842, t1168, -t1148, t938, t885, t1148, -t882, -t1019, t1179, t977 + t1073, -t878 + t842, t1103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t922, -t881, -t1177, t1120, t965, -t1120, 0, t873, t815, 0, t922, -t881, -t1177, t1120, t965, -t1120, qJ(5) * t1177, t813, t764, qJ(5) * t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1139, t1178, t966, t921, -t930, t1139, -t873, 0, t816, 0, -t1139, t1178, t966, t921, -t930, t1139, t793, t855, t756, t750; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1148, t938, t885, t1148, -t882, -t1019, -t815, -t816, 0, 0, -t1148, t938, t885, t1148, -t882, -t1019, t1055, t977 + t1075, -t878, -t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t922, -t881, -t1177, t1120, t965, -t1120, 0, t822, t782, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1139, t1178, t966, t921, -t930, t1139, -t822, 0, t785, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1148, t938, t885, t1148, -t882, -t1019, -t782, -t785, 0, 0;];
m_new_reg = t1;
