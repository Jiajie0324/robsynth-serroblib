% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPRP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:22
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPRP1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP1_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP1_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRP1_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRP1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP1_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:22:37
% EndTime: 2019-12-05 18:22:46
% DurationCPUTime: 9.77s
% Computational Cost: add. (28895->431), mult. (41233->529), div. (0->0), fcn. (22674->8), ass. (0->314)
t809 = qJD(1) + qJD(2);
t807 = t809 ^ 2;
t808 = qJDD(1) + qJDD(2);
t814 = sin(pkin(8));
t815 = cos(pkin(8));
t764 = t815 * t807 + t814 * t808;
t767 = t814 * t807 - t815 * t808;
t817 = sin(qJ(2));
t820 = cos(qJ(2));
t709 = t820 * t764 - t817 * t767;
t812 = g(1) - qJDD(3);
t744 = qJ(3) * t764 - t815 * t812;
t909 = qJ(3) * t767 - t814 * t812;
t656 = pkin(6) * t709 + t820 * t744 - t817 * t909;
t713 = t817 * t764 + t820 * t767;
t818 = sin(qJ(1));
t821 = cos(qJ(1));
t670 = t818 * t709 + t821 * t713;
t919 = pkin(6) * t713 + t817 * t744 + t820 * t909;
t931 = pkin(5) * t670 + t818 * t656 + t821 * t919;
t921 = t821 * t709 - t818 * t713;
t930 = pkin(5) * t921 + t821 * t656 - t818 * t919;
t790 = t821 * g(2) + t818 * g(3);
t829 = qJDD(1) * pkin(1) + t790;
t789 = t818 * g(2) - t821 * g(3);
t823 = qJD(1) ^ 2;
t833 = t823 * pkin(1) - t789;
t724 = t817 * t829 - t820 * t833;
t717 = -t807 * pkin(2) + t724;
t723 = -t817 * t833 - t820 * t829;
t825 = t808 * pkin(2) - t723;
t674 = t814 * t717 - t815 * t825;
t675 = t815 * t717 + t814 * t825;
t852 = t814 * t674 + t815 * t675;
t614 = t815 * t674 - t814 * t675;
t872 = t820 * t614;
t568 = -t817 * t852 + t872;
t876 = t817 * t614;
t913 = t820 * t852 + t876;
t928 = t818 * t568 + t821 * t913;
t927 = t821 * t568 - t818 * t913;
t770 = t820 * t807 + t817 * t808;
t773 = t817 * t807 - t820 * t808;
t718 = t818 * t770 + t821 * t773;
t748 = pkin(6) * t770 - t820 * g(1);
t910 = pkin(6) * t773 - t817 * g(1);
t922 = pkin(5) * t718 + t818 * t748 + t821 * t910;
t908 = t821 * t770 - t818 * t773;
t920 = pkin(5) * t908 + t821 * t748 - t818 * t910;
t851 = t817 * t723 + t820 * t724;
t680 = t820 * t723 - t817 * t724;
t871 = t821 * t680;
t915 = -t818 * t851 + t871;
t875 = t818 * t680;
t914 = t821 * t851 + t875;
t816 = sin(qJ(4));
t819 = cos(qJ(4));
t788 = t819 * t807 * t816;
t778 = qJDD(4) + t788;
t898 = pkin(4) * t778;
t803 = t819 * t812;
t666 = -t807 * pkin(3) + t808 * pkin(7) + t675;
t879 = t816 * t666;
t647 = t803 + t879;
t648 = t819 * t666 - t816 * t812;
t596 = t816 * t647 + t819 * t648;
t769 = t819 * t778;
t811 = t819 ^ 2;
t801 = t811 * t807;
t822 = qJD(4) ^ 2;
t786 = -t801 - t822;
t730 = t816 * t786 + t769;
t901 = pkin(3) * t730;
t810 = t816 ^ 2;
t883 = t810 * t807;
t784 = -t822 - t883;
t779 = qJDD(4) - t788;
t877 = t816 * t779;
t732 = t819 * t784 - t877;
t900 = pkin(3) * t732;
t865 = qJD(4) * t809;
t796 = t819 * t865;
t799 = t816 * t808;
t760 = t799 + t796;
t830 = t803 + (t760 - t796) * qJ(5) - t898;
t864 = (qJD(5) * t809);
t849 = t666 + (2 * t864);
t622 = t849 * t816 + t830;
t899 = pkin(4) * t622;
t878 = t816 * t778;
t734 = t819 * t786 - t878;
t795 = t816 * t865;
t800 = t819 * t808;
t762 = t800 - 0.2e1 * t795;
t690 = t814 * t734 + t815 * t762;
t692 = t815 * t734 - t814 * t762;
t641 = t820 * t690 + t817 * t692;
t643 = -t817 * t690 + t820 * t692;
t897 = pkin(5) * (-t818 * t641 + t821 * t643);
t873 = t819 * t779;
t736 = -t816 * t784 - t873;
t759 = t799 + 0.2e1 * t796;
t691 = t814 * t736 - t815 * t759;
t693 = t815 * t736 + t814 * t759;
t642 = t820 * t691 + t817 * t693;
t644 = -t817 * t691 + t820 * t693;
t896 = pkin(5) * (-t818 * t642 + t821 * t644);
t866 = t810 + t811;
t768 = t866 * t808;
t774 = t801 + t883;
t715 = t814 * t768 + t815 * t774;
t716 = t815 * t768 - t814 * t774;
t672 = t820 * t715 + t817 * t716;
t673 = -t817 * t715 + t820 * t716;
t895 = pkin(5) * (-t818 * t672 + t821 * t673);
t894 = pkin(6) * t641;
t893 = pkin(6) * t642;
t892 = pkin(6) * t672;
t891 = pkin(7) * t730;
t890 = pkin(7) * t732;
t887 = qJ(3) * t690;
t886 = qJ(3) * t691;
t885 = qJ(3) * t715;
t884 = t809 * t816;
t880 = t816 * t622;
t665 = -t808 * pkin(3) - t807 * pkin(7) + t674;
t657 = t816 * t665;
t874 = t819 * t622;
t658 = t819 * t665;
t870 = -pkin(3) * t665 + pkin(7) * t596;
t869 = pkin(3) * t762 + pkin(7) * t734;
t868 = -pkin(3) * t759 + pkin(7) * t736;
t867 = pkin(3) * t774 + pkin(7) * t768;
t863 = pkin(4) * t799;
t862 = t814 * t799;
t861 = t815 * t799;
t860 = t657 + t868;
t859 = -t658 + t869;
t574 = t814 * t596 - t815 * t665;
t858 = pkin(2) * t574 + t870;
t857 = t819 * t864;
t856 = -pkin(1) * t730 + pkin(6) * t643;
t855 = -pkin(1) * t732 + pkin(6) * t644;
t854 = -pkin(2) * t730 + qJ(3) * t692;
t853 = -pkin(2) * t732 + qJ(3) * t693;
t848 = t814 * t788;
t847 = t815 * t788;
t793 = 0.2e1 * t857;
t761 = t800 - t795;
t777 = qJD(4) * pkin(4) - qJ(5) * t884;
t836 = pkin(4) * t801 - t761 * qJ(5) + qJD(4) * t777 - t648;
t623 = t793 - t836;
t609 = pkin(4) * t774 + qJ(5) * t800 + t623;
t620 = (qJ(5) * t808 + t849) * t816 + t830;
t846 = t819 * t609 + t816 * t620 + t867;
t628 = -t761 * pkin(4) - qJ(5) * t801 + t777 * t884 + qJDD(5) + t665;
t624 = -qJ(5) * t784 + t628;
t722 = -pkin(4) * t759 - qJ(5) * t779;
t845 = t816 * t624 + t819 * t722 + t868;
t844 = t867 + t596;
t689 = pkin(2) * t691;
t843 = t689 + t860;
t688 = pkin(2) * t690;
t842 = t688 + t859;
t780 = t818 * qJDD(1) + t821 * t823;
t841 = pkin(5) * t780 - t821 * g(1);
t840 = -pkin(2) * t767 - t674;
t708 = pkin(2) * t715;
t839 = t708 + t846;
t838 = t689 + t845;
t837 = t708 + t844;
t595 = t819 * t647 - t816 * t648;
t835 = t821 * t789 - t818 * t790;
t834 = -t818 * t789 - t821 * t790;
t580 = t819 * t623 + t880;
t582 = -pkin(4) * t628 + qJ(5) * t623;
t832 = -pkin(3) * t628 + pkin(7) * t580 + qJ(5) * t880 + t819 * t582;
t618 = pkin(4) * t762 + qJ(5) * t786 - t628;
t831 = -qJ(5) * t878 + t819 * t618 + t869;
t828 = pkin(4) * t784 + t836;
t557 = t814 * t580 - t815 * t628;
t827 = pkin(2) * t557 + t832;
t826 = t688 + t831;
t824 = -pkin(2) * t764 - t675;
t785 = t801 - t822;
t783 = t822 - t883;
t781 = -t821 * qJDD(1) + t818 * t823;
t775 = -t801 + t883;
t757 = -pkin(5) * t781 + t818 * g(1);
t754 = t866 * t865;
t740 = t814 * qJDD(4) + t815 * t754;
t739 = -t815 * qJDD(4) + t814 * t754;
t738 = t819 * t760 - t810 * t865;
t737 = -t816 * t761 - t811 * t865;
t735 = -t816 * t783 + t769;
t733 = t819 * t785 - t877;
t731 = t819 * t783 + t878;
t729 = t816 * t785 + t873;
t726 = (t760 + t796) * t816;
t725 = (t761 - t795) * t819;
t707 = qJ(3) * t716;
t706 = -t816 * t759 + t819 * t762;
t705 = t819 * t759 + t816 * t762;
t703 = t815 * t735 + t862;
t702 = t815 * t733 + t814 * t800;
t701 = t814 * t735 - t861;
t700 = t814 * t733 - t815 * t800;
t699 = t815 * t738 - t848;
t698 = t815 * t737 + t848;
t697 = t814 * t738 + t847;
t696 = t814 * t737 - t847;
t695 = -pkin(1) * t773 - t723;
t694 = -pkin(1) * t770 - t724;
t685 = -t817 * t739 + t820 * t740;
t684 = t820 * t739 + t817 * t740;
t683 = t815 * t706 + t814 * t775;
t682 = t814 * t706 - t815 * t775;
t677 = pkin(1) * t680;
t676 = pkin(1) * g(1) + pkin(6) * t851;
t669 = pkin(1) * t672;
t668 = pkin(6) * t673;
t664 = -t817 * t701 + t820 * t703;
t663 = -t817 * t700 + t820 * t702;
t662 = t820 * t701 + t817 * t703;
t661 = t820 * t700 + t817 * t702;
t652 = -t817 * t697 + t820 * t699;
t651 = -t817 * t696 + t820 * t698;
t650 = t820 * t697 + t817 * t699;
t649 = t820 * t696 + t817 * t698;
t640 = pkin(1) * t642;
t639 = pkin(1) * t641;
t636 = t658 - t890;
t635 = t657 - t891;
t634 = -t818 * t684 + t821 * t685;
t633 = -t821 * t684 - t818 * t685;
t632 = -t817 * t682 + t820 * t683;
t631 = t820 * t682 + t817 * t683;
t630 = t648 - t900;
t629 = t647 - t901;
t627 = -pkin(1) * t713 + t840;
t626 = -pkin(1) * t709 + t824;
t611 = pkin(2) * t614;
t610 = pkin(5) * (-t821 * t672 - t818 * t673);
t607 = pkin(2) * t812 + qJ(3) * t852;
t606 = t793 - t828 - t900;
t605 = -t818 * t662 + t821 * t664;
t604 = -t818 * t661 + t821 * t663;
t603 = -t821 * t662 - t818 * t664;
t602 = -t821 * t661 - t818 * t663;
t601 = t622 - t898 - t901;
t600 = -t818 * t650 + t821 * t652;
t599 = -t818 * t649 + t821 * t651;
t598 = -t821 * t650 - t818 * t652;
t597 = -t821 * t649 - t818 * t651;
t592 = -qJ(5) * t769 - t816 * t618 - t891;
t591 = t819 * t624 - t816 * t722 - t890;
t588 = pkin(5) * (-t821 * t642 - t818 * t644);
t587 = pkin(5) * (-t821 * t641 - t818 * t643);
t586 = t815 * t595 - t885;
t585 = t814 * t595 + t707;
t584 = -t818 * t631 + t821 * t632;
t583 = -t821 * t631 - t818 * t632;
t579 = t816 * t623 - t874;
t577 = t640 + t843;
t576 = t639 + t842;
t575 = t815 * t596 + t814 * t665;
t572 = -t814 * t630 + t815 * t636 - t886;
t571 = -t814 * t629 + t815 * t635 - t887;
t570 = -t816 * t609 + t819 * t620;
t565 = t815 * t630 + t814 * t636 + t853;
t564 = t815 * t629 + t814 * t635 + t854;
t563 = t669 + t837;
t562 = -pkin(4) * t862 + t815 * t570 - t885;
t561 = pkin(4) * t861 + t814 * t570 + t707;
t560 = t639 + t826;
t559 = t640 + t838;
t558 = t815 * t580 + t814 * t628;
t555 = -pkin(3) * t579 + t899;
t554 = t815 * t591 - t814 * t606 - t886;
t553 = t815 * t592 - t814 * t601 - t887;
t552 = t669 + t839;
t551 = t814 * t591 + t815 * t606 + t853;
t550 = t814 * t592 + t815 * t601 + t854;
t549 = -pkin(1) * t568 - t611;
t548 = -t817 * t585 + t820 * t586 - t892;
t547 = t820 * t585 + t817 * t586 + t668;
t546 = -t817 * t574 + t820 * t575;
t545 = t820 * t574 + t817 * t575;
t544 = pkin(6) * t568 + qJ(3) * t872 - t817 * t607;
t543 = pkin(1) * t812 + pkin(6) * t913 + qJ(3) * t876 + t820 * t607;
t542 = -qJ(3) * t574 - (pkin(3) * t814 - pkin(7) * t815) * t595;
t541 = -pkin(7) * t579 + qJ(5) * t874 - t816 * t582;
t540 = -t817 * t565 + t820 * t572 - t893;
t539 = -t817 * t564 + t820 * t571 - t894;
t538 = t820 * t565 + t817 * t572 + t855;
t537 = t820 * t564 + t817 * t571 + t856;
t536 = -t817 * t561 + t820 * t562 - t892;
t535 = t820 * t561 + t817 * t562 + t668;
t534 = -t817 * t557 + t820 * t558;
t533 = t820 * t557 + t817 * t558;
t532 = qJ(3) * t575 - (-pkin(3) * t815 - pkin(7) * t814 - pkin(2)) * t595;
t531 = -t817 * t551 + t820 * t554 - t893;
t530 = -t817 * t550 + t820 * t553 - t894;
t529 = t820 * t551 + t817 * t554 + t855;
t528 = t820 * t550 + t817 * t553 + t856;
t527 = pkin(1) * t545 + t858;
t526 = -qJ(3) * t557 + t815 * t541 - t814 * t555;
t525 = -pkin(2) * t579 + qJ(3) * t558 + t814 * t541 + t815 * t555;
t524 = pkin(1) * t533 + t827;
t523 = -pkin(6) * t545 - t817 * t532 + t820 * t542;
t522 = pkin(1) * t595 + pkin(6) * t546 + t820 * t532 + t817 * t542;
t521 = -pkin(6) * t533 - t817 * t525 + t820 * t526;
t520 = -pkin(1) * t579 + pkin(6) * t534 + t820 * t525 + t817 * t526;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, qJDD(1), t790, -t789, 0, 0, 0, 0, 0, 0, 0, t808, t695, t694, 0, -t677, 0, 0, 0, 0, 0, t808, t627, t626, 0, t549, t726, t705, t731, t725, t729, 0, t576, t577, t563, t527, t726, t705, t731, t725, t729, 0, t560, t559, t552, t524; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, -t780, 0, t781, 0, t841, t757, -t835, -pkin(5) * t835, 0, 0, -t908, 0, t718, 0, t920, -t922, -t914, -pkin(5) * t914 - pkin(6) * t875 - t821 * t676, 0, 0, -t921, 0, t670, 0, t930, -t931, -t928, -pkin(5) * t928 - t821 * t543 - t818 * t544, t598, t583, t603, t597, t602, t633, -t821 * t537 - t818 * t539 - t897, -t821 * t538 - t818 * t540 - t896, -t821 * t547 - t818 * t548 - t895, -t818 * t523 - t821 * t522 - pkin(5) * (-t818 * t545 + t821 * t546), t598, t583, t603, t597, t602, t633, -t821 * t528 - t818 * t530 - t897, -t821 * t529 - t818 * t531 - t896, -t821 * t535 - t818 * t536 - t895, -t818 * t521 - t821 * t520 - pkin(5) * (-t818 * t533 + t821 * t534); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, -t781, 0, -t780, 0, -t757, t841, t834, pkin(5) * t834, 0, 0, -t718, 0, -t908, 0, t922, t920, t915, pkin(5) * t915 + pkin(6) * t871 - t818 * t676, 0, 0, -t670, 0, -t921, 0, t931, t930, t927, pkin(5) * t927 - t818 * t543 + t821 * t544, t600, t584, t605, t599, t604, t634, -t818 * t537 + t821 * t539 + t587, -t818 * t538 + t821 * t540 + t588, -t818 * t547 + t821 * t548 + t610, t821 * t523 - t818 * t522 + pkin(5) * (-t821 * t545 - t818 * t546), t600, t584, t605, t599, t604, t634, -t818 * t528 + t821 * t530 + t587, -t818 * t529 + t821 * t531 + t588, -t818 * t535 + t821 * t536 + t610, t821 * t521 - t818 * t520 + pkin(5) * (-t821 * t533 - t818 * t534); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t823, 0, 0, -g(1), -t790, 0, 0, 0, -t773, 0, -t770, 0, t910, t748, t680, pkin(6) * t680, 0, 0, -t713, 0, -t709, 0, t919, t656, t568, t544, t652, t632, t664, t651, t663, t685, t539, t540, t548, t523, t652, t632, t664, t651, t663, t685, t530, t531, t536, t521; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t823, 0, qJDD(1), 0, g(1), 0, t789, 0, 0, 0, t770, 0, -t773, 0, -t748, t910, t851, t676, 0, 0, t709, 0, -t713, 0, -t656, t919, t913, t543, t650, t631, t662, t649, t661, t684, t537, t538, t547, t522, t650, t631, t662, t649, t661, t684, t528, t529, t535, t520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t790, -t789, 0, 0, 0, 0, 0, 0, 0, t808, t695, t694, 0, -t677, 0, 0, 0, 0, 0, t808, t627, t626, 0, t549, t726, t705, t731, t725, t729, 0, t576, t577, t563, t527, t726, t705, t731, t725, t729, 0, t560, t559, t552, t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t808, 0, -t807, 0, 0, -g(1), t723, 0, 0, 0, -t767, 0, -t764, 0, t909, t744, t614, qJ(3) * t614, t699, t683, t703, t698, t702, t740, t571, t572, t586, t542, t699, t683, t703, t698, t702, t740, t553, t554, t562, t526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t807, 0, t808, 0, g(1), 0, t724, 0, 0, 0, t764, 0, -t767, 0, -t744, t909, t852, t607, t697, t682, t701, t696, t700, t739, t564, t565, t585, t532, t697, t682, t701, t696, t700, t739, t550, t551, t561, t525; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t808, -t723, -t724, 0, 0, 0, 0, 0, 0, 0, t808, t840, t824, 0, -t611, t726, t705, t731, t725, t729, 0, t842, t843, t837, t858, t726, t705, t731, t725, t729, 0, t826, t838, t839, t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t808, 0, -t807, 0, 0, -t812, t674, 0, t738, t706, t735, t737, t733, t754, t635, t636, t595, pkin(7) * t595, t738, t706, t735, t737, t733, t754, t592, t591, t570, t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t807, 0, t808, 0, t812, 0, t675, 0, t788, -t775, -t799, -t788, -t800, -qJDD(4), t629, t630, 0, pkin(3) * t595, t788, -t775, -t799, -t788, -t800, -qJDD(4), t601, t606, t863, t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t808, -t674, -t675, 0, 0, t726, t705, t731, t725, t729, 0, t859, t860, t844, t870, t726, t705, t731, t725, t729, 0, t831, t845, t846, t832; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t760, t762, t778, -t796, t785, t796, 0, t665, t647, 0, t760, t762, t778, -t796, t785, t796, -qJ(5) * t778, t624, t620, qJ(5) * t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t795, t759, t783, t761, t779, -t795, -t665, 0, t648, 0, t795, t759, t783, t761, t779, -t795, t618, t722, t609, t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t788, t775, t799, t788, t800, qJDD(4), -t647, -t648, 0, 0, -t788, t775, t799, t788, t800, qJDD(4), -0.2e1 * t816 * t864 - t830 - t879 + t898, t828 - 0.2e1 * t857, -t863, -t899; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t760, t762, t778, -t796, t785, t796, 0, t628, t622, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t795, t759, t783, t761, t779, -t795, -t628, 0, t623, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t788, t775, t799, t788, t800, qJDD(4), -t622, -t623, 0, 0;];
m_new_reg = t1;
