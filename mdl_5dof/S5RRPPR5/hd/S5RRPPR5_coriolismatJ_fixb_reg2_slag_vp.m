% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:30
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPPR5_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR5_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR5_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPPR5_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:30:03
% EndTime: 2019-12-31 19:30:09
% DurationCPUTime: 3.49s
% Computational Cost: add. (3922->264), mult. (7269->310), div. (0->0), fcn. (8073->6), ass. (0->207)
t219 = qJD(2) - qJD(5);
t163 = sin(pkin(8));
t165 = sin(qJ(2));
t166 = cos(qJ(2));
t277 = cos(pkin(8));
t198 = t277 * t166;
t143 = t163 * t165 - t198;
t199 = t277 * t165;
t269 = t163 * t166;
t145 = t199 + t269;
t164 = sin(qJ(5));
t288 = cos(qJ(5));
t197 = t164 * t143 + t288 * t145;
t275 = t197 ^ 2;
t303 = -t288 * t143 + t164 * t145;
t276 = t303 ^ 2;
t28 = t275 - t276;
t315 = t28 * qJD(1);
t308 = t197 * qJD(1);
t314 = t303 * t308;
t140 = t143 ^ 2;
t296 = t145 ^ 2;
t81 = t296 - t140;
t313 = t81 * qJD(1);
t312 = t81 * qJD(2);
t236 = t303 * qJD(5);
t311 = t303 * qJD(2) - t236;
t310 = qJD(3) * t197;
t309 = qJD(3) * t303;
t302 = t140 + t296;
t307 = t302 * qJD(1);
t306 = t303 * qJD(1);
t233 = t197 * qJD(5);
t305 = qJD(2) * t197 - t233;
t284 = -qJ(3) - pkin(6);
t188 = t284 * t277;
t149 = t166 * t188;
t202 = t163 * t284;
t193 = t165 * t202;
t111 = -t149 + t193;
t147 = t165 * t188;
t112 = -t284 * t269 - t147;
t113 = t166 * t202 + t147;
t148 = t284 * t198;
t114 = -t148 + t193;
t173 = (t111 - t114) * t145 + (-t112 - t113) * t143;
t304 = qJD(2) * t173 + qJD(3) * t302;
t218 = -t288 / 0.2e1;
t183 = t112 * t145 - t114 * t143;
t300 = qJD(3) * t183;
t299 = t173 * qJD(1);
t298 = t183 * qJD(1);
t295 = pkin(3) / 0.2e1;
t294 = -pkin(3) - pkin(4);
t293 = t197 / 0.2e1;
t292 = -t143 / 0.2e1;
t291 = -t148 / 0.2e1;
t290 = -t164 / 0.2e1;
t289 = t164 / 0.2e1;
t287 = t145 * pkin(3);
t286 = t145 * pkin(7);
t285 = t165 * pkin(2);
t283 = qJD(2) * pkin(2);
t83 = t113 + t286;
t282 = t164 * t83;
t178 = t143 * pkin(7) + t193;
t84 = -t148 + t178;
t281 = t164 * t84;
t175 = -t149 + t178;
t77 = t288 * t175;
t42 = -t77 + t282;
t174 = t112 - t286;
t78 = t288 * t174;
t43 = -t78 + t281;
t170 = t164 * t175;
t214 = t288 * t83;
t44 = t214 + t170;
t169 = t164 * t174;
t213 = t288 * t84;
t45 = t213 + t169;
t2 = (t43 - t44) * t303 + (t42 + t45) * t197;
t280 = t2 * qJD(1);
t160 = -t166 * pkin(2) - pkin(1);
t180 = t145 * qJ(4) - t160;
t65 = t294 * t143 + t180;
t271 = t143 * qJ(4);
t187 = -t271 - t285;
t67 = t294 * t145 + t187;
t3 = t43 * t42 + t45 * t44 + t65 * t67;
t279 = t3 * qJD(1);
t9 = -t197 * t43 + t303 * t45;
t278 = t9 * qJD(1);
t215 = t45 * t288;
t195 = -t215 / 0.2e1;
t40 = t215 / 0.2e1;
t13 = t40 + t195;
t274 = t13 * qJD(1);
t273 = t13 * qJD(4);
t167 = -t169 / 0.2e1 - t213 / 0.2e1;
t190 = t77 / 0.2e1 - t282 / 0.2e1;
t14 = t167 + t190;
t272 = t14 * qJD(1);
t168 = -t170 / 0.2e1 - t214 / 0.2e1;
t189 = t78 / 0.2e1 - t281 / 0.2e1;
t15 = -t168 + t189;
t270 = t15 * qJD(1);
t184 = t112 * t111 + t114 * t113;
t96 = t143 * pkin(3) - t180;
t99 = -t187 + t287;
t18 = t96 * t99 + t184;
t267 = t18 * qJD(1);
t19 = -t197 * t65 + t303 * t67;
t266 = t19 * qJD(1);
t20 = t197 * t67 + t303 * t65;
t265 = t20 * qJD(1);
t161 = t285 / 0.2e1;
t194 = t161 + t271 / 0.2e1;
t172 = (t295 + pkin(4) / 0.2e1) * t145 + t194;
t157 = t163 * pkin(2) + qJ(4);
t159 = -t277 * pkin(2) - pkin(3);
t185 = -pkin(4) + t159;
t119 = t164 * t157 - t288 * t185;
t120 = t288 * t157 + t164 * t185;
t179 = t119 * t293 - t303 * t120 / 0.2e1;
t21 = t172 + t179;
t264 = t21 * qJD(1);
t191 = t303 * t218;
t209 = t288 * t303;
t192 = t209 / 0.2e1;
t25 = t191 + t192 + (t293 - t197 / 0.2e1) * t164;
t261 = t25 * qJD(1);
t27 = -t275 - t276;
t260 = t27 * qJD(1);
t29 = t160 * t285 + t184;
t258 = t29 * qJD(1);
t35 = t99 * t143 + t96 * t145;
t256 = t35 * qJD(1);
t36 = t96 * t143 - t99 * t145;
t255 = t36 * qJD(1);
t176 = -t269 / 0.2e1 - t199 / 0.2e1;
t177 = t197 * t218 + t290 * t303;
t48 = t176 + t177;
t254 = t48 * qJD(1);
t52 = t161 + (t295 - t159 / 0.2e1) * t145 + (qJ(4) / 0.2e1 + t157 / 0.2e1) * t143;
t251 = t52 * qJD(1);
t89 = -t209 / 0.2e1;
t55 = t89 + t192;
t250 = t55 * qJD(1);
t249 = t55 * qJD(4);
t171 = (t163 * t292 - t277 * t145 / 0.2e1) * pkin(2);
t80 = -t285 / 0.2e1 + t171;
t246 = t80 * qJD(1);
t93 = t143 * t285 + t160 * t145;
t243 = t93 * qJD(1);
t94 = -t160 * t143 + t145 * t285;
t242 = t94 * qJD(1);
t239 = qJD(1) * t166;
t230 = t113 * qJD(2);
t229 = t296 * qJD(1);
t228 = t143 * qJD(1);
t132 = t143 * qJD(2);
t227 = t143 * qJD(3);
t226 = t145 * qJD(1);
t134 = t145 * qJD(2);
t225 = t145 * qJD(4);
t155 = -t165 ^ 2 + t166 ^ 2;
t224 = t155 * qJD(1);
t223 = t164 * qJD(2);
t222 = t164 * qJD(4);
t221 = t165 * qJD(2);
t220 = t166 * qJD(2);
t217 = pkin(1) * t165 * qJD(1);
t216 = pkin(1) * t239;
t212 = t65 * t306;
t211 = t65 * t308;
t210 = t65 * t226;
t206 = t197 * t306;
t205 = t303 * t226;
t204 = t197 * t226;
t109 = t143 * t226;
t108 = t143 * t134;
t203 = t165 * t220;
t201 = t288 * qJD(2);
t200 = t288 * qJD(4);
t196 = t42 * t218;
t6 = t196 + t195 + (t44 / 0.2e1 - t43 / 0.2e1) * t164;
t68 = t119 * t164 + t120 * t288;
t186 = -t6 * qJD(1) + t68 * qJD(2);
t110 = t291 + t149 / 0.2e1;
t181 = t110 * qJD(1) + t157 * qJD(2);
t156 = t165 * t239;
t152 = -qJD(5) * t288 + t201;
t151 = t219 * t164;
t136 = t145 * qJD(3);
t105 = t111 * qJD(2);
t85 = t291 - t149 / 0.2e1 + t193;
t79 = t161 + t171;
t54 = t55 * qJD(5);
t53 = t157 * t292 + t159 * t145 / 0.2e1 + t287 / 0.2e1 + t194;
t47 = t176 - t177;
t26 = t191 + t89 + (t289 - t290) * t197;
t22 = t172 - t179;
t17 = -t167 + t190;
t16 = t168 + t189;
t12 = t13 * qJD(5);
t7 = t196 + t40 + (t43 + t44) * t289;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, t155 * qJD(2), 0, -t203, 0, 0, -pkin(1) * t221, -pkin(1) * t220, 0, 0, -t108, -t312, 0, t108, 0, 0, t93 * qJD(2), t94 * qJD(2), t304, t29 * qJD(2) + t300, -t108, 0, t312, 0, 0, t108, t35 * qJD(2) - t143 * t225, t304, t36 * qJD(2) + qJD(4) * t296, t18 * qJD(2) - t96 * t225 + t300, t311 * t197, t219 * t28, 0, -t305 * t303, 0, 0, t19 * qJD(2) + t225 * t303 + t65 * t233, t20 * qJD(2) + t197 * t225 - t65 * t236, t2 * qJD(2) + t27 * qJD(3), t3 * qJD(2) + t9 * qJD(3) + t225 * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156, t224, t220, -t156, -t221, 0, -pkin(6) * t220 - t217, pkin(6) * t221 - t216, 0, 0, -t109, -t313, -t132, t109, -t134, 0, -t105 + t243, -t230 + t242, t299 + (t277 * t143 - t145 * t163) * t283, t258 + (-t277 * t111 + t113 * t163) * t283 + t79 * qJD(3), -t109, -t132, t313, 0, t134, t109, -t105 + t256, t299 + (-t159 * t143 - t157 * t145) * qJD(2) - qJD(4) * t143, t230 + t255, t267 + (t111 * t159 + t113 * t157) * qJD(2) + t53 * qJD(3) + t85 * qJD(4), t206, t315, -t311, -t314, -t305, 0, t42 * qJD(2) + t17 * qJD(5) + t266, t44 * qJD(2) + t16 * qJD(5) + t265, t280 + (t119 * t303 + t120 * t197) * qJD(2) + t26 * qJD(4), t279 + (t42 * t119 + t44 * t120) * qJD(2) + t22 * qJD(3) + t7 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t307, t79 * qJD(2) + t298, 0, 0, 0, 0, 0, 0, 0, t307, 0, t53 * qJD(2) + t298, 0, 0, 0, 0, 0, 0, 0, 0, t260, t22 * qJD(2) + t47 * qJD(4) + t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t109, -t132, t229, t85 * qJD(2) - t96 * t226, 0, 0, 0, 0, 0, 0, t205, t204, t26 * qJD(2) + t54, t7 * qJD(2) + t47 * qJD(3) + t12 + t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t314, -t315, t311, t314, t305, 0, t17 * qJD(2) - t45 * qJD(5) + t211, t16 * qJD(2) + t43 * qJD(5) - t212, t249, t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, -t224, 0, t156, 0, 0, t217, t216, 0, 0, t109, t313, 0, -t109, 0, 0, -t136 - t243, t227 - t242, -t299, t80 * qJD(3) - t258, t109, 0, -t313, 0, 0, -t109, -t136 - t256, -t299, -t227 - t255, -t52 * qJD(3) + t110 * qJD(4) - t267, -t206, -t315, 0, t314, 0, 0, -t14 * qJD(5) - t266 - t310, t15 * qJD(5) - t265 + t309, -t25 * qJD(4) - t280, -t21 * qJD(3) - t6 * qJD(4) - t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t157 * qJD(4), 0, 0, 0, 0, 0, 0, t120 * qJD(5) + t222, -t119 * qJD(5) + t200, 0, t68 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t226, t228, 0, t246, 0, 0, 0, 0, 0, 0, -t226, 0, -t228, -t251, 0, 0, 0, 0, 0, 0, -t308, t306, 0, -t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t181, 0, 0, 0, 0, 0, 0, t223, t201, -t261, t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219 * t120 - t272, -t219 * t119 + t270, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134, -t132, -t307, -t80 * qJD(2) - t298, 0, 0, 0, 0, 0, 0, t134, -t307, t132, t52 * qJD(2) - t225 - t298, 0, 0, 0, 0, 0, 0, t305, -t311, -t260, t21 * qJD(2) + t48 * qJD(4) - t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t226, -t228, 0, -t246, 0, 0, 0, 0, 0, 0, t226, 0, t228, t251, 0, 0, 0, 0, 0, 0, t308, -t306, 0, t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t226, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t308, t306, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, 0, -t229, -t110 * qJD(2) + (qJD(1) * t96 + qJD(3)) * t145, 0, 0, 0, 0, 0, 0, -t205, -t204, t25 * qJD(2) + t54, t6 * qJD(2) - t48 * qJD(3) + t12 - t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t181, 0, 0, 0, 0, 0, 0, -t151, -t152, t261, -t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t226, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, t152, t250, t274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t314, t315, 0, -t314, 0, 0, t14 * qJD(2) - t211 + t310, -t15 * qJD(2) + t212 - t309, -t249, -t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t120 * qJD(2) - t222 + t272, t119 * qJD(2) - t200 - t270, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t308, -t306, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t223, -t201, -t250, -t274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
