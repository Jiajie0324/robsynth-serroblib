% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:55
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:54:40
% EndTime: 2019-12-31 21:54:59
% DurationCPUTime: 12.73s
% Computational Cost: add. (11123->645), mult. (22420->801), div. (0->0), fcn. (22946->6), ass. (0->483)
t428 = sin(qJ(2));
t690 = cos(qJ(3));
t548 = t690 * t428;
t427 = sin(qJ(3));
t430 = cos(qJ(2));
t609 = t427 * t430;
t385 = t548 + t609;
t382 = t385 ^ 2;
t426 = sin(qJ(4));
t424 = t426 ^ 2;
t429 = cos(qJ(4));
t425 = t429 ^ 2;
t407 = t425 - t424;
t237 = t407 * t382;
t566 = qJD(2) + qJD(3);
t729 = t566 * t429;
t741 = t426 * t729;
t456 = 0.2e1 * t741 * t385;
t139 = t237 * qJD(1) + t456;
t417 = -t430 * pkin(2) - pkin(1);
t610 = t427 * t428;
t383 = -t690 * t430 + t610;
t493 = t383 * pkin(3) - t385 * pkin(8);
t453 = t417 + t493;
t716 = -pkin(7) - pkin(6);
t398 = t716 * t430;
t387 = t690 * t398;
t503 = t716 * t610;
t727 = -t387 + t503;
t738 = t727 * t426;
t155 = -t429 * t453 + t738;
t608 = t429 * qJ(5);
t127 = t385 * t608 + t155;
t688 = t383 * pkin(4);
t109 = -t127 + t688;
t226 = t426 * t383;
t355 = pkin(4) * t226;
t736 = -t355 + t727;
t746 = t736 * t426;
t749 = (t109 + t746) * t385;
t737 = t727 * t429;
t156 = t426 * t453 + t737;
t614 = t426 * qJ(5);
t128 = -t385 * t614 + t156;
t745 = t736 * t429;
t748 = (-t128 + t745) * t385;
t510 = -t427 * t398 - t716 * t548;
t739 = t510 * t429;
t709 = t739 / 0.2e1;
t740 = t510 * t426;
t249 = t740 / 0.2e1;
t626 = t385 * t426;
t190 = pkin(4) * t626 + t510;
t747 = t190 * t736;
t515 = t424 / 0.2e1 - t425 / 0.2e1;
t225 = t515 * t385;
t174 = -t225 * qJD(1) + t741;
t744 = (-t155 + t738) * t385;
t743 = (-t156 + t737) * t385;
t372 = t385 * pkin(4);
t708 = -t510 / 0.2e1;
t742 = (t190 / 0.2e1 + t708) * t426 - t372;
t689 = t727 * pkin(3);
t641 = t510 * t727;
t422 = qJD(4) * t429;
t521 = t127 / 0.2e1 + t109 / 0.2e1;
t454 = (t688 / 0.2e1 + t521) * t429;
t721 = t454 * qJD(1);
t735 = -pkin(4) * t422 - t721;
t734 = -t355 / 0.2e1 + t503 / 0.2e1;
t733 = t566 * t510;
t731 = t383 * t566;
t406 = t425 + t424;
t730 = t566 * t406;
t728 = t109 + t127;
t565 = -t383 ^ 2 + t382;
t686 = t385 * pkin(3);
t687 = t383 * pkin(8);
t263 = t686 + t687;
t684 = t428 * pkin(2);
t233 = t263 + t684;
t211 = t429 * t233;
t162 = t211 + t740;
t210 = t426 * t233;
t163 = -t739 + t210;
t239 = t429 * t263;
t166 = t239 + t740;
t238 = t426 * t263;
t167 = -t739 + t238;
t34 = (t167 / 0.2e1 - t163 / 0.2e1) * t429 + (-t166 / 0.2e1 + t162 / 0.2e1) * t426;
t455 = t406 * t690;
t365 = t455 * pkin(2);
t575 = t365 * qJD(2);
t726 = -t34 * qJD(1) - t575;
t229 = t429 * t383;
t492 = qJ(5) * t229 + t372;
t118 = t166 + t492;
t552 = qJ(5) * t226;
t132 = t552 + t163;
t135 = t552 + t167;
t682 = pkin(8) + qJ(5);
t395 = t682 * t429;
t698 = -t395 / 0.2e1;
t685 = t427 * pkin(2);
t414 = pkin(8) + t685;
t599 = qJ(5) + t414;
t367 = t599 * t429;
t704 = t367 / 0.2e1;
t517 = t704 + t698;
t394 = t682 * t426;
t699 = t394 / 0.2e1;
t366 = t599 * t426;
t706 = -t366 / 0.2e1;
t518 = t706 + t699;
t111 = t162 + t492;
t715 = t111 / 0.2e1;
t9 = (t135 / 0.2e1 - t132 / 0.2e1) * t429 + (-t118 / 0.2e1 + t715) * t426 + (t517 * t426 + t518 * t429) * t383;
t725 = -t9 * qJD(1) - t575;
t723 = qJD(4) * t454;
t522 = t229 / 0.2e1;
t675 = t109 * t429;
t692 = -t429 / 0.2e1;
t450 = pkin(4) * t522 + t127 * t692 - t675 / 0.2e1;
t722 = t450 * qJD(4);
t611 = t426 * t429;
t553 = t385 * t611;
t655 = t190 * t429;
t498 = -pkin(4) * t553 - t655 / 0.2e1;
t380 = -t387 / 0.2e1;
t720 = t380 + t734;
t702 = t387 / 0.2e1;
t719 = t702 - t734;
t598 = -t210 / 0.2e1 + t709;
t589 = qJD(1) * t429;
t629 = t382 * t426;
t119 = t566 * t225 + t589 * t629;
t539 = t385 * t589;
t262 = t383 * t539;
t102 = t566 * t226 + t262;
t199 = t566 * t407 - 0.2e1 * t426 * t539;
t717 = pkin(8) / 0.2e1;
t714 = t118 / 0.2e1;
t712 = t736 / 0.2e1;
t711 = -t211 / 0.2e1;
t710 = -t239 / 0.2e1;
t705 = -t367 / 0.2e1;
t703 = t383 / 0.2e1;
t562 = t690 * pkin(2);
t415 = -t562 - pkin(3);
t683 = t429 * pkin(4);
t393 = t415 - t683;
t701 = -t393 / 0.2e1;
t700 = -t394 / 0.2e1;
t697 = -t415 / 0.2e1;
t696 = t415 / 0.2e1;
t416 = -pkin(3) - t683;
t695 = -t416 / 0.2e1;
t694 = -t426 / 0.2e1;
t693 = t427 / 0.2e1;
t691 = t429 / 0.2e1;
t681 = pkin(2) * qJD(3);
t680 = pkin(3) * qJD(3);
t679 = qJD(2) * pkin(2);
t83 = t155 * t383 - t510 * t626;
t677 = qJD(1) * t83;
t624 = t385 * t429;
t84 = -t156 * t383 + t510 * t624;
t676 = qJD(1) * t84;
t11 = t109 * t111 + t128 * t132 + t747;
t674 = t11 * qJD(1);
t673 = t111 * t426;
t672 = t118 * t426;
t669 = t132 * t429;
t668 = t135 * t429;
t14 = t109 * t118 + t128 * t135 + t747;
t667 = t14 * qJD(1);
t665 = t162 * t426;
t664 = t163 * t429;
t663 = t166 * t426;
t662 = t167 * t429;
t480 = t128 * t426 + t675;
t461 = t480 * t383;
t17 = (t111 * t429 + t132 * t426) * t385 - t461;
t661 = t17 * qJD(1);
t18 = (t118 * t429 + t135 * t426) * t385 - t461;
t660 = t18 * qJD(1);
t19 = t728 * t626;
t657 = t19 * qJD(1);
t656 = t190 * t426;
t564 = pkin(4) * t624;
t20 = -t128 * t728 + t190 * t564;
t652 = t20 * qJD(1);
t21 = t749 + (t111 - t656) * t383;
t651 = t21 * qJD(1);
t22 = t749 + (t118 - t656) * t383;
t650 = t22 * qJD(1);
t460 = (t155 * t429 - t156 * t426) * t383;
t23 = (t162 * t429 + t163 * t426) * t385 + t460;
t649 = t23 * qJD(1);
t24 = (t166 * t429 + t167 * t426) * t385 + t460;
t648 = t24 * qJD(1);
t25 = -t155 * t162 + t156 * t163 + t641;
t647 = t25 * qJD(1);
t26 = -t155 * t166 + t156 * t167 + t641;
t646 = t26 * qJD(1);
t27 = t748 + (-t132 - t655) * t383;
t645 = t27 * qJD(1);
t28 = t748 + (-t135 - t655) * t383;
t644 = t28 * qJD(1);
t36 = t744 + (t162 - t740) * t383;
t638 = t36 * qJD(1);
t637 = t366 * t385;
t636 = t366 * t426;
t635 = t366 * t429;
t634 = t367 * t385;
t633 = t367 * t426;
t632 = t367 * t429;
t37 = t743 + (-t163 - t739) * t383;
t631 = t37 * qJD(1);
t38 = t744 + (t166 - t740) * t383;
t630 = t38 * qJD(1);
t628 = t383 * t415;
t627 = t385 * t414;
t625 = t385 * t427;
t39 = t743 + (-t167 - t739) * t383;
t623 = t39 * qJD(1);
t381 = t393 * t426;
t622 = t393 * t429;
t621 = t394 * t385;
t620 = t394 * t426;
t619 = t394 * t429;
t618 = t395 * t385;
t617 = t395 * t426;
t616 = t395 * t429;
t400 = t416 * t426;
t615 = t416 * t429;
t502 = -t562 / 0.2e1;
t472 = t502 + t701;
t534 = t625 / 0.2e1;
t437 = pkin(2) * t534 + (t416 / 0.2e1 + t472) * t383;
t520 = t712 - t736 / 0.2e1;
t43 = t518 * t385 + t437 * t426 - t520 * t429;
t606 = t43 * qJD(1);
t48 = t480 * t385;
t605 = t48 * qJD(1);
t471 = t502 + t697;
t554 = t685 / 0.2e1;
t433 = (-t414 / 0.2e1 + t554 + t717) * t385 + (-pkin(3) / 0.2e1 + t471) * t383;
t53 = t433 * t426;
t604 = t53 * qJD(1);
t57 = -t128 * t383 + (pkin(4) * t629 + t190 * t385) * t429;
t603 = t57 * qJD(1);
t58 = t425 * t382 * pkin(4) + t127 * t383 - t190 * t626;
t602 = t58 * qJD(1);
t90 = t417 * t684;
t600 = t90 * qJD(1);
t597 = t211 / 0.2e1 + t249;
t596 = -t238 / 0.2e1 + t709;
t357 = t365 * qJD(3);
t396 = t406 * qJD(5);
t595 = t357 + t396;
t208 = t383 * t684 + t417 * t385;
t594 = qJD(1) * t208;
t209 = -t417 * t383 + t385 * t684;
t593 = qJD(1) * t209;
t592 = qJD(1) * t383;
t591 = qJD(1) * t385;
t590 = qJD(1) * t417;
t588 = qJD(1) * t430;
t587 = qJD(2) * t415;
t586 = qJD(3) * t417;
t585 = qJD(4) * t128;
t195 = qJD(4) * t426;
t185 = t565 * t426;
t584 = t185 * qJD(1);
t186 = t565 * t429;
t583 = t186 * qJD(1);
t582 = t565 * qJD(1);
t580 = t225 * qJD(4);
t579 = t226 * qJD(1);
t222 = t229 * qJD(1);
t236 = t406 * t382;
t578 = t236 * qJD(1);
t281 = t702 + t380;
t576 = t281 * qJD(1);
t574 = t367 * qJD(4);
t374 = t548 / 0.2e1 + t609 / 0.2e1;
t573 = t374 * qJD(1);
t572 = t395 * qJD(4);
t408 = -t428 ^ 2 + t430 ^ 2;
t571 = t408 * qJD(1);
t570 = t426 * qJD(5);
t569 = t428 * qJD(2);
t568 = t429 * qJD(5);
t567 = t430 * qJD(2);
t563 = pkin(4) * t611;
t561 = pkin(1) * t428 * qJD(1);
t560 = pkin(1) * t588;
t559 = t427 * t681;
t557 = pkin(4) * t570;
t556 = t427 * t679;
t555 = pkin(8) * t694;
t551 = t426 * t690;
t550 = t429 * t690;
t549 = t690 * t383;
t547 = t385 * t195;
t546 = t385 * t422;
t545 = t383 * t591;
t544 = t383 * t590;
t543 = t385 * t590;
t411 = t426 * t422;
t542 = t426 * t591;
t541 = t385 * t570;
t540 = t428 * t567;
t538 = t385 * t568;
t537 = -t656 / 0.2e1;
t536 = t656 / 0.2e1;
t533 = t385 * t701;
t532 = t381 / 0.2e1;
t531 = t622 / 0.2e1;
t530 = t385 * t695;
t529 = t400 / 0.2e1;
t528 = t615 / 0.2e1;
t527 = -t614 / 0.2e1;
t526 = -t226 / 0.2e1;
t525 = t226 / 0.2e1;
t524 = -t608 / 0.2e1;
t523 = -t229 / 0.2e1;
t516 = -t400 / 0.2e1 - t381 / 0.2e1;
t514 = t690 * qJD(2);
t513 = t690 * qJD(3);
t403 = t426 * t556;
t45 = -t517 * t385 + t520 * t426 + t437 * t429;
t512 = -t45 * qJD(1) - t403;
t56 = t433 * t429;
t511 = -t56 * qJD(1) - t403;
t261 = t566 * t385;
t507 = t566 * t426;
t505 = t429 * t559;
t504 = t564 / 0.2e1;
t501 = t382 * t411;
t497 = -t551 / 0.2e1;
t496 = t550 / 0.2e1;
t494 = t515 * pkin(4);
t491 = t262 + t546;
t490 = t383 * t261;
t171 = t385 * t731;
t487 = pkin(2) * t497;
t486 = t429 * t502;
t484 = qJ(5) * t522 + t372 + t536;
t142 = pkin(4) * t381;
t3 = t521 * t367 + (t429 * t533 + t537 + t715) * pkin(4);
t483 = -t3 * qJD(1) + t142 * qJD(2);
t169 = (t366 * t551 + t367 * t550 + t393 * t427) * pkin(2);
t432 = (t109 * t497 + t128 * t496 + t190 * t693) * pkin(2) + t118 * t706 + t135 * t704 + t393 * t712;
t443 = t111 * t699 + t132 * t698 + t695 * t736;
t2 = t432 + t443;
t482 = t2 * qJD(1) + t169 * qJD(2);
t223 = (t414 * t455 + t415 * t427) * pkin(2);
t466 = t662 / 0.2e1 - t663 / 0.2e1;
t431 = t466 * t414 + (t156 * t496 + t155 * t551 / 0.2e1 + t510 * t693) * pkin(2) + t727 * t696;
t467 = -t664 / 0.2e1 + t665 / 0.2e1;
t8 = t689 / 0.2e1 + t467 * pkin(8) + t431;
t481 = -t8 * qJD(1) - t223 * qJD(2);
t479 = t664 - t665;
t478 = t662 - t663;
t477 = -t627 - t628;
t215 = t632 + t636;
t465 = t633 / 0.2e1 - t635 / 0.2e1;
t468 = t109 * t694 + t128 * t691;
t436 = -t385 * t465 + t468;
t30 = t436 + t719;
t476 = t30 * qJD(1) + t215 * qJD(2);
t319 = -t381 + t563;
t442 = (t531 + t494) * t385;
t41 = t711 + (t705 + t524) * t383 + t442 + t742;
t475 = t41 * qJD(1) - t319 * qJD(2);
t423 = t424 * pkin(4);
t333 = t423 + t622;
t49 = t385 * t532 + (t527 + t706) * t383 + t498 + t598;
t474 = -t49 * qJD(1) + t333 * qJD(2);
t404 = t429 * t556;
t473 = -t404 - t505;
t470 = t687 / 0.2e1 + t686 / 0.2e1;
t469 = qJ(5) * t526 - t498;
t464 = t385 * t697 + t414 * t703;
t451 = t464 * t429;
t72 = t711 - t451 + (t510 / 0.2e1 + t708) * t426;
t463 = -t72 * qJD(1) - t426 * t587;
t439 = t464 * t426 + t709;
t70 = t439 - t598;
t462 = -t70 * qJD(1) - t429 * t587;
t85 = (-qJD(4) - t592) * t626;
t187 = t374 * qJD(4) + t545;
t459 = pkin(3) / 0.2e1 + t471;
t458 = t695 + t472;
t457 = t470 * t429;
t176 = pkin(4) * t400;
t5 = t521 * t395 + (t429 * t530 + t537 + t714) * pkin(4);
t74 = t458 * t426 * pkin(4);
t452 = -t5 * qJD(1) - t74 * qJD(2) + t176 * qJD(3);
t153 = t554 + (t698 + t705) * t429 + (t700 + t706) * t426;
t289 = t616 + t620;
t435 = (-t617 / 0.2e1 + t619 / 0.2e1) * t385 + t468;
t32 = t435 + t719;
t449 = t32 * qJD(1) - t153 * qJD(2) + t289 * qJD(3);
t202 = (t502 + t683) * t426 + t516;
t356 = -t400 + t563;
t441 = (t528 + t494) * t385;
t47 = t710 + (t698 + t524) * t383 + t441 + t742;
t448 = t47 * qJD(1) - t202 * qJD(2) - t356 * qJD(3);
t212 = t429 * t458 - t423;
t373 = t423 + t615;
t51 = t385 * t529 + (t527 + t700) * t383 + t498 + t596;
t447 = -t51 * qJD(1) - t212 * qJD(2) + t373 * qJD(3);
t272 = -t729 + t542;
t273 = t507 + t539;
t446 = (-t549 / 0.2e1 + t534) * pkin(2);
t315 = t459 * t426;
t78 = t710 - t457;
t445 = -t78 * qJD(1) + t315 * qJD(2) + t426 * t680;
t316 = t459 * t429;
t440 = t470 * t426 + t709;
t76 = -t739 / 0.2e1 + t238 / 0.2e1 + t440;
t444 = -t76 * qJD(1) + t316 * qJD(2) + t429 * t680;
t438 = t383 * t701 + t446;
t434 = -t627 / 0.2e1 - t628 / 0.2e1 + t446;
t421 = pkin(4) * t195;
t412 = t428 * t588;
t405 = t426 * t559;
t397 = t407 * qJD(4);
t353 = t383 * t568;
t318 = pkin(3) * t692 + t415 * t691 + t486;
t317 = pkin(3) * t694 + t426 * t696 + t487;
t259 = t273 * pkin(4);
t234 = t566 * t374;
t231 = t239 / 0.2e1;
t218 = t226 * qJD(5);
t213 = t423 + t528 + t531 + t486;
t203 = (t502 - t683) * t426 - t516;
t201 = 0.2e1 * t702 - t503;
t196 = t422 + t222;
t194 = -t579 - t195;
t177 = pkin(4) * t536;
t170 = 0.2e1 * t429 * t85;
t158 = t425 * t545 - t580;
t157 = t424 * t545 + t580;
t154 = t616 / 0.2e1 + t632 / 0.2e1 + t620 / 0.2e1 + t636 / 0.2e1 + t554;
t134 = -t425 * t490 - t501;
t133 = -t424 * t490 + t501;
t130 = qJD(4) * t229 - t583;
t129 = -qJD(4) * t226 + t584;
t107 = -t237 * qJD(4) + t383 * t456;
t101 = -t566 * t229 + t383 * t542;
t96 = -t580 + (-t425 * t591 - t741) * t383;
t95 = t580 + (-t424 * t591 + t741) * t383;
t88 = t385 * t507 + t583;
t87 = t385 * t729 - t584;
t82 = 0.2e1 * (-qJD(4) + t592) * t553 - t407 * t731;
t81 = t566 * t186 - t383 * t547;
t80 = -t566 * t185 - t383 * t546;
t79 = 0.2e1 * t249 + t231 - t457;
t77 = t440 + t596;
t75 = (t487 + t529 + t532) * pkin(4);
t73 = t249 - t451 + t597;
t71 = t439 + t598;
t55 = t738 - pkin(8) * t624 / 0.2e1 + pkin(3) * t522 + t434 * t429;
t54 = pkin(3) * t525 + t385 * t555 + t434 * t426 - t737;
t52 = t383 * t699 + t426 * t530 + t469 + t596;
t50 = t366 * t703 + t426 * t533 + t469 + t598;
t46 = t383 * t698 + t231 + t249 + t441 + t484;
t44 = -t634 / 0.2e1 + t746 - t618 / 0.2e1 + t416 * t523 + t438 * t429;
t42 = -t637 / 0.2e1 - t745 - t621 / 0.2e1 + t416 * t526 + t438 * t426;
t40 = t383 * t705 + t442 + t484 + t597;
t33 = t466 - t467;
t31 = t435 + t720;
t29 = t436 + t720;
t10 = t668 / 0.2e1 - t672 / 0.2e1 + t395 * t525 + t669 / 0.2e1 + t394 * t523 - t673 / 0.2e1 + t465 * t383;
t7 = t664 * t717 + t162 * t555 - t689 / 0.2e1 + t431;
t6 = pkin(4) * t714 + t416 * t504 + t698 * t728 + t177;
t4 = pkin(4) * t715 + t393 * t504 + t705 * t728 + t177;
t1 = t432 - t443;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t540, t408 * qJD(2), 0, -t540, 0, 0, -pkin(1) * t569, -pkin(1) * t567, 0, 0, -t490, -t566 * t565, 0, t171, 0, 0, t208 * qJD(2) + t385 * t586, t209 * qJD(2) - t383 * t586, 0, qJD(2) * t90, t134, t107, t81, t133, t80, t171, qJD(2) * t36 + qJD(3) * t38 + qJD(4) * t84, qJD(2) * t37 + qJD(3) * t39 + qJD(4) * t83, -qJD(2) * t23 - qJD(3) * t24, qJD(2) * t25 + qJD(3) * t26, t134, t107, t81, t133, t80, t171, t21 * qJD(2) + t22 * qJD(3) + t57 * qJD(4) - t383 * t538, t27 * qJD(2) + t28 * qJD(3) + t58 * qJD(4) + t383 * t541, -qJD(2) * t17 - qJD(3) * t18 + qJD(4) * t19 + qJD(5) * t236, qJD(2) * t11 + qJD(3) * t14 + qJD(4) * t20 - qJD(5) * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t412, t571, t567, -t412, -t569, 0, -pkin(6) * t567 - t561, pkin(6) * t569 - t560, 0, 0, -t545, -t582, -t731, t545, -t261, 0, -qJD(2) * t727 + qJD(3) * t201 + t594, t593 + t733, (t549 - t625) * t679, t600 + (-t427 * t510 - t690 * t727) * t679, t96, t82, t88, t95, t87, t187, t638 + (t426 * t477 - t737) * qJD(2) + t54 * qJD(3) + t73 * qJD(4), t631 + (t429 * t477 + t738) * qJD(2) + t55 * qJD(3) + t71 * qJD(4), qJD(2) * t479 + t33 * qJD(3) - t649, t647 + (t414 * t479 + t415 * t727) * qJD(2) + t7 * qJD(3), t96, t82, t88, t95, t87, t187, t651 + (-t226 * t393 - t637 - t745) * qJD(2) + t42 * qJD(3) + t40 * qJD(4) - t218, t645 + (-t229 * t393 - t634 + t746) * qJD(2) + t44 * qJD(3) + t50 * qJD(4) - t353, -t661 + (-t673 + t669 + (t633 - t635) * t383) * qJD(2) + t10 * qJD(3) + t722, t674 + (-t111 * t366 + t132 * t367 + t393 * t736) * qJD(2) + t1 * qJD(3) + t4 * qJD(4) + t29 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t545, -t582, -t731, t545, -t261, 0, t201 * qJD(2) - qJD(3) * t727 + t543, -t544 + t733, 0, 0, t96, t82, t88, t95, t87, t187, t630 + t54 * qJD(2) + (t426 * t493 - t737) * qJD(3) + t79 * qJD(4), t623 + t55 * qJD(2) + (t429 * t493 + t738) * qJD(3) + t77 * qJD(4), t33 * qJD(2) + qJD(3) * t478 - t648, t646 + t7 * qJD(2) + (pkin(8) * t478 - t689) * qJD(3), t96, t82, t88, t95, t87, t187, t650 + t42 * qJD(2) + (-t226 * t416 - t621 - t745) * qJD(3) + t46 * qJD(4) - t218, t644 + t44 * qJD(2) + (-t229 * t416 - t618 + t746) * qJD(3) + t52 * qJD(4) - t353, -t660 + t10 * qJD(2) + (-t672 + t668 + (t617 - t619) * t383) * qJD(3) + t722, t667 + t1 * qJD(2) + (-t118 * t394 + t135 * t395 + t416 * t736) * qJD(3) + t6 * qJD(4) + t31 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, -t139, t85, t119, -t491, t234, qJD(2) * t73 + qJD(3) * t79 - qJD(4) * t156 + t676, qJD(2) * t71 + qJD(3) * t77 + qJD(4) * t155 + t677, 0, 0, -t119, -t139, t85, t119, -t491, t234, qJD(2) * t40 + qJD(3) * t46 - t585 + t603, qJD(2) * t50 + qJD(3) * t52 + qJD(4) * t127 + t602, pkin(4) * t547 + t450 * t566 + t657, -pkin(4) * t585 + qJD(2) * t4 + qJD(3) * t6 + t652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, t272 * t383, t578, qJD(2) * t29 + qJD(3) * t31 - t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t412, -t571, 0, t412, 0, 0, t561, t560, 0, 0, t545, t582, 0, -t545, 0, 0, qJD(3) * t281 - t594, -t593, 0, -t600, t158, t170, t130, t157, t129, -t187, qJD(3) * t53 + qJD(4) * t72 - t638, qJD(3) * t56 + qJD(4) * t70 - t631, qJD(3) * t34 + t649, qJD(3) * t8 - t647, t158, t170, t130, t157, t129, -t187, qJD(3) * t43 + qJD(4) * t41 - t651, qJD(3) * t45 - qJD(4) * t49 - t645, qJD(3) * t9 + t661 - t723, qJD(3) * t2 - qJD(4) * t3 + qJD(5) * t30 - t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t559, -pkin(2) * t513, 0, 0, t411, t397, 0, -t411, 0, 0, t195 * t415 - t505, t415 * t422 + t405, t357, t223 * qJD(3), t411, t397, 0, -t411, 0, 0, -t319 * qJD(4) - t505, t333 * qJD(4) + t405, t595, qJD(3) * t169 + qJD(4) * t142 + qJD(5) * t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t566 * t685 + t576, (-t514 - t513) * pkin(2), 0, 0, t411, t397, 0, -t411, 0, 0, t317 * qJD(4) + t473 + t604, t318 * qJD(4) + t405 - t511, t357 - t726, (-pkin(3) * t427 + pkin(8) * t455) * t681 - t481, t411, t397, 0, -t411, 0, 0, t203 * qJD(4) + t473 + t606, t213 * qJD(4) + t405 - t512, t595 - t725, (t394 * t551 + t395 * t550 + t416 * t427) * t681 + t75 * qJD(4) + t154 * qJD(5) + t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, t199, t196, -t174, t194, -t573, t317 * qJD(3) - t414 * t422 - t463, t318 * qJD(3) + t195 * t414 - t462, 0, 0, t174, t199, t196, -t174, t194, -t573, t203 * qJD(3) + t475 - t574, t213 * qJD(3) + t366 * qJD(4) + t474, t735, -pkin(4) * t574 + t75 * qJD(3) + t483; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t730, qJD(3) * t154 + t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t545, t582, 0, -t545, 0, 0, -t281 * qJD(2) - t543, t544, 0, 0, t158, t170, t130, t157, t129, -t187, -qJD(2) * t53 + qJD(4) * t78 - t630, -qJD(2) * t56 + qJD(4) * t76 - t623, -qJD(2) * t34 + t648, -qJD(2) * t8 - t646, t158, t170, t130, t157, t129, -t187, -qJD(2) * t43 + qJD(4) * t47 - t650, -qJD(2) * t45 - qJD(4) * t51 - t644, -qJD(2) * t9 + t660 - t723, -qJD(2) * t2 - qJD(4) * t5 + qJD(5) * t32 - t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t556 - t576, pkin(2) * t514, 0, 0, t411, t397, 0, -t411, 0, 0, -t315 * qJD(4) + t404 - t604, -t316 * qJD(4) + t511, t726, t481, t411, t397, 0, -t411, 0, 0, -t202 * qJD(4) + t404 - t606, -t212 * qJD(4) + t512, t396 + t725, -qJD(4) * t74 - qJD(5) * t153 - t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t411, t397, 0, -t411, 0, 0, -pkin(3) * t195, -pkin(3) * t422, 0, 0, t411, t397, 0, -t411, 0, 0, -t356 * qJD(4), t373 * qJD(4), t396, qJD(4) * t176 + qJD(5) * t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, t199, t196, -t174, t194, -t573, -pkin(8) * t422 - t445, pkin(8) * t195 - t444, 0, 0, t174, t199, t196, -t174, t194, -t573, t448 - t572, t394 * qJD(4) + t447, t735, -pkin(4) * t572 + t452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t730, t449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t139, t101, -t119, t102, t234, -qJD(2) * t72 - qJD(3) * t78 - t676, -qJD(2) * t70 - qJD(3) * t76 - t677, 0, 0, t119, t139, t101, -t119, t102, t234, -t41 * qJD(2) - t47 * qJD(3) - t538 - t603, t49 * qJD(2) + t51 * qJD(3) + t541 - t602, t454 * t566 - t657, -pkin(4) * t538 + t3 * qJD(2) + t5 * qJD(3) - t652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174, -t199, -t222, t174, t579, t573, t315 * qJD(3) + t463, t316 * qJD(3) + t462, 0, 0, -t174, -t199, -t222, t174, t579, t573, t202 * qJD(3) - t475 - t570, t212 * qJD(3) - t474 - t568, t721, t74 * qJD(3) - t483 - t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174, -t199, -t222, t174, t579, t573, t445, t444, 0, 0, -t174, -t199, -t222, t174, t579, t573, -t448 - t570, -t447 - t568, t721, -t452 - t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t273, t272, 0, -t259; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t491, t85, -t578, pkin(4) * t546 - t30 * qJD(2) - t32 * qJD(3) + t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195, t422, -t730, t153 * qJD(3) + t421 - t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195, t422, -t730, t421 - t449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273, -t272, 0, t259; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t12;
