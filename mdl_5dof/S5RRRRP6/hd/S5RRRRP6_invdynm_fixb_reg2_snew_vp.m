% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRP6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:55
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRP6_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP6_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP6_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP6_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP6_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP6_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:54:56
% EndTime: 2019-12-31 21:55:11
% DurationCPUTime: 15.23s
% Computational Cost: add. (76251->628), mult. (156002->786), div. (0->0), fcn. (109525->8), ass. (0->438)
t1148 = sin(qJ(3));
t1149 = sin(qJ(2));
t1152 = cos(qJ(3));
t1153 = cos(qJ(2));
t1113 = (t1148 * t1153 + t1149 * t1152) * qJD(1);
t1147 = sin(qJ(4));
t1151 = cos(qJ(4));
t1216 = qJD(2) + qJD(3);
t1082 = t1147 * t1113 - t1151 * t1216;
t1084 = t1151 * t1113 + t1147 * t1216;
t1047 = t1084 * t1082;
t1236 = qJD(1) * t1153;
t1140 = qJD(2) * t1236;
t1213 = t1149 * qJDD(1);
t1120 = t1140 + t1213;
t1237 = qJD(1) * t1149;
t1198 = qJD(2) * t1237;
t1211 = t1153 * qJDD(1);
t1169 = -t1198 + t1211;
t1191 = t1148 * t1120 - t1152 * t1169;
t1171 = -t1113 * qJD(3) - t1191;
t1165 = qJDD(4) - t1171;
t1278 = t1047 - t1165;
t1281 = t1278 * pkin(4);
t1229 = t1147 * t1278;
t1111 = t1148 * t1237 - t1152 * t1236;
t1071 = t1113 * t1111;
t1209 = qJDD(2) + qJDD(3);
t1272 = -t1071 + t1209;
t1280 = t1148 * t1272;
t1221 = t1151 * t1278;
t1279 = t1152 * t1272;
t1168 = 0.2e1 * t1198 - t1211;
t1085 = t1168 * t1153;
t1051 = -t1111 * qJD(3) + t1152 * t1120 + t1148 * t1169;
t1103 = t1216 * t1111;
t1277 = -t1103 + t1051;
t1208 = t1216 ^ 2;
t1079 = t1082 ^ 2;
t1080 = t1084 ^ 2;
t1012 = -t1079 - t1080;
t1235 = qJD(5) * t1082;
t1074 = -0.2e1 * t1235;
t1192 = t1147 * t1051 - t1151 * t1209;
t1009 = -t1084 * qJD(4) - t1192;
t1107 = qJD(4) + t1111;
t1054 = t1107 * pkin(4) - t1084 * qJ(5);
t1022 = (0.2e1 * qJD(3) + qJD(2)) * t1113 + t1191;
t1146 = t1153 ^ 2;
t1156 = qJD(1) ^ 2;
t1150 = sin(qJ(1));
t1154 = cos(qJ(1));
t1129 = t1150 * g(1) - t1154 * g(2);
t1174 = qJDD(1) * pkin(1) + t1129;
t1145 = t1149 ^ 2;
t1231 = t1145 * t1156;
t1271 = t1168 * pkin(2) - pkin(7) * t1231 - (t1146 * pkin(7) + pkin(6)) * t1156 - t1174;
t1157 = t1022 * pkin(3) - pkin(8) * t1277 + t1271;
t1069 = t1111 * pkin(3) - t1113 * pkin(8);
t1130 = t1154 * g(1) + t1150 * g(2);
t1162 = -t1156 * pkin(1) + qJDD(1) * pkin(6) - t1130;
t1097 = -t1149 * g(3) + t1153 * t1162;
t1143 = t1146 * t1156;
t1155 = qJD(2) ^ 2;
t1134 = -t1143 - t1155;
t1046 = pkin(2) * t1134 + pkin(7) * t1211 + t1097;
t1160 = t1149 * t1162;
t1223 = t1149 * t1156;
t1238 = qJD(1) * qJD(2);
t1158 = -t1160 - t1120 * pkin(7) + qJDD(2) * pkin(2) + (pkin(2) * t1223 + pkin(7) * t1238 - g(3)) * t1153;
t998 = t1152 * t1046 + t1148 * t1158;
t955 = -t1208 * pkin(3) + t1209 * pkin(8) - t1111 * t1069 + t998;
t896 = t1147 * t1157 + t1151 * t955;
t1177 = t1079 * pkin(4) - t1009 * qJ(5) + t1107 * t1054 - t896;
t866 = t1074 - t1177;
t990 = (qJD(4) - t1107) * t1084 + t1192;
t839 = -pkin(4) * t1012 - qJ(5) * t990 + t866;
t1010 = -t1082 * qJD(4) + t1151 * t1051 + t1147 * t1209;
t1063 = t1107 * t1082;
t895 = t1147 * t955 - t1151 * t1157;
t1161 = qJ(5) * t1063 + 0.2e1 * qJD(5) * t1084 + t1281 + t895;
t993 = t1063 + t1010;
t841 = (t1010 + t993) * qJ(5) + t1161;
t1276 = -t1147 * t841 - t1151 * t839;
t1106 = t1107 ^ 2;
t1035 = -t1080 - t1106;
t997 = t1148 * t1046 - t1152 * t1158;
t954 = -t1209 * pkin(3) - t1208 * pkin(8) + t1113 * t1069 + t997;
t898 = -t1009 * pkin(4) - t1079 * qJ(5) + t1084 * t1054 + qJDD(5) + t954;
t883 = -qJ(5) * t1035 + t898;
t1000 = t1047 + t1165;
t1273 = -t1063 + t1010;
t937 = -pkin(4) * t1273 - qJ(5) * t1000;
t1275 = -t1147 * t883 - t1151 * t937;
t848 = t1147 * t895 + t1151 * t896;
t1109 = t1111 ^ 2;
t1110 = t1113 ^ 2;
t1021 = -t1106 - t1079;
t949 = t1151 * t1021 + t1229;
t989 = (qJD(4) + t1107) * t1084 + t1192;
t911 = t1148 * t949 - t1152 * t989;
t912 = t1148 * t989 + t1152 * t949;
t856 = t1149 * t912 + t1153 * t911;
t1270 = pkin(1) * t856;
t935 = t1148 * t998 - t1152 * t997;
t1269 = pkin(2) * t935;
t1024 = qJD(2) * t1113 - t1191;
t1027 = t1103 + t1051;
t973 = t1148 * t1024 - t1152 * t1027;
t1268 = pkin(2) * t973;
t931 = -t1147 * t990 - t1151 * t993;
t1267 = pkin(3) * t931;
t948 = t1147 * t1021 - t1221;
t1266 = pkin(3) * t948;
t1230 = t1147 * t1000;
t958 = t1151 * t1035 - t1230;
t1265 = pkin(3) * t958;
t858 = t1010 * qJ(5) + t1161;
t1264 = pkin(4) * t858;
t1263 = pkin(4) * t993;
t933 = t1147 * t993 - t1151 * t990;
t903 = -t1152 * t1012 + t1148 * t933;
t904 = t1148 * t1012 + t1152 * t933;
t852 = -t1149 * t903 + t1153 * t904;
t1262 = pkin(5) * (t1150 * t852 - t1154 * t931);
t857 = -t1149 * t911 + t1153 * t912;
t1261 = pkin(5) * (t1150 * t857 - t1154 * t948);
t1222 = t1151 * t1000;
t959 = -t1147 * t1035 - t1222;
t915 = t1148 * t959 - t1152 * t1273;
t916 = t1148 * t1273 + t1152 * t959;
t861 = -t1149 * t915 + t1153 * t916;
t1260 = pkin(5) * (t1150 * t861 - t1154 * t958);
t851 = t1149 * t904 + t1153 * t903;
t1259 = pkin(6) * t851;
t1258 = pkin(6) * t856;
t860 = t1149 * t916 + t1153 * t915;
t1257 = pkin(6) * t860;
t1256 = pkin(7) * t903;
t1255 = pkin(7) * t911;
t1254 = pkin(7) * t915;
t1253 = pkin(8) * t931;
t1252 = pkin(8) * t948;
t1251 = pkin(8) * t958;
t1250 = pkin(3) * t1148;
t1249 = -pkin(1) * t931 + pkin(6) * t852;
t1248 = -pkin(1) * t948 + pkin(6) * t857;
t1247 = -pkin(1) * t958 + pkin(6) * t861;
t1246 = -pkin(3) * t989 + pkin(8) * t949;
t1245 = -pkin(3) * t954 + pkin(8) * t848;
t1244 = -pkin(3) * t1273 + pkin(8) * t959;
t1243 = t1147 * t858;
t950 = t1147 * t954;
t1242 = t1149 * t935;
t1241 = t1151 * t858;
t951 = t1151 * t954;
t1240 = t1153 * t935;
t1239 = -pkin(3) * t1012 + pkin(8) * t933;
t1234 = t1107 * t1084;
t1233 = t1107 * t1147;
t1232 = t1107 * t1151;
t1228 = t1148 * t1271;
t1067 = t1071 + t1209;
t1227 = t1148 * t1067;
t1114 = t1156 * pkin(6) + t1174;
t1226 = t1149 * t1114;
t1136 = t1153 * t1223;
t1127 = qJDD(2) + t1136;
t1225 = t1149 * t1127;
t1128 = qJDD(2) - t1136;
t1224 = t1149 * t1128;
t1220 = t1152 * t1271;
t1219 = t1152 * t1067;
t1218 = t1153 * t1114;
t1217 = t1153 * t1128;
t1214 = t1145 + t1146;
t1212 = t1150 * qJDD(1);
t1210 = t1154 * qJDD(1);
t1207 = t950 + t1244;
t1206 = -t951 + t1246;
t1205 = -pkin(3) * t1152 - pkin(2);
t1203 = -pkin(2) * t948 + pkin(7) * t912;
t1202 = -pkin(2) * t958 + pkin(7) * t916;
t1201 = t1154 * t1071;
t1200 = t1082 * t1233;
t1199 = t1148 * t1047;
t1197 = t1150 * t1071;
t1196 = t1152 * t1047;
t936 = t1148 * t997 + t1152 * t998;
t1195 = t1216 * t1113;
t1194 = t1244 - t1275;
t910 = pkin(2) * t911;
t1193 = t910 + t1206;
t1096 = t1153 * g(3) + t1160;
t1044 = t1149 * t1096 + t1153 * t1097;
t1190 = -t1129 * t1150 - t1154 * t1130;
t1189 = t1239 - t1276;
t1188 = t1239 + t848;
t828 = t1148 * t848 - t1152 * t954;
t1187 = pkin(2) * t828 + t1245;
t1186 = t1154 * t1136;
t1185 = t1150 * t1136;
t1095 = -t1110 - t1208;
t1028 = t1152 * t1095 - t1227;
t1184 = pkin(2) * t1028 - t998;
t1124 = -t1150 * t1156 + t1210;
t1183 = -pkin(5) * t1124 - t1150 * g(3);
t1182 = t1148 * t1103;
t1181 = t1148 * t1195;
t1180 = t1152 * t1103;
t1179 = t1152 * t1195;
t914 = pkin(2) * t915;
t1178 = -pkin(1) * t860 - t1244 - t914;
t847 = t1147 * t896 - t1151 * t895;
t902 = pkin(2) * t903;
t1176 = -pkin(1) * t851 - t1239 - t902;
t1043 = t1153 * t1096 - t1149 * t1097;
t1175 = t1154 * t1129 - t1150 * t1130;
t1065 = -t1208 - t1109;
t1013 = t1148 * t1065 + t1279;
t1173 = pkin(2) * t1013 - t997;
t815 = t1151 * t866 + t1243;
t825 = -pkin(4) * t898 + qJ(5) * t866;
t1172 = -pkin(3) * t898 + pkin(8) * t815 + qJ(5) * t1243 + t1151 * t825;
t869 = -pkin(4) * t989 + qJ(5) * t1021 - t898;
t1170 = qJ(5) * t1229 + t1151 * t869 + t1246;
t1167 = t1170 + t910;
t1166 = pkin(4) * t1035 + t1177;
t806 = t1148 * t815 - t1152 * t898;
t1164 = pkin(2) * t806 + t1172;
t1159 = -t858 - t1281;
t1133 = t1143 - t1155;
t1132 = -t1155 - t1231;
t1131 = t1155 - t1231;
t1126 = -t1143 + t1231;
t1125 = t1143 + t1231;
t1123 = t1154 * t1156 + t1212;
t1122 = t1214 * qJDD(1);
t1119 = 0.2e1 * t1140 + t1213;
t1117 = t1153 * t1127;
t1116 = t1214 * t1238;
t1108 = -pkin(5) * t1123 + t1154 * g(3);
t1101 = -t1110 + t1208;
t1100 = t1109 - t1208;
t1099 = t1153 * t1120 - t1145 * t1238;
t1098 = -t1146 * t1238 - t1149 * t1169;
t1094 = -t1149 * t1132 - t1217;
t1093 = -t1149 * t1131 + t1117;
t1092 = t1153 * t1134 - t1225;
t1091 = t1153 * t1133 - t1224;
t1090 = t1153 * t1132 - t1224;
t1089 = t1153 * t1131 + t1225;
t1088 = t1149 * t1134 + t1117;
t1087 = t1149 * t1133 + t1217;
t1086 = (t1120 + t1140) * t1149;
t1073 = -t1149 * t1119 - t1085;
t1072 = t1153 * t1119 - t1149 * t1168;
t1070 = t1110 - t1109;
t1061 = -t1080 + t1106;
t1060 = t1079 - t1106;
t1059 = -t1180 + t1181;
t1058 = -t1182 - t1179;
t1057 = -pkin(6) * t1090 - t1218;
t1056 = -pkin(6) * t1088 - t1226;
t1055 = t1084 * t1232;
t1052 = -t1109 - t1110;
t1050 = -pkin(1) * t1090 + t1097;
t1049 = -pkin(1) * t1088 + t1096;
t1041 = t1080 - t1079;
t1037 = -pkin(1) * t1168 + pkin(6) * t1092 + t1218;
t1036 = -pkin(1) * t1119 + pkin(6) * t1094 - t1226;
t1034 = t1152 * t1100 - t1227;
t1033 = -t1148 * t1101 + t1279;
t1032 = t1148 * t1100 + t1219;
t1031 = t1152 * t1101 + t1280;
t1029 = -t1148 * t1095 - t1219;
t1020 = pkin(1) * t1114 + pkin(6) * t1044;
t1019 = t1152 * t1051 - t1181;
t1018 = t1148 * t1051 + t1179;
t1017 = -t1148 * t1171 + t1180;
t1016 = t1152 * t1171 + t1182;
t1015 = pkin(1) * t1125 + pkin(6) * t1122 + t1044;
t1014 = t1152 * t1065 - t1280;
t1005 = (-t1082 * t1151 + t1084 * t1147) * t1107;
t1004 = -t1055 - t1200;
t1003 = -t1149 * t1058 + t1153 * t1059;
t1002 = t1153 * t1058 + t1149 * t1059;
t995 = -pkin(7) * t1028 + t1220;
t988 = -pkin(7) * t1013 + t1228;
t985 = -t1149 * t1032 + t1153 * t1034;
t984 = -t1149 * t1031 + t1153 * t1033;
t983 = t1153 * t1032 + t1149 * t1034;
t982 = t1153 * t1031 + t1149 * t1033;
t981 = t1151 * t1010 - t1084 * t1233;
t980 = -t1147 * t1010 - t1055;
t979 = -t1147 * t1009 + t1082 * t1232;
t978 = t1151 * t1009 + t1200;
t977 = -t1149 * t1028 + t1153 * t1029;
t976 = t1153 * t1028 + t1149 * t1029;
t975 = t1152 * t1024 + t1148 * t1027;
t974 = -t1152 * t1022 - t1148 * t1277;
t972 = -t1148 * t1022 + t1152 * t1277;
t971 = t1152 * t1005 + t1148 * t1165;
t970 = t1148 * t1005 - t1152 * t1165;
t969 = t1151 * t1060 - t1230;
t968 = -t1147 * t1061 - t1221;
t967 = t1147 * t1060 + t1222;
t966 = t1151 * t1061 - t1229;
t965 = -t1149 * t1018 + t1153 * t1019;
t964 = -t1149 * t1016 + t1153 * t1017;
t963 = t1153 * t1018 + t1149 * t1019;
t962 = t1153 * t1016 + t1149 * t1017;
t961 = -t1149 * t1013 + t1153 * t1014;
t960 = t1153 * t1013 + t1149 * t1014;
t945 = -pkin(2) * t1277 + pkin(7) * t1029 + t1228;
t942 = t1152 * t981 + t1199;
t941 = t1152 * t979 - t1199;
t940 = t1148 * t981 - t1196;
t939 = t1148 * t979 + t1196;
t938 = -pkin(2) * t1022 + pkin(7) * t1014 - t1220;
t932 = -t1147 * t1273 - t1151 * t989;
t930 = -t1147 * t989 + t1151 * t1273;
t927 = -pkin(2) * t1271 + pkin(7) * t936;
t926 = -t1149 * t973 + t1153 * t975;
t925 = -t1149 * t972 + t1153 * t974;
t924 = t1149 * t975 + t1153 * t973;
t923 = t1149 * t974 + t1153 * t972;
t922 = -t1148 * t990 + t1152 * t969;
t921 = t1148 * t993 + t1152 * t968;
t920 = t1148 * t969 + t1152 * t990;
t919 = t1148 * t968 - t1152 * t993;
t918 = -t1149 * t970 + t1153 * t971;
t917 = t1149 * t971 + t1153 * t970;
t908 = -pkin(1) * t976 - t1184;
t907 = t1148 * t1041 + t1152 * t932;
t906 = -t1152 * t1041 + t1148 * t932;
t905 = t951 - t1251;
t901 = pkin(7) * t904;
t900 = -pkin(1) * t960 - t1173;
t899 = t950 - t1252;
t892 = -pkin(7) * t973 - t935;
t891 = -t1149 * t940 + t1153 * t942;
t890 = -t1149 * t939 + t1153 * t941;
t889 = t1149 * t942 + t1153 * t940;
t888 = t1149 * t941 + t1153 * t939;
t887 = t1263 - t1267;
t886 = t1150 * t1004 + t1154 * t918;
t885 = -t1154 * t1004 + t1150 * t918;
t884 = -pkin(2) * t1052 + pkin(7) * t975 + t936;
t881 = -pkin(1) * t924 - t1268;
t880 = -pkin(6) * t976 - t1149 * t945 + t1153 * t995;
t879 = t1153 * t936 - t1242;
t878 = t1149 * t936 + t1240;
t877 = -pkin(6) * t960 - t1149 * t938 + t1153 * t988;
t876 = -pkin(1) * t1277 + pkin(6) * t977 + t1149 * t995 + t1153 * t945;
t875 = t896 - t1265;
t874 = -t1150 * t980 + t1154 * t891;
t873 = t1150 * t978 + t1154 * t890;
t872 = t1150 * t891 + t1154 * t980;
t871 = t1150 * t890 - t1154 * t978;
t870 = t895 - t1266;
t868 = -pkin(1) * t1022 + pkin(6) * t961 + t1149 * t988 + t1153 * t938;
t865 = -t1149 * t920 + t1153 * t922;
t864 = -t1149 * t919 + t1153 * t921;
t863 = t1149 * t922 + t1153 * t920;
t862 = t1149 * t921 + t1153 * t919;
t854 = -t1149 * t906 + t1153 * t907;
t853 = t1149 * t907 + t1153 * t906;
t849 = -pkin(1) * t878 - t1269;
t845 = t1150 * t967 + t1154 * t865;
t844 = t1150 * t966 + t1154 * t864;
t843 = t1150 * t865 - t1154 * t967;
t842 = t1150 * t864 - t1154 * t966;
t836 = pkin(5) * (t1150 * t958 + t1154 * t861);
t835 = t1074 - t1166 - t1265;
t833 = pkin(5) * (t1150 * t948 + t1154 * t857);
t832 = -t1147 * t937 + t1151 * t883 - t1251;
t831 = qJ(5) * t1221 - t1147 * t869 - t1252;
t830 = -t1159 - t1266;
t829 = t1148 * t954 + t1152 * t848;
t827 = t1150 * t930 + t1154 * t854;
t826 = t1150 * t854 - t1154 * t930;
t822 = pkin(5) * (t1150 * t931 + t1154 * t852);
t821 = -t847 - t1253;
t820 = -pkin(6) * t878 - pkin(7) * t1240 - t1149 * t927;
t819 = -pkin(1) * t1271 + pkin(6) * t879 - pkin(7) * t1242 + t1153 * t927;
t818 = -pkin(6) * t924 - t1149 * t884 + t1153 * t892;
t817 = -pkin(1) * t1052 + pkin(6) * t926 + t1149 * t892 + t1153 * t884;
t816 = -t1148 * t875 + t1152 * t905 - t1254;
t814 = t1147 * t866 - t1241;
t812 = -t1148 * t870 + t1152 * t899 - t1255;
t811 = t1148 * t905 + t1152 * t875 + t1202;
t810 = t1178 - t950;
t809 = t1148 * t899 + t1152 * t870 + t1203;
t808 = -t1193 - t1270;
t807 = t1148 * t898 + t1152 * t815;
t805 = t1152 * t821 + t931 * t1250 - t1256;
t804 = -t1147 * t839 + t1151 * t841 - t1253;
t803 = -pkin(3) * t814 + t1264;
t802 = -t1149 * t828 + t1153 * t829;
t801 = t1149 * t829 + t1153 * t828;
t800 = t1178 + t1275;
t799 = t1148 * t821 + t1205 * t931 + t901;
t798 = -t1167 - t1270;
t797 = -t1148 * t835 + t1152 * t832 - t1254;
t796 = -t1148 * t830 + t1152 * t831 - t1255;
t795 = t1148 * t832 + t1152 * t835 + t1202;
t794 = t1176 - t848;
t793 = t1148 * t831 + t1152 * t830 + t1203;
t792 = -pkin(7) * t828 + (-pkin(8) * t1152 + t1250) * t847;
t791 = -t1148 * t887 + t1152 * t804 - t1256;
t790 = -pkin(8) * t814 + qJ(5) * t1241 - t1147 * t825;
t789 = -pkin(2) * t931 + t1148 * t804 + t1152 * t887 + t901;
t788 = t1176 + t1276;
t787 = pkin(7) * t829 + (-pkin(8) * t1148 + t1205) * t847;
t786 = -t1149 * t806 + t1153 * t807;
t785 = t1149 * t807 + t1153 * t806;
t784 = -t1149 * t811 + t1153 * t816 - t1257;
t783 = -t1149 * t809 + t1153 * t812 - t1258;
t782 = t1149 * t816 + t1153 * t811 + t1247;
t781 = t1149 * t812 + t1153 * t809 + t1248;
t780 = -pkin(1) * t801 - t1187;
t779 = -t1149 * t799 + t1153 * t805 - t1259;
t778 = t1149 * t805 + t1153 * t799 + t1249;
t777 = -t1149 * t795 + t1153 * t797 - t1257;
t776 = t1149 * t797 + t1153 * t795 + t1247;
t775 = -t1149 * t793 + t1153 * t796 - t1258;
t774 = t1149 * t796 + t1153 * t793 + t1248;
t773 = -t1149 * t789 + t1153 * t791 - t1259;
t772 = -pkin(7) * t806 - t1148 * t803 + t1152 * t790;
t771 = t1149 * t791 + t1153 * t789 + t1249;
t770 = -pkin(6) * t801 - t1149 * t787 + t1153 * t792;
t769 = -pkin(2) * t814 + pkin(7) * t807 + t1148 * t790 + t1152 * t803;
t768 = -pkin(1) * t785 - t1164;
t767 = -pkin(1) * t847 + pkin(6) * t802 + t1149 * t792 + t1153 * t787;
t766 = -pkin(6) * t785 - t1149 * t769 + t1153 * t772;
t765 = -pkin(1) * t814 + pkin(6) * t786 + t1149 * t772 + t1153 * t769;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1124, 0, -t1123, 0, t1183, -t1108, -t1175, -pkin(5) * t1175, t1154 * t1099 - t1185, t1154 * t1073 + t1150 * t1126, t1154 * t1093 + t1149 * t1212, t1154 * t1098 + t1185, t1154 * t1091 + t1150 * t1211, t1150 * qJDD(2) + t1154 * t1116, t1154 * t1056 - t1150 * t1049 - pkin(5) * (t1150 * t1092 - t1154 * t1168), t1154 * t1057 - t1150 * t1050 - pkin(5) * (t1150 * t1094 - t1154 * t1119), t1154 * t1043 - pkin(5) * (t1150 * t1122 + t1154 * t1125), -pkin(5) * (t1150 * t1044 + t1154 * t1114) - (t1150 * pkin(1) - t1154 * pkin(6)) * t1043, t1154 * t965 + t1197, t1150 * t1070 + t1154 * t925, t1150 * t1027 + t1154 * t984, t1154 * t964 - t1197, t1024 * t1150 + t1154 * t985, t1154 * t1003 + t1150 * t1209, t1154 * t877 - t1150 * t900 - pkin(5) * (-t1154 * t1022 + t1150 * t961), t1154 * t880 - t1150 * t908 - pkin(5) * (t1150 * t977 - t1154 * t1277), t1154 * t818 - t1150 * t881 - pkin(5) * (-t1154 * t1052 + t1150 * t926), t1154 * t820 - t1150 * t849 - pkin(5) * (t1150 * t879 - t1154 * t1271), t874, t827, t844, t873, t845, t886, -t1150 * t808 + t1154 * t783 - t1261, -t1150 * t810 + t1154 * t784 - t1260, -t1150 * t794 + t1154 * t779 - t1262, t1154 * t770 - t1150 * t780 - pkin(5) * (t1150 * t802 - t1154 * t847), t874, t827, t844, t873, t845, t886, -t1150 * t798 + t1154 * t775 - t1261, -t1150 * t800 + t1154 * t777 - t1260, -t1150 * t788 + t1154 * t773 - t1262, t1154 * t766 - t1150 * t768 - pkin(5) * (t1150 * t786 - t1154 * t814); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1123, 0, t1124, 0, t1108, t1183, t1190, pkin(5) * t1190, t1099 * t1150 + t1186, t1073 * t1150 - t1126 * t1154, t1093 * t1150 - t1149 * t1210, t1098 * t1150 - t1186, t1091 * t1150 - t1153 * t1210, -qJDD(2) * t1154 + t1116 * t1150, t1150 * t1056 + t1154 * t1049 + pkin(5) * (t1092 * t1154 + t1150 * t1168), t1150 * t1057 + t1154 * t1050 + pkin(5) * (t1094 * t1154 + t1119 * t1150), t1150 * t1043 + pkin(5) * (t1122 * t1154 - t1125 * t1150), pkin(5) * (t1044 * t1154 - t1114 * t1150) - (-pkin(1) * t1154 - pkin(6) * t1150) * t1043, t1150 * t965 - t1201, -t1070 * t1154 + t1150 * t925, -t1027 * t1154 + t1150 * t984, t1150 * t964 + t1201, -t1024 * t1154 + t1150 * t985, t1150 * t1003 - t1154 * t1209, t1150 * t877 + t1154 * t900 + pkin(5) * (t1022 * t1150 + t1154 * t961), t1150 * t880 + t1154 * t908 + pkin(5) * (t1150 * t1277 + t1154 * t977), t1150 * t818 + t1154 * t881 + pkin(5) * (t1052 * t1150 + t1154 * t926), t1150 * t820 + t1154 * t849 + pkin(5) * (t1150 * t1271 + t1154 * t879), t872, t826, t842, t871, t843, t885, t1150 * t783 + t1154 * t808 + t833, t1150 * t784 + t1154 * t810 + t836, t1150 * t779 + t1154 * t794 + t822, t1150 * t770 + t1154 * t780 + pkin(5) * (t1150 * t847 + t1154 * t802), t872, t826, t842, t871, t843, t885, t1150 * t775 + t1154 * t798 + t833, t1150 * t777 + t1154 * t800 + t836, t1150 * t773 + t1154 * t788 + t822, t1150 * t766 + t1154 * t768 + pkin(5) * (t1150 * t814 + t1154 * t786); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1129, t1130, 0, 0, t1086, t1072, t1089, -t1085, t1087, 0, t1037, t1036, t1015, t1020, t963, t923, t982, t962, t983, t1002, t868, t876, t817, t819, t889, t853, t862, t888, t863, t917, t781, t782, t778, t767, t889, t853, t862, t888, t863, t917, t774, t776, t771, t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1156, 0, 0, -g(3), -t1129, 0, t1099, t1073, t1093, t1098, t1091, t1116, t1056, t1057, t1043, pkin(6) * t1043, t965, t925, t984, t964, t985, t1003, t877, t880, t818, t820, t891, t854, t864, t890, t865, t918, t783, t784, t779, t770, t891, t854, t864, t890, t865, t918, t775, t777, t773, t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1156, 0, qJDD(1), 0, g(3), 0, -t1130, 0, t1136, -t1126, -t1213, -t1136, -t1211, -qJDD(2), t1049, t1050, 0, pkin(1) * t1043, -t1071, -t1070, -t1027, t1071, -t1024, -t1209, t900, t908, t881, t849, t980, -t930, -t966, -t978, -t967, -t1004, t808, t810, t794, t780, t980, -t930, -t966, -t978, -t967, -t1004, t798, t800, t788, t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1129, t1130, 0, 0, t1086, t1072, t1089, -t1085, t1087, 0, t1037, t1036, t1015, t1020, t963, t923, t982, t962, t983, t1002, t868, t876, t817, t819, t889, t853, t862, t888, t863, t917, t781, t782, t778, t767, t889, t853, t862, t888, t863, t917, t774, t776, t771, t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1120, -t1168, t1127, -t1140, t1133, t1140, 0, -t1114, t1096, 0, t1019, t974, t1033, t1017, t1034, t1059, t988, t995, t892, -pkin(7) * t935, t942, t907, t921, t941, t922, t971, t812, t816, t805, t792, t942, t907, t921, t941, t922, t971, t796, t797, t791, t772; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1198, t1119, t1131, t1169, t1128, -t1198, t1114, 0, t1097, 0, t1018, t972, t1031, t1016, t1032, t1058, t938, t945, t884, t927, t940, t906, t919, t939, t920, t970, t809, t811, t799, t787, t940, t906, t919, t939, t920, t970, t793, t795, t789, t769; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1136, t1126, t1213, t1136, t1211, qJDD(2), -t1096, -t1097, 0, 0, t1071, t1070, t1027, -t1071, t1024, t1209, t1173, t1184, t1268, t1269, -t980, t930, t966, t978, t967, t1004, t1193, t914 + t1207, t902 + t1188, t1187, -t980, t930, t966, t978, t967, t1004, t1167, t914 + t1194, t902 + t1189, t1164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1051, -t1022, t1272, t1103, t1100, -t1103, 0, t1271, t997, 0, t981, t932, t968, t979, t969, t1005, t899, t905, t821, -pkin(8) * t847, t981, t932, t968, t979, t969, t1005, t831, t832, t804, t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1195, t1277, t1101, t1171, t1067, -t1195, -t1271, 0, t998, 0, -t1047, -t1041, -t993, t1047, t990, -t1165, t870, t875, -t1267, -pkin(3) * t847, -t1047, -t1041, -t993, t1047, t990, -t1165, t830, t835, t887, t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1071, t1070, t1027, -t1071, t1024, t1209, -t997, -t998, 0, 0, -t980, t930, t966, t978, t967, t1004, t1206, t1207, t1188, t1245, -t980, t930, t966, t978, t967, t1004, t1170, t1194, t1189, t1172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1010, -t989, -t1278, t1063, t1060, -t1063, 0, t954, t895, 0, t1010, -t989, -t1278, t1063, t1060, -t1063, qJ(5) * t1278, t883, t841, qJ(5) * t858; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1234, t1273, t1061, t1009, t1000, -t1234, -t954, 0, t896, 0, t1234, t1273, t1061, t1009, t1000, -t1234, t869, t937, t839, t825; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1047, t1041, t993, -t1047, -t990, t1165, -t895, -t896, 0, 0, t1047, t1041, t993, -t1047, -t990, t1165, t1159, t1166 + 0.2e1 * t1235, -t1263, -t1264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1010, -t989, -t1278, t1063, t1060, -t1063, 0, t898, t858, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1234, t1273, t1061, t1009, t1000, -t1234, -t898, 0, t866, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1047, t1041, t993, -t1047, -t990, t1165, -t858, -t866, 0, 0;];
m_new_reg = t1;
