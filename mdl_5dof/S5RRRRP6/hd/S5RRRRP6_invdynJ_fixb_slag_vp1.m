% Calculate vector of inverse dynamics joint torques for
% S5RRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:55
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRRRP6_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP6_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP6_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP6_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP6_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP6_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP6_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP6_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP6_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:52:50
% EndTime: 2019-12-31 21:54:33
% DurationCPUTime: 86.50s
% Computational Cost: add. (40318->1321), mult. (55044->1691), div. (0->0), fcn. (51357->8), ass. (0->651)
t1214 = -Icges(5,4) - Icges(6,4);
t1170 = Icges(5,1) + Icges(6,1);
t1186 = Icges(5,5) + Icges(6,5);
t1185 = -Icges(5,2) - Icges(6,2);
t1184 = Icges(5,6) + Icges(6,6);
t621 = cos(qJ(4));
t1213 = t1214 * t621;
t618 = sin(qJ(4));
t1212 = t1214 * t618;
t1211 = -t1184 * t618 + t1186 * t621;
t1210 = t1185 * t618 - t1213;
t1209 = t1170 * t621 + t1212;
t1208 = Icges(5,3) + Icges(6,3);
t616 = qJ(2) + qJ(3);
t596 = sin(t616);
t597 = cos(t616);
t1190 = -t1184 * t597 + t1210 * t596;
t1177 = -t1186 * t597 + t1209 * t596;
t1207 = t1211 * t597;
t1206 = t1210 * t597;
t1205 = t1209 * t597;
t1204 = -t1184 * t621 - t1186 * t618;
t1203 = t1185 * t621 + t1212;
t1202 = -t1170 * t618 + t1213;
t1179 = -t1208 * t597 + t1211 * t596;
t623 = cos(qJ(1));
t946 = t623 * t618;
t620 = sin(qJ(1));
t952 = t620 * t621;
t477 = -t597 * t946 + t952;
t950 = t621 * t623;
t955 = t618 * t620;
t478 = t597 * t950 + t955;
t964 = t596 * t623;
t1099 = t1177 * t478 + t1179 * t964 + t1190 * t477;
t252 = Icges(6,5) * t478 + Icges(6,6) * t477 + Icges(6,3) * t964;
t255 = Icges(5,5) * t478 + Icges(5,6) * t477 + Icges(5,3) * t964;
t1180 = t252 + t255;
t436 = Icges(6,4) * t477;
t264 = Icges(6,1) * t478 + Icges(6,5) * t964 + t436;
t439 = Icges(5,4) * t477;
t267 = Icges(5,1) * t478 + Icges(5,5) * t964 + t439;
t1191 = t264 + t267;
t1014 = Icges(6,4) * t478;
t258 = Icges(6,2) * t477 + Icges(6,6) * t964 + t1014;
t1017 = Icges(5,4) * t478;
t261 = Icges(5,2) * t477 + Icges(5,6) * t964 + t1017;
t1192 = t258 + t261;
t1140 = t1180 * t964 + t1191 * t478 + t1192 * t477;
t475 = t597 * t955 + t950;
t434 = Icges(6,4) * t475;
t476 = t597 * t952 - t946;
t965 = t596 * t620;
t263 = -Icges(6,1) * t476 - Icges(6,5) * t965 + t434;
t437 = Icges(5,4) * t475;
t266 = -Icges(5,1) * t476 - Icges(5,5) * t965 + t437;
t1137 = t263 + t266;
t435 = Icges(6,4) * t476;
t256 = -Icges(6,2) * t475 + Icges(6,6) * t965 + t435;
t438 = Icges(5,4) * t476;
t259 = -Icges(5,2) * t475 + Icges(5,6) * t965 + t438;
t1138 = t256 + t259;
t250 = Icges(6,5) * t476 - Icges(6,6) * t475 + Icges(6,3) * t965;
t253 = Icges(5,5) * t476 - Icges(5,6) * t475 + Icges(5,3) * t965;
t1139 = t250 + t253;
t1141 = -t1137 * t478 + t1138 * t477 + t1139 * t964;
t595 = qJD(2) * t620;
t523 = qJD(3) * t620 + t595;
t883 = qJD(4) * t623;
t429 = t596 * t883 + t523;
t613 = qJD(2) + qJD(3);
t524 = t613 * t623;
t884 = qJD(4) * t620;
t430 = -t596 * t884 + t524;
t886 = qJD(4) * t597;
t556 = qJD(1) - t886;
t1148 = t1099 * t556 + t1140 * t429 - t1141 * t430;
t1100 = t1177 * t476 + t1179 * t965 - t1190 * t475;
t1142 = t1180 * t965 + t1191 * t476 - t1192 * t475;
t1143 = -t1137 * t476 - t1138 * t475 + t1139 * t965;
t1149 = t1100 * t556 + t1142 * t429 - t1143 * t430;
t793 = qJD(1) * t597 - qJD(4);
t863 = t596 * t524;
t1079 = t620 * t793 + t863;
t714 = t621 * t556;
t221 = t1079 * t618 + t623 * t714;
t713 = t556 * t618;
t222 = -t1079 * t621 + t623 * t713;
t890 = qJD(1) * t620;
t841 = t596 * t890;
t858 = t597 * t524;
t675 = -t841 + t858;
t130 = Icges(6,5) * t222 + Icges(6,6) * t221 + Icges(6,3) * t675;
t132 = Icges(5,5) * t222 + Icges(5,6) * t221 + Icges(5,3) * t675;
t1201 = t130 + t132;
t957 = t613 * t620;
t864 = t596 * t957;
t223 = t620 * t714 + (-t623 * t793 + t864) * t618;
t967 = t596 * t613;
t224 = t793 * t950 + (-t621 * t967 + t713) * t620;
t889 = qJD(1) * t623;
t676 = t596 * t889 + t597 * t957;
t131 = Icges(6,5) * t224 + Icges(6,6) * t223 + Icges(6,3) * t676;
t133 = Icges(5,5) * t224 + Icges(5,6) * t223 + Icges(5,3) * t676;
t1200 = t131 + t133;
t134 = Icges(6,4) * t222 + Icges(6,2) * t221 + Icges(6,6) * t675;
t136 = Icges(5,4) * t222 + Icges(5,2) * t221 + Icges(5,6) * t675;
t1199 = t134 + t136;
t135 = Icges(6,4) * t224 + Icges(6,2) * t223 + Icges(6,6) * t676;
t137 = Icges(5,4) * t224 + Icges(5,2) * t223 + Icges(5,6) * t676;
t1198 = t135 + t137;
t138 = Icges(6,1) * t222 + Icges(6,4) * t221 + Icges(6,5) * t675;
t140 = Icges(5,1) * t222 + Icges(5,4) * t221 + Icges(5,5) * t675;
t1197 = t138 + t140;
t139 = Icges(6,1) * t224 + Icges(6,4) * t223 + Icges(6,5) * t676;
t141 = Icges(5,1) * t224 + Icges(5,4) * t223 + Icges(5,5) * t676;
t1196 = t139 + t141;
t1195 = t1207 * t613 + (qJD(4) * t1204 + t1208 * t613) * t596;
t1194 = t1206 * t613 + (qJD(4) * t1203 + t1184 * t613) * t596;
t1193 = t1205 * t613 + (t1202 * qJD(4) + t1186 * t613) * t596;
t1189 = t1177 * t621 - t1190 * t618;
t879 = qJD(5) * t623;
t536 = t596 * t879;
t617 = -qJ(5) - pkin(8);
t1038 = pkin(8) + t617;
t1084 = t1038 * t596;
t584 = t597 * pkin(3);
t771 = t476 * rSges(6,1) - t475 * rSges(6,2);
t586 = pkin(4) * t621 + pkin(3);
t960 = t597 * t620;
t495 = t586 * t960;
t782 = pkin(4) * t946 - t495;
t941 = (t584 + t1084) * t620 + t782 - rSges(6,3) * t965 - t771;
t1188 = t556 * t941 + t536;
t775 = t476 * rSges(5,1) - t475 * rSges(5,2);
t272 = -rSges(5,3) * t965 - t775;
t1036 = rSges(5,1) * t621;
t774 = -rSges(5,2) * t618 + t1036;
t390 = -rSges(5,3) * t597 + t596 * t774;
t1183 = t272 * t556 - t390 * t430;
t1155 = -t1137 * t222 + t1138 * t221 + t1139 * t675 + t1196 * t478 + t1198 * t477 + t1200 * t964;
t1154 = t1180 * t675 + t1191 * t222 + t1192 * t221 + t1197 * t478 + t1199 * t477 + t1201 * t964;
t1153 = -t1137 * t224 + t1138 * t223 + t1139 * t676 + t1196 * t476 - t1198 * t475 + t1200 * t965;
t1152 = t1180 * t676 + t1191 * t224 + t1192 * t223 + t1197 * t476 - t1199 * t475 + t1201 * t965;
t1146 = t1177 * t222 + t1179 * t675 + t1190 * t221 + t1193 * t478 + t1194 * t477 + t1195 * t964;
t1145 = t1177 * t224 + t1179 * t676 + t1190 * t223 + t1193 * t476 - t1194 * t475 + t1195 * t965;
t732 = -t256 * t618 - t263 * t621;
t114 = -t250 * t597 + t596 * t732;
t730 = -t259 * t618 - t266 * t621;
t116 = -t253 * t597 + t596 * t730;
t1182 = t114 + t116;
t731 = -t258 * t618 + t264 * t621;
t115 = -t252 * t597 + t596 * t731;
t729 = -t261 * t618 + t267 * t621;
t117 = -t255 * t597 + t596 * t729;
t1181 = t115 + t117;
t1098 = -t1179 * t597 + t1189 * t596;
t1176 = -t596 * rSges(6,3) - t597 * t586;
t835 = t597 * t884;
t1175 = -t835 + t890;
t959 = t597 * t621;
t961 = t597 * t618;
t692 = rSges(6,1) * t959 - rSges(6,2) * t961 - t1176;
t966 = t596 * t617;
t1174 = t966 - t692;
t1173 = (t1208 * t596 - t1189 + t1207) * t556 + (t1179 * t620 + t730 + t732) * t430 + (-t1179 * t623 - t729 - t731) * t429;
t1094 = (t1185 * t476 - t1137 - t434 - t437) * t430 - (t1185 * t478 + t1191 + t436 + t439) * t429 - (t1203 * t596 + t1177) * t556;
t1172 = rSges(6,1) + pkin(4);
t1171 = (t1189 * t613 - t1195) * t597 + (t1193 * t621 - t1194 * t618 + t1179 * t613 + (-t1177 * t618 - t1190 * t621) * qJD(4)) * t596;
t1095 = t596 * pkin(8) + t584;
t557 = pkin(8) * t960;
t470 = -pkin(3) * t965 + t557;
t499 = pkin(3) * t596 - pkin(8) * t597;
t1169 = qJD(1) * t470 + t1095 * t524 + t499 * t890;
t1168 = (-t1184 * t476 - t1186 * t475) * t430 + (t1184 * t478 - t1186 * t477) * t429 - t1204 * t556 * t596;
t956 = t617 * t623;
t958 = t597 * t623;
t1167 = t478 * rSges(6,1) + t477 * rSges(6,2) + rSges(6,3) * t964 + pkin(4) * t955 + t586 * t958 - t596 * t956;
t622 = cos(qJ(2));
t610 = t622 * pkin(2);
t587 = t610 + pkin(1);
t624 = -pkin(7) - pkin(6);
t590 = t623 * t624;
t899 = -t620 * t587 - t590;
t1166 = -t775 + t899;
t1030 = pkin(4) * qJD(4);
t865 = t621 * t1030;
t1045 = pkin(4) * t618;
t867 = qJD(1) * t1045;
t1165 = t222 * rSges(6,1) + t221 * rSges(6,2) + rSges(6,3) * t858 + t617 * t841 + t620 * t865 + t623 * t867 + t536;
t1164 = t899 - t771;
t876 = qJD(1) * qJD(2);
t513 = qJDD(2) * t620 + t623 * t876;
t875 = qJD(1) * qJD(3);
t410 = qJDD(3) * t620 + t623 * t875 + t513;
t874 = qJDD(4) * t596;
t210 = qJD(4) * t675 + t623 * t874 + t410;
t873 = -qJDD(2) - qJDD(3);
t885 = qJD(4) * t613;
t887 = qJD(4) * t596;
t581 = t620 * t876;
t895 = t620 * t875 + t581;
t211 = (t597 * t885 + t874) * t620 + (qJD(1) * t887 + t873) * t623 + t895;
t431 = -qJDD(4) * t597 + t596 * t885 + qJDD(1);
t1158 = t1099 * t431 + t1140 * t210 + t1141 * t211 + t1146 * t556 + t1154 * t429 - t1155 * t430;
t1157 = t1100 * t431 + t1142 * t210 + t1143 * t211 + t1145 * t556 + t1152 * t429 - t1153 * t430;
t37 = (t613 * t732 - t131) * t597 + (-t135 * t618 + t139 * t621 + t250 * t613 + (-t256 * t621 + t263 * t618) * qJD(4)) * t596;
t39 = (t613 * t730 - t133) * t597 + (-t137 * t618 + t141 * t621 + t253 * t613 + (-t259 * t621 + t266 * t618) * qJD(4)) * t596;
t1151 = t37 + t39;
t38 = (t613 * t731 - t130) * t597 + (-t134 * t618 + t138 * t621 + t252 * t613 + (-t258 * t621 - t264 * t618) * qJD(4)) * t596;
t40 = (t613 * t729 - t132) * t597 + (-t136 * t618 + t140 * t621 + t255 * t613 + (-t261 * t621 - t267 * t618) * qJD(4)) * t596;
t1150 = t38 + t40;
t1147 = t1098 * t556 + t1181 * t429 - t1182 * t430;
t619 = sin(qJ(2));
t1144 = rSges(3,2) * t619;
t1039 = pkin(3) - t586;
t510 = pkin(8) * t858;
t866 = t618 * t1030;
t945 = -t510 + (pkin(8) * t890 + t1039 * t524) * t596 + ((-t613 * t617 - t866) * t623 + t1039 * t890) * t597 - rSges(6,3) * t841 + t1165;
t509 = pkin(3) * t864;
t673 = -t1039 * t597 - t1084;
t772 = rSges(6,1) * t224 + rSges(6,2) * t223;
t795 = t586 * t613 - qJD(5);
t944 = t509 + (qJD(1) * t673 - t865) * t623 + (t867 - t795 * t596 + (-t1038 * t613 - t866) * t597) * t620 + rSges(6,3) * t676 + t772;
t560 = pkin(3) * t958;
t473 = pkin(8) * t964 + t560;
t940 = -t473 + t1167;
t1083 = t1039 * t596;
t962 = t597 * t617;
t693 = -t962 + t1083;
t860 = t596 * t952;
t862 = t596 * t955;
t906 = rSges(6,2) * t862 + rSges(6,3) * t960;
t1136 = -rSges(6,1) * t860 + t620 * t693 - t557 + t906;
t559 = pkin(8) * t958;
t859 = t596 * t950;
t861 = t596 * t946;
t904 = rSges(6,2) * t861 + rSges(6,3) * t958;
t1135 = -rSges(6,1) * t859 + t623 * t693 - t559 + t904;
t1134 = t1190 * t620;
t1133 = t1190 * t623;
t1132 = t1177 * t620;
t1131 = t1177 * t623;
t1035 = rSges(6,1) * t621;
t770 = -rSges(6,2) * t618 + t1035;
t931 = t596 * t770 - t1083 + (-rSges(6,3) + t1038) * t597;
t1130 = t1095 + t1174;
t1129 = t1184 * t596 + t1206;
t1128 = t1186 * t596 + t1205;
t1004 = Icges(4,6) * t623;
t401 = Icges(4,4) * t960 - Icges(4,2) * t965 - t1004;
t575 = Icges(4,4) * t597;
t493 = Icges(4,1) * t596 + t575;
t1127 = -t493 * t620 - t401;
t757 = -Icges(4,2) * t596 + t575;
t402 = Icges(4,6) * t620 + t623 * t757;
t1126 = -t493 * t623 - t402;
t1018 = Icges(4,4) * t596;
t494 = Icges(4,1) * t597 - t1018;
t404 = Icges(4,5) * t620 + t494 * t623;
t491 = Icges(4,2) * t597 + t1018;
t1125 = -t491 * t623 + t404;
t1124 = -t491 + t494;
t1123 = t493 + t757;
t274 = t478 * rSges(5,1) + t477 * rSges(5,2) + rSges(5,3) * t964;
t1031 = pkin(2) * qJD(2);
t869 = t619 * t1031;
t563 = t620 * t869;
t609 = t620 * pkin(6);
t540 = t623 * pkin(1) + t609;
t799 = t623 * t587 - t620 * t624;
t395 = t799 - t540;
t917 = t395 + t540;
t678 = (t473 + t917) * qJD(1) - t523 * t499 - t563;
t103 = t274 * t556 - t390 * t429 + t678;
t1080 = g(1) * t623 + g(2) * t620;
t905 = rSges(5,2) * t862 + rSges(5,3) * t960;
t343 = -rSges(5,1) * t860 + t905;
t903 = rSges(5,2) * t861 + rSges(5,3) * t958;
t345 = -rSges(5,1) * t859 + t903;
t577 = t596 * rSges(5,3);
t392 = rSges(5,1) * t959 - rSges(5,2) * t961 + t577;
t472 = -pkin(3) * t964 + t559;
t801 = qJD(1) * t472 - t1095 * t523;
t806 = t523 * t470 + t472 * t524;
t834 = t597 * t883;
t471 = t1095 * t620;
t611 = t623 * pkin(6);
t539 = pkin(1) * t620 - t611;
t394 = t539 + t899;
t888 = qJD(2) * t623;
t926 = -t394 * t595 + t395 * t888;
t709 = t523 * t471 + t473 * t524 + t926;
t95 = -t272 * t429 + t274 * t430 + t709;
t1122 = -t103 * (t274 * t887 + t556 * t345 - t390 * t834 - t392 * t429 + t801) - t95 * (-t272 * t834 - t274 * t835 + t429 * t343 + t345 * t430 + t806) - t1080 * (-pkin(3) - t1036) * t596;
t1121 = t1173 * t596;
t1120 = -t1139 * t430 + t1179 * t556 + t1180 * t429;
t1091 = t1181 * t623 + t1182 * t620;
t1119 = -t1181 * t620 + t1182 * t623;
t1090 = t1140 * t623 + t1141 * t620;
t1118 = -t1140 * t620 + t1141 * t623;
t1089 = t1142 * t623 + t1143 * t620;
t1117 = -t1142 * t620 + t1143 * t623;
t1116 = -t1130 * t430 + t1136 * t556 + t1175 * t931 - t597 * t879 + t1169;
t1115 = t1175 * t390 - t272 * t887 + t343 * t556 + t430 * t392 + t1169;
t776 = rSges(5,1) * t224 + rSges(5,2) * t223;
t145 = rSges(5,3) * t676 + t776;
t773 = -rSges(5,1) * t618 - rSges(5,2) * t621;
t963 = t597 * t613;
t202 = t774 * t963 + (rSges(5,3) * t613 + qJD(4) * t773) * t596;
t411 = t623 * t873 + t895;
t422 = t1095 * t613;
t1046 = pkin(2) * t619;
t514 = -qJDD(2) * t623 + t581;
t479 = t514 * t1046;
t918 = t394 - t539;
t843 = -t471 + t918;
t665 = qJDD(1) * t843 + t411 * t499 - t524 * t422 + t479;
t948 = t622 * qJD(2) ^ 2;
t872 = pkin(2) * t948;
t798 = t623 * t872;
t281 = pkin(8) * t676 + qJD(1) * t560 - t509;
t1040 = pkin(1) - t587;
t897 = t624 * t890 + t563;
t322 = (-t1040 * t623 - t609) * qJD(1) - t897;
t512 = t540 * qJD(1);
t932 = -t322 - t512;
t850 = -t281 + t932;
t41 = qJD(1) * t850 - t145 * t556 - t202 * t430 + t211 * t390 + t272 * t431 + t665 - t798;
t1114 = (qJD(1) * t103 + t41) * t623;
t881 = qJD(5) * t613;
t655 = qJDD(5) * t596 + t597 * t881 - t872;
t880 = qJD(5) * t620;
t833 = t596 * t880;
t1032 = rSges(6,2) * t621;
t769 = -rSges(6,1) * t618 - t1032;
t882 = qJD(5) * t597;
t943 = t613 * t673 + t770 * t963 - t882 + (rSges(6,3) * t613 + qJD(4) * t769 - t866) * t596;
t24 = -t944 * t556 + t941 * t431 - t943 * t430 + t931 * t211 + t655 * t623 + (-t833 + t850) * qJD(1) + t665;
t84 = -t429 * t931 + t556 * t940 + t678 + t833;
t1113 = (qJD(1) * t84 + t24) * t623;
t70 = -t429 * t941 + t430 * t940 + t709 - t882;
t814 = t84 * t931;
t1112 = t70 * t941 + t814;
t578 = t597 * rSges(4,1);
t1082 = -rSges(4,2) * t596 + t578;
t405 = rSges(4,1) * t960 - rSges(4,2) * t965 - t623 * rSges(4,3);
t605 = t620 * rSges(4,3);
t406 = rSges(4,1) * t958 - rSges(4,2) * t964 + t605;
t151 = t405 * t523 + t406 * t524 + t926;
t497 = rSges(4,1) * t596 + rSges(4,2) * t597;
t837 = t619 * t888;
t794 = pkin(2) * t837;
t680 = -t497 * t524 - t794;
t846 = -t405 + t918;
t160 = qJD(1) * t846 + t680;
t161 = -t497 * t523 - t563 + (t406 + t917) * qJD(1);
t468 = t497 * t620;
t469 = t497 * t623;
t1111 = -t160 * (qJD(1) * t468 - t1082 * t524) - t151 * (-t523 * t468 - t469 * t524) - t161 * (-qJD(1) * t469 - t1082 * t523);
t677 = -t597 * t890 - t863;
t280 = pkin(3) * t677 - pkin(8) * t841 + t510;
t1072 = qJD(1) * t280 + qJDD(1) * t473 - t410 * t499 - t523 * t422;
t591 = pkin(6) * t889;
t321 = -t794 - t591 + (t1040 * t620 - t590) * qJD(1);
t908 = qJD(1) * (-pkin(1) * t890 + t591) + qJDD(1) * t540;
t792 = qJD(1) * t321 + qJDD(1) * t395 + t908;
t971 = t513 * t619;
t25 = -pkin(2) * t971 + qJD(1) * t536 - t210 * t931 - t429 * t943 + t431 * t940 + t556 * t945 + t620 * t655 + t1072 + t792;
t1107 = t25 * t620;
t520 = qJD(1) * t539;
t1097 = qJD(1) * t394 - t520;
t1096 = -t524 * t499 - t794;
t1093 = (t1202 * t596 - t1190) * t556 + (t1170 * t475 + t1138 + t435 + t438) * t430 + (t1170 * t477 - t1014 - t1017 - t1192) * t429;
t1092 = t1168 * t596;
t604 = Icges(3,4) * t622;
t758 = -Icges(3,2) * t619 + t604;
t529 = Icges(3,1) * t619 + t604;
t1081 = t1098 * t431 + t1171 * t556;
t1001 = Icges(3,3) * t623;
t951 = t620 * t622;
t954 = t619 * t620;
t423 = Icges(3,5) * t951 - Icges(3,6) * t954 - t1001;
t1011 = Icges(3,5) * t623;
t569 = Icges(3,4) * t954;
t427 = Icges(3,1) * t951 - t1011 - t569;
t1005 = Icges(3,6) * t623;
t425 = Icges(3,4) * t951 - Icges(3,2) * t954 - t1005;
t975 = t425 * t619;
t721 = -t427 * t622 + t975;
t168 = -t423 * t623 - t620 * t721;
t1000 = Icges(4,3) * t623;
t490 = Icges(4,5) * t597 - Icges(4,6) * t596;
t489 = Icges(4,5) * t596 + Icges(4,6) * t597;
t972 = t489 * t623;
t978 = t402 * t596;
t1078 = -t613 * t972 + (-t404 * t597 - t490 * t620 + t1000 + t978) * qJD(1);
t1010 = Icges(4,5) * t623;
t543 = Icges(4,4) * t965;
t403 = Icges(4,1) * t960 - t1010 - t543;
t723 = t401 * t596 - t403 * t597;
t400 = Icges(4,3) * t620 + t490 * t623;
t893 = qJD(1) * t400;
t973 = t489 * t620;
t1077 = qJD(1) * t723 - t613 * t973 + t893;
t526 = Icges(3,5) * t622 - Icges(3,6) * t619;
t525 = Icges(3,5) * t619 + Icges(3,6) * t622;
t681 = qJD(2) * t525;
t1019 = Icges(3,4) * t619;
t530 = Icges(3,1) * t622 - t1019;
t428 = Icges(3,5) * t620 + t530 * t623;
t426 = Icges(3,6) * t620 + t623 * t758;
t974 = t426 * t619;
t720 = -t428 * t622 + t974;
t1076 = -t623 * t681 + (-t526 * t620 + t1001 + t720) * qJD(1);
t424 = Icges(3,3) * t620 + t526 * t623;
t892 = qJD(1) * t424;
t1075 = qJD(1) * t721 - t620 * t681 + t892;
t718 = t491 * t596 - t493 * t597;
t1074 = qJD(1) * t718 + t490 * t613;
t527 = Icges(3,2) * t622 + t1019;
t716 = t527 * t619 - t529 * t622;
t1073 = t716 * qJD(1) + t526 * qJD(2);
t1071 = t620 * (-t527 * t623 + t428) - t623 * (-Icges(3,2) * t951 + t427 - t569);
t1068 = qJD(1) * t1123 + t523 * t1125 - t524 * (-Icges(4,2) * t960 + t403 - t543);
t1067 = t210 / 0.2e1;
t1066 = t211 / 0.2e1;
t1065 = t410 / 0.2e1;
t1064 = t411 / 0.2e1;
t1063 = -t429 / 0.2e1;
t1062 = t429 / 0.2e1;
t1061 = -t430 / 0.2e1;
t1060 = t430 / 0.2e1;
t1058 = t513 / 0.2e1;
t1057 = t514 / 0.2e1;
t1056 = -t523 / 0.2e1;
t1055 = t523 / 0.2e1;
t1054 = -t524 / 0.2e1;
t1053 = t524 / 0.2e1;
t1052 = -t556 / 0.2e1;
t1051 = t556 / 0.2e1;
t1049 = t620 / 0.2e1;
t1048 = -t623 / 0.2e1;
t1047 = -rSges(5,3) - pkin(8);
t1042 = -qJD(1) / 0.2e1;
t1041 = qJD(1) / 0.2e1;
t1037 = rSges(3,1) * t622;
t1034 = rSges(3,2) * t622;
t1029 = t37 * t430;
t1028 = t38 * t429;
t1027 = t39 * t430;
t1026 = t40 * t429;
t606 = t620 * rSges(3,3);
t1025 = qJDD(1) / 0.2e1;
t1024 = -rSges(6,3) + t617;
t997 = qJD(1) * t70;
t995 = qJD(1) * t95;
t994 = t103 * t620;
t989 = t114 * t211;
t988 = t115 * t210;
t987 = t116 * t211;
t986 = t117 * t210;
t983 = t160 * t620;
t531 = rSges(3,1) * t619 + t1034;
t838 = t531 * t888;
t896 = rSges(3,2) * t954 + t623 * rSges(3,3);
t432 = rSges(3,1) * t951 - t896;
t911 = -t432 - t539;
t276 = qJD(1) * t911 - t838;
t982 = t276 * t620;
t981 = t276 * t623;
t949 = t622 * t623;
t953 = t619 * t623;
t433 = rSges(3,1) * t949 - rSges(3,2) * t953 + t606;
t365 = t433 + t540;
t277 = qJD(1) * t365 - t531 * t595;
t487 = t531 * t623;
t980 = t277 * t487;
t969 = t525 * t620;
t968 = t525 * t623;
t399 = Icges(4,5) * t960 - Icges(4,6) * t965 - t1000;
t947 = t623 * t399;
t942 = -t202 - t422;
t935 = -t274 - t473;
t934 = -t476 * rSges(6,2) - t1172 * t475;
t933 = -t478 * rSges(6,2) + t1172 * t477;
t930 = -t620 * t399 - t403 * t958;
t929 = t620 * t400 + t404 * t958;
t925 = -t620 * t394 + t623 * t395;
t924 = t620 * t405 + t623 * t406;
t923 = -t620 * t423 - t427 * t949;
t922 = t620 * t424 + t428 * t949;
t914 = t620 * t471 + t623 * t473;
t902 = rSges(4,2) * t841 + rSges(4,3) * t889;
t901 = -t527 + t530;
t900 = t529 + t758;
t898 = rSges(3,3) * t889 + t1144 * t890;
t891 = qJD(1) * t526;
t187 = -t620 * t718 - t972;
t878 = t187 * qJD(1);
t282 = -t620 * t716 - t968;
t877 = t282 * qJD(1);
t868 = t622 * t1031;
t856 = -t422 - t943;
t238 = rSges(4,1) * t677 - rSges(4,2) * t858 + t902;
t239 = -t613 * t468 + (t1082 * t623 + t605) * qJD(1);
t855 = t623 * t238 + t620 * t239 + t405 * t889;
t853 = t222 * rSges(5,1) + t221 * rSges(5,2) + rSges(5,3) * t858;
t852 = -t473 - t940;
t851 = t623 * t280 + t620 * t281 + t471 * t889;
t849 = t623 * t321 + t620 * t322 - t394 * t889;
t845 = t557 + t905;
t844 = t559 + t903;
t842 = t1047 * t596;
t839 = t619 * t889;
t828 = t963 / 0.2e1;
t827 = -pkin(1) - t1037;
t825 = t890 / 0.2e1;
t824 = t889 / 0.2e1;
t823 = -t595 / 0.2e1;
t822 = t595 / 0.2e1;
t821 = -t888 / 0.2e1;
t820 = t888 / 0.2e1;
t679 = -t497 - t1046;
t817 = -t499 - t1046;
t816 = t70 * t940;
t651 = qJD(1) * t843 + t1096;
t83 = -t430 * t931 + t1188 + t651;
t815 = t83 * t941;
t813 = -t586 - t1035;
t812 = (-t620 ^ 2 - t623 ^ 2) * t619;
t811 = (-t620 * t757 + t1004) * qJD(1) + t1125 * t613;
t810 = qJD(1) * t402 + t403 * t613 - t491 * t957;
t809 = (-t494 * t620 + t1010) * qJD(1) + t1126 * t613;
t808 = qJD(1) * t404 + t1127 * t613;
t348 = t404 * t960;
t807 = t623 * t400 - t348;
t374 = t428 * t951;
t805 = t424 * t623 - t374;
t804 = -t399 + t978;
t803 = t1123 * t613;
t802 = t1124 * t613;
t800 = -t423 + t974;
t791 = -t272 * t620 + t623 * t274 + t914;
t783 = (t1045 - t769) * t596;
t781 = -t390 + t817;
t419 = t1082 * t613;
t780 = -t419 - t868;
t779 = -t422 - t868;
t534 = rSges(2,1) * t623 - rSges(2,2) * t620;
t532 = rSges(2,1) * t620 + rSges(2,2) * t623;
t533 = t1037 - t1144;
t768 = t620 * t84 + t623 * t83;
t279 = t426 * t622 + t428 * t619;
t682 = qJD(2) * t527;
t298 = -t623 * t682 + (-t620 * t758 + t1005) * qJD(1);
t683 = qJD(2) * t529;
t300 = -t623 * t683 + (-t530 * t620 + t1011) * qJD(1);
t635 = -qJD(2) * t279 - t298 * t619 + t300 * t622 + t892;
t278 = t425 * t622 + t427 * t619;
t299 = qJD(1) * t426 - t620 * t682;
t301 = qJD(1) * t428 - t620 * t683;
t636 = qJD(1) * t423 - qJD(2) * t278 - t299 * t619 + t301 * t622;
t766 = t620 * (t1076 * t620 + t635 * t623) - t623 * (t1075 * t620 + t636 * t623);
t765 = t620 * (-t1076 * t623 + t635 * t620) - t623 * (-t1075 * t623 + t636 * t620);
t102 = t1183 + t651;
t748 = t102 * t623 + t994;
t735 = -t160 * t623 - t161 * t620;
t169 = -t426 * t954 - t805;
t734 = -t168 * t623 + t169 * t620;
t170 = -t425 * t953 - t923;
t171 = -t426 * t953 + t922;
t733 = -t170 * t623 + t171 * t620;
t728 = -t272 * t623 - t274 * t620;
t727 = -t277 * t620 - t981;
t302 = -t888 * t1034 + (-t622 * t890 - t837) * rSges(3,1) + t898;
t486 = t531 * t620;
t303 = -qJD(2) * t486 + (t533 * t623 + t606) * qJD(1);
t726 = t302 * t623 + t303 * t620;
t190 = t401 * t597 + t403 * t596;
t719 = t432 * t620 + t433 * t623;
t717 = t527 * t622 + t529 * t619;
t715 = t817 - t931;
t712 = -t202 + t779;
t710 = t321 * t888 + t322 * t595 - t513 * t394 - t395 * t514;
t707 = t842 - t584;
t143 = -rSges(5,3) * t841 + t853;
t706 = t623 * t143 + t620 * t145 - t272 * t889 + t851;
t705 = -t620 * t941 + t623 * t940 + t914;
t704 = -t587 + t1176;
t691 = t779 - t943;
t684 = t723 * t620;
t674 = t392 + t1095;
t668 = qJD(1) * t490 - t523 * t972 + t524 * t973;
t667 = t83 * t931 - t816;
t666 = t425 * t623 - t426 * t620;
t664 = t620 * t944 + t623 * t945 - t889 * t941 + t851;
t654 = (-t619 * t900 + t622 * t901) * qJD(1);
t653 = -qJD(1) * t471 + t1096 + t1097;
t649 = (-t620 * t948 - t971) * pkin(2) + t792;
t643 = qJD(1) * t1124 + t1126 * t523 - t1127 * t524;
t642 = t280 * t524 + t523 * t281 + t410 * t471 - t411 * t473 + t710;
t639 = qJD(1) * t399 - t596 * t810 + t597 * t808;
t638 = -t596 * t811 + t597 * t809 + t893;
t637 = qJD(1) * t489 - t596 * t803 + t597 * t802;
t502 = t758 * qJD(2);
t503 = t530 * qJD(2);
t634 = qJD(1) * t525 - qJD(2) * t717 - t502 * t619 + t503 * t622;
t633 = -t1071 * t619 + t666 * t622;
t630 = -t1068 * t596 + t643 * t597;
t100 = t1074 * t620 + t637 * t623;
t101 = -t1074 * t623 + t637 * t620;
t112 = t596 * t808 + t597 * t810;
t113 = t596 * t809 + t597 * t811;
t163 = -t684 - t947;
t164 = -t402 * t965 - t807;
t165 = -t401 * t964 - t930;
t166 = -t402 * t964 + t929;
t188 = -t623 * t718 + t973;
t191 = t402 * t597 + t404 * t596;
t78 = t1077 * t620 + t639 * t623;
t79 = t1078 * t620 + t638 * t623;
t80 = -t1077 * t623 + t639 * t620;
t81 = -t1078 * t623 + t638 * t620;
t91 = -t163 * t524 + t164 * t523 + t878;
t185 = t188 * qJD(1);
t92 = -t165 * t524 + t166 * t523 + t185;
t628 = (qJD(1) * t101 + qJDD(1) * t187 + t163 * t411 + t164 * t410 + t523 * t81 - t524 * t80 + t1157) * t1048 + (qJD(1) * t100 + qJDD(1) * t188 + t165 * t411 + t166 * t410 + t523 * t79 - t524 * t78 + t1158) * t1049 + (t620 * t630 - t623 * t668) * t1053 + (t620 * t81 - t623 * t80 + (t163 * t620 + t164 * t623) * qJD(1)) * t1054 + (t620 * t79 - t623 * t78 + (t165 * t620 + t166 * t623) * qJD(1)) * t1055 + (t620 * t668 + t623 * t630) * t1056 - t1147 * t887 / 0.2e1 + (t92 + t1148) * t824 + (t91 + t1149) * t825 + (qJD(1) * t1091 + t1150 * t620 - t1151 * t623) * t1051 + (qJD(1) * t1089 + t1152 * t620 - t1153 * t623) * t1061 + ((qJD(4) * t1091 - t1173) * t597 + ((t1128 * t621 - t1129 * t618 + t1179) * t556 + (t1132 * t621 - t1134 * t618 - t1139) * t430 + (-t1131 * t621 + t1133 * t618 + t1180) * t429 + t1098 * qJD(4)) * t596) * t1052 + (-t112 * t623 + t113 * t620 + (t190 * t620 + t191 * t623) * qJD(1)) * t1041 + (t1068 * t597 + t643 * t596) * t1042 + (-t190 * t623 + t191 * t620) * t1025 + ((t1099 * t596 + t1141 * t960) * qJD(4) + ((qJD(4) * t1140 + t1120) * t597 + t1121) * t623 + (t1128 * t478 + t1129 * t477) * t556 + (t1132 * t478 + t1134 * t477) * t430 + (-t1131 * t478 - t1133 * t477) * t429) * t1063 + ((t1100 * t596 + t1142 * t958) * qJD(4) + ((qJD(4) * t1143 + t1120) * t597 + t1121) * t620 + (t1128 * t476 - t1129 * t475) * t556 + (t1132 * t476 - t1134 * t475) * t430 + (-t1131 * t476 + t1133 * t475) * t429) * t1060 - t1117 * t211 / 0.2e1 - t1118 * t210 / 0.2e1 - t1119 * t431 / 0.2e1 + (-t163 * t623 + t164 * t620) * t1064 + (-t165 * t623 + t166 * t620) * t1065 + (qJD(1) * t1090 + t1154 * t620 - t1155 * t623) * t1062 - (t1148 * t623 + t1149 * t620) * t886 / 0.2e1;
t627 = t70 * (qJD(5) * t596 + t1135 * t430 + t1136 * t429 - t834 * t941 + t806) + t84 * (t1130 * t429 + t1135 * t556 + t597 * t880 + t887 * t940 + t801) + (t596 * t815 + (-t620 * t816 - t623 * t814) * t597) * qJD(4);
t506 = t533 * qJD(2);
t467 = t773 * t596;
t320 = rSges(5,1) * t477 - rSges(5,2) * t478;
t318 = -rSges(5,1) * t475 - rSges(5,2) * t476;
t283 = -t623 * t716 + t969;
t275 = t283 * qJD(1);
t249 = t719 * qJD(2);
t149 = qJD(1) * t302 + qJDD(1) * t433 - t506 * t595 - t513 * t531 + t908;
t148 = -t506 * t888 + t514 * t531 + t911 * qJDD(1) + (-t303 - t512) * qJD(1);
t125 = -t1073 * t623 + t634 * t620;
t124 = t1073 * t620 + t634 * t623;
t123 = -qJD(2) * t720 + t298 * t622 + t300 * t619;
t122 = -qJD(2) * t721 + t299 * t622 + t301 * t619;
t99 = qJD(2) * t733 + t275;
t98 = qJD(2) * t734 + t877;
t94 = qJD(1) * t238 + qJDD(1) * t406 - t410 * t497 - t419 * t523 + t649;
t93 = -t798 + t411 * t497 - t419 * t524 + t479 + t846 * qJDD(1) + (-t239 + t932) * qJD(1);
t73 = t238 * t524 + t239 * t523 + t405 * t410 - t406 * t411 + t710;
t42 = t143 * t556 - t202 * t429 - t210 * t390 + t274 * t431 + t1072 + t649;
t28 = t143 * t430 + t145 * t429 - t210 * t272 - t211 * t274 + t642;
t19 = -qJDD(5) * t597 - t210 * t941 - t211 * t940 + t429 * t944 + t430 * t945 + t596 * t881 + t642;
t1 = [(t100 + t113) * t1055 + (t160 * t897 + t161 * (-t794 + t902) + (-t161 * t469 + t497 * t983) * t613 + ((-t160 * rSges(4,3) + t161 * (-t587 - t578)) * t620 + (t160 * (-t587 - t1082) - t161 * t624) * t623) * qJD(1) - (-qJD(1) * t405 + t1097 - t160 + t680) * t161 + (t94 - g(2)) * (t406 + t799) + (t93 - g(1)) * (-t405 + t899)) * m(4) + (m(2) * (t532 ^ 2 + t534 ^ 2) + t491 * t597 + t493 * t596 + Icges(2,3) + t717) * qJDD(1) + (t187 + t190) * t1064 + t988 / 0.2e1 + t989 / 0.2e1 + (t123 + t124) * t822 + (t101 + t112 + t92) * t1054 + (-t877 + ((t623 * t800 + t171 - t922) * t623 + (t620 * t800 + t170 + t805) * t620) * qJD(2) + t98) * t823 + (t91 - t878 + (t166 - t684 - t929) * t524 + (t620 * t804 + t165 - t348) * t523 + ((t400 + t723) * t523 + t804 * t524) * t623) * t1056 + (t188 + t191) * t1065 + (t185 + (t164 + (t401 * t623 + t402 * t620) * t596 + t807 + t930) * t524 + (-t403 * t960 + t947 + t163 + (t401 * t620 - t402 * t623) * t596 + t929) * t523) * t1053 + t1146 * t1062 + (t1145 + t1148) * t1061 + (-(-qJD(1) * t432 - t276 - t520 - t838) * t277 + t277 * (t591 + t898) + (t531 * t982 - t980) * qJD(2) + ((-pkin(1) - t533) * t981 + (t276 * (-rSges(3,3) - pkin(6)) + t277 * t827) * t620) * qJD(1) + (-g(2) + t149) * t365 + (-g(1) + t148) * (t620 * t827 + t611 + t896)) * m(3) + t1081 + t1099 * t1067 + t1100 * t1066 + (t275 + ((t169 - t374 + (t424 + t975) * t623 + t923) * t623 + t922 * t620) * qJD(2)) * t820 + (t122 + t125 + t99) * t821 + t986 / 0.2e1 + t987 / 0.2e1 + (t1139 * t597 + (t1137 * t621 + t1138 * t618) * t596 + t1182) * t429 * t1052 - m(2) * (-g(1) * t532 + g(2) * t534) + (t283 + t279) * t1058 + (-qJD(2) * t716 + t502 * t622 + t503 * t619 + t596 * t802 + t597 * t803) * qJD(1) + t1148 * t1060 + (t282 + t278) * t1057 + (t24 * (-t495 + t1164) + t83 * (-t772 + t897) + t84 * t1165 + (t84 * (-t869 + (-t586 * t596 - t962) * t613) + (t24 * t618 + (t621 * t83 - t84 * t961) * qJD(4)) * pkin(4) + (t83 * (t704 + t966) - t84 * t624) * qJD(1)) * t623 + (t83 * (t1024 * t613 + t866) * t597 + (t1024 * t24 + t795 * t83) * t596 + (-t1045 * t83 + t704 * t84) * qJD(1)) * t620 - g(1) * (t1024 * t965 + t1164 + t782) - (-t83 + t653 + t1188) * t84 + t814 * t430 + (t25 - g(2)) * (t799 + t1167)) * m(6) - t1027 / 0.2e1 + t1028 / 0.2e1 - t1029 / 0.2e1 + (-(t620 * t707 + t1166) * g(1) - (-t102 + t1183 + t653) * t103 + t41 * t1166 + t102 * (t509 - t776 + t897) + t103 * (-pkin(3) * t863 + t510 - t794 + t853) + (t41 * t842 + (t102 * t1047 * t613 - t41 * pkin(3)) * t597) * t620 + ((-t587 + t707) * t994 + (t102 * (-t587 - t1095 - t577) - t103 * t624) * t623) * qJD(1) + (-g(2) + t42) * (t799 - t935)) * m(5) + t1026 / 0.2e1; ((-t888 * t969 - t891) * t623 + (t654 + (t623 * t968 + t633) * qJD(2)) * t620) * t820 + ((-t595 * t968 + t891) * t620 + (t654 + (t620 * t969 + t633) * qJD(2)) * t623) * t823 + t734 * t1057 + t733 * t1058 + ((t619 * t901 + t622 * t900) * qJD(1) + (t1071 * t622 + t666 * t619) * qJD(2)) * t1042 + (-t122 * t623 + t123 * t620 + (t278 * t620 + t279 * t623) * qJD(1)) * t1041 + (qJD(1) * t125 + qJD(2) * t765 + qJDD(1) * t282 + t168 * t514 + t169 * t513) * t1048 + (qJD(1) * t124 + qJD(2) * t766 + qJDD(1) * t283 + t170 * t514 + t171 * t513) * t1049 + (-t278 * t623 + t279 * t620) * t1025 + t99 * t824 + t98 * t825 + ((t168 * t620 + t169 * t623) * qJD(1) + t765) * t821 + ((t170 * t620 + t171 * t623) * qJD(1) + t766) * t822 + t628 + (t19 * (t705 + t925) + t70 * (t664 + t849) + t715 * t1113 + (t25 * t715 + t84 * t691 + (-t395 + t852) * t997) * t620 - (-t84 * t839 + (-t622 * t768 + t70 * t812) * qJD(2)) * pkin(2) - t627 - g(1) * t904 - g(2) * t906 - g(3) * (t610 - t1174) - t1080 * (t596 * t813 - t1046 - t962) + (t623 * t691 + t1116) * t83) * m(6) + (t28 * (t791 + t925) + t95 * (t706 + t849) + t781 * t1114 + (t42 * t781 + t103 * t712 + (-t395 + t935) * t995) * t620 - (-t103 * t839 + (-t622 * t748 + t812 * t95) * qJD(2)) * pkin(2) - g(1) * (-pkin(2) * t953 + t844) - g(2) * (-pkin(2) * t954 + t845) - g(3) * (t610 + t674) + (t623 * t712 + t1115) * t102 + t1122) * m(5) + (t73 * (t924 + t925) + t151 * (t849 + t855) + (t160 * t780 + (qJD(1) * t161 + t93) * t679) * t623 + (t94 * t679 + t161 * t780 + (t160 * t497 + t151 * (-t395 - t406)) * qJD(1)) * t620 - (-t161 * t839 + (t151 * t812 + t622 * t735) * qJD(2)) * pkin(2) - g(3) * (t1082 + t610) - t1080 * t679 + t1111) * m(4) + (g(1) * t487 + g(2) * t486 - g(3) * t533 - (t276 * t486 - t980) * qJD(1) - (t249 * (-t486 * t620 - t487 * t623) + t727 * t533) * qJD(2) + (qJD(2) * t726 + t432 * t513 - t433 * t514) * t719 + t249 * ((t432 * t623 - t433 * t620) * qJD(1) + t726) + t727 * t506 + (-t148 * t623 - t149 * t620 + (-t277 * t623 + t982) * qJD(1)) * t531) * m(3); t628 + (t19 * t705 + t70 * t664 + (t84 * t856 + t852 * t997) * t620 - g(1) * (-t597 * t956 + t904) - g(2) * (-t617 * t960 + t906) - g(3) * t692 - (-g(3) * t617 + t1080 * t813) * t596 - t627 + (t1107 + t1113) * (-t499 - t931) + (t623 * t856 + t1116) * t83) * m(6) + (t28 * t791 + t95 * t706 + (t103 * t942 + t935 * t995) * t620 - g(1) * t844 - g(2) * t845 - g(3) * t674 + (t42 * t620 + t1114) * (-t390 - t499) + (t623 * t942 + t1115) * t102 + t1122) * m(5) + (t73 * t924 + t151 * (-t406 * t890 + t855) + t735 * t419 + (-t94 * t620 - t93 * t623 + (-t161 * t623 + t983) * qJD(1)) * t497 + g(1) * t469 + g(2) * t468 - g(3) * t1082 + t1111) * m(4); t1147 * t967 / 0.2e1 + t1157 * t965 / 0.2e1 + t1158 * t964 / 0.2e1 + (t1090 * t596 - t1099 * t597) * t1067 + (t1089 * t596 - t1100 * t597) * t1066 + (-t1092 * t623 + t1093 * t478 - t1094 * t477) * t1063 + ((t1090 * t613 - t1146) * t597 + (qJD(1) * t1118 + t1099 * t613 + t1154 * t623 + t1155 * t620) * t596) * t1062 + ((t1089 * t613 - t1145) * t597 + (qJD(1) * t1117 + t1100 * t613 + t1152 * t623 + t1153 * t620) * t596) * t1061 + (-t1092 * t620 + t1093 * t476 + t1094 * t475) * t1060 + (t1091 * t596 - t1098 * t597) * t431 / 0.2e1 + (t1168 * t597 + (t1093 * t621 + t1094 * t618) * t596) * t1052 + ((t1091 * t613 - t1171) * t597 + (qJD(1) * t1119 + t1098 * t613 + t1150 * t623 + t1151 * t620) * t596) * t1051 - (t1028 + t988 + t989 - t1029 + t1026 + t986 + t987 - t1027 + t1081) * t597 / 0.2e1 + (-(-t83 * t934 + t84 * t933) * t556 - (t70 * t933 + t783 * t83) * t430 - (t70 * t934 + t783 * t84) * t429 - g(1) * t933 - g(2) * t934 + (-t24 * t941 + t83 * t944 - t25 * t940 - t84 * t945 + (-t1112 * t623 + t667 * t620) * t613) * t597 + (-g(3) * (-t1172 * t618 - t1032) + (t84 * t940 + t815) * t613 + (qJD(1) * t667 - t19 * t941 - t25 * t931 + t70 * t944 - t84 * t943) * t623 + (qJD(1) * t1112 - t19 * t940 + t24 * t931 - t70 * t945 + t83 * t943) * t620) * t596) * m(6) + (-t102 * (-t318 * t556 - t430 * t467) - t103 * (t320 * t556 - t429 * t467) - t95 * (t318 * t429 + t320 * t430) - g(1) * t320 - g(2) * t318 - g(3) * t467 + (t102 * t145 - t103 * t143 - t41 * t272 - t42 * t274 + (t95 * t728 + (t102 * t620 - t103 * t623) * t390) * t613) * t597 + (t102 * (t202 * t620 + t272 * t613) + t103 * (-t202 * t623 + t274 * t613) + t28 * t728 + t95 * (-t143 * t620 + t145 * t623 + t272 * t890 - t274 * t889) + (qJD(1) * t748 + t41 * t620 - t42 * t623) * t390) * t596) * m(5) + t1149 * (t596 * t824 + t620 * t828) + t1148 * (-t841 / 0.2e1 + t623 * t828); ((-t429 * t84 - t430 * t83 + t613 * t768 + g(3) - t19) * t597 + (t24 * t623 + t1107 + (qJD(1) - t556) * (-t620 * t83 + t623 * t84) + (-t429 * t620 - t430 * t623 + t613) * t70 - t1080) * t596) * m(6);];
tau = t1;
