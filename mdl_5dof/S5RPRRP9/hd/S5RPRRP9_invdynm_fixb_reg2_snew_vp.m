% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRRP9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:50
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRRP9_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP9_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP9_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP9_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP9_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP9_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:49:39
% EndTime: 2019-12-31 18:50:00
% DurationCPUTime: 22.01s
% Computational Cost: add. (71294->613), mult. (176042->769), div. (0->0), fcn. (132044->8), ass. (0->425)
t1303 = sin(pkin(8));
t1304 = cos(pkin(8));
t1306 = sin(qJ(3));
t1309 = cos(qJ(3));
t1333 = t1303 * t1306 - t1304 * t1309;
t1265 = t1333 * qJD(1);
t1334 = t1303 * t1309 + t1304 * t1306;
t1267 = t1334 * qJD(1);
t1305 = sin(qJ(4));
t1308 = cos(qJ(4));
t1230 = -t1305 * t1265 + t1308 * t1267;
t1227 = t1230 ^ 2;
t1302 = qJD(3) + qJD(4);
t1414 = t1302 ^ 2;
t1168 = t1414 + t1227;
t1299 = qJDD(3) + qJDD(4);
t1228 = t1308 * t1265 + t1305 * t1267;
t1400 = t1230 * t1228;
t1427 = t1299 + t1400;
t1385 = t1305 * t1427;
t1088 = t1308 * t1168 + t1385;
t1373 = t1308 * t1427;
t1122 = t1305 * t1168 - t1373;
t1036 = t1309 * t1088 - t1306 * t1122;
t1062 = t1306 * t1088 + t1309 * t1122;
t1006 = t1303 * t1036 + t1304 * t1062;
t1307 = sin(qJ(1));
t1310 = cos(qJ(1));
t1264 = t1334 * qJDD(1);
t1399 = t1265 * qJD(3);
t1240 = -t1399 + t1264;
t1398 = t1267 * qJD(3);
t1421 = t1333 * qJDD(1);
t1322 = -t1421 - t1398;
t1150 = -t1228 * qJD(4) + t1308 * t1240 + t1305 * t1322;
t1396 = t1302 * t1228;
t1428 = t1150 - t1396;
t1502 = pkin(5) * (t1310 * t1006 + t1307 * t1428);
t1501 = pkin(5) * (t1307 * t1006 - t1310 * t1428);
t979 = t1304 * t1036 - t1303 * t1062;
t1500 = pkin(1) * t979;
t1499 = qJ(2) * t979;
t1498 = pkin(1) * t1428 - qJ(2) * t1006;
t1415 = t1228 ^ 2;
t1422 = -t1415 + t1227;
t1347 = -t1305 * t1240 + t1308 * t1322;
t1149 = t1230 * qJD(4) - t1347;
t1218 = t1302 * t1230;
t1429 = t1149 + t1218;
t1051 = -t1305 * t1429 + t1308 * t1428;
t1388 = t1305 * t1428;
t1053 = t1308 * t1429 + t1388;
t991 = -t1309 * t1051 + t1306 * t1053;
t995 = t1306 * t1051 + t1309 * t1053;
t956 = t1303 * t991 - t1304 * t995;
t1497 = t1307 * t956 - t1310 * t1422;
t1496 = t1307 * t1422 + t1310 * t956;
t1210 = t1415 - t1414;
t1127 = t1305 * t1210 + t1373;
t1131 = t1308 * t1210 - t1385;
t1066 = t1309 * t1127 + t1306 * t1131;
t1071 = t1306 * t1127 - t1309 * t1131;
t1015 = t1303 * t1066 + t1304 * t1071;
t1106 = t1149 - t1218;
t1493 = t1307 * t1015 - t1310 * t1106;
t1492 = t1310 * t1015 + t1307 * t1106;
t1491 = pkin(2) * t1036;
t1490 = pkin(6) * t1036;
t1489 = -pkin(2) * t1428 + pkin(6) * t1062;
t950 = t1303 * t995 + t1304 * t991;
t1010 = t1304 * t1066 - t1303 * t1071;
t1425 = t1396 + t1150;
t1211 = t1227 - t1414;
t1424 = -t1400 + t1299;
t1384 = t1305 * t1424;
t1457 = -t1308 * t1211 + t1384;
t1163 = t1308 * t1424;
t1458 = t1305 * t1211 + t1163;
t1467 = -t1306 * t1457 + t1309 * t1458;
t1468 = t1306 * t1458 + t1309 * t1457;
t1479 = -t1303 * t1468 + t1304 * t1467;
t1488 = t1307 * t1479 - t1310 * t1425;
t1487 = t1307 * t1425 + t1310 * t1479;
t1423 = -t1414 - t1415;
t1434 = t1308 * t1423 - t1384;
t1435 = t1305 * t1423 + t1163;
t1450 = t1306 * t1434 + t1309 * t1435;
t1451 = -t1306 * t1435 + t1309 * t1434;
t1470 = t1303 * t1451 + t1304 * t1450;
t1486 = pkin(1) * t1470;
t1085 = pkin(3) * t1088;
t1485 = pkin(7) * t1088;
t1484 = pkin(7) * t1122;
t1483 = qJ(2) * t1470;
t1469 = -t1303 * t1450 + t1304 * t1451;
t1482 = -pkin(1) * t1429 + qJ(2) * t1469;
t1481 = pkin(5) * (t1307 * t1469 - t1310 * t1429);
t1480 = pkin(5) * (t1307 * t1429 + t1310 * t1469);
t1478 = t1303 * t1467 + t1304 * t1468;
t1477 = pkin(2) * t1450;
t1476 = pkin(6) * t1450;
t1397 = t1267 * t1265;
t1456 = qJDD(3) - t1397;
t1474 = t1306 * t1456;
t1472 = t1309 * t1456;
t1471 = -pkin(2) * t1429 + pkin(6) * t1451;
t1146 = -t1415 - t1227;
t1466 = pkin(1) * t1146;
t1465 = pkin(2) * t1146;
t1464 = pkin(3) * t1146;
t1463 = pkin(3) * t1435;
t1462 = pkin(7) * t1434;
t1461 = pkin(7) * t1435;
t1460 = t1307 * t1146;
t1459 = t1310 * t1146;
t1326 = (-t1228 * t1305 - t1230 * t1308) * t1302;
t1395 = t1302 * t1305;
t1207 = t1230 * t1395;
t1394 = t1302 * t1308;
t1357 = t1228 * t1394;
t1339 = t1207 - t1357;
t1418 = -t1306 * t1326 + t1309 * t1339;
t1419 = t1306 * t1339 + t1309 * t1326;
t1431 = -t1303 * t1419 + t1304 * t1418;
t1455 = -t1310 * t1299 + t1307 * t1431;
t1356 = t1310 * t1400;
t1329 = t1305 * t1149 + t1357;
t1340 = -t1308 * t1149 + t1228 * t1395;
t1416 = t1306 * t1329 + t1309 * t1340;
t1417 = -t1306 * t1340 + t1309 * t1329;
t1432 = -t1303 * t1416 + t1304 * t1417;
t1454 = t1307 * t1432 + t1356;
t1359 = t1307 * t1400;
t1453 = t1310 * t1432 - t1359;
t1452 = t1307 * t1299 + t1310 * t1431;
t1445 = t1428 * qJ(5);
t1279 = t1310 * g(1) + t1307 * g(2);
t1312 = qJD(1) ^ 2;
t1348 = -t1312 * pkin(1) + qJDD(1) * qJ(2) + 0.2e1 * qJD(1) * qJD(2) - t1279;
t1436 = pkin(6) * qJDD(1) + t1348;
t1433 = t1303 * t1417 + t1304 * t1416;
t1430 = t1303 * t1418 + t1304 * t1419;
t1300 = t1303 ^ 2;
t1301 = t1304 ^ 2;
t1426 = t1300 + t1301;
t1261 = t1265 ^ 2;
t1311 = qJD(3) ^ 2;
t1233 = -t1311 - t1261;
t1420 = t1312 * t1426;
t1262 = t1267 ^ 2;
t1390 = t1304 * t1312;
t1408 = t1304 * g(3);
t1209 = -t1408 + (pkin(2) * t1390 - t1436) * t1303;
t1295 = t1301 * t1312;
t1409 = t1303 * g(3);
t1221 = -pkin(2) * t1295 + t1436 * t1304 - t1409;
t1153 = -t1309 * t1209 + t1306 * t1221;
t1154 = t1306 * t1209 + t1309 * t1221;
t1076 = -t1309 * t1153 + t1306 * t1154;
t1413 = pkin(2) * t1076;
t1182 = -t1309 * t1264 - t1306 * t1421;
t1412 = pkin(2) * t1182;
t1411 = pkin(4) * t1308;
t1410 = t1149 * pkin(4);
t1406 = qJDD(1) * pkin(1);
t1405 = qJ(5) * t1308;
t1084 = (-t1240 - t1399) * pkin(7) + t1456 * pkin(3) - t1153;
t1092 = t1233 * pkin(3) - pkin(7) * t1421 + t1154;
t1034 = -t1308 * t1084 + t1305 * t1092;
t1035 = t1305 * t1084 + t1308 * t1092;
t977 = -t1308 * t1034 + t1305 * t1035;
t1404 = t1306 * t977;
t1403 = t1309 * t977;
t1401 = qJD(5) * t1302;
t1393 = t1303 * t1076;
t1392 = t1303 * t1304;
t1391 = t1304 * t1076;
t1387 = t1305 * t1425;
t1278 = t1307 * g(1) - t1310 * g(2);
t1343 = -qJDD(2) + t1278;
t1320 = (t1426 * pkin(6) + qJ(2)) * t1312 + t1343;
t1362 = t1304 * pkin(2) + pkin(1);
t1139 = -pkin(3) * t1398 + t1261 * pkin(7) - t1267 * (qJD(3) * pkin(3) - t1267 * pkin(7)) + (-pkin(3) * t1333 + t1362) * qJDD(1) + t1320;
t1386 = t1305 * t1139;
t1234 = t1362 * qJDD(1) + t1320;
t1382 = t1306 * t1234;
t1236 = qJDD(3) + t1397;
t1381 = t1306 * t1236;
t1380 = t1306 * t1265;
t1379 = t1306 * t1267;
t1259 = t1312 * qJ(2) + t1343 + t1406;
t1377 = t1307 * t1259;
t1374 = t1308 * t1139;
t1372 = t1309 * t1234;
t1371 = t1309 * t1236;
t1370 = t1309 * t1265;
t1369 = t1309 * t1267;
t1367 = t1310 * t1259;
t1285 = 0.2e1 * t1401;
t1174 = t1228 * pkin(4) - t1230 * qJ(5);
t1336 = -pkin(4) * t1414 + t1299 * qJ(5) - t1228 * t1174 + t1035;
t1017 = t1285 + t1336;
t1019 = -t1299 * pkin(4) - qJ(5) * t1414 + t1230 * t1174 + qJDD(5) + t1034;
t1366 = -pkin(4) * t1019 + qJ(5) * t1017;
t1365 = -pkin(4) * t1425 - qJ(5) * t1106;
t1293 = t1304 * qJDD(1);
t1364 = t1307 * qJDD(1);
t1363 = t1310 * qJDD(1);
t966 = t1305 * t1017 - t1308 * t1019;
t1361 = pkin(3) * t966 + t1366;
t978 = t1305 * t1034 + t1308 * t1035;
t947 = t1306 * t978 + t1403;
t976 = pkin(3) * t977;
t1360 = pkin(2) * t947 + t976;
t1358 = t1307 * t1397;
t1355 = t1310 * t1397;
t1354 = -t1035 - t1085;
t1099 = t1308 * t1425;
t1050 = -t1305 * t1106 - t1099;
t1353 = pkin(3) * t1050 + t1365;
t1107 = (-qJD(4) + t1302) * t1230 + t1347;
t1052 = t1305 * t1107 - t1099;
t1048 = pkin(3) * t1052;
t1056 = t1308 * t1107 + t1387;
t994 = t1309 * t1052 + t1306 * t1056;
t1352 = pkin(2) * t994 + t1048;
t1351 = -qJ(5) * t1305 - pkin(3);
t1350 = t1303 * t1293;
t1349 = t1259 + t1406;
t1077 = t1306 * t1153 + t1309 * t1154;
t1244 = t1348 * t1303 + t1408;
t1245 = t1348 * t1304 - t1409;
t1188 = t1303 * t1244 + t1304 * t1245;
t1346 = -t1307 * t1278 - t1310 * t1279;
t1252 = -t1262 - t1311;
t1191 = t1309 * t1252 - t1381;
t1345 = pkin(2) * t1191 - t1154;
t1277 = -t1307 * t1312 + t1363;
t1344 = -pkin(5) * t1277 - t1307 * g(3);
t1097 = t1305 * t1150 + t1230 * t1394;
t1098 = t1308 * t1150 - t1207;
t1042 = t1309 * t1097 + t1306 * t1098;
t1045 = -t1306 * t1097 + t1309 * t1098;
t990 = -t1303 * t1042 + t1304 * t1045;
t1342 = t1310 * t990 + t1359;
t1341 = t1307 * t990 - t1356;
t1338 = -t1034 + t1463;
t967 = t1308 * t1017 + t1305 * t1019;
t939 = t1306 * t967 + t1309 * t966;
t1337 = pkin(2) * t939 + t1361;
t1187 = t1304 * t1244 - t1303 * t1245;
t1335 = t1310 * t1278 - t1307 * t1279;
t1054 = -t1308 * t1106 + t1387;
t992 = t1309 * t1050 + t1306 * t1054;
t1332 = pkin(2) * t992 + t1353;
t1276 = t1310 * t1312 + t1364;
t1331 = t1354 - t1491;
t1180 = t1306 * t1233 + t1472;
t1330 = pkin(2) * t1180 - t1153;
t1270 = t1304 * t1420;
t1328 = -t1307 * t1270 + t1304 * t1363;
t1327 = t1310 * t1270 + t1304 * t1364;
t1325 = t1338 + t1477;
t1324 = pkin(4) * t1168 + qJ(5) * t1427 + t1336;
t1323 = t1285 + t1324;
t1321 = t1085 + t1324 + t1491;
t1319 = pkin(4) * t1424 + qJ(5) * t1423 - t1019;
t1318 = t1319 + t1463;
t1317 = t1318 + t1477;
t1316 = -pkin(4) * t1218 + 0.2e1 * qJD(5) * t1230 + t1139;
t1315 = t1316 + t1445;
t1294 = t1300 * t1312;
t1292 = t1301 * qJDD(1);
t1291 = t1303 * qJDD(1);
t1290 = t1300 * qJDD(1);
t1281 = t1303 * t1390;
t1280 = 0.2e1 * t1350;
t1275 = t1295 - t1294;
t1274 = t1294 + t1295;
t1273 = t1292 - t1290;
t1272 = t1292 + t1290;
t1269 = t1303 * t1420;
t1260 = -pkin(5) * t1276 + t1310 * g(3);
t1251 = -t1262 + t1311;
t1250 = t1261 - t1311;
t1249 = t1277 * t1392;
t1248 = t1276 * t1392;
t1247 = t1310 * t1269 + t1303 * t1364;
t1246 = t1307 * t1269 - t1303 * t1363;
t1242 = t1262 - t1261;
t1239 = -0.2e1 * t1399 + t1264;
t1238 = t1421 + 0.2e1 * t1398;
t1223 = (-t1370 + t1379) * qJD(3);
t1222 = (-t1369 - t1380) * qJD(3);
t1220 = -qJ(2) * t1270 + t1349 * t1304;
t1219 = qJ(2) * t1269 - t1349 * t1303;
t1201 = -t1261 - t1262;
t1198 = -qJD(3) * t1379 + t1309 * t1240;
t1197 = qJD(3) * t1369 + t1306 * t1240;
t1196 = qJD(3) * t1370 - t1306 * t1322;
t1195 = qJD(3) * t1380 + t1309 * t1322;
t1194 = -t1306 * t1252 - t1371;
t1193 = -t1306 * t1251 + t1472;
t1192 = t1309 * t1250 - t1381;
t1190 = t1309 * t1251 + t1474;
t1189 = t1306 * t1250 + t1371;
t1185 = -t1309 * t1238 - t1306 * t1239;
t1184 = t1306 * t1264 - t1309 * t1421;
t1183 = -t1306 * t1238 + t1309 * t1239;
t1181 = t1309 * t1233 - t1474;
t1162 = pkin(1) * t1259 + qJ(2) * t1188;
t1161 = -t1303 * t1222 + t1304 * t1223;
t1160 = t1304 * t1222 + t1303 * t1223;
t1155 = pkin(1) * t1274 + qJ(2) * t1272 + t1188;
t1151 = -pkin(6) * t1191 - t1372;
t1148 = -pkin(6) * t1180 - t1382;
t1143 = -t1303 * t1197 + t1304 * t1198;
t1142 = -t1303 * t1195 + t1304 * t1196;
t1141 = t1304 * t1197 + t1303 * t1198;
t1140 = t1304 * t1195 + t1303 * t1196;
t1138 = -t1303 * t1191 + t1304 * t1194;
t1137 = -t1303 * t1190 + t1304 * t1193;
t1136 = -t1303 * t1189 + t1304 * t1192;
t1135 = t1304 * t1191 + t1303 * t1194;
t1134 = t1304 * t1190 + t1303 * t1193;
t1133 = t1304 * t1189 + t1303 * t1192;
t1124 = -pkin(2) * t1239 + pkin(6) * t1194 - t1382;
t1117 = -pkin(2) * t1238 + pkin(6) * t1181 + t1372;
t1116 = -t1303 * t1183 + t1304 * t1185;
t1115 = -t1303 * t1182 + t1304 * t1184;
t1114 = t1304 * t1183 + t1303 * t1185;
t1113 = t1304 * t1182 + t1303 * t1184;
t1101 = -t1303 * t1180 + t1304 * t1181;
t1100 = t1304 * t1180 + t1303 * t1181;
t1075 = pkin(2) * t1234 + pkin(6) * t1077;
t1074 = -pkin(1) * t1113 - t1412;
t1073 = -t1374 + t1485;
t1072 = -pkin(6) * t1182 - t1076;
t1059 = -pkin(1) * t1135 - t1345;
t1058 = -t1386 - t1461;
t1057 = -pkin(2) * t1201 + pkin(6) * t1184 + t1077;
t1046 = -pkin(1) * t1100 - t1330;
t1032 = -qJ(2) * t1135 - t1303 * t1124 + t1304 * t1151;
t1027 = t1304 * t1077 - t1393;
t1026 = t1303 * t1077 + t1391;
t1025 = -pkin(1) * t1239 + qJ(2) * t1138 + t1304 * t1124 + t1303 * t1151;
t1024 = -pkin(3) * t1428 - t1386 + t1484;
t1023 = -qJ(2) * t1100 - t1303 * t1117 + t1304 * t1148;
t1022 = -pkin(3) * t1429 + t1374 + t1462;
t1021 = -pkin(1) * t1238 + qJ(2) * t1101 + t1304 * t1117 + t1303 * t1148;
t1020 = t1315 - t1410;
t1003 = -pkin(1) * t1026 - t1413;
t1002 = -qJ(5) * t1146 + t1019;
t1001 = -pkin(4) * t1146 + t1017;
t1000 = (-t1149 - t1429) * pkin(4) + t1315;
t999 = t1316 - t1410 + 0.2e1 * t1445;
t998 = -t1306 * t1052 + t1309 * t1056;
t996 = -t1306 * t1050 + t1309 * t1054;
t987 = t1304 * t1042 + t1303 * t1045;
t975 = -qJ(2) * t1113 - t1303 * t1057 + t1304 * t1072;
t974 = -pkin(1) * t1201 + qJ(2) * t1115 + t1304 * t1057 + t1303 * t1072;
t973 = -pkin(6) * t1391 - qJ(2) * t1026 - t1303 * t1075;
t972 = pkin(3) * t1139 + pkin(7) * t978;
t971 = pkin(1) * t1234 - pkin(6) * t1393 + qJ(2) * t1027 + t1304 * t1075;
t970 = -t1305 * t1000 - t1405 * t1429 - t1461;
t969 = -t1306 * t1024 + t1309 * t1073 + t1490;
t968 = -pkin(4) * t1388 + t1308 * t999 - t1485;
t964 = -pkin(7) * t1052 - t977;
t963 = t1308 * t1000 + t1351 * t1429 + t1462;
t962 = -t1306 * t1022 + t1309 * t1058 - t1476;
t961 = t1309 * t1024 + t1306 * t1073 + t1489;
t960 = -t1484 + t1305 * t999 + (pkin(3) + t1411) * t1428;
t959 = pkin(7) * t1056 - t1464 + t978;
t958 = t1309 * t1022 + t1306 * t1058 + t1471;
t957 = -t1303 * t994 + t1304 * t998;
t955 = -t1303 * t992 + t1304 * t996;
t953 = t1303 * t998 + t1304 * t994;
t951 = t1303 * t996 + t1304 * t992;
t949 = -t1331 + t1500;
t948 = t1309 * t978 - t1404;
t946 = -pkin(7) * t1050 - t1305 * t1001 + t1308 * t1002;
t945 = -t1325 - t1486;
t944 = -t1317 - t1486;
t943 = pkin(7) * t1054 + t1308 * t1001 + t1305 * t1002 - t1464;
t942 = -t1321 - 0.2e1 * t1401 - t1500;
t941 = -pkin(7) * t966 + (-pkin(4) * t1305 + t1405) * t1020;
t940 = -t1306 * t966 + t1309 * t967;
t938 = -pkin(1) * t953 - t1352;
t937 = -t1306 * t963 + t1309 * t970 - t1476;
t936 = pkin(7) * t967 + (-t1351 + t1411) * t1020;
t935 = -t1306 * t960 + t1309 * t968 - t1490;
t934 = t1306 * t970 + t1309 * t963 + t1471;
t933 = -pkin(1) * t951 - t1332;
t932 = t1306 * t968 + t1309 * t960 - t1489;
t931 = -t1303 * t961 + t1304 * t969 + t1499;
t930 = t1303 * t969 + t1304 * t961 - t1498;
t929 = -pkin(6) * t994 - t1306 * t959 + t1309 * t964;
t928 = -t1303 * t947 + t1304 * t948;
t927 = t1303 * t948 + t1304 * t947;
t926 = pkin(6) * t998 + t1306 * t964 + t1309 * t959 - t1465;
t925 = -pkin(6) * t947 - pkin(7) * t1403 - t1306 * t972;
t924 = -t1303 * t958 + t1304 * t962 - t1483;
t923 = pkin(2) * t1139 + pkin(6) * t948 - pkin(7) * t1404 + t1309 * t972;
t922 = t1303 * t962 + t1304 * t958 + t1482;
t921 = -pkin(6) * t992 - t1306 * t943 + t1309 * t946;
t920 = -t1303 * t939 + t1304 * t940;
t919 = t1303 * t940 + t1304 * t939;
t918 = pkin(6) * t996 + t1306 * t946 + t1309 * t943 - t1465;
t917 = -pkin(1) * t927 - t1360;
t916 = -t1303 * t934 + t1304 * t937 - t1483;
t915 = t1303 * t937 + t1304 * t934 + t1482;
t914 = -t1303 * t932 + t1304 * t935 - t1499;
t913 = t1303 * t935 + t1304 * t932 + t1498;
t912 = -pkin(6) * t939 - t1306 * t936 + t1309 * t941;
t911 = pkin(2) * t1020 + pkin(6) * t940 + t1306 * t941 + t1309 * t936;
t910 = -qJ(2) * t953 - t1303 * t926 + t1304 * t929;
t909 = qJ(2) * t957 + t1303 * t929 + t1304 * t926 - t1466;
t908 = -pkin(1) * t919 - t1337;
t907 = -qJ(2) * t927 - t1303 * t923 + t1304 * t925;
t906 = -qJ(2) * t951 - t1303 * t918 + t1304 * t921;
t905 = pkin(1) * t1139 + qJ(2) * t928 + t1303 * t925 + t1304 * t923;
t904 = qJ(2) * t955 + t1303 * t921 + t1304 * t918 - t1466;
t903 = -qJ(2) * t919 - t1303 * t911 + t1304 * t912;
t902 = pkin(1) * t1020 + qJ(2) * t920 + t1303 * t912 + t1304 * t911;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1277, 0, -t1276, 0, t1344, -t1260, -t1335, -pkin(5) * t1335, t1249, t1310 * t1273 - t1307 * t1275, t1247, -t1249, t1327, 0, -pkin(5) * t1328 - t1307 * t1244 - t1303 * t1367, -pkin(5) * t1246 - t1307 * t1245 - t1304 * t1367, t1310 * t1187 - pkin(5) * (t1307 * t1272 + t1310 * t1274), -pkin(5) * (t1307 * t1188 + t1367) - (t1307 * pkin(1) - t1310 * qJ(2)) * t1187, t1310 * t1143 + t1358, t1310 * t1116 + t1307 * t1242, t1310 * t1137 + t1307 * t1264, t1310 * t1142 - t1358, t1310 * t1136 - t1307 * t1421, t1307 * qJDD(3) + t1310 * t1161, t1310 * t1023 - t1307 * t1046 - pkin(5) * (t1307 * t1101 - t1310 * t1238), t1310 * t1032 - t1307 * t1059 - pkin(5) * (t1307 * t1138 - t1310 * t1239), t1310 * t975 - t1307 * t1074 - pkin(5) * (t1307 * t1115 - t1310 * t1201), t1310 * t973 - t1307 * t1003 - pkin(5) * (t1307 * t1027 + t1310 * t1234), t1342, t1496, t1487, t1453, -t1492, t1452, -t1307 * t945 + t1310 * t924 - t1481, -t1307 * t949 + t1310 * t931 - t1501, t1310 * t910 - t1307 * t938 - pkin(5) * (t1307 * t957 - t1459), t1310 * t907 - t1307 * t917 - pkin(5) * (t1310 * t1139 + t1307 * t928), t1342, t1487, -t1496, t1452, t1492, t1453, -t1307 * t944 + t1310 * t916 - t1481, t1310 * t906 - t1307 * t933 - pkin(5) * (t1307 * t955 - t1459), -t1307 * t942 + t1310 * t914 + t1501, t1310 * t903 - t1307 * t908 - pkin(5) * (t1310 * t1020 + t1307 * t920); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1276, 0, t1277, 0, t1260, t1344, t1346, pkin(5) * t1346, t1248, t1307 * t1273 + t1310 * t1275, t1246, -t1248, -t1328, 0, -pkin(5) * t1327 + t1310 * t1244 - t1303 * t1377, pkin(5) * t1247 + t1310 * t1245 - t1304 * t1377, t1307 * t1187 + pkin(5) * (t1310 * t1272 - t1307 * t1274), pkin(5) * (t1310 * t1188 - t1377) - (-t1310 * pkin(1) - t1307 * qJ(2)) * t1187, t1307 * t1143 - t1355, t1307 * t1116 - t1310 * t1242, t1307 * t1137 - t1310 * t1264, t1307 * t1142 + t1355, t1307 * t1136 + t1310 * t1421, -t1310 * qJDD(3) + t1307 * t1161, t1307 * t1023 + t1310 * t1046 + pkin(5) * (t1310 * t1101 + t1307 * t1238), t1307 * t1032 + t1310 * t1059 + pkin(5) * (t1310 * t1138 + t1307 * t1239), t1307 * t975 + t1310 * t1074 + pkin(5) * (t1310 * t1115 + t1307 * t1201), t1307 * t973 + t1310 * t1003 + pkin(5) * (t1310 * t1027 - t1307 * t1234), t1341, t1497, t1488, t1454, -t1493, t1455, t1307 * t924 + t1310 * t945 + t1480, t1307 * t931 + t1310 * t949 + t1502, t1307 * t910 + t1310 * t938 + pkin(5) * (t1310 * t957 + t1460), t1307 * t907 + t1310 * t917 + pkin(5) * (-t1307 * t1139 + t1310 * t928), t1341, t1488, -t1497, t1455, t1493, t1454, t1307 * t916 + t1310 * t944 + t1480, t1307 * t906 + t1310 * t933 + pkin(5) * (t1310 * t955 + t1460), t1307 * t914 + t1310 * t942 - t1502, t1307 * t903 + t1310 * t908 + pkin(5) * (-t1307 * t1020 + t1310 * t920); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1278, t1279, 0, 0, t1290, t1280, 0, t1292, 0, 0, t1220, t1219, t1155, t1162, t1141, t1114, t1134, t1140, t1133, t1160, t1021, t1025, t974, t971, t987, -t950, t1478, t1433, t1010, t1430, t922, t930, t909, t905, t987, t1478, t950, t1430, -t1010, t1433, t915, t904, t913, t902; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1312, 0, 0, -g(3), -t1278, 0, t1350, t1273, t1269, -t1350, t1270, 0, -t1303 * t1259, -t1304 * t1259, t1187, qJ(2) * t1187, t1143, t1116, t1137, t1142, t1136, t1161, t1023, t1032, t975, t973, t990, t956, t1479, t1432, -t1015, t1431, t924, t931, t910, t907, t990, t1479, -t956, t1431, t1015, t1432, t916, t906, t914, t903; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1312, 0, qJDD(1), 0, g(3), 0, -t1279, 0, t1281, t1275, -t1291, -t1281, -t1293, 0, t1244, t1245, 0, pkin(1) * t1187, -t1397, -t1242, -t1264, t1397, t1421, -qJDD(3), t1046, t1059, t1074, t1003, -t1400, -t1422, -t1425, t1400, t1106, -t1299, t945, t949, t938, t917, -t1400, -t1425, t1422, -t1299, -t1106, t1400, t944, t933, t942, t908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1278, t1279, 0, 0, t1290, t1280, 0, t1292, 0, 0, t1220, t1219, t1155, t1162, t1141, t1114, t1134, t1140, t1133, t1160, t1021, t1025, t974, t971, t987, -t950, t1478, t1433, t1010, t1430, t922, t930, t909, t905, t987, t1478, t950, t1430, -t1010, t1433, t915, t904, t913, t902; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1291, t1293, t1281, 0, t1295, 0, 0, -t1259, t1244, 0, t1198, t1185, t1193, t1196, t1192, t1223, t1148, t1151, t1072, -pkin(6) * t1076, t1045, -t995, t1467, t1417, -t1071, t1418, t962, t969, t929, t925, t1045, t1467, t995, t1418, t1071, t1417, t937, t921, t935, t912; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1291, -t1294, t1293, -t1281, 0, t1259, 0, t1245, 0, t1197, t1183, t1190, t1195, t1189, t1222, t1117, t1124, t1057, t1075, t1042, -t991, t1468, t1416, t1066, t1419, t958, t961, t926, t923, t1042, t1468, t991, t1419, -t1066, t1416, t934, t918, t932, t911; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1281, -t1275, t1291, t1281, t1293, 0, -t1244, -t1245, 0, 0, t1397, t1242, t1264, -t1397, -t1421, qJDD(3), t1330, t1345, t1412, t1413, t1400, t1422, t1425, -t1400, -t1106, t1299, t1325, t1331, t1352, t1360, t1400, t1425, -t1422, t1299, t1106, -t1400, t1317, t1332, t1285 + t1321, t1337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1240, -t1238, t1456, t1399, t1250, -t1399, 0, -t1234, t1153, 0, t1098, -t1053, t1458, t1329, t1131, t1339, t1058, t1073, t964, -pkin(7) * t977, t1098, t1458, t1053, t1339, -t1131, t1329, t970, t946, t968, t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1398, t1239, t1251, t1322, t1236, -t1398, t1234, 0, t1154, 0, t1097, t1051, t1457, t1340, t1127, t1326, t1022, t1024, t959, t972, t1097, t1457, -t1051, t1326, -t1127, t1340, t963, t943, t960, t936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1397, t1242, t1264, -t1397, -t1421, qJDD(3), -t1153, -t1154, 0, 0, t1400, t1422, t1425, -t1400, -t1106, t1299, t1338, t1354, t1048, t976, t1400, t1425, -t1422, t1299, t1106, -t1400, t1318, t1353, t1085 + t1323, t1361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1150, -t1429, t1424, t1396, t1210, -t1396, 0, -t1139, t1034, 0, t1150, t1424, t1429, -t1396, -t1210, t1396, -qJ(5) * t1429, t1002, t999, qJ(5) * t1020; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1218, t1428, -t1211, -t1149, t1427, -t1218, t1139, 0, t1035, 0, t1218, -t1211, -t1428, -t1218, -t1427, -t1149, t1000, t1001, pkin(4) * t1428, pkin(4) * t1020; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1400, t1422, t1425, -t1400, -t1106, t1299, -t1034, -t1035, 0, 0, t1400, t1425, -t1422, t1299, t1106, -t1400, t1319, t1365, t1323, t1366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1150, t1424, t1429, -t1396, -t1210, t1396, 0, t1019, t1020, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1400, t1425, -t1422, t1299, t1106, -t1400, -t1019, 0, t1017, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1218, t1211, t1428, t1218, t1427, t1149, -t1020, -t1017, 0, 0;];
m_new_reg = t1;
