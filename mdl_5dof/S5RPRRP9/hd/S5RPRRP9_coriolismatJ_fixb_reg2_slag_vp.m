% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:50
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP9_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP9_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP9_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP9_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:49:17
% EndTime: 2019-12-31 18:49:22
% DurationCPUTime: 3.28s
% Computational Cost: add. (5012->200), mult. (9747->237), div. (0->0), fcn. (11207->6), ass. (0->162)
t163 = qJD(3) + qJD(4);
t167 = sin(qJ(4));
t166 = cos(pkin(8));
t272 = pkin(6) + qJ(2);
t196 = t272 * t166;
t165 = sin(pkin(8));
t197 = t272 * t165;
t277 = sin(qJ(3));
t279 = cos(qJ(3));
t138 = t279 * t196 - t277 * t197;
t149 = -t277 * t165 + t279 * t166;
t177 = t149 * pkin(7) + t138;
t278 = cos(qJ(4));
t137 = t277 * t196 + t279 * t197;
t150 = -t279 * t165 - t277 * t166;
t95 = t150 * pkin(7) - t137;
t312 = t167 * t95 + t278 * t177;
t315 = t312 * qJD(5);
t64 = -t167 * t177 + t278 * t95;
t314 = t163 * t64;
t270 = t163 * t312;
t133 = t278 * t149 + t167 * t150;
t248 = t133 ^ 2;
t145 = t278 * t150;
t246 = t167 * t149;
t292 = -t145 + t246;
t307 = t292 ^ 2;
t49 = -t307 + t248;
t313 = t49 * qJD(1);
t304 = t133 * qJ(5);
t311 = -t304 / 0.2e1;
t310 = t312 * pkin(4);
t297 = t292 * qJD(1);
t309 = t133 * t297;
t308 = t312 * t278;
t306 = t292 * pkin(4);
t73 = -t304 + t306;
t157 = -pkin(2) * t166 - pkin(1);
t139 = -pkin(3) * t149 + t157;
t191 = -pkin(4) * t133 - qJ(5) * t292;
t61 = t139 + t191;
t305 = t133 * t61;
t267 = t292 * t61;
t301 = t163 * t133;
t299 = qJD(2) * t133;
t298 = t133 * qJD(1);
t218 = t133 * qJD(5);
t295 = t163 * t49;
t207 = t278 * pkin(3);
t158 = -t207 - pkin(4);
t281 = t158 / 0.2e1;
t260 = qJD(3) * t207;
t190 = t133 * t312 - t292 * t64;
t291 = qJD(1) * t190;
t290 = qJD(2) * t190;
t185 = t248 + t307;
t288 = t185 * qJD(1);
t194 = -t145 / 0.2e1;
t128 = t194 + t145 / 0.2e1;
t208 = t128 * qJD(2) - t270;
t287 = qJD(2) * t185;
t286 = t150 ^ 2;
t285 = -pkin(4) / 0.2e1;
t283 = -qJ(5) / 0.2e1;
t273 = t167 * pkin(3);
t156 = qJ(5) + t273;
t282 = -t156 / 0.2e1;
t280 = t167 / 0.2e1;
t274 = t150 * pkin(3);
t84 = 0.2e1 * t194 + t246;
t271 = t84 * qJD(2);
t269 = pkin(3) * qJD(4);
t268 = qJD(3) * pkin(3);
t69 = -t274 + t73;
t3 = t61 * t69;
t266 = t3 * qJD(1);
t4 = t61 * t73;
t265 = t4 * qJD(1);
t9 = t139 * t274;
t262 = t9 * qJD(1);
t261 = qJD(2) * t292;
t13 = -t133 * t69 + t267;
t256 = qJD(1) * t13;
t14 = -t292 * t69 - t305;
t255 = qJD(1) * t14;
t15 = -t133 * t73 + t267;
t254 = qJD(1) * t15;
t16 = -t292 * t73 - t305;
t253 = qJD(1) * t16;
t46 = -t133 * t274 - t139 * t292;
t252 = qJD(1) * t46;
t47 = -t139 * t133 + t274 * t292;
t251 = qJD(1) * t47;
t209 = -t278 / 0.2e1;
t175 = (-t133 * t209 + t280 * t292) * pkin(3) + t292 * t282 + t133 * t281;
t181 = t133 * t285 + t283 * t292;
t18 = t175 - t181;
t245 = t18 * qJD(1);
t116 = t304 / 0.2e1;
t198 = t133 * t156 / 0.2e1;
t35 = t198 + t274 / 0.2e1 + t116 + (t281 + t285) * t292;
t242 = t35 * qJD(1);
t39 = 0.2e1 * t311 + t306;
t241 = t39 * qJD(1);
t179 = t133 * t280 + t209 * t292;
t59 = (t150 / 0.2e1 + t179) * pkin(3);
t234 = t59 * qJD(1);
t70 = -t137 * t150 + t138 * t149;
t233 = t70 * qJD(1);
t231 = t84 * qJD(1);
t148 = t149 ^ 2;
t98 = t148 - t286;
t230 = t98 * qJD(1);
t153 = t165 ^ 2 + t166 ^ 2;
t228 = qJD(1) * t139;
t227 = qJD(3) * t292;
t224 = qJD(4) * t292;
t223 = qJD(4) * t139;
t222 = t128 * qJD(1);
t221 = t128 * qJD(3);
t110 = t128 * qJD(4);
t220 = t307 * qJD(1);
t136 = t148 + t286;
t216 = t136 * qJD(1);
t215 = t149 * qJD(1);
t147 = t149 * qJD(3);
t214 = t150 * qJD(1);
t213 = t150 * qJD(3);
t151 = t153 * qJ(2);
t212 = t151 * qJD(1);
t211 = t153 * qJD(1);
t160 = qJD(4) * t207;
t210 = t160 + qJD(5);
t206 = t167 * t269;
t205 = t61 * t297;
t204 = t133 * t228;
t203 = t292 * t228;
t201 = t149 * t214;
t200 = t149 * t213;
t195 = qJD(1) * t157 + qJD(2);
t140 = (t278 * t156 + t158 * t167) * pkin(3);
t176 = (t308 / 0.2e1 - t64 * t280) * pkin(3) - t64 * t282 + t312 * t281;
t182 = t310 / 0.2e1 + t64 * t283;
t2 = t176 + t182;
t189 = t2 * qJD(1) + t140 * qJD(3);
t67 = qJD(4) * t84 + t227;
t183 = qJD(3) * t84 + t224;
t180 = (t224 + t227) * t133;
t164 = qJ(5) * qJD(5);
t154 = t163 * qJ(5);
t152 = t156 * qJD(5);
t146 = -t274 / 0.2e1;
t75 = t292 * t298;
t60 = pkin(3) * t179 + t146;
t40 = t301 * t292;
t38 = t311 + t116;
t36 = t146 + t311 + t306 / 0.2e1 + t198 + t292 * t281;
t22 = t167 * t268;
t19 = t163 * t273;
t17 = t175 + t181;
t1 = t176 - t182;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153 * qJD(2), t151 * qJD(2), -t200, t98 * qJD(3), 0, t200, 0, 0, -t157 * t213, t157 * t147, qJD(2) * t136, qJD(2) * t70, t40, t295, 0, -t180, 0, 0, -qJD(3) * t46 + t223 * t292, -qJD(3) * t47 + t133 * t223, t287, -qJD(3) * t9 + t290, t40, 0, -t295, 0, 0, -t180, qJD(3) * t13 + qJD(4) * t15 + t218 * t292, t287, qJD(3) * t14 + qJD(4) * t16 + qJD(5) * t307, qJD(3) * t3 + qJD(4) * t4 - qJD(5) * t267 + t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, t212, 0, 0, 0, 0, 0, 0, 0, 0, t216, t233, 0, 0, 0, 0, 0, 0, t110, 0, t288, qJD(3) * t60 + t291, 0, 0, 0, 0, 0, 0, t110, t288, 0, qJD(3) * t36 + qJD(4) * t38 - qJD(5) * t128 + t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t201, t230, t147, t201, t213, 0, -qJD(3) * t138 - t157 * t214, qJD(3) * t137 + t157 * t215, 0, 0, t75, t313, t301, -t309, -t67, 0, -t252 - t270, -t314 - t251, (-t278 * t133 - t167 * t292) * t268, -t262 + t60 * qJD(2) + (t167 * t64 - t308) * t268, t75, t301, -t313, 0, t67, -t309, t256 - t270, (t133 * t158 - t156 * t292) * qJD(3) + t17 * qJD(4) + t218, t314 + t255, t266 + t36 * qJD(2) + (t156 * t64 + t158 * t312) * qJD(3) + t1 * qJD(4) + t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, t313, t301, -t309, -t183, 0, t203 + t208, -t314 + t204, 0, 0, t309, t301, -t313, 0, t183, -t309, t208 + t254, t17 * qJD(3) + qJD(4) * t191 + t218, t314 + t253, t265 + t38 * qJD(2) + t1 * qJD(3) + (t64 * qJ(5) - t310) * qJD(4) + t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, t301, t220, -t205 - t208; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, -t212, 0, 0, 0, 0, 0, 0, -t213, t147, -t216, -t233, 0, 0, 0, 0, 0, 0, t67, t301, -t288, -qJD(3) * t59 - t291, 0, 0, 0, 0, 0, 0, t67, -t288, -t301, -qJD(3) * t35 + qJD(4) * t39 - qJD(5) * t84 - t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, t215, 0, 0, 0, 0, 0, 0, 0, 0, t297, t298, 0, -t234, 0, 0, 0, 0, 0, 0, t297, 0, -t298, -t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, t298, 0, 0, 0, 0, 0, 0, 0, 0, t231, 0, -t298, t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, -t230, 0, -t201, 0, 0, t195 * t150, -t195 * t149, 0, 0, -t75, -t313, 0, t309, -t110, 0, t252 - t261, -t299 + t251, 0, qJD(2) * t59 + t262, -t75, 0, t313, 0, t110, t309, -t256 - t261, qJD(4) * t18, t299 - t255, qJD(2) * t35 + qJD(4) * t2 - t266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, -t215, 0, 0, 0, 0, 0, 0, 0, 0, -t297, -t298, 0, t234, 0, 0, 0, 0, 0, 0, -t297, 0, t298, t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206, -t160, 0, 0, 0, 0, 0, 0, 0, 0, -t206, 0, t210, qJD(4) * t140 + t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t222, 0, -t19, -t160 - t260, 0, 0, 0, 0, 0, 0, t222, 0, -t19, t245, t210 + t260, (-pkin(4) * t167 + qJ(5) * t278) * t269 + t152 + t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, t156 * t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, -t313, 0, t309, t221, 0, -t203 - t271, -t299 - t204, 0, 0, -t309, 0, t313, 0, -t221, t309, -t254 - t271, -qJD(3) * t18, t299 - t253, -qJD(2) * t39 - qJD(3) * t2 - t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t231, -t298, 0, 0, 0, 0, 0, 0, 0, 0, -t231, 0, t298, -t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222, 0, t22, t260, 0, 0, 0, 0, 0, 0, -t222, 0, t22, -t245, qJD(5) - t260, t164 - t189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t163, t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, 0, -t220, t205 + t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, -qJ(5) * qJD(4) - qJD(3) * t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, -t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
