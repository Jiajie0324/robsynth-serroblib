% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PRRRP8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d2,d3,d4,theta1]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:01
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PRRRP8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRP8_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRP8_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRP8_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRP8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRRRP8_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:01:14
% EndTime: 2019-12-05 17:01:43
% DurationCPUTime: 30.68s
% Computational Cost: add. (55738->687), mult. (108680->932), div. (0->0), fcn. (76549->10), ass. (0->467)
t1358 = cos(qJ(4));
t1355 = sin(qJ(4));
t1356 = sin(qJ(3));
t1482 = qJD(2) * t1356;
t1307 = -t1358 * qJD(3) + t1355 * t1482;
t1359 = cos(qJ(3));
t1453 = t1359 * qJD(2);
t1338 = qJD(3) * t1453;
t1447 = t1356 * qJDD(2);
t1312 = t1338 + t1447;
t1388 = -t1355 * qJDD(3) - t1358 * t1312;
t1246 = -t1307 * qJD(4) - t1388;
t1334 = -qJD(4) + t1453;
t1479 = t1307 * t1334;
t1512 = t1246 + t1479;
t1470 = t1355 * t1512;
t1309 = t1355 * qJD(3) + t1358 * t1482;
t1434 = t1358 * qJDD(3) - t1355 * t1312;
t1245 = t1309 * qJD(4) - t1434;
t1287 = t1309 * t1334;
t1514 = t1245 - t1287;
t1127 = t1358 * t1514 + t1470;
t1303 = t1309 ^ 2;
t1492 = t1307 ^ 2;
t1509 = t1303 - t1492;
t1101 = t1356 * t1127 + t1359 * t1509;
t1350 = sin(pkin(5));
t1352 = cos(pkin(5));
t1103 = t1359 * t1127 - t1356 * t1509;
t1125 = -t1355 * t1514 + t1358 * t1512;
t1357 = sin(qJ(2));
t1360 = cos(qJ(2));
t1411 = t1103 * t1357 + t1125 * t1360;
t1008 = -t1350 * t1101 + t1352 * t1411;
t1050 = t1360 * t1103 - t1357 * t1125;
t1349 = sin(pkin(9));
t1351 = cos(pkin(9));
t1620 = t1349 * t1008 - t1351 * t1050;
t1619 = t1351 * t1008 + t1349 * t1050;
t1491 = t1334 ^ 2;
t1281 = t1492 - t1491;
t1264 = t1309 * t1307;
t1337 = qJD(3) * t1482;
t1445 = t1359 * qJDD(2);
t1313 = -t1337 + t1445;
t1304 = -qJDD(4) + t1313;
t1510 = -t1264 + t1304;
t1468 = t1355 * t1510;
t1194 = t1358 * t1281 + t1468;
t1212 = t1245 + t1287;
t1115 = t1356 * t1194 + t1359 * t1212;
t1119 = t1359 * t1194 - t1356 * t1212;
t1456 = t1358 * t1510;
t1190 = t1355 * t1281 - t1456;
t1403 = t1119 * t1357 - t1190 * t1360;
t1040 = -t1350 * t1115 + t1352 * t1403;
t1077 = t1360 * t1119 + t1357 * t1190;
t1618 = t1349 * t1040 - t1351 * t1077;
t1617 = t1351 * t1040 + t1349 * t1077;
t1036 = t1352 * t1115 + t1350 * t1403;
t1006 = t1352 * t1101 + t1350 * t1411;
t1282 = t1303 - t1491;
t1511 = -t1264 - t1304;
t1467 = t1355 * t1511;
t1550 = -t1358 * t1282 + t1467;
t1513 = t1246 - t1479;
t1455 = t1358 * t1511;
t1549 = t1355 * t1282 + t1455;
t1563 = t1356 * t1513 + t1359 * t1549;
t1579 = t1357 * t1550 + t1360 * t1563;
t1565 = t1356 * t1549 - t1359 * t1513;
t1580 = t1357 * t1563 - t1360 * t1550;
t1601 = -t1350 * t1565 + t1352 * t1580;
t1608 = -t1349 * t1601 + t1351 * t1579;
t1607 = t1349 * t1579 + t1351 * t1601;
t1507 = -t1491 - t1492;
t1524 = t1358 * t1507 - t1467;
t1543 = t1356 * t1524 - t1359 * t1514;
t1525 = t1355 * t1507 + t1455;
t1542 = t1356 * t1514 + t1359 * t1524;
t1564 = t1357 * t1542 - t1360 * t1525;
t1581 = -t1350 * t1543 + t1352 * t1564;
t1606 = pkin(1) * t1581;
t1582 = t1350 * t1564 + t1352 * t1543;
t1605 = pkin(1) * t1582;
t1602 = t1350 * t1580 + t1352 * t1565;
t1562 = t1357 * t1525 + t1360 * t1542;
t1600 = qJ(1) * (-t1349 * t1581 + t1351 * t1562);
t1599 = qJ(1) * (t1349 * t1562 + t1351 * t1581);
t1598 = (-t1350 * t1582 - t1352 * t1581) * pkin(6);
t1250 = t1491 + t1303;
t1161 = t1358 * t1250 - t1468;
t1597 = pkin(2) * t1161;
t1596 = pkin(3) * t1161;
t1595 = pkin(6) * t1562;
t1594 = pkin(8) * t1161;
t1174 = t1355 * t1250 + t1456;
t1593 = pkin(8) * t1174;
t1592 = t1161 * t1360;
t1586 = t1356 * t1174;
t1585 = t1357 * t1161;
t1583 = t1359 * t1174;
t1578 = pkin(2) * t1543;
t1577 = pkin(7) * t1543;
t1570 = -pkin(2) * t1525 + pkin(7) * t1542;
t1478 = t1334 * t1355;
t1205 = t1358 * t1245 + t1307 * t1478;
t1477 = t1334 * t1358;
t1441 = t1307 * t1477;
t1386 = t1355 * t1245 - t1441;
t1442 = t1356 * t1264;
t1498 = t1359 * t1386 - t1442;
t1522 = -t1357 * t1205 + t1360 * t1498;
t1440 = t1359 * t1264;
t1499 = t1356 * t1386 + t1440;
t1523 = t1205 * t1360 + t1357 * t1498;
t1544 = -t1350 * t1499 + t1352 * t1523;
t1569 = -t1349 * t1544 + t1351 * t1522;
t1277 = t1309 * t1478;
t1423 = -t1277 + t1441;
t1497 = -t1356 * t1304 + t1359 * t1423;
t1515 = (t1307 * t1355 + t1309 * t1358) * t1334;
t1519 = t1357 * t1515 + t1360 * t1497;
t1502 = t1359 * t1304 + t1356 * t1423;
t1518 = t1357 * t1497 - t1360 * t1515;
t1545 = -t1350 * t1502 + t1352 * t1518;
t1568 = -t1349 * t1545 + t1351 * t1519;
t1567 = t1349 * t1522 + t1351 * t1544;
t1566 = t1349 * t1519 + t1351 * t1545;
t1560 = pkin(3) * t1525;
t1559 = pkin(8) * t1524;
t1558 = pkin(8) * t1525;
t1557 = qJ(5) * t1512;
t1208 = t1355 * t1246 - t1309 * t1477;
t1209 = t1358 * t1246 + t1277;
t1424 = t1359 * t1209 + t1442;
t1548 = -t1208 * t1360 + t1357 * t1424;
t1547 = t1350 * t1518 + t1352 * t1502;
t1546 = t1350 * t1523 + t1352 * t1499;
t1508 = t1303 + t1492;
t1541 = pkin(3) * t1508;
t1536 = t1356 * t1508;
t1531 = t1359 * t1508;
t1320 = t1351 * g(1) + t1349 * g(2);
t1485 = g(3) - qJDD(1);
t1436 = t1350 * t1485;
t1437 = t1349 * g(1) - t1351 * g(2);
t1526 = t1352 * t1437 - t1436;
t1238 = -t1360 * t1320 + t1526 * t1357;
t1361 = qJD(2) ^ 2;
t1226 = -t1361 * pkin(2) + qJDD(2) * pkin(7) + t1238;
t1299 = t1350 * t1437;
t1418 = t1352 * t1485 + t1299;
t1276 = t1359 * t1418;
t1488 = pkin(3) * t1359;
t1430 = -pkin(8) * t1356 - t1488;
t1310 = t1430 * qJD(2);
t1493 = qJD(3) ^ 2;
t1140 = (qJD(2) * t1310 + t1226) * t1356 - qJDD(3) * pkin(3) - t1493 * pkin(8) + t1276;
t1527 = t1245 * pkin(4) + t1140 - t1557;
t1425 = t1356 * t1209 - t1440;
t1494 = -t1350 * t1425 + t1548 * t1352;
t1496 = t1357 * t1208 + t1360 * t1424;
t1521 = t1349 * t1496 + t1351 * t1494;
t1520 = -t1349 * t1494 + t1351 * t1496;
t1237 = -t1357 * t1320 - t1526 * t1360;
t1160 = t1357 * t1237 + t1360 * t1238;
t1150 = t1160 * t1350;
t1517 = t1349 * t1485;
t1516 = t1351 * t1485;
t1383 = t1357 * t1418;
t1382 = t1360 * t1418;
t1069 = (-pkin(4) * t1334 - (2 * qJD(5))) * t1309 + t1527;
t1438 = qJ(5) * t1355 + pkin(3);
t1487 = pkin(4) * t1358;
t1481 = qJD(5) * t1334;
t1323 = -0.2e1 * t1481;
t1177 = t1359 * t1226 - t1356 * t1418;
t1141 = -t1493 * pkin(3) + qJDD(3) * pkin(8) + t1310 * t1453 + t1177;
t1225 = -qJDD(2) * pkin(2) - t1361 * pkin(7) + t1237;
t1426 = -t1313 + t1337;
t1427 = t1312 + t1338;
t1158 = t1426 * pkin(3) - t1427 * pkin(8) + t1225;
t1086 = t1358 * t1141 + t1355 * t1158;
t1255 = t1307 * pkin(4) - t1309 * qJ(5);
t1416 = -pkin(4) * t1491 - t1304 * qJ(5) - t1307 * t1255 + t1086;
t1062 = t1323 + t1416;
t1085 = t1355 * t1141 - t1358 * t1158;
t1063 = t1304 * pkin(4) - qJ(5) * t1491 + t1309 * t1255 + qJDD(5) + t1085;
t998 = t1358 * t1062 + t1355 * t1063;
t1505 = -t1069 * (t1438 + t1487) + pkin(8) * t998;
t1363 = 0.2e1 * qJD(5) * t1309 - t1527;
t1049 = (-t1514 + t1287) * pkin(4) + t1363;
t1504 = t1358 * t1049 - t1438 * t1514 + t1559;
t1048 = pkin(4) * t1287 + t1363 + t1557;
t1503 = -t1593 + t1355 * t1048 + (pkin(3) + t1487) * t1512;
t1501 = -t1351 * t1320 - t1349 * t1437;
t1500 = -t1349 * t1320 + t1351 * t1437;
t1495 = t1548 * t1350 + t1352 * t1425;
t1489 = pkin(3) * t1356;
t1486 = pkin(6) * t1352;
t1484 = qJ(5) * t1358;
t1483 = qJD(2) * qJD(3);
t1345 = t1356 ^ 2;
t1476 = t1345 * t1361;
t1472 = t1355 * t1140;
t1469 = t1355 * t1513;
t1464 = t1356 * t1225;
t1333 = t1356 * t1361 * t1359;
t1321 = qJDD(3) + t1333;
t1462 = t1356 * t1321;
t1322 = qJDD(3) - t1333;
t1461 = t1356 * t1322;
t1459 = t1358 * t1140;
t1457 = t1358 * t1513;
t1451 = t1359 * t1225;
t1450 = t1359 * t1322;
t1346 = t1359 ^ 2;
t1449 = t1345 + t1346;
t1448 = t1350 * qJDD(2);
t1446 = t1357 * qJDD(2);
t1444 = t1360 * qJDD(2);
t1025 = t1355 * t1085 + t1358 * t1086;
t1176 = t1356 * t1226 + t1276;
t1100 = t1356 * t1176 + t1359 * t1177;
t1433 = t1360 * t1333;
t1432 = t1357 * t1333;
t1431 = -pkin(3) * t1140 + pkin(8) * t1025;
t1429 = -pkin(4) * t1063 + qJ(5) * t1062;
t1428 = -pkin(4) * t1513 - qJ(5) * t1212;
t1099 = t1359 * t1176 - t1356 * t1177;
t1315 = t1449 * qJDD(2);
t1343 = t1346 * t1361;
t1318 = t1343 + t1476;
t1258 = t1360 * t1315 - t1357 * t1318;
t1421 = pkin(6) * t1258 + t1099 * t1357;
t988 = t1356 * t1069 + t1359 * t998;
t997 = t1355 * t1062 - t1358 * t1063;
t1417 = t1357 * t988 - t1360 * t997;
t1001 = t1359 * t1025 + t1356 * t1140;
t1024 = -t1358 * t1085 + t1355 * t1086;
t1415 = t1001 * t1357 - t1024 * t1360;
t1128 = -t1358 * t1212 + t1469;
t1092 = t1359 * t1128 - t1536;
t1124 = -t1355 * t1212 - t1457;
t1414 = t1092 * t1357 - t1124 * t1360;
t1213 = (-qJD(4) - t1334) * t1309 + t1434;
t1130 = t1358 * t1213 + t1469;
t1093 = t1359 * t1130 - t1536;
t1126 = t1355 * t1213 - t1457;
t1413 = t1093 * t1357 - t1126 * t1360;
t1412 = t1100 * t1357 - t1225 * t1360;
t1107 = -t1356 * t1512 - t1583;
t1409 = t1107 * t1357 - t1592;
t1218 = (qJD(4) - t1334) * t1307 + t1388;
t1111 = -t1356 * t1218 + t1583;
t1407 = t1111 * t1357 + t1592;
t1159 = t1360 * t1237 - t1357 * t1238;
t1311 = 0.2e1 * t1338 + t1447;
t1314 = -0.2e1 * t1337 + t1445;
t1254 = -t1356 * t1311 + t1359 * t1314;
t1319 = -t1343 + t1476;
t1397 = t1254 * t1357 - t1319 * t1360;
t1331 = -t1343 - t1493;
t1272 = t1359 * t1331 - t1462;
t1396 = t1272 * t1357 + t1314 * t1360;
t1329 = -t1476 - t1493;
t1274 = -t1356 * t1329 - t1450;
t1395 = t1274 * t1357 - t1311 * t1360;
t1390 = t1360 * t1361 + t1446;
t1292 = t1390 * t1352;
t1316 = -t1357 * t1361 + t1444;
t1394 = t1351 * t1292 + t1349 * t1316;
t1393 = t1349 * t1292 - t1351 * t1316;
t1391 = t1315 * t1357 + t1318 * t1360;
t1305 = t1449 * t1483;
t1389 = -qJDD(3) * t1360 + t1305 * t1357;
t1330 = t1343 - t1493;
t1271 = t1359 * t1330 - t1461;
t1385 = t1271 * t1357 - t1359 * t1444;
t1306 = t1359 * t1321;
t1328 = -t1476 + t1493;
t1273 = -t1356 * t1328 + t1306;
t1384 = t1273 * t1357 - t1356 * t1444;
t1381 = -pkin(3) * t1514 - t1459 + t1559;
t1380 = pkin(3) * t1218 + t1472 + t1593;
t977 = -pkin(3) * t997 - t1429;
t980 = -pkin(8) * t997 + (pkin(4) * t1355 - t1484) * t1069;
t987 = -t1359 * t1069 + t1356 * t998;
t953 = -pkin(7) * t987 - t1356 * t977 + t1359 * t980;
t963 = -pkin(2) * t987 - t1505;
t969 = t1357 * t997 + t1360 * t988;
t1379 = pkin(6) * t969 + t1357 * t953 + t1360 * t963;
t1000 = t1356 * t1025 - t1359 * t1140;
t970 = -pkin(7) * t1000 + (-pkin(8) * t1359 + t1489) * t1024;
t982 = -pkin(2) * t1000 - t1431;
t985 = t1360 * t1001 + t1357 * t1024;
t1378 = pkin(6) * t985 + t1357 * t970 + t1360 * t982;
t1046 = t1360 * t1092 + t1357 * t1124;
t1065 = -pkin(3) * t1124 - t1428;
t1090 = t1356 * t1128 + t1531;
t1044 = pkin(4) * t1508 + t1062;
t1045 = qJ(5) * t1508 + t1063;
t989 = -pkin(8) * t1124 - t1355 * t1044 + t1358 * t1045;
t972 = -pkin(7) * t1090 - t1356 * t1065 + t1359 * t989;
t1365 = pkin(8) * t1128 + t1358 * t1044 + t1355 * t1045 + t1541;
t983 = -pkin(2) * t1090 - t1365;
t1377 = pkin(6) * t1046 + t1357 * t972 + t1360 * t983;
t1047 = t1360 * t1093 + t1357 * t1126;
t1091 = t1356 * t1130 + t1531;
t999 = -pkin(8) * t1126 - t1024;
t986 = -pkin(7) * t1091 + t1126 * t1489 + t1359 * t999;
t1367 = pkin(8) * t1130 + t1025 + t1541;
t990 = -pkin(2) * t1091 - t1367;
t1376 = pkin(6) * t1047 + t1357 * t986 + t1360 * t990;
t1067 = t1360 * t1107 + t1585;
t1010 = -pkin(4) * t1470 + t1358 * t1048 - t1594;
t1364 = pkin(4) * t1250 - qJ(5) * t1510 + t1416;
t1012 = -t1364 + 0.2e1 * t1481 - t1596;
t1105 = t1359 * t1512 - t1586;
t979 = -pkin(7) * t1105 + t1359 * t1010 - t1356 * t1012;
t993 = -pkin(2) * t1105 - t1503;
t1375 = pkin(6) * t1067 + t1357 * t979 + t1360 * t993;
t1011 = -t1355 * t1049 - t1484 * t1514 - t1558;
t1362 = pkin(4) * t1511 + qJ(5) * t1507 - t1063;
t1019 = -t1362 - t1560;
t981 = t1359 * t1011 - t1356 * t1019 - t1577;
t994 = -t1504 - t1578;
t1374 = t1357 * t981 + t1360 * t994 + t1595;
t1278 = -t1356 * t1313 - t1346 * t1483;
t1373 = t1278 * t1357 - t1433;
t1279 = t1359 * t1312 - t1345 * t1483;
t1372 = t1279 * t1357 + t1433;
t1026 = -t1381 - t1578;
t1052 = t1085 - t1560;
t1087 = t1472 - t1558;
t995 = -t1356 * t1052 + t1359 * t1087 - t1577;
t1371 = t1026 * t1360 + t1357 * t995 + t1595;
t1109 = t1359 * t1218 + t1586;
t1027 = -pkin(2) * t1109 - t1380;
t1070 = t1360 * t1111 - t1585;
t1061 = t1086 + t1596;
t1089 = t1459 + t1594;
t996 = -pkin(7) * t1109 - t1356 * t1061 + t1359 * t1089;
t1370 = pkin(6) * t1070 + t1027 * t1360 + t1357 * t996;
t1268 = t1356 * t1331 + t1306;
t1137 = -pkin(2) * t1268 + t1176;
t1170 = -pkin(7) * t1268 + t1464;
t1227 = t1360 * t1272 - t1357 * t1314;
t1369 = pkin(6) * t1227 + t1137 * t1360 + t1170 * t1357;
t1270 = t1359 * t1329 - t1461;
t1138 = -pkin(2) * t1270 + t1177;
t1171 = -pkin(7) * t1270 + t1451;
t1228 = t1360 * t1274 + t1357 * t1311;
t1368 = pkin(6) * t1228 + t1138 * t1360 + t1171 * t1357;
t1074 = t1360 * t1100 + t1357 * t1225;
t1366 = pkin(6) * t1074 - (-pkin(2) * t1360 - pkin(7) * t1357) * t1099;
t1339 = t1352 * qJDD(2);
t1293 = t1316 * t1352;
t1291 = t1316 * t1350;
t1290 = t1390 * t1350;
t1280 = t1357 * qJDD(3) + t1360 * t1305;
t1269 = t1359 * t1328 + t1462;
t1267 = t1356 * t1330 + t1450;
t1266 = t1427 * t1356;
t1265 = t1426 * t1359;
t1260 = t1389 * t1352;
t1259 = t1389 * t1350;
t1253 = t1359 * t1311 + t1356 * t1314;
t1252 = t1391 * t1352;
t1251 = t1391 * t1350;
t1248 = -t1349 * t1293 - t1351 * t1390;
t1247 = t1351 * t1293 - t1349 * t1390;
t1244 = t1360 * t1279 - t1432;
t1243 = t1360 * t1278 + t1432;
t1242 = t1360 * t1273 + t1356 * t1446;
t1241 = t1360 * t1271 + t1357 * t1445;
t1220 = t1360 * t1254 + t1357 * t1319;
t1201 = -t1382 + (t1350 * t1290 + t1352 * t1292) * pkin(6);
t1200 = -t1383 + (-t1350 * t1291 - t1352 * t1293) * pkin(6);
t1185 = -t1350 * t1266 + t1352 * t1372;
t1184 = t1350 * t1265 + t1352 * t1373;
t1183 = t1352 * t1266 + t1350 * t1372;
t1182 = -t1352 * t1265 + t1350 * t1373;
t1181 = -t1350 * t1269 + t1352 * t1384;
t1180 = -t1350 * t1267 + t1352 * t1385;
t1179 = t1352 * t1269 + t1350 * t1384;
t1178 = t1352 * t1267 + t1350 * t1385;
t1168 = -t1350 * t1270 + t1352 * t1395;
t1167 = -t1350 * t1268 + t1352 * t1396;
t1166 = t1352 * t1270 + t1350 * t1395;
t1165 = t1352 * t1268 + t1350 * t1396;
t1157 = -t1350 * t1253 + t1352 * t1397;
t1156 = t1352 * t1253 + t1350 * t1397;
t1155 = pkin(2) * t1314 + pkin(7) * t1272 - t1451;
t1154 = -pkin(2) * t1311 + pkin(7) * t1274 + t1464;
t1151 = t1160 * t1352;
t1136 = -pkin(1) * t1291 + t1350 * t1237 + t1352 * t1382 - t1390 * t1486;
t1135 = pkin(1) * t1290 + t1350 * t1238 - t1316 * t1486 - t1352 * t1383;
t1134 = pkin(1) * t1293 - t1352 * t1237 + (-pkin(6) * t1390 + t1382) * t1350;
t1133 = -pkin(1) * t1292 - t1352 * t1238 + (-pkin(6) * t1316 - t1383) * t1350;
t1132 = t1350 * t1299 + (t1436 - t1159) * t1352;
t1131 = -t1159 * t1350 - t1352 * t1418;
t1088 = pkin(2) * t1318 + pkin(7) * t1315 + t1100;
t1079 = -pkin(2) * t1225 + pkin(7) * t1100;
t1073 = pkin(1) * t1132 + pkin(6) * t1150;
t1072 = -pkin(1) * t1131 + t1160 * t1486;
t1066 = t1360 * t1099 + (-t1251 * t1350 - t1252 * t1352) * pkin(6);
t1064 = (-t1131 * t1350 - t1132 * t1352) * pkin(6);
t1043 = -t1357 * t1138 + t1360 * t1171 + (-t1166 * t1350 - t1168 * t1352) * pkin(6);
t1042 = -t1357 * t1137 + t1360 * t1170 + (-t1165 * t1350 - t1167 * t1352) * pkin(6);
t1032 = -t1350 * t1109 + t1352 * t1407;
t1030 = t1352 * t1109 + t1350 * t1407;
t1029 = t1099 * t1350 + t1352 * t1412;
t1028 = -t1099 * t1352 + t1350 * t1412;
t1022 = -t1350 * t1105 + t1352 * t1409;
t1020 = t1352 * t1105 + t1350 * t1409;
t1018 = -pkin(1) * t1166 - t1350 * t1154 + t1352 * t1368;
t1017 = -pkin(1) * t1165 - t1350 * t1155 + t1352 * t1369;
t1016 = pkin(1) * t1168 + t1352 * t1154 + t1350 * t1368;
t1015 = pkin(1) * t1167 + t1352 * t1155 + t1350 * t1369;
t1014 = -pkin(1) * t1251 - t1350 * t1088 + t1421 * t1352;
t1013 = pkin(1) * t1252 + t1352 * t1088 + t1421 * t1350;
t1005 = -t1350 * t1091 + t1352 * t1413;
t1004 = -t1350 * t1090 + t1352 * t1414;
t1003 = t1352 * t1091 + t1350 * t1413;
t1002 = t1352 * t1090 + t1350 * t1414;
t992 = pkin(7) * t1111 + t1359 * t1061 + t1356 * t1089 + t1597;
t991 = t1359 * t1052 + t1356 * t1087 + t1570;
t984 = pkin(7) * t1093 + t1356 * t999 + (-pkin(2) - t1488) * t1126;
t978 = t1356 * t1011 + t1359 * t1019 + t1570;
t976 = -(pkin(2) * t1357 - pkin(7) * t1360) * t1099 + (-t1028 * t1350 - t1029 * t1352) * pkin(6);
t975 = pkin(7) * t1107 + t1356 * t1010 + t1359 * t1012 - t1597;
t974 = -pkin(1) * t1028 - t1350 * t1079 + t1352 * t1366;
t973 = pkin(1) * t1029 + t1352 * t1079 + t1350 * t1366;
t971 = -pkin(2) * t1124 + pkin(7) * t1092 + t1359 * t1065 + t1356 * t989;
t968 = -t1350 * t1000 + t1352 * t1415;
t967 = t1352 * t1000 + t1350 * t1415;
t966 = pkin(7) * t1001 + (-pkin(2) + t1430) * t1024;
t965 = -t1357 * t1027 + t1360 * t996 + (-t1030 * t1350 - t1032 * t1352) * pkin(6);
t964 = -t1357 * t1026 + t1360 * t995 + t1598;
t962 = -t1350 * t987 + t1352 * t1417;
t961 = t1350 * t1417 + t1352 * t987;
t960 = -pkin(1) * t1030 - t1350 * t992 + t1352 * t1370;
t959 = pkin(1) * t1032 + t1350 * t1370 + t1352 * t992;
t958 = -t1350 * t991 + t1352 * t1371 - t1605;
t957 = t1350 * t1371 + t1352 * t991 + t1606;
t956 = -t1357 * t994 + t1360 * t981 + t1598;
t955 = -t1357 * t993 + t1360 * t979 + (-t1020 * t1350 - t1022 * t1352) * pkin(6);
t954 = -t1357 * t990 + t1360 * t986 + (-t1003 * t1350 - t1005 * t1352) * pkin(6);
t952 = -t1357 * t983 + t1360 * t972 + (-t1002 * t1350 - t1004 * t1352) * pkin(6);
t951 = -pkin(1) * t1003 - t1350 * t984 + t1352 * t1376;
t950 = pkin(1) * t1005 + t1350 * t1376 + t1352 * t984;
t949 = -t1350 * t978 + t1352 * t1374 - t1605;
t948 = t1350 * t1374 + t1352 * t978 + t1606;
t947 = -pkin(2) * t997 + pkin(7) * t988 + t1356 * t980 + t1359 * t977;
t946 = -pkin(1) * t1020 - t1350 * t975 + t1352 * t1375;
t945 = pkin(1) * t1022 + t1350 * t1375 + t1352 * t975;
t944 = -pkin(1) * t1002 - t1350 * t971 + t1352 * t1377;
t943 = pkin(1) * t1004 + t1350 * t1377 + t1352 * t971;
t942 = -t1357 * t982 + t1360 * t970 + (-t1350 * t967 - t1352 * t968) * pkin(6);
t941 = -pkin(1) * t967 - t1350 * t966 + t1352 * t1378;
t940 = pkin(1) * t968 + t1350 * t1378 + t1352 * t966;
t939 = -t1357 * t963 + t1360 * t953 + (-t1350 * t961 - t1352 * t962) * pkin(6);
t938 = -pkin(1) * t961 - t1350 * t947 + t1352 * t1379;
t937 = pkin(1) * t962 + t1350 * t1379 + t1352 * t947;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1517, -t1516, -t1500, -qJ(1) * t1500, 0, 0, -t1393, 0, t1248, t1349 * t1448, -qJ(1) * t1247 - t1349 * t1136 + t1351 * t1200, qJ(1) * t1394 - t1349 * t1135 + t1351 * t1201, -t1349 * t1151 + t1351 * t1159, t1351 * t1064 - t1349 * t1072 - qJ(1) * (t1351 * t1132 + t1349 * t1160), -t1349 * t1185 + t1351 * t1244, -t1349 * t1157 + t1351 * t1220, -t1349 * t1181 + t1351 * t1242, -t1349 * t1184 + t1351 * t1243, -t1349 * t1180 + t1351 * t1241, -t1349 * t1260 + t1351 * t1280, t1351 * t1042 - t1349 * t1017 - qJ(1) * (t1351 * t1167 + t1349 * t1227), t1351 * t1043 - t1349 * t1018 - qJ(1) * (t1351 * t1168 + t1349 * t1228), t1351 * t1066 - t1349 * t1014 - qJ(1) * (t1351 * t1252 + t1349 * t1258), t1351 * t976 - t1349 * t974 - qJ(1) * (t1351 * t1029 + t1349 * t1074), t1520, t1620, t1608, t1569, -t1618, t1568, -t1349 * t958 + t1351 * t964 - t1599, t1351 * t965 - t1349 * t960 - qJ(1) * (t1351 * t1032 + t1349 * t1070), t1351 * t954 - t1349 * t951 - qJ(1) * (t1351 * t1005 + t1349 * t1047), t1351 * t942 - t1349 * t941 - qJ(1) * (t1349 * t985 + t1351 * t968), t1520, t1608, -t1620, t1568, t1618, t1569, -t1349 * t949 + t1351 * t956 - t1599, t1351 * t952 - t1349 * t944 - qJ(1) * (t1351 * t1004 + t1349 * t1046), t1351 * t955 - t1349 * t946 - qJ(1) * (t1351 * t1022 + t1349 * t1067), t1351 * t939 - t1349 * t938 - qJ(1) * (t1349 * t969 + t1351 * t962); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1516, -t1517, t1501, qJ(1) * t1501, 0, 0, t1394, 0, t1247, -t1351 * t1448, qJ(1) * t1248 + t1351 * t1136 + t1349 * t1200, qJ(1) * t1393 + t1351 * t1135 + t1349 * t1201, t1351 * t1151 + t1349 * t1159, t1349 * t1064 + t1351 * t1072 + qJ(1) * (-t1349 * t1132 + t1351 * t1160), t1351 * t1185 + t1349 * t1244, t1351 * t1157 + t1349 * t1220, t1351 * t1181 + t1349 * t1242, t1351 * t1184 + t1349 * t1243, t1351 * t1180 + t1349 * t1241, t1351 * t1260 + t1349 * t1280, t1349 * t1042 + t1351 * t1017 + qJ(1) * (-t1349 * t1167 + t1351 * t1227), t1349 * t1043 + t1351 * t1018 + qJ(1) * (-t1349 * t1168 + t1351 * t1228), t1349 * t1066 + t1351 * t1014 + qJ(1) * (-t1349 * t1252 + t1351 * t1258), t1349 * t976 + t1351 * t974 + qJ(1) * (-t1349 * t1029 + t1351 * t1074), t1521, -t1619, t1607, t1567, t1617, t1566, t1349 * t964 + t1351 * t958 + t1600, t1349 * t965 + t1351 * t960 + qJ(1) * (-t1349 * t1032 + t1351 * t1070), t1349 * t954 + t1351 * t951 + qJ(1) * (-t1349 * t1005 + t1351 * t1047), t1349 * t942 + t1351 * t941 + qJ(1) * (-t1349 * t968 + t1351 * t985), t1521, t1607, t1619, t1566, -t1617, t1567, t1349 * t956 + t1351 * t949 + t1600, t1349 * t952 + t1351 * t944 + qJ(1) * (-t1349 * t1004 + t1351 * t1046), t1349 * t955 + t1351 * t946 + qJ(1) * (-t1349 * t1022 + t1351 * t1067), t1349 * t939 + t1351 * t938 + qJ(1) * (-t1349 * t962 + t1351 * t969); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1437, t1320, 0, 0, 0, 0, t1290, 0, t1291, t1339, t1134, t1133, t1150, t1073, t1183, t1156, t1179, t1182, t1178, t1259, t1015, t1016, t1013, t973, t1495, -t1006, t1602, t1546, t1036, t1547, t957, t959, t950, t940, t1495, t1602, t1006, t1547, -t1036, t1546, t948, t943, t945, t937; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1485, -t1437, 0, 0, 0, t1316, 0, -t1390, 0, t1200, t1201, t1159, t1064, t1244, t1220, t1242, t1243, t1241, t1280, t1042, t1043, t1066, t976, t1496, -t1050, t1579, t1522, t1077, t1519, t964, t965, t954, t942, t1496, t1579, t1050, t1519, -t1077, t1522, t956, t952, t955, t939; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1485, 0, -t1320, 0, 0, 0, t1292, 0, t1293, -t1448, t1136, t1135, t1151, t1072, t1185, t1157, t1181, t1184, t1180, t1260, t1017, t1018, t1014, t974, t1494, -t1008, t1601, t1544, t1040, t1545, t958, t960, t951, t941, t1494, t1601, t1008, t1545, -t1040, t1544, t949, t944, t946, t938; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1437, t1320, 0, 0, 0, 0, t1290, 0, t1291, t1339, t1134, t1133, t1150, t1073, t1183, t1156, t1179, t1182, t1178, t1259, t1015, t1016, t1013, t973, t1495, -t1006, t1602, t1546, t1036, t1547, t957, t959, t950, t940, t1495, t1602, t1006, t1547, -t1036, t1546, t948, t943, t945, t937; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1361, 0, 0, -t1418, t1237, 0, t1279, t1254, t1273, t1278, t1271, t1305, t1170, t1171, t1099, pkin(7) * t1099, t1424, -t1103, t1563, t1498, t1119, t1497, t995, t996, t986, t970, t1424, t1563, t1103, t1497, -t1119, t1498, t981, t972, t979, t953; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1361, 0, qJDD(2), 0, t1418, 0, t1238, 0, t1333, -t1319, -t1447, -t1333, -t1445, -qJDD(3), t1137, t1138, 0, pkin(2) * t1099, -t1208, -t1125, -t1550, t1205, -t1190, -t1515, t1026, t1027, t990, t982, -t1208, -t1550, t1125, -t1515, t1190, t1205, t994, t983, t993, t963; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1237, -t1238, 0, 0, t1266, t1253, t1269, -t1265, t1267, 0, t1155, t1154, t1088, t1079, t1425, -t1101, t1565, t1499, t1115, t1502, t991, t992, t984, t966, t1425, t1565, t1101, t1502, -t1115, t1499, t978, t971, t975, t947; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1312, t1314, t1321, -t1338, t1330, t1338, 0, t1225, t1176, 0, t1209, -t1127, t1549, t1386, t1194, t1423, t1087, t1089, t999, -pkin(8) * t1024, t1209, t1549, t1127, t1423, -t1194, t1386, t1011, t989, t1010, t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1337, t1311, t1328, t1313, t1322, -t1337, -t1225, 0, t1177, 0, -t1264, -t1509, -t1513, t1264, t1212, t1304, t1052, t1061, -pkin(3) * t1126, -pkin(3) * t1024, -t1264, -t1513, t1509, t1304, -t1212, t1264, t1019, t1065, t1012, t977; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1333, t1319, t1447, t1333, t1445, qJDD(3), -t1176, -t1177, 0, 0, t1208, t1125, t1550, -t1205, t1190, t1515, t1381, t1380, t1367, t1431, t1208, t1550, -t1125, t1515, -t1190, -t1205, t1504, t1365, t1503, t1505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1246, -t1514, t1511, -t1479, t1281, t1479, 0, t1140, t1085, 0, t1246, t1511, t1514, t1479, -t1281, -t1479, -qJ(5) * t1514, t1045, t1048, -qJ(5) * t1069; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1287, t1512, -t1282, -t1245, -t1510, t1287, -t1140, 0, t1086, 0, -t1287, -t1282, -t1512, t1287, t1510, -t1245, t1049, t1044, pkin(4) * t1512, -pkin(4) * t1069; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1264, t1509, t1513, -t1264, -t1212, -t1304, -t1085, -t1086, 0, 0, t1264, t1513, -t1509, -t1304, t1212, -t1264, t1362, t1428, t1323 + t1364, t1429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1246, t1511, t1514, t1479, -t1281, -t1479, 0, t1063, -t1069, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1264, t1513, -t1509, -t1304, t1212, -t1264, -t1063, 0, t1062, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1287, t1282, t1512, -t1287, -t1510, t1245, t1069, -t1062, 0, 0;];
m_new_reg = t1;
