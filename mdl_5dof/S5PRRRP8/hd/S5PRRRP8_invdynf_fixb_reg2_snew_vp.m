% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5PRRRP8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d2,d3,d4,theta1]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:01
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5PRRRP8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRP8_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRP8_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRP8_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRP8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRRRP8_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:01:43
% EndTime: 2019-12-05 17:01:48
% DurationCPUTime: 4.46s
% Computational Cost: add. (8306->219), mult. (16268->290), div. (0->0), fcn. (11669->10), ass. (0->165)
t1791 = sin(qJ(3));
t1834 = qJD(2) * t1791;
t1777 = qJD(3) * t1834;
t1794 = cos(qJ(3));
t1822 = t1794 * qJDD(2);
t1819 = t1777 - t1822;
t1817 = -qJDD(4) - t1819;
t1790 = sin(qJ(4));
t1793 = cos(qJ(4));
t1753 = -t1793 * qJD(3) + t1790 * t1834;
t1755 = t1790 * qJD(3) + t1793 * t1834;
t1832 = t1755 * t1753;
t1715 = t1817 - t1832;
t1751 = t1755 ^ 2;
t1825 = t1794 * qJD(2);
t1775 = qJD(4) - t1825;
t1835 = t1775 ^ 2;
t1840 = -t1751 - t1835;
t1697 = t1793 * t1715 - t1790 * t1840;
t1821 = qJD(3) * t1825;
t1823 = t1791 * qJDD(2);
t1758 = t1821 + t1823;
t1799 = -t1753 * qJD(4) + t1790 * qJDD(3) + t1793 * t1758;
t1833 = t1753 * t1775;
t1798 = t1799 - t1833;
t1671 = t1791 * t1697 - t1794 * t1798;
t1785 = sin(pkin(5));
t1787 = cos(pkin(5));
t1673 = t1794 * t1697 + t1791 * t1798;
t1695 = t1790 * t1715 + t1793 * t1840;
t1792 = sin(qJ(2));
t1795 = cos(qJ(2));
t1809 = t1673 * t1792 - t1695 * t1795;
t1647 = -t1785 * t1671 + t1787 * t1809;
t1656 = t1795 * t1673 + t1792 * t1695;
t1784 = sin(pkin(9));
t1786 = cos(pkin(9));
t1873 = t1784 * t1647 - t1786 * t1656;
t1872 = t1786 * t1647 + t1784 * t1656;
t1645 = t1787 * t1671 + t1785 * t1809;
t1707 = t1799 + t1833;
t1820 = -t1793 * qJDD(3) + t1790 * t1758;
t1800 = (-qJD(4) + t1775) * t1755 - t1820;
t1838 = -t1793 * t1707 + t1790 * t1800;
t1730 = t1753 ^ 2;
t1714 = t1751 + t1730;
t1837 = t1790 * t1707 + t1793 * t1800;
t1851 = -t1791 * t1714 + t1794 * t1837;
t1856 = t1792 * t1838 + t1795 * t1851;
t1850 = t1794 * t1714 + t1791 * t1837;
t1857 = t1792 * t1851 - t1795 * t1838;
t1862 = -t1785 * t1850 + t1787 * t1857;
t1867 = -t1784 * t1862 + t1786 * t1856;
t1866 = t1784 * t1856 + t1786 * t1862;
t1863 = t1785 * t1857 + t1787 * t1850;
t1716 = t1817 + t1832;
t1839 = -t1835 - t1730;
t1843 = t1790 * t1716 + t1793 * t1839;
t1855 = t1791 * t1843;
t1844 = -t1793 * t1716 + t1790 * t1839;
t1854 = t1792 * t1844;
t1853 = t1794 * t1843;
t1852 = t1795 * t1844;
t1764 = t1784 * g(1) - t1786 * g(2);
t1830 = t1787 * t1764;
t1781 = -g(3) + qJDD(1);
t1831 = t1785 * t1781;
t1845 = t1830 + t1831;
t1836 = qJD(3) ^ 2;
t1765 = -t1786 * g(1) - t1784 * g(2);
t1719 = t1795 * t1765 + t1845 * t1792;
t1796 = qJD(2) ^ 2;
t1710 = -t1796 * pkin(2) + qJDD(2) * pkin(7) + t1719;
t1803 = -t1785 * t1764 + t1787 * t1781;
t1700 = t1794 * t1710 + t1791 * t1803;
t1756 = (-pkin(3) * t1794 - pkin(8) * t1791) * qJD(2);
t1683 = -t1836 * pkin(3) + qJDD(3) * pkin(8) + t1756 * t1825 + t1700;
t1818 = t1792 * t1765 - t1845 * t1795;
t1709 = -qJDD(2) * pkin(2) - t1796 * pkin(7) + t1818;
t1797 = (-t1758 - t1821) * pkin(8) + (t1819 + t1777) * pkin(3) + t1709;
t1660 = t1793 * t1683 + t1790 * t1797;
t1779 = t1791 ^ 2;
t1780 = t1794 ^ 2;
t1824 = t1779 + t1780;
t1659 = -t1790 * t1683 + t1793 * t1797;
t1726 = t1753 * pkin(4) - t1755 * qJ(5);
t1651 = -pkin(4) * t1835 - t1817 * qJ(5) + 0.2e1 * qJD(5) * t1775 - t1753 * t1726 + t1660;
t1652 = pkin(4) * t1817 - qJ(5) * t1835 + t1755 * t1726 + qJDD(5) - t1659;
t1630 = t1793 * t1651 + t1790 * t1652;
t1736 = t1794 * t1803;
t1682 = -t1736 - qJDD(3) * pkin(3) - t1836 * pkin(8) + (qJD(2) * t1756 + t1710) * t1791;
t1801 = -t1755 * qJD(4) - t1820;
t1655 = -t1801 * pkin(4) + (pkin(4) * t1775 - 0.2e1 * qJD(5)) * t1755 + t1682 - t1798 * qJ(5);
t1628 = t1794 * t1630 + t1791 * t1655;
t1629 = t1790 * t1651 - t1793 * t1652;
t1816 = t1628 * t1792 - t1629 * t1795;
t1642 = -t1790 * t1659 + t1793 * t1660;
t1632 = t1794 * t1642 + t1791 * t1682;
t1641 = t1793 * t1659 + t1790 * t1660;
t1815 = t1632 * t1792 - t1641 * t1795;
t1699 = -t1791 * t1710 + t1736;
t1666 = -t1791 * t1699 + t1794 * t1700;
t1812 = t1666 * t1792 - t1709 * t1795;
t1702 = (qJD(4) + t1775) * t1755 + t1820;
t1670 = t1791 * t1702 + t1853;
t1810 = t1670 * t1792 - t1852;
t1701 = t1755 * t1775 - t1801;
t1674 = t1791 * t1701 + t1853;
t1808 = t1674 * t1792 - t1852;
t1807 = t1792 * t1719 - t1795 * t1818;
t1774 = t1791 * t1796 * t1794;
t1766 = qJDD(3) + t1774;
t1772 = -t1780 * t1796 - t1836;
t1733 = -t1791 * t1766 + t1794 * t1772;
t1759 = -0.2e1 * t1777 + t1822;
t1806 = t1733 * t1792 + t1759 * t1795;
t1767 = -qJDD(3) + t1774;
t1771 = -t1779 * t1796 - t1836;
t1734 = t1794 * t1767 - t1791 * t1771;
t1757 = 0.2e1 * t1821 + t1823;
t1805 = t1734 * t1792 - t1757 * t1795;
t1760 = t1824 * qJDD(2);
t1763 = t1824 * t1796;
t1804 = t1760 * t1792 + t1763 * t1795;
t1802 = t1795 * qJDD(2) - t1792 * t1796;
t1762 = -t1792 * qJDD(2) - t1795 * t1796;
t1745 = t1802 * t1787;
t1744 = t1762 * t1787;
t1743 = t1802 * t1785;
t1742 = t1762 * t1785;
t1732 = t1791 * t1767 + t1794 * t1771;
t1731 = t1794 * t1766 + t1791 * t1772;
t1729 = t1795 * t1760 - t1792 * t1763;
t1725 = t1804 * t1787;
t1724 = t1804 * t1785;
t1712 = t1795 * t1734 + t1792 * t1757;
t1711 = t1795 * t1733 - t1792 * t1759;
t1694 = -t1785 * t1732 + t1787 * t1805;
t1693 = -t1785 * t1731 + t1787 * t1806;
t1692 = t1787 * t1732 + t1785 * t1805;
t1691 = t1787 * t1731 + t1785 * t1806;
t1686 = t1795 * t1719 + t1792 * t1818;
t1680 = t1785 ^ 2 * t1764 + (t1807 - t1831) * t1787;
t1679 = t1787 ^ 2 * t1781 + (t1807 - t1830) * t1785;
t1672 = -t1794 * t1701 + t1855;
t1668 = -t1794 * t1702 + t1855;
t1665 = t1794 * t1699 + t1791 * t1700;
t1658 = t1795 * t1666 + t1792 * t1709;
t1657 = t1795 * t1674 + t1854;
t1654 = t1795 * t1670 + t1854;
t1648 = -t1785 * t1672 + t1787 * t1808;
t1646 = t1787 * t1672 + t1785 * t1808;
t1644 = -t1785 * t1665 + t1787 * t1812;
t1643 = t1787 * t1665 + t1785 * t1812;
t1640 = -t1785 * t1668 + t1787 * t1810;
t1638 = t1787 * t1668 + t1785 * t1810;
t1631 = t1791 * t1642 - t1794 * t1682;
t1627 = t1791 * t1630 - t1794 * t1655;
t1626 = t1795 * t1632 + t1792 * t1641;
t1625 = t1795 * t1628 + t1792 * t1629;
t1624 = -t1785 * t1631 + t1787 * t1815;
t1623 = t1787 * t1631 + t1785 * t1815;
t1622 = -t1785 * t1627 + t1787 * t1816;
t1621 = t1787 * t1627 + t1785 * t1816;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1784 * t1764 + t1786 * t1765, 0, 0, 0, 0, 0, 0, -t1784 * t1745 + t1786 * t1762, -t1784 * t1744 - t1786 * t1802, 0, -t1784 * t1680 + t1786 * t1686, 0, 0, 0, 0, 0, 0, -t1784 * t1693 + t1786 * t1711, -t1784 * t1694 + t1786 * t1712, -t1784 * t1725 + t1786 * t1729, -t1784 * t1644 + t1786 * t1658, 0, 0, 0, 0, 0, 0, -t1784 * t1640 + t1786 * t1654, -t1873, t1867, -t1784 * t1624 + t1786 * t1626, 0, 0, 0, 0, 0, 0, -t1784 * t1648 + t1786 * t1657, t1867, t1873, -t1784 * t1622 + t1786 * t1625; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1786 * t1764 + t1784 * t1765, 0, 0, 0, 0, 0, 0, t1786 * t1745 + t1784 * t1762, t1786 * t1744 - t1784 * t1802, 0, t1786 * t1680 + t1784 * t1686, 0, 0, 0, 0, 0, 0, t1786 * t1693 + t1784 * t1711, t1786 * t1694 + t1784 * t1712, t1786 * t1725 + t1784 * t1729, t1786 * t1644 + t1784 * t1658, 0, 0, 0, 0, 0, 0, t1786 * t1640 + t1784 * t1654, t1872, t1866, t1786 * t1624 + t1784 * t1626, 0, 0, 0, 0, 0, 0, t1786 * t1648 + t1784 * t1657, t1866, -t1872, t1786 * t1622 + t1784 * t1625; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1781, 0, 0, 0, 0, 0, 0, t1743, t1742, 0, t1679, 0, 0, 0, 0, 0, 0, t1691, t1692, t1724, t1643, 0, 0, 0, 0, 0, 0, t1638, t1645, t1863, t1623, 0, 0, 0, 0, 0, 0, t1646, t1863, -t1645, t1621; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1765, 0, 0, 0, 0, 0, 0, t1762, -t1802, 0, t1686, 0, 0, 0, 0, 0, 0, t1711, t1712, t1729, t1658, 0, 0, 0, 0, 0, 0, t1654, t1656, t1856, t1626, 0, 0, 0, 0, 0, 0, t1657, t1856, -t1656, t1625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1764, 0, 0, 0, 0, 0, 0, t1745, t1744, 0, t1680, 0, 0, 0, 0, 0, 0, t1693, t1694, t1725, t1644, 0, 0, 0, 0, 0, 0, t1640, t1647, t1862, t1624, 0, 0, 0, 0, 0, 0, t1648, t1862, -t1647, t1622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1781, 0, 0, 0, 0, 0, 0, t1743, t1742, 0, t1679, 0, 0, 0, 0, 0, 0, t1691, t1692, t1724, t1643, 0, 0, 0, 0, 0, 0, t1638, t1645, t1863, t1623, 0, 0, 0, 0, 0, 0, t1646, t1863, -t1645, t1621; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1796, -qJDD(2), 0, t1719, 0, 0, 0, 0, 0, 0, t1733, t1734, t1760, t1666, 0, 0, 0, 0, 0, 0, t1670, t1673, t1851, t1632, 0, 0, 0, 0, 0, 0, t1674, t1851, -t1673, t1628; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1796, 0, -t1818, 0, 0, 0, 0, 0, 0, t1759, -t1757, t1763, -t1709, 0, 0, 0, 0, 0, 0, -t1844, -t1695, -t1838, -t1641, 0, 0, 0, 0, 0, 0, -t1844, -t1838, t1695, -t1629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1803, 0, 0, 0, 0, 0, 0, t1731, t1732, 0, t1665, 0, 0, 0, 0, 0, 0, t1668, t1671, t1850, t1631, 0, 0, 0, 0, 0, 0, t1672, t1850, -t1671, t1627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1772, t1767, t1822, t1700, 0, 0, 0, 0, 0, 0, t1843, t1697, t1837, t1642, 0, 0, 0, 0, 0, 0, t1843, t1837, -t1697, t1630; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1766, t1771, -t1823, t1699, 0, 0, 0, 0, 0, 0, -t1702, -t1798, t1714, -t1682, 0, 0, 0, 0, 0, 0, -t1701, t1714, t1798, -t1655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1759, t1757, -t1763, t1709, 0, 0, 0, 0, 0, 0, t1844, t1695, t1838, t1641, 0, 0, 0, 0, 0, 0, t1844, t1838, -t1695, t1629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1839, t1715, t1800, t1660, 0, 0, 0, 0, 0, 0, t1839, t1800, -t1715, t1651; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1716, t1840, -t1707, t1659, 0, 0, 0, 0, 0, 0, -t1716, -t1707, -t1840, -t1652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1702, t1798, -t1714, t1682, 0, 0, 0, 0, 0, 0, t1701, -t1714, -t1798, t1655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1839, t1800, -t1715, t1651; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1701, -t1714, -t1798, t1655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1716, t1707, t1840, t1652;];
f_new_reg = t1;
