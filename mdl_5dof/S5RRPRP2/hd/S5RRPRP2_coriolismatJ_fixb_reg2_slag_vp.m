% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:50
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:49:48
% EndTime: 2019-12-31 19:49:50
% DurationCPUTime: 1.40s
% Computational Cost: add. (917->161), mult. (1930->169), div. (0->0), fcn. (1538->6), ass. (0->124)
t81 = sin(qJ(4));
t83 = cos(qJ(4));
t94 = -t83 * pkin(4) - t81 * qJ(5);
t90 = -pkin(3) + t94;
t79 = sin(pkin(8));
t82 = sin(qJ(2));
t69 = t79 * t82 * pkin(1);
t84 = cos(qJ(2));
t143 = t84 * pkin(1);
t72 = pkin(2) + t143;
t80 = cos(pkin(8));
t99 = t80 * t72 - t69;
t29 = t90 - t99;
t28 = t29 * t81;
t145 = t80 * pkin(2);
t58 = t90 - t145;
t51 = t58 * t81;
t130 = t28 / 0.2e1 + t51 / 0.2e1;
t122 = t83 * qJ(5);
t144 = t81 * pkin(4);
t62 = t122 - t144;
t135 = t62 * t83;
t148 = -t130 - t135;
t57 = t80 * t143 - t69;
t77 = t81 ^ 2;
t78 = t83 ^ 2;
t22 = (t77 + t78) * t57;
t111 = qJD(1) + qJD(2);
t66 = t78 - t77;
t147 = t111 * t66;
t142 = t29 * t62;
t141 = t29 * t83;
t49 = -pkin(3) - t99;
t140 = t49 * t83;
t138 = t58 * t83;
t137 = t62 * t58;
t136 = t62 * t81;
t71 = -pkin(3) - t145;
t134 = t71 * t83;
t133 = t80 * t82;
t132 = t81 * t57;
t131 = t83 * t57;
t70 = t79 * pkin(2) + pkin(7);
t128 = t70 * t22;
t56 = (t79 * t84 + t133) * pkin(1);
t52 = t56 * qJD(2);
t41 = t81 * t52;
t73 = t77 * qJD(5);
t127 = t73 - t41;
t126 = pkin(1) * qJD(1);
t125 = pkin(1) * qJD(2);
t97 = pkin(1) * t133 + t79 * t72;
t50 = pkin(7) + t97;
t96 = t50 * t22;
t1 = t29 * t56 + t96;
t124 = t1 * qJD(1);
t2 = t49 * t56 + t96;
t123 = t2 * qJD(1);
t121 = qJD(1) * t81;
t120 = qJD(2) * t81;
t12 = -t99 * t56 + t97 * t57;
t119 = t12 * qJD(1);
t17 = -t136 + t141;
t118 = t17 * qJD(1);
t18 = -t28 - t135;
t117 = t18 * qJD(1);
t20 = t22 * qJD(1);
t116 = t56 * qJD(1);
t115 = t57 * qJD(1);
t114 = t66 * qJD(4);
t74 = t81 * qJD(4);
t75 = t83 * qJD(4);
t113 = t83 * qJD(5);
t112 = qJD(4) * qJ(5);
t110 = qJD(1) * t142;
t109 = t29 * t121;
t108 = t49 * t121;
t107 = qJD(1) * t140;
t106 = t83 * t52;
t105 = t50 * t74;
t104 = t70 * t74;
t103 = t50 * t75;
t102 = t70 * t75;
t101 = t58 / 0.2e1 + t29 / 0.2e1;
t100 = -t71 / 0.2e1 - t49 / 0.2e1;
t98 = pkin(1) * t111;
t67 = t81 * t113;
t95 = t67 - t106;
t23 = -t136 + t138;
t39 = t131 / 0.2e1;
t6 = t101 * t83 - t136 + t39;
t93 = t6 * qJD(1) + t23 * qJD(2);
t24 = -t51 - t135;
t38 = -t132 / 0.2e1;
t5 = t38 + t148;
t92 = t5 * qJD(1) + t24 * qJD(2);
t91 = t62 * qJD(4) + t81 * qJD(5);
t85 = (t122 / 0.2e1 - t144 / 0.2e1) * t57;
t3 = t101 * t62 + t85;
t89 = t3 * qJD(1) + qJD(2) * t137;
t37 = t132 / 0.2e1;
t10 = t37 + t130;
t88 = t10 * qJD(1) + t58 * t120;
t13 = t100 * t81 + t38;
t87 = t13 * qJD(1) - t71 * t120;
t40 = -t131 / 0.2e1;
t14 = t100 * t83 + t40;
t86 = t14 * qJD(1) - qJD(2) * t134;
t54 = t94 * qJD(4) + t113;
t68 = t81 * t75;
t61 = t111 * t77;
t55 = t111 * t83 * t81;
t53 = t57 * qJD(2);
t43 = t83 * t116;
t42 = t81 * t116;
t19 = t22 * qJD(2);
t16 = t134 / 0.2e1 + t140 / 0.2e1 + t40;
t15 = t38 + (t49 + t71) * t81 / 0.2e1;
t11 = t37 - t130;
t9 = t19 + t20;
t8 = t38 - t148;
t7 = -t141 / 0.2e1 + t136 + t39 - t138 / 0.2e1;
t4 = -t137 / 0.2e1 - t142 / 0.2e1 + t85;
t21 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82 * t125, -t84 * t125, 0, 0, 0, 0, 0, 0, 0, 0, -t52, -t53, 0, t12 * qJD(2), t68, t114, 0, -t68, 0, 0, t49 * t74 - t106, t49 * t75 + t41, t19, t2 * qJD(2), t68, 0, -t114, 0, 0, -t68, -t18 * qJD(4) + t95, t19, -t17 * qJD(4) + t127, t1 * qJD(2) - t91 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82 * t98, -t84 * t98, 0, 0, 0, 0, 0, 0, 0, 0, -t52 - t116, -t53 - t115, 0, t119 + (-t56 * t80 + t57 * t79) * qJD(2) * pkin(2), t68, t114, 0, -t68, 0, 0, t15 * qJD(4) - t106 - t43, t16 * qJD(4) + t41 + t42, t9, t123 + (t56 * t71 + t128) * qJD(2), t68, 0, -t114, 0, 0, -t68, t8 * qJD(4) - t43 + t95, t9, t7 * qJD(4) + t127 - t42, t124 + (t56 * t58 + t128) * qJD(2) + t4 * qJD(4) + t11 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t147, t75, -t55, -t74, 0, t15 * qJD(2) - t103 + t108, t16 * qJD(2) + t105 + t107, 0, 0, t55, t75, -t147, 0, t74, -t55, t8 * qJD(2) - t103 - t117, t54, t7 * qJD(2) - t105 - t118, t4 * qJD(2) + t50 * t54 - t110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t75, t61, t11 * qJD(2) + t103 - t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82 * t126, t84 * t126, 0, 0, 0, 0, 0, 0, 0, 0, t116, t115, 0, -t119, t68, t114, 0, -t68, 0, 0, -t13 * qJD(4) + t43, -t14 * qJD(4) - t42, -t20, -t123, t68, 0, -t114, 0, 0, -t68, -t5 * qJD(4) + t43 + t67, -t20, -t6 * qJD(4) + t42 + t73, -t3 * qJD(4) - t10 * qJD(5) - t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, t114, 0, -t68, 0, 0, t71 * t74, t71 * t75, 0, 0, t68, 0, -t114, 0, 0, -t68, -t24 * qJD(4) + t67, 0, -t23 * qJD(4) + t73, -t91 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t147, t75, -t55, -t74, 0, -t87 - t102, -t86 + t104, 0, 0, t55, t75, -t147, 0, t74, -t55, -t92 - t102, t54, -t93 - t104, t54 * t70 - t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t75, t61, -t88 + t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, -t75, 0, 0, 0, 0, 0, 0, 0, 0, -t74, 0, t75, t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, -t147, 0, t55, 0, 0, t13 * qJD(2) - t108, t14 * qJD(2) - t107, 0, 0, -t55, 0, t147, 0, 0, t55, t5 * qJD(2) + t117, 0, t6 * qJD(2) + t118, t3 * qJD(2) + t110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, -t147, 0, t55, 0, 0, t87, t86, 0, 0, -t55, 0, t147, 0, 0, t55, t92, 0, t93, t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, 0, -t61, t10 * qJD(2) + t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, 0, -t61, t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4), -t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t21;
