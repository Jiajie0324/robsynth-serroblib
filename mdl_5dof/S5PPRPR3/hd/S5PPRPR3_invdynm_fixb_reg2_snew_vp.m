% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PPRPR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d3,d5,theta1,theta2,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:05
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PPRPR3_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PPRPR3_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PPRPR3_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PPRPR3_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PPRPR3_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PPRPR3_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:05:32
% EndTime: 2019-12-05 15:05:39
% DurationCPUTime: 6.91s
% Computational Cost: add. (21661->423), mult. (35258->592), div. (0->0), fcn. (26705->10), ass. (0->286)
t637 = sin(qJ(3));
t631 = sin(pkin(7));
t634 = cos(pkin(7));
t607 = t634 * g(1) + t631 * g(2);
t630 = sin(pkin(8));
t633 = cos(pkin(8));
t682 = g(3) - qJDD(1);
t581 = -t633 * t607 - t630 * t682;
t606 = t631 * g(1) - t634 * g(2);
t598 = -qJDD(2) + t606;
t639 = cos(qJ(3));
t534 = t639 * t581 - t637 * t598;
t641 = qJD(3) ^ 2;
t528 = -t641 * pkin(3) + t534;
t629 = sin(pkin(9));
t632 = cos(pkin(9));
t533 = t637 * t581 + t639 * t598;
t646 = qJDD(3) * pkin(3) - t533;
t488 = t629 * t528 - t632 * t646;
t489 = t632 * t528 + t629 * t646;
t667 = t629 * t488 + t632 * t489;
t440 = t632 * t488 - t629 * t489;
t684 = t639 * t440;
t413 = -t637 * t667 + t684;
t688 = t637 * t440;
t717 = t639 * t667 + t688;
t599 = t629 * qJDD(3) + t632 * t641;
t600 = t632 * qJDD(3) - t629 * t641;
t551 = t639 * t599 + t637 * t600;
t716 = t634 * t551;
t580 = -t630 * t607 + t633 * t682;
t575 = qJDD(4) + t580;
t531 = qJ(4) * t599 + t632 * t575;
t658 = -qJ(4) * t600 + t629 * t575;
t655 = t639 * t531 - t637 * t658;
t715 = -pkin(5) * t551 - t655;
t555 = t637 * t599 - t639 * t600;
t656 = -t637 * t531 - t639 * t658;
t462 = pkin(5) * t555 - t656;
t694 = t633 * t634;
t714 = t631 * t551 - t555 * t694;
t713 = t631 * t682;
t712 = t634 * t682;
t482 = -t641 * pkin(4) + qJDD(3) * pkin(6) + t489;
t636 = sin(qJ(5));
t638 = cos(qJ(5));
t454 = t636 * t482 - t638 * t575;
t455 = t638 * t482 + t636 * t575;
t435 = t636 * t454 + t638 * t455;
t562 = t633 * t580;
t517 = -t630 * t581 + t562;
t707 = pkin(3) * t440;
t626 = t636 ^ 2;
t706 = t626 * t641;
t705 = t630 * t580;
t582 = t630 * t598;
t703 = t631 * t598;
t702 = t631 * t633;
t701 = t633 * t413;
t493 = t639 * t533 - t637 * t534;
t700 = t633 * t493;
t679 = qJD(3) * qJD(5);
t627 = t638 ^ 2;
t680 = t626 + t627;
t591 = t680 * t679;
t576 = -t632 * qJDD(5) + t629 * t591;
t577 = t629 * qJDD(5) + t632 * t591;
t510 = -t637 * t576 + t639 * t577;
t699 = t633 * t510;
t698 = t633 * t555;
t697 = t633 * t551;
t583 = t633 * t598;
t602 = t637 * qJDD(3) + t639 * t641;
t696 = t633 * t602;
t603 = t639 * qJDD(3) - t637 * t641;
t695 = t633 * t603;
t693 = t634 * t598;
t692 = t634 * t602;
t691 = t634 * t603;
t481 = -qJDD(3) * pkin(4) - t641 * pkin(6) + t488;
t478 = t636 * t481;
t616 = t636 * t641 * t638;
t608 = qJDD(5) + t616;
t690 = t636 * t608;
t609 = qJDD(5) - t616;
t689 = t636 * t609;
t687 = t637 * t580;
t479 = t638 * t481;
t686 = t638 * t608;
t685 = t638 * t609;
t683 = t639 * t580;
t681 = -pkin(4) * t481 + pkin(6) * t435;
t620 = t630 * qJDD(3);
t678 = t633 * qJDD(3);
t677 = t636 * qJDD(3);
t622 = t638 * qJDD(3);
t640 = qJD(5) ^ 2;
t613 = -t640 - t706;
t573 = -t636 * t613 - t685;
t619 = t638 * t679;
t593 = 0.2e1 * t619 + t677;
t676 = -pkin(4) * t593 + pkin(6) * t573 + t478;
t624 = t627 * t641;
t615 = -t624 - t640;
t571 = t638 * t615 - t690;
t673 = t636 * t679;
t596 = t622 - 0.2e1 * t673;
t675 = pkin(4) * t596 + pkin(6) * t571 - t479;
t674 = pkin(1) * t630 + pkin(5);
t601 = t680 * qJDD(3);
t604 = t624 + t706;
t557 = t629 * t601 + t632 * t604;
t558 = t632 * t601 - t629 * t604;
t506 = t639 * t557 + t637 * t558;
t662 = pkin(4) * t604 + pkin(6) * t601 + t435;
t647 = pkin(3) * t557 + t662;
t416 = -pkin(2) * t506 - t647;
t507 = -t637 * t557 + t639 * t558;
t672 = qJ(2) * t507 + t416;
t660 = -pkin(3) * t599 - t489;
t448 = pkin(2) * t551 - t660;
t671 = qJ(2) * t555 + t448;
t650 = pkin(3) * t600 - t488;
t449 = pkin(2) * t555 - t650;
t670 = -qJ(2) * t551 + t449;
t513 = -pkin(2) * t603 + t533;
t669 = qJ(2) * t602 - t513;
t514 = pkin(2) * t602 + t534;
t668 = qJ(2) * t603 - t514;
t666 = t633 * t581 + t705;
t665 = -t631 * t606 - t634 * t607;
t664 = t629 * t616;
t663 = t632 * t616;
t417 = t629 * t435 - t632 * t481;
t661 = pkin(3) * t417 + t681;
t654 = t637 * t533 + t639 * t534;
t659 = -pkin(2) * t580 + pkin(5) * t654;
t536 = pkin(5) * t602 + t683;
t535 = -pkin(5) * t603 + t687;
t434 = t638 * t454 - t636 * t455;
t425 = qJ(4) * t558 + t629 * t434;
t426 = -qJ(4) * t557 + t632 * t434;
t657 = -t639 * t425 - t637 * t426;
t653 = t634 * t606 - t631 * t607;
t525 = t629 * t573 - t632 * t593;
t652 = pkin(3) * t525 + t676;
t524 = t629 * t571 + t632 * t596;
t651 = pkin(3) * t524 + t675;
t649 = t631 * t602 + t633 * t691;
t648 = t631 * t695 - t692;
t418 = t632 * t435 + t629 * t481;
t393 = qJ(4) * t418 - (-pkin(4) * t632 - pkin(6) * t629 - pkin(3)) * t434;
t399 = -qJ(4) * t417 - (pkin(4) * t629 - pkin(6) * t632) * t434;
t404 = -t637 * t417 + t639 * t418;
t645 = pkin(2) * t434 + pkin(5) * t404 + t639 * t393 + t637 * t399;
t567 = t636 * t615 + t686;
t442 = -pkin(4) * t567 + t454;
t452 = -pkin(6) * t567 + t478;
t526 = t632 * t571 - t629 * t596;
t419 = -pkin(3) * t567 + qJ(4) * t526 + t632 * t442 + t629 * t452;
t421 = -qJ(4) * t524 - t629 * t442 + t632 * t452;
t486 = -t637 * t524 + t639 * t526;
t644 = -pkin(2) * t567 + pkin(5) * t486 + t639 * t419 + t637 * t421;
t569 = t638 * t613 - t689;
t443 = -pkin(4) * t569 + t455;
t453 = -pkin(6) * t569 + t479;
t527 = t632 * t573 + t629 * t593;
t420 = -pkin(3) * t569 + qJ(4) * t527 + t632 * t443 + t629 * t453;
t422 = -qJ(4) * t525 - t629 * t443 + t632 * t453;
t487 = -t637 * t525 + t639 * t527;
t643 = -pkin(2) * t569 + pkin(5) * t487 + t639 * t420 + t637 * t422;
t437 = -pkin(3) * t575 + qJ(4) * t667;
t642 = -pkin(2) * t575 + pkin(5) * t717 + qJ(4) * t688 + t639 * t437;
t614 = t624 - t640;
t612 = t640 - t706;
t611 = t634 * t620;
t610 = t631 * t620;
t605 = -t624 + t706;
t595 = t622 - t673;
t594 = t619 + t677;
t587 = t630 * t602;
t586 = t630 * t603;
t579 = t638 * t594 - t626 * t679;
t578 = -t636 * t595 - t627 * t679;
t572 = -t636 * t612 + t686;
t570 = t638 * t614 - t689;
t568 = t638 * t612 + t690;
t566 = t636 * t614 + t685;
t565 = (t594 + t619) * t636;
t564 = -t638 * t595 + t636 * t619;
t550 = -t636 * t593 + t638 * t596;
t549 = t638 * t593 + t636 * t596;
t548 = t631 * t603 - t633 * t692;
t547 = -t631 * t696 - t691;
t546 = t630 * t551;
t545 = t630 * t555;
t544 = t632 * t579 - t664;
t543 = t632 * t578 + t664;
t542 = t629 * t579 + t663;
t541 = t629 * t578 - t663;
t540 = t632 * t572 + t629 * t677;
t539 = t632 * t570 + t629 * t622;
t538 = t629 * t572 - t632 * t677;
t537 = t629 * t570 - t632 * t622;
t520 = t632 * t550 + t629 * t605;
t519 = t629 * t550 - t632 * t605;
t512 = t674 * t602 + t683;
t511 = t674 * t603 - t687;
t509 = t639 * t576 + t637 * t577;
t508 = t630 * t510;
t505 = pkin(1) * t598 + qJ(2) * t666;
t504 = -t551 * t694 - t555 * t631;
t503 = t555 * t634 - t631 * t697;
t502 = -t637 * t542 + t639 * t544;
t501 = -t637 * t541 + t639 * t543;
t500 = t639 * t542 + t637 * t544;
t499 = t639 * t541 + t637 * t543;
t498 = -t637 * t538 + t639 * t540;
t497 = -t637 * t537 + t639 * t539;
t496 = t639 * t538 + t637 * t540;
t495 = t639 * t537 + t637 * t539;
t490 = t630 * t493;
t485 = t639 * t525 + t637 * t527;
t484 = t639 * t524 + t637 * t526;
t477 = -t637 * t519 + t639 * t520;
t476 = t639 * t519 + t637 * t520;
t475 = t633 * t536 + t668 * t630;
t474 = t633 * t535 + t669 * t630;
t473 = t633 * t502 + t630 * t565;
t472 = t633 * t501 - t630 * t564;
t471 = t630 * t502 - t633 * t565;
t470 = t630 * t501 + t633 * t564;
t469 = t633 * t498 + t630 * t568;
t468 = t633 * t497 + t630 * t566;
t467 = t630 * t498 - t633 * t568;
t466 = t630 * t497 - t633 * t566;
t465 = t633 * t654 + t705;
t464 = t630 * t654 - t562;
t461 = pkin(1) * t602 + t630 * t536 - t668 * t633;
t460 = -pkin(1) * t603 + t630 * t535 - t669 * t633;
t459 = t633 * t487 + t630 * t569;
t458 = t633 * t486 + t630 * t567;
t457 = t630 * t487 - t633 * t569;
t456 = t630 * t486 - t633 * t567;
t447 = t633 * t477 + t630 * t549;
t446 = t630 * t477 - t633 * t549;
t445 = -t674 * t555 + t656;
t444 = t551 * t674 + t655;
t436 = -pkin(1) * t464 - t659;
t431 = -pkin(2) * t485 - t652;
t430 = -pkin(2) * t484 - t651;
t429 = -t671 * t630 - t633 * t715;
t428 = t633 * t462 - t670 * t630;
t427 = -qJ(2) * t464 - (pkin(2) * t630 - pkin(5) * t633) * t493;
t424 = pkin(1) * t551 - t630 * t715 + t671 * t633;
t423 = pkin(1) * t555 + t630 * t462 + t670 * t633;
t415 = qJ(2) * t465 - (-pkin(2) * t633 - pkin(5) * t630 - pkin(1)) * t493;
t410 = t630 * t413;
t409 = t630 * t575 + t633 * t717;
t408 = -t633 * t575 + t630 * t717;
t407 = pkin(2) * t413 + t707;
t406 = -pkin(5) * t506 - t637 * t425 + t639 * t426;
t405 = -t674 * t507 + t657;
t403 = t639 * t417 + t637 * t418;
t402 = -pkin(5) * t485 - t637 * t420 + t639 * t422;
t401 = -pkin(5) * t484 - t637 * t419 + t639 * t421;
t400 = pkin(5) * t413 + qJ(4) * t684 - t637 * t437;
t398 = -pkin(1) * t457 - t643;
t397 = -pkin(1) * t456 - t644;
t396 = t633 * t404 - t434 * t630;
t395 = t630 * t404 + t434 * t633;
t394 = t633 * t406 - t672 * t630;
t392 = -pkin(1) * t506 + t630 * t406 + t672 * t633;
t391 = -qJ(2) * t457 + t633 * t402 - t630 * t431;
t390 = -qJ(2) * t456 + t633 * t401 - t630 * t430;
t389 = -pkin(1) * t408 - t642;
t388 = -pkin(1) * t485 + qJ(2) * t459 + t630 * t402 + t633 * t431;
t387 = -pkin(1) * t484 + qJ(2) * t458 + t630 * t401 + t633 * t430;
t386 = -pkin(2) * t403 - t661;
t385 = -qJ(2) * t408 + t633 * t400 - t630 * t407;
t384 = pkin(1) * t413 + qJ(2) * t409 + t630 * t400 + t633 * t407;
t383 = -pkin(5) * t403 - t637 * t393 + t639 * t399;
t382 = -pkin(1) * t395 - t645;
t381 = -qJ(2) * t395 + t633 * t383 - t630 * t386;
t380 = -pkin(1) * t403 + qJ(2) * t396 + t630 * t383 + t633 * t386;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t713, -t712, -t653, -qJ(1) * t653, 0, 0, 0, 0, 0, 0, -t631 * t580 - t630 * t693, -t631 * t581 - t633 * t693, t634 * t517, -qJ(1) * (t631 * t666 + t693) - (t631 * pkin(1) - t634 * qJ(2)) * t517, 0, 0, t649, 0, t548, t611, -qJ(1) * t547 + t634 * t474 - t631 * t512, qJ(1) * t648 + t634 * t475 - t631 * t511, t493 * t694 + t631 * t654, t634 * t427 - t631 * t436 - qJ(1) * (t631 * t465 + t493 * t634), 0, 0, t714, 0, t504, t611, -qJ(1) * t503 + t634 * t428 - t631 * t444, t634 * t429 - t631 * t445 - qJ(1) * (t555 * t702 + t716), t413 * t694 + t631 * t717, t634 * t385 - t631 * t389 - qJ(1) * (t631 * t409 + t413 * t634), t634 * t473 + t631 * t500, t634 * t447 + t631 * t476, t634 * t469 + t631 * t496, t634 * t472 + t631 * t499, t634 * t468 + t631 * t495, t631 * t509 + t510 * t694, t634 * t390 - t631 * t397 - qJ(1) * (t631 * t458 - t634 * t484), t634 * t391 - t631 * t398 - qJ(1) * (t631 * t459 - t634 * t485), t634 * t394 - t631 * t405 - qJ(1) * (-t634 * t506 + t507 * t702), t634 * t381 - t631 * t382 - qJ(1) * (t631 * t396 - t634 * t403); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t712, -t713, t665, qJ(1) * t665, 0, 0, 0, 0, 0, 0, t634 * t580 - t630 * t703, t634 * t581 - t631 * t583, t631 * t517, qJ(1) * (t634 * t666 - t703) - (-t634 * pkin(1) - t631 * qJ(2)) * t517, 0, 0, t648, 0, t547, t610, qJ(1) * t548 + t631 * t474 + t634 * t512, -qJ(1) * t649 + t631 * t475 + t634 * t511, t631 * t700 - t634 * t654, t631 * t427 + t634 * t436 + qJ(1) * (t634 * t465 - t493 * t631), 0, 0, -t631 * t698 - t716, 0, t503, t610, qJ(1) * t504 + t631 * t428 + t634 * t444, -qJ(1) * t714 + t631 * t429 + t634 * t445, t631 * t701 - t634 * t717, t631 * t385 + t634 * t389 + qJ(1) * (t634 * t409 - t413 * t631), t631 * t473 - t634 * t500, t631 * t447 - t634 * t476, t631 * t469 - t634 * t496, t631 * t472 - t634 * t499, t631 * t468 - t634 * t495, -t634 * t509 + t631 * t699, t631 * t390 + t634 * t397 + qJ(1) * (t634 * t458 + t631 * t484), t631 * t391 + t634 * t398 + qJ(1) * (t634 * t459 + t631 * t485), t631 * t394 + t634 * t405 + qJ(1) * (t631 * t506 + t507 * t694), t631 * t381 + t634 * t382 + qJ(1) * (t634 * t396 + t631 * t403); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t606, t607, 0, 0, 0, 0, 0, 0, 0, 0, t583, -t582, t666, t505, 0, 0, t586, 0, -t587, -t678, t460, t461, t490, t415, 0, 0, -t545, 0, -t546, -t678, t423, t424, t410, t384, t471, t446, t467, t470, t466, t508, t387, t388, t392, t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t682, -t606, 0, 0, 0, 0, 0, 0, 0, -t582, -t583, t517, qJ(2) * t517, 0, 0, t695, 0, -t696, t620, t474, t475, t700, t427, 0, 0, -t698, 0, -t697, t620, t428, t429, t701, t385, t473, t447, t469, t472, t468, t699, t390, t391, t394, t381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t682, 0, -t607, 0, 0, 0, 0, 0, 0, 0, t580, t581, 0, pkin(1) * t517, 0, 0, -t602, 0, -t603, 0, t512, t511, -t654, t436, 0, 0, -t551, 0, t555, 0, t444, t445, -t717, t389, -t500, -t476, -t496, -t499, -t495, -t509, t397, t398, t405, t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t606, t607, 0, 0, 0, 0, 0, 0, 0, 0, t583, -t582, t666, t505, 0, 0, t586, 0, -t587, -t678, t460, t461, t490, t415, 0, 0, -t545, 0, -t546, -t678, t423, t424, t410, t384, t471, t446, t467, t470, t466, t508, t387, t388, t392, t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t598, t580, 0, 0, 0, t603, 0, -t602, 0, t535, t536, t493, pkin(5) * t493, 0, 0, -t555, 0, -t551, 0, t462, -t715, t413, t400, t502, t477, t498, t501, t497, t510, t401, t402, t406, t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t598, 0, t581, 0, 0, 0, 0, 0, 0, -qJDD(3), t513, t514, 0, pkin(2) * t493, 0, 0, 0, 0, 0, -qJDD(3), t449, t448, 0, t407, -t565, -t549, -t568, t564, -t566, 0, t430, t431, t416, t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t580, -t581, 0, 0, 0, 0, t602, 0, t603, 0, -t536, t535, t654, t659, 0, 0, t551, 0, -t555, 0, t715, t462, t717, t642, t500, t476, t496, t499, t495, t509, t644, t643, pkin(5) * t507 - t657, t645; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), 0, -t641, 0, 0, t580, t533, 0, 0, 0, t600, 0, -t599, 0, t658, t531, t440, qJ(4) * t440, t544, t520, t540, t543, t539, t577, t421, t422, t426, t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t641, 0, qJDD(3), 0, -t580, 0, t534, 0, 0, 0, t599, 0, t600, 0, -t531, t658, t667, t437, t542, t519, t538, t541, t537, t576, t419, t420, t425, t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t533, -t534, 0, 0, 0, 0, 0, 0, 0, qJDD(3), t650, t660, 0, -t707, t565, t549, t568, -t564, t566, 0, t651, t652, t647, t661; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), 0, -t641, 0, 0, t575, t488, 0, t579, t550, t572, t578, t570, t591, t452, t453, t434, pkin(6) * t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t641, 0, qJDD(3), 0, -t575, 0, t489, 0, t616, -t605, -t677, -t616, -t622, -qJDD(5), t442, t443, 0, pkin(4) * t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t488, -t489, 0, 0, t565, t549, t568, -t564, t566, 0, t675, t676, t662, t681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t594, t596, t608, -t619, t614, t619, 0, t481, t454, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t673, t593, t612, t595, t609, -t673, -t481, 0, t455, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t616, t605, t677, t616, t622, qJDD(5), -t454, -t455, 0, 0;];
m_new_reg = t1;
