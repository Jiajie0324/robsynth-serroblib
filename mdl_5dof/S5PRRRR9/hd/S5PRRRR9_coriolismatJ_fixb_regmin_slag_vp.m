% Calculate minimal parameter regressor of coriolis matrix for
% S5PRRRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:22
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRRRR9_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR9_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR9_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5PRRRR9_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:21:14
% EndTime: 2019-12-05 17:21:30
% DurationCPUTime: 6.59s
% Computational Cost: add. (2991->371), mult. (7960->598), div. (0->0), fcn. (8411->10), ass. (0->321)
t280 = cos(qJ(3));
t461 = t280 * pkin(8);
t277 = sin(qJ(3));
t462 = t277 * pkin(3);
t243 = -t461 + t462;
t279 = cos(qJ(4));
t230 = t279 * t243;
t276 = sin(qJ(4));
t433 = t276 * t277;
t260 = pkin(7) * t433;
t426 = t279 * t280;
t465 = pkin(4) * t277;
t144 = -pkin(9) * t426 + t230 + t260 + t465;
t467 = cos(qJ(5));
t386 = t467 * t144;
t229 = t276 * t243;
t431 = t277 * t279;
t394 = pkin(7) * t431;
t432 = t276 * t280;
t159 = -pkin(9) * t432 + t229 - t394;
t275 = sin(qJ(5));
t439 = t275 * t159;
t418 = t386 / 0.2e1 - t439 / 0.2e1;
t474 = pkin(8) + pkin(9);
t241 = t474 * t276;
t242 = t474 * t279;
t170 = -t275 * t241 + t467 * t242;
t466 = pkin(4) * t276;
t387 = pkin(7) + t466;
t231 = t387 * t277;
t269 = -pkin(4) * t279 - pkin(3);
t469 = -t280 / 0.2e1;
t379 = t467 * t279;
t201 = t275 * t433 - t277 * t379;
t496 = -t201 / 0.2e1;
t380 = t467 * t276;
t435 = t275 * t279;
t325 = t380 + t435;
t499 = -t325 / 0.2e1;
t493 = t170 * t469 + t231 * t499 - t269 * t496;
t24 = t418 - t493;
t21 = t418 + t493;
t468 = t280 / 0.2e1;
t202 = t325 * t277;
t326 = -t467 * t241 - t275 * t242;
t436 = t275 * t276;
t324 = t379 - t436;
t498 = t324 / 0.2e1;
t497 = t231 * t498 - t269 * t202 / 0.2e1 + t326 * t468;
t398 = qJD(4) + qJD(5);
t383 = t467 * t159;
t354 = -t383 / 0.2e1;
t442 = t275 * t144;
t316 = -t442 / 0.2e1 + t354;
t22 = t316 - t497;
t274 = sin(pkin(5));
t278 = sin(qJ(2));
t444 = t274 * t278;
t458 = cos(pkin(5));
t308 = t277 * t444 - t458 * t280;
t495 = -t308 / 0.2e1;
t492 = t398 * t170;
t491 = t398 * t326;
t281 = cos(qJ(2));
t425 = t280 * t281;
t429 = t278 * t279;
t188 = (-t276 * t425 + t429) * t274;
t382 = t467 * t188;
t430 = t278 * t276;
t189 = (t279 * t425 + t430) * t274;
t437 = t275 * t189;
t314 = -t437 / 0.2e1 + t382 / 0.2e1;
t443 = t274 * t281;
t388 = t279 * t443;
t209 = t458 * t277 + t280 * t444;
t450 = t209 * t276;
t153 = t388 + t450;
t389 = t276 * t443;
t449 = t209 * t279;
t154 = -t389 + t449;
t327 = -t275 * t153 + t467 * t154;
t480 = t201 * t495 + t327 * t468;
t288 = t314 + t480;
t298 = t308 * t467;
t292 = t298 / 0.2e1;
t303 = t308 * t279;
t296 = t303 / 0.2e1;
t286 = t275 * t296 + t276 * t292;
t299 = t308 * t325;
t65 = t299 / 0.2e1 + t286;
t490 = qJD(2) * t288 + t65 * qJD(3) - t398 * t327;
t304 = t308 * t276;
t295 = t304 / 0.2e1;
t489 = t308 / 0.2e1;
t411 = qJD(3) * t269;
t297 = -t304 / 0.2e1;
t287 = t275 * t297 + t279 * t292;
t300 = t308 * t324;
t63 = -t300 / 0.2e1 + t287;
t420 = t63 * qJD(1);
t487 = qJD(2) * t22 - t324 * t411 + t420;
t62 = -t299 / 0.2e1 + t286;
t421 = t62 * qJD(1);
t486 = qJD(2) * t21 - t325 * t411 + t421;
t103 = t269 * t324 + t325 * t466;
t428 = t279 * t325;
t434 = t276 * t201;
t7 = (t434 / 0.2e1 + (-t275 / 0.2e1 - t428 / 0.2e1) * t277) * pkin(4) + t22;
t485 = t7 * qJD(2) - t103 * qJD(3) + t420;
t102 = t269 * t325 - t324 * t466;
t470 = t279 / 0.2e1;
t366 = t324 * t470;
t473 = t202 / 0.2e1;
t367 = t276 * t473;
t9 = (t367 + (-t366 - t467 / 0.2e1) * t277) * pkin(4) - t21;
t484 = -qJD(2) * t9 - qJD(3) * t102 + t421;
t381 = t467 * t189;
t438 = t275 * t188;
t315 = -t438 / 0.2e1 - t381 / 0.2e1;
t43 = t467 * t153 + t275 * t154;
t481 = t202 * t495 + t43 * t469;
t284 = t315 - t481;
t483 = qJD(1) * t284;
t285 = t314 - t480;
t482 = qJD(1) * t285;
t479 = qJD(2) * t284 + t63 * qJD(3);
t478 = qJD(2) * t285 + t62 * qJD(3);
t270 = t276 ^ 2;
t272 = t279 ^ 2;
t254 = t272 - t270;
t402 = t277 * qJD(2);
t378 = t279 * t402;
t476 = qJD(3) * t254 - 0.2e1 * t276 * t378;
t289 = t315 + t481;
t64 = t300 / 0.2e1 + t287;
t475 = qJD(2) * t289 + t64 * qJD(3) + t398 * t43;
t472 = -t209 / 0.2e1;
t471 = -t277 / 0.2e1;
t464 = pkin(7) * t276;
t463 = t275 * pkin(4);
t47 = t201 * t325 - t202 * t324;
t460 = t398 * t47;
t81 = t324 * t496 - t325 * t473;
t459 = t398 * t81;
t350 = -pkin(3) * t280 - pkin(8) * t277;
t236 = -pkin(2) + t350;
t218 = t279 * t236;
t353 = -pkin(9) * t431 + t218;
t396 = pkin(7) * t432;
t155 = t353 - t396;
t139 = (-pkin(4) - t464) * t280 + t353;
t352 = pkin(4) * t468 - t139 / 0.2e1;
t27 = (t155 / 0.2e1 + t352) * t275;
t457 = qJD(2) * t27;
t204 = t325 * t280;
t91 = t202 * t277 - t204 * t280;
t456 = qJD(2) * t91;
t205 = t324 * t280;
t92 = t201 * t277 + t205 * t280;
t455 = qJD(2) * t92;
t452 = t201 * t231;
t451 = t202 * t231;
t441 = t275 * t155;
t395 = pkin(7) * t426;
t193 = t236 * t276 + t395;
t156 = -pkin(9) * t433 + t193;
t440 = t275 * t156;
t271 = t277 ^ 2;
t427 = t279 * t271;
t120 = t467 * t139;
t359 = t467 * pkin(4) / 0.2e1;
t319 = -t120 / 0.2e1 + t280 * t359;
t385 = t467 * t155;
t29 = t385 / 0.2e1 + t319;
t424 = t29 * qJD(2);
t66 = t201 * t204 - t202 * t205;
t419 = t66 * qJD(2);
t273 = t280 ^ 2;
t255 = t273 - t271;
t416 = qJD(2) * t201;
t227 = t255 * t276;
t415 = qJD(2) * t227;
t228 = t273 * t279 - t427;
t414 = qJD(2) * t228;
t413 = qJD(2) * t274;
t412 = qJD(3) * t325;
t410 = qJD(3) * t276;
t409 = qJD(3) * t279;
t408 = qJD(4) * t276;
t407 = qJD(4) * t279;
t406 = qJD(4) * t280;
t405 = qJD(5) * t269;
t313 = -t435 / 0.2e1 - t380 / 0.2e1;
t106 = (t499 + t313) * t280;
t100 = t106 * qJD(2);
t312 = t379 / 0.2e1 - t436 / 0.2e1;
t107 = (t498 + t312) * t280;
t101 = t107 * qJD(2);
t404 = t209 * qJD(3);
t403 = t255 * qJD(2);
t401 = t277 * qJD(3);
t400 = t280 * qJD(2);
t399 = t280 * qJD(3);
t397 = pkin(4) * t431;
t393 = pkin(2) * t402;
t392 = pkin(2) * t400;
t391 = -t465 / 0.2e1;
t390 = t277 * t443;
t384 = t467 * t156;
t377 = t276 * t409;
t376 = t279 * t401;
t375 = t276 * t406;
t374 = t279 * t406;
t373 = t281 * t413;
t372 = t276 * t407;
t371 = t277 * t399;
t370 = t277 * t400;
t369 = t209 * t277 / 0.2e1;
t368 = -t443 / 0.2e1;
t365 = -t425 / 0.2e1;
t364 = t467 * qJD(4);
t363 = t467 * qJD(5);
t362 = t398 * t202;
t361 = t398 * t325;
t360 = -qJD(4) + t400;
t358 = t276 * t376;
t356 = t390 / 0.2e1;
t355 = t279 * t368;
t351 = t400 - qJD(4) / 0.2e1;
t282 = -t202 * t472 + t43 * t471 + t204 * t489 + (t275 * t303 + t276 * t298) * t469;
t346 = t324 * t356;
t1 = -t346 - t282;
t232 = t387 * t280;
t75 = -t120 + t440;
t5 = t232 * t202 + t231 * t204 - (t386 - t439) * t280 - t75 * t277;
t349 = -t1 * qJD(1) + t5 * qJD(2);
t283 = t201 * t472 + t327 * t471 + t205 * t489 + (t275 * t304 - t279 * t298) * t468;
t345 = t368 * t202;
t2 = -t345 - t283;
t76 = t275 * t139 + t384;
t6 = -t232 * t201 + t231 * t205 + (t383 + t442) * t280 - t76 * t277;
t348 = -t2 * qJD(1) + t6 * qJD(2);
t347 = -qJD(5) + t360;
t82 = -t384 - t441;
t31 = t202 * t397 - t280 * t82 - t452;
t343 = -qJD(2) * t31 + t482;
t42 = t280 * t76 - t452;
t342 = -qJD(2) * t42 + t482;
t41 = -t280 * t75 - t451;
t341 = -qJD(2) * t41 + t483;
t83 = t385 - t440;
t32 = -t201 * t397 + t280 * t83 - t451;
t340 = -qJD(2) * t32 + t483;
t331 = t276 * t368 - t154 / 0.2e1;
t33 = (-t449 / 0.2e1 - t331) * t277;
t87 = t229 * t280 + (-t193 + t395) * t277;
t339 = -t33 * qJD(1) + t87 * qJD(2);
t330 = t355 + t153 / 0.2e1;
t34 = (-t450 / 0.2e1 + t330) * t277;
t192 = -t218 + t396;
t86 = t192 * t277 + (-t260 + t230) * t280;
t338 = -t34 * qJD(1) - t86 * qJD(2);
t88 = -t201 ^ 2 + t202 ^ 2;
t11 = qJD(2) * t88 + qJD(3) * t47;
t97 = t324 ^ 2 - t325 ^ 2;
t25 = qJD(2) * t47 + qJD(3) * t97;
t140 = -t192 * t280 - t271 * t464;
t294 = t308 * t471;
t291 = t444 / 0.2e1 + t294;
t51 = -t276 * t291 + t280 * t330;
t335 = qJD(1) * t51 - qJD(2) * t140;
t141 = -pkin(7) * t427 - t193 * t280;
t50 = t279 * t291 + t280 * t331;
t334 = qJD(1) * t50 + qJD(2) * t141;
t333 = t360 * t277;
t332 = t461 / 0.2e1 - t462 / 0.2e1;
t318 = t332 * t276;
t151 = t229 / 0.2e1 - t318;
t329 = pkin(3) * t409 - qJD(2) * t151;
t317 = t332 * t279;
t152 = -t230 / 0.2e1 + t317;
t328 = pkin(3) * t410 - qJD(2) * t152;
t38 = -qJD(3) * t81 - t202 * t416;
t48 = qJD(2) * t81 + t324 * t412;
t321 = t279 * t333;
t210 = (t270 / 0.2e1 - t272 / 0.2e1) * t277;
t320 = -qJD(2) * t210 + t377;
t311 = qJD(2) * t276 * t427 + qJD(3) * t210;
t226 = t254 * t271;
t310 = qJD(2) * t226 + 0.2e1 * t358;
t293 = t308 * t470;
t264 = -t402 / 0.2e1;
t263 = t402 / 0.2e1;
t262 = t401 / 0.2e1;
t217 = t351 * t277;
t208 = t210 * qJD(4);
t200 = (-qJD(5) / 0.2e1 + t351) * t277;
t117 = t260 + t230 / 0.2e1 + t317;
t116 = t394 - t229 / 0.2e1 - t318;
t109 = t313 * t280 - t325 * t469;
t108 = t312 * t280 - t324 * t468;
t96 = t293 + t296;
t94 = 0.2e1 * t295;
t85 = qJD(3) * t107 - t202 * t400;
t84 = qJD(3) * t106 + t201 * t400;
t74 = -t361 - t100;
t73 = t324 * t398 - t101;
t53 = t154 * t468 + t277 * t293 + (t276 * t365 + t429 / 0.2e1) * t274;
t52 = t153 * t469 + t276 * t294 + (t279 * t365 - t430 / 0.2e1) * t274;
t40 = qJD(3) * t108 + t347 * t202;
t39 = qJD(3) * t109 - t347 * t201;
t36 = t154 * t471 + t276 * t356 + t279 * t369 + t280 * t293 - t303 * t468;
t35 = t153 * t471 + t276 * t369 + t277 * t355 + (t295 + t297) * t280;
t30 = t440 - t385 / 0.2e1 + t319;
t28 = -t384 - t441 / 0.2e1 + t352 * t275;
t23 = t316 + t497;
t10 = -pkin(4) * t434 / 0.2e1 - t391 * t428 + t354 + (t391 - t144 / 0.2e1) * t275 + t497;
t8 = t277 * t359 + (-t277 * t366 + t367) * pkin(4) + t24;
t4 = -t345 + t283;
t3 = -t346 + t282;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t278 * t413, -t373, 0, 0, 0, 0, 0, (-t278 * t400 - t281 * t401) * t274, (t278 * t402 - t281 * t399) * t274, 0, 0, 0, 0, 0, (-t188 * t280 + t271 * t389) * qJD(2) + t35 * qJD(3) + t53 * qJD(4), (t189 * t280 + t271 * t388) * qJD(2) + t36 * qJD(3) + t52 * qJD(4), 0, 0, 0, 0, 0, (t202 * t390 - (t382 - t437) * t280) * qJD(2) + t3 * qJD(3) + t398 * t288, (-t201 * t390 + (t381 + t438) * t280) * qJD(2) + t4 * qJD(3) + t398 * t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t277 * t373 - t404, qJD(3) * t308 - t280 * t373, 0, 0, 0, 0, 0, qJD(2) * t35 + qJD(4) * t94 - t279 * t404, qJD(2) * t36 + qJD(4) * t96 + t276 * t404, 0, 0, 0, 0, 0, qJD(2) * t3 - t324 * t404 + t398 * t65, qJD(2) * t4 + t325 * t404 + t398 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t53 + qJD(3) * t94 - qJD(4) * t154, qJD(2) * t52 + qJD(3) * t96 + qJD(4) * t153, 0, 0, 0, 0, 0, t490, t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t34 - qJD(4) * t50, -qJD(3) * t33 - qJD(4) * t51, 0, 0, 0, 0, 0, -qJD(3) * t1 - t285 * t398, -qJD(3) * t2 - t284 * t398; 0, 0, 0, 0, t371, t255 * qJD(3), 0, 0, 0, -pkin(2) * t401, -pkin(2) * t399, -t271 * t372 + t272 * t371, -qJD(4) * t226 - 0.2e1 * t280 * t358, -qJD(3) * t228 + t277 * t375, qJD(3) * t227 + t277 * t374, -t371, -qJD(3) * t86 - qJD(4) * t141, qJD(3) * t87 + qJD(4) * t140, (-qJD(3) * t205 + t362) * t201, qJD(3) * t66 + t398 * t88, -qJD(3) * t92 + t280 * t362, -t201 * t280 * t398 - qJD(3) * t91, -t371, qJD(3) * t5 + qJD(4) * t31 + qJD(5) * t42, qJD(3) * t6 + qJD(4) * t32 + qJD(5) * t41; 0, 0, 0, 0, t370, t403, t399, -t401, 0, -pkin(7) * t399 - t393, pkin(7) * t401 - t392, -t208 + (t272 * t402 + t377) * t280, -0.2e1 * t277 * t372 + t476 * t280, t276 * t401 - t414, t376 + t415, -t217, (t276 * t350 - t395) * qJD(3) + t117 * qJD(4) + t338, (t279 * t350 + t396) * qJD(3) + t116 * qJD(4) + t339, (t412 - t416) * t205 + t459, t419 + (-t204 * t325 + t205 * t324) * qJD(3) + t460, t108 * t398 + t325 * t401 - t455, t109 * t398 + t324 * t401 - t456, -t200, (t204 * t269 - t232 * t324 + t277 * t326) * qJD(3) + t8 * qJD(4) + t24 * qJD(5) + t349, (-t170 * t277 + t205 * t269 + t232 * t325) * qJD(3) + t10 * qJD(4) + t23 * qJD(5) + t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t311, -t310, t276 * t333, t321, t262, qJD(3) * t117 - qJD(4) * t193 - t334, qJD(3) * t116 + qJD(4) * t192 - t335, -t38, t11, t40, t39, t262, qJD(3) * t8 + qJD(4) * t82 + qJD(5) * t28 - t343, qJD(3) * t10 - qJD(4) * t83 + qJD(5) * t30 - t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t38, t11, t40, t39, t262, qJD(3) * t24 + qJD(4) * t28 - qJD(5) * t76 - t342, qJD(3) * t23 + qJD(4) * t30 + qJD(5) * t75 - t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t34, qJD(2) * t33, 0, 0, 0, 0, 0, qJD(2) * t1 - t398 * t62, qJD(2) * t2 - t398 * t63; 0, 0, 0, 0, -t370, -t403, 0, 0, 0, t393, t392, -t272 * t370 - t208, 0.2e1 * t276 * t321, -t374 + t414, t375 - t415, t217, qJD(4) * t152 - t338, qJD(4) * t151 - t339, t205 * t416 + t459, -t419 + t460, -t107 * t398 + t455, -t106 * t398 + t456, t200, qJD(4) * t9 - qJD(5) * t21 - t349, -qJD(4) * t7 - qJD(5) * t22 - t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, t254 * qJD(4), 0, 0, 0, -pkin(3) * t408, -pkin(3) * t407, t324 * t361, t398 * t97, 0, 0, 0, qJD(4) * t102 + t325 * t405, qJD(4) * t103 + t324 * t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, t476, -t360 * t279, t360 * t276, t264, -pkin(8) * t407 - t328, pkin(8) * t408 - t329, t48, t25, t73, t74, t264, -t484 - t492, -t485 - t491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, t25, t73, t74, t264, -t486 - t492, -t487 - t491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t50, qJD(2) * t51, 0, 0, 0, 0, 0, t478, t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, t310, (-t276 * t402 + t409) * t280, (-t378 - t410) * t280, t262, -qJD(3) * t152 + t334, -qJD(3) * t151 + t335, t38, -t11, t85, t84, t262, -qJD(3) * t9 + qJD(5) * t27 + t343, qJD(3) * t7 + qJD(5) * t29 + t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t320, -t476, t279 * t400, -t276 * t400, t263, t328, t329, -t48, -t25, t101, t100, t263, t484, t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t463, -pkin(4) * t363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t398 * t463 + t457, t424 + (-t364 - t363) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t478, t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t38, -t11, t85, t84, t262, qJD(3) * t21 - qJD(4) * t27 + t342, qJD(3) * t22 - qJD(4) * t29 + t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, -t25, t101, t100, t263, t486, t487; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t463 - t457, pkin(4) * t364 - t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t12;
