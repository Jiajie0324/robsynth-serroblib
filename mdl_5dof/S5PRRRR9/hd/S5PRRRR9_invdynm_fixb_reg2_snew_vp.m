% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PRRRR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d2,d3,d4,d5,theta1]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:22
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PRRRR9_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR9_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR9_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRR9_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRR9_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5PRRRR9_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:21:45
% EndTime: 2019-12-05 17:22:05
% DurationCPUTime: 20.40s
% Computational Cost: add. (136531->771), mult. (267072->1162), div. (0->0), fcn. (194620->12), ass. (0->540)
t1245 = sin(qJ(5));
t1246 = sin(qJ(4));
t1250 = cos(qJ(4));
t1247 = sin(qJ(3));
t1358 = qJD(2) * t1247;
t1200 = -t1250 * qJD(3) + t1246 * t1358;
t1201 = t1246 * qJD(3) + t1250 * t1358;
t1249 = cos(qJ(5));
t1156 = t1249 * t1200 + t1245 * t1201;
t1158 = -t1245 * t1200 + t1249 * t1201;
t1112 = t1158 * t1156;
t1228 = qJD(3) * t1358;
t1251 = cos(qJ(3));
t1330 = t1251 * qJDD(2);
t1205 = -t1228 + t1330;
t1197 = -qJDD(4) + t1205;
t1192 = -qJDD(5) + t1197;
t1373 = -t1112 - t1192;
t1380 = t1245 * t1373;
t1379 = t1249 * t1373;
t1242 = cos(pkin(5));
t1240 = sin(pkin(5));
t1362 = g(3) - qJDD(1);
t1323 = t1240 * t1362;
t1239 = sin(pkin(10));
t1241 = cos(pkin(10));
t1324 = t1239 * g(1) - t1241 * g(2);
t1378 = t1242 * t1324 - t1323;
t1212 = t1241 * g(1) + t1239 * g(2);
t1248 = sin(qJ(2));
t1252 = cos(qJ(2));
t1140 = -t1248 * t1212 - t1378 * t1252;
t1141 = -t1252 * t1212 + t1378 * t1248;
t1077 = t1248 * t1140 + t1252 * t1141;
t1065 = t1077 * t1240;
t1377 = t1239 * t1362;
t1376 = t1241 * t1362;
t1356 = t1201 * t1200;
t1261 = -t1197 - t1356;
t1375 = t1246 * t1261;
t1194 = t1240 * t1324;
t1313 = t1242 * t1362 + t1194;
t1278 = t1248 * t1313;
t1374 = t1250 * t1261;
t1277 = t1252 * t1313;
t1338 = t1251 * qJD(2);
t1229 = qJD(3) * t1338;
t1332 = t1247 * qJDD(2);
t1204 = t1229 + t1332;
t1282 = -t1246 * qJDD(3) - t1250 * t1204;
t1148 = -t1200 * qJD(4) - t1282;
t1283 = t1250 * qJDD(3) - t1246 * t1204;
t1259 = t1201 * qJD(4) - t1283;
t1050 = -t1156 * qJD(5) + t1249 * t1148 - t1245 * t1259;
t1225 = -qJD(4) + t1338;
t1217 = -qJD(5) + t1225;
t1134 = t1156 * t1217;
t1372 = t1134 + t1050;
t1185 = t1200 * t1225;
t1121 = t1148 - t1185;
t1322 = t1245 * t1148 + t1249 * t1259;
t1018 = (qJD(5) + t1217) * t1158 + t1322;
t1371 = -t1241 * t1212 - t1239 * t1324;
t1370 = -t1239 * t1212 + t1241 * t1324;
t1369 = qJD(3) ^ 2;
t1154 = t1156 ^ 2;
t1155 = t1158 ^ 2;
t1368 = t1200 ^ 2;
t1196 = t1201 ^ 2;
t1216 = t1217 ^ 2;
t1223 = t1225 ^ 2;
t1253 = qJD(2) ^ 2;
t1129 = -t1253 * pkin(2) + qJDD(2) * pkin(7) + t1141;
t1094 = t1251 * t1129 - t1247 * t1313;
t1364 = pkin(3) * t1251;
t1318 = -pkin(8) * t1247 - t1364;
t1202 = t1318 * qJD(2);
t1060 = -t1369 * pkin(3) + qJDD(3) * pkin(8) + t1202 * t1338 + t1094;
t1128 = -qJDD(2) * pkin(2) - t1253 * pkin(7) + t1140;
t1316 = -t1205 + t1228;
t1317 = t1204 + t1229;
t1075 = pkin(3) * t1316 - pkin(8) * t1317 + t1128;
t999 = t1246 * t1060 - t1250 * t1075;
t969 = t1261 * pkin(4) - t1121 * pkin(9) - t999;
t1000 = t1250 * t1060 + t1246 * t1075;
t1178 = -t1225 * pkin(4) - t1201 * pkin(9);
t974 = -t1368 * pkin(4) - pkin(9) * t1259 + t1225 * t1178 + t1000;
t909 = t1245 * t974 - t1249 * t969;
t910 = t1245 * t969 + t1249 * t974;
t874 = t1245 * t910 - t1249 * t909;
t1367 = pkin(4) * t874;
t1021 = -t1134 + t1050;
t963 = -t1018 * t1245 - t1249 * t1021;
t1366 = pkin(4) * t963;
t1365 = pkin(3) * t1247;
t1363 = pkin(6) * t1242;
t1361 = t1246 * t874;
t1360 = t1250 * t874;
t1359 = qJD(2) * qJD(3);
t1357 = t1158 * t1217;
t1355 = t1217 * t1245;
t1354 = t1217 * t1249;
t1353 = t1225 * t1246;
t1352 = t1225 * t1250;
t1235 = t1247 ^ 2;
t1351 = t1235 * t1253;
t1177 = t1251 * t1313;
t1059 = t1177 - qJDD(3) * pkin(3) - t1369 * pkin(8) + (qJD(2) * t1202 + t1129) * t1247;
t1003 = pkin(4) * t1259 - t1368 * pkin(9) + t1201 * t1178 + t1059;
t1349 = t1245 * t1003;
t1078 = -t1112 + t1192;
t1348 = t1245 * t1078;
t1347 = t1246 * t1059;
t1137 = t1197 - t1356;
t1346 = t1246 * t1137;
t1345 = t1247 * t1128;
t1224 = t1247 * t1253 * t1251;
t1213 = qJDD(3) + t1224;
t1344 = t1247 * t1213;
t1214 = qJDD(3) - t1224;
t1343 = t1247 * t1214;
t1342 = t1249 * t1003;
t1341 = t1249 * t1078;
t1340 = t1250 * t1059;
t1339 = t1250 * t1137;
t1337 = t1251 * t1128;
t1336 = t1251 * t1214;
t1236 = t1251 ^ 2;
t1334 = t1235 + t1236;
t1333 = t1240 * qJDD(2);
t1331 = t1248 * qJDD(2);
t1329 = t1252 * qJDD(2);
t1328 = t1247 * t1112;
t1327 = t1247 * t1356;
t1326 = t1251 * t1112;
t1325 = t1251 * t1356;
t875 = t1245 * t909 + t1249 * t910;
t942 = t1250 * t1000 + t1246 * t999;
t1093 = t1247 * t1129 + t1177;
t1025 = t1247 * t1093 + t1251 * t1094;
t1321 = t1252 * t1224;
t1320 = t1248 * t1224;
t1319 = -pkin(3) * t1059 + pkin(8) * t942;
t1024 = t1251 * t1093 - t1247 * t1094;
t1207 = t1334 * qJDD(2);
t1233 = t1236 * t1253;
t1210 = t1233 + t1351;
t1162 = t1252 * t1207 - t1248 * t1210;
t1314 = pkin(6) * t1162 + t1024 * t1248;
t841 = t1250 * t875 - t1361;
t836 = t1247 * t1003 + t1251 * t841;
t840 = t1246 * t875 + t1360;
t1312 = t1248 * t836 - t1252 * t840;
t1055 = -t1154 - t1155;
t965 = -t1018 * t1249 + t1245 * t1021;
t902 = -t1246 * t963 + t1250 * t965;
t889 = t1247 * t1055 + t1251 * t902;
t900 = t1246 * t965 + t1250 * t963;
t1311 = t1248 * t889 - t1252 * t900;
t1107 = t1155 - t1154;
t1017 = (qJD(5) - t1217) * t1158 + t1322;
t964 = -t1245 * t1017 + t1249 * t1372;
t966 = -t1249 * t1017 - t1245 * t1372;
t903 = -t1246 * t964 + t1250 * t966;
t895 = t1247 * t1107 + t1251 * t903;
t901 = t1246 * t966 + t1250 * t964;
t1310 = t1248 * t895 - t1252 * t901;
t1088 = -t1216 - t1154;
t1011 = t1245 * t1088 + t1379;
t1012 = t1249 * t1088 - t1380;
t957 = -t1246 * t1011 + t1250 * t1012;
t914 = t1247 * t1017 + t1251 * t957;
t956 = t1250 * t1011 + t1246 * t1012;
t1309 = t1248 * t914 - t1252 * t956;
t916 = t1247 * t1059 + t1251 * t942;
t941 = t1246 * t1000 - t1250 * t999;
t1308 = t1248 * t916 - t1252 * t941;
t1123 = -t1155 - t1216;
t1030 = t1249 * t1123 + t1348;
t1031 = -t1245 * t1123 + t1341;
t971 = -t1246 * t1030 + t1250 * t1031;
t921 = t1247 * t1372 + t1251 * t971;
t970 = t1250 * t1030 + t1246 * t1031;
t1307 = t1248 * t921 - t1252 * t970;
t1133 = -t1155 + t1216;
t1034 = t1249 * t1133 + t1380;
t1036 = -t1245 * t1133 + t1379;
t977 = -t1246 * t1034 + t1250 * t1036;
t926 = t1247 * t1021 + t1251 * t977;
t975 = t1250 * t1034 + t1246 * t1036;
t1306 = t1248 * t926 - t1252 * t975;
t1132 = t1154 - t1216;
t1035 = t1245 * t1132 - t1341;
t1037 = t1249 * t1132 + t1348;
t978 = -t1246 * t1035 + t1250 * t1037;
t927 = -t1247 * t1018 + t1251 * t978;
t976 = t1250 * t1035 + t1246 * t1037;
t1305 = t1248 * t927 - t1252 * t976;
t1049 = -t1158 * qJD(5) - t1322;
t1013 = t1249 * t1049 - t1156 * t1355;
t1014 = -t1245 * t1049 - t1156 * t1354;
t960 = -t1246 * t1013 + t1250 * t1014;
t936 = t1251 * t960 - t1328;
t958 = t1250 * t1013 + t1246 * t1014;
t1304 = t1248 * t936 - t1252 * t958;
t1015 = t1245 * t1050 - t1158 * t1354;
t1016 = t1249 * t1050 + t1158 * t1355;
t961 = -t1246 * t1015 + t1250 * t1016;
t937 = t1251 * t961 + t1328;
t959 = t1250 * t1015 + t1246 * t1016;
t1303 = t1248 * t937 - t1252 * t959;
t1067 = (t1156 * t1245 + t1158 * t1249) * t1217;
t1068 = (t1156 * t1249 - t1158 * t1245) * t1217;
t1001 = t1250 * t1067 + t1246 * t1068;
t1002 = -t1246 * t1067 + t1250 * t1068;
t991 = t1251 * t1002 - t1247 * t1192;
t1302 = -t1001 * t1252 + t1248 * t991;
t1119 = (-qJD(4) - t1225) * t1201 + t1283;
t1046 = t1250 * t1119 + t1246 * t1121;
t1136 = t1196 + t1368;
t1008 = t1251 * t1046 - t1247 * t1136;
t1044 = t1246 * t1119 - t1250 * t1121;
t1301 = t1008 * t1248 - t1044 * t1252;
t1300 = t1025 * t1248 - t1128 * t1252;
t1184 = t1201 * t1225;
t1118 = t1184 - t1259;
t1120 = t1148 + t1185;
t1045 = t1250 * t1118 - t1246 * t1120;
t1165 = t1196 - t1368;
t1027 = t1251 * t1045 + t1247 * t1165;
t1043 = t1246 * t1118 + t1250 * t1120;
t1299 = t1027 * t1248 - t1043 * t1252;
t1151 = -t1223 - t1368;
t1082 = t1250 * t1151 - t1375;
t1029 = t1251 * t1082 - t1247 * t1118;
t1081 = t1246 * t1151 + t1374;
t1298 = t1029 * t1248 - t1081 * t1252;
t1161 = -t1196 - t1223;
t1092 = -t1246 * t1161 + t1339;
t1122 = (qJD(4) - t1225) * t1200 + t1282;
t1033 = t1251 * t1092 - t1247 * t1122;
t1091 = t1250 * t1161 + t1346;
t1297 = t1033 * t1248 - t1091 * t1252;
t1183 = -t1196 + t1223;
t1105 = -t1246 * t1183 + t1374;
t1040 = t1251 * t1105 + t1247 * t1121;
t1103 = t1250 * t1183 + t1375;
t1296 = t1040 * t1248 - t1103 * t1252;
t1182 = -t1223 + t1368;
t1106 = t1250 * t1182 + t1346;
t1117 = t1184 + t1259;
t1041 = t1251 * t1106 - t1247 * t1117;
t1104 = t1246 * t1182 - t1339;
t1295 = t1041 * t1248 - t1104 * t1252;
t1114 = -t1200 * t1352 + t1246 * t1259;
t1063 = t1251 * t1114 - t1327;
t1113 = t1200 * t1353 + t1250 * t1259;
t1294 = t1063 * t1248 + t1113 * t1252;
t1116 = t1250 * t1148 + t1201 * t1353;
t1064 = t1251 * t1116 + t1327;
t1115 = t1246 * t1148 - t1201 * t1352;
t1293 = t1064 * t1248 - t1115 * t1252;
t1127 = (t1200 * t1250 - t1201 * t1246) * t1225;
t1109 = t1251 * t1127 - t1247 * t1197;
t1126 = (t1200 * t1246 + t1201 * t1250) * t1225;
t1292 = t1109 * t1248 - t1126 * t1252;
t1076 = t1252 * t1140 - t1248 * t1141;
t1203 = 0.2e1 * t1229 + t1332;
t1206 = -0.2e1 * t1228 + t1330;
t1160 = -t1247 * t1203 + t1251 * t1206;
t1211 = -t1233 + t1351;
t1291 = t1160 * t1248 - t1211 * t1252;
t1222 = -t1233 - t1369;
t1173 = t1251 * t1222 - t1344;
t1290 = t1173 * t1248 + t1206 * t1252;
t1220 = -t1351 - t1369;
t1175 = -t1247 * t1220 - t1336;
t1289 = t1175 * t1248 - t1203 * t1252;
t1285 = t1252 * t1253 + t1331;
t1188 = t1285 * t1242;
t1208 = -t1248 * t1253 + t1329;
t1288 = t1241 * t1188 + t1239 * t1208;
t1287 = t1239 * t1188 - t1241 * t1208;
t1286 = t1207 * t1248 + t1210 * t1252;
t1198 = t1334 * t1359;
t1284 = -qJDD(3) * t1252 + t1198 * t1248;
t1281 = pkin(4) * t1011 - t909;
t1221 = t1233 - t1369;
t1172 = t1251 * t1221 - t1343;
t1280 = t1172 * t1248 - t1251 * t1329;
t1199 = t1251 * t1213;
t1219 = -t1351 + t1369;
t1174 = -t1247 * t1219 + t1199;
t1279 = t1174 * t1248 - t1247 * t1329;
t1276 = pkin(3) * t1118 + pkin(8) * t1082 - t1340;
t1275 = pkin(3) * t1122 + pkin(8) * t1092 + t1347;
t861 = -pkin(4) * t1003 + pkin(9) * t875;
t825 = -pkin(8) * t840 - pkin(9) * t1360 - t1246 * t861;
t828 = -pkin(3) * t840 - t1367;
t835 = -t1251 * t1003 + t1247 * t841;
t809 = -pkin(7) * t835 - t1247 * t828 + t1251 * t825;
t1254 = -pkin(3) * t1003 + pkin(8) * t841 - pkin(9) * t1361 + t1250 * t861;
t814 = -pkin(2) * t835 - t1254;
t824 = t1248 * t840 + t1252 * t836;
t1274 = pkin(6) * t824 + t1248 * t809 + t1252 * t814;
t853 = -pkin(4) * t1055 + pkin(9) * t965 + t875;
t854 = -pkin(9) * t963 - t874;
t827 = -pkin(8) * t900 - t1246 * t853 + t1250 * t854;
t883 = -pkin(3) * t900 - t1366;
t888 = -t1251 * t1055 + t1247 * t902;
t822 = -pkin(7) * t888 - t1247 * t883 + t1251 * t827;
t1255 = -pkin(3) * t1055 + pkin(8) * t902 + t1246 * t854 + t1250 * t853;
t826 = -pkin(2) * t888 - t1255;
t855 = t1248 * t900 + t1252 * t889;
t1273 = pkin(6) * t855 + t1248 * t822 + t1252 * t826;
t911 = -pkin(4) * t1017 + pkin(9) * t1012 - t1342;
t949 = -pkin(9) * t1011 + t1349;
t863 = -pkin(8) * t956 - t1246 * t911 + t1250 * t949;
t879 = -pkin(3) * t956 - t1281;
t913 = -t1251 * t1017 + t1247 * t957;
t833 = -pkin(7) * t913 - t1247 * t879 + t1251 * t863;
t1257 = -pkin(3) * t1017 + pkin(8) * t957 + t1246 * t949 + t1250 * t911;
t848 = -pkin(2) * t913 - t1257;
t886 = t1248 * t956 + t1252 * t914;
t1272 = pkin(6) * t886 + t1248 * t833 + t1252 * t848;
t917 = -pkin(4) * t1372 + pkin(9) * t1031 + t1349;
t962 = -pkin(9) * t1030 + t1342;
t878 = -pkin(8) * t970 - t1246 * t917 + t1250 * t962;
t1266 = pkin(4) * t1030 - t910;
t881 = -pkin(3) * t970 - t1266;
t920 = t1247 * t971 - t1251 * t1372;
t834 = -pkin(7) * t920 - t1247 * t881 + t1251 * t878;
t1256 = -pkin(3) * t1372 + pkin(8) * t971 + t1246 * t962 + t1250 * t917;
t850 = -pkin(2) * t920 - t1256;
t890 = t1248 * t970 + t1252 * t921;
t1271 = pkin(6) * t890 + t1248 * t834 + t1252 * t850;
t915 = -t1251 * t1059 + t1247 * t942;
t862 = -pkin(7) * t915 + (-pkin(8) * t1251 + t1365) * t941;
t882 = -pkin(2) * t915 - t1319;
t885 = t1248 * t941 + t1252 * t916;
t1270 = pkin(6) * t885 + t1248 * t862 + t1252 * t882;
t1007 = t1247 * t1046 + t1251 * t1136;
t912 = -pkin(8) * t1044 - t941;
t887 = -pkin(7) * t1007 + t1044 * t1365 + t1251 * t912;
t1260 = pkin(3) * t1136 + pkin(8) * t1046 + t942;
t893 = -pkin(2) * t1007 - t1260;
t968 = t1252 * t1008 + t1248 * t1044;
t1269 = pkin(6) * t968 + t1248 * t887 + t1252 * t893;
t1004 = -pkin(8) * t1081 + t1347;
t1028 = t1247 * t1082 + t1251 * t1118;
t973 = -pkin(3) * t1081 + t999;
t906 = -pkin(7) * t1028 + t1251 * t1004 - t1247 * t973;
t943 = -pkin(2) * t1028 - t1276;
t986 = t1252 * t1029 + t1248 * t1081;
t1268 = pkin(6) * t986 + t1248 * t906 + t1252 * t943;
t1006 = -pkin(8) * t1091 + t1340;
t1032 = t1247 * t1092 + t1251 * t1122;
t983 = -pkin(3) * t1091 + t1000;
t907 = -pkin(7) * t1032 + t1251 * t1006 - t1247 * t983;
t944 = -pkin(2) * t1032 - t1275;
t987 = t1252 * t1033 + t1248 * t1091;
t1267 = pkin(6) * t987 + t1248 * t907 + t1252 * t944;
t1179 = -t1247 * t1205 - t1236 * t1359;
t1265 = t1179 * t1248 - t1321;
t1180 = t1251 * t1204 - t1235 * t1359;
t1264 = t1180 * t1248 + t1321;
t1169 = t1247 * t1222 + t1199;
t1056 = -pkin(2) * t1169 + t1093;
t1089 = -pkin(7) * t1169 + t1345;
t1130 = t1252 * t1173 - t1248 * t1206;
t1263 = pkin(6) * t1130 + t1056 * t1252 + t1089 * t1248;
t1171 = t1251 * t1220 - t1343;
t1057 = -pkin(2) * t1171 + t1094;
t1090 = -pkin(7) * t1171 + t1337;
t1131 = t1252 * t1175 + t1248 * t1203;
t1262 = pkin(6) * t1131 + t1057 * t1252 + t1090 * t1248;
t992 = t1252 * t1025 + t1248 * t1128;
t1258 = pkin(6) * t992 - (-pkin(2) * t1252 - pkin(7) * t1248) * t1024;
t1230 = t1242 * qJDD(2);
t1189 = t1208 * t1242;
t1187 = t1208 * t1240;
t1186 = t1285 * t1240;
t1181 = t1248 * qJDD(3) + t1252 * t1198;
t1170 = t1251 * t1219 + t1344;
t1168 = t1247 * t1221 + t1336;
t1167 = t1317 * t1247;
t1166 = t1316 * t1251;
t1164 = t1284 * t1242;
t1163 = t1284 * t1240;
t1159 = t1251 * t1203 + t1247 * t1206;
t1153 = t1286 * t1242;
t1152 = t1286 * t1240;
t1150 = -t1239 * t1189 - t1241 * t1285;
t1149 = t1241 * t1189 - t1239 * t1285;
t1147 = t1252 * t1180 - t1320;
t1146 = t1252 * t1179 + t1320;
t1145 = t1252 * t1174 + t1247 * t1331;
t1144 = t1252 * t1172 + t1248 * t1330;
t1125 = t1252 * t1160 + t1248 * t1211;
t1111 = -t1277 + (t1240 * t1186 + t1242 * t1188) * pkin(6);
t1110 = -t1278 + (-t1240 * t1187 - t1242 * t1189) * pkin(6);
t1108 = t1247 * t1127 + t1251 * t1197;
t1102 = -t1240 * t1167 + t1242 * t1264;
t1101 = t1240 * t1166 + t1242 * t1265;
t1100 = t1242 * t1167 + t1240 * t1264;
t1099 = -t1242 * t1166 + t1240 * t1265;
t1098 = -t1240 * t1170 + t1242 * t1279;
t1097 = -t1240 * t1168 + t1242 * t1280;
t1096 = t1242 * t1170 + t1240 * t1279;
t1095 = t1242 * t1168 + t1240 * t1280;
t1086 = -t1240 * t1171 + t1242 * t1289;
t1085 = -t1240 * t1169 + t1242 * t1290;
t1084 = t1242 * t1171 + t1240 * t1289;
t1083 = t1242 * t1169 + t1240 * t1290;
t1074 = -t1240 * t1159 + t1242 * t1291;
t1073 = t1242 * t1159 + t1240 * t1291;
t1072 = pkin(2) * t1206 + pkin(7) * t1173 - t1337;
t1071 = -pkin(2) * t1203 + pkin(7) * t1175 + t1345;
t1066 = t1077 * t1242;
t1062 = t1247 * t1116 - t1325;
t1061 = t1247 * t1114 + t1325;
t1054 = -pkin(1) * t1187 + t1240 * t1140 + t1242 * t1277 - t1285 * t1363;
t1053 = pkin(1) * t1186 + t1240 * t1141 - t1208 * t1363 - t1242 * t1278;
t1052 = pkin(1) * t1189 - t1242 * t1140 + (-pkin(6) * t1285 + t1277) * t1240;
t1051 = -pkin(1) * t1188 - t1242 * t1141 + (-pkin(6) * t1208 - t1278) * t1240;
t1048 = t1240 * t1194 + (t1323 - t1076) * t1242;
t1047 = -t1076 * t1240 - t1242 * t1313;
t1042 = t1252 * t1109 + t1248 * t1126;
t1039 = t1247 * t1106 + t1251 * t1117;
t1038 = t1247 * t1105 - t1251 * t1121;
t1026 = t1247 * t1045 - t1251 * t1165;
t1010 = t1252 * t1064 + t1248 * t1115;
t1009 = t1252 * t1063 - t1248 * t1113;
t1005 = pkin(2) * t1210 + pkin(7) * t1207 + t1025;
t997 = -t1240 * t1108 + t1242 * t1292;
t996 = t1242 * t1108 + t1240 * t1292;
t995 = -pkin(2) * t1128 + pkin(7) * t1025;
t994 = t1252 * t1041 + t1248 * t1104;
t993 = t1252 * t1040 + t1248 * t1103;
t990 = t1247 * t1002 + t1251 * t1192;
t989 = pkin(1) * t1048 + pkin(6) * t1065;
t988 = -pkin(1) * t1047 + t1077 * t1363;
t985 = t1252 * t1024 + (-t1152 * t1240 - t1153 * t1242) * pkin(6);
t984 = (-t1047 * t1240 - t1048 * t1242) * pkin(6);
t982 = -t1240 * t1062 + t1242 * t1293;
t981 = -t1240 * t1061 + t1242 * t1294;
t980 = t1242 * t1062 + t1240 * t1293;
t979 = t1242 * t1061 + t1240 * t1294;
t972 = t1252 * t1027 + t1248 * t1043;
t955 = -t1248 * t1057 + t1252 * t1090 + (-t1084 * t1240 - t1086 * t1242) * pkin(6);
t954 = -t1248 * t1056 + t1252 * t1089 + (-t1083 * t1240 - t1085 * t1242) * pkin(6);
t953 = -t1240 * t1039 + t1242 * t1295;
t952 = -t1240 * t1038 + t1242 * t1296;
t951 = t1242 * t1039 + t1240 * t1295;
t950 = t1242 * t1038 + t1240 * t1296;
t948 = -t1240 * t1032 + t1242 * t1297;
t947 = t1242 * t1032 + t1240 * t1297;
t946 = t1024 * t1240 + t1242 * t1300;
t945 = -t1024 * t1242 + t1240 * t1300;
t940 = -t1240 * t1028 + t1242 * t1298;
t939 = t1242 * t1028 + t1240 * t1298;
t938 = t1248 * t1001 + t1252 * t991;
t935 = t1247 * t961 - t1326;
t934 = t1247 * t960 + t1326;
t933 = -pkin(1) * t1084 - t1240 * t1071 + t1242 * t1262;
t932 = -pkin(1) * t1083 - t1240 * t1072 + t1242 * t1263;
t931 = pkin(1) * t1086 + t1242 * t1071 + t1240 * t1262;
t930 = pkin(1) * t1085 + t1242 * t1072 + t1240 * t1263;
t929 = -pkin(1) * t1152 - t1240 * t1005 + t1242 * t1314;
t928 = pkin(1) * t1153 + t1242 * t1005 + t1240 * t1314;
t925 = t1251 * t1018 + t1247 * t978;
t924 = -t1251 * t1021 + t1247 * t977;
t923 = -t1240 * t1026 + t1242 * t1299;
t922 = t1242 * t1026 + t1240 * t1299;
t919 = -t1240 * t1007 + t1242 * t1301;
t918 = t1242 * t1007 + t1240 * t1301;
t905 = -t1240 * t990 + t1242 * t1302;
t904 = t1240 * t1302 + t1242 * t990;
t899 = -pkin(2) * t1091 + pkin(7) * t1033 + t1247 * t1006 + t1251 * t983;
t898 = -pkin(2) * t1081 + pkin(7) * t1029 + t1247 * t1004 + t1251 * t973;
t897 = t1248 * t976 + t1252 * t927;
t896 = t1248 * t975 + t1252 * t926;
t894 = -t1251 * t1107 + t1247 * t903;
t892 = t1248 * t959 + t1252 * t937;
t891 = t1248 * t958 + t1252 * t936;
t884 = pkin(7) * t1008 + t1247 * t912 + (-pkin(2) - t1364) * t1044;
t880 = -(pkin(2) * t1248 - pkin(7) * t1252) * t1024 + (-t1240 * t945 - t1242 * t946) * pkin(6);
t877 = -pkin(1) * t945 - t1240 * t995 + t1242 * t1258;
t876 = pkin(1) * t946 + t1240 * t1258 + t1242 * t995;
t873 = -t1240 * t925 + t1242 * t1305;
t872 = -t1240 * t924 + t1242 * t1306;
t871 = t1240 * t1305 + t1242 * t925;
t870 = t1240 * t1306 + t1242 * t924;
t869 = -t1240 * t935 + t1242 * t1303;
t868 = -t1240 * t934 + t1242 * t1304;
t867 = t1240 * t1303 + t1242 * t935;
t866 = t1240 * t1304 + t1242 * t934;
t865 = -t1240 * t920 + t1242 * t1307;
t864 = t1240 * t1307 + t1242 * t920;
t860 = -t1240 * t913 + t1242 * t1309;
t859 = t1240 * t1309 + t1242 * t913;
t858 = t1248 * t901 + t1252 * t895;
t857 = -t1240 * t915 + t1242 * t1308;
t856 = t1240 * t1308 + t1242 * t915;
t852 = pkin(7) * t916 + (-pkin(2) + t1318) * t941;
t851 = -t1248 * t944 + t1252 * t907 + (-t1240 * t947 - t1242 * t948) * pkin(6);
t849 = -t1248 * t943 + t1252 * t906 + (-t1240 * t939 - t1242 * t940) * pkin(6);
t847 = -t1240 * t894 + t1242 * t1310;
t846 = t1240 * t1310 + t1242 * t894;
t845 = -t1240 * t888 + t1242 * t1311;
t844 = t1240 * t1311 + t1242 * t888;
t843 = -pkin(1) * t947 - t1240 * t899 + t1242 * t1267;
t842 = pkin(1) * t948 + t1240 * t1267 + t1242 * t899;
t839 = -pkin(1) * t939 - t1240 * t898 + t1242 * t1268;
t838 = pkin(1) * t940 + t1240 * t1268 + t1242 * t898;
t837 = -t1248 * t893 + t1252 * t887 + (-t1240 * t918 - t1242 * t919) * pkin(6);
t832 = -pkin(2) * t970 + pkin(7) * t921 + t1247 * t878 + t1251 * t881;
t831 = -pkin(2) * t956 + pkin(7) * t914 + t1247 * t863 + t1251 * t879;
t830 = -pkin(1) * t918 - t1240 * t884 + t1242 * t1269;
t829 = pkin(1) * t919 + t1240 * t1269 + t1242 * t884;
t823 = -t1248 * t882 + t1252 * t862 + (-t1240 * t856 - t1242 * t857) * pkin(6);
t821 = -pkin(2) * t900 + pkin(7) * t889 + t1247 * t827 + t1251 * t883;
t820 = -pkin(1) * t856 - t1240 * t852 + t1242 * t1270;
t819 = pkin(1) * t857 + t1240 * t1270 + t1242 * t852;
t818 = -t1248 * t850 + t1252 * t834 + (-t1240 * t864 - t1242 * t865) * pkin(6);
t817 = -t1240 * t835 + t1242 * t1312;
t816 = t1240 * t1312 + t1242 * t835;
t815 = -t1248 * t848 + t1252 * t833 + (-t1240 * t859 - t1242 * t860) * pkin(6);
t813 = -pkin(1) * t864 - t1240 * t832 + t1242 * t1271;
t812 = pkin(1) * t865 + t1240 * t1271 + t1242 * t832;
t811 = -pkin(1) * t859 - t1240 * t831 + t1242 * t1272;
t810 = pkin(1) * t860 + t1240 * t1272 + t1242 * t831;
t808 = -pkin(2) * t840 + pkin(7) * t836 + t1247 * t825 + t1251 * t828;
t807 = -t1248 * t826 + t1252 * t822 + (-t1240 * t844 - t1242 * t845) * pkin(6);
t806 = -pkin(1) * t844 - t1240 * t821 + t1242 * t1273;
t805 = pkin(1) * t845 + t1240 * t1273 + t1242 * t821;
t804 = -t1248 * t814 + t1252 * t809 + (-t1240 * t816 - t1242 * t817) * pkin(6);
t803 = -pkin(1) * t816 - t1240 * t808 + t1242 * t1274;
t802 = pkin(1) * t817 + t1240 * t1274 + t1242 * t808;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1377, -t1376, -t1370, -qJ(1) * t1370, 0, 0, -t1287, 0, t1150, t1239 * t1333, -qJ(1) * t1149 - t1239 * t1054 + t1241 * t1110, qJ(1) * t1288 - t1239 * t1053 + t1241 * t1111, -t1239 * t1066 + t1241 * t1076, t1241 * t984 - t1239 * t988 - qJ(1) * (t1241 * t1048 + t1239 * t1077), -t1239 * t1102 + t1241 * t1147, -t1239 * t1074 + t1241 * t1125, -t1239 * t1098 + t1241 * t1145, -t1239 * t1101 + t1241 * t1146, -t1239 * t1097 + t1241 * t1144, -t1239 * t1164 + t1241 * t1181, t1241 * t954 - t1239 * t932 - qJ(1) * (t1241 * t1085 + t1239 * t1130), t1241 * t955 - t1239 * t933 - qJ(1) * (t1241 * t1086 + t1239 * t1131), t1241 * t985 - t1239 * t929 - qJ(1) * (t1241 * t1153 + t1239 * t1162), t1241 * t880 - t1239 * t877 - qJ(1) * (t1239 * t992 + t1241 * t946), t1241 * t1010 - t1239 * t982, -t1239 * t923 + t1241 * t972, -t1239 * t952 + t1241 * t993, t1241 * t1009 - t1239 * t981, -t1239 * t953 + t1241 * t994, t1241 * t1042 - t1239 * t997, t1241 * t849 - t1239 * t839 - qJ(1) * (t1239 * t986 + t1241 * t940), t1241 * t851 - t1239 * t843 - qJ(1) * (t1239 * t987 + t1241 * t948), t1241 * t837 - t1239 * t830 - qJ(1) * (t1239 * t968 + t1241 * t919), t1241 * t823 - t1239 * t820 - qJ(1) * (t1239 * t885 + t1241 * t857), -t1239 * t869 + t1241 * t892, -t1239 * t847 + t1241 * t858, -t1239 * t872 + t1241 * t896, -t1239 * t868 + t1241 * t891, -t1239 * t873 + t1241 * t897, -t1239 * t905 + t1241 * t938, t1241 * t815 - t1239 * t811 - qJ(1) * (t1239 * t886 + t1241 * t860), t1241 * t818 - t1239 * t813 - qJ(1) * (t1239 * t890 + t1241 * t865), t1241 * t807 - t1239 * t806 - qJ(1) * (t1239 * t855 + t1241 * t845), t1241 * t804 - t1239 * t803 - qJ(1) * (t1239 * t824 + t1241 * t817); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1376, -t1377, t1371, qJ(1) * t1371, 0, 0, t1288, 0, t1149, -t1241 * t1333, qJ(1) * t1150 + t1241 * t1054 + t1239 * t1110, qJ(1) * t1287 + t1241 * t1053 + t1239 * t1111, t1241 * t1066 + t1239 * t1076, t1239 * t984 + t1241 * t988 + qJ(1) * (-t1239 * t1048 + t1241 * t1077), t1241 * t1102 + t1239 * t1147, t1241 * t1074 + t1239 * t1125, t1241 * t1098 + t1239 * t1145, t1241 * t1101 + t1239 * t1146, t1241 * t1097 + t1239 * t1144, t1241 * t1164 + t1239 * t1181, t1239 * t954 + t1241 * t932 + qJ(1) * (-t1239 * t1085 + t1241 * t1130), t1239 * t955 + t1241 * t933 + qJ(1) * (-t1239 * t1086 + t1241 * t1131), t1239 * t985 + t1241 * t929 + qJ(1) * (-t1239 * t1153 + t1241 * t1162), t1239 * t880 + t1241 * t877 + qJ(1) * (-t1239 * t946 + t1241 * t992), t1239 * t1010 + t1241 * t982, t1239 * t972 + t1241 * t923, t1239 * t993 + t1241 * t952, t1239 * t1009 + t1241 * t981, t1239 * t994 + t1241 * t953, t1239 * t1042 + t1241 * t997, t1239 * t849 + t1241 * t839 + qJ(1) * (-t1239 * t940 + t1241 * t986), t1239 * t851 + t1241 * t843 + qJ(1) * (-t1239 * t948 + t1241 * t987), t1239 * t837 + t1241 * t830 + qJ(1) * (-t1239 * t919 + t1241 * t968), t1239 * t823 + t1241 * t820 + qJ(1) * (-t1239 * t857 + t1241 * t885), t1239 * t892 + t1241 * t869, t1239 * t858 + t1241 * t847, t1239 * t896 + t1241 * t872, t1239 * t891 + t1241 * t868, t1239 * t897 + t1241 * t873, t1239 * t938 + t1241 * t905, t1239 * t815 + t1241 * t811 + qJ(1) * (-t1239 * t860 + t1241 * t886), t1239 * t818 + t1241 * t813 + qJ(1) * (-t1239 * t865 + t1241 * t890), t1239 * t807 + t1241 * t806 + qJ(1) * (-t1239 * t845 + t1241 * t855), t1239 * t804 + t1241 * t803 + qJ(1) * (-t1239 * t817 + t1241 * t824); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1324, t1212, 0, 0, 0, 0, t1186, 0, t1187, t1230, t1052, t1051, t1065, t989, t1100, t1073, t1096, t1099, t1095, t1163, t930, t931, t928, t876, t980, t922, t950, t979, t951, t996, t838, t842, t829, t819, t867, t846, t870, t866, t871, t904, t810, t812, t805, t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1362, -t1324, 0, 0, 0, t1208, 0, -t1285, 0, t1110, t1111, t1076, t984, t1147, t1125, t1145, t1146, t1144, t1181, t954, t955, t985, t880, t1010, t972, t993, t1009, t994, t1042, t849, t851, t837, t823, t892, t858, t896, t891, t897, t938, t815, t818, t807, t804; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1362, 0, -t1212, 0, 0, 0, t1188, 0, t1189, -t1333, t1054, t1053, t1066, t988, t1102, t1074, t1098, t1101, t1097, t1164, t932, t933, t929, t877, t982, t923, t952, t981, t953, t997, t839, t843, t830, t820, t869, t847, t872, t868, t873, t905, t811, t813, t806, t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1324, t1212, 0, 0, 0, 0, t1186, 0, t1187, t1230, t1052, t1051, t1065, t989, t1100, t1073, t1096, t1099, t1095, t1163, t930, t931, t928, t876, t980, t922, t950, t979, t951, t996, t838, t842, t829, t819, t867, t846, t870, t866, t871, t904, t810, t812, t805, t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1253, 0, 0, -t1313, t1140, 0, t1180, t1160, t1174, t1179, t1172, t1198, t1089, t1090, t1024, pkin(7) * t1024, t1064, t1027, t1040, t1063, t1041, t1109, t906, t907, t887, t862, t937, t895, t926, t936, t927, t991, t833, t834, t822, t809; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1253, 0, qJDD(2), 0, t1313, 0, t1141, 0, t1224, -t1211, -t1332, -t1224, -t1330, -qJDD(3), t1056, t1057, 0, pkin(2) * t1024, -t1115, -t1043, -t1103, t1113, -t1104, -t1126, t943, t944, t893, t882, -t959, -t901, -t975, -t958, -t976, -t1001, t848, t850, t826, t814; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1140, -t1141, 0, 0, t1167, t1159, t1170, -t1166, t1168, 0, t1072, t1071, t1005, t995, t1062, t1026, t1038, t1061, t1039, t1108, t898, t899, t884, t852, t935, t894, t924, t934, t925, t990, t831, t832, t821, t808; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1204, t1206, t1213, -t1229, t1221, t1229, 0, t1128, t1093, 0, t1116, t1045, t1105, t1114, t1106, t1127, t1004, t1006, t912, -pkin(8) * t941, t961, t903, t977, t960, t978, t1002, t863, t878, t827, t825; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1228, t1203, t1219, t1205, t1214, -t1228, -t1128, 0, t1094, 0, -t1356, -t1165, -t1121, t1356, t1117, t1197, t973, t983, -pkin(3) * t1044, -pkin(3) * t941, -t1112, -t1107, -t1021, t1112, t1018, t1192, t879, t881, t883, t828; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1224, t1211, t1332, t1224, t1330, qJDD(3), -t1093, -t1094, 0, 0, t1115, t1043, t1103, -t1113, t1104, t1126, t1276, t1275, t1260, t1319, t959, t901, t975, t958, t976, t1001, t1257, t1256, t1255, t1254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1148, t1118, t1261, -t1185, t1182, t1185, 0, t1059, t999, 0, t1016, t966, t1036, t1014, t1037, t1068, t949, t962, t854, -pkin(9) * t874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1184, t1120, t1183, -t1259, -t1137, t1184, -t1059, 0, t1000, 0, t1015, t964, t1034, t1013, t1035, t1067, t911, t917, t853, t861; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1356, t1165, t1121, -t1356, -t1117, -t1197, -t999, -t1000, 0, 0, t1112, t1107, t1021, -t1112, -t1018, -t1192, t1281, t1266, t1366, t1367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1050, -t1017, t1373, -t1134, t1132, t1134, 0, t1003, t909, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1357, t1372, t1133, t1049, -t1078, t1357, -t1003, 0, t910, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1112, t1107, t1021, -t1112, -t1018, -t1192, -t909, -t910, 0, 0;];
m_new_reg = t1;
