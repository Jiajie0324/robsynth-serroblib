% Calculate vector of inverse dynamics joint torques for
% S5RPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:13
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RPRRR2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR2_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR2_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR2_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR2_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RPRRR2_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RPRRR2_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RPRRR2_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:11:17
% EndTime: 2019-12-05 18:11:50
% DurationCPUTime: 17.74s
% Computational Cost: add. (24849->918), mult. (20663->1158), div. (0->0), fcn. (16336->10), ass. (0->499)
t419 = pkin(9) + qJ(3);
t385 = sin(t419);
t737 = rSges(4,2) * t385;
t391 = qJ(4) + t419;
t379 = qJ(5) + t391;
t363 = sin(t379);
t364 = cos(t379);
t677 = rSges(6,2) * t364;
t286 = rSges(6,1) * t363 + t677;
t426 = sin(qJ(1));
t245 = t286 * t426;
t420 = qJD(3) + qJD(4);
t387 = qJD(5) + t420;
t409 = t426 * rSges(6,3);
t427 = cos(qJ(1));
t355 = t364 * rSges(6,1);
t678 = rSges(6,2) * t363;
t722 = t355 - t678;
t116 = -t387 * t245 + (t427 * t722 + t409) * qJD(1);
t558 = -qJDD(3) - qJDD(4);
t559 = qJD(1) * qJD(5);
t561 = qJD(1) * qJD(3);
t375 = t426 * t561;
t560 = qJD(1) * qJD(4);
t576 = t426 * t560 + t375;
t184 = t426 * t559 + (-qJDD(5) + t558) * t427 + t576;
t210 = t722 * t387;
t259 = t427 * t558 + t576;
t308 = t387 * t427;
t342 = t420 * t427;
t370 = sin(t391);
t327 = -qJDD(3) * t427 + t375;
t562 = qJD(1) * qJD(2);
t575 = qJDD(2) * t426 + t427 * t562;
t386 = cos(t419);
t623 = t386 * qJD(3) ^ 2;
t690 = pkin(3) * t385;
t457 = -pkin(3) * t427 * t623 + t327 * t690 + t575;
t424 = cos(pkin(9));
t372 = t424 * pkin(2) + pkin(1);
t369 = pkin(3) * t386;
t319 = t369 + t372;
t425 = -pkin(6) - qJ(2);
t418 = -pkin(7) + t425;
t589 = t426 * t319 + t427 * t418;
t622 = t425 * t427;
t175 = t372 * t426 - t589 + t622;
t399 = t427 * qJ(2);
t684 = pkin(1) - t372;
t465 = t426 * t684 - t622;
t231 = -t399 + t465;
t343 = pkin(1) * t426 - t399;
t597 = t231 - t343;
t549 = t175 + t597;
t396 = -pkin(8) + t418;
t371 = cos(t391);
t361 = pkin(4) * t371;
t511 = t361 + t319;
t592 = -t427 * t396 - t426 * t511;
t145 = t589 + t592;
t636 = t363 * t426;
t329 = rSges(6,2) * t636;
t634 = t364 * t426;
t213 = rSges(6,1) * t634 - t427 * rSges(6,3) - t329;
t615 = t145 - t213;
t490 = t549 + t615;
t567 = qJD(1) * t426;
t362 = t425 * t567;
t566 = qJD(1) * t427;
t676 = pkin(3) * qJD(3);
t555 = t385 * t676;
t337 = t426 * t555;
t357 = t418 * t567;
t582 = t337 + t357;
t585 = t319 - t372;
t144 = t566 * t585 + t362 - t582;
t397 = t426 * qJ(2);
t345 = t427 * pkin(1) + t397;
t395 = qJD(2) * t427;
t295 = qJD(1) * t345 - t395;
t603 = t362 - (-t427 * t684 - t397) * qJD(1) - t295;
t550 = -t144 + t603;
t630 = t371 * t420;
t502 = t319 - t511;
t620 = t426 * t396;
t689 = pkin(4) * t370;
t270 = -t420 * t689 - t555;
t621 = t426 * t270;
t86 = t621 + (-t427 * t502 - t620) * qJD(1) + t582;
t11 = t184 * t286 - t210 * t308 + (t259 * t370 - t342 * t630) * pkin(4) + t490 * qJDD(1) + (-t116 - t86 + t550) * qJD(1) + t457;
t393 = qJD(3) * t426;
t341 = qJD(4) * t426 + t393;
t307 = qJD(5) * t426 + t341;
t306 = t427 * t319;
t350 = t427 * t372;
t573 = -t418 + t425;
t176 = t426 * t573 + t306 - t350;
t512 = -t425 * t426 + t350;
t232 = t512 - t345;
t596 = t232 + t345;
t548 = t176 + t596;
t581 = t337 + t395;
t255 = t427 * t511;
t572 = t418 - t396;
t146 = t426 * t572 + t255 - t306;
t633 = t364 * t427;
t635 = t363 * t427;
t214 = rSges(6,1) * t633 - rSges(6,2) * t635 + t409;
t614 = t146 + t214;
t55 = -t341 * t689 - t286 * t307 + (t548 + t614) * qJD(1) - t581;
t736 = t427 * (qJD(1) * t55 + t11);
t656 = Icges(6,6) * t427;
t203 = Icges(6,4) * t634 - Icges(6,2) * t636 - t656;
t353 = Icges(6,4) * t364;
t283 = Icges(6,1) * t363 + t353;
t735 = -t283 * t426 - t203;
t484 = -Icges(6,2) * t363 + t353;
t204 = Icges(6,6) * t426 + t427 * t484;
t734 = -t283 * t427 - t204;
t665 = Icges(6,4) * t363;
t284 = Icges(6,1) * t364 - t665;
t206 = Icges(6,5) * t426 + t284 * t427;
t281 = Icges(6,2) * t364 + t665;
t733 = -t281 * t427 + t206;
t629 = t371 * t426;
t632 = t370 * t426;
t657 = Icges(5,6) * t427;
t224 = Icges(5,4) * t629 - Icges(5,2) * t632 - t657;
t358 = Icges(5,4) * t371;
t301 = Icges(5,1) * t370 + t358;
t732 = -t301 * t426 - t224;
t485 = -Icges(5,2) * t370 + t358;
t225 = Icges(5,6) * t426 + t427 * t485;
t731 = -t301 * t427 - t225;
t666 = Icges(5,4) * t370;
t302 = Icges(5,1) * t371 - t666;
t227 = Icges(5,5) * t426 + t302 * t427;
t299 = Icges(5,2) * t371 + t666;
t730 = -t299 * t427 + t227;
t729 = t283 + t484;
t728 = t301 + t485;
t546 = t370 * t567;
t328 = pkin(4) * t546;
t510 = qJD(1) * t245 - t308 * t722;
t637 = t342 * t371;
t727 = pkin(4) * t637 + t286 * t567 + t328 - t510;
t303 = rSges(5,1) * t370 + rSges(5,2) * t371;
t266 = t303 * t426;
t267 = t303 * t427;
t229 = rSges(5,1) * t629 - rSges(5,2) * t632 - t427 * rSges(5,3);
t410 = t426 * rSges(5,3);
t628 = t371 * t427;
t631 = t370 * t427;
t230 = rSges(5,1) * t628 - rSges(5,2) * t631 + t410;
t565 = qJD(3) * t427;
t612 = -t175 * t393 + t176 * t565;
t68 = t229 * t341 + t230 * t342 + t612;
t394 = qJD(2) * t426;
t543 = t385 * t565;
t508 = pkin(3) * t543;
t471 = t394 - t508;
t452 = -t303 * t342 + t471;
t506 = -t229 + t549;
t72 = qJD(1) * t506 + t452;
t359 = t371 * rSges(5,1);
t721 = -rSges(5,2) * t370 + t359;
t73 = -t303 * t341 + (t230 + t548) * qJD(1) - t581;
t726 = -(qJD(1) * t266 - t342 * t721) * t72 - t68 * (-t341 * t266 - t267 * t342) - t73 * (-qJD(1) * t267 - t341 * t721);
t586 = rSges(6,3) * t566 + qJD(1) * t329;
t115 = -t308 * t677 + (-t308 * t363 - t364 * t567) * rSges(6,1) + t586;
t326 = qJDD(3) * t426 + t427 * t561;
t258 = qJDD(4) * t426 + t427 * t560 + t326;
t183 = qJDD(5) * t426 + t427 * t559 + t258;
t143 = -t508 + (-t426 * t585 + t427 * t573) * qJD(1);
t380 = qJ(2) * t566;
t574 = t380 + t394;
t467 = -qJDD(2) * t427 + qJD(1) * (-pkin(1) * t567 + t574) + qJDD(1) * t345 + t426 * t562;
t453 = qJD(1) * (qJD(1) * t465 - t380) + qJDD(1) * t232 + t467;
t434 = qJD(1) * t143 + qJDD(1) * t176 + (-t326 * t385 - t426 * t623) * pkin(3) + t453;
t257 = t427 * t270;
t85 = t508 + t257 + (t426 * t502 + t427 * t572) * qJD(1);
t12 = -t183 * t286 - t307 * t210 + t614 * qJDD(1) + (t85 + t115) * qJD(1) + (-t258 * t370 - t341 * t630) * pkin(4) + t434;
t725 = t12 * t426;
t332 = qJD(1) * t343;
t723 = qJD(1) * t231 - t332;
t368 = Icges(4,4) * t386;
t486 = -Icges(4,2) * t385 + t368;
t314 = Icges(4,1) * t385 + t368;
t720 = g(1) * t427 + g(2) * t426;
t719 = qJD(1) * t175 + t723;
t423 = sin(pkin(9));
t681 = rSges(3,2) * t423;
t683 = rSges(3,1) * t424;
t269 = t426 * rSges(3,3) + (-t681 + t683) * t427;
t625 = t386 * t426;
t627 = t385 * t426;
t655 = Icges(4,3) * t427;
t239 = Icges(4,5) * t625 - Icges(4,6) * t627 - t655;
t349 = Icges(4,4) * t627;
t664 = Icges(4,5) * t427;
t243 = Icges(4,1) * t625 - t349 - t664;
t658 = Icges(4,6) * t427;
t241 = Icges(4,4) * t625 - Icges(4,2) * t627 - t658;
t648 = t241 * t385;
t478 = -t243 * t386 + t648;
t89 = -t427 * t239 - t426 * t478;
t280 = Icges(6,5) * t364 - Icges(6,6) * t363;
t279 = Icges(6,5) * t363 + Icges(6,6) * t364;
t645 = t279 * t427;
t650 = t204 * t363;
t653 = Icges(6,3) * t427;
t718 = -t387 * t645 + (-t206 * t364 - t280 * t426 + t650 + t653) * qJD(1);
t325 = Icges(6,4) * t636;
t662 = Icges(6,5) * t427;
t205 = Icges(6,1) * t634 - t325 - t662;
t482 = t203 * t363 - t205 * t364;
t202 = Icges(6,3) * t426 + t280 * t427;
t571 = qJD(1) * t202;
t646 = t279 * t426;
t717 = qJD(1) * t482 - t387 * t646 + t571;
t298 = Icges(5,5) * t371 - Icges(5,6) * t370;
t297 = Icges(5,5) * t370 + Icges(5,6) * t371;
t642 = t297 * t427;
t649 = t225 * t370;
t654 = Icges(5,3) * t427;
t716 = -t420 * t642 + (-t227 * t371 - t298 * t426 + t649 + t654) * qJD(1);
t336 = Icges(5,4) * t632;
t663 = Icges(5,5) * t427;
t226 = Icges(5,1) * t629 - t336 - t663;
t480 = t224 * t370 - t226 * t371;
t223 = Icges(5,3) * t426 + t298 * t427;
t570 = qJD(1) * t223;
t643 = t297 * t426;
t715 = qJD(1) * t480 - t420 * t643 + t570;
t311 = Icges(4,5) * t386 - Icges(4,6) * t385;
t310 = Icges(4,5) * t385 + Icges(4,6) * t386;
t460 = qJD(3) * t310;
t667 = Icges(4,4) * t385;
t315 = Icges(4,1) * t386 - t667;
t244 = Icges(4,5) * t426 + t315 * t427;
t242 = Icges(4,6) * t426 + t427 * t486;
t647 = t242 * t385;
t477 = -t244 * t386 + t647;
t714 = -t427 * t460 + (-t311 * t426 + t477 + t655) * qJD(1);
t240 = Icges(4,3) * t426 + t311 * t427;
t569 = qJD(1) * t240;
t713 = qJD(1) * t478 - t426 * t460 + t569;
t475 = t281 * t363 - t283 * t364;
t712 = qJD(1) * t475 + t280 * t387;
t474 = t299 * t370 - t301 * t371;
t711 = qJD(1) * t474 + t298 * t420;
t312 = Icges(4,2) * t386 + t667;
t472 = t312 * t385 - t314 * t386;
t710 = qJD(1) * t472 + t311 * qJD(3);
t709 = t426 * (-t312 * t427 + t244) - t427 * (-Icges(4,2) * t625 + t243 - t349);
t708 = qJD(1) * t729 + t307 * t733 - t308 * (-Icges(6,2) * t634 + t205 - t325);
t707 = qJD(1) * t728 + t341 * t730 - t342 * (-Icges(5,2) * t629 + t226 - t336);
t706 = t183 / 0.2e1;
t705 = t184 / 0.2e1;
t704 = t258 / 0.2e1;
t703 = t259 / 0.2e1;
t702 = -t307 / 0.2e1;
t701 = t307 / 0.2e1;
t700 = -t308 / 0.2e1;
t699 = t308 / 0.2e1;
t698 = t326 / 0.2e1;
t697 = t327 / 0.2e1;
t696 = -t341 / 0.2e1;
t695 = t341 / 0.2e1;
t694 = -t342 / 0.2e1;
t693 = t342 / 0.2e1;
t692 = t426 / 0.2e1;
t691 = -t427 / 0.2e1;
t686 = -qJD(1) / 0.2e1;
t685 = qJD(1) / 0.2e1;
t682 = rSges(4,1) * t386;
t680 = rSges(4,2) * t386;
t316 = rSges(4,1) * t385 + t680;
t278 = t316 * t427;
t411 = t426 * rSges(4,3);
t624 = t386 * t427;
t626 = t385 * t427;
t252 = rSges(4,1) * t624 - rSges(4,2) * t626 + t411;
t96 = -t316 * t393 - t395 + (t252 + t596) * qJD(1);
t675 = t278 * t96;
t446 = -t308 * t286 - t342 * t689 + t471;
t54 = qJD(1) * t490 + t446;
t674 = t426 * t54;
t501 = -t316 * t565 + t394;
t579 = rSges(4,2) * t627 + t427 * rSges(4,3);
t251 = rSges(4,1) * t625 - t579;
t547 = -t251 + t597;
t95 = qJD(1) * t547 + t501;
t673 = t426 * t95;
t672 = t72 * t303;
t671 = qJDD(1) / 0.2e1;
t41 = -t145 * t341 + t146 * t342 + t213 * t307 + t214 * t308 + t612;
t652 = qJD(1) * t41;
t644 = t281 * t387;
t641 = t299 * t420;
t640 = t310 * t426;
t639 = t310 * t427;
t638 = t341 * t371;
t201 = Icges(6,5) * t634 - Icges(6,6) * t636 - t653;
t619 = t427 * t201;
t222 = Icges(5,5) * t629 - Icges(5,6) * t632 - t654;
t618 = t427 * t222;
t98 = -t426 * t475 - t645;
t616 = t98 * qJD(1);
t611 = -t426 * t175 + t427 * t176;
t610 = -t426 * t201 - t205 * t633;
t609 = t426 * t202 + t206 * t633;
t608 = -t426 * t222 - t226 * t628;
t607 = t426 * t223 + t227 * t628;
t606 = -t426 * t239 - t243 * t624;
t605 = t426 * t240 + t244 * t624;
t604 = t426 * t213 + t427 * t214;
t602 = t426 * t229 + t427 * t230;
t212 = t269 + t345;
t588 = -t312 + t315;
t587 = t314 + t486;
t584 = rSges(5,2) * t546 + rSges(5,3) * t566;
t583 = rSges(4,3) * t566 + t567 * t737;
t557 = t426 * t683;
t365 = t426 * t681;
t577 = t427 * rSges(3,3) + t365;
t268 = t557 - t577;
t580 = -t343 - t268;
t578 = rSges(3,3) * t566 + qJD(1) * t365;
t568 = qJD(1) * t311;
t103 = -t426 * t474 - t642;
t564 = t103 * qJD(1);
t118 = -t426 * t472 - t639;
t563 = t118 * qJD(1);
t554 = t386 * t676;
t553 = t427 * t115 + t426 * t116 + t213 * t566;
t139 = -rSges(5,2) * t637 + (-t342 * t370 - t371 * t567) * rSges(5,1) + t584;
t140 = -t420 * t266 + (t427 * t721 + t410) * qJD(1);
t552 = t427 * t139 + t426 * t140 + t229 * t566;
t551 = t427 * t143 + t426 * t144 - t175 * t566;
t544 = t385 * t566;
t541 = -pkin(1) - t683;
t540 = t567 / 0.2e1;
t539 = t566 / 0.2e1;
t538 = -t393 / 0.2e1;
t537 = t393 / 0.2e1;
t536 = -t565 / 0.2e1;
t535 = t565 / 0.2e1;
t459 = -t303 - t690;
t534 = -t372 - t682;
t533 = t385 * (-t426 ^ 2 - t427 ^ 2);
t532 = (-t426 * t484 + t656) * qJD(1) + t733 * t387;
t531 = qJD(1) * t204 + t205 * t387 - t426 * t644;
t530 = (-t284 * t426 + t662) * qJD(1) + t734 * t387;
t529 = qJD(1) * t206 + t387 * t735;
t528 = (-t426 * t485 + t657) * qJD(1) + t730 * t420;
t527 = qJD(1) * t225 + t226 * t420 - t426 * t641;
t526 = (-t302 * t426 + t663) * qJD(1) + t731 * t420;
t525 = qJD(1) * t227 + t420 * t732;
t169 = t206 * t634;
t524 = t427 * t202 - t169;
t246 = t286 * t427;
t523 = -t307 * t245 - t246 * t308;
t179 = t227 * t629;
t522 = t427 * t223 - t179;
t188 = t244 * t625;
t521 = t427 * t240 - t188;
t520 = -t201 + t650;
t519 = t729 * t387;
t518 = t284 * t387 - t644;
t517 = -t222 + t649;
t516 = -qJD(1) * t246 - t307 * t722;
t515 = -t239 + t647;
t514 = t728 * t420;
t513 = t302 * t420 - t641;
t507 = -t426 * t145 + t427 * t146 + t604;
t505 = -pkin(4) * t630 - t210;
t256 = t721 * t420;
t504 = -t256 - t554;
t503 = t722 + t361;
t309 = -t689 - t690;
t346 = rSges(2,1) * t427 - rSges(2,2) * t426;
t344 = rSges(2,1) * t426 + rSges(2,2) * t427;
t317 = t682 - t737;
t123 = t242 * t386 + t244 * t385;
t461 = qJD(3) * t312;
t150 = -t427 * t461 + (-t426 * t486 + t658) * qJD(1);
t462 = qJD(3) * t314;
t152 = -t427 * t462 + (-t315 * t426 + t664) * qJD(1);
t436 = -qJD(3) * t123 - t150 * t385 + t152 * t386 + t569;
t122 = t241 * t386 + t243 * t385;
t151 = qJD(1) * t242 - t426 * t461;
t153 = qJD(1) * t244 - t426 * t462;
t437 = qJD(1) * t239 - qJD(3) * t122 - t151 * t385 + t153 * t386;
t497 = -(t426 * t713 + t437 * t427) * t427 + (t426 * t714 + t436 * t427) * t426;
t496 = -(t437 * t426 - t427 * t713) * t427 + (t436 * t426 - t427 * t714) * t426;
t495 = -t426 * t55 - t427 * t54;
t494 = -t426 * t73 - t427 * t72;
t90 = -t242 * t627 - t521;
t493 = t426 * t90 - t427 * t89;
t91 = -t241 * t626 - t606;
t92 = -t242 * t626 + t605;
t492 = t426 * t92 - t427 * t91;
t491 = -t426 * t96 - t427 * t95;
t154 = -t565 * t680 + (-t386 * t567 - t543) * rSges(4,1) + t583;
t277 = t316 * t426;
t155 = -qJD(3) * t277 + (t317 * t427 + t411) * qJD(1);
t483 = t154 * t427 + t155 * t426;
t101 = t203 * t364 + t205 * t363;
t107 = t224 * t371 + t226 * t370;
t476 = t251 * t426 + t252 * t427;
t473 = t312 * t386 + t314 * t385;
t470 = -t286 + t309;
t469 = t143 * t565 + t144 * t393 - t326 * t175 - t176 * t327;
t468 = -t145 * t566 + t426 * t86 + t427 * t85 + t553;
t466 = -t511 - t355;
t464 = t482 * t426;
t463 = t480 * t426;
t456 = t505 - t554;
t455 = qJD(1) * t280 - t307 * t645 + t308 * t646;
t454 = qJD(1) * t298 - t341 * t642 + t342 * t643;
t451 = t241 * t427 - t242 * t426;
t450 = (-t385 * t587 + t386 * t588) * qJD(1);
t102 = t204 * t364 + t206 * t363;
t443 = qJD(1) * t201 - t363 * t531 + t364 * t529;
t19 = t426 * t717 + t443 * t427;
t442 = -t363 * t532 + t364 * t530 + t571;
t20 = t426 * t718 + t442 * t427;
t21 = t443 * t426 - t427 * t717;
t22 = t442 * t426 - t427 * t718;
t75 = -t464 - t619;
t76 = -t204 * t636 - t524;
t33 = t307 * t76 - t308 * t75 + t616;
t77 = -t203 * t635 - t610;
t78 = -t204 * t635 + t609;
t99 = -t427 * t475 + t646;
t97 = t99 * qJD(1);
t34 = t307 * t78 - t308 * t77 + t97;
t445 = t734 * t307 - t735 * t308 + (-t281 + t284) * qJD(1);
t431 = -t363 * t708 + t445 * t364;
t439 = qJD(1) * t279 - t363 * t519 + t364 * t518;
t44 = t426 * t712 + t439 * t427;
t45 = t439 * t426 - t427 * t712;
t56 = t363 * t529 + t364 * t531;
t57 = t363 * t530 + t364 * t532;
t449 = (qJD(1) * t44 + qJDD(1) * t99 + t183 * t78 + t184 * t77 - t19 * t308 + t20 * t307) * t692 + (t426 * t57 - t427 * t56 + (t101 * t426 + t102 * t427) * qJD(1)) * t685 + (t426 * t455 + t427 * t431) * t702 + (t426 * t431 - t427 * t455) * t699 + (qJD(1) * t45 + qJDD(1) * t98 + t183 * t76 + t184 * t75 - t21 * t308 + t22 * t307) * t691 + (t445 * t363 + t364 * t708) * t686 + t33 * t540 + t34 * t539 + (t426 * t78 - t427 * t77) * t706 + (t426 * t76 - t427 * t75) * t705 + (-t19 * t427 + t20 * t426 + (t426 * t77 + t427 * t78) * qJD(1)) * t701 + (-t21 * t427 + t22 * t426 + (t426 * t75 + t427 * t76) * qJD(1)) * t700 + (-t101 * t427 + t102 * t426) * t671;
t448 = t41 * t523 + t516 * t55;
t444 = t731 * t341 - t732 * t342 + (-t299 + t302) * qJD(1);
t441 = qJD(1) * t222 - t370 * t527 + t371 * t525;
t440 = -t370 * t528 + t371 * t526 + t570;
t438 = qJD(1) * t297 - t370 * t514 + t371 * t513;
t293 = t486 * qJD(3);
t294 = t315 * qJD(3);
t435 = qJD(1) * t310 - qJD(3) * t473 - t293 * t385 + t294 * t386;
t433 = -t385 * t709 + t451 * t386;
t104 = -t427 * t474 + t643;
t108 = t225 * t371 + t227 * t370;
t26 = t426 * t715 + t441 * t427;
t27 = t426 * t716 + t440 * t427;
t28 = t441 * t426 - t427 * t715;
t29 = t440 * t426 - t427 * t716;
t79 = -t463 - t618;
t80 = -t225 * t632 - t522;
t42 = t341 * t80 - t342 * t79 + t564;
t100 = t104 * qJD(1);
t81 = -t224 * t631 - t608;
t82 = -t225 * t631 + t607;
t43 = t341 * t82 - t342 * t81 + t100;
t430 = -t370 * t707 + t444 * t371;
t58 = t426 * t711 + t438 * t427;
t59 = t438 * t426 - t427 * t711;
t62 = t370 * t525 + t371 * t527;
t63 = t370 * t526 + t371 * t528;
t432 = (t426 * t80 - t427 * t79) * t703 + (t426 * t82 - t427 * t81) * t704 + (qJD(1) * t59 + qJDD(1) * t103 + t258 * t80 + t259 * t79 - t28 * t342 + t29 * t341) * t691 + (qJD(1) * t58 + qJDD(1) * t104 + t258 * t82 + t259 * t81 - t26 * t342 + t27 * t341) * t692 + (t426 * t430 - t427 * t454) * t693 + t43 * t539 + t42 * t540 + (t426 * t454 + t427 * t430) * t696 + (t444 * t370 + t371 * t707) * t686 + (-t107 * t427 + t108 * t426) * t671 + (t426 * t63 - t427 * t62 + (t107 * t426 + t108 * t427) * qJD(1)) * t685 + t449 + (-t28 * t427 + t29 * t426 + (t426 * t79 + t427 * t80) * qJD(1)) * t694 + (-t26 * t427 + t27 * t426 + (t426 * t81 + t427 * t82) * qJD(1)) * t695;
t296 = t317 * qJD(3);
t290 = t427 * t309;
t289 = t426 * t309;
t216 = pkin(3) * t626 + t290;
t215 = pkin(3) * t627 + t289;
t178 = qJD(1) * t212 - t395;
t177 = qJD(1) * t580 + t394;
t141 = t476 * qJD(3);
t119 = -t427 * t472 + t640;
t117 = t119 * qJD(1);
t94 = qJDD(1) * t269 + qJD(1) * (-qJD(1) * t557 + t578) + t467;
t93 = t580 * qJDD(1) + (-qJD(1) * t269 - t295) * qJD(1) + t575;
t67 = -qJD(3) * t477 + t150 * t386 + t152 * t385;
t66 = -t478 * qJD(3) + t151 * t386 + t153 * t385;
t65 = t435 * t426 - t427 * t710;
t64 = t426 * t710 + t435 * t427;
t61 = qJD(1) * t154 + qJDD(1) * t252 - t296 * t393 - t316 * t326 + t453;
t60 = -t296 * t565 + t316 * t327 + t547 * qJDD(1) + (-t155 + t603) * qJD(1) + t575;
t49 = qJD(3) * t492 + t117;
t48 = qJD(3) * t493 + t563;
t25 = qJD(1) * t139 + qJDD(1) * t230 - t256 * t341 - t258 * t303 + t434;
t24 = -t256 * t342 + t259 * t303 + t506 * qJDD(1) + (-t140 + t550) * qJD(1) + t457;
t18 = t139 * t342 + t140 * t341 + t229 * t258 - t230 * t259 + t469;
t9 = t115 * t308 + t116 * t307 - t145 * t258 - t146 * t259 + t183 * t213 - t184 * t214 + t341 * t86 + t342 * t85 + t469;
t1 = [(t118 + t122) * t697 + (t63 + t58) * t695 + (t102 + t99) * t706 + (t101 + t98) * t705 + (t62 + t59 + t43) * t694 + (-qJD(3) * t472 + t293 * t386 + t294 * t385 + t363 * t518 + t364 * t519 + t370 * t513 + t371 * t514) * qJD(1) + (t119 + t123) * t698 + (t103 + t107) * t703 + (t67 + t64) * t537 + (-t563 + ((t427 * t515 - t605 + t92) * t427 + (t426 * t515 + t521 + t91) * t426) * qJD(3) + t48) * t538 + (t117 + ((t90 - t188 + (t240 + t648) * t427 + t606) * t427 + t605 * t426) * qJD(3)) * t535 + (t57 + t44) * t701 + (-t564 + (t82 - t463 - t607) * t342 + (t426 * t517 - t179 + t81) * t341 + ((t223 + t480) * t341 + t517 * t342) * t427 + t42) * t696 + (-t616 + (t78 - t464 - t609) * t308 + (t426 * t520 - t169 + t77) * t307 + ((t202 + t482) * t307 + t520 * t308) * t427 + t33) * t702 + (t177 * t395 + t178 * (t574 + t578) + (t177 * (t541 + t681) * t427 + (t177 * (-rSges(3,3) - qJ(2)) + t178 * t541) * t426) * qJD(1) - (-qJD(1) * t268 - t177 - t332 + t394) * t178 + (t94 - g(2)) * t212 + (t93 - g(1)) * (t541 * t426 + t399 + t577)) * m(3) + (t104 + t108) * t704 + (-(-qJD(1) * t251 + t501 + t723 - t95) * t96 + t95 * (t362 + t395) + t96 * (t394 + t583) + (t316 * t673 - t675) * qJD(3) + ((-t95 * rSges(4,3) + t534 * t96) * t426 + (t95 * (-t317 - t372) - t96 * t425) * t427) * qJD(1) + (t61 - g(2)) * (t252 + t512) + (t60 - g(1)) * (t534 * t426 + t579 - t622)) * m(4) + (t49 + t66 + t65) * t536 + (t56 + t45 + t34) * t700 + (t97 + (t76 + (t203 * t427 + t204 * t426) * t363 + t524 + t610) * t308 + (-t205 * t634 + t619 + t75 + (t203 * t426 - t204 * t427) * t363 + t609) * t307) * t699 + (t100 + (t80 + (t224 * t427 + t225 * t426) * t370 + t522 + t608) * t342 + (-t226 * t629 + t618 + t79 + (t224 * t426 - t225 * t427) * t370 + t607) * t341) * t693 + (t54 * (t395 - t621) + t55 * (t257 + t394 + t586) + (-t246 * t55 + t286 * t674) * t387 + ((t54 * (t466 + t678) - t55 * t396) * t427 + (t54 * (t396 - rSges(6,3)) + t55 * t466) * t426) * qJD(1) - (qJD(1) * t615 + t446 - t54 + t719) * t55 + (t12 - g(2)) * (t214 + t255 - t620) + (t11 - g(1)) * (-t213 + t592)) * m(6) + (m(2) * (t344 ^ 2 + t346 ^ 2) + t473 + Icges(3,2) * t424 ^ 2 + (Icges(3,1) * t423 + 0.2e1 * Icges(3,4) * t424) * t423 + Icges(2,3) + t281 * t364 + t283 * t363 + t299 * t371 + t301 * t370) * qJDD(1) + (-(-qJD(1) * t229 + t452 + t719 - t72) * t73 + t72 * (t357 + t581) + t73 * (t471 + t584) + (-t267 * t73 + t426 * t672) * t420 + ((-t72 * rSges(5,3) + t73 * (-t319 - t359)) * t426 + (t72 * (-t319 - t721) - t73 * t418) * t427) * qJD(1) + (-g(2) + t25) * (-t418 * t426 + t230 + t306) + (-g(1) + t24) * (-t229 - t589)) * m(5) - m(2) * (-g(1) * t344 + g(2) * t346); (-m(3) - m(4) - m(5) - m(6)) * (g(1) * t426 - g(2) * t427) + 0.2e1 * (t11 * t692 + t12 * t691) * m(6) + 0.2e1 * (t24 * t692 + t25 * t691) * m(5) + 0.2e1 * (t60 * t692 + t61 * t691) * m(4) + 0.2e1 * (t691 * t94 + t692 * t93) * m(3); ((-t393 * t639 + t568) * t426 + (t450 + (t426 * t640 + t433) * qJD(3)) * t427) * t538 + ((t89 * t426 + t90 * t427) * qJD(1) + t496) * t536 + ((t385 * t588 + t386 * t587) * qJD(1) + (t451 * t385 + t386 * t709) * qJD(3)) * t686 + ((-t565 * t640 - t568) * t427 + (t450 + (t427 * t639 + t433) * qJD(3)) * t426) * t535 + (t426 * t67 - t427 * t66 + (t122 * t426 + t123 * t427) * qJD(1)) * t685 + t432 + (qJD(1) * t64 + qJD(3) * t497 + qJDD(1) * t119 + t326 * t92 + t327 * t91) * t692 + t48 * t540 + (qJD(1) * t65 + qJD(3) * t496 + qJDD(1) * t118 + t326 * t90 + t327 * t89) * t691 + ((t91 * t426 + t92 * t427) * qJD(1) + t497) * t537 + t49 * t539 + (-t122 * t427 + t123 * t426) * t671 + t492 * t698 + t493 * t697 + (-t55 * (-pkin(4) * t638 + qJD(1) * t216 + t516) - t41 * (t215 * t341 + t216 * t342 + t523) - (-t55 * t544 + (t386 * t495 + t41 * t533) * qJD(3)) * pkin(3) + t9 * (t507 + t611) + t41 * (t468 + t551) + t470 * t736 + (t12 * t470 + t55 * t456 + (-t176 - t614) * t652) * t426 - g(1) * (t290 - t246) - g(2) * (t289 - t245) - g(3) * (t369 + t503) + (qJD(1) * t215 + t427 * t456 + t727) * t54) * m(6) + (-(-t73 * t544 + (t386 * t494 + t533 * t68) * qJD(3)) * pkin(3) + t18 * (t602 + t611) + t68 * (t551 + t552) + (t504 * t72 + (qJD(1) * t73 + t24) * t459) * t427 + (t25 * t459 + t73 * t504 + (t672 + t68 * (-t176 - t230)) * qJD(1)) * t426 - g(3) * (t721 + t369) - t720 * t459 + t726) * m(5) + (-(t277 * t95 - t675) * qJD(1) - (t141 * (-t277 * t426 - t278 * t427) + t491 * t317) * qJD(3) + (qJD(3) * t483 + t251 * t326 - t252 * t327) * t476 + t141 * ((t251 * t427 - t252 * t426) * qJD(1) + t483) + t491 * t296 + (-t61 * t426 - t60 * t427 + (-t427 * t96 + t673) * qJD(1)) * t316 + g(1) * t278 + g(2) * t277 - g(3) * t317) * m(4); t432 + (t9 * t507 + t41 * t468 + (t505 * t55 - t614 * t652) * t426 - (-t55 * t638 + (-t55 * t566 + t41 * (-t341 * t426 - t342 * t427)) * t370) * pkin(4) - t448 - g(3) * t503 + (t427 * t505 - t328 + t727) * t54 + (-t720 + t725 + t736) * (-t286 - t689)) * m(6) + (t18 * t602 + t68 * (-t230 * t567 + t552) + t494 * t256 + (-t24 * t427 - t25 * t426 + (t426 * t72 - t427 * t73) * qJD(1)) * t303 + g(1) * t267 + g(2) * t266 - g(3) * t721 + t726) * m(5); t449 + (t9 * t604 + t41 * (-t214 * t567 + t553) + t495 * t210 + (-t11 * t427 - t725 + (-t427 * t55 + t674) * qJD(1)) * t286 - t510 * t54 - t448 + g(1) * t246 + g(2) * t245 - g(3) * t722) * m(6);];
tau = t1;
