% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:13
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:12:21
% EndTime: 2019-12-05 18:12:37
% DurationCPUTime: 6.84s
% Computational Cost: add. (12904->273), mult. (24768->365), div. (0->0), fcn. (29623->8), ass. (0->231)
t246 = sin(qJ(5));
t245 = cos(pkin(9));
t402 = pkin(6) + qJ(2);
t233 = t402 * t245;
t248 = sin(qJ(3));
t244 = sin(pkin(9));
t288 = t402 * t244;
t407 = cos(qJ(3));
t202 = t248 * t233 + t407 * t288;
t228 = t407 * t244 + t248 * t245;
t168 = -t228 * pkin(7) - t202;
t203 = t407 * t233 - t248 * t288;
t226 = t248 * t244 - t407 * t245;
t169 = -t226 * pkin(7) + t203;
t247 = sin(qJ(4));
t249 = cos(qJ(4));
t125 = t249 * t168 - t247 * t169;
t217 = t249 * t228;
t374 = t247 * t226;
t424 = t217 - t374;
t458 = -pkin(8) * t424 + t125;
t468 = t246 * t458;
t290 = -t468 / 0.2e1;
t126 = t247 * t168 + t249 * t169;
t425 = -t249 * t226 - t247 * t228;
t104 = pkin(8) * t425 + t126;
t406 = cos(qJ(5));
t474 = t406 * t104;
t96 = -t474 / 0.2e1;
t485 = t290 + t96;
t486 = 0.2e1 * t485;
t312 = -t406 / 0.2e1;
t479 = -t246 * t424 + t406 * t425;
t332 = t479 * qJD(3);
t335 = t479 * qJD(5);
t452 = qJD(4) * t479 + t332 + t335;
t420 = qJD(2) * t479;
t484 = t479 * qJD(1);
t440 = t406 * t424;
t441 = t246 * t425;
t455 = t440 + t441;
t387 = t455 ^ 2;
t388 = t479 ^ 2;
t480 = -t387 + t388;
t483 = t480 * qJD(1);
t472 = qJD(3) + qJD(4);
t475 = t246 * t104;
t467 = t406 * t458;
t94 = -t467 / 0.2e1;
t427 = t475 / 0.2e1 + t94;
t482 = 0.2e1 * t427;
t481 = t474 / 0.2e1;
t478 = t467 - t475;
t56 = t474 + t468;
t477 = t472 * t126;
t239 = -t245 * pkin(2) - pkin(1);
t208 = t226 * pkin(3) + t239;
t150 = -pkin(4) * t425 + t208;
t476 = t150 * t479;
t185 = -t440 / 0.2e1;
t282 = t440 / 0.2e1;
t466 = t185 + t282;
t473 = t466 * qJD(1);
t429 = qJD(4) + qJD(5);
t337 = t455 * qJD(1);
t471 = t479 * t337;
t470 = t150 * t455;
t469 = t246 * t455;
t305 = t406 * t249;
t377 = t246 * t247;
t223 = (t305 - t377) * pkin(3);
t311 = t249 * pkin(3) + pkin(4);
t234 = t406 * t311;
t214 = pkin(3) * t377 - t234;
t411 = t214 / 0.2e1;
t465 = -t223 / 0.2e1 - t411;
t280 = t246 * t311;
t306 = t406 * t247;
t215 = pkin(3) * t306 + t280;
t376 = t246 * t249;
t222 = (t306 + t376) * pkin(3);
t464 = -t215 / 0.2e1 + t222 / 0.2e1;
t385 = t424 ^ 2;
t386 = t425 ^ 2;
t456 = -t385 + t386;
t463 = t456 * qJD(1);
t461 = qJD(2) * t466 + qJD(3) * t486;
t445 = t424 * pkin(4);
t460 = t445 / 0.2e1;
t430 = t425 * qJD(1);
t459 = t424 * t430;
t451 = qJD(3) * t482;
t450 = t472 * t125;
t448 = -t424 / 0.2e1;
t412 = t425 / 0.2e1;
t322 = t425 * qJD(4);
t129 = t425 * qJD(3) + t322;
t423 = 0.2e1 * t412 * t246 + 0.2e1 * t282;
t436 = qJD(2) * t423;
t435 = qJD(2) * t425;
t434 = qJD(3) * t466;
t433 = qJD(3) * t423;
t431 = t423 * qJD(1);
t204 = t246 * pkin(4);
t418 = t204 * qJD(5);
t413 = t228 ^ 2;
t289 = t217 / 0.2e1;
t408 = t246 / 0.2e1;
t403 = t228 * pkin(3);
t397 = pkin(3) * qJD(4);
t396 = pkin(4) * qJD(4);
t395 = qJD(3) * pkin(3);
t155 = t403 + t445;
t6 = t150 * t155;
t392 = t6 * qJD(1);
t7 = t150 * t445;
t391 = t7 * qJD(1);
t11 = -t455 * t478 + t479 * t56;
t390 = t11 * qJD(1);
t250 = t464 * t455 - t465 * t479;
t253 = (-t469 / 0.2e1 + t479 * t312) * pkin(4);
t14 = t253 - t250;
t389 = t14 * qJD(1);
t30 = t208 * t403;
t371 = t30 * qJD(1);
t37 = t387 + t388;
t369 = t37 * qJD(1);
t57 = -t155 * t479 + t470;
t367 = t57 * qJD(1);
t58 = t155 * t455 + t476;
t366 = t58 * qJD(1);
t59 = -t125 * t424 + t126 * t425;
t365 = t59 * qJD(1);
t60 = t445 * t479 - t470;
t364 = t60 * qJD(1);
t61 = -t445 * t455 - t476;
t363 = t61 * qJD(1);
t265 = t455 * t411 + t479 * t215 / 0.2e1;
t62 = -t403 / 0.2e1 - t445 / 0.2e1 + t265;
t362 = t62 * qJD(1);
t258 = t312 * t455 + t408 * t479;
t66 = (t448 + t258) * pkin(4);
t360 = t66 * qJD(1);
t84 = t385 + t386;
t349 = t84 * qJD(1);
t237 = t244 ^ 2 + t245 ^ 2;
t346 = qJD(1) * t150;
t345 = qJD(1) * t208;
t108 = -t208 * t424 + t403 * t425;
t344 = t108 * qJD(1);
t109 = -t208 * t425 - t403 * t424;
t343 = t109 * qJD(1);
t264 = t247 * t412 + t249 * t448;
t113 = (-t228 / 0.2e1 + t264) * pkin(3);
t341 = t113 * qJD(1);
t130 = t202 * t228 - t203 * t226;
t340 = t130 * qJD(1);
t338 = t455 * qJD(4);
t336 = t455 * qJD(3);
t331 = t455 * qJD(5);
t154 = 0.2e1 * t289 - t374;
t329 = t154 * qJD(1);
t224 = t226 ^ 2;
t170 = t224 - t413;
t328 = t170 * qJD(1);
t194 = t289 - t217 / 0.2e1;
t326 = t194 * qJD(1);
t325 = t194 * qJD(4);
t324 = t424 * qJD(1);
t323 = t424 * qJD(3);
t319 = t424 * qJD(4);
t201 = t224 + t413;
t318 = t201 * qJD(1);
t317 = t226 * qJD(1);
t221 = t226 * qJD(3);
t316 = t228 * qJD(1);
t315 = t228 * qJD(3);
t230 = t237 * qJ(2);
t314 = t230 * qJD(1);
t313 = t237 * qJD(1);
t300 = t455 * t484;
t299 = t479 * t346;
t298 = t455 * t346;
t297 = t425 * t324;
t294 = t425 * t345;
t293 = t424 * t345;
t292 = t226 * t316;
t291 = t226 * t315;
t287 = t406 * qJD(4);
t286 = t406 * qJD(5);
t285 = pkin(3) * t472;
t284 = qJD(1) * t239 + qJD(2);
t283 = t467 / 0.2e1;
t281 = -t305 / 0.2e1;
t251 = t464 * t478 + t465 * t56;
t255 = (t312 * t56 + t478 * t408) * pkin(4);
t1 = t255 + t251;
t149 = t214 * t222 + t215 * t223;
t275 = -t1 * qJD(1) + t149 * qJD(3);
t274 = t429 * t466;
t16 = t96 + t481;
t273 = -t16 * qJD(1) + t222 * qJD(3);
t254 = t468 / 0.2e1;
t18 = t290 + t254;
t272 = -t18 * qJD(1) - t204 * qJD(3);
t19 = t481 + t254 + t485;
t271 = t19 * qJD(1) + t215 * qJD(3);
t266 = -t234 / 0.2e1 + pkin(4) * t312;
t205 = pkin(3) * t281 - t266;
t270 = t205 * qJD(3);
t22 = t94 + t283;
t269 = -t22 * qJD(1) - t214 * qJD(3);
t24 = t283 - t475 / 0.2e1 + t427;
t268 = -t24 * qJD(1) + t223 * qJD(3);
t267 = t154 * qJD(4) + t323;
t256 = t429 * t423 + t336;
t220 = t403 / 0.2e1;
t219 = t223 * qJD(4);
t218 = t222 * qJD(4);
t210 = t215 * qJD(5);
t209 = t214 * qJD(5);
t200 = (t281 + t377) * pkin(3) + t266;
t199 = -t204 / 0.2e1 - t280 / 0.2e1 + (-t306 - t376 / 0.2e1) * pkin(3);
t114 = t264 * pkin(3) + t220;
t106 = -t441 + 0.2e1 * t185;
t67 = t258 * pkin(4) + t460;
t63 = t220 + t460 + t265;
t31 = t429 * t479 + t332;
t15 = t253 + t250;
t2 = t255 - t251;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237 * qJD(2), t230 * qJD(2), -t291, t170 * qJD(3), 0, t291, 0, 0, t239 * t315, -t239 * t221, t201 * qJD(2), t130 * qJD(2), t129 * t424, t472 * t456, 0, (-t319 - t323) * t425, 0, 0, -t108 * qJD(3) + t208 * t319, -t109 * qJD(3) + t208 * t322, t84 * qJD(2), t59 * qJD(2) + t30 * qJD(3), t452 * t455, (qJD(3) + t429) * t480, 0, -(t331 + t336 + t338) * t479, 0, 0, t57 * qJD(3) - t60 * qJD(4) + t150 * t331, t58 * qJD(3) - t61 * qJD(4) + t150 * t335, qJD(2) * t37, qJD(2) * t11 + qJD(3) * t6 + qJD(4) * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t313, t314, 0, 0, 0, 0, 0, 0, 0, 0, t318, t340, 0, 0, 0, 0, 0, 0, t325, 0, t349, t114 * qJD(3) + t365, 0, 0, 0, 0, 0, 0, t274, 0, t369, t63 * qJD(3) + t67 * qJD(4) + t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t292, t328, -t221, t292, -t315, 0, -t203 * qJD(3) + t239 * t316, t202 * qJD(3) - t239 * t317, 0, 0, t459, t463, t129, -t297, -t267, 0, -t344 - t477, -t343 - t450, (-t247 * t424 - t249 * t425) * t395, t371 + t114 * qJD(2) + (t125 * t247 - t126 * t249) * t395, t300, t483, t31, -t471, -t256, 0, -qJD(3) * t56 + t429 * t486 + t367, -qJD(3) * t478 + t429 * t482 + t366, (t214 * t479 - t215 * t455) * qJD(3) + t15 * qJD(4), t392 + t63 * qJD(2) + (t214 * t56 + t215 * t478) * qJD(3) + t2 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t459, t463, t129, -t459, -t154 * qJD(3) - t319, 0, t194 * qJD(2) + t293 - t477, t294 - t450, 0, 0, t471, t483, t452, -t471, t106 * qJD(5) - t338 - t433, 0, -qJD(4) * t56 + qJD(5) * t486 - t364 + t461, -qJD(4) * t478 + qJD(5) * t482 - t363 + t451, t15 * qJD(3) + (-t406 * t479 - t469) * t396, t391 + t67 * qJD(2) + t2 * qJD(3) + (t246 * t478 - t406 * t56) * t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t471, t483, t452, -t471, t106 * qJD(4) - t331 - t433, 0, qJD(4) * t486 - t56 * qJD(5) + t298 + t461, qJD(4) * t482 - qJD(5) * t478 + t299 + t451, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313, -t314, 0, 0, 0, 0, 0, 0, t315, -t221, -t318, -t340, 0, 0, 0, 0, 0, 0, t267, t129, -t349, -t113 * qJD(3) - t365, 0, 0, 0, 0, 0, 0, t256, t31, -t369, -t62 * qJD(3) - t66 * qJD(4) - t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, -t317, 0, 0, 0, 0, 0, 0, 0, 0, t324, t430, 0, -t341, 0, 0, 0, 0, 0, 0, t337, t484, 0, -t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t329, t430, 0, 0, 0, 0, 0, 0, 0, 0, t431, t484, 0, -t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t431, t484, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t292, -t328, 0, -t292, 0, 0, -t284 * t228, t284 * t226, 0, 0, -t459, -t463, 0, t297, -t325, 0, -qJD(2) * t424 + t344, t343 - t435, 0, t113 * qJD(2) - t371, -t300, -t483, 0, t471, -t274, 0, -qJD(2) * t455 + t16 * qJD(4) - t19 * qJD(5) - t367, t24 * qJD(4) + t22 * qJD(5) - t366 - t420, -qJD(4) * t14, t62 * qJD(2) - t1 * qJD(4) - t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, t317, 0, 0, 0, 0, 0, 0, 0, 0, -t324, -t430, 0, t341, 0, 0, 0, 0, 0, 0, -t337, -t484, 0, t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t247 * t397, -t249 * t397, 0, 0, 0, 0, 0, 0, 0, 0, -t218 - t210, -t219 + t209, 0, t149 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t326, 0, -t247 * t285, -t249 * t285, 0, 0, 0, 0, 0, 0, -t473, 0, t199 * qJD(5) - t218 - t273, t200 * qJD(5) - t219 - t268, -t389, (-t222 * t406 + t223 * t246) * t396 + t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t473, 0, t199 * qJD(4) - t210 - t271, t200 * qJD(4) + t209 - t269, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t459, -t463, 0, t459, t194 * qJD(3), 0, -t154 * qJD(2) - t293, -t294 - t435, 0, 0, -t471, -t483, 0, t471, qJD(5) * t466 + t434, 0, -t16 * qJD(3) - t18 * qJD(5) + t364 - t436, -t24 * qJD(3) + t363 - t420, t14 * qJD(3), t66 * qJD(2) + t1 * qJD(3) - t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t329, -t430, 0, 0, 0, 0, 0, 0, 0, 0, -t431, -t484, 0, t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t326, 0, t247 * t395, t249 * t395, 0, 0, 0, 0, 0, 0, t473, 0, t273 - t418, -t205 * qJD(5) + t268, t389, -t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t418, -pkin(4) * t286, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t473, 0, -t204 * t429 + t272, (-t287 - t286) * pkin(4) - t270, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t471, -t483, 0, t471, -qJD(4) * t466 + t434, 0, t19 * qJD(3) + t18 * qJD(4) - t298 - t436, -t22 * qJD(3) - t299 - t420, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t431, -t484, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t473, 0, t204 * qJD(4) + t271, t205 * qJD(4) + t269, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t473, 0, t246 * t396 - t272, pkin(4) * t287 + t270, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
