% Calculate minimal parameter regressor of coriolis matrix for
% S5RPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:13
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:12:17
% EndTime: 2019-12-05 18:12:29
% DurationCPUTime: 3.67s
% Computational Cost: add. (5061->167), mult. (9870->222), div. (0->0), fcn. (12004->8), ass. (0->155)
t312 = qJD(4) + qJD(5);
t369 = qJD(3) + t312;
t151 = sin(qJ(5));
t154 = cos(qJ(5));
t149 = sin(pkin(9));
t150 = cos(pkin(9));
t153 = sin(qJ(3));
t282 = cos(qJ(3));
t132 = t282 * t149 + t153 * t150;
t155 = cos(qJ(4));
t123 = t155 * t132;
t130 = t153 * t149 - t282 * t150;
t152 = sin(qJ(4));
t246 = t152 * t130;
t298 = t123 - t246;
t278 = pkin(6) + qJ(2);
t136 = t278 * t149;
t137 = t278 * t150;
t160 = t153 * t136 - t282 * t137;
t87 = -t130 * pkin(7) - t160;
t262 = t152 * t87;
t180 = t282 * t136 + t153 * t137;
t163 = -t132 * pkin(7) - t180;
t300 = t155 * t163;
t320 = -t300 + t262;
t334 = -pkin(8) * t298 - t320;
t167 = -t155 * t130 - t152 * t132;
t326 = -t152 * t163 - t155 * t87;
t49 = -pkin(8) * t167 + t326;
t363 = t369 * (-t151 * t49 - t154 * t334);
t368 = t369 * (-t151 * t334 + t154 * t49);
t324 = t154 * t298;
t186 = t324 / 0.2e1;
t99 = -t324 / 0.2e1;
t344 = t99 + t186;
t364 = qJD(2) * t344 + t368;
t357 = -t151 * t298 + t154 * t167;
t217 = t357 * qJD(3);
t220 = t357 * qJD(5);
t330 = qJD(4) * t357 + t217 + t220;
t295 = qJD(2) * t357;
t358 = t357 * qJD(1);
t304 = t151 * t167;
t333 = t324 + t304;
t347 = -t333 ^ 2 + t357 ^ 2;
t356 = t347 * qJD(1);
t143 = -t150 * pkin(2) - pkin(1);
t115 = t130 * pkin(3) + t143;
t69 = -pkin(4) * t167 + t115;
t351 = t69 * t357;
t348 = t344 * qJD(1);
t345 = t333 * t69;
t221 = t333 * qJD(1);
t341 = qJD(3) + qJD(4);
t309 = t167 ^ 2 - t298 ^ 2;
t331 = t309 * qJD(1);
t329 = t341 * t326;
t283 = -t300 / 0.2e1;
t281 = pkin(4) * t298;
t327 = t357 * t221;
t288 = t167 * qJD(1);
t323 = t298 * t288;
t297 = 0.2e1 * t186 + t304;
t318 = qJD(2) * t297;
t317 = qJD(3) * t344;
t316 = qJD(3) * t297;
t313 = t297 * qJD(1);
t208 = t167 * qJD(4);
t59 = t167 * qJD(3) + t208;
t294 = qJD(2) * t167;
t286 = -pkin(4) / 0.2e1;
t185 = t123 / 0.2e1;
t280 = t132 * pkin(3);
t279 = t155 * pkin(3);
t273 = pkin(3) * qJD(4);
t272 = pkin(4) * qJD(4);
t271 = pkin(4) * qJD(5);
t270 = qJD(3) * pkin(3);
t254 = qJD(1) * t69;
t144 = pkin(4) + t279;
t248 = t151 * t144;
t247 = t151 * t155;
t244 = t154 * t144;
t243 = t154 * t152;
t74 = t280 + t281;
t17 = -t357 * t74 + t345;
t241 = t17 * qJD(1);
t18 = t333 * t74 + t351;
t240 = t18 * qJD(1);
t19 = t281 * t357 - t345;
t239 = t19 * qJD(1);
t20 = -t281 * t333 - t351;
t238 = t20 * qJD(1);
t23 = t283 + t300 / 0.2e1;
t235 = t23 * qJD(1);
t56 = -t115 * t298 + t167 * t280;
t225 = t56 * qJD(1);
t57 = -t115 * t167 - t280 * t298;
t224 = t57 * qJD(1);
t216 = t333 * qJD(5);
t73 = 0.2e1 * t185 - t246;
t214 = t73 * qJD(1);
t88 = t130 ^ 2 - t132 ^ 2;
t213 = t88 * qJD(1);
t140 = t149 ^ 2 + t150 ^ 2;
t212 = qJD(1) * t115;
t106 = t185 - t123 / 0.2e1;
t211 = t106 * qJD(1);
t210 = t106 * qJD(4);
t209 = t298 * qJD(1);
t205 = t298 * qJD(4);
t204 = t130 * qJD(1);
t126 = t130 * qJD(3);
t203 = t132 * qJD(1);
t202 = t132 * qJD(3);
t133 = t140 * qJ(2);
t201 = t133 * qJD(1);
t200 = t140 * qJD(1);
t197 = t333 * t358;
t196 = t357 * t254;
t195 = t333 * t254;
t194 = -t279 / 0.2e1;
t189 = t167 * t212;
t188 = t298 * t212;
t187 = t130 * t203;
t182 = pkin(3) * t341;
t181 = pkin(4) * t312;
t179 = qJD(1) * t143 + qJD(2);
t127 = (t243 + t247) * pkin(3);
t174 = t127 * qJD(3);
t164 = t194 + pkin(4) / 0.2e1 + t144 / 0.2e1;
t113 = t164 * t151;
t173 = t113 * qJD(3);
t114 = t164 * t154;
t172 = t114 * qJD(3);
t141 = t151 * t152 * pkin(3);
t121 = t141 - t244;
t171 = t121 * qJD(3);
t122 = pkin(3) * t243 + t248;
t170 = t122 * qJD(3);
t128 = t154 * t279 - t141;
t169 = t128 * qJD(3);
t168 = t312 * t344;
t166 = qJD(3) * t298 + t73 * qJD(4);
t156 = qJD(3) * t333 + t312 * t297;
t125 = t128 * qJD(4);
t124 = t127 * qJD(4);
t117 = t122 * qJD(5);
t116 = t121 * qJD(5);
t112 = t141 - t244 / 0.2e1 + (t286 + t194) * t154;
t111 = t151 * t286 - t248 / 0.2e1 + (-t243 - t247 / 0.2e1) * pkin(3);
t55 = -t304 + 0.2e1 * t99;
t24 = t262 + 0.2e1 * t283;
t13 = t312 * t357 + t217;
t1 = [0, 0, 0, 0, 0, t140 * qJD(2), t133 * qJD(2), -t130 * t202, t88 * qJD(3), 0, 0, 0, t143 * t202, -t143 * t126, t59 * t298, t341 * t309, 0, 0, 0, -t56 * qJD(3) + t115 * t205, -t57 * qJD(3) + t115 * t208, t330 * t333, t369 * t347, 0, 0, 0, t17 * qJD(3) - t19 * qJD(4) + t216 * t69, t18 * qJD(3) - t20 * qJD(4) + t220 * t69; 0, 0, 0, 0, 0, t200, t201, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t210, 0, 0, 0, 0, 0, 0, t168, 0; 0, 0, 0, 0, 0, 0, 0, -t187, t213, -t126, -t202, 0, qJD(3) * t160 + t143 * t203, qJD(3) * t180 - t143 * t204, t323, t331, t59, -t166, 0, -t225 + t329, qJD(3) * t320 + t24 * qJD(4) - t224, t197, t356, t13, -t156, 0, t241 + t368, t240 + t363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t323, t331, t59, -t73 * qJD(3) - t205, 0, t106 * qJD(2) + t188 + t329, t24 * qJD(3) + qJD(4) * t320 + t189, t327, t356, t330, -qJD(4) * t333 + t55 * qJD(5) - t316, 0, -t239 + t364, -t238 + t363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t327, t356, t330, t55 * qJD(4) - t216 - t316, 0, t195 + t364, t196 + t363; 0, 0, 0, 0, 0, -t200, -t201, 0, 0, 0, 0, 0, t202, -t126, 0, 0, 0, 0, 0, t166, t59, 0, 0, 0, 0, 0, t156, t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203, -t204, 0, 0, 0, 0, 0, t209, t288, 0, 0, 0, 0, 0, t221, t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, t288, 0, 0, 0, 0, 0, t313, t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t313, t358; 0, 0, 0, 0, 0, 0, 0, t187, -t213, 0, 0, 0, -t179 * t132, t179 * t130, -t323, -t331, 0, -t210, 0, -qJD(2) * t298 + t225, t23 * qJD(4) + t224 - t294, -t197, -t356, 0, -t168, 0, -qJD(2) * t333 - t241, -t240 - t295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, t204, 0, 0, 0, 0, 0, -t209, -t288, 0, 0, 0, 0, 0, -t221, -t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t152 * t273, -t155 * t273, 0, 0, 0, 0, 0, -t124 - t117, -t125 + t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, 0, -t152 * t182, -t155 * t182 + t235, 0, 0, 0, -t348, 0, t111 * qJD(5) - t124 - t174, t112 * qJD(5) - t125 - t169; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t348, 0, t111 * qJD(4) - t117 - t170, t112 * qJD(4) + t116 + t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t323, -t331, 0, t106 * qJD(3), 0, -t73 * qJD(2) - t188, -t23 * qJD(3) - t189 - t294, -t327, -t356, 0, qJD(5) * t344 + t317, 0, t239 - t318, t238 - t295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, -t288, 0, 0, 0, 0, 0, -t313, -t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, 0, t152 * t270, t155 * t270 - t235, 0, 0, 0, t348, 0, -t113 * qJD(5) + t174, -t114 * qJD(5) + t169; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151 * t271, -t154 * t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t348, 0, -t151 * t181 - t173, -t154 * t181 - t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327, -t356, 0, -qJD(4) * t344 + t317, 0, -t195 - t318, -t196 - t295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313, -t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t348, 0, t113 * qJD(4) + t170, t114 * qJD(4) - t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t348, 0, t151 * t272 + t173, t154 * t272 + t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
