% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PPRRP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d3,d4,theta1,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:07
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PPRRP1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PPRRP1_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PPRRP1_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PPRRP1_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PPRRP1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PPRRP1_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:07:23
% EndTime: 2019-12-05 15:07:29
% DurationCPUTime: 6.21s
% Computational Cost: add. (14755->411), mult. (28219->512), div. (0->0), fcn. (18433->8), ass. (0->293)
t698 = sin(pkin(8));
t699 = sin(pkin(7));
t701 = cos(pkin(7));
t669 = t701 * g(1) + t699 * g(2);
t695 = g(3) - qJDD(1);
t700 = cos(pkin(8));
t637 = -t698 * t669 + t700 * t695;
t638 = -t700 * t669 - t698 * t695;
t704 = sin(qJ(3));
t706 = cos(qJ(3));
t577 = t706 * t637 + t704 * t638;
t578 = -t704 * t637 + t706 * t638;
t733 = t704 * t577 + t706 * t578;
t521 = t706 * t577 - t704 * t578;
t766 = t700 * t521;
t480 = -t698 * t733 + t766;
t771 = t698 * t521;
t798 = t700 * t733 + t771;
t668 = t699 * g(1) - t701 * g(2);
t662 = -qJDD(2) + t668;
t745 = t704 * qJDD(3);
t789 = qJD(3) ^ 2;
t664 = t706 * t789 + t745;
t613 = pkin(5) * t664 - t706 * t662;
t744 = t706 * qJDD(3);
t665 = -t704 * t789 + t744;
t719 = -pkin(5) * t665 - t704 * t662;
t731 = -t698 * t664 + t700 * t665;
t797 = -qJ(2) * t731 + t698 * t613 + t700 * t719;
t703 = sin(qJ(4));
t705 = cos(qJ(4));
t680 = t703 * t789 * t705;
t671 = qJDD(4) + t680;
t783 = pkin(4) * t671;
t602 = t700 * t664 + t698 * t665;
t538 = qJ(2) * t602 + t700 * t613 - t698 * t719;
t747 = qJD(3) * qJD(5);
t740 = t705 * t747;
t683 = 0.2e1 * t740;
t567 = -t789 * pkin(3) + qJDD(3) * pkin(6) + t578;
t556 = t705 * t567 - t703 * t662;
t748 = qJD(3) * qJD(4);
t685 = t703 * t748;
t689 = t705 * qJDD(3);
t658 = t689 - t685;
t750 = qJD(3) * t703;
t670 = qJD(4) * pkin(4) - qJ(5) * t750;
t694 = t705 ^ 2;
t691 = t694 * t789;
t718 = pkin(4) * t691 - t658 * qJ(5) + qJD(4) * t670 - t556;
t518 = t683 - t718;
t693 = t703 ^ 2;
t749 = t693 * t789;
t666 = t691 + t749;
t501 = pkin(4) * t666 + qJ(5) * t689 + t518;
t644 = t705 * t662;
t686 = t705 * t748;
t746 = t703 * qJDD(3);
t657 = t686 + t746;
t711 = t644 + (t657 - t686) * qJ(5) - t783;
t728 = t567 + 0.2e1 * t747;
t506 = (qJ(5) * qJDD(3) + t728) * t703 + t711;
t792 = -t705 * t501 - t703 * t506;
t566 = -qJDD(3) * pkin(3) - t789 * pkin(6) + t577;
t542 = -t658 * pkin(4) - qJ(5) * t691 + t670 * t750 + qJDD(5) + t566;
t707 = qJD(4) ^ 2;
t676 = -t707 - t749;
t528 = -qJ(5) * t676 + t542;
t656 = 0.2e1 * t686 + t746;
t672 = qJDD(4) - t680;
t618 = -pkin(4) * t656 - qJ(5) * t672;
t791 = -t703 * t528 - t705 * t618;
t763 = t703 * t567;
t555 = t644 + t763;
t493 = t703 * t555 + t705 * t556;
t678 = -t691 - t707;
t762 = t703 * t671;
t627 = t705 * t678 - t762;
t659 = t689 - 0.2e1 * t685;
t585 = t704 * t627 + t706 * t659;
t587 = t706 * t627 - t704 * t659;
t531 = t700 * t585 + t698 * t587;
t788 = pkin(1) * t531;
t787 = pkin(2) * t521;
t759 = t705 * t671;
t623 = t703 * t678 + t759;
t786 = pkin(3) * t623;
t761 = t703 * t672;
t625 = t705 * t676 - t761;
t785 = pkin(3) * t625;
t509 = t728 * t703 + t711;
t784 = pkin(4) * t509;
t782 = pkin(5) * t585;
t758 = t705 * t672;
t629 = -t703 * t676 - t758;
t586 = t704 * t629 - t706 * t656;
t781 = pkin(5) * t586;
t751 = t693 + t694;
t663 = t751 * qJDD(3);
t608 = t704 * t663 + t706 * t666;
t780 = pkin(5) * t608;
t779 = pkin(6) * t623;
t778 = pkin(6) * t625;
t533 = -t698 * t585 + t700 * t587;
t777 = qJ(1) * (t699 * t533 - t701 * t623);
t588 = t706 * t629 + t704 * t656;
t534 = -t698 * t586 + t700 * t588;
t776 = qJ(1) * (t699 * t534 - t701 * t625);
t609 = t706 * t663 - t704 * t666;
t561 = -t698 * t608 + t700 * t609;
t775 = qJ(1) * t561;
t774 = qJ(2) * t531;
t532 = t700 * t586 + t698 * t588;
t773 = qJ(2) * t532;
t560 = t700 * t608 + t698 * t609;
t772 = qJ(2) * t560;
t639 = t698 * t662;
t768 = t699 * t662;
t767 = t699 * t695;
t641 = t700 * t662;
t642 = t701 * t662;
t765 = t701 * t695;
t764 = t703 * t509;
t562 = t703 * t566;
t760 = t705 * t509;
t563 = t705 * t566;
t757 = -pkin(1) * t623 + qJ(2) * t533;
t756 = -pkin(1) * t625 + qJ(2) * t534;
t755 = -pkin(3) * t566 + pkin(6) * t493;
t754 = pkin(3) * t659 + pkin(6) * t627;
t753 = -pkin(3) * t656 + pkin(6) * t629;
t752 = pkin(3) * t666 + pkin(6) * t663;
t743 = pkin(4) * t746;
t742 = -t563 + t754;
t584 = pkin(2) * t586;
t741 = t584 + t753;
t739 = t703 * t745;
t738 = t703 * t744;
t737 = -pkin(2) * t623 + pkin(5) * t587;
t736 = -pkin(2) * t625 + pkin(5) * t588;
t720 = -pkin(2) * t664 - t578;
t540 = pkin(1) * t602 - t720;
t735 = -qJ(1) * t731 + t540;
t714 = pkin(2) * t665 - t577;
t541 = -pkin(1) * t731 - t714;
t734 = -qJ(1) * t602 + t541;
t732 = t698 * t637 + t700 * t638;
t729 = -t699 * t668 - t701 * t669;
t727 = t752 - t792;
t726 = t753 - t791;
t725 = t752 + t493;
t583 = pkin(2) * t585;
t724 = t583 + t742;
t723 = t704 * t680;
t722 = t706 * t680;
t482 = t704 * t493 - t706 * t566;
t721 = pkin(2) * t482 + t755;
t492 = t705 * t555 - t703 * t556;
t575 = t700 * t637 - t698 * t638;
t717 = t701 * t668 - t699 * t669;
t716 = -pkin(1) * t532 - t741;
t600 = pkin(2) * t608;
t715 = -pkin(1) * t560 - t600 - t752;
t477 = t705 * t518 + t764;
t485 = -pkin(4) * t542 + qJ(5) * t518;
t713 = -pkin(3) * t542 + pkin(6) * t477 + qJ(5) * t764 + t705 * t485;
t508 = pkin(4) * t659 + qJ(5) * t678 - t542;
t712 = -qJ(5) * t762 + t705 * t508 + t754;
t710 = pkin(4) * t676 + t718;
t709 = t583 + t712;
t461 = t704 * t477 - t706 * t542;
t708 = pkin(2) * t461 + t713;
t677 = t691 - t707;
t675 = t707 - t749;
t673 = t703 * t686;
t667 = -t691 + t749;
t654 = pkin(1) * t662;
t653 = t751 * t748;
t636 = t704 * qJDD(4) + t706 * t653;
t635 = t705 * t657 - t693 * t748;
t634 = -t706 * qJDD(4) + t704 * t653;
t633 = -t703 * t658 - t694 * t748;
t628 = -t703 * t675 + t759;
t626 = t705 * t677 - t761;
t624 = t705 * t675 + t762;
t622 = t703 * t677 + t758;
t621 = t705 * t658 - t673;
t620 = -t703 * t657 - t673;
t599 = pkin(5) * t609;
t598 = -t703 * t656 + t705 * t659;
t597 = t705 * t656 + t703 * t659;
t596 = t706 * t635 - t723;
t595 = t706 * t633 + t723;
t594 = t704 * t635 + t722;
t593 = t704 * t633 - t722;
t592 = t706 * t628 + t739;
t591 = t706 * t626 + t704 * t689;
t590 = t704 * t628 - t738;
t589 = t704 * t626 - t705 * t744;
t580 = t706 * t598 + t704 * t667;
t579 = t704 * t598 - t706 * t667;
t572 = -t698 * t634 + t700 * t636;
t571 = t700 * t634 + t698 * t636;
t569 = t701 * t572;
t568 = t699 * t572;
t559 = qJ(2) * t732 + t654;
t558 = qJ(2) * t561;
t557 = t701 * t775;
t552 = -t698 * t594 + t700 * t596;
t551 = -t698 * t593 + t700 * t595;
t550 = t700 * t594 + t698 * t596;
t549 = t700 * t593 + t698 * t595;
t548 = -t698 * t590 + t700 * t592;
t547 = -t698 * t589 + t700 * t591;
t546 = t700 * t590 + t698 * t592;
t545 = t700 * t589 + t698 * t591;
t544 = t563 - t778;
t543 = t562 - t779;
t527 = t556 - t785;
t526 = t555 - t786;
t524 = -t698 * t579 + t700 * t580;
t523 = t700 * t579 + t698 * t580;
t517 = t701 * t552 - t699 * t620;
t516 = t701 * t551 + t699 * t621;
t515 = t699 * t552 + t701 * t620;
t514 = t699 * t551 - t701 * t621;
t513 = t701 * t548 + t699 * t624;
t512 = t701 * t547 + t699 * t622;
t511 = t699 * t548 - t701 * t624;
t510 = t699 * t547 - t701 * t622;
t505 = pkin(2) * t662 + pkin(5) * t733;
t500 = qJ(1) * (t701 * t534 + t699 * t625);
t499 = qJ(1) * (t701 * t533 + t699 * t623);
t497 = t701 * t524 + t699 * t597;
t496 = t699 * t524 - t701 * t597;
t495 = t683 - t710 - t785;
t494 = t509 - t783 - t786;
t489 = -qJ(5) * t759 - t703 * t508 - t779;
t488 = t705 * t528 - t703 * t618 - t778;
t487 = t706 * t492 - t780;
t486 = t704 * t492 + t599;
t483 = t706 * t493 + t704 * t566;
t476 = t703 * t518 - t760;
t474 = -t704 * t527 + t706 * t544 - t781;
t473 = -t704 * t526 + t706 * t543 - t782;
t472 = -t562 + t716;
t471 = -t724 - t788;
t470 = -t703 * t501 + t705 * t506;
t469 = t706 * t527 + t704 * t544 + t736;
t468 = t706 * t526 + t704 * t543 + t737;
t467 = t715 - t493;
t466 = -pkin(4) * t739 + t706 * t470 - t780;
t465 = pkin(4) * t738 + t704 * t470 + t599;
t464 = -t709 - t788;
t463 = t716 + t791;
t462 = t706 * t477 + t704 * t542;
t460 = pkin(1) * t480 + t787;
t459 = -pkin(3) * t476 + t784;
t458 = t706 * t488 - t704 * t495 - t781;
t457 = t706 * t489 - t704 * t494 - t782;
t456 = t715 + t792;
t455 = t704 * t488 + t706 * t495 + t736;
t454 = t704 * t489 + t706 * t494 + t737;
t453 = -t698 * t482 + t700 * t483;
t452 = t700 * t482 + t698 * t483;
t451 = -t698 * t486 + t700 * t487 - t772;
t450 = t700 * t486 + t698 * t487 + t558;
t449 = pkin(5) * t766 + qJ(2) * t480 - t698 * t505;
t448 = pkin(5) * t771 + qJ(2) * t798 + t700 * t505 + t654;
t447 = -pkin(5) * t482 - (pkin(3) * t704 - pkin(6) * t706) * t492;
t446 = -pkin(6) * t476 + qJ(5) * t760 - t703 * t485;
t445 = -t698 * t469 + t700 * t474 - t773;
t444 = -t698 * t468 + t700 * t473 - t774;
t443 = t700 * t469 + t698 * t474 + t756;
t442 = t700 * t468 + t698 * t473 + t757;
t441 = -t698 * t461 + t700 * t462;
t440 = t700 * t461 + t698 * t462;
t439 = -t698 * t465 + t700 * t466 - t772;
t438 = t700 * t465 + t698 * t466 + t558;
t437 = pkin(5) * t483 - (-pkin(3) * t706 - pkin(6) * t704 - pkin(2)) * t492;
t436 = -t698 * t455 + t700 * t458 - t773;
t435 = -t698 * t454 + t700 * t457 - t774;
t434 = t700 * t455 + t698 * t458 + t756;
t433 = t700 * t454 + t698 * t457 + t757;
t432 = -pkin(1) * t452 - t721;
t431 = -pkin(5) * t461 + t706 * t446 - t704 * t459;
t430 = -pkin(2) * t476 + pkin(5) * t462 + t704 * t446 + t706 * t459;
t429 = -pkin(1) * t440 - t708;
t428 = -qJ(2) * t452 - t698 * t437 + t700 * t447;
t427 = pkin(1) * t492 + qJ(2) * t453 + t700 * t437 + t698 * t447;
t426 = -qJ(2) * t440 - t698 * t430 + t700 * t431;
t425 = -pkin(1) * t476 + qJ(2) * t441 + t700 * t430 + t698 * t431;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t767, -t765, -t717, -qJ(1) * t717, 0, 0, 0, 0, 0, 0, -t699 * t637 - t698 * t642, -t699 * t638 - t700 * t642, t701 * t575, -qJ(1) * (t699 * t732 + t642) - (t699 * pkin(1) - t701 * qJ(2)) * t575, 0, 0, t701 * t731, 0, -t701 * t602, t699 * qJDD(3), -t699 * t734 + t701 * t797, t701 * t538 - t699 * t735, t701 * t480, t701 * t449 - t699 * t460 - qJ(1) * (t699 * t798 + t642), t517, t497, t513, t516, t512, t569, t701 * t444 - t699 * t471 - t777, t701 * t445 - t699 * t472 - t776, t701 * t451 + (-t467 - t775) * t699, t701 * t428 - t699 * t432 - qJ(1) * (t699 * t453 + t492 * t701), t517, t497, t513, t516, t512, t569, t701 * t435 - t699 * t464 - t777, t701 * t436 - t699 * t463 - t776, t701 * t439 + (-t456 - t775) * t699, t701 * t426 - t699 * t429 - qJ(1) * (t699 * t441 - t701 * t476); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t765, -t767, t729, qJ(1) * t729, 0, 0, 0, 0, 0, 0, t701 * t637 - t698 * t768, t701 * t638 - t699 * t641, t699 * t575, qJ(1) * (t701 * t732 - t768) - (-t701 * pkin(1) - t699 * qJ(2)) * t575, 0, 0, t699 * t731, 0, -t699 * t602, -t701 * qJDD(3), t699 * t797 + t701 * t734, t699 * t538 + t701 * t735, t699 * t480, t699 * t449 + t701 * t460 + qJ(1) * (t701 * t798 - t768), t515, t496, t511, t514, t510, t568, t699 * t444 + t701 * t471 + t499, t699 * t445 + t701 * t472 + t500, t699 * t451 + t701 * t467 + t557, t699 * t428 + t701 * t432 + qJ(1) * (t701 * t453 - t492 * t699), t515, t496, t511, t514, t510, t568, t699 * t435 + t701 * t464 + t499, t699 * t436 + t701 * t463 + t500, t699 * t439 + t701 * t456 + t557, t699 * t426 + t701 * t429 + qJ(1) * (t701 * t441 + t699 * t476); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t668, t669, 0, 0, 0, 0, 0, 0, 0, 0, t641, -t639, t732, t559, 0, 0, t602, 0, t731, 0, -t538, t797, t798, t448, t550, t523, t546, t549, t545, t571, t442, t443, t450, t427, t550, t523, t546, t549, t545, t571, t433, t434, t438, t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t695, -t668, 0, 0, 0, 0, 0, 0, 0, -t639, -t641, t575, qJ(2) * t575, 0, 0, t731, 0, -t602, 0, t797, t538, t480, t449, t552, t524, t548, t551, t547, t572, t444, t445, t451, t428, t552, t524, t548, t551, t547, t572, t435, t436, t439, t426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t695, 0, -t669, 0, 0, 0, 0, 0, 0, 0, t637, t638, 0, pkin(1) * t575, 0, 0, 0, 0, 0, -qJDD(3), t541, t540, 0, t460, t620, -t597, -t624, -t621, -t622, 0, t471, t472, t467, t432, t620, -t597, -t624, -t621, -t622, 0, t464, t463, t456, t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t668, t669, 0, 0, 0, 0, 0, 0, 0, 0, t641, -t639, t732, t559, 0, 0, t602, 0, t731, 0, -t538, t797, t798, t448, t550, t523, t546, t549, t545, t571, t442, t443, t450, t427, t550, t523, t546, t549, t545, t571, t433, t434, t438, t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t662, t637, 0, 0, 0, t665, 0, -t664, 0, t719, t613, t521, pkin(5) * t521, t596, t580, t592, t595, t591, t636, t473, t474, t487, t447, t596, t580, t592, t595, t591, t636, t457, t458, t466, t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t662, 0, t638, 0, 0, 0, t664, 0, t665, 0, -t613, t719, t733, t505, t594, t579, t590, t593, t589, t634, t468, t469, t486, t437, t594, t579, t590, t593, t589, t634, t454, t455, t465, t430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t637, -t638, 0, 0, 0, 0, 0, 0, 0, qJDD(3), t714, t720, 0, -t787, -t620, t597, t624, t621, t622, 0, t724, t562 + t741, t600 + t725, t721, -t620, t597, t624, t621, t622, 0, t709, t584 + t726, t600 + t727, t708; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), 0, -t789, 0, 0, -t662, t577, 0, t635, t598, t628, t633, t626, t653, t543, t544, t492, pkin(6) * t492, t635, t598, t628, t633, t626, t653, t489, t488, t470, t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t789, 0, qJDD(3), 0, t662, 0, t578, 0, t680, -t667, -t746, -t680, -t689, -qJDD(4), t526, t527, 0, pkin(3) * t492, t680, -t667, -t746, -t680, -t689, -qJDD(4), t494, t495, t743, t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t577, -t578, 0, 0, -t620, t597, t624, t621, t622, 0, t742, t562 + t753, t725, t755, -t620, t597, t624, t621, t622, 0, t712, t726, t727, t713; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t657, t659, t671, -t686, t677, t686, 0, t566, t555, 0, t657, t659, t671, -t686, t677, t686, -qJ(5) * t671, t528, t506, qJ(5) * t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t685, t656, t675, t658, t672, -t685, -t566, 0, t556, 0, t685, t656, t675, t658, t672, -t685, t508, t618, t501, t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t680, t667, t746, t680, t689, qJDD(4), -t555, -t556, 0, 0, -t680, t667, t746, t680, t689, qJDD(4), -0.2e1 * t703 * t747 - t711 - t763 + t783, t710 - 0.2e1 * t740, -t743, -t784; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t657, t659, t671, -t686, t677, t686, 0, t542, t509, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t685, t656, t675, t658, t672, -t685, -t542, 0, t518, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t680, t667, t746, t680, t689, qJDD(4), -t509, -t518, 0, 0;];
m_new_reg = t1;
