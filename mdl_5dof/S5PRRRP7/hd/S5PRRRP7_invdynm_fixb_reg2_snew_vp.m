% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PRRRP7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d2,d3,d4,theta1]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:57
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PRRRP7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRP7_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRP7_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRP7_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRP7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRRRP7_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:56:49
% EndTime: 2019-12-05 16:57:03
% DurationCPUTime: 15.05s
% Computational Cost: add. (57202->637), mult. (112272->879), div. (0->0), fcn. (79148->10), ass. (0->455)
t1091 = sin(qJ(4));
t1094 = cos(qJ(4));
t1092 = sin(qJ(3));
t1190 = qJD(2) * t1092;
t1045 = -t1094 * qJD(3) + t1091 * t1190;
t1047 = t1091 * qJD(3) + t1094 * t1190;
t1004 = t1047 * t1045;
t1071 = qJD(3) * t1190;
t1095 = cos(qJ(3));
t1075 = t1095 * qJDD(2);
t1176 = t1075 - t1071;
t1042 = -qJDD(4) + t1176;
t1241 = t1004 + t1042;
t1242 = t1241 * pkin(4);
t1086 = sin(pkin(5));
t1088 = cos(pkin(5));
t1085 = sin(pkin(9));
t1087 = cos(pkin(9));
t1164 = t1085 * g(1) - t1087 * g(2);
t1211 = g(3) - qJDD(1);
t1024 = t1086 * t1164 + t1088 * t1211;
t1016 = t1095 * t1024;
t1217 = pkin(3) * t1095;
t1155 = -pkin(8) * t1092 - t1217;
t1048 = t1155 * qJD(2);
t1233 = qJD(3) ^ 2;
t1097 = qJD(2) ^ 2;
t1057 = t1087 * g(1) + t1085 * g(2);
t1093 = sin(qJ(2));
t1096 = cos(qJ(2));
t1240 = -t1086 * t1211 + t1088 * t1164;
t980 = -t1096 * t1057 + t1240 * t1093;
t971 = -t1097 * pkin(2) + qJDD(2) * pkin(7) + t980;
t905 = (qJD(2) * t1048 + t971) * t1092 - qJDD(3) * pkin(3) - t1233 * pkin(8) + t1016;
t1198 = t1091 * t1241;
t1193 = t1094 * t1241;
t1051 = t1075 - 0.2e1 * t1071;
t1005 = t1095 * t1051;
t1180 = t1095 * qJD(2);
t1068 = -qJD(4) + t1180;
t1017 = -t1068 * pkin(4) - t1047 * qJ(5);
t1040 = t1045 ^ 2;
t1072 = qJD(3) * t1180;
t1173 = t1092 * qJDD(2);
t1050 = t1072 + t1173;
t1161 = -t1094 * qJDD(3) + t1091 * t1050;
t988 = -t1047 * qJD(4) - t1161;
t863 = -t988 * pkin(4) - t1040 * qJ(5) + t1047 * t1017 + qJDD(5) + t905;
t1026 = t1045 * t1068;
t989 = -t1045 * qJD(4) + t1091 * qJDD(3) + t1094 * t1050;
t1239 = t1026 + t989;
t1238 = t1085 * t1211;
t1237 = t1087 * t1211;
t1235 = -t1087 * t1057 - t1085 * t1164;
t961 = (qJD(4) + t1068) * t1047 + t1161;
t1234 = -t1085 * t1057 + t1087 * t1164;
t1041 = t1047 ^ 2;
t1065 = t1068 ^ 2;
t965 = -t1026 + t989;
t894 = t1091 * t965 - t1094 * t961;
t975 = -t1040 - t1041;
t869 = t1092 * t894 - t1095 * t975;
t1232 = pkin(2) * t869;
t992 = -t1065 - t1040;
t924 = t1094 * t992 + t1198;
t960 = (qJD(4) - t1068) * t1047 + t1161;
t879 = t1092 * t924 - t1095 * t960;
t1231 = pkin(2) * t879;
t976 = -t1004 + t1042;
t1194 = t1094 * t976;
t998 = -t1041 - t1065;
t935 = -t1091 * t998 + t1194;
t882 = t1092 * t935 - t1095 * t1239;
t1230 = pkin(2) * t882;
t892 = -t1091 * t961 - t1094 * t965;
t1229 = pkin(3) * t892;
t923 = t1091 * t992 - t1193;
t1228 = pkin(3) * t923;
t1199 = t1091 * t976;
t934 = t1094 * t998 + t1199;
t1227 = pkin(3) * t934;
t1152 = t1050 + t1072;
t979 = -t1093 * t1057 - t1240 * t1096;
t970 = -qJDD(2) * pkin(2) - t1097 * pkin(7) + t979;
t1098 = -pkin(3) * t1051 - t1152 * pkin(8) + t970;
t937 = -t1092 * t1024 + t1095 * t971;
t906 = -t1233 * pkin(3) + qJDD(3) * pkin(8) + t1048 * t1180 + t937;
t861 = t1091 * t906 - t1094 * t1098;
t1101 = -qJ(5) * t1026 + 0.2e1 * qJD(5) * t1047 + t1242 + t861;
t830 = t989 * qJ(5) + t1101;
t1226 = pkin(4) * t830;
t1225 = pkin(4) * t965;
t1224 = pkin(7) * t869;
t1223 = pkin(7) * t879;
t1222 = pkin(7) * t882;
t1221 = pkin(8) * t892;
t1220 = pkin(8) * t923;
t1219 = pkin(8) * t934;
t1218 = pkin(3) * t1092;
t1216 = pkin(6) * t1086;
t1215 = pkin(6) * t1088;
t870 = t1092 * t975 + t1095 * t894;
t1140 = t1093 * t870 - t1096 * t892;
t791 = -t1086 * t869 + t1140 * t1088;
t833 = t1093 * t892 + t1096 * t870;
t1214 = qJ(1) * (t1085 * t833 + t1087 * t791);
t880 = t1092 * t960 + t1095 * t924;
t1137 = t1093 * t880 - t1096 * t923;
t811 = -t1086 * t879 + t1137 * t1088;
t847 = t1093 * t923 + t1096 * t880;
t1213 = qJ(1) * (t1085 * t847 + t1087 * t811);
t883 = t1092 * t1239 + t1095 * t935;
t1136 = t1093 * t883 - t1096 * t934;
t820 = -t1086 * t882 + t1136 * t1088;
t850 = t1093 * t934 + t1096 * t883;
t1212 = qJ(1) * (t1085 * t850 + t1087 * t820);
t1210 = pkin(1) * t791 + t833 * t1216;
t1209 = pkin(1) * t811 + t847 * t1216;
t1208 = pkin(1) * t820 + t850 * t1216;
t1207 = -pkin(2) * t892 + pkin(7) * t870;
t1206 = -pkin(2) * t923 + pkin(7) * t880;
t1205 = -pkin(2) * t934 + pkin(7) * t883;
t1204 = -pkin(3) * t975 + pkin(8) * t894;
t862 = t1091 * t1098 + t1094 * t906;
t1203 = pkin(3) * t960 - pkin(8) * t924;
t1202 = pkin(3) * t1239 - pkin(8) * t935;
t1201 = t1091 * t830;
t1200 = t1091 * t905;
t1197 = t1092 * t970;
t1196 = t1094 * t830;
t1195 = t1094 * t905;
t1192 = t1095 * t970;
t1191 = qJD(2) * qJD(3);
t1189 = qJD(5) * t1045;
t1188 = t1047 * t1068;
t1187 = t1068 * t1091;
t1186 = t1068 * t1094;
t1081 = t1092 ^ 2;
t1185 = t1081 * t1097;
t1066 = t1092 * t1097 * t1095;
t1058 = qJDD(3) + t1066;
t1183 = t1092 * t1058;
t1059 = qJDD(3) - t1066;
t1182 = t1092 * t1059;
t1181 = t1093 * t1024;
t1179 = t1095 * t1059;
t1178 = t1096 * t1024;
t1082 = t1095 ^ 2;
t1175 = t1081 + t1082;
t1174 = t1086 * qJDD(2);
t1172 = t1093 * qJDD(2);
t1171 = t1096 * qJDD(2);
t790 = t1140 * t1086 + t1088 * t869;
t1170 = -pkin(1) * t790 + t833 * t1215;
t810 = t1137 * t1086 + t1088 * t879;
t1169 = -pkin(1) * t810 + t847 * t1215;
t819 = t1136 * t1086 + t1088 * t882;
t1168 = -pkin(1) * t819 + t850 * t1215;
t1167 = t1092 * t1004;
t1166 = t1095 * t1004;
t813 = t1091 * t861 + t1094 * t862;
t936 = t1092 * t971 + t1016;
t875 = t1092 * t936 + t1095 * t937;
t1160 = t1096 * t1066;
t1159 = t1093 * t1066;
t1158 = -pkin(3) * t905 + pkin(8) * t813;
t1157 = t1200 - t1202;
t1156 = -t1195 - t1203;
t873 = t1092 * t937 - t1095 * t936;
t1052 = t1175 * qJDD(2);
t1079 = t1082 * t1097;
t1055 = t1079 + t1185;
t999 = t1096 * t1052 - t1093 * t1055;
t1154 = pkin(6) * t999 - t1093 * t873;
t1153 = -t1040 * pkin(4) + t988 * qJ(5) + t1068 * t1017 + t862;
t1053 = -t1093 * t1097 + t1171;
t1150 = -pkin(6) * t1053 - t1181;
t1121 = t1096 * t1097 + t1172;
t1149 = -pkin(6) * t1121 + t1178;
t812 = t1091 * t862 - t1094 * t861;
t1032 = -0.2e1 * t1189;
t834 = t1032 + t1153;
t809 = -pkin(4) * t975 - qJ(5) * t961 + t834;
t821 = (t965 + t989) * qJ(5) + t1101;
t760 = -t1091 * t809 + t1094 * t821 - t1221;
t866 = t1225 - t1229;
t747 = -t1092 * t866 + t1095 * t760 - t1224;
t1113 = t1091 * t821 + t1094 * t809 + t1204;
t750 = -t1113 - t1232;
t1148 = t1093 * t747 + t1096 * t750;
t1099 = -t830 - t1242;
t798 = -t1099 - t1228;
t835 = -pkin(4) * t960 + qJ(5) * t992 - t863;
t801 = qJ(5) * t1193 - t1091 * t835 - t1220;
t754 = -t1092 * t798 + t1095 * t801 - t1223;
t1104 = qJ(5) * t1198 + t1094 * t835 - t1203;
t773 = -t1104 - t1231;
t1147 = t1093 * t754 + t1096 * t773;
t851 = -qJ(5) * t998 + t863;
t904 = -pkin(4) * t1239 + qJ(5) * t976;
t806 = -t1091 * t904 + t1094 * t851 - t1219;
t1111 = pkin(4) * t998 - t1153;
t807 = t1032 - t1111 - t1227;
t756 = -t1092 * t807 + t1095 * t806 - t1222;
t1112 = t1091 * t851 + t1094 * t904 - t1202;
t778 = -t1112 - t1230;
t1146 = t1093 * t756 + t1096 * t778;
t785 = -t812 - t1221;
t761 = t1095 * t785 + t892 * t1218 - t1224;
t1122 = t813 + t1204;
t768 = -t1122 - t1232;
t1145 = t1093 * t761 + t1096 * t768;
t776 = t1094 * t834 + t1201;
t763 = t1092 * t863 + t1095 * t776;
t775 = t1091 * t834 - t1196;
t1144 = t1093 * t763 - t1096 * t775;
t837 = t861 - t1228;
t864 = t1200 - t1220;
t774 = -t1092 * t837 + t1095 * t864 - t1223;
t814 = -t1156 - t1231;
t1143 = t1093 * t774 + t1096 * t814;
t842 = t862 - t1227;
t867 = t1195 - t1219;
t780 = -t1092 * t842 + t1095 * t867 - t1222;
t815 = -t1157 - t1230;
t1142 = t1093 * t780 + t1096 * t815;
t787 = t1092 * t905 + t1095 * t813;
t1141 = t1093 * t787 - t1096 * t812;
t1139 = t1093 * t875 - t1096 * t970;
t1002 = t1041 - t1040;
t893 = -t1091 * t1239 - t1094 * t960;
t877 = t1092 * t1002 + t1095 * t893;
t891 = -t1091 * t960 + t1094 * t1239;
t1138 = t1093 * t877 - t1096 * t891;
t1022 = -t1041 + t1065;
t948 = -t1091 * t1022 - t1193;
t886 = t1092 * t965 + t1095 * t948;
t946 = t1094 * t1022 - t1198;
t1135 = t1093 * t886 - t1096 * t946;
t1021 = t1040 - t1065;
t949 = t1094 * t1021 + t1199;
t887 = -t1092 * t961 + t1095 * t949;
t947 = t1091 * t1021 - t1194;
t1134 = t1093 * t887 - t1096 * t947;
t955 = -t1045 * t1186 - t1091 * t988;
t909 = t1095 * t955 - t1167;
t954 = t1045 * t1187 - t1094 * t988;
t1133 = t1093 * t909 + t1096 * t954;
t957 = t1047 * t1187 + t1094 * t989;
t910 = t1095 * t957 + t1167;
t956 = -t1047 * t1186 + t1091 * t989;
t1132 = t1093 * t910 - t1096 * t956;
t969 = (t1045 * t1094 - t1047 * t1091) * t1068;
t951 = -t1092 * t1042 + t1095 * t969;
t968 = (t1045 * t1091 + t1047 * t1094) * t1068;
t1131 = t1093 * t951 - t1096 * t968;
t1130 = t1093 * t980 - t1096 * t979;
t920 = t1093 * t979 + t1096 * t980;
t1056 = -t1079 + t1185;
t1049 = 0.2e1 * t1072 + t1173;
t997 = -t1092 * t1049 + t1005;
t1128 = -t1056 * t1096 + t1093 * t997;
t1064 = -t1079 - t1233;
t1012 = t1095 * t1064 - t1183;
t1127 = t1012 * t1093 + t1051 * t1096;
t1062 = -t1185 - t1233;
t1014 = -t1092 * t1062 - t1179;
t1126 = t1014 * t1093 - t1049 * t1096;
t1029 = t1121 * t1088;
t1125 = t1087 * t1029 + t1085 * t1053;
t1124 = t1085 * t1029 - t1087 * t1053;
t1123 = t1052 * t1093 + t1055 * t1096;
t1043 = t1175 * t1191;
t1120 = -qJDD(3) * t1096 + t1043 * t1093;
t1118 = (-t1086 * t790 - t1088 * t791) * pkin(6);
t1117 = (-t1086 * t810 - t1088 * t811) * pkin(6);
t1116 = (-t1086 * t819 - t1088 * t820) * pkin(6);
t1063 = t1079 - t1233;
t1011 = t1095 * t1063 - t1182;
t1115 = t1011 * t1093 - t1095 * t1171;
t1044 = t1095 * t1058;
t1061 = -t1185 + t1233;
t1013 = -t1092 * t1061 + t1044;
t1114 = t1013 * t1093 - t1092 * t1171;
t788 = -pkin(4) * t863 + qJ(5) * t834;
t742 = -pkin(8) * t775 + qJ(5) * t1196 - t1091 * t788;
t758 = -pkin(3) * t775 + t1226;
t762 = t1092 * t776 - t1095 * t863;
t727 = -pkin(7) * t762 - t1092 * t758 + t1095 * t742;
t1100 = -pkin(3) * t863 + pkin(8) * t776 + qJ(5) * t1201 + t1094 * t788;
t730 = -pkin(2) * t762 - t1100;
t741 = t1093 * t775 + t1096 * t763;
t1110 = pkin(6) * t741 + t1093 * t727 + t1096 * t730;
t786 = t1092 * t813 - t1095 * t905;
t746 = -pkin(7) * t786 + (-pkin(8) * t1095 + t1218) * t812;
t755 = -pkin(2) * t786 - t1158;
t759 = t1093 * t812 + t1096 * t787;
t1109 = pkin(6) * t759 + t1093 * t746 + t1096 * t755;
t1008 = t1092 * t1064 + t1044;
t901 = -pkin(2) * t1008 + t936;
t932 = -pkin(7) * t1008 + t1197;
t972 = t1096 * t1012 - t1093 * t1051;
t1108 = pkin(6) * t972 + t1093 * t932 + t1096 * t901;
t1010 = t1095 * t1062 - t1182;
t902 = -pkin(2) * t1010 + t937;
t933 = -pkin(7) * t1010 + t1192;
t973 = t1096 * t1014 + t1093 * t1049;
t1107 = pkin(6) * t973 + t1093 * t933 + t1096 * t902;
t1018 = -t1082 * t1191 - t1092 * t1176;
t1106 = t1018 * t1093 - t1160;
t1019 = t1095 * t1050 - t1081 * t1191;
t1105 = t1019 * t1093 + t1160;
t854 = t1093 * t970 + t1096 * t875;
t1103 = pkin(6) * t854 + (-pkin(2) * t1096 - pkin(7) * t1093) * t873;
t1073 = t1088 * qJDD(2);
t1030 = t1053 * t1088;
t1028 = t1053 * t1086;
t1027 = t1121 * t1086;
t1020 = t1093 * qJDD(3) + t1096 * t1043;
t1009 = t1095 * t1061 + t1183;
t1007 = t1092 * t1063 + t1179;
t1006 = t1152 * t1092;
t1001 = t1120 * t1088;
t1000 = t1120 * t1086;
t996 = t1095 * t1049 + t1092 * t1051;
t994 = t1123 * t1088;
t993 = t1123 * t1086;
t991 = -t1085 * t1030 - t1087 * t1121;
t990 = t1087 * t1030 - t1085 * t1121;
t987 = t1096 * t1019 - t1159;
t986 = t1096 * t1018 + t1159;
t985 = t1096 * t1013 + t1092 * t1172;
t984 = t1096 * t1011 + t1093 * t1075;
t967 = t1093 * t1056 + t1096 * t997;
t953 = -t1178 + (t1027 * t1086 + t1029 * t1088) * pkin(6);
t952 = -t1181 + (-t1028 * t1086 - t1030 * t1088) * pkin(6);
t950 = t1095 * t1042 + t1092 * t969;
t945 = -t1086 * t1006 + t1105 * t1088;
t944 = -t1086 * t1005 + t1106 * t1088;
t943 = t1088 * t1006 + t1105 * t1086;
t942 = t1088 * t1005 + t1106 * t1086;
t941 = -t1086 * t1009 + t1114 * t1088;
t940 = -t1086 * t1007 + t1115 * t1088;
t939 = t1088 * t1009 + t1114 * t1086;
t938 = t1088 * t1007 + t1115 * t1086;
t928 = -t1086 * t1010 + t1126 * t1088;
t927 = -t1086 * t1008 + t1127 * t1088;
t926 = t1088 * t1010 + t1126 * t1086;
t925 = t1088 * t1008 + t1127 * t1086;
t918 = -t1086 * t996 + t1128 * t1088;
t917 = t1128 * t1086 + t1088 * t996;
t916 = pkin(2) * t1051 + pkin(7) * t1012 - t1192;
t915 = -pkin(2) * t1049 + pkin(7) * t1014 + t1197;
t912 = t920 * t1088;
t911 = t920 * t1086;
t908 = t1092 * t957 - t1166;
t907 = t1092 * t955 + t1166;
t900 = -pkin(1) * t1028 + t1086 * t979 + t1149 * t1088;
t899 = pkin(1) * t1027 + t1086 * t980 + t1150 * t1088;
t898 = pkin(1) * t1030 + t1149 * t1086 - t1088 * t979;
t897 = -pkin(1) * t1029 + t1150 * t1086 - t1088 * t980;
t896 = t1086 * t1024 + t1130 * t1088;
t895 = -t1088 * t1024 + t1130 * t1086;
t888 = t1093 * t968 + t1096 * t951;
t885 = t1092 * t949 + t1095 * t961;
t884 = t1092 * t948 - t1095 * t965;
t876 = -t1095 * t1002 + t1092 * t893;
t872 = t1093 * t956 + t1096 * t910;
t871 = -t1093 * t954 + t1096 * t909;
t865 = pkin(2) * t1055 + pkin(7) * t1052 + t875;
t859 = -t1086 * t950 + t1131 * t1088;
t858 = t1131 * t1086 + t1088 * t950;
t857 = -pkin(2) * t970 + pkin(7) * t875;
t856 = t1093 * t947 + t1096 * t887;
t855 = t1093 * t946 + t1096 * t886;
t853 = pkin(1) * t896 + t920 * t1216;
t852 = -pkin(1) * t895 + t920 * t1215;
t846 = -t1096 * t873 + (-t1086 * t993 - t1088 * t994) * pkin(6);
t843 = (-t1086 * t895 - t1088 * t896) * pkin(6);
t841 = -t1086 * t908 + t1132 * t1088;
t840 = -t1086 * t907 + t1133 * t1088;
t839 = t1132 * t1086 + t1088 * t908;
t838 = t1133 * t1086 + t1088 * t907;
t836 = t1093 * t891 + t1096 * t877;
t829 = -t1085 * t859 + t1087 * t888;
t828 = t1085 * t888 + t1087 * t859;
t827 = -t1093 * t902 + t1096 * t933 + (-t1086 * t926 - t1088 * t928) * pkin(6);
t826 = -t1093 * t901 + t1096 * t932 + (-t1086 * t925 - t1088 * t927) * pkin(6);
t825 = -t1086 * t885 + t1134 * t1088;
t824 = -t1086 * t884 + t1135 * t1088;
t823 = t1134 * t1086 + t1088 * t885;
t822 = t1135 * t1086 + t1088 * t884;
t817 = -t1086 * t873 + t1139 * t1088;
t816 = t1139 * t1086 + t1088 * t873;
t805 = -pkin(1) * t926 - t1086 * t915 + t1088 * t1107;
t804 = -pkin(1) * t925 - t1086 * t916 + t1088 * t1108;
t803 = pkin(1) * t928 + t1086 * t1107 + t1088 * t915;
t802 = pkin(1) * t927 + t1086 * t1108 + t1088 * t916;
t800 = -pkin(1) * t993 - t1086 * t865 + t1154 * t1088;
t799 = pkin(1) * t994 + t1154 * t1086 + t1088 * t865;
t797 = -t1085 * t841 + t1087 * t872;
t796 = -t1085 * t840 + t1087 * t871;
t795 = t1085 * t872 + t1087 * t841;
t794 = t1085 * t871 + t1087 * t840;
t793 = -t1086 * t876 + t1138 * t1088;
t792 = t1138 * t1086 + t1088 * t876;
t784 = -t1085 * t825 + t1087 * t856;
t783 = -t1085 * t824 + t1087 * t855;
t782 = t1085 * t856 + t1087 * t825;
t781 = t1085 * t855 + t1087 * t824;
t777 = qJ(1) * (-t1085 * t820 + t1087 * t850);
t771 = qJ(1) * (-t1085 * t811 + t1087 * t847);
t770 = t1092 * t867 + t1095 * t842 + t1205;
t769 = t1092 * t864 + t1095 * t837 + t1206;
t767 = -t1085 * t793 + t1087 * t836;
t766 = t1085 * t836 + t1087 * t793;
t764 = qJ(1) * (-t1085 * t791 + t1087 * t833);
t757 = t1092 * t785 - t892 * t1217 + t1207;
t753 = t1092 * t806 + t1095 * t807 + t1205;
t752 = (pkin(2) * t1093 - pkin(7) * t1096) * t873 + (-t1086 * t816 - t1088 * t817) * pkin(6);
t751 = t1092 * t801 + t1095 * t798 + t1206;
t749 = -pkin(1) * t816 - t1086 * t857 + t1088 * t1103;
t748 = pkin(1) * t817 + t1086 * t1103 + t1088 * t857;
t745 = t1092 * t760 + t1095 * t866 + t1207;
t744 = -t1086 * t786 + t1141 * t1088;
t743 = t1141 * t1086 + t1088 * t786;
t740 = pkin(7) * t787 + (-pkin(2) + t1155) * t812;
t739 = -t1093 * t815 + t1096 * t780 + t1116;
t738 = -t1093 * t814 + t1096 * t774 + t1117;
t737 = -t1086 * t762 + t1144 * t1088;
t736 = t1144 * t1086 + t1088 * t762;
t735 = -t1086 * t770 + t1142 * t1088 + t1168;
t734 = t1142 * t1086 + t1088 * t770 + t1208;
t733 = -t1093 * t778 + t1096 * t756 + t1116;
t732 = -t1086 * t769 + t1143 * t1088 + t1169;
t731 = t1143 * t1086 + t1088 * t769 + t1209;
t729 = -t1093 * t773 + t1096 * t754 + t1117;
t728 = -t1093 * t768 + t1096 * t761 + t1118;
t726 = -t1086 * t753 + t1146 * t1088 + t1168;
t725 = t1146 * t1086 + t1088 * t753 + t1208;
t724 = -t1086 * t757 + t1145 * t1088 + t1170;
t723 = t1145 * t1086 + t1088 * t757 + t1210;
t722 = -t1093 * t750 + t1096 * t747 + t1118;
t721 = -t1086 * t751 + t1147 * t1088 + t1169;
t720 = t1147 * t1086 + t1088 * t751 + t1209;
t719 = -pkin(2) * t775 + pkin(7) * t763 + t1092 * t742 + t1095 * t758;
t718 = -t1086 * t745 + t1148 * t1088 + t1170;
t717 = t1148 * t1086 + t1088 * t745 + t1210;
t716 = -t1093 * t755 + t1096 * t746 + (-t1086 * t743 - t1088 * t744) * pkin(6);
t715 = -pkin(1) * t743 - t1086 * t740 + t1088 * t1109;
t714 = pkin(1) * t744 + t1086 * t1109 + t1088 * t740;
t713 = -t1093 * t730 + t1096 * t727 + (-t1086 * t736 - t1088 * t737) * pkin(6);
t712 = -pkin(1) * t736 - t1086 * t719 + t1088 * t1110;
t711 = pkin(1) * t737 + t1086 * t1110 + t1088 * t719;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1238, -t1237, -t1234, -qJ(1) * t1234, 0, 0, -t1124, 0, t991, t1085 * t1174, -qJ(1) * t990 - t1085 * t900 + t1087 * t952, qJ(1) * t1125 - t1085 * t899 + t1087 * t953, -t1085 * t912 - t1087 * t1130, t1087 * t843 - t1085 * t852 - qJ(1) * (t1085 * t920 + t1087 * t896), -t1085 * t945 + t1087 * t987, -t1085 * t918 + t1087 * t967, -t1085 * t941 + t1087 * t985, -t1085 * t944 + t1087 * t986, -t1085 * t940 + t1087 * t984, -t1085 * t1001 + t1087 * t1020, t1087 * t826 - t1085 * t804 - qJ(1) * (t1085 * t972 + t1087 * t927), t1087 * t827 - t1085 * t805 - qJ(1) * (t1085 * t973 + t1087 * t928), t1087 * t846 - t1085 * t800 - qJ(1) * (t1085 * t999 + t1087 * t994), t1087 * t752 - t1085 * t749 - qJ(1) * (t1085 * t854 + t1087 * t817), t797, t767, t783, t796, t784, t829, -t1085 * t732 + t1087 * t738 - t1213, -t1085 * t735 + t1087 * t739 - t1212, -t1085 * t724 + t1087 * t728 - t1214, t1087 * t716 - t1085 * t715 - qJ(1) * (t1085 * t759 + t1087 * t744), t797, t767, t783, t796, t784, t829, -t1085 * t721 + t1087 * t729 - t1213, -t1085 * t726 + t1087 * t733 - t1212, -t1085 * t718 + t1087 * t722 - t1214, t1087 * t713 - t1085 * t712 - qJ(1) * (t1085 * t741 + t1087 * t737); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1237, -t1238, t1235, qJ(1) * t1235, 0, 0, t1125, 0, t990, -t1087 * t1174, qJ(1) * t991 + t1085 * t952 + t1087 * t900, qJ(1) * t1124 + t1085 * t953 + t1087 * t899, -t1085 * t1130 + t1087 * t912, t1085 * t843 + t1087 * t852 + qJ(1) * (-t1085 * t896 + t1087 * t920), t1085 * t987 + t1087 * t945, t1085 * t967 + t1087 * t918, t1085 * t985 + t1087 * t941, t1085 * t986 + t1087 * t944, t1085 * t984 + t1087 * t940, t1087 * t1001 + t1085 * t1020, t1085 * t826 + t1087 * t804 + qJ(1) * (-t1085 * t927 + t1087 * t972), t1085 * t827 + t1087 * t805 + qJ(1) * (-t1085 * t928 + t1087 * t973), t1085 * t846 + t1087 * t800 + qJ(1) * (-t1085 * t994 + t1087 * t999), t1085 * t752 + t1087 * t749 + qJ(1) * (-t1085 * t817 + t1087 * t854), t795, t766, t781, t794, t782, t828, t1085 * t738 + t1087 * t732 + t771, t1085 * t739 + t1087 * t735 + t777, t1085 * t728 + t1087 * t724 + t764, t1085 * t716 + t1087 * t715 + qJ(1) * (-t1085 * t744 + t1087 * t759), t795, t766, t781, t794, t782, t828, t1085 * t729 + t1087 * t721 + t771, t1085 * t733 + t1087 * t726 + t777, t1085 * t722 + t1087 * t718 + t764, t1085 * t713 + t1087 * t712 + qJ(1) * (-t1085 * t737 + t1087 * t741); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1164, t1057, 0, 0, 0, 0, t1027, 0, t1028, t1073, t898, t897, t911, t853, t943, t917, t939, t942, t938, t1000, t802, t803, t799, t748, t839, t792, t822, t838, t823, t858, t731, t734, t723, t714, t839, t792, t822, t838, t823, t858, t720, t725, t717, t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1211, -t1164, 0, 0, 0, t1053, 0, -t1121, 0, t952, t953, -t1130, t843, t987, t967, t985, t986, t984, t1020, t826, t827, t846, t752, t872, t836, t855, t871, t856, t888, t738, t739, t728, t716, t872, t836, t855, t871, t856, t888, t729, t733, t722, t713; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1211, 0, -t1057, 0, 0, 0, t1029, 0, t1030, -t1174, t900, t899, t912, t852, t945, t918, t941, t944, t940, t1001, t804, t805, t800, t749, t841, t793, t824, t840, t825, t859, t732, t735, t724, t715, t841, t793, t824, t840, t825, t859, t721, t726, t718, t712; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1164, t1057, 0, 0, 0, 0, t1027, 0, t1028, t1073, t898, t897, t911, t853, t943, t917, t939, t942, t938, t1000, t802, t803, t799, t748, t839, t792, t822, t838, t823, t858, t731, t734, t723, t714, t839, t792, t822, t838, t823, t858, t720, t725, t717, t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1097, 0, 0, -t1024, t979, 0, t1019, t997, t1013, t1018, t1011, t1043, t932, t933, -t873, -pkin(7) * t873, t910, t877, t886, t909, t887, t951, t774, t780, t761, t746, t910, t877, t886, t909, t887, t951, t754, t756, t747, t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1097, 0, qJDD(2), 0, t1024, 0, t980, 0, t1066, -t1056, -t1173, -t1066, -t1075, -qJDD(3), t901, t902, 0, -pkin(2) * t873, -t956, -t891, -t946, t954, -t947, -t968, t814, t815, t768, t755, -t956, -t891, -t946, t954, -t947, -t968, t773, t778, t750, t730; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t979, -t980, 0, 0, t1006, t996, t1009, t1005, t1007, 0, t916, t915, t865, t857, t908, t876, t884, t907, t885, t950, t769, t770, t757, t740, t908, t876, t884, t907, t885, t950, t751, t753, t745, t719; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1050, t1051, t1058, -t1072, t1063, t1072, 0, t970, t936, 0, t957, t893, t948, t955, t949, t969, t864, t867, t785, -pkin(8) * t812, t957, t893, t948, t955, t949, t969, t801, t806, t760, t742; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1071, t1049, t1061, t1176, t1059, -t1071, -t970, 0, t937, 0, -t1004, -t1002, -t965, t1004, t961, t1042, t837, t842, -t1229, -pkin(3) * t812, -t1004, -t1002, -t965, t1004, t961, t1042, t798, t807, t866, t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1066, t1056, t1173, t1066, t1075, qJDD(3), -t936, -t937, 0, 0, t956, t891, t946, -t954, t947, t968, t1156, t1157, t1122, t1158, t956, t891, t946, -t954, t947, t968, t1104, t1112, t1113, t1100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t989, -t960, -t1241, -t1026, t1021, t1026, 0, t905, t861, 0, t989, -t960, -t1241, -t1026, t1021, t1026, qJ(5) * t1241, t851, t821, qJ(5) * t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1188, t1239, t1022, t988, -t976, t1188, -t905, 0, t862, 0, -t1188, t1239, t1022, t988, -t976, t1188, t835, t904, t809, t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1004, t1002, t965, -t1004, -t961, -t1042, -t861, -t862, 0, 0, t1004, t1002, t965, -t1004, -t961, -t1042, t1099, t1111 + 0.2e1 * t1189, -t1225, -t1226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t989, -t960, -t1241, -t1026, t1021, t1026, 0, t863, t830, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1188, t1239, t1022, t988, -t976, t1188, -t863, 0, t834, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1004, t1002, t965, -t1004, -t961, -t1042, -t830, -t834, 0, 0;];
m_new_reg = t1;
