% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d5,theta3,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:46
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPPR5_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPPR5_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPPR5_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPPPR5_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:46:35
% EndTime: 2019-12-31 17:46:36
% DurationCPUTime: 0.93s
% Computational Cost: add. (1527->97), mult. (2712->144), div. (0->0), fcn. (2907->6), ass. (0->95)
t91 = sin(pkin(8));
t89 = t91 ^ 2;
t93 = cos(pkin(8));
t90 = t93 ^ 2;
t81 = t89 + t90;
t141 = cos(qJ(5));
t104 = t141 * t93;
t95 = sin(qJ(5));
t138 = t95 * t91;
t99 = t104 - t138;
t105 = t141 * t91;
t137 = t95 * t93;
t74 = t105 + t137;
t147 = t74 ^ 2;
t146 = t99 / 0.2e1;
t145 = t74 / 0.2e1;
t92 = sin(pkin(7));
t143 = t92 / 0.2e1;
t94 = cos(pkin(7));
t96 = -pkin(1) - pkin(2);
t136 = t94 * qJ(2) + t92 * t96;
t75 = -qJ(4) + t136;
t142 = pkin(6) - t75;
t58 = t74 * t92;
t140 = t58 * t74;
t60 = t99 * t92;
t139 = t60 * t99;
t106 = t140 / 0.2e1;
t40 = -t140 / 0.2e1;
t11 = t40 + t106;
t135 = t11 * qJD(2);
t134 = t11 * qJD(3);
t57 = t142 * t93;
t31 = -t142 * t105 - t95 * t57;
t32 = t142 * t138 - t141 * t57;
t12 = -t31 * t74 - t32 * t99;
t133 = t12 * qJD(1);
t20 = t143 + t139 / 0.2e1 + t106;
t132 = t20 * qJD(1);
t59 = t94 * t74;
t61 = t99 * t94;
t22 = t61 * t145 - t59 * t146;
t131 = t22 * qJD(1);
t23 = -t59 * t74 - t61 * t99;
t130 = t23 * qJD(1);
t103 = -t92 * qJ(2) + t94 * t96;
t101 = pkin(3) - t103;
t71 = t81 * t94;
t29 = t101 * t92 + t75 * t71;
t129 = t29 * qJD(1);
t72 = t99 ^ 2;
t33 = t72 - t147;
t128 = t33 * qJD(1);
t98 = -t137 / 0.2e1 - t105 / 0.2e1;
t34 = (-t74 / 0.2e1 + t98) * t94;
t127 = t34 * qJD(1);
t97 = -t104 / 0.2e1 + t138 / 0.2e1;
t35 = (-t99 / 0.2e1 + t97) * t94;
t126 = t35 * qJD(1);
t49 = t81 * t75;
t125 = t49 * qJD(1);
t50 = -t103 * t92 + t136 * t94;
t124 = t50 * qJD(1);
t51 = t72 + t147;
t123 = t51 * qJD(1);
t62 = (0.1e1 / 0.2e1 + t90 / 0.2e1 + t89 / 0.2e1) * t92;
t122 = t62 * qJD(1);
t121 = t71 * qJD(1);
t120 = t99 * qJD(1);
t69 = t99 * qJD(5);
t119 = t74 * qJD(1);
t70 = t74 * qJD(5);
t118 = t81 * qJD(1);
t117 = t92 * qJD(1);
t116 = t92 * qJD(2);
t115 = t94 * qJD(1);
t114 = t94 * qJD(2);
t113 = qJ(2) * qJD(1);
t112 = t99 * t119;
t111 = t99 * t70;
t110 = t99 * t117;
t109 = t74 * t117;
t108 = t91 * t117;
t107 = t93 * t117;
t66 = t93 * pkin(4) + t101;
t102 = qJD(1) * t66 + qJD(4);
t7 = t31 * t59 + t32 * t61 + t66 * t92;
t100 = t7 * qJD(1) + t22 * qJD(3);
t63 = t143 - t81 * t92 / 0.2e1;
t37 = (t145 + t98) * t94;
t36 = (t146 + t97) * t94;
t21 = -t139 / 0.2e1 + t40 + t143;
t9 = t11 * qJD(5);
t1 = t22 * qJD(2);
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), 0, 0, 0, 0, 0, 0, t116, t114, 0, t50 * qJD(2), 0, 0, 0, 0, 0, 0, t93 * t116, -t91 * t116, -t71 * qJD(2) + t81 * qJD(4), t29 * qJD(2) - t49 * qJD(4), t111, t33 * qJD(5), 0, -t111, 0, 0, t116 * t99 - t66 * t70, -t74 * t116 - t66 * t69, t23 * qJD(2) + t51 * qJD(4), t7 * qJD(2) + t12 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t113, 0, 0, 0, 0, 0, 0, t117, t115, 0, t124, 0, 0, 0, 0, 0, 0, t107, -t108, -t121, t129 + t63 * qJD(4) + (-0.1e1 + t81) * t92 * t114, 0, 0, 0, 0, 0, 0, t37 * qJD(5) + t110, t36 * qJD(5) - t109, t130, (t59 * t58 + t61 * t60 - t94 * t92) * qJD(2) + t21 * qJD(4) + t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, t63 * qJD(2) - t125, 0, 0, 0, 0, 0, 0, 0, 0, t123, t21 * qJD(2) + t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, t128, -t69, -t112, t70, 0, t37 * qJD(2) - t32 * qJD(5) - t66 * t119, t36 * qJD(2) + t31 * qJD(5) - t66 * t120, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t113, 0, 0, 0, 0, 0, 0, -t117, -t115, 0, -t124, 0, 0, 0, 0, 0, 0, -t107, t108, t121, -t62 * qJD(4) - t129, 0, 0, 0, 0, 0, 0, -t34 * qJD(5) - t110, -t35 * qJD(5) + t109, -t130, -t20 * qJD(4) - t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9 - t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t122, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60 * qJD(5) - t127, t58 * qJD(5) - t126, 0, t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t9 + t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, -t69, 0, t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, t62 * qJD(2) + t125, 0, 0, 0, 0, 0, 0, -t70, -t69, -t123, t20 * qJD(2) - t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, -t120, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t112, -t128, 0, t112, 0, 0, t34 * qJD(2) + t102 * t74, t35 * qJD(2) + t102 * t99, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127, t126, 0, -t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t120, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t2;
