% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:04
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRRR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR7_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR7_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR7_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:04:33
% EndTime: 2019-12-31 19:04:48
% DurationCPUTime: 15.94s
% Computational Cost: add. (86610->661), mult. (168903->926), div. (0->0), fcn. (112312->10), ass. (0->452)
t1161 = sin(qJ(1));
t1165 = cos(qJ(1));
t1129 = t1165 * g(1) + t1161 * g(2);
t1166 = qJD(1) ^ 2;
t1111 = -t1166 * pkin(1) - t1129;
t1154 = sin(pkin(9));
t1155 = cos(pkin(9));
t1128 = t1161 * g(1) - t1165 * g(2);
t1179 = qJDD(1) * pkin(1) + t1128;
t1060 = t1154 * t1111 - t1155 * t1179;
t1061 = t1155 * t1111 + t1154 * t1179;
t1193 = t1154 * t1060 + t1155 * t1061;
t989 = t1155 * t1060 - t1154 * t1061;
t1229 = t1165 * t989;
t1265 = -t1161 * t1193 + t1229;
t1234 = t1161 * t989;
t1264 = t1165 * t1193 + t1234;
t1119 = t1154 * qJDD(1) + t1155 * t1166;
t1120 = t1155 * qJDD(1) - t1154 * t1166;
t1064 = -t1161 * t1119 + t1165 * t1120;
t1241 = g(3) - qJDD(2);
t1091 = -qJ(2) * t1119 + t1155 * t1241;
t1249 = -qJ(2) * t1120 - t1154 * t1241;
t1263 = -pkin(5) * t1064 - t1161 * t1091 + t1165 * t1249;
t1250 = t1165 * t1119 + t1161 * t1120;
t1262 = -pkin(5) * t1250 + t1165 * t1091 + t1161 * t1249;
t1158 = sin(qJ(5));
t1159 = sin(qJ(4));
t1163 = cos(qJ(4));
t1160 = sin(qJ(3));
t1226 = qJD(1) * t1160;
t1108 = -t1163 * qJD(3) + t1159 * t1226;
t1109 = t1159 * qJD(3) + t1163 * t1226;
t1162 = cos(qJ(5));
t1057 = t1162 * t1108 + t1158 * t1109;
t1059 = -t1158 * t1108 + t1162 * t1109;
t1002 = t1059 * t1057;
t1144 = qJD(3) * t1226;
t1164 = cos(qJ(3));
t1207 = t1164 * qJDD(1);
t1116 = -t1144 + t1207;
t1103 = -qJDD(4) + t1116;
t1098 = -qJDD(5) + t1103;
t1251 = -t1002 - t1098;
t1261 = t1158 * t1251;
t1260 = t1162 * t1251;
t1212 = t1164 * qJD(1);
t1139 = -qJD(4) + t1212;
t1131 = -qJD(5) + t1139;
t1033 = t1057 * t1131;
t1145 = qJD(3) * t1212;
t1208 = t1160 * qJDD(1);
t1115 = t1145 + t1208;
t1181 = -t1159 * qJDD(3) - t1163 * t1115;
t1053 = -t1108 * qJD(4) - t1181;
t1182 = t1163 * qJDD(3) - t1159 * t1115;
t1172 = t1109 * qJD(4) - t1182;
t957 = -t1057 * qJD(5) + t1162 * t1053 - t1158 * t1172;
t1256 = t1033 + t957;
t1225 = t1109 * t1108;
t1174 = -t1103 - t1225;
t1255 = t1159 * t1174;
t1253 = t1163 * t1174;
t1042 = -t1166 * pkin(2) + qJDD(1) * pkin(6) + t1061;
t1143 = t1164 * t1241;
t1017 = t1160 * t1042 + t1143;
t1019 = t1164 * t1042 - t1160 * t1241;
t961 = t1160 * t1017 + t1164 * t1019;
t1093 = t1108 * t1139;
t1011 = t1053 - t1093;
t1194 = t1158 * t1053 + t1162 * t1172;
t919 = (qJD(5) + t1131) * t1059 + t1194;
t1248 = qJD(3) ^ 2;
t1055 = t1057 ^ 2;
t1056 = t1059 ^ 2;
t1247 = t1108 ^ 2;
t1102 = t1109 ^ 2;
t1130 = t1131 ^ 2;
t1137 = t1139 ^ 2;
t1041 = -qJDD(1) * pkin(2) - t1166 * pkin(6) + t1060;
t1184 = -t1116 + t1144;
t1185 = t1115 + t1145;
t978 = pkin(3) * t1184 - pkin(7) * t1185 + t1041;
t1243 = pkin(3) * t1164;
t1187 = -pkin(7) * t1160 - t1243;
t1113 = t1187 * qJD(1);
t992 = -t1248 * pkin(3) + qJDD(3) * pkin(7) + t1113 * t1212 + t1019;
t915 = t1159 * t992 - t1163 * t978;
t875 = t1174 * pkin(4) - t1011 * pkin(8) - t915;
t1082 = -t1139 * pkin(4) - t1109 * pkin(8);
t916 = t1159 * t978 + t1163 * t992;
t878 = -t1247 * pkin(4) - pkin(8) * t1172 + t1139 * t1082 + t916;
t817 = t1158 * t878 - t1162 * t875;
t818 = t1158 * t875 + t1162 * t878;
t777 = t1158 * t818 - t1162 * t817;
t1246 = pkin(4) * t777;
t922 = -t1033 + t957;
t858 = -t1158 * t919 - t1162 * t922;
t1245 = pkin(4) * t858;
t1244 = pkin(3) * t1160;
t991 = t1143 - qJDD(3) * pkin(3) - t1248 * pkin(7) + (qJD(1) * t1113 + t1042) * t1160;
t912 = pkin(4) * t1172 - t1247 * pkin(8) + t1109 * t1082 + t991;
t1238 = t1158 * t912;
t972 = -t1002 + t1098;
t1237 = t1158 * t972;
t1236 = t1159 * t777;
t1235 = t1159 * t991;
t1233 = t1162 * t912;
t1232 = t1162 * t972;
t1231 = t1163 * t777;
t1230 = t1163 * t991;
t1228 = -pkin(2) * t1041 + pkin(6) * t961;
t1227 = qJD(1) * qJD(3);
t1224 = t1131 * t1059;
t1223 = t1131 * t1158;
t1222 = t1131 * t1162;
t1221 = t1139 * t1159;
t1220 = t1139 * t1163;
t1150 = t1160 ^ 2;
t1219 = t1150 * t1166;
t1037 = t1103 - t1225;
t1218 = t1159 * t1037;
t1030 = t1160 * t1041;
t1138 = t1164 * t1166 * t1160;
t1126 = qJDD(3) + t1138;
t1217 = t1160 * t1126;
t1127 = qJDD(3) - t1138;
t1216 = t1160 * t1127;
t1213 = t1163 * t1037;
t1031 = t1164 * t1041;
t1211 = t1164 * t1127;
t1151 = t1164 ^ 2;
t1209 = t1150 + t1151;
t1206 = t1160 * t1002;
t1205 = t1160 * t1225;
t1204 = t1164 * t1002;
t1203 = t1164 * t1225;
t1134 = -t1219 - t1248;
t1081 = -t1160 * t1134 - t1211;
t1114 = 0.2e1 * t1145 + t1208;
t1202 = -pkin(2) * t1114 + pkin(6) * t1081 + t1030;
t1148 = t1151 * t1166;
t1136 = -t1148 - t1248;
t1079 = t1164 * t1136 - t1217;
t1117 = -0.2e1 * t1144 + t1207;
t1201 = pkin(2) * t1117 + pkin(6) * t1079 - t1031;
t778 = t1158 * t817 + t1162 * t818;
t856 = t1159 * t915 + t1163 * t916;
t754 = t1159 * t778 + t1231;
t768 = -pkin(4) * t912 + pkin(8) * t778;
t738 = -pkin(7) * t754 - pkin(8) * t1231 - t1159 * t768;
t744 = -pkin(3) * t754 - t1246;
t755 = t1163 * t778 - t1236;
t751 = t1160 * t912 + t1164 * t755;
t1200 = -pkin(2) * t754 + pkin(6) * t751 + t1160 * t738 + t1164 * t744;
t860 = t1158 * t922 - t1162 * t919;
t962 = -t1055 - t1056;
t760 = -pkin(4) * t962 + pkin(8) * t860 + t778;
t765 = -pkin(8) * t858 - t777;
t811 = t1159 * t860 + t1163 * t858;
t742 = -pkin(7) * t811 - t1159 * t760 + t1163 * t765;
t782 = -pkin(3) * t811 - t1245;
t813 = -t1159 * t858 + t1163 * t860;
t792 = t1160 * t962 + t1164 * t813;
t1199 = -pkin(2) * t811 + pkin(6) * t792 + t1160 * t742 + t1164 * t782;
t980 = -t1130 - t1055;
t905 = t1162 * t980 - t1261;
t918 = (qJD(5) - t1131) * t1059 + t1194;
t822 = -pkin(4) * t918 + pkin(8) * t905 - t1233;
t904 = t1158 * t980 + t1260;
t847 = t1159 * t905 + t1163 * t904;
t853 = -pkin(8) * t904 + t1238;
t770 = -pkin(7) * t847 - t1159 * t822 + t1163 * t853;
t1180 = pkin(4) * t904 - t817;
t780 = -pkin(3) * t847 - t1180;
t848 = -t1159 * t904 + t1163 * t905;
t821 = t1160 * t918 + t1164 * t848;
t1198 = -pkin(2) * t847 + pkin(6) * t821 + t1160 * t770 + t1164 * t780;
t1015 = -t1056 - t1130;
t935 = -t1158 * t1015 + t1232;
t824 = -pkin(4) * t1256 + pkin(8) * t935 + t1238;
t934 = t1162 * t1015 + t1237;
t861 = -pkin(8) * t934 + t1233;
t866 = t1159 * t935 + t1163 * t934;
t775 = -pkin(7) * t866 - t1159 * t824 + t1163 * t861;
t1175 = pkin(4) * t934 - t818;
t784 = -pkin(3) * t866 - t1175;
t867 = -t1159 * t934 + t1163 * t935;
t827 = t1160 * t1256 + t1164 * t867;
t1197 = -pkin(2) * t866 + pkin(6) * t827 + t1160 * t775 + t1164 * t784;
t1054 = -t1137 - t1247;
t975 = t1159 * t1054 + t1253;
t877 = -pkin(3) * t975 + t915;
t914 = -pkin(7) * t975 + t1235;
t1094 = t1139 * t1109;
t1008 = t1094 - t1172;
t976 = t1163 * t1054 - t1255;
t931 = -t1160 * t1008 + t1164 * t976;
t1196 = -pkin(2) * t975 + pkin(6) * t931 + t1160 * t914 + t1164 * t877;
t1068 = -t1102 - t1137;
t981 = t1163 * t1068 + t1218;
t880 = -pkin(3) * t981 + t916;
t926 = -pkin(7) * t981 + t1230;
t1012 = (qJD(4) - t1139) * t1108 + t1181;
t982 = -t1159 * t1068 + t1213;
t938 = -t1160 * t1012 + t1164 * t982;
t1195 = -pkin(2) * t981 + pkin(6) * t938 + t1160 * t926 + t1164 * t880;
t1192 = -t1161 * t1128 - t1165 * t1129;
t1191 = t1154 * t1138;
t1190 = t1155 * t1138;
t1121 = t1209 * qJDD(1);
t1124 = t1148 + t1219;
t1189 = pkin(2) * t1124 + pkin(6) * t1121 + t961;
t1188 = -pkin(3) * t991 + pkin(7) * t856;
t1123 = t1165 * qJDD(1) - t1161 * t1166;
t1186 = -pkin(5) * t1123 - t1161 * g(3);
t855 = t1159 * t916 - t1163 * t915;
t960 = t1164 * t1017 - t1160 * t1019;
t1183 = t1165 * t1128 - t1161 * t1129;
t1009 = (-qJD(4) - t1139) * t1109 + t1182;
t953 = t1159 * t1009 - t1163 * t1011;
t829 = -pkin(7) * t953 - t855;
t1035 = t1102 + t1247;
t955 = t1163 * t1009 + t1159 * t1011;
t899 = -t1160 * t1035 + t1164 * t955;
t1178 = pkin(6) * t899 + t1160 * t829 + (-pkin(2) - t1243) * t953;
t1177 = pkin(3) * t1008 + pkin(7) * t976 - t1230;
t1176 = pkin(3) * t1012 + pkin(7) * t982 + t1235;
t1173 = pkin(3) * t1035 + pkin(7) * t955 + t856;
t842 = t1160 * t991 + t1164 * t856;
t1171 = pkin(6) * t842 + (-pkin(2) + t1187) * t855;
t1170 = -pkin(3) * t962 + pkin(7) * t813 + t1159 * t765 + t1163 * t760;
t1169 = -pkin(3) * t918 + pkin(7) * t848 + t1159 * t853 + t1163 * t822;
t1168 = -pkin(3) * t1256 + pkin(7) * t867 + t1159 * t861 + t1163 * t824;
t1167 = -pkin(3) * t912 + pkin(7) * t755 - pkin(8) * t1236 + t1163 * t768;
t1135 = t1148 - t1248;
t1133 = -t1219 + t1248;
t1125 = -t1148 + t1219;
t1122 = t1161 * qJDD(1) + t1165 * t1166;
t1107 = t1164 * t1126;
t1106 = t1209 * t1227;
t1095 = -pkin(5) * t1122 + t1165 * g(3);
t1088 = -t1102 + t1137;
t1087 = -t1137 + t1247;
t1086 = t1164 * t1115 - t1150 * t1227;
t1085 = -t1160 * t1116 - t1151 * t1227;
t1084 = t1154 * qJDD(3) + t1155 * t1106;
t1083 = -t1155 * qJDD(3) + t1154 * t1106;
t1080 = -t1160 * t1133 + t1107;
t1078 = t1164 * t1135 - t1216;
t1077 = t1164 * t1134 - t1216;
t1076 = t1164 * t1133 + t1217;
t1075 = t1160 * t1136 + t1107;
t1074 = t1160 * t1135 + t1211;
t1073 = t1185 * t1160;
t1072 = t1184 * t1164;
t1069 = t1102 - t1247;
t1067 = t1155 * t1121 - t1154 * t1124;
t1066 = t1154 * t1121 + t1155 * t1124;
t1063 = -t1160 * t1114 + t1164 * t1117;
t1062 = t1164 * t1114 + t1160 * t1117;
t1051 = t1155 * t1086 - t1191;
t1050 = t1155 * t1085 + t1191;
t1049 = t1154 * t1086 + t1190;
t1048 = t1154 * t1085 - t1190;
t1047 = t1155 * t1080 + t1154 * t1208;
t1046 = t1155 * t1078 + t1154 * t1207;
t1045 = t1154 * t1080 - t1155 * t1208;
t1044 = t1154 * t1078 - t1155 * t1207;
t1029 = -t1056 + t1130;
t1028 = t1055 - t1130;
t1027 = t1155 * t1081 + t1154 * t1114;
t1026 = t1155 * t1079 - t1154 * t1117;
t1025 = t1154 * t1081 - t1155 * t1114;
t1024 = t1154 * t1079 + t1155 * t1117;
t1023 = -pkin(1) * t1119 - t1061;
t1022 = pkin(1) * t1120 - t1060;
t1021 = (t1108 * t1163 - t1109 * t1159) * t1139;
t1020 = (t1108 * t1159 + t1109 * t1163) * t1139;
t1018 = t1155 * t1063 + t1154 * t1125;
t1016 = t1154 * t1063 - t1155 * t1125;
t1010 = t1053 + t1093;
t1007 = t1094 + t1172;
t1006 = t1163 * t1053 + t1109 * t1221;
t1005 = t1159 * t1053 - t1109 * t1220;
t1004 = -t1108 * t1220 + t1159 * t1172;
t1003 = t1108 * t1221 + t1163 * t1172;
t1001 = t1164 * t1021 - t1160 * t1103;
t1000 = t1160 * t1021 + t1164 * t1103;
t999 = t1056 - t1055;
t998 = -pkin(6) * t1077 + t1031;
t997 = t1163 * t1087 + t1218;
t996 = -t1159 * t1088 + t1253;
t995 = -pkin(6) * t1075 + t1030;
t994 = t1159 * t1087 - t1213;
t993 = t1163 * t1088 + t1255;
t986 = pkin(1) * t989;
t984 = -pkin(2) * t1077 + t1019;
t983 = -pkin(2) * t1075 + t1017;
t977 = pkin(1) * t1241 + qJ(2) * t1193;
t968 = (t1057 * t1162 - t1059 * t1158) * t1131;
t967 = (t1057 * t1158 + t1059 * t1162) * t1131;
t966 = t1164 * t1006 + t1205;
t965 = t1164 * t1004 - t1205;
t964 = t1160 * t1006 - t1203;
t963 = t1160 * t1004 + t1203;
t956 = -t1059 * qJD(5) - t1194;
t954 = t1163 * t1008 - t1159 * t1010;
t952 = t1159 * t1008 + t1163 * t1010;
t950 = t1155 * t1001 + t1154 * t1020;
t949 = t1154 * t1001 - t1155 * t1020;
t948 = pkin(1) * t1024 + t1201;
t947 = pkin(1) * t1025 + t1202;
t946 = -t1160 * t1007 + t1164 * t997;
t945 = t1160 * t1011 + t1164 * t996;
t944 = t1164 * t1007 + t1160 * t997;
t943 = -t1164 * t1011 + t1160 * t996;
t942 = t1162 * t1028 + t1237;
t941 = -t1158 * t1029 + t1260;
t940 = t1158 * t1028 - t1232;
t939 = t1162 * t1029 + t1261;
t937 = t1164 * t1012 + t1160 * t982;
t933 = -qJ(2) * t1066 + t1155 * t960;
t932 = qJ(2) * t1067 + t1154 * t960;
t930 = t1164 * t1008 + t1160 * t976;
t928 = t1154 * t1041 + t1155 * t961;
t927 = -t1155 * t1041 + t1154 * t961;
t925 = t1160 * t1069 + t1164 * t954;
t924 = -t1164 * t1069 + t1160 * t954;
t913 = pkin(1) * t1066 + t1189;
t910 = t1059 * t1223 + t1162 * t957;
t909 = -t1059 * t1222 + t1158 * t957;
t908 = -t1057 * t1222 - t1158 * t956;
t907 = -t1057 * t1223 + t1162 * t956;
t903 = t1154 * t1005 + t1155 * t966;
t902 = -t1154 * t1003 + t1155 * t965;
t901 = -t1155 * t1005 + t1154 * t966;
t900 = t1155 * t1003 + t1154 * t965;
t898 = t1164 * t1035 + t1160 * t955;
t896 = -t1159 * t967 + t1163 * t968;
t895 = t1159 * t968 + t1163 * t967;
t894 = -qJ(2) * t1025 - t1154 * t984 + t1155 * t998;
t893 = -qJ(2) * t1024 - t1154 * t983 + t1155 * t995;
t892 = t1154 * t994 + t1155 * t946;
t891 = t1154 * t993 + t1155 * t945;
t890 = t1154 * t946 - t1155 * t994;
t889 = t1154 * t945 - t1155 * t993;
t888 = -t1160 * t1098 + t1164 * t896;
t887 = t1164 * t1098 + t1160 * t896;
t886 = t1154 * t981 + t1155 * t938;
t885 = t1154 * t938 - t1155 * t981;
t884 = -pkin(1) * t1077 + qJ(2) * t1027 + t1154 * t998 + t1155 * t984;
t883 = -pkin(1) * t1075 + qJ(2) * t1026 + t1154 * t995 + t1155 * t983;
t882 = t1154 * t975 + t1155 * t931;
t881 = t1154 * t931 - t1155 * t975;
t873 = -t1159 * t940 + t1163 * t942;
t872 = -t1159 * t939 + t1163 * t941;
t871 = t1159 * t942 + t1163 * t940;
t870 = t1159 * t941 + t1163 * t939;
t869 = t1154 * t952 + t1155 * t925;
t868 = t1154 * t925 - t1155 * t952;
t864 = t1154 * t953 + t1155 * t899;
t863 = t1154 * t899 - t1155 * t953;
t862 = pkin(1) * t927 + t1228;
t859 = -t1158 * t1256 - t1162 * t918;
t857 = -t1158 * t918 + t1162 * t1256;
t852 = -t1159 * t909 + t1163 * t910;
t851 = -t1159 * t907 + t1163 * t908;
t850 = t1159 * t910 + t1163 * t909;
t849 = t1159 * t908 + t1163 * t907;
t845 = -pkin(2) * t937 - t1176;
t844 = -pkin(2) * t930 - t1177;
t843 = -qJ(2) * t927 - (pkin(2) * t1154 - pkin(6) * t1155) * t960;
t841 = t1160 * t856 - t1164 * t991;
t840 = t1154 * t895 + t1155 * t888;
t839 = t1154 * t888 - t1155 * t895;
t838 = t1164 * t852 + t1206;
t837 = t1164 * t851 - t1206;
t836 = t1160 * t852 - t1204;
t835 = t1160 * t851 + t1204;
t833 = -t1160 * t919 + t1164 * t873;
t832 = t1160 * t922 + t1164 * t872;
t831 = t1160 * t873 + t1164 * t919;
t830 = t1160 * t872 - t1164 * t922;
t826 = t1160 * t867 - t1164 * t1256;
t823 = qJ(2) * t928 - (-pkin(2) * t1155 - pkin(6) * t1154 - pkin(1)) * t960;
t820 = t1160 * t848 - t1164 * t918;
t815 = -pkin(6) * t937 - t1160 * t880 + t1164 * t926;
t814 = -pkin(6) * t930 - t1160 * t877 + t1164 * t914;
t812 = -t1159 * t857 + t1163 * t859;
t810 = t1159 * t859 + t1163 * t857;
t808 = -pkin(2) * t898 - t1173;
t807 = t1154 * t871 + t1155 * t833;
t806 = t1154 * t870 + t1155 * t832;
t805 = t1154 * t833 - t1155 * t871;
t804 = t1154 * t832 - t1155 * t870;
t803 = t1160 * t999 + t1164 * t812;
t802 = t1160 * t812 - t1164 * t999;
t801 = t1154 * t855 + t1155 * t842;
t800 = t1154 * t842 - t1155 * t855;
t799 = -pkin(6) * t898 + t1164 * t829 + t953 * t1244;
t798 = t1154 * t850 + t1155 * t838;
t797 = t1154 * t849 + t1155 * t837;
t796 = t1154 * t838 - t1155 * t850;
t795 = t1154 * t837 - t1155 * t849;
t794 = t1154 * t866 + t1155 * t827;
t793 = t1154 * t827 - t1155 * t866;
t791 = t1160 * t813 - t1164 * t962;
t789 = -pkin(2) * t841 - t1188;
t788 = pkin(1) * t885 + t1195;
t787 = t1154 * t847 + t1155 * t821;
t786 = t1154 * t821 - t1155 * t847;
t785 = pkin(1) * t881 + t1196;
t776 = -pkin(6) * t841 + (-pkin(7) * t1164 + t1244) * t855;
t773 = -qJ(2) * t885 - t1154 * t845 + t1155 * t815;
t772 = pkin(1) * t863 + t1178;
t771 = -qJ(2) * t881 - t1154 * t844 + t1155 * t814;
t767 = -pkin(1) * t937 + qJ(2) * t886 + t1154 * t815 + t1155 * t845;
t766 = -pkin(1) * t930 + qJ(2) * t882 + t1154 * t814 + t1155 * t844;
t764 = t1154 * t810 + t1155 * t803;
t763 = t1154 * t803 - t1155 * t810;
t762 = t1154 * t811 + t1155 * t792;
t761 = t1154 * t792 - t1155 * t811;
t759 = -pkin(2) * t826 - t1168;
t758 = -qJ(2) * t863 - t1154 * t808 + t1155 * t799;
t757 = -pkin(2) * t820 - t1169;
t756 = -pkin(1) * t898 + qJ(2) * t864 + t1154 * t799 + t1155 * t808;
t752 = pkin(1) * t800 + t1171;
t750 = t1160 * t755 - t1164 * t912;
t748 = -pkin(6) * t826 - t1160 * t784 + t1164 * t775;
t747 = -qJ(2) * t800 - t1154 * t789 + t1155 * t776;
t746 = -pkin(6) * t820 - t1160 * t780 + t1164 * t770;
t745 = -pkin(1) * t841 + qJ(2) * t801 + t1154 * t776 + t1155 * t789;
t740 = pkin(1) * t793 + t1197;
t739 = pkin(1) * t786 + t1198;
t736 = t1154 * t754 + t1155 * t751;
t735 = t1154 * t751 - t1155 * t754;
t734 = -pkin(2) * t791 - t1170;
t733 = -qJ(2) * t793 - t1154 * t759 + t1155 * t748;
t732 = -pkin(6) * t791 - t1160 * t782 + t1164 * t742;
t731 = -pkin(1) * t826 + qJ(2) * t794 + t1154 * t748 + t1155 * t759;
t730 = -qJ(2) * t786 - t1154 * t757 + t1155 * t746;
t729 = -pkin(1) * t820 + qJ(2) * t787 + t1154 * t746 + t1155 * t757;
t728 = -pkin(2) * t750 - t1167;
t727 = pkin(1) * t761 + t1199;
t726 = -pkin(6) * t750 - t1160 * t744 + t1164 * t738;
t725 = -qJ(2) * t761 - t1154 * t734 + t1155 * t732;
t724 = -pkin(1) * t791 + qJ(2) * t762 + t1154 * t732 + t1155 * t734;
t723 = pkin(1) * t735 + t1200;
t722 = -qJ(2) * t735 - t1154 * t728 + t1155 * t726;
t721 = -pkin(1) * t750 + qJ(2) * t736 + t1154 * t726 + t1155 * t728;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1123, 0, -t1122, 0, t1186, -t1095, -t1183, -pkin(5) * t1183, 0, 0, t1064, 0, -t1250, 0, t1263, -t1262, t1265, pkin(5) * t1265 + qJ(2) * t1229 - t1161 * t977, -t1161 * t1049 + t1165 * t1051, -t1161 * t1016 + t1165 * t1018, -t1161 * t1045 + t1165 * t1047, -t1161 * t1048 + t1165 * t1050, -t1161 * t1044 + t1165 * t1046, -t1161 * t1083 + t1165 * t1084, t1165 * t893 - t1161 * t883 - pkin(5) * (t1165 * t1024 + t1161 * t1026), t1165 * t894 - t1161 * t884 - pkin(5) * (t1165 * t1025 + t1161 * t1027), t1165 * t933 - t1161 * t932 - pkin(5) * (t1165 * t1066 + t1161 * t1067), t1165 * t843 - t1161 * t823 - pkin(5) * (t1161 * t928 + t1165 * t927), -t1161 * t901 + t1165 * t903, -t1161 * t868 + t1165 * t869, -t1161 * t889 + t1165 * t891, -t1161 * t900 + t1165 * t902, -t1161 * t890 + t1165 * t892, -t1161 * t949 + t1165 * t950, t1165 * t771 - t1161 * t766 - pkin(5) * (t1161 * t882 + t1165 * t881), t1165 * t773 - t1161 * t767 - pkin(5) * (t1161 * t886 + t1165 * t885), t1165 * t758 - t1161 * t756 - pkin(5) * (t1161 * t864 + t1165 * t863), t1165 * t747 - t1161 * t745 - pkin(5) * (t1161 * t801 + t1165 * t800), -t1161 * t796 + t1165 * t798, -t1161 * t763 + t1165 * t764, -t1161 * t804 + t1165 * t806, -t1161 * t795 + t1165 * t797, -t1161 * t805 + t1165 * t807, -t1161 * t839 + t1165 * t840, t1165 * t730 - t1161 * t729 - pkin(5) * (t1161 * t787 + t1165 * t786), t1165 * t733 - t1161 * t731 - pkin(5) * (t1161 * t794 + t1165 * t793), t1165 * t725 - t1161 * t724 - pkin(5) * (t1161 * t762 + t1165 * t761), t1165 * t722 - t1161 * t721 - pkin(5) * (t1161 * t736 + t1165 * t735); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1122, 0, t1123, 0, t1095, t1186, t1192, pkin(5) * t1192, 0, 0, t1250, 0, t1064, 0, t1262, t1263, t1264, pkin(5) * t1264 + qJ(2) * t1234 + t1165 * t977, t1165 * t1049 + t1161 * t1051, t1165 * t1016 + t1161 * t1018, t1165 * t1045 + t1161 * t1047, t1165 * t1048 + t1161 * t1050, t1165 * t1044 + t1161 * t1046, t1165 * t1083 + t1161 * t1084, t1161 * t893 + t1165 * t883 + pkin(5) * (-t1161 * t1024 + t1165 * t1026), t1161 * t894 + t1165 * t884 + pkin(5) * (-t1161 * t1025 + t1165 * t1027), t1161 * t933 + t1165 * t932 + pkin(5) * (-t1161 * t1066 + t1165 * t1067), t1161 * t843 + t1165 * t823 + pkin(5) * (-t1161 * t927 + t1165 * t928), t1161 * t903 + t1165 * t901, t1161 * t869 + t1165 * t868, t1161 * t891 + t1165 * t889, t1161 * t902 + t1165 * t900, t1161 * t892 + t1165 * t890, t1161 * t950 + t1165 * t949, t1161 * t771 + t1165 * t766 + pkin(5) * (-t1161 * t881 + t1165 * t882), t1161 * t773 + t1165 * t767 + pkin(5) * (-t1161 * t885 + t1165 * t886), t1161 * t758 + t1165 * t756 + pkin(5) * (-t1161 * t863 + t1165 * t864), t1161 * t747 + t1165 * t745 + pkin(5) * (-t1161 * t800 + t1165 * t801), t1161 * t798 + t1165 * t796, t1161 * t764 + t1165 * t763, t1161 * t806 + t1165 * t804, t1161 * t797 + t1165 * t795, t1161 * t807 + t1165 * t805, t1161 * t840 + t1165 * t839, t1161 * t730 + t1165 * t729 + pkin(5) * (-t1161 * t786 + t1165 * t787), t1161 * t733 + t1165 * t731 + pkin(5) * (-t1161 * t793 + t1165 * t794), t1161 * t725 + t1165 * t724 + pkin(5) * (-t1161 * t761 + t1165 * t762), t1161 * t722 + t1165 * t721 + pkin(5) * (-t1161 * t735 + t1165 * t736); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1128, t1129, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1022, t1023, 0, -t986, t1073, t1062, t1076, -t1072, t1074, 0, t948, t947, t913, t862, t964, t924, t943, t963, t944, t1000, t785, t788, t772, t752, t836, t802, t830, t835, t831, t887, t739, t740, t727, t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1166, 0, 0, -g(3), -t1128, 0, 0, 0, t1120, 0, -t1119, 0, t1249, -t1091, t989, qJ(2) * t989, t1051, t1018, t1047, t1050, t1046, t1084, t893, t894, t933, t843, t903, t869, t891, t902, t892, t950, t771, t773, t758, t747, t798, t764, t806, t797, t807, t840, t730, t733, t725, t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1166, 0, qJDD(1), 0, g(3), 0, -t1129, 0, 0, 0, t1119, 0, t1120, 0, t1091, t1249, t1193, t977, t1049, t1016, t1045, t1048, t1044, t1083, t883, t884, t932, t823, t901, t868, t889, t900, t890, t949, t766, t767, t756, t745, t796, t763, t804, t795, t805, t839, t729, t731, t724, t721; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1128, t1129, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1022, t1023, 0, -t986, t1073, t1062, t1076, -t1072, t1074, 0, t948, t947, t913, t862, t964, t924, t943, t963, t944, t1000, t785, t788, t772, t752, t836, t802, t830, t835, t831, t887, t739, t740, t727, t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1166, 0, 0, -t1241, t1060, 0, t1086, t1063, t1080, t1085, t1078, t1106, t995, t998, t960, pkin(6) * t960, t966, t925, t945, t965, t946, t1001, t814, t815, t799, t776, t838, t803, t832, t837, t833, t888, t746, t748, t732, t726; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1166, 0, qJDD(1), 0, t1241, 0, t1061, 0, t1138, -t1125, -t1208, -t1138, -t1207, -qJDD(3), t983, t984, 0, pkin(2) * t960, -t1005, -t952, -t993, t1003, -t994, -t1020, t844, t845, t808, t789, -t850, -t810, -t870, -t849, -t871, -t895, t757, t759, t734, t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1060, -t1061, 0, 0, t1073, t1062, t1076, -t1072, t1074, 0, t1201, t1202, t1189, t1228, t964, t924, t943, t963, t944, t1000, t1196, t1195, t1178, t1171, t836, t802, t830, t835, t831, t887, t1198, t1197, t1199, t1200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1115, t1117, t1126, -t1145, t1135, t1145, 0, t1041, t1017, 0, t1006, t954, t996, t1004, t997, t1021, t914, t926, t829, -pkin(7) * t855, t852, t812, t872, t851, t873, t896, t770, t775, t742, t738; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1144, t1114, t1133, t1116, t1127, -t1144, -t1041, 0, t1019, 0, -t1225, -t1069, -t1011, t1225, t1007, t1103, t877, t880, -pkin(3) * t953, -pkin(3) * t855, -t1002, -t999, -t922, t1002, t919, t1098, t780, t784, t782, t744; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1138, t1125, t1208, t1138, t1207, qJDD(3), -t1017, -t1019, 0, 0, t1005, t952, t993, -t1003, t994, t1020, t1177, t1176, t1173, t1188, t850, t810, t870, t849, t871, t895, t1169, t1168, t1170, t1167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1053, t1008, t1174, -t1093, t1087, t1093, 0, t991, t915, 0, t910, t859, t941, t908, t942, t968, t853, t861, t765, -pkin(8) * t777; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1094, t1010, t1088, -t1172, -t1037, t1094, -t991, 0, t916, 0, t909, t857, t939, t907, t940, t967, t822, t824, t760, t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1225, t1069, t1011, -t1225, -t1007, -t1103, -t915, -t916, 0, 0, t1002, t999, t922, -t1002, -t919, -t1098, t1180, t1175, t1245, t1246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t957, -t918, t1251, -t1033, t1028, t1033, 0, t912, t817, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1224, t1256, t1029, t956, -t972, t1224, -t912, 0, t818, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1002, t999, t922, -t1002, -t919, -t1098, -t817, -t818, 0, 0;];
m_new_reg = t1;
