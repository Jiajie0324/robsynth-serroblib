% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x31]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:37
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRR10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRRRR10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:36:02
% EndTime: 2019-12-31 22:37:00
% DurationCPUTime: 36.56s
% Computational Cost: add. (16766->926), mult. (41604->1262), div. (0->0), fcn. (46491->10), ass. (0->695)
t1024 = sin(qJ(4));
t620 = cos(qJ(3));
t599 = t1024 * t620;
t1025 = cos(qJ(4));
t617 = sin(qJ(3));
t600 = t1025 * t617;
t565 = -t600 - t599;
t1081 = 0.2e1 * t565;
t616 = sin(qJ(5));
t619 = cos(qJ(5));
t881 = qJD(2) * t619;
t814 = t616 * t881;
t1128 = t814 * t1081;
t1027 = -t619 / 0.2e1;
t1030 = t616 / 0.2e1;
t614 = sin(pkin(5));
t618 = sin(qJ(2));
t959 = t614 * t618;
t586 = t619 * t959;
t819 = t1024 * t617;
t825 = t1025 * t620;
t563 = t819 - t825;
t621 = cos(qJ(2));
t958 = t614 * t621;
t474 = t563 * t958;
t942 = t616 * t474;
t400 = -t586 - t942;
t925 = t619 * t474;
t401 = t616 * t959 - t925;
t1064 = t401 * t1027 + t400 * t1030;
t615 = cos(pkin(5));
t548 = t615 * t617 + t620 * t959;
t516 = t1025 * t548;
t547 = t615 * t620 - t617 * t959;
t820 = t1024 * t547;
t1074 = t820 + t516;
t949 = t616 * t1074;
t306 = t619 * t958 + t949;
t933 = t619 * t306;
t931 = t619 * t1074;
t308 = -t616 * t958 + t931;
t985 = t308 * t616;
t679 = t933 / 0.2e1 + t985 / 0.2e1;
t941 = t616 * t619;
t392 = t1024 * t548 - t1025 * t547;
t980 = t392 * t565;
t1124 = t679 * t563 - t941 * t980;
t1116 = t1064 + t1124;
t1127 = -qJD(1) * t1116 + t563 * t1128;
t1038 = -t563 / 0.2e1;
t607 = qJD(5) * t619;
t595 = t616 * t607;
t493 = t595 * t1081;
t609 = t616 ^ 2;
t611 = t619 ^ 2;
t591 = t611 - t609;
t840 = qJD(3) + qJD(4);
t754 = t840 * t563;
t1126 = -t591 * t754 - t1127 + t493;
t1125 = t493 + t1127;
t604 = -pkin(3) * t620 - pkin(2);
t1031 = -t604 / 0.2e1;
t1023 = pkin(1) * t621;
t549 = pkin(7) * t959 - t615 * t1023;
t511 = -pkin(2) * t615 + t549;
t399 = -pkin(3) * t547 + t511;
t1055 = pkin(8) + pkin(9);
t580 = t1055 * t617;
t581 = t1055 * t620;
t726 = t1024 * t581 + t1025 * t580;
t791 = -t958 / 0.2e1;
t653 = t392 * t1031 + t399 * t1038 + t726 * t791;
t550 = (pkin(2) * t618 - pkin(8) * t621) * t614;
t522 = t620 * t550;
t940 = t617 * t549;
t760 = t522 + t940;
t924 = t620 * t621;
t293 = (pkin(3) * t618 - pkin(9) * t924) * t614 + t760;
t272 = t1024 * t293;
t828 = t617 * t958;
t520 = t617 * t550;
t521 = t620 * t549;
t908 = t520 - t521;
t324 = -pkin(9) * t828 + t908;
t313 = t1025 * t324;
t917 = -t272 / 0.2e1 - t313 / 0.2e1;
t69 = t653 - t917;
t70 = t653 + t917;
t1060 = t392 ^ 2;
t1113 = -t1074 ^ 2 + t1060;
t1123 = qJD(1) * t1113;
t710 = t933 + t985;
t1100 = t710 * t392;
t1114 = t1100 * qJD(1);
t1115 = -t1064 + t1124;
t98 = t710 * qJD(5);
t1121 = qJD(2) * t1115 + t1114 - t98;
t1120 = -qJD(2) * t1116 - t1114 - t98;
t1101 = t619 * t392;
t1119 = -t1101 / 0.2e1;
t1118 = t1101 / 0.2e1;
t1102 = t616 * t392;
t1117 = t1102 / 0.2e1;
t1019 = t392 * pkin(10);
t212 = pkin(4) * t1074 + t1019;
t664 = -t1024 * t580 + t1025 * t581;
t1080 = -t664 / 0.2e1;
t1109 = t1074 / 0.2e1;
t1076 = t664 * t619;
t732 = t563 * pkin(4) + t565 * pkin(10);
t660 = t604 + t732;
t251 = t616 * t660 + t1076;
t681 = t308 * t1080 + t251 * t1109;
t1077 = t664 * t616;
t250 = -t619 * t660 + t1077;
t682 = t306 * t1080 + t250 * t1109;
t1111 = -t392 / 0.2e1;
t1110 = t392 / 0.2e1;
t1020 = pkin(10) * t1074;
t890 = qJD(1) * t1074;
t817 = t392 * t890;
t1106 = t399 * t392;
t422 = t619 * t563;
t1105 = t422 * t840;
t551 = t615 * t618 * pkin(1) + pkin(7) * t958;
t512 = pkin(8) * t615 + t551;
t734 = -pkin(2) * t621 - pkin(8) * t618;
t513 = (-pkin(1) + t734) * t614;
t340 = t512 * t620 + t513 * t617;
t258 = pkin(9) * t547 + t340;
t249 = t1025 * t258;
t339 = t617 * t512 - t620 * t513;
t257 = -t548 * pkin(9) - t339;
t231 = -pkin(3) * t958 + t257;
t824 = t1024 * t231;
t136 = t249 + t824;
t129 = -pkin(10) * t958 + t136;
t733 = pkin(4) * t392 - t1020;
t631 = t399 + t733;
t53 = t129 * t616 - t619 * t631;
t1104 = t53 * t1074;
t54 = t619 * t129 + t616 * t631;
t1103 = t54 * t1074;
t1099 = t726 * t616;
t1098 = t726 * t619;
t1097 = t1074 * t306;
t1096 = t1074 * t308;
t1095 = t1074 * t399;
t802 = -t980 / 0.2e1;
t979 = t1074 * t563;
t182 = t979 / 0.2e1 + t802;
t1094 = t182 * qJD(4);
t852 = t392 * qJD(3);
t853 = t392 * qJD(4);
t965 = t565 * t1074;
t1075 = t840 * t941;
t951 = t616 * t306;
t984 = t308 * t619;
t166 = -t951 / 0.2e1 + t984 / 0.2e1;
t765 = t609 / 0.2e1 - t611 / 0.2e1;
t418 = t765 * t565;
t104 = qJD(1) * t166 + qJD(2) * t418 + t1075;
t1039 = t516 / 0.2e1;
t1066 = t820 / 0.2e1 + t1039;
t1091 = qJD(5) * t1066;
t769 = 0.2e1 * t1110;
t731 = t769 * t563;
t1090 = t965 / 0.2e1 + t731;
t164 = t166 * qJD(5);
t894 = qJD(1) * t308;
t1089 = t894 * t1101 + t164;
t651 = t825 / 0.2e1 - t819 / 0.2e1;
t348 = (t1038 + t651) * t958;
t886 = qJD(1) * t621;
t816 = t614 * t886;
t1088 = t348 * qJD(2) - t392 * t816;
t1087 = (t250 - t1077) * t565;
t1086 = (t251 - t1076) * t565;
t884 = qJD(2) * t565;
t811 = t563 * t884;
t758 = -qJD(1) * t182 + t811;
t675 = qJD(2) * t182 + t817;
t1035 = t565 / 0.2e1;
t552 = t600 / 0.2e1 + t599 / 0.2e1;
t347 = (t1035 - t552) * t958;
t1085 = t347 * qJD(2) - t1074 * t816;
t1084 = qJD(1) * t1066 + t552 * qJD(2);
t1083 = t840 * t726;
t1082 = t840 * t664;
t1016 = t53 * t565;
t230 = t1025 * t231;
t822 = t1024 * t258;
t135 = t822 - t230;
t128 = pkin(4) * t958 + t135;
t419 = t616 * t563;
t1079 = -t128 * t419 / 0.2e1 + t1016 / 0.2e1;
t1015 = t54 * t565;
t776 = -t422 / 0.2e1;
t1078 = t128 * t776 + t1015 / 0.2e1;
t1045 = -t1074 / 0.2e1;
t837 = t1024 * pkin(3);
t602 = t837 + pkin(10);
t838 = t1025 * pkin(3);
t603 = -t838 - pkin(4);
t1033 = -t603 / 0.2e1;
t748 = -t838 / 0.2e1;
t688 = t748 + t1033;
t636 = t602 * t1045 + t688 * t392;
t1073 = -t1020 / 0.2e1 + t636;
t843 = t552 * qJD(5);
t1072 = -t758 + t843;
t1037 = t563 / 0.2e1;
t179 = t1037 * t1074 + t802;
t1071 = qJD(1) * t179 - t811 + t843;
t117 = t563 * t392 + t965;
t558 = t565 ^ 2;
t839 = -t563 ^ 2 + t558;
t855 = t839 * qJD(2);
t1068 = qJD(1) * t117 - t855;
t78 = t1109 * t1081 + t731;
t1065 = qJD(1) * t78 - t855;
t821 = t1024 * t324;
t826 = t1025 * t293;
t916 = t826 / 0.2e1 - t821 / 0.2e1;
t119 = t306 ^ 2 - t308 ^ 2;
t82 = (t951 - t984) * t565;
t1063 = -qJD(1) * t119 + qJD(2) * t82 + t710 * t840;
t146 = t679 * t565;
t1062 = qJD(2) * t146 + t166 * t840 - t306 * t894;
t1061 = qJD(1) * t146 + t418 * t840 - t558 * t814;
t79 = -qJD(1) * t710 + t591 * t840 + t1128;
t1058 = -pkin(2) / 0.2e1;
t1057 = -pkin(4) / 0.2e1;
t1056 = -pkin(10) / 0.2e1;
t1054 = t128 / 0.2e1;
t1053 = -t249 / 0.2e1;
t1052 = t306 / 0.2e1;
t1051 = -t308 / 0.2e1;
t1017 = t565 * pkin(4);
t1018 = t563 * pkin(10);
t452 = -t1017 + t1018;
t1043 = t452 / 0.2e1;
t1041 = t726 / 0.2e1;
t499 = -t516 / 0.2e1;
t1036 = -t565 / 0.2e1;
t1034 = t602 / 0.2e1;
t1032 = t603 / 0.2e1;
t1029 = -t617 / 0.2e1;
t1028 = t617 / 0.2e1;
t1026 = t619 / 0.2e1;
t1022 = pkin(3) * t548;
t1021 = pkin(3) * t617;
t823 = t1024 * t257;
t147 = t823 + t249;
t187 = t1022 + t212;
t936 = t619 * t187;
t827 = t1025 * t257;
t148 = t827 - t822;
t956 = t616 * t148;
t711 = t936 - t956;
t9 = -t1102 * t128 + t147 * t306 + t392 * t711 - t1104;
t1014 = t9 * qJD(1);
t1013 = t78 * qJD(3) + t117 * qJD(4);
t23 = -t128 * t306 + t392 * t53;
t1012 = qJD(1) * t23;
t24 = t128 * t308 - t392 * t54;
t1011 = qJD(1) * t24;
t51 = -t392 * t1022 - t147 * t958 - t1095;
t1008 = qJD(1) * t51;
t52 = t1022 * t1074 + t148 * t958 - t1106;
t1007 = qJD(1) * t52;
t629 = t306 * t1035 + t1090 * t616;
t473 = t565 * t958;
t926 = t619 * t473;
t777 = t926 / 0.2e1;
t56 = t777 + t629;
t1006 = qJD(1) * t56;
t785 = t949 / 0.2e1;
t642 = (t785 + t1052) * t565 + t392 * t419;
t58 = t777 + t642;
t1005 = qJD(1) * t58;
t630 = t308 * t1036 - t1090 * t619;
t943 = t616 * t473;
t784 = t943 / 0.2e1;
t60 = t784 + t630;
t1004 = qJD(1) * t60;
t641 = (-t931 / 0.2e1 + t1051) * t565 - t392 * t422;
t62 = t784 + t641;
t1003 = qJD(1) * t62;
t75 = -t135 * t958 - t1106;
t1002 = qJD(1) * t75;
t76 = -t136 * t958 - t1095;
t1001 = qJD(1) * t76;
t92 = -t1060 * t616 + t1097;
t999 = qJD(1) * t92;
t93 = -t1102 * t392 + t1097;
t998 = qJD(1) * t93;
t94 = -t1060 * t619 + t1096;
t997 = qJD(1) * t94;
t95 = -t1101 * t392 + t1096;
t996 = qJD(1) * t95;
t938 = t619 * t148;
t954 = t616 * t187;
t712 = t938 + t954;
t10 = -t1101 * t128 + t147 * t308 - t392 * t712 - t1103;
t994 = t10 * qJD(1);
t920 = -t128 + t135;
t935 = t619 * t212;
t11 = t136 * t306 - t1104 + (t920 * t616 + t935) * t392;
t993 = t11 * qJD(1);
t953 = t616 * t212;
t12 = t136 * t308 - t1103 + (t920 * t619 - t953) * t392;
t992 = t12 * qJD(1);
t663 = -t821 + t826;
t162 = -pkin(4) * t959 - t663;
t470 = pkin(3) * t828 + t551;
t229 = -pkin(4) * t473 + pkin(10) * t474 + t470;
t934 = t619 * t229;
t915 = t313 + t272;
t163 = pkin(10) * t959 + t915;
t955 = t616 * t163;
t83 = t934 - t955;
t13 = t128 * t400 + t162 * t306 + t392 * t83 + t473 * t53;
t991 = t13 * qJD(1);
t990 = t136 * t616;
t989 = t136 * t619;
t937 = t619 * t163;
t952 = t616 * t229;
t84 = t937 + t952;
t14 = t128 * t401 + t162 * t308 - t392 * t84 + t473 * t54;
t988 = t14 * qJD(1);
t987 = t147 * t616;
t986 = t147 * t619;
t33 = t135 * t959 - t470 * t392 + t399 * t473 + t663 * t958;
t983 = t33 * qJD(1);
t34 = t470 * t1074 - t399 * t474 + (-t136 * t618 + t915 * t621) * t614;
t982 = t34 * qJD(1);
t790 = t958 / 0.2e1;
t706 = t1024 * t790;
t628 = t1053 - t824 / 0.2e1 + pkin(3) * t706;
t686 = t1053 - t823 / 0.2e1;
t39 = t628 - t686;
t981 = t39 * qJD(1);
t977 = t399 * t565;
t976 = t401 * t616;
t737 = t614 * t1025 / 0.2e1;
t707 = t621 * t737;
t661 = -t230 / 0.2e1 + pkin(3) * t707;
t41 = t827 / 0.2e1 + t661;
t974 = t41 * qJD(1);
t969 = t511 * t620;
t968 = t548 * t563;
t967 = t548 * t565;
t966 = t563 * t603;
t964 = t565 * t602;
t963 = t565 * t616;
t962 = t565 * t619;
t608 = t614 ^ 2;
t613 = t621 ^ 2;
t961 = t608 * t613;
t960 = t608 * t618;
t957 = t616 * t135;
t425 = t452 + t1021;
t947 = t616 * t425;
t946 = t616 * t452;
t939 = t619 * t135;
t930 = t619 * t425;
t929 = t619 * t452;
t91 = -t306 * t401 - t308 * t400;
t921 = t91 * qJD(1);
t919 = t179 * qJD(3) + t1094;
t800 = t392 * t1036;
t181 = -t800 - t979 / 0.2e1;
t918 = t181 * qJD(3) - t1094;
t345 = t839 * t616;
t858 = t345 * qJD(2);
t914 = -t419 * qJD(5) + t858;
t405 = t418 * qJD(5);
t449 = t611 * t811;
t913 = t405 - t449;
t346 = t839 * t619;
t857 = t346 * qJD(2);
t912 = t422 * qJD(5) - t857;
t849 = t422 * qJD(2);
t911 = t849 + t607;
t907 = t840 * t552;
t592 = -t617 ^ 2 + t620 ^ 2;
t738 = t308 * t776;
t801 = t980 / 0.2e1;
t655 = t611 * t801 + t738;
t799 = -t976 / 0.2e1;
t107 = t799 + t655;
t906 = qJD(1) * t107;
t654 = -t611 * t800 + t738;
t109 = t799 + t654;
t905 = qJD(1) * t109;
t793 = -t959 / 0.2e1;
t803 = t306 * t1038;
t112 = t803 + t925 / 0.2e1 + (t801 + t793) * t616;
t904 = qJD(1) * t112;
t670 = t308 * t1038 + t1118 * t565;
t728 = t586 / 0.2e1 + t942 / 0.2e1;
t113 = t670 - t728;
t903 = qJD(1) * t113;
t189 = (t1111 + t1110) * t941;
t901 = qJD(1) * t189;
t196 = -t339 * t958 + t511 * t547;
t900 = qJD(1) * t196;
t197 = -t340 * t958 - t511 * t548;
t899 = qJD(1) * t197;
t898 = qJD(1) * t1102;
t201 = t769 * t616;
t897 = qJD(1) * t201;
t896 = qJD(1) * t1101;
t208 = t769 * t619;
t895 = qJD(1) * t208;
t891 = qJD(1) * t392;
t469 = t617 * t707 + t620 * t706;
t889 = qJD(1) * t469;
t888 = qJD(1) * t548;
t887 = qJD(1) * t615;
t885 = qJD(2) * t563;
t883 = qJD(2) * t604;
t882 = qJD(2) * t617;
t880 = qJD(2) * t620;
t879 = qJD(2) * t621;
t878 = qJD(3) * t616;
t877 = qJD(3) * t617;
t876 = qJD(3) * t619;
t875 = qJD(3) * t620;
t874 = qJD(4) * t604;
t873 = qJD(4) * t616;
t872 = qJD(4) * t619;
t871 = qJD(5) * t392;
t870 = qJD(5) * t469;
t869 = qJD(5) * t616;
t120 = t339 * t959 - t511 * t828 + t551 * t547 + t760 * t958;
t868 = t120 * qJD(1);
t121 = t551 * t548 + (-t340 * t618 + (t908 + t969) * t621) * t614;
t867 = t121 * qJD(1);
t124 = t306 * t473 - t392 * t400;
t866 = t124 * qJD(1);
t125 = -t308 * t473 + t392 * t401;
t865 = t125 * qJD(1);
t149 = t1074 * t473 + t392 * t474;
t864 = t149 * qJD(1);
t770 = t1109 + t1045;
t198 = t770 * t616;
t863 = t198 * qJD(1);
t204 = t770 * t619;
t862 = t204 * qJD(1);
t225 = t392 * t959 + t473 * t958;
t861 = t225 * qJD(1);
t226 = -t1074 * t959 - t474 * t958;
t860 = t226 * qJD(1);
t265 = t547 * t620 - t548 * t617;
t314 = t265 * t958;
t859 = t314 * qJD(1);
t334 = t347 * qJD(1);
t336 = t348 * qJD(1);
t385 = t499 + t1039;
t856 = t385 * qJD(1);
t854 = t1074 * qJD(3);
t851 = t1074 * qJD(4);
t850 = t419 * qJD(2);
t434 = t547 * t959 + t617 * t961;
t848 = t434 * qJD(1);
t435 = -t548 * t959 + t620 * t961;
t847 = t435 * qJD(1);
t463 = pkin(1) * t960 + t551 * t615;
t846 = t463 * qJD(1);
t464 = t608 * t1023 - t549 * t615;
t845 = t464 * qJD(1);
t557 = (-t618 ^ 2 + t613) * t608;
t842 = t557 * qJD(1);
t841 = t614 * qJD(3);
t836 = t1021 / 0.2e1;
t835 = pkin(4) * t1052;
t834 = pkin(4) * t1051;
t833 = t400 * t1057;
t832 = t401 * t1057;
t815 = t614 * t879;
t813 = t621 * t841;
t812 = qJD(5) * t563 * t565;
t810 = t608 * t886;
t809 = qJD(2) * t959;
t808 = t128 * t1030;
t807 = t128 * t1026;
t806 = t987 / 0.2e1;
t805 = t162 * t1030;
t804 = t162 * t1027;
t798 = -t963 / 0.2e1;
t797 = t963 / 0.2e1;
t796 = -t962 / 0.2e1;
t795 = t306 * t1033;
t794 = t308 * t1032;
t792 = t959 / 0.2e1;
t789 = -t955 / 0.2e1;
t788 = -t1102 / 0.2e1;
t783 = t419 / 0.2e1;
t782 = -t937 / 0.2e1;
t775 = t422 / 0.2e1;
t774 = t602 * t1027;
t773 = t1054 - t135 / 0.2e1;
t772 = t1054 + t148 / 0.2e1;
t771 = t136 / 0.2e1 - t147 / 0.2e1;
t768 = t1041 - t726 / 0.2e1;
t767 = t664 / 0.2e1 + t1080;
t766 = t520 / 0.2e1 - t521 / 0.2e1;
t764 = t1025 * qJD(3);
t763 = t1025 * qJD(4);
t762 = t1024 * qJD(3);
t761 = t1024 * qJD(4);
t757 = qJD(1) * t181 + t811;
t755 = -t850 - t869;
t753 = t840 * t565;
t752 = qJD(2) + t887;
t751 = -qJD(5) - t891;
t750 = pkin(3) * t761;
t749 = pkin(3) * t762;
t747 = t837 / 0.2e1;
t746 = t857 + (-t873 - t878) * t565;
t745 = -t858 + (-t872 - t876) * t565;
t743 = -t616 * t1105 + t405 + t449;
t741 = t879 * t960;
t740 = t618 * t810;
t739 = t620 * t816;
t735 = t1019 / 0.2e1 + t212 / 0.2e1;
t729 = t229 / 0.2e1 + t128 * t1035;
t727 = t392 * t1034 + t187 / 0.2e1;
t724 = t563 * t753;
t722 = -qJD(3) + t816;
t721 = -qJD(4) + t816;
t720 = t306 * t747;
t719 = t308 * t747;
t623 = t711 * t1038 + (t930 + t1099) * t1111 + t726 * t1117 + t682;
t638 = t400 * t1032 + t602 * t784 + t804;
t1 = t128 * t783 + (-t53 / 0.2e1 + t806) * t565 + t623 + t638;
t67 = t930 * t563 + t1087;
t718 = -t1 * qJD(1) + t67 * qJD(2);
t622 = t712 * t1037 + (-t1098 + t947) * t1110 + t726 * t1118 + t681;
t639 = t401 * t1032 - t473 * t774 + t805;
t2 = t128 * t775 + (-t54 / 0.2e1 + t986 / 0.2e1) * t565 + t622 + t639;
t68 = -t947 * t563 + t1086;
t717 = -t2 * qJD(1) + t68 * qJD(2);
t634 = t136 * t1035 - t473 * t1056 + t773 * t563;
t657 = t162 / 0.2e1 + t392 * t1043 + t212 * t1037;
t5 = t833 - t1016 / 0.2e1 - t657 * t619 + t634 * t616 + t682;
t73 = t452 * t422 + t1087;
t716 = -t5 * qJD(1) + t73 * qJD(2);
t6 = t832 - t1015 / 0.2e1 + t657 * t616 + t634 * t619 + t681;
t74 = -t452 * t419 + t1086;
t715 = -t6 * qJD(1) + t74 * qJD(2);
t626 = t1020 / 0.2e1 + pkin(4) * t1111 + t636;
t19 = t616 * t626 - t619 * t771 + t720;
t624 = (t1034 - t837 / 0.2e1 + t1056) * t565 + (t1057 + t688) * t563;
t87 = t616 * t624 - t619 * t767;
t713 = -t19 * qJD(1) - t87 * qJD(2);
t709 = -t1074 * t602 - t603 * t392;
t708 = t964 - t966;
t705 = t618 * t737;
t704 = t1024 * t793;
t703 = qJD(2) * t78 + t1123;
t643 = t54 * t1037 + t1051 * t726 + t1110 * t251;
t15 = t619 * t729 + t643 + t789;
t155 = -t251 * t563 - t726 * t962;
t701 = qJD(1) * t15 - qJD(2) * t155;
t154 = t250 * t563 + t726 * t963;
t644 = t53 * t1038 + t306 * t1041 + t1111 * t250;
t16 = -t616 * t729 + t644 + t782;
t700 = qJD(1) * t16 - qJD(2) * t154;
t35 = (t704 + t1074 * t1029 + t967 / 0.2e1) * pkin(3) - t69;
t403 = -t565 * t1021 - t563 * t604;
t699 = qJD(1) * t35 - qJD(2) * t403;
t669 = t1031 * t1074 + t664 * t791;
t36 = t977 / 0.2e1 + (t705 + t392 * t1029 - t968 / 0.2e1) * pkin(3) + t669 + t916;
t402 = t563 * t1021 - t565 * t604;
t698 = qJD(1) * t36 - qJD(2) * t402;
t433 = t591 * t558;
t697 = -qJD(1) * t82 - qJD(2) * t433;
t696 = t565 * (qJD(5) + t885);
t695 = qJD(2) * t117 + t1123;
t315 = t547 ^ 2 - t548 ^ 2;
t693 = qJD(1) * t315 + qJD(2) * t265;
t692 = qJD(1) * t265 + qJD(2) * t592;
t691 = t882 + t888;
t690 = t851 + t854;
t689 = -t852 - t853;
t687 = t1018 / 0.2e1 - t1017 / 0.2e1;
t685 = t614 * t734;
t635 = t547 * t1058 + t969 / 0.2e1 + t617 * pkin(8) * t791;
t192 = t635 + t766;
t684 = pkin(2) * t880 - qJD(1) * t192;
t659 = t620 * pkin(8) * t790 + t548 * t1058;
t194 = -t522 / 0.2e1 + (t511 / 0.2e1 - t549 / 0.2e1) * t617 + t659;
t683 = pkin(2) * t882 - qJD(1) * t194;
t680 = t565 * t1032 + t563 * t1034;
t678 = -qJD(1) * t69 + t563 * t883;
t312 = -t977 / 0.2e1;
t652 = t1109 * t604 + t664 * t790 + t312;
t71 = t652 - t916;
t677 = -qJD(1) * t71 + t565 * t883;
t674 = qJD(2) * t181 - t817;
t383 = t547 * t1028 + t548 * t620 / 0.2e1;
t673 = qJD(2) * t383 + t547 * t888;
t672 = qJD(1) * t383 + t617 * t880;
t671 = pkin(4) / 0.2e1 + t688;
t667 = t1043 + t687;
t665 = -0.2e1 * t565 * t1075;
t656 = t425 / 0.2e1 + t680;
t649 = (-t762 - t761) * pkin(3);
t137 = t616 * t656 + t619 * t768;
t25 = t616 * t727 + t619 * t772 + t795;
t648 = -qJD(1) * t25 - qJD(2) * t137 - t603 * t876;
t139 = t616 * t768 - t619 * t656;
t27 = t616 * t772 - t619 * t727 + t794;
t647 = -qJD(1) * t27 - qJD(2) * t139 - t603 * t878;
t646 = qJD(2) * t179 + t1074 * t891 + t1091;
t645 = t675 + t1091;
t22 = t616 * t771 + t619 * t626 + t719;
t90 = t616 * t767 + t619 * t624;
t637 = -t22 * qJD(1) - t90 * qJD(2) - t616 * t749;
t150 = t667 * t616;
t29 = t616 * t735 + t619 * t773 + t835;
t484 = t671 * t619;
t633 = pkin(4) * t872 - qJD(1) * t29 - qJD(2) * t150 + qJD(3) * t484;
t152 = t667 * t619;
t31 = t616 * t773 - t619 * t735 + t834;
t483 = t671 * t616;
t632 = pkin(4) * t873 - qJD(1) * t31 + qJD(2) * t152 + qJD(3) * t483;
t625 = t964 / 0.2e1 - t966 / 0.2e1 + (t1024 * t1036 + t1025 * t1038) * pkin(3);
t590 = t616 * t750;
t585 = qJD(2) * t792;
t584 = qJD(1) * t793;
t583 = qJD(1) * t792;
t579 = t591 * qJD(5);
t514 = (t810 - t841 / 0.2e1) * t618;
t486 = pkin(4) * t1027 + t603 * t1026 + t619 * t748;
t485 = t603 * t1030 + (t1057 + t748) * t616;
t458 = (t810 + (-qJD(3) / 0.2e1 - qJD(4) / 0.2e1) * t614) * t618;
t455 = -t926 / 0.2e1;
t453 = -t943 / 0.2e1;
t379 = t976 / 0.2e1;
t375 = t383 * qJD(3);
t350 = -t552 * t958 + t565 * t791;
t349 = t563 * t790 + t651 * t958;
t338 = t350 * qJD(2);
t337 = t349 * qJD(2);
t264 = 0.2e1 * t499 - t820;
t259 = t265 * qJD(3);
t222 = t753 - t334;
t221 = -t754 - t336;
t209 = t931 / 0.2e1 + t1074 * t1026;
t207 = t1118 + t1119;
t203 = t1030 * t1074 + t785;
t202 = t788 + t1117;
t195 = t511 * t1028 + t940 / 0.2e1 + t522 / 0.2e1 + t659;
t193 = t635 - t766;
t188 = 0.2e1 * t1119 * t616;
t165 = qJD(2) * t469 + t840 * t1066;
t153 = t1099 + t929 / 0.2e1 - t687 * t619;
t151 = t1098 - t946 / 0.2e1 + t687 * t616;
t141 = t146 * qJD(5);
t140 = t1099 + t930 / 0.2e1 - t680 * t619;
t138 = t1098 - t947 / 0.2e1 + t680 * t616;
t114 = t670 + t728;
t111 = t565 * t1117 + t803 - t925 / 0.2e1 + t616 * t792;
t108 = t379 + t654;
t106 = t379 + t655;
t97 = t1110 * t609 + t1111 * t611 + t765 * t392;
t89 = t1077 + pkin(10) * t962 / 0.2e1 + pkin(4) * t775 + t625 * t619;
t88 = pkin(4) * t783 + pkin(10) * t797 + t625 * t616 - t1076;
t81 = t82 * qJD(5);
t72 = t652 + t916;
t61 = t453 + t641;
t59 = t453 + t630;
t57 = t455 + t642;
t55 = t455 + t629;
t42 = t822 - t827 / 0.2e1 + t661;
t40 = t628 + t686;
t38 = t1074 * t836 + (-t967 / 0.2e1 + t704) * pkin(3) + t70;
t37 = t392 * t836 + t312 - t669 + t916 + (t968 / 0.2e1 + t705) * pkin(3);
t32 = pkin(10) * t1119 + t834 + t808 + t957 / 0.2e1 + t935 / 0.2e1;
t30 = pkin(10) * t1117 + t835 + t807 + t939 / 0.2e1 - t953 / 0.2e1;
t28 = t392 * t774 + t794 + t808 - t956 / 0.2e1 + t936 / 0.2e1;
t26 = t602 * t1117 + t795 + t807 - t938 / 0.2e1 - t954 / 0.2e1;
t21 = t719 + t990 / 0.2e1 + pkin(4) * t1118 + t806 + t1073 * t619;
t20 = t720 - t989 / 0.2e1 + pkin(4) * t1117 - t986 / 0.2e1 + t1073 * t616;
t18 = t128 * t796 + t789 + t934 / 0.2e1 - t643;
t17 = t128 * t797 + t782 - t952 / 0.2e1 - t644;
t8 = (t946 - t1098) * t1111 + (-t939 + t953) * t1038 + t726 * t1119 + t136 * t796 + pkin(10) * t777 + t832 + t805 - t681 + t1078;
t7 = (t929 + t1099) * t1110 + (t935 + t957) * t1037 + t726 * t788 + t136 * t798 + pkin(10) * t784 + t833 + t804 - t682 + t1079;
t4 = t147 * t796 + t1078 - t622 + t639;
t3 = t147 * t798 + t1079 - t623 + t638;
t43 = [0, 0, 0, t741, t557 * qJD(2), t615 * t815, -t615 * t809, 0, -t463 * qJD(2), -t464 * qJD(2), (t547 * qJD(3) + t620 * t815) * t548, qJD(2) * t314 + qJD(3) * t315, -t435 * qJD(2) - t547 * t813, t434 * qJD(2) + t548 * t813, -t741, -qJD(2) * t120 - qJD(3) * t197, qJD(2) * t121 + qJD(3) * t196, (-qJD(2) * t474 + t689) * t1074, qJD(2) * t149 + t840 * t1113, -t226 * qJD(2) - t689 * t958, -t225 * qJD(2) + t690 * t958, -t741, -qJD(2) * t33 - qJD(3) * t51 - qJD(4) * t76, qJD(2) * t34 + qJD(3) * t52 + qJD(4) * t75, (qJD(2) * t401 - qJD(5) * t306 + t619 * t689) * t308, qJD(2) * t91 + qJD(5) * t119 + t1100 * t840, qJD(2) * t125 + qJD(3) * t95 + qJD(4) * t94 - t306 * t871, qJD(2) * t124 - qJD(3) * t93 - qJD(4) * t92 - t308 * t871, (-qJD(2) * t473 + t690) * t392, qJD(2) * t13 + qJD(3) * t9 + qJD(4) * t11 + qJD(5) * t24, qJD(2) * t14 + qJD(3) * t10 + qJD(4) * t12 + qJD(5) * t23; 0, 0, 0, t740, t842, t752 * t958, -t752 * t959, 0, -qJD(2) * t551 - t846, qJD(2) * t549 - t845, t614 * t691 * t924 + t375, t592 * t815 + t259 + t859, t617 * t809 - t847, t620 * t809 + t848, -t514, -t868 + (-t551 * t620 + t617 * t685) * qJD(2) + t195 * qJD(3), t867 + (t551 * t617 + t620 * t685) * qJD(2) + t193 * qJD(3), -(-t884 + t890) * t474 + t918, t864 + (-t473 * t565 + t474 * t563) * qJD(2) + t1013, t349 * t840 - t565 * t809 - t860, t350 * t840 - t563 * t809 - t861, -t458, -t983 + (t470 * t563 - t473 * t604 - t726 * t959) * qJD(2) + t37 * qJD(3) + t72 * qJD(4), t982 + (-t470 * t565 - t474 * t604 - t664 * t959) * qJD(2) + t38 * qJD(3) + t70 * qJD(4), qJD(3) * t108 + qJD(4) * t106 + t141 + (-t565 * t881 + t894) * t401, t921 - t81 + (t400 * t619 + t976) * t884 + t840 * t1115, t865 + (t401 * t563 + t565 * t926) * qJD(2) + t59 * qJD(3) + t61 * qJD(4) + t111 * qJD(5), t866 + (-t400 * t563 - t565 * t943) * qJD(2) + t55 * qJD(3) + t57 * qJD(4) + t114 * qJD(5), t870 - (t885 + t891) * t473 + t919, t991 + (-t162 * t963 + t250 * t473 + t400 * t726 + t563 * t83) * qJD(2) + t3 * qJD(3) + t7 * qJD(4) + t18 * qJD(5), t988 + (-t162 * t962 + t251 * t473 + t401 * t726 - t563 * t84) * qJD(2) + t4 * qJD(3) + t8 * qJD(4) + t17 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t673, t693, -t722 * t547, t722 * t548, t585, qJD(2) * t195 - qJD(3) * t340 - t899, qJD(2) * t193 + qJD(3) * t339 + t900, t674, t703, t392 * t722 + t337 - t853, t264 * qJD(4) + t1074 * t722 + t338, t585, qJD(2) * t37 - qJD(3) * t147 + qJD(4) * t40 - t1008, qJD(2) * t38 - qJD(3) * t148 + qJD(4) * t42 + t1007, qJD(2) * t108 + qJD(4) * t188 + t164 - (t878 + t894) * t1101, t97 * qJD(4) - t591 * t852 + t1121, qJD(2) * t59 + qJD(4) * t203 + qJD(5) * t207 + t616 * t854 + t996, qJD(2) * t55 + qJD(4) * t209 + qJD(5) * t202 + t619 * t854 - t998, t646, t1014 + t3 * qJD(2) + (t616 * t709 - t986) * qJD(3) + t20 * qJD(4) + t28 * qJD(5), t994 + t4 * qJD(2) + (t619 * t709 + t987) * qJD(3) + t21 * qJD(4) + t26 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t675, t695, t392 * t721 + t337 - t852, t264 * qJD(3) + t1074 * t721 + t338, t585, qJD(2) * t72 + qJD(3) * t40 - qJD(4) * t136 - t1001, qJD(2) * t70 + qJD(3) * t42 + qJD(4) * t135 + t1002, qJD(2) * t106 + qJD(3) * t188 + t164 + (-t873 - t894) * t1101, t97 * qJD(3) - t591 * t853 + t1121, qJD(2) * t61 + qJD(3) * t203 + t616 * t851 + t997, qJD(2) * t57 + qJD(3) * t209 + t619 * t851 - t999, t645, t993 + t7 * qJD(2) + t20 * qJD(3) + (t616 * t733 - t989) * qJD(4) + t32 * qJD(5), t992 + t8 * qJD(2) + t21 * qJD(3) + (t619 * t733 + t990) * qJD(4) + t30 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1062, -t1063, qJD(2) * t111 + qJD(3) * t207 + t306 * t751, qJD(2) * t114 + qJD(3) * t202 + t308 * t751, t165, qJD(2) * t18 + qJD(3) * t28 + qJD(4) * t32 - qJD(5) * t54 + t1011, qJD(2) * t17 + qJD(3) * t26 + qJD(4) * t30 + qJD(5) * t53 + t1012; 0, 0, 0, -t740, -t842, -t615 * t816, t887 * t959, 0, t846, t845, -t548 * t739 + t375, t259 - t859, -t620 * t813 + t847, t617 * t813 - t848, t514, qJD(3) * t194 + t868, qJD(3) * t192 - t867, t474 * t890 + t918, -t864 + t1013, -t348 * t840 + t860, -t347 * t840 + t861, t458, -qJD(3) * t36 + qJD(4) * t71 + t983, -qJD(3) * t35 + qJD(4) * t69 - t982, qJD(3) * t109 + qJD(4) * t107 - t401 * t894 + t141, t1116 * t840 - t81 - t921, qJD(3) * t60 + qJD(4) * t62 + qJD(5) * t112 - t865, qJD(3) * t56 + qJD(4) * t58 + qJD(5) * t113 - t866, t473 * t891 - t870 + t919, -qJD(3) * t1 - qJD(4) * t5 - qJD(5) * t15 - t991, -qJD(3) * t2 - qJD(4) * t6 - qJD(5) * t16 - t988; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t617 * t875, t592 * qJD(3), 0, 0, 0, -pkin(2) * t877, -pkin(2) * t875, t724, -t840 * t839, 0, 0, 0, qJD(3) * t402 - t565 * t874, qJD(3) * t403 - t563 * t874, -t558 * t595 + t611 * t724, -t433 * qJD(5) + t563 * t665, t346 * t840 + t616 * t812, -t345 * t840 + t619 * t812, -t565 * t754, qJD(3) * t67 + qJD(4) * t73 + qJD(5) * t155, qJD(3) * t68 + qJD(4) * t74 + qJD(5) * t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t672, t692, -t722 * t620, t722 * t617, t584, -pkin(8) * t875 - t683, pkin(8) * t877 - t684, t757, t1065, t221, t222, t584, -t1082 - t698, t1083 - t699, t743 + t905, t1126, t746 + t1004, t745 + t1006, t1071, (t616 * t708 - t1076) * qJD(3) + t88 * qJD(4) + t140 * qJD(5) + t718, (t619 * t708 + t1077) * qJD(3) + t89 * qJD(4) + t138 * qJD(5) + t717; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t758, t1068, t221, t222, t584, -t1082 - t677, t1083 - t678, t743 + t906, t1126, t746 + t1003, t745 + t1005, t1072, t88 * qJD(3) + (t616 * t732 - t1076) * qJD(4) + t153 * qJD(5) + t716, t89 * qJD(3) + (t619 * t732 + t1077) * qJD(4) + t151 * qJD(5) + t715; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1061, t1075 * t1081 + t697, t616 * t696 + t904, t619 * t696 + t903, -t889 + t907, qJD(3) * t140 + qJD(4) * t153 - qJD(5) * t251 - t701, qJD(3) * t138 + qJD(4) * t151 + qJD(5) * t250 - t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t673, -t693, (qJD(1) * t547 + t880) * t958, -t691 * t958, t585, -qJD(2) * t194 + t899, -qJD(2) * t192 - t900, -t674, -t703, t1088, t385 * qJD(4) + t1085, t585, qJD(2) * t36 + qJD(4) * t39 + t1008, qJD(2) * t35 + qJD(4) * t41 - t1007, -qJD(2) * t109 + qJD(4) * t189 + t1089, t1120, -qJD(2) * t60 - qJD(4) * t198 + qJD(5) * t208 - t996, -qJD(2) * t56 - qJD(4) * t204 - qJD(5) * t201 + t998, -t646, qJD(2) * t1 + qJD(4) * t19 + qJD(5) * t27 - t1014, qJD(2) * t2 + qJD(4) * t22 + qJD(5) * t25 - t994; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t672, -t692, t739, -t617 * t816, t583, t683, t684, -t757, -t1065, t336, t334, t583, t698, t699, -t905 + t913, t1125, t912 - t1004, t914 - t1006, -t1071, qJD(4) * t87 + qJD(5) * t139 - t718, qJD(4) * t90 + qJD(5) * t137 - t717; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t750, -pkin(3) * t763, t595, t579, 0, 0, 0, t603 * t869 - t619 * t750, t603 * t607 + t590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t856, 0, t649 + t981, t974 + (-t764 - t763) * pkin(3), t595 + t901, t579, -t863, -t862, 0, t485 * qJD(5) + t619 * t649 - t713, t486 * qJD(5) + t590 - t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, t79, t895 + t911, t755 - t897, -t1084, qJD(4) * t485 - t602 * t607 - t647, qJD(4) * t486 + t602 * t869 - t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t675, -t695, t1088, -t385 * qJD(3) + t1085, t585, -qJD(2) * t71 - qJD(3) * t39 + t1001, -qJD(2) * t69 - qJD(3) * t41 - t1002, -qJD(2) * t107 - qJD(3) * t189 + t1089, t1120, -qJD(2) * t62 + qJD(3) * t198 + qJD(5) * t1101 - t997, -qJD(2) * t58 + qJD(3) * t204 - qJD(5) * t1102 + t999, -t645, qJD(2) * t5 - qJD(3) * t19 + qJD(5) * t31 - t993, qJD(2) * t6 - qJD(3) * t22 + qJD(5) * t29 - t992; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t758, -t1068, t336, t334, t583, t677, t678, -t906 + t913, t1125, t912 - t1003, t914 - t1005, -t1072, -qJD(3) * t87 - qJD(5) * t152 - t716, -qJD(3) * t90 + qJD(5) * t150 - t715; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t856, 0, t749 - t981, pkin(3) * t764 - t974, t595 - t901, t579, t863, t862, 0, -t483 * qJD(5) + t619 * t749 + t713, -t484 * qJD(5) + t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t595, t579, 0, 0, 0, -pkin(4) * t869, -pkin(4) * t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, t79, t896 + t911, t755 - t898, -t1084, -pkin(10) * t607 - t632, pkin(10) * t869 - t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1062, t1063, -qJD(2) * t112 - qJD(3) * t208 - qJD(4) * t1101 + t306 * t891, -qJD(2) * t113 + qJD(3) * t201 + qJD(4) * t1102 + t308 * t891, t165, qJD(2) * t15 - qJD(3) * t27 - qJD(4) * t31 - t1011, qJD(2) * t16 - qJD(3) * t25 - qJD(4) * t29 - t1012; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1061, t665 - t697, -t616 * t811 - t1105 - t904, t419 * t840 - t619 * t811 - t903, t889 + t907, -qJD(3) * t139 + qJD(4) * t152 + t701, -qJD(3) * t137 - qJD(4) * t150 + t700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, -t79, -t849 - t895, t850 + t897, t1084, qJD(4) * t483 + t647, qJD(4) * t484 + t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, -t79, -t849 - t896, t850 + t898, t1084, t632, t633; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t43;
