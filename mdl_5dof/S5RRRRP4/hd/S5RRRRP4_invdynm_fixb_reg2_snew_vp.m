% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRP4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:51
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRP4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP4_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP4_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP4_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP4_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:51:37
% EndTime: 2019-12-31 21:51:54
% DurationCPUTime: 18.53s
% Computational Cost: add. (60583->577), mult. (78208->713), div. (0->0), fcn. (49936->8), ass. (0->394)
t1283 = sin(qJ(1));
t1287 = cos(qJ(1));
t1280 = sin(qJ(4));
t1284 = cos(qJ(4));
t1285 = cos(qJ(3));
t1349 = qJD(1) + qJD(2);
t1333 = t1285 * t1349;
t1281 = sin(qJ(3));
t1336 = t1281 * t1349;
t1224 = t1280 * t1333 + t1284 * t1336;
t1221 = t1224 ^ 2;
t1278 = qJD(3) + qJD(4);
t1384 = t1278 ^ 2;
t1152 = t1384 + t1221;
t1277 = qJDD(3) + qJDD(4);
t1222 = t1280 * t1336 - t1284 * t1333;
t1372 = t1224 * t1222;
t1395 = t1277 + t1372;
t1364 = t1280 * t1395;
t1063 = t1284 * t1152 + t1364;
t1353 = t1284 * t1395;
t1100 = t1280 * t1152 - t1353;
t1035 = t1281 * t1063 + t1285 * t1100;
t1282 = sin(qJ(2));
t1286 = cos(qJ(2));
t1262 = qJD(3) * t1333;
t1346 = qJDD(1) + qJDD(2);
t1324 = t1281 * t1346;
t1234 = t1324 + t1262;
t1311 = qJD(3) * t1336;
t1322 = t1285 * t1346;
t1294 = t1322 - t1311;
t1125 = -t1222 * qJD(4) + t1284 * t1234 + t1280 * t1294;
t1371 = t1278 * t1222;
t1397 = t1125 - t1371;
t976 = t1282 * t1035 - t1286 * t1397;
t978 = t1286 * t1035 + t1282 * t1397;
t1478 = pkin(5) * (t1283 * t976 - t1287 * t978);
t1477 = pkin(5) * (t1283 * t978 + t1287 * t976);
t1476 = pkin(1) * t976;
t1475 = pkin(6) * t976;
t1003 = t1285 * t1063 - t1281 * t1100;
t1474 = -pkin(1) * t1003 - pkin(6) * t978;
t1385 = t1222 ^ 2;
t1396 = t1221 - t1385;
t1328 = -t1280 * t1234 + t1284 * t1294;
t1124 = t1224 * qJD(4) - t1328;
t1213 = t1278 * t1224;
t1398 = t1124 + t1213;
t1023 = -t1280 * t1398 + t1284 * t1397;
t1366 = t1280 * t1397;
t1025 = t1284 * t1398 + t1366;
t956 = t1281 * t1023 + t1285 * t1025;
t941 = t1282 * t956 + t1286 * t1396;
t943 = -t1282 * t1396 + t1286 * t956;
t1473 = t1283 * t943 + t1287 * t941;
t1472 = t1283 * t941 - t1287 * t943;
t1205 = t1385 - t1384;
t1106 = t1280 * t1205 + t1353;
t1110 = t1284 * t1205 - t1364;
t1044 = t1281 * t1106 - t1285 * t1110;
t1089 = t1124 - t1213;
t984 = t1282 * t1044 - t1286 * t1089;
t988 = t1286 * t1044 + t1282 * t1089;
t1469 = t1283 * t988 + t1287 * t984;
t1468 = t1283 * t984 - t1287 * t988;
t1466 = pkin(2) * t1003;
t1465 = pkin(7) * t1003;
t1464 = -pkin(2) * t1397 + pkin(7) * t1035;
t1323 = t1282 * t1346;
t1345 = t1349 ^ 2;
t1240 = t1286 * t1345 + t1323;
t1218 = pkin(6) * t1240 - t1286 * g(3);
t1321 = t1286 * t1346;
t1243 = t1282 * t1345 - t1321;
t1305 = t1287 * t1240 - t1283 * t1243;
t1441 = pkin(6) * t1243 - t1282 * g(3);
t1463 = pkin(5) * t1305 + t1287 * t1218 - t1283 * t1441;
t1394 = t1371 + t1125;
t1206 = t1221 - t1384;
t1393 = -t1372 + t1277;
t1363 = t1280 * t1393;
t1426 = -t1284 * t1206 + t1363;
t1144 = t1284 * t1393;
t1427 = t1280 * t1206 + t1144;
t1435 = -t1281 * t1426 + t1285 * t1427;
t1450 = t1282 * t1394 + t1286 * t1435;
t1452 = t1282 * t1435 - t1286 * t1394;
t1462 = -t1283 * t1452 + t1287 * t1450;
t1461 = t1283 * t1450 + t1287 * t1452;
t1437 = t1283 * t1240 + t1287 * t1243;
t1460 = pkin(5) * t1437 + t1283 * t1218 + t1287 * t1441;
t1392 = -t1384 - t1385;
t1403 = t1284 * t1392 - t1363;
t1406 = t1280 * t1392 + t1144;
t1423 = -t1281 * t1406 + t1285 * t1403;
t1439 = t1282 * t1423 - t1286 * t1398;
t1459 = pkin(1) * t1439;
t1458 = pkin(3) * t1063;
t1457 = pkin(6) * t1439;
t1456 = pkin(8) * t1063;
t1455 = pkin(8) * t1100;
t1422 = t1281 * t1403 + t1285 * t1406;
t1438 = t1282 * t1398 + t1286 * t1423;
t1453 = -pkin(1) * t1422 + pkin(6) * t1438;
t952 = -t1285 * t1023 + t1281 * t1025;
t1039 = t1285 * t1106 + t1281 * t1110;
t1449 = pkin(5) * (-t1283 * t1439 + t1287 * t1438);
t1448 = pkin(5) * (t1283 * t1438 + t1287 * t1439);
t1446 = pkin(2) * t1422;
t1444 = pkin(7) * t1422;
t1440 = -pkin(2) * t1398 + pkin(7) * t1423;
t1436 = t1281 * t1427 + t1285 * t1426;
t1128 = -t1385 - t1221;
t1434 = pkin(2) * t1128;
t1433 = pkin(3) * t1128;
t1432 = pkin(3) * t1406;
t1431 = pkin(8) * t1403;
t1430 = pkin(8) * t1406;
t1429 = t1282 * t1128;
t1428 = t1286 * t1128;
t1260 = t1287 * g(1) + t1283 * g(2);
t1289 = qJD(1) ^ 2;
t1247 = -t1289 * pkin(1) - t1260;
t1259 = t1283 * g(1) - t1287 * g(2);
t1303 = qJDD(1) * pkin(1) + t1259;
t1182 = t1282 * t1247 - t1286 * t1303;
t1183 = t1286 * t1247 + t1282 * t1303;
t1329 = t1282 * t1182 + t1286 * t1183;
t1116 = t1286 * t1182 - t1282 * t1183;
t1356 = t1283 * t1116;
t1425 = t1287 * t1329 + t1356;
t1350 = t1287 * t1116;
t1424 = -t1283 * t1329 + t1350;
t1297 = (-t1222 * t1280 - t1224 * t1284) * t1278;
t1370 = t1278 * t1280;
t1202 = t1224 * t1370;
t1369 = t1278 * t1284;
t1343 = t1222 * t1369;
t1307 = t1202 - t1343;
t1390 = -t1281 * t1297 + t1285 * t1307;
t1401 = t1282 * t1277 + t1286 * t1390;
t1405 = -t1286 * t1277 + t1282 * t1390;
t1421 = -t1283 * t1405 + t1287 * t1401;
t1420 = t1283 * t1401 + t1287 * t1405;
t1344 = t1282 * t1372;
t1298 = t1280 * t1124 + t1343;
t1308 = -t1284 * t1124 + t1222 * t1370;
t1389 = -t1281 * t1308 + t1285 * t1298;
t1402 = t1286 * t1389 - t1344;
t1342 = t1286 * t1372;
t1404 = t1282 * t1389 + t1342;
t1419 = -t1283 * t1404 + t1287 * t1402;
t1418 = t1283 * t1402 + t1287 * t1404;
t1415 = qJ(5) * t1397;
t1169 = -t1345 * pkin(2) + t1346 * pkin(7) + t1183;
t1361 = t1281 * t1169;
t1140 = t1285 * g(3) + t1361;
t1141 = -t1281 * g(3) + t1285 * t1169;
t1062 = t1281 * t1140 + t1285 * t1141;
t1391 = t1281 * t1307 + t1285 * t1297;
t1388 = t1281 * t1298 + t1285 * t1308;
t1074 = t1280 * t1125 + t1224 * t1369;
t1075 = t1284 * t1125 - t1202;
t1014 = -t1281 * t1074 + t1285 * t1075;
t1309 = t1286 * t1014 + t1344;
t1310 = t1282 * t1014 - t1342;
t1387 = -t1283 * t1310 + t1287 * t1309;
t1386 = t1283 * t1309 + t1287 * t1310;
t1383 = t1285 ^ 2;
t1335 = t1281 * t1345;
t1076 = qJDD(3) * pkin(3) - t1234 * pkin(8) - t1361 + (t1349 * qJD(3) * pkin(8) + pkin(3) * t1335 - g(3)) * t1285;
t1250 = qJD(3) * pkin(3) - pkin(8) * t1336;
t1266 = t1383 * t1345;
t1077 = -pkin(3) * t1266 + t1294 * pkin(8) - qJD(3) * t1250 + t1141;
t1018 = -t1284 * t1076 + t1280 * t1077;
t1019 = t1280 * t1076 + t1284 * t1077;
t946 = -t1284 * t1018 + t1280 * t1019;
t1382 = pkin(3) * t946;
t1078 = t1284 * t1394;
t1090 = (-qJD(4) + t1278) * t1224 + t1328;
t1024 = t1280 * t1090 - t1078;
t1381 = pkin(3) * t1024;
t1380 = pkin(4) * t1284;
t1373 = qJD(5) * t1278;
t1267 = 0.2e1 * t1373;
t1163 = t1222 * pkin(4) - t1224 * qJ(5);
t1306 = -pkin(4) * t1384 + t1277 * qJ(5) - t1222 * t1163 + t1019;
t972 = t1267 + t1306;
t974 = -t1277 * pkin(4) - qJ(5) * t1384 + t1224 * t1163 + qJDD(5) + t1018;
t1377 = -pkin(4) * t974 + qJ(5) * t972;
t1376 = qJ(5) * t1284;
t1375 = t1281 * t946;
t1374 = t1285 * t946;
t1168 = -t1346 * pkin(2) - t1345 * pkin(7) + t1182;
t1086 = -t1294 * pkin(3) - pkin(8) * t1266 + t1250 * t1336 + t1168;
t1368 = t1280 * t1086;
t1365 = t1280 * t1394;
t1147 = t1281 * t1168;
t1258 = t1285 * t1335;
t1248 = qJDD(3) + t1258;
t1360 = t1281 * t1248;
t1249 = qJDD(3) - t1258;
t1359 = t1281 * t1249;
t1355 = t1284 * t1086;
t1148 = t1285 * t1168;
t1235 = t1322 - 0.2e1 * t1311;
t1184 = t1285 * t1235;
t1352 = t1285 * t1249;
t1348 = -pkin(4) * t1394 - qJ(5) * t1089;
t1347 = -pkin(2) * t1168 + pkin(7) * t1062;
t1288 = qJD(3) ^ 2;
t1279 = t1281 ^ 2;
t1337 = t1279 * t1345;
t1254 = -t1337 - t1288;
t1196 = -t1281 * t1254 - t1352;
t1233 = t1324 + 0.2e1 * t1262;
t1341 = -pkin(2) * t1233 + pkin(7) * t1196 + t1147;
t1256 = -t1266 - t1288;
t1194 = t1285 * t1256 - t1360;
t1340 = pkin(2) * t1235 + pkin(7) * t1194 - t1148;
t1339 = -qJ(5) * t1280 - pkin(3);
t1338 = t1279 * t1349;
t1332 = t1383 * t1349;
t931 = t1280 * t974 + t1284 * t972;
t1291 = t1124 * pkin(4) + t1086 - t1415;
t968 = (t1278 * pkin(4) - 0.2e1 * qJD(5)) * t1224 + t1291;
t890 = pkin(8) * t931 + (t1339 - t1380) * t968;
t930 = t1280 * t972 - t1284 * t974;
t897 = -pkin(8) * t930 + (pkin(4) * t1280 - t1376) * t968;
t900 = -t1281 * t930 + t1285 * t931;
t1330 = -pkin(2) * t968 + pkin(7) * t900 + t1281 * t897 + t1285 * t890;
t947 = t1280 * t1018 + t1284 * t1019;
t1327 = -t1283 * t1259 - t1287 * t1260;
t1026 = -t1284 * t1089 + t1365;
t960 = -pkin(4) * t1128 + t972;
t961 = -qJ(5) * t1128 + t974;
t904 = pkin(8) * t1026 + t1280 * t961 + t1284 * t960 - t1433;
t1022 = -t1280 * t1089 - t1078;
t908 = -pkin(8) * t1022 - t1280 * t960 + t1284 * t961;
t957 = -t1281 * t1022 + t1285 * t1026;
t1326 = pkin(7) * t957 + t1281 * t908 + t1285 * t904 - t1434;
t1028 = t1284 * t1090 + t1365;
t920 = pkin(8) * t1028 - t1433 + t947;
t926 = -pkin(8) * t1024 - t946;
t959 = -t1281 * t1024 + t1285 * t1028;
t1325 = pkin(7) * t959 + t1281 * t926 + t1285 * t920 - t1434;
t1290 = 0.2e1 * qJD(5) * t1224 - t1291;
t948 = -pkin(4) * t1213 + t1290 + t1415;
t916 = -t1455 + t1280 * t948 + (pkin(3) + t1380) * t1397;
t925 = -pkin(4) * t1366 + t1284 * t948 - t1456;
t1320 = t1281 * t925 + t1285 * t916 - t1464;
t949 = (-t1398 - t1213) * pkin(4) + t1290;
t918 = t1284 * t949 + t1339 * t1398 + t1431;
t928 = -t1280 * t949 - t1376 * t1398 - t1430;
t1319 = t1281 * t928 + t1285 * t918 + t1440;
t1318 = pkin(3) * t930 + t1377;
t1017 = t1368 - t1430;
t970 = -pkin(3) * t1398 - t1355 + t1431;
t1317 = t1281 * t1017 + t1285 * t970 + t1440;
t1030 = t1355 + t1456;
t980 = -pkin(3) * t1397 + t1368 + t1455;
t1316 = t1281 * t1030 + t1285 * t980 + t1464;
t1238 = (t1279 + t1383) * t1346;
t1244 = t1337 + t1266;
t1315 = pkin(2) * t1244 + pkin(7) * t1238 + t1062;
t1314 = pkin(3) * t1022 + t1348;
t1313 = -t1019 - t1458;
t1252 = t1287 * qJDD(1) - t1283 * t1289;
t1312 = -pkin(5) * t1252 - t1283 * g(3);
t1061 = t1285 * t1140 - t1281 * t1141;
t1304 = t1287 * t1259 - t1283 * t1260;
t1302 = t1282 * t1258;
t1301 = t1286 * t1258;
t1300 = -t1018 + t1432;
t911 = t1285 * t947 - t1375;
t935 = -pkin(3) * t1086 + pkin(8) * t947;
t1299 = -pkin(2) * t1086 + pkin(7) * t911 - pkin(8) * t1375 + t1285 * t935;
t1296 = pkin(4) * t1152 + qJ(5) * t1395 + t1306;
t1295 = t1296 + t1458;
t1293 = pkin(4) * t1393 + qJ(5) * t1392 - t974;
t1292 = t1293 + t1432;
t1255 = t1266 - t1288;
t1253 = -t1337 + t1288;
t1251 = t1283 * qJDD(1) + t1287 * t1289;
t1245 = t1337 - t1266;
t1239 = t1285 * t1248;
t1231 = -pkin(5) * t1251 + t1287 * g(3);
t1230 = (t1332 + t1338) * qJD(3);
t1204 = t1282 * qJDD(3) + t1286 * t1230;
t1203 = -t1286 * qJDD(3) + t1282 * t1230;
t1201 = -qJD(3) * t1338 + t1285 * t1234;
t1200 = -qJD(3) * t1332 - t1281 * t1294;
t1195 = -t1281 * t1253 + t1239;
t1193 = t1285 * t1255 - t1359;
t1192 = t1285 * t1254 - t1359;
t1191 = t1285 * t1253 + t1360;
t1190 = t1281 * t1256 + t1239;
t1189 = t1281 * t1255 + t1352;
t1185 = (t1234 + t1262) * t1281;
t1179 = t1286 * t1238 - t1282 * t1244;
t1177 = t1282 * t1238 + t1286 * t1244;
t1176 = -t1281 * t1233 + t1184;
t1175 = t1285 * t1233 + t1281 * t1235;
t1167 = t1286 * t1195 + t1281 * t1323;
t1166 = t1286 * t1193 + t1282 * t1322;
t1165 = t1282 * t1195 - t1281 * t1321;
t1164 = t1282 * t1193 - t1285 * t1321;
t1156 = t1286 * t1201 - t1302;
t1155 = t1286 * t1200 + t1302;
t1154 = t1282 * t1201 + t1301;
t1153 = t1282 * t1200 - t1301;
t1143 = -pkin(1) * t1240 - t1183;
t1142 = -pkin(1) * t1243 - t1182;
t1139 = t1286 * t1196 + t1282 * t1233;
t1138 = t1286 * t1194 - t1282 * t1235;
t1137 = t1282 * t1196 - t1286 * t1233;
t1136 = t1282 * t1194 + t1286 * t1235;
t1127 = t1286 * t1176 + t1282 * t1245;
t1126 = t1282 * t1176 - t1286 * t1245;
t1113 = pkin(1) * t1116;
t1112 = pkin(1) * g(3) + pkin(6) * t1329;
t1103 = -pkin(7) * t1192 + t1148;
t1102 = -pkin(7) * t1190 + t1147;
t1097 = -pkin(2) * t1192 + t1141;
t1096 = -pkin(2) * t1190 + t1140;
t1050 = pkin(1) * t1136 + t1340;
t1049 = pkin(1) * t1137 + t1341;
t1048 = -pkin(6) * t1177 + t1286 * t1061;
t1047 = pkin(6) * t1179 + t1282 * t1061;
t1046 = t1286 * t1062 + t1282 * t1168;
t1045 = t1282 * t1062 - t1286 * t1168;
t1020 = pkin(1) * t1177 + t1315;
t1011 = t1285 * t1074 + t1281 * t1075;
t1000 = -pkin(6) * t1137 - t1282 * t1097 + t1286 * t1103;
t999 = -pkin(6) * t1136 - t1282 * t1096 + t1286 * t1102;
t990 = -pkin(1) * t1192 + pkin(6) * t1139 + t1286 * t1097 + t1282 * t1103;
t989 = -pkin(1) * t1190 + pkin(6) * t1138 + t1286 * t1096 + t1282 * t1102;
t962 = pkin(1) * t1045 + t1347;
t955 = t1285 * t1024 + t1281 * t1028;
t953 = t1285 * t1022 + t1281 * t1026;
t945 = -pkin(6) * t1045 - (pkin(2) * t1282 - pkin(7) * t1286) * t1061;
t940 = t1286 * t959 + t1429;
t939 = t1286 * t957 + t1429;
t938 = t1282 * t959 - t1428;
t937 = t1282 * t957 - t1428;
t936 = -t1313 + t1466;
t933 = -t1300 - t1446;
t932 = pkin(6) * t1046 - (-pkin(2) * t1286 - pkin(7) * t1282 - pkin(1)) * t1061;
t929 = -pkin(2) * t955 - t1381;
t922 = -t1292 - t1446;
t921 = t1285 * t1030 - t1281 * t980 + t1465;
t914 = -t1295 - 0.2e1 * t1373 - t1466;
t913 = t1285 * t1017 - t1281 * t970 - t1444;
t912 = -pkin(2) * t953 - t1314;
t910 = t1281 * t947 + t1374;
t906 = t1282 * t1086 + t1286 * t911;
t905 = -t1286 * t1086 + t1282 * t911;
t902 = t1316 + t1476;
t901 = t1317 + t1459;
t899 = t1281 * t931 + t1285 * t930;
t895 = -pkin(2) * t910 - t1382;
t894 = -t1282 * t936 + t1286 * t921 - t1475;
t893 = -t1281 * t918 + t1285 * t928 - t1444;
t892 = t1282 * t968 + t1286 * t900;
t891 = t1282 * t900 - t1286 * t968;
t888 = -t1281 * t916 + t1285 * t925 - t1465;
t887 = -t1282 * t933 + t1286 * t913 - t1457;
t886 = t1282 * t921 + t1286 * t936 - t1474;
t885 = -pkin(7) * t955 - t1281 * t920 + t1285 * t926;
t884 = -pkin(7) * t910 - pkin(8) * t1374 - t1281 * t935;
t883 = t1282 * t913 + t1286 * t933 + t1453;
t882 = t1319 + t1459;
t881 = t1320 - t1476;
t880 = pkin(1) * t938 + t1325;
t879 = -pkin(7) * t953 - t1281 * t904 + t1285 * t908;
t878 = -pkin(2) * t899 - t1318;
t877 = -t1282 * t922 + t1286 * t893 - t1457;
t876 = -t1282 * t914 + t1286 * t888 + t1475;
t875 = t1282 * t893 + t1286 * t922 + t1453;
t874 = -pkin(6) * t938 - t1282 * t929 + t1286 * t885;
t873 = t1282 * t888 + t1286 * t914 + t1474;
t872 = pkin(1) * t905 + t1299;
t871 = pkin(1) * t937 + t1326;
t870 = -pkin(1) * t955 + pkin(6) * t940 + t1282 * t885 + t1286 * t929;
t869 = -pkin(6) * t937 - t1282 * t912 + t1286 * t879;
t868 = -pkin(7) * t899 - t1281 * t890 + t1285 * t897;
t867 = -pkin(1) * t953 + pkin(6) * t939 + t1282 * t879 + t1286 * t912;
t866 = -pkin(6) * t905 - t1282 * t895 + t1286 * t884;
t865 = -pkin(1) * t910 + pkin(6) * t906 + t1282 * t884 + t1286 * t895;
t864 = pkin(1) * t891 + t1330;
t863 = -pkin(6) * t891 - t1282 * t878 + t1286 * t868;
t862 = -pkin(1) * t899 + pkin(6) * t892 + t1282 * t868 + t1286 * t878;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1252, 0, -t1251, 0, t1312, -t1231, -t1304, -pkin(5) * t1304, 0, 0, -t1437, 0, -t1305, 0, t1460, t1463, t1424, pkin(5) * t1424 + pkin(6) * t1350 - t1283 * t1112, -t1283 * t1154 + t1287 * t1156, -t1283 * t1126 + t1287 * t1127, -t1283 * t1165 + t1287 * t1167, -t1283 * t1153 + t1287 * t1155, -t1283 * t1164 + t1287 * t1166, -t1283 * t1203 + t1287 * t1204, t1287 * t999 - t1283 * t989 - pkin(5) * (t1287 * t1136 + t1283 * t1138), t1287 * t1000 - t1283 * t990 - pkin(5) * (t1287 * t1137 + t1283 * t1139), t1287 * t1048 - t1283 * t1047 - pkin(5) * (t1287 * t1177 + t1283 * t1179), t1287 * t945 - t1283 * t932 - pkin(5) * (t1287 * t1045 + t1283 * t1046), t1387, t1472, t1462, t1419, t1468, t1421, -t1283 * t883 + t1287 * t887 - t1448, -t1283 * t886 + t1287 * t894 - t1477, t1287 * t874 - t1283 * t870 - pkin(5) * (t1283 * t940 + t1287 * t938), t1287 * t866 - t1283 * t865 - pkin(5) * (t1283 * t906 + t1287 * t905), t1387, t1462, -t1472, t1421, -t1468, t1419, -t1283 * t875 + t1287 * t877 - t1448, t1287 * t869 - t1283 * t867 - pkin(5) * (t1283 * t939 + t1287 * t937), -t1283 * t873 + t1287 * t876 + t1477, t1287 * t863 - t1283 * t862 - pkin(5) * (t1283 * t892 + t1287 * t891); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1251, 0, t1252, 0, t1231, t1312, t1327, pkin(5) * t1327, 0, 0, t1305, 0, -t1437, 0, -t1463, t1460, t1425, pkin(5) * t1425 + pkin(6) * t1356 + t1287 * t1112, t1287 * t1154 + t1283 * t1156, t1287 * t1126 + t1283 * t1127, t1287 * t1165 + t1283 * t1167, t1287 * t1153 + t1283 * t1155, t1287 * t1164 + t1283 * t1166, t1287 * t1203 + t1283 * t1204, t1283 * t999 + t1287 * t989 + pkin(5) * (-t1283 * t1136 + t1287 * t1138), t1283 * t1000 + t1287 * t990 + pkin(5) * (-t1283 * t1137 + t1287 * t1139), t1283 * t1048 + t1287 * t1047 + pkin(5) * (-t1283 * t1177 + t1287 * t1179), t1283 * t945 + t1287 * t932 + pkin(5) * (-t1283 * t1045 + t1287 * t1046), t1386, -t1473, t1461, t1418, -t1469, t1420, t1283 * t887 + t1287 * t883 + t1449, t1283 * t894 + t1287 * t886 - t1478, t1283 * t874 + t1287 * t870 + pkin(5) * (-t1283 * t938 + t1287 * t940), t1283 * t866 + t1287 * t865 + pkin(5) * (-t1283 * t905 + t1287 * t906), t1386, t1461, t1473, t1420, t1469, t1418, t1283 * t877 + t1287 * t875 + t1449, t1283 * t869 + t1287 * t867 + pkin(5) * (-t1283 * t937 + t1287 * t939), t1283 * t876 + t1287 * t873 + t1478, t1283 * t863 + t1287 * t862 + pkin(5) * (-t1283 * t891 + t1287 * t892); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1259, t1260, 0, 0, 0, 0, 0, 0, 0, t1346, t1142, t1143, 0, -t1113, t1185, t1175, t1191, t1184, t1189, 0, t1050, t1049, t1020, t962, t1011, -t952, t1436, t1388, t1039, t1391, t901, t902, t880, t872, t1011, t1436, t952, t1391, -t1039, t1388, t882, t871, t881, t864; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1289, 0, 0, -g(3), -t1259, 0, 0, 0, -t1243, 0, -t1240, 0, t1441, t1218, t1116, pkin(6) * t1116, t1156, t1127, t1167, t1155, t1166, t1204, t999, t1000, t1048, t945, t1309, -t943, t1450, t1402, -t988, t1401, t887, t894, t874, t866, t1309, t1450, t943, t1401, t988, t1402, t877, t869, t876, t863; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1289, 0, qJDD(1), 0, g(3), 0, -t1260, 0, 0, 0, t1240, 0, -t1243, 0, -t1218, t1441, t1329, t1112, t1154, t1126, t1165, t1153, t1164, t1203, t989, t990, t1047, t932, t1310, -t941, t1452, t1404, -t984, t1405, t883, t886, t870, t865, t1310, t1452, t941, t1405, t984, t1404, t875, t867, t873, t862; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1259, t1260, 0, 0, 0, 0, 0, 0, 0, t1346, t1142, t1143, 0, -t1113, t1185, t1175, t1191, t1184, t1189, 0, t1050, t1049, t1020, t962, t1011, -t952, t1436, t1388, t1039, t1391, t901, t902, t880, t872, t1011, t1436, t952, t1391, -t1039, t1388, t882, t871, t881, t864; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1346, 0, -t1345, 0, 0, -g(3), t1182, 0, t1201, t1176, t1195, t1200, t1193, t1230, t1102, t1103, t1061, pkin(7) * t1061, t1014, -t956, t1435, t1389, -t1044, t1390, t913, t921, t885, t884, t1014, t1435, t956, t1390, t1044, t1389, t893, t879, t888, t868; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1345, 0, t1346, 0, g(3), 0, t1183, 0, t1258, -t1245, -t1324, -t1258, -t1322, -qJDD(3), t1096, t1097, 0, pkin(2) * t1061, -t1372, -t1396, -t1394, t1372, t1089, -t1277, t933, t936, t929, t895, -t1372, -t1394, t1396, -t1277, -t1089, t1372, t922, t912, t914, t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1346, -t1182, -t1183, 0, 0, t1185, t1175, t1191, t1184, t1189, 0, t1340, t1341, t1315, t1347, t1011, -t952, t1436, t1388, t1039, t1391, t1317, t1316, t1325, t1299, t1011, t1436, t952, t1391, -t1039, t1388, t1319, t1326, t1320, t1330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1234, t1235, t1248, -t1262, t1255, t1262, 0, t1168, t1140, 0, t1075, -t1025, t1427, t1298, t1110, t1307, t1017, t1030, t926, -pkin(8) * t946, t1075, t1427, t1025, t1307, -t1110, t1298, t928, t908, t925, t897; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1311, t1233, t1253, t1294, t1249, -t1311, -t1168, 0, t1141, 0, t1074, t1023, t1426, t1308, t1106, t1297, t970, t980, t920, t935, t1074, t1426, -t1023, t1297, -t1106, t1308, t918, t904, t916, t890; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1258, t1245, t1324, t1258, t1322, qJDD(3), -t1140, -t1141, 0, 0, t1372, t1396, t1394, -t1372, -t1089, t1277, t1300, t1313, t1381, t1382, t1372, t1394, -t1396, t1277, t1089, -t1372, t1292, t1314, t1267 + t1295, t1318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1125, -t1398, t1393, t1371, t1205, -t1371, 0, t1086, t1018, 0, t1125, t1393, t1398, -t1371, -t1205, t1371, -qJ(5) * t1398, t961, t948, -qJ(5) * t968; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1213, t1397, -t1206, -t1124, t1395, -t1213, -t1086, 0, t1019, 0, t1213, -t1206, -t1397, -t1213, -t1395, -t1124, t949, t960, pkin(4) * t1397, -pkin(4) * t968; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1372, t1396, t1394, -t1372, -t1089, t1277, -t1018, -t1019, 0, 0, t1372, t1394, -t1396, t1277, t1089, -t1372, t1293, t1348, t1267 + t1296, t1377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1125, t1393, t1398, -t1371, -t1205, t1371, 0, t974, -t968, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1372, t1394, -t1396, t1277, t1089, -t1372, -t974, 0, t972, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1213, t1206, t1397, t1213, t1395, t1124, t968, -t972, 0, 0;];
m_new_reg = t1;
