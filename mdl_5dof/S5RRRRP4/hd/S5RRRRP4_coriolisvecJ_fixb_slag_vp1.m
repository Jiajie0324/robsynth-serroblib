% Calculate vector of centrifugal and Coriolis load on the joints for
% S5RRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:51
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5RRRRP4_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP4_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP4_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP4_coriolisvecJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP4_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP4_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP4_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:50:40
% EndTime: 2019-12-31 21:51:09
% DurationCPUTime: 21.29s
% Computational Cost: add. (23489->702), mult. (19001->869), div. (0->0), fcn. (14877->8), ass. (0->423)
t808 = Icges(6,4) + Icges(5,5);
t807 = Icges(5,6) - Icges(6,6);
t426 = qJ(3) + qJ(4);
t418 = sin(t426);
t420 = cos(t426);
t678 = Icges(6,5) * t420;
t323 = Icges(6,3) * t418 + t678;
t404 = Icges(5,4) * t420;
t516 = -Icges(5,2) * t418 + t404;
t806 = t323 - t516;
t679 = Icges(5,4) * t418;
t328 = Icges(5,2) * t420 + t679;
t400 = Icges(6,5) * t418;
t515 = Icges(6,3) * t420 - t400;
t805 = t328 + t515;
t330 = Icges(6,1) * t418 - t678;
t332 = Icges(5,1) * t418 + t404;
t804 = t330 + t332;
t333 = Icges(5,1) * t420 - t679;
t518 = Icges(6,1) * t420 + t400;
t803 = -t333 - t518;
t427 = qJ(1) + qJ(2);
t419 = sin(t427);
t421 = cos(t427);
t226 = -Icges(6,6) * t421 + t323 * t419;
t650 = t419 * t420;
t653 = t418 * t419;
t232 = Icges(5,4) * t650 - Icges(5,2) * t653 - Icges(5,6) * t421;
t795 = -t226 + t232;
t645 = t420 * t421;
t360 = Icges(6,5) * t645;
t652 = t418 * t421;
t227 = Icges(6,6) * t419 + Icges(6,3) * t652 + t360;
t493 = t516 * t421;
t233 = Icges(5,6) * t419 + t493;
t802 = t227 - t233;
t234 = -Icges(6,4) * t421 + t419 * t518;
t361 = Icges(5,4) * t653;
t236 = Icges(5,1) * t650 - Icges(5,5) * t421 - t361;
t792 = t234 + t236;
t495 = t518 * t421;
t235 = Icges(6,4) * t419 + t495;
t496 = t333 * t421;
t237 = Icges(5,5) * t419 + t496;
t791 = t235 + t237;
t801 = t332 - t806;
t800 = t808 * t418 + t807 * t420;
t799 = -t515 - t803;
t424 = qJD(3) + qJD(4);
t425 = qJD(1) + qJD(2);
t659 = t328 * t424;
t798 = -t424 * t515 + t807 * t425 - t659;
t658 = t330 * t424;
t797 = -t332 * t424 + t808 * t425 - t658;
t796 = t805 * t418 - t804 * t420;
t776 = rSges(6,1) + pkin(4);
t775 = rSges(6,3) + qJ(5);
t325 = Icges(5,5) * t420 - Icges(5,6) * t418;
t490 = t325 * t421;
t229 = Icges(5,3) * t419 + t490;
t327 = Icges(6,4) * t420 + Icges(6,6) * t418;
t492 = t327 * t421;
t231 = Icges(6,2) * t419 + t492;
t793 = t229 + t231;
t790 = t327 + t325;
t340 = rSges(6,1) * t420 + rSges(6,3) * t418;
t789 = pkin(4) * t420 + qJ(5) * t418 + t340;
t788 = (-Icges(6,2) - Icges(5,3)) * t425 + t800 * t424;
t511 = t232 * t418 - t236 * t420;
t513 = t226 * t418 + t234 * t420;
t787 = t511 - t513;
t786 = t424 * t799 - t659;
t785 = t424 * t801 + t658;
t784 = (-t495 - t496) * t425 + t795 * t424 - t797 * t419;
t649 = t419 * t425;
t783 = t797 * t421 + t802 * t424 + t803 * t649;
t643 = t421 * t425;
t782 = -t323 * t643 + t419 * t798 + t424 * t792 + t425 * t493;
t781 = t798 * t421 + t791 * t424 + t806 * t649;
t780 = t800 * t421;
t779 = t800 * t419;
t778 = t419 * t796 + t780;
t777 = -t796 * t421 + t779;
t187 = t237 * t650;
t544 = t229 * t421 - t187;
t102 = -t233 * t653 - t544;
t635 = -t227 * t653 - t235 * t650;
t751 = -t231 * t421 + t102 - t635;
t410 = t421 * rSges(6,2);
t620 = t789 * t419 - t410;
t607 = t776 * t418 - t775 * t420;
t774 = t419 * rSges(6,2) + pkin(4) * t645;
t773 = -t785 * t418 + t786 * t420 + t800 * t425;
t772 = -t781 * t418 + t783 * t420 + t793 * t425;
t228 = Icges(5,5) * t650 - Icges(5,6) * t653 - Icges(5,3) * t421;
t230 = -Icges(6,2) * t421 + t327 * t419;
t771 = (-t228 - t230) * t425 + t784 * t420 + t782 * t418;
t320 = t419 * t424;
t321 = t421 * t424;
t770 = (-t328 + t799) * t425 + (t804 * t419 + t795) * t321 + (-Icges(6,1) * t652 - t332 * t421 + t360 + t802) * t320;
t769 = (t330 + t801) * t425 + (Icges(5,2) * t650 + t515 * t419 + t361 - t792) * t321 + (-t805 * t421 + t791) * t320;
t768 = -t790 * t424 - t425 * t796;
t767 = (-t492 - t490 - t787) * t425 + t788 * t419;
t667 = t233 * t418;
t766 = t790 * t649 + (t227 * t418 + t791 * t420 - t667) * t425 + t788 * t421;
t208 = t419 * t230;
t103 = t226 * t652 + t234 * t645 + t208;
t104 = t227 * t652 + t419 * t231 + t235 * t645;
t765 = -t103 * t321 + t104 * t320 + t777 * t425;
t583 = t418 * t320;
t728 = t776 * t583;
t593 = qJD(5) * t421;
t355 = t418 * t593;
t577 = t420 * t321;
t764 = rSges(6,2) * t643 + t775 * t577 + t355;
t99 = -t230 * t421 + t419 * t513;
t763 = t321 * t99 + t778 * t425;
t762 = t767 * t419 + t771 * t421;
t761 = -t766 * t419 + t772 * t421;
t760 = t771 * t419 - t767 * t421;
t759 = t772 * t419 + t766 * t421;
t489 = t511 * t419;
t669 = t228 * t421;
t101 = -t489 - t669;
t758 = -t101 * t321 + t751 * t320 - t763;
t634 = -t419 * t228 - t236 * t645;
t105 = -t232 * t652 - t634;
t633 = t419 * t229 + t237 * t645;
t106 = -t233 * t652 + t633;
t757 = -t105 * t321 + t106 * t320 + t765;
t756 = t784 * t418 - t782 * t420;
t755 = t783 * t418 + t781 * t420;
t754 = -t768 * t419 + t773 * t421;
t753 = t773 * t419 + t768 * t421;
t752 = t101 + t99;
t750 = t103 + t105;
t749 = t104 + t106;
t748 = t792 * t418 + t795 * t420;
t747 = t791 * t418 - t420 * t802;
t579 = t420 * t649;
t482 = -t418 * t321 - t579;
t582 = t418 * t649;
t638 = t776 * t482 - t775 * t582 + t764;
t393 = qJD(5) * t418;
t563 = t419 * t393;
t644 = t420 * t424;
t580 = t419 * t644;
t738 = t418 * t643 + t580;
t637 = rSges(6,3) * t580 + t738 * qJ(5) + t563 - t728 + (t340 * t421 + t774) * t425;
t382 = pkin(7) * t643;
t432 = -pkin(8) - pkin(7);
t392 = t421 * t432;
t428 = sin(qJ(3));
t596 = qJD(3) * t428;
t564 = t421 * t596;
t534 = pkin(3) * t564;
t430 = cos(qJ(3));
t415 = pkin(3) * t430 + pkin(2);
t694 = pkin(2) - t415;
t178 = -t534 - t382 + (t694 * t419 - t392) * t425;
t413 = t421 * pkin(7);
t343 = pkin(2) * t419 - t413;
t604 = -t419 * t415 - t392;
t219 = t343 + t604;
t205 = t425 * t219;
t746 = t178 - t205;
t745 = t620 * t425;
t619 = rSges(6,1) * t645 + t775 * t652 + t774;
t744 = t607 * t419;
t743 = t607 * t421;
t740 = -t769 * t418 + t770 * t420;
t739 = t780 * t320 - t779 * t321 - t790 * t425;
t429 = sin(qJ(1));
t690 = pkin(1) * qJD(1);
t585 = t429 * t690;
t338 = rSges(3,1) * t419 + rSges(3,2) * t421;
t657 = t338 * t425;
t265 = -t585 - t657;
t737 = -t321 * t789 + t420 * t593 + t744 * t425;
t736 = 0.2e1 * qJD(3);
t289 = t320 * t425;
t639 = t430 * qJD(3) ^ 2;
t589 = pkin(3) * t639;
t592 = qJD(5) * t424;
t484 = t420 * t592 - t589;
t566 = t419 * t596;
t371 = pkin(3) * t566;
t431 = cos(qJ(1));
t423 = t431 * pkin(1);
t434 = qJD(1) ^ 2;
t590 = t434 * t423;
t527 = t425 * t371 - t590;
t651 = t418 * t424;
t618 = -qJ(5) * t651 - (pkin(4) * t424 - qJD(5)) * t420 - t340 * t424;
t412 = t419 * pkin(7);
t646 = t419 * t432;
t353 = t425 * t646;
t605 = t353 + t371;
t179 = (-t694 * t421 - t412) * t425 - t605;
t344 = t421 * pkin(2) + t412;
t301 = t344 * t425;
t636 = -t179 - t301;
t33 = t484 * t421 + t618 * t321 + t607 * t289 + (-t563 + t636 - t637) * t425 + t527;
t588 = t431 * t690;
t363 = t421 * t415;
t535 = t363 - t646;
t220 = t535 - t344;
t573 = -t220 - t619;
t712 = t425 * (t344 - t573) - t371 + t563 - t607 * t320;
t83 = t588 + t712;
t735 = t425 * t83 + t33;
t290 = t425 * t321;
t696 = pkin(1) * t429;
t591 = t434 * t696;
t528 = t425 * (-pkin(2) * t649 + t382) - t591;
t504 = t425 * t178 + t528;
t587 = pkin(3) * t596;
t32 = t484 * t419 + t618 * t320 - t607 * t290 + ((-t587 + t393) * t421 + t638) * t425 + t504;
t460 = -t415 - t789;
t473 = -t321 * t607 + t355 - t534;
t626 = t219 - t343;
t82 = -t585 + (-t620 + t626) * t425 + t473;
t734 = (t83 * (-t651 * t776 - t587) + (-t83 * t432 + t460 * t82) * t425) * t421 + (-t32 * t432 + (-t82 * qJD(5) - t33 * t775) * t418 + (-t424 * t775 * t82 - t33 * t776) * t420 + (-t82 * rSges(6,2) + t460 * t83) * t425) * t419;
t610 = rSges(5,2) * t582 + rSges(5,3) * t643;
t152 = rSges(5,1) * t482 - rSges(5,2) * t577 + t610;
t691 = rSges(5,2) * t418;
t692 = rSges(5,1) * t420;
t341 = -t691 + t692;
t298 = t341 * t424;
t337 = rSges(5,1) * t418 + rSges(5,2) * t420;
t63 = t152 * t425 - t290 * t337 - t298 * t320 + (-t419 * t639 - t425 * t564) * pkin(3) + t504;
t240 = rSges(5,1) * t650 - rSges(5,2) * t653 - t421 * rSges(5,3);
t485 = -t321 * t337 - t534;
t461 = t485 - t585;
t94 = (-t240 + t626) * t425 + t461;
t245 = t320 * t337;
t525 = -t371 + t588;
t603 = rSges(5,1) * t645 + t419 * rSges(5,3);
t242 = -rSges(5,2) * t652 + t603;
t625 = -t220 - t242;
t572 = t344 - t625;
t95 = t425 * t572 - t245 + t525;
t733 = (-t63 * t691 + t95 * (-rSges(5,1) * t651 - rSges(5,2) * t644 - t587) + (t94 * (-t415 - t692) - t95 * t432) * t425) * t421;
t571 = -rSges(5,1) * t583 - t738 * rSges(5,2);
t154 = t425 * t603 + t571;
t64 = -t421 * t589 + t289 * t337 - t298 * t321 + (-t154 + t636) * t425 + t527;
t732 = t425 * t95 + t64;
t310 = t425 * t343;
t729 = t310 - t205;
t641 = t421 * t430;
t727 = rSges(4,1) * t641 + t419 * rSges(4,3);
t422 = Icges(4,4) * t430;
t517 = -Icges(4,2) * t428 + t422;
t376 = Icges(4,1) * t428 + t422;
t726 = -t473 + t729 + t745 + t764;
t648 = t419 * t428;
t600 = rSges(4,2) * t648 + t421 * rSges(4,3);
t647 = t419 * t430;
t262 = rSges(4,1) * t647 - t600;
t238 = t425 * t262;
t595 = qJD(3) * t430;
t584 = rSges(4,2) * t595;
t640 = t425 * t428;
t498 = rSges(4,2) * t419 * t640 + rSges(4,3) * t643 - t421 * t584;
t724 = -rSges(4,1) * t564 + t238 + t310 + t382 + t498;
t281 = t337 * t419;
t285 = t337 * t421;
t598 = qJD(3) * t421;
t599 = qJD(3) * t419;
t631 = -t219 * t599 + t220 * t598;
t90 = t240 * t320 + t242 * t321 + t631;
t723 = -(t281 * t425 - t321 * t341) * t94 - t90 * (-t320 * t281 - t285 * t321) - t95 * (-t425 * t285 - t320 * t341);
t373 = Icges(4,5) * t430 - Icges(4,6) * t428;
t372 = Icges(4,5) * t428 + Icges(4,6) * t430;
t463 = Icges(4,3) * t425 - qJD(3) * t372;
t680 = Icges(4,4) * t428;
t377 = Icges(4,1) * t430 - t680;
t497 = t377 * t421;
t261 = Icges(4,5) * t419 + t497;
t494 = t517 * t421;
t259 = Icges(4,6) * t419 + t494;
t664 = t259 * t428;
t508 = -t261 * t430 + t664;
t718 = -t373 * t649 + t421 * t463 + t425 * t508;
t491 = t373 * t421;
t389 = Icges(4,4) * t648;
t260 = Icges(4,1) * t647 - Icges(4,5) * t421 - t389;
t258 = Icges(4,4) * t647 - Icges(4,2) * t648 - Icges(4,6) * t421;
t665 = t258 * t428;
t509 = -t260 * t430 + t665;
t717 = t419 * t463 + (t491 + t509) * t425;
t383 = rSges(4,1) * t428 + rSges(4,2) * t430;
t311 = t383 * t599;
t642 = t421 * t428;
t263 = -rSges(4,2) * t642 + t727;
t480 = t263 + t344;
t714 = t425 * t480 - t311;
t374 = Icges(4,2) * t430 + t680;
t505 = t374 * t428 - t376 * t430;
t713 = t373 * qJD(3) + t425 * t505;
t256 = Icges(4,5) * t647 - Icges(4,6) * t648 - Icges(4,3) * t421;
t109 = -t256 * t421 - t419 * t509;
t218 = t425 * t240;
t711 = -rSges(5,1) * t579 - t415 * t649 + t218 + t610 + t729;
t615 = -Icges(4,2) * t647 + t260 - t389;
t617 = t376 * t419 + t258;
t710 = -t428 * t615 - t430 * t617;
t707 = t289 / 0.2e1;
t706 = t290 / 0.2e1;
t705 = -t320 / 0.2e1;
t704 = t320 / 0.2e1;
t703 = -t321 / 0.2e1;
t702 = t321 / 0.2e1;
t701 = t419 / 0.2e1;
t700 = -t421 / 0.2e1;
t699 = -t425 / 0.2e1;
t698 = t425 / 0.2e1;
t695 = pkin(3) * t428;
t693 = rSges(4,1) * t430;
t594 = qJD(5) * t420;
t65 = t320 * t620 + t321 * t619 - t594 + t631;
t688 = t425 * t65;
t686 = t425 * t94;
t567 = t383 * t598;
t483 = -t567 - t585;
t149 = (-t262 - t343) * t425 + t483;
t673 = t149 * t421;
t655 = t372 * t421;
t181 = -t419 * t505 - t655;
t670 = t181 * t425;
t656 = t372 * t419;
t654 = t373 * t425;
t630 = -t419 * t219 + t421 * t220;
t629 = t419 * t240 + t421 * t242;
t628 = -t419 * t256 - t260 * t641;
t257 = Icges(4,3) * t419 + t491;
t627 = t419 * t257 + t261 * t641;
t616 = -t376 * t421 - t259;
t614 = -t374 * t421 + t261;
t613 = t607 * t649;
t602 = -t374 + t377;
t601 = t376 + t517;
t597 = qJD(3) * t425;
t586 = pkin(3) * t595;
t576 = t421 * t640;
t575 = t419 * t154 + (t152 + t218) * t421;
t574 = t419 * t179 + t746 * t421;
t570 = rSges(4,1) * t566 + rSges(4,2) * t576 + t419 * t584;
t568 = t410 + t604;
t562 = t649 / 0.2e1;
t561 = t643 / 0.2e1;
t560 = -pkin(2) - t693;
t559 = -t599 / 0.2e1;
t556 = t598 / 0.2e1;
t554 = -t337 - t695;
t342 = t421 * rSges(3,1) - rSges(3,2) * t419;
t553 = t428 * (-t419 ^ 2 - t421 ^ 2);
t214 = t261 * t647;
t543 = t257 * t421 - t214;
t542 = -t228 + t667;
t540 = -t256 + t664;
t532 = t620 * t419 + t619 * t421;
t526 = -t607 - t695;
t300 = rSges(3,1) * t643 - rSges(3,2) * t649;
t524 = -t298 - t586;
t522 = -rSges(4,2) * t428 + t693;
t521 = -t419 * t95 - t421 * t94;
t150 = t588 + t714;
t514 = -t150 * t419 - t673;
t168 = t258 * t430 + t260 * t428;
t169 = t259 * t430 + t261 * t428;
t503 = -t586 + t618;
t502 = t535 + t603;
t501 = t637 * t419 + (t745 + t638) * t421;
t500 = t363 + t619;
t110 = -t259 * t648 - t543;
t487 = (-t109 * t421 + t110 * t419) * qJD(3);
t111 = -t258 * t642 - t628;
t112 = -t259 * t642 + t627;
t486 = (-t111 * t421 + t112 * t419) * qJD(3);
t160 = (t262 * t419 + t263 * t421) * qJD(3);
t481 = -t240 + t604;
t477 = -t220 * t419 * t597 + t179 * t599 + t746 * t598;
t476 = -t428 * t614 + t430 * t616;
t475 = t419 * t560 + t413 + t600;
t474 = -rSges(5,3) * t649 - t571 + t605;
t472 = (-t428 * t601 + t430 * t602) * t425;
t465 = Icges(4,5) * t425 - qJD(3) * t376;
t464 = Icges(4,6) * t425 - qJD(3) * t374;
t172 = t421 * t464 - t517 * t649;
t174 = -t377 * t649 + t421 * t465;
t445 = -qJD(3) * t169 - t172 * t428 + t174 * t430 + t257 * t425;
t173 = t419 * t464 + t425 * t494;
t175 = t419 * t465 + t425 * t497;
t444 = -qJD(3) * t168 - t173 * t428 + t175 * t430 + t256 * t425;
t346 = t517 * qJD(3);
t347 = t377 * qJD(3);
t443 = -t346 * t428 + t347 * t430 + t372 * t425 + (-t374 * t430 - t376 * t428) * qJD(3);
t442 = t65 * (-t744 * t320 - t743 * t321 + t393) + t83 * (-t320 * t789 + t419 * t594 - t743 * t425);
t441 = (t560 * t673 + (t149 * (-rSges(4,3) - pkin(7)) + t150 * t560) * t419) * t425;
t440 = (t751 * t419 - t752 * t421) * t707 + (t749 * t419 - t750 * t421) * t706 + (-t739 * t419 + t740 * t421) * t705 + ((t749 * t425 + t762) * t421 + (t750 * t425 + t761) * t419) * t704 + ((t751 * t425 + t760) * t421 + (t752 * t425 + t759) * t419) * t703 + (t740 * t419 + t739 * t421) * t702 + (t750 * t289 + t749 * t290 + t761 * t320 + t762 * t321 + t754 * t425) * t701 + (t752 * t289 + t751 * t290 + t759 * t320 + t760 * t321 + t753 * t425) * t700 + (t770 * t418 + t769 * t420) * t699 + ((t747 * t425 + t756) * t421 + (t748 * t425 + t755) * t419) * t698 + t758 * t562 + t757 * t561;
t182 = -t421 * t505 + t656;
t180 = t182 * t425;
t57 = t487 + t670;
t58 = t180 + t486;
t86 = -qJD(3) * t509 + t173 * t430 + t175 * t428;
t87 = -qJD(3) * t508 + t172 * t430 + t174 * t428;
t91 = t419 * t713 + t443 * t421;
t92 = t443 * t419 - t421 * t713;
t436 = (t180 + ((t110 - t214 + (t257 + t665) * t421 + t628) * t421 + t627 * t419) * qJD(3)) * t556 + ((t102 + (t232 * t421 + t233 * t419) * t418 + t544 + t634) * t321 + (-t236 * t650 + t669 + t101 + (t232 * t419 - t233 * t421) * t418 + t633) * t320 + t765) * t702 + (t57 - t670 + ((t421 * t540 + t112 - t627) * t421 + (t419 * t540 + t111 + t543) * t419) * qJD(3)) * t559 + (t87 + t91) * t599 / 0.2e1 - (t86 + t92 + t58) * t598 / 0.2e1 + (-qJD(3) * t505 + t346 * t430 + t347 * t428 + t786 * t418 + t785 * t420) * t425 + (t748 - t778) * t707 + (t747 + t777) * t706 + ((t542 * t421 + t106 - t489 - t633) * t321 + (t419 * t542 - t187 - t208 + t635 + (t787 + t793) * t421 + t750) * t320 + t758 + t763) * t705 + (t754 + t755) * t704 + (t753 - t756 + t757) * t703 + ((t168 + t181) * t419 + (t169 + t182) * t421) * t597 / 0.2e1;
t350 = t522 * qJD(3);
t309 = t383 * t421;
t308 = t383 * t419;
t266 = t342 * t425 + t588;
t223 = -t300 * t425 - t590;
t222 = -t425 * t657 - t591;
t177 = t425 * t727 - t570;
t176 = (-t425 * t647 - t564) * rSges(4,1) + t498;
t97 = -t590 - t350 * t598 + (-t177 - t301 + t311) * t425;
t96 = t176 * t425 + (-t350 * t419 - t383 * t643) * qJD(3) + t528;
t23 = t152 * t321 + t154 * t320 + t240 * t290 - t242 * t289 + t477;
t13 = -t619 * t289 + t620 * t290 + t637 * t320 + t638 * t321 + t418 * t592 + t477;
t1 = [t436 + m(3) * (t223 * (-t338 - t696) + t222 * (t342 + t423) + (-t300 - t588 + t266) * t265) + (t33 * (t568 - t696) + t82 * (t353 - t525 + t728) + t32 * (t423 + t500) + (t82 + t726) * t83 + t734) * m(6) + (t64 * (t481 - t696) + t94 * (t474 - t588) + t63 * (t423 + t502) + (-t461 + t94 - t585 + t711) * t95 + t733) * m(5) + (t97 * (t475 - t696) + t149 * (t570 - t588) + t96 * (t423 + t480) + t441 + (t149 - t483 - t585 + t724) * t150) * m(4); t436 + (t32 * t500 + t33 * t568 + t726 * t83 + (t605 + t712 + t728) * t82 + t734) * m(6) + (t481 * t64 + t502 * t63 + t572 * t686 + (-t485 + t711) * t95 + (-t245 - t371 + t474) * t94 + t733) * m(5) + (t475 * t97 + t480 * t96 + t441 + (t567 + t724) * t150 + (t570 + t714) * t149) * m(4) + (t222 * t342 - t223 * t338 - t265 * t300 - t266 * t657 - (-t265 * t342 - t266 * t338) * t425) * m(3); ((t169 * t425 - t86) * t421 + (t168 * t425 + t87) * t419) * t698 + ((-t599 * t655 + t654) * t419 + (t472 + (-t710 * t421 + (t656 + t476) * t419) * qJD(3)) * t421) * t559 + ((t428 * t602 + t430 * t601) * t425 + ((t419 * t614 - t421 * t615) * t430 + (t419 * t616 + t421 * t617) * t428) * qJD(3)) * t699 + ((-t598 * t656 - t654) * t421 + (t472 + (t476 * t419 + (t655 - t710) * t421) * qJD(3)) * t419) * t556 + t440 + (t425 * t91 + ((t112 * t425 - t419 * t717 - t444 * t421) * t421 + (t111 * t425 + t419 * t718 + t445 * t421) * t419) * t736) * t701 + (t425 * t92 + ((t110 * t425 - t444 * t419 + t421 * t717) * t421 + (t109 * t425 + t445 * t419 - t421 * t718) * t419) * t736) * t700 + (t57 + t487) * t562 + (t58 + t486) * t561 + (-t82 * t737 - (-t83 * t576 + ((-t419 * t83 - t421 * t82) * t430 + t65 * t553) * qJD(3)) * pkin(3) - t442 + t82 * t613 + t13 * (t532 + t630) + t65 * (t501 + t574) + (t503 * t82 + t526 * t735) * t421 + (t32 * t526 + t503 * t83 + t573 * t688) * t419) * m(6) + (-(-t95 * t576 + (t430 * t521 + t553 * t90) * qJD(3)) * pkin(3) + t23 * (t629 + t630) + t90 * (t574 + t575) + (t524 * t94 + t554 * t732) * t421 + (t63 * t554 + t95 * t524 + (t94 * t337 + t625 * t90) * t425) * t419 + t723) * m(5) + (0.2e1 * t160 * ((t176 + t238) * t421 + (-t263 * t425 + t177) * t419) + t514 * t350 + ((-t150 * t425 - t97) * t421 + (t149 * t425 - t96) * t419) * t383 - (t149 * t308 - t150 * t309) * t425 - (t160 * (-t308 * t419 - t309 * t421) + t514 * t522) * qJD(3)) * m(4); t440 + (-t442 + t13 * t532 + t65 * t501 + (t618 * t83 - t619 * t688) * t419 + (-t32 * t419 - t421 * t735) * t607 + (t618 * t421 + t613 - t737) * t82) * m(6) + (t23 * t629 + t90 * (-t242 * t649 + t575) + t521 * t298 + (-t732 * t421 + (-t63 + t686) * t419) * t337 + t723) * m(5); (t32 * t653 + t33 * t652 + t577 * t82 + t580 * t83 + (t651 - (t320 * t419 + t321 * t421) * t418) * t65 + (-t83 * t320 - t82 * t321 - t13) * t420) * m(6);];
tauc = t1(:);
