% Calculate vector of inverse dynamics joint torques for
% S5RRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:51
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRRRP4_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP4_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP4_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRP4_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRP4_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP4_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP4_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP4_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP4_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:50:40
% EndTime: 2019-12-31 21:51:12
% DurationCPUTime: 24.96s
% Computational Cost: add. (25342->789), mult. (20265->949), div. (0->0), fcn. (15949->8), ass. (0->456)
t866 = Icges(6,4) + Icges(5,5);
t865 = Icges(5,6) - Icges(6,6);
t466 = qJ(3) + qJ(4);
t456 = sin(t466);
t458 = cos(t466);
t717 = Icges(6,5) * t458;
t347 = Icges(6,3) * t456 + t717;
t436 = Icges(5,4) * t458;
t554 = -Icges(5,2) * t456 + t436;
t864 = t347 - t554;
t354 = Icges(6,1) * t456 - t717;
t356 = Icges(5,1) * t456 + t436;
t848 = t354 + t356;
t718 = Icges(5,4) * t456;
t357 = Icges(5,1) * t458 - t718;
t432 = Icges(6,5) * t456;
t556 = Icges(6,1) * t458 + t432;
t863 = -t357 - t556;
t352 = Icges(5,2) * t458 + t718;
t553 = Icges(6,3) * t458 - t432;
t845 = t553 + t352;
t467 = qJ(1) + qJ(2);
t457 = sin(t467);
t459 = cos(t467);
t246 = -Icges(6,6) * t459 + t347 * t457;
t687 = t457 * t458;
t690 = t456 * t457;
t252 = Icges(5,4) * t687 - Icges(5,2) * t690 - Icges(5,6) * t459;
t854 = -t246 + t252;
t682 = t458 * t459;
t386 = Icges(6,5) * t682;
t689 = t456 * t459;
t247 = Icges(6,6) * t457 + Icges(6,3) * t689 + t386;
t529 = t554 * t459;
t253 = Icges(5,6) * t457 + t529;
t862 = t247 - t253;
t254 = -Icges(6,4) * t459 + t457 * t556;
t387 = Icges(5,4) * t690;
t256 = Icges(5,1) * t687 - Icges(5,5) * t459 - t387;
t851 = t254 + t256;
t531 = t556 * t459;
t255 = Icges(6,4) * t457 + t531;
t532 = t357 * t459;
t257 = Icges(5,5) * t457 + t532;
t850 = t255 + t257;
t861 = t356 - t864;
t860 = t866 * t456 + t865 * t458;
t859 = -t553 - t863;
t464 = qJD(3) + qJD(4);
t465 = qJD(1) + qJD(2);
t696 = t352 * t464;
t858 = -t464 * t553 + t865 * t465 - t696;
t695 = t354 * t464;
t857 = -t356 * t464 + t866 * t465 - t695;
t856 = -t845 * t456 + t848 * t458;
t835 = rSges(6,1) + pkin(4);
t855 = t835 * t456;
t349 = Icges(5,5) * t458 - Icges(5,6) * t456;
t526 = t349 * t459;
t249 = Icges(5,3) * t457 + t526;
t351 = Icges(6,4) * t458 + Icges(6,6) * t456;
t528 = t351 * t459;
t251 = Icges(6,2) * t457 + t528;
t852 = t249 + t251;
t849 = t351 + t349;
t847 = (-Icges(6,2) - Icges(5,3)) * t465 + t860 * t464;
t547 = t252 * t456 - t256 * t458;
t549 = t246 * t456 + t254 * t458;
t846 = t547 - t549;
t844 = t859 * t464 - t696;
t843 = t861 * t464 + t695;
t842 = (-t531 - t532) * t465 + t854 * t464 - t857 * t457;
t686 = t457 * t465;
t841 = t857 * t459 + t862 * t464 + t863 * t686;
t680 = t459 * t465;
t840 = -t347 * t680 + t858 * t457 + t851 * t464 + t465 * t529;
t839 = t858 * t459 + t850 * t464 + t864 * t686;
t838 = t860 * t459;
t837 = t860 * t457;
t773 = t458 * rSges(6,1) + t456 * rSges(6,3);
t836 = t458 * pkin(4) + t456 * qJ(5) + t773;
t834 = rSges(6,3) + qJ(5);
t804 = t856 * t457 - t838;
t803 = t856 * t459 + t837;
t203 = t257 * t687;
t582 = t249 * t459 - t203;
t104 = -t253 * t690 - t582;
t672 = -t247 * t690 - t255 * t687;
t809 = -t251 * t459 + t104 - t672;
t445 = t459 * rSges(6,2);
t657 = t836 * t457 - t445;
t833 = t457 * rSges(6,2) + pkin(4) * t682;
t832 = -t843 * t456 + t844 * t458 + t860 * t465;
t831 = -t839 * t456 + t841 * t458 + t852 * t465;
t248 = Icges(5,5) * t687 - Icges(5,6) * t690 - Icges(5,3) * t459;
t250 = -Icges(6,2) * t459 + t351 * t457;
t830 = (-t248 - t250) * t465 + t842 * t458 + t840 * t456;
t344 = t457 * t464;
t345 = t459 * t464;
t829 = (-t352 + t859) * t465 + (t848 * t457 + t854) * t345 + (-Icges(6,1) * t689 - t356 * t459 + t386 + t862) * t344;
t828 = (t354 + t861) * t465 + (Icges(5,2) * t687 + t553 * t457 + t387 - t851) * t345 + (-t845 * t459 + t850) * t344;
t827 = -t849 * t464 + t856 * t465;
t826 = (-t528 - t526 - t846) * t465 + t847 * t457;
t705 = t253 * t456;
t825 = t849 * t686 + (t247 * t456 + t850 * t458 - t705) * t465 + t847 * t459;
t229 = t457 * t250;
t105 = t246 * t689 + t254 * t682 + t229;
t106 = t247 * t689 + t457 * t251 + t255 * t682;
t824 = -t105 * t345 + t106 * t344 + t803 * t465;
t619 = t456 * t344;
t776 = t835 * t619;
t640 = t834 * t687;
t383 = qJ(5) * t682;
t639 = rSges(6,3) * t682 + t383;
t627 = qJD(5) * t459;
t379 = t456 * t627;
t613 = t458 * t345;
t823 = rSges(6,2) * t680 + rSges(6,3) * t613 + t464 * t383 + t379;
t101 = -t250 * t459 + t457 * t549;
t822 = t101 * t345 - t804 * t465;
t821 = t826 * t457 + t830 * t459;
t820 = -t825 * t457 + t831 * t459;
t819 = t830 * t457 - t826 * t459;
t818 = t831 * t457 + t825 * t459;
t524 = t547 * t457;
t707 = t248 * t459;
t103 = -t524 - t707;
t817 = -t103 * t345 + t809 * t344 - t822;
t671 = -t457 * t248 - t256 * t682;
t107 = -t252 * t689 - t671;
t670 = t457 * t249 + t257 * t682;
t108 = -t253 * t689 + t670;
t816 = -t107 * t345 + t108 * t344 + t824;
t815 = t842 * t456 - t840 * t458;
t814 = t841 * t456 + t839 * t458;
t813 = -t827 * t457 + t832 * t459;
t812 = t832 * t457 + t827 * t459;
t632 = qJD(3) * t465;
t400 = t457 * t632;
t629 = qJD(4) * t465;
t226 = t457 * t629 + t400 + (-qJDD(3) - qJDD(4)) * t459;
t463 = qJDD(1) + qJDD(2);
t470 = cos(qJ(3));
t676 = t470 * qJD(3) ^ 2;
t625 = pkin(3) * t676;
t626 = qJD(5) * t464;
t504 = qJDD(5) * t456 + t458 * t626 - t625;
t330 = -qJDD(3) * t459 + t400;
t469 = sin(qJ(1));
t471 = cos(qJ(1));
t474 = qJD(1) ^ 2;
t525 = (-qJDD(1) * t469 - t471 * t474) * pkin(1);
t468 = sin(qJ(3));
t737 = pkin(3) * t468;
t516 = t330 * t737 + t525;
t449 = t459 * pkin(7);
t366 = pkin(2) * t457 - t449;
t472 = -pkin(8) - pkin(7);
t422 = t459 * t472;
t461 = t470 * pkin(3);
t451 = t461 + pkin(2);
t638 = -t457 * t451 - t422;
t240 = t366 + t638;
t663 = t240 - t366;
t568 = -t657 + t663;
t424 = qJD(5) * t456;
t599 = t457 * t424;
t643 = -t834 * t458 + t855;
t688 = t456 * t464;
t656 = -qJ(5) * t688 - (pkin(4) * t464 - qJD(5)) * t458 - t773 * t464;
t447 = t457 * pkin(7);
t683 = t457 * t472;
t377 = t465 * t683;
t631 = qJD(3) * t468;
t602 = t457 * t631;
t399 = pkin(3) * t602;
t641 = t377 + t399;
t734 = pkin(2) - t451;
t185 = (-t459 * t734 - t447) * t465 - t641;
t367 = t459 * pkin(2) + t447;
t320 = t367 * t465;
t673 = -t185 - t320;
t681 = t458 * t464;
t616 = t457 * t681;
t794 = t456 * t680 + t616;
t674 = rSges(6,3) * t616 + t794 * qJ(5) + t599 - t776 + (t459 * t773 + t833) * t465;
t18 = t656 * t345 + t643 * t226 + t504 * t459 + t568 * t463 + (-t599 + t673 - t674) * t465 + t516;
t523 = -t643 * t344 - t399 + t599;
t573 = t459 * t451 - t683;
t241 = t573 - t367;
t650 = rSges(6,1) * t682 + t834 * t689 + t833;
t608 = -t241 - t650;
t571 = t367 - t608;
t731 = pkin(1) * qJD(1);
t624 = t471 * t731;
t83 = t465 * t571 + t523 + t624;
t811 = (t465 * t83 + t18) * t459;
t810 = t101 + t103;
t808 = t105 + t107;
t807 = t106 + t108;
t806 = t851 * t456 + t854 * t458;
t805 = t850 * t456 - t458 * t862;
t615 = t458 * t686;
t520 = -t345 * t456 - t615;
t618 = t456 * t686;
t675 = t835 * t520 - t834 * t618 + t823;
t802 = t657 * t465;
t801 = -t835 * t690 + t640;
t800 = -t835 * t689 + t639;
t797 = -t828 * t456 + t829 * t458;
t628 = qJD(5) * t458;
t633 = qJD(3) * t459;
t634 = qJD(3) * t457;
t668 = -t240 * t634 + t241 * t633;
t65 = t344 * t657 + t345 * t650 - t628 + t668;
t769 = g(1) * t459 + g(2) * t457;
t796 = -t65 * (t801 * t344 + t800 * t345 + t424) - t83 * (-t344 * t836 + t457 * t628 + t800 * t465) + t769 * t855;
t795 = t838 * t344 - t837 * t345 - t849 * t465;
t621 = t469 * t731;
t361 = rSges(3,1) * t457 + rSges(3,2) * t459;
t694 = t361 * t465;
t285 = -t621 - t694;
t793 = t345 * t836 - t458 * t627 + t801 * t465 + t643 * t686;
t360 = rSges(5,1) * t456 + rSges(5,2) * t458;
t301 = t360 * t457;
t305 = t360 * t459;
t442 = t458 * rSges(5,1);
t364 = -rSges(5,2) * t456 + t442;
t260 = rSges(5,1) * t687 - rSges(5,2) * t690 - t459 * rSges(5,3);
t775 = rSges(5,1) * t682 + t457 * rSges(5,3);
t262 = -rSges(5,2) * t689 + t775;
t92 = t260 * t344 + t262 * t345 + t668;
t600 = t459 * t631;
t572 = pkin(3) * t600;
t522 = -t345 * t360 - t572;
t498 = t522 - t621;
t609 = -t260 + t663;
t98 = t465 * t609 + t498;
t265 = t344 * t360;
t564 = -t399 + t624;
t662 = -t241 - t262;
t607 = t367 - t662;
t99 = t465 * t607 - t265 + t564;
t792 = -(t301 * t465 - t345 * t364) * t98 - t92 * (-t344 * t301 - t305 * t345) - t99 * (-t465 * t305 - t344 * t364);
t791 = -g(1) + t18;
t606 = -rSges(5,1) * t619 - t794 * rSges(5,2);
t162 = t465 * t775 + t606;
t317 = t364 * t464;
t34 = -t459 * t625 + t226 * t360 - t317 * t345 + (-t162 + t673) * t465 + t609 * t463 + t516;
t790 = -g(1) + t34;
t677 = t465 * t468;
t612 = t459 * t677;
t630 = qJD(3) * t470;
t620 = rSges(4,2) * t630;
t605 = rSges(4,1) * t602 + rSges(4,2) * t612 + t457 * t620;
t678 = t459 * t470;
t774 = rSges(4,1) * t678 + t457 * rSges(4,3);
t183 = t465 * t774 - t605;
t733 = rSges(4,1) * t470;
t415 = -rSges(4,2) * t468 + t733;
t373 = t415 * qJD(3);
t413 = rSges(4,1) * t468 + rSges(4,2) * t470;
t685 = t457 * t468;
t635 = rSges(4,2) * t685 + t459 * rSges(4,3);
t684 = t457 * t470;
t282 = rSges(4,1) * t684 - t635;
t651 = -t282 - t366;
t84 = -t373 * t633 + t330 * t413 + (-t183 - t320) * t465 + t651 * t463 + t525;
t789 = -g(1) + t84;
t329 = qJDD(3) * t457 + t459 * t632;
t225 = qJDD(4) * t457 + t459 * t629 + t329;
t412 = pkin(7) * t680;
t184 = -t572 - t412 + (t457 * t734 - t422) * t465;
t462 = t471 * pkin(1);
t738 = pkin(1) * t469;
t566 = qJDD(1) * t462 - t474 * t738;
t535 = t465 * (-pkin(2) * t686 + t412) + t463 * t367 + t566;
t514 = t465 * t184 + t463 * t241 + t535;
t701 = t329 * t468;
t19 = -pkin(3) * t701 + t650 * t463 + t656 * t344 - t643 * t225 + (t379 + t675) * t465 + t504 * t457 + t514;
t788 = -g(2) + t19;
t646 = rSges(5,2) * t618 + rSges(5,3) * t680;
t160 = rSges(5,1) * t520 - rSges(5,2) * t613 + t646;
t35 = t160 * t465 - t225 * t360 + t262 * t463 - t317 * t344 + (-t457 * t676 - t701) * pkin(3) + t514;
t787 = -g(2) + t35;
t534 = rSges(4,2) * t457 * t677 + rSges(4,3) * t680 - t459 * t620;
t182 = (-t465 * t684 - t600) * rSges(4,1) + t534;
t679 = t459 * t468;
t283 = -rSges(4,2) * t679 + t774;
t85 = t182 * t465 + t283 * t463 - t329 * t413 - t373 * t634 + t535;
t786 = -g(2) + t85;
t319 = rSges(3,1) * t680 - rSges(3,2) * t686;
t785 = -t319 * t465 - t361 * t463 - g(1) + t525;
t365 = t459 * rSges(3,1) - rSges(3,2) * t457;
t784 = t365 * t463 - t465 * t694 - g(2) + t566;
t782 = t465 * t99 + t34;
t497 = -t451 - t836;
t623 = pkin(3) * t631;
t729 = t459 * t83;
t512 = -t345 * t643 + t379 - t572;
t82 = t465 * t568 + t512 - t621;
t730 = t457 * t82;
t781 = ((-t83 * t472 + t497 * t82) * t459 + (-t82 * rSges(6,2) + t497 * t83) * t457) * t465 + (-t681 * t834 - t424) * t730 + (-t688 * t835 - t623) * t729;
t780 = (t99 * (-t360 * t464 - t623) + (t98 * (-t451 - t442) - t99 * t472) * t465) * t459;
t224 = t465 * t240;
t334 = t465 * t366;
t777 = t224 - t334;
t460 = Icges(4,4) * t470;
t555 = -Icges(4,2) * t468 + t460;
t406 = Icges(4,1) * t468 + t460;
t771 = -t512 - t777 + t802 + t823;
t258 = t465 * t282;
t768 = -rSges(4,1) * t600 + t258 + t334 + t412 + t534;
t403 = Icges(4,5) * t470 - Icges(4,6) * t468;
t402 = Icges(4,5) * t468 + Icges(4,6) * t470;
t501 = Icges(4,3) * t465 - qJD(3) * t402;
t719 = Icges(4,4) * t468;
t407 = Icges(4,1) * t470 - t719;
t533 = t407 * t459;
t281 = Icges(4,5) * t457 + t533;
t530 = t555 * t459;
t279 = Icges(4,6) * t457 + t530;
t702 = t279 * t468;
t544 = -t281 * t470 + t702;
t763 = -t403 * t686 + t459 * t501 + t465 * t544;
t527 = t403 * t459;
t419 = Icges(4,4) * t685;
t280 = Icges(4,1) * t684 - Icges(4,5) * t459 - t419;
t278 = Icges(4,4) * t684 - Icges(4,2) * t685 - Icges(4,6) * t459;
t703 = t278 * t468;
t545 = -t280 * t470 + t703;
t762 = t457 * t501 + (t527 + t545) * t465;
t217 = t283 + t367;
t761 = t217 * t465 - t413 * t634;
t404 = Icges(4,2) * t470 + t719;
t539 = t404 * t468 - t406 * t470;
t758 = t403 * qJD(3) + t465 * t539;
t276 = Icges(4,5) * t684 - Icges(4,6) * t685 - Icges(4,3) * t459;
t119 = -t276 * t459 - t457 * t545;
t239 = t465 * t260;
t757 = -rSges(5,1) * t615 - t451 * t686 + t239 + t646 - t777;
t653 = -Icges(4,2) * t684 + t280 - t419;
t655 = t406 * t457 + t278;
t755 = -t468 * t653 - t470 * t655;
t752 = t225 / 0.2e1;
t751 = t226 / 0.2e1;
t750 = t329 / 0.2e1;
t749 = t330 / 0.2e1;
t748 = -t344 / 0.2e1;
t747 = t344 / 0.2e1;
t746 = -t345 / 0.2e1;
t745 = t345 / 0.2e1;
t744 = t457 / 0.2e1;
t743 = -t459 / 0.2e1;
t742 = t463 / 0.2e1;
t741 = -t465 / 0.2e1;
t740 = t465 / 0.2e1;
t728 = t465 * t65;
t727 = t465 * t82;
t725 = t465 * t98;
t603 = t413 * t633;
t521 = -t603 - t621;
t157 = t465 * t651 + t521;
t711 = t157 * t459;
t692 = t402 * t459;
t191 = -t457 * t539 - t692;
t708 = t191 * t465;
t693 = t402 * t457;
t691 = t403 * t465;
t667 = -t457 * t240 + t459 * t241;
t666 = t457 * t260 + t459 * t262;
t665 = -t457 * t276 - t280 * t678;
t277 = Icges(4,3) * t457 + t527;
t664 = t457 * t277 + t281 * t678;
t654 = -t406 * t459 - t279;
t652 = -t404 * t459 + t281;
t637 = -t404 + t407;
t636 = t406 + t555;
t622 = pkin(3) * t630;
t611 = t457 * t162 + (t160 + t239) * t459;
t610 = t457 * t185 + (t184 - t224) * t459;
t598 = t686 / 0.2e1;
t597 = t680 / 0.2e1;
t596 = -pkin(2) - t733;
t595 = -t634 / 0.2e1;
t594 = t634 / 0.2e1;
t593 = -t633 / 0.2e1;
t592 = t633 / 0.2e1;
t519 = -t360 - t737;
t591 = t468 * (-t457 ^ 2 - t459 ^ 2);
t235 = t281 * t684;
t581 = t277 * t459 - t235;
t580 = -t248 + t705;
t578 = -t276 + t702;
t570 = t657 * t457 + t650 * t459;
t565 = -t643 - t737;
t563 = -t317 - t622;
t416 = rSges(2,1) * t471 - rSges(2,2) * t469;
t414 = rSges(2,1) * t469 + rSges(2,2) * t471;
t560 = t457 * t83 + t459 * t82;
t559 = -t457 * t99 - t459 * t98;
t120 = -t279 * t685 - t581;
t552 = -t119 * t459 + t120 * t457;
t121 = -t278 * t679 - t665;
t122 = -t279 * t679 + t664;
t551 = -t121 * t459 + t122 * t457;
t158 = t624 + t761;
t550 = -t158 * t457 - t711;
t174 = t278 * t470 + t280 * t468;
t175 = t279 * t470 + t281 * t468;
t543 = t282 * t457 + t283 * t459;
t540 = t404 * t470 + t406 * t468;
t538 = -t622 + t656;
t537 = t184 * t633 + t185 * t634 - t329 * t240 - t241 * t330;
t536 = t674 * t457 + (t802 + t675) * t459;
t194 = -t260 + t638;
t515 = -t468 * t652 + t470 * t654;
t216 = t457 * t596 + t449 + t635;
t513 = -rSges(5,3) * t686 - t606 + t641;
t144 = t573 + t650;
t195 = t262 + t573;
t511 = (-t468 * t636 + t470 * t637) * t465;
t503 = Icges(4,5) * t465 - qJD(3) * t406;
t502 = Icges(4,6) * t465 - qJD(3) * t404;
t143 = t445 + (-t456 * t834 - t458 * t835) * t457 + t638;
t178 = t459 * t502 - t555 * t686;
t180 = -t407 * t686 + t459 * t503;
t485 = -qJD(3) * t175 - t178 * t468 + t180 * t470 + t277 * t465;
t179 = t457 * t502 + t465 * t530;
t181 = t457 * t503 + t465 * t533;
t484 = -qJD(3) * t174 - t179 * t468 + t181 * t470 + t276 * t465;
t369 = t555 * qJD(3);
t370 = t407 * qJD(3);
t483 = -qJD(3) * t540 - t369 * t468 + t370 * t470 + t402 * t465;
t481 = (t596 * t711 + (t157 * (-rSges(4,3) - pkin(7)) + t158 * t596) * t457) * t465;
t480 = (t807 * t457 - t808 * t459) * t752 + (t809 * t457 - t810 * t459) * t751 + (-t795 * t457 + t797 * t459) * t748 + ((t807 * t465 + t821) * t459 + (t808 * t465 + t820) * t457) * t747 + ((t809 * t465 + t819) * t459 + (t810 * t465 + t818) * t457) * t746 + (t797 * t457 + t795 * t459) * t745 + (t807 * t225 + t808 * t226 + t820 * t344 + t821 * t345 + t803 * t463 + t813 * t465) * t744 + (t809 * t225 + t810 * t226 + t818 * t344 + t819 * t345 + t804 * t463 + t812 * t465) * t743 + (t805 * t457 - t806 * t459) * t742 + (t829 * t456 + t828 * t458) * t741 + ((t805 * t465 + t815) * t459 + (t806 * t465 + t814) * t457) * t740 + t817 * t598 + t816 * t597;
t192 = -t459 * t539 + t693;
t186 = t192 * t465;
t63 = qJD(3) * t552 + t708;
t64 = qJD(3) * t551 + t186;
t88 = -qJD(3) * t545 + t179 * t470 + t181 * t468;
t89 = -qJD(3) * t544 + t178 * t470 + t180 * t468;
t93 = t457 * t758 + t483 * t459;
t94 = t483 * t457 - t459 * t758;
t476 = (t186 + ((t120 - t235 + (t277 + t703) * t459 + t665) * t459 + t664 * t457) * qJD(3)) * t592 + (t192 + t175) * t750 + (t191 + t174) * t749 + ((t104 + (t252 * t459 + t253 * t457) * t456 + t582 + t671) * t345 + (-t256 * t687 + t707 + t103 + (t252 * t457 - t253 * t459) * t456 + t670) * t344 + t824) * t745 + (t63 - t708 + ((t459 * t578 + t122 - t664) * t459 + (t457 * t578 + t121 + t581) * t457) * qJD(3)) * t595 + (t89 + t93) * t594 + (t64 + t88 + t94) * t593 + (-qJD(3) * t539 + t369 * t470 + t370 * t468 + t844 * t456 + t843 * t458) * t465 + (t803 + t805) * t752 + (t804 + t806) * t751 + ((t459 * t580 + t108 - t524 - t670) * t345 + (t580 * t457 - t203 - t229 + t672 + (t846 + t852) * t459 + t808) * t344 + t817 + t822) * t748 + (t813 + t814) * t747 + (t848 * t456 + t845 * t458 + Icges(3,3) + t540) * t463 + (t812 - t815 + t816) * t746;
t328 = t413 * t459;
t327 = t413 * t457;
t286 = t365 * t465 + t624;
t168 = t543 * qJD(3);
t39 = t485 * t457 - t459 * t763;
t38 = t484 * t457 - t459 * t762;
t37 = t457 * t763 + t485 * t459;
t36 = t457 * t762 + t484 * t459;
t20 = t160 * t345 + t162 * t344 + t225 * t260 - t226 * t262 + t537;
t13 = -qJDD(5) * t458 + t225 * t657 - t226 * t650 + t344 * t674 + t345 * t675 + t456 * t626 + t537;
t1 = [Icges(2,3) * qJDD(1) + t476 + (t784 * (t365 + t462) + t785 * (-t361 - t738) + (-t319 - t624 + t286) * t285) * m(3) + ((t414 ^ 2 + t416 ^ 2) * qJDD(1) + g(1) * t414 - g(2) * t416) * m(2) + (t82 * (t377 - t564 + t776) + t788 * (t144 + t462) + t791 * (t143 - t738) + (t82 + t771) * t83 + t781) * m(6) + (t98 * (t513 - t624) + (-t498 + t98 - t621 + t757) * t99 + t787 * (t195 + t462) + t790 * (t194 - t738) + t780) * m(5) + (t157 * (t605 - t624) + t481 + t786 * (t217 + t462) + t789 * (t216 - t738) + (-t621 + t157 - t521 + t768) * t158) * m(4); t476 + (t571 * t727 + t771 * t83 + (t523 + t641 + t776) * t82 + t788 * t144 + t791 * t143 + t781) * m(6) + (t607 * t725 + (-t522 + t757) * t99 + (t513 - t265 - t399) * t98 + t787 * t195 + t790 * t194 + t780) * m(5) + (t481 + t786 * t217 + t789 * t216 + (t603 + t768) * t158 + (t605 + t761) * t157) * m(4) + (-t285 * t319 - t286 * t694 + (t285 * t465 + t784) * t365 + (t286 * t465 - t785) * t361) * m(3); ((-t633 * t693 - t691) * t459 + (t511 + (t515 * t457 + (t692 - t755) * t459) * qJD(3)) * t457) * t592 + t64 * t597 + t63 * t598 + (-t174 * t459 + t175 * t457) * t742 + t551 * t750 + t552 * t749 + t480 + (t121 * t330 + t122 * t329 + t192 * t463 + t465 * t93 + (-t36 * t459 + t37 * t457) * qJD(3)) * t744 + ((t122 * t465 - t36) * t459 + (t121 * t465 + t37) * t457) * t594 + ((t468 * t637 + t470 * t636) * t465 + ((t457 * t652 - t459 * t653) * t470 + (t457 * t654 + t459 * t655) * t468) * qJD(3)) * t741 + ((-t634 * t692 + t691) * t457 + (t511 + (-t755 * t459 + (t693 + t515) * t457) * qJD(3)) * t459) * t595 + ((t120 * t465 - t38) * t459 + (t119 * t465 + t39) * t457) * t593 + ((t175 * t465 - t88) * t459 + (t174 * t465 + t89) * t457) * t740 + (t119 * t330 + t120 * t329 + t191 * t463 + t465 * t94 + (-t38 * t459 + t39 * t457) * qJD(3)) * t743 + (t13 * (t570 + t667) + t65 * (t536 + t610) + t565 * t811 + (t19 * t565 + t538 * t83 + t608 * t728) * t457 - (-t83 * t612 + (-t470 * t560 + t591 * t65) * qJD(3)) * pkin(3) - g(1) * (-pkin(3) * t679 + t639) - g(2) * (-pkin(3) * t685 + t640) - g(3) * (t461 + t836) + (t459 * t538 + t793) * t82 + t796) * m(6) + (t20 * (t666 + t667) + t92 * (t610 + t611) + (t519 * t782 + t563 * t98) * t459 + (t35 * t519 + t99 * t563 + (t98 * t360 + t662 * t92) * t465) * t457 - (-t99 * t612 + (t470 * t559 + t591 * t92) * qJD(3)) * pkin(3) - g(3) * (t364 + t461) - t769 * t519 + t792) * m(5) + (-(t157 * t327 - t158 * t328) * t465 - (t168 * (-t327 * t457 - t328 * t459) + t550 * t415) * qJD(3) + (t282 * t329 - t283 * t330 + (t182 * t459 + t183 * t457) * qJD(3)) * t543 + t168 * ((t182 + t258) * t459 + (-t283 * t465 + t183) * t457) + t550 * t373 + ((-t158 * t465 - t84) * t459 + (t157 * t465 - t85) * t457) * t413 + g(1) * t328 + g(2) * t327 - g(3) * t415) * m(4); t480 + (t13 * t570 + t65 * t536 + (-t650 * t728 + t656 * t83) * t457 - g(1) * t639 - g(2) * t640 - g(3) * t836 + (-t19 * t457 - t811) * t643 + (t656 * t459 + t793) * t82 + t796) * m(6) + (t20 * t666 + t92 * (-t262 * t686 + t611) + t559 * t317 + (-t782 * t459 + (-t35 + t725) * t457) * t360 + g(1) * t305 + g(2) * t301 - g(3) * t364 + t792) * m(5); ((-t344 * t83 - t345 * t82 + t464 * t560 + g(3) - t13) * t458 + (t811 + (t19 - t727) * t457 - (t729 - t730) * t465 + (-t344 * t457 - t345 * t459 + t464) * t65 - t769) * t456) * m(6);];
tau = t1;
