% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:51
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:51:18
% EndTime: 2019-12-31 21:51:26
% DurationCPUTime: 5.13s
% Computational Cost: add. (6968->435), mult. (13480->475), div. (0->0), fcn. (13172->6), ass. (0->311)
t302 = sin(qJ(3));
t479 = cos(qJ(4));
t492 = -pkin(8) - pkin(7);
t368 = t492 * t479;
t265 = t302 * t368;
t304 = cos(qJ(3));
t301 = sin(qJ(4));
t397 = t301 * t492;
t371 = t304 * t397;
t212 = t265 + t371;
t486 = -t212 / 0.2e1;
t392 = t479 * t304;
t357 = t492 * t392;
t372 = t302 * t397;
t213 = -t357 + t372;
t516 = -t213 / 0.2e1;
t445 = t301 * t304;
t263 = t302 * t479 + t445;
t260 = t263 ^ 2;
t323 = -t301 * t302 + t392;
t154 = t323 ^ 2 - t260;
t297 = qJD(3) + qJD(4);
t515 = t297 * t154;
t508 = t297 * t263;
t514 = t323 * t508;
t407 = qJD(1) + qJD(2);
t513 = t407 * t154;
t303 = sin(qJ(2));
t475 = t303 * pkin(1);
t394 = pkin(7) + t475;
t381 = pkin(8) + t394;
t319 = t381 * t479;
t245 = t304 * t319;
t343 = t301 * t381;
t329 = t302 * t343;
t178 = t245 - t329;
t244 = t302 * t319;
t342 = t381 * t304;
t327 = t301 * t342;
t179 = t244 + t327;
t328 = t304 * t343;
t180 = -t244 - t328;
t316 = t479 * t342;
t181 = t316 - t329;
t312 = (t178 - t181) * t263 - (-t179 - t180) * t323;
t305 = cos(qJ(2));
t474 = t305 * pkin(1);
t229 = t263 * t474;
t230 = t323 * t474;
t344 = t229 * t263 + t230 * t323;
t497 = t344 * qJD(2);
t512 = qJD(3) * t312 + t497;
t498 = t344 * qJD(1);
t373 = t492 * t445;
t211 = -t265 - t373;
t266 = t304 * t368;
t210 = -t266 + t372;
t487 = t210 / 0.2e1;
t488 = -t180 / 0.2e1;
t489 = t178 / 0.2e1;
t306 = (t516 - t181 / 0.2e1 + t487 + t489) * t263 - (t486 + t488 - t211 / 0.2e1 - t179 / 0.2e1) * t323;
t500 = t306 * qJD(3);
t511 = -t498 + t500;
t290 = -pkin(2) - t474;
t502 = t290 / 0.2e1 - pkin(2) / 0.2e1;
t510 = t497 + t498 + t500;
t405 = t479 * pkin(3);
t289 = -t405 - pkin(4);
t477 = t301 * pkin(3);
t287 = qJ(5) + t477;
t483 = -t287 / 0.2e1;
t53 = (t483 + t477 / 0.2e1 + qJ(5) / 0.2e1) * t263 - (-t405 / 0.2e1 - t289 / 0.2e1 - pkin(4) / 0.2e1) * t323;
t509 = t407 * t53;
t291 = -pkin(3) * t304 - pkin(2);
t453 = t263 * qJ(5);
t478 = t323 * pkin(4);
t362 = -t453 - t478;
t182 = t291 + t362;
t163 = t182 - t474;
t386 = t182 / 0.2e1 + t163 / 0.2e1;
t507 = t386 * t263;
t299 = t302 ^ 2;
t300 = t304 ^ 2;
t285 = t300 - t299;
t504 = t407 * t285;
t503 = t407 * t323 * t263;
t310 = t316 / 0.2e1;
t172 = t310 - t245 / 0.2e1;
t326 = -t357 / 0.2e1;
t209 = t266 / 0.2e1 + t326;
t431 = qJD(1) * t172 + qJD(2) * t209;
t311 = (t210 - t213) * t263 - (-t211 - t212) * t323;
t499 = t311 * qJD(3);
t458 = t182 * t263;
t464 = t163 * t263;
t496 = -t458 / 0.2e1 - t464 / 0.2e1;
t309 = -t179 * t487 + t180 * t516 + t181 * t486 - t211 * t489;
t495 = -qJD(1) * t306 - qJD(2) * t311;
t494 = -qJD(1) * t312 - qJD(2) * t306;
t485 = -t229 / 0.2e1;
t484 = t230 / 0.2e1;
t482 = t289 / 0.2e1;
t480 = t301 / 0.2e1;
t476 = t302 * pkin(3);
t473 = pkin(1) * qJD(1);
t472 = pkin(1) * qJD(2);
t471 = pkin(2) * qJD(2);
t470 = pkin(3) * qJD(4);
t469 = qJD(3) * pkin(3);
t194 = pkin(4) * t263 - qJ(5) * t323;
t184 = t194 + t476;
t466 = t163 * t184;
t20 = t163 * t194;
t465 = t163 * t323;
t459 = t182 * t323;
t457 = t184 * t182;
t347 = t178 * t179 + t180 * t181;
t19 = t347 + t466;
t456 = t19 * qJD(1);
t32 = t194 * t182;
t455 = t20 * qJD(1);
t452 = t263 * t301;
t278 = t291 - t474;
t451 = t278 * t323;
t450 = t278 * t263;
t449 = t287 * t263;
t448 = t289 * t323;
t447 = t291 * t323;
t446 = t291 * t263;
t37 = t278 * t476 + t347;
t444 = t37 * qJD(1);
t346 = t179 * t229 + t181 * t230;
t42 = t163 * t475 + t346;
t443 = t42 * qJD(1);
t44 = t278 * t475 + t346;
t442 = t44 * qJD(1);
t129 = t184 * t323;
t55 = -t129 + t464;
t441 = t55 * qJD(1);
t130 = t184 * t263;
t56 = -t130 - t465;
t440 = t56 * qJD(1);
t134 = t194 * t323;
t59 = -t134 + t464;
t439 = t59 * qJD(1);
t135 = t194 * t263;
t60 = -t135 - t465;
t438 = t60 * qJD(1);
t113 = t310 - t329 + t245 / 0.2e1;
t435 = -qJD(3) * t178 - qJD(4) * t113;
t434 = -qJD(3) * t113 - qJD(4) * t181;
t156 = -t266 / 0.2e1 + t326 + t372;
t433 = -qJD(3) * t210 - qJD(4) * t156;
t432 = -qJD(3) * t156 - qJD(4) * t213;
t393 = t479 * t323;
t429 = (-t393 - t452) * t469;
t404 = t303 * t472;
t240 = t323 * t404;
t402 = t303 * t473;
t241 = t323 * t402;
t428 = -t240 - t241;
t254 = t260 * qJD(5);
t378 = t263 * t404;
t427 = t254 - t378;
t380 = t479 * t474;
t360 = t380 / 0.2e1;
t400 = -t474 / 0.2e1;
t375 = t302 * t400;
t426 = t301 * t375 + t304 * t360;
t376 = t474 * t480;
t425 = t302 * t360 + t304 * t376;
t361 = -t380 / 0.2e1;
t374 = t304 * t400;
t424 = t301 * t374 + t302 * t361;
t423 = t302 * t376 + t304 * t361;
t422 = t299 + t300;
t421 = qJD(1) * t278;
t420 = qJD(1) * t290;
t419 = qJD(2) * t291;
t418 = qJD(4) * t278;
t417 = qJD(4) * t291;
t416 = qJD(5) * t263;
t246 = t323 * t476;
t142 = -t246 + t450;
t415 = t142 * qJD(1);
t247 = t263 * t476;
t143 = t247 + t451;
t414 = t143 * qJD(1);
t159 = t172 * qJD(3);
t176 = t394 * t422 * t474 + t290 * t475;
t412 = t176 * qJD(1);
t197 = t209 * qJD(3);
t383 = t422 * t305;
t255 = pkin(1) * t383;
t410 = t255 * qJD(1);
t253 = t323 * qJD(5);
t409 = t302 * qJD(3);
t296 = t304 * qJD(3);
t295 = qJD(4) * t405;
t408 = t295 + qJD(5);
t406 = t479 / 0.2e1;
t403 = t301 * t470;
t52 = -t449 / 0.2e1 + t448 / 0.2e1 - t453 / 0.2e1 - t478 / 0.2e1 + (t393 / 0.2e1 + t452 / 0.2e1) * pkin(3);
t399 = t52 * qJD(4) + (t448 - t449) * qJD(3) + t253;
t398 = qJD(3) * t52 + qJD(4) * t362 + t253;
t391 = qJD(1) * t464;
t390 = t323 * t421;
t389 = t263 * t421;
t388 = t302 * t420;
t387 = t304 * t420;
t385 = t291 / 0.2e1 + t278 / 0.2e1;
t384 = pkin(1) * t407;
t382 = t211 * t229 + t213 * t230;
t379 = t263 * t402;
t377 = t302 * t402;
t370 = -t465 / 0.2e1 - t459 / 0.2e1 + t426;
t369 = t424 - t496;
t87 = t447 / 0.2e1 + t451 / 0.2e1 + t423;
t88 = t446 / 0.2e1 + t450 / 0.2e1 + t424;
t367 = t303 * t384;
t366 = qJD(3) * t394;
t324 = t229 * t482 + t287 * t484;
t1 = -t184 * t386 + t309 + t324;
t345 = t210 * t211 + t212 * t213;
t27 = t345 + t457;
t359 = -qJD(1) * t1 + qJD(2) * t27;
t332 = pkin(4) * t485 + qJ(5) * t484;
t3 = -t194 * t386 + t332;
t358 = -t3 * qJD(1) + t32 * qJD(2);
t315 = t230 * t480 + t479 * t485;
t13 = (-t302 * t385 + t315) * pkin(3) + t309;
t47 = t291 * t476 + t345;
t352 = -t13 * qJD(1) + t47 * qJD(2);
t317 = t424 - t507;
t28 = t129 + t317;
t57 = -t129 + t458;
t351 = qJD(1) * t28 - qJD(2) * t57;
t318 = t323 * t386 + t426;
t29 = t130 + t318;
t58 = -t130 - t459;
t350 = qJD(1) * t29 - qJD(2) * t58;
t33 = t134 + t317;
t61 = -t134 + t458;
t349 = qJD(1) * t33 - qJD(2) * t61;
t34 = t135 + t318;
t62 = -t135 - t459;
t348 = qJD(1) * t34 - qJD(2) * t62;
t173 = -t246 + t446;
t85 = -t263 * t385 + t424;
t70 = t246 + t85;
t341 = qJD(1) * t70 - qJD(2) * t173;
t174 = t247 + t447;
t86 = -t323 * t385 + t423;
t71 = -t247 + t86;
t340 = qJD(1) * t71 - qJD(2) * t174;
t112 = t327 / 0.2e1 + t244 + t328 / 0.2e1;
t339 = -qJD(3) * t112 - qJD(4) * t179;
t338 = -qJD(3) * t180 + qJD(4) * t112;
t155 = -t265 - t371 / 0.2e1 - t373 / 0.2e1;
t337 = -qJD(3) * t155 - qJD(4) * t211;
t336 = -qJD(3) * t212 + qJD(4) * t155;
t335 = t400 - t502;
t334 = pkin(4) * t489 + qJ(5) * t488;
t333 = pkin(4) * t487 + qJ(5) * t486;
t218 = t335 * t302;
t331 = qJD(1) * t218 + t302 * t471;
t219 = t335 * t304;
t330 = qJD(1) * t219 + t304 * t471;
t45 = t425 + t507;
t322 = qJD(1) * t45 + qJD(2) * t458;
t321 = qJD(1) * t86 - t323 * t419;
t320 = qJD(1) * t85 - t263 * t419;
t308 = (t179 * t480 + t181 * t406) * pkin(3) + t179 * t483 + t181 * t482;
t18 = t308 + t334;
t224 = (t287 * t479 + t289 * t301) * pkin(3);
t307 = (t211 * t480 + t213 * t406) * pkin(3) + t211 * t483 + t213 * t482;
t26 = t307 + t333;
t314 = t18 * qJD(1) + t26 * qJD(2) + t224 * qJD(3);
t298 = qJ(5) * qJD(5);
t294 = qJD(3) * t405;
t286 = t302 * t296;
t284 = t297 * qJ(5);
t283 = t287 * qJD(5);
t282 = t302 * t404;
t279 = t285 * qJD(3);
t252 = t407 * t304 * t302;
t248 = t255 * qJD(2);
t221 = t304 * t502 + t374;
t220 = t302 * t502 + t375;
t207 = t263 * t253;
t199 = t209 * qJD(4);
t192 = t407 * t260;
t190 = t297 * t323;
t161 = t172 * qJD(4);
t77 = t301 * t469 + t431;
t75 = -t297 * t477 - t431;
t73 = t247 + t87;
t72 = -t246 + t88;
t51 = t53 * qJD(3);
t50 = t53 * qJD(4);
t46 = t425 + t496;
t36 = -t135 + t370;
t35 = -t134 + t369;
t31 = -t130 + t370;
t30 = -t129 + t369;
t25 = t307 - t333;
t17 = t308 - t334;
t14 = t315 * pkin(3) - t309 + (t278 + t291) * t476 / 0.2e1;
t4 = t32 / 0.2e1 + t20 / 0.2e1 + t332;
t2 = t457 / 0.2e1 + t466 / 0.2e1 - t309 + t324;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t404, -t305 * t472, 0, 0, t286, t279, 0, -t286, 0, 0, t290 * t409 - t304 * t404, t290 * t296 + t282, t248, t176 * qJD(2), t514, t515, 0, -t514, 0, 0, qJD(3) * t142 + t263 * t418 - t240, qJD(3) * t143 + t323 * t418 + t378, t512, qJD(2) * t44 + qJD(3) * t37, t514, 0, -t515, 0, 0, -t514, qJD(3) * t55 + qJD(4) * t59 + t207 - t240, t512, qJD(3) * t56 + qJD(4) * t60 + t427, qJD(2) * t42 + qJD(3) * t19 + qJD(4) * t20 - t163 * t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367, -t305 * t384, 0, 0, t286, t279, 0, -t286, 0, 0, t220 * qJD(3) - t304 * t367, qJD(3) * t221 + t282 + t377, t248 + t410, t412 + (-pkin(2) * t303 + pkin(7) * t383) * t472, t514, t515, 0, -t514, 0, 0, qJD(3) * t72 + qJD(4) * t88 + t428, qJD(3) * t73 + qJD(4) * t87 + t378 + t379, t510, t442 + (t291 * t475 + t382) * qJD(2) + t14 * qJD(3), t514, 0, -t515, 0, 0, -t514, qJD(3) * t30 + qJD(4) * t35 + t207 + t428, t510, qJD(3) * t31 + qJD(4) * t36 - t379 + t427, t443 + (t182 * t475 + t382) * qJD(2) + t2 * qJD(3) + t4 * qJD(4) + t46 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t504, t296, -t252, -t409, 0, qJD(2) * t220 - t304 * t366 + t388, qJD(2) * t221 + t302 * t366 + t387, 0, 0, t503, t513, t190, -t503, -t508, 0, qJD(2) * t72 + t415 + t435, qJD(2) * t73 + t338 + t414, -t494 + t429, t444 + t14 * qJD(2) + (-t178 * t479 + t180 * t301) * t469, t503, t190, -t513, 0, t508, -t503, qJD(2) * t30 + t435 + t441, -t494 + t399, qJD(2) * t31 - t338 + t440, t456 + t2 * qJD(2) + (t178 * t289 + t180 * t287) * qJD(3) + t17 * qJD(4) + t113 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, t513, t190, -t503, -t508, 0, qJD(2) * t88 + t389 + t434, qJD(2) * t87 - t339 + t390, 0, 0, t503, t190, -t513, 0, t508, -t503, qJD(2) * t35 + t434 + t439, t398, qJD(2) * t36 + t339 + t438, t455 + t4 * qJD(2) + t17 * qJD(3) + (-pkin(4) * t181 - qJ(5) * t179) * qJD(4) + t181 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, t190, t192, qJD(2) * t46 - t391 - t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402, t305 * t473, 0, 0, t286, t279, 0, -t286, 0, 0, -qJD(3) * t218 + t304 * t402, -qJD(3) * t219 - t377, -t410, -t412, t514, t515, 0, -t514, 0, 0, -qJD(3) * t70 - qJD(4) * t85 + t241, -qJD(3) * t71 - qJD(4) * t86 - t379, t511, -qJD(3) * t13 - t442, t514, 0, -t515, 0, 0, -t514, -qJD(3) * t28 - qJD(4) * t33 + t207 + t241, t511, -qJD(3) * t29 - qJD(4) * t34 + t254 + t379, -qJD(3) * t1 - qJD(4) * t3 - qJD(5) * t45 - t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, t279, 0, -t286, 0, 0, -pkin(2) * t409, -pkin(2) * t296, 0, 0, t514, t515, 0, -t514, 0, 0, qJD(3) * t173 + t263 * t417, qJD(3) * t174 + t323 * t417, t499, t47 * qJD(3), t514, 0, -t515, 0, 0, -t514, qJD(3) * t57 + qJD(4) * t61 + t207, t499, qJD(3) * t58 + qJD(4) * t62 + t254, qJD(3) * t27 + qJD(4) * t32 - t182 * t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t504, t296, -t252, -t409, 0, -pkin(7) * t296 - t331, pkin(7) * t409 - t330, 0, 0, t503, t513, t190, -t503, -t508, 0, -t341 + t433, t336 - t340, -t495 + t429, (-t210 * t479 + t212 * t301) * t469 + t352, t503, t190, -t513, 0, t508, -t503, -t351 + t433, -t495 + t399, -t336 - t350, (t210 * t289 + t212 * t287) * qJD(3) + t25 * qJD(4) + t156 * qJD(5) + t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, t513, t190, -t503, -t508, 0, -t320 + t432, -t321 - t337, 0, 0, t503, t190, -t513, 0, t508, -t503, -t349 + t432, t398, t337 - t348, t25 * qJD(3) + (-pkin(4) * t213 - qJ(5) * t211) * qJD(4) + t213 * qJD(5) + t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, t190, t192, -t322 - t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t252, -t504, 0, t252, 0, 0, qJD(2) * t218 - t388, qJD(2) * t219 - t387, 0, 0, -t503, -t513, 0, t503, 0, 0, qJD(2) * t70 - t161 - t415, qJD(2) * t71 - t414, t494, qJD(2) * t13 - t444, -t503, 0, t513, 0, 0, t503, qJD(2) * t28 - t161 - t441, t494 + t50, qJD(2) * t29 - t440, qJD(2) * t1 + qJD(4) * t18 + qJD(5) * t172 - t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t252, -t504, 0, t252, 0, 0, t331, t330, 0, 0, -t503, -t513, 0, t503, 0, 0, -t199 + t341, t340, t495, -t352, -t503, 0, t513, 0, 0, t503, -t199 + t351, t495 + t50, t350, qJD(4) * t26 + qJD(5) * t209 - t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t403, -t295, 0, 0, 0, 0, 0, 0, 0, 0, -t403, 0, t408, qJD(4) * t224 + t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, -t295 - t294, 0, 0, 0, 0, 0, 0, 0, 0, t75, t509, t294 + t408, (-pkin(4) * t301 + qJ(5) * t479) * t470 + t283 + t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, t287 * t297 + t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t503, -t513, 0, t503, 0, 0, qJD(2) * t85 + t159 - t389, qJD(2) * t86 - t390, 0, 0, -t503, 0, t513, 0, 0, t503, qJD(2) * t33 + t159 - t439, -t51, qJD(2) * t34 - t438, qJD(2) * t3 - qJD(3) * t18 - t455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t503, -t513, 0, t503, 0, 0, t197 + t320, t321, 0, 0, -t503, 0, t513, 0, 0, t503, t197 + t349, -t51, t348, -qJD(3) * t26 - t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, t294, 0, 0, 0, 0, 0, 0, 0, 0, t77, -t509, qJD(5) - t294, t298 - t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t503, 0, -t192, qJD(2) * t45 - t159 + t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t503, 0, -t192, t322 - t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t297, -qJ(5) * qJD(4) - qJD(3) * t287 - t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t297, -t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
