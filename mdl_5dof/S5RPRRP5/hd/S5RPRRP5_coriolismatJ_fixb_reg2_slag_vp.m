% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:41
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP5_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP5_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP5_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP5_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:41:02
% EndTime: 2019-12-31 18:41:04
% DurationCPUTime: 1.26s
% Computational Cost: add. (955->149), mult. (1833->145), div. (0->0), fcn. (1452->6), ass. (0->110)
t128 = cos(qJ(3));
t132 = sin(pkin(8)) * pkin(1);
t77 = sin(qJ(3));
t88 = cos(pkin(8)) * pkin(1) + pkin(2);
t50 = -t128 * t88 + t132 * t77;
t76 = sin(qJ(4));
t78 = cos(qJ(4));
t87 = -pkin(4) * t78 - qJ(5) * t76;
t58 = -pkin(3) + t87;
t29 = t50 + t58;
t26 = t29 * t76;
t57 = t58 * t76;
t118 = t26 / 0.2e1 + t57 / 0.2e1;
t112 = t78 * qJ(5);
t129 = t76 * pkin(4);
t60 = t112 - t129;
t121 = t60 * t78;
t135 = -t118 - t121;
t73 = t76 ^ 2;
t74 = t78 ^ 2;
t21 = (-t73 - t74) * t50;
t48 = -pkin(3) + t50;
t99 = pkin(3) / 0.2e1 - t48 / 0.2e1;
t134 = t99 * t76;
t102 = qJD(1) + qJD(3);
t64 = t74 - t73;
t133 = t102 * t64;
t131 = pkin(3) * t78;
t127 = t29 * t60;
t126 = t29 * t78;
t125 = t48 * t78;
t124 = t58 * t78;
t123 = t60 * t58;
t122 = t60 * t76;
t120 = t76 * t50;
t119 = t78 * t50;
t116 = pkin(7) * t21;
t51 = t128 * t132 + t77 * t88;
t47 = t51 * qJD(3);
t38 = t76 * t47;
t69 = t73 * qJD(5);
t115 = t69 - t38;
t49 = pkin(7) + t51;
t90 = t49 * t21;
t1 = t29 * t51 + t90;
t114 = t1 * qJD(1);
t2 = t48 * t51 + t90;
t113 = t2 * qJD(1);
t111 = qJD(1) * t76;
t110 = qJD(3) * t76;
t19 = -t122 + t126;
t109 = t19 * qJD(1);
t20 = -t26 - t121;
t108 = t20 * qJD(1);
t18 = t21 * qJD(1);
t107 = t50 * qJD(1);
t106 = t51 * qJD(1);
t105 = t64 * qJD(4);
t70 = t76 * qJD(4);
t71 = t78 * qJD(4);
t104 = t78 * qJD(5);
t103 = qJD(4) * qJ(5);
t101 = pkin(7) * t70;
t100 = pkin(7) * t71;
t98 = qJD(1) * t127;
t97 = t29 * t111;
t96 = t48 * t111;
t95 = qJD(1) * t125;
t94 = t78 * t47;
t93 = t49 * t70;
t92 = t49 * t71;
t91 = t58 / 0.2e1 + t29 / 0.2e1;
t65 = t76 * t104;
t89 = t65 - t94;
t27 = -t122 + t124;
t36 = -t119 / 0.2e1;
t7 = t78 * t91 - t122 + t36;
t86 = qJD(1) * t7 + qJD(3) * t27;
t28 = -t57 - t121;
t35 = t120 / 0.2e1;
t6 = t35 + t135;
t85 = qJD(1) * t6 + qJD(3) * t28;
t84 = qJD(4) * t60 + qJD(5) * t76;
t13 = t35 + t134;
t83 = pkin(3) * t110 + qJD(1) * t13;
t37 = t119 / 0.2e1;
t14 = t78 * t99 + t37;
t82 = qJD(1) * t14 + qJD(3) * t131;
t79 = (-t112 / 0.2e1 + t129 / 0.2e1) * t50;
t3 = t60 * t91 + t79;
t81 = t3 * qJD(1) + qJD(3) * t123;
t34 = -t120 / 0.2e1;
t11 = t34 + t118;
t80 = qJD(1) * t11 + t110 * t58;
t52 = qJD(4) * t87 + t104;
t66 = t76 * t71;
t59 = t102 * t73;
t53 = t102 * t78 * t76;
t46 = t50 * qJD(3);
t40 = t78 * t106;
t39 = t76 * t106;
t17 = t21 * qJD(3);
t16 = -t131 / 0.2e1 + t125 / 0.2e1 + t37;
t15 = t35 - t134;
t12 = t34 - t118;
t9 = t35 - t135;
t8 = -t126 / 0.2e1 + t122 + t36 - t124 / 0.2e1;
t5 = t17 + t18;
t4 = -t123 / 0.2e1 - t127 / 0.2e1 + t79;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, t46, 0, 0, t66, t105, 0, -t66, 0, 0, t48 * t70 - t94, t48 * t71 + t38, t17, t2 * qJD(3), t66, 0, -t105, 0, 0, -t66, -qJD(4) * t20 + t89, t17, -qJD(4) * t19 + t115, t1 * qJD(3) - t29 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47 - t106, t46 + t107, 0, 0, t66, t105, 0, -t66, 0, 0, qJD(4) * t15 - t40 - t94, qJD(4) * t16 + t38 + t39, t5, t113 + (-pkin(3) * t51 + t116) * qJD(3), t66, 0, -t105, 0, 0, -t66, qJD(4) * t9 - t40 + t89, t5, qJD(4) * t8 + t115 - t39, t114 + (t51 * t58 + t116) * qJD(3) + t4 * qJD(4) + t12 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, t133, t71, -t53, -t70, 0, qJD(3) * t15 - t92 + t96, qJD(3) * t16 + t93 + t95, 0, 0, t53, t71, -t133, 0, t70, -t53, qJD(3) * t9 - t108 - t92, t52, qJD(3) * t8 - t109 - t93, t4 * qJD(3) + t49 * t52 - t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, t71, t59, qJD(3) * t12 + t92 - t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, -t71, 0, 0, 0, 0, 0, 0, 0, 0, -t70, 0, t71, t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, -t107, 0, 0, t66, t105, 0, -t66, 0, 0, -qJD(4) * t13 + t40, -qJD(4) * t14 - t39, -t18, -t113, t66, 0, -t105, 0, 0, -t66, -qJD(4) * t6 + t40 + t65, -t18, -qJD(4) * t7 + t39 + t69, -qJD(4) * t3 - qJD(5) * t11 - t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, t105, 0, -t66, 0, 0, -pkin(3) * t70, -pkin(3) * t71, 0, 0, t66, 0, -t105, 0, 0, -t66, -qJD(4) * t28 + t65, 0, -qJD(4) * t27 + t69, -t84 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, t133, t71, -t53, -t70, 0, -t83 - t100, -t82 + t101, 0, 0, t53, t71, -t133, 0, t70, -t53, -t85 - t100, t52, -t86 - t101, pkin(7) * t52 - t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, t71, t59, -t80 + t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, -t133, 0, t53, 0, 0, qJD(3) * t13 - t96, qJD(3) * t14 - t95, 0, 0, -t53, 0, t133, 0, 0, t53, qJD(3) * t6 + t108, 0, qJD(3) * t7 + t109, qJD(3) * t3 + t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, -t133, 0, t53, 0, 0, t83, t82, 0, 0, -t53, 0, t133, 0, 0, t53, t85, 0, t86, t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, 0, -t59, qJD(3) * t11 + t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, 0, -t59, t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4), -t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t10;
