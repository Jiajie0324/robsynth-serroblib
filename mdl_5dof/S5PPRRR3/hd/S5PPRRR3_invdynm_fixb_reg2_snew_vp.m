% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PPRRR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d3,d4,d5,theta1,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:17
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PPRRR3_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PPRRR3_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PPRRR3_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PPRRR3_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PPRRR3_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PPRRR3_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:17:15
% EndTime: 2019-12-05 15:17:24
% DurationCPUTime: 9.41s
% Computational Cost: add. (36743->550), mult. (69296->775), div. (0->0), fcn. (49785->10), ass. (0->371)
t822 = sin(qJ(5));
t825 = cos(qJ(5));
t826 = cos(qJ(4));
t823 = sin(qJ(4));
t875 = qJD(3) * t823;
t769 = -t825 * t826 * qJD(3) + t822 * t875;
t771 = (t822 * t826 + t823 * t825) * qJD(3);
t735 = t771 * t769;
t813 = qJDD(4) + qJDD(5);
t913 = -t735 + t813;
t917 = t822 * t913;
t916 = t825 * t913;
t872 = qJD(3) * qJD(4);
t861 = t823 * t872;
t867 = t826 * qJDD(3);
t843 = 0.2e1 * t861 - t867;
t743 = t843 * t826;
t818 = sin(pkin(8));
t876 = g(3) - qJDD(1);
t915 = t818 * t876;
t820 = cos(pkin(8));
t914 = t820 * t876;
t792 = t820 * g(1) + t818 * g(2);
t817 = sin(pkin(9));
t819 = cos(pkin(9));
t761 = -t817 * t792 + t819 * t876;
t741 = t819 * t761;
t762 = -t819 * t792 - t817 * t876;
t700 = -t817 * t762 + t741;
t806 = t826 * t872;
t869 = t823 * qJDD(3);
t783 = t806 + t869;
t844 = t861 - t867;
t704 = -t769 * qJD(5) + t825 * t783 - t822 * t844;
t814 = qJD(4) + qJD(5);
t766 = t814 * t769;
t912 = -t766 + t704;
t791 = t818 * g(1) - t820 * g(2);
t785 = -qJDD(2) + t791;
t824 = sin(qJ(3));
t827 = cos(qJ(3));
t717 = t827 * t762 - t824 * t785;
t909 = qJD(3) ^ 2;
t709 = -t909 * pkin(3) + qJDD(3) * pkin(6) + t717;
t671 = t823 * t709 - t826 * t761;
t672 = t826 * t709 + t823 * t761;
t621 = t823 * t671 + t826 * t672;
t716 = t824 * t762 + t827 * t785;
t708 = -qJDD(3) * pkin(3) - t909 * pkin(6) + t716;
t606 = t827 * t621 + t824 * t708;
t620 = t826 * t671 - t823 * t672;
t911 = (pkin(3) * t827 + pkin(6) * t824 + pkin(2)) * t620 + pkin(5) * t606;
t856 = t822 * t783 + t825 * t844;
t682 = (qJD(5) - t814) * t771 + t856;
t767 = t769 ^ 2;
t768 = t771 ^ 2;
t812 = t814 ^ 2;
t910 = t826 ^ 2;
t802 = t823 * t909 * t826;
t793 = qJDD(4) + t802;
t644 = (-t783 + t806) * pkin(7) + t793 * pkin(4) - t671;
t795 = qJD(4) * pkin(4) - pkin(7) * t875;
t810 = t910 * t909;
t645 = -pkin(4) * t810 - t844 * pkin(7) - qJD(4) * t795 + t672;
t594 = -t825 * t644 + t822 * t645;
t595 = t822 * t644 + t825 * t645;
t553 = -t825 * t594 + t822 * t595;
t908 = pkin(4) * t553;
t686 = t766 + t704;
t624 = -t682 * t822 - t825 * t686;
t907 = pkin(4) * t624;
t905 = t771 * t814;
t904 = t814 * t822;
t903 = t814 * t825;
t902 = t817 * t761;
t772 = t817 * t785;
t900 = t818 * t785;
t655 = t827 * t716 - t824 * t717;
t899 = t819 * t655;
t815 = t823 ^ 2;
t865 = t815 + t910;
t781 = t865 * t872;
t760 = t824 * qJDD(4) + t827 * t781;
t898 = t819 * t760;
t773 = t819 * t785;
t868 = t824 * qJDD(3);
t787 = t827 * t909 + t868;
t897 = t819 * t787;
t866 = t827 * qJDD(3);
t788 = -t824 * t909 + t866;
t896 = t819 * t788;
t895 = t819 * t820;
t894 = t820 * t785;
t893 = t820 * t787;
t892 = t820 * t788;
t659 = t844 * pkin(4) - pkin(7) * t810 + t795 * t875 + t708;
t891 = t822 * t659;
t730 = t735 + t813;
t890 = t822 * t730;
t889 = t823 * t553;
t888 = t823 * t708;
t887 = t823 * t793;
t794 = qJDD(4) - t802;
t886 = t823 * t794;
t885 = t824 * t620;
t884 = t824 * t761;
t883 = t825 * t659;
t882 = t825 * t730;
t881 = t826 * t553;
t880 = t826 * t708;
t879 = t826 * t793;
t878 = t826 * t794;
t877 = t827 * t761;
t874 = t815 * t909;
t871 = t817 * qJDD(3);
t870 = t819 * qJDD(3);
t864 = t824 * t735;
t863 = t827 * t735;
t862 = pkin(1) * t817 + pkin(5);
t786 = t865 * qJDD(3);
t789 = t810 + t874;
t738 = t824 * t786 + t827 * t789;
t839 = pkin(3) * t789 + pkin(6) * t786 + t621;
t604 = -pkin(2) * t738 - t839;
t739 = t827 * t786 - t824 * t789;
t860 = qJ(2) * t739 + t604;
t696 = -pkin(2) * t788 + t716;
t859 = qJ(2) * t787 - t696;
t697 = pkin(2) * t787 + t717;
t858 = qJ(2) * t788 - t697;
t554 = t822 * t594 + t825 * t595;
t857 = t819 * t762 + t902;
t855 = -t818 * t791 - t820 * t792;
t854 = t824 * t802;
t853 = t827 * t802;
t850 = t824 * t716 + t827 * t717;
t852 = -pkin(2) * t761 + pkin(5) * t850;
t851 = -pkin(3) * t708 + pkin(6) * t621;
t719 = pkin(5) * t787 + t877;
t718 = -pkin(5) * t788 + t884;
t849 = t820 * t791 - t818 * t792;
t720 = -t812 - t767;
t657 = t822 * t720 + t916;
t847 = pkin(4) * t657 - t594;
t846 = t818 * t787 + t819 * t892;
t845 = t818 * t896 - t893;
t828 = qJD(4) ^ 2;
t799 = -t810 - t828;
t750 = t826 * t799 - t887;
t842 = -pkin(3) * t843 + pkin(6) * t750 - t880;
t797 = -t828 - t874;
t752 = -t823 * t797 - t878;
t782 = 0.2e1 * t806 + t869;
t841 = -pkin(3) * t782 + pkin(6) * t752 + t888;
t753 = -t768 - t812;
t687 = t825 * t753 - t890;
t840 = pkin(4) * t687 - t595;
t533 = t823 * t554 + t881;
t545 = -pkin(4) * t659 + pkin(7) * t554;
t521 = -pkin(6) * t533 - pkin(7) * t881 - t823 * t545;
t526 = -pkin(3) * t533 - t908;
t534 = t826 * t554 - t889;
t532 = t827 * t534 + t824 * t659;
t838 = -pkin(2) * t533 + pkin(5) * t532 + t824 * t521 + t827 * t526;
t626 = -t682 * t825 + t822 * t686;
t707 = -t767 - t768;
t539 = -pkin(4) * t707 + pkin(7) * t626 + t554;
t542 = -pkin(7) * t624 - t553;
t582 = t826 * t624 + t823 * t626;
t525 = -pkin(6) * t582 - t823 * t539 + t826 * t542;
t555 = -pkin(3) * t582 - t907;
t584 = -t823 * t624 + t826 * t626;
t575 = t827 * t584 + t824 * t707;
t837 = -pkin(2) * t582 + pkin(5) * t575 + t824 * t525 + t827 * t555;
t658 = t825 * t720 - t917;
t681 = (qJD(5) + t814) * t771 + t856;
t587 = -pkin(4) * t681 + pkin(7) * t658 - t883;
t612 = t826 * t657 + t823 * t658;
t614 = -pkin(7) * t657 + t891;
t543 = -pkin(6) * t612 - t823 * t587 + t826 * t614;
t550 = -pkin(3) * t612 - t847;
t613 = -t823 * t657 + t826 * t658;
t586 = t827 * t613 + t824 * t681;
t836 = -pkin(2) * t612 + pkin(5) * t586 + t824 * t543 + t827 * t550;
t688 = -t822 * t753 - t882;
t592 = -pkin(4) * t912 + pkin(7) * t688 + t891;
t622 = -pkin(7) * t687 + t883;
t627 = t826 * t687 + t823 * t688;
t546 = -pkin(6) * t627 - t823 * t592 + t826 * t622;
t557 = -pkin(3) * t627 - t840;
t628 = -t823 * t687 + t826 * t688;
t597 = t827 * t628 + t824 * t912;
t835 = -pkin(2) * t627 + pkin(5) * t597 + t824 * t546 + t827 * t557;
t746 = t823 * t799 + t879;
t646 = -pkin(3) * t746 + t671;
t665 = -pkin(6) * t746 + t888;
t714 = t827 * t750 + t824 * t843;
t834 = -pkin(2) * t746 + pkin(5) * t714 + t827 * t646 + t824 * t665;
t748 = t826 * t797 - t886;
t647 = -pkin(3) * t748 + t672;
t666 = -pkin(6) * t748 + t880;
t715 = t827 * t752 + t824 * t782;
t833 = -pkin(2) * t748 + pkin(5) * t715 + t827 * t647 + t824 * t666;
t832 = -pkin(3) * t707 + pkin(6) * t584 + t826 * t539 + t823 * t542;
t831 = -pkin(3) * t681 + pkin(6) * t613 + t826 * t587 + t823 * t614;
t830 = -pkin(3) * t912 + pkin(6) * t628 + t826 * t592 + t823 * t622;
t829 = -pkin(3) * t659 + pkin(6) * t534 - pkin(7) * t889 + t826 * t545;
t798 = t810 - t828;
t796 = t828 - t874;
t790 = -t810 + t874;
t778 = t817 * t787;
t777 = t817 * t788;
t764 = -t768 + t812;
t763 = t767 - t812;
t759 = t826 * t783 - t815 * t872;
t758 = -t827 * qJDD(4) + t824 * t781;
t757 = t823 * t844 - t910 * t872;
t751 = -t823 * t796 + t879;
t749 = t826 * t798 - t886;
t747 = t826 * t796 + t887;
t745 = t823 * t798 + t878;
t744 = (t783 + t806) * t823;
t740 = t817 * t760;
t737 = -t823 * t782 - t743;
t736 = t826 * t782 - t823 * t843;
t734 = t818 * t788 - t819 * t893;
t733 = -t818 * t897 - t892;
t732 = t768 - t767;
t728 = t827 * t759 - t854;
t727 = t827 * t757 + t854;
t726 = t824 * t759 + t853;
t725 = t824 * t757 - t853;
t724 = t827 * t751 + t823 * t868;
t723 = t827 * t749 + t824 * t867;
t722 = t824 * t751 - t823 * t866;
t721 = t824 * t749 - t826 * t866;
t713 = t824 * t752 - t827 * t782;
t712 = t824 * t750 - t827 * t843;
t711 = (-t769 * t825 + t771 * t822) * t814;
t710 = (-t769 * t822 - t771 * t825) * t814;
t706 = t827 * t737 + t824 * t790;
t705 = t824 * t737 - t827 * t790;
t703 = -t771 * qJD(5) - t856;
t695 = t862 * t787 + t877;
t694 = t862 * t788 - t884;
t693 = t825 * t763 - t890;
t692 = -t822 * t764 + t916;
t691 = t822 * t763 + t882;
t690 = t825 * t764 + t917;
t689 = pkin(1) * t785 + qJ(2) * t857;
t680 = t819 * t728 + t817 * t744;
t679 = t819 * t727 - t817 * t743;
t678 = t817 * t728 - t819 * t744;
t677 = t817 * t727 + t819 * t743;
t676 = t819 * t724 + t817 * t747;
t675 = t819 * t723 + t817 * t745;
t674 = t817 * t724 - t819 * t747;
t673 = t817 * t723 - t819 * t745;
t670 = t825 * t704 - t771 * t904;
t669 = t822 * t704 + t771 * t903;
t668 = -t822 * t703 + t769 * t903;
t667 = t825 * t703 + t769 * t904;
t664 = t819 * t715 + t817 * t748;
t663 = t819 * t714 + t817 * t746;
t662 = t817 * t715 - t819 * t748;
t661 = t817 * t714 - t819 * t746;
t652 = t819 * t706 + t817 * t736;
t651 = t817 * t706 - t819 * t736;
t650 = t817 * t655;
t649 = -t823 * t710 + t826 * t711;
t648 = t826 * t710 + t823 * t711;
t643 = t827 * t649 + t824 * t813;
t642 = t824 * t649 - t827 * t813;
t640 = t819 * t719 + t858 * t817;
t639 = t819 * t718 + t859 * t817;
t638 = t819 * t850 + t902;
t637 = t817 * t850 - t741;
t636 = pkin(1) * t787 + t817 * t719 - t858 * t819;
t635 = -pkin(1) * t788 + t817 * t718 - t859 * t819;
t634 = -pkin(2) * t712 - t842;
t633 = -pkin(2) * t713 - t841;
t632 = -t823 * t691 + t826 * t693;
t631 = -t823 * t690 + t826 * t692;
t630 = t826 * t691 + t823 * t693;
t629 = t826 * t690 + t823 * t692;
t625 = -t825 * t681 - t822 * t912;
t623 = -t822 * t681 + t825 * t912;
t618 = -t823 * t669 + t826 * t670;
t617 = -t823 * t667 + t826 * t668;
t616 = t826 * t669 + t823 * t670;
t615 = t826 * t667 + t823 * t668;
t611 = -pkin(5) * t738 + t827 * t620;
t610 = t827 * t618 + t864;
t609 = t827 * t617 - t864;
t608 = t824 * t618 - t863;
t607 = t824 * t617 + t863;
t605 = t824 * t621 - t827 * t708;
t603 = t827 * t632 - t824 * t682;
t602 = t827 * t631 + t824 * t686;
t601 = t824 * t632 + t827 * t682;
t600 = t824 * t631 - t827 * t686;
t599 = t819 * t643 + t817 * t648;
t598 = t817 * t643 - t819 * t648;
t596 = t824 * t628 - t827 * t912;
t591 = -t862 * t739 - t885;
t590 = -pkin(5) * t713 - t824 * t647 + t827 * t666;
t589 = -pkin(5) * t712 - t824 * t646 + t827 * t665;
t588 = -pkin(1) * t637 - t852;
t585 = t824 * t613 - t827 * t681;
t583 = -t823 * t623 + t826 * t625;
t581 = t826 * t623 + t823 * t625;
t580 = -qJ(2) * t637 - (pkin(2) * t817 - pkin(5) * t819) * t655;
t579 = -pkin(1) * t662 - t833;
t578 = -pkin(1) * t661 - t834;
t577 = t827 * t583 + t824 * t732;
t576 = t824 * t583 - t827 * t732;
t574 = t824 * t584 - t827 * t707;
t573 = t819 * t603 + t817 * t630;
t572 = t819 * t602 + t817 * t629;
t571 = t817 * t603 - t819 * t630;
t570 = t817 * t602 - t819 * t629;
t569 = t819 * t610 + t817 * t616;
t568 = t819 * t609 + t817 * t615;
t567 = t817 * t610 - t819 * t616;
t566 = t817 * t609 - t819 * t615;
t565 = t819 * t597 + t817 * t627;
t564 = t817 * t597 - t819 * t627;
t563 = t819 * t606 - t620 * t817;
t562 = t817 * t606 + t620 * t819;
t561 = qJ(2) * t638 - (-pkin(2) * t819 - pkin(5) * t817 - pkin(1)) * t655;
t560 = t819 * t586 + t817 * t612;
t559 = t817 * t586 - t819 * t612;
t558 = -pkin(2) * t605 - t851;
t556 = t819 * t611 - t860 * t817;
t552 = -qJ(2) * t662 + t819 * t590 - t817 * t633;
t551 = -qJ(2) * t661 + t819 * t589 - t817 * t634;
t549 = -pkin(1) * t738 + t817 * t611 + t860 * t819;
t548 = -pkin(1) * t713 + qJ(2) * t664 + t817 * t590 + t819 * t633;
t547 = -pkin(1) * t712 + qJ(2) * t663 + t817 * t589 + t819 * t634;
t544 = -pkin(5) * t605 - (pkin(3) * t824 - pkin(6) * t827) * t620;
t541 = t819 * t577 + t817 * t581;
t540 = t817 * t577 - t819 * t581;
t538 = t819 * t575 + t817 * t582;
t537 = t817 * t575 - t819 * t582;
t536 = -pkin(2) * t596 - t830;
t535 = -pkin(2) * t585 - t831;
t531 = t824 * t534 - t827 * t659;
t530 = -pkin(1) * t562 - t911;
t529 = -pkin(5) * t596 + t827 * t546 - t824 * t557;
t528 = -pkin(5) * t585 + t827 * t543 - t824 * t550;
t527 = -qJ(2) * t562 + t819 * t544 - t817 * t558;
t524 = -pkin(1) * t605 + qJ(2) * t563 + t817 * t544 + t819 * t558;
t523 = -pkin(1) * t564 - t835;
t522 = -pkin(1) * t559 - t836;
t520 = t819 * t532 + t817 * t533;
t519 = t817 * t532 - t819 * t533;
t518 = -pkin(2) * t574 - t832;
t517 = -pkin(5) * t574 + t827 * t525 - t824 * t555;
t516 = -qJ(2) * t564 + t819 * t529 - t817 * t536;
t515 = -pkin(1) * t596 + qJ(2) * t565 + t817 * t529 + t819 * t536;
t514 = -qJ(2) * t559 + t819 * t528 - t817 * t535;
t513 = -pkin(1) * t585 + qJ(2) * t560 + t817 * t528 + t819 * t535;
t512 = -pkin(2) * t531 - t829;
t511 = -pkin(1) * t537 - t837;
t510 = -pkin(5) * t531 + t827 * t521 - t824 * t526;
t509 = -qJ(2) * t537 + t819 * t517 - t817 * t518;
t508 = -pkin(1) * t574 + qJ(2) * t538 + t817 * t517 + t819 * t518;
t507 = -pkin(1) * t519 - t838;
t506 = -qJ(2) * t519 + t819 * t510 - t817 * t512;
t505 = -pkin(1) * t531 + qJ(2) * t520 + t817 * t510 + t819 * t512;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t915, -t914, -t849, -qJ(1) * t849, 0, 0, 0, 0, 0, 0, -t818 * t761 - t817 * t894, -t818 * t762 - t819 * t894, t820 * t700, -qJ(1) * (t818 * t857 + t894) - (t818 * pkin(1) - t820 * qJ(2)) * t700, 0, 0, t846, 0, t734, t820 * t871, -qJ(1) * t733 + t820 * t639 - t818 * t695, qJ(1) * t845 + t820 * t640 - t818 * t694, t655 * t895 + t818 * t850, t820 * t580 - t818 * t588 - qJ(1) * (t818 * t638 + t655 * t820), t820 * t680 + t818 * t726, t820 * t652 + t818 * t705, t820 * t676 + t818 * t722, t820 * t679 + t818 * t725, t820 * t675 + t818 * t721, t818 * t758 + t760 * t895, t820 * t551 - t818 * t578 - qJ(1) * (t818 * t663 - t820 * t712), t820 * t552 - t818 * t579 - qJ(1) * (t818 * t664 - t820 * t713), t820 * t556 - t818 * t591 - qJ(1) * (t818 * t819 * t739 - t820 * t738), t820 * t527 - t818 * t530 - qJ(1) * (t818 * t563 - t820 * t605), t820 * t569 + t818 * t608, t820 * t541 + t818 * t576, t820 * t572 + t818 * t600, t820 * t568 + t818 * t607, t820 * t573 + t818 * t601, t820 * t599 + t818 * t642, t820 * t514 - t818 * t522 - qJ(1) * (t818 * t560 - t820 * t585), t820 * t516 - t818 * t523 - qJ(1) * (t818 * t565 - t820 * t596), t820 * t509 - t818 * t511 - qJ(1) * (t818 * t538 - t820 * t574), t820 * t506 - t818 * t507 - qJ(1) * (t818 * t520 - t820 * t531); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t914, -t915, t855, qJ(1) * t855, 0, 0, 0, 0, 0, 0, t820 * t761 - t817 * t900, t820 * t762 - t818 * t773, t818 * t700, qJ(1) * (t820 * t857 - t900) - (-t820 * pkin(1) - t818 * qJ(2)) * t700, 0, 0, t845, 0, t733, t818 * t871, qJ(1) * t734 + t818 * t639 + t820 * t695, -qJ(1) * t846 + t818 * t640 + t820 * t694, t818 * t899 - t820 * t850, t818 * t580 + t820 * t588 + qJ(1) * (t820 * t638 - t655 * t818), t818 * t680 - t820 * t726, t818 * t652 - t820 * t705, t818 * t676 - t820 * t722, t818 * t679 - t820 * t725, t818 * t675 - t820 * t721, -t820 * t758 + t818 * t898, t818 * t551 + t820 * t578 + qJ(1) * (t820 * t663 + t818 * t712), t818 * t552 + t820 * t579 + qJ(1) * (t820 * t664 + t818 * t713), t818 * t556 + t820 * t591 + qJ(1) * (t818 * t738 + t739 * t895), t818 * t527 + t820 * t530 + qJ(1) * (t820 * t563 + t818 * t605), t818 * t569 - t820 * t608, t818 * t541 - t820 * t576, t818 * t572 - t820 * t600, t818 * t568 - t820 * t607, t818 * t573 - t820 * t601, t818 * t599 - t820 * t642, t818 * t514 + t820 * t522 + qJ(1) * (t820 * t560 + t818 * t585), t818 * t516 + t820 * t523 + qJ(1) * (t820 * t565 + t818 * t596), t818 * t509 + t820 * t511 + qJ(1) * (t820 * t538 + t818 * t574), t818 * t506 + t820 * t507 + qJ(1) * (t820 * t520 + t818 * t531); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t791, t792, 0, 0, 0, 0, 0, 0, 0, 0, t773, -t772, t857, t689, 0, 0, t777, 0, -t778, -t870, t635, t636, t650, t561, t678, t651, t674, t677, t673, t740, t547, t548, t549, t524, t567, t540, t570, t566, t571, t598, t513, t515, t508, t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t876, -t791, 0, 0, 0, 0, 0, 0, 0, -t772, -t773, t700, qJ(2) * t700, 0, 0, t896, 0, -t897, t871, t639, t640, t899, t580, t680, t652, t676, t679, t675, t898, t551, t552, t556, t527, t569, t541, t572, t568, t573, t599, t514, t516, t509, t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t876, 0, -t792, 0, 0, 0, 0, 0, 0, 0, t761, t762, 0, pkin(1) * t700, 0, 0, -t787, 0, -t788, 0, t695, t694, -t850, t588, -t726, -t705, -t722, -t725, -t721, -t758, t578, t579, t591, t530, -t608, -t576, -t600, -t607, -t601, -t642, t522, t523, t511, t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t791, t792, 0, 0, 0, 0, 0, 0, 0, 0, t773, -t772, t857, t689, 0, 0, t777, 0, -t778, -t870, t635, t636, t650, t561, t678, t651, t674, t677, t673, t740, t547, t548, t549, t524, t567, t540, t570, t566, t571, t598, t513, t515, t508, t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t785, t761, 0, 0, 0, t788, 0, -t787, 0, t718, t719, t655, pkin(5) * t655, t728, t706, t724, t727, t723, t760, t589, t590, t611, t544, t610, t577, t602, t609, t603, t643, t528, t529, t517, t510; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t785, 0, t762, 0, 0, 0, 0, 0, 0, -qJDD(3), t696, t697, 0, pkin(2) * t655, -t744, -t736, -t747, t743, -t745, 0, t634, t633, t604, t558, -t616, -t581, -t629, -t615, -t630, -t648, t535, t536, t518, t512; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t761, -t762, 0, 0, 0, 0, t787, 0, t788, 0, -t719, t718, t850, t852, t726, t705, t722, t725, t721, t758, t834, t833, pkin(5) * t739 + t885, t911, t608, t576, t600, t607, t601, t642, t836, t835, t837, t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), 0, -t909, 0, 0, t761, t716, 0, t759, t737, t751, t757, t749, t781, t665, t666, t620, pkin(6) * t620, t618, t583, t631, t617, t632, t649, t543, t546, t525, t521; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t909, 0, qJDD(3), 0, -t761, 0, t717, 0, t802, -t790, -t869, -t802, -t867, -qJDD(4), t646, t647, 0, pkin(3) * t620, -t735, -t732, -t686, t735, t682, -t813, t550, t557, t555, t526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t716, -t717, 0, 0, t744, t736, t747, -t743, t745, 0, t842, t841, t839, t851, t616, t581, t629, t615, t630, t648, t831, t830, t832, t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t783, -t843, t793, -t806, t798, t806, 0, t708, t671, 0, t670, t625, t692, t668, t693, t711, t614, t622, t542, -pkin(7) * t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t861, t782, t796, -t844, t794, -t861, -t708, 0, t672, 0, t669, t623, t690, t667, t691, t710, t587, t592, t539, t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t802, t790, t869, t802, t867, qJDD(4), -t671, -t672, 0, 0, t735, t732, t686, -t735, -t682, t813, t847, t840, t907, t908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t704, -t681, t913, t766, t763, -t766, 0, t659, t594, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t905, t912, t764, t703, t730, -t905, -t659, 0, t595, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t735, t732, t686, -t735, -t682, t813, -t594, -t595, 0, 0;];
m_new_reg = t1;
