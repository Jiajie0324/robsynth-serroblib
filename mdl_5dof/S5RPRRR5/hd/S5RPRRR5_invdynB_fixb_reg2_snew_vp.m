% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S5RPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
% 
% Output:
% tauB_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:17
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S5RPRRR5_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR5_invdynB_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR5_invdynB_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR5_invdynB_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR5_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR5_invdynB_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:16:36
% EndTime: 2019-12-05 18:16:51
% DurationCPUTime: 12.69s
% Computational Cost: add. (43780->508), mult. (61110->764), div. (0->0), fcn. (38139->10), ass. (0->346)
t533 = qJD(1) + qJD(3);
t529 = t533 ^ 2;
t545 = cos(qJ(3));
t531 = qJDD(1) + qJDD(3);
t541 = sin(qJ(3));
t580 = t541 * t531;
t498 = t545 * t529 + t580;
t572 = t545 * t531;
t501 = t541 * t529 - t572;
t537 = sin(pkin(9));
t538 = cos(pkin(9));
t439 = t538 * t498 - t537 * t501;
t536 = g(1) - qJDD(2);
t475 = pkin(6) * t498 - t545 * t536;
t608 = pkin(6) * t501 - t541 * t536;
t370 = qJ(2) * t439 + t538 * t475 - t537 * t608;
t542 = sin(qJ(1));
t546 = cos(qJ(1));
t443 = t537 * t498 + t538 * t501;
t614 = qJ(2) * t443 + t537 * t475 + t538 * t608;
t615 = t542 * t439 + t546 * t443;
t621 = pkin(5) * t615 + t542 * t370 + t546 * t614;
t388 = t546 * t439 - t542 * t443;
t620 = pkin(5) * t388 + t546 * t370 - t542 * t614;
t518 = t546 * g(2) + t542 * g(3);
t551 = qJDD(1) * pkin(1) + t518;
t517 = t542 * g(2) - t546 * g(3);
t595 = qJD(1) ^ 2;
t552 = -t595 * pkin(1) + t517;
t450 = t537 * t551 + t538 * t552;
t448 = -t595 * pkin(2) + t450;
t549 = -t537 * t552 + t538 * t551;
t548 = qJDD(1) * pkin(2) + t549;
t398 = t541 * t448 - t545 * t548;
t399 = t545 * t448 + t541 * t548;
t561 = t541 * t398 + t545 * t399;
t333 = t545 * t398 - t541 * t399;
t588 = t538 * t333;
t282 = -t537 * t561 + t588;
t589 = t537 * t333;
t611 = t538 * t561 + t589;
t249 = t542 * t282 + t546 * t611;
t248 = t546 * t282 - t542 * t611;
t560 = t538 * t450 - t537 * t549;
t406 = -t537 * t450 - t538 * t549;
t570 = t546 * t406;
t337 = -t542 * t560 + t570;
t578 = t542 * t406;
t338 = t546 * t560 + t578;
t539 = sin(qJ(5));
t543 = cos(qJ(5));
t544 = cos(qJ(4));
t540 = sin(qJ(4));
t591 = t533 * t540;
t482 = -t543 * t544 * t533 + t539 * t591;
t484 = (t539 * t544 + t540 * t543) * t533;
t434 = t484 * t482;
t566 = qJDD(4) + qJDD(5);
t598 = -t434 + t566;
t610 = t539 * t598;
t609 = t543 * t598;
t507 = t537 * qJDD(1) + t538 * t595;
t479 = qJ(2) * t507 - t538 * t536;
t508 = t538 * qJDD(1) - t537 * t595;
t553 = t542 * t507 - t546 * t508;
t554 = -qJ(2) * t508 - t537 * t536;
t607 = pkin(5) * t553 + t542 * t479 + t546 * t554;
t452 = t546 * t507 + t542 * t508;
t606 = pkin(5) * t452 + t546 * t479 - t542 * t554;
t532 = qJD(4) + qJD(5);
t471 = t532 * t482;
t568 = qJD(4) * t533;
t562 = t544 * t568;
t581 = t540 * t531;
t491 = t562 + t581;
t521 = t544 * t531;
t563 = t540 * t568;
t492 = t521 - t563;
t550 = t482 * qJD(5) - t543 * t491 - t539 * t492;
t597 = -t471 - t550;
t559 = t539 * t491 - t543 * t492;
t383 = (qJD(5) - t532) * t484 + t559;
t480 = t482 ^ 2;
t481 = t484 ^ 2;
t528 = t532 ^ 2;
t594 = pkin(1) * t536;
t593 = t532 * t539;
t592 = t532 * t543;
t534 = t540 ^ 2;
t590 = t534 * t529;
t535 = t544 ^ 2;
t522 = t535 * t529;
t380 = -t531 * pkin(3) - t529 * pkin(7) + t398;
t506 = qJD(4) * pkin(4) - pkin(8) * t591;
t344 = -t492 * pkin(4) - pkin(8) * t522 + t506 * t591 + t380;
t587 = t539 * t344;
t427 = t434 + t566;
t586 = t539 * t427;
t381 = -t529 * pkin(3) + t531 * pkin(7) + t399;
t359 = t540 * t381 + t544 * t536;
t516 = t544 * t529 * t540;
t504 = qJDD(4) + t516;
t342 = (-t491 + t562) * pkin(8) + t504 * pkin(4) - t359;
t360 = t544 * t381 - t540 * t536;
t343 = -pkin(4) * t522 + t492 * pkin(8) - qJD(4) * t506 + t360;
t293 = -t543 * t342 + t539 * t343;
t294 = t539 * t342 + t543 * t343;
t257 = -t543 * t293 + t539 * t294;
t585 = t540 * t257;
t584 = t540 * t380;
t583 = t540 * t504;
t505 = qJDD(4) - t516;
t582 = t540 * t505;
t577 = t543 * t344;
t576 = t543 * t427;
t575 = t544 * t257;
t574 = t544 * t380;
t573 = t544 * t505;
t569 = t534 + t535;
t565 = t541 * t434;
t564 = t545 * t434;
t258 = t539 * t293 + t543 * t294;
t317 = t540 * t359 + t544 * t360;
t557 = t541 * t516;
t556 = t545 * t516;
t509 = t542 * qJDD(1) + t546 * t595;
t555 = pkin(5) * t509 - t546 * g(1);
t316 = t544 * t359 - t540 * t360;
t467 = t546 * t517 - t542 * t518;
t466 = -t542 * t517 - t546 * t518;
t547 = qJD(4) ^ 2;
t514 = -t522 - t547;
t513 = t522 - t547;
t512 = -t547 - t590;
t511 = t547 - t590;
t510 = -t546 * qJDD(1) + t542 * t595;
t503 = t522 - t590;
t502 = t522 + t590;
t497 = t544 * t504;
t496 = t569 * t531;
t493 = t521 - 0.2e1 * t563;
t490 = 0.2e1 * t562 + t581;
t489 = -pkin(5) * t510 + t542 * g(1);
t488 = t569 * t568;
t469 = -t481 + t528;
t468 = t480 - t528;
t465 = t541 * qJDD(4) + t545 * t488;
t464 = -t545 * qJDD(4) + t541 * t488;
t463 = t544 * t491 - t534 * t568;
t462 = -t540 * t492 - t535 * t568;
t461 = -t481 - t528;
t460 = -t540 * t512 - t573;
t459 = -t540 * t511 + t497;
t458 = t544 * t514 - t583;
t457 = t544 * t513 - t582;
t456 = t544 * t512 - t582;
t455 = t540 * t514 + t497;
t446 = t545 * t496 - t541 * t502;
t445 = t541 * t496 + t545 * t502;
t435 = -t540 * t490 + t544 * t493;
t433 = -t481 + t480;
t432 = t545 * t459 + t540 * t580;
t431 = t545 * t457 + t541 * t521;
t430 = t541 * t459 - t540 * t572;
t429 = t541 * t457 - t544 * t572;
t425 = t545 * t463 - t557;
t424 = t545 * t462 + t557;
t423 = t541 * t463 + t556;
t422 = t541 * t462 - t556;
t421 = -t528 - t480;
t420 = t545 * t460 + t541 * t490;
t419 = t545 * t458 - t541 * t493;
t418 = t541 * t460 - t545 * t490;
t417 = t541 * t458 + t545 * t493;
t416 = (-t482 * t543 + t484 * t539) * t532;
t415 = (-t482 * t539 - t484 * t543) * t532;
t414 = -t537 * t464 + t538 * t465;
t413 = t538 * t464 + t537 * t465;
t412 = -t480 - t481;
t411 = t545 * t435 - t541 * t503;
t410 = t541 * t435 + t545 * t503;
t408 = -t484 * qJD(5) - t559;
t403 = t543 * t468 - t586;
t402 = -t539 * t469 + t609;
t401 = t539 * t468 + t576;
t400 = t543 * t469 + t610;
t397 = -t539 * t461 - t576;
t396 = t543 * t461 - t586;
t395 = qJ(2) * t560 + t594;
t393 = -t537 * t445 + t538 * t446;
t392 = t538 * t445 + t537 * t446;
t387 = -t471 + t550;
t382 = (qJD(5) + t532) * t484 + t559;
t379 = -t484 * t593 - t543 * t550;
t378 = t484 * t592 - t539 * t550;
t377 = -t539 * t408 + t482 * t592;
t376 = t543 * t408 + t482 * t593;
t374 = -t537 * t430 + t538 * t432;
t373 = -t537 * t429 + t538 * t431;
t372 = t538 * t430 + t537 * t432;
t371 = t538 * t429 + t537 * t431;
t366 = t543 * t421 - t610;
t365 = t539 * t421 + t609;
t364 = -t537 * t423 + t538 * t425;
t363 = -t537 * t422 + t538 * t424;
t362 = t538 * t423 + t537 * t425;
t361 = t538 * t422 + t537 * t424;
t357 = -t537 * t418 + t538 * t420;
t356 = -t537 * t417 + t538 * t419;
t355 = t538 * t418 + t537 * t420;
t354 = t538 * t417 + t537 * t419;
t353 = -t540 * t415 + t544 * t416;
t352 = -pkin(7) * t456 + t574;
t351 = -pkin(7) * t455 + t584;
t350 = t545 * t353 + t541 * t566;
t349 = t541 * t353 - t545 * t566;
t348 = -pkin(3) * t456 + t360;
t347 = -pkin(3) * t455 + t359;
t346 = -t537 * t410 + t538 * t411;
t345 = t538 * t410 + t537 * t411;
t336 = -t540 * t401 + t544 * t403;
t335 = -t540 * t400 + t544 * t402;
t330 = -t540 * t396 + t544 * t397;
t329 = t544 * t396 + t540 * t397;
t328 = -t542 * t392 + t546 * t393;
t327 = -t546 * t392 - t542 * t393;
t326 = pkin(2) * t536 + pkin(6) * t561;
t325 = -t383 * t543 - t539 * t387;
t324 = -t543 * t382 - t539 * t597;
t323 = -t383 * t539 + t543 * t387;
t322 = -t539 * t382 + t543 * t597;
t321 = -t540 * t378 + t544 * t379;
t320 = -t540 * t376 + t544 * t377;
t319 = -t540 * t365 + t544 * t366;
t318 = t544 * t365 + t540 * t366;
t314 = -pkin(8) * t396 + t577;
t313 = -t542 * t355 + t546 * t357;
t312 = -t542 * t354 + t546 * t356;
t311 = -t546 * t355 - t542 * t357;
t310 = -t546 * t354 - t542 * t356;
t309 = -pkin(8) * t365 + t587;
t308 = t545 * t321 + t565;
t307 = t545 * t320 - t565;
t306 = t541 * t321 - t564;
t305 = t541 * t320 + t564;
t304 = -pkin(6) * t445 + t545 * t316;
t303 = pkin(6) * t446 + t541 * t316;
t302 = t545 * t336 - t541 * t383;
t301 = t545 * t335 - t541 * t387;
t300 = t541 * t336 + t545 * t383;
t299 = t541 * t335 + t545 * t387;
t298 = t545 * t330 + t541 * t597;
t297 = -t537 * t349 + t538 * t350;
t296 = t541 * t330 - t545 * t597;
t295 = t538 * t349 + t537 * t350;
t291 = t545 * t319 + t541 * t382;
t290 = t541 * t319 - t545 * t382;
t289 = t545 * t317 + t541 * t380;
t288 = t541 * t317 - t545 * t380;
t287 = -pkin(4) * t597 + pkin(8) * t397 + t587;
t286 = -pkin(6) * t418 - t541 * t348 + t545 * t352;
t285 = -pkin(6) * t417 - t541 * t347 + t545 * t351;
t284 = -pkin(4) * t382 + pkin(8) * t366 - t577;
t279 = -pkin(2) * t456 + pkin(6) * t420 + t545 * t348 + t541 * t352;
t278 = -pkin(2) * t455 + pkin(6) * t419 + t545 * t347 + t541 * t351;
t277 = -t540 * t323 + t544 * t325;
t276 = -t540 * t322 + t544 * t324;
t275 = t544 * t323 + t540 * t325;
t274 = t545 * t276 - t541 * t433;
t273 = t541 * t276 + t545 * t433;
t272 = t545 * t277 + t541 * t412;
t271 = t541 * t277 - t545 * t412;
t270 = -t537 * t306 + t538 * t308;
t269 = -t537 * t305 + t538 * t307;
t268 = t538 * t306 + t537 * t308;
t267 = t538 * t305 + t537 * t307;
t266 = -t537 * t300 + t538 * t302;
t265 = -t537 * t299 + t538 * t301;
t264 = t538 * t300 + t537 * t302;
t263 = t538 * t299 + t537 * t301;
t262 = -t537 * t296 + t538 * t298;
t261 = t538 * t296 + t537 * t298;
t260 = -pkin(3) * t329 - pkin(4) * t396 + t294;
t259 = -pkin(3) * t275 - pkin(4) * t323;
t256 = -pkin(3) * t318 - pkin(4) * t365 + t293;
t255 = -qJ(2) * t392 - t537 * t303 + t538 * t304;
t254 = qJ(2) * t393 + t538 * t303 + t537 * t304;
t253 = -t537 * t290 + t538 * t291;
t252 = t538 * t290 + t537 * t291;
t251 = -t537 * t288 + t538 * t289;
t250 = t538 * t288 + t537 * t289;
t247 = pkin(6) * t588 + qJ(2) * t282 - t537 * t326;
t246 = pkin(6) * t589 + qJ(2) * t611 + t538 * t326 + t594;
t245 = -pkin(7) * t329 - t540 * t287 + t544 * t314;
t244 = -pkin(4) * t344 + pkin(8) * t258;
t243 = -pkin(6) * t288 - (pkin(3) * t541 - pkin(7) * t545) * t316;
t242 = -pkin(8) * t323 - t257;
t241 = -pkin(7) * t318 - t540 * t284 + t544 * t309;
t240 = -qJ(2) * t355 - t537 * t279 + t538 * t286;
t239 = -qJ(2) * t354 - t537 * t278 + t538 * t285;
t238 = -pkin(1) * t456 + qJ(2) * t357 + t538 * t279 + t537 * t286;
t237 = -pkin(1) * t455 + qJ(2) * t356 + t538 * t278 + t537 * t285;
t236 = -pkin(4) * t412 + pkin(8) * t325 + t258;
t235 = -t537 * t273 + t538 * t274;
t234 = t538 * t273 + t537 * t274;
t233 = -t537 * t271 + t538 * t272;
t232 = t538 * t271 + t537 * t272;
t231 = pkin(6) * t289 - (-pkin(3) * t545 - pkin(7) * t541 - pkin(2)) * t316;
t230 = -t542 * t261 + t546 * t262;
t229 = -t546 * t261 - t542 * t262;
t228 = t544 * t258 - t585;
t227 = t540 * t258 + t575;
t226 = -t542 * t252 + t546 * t253;
t225 = -t546 * t252 - t542 * t253;
t224 = -t542 * t250 + t546 * t251;
t223 = -t546 * t250 - t542 * t251;
t222 = t545 * t228 + t541 * t344;
t221 = t541 * t228 - t545 * t344;
t220 = -pkin(6) * t296 + t545 * t245 - t541 * t260;
t219 = -pkin(6) * t290 + t545 * t241 - t541 * t256;
t218 = -pkin(2) * t329 + pkin(6) * t298 + t541 * t245 + t545 * t260;
t217 = -pkin(3) * t227 - pkin(4) * t257;
t216 = -t542 * t232 + t546 * t233;
t215 = -t546 * t232 - t542 * t233;
t214 = -pkin(2) * t318 + pkin(6) * t291 + t541 * t241 + t545 * t256;
t213 = -pkin(7) * t275 - t540 * t236 + t544 * t242;
t212 = -qJ(2) * t250 - t537 * t231 + t538 * t243;
t211 = -pkin(7) * t227 - pkin(8) * t575 - t540 * t244;
t210 = pkin(1) * t316 + qJ(2) * t251 + t538 * t231 + t537 * t243;
t209 = -t537 * t221 + t538 * t222;
t208 = t538 * t221 + t537 * t222;
t207 = -pkin(6) * t271 + t545 * t213 - t541 * t259;
t206 = -pkin(2) * t275 + pkin(6) * t272 + t541 * t213 + t545 * t259;
t205 = -qJ(2) * t261 - t537 * t218 + t538 * t220;
t204 = -pkin(1) * t329 + qJ(2) * t262 + t538 * t218 + t537 * t220;
t203 = -qJ(2) * t252 - t537 * t214 + t538 * t219;
t202 = -pkin(1) * t318 + qJ(2) * t253 + t538 * t214 + t537 * t219;
t201 = -t542 * t208 + t546 * t209;
t200 = -t546 * t208 - t542 * t209;
t199 = -pkin(6) * t221 + t545 * t211 - t541 * t217;
t198 = -pkin(2) * t227 + pkin(6) * t222 + t541 * t211 + t545 * t217;
t197 = -qJ(2) * t232 - t537 * t206 + t538 * t207;
t196 = -pkin(1) * t275 + qJ(2) * t233 + t538 * t206 + t537 * t207;
t195 = -qJ(2) * t208 - t537 * t198 + t538 * t199;
t194 = -pkin(1) * t227 + qJ(2) * t209 + t538 * t198 + t537 * t199;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t536, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t536, 0, 0, 0, 0, 0, 0, t455, t456, 0, -t316, 0, 0, 0, 0, 0, 0, t318, t329, t275, t227; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t510, t509, 0, t466, 0, 0, 0, 0, 0, 0, t553, t452, 0, t337, 0, 0, 0, 0, 0, 0, t615, t388, 0, t248, 0, 0, 0, 0, 0, 0, t310, t311, t327, t223, 0, 0, 0, 0, 0, 0, t225, t229, t215, t200; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t509, t510, 0, t467, 0, 0, 0, 0, 0, 0, -t452, t553, 0, t338, 0, 0, 0, 0, 0, 0, -t388, t615, 0, t249, 0, 0, 0, 0, 0, 0, t312, t313, t328, t224, 0, 0, 0, 0, 0, 0, t226, t230, t216, t201; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, qJDD(1), t518, -t517, 0, 0, 0, 0, 0, 0, 0, qJDD(1), pkin(1) * t508 + t549, -pkin(1) * t507 - t450, 0, -pkin(1) * t406, 0, 0, 0, 0, 0, t531, -pkin(1) * t443 - pkin(2) * t501 - t398, -pkin(1) * t439 - pkin(2) * t498 - t399, 0, -pkin(1) * t282 - pkin(2) * t333, (t491 + t562) * t540, t544 * t490 + t540 * t493, t544 * t511 + t583, (t492 - t563) * t544, t540 * t513 + t573, 0, pkin(1) * t354 + pkin(2) * t417 + pkin(3) * t493 + pkin(7) * t458 - t574, pkin(1) * t355 + pkin(2) * t418 - pkin(3) * t490 + pkin(7) * t460 + t584, pkin(1) * t392 + pkin(2) * t445 + pkin(3) * t502 + pkin(7) * t496 + t317, pkin(1) * t250 + pkin(2) * t288 - pkin(3) * t380 + pkin(7) * t317, t544 * t378 + t540 * t379, t544 * t322 + t540 * t324, t544 * t400 + t540 * t402, t544 * t376 + t540 * t377, t544 * t401 + t540 * t403, t544 * t415 + t540 * t416, pkin(1) * t252 + pkin(2) * t290 - pkin(3) * t382 + pkin(7) * t319 + t544 * t284 + t540 * t309, pkin(1) * t261 + pkin(2) * t296 - pkin(3) * t597 + pkin(7) * t330 + t544 * t287 + t540 * t314, pkin(1) * t232 + pkin(2) * t271 - pkin(3) * t412 + pkin(7) * t277 + t544 * t236 + t540 * t242, pkin(1) * t208 + pkin(2) * t221 - pkin(3) * t344 + pkin(7) * t228 - pkin(8) * t585 + t544 * t244; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, -t509, 0, t510, 0, t555, t489, -t467, -pkin(5) * t467, 0, 0, -t452, 0, t553, 0, t606, -t607, -t338, -pkin(5) * t338 - qJ(2) * t578 - t546 * t395, 0, 0, -t388, 0, t615, 0, t620, -t621, -t249, -pkin(5) * t249 - t546 * t246 - t542 * t247, -t546 * t362 - t542 * t364, -t546 * t345 - t542 * t346, -t546 * t372 - t542 * t374, -t546 * t361 - t542 * t363, -t546 * t371 - t542 * t373, -t546 * t413 - t542 * t414, -pkin(5) * t312 - t546 * t237 - t542 * t239, -pkin(5) * t313 - t546 * t238 - t542 * t240, -pkin(5) * t328 - t546 * t254 - t542 * t255, -pkin(5) * t224 - t546 * t210 - t542 * t212, -t546 * t268 - t542 * t270, -t546 * t234 - t542 * t235, -t546 * t263 - t542 * t265, -t546 * t267 - t542 * t269, -t546 * t264 - t542 * t266, -t546 * t295 - t542 * t297, -pkin(5) * t226 - t546 * t202 - t542 * t203, -pkin(5) * t230 - t546 * t204 - t542 * t205, -pkin(5) * t216 - t546 * t196 - t542 * t197, -pkin(5) * t201 - t546 * t194 - t542 * t195; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, -t510, 0, -t509, 0, -t489, t555, t466, pkin(5) * t466, 0, 0, -t553, 0, -t452, 0, t607, t606, t337, pkin(5) * t337 + qJ(2) * t570 - t542 * t395, 0, 0, -t615, 0, -t388, 0, t621, t620, t248, pkin(5) * t248 - t542 * t246 + t546 * t247, -t542 * t362 + t546 * t364, -t542 * t345 + t546 * t346, -t542 * t372 + t546 * t374, -t542 * t361 + t546 * t363, -t542 * t371 + t546 * t373, -t542 * t413 + t546 * t414, pkin(5) * t310 - t542 * t237 + t546 * t239, pkin(5) * t311 - t542 * t238 + t546 * t240, pkin(5) * t327 - t542 * t254 + t546 * t255, pkin(5) * t223 - t542 * t210 + t546 * t212, -t542 * t268 + t546 * t270, -t542 * t234 + t546 * t235, -t542 * t263 + t546 * t265, -t542 * t267 + t546 * t269, -t542 * t264 + t546 * t266, -t542 * t295 + t546 * t297, pkin(5) * t225 - t542 * t202 + t546 * t203, pkin(5) * t229 - t542 * t204 + t546 * t205, pkin(5) * t215 - t542 * t196 + t546 * t197, pkin(5) * t200 - t542 * t194 + t546 * t195;];
tauB_reg = t1;
