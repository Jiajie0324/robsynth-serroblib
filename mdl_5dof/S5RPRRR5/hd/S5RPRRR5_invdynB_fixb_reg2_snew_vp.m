% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S5RPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
% 
% Output:
% tauB_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 11:54
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S5RPRRR5_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR5_invdynB_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR5_invdynB_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR5_invdynB_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR5_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR5_invdynB_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 11:54:14
% EndTime: 2020-01-03 11:54:27
% DurationCPUTime: 10.87s
% Computational Cost: add. (43780->510), mult. (61110->764), div. (0->0), fcn. (38139->10), ass. (0->346)
t537 = qJD(1) + qJD(3);
t533 = t537 ^ 2;
t549 = cos(qJ(3));
t535 = qJDD(1) + qJDD(3);
t545 = sin(qJ(3));
t586 = t545 * t535;
t496 = t549 * t533 + t586;
t578 = t549 * t535;
t499 = t545 * t533 - t578;
t541 = sin(pkin(9));
t542 = cos(pkin(9));
t437 = t542 * t496 - t541 * t499;
t540 = g(1) - qJDD(2);
t473 = pkin(6) * t496 - t549 * t540;
t616 = pkin(6) * t499 - t545 * t540;
t368 = qJ(2) * t437 + t542 * t473 - t541 * t616;
t441 = t541 * t496 + t542 * t499;
t546 = sin(qJ(1));
t550 = cos(qJ(1));
t389 = t550 * t437 - t546 * t441;
t624 = qJ(2) * t441 + t541 * t473 + t542 * t616;
t631 = -pkin(5) * t389 - t550 * t368 + t546 * t624;
t615 = t546 * t437 + t550 * t441;
t630 = pkin(5) * t615 + t546 * t368 + t550 * t624;
t519 = t550 * g(2) + t546 * g(3);
t555 = qJDD(1) * pkin(1) - t519;
t518 = t546 * g(2) - t550 * g(3);
t601 = qJD(1) ^ 2;
t556 = -t601 * pkin(1) - t518;
t448 = t541 * t555 + t542 * t556;
t446 = -t601 * pkin(2) + t448;
t553 = -t541 * t556 + t542 * t555;
t552 = qJDD(1) * pkin(2) + t553;
t396 = t545 * t446 - t549 * t552;
t397 = t549 * t446 + t545 * t552;
t564 = t545 * t396 + t549 * t397;
t331 = t549 * t396 - t545 * t397;
t594 = t542 * t331;
t280 = -t541 * t564 + t594;
t595 = t541 * t331;
t621 = t542 * t564 + t595;
t627 = t546 * t280 + t550 * t621;
t246 = -t550 * t280 + t546 * t621;
t563 = t542 * t448 - t541 * t553;
t404 = -t541 * t448 - t542 * t553;
t576 = t550 * t404;
t335 = t546 * t563 - t576;
t584 = t546 * t404;
t620 = t550 * t563 + t584;
t508 = t541 * qJDD(1) + t542 * t601;
t509 = t542 * qJDD(1) - t541 * t601;
t450 = -t550 * t508 - t546 * t509;
t477 = qJ(2) * t508 - t542 * t540;
t557 = -qJ(2) * t509 - t541 * t540;
t619 = pkin(5) * t450 - t550 * t477 + t546 * t557;
t543 = sin(qJ(5));
t547 = cos(qJ(5));
t548 = cos(qJ(4));
t544 = sin(qJ(4));
t597 = t537 * t544;
t480 = -t547 * t548 * t537 + t543 * t597;
t482 = (t543 * t548 + t544 * t547) * t537;
t432 = t482 * t480;
t570 = qJDD(4) + qJDD(5);
t605 = -t432 + t570;
t618 = t543 * t605;
t617 = t547 * t605;
t603 = t546 * t508 - t550 * t509;
t614 = pkin(5) * t603 + t546 * t477 + t550 * t557;
t536 = qJD(4) + qJD(5);
t469 = t536 * t480;
t572 = qJD(4) * t537;
t566 = t548 * t572;
t587 = t544 * t535;
t489 = t566 + t587;
t522 = t548 * t535;
t567 = t544 * t572;
t490 = t522 - t567;
t554 = t480 * qJD(5) - t547 * t489 - t543 * t490;
t604 = -t469 - t554;
t562 = t543 * t489 - t547 * t490;
t381 = (qJD(5) - t536) * t482 + t562;
t478 = t480 ^ 2;
t479 = t482 ^ 2;
t532 = t536 ^ 2;
t600 = pkin(1) * t540;
t599 = t536 * t543;
t598 = t536 * t547;
t538 = t544 ^ 2;
t596 = t538 * t533;
t539 = t548 ^ 2;
t523 = t539 * t533;
t378 = -t535 * pkin(3) - t533 * pkin(7) + t396;
t507 = qJD(4) * pkin(4) - pkin(8) * t597;
t342 = -t490 * pkin(4) - pkin(8) * t523 + t507 * t597 + t378;
t593 = t543 * t342;
t425 = t432 + t570;
t592 = t543 * t425;
t379 = -t533 * pkin(3) + t535 * pkin(7) + t397;
t357 = t544 * t379 + t548 * t540;
t517 = t548 * t533 * t544;
t505 = qJDD(4) + t517;
t340 = (-t489 + t566) * pkin(8) + t505 * pkin(4) - t357;
t358 = t548 * t379 - t544 * t540;
t341 = -pkin(4) * t523 + t490 * pkin(8) - qJD(4) * t507 + t358;
t291 = -t547 * t340 + t543 * t341;
t292 = t543 * t340 + t547 * t341;
t255 = -t547 * t291 + t543 * t292;
t591 = t544 * t255;
t590 = t544 * t378;
t589 = t544 * t505;
t506 = qJDD(4) - t517;
t588 = t544 * t506;
t583 = t547 * t342;
t582 = t547 * t425;
t581 = t548 * t255;
t580 = t548 * t378;
t579 = t548 * t506;
t573 = t538 + t539;
t569 = t545 * t432;
t568 = t549 * t432;
t510 = -t546 * qJDD(1) - t550 * t601;
t565 = pkin(5) * t510 + t550 * g(1);
t256 = t543 * t291 + t547 * t292;
t315 = t544 * t357 + t548 * t358;
t464 = -t546 * t518 - t550 * t519;
t559 = t545 * t517;
t558 = t549 * t517;
t314 = t548 * t357 - t544 * t358;
t465 = t550 * t518 - t546 * t519;
t551 = qJD(4) ^ 2;
t515 = -t523 - t551;
t514 = t523 - t551;
t513 = -t551 - t596;
t512 = t551 - t596;
t511 = t550 * qJDD(1) - t546 * t601;
t501 = t523 - t596;
t500 = t523 + t596;
t495 = t548 * t505;
t494 = t573 * t535;
t491 = t522 - 0.2e1 * t567;
t488 = 0.2e1 * t566 + t587;
t487 = pkin(5) * t511 + t546 * g(1);
t486 = t573 * t572;
t467 = -t479 + t532;
t466 = t478 - t532;
t463 = t545 * qJDD(4) + t549 * t486;
t462 = -t549 * qJDD(4) + t545 * t486;
t461 = t548 * t489 - t538 * t572;
t460 = -t544 * t490 - t539 * t572;
t459 = -t479 - t532;
t458 = -t544 * t513 - t579;
t457 = -t544 * t512 + t495;
t456 = t548 * t515 - t589;
t455 = t548 * t514 - t588;
t454 = t548 * t513 - t588;
t453 = t544 * t515 + t495;
t444 = t549 * t494 - t545 * t500;
t443 = t545 * t494 + t549 * t500;
t433 = -t544 * t488 + t548 * t491;
t431 = -t479 + t478;
t430 = t549 * t457 + t544 * t586;
t429 = t549 * t455 + t545 * t522;
t428 = t545 * t457 - t544 * t578;
t427 = t545 * t455 - t548 * t578;
t423 = t549 * t461 - t559;
t422 = t549 * t460 + t559;
t421 = t545 * t461 + t558;
t420 = t545 * t460 - t558;
t419 = -t532 - t478;
t418 = t549 * t458 + t545 * t488;
t417 = t549 * t456 - t545 * t491;
t416 = t545 * t458 - t549 * t488;
t415 = t545 * t456 + t549 * t491;
t414 = (-t480 * t547 + t482 * t543) * t536;
t413 = (-t480 * t543 - t482 * t547) * t536;
t412 = -t541 * t462 + t542 * t463;
t411 = t542 * t462 + t541 * t463;
t410 = -t478 - t479;
t409 = t549 * t433 - t545 * t501;
t408 = t545 * t433 + t549 * t501;
t406 = -t482 * qJD(5) - t562;
t401 = t547 * t466 - t592;
t400 = -t543 * t467 + t617;
t399 = t543 * t466 + t582;
t398 = t547 * t467 + t618;
t395 = -t543 * t459 - t582;
t394 = t547 * t459 - t592;
t393 = qJ(2) * t563 + t600;
t391 = -t541 * t443 + t542 * t444;
t390 = t542 * t443 + t541 * t444;
t385 = -t469 + t554;
t380 = (qJD(5) + t536) * t482 + t562;
t377 = -t482 * t599 - t547 * t554;
t376 = t482 * t598 - t543 * t554;
t375 = -t543 * t406 + t480 * t598;
t374 = t547 * t406 + t480 * t599;
t372 = -t541 * t428 + t542 * t430;
t371 = -t541 * t427 + t542 * t429;
t370 = t542 * t428 + t541 * t430;
t369 = t542 * t427 + t541 * t429;
t364 = t547 * t419 - t618;
t363 = t543 * t419 + t617;
t362 = -t541 * t421 + t542 * t423;
t361 = -t541 * t420 + t542 * t422;
t360 = t542 * t421 + t541 * t423;
t359 = t542 * t420 + t541 * t422;
t355 = -t541 * t416 + t542 * t418;
t354 = -t541 * t415 + t542 * t417;
t353 = t542 * t416 + t541 * t418;
t352 = t542 * t415 + t541 * t417;
t351 = -t544 * t413 + t548 * t414;
t350 = -pkin(7) * t454 + t580;
t349 = -pkin(7) * t453 + t590;
t348 = t549 * t351 + t545 * t570;
t347 = t545 * t351 - t549 * t570;
t346 = -pkin(3) * t454 + t358;
t345 = -pkin(3) * t453 + t357;
t344 = -t541 * t408 + t542 * t409;
t343 = t542 * t408 + t541 * t409;
t334 = -t544 * t399 + t548 * t401;
t333 = -t544 * t398 + t548 * t400;
t328 = -t544 * t394 + t548 * t395;
t327 = t548 * t394 + t544 * t395;
t326 = t546 * t390 - t550 * t391;
t325 = t550 * t390 + t546 * t391;
t324 = pkin(2) * t540 + pkin(6) * t564;
t323 = -t381 * t547 - t543 * t385;
t322 = -t547 * t380 - t543 * t604;
t321 = -t381 * t543 + t547 * t385;
t320 = -t543 * t380 + t547 * t604;
t319 = -t544 * t376 + t548 * t377;
t318 = -t544 * t374 + t548 * t375;
t317 = -t544 * t363 + t548 * t364;
t316 = t548 * t363 + t544 * t364;
t312 = -pkin(8) * t394 + t583;
t311 = t546 * t353 - t550 * t355;
t310 = t546 * t352 - t550 * t354;
t309 = t550 * t353 + t546 * t355;
t308 = t550 * t352 + t546 * t354;
t307 = -pkin(8) * t363 + t593;
t306 = t549 * t319 + t569;
t305 = t549 * t318 - t569;
t304 = t545 * t319 - t568;
t303 = t545 * t318 + t568;
t302 = -pkin(6) * t443 + t549 * t314;
t301 = pkin(6) * t444 + t545 * t314;
t300 = t549 * t334 - t545 * t381;
t299 = t549 * t333 - t545 * t385;
t298 = t545 * t334 + t549 * t381;
t297 = t545 * t333 + t549 * t385;
t296 = t549 * t328 + t545 * t604;
t295 = -t541 * t347 + t542 * t348;
t294 = t545 * t328 - t549 * t604;
t293 = t542 * t347 + t541 * t348;
t289 = t549 * t317 + t545 * t380;
t288 = t545 * t317 - t549 * t380;
t287 = t549 * t315 + t545 * t378;
t286 = t545 * t315 - t549 * t378;
t285 = -pkin(4) * t604 + pkin(8) * t395 + t593;
t284 = -pkin(6) * t416 - t545 * t346 + t549 * t350;
t283 = -pkin(6) * t415 - t545 * t345 + t549 * t349;
t282 = -pkin(4) * t380 + pkin(8) * t364 - t583;
t277 = -pkin(2) * t454 + pkin(6) * t418 + t549 * t346 + t545 * t350;
t276 = -pkin(2) * t453 + pkin(6) * t417 + t549 * t345 + t545 * t349;
t275 = -t544 * t321 + t548 * t323;
t274 = -t544 * t320 + t548 * t322;
t273 = t548 * t321 + t544 * t323;
t272 = t549 * t274 - t545 * t431;
t271 = t545 * t274 + t549 * t431;
t270 = t549 * t275 + t545 * t410;
t269 = t545 * t275 - t549 * t410;
t268 = -t541 * t304 + t542 * t306;
t267 = -t541 * t303 + t542 * t305;
t266 = t542 * t304 + t541 * t306;
t265 = t542 * t303 + t541 * t305;
t264 = -t541 * t298 + t542 * t300;
t263 = -t541 * t297 + t542 * t299;
t262 = t542 * t298 + t541 * t300;
t261 = t542 * t297 + t541 * t299;
t260 = -t541 * t294 + t542 * t296;
t259 = t542 * t294 + t541 * t296;
t258 = -pkin(3) * t327 - pkin(4) * t394 + t292;
t257 = -pkin(3) * t273 - pkin(4) * t321;
t254 = -pkin(3) * t316 - pkin(4) * t363 + t291;
t253 = -qJ(2) * t390 - t541 * t301 + t542 * t302;
t252 = qJ(2) * t391 + t542 * t301 + t541 * t302;
t251 = -t541 * t288 + t542 * t289;
t250 = t542 * t288 + t541 * t289;
t249 = -t541 * t286 + t542 * t287;
t248 = t542 * t286 + t541 * t287;
t245 = pkin(6) * t594 + qJ(2) * t280 - t541 * t324;
t244 = pkin(6) * t595 + qJ(2) * t621 + t542 * t324 + t600;
t243 = -pkin(7) * t327 - t544 * t285 + t548 * t312;
t242 = -pkin(4) * t342 + pkin(8) * t256;
t241 = -pkin(6) * t286 - (pkin(3) * t545 - pkin(7) * t549) * t314;
t240 = -pkin(8) * t321 - t255;
t239 = -pkin(7) * t316 - t544 * t282 + t548 * t307;
t238 = -qJ(2) * t353 - t541 * t277 + t542 * t284;
t237 = -qJ(2) * t352 - t541 * t276 + t542 * t283;
t236 = -pkin(1) * t454 + qJ(2) * t355 + t542 * t277 + t541 * t284;
t235 = -pkin(1) * t453 + qJ(2) * t354 + t542 * t276 + t541 * t283;
t234 = -pkin(4) * t410 + pkin(8) * t323 + t256;
t233 = -t541 * t271 + t542 * t272;
t232 = t542 * t271 + t541 * t272;
t231 = -t541 * t269 + t542 * t270;
t230 = t542 * t269 + t541 * t270;
t229 = pkin(6) * t287 - (-pkin(3) * t549 - pkin(7) * t545 - pkin(2)) * t314;
t228 = t546 * t259 - t550 * t260;
t227 = t550 * t259 + t546 * t260;
t226 = t548 * t256 - t591;
t225 = t544 * t256 + t581;
t224 = t546 * t250 - t550 * t251;
t223 = t550 * t250 + t546 * t251;
t222 = t546 * t248 - t550 * t249;
t221 = t550 * t248 + t546 * t249;
t220 = t549 * t226 + t545 * t342;
t219 = t545 * t226 - t549 * t342;
t218 = -pkin(6) * t294 + t549 * t243 - t545 * t258;
t217 = -pkin(6) * t288 + t549 * t239 - t545 * t254;
t216 = -pkin(2) * t327 + pkin(6) * t296 + t545 * t243 + t549 * t258;
t215 = -pkin(3) * t225 - pkin(4) * t255;
t214 = t546 * t230 - t550 * t231;
t213 = t550 * t230 + t546 * t231;
t212 = -pkin(2) * t316 + pkin(6) * t289 + t545 * t239 + t549 * t254;
t211 = -pkin(7) * t273 - t544 * t234 + t548 * t240;
t210 = -qJ(2) * t248 - t541 * t229 + t542 * t241;
t209 = -pkin(7) * t225 - pkin(8) * t581 - t544 * t242;
t208 = pkin(1) * t314 + qJ(2) * t249 + t542 * t229 + t541 * t241;
t207 = -t541 * t219 + t542 * t220;
t206 = t542 * t219 + t541 * t220;
t205 = -pkin(6) * t269 + t549 * t211 - t545 * t257;
t204 = -pkin(2) * t273 + pkin(6) * t270 + t545 * t211 + t549 * t257;
t203 = -qJ(2) * t259 - t541 * t216 + t542 * t218;
t202 = -pkin(1) * t327 + qJ(2) * t260 + t542 * t216 + t541 * t218;
t201 = -qJ(2) * t250 - t541 * t212 + t542 * t217;
t200 = -pkin(1) * t316 + qJ(2) * t251 + t542 * t212 + t541 * t217;
t199 = t546 * t206 - t550 * t207;
t198 = t550 * t206 + t546 * t207;
t197 = -pkin(6) * t219 + t549 * t209 - t545 * t215;
t196 = -pkin(2) * t225 + pkin(6) * t220 + t545 * t209 + t549 * t215;
t195 = -qJ(2) * t230 - t541 * t204 + t542 * t205;
t194 = -pkin(1) * t273 + qJ(2) * t231 + t542 * t204 + t541 * t205;
t193 = -qJ(2) * t206 - t541 * t196 + t542 * t197;
t192 = -pkin(1) * t225 + qJ(2) * t207 + t542 * t196 + t541 * t197;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t540, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t540, 0, 0, 0, 0, 0, 0, t453, t454, 0, -t314, 0, 0, 0, 0, 0, 0, t316, t327, t273, t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t511, t510, 0, t464, 0, 0, 0, 0, 0, 0, -t603, t450, 0, t335, 0, 0, 0, 0, 0, 0, -t615, -t389, 0, t246, 0, 0, 0, 0, 0, 0, t308, t309, t325, t221, 0, 0, 0, 0, 0, 0, t223, t227, t213, t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t510, t511, 0, t465, 0, 0, 0, 0, 0, 0, -t450, -t603, 0, -t620, 0, 0, 0, 0, 0, 0, t389, -t615, 0, -t627, 0, 0, 0, 0, 0, 0, t310, t311, t326, t222, 0, 0, 0, 0, 0, 0, t224, t228, t214, t199; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, qJDD(1), -t519, t518, 0, 0, 0, 0, 0, 0, 0, qJDD(1), pkin(1) * t509 + t553, -pkin(1) * t508 - t448, 0, -pkin(1) * t404, 0, 0, 0, 0, 0, t535, -pkin(1) * t441 - pkin(2) * t499 - t396, -pkin(1) * t437 - pkin(2) * t496 - t397, 0, -pkin(1) * t280 - pkin(2) * t331, (t489 + t566) * t544, t548 * t488 + t544 * t491, t548 * t512 + t589, (t490 - t567) * t548, t544 * t514 + t579, 0, pkin(1) * t352 + pkin(2) * t415 + pkin(3) * t491 + pkin(7) * t456 - t580, pkin(1) * t353 + pkin(2) * t416 - pkin(3) * t488 + pkin(7) * t458 + t590, pkin(1) * t390 + pkin(2) * t443 + pkin(3) * t500 + pkin(7) * t494 + t315, pkin(1) * t248 + pkin(2) * t286 - pkin(3) * t378 + pkin(7) * t315, t548 * t376 + t544 * t377, t548 * t320 + t544 * t322, t548 * t398 + t544 * t400, t548 * t374 + t544 * t375, t548 * t399 + t544 * t401, t548 * t413 + t544 * t414, pkin(1) * t250 + pkin(2) * t288 - pkin(3) * t380 + pkin(7) * t317 + t548 * t282 + t544 * t307, pkin(1) * t259 + pkin(2) * t294 - pkin(3) * t604 + pkin(7) * t328 + t548 * t285 + t544 * t312, pkin(1) * t230 + pkin(2) * t269 - pkin(3) * t410 + pkin(7) * t275 + t548 * t234 + t544 * t240, pkin(1) * t206 + pkin(2) * t219 - pkin(3) * t342 + pkin(7) * t226 - pkin(8) * t591 + t548 * t242; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, -t510, 0, t511, 0, t565, -t487, -t465, -pkin(5) * t465, 0, 0, -t450, 0, -t603, 0, t619, t614, t620, pkin(5) * t620 + qJ(2) * t584 + t550 * t393, 0, 0, t389, 0, -t615, 0, t631, t630, t627, pkin(5) * t627 + t550 * t244 + t546 * t245, t550 * t360 + t546 * t362, t550 * t343 + t546 * t344, t550 * t370 + t546 * t372, t550 * t359 + t546 * t361, t550 * t369 + t546 * t371, t550 * t411 + t546 * t412, -pkin(5) * t310 + t550 * t235 + t546 * t237, -pkin(5) * t311 + t550 * t236 + t546 * t238, -pkin(5) * t326 + t550 * t252 + t546 * t253, -pkin(5) * t222 + t550 * t208 + t546 * t210, t550 * t266 + t546 * t268, t550 * t232 + t546 * t233, t550 * t261 + t546 * t263, t550 * t265 + t546 * t267, t550 * t262 + t546 * t264, t550 * t293 + t546 * t295, -pkin(5) * t224 + t550 * t200 + t546 * t201, -pkin(5) * t228 + t550 * t202 + t546 * t203, -pkin(5) * t214 + t550 * t194 + t546 * t195, -pkin(5) * t199 + t550 * t192 + t546 * t193; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, -t511, 0, -t510, 0, t487, t565, t464, pkin(5) * t464, 0, 0, t603, 0, -t450, 0, -t614, t619, t335, pkin(5) * t335 - qJ(2) * t576 + t546 * t393, 0, 0, t615, 0, t389, 0, -t630, t631, t246, pkin(5) * t246 + t546 * t244 - t550 * t245, t546 * t360 - t550 * t362, t546 * t343 - t550 * t344, t546 * t370 - t550 * t372, t546 * t359 - t550 * t361, t546 * t369 - t550 * t371, t546 * t411 - t550 * t412, pkin(5) * t308 + t546 * t235 - t550 * t237, pkin(5) * t309 + t546 * t236 - t550 * t238, pkin(5) * t325 + t546 * t252 - t550 * t253, pkin(5) * t221 + t546 * t208 - t550 * t210, t546 * t266 - t550 * t268, t546 * t232 - t550 * t233, t546 * t261 - t550 * t263, t546 * t265 - t550 * t267, t546 * t262 - t550 * t264, t546 * t293 - t550 * t295, pkin(5) * t223 + t546 * t200 - t550 * t201, pkin(5) * t227 + t546 * t202 - t550 * t203, pkin(5) * t213 + t546 * t194 - t550 * t195, pkin(5) * t198 + t546 * t192 - t550 * t193;];
tauB_reg = t1;
