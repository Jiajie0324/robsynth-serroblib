% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:46
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:46:06
% EndTime: 2019-12-05 18:46:21
% DurationCPUTime: 10.65s
% Computational Cost: add. (10633->363), mult. (20670->429), div. (0->0), fcn. (22778->6), ass. (0->293)
t576 = qJD(3) + qJD(4);
t335 = sin(qJ(2));
t535 = -pkin(7) - pkin(6);
t316 = t535 * t335;
t334 = sin(qJ(3));
t468 = t334 * t316;
t336 = cos(qJ(3));
t337 = cos(qJ(2));
t542 = t535 * t337;
t548 = t336 * t542;
t262 = t548 - t468;
t311 = t334 * t335 - t336 * t337;
t208 = t311 * pkin(8) + t262;
t333 = sin(qJ(4));
t522 = cos(qJ(4));
t448 = t334 * t337 + t336 * t335;
t551 = t336 * t316 + t334 * t542;
t558 = -t448 * pkin(8) + t551;
t594 = t522 * t208 - t333 * t558;
t596 = (qJD(2) + t576) * t594;
t416 = qJD(2) + qJD(3);
t543 = t522 * t448;
t526 = t543 / 0.2e1;
t242 = -t543 / 0.2e1 + t526;
t365 = t522 * t311 + t333 * t448;
t560 = t365 * qJ(5);
t391 = t560 / 0.2e1;
t593 = t594 + 0.2e1 * t391;
t598 = t594 + t560;
t599 = qJD(4) * t593 + t242 * qJD(5) + t416 * t598;
t521 = t598 * pkin(4);
t409 = t521 / 0.2e1;
t588 = -t560 / 0.2e1 + t391;
t592 = qJD(1) * t588;
t471 = t333 * t311;
t177 = -t471 + 0.2e1 * t526;
t591 = -qJD(4) * t588 - t177 * qJD(5);
t566 = t522 * t558;
t534 = -t566 / 0.2e1;
t574 = t333 * t208;
t575 = t534 - t574 / 0.2e1;
t586 = 0.2e1 * t575;
t274 = t333 * pkin(3);
t546 = t543 - t471;
t552 = t546 * qJ(5);
t580 = t566 + t574;
t583 = t580 - t552;
t589 = t583 * t274;
t532 = t552 / 0.2e1;
t584 = 0.2e1 * t532 + t586;
t587 = qJD(4) * t584;
t585 = t580 * t333;
t375 = t566 / 0.2e1;
t572 = t534 + t375;
t579 = t572 - t552 / 0.2e1 + t532;
t582 = t579 * qJD(1);
t165 = t365 * qJD(5);
t581 = qJD(4) * t579 + t165;
t578 = qJD(4) * t572;
t577 = t572 * qJD(1);
t571 = qJD(2) * t586;
t243 = t365 ^ 2;
t536 = t546 ^ 2;
t565 = t243 - t536;
t568 = t565 * qJD(1);
t562 = t416 * t551;
t561 = t365 * pkin(4);
t326 = -t337 * pkin(2) - pkin(1);
t279 = t311 * pkin(3) + t326;
t157 = t279 + t561;
t494 = t157 * t365;
t426 = t546 * qJD(1);
t559 = t365 * t426;
t427 = t365 * qJD(4);
t556 = -t365 * t416 - t427;
t366 = t548 / 0.2e1;
t555 = t157 * t546;
t398 = t522 * t336;
t470 = t333 * t334;
t305 = (t398 - t470) * pkin(2);
t550 = -t305 / 0.2e1;
t545 = t546 * t416;
t145 = t416 * t242;
t402 = t336 * pkin(2) + pkin(3);
t317 = t522 * t402;
t414 = t522 * pkin(3);
t376 = -t414 / 0.2e1;
t356 = -t317 / 0.2e1 + t376;
t374 = -t398 / 0.2e1;
t275 = pkin(2) * t374 - t356;
t449 = t275 * qJD(2) + qJD(3) * t414;
t514 = pkin(3) * qJD(3);
t451 = t274 * qJD(2) + t333 * t514;
t411 = t274 * qJD(4);
t539 = t365 * qJD(1);
t388 = t448 * pkin(3);
t520 = t546 * pkin(4);
t453 = t520 / 0.2e1 + t388 / 0.2e1;
t425 = t546 * qJD(4);
t538 = t177 * t416 + t425;
t373 = t333 * t402;
t399 = t522 * t334;
t298 = pkin(2) * t399 + t373;
t179 = t298 * t546;
t469 = t333 * t336;
t304 = (t399 + t469) * pkin(2);
t537 = -t179 / 0.2e1 + t365 * t550 + t304 * t546 / 0.2e1;
t220 = t546 * t274;
t533 = -t220 / 0.2e1;
t297 = pkin(2) * t470 - t317;
t290 = pkin(4) - t297;
t531 = t290 / 0.2e1;
t530 = -t297 / 0.2e1;
t529 = t297 / 0.2e1;
t527 = t298 / 0.2e1;
t525 = -t304 / 0.2e1;
t325 = t414 + pkin(4);
t524 = -t325 / 0.2e1;
t523 = t325 / 0.2e1;
t517 = t304 * pkin(4);
t332 = t335 * pkin(2);
t515 = pkin(2) * qJD(3);
t512 = qJD(2) * pkin(2);
t14 = pkin(4) * t555;
t509 = qJD(1) * t14;
t24 = t365 * t598 - t546 * t583;
t508 = qJD(1) * t24;
t180 = t388 + t520;
t69 = t180 * t365 + t555;
t501 = qJD(1) * t69;
t70 = t180 * t546 - t494;
t500 = qJD(1) * t70;
t75 = -t546 * t561 - t555;
t499 = qJD(1) * t75;
t76 = -t536 * pkin(4) + t494;
t498 = qJD(1) * t76;
t158 = t332 + t180;
t12 = t157 * t158;
t497 = t12 * qJD(1);
t13 = t157 * t180;
t496 = t13 * qJD(1);
t280 = t332 + t388;
t20 = t279 * t280;
t490 = t20 * qJD(1);
t21 = t279 * t388;
t489 = t21 * qJD(1);
t346 = t533 - t537;
t25 = -(t524 + t531) * t365 + t346;
t485 = t25 * qJD(1);
t27 = -(t376 + t530) * t365 + t346;
t484 = t27 * qJD(1);
t483 = t290 * t365;
t482 = t297 * t365;
t481 = t298 * t305;
t477 = t325 * t365;
t476 = t326 * t311;
t389 = t529 + t531;
t371 = t389 * t365;
t408 = -t561 / 0.2e1;
t40 = t408 + t371;
t466 = t40 * qJD(1);
t67 = t158 * t365 + t555;
t464 = t67 * qJD(1);
t68 = t158 * t546 - t494;
t463 = t68 * qJD(1);
t355 = t365 * t527 + t531 * t546;
t384 = t332 / 0.2e1 + t453;
t71 = t355 + t384;
t462 = t71 * qJD(1);
t407 = -t274 / 0.2e1;
t352 = t365 * t407 + t524 * t546;
t92 = t352 - t453;
t459 = t92 * qJD(1);
t420 = t298 * qJD(2);
t452 = t274 * qJD(3) + t420;
t421 = t297 * qJD(2);
t450 = t275 * qJD(3) - t421;
t447 = qJD(1) * t311;
t446 = qJD(1) * t337;
t445 = qJD(4) * t598;
t444 = qJD(5) * t546;
t109 = t326 * t332;
t443 = t109 * qJD(1);
t351 = (t376 + t523) * t365;
t111 = t408 + t351;
t442 = t111 * qJD(1);
t159 = t279 * t546;
t114 = t280 * t365 + t159;
t441 = t114 * qJD(1);
t160 = t279 * t365;
t115 = t280 * t546 - t160;
t440 = t115 * qJD(1);
t127 = -t365 * t388 - t159;
t439 = t127 * qJD(1);
t128 = -t388 * t546 + t160;
t438 = t128 * qJD(1);
t148 = t243 + t536;
t436 = t148 * qJD(1);
t435 = t177 * qJD(1);
t207 = t311 ^ 2 - t448 ^ 2;
t433 = t207 * qJD(1);
t221 = t311 * t332 + t326 * t448;
t432 = t221 * qJD(1);
t222 = t448 * t332 - t476;
t431 = t222 * qJD(1);
t429 = t242 * qJD(1);
t261 = -t548 / 0.2e1 + t366;
t424 = t261 * qJD(1);
t285 = t298 * qJD(4);
t320 = -t335 ^ 2 + t337 ^ 2;
t419 = t320 * qJD(1);
t418 = t335 * qJD(2);
t417 = t337 * qJD(2);
t415 = t522 / 0.2e1;
t413 = pkin(1) * t335 * qJD(1);
t412 = pkin(1) * t446;
t410 = pkin(4) * t426;
t256 = t407 - t373 / 0.2e1 + (-t399 - t469 / 0.2e1) * pkin(2);
t404 = t256 * qJD(3) - t285 - t420;
t257 = (t374 + t470) * pkin(2) + t356;
t281 = t297 * qJD(4);
t403 = t257 * qJD(3) + t281 + t421;
t397 = t279 * t539;
t396 = t279 * t426;
t394 = t326 * t447;
t393 = t335 * t417;
t387 = pkin(2) * t416;
t383 = qJD(1) * t448;
t382 = t448 * qJD(3);
t380 = qJD(4) * t414;
t372 = t533 + t537;
t369 = t326 * t383;
t343 = -(-t531 + t305 / 0.2e1) * t598 + (t525 + t527) * t583;
t353 = t598 * t523 + t589 / 0.2e1;
t1 = -t343 + t353;
t153 = -t290 * t304 + t481;
t364 = -t1 * qJD(1) + t153 * qJD(2);
t146 = (-t290 - t297) * t298;
t3 = -t389 * t598 + t409;
t363 = qJD(1) * t3 - qJD(2) * t146;
t342 = -(-t529 + t550) * t594 + (-t525 - t298 / 0.2e1) * t580;
t347 = (t585 / 0.2e1 + t594 * t415) * pkin(3);
t10 = t347 + t342;
t154 = t297 * t304 + t481;
t360 = -t10 * qJD(1) + t154 * qJD(2);
t359 = t304 * qJD(2);
t63 = t375 + t574 / 0.2e1 + t575;
t358 = -t63 * qJD(1) + t305 * qJD(2);
t357 = -t411 - t451;
t354 = -t380 - t449;
t340 = (t298 * t415 - t333 * t389) * pkin(3) + t298 * t524;
t113 = t517 / 0.2e1 + t340;
t291 = (t414 - t325) * t274;
t341 = (pkin(3) * t415 + t524) * t598;
t6 = -t521 / 0.2e1 - t341;
t348 = -qJD(1) * t6 - qJD(2) * t113 - qJD(3) * t291;
t255 = t416 * t448;
t321 = t335 * t446;
t300 = t305 * qJD(3);
t299 = t304 * qJD(3);
t287 = t305 * t274;
t259 = t311 * t383;
t258 = t448 * t447;
t254 = t416 * t311;
t239 = t561 / 0.2e1;
t232 = -t300 + t281;
t231 = -t299 - t285;
t228 = t242 * qJD(4);
t213 = -t468 + 0.2e1 * t366;
t149 = t546 * t539;
t112 = -t517 / 0.2e1 + t340;
t110 = t239 + t351;
t100 = -t177 * qJD(4) - t545;
t93 = t352 + t453;
t72 = -t355 + t384;
t54 = t63 * qJD(2);
t53 = t63 * qJD(3);
t48 = t556 * t546;
t47 = (t425 + t545) * t365;
t44 = t586 + t552;
t42 = -t275 * qJD(4) + t358;
t41 = t359 - t411;
t39 = t239 + t371;
t38 = t257 * qJD(4) - t300 - t358;
t37 = t256 * qJD(4) - t299 - t359;
t28 = -t482 / 0.2e1 - t365 * t376 + t372;
t26 = t483 / 0.2e1 + t477 / 0.2e1 + t372;
t22 = (qJD(4) + t416) * t565;
t11 = t347 - t342;
t5 = t409 - t341;
t4 = t409 - (t530 - t290 / 0.2e1) * t598;
t2 = t343 + t353;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, t320 * qJD(2), 0, -t393, 0, 0, -pkin(1) * t418, -pkin(1) * t417, 0, 0, (-t448 * qJD(2) - t382) * t311, t416 * t207, 0, t255 * t311, 0, 0, t221 * qJD(2) + t326 * t382, t222 * qJD(2) - qJD(3) * t476, 0, t109 * qJD(2), t48, t22, 0, t47, 0, 0, t114 * qJD(2) - t127 * qJD(3) + t279 * t425, t115 * qJD(2) - t128 * qJD(3) - t279 * t427, 0, t20 * qJD(2) + t21 * qJD(3), t48, t22, 0, t47, 0, 0, t67 * qJD(2) + t69 * qJD(3) - t75 * qJD(4), t68 * qJD(2) + t70 * qJD(3) - t76 * qJD(4), t148 * qJD(5), t12 * qJD(2) + t13 * qJD(3) + t14 * qJD(4) + t24 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321, t419, t417, -t321, -t418, 0, -pkin(6) * t417 - t413, pkin(6) * t418 - t412, 0, 0, -t259, t433, -t254, t258, -t255, 0, t262 * qJD(2) + t213 * qJD(3) + t432, t431 - t562, (t336 * t311 - t334 * t448) * t512, t443 + (t262 * t336 + t334 * t551) * t512, -t559, t568, t556, t149, t100, 0, t441 + t596, -qJD(2) * t580 + t576 * t586 + t440, (-t179 - t482) * qJD(2) + t28 * qJD(3), t490 + (-t297 * t594 + t298 * t580) * qJD(2) + t11 * qJD(3), -t559, t568, t556, t149, t100, 0, t464 + t599, -qJD(2) * t583 + t44 * qJD(3) + t463 + t587, (-t179 + t483) * qJD(2) + t26 * qJD(3) + t39 * qJD(4), t497 + (t290 * t598 + t298 * t583) * qJD(2) + t2 * qJD(3) + t4 * qJD(4) + t72 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259, t433, -t254, t258, -t255, 0, t213 * qJD(2) + qJD(3) * t262 + t369, -t394 - t562, 0, 0, -t559, t568, t556, t149, t100, 0, -t439 + t596, -qJD(3) * t580 + qJD(4) * t586 - t438 + t571, t28 * qJD(2) + (t365 * t414 - t220) * qJD(3), t489 + t11 * qJD(2) + (t522 * t594 + t585) * t514, -t559, t568, t556, t149, t100, 0, t501 + t599, qJD(2) * t44 - qJD(3) * t583 + t500 + t587, t26 * qJD(2) + (-t220 + t477) * qJD(3) + t110 * qJD(4), t496 + t2 * qJD(2) + (t325 * t598 + t589) * qJD(3) + t5 * qJD(4) + t93 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t559, t568, t556, t559, -t538, 0, t396 + t596, qJD(3) * t586 - qJD(4) * t580 - t397 + t571, 0, 0, -t559, t568, t556, t559, -t538, 0, t416 * t593 + t445 - t499, -qJD(4) * t583 + t416 * t584 - t498, pkin(4) * t427 + qJD(2) * t39 + qJD(3) * t110, pkin(4) * t445 + qJD(2) * t4 + qJD(3) * t5 + t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, 0, t436, qJD(2) * t72 + qJD(3) * t93 + t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t321, -t419, 0, t321, 0, 0, t413, t412, 0, 0, t259, -t433, 0, -t258, 0, 0, qJD(3) * t261 - t432, -t431, 0, -t443, t559, -t568, 0, -t149, t228, 0, -t441, -t440 + t53 + t578, -qJD(3) * t27, -qJD(3) * t10 - t490, t559, -t568, 0, -t149, t228, 0, -t464 + t591, -t463 + t53 + t581, -qJD(3) * t25 + qJD(4) * t40, -qJD(3) * t1 - qJD(4) * t3 - qJD(5) * t71 - t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334 * t515, -t336 * t515, 0, 0, 0, 0, 0, 0, 0, 0, t231, t232, 0, t154 * qJD(3), 0, 0, 0, 0, 0, 0, t231, t232, 0, qJD(3) * t153 + qJD(4) * t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334 * t387 + t424, -t336 * t387, 0, 0, 0, 0, 0, 0, 0, 0, t37, t38, -t484, (-t304 * t414 + t287) * qJD(3) + t360, 0, 0, 0, 0, 0, 0, t37, t38, -t485, (-t304 * t325 + t287) * qJD(3) + t112 * qJD(4) + t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t429, 0, t404, t403 + t577, 0, 0, 0, 0, 0, 0, t429, 0, t404 - t592, t403 + t582, t466, -pkin(4) * t285 + qJD(3) * t112 - t363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t435, t539, 0, -t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259, -t433, 0, -t258, 0, 0, -t261 * qJD(2) - t369, t394, 0, 0, t559, -t568, 0, -t149, t228, 0, t439, t438 - t54 + t578, qJD(2) * t27, qJD(2) * t10 - t489, t559, -t568, 0, -t149, t228, 0, -t501 + t591, -t500 - t54 + t581, qJD(2) * t25 + qJD(4) * t111, qJD(2) * t1 + qJD(4) * t6 + qJD(5) * t92 - t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t334 * t512 - t424, t336 * t512, 0, 0, 0, 0, 0, 0, 0, 0, t41, t42, t484, -t360, 0, 0, 0, 0, 0, 0, t41, t42, t485, qJD(4) * t113 - t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t411, -t380, 0, 0, 0, 0, 0, 0, 0, 0, -t411, -t380, 0, t291 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t429, 0, t357, t354 + t577, 0, 0, 0, 0, 0, 0, t429, 0, t357 - t592, t354 + t582, t442, -pkin(4) * t411 - t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t435, t539, 0, t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t559, -t568, 0, -t559, -t145, 0, -t396, -t416 * t572 + t397, 0, 0, t559, -t568, 0, -t559, -t145, 0, t416 * t588 - t444 + t499, -t416 * t579 + t165 + t498, -qJD(2) * t40 - qJD(3) * t111, -pkin(4) * t444 + qJD(2) * t3 - qJD(3) * t6 - t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t429, 0, t452, t450 - t577, 0, 0, 0, 0, 0, 0, -t429, 0, t452 + t592, t450 - t582, -t466, -qJD(3) * t113 + t363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t429, 0, t451, t449 - t577, 0, 0, 0, 0, 0, 0, -t429, 0, t451 + t592, t449 - t582, -t442, t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, t539, 0, -t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t538, t556, -t436, pkin(4) * t425 + qJD(2) * t71 - qJD(3) * t92 - t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t435, -t539, 0, t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t435, -t539, 0, -t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t426, -t539, 0, t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t7;
