% Calculate vector of centrifugal and Coriolis load on the joints for
% S5RRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:46
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5RRRRP1_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP1_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP1_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP1_coriolisvecJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP1_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP1_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP1_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:44:46
% EndTime: 2019-12-05 18:45:50
% DurationCPUTime: 49.70s
% Computational Cost: add. (27482->926), mult. (27994->1155), div. (0->0), fcn. (22020->8), ass. (0->526)
t979 = Icges(5,4) + Icges(6,4);
t980 = Icges(5,1) + Icges(6,1);
t976 = Icges(5,2) + Icges(6,2);
t973 = Icges(5,5) + Icges(6,5);
t972 = Icges(5,6) + Icges(6,6);
t504 = qJ(2) + qJ(3);
t487 = qJ(4) + t504;
t458 = cos(t487);
t978 = t979 * t458;
t457 = sin(t487);
t977 = t979 * t457;
t975 = t980 * t458 - t977;
t974 = -t976 * t457 + t978;
t971 = Icges(5,3) + Icges(6,3);
t966 = t976 * t458 + t977;
t970 = t980 * t457 + t978;
t506 = sin(qJ(1));
t768 = t457 * t506;
t969 = t979 * t768;
t508 = cos(qJ(1));
t968 = t972 * t508;
t967 = t973 * t508;
t765 = t458 * t506;
t877 = t979 * t765 - t976 * t768 - t968;
t876 = t972 * t506 + t974 * t508;
t951 = t973 * t506 + t975 * t508;
t931 = -t980 * t765 + t967 + t969;
t950 = -t972 * t457 + t973 * t458;
t962 = t973 * t457 + t972 * t458;
t961 = t971 * t508;
t960 = t974 + t970;
t959 = t975 - t966;
t958 = -t508 * t966 + t951;
t957 = -t508 * t970 - t876;
t956 = t506 * t970 + t877;
t952 = -t973 * t765 + t972 * t768 + t961;
t955 = t971 * t506 + t950 * t508;
t954 = t966 * t457 - t458 * t970;
t949 = t877 * t457 + t931 * t458;
t953 = t951 * t765;
t500 = qJD(2) + qJD(3);
t466 = qJD(4) + t500;
t948 = t959 * t466;
t947 = t960 * t466;
t946 = -t951 * qJD(1) + t956 * t466;
t945 = t957 * t466 + (-t506 * t975 + t967) * qJD(1);
t944 = t876 * qJD(1) + (-t966 * t506 - t931) * t466;
t943 = t958 * t466 + (-t506 * t974 + t968) * qJD(1);
t942 = t962 * t508;
t941 = t962 * t506;
t940 = t876 * t457;
t509 = -pkin(7) - pkin(6);
t501 = -pkin(8) + t509;
t473 = -qJ(5) + t501;
t939 = rSges(6,3) - t473;
t938 = t954 * t506 + t942;
t937 = -t954 * t508 + t941;
t936 = t949 * t506;
t935 = t955 * t508 - t953;
t934 = t955 * qJD(1);
t764 = t458 * t508;
t870 = -t955 * t506 - t951 * t764;
t933 = t952 * t506 + t931 * t764;
t932 = t952 * t508;
t907 = t932 - t936;
t906 = -t876 * t768 - t935;
t767 = t457 * t508;
t905 = -t877 * t767 - t933;
t904 = -t876 * t767 - t870;
t930 = t962 * qJD(1) - t947 * t457 + t948 * t458;
t929 = -t943 * t457 + t945 * t458 + t934;
t928 = t952 * qJD(1) + t944 * t457 + t946 * t458;
t470 = qJD(2) * t506;
t410 = qJD(3) * t506 + t470;
t375 = qJD(4) * t506 + t410;
t376 = t466 * t508;
t927 = t959 * qJD(1) + t957 * t375 + t956 * t376;
t926 = (t976 * t765 + t931 + t969) * t376 + t958 * t375 + t960 * qJD(1);
t925 = t954 * qJD(1) + t950 * t466;
t924 = t949 * qJD(1) - t941 * t466 + t934;
t923 = -t942 * t466 + (-t951 * t458 - t950 * t506 + t940 + t961) * qJD(1);
t922 = t937 * qJD(1);
t472 = cos(t504);
t456 = pkin(3) * t472;
t507 = cos(qJ(2));
t459 = t507 * pkin(2) + pkin(1);
t396 = t456 + t459;
t330 = pkin(4) * t458 + t396;
t921 = -rSges(6,1) * t765 + rSges(6,2) * t768 - t506 * t330 + t939 * t508;
t488 = t506 * rSges(6,3);
t920 = rSges(6,1) * t764 - rSges(6,2) * t767 + t508 * t330 + t488;
t919 = t938 * qJD(1);
t505 = sin(qJ(2));
t824 = pkin(2) * qJD(2);
t680 = t505 * t824;
t471 = sin(t504);
t834 = pkin(3) * t471;
t362 = -t500 * t834 - t680;
t833 = pkin(4) * t457;
t241 = -t466 * t833 + t362;
t467 = qJD(5) * t506;
t692 = qJD(1) * t506;
t666 = t457 * t692;
t691 = qJD(1) * t508;
t918 = rSges(6,2) * t666 + rSges(6,3) * t691 + t508 * t241 + t467;
t917 = -t924 * t506 + t928 * t508;
t916 = t923 * t506 + t929 * t508;
t915 = t928 * t506 + t924 * t508;
t914 = t929 * t506 - t923 * t508;
t913 = t906 * t375 - t907 * t376 - t919;
t912 = t904 * t375 - t905 * t376 + t922;
t911 = t925 * t506 + t930 * t508;
t910 = t930 * t506 - t925 * t508;
t909 = t946 * t457 - t944 * t458;
t908 = t945 * t457 + t943 * t458;
t331 = t508 * t362;
t554 = -t376 * t457 - t458 * t692;
t678 = t376 * t458;
t699 = -t473 + t501;
t717 = t330 - t396;
t822 = rSges(6,1) * t554 - rSges(6,2) * t678 - t331 + (-t506 * t717 + t508 * t699) * qJD(1) + t918;
t363 = rSges(6,1) * t457 + rSges(6,2) * t458;
t312 = t363 * t506;
t826 = rSges(6,1) * t458;
t365 = -rSges(6,2) * t457 + t826;
t440 = t501 * t692;
t468 = qJD(5) * t508;
t757 = t473 * t506;
t821 = -t466 * t312 + t440 - t468 + (t241 - t362) * t506 + (t488 - t757 + (t365 + t717) * t508) * qJD(1);
t903 = -t931 * t457 + t877 * t458;
t902 = t951 * t457 + t876 * t458;
t711 = t506 * t396 + t508 * t501;
t751 = t711 + t921;
t368 = t508 * t396;
t750 = t506 * t699 - t368 + t920;
t759 = t472 * t506;
t762 = t471 * t506;
t803 = Icges(4,6) * t508;
t285 = Icges(4,4) * t759 - Icges(4,2) * t762 - t803;
t451 = Icges(4,4) * t472;
t385 = Icges(4,1) * t471 + t451;
t895 = -t385 * t506 - t285;
t591 = -Icges(4,2) * t471 + t451;
t286 = Icges(4,6) * t506 + t508 * t591;
t894 = -t385 * t508 - t286;
t815 = Icges(4,4) * t471;
t386 = Icges(4,1) * t472 - t815;
t288 = Icges(4,5) * t506 + t386 * t508;
t383 = Icges(4,2) * t472 + t815;
t893 = -t383 * t508 + t288;
t411 = t500 * t508;
t349 = t411 * t456;
t665 = t471 * t692;
t412 = pkin(3) * t665;
t892 = t349 + t412;
t887 = t385 + t591;
t886 = -t926 * t457 + t927 * t458;
t885 = t950 * qJD(1) - t942 * t375 + t941 * t376;
t400 = pkin(4) * t666;
t884 = pkin(4) * t678 + t363 * t692 + t376 * t365 + t400;
t883 = 0.2e1 * qJD(2);
t882 = rSges(3,2) * t505;
t707 = rSges(5,2) * t666 + rSges(5,3) * t691;
t155 = rSges(5,1) * t554 - rSges(5,2) * t678 + t707;
t827 = rSges(5,1) * t458;
t366 = -rSges(5,2) * t457 + t827;
t271 = t366 * t466;
t685 = qJD(1) * qJD(2);
t455 = t508 * t685;
t684 = qJD(1) * qJD(3);
t390 = t508 * t684 + t455;
t683 = qJD(1) * qJD(4);
t335 = t508 * t683 + t390;
t364 = rSges(5,1) * t457 + rSges(5,2) * t458;
t752 = t507 * qJD(2) ^ 2;
t677 = t506 * t752;
t464 = t508 * t509;
t465 = pkin(6) * t691;
t690 = qJD(2) * t508;
t660 = t505 * t690;
t609 = pkin(2) * t660;
t830 = pkin(1) - t459;
t203 = -t609 - t465 + (t506 * t830 - t464) * qJD(1);
t380 = qJD(1) * (-pkin(1) * t692 + t465);
t748 = qJD(1) * t203 + t380;
t537 = (-t455 * t505 - t677) * pkin(2) + t748;
t698 = -t501 + t509;
t709 = t396 - t459;
t125 = t609 + t331 + (-t506 * t709 + t508 * t698) * qJD(1);
t760 = t472 * t500;
t879 = qJD(1) * t125 + (-t390 * t471 - t410 * t760) * pkin(3);
t42 = qJD(1) * t155 - t271 * t375 - t335 * t364 + t537 + t879;
t881 = t42 * t506;
t703 = t506 * t459 + t464;
t205 = t703 - t711;
t434 = t508 * t459;
t206 = t506 * t698 + t368 - t434;
t498 = t508 * pkin(6);
t428 = pkin(1) * t506 - t498;
t280 = t428 - t703;
t496 = t506 * pkin(6);
t429 = t508 * pkin(1) + t496;
t612 = -t506 * t509 + t434;
t281 = t612 - t429;
t736 = -t280 * t470 + t281 * t690;
t570 = -t410 * t205 + t206 * t411 + t736;
t34 = -t375 * t751 + t376 * t750 + t570;
t796 = qJD(1) * t34;
t880 = t506 * t796;
t401 = qJD(1) * t428;
t878 = qJD(1) * t280 - t401;
t875 = t467 - t609;
t486 = Icges(3,4) * t507;
t592 = -Icges(3,2) * t505 + t486;
t421 = Icges(3,1) * t505 + t486;
t209 = t375 * t312;
t568 = t506 * t821 + t508 * t822 - t691 * t751;
t613 = -t362 * t506 + t440;
t438 = t506 * t680;
t701 = t509 * t692 + t438;
t126 = t691 * t709 - t613 + t701;
t676 = t508 * t125 + t506 * t126 - t205 * t691;
t874 = t568 + t676 + t209;
t873 = t940 + t952;
t872 = t884 + t892;
t313 = t364 * t506;
t611 = qJD(1) * t313 - t376 * t366;
t871 = t364 * t692 - t611 + t892;
t291 = rSges(4,1) * t759 - rSges(4,2) * t762 - t508 * rSges(4,3);
t825 = rSges(4,2) * t472;
t387 = rSges(4,1) * t471 + t825;
t555 = -t387 * t411 - t609;
t726 = t280 - t428;
t107 = (-t291 + t726) * qJD(1) + t555;
t490 = t506 * rSges(4,3);
t758 = t472 * t508;
t761 = t471 * t508;
t292 = rSges(4,1) * t758 - rSges(4,2) * t761 + t490;
t725 = -t281 - t292;
t108 = -t387 * t410 - t438 + (t429 - t725) * qJD(1);
t344 = t387 * t506;
t345 = t387 * t508;
t828 = rSges(4,1) * t472;
t388 = -rSges(4,2) * t471 + t828;
t94 = t291 * t410 + t292 * t411 + t736;
t869 = -t107 * (qJD(1) * t344 - t411 * t388) - t108 * (-qJD(1) * t345 - t388 * t410) - t94 * (-t410 * t344 - t345 * t411);
t754 = t506 * t507;
t756 = t505 * t506;
t800 = Icges(3,3) * t508;
t324 = Icges(3,5) * t754 - Icges(3,6) * t756 - t800;
t447 = Icges(3,4) * t756;
t812 = Icges(3,5) * t508;
t328 = Icges(3,1) * t754 - t447 - t812;
t804 = Icges(3,6) * t508;
t326 = Icges(3,4) * t754 - Icges(3,2) * t756 - t804;
t781 = t326 * t505;
t580 = -t328 * t507 + t781;
t116 = -t324 * t508 - t506 * t580;
t382 = Icges(4,5) * t472 - Icges(4,6) * t471;
t381 = Icges(4,5) * t471 + Icges(4,6) * t472;
t773 = t381 * t508;
t783 = t286 * t471;
t799 = Icges(4,3) * t508;
t864 = -t500 * t773 + (-t288 * t472 - t382 * t506 + t783 + t799) * qJD(1);
t432 = Icges(4,4) * t762;
t811 = Icges(4,5) * t508;
t287 = Icges(4,1) * t759 - t432 - t811;
t582 = t285 * t471 - t287 * t472;
t284 = Icges(4,3) * t506 + t382 * t508;
t695 = qJD(1) * t284;
t774 = t381 * t506;
t863 = qJD(1) * t582 - t500 * t774 + t695;
t418 = Icges(3,5) * t507 - Icges(3,6) * t505;
t417 = Icges(3,5) * t505 + Icges(3,6) * t507;
t559 = qJD(2) * t417;
t816 = Icges(3,4) * t505;
t422 = Icges(3,1) * t507 - t816;
t329 = Icges(3,5) * t506 + t422 * t508;
t327 = Icges(3,6) * t506 + t508 * t592;
t780 = t327 * t505;
t579 = -t329 * t507 + t780;
t862 = -t508 * t559 + (-t418 * t506 + t579 + t800) * qJD(1);
t325 = Icges(3,3) * t506 + t418 * t508;
t694 = qJD(1) * t325;
t861 = qJD(1) * t580 - t506 * t559 + t694;
t576 = t383 * t471 - t385 * t472;
t858 = qJD(1) * t576 + t382 * t500;
t419 = Icges(3,2) * t507 + t816;
t575 = t419 * t505 - t421 * t507;
t857 = t575 * qJD(1) + t418 * qJD(2);
t348 = t411 * t834;
t856 = qJD(1) * t205 - t348 + t878;
t855 = t506 * (-t419 * t508 + t329) - t508 * (-Icges(3,2) * t754 + t328 - t447);
t270 = t365 * t466;
t766 = t458 * t466;
t18 = -pkin(2) * t677 - t270 * t375 - t335 * t363 + (-t335 * t457 - t375 * t766) * pkin(4) + (t822 + t875) * qJD(1) + t748 + t879;
t454 = t506 * t685;
t389 = t506 * t684 + t454;
t334 = t506 * t683 + t389;
t574 = -pkin(2) * t508 * t752 + qJD(1) * t438;
t553 = -t500 * t349 + t389 * t834 + t574;
t204 = (-t508 * t830 - t496) * qJD(1) - t701;
t397 = t429 * qJD(1);
t747 = -t204 - t397;
t675 = -t126 + t747;
t19 = -t270 * t376 + t334 * t363 + (t334 * t457 - t376 * t766) * pkin(4) + (t675 + t468 - t821) * qJD(1) + t553;
t672 = -t206 - t750;
t607 = -t281 + t672;
t646 = -t363 - t833;
t347 = t410 * t834;
t714 = -t347 - t438;
t64 = -t468 + t646 * t375 + (t429 - t607) * qJD(1) + t714;
t854 = (qJD(1) * t64 + t19) * t508 + t18 * t506;
t489 = t506 * rSges(5,3);
t157 = -t466 * t313 + (t366 * t508 + t489) * qJD(1);
t43 = -t271 * t376 + t334 * t364 + (-t157 + t675) * qJD(1) + t553;
t278 = rSges(5,1) * t764 - rSges(5,2) * t767 + t489;
t746 = -t206 - t278;
t669 = -t281 + t746;
t89 = -t364 * t375 + (t429 - t669) * qJD(1) + t714;
t853 = (qJD(1) * t89 + t43) * t508 + t881;
t850 = qJD(1) * t887 + t410 * t893 - t411 * (-Icges(4,2) * t759 + t287 - t432);
t849 = t334 / 0.2e1;
t848 = t335 / 0.2e1;
t847 = -t375 / 0.2e1;
t846 = t375 / 0.2e1;
t845 = -t376 / 0.2e1;
t844 = t376 / 0.2e1;
t843 = t389 / 0.2e1;
t842 = t390 / 0.2e1;
t841 = -t410 / 0.2e1;
t840 = t410 / 0.2e1;
t839 = -t411 / 0.2e1;
t838 = t411 / 0.2e1;
t837 = t506 / 0.2e1;
t836 = -t508 / 0.2e1;
t835 = pkin(2) * t505;
t832 = -qJD(1) / 0.2e1;
t831 = qJD(1) / 0.2e1;
t829 = rSges(3,1) * t507;
t491 = t506 * rSges(3,3);
t276 = rSges(5,1) * t765 - rSges(5,2) * t768 - t508 * rSges(5,3);
t556 = -t364 * t376 - t609;
t670 = t205 + t726;
t88 = -t348 + (-t276 + t670) * qJD(1) + t556;
t823 = t506 * t88;
t65 = t276 * t375 + t278 * t376 + t570;
t794 = qJD(1) * t65;
t792 = t107 * t506;
t700 = rSges(3,2) * t756 + t508 * rSges(3,3);
t332 = rSges(3,1) * t754 - t700;
t424 = rSges(3,1) * t505 + rSges(3,2) * t507;
t661 = t424 * t690;
t180 = -t661 + (-t332 - t428) * qJD(1);
t791 = t180 * t506;
t790 = t180 * t508;
t662 = t424 * t470;
t753 = t507 * t508;
t755 = t505 * t508;
t333 = rSges(3,1) * t753 - rSges(3,2) * t755 + t491;
t716 = t333 + t429;
t181 = qJD(1) * t716 - t662;
t378 = t424 * t508;
t789 = t181 * t378;
t283 = Icges(4,5) * t759 - Icges(4,6) * t762 - t799;
t784 = t283 * t508;
t775 = t375 * t458;
t772 = t383 * t500;
t771 = t410 * t472;
t770 = t417 * t506;
t769 = t417 * t508;
t749 = -t506 * t205 + t508 * t206;
t740 = -t506 * t283 - t287 * t758;
t739 = t506 * t284 + t288 * t758;
t735 = t506 * t276 + t508 * t278;
t734 = -t506 * t280 + t508 * t281;
t733 = t506 * t291 + t508 * t292;
t728 = -t506 * t324 - t328 * t753;
t727 = t506 * t325 + t329 * t753;
t379 = -t833 - t834;
t346 = t379 - t835;
t402 = -t834 - t835;
t715 = t346 - t402;
t706 = rSges(4,2) * t665 + rSges(4,3) * t691;
t705 = -t419 + t422;
t704 = t421 + t592;
t702 = rSges(3,3) * t691 + t692 * t882;
t693 = qJD(1) * t418;
t140 = -t506 * t576 - t773;
t687 = t140 * qJD(1);
t184 = -t506 * t575 - t769;
t686 = t184 * qJD(1);
t682 = pkin(3) * t771;
t681 = pkin(3) * t760;
t679 = t507 * t824;
t674 = t508 * t155 + t506 * t157 + t276 * t691;
t173 = -t411 * t825 + (-t411 * t471 - t472 * t692) * rSges(4,1) + t706;
t174 = -t500 * t344 + (t388 * t508 + t490) * qJD(1);
t673 = t508 * t173 + t506 * t174 + t291 * t691;
t671 = t508 * t203 + t506 * t204 - t280 * t691;
t663 = t505 * t691;
t659 = t507 * t690;
t657 = -pkin(1) - t829;
t656 = t692 / 0.2e1;
t655 = t691 / 0.2e1;
t654 = -t470 / 0.2e1;
t651 = t690 / 0.2e1;
t650 = -t387 - t835;
t649 = t402 + t835;
t647 = t379 + t834;
t644 = (-t506 ^ 2 - t508 ^ 2) * t505;
t635 = (-t506 * t591 + t803) * qJD(1) + t893 * t500;
t634 = qJD(1) * t286 + t287 * t500 - t506 * t772;
t633 = (-t386 * t506 + t811) * qJD(1) + t894 * t500;
t632 = qJD(1) * t288 + t500 * t895;
t315 = t364 * t508;
t631 = -t375 * t313 - t315 * t376;
t298 = t649 * t506;
t299 = t649 * t508;
t628 = t410 * t298 + t299 * t411;
t219 = t288 * t759;
t627 = t284 * t508 - t219;
t272 = t329 * t754;
t620 = t325 * t508 - t272;
t619 = -t283 + t783;
t314 = t363 * t508;
t618 = -qJD(1) * t314 - t365 * t375;
t617 = -qJD(1) * t315 - t366 * t375;
t616 = t887 * t500;
t615 = t386 * t500 - t772;
t614 = -t324 + t780;
t608 = -t506 * t751 + t508 * t750;
t606 = t735 + t749;
t605 = -t271 - t681;
t604 = -pkin(4) * t766 - t270;
t322 = t388 * t500;
t601 = -t322 - t679;
t598 = t829 - t882;
t597 = -t506 * t89 - t508 * t88;
t588 = -t107 * t508 - t108 * t506;
t587 = -t181 * t506 - t790;
t158 = t285 * t472 + t287 * t471;
t182 = t326 * t507 + t328 * t505;
t183 = t327 * t507 + t329 * t505;
t573 = -t347 * t506 - t508 * t348;
t567 = t674 + t676;
t566 = t608 + t749;
t377 = t424 * t506;
t562 = t582 * t506;
t561 = qJD(2) * t421;
t560 = qJD(2) * t419;
t117 = -t327 * t756 - t620;
t558 = (-t116 * t508 + t117 * t506) * qJD(2);
t118 = -t326 * t755 - t728;
t119 = -t327 * t755 + t727;
t557 = (-t118 * t508 + t119 * t506) * qJD(2);
t176 = (t332 * t506 + t333 * t508) * qJD(2);
t551 = t604 - t681;
t550 = t605 - t679;
t547 = qJD(1) * t382 - t410 * t773 + t411 * t774;
t545 = t203 * t690 + t204 * t470 - t280 * t455 - t281 * t454;
t544 = t326 * t508 - t327 * t506;
t542 = (-t505 * t704 + t507 * t705) * qJD(1);
t541 = -pkin(4) * t775 + t618 - t682;
t540 = t376 * t646 + t875;
t539 = t551 - t679;
t533 = t894 * t410 - t895 * t411 + (-t383 + t386) * qJD(1);
t526 = qJD(1) * t283 - t471 * t634 + t472 * t632;
t525 = -t471 * t635 + t472 * t633 + t695;
t522 = qJD(1) * t381 - t471 * t616 + t472 * t615;
t521 = t125 * t411 + t410 * t126 - t390 * t205 - t206 * t389 + t545;
t194 = qJD(1) * t327 - t506 * t560;
t196 = qJD(1) * t329 - t506 * t561;
t520 = qJD(1) * t324 - qJD(2) * t182 - t194 * t505 + t196 * t507;
t193 = -t508 * t560 + (-t506 * t592 + t804) * qJD(1);
t195 = -t508 * t561 + (-t422 * t506 + t812) * qJD(1);
t519 = -qJD(2) * t183 - t193 * t505 + t195 * t507 + t694;
t392 = t592 * qJD(2);
t393 = t422 * qJD(2);
t518 = qJD(1) * t417 - t392 * t505 + t393 * t507 + (-t419 * t507 - t421 * t505) * qJD(2);
t517 = (t506 * t906 - t508 * t907) * t849 + (t506 * t904 - t508 * t905) * t848 + (t506 * t885 + t508 * t886) * t847 + (t917 * t508 + t916 * t506 + (t506 * t905 + t508 * t904) * qJD(1)) * t846 + (t915 * t508 + t914 * t506 + (t506 * t907 + t508 * t906) * qJD(1)) * t845 + (t506 * t886 - t508 * t885) * t844 + (t911 * qJD(1) + t905 * t334 + t904 * t335 + t916 * t375 + t376 * t917) * t837 + (qJD(1) * t910 + t334 * t907 + t335 * t906 + t375 * t914 + t376 * t915) * t836 + (t927 * t457 + t926 * t458) * t832 + (t909 * t508 + t908 * t506 + (t506 * t903 + t508 * t902) * qJD(1)) * t831 + t913 * t656 + t912 * t655;
t516 = -t505 * t855 + t544 * t507;
t513 = -t471 * t850 + t533 * t472;
t109 = -t562 - t784;
t110 = -t286 * t762 - t627;
t111 = -t285 * t761 - t740;
t112 = -t286 * t761 + t739;
t159 = t286 * t472 + t288 * t471;
t38 = t506 * t863 + t526 * t508;
t39 = t506 * t864 + t525 * t508;
t40 = t526 * t506 - t508 * t863;
t41 = t525 * t506 - t508 * t864;
t59 = -t109 * t411 + t110 * t410 + t687;
t141 = -t508 * t576 + t774;
t139 = t141 * qJD(1);
t60 = -t111 * t411 + t112 * t410 + t139;
t82 = t506 * t858 + t522 * t508;
t83 = t522 * t506 - t508 * t858;
t86 = t471 * t632 + t472 * t634;
t87 = t471 * t633 + t472 * t635;
t512 = t517 + t59 * t656 + (qJD(1) * t83 + t109 * t389 + t110 * t390 - t40 * t411 + t41 * t410) * t836 + (qJD(1) * t82 + t111 * t389 + t112 * t390 - t38 * t411 + t39 * t410) * t837 + (t506 * t513 - t508 * t547) * t838 + (t506 * t547 + t508 * t513) * t841 + (t506 * t87 - t508 * t86 + (t158 * t506 + t159 * t508) * qJD(1)) * t831 + (t533 * t471 + t472 * t850) * t832 + (-t40 * t508 + t41 * t506 + (t109 * t506 + t110 * t508) * qJD(1)) * t839 + (-t111 * t508 + t112 * t506) * t842 + (-t109 * t508 + t110 * t506) * t843 + (-t38 * t508 + t39 * t506 + (t111 * t506 + t112 * t508) * qJD(1)) * t840 + t60 * t655;
t394 = t598 * qJD(2);
t282 = qJD(1) * t299;
t246 = t647 * t508;
t245 = t647 * t506;
t208 = t715 * t508;
t207 = t715 * t506;
t200 = -qJD(2) * t377 + (t508 * t598 + t491) * qJD(1);
t199 = -rSges(3,2) * t659 + (-t507 * t692 - t660) * rSges(3,1) + t702;
t185 = -t508 * t575 + t770;
t179 = t185 * qJD(1);
t114 = -t394 * t690 + (-t200 - t397 + t662) * qJD(1);
t113 = -t394 * t470 + t380 + (t199 - t661) * qJD(1);
t93 = t518 * t506 - t508 * t857;
t92 = t506 * t857 + t518 * t508;
t91 = -qJD(2) * t579 + t193 * t507 + t195 * t505;
t90 = -t580 * qJD(2) + t194 * t507 + t196 * t505;
t85 = -t322 * t411 + t387 * t389 + (-t174 + t747) * qJD(1) + t574;
t84 = qJD(1) * t173 - t322 * t410 - t387 * t390 + t537;
t79 = t179 + t557;
t78 = t558 + t686;
t63 = -t348 + (t670 + t751) * qJD(1) + t540;
t37 = t173 * t411 + t174 * t410 + t291 * t390 - t292 * t389 + t545;
t14 = t155 * t376 + t157 * t375 + t276 * t335 - t278 * t334 + t521;
t7 = -t334 * t750 - t335 * t751 + t375 * t821 + t376 * t822 + t521;
t1 = [(t179 + ((t117 - t272 + (t325 + t781) * t508 + t728) * t508 + t727 * t506) * qJD(2)) * t651 + (t139 + (t110 + (t285 * t508 + t286 * t506) * t471 + t627 + t740) * t411 + (-t287 * t759 + t784 + t109 + (t285 * t506 - t286 * t508) * t471 + t739) * t410) * t838 + (((t506 * t876 + t508 * t877) * t457 + t906 + t933 + t935) * t376 + (t931 * t765 + (t506 * t877 - t508 * t876) * t457 - t870 + t907 - t932) * t375 + t922) * t844 + (t140 + t158) * t843 + (t141 + t159) * t842 + (-t687 + (t112 - t562 - t739) * t411 + (t506 * t619 + t111 - t219) * t410 + ((t284 + t582) * t410 + t619 * t411) * t508 + t59) * t841 + (t87 + t82) * t840 + (-t686 + ((t508 * t614 + t119 - t727) * t508 + (t506 * t614 + t118 + t620) * t506) * qJD(2) + t78) * t654 + (t91 + t92) * t470 / 0.2e1 + (t19 * t921 + t18 * (-t757 + t920) + (t468 + (t363 * t466 - t241) * t506) * t63 + (-t314 * t466 - t540 + t63 - t856 + t918) * t64) * m(6) + (-qJD(2) * t575 + t392 * t507 + t393 * t505 + t471 * t615 + t472 * t616 + t947 * t458 + t948 * t457 + (-t751 * t64 + (t63 * (-t330 - t365) - t64 * t473) * t508 + (-t63 * t939 + t64 * (-t330 - t826)) * t506) * m(6)) * qJD(1) + (-(-qJD(1) * t276 + t556 + t856 - t88) * t89 + t43 * (-t276 - t711) + t88 * t613 + t42 * (-t501 * t506 + t278 + t368) + t89 * (t331 + t707) + (-t315 * t89 + t364 * t823) * t466 + ((-t88 * rSges(5,3) + t89 * (-t396 - t827)) * t506 + (t88 * (-t366 - t396) - t89 * t501) * t508) * qJD(1)) * m(5) + (-(-qJD(1) * t291 - t107 + t555 + t878) * t108 + t85 * (-t291 - t703) + t107 * t701 + t84 * (t292 + t612) + t108 * (-t609 + t706) + (-t108 * t345 + t387 * t792) * t500 + ((-t107 * rSges(4,3) + t108 * (-t459 - t828)) * t506 + (t107 * (-t388 - t459) - t108 * t509) * t508) * qJD(1)) * m(4) + (-(-qJD(1) * t332 - t180 - t401 - t661) * t181 + t114 * (t506 * t657 + t498 + t700) + t113 * t716 + t181 * (t465 + t702) + (t424 * t791 - t789) * qJD(2) + ((-pkin(1) - t598) * t790 + (t180 * (-rSges(3,3) - pkin(6)) + t181 * t657) * t506) * qJD(1)) * m(3) + (t86 + t83 + t60) * t839 - (t93 + t79 + t90) * t690 / 0.2e1 + (t903 - t938) * t849 + (t902 + t937) * t848 + ((t508 * t873 + t870 + t904 - t936) * t376 + ((t949 + t955) * t508 + t873 * t506 + t905 - t953) * t375 + t913 + t919) * t847 + (t908 + t911) * t846 + (-t909 + t910 + t912) * t845 + ((t182 + t184) * t506 + (t183 + t185) * t508) * t685 / 0.2e1; t512 + ((-t470 * t769 + t693) * t506 + (t542 + (t506 * t770 + t516) * qJD(2)) * t508) * t654 + ((-t690 * t770 - t693) * t508 + (t542 + (t508 * t769 + t516) * qJD(2)) * t506) * t651 + ((t505 * t705 + t507 * t704) * qJD(1) + (t544 * t505 + t507 * t855) * qJD(2)) * t832 + (t506 * t91 - t508 * t90 + (t182 * t506 + t183 * t508) * qJD(1)) * t831 + (qJD(1) * t92 + (t506 * (t506 * t862 + t519 * t508) - t508 * (t506 * t861 + t520 * t508) + (t118 * t506 + t119 * t508) * qJD(1)) * t883) * t837 + (qJD(1) * t93 + (t506 * (t519 * t506 - t508 * t862) - t508 * (t520 * t506 - t508 * t861) + (t116 * t506 + t117 * t508) * qJD(1)) * t883) * t836 + (t558 + t78) * t656 + (t557 + t79) * t655 + (t7 * (t566 + t734) + t607 * t880 + (-t282 - t541 - (-pkin(2) * t755 + t208) * qJD(1) + (t539 + t679) * t506) * t64 + t854 * (t346 - t363) + (t539 * t508 + pkin(2) * t659 - (-t207 - t298 + t312) * qJD(1) + t872) * t63 + (t671 - t207 * t375 - (t208 - t314) * t376 - t644 * t824 - t628 + t874) * t34) * m(6) + (t14 * (t606 + t734) + t65 * (t567 + t671) + (t550 * t89 + t669 * t794) * t506 - t89 * (t282 + t617 - t682) - t65 * (t628 + t631) - (-t89 * t663 + (t507 * t597 + t644 * t65) * qJD(2)) * pkin(2) + t853 * (-t364 + t402) + (qJD(1) * t298 + t508 * t550 + t871) * t88) * m(5) + (-(-t108 * t663 + (t507 * t588 + t644 * t94) * qJD(2)) * pkin(2) + t37 * (t733 + t734) + t94 * (t671 + t673) + (t107 * t601 + (qJD(1) * t108 + t85) * t650) * t508 + (t84 * t650 + t108 * t601 + (t107 * t387 + t725 * t94) * qJD(1)) * t506 + t869) * m(4) + (0.2e1 * t176 * (t199 * t508 + t200 * t506 + (t332 * t508 - t333 * t506) * qJD(1)) + t587 * t394 + (-t113 * t506 - t114 * t508 + (-t181 * t508 + t791) * qJD(1)) * t424 - (t180 * t377 - t789) * qJD(1) - (t176 * (-t377 * t506 - t378 * t508) + t587 * t598) * qJD(2)) * m(3); t512 + (t672 * t880 + t7 * t566 + (t551 * t506 - t541 - (-pkin(3) * t761 + t246) * qJD(1)) * t64 + t854 * (-t363 + t379) + (t551 * t508 - t412 - (-t245 + t312) * qJD(1) + t872) * t63 + (-t245 * t375 - (t246 - t314) * t376 - t573 + t874) * t34) * m(6) + (t14 * t606 + (t605 * t89 + t746 * t794) * t506 - t89 * ((-t471 * t691 - t771) * pkin(3) + t617) + t853 * (-t364 - t834) + (t508 * t605 - t412 + t871) * t88 + (t567 - t573 - t631) * t65) * m(5) + (t37 * t733 + t94 * (-t292 * t692 + t673) + t588 * t322 + (-t84 * t506 - t85 * t508 + (-t108 * t508 + t792) * qJD(1)) * t387 + t869) * m(4); t517 + (t7 * t608 + t34 * t568 + (t604 * t64 - t750 * t796) * t506 - t64 * t618 - t34 * (-t314 * t376 - t209) - (-t64 * t775 + (-t64 * t691 + t34 * (-t375 * t506 - t376 * t508)) * t457) * pkin(4) + t854 * t646 + (-qJD(1) * t312 + t508 * t604 - t400 + t884) * t63) * m(6) + (t14 * t735 + t597 * t271 + (-t881 - t43 * t508 + (-t508 * t89 + t823) * qJD(1)) * t364 - t611 * t88 - t617 * t89 + (-t278 * t692 - t631 + t674) * t65) * m(5); 0.2e1 * (t18 * t836 + t19 * t837 - t34 * (-t375 * t508 + t376 * t506) / 0.2e1) * m(6);];
tauc = t1(:);
