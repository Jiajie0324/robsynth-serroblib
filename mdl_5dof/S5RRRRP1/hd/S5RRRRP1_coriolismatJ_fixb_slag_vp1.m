% Calculate matrix of centrifugal and coriolis load on the joints for
% S5RRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% Cq [5x5]
%   matrix of coriolis and centrifugal joint torques.
%   Gives coriolis joint torques when multiplied with joint velocities

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:46
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Cq = S5RRRRP1_coriolismatJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP1_coriolismatJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP1_coriolismatJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP1_coriolismatJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP1_coriolismatJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP1_coriolismatJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP1_coriolismatJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolismat_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:44:47
% EndTime: 2019-12-05 18:45:29
% DurationCPUTime: 25.19s
% Computational Cost: add. (76606->668), mult. (65978->865), div. (0->0), fcn. (61848->8), ass. (0->418)
t973 = Icges(5,4) + Icges(6,4);
t971 = Icges(5,1) + Icges(6,1);
t970 = Icges(5,5) + Icges(6,5);
t965 = Icges(5,6) + Icges(6,6);
t590 = qJ(2) + qJ(3);
t580 = qJ(4) + t590;
t561 = sin(t580);
t974 = t973 * t561;
t969 = Icges(5,2) + Icges(6,2);
t562 = cos(t580);
t972 = -t561 * t965 + t562 * t970;
t952 = t562 * t971 - t974;
t968 = Icges(5,3) + Icges(6,3);
t967 = t973 * t562;
t592 = sin(qJ(1));
t594 = cos(qJ(1));
t960 = t592 * t970 + t594 * t952;
t964 = -t561 * t969 + t967;
t778 = t561 * t592;
t963 = t973 * t778;
t962 = t972 * t594;
t772 = t562 * t592;
t954 = -t594 * t968 + t772 * t970 - t778 * t965;
t961 = t592 * t968 + t962;
t940 = -t594 * t970 + t772 * t971 - t963;
t953 = t562 * t969 + t974;
t959 = t561 * t971 + t967;
t958 = t960 * t772;
t957 = -t594 * t965 + t772 * t973 - t778 * t969;
t956 = t592 * t965 + t594 * t964;
t595 = -pkin(7) - pkin(6);
t587 = -pkin(8) + t595;
t955 = rSges(6,3) + qJ(5) - t587;
t951 = t561 * t970 + t562 * t965;
t950 = -t594 * t961 + t958;
t949 = -t594 * t953 + t960;
t948 = -t772 * t969 + t940 - t963;
t947 = -t594 * t959 - t956;
t946 = t592 * t959 + t957;
t771 = t562 * t594;
t945 = -t592 * t954 - t771 * t940;
t935 = t592 * t961 + t771 * t960;
t944 = -t959 - t964;
t890 = m(5) / 0.2e1;
t889 = m(6) / 0.2e1;
t943 = -t778 * t956 + t950;
t777 = t561 * t594;
t942 = t777 * t957 + t945;
t941 = -t777 * t956 + t935;
t566 = cos(t590);
t559 = Icges(4,4) * t566;
t565 = sin(t590);
t514 = -Icges(4,2) * t565 + t559;
t515 = Icges(4,1) * t565 + t559;
t937 = t515 + t514;
t936 = t561 * t956 - t954;
t934 = t957 * t561;
t560 = pkin(3) * t566;
t593 = cos(qJ(2));
t585 = t593 * pkin(2);
t563 = t585 + pkin(1);
t519 = t560 + t563;
t819 = pkin(4) * t562;
t476 = t519 + t819;
t296 = -rSges(6,1) * t772 + rSges(6,2) * t778 - t592 * t476 + t594 * t955;
t558 = t592 * t587;
t738 = t594 * t587;
t922 = -rSges(6,2) * t777 + t592 * t955;
t173 = (rSges(6,1) * t771 + t558 + (t476 - t519) * t594 + t922) * t594 + (-t592 * t519 - t296 - t738) * t592;
t564 = t592 * t595;
t691 = t519 - t563;
t721 = -t592 * ((-t587 + t595) * t594 - t691 * t592) + t594 * (t594 * t691 - t558 + t564);
t123 = t173 + t721;
t586 = t594 * pkin(6);
t737 = t594 * t595;
t818 = pkin(1) - t563;
t713 = -t592 * (t592 * t818 - t586 - t737) + t594 * (-pkin(6) * t592 - t594 * t818 - t564);
t106 = t123 + t713;
t820 = pkin(4) * t561;
t821 = pkin(3) * t565;
t644 = t820 + t821;
t487 = t594 * t644;
t588 = t592 ^ 2;
t811 = rSges(6,2) * t562;
t498 = rSges(6,1) * t561 + t811;
t589 = t594 ^ 2;
t689 = rSges(6,1) * t778 + rSges(6,2) * t772;
t701 = -t498 * t589 - t592 * t689;
t767 = t565 * t594;
t202 = t588 * (-t644 + t821) + t594 * (pkin(3) * t767 - t487) + t701;
t686 = t588 + t589;
t649 = t686 * t821;
t187 = -t649 + t202;
t111 = t173 * t187;
t460 = rSges(5,1) * t778 + rSges(5,2) * t772;
t499 = rSges(5,1) * t561 + rSges(5,2) * t562;
t461 = t499 * t594;
t301 = -t460 * t592 - t461 * t594;
t273 = -t649 + t301;
t668 = -rSges(5,2) * t777 + rSges(5,3) * t592;
t690 = rSges(5,2) * t778 + rSges(5,3) * t594;
t288 = t592 * (rSges(5,1) * t772 - t690) + t594 * (rSges(5,1) * t771 + t668);
t196 = t288 * t273;
t813 = rSges(5,1) * t562;
t501 = -rSges(5,2) * t561 + t813;
t675 = -t501 - t560;
t374 = t675 * t592;
t376 = t675 * t594;
t615 = (-t374 * t592 - t376 * t594) * t499;
t812 = rSges(6,1) * t562;
t673 = rSges(6,2) * t561 - t812 - t819;
t620 = t673 - t560;
t323 = t620 * t592;
t325 = t620 * t594;
t674 = t498 + t820;
t357 = t674 * t592;
t359 = t674 * t594;
t726 = -t323 * t357 - t325 * t359;
t591 = sin(qJ(2));
t822 = pkin(2) * t591;
t486 = -t644 - t822;
t611 = -t486 + t498;
t307 = t611 * t592;
t309 = t611 * t594;
t358 = t673 * t592;
t360 = t673 * t594;
t728 = -t307 * t358 - t309 * t360;
t182 = t288 + t721;
t156 = t182 + t713;
t128 = t156 * t301;
t645 = t821 + t822;
t623 = t499 + t645;
t331 = t623 * t592;
t333 = t623 * t594;
t91 = t128 + (t331 * t592 + t333 * t594) * t501;
t912 = (t106 * t202 + t111 + t726 + t728) * t889 + (t196 + t615 + t91) * t890;
t447 = t594 * t486;
t510 = t594 * t645;
t185 = t588 * (t486 + t645) + t594 * (t510 + t447) + t701;
t760 = t591 * t594;
t702 = t588 * (-t645 + t822) + t594 * (pkin(2) * t760 - t510);
t170 = t185 + t702;
t218 = t301 + t702;
t165 = t182 * t301;
t676 = t499 + t821;
t373 = t676 * t592;
t643 = t676 * t594;
t116 = t165 + (t373 * t592 + t594 * t643) * t501;
t599 = t615 + t116;
t621 = t498 + t644;
t322 = t621 * t592;
t324 = t621 * t594;
t727 = -t322 * t358 - t324 * t360;
t650 = t726 + t727;
t913 = (t123 * t185 + t170 * t173 + t650) * t889 + (t218 * t288 + t599) * t890;
t933 = t912 - t913;
t891 = m(4) / 0.2e1;
t858 = t592 / 0.2e1;
t856 = -t594 / 0.2e1;
t928 = t594 / 0.2e1;
t297 = (t476 + t812) * t594 + t922;
t927 = m(6) * (t296 * t594 + t297 * t592);
t798 = Icges(3,4) * t591;
t536 = Icges(3,2) * t593 + t798;
t539 = Icges(3,1) * t593 - t798;
t926 = (t539 / 0.2e1 - t536 / 0.2e1) * t591;
t925 = t951 * t592;
t924 = t951 * t594;
t923 = (t952 - t953) * t562 + t944 * t561;
t313 = -t486 * t592 + t689;
t619 = t498 * t594;
t314 = t447 - t619;
t335 = t592 * t645 + t460;
t336 = -t510 - t461;
t517 = rSges(4,1) * t565 + rSges(4,2) * t566;
t814 = rSges(4,1) * t566;
t671 = t563 + t814;
t768 = t565 * t592;
t688 = rSges(4,2) * t768 + rSges(4,3) * t594;
t328 = -t592 * t671 + t688 - t737;
t669 = -rSges(4,2) * t767 + rSges(4,3) * t592;
t329 = t594 * t671 - t564 + t669;
t518 = -rSges(4,2) * t565 + t814;
t616 = (-t328 * t594 - t329 * t592) * t518;
t670 = t519 + t813;
t303 = -t592 * t670 + t690 - t738;
t304 = t594 * t670 - t558 + t668;
t729 = t303 * t376 + t304 * t374;
t734 = t296 * t325 + t297 * t323;
t613 = t517 + t822;
t909 = t613 * t594;
t910 = t613 * t592;
t683 = (-t335 * t643 - t336 * t373 + t729) * t890 + (t616 + (t592 * t909 - t594 * t910) * t517) * t891 + (-t313 * t324 - t314 * t322 + t734) * t889;
t326 = t592 * t644 + t689;
t327 = -t487 - t619;
t355 = pkin(3) * t768 + t460;
t484 = t517 * t592;
t485 = t517 * t594;
t684 = (t331 * t643 - t333 * t355 + t729) * t890 + (-t484 * t909 + t485 * t910 + t616) * t891 + (-t307 * t327 - t309 * t326 + t734) * t889;
t921 = t683 - t684;
t617 = (-t303 * t594 - t304 * t592) * t501;
t732 = t296 * t360 + t297 * t358;
t735 = (-t326 * t359 - t327 * t357 + t732) * t889 + (t617 + (-t355 * t594 + t592 * t643) * t499) * t890;
t349 = pkin(4) * t778 + t689;
t350 = (-t811 + (-rSges(6,1) - pkin(4)) * t561) * t594;
t736 = (-t322 * t350 - t324 * t349 + t732) * t889 + (t373 * t461 - t460 * t643 + t617) * t890;
t920 = t735 - t736;
t803 = (t617 + (-t335 * t594 - t336 * t592) * t499) * t890 + (-t313 * t359 - t314 * t357 + t732) * t889;
t804 = (t331 * t461 - t333 * t460 + t617) * t890 + (-t307 * t350 - t309 * t349 + t732) * t889;
t919 = t803 - t804;
t859 = -t592 / 0.2e1;
t918 = t858 + t859;
t917 = (t592 * t947 + t594 * t946) * t562 + (-t592 * t949 + t594 * t948) * t561;
t911 = qJD(1) * t927;
t579 = Icges(3,4) * t593;
t537 = -Icges(3,2) * t591 + t579;
t538 = Icges(3,1) * t591 + t579;
t267 = -t686 * t820 + t701;
t69 = t106 * t267 + t728;
t76 = t123 * t267 + t727;
t907 = (t76 + t69) * t889 + (t128 + t165 + ((t333 + t643) * t594 + (t331 + t373) * t592) * t501) * t890;
t438 = Icges(4,6) * t592 + t514 * t594;
t797 = Icges(4,4) * t565;
t516 = Icges(4,1) * t566 - t797;
t440 = Icges(4,5) * t592 + t516 * t594;
t764 = t566 * t592;
t346 = t440 * t764;
t512 = Icges(4,5) * t566 - Icges(4,6) * t565;
t784 = t512 * t594;
t436 = Icges(4,3) * t592 + t784;
t656 = t594 * t436 - t346;
t228 = -t438 * t768 - t656;
t437 = Icges(4,4) * t764 - Icges(4,2) * t768 - Icges(4,6) * t594;
t435 = Icges(4,5) * t764 - Icges(4,6) * t768 - Icges(4,3) * t594;
t546 = Icges(4,4) * t768;
t439 = Icges(4,1) * t764 - Icges(4,5) * t594 - t546;
t763 = t566 * t594;
t716 = -t592 * t435 - t439 * t763;
t229 = -t437 * t767 - t716;
t715 = t436 * t592 + t440 * t763;
t230 = -t438 * t767 + t715;
t652 = t438 * t565 - t435;
t788 = t437 * t565;
t903 = (-t229 * t594 + t230 * t592) * t928 + ((t228 - t346 + (t436 + t788) * t594 + t716) * t594 + t715 * t592) * t856 + ((t592 * t652 + t228 + t229 + t656) * t592 + (t592 * (-t439 * t566 + t788) + t230 - t715 + (t435 + t652) * t594) * t594) * t858;
t513 = Icges(4,2) * t566 + t797;
t902 = t937 * t566 / 0.2e1 + (t516 / 0.2e1 - t513 / 0.2e1) * t565;
t475 = Icges(3,5) * t592 + t539 * t594;
t692 = -t536 * t594 + t475;
t761 = t591 * t592;
t555 = Icges(3,4) * t761;
t753 = t592 * t593;
t474 = Icges(3,1) * t753 - Icges(3,5) * t594 - t555;
t693 = -Icges(3,2) * t753 + t474 - t555;
t473 = Icges(3,6) * t592 + t537 * t594;
t694 = -t538 * t594 - t473;
t472 = Icges(3,4) * t753 - Icges(3,2) * t761 - Icges(3,6) * t594;
t695 = t538 * t592 + t472;
t901 = (-t592 * t692 + t594 * t693) * t591 + (t592 * t694 + t594 * t695) * t593;
t697 = -t513 * t594 + t440;
t698 = -Icges(4,2) * t764 + t439 - t546;
t699 = -t515 * t594 - t438;
t700 = t515 * t592 + t437;
t900 = (-t592 * t697 + t594 * t698) * t565 + (t592 * t699 + t594 * t700) * t566;
t612 = (t592 * t941 + t594 * t942) * t928 + (t935 * t592 + ((t934 + t961) * t594 + t943 + t945 - t958) * t594) * t856 + ((t936 * t592 - t942 + t943 - t950) * t592 + ((t936 + t954) * t594 + (-t562 * t940 + t934) * t592 - t935 + t941) * t594) * t858;
t609 = -t944 * t562 / 0.2e1 + (-t953 / 0.2e1 + t952 / 0.2e1) * t561;
t897 = 0.4e1 * qJD(1);
t896 = 2 * qJD(2);
t895 = 4 * qJD(2);
t894 = 2 * qJD(3);
t893 = 4 * qJD(3);
t892 = 2 * qJD(4);
t725 = -t331 * t374 - t333 * t376;
t83 = t156 * t273 + t725;
t879 = m(5) * t83;
t723 = -t373 * t374 - t376 * t643;
t878 = m(5) * (t182 * t218 + t723);
t877 = m(5) * t91;
t731 = -t307 * t323 - t309 * t325;
t56 = t106 * t187 + t731;
t868 = m(6) * t56;
t730 = -t322 * t323 - t324 * t325;
t867 = m(6) * (t123 * t170 + t730);
t866 = m(6) * t69;
t865 = m(6) * t76;
t724 = -t357 * t358 - t359 * t360;
t864 = m(6) * (t173 * t185 + t724);
t863 = m(6) * (t173 * t202 + t724);
t815 = rSges(3,1) * t593;
t678 = pkin(1) + t815;
t687 = rSges(3,2) * t761 + rSges(3,3) * t594;
t377 = -t592 * t678 + t586 + t687;
t557 = rSges(3,2) * t760;
t378 = -t557 + t678 * t594 + (rSges(3,3) + pkin(6)) * t592;
t540 = rSges(3,1) * t591 + rSges(3,2) * t593;
t508 = t540 * t592;
t509 = t540 * t594;
t855 = m(3) * (t377 * t508 - t378 * t509);
t298 = t592 * (rSges(4,1) * t764 - t688) + t594 * (rSges(4,1) * t763 + t669);
t206 = t298 + t713;
t312 = -t484 * t592 - t485 * t594;
t133 = t206 * t312 + (t592 * t910 + t594 * t909) * t518;
t853 = m(4) * t133;
t177 = t517 * t518 * t686 + t298 * t312;
t176 = m(4) * t177;
t850 = m(4) * (t328 * t910 - t329 * t909);
t849 = m(4) * (t328 * t484 - t329 * t485);
t848 = m(5) * t116;
t171 = t499 * t501 * t686 + t288 * t301;
t168 = m(5) * t171;
t841 = m(5) * (t303 * t335 + t304 * t336);
t840 = m(5) * (t303 * t355 - t304 * t643);
t839 = m(5) * (t303 * t460 - t304 * t461);
t835 = m(6) * (t296 * t313 + t297 * t314);
t834 = m(6) * (t296 * t326 + t297 * t327);
t833 = m(6) * (t296 * t349 + t297 * t350);
t831 = m(6) * (-t307 * t592 - t309 * t594);
t830 = m(6) * (t313 * t592 - t314 * t594);
t828 = m(6) * (t326 * t592 - t327 * t594);
t827 = m(6) * (-t322 * t592 - t324 * t594);
t826 = m(6) * (t349 * t592 - t350 * t594);
t824 = m(6) * (-t358 * t594 + t360 * t592);
t823 = m(6) * (-t357 * t592 - t359 * t594);
t816 = m(6) * qJD(2);
t762 = t591 * t472;
t752 = t593 * t594;
t240 = -t323 * t594 + t325 * t592;
t258 = qJD(4) * t824;
t733 = m(6) * qJD(3) * t240 + t258;
t470 = Icges(3,5) * t753 - Icges(3,6) * t761 - Icges(3,3) * t594;
t704 = -t592 * t470 - t474 * t752;
t637 = Icges(3,5) * t593 - Icges(3,6) * t591;
t471 = Icges(3,3) * t592 + t594 * t637;
t703 = t471 * t592 + t475 * t752;
t682 = t123 * t187 + t730;
t681 = t173 * t267 + t724;
t680 = t182 * t273 + t723;
t677 = -t518 - t585;
t672 = ((t592 * t925 + t917) * t594 - t924 * t588) * t858 + ((t594 * t924 + t917) * t592 - t925 * t589) * t856;
t401 = t475 * t753;
t653 = t594 * t471 - t401;
t651 = t473 * t591 - t470;
t648 = t686 * t822;
t647 = t168 + t672;
t646 = -t168 + t672;
t642 = t672 + t907;
t636 = -Icges(3,5) * t591 - Icges(3,6) * t593;
t635 = Icges(4,5) * t565 + Icges(4,6) * t566;
t478 = t635 * t592;
t479 = t594 * t635;
t625 = (-t588 * t479 + (t592 * t478 + t900) * t594) * t858 + (-t589 * t478 + (t594 * t479 + t900) * t592) * t856 + t672;
t622 = t675 - t585;
t618 = t176 + t625;
t614 = -t648 + t702;
t610 = t620 - t585;
t606 = (-t513 + t516) * t566 - t937 * t565;
t603 = t612 + t903;
t602 = t609 + t902;
t600 = -t612 + (t947 * t561 + t949 * t562 + t592 * t972 + t923 * t594) * t858 + (-t561 * t946 + t562 * t948 + t923 * t592 - t962) * t856;
t598 = -t609 + (t561 * t940 + t562 * t957) * t918;
t597 = t600 - t903 + (t512 * t592 + t565 * t699 + t566 * t697 + t594 * t606) * t858 + (-t565 * t700 + t566 * t698 + t592 * t606 - t784) * t856;
t596 = t598 - t902 + t918 * (t437 * t566 + t439 * t565);
t542 = -rSges(3,2) * t591 + t815;
t503 = t636 * t594;
t502 = t636 * t592;
t417 = t677 * t594;
t415 = t677 * t592;
t334 = t622 * t594;
t332 = t622 * t592;
t310 = t610 * t594;
t308 = t610 * t592;
t287 = -t648 + t312;
t260 = t823 / 0.2e1;
t257 = t826 / 0.2e1;
t256 = -t473 * t760 + t703;
t255 = -t472 * t760 - t704;
t254 = -t473 * t761 - t653;
t233 = t827 / 0.2e1;
t232 = t828 / 0.2e1;
t222 = t830 / 0.2e1;
t209 = t831 / 0.2e1;
t199 = t614 + t301;
t179 = -t255 * t594 + t256 * t592;
t178 = -(-t592 * (-t474 * t593 + t762) - t594 * t470) * t594 + t254 * t592;
t158 = t614 + t185;
t138 = t260 - t826 / 0.2e1;
t137 = t260 + t257;
t136 = t257 - t823 / 0.2e1;
t121 = t233 + t232;
t120 = t233 - t828 / 0.2e1;
t119 = t232 - t827 / 0.2e1;
t110 = t209 + t222;
t109 = t209 - t830 / 0.2e1;
t108 = t222 - t831 / 0.2e1;
t75 = (t254 - t401 + (t471 + t762) * t594 + t704) * t594 + t703 * t592;
t74 = (t594 * t651 + t256 - t703) * t594 + (t592 * t651 + t255 + t653) * t592;
t70 = t609 + t833 + t839;
t38 = t602 + t834 + t840 + t849;
t36 = t835 + t841 + t850 + t855 + t602 + (t538 / 0.2e1 + t537 / 0.2e1) * t593 + t926;
t21 = t647 + t863;
t20 = t647 + t864;
t19 = t672 + t848 + t865;
t18 = t672 + t866 + t877;
t17 = t618 + t867 + t878;
t16 = t625 + t853 + t868 + t879;
t13 = t612 + t920;
t12 = t612 - t920;
t11 = t672 - t907 + t912 + t913;
t10 = t642 - t933;
t9 = t642 + t933;
t8 = t612 - t919;
t7 = t612 + t919;
t6 = t600 + t735 + t736;
t5 = t600 + t803 + t804;
t4 = (t74 / 0.2e1 + t178 / 0.2e1) * t592 + (t179 / 0.2e1 - t75 / 0.2e1) * t594 + t603;
t3 = t603 + t921;
t2 = t603 - t921;
t1 = t597 + t683 + t684;
t14 = [qJD(2) * t36 + qJD(3) * t38 + qJD(4) * t70 + qJD(5) * t927, t36 * qJD(1) + t1 * qJD(3) + t5 * qJD(4) + t110 * qJD(5) + (m(3) * ((-t377 * t594 - t378 * t592) * t542 + (-t508 * t594 + t509 * t592) * t540) / 0.2e1 + (t328 * t417 + t329 * t415) * t891 + (t296 * t310 + t297 * t308 - t307 * t314 - t309 * t313) * t889 + (t303 * t334 + t304 * t332 - t331 * t336 - t333 * t335) * t890) * t896 + ((t591 * t694 + t593 * t692) * t858 + t597 + t75 * t928 + (t74 + t178) * t859 + (-t591 * t695 + t593 * t693 + t179) * t856 + (t589 / 0.2e1 + t588 / 0.2e1) * t637) * qJD(2), t38 * qJD(1) + t1 * qJD(2) + t597 * qJD(3) + t6 * qJD(4) + t121 * qJD(5) + ((t616 + (-t484 * t594 + t485 * t592) * t517) * t891 + (t729 + (-t355 + t373) * t643) * t890 + (-t322 * t327 - t324 * t326 + t734) * t889) * t894, t70 * qJD(1) + t5 * qJD(2) + t6 * qJD(3) + t600 * qJD(4) + t137 * qJD(5) + ((-t349 * t359 - t350 * t357 + t732) * t889 + (t617 + (-t460 * t594 + t461 * t592) * t499) * t890) * t892, qJD(2) * t110 + qJD(3) * t121 + qJD(4) * t137 + t911; (t596 - (t538 + t537) * t593 / 0.2e1 - t926) * qJD(1) + t4 * qJD(2) + t2 * qJD(3) + t8 * qJD(4) + t109 * qJD(5) + (-t835 / 0.4e1 - t841 / 0.4e1 - t850 / 0.4e1 - t855 / 0.4e1) * t897, t4 * qJD(1) + (m(6) * (t106 * t158 - t307 * t308 - t309 * t310) + m(5) * (t156 * t199 - t331 * t332 - t333 * t334) + m(4) * (t206 * t287 - t415 * t910 - t417 * t909) + m(3) * ((t592 * (rSges(3,1) * t753 - t687) + t594 * (rSges(3,1) * t752 + rSges(3,3) * t592 - t557)) * (-t508 * t592 - t509 * t594) + t686 * t542 * t540) + (t588 * t503 + (-t592 * t502 + t901) * t594) * t858 + (t589 * t502 + (-t594 * t503 + t901) * t592) * t856 + t625) * qJD(2) + t16 * qJD(3) + t18 * qJD(4), t2 * qJD(1) + t16 * qJD(2) + t625 * qJD(3) + t9 * qJD(4) + (-t867 / 0.4e1 - t878 / 0.4e1 - t176 / 0.4e1) * t893 + ((t682 + t56) * t889 + (t680 + t83) * t890 + (t133 + t177) * t891) * t894, t8 * qJD(1) + t18 * qJD(2) + t9 * qJD(3) + (t646 - t864) * qJD(4) + ((t681 + t69) * t889 + (t91 + t171) * t890) * t892, t109 * qJD(1); t596 * qJD(1) + t3 * qJD(2) + t603 * qJD(3) + t12 * qJD(4) + t120 * qJD(5) + (-t834 / 0.4e1 - t840 / 0.4e1 - t849 / 0.4e1) * t897, t3 * qJD(1) + t625 * qJD(2) + t17 * qJD(3) + t10 * qJD(4) + (-t879 / 0.4e1 - t853 / 0.4e1 - t868 / 0.4e1) * t895 + ((t106 * t170 + t123 * t158 - t308 * t322 - t310 * t324 + t731) * t889 + (t156 * t218 + t182 * t199 - t332 * t373 - t334 * t643 + t725) * t890 + (t287 * t298 + (-t415 * t592 - t417 * t594) * t517 + t133) * t891) * t896, t603 * qJD(1) + t17 * qJD(2) + t618 * qJD(3) + t19 * qJD(4) + (m(6) * t682 / 0.4e1 + m(5) * t680 / 0.4e1) * t893, t12 * qJD(1) + t10 * qJD(2) + t19 * qJD(3) + (t646 - t863) * qJD(4) + ((t681 + t76) * t889 + (t116 + t171) * t890) * t892, t120 * qJD(1); t598 * qJD(1) + t7 * qJD(2) + t13 * qJD(3) + t612 * qJD(4) + t138 * qJD(5) + (-t833 / 0.4e1 - t839 / 0.4e1) * t897, t7 * qJD(1) + t672 * qJD(2) + t11 * qJD(3) + t20 * qJD(4) + (-t866 / 0.4e1 - t877 / 0.4e1) * t895 + ((t106 * t185 + t158 * t173 - t308 * t357 - t310 * t359 + t728) * t889 + (t199 * t288 + (-t332 * t592 - t334 * t594) * t499 + t91) * t890) * t896, t13 * qJD(1) + t11 * qJD(2) + t672 * qJD(3) + t21 * qJD(4) + (-t865 / 0.4e1 - t848 / 0.4e1) * t893 + ((t123 * t202 + t111 + t650) * t889 + (t196 + t599) * t890) * t894, t612 * qJD(1) + t20 * qJD(2) + t21 * qJD(3) + (m(6) * t681 + t647) * qJD(4), t138 * qJD(1); qJD(2) * t108 + qJD(3) * t119 + qJD(4) * t136 - t911, t108 * qJD(1) + (-t308 * t594 + t310 * t592) * t816 + t733, qJD(1) * t119 + t240 * t816 + t733, t136 * qJD(1) + t258 + 0.2e1 * (qJD(2) / 0.2e1 + qJD(3) / 0.2e1) * t824, 0;];
Cq = t14;
