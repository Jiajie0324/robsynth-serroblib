% Calculate time derivative of joint inertia matrix for
% S5RRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% MqD [5x5]
%   time derivative of inertia matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:46
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Mq = S5RRRRP1_inertiaDJ_slag_vp11(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP1_inertiaDJ_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP1_inertiaDJ_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP1_inertiaDJ_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRRP1_inertiaDJ_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRRP1_inertiaDJ_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRRP1_inertiaDJ_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From inertia_joint_joint_time_derivative_floatb_twist_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:44:47
% EndTime: 2019-12-05 18:45:15
% DurationCPUTime: 14.74s
% Computational Cost: add. (18267->657), mult. (17002->872), div. (0->0), fcn. (13348->8), ass. (0->382)
t282 = qJ(2) + qJ(3);
t271 = qJ(4) + t282;
t260 = cos(t271);
t259 = sin(t271);
t456 = Icges(6,4) * t259;
t222 = Icges(6,2) * t260 + t456;
t458 = Icges(5,4) * t259;
t223 = Icges(5,2) * t260 + t458;
t527 = -t223 - t222;
t455 = Icges(6,4) * t260;
t224 = Icges(6,1) * t259 + t455;
t457 = Icges(5,4) * t260;
t225 = Icges(5,1) * t259 + t457;
t526 = t225 + t224;
t284 = sin(qJ(1));
t286 = cos(qJ(1));
t340 = Icges(6,5) * t260 - Icges(6,6) * t259;
t168 = Icges(6,3) * t284 + t286 * t340;
t341 = Icges(5,5) * t260 - Icges(5,6) * t259;
t170 = Icges(5,3) * t284 + t286 * t341;
t525 = t168 + t170;
t344 = -Icges(6,2) * t259 + t455;
t172 = Icges(6,6) * t284 + t286 * t344;
t345 = -Icges(5,2) * t259 + t457;
t174 = Icges(5,6) * t284 + t286 * t345;
t524 = t172 + t174;
t349 = Icges(6,1) * t260 - t456;
t176 = Icges(6,5) * t284 + t286 * t349;
t350 = Icges(5,1) * t260 - t458;
t178 = Icges(5,5) * t284 + t286 * t350;
t523 = t176 + t178;
t278 = qJD(2) + qJD(3);
t266 = qJD(4) + t278;
t522 = (t344 + t345) * t266;
t521 = (t349 + t350) * t266;
t220 = Icges(6,5) * t259 + Icges(6,6) * t260;
t221 = Icges(5,5) * t259 + Icges(5,6) * t260;
t510 = t220 + t221;
t520 = -t259 * t527 - t526 * t260;
t171 = -Icges(6,6) * t286 + t284 * t344;
t173 = -Icges(5,6) * t286 + t284 * t345;
t519 = t171 + t173;
t175 = -Icges(6,5) * t286 + t284 * t349;
t177 = -Icges(5,5) * t286 + t284 * t350;
t518 = t175 + t177;
t285 = cos(qJ(2));
t261 = t285 * pkin(2) + pkin(1);
t269 = cos(t282);
t238 = pkin(3) * t269 + t261;
t216 = pkin(4) * t260 + t238;
t272 = t284 * rSges(6,3);
t426 = t260 * t286;
t428 = t259 * t286;
t517 = rSges(6,1) * t426 - rSges(6,2) * t428 + t286 * t216 + t272;
t274 = t284 * rSges(4,3);
t268 = sin(t282);
t470 = rSges(4,1) * t269;
t356 = -rSges(4,2) * t268 + t470;
t202 = t286 * t356 + t274;
t167 = -Icges(6,3) * t286 + t284 * t340;
t169 = -Icges(5,3) * t286 + t284 * t341;
t337 = t171 * t259 - t175 * t260;
t493 = t286 * t337;
t335 = t173 * t259 - t177 * t260;
t494 = t286 * t335;
t516 = t493 + t494 + (-t167 - t169) * t284;
t334 = t174 * t259 - t178 * t260;
t336 = t172 * t259 - t176 * t260;
t515 = (-t334 - t336) * t286 + t525 * t284;
t287 = -pkin(7) - pkin(6);
t279 = -pkin(8) + t287;
t270 = -qJ(5) + t279;
t405 = t270 - t279;
t412 = t216 - t238;
t114 = t284 * t412 + t286 * t405;
t468 = rSges(6,1) * t260;
t354 = -rSges(6,2) * t259 + t468;
t513 = -rSges(6,3) * t286 + t284 * t354 + t114;
t229 = t286 * t238;
t512 = -t284 * t405 - t229 + t517;
t283 = sin(qJ(2));
t395 = qJD(2) * t283;
t388 = pkin(2) * t395;
t424 = t268 * t278;
t226 = -pkin(3) * t424 - t388;
t429 = t259 * t266;
t159 = -pkin(4) * t429 + t226;
t227 = rSges(6,1) * t259 + rSges(6,2) * t260;
t317 = t227 * t266;
t511 = -t159 + t317;
t432 = t225 * t266;
t433 = t224 * t266;
t434 = t223 * t266;
t435 = t222 * t266;
t509 = (-t434 - t435 + t521) * t260 + (-t432 - t433 - t522) * t259 + t510 * qJD(1);
t95 = -qJD(1) * t171 - t286 * t435;
t97 = -qJD(1) * t173 - t286 * t434;
t507 = -t266 * t523 - t95 - t97;
t101 = -qJD(1) * t177 - t286 * t432;
t99 = -qJD(1) * t175 - t286 * t433;
t506 = -t266 * t524 + t101 + t99;
t505 = qJD(1) * t287 + t388;
t398 = qJD(1) * t284;
t381 = t259 * t398;
t397 = qJD(1) * t286;
t504 = rSges(6,2) * t381 + rSges(6,3) * t397 + qJD(5) * t284 + t286 * t159;
t503 = (t340 + t341) * t266 + t520 * qJD(1);
t228 = rSges(5,1) * t259 + rSges(5,2) * t260;
t318 = t228 * t266;
t249 = rSges(3,1) * t283 + rSges(3,2) * t285;
t315 = qJD(2) * t249;
t502 = t284 * t315;
t461 = Icges(3,4) * t285;
t348 = -Icges(3,2) * t283 + t461;
t213 = Icges(3,6) * t284 + t286 * t348;
t462 = Icges(3,4) * t283;
t353 = Icges(3,1) * t285 - t462;
t215 = Icges(3,5) * t284 + t286 * t353;
t330 = t213 * t283 - t215 * t285;
t501 = t284 * t330;
t459 = Icges(4,4) * t269;
t346 = -Icges(4,2) * t268 + t459;
t198 = Icges(4,6) * t284 + t286 * t346;
t460 = Icges(4,4) * t268;
t351 = Icges(4,1) * t269 - t460;
t200 = Icges(4,5) * t284 + t286 * t351;
t332 = t198 * t268 - t200 * t269;
t500 = t284 * t332;
t499 = t284 * t334;
t498 = t284 * t336;
t473 = pkin(1) - t261;
t497 = t284 * t473;
t212 = -Icges(3,6) * t286 + t284 * t348;
t214 = -Icges(3,5) * t286 + t284 * t353;
t331 = t212 * t283 - t214 * t285;
t496 = t286 * t331;
t197 = -Icges(4,6) * t286 + t284 * t346;
t199 = -Icges(4,5) * t286 + t284 * t351;
t333 = t197 * t268 - t199 * t269;
t495 = t286 * t333;
t492 = qJD(1) * t167;
t491 = qJD(1) * t169;
t342 = Icges(4,5) * t269 - Icges(4,6) * t268;
t195 = -Icges(4,3) * t286 + t284 * t342;
t490 = qJD(1) * t195;
t343 = Icges(3,5) * t285 - Icges(3,6) * t283;
t210 = -Icges(3,3) * t286 + t284 * t343;
t231 = Icges(4,2) * t269 + t460;
t232 = Icges(4,1) * t268 + t459;
t327 = t231 * t268 - t232 * t269;
t487 = qJD(1) * t327 + t342 * t278;
t404 = t279 - t287;
t411 = t238 - t261;
t143 = t284 * t411 + t286 * t404;
t486 = 2 * m(3);
t485 = 2 * m(4);
t484 = 2 * m(5);
t483 = 2 * m(6);
t280 = t284 ^ 2;
t281 = t286 ^ 2;
t100 = qJD(1) * t176 - t284 * t433;
t368 = t171 * t266 - t100;
t96 = qJD(1) * t172 - t284 * t435;
t372 = t175 * t266 + t96;
t402 = qJD(1) * t168;
t427 = t260 * t266;
t47 = -t167 * t286 - t284 * t337;
t48 = -t168 * t286 - t498;
t309 = t266 * t220;
t91 = -t286 * t309 - t492;
t92 = -t284 * t309 + t402;
t3 = (t286 * t92 + (t48 + t493) * qJD(1)) * t286 + (t47 * qJD(1) + (-t172 * t427 - t176 * t429 - t259 * t95 + t260 * t99 + t402) * t284 + (-t91 + t368 * t260 + t372 * t259 + (-t167 - t336) * qJD(1)) * t286) * t284;
t102 = qJD(1) * t178 - t284 * t432;
t366 = t173 * t266 - t102;
t98 = qJD(1) * t174 - t284 * t434;
t370 = t177 * t266 + t98;
t401 = qJD(1) * t170;
t49 = -t169 * t286 - t284 * t335;
t50 = -t170 * t286 - t499;
t310 = t266 * t221;
t93 = -t286 * t310 - t491;
t94 = -t284 * t310 + t401;
t4 = (t286 * t94 + (t50 + t494) * qJD(1)) * t286 + (t49 * qJD(1) + (t101 * t260 - t174 * t427 - t178 * t429 - t259 * t97 + t401) * t284 + (-t93 + t366 * t260 + t370 * t259 + (-t169 - t334) * qJD(1)) * t286) * t284;
t482 = -t3 - t4;
t481 = t284 / 0.2e1;
t480 = -t286 / 0.2e1;
t479 = m(3) * t249;
t465 = rSges(4,2) * t269;
t233 = rSges(4,1) * t268 + t465;
t478 = m(4) * t233;
t477 = m(5) * t228;
t476 = pkin(2) * t283;
t475 = pkin(3) * t268;
t474 = t284 * pkin(6);
t277 = t286 * pkin(6);
t472 = -pkin(6) - t287;
t471 = rSges(3,1) * t285;
t469 = rSges(5,1) * t260;
t467 = rSges(3,2) * t283;
t464 = rSges(3,3) * t286;
t275 = t284 * rSges(3,3);
t273 = t284 * rSges(5,3);
t463 = rSges(6,3) - t270;
t355 = -rSges(5,2) * t259 + t469;
t186 = t355 * t266;
t442 = t186 * t284;
t441 = t186 * t286;
t209 = t356 * t278;
t440 = t209 * t284;
t439 = t212 * t285;
t438 = t213 * t285;
t437 = t214 * t283;
t436 = t215 * t283;
t431 = t231 * t278;
t430 = t232 * t278;
t425 = t266 * t286;
t423 = t269 * t278;
t422 = t270 * t284;
t421 = t278 * t284;
t420 = t278 * t286;
t250 = t286 * t261;
t144 = -t284 * t404 + t229 - t250;
t418 = t284 * t143 + t286 * t144;
t190 = rSges(5,1) * t426 - rSges(5,2) * t428 + t273;
t417 = -t144 - t190;
t188 = -rSges(5,3) * t286 + t284 * t355;
t105 = t284 * t188 + t286 * t190;
t193 = t286 * t287 + t277 - t497;
t194 = -t286 * pkin(1) + t284 * t472 + t250;
t415 = t284 * t193 + t286 * t194;
t201 = -t286 * rSges(4,3) + t284 * t356;
t113 = t284 * t201 + t286 * t202;
t414 = pkin(4) * t381 + t227 * t398;
t380 = t268 * t398;
t243 = pkin(3) * t380;
t413 = t228 * t398 + t243;
t409 = rSges(5,2) * t381 + rSges(5,3) * t397;
t408 = rSges(4,2) * t380 + rSges(4,3) * t397;
t407 = t505 * t284;
t406 = t286 * t471 + t275;
t403 = t280 + t281;
t196 = Icges(4,3) * t284 + t286 * t342;
t400 = qJD(1) * t196;
t211 = Icges(3,3) * t284 + t286 * t343;
t399 = qJD(1) * t211;
t394 = qJD(2) * t285;
t393 = qJD(5) * t286;
t392 = pkin(3) * t423;
t217 = t286 * t226;
t255 = t279 * t398;
t361 = t286 * t388;
t391 = t143 * t397 + t284 * (t226 * t284 + t397 * t411 - t255 + t407) + t286 * (-qJD(1) * t143 + t217 + t361);
t301 = -t259 * t425 - t260 * t398;
t386 = t260 * t425;
t390 = t188 * t397 + t284 * (-t284 * t318 + (t286 * t355 + t273) * qJD(1)) + t286 * (rSges(5,1) * t301 - rSges(5,2) * t386 + t409);
t389 = t286 * t467;
t387 = pkin(2) * t394;
t316 = t233 * t278;
t385 = t284 * (t202 * qJD(1) - t284 * t316) + t286 * (-t420 * t465 + (-t268 * t420 - t269 * t398) * rSges(4,1) + t408) + t201 * t397;
t384 = -t144 - t512;
t383 = t284 * ((-t286 * t473 - t474) * qJD(1) - t407) + t286 * (-t361 + (t286 * t472 + t497) * qJD(1)) + t193 * t397;
t382 = t243 + t414;
t379 = t283 * t398;
t378 = t398 / 0.2e1;
t377 = t397 / 0.2e1;
t376 = -t233 - t476;
t375 = -t228 - t475;
t374 = -pkin(4) * t259 - t227;
t118 = -qJD(1) * t197 - t286 * t431;
t365 = t200 * t278 + t118;
t119 = qJD(1) * t198 - t284 * t431;
t364 = t199 * t278 + t119;
t120 = -qJD(1) * t199 - t286 * t430;
t363 = -t198 * t278 + t120;
t121 = qJD(1) * t200 - t284 * t430;
t362 = t197 * t278 - t121;
t35 = t513 * t284 + t512 * t286;
t37 = t105 + t418;
t360 = -t186 - t392;
t185 = t354 * t266;
t359 = -pkin(4) * t427 - t185;
t358 = ((-t47 - t49) * t398 + t516 * t397) * t286 + (((t91 + t93) * t284 + (t498 + t499 - t516) * qJD(1)) * t284 + (t48 + t50) * t398 + t515 * t397 + ((-t92 - t94) * t284 + (t519 * t427 + t518 * t429 - t491 - t492) * t286 + (t506 * t284 + (-t100 - t102) * t286) * t260 + (t507 * t284 + (t96 + t98) * t286) * t259 + ((-t337 - t335 + t525) * t284 + t515) * qJD(1)) * t286) * t284;
t357 = -t467 + t471;
t352 = Icges(3,1) * t283 + t461;
t347 = Icges(3,2) * t285 + t462;
t230 = Icges(4,5) * t268 + Icges(4,6) * t269;
t326 = t513 * t397 + (rSges(6,1) * t301 - rSges(6,2) * t386 - qJD(1) * t114 - t217 + t504) * t286 + (-t393 + t255 + (-t226 - t511) * t284 + (t272 - t422 + (t354 + t412) * t286) * qJD(1)) * t284;
t325 = t390 + t391;
t324 = -pkin(1) - t357;
t323 = t375 - t476;
t322 = t374 - t475;
t321 = -t261 - t356;
t320 = -t238 - t355;
t319 = -t216 - t354;
t14 = t35 + t418;
t306 = t278 * t230;
t305 = qJD(2) * t352;
t304 = qJD(2) * t347;
t303 = qJD(2) * (-Icges(3,5) * t283 - Icges(3,6) * t285);
t146 = t323 * t286;
t140 = t322 * t286;
t116 = -t286 * t306 - t490;
t117 = -t284 * t306 + t400;
t57 = -t195 * t286 - t284 * t333;
t58 = -t196 * t286 - t500;
t59 = t195 * t284 - t495;
t60 = t196 * t284 - t286 * t332;
t302 = (t284 * t58 - t286 * t57) * t398 + (t284 * t60 - t286 * t59) * t397 + t284 * ((t116 * t284 + (t59 + t500) * qJD(1)) * t284 + (t60 * qJD(1) + (t119 * t268 - t121 * t269 + t197 * t423 + t199 * t424 - t490) * t286 + (-t117 + t363 * t269 - t365 * t268 + (t196 - t333) * qJD(1)) * t284) * t286) + t358;
t300 = t359 - t392;
t299 = t360 - t387;
t298 = t322 - t476;
t297 = t326 + t391;
t296 = t286 * t482 + t358;
t127 = t298 * t286;
t295 = rSges(3,2) * t379 + rSges(3,3) * t397 - t286 * t315;
t294 = t300 - t387;
t7 = (t117 * t286 + (t58 + t495) * qJD(1)) * t286 + (t57 * qJD(1) + (-t118 * t268 + t120 * t269 - t198 * t423 - t200 * t424 + t400) * t284 + (-t116 + t362 * t269 + t364 * t268 + (-t195 - t332) * qJD(1)) * t286) * t284;
t293 = (-t7 + t482) * t286 + t302;
t292 = (t506 * t259 - t507 * t260 + t503 * t284 + t509 * t286) * t481 + (-t503 * t286 + t509 * t284 + (t370 + t372) * t260 + (-t366 - t368) * t259) * t480 + (t518 * t259 + t519 * t260 - t284 * t520 - t510 * t286) * t378 + (t259 * t523 + t260 * t524 + t510 * t284 - t286 * t520) * t377;
t205 = t346 * t278;
t206 = t351 * t278;
t289 = qJD(1) * t230 + (t206 - t431) * t269 + (-t205 - t430) * t268;
t288 = t292 + (t268 * t363 + t269 * t365 + t284 * t487 + t289 * t286) * t481 + (-t268 * t362 + t269 * t364 + t289 * t284 - t286 * t487) * t480 + (t197 * t269 + t199 * t268 - t230 * t286 - t284 * t327) * t378 + (t198 * t269 + t200 * t268 + t230 * t284 - t286 * t327) * t377;
t254 = pkin(2) * t379;
t237 = t357 * qJD(2);
t219 = -t389 + t406;
t218 = t284 * t357 - t464;
t192 = t376 * t286;
t191 = t376 * t284;
t162 = t474 + (pkin(1) - t467) * t286 + t406;
t161 = t284 * t324 + t277 + t464;
t158 = t375 * t286;
t157 = t375 * t284;
t151 = t374 * t286;
t150 = t374 * t284;
t145 = t323 * t284;
t142 = -t284 * t287 + t202 + t250;
t141 = (rSges(4,3) - t287) * t286 + t321 * t284;
t139 = t322 * t284;
t132 = t284 * t303 + t399;
t131 = -qJD(1) * t210 + t286 * t303;
t126 = t298 * t284;
t125 = -t284 * t279 + t190 + t229;
t124 = (rSges(5,3) - t279) * t286 + t320 * t284;
t123 = t502 + ((-rSges(3,3) - pkin(6)) * t284 + t324 * t286) * qJD(1);
t122 = (t277 + (-pkin(1) - t471) * t284) * qJD(1) + t295;
t110 = -t422 + t517;
t109 = t284 * t319 + t286 * t463;
t104 = -t233 * t397 - t440 + (-t283 * t397 - t284 * t394) * pkin(2);
t103 = t233 * t398 + t254 + (-t209 - t387) * t286;
t78 = -t228 * t397 - t442 + (-t268 * t397 - t269 * t421) * pkin(3);
t77 = t286 * t360 + t413;
t74 = t211 * t284 - t330 * t286;
t73 = t210 * t284 - t496;
t72 = -t211 * t286 - t501;
t71 = -t210 * t286 - t284 * t331;
t70 = -t227 * t397 - t185 * t284 + (-t259 * t397 - t284 * t427) * pkin(4);
t69 = t286 * t359 + t414;
t64 = t233 * t421 + (t286 * t321 - t274) * qJD(1) + t407;
t63 = (-t261 - t470) * t398 + (-t316 - t505) * t286 + t408;
t62 = qJD(1) * t146 + t284 * t299;
t61 = t286 * t299 + t254 + t413;
t56 = qJD(1) * t140 + t284 * t300;
t55 = t286 * t300 + t382;
t46 = t255 + (-t226 + t318) * t284 + (t286 * t320 - t273) * qJD(1);
t45 = t217 - t286 * t318 + (-t286 * t279 + (-t238 - t469) * t284) * qJD(1) + t409;
t44 = t113 + t415;
t43 = qJD(1) * t127 + t284 * t294;
t42 = t286 * t294 + t254 + t382;
t39 = t393 + t511 * t284 + (-t284 * t463 + t286 * t319) * qJD(1);
t38 = -t286 * t317 + (-t270 * t286 + (-t216 - t468) * t284) * qJD(1) + t504;
t36 = -t202 * t398 + t385;
t32 = -t190 * t398 + t390;
t29 = t37 + t415;
t13 = (-t194 - t202) * t398 + t383 + t385;
t12 = t14 + t415;
t11 = t398 * t417 + t325;
t10 = -t398 * t512 + t326;
t9 = (-t194 + t417) * t398 + t325 + t383;
t8 = t384 * t398 + t297;
t5 = (-t194 + t384) * t398 + t297 + t383;
t1 = [(t109 * t39 + t110 * t38) * t483 + (t124 * t46 + t125 * t45) * t484 + t232 * t423 + t268 * t206 - t231 * t424 + t269 * t205 + (t141 * t64 + t142 * t63) * t485 + (t122 * t162 + t123 * t161) * t486 + t527 * t429 + t526 * t427 + (t353 - t347) * t395 + (t352 + t348) * t394 + t522 * t260 + t521 * t259; ((t438 / 0.2e1 + t436 / 0.2e1 - t162 * t479) * t286 + (t161 * t479 + t439 / 0.2e1 + t437 / 0.2e1) * t284) * qJD(1) + (-qJD(2) * t331 + (qJD(1) * t213 - t284 * t304) * t285 + (qJD(1) * t215 - t284 * t305) * t283) * t480 + (-qJD(2) * t330 + (-qJD(1) * t212 - t286 * t304) * t285 + (-qJD(1) * t214 - t286 * t305) * t283) * t481 + m(3) * ((-t122 * t284 - t123 * t286) * t249 + (-t161 * t286 - t162 * t284) * t237) + (t281 / 0.2e1 + t280 / 0.2e1) * t343 * qJD(2) + t288 + m(4) * (t103 * t141 + t104 * t142 + t191 * t63 + t192 * t64) + m(5) * (t124 * t61 + t125 * t62 + t145 * t45 + t146 * t46) + m(6) * (t109 * t42 + t110 * t43 + t126 * t38 + t127 * t39); t302 + (t12 * t5 + t126 * t43 + t127 * t42) * t483 + (t145 * t62 + t146 * t61 + t29 * t9) * t484 + (t103 * t192 + t104 * t191 + t13 * t44) * t485 + (t284 * t74 - t286 * t73) * t397 + (t284 * t72 - t286 * t71) * t398 + t284 * ((t284 * t131 + (t73 + t501) * qJD(1)) * t284 + (t74 * qJD(1) + (t212 * t394 + t214 * t395) * t286 + (-t132 + (-t436 - t438) * qJD(2) + (t211 - t331) * qJD(1)) * t284) * t286) - t286 * ((t286 * t132 + (t72 + t496) * qJD(1)) * t286 + (t71 * qJD(1) + (-t213 * t394 - t215 * t395 + t399) * t284 + (-t131 + (t437 + t439) * qJD(2) - t330 * qJD(1)) * t286) * t284) + ((t218 * t284 + t219 * t286) * ((qJD(1) * t218 + t295) * t286 + (-t502 + (-t219 - t389 + t275) * qJD(1)) * t284) + t403 * t249 * t237) * t486 - t286 * t4 - t286 * t3 - t286 * t7; t288 + (-t284 * t63 - t286 * t64 + (t141 * t284 - t142 * t286) * qJD(1)) * t478 + m(4) * (-t141 * t286 - t142 * t284) * t209 + m(5) * (t124 * t77 + t125 * t78 + t157 * t45 + t158 * t46) + m(6) * (t109 * t55 + t110 * t56 + t139 * t38 + t140 * t39); t293 + m(6) * (t12 * t8 + t126 * t56 + t127 * t55 + t139 * t43 + t14 * t5 + t140 * t42) + m(5) * (t11 * t29 + t145 * t78 + t146 * t77 + t157 * t62 + t158 * t61 + t37 * t9) + m(4) * (-t192 * t209 * t286 + t113 * t13 - t191 * t440 + t36 * t44) + (-t103 * t286 - t104 * t284 + (-t191 * t286 + t192 * t284) * qJD(1)) * t478; (t139 * t56 + t14 * t8 + t140 * t55) * t483 + (t11 * t37 + t157 * t78 + t158 * t77) * t484 + (t209 * t233 * t403 + t113 * t36) * t485 + t293; t292 + m(5) * (-t124 * t286 - t125 * t284) * t186 + (-t284 * t45 - t286 * t46 + (t124 * t284 - t125 * t286) * qJD(1)) * t477 + m(6) * (t109 * t69 + t110 * t70 + t150 * t38 + t151 * t39); m(6) * (t10 * t12 + t126 * t70 + t127 * t69 + t150 * t43 + t151 * t42 + t35 * t5) + m(5) * (t105 * t9 - t145 * t442 - t146 * t441 + t29 * t32) + (-t284 * t62 - t286 * t61 + (-t145 * t286 + t146 * t284) * qJD(1)) * t477 + t296; m(6) * (t10 * t14 + t139 * t70 + t140 * t69 + t150 * t56 + t151 * t55 + t35 * t8) + m(5) * (t105 * t11 - t157 * t442 - t158 * t441 + t32 * t37) + (-t284 * t78 - t286 * t77 + (-t157 * t286 + t158 * t284) * qJD(1)) * t477 + t296; (t186 * t228 * t403 + t105 * t32) * t484 + (t10 * t35 + t150 * t70 + t151 * t69) * t483 + t296; m(6) * (t284 * t39 - t286 * t38 + (t109 * t286 + t110 * t284) * qJD(1)); m(6) * (t284 * t42 - t286 * t43 + (t126 * t284 + t127 * t286) * qJD(1)); m(6) * (t284 * t55 - t286 * t56 + (t139 * t284 + t140 * t286) * qJD(1)); m(6) * (t284 * t69 - t286 * t70 + (t150 * t284 + t151 * t286) * qJD(1)); 0;];
%% Postprocessing: Reshape Output
% From vec2symmat_5_matlab.m
res = [t1(1), t1(2), t1(4), t1(7), t1(11); t1(2), t1(3), t1(5), t1(8), t1(12); t1(4), t1(5), t1(6), t1(9), t1(13); t1(7), t1(8), t1(9), t1(10), t1(14); t1(11), t1(12), t1(13), t1(14), t1(15);];
Mq = res;
