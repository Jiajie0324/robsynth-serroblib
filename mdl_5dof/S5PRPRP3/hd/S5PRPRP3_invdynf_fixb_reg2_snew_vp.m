% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5PRPRP3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d4,theta1,theta3]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:34
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5PRPRP3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPRP3_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPRP3_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRPRP3_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRPRP3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRPRP3_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:33:59
% EndTime: 2019-12-05 15:34:00
% DurationCPUTime: 1.43s
% Computational Cost: add. (2642->130), mult. (5003->170), div. (0->0), fcn. (3149->8), ass. (0->98)
t939 = cos(qJ(4));
t929 = t939 ^ 2;
t942 = qJD(2) ^ 2;
t954 = t929 * t942;
t933 = sin(pkin(7));
t935 = cos(pkin(7));
t913 = t933 * g(1) - t935 * g(2);
t953 = t933 * t913;
t952 = t939 * t942;
t914 = -t935 * g(1) - t933 * g(2);
t930 = -g(3) + qJDD(1);
t938 = sin(qJ(2));
t940 = cos(qJ(2));
t897 = t940 * t914 + t938 * t930;
t895 = -t942 * pkin(2) + t897;
t932 = sin(pkin(8));
t934 = cos(pkin(8));
t896 = -t938 * t914 + t940 * t930;
t943 = qJDD(2) * pkin(2) + t896;
t875 = t934 * t895 + t932 * t943;
t873 = -t942 * pkin(3) + qJDD(2) * pkin(6) + t875;
t906 = -qJDD(3) + t913;
t937 = sin(qJ(4));
t866 = t939 * t873 - t937 * t906;
t928 = t937 ^ 2;
t951 = t928 + t929;
t950 = qJD(2) * t937;
t949 = t937 * qJDD(2);
t948 = t939 * qJDD(2);
t947 = 0.2e1 * qJD(2) * t939;
t946 = qJD(4) * t950;
t874 = -t932 * t895 + t934 * t943;
t907 = t934 * qJDD(2) - t932 * t942;
t908 = -t932 * qJDD(2) - t934 * t942;
t945 = -t938 * t907 + t940 * t908;
t883 = t940 * t907 + t938 * t908;
t872 = -qJDD(2) * pkin(3) - t942 * pkin(6) - t874;
t944 = -t946 + t948;
t941 = qJD(4) ^ 2;
t920 = t937 * t952;
t919 = -t941 - t954;
t918 = -t928 * t942 - t941;
t917 = -qJDD(4) + t920;
t916 = qJDD(4) + t920;
t915 = qJD(4) * pkin(4) - qJ(5) * t950;
t912 = t951 * t942;
t911 = t940 * qJDD(2) - t938 * t942;
t910 = -t938 * qJDD(2) - t940 * t942;
t909 = t951 * qJDD(2);
t905 = -0.2e1 * t946 + t948;
t904 = qJD(4) * t947 + t949;
t901 = t935 * t913;
t899 = t939 * t906;
t894 = t939 * t917 - t937 * t918;
t893 = -t937 * t916 + t939 * t919;
t892 = t937 * t917 + t939 * t918;
t891 = t939 * t916 + t937 * t919;
t887 = t934 * t909 - t932 * t912;
t886 = t932 * t909 + t934 * t912;
t881 = t934 * t894 + t932 * t904;
t880 = t934 * t893 - t932 * t905;
t879 = t932 * t894 - t934 * t904;
t878 = t932 * t893 + t934 * t905;
t877 = -t938 * t896 + t940 * t897;
t876 = t940 * t896 + t938 * t897;
t870 = -t938 * t886 + t940 * t887;
t869 = t940 * t886 + t938 * t887;
t868 = t935 * t870;
t867 = t933 * t870;
t865 = -t937 * t873 - t899;
t864 = -t938 * t879 + t940 * t881;
t863 = -t938 * t878 + t940 * t880;
t862 = t940 * t879 + t938 * t881;
t861 = t940 * t878 + t938 * t880;
t860 = -t944 * pkin(4) - qJ(5) * t954 + t915 * t950 + qJDD(5) + t872;
t859 = -pkin(4) * t954 + t944 * qJ(5) - qJD(4) * t915 + qJD(5) * t947 + t866;
t858 = -t932 * t874 + t934 * t875;
t857 = t934 * t874 + t932 * t875;
t856 = qJDD(4) * pkin(4) - t899 + (pkin(4) * t952 - qJDD(2) * qJ(5) - 0.2e1 * qJD(2) * qJD(5) - t873) * t937;
t855 = t935 * t864 + t933 * t892;
t854 = t935 * t863 + t933 * t891;
t853 = t933 * t864 - t935 * t892;
t852 = t933 * t863 - t935 * t891;
t851 = -t937 * t865 + t939 * t866;
t850 = t939 * t865 + t937 * t866;
t849 = t934 * t851 + t932 * t872;
t848 = t932 * t851 - t934 * t872;
t847 = -t937 * t856 + t939 * t859;
t846 = t939 * t856 + t937 * t859;
t845 = -t938 * t857 + t940 * t858;
t844 = t940 * t857 + t938 * t858;
t843 = t934 * t847 + t932 * t860;
t842 = t932 * t847 - t934 * t860;
t841 = -t938 * t848 + t940 * t849;
t840 = t940 * t848 + t938 * t849;
t839 = -t938 * t842 + t940 * t843;
t838 = t940 * t842 + t938 * t843;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t935 * t914 - t953, 0, 0, 0, 0, 0, 0, t935 * t910, -t935 * t911, 0, t935 * t877 - t953, 0, 0, 0, 0, 0, 0, t935 * t945, -t935 * t883, 0, t935 * t845 - t933 * t906, 0, 0, 0, 0, 0, 0, t854, t855, t868, t935 * t841 + t933 * t850, 0, 0, 0, 0, 0, 0, t854, t855, t868, t935 * t839 + t933 * t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t933 * t914 + t901, 0, 0, 0, 0, 0, 0, t933 * t910, -t933 * t911, 0, t933 * t877 + t901, 0, 0, 0, 0, 0, 0, t933 * t945, -t933 * t883, 0, t933 * t845 + t935 * t906, 0, 0, 0, 0, 0, 0, t852, t853, t867, t933 * t841 - t935 * t850, 0, 0, 0, 0, 0, 0, t852, t853, t867, t933 * t839 - t935 * t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t930, 0, 0, 0, 0, 0, 0, t911, t910, 0, t876, 0, 0, 0, 0, 0, 0, t883, t945, 0, t844, 0, 0, 0, 0, 0, 0, t861, t862, t869, t840, 0, 0, 0, 0, 0, 0, t861, t862, t869, t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t914, 0, 0, 0, 0, 0, 0, t910, -t911, 0, t877, 0, 0, 0, 0, 0, 0, t945, -t883, 0, t845, 0, 0, 0, 0, 0, 0, t863, t864, t870, t841, 0, 0, 0, 0, 0, 0, t863, t864, t870, t839; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t913, 0, 0, 0, 0, 0, 0, 0, 0, 0, t913, 0, 0, 0, 0, 0, 0, 0, 0, 0, t906, 0, 0, 0, 0, 0, 0, -t891, -t892, 0, -t850, 0, 0, 0, 0, 0, 0, -t891, -t892, 0, -t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t930, 0, 0, 0, 0, 0, 0, t911, t910, 0, t876, 0, 0, 0, 0, 0, 0, t883, t945, 0, t844, 0, 0, 0, 0, 0, 0, t861, t862, t869, t840, 0, 0, 0, 0, 0, 0, t861, t862, t869, t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t942, -qJDD(2), 0, t897, 0, 0, 0, 0, 0, 0, t908, -t907, 0, t858, 0, 0, 0, 0, 0, 0, t880, t881, t887, t849, 0, 0, 0, 0, 0, 0, t880, t881, t887, t843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t942, 0, t896, 0, 0, 0, 0, 0, 0, t907, t908, 0, t857, 0, 0, 0, 0, 0, 0, t878, t879, t886, t848, 0, 0, 0, 0, 0, 0, t878, t879, t886, t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t913, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t906, 0, 0, 0, 0, 0, 0, t891, t892, 0, t850, 0, 0, 0, 0, 0, 0, t891, t892, 0, t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t942, -qJDD(2), 0, t875, 0, 0, 0, 0, 0, 0, t893, t894, t909, t851, 0, 0, 0, 0, 0, 0, t893, t894, t909, t847; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t942, 0, t874, 0, 0, 0, 0, 0, 0, t905, -t904, t912, -t872, 0, 0, 0, 0, 0, 0, t905, -t904, t912, -t860; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t906, 0, 0, 0, 0, 0, 0, t891, t892, 0, t850, 0, 0, 0, 0, 0, 0, t891, t892, 0, t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t919, t917, t948, t866, 0, 0, 0, 0, 0, 0, t919, t917, t948, t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t916, t918, -t949, t865, 0, 0, 0, 0, 0, 0, t916, t918, -t949, t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t905, t904, -t912, t872, 0, 0, 0, 0, 0, 0, -t905, t904, -t912, t860; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t919, t917, t948, t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t916, t918, -t949, t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t905, t904, -t912, t860;];
f_new_reg = t1;
