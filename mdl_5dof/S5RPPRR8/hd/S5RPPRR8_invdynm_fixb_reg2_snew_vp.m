% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPPRR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:01
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPPRR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR8_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR8_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPPRR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPPRR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPPRR8_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:01:22
% EndTime: 2019-12-31 18:01:28
% DurationCPUTime: 6.04s
% Computational Cost: add. (23706->392), mult. (35502->455), div. (0->0), fcn. (14858->8), ass. (0->231)
t587 = -qJD(1) + qJD(4);
t585 = t587 ^ 2;
t586 = qJDD(1) - qJDD(4);
t595 = sin(qJ(4));
t598 = cos(qJ(4));
t551 = t585 * t598 - t586 * t595;
t553 = t585 * t595 + t586 * t598;
t592 = sin(pkin(8));
t593 = cos(pkin(8));
t497 = t551 * t593 - t553 * t592;
t591 = g(3) + qJDD(3);
t527 = pkin(6) * t551 + t591 * t598;
t675 = pkin(6) * t553 + t591 * t595;
t461 = qJ(3) * t497 + t527 * t593 - t592 * t675;
t596 = sin(qJ(1));
t599 = cos(qJ(1));
t501 = t551 * t592 + t553 * t593;
t672 = t497 * t596 - t501 * t599;
t680 = qJ(3) * t501 + t527 * t592 + t593 * t675;
t690 = -pkin(5) * t672 + t596 * t461 - t599 * t680;
t681 = t497 * t599 + t501 * t596;
t689 = -pkin(5) * t681 + t599 * t461 + t596 * t680;
t601 = qJD(1) ^ 2;
t571 = g(1) * t596 - t599 * g(2);
t625 = -qJDD(2) + t571;
t611 = -qJ(2) * t601 - t625;
t660 = pkin(1) + pkin(2);
t604 = -t660 * qJDD(1) + t611;
t638 = (qJD(2) * qJD(1));
t583 = 2 * t638;
t572 = g(1) * t599 + g(2) * t596;
t588 = qJDD(1) * qJ(2);
t617 = -t572 + t588;
t605 = -t660 * t601 + t583 + t617;
t485 = t592 * t604 + t593 * t605;
t479 = -pkin(3) * t601 + t485;
t603 = t592 * t605;
t602 = -t603 + t593 * t611 + (-t593 * t660 - pkin(3)) * qJDD(1);
t444 = t479 * t595 - t598 * t602;
t445 = t598 * t479 + t595 * t602;
t633 = t444 * t595 + t598 * t445;
t424 = t444 * t598 - t445 * t595;
t652 = t424 * t593;
t402 = -t592 * t633 + t652;
t653 = t424 * t592;
t677 = t593 * t633 + t653;
t687 = t402 * t596 - t599 * t677;
t686 = t402 * t599 + t596 * t677;
t562 = -t592 * qJDD(1) + t593 * t601;
t532 = qJ(3) * t562 + t591 * t593;
t563 = qJDD(1) * t593 + t592 * t601;
t624 = qJ(3) * t563 + t591 * t592;
t662 = t599 * t562 + t563 * t596;
t676 = -pkin(5) * t662 + t599 * t532 + t596 * t624;
t484 = -t593 * t604 + t603;
t452 = t484 * t593 - t485 * t592;
t623 = t484 * t592 + t485 * t593;
t674 = t452 * t596 - t599 * t623;
t673 = t452 * t599 + t596 * t623;
t509 = -t562 * t596 + t599 * t563;
t671 = pkin(5) * t509 + t596 * t532 - t599 * t624;
t440 = -pkin(4) * t585 - pkin(7) * t586 + t445;
t594 = sin(qJ(5));
t597 = cos(qJ(5));
t432 = t440 * t594 - t597 * t591;
t433 = t440 * t597 + t591 * t594;
t418 = t594 * t432 + t597 * t433;
t659 = pkin(1) * t591;
t658 = pkin(3) * t424;
t656 = qJ(2) * t591;
t655 = qJ(3) * t452;
t654 = qJDD(1) * pkin(1);
t570 = t597 * t585 * t594;
t560 = qJDD(5) + t570;
t651 = t560 * t594;
t650 = t560 * t597;
t561 = qJDD(5) - t570;
t649 = t561 * t594;
t648 = t561 * t597;
t589 = t594 ^ 2;
t645 = t585 * t589;
t439 = t586 * pkin(4) - t585 * pkin(7) + t444;
t436 = t594 * t439;
t642 = t594 * t586;
t437 = t597 * t439;
t575 = t597 * t586;
t641 = -pkin(4) * t439 + pkin(7) * t418;
t590 = t597 ^ 2;
t640 = t589 + t590;
t639 = qJD(5) * t587;
t600 = qJD(5) ^ 2;
t567 = -t600 - t645;
t518 = -t567 * t594 - t648;
t574 = t597 * t639;
t544 = 0.2e1 * t574 - t642;
t637 = -pkin(4) * t544 + pkin(7) * t518 + t436;
t576 = t590 * t585;
t569 = -t576 - t600;
t516 = t569 * t597 - t651;
t635 = t594 * t639;
t547 = -t575 - 0.2e1 * t635;
t636 = pkin(4) * t547 + pkin(7) * t516 - t437;
t582 = pkin(2) * t591;
t634 = qJ(3) * t623 - t582;
t535 = pkin(1) * t601 - t617 - (2 * t638);
t538 = -t611 + t654;
t632 = -t599 * t535 - t538 * t596;
t631 = -t571 * t596 - t599 * t572;
t630 = t595 * t570;
t629 = t598 * t570;
t549 = t640 * t586;
t554 = t576 + t645;
t628 = pkin(4) * t554 - pkin(7) * t549 + t418;
t406 = t418 * t595 - t439 * t598;
t627 = pkin(3) * t406 + t641;
t626 = -pkin(3) * t551 - t445;
t564 = qJDD(1) * t596 + t599 * t601;
t541 = -pkin(5) * t564 + g(3) * t599;
t565 = qJDD(1) * t599 - t596 * t601;
t540 = pkin(5) * t565 + g(3) * t596;
t417 = t432 * t597 - t433 * t594;
t622 = t535 * t596 - t538 * t599;
t620 = t571 * t599 - t572 * t596;
t481 = t518 * t595 - t544 * t598;
t619 = pkin(3) * t481 + t637;
t480 = t516 * t595 + t547 * t598;
t618 = pkin(3) * t480 + t636;
t616 = -pkin(3) * t553 - t444;
t407 = t418 * t598 + t439 * t595;
t384 = pkin(6) * t407 - (-pkin(4) * t598 - pkin(7) * t595 - pkin(3)) * t417;
t389 = -pkin(6) * t406 - (pkin(4) * t595 - pkin(7) * t598) * t417;
t393 = t406 * t593 + t407 * t592;
t615 = -qJ(3) * t393 - t384 * t592 + t593 * t389;
t512 = t569 * t594 + t650;
t426 = -pkin(4) * t512 + t432;
t428 = -pkin(7) * t512 + t436;
t482 = t516 * t598 - t547 * t595;
t404 = -pkin(3) * t512 + pkin(6) * t482 + t426 * t598 + t428 * t595;
t410 = -pkin(6) * t480 - t426 * t595 + t428 * t598;
t446 = t480 * t593 + t482 * t592;
t614 = -qJ(3) * t446 - t404 * t592 + t593 * t410;
t514 = t567 * t597 - t649;
t427 = -pkin(4) * t514 + t433;
t429 = -pkin(7) * t514 + t437;
t483 = t518 * t598 + t544 * t595;
t405 = -pkin(3) * t514 + pkin(6) * t483 + t427 * t598 + t429 * t595;
t411 = -pkin(6) * t481 - t427 * t595 + t429 * t598;
t447 = t481 * t593 + t483 * t592;
t613 = -qJ(3) * t447 - t405 * t592 + t593 * t411;
t503 = -t549 * t595 + t554 * t598;
t612 = pkin(3) * t503 + t628;
t394 = -t406 * t592 + t407 * t593;
t610 = -qJ(3) * t394 - t384 * t593 - t389 * t592;
t448 = -t480 * t592 + t482 * t593;
t609 = -qJ(3) * t448 - t404 * t593 - t410 * t592;
t449 = -t481 * t592 + t483 * t593;
t608 = -qJ(3) * t449 - t405 * t593 - t411 * t592;
t421 = -pkin(3) * t591 + pkin(6) * t633;
t607 = pkin(6) * t652 + qJ(3) * t402 - t421 * t592;
t606 = pkin(6) * t653 + qJ(3) * t677 + t421 * t593 - t582;
t568 = t576 - t600;
t566 = t600 - t645;
t558 = t625 + 0.2e1 * t654;
t555 = -t576 + t645;
t546 = -t575 - t635;
t545 = t574 - t642;
t543 = -t572 + t583 + 0.2e1 * t588;
t539 = t640 * t639;
t522 = qJDD(5) * t595 + t539 * t598;
t521 = -qJDD(5) * t598 + t539 * t595;
t520 = t545 * t597 - t589 * t639;
t519 = -t546 * t594 - t590 * t639;
t517 = -t566 * t594 + t650;
t515 = t568 * t597 - t649;
t513 = t566 * t597 + t651;
t511 = t568 * t594 + t648;
t506 = (t545 + t574) * t594;
t505 = -t597 * t546 + t594 * t574;
t504 = -t549 * t598 - t554 * t595;
t496 = -t544 * t594 + t547 * t597;
t495 = t544 * t597 + t547 * t594;
t494 = pkin(1) * t538 - qJ(2) * t535;
t493 = t517 * t598 - t595 * t642;
t492 = t515 * t598 - t595 * t575;
t491 = t517 * t595 + t598 * t642;
t490 = t515 * t595 + t598 * t575;
t489 = t520 * t598 - t630;
t488 = t519 * t598 + t630;
t487 = t520 * t595 + t629;
t486 = t519 * t595 - t629;
t475 = -t521 * t592 + t522 * t593;
t474 = t521 * t593 + t522 * t592;
t473 = t496 * t598 + t555 * t595;
t472 = t496 * t595 - t555 * t598;
t471 = -t503 * t592 + t504 * t593;
t470 = t503 * t593 + t504 * t592;
t467 = -qJ(2) * t562 + t660 * t563 + t484;
t466 = qJ(2) * t563 + t660 * t562 + t485;
t465 = -t491 * t592 + t493 * t593;
t464 = -t490 * t592 + t492 * t593;
t463 = t491 * t593 + t493 * t592;
t462 = t490 * t593 + t492 * t592;
t457 = -t487 * t592 + t489 * t593;
t456 = -t486 * t592 + t488 * t593;
t455 = t487 * t593 + t489 * t592;
t454 = t486 * t593 + t488 * t592;
t443 = t655 + t656;
t441 = -t634 + t659;
t435 = -t472 * t592 + t473 * t593;
t434 = t472 * t593 + t473 * t592;
t420 = -qJ(2) * t497 + t501 * t660 - t616;
t419 = qJ(2) * t501 + t497 * t660 - t626;
t414 = -pkin(6) * t503 + t417 * t598;
t413 = pkin(6) * t504 + t417 * t595;
t412 = qJ(2) * t623 + t452 * t660;
t399 = qJ(2) * t449 - t660 * t447 - t619;
t398 = qJ(2) * t448 - t660 * t446 - t618;
t397 = qJ(2) * t471 - t660 * t470 - t612;
t396 = -qJ(3) * t470 - t413 * t592 + t414 * t593;
t395 = qJ(3) * t471 + t413 * t593 + t414 * t592;
t392 = qJ(2) * t514 + t613;
t391 = qJ(2) * t512 + t614;
t390 = t607 + t656;
t388 = -t606 + t659;
t386 = t660 * t514 + t608;
t385 = t660 * t512 + t609;
t383 = qJ(2) * t677 + t402 * t660 + t658;
t382 = qJ(2) * t394 - t660 * t393 - t627;
t381 = -qJ(2) * t417 + t615;
t380 = -t417 * t660 + t610;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t565, 0, -t564, 0, -t540, -t541, -t620, -pkin(5) * t620, 0, t565, 0, 0, t564, 0, -t540, t622, t541, pkin(5) * t622 + (-pkin(1) * t596 + qJ(2) * t599) * g(3), 0, 0, -t509, 0, -t662, 0, -t671, t676, t673, -pkin(5) * t673 - t596 * t441 + t599 * t443, 0, 0, t672, 0, -t681, 0, -t690, t689, t686, -pkin(5) * t686 - t596 * t388 + t599 * t390, t455 * t596 + t457 * t599, t434 * t596 + t435 * t599, t463 * t596 + t465 * t599, t454 * t596 + t456 * t599, t462 * t596 + t464 * t599, t474 * t596 + t475 * t599, t599 * t391 - t596 * t385 - pkin(5) * (-t446 * t599 + t448 * t596), t599 * t392 - t596 * t386 - pkin(5) * (-t447 * t599 + t449 * t596), t599 * t396 + t596 * t395 - pkin(5) * (-t470 * t599 + t471 * t596), t599 * t381 - t596 * t380 - pkin(5) * (-t393 * t599 + t394 * t596); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t564, 0, t565, 0, t541, -t540, t631, pkin(5) * t631, 0, t564, 0, 0, -t565, 0, t541, t632, t540, pkin(5) * t632 + (pkin(1) * t599 + qJ(2) * t596) * g(3), 0, 0, -t662, 0, t509, 0, t676, t671, t674, -pkin(5) * t674 + t599 * t441 + t596 * t443, 0, 0, -t681, 0, -t672, 0, t689, t690, t687, -pkin(5) * t687 + t599 * t388 + t596 * t390, -t455 * t599 + t457 * t596, -t434 * t599 + t435 * t596, -t463 * t599 + t465 * t596, -t454 * t599 + t456 * t596, -t462 * t599 + t464 * t596, -t474 * t599 + t475 * t596, t596 * t391 + t599 * t385 + pkin(5) * (t446 * t596 + t448 * t599), t596 * t392 + t599 * t386 + pkin(5) * (t447 * t596 + t449 * t599), t596 * t396 - t599 * t395 + pkin(5) * (t470 * t596 + t471 * t599), t596 * t381 + t599 * t380 + pkin(5) * (t393 * t596 + t599 * t394); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t571, t572, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t558, 0, t543, t494, 0, 0, 0, 0, 0, qJDD(1), t467, t466, 0, t412, 0, 0, 0, 0, 0, t586, t420, t419, 0, t383, -t506, -t495, -t513, t505, -t511, 0, t398, t399, t397, t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t601, 0, 0, -g(3), -t571, 0, 0, qJDD(1), 0, 0, t601, 0, 0, -t538, g(3), qJ(2) * g(3), 0, 0, -t563, 0, -t562, 0, t624, t532, t452, t443, 0, 0, -t501, 0, -t497, 0, t680, t461, t402, t390, t457, t435, t465, t456, t464, t475, t391, t392, t396, t381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t601, 0, qJDD(1), 0, g(3), 0, -t572, 0, 0, t601, 0, 0, -qJDD(1), 0, g(3), -t535, 0, pkin(1) * g(3), 0, 0, -t562, 0, t563, 0, t532, -t624, -t623, t441, 0, 0, -t497, 0, t501, 0, t461, -t680, -t677, t388, -t455, -t434, -t463, -t454, -t462, -t474, t385, t386, -t395, t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t571, t572, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t558, 0, t543, t494, 0, 0, 0, 0, 0, qJDD(1), t467, t466, 0, t412, 0, 0, 0, 0, 0, t586, t420, t419, 0, t383, -t506, -t495, -t513, t505, -t511, 0, t398, t399, t397, t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t601, 0, 0, -t538, g(3), 0, 0, 0, -t563, 0, -t562, 0, t624, t532, t452, t655, 0, 0, -t501, 0, -t497, 0, t680, t461, t402, t607, t457, t435, t465, t456, t464, t475, t614, t613, t396, t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t538, 0, -t535, 0, 0, 0, 0, 0, 0, qJDD(1), pkin(2) * t563 + t484, pkin(2) * t562 + t485, 0, pkin(2) * t452, 0, 0, 0, 0, 0, t586, pkin(2) * t501 - t616, pkin(2) * t497 - t626, 0, pkin(2) * t402 + t658, -t506, -t495, -t513, t505, -t511, 0, -pkin(2) * t446 - t618, -pkin(2) * t447 - t619, -pkin(2) * t470 - t612, -pkin(2) * t393 - t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t601, 0, 0, qJDD(1), 0, -g(3), t535, 0, 0, 0, 0, t562, 0, -t563, 0, -t532, t624, t623, t634, 0, 0, t497, 0, -t501, 0, -t461, t680, t677, t606, t455, t434, t463, t454, t462, t474, -pkin(2) * t512 - t609, -pkin(2) * t514 - t608, t395, pkin(2) * t417 - t610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), 0, -t601, 0, 0, t591, t484, 0, 0, 0, -t553, 0, -t551, 0, t675, t527, t424, pkin(6) * t424, t489, t473, t493, t488, t492, t522, t410, t411, t414, t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t601, 0, -qJDD(1), 0, -t591, 0, t485, 0, 0, 0, t551, 0, -t553, 0, -t527, t675, t633, t421, t487, t472, t491, t486, t490, t521, t404, t405, t413, t384; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), -t484, -t485, 0, 0, 0, 0, 0, 0, 0, -t586, t616, t626, 0, -t658, t506, t495, t513, -t505, t511, 0, t618, t619, t612, t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t586, 0, -t585, 0, 0, t591, t444, 0, t520, t496, t517, t519, t515, t539, t428, t429, t417, pkin(7) * t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t585, 0, -t586, 0, -t591, 0, t445, 0, t570, -t555, t642, -t570, t575, -qJDD(5), t426, t427, 0, pkin(4) * t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t586, -t444, -t445, 0, 0, t506, t495, t513, -t505, t511, 0, t636, t637, t628, t641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t545, t547, t560, -t574, t568, t574, 0, t439, t432, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t635, t544, t566, t546, t561, -t635, -t439, 0, t433, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t570, t555, -t642, t570, -t575, qJDD(5), -t432, -t433, 0, 0;];
m_new_reg = t1;
