% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPRR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:01
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPRR8_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR8_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR8_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPPRR8_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:01:18
% EndTime: 2019-12-31 18:01:20
% DurationCPUTime: 1.12s
% Computational Cost: add. (1570->113), mult. (2310->150), div. (0->0), fcn. (2232->6), ass. (0->86)
t76 = sin(qJ(5));
t74 = t76 ^ 2;
t78 = cos(qJ(5));
t75 = t78 ^ 2;
t138 = t74 + t75;
t126 = cos(qJ(4));
t115 = sin(pkin(8));
t116 = cos(pkin(8));
t129 = -pkin(1) - pkin(2);
t65 = t116 * qJ(2) + t115 * t129;
t77 = sin(qJ(4));
t80 = -t115 * qJ(2) + t116 * t129;
t79 = -pkin(3) + t80;
t43 = -t126 * t79 + t77 * t65;
t41 = pkin(4) + t43;
t44 = t126 * t65 + t77 * t79;
t98 = qJD(1) - qJD(4);
t89 = t98 * t44;
t68 = t75 - t74;
t137 = t98 * t68;
t42 = -pkin(7) + t44;
t63 = t77 * t115 - t126 * t116;
t64 = t126 * t115 + t77 * t116;
t92 = t75 / 0.2e1 + t74 / 0.2e1;
t88 = t92 * pkin(7);
t97 = -pkin(4) / 0.2e1 - t41 / 0.2e1;
t1 = (t92 * t43 + t97) * t64 + (-t44 / 0.2e1 + t92 * t42 - t88) * t63;
t10 = (0.1e1 - t138) * t64 * t63;
t9 = t10 * qJD(2);
t136 = t1 * qJD(1) - t9;
t103 = t64 * qJD(4);
t105 = t64 * qJD(1);
t134 = t105 - t103;
t108 = t63 * qJD(1);
t133 = -t63 * qJD(4) + t108;
t40 = t138 * t63;
t112 = t40 * qJD(1);
t132 = t40 * qJD(4) - t112;
t131 = t43 / 0.2e1;
t128 = pkin(4) * t76;
t127 = t64 * pkin(4);
t125 = t41 * t64;
t124 = t41 * t76;
t123 = t43 * t64;
t122 = t44 * t63;
t15 = t138 * t43;
t3 = -t42 * t15 + t41 * t44;
t119 = t3 * qJD(1);
t6 = -t42 * t40 + t125;
t118 = t6 * qJD(1);
t8 = -t122 + t123;
t117 = t8 * qJD(1);
t114 = qJD(1) * t78;
t113 = qJD(4) * t78;
t111 = t40 * qJD(2);
t45 = -t80 * t115 + t65 * t116;
t109 = t45 * qJD(1);
t107 = t63 * qJD(2);
t104 = t64 * qJD(2);
t102 = t68 * qJD(5);
t101 = t76 * qJD(5);
t100 = t78 * qJD(5);
t99 = qJ(2) * qJD(1);
t96 = qJD(1) * t124;
t95 = t41 * t114;
t91 = t116 * qJD(1);
t90 = t115 * qJD(1);
t87 = t131 + t97;
t86 = t44 * qJD(1) + t104;
t85 = t44 * qJD(4) + t104;
t11 = t87 * t76;
t84 = t11 * qJD(1) + qJD(4) * t128;
t12 = t87 * t78;
t83 = pkin(4) * t113 + t12 * qJD(1);
t37 = t63 * t76;
t55 = t78 * t105;
t82 = -t37 * qJD(5) + t78 * t103 - t55;
t39 = t63 * t78;
t54 = t76 * t105;
t81 = t39 * qJD(5) + t76 * t103 - t54;
t70 = t76 * t100;
t58 = (-t113 + t114) * t76;
t14 = t41 * t78;
t13 = t128 / 0.2e1 + t124 / 0.2e1 + t76 * t131;
t2 = t122 / 0.2e1 + t125 / 0.2e1 - t127 / 0.2e1 - t63 * t88 + t138 * (-t123 / 0.2e1 - t42 * t63 / 0.2e1);
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), 0, 0, 0, 0, 0, 0, t115 * qJD(2), t116 * qJD(2), 0, t45 * qJD(2), 0, 0, 0, 0, 0, 0, t85, -t43 * qJD(4) - t107, 0, t8 * qJD(2), t70, t102, 0, -t70, 0, 0, -t41 * t101 + t85 * t78, -t41 * t100 - t85 * t76, t15 * qJD(4) + t111, t6 * qJD(2) + t3 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t99, 0, 0, 0, 0, 0, 0, t90, t91, 0, t109, 0, 0, 0, 0, 0, 0, t105, -t108, 0, t117, 0, 0, 0, 0, 0, 0, t55, -t54, t112, t2 * qJD(4) + t118 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, -t98 * t43, 0, 0, -t70, -t102, 0, t70, 0, 0, t13 * qJD(5) + t78 * t89, t14 * qJD(5) - t76 * t89, t98 * t15, t119 + t2 * qJD(2) + (-t44 * pkin(4) - pkin(7) * t15) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, t137, -t100, -t58, t101, 0, t13 * qJD(4) - t42 * t100 - t96, t14 * qJD(4) + t42 * t101 - t95, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t99, 0, 0, 0, 0, 0, 0, -t90, -t91, 0, -t109, 0, 0, 0, 0, 0, 0, -t134, t133, 0, -t117, 0, 0, 0, 0, 0, 0, t82, -t81, t132, -t1 * qJD(4) - t118; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t134, -t133, 0, 0, 0, 0, 0, 0, 0, 0, -t82, t81, -t132, (-pkin(7) * t40 - t127) * qJD(4) - t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64 * t100 - t98 * t37, t64 * t101 - t98 * t39, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, -t100, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t86, t43 * qJD(1) + t107, 0, 0, -t70, -t102, 0, t70, 0, 0, -t11 * qJD(5) - t86 * t78, -t12 * qJD(5) + t86 * t76, -t15 * qJD(1) - t111, t1 * qJD(2) - t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105, t108, 0, 0, 0, 0, 0, 0, 0, 0, -t55, t54, -t112, t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70, t102, 0, -t70, 0, 0, -pkin(4) * t101, -pkin(4) * t100, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, -t137, t100, t58, -t101, 0, -pkin(7) * t100 - t84, pkin(7) * t101 - t83, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, -t137, 0, t58, 0, 0, t37 * qJD(2) + t11 * qJD(4) + t96, t39 * qJD(2) + t12 * qJD(4) + t95, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37 * qJD(1), t39 * qJD(1), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, t137, 0, -t58, 0, 0, t84, t83, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t4;
