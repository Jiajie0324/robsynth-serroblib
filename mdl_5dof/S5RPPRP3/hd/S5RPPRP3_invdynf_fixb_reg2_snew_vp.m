% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPPRP3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,theta2]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:51
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPPRP3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRP3_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRP3_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPPRP3_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPPRP3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RPPRP3_invdynf_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:51:15
% EndTime: 2019-12-31 17:51:16
% DurationCPUTime: 1.25s
% Computational Cost: add. (1596->135), mult. (3140->143), div. (0->0), fcn. (1636->6), ass. (0->83)
t895 = sin(pkin(7));
t896 = cos(pkin(7));
t904 = qJD(1) ^ 2;
t871 = t895 * qJDD(1) + t896 * t904;
t872 = -t896 * qJDD(1) + t895 * t904;
t900 = sin(qJ(1));
t902 = cos(qJ(1));
t907 = t900 * t871 + t902 * t872;
t909 = t902 * t871 - t900 * t872;
t923 = 2 * qJD(3);
t899 = sin(qJ(4));
t891 = t899 ^ 2;
t922 = t891 * t904;
t921 = t899 * t904;
t880 = t900 * g(1) - t902 * g(2);
t866 = qJDD(1) * pkin(1) + t880;
t881 = -t902 * g(1) - t900 * g(2);
t867 = -t904 * pkin(1) + t881;
t853 = t896 * t866 - t895 * t867;
t852 = -qJDD(1) * pkin(2) - t904 * qJ(3) + qJDD(3) - t853;
t850 = -qJDD(1) * pkin(6) + t852;
t893 = -g(3) + qJDD(2);
t901 = cos(qJ(4));
t842 = t899 * t850 + t901 * t893;
t892 = t901 ^ 2;
t916 = t891 + t892;
t915 = qJD(1) * qJD(4);
t914 = t899 * qJDD(1);
t913 = t901 * qJDD(1);
t912 = -2 * qJD(1) * qJD(5);
t911 = t901 * t921;
t910 = t901 * t915;
t841 = t901 * t850 - t899 * t893;
t854 = t895 * t866 + t896 * t867;
t905 = -t904 * pkin(2) + qJDD(1) * qJ(3) + t854;
t851 = (qJD(1) * t923) + t905;
t903 = qJD(4) ^ 2;
t897 = t904 * pkin(6);
t883 = -t892 * t904 - t903;
t882 = -t903 - t922;
t879 = -qJDD(4) - t911;
t878 = qJDD(4) - t911;
t877 = -t901 * qJD(1) * qJ(5) + qJD(4) * pkin(4);
t876 = t916 * t904;
t875 = -t900 * qJDD(1) - t902 * t904;
t874 = t902 * qJDD(1) - t900 * t904;
t873 = t916 * qJDD(1);
t870 = -0.2e1 * t899 * t915 + t913;
t869 = -t910 - t914;
t868 = 0.2e1 * t910 + t914;
t860 = t901 * t879 - t899 * t883;
t859 = -t899 * t878 + t901 * t882;
t858 = t899 * t879 + t901 * t883;
t857 = t901 * t878 + t899 * t882;
t856 = -t895 * t873 - t896 * t876;
t855 = t896 * t873 - t895 * t876;
t849 = t895 * t858 + t896 * t870;
t848 = t895 * t857 + t896 * t868;
t847 = -t896 * t858 + t895 * t870;
t846 = -t896 * t857 + t895 * t868;
t845 = t851 - t897;
t840 = -t900 * t855 + t902 * t856;
t839 = t902 * t855 + t900 * t856;
t838 = -t895 * t853 + t896 * t854;
t837 = t896 * t853 + t895 * t854;
t836 = -qJ(5) * t922 - t869 * pkin(4) + qJDD(5) - t897 + (t877 * t901 + t923) * qJD(1) + t905;
t835 = t896 * t851 + t895 * t852;
t834 = t895 * t851 - t896 * t852;
t833 = -pkin(4) * t922 + t869 * qJ(5) - qJD(4) * t877 + t899 * t912 + t842;
t832 = qJDD(4) * pkin(4) + (-pkin(4) * t921 - qJDD(1) * qJ(5) + t912) * t901 + t841;
t831 = -t900 * t847 + t902 * t849;
t830 = -t900 * t846 + t902 * t848;
t829 = t902 * t847 + t900 * t849;
t828 = t902 * t846 + t900 * t848;
t827 = -t899 * t841 + t901 * t842;
t826 = t901 * t841 + t899 * t842;
t825 = t895 * t826 + t896 * t845;
t824 = -t896 * t826 + t895 * t845;
t823 = -t899 * t832 + t901 * t833;
t822 = t901 * t832 + t899 * t833;
t821 = t895 * t822 + t896 * t836;
t820 = -t896 * t822 + t895 * t836;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t875, -t874, 0, -t900 * t880 + t902 * t881, 0, 0, 0, 0, 0, 0, -t909, t907, 0, -t900 * t837 + t902 * t838, 0, 0, 0, 0, 0, 0, 0, t909, -t907, -t900 * t834 + t902 * t835, 0, 0, 0, 0, 0, 0, t830, t831, t840, -t900 * t824 + t902 * t825, 0, 0, 0, 0, 0, 0, t830, t831, t840, -t900 * t820 + t902 * t821; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t874, t875, 0, t902 * t880 + t900 * t881, 0, 0, 0, 0, 0, 0, -t907, -t909, 0, t902 * t837 + t900 * t838, 0, 0, 0, 0, 0, 0, 0, t907, t909, t902 * t834 + t900 * t835, 0, 0, 0, 0, 0, 0, t828, t829, t839, t902 * t824 + t900 * t825, 0, 0, 0, 0, 0, 0, t828, t829, t839, t902 * t820 + t900 * t821; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t893, 0, 0, 0, 0, 0, 0, 0, 0, 0, t893, 0, 0, 0, 0, 0, 0, t859, t860, 0, t827, 0, 0, 0, 0, 0, 0, t859, t860, 0, t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t904, -qJDD(1), 0, t881, 0, 0, 0, 0, 0, 0, -t871, t872, 0, t838, 0, 0, 0, 0, 0, 0, 0, t871, -t872, t835, 0, 0, 0, 0, 0, 0, t848, t849, t856, t825, 0, 0, 0, 0, 0, 0, t848, t849, t856, t821; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t904, 0, t880, 0, 0, 0, 0, 0, 0, -t872, -t871, 0, t837, 0, 0, 0, 0, 0, 0, 0, t872, t871, t834, 0, 0, 0, 0, 0, 0, t846, t847, t855, t824, 0, 0, 0, 0, 0, 0, t846, t847, t855, t820; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t893, 0, 0, 0, 0, 0, 0, 0, 0, 0, t893, 0, 0, 0, 0, 0, 0, t859, t860, 0, t827, 0, 0, 0, 0, 0, 0, t859, t860, 0, t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t904, -qJDD(1), 0, t854, 0, 0, 0, 0, 0, 0, 0, t904, qJDD(1), t851, 0, 0, 0, 0, 0, 0, t868, t870, -t876, t845, 0, 0, 0, 0, 0, 0, t868, t870, -t876, t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t904, 0, t853, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t904, -t852, 0, 0, 0, 0, 0, 0, -t857, -t858, t873, -t826, 0, 0, 0, 0, 0, 0, -t857, -t858, t873, -t822; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t893, 0, 0, 0, 0, 0, 0, 0, 0, 0, t893, 0, 0, 0, 0, 0, 0, t859, t860, 0, t827, 0, 0, 0, 0, 0, 0, t859, t860, 0, t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t893, 0, 0, 0, 0, 0, 0, t859, t860, 0, t827, 0, 0, 0, 0, 0, 0, t859, t860, 0, t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t904, -qJDD(1), -t851, 0, 0, 0, 0, 0, 0, -t868, -t870, t876, -t845, 0, 0, 0, 0, 0, 0, -t868, -t870, t876, -t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t904, t852, 0, 0, 0, 0, 0, 0, t857, t858, -t873, t826, 0, 0, 0, 0, 0, 0, t857, t858, -t873, t822; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t882, t879, -t914, t842, 0, 0, 0, 0, 0, 0, t882, t879, -t914, t833; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t878, t883, -t913, t841, 0, 0, 0, 0, 0, 0, t878, t883, -t913, t832; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t868, t870, -t876, t845, 0, 0, 0, 0, 0, 0, t868, t870, -t876, t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t882, t879, -t914, t833; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t878, t883, -t913, t832; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t868, t870, -t876, t836;];
f_new_reg = t1;
