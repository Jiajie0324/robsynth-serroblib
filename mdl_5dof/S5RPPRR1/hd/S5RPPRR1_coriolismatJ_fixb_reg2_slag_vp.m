% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:38
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RPPRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:38:22
% EndTime: 2019-12-05 17:38:25
% DurationCPUTime: 1.23s
% Computational Cost: add. (1402->114), mult. (2369->124), div. (0->0), fcn. (2407->4), ass. (0->79)
t121 = qJD(4) + qJD(5);
t103 = sin(qJ(5));
t105 = cos(qJ(5));
t106 = cos(qJ(4));
t101 = -pkin(6) + qJ(2);
t152 = -pkin(7) + t101;
t115 = t152 * t106;
t104 = sin(qJ(4));
t80 = t152 * t104;
t114 = t103 * t80 - t105 * t115;
t154 = t121 * t114;
t51 = t103 * t115 + t105 * t80;
t153 = t121 * t51;
t77 = t103 * t106 + t104 * t105;
t151 = t121 * t77;
t142 = qJD(4) * pkin(4);
t79 = -t103 * t104 + t105 * t106;
t150 = (t103 * t79 - t105 * t77) * t142;
t102 = pkin(1) + qJ(3);
t124 = t102 * qJD(1);
t148 = -t124 + qJD(2);
t147 = t77 ^ 2;
t146 = t79 ^ 2;
t144 = t106 * pkin(4);
t143 = pkin(4) * qJD(5);
t100 = t106 ^ 2;
t99 = t104 ^ 2;
t83 = t99 + t100;
t86 = pkin(4) * t104 + t102;
t139 = qJD(5) * t86;
t15 = -t114 * t79 + t51 * t77;
t138 = t15 * qJD(1);
t20 = -t146 - t147;
t137 = t20 * qJD(1);
t107 = t77 * t103 / 0.2e1 + t79 * t105 / 0.2e1;
t32 = (t106 / 0.2e1 + t107) * pkin(4);
t136 = t32 * qJD(1);
t34 = -t146 + t147;
t135 = t34 * qJD(1);
t35 = t144 * t77 + t79 * t86;
t134 = t35 * qJD(1);
t36 = t144 * t79 - t77 * t86;
t133 = t36 * qJD(1);
t110 = t147 / 0.2e1 + t146 / 0.2e1;
t45 = 0.1e1 / 0.2e1 + t110;
t132 = t45 * qJD(1);
t76 = t83 * t101;
t131 = t76 * qJD(1);
t130 = t77 * qJD(1);
t129 = t79 * qJD(1);
t117 = t100 / 0.2e1 + t99 / 0.2e1;
t81 = 0.1e1 / 0.2e1 + t117;
t128 = t81 * qJD(1);
t127 = t83 * qJD(1);
t84 = t99 - t100;
t126 = t84 * qJD(1);
t125 = t86 * qJD(1);
t94 = t104 * qJD(1);
t123 = t104 * qJD(4);
t95 = t106 * qJD(1);
t122 = t106 * qJD(4);
t120 = t77 * t129;
t119 = t77 * t125;
t118 = t79 * t125;
t116 = t104 * t122;
t113 = pkin(4) * t121;
t48 = t121 * t79;
t8 = t86 * t144;
t109 = t8 * qJD(1);
t98 = qJ(2) * qJD(1);
t97 = qJ(2) * qJD(2);
t89 = t102 * qJD(3);
t85 = t104 * t95;
t82 = -0.1e1 / 0.2e1 + t117;
t72 = t79 * qJD(2);
t70 = t77 * qJD(2);
t46 = -0.1e1 / 0.2e1 + t110;
t33 = -t144 / 0.2e1 + t107 * pkin(4);
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t97, 0, 0, 0, 0, 0, 0, 0, qJD(2), qJD(3), t89 + t97, -t116, t84 * qJD(4), 0, t116, 0, 0, qJD(3) * t104 + t102 * t122, qJD(3) * t106 - t102 * t123, -t83 * qJD(2), qJD(2) * t76 + t89, -t77 * t48, t121 * t34, 0, t79 * t151, 0, 0, qJD(3) * t77 + qJD(4) * t35 + t139 * t79, qJD(3) * t79 + qJD(4) * t36 - t139 * t77, t20 * qJD(2), qJD(2) * t15 + qJD(3) * t86 + qJD(4) * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t98, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, t98, 0, 0, 0, 0, 0, 0, 0, 0, -t127, qJD(3) * t82 + t131, 0, 0, 0, 0, 0, 0, 0, 0, t137, qJD(3) * t46 + qJD(4) * t33 + t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t124, 0, 0, 0, 0, 0, 0, t94, t95, 0, qJD(2) * t82 + t124, 0, 0, 0, 0, 0, 0, t130, t129, 0, qJD(2) * t46 + t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t85, t126, -t123, t85, -t122, 0, -t101 * t123 + t102 * t95, -t101 * t122 - t102 * t94, 0, 0, -t120, t135, -t151, t120, -t48, 0, t134 - t153, t133 + t154, -t150, t33 * qJD(2) + (-t103 * t114 - t105 * t51) * t142 + t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t120, t135, -t151, t120, -t48, 0, t118 - t153, -t119 + t154, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t98, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, -qJD(3) - t98, 0, 0, 0, 0, 0, 0, -t122, t123, t127, -qJD(3) * t81 - t131, 0, 0, 0, 0, 0, 0, -t48, t151, -t137, -qJD(3) * t45 - qJD(4) * t32 - t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t128, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t95, t94, 0, 0, 0, 0, 0, 0, 0, 0, -t129, t130, 0, -t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t129, t130, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), t148, 0, 0, 0, 0, 0, 0, -t94, -t95, 0, qJD(2) * t81 - t124, 0, 0, 0, 0, 0, 0, -t130, -t129, 0, qJD(2) * t45 - t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, -t122, 0, 0, 0, 0, 0, 0, 0, 0, -t151, -t48, 0, t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151, -t48, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, -t126, 0, -t85, 0, 0, t148 * t106, -t148 * t104, 0, 0, t120, -t135, 0, -t120, 0, 0, t72 - t134, -t70 - t133, 0, qJD(2) * t32 - t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95, -t94, 0, 0, 0, 0, 0, 0, 0, 0, t129, -t130, 0, t136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103 * t143, -t105 * t143, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103 * t113, -t105 * t113, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, -t135, 0, -t120, 0, 0, t72 - t118, -t70 + t119, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, -t130, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103 * t142, t105 * t142, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
