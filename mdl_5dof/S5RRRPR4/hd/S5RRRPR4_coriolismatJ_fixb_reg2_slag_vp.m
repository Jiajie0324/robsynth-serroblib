% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:12
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:11:44
% EndTime: 2019-12-31 21:11:52
% DurationCPUTime: 4.62s
% Computational Cost: add. (4537->345), mult. (8480->390), div. (0->0), fcn. (7741->6), ass. (0->254)
t349 = qJD(3) - qJD(5);
t278 = sin(qJ(2));
t412 = pkin(1) * t278;
t262 = pkin(7) + t412;
t280 = cos(qJ(3));
t215 = (-pkin(8) + t262) * t280;
t276 = sin(qJ(5));
t279 = cos(qJ(5));
t277 = sin(qJ(3));
t271 = t277 * pkin(8);
t320 = t262 * t277 - t271;
t125 = -t279 * t215 - t276 * t320;
t445 = t349 * t125;
t247 = (pkin(7) - pkin(8)) * t280;
t323 = pkin(7) * t277 - t271;
t169 = -t279 * t247 - t276 * t323;
t444 = t349 * t169;
t281 = cos(qJ(2));
t411 = pkin(1) * t281;
t263 = -pkin(2) - t411;
t368 = -t280 * pkin(3) - t277 * qJ(4);
t212 = t263 + t368;
t194 = t212 * t277;
t346 = pkin(2) - t368;
t221 = t346 * t277;
t376 = t194 / 0.2e1 - t221 / 0.2e1;
t378 = t280 * qJ(4);
t409 = t277 * pkin(3);
t243 = -t378 + t409;
t382 = t243 * t280;
t442 = t382 - t376;
t432 = t279 * t323;
t415 = t432 / 0.2e1;
t433 = t279 * t320;
t416 = t433 / 0.2e1;
t222 = t276 * t277 + t279 * t280;
t224 = -t280 * t276 + t277 * t279;
t427 = t349 * t224;
t441 = t222 * t427;
t109 = t222 ^ 2 - t224 ^ 2;
t350 = qJD(1) + qJD(2);
t440 = t350 * t109;
t274 = t277 ^ 2;
t275 = t280 ^ 2;
t439 = t274 + t275;
t379 = t276 * t247;
t438 = -t432 + t379;
t380 = t276 * t215;
t437 = -t433 + t380;
t351 = t280 * qJD(4);
t436 = t368 * qJD(3) + t351;
t272 = t280 * pkin(4);
t189 = -t212 + t272;
t213 = t272 + t346;
t325 = t213 / 0.2e1 + t189 / 0.2e1;
t431 = t325 * t222;
t430 = t325 * t224;
t339 = pkin(2) / 0.2e1 - t263 / 0.2e1;
t429 = t339 * t277;
t428 = t349 * t222;
t258 = t275 - t274;
t424 = t350 * t258;
t423 = t350 * t222 * t224;
t422 = -pkin(3) - pkin(4);
t418 = -t438 / 0.2e1;
t326 = t438 / 0.2e1 + t418;
t420 = t125 / 0.2e1;
t329 = -t125 / 0.2e1 + t420;
t6 = -t326 * t222 - t329 * t224;
t421 = t6 * qJD(3);
t413 = -t279 / 0.2e1;
t410 = pkin(2) * t280;
t408 = pkin(1) * qJD(1);
t407 = pkin(1) * qJD(2);
t181 = t224 * t411;
t182 = t222 * t411;
t50 = -t181 * t224 - t182 * t222;
t403 = qJD(1) * t50;
t220 = t422 * t277 + t378;
t162 = t220 * t222;
t393 = t189 * t224;
t63 = t162 - t393;
t402 = qJD(1) * t63;
t163 = t220 * t224;
t394 = t189 * t222;
t64 = t163 + t394;
t401 = qJD(1) * t64;
t398 = t125 * t279;
t106 = -t398 / 0.2e1;
t47 = t106 + t398 / 0.2e1;
t400 = qJD(4) * t47;
t396 = t169 * t279;
t147 = -t396 / 0.2e1;
t62 = t147 + t396 / 0.2e1;
t399 = qJD(4) * t62;
t395 = t189 * t220;
t397 = t395 * qJD(1);
t21 = -t125 * t182 - t181 * t437 - t189 * t412;
t392 = t21 * qJD(1);
t391 = t212 * t243;
t390 = t212 * t280;
t389 = t213 * t222;
t388 = t213 * t224;
t387 = t220 * t213;
t385 = t346 * t280;
t384 = t243 * t346;
t383 = t243 * t277;
t381 = t263 * t280;
t321 = t439 * t281;
t316 = t262 * t321;
t93 = (t212 * t278 + t316) * pkin(1);
t377 = t93 * qJD(1);
t340 = t411 / 0.2e1;
t249 = t277 * t340;
t251 = t280 * t340;
t374 = t276 * t249 + t279 * t251;
t341 = -t411 / 0.2e1;
t250 = t277 * t341;
t252 = t280 * t341;
t373 = t276 * t250 + t279 * t252;
t372 = t279 * t250 + t276 * t251;
t371 = t279 * t249 + t276 * t252;
t370 = t439 * pkin(7) * t411;
t343 = t278 * t407;
t255 = t277 * t343;
t267 = t274 * qJD(4);
t369 = t267 - t255;
t140 = t383 + t390;
t367 = qJD(1) * t140;
t141 = -t194 + t382;
t366 = qJD(1) * t141;
t365 = qJD(1) * t189;
t364 = qJD(1) * t277;
t363 = qJD(2) * t213;
t362 = qJD(2) * t277;
t361 = qJD(3) * qJ(4);
t360 = qJD(4) * t276;
t359 = qJD(4) * t277;
t358 = qJD(4) * t279;
t357 = qJD(5) * t222;
t356 = qJD(5) * t224;
t122 = (t263 * t278 + t316) * pkin(1);
t355 = t122 * qJD(1);
t214 = pkin(1) * t321;
t205 = t214 * qJD(1);
t354 = t258 * qJD(3);
t353 = t276 * qJD(3);
t268 = t277 * qJD(3);
t352 = t279 * qJD(3);
t269 = t280 * qJD(3);
t227 = qJ(4) * t276 - t279 * t422;
t228 = t279 * qJ(4) + t276 * t422;
t87 = -t279 * t222 + t276 * t224;
t347 = t87 * qJD(4) + (t227 * t222 + t228 * t224) * qJD(3);
t345 = pkin(7) * t268;
t344 = pkin(7) * t269;
t342 = t278 * t408;
t338 = t222 * t365;
t337 = t224 * t365;
t336 = t189 * t364;
t335 = t212 * t364;
t334 = t263 * t364;
t333 = qJD(1) * t381;
t332 = t262 * t268;
t331 = t262 * t269;
t330 = qJD(1) * t391;
t324 = -t346 / 0.2e1 + t212 / 0.2e1;
t322 = pkin(1) * t350;
t319 = t350 * t277;
t318 = t280 * t343;
t317 = t278 * t322;
t315 = t325 * t277;
t282 = t125 * t418 + t420 * t438;
t294 = -t181 * t227 / 0.2e1 + t182 * t228 / 0.2e1;
t1 = -t325 * t220 + t282 + t294;
t310 = -t1 * qJD(1) + qJD(2) * t387;
t309 = qJD(2) * t6;
t308 = qJD(1) * t6;
t25 = -t162 + t372 + t430;
t65 = t162 - t388;
t304 = qJD(1) * t25 - qJD(2) * t65;
t26 = -t163 + t374 - t431;
t66 = t163 + t389;
t303 = qJD(1) * t26 - qJD(2) * t66;
t302 = qJD(1) * t47 + qJD(2) * t62;
t158 = t383 - t385;
t75 = t324 * t280 + t251 + t383;
t301 = qJD(1) * t75 + qJD(2) * t158;
t159 = t221 + t382;
t74 = t250 + t442;
t300 = qJD(1) * t74 + qJD(2) * t159;
t117 = t416 - t433 / 0.2e1;
t161 = t415 - t432 / 0.2e1;
t299 = t117 * qJD(1) + t161 * qJD(2);
t298 = qJD(3) * t243 - t359;
t259 = t277 * t351;
t297 = t259 - t318;
t176 = t250 + t429;
t296 = pkin(2) * t362 + qJD(1) * t176;
t177 = t339 * t280 + t252;
t295 = qJD(1) * t177 + qJD(2) * t410;
t293 = t181 * t413 - t182 * t276 / 0.2e1;
t292 = -t394 / 0.2e1 - t389 / 0.2e1;
t291 = t393 / 0.2e1 + t388 / 0.2e1;
t43 = t373 + t431;
t290 = qJD(1) * t43 + t222 * t363;
t42 = t371 - t430;
t289 = qJD(1) * t42 - t224 * t363;
t35 = t315 + t293;
t288 = -qJD(1) * t35 - t213 * t362;
t284 = (t378 / 0.2e1 - t409 / 0.2e1) * t411;
t51 = -t324 * t243 + t284;
t287 = t51 * qJD(1) + qJD(2) * t384;
t94 = t249 + t376;
t286 = qJD(1) * t94 - t346 * t362;
t14 = t329 * t279;
t153 = t227 * t276 + t228 * t279;
t23 = t326 * t276;
t285 = -qJD(1) * t14 - qJD(2) * t23 + qJD(3) * t153;
t260 = t277 * t269;
t254 = t280 * t342;
t253 = t277 * t342;
t242 = t349 * t279;
t241 = t350 * t274;
t240 = t349 * t276;
t208 = t280 * t319;
t204 = t214 * qJD(2);
t200 = t224 * t359;
t199 = t222 * t359;
t179 = -t410 / 0.2e1 + t381 / 0.2e1 + t252;
t178 = t250 - t429;
t132 = t204 + t205;
t124 = t224 * t319;
t123 = t222 * t319;
t110 = -t379 + 0.2e1 * t415;
t95 = t249 - t376;
t77 = t250 - t442;
t76 = -t390 / 0.2e1 - t383 + t385 / 0.2e1 + t251;
t72 = -t380 + 0.2e1 * t416;
t61 = t62 * qJD(5);
t52 = -t384 / 0.2e1 + t391 / 0.2e1 + t284;
t49 = t50 * qJD(2);
t46 = t47 * qJD(5);
t45 = t291 + t371;
t44 = t292 + t373;
t37 = t349 * t109;
t36 = qJD(3) * t87;
t34 = t315 - t293;
t28 = t163 - t292 + t374;
t27 = t162 - t291 + t372;
t24 = t169 * t413 + t276 * t438 + t147;
t15 = t125 * t413 + t276 * t437 + t106;
t2 = t387 / 0.2e1 + t395 / 0.2e1 - t282 + t294;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t343, -t281 * t407, 0, 0, t260, t354, 0, -t260, 0, 0, t263 * t268 - t318, t263 * t269 + t255, t204, t122 * qJD(2), t260, 0, -t354, 0, 0, -t260, -qJD(3) * t141 + t297, t204, -qJD(3) * t140 + t369, t93 * qJD(2) + t298 * t212, t441, -t37, 0, -t441, 0, 0, qJD(3) * t63 + t189 * t356 - t222 * t343 + t199, qJD(3) * t64 - t189 * t357 - t224 * t343 + t200, t49, qJD(2) * t21 + qJD(3) * t395 + t189 * t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t317, -t281 * t322, 0, 0, t260, t354, 0, -t260, 0, 0, qJD(3) * t178 - t254 - t318, qJD(3) * t179 + t253 + t255, t132, t355 + (-pkin(2) * t412 + t370) * qJD(2), t260, 0, -t354, 0, 0, -t260, qJD(3) * t77 - t254 + t297, t132, qJD(3) * t76 - t253 + t369, t377 + (-t346 * t412 + t370) * qJD(2) + t52 * qJD(3) + t95 * qJD(4), t441, -t37, 0, -t441, 0, 0, t27 * qJD(3) + t45 * qJD(5) - t222 * t317 + t199, t28 * qJD(3) + t44 * qJD(5) - t224 * t317 + t200, t49 + t403 + t421, t392 + (-t169 * t182 - t181 * t438 - t213 * t412) * qJD(2) + t2 * qJD(3) + t34 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, t424, t269, -t208, -t268, 0, qJD(2) * t178 - t331 + t334, qJD(2) * t179 + t332 + t333, 0, 0, t208, t269, -t424, 0, t268, -t208, qJD(2) * t77 - t331 - t366, t436, qJD(2) * t76 - t332 - t367, t52 * qJD(2) + t262 * t436 + t330, t423, -t440, -t428, -t423, -t427, 0, qJD(2) * t27 + t402 + t445, qJD(2) * t28 + qJD(3) * t437 + qJD(5) * t72 + t401, t309 + t347, t397 + t2 * qJD(2) + (t125 * t227 + t228 * t437) * qJD(3) + t15 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, t269, t241, qJD(2) * t95 + t331 - t335, 0, 0, 0, 0, 0, 0, t123, t124, t36, qJD(2) * t34 + qJD(3) * t15 + t336 + t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t423, t440, t428, t423, t427, 0, qJD(2) * t45 + t337 - t445, qJD(2) * t44 + qJD(3) * t72 + qJD(5) * t437 - t338, 0, t400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342, t281 * t408, 0, 0, t260, t354, 0, -t260, 0, 0, -qJD(3) * t176 + t254, -qJD(3) * t177 - t253, -t205, -t355, t260, 0, -t354, 0, 0, -t260, -qJD(3) * t74 + t254 + t259, -t205, -qJD(3) * t75 + t253 + t267, -qJD(3) * t51 - qJD(4) * t94 - t377, t441, -t37, 0, -t441, 0, 0, -qJD(3) * t25 - qJD(5) * t42 + t222 * t342 + t199, -qJD(3) * t26 - qJD(5) * t43 + t224 * t342 + t200, -t403 + t421, -qJD(3) * t1 + qJD(4) * t35 - t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, t354, 0, -t260, 0, 0, -pkin(2) * t268, -pkin(2) * t269, 0, 0, t260, 0, -t354, 0, 0, -t260, -qJD(3) * t159 + t259, 0, -qJD(3) * t158 + t267, -t298 * t346, t441, -t37, 0, -t441, 0, 0, qJD(3) * t65 + t213 * t356 + t199, qJD(3) * t66 - t213 * t357 + t200, 0, qJD(3) * t387 + t213 * t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, t424, t269, -t208, -t268, 0, -t296 - t344, -t295 + t345, 0, 0, t208, t269, -t424, 0, t268, -t208, -t300 - t344, t436, -t301 - t345, pkin(7) * t436 - t287, t423, -t440, -t428, -t423, -t427, 0, -t304 + t444, qJD(3) * t438 + qJD(5) * t110 - t303, t308 + t347, (t169 * t227 + t228 * t438) * qJD(3) + t24 * qJD(4) + t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, t269, t241, -t286 + t344, 0, 0, 0, 0, 0, 0, t123, t124, t36, qJD(3) * t24 - t288 + t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t423, t440, t428, t423, t427, 0, -t289 - t444, qJD(3) * t110 + qJD(5) * t438 - t290, 0, t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, -t424, 0, t208, 0, 0, qJD(2) * t176 - t334, qJD(2) * t177 - t333, 0, 0, -t208, 0, t424, 0, 0, t208, qJD(2) * t74 + t366, 0, qJD(2) * t75 + t367, qJD(2) * t51 - t330, -t423, t440, 0, t423, 0, 0, qJD(2) * t25 - t402, qJD(2) * t26 + qJD(5) * t117 - t401, -t309, qJD(2) * t1 - qJD(4) * t14 - t397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, -t424, 0, t208, 0, 0, t296, t295, 0, 0, -t208, 0, t424, 0, 0, t208, t300, 0, t301, t287, -t423, t440, 0, t423, 0, 0, t304, qJD(5) * t161 + t303, -t308, -qJD(4) * t23 - t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), 0, 0, 0, 0, 0, 0, qJD(5) * t228 + t360, -qJD(5) * t227 + t358, 0, qJD(4) * t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t361, 0, 0, 0, 0, 0, 0, t353, t352, 0, t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t349 * t228, -t227 * t349 + t299, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, 0, -t241, qJD(2) * t94 + t335, 0, 0, 0, 0, 0, 0, -t123, -t124, 0, -qJD(2) * t35 + qJD(3) * t14 - t336 + t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208, 0, -t241, t286, 0, 0, 0, 0, 0, 0, -t123, -t124, 0, qJD(3) * t23 + t288 + t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t361, 0, 0, 0, 0, 0, 0, -t240, -t242, 0, -t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t240, t242, 0, t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423, -t440, 0, -t423, 0, 0, qJD(2) * t42 - t337, qJD(2) * t43 - qJD(3) * t117 + t338, 0, -t400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423, -t440, 0, -t423, 0, 0, t289, -qJD(3) * t161 + t290, 0, -t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t228 - t360, qJD(3) * t227 - t299 - t358, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t353, -t352, 0, -t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
