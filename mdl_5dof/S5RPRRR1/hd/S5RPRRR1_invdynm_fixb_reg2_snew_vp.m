% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRRR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-07-18 13:26
% Revision: 08c8d617a845f5dd194efdf9aca2774760f7818f (2019-07-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRRR1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(1,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR1_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR1_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR1_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'S5RPRRR1_invdynm_fixb_reg2_snew_vp: pkin has to be [1x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-07-18 13:26:16
% EndTime: 2019-07-18 13:26:22
% DurationCPUTime: 5.05s
% Computational Cost: add. (9053->370), mult. (17124->474), div. (0->0), fcn. (13428->8), ass. (0->266)
t703 = sin(qJ(5));
t704 = sin(qJ(4));
t708 = cos(qJ(4));
t705 = sin(qJ(3));
t735 = qJD(1) * t705;
t667 = qJD(3) * t704 + t708 * t735;
t709 = cos(qJ(3));
t687 = qJD(1) * t709 - qJD(4);
t707 = cos(qJ(5));
t632 = t667 * t703 + t707 * t687;
t634 = t667 * t707 - t687 * t703;
t595 = t634 * t632;
t734 = qJD(1) * qJD(3);
t690 = t709 * t734;
t691 = t705 * qJDD(1);
t669 = t691 + t690;
t725 = t708 * qJDD(3) - t669 * t704;
t714 = qJD(4) * t667 - t725;
t616 = qJDD(5) + t714;
t767 = -t595 + t616;
t769 = t703 * t767;
t768 = t707 * t767;
t699 = qJDD(1) * qJ(2);
t706 = sin(qJ(1));
t710 = cos(qJ(1));
t680 = g(1) * t710 + g(2) * t706;
t713 = 0.2e1 * qJD(2) * qJD(1) - t680;
t655 = -t699 - t713;
t641 = g(3) * t709 - t655 * t705;
t625 = t705 * t641;
t642 = -t705 * g(3) - t655 * t709;
t737 = t709 * t642 + t625;
t628 = t709 * t641;
t588 = -t642 * t705 + t628;
t630 = t632 ^ 2;
t631 = t634 ^ 2;
t665 = -t708 * qJD(3) + t704 * t735;
t658 = qJD(5) + t665;
t657 = t658 ^ 2;
t660 = t665 ^ 2;
t661 = t667 ^ 2;
t685 = t687 ^ 2;
t766 = t706 * g(3);
t765 = qJ(2) * t706;
t764 = qJ(2) * t710;
t562 = t595 + t616;
t763 = t562 * t703;
t762 = t562 * t707;
t689 = t705 * t734;
t733 = t709 * qJDD(1);
t670 = -t689 + t733;
t662 = -qJDD(4) + t670;
t757 = t667 * t665;
t614 = -t662 - t757;
t761 = t614 * t704;
t759 = t658 * t703;
t758 = t658 * t707;
t712 = qJD(1) ^ 2;
t686 = t709 * t712 * t705;
t677 = qJDD(3) + t686;
t756 = t677 * t705;
t678 = qJDD(3) - t686;
t755 = t678 * t705;
t754 = t678 * t709;
t753 = t687 * t704;
t752 = t687 * t708;
t701 = t705 ^ 2;
t751 = t701 * t712;
t679 = t706 * g(1) - g(2) * t710;
t672 = -qJDD(2) + t679;
t659 = qJ(2) * t712 + t672;
t602 = t642 * t704 + t708 * t659;
t750 = t703 * t602;
t749 = t704 * t602;
t624 = t704 * t641;
t748 = t704 * t706;
t747 = t704 * t710;
t746 = t705 * t602;
t650 = t705 * t659;
t745 = t707 * t602;
t603 = t642 * t708 - t659 * t704;
t570 = t603 * t703 - t707 * t641;
t571 = t603 * t707 + t641 * t703;
t719 = t570 * t707 - t571 * t703;
t744 = t708 * t719;
t613 = t662 - t757;
t743 = t708 * t613;
t627 = t708 * t641;
t598 = t709 * t602;
t742 = t709 * t659;
t514 = t570 * t703 + t571 * t707;
t741 = -t709 * t514 + t705 * t744;
t536 = -t570 * t704 + t708 * t750;
t740 = t709 * t536 - t705 * t745;
t537 = -t571 * t704 + t708 * t745;
t739 = t709 * t537 + t703 * t746;
t738 = t709 * t603 + t705 * t627;
t702 = t709 ^ 2;
t736 = t701 + t702;
t732 = t704 * t595;
t731 = t708 * t595;
t730 = t705 * t757;
t729 = t709 * t757;
t728 = t705 * t514 + t709 * t744;
t727 = -t705 * t603 + t708 * t628;
t716 = -qJDD(3) * t704 - t669 * t708;
t618 = -qJD(4) * t665 - t716;
t726 = -t618 * t703 - t707 * t662;
t724 = t706 * t686;
t723 = t710 * t686;
t722 = t705 * t536 + t598 * t707;
t721 = t705 * t537 - t598 * t703;
t720 = t625 * t704 + t598;
t718 = t603 * t708 + t749;
t717 = -t618 * t707 + t662 * t703;
t715 = t628 * t704 - t746;
t566 = -qJD(5) * t634 + t726;
t567 = -qJD(5) * t632 - t717;
t711 = qJD(3) ^ 2;
t698 = t710 * g(3);
t694 = t702 * t712;
t684 = -t694 - t711;
t683 = t694 - t711;
t682 = -t711 - t751;
t681 = t711 - t751;
t675 = -t694 + t751;
t674 = qJDD(1) * t710 - t706 * t712;
t673 = qJDD(1) * t706 + t710 * t712;
t671 = -0.2e1 * t689 + t733;
t668 = t691 + 0.2e1 * t690;
t664 = t709 * t677;
t663 = t736 * t734;
t656 = 0.2e1 * t699 + t713;
t649 = qJ(2) * t655;
t648 = t687 * t667;
t647 = t665 * t687;
t646 = -t661 + t685;
t645 = t660 - t685;
t644 = t669 * t709 - t701 * t734;
t643 = -t670 * t705 - t702 * t734;
t640 = -t681 * t705 + t664;
t639 = t683 * t709 - t755;
t638 = t681 * t709 + t756;
t637 = t683 * t705 + t754;
t636 = (t669 + t690) * t705;
t635 = (t670 - t689) * t709;
t623 = t661 - t660;
t620 = -t668 * t705 + t671 * t709;
t619 = t668 * t709 + t671 * t705;
t612 = t660 + t661;
t611 = t658 * t634;
t610 = t658 * t632;
t609 = -t631 + t657;
t608 = t630 - t657;
t607 = -t742 - qJ(2) * (t682 * t709 - t755);
t606 = t742 + qJ(2) * (t684 * t709 - t756);
t605 = -t650 + qJ(2) * (-t682 * t705 - t754);
t604 = -t650 - qJ(2) * (t684 * t705 + t664);
t601 = (t665 * t708 - t667 * t704) * t687;
t600 = (t665 * t704 + t667 * t708) * t687;
t594 = (qJD(4) - t687) * t665 + t716;
t593 = t618 - t647;
t592 = t618 + t647;
t591 = t648 - t714;
t590 = t648 + t714;
t589 = t631 - t630;
t586 = -t631 - t657;
t585 = qJ(2) * t737;
t584 = t618 * t708 + t667 * t753;
t583 = t618 * t704 - t667 * t752;
t582 = -t665 * t752 + t704 * t714;
t581 = t665 * t753 + t708 * t714;
t580 = t601 * t709 - t662 * t705;
t579 = t601 * t705 + t662 * t709;
t578 = t699 * t736 + t737;
t577 = t613 * t704 + t645 * t708;
t576 = t614 * t708 - t646 * t704;
t575 = t645 * t704 - t743;
t574 = t646 * t708 + t761;
t573 = -t657 - t630;
t572 = t743 - t704 * (-t661 - t685);
t568 = t708 * (-t685 - t660) - t761;
t565 = (-t632 * t707 + t634 * t703) * t658;
t564 = (-t632 * t703 - t634 * t707) * t658;
t560 = t584 * t709 + t730;
t559 = t582 * t709 - t730;
t558 = t584 * t705 - t729;
t557 = t582 * t705 + t729;
t555 = t602 * t708 - t603 * t704;
t553 = t709 * t555;
t552 = t705 * t555;
t551 = t708 * ((-qJD(4) - t687) * t667 + t725) + t704 * t593;
t550 = t591 * t708 - t592 * t704;
t549 = t591 * t704 + t592 * t708;
t548 = t567 + t610;
t547 = t567 - t610;
t546 = (-qJD(5) + t658) * t634 + t726;
t545 = t566 - t611;
t544 = -t566 - t611;
t543 = t705 * t718 - t628;
t542 = t577 * t709 - t590 * t705;
t541 = t576 * t709 + t593 * t705;
t540 = t577 * t705 + t590 * t709;
t539 = t576 * t705 - t593 * t709;
t538 = qJ(2) * (t709 * t718 + t625);
t535 = t571 * t708 + t704 * t745;
t534 = -t708 * t570 - t703 * t749;
t533 = t567 * t707 - t634 * t759;
t532 = t567 * t703 + t634 * t758;
t531 = -t566 * t703 + t632 * t758;
t530 = -t566 * t707 - t632 * t759;
t529 = t565 * t708 + t616 * t704;
t528 = t565 * t704 - t616 * t708;
t523 = t608 * t707 - t763;
t522 = -t609 * t703 + t768;
t521 = t608 * t703 + t762;
t520 = t609 * t707 + t769;
t519 = t550 * t709 + t623 * t705;
t518 = t550 * t705 - t623 * t709;
t517 = -t586 * t707 + t763;
t512 = t704 * t719;
t509 = -t573 * t703 - t768;
t508 = t533 * t708 + t732;
t507 = t531 * t708 - t732;
t506 = t533 * t704 - t731;
t505 = t531 * t704 + t731;
t504 = t514 * t708 + t749;
t503 = -qJ(2) * (t572 * t705 + t594 * t709) + t727;
t502 = qJ(2) * (t572 * t709 - t594 * t705) + t738;
t501 = -qJ(2) * (t568 * t705 + t591 * t709) + t715;
t500 = qJ(2) * (t568 * t709 - t591 * t705) + t720;
t499 = t529 * t709 + t564 * t705;
t498 = t529 * t705 - t564 * t709;
t497 = t545 * t707 - t547 * t703;
t496 = -t546 * t703 + t548 * t707;
t495 = t545 * t703 + t547 * t707;
t494 = t553 - qJ(2) * (t551 * t705 + t612 * t709);
t493 = t552 + qJ(2) * (t551 * t709 - t612 * t705);
t492 = t523 * t708 - t544 * t704;
t491 = t522 * t708 + t548 * t704;
t490 = t523 * t704 + t544 * t708;
t489 = t522 * t704 - t548 * t708;
t488 = t708 * (-t586 * t703 - t762) - t704 * ((qJD(5) + t658) * t632 + t717);
t487 = t708 * (t573 * t707 - t769) - t704 * t545;
t486 = t497 * t708 + t589 * t704;
t485 = t497 * t704 - t589 * t708;
t484 = t508 * t709 + t532 * t705;
t483 = t507 * t709 - t530 * t705;
t482 = t508 * t705 - t532 * t709;
t481 = t507 * t705 + t530 * t709;
t480 = t708 * (t546 * t707 + t548 * t703) - t704 * (t630 + t631);
t479 = t504 * t705 + t709 * t719;
t478 = qJ(2) * (t504 * t709 - t705 * t719);
t477 = t492 * t709 + t521 * t705;
t476 = t491 * t709 + t520 * t705;
t475 = t492 * t705 - t521 * t709;
t474 = t491 * t705 - t520 * t709;
t473 = t486 * t709 + t495 * t705;
t472 = t486 * t705 - t495 * t709;
t471 = -qJ(2) * (t488 * t705 + t517 * t709) + t739;
t470 = qJ(2) * (t488 * t709 - t517 * t705) + t721;
t469 = -qJ(2) * (t487 * t705 + t509 * t709) + t740;
t468 = qJ(2) * (t487 * t709 - t509 * t705) + t722;
t467 = -qJ(2) * (t480 * t705 + t496 * t709) + t728;
t466 = qJ(2) * (t480 * t709 - t496 * t705) + t741;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t674, 0, -t673, 0, -t766, -t698, -t679 * t710 + t680 * t706, 0, 0, t674, 0, 0, t673, 0, -t766, t655 * t706 - t659 * t710, t698, g(3) * t764, t644 * t710 - t724, t620 * t710 + t675 * t706, t640 * t710 + t691 * t706, t643 * t710 + t724, t639 * t710 + t706 * t733, qJDD(3) * t706 + t663 * t710, t604 * t710 - t641 * t706, t607 * t710 - t642 * t706, t710 * t588, t588 * t764, t560 * t710 + t583 * t706, t519 * t710 + t549 * t706, t541 * t710 + t574 * t706, t559 * t710 - t581 * t706, t542 * t710 + t575 * t706, t580 * t710 + t600 * t706, t501 * t710 - t627 * t706, t503 * t710 + t641 * t748, t494 * t710 + t706 * t718, -t543 * t764, t484 * t710 + t506 * t706, t473 * t710 + t485 * t706, t476 * t710 + t489 * t706, t483 * t710 + t505 * t706, t477 * t710 + t490 * t706, t499 * t710 + t528 * t706, t469 * t710 - t534 * t706, t471 * t710 + t535 * t706, t467 * t710 + t719 * t748, -t479 * t764; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t673, 0, t674, 0, t698, -t766, -t679 * t706 - t680 * t710, 0, 0, t673, 0, 0, -t674, 0, t698, -t655 * t710 - t659 * t706, t766, g(3) * t765, t644 * t706 + t723, t620 * t706 - t675 * t710, t640 * t706 - t691 * t710, t643 * t706 - t723, t639 * t706 - t710 * t733, -qJDD(3) * t710 + t663 * t706, t604 * t706 + t641 * t710, t607 * t706 + t642 * t710, t706 * t588, t588 * t765, t560 * t706 - t583 * t710, t519 * t706 - t549 * t710, t541 * t706 - t574 * t710, t559 * t706 + t581 * t710, t542 * t706 - t575 * t710, t580 * t706 - t600 * t710, t501 * t706 + t627 * t710, t503 * t706 - t641 * t747, t494 * t706 - t710 * t718, -t543 * t765, t484 * t706 - t506 * t710, t473 * t706 - t485 * t710, t476 * t706 - t489 * t710, t483 * t706 - t505 * t710, t477 * t706 - t490 * t710, t499 * t706 - t528 * t710, t469 * t706 + t534 * t710, t471 * t706 - t535 * t710, t467 * t706 - t719 * t747, -t479 * t765; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t679, t680, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t672, 0, t656, -t649, t636, t619, t638, t635, t637, 0, t606, t605, t578, t585, t558, t518, t539, t557, t540, t579, t500, t502, t493, t538, t482, t472, t474, t481, t475, t498, t468, t470, t466, t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t712, 0, 0, -g(3), -t679, 0, 0, qJDD(1), 0, 0, t712, 0, 0, -t659, g(3), qJ(2) * g(3), t644, t620, t640, t643, t639, t663, t604, t607, t588, qJ(2) * t588, t560, t519, t541, t559, t542, t580, t501, t503, t494, -qJ(2) * t543, t484, t473, t476, t483, t477, t499, t469, t471, t467, -qJ(2) * t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t712, 0, qJDD(1), 0, g(3), 0, -t680, 0, 0, t712, 0, 0, -qJDD(1), 0, g(3), -t655, 0, 0, t686, -t675, -t691, -t686, -t733, -qJDD(3), t641, t642, 0, 0, -t583, -t549, -t574, t581, -t575, -t600, t627, -t624, -t718, 0, -t506, -t485, -t489, -t505, -t490, -t528, t534, -t535, -t512, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t679, t680, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t672, 0, t656, -t649, t636, t619, t638, t635, t637, 0, t606, t605, t578, t585, t558, t518, t539, t557, t540, t579, t500, t502, t493, t538, t482, t472, t474, t481, t475, t498, t468, t470, t466, t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t712, 0, 0, -t659, g(3), 0, t644, t620, t640, t643, t639, t663, -t650, -t742, t588, 0, t560, t519, t541, t559, t542, t580, t715, t727, t553, 0, t484, t473, t476, t483, t477, t499, t740, t739, t728, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, t659, 0, -t655, 0, t636, t619, t638, t635, t637, 0, t742, -t650, t737, 0, t558, t518, t539, t557, t540, t579, t720, t738, t552, 0, t482, t472, t474, t481, t475, t498, t722, t721, t741, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t712, 0, 0, qJDD(1), 0, -g(3), t655, 0, 0, -t686, t675, t691, t686, t733, qJDD(3), -t641, -t642, 0, 0, t583, t549, t574, -t581, t575, t600, -t627, t624, t718, 0, t506, t485, t489, t505, t490, t528, -t534, t535, t512, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t669, t671, t677, -t690, t683, t690, 0, -t659, t641, 0, t584, t550, t576, t582, t577, t601, t624, t627, t555, 0, t508, t486, t491, t507, t492, t529, t536, t537, t744, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t689, t668, t681, t670, t678, -t689, t659, 0, t642, 0, -t757, -t623, -t593, t757, t590, t662, t602, t603, 0, 0, -t532, -t495, -t520, t530, -t521, -t564, t745, -t750, -t514, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t686, t675, t691, t686, t733, qJDD(3), -t641, -t642, 0, 0, t583, t549, t574, -t581, t575, t600, -t627, t624, t718, 0, t506, t485, t489, t505, t490, t528, -t534, t535, t512, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t618, t591, t614, -t647, t645, t647, 0, t641, t602, 0, t533, t497, t522, t531, t523, t565, t750, t745, t719, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t648, t592, t646, -t714, -t613, t648, -t641, 0, t603, 0, -t595, -t589, -t548, t595, t544, -t616, t570, t571, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t757, t623, t593, -t757, -t590, -t662, -t602, -t603, 0, 0, t532, t495, t520, -t530, t521, t564, -t745, t750, t514, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t567, t545, t767, t610, t608, -t610, 0, t602, t570, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t611, t547, t609, t566, t562, -t611, -t602, 0, t571, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t595, t589, t548, -t595, -t544, t616, -t570, -t571, 0, 0;];
m_new_reg  = t1;
