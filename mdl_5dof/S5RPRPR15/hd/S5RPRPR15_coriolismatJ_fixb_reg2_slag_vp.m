% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:37
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPR15_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR15_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR15_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRPR15_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:37:29
% EndTime: 2019-12-31 18:37:38
% DurationCPUTime: 4.42s
% Computational Cost: add. (5072->348), mult. (10235->500), div. (0->0), fcn. (10426->6), ass. (0->264)
t257 = cos(pkin(8));
t395 = sin(qJ(5));
t321 = t395 * t257;
t256 = sin(pkin(8));
t396 = cos(qJ(5));
t325 = t396 * t256;
t211 = t325 + t321;
t259 = cos(qJ(3));
t360 = t259 * t211;
t368 = t211 * t360;
t322 = t395 * t256;
t228 = t259 * t322;
t245 = t396 * t257;
t190 = t259 * t245 - t228;
t209 = t322 - t245;
t370 = t190 * t209;
t76 = -t368 / 0.2e1 - t370 / 0.2e1;
t414 = t76 * qJD(5);
t352 = qJD(3) * t211;
t413 = -qJD(1) * t76 + t209 * t352;
t353 = qJD(1) * t190;
t412 = qJD(3) * t76 - t360 * t353;
t258 = sin(qJ(3));
t260 = -pkin(1) - pkin(6);
t362 = t258 * t260;
t229 = t257 * t362;
t393 = t258 * pkin(3);
t299 = -t259 * qJ(4) + t393;
t284 = qJ(2) + t299;
t173 = t256 * t284 + t229;
t364 = t256 * t259;
t154 = -pkin(7) * t364 + t173;
t307 = -t256 * t260 + pkin(4);
t392 = pkin(7) + qJ(4);
t262 = t307 * t258 + (-t392 * t259 + qJ(2) + t393) * t257;
t66 = t395 * t154 - t396 * t262;
t411 = -t66 / 0.2e1;
t250 = t256 ^ 2;
t251 = t257 ^ 2;
t233 = t251 + t250;
t255 = t259 ^ 2;
t240 = t258 ^ 2 - t255;
t410 = t190 ^ 2;
t409 = t211 ^ 2;
t408 = -t190 / 0.2e1;
t407 = -t209 / 0.2e1;
t406 = t209 / 0.2e1;
t405 = t211 / 0.2e1;
t404 = t228 / 0.2e1;
t403 = t245 / 0.2e1;
t246 = -t257 * pkin(4) - pkin(3);
t402 = t246 / 0.2e1;
t401 = -t258 / 0.2e1;
t400 = t258 / 0.2e1;
t399 = t259 / 0.2e1;
t367 = t211 * t190;
t376 = t360 * t209;
t77 = t367 + t376;
t398 = t77 * qJD(4);
t186 = t211 * t258;
t371 = t190 * t186;
t227 = t258 * t322;
t189 = t258 * t245 - t227;
t374 = t189 * t360;
t63 = -t374 / 0.2e1 + t371 / 0.2e1;
t397 = t63 * qJD(4);
t394 = t256 * pkin(4);
t306 = -t260 + t394;
t204 = t306 * t259;
t36 = t204 * t360 - t66 * t258;
t391 = qJD(1) * t36;
t67 = t396 * t154 + t395 * t262;
t37 = t204 * t190 - t67 * t258;
t390 = qJD(1) * t37;
t389 = qJD(1) * t63;
t78 = -t368 + t370;
t388 = qJD(1) * t78;
t172 = -t256 * t362 + t257 * t284;
t90 = t172 * t257 + t173 * t256;
t84 = t90 * t259;
t387 = qJD(1) * t84;
t361 = t259 * t190;
t372 = t189 * t258;
t278 = -t372 / 0.2e1 - t361 / 0.2e1;
t285 = t403 - t322 / 0.2e1;
t85 = -t278 + t285;
t386 = qJD(1) * t85;
t268 = -t321 / 0.2e1 - t325 / 0.2e1;
t375 = t360 * t259;
t377 = t186 * t258;
t280 = t377 / 0.2e1 + t375 / 0.2e1;
t86 = t268 - t280;
t385 = qJD(1) * t86;
t384 = qJD(1) * t90;
t226 = t259 * pkin(3) + t258 * qJ(4);
t359 = t259 * t260;
t230 = t257 * t359;
t184 = t256 * t226 + t230;
t365 = t256 * t258;
t159 = pkin(7) * t365 + t184;
t323 = t395 * t159;
t216 = t257 * t226;
t363 = t257 * t258;
t134 = pkin(7) * t363 + t307 * t259 + t216;
t327 = t396 * t134;
t68 = -t323 + t327;
t324 = t395 * t134;
t326 = t396 * t159;
t69 = t326 + t324;
t10 = t67 * t186 - t66 * t189 - t190 * t68 - t360 * t69;
t383 = t10 * qJD(1);
t203 = t306 * t258;
t11 = -t203 * t204 - t66 * t68 + t67 * t69;
t382 = t11 * qJD(1);
t15 = -t204 * t186 - t203 * t360 + t68 * t258 - t66 * t259;
t381 = t15 * qJD(1);
t16 = t204 * t189 + t203 * t190 + t69 * t258 + t67 * t259;
t380 = t16 * qJD(1);
t379 = t172 * t259;
t378 = t173 * t259;
t373 = t189 * t209;
t369 = t211 * t186;
t22 = t66 * t209 + t67 * t211;
t366 = t22 * qJD(1);
t248 = t259 * t258;
t328 = t256 * t359;
t183 = t216 - t328;
t34 = -t172 * t363 - t173 * t365 + (t183 * t257 + t184 * t256) * t259;
t358 = t34 * qJD(1);
t65 = t371 + t374;
t357 = t65 * qJD(1);
t79 = t379 + (t183 + 0.2e1 * t328) * t258;
t356 = t79 * qJD(1);
t80 = t378 + (t184 - 0.2e1 * t230) * t258;
t355 = t80 * qJD(1);
t354 = qJD(1) * t360;
t351 = qJD(3) * t246;
t350 = qJD(3) * t257;
t349 = qJD(4) * t360;
t348 = qJD(4) * t190;
t347 = qJD(5) * t190;
t346 = qJD(5) * t211;
t105 = -t375 + t377;
t345 = t105 * qJD(1);
t106 = t361 - t372;
t344 = t106 * qJD(1);
t124 = (t405 - t268) * t258;
t343 = t124 * qJD(1);
t264 = t405 + t268;
t125 = t264 * t258;
t342 = t125 * qJD(1);
t129 = -t227 / 0.2e1 + (t407 + t403) * t258;
t341 = t129 * qJD(1);
t300 = -t245 / 0.2e1;
t130 = t209 * t401 + t258 * t300 + t227 / 0.2e1;
t340 = t130 * qJD(1);
t339 = t360 * qJD(5);
t207 = t233 * t255;
t338 = t207 * qJD(1);
t208 = t233 * t259;
t337 = t208 * qJD(1);
t200 = t209 * qJD(5);
t213 = t240 * t256;
t336 = t213 * qJD(1);
t214 = t240 * t257;
t335 = t214 * qJD(1);
t334 = t233 * qJD(3);
t333 = t240 * qJD(1);
t332 = t258 * qJD(1);
t331 = t258 * qJD(3);
t330 = t259 * qJD(1);
t329 = t259 * qJD(3);
t320 = qJ(2) * t332;
t319 = qJ(2) * t330;
t316 = t256 * t350;
t315 = t209 * t332;
t314 = t211 * t200;
t313 = t211 * t332;
t312 = t256 * t332;
t311 = t257 * t332;
t310 = t260 * t331;
t242 = t258 * t329;
t241 = t258 * t330;
t309 = t362 / 0.2e1;
t308 = t392 * t256;
t305 = 0.2e1 * t257 * t364;
t182 = t190 * t332;
t304 = qJD(3) * t124 + t182;
t303 = qJD(4) * t259 - qJD(2);
t302 = qJD(4) + t351;
t301 = t257 * t241;
t261 = -t203 * t399 + t204 * t401 + t360 * t411 + t67 * t408 + t68 * t186 / 0.2e1 - t69 * t189 / 0.2e1;
t225 = t392 * t257;
t167 = t395 * t225 + t396 * t308;
t168 = t396 * t225 - t395 * t308;
t282 = t167 * t406 + t168 * t405;
t3 = t261 + t282;
t61 = t186 * t360 + t189 * t190 - t248;
t298 = -t3 * qJD(1) + t61 * qJD(2);
t21 = t190 * t66 - t360 * t67;
t297 = -qJD(1) * t21 - qJD(2) * t63;
t33 = -t258 * t359 + (t184 * t400 + t378 / 0.2e1) * t257 + (t183 * t401 - t379 / 0.2e1) * t256;
t38 = -t260 ^ 2 * t248 + t172 * t183 + t173 * t184;
t296 = t38 * qJD(1) + t33 * qJD(2);
t44 = -t367 + t376;
t185 = t360 ^ 2;
t89 = t185 - t410;
t295 = qJD(1) * t89 + qJD(3) * t44;
t294 = -t183 * t256 + t184 * t257;
t126 = t264 * t259;
t266 = t168 * t401 + t190 * t402 + t204 * t405;
t270 = t327 / 0.2e1 - t323 / 0.2e1;
t24 = -t266 + t270;
t293 = qJD(1) * t24 + qJD(2) * t126;
t127 = t404 + (t300 + t407) * t259;
t267 = t167 * t400 + t204 * t407 - t360 * t402;
t269 = -t326 / 0.2e1 - t324 / 0.2e1;
t25 = -t267 + t269;
t292 = qJD(1) * t25 + qJD(2) * t127;
t171 = t258 * t208 - t248;
t291 = t33 * qJD(1) + t171 * qJD(2);
t202 = t209 ^ 2;
t109 = t202 - t409;
t290 = qJD(1) * t44 + qJD(3) * t109;
t110 = t185 + t410;
t289 = qJD(1) * t110 + qJD(3) * t77;
t164 = t202 + t409;
t288 = qJD(1) * t77 + qJD(3) * t164;
t287 = -qJD(3) * t209 - t354;
t286 = t352 + t353;
t283 = (t260 / 0.2e1 - t394 / 0.2e1) * t258;
t281 = t173 * t257 / 0.2e1 - t172 * t256 / 0.2e1;
t279 = t373 / 0.2e1 - t369 / 0.2e1;
t273 = qJD(3) * t125 + t182 + t347;
t263 = t167 * t408 + t168 * t360 / 0.2e1 + t211 * t411 + t67 * t406;
t13 = t283 + t263;
t60 = t167 * t211 - t168 * t209;
t70 = t400 + t279;
t272 = qJD(1) * t13 + qJD(2) * t70 - qJD(3) * t60;
t194 = (0.1e1 / 0.2e1 - t251 / 0.2e1 - t250 / 0.2e1) * t258;
t218 = t233 * qJ(4);
t81 = t309 - t281;
t271 = qJD(1) * t81 + qJD(2) * t194 - qJD(3) * t218;
t265 = t299 * qJD(3) - qJD(4) * t258;
t253 = qJ(2) * qJD(2);
t252 = qJD(1) * qJ(2);
t247 = t329 / 0.2e1;
t205 = qJD(5) * t399 + t241;
t195 = (0.1e1 + t233) * t400;
t131 = t209 * t399 + t259 * t300 + t404;
t128 = -t360 / 0.2e1 + t268 * t259;
t88 = t278 + t285;
t87 = t268 + t280;
t83 = -t129 * qJD(3) + t332 * t360;
t82 = t309 + t281;
t71 = t400 - t279;
t59 = t130 * qJD(3) + (-qJD(5) - t332) * t360;
t43 = t44 * qJD(5);
t32 = t33 * qJD(3);
t27 = t266 + t270;
t26 = t267 + t269;
t14 = t283 - t263;
t4 = -t261 + t282;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t253, -t242, t240 * qJD(3), 0, t242, 0, 0, qJ(2) * t329 + qJD(2) * t258, -qJ(2) * t331 + qJD(2) * t259, 0, t253, -t251 * t242, t305 * t331, -t214 * qJD(3), -t250 * t242, t213 * qJD(3), t242, t79 * qJD(3) - t303 * t363, -t80 * qJD(3) + t303 * t365, -qJD(2) * t208 - qJD(3) * t34 + qJD(4) * t207, qJD(2) * t90 + qJD(3) * t38 - qJD(4) * t84, (-qJD(3) * t189 - t339) * t190, qJD(3) * t65 + qJD(5) * t89, t106 * qJD(3) - t258 * t339, (-qJD(3) * t186 + t347) * t360, t105 * qJD(3) - t258 * t347, t242, t15 * qJD(3) + t37 * qJD(5) + (-qJD(2) * t209 - t348) * t258, -t16 * qJD(3) - t36 * qJD(5) + (-qJD(2) * t211 + t349) * t258, qJD(2) * t78 + qJD(3) * t10 + qJD(4) * t110, qJD(2) * t22 + qJD(3) * t11 + qJD(4) * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t252, 0, 0, 0, 0, 0, 0, t332, t330, 0, t252, 0, 0, 0, 0, 0, 0, t311, -t312, -t337, t32 + t384, 0, 0, 0, 0, 0, 0, t88 * qJD(5) - t315, t87 * qJD(5) - t313, t388, t366 + (t186 * t209 + t211 * t189) * qJD(2) + t4 * qJD(3) + t397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t241, t333, -t331, t241, -t329, 0, -t310 + t319, -t260 * t329 - t320, 0, 0, (-t251 * t330 - t316) * t258, (qJD(1) * t305 + (t250 - t251) * qJD(3)) * t258, t256 * t329 - t335, (-t250 * t330 + t316) * t258, t257 * t329 + t336, t241, -t229 * qJD(3) + t256 * t265 + t356, t256 * t310 + t257 * t265 - t355, qJD(3) * t294 - t358, (-pkin(3) * t362 + qJ(4) * t294) * qJD(3) + t82 * qJD(4) + t296, -t189 * t286 + t414, t357 + (t369 + t373) * qJD(3) + t43, t130 * qJD(5) + t211 * t329 + t344, t186 * t287 - t414, -t125 * qJD(5) - t209 * t329 + t345, t205, t381 + (-t167 * t259 - t246 * t186 - t203 * t209) * qJD(3) - t124 * qJD(4) + t27 * qJD(5), -t380 + (-t168 * t259 - t246 * t189 - t203 * t211) * qJD(3) - t129 * qJD(4) + t26 * qJD(5), t383 + (-t167 * t189 + t168 * t186 - t209 * t69 - t211 * t68) * qJD(3) + t398, t382 + t4 * qJD(2) + (-t68 * t167 + t168 * t69 - t203 * t246) * qJD(3) + t14 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-qJD(3) * t256 - t257 * t330) * t258, (t256 * t330 - t350) * t258, t338, qJD(3) * t82 - t387, 0, 0, 0, 0, 0, 0, -t304, t83, t289, qJD(3) * t14 - t297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t412, t295, t59, -t412, -t273, t247, qJD(2) * t88 + qJD(3) * t27 - qJD(5) * t67 + t390, qJD(2) * t87 + qJD(3) * t26 + qJD(5) * t66 - t391, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t252, 0, 0, 0, 0, 0, 0, -t332, -t330, 0, -t252, 0, 0, 0, 0, 0, 0, -t311, t312, t337, t32 - t384, 0, 0, 0, 0, 0, 0, -t85 * qJD(5) + t315, -t86 * qJD(5) + t313, -t388, -qJD(3) * t3 - t366 + t397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t331, -t329, 0, 0, 0, 0, 0, 0, 0, 0, -t257 * t331, t256 * t331, t208 * qJD(3), (qJ(4) * t208 - t393) * qJD(3) + t195 * qJD(4) + t291, 0, 0, 0, 0, 0, 0, t128 * qJD(5) + t209 * t331, t131 * qJD(5) + t211 * t331, -qJD(3) * t78, (t167 * t360 + t190 * t168 + t258 * t246) * qJD(3) + t71 * qJD(4) + t298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t71 + t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t128 - qJD(5) * t189 - t386, qJD(3) * t131 + qJD(5) * t186 - t385, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, -t333, 0, -t241, 0, 0, -t319, t320, 0, 0, t251 * t241, -0.2e1 * t256 * t301, t335, t250 * t241, -t336, -t241, -t356, t355, t358, -qJD(4) * t81 - t296, t189 * t353 + t414, t43 - t357, qJD(5) * t129 - t344, t186 * t354 - t414, -qJD(5) * t124 - t345, -t205, -qJD(4) * t125 - qJD(5) * t24 - t381, -qJD(4) * t130 - qJD(5) * t25 + t380, -t383 + t398, qJD(2) * t3 - qJD(4) * t13 - t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t194 - t291, 0, 0, 0, 0, 0, 0, -qJD(5) * t126, -qJD(5) * t127, 0, -qJD(4) * t70 - t298; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t233 * qJD(4), t218 * qJD(4), -t314, t109 * qJD(5), 0, t314, 0, 0, t246 * t346, -t246 * t200, qJD(4) * t164, qJD(4) * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t334, -t271, 0, 0, 0, 0, 0, 0, -t342, -t340, t288, -t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t413, t290, -t200 + t341, t413, -t343 - t346, -t330 / 0.2e1, -qJD(5) * t168 + t211 * t351 - t293, qJD(5) * t167 - t209 * t351 - t292, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t301, -t256 * t241, -t338, qJD(3) * t81 + t387, 0, 0, 0, 0, 0, 0, t273, t59, -t289, qJD(3) * t13 + t297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t70 - t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334, t271, 0, 0, 0, 0, 0, 0, t342 + t346, -t200 + t340, -t288, t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, t287, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t412, -t295, t83, t412, t304, t247, qJD(2) * t85 + qJD(3) * t24 - t348 - t390, qJD(2) * t86 + qJD(3) * t25 + t349 + t391, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t126 + t386, qJD(3) * t127 + t385, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t413, -t290, -t341, -t413, t343, t330 / 0.2e1, -t211 * t302 + t293, t209 * t302 + t292, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t286, -t287, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
