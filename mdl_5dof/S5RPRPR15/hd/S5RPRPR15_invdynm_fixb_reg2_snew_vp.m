% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRPR15
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:37
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRPR15_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR15_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR15_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR15_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR15_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRPR15_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:37:40
% EndTime: 2019-12-31 18:37:50
% DurationCPUTime: 10.27s
% Computational Cost: add. (47771->592), mult. (100924->736), div. (0->0), fcn. (64063->8), ass. (0->375)
t905 = sin(pkin(8));
t906 = cos(pkin(8));
t911 = cos(qJ(3));
t980 = qJD(1) * t911;
t867 = -t906 * qJD(3) + t905 * t980;
t869 = qJD(3) * t905 + t906 * t980;
t827 = t869 * t867;
t977 = qJD(1) * qJD(3);
t966 = t911 * t977;
t908 = sin(qJ(3));
t975 = t908 * qJDD(1);
t874 = t966 + t975;
t1018 = -t827 + t874;
t1025 = t1018 * t905;
t1024 = t1018 * t906;
t907 = sin(qJ(5));
t910 = cos(qJ(5));
t817 = t910 * t867 + t869 * t907;
t819 = -t867 * t907 + t869 * t910;
t769 = t819 * t817;
t870 = qJDD(5) + t874;
t1020 = -t769 + t870;
t1023 = t1020 * t907;
t1022 = t1020 * t910;
t1015 = pkin(6) + pkin(1);
t914 = qJD(1) ^ 2;
t1017 = t1015 * t914;
t976 = qJD(2) * qJD(1);
t900 = 0.2e1 * t976;
t909 = sin(qJ(1));
t912 = cos(qJ(1));
t885 = g(1) * t912 + g(2) * t909;
t902 = qJDD(1) * qJ(2);
t934 = t885 - t902;
t897 = t911 * qJDD(1);
t967 = t908 * t977;
t875 = t897 - t967;
t941 = -t875 + t967;
t942 = t874 + t966;
t781 = t942 * pkin(3) + t941 * qJ(4) - t1017 + t900 - t934;
t884 = g(1) * t909 - t912 * g(2);
t945 = qJDD(2) - t884;
t924 = -qJ(2) * t914 + t945;
t847 = -t1015 * qJDD(1) + t924;
t826 = t911 * g(3) - t908 * t847;
t913 = qJD(3) ^ 2;
t1008 = qJ(4) * t911;
t1011 = pkin(3) * t908;
t926 = t914 * (-t1008 + t1011);
t789 = -t913 * pkin(3) + qJDD(3) * qJ(4) - t908 * t926 - t826;
t702 = 0.2e1 * qJD(4) * t869 - t906 * t781 + t789 * t905;
t703 = -0.2e1 * qJD(4) * t867 + t905 * t781 + t906 * t789;
t667 = -t702 * t906 + t703 * t905;
t968 = pkin(3) * t911 + pkin(2);
t1021 = (qJ(4) * t908 + t968) * t667;
t668 = t905 * t702 + t906 * t703;
t846 = qJDD(3) * t905 + t875 * t906;
t955 = -t906 * qJDD(3) + t875 * t905;
t753 = -t817 * qJD(5) + t910 * t846 - t907 * t955;
t979 = t908 * qJD(1);
t892 = qJD(5) + t979;
t802 = t892 * t817;
t1019 = -t802 + t753;
t825 = t908 * g(3) + t911 * t847;
t779 = t911 * t825 - t826 * t908;
t852 = t867 * t979;
t810 = t846 + t852;
t853 = t869 * t979;
t808 = -t955 + t853;
t958 = t846 * t907 + t910 * t955;
t720 = (qJD(5) - t892) * t819 + t958;
t749 = t808 * t905 - t810 * t906;
t650 = -qJ(4) * t749 - t667;
t1016 = t650 * t908 - t968 * t749;
t815 = t817 ^ 2;
t816 = t819 ^ 2;
t864 = t867 ^ 2;
t865 = t869 ^ 2;
t890 = t892 ^ 2;
t1014 = pkin(2) * t779;
t916 = t934 - 0.2e1 * t976;
t843 = t916 + t1017;
t1013 = pkin(2) * t843;
t903 = t908 ^ 2;
t904 = t911 ^ 2;
t981 = t903 + t904;
t877 = t981 * qJDD(1);
t1012 = pkin(2) * t877;
t684 = pkin(4) * t1018 - t810 * pkin(7) - t702;
t933 = pkin(4) * t979 - pkin(7) * t869;
t689 = -t864 * pkin(4) - pkin(7) * t955 - t933 * t979 + t703;
t637 = -t910 * t684 + t689 * t907;
t638 = t684 * t907 + t689 * t910;
t612 = -t637 * t910 + t638 * t907;
t1010 = pkin(4) * t612;
t724 = t802 + t753;
t680 = -t720 * t907 - t724 * t910;
t1009 = pkin(4) * t680;
t1007 = qJDD(1) * pkin(1);
t1006 = t612 * t905;
t1005 = t612 * t906;
t788 = qJDD(3) * pkin(3) + t913 * qJ(4) - t911 * t926 - qJDD(4) + t825;
t727 = -pkin(4) * t955 + t864 * pkin(7) - t869 * t933 + t788;
t1003 = t727 * t907;
t1002 = t727 * t910;
t755 = t769 + t870;
t1001 = t755 * t907;
t1000 = t755 * t910;
t812 = t827 + t874;
t999 = t812 * t905;
t998 = t812 * t906;
t996 = t843 * t908;
t995 = t874 * t911;
t994 = t877 * t909;
t993 = t877 * t912;
t891 = t908 * t914 * t911;
t882 = qJDD(3) + t891;
t992 = t882 * t908;
t991 = t882 * t911;
t883 = qJDD(3) - t891;
t990 = t883 * t908;
t989 = t883 * t911;
t988 = t892 * t819;
t987 = t892 * t907;
t986 = t892 * t910;
t985 = t903 * t914;
t984 = t904 * t914;
t784 = t905 * t788;
t785 = t906 * t788;
t828 = t911 * t843;
t983 = t749 * t1011 + t911 * t650;
t982 = pkin(3) * t788 + qJ(4) * t668;
t974 = t908 * t769;
t973 = t911 * t769;
t972 = t908 * t827;
t971 = t911 * t827;
t850 = -t865 - t985;
t775 = -t850 * t905 - t998;
t809 = t846 - t852;
t970 = -pkin(3) * t809 + qJ(4) * t775 - t784;
t820 = -t985 - t864;
t765 = t820 * t906 - t1025;
t807 = -t853 - t955;
t969 = pkin(3) * t807 + qJ(4) * t765 + t785;
t613 = t637 * t907 + t910 * t638;
t596 = t613 * t905 + t1005;
t608 = pkin(4) * t727 + pkin(7) * t613;
t583 = -pkin(7) * t1005 - qJ(4) * t596 - t608 * t905;
t590 = -pkin(3) * t596 - t1010;
t965 = t911 * t583 - t590 * t908;
t682 = -t720 * t910 + t724 * t907;
t738 = -t815 - t816;
t601 = -pkin(4) * t738 + pkin(7) * t682 + t613;
t603 = -pkin(7) * t680 - t612;
t629 = t680 * t906 + t682 * t905;
t589 = -qJ(4) * t629 - t601 * t905 + t603 * t906;
t617 = -pkin(3) * t629 - t1009;
t964 = t911 * t589 - t617 * t908;
t766 = -t890 - t815;
t693 = t766 * t910 - t1023;
t719 = (qJD(5) + t892) * t819 + t958;
t639 = -pkin(4) * t719 + pkin(7) * t693 + t1002;
t692 = t766 * t907 + t1022;
t658 = t692 * t906 + t693 * t905;
t661 = -pkin(7) * t692 - t1003;
t605 = -qJ(4) * t658 - t639 * t905 + t661 * t906;
t932 = pkin(4) * t692 - t637;
t611 = -pkin(3) * t658 - t932;
t963 = t911 * t605 - t611 * t908;
t790 = -t816 - t890;
t701 = -t790 * t907 - t1000;
t647 = -pkin(4) * t1019 + pkin(7) * t701 - t1003;
t700 = t790 * t910 - t1001;
t664 = t700 * t906 + t701 * t905;
t678 = -pkin(7) * t700 - t1002;
t610 = -qJ(4) * t664 - t647 * t905 + t678 * t906;
t917 = pkin(4) * t700 - t638;
t614 = -pkin(3) * t664 - t917;
t962 = t911 * t610 - t614 * t908;
t764 = t820 * t905 + t1024;
t685 = -pkin(3) * t764 + t702;
t699 = -qJ(4) * t764 - t784;
t961 = -t685 * t908 + t911 * t699;
t772 = t850 * t906 - t999;
t688 = -pkin(3) * t772 + t703;
t728 = -qJ(4) * t772 - t785;
t960 = -t688 * t908 + t911 * t728;
t851 = pkin(1) * t914 + t916;
t854 = -t924 + t1007;
t957 = -t912 * t851 - t854 * t909;
t956 = -t884 * t909 - t912 * t885;
t954 = t909 * t891;
t953 = t912 * t891;
t631 = -t680 * t905 + t682 * t906;
t952 = -pkin(3) * t738 + qJ(4) * t631 + t906 * t601 + t905 * t603;
t659 = -t692 * t905 + t693 * t906;
t951 = -pkin(3) * t719 + qJ(4) * t659 + t906 * t639 + t905 * t661;
t665 = -t700 * t905 + t701 * t906;
t950 = -pkin(3) * t1019 + qJ(4) * t665 + t906 * t647 + t905 * t678;
t751 = t808 * t906 + t810 * t905;
t800 = t864 + t865;
t949 = pkin(3) * t800 + qJ(4) * t751 + t668;
t655 = t668 * t908 + t788 * t911;
t948 = -pkin(2) * t655 - t982;
t878 = qJDD(1) * t912 - t909 * t914;
t947 = pkin(5) * t878 + g(3) * t909;
t879 = qJDD(1) * t909 + t912 * t914;
t946 = -pkin(5) * t879 + g(3) * t912;
t873 = 0.2e1 * t966 + t975;
t944 = pkin(2) * t873 - t828;
t876 = t897 - 0.2e1 * t967;
t943 = pkin(2) * t876 + t996;
t780 = -t825 * t908 - t826 * t911;
t940 = t851 * t909 - t854 * t912;
t939 = t884 * t912 - t885 * t909;
t725 = t765 * t908 + t807 * t911;
t938 = -pkin(2) * t725 - t969;
t732 = t775 * t908 - t809 * t911;
t937 = -pkin(2) * t732 - t970;
t889 = -t913 - t984;
t835 = t889 * t911 - t992;
t935 = -pkin(2) * t835 - t826;
t597 = t613 * t906 - t1006;
t931 = pkin(3) * t727 - pkin(7) * t1006 + qJ(4) * t597 + t906 * t608;
t621 = t631 * t908 - t738 * t911;
t930 = -pkin(2) * t621 - t952;
t632 = t659 * t908 - t719 * t911;
t929 = -pkin(2) * t632 - t951;
t640 = -t1019 * t911 + t665 * t908;
t928 = -pkin(2) * t640 - t950;
t704 = t751 * t908 + t800 * t911;
t927 = -pkin(2) * t704 - t949;
t887 = -t913 - t985;
t833 = t887 * t908 + t989;
t925 = -pkin(2) * t833 - t825;
t923 = pkin(2) * t596 - t583 * t908 - t590 * t911;
t922 = pkin(2) * t629 - t589 * t908 - t617 * t911;
t921 = pkin(2) * t658 - t605 * t908 - t611 * t911;
t920 = pkin(2) * t664 - t610 * t908 - t614 * t911;
t919 = pkin(2) * t764 - t685 * t911 - t699 * t908;
t918 = pkin(2) * t772 - t688 * t911 - t728 * t908;
t593 = t597 * t908 + t727 * t911;
t915 = -pkin(2) * t593 - t931;
t888 = t913 - t984;
t886 = -t913 + t985;
t881 = (-t903 + t904) * t914;
t880 = t981 * t914;
t871 = t981 * t977;
t866 = t945 - 0.2e1 * t1007;
t863 = -t885 + t900 + 0.2e1 * t902;
t849 = -t865 + t985;
t848 = t864 - t985;
t845 = t875 * t908 + t904 * t977;
t844 = t903 * t977 - t995;
t840 = -t889 * t908 - t991;
t839 = -t888 * t908 + t989;
t838 = t941 * t911;
t837 = t887 * t911 - t990;
t836 = t886 * t911 - t992;
t834 = t888 * t911 + t990;
t832 = t886 * t908 + t991;
t831 = t942 * t908;
t824 = t865 - t864;
t823 = -t873 * t911 - t876 * t908;
t822 = -t873 * t908 + t876 * t911;
t805 = pkin(1) * t854 - qJ(2) * t851;
t799 = (-t867 * t906 + t869 * t905) * t979;
t798 = (-t867 * t905 - t869 * t906) * t979;
t797 = -t816 + t890;
t796 = t815 - t890;
t794 = t846 * t906 - t853 * t905;
t793 = t846 * t905 + t853 * t906;
t792 = t852 * t906 + t905 * t955;
t791 = -t852 * t905 + t906 * t955;
t783 = t799 * t911 + t874 * t908;
t782 = t799 * t908 - t995;
t776 = t848 * t906 - t999;
t774 = -t849 * t905 + t1024;
t773 = t848 * t905 + t998;
t771 = t849 * t906 + t1025;
t768 = t816 - t815;
t767 = pkin(2) * t880 + t780;
t763 = -qJ(2) * t840 - t935;
t762 = -qJ(2) * t837 - t925;
t761 = t794 * t911 + t972;
t760 = t792 * t911 - t972;
t759 = t794 * t908 - t971;
t758 = t792 * t908 + t971;
t752 = -qJD(5) * t819 - t958;
t750 = t807 * t906 - t809 * t905;
t748 = t807 * t905 + t809 * t906;
t746 = (-t817 * t910 + t819 * t907) * t892;
t745 = (-t817 * t907 - t819 * t910) * t892;
t743 = -t1015 * t837 + t944;
t742 = -t1015 * t840 + t943;
t741 = qJ(2) * t876 - t1015 * t835 - t828;
t740 = qJ(2) * t873 - t1015 * t833 - t996;
t739 = -qJ(2) * t880 + t1015 * t877 - t779;
t736 = t776 * t911 + t808 * t908;
t735 = t775 * t911 + t809 * t908;
t734 = t774 * t911 + t810 * t908;
t733 = t776 * t908 - t808 * t911;
t731 = t774 * t908 - t810 * t911;
t730 = t750 * t911 + t824 * t908;
t729 = t750 * t908 - t824 * t911;
t726 = t765 * t911 - t807 * t908;
t714 = -qJ(2) * t780 + t1014;
t713 = t796 * t910 - t1001;
t712 = -t797 * t907 + t1022;
t711 = t796 * t907 + t1000;
t710 = t797 * t910 + t1023;
t709 = t753 * t910 - t819 * t987;
t708 = t753 * t907 + t819 * t986;
t707 = -t752 * t907 + t817 * t986;
t706 = t752 * t910 + t817 * t987;
t705 = t751 * t911 - t800 * t908;
t695 = -t1015 * t780 - t1013;
t694 = -qJ(2) * t843 - t1015 * t779;
t691 = -t745 * t905 + t746 * t906;
t690 = t745 * t906 + t746 * t905;
t687 = t691 * t911 + t870 * t908;
t686 = t691 * t908 - t870 * t911;
t681 = -t1019 * t907 - t719 * t910;
t679 = t1019 * t910 - t719 * t907;
t677 = -t711 * t905 + t713 * t906;
t676 = -t710 * t905 + t712 * t906;
t675 = t711 * t906 + t713 * t905;
t674 = t710 * t906 + t712 * t905;
t672 = -t708 * t905 + t709 * t906;
t671 = -t706 * t905 + t707 * t906;
t670 = t708 * t906 + t709 * t905;
t669 = t706 * t906 + t707 * t905;
t662 = t667 * t1011;
t656 = t668 * t911 - t788 * t908;
t654 = t672 * t911 + t974;
t653 = t671 * t911 - t974;
t652 = t672 * t908 - t973;
t651 = t671 * t908 + t973;
t648 = -qJ(2) * t735 - t937;
t645 = t677 * t911 - t720 * t908;
t644 = t676 * t911 + t724 * t908;
t643 = t677 * t908 + t720 * t911;
t642 = t676 * t908 - t724 * t911;
t641 = t1019 * t908 + t665 * t911;
t634 = -qJ(2) * t726 - t938;
t633 = t659 * t911 + t719 * t908;
t630 = -t679 * t905 + t681 * t906;
t628 = t679 * t906 + t681 * t905;
t626 = t630 * t911 + t768 * t908;
t625 = t630 * t908 - t768 * t911;
t624 = -t1015 * t735 + t918;
t623 = qJ(2) * t772 - t1015 * t732 + t960;
t622 = t631 * t911 + t738 * t908;
t620 = -qJ(2) * t705 - t927;
t619 = -t1015 * t726 + t919;
t618 = qJ(2) * t764 - t1015 * t725 + t961;
t616 = -t1015 * t705 - t1016;
t615 = qJ(2) * t749 - t1015 * t704 + t983;
t606 = -qJ(2) * t656 - t948;
t599 = -t1015 * t656 + t1021;
t598 = t662 + (qJ(2) - t1008) * t667 - t1015 * t655;
t594 = t597 * t911 - t727 * t908;
t592 = -qJ(2) * t641 - t928;
t591 = -qJ(2) * t633 - t929;
t587 = -t1015 * t641 + t920;
t586 = qJ(2) * t664 - t1015 * t640 + t962;
t585 = -t1015 * t633 + t921;
t584 = qJ(2) * t658 - t1015 * t632 + t963;
t581 = -qJ(2) * t622 - t930;
t580 = -t1015 * t622 + t922;
t579 = qJ(2) * t629 - t1015 * t621 + t964;
t578 = -qJ(2) * t594 - t915;
t577 = -t1015 * t594 + t923;
t576 = qJ(2) * t596 - t1015 * t593 + t965;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t878, 0, -t879, 0, -t947, -t946, -t939, -pkin(5) * t939, 0, -t878, t879, 0, 0, 0, t940, t947, t946, pkin(5) * t940 + (-pkin(1) * t909 + qJ(2) * t912) * g(3), t845 * t909 + t953, t822 * t909 + t881 * t912, t834 * t909 + t897 * t912, t844 * t909 - t953, t832 * t909 - t912 * t975, qJDD(3) * t912 - t871 * t909, t912 * t762 - t909 * t743 - pkin(5) * (-t833 * t912 + t873 * t909), t912 * t763 - t909 * t742 - pkin(5) * (-t835 * t912 + t876 * t909), -pkin(2) * t993 + t909 * t767 - pkin(5) * (-t880 * t909 + t993), t912 * t714 - t909 * t695 - pkin(5) * (-t779 * t912 - t843 * t909), t759 * t909 + t793 * t912, t729 * t909 + t748 * t912, t731 * t909 + t771 * t912, t758 * t909 - t791 * t912, t733 * t909 + t773 * t912, t782 * t909 + t798 * t912, t912 * t634 - t909 * t619 - pkin(5) * (-t725 * t912 + t764 * t909), t912 * t648 - t909 * t624 - pkin(5) * (-t732 * t912 + t772 * t909), t912 * t620 - t909 * t616 - pkin(5) * (-t704 * t912 + t749 * t909), t912 * t606 - t909 * t599 - pkin(5) * (-t655 * t912 + t667 * t909), t652 * t909 + t670 * t912, t625 * t909 + t628 * t912, t642 * t909 + t674 * t912, t651 * t909 + t669 * t912, t643 * t909 + t675 * t912, t686 * t909 + t690 * t912, t912 * t591 - t909 * t585 - pkin(5) * (-t632 * t912 + t658 * t909), t912 * t592 - t909 * t587 - pkin(5) * (-t640 * t912 + t664 * t909), t912 * t581 - t909 * t580 - pkin(5) * (-t621 * t912 + t629 * t909), t912 * t578 - t909 * t577 - pkin(5) * (-t593 * t912 + t596 * t909); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t879, 0, t878, 0, t946, -t947, t956, pkin(5) * t956, 0, -t879, -t878, 0, 0, 0, t957, -t946, t947, pkin(5) * t957 + (pkin(1) * t912 + qJ(2) * t909) * g(3), -t845 * t912 + t954, -t822 * t912 + t881 * t909, -t834 * t912 + t897 * t909, -t844 * t912 - t954, -t832 * t912 - t909 * t975, qJDD(3) * t909 + t871 * t912, t909 * t762 + t912 * t743 + pkin(5) * (t833 * t909 + t873 * t912), t909 * t763 + t912 * t742 + pkin(5) * (t835 * t909 + t876 * t912), -pkin(2) * t994 - t912 * t767 + pkin(5) * (-t880 * t912 - t994), t909 * t714 + t912 * t695 + pkin(5) * (t779 * t909 - t843 * t912), -t759 * t912 + t793 * t909, -t729 * t912 + t748 * t909, -t731 * t912 + t771 * t909, -t758 * t912 - t791 * t909, -t733 * t912 + t773 * t909, -t782 * t912 + t798 * t909, t909 * t634 + t912 * t619 + pkin(5) * (t725 * t909 + t764 * t912), t909 * t648 + t912 * t624 + pkin(5) * (t732 * t909 + t772 * t912), t909 * t620 + t912 * t616 + pkin(5) * (t704 * t909 + t749 * t912), t909 * t606 + t912 * t599 + pkin(5) * (t655 * t909 + t667 * t912), -t652 * t912 + t670 * t909, -t625 * t912 + t628 * t909, -t642 * t912 + t674 * t909, -t651 * t912 + t669 * t909, -t643 * t912 + t675 * t909, -t686 * t912 + t690 * t909, t909 * t591 + t912 * t585 + pkin(5) * (t632 * t909 + t658 * t912), t909 * t592 + t912 * t587 + pkin(5) * (t640 * t909 + t664 * t912), t909 * t581 + t912 * t580 + pkin(5) * (t621 * t909 + t629 * t912), t909 * t578 + t912 * t577 + pkin(5) * (t593 * t909 + t596 * t912); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t884, t885, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t866, t863, t805, -t838, t823, t839, t831, t836, 0, t740, t741, t739, t694, t761, t730, t734, t760, t736, t783, t618, t623, t615, t598, t654, t626, t644, t653, t645, t687, t584, t586, t579, t576; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t914, 0, 0, -g(3), -t884, 0, 0, -qJDD(1), t914, 0, 0, 0, -t854, 0, g(3), qJ(2) * g(3), t891, t881, t897, -t891, -t975, qJDD(3), t762, t763, -t1012, t714, t793, t748, t771, -t791, t773, t798, t634, t648, t620, t606, t670, t628, t674, t669, t675, t690, t591, t592, t581, t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t914, 0, qJDD(1), 0, g(3), 0, -t885, 0, 0, -t914, -qJDD(1), 0, 0, 0, -t851, -g(3), 0, pkin(1) * g(3), -t845, -t822, -t834, -t844, -t832, t871, t743, t742, -t767, t695, -t759, -t729, -t731, -t758, -t733, -t782, t619, t624, t616, t599, -t652, -t625, -t642, -t651, -t643, -t686, t585, t587, t580, t577; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t884, t885, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t866, t863, t805, -t838, t823, t839, t831, t836, 0, t740, t741, t739, t694, t761, t730, t734, t760, t736, t783, t618, t623, t615, t598, t654, t626, t644, t653, t645, t687, t584, t586, t579, t576; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t854, -t851, 0, -t838, t823, t839, t831, t836, 0, -pkin(6) * t833 - t996, -pkin(6) * t835 - t828, pkin(6) * t877 - t779, -pkin(6) * t779, t761, t730, t734, t760, t736, t783, -pkin(6) * t725 + t961, -pkin(6) * t732 + t960, -pkin(6) * t704 + t983, -pkin(6) * t655 - t1008 * t667 + t662, t654, t626, t644, t653, t645, t687, -pkin(6) * t632 + t963, -pkin(6) * t640 + t962, -pkin(6) * t621 + t964, -pkin(6) * t593 + t965; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t914, 0, 0, 0, t854, 0, -g(3), 0, -t891, -t881, -t897, t891, t975, -qJDD(3), t925, t935, t1012, -t1014, -t793, -t748, -t771, t791, -t773, -t798, t938, t937, t927, t948, -t670, -t628, -t674, -t669, -t675, -t690, t929, t928, t930, t915; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t914, qJDD(1), 0, 0, 0, t851, g(3), 0, 0, t845, t822, t834, t844, t832, -t871, pkin(6) * t837 - t944, pkin(6) * t840 - t943, t767, pkin(6) * t780 + t1013, t759, t729, t731, t758, t733, t782, pkin(6) * t726 - t919, pkin(6) * t735 - t918, pkin(6) * t705 + t1016, pkin(6) * t656 - t1021, t652, t625, t642, t651, t643, t686, pkin(6) * t633 - t921, pkin(6) * t641 - t920, pkin(6) * t622 - t922, pkin(6) * t594 - t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t875, -t873, t883, t967, t886, -t967, 0, -t843, -t825, 0, t794, t750, t774, t792, t776, t799, t699, t728, t650, -qJ(4) * t667, t672, t630, t676, t671, t677, t691, t605, t610, t589, t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t966, t876, t888, -t874, t882, -t966, t843, 0, -t826, 0, -t827, -t824, -t810, t827, -t808, -t874, t685, t688, -pkin(3) * t749, -pkin(3) * t667, -t769, -t768, -t724, t769, t720, -t870, t611, t614, t617, t590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t891, t881, t897, -t891, -t975, qJDD(3), t825, t826, 0, 0, t793, t748, t771, -t791, t773, t798, t969, t970, t949, t982, t670, t628, t674, t669, t675, t690, t951, t950, t952, t931; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t846, t807, t1018, t852, t848, -t852, 0, -t788, t702, 0, t709, t681, t712, t707, t713, t746, t661, t678, t603, -pkin(7) * t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t853, t809, t849, -t955, t812, -t853, t788, 0, t703, 0, t708, t679, t710, t706, t711, t745, t639, t647, t601, t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t827, t824, t810, -t827, t808, t874, -t702, -t703, 0, 0, t769, t768, t724, -t769, -t720, t870, t932, t917, t1009, t1010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t753, -t719, t1020, t802, t796, -t802, 0, -t727, t637, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t988, t1019, t797, t752, t755, -t988, t727, 0, t638, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t769, t768, t724, -t769, -t720, t870, -t637, -t638, 0, 0;];
m_new_reg = t1;
