% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPPPR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d5,theta2,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:45
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPPPR4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPPR4_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPPR4_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPPPR4_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPPPR4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPPPR4_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:45:25
% EndTime: 2019-12-31 17:45:32
% DurationCPUTime: 8.11s
% Computational Cost: add. (20197->451), mult. (40783->561), div. (0->0), fcn. (24958->8), ass. (0->293)
t734 = sin(pkin(7));
t743 = qJD(1) ^ 2;
t736 = cos(pkin(7));
t796 = t736 * qJDD(1);
t699 = t734 * t743 - t796;
t731 = g(3) - qJDD(2);
t660 = qJ(2) * t699 - t734 * t731;
t739 = sin(qJ(1));
t741 = cos(qJ(1));
t797 = t734 * qJDD(1);
t698 = t736 * t743 + t797;
t784 = t741 * t698 - t739 * t699;
t789 = -qJ(2) * t698 + t736 * t731;
t868 = -pkin(5) * t784 + t739 * t660 + t741 * t789;
t738 = sin(qJ(5));
t733 = sin(pkin(8));
t735 = cos(pkin(8));
t740 = cos(qJ(5));
t770 = t733 * t740 + t735 * t738;
t676 = t770 * qJD(1);
t678 = (-t733 * t738 + t735 * t740) * qJD(1);
t833 = t678 * t676;
t862 = qJDD(5) - t833;
t870 = t738 * t862;
t869 = t740 * t862;
t732 = qJDD(1) * pkin(2);
t704 = t739 * g(1) - t741 * g(2);
t693 = qJDD(1) * pkin(1) + t704;
t705 = t741 * g(1) + t739 * g(2);
t694 = -t743 * pkin(1) - t705;
t637 = -t736 * t693 + t734 * t694;
t775 = qJDD(3) + t637;
t623 = -t743 * qJ(3) - t732 + t775;
t747 = -0.2e1 * qJD(1) * qJD(4) + t623;
t865 = -qJDD(1) * qJ(4) + t747;
t638 = t734 * t693 + t736 * t694;
t785 = t734 * t637 + t736 * t638;
t584 = t736 * t637 - t734 * t638;
t819 = t739 * t584;
t864 = t741 * t785 + t819;
t812 = t741 * t584;
t863 = -t739 * t785 + t812;
t782 = t739 * t698 + t741 * t699;
t842 = pkin(5) * t782 + t741 * t660 - t739 * t789;
t757 = 0.2e1 * qJD(3) * qJD(1) + t638;
t748 = -t743 * pkin(2) + t757;
t802 = qJDD(1) * qJ(3);
t619 = t748 + t802;
t564 = t734 * t619 - t736 * t623;
t786 = t736 * t619 + t734 * t623;
t859 = -t739 * t564 + t741 * t786;
t858 = t741 * t564 + t739 * t786;
t727 = t733 ^ 2;
t728 = t735 ^ 2;
t805 = t727 + t728;
t849 = t805 * t743;
t689 = t733 * t849;
t651 = t736 * t689 + t733 * t797;
t654 = -t734 * t689 + t733 * t796;
t857 = t741 * t651 + t739 * t654;
t856 = t739 * t651 - t741 * t654;
t776 = t865 * t735;
t596 = -t733 * t731 - t776;
t825 = t735 * t731;
t597 = t865 * t733 - t825;
t549 = -t735 * t596 + t733 * t597;
t848 = t770 * qJDD(1);
t847 = -t743 * qJ(4) + qJDD(4);
t672 = t676 ^ 2;
t673 = t678 ^ 2;
t841 = pkin(1) * t698;
t840 = pkin(1) * t699;
t839 = pkin(3) * t549;
t614 = t619 + t847;
t838 = pkin(3) * t614;
t695 = t805 * qJDD(1);
t837 = pkin(3) * t695;
t836 = -pkin(2) - qJ(4);
t834 = qJ(4) * t549;
t832 = t727 * t743;
t831 = t728 * t743;
t721 = t735 * qJDD(1);
t824 = t735 * t743;
t575 = -pkin(6) * t721 + (-pkin(4) * t824 + t731) * t733 + t776;
t581 = -pkin(4) * t832 - t825 + ((-pkin(6) - qJ(4)) * qJDD(1) + t747) * t733;
t530 = -t740 * t575 + t738 * t581;
t531 = t738 * t575 + t740 * t581;
t493 = -t740 * t530 + t738 * t531;
t830 = t733 * t493;
t828 = t733 * t614;
t827 = t734 * t695;
t826 = t735 * t493;
t609 = t735 * t614;
t823 = t736 * t695;
t587 = (pkin(4) * t733 + qJ(3)) * qJDD(1) + t748 + (-t832 - t831) * pkin(6) + t847;
t821 = t738 * t587;
t629 = qJDD(5) + t833;
t820 = t738 * t629;
t814 = t740 * t587;
t813 = t740 * t629;
t807 = -pkin(2) * t623 + qJ(3) * t619;
t806 = t727 - t728;
t804 = t676 * qJD(5);
t803 = t678 * qJD(5);
t800 = t727 * qJDD(1);
t799 = t728 * qJDD(1);
t798 = t733 * qJDD(1);
t708 = t733 * t824;
t794 = t734 * t833;
t793 = t736 * t833;
t792 = t735 * t796;
t494 = t738 * t530 + t740 * t531;
t481 = t733 * t494 + t826;
t492 = pkin(4) * t493;
t791 = -pkin(3) * t481 - t492;
t675 = t740 * t721 - t738 * t798;
t576 = -t740 * t675 - t738 * t848;
t578 = t738 * t675 - t740 * t848;
t526 = t735 * t576 + t733 * t578;
t572 = pkin(4) * t576;
t790 = -pkin(3) * t526 - t572;
t688 = t735 * t849;
t787 = qJ(4) * t688 + t609;
t780 = -t739 * t704 - t741 * t705;
t703 = t741 * qJDD(1) - t739 * t743;
t779 = -pkin(5) * t703 - t739 * g(3);
t778 = -pkin(2) * t549 + qJ(3) * t614 - t834;
t742 = qJD(5) ^ 2;
t627 = -t742 - t672;
t570 = t738 * t627 + t869;
t777 = pkin(4) * t570 - t530;
t774 = qJ(4) * t689 + t828;
t550 = t733 * t596 + t735 * t597;
t657 = t734 * t708 - t733 * t792;
t658 = t698 * t735 * t733;
t773 = t741 * t657 + t739 * t658;
t772 = t739 * t657 - t741 * t658;
t771 = t741 * t704 - t739 * t705;
t769 = pkin(2) * t688 + qJ(3) * t721 + t787;
t768 = -0.2e1 * t732 + t775;
t610 = -t672 - t673;
t487 = -pkin(4) * t610 + pkin(6) * t578 + t494;
t490 = -pkin(6) * t576 - t493;
t767 = -qJ(4) * t526 - t733 * t487 + t735 * t490;
t571 = t740 * t627 - t870;
t631 = t848 + 0.2e1 * t803;
t508 = -pkin(4) * t631 + pkin(6) * t571 - t814;
t522 = t735 * t570 + t733 * t571;
t537 = -pkin(6) * t570 + t821;
t766 = -qJ(4) * t522 - t733 * t508 + t735 * t537;
t667 = -t673 - t742;
t595 = -t738 * t667 - t813;
t633 = -0.2e1 * t804 + t675;
t516 = -pkin(4) * t633 + pkin(6) * t595 + t821;
t592 = t740 * t667 - t820;
t541 = -pkin(6) * t592 + t814;
t547 = t735 * t592 + t733 * t595;
t765 = -qJ(4) * t547 - t733 * t516 + t735 * t541;
t764 = qJ(4) * t695 - t549;
t763 = pkin(4) * t592 - t531;
t762 = -pkin(3) * t522 - t777;
t761 = pkin(2) * t689 + qJ(3) * t798 + t774;
t760 = pkin(3) * t610 - t735 * t487 - t733 * t490;
t759 = pkin(3) * t631 - t735 * t508 - t733 * t537;
t758 = pkin(3) * t633 - t735 * t516 - t733 * t541;
t491 = -pkin(4) * t587 + pkin(6) * t494;
t756 = pkin(3) * t587 + pkin(6) * t830 - t735 * t491;
t755 = -pkin(2) * t526 + qJ(3) * t610 + t767;
t754 = -pkin(2) * t522 + qJ(3) * t631 + t766;
t753 = -pkin(2) * t547 + qJ(3) * t633 + t765;
t752 = pkin(2) * t695 - qJ(3) * t849 + t764;
t751 = -pkin(6) * t826 - qJ(4) * t481 - t733 * t491;
t750 = -pkin(3) * t547 - t763;
t749 = 0.2e1 * t802 + t757;
t746 = -pkin(2) * t481 + qJ(3) * t587 + t751;
t707 = t733 * t721;
t706 = -0.2e1 * t707;
t702 = t739 * qJDD(1) + t741 * t743;
t701 = t806 * t743;
t696 = t806 * qJDD(1);
t671 = -pkin(5) * t702 + t741 * g(3);
t666 = -t673 + t742;
t665 = t672 - t742;
t656 = -t734 * t688 + t792;
t653 = t736 * t688 + t734 * t721;
t642 = -t736 * t849 - t827;
t641 = -t734 * t696 - t736 * t701;
t640 = -t734 * t849 + t823;
t639 = t736 * t696 - t734 * t701;
t635 = t673 - t672;
t634 = -t804 + t675;
t632 = -t848 - t803;
t621 = (-t676 * t740 + t678 * t738) * qJD(5);
t620 = (-t676 * t738 - t678 * t740) * qJD(5);
t617 = -t637 - t840;
t616 = -t638 - t841;
t611 = t768 + t840;
t608 = t749 + t841;
t605 = -pkin(3) * t798 - t609;
t604 = -pkin(3) * t721 + t828;
t603 = t740 * t634 - t738 * t803;
t602 = t738 * t634 + t740 * t803;
t601 = -t738 * t632 + t740 * t804;
t600 = t740 * t632 + t738 * t804;
t599 = -t739 * t653 + t741 * t656;
t598 = t741 * t653 + t739 * t656;
t594 = -t738 * t666 + t869;
t593 = t740 * t665 - t820;
t591 = t740 * t666 + t870;
t590 = t738 * t665 + t813;
t580 = pkin(1) * t584;
t579 = -t740 * t631 - t738 * t633;
t577 = -t738 * t631 + t740 * t633;
t574 = pkin(3) * t688 + t597;
t573 = pkin(3) * t689 + t596;
t567 = pkin(1) * t731 + qJ(2) * t785;
t562 = t735 * t620 + t733 * t621;
t561 = -t733 * t620 + t735 * t621;
t560 = t736 * qJDD(5) + t734 * t562;
t559 = t734 * qJDD(5) - t736 * t562;
t558 = -qJ(2) * t564 + (-pkin(2) * t734 + qJ(3) * t736) * t731;
t557 = qJ(2) * t786 + (pkin(2) * t736 + qJ(3) * t734 + pkin(1)) * t731;
t556 = pkin(1) * t653 + t769;
t555 = pkin(1) * t651 + t761;
t554 = t735 * t602 + t733 * t603;
t553 = -t733 * t602 + t735 * t603;
t552 = t735 * t600 + t733 * t601;
t551 = -t733 * t600 + t735 * t601;
t548 = -t733 * t592 + t735 * t595;
t546 = t735 * t591 + t733 * t594;
t545 = t735 * t590 + t733 * t593;
t544 = -t733 * t591 + t735 * t594;
t543 = -t733 * t590 + t735 * t593;
t538 = pkin(3) * t849 + t550;
t535 = t734 * t546 + t736 * t675;
t534 = t734 * t545 - t736 * t848;
t533 = -t736 * t546 + t734 * t675;
t532 = -t736 * t545 - t734 * t848;
t528 = -t733 * t576 + t735 * t578;
t527 = t735 * t577 + t733 * t579;
t525 = -t733 * t577 + t735 * t579;
t523 = -t733 * t570 + t735 * t571;
t520 = t734 * t554 + t793;
t519 = t734 * t552 - t793;
t518 = -t736 * t554 + t794;
t517 = -t736 * t552 - t794;
t515 = -qJ(2) * t651 - t736 * t573 + t734 * t605;
t514 = -qJ(2) * t653 - t736 * t574 + t734 * t604;
t513 = qJ(2) * t654 - t734 * t573 - t736 * t605;
t512 = qJ(2) * t656 - t734 * t574 - t736 * t604;
t511 = t734 * t547 + t736 * t633;
t510 = -t736 * t547 + t734 * t633;
t509 = pkin(1) * t564 + t807;
t507 = t734 * t549 + t736 * t614;
t506 = -t736 * t549 + t734 * t614;
t505 = -pkin(3) * t823 - qJ(2) * t640 + t734 * t538;
t504 = -pkin(3) * t827 + qJ(2) * t642 - t736 * t538;
t503 = pkin(1) * t640 + t752;
t502 = t734 * t527 + t736 * t635;
t501 = -t736 * t527 + t734 * t635;
t500 = t734 * t522 + t736 * t631;
t499 = -t736 * t522 + t734 * t631;
t498 = t734 * t526 + t736 * t610;
t497 = -t736 * t526 + t734 * t610;
t496 = -qJ(3) * t550 + t839;
t495 = t836 * t550 + t838;
t488 = -qJ(3) * t528 - t790;
t486 = -qJ(3) * t548 - t750;
t485 = pkin(1) * t506 + t778;
t484 = -qJ(3) * t523 - t762;
t483 = t836 * t548 + t758;
t482 = t735 * t494 - t830;
t479 = t836 * t523 + t759;
t478 = t734 * t481 + t736 * t587;
t477 = -t736 * t481 + t734 * t587;
t476 = -qJ(2) * t506 - t734 * t495 + t736 * t496;
t475 = pkin(1) * t510 + t753;
t474 = -pkin(1) * t550 + qJ(2) * t507 + t736 * t495 + t734 * t496;
t473 = pkin(1) * t499 + t754;
t472 = t836 * t528 + t760;
t471 = -qJ(2) * t510 - t734 * t483 + t736 * t486;
t470 = -pkin(1) * t548 + qJ(2) * t511 + t736 * t483 + t734 * t486;
t469 = pkin(1) * t497 + t755;
t468 = -qJ(2) * t499 - t734 * t479 + t736 * t484;
t467 = -qJ(3) * t482 - t791;
t466 = -pkin(1) * t523 + qJ(2) * t500 + t736 * t479 + t734 * t484;
t465 = -qJ(2) * t497 - t734 * t472 + t736 * t488;
t464 = -pkin(1) * t528 + qJ(2) * t498 + t736 * t472 + t734 * t488;
t463 = t836 * t482 + t756;
t462 = pkin(1) * t477 + t746;
t461 = -qJ(2) * t477 - t734 * t463 + t736 * t467;
t460 = -pkin(1) * t482 + qJ(2) * t478 + t736 * t463 + t734 * t467;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t703, 0, -t702, 0, t779, -t671, -t771, -pkin(5) * t771, 0, 0, -t782, 0, -t784, 0, t842, -t868, t863, pkin(5) * t863 + qJ(2) * t812 - t739 * t567, 0, t782, t784, 0, 0, 0, -t858, -t842, t868, -pkin(5) * t858 - t739 * t557 + t741 * t558, -t772, -t739 * t639 + t741 * t641, t599, t772, t856, 0, -pkin(5) * t857 - t739 * t513 + t741 * t515, -pkin(5) * t598 - t739 * t512 + t741 * t514, t741 * t505 - t739 * t504 - pkin(5) * (t741 * t640 + t739 * t642), t741 * t476 - t739 * t474 - pkin(5) * (t741 * t506 + t739 * t507), -t739 * t518 + t741 * t520, -t739 * t501 + t741 * t502, -t739 * t533 + t741 * t535, -t739 * t517 + t741 * t519, -t739 * t532 + t741 * t534, -t739 * t559 + t741 * t560, t741 * t468 - t739 * t466 - pkin(5) * (t741 * t499 + t739 * t500), t741 * t471 - t739 * t470 - pkin(5) * (t741 * t510 + t739 * t511), t741 * t465 - t739 * t464 - pkin(5) * (t741 * t497 + t739 * t498), t741 * t461 - t739 * t460 - pkin(5) * (t741 * t477 + t739 * t478); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t702, 0, t703, 0, t671, t779, t780, pkin(5) * t780, 0, 0, t784, 0, -t782, 0, t868, t842, t864, pkin(5) * t864 + qJ(2) * t819 + t741 * t567, 0, -t784, t782, 0, 0, 0, t859, -t868, -t842, pkin(5) * t859 + t741 * t557 + t739 * t558, t773, t741 * t639 + t739 * t641, t598, -t773, -t857, 0, -pkin(5) * t856 + t741 * t513 + t739 * t515, pkin(5) * t599 + t741 * t512 + t739 * t514, t739 * t505 + t741 * t504 + pkin(5) * (-t739 * t640 + t741 * t642), t739 * t476 + t741 * t474 + pkin(5) * (-t739 * t506 + t741 * t507), t741 * t518 + t739 * t520, t741 * t501 + t739 * t502, t741 * t533 + t739 * t535, t741 * t517 + t739 * t519, t741 * t532 + t739 * t534, t741 * t559 + t739 * t560, t739 * t468 + t741 * t466 + pkin(5) * (-t739 * t499 + t741 * t500), t739 * t471 + t741 * t470 + pkin(5) * (-t739 * t510 + t741 * t511), t739 * t465 + t741 * t464 + pkin(5) * (-t739 * t497 + t741 * t498), t739 * t461 + t741 * t460 + pkin(5) * (-t739 * t477 + t741 * t478); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t704, t705, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t617, t616, 0, -t580, qJDD(1), 0, 0, 0, 0, 0, 0, t611, t608, t509, t799, t706, 0, t800, 0, 0, t555, t556, t503, t485, t553, t525, t544, t551, t543, t561, t473, t475, t469, t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t743, 0, 0, -g(3), -t704, 0, 0, 0, -t699, 0, -t698, 0, t660, -t789, t584, qJ(2) * t584, 0, t699, t698, 0, 0, 0, -t564, -t660, t789, t558, t658, t641, t656, -t658, -t654, 0, t515, t514, t505, t476, t520, t502, t535, t519, t534, t560, t468, t471, t465, t461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t743, 0, qJDD(1), 0, g(3), 0, -t705, 0, 0, 0, t698, 0, -t699, 0, t789, t660, t785, t567, 0, -t698, t699, 0, 0, 0, t786, -t789, -t660, t557, t657, t639, t653, -t657, -t651, 0, t513, t512, t504, t474, t518, t501, t533, t517, t532, t559, t466, t470, t464, t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t704, t705, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t617, t616, 0, -t580, qJDD(1), 0, 0, 0, 0, 0, 0, t611, t608, t509, t799, t706, 0, t800, 0, 0, t555, t556, t503, t485, t553, t525, t544, t551, t543, t561, t473, t475, t469, t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t743, 0, 0, -t731, t637, 0, 0, -qJDD(1), t743, 0, 0, 0, t623, 0, t731, qJ(3) * t731, t708, -t701, t721, -t708, -t798, 0, -t573, -t574, -t837, t496, t833, t635, t675, -t833, -t848, qJDD(5), t484, t486, t488, t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t743, 0, qJDD(1), 0, t731, 0, t638, 0, 0, -t743, -qJDD(1), 0, 0, 0, t619, -t731, 0, pkin(2) * t731, -t707, t696, t688, t707, -t689, 0, -t605, -t604, -t538, t495, -t554, -t527, -t546, -t552, -t545, -t562, t479, t483, t472, t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t637, -t638, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t768, t749, t807, t799, t706, 0, t800, 0, 0, t761, t769, t752, t778, t553, t525, t544, t551, t543, t561, t754, t753, t755, t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t623, t619, 0, t799, t706, 0, t800, 0, 0, t774, t787, t764, -t834, t553, t525, t544, t551, t543, t561, t766, t765, t767, t751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t743, 0, 0, 0, -t623, 0, -t731, 0, -t708, t701, -t721, t708, t798, 0, t573, t574, t837, -t839, -t833, -t635, -t675, t833, t848, -qJDD(5), t762, t750, t790, t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t743, qJDD(1), 0, 0, 0, -t619, t731, 0, 0, t707, -t696, -t688, -t707, t689, 0, t605, t604, t538, qJ(4) * t550 - t838, t554, t527, t546, t552, t545, t562, qJ(4) * t523 - t759, qJ(4) * t548 - t758, qJ(4) * t528 - t760, qJ(4) * t482 - t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t721, -t798, -t708, 0, t832, 0, 0, t614, t596, 0, t603, t579, t594, t601, t593, t621, t537, t541, t490, -pkin(6) * t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t721, -t831, -t798, t708, 0, -t614, 0, t597, 0, t602, t577, t591, t600, t590, t620, t508, t516, t487, t491; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t708, -t701, t721, -t708, -t798, 0, -t596, -t597, 0, 0, t833, t635, t675, -t833, -t848, qJDD(5), t777, t763, t572, t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t634, -t631, t862, t804, t665, -t804, 0, t587, t530, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t803, t633, t666, t632, t629, -t803, -t587, 0, t531, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t833, t635, t675, -t833, -t848, qJDD(5), -t530, -t531, 0, 0;];
m_new_reg = t1;
