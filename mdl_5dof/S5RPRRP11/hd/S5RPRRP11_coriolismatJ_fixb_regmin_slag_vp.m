% Calculate minimal parameter regressor of coriolis matrix for
% S5RPRRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:55
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP11_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP11_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP11_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP11_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:54:35
% EndTime: 2019-12-31 18:54:44
% DurationCPUTime: 3.53s
% Computational Cost: add. (4157->320), mult. (8319->421), div. (0->0), fcn. (8917->6), ass. (0->260)
t192 = cos(qJ(4));
t188 = sin(pkin(8));
t189 = cos(pkin(8));
t191 = sin(qJ(3));
t333 = cos(qJ(3));
t169 = t191 * t188 - t333 * t189;
t165 = t169 ^ 2;
t245 = t333 * t188;
t287 = t191 * t189;
t171 = t245 + t287;
t166 = t171 ^ 2;
t255 = -t166 - t165;
t347 = t255 * t192;
t352 = qJD(1) * t347;
t190 = sin(qJ(4));
t348 = t255 * t190;
t351 = qJD(1) * t348;
t350 = qJD(2) * t347;
t349 = qJD(2) * t348;
t346 = 0.2e1 * t190;
t254 = t166 - t165;
t270 = qJD(4) * t190;
t91 = t190 * t169;
t279 = t91 * qJD(1);
t345 = t279 + t270;
t264 = t169 * qJD(1);
t344 = -t264 - qJD(4);
t182 = -t189 * pkin(2) - pkin(1);
t327 = t171 * pkin(7);
t222 = t169 * pkin(3) - t327;
t199 = t182 + t222;
t325 = pkin(6) + qJ(2);
t174 = t325 * t189;
t232 = t325 * t188;
t118 = t333 * t174 - t191 * t232;
t284 = t192 * t118;
t60 = t190 * t199 + t284;
t343 = t60 / 0.2e1;
t117 = t191 * t174 + t333 * t232;
t92 = t190 * t171;
t96 = t192 * t171;
t221 = pkin(4) * t92 - qJ(5) * t96;
t65 = t117 + t221;
t342 = -t65 / 0.2e1;
t112 = t117 * t192;
t108 = t112 / 0.2e1;
t330 = pkin(7) * t169;
t332 = pkin(3) * t171;
t113 = t330 + t332;
t341 = -t113 / 0.2e1;
t340 = t171 / 0.2e1;
t289 = t190 * qJ(5);
t326 = t192 * pkin(4);
t219 = t289 + t326;
t173 = -pkin(3) - t219;
t339 = t173 / 0.2e1;
t186 = t190 ^ 2;
t338 = -t186 / 0.2e1;
t187 = t192 ^ 2;
t337 = -t187 / 0.2e1;
t336 = -t190 / 0.2e1;
t335 = -t192 / 0.2e1;
t334 = t192 / 0.2e1;
t331 = pkin(4) * t190;
t329 = t169 * pkin(4);
t328 = t171 * pkin(4);
t293 = t169 * qJ(5);
t43 = t60 + t293;
t288 = t190 * t118;
t59 = -t192 * t199 + t288;
t44 = t59 - t329;
t163 = t171 * qJ(5);
t105 = t190 * t113;
t276 = t105 - t112;
t49 = t163 + t276;
t285 = t192 * t113;
t295 = t117 * t190;
t50 = -t285 - t295 - t328;
t286 = t192 * qJ(5);
t175 = t286 - t331;
t66 = t175 * t169 + t118;
t3 = t43 * t49 + t44 * t50 + t65 * t66;
t324 = t3 * qJD(1);
t88 = t219 * t171;
t4 = -t43 * t59 + t44 * t60 + t65 * t88;
t323 = t4 * qJD(1);
t322 = t43 * t169;
t321 = t43 * t192;
t320 = t44 * t190;
t95 = t192 * t169;
t5 = t44 * t95 - t50 * t96 + (t171 * t49 - t322) * t190;
t319 = t5 * qJD(1);
t318 = t59 * t169;
t6 = -t60 * t96 + (t321 + (t44 - t59) * t190) * t171;
t317 = t6 * qJD(1);
t316 = t60 * t169;
t315 = t65 * t190;
t314 = t65 * t192;
t313 = t66 * t190;
t312 = t66 * t192;
t249 = -t43 / 0.2e1 + t343;
t208 = t293 / 0.2e1 - t249;
t248 = -t59 / 0.2e1 + t44 / 0.2e1;
t210 = t329 / 0.2e1 - t248;
t7 = t208 * t190 + t210 * t192;
t311 = t7 * qJD(1);
t8 = t210 * t190 - t208 * t192;
t310 = t8 * qJD(1);
t309 = -t112 / 0.2e1 + t105 / 0.2e1;
t308 = t108 - t105 / 0.2e1;
t235 = t171 * t339;
t307 = t192 * t235 + t315 / 0.2e1;
t13 = t65 * t171 + (-t320 - t321) * t169;
t306 = qJD(1) * t13;
t23 = -t318 + (-t88 * t192 + t315) * t171;
t305 = qJD(1) * t23;
t26 = -t65 * t96 + t322;
t304 = qJD(1) * t26;
t32 = t117 * t96 - t316;
t303 = qJD(1) * t32;
t70 = t254 * t190;
t302 = qJD(1) * t70;
t72 = t254 * t192;
t300 = qJD(1) * t72;
t298 = qJD(2) * t91;
t297 = qJD(4) * t59;
t11 = (t43 - t312) * t171 + (t49 + t314) * t169;
t296 = t11 * qJD(1);
t12 = (-t44 + t313) * t171 + (-t50 - t315) * t169;
t294 = t12 * qJD(1);
t292 = t175 * t190;
t18 = t113 * t95 + (-t59 + t288) * t171;
t291 = t18 * qJD(1);
t19 = (-t60 + t284) * t171 + (-t276 - t112) * t169;
t290 = t19 * qJD(1);
t198 = (t337 + t338) * t330 + t235;
t209 = t50 * t334 + t49 * t336;
t20 = t198 + t209;
t283 = t20 * qJD(1);
t22 = -t316 + (t88 * t190 + t314) * t171;
t282 = t22 * qJD(1);
t31 = -t117 * t92 + t318;
t281 = t31 * qJD(1);
t280 = t254 * qJD(1);
t278 = t92 * qJD(1);
t87 = t95 * qJD(1);
t277 = t96 * qJD(1);
t275 = t171 * t338 + t187 * t340;
t176 = t188 ^ 2 + t189 ^ 2;
t179 = t187 - t186;
t273 = qJD(2) * t171;
t272 = qJD(3) * t190;
t271 = qJD(3) * t192;
t269 = qJD(4) * t192;
t154 = t186 * t169;
t155 = t187 * t169;
t101 = t154 + t155;
t268 = t101 * qJD(1);
t164 = t245 / 0.2e1 + t287 / 0.2e1;
t265 = t164 * qJD(1);
t263 = t169 * qJD(2);
t161 = t169 * qJD(3);
t262 = t169 * qJD(4);
t159 = t169 * qJD(5);
t261 = t171 * qJD(1);
t260 = t171 * qJD(3);
t172 = t176 * qJ(2);
t259 = t172 * qJD(1);
t258 = t176 * qJD(1);
t257 = t190 * qJD(5);
t256 = t192 * qJD(5);
t253 = pkin(7) * t270;
t252 = pkin(7) * t269;
t251 = -t330 / 0.2e1;
t250 = t330 / 0.2e1;
t156 = t328 / 0.2e1;
t233 = -t96 / 0.2e1;
t247 = t173 * t233 + t192 * t250 - t315 / 0.2e1;
t100 = t285 / 0.2e1;
t106 = t295 / 0.2e1;
t246 = t100 + t106 + t156;
t244 = t190 * t262;
t243 = t192 * t262;
t242 = t169 * t261;
t241 = t169 * t260;
t240 = t190 * t269;
t239 = t190 * t261;
t238 = t171 * t257;
t180 = t190 * t271;
t237 = t190 * t256;
t236 = t192 * t261;
t151 = t192 * t260;
t234 = -t292 / 0.2e1;
t67 = t164 + t275;
t231 = t67 * qJD(1) + t180;
t89 = (t186 / 0.2e1 + t337) * t171;
t230 = t89 * qJD(1) - t180;
t126 = t192 * t166 * t190 * qJD(1);
t229 = qJD(3) * t89 + t126;
t228 = qJD(1) * t182 + qJD(2);
t226 = t190 * t236;
t225 = t190 * t151;
t224 = -t328 / 0.2e1 - t295 / 0.2e1;
t223 = -t88 / 0.2e1 + t251;
t220 = 0.2e1 * t225;
t218 = t169 * t173 + t327;
t217 = t50 * t190 + t49 * t192;
t121 = t173 * t192 - t292;
t194 = (t175 * t340 + t342) * t192 + (t235 + t223) * t190;
t17 = -t163 + t194 + t308;
t216 = -t17 * qJD(1) + t121 * qJD(3);
t122 = -t173 * t190 - t175 * t192;
t14 = (t234 - pkin(4) / 0.2e1) * t171 + (t341 + t223) * t192 + t224 + t307;
t215 = -t14 * qJD(1) + t122 * qJD(3);
t214 = t344 * t190;
t213 = t344 * t192;
t212 = -t175 * qJD(4) - t257;
t211 = -t49 * qJ(5) / 0.2e1 + t50 * pkin(4) / 0.2e1;
t136 = t192 * t251;
t29 = t136 + (-t332 / 0.2e1 + t341) * t192;
t207 = pkin(3) * t272 - t29 * qJD(1);
t195 = (t250 + t332 / 0.2e1) * t190 + t108;
t27 = t195 + t309;
t206 = pkin(3) * t271 - t27 * qJD(1);
t193 = (t249 * t190 + t248 * t192) * pkin(7) + t175 * t342 + t88 * t339;
t2 = t193 + t211;
t205 = t173 * t175 * qJD(3) - t2 * qJD(1);
t25 = t246 + t247;
t204 = -t25 * qJD(1) + t173 * t272;
t203 = t171 * t213;
t202 = qJD(4) * t164 + t242;
t102 = t179 * t166;
t201 = t102 * qJD(1) + t220;
t200 = -t179 * qJD(3) + 0.2e1 * t226;
t197 = -t219 * qJD(4) + t256;
t111 = t187 * t166 + t165;
t196 = t111 * qJD(1) + t225 + t262;
t153 = t164 * qJD(3);
t150 = t190 * t260;
t127 = t171 * t237;
t125 = t344 * qJ(5);
t123 = t186 * qJD(3) + t226;
t86 = t95 * qJD(4);
t82 = t91 * qJD(4);
t80 = t89 * qJD(4);
t75 = t269 + t87;
t68 = -t164 + t275;
t61 = -t95 * qJD(3) + t169 * t239;
t58 = t60 * qJD(4);
t41 = t171 * t214;
t30 = pkin(3) * t233 + t100 + 0.2e1 * t106 + t136;
t28 = t195 + t308;
t24 = -t285 / 0.2e1 + t224 + t247;
t21 = t198 - t209;
t16 = t163 + t194 + t309;
t15 = t171 * t234 + t223 * t192 + t156 + t246 + t307;
t10 = t59 * t335 + t43 * t336 + t190 * t343 + t44 * t334 + (t289 / 0.2e1 + t326 / 0.2e1) * t169;
t9 = t59 * t336 + t321 / 0.2e1 + t60 * t335 + t320 / 0.2e1 + (-t286 / 0.2e1 + t331 / 0.2e1) * t169;
t1 = t193 - t211;
t33 = [0, 0, 0, 0, 0, t176 * qJD(2), t172 * qJD(2), -t241, -t254 * qJD(3), 0, 0, 0, t182 * t260, -t182 * t161, -t166 * t240 - t187 * t241, -t102 * qJD(4) + t169 * t220, t72 * qJD(3) - t171 * t244, -t70 * qJD(3) - t171 * t243, t241, qJD(3) * t18 + qJD(4) * t32 - t349, qJD(3) * t19 + qJD(4) * t31 - t350, t12 * qJD(3) + t22 * qJD(4) - t166 * t237 - t349, -t5 * qJD(3) - t6 * qJD(4) - t169 * t238, qJD(3) * t11 + qJD(4) * t23 + qJD(5) * t111 + t350, qJD(2) * t13 + qJD(3) * t3 + qJD(4) * t4 + qJD(5) * t26; 0, 0, 0, 0, 0, t258, t259, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t351, -t352, -t351, 0, t352, qJD(3) * t21 + qJD(4) * t9 + t306; 0, 0, 0, 0, 0, 0, 0, -t242, -t280, -t161, -t260, 0, -t118 * qJD(3) + t182 * t261, t117 * qJD(3) - t182 * t264, -t80 + (-t187 * t261 - t180) * t169, (t154 - t155) * qJD(3) + (-qJD(4) + t264) * t96 * t346, t150 + t300, t151 - t302, t202, t291 + (t190 * t222 - t284) * qJD(3) + t30 * qJD(4), t290 + (t192 * t222 + t288) * qJD(3) + t28 * qJD(4), t294 + (-t190 * t218 - t312) * qJD(3) + t15 * qJD(4) + t68 * qJD(5), qJD(3) * t217 + t10 * qJD(4) - t319, t296 + (t192 * t218 - t313) * qJD(3) + t16 * qJD(4) + t127, t324 + t21 * qJD(2) + (pkin(7) * t217 + t66 * t173) * qJD(3) + t1 * qJD(4) + t24 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t229, -t201, t41, t203, t153, qJD(3) * t30 + t303 - t58, qJD(3) * t28 + t281 + t297, qJD(3) * t15 + t282 - t58, t10 * qJD(3) + qJD(4) * t221 - t238 - t317, qJD(3) * t16 + t159 - t297 + t305, t323 + t9 * qJD(2) + t1 * qJD(3) + (-pkin(4) * t60 - qJ(5) * t59) * qJD(4) + t43 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t68 - t126, t41, t196, qJD(3) * t24 + qJD(4) * t43 + t304; 0, 0, 0, 0, 0, -t258, -t259, 0, 0, 0, 0, 0, t260, -t161, 0, 0, 0, 0, 0, t151 - t82 + t351, -t92 * qJD(3) - t243 + t352, t96 * qJD(3) - t244 + t351, t101 * qJD(3), t150 + t86 - t352, -qJD(3) * t20 - qJD(4) * t8 + qJD(5) * t91 - t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, -t264, 0, 0, 0, 0, 0, t236, -t278, t277, t268, t239, -t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, t213, t214, 0, t75, -t212 - t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345; 0, 0, 0, 0, 0, 0, 0, t242, t280, 0, 0, 0, -t228 * t171, t228 * t169, t187 * t242 - t80, t203 * t346, t86 - t300, -t82 + t302, -t202, t29 * qJD(4) - t192 * t273 - t291, qJD(2) * t92 + qJD(4) * t27 - t290, -qJD(2) * t96 + qJD(4) * t14 + qJD(5) * t67 - t294, -qJD(2) * t101 - qJD(4) * t7 + qJD(5) * t95 + t319, t17 * qJD(4) - t190 * t273 + t127 - t296, qJD(2) * t20 + qJD(4) * t2 + qJD(5) * t25 - t324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t261, t264, 0, 0, 0, 0, 0, -t236, t278, -t277, -t268, -t239, t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t240, t179 * qJD(4), 0, 0, 0, -pkin(3) * t270, -pkin(3) * t269, -t122 * qJD(4) + t237, 0, -t121 * qJD(4) + t186 * qJD(5), t212 * t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t230, -t200, t75, -t345, -t265, -t207 - t252, -t206 + t253, -t215 - t252, t197 - t311, -t216 - t253, pkin(7) * t197 - t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, t75, t123, -t204 + t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, t201, t61, t91 * qJD(3) + t169 * t236, t153, -qJD(3) * t29 + t298 - t303, -t27 * qJD(3) + t192 * t263 - t281, -t14 * qJD(3) + t190 * t263 - t282, qJD(3) * t7 + t317, -qJD(2) * t95 - qJD(3) * t17 + t159 - t305, qJ(5) * t159 + qJD(2) * t8 - qJD(3) * t2 - t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t279, t192 * t264, t190 * t264, 0, -t87, t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t230, t200, -t87, t279, t265, t207, t206, t215, t311, t216, t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t344, -t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t67 + t126, t61, -t196, -qJ(5) * t262 - qJD(3) * t25 - t298 - t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t231, -t87, -t123, t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t33;
