% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRP11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:55
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP11_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP11_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP11_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP11_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:54:38
% EndTime: 2019-12-31 18:54:47
% DurationCPUTime: 5.11s
% Computational Cost: add. (5574->381), mult. (11300->465), div. (0->0), fcn. (12048->6), ass. (0->303)
t253 = cos(qJ(4));
t249 = sin(pkin(8));
t250 = cos(pkin(8));
t252 = sin(qJ(3));
t411 = cos(qJ(3));
t228 = t249 * t252 - t250 * t411;
t224 = t228 ^ 2;
t308 = t411 * t249;
t365 = t252 * t250;
t230 = t308 + t365;
t225 = t230 ^ 2;
t318 = -t225 - t224;
t425 = t318 * t253;
t430 = qJD(2) * t425;
t251 = sin(qJ(4));
t426 = t318 * t251;
t429 = qJD(2) * t426;
t428 = t425 * qJD(1);
t427 = t426 * qJD(1);
t317 = t225 - t224;
t139 = t251 * t228;
t338 = t139 * qJD(1);
t346 = qJD(4) * t251;
t116 = t338 + t346;
t126 = t139 * qJD(4);
t108 = t317 * t251;
t344 = t108 * qJD(1);
t424 = t344 - t126;
t324 = t230 * qJD(3);
t206 = t253 * t324;
t423 = t344 - t206;
t328 = t228 * qJD(1);
t422 = -t328 - qJD(4);
t144 = t253 * t230;
t247 = t251 ^ 2;
t211 = t247 * t228;
t248 = t253 ^ 2;
t212 = t248 * t228;
t421 = 0.2e1 * t144 * t251 * (-qJD(4) + t328) - (-t211 + t212) * qJD(3);
t243 = -pkin(2) * t250 - pkin(1);
t405 = t230 * pkin(7);
t284 = pkin(3) * t228 - t405;
t262 = t243 + t284;
t403 = pkin(6) + qJ(2);
t234 = t403 * t250;
t297 = t403 * t249;
t172 = t234 * t411 - t252 * t297;
t362 = t253 * t172;
t83 = t251 * t262 + t362;
t420 = t83 / 0.2e1;
t171 = t234 * t252 + t297 * t411;
t140 = t251 * t230;
t283 = pkin(4) * t140 - qJ(5) * t144;
t94 = t171 + t283;
t419 = -t94 / 0.2e1;
t162 = t171 * t253;
t157 = t162 / 0.2e1;
t407 = t230 * pkin(3);
t408 = t228 * pkin(7);
t165 = t407 + t408;
t418 = -t165 / 0.2e1;
t417 = t230 / 0.2e1;
t367 = t251 * qJ(5);
t404 = t253 * pkin(4);
t280 = t367 + t404;
t233 = -pkin(3) - t280;
t416 = t233 / 0.2e1;
t415 = -t247 / 0.2e1;
t414 = -t248 / 0.2e1;
t413 = -t251 / 0.2e1;
t412 = t253 / 0.2e1;
t410 = pkin(4) * t251;
t409 = t228 * pkin(4);
t406 = t230 * pkin(4);
t371 = t228 * qJ(5);
t61 = t83 + t371;
t366 = t251 * t172;
t82 = -t253 * t262 + t366;
t62 = t82 - t409;
t222 = t230 * qJ(5);
t154 = t251 * t165;
t93 = -t162 + t154;
t69 = t222 + t93;
t363 = t253 * t165;
t374 = t171 * t251;
t92 = t363 + t374;
t70 = -t92 - t406;
t364 = t253 * qJ(5);
t235 = t364 - t410;
t95 = t228 * t235 + t172;
t3 = t61 * t69 + t62 * t70 + t94 * t95;
t402 = t3 * qJD(1);
t132 = t280 * t230;
t4 = t132 * t94 - t61 * t82 + t62 * t83;
t401 = t4 * qJD(1);
t143 = t253 * t228;
t398 = t61 * t228;
t5 = t62 * t143 - t70 * t144 + (t230 * t69 - t398) * t251;
t400 = t5 * qJD(1);
t6 = ((t61 - t83) * t253 + (t62 - t82) * t251) * t230;
t399 = t6 * qJD(1);
t397 = t61 * t253;
t396 = t62 * t251;
t311 = -t82 / 0.2e1 + t62 / 0.2e1;
t270 = t409 / 0.2e1 - t311;
t285 = t371 / 0.2e1 + t61 / 0.2e1;
t389 = t83 * t251;
t7 = -t389 / 0.2e1 + t285 * t251 + t270 * t253;
t395 = t7 * qJD(1);
t8 = (t420 - t285) * t253 + t270 * t251;
t394 = t8 * qJD(1);
t393 = t82 * t228;
t392 = t82 * t251;
t391 = t82 * t253;
t390 = t83 * t228;
t388 = t83 * t253;
t387 = t92 * t253;
t386 = t93 * t251;
t385 = t94 * t251;
t384 = t94 * t253;
t383 = t95 * t251;
t382 = t95 * t253;
t300 = t230 * t416;
t381 = t253 * t300 + t385 / 0.2e1;
t11 = (t61 - t382) * t230 + (t69 + t384) * t228;
t380 = t11 * qJD(1);
t12 = (-t62 + t383) * t230 + (-t70 - t385) * t228;
t379 = t12 * qJD(1);
t13 = (t386 + t387) * t230 + (-t389 + t391) * t228;
t378 = t13 * qJD(1);
t14 = t171 * t172 - t82 * t92 + t83 * t93;
t377 = t14 * qJD(1);
t16 = t94 * t230 + (-t396 - t397) * t228;
t376 = t16 * qJD(1);
t375 = t171 * t230;
t21 = (-t82 + t366) * t230 + (t92 - t374) * t228;
t373 = t21 * qJD(1);
t22 = (-t83 + t362) * t230 + (-t93 - t162) * t228;
t372 = t22 * qJD(1);
t273 = (t414 + t415) * t408;
t259 = t273 + t300;
t269 = t412 * t70 + t413 * t69;
t23 = t259 + t269;
t370 = t23 * qJD(1);
t369 = t235 * t251;
t25 = -t390 + (t132 * t251 + t384) * t230;
t368 = t25 * qJD(1);
t26 = -t393 + (-t132 * t253 + t385) * t230;
t361 = t26 * qJD(1);
t27 = t375 + (-t388 - t392) * t228;
t360 = t27 * qJD(1);
t312 = -t407 / 0.2e1;
t260 = t273 + t312;
t268 = -t387 / 0.2e1 - t386 / 0.2e1;
t30 = t260 + t268;
t359 = t30 * qJD(1);
t32 = -t144 * t94 + t398;
t358 = t32 * qJD(1);
t45 = -t140 * t171 + t393;
t357 = t45 * qJD(1);
t46 = t144 * t171 - t390;
t356 = t46 * qJD(1);
t65 = -t172 * t228 + t375;
t355 = t65 * qJD(1);
t354 = t82 * qJD(4);
t353 = t154 / 0.2e1 - t162 / 0.2e1;
t352 = -t154 / 0.2e1 + t157;
t351 = t230 * t415 + t248 * t417;
t236 = t249 ^ 2 + t250 ^ 2;
t349 = qJD(2) * t230;
t348 = qJD(3) * t251;
t347 = qJD(3) * t253;
t345 = qJD(4) * t253;
t110 = t317 * t253;
t342 = t110 * qJD(1);
t340 = t317 * qJD(1);
t137 = (t247 / 0.2e1 + t414) * t230;
t339 = t137 * qJD(4);
t337 = t139 * qJD(2);
t336 = t140 * qJD(1);
t131 = t143 * qJD(1);
t335 = t144 * qJD(1);
t150 = t211 + t212;
t333 = t150 * qJD(1);
t330 = t318 * qJD(1);
t223 = t308 / 0.2e1 + t365 / 0.2e1;
t329 = t223 * qJD(1);
t327 = t228 * qJD(2);
t220 = t228 * qJD(3);
t326 = t228 * qJD(4);
t218 = t228 * qJD(5);
t325 = t230 * qJD(1);
t232 = t236 * qJ(2);
t323 = t232 * qJD(1);
t322 = t236 * qJD(1);
t239 = t248 - t247;
t321 = t239 * qJD(4);
t320 = t251 * qJD(5);
t319 = t253 * qJD(5);
t316 = pkin(7) * t346;
t315 = pkin(7) * t345;
t314 = -t408 / 0.2e1;
t313 = t408 / 0.2e1;
t214 = t406 / 0.2e1;
t298 = -t144 / 0.2e1;
t310 = t233 * t298 + t253 * t313 - t385 / 0.2e1;
t148 = t363 / 0.2e1;
t155 = t374 / 0.2e1;
t309 = t148 + t155 + t214;
t307 = t251 * t326;
t306 = t230 * t345;
t305 = t228 * t325;
t167 = t228 * t324;
t241 = t251 * t345;
t304 = t251 * t325;
t303 = t230 * t320;
t240 = t251 * t347;
t302 = t251 * t319;
t301 = t253 * t325;
t299 = -t369 / 0.2e1;
t103 = t223 + t351;
t296 = qJD(1) * t103 + t240;
t114 = qJD(1) * t137 - t240;
t180 = t253 * t225 * t251 * qJD(1);
t96 = qJD(3) * t137 + t180;
t161 = t228 * t301;
t295 = qJD(3) * t139 + t161;
t294 = qJD(1) * t243 + qJD(2);
t291 = t225 * t241;
t290 = t251 * t301;
t289 = t251 * t206;
t288 = -t406 / 0.2e1 - t374 / 0.2e1;
t287 = -t132 / 0.2e1 + t314;
t282 = 0.2e1 * t289;
t281 = t161 + t306;
t279 = t228 * t233 + t405;
t278 = t251 * t70 + t253 * t69;
t277 = -t251 * t92 + t253 * t93;
t17 = (t299 - pkin(4) / 0.2e1) * t230 + (t418 + t287) * t253 + t288 + t381;
t176 = -t233 * t251 - t235 * t253;
t276 = -qJD(1) * t17 + qJD(3) * t176;
t175 = t233 * t253 - t369;
t255 = (t235 * t417 + t419) * t253 + (t300 + t287) * t251;
t20 = -t222 + t255 + t352;
t275 = -qJD(1) * t20 + qJD(3) * t175;
t274 = t422 * t251;
t272 = -qJD(4) * t235 - t320;
t271 = -t69 * qJ(5) / 0.2e1 + t70 * pkin(4) / 0.2e1;
t190 = t253 * t314;
t43 = t190 + (t312 + t418) * t253;
t267 = pkin(3) * t348 - qJD(1) * t43;
t256 = (t313 + t407 / 0.2e1) * t251 + t157;
t41 = t256 + t353;
t266 = pkin(3) * t347 - qJD(1) * t41;
t254 = (t311 * t253 + (-t61 / 0.2e1 + t420) * t251) * pkin(7) + t132 * t416 + t235 * t419;
t2 = t254 + t271;
t265 = t233 * t235 * qJD(3) - t2 * qJD(1);
t29 = t309 + t310;
t264 = -qJD(1) * t29 + t233 * t348;
t59 = t230 * t274;
t112 = qJD(4) * t223 + t305;
t213 = t248 * t225;
t151 = t225 * t247 - t213;
t99 = -qJD(1) * t151 + t282;
t163 = -qJD(3) * t239 + 0.2e1 * t290;
t263 = qJD(3) * t108 + t228 * t306;
t261 = qJD(4) * t151 + t228 * t282;
t258 = -qJD(4) * t280 + t319;
t160 = t213 + t224;
t257 = qJD(1) * t160 + t289 + t326;
t208 = t223 * qJD(3);
t205 = t251 * t324;
t181 = t230 * t302;
t179 = t422 * qJ(5);
t177 = qJD(3) * t247 + t290;
t135 = t150 * qJD(2);
t133 = t150 * qJD(3);
t130 = t143 * qJD(4);
t118 = t131 + t345;
t104 = -t223 + t351;
t102 = -t167 * t248 - t291;
t101 = -t167 * t247 + t291;
t100 = t253 * t59;
t88 = t248 * t305 - t339;
t87 = -qJD(3) * t143 + t228 * t304;
t86 = t247 * t305 + t339;
t81 = t83 * qJD(4);
t68 = qJD(3) * t110 - t230 * t307;
t60 = t130 - t342;
t58 = -t339 + (-t248 * t325 - t240) * t228;
t57 = t339 + (-t247 * t325 + t240) * t228;
t48 = t205 + t342;
t44 = pkin(3) * t298 + t148 + 0.2e1 * t155 + t190;
t42 = t256 + t352;
t31 = t260 - t268;
t28 = -t363 / 0.2e1 + t288 + t310;
t24 = t259 - t269;
t19 = t222 + t255 + t353;
t18 = t230 * t299 + t253 * t287 + t214 + t309 + t381;
t10 = -t391 / 0.2e1 + t61 * t413 + t389 / 0.2e1 + t62 * t412 + (t367 / 0.2e1 + t404 / 0.2e1) * t228;
t9 = -t392 / 0.2e1 + t397 / 0.2e1 - t388 / 0.2e1 + t396 / 0.2e1 + (-t364 / 0.2e1 + t410 / 0.2e1) * t228;
t1 = t254 - t271;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236 * qJD(2), t232 * qJD(2), -t167, -t317 * qJD(3), 0, t167, 0, 0, t243 * t324, -t243 * t220, -t318 * qJD(2), t65 * qJD(2), t102, t261, t68, t101, -t263, t167, qJD(3) * t21 + qJD(4) * t46 - t429, qJD(3) * t22 + qJD(4) * t45 - t430, -t13 * qJD(3), qJD(2) * t27 + qJD(3) * t14, t102, t68, -t261, t167, t263, t101, qJD(3) * t12 + qJD(4) * t25 - t225 * t302 - t429, -qJD(3) * t5 - qJD(4) * t6 - t228 * t303, qJD(3) * t11 + qJD(4) * t26 + qJD(5) * t160 + t430, qJD(2) * t16 + qJD(3) * t3 + qJD(4) * t4 + qJD(5) * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t322, t323, 0, 0, 0, 0, 0, 0, 0, 0, -t330, t355, 0, 0, 0, 0, 0, 0, -t427, -t428, 0, qJD(3) * t31 + t360, 0, 0, 0, 0, 0, 0, -t427, 0, t428, qJD(3) * t24 + qJD(4) * t9 + t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t305, -t340, -t220, t305, -t324, 0, -qJD(3) * t172 + t243 * t325, qJD(3) * t171 - t243 * t328, 0, 0, t58, t421, t48, t57, -t423, t112, t373 + (t251 * t284 - t362) * qJD(3) + t44 * qJD(4), t372 + (t253 * t284 + t366) * qJD(3) + t42 * qJD(4), qJD(3) * t277 - t378, t377 + t31 * qJD(2) + (-t172 * pkin(3) + pkin(7) * t277) * qJD(3), t58, t48, -t421, t112, t423, t57, t379 + (-t251 * t279 - t382) * qJD(3) + t18 * qJD(4) + t104 * qJD(5), qJD(3) * t278 + qJD(4) * t10 - t400, t380 + (t253 * t279 - t383) * qJD(3) + t19 * qJD(4) + t181, t402 + t24 * qJD(2) + (pkin(7) * t278 + t95 * t233) * qJD(3) + t1 * qJD(4) + t28 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, -t99, t59, t96, -t281, t208, qJD(3) * t44 + t356 - t81, qJD(3) * t42 + t354 + t357, 0, 0, -t96, t59, t99, t208, t281, t96, qJD(3) * t18 + t368 - t81, t10 * qJD(3) + qJD(4) * t283 - t303 - t399, qJD(3) * t19 + t218 - t354 + t361, t401 + t9 * qJD(2) + t1 * qJD(3) + (-pkin(4) * t83 - qJ(5) * t82) * qJD(4) + t61 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t104 - t180, t59, t257, qJD(3) * t28 + qJD(4) * t61 + t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322, -t323, 0, 0, 0, 0, 0, 0, t324, -t220, t330, -t355, 0, 0, 0, 0, 0, 0, -t126 + t206 + t427, -qJD(3) * t140 - t253 * t326 + t428, t133, -qJD(3) * t30 - t360, 0, 0, 0, 0, 0, 0, qJD(3) * t144 - t307 + t427, t133, t130 + t205 - t428, -qJD(3) * t23 - qJD(4) * t8 + qJD(5) * t139 - t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t325, -t328, 0, 0, 0, 0, 0, 0, 0, 0, t301, -t336, t333, -t359, 0, 0, 0, 0, 0, 0, t335, t333, t304, -t370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116, t422 * t253, 0, 0, 0, 0, 0, 0, 0, 0, t274, 0, t118, -t272 - t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t305, t340, 0, -t305, 0, 0, -t294 * t230, t294 * t228, 0, 0, t88, 0.2e1 * t100, t60, t86, t424, -t112, qJD(4) * t43 - t253 * t349 - t373, qJD(2) * t140 + qJD(4) * t41 - t372, -t135 + t378, qJD(2) * t30 - t377, t88, t60, -0.2e1 * t100, -t112, -t424, t86, -qJD(2) * t144 + qJD(4) * t17 + qJD(5) * t103 - t379, -qJD(4) * t7 + qJD(5) * t143 - t135 + t400, qJD(4) * t20 - t251 * t349 + t181 - t380, qJD(2) * t23 + qJD(4) * t2 + qJD(5) * t29 - t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325, t328, 0, 0, 0, 0, 0, 0, 0, 0, -t301, t336, -t333, t359, 0, 0, 0, 0, 0, 0, -t335, -t333, -t304, t370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, t321, 0, -t241, 0, 0, -pkin(3) * t346, -pkin(3) * t345, 0, 0, t241, 0, -t321, 0, 0, -t241, -qJD(4) * t176 + t302, 0, -qJD(4) * t175 + qJD(5) * t247, t272 * t233; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t114, -t163, t118, t114, -t116, -t329, -t267 - t315, -t266 + t316, 0, 0, -t114, t118, t163, -t329, t116, t114, -t276 - t315, t258 - t395, -t275 - t316, pkin(7) * t258 - t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, t118, t177, -t264 + t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96, t99, t87, -t96, t295, t208, -qJD(3) * t43 + t337 - t356, -qJD(3) * t41 + t253 * t327 - t357, 0, 0, t96, t87, -t99, t208, -t295, -t96, -qJD(3) * t17 + t251 * t327 - t368, qJD(3) * t7 + t399, -qJD(2) * t143 - qJD(3) * t20 + t218 - t361, qJ(5) * t218 + qJD(2) * t8 - qJD(3) * t2 - t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, t253 * t328, 0, 0, 0, 0, 0, 0, 0, 0, t251 * t328, 0, -t131, t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, t163, -t131, -t114, t338, t329, t267, t266, 0, 0, t114, -t131, -t163, t329, -t338, -t114, t276, t395, t275, t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t422, -t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t103 + t180, t87, -t257, -qJ(5) * t326 - qJD(3) * t29 - t337 - t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, -t131, -t177, t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422, t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t15;
