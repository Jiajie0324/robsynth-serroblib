% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S5RRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% tau_reg [5x(5*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:42
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S5RRRPR12_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR12_invdynJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR12_invdynJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR12_invdynJ_fixb_reg2_slag_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR12_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRRPR12_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:40:42
% EndTime: 2019-12-31 21:41:11
% DurationCPUTime: 14.60s
% Computational Cost: add. (13590->718), mult. (34183->994), div. (0->0), fcn. (27106->14), ass. (0->297)
t277 = sin(qJ(3));
t280 = cos(qJ(3));
t409 = cos(pkin(5));
t342 = t409 * qJD(1);
t312 = t342 + qJD(2);
t278 = sin(qJ(2));
t273 = sin(pkin(5));
t381 = qJD(1) * t273;
t363 = t278 * t381;
t182 = t277 * t312 + t280 * t363;
t281 = cos(qJ(2));
t380 = qJD(1) * t281;
t362 = t273 * t380;
t240 = -qJD(3) + t362;
t272 = sin(pkin(10));
t274 = cos(pkin(10));
t137 = t182 * t274 - t240 * t272;
t276 = sin(qJ(5));
t167 = t272 * t182;
t341 = t240 * t274 + t167;
t430 = cos(qJ(5));
t301 = t430 * t341;
t66 = t137 * t276 + t301;
t452 = t66 ^ 2;
t335 = t277 * t363;
t180 = -t280 * t312 + t335;
t174 = qJD(5) + t180;
t451 = t174 * t66;
t68 = -t137 * t430 + t276 * t341;
t450 = t68 ^ 2;
t345 = t278 * t409;
t261 = pkin(1) * t345;
t318 = pkin(3) * t277 - qJ(4) * t280;
t390 = t273 * t281;
t449 = -(t261 + (pkin(7) + t318) * t390) * qJD(1) + qJD(3) * t318 - qJD(4) * t277;
t334 = pkin(1) * t342;
t197 = -pkin(7) * t363 + t281 * t334;
t325 = pkin(2) * t278 - pkin(8) * t281;
t198 = t325 * t381;
t131 = t280 * t197 + t277 * t198;
t105 = qJ(4) * t363 + t131;
t377 = qJD(3) * t277;
t370 = pkin(8) * t377;
t414 = t449 * t274 + (t105 + t370) * t272;
t448 = -t274 * t105 + t449 * t272;
t387 = t280 * t281;
t395 = t272 * t278;
t169 = (t274 * t387 + t395) * t381;
t361 = t277 * t380;
t388 = t274 * t280;
t447 = -pkin(4) * t273 * t361 + pkin(9) * t169 + (pkin(4) * t277 - pkin(9) * t388) * qJD(3) + t414;
t394 = t272 * t280;
t168 = -t274 * t363 + t362 * t394;
t389 = t274 * t277;
t446 = pkin(9) * t168 + (-pkin(8) * t389 - pkin(9) * t394) * qJD(3) + t448;
t376 = qJD(3) * t280;
t443 = -t272 * t376 + t168;
t442 = -t274 * t376 + t169;
t373 = qJDD(1) * t278;
t349 = t273 * t373;
t374 = qJD(1) * qJD(2);
t350 = t273 * t374;
t441 = t281 * t350 + t349;
t344 = t281 * t409;
t393 = t273 * t278;
t216 = pkin(1) * t344 - pkin(7) * t393;
t201 = qJD(2) * t216;
t279 = sin(qJ(1));
t431 = cos(qJ(1));
t327 = t409 * t431;
t213 = t278 * t327 + t279 * t281;
t365 = t273 * t431;
t155 = t213 * t280 - t277 * t365;
t212 = t278 * t279 - t281 * t327;
t269 = pkin(10) + qJ(5);
t265 = sin(t269);
t266 = cos(t269);
t440 = t155 * t265 - t212 * t266;
t439 = t155 * t266 + t212 * t265;
t295 = qJD(3) * t312;
t340 = t409 * qJDD(1);
t306 = t340 + qJDD(2);
t378 = qJD(2) * t281;
t358 = t277 * t378;
t94 = t273 * (qJD(1) * (t278 * t376 + t358) + t277 * t373) + t277 * t295 - t280 * t306;
t268 = t273 ^ 2;
t438 = 0.2e1 * t268;
t413 = -t274 * t370 + t448;
t331 = t278 * t350;
t372 = qJDD(1) * t281;
t251 = t273 * t372;
t307 = qJD(2) * t334;
t328 = pkin(1) * t340;
t367 = pkin(7) * t251 + t278 * t328 + t281 * t307;
t140 = -pkin(7) * t331 + t367;
t116 = pkin(8) * t306 + t140;
t302 = t325 * qJD(2);
t309 = -pkin(2) * t281 - pkin(8) * t278 - pkin(1);
t123 = (qJD(1) * t302 + qJDD(1) * t309) * t273;
t384 = pkin(7) * t390 + t261;
t192 = t409 * pkin(8) + t384;
t166 = qJD(2) * pkin(8) + qJD(1) * t192;
t173 = t309 * t381;
t39 = t280 * t116 + t277 * t123 - t166 * t377 + t173 * t376;
t90 = -t277 * t166 + t280 * t173;
t437 = t240 * t90 + t39;
t436 = (qJDD(2) + 0.2e1 * t340) * t273;
t353 = qJD(5) * t430;
t375 = qJD(5) * t276;
t435 = -t272 * t375 + t274 * t353;
t319 = pkin(3) * t280 + qJ(4) * t277;
t202 = t384 * qJD(2);
t194 = qJDD(3) - t251 + t331;
t428 = t194 * pkin(3);
t434 = qJDD(4) - t428;
t165 = -pkin(2) * t312 - t197;
t77 = t180 * pkin(3) - t182 * qJ(4) + t165;
t91 = t166 * t280 + t173 * t277;
t82 = -qJ(4) * t240 + t91;
t41 = -t272 * t82 + t274 * t77;
t23 = pkin(4) * t180 - pkin(9) * t137 + t41;
t42 = t272 * t77 + t274 * t82;
t30 = -pkin(9) * t341 + t42;
t303 = -t23 * t430 + t276 * t30;
t310 = qJ(4) * t194 - qJD(4) * t240;
t29 = t310 + t39;
t337 = t441 * pkin(7) + t278 * t307 - t281 * t328;
t117 = -pkin(2) * t306 + t337;
t93 = qJD(3) * t335 - t277 * t306 + (-t295 - t441) * t280;
t31 = t94 * pkin(3) + t93 * qJ(4) - t182 * qJD(4) + t117;
t10 = -t272 * t29 + t274 * t31;
t72 = t194 * t272 - t274 * t93;
t6 = pkin(4) * t94 - pkin(9) * t72 + t10;
t11 = t272 * t31 + t274 * t29;
t86 = t272 * t93;
t343 = t194 * t274 + t86;
t7 = pkin(9) * t343 + t11;
t1 = -t303 * qJD(5) + t276 * t6 + t430 * t7;
t432 = t180 ^ 2;
t282 = qJD(1) ^ 2;
t427 = t68 * t66;
t426 = pkin(9) + qJ(4);
t232 = -pkin(2) - t319;
t220 = t274 * t232;
t143 = -pkin(9) * t389 + t220 + (-pkin(8) * t272 - pkin(4)) * t280;
t179 = pkin(8) * t388 + t272 * t232;
t153 = -pkin(9) * t272 * t277 + t179;
t80 = t143 * t430 - t276 * t153;
t425 = qJD(5) * t80 + t447 * t276 + t446 * t430;
t81 = t276 * t143 + t153 * t430;
t424 = -qJD(5) * t81 - t446 * t276 + t447 * t430;
t379 = qJD(2) * t278;
t385 = pkin(2) * t390 + pkin(8) * t393;
t193 = -pkin(1) * t273 - t385;
t199 = t273 * t302;
t61 = -t192 * t377 + t193 * t376 + t277 * t199 + t280 * t201;
t54 = (qJ(4) * t379 - qJD(4) * t281) * t273 + t61;
t391 = t273 * t280;
t211 = t277 * t409 + t278 * t391;
t151 = qJD(3) * t211 + t273 * t358;
t210 = t277 * t393 - t280 * t409;
t359 = t273 * t378;
t152 = -qJD(3) * t210 + t280 * t359;
t60 = t151 * pkin(3) - t152 * qJ(4) - t211 * qJD(4) + t202;
t25 = t272 * t60 + t274 * t54;
t191 = -pkin(2) * t409 - t216;
t102 = t210 * pkin(3) - t211 * qJ(4) + t191;
t120 = t280 * t192 + t277 * t193;
t103 = -qJ(4) * t390 + t120;
t49 = t272 * t102 + t274 * t103;
t422 = t240 * t91;
t421 = t272 * t94;
t420 = t274 * t94;
t419 = t72 * t272;
t235 = t426 * t272;
t236 = t426 * t274;
t163 = -t235 * t430 - t276 * t236;
t300 = -t276 * t272 + t274 * t430;
t404 = t180 * t274;
t118 = pkin(3) * t182 + qJ(4) * t180;
t50 = t274 * t118 - t272 * t90;
t36 = pkin(4) * t182 + pkin(9) * t404 + t50;
t405 = t180 * t272;
t51 = t272 * t118 + t274 * t90;
t45 = pkin(9) * t405 + t51;
t418 = qJD(4) * t300 + qJD(5) * t163 - t276 * t36 - t430 * t45;
t164 = -t276 * t235 + t236 * t430;
t222 = t272 * t430 + t276 * t274;
t417 = -qJD(4) * t222 - qJD(5) * t164 + t276 * t45 - t36 * t430;
t209 = t222 * qJD(5);
t416 = t209 * t277 - t443 * t276 + t442 * t430;
t415 = -t168 * t430 - t169 * t276 + t222 * t376 + t277 * t435;
t412 = -t300 * t180 - t435;
t411 = t222 * t180 + t209;
t130 = -t277 * t197 + t198 * t280;
t106 = -pkin(3) * t363 - t130;
t366 = pkin(4) * t272 + pkin(8);
t410 = -pkin(4) * t168 + t366 * t376 - t106;
t407 = t180 * t182;
t406 = t180 * t240;
t403 = t182 * t240;
t399 = t240 * t277;
t398 = t265 * t280;
t397 = t266 * t280;
t396 = t268 * t282;
t392 = t273 * t279;
t79 = t240 * pkin(3) + qJD(4) - t90;
t386 = -qJD(4) + t79;
t383 = t431 * pkin(1) + pkin(7) * t392;
t270 = t278 ^ 2;
t271 = t281 ^ 2;
t382 = t270 - t271;
t369 = t281 * t396;
t215 = -t279 * t345 + t281 * t431;
t368 = t215 * pkin(2) + t383;
t360 = t273 * t379;
t354 = g(3) * t385;
t352 = pkin(1) * t438;
t351 = t278 * t374;
t347 = -pkin(1) * t279 + pkin(7) * t365;
t24 = -t272 * t54 + t274 * t60;
t346 = t276 * t72 - t430 * t343;
t48 = t274 * t102 - t103 * t272;
t119 = -t277 * t192 + t193 * t280;
t339 = t278 * t369;
t338 = t277 * t116 - t280 * t123 + t166 * t376 + t173 * t377;
t332 = t281 * t351;
t329 = -t213 * pkin(2) + t347;
t326 = t273 * t282 * t409;
t154 = t213 * t277 + t280 * t365;
t158 = t215 * t277 - t279 * t391;
t324 = -g(1) * t154 + g(2) * t158;
t214 = t278 * t431 + t279 * t344;
t323 = -g(1) * t212 + g(2) * t214;
t322 = g(1) * t215 + g(2) * t213;
t104 = pkin(3) * t390 - t119;
t321 = t343 * pkin(4);
t317 = t343 * t274;
t316 = t151 * t180 + t210 * t94;
t264 = pkin(4) * t274 + pkin(3);
t315 = t264 * t280 + t277 * t426;
t314 = t341 * qJD(3);
t311 = 0.2e1 * t342 + qJD(2);
t308 = pkin(8) * t214 + t368;
t62 = -t192 * t376 - t193 * t377 + t199 * t280 - t277 * t201;
t305 = g(1) * t431 + g(2) * t279;
t150 = t211 * t274 - t272 * t390;
t33 = pkin(4) * t210 - pkin(9) * t150 + t48;
t149 = t211 * t272 + t274 * t390;
t43 = -pkin(9) * t149 + t49;
t12 = -t276 * t43 + t33 * t430;
t9 = t276 * t23 + t30 * t430;
t13 = t276 * t33 + t43 * t430;
t84 = -t276 * t149 + t150 * t430;
t20 = qJD(5) * t301 + t137 * t375 - t276 * t343 - t430 * t72;
t298 = -pkin(8) * t212 + t329;
t297 = g(1) * t158 + g(2) * t154 + g(3) * t210;
t159 = t215 * t280 + t277 * t392;
t296 = -g(1) * t159 - g(2) * t155 - g(3) * t211;
t32 = t338 + t434;
t293 = t297 - t32;
t292 = -g(1) * t214 - g(2) * t212 + g(3) * t390;
t291 = -g(3) * t393 - t322;
t289 = -t137 * t272 - t274 * t341;
t288 = -pkin(8) * t194 - t165 * t240;
t59 = -pkin(3) * t360 - t62;
t286 = -t180 * t399 - t280 * t94;
t285 = t297 - t338;
t2 = -qJD(5) * t9 - t276 * t7 + t430 * t6;
t284 = pkin(8) * qJD(3) * t240 - t117 - t292;
t283 = -t285 + t434;
t21 = -qJD(5) * t68 + t346;
t223 = t366 * t277;
t205 = t214 * pkin(2);
t203 = t212 * pkin(2);
t200 = t384 * qJD(1);
t196 = t300 * t277;
t195 = t222 * t277;
t178 = -pkin(8) * t394 + t220;
t128 = t152 * t274 + t272 * t360;
t127 = t152 * t272 - t274 * t360;
t100 = t159 * t266 + t214 * t265;
t99 = -t159 * t265 + t214 * t266;
t87 = qJDD(5) + t94;
t83 = t149 * t430 + t150 * t276;
t73 = -pkin(4) * t405 + t91;
t71 = pkin(4) * t149 + t104;
t53 = pkin(4) * t341 + t79;
t44 = pkin(4) * t127 + t59;
t35 = qJD(5) * t84 + t127 * t430 + t276 * t128;
t34 = t276 * t127 - t128 * t430 + t149 * t353 + t150 * t375;
t22 = -pkin(9) * t127 + t25;
t19 = -t321 + t32;
t16 = pkin(4) * t151 - pkin(9) * t128 + t24;
t4 = -qJD(5) * t13 + t16 * t430 - t276 * t22;
t3 = qJD(5) * t12 + t276 * t16 + t22 * t430;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t279 - g(2) * t431, t305, 0, 0, (qJDD(1) * t270 + 0.2e1 * t332) * t268, (t278 * t372 - t374 * t382) * t438, t278 * t436 + t311 * t359, (qJDD(1) * t271 - 0.2e1 * t332) * t268, t281 * t436 - t311 * t360, t306 * t409, -t202 * t312 + t216 * t306 - t337 * t409 + g(1) * t213 - g(2) * t215 + (-t351 + t372) * t352, -t201 * t312 - t384 * t306 - t140 * t409 + (-t281 * t374 - t373) * t352 + t323, ((-t197 * qJD(2) + qJDD(1) * t384 + t140) * t281 + (-qJD(2) * t200 - qJDD(1) * t216 + t337) * t278 - t305) * t273, t268 * qJDD(1) * pkin(1) ^ 2 - g(1) * t347 - g(2) * t383 + t140 * t384 - t197 * t202 + t200 * t201 - t216 * t337, t152 * t182 - t211 * t93, -t151 * t182 - t152 * t180 + t210 * t93 - t211 * t94, -t152 * t240 + t194 * t211 + (t182 * t379 + t281 * t93) * t273, t316, t151 * t240 - t194 * t210 + (-t180 * t379 + t281 * t94) * t273, (-t194 * t281 - t240 * t379) * t273, g(1) * t155 - g(2) * t159 + t117 * t210 + t119 * t194 + t151 * t165 + t180 * t202 + t191 * t94 - t240 * t62 + (t281 * t338 + t379 * t90) * t273, t117 * t211 - t120 * t194 + t152 * t165 + t182 * t202 - t191 * t93 + t240 * t61 + (t281 * t39 - t379 * t91) * t273 + t324, t119 * t93 - t120 * t94 - t151 * t91 - t152 * t90 - t180 * t61 - t182 * t62 - t210 * t39 + t211 * t338 - t323, -g(1) * t298 - g(2) * t308 + t117 * t191 - t119 * t338 + t39 * t120 + t165 * t202 + t91 * t61 + t90 * t62, t128 * t137 + t150 * t72, -t137 * t127 - t128 * t341 - t72 * t149 + t150 * t343, t128 * t180 + t137 * t151 + t150 * t94 + t210 * t72, t127 * t341 - t149 * t343, -t127 * t180 - t149 * t94 - t151 * t341 + t210 * t343, t316, t24 * t180 + t48 * t94 + t10 * t210 + t41 * t151 + t59 * t341 - t104 * t343 + t32 * t149 + t79 * t127 - g(1) * (-t155 * t274 - t212 * t272) - g(2) * (t159 * t274 + t214 * t272), -t25 * t180 - t49 * t94 - t11 * t210 - t42 * t151 + t59 * t137 + t104 * t72 + t32 * t150 + t79 * t128 - g(1) * (t155 * t272 - t212 * t274) - g(2) * (-t159 * t272 + t214 * t274), -t10 * t150 - t11 * t149 - t42 * t127 - t41 * t128 - t24 * t137 - t25 * t341 + t343 * t49 - t48 * t72 - t324, t11 * t49 + t42 * t25 + t10 * t48 + t41 * t24 + t32 * t104 + t79 * t59 - g(1) * (-pkin(3) * t155 - qJ(4) * t154 + t298) - g(2) * (pkin(3) * t159 + qJ(4) * t158 + t308), -t20 * t84 + t34 * t68, t20 * t83 - t21 * t84 + t34 * t66 + t35 * t68, -t151 * t68 - t174 * t34 - t20 * t210 + t84 * t87, t21 * t83 + t35 * t66, -t151 * t66 - t174 * t35 - t21 * t210 - t83 * t87, t151 * t174 + t210 * t87, g(1) * t439 - g(2) * t100 + t12 * t87 - t303 * t151 + t4 * t174 + t19 * t83 + t2 * t210 + t71 * t21 + t53 * t35 + t44 * t66, -g(1) * t440 - g(2) * t99 - t1 * t210 - t13 * t87 - t9 * t151 - t3 * t174 + t19 * t84 - t71 * t20 - t53 * t34 - t44 * t68, -t1 * t83 + t12 * t20 - t13 * t21 - t2 * t84 - t3 * t66 - t303 * t34 - t35 * t9 + t4 * t68 - t324, t1 * t13 + t9 * t3 + t2 * t12 - t303 * t4 + t19 * t71 + t53 * t44 - g(1) * (-t154 * t426 - t155 * t264 - t212 * t366 + t329) - g(2) * (t158 * t426 + t159 * t264 + t214 * t366 + t368); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t339, t382 * t396, -t281 * t326 + t349, t339, t278 * t326 + t251, t306, pkin(1) * t278 * t396 + t200 * t312 - t292 - t337, pkin(1) * t369 + t197 * t312 + (pkin(7) * t374 + g(3)) * t393 + t322 - t367, 0, 0, -t277 * t93 - t280 * t403, (-t93 + t406) * t280 + (-t94 + t403) * t277, -t240 * t376 + t194 * t277 + (-t182 * t278 + t240 * t387) * t381, t286, t240 * t377 + t194 * t280 + (t180 * t278 - t281 * t399) * t381, t240 * t363, -pkin(2) * t94 + t130 * t240 - t180 * t200 + t277 * t288 + t280 * t284 - t363 * t90, pkin(2) * t93 - t131 * t240 - t182 * t200 - t277 * t284 + t280 * t288 + t363 * t91, t130 * t182 + t131 * t180 + ((qJD(3) * t182 - t94) * pkin(8) + t437) * t280 + (t338 + t422 + (qJD(3) * t180 - t93) * pkin(8)) * t277 + t291, -t117 * pkin(2) - t91 * t131 - t90 * t130 - t165 * t200 + g(1) * t205 + g(2) * t203 - t354 + (t338 * t277 + t39 * t280 + (-t277 * t91 - t280 * t90) * qJD(3) - t322) * pkin(8), -t137 * t442 + t389 * t72, t169 * t341 + t137 * t168 + (t317 - t419) * t277 + t289 * t376, -t280 * t72 - t442 * t180 + (-t137 * t240 + t420) * t277, -t341 * t168 + (-t277 * t343 + t280 * t314) * t272, -t343 * t280 + t443 * t180 + (t341 * t362 - t314 - t421) * t277, t286, t178 * t94 - t106 * t341 - t79 * t168 + t414 * t180 + t291 * t272 + (-t10 - t292 * t274 + (pkin(8) * t341 + t79 * t272) * qJD(3)) * t280 + (-pkin(8) * t343 - t240 * t41 + t32 * t272) * t277, -t106 * t137 - t79 * t169 - t179 * t94 - t413 * t180 + t291 * t274 + (t11 + (pkin(8) * t137 + t274 * t79) * qJD(3) + t292 * t272) * t280 + (pkin(8) * t72 + t240 * t42 + t32 * t274) * t277, t179 * t343 - t178 * t72 + t42 * t168 + t41 * t169 - t414 * t137 + (-t272 * t42 - t274 * t41) * t376 + (-t10 * t274 - t11 * t272 - t292) * t277 - t413 * t341, t11 * t179 + t10 * t178 - t79 * t106 - g(1) * (-t214 * t319 - t205) - g(2) * (-t212 * t319 - t203) - g(3) * (t319 * t390 + t385) + t413 * t42 + t414 * t41 + (t277 * t32 + t376 * t79 - t322) * pkin(8), -t196 * t20 + t416 * t68, t195 * t20 - t196 * t21 + t415 * t68 + t416 * t66, -t174 * t416 + t196 * t87 + t20 * t280 + t399 * t68, t195 * t21 + t415 * t66, -t174 * t415 - t195 * t87 + t21 * t280 + t399 * t66, -t174 * t399 - t280 * t87, t80 * t87 - t2 * t280 - t303 * t377 + t223 * t21 + t19 * t195 - g(1) * (-t214 * t397 + t215 * t265) - g(2) * (-t212 * t397 + t213 * t265) + t410 * t66 + t415 * t53 + t424 * t174 + (t303 * t361 - g(3) * (t265 * t278 + t266 * t387)) * t273, -t223 * t20 + t19 * t196 - t81 * t87 + t1 * t280 - t9 * t377 - g(1) * (t214 * t398 + t215 * t266) - g(2) * (t212 * t398 + t213 * t266) - t410 * t68 - t416 * t53 - t425 * t174 + (t9 * t361 - g(3) * (-t265 * t387 + t266 * t278)) * t273, -t1 * t195 - t196 * t2 + t20 * t80 - t21 * t81 - t277 * t292 - t303 * t416 - t415 * t9 + t424 * t68 - t425 * t66, t1 * t81 + t2 * t80 + t19 * t223 - g(1) * (-t214 * t315 + t215 * t366 - t205) - g(2) * (-t212 * t315 + t213 * t366 - t203) - t354 + t425 * t9 - t424 * t303 + t410 * t53 - g(3) * (pkin(4) * t395 + t281 * t315) * t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407, t182 ^ 2 - t432, -t93 - t406, -t407, -t403 - t94, t194, -t165 * t182 + t285 - t422, t165 * t180 - t296 - t437, 0, 0, t137 * t404 + t419, t180 * t289 + t272 * t343 + t72 * t274, -t137 * t182 + t274 * t432 + t421, t341 * t405 + t317, t182 * t341 - t272 * t432 + t420, -t407, -qJ(4) * t421 + pkin(3) * t86 - t91 * t167 - t41 * t182 + (t272 * t386 - t50) * t180 + (t293 - t422 + t428) * t274, -qJ(4) * t420 - pkin(3) * t72 - t137 * t91 + t182 * t42 + (t274 * t386 + t51) * t180 - t293 * t272, t50 * t137 + t51 * t167 + (qJ(4) * t86 - qJD(4) * t167 - t41 * t180 + t51 * t240 + t274 * t310 + t11) * t274 + (qJ(4) * t72 + qJD(4) * t137 - t180 * t42 - t10) * t272 + t296, -t41 * t50 - t42 * t51 - t79 * t91 + (-t272 * t41 + t274 * t42) * qJD(4) + t293 * pkin(3) + (-t10 * t272 + t11 * t274 + t296) * qJ(4), -t20 * t222 + t412 * t68, -t20 * t300 - t21 * t222 + t411 * t68 + t412 * t66, -t174 * t412 + t182 * t68 + t222 * t87, -t21 * t300 + t411 * t66, -t174 * t411 + t182 * t66 + t300 * t87, -t174 * t182, t163 * t87 + t174 * t417 + t182 * t303 - t19 * t300 - t21 * t264 + t266 * t297 + t411 * t53 - t66 * t73, -t164 * t87 - t174 * t418 + t182 * t9 + t19 * t222 + t20 * t264 - t265 * t297 - t412 * t53 + t68 * t73, t1 * t300 + t163 * t20 - t164 * t21 - t2 * t222 - t303 * t412 - t411 * t9 + t417 * t68 - t418 * t66 + t296, t1 * t164 + t2 * t163 - t19 * t264 - t53 * t73 - g(1) * (-t158 * t264 + t159 * t426) - g(2) * (-t154 * t264 + t155 * t426) - g(3) * (-t210 * t264 + t211 * t426) + t418 * t9 - t417 * t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137 * t180 - t343, -t180 * t341 + t72, -t137 ^ 2 - t341 ^ 2, t137 * t41 + t341 * t42 + t283, 0, 0, 0, 0, 0, 0, -t68 * t174 + t21, -t20 - t451, -t450 - t452, t303 * t68 + t66 * t9 + t283 - t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427, t450 - t452, -t20 + t451, t427, -t346 - (-qJD(5) + t174) * t68, t87, t9 * t174 + t53 * t68 - g(1) * t99 + g(2) * t440 - g(3) * (-t211 * t265 - t266 * t390) + t2, t53 * t66 - t303 * t174 + g(1) * t100 + g(2) * t439 - g(3) * (-t211 * t266 + t265 * t390) - t1, 0, 0;];
tau_reg = t5;
