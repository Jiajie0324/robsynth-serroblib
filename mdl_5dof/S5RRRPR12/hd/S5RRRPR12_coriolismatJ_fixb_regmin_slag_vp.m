% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:42
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR12_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR12_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR12_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRRPR12_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:40:39
% EndTime: 2019-12-31 21:41:29
% DurationCPUTime: 27.51s
% Computational Cost: add. (12440->800), mult. (31959->1172), div. (0->0), fcn. (34767->10), ass. (0->551)
t501 = sin(qJ(3));
t503 = cos(qJ(3));
t498 = sin(pkin(5));
t502 = sin(qJ(2));
t748 = t498 * t502;
t785 = cos(pkin(5));
t433 = t501 * t748 - t785 * t503;
t811 = t433 / 0.2e1;
t795 = -t503 / 0.2e1;
t633 = t785 * t501;
t435 = t503 * t748 + t633;
t497 = sin(pkin(10));
t504 = cos(qJ(2));
t747 = t498 * t504;
t469 = t497 * t747;
t499 = cos(pkin(10));
t352 = t435 * t499 - t469;
t500 = sin(qJ(5));
t417 = t435 * t497;
t744 = t499 * t504;
t470 = t498 * t744;
t716 = t417 + t470;
t793 = cos(qJ(5));
t98 = -t793 * t352 + t500 * t716;
t712 = qJD(1) * t98;
t726 = t503 * t504;
t729 = t502 * t497;
t395 = (t499 * t726 + t729) * t498;
t666 = t793 * t395;
t468 = t499 * t748;
t394 = t469 * t503 - t468;
t734 = t500 * t394;
t548 = -t734 / 0.2e1 + t666 / 0.2e1;
t833 = t793 * t716;
t211 = t500 * t352 + t833;
t665 = t793 * t497;
t731 = t500 * t499;
t449 = t665 + t731;
t422 = t449 * t501;
t847 = t211 * t795 + t422 * t811;
t840 = t548 - t847;
t848 = qJD(2) * t840;
t686 = t433 * qJD(1);
t662 = t211 * t686;
t841 = t548 + t847;
t846 = qJD(2) * t841 + t662;
t845 = t98 * t795;
t547 = t731 / 0.2e1 + t665 / 0.2e1;
t805 = t449 / 0.2e1;
t531 = t805 + t547;
t188 = t531 * t433;
t663 = t98 * t686;
t844 = qJD(3) * t188 - t663;
t374 = t793 * t394;
t733 = t500 * t395;
t718 = t733 / 0.2e1 + t374 / 0.2e1;
t843 = -t718 + t845;
t842 = t718 + t845;
t823 = -t833 / 0.2e1;
t836 = t716 / 0.2e1;
t832 = -t352 / 0.2e1;
t822 = t352 / 0.2e1;
t664 = t793 * t499;
t732 = t500 * t497;
t559 = t664 - t732;
t830 = t559 * t433;
t546 = -t664 / 0.2e1 + t732 / 0.2e1;
t808 = t559 / 0.2e1;
t533 = t808 + t546;
t294 = t533 * t503;
t687 = t422 * qJD(5);
t828 = -t294 * qJD(3) - t687;
t797 = -t501 / 0.2e1;
t649 = t433 * t797;
t794 = t503 / 0.2e1;
t563 = t435 * t794 + t649;
t827 = t563 * qJD(3);
t681 = t503 * qJD(2);
t477 = t501 * t681;
t627 = qJD(1) * t563 + t477;
t558 = -qJD(2) * t563 + t435 * t686;
t826 = -pkin(3) / 0.2e1;
t676 = pkin(1) * t785;
t437 = pkin(7) * t748 - t504 * t676;
t414 = -t785 * pkin(2) + t437;
t609 = t433 * pkin(3) - t435 * qJ(4);
t238 = t414 + t609;
t439 = pkin(7) * t747 + t502 * t676;
t415 = t785 * pkin(8) + t439;
t728 = t503 * t415;
t612 = -pkin(2) * t504 - pkin(8) * t502;
t416 = (-pkin(1) + t612) * t498;
t730 = t501 * t416;
t261 = t728 + t730;
t241 = -qJ(4) * t747 + t261;
t117 = t238 * t499 - t241 * t497;
t825 = -t117 / 0.2e1;
t824 = -t211 / 0.2e1;
t821 = -t394 / 0.2e1;
t820 = t395 / 0.2e1;
t608 = -pkin(3) * t503 - qJ(4) * t501;
t462 = -pkin(2) + t608;
t443 = t499 * t462;
t749 = t497 * t503;
t396 = -pkin(8) * t749 + t443;
t819 = -t396 / 0.2e1;
t745 = t499 * t503;
t480 = pkin(8) * t745;
t397 = t497 * t462 + t480;
t818 = -t397 / 0.2e1;
t817 = -t422 / 0.2e1;
t424 = t449 * t503;
t816 = -t424 / 0.2e1;
t425 = t559 * t501;
t815 = -t425 / 0.2e1;
t814 = t425 / 0.2e1;
t426 = t559 * t503;
t813 = t426 / 0.2e1;
t812 = -t433 / 0.2e1;
t810 = -t435 / 0.2e1;
t809 = t435 / 0.2e1;
t807 = -t559 / 0.2e1;
t806 = -t449 / 0.2e1;
t677 = pkin(4) * t497 + pkin(8);
t454 = t677 * t501;
t804 = -t454 / 0.2e1;
t803 = t454 / 0.2e1;
t802 = -t468 / 0.2e1;
t488 = -pkin(4) * t499 - pkin(3);
t801 = -t488 / 0.2e1;
t800 = t488 / 0.2e1;
t799 = -t497 / 0.2e1;
t798 = t499 / 0.2e1;
t796 = t501 / 0.2e1;
t792 = pkin(8) * t433;
t791 = t503 * pkin(8);
t790 = -qJD(5) / 0.2e1;
t789 = pkin(9) + qJ(4);
t260 = t501 * t415 - t503 * t416;
t242 = pkin(3) * t747 + t260;
t172 = t716 * pkin(4) + t242;
t275 = t497 * t433;
t209 = -pkin(4) * t275 + t261;
t518 = pkin(4) * t433 - pkin(9) * t352 + t117;
t118 = t497 * t238 + t499 * t241;
t88 = -t716 * pkin(9) + t118;
t46 = t500 * t518 + t793 * t88;
t310 = pkin(3) * t435 + qJ(4) * t433;
t152 = -t499 * t260 + t497 * t310;
t127 = pkin(9) * t275 + t152;
t672 = t793 * t127;
t151 = t260 * t497 + t499 * t310;
t754 = t433 * t499;
t104 = pkin(4) * t435 + pkin(9) * t754 + t151;
t743 = t500 * t104;
t52 = t672 + t743;
t7 = -t172 * t830 - t209 * t98 - t433 * t52 - t435 * t46;
t788 = t7 * qJD(1);
t264 = t449 * t433;
t45 = t500 * t88 - t793 * t518;
t675 = t793 * t104;
t740 = t500 * t127;
t562 = t675 - t740;
t8 = -t172 * t264 + t209 * t211 + t433 * t562 - t45 * t435;
t787 = t8 * qJD(1);
t427 = t501 * t437;
t438 = (pkin(2) * t502 - pkin(8) * t504) * t498;
t727 = t503 * t438;
t628 = t427 + t727;
t267 = -pkin(3) * t748 - t628;
t206 = pkin(4) * t394 + t267;
t250 = t666 - t734;
t428 = t501 * t438;
t429 = t503 * t437;
t715 = t428 - t429;
t266 = qJ(4) * t748 + t715;
t467 = pkin(3) * t501 - qJ(4) * t503;
t315 = t467 * t747 + t439;
t156 = t499 * t266 + t497 * t315;
t126 = -pkin(9) * t394 + t156;
t673 = t793 * t126;
t155 = -t497 * t266 + t499 * t315;
t678 = t501 * t747;
t115 = pkin(4) * t678 - t395 * pkin(9) + t155;
t742 = t500 * t115;
t56 = t673 + t742;
t9 = t172 * t250 - t206 * t98 - t56 * t433 - t46 * t678;
t786 = t9 * qJD(1);
t25 = -t172 * t211 + t433 * t45;
t784 = qJD(1) * t25;
t26 = -t172 * t98 - t433 * t46;
t783 = qJD(1) * t26;
t47 = -t117 * t352 - t118 * t716;
t782 = qJD(1) * t47;
t755 = t425 * t433;
t650 = t755 / 0.2e1;
t73 = t650 - t843;
t781 = qJD(1) * t73;
t74 = t650 - t842;
t780 = qJD(1) * t74;
t90 = -t211 * t435 + t264 * t433;
t779 = qJD(1) * t90;
t91 = -t433 * t830 - t435 * t98;
t778 = qJD(1) * t91;
t249 = t374 + t733;
t674 = t793 * t115;
t741 = t500 * t126;
t55 = t674 - t741;
t10 = t172 * t249 + t206 * t211 + t55 * t433 - t45 * t678;
t777 = t10 * qJD(1);
t776 = t117 * t499;
t775 = t118 * t497;
t21 = t117 * t151 + t118 * t152 + t242 * t261;
t774 = t21 * qJD(1);
t22 = -t117 * t395 - t118 * t394 - t155 * t352 - t156 * t716;
t769 = t22 * qJD(1);
t23 = -t152 * t716 - t151 * t352 + (t775 + t776) * t433;
t768 = t23 * qJD(1);
t24 = t117 * t155 + t118 * t156 + t242 * t267;
t767 = t24 * qJD(1);
t766 = t242 * t503;
t765 = t250 * t449;
t764 = t261 * t501;
t763 = t267 * t497;
t762 = t267 * t499;
t35 = t117 * t435 + t261 * t716 + (-t242 * t497 + t151) * t433;
t761 = t35 * qJD(1);
t36 = -t118 * t435 + t261 * t352 + (-t242 * t499 - t152) * t433;
t760 = t36 * qJD(1);
t37 = t117 * t678 + t155 * t433 + t242 * t394 + t267 * t716;
t759 = t37 * qJD(1);
t38 = -t118 * t678 - t156 * t433 + t242 * t395 + t267 * t352;
t758 = t38 * qJD(1);
t757 = t414 * t503;
t492 = t498 ^ 2;
t496 = t504 ^ 2;
t752 = t492 * t496;
t751 = t492 * t502;
t750 = t497 * t501;
t746 = t499 * t501;
t478 = pkin(8) * t750;
t400 = t499 * t467 + t478;
t337 = pkin(4) * t501 - pkin(9) * t745 + t400;
t739 = t500 * t337;
t401 = -pkin(8) * t746 + t497 * t467;
t355 = -pkin(9) * t749 + t401;
t735 = t500 * t355;
t57 = -t211 * t250 + t249 * t98;
t725 = t57 * qJD(1);
t58 = t211 * t830 - t264 * t98;
t724 = t58 * qJD(1);
t567 = -t813 * t98 - t814 * t830;
t60 = -t765 / 0.2e1 + t567;
t723 = t60 * qJD(1);
t81 = t260 * t748 - t414 * t678 - t439 * t433 + t628 * t747;
t722 = t81 * qJD(1);
t82 = t439 * t435 + (-t261 * t502 + (t715 + t757) * t504) * t498;
t721 = t82 * qJD(1);
t92 = -t211 * t678 - t249 * t433;
t720 = t92 * qJD(1);
t93 = t250 * t433 - t678 * t98;
t719 = t93 * qJD(1);
t474 = t497 ^ 2 + t499 ^ 2;
t494 = t501 ^ 2;
t476 = t503 ^ 2 - t494;
t153 = -t260 * t747 - t414 * t433;
t714 = qJD(1) * t153;
t154 = -t261 * t747 - t414 * t435;
t713 = qJD(1) * t154;
t711 = qJD(1) * t504;
t710 = qJD(2) * t425;
t709 = qJD(2) * t498;
t708 = qJD(2) * t504;
t706 = qJD(3) * t449;
t705 = qJD(3) * t488;
t704 = qJD(3) * t497;
t703 = qJD(3) * t499;
t702 = qJD(3) * t501;
t701 = qJD(3) * t503;
t700 = qJD(4) * t433;
t699 = qJD(4) * t503;
t698 = qJD(5) * t425;
t697 = qJD(5) * t433;
t696 = qJD(5) * t449;
t642 = t747 / 0.2e1;
t616 = t497 * t642;
t640 = t746 / 0.2e1;
t183 = t802 + t433 * t640 + (t616 + t832) * t503;
t695 = t183 * qJD(1);
t638 = t744 / 0.2e1;
t644 = t748 / 0.2e1;
t184 = (t498 * t638 + t836) * t503 + (t644 + t649) * t497;
t694 = t184 * qJD(1);
t532 = t806 + t547;
t187 = t532 * t433;
t693 = t187 * qJD(3);
t226 = -t433 * t503 - t435 * t501;
t251 = t226 * t747;
t692 = t251 * qJD(1);
t340 = -t433 * t748 + t501 * t752;
t691 = t340 * qJD(1);
t341 = -t435 * t748 + t503 * t752;
t690 = t341 * qJD(1);
t366 = pkin(1) * t751 + t439 * t785;
t689 = t366 * qJD(1);
t367 = t492 * pkin(1) * t504 - t437 * t785;
t688 = t367 * qJD(1);
t685 = t435 * qJD(3);
t436 = t559 * qJD(5);
t448 = (-t502 ^ 2 + t496) * t492;
t684 = t448 * qJD(1);
t683 = t498 * qJD(3);
t682 = t501 * qJD(2);
t680 = pkin(8) * t701;
t679 = t791 / 0.2e1;
t671 = t793 * t337;
t667 = t793 * t355;
t661 = t352 * t686;
t659 = t498 * t711;
t658 = t498 * t708;
t657 = t504 * t683;
t656 = t501 * t699;
t655 = t492 * t711;
t654 = t502 * t709;
t653 = t501 * t701;
t652 = -t766 / 0.2e1;
t651 = t766 / 0.2e1;
t648 = -t750 / 0.2e1;
t647 = t750 / 0.2e1;
t646 = -t749 / 0.2e1;
t645 = -t748 / 0.2e1;
t643 = -t747 / 0.2e1;
t641 = -t746 / 0.2e1;
t639 = t745 / 0.2e1;
t637 = 0.2e1 * t822;
t636 = t428 / 0.2e1 - t429 / 0.2e1;
t635 = pkin(8) * t716;
t634 = t789 * t497;
t631 = t785 * qJD(1);
t390 = t422 * t681;
t630 = qJD(1) * t841 - t390;
t629 = -qJD(1) * t840 - t390;
t292 = t531 * t503;
t391 = t425 * t681;
t626 = qJD(3) * t292 + t391;
t625 = pkin(8) * t642;
t624 = -qJD(5) - t686;
t623 = qJD(4) + t705;
t622 = t708 * t751;
t621 = t502 * t655;
t620 = t503 * t659;
t619 = t501 * t643;
t618 = t501 * t642;
t617 = qJ(4) * t643;
t615 = t433 * t641;
t614 = t498 * t631;
t613 = t785 * t709;
t611 = t427 / 0.2e1 + t727 / 0.2e1;
t610 = -t417 / 0.2e1 - t470 / 0.2e1 - t716 / 0.2e1;
t607 = -qJD(3) + t659;
t466 = t789 * t499;
t358 = t466 * t500 + t793 * t634;
t353 = -pkin(9) * t750 + t397;
t519 = -pkin(9) * t746 + t443 + (-pkin(8) * t497 - pkin(4)) * t503;
t203 = t353 * t500 - t793 * t519;
t455 = t677 * t503;
t561 = t671 - t735;
t505 = t172 * t816 + t203 * t809 + t209 * t817 - t264 * t804 + t455 * t824 + t561 * t812 + t562 * t794;
t569 = t206 * t807 + t249 * t800;
t1 = (t358 * t643 + t45 / 0.2e1) * t501 + t505 + t569;
t65 = t203 * t501 - t455 * t422 - t454 * t424 + t503 * t561;
t606 = -t1 * qJD(1) - t65 * qJD(2);
t359 = t793 * t466 - t500 * t634;
t204 = t793 * t353 + t500 * t519;
t207 = t667 + t739;
t506 = t172 * t813 + t204 * t810 + t207 * t812 + t209 * t814 - t830 * t803 - t455 * t98 / 0.2e1 + t52 * t794;
t568 = t206 * t806 + t250 * t801;
t4 = (-t46 / 0.2e1 + t359 * t642) * t501 + t506 + t568;
t66 = -t204 * t501 + t207 * t503 + t425 * t455 + t426 * t454;
t605 = t4 * qJD(1) + t66 * qJD(2);
t604 = t501 * t617;
t125 = (t396 * t503 + t400 * t501) * t499 + (t397 * t503 + t401 * t501) * t497;
t544 = t400 * t822 + t401 * t836;
t5 = (qJ(4) * t821 + t156 / 0.2e1 + t396 * t812 + t151 * t796 + t117 * t794) * t499 + (qJ(4) * t820 - t155 / 0.2e1 + t397 * t812 + t152 * t796 + t118 * t794) * t497 + t544;
t603 = t5 * qJD(1) + t125 * qJD(2);
t524 = t172 * t805 + t359 * t812 - t800 * t98;
t552 = -t740 / 0.2e1 + t675 / 0.2e1;
t27 = -t524 + t552;
t520 = t359 * t794 + t425 * t800 + t449 * t803;
t549 = -t735 / 0.2e1 + t671 / 0.2e1;
t83 = -t520 + t549;
t602 = t27 * qJD(1) + t83 * qJD(2);
t525 = t172 * t808 + t211 * t801 + t358 * t811;
t555 = -t743 / 0.2e1 - t672 / 0.2e1;
t28 = -t525 + t555;
t521 = t358 * t795 - t422 * t800 - t559 * t804;
t551 = -t739 / 0.2e1 - t667 / 0.2e1;
t84 = -t521 + t551;
t601 = t28 * qJD(1) + t84 * qJD(2);
t600 = -t151 * t497 + t152 * t499;
t599 = -t400 * t497 + t401 * t499;
t598 = t631 + qJD(2);
t510 = t400 * t825 - t118 * t401 / 0.2e1 + t151 * t819 + t152 * t818;
t570 = t155 * t799 + t156 * t798;
t513 = t570 * qJ(4) + t267 * t826;
t11 = (-t764 / 0.2e1 + t652) * pkin(8) + t510 + t513;
t142 = pkin(8) ^ 2 * t501 * t503 + t396 * t400 + t397 * t401;
t597 = -t11 * qJD(1) + t142 * qJD(2);
t511 = t172 * t814 + t204 * t812 + t46 * t794 - t803 * t98;
t553 = -t741 / 0.2e1 + t674 / 0.2e1;
t13 = -t511 + t553;
t133 = -t204 * t503 - t454 * t425;
t596 = qJD(1) * t13 + qJD(2) * t133;
t132 = -t203 * t503 - t422 * t454;
t512 = t172 * t817 + t203 * t811 + t211 * t804 + t45 * t795;
t554 = -t742 / 0.2e1 - t673 / 0.2e1;
t14 = -t512 + t554;
t595 = qJD(1) * t14 - qJD(2) * t132;
t508 = t652 + (t617 + t792 / 0.2e1 - t261 / 0.2e1) * t501;
t527 = t117 * t797 + t396 * t810 + t400 * t812;
t576 = pkin(3) * t821 - t762 / 0.2e1;
t17 = (t151 / 0.2e1 - t635 / 0.2e1) * t503 + t508 * t497 + t527 + t576;
t224 = -t396 * t501 + (t400 - 0.2e1 * t478) * t503;
t594 = t17 * qJD(1) + t224 * qJD(2);
t526 = t118 * t796 + t397 * t809 + t401 * t811;
t575 = t395 * t826 + t763 / 0.2e1;
t18 = (-t152 / 0.2e1 + pkin(8) * t832) * t503 + t508 * t499 + t526 + t575;
t225 = t401 * t503 + (-t397 + 0.2e1 * t480) * t501;
t593 = t18 * qJD(1) - t225 * qJD(2);
t193 = -t422 * t426 - t424 * t425;
t509 = -t264 * t815 + t426 * t824 - t816 * t98 - t817 * t830;
t566 = t249 * t806 + t250 * t808;
t32 = t509 - t566;
t592 = t32 * qJD(1) + t193 * qJD(2);
t237 = (t396 * t499 + t397 * t497) * t501;
t537 = pkin(3) * t645 - t611;
t565 = -t352 * t819 - t716 * t818;
t33 = (t775 / 0.2e1 + t776 / 0.2e1) * t501 + t537 + t565;
t591 = qJD(1) * t33 + qJD(2) * t237;
t268 = t422 * t501 - t424 * t503;
t523 = -t264 * t795 - t422 * t810 + t424 * t811;
t61 = (-t559 * t643 + t211 / 0.2e1) * t501 + t523;
t590 = qJD(1) * t61 + qJD(2) * t268;
t269 = -t425 * t501 + t426 * t503;
t522 = t425 * t810 + t426 * t812 - t794 * t830;
t62 = (t449 * t642 + t98 / 0.2e1) * t501 + t522;
t589 = qJD(1) * t62 + qJD(2) * t269;
t445 = t474 * t494;
t89 = (t497 * t610 - t499 * t637) * t501;
t588 = qJD(1) * t89 - qJD(2) * t445;
t97 = t497 * t637 + t499 * t610;
t587 = qJD(1) * t97 + qJD(3) * t474;
t291 = t532 * t503;
t586 = qJD(1) * t187 - qJD(2) * t291;
t585 = qJD(1) * t188 - qJD(2) * t292;
t189 = (t807 + t546) * t433;
t293 = t500 * t646 - t559 * t795 + t793 * t639;
t584 = qJD(1) * t189 + qJD(2) * t293;
t190 = t533 * t433;
t583 = -qJD(1) * t190 + qJD(2) * t294;
t253 = t433 ^ 2 - t435 ^ 2;
t582 = qJD(1) * t253 + qJD(2) * t226;
t581 = qJD(1) * t226 + qJD(2) * t476;
t580 = t681 - t686;
t579 = qJD(1) * t435 + t682;
t578 = t706 + t710;
t577 = pkin(2) * t810 + t414 * t796;
t432 = t503 * t644 + t633 / 0.2e1;
t574 = t432 * qJD(1) + t682 / 0.2e1;
t573 = t498 * t612;
t514 = pkin(2) * t811 + t757 / 0.2e1 + pkin(8) * t619;
t147 = t514 + t636;
t572 = pkin(2) * t681 - qJD(1) * t147;
t149 = -t427 / 0.2e1 + (t625 - t438 / 0.2e1) * t503 + t577;
t571 = pkin(2) * t682 - qJD(1) * t149;
t564 = t396 * t799 + t397 * t798;
t560 = -t730 / 0.2e1 - t728 / 0.2e1;
t557 = qJD(3) * t291 - t391 + t698;
t556 = t501 * t790 + t627;
t49 = t211 * t422 + t425 * t98;
t54 = -t211 * t559 + t449 * t98;
t67 = t211 ^ 2 - t98 ^ 2;
t545 = qJD(1) * t67 + qJD(2) * t49 + qJD(3) * t54;
t116 = t352 ^ 2 + t716 ^ 2;
t543 = qJD(1) * t116 - qJD(2) * t89 + qJD(3) * t97;
t137 = -t422 * t559 - t449 * t425;
t235 = t422 ^ 2 - t425 ^ 2;
t542 = qJD(1) * t49 + qJD(2) * t235 + qJD(3) * t137;
t274 = -t449 ^ 2 + t559 ^ 2;
t541 = qJD(1) * t54 + qJD(2) * t137 + qJD(3) * t274;
t233 = t679 - t564;
t507 = (-t352 * t799 - t716 * t798) * qJ(4) + t117 * t799 + t118 * t798;
t40 = t507 + t560;
t460 = t474 * qJ(4);
t540 = qJD(1) * t40 - qJD(2) * t233 + qJD(3) * t460;
t99 = -t637 * t500 + 0.2e1 * t823;
t539 = qJD(1) * t99 - qJD(2) * t422 + qJD(3) * t559;
t538 = -t578 + t712;
t69 = t211 * t815 - t817 * t98;
t72 = t211 * t806 - t808 * t98;
t536 = -qJD(2) * t69 - qJD(3) * t72 - t211 * t712;
t535 = t546 * t433;
t208 = -t422 * t805 + t425 * t808;
t530 = qJD(1) * t69 + qJD(3) * t208 - t422 * t710;
t529 = -qJD(1) * t72 - qJD(2) * t208 - t559 * t706;
t528 = qJD(5) * t432 + t558;
t517 = qJD(3) * t608 + t699;
t489 = t702 / 0.2e1;
t471 = qJD(2) * t644;
t418 = (t655 - t683 / 0.2e1) * t502;
t349 = qJD(2) * t618 + t432 * qJD(3);
t306 = -t755 / 0.2e1;
t283 = t293 * qJD(3);
t234 = t679 + t564;
t221 = t226 * qJD(3);
t205 = t208 * qJD(5);
t192 = -t830 / 0.2e1 + t535;
t191 = t830 / 0.2e1 + t535;
t186 = -t352 * t795 + t503 * t616 + t615 + t802;
t185 = t433 * t647 - t716 * t794 + (t503 * t638 + t729 / 0.2e1) * t498;
t150 = t503 * t625 + t577 + t611;
t148 = t514 - t636;
t134 = t137 * qJD(5);
t100 = t823 + t833 / 0.2e1;
t96 = t97 * qJD(4);
t87 = t89 * qJD(4);
t86 = t521 + t551;
t85 = t520 + t549;
t80 = t306 + t843;
t79 = t306 + t842;
t71 = t72 * qJD(5);
t68 = t69 * qJD(5);
t64 = t449 * t618 - t796 * t98 - t522;
t63 = t211 * t797 - t559 * t619 - t523;
t59 = t765 / 0.2e1 + t567;
t53 = t54 * qJD(5);
t48 = t49 * qJD(5);
t39 = t507 - t560;
t34 = t117 * t641 + t118 * t648 + t537 - t565;
t31 = t509 + t566;
t30 = t525 + t555;
t29 = t524 + t552;
t20 = pkin(8) * t615 + t152 * t794 + t242 * t639 + t261 * t640 + t352 * t679 + t499 * t604 - t526 + t575;
t19 = t151 * t795 + t261 * t647 + t635 * t794 + t648 * t792 - t527 + t576 + (t604 + t651) * t497;
t16 = t511 + t553;
t15 = t512 + t554;
t12 = -t510 + t513 + (t764 / 0.2e1 + t651) * pkin(8);
t6 = t397 * t275 / 0.2e1 + t152 * t648 + t118 * t646 + t396 * t754 / 0.2e1 + t151 * t641 + t745 * t825 + (t497 * t820 + t499 * t821) * qJ(4) - t544 + t570;
t3 = t359 * t619 + t46 * t797 + t506 - t568;
t2 = t358 * t619 + t45 * t797 - t505 + t569;
t41 = [0, 0, 0, t622, t448 * qJD(2), t504 * t613, -t502 * t613, 0, -t366 * qJD(2), -t367 * qJD(2), (-t433 * qJD(3) + t503 * t658) * t435, qJD(2) * t251 + qJD(3) * t253, -t341 * qJD(2) + t433 * t657, t340 * qJD(2) + t435 * t657, -t622, -qJD(2) * t81 - qJD(3) * t154, qJD(2) * t82 + qJD(3) * t153, qJD(2) * t37 + qJD(3) * t35 - t352 * t700, qJD(2) * t38 + qJD(3) * t36 + t700 * t716, qJD(2) * t22 + qJD(3) * t23 + qJD(4) * t116, qJD(2) * t24 + qJD(3) * t21 + qJD(4) * t47, -(qJD(2) * t250 - qJD(3) * t830 - qJD(5) * t211) * t98, qJD(2) * t57 + qJD(3) * t58 + qJD(5) * t67, qJD(2) * t93 + qJD(3) * t91 - t211 * t697, qJD(2) * t92 + qJD(3) * t90 + t697 * t98, (t501 * t658 + t685) * t433, qJD(2) * t10 + qJD(3) * t8 + qJD(5) * t26 + t700 * t98, qJD(2) * t9 + qJD(3) * t7 + qJD(5) * t25 + t211 * t700; 0, 0, 0, t621, t684, t598 * t747, -t598 * t748, 0, -qJD(2) * t439 - t689, qJD(2) * t437 - t688, t498 * t579 * t726 + t827, t476 * t658 + t221 + t692, t501 * t654 - t690, t503 * t654 + t691, -t418, -t722 + (-t439 * t503 + t501 * t573) * qJD(2) + t150 * qJD(3), t721 + (t439 * t501 + t503 * t573) * qJD(2) + t148 * qJD(3), -t155 * t681 + t759 + t19 * qJD(3) + t186 * qJD(4) + (pkin(8) * t394 + t396 * t747 + t763) * t682, t156 * t681 + t758 + t20 * qJD(3) + t185 * qJD(4) + (pkin(8) * t395 - t397 * t747 + t762) * t682, t769 + (-t397 * t394 - t396 * t395 + (-t155 * t499 - t156 * t497) * t501) * qJD(2) + t6 * qJD(3) - t87, t767 + (pkin(8) * t267 * t501 + t155 * t396 + t156 * t397) * qJD(2) + t12 * qJD(3) + t34 * qJD(4), t59 * qJD(3) + t68 + (t710 - t712) * t250, t725 + (-t249 * t425 - t250 * t422) * qJD(2) + t31 * qJD(3) + t48, t719 + (-t250 * t503 + t425 * t678) * qJD(2) + t64 * qJD(3) + t840 * qJD(5), t720 + (t249 * t503 - t422 * t678) * qJD(2) + t63 * qJD(3) + t80 * qJD(5), -t827 + (qJD(5) / 0.2e1 - t580) * t678, t777 + (-t203 * t678 + t206 * t422 + t454 * t249 - t55 * t503) * qJD(2) + t2 * qJD(3) + t79 * qJD(4) + t16 * qJD(5), t786 + (-t204 * t678 + t206 * t425 + t454 * t250 + t56 * t503) * qJD(2) + t3 * qJD(3) + t841 * qJD(4) + t15 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t558, t582, t607 * t433, t607 * t435, t471, qJD(2) * t150 - qJD(3) * t261 - t713, qJD(2) * t148 + qJD(3) * t260 + t714, t761 + t19 * qJD(2) + (-t261 * t499 + t497 * t609) * qJD(3) - t275 * qJD(4), t261 * t704 + t760 + t20 * qJD(2) + (qJD(3) * t609 - t700) * t499, t6 * qJD(2) + qJD(3) * t600 + t768 + t96, t774 + t12 * qJD(2) + (-t261 * pkin(3) + qJ(4) * t600) * qJD(3) + t39 * qJD(4), t59 * qJD(2) + t71 - (t706 - t712) * t830, t724 + t31 * qJD(2) + (t264 * t449 - t559 * t830) * qJD(3) + t53, qJD(2) * t64 + qJD(5) * t191 + t449 * t685 + t778, qJD(2) * t63 + qJD(5) * t187 + t559 * t685 + t779, t528, t787 + t2 * qJD(2) + (-t209 * t559 - t264 * t488 - t358 * t435) * qJD(3) - t188 * qJD(4) + t29 * qJD(5), t788 + t3 * qJD(2) + (t209 * t449 - t359 * t435 - t488 * t830) * qJD(3) + t192 * qJD(4) + t30 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t186 - qJD(3) * t275 - t661, t185 * qJD(2) + (qJD(1) * t716 - t703) * t433, t543, qJD(2) * t34 + qJD(3) * t39 + t782, 0, 0, 0, 0, 0, qJD(2) * t79 - t844, qJD(3) * t192 + qJD(5) * t100 + t846; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t536, t545, t191 * qJD(3) + t211 * t624 + t848, t80 * qJD(2) - t624 * t98 + t693, t349, qJD(2) * t16 + qJD(3) * t29 - qJD(5) * t46 + t783, qJD(2) * t15 + qJD(3) * t30 + qJD(4) * t100 + qJD(5) * t45 + t784; 0, 0, 0, -t621, -t684, -t504 * t614, t502 * t614, 0, t689, t688, -t435 * t620 + t827, t221 - t692, -t503 * t657 + t690, t501 * t657 - t691, t418, qJD(3) * t149 + t722, qJD(3) * t147 - t721, -qJD(3) * t17 - qJD(4) * t183 - t759, -qJD(3) * t18 - qJD(4) * t184 - t758, -qJD(3) * t5 - t769 - t87, -qJD(3) * t11 - qJD(4) * t33 - t767, qJD(3) * t60 + t250 * t712 + t68, qJD(3) * t32 + t48 - t725, -qJD(3) * t62 - qJD(5) * t841 - t719, -qJD(3) * t61 - qJD(5) * t74 - t720, -t827 + (-t686 + t790) * t678, -qJD(3) * t1 - qJD(4) * t73 - qJD(5) * t13 - t777, qJD(3) * t4 - qJD(4) * t840 - qJD(5) * t14 - t786; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t653, t476 * qJD(3), 0, 0, 0, -pkin(2) * t702, -pkin(2) * t701, -qJD(3) * t224 + t499 * t656, qJD(3) * t225 - t497 * t656, -qJD(3) * t125 + qJD(4) * t445, qJD(3) * t142 - qJD(4) * t237, (qJD(3) * t426 - t687) * t425, qJD(3) * t193 + qJD(5) * t235, -qJD(3) * t269 + t503 * t687, -qJD(3) * t268 + t503 * t698, -t653, -qJD(3) * t65 - qJD(5) * t133 + t425 * t699, qJD(3) * t66 + qJD(5) * t132 - t422 * t699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t627, t581, -t607 * t503, t607 * t501, qJD(1) * t645, -t571 - t680, pkin(8) * t702 - t572, -t480 * qJD(3) + t497 * t517 - t594, t497 * t680 + t499 * t517 - t593, qJD(3) * t599 - t603, (-pkin(3) * t791 + qJ(4) * t599) * qJD(3) + t234 * qJD(4) + t597, t426 * t578 + t205 + t723, (-t424 * t449 + t426 * t559) * qJD(3) + t134 + t592, -qJD(5) * t294 + t449 * t702 - t589, -qJD(5) * t291 + t559 * t702 - t590, -t556, (-t358 * t501 + t424 * t488 - t455 * t559) * qJD(3) + t292 * qJD(4) + t85 * qJD(5) + t606, (-t359 * t501 + t426 * t488 + t449 * t455) * qJD(3) + t293 * qJD(4) + t86 * qJD(5) + t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t695 + (t499 * t682 + t704) * t503, -t694 + (-t497 * t682 + t703) * t503, -t588, qJD(3) * t234 - t591, 0, 0, 0, 0, 0, t626 - t781, t283 + t629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t530, t542, -t630 + t828, -t557 - t780, qJD(1) * t619 + t489, qJD(3) * t85 - qJD(5) * t204 - t596, qJD(3) * t86 + qJD(5) * t203 - t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t558, -t582, t580 * t747, -t579 * t747, t471, -qJD(2) * t149 + t713, -qJD(2) * t147 - t714, qJD(2) * t17 - t761, qJD(2) * t18 - t760, qJD(2) * t5 - t768 + t96, qJD(2) * t11 + qJD(4) * t40 - t774, -qJD(2) * t60 - t712 * t830 + t71, -qJD(2) * t32 + t53 - t724, qJD(2) * t62 - qJD(5) * t189 - t778, qJD(2) * t61 - qJD(5) * t188 - t779, -t528, qJD(2) * t1 + qJD(4) * t187 - qJD(5) * t27 - t787, -qJD(2) * t4 - qJD(4) * t190 - qJD(5) * t28 - t788; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t627, -t581, t620, -t501 * t659, qJD(1) * t644, t571, t572, t594, t593, t603, -qJD(4) * t233 - t597, -t426 * t710 + t205 - t723, t134 - t592, -qJD(5) * t293 + t589, qJD(5) * t292 + t590, t556, -qJD(4) * t291 - qJD(5) * t83 - t606, qJD(4) * t294 - qJD(5) * t84 - t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t474 * qJD(4), t460 * qJD(4), t449 * t436, t274 * qJD(5), 0, 0, 0, t488 * t696, t488 * t436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t587, t540, 0, 0, 0, 0, 0, t586, t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t529, t541, t436 - t584, -t585 - t696, -t574, -qJD(5) * t359 + t449 * t705 - t602, qJD(5) * t358 + t559 * t705 - t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t183 + t661, qJD(2) * t184 - t686 * t716, -t543, qJD(2) * t33 - qJD(3) * t40 - t782, 0, 0, 0, 0, 0, qJD(2) * t73 - qJD(5) * t98 - t663 - t693, qJD(3) * t190 + qJD(5) * t99 - t662 + t848; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t477 * t499 + t695, t477 * t497 + t694, t588, qJD(3) * t233 + t591, 0, 0, 0, 0, 0, t557 + t781, -t629 + t828; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t587, -t540, 0, 0, 0, 0, 0, -t586 + t696, t436 - t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t538, t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t536, -t545, qJD(3) * t189 + t846, qJD(2) * t74 + t844, t349, qJD(2) * t13 + qJD(3) * t27 + qJD(4) * t98 - t783, qJD(2) * t14 + qJD(3) * t28 - qJD(4) * t99 - t784; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t530, -t542, t283 + t630, -t626 + t780, qJD(1) * t618 + t489, qJD(3) * t83 - qJD(4) * t425 + t596, qJD(3) * t84 + qJD(4) * t422 + t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t529, -t541, t584, t585, t574, -t449 * t623 + t602, -t559 * t623 + t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t538, -t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t41;
