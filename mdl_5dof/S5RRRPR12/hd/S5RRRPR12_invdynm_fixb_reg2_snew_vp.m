% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRPR12
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d5,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:42
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRPR12_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR12_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR12_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR12_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR12_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRRPR12_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:41:38
% EndTime: 2019-12-31 21:42:14
% DurationCPUTime: 37.76s
% Computational Cost: add. (341443->876), mult. (752904->1333), div. (0->0), fcn. (596723->12), ass. (0->622)
t1534 = sin(pkin(10));
t1539 = sin(qJ(3));
t1543 = cos(qJ(3));
t1537 = cos(pkin(5));
t1686 = qJD(1) * t1537;
t1632 = qJD(2) + t1686;
t1535 = sin(pkin(5));
t1540 = sin(qJ(2));
t1653 = t1535 * t1540;
t1643 = qJD(1) * t1653;
t1498 = t1539 * t1632 + t1543 * t1643;
t1544 = cos(qJ(2));
t1652 = t1535 * t1544;
t1522 = qJD(1) * t1652 - qJD(3);
t1536 = cos(pkin(10));
t1474 = t1498 * t1534 + t1536 * t1522;
t1475 = t1498 * t1536 - t1522 * t1534;
t1436 = t1475 * t1474;
t1683 = qJD(2) * qJD(1);
t1633 = t1544 * t1683;
t1645 = t1540 * qJDD(1);
t1504 = (t1633 + t1645) * t1535;
t1527 = qJDD(1) * t1537 + qJDD(2);
t1628 = -t1539 * t1504 + t1543 * t1527;
t1452 = qJD(3) * t1498 - t1628;
t1701 = -t1436 + t1452;
t1711 = t1534 * t1701;
t1710 = t1536 * t1701;
t1538 = sin(qJ(5));
t1542 = cos(qJ(5));
t1423 = t1542 * t1474 + t1475 * t1538;
t1425 = -t1474 * t1538 + t1475 * t1542;
t1362 = t1425 * t1423;
t1451 = qJDD(5) + t1452;
t1703 = -t1362 + t1451;
t1709 = t1538 * t1703;
t1708 = t1542 * t1703;
t1496 = t1539 * t1643 - t1543 * t1632;
t1440 = (t1496 * t1543 - t1498 * t1539) * t1522;
t1646 = qJDD(1) * t1544;
t1577 = t1540 * t1683 - t1646;
t1562 = t1577 * t1535;
t1556 = qJDD(3) + t1562;
t1707 = t1540 * t1440 - t1544 * t1556;
t1626 = t1632 ^ 2;
t1662 = t1498 * t1496;
t1550 = t1556 - t1662;
t1706 = t1539 * t1550;
t1705 = t1543 * t1550;
t1583 = -t1543 * t1504 - t1539 * t1527;
t1453 = -qJD(3) * t1496 - t1583;
t1434 = t1536 * t1453 + t1534 * t1556;
t1548 = t1534 * t1453 - t1536 * t1556;
t1312 = -t1423 * qJD(5) + t1542 * t1434 - t1538 * t1548;
t1492 = qJD(5) + t1496;
t1391 = t1492 * t1423;
t1702 = -t1391 + t1312;
t1448 = t1496 * t1474;
t1374 = -t1448 + t1434;
t1375 = t1448 + t1434;
t1486 = t1522 * t1498;
t1700 = t1452 - t1486;
t1485 = t1496 * t1522;
t1417 = t1453 + t1485;
t1449 = t1496 * t1475;
t1373 = -t1548 + t1449;
t1630 = t1538 * t1434 + t1542 * t1548;
t1267 = (qJD(5) - t1492) * t1425 + t1630;
t1699 = qJD(1) ^ 2;
t1421 = t1423 ^ 2;
t1422 = t1425 ^ 2;
t1698 = t1474 ^ 2;
t1473 = t1475 ^ 2;
t1490 = t1492 ^ 2;
t1697 = t1496 ^ 2;
t1495 = t1498 ^ 2;
t1696 = t1522 ^ 2;
t1531 = t1535 ^ 2;
t1695 = pkin(2) * t1540;
t1694 = pkin(2) * t1544;
t1693 = pkin(3) * t1539;
t1541 = sin(qJ(1));
t1545 = cos(qJ(1));
t1524 = g(1) * t1545 + t1541 * g(2);
t1690 = pkin(7) * t1535;
t1500 = -t1699 * pkin(1) + qJDD(1) * t1690 - t1524;
t1625 = -pkin(8) * t1540 - t1694;
t1687 = qJD(1) * t1535;
t1503 = t1625 * t1687;
t1523 = t1541 * g(1) - t1545 * g(2);
t1558 = qJDD(1) * pkin(1) + t1699 * t1690 + t1523;
t1552 = t1537 * t1558;
t1549 = -g(3) * t1653 + t1540 * t1552;
t1406 = t1527 * pkin(8) - t1626 * pkin(2) + (t1503 * t1687 + t1500) * t1544 + t1549;
t1689 = pkin(8) * t1544;
t1624 = -t1689 + t1695;
t1688 = t1537 * g(3);
t1547 = -t1504 * pkin(8) - t1688 + ((-pkin(1) - t1694) * qJDD(1) + ((t1537 * t1624 - t1690) * qJD(1) + (-t1689 + 0.2e1 * t1695) * qJD(2)) * qJD(1) - t1523) * t1535;
t1349 = t1543 * t1406 + t1539 * t1547;
t1462 = pkin(3) * t1496 - qJ(4) * t1498;
t1299 = -t1696 * pkin(3) + qJ(4) * t1556 - t1496 * t1462 + t1349;
t1629 = t1500 * t1540 - t1544 * t1552;
t1685 = qJD(1) * t1540;
t1405 = -t1527 * pkin(2) - t1626 * pkin(8) + (g(3) * t1544 + t1503 * t1685) * t1535 + t1629;
t1308 = t1700 * pkin(3) - t1417 * qJ(4) + t1405;
t1227 = 0.2e1 * qJD(4) * t1475 + t1299 * t1534 - t1536 * t1308;
t1197 = pkin(4) * t1701 - t1375 * pkin(9) - t1227;
t1228 = -0.2e1 * qJD(4) * t1474 + t1536 * t1299 + t1534 * t1308;
t1442 = pkin(4) * t1496 - pkin(9) * t1475;
t1203 = -t1698 * pkin(4) - pkin(9) * t1548 - t1496 * t1442 + t1228;
t1140 = -t1542 * t1197 + t1203 * t1538;
t1141 = t1197 * t1538 + t1203 * t1542;
t1098 = -t1140 * t1542 + t1141 * t1538;
t1692 = pkin(4) * t1098;
t1270 = t1391 + t1312;
t1211 = -t1267 * t1538 - t1270 * t1542;
t1691 = pkin(4) * t1211;
t1684 = qJD(1) * t1544;
t1682 = t1098 * t1534;
t1681 = t1098 * t1536;
t1348 = t1406 * t1539 - t1543 * t1547;
t1298 = -t1556 * pkin(3) - t1696 * qJ(4) + t1462 * t1498 + qJDD(4) + t1348;
t1235 = pkin(4) * t1548 - t1698 * pkin(9) + t1442 * t1475 + t1298;
t1680 = t1235 * t1538;
t1679 = t1235 * t1542;
t1678 = t1298 * t1534;
t1677 = t1298 * t1536;
t1329 = t1362 + t1451;
t1676 = t1329 * t1538;
t1675 = t1329 * t1542;
t1378 = t1436 + t1452;
t1674 = t1378 * t1534;
t1673 = t1378 * t1536;
t1672 = t1405 * t1539;
t1671 = t1405 * t1543;
t1443 = -t1556 - t1662;
t1670 = t1443 * t1539;
t1669 = t1443 * t1543;
t1668 = t1452 * t1539;
t1667 = t1492 * t1425;
t1666 = t1492 * t1538;
t1665 = t1492 * t1542;
t1664 = t1496 * t1534;
t1663 = t1496 * t1536;
t1634 = t1540 * t1544 * t1699;
t1521 = t1531 * t1634;
t1501 = t1521 + t1527;
t1661 = t1501 * t1540;
t1660 = t1501 * t1544;
t1502 = -t1521 + t1527;
t1659 = t1502 * t1540;
t1658 = t1502 * t1544;
t1657 = t1522 * t1539;
t1656 = t1522 * t1543;
t1655 = t1531 * t1699;
t1654 = t1535 * t1527;
t1488 = t1535 * t1558 + t1688;
t1650 = t1540 * t1488;
t1649 = t1544 * t1488;
t1532 = t1540 ^ 2;
t1533 = t1544 ^ 2;
t1647 = t1532 + t1533;
t1644 = -pkin(3) * t1543 - pkin(2);
t1642 = t1539 * t1362;
t1641 = t1543 * t1362;
t1640 = t1539 * t1436;
t1639 = t1543 * t1436;
t1638 = t1540 * t1662;
t1637 = t1544 * t1662;
t1636 = t1532 * t1655;
t1635 = t1533 * t1655;
t1631 = 0.2e1 * qJD(2) + t1686;
t1099 = t1140 * t1538 + t1542 * t1141;
t1164 = t1227 * t1534 + t1536 * t1228;
t1253 = t1348 * t1539 + t1543 * t1349;
t1627 = -t1523 * t1541 - t1545 * t1524;
t1520 = qJDD(1) * t1545 - t1541 * t1699;
t1623 = -pkin(6) * t1520 - g(3) * t1541;
t1622 = -pkin(3) * t1298 + qJ(4) * t1164;
t1491 = -t1636 - t1626;
t1461 = -t1491 * t1540 - t1658;
t1621 = pkin(7) * t1461 - t1650;
t1508 = -t1626 - t1635;
t1471 = t1508 * t1544 - t1661;
t1620 = pkin(7) * t1471 + t1649;
t1619 = qJD(1) * t1632;
t1618 = t1531 * t1540 * t1633;
t1076 = t1099 * t1536 - t1682;
t1073 = t1076 * t1543 + t1235 * t1539;
t1075 = t1099 * t1534 + t1681;
t1617 = t1073 * t1540 - t1075 * t1544;
t1213 = -t1267 * t1542 + t1270 * t1538;
t1155 = -t1211 * t1534 + t1213 * t1536;
t1313 = -t1421 - t1422;
t1138 = t1155 * t1543 + t1313 * t1539;
t1153 = t1211 * t1536 + t1213 * t1534;
t1616 = t1138 * t1540 - t1153 * t1544;
t1266 = (qJD(5) + t1492) * t1425 + t1630;
t1210 = -t1266 * t1538 + t1542 * t1702;
t1212 = -t1266 * t1542 - t1538 * t1702;
t1154 = -t1210 * t1534 + t1212 * t1536;
t1361 = t1422 - t1421;
t1146 = t1154 * t1543 + t1361 * t1539;
t1152 = t1210 * t1536 + t1212 * t1534;
t1615 = t1146 * t1540 - t1152 * t1544;
t1148 = t1164 * t1543 + t1298 * t1539;
t1163 = -t1227 * t1536 + t1228 * t1534;
t1614 = t1148 * t1540 - t1163 * t1544;
t1352 = -t1490 - t1421;
t1246 = t1352 * t1538 + t1708;
t1247 = t1352 * t1542 - t1709;
t1201 = -t1246 * t1534 + t1247 * t1536;
t1166 = t1201 * t1543 + t1266 * t1539;
t1200 = t1246 * t1536 + t1247 * t1534;
t1613 = t1166 * t1540 - t1200 * t1544;
t1380 = -t1422 - t1490;
t1272 = t1380 * t1542 - t1676;
t1273 = -t1380 * t1538 - t1675;
t1209 = -t1272 * t1534 + t1273 * t1536;
t1171 = t1209 * t1543 + t1539 * t1702;
t1208 = t1272 * t1536 + t1273 * t1534;
t1612 = t1171 * t1540 - t1208 * t1544;
t1390 = -t1422 + t1490;
t1280 = t1390 * t1542 + t1709;
t1282 = -t1390 * t1538 + t1708;
t1217 = -t1280 * t1534 + t1282 * t1536;
t1177 = t1217 * t1543 + t1270 * t1539;
t1215 = t1280 * t1536 + t1282 * t1534;
t1611 = t1177 * t1540 - t1215 * t1544;
t1389 = t1421 - t1490;
t1281 = t1389 * t1538 + t1675;
t1283 = t1389 * t1542 - t1676;
t1218 = -t1281 * t1534 + t1283 * t1536;
t1178 = t1218 * t1543 - t1267 * t1539;
t1216 = t1281 * t1536 + t1283 * t1534;
t1610 = t1178 * t1540 - t1216 * t1544;
t1311 = -qJD(5) * t1425 - t1630;
t1262 = t1311 * t1542 + t1423 * t1666;
t1263 = -t1311 * t1538 + t1423 * t1665;
t1206 = -t1262 * t1534 + t1263 * t1536;
t1188 = t1206 * t1543 - t1642;
t1204 = t1262 * t1536 + t1263 * t1534;
t1609 = t1188 * t1540 - t1204 * t1544;
t1264 = t1312 * t1538 + t1425 * t1665;
t1265 = t1312 * t1542 - t1425 * t1666;
t1207 = -t1264 * t1534 + t1265 * t1536;
t1189 = t1207 * t1543 + t1642;
t1205 = t1264 * t1536 + t1265 * t1534;
t1608 = t1189 * t1540 - t1205 * t1544;
t1334 = (-t1423 * t1538 - t1425 * t1542) * t1492;
t1335 = (-t1423 * t1542 + t1425 * t1538) * t1492;
t1243 = -t1334 * t1534 + t1335 * t1536;
t1239 = t1243 * t1543 + t1451 * t1539;
t1242 = t1334 * t1536 + t1335 * t1534;
t1607 = t1239 * t1540 - t1242 * t1544;
t1303 = t1373 * t1536 + t1375 * t1534;
t1385 = t1473 + t1698;
t1251 = t1303 * t1543 - t1385 * t1539;
t1301 = t1373 * t1534 - t1375 * t1536;
t1606 = t1251 * t1540 - t1301 * t1544;
t1605 = t1253 * t1540 - t1405 * t1544;
t1397 = -t1697 - t1698;
t1320 = t1397 * t1536 - t1711;
t1372 = -t1449 - t1548;
t1255 = t1320 * t1543 - t1372 * t1539;
t1319 = t1397 * t1534 + t1710;
t1604 = t1255 * t1540 - t1319 * t1544;
t1302 = t1372 * t1536 - t1374 * t1534;
t1435 = t1473 - t1698;
t1259 = t1302 * t1543 + t1435 * t1539;
t1300 = t1372 * t1534 + t1374 * t1536;
t1603 = t1259 * t1540 - t1300 * t1544;
t1427 = -t1473 - t1697;
t1333 = -t1427 * t1534 - t1673;
t1261 = t1333 * t1543 + t1374 * t1539;
t1331 = t1427 * t1536 - t1674;
t1602 = t1261 * t1540 - t1331 * t1544;
t1447 = -t1473 + t1697;
t1345 = -t1447 * t1534 + t1710;
t1276 = t1345 * t1543 + t1375 * t1539;
t1343 = t1447 * t1536 + t1711;
t1601 = t1276 * t1540 - t1343 * t1544;
t1446 = -t1697 + t1698;
t1346 = t1446 * t1536 - t1674;
t1277 = t1346 * t1543 + t1373 * t1539;
t1344 = t1446 * t1534 + t1673;
t1600 = t1277 * t1540 - t1344 * t1544;
t1364 = t1474 * t1663 + t1534 * t1548;
t1323 = t1364 * t1543 - t1640;
t1363 = -t1474 * t1664 + t1536 * t1548;
t1599 = t1323 * t1540 + t1363 * t1544;
t1366 = t1434 * t1536 - t1475 * t1664;
t1324 = t1366 * t1543 + t1640;
t1365 = t1434 * t1534 + t1475 * t1663;
t1598 = t1324 * t1540 - t1365 * t1544;
t1252 = -t1348 * t1543 + t1349 * t1539;
t1382 = (-t1474 * t1536 + t1475 * t1534) * t1496;
t1354 = t1382 * t1543 + t1668;
t1381 = (-t1474 * t1534 - t1475 * t1536) * t1496;
t1597 = t1354 * t1540 - t1381 * t1544;
t1357 = -t1417 * t1539 - t1543 * t1700;
t1463 = t1495 - t1697;
t1596 = t1357 * t1540 - t1463 * t1544;
t1416 = (-qJD(3) - t1522) * t1498 + t1628;
t1418 = t1453 - t1485;
t1358 = t1416 * t1543 + t1418 * t1539;
t1441 = t1697 + t1495;
t1595 = t1358 * t1540 + t1441 * t1544;
t1458 = -t1697 - t1696;
t1384 = t1458 * t1543 - t1706;
t1594 = t1384 * t1540 - t1544 * t1700;
t1465 = -t1495 - t1696;
t1388 = -t1465 * t1539 + t1669;
t1419 = (qJD(3) - t1522) * t1496 + t1583;
t1593 = t1388 * t1540 + t1419 * t1544;
t1479 = -t1495 + t1696;
t1395 = -t1479 * t1539 + t1705;
t1592 = t1395 * t1540 - t1418 * t1544;
t1478 = t1697 - t1696;
t1396 = t1478 * t1543 + t1670;
t1414 = t1452 + t1486;
t1591 = t1396 * t1540 + t1414 * t1544;
t1459 = g(3) * t1652 + t1629;
t1460 = t1544 * t1500 + t1549;
t1590 = -t1459 * t1544 + t1460 * t1540;
t1386 = t1459 * t1540 + t1460 * t1544;
t1580 = t1535 * t1619;
t1512 = t1544 * t1580;
t1481 = t1512 + t1504;
t1511 = t1540 * t1580;
t1484 = -t1511 - t1562;
t1589 = t1481 * t1544 + t1484 * t1540;
t1482 = -t1512 + t1504;
t1483 = t1511 - t1562;
t1588 = -t1482 * t1544 + t1483 * t1540;
t1587 = t1491 * t1544 - t1659;
t1506 = t1626 - t1636;
t1586 = t1506 * t1544 + t1661;
t1585 = t1508 * t1540 + t1660;
t1507 = -t1626 + t1635;
t1584 = t1507 * t1540 + t1658;
t1582 = t1523 * t1545 - t1541 * t1524;
t1581 = pkin(4) * t1246 - t1140;
t1409 = -t1496 * t1656 + t1668;
t1579 = t1409 * t1540 + t1637;
t1411 = t1453 * t1543 + t1498 * t1657;
t1578 = t1411 * t1540 - t1637;
t1576 = pkin(3) * t1372 + qJ(4) * t1320 - t1677;
t1575 = -pkin(3) * t1374 + qJ(4) * t1333 + t1678;
t1574 = pkin(4) * t1272 - t1141;
t1097 = -pkin(4) * t1235 + pkin(9) * t1099;
t1063 = -pkin(9) * t1681 - qJ(4) * t1075 - t1097 * t1534;
t1066 = -pkin(3) * t1075 - t1692;
t1072 = t1076 * t1539 - t1235 * t1543;
t1048 = -pkin(8) * t1072 + t1063 * t1543 - t1066 * t1539;
t1551 = -pkin(3) * t1235 - pkin(9) * t1682 + qJ(4) * t1076 + t1097 * t1536;
t1053 = -pkin(2) * t1072 - t1551;
t1062 = t1073 * t1544 + t1075 * t1540;
t1573 = pkin(7) * t1062 + t1048 * t1540 + t1053 * t1544;
t1091 = -pkin(4) * t1313 + pkin(9) * t1213 + t1099;
t1095 = -pkin(9) * t1211 - t1098;
t1067 = -qJ(4) * t1153 - t1091 * t1534 + t1095 * t1536;
t1125 = -pkin(3) * t1153 - t1691;
t1137 = t1155 * t1539 - t1313 * t1543;
t1064 = -pkin(8) * t1137 + t1067 * t1543 - t1125 * t1539;
t1555 = -pkin(3) * t1313 + qJ(4) * t1155 + t1091 * t1536 + t1095 * t1534;
t1065 = -pkin(2) * t1137 - t1555;
t1102 = t1138 * t1544 + t1153 * t1540;
t1572 = pkin(7) * t1102 + t1064 * t1540 + t1065 * t1544;
t1160 = -pkin(4) * t1266 + pkin(9) * t1247 - t1679;
t1185 = -pkin(9) * t1246 + t1680;
t1103 = -qJ(4) * t1200 - t1160 * t1534 + t1185 * t1536;
t1106 = -pkin(3) * t1200 - t1581;
t1165 = t1201 * t1539 - t1266 * t1543;
t1074 = -pkin(8) * t1165 + t1103 * t1543 - t1106 * t1539;
t1554 = -pkin(3) * t1266 + qJ(4) * t1201 + t1160 * t1536 + t1185 * t1534;
t1090 = -pkin(2) * t1165 - t1554;
t1128 = t1166 * t1544 + t1200 * t1540;
t1571 = pkin(7) * t1128 + t1074 * t1540 + t1090 * t1544;
t1161 = -pkin(4) * t1702 + pkin(9) * t1273 + t1680;
t1198 = -pkin(9) * t1272 + t1679;
t1109 = -qJ(4) * t1208 - t1161 * t1534 + t1198 * t1536;
t1110 = -pkin(3) * t1208 - t1574;
t1170 = t1209 * t1539 - t1543 * t1702;
t1077 = -pkin(8) * t1170 + t1109 * t1543 - t1110 * t1539;
t1553 = -pkin(3) * t1702 + qJ(4) * t1209 + t1161 * t1536 + t1198 * t1534;
t1092 = -pkin(2) * t1170 - t1553;
t1132 = t1171 * t1544 + t1208 * t1540;
t1570 = pkin(7) * t1132 + t1077 * t1540 + t1092 * t1544;
t1147 = t1164 * t1539 - t1298 * t1543;
t1096 = -pkin(8) * t1147 + (-qJ(4) * t1543 + t1693) * t1163;
t1105 = -pkin(2) * t1147 - t1622;
t1115 = t1148 * t1544 + t1163 * t1540;
t1569 = pkin(7) * t1115 + t1096 * t1540 + t1105 * t1544;
t1149 = -qJ(4) * t1301 - t1163;
t1250 = t1303 * t1539 + t1385 * t1543;
t1124 = -pkin(8) * t1250 + t1149 * t1543 + t1301 * t1693;
t1560 = pkin(3) * t1385 + qJ(4) * t1303 + t1164;
t1129 = -pkin(2) * t1250 - t1560;
t1214 = t1251 * t1544 + t1301 * t1540;
t1568 = pkin(7) * t1214 + t1124 * t1540 + t1129 * t1544;
t1199 = -pkin(3) * t1319 + t1227;
t1233 = -qJ(4) * t1319 + t1678;
t1254 = t1320 * t1539 + t1372 * t1543;
t1133 = -pkin(8) * t1254 - t1199 * t1539 + t1233 * t1543;
t1172 = -pkin(2) * t1254 - t1576;
t1221 = t1255 * t1544 + t1319 * t1540;
t1567 = pkin(7) * t1221 + t1133 * t1540 + t1172 * t1544;
t1202 = -pkin(3) * t1331 + t1228;
t1234 = -qJ(4) * t1331 + t1677;
t1260 = t1333 * t1539 - t1374 * t1543;
t1136 = -pkin(8) * t1260 - t1202 * t1539 + t1234 * t1543;
t1179 = -pkin(2) * t1260 - t1575;
t1229 = t1261 * t1544 + t1331 * t1540;
t1566 = pkin(7) * t1229 + t1136 * t1540 + t1179 * t1544;
t1383 = t1458 * t1539 + t1705;
t1287 = -pkin(2) * t1383 + t1348;
t1332 = -pkin(8) * t1383 + t1672;
t1339 = t1384 * t1544 + t1540 * t1700;
t1565 = pkin(7) * t1339 + t1287 * t1544 + t1332 * t1540;
t1387 = t1465 * t1543 + t1670;
t1290 = -pkin(2) * t1387 + t1349;
t1340 = -pkin(8) * t1387 + t1671;
t1341 = t1388 * t1544 - t1419 * t1540;
t1564 = pkin(7) * t1341 + t1290 * t1544 + t1340 * t1540;
t1437 = t1482 * t1540 + t1483 * t1544;
t1563 = pkin(7) * t1437 + t1386;
t1356 = t1416 * t1539 - t1418 * t1543;
t1230 = -pkin(8) * t1356 - t1252;
t1314 = t1358 * t1544 - t1441 * t1540;
t1561 = pkin(7) * t1314 + t1230 * t1540 - t1356 * t1694;
t1240 = t1253 * t1544 + t1405 * t1540;
t1559 = pkin(7) * t1240 + t1252 * t1625;
t1530 = t1535 * t1531;
t1519 = t1541 * qJDD(1) + t1699 * t1545;
t1516 = t1537 * t1527;
t1510 = t1647 * t1655;
t1509 = (t1532 - t1533) * t1655;
t1505 = -pkin(6) * t1519 + g(3) * t1545;
t1487 = t1632 * t1647 * t1687;
t1480 = (t1631 * t1684 + t1645) * t1535;
t1477 = t1544 * t1504 - t1532 * t1580;
t1476 = (-t1533 * t1619 + t1540 * t1577) * t1535;
t1470 = t1507 * t1544 - t1659;
t1469 = -t1506 * t1540 + t1660;
t1457 = (t1537 * t1504 + (qJD(2) * t1537 * t1535 + (t1535 * t1537 ^ 2 + t1530) * qJD(1)) * t1684) * t1540;
t1456 = t1504 * t1653 + t1618;
t1455 = -t1531 * t1544 * t1577 - t1618;
t1454 = -t1530 * t1634 + (-t1631 * t1685 + t1646) * t1537 * t1652;
t1450 = t1543 * t1452;
t1439 = (t1496 * t1539 + t1498 * t1543) * t1522;
t1438 = -t1481 * t1540 + t1484 * t1544;
t1433 = t1535 * t1484 + t1537 * t1585;
t1432 = -t1535 * t1483 + t1537 * t1584;
t1431 = -t1535 * t1482 + t1537 * t1586;
t1430 = -t1537 * t1484 + t1535 * t1585;
t1429 = t1537 * t1483 + t1535 * t1584;
t1428 = t1537 * t1482 + t1535 * t1586;
t1413 = -t1535 * t1480 + t1537 * t1587;
t1412 = t1537 * t1480 + t1535 * t1587;
t1410 = t1453 * t1539 - t1498 * t1656;
t1408 = -t1496 * t1657 - t1450;
t1407 = t1544 * t1440 + t1540 * t1556;
t1404 = -t1535 * t1509 + t1537 * t1589;
t1403 = t1535 * t1510 + t1537 * t1588;
t1402 = t1537 * t1509 + t1535 * t1589;
t1401 = -t1537 * t1510 + t1535 * t1588;
t1394 = t1478 * t1539 - t1669;
t1393 = t1479 * t1543 + t1706;
t1370 = t1411 * t1544 + t1638;
t1369 = t1409 * t1544 - t1638;
t1368 = t1535 * t1488 + t1537 * t1590;
t1367 = -t1537 * t1488 + t1535 * t1590;
t1360 = -t1535 * t1439 + t1707 * t1537;
t1359 = t1537 * t1439 + t1707 * t1535;
t1355 = t1417 * t1543 - t1539 * t1700;
t1353 = t1382 * t1539 - t1450;
t1351 = t1396 * t1544 - t1414 * t1540;
t1350 = t1395 * t1544 + t1418 * t1540;
t1342 = -t1650 + (-t1430 * t1535 - t1433 * t1537) * pkin(7);
t1338 = -t1649 + (-t1412 * t1535 - t1413 * t1537) * pkin(7);
t1337 = -pkin(1) * t1430 + t1459 * t1535 + t1537 * t1620;
t1336 = pkin(1) * t1433 - t1459 * t1537 + t1535 * t1620;
t1327 = t1357 * t1544 + t1463 * t1540;
t1326 = -pkin(1) * t1412 + t1535 * t1460 + t1537 * t1621;
t1325 = pkin(1) * t1413 - t1537 * t1460 + t1535 * t1621;
t1322 = t1366 * t1539 - t1639;
t1321 = t1364 * t1539 + t1639;
t1318 = -t1535 * t1410 + t1537 * t1578;
t1317 = -t1535 * t1408 + t1537 * t1579;
t1316 = t1537 * t1410 + t1535 * t1578;
t1315 = t1537 * t1408 + t1535 * t1579;
t1310 = pkin(1) * t1368 + t1386 * t1690;
t1309 = pkin(7) * t1386 * t1537 - pkin(1) * t1367;
t1305 = -pkin(1) * t1401 + t1537 * t1563;
t1304 = pkin(1) * t1403 + t1535 * t1563;
t1297 = pkin(2) * t1419 + pkin(8) * t1388 + t1672;
t1295 = -t1535 * t1394 + t1537 * t1591;
t1294 = -t1535 * t1393 + t1537 * t1592;
t1293 = t1537 * t1394 + t1535 * t1591;
t1292 = t1537 * t1393 + t1535 * t1592;
t1291 = (-t1367 * t1535 - t1368 * t1537) * pkin(7);
t1289 = -pkin(2) * t1700 + pkin(8) * t1384 - t1671;
t1288 = (-t1401 * t1535 - t1403 * t1537) * pkin(7) - t1590;
t1286 = t1354 * t1544 + t1381 * t1540;
t1285 = -t1535 * t1387 + t1537 * t1593;
t1284 = t1537 * t1387 + t1535 * t1593;
t1279 = -t1535 * t1383 + t1537 * t1594;
t1278 = t1537 * t1383 + t1535 * t1594;
t1275 = t1346 * t1539 - t1373 * t1543;
t1274 = t1345 * t1539 - t1375 * t1543;
t1258 = t1302 * t1539 - t1435 * t1543;
t1257 = t1324 * t1544 + t1365 * t1540;
t1256 = t1323 * t1544 - t1363 * t1540;
t1249 = -t1535 * t1355 + t1537 * t1596;
t1248 = t1537 * t1355 + t1535 * t1596;
t1245 = -t1535 * t1356 + t1537 * t1595;
t1244 = t1537 * t1356 + t1535 * t1595;
t1241 = -pkin(2) * t1405 + pkin(8) * t1253;
t1238 = t1243 * t1539 - t1451 * t1543;
t1237 = -t1535 * t1353 + t1537 * t1597;
t1236 = t1537 * t1353 + t1535 * t1597;
t1232 = t1277 * t1544 + t1344 * t1540;
t1231 = t1276 * t1544 + t1343 * t1540;
t1225 = -t1535 * t1322 + t1537 * t1598;
t1224 = -t1535 * t1321 + t1537 * t1599;
t1223 = t1537 * t1322 + t1535 * t1598;
t1222 = t1537 * t1321 + t1535 * t1599;
t1220 = pkin(2) * t1441 + pkin(8) * t1358 + t1253;
t1219 = t1259 * t1544 + t1300 * t1540;
t1195 = -t1535 * t1252 + t1537 * t1605;
t1194 = t1537 * t1252 + t1535 * t1605;
t1193 = -t1535 * t1275 + t1537 * t1600;
t1192 = -t1535 * t1274 + t1537 * t1601;
t1191 = t1537 * t1275 + t1535 * t1600;
t1190 = t1537 * t1274 + t1535 * t1601;
t1187 = t1207 * t1539 - t1641;
t1186 = t1206 * t1539 + t1641;
t1184 = t1239 * t1544 + t1242 * t1540;
t1183 = -t1535 * t1260 + t1537 * t1602;
t1182 = t1537 * t1260 + t1535 * t1602;
t1181 = -t1535 * t1254 + t1537 * t1604;
t1180 = t1537 * t1254 + t1535 * t1604;
t1176 = t1218 * t1539 + t1267 * t1543;
t1175 = t1217 * t1539 - t1270 * t1543;
t1174 = -t1535 * t1258 + t1537 * t1603;
t1173 = t1537 * t1258 + t1535 * t1603;
t1169 = -t1535 * t1250 + t1537 * t1606;
t1168 = t1537 * t1250 + t1535 * t1606;
t1167 = -t1290 * t1540 + t1340 * t1544 + (-t1284 * t1535 - t1285 * t1537) * pkin(7);
t1162 = -t1287 * t1540 + t1332 * t1544 + (-t1278 * t1535 - t1279 * t1537) * pkin(7);
t1159 = -pkin(1) * t1284 - t1297 * t1535 + t1537 * t1564;
t1158 = pkin(1) * t1285 + t1297 * t1537 + t1535 * t1564;
t1157 = -pkin(1) * t1278 - t1289 * t1535 + t1537 * t1565;
t1156 = pkin(1) * t1279 + t1289 * t1537 + t1535 * t1565;
t1151 = -t1535 * t1238 + t1537 * t1607;
t1150 = t1537 * t1238 + t1535 * t1607;
t1145 = t1154 * t1539 - t1361 * t1543;
t1144 = t1356 * t1695 + t1230 * t1544 + (-t1244 * t1535 - t1245 * t1537) * pkin(7);
t1143 = t1189 * t1544 + t1205 * t1540;
t1142 = t1188 * t1544 + t1204 * t1540;
t1135 = t1178 * t1544 + t1216 * t1540;
t1134 = t1177 * t1544 + t1215 * t1540;
t1131 = -pkin(2) * t1331 + pkin(8) * t1261 + t1202 * t1543 + t1234 * t1539;
t1130 = -pkin(2) * t1319 + pkin(8) * t1255 + t1199 * t1543 + t1233 * t1539;
t1127 = -pkin(1) * t1244 - t1220 * t1535 + t1537 * t1561;
t1126 = pkin(1) * t1245 + t1220 * t1537 + t1535 * t1561;
t1123 = pkin(8) * t1251 + t1539 * t1149 + t1301 * t1644;
t1122 = -t1535 * t1187 + t1537 * t1608;
t1121 = -t1535 * t1186 + t1537 * t1609;
t1120 = t1537 * t1187 + t1535 * t1608;
t1119 = t1537 * t1186 + t1535 * t1609;
t1118 = t1624 * t1252 + (-t1194 * t1535 - t1195 * t1537) * pkin(7);
t1117 = -pkin(1) * t1194 - t1241 * t1535 + t1537 * t1559;
t1116 = pkin(1) * t1195 + t1241 * t1537 + t1535 * t1559;
t1114 = -t1535 * t1176 + t1537 * t1610;
t1113 = -t1535 * t1175 + t1537 * t1611;
t1112 = t1537 * t1176 + t1535 * t1610;
t1111 = t1537 * t1175 + t1535 * t1611;
t1108 = -t1535 * t1170 + t1537 * t1612;
t1107 = t1537 * t1170 + t1535 * t1612;
t1104 = t1146 * t1544 + t1152 * t1540;
t1101 = -t1535 * t1165 + t1537 * t1613;
t1100 = t1537 * t1165 + t1535 * t1613;
t1094 = -t1535 * t1147 + t1537 * t1614;
t1093 = t1537 * t1147 + t1535 * t1614;
t1089 = t1136 * t1544 - t1179 * t1540 + (-t1182 * t1535 - t1183 * t1537) * pkin(7);
t1088 = -t1535 * t1145 + t1537 * t1615;
t1087 = t1537 * t1145 + t1535 * t1615;
t1086 = t1133 * t1544 - t1172 * t1540 + (-t1180 * t1535 - t1181 * t1537) * pkin(7);
t1085 = -t1535 * t1137 + t1537 * t1616;
t1084 = t1537 * t1137 + t1535 * t1616;
t1083 = pkin(8) * t1148 + (-qJ(4) * t1539 + t1644) * t1163;
t1082 = -pkin(1) * t1182 - t1131 * t1535 + t1537 * t1566;
t1081 = pkin(1) * t1183 + t1131 * t1537 + t1535 * t1566;
t1080 = -pkin(1) * t1180 - t1130 * t1535 + t1537 * t1567;
t1079 = pkin(1) * t1181 + t1130 * t1537 + t1535 * t1567;
t1078 = t1124 * t1544 - t1129 * t1540 + (-t1168 * t1535 - t1169 * t1537) * pkin(7);
t1071 = -pkin(2) * t1208 + pkin(8) * t1171 + t1109 * t1539 + t1110 * t1543;
t1070 = -pkin(2) * t1200 + pkin(8) * t1166 + t1103 * t1539 + t1106 * t1543;
t1069 = -pkin(1) * t1168 - t1123 * t1535 + t1537 * t1568;
t1068 = pkin(1) * t1169 + t1123 * t1537 + t1535 * t1568;
t1061 = -pkin(2) * t1153 + pkin(8) * t1138 + t1067 * t1539 + t1125 * t1543;
t1060 = t1096 * t1544 - t1105 * t1540 + (-t1093 * t1535 - t1094 * t1537) * pkin(7);
t1059 = t1077 * t1544 - t1092 * t1540 + (-t1107 * t1535 - t1108 * t1537) * pkin(7);
t1058 = t1074 * t1544 - t1090 * t1540 + (-t1100 * t1535 - t1101 * t1537) * pkin(7);
t1057 = -pkin(1) * t1093 - t1083 * t1535 + t1537 * t1569;
t1056 = pkin(1) * t1094 + t1083 * t1537 + t1535 * t1569;
t1055 = -t1535 * t1072 + t1537 * t1617;
t1054 = t1537 * t1072 + t1535 * t1617;
t1052 = -pkin(1) * t1107 - t1071 * t1535 + t1537 * t1570;
t1051 = pkin(1) * t1108 + t1071 * t1537 + t1535 * t1570;
t1050 = -pkin(1) * t1100 - t1070 * t1535 + t1537 * t1571;
t1049 = pkin(1) * t1101 + t1070 * t1537 + t1535 * t1571;
t1047 = t1064 * t1544 - t1065 * t1540 + (-t1084 * t1535 - t1085 * t1537) * pkin(7);
t1046 = -pkin(2) * t1075 + pkin(8) * t1073 + t1063 * t1539 + t1066 * t1543;
t1045 = -pkin(1) * t1084 - t1061 * t1535 + t1537 * t1572;
t1044 = pkin(1) * t1085 + t1061 * t1537 + t1535 * t1572;
t1043 = t1048 * t1544 - t1053 * t1540 + (-t1054 * t1535 - t1055 * t1537) * pkin(7);
t1042 = -pkin(1) * t1054 - t1046 * t1535 + t1537 * t1573;
t1041 = pkin(1) * t1055 + t1046 * t1537 + t1535 * t1573;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1520, 0, -t1519, 0, t1623, -t1505, -t1582, -pkin(6) * t1582, -t1541 * t1457 + t1477 * t1545, -t1541 * t1404 + t1438 * t1545, -t1541 * t1431 + t1469 * t1545, -t1541 * t1454 + t1476 * t1545, -t1541 * t1432 + t1470 * t1545, t1487 * t1545 + t1541 * t1654, t1545 * t1342 - t1541 * t1337 - pkin(6) * (t1433 * t1545 + t1541 * t1471), t1545 * t1338 - t1541 * t1326 - pkin(6) * (t1413 * t1545 + t1541 * t1461), t1545 * t1288 - t1541 * t1305 - pkin(6) * (t1403 * t1545 + t1541 * t1437), t1545 * t1291 - t1541 * t1309 - pkin(6) * (t1368 * t1545 + t1541 * t1386), -t1541 * t1318 + t1370 * t1545, -t1541 * t1249 + t1327 * t1545, -t1541 * t1294 + t1350 * t1545, -t1541 * t1317 + t1369 * t1545, -t1541 * t1295 + t1351 * t1545, -t1541 * t1360 + t1407 * t1545, t1545 * t1162 - t1541 * t1157 - pkin(6) * (t1279 * t1545 + t1541 * t1339), t1545 * t1167 - t1541 * t1159 - pkin(6) * (t1285 * t1545 + t1541 * t1341), t1545 * t1144 - t1541 * t1127 - pkin(6) * (t1245 * t1545 + t1541 * t1314), t1545 * t1118 - t1541 * t1117 - pkin(6) * (t1195 * t1545 + t1541 * t1240), -t1541 * t1225 + t1257 * t1545, -t1541 * t1174 + t1219 * t1545, -t1541 * t1192 + t1231 * t1545, -t1541 * t1224 + t1256 * t1545, -t1541 * t1193 + t1232 * t1545, -t1541 * t1237 + t1286 * t1545, t1545 * t1086 - t1541 * t1080 - pkin(6) * (t1181 * t1545 + t1541 * t1221), t1545 * t1089 - t1541 * t1082 - pkin(6) * (t1183 * t1545 + t1541 * t1229), t1545 * t1078 - t1541 * t1069 - pkin(6) * (t1169 * t1545 + t1541 * t1214), t1545 * t1060 - t1541 * t1057 - pkin(6) * (t1094 * t1545 + t1541 * t1115), -t1541 * t1122 + t1143 * t1545, -t1541 * t1088 + t1104 * t1545, -t1541 * t1113 + t1134 * t1545, -t1541 * t1121 + t1142 * t1545, -t1541 * t1114 + t1135 * t1545, -t1541 * t1151 + t1184 * t1545, t1545 * t1058 - t1541 * t1050 - pkin(6) * (t1101 * t1545 + t1541 * t1128), t1545 * t1059 - t1541 * t1052 - pkin(6) * (t1108 * t1545 + t1541 * t1132), t1545 * t1047 - t1541 * t1045 - pkin(6) * (t1085 * t1545 + t1541 * t1102), t1545 * t1043 - t1541 * t1042 - pkin(6) * (t1055 * t1545 + t1541 * t1062); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1519, 0, t1520, 0, t1505, t1623, t1627, pkin(6) * t1627, t1457 * t1545 + t1541 * t1477, t1404 * t1545 + t1541 * t1438, t1431 * t1545 + t1541 * t1469, t1454 * t1545 + t1541 * t1476, t1432 * t1545 + t1541 * t1470, t1541 * t1487 - t1545 * t1654, t1541 * t1342 + t1545 * t1337 + pkin(6) * (-t1541 * t1433 + t1471 * t1545), t1541 * t1338 + t1545 * t1326 + pkin(6) * (-t1541 * t1413 + t1461 * t1545), t1541 * t1288 + t1545 * t1305 + pkin(6) * (-t1541 * t1403 + t1437 * t1545), t1541 * t1291 + t1545 * t1309 + pkin(6) * (-t1541 * t1368 + t1386 * t1545), t1318 * t1545 + t1541 * t1370, t1249 * t1545 + t1541 * t1327, t1294 * t1545 + t1541 * t1350, t1317 * t1545 + t1541 * t1369, t1295 * t1545 + t1541 * t1351, t1360 * t1545 + t1541 * t1407, t1541 * t1162 + t1545 * t1157 + pkin(6) * (-t1541 * t1279 + t1339 * t1545), t1541 * t1167 + t1545 * t1159 + pkin(6) * (-t1541 * t1285 + t1341 * t1545), t1541 * t1144 + t1545 * t1127 + pkin(6) * (-t1541 * t1245 + t1314 * t1545), t1541 * t1118 + t1545 * t1117 + pkin(6) * (-t1541 * t1195 + t1240 * t1545), t1225 * t1545 + t1541 * t1257, t1174 * t1545 + t1541 * t1219, t1192 * t1545 + t1541 * t1231, t1224 * t1545 + t1541 * t1256, t1193 * t1545 + t1541 * t1232, t1237 * t1545 + t1541 * t1286, t1541 * t1086 + t1545 * t1080 + pkin(6) * (-t1541 * t1181 + t1221 * t1545), t1541 * t1089 + t1545 * t1082 + pkin(6) * (-t1541 * t1183 + t1229 * t1545), t1541 * t1078 + t1545 * t1069 + pkin(6) * (-t1541 * t1169 + t1214 * t1545), t1541 * t1060 + t1545 * t1057 + pkin(6) * (-t1541 * t1094 + t1115 * t1545), t1122 * t1545 + t1541 * t1143, t1088 * t1545 + t1541 * t1104, t1113 * t1545 + t1541 * t1134, t1121 * t1545 + t1541 * t1142, t1114 * t1545 + t1541 * t1135, t1151 * t1545 + t1541 * t1184, t1541 * t1058 + t1545 * t1050 + pkin(6) * (-t1541 * t1101 + t1128 * t1545), t1541 * t1059 + t1545 * t1052 + pkin(6) * (-t1541 * t1108 + t1132 * t1545), t1541 * t1047 + t1545 * t1045 + pkin(6) * (-t1541 * t1085 + t1102 * t1545), t1541 * t1043 + t1545 * t1042 + pkin(6) * (-t1541 * t1055 + t1062 * t1545); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1523, t1524, 0, 0, t1456, t1402, t1428, t1455, t1429, t1516, t1336, t1325, t1304, t1310, t1316, t1248, t1292, t1315, t1293, t1359, t1156, t1158, t1126, t1116, t1223, t1173, t1190, t1222, t1191, t1236, t1079, t1081, t1068, t1056, t1120, t1087, t1111, t1119, t1112, t1150, t1049, t1051, t1044, t1041; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1699, 0, 0, -g(3), -t1523, 0, t1477, t1438, t1469, t1476, t1470, t1487, t1342, t1338, t1288, t1291, t1370, t1327, t1350, t1369, t1351, t1407, t1162, t1167, t1144, t1118, t1257, t1219, t1231, t1256, t1232, t1286, t1086, t1089, t1078, t1060, t1143, t1104, t1134, t1142, t1135, t1184, t1058, t1059, t1047, t1043; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1699, 0, qJDD(1), 0, g(3), 0, -t1524, 0, t1457, t1404, t1431, t1454, t1432, -t1654, t1337, t1326, t1305, t1309, t1318, t1249, t1294, t1317, t1295, t1360, t1157, t1159, t1127, t1117, t1225, t1174, t1192, t1224, t1193, t1237, t1080, t1082, t1069, t1057, t1122, t1088, t1113, t1121, t1114, t1151, t1050, t1052, t1045, t1042; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1523, t1524, 0, 0, t1456, t1402, t1428, t1455, t1429, t1516, t1336, t1325, t1304, t1310, t1316, t1248, t1292, t1315, t1293, t1359, t1156, t1158, t1126, t1116, t1223, t1173, t1190, t1222, t1191, t1236, t1079, t1081, t1068, t1056, t1120, t1087, t1111, t1119, t1112, t1150, t1049, t1051, t1044, t1041; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1504, t1484, t1501, -t1512, t1507, t1512, 0, -t1488, t1459, 0, t1411, t1357, t1395, t1409, t1396, t1440, t1332, t1340, t1230, -pkin(8) * t1252, t1324, t1259, t1276, t1323, t1277, t1354, t1133, t1136, t1124, t1096, t1189, t1146, t1177, t1188, t1178, t1239, t1074, t1077, t1064, t1048; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1511, t1481, t1506, -t1562, t1502, -t1511, t1488, 0, t1460, 0, -t1662, -t1463, -t1418, t1662, t1414, -t1556, t1287, t1290, -pkin(2) * t1356, -pkin(2) * t1252, -t1365, -t1300, -t1343, t1363, -t1344, -t1381, t1172, t1179, t1129, t1105, -t1205, -t1152, -t1215, -t1204, -t1216, -t1242, t1090, t1092, t1065, t1053; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1521, t1509, t1482, t1521, t1483, t1527, -t1459, -t1460, 0, 0, t1410, t1355, t1393, t1408, t1394, t1439, t1289, t1297, t1220, t1241, t1322, t1258, t1274, t1321, t1275, t1353, t1130, t1131, t1123, t1083, t1187, t1145, t1175, t1186, t1176, t1238, t1070, t1071, t1061, t1046; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1453, -t1700, t1550, -t1485, t1478, t1485, 0, t1405, t1348, 0, t1366, t1302, t1345, t1364, t1346, t1382, t1233, t1234, t1149, -qJ(4) * t1163, t1207, t1154, t1217, t1206, t1218, t1243, t1103, t1109, t1067, t1063; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1486, t1417, t1479, -t1452, -t1443, t1486, -t1405, 0, t1349, 0, -t1436, -t1435, -t1375, t1436, -t1373, -t1452, t1199, t1202, -pkin(3) * t1301, -pkin(3) * t1163, -t1362, -t1361, -t1270, t1362, t1267, -t1451, t1106, t1110, t1125, t1066; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1662, t1463, t1418, -t1662, -t1414, t1556, -t1348, -t1349, 0, 0, t1365, t1300, t1343, -t1363, t1344, t1381, t1576, t1575, t1560, t1622, t1205, t1152, t1215, t1204, t1216, t1242, t1554, t1553, t1555, t1551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1434, t1372, t1701, t1448, t1446, -t1448, 0, t1298, t1227, 0, t1265, t1212, t1282, t1263, t1283, t1335, t1185, t1198, t1095, -pkin(9) * t1098; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1449, t1374, t1447, -t1548, t1378, -t1449, -t1298, 0, t1228, 0, t1264, t1210, t1280, t1262, t1281, t1334, t1160, t1161, t1091, t1097; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1436, t1435, t1375, -t1436, t1373, t1452, -t1227, -t1228, 0, 0, t1362, t1361, t1270, -t1362, -t1267, t1451, t1581, t1574, t1691, t1692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1312, -t1266, t1703, t1391, t1389, -t1391, 0, t1235, t1140, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1667, t1702, t1390, t1311, t1329, -t1667, -t1235, 0, t1141, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1362, t1361, t1270, -t1362, -t1267, t1451, -t1140, -t1141, 0, 0;];
m_new_reg = t1;
