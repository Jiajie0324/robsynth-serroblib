% Calculate inertial parameters regressor of coriolis joint torque vector for
% S5RRRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% tauc_reg [5x(5*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:42
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S5RRRPR12_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR12_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR12_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRRPR12_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:40:35
% EndTime: 2019-12-31 21:40:59
% DurationCPUTime: 9.64s
% Computational Cost: add. (10846->549), mult. (29266->786), div. (0->0), fcn. (22686->10), ass. (0->229)
t234 = sin(qJ(3));
t236 = cos(qJ(3));
t317 = cos(pkin(5));
t271 = t317 * qJD(1);
t255 = t271 + qJD(2);
t235 = sin(qJ(2));
t231 = sin(pkin(5));
t295 = qJD(1) * t231;
t282 = t235 * t295;
t169 = t234 * t255 + t236 * t282;
t237 = cos(qJ(2));
t294 = qJD(1) * t237;
t276 = t231 * t294;
t215 = -qJD(3) + t276;
t230 = sin(pkin(10));
t232 = cos(pkin(10));
t126 = t169 * t232 - t215 * t230;
t233 = sin(qJ(5));
t150 = t230 * t169;
t270 = t215 * t232 + t150;
t337 = cos(qJ(5));
t250 = t337 * t270;
t67 = -t233 * t126 - t250;
t355 = t67 ^ 2;
t167 = t234 * t282 - t236 * t255;
t161 = qJD(5) + t167;
t354 = t161 * t67;
t65 = -t337 * t126 + t233 * t270;
t353 = t65 ^ 2;
t284 = pkin(1) * t317;
t223 = t235 * t284;
t259 = pkin(3) * t234 - qJ(4) * t236;
t303 = t231 * t237;
t352 = -(t223 + (pkin(7) + t259) * t303) * qJD(1) + t259 * qJD(3) - t234 * qJD(4);
t267 = t237 * t284;
t186 = -pkin(7) * t282 + qJD(1) * t267;
t251 = (pkin(2) * t235 - pkin(8) * t237) * t231;
t187 = qJD(1) * t251;
t119 = t236 * t186 + t234 * t187;
t100 = qJ(4) * t282 + t119;
t290 = qJD(3) * t234;
t286 = pkin(8) * t290;
t322 = t352 * t232 + (t100 + t286) * t230;
t351 = -t232 * t100 + t352 * t230;
t350 = qJD(3) * t167;
t299 = t236 * t237;
t152 = (t230 * t235 + t232 * t299) * t295;
t300 = t232 * t236;
t336 = pkin(4) * t234;
t349 = -pkin(9) * t152 + t276 * t336 - (-pkin(9) * t300 + t336) * qJD(3) - t322;
t305 = t230 * t236;
t151 = -t232 * t282 + t276 * t305;
t301 = t232 * t234;
t348 = pkin(9) * t151 + (-pkin(8) * t301 - pkin(9) * t305) * qJD(3) + t351;
t289 = qJD(3) * t236;
t345 = -t230 * t289 + t151;
t344 = -t232 * t289 + t152;
t297 = pkin(7) * t303 + t223;
t182 = t317 * pkin(8) + t297;
t149 = qJD(2) * pkin(8) + t182 * qJD(1);
t183 = (-pkin(2) * t237 - pkin(8) * t235 - pkin(1)) * t231;
t160 = qJD(1) * t183;
t188 = qJD(2) * t251;
t176 = qJD(1) * t188;
t304 = t231 * t235;
t197 = -pkin(7) * t304 + t267;
t190 = t197 * qJD(2);
t177 = qJD(1) * t190;
t268 = t149 * t289 + t160 * t290 - t236 * t176 + t234 * t177;
t85 = t149 * t236 + t160 * t234;
t343 = t215 * t85 + t268;
t246 = t149 * t290 - t160 * t289 - t234 * t176 - t236 * t177;
t84 = -t234 * t149 + t236 * t160;
t342 = t215 * t84 - t246;
t227 = t231 ^ 2;
t287 = qJD(1) * qJD(2);
t341 = -0.2e1 * t227 * t287;
t321 = -t232 * t286 + t351;
t196 = t317 * t234 + t236 * t304;
t280 = qJD(2) * t303;
t140 = t196 * qJD(3) + t234 * t280;
t273 = t237 * t287;
t263 = t231 * t273;
t291 = qJD(3) * t169;
t130 = t234 * t263 + t291;
t195 = t234 * t304 - t317 * t236;
t98 = t130 * t195;
t340 = t140 * t167 + t98;
t275 = qJD(5) * t337;
t288 = qJD(5) * t233;
t339 = -t230 * t288 + t232 * t275;
t293 = qJD(2) * t235;
t281 = t231 * t293;
t264 = qJD(1) * t281;
t241 = qJ(4) * t264 - qJD(4) * t215;
t40 = t241 - t246;
t129 = -t236 * t263 + t350;
t191 = t297 * qJD(2);
t178 = qJD(1) * t191;
t44 = t130 * pkin(3) + t129 * qJ(4) - t169 * qJD(4) + t178;
t19 = t230 * t44 + t232 * t40;
t124 = t230 * t129;
t245 = t232 * t264 + t124;
t11 = t245 * pkin(9) + t19;
t148 = -t255 * pkin(2) - t186;
t73 = t167 * pkin(3) - t169 * qJ(4) + t148;
t78 = -qJ(4) * t215 + t85;
t33 = -t230 * t78 + t232 * t73;
t20 = pkin(4) * t167 - pkin(9) * t126 + t33;
t34 = t230 * t73 + t232 * t78;
t25 = -t270 * pkin(9) + t34;
t252 = -t337 * t20 + t233 * t25;
t18 = -t230 * t40 + t232 * t44;
t99 = -t129 * t232 + t230 * t264;
t8 = pkin(4) * t130 - pkin(9) * t99 + t18;
t1 = -t252 * qJD(5) + t337 * t11 + t233 * t8;
t338 = t167 ^ 2;
t238 = qJD(1) ^ 2;
t335 = t65 * t67;
t334 = pkin(9) + qJ(4);
t210 = -t236 * pkin(3) - t234 * qJ(4) - pkin(2);
t201 = t232 * t210;
t132 = -pkin(9) * t301 + t201 + (-pkin(8) * t230 - pkin(4)) * t236;
t166 = pkin(8) * t300 + t230 * t210;
t142 = -pkin(9) * t230 * t234 + t166;
t77 = t233 * t132 + t337 * t142;
t333 = t77 * qJD(5) + t348 * t233 + t349 * t337;
t76 = t337 * t132 - t233 * t142;
t332 = -t76 * qJD(5) + t349 * t233 - t348 * t337;
t61 = -t182 * t290 + t183 * t289 + t234 * t188 + t236 * t190;
t54 = (qJ(4) * t293 - qJD(4) * t237) * t231 + t61;
t141 = -t195 * qJD(3) + t236 * t280;
t60 = t140 * pkin(3) - t141 * qJ(4) - t196 * qJD(4) + t191;
t22 = t230 * t60 + t232 * t54;
t181 = -t317 * pkin(2) - t197;
t95 = t195 * pkin(3) - t196 * qJ(4) + t181;
t109 = t236 * t182 + t234 * t183;
t96 = -qJ(4) * t303 + t109;
t47 = t230 * t95 + t232 * t96;
t45 = -pkin(3) * t264 + t268;
t329 = t45 * t230;
t328 = t45 * t232;
t327 = t99 * t230;
t213 = t334 * t230;
t214 = t334 * t232;
t146 = -t337 * t213 - t233 * t214;
t249 = -t233 * t230 + t337 * t232;
t311 = t167 * t232;
t107 = pkin(3) * t169 + qJ(4) * t167;
t48 = t232 * t107 - t230 * t84;
t30 = pkin(4) * t169 + pkin(9) * t311 + t48;
t312 = t167 * t230;
t49 = t230 * t107 + t232 * t84;
t37 = pkin(9) * t312 + t49;
t326 = t249 * qJD(4) + t146 * qJD(5) - t233 * t30 - t337 * t37;
t147 = -t233 * t213 + t337 * t214;
t203 = t337 * t230 + t233 * t232;
t325 = -t203 * qJD(4) - t147 * qJD(5) + t233 * t37 - t337 * t30;
t194 = t203 * qJD(5);
t324 = t234 * t194 - t345 * t233 + t344 * t337;
t323 = -t337 * t151 - t233 * t152 + t203 * t289 + t339 * t234;
t320 = -t249 * t167 - t339;
t319 = t203 * t167 + t194;
t118 = -t234 * t186 + t187 * t236;
t101 = -pkin(3) * t282 - t118;
t285 = pkin(4) * t230 + pkin(8);
t318 = -pkin(4) * t151 + t285 * t289 - t101;
t316 = t130 * t236;
t314 = t167 * t169;
t313 = t167 * t215;
t310 = t169 * t215;
t248 = t215 * t234;
t308 = t215 * t236;
t307 = t227 * t238;
t306 = t230 * t130;
t302 = t232 * t130;
t75 = t215 * pkin(3) + qJD(4) - t84;
t298 = -qJD(4) + t75;
t296 = t235 ^ 2 - t237 ^ 2;
t292 = qJD(2) * t236;
t21 = -t230 * t54 + t232 * t60;
t46 = -t230 * t96 + t232 * t95;
t272 = t233 * t99 - t337 * t245;
t108 = -t234 * t182 + t183 * t236;
t269 = t235 * t237 * t307;
t262 = t231 * t238 * t317;
t261 = pkin(1) * t341;
t97 = pkin(3) * t303 - t108;
t258 = t270 * qJD(3);
t257 = t227 * t235 * t273;
t254 = 0.2e1 * t271 + qJD(2);
t62 = -t182 * t289 - t183 * t290 + t188 * t236 - t234 * t190;
t139 = t196 * t232 - t230 * t303;
t27 = pkin(4) * t195 - pkin(9) * t139 + t46;
t138 = t196 * t230 + t232 * t303;
t35 = -pkin(9) * t138 + t47;
t9 = -t233 * t35 + t337 * t27;
t6 = t233 * t20 + t337 * t25;
t10 = t233 * t27 + t337 * t35;
t80 = -t233 * t138 + t337 * t139;
t23 = qJD(5) * t250 + t126 * t288 - t233 * t245 - t337 * t99;
t243 = -t126 * t230 - t232 * t270;
t242 = t245 * t232;
t240 = pkin(1) * (-qJD(2) * t271 + t307);
t59 = -pkin(3) * t281 - t62;
t239 = -t167 * t248 - t316;
t2 = -t6 * qJD(5) - t233 * t11 + t337 * t8;
t24 = -qJD(5) * t65 + t272;
t26 = -t245 * pkin(4) + t45;
t226 = -t232 * pkin(4) - pkin(3);
t204 = t285 * t234;
t189 = t297 * qJD(1);
t185 = t249 * t234;
t184 = t203 * t234;
t165 = -pkin(8) * t305 + t201;
t116 = t141 * t232 + t230 * t281;
t115 = t141 * t230 - t232 * t281;
t79 = t337 * t138 + t233 * t139;
t69 = -pkin(4) * t312 + t85;
t68 = pkin(4) * t138 + t97;
t51 = t270 * pkin(4) + t75;
t36 = pkin(4) * t115 + t59;
t29 = t80 * qJD(5) + t337 * t115 + t233 * t116;
t28 = t233 * t115 - t337 * t116 + t138 * t275 + t139 * t288;
t17 = -pkin(9) * t115 + t22;
t14 = pkin(4) * t140 - pkin(9) * t116 + t21;
t4 = -t10 * qJD(5) + t337 * t14 - t233 * t17;
t3 = t9 * qJD(5) + t233 * t14 + t337 * t17;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t257, t296 * t341, t254 * t280, -0.2e1 * t257, -t254 * t281, 0, -t178 * t317 - t191 * t255 + t235 * t261, -t177 * t317 - t190 * t255 + t237 * t261, (t177 * t237 + t178 * t235 + (-t186 * t237 - t189 * t235) * qJD(2) + (t190 * t237 + t191 * t235 + (-t197 * t237 - t235 * t297) * qJD(2)) * qJD(1)) * t231, t177 * t297 - t178 * t197 - t186 * t191 + t189 * t190, -t129 * t196 + t141 * t169, t129 * t195 - t130 * t196 - t140 * t169 - t141 * t167, -t141 * t215 + (t129 * t237 + (qJD(1) * t196 + t169) * t293) * t231, t340, t140 * t215 + (t130 * t237 + (-qJD(1) * t195 - t167) * t293) * t231, (-t215 * t231 - t227 * t294) * t293, t181 * t130 + t148 * t140 + t191 * t167 + t178 * t195 - t62 * t215 + (t237 * t268 + (qJD(1) * t108 + t84) * t293) * t231, -t181 * t129 + t148 * t141 + t191 * t169 + t178 * t196 + t61 * t215 + (-t237 * t246 + (-qJD(1) * t109 - t85) * t293) * t231, t108 * t129 - t109 * t130 - t140 * t85 - t141 * t84 - t167 * t61 - t169 * t62 + t195 * t246 + t196 * t268, -t108 * t268 - t109 * t246 + t148 * t191 + t178 * t181 + t61 * t85 + t62 * t84, t116 * t126 + t139 * t99, -t126 * t115 - t116 * t270 - t99 * t138 + t139 * t245, t116 * t167 + t126 * t140 + t130 * t139 + t195 * t99, t115 * t270 - t138 * t245, -t115 * t167 - t138 * t130 - t140 * t270 + t195 * t245, t340, t75 * t115 + t46 * t130 + t45 * t138 + t33 * t140 + t21 * t167 + t18 * t195 - t245 * t97 + t270 * t59, t116 * t75 + t126 * t59 - t130 * t47 + t139 * t45 - t140 * t34 - t167 * t22 - t19 * t195 + t97 * t99, -t34 * t115 - t33 * t116 - t21 * t126 - t19 * t138 - t18 * t139 - t22 * t270 + t245 * t47 - t46 * t99, t18 * t46 + t19 * t47 + t21 * t33 + t22 * t34 + t45 * t97 + t59 * t75, -t23 * t80 + t28 * t65, t23 * t79 - t24 * t80 - t28 * t67 + t29 * t65, t130 * t80 - t140 * t65 - t161 * t28 - t195 * t23, t24 * t79 - t29 * t67, -t130 * t79 + t140 * t67 - t161 * t29 - t195 * t24, t140 * t161 + t98, t130 * t9 - t140 * t252 + t161 * t4 + t195 * t2 + t24 * t68 + t26 * t79 + t29 * t51 - t36 * t67, -t1 * t195 - t10 * t130 - t140 * t6 - t161 * t3 - t23 * t68 + t26 * t80 - t28 * t51 - t36 * t65, -t1 * t79 - t10 * t24 - t2 * t80 + t23 * t9 - t252 * t28 - t29 * t6 + t3 * t67 + t4 * t65, t1 * t10 + t2 * t9 - t252 * t4 + t26 * t68 + t3 * t6 + t36 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t269, t296 * t307, -t237 * t262, t269, t235 * t262, 0, -pkin(7) * t263 + t189 * t255 + t235 * t240, pkin(7) * t264 + t186 * t255 + t237 * t240, 0, 0, -t129 * t234 - t169 * t308, (-t129 + t313) * t236 + (-t130 + t310) * t234, -t215 * t289 + (t215 * t299 + (qJD(2) * t234 - t169) * t235) * t295, t239, t215 * t290 + (-t237 * t248 + (t167 + t292) * t235) * t295, t215 * t282, -pkin(2) * t130 + t118 * t215 - t189 * t167 - t178 * t236 + (pkin(8) * t308 + t148 * t234) * qJD(3) + (-t235 * t84 + (-pkin(8) * t293 - t148 * t237) * t234) * t295, pkin(2) * t129 - t119 * t215 - t189 * t169 + t178 * t234 + (-pkin(8) * t248 + t148 * t236) * qJD(3) + (-t148 * t299 + (-pkin(8) * t292 + t85) * t235) * t295, t118 * t169 + t119 * t167 + ((-t130 + t291) * pkin(8) + t342) * t236 + ((-t129 + t350) * pkin(8) + t343) * t234, -t178 * pkin(2) - t84 * t118 - t85 * t119 - t148 * t189 + (t268 * t234 - t246 * t236 + (-t234 * t85 - t236 * t84) * qJD(3)) * pkin(8), -t126 * t344 + t99 * t301, t152 * t270 + t126 * t151 + (t242 - t327) * t234 + t243 * t289, -t99 * t236 - t344 * t167 + (-t126 * t215 + t302) * t234, -t270 * t151 + (-t234 * t245 + t236 * t258) * t230, -t245 * t236 + t345 * t167 + (t270 * t276 - t258 - t306) * t234, t239, t165 * t130 - t101 * t270 - t75 * t151 + t322 * t167 + (-t18 + (pkin(8) * t270 + t75 * t230) * qJD(3)) * t236 + (-pkin(8) * t245 - t215 * t33 + t329) * t234, -t101 * t126 - t166 * t130 - t75 * t152 - t321 * t167 + (t19 + (pkin(8) * t126 + t232 * t75) * qJD(3)) * t236 + (pkin(8) * t99 + t215 * t34 + t328) * t234, t166 * t245 - t165 * t99 + t34 * t151 + t33 * t152 + (-t18 * t232 - t19 * t230) * t234 - t322 * t126 + (-t230 * t34 - t232 * t33) * t289 - t321 * t270, -t75 * t101 + t18 * t165 + t19 * t166 + t321 * t34 + t322 * t33 + (t234 * t45 + t289 * t75) * pkin(8), -t23 * t185 + t324 * t65, t23 * t184 - t185 * t24 + t323 * t65 - t324 * t67, t185 * t130 - t324 * t161 + t23 * t236 + t248 * t65, t24 * t184 - t323 * t67, -t184 * t130 - t323 * t161 + t24 * t236 - t248 * t67, -t161 * t248 - t316, t76 * t130 - t333 * t161 + t26 * t184 - t2 * t236 + t204 * t24 + t248 * t252 - t318 * t67 + t323 * t51, t1 * t236 - t77 * t130 + t332 * t161 + t26 * t185 - t204 * t23 + t6 * t248 - t318 * t65 - t324 * t51, -t1 * t184 - t2 * t185 + t76 * t23 - t77 * t24 - t252 * t324 - t323 * t6 - t332 * t67 - t333 * t65, t1 * t77 + t2 * t76 + t26 * t204 + t252 * t333 + t318 * t51 - t332 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t314, t169 ^ 2 - t338, -t129 - t313, -t314, -t310 - t130, t264, -t148 * t169 - t343, t148 * t167 - t342, 0, 0, t126 * t311 + t327, t167 * t243 + t230 * t245 + t99 * t232, -t126 * t169 + t338 * t232 + t306, t270 * t312 + t242, t169 * t270 - t230 * t338 + t302, -t314, -qJ(4) * t306 + pkin(3) * t245 - t328 - t33 * t169 - t85 * t270 + (t298 * t230 - t48) * t167, -qJ(4) * t302 - pkin(3) * t99 - t85 * t126 + t34 * t169 + t329 + (t232 * t298 + t49) * t167, t48 * t126 + t49 * t150 + (qJ(4) * t124 - qJD(4) * t150 - t33 * t167 + t49 * t215 + t232 * t241 + t19) * t232 + (qJ(4) * t99 + qJD(4) * t126 - t167 * t34 - t18) * t230, -t45 * pkin(3) - t33 * t48 - t34 * t49 - t75 * t85 + (-t230 * t33 + t232 * t34) * qJD(4) + (-t18 * t230 + t19 * t232) * qJ(4), -t23 * t203 + t320 * t65, -t203 * t24 - t23 * t249 + t319 * t65 - t320 * t67, t203 * t130 - t320 * t161 + t169 * t65, -t24 * t249 - t319 * t67, t130 * t249 - t319 * t161 - t169 * t67, -t161 * t169, t146 * t130 + t325 * t161 + t169 * t252 + t226 * t24 - t249 * t26 + t319 * t51 + t67 * t69, -t147 * t130 - t326 * t161 + t6 * t169 + t26 * t203 - t226 * t23 - t320 * t51 + t65 * t69, t1 * t249 + t146 * t23 - t147 * t24 - t2 * t203 - t252 * t320 - t319 * t6 + t325 * t65 + t326 * t67, t1 * t147 + t2 * t146 + t26 * t226 - t252 * t325 + t326 * t6 - t51 * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126 * t167 - t245, -t167 * t270 + t99, -t126 ^ 2 - t270 ^ 2, t126 * t33 + t270 * t34 + t45, 0, 0, 0, 0, 0, 0, -t65 * t161 + t24, -t23 + t354, -t353 - t355, t252 * t65 - t6 * t67 + t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335, t353 - t355, -t23 - t354, -t335, -t272 - (-qJD(5) + t161) * t65, t130, t6 * t161 + t51 * t65 + t2, -t161 * t252 - t51 * t67 - t1, 0, 0;];
tauc_reg = t5;
