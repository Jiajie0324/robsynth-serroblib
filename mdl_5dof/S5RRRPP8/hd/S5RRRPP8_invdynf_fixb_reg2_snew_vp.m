% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRPP8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:10
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRPP8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP8_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP8_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPP8_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPP8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRRPP8_invdynf_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:10:04
% EndTime: 2019-12-31 21:10:07
% DurationCPUTime: 3.14s
% Computational Cost: add. (4803->218), mult. (9656->212), div. (0->0), fcn. (6223->6), ass. (0->131)
t1644 = sin(qJ(3));
t1647 = cos(qJ(3));
t1645 = sin(qJ(2));
t1679 = qJD(1) * t1645;
t1638 = qJD(2) * t1679;
t1648 = cos(qJ(2));
t1664 = t1648 * qJDD(1);
t1660 = t1638 - t1664;
t1659 = -qJDD(3) - t1660;
t1613 = -t1647 * qJD(2) + t1644 * t1679;
t1615 = t1644 * qJD(2) + t1647 * t1679;
t1677 = t1615 * t1613;
t1655 = t1659 + t1677;
t1611 = t1613 ^ 2;
t1667 = t1648 * qJD(1);
t1636 = -qJD(3) + t1667;
t1683 = t1636 ^ 2;
t1686 = -t1611 - t1683;
t1546 = -t1644 * t1686 + t1647 * t1655;
t1646 = sin(qJ(1));
t1649 = cos(qJ(1));
t1663 = qJD(2) * t1667;
t1665 = t1645 * qJDD(1);
t1619 = t1663 + t1665;
t1661 = -t1647 * qJDD(2) + t1644 * t1619;
t1657 = t1615 * qJD(3) + t1661;
t1676 = t1615 * t1636;
t1685 = t1657 - t1676;
t1699 = t1644 * t1655 + t1647 * t1686;
t1703 = t1645 * t1685 + t1648 * t1699;
t1723 = t1649 * t1546 + t1646 * t1703;
t1724 = t1646 * t1546 - t1649 * t1703;
t1658 = t1644 * qJDD(2) + t1647 * t1619;
t1654 = t1613 * qJD(3) - t1658;
t1678 = t1613 * t1636;
t1567 = -t1654 - t1678;
t1560 = t1676 + t1657;
t1675 = t1644 * t1560;
t1706 = -t1647 * t1567 - t1675;
t1612 = t1615 ^ 2;
t1687 = -t1611 - t1612;
t1695 = t1645 * t1687;
t1557 = t1647 * t1560;
t1707 = t1644 * t1567 - t1557;
t1710 = t1648 * t1707 + t1695;
t1721 = t1646 * t1710 - t1649 * t1706;
t1720 = t1646 * t1706 + t1649 * t1710;
t1584 = t1683 + t1612;
t1656 = t1659 - t1677;
t1553 = t1644 * t1584 + t1647 * t1656;
t1719 = t1645 * t1553;
t1690 = t1647 * t1584 - t1644 * t1656;
t1718 = t1646 * t1690;
t1715 = t1648 * t1553;
t1714 = t1649 * t1690;
t1693 = t1648 * t1687;
t1711 = t1645 * t1707 - t1693;
t1705 = t1645 * t1699 - t1648 * t1685;
t1653 = (-qJD(3) + t1636) * t1613 + t1658;
t1697 = -t1645 * t1653 - t1715;
t1704 = t1646 * t1697 - t1714;
t1702 = t1649 * t1697 + t1718;
t1698 = t1648 * t1653 - t1719;
t1692 = t1654 - t1678;
t1684 = qJD(2) ^ 2;
t1682 = -2 * qJD(4);
t1681 = 2 * qJD(5);
t1680 = t1648 * g(3);
t1640 = t1645 ^ 2;
t1641 = t1648 ^ 2;
t1666 = t1640 + t1641;
t1662 = -t1636 * pkin(3) + t1682;
t1630 = -t1649 * g(1) - t1646 * g(2);
t1650 = qJD(1) ^ 2;
t1607 = -t1650 * pkin(1) + qJDD(1) * pkin(6) + t1630;
t1596 = -t1645 * g(3) + t1648 * t1607;
t1617 = (-t1648 * pkin(2) - pkin(7) * t1645) * qJD(1);
t1571 = -t1684 * pkin(2) + qJDD(2) * pkin(7) + t1617 * t1667 + t1596;
t1629 = t1646 * g(1) - t1649 * g(2);
t1606 = qJDD(1) * pkin(1) + t1650 * pkin(6) + t1629;
t1651 = (-t1619 - t1663) * pkin(7) + (t1660 + t1638) * pkin(2) - t1606;
t1542 = -t1644 * t1571 + t1647 * t1651;
t1585 = t1613 * pkin(3) - t1615 * qJ(4);
t1517 = t1659 * pkin(3) - t1683 * qJ(4) + t1615 * t1585 + qJDD(4) - t1542;
t1570 = t1680 - qJDD(2) * pkin(2) - t1684 * pkin(7) + (qJD(1) * t1617 + t1607) * t1645;
t1652 = t1657 * pkin(3) + t1692 * qJ(4) + t1570;
t1543 = t1647 * t1571 + t1644 * t1651;
t1515 = -t1683 * pkin(3) - qJ(4) * t1659 - t1613 * t1585 + t1636 * t1682 + t1543;
t1635 = t1648 * t1650 * t1645;
t1634 = -t1641 * t1650 - t1684;
t1633 = -t1640 * t1650 - t1684;
t1626 = -qJDD(2) + t1635;
t1625 = qJDD(2) + t1635;
t1624 = t1666 * t1650;
t1623 = -t1646 * qJDD(1) - t1649 * t1650;
t1622 = t1649 * qJDD(1) - t1646 * t1650;
t1621 = t1666 * qJDD(1);
t1620 = -0.2e1 * t1638 + t1664;
t1618 = 0.2e1 * t1663 + t1665;
t1595 = -t1645 * t1607 - t1680;
t1594 = t1615 * pkin(4) + t1636 * qJ(5);
t1593 = t1648 * t1626 - t1645 * t1633;
t1592 = -t1645 * t1625 + t1648 * t1634;
t1591 = t1645 * t1626 + t1648 * t1633;
t1590 = t1648 * t1625 + t1645 * t1634;
t1569 = -t1645 * t1595 + t1648 * t1596;
t1568 = t1648 * t1595 + t1645 * t1596;
t1564 = (-qJD(3) - t1636) * t1613 + t1658;
t1539 = t1644 * t1564 - t1557;
t1536 = -t1647 * t1564 - t1675;
t1533 = -t1645 * t1692 + t1715;
t1530 = t1648 * t1692 + t1719;
t1521 = t1648 * t1539 + t1695;
t1518 = t1645 * t1539 - t1693;
t1516 = t1615 * t1662 + t1652;
t1514 = -t1644 * t1542 + t1647 * t1543;
t1513 = t1647 * t1542 + t1644 * t1543;
t1512 = -pkin(4) * t1657 - t1611 * qJ(5) - t1636 * t1594 + qJDD(5) + t1515;
t1511 = t1648 * t1514 + t1645 * t1570;
t1510 = t1645 * t1514 - t1648 * t1570;
t1509 = -t1611 * pkin(4) + t1661 * qJ(5) + t1613 * t1681 + (qJD(3) * qJ(5) - t1594 + t1662) * t1615 + t1652;
t1508 = -t1654 * pkin(4) + (-pkin(4) * t1613 + t1681) * t1636 + t1517 + t1655 * qJ(5);
t1507 = t1647 * t1515 + t1644 * t1517;
t1506 = t1644 * t1515 - t1647 * t1517;
t1505 = t1648 * t1507 + t1645 * t1516;
t1504 = t1645 * t1507 - t1648 * t1516;
t1503 = t1644 * t1508 + t1647 * t1512;
t1502 = -t1647 * t1508 + t1644 * t1512;
t1501 = t1648 * t1503 + t1645 * t1509;
t1500 = t1645 * t1503 - t1648 * t1509;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1623, -t1622, 0, -t1646 * t1629 + t1649 * t1630, 0, 0, 0, 0, 0, 0, t1649 * t1592 - t1646 * t1620, t1649 * t1593 + t1646 * t1618, t1649 * t1621 - t1646 * t1624, t1649 * t1569 - t1646 * t1606, 0, 0, 0, 0, 0, 0, -t1724, t1649 * t1533 - t1718, t1720, t1649 * t1511 + t1646 * t1513, 0, 0, 0, 0, 0, 0, t1649 * t1521 + t1646 * t1536, t1724, t1702, t1649 * t1505 + t1646 * t1506, 0, 0, 0, 0, 0, 0, t1720, t1702, -t1724, t1649 * t1501 + t1646 * t1502; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1622, t1623, 0, t1649 * t1629 + t1646 * t1630, 0, 0, 0, 0, 0, 0, t1646 * t1592 + t1649 * t1620, t1646 * t1593 - t1649 * t1618, t1646 * t1621 + t1649 * t1624, t1646 * t1569 + t1649 * t1606, 0, 0, 0, 0, 0, 0, t1723, t1646 * t1533 + t1714, t1721, t1646 * t1511 - t1649 * t1513, 0, 0, 0, 0, 0, 0, t1646 * t1521 - t1649 * t1536, -t1723, t1704, t1646 * t1505 - t1649 * t1506, 0, 0, 0, 0, 0, 0, t1721, t1704, t1723, t1646 * t1501 - t1649 * t1502; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1590, t1591, 0, t1568, 0, 0, 0, 0, 0, 0, t1705, t1530, t1711, t1510, 0, 0, 0, 0, 0, 0, t1518, -t1705, t1698, t1504, 0, 0, 0, 0, 0, 0, t1711, t1698, t1705, t1500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1650, -qJDD(1), 0, t1630, 0, 0, 0, 0, 0, 0, t1592, t1593, t1621, t1569, 0, 0, 0, 0, 0, 0, t1703, t1533, t1710, t1511, 0, 0, 0, 0, 0, 0, t1521, -t1703, t1697, t1505, 0, 0, 0, 0, 0, 0, t1710, t1697, t1703, t1501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1650, 0, t1629, 0, 0, 0, 0, 0, 0, t1620, -t1618, t1624, t1606, 0, 0, 0, 0, 0, 0, t1546, t1690, -t1706, -t1513, 0, 0, 0, 0, 0, 0, -t1536, -t1546, -t1690, -t1506, 0, 0, 0, 0, 0, 0, -t1706, -t1690, t1546, -t1502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1590, t1591, 0, t1568, 0, 0, 0, 0, 0, 0, t1705, t1530, t1711, t1510, 0, 0, 0, 0, 0, 0, t1518, -t1705, t1698, t1504, 0, 0, 0, 0, 0, 0, t1711, t1698, t1705, t1500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1634, t1626, t1664, t1596, 0, 0, 0, 0, 0, 0, t1699, t1553, t1707, t1514, 0, 0, 0, 0, 0, 0, t1539, -t1699, -t1553, t1507, 0, 0, 0, 0, 0, 0, t1707, -t1553, t1699, t1503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1625, t1633, -t1665, t1595, 0, 0, 0, 0, 0, 0, -t1685, t1692, -t1687, -t1570, 0, 0, 0, 0, 0, 0, -t1687, t1685, t1653, -t1516, 0, 0, 0, 0, 0, 0, -t1687, t1653, -t1685, -t1509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1620, t1618, -t1624, -t1606, 0, 0, 0, 0, 0, 0, -t1546, -t1690, t1706, t1513, 0, 0, 0, 0, 0, 0, t1536, t1546, t1690, t1506, 0, 0, 0, 0, 0, 0, t1706, t1690, -t1546, t1502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1686, t1656, -t1560, t1543, 0, 0, 0, 0, 0, 0, -t1560, -t1686, -t1656, t1515, 0, 0, 0, 0, 0, 0, -t1560, -t1656, t1686, t1512; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1655, -t1584, -t1567, t1542, 0, 0, 0, 0, 0, 0, -t1564, t1655, t1584, -t1517, 0, 0, 0, 0, 0, 0, -t1567, t1584, -t1655, -t1508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1685, -t1692, t1687, t1570, 0, 0, 0, 0, 0, 0, t1687, -t1685, -t1653, t1516, 0, 0, 0, 0, 0, 0, t1687, -t1653, t1685, t1509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1687, -t1685, -t1653, t1516, 0, 0, 0, 0, 0, 0, t1687, -t1653, t1685, t1509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1560, t1686, t1656, -t1515, 0, 0, 0, 0, 0, 0, t1560, t1656, -t1686, -t1512; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1564, -t1655, -t1584, t1517, 0, 0, 0, 0, 0, 0, t1567, -t1584, t1655, t1508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1687, -t1653, t1685, t1509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1567, -t1584, t1655, t1508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1560, -t1656, t1686, t1512;];
f_new_reg = t1;
