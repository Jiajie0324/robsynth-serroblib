% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRPP8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:10
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRPP8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP8_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP8_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPP8_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPP8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRRPP8_invdynm_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:09:49
% EndTime: 2019-12-31 21:10:04
% DurationCPUTime: 16.60s
% Computational Cost: add. (26523->615), mult. (52986->607), div. (0->0), fcn. (33513->6), ass. (0->370)
t1242 = cos(qJ(1));
t1241 = cos(qJ(2));
t1310 = t1241 * qJD(1);
t1224 = -qJD(3) + t1310;
t1222 = t1224 ^ 2;
t1237 = sin(qJ(3));
t1240 = cos(qJ(3));
t1238 = sin(qJ(2));
t1350 = qJD(1) * t1238;
t1196 = t1237 * qJD(2) + t1240 * t1350;
t1370 = t1196 ^ 2;
t1140 = -t1370 - t1222;
t1227 = qJD(2) * t1350;
t1299 = t1241 * qJDD(1);
t1202 = -t1227 + t1299;
t1191 = -qJDD(3) + t1202;
t1194 = -t1240 * qJD(2) + t1237 * t1350;
t1344 = t1196 * t1194;
t1262 = t1191 - t1344;
t1402 = t1237 * t1262;
t1040 = t1240 * t1140 + t1402;
t1239 = sin(qJ(1));
t1472 = t1239 * t1040;
t1228 = qJD(2) * t1310;
t1301 = t1238 * qJDD(1);
t1201 = t1228 + t1301;
t1267 = t1237 * qJDD(2) + t1240 * t1201;
t1096 = (qJD(3) - t1224) * t1194 - t1267;
t1401 = t1240 * t1262;
t1420 = t1237 * t1140 - t1401;
t1448 = t1241 * t1420;
t989 = t1238 * t1096 + t1448;
t1499 = pkin(5) * (t1242 * t989 - t1472);
t1468 = t1242 * t1040;
t1498 = pkin(5) * (t1239 * t989 + t1468);
t1452 = t1238 * t1420;
t985 = t1241 * t1096 - t1452;
t1497 = pkin(1) * t985;
t1496 = pkin(6) * t985;
t1261 = t1191 + t1344;
t1313 = t1240 * t1261;
t1371 = t1194 ^ 2;
t1393 = -t1222 - t1371;
t1035 = -t1237 * t1393 + t1313;
t1131 = t1196 * qJD(3) - t1240 * qJDD(2) + t1237 * t1201;
t1343 = t1196 * t1224;
t1399 = t1131 - t1343;
t1332 = t1237 * t1261;
t1423 = t1240 * t1393 + t1332;
t1439 = t1238 * t1399 + t1241 * t1423;
t1482 = pkin(5) * (t1239 * t1035 - t1242 * t1439);
t1483 = pkin(5) * (t1242 * t1035 + t1239 * t1439);
t1481 = pkin(1) * t1040;
t1495 = -pkin(6) * t989 - t1481;
t1484 = pkin(1) * t1035 + pkin(6) * t1439;
t1132 = -t1194 * qJD(3) + t1267;
t1345 = t1194 * t1224;
t1396 = t1132 + t1345;
t1421 = -t1237 * t1399 + t1240 * t1396;
t1411 = t1240 * t1399;
t1011 = t1237 * t1396 + t1411;
t1141 = t1371 - t1370;
t976 = t1241 * t1011 + t1238 * t1141;
t1490 = t1239 * t976 + t1242 * t1421;
t1392 = -t1370 + t1222;
t1047 = -t1240 * t1392 + t1332;
t1053 = t1237 * t1392 + t1313;
t1397 = t1132 - t1345;
t998 = t1241 * t1053 - t1238 * t1397;
t1489 = -t1242 * t1047 + t1239 * t998;
t1488 = -t1239 * t1421 + t1242 * t976;
t1487 = t1239 * t1047 + t1242 * t998;
t1165 = t1371 - t1222;
t1056 = t1240 * t1165 + t1402;
t1398 = t1131 + t1343;
t1001 = t1241 * t1056 - t1238 * t1398;
t1050 = t1237 * t1165 - t1401;
t1486 = t1239 * t1001 - t1242 * t1050;
t1485 = t1242 * t1001 + t1239 * t1050;
t1442 = t1238 * t1423 - t1241 * t1399;
t1479 = pkin(1) * t1442;
t1474 = pkin(6) * t1442;
t1118 = t1370 + t1371;
t1424 = t1237 * t1397 - t1240 * t1398;
t1441 = t1241 * t1118 + t1238 * t1424;
t1480 = pkin(1) * t1441;
t1458 = pkin(2) * t1035;
t1478 = pkin(2) * t1040;
t1438 = -t1238 * t1118 + t1241 * t1424;
t1477 = pkin(6) * t1438;
t1475 = pkin(6) * t1441;
t1456 = pkin(7) * t1035;
t1473 = pkin(7) * t1040;
t1455 = pkin(7) * t1420;
t1348 = qJD(4) * t1224;
t1212 = 0.2e1 * t1348;
t1464 = t1212 + t1478;
t1422 = -t1237 * t1398 - t1240 * t1397;
t1463 = -pkin(1) * t1422 + t1477;
t973 = t1238 * t1011 - t1241 * t1141;
t992 = t1238 * t1053 + t1241 * t1397;
t995 = t1238 * t1056 + t1241 * t1398;
t1462 = pkin(5) * (t1239 * t1438 - t1242 * t1422);
t1461 = pkin(5) * (t1239 * t1422 + t1242 * t1438);
t1457 = pkin(2) * t1422;
t1454 = pkin(7) * t1422;
t1453 = pkin(7) * t1423;
t1444 = -pkin(2) * t1399 + t1453;
t1443 = pkin(2) * t1118 + pkin(7) * t1424;
t1435 = (t1399 - t1343) * pkin(3);
t1434 = qJ(4) * t1118;
t1433 = qJ(4) * t1396;
t1215 = t1242 * g(1) + t1239 * g(2);
t1243 = qJD(1) ^ 2;
t1181 = -t1243 * pkin(1) + qJDD(1) * pkin(6) - t1215;
t1363 = pkin(2) * t1241;
t1282 = -pkin(7) * t1238 - t1363;
t1199 = t1282 * qJD(1);
t1355 = t1241 * g(3);
t1372 = qJD(2) ^ 2;
t1109 = -qJDD(2) * pkin(2) - t1372 * pkin(7) + (qJD(1) * t1199 + t1181) * t1238 + t1355;
t1251 = t1131 * pkin(3) + t1109 - t1433;
t1248 = 0.2e1 * qJD(4) * t1196 - t1251;
t1417 = -2 * qJD(5);
t1415 = qJ(4) * t1393;
t1414 = qJ(4) * t1399;
t1413 = qJ(5) * t1261;
t1214 = t1239 * g(1) - t1242 * g(2);
t1180 = qJDD(1) * pkin(1) + t1243 * pkin(6) + t1214;
t1276 = -t1202 + t1227;
t1277 = t1201 + t1228;
t1085 = pkin(2) * t1276 - pkin(7) * t1277 - t1180;
t1160 = -t1238 * g(3) + t1241 * t1181;
t1110 = -t1372 * pkin(2) + qJDD(2) * pkin(7) + t1199 * t1310 + t1160;
t1018 = -t1240 * t1085 + t1237 * t1110;
t1137 = t1194 * pkin(3) - t1196 * qJ(4);
t965 = t1191 * pkin(3) - t1222 * qJ(4) + t1196 * t1137 + qJDD(4) + t1018;
t1252 = t1132 * pkin(4) + t1413 + t965;
t1249 = t1224 * t1417 - t1252;
t1408 = t1249 + pkin(4) * (-t1397 + t1345);
t1342 = t1224 * t1237;
t1296 = t1194 * t1342;
t1072 = t1240 * t1131 + t1296;
t1341 = t1224 * t1240;
t1294 = t1194 * t1341;
t1265 = t1237 * t1131 - t1294;
t1295 = t1238 * t1344;
t1378 = t1241 * t1265 - t1295;
t1387 = t1242 * t1072 + t1239 * t1378;
t1374 = -t1239 * t1072 + t1242 * t1378;
t1161 = t1196 * t1342;
t1303 = t1240 * t1132 + t1161;
t1376 = t1241 * t1303 + t1295;
t1162 = t1196 * t1341;
t1395 = t1237 * t1132 - t1162;
t1375 = t1239 * t1395 + t1242 * t1376;
t1386 = t1239 * t1376 - t1242 * t1395;
t1271 = -t1161 + t1294;
t1324 = t1238 * t1191;
t1377 = t1241 * t1271 - t1324;
t1400 = (t1194 * t1237 + t1196 * t1240) * t1224;
t1405 = t1239 * t1400 + t1242 * t1377;
t1404 = t1239 * t1377 - t1242 * t1400;
t1394 = t1371 * pkin(4) + t1194 * t1417;
t1390 = -(t1399 + t1131) * qJ(5) + pkin(4) * t1393;
t1292 = qJ(4) * t1237 + pkin(2);
t1360 = pkin(3) * t1240;
t1213 = -0.2e1 * t1348;
t1019 = t1237 * t1085 + t1240 * t1110;
t1270 = t1222 * pkin(3) + t1191 * qJ(4) + t1194 * t1137 - t1019;
t963 = t1213 - t1270;
t942 = t1237 * t965 + t1240 * t963;
t1362 = pkin(3) * t1224;
t1369 = -0.2e1 * qJD(4);
t964 = (t1369 - t1362) * t1196 + t1251;
t1389 = -(t1292 + t1360) * t964 + pkin(7) * t942;
t1365 = pkin(3) + qJ(5);
t949 = (-pkin(4) * t1194 + (2 * qJD(5))) * t1224 + t1252;
t1158 = t1196 * pkin(4) + t1224 * qJ(5);
t1253 = t1131 * pkin(4) + qJ(5) * t1371 + t1224 * t1158 - qJDD(5) + t1270;
t953 = t1213 - t1253;
t1388 = qJ(4) * t953 - t1365 * t949;
t1084 = qJ(4) * t1398;
t1385 = -t1365 * t1397 - t1084;
t956 = -t1248 + t1435;
t1384 = t1240 * t956 + t1292 * t1399 - t1453;
t955 = pkin(3) * t1343 - qJ(4) * t1096 + t1248;
t1383 = t1455 - t1096 * (pkin(2) + t1360) + t1237 * t955;
t1115 = qJ(4) * t1262;
t1382 = -t1140 * t1365 - t1115;
t1177 = t1241 * t1191;
t1381 = t1238 * t1271 + t1177;
t1293 = t1241 * t1344;
t1380 = t1238 * t1265 + t1293;
t1379 = t1238 * t1303 - t1293;
t1373 = -t1261 * t1365 + t1415;
t1368 = pkin(4) * t949;
t1367 = pkin(4) * t953;
t1364 = pkin(2) * t1238;
t1361 = pkin(3) * t1237;
t1359 = pkin(4) * t1262;
t1358 = pkin(4) * t1261;
t1357 = pkin(4) * t1140;
t1352 = t1131 * qJ(5);
t1351 = qJD(1) * qJD(2);
t1233 = t1238 ^ 2;
t1340 = t1233 * t1243;
t1335 = t1237 * t1109;
t1325 = t1238 * t1180;
t1223 = t1241 * t1243 * t1238;
t1209 = -t1223 + qJDD(2);
t1323 = t1238 * t1209;
t1210 = qJDD(2) + t1223;
t1322 = t1238 * t1210;
t1315 = t1240 * t1109;
t1307 = t1241 * t1180;
t1306 = t1241 * t1209;
t1234 = t1241 ^ 2;
t1302 = t1233 + t1234;
t1300 = t1239 * qJDD(1);
t1298 = t1242 * qJDD(1);
t1291 = -pkin(3) * t1397 - t1084;
t1290 = t1158 + t1362;
t959 = t1237 * t1018 + t1240 * t1019;
t1159 = t1238 * t1181 + t1355;
t1099 = t1238 * t1159 + t1241 * t1160;
t1287 = -t1239 * t1214 - t1242 * t1215;
t1286 = t1239 * t1223;
t1285 = t1242 * t1223;
t1284 = -pkin(2) * t1109 + pkin(7) * t959;
t1281 = -pkin(3) * t965 + qJ(4) * t963;
t1206 = -t1239 * t1243 + t1298;
t1280 = -pkin(5) * t1206 - t1239 * g(3);
t958 = -t1240 * t1018 + t1237 * t1019;
t1098 = t1241 * t1159 - t1238 * t1160;
t1268 = t1242 * t1214 - t1239 * t1215;
t1264 = -t1315 + t1444;
t1263 = pkin(2) * t1096 + t1335 - t1455;
t1260 = t1443 + t959;
t1259 = -pkin(3) * t1140 - t1115 - t1270;
t1244 = (t1369 - t1290) * t1196 + t1251 - t1394;
t950 = t1244 + t1352;
t908 = -t1365 * t950 + t1367;
t922 = -qJ(4) * t950 + t1368;
t924 = t1237 * t949 + t1240 * t953;
t1258 = -pkin(2) * t950 + pkin(7) * t924 + t1237 * t922 + t1240 * t908;
t957 = pkin(3) * t1118 + t963;
t960 = t965 + t1434;
t1257 = t1237 * t960 + t1240 * t957 + t1443;
t1250 = -pkin(4) * t1398 - t1253;
t936 = t1118 * t1365 + t1213 + t1250;
t937 = -t1408 + t1434;
t1256 = t1237 * t937 + t1240 * t936 + t1443;
t1246 = t1248 + t1394;
t940 = t1196 * t1290 + t1246 - t1352 + t1357 + t1433;
t972 = t1365 * t1396 - t1359;
t1255 = pkin(2) * t1396 + t1237 * t940 + t1240 * t972 + t1455;
t1020 = t1358 - t1414;
t935 = t1196 * t1158 + t1246 + t1390 - t1435;
t1254 = t1237 * t1020 + t1240 * t935 + t1444;
t1247 = pkin(3) * t1261 - t1415 + t965;
t1245 = pkin(4) * t1345 + t1249;
t1231 = t1234 * t1243;
t1221 = -t1231 - t1372;
t1220 = t1231 - t1372;
t1219 = -t1340 - t1372;
t1218 = -t1340 + t1372;
t1208 = -t1231 + t1340;
t1207 = t1231 + t1340;
t1205 = t1242 * t1243 + t1300;
t1204 = t1302 * qJDD(1);
t1203 = -0.2e1 * t1227 + t1299;
t1200 = 0.2e1 * t1228 + t1301;
t1193 = t1241 * t1210;
t1192 = t1302 * t1351;
t1176 = -pkin(5) * t1205 + t1242 * g(3);
t1164 = t1241 * t1201 - t1233 * t1351;
t1163 = -t1238 * t1202 - t1234 * t1351;
t1157 = -t1238 * t1219 - t1306;
t1156 = -t1238 * t1218 + t1193;
t1155 = t1241 * t1221 - t1322;
t1154 = t1241 * t1220 - t1323;
t1153 = t1241 * t1219 - t1323;
t1152 = t1241 * t1218 + t1322;
t1151 = t1238 * t1221 + t1193;
t1150 = t1238 * t1220 + t1306;
t1149 = t1277 * t1238;
t1148 = t1276 * t1241;
t1136 = -t1238 * t1200 + t1241 * t1203;
t1135 = t1241 * t1200 + t1238 * t1203;
t1112 = -pkin(6) * t1153 - t1307;
t1111 = -pkin(6) * t1151 - t1325;
t1107 = (t1194 * t1240 - t1196 * t1237) * t1224;
t1104 = -t1162 - t1296;
t1101 = -pkin(1) * t1153 + t1160;
t1100 = -pkin(1) * t1151 + t1159;
t1083 = pkin(1) * t1203 + pkin(6) * t1155 + t1307;
t1082 = -pkin(1) * t1200 + pkin(6) * t1157 - t1325;
t1063 = t1241 * t1107 - t1324;
t1060 = t1238 * t1107 + t1177;
t1046 = pkin(1) * t1180 + pkin(6) * t1099;
t1039 = pkin(1) * t1207 + pkin(6) * t1204 + t1099;
t1004 = t1315 - t1473;
t991 = t1335 + t1456;
t982 = -t1238 * t1396 + t1448;
t979 = t1241 * t1396 + t1452;
t962 = t1019 - t1478;
t961 = t1018 + t1458;
t954 = -t1291 - t1457;
t952 = t1238 * t1109 + t1241 * t959;
t951 = -t1241 * t1109 + t1238 * t959;
t948 = -t1385 - t1457;
t947 = -t1263 - t1497;
t946 = -t1259 + t1464;
t945 = -t1264 - t1479;
t944 = -t1247 - t1458;
t943 = -t958 - t1454;
t941 = t1237 * t963 - t1240 * t965;
t939 = t1096 * t1361 + t1240 * t955 + t1473;
t938 = qJ(4) * t1411 - t1237 * t956 - t1456;
t934 = t1241 * t1004 - t1238 * t962 - t1496;
t933 = t1253 - t1382 + t1464;
t932 = -t1373 + t949 + t1458;
t931 = -t1238 * t961 + t1241 * t991 - t1474;
t930 = t1238 * t1004 + t1241 * t962 + t1495;
t929 = t1238 * t964 + t1241 * t942;
t928 = t1238 * t942 - t1241 * t964;
t927 = -t1260 - t1480;
t926 = -pkin(1) * t951 - t1284;
t925 = t1238 * t991 + t1241 * t961 + t1484;
t923 = t1237 * t953 - t1240 * t949;
t921 = -t1383 + t1497;
t920 = -t1237 * t957 + t1240 * t960 - t1454;
t919 = -t1384 + t1479;
t918 = t1240 * t1020 - t1237 * t935 + t1456;
t917 = -t1237 * t972 + t1240 * t940 + t1473;
t916 = t1241 * t943 + t1364 * t1422 - t1475;
t915 = -pkin(7) * t941 + (-qJ(4) * t1240 + t1361) * t964;
t914 = -pkin(2) * t941 - t1281;
t913 = -pkin(6) * t951 + (-pkin(7) * t1241 + t1364) * t958;
t912 = t1477 + t1238 * t943 + (-pkin(1) - t1363) * t1422;
t911 = -t1257 - t1480;
t910 = -t1254 - t1479;
t909 = -pkin(1) * t979 - t1255;
t907 = t1238 * t950 + t1241 * t924;
t906 = t1238 * t924 - t1241 * t950;
t905 = -t1238 * t946 + t1241 * t939 + t1496;
t904 = -t1238 * t944 + t1241 * t938 + t1474;
t903 = -t1237 * t936 + t1240 * t937 - t1454;
t902 = t1238 * t939 + t1241 * t946 - t1495;
t901 = t1238 * t938 + t1241 * t944 - t1484;
t900 = pkin(6) * t952 + (-pkin(1) + t1282) * t958;
t899 = -t1238 * t954 + t1241 * t920 - t1475;
t898 = t1238 * t920 + t1241 * t954 + t1463;
t897 = -t1256 - t1480;
t896 = -t1238 * t932 + t1241 * t918 - t1474;
t895 = -pkin(6) * t979 - t1238 * t933 + t1241 * t917;
t894 = t1238 * t918 + t1241 * t932 + t1484;
t893 = pkin(6) * t982 + t1238 * t917 + t1241 * t933 + t1481;
t892 = -t1238 * t948 + t1241 * t903 - t1475;
t891 = -pkin(2) * t923 - t1388;
t890 = -pkin(1) * t928 - t1389;
t889 = t1238 * t903 + t1241 * t948 + t1463;
t888 = -pkin(7) * t923 - t1237 * t908 + t1240 * t922;
t887 = -pkin(6) * t928 - t1238 * t914 + t1241 * t915;
t886 = -pkin(1) * t941 + pkin(6) * t929 + t1238 * t915 + t1241 * t914;
t885 = -pkin(1) * t906 - t1258;
t884 = -pkin(6) * t906 - t1238 * t891 + t1241 * t888;
t883 = -pkin(1) * t923 + pkin(6) * t907 + t1238 * t888 + t1241 * t891;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1206, 0, -t1205, 0, t1280, -t1176, -t1268, -pkin(5) * t1268, t1242 * t1164 - t1286, t1242 * t1136 + t1239 * t1208, t1242 * t1156 + t1238 * t1300, t1242 * t1163 + t1286, t1242 * t1154 + t1239 * t1299, t1239 * qJDD(2) + t1242 * t1192, t1242 * t1111 - t1239 * t1100 - pkin(5) * (t1239 * t1155 + t1242 * t1203), t1242 * t1112 - t1239 * t1101 - pkin(5) * (t1239 * t1157 - t1242 * t1200), t1242 * t1098 - pkin(5) * (t1239 * t1204 + t1242 * t1207), -pkin(5) * (t1239 * t1099 + t1242 * t1180) - (t1239 * pkin(1) - t1242 * pkin(6)) * t1098, t1375, -t1488, -t1487, t1374, t1485, t1405, -t1239 * t945 + t1242 * t931 - t1483, -t1239 * t947 + t1242 * t934 + t1498, -t1239 * t927 + t1242 * t916 - t1462, t1242 * t913 - t1239 * t926 - pkin(5) * (t1239 * t952 - t1242 * t958), t1242 * t1063 - t1239 * t1104, t1487, -t1485, t1375, -t1488, t1374, -t1239 * t911 + t1242 * t899 - t1462, -t1239 * t919 + t1242 * t904 + t1483, -t1239 * t921 + t1242 * t905 - t1498, t1242 * t887 - t1239 * t890 - pkin(5) * (t1239 * t929 - t1242 * t941), t1405, -t1485, -t1487, t1374, t1488, t1375, -t1239 * t897 + t1242 * t892 - t1462, t1242 * t895 - t1239 * t909 - pkin(5) * (t1239 * t982 + t1468), -t1239 * t910 + t1242 * t896 - t1483, t1242 * t884 - t1239 * t885 - pkin(5) * (t1239 * t907 - t1242 * t923); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1205, 0, t1206, 0, t1176, t1280, t1287, pkin(5) * t1287, t1239 * t1164 + t1285, t1239 * t1136 - t1242 * t1208, t1239 * t1156 - t1238 * t1298, t1239 * t1163 - t1285, t1239 * t1154 - t1241 * t1298, -t1242 * qJDD(2) + t1239 * t1192, t1239 * t1111 + t1242 * t1100 + pkin(5) * (t1242 * t1155 - t1239 * t1203), t1239 * t1112 + t1242 * t1101 + pkin(5) * (t1242 * t1157 + t1239 * t1200), t1239 * t1098 + pkin(5) * (t1242 * t1204 - t1239 * t1207), pkin(5) * (t1242 * t1099 - t1239 * t1180) - (-t1242 * pkin(1) - t1239 * pkin(6)) * t1098, t1386, -t1490, -t1489, t1387, t1486, t1404, t1239 * t931 + t1242 * t945 - t1482, t1239 * t934 + t1242 * t947 - t1499, t1239 * t916 + t1242 * t927 + t1461, t1239 * t913 + t1242 * t926 + pkin(5) * (t1239 * t958 + t1242 * t952), t1239 * t1063 + t1242 * t1104, t1489, -t1486, t1386, -t1490, t1387, t1239 * t899 + t1242 * t911 + t1461, t1239 * t904 + t1242 * t919 + t1482, t1239 * t905 + t1242 * t921 + t1499, t1239 * t887 + t1242 * t890 + pkin(5) * (t1239 * t941 + t1242 * t929), t1404, -t1486, -t1489, t1387, t1490, t1386, t1239 * t892 + t1242 * t897 + t1461, t1239 * t895 + t1242 * t909 + pkin(5) * (t1242 * t982 - t1472), t1239 * t896 + t1242 * t910 - t1482, t1239 * t884 + t1242 * t885 + pkin(5) * (t1239 * t923 + t1242 * t907); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1214, t1215, 0, 0, t1149, t1135, t1152, -t1148, t1150, 0, t1083, t1082, t1039, t1046, t1379, -t973, -t992, t1380, t995, t1381, t925, t930, t912, t900, t1060, t992, -t995, t1379, -t973, t1380, t898, t901, t902, t886, t1381, -t995, -t992, t1380, t973, t1379, t889, t893, t894, t883; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1243, 0, 0, -g(3), -t1214, 0, t1164, t1136, t1156, t1163, t1154, t1192, t1111, t1112, t1098, pkin(6) * t1098, t1376, -t976, -t998, t1378, t1001, t1377, t931, t934, t916, t913, t1063, t998, -t1001, t1376, -t976, t1378, t899, t904, t905, t887, t1377, -t1001, -t998, t1378, t976, t1376, t892, t895, t896, t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1243, 0, qJDD(1), 0, g(3), 0, -t1215, 0, t1223, -t1208, -t1301, -t1223, -t1299, -qJDD(2), t1100, t1101, 0, pkin(1) * t1098, -t1395, -t1421, t1047, t1072, -t1050, -t1400, t945, t947, t927, t926, t1104, -t1047, t1050, -t1395, -t1421, t1072, t911, t919, t921, t890, -t1400, t1050, t1047, t1072, t1421, -t1395, t897, t909, t910, t885; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1214, t1215, 0, 0, t1149, t1135, t1152, -t1148, t1150, 0, t1083, t1082, t1039, t1046, t1379, -t973, -t992, t1380, t995, t1381, t925, t930, t912, t900, t1060, t992, -t995, t1379, -t973, t1380, t898, t901, t902, t886, t1381, -t995, -t992, t1380, t973, t1379, t889, t893, t894, t883; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1201, t1203, t1210, -t1228, t1220, t1228, 0, -t1180, t1159, 0, t1303, -t1011, -t1053, t1265, t1056, t1271, t991, t1004, t943, -pkin(7) * t958, t1107, t1053, -t1056, t1303, -t1011, t1265, t920, t938, t939, t915, t1271, -t1056, -t1053, t1265, t1011, t1303, t903, t917, t918, t888; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1227, t1200, t1218, t1202, t1209, -t1227, t1180, 0, t1160, 0, -t1344, t1141, -t1397, t1344, t1398, t1191, t961, t962, -t1457, -pkin(2) * t958, t1191, t1397, -t1398, -t1344, t1141, t1344, t954, t944, t946, t914, t1191, -t1398, -t1397, t1344, -t1141, -t1344, t948, t933, t932, t891; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1223, t1208, t1301, t1223, t1299, qJDD(2), -t1159, -t1160, 0, 0, t1395, t1421, -t1047, -t1072, t1050, t1400, t1264, t1263, t1260, t1284, -t1104, t1047, -t1050, t1395, t1421, -t1072, t1257, t1384, t1383, t1389, t1400, -t1050, -t1047, -t1072, -t1421, t1395, t1256, t1255, t1254, t1258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1132, -t1399, -t1261, -t1345, t1165, t1345, 0, t1109, t1018, 0, t1345, t1261, -t1165, t1132, -t1399, -t1345, t960, t1414, t955, -qJ(4) * t964, t1345, -t1165, -t1261, -t1345, t1399, t1132, t937, t940, t1020, t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1343, t1396, t1392, -t1131, -t1262, t1343, -t1109, 0, t1019, 0, t1343, -t1392, t1262, -t1343, t1396, -t1131, t957, t956, -pkin(3) * t1096, -pkin(3) * t964, t1343, t1262, t1392, -t1131, -t1396, -t1343, t936, t972, t935, t908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1344, -t1141, t1397, -t1344, -t1398, -t1191, -t1018, -t1019, 0, 0, -t1191, -t1397, t1398, t1344, -t1141, -t1344, t1291, t1247, t1213 + t1259, t1281, -t1191, t1398, t1397, -t1344, t1141, t1344, t1385, t1382 + t953, t1245 + t1373, t1388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1191, -t1397, t1398, t1344, -t1141, -t1344, 0, t965, t963, 0, -t1191, t1398, t1397, -t1344, t1141, t1344, -qJ(5) * t1397, -qJ(5) * t1140 + t953, t1245 - t1413, -qJ(5) * t949; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1345, -t1261, t1165, -t1132, t1399, t1345, -t965, 0, t964, 0, -t1345, t1165, t1261, t1345, -t1399, -t1132, t1408, t950 - t1357, -t1358, -t1368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1343, t1392, -t1262, t1343, -t1396, t1131, -t963, -t964, 0, 0, -t1343, -t1262, -t1392, t1131, t1396, t1343, -qJ(5) * t1118 + t1212 - t1250, -qJ(5) * t1396 + t1359, t1244 - t1390, qJ(5) * t950 - t1367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1191, t1398, t1397, -t1344, t1141, t1344, 0, t953, -t949, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1343, -t1262, -t1392, t1131, t1396, t1343, -t953, 0, t950, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1345, -t1165, -t1261, -t1345, t1399, t1132, t949, -t950, 0, 0;];
m_new_reg = t1;
