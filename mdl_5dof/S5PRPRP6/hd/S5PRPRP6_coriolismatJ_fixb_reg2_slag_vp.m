% Calculate inertial parameters regressor of coriolis matrix for
% S5PRPRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d4,theta1]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:41
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRPRP6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPRP6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPRP6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5PRPRP6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:41:26
% EndTime: 2019-12-05 15:41:28
% DurationCPUTime: 0.86s
% Computational Cost: add. (200->91), mult. (495->93), div. (0->0), fcn. (372->4), ass. (0->69)
t50 = sin(qJ(4));
t48 = t50 ^ 2;
t52 = cos(qJ(4));
t49 = t52 ^ 2;
t80 = t48 + t49;
t46 = qJD(2) * qJ(3);
t51 = sin(qJ(2));
t16 = (0.1e1 / 0.2e1 - t48 / 0.2e1 - t49 / 0.2e1) * t51;
t73 = t16 * qJD(1);
t90 = t73 + t46;
t58 = t50 * pkin(4) - t52 * qJ(5);
t24 = qJ(3) + t58;
t72 = t24 * qJD(2);
t89 = t73 + t72;
t67 = t50 * qJD(5);
t88 = t58 * qJD(4) - t67;
t87 = t51 / 0.2e1;
t15 = (0.1e1 + t80) * t87;
t53 = cos(qJ(2));
t8 = (t80 - 0.1e1) * t51 * t53;
t76 = t8 * qJD(1);
t86 = t15 * qJD(3) - t76;
t85 = t52 * pkin(4);
t84 = t16 * qJD(3) + t76;
t54 = -pkin(2) - pkin(6);
t81 = t80 * t51 * t54;
t77 = t50 * qJ(5);
t25 = t77 + t85;
t3 = t24 * t52 + t25 * t50;
t79 = t3 * qJD(2);
t4 = -t24 * t50 + t25 * t52;
t78 = t4 * qJD(2);
t75 = qJD(3) * t52;
t74 = qJD(5) * t52;
t33 = t48 - t49;
t71 = t33 * qJD(2);
t70 = t33 * qJD(4);
t69 = t49 * qJD(2);
t68 = t50 * qJD(4);
t40 = t51 * qJD(2);
t42 = t52 * qJD(2);
t41 = t52 * qJD(4);
t66 = t53 * qJD(2);
t65 = qJ(3) * qJD(4);
t64 = qJD(4) * qJ(5);
t63 = t24 * t42;
t62 = t54 * t68;
t61 = t54 * t41;
t60 = t50 * t46;
t59 = t52 * t46;
t56 = t85 / 0.2e1 + t77 / 0.2e1;
t1 = (-t25 / 0.2e1 + t56) * t51;
t55 = t1 * qJD(1) - t25 * t72;
t47 = qJ(3) * qJD(3);
t44 = t53 * qJ(3);
t43 = qJD(3) * t50;
t39 = t50 * qJD(2);
t37 = t50 * t41;
t36 = t50 * t42;
t21 = t80 * t40;
t20 = -t51 * t68 + t52 * t66;
t19 = t51 * t41 + t50 * t66;
t18 = -t50 * t40 + t53 * t41;
t17 = t51 * t42 + t53 * t68;
t13 = t16 * qJD(2);
t10 = t15 * qJD(2);
t6 = t8 * qJD(2);
t2 = t25 * t87 + t56 * t51;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t6, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, -t66, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, t66, (-t51 * pkin(2) + t44) * qJD(2) + t51 * qJD(3), 0, 0, 0, 0, 0, 0, t19, t20, -t21, (t44 + t81) * qJD(2) + t86, 0, 0, 0, 0, 0, 0, t19, -t21, -t20, (t53 * t24 + t81) * qJD(2) + t2 * qJD(4) - t51 * t74 + t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17, t18, 0, 0, 0, 0, 0, 0, 0, 0, t17, 0, -t18, t2 * qJD(2) + t88 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1 * qJD(4) + t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t47, -t37, t70, 0, t37, 0, 0, t52 * t65 + t43, -t50 * t65 + t75, 0, t47, -t37, 0, -t70, 0, 0, t37, t3 * qJD(4) - t52 * t67 + t43, 0, -t4 * qJD(4) + t49 * qJD(5) - t75, (qJD(4) * t25 + qJD(3) - t74) * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t46, 0, 0, 0, 0, 0, 0, t39, t42, 0, t90, 0, 0, 0, 0, 0, 0, t39, 0, -t42, t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, t71, -t68, t36, -t41, 0, t59 - t62, -t60 - t61, 0, 0, -t36, -t68, -t71, 0, t41, t36, -t62 + t79, t88, t61 - t78, -t88 * t54 - t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, -t68, t69, t62 - t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t46, 0, 0, 0, 0, 0, 0, -t39, -t42, 0, -t90, 0, 0, 0, 0, 0, 0, -t39, 0, t42, -t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t68, -t41, 0, 0, 0, 0, 0, 0, 0, 0, -t68, 0, t41, -t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, -t71, 0, -t36, 0, 0, -t59, t60, 0, 0, t36, 0, t71, 0, 0, -t36, -t79, 0, t78, t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, -t69, t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4), -t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
