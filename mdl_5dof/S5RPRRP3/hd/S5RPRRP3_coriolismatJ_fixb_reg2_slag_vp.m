% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:04
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:04:01
% EndTime: 2019-12-05 18:04:06
% DurationCPUTime: 2.03s
% Computational Cost: add. (3032->149), mult. (5583->177), div. (0->0), fcn. (5781->6), ass. (0->122)
t180 = qJD(3) + qJD(4);
t221 = cos(qJ(4));
t179 = t221 * pkin(3);
t150 = t179 + pkin(4);
t159 = t179 / 0.2e1 - t150 / 0.2e1;
t153 = sin(qJ(4));
t154 = sin(qJ(3));
t155 = cos(qJ(3));
t142 = t153 * t155 + t221 * t154;
t147 = sin(pkin(8)) * pkin(1) + pkin(6);
t216 = pkin(7) + t147;
t137 = t216 * t154;
t138 = t216 * t155;
t227 = t221 * t137 + t153 * t138;
t69 = -t142 * qJ(5) - t227;
t233 = t180 * t69;
t140 = t153 * t154 - t221 * t155;
t207 = t140 * qJ(5);
t121 = t221 * t138;
t205 = t153 * t137;
t94 = t121 - t205;
t71 = t94 - t207;
t228 = t180 * t142;
t231 = t140 * t228;
t230 = t180 * t227;
t229 = t180 * t140;
t139 = t140 ^ 2;
t226 = t142 ^ 2;
t224 = t71 * pkin(4);
t223 = -t121 / 0.2e1;
t220 = pkin(3) * t153;
t219 = t140 * pkin(4);
t218 = t142 * pkin(4);
t217 = t154 * pkin(3);
t214 = qJD(3) * pkin(3);
t148 = -cos(pkin(8)) * pkin(1) - pkin(2);
t144 = -t155 * pkin(3) + t148;
t107 = t144 + t219;
t86 = t107 * t142;
t206 = t150 * t142;
t18 = -t71 * t140 - t69 * t142;
t203 = t18 * qJD(1);
t110 = t217 + t218;
t28 = t110 * t140 + t86;
t200 = t28 * qJD(1);
t85 = t107 * t140;
t29 = t110 * t142 - t85;
t199 = t29 * qJD(1);
t32 = -t140 * t218 - t86;
t198 = t32 * qJD(1);
t33 = -t226 * pkin(4) + t85;
t197 = t33 * qJD(1);
t126 = -t218 / 0.2e1;
t123 = t140 * t220;
t163 = -t123 / 0.2e1 - t206 / 0.2e1;
t42 = -t217 / 0.2e1 + t126 + t163;
t196 = t42 * qJD(1);
t55 = (-pkin(4) / 0.2e1 - t159) * t140;
t195 = t55 * qJD(1);
t194 = t71 * qJD(4);
t78 = t140 * t217 + t144 * t142;
t193 = t78 * qJD(1);
t79 = -t144 * t140 + t142 * t217;
t192 = t79 * qJD(1);
t80 = t139 - t226;
t191 = t80 * qJD(1);
t90 = t223 + t121 / 0.2e1;
t190 = t90 * qJD(1);
t189 = qJD(1) * t155;
t100 = t139 + t226;
t188 = t100 * qJD(1);
t187 = t140 * qJD(1);
t186 = t140 * qJD(4);
t185 = t142 * qJD(1);
t184 = t142 * qJD(4);
t134 = t142 * qJD(5);
t145 = -t154 ^ 2 + t155 ^ 2;
t183 = t145 * qJD(1);
t182 = t154 * qJD(3);
t181 = t155 * qJD(3);
t178 = qJD(4) * t220;
t177 = pkin(4) * t185;
t176 = pkin(4) * t184;
t174 = t140 * t185;
t173 = t144 * t187;
t172 = t144 * t185;
t171 = t148 * t154 * qJD(1);
t170 = t148 * t189;
t169 = t154 * t181;
t168 = t221 * qJD(3);
t167 = t221 * qJD(4);
t165 = pkin(3) * t167;
t9 = t107 * t110;
t162 = t9 * qJD(1);
t10 = pkin(4) * t86;
t161 = t10 * qJD(1);
t16 = t144 * t217;
t160 = t16 * qJD(1);
t158 = t159 * t142;
t122 = (t179 - t150) * t220;
t156 = t159 * t71;
t4 = t224 / 0.2e1 + t156;
t127 = t218 / 0.2e1;
t57 = t127 + t158;
t157 = -t4 * qJD(1) - t57 * qJD(2) - t122 * qJD(3);
t49 = 0.2e1 * t223 + t205;
t146 = t154 * t189;
t130 = t140 * qJD(5);
t124 = t142 * t220;
t84 = t90 * qJD(3);
t83 = t90 * qJD(4);
t73 = t153 * t214 - t190;
t72 = pkin(3) * t168;
t60 = -t180 * t220 + t190;
t59 = (-t168 - t167) * pkin(3);
t56 = t126 + t158;
t54 = t219 / 0.2e1 - t159 * t140;
t41 = t217 / 0.2e1 + t127 + t163;
t31 = t49 + t207;
t20 = t180 * t80;
t3 = -t224 / 0.2e1 + t156;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, t145 * qJD(3), 0, -t169, 0, 0, t148 * t182, t148 * t181, 0, 0, -t231, t20, 0, t231, 0, 0, t78 * qJD(3) + t144 * t184, t79 * qJD(3) - t144 * t186, 0, t16 * qJD(3), -t231, t20, 0, t231, 0, 0, t28 * qJD(3) - t32 * qJD(4), t29 * qJD(3) - t33 * qJD(4), t100 * qJD(5), t9 * qJD(3) + t10 * qJD(4) + t18 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, t183, t181, -t146, -t182, 0, -t147 * t181 + t171, t147 * t182 + t170, 0, 0, -t174, t191, -t229, t174, -t228, 0, -qJD(3) * t94 + t49 * qJD(4) + t193, t192 + t230, (t140 * t179 - t124) * qJD(3), (-t153 * t227 - t221 * t94) * t214 + t160, -t174, t191, -t229, t174, -t228, 0, -qJD(3) * t71 + t31 * qJD(4) + t200, t199 - t233, (t150 * t140 - t124) * qJD(3) + t54 * qJD(4), (-t71 * t150 + t220 * t69) * qJD(3) + t3 * qJD(4) + t41 * qJD(5) + t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174, t191, -t229, t174, -t228, 0, t49 * qJD(3) - t94 * qJD(4) + t172, -t173 + t230, 0, 0, -t174, t191, -t229, t174, -t228, 0, t31 * qJD(3) - t194 - t198, -t197 - t233, pkin(4) * t186 + t54 * qJD(3), -pkin(4) * t194 + t3 * qJD(3) + t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t188, t41 * qJD(3) + t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t182, -t181, 0, 0, 0, 0, 0, 0, 0, 0, -t228, t229, 0, (-t142 * t179 - t123) * qJD(3), 0, 0, 0, 0, 0, 0, -t228, t229, 0, (-t123 - t206) * qJD(3) + t56 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t228, t229, 0, 0, 0, 0, 0, 0, 0, 0, -t228, t229, 0, t56 * qJD(3) - t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t146, -t183, 0, t146, 0, 0, -t171, -t170, 0, 0, t174, -t191, 0, -t174, 0, 0, t83 - t193, -t192, 0, -t160, t174, -t191, 0, -t174, 0, 0, -t134 + t83 - t200, t130 - t199, t55 * qJD(4), t4 * qJD(4) + t42 * qJD(5) - t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t178, -t165, 0, 0, 0, 0, 0, 0, 0, 0, -t178, -t165, 0, t122 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, t59, 0, 0, 0, 0, 0, 0, 0, 0, t60, t59, t195, -pkin(4) * t178 - t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, t187, 0, t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, -t191, 0, -t174, 0, 0, -t84 - t172, t173, 0, 0, t174, -t191, 0, -t174, 0, 0, -t134 - t84 + t198, t130 + t197, -t55 * qJD(3), -pkin(4) * t134 - t4 * qJD(3) - t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, t72, 0, 0, 0, 0, 0, 0, 0, 0, t73, t72, -t195, t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, t187, 0, -t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, -t229, -t188, -t42 * qJD(3) + t176 - t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, -t187, 0, -t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, -t187, 0, t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
