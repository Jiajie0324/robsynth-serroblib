% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:07
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP9_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP9_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP9_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP9_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:06:07
% EndTime: 2019-12-31 22:06:28
% DurationCPUTime: 9.68s
% Computational Cost: add. (8617->588), mult. (18124->766), div. (0->0), fcn. (17818->6), ass. (0->431)
t380 = cos(qJ(2));
t604 = t380 * pkin(7);
t378 = sin(qJ(2));
t607 = t378 * pkin(2);
t334 = -t604 + t607;
t379 = cos(qJ(3));
t323 = t379 * t334;
t377 = sin(qJ(3));
t548 = t377 * t378;
t354 = pkin(6) * t548;
t543 = t379 * t380;
t223 = t378 * pkin(3) - pkin(8) * t543 + t323 + t354;
t376 = sin(qJ(4));
t198 = t376 * t223;
t321 = t377 * t334;
t545 = t378 * t379;
t499 = pkin(6) * t545;
t547 = t377 * t380;
t255 = -pkin(8) * t547 + t321 - t499;
t613 = cos(qJ(4));
t237 = t613 * t255;
t534 = t198 / 0.2e1 + t237 / 0.2e1;
t482 = t613 * t379;
t295 = -t376 * t548 + t378 * t482;
t565 = t295 * qJ(5);
t483 = t613 * t377;
t549 = t376 * t379;
t318 = t483 + t549;
t292 = t318 * t378;
t610 = t292 * pkin(4);
t450 = -t565 + t610;
t612 = pkin(3) * t377;
t486 = pkin(6) + t612;
t455 = t486 * t378;
t160 = t455 + t450;
t611 = pkin(3) * t379;
t365 = -pkin(2) - t611;
t562 = t318 * qJ(5);
t550 = t376 * t377;
t412 = t482 - t550;
t609 = t412 * pkin(4);
t449 = -t562 - t609;
t197 = t365 + t449;
t622 = -t412 / 0.2e1;
t643 = t197 * t292 / 0.2e1 + t160 * t622;
t637 = -pkin(8) - pkin(7);
t333 = t637 * t379;
t469 = -t376 * t333 - t637 * t483;
t652 = t469 * t380;
t656 = -t652 / 0.2e1;
t659 = t534 - t643 + t656;
t555 = t365 * t292;
t655 = t652 / 0.2e1;
t658 = t555 / 0.2e1 - t534 + t655;
t657 = t534 + t643 + t655;
t430 = -t455 / 0.2e1;
t53 = t656 - t412 * t430 - t534 - t555 / 0.2e1;
t501 = qJD(3) + qJD(4);
t351 = pkin(6) * t547;
t605 = t380 * pkin(2);
t249 = -t351 + (t637 * t378 - pkin(1) - t605) * t379;
t388 = -t380 * pkin(3) + t249;
t196 = t613 * t388;
t454 = -t378 * pkin(7) - t605;
t434 = -pkin(1) + t454;
t498 = pkin(6) * t543;
t281 = t377 * t434 + t498;
t250 = -pkin(8) * t548 + t281;
t552 = t376 * t250;
t131 = -t196 + t552;
t118 = pkin(4) * t380 + t131;
t484 = t613 * t249;
t144 = t484 - t552;
t654 = t118 + t144;
t392 = -t613 * t333 + t637 * t550;
t648 = t392 * t380;
t231 = t648 / 0.2e1;
t620 = t318 / 0.2e1;
t624 = t295 / 0.2e1;
t418 = t160 * t620 + t197 * t624;
t647 = t231 + t418;
t485 = t613 * t223;
t551 = t376 * t255;
t532 = t485 / 0.2e1 - t551 / 0.2e1;
t606 = t378 * pkin(4);
t451 = -t606 / 0.2e1 - t532;
t649 = -t392 / 0.2e1;
t630 = -t469 / 0.2e1;
t653 = t469 / 0.2e1;
t232 = -t648 / 0.2e1;
t375 = t380 ^ 2;
t640 = t295 ^ 2;
t275 = t375 + t640;
t466 = t501 * t380;
t524 = qJD(2) * t318;
t651 = -t275 * qJD(1) - t295 * t524 + t466;
t650 = t501 * t469;
t496 = t613 * pkin(3);
t463 = t496 / 0.2e1;
t404 = -t196 / 0.2e1 + t380 * t463;
t66 = t484 / 0.2e1 + t404;
t488 = t66 * qJD(1) - qJD(3) * t496;
t645 = t392 * qJD(5);
t644 = t292 * t630 + t295 * t649;
t372 = t377 ^ 2;
t374 = t379 ^ 2;
t346 = t374 - t372;
t506 = t378 * qJD(1);
t480 = t379 * t506;
t642 = qJD(2) * t346 - 0.2e1 * t377 * t480;
t641 = t501 * t392;
t313 = t318 ^ 2;
t639 = -pkin(4) / 0.2e1;
t638 = pkin(4) / 0.2e1;
t636 = -qJ(5) / 0.2e1;
t635 = qJ(5) / 0.2e1;
t224 = t613 * t250;
t387 = t376 * t388;
t132 = t224 + t387;
t542 = t380 * qJ(5);
t117 = t132 - t542;
t634 = t117 / 0.2e1;
t633 = -t197 / 0.2e1;
t238 = pkin(4) * t318 - qJ(5) * t412;
t200 = t238 + t612;
t632 = -t200 / 0.2e1;
t626 = t392 / 0.2e1;
t625 = -t292 / 0.2e1;
t623 = t412 / 0.2e1;
t621 = -t318 / 0.2e1;
t608 = t376 * pkin(3);
t355 = qJ(5) + t608;
t619 = -t355 / 0.2e1;
t618 = t355 / 0.2e1;
t364 = -t496 - pkin(4);
t617 = t364 / 0.2e1;
t616 = t376 / 0.2e1;
t615 = -t378 / 0.2e1;
t614 = t380 / 0.2e1;
t86 = -t292 * t412 - t318 * t295;
t603 = t501 * t86;
t602 = pkin(3) * qJD(4);
t294 = t318 * t380;
t297 = t412 * t380;
t427 = t294 * t636 + t297 * t639;
t470 = t131 / 0.2e1 - t118 / 0.2e1;
t471 = t634 - t132 / 0.2e1;
t7 = t471 * t318 + t412 * t470 + t427;
t601 = t7 * qJD(1);
t553 = t376 * t249;
t143 = t224 + t553;
t383 = -t387 / 0.2e1 - t224 / 0.2e1;
t489 = t608 / 0.2e1;
t382 = t380 * t489 + t383;
t452 = t224 / 0.2e1 + t553 / 0.2e1;
t65 = t382 - t452;
t600 = -t143 * qJD(3) + t65 * qJD(4);
t599 = t65 * qJD(3) - t132 * qJD(4);
t176 = pkin(4) * t295 + qJ(5) * t292;
t500 = pkin(3) * t545;
t165 = t176 + t500;
t581 = t160 * t295;
t584 = t143 * t380;
t29 = t165 * t292 + t581 + t584;
t598 = qJD(1) * t29;
t586 = t132 * t380;
t34 = t176 * t292 + t581 + t586;
t597 = qJD(1) * t34;
t381 = t380 * t619 - t542 / 0.2e1 - t383;
t49 = -t381 + t452;
t596 = qJD(1) * t49;
t64 = t382 + t452;
t595 = qJD(1) * t64;
t235 = t295 * t455;
t70 = -t292 * t500 - t235 - t584;
t594 = qJD(1) * t70;
t583 = t144 * t380;
t71 = t583 + (-t486 * t292 + t295 * t611) * t378;
t593 = qJD(1) * t71;
t587 = t131 * t380;
t78 = -t292 * t455 - t587;
t592 = qJD(1) * t78;
t79 = -t235 - t586;
t591 = qJD(1) * t79;
t530 = t237 + t198;
t546 = t378 * qJ(5);
t120 = t530 + t546;
t413 = t485 - t551;
t125 = -t413 - t606;
t324 = pkin(3) * t547 + t380 * pkin(6);
t161 = pkin(4) * t294 - qJ(5) * t297 + t324;
t11 = t117 * t120 + t118 * t125 + t160 * t161;
t590 = t11 * qJD(1);
t12 = -t117 * t131 + t118 * t132 + t160 * t176;
t589 = t12 * qJD(1);
t13 = t117 * t144 + t118 * t143 + t160 * t165;
t588 = t13 * qJD(1);
t14 = -t117 * t294 + t118 * t297 - t120 * t292 + t125 * t295;
t585 = t14 * qJD(1);
t15 = (-t117 + t132) * t295 + (-t118 + t131) * t292;
t582 = t15 * qJD(1);
t578 = t197 * t412;
t577 = t197 * t318;
t20 = (-t117 + t143) * t295 - t654 * t292;
t576 = t20 * qJD(1);
t25 = -t117 * t378 + t120 * t380 + t160 * t297 + t161 * t295;
t575 = t25 * qJD(1);
t26 = -t118 * t378 + t125 * t380 + t160 * t294 + t161 * t292;
t574 = t26 * qJD(1);
t571 = t469 * t378;
t567 = t392 * t378;
t121 = t160 * t292;
t30 = t165 * t295 - t121 + t583;
t564 = t30 * qJD(1);
t31 = t131 * t378 - t324 * t292 - t294 * t455 + t380 * t413;
t563 = t31 * qJD(1);
t32 = t530 * t380 + t324 * t295 + (t486 * t297 - t132) * t378;
t561 = t32 * qJD(1);
t33 = t176 * t295 - t121 - t587;
t560 = t33 * qJD(1);
t559 = t355 * t295;
t558 = t355 * t318;
t557 = t364 * t292;
t556 = t364 * t412;
t554 = t365 * t295;
t373 = t378 ^ 2;
t544 = t379 * t373;
t55 = t117 * t380 + t581;
t541 = t55 * qJD(1);
t539 = t66 * qJD(3);
t538 = t66 * qJD(4);
t142 = -t292 * t620 + t295 * t623;
t537 = t501 * t142;
t347 = t375 - t373;
t529 = qJ(5) * qJD(4);
t172 = t292 * t378 - t294 * t380;
t528 = qJD(1) * t172;
t173 = -t295 * t378 + t297 * t380;
t527 = qJD(1) * t173;
t216 = -pkin(6) * t544 - t281 * t380;
t526 = qJD(1) * t216;
t525 = qJD(1) * t295;
t523 = qJD(2) * t365;
t522 = qJD(2) * t377;
t521 = qJD(2) * t379;
t520 = qJD(3) * t377;
t519 = qJD(3) * t379;
t518 = qJD(3) * t380;
t517 = qJD(4) * t365;
t516 = qJD(5) * t318;
t515 = qJD(5) * t380;
t114 = -t292 * t297 - t294 * t295;
t514 = t114 * qJD(1);
t150 = t321 * t380 + (-t281 + t498) * t378;
t513 = t150 * qJD(1);
t390 = -t379 * t434 + t351;
t151 = t390 * t378 + (-t354 + t323) * t380;
t512 = t151 * qJD(1);
t398 = -t549 / 0.2e1 - t483 / 0.2e1;
t186 = (t621 + t398) * t380;
t180 = t186 * qJD(1);
t397 = t482 / 0.2e1 - t550 / 0.2e1;
t187 = (t623 + t397) * t380;
t181 = t187 * qJD(1);
t215 = pkin(6) * t373 * t377 + t380 * t390;
t511 = t215 * qJD(1);
t510 = t292 * qJD(5);
t303 = t412 * qJD(5);
t317 = t347 * t377;
t509 = t317 * qJD(1);
t320 = t375 * t379 - t544;
t508 = t320 * qJD(1);
t507 = t347 * qJD(1);
t505 = t378 * qJD(2);
t504 = t380 * qJD(1);
t503 = t380 * qJD(2);
t368 = qJD(4) * t496;
t502 = t368 + qJD(5);
t497 = t613 / 0.2e1;
t495 = pkin(1) * t506;
t494 = pkin(1) * t504;
t493 = t376 * t602;
t492 = t612 / 0.2e1;
t491 = -t611 / 0.2e1;
t490 = -t608 / 0.2e1;
t481 = t292 * t525;
t479 = t412 * t524;
t478 = t377 * t521;
t477 = t379 * t505;
t476 = t377 * t518;
t475 = t379 * t518;
t474 = t377 * t519;
t473 = t378 * t503;
t472 = t378 * t504;
t468 = t117 * t621 + t118 * t623 + t644;
t467 = t501 * t318;
t465 = t500 / 0.2e1;
t464 = -qJD(3) + t504;
t429 = t455 / 0.2e1;
t460 = t318 * t429 + t532 + t554 / 0.2e1;
t459 = t377 * t477;
t457 = t532 + t606;
t456 = t504 - qJD(3) / 0.2e1;
t453 = (t618 + t635) * t378;
t384 = t117 * t653 + t143 * t630 + t160 * t632 + t165 * t633 + t654 * t649;
t420 = t120 * t618 + t125 * t617;
t1 = t384 + t420;
t43 = t197 * t200;
t448 = -t1 * qJD(1) + t43 * qJD(2);
t419 = -t160 * t238 / 0.2e1 + t176 * t633;
t426 = t120 * t635 + t125 * t639;
t3 = t392 * t470 + t469 * t471 + t419 + t426;
t44 = t197 * t238;
t447 = -t3 * qJD(1) + t44 * qJD(2);
t414 = t294 * t619 + t297 * t617;
t5 = (t634 - t143 / 0.2e1) * t318 - (t144 / 0.2e1 + t118 / 0.2e1) * t412 + (t626 + t649) * t295 + (t630 + t653) * t292 + t414;
t446 = t5 * qJD(1);
t336 = -qJD(4) + t464;
t444 = -t554 / 0.2e1 + t532;
t417 = t165 * t620 + t200 * t624;
t16 = t453 + t417 + t659;
t88 = -t200 * t318 - t578;
t443 = qJD(1) * t16 - qJD(2) * t88;
t389 = t165 * t622 - t292 * t632 + t647;
t18 = (t617 + t639) * t378 + t389 - t532;
t87 = -t200 * t412 + t577;
t442 = -qJD(1) * t18 - qJD(2) * t87;
t415 = t176 * t620 + t238 * t624;
t21 = t415 + t546 + t659;
t94 = -t238 * t318 - t578;
t441 = qJD(1) * t21 - qJD(2) * t94;
t399 = t232 - t418;
t416 = t176 * t623 + t238 * t625;
t23 = t399 + t416 + t457;
t93 = -t238 * t412 + t577;
t440 = qJD(1) * t23 - qJD(2) * t93;
t403 = -t496 / 0.2e1 - t364 / 0.2e1 + t639;
t423 = t619 + t489 + t635;
t69 = t292 * t403 + t295 * t423;
t73 = t318 * t423 - t403 * t412;
t439 = qJD(1) * t69 + qJD(2) * t73;
t152 = t292 ^ 2 - t640;
t47 = qJD(1) * t152 + qJD(2) * t86;
t177 = t412 ^ 2 - t313;
t62 = qJD(1) * t86 + qJD(2) * t177;
t182 = t318 * t365 - t412 * t612;
t402 = -t292 * t492 + t232;
t36 = (-t412 * t491 + t486 * t621 + t463) * t378 + t402 + t444;
t438 = qJD(1) * t36 - qJD(2) * t182;
t183 = t318 * t612 + t365 * t412;
t35 = -t295 * t612 / 0.2e1 + (t318 * t491 + t486 * t622 + t490) * t378 + t658;
t437 = qJD(1) * t35 - qJD(2) * t183;
t67 = t552 - t484 / 0.2e1 + t404;
t436 = t67 * qJD(3) + t131 * qJD(4);
t435 = -t144 * qJD(3) + t67 * qJD(4);
t433 = t464 * t378;
t428 = t607 / 0.2e1 - t604 / 0.2e1;
t425 = t143 * t638 + t144 * t636;
t424 = qJ(5) * t653 + t392 * t638;
t400 = t428 * t377;
t245 = t321 / 0.2e1 + t400;
t422 = pkin(2) * t521 - qJD(1) * t245;
t401 = t428 * t379;
t246 = -t323 / 0.2e1 - t401;
t421 = pkin(2) * t522 - qJD(1) * t246;
t27 = t451 + t647;
t411 = qJD(1) * t27 + t197 * t524;
t52 = -t412 * t429 + t658;
t410 = qJD(1) * t52 - t412 * t523;
t51 = t318 * t430 + t232 + t444;
t409 = qJD(1) * t51 - t318 * t523;
t408 = t379 * t433;
t129 = t615 - t142;
t407 = qJD(1) * t129 - t479;
t74 = qJD(2) * t142 - t481;
t90 = -qJD(1) * t142 - t479;
t304 = (t372 / 0.2e1 - t374 / 0.2e1) * t378;
t405 = -qJD(1) * t304 + t478;
t396 = qJD(1) * t377 * t544 + qJD(2) * t304;
t316 = t346 * t373;
t395 = qJD(1) * t316 + 0.2e1 * t459;
t386 = (t117 * t497 + t118 * t616) * pkin(3) + t131 * t619 + t132 * t617;
t10 = t386 + t425;
t280 = (t613 * t355 + t364 * t376) * pkin(3);
t385 = (t392 * t497 + t469 * t616) * pkin(3) + t469 * t619 + t392 * t617;
t40 = t385 + t424;
t393 = t10 * qJD(1) + t40 * qJD(2) + t280 * qJD(3);
t371 = qJ(5) * qJD(5);
t359 = -t506 / 0.2e1;
t358 = t506 / 0.2e1;
t357 = t505 / 0.2e1;
t345 = t355 * qJD(5);
t312 = t336 * qJ(5);
t311 = t456 * t378;
t300 = t304 * qJD(3);
t289 = (-qJD(4) / 0.2e1 + t456) * t378;
t208 = t295 * t516;
t191 = t354 + t323 / 0.2e1 - t401;
t190 = t499 - t321 / 0.2e1 + t400;
t189 = t318 * t614 + t398 * t380;
t188 = t397 * t380 - t412 * t614;
t164 = qJD(2) * t313 + t318 * t525;
t148 = t186 * qJD(2) - t295 * t504;
t147 = t187 * qJD(2) - t292 * t504;
t130 = t615 + t142;
t128 = -t467 - t180;
t127 = t412 * t501 - t181;
t77 = t189 * qJD(2) + t295 * t336;
t76 = t188 * qJD(2) + t292 * t336;
t72 = -t558 / 0.2e1 + t556 / 0.2e1 - t562 / 0.2e1 - t609 / 0.2e1 + (t318 * t616 + t613 * t623) * pkin(3);
t68 = -t559 / 0.2e1 - t557 / 0.2e1 - t565 / 0.2e1 + t610 / 0.2e1 + (-t292 * t497 + t295 * t616) * pkin(3);
t61 = t64 * qJD(3);
t56 = t64 * qJD(4);
t54 = t231 + t460;
t50 = t381 + t452;
t42 = qJD(3) * t608 - t595;
t41 = -t501 * t608 + t595;
t39 = t385 - t424;
t38 = t295 * t492 + t318 * t465 + t378 * t490 + t53;
t37 = t378 * t463 - t412 * t465 - t402 + t460;
t28 = t399 + t451;
t24 = -t416 + t457 + t647;
t22 = -t415 + t546 + t657;
t19 = t364 * t615 + t389 - t451;
t17 = t453 - t417 + t657;
t9 = t386 - t425;
t8 = t131 * t622 + t132 * t620 + t427 + t468 - t644;
t6 = t143 * t620 + t144 * t623 + t392 * t624 - t469 * t625 + t414 + t468;
t4 = t117 * t630 + t118 * t626 + t131 * t649 + t132 * t653 - t419 + t426;
t2 = -t384 + t420;
t45 = [0, 0, 0, t473, t347 * qJD(2), 0, 0, 0, -pkin(1) * t505, -pkin(1) * t503, -t373 * t474 + t374 * t473, -t316 * qJD(3) - 0.2e1 * t380 * t459, -t320 * qJD(2) + t378 * t476, t317 * qJD(2) + t378 * t475, -t473, -qJD(2) * t151 - qJD(3) * t216, qJD(2) * t150 - qJD(3) * t215, (qJD(2) * t297 - t292 * t501) * t295, qJD(2) * t114 + t152 * t501, -t173 * qJD(2) + t292 * t466, -t172 * qJD(2) + t295 * t466, -t473, -qJD(2) * t31 - qJD(3) * t70 - qJD(4) * t79, qJD(2) * t32 + qJD(3) * t71 + qJD(4) * t78, qJD(2) * t26 + qJD(3) * t29 + qJD(4) * t34 - t295 * t510, t14 * qJD(2) + t20 * qJD(3) + t15 * qJD(4) + t380 * t510, -qJD(2) * t25 - qJD(3) * t30 - qJD(4) * t33 + qJD(5) * t275, qJD(2) * t11 + qJD(3) * t13 + qJD(4) * t12 - qJD(5) * t55; 0, 0, 0, t472, t507, t503, -t505, 0, -pkin(6) * t503 - t495, pkin(6) * t505 - t494, -t300 + (t374 * t506 + t478) * t380, -0.2e1 * t378 * t474 + t642 * t380, t377 * t505 - t508, t477 + t509, -t311, -t512 + (t377 * t454 - t498) * qJD(2) + t191 * qJD(3), t513 + (t379 * t454 + t351) * qJD(2) + t190 * qJD(3), (t524 + t525) * t297 + t537, t514 + (-t294 * t318 + t297 * t412) * qJD(2) + t603, t188 * t501 + t318 * t505 - t527, t189 * t501 + t412 * t505 - t528, -t289, -t563 + (t294 * t365 - t324 * t412 - t571) * qJD(2) + t37 * qJD(3) + t54 * qJD(4), t561 + (t297 * t365 + t318 * t324 - t567) * qJD(2) + t38 * qJD(3) + t53 * qJD(4), t574 + (-t161 * t412 + t197 * t294 - t571) * qJD(2) + t19 * qJD(3) + t24 * qJD(4) + t130 * qJD(5), t585 + (t120 * t412 + t125 * t318 - t294 * t392 + t297 * t469) * qJD(2) + t6 * qJD(3) + t8 * qJD(4) + t188 * qJD(5), -t575 + (-t161 * t318 - t197 * t297 + t567) * qJD(2) + t17 * qJD(3) + t22 * qJD(4) + t208, t590 + (t120 * t392 + t125 * t469 + t161 * t197) * qJD(2) + t2 * qJD(3) + t4 * qJD(4) + t28 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t396, -t395, t377 * t433, t408, t357, qJD(2) * t191 - qJD(3) * t281 - t526, t190 * qJD(2) + qJD(3) * t390 - t511, t74, t47, t76, t77, t357, qJD(2) * t37 - t594 + t600, qJD(2) * t38 + t435 + t593, qJD(2) * t19 + t598 + t600, t576 + t6 * qJD(2) + (-t557 - t559) * qJD(3) + t68 * qJD(4) - t510, t17 * qJD(2) - t435 - t515 - t564, t588 + t2 * qJD(2) + (t143 * t364 + t144 * t355) * qJD(3) + t9 * qJD(4) + t50 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t47, t76, t77, t357, qJD(2) * t54 - t591 + t599, qJD(2) * t53 + t436 + t592, qJD(2) * t24 + t597 + t599, t8 * qJD(2) + t68 * qJD(3) + qJD(4) * t450 - t510 + t582, t22 * qJD(2) - t436 - t515 - t560, t589 + t4 * qJD(2) + t9 * qJD(3) + (-pkin(4) * t132 - qJ(5) * t131) * qJD(4) + t117 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t130 - t481, t76, -t651, qJD(2) * t28 + qJD(3) * t50 + qJD(4) * t117 - t541; 0, 0, 0, -t472, -t507, 0, 0, 0, t495, t494, -t374 * t472 - t300, 0.2e1 * t377 * t408, -t475 + t508, t476 - t509, t311, qJD(3) * t246 + t512, qJD(3) * t245 - t513, -t297 * t525 + t537, -t514 + t603, -t187 * t501 + t527, -t186 * t501 + t528, t289, -qJD(3) * t36 - qJD(4) * t51 + t563, -qJD(3) * t35 - qJD(4) * t52 - t561, qJD(3) * t18 - qJD(4) * t23 - qJD(5) * t129 - t574, -qJD(3) * t5 - qJD(4) * t7 - qJD(5) * t187 - t585, -qJD(3) * t16 - qJD(4) * t21 + t208 + t575, -qJD(3) * t1 - qJD(4) * t3 - qJD(5) * t27 - t590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t474, t346 * qJD(3), 0, 0, 0, -pkin(2) * t520, -pkin(2) * t519, t412 * t467, t501 * t177, 0, 0, 0, qJD(3) * t182 + t318 * t517, qJD(3) * t183 + t412 * t517, qJD(3) * t87 + qJD(4) * t93 + t303 * t318, 0, qJD(3) * t88 + qJD(4) * t94 + qJD(5) * t313, qJD(3) * t43 + qJD(4) * t44 - t197 * t516; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, t642, -t464 * t379, t464 * t377, t359, -pkin(7) * t519 - t421, pkin(7) * t520 - t422, -t90, t62, t127, t128, t359, -t438 - t641, t650 - t437, -t442 - t641, (t556 - t558) * qJD(3) + t72 * qJD(4) + t303 - t446, -t650 - t443, (-t355 * t469 + t364 * t392) * qJD(3) + t39 * qJD(4) + t645 + t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, t62, t127, t128, t359, -t409 - t641, -t410 + t650, -t440 - t641, t72 * qJD(3) + qJD(4) * t449 + t303 - t601, -t650 - t441, t39 * qJD(3) + (-pkin(4) * t392 - qJ(5) * t469) * qJD(4) + t645 + t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t407, t127, t164, -t411 + t641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t396, t395, (-t377 * t506 + t521) * t380, (-t480 - t522) * t380, t357, -qJD(2) * t246 + t526, -qJD(2) * t245 + t511, -t74, -t47, t147, t148, t357, qJD(2) * t36 + t56 + t594, qJD(2) * t35 + t538 - t593, -qJD(2) * t18 + t56 - t598, qJD(2) * t5 + qJD(4) * t69 - t576, t16 * qJD(2) - t515 - t538 + t564, qJD(2) * t1 + qJD(4) * t10 - qJD(5) * t49 - t588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, -t642, t379 * t504, -t377 * t504, t358, t421, t422, t90, -t62, t181, t180, t358, t438, t437, t442, qJD(4) * t73 + t446, t443, qJD(4) * t40 - t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t493, -t368, -t493, 0, t502, qJD(4) * t280 + t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, -t368 + t488, t41, t439, -t488 + t502, (-pkin(4) * t376 + qJ(5) * t613) * t602 + t345 + t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t336, t355 * t501 - t596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, -t47, t147, t148, t357, qJD(2) * t51 + t591 - t61, qJD(2) * t52 - t539 - t592, qJD(2) * t23 - t597 - t61, qJD(2) * t7 - qJD(3) * t69 - t582, t21 * qJD(2) - t515 + t539 + t560, -qJ(5) * t515 + t3 * qJD(2) - t10 * qJD(3) - t589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, -t62, t181, t180, t358, t409, t410, t440, -qJD(3) * t73 + t601, t441, -qJD(3) * t40 - t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, -t488, t42, -t439, qJD(5) + t488, t371 - t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t336, -t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t129 + t481, t147, t651, t27 * qJD(2) + t49 * qJD(3) + t380 * t529 + t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407, t181, -t164, t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t336, -qJD(3) * t355 - t529 + t596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t336, t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t45;
