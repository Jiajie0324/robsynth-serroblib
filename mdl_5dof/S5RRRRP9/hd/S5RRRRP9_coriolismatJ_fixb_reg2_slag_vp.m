% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:07
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP9_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP9_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP9_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP9_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:06:10
% EndTime: 2019-12-31 22:06:35
% DurationCPUTime: 16.08s
% Computational Cost: add. (12455->743), mult. (26471->922), div. (0->0), fcn. (26175->6), ass. (0->556)
t499 = sin(qJ(3));
t500 = sin(qJ(2));
t502 = cos(qJ(2));
t790 = t502 * pkin(2);
t829 = -pkin(8) - pkin(7);
t539 = t829 * t500 - pkin(1) - t790;
t501 = cos(qJ(3));
t711 = t501 * t502;
t651 = pkin(6) * t711;
t516 = t499 * t539 + t651;
t799 = cos(qJ(4));
t866 = t799 * t516;
t874 = -t866 / 0.2e1;
t498 = sin(qJ(4));
t869 = t498 * t516;
t873 = t869 / 0.2e1;
t635 = t799 * t499;
t718 = t498 * t501;
t435 = t635 + t718;
t405 = t435 * t500;
t407 = t435 * t502;
t634 = t799 * t501;
t716 = t499 * t500;
t408 = -t498 * t716 + t500 * t634;
t715 = t499 * t502;
t456 = t498 * t715;
t410 = t502 * t634 - t456;
t170 = -t405 * t410 - t407 * t408;
t856 = t170 * qJD(1);
t431 = t498 * t499 - t634;
t124 = -t405 * t431 + t408 * t435;
t655 = qJD(3) + qJD(4);
t868 = t655 * t124;
t872 = t856 + t868;
t871 = t868 + qJD(2) * (t407 * t435 + t410 * t431) - t856;
t529 = t539 * t501;
t797 = pkin(6) * t499;
t513 = (-pkin(3) - t797) * t502 + t529;
t511 = t498 * t513;
t193 = t866 + t511;
t870 = -t193 / 0.2e1;
t812 = -t431 / 0.2e1;
t811 = t435 / 0.2e1;
t211 = -t405 * t811 + t408 * t812;
t867 = t655 * t211;
t684 = qJD(1) * t405;
t865 = (qJD(2) * t431 + t684) * t407 - t867;
t864 = -t407 * t684 - t867;
t789 = t502 * pkin(7);
t793 = t500 * pkin(2);
t454 = -t789 + t793;
t441 = t501 * t454;
t474 = pkin(6) * t716;
t398 = t474 + t441;
t792 = t500 * pkin(3);
t322 = -pkin(8) * t711 + t398 + t792;
t639 = t799 * t322;
t438 = t499 * t454;
t713 = t500 * t501;
t652 = pkin(6) * t713;
t399 = t438 - t652;
t353 = -pkin(8) * t715 + t399;
t719 = t498 * t353;
t696 = t639 / 0.2e1 - t719 / 0.2e1;
t791 = t500 * pkin(4);
t587 = -t791 / 0.2e1 - t696;
t815 = -t405 / 0.2e1;
t442 = pkin(3) * t716 + t500 * pkin(6);
t862 = -t442 / 0.2e1;
t486 = -pkin(3) * t501 - pkin(2);
t861 = -t486 / 0.2e1;
t847 = t655 * t435;
t860 = t431 * t847;
t430 = t435 ^ 2;
t264 = t431 ^ 2 - t430;
t859 = t655 * t264;
t659 = t500 * qJD(2);
t576 = t500 * t405 - t407 * t502;
t842 = qJD(1) * t576;
t858 = t431 * t659 + t842;
t497 = t502 ^ 2;
t831 = t408 ^ 2;
t384 = t497 + t831;
t682 = qJD(2) * t435;
t846 = t655 * t502;
t857 = -t384 * qJD(1) - t408 * t682 + t846;
t288 = t799 * t513;
t192 = t869 - t288;
t855 = t192 * t812 + t435 * t870;
t854 = -qJD(2) * t576 + t408 * t846;
t629 = t431 * t682;
t853 = -qJD(1) * t211 + t629;
t683 = qJD(1) * t408;
t632 = t405 * t683;
t852 = qJD(2) * t211 - t632;
t225 = t405 ^ 2 - t831;
t850 = qJD(2) * t170 + t225 * t655;
t67 = qJD(1) * t225 - qJD(2) * t124;
t86 = qJD(1) * t124 - qJD(2) * t264;
t337 = pkin(4) * t435 + qJ(5) * t431;
t798 = pkin(3) * t499;
t292 = t337 + t798;
t849 = t292 / 0.2e1;
t658 = t502 * qJD(1);
t606 = -qJD(3) + t658;
t457 = -qJD(4) + t606;
t848 = t408 * t457;
t580 = t829 * t634;
t641 = t498 * t829;
t604 = t499 * t641;
t369 = -t580 + t604;
t743 = t369 * t502;
t330 = t743 / 0.2e1;
t737 = t408 * qJ(5);
t796 = t405 * pkin(4);
t586 = -t737 + t796;
t238 = t586 + t442;
t735 = t435 * qJ(5);
t795 = t431 * pkin(4);
t585 = -t735 + t795;
t289 = t486 + t585;
t814 = t408 / 0.2e1;
t550 = t238 * t811 + t289 * t814;
t845 = t330 + t550;
t599 = t829 * t799;
t440 = t501 * t599;
t553 = -t580 / 0.2e1;
t352 = t440 / 0.2e1 + t553;
t666 = t352 * qJD(2);
t505 = -t511 / 0.2e1 + t874;
t800 = t502 / 0.2e1;
t615 = t498 * t800;
t504 = pkin(3) * t615 + t505;
t653 = pkin(6) * t715;
t348 = t529 - t653;
t720 = t498 * t348;
t589 = t874 - t720 / 0.2e1;
t88 = t504 - t589;
t844 = -qJD(1) * t88 + t666;
t794 = t498 * pkin(3);
t475 = qJ(5) + t794;
t710 = t502 * qJ(5);
t801 = -t502 / 0.2e1;
t503 = t475 * t801 - t710 / 0.2e1 - t505;
t69 = -t503 - t589;
t843 = -qJD(1) * t69 + t666;
t649 = t799 * pkin(3);
t650 = t799 / 0.2e1;
t595 = t502 * t650;
t506 = -t288 / 0.2e1 + t873 + pkin(3) * t595;
t638 = t799 * t348;
t507 = t873 - t638 / 0.2e1;
t90 = t506 - t507;
t643 = t90 * qJD(1) - qJD(3) * t649;
t366 = -t440 + t604;
t439 = t499 * t599;
t605 = t829 * t718;
t367 = -t439 - t605;
t603 = t501 * t641;
t368 = t439 + t603;
t528 = (t366 - t369) * t435 + (-t367 - t368) * t431;
t841 = qJD(2) * t528;
t838 = qJD(3) * t528;
t176 = t502 * pkin(4) + t192;
t749 = t367 * t405;
t618 = -t749 / 0.2e1;
t175 = t193 - t710;
t827 = -t175 / 0.2e1;
t837 = t176 * t812 + t435 * t827 + t618;
t836 = t618 + t855;
t290 = t498 * t322;
t336 = t799 * t353;
t698 = t290 / 0.2e1 + t336 / 0.2e1;
t835 = t408 * t861 + t435 * t862;
t834 = t405 * t861 + t431 * t862;
t833 = t238 * t812 + t289 * t815;
t494 = t499 ^ 2;
t496 = t501 ^ 2;
t467 = t496 - t494;
t660 = t500 * qJD(1);
t630 = t501 * t660;
t832 = qJD(2) * t467 - 0.2e1 * t499 * t630;
t830 = -pkin(4) / 0.2e1;
t828 = qJ(5) / 0.2e1;
t826 = t175 / 0.2e1;
t825 = t192 / 0.2e1;
t213 = t866 + t720;
t824 = -t213 / 0.2e1;
t214 = t638 - t869;
t823 = t214 / 0.2e1;
t262 = pkin(4) * t408 + qJ(5) * t405;
t654 = pkin(3) * t713;
t245 = t262 + t654;
t822 = t245 / 0.2e1;
t821 = -t366 / 0.2e1;
t820 = t366 / 0.2e1;
t819 = t367 / 0.2e1;
t818 = -t368 / 0.2e1;
t817 = t368 / 0.2e1;
t816 = t369 / 0.2e1;
t617 = -t407 / 0.2e1;
t813 = -t410 / 0.2e1;
t810 = -t456 / 0.2e1;
t809 = -t475 / 0.2e1;
t808 = t475 / 0.2e1;
t485 = -t649 - pkin(4);
t807 = t485 / 0.2e1;
t806 = -t498 / 0.2e1;
t805 = t498 / 0.2e1;
t804 = -t499 / 0.2e1;
t803 = -t500 / 0.2e1;
t802 = -t501 / 0.2e1;
t491 = t502 * pkin(6);
t788 = pkin(3) * qJD(3);
t787 = pkin(3) * qJD(4);
t560 = pkin(4) * t813 + qJ(5) * t617;
t613 = t825 - t176 / 0.2e1;
t614 = t826 + t870;
t7 = -t431 * t613 + t435 * t614 + t560;
t786 = t7 * qJD(1);
t89 = t504 + t589;
t785 = -t213 * qJD(3) + t89 * qJD(4);
t784 = t89 * qJD(3) - t193 * qJD(4);
t745 = t369 * t408;
t254 = -t745 / 0.2e1;
t522 = t749 / 0.2e1 + t254 + t745 / 0.2e1 - t855;
t14 = t522 + t836;
t783 = qJD(1) * t14;
t772 = t192 * t369;
t134 = -t772 / 0.2e1;
t19 = t134 + t772 / 0.2e1;
t782 = qJD(1) * t19;
t759 = t238 * t408;
t764 = t213 * t502;
t44 = t245 * t405 + t759 + t764;
t781 = qJD(1) * t44;
t768 = t193 * t502;
t49 = t262 * t405 + t759 + t768;
t780 = qJD(1) * t49;
t334 = t442 * t408;
t96 = -t405 * t654 - t334 - t764;
t777 = qJD(1) * t96;
t733 = t442 * t405;
t762 = t214 * t502;
t97 = t408 * t654 - t733 + t762;
t776 = qJD(1) * t97;
t775 = qJD(2) * t14;
t774 = qJD(2) * t19;
t207 = t336 + t290;
t714 = t500 * qJ(5);
t180 = t207 + t714;
t206 = t639 - t719;
t185 = -t206 - t791;
t443 = pkin(3) * t715 + t491;
t239 = pkin(4) * t407 - qJ(5) * t410 + t443;
t17 = t175 * t180 + t176 * t185 + t238 * t239;
t773 = t17 * qJD(1);
t770 = t192 * t502;
t20 = -t175 * t192 + t176 * t193 + t238 * t262;
t767 = t20 * qJD(1);
t21 = t175 * t214 + t176 * t213 + t238 * t245;
t766 = t21 * qJD(1);
t765 = t213 * t367;
t763 = t214 * t369;
t22 = -t175 * t407 + t176 * t410 - t180 * t405 + t185 * t408;
t761 = t22 * qJD(1);
t23 = (-t175 + t193) * t408 + (-t176 + t192) * t405;
t760 = t23 * qJD(1);
t28 = (-t175 + t213) * t408 + (-t176 - t214) * t405;
t757 = t28 * qJD(1);
t755 = t289 * t431;
t754 = t289 * t435;
t30 = t192 * t410 - t193 * t407 - t206 * t408 - t207 * t405;
t753 = t30 * qJD(1);
t31 = (-t193 + t213) * t408 + (-t192 - t214) * t405;
t752 = t31 * qJD(1);
t36 = -t192 * t206 + t193 * t207 + t442 * t443;
t751 = t36 * qJD(1);
t750 = t366 * t502;
t748 = t367 * t500;
t747 = t367 * t502;
t746 = t368 * t502;
t744 = t369 * t500;
t37 = -t175 * t500 + t180 * t502 + t238 * t410 + t239 * t408;
t742 = t37 * qJD(1);
t38 = -t176 * t500 + t185 * t502 + t238 * t407 + t239 * t405;
t741 = t38 * qJD(1);
t39 = t192 * t213 + t193 * t214 + t442 * t654;
t740 = t39 * qJD(1);
t591 = -t500 * pkin(7) - t790;
t565 = -pkin(1) + t591;
t390 = -t501 * t565 + t653;
t739 = t390 * t502;
t391 = t499 * t565 + t651;
t738 = t391 * t502;
t736 = t408 * t498;
t734 = t435 * t498;
t181 = t238 * t405;
t45 = t245 * t408 - t181 + t762;
t730 = t45 * qJD(1);
t46 = t192 * t500 + t206 * t502 - t443 * t405 - t442 * t407;
t729 = t46 * qJD(1);
t47 = -t193 * t500 + t207 * t502 + t443 * t408 + t442 * t410;
t728 = t47 * qJD(1);
t727 = t475 * t408;
t726 = t475 * t435;
t48 = t262 * t408 - t181 - t770;
t725 = t48 * qJD(1);
t724 = t485 * t405;
t723 = t485 * t431;
t717 = t499 * t405;
t495 = t500 ^ 2;
t712 = t501 * t495;
t76 = t175 * t502 + t759;
t709 = t76 * qJD(1);
t707 = t90 * qJD(3);
t706 = t90 * qJD(4);
t266 = -t440 / 0.2e1 + t553 + t604;
t700 = -t366 * qJD(3) - t266 * qJD(4);
t699 = -t266 * qJD(3) - t369 * qJD(4);
t694 = t499 * t595 + t501 * t615;
t693 = t635 * t801 + t711 * t806;
t468 = t497 - t495;
t692 = qJ(5) * qJD(4);
t113 = -t733 - t770;
t691 = qJD(1) * t113;
t114 = -t334 - t768;
t690 = qJD(1) * t114;
t259 = -t408 * t500 + t410 * t502;
t687 = qJD(1) * t259;
t313 = t495 * t797 + t739;
t686 = qJD(1) * t313;
t314 = -pkin(6) * t712 - t738;
t685 = qJD(1) * t314;
t681 = qJD(2) * t486;
t680 = qJD(2) * t499;
t679 = qJD(2) * t501;
t678 = qJD(3) * t499;
t677 = qJD(3) * t501;
t676 = qJD(3) * t502;
t675 = qJD(4) * t486;
t674 = qJD(5) * t435;
t673 = qJD(5) * t502;
t100 = (t398 * t500 - t739) * t501 + (t399 * t500 + t738) * t499;
t672 = t100 * qJD(1);
t143 = pkin(6) ^ 2 * t500 * t502 - t390 * t398 + t391 * t399;
t671 = t143 * qJD(1);
t222 = t399 * t502 + (-t391 + 0.2e1 * t651) * t500;
t668 = t222 * qJD(1);
t223 = t390 * t500 + (t398 - 0.2e1 * t474) * t502;
t667 = t223 * qJD(1);
t616 = t407 / 0.2e1;
t275 = t616 + t694;
t267 = t275 * qJD(1);
t276 = t617 + t693;
t268 = t276 * qJD(1);
t594 = t634 / 0.2e1;
t277 = t810 + (t594 + t812) * t502;
t269 = t277 * qJD(1);
t340 = t352 * qJD(3);
t665 = t405 * qJD(5);
t420 = (t494 / 0.2e1 - t496 / 0.2e1) * t500;
t664 = t420 * qJD(3);
t419 = t431 * qJD(5);
t434 = t468 * t499;
t663 = t434 * qJD(1);
t437 = t497 * t501 - t712;
t662 = t437 * qJD(1);
t661 = t468 * qJD(1);
t657 = t502 * qJD(2);
t489 = qJD(4) * t649;
t656 = t489 + qJD(5);
t648 = pkin(1) * t660;
t647 = pkin(1) * t658;
t646 = t498 * t787;
t645 = t798 / 0.2e1;
t644 = t792 / 0.2e1;
t637 = t799 * t405;
t636 = t799 * t431;
t631 = t408 * t658;
t627 = t499 * t679;
t626 = t501 * t659;
t625 = t499 * t676;
t624 = t501 * t676;
t623 = t499 * t677;
t622 = t500 * t657;
t621 = t500 * t658;
t620 = -t763 / 0.2e1;
t619 = t750 / 0.2e1;
t331 = -t743 / 0.2e1;
t612 = t367 * t410 - t369 * t407;
t607 = t501 * t644;
t602 = t698 - t833;
t601 = -t698 + t834;
t600 = t696 - t835;
t598 = t499 * t626;
t597 = t495 * t623;
t593 = t696 + t791;
t592 = t658 - qJD(3) / 0.2e1;
t590 = (t808 + t828) * t500;
t508 = t175 * t817 + t176 * t820 + t765 / 0.2e1 + t238 * t849 + t289 * t822;
t552 = t180 * t808 + t185 * t807;
t1 = t620 - t508 + t552;
t578 = t366 * t367 + t368 * t369;
t58 = t289 * t292 + t578;
t584 = -t1 * qJD(1) + t58 * qJD(2);
t551 = -t238 * t337 / 0.2e1 - t262 * t289 / 0.2e1;
t559 = t180 * t828 + t185 * t830;
t3 = t367 * t614 + t369 * t613 + t551 + t559;
t60 = t289 * t337;
t583 = -t3 * qJD(1) + t60 * qJD(2);
t519 = (t816 + t821) * t408 + (t817 + t819) * t405;
t546 = t407 * t809 + t410 * t807;
t5 = (t826 + t824) * t435 + (t823 + t176 / 0.2e1) * t431 + t519 + t546;
t582 = -t5 * qJD(1) + t841;
t523 = (t407 * t806 + t799 * t813) * pkin(3);
t9 = (t193 / 0.2e1 + t824) * t435 + (t823 + t825) * t431 + t523 + t519;
t581 = -t9 * qJD(1) + t841;
t520 = t192 * t821 + t193 * t818 - t765 / 0.2e1;
t533 = t206 * t650 + t207 * t805;
t11 = t620 + (t442 * t804 + t713 * t861 + t533) * pkin(3) + t520;
t98 = t486 * t798 + t578;
t579 = -t11 * qJD(1) + t98 * qJD(2);
t577 = -t398 * t499 + t399 * t501;
t538 = -t649 / 0.2e1 - t485 / 0.2e1 + t830;
t556 = t809 + t794 / 0.2e1 + t828;
t102 = t431 * t538 + t435 * t556;
t94 = t405 * t538 + t408 * t556;
t574 = qJD(1) * t94 + qJD(2) * t102;
t125 = t292 * t431 + t754;
t518 = t405 * t849 + t431 * t822 + t550 + t619;
t26 = (t807 + t830) * t500 + t518 - t696;
t573 = -qJD(1) * t26 - qJD(2) * t125;
t126 = -t292 * t435 + t755;
t328 = t746 / 0.2e1;
t527 = t698 + t833;
t549 = t245 * t811 + t292 * t814;
t24 = t328 + t590 + t527 + t549;
t572 = qJD(1) * t24 - qJD(2) * t126;
t140 = t337 * t431 + t754;
t534 = t331 - t550;
t548 = t262 * t812 + t337 * t815;
t34 = t534 + t548 + t593;
t571 = qJD(1) * t34 - qJD(2) * t140;
t141 = -t337 * t435 + t755;
t326 = -t747 / 0.2e1;
t547 = t262 * t811 + t337 * t814;
t32 = t326 + t527 + t547 + t714;
t570 = qJD(1) * t32 - qJD(2) * t141;
t271 = t431 * t798 + t435 * t486;
t525 = t696 + t835;
t51 = -t750 / 0.2e1 + (-t717 / 0.2e1 + (t431 * t802 + t650) * t500) * pkin(3) + t525;
t569 = qJD(1) * t51 - qJD(2) * t271;
t272 = -t431 * t486 + t435 * t798;
t329 = -t746 / 0.2e1;
t526 = -t698 - t834;
t50 = t329 + (t408 * t804 + (t435 * t802 + t806) * t500) * pkin(3) + t526;
t568 = qJD(1) * t50 - qJD(2) * t272;
t91 = t506 + t507;
t567 = t91 * qJD(3) + t192 * qJD(4);
t566 = -t214 * qJD(3) + t91 * qJD(4);
t564 = t606 * t500;
t265 = -t439 - t603 / 0.2e1 - t605 / 0.2e1;
t563 = -qJD(3) * t265 - qJD(4) * t367;
t562 = qJD(3) * t368 - qJD(4) * t265;
t561 = t793 / 0.2e1 - t789 / 0.2e1;
t558 = t213 * pkin(4) / 0.2e1 - t214 * qJ(5) / 0.2e1;
t557 = pkin(4) * t820 + qJ(5) * t818;
t535 = t561 * t499;
t344 = t438 / 0.2e1 + t535;
t555 = pkin(2) * t679 - qJD(1) * t344;
t536 = t561 * t501;
t345 = -t441 / 0.2e1 - t536;
t554 = pkin(2) * t680 - qJD(1) * t345;
t41 = t587 + t845;
t545 = qJD(1) * t41 + t289 * t682;
t327 = t747 / 0.2e1;
t72 = t327 + t526;
t544 = qJD(1) * t72 + t431 * t681;
t71 = t331 + t525;
t543 = qJD(1) * t71 - t435 * t681;
t542 = t501 * t564;
t190 = t803 - t211;
t541 = qJD(1) * t190 + t629;
t374 = -qJD(1) * t420 + t627;
t354 = qJD(1) * t499 * t712 + qJD(2) * t420;
t433 = t467 * t495;
t532 = qJD(1) * t433 + 0.2e1 * t598;
t510 = (t175 * t650 + t176 * t805) * pkin(3) + t192 * t809 + t193 * t807;
t16 = t510 + t558;
t389 = (t799 * t475 + t485 * t498) * pkin(3);
t509 = (t367 * t805 + t369 * t650) * pkin(3) + t367 * t809 + t369 * t807;
t55 = t509 + t557;
t530 = t16 * qJD(1) + t55 * qJD(2) + t389 * qJD(3);
t524 = (qJD(2) * t407 + t408 * t655) * t405;
t521 = t213 * t811 + t214 * t812 + t366 * t814 + t368 * t815 + t254;
t493 = qJ(5) * qJD(5);
t480 = -t660 / 0.2e1;
t479 = t660 / 0.2e1;
t478 = t659 / 0.2e1;
t466 = t475 * qJD(5);
t429 = t457 * qJ(5);
t428 = t592 * t500;
t401 = (-qJD(4) / 0.2e1 + t592) * t500;
t342 = t352 * qJD(4);
t306 = t408 * t674;
t282 = t474 + t441 / 0.2e1 - t536;
t281 = t652 - t438 / 0.2e1 + t535;
t280 = t616 + t693;
t279 = t617 + t694;
t278 = t431 * t800 + t502 * t594 + t810;
t244 = qJD(2) * t430 + t435 * t683;
t220 = t276 * qJD(2) - t631;
t219 = t275 * qJD(2) + t631;
t218 = t277 * qJD(2) - t405 * t658;
t191 = t803 + t211;
t189 = -t847 - t268;
t188 = t847 - t267;
t187 = -t431 * t655 - t269;
t146 = t763 / 0.2e1;
t142 = -t259 * qJD(2) + t405 * t846;
t112 = t280 * qJD(2) + t848;
t111 = t279 * qJD(2) - t848;
t110 = t278 * qJD(2) + t405 * t457;
t101 = -t726 / 0.2e1 - t723 / 0.2e1 - t735 / 0.2e1 + t795 / 0.2e1 + (-t636 / 0.2e1 + t734 / 0.2e1) * pkin(3);
t99 = (qJD(2) * t410 - t405 * t655) * t408;
t95 = -t277 * t655 + t687;
t93 = -t727 / 0.2e1 - t724 / 0.2e1 - t737 / 0.2e1 + t796 / 0.2e1 + (-t637 / 0.2e1 + t736 / 0.2e1) * pkin(3);
t92 = t278 * t655 + t435 * t659 - t687;
t83 = t88 * qJD(3);
t78 = t88 * qJD(4);
t74 = t330 + t600;
t73 = t326 + t601;
t70 = t503 - t589;
t59 = -t410 * t683 + t867;
t57 = t498 * t788 + t844;
t56 = -t655 * t794 - t844;
t54 = t509 - t557;
t53 = t408 * t645 + t435 * t607 + t792 * t806 + t328 + t601;
t52 = t619 + pkin(3) * t717 / 0.2e1 + t431 * t607 + t799 * t644 + t600;
t43 = (t682 + t683) * t410 + t867;
t42 = t534 + t587;
t35 = -t548 + t593 + t845;
t33 = t327 - t547 + t602 + t714;
t27 = t485 * t803 + t518 - t587;
t25 = t329 + t590 - t549 + t602;
t18 = t19 * qJD(4);
t15 = t510 - t558;
t13 = t14 * qJD(4);
t12 = pkin(3) * t533 + t442 * t645 + t486 * t607 + t146 - t520;
t10 = t523 + t521 + t836;
t8 = t522 + t560 + t837;
t6 = t521 + t546 + t837;
t4 = t176 * t816 + t193 * t819 + t367 * t827 + t134 - t551 + t559;
t2 = t146 + t508 + t552;
t29 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t622, t468 * qJD(2), 0, -t622, 0, 0, -pkin(1) * t659, -pkin(1) * t657, 0, 0, t496 * t622 - t597, -t433 * qJD(3) - 0.2e1 * t502 * t598, -t437 * qJD(2) + t500 * t625, t494 * t622 + t597, t434 * qJD(2) + t500 * t624, -t622, -qJD(2) * t223 - qJD(3) * t314, qJD(2) * t222 - qJD(3) * t313, -qJD(2) * t100, qJD(2) * t143, t99, t850, t142, t524, t854, -t622, -qJD(2) * t46 - qJD(3) * t96 - qJD(4) * t114, qJD(2) * t47 + qJD(3) * t97 + qJD(4) * t113, qJD(2) * t30 + qJD(3) * t31, qJD(2) * t36 + qJD(3) * t39, t99, t142, -t850, -t622, -t854, t524, qJD(2) * t38 + qJD(3) * t44 + qJD(4) * t49 - t408 * t665, t22 * qJD(2) + t28 * qJD(3) + t23 * qJD(4) + t502 * t665, -qJD(2) * t37 - qJD(3) * t45 - qJD(4) * t48 + qJD(5) * t384, qJD(2) * t17 + qJD(3) * t21 + qJD(4) * t20 - qJD(5) * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t621, t661, t657, -t621, -t659, 0, -pkin(6) * t657 - t648, pkin(6) * t659 - t647, 0, 0, -t664 + (t496 * t660 + t627) * t502, -0.2e1 * t500 * t623 + t502 * t832, t499 * t659 - t662, t664 + (t494 * t660 - t627) * t502, t626 + t663, -t428, -t667 + (t499 * t591 - t651) * qJD(2) + t282 * qJD(3), t668 + (t501 * t591 + t653) * qJD(2) + t281 * qJD(3), qJD(2) * t577 - t672, t671 + (-pkin(2) * t491 + pkin(7) * t577) * qJD(2), t43, -t871, t92, t865, t280 * t655 - t858, -t401, -t729 + (t407 * t486 + t431 * t443 - t748) * qJD(2) + t52 * qJD(3) + t74 * qJD(4), t728 + (t410 * t486 + t435 * t443 - t744) * qJD(2) + t53 * qJD(3) + t73 * qJD(4), t753 + (-t206 * t435 - t207 * t431 + t612) * qJD(2) + t10 * qJD(3) + t13, t751 + (-t206 * t367 + t207 * t369 + t443 * t486) * qJD(2) + t12 * qJD(3) + t18, t43, t92, t871, -t401, t279 * t655 + t858, t865, t741 + (t239 * t431 + t289 * t407 - t748) * qJD(2) + t27 * qJD(3) + t35 * qJD(4) + t191 * qJD(5), t761 + (-t180 * t431 + t185 * t435 + t612) * qJD(2) + t6 * qJD(3) + t8 * qJD(4) + t278 * qJD(5), -t742 + (-t239 * t435 - t289 * t410 + t744) * qJD(2) + t25 * qJD(3) + t33 * qJD(4) + t306, t773 + (t180 * t369 + t185 * t367 + t239 * t289) * qJD(2) + t2 * qJD(3) + t4 * qJD(4) + t42 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t354, -t532, t499 * t564, t354, t542, t478, qJD(2) * t282 - qJD(3) * t391 - t685, qJD(2) * t281 + qJD(3) * t390 - t686, 0, 0, t852, t67, t110, -t852, t112, t478, qJD(2) * t52 - t777 + t785, qJD(2) * t53 + t566 + t776, t752 + t10 * qJD(2) + (t637 - t736) * t788, t740 + t12 * qJD(2) + (-t213 * t799 + t214 * t498) * t788, t852, t110, -t67, t478, t111, -t852, qJD(2) * t27 + t781 + t785, t757 + t6 * qJD(2) + (-t724 - t727) * qJD(3) + t93 * qJD(4) - t665, t25 * qJD(2) - t566 - t673 - t730, t766 + t2 * qJD(2) + (t213 * t485 + t214 * t475) * qJD(3) + t15 * qJD(4) + t70 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t852, t67, t110, -t852, t112, t478, qJD(2) * t74 - t690 + t784, qJD(2) * t73 + t567 + t691, t775, t774, t852, t110, -t67, t478, t111, -t852, qJD(2) * t35 + t780 + t784, t8 * qJD(2) + t93 * qJD(3) + qJD(4) * t586 - t665 + t760, t33 * qJD(2) - t567 - t673 - t725, t767 + t4 * qJD(2) + t15 * qJD(3) + (-pkin(4) * t193 - qJ(5) * t192) * qJD(4) + t175 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t191 - t632, t110, -t857, qJD(2) * t42 + qJD(3) * t70 + qJD(4) * t175 - t709; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t621, -t661, 0, t621, 0, 0, t648, t647, 0, 0, -t496 * t621 - t664, 0.2e1 * t499 * t542, -t624 + t662, -t494 * t621 + t664, t625 - t663, t428, qJD(3) * t345 + t667, qJD(3) * t344 - t668, t672, -t671, t59, -t872, t95, t864, -t276 * t655 + t842, t401, -qJD(3) * t51 - qJD(4) * t71 + t729, -qJD(3) * t50 - qJD(4) * t72 - t728, -qJD(3) * t9 + t13 - t753, -qJD(3) * t11 + t18 - t751, t59, t95, t872, t401, -t275 * t655 - t842, t864, qJD(3) * t26 - qJD(4) * t34 - qJD(5) * t190 - t741, -qJD(3) * t5 - qJD(4) * t7 - qJD(5) * t277 - t761, -qJD(3) * t24 - qJD(4) * t32 + t306 + t742, -qJD(3) * t1 - qJD(4) * t3 - qJD(5) * t41 - t773; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t623, t467 * qJD(3), 0, -t623, 0, 0, -pkin(2) * t678, -pkin(2) * t677, 0, 0, -t860, t859, 0, t860, 0, 0, qJD(3) * t271 + t435 * t675, qJD(3) * t272 - t431 * t675, t838, qJD(3) * t98, -t860, 0, -t859, 0, 0, t860, qJD(3) * t125 + qJD(4) * t140 - t419 * t435, t838, qJD(3) * t126 + qJD(4) * t141 + qJD(5) * t430, qJD(3) * t58 + qJD(4) * t60 - t289 * t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t374, t832, -t606 * t501, -t374, t606 * t499, t480, -pkin(7) * t677 - t554, pkin(7) * t678 - t555, 0, 0, -t853, -t86, t187, t853, t189, t480, -t569 + t700, -t562 - t568, (t636 - t734) * t788 + t581, (-t366 * t799 + t368 * t498) * t788 + t579, -t853, t187, t86, t480, t188, t853, -t573 + t700, (-t723 - t726) * qJD(3) + t101 * qJD(4) - t419 + t582, t562 - t572, (t366 * t485 + t368 * t475) * qJD(3) + t54 * qJD(4) + t266 * qJD(5) + t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t853, -t86, t187, t853, t189, t480, -t543 + t699, -t544 - t563, t783, t782, -t853, t187, t86, t480, t188, t853, -t571 + t699, t101 * qJD(3) + qJD(4) * t585 - t419 - t786, t563 - t570, t54 * qJD(3) + (-pkin(4) * t369 - qJ(5) * t367) * qJD(4) + t369 * qJD(5) + t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t541, t187, t244, -t545 - t699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, t532, (-t499 * t660 + t679) * t502, -t354, (-t630 - t680) * t502, t478, -qJD(2) * t345 + t685, -qJD(2) * t344 + t686, 0, 0, -t852, -t67, t218, t852, t220, t478, qJD(2) * t51 + t777 + t78, qJD(2) * t50 + t706 - t776, qJD(2) * t9 - t752, qJD(2) * t11 - t740, -t852, t218, t67, t478, t219, t852, -qJD(2) * t26 + t78 - t781, qJD(2) * t5 + qJD(4) * t94 - t757, t24 * qJD(2) - t673 - t706 + t730, qJD(2) * t1 + qJD(4) * t16 - qJD(5) * t69 - t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t374, -t832, t501 * t658, t374, -t499 * t658, t479, t554, t555, 0, 0, t853, t86, t269, -t853, t268, t479, -t342 + t569, t568, -t581, -t579, t853, t269, -t86, t479, t267, -t853, -t342 + t573, qJD(4) * t102 - t582, t572, qJD(4) * t55 + qJD(5) * t352 - t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t646, -t489, 0, 0, 0, 0, 0, 0, 0, 0, -t646, 0, t656, qJD(4) * t389 + t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, -t489 + t643, 0, 0, 0, 0, 0, 0, 0, 0, t56, t574, -t643 + t656, (-pkin(4) * t498 + qJ(5) * t799) * t787 + t466 + t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t457, t475 * t655 + t843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t852, -t67, t218, t852, t220, t478, qJD(2) * t71 + t690 - t83, qJD(2) * t72 - t691 - t707, -t775, -t774, -t852, t218, t67, t478, t219, t852, qJD(2) * t34 - t780 - t83, qJD(2) * t7 - qJD(3) * t94 - t760, t32 * qJD(2) - t673 + t707 + t725, -qJ(5) * t673 + t3 * qJD(2) - t16 * qJD(3) - t767; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t853, t86, t269, -t853, t268, t479, t340 + t543, t544, -t783, -t782, t853, t269, -t86, t479, t267, -t853, t340 + t571, -qJD(3) * t102 + t786, t570, -qJD(3) * t55 - t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, -t643, 0, 0, 0, 0, 0, 0, 0, 0, t57, -t574, qJD(5) + t643, t493 - t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t457, -t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t190 + t632, t218, t857, t41 * qJD(2) + t69 * qJD(3) + t502 * t692 + t709; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t541, t269, -t244, t545 - t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t457, -qJD(3) * t475 - t692 - t843; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t457, t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t29;
