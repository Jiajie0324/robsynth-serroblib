% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5,theta2,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:58
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPRR6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPPRR6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:58:12
% EndTime: 2019-12-31 17:58:16
% DurationCPUTime: 2.02s
% Computational Cost: add. (3576->176), mult. (6809->250), div. (0->0), fcn. (7232->8), ass. (0->154)
t158 = sin(pkin(9));
t250 = cos(qJ(4));
t197 = t250 * t158;
t159 = cos(pkin(9));
t161 = sin(qJ(4));
t230 = t161 * t159;
t146 = t197 + t230;
t160 = sin(qJ(5));
t162 = cos(qJ(5));
t231 = t160 * t162;
t188 = 0.2e1 * t146 * t231;
t140 = t146 * qJD(4);
t131 = t162 * t140;
t144 = t158 * t161 - t159 * t250;
t90 = t160 * t144;
t83 = t90 * qJD(5);
t253 = -t131 + t83;
t142 = t144 ^ 2;
t143 = t146 ^ 2;
t252 = -t143 - t142;
t199 = t143 - t142;
t149 = t158 ^ 2 + t159 ^ 2;
t157 = t162 ^ 2;
t251 = -t157 / 0.2e1;
t249 = t144 * pkin(7);
t248 = t146 * pkin(4);
t182 = sin(pkin(8)) * pkin(1) + qJ(3);
t175 = pkin(6) + t182;
t136 = t175 * t159;
t168 = t175 * t158;
t78 = t136 * t250 - t161 * t168;
t247 = t160 * t78;
t246 = t162 * t78;
t106 = t248 + t249;
t232 = t160 * t106;
t77 = t136 * t161 + t168 * t250;
t235 = t77 * t162;
t53 = t232 - t235;
t240 = t53 * t160;
t229 = t162 * t106;
t236 = t77 * t160;
t52 = t229 + t236;
t241 = t52 * t162;
t148 = -cos(pkin(8)) * pkin(1) - pkin(2) - t159 * pkin(3);
t184 = pkin(4) * t144 - pkin(7) * t146;
t163 = t148 + t184;
t48 = -t162 * t163 + t247;
t49 = t160 * t163 + t246;
t4 = (t240 + t241) * t146 + (-t160 * t49 + t162 * t48) * t144;
t245 = t4 * qJD(1);
t244 = t48 * t160;
t243 = t49 * t162;
t242 = t52 * t160;
t239 = t53 * t162;
t6 = (-t48 + t247) * t146 + (t52 - t236) * t144;
t238 = t6 * qJD(1);
t237 = t77 * t146;
t156 = t160 ^ 2;
t189 = t251 - t156 / 0.2e1;
t164 = t189 * t249 - t248 / 0.2e1;
t173 = -t241 / 0.2e1 - t240 / 0.2e1;
t10 = t164 + t173;
t234 = t10 * qJD(1);
t233 = t144 * t146;
t91 = t160 * t146;
t27 = t48 * t144 - t77 * t91;
t228 = t27 * qJD(1);
t28 = -t49 * t144 + t146 * t235;
t227 = t28 * qJD(1);
t30 = -t78 * t144 + t237;
t226 = t30 * qJD(1);
t44 = (0.1e1 / 0.2e1 + t189) * t233;
t224 = t44 * qJD(1);
t65 = t199 * t160;
t221 = t65 * qJD(1);
t66 = t252 * t160;
t220 = t66 * qJD(1);
t67 = t199 * t162;
t219 = t67 * qJD(1);
t218 = t199 * qJD(1);
t88 = (t156 / 0.2e1 + t251) * t146;
t217 = t88 * qJD(5);
t82 = t90 * qJD(1);
t216 = t91 * qJD(1);
t94 = t162 * t144;
t215 = t94 * qJD(1);
t214 = t94 * qJD(4);
t133 = t156 * t144;
t134 = t157 * t144;
t97 = t133 + t134;
t213 = t97 * qJD(1);
t212 = t97 * qJD(4);
t99 = t252 * t162;
t211 = t99 * qJD(1);
t210 = -t156 - t157;
t152 = t157 - t156;
t209 = qJD(3) * t162;
t208 = qJD(4) * t162;
t207 = qJD(5) * t160;
t206 = qJD(5) * t162;
t205 = t252 * qJD(1);
t113 = t149 * t182;
t204 = t113 * qJD(1);
t141 = t197 / 0.2e1 + t230 / 0.2e1;
t203 = t141 * qJD(1);
t202 = t144 * qJD(1);
t139 = t144 * qJD(4);
t201 = t146 * qJD(1);
t200 = t149 * qJD(1);
t196 = t146 * t207;
t195 = t146 * t206;
t194 = t144 * t201;
t193 = t144 * t140;
t192 = t160 * t206;
t191 = t160 * t208;
t190 = t162 * t201;
t187 = qJD(1) * t148 + qJD(3);
t186 = -qJD(5) - t202;
t185 = t143 * t192;
t183 = qJD(4) * t188;
t2 = (t239 / 0.2e1 - t242 / 0.2e1 + t77 / 0.2e1) * t146 + (-t243 / 0.2e1 - t244 / 0.2e1 + t78 / 0.2e1) * t144;
t3 = -t48 * t52 + t49 * t53 + t77 * t78;
t181 = t3 * qJD(1) + t2 * qJD(2);
t180 = t239 - t242;
t46 = (0.1e1 + t210) * t233;
t179 = -t2 * qJD(1) - t46 * qJD(2);
t7 = (-t49 + t246) * t146 + (-t53 - t235) * t144;
t178 = t7 * qJD(1);
t9 = t237 + (-t243 - t244) * t144;
t177 = -qJD(1) * t9 - qJD(2) * t44;
t176 = t186 * t162;
t174 = t249 / 0.2e1 + t248 / 0.2e1;
t167 = t106 / 0.2e1 + t174;
t25 = t167 * t162;
t172 = pkin(4) * qJD(4) * t160 + qJD(1) * t25;
t23 = t167 * t160;
t171 = pkin(4) * t208 - qJD(1) * t23;
t69 = -qJD(1) * t88 + t191;
t170 = t146 * t176;
t169 = qJD(5) * t141 + t194;
t55 = qJD(1) * t143 * t231 + qJD(4) * t88;
t98 = t152 * t143;
t166 = qJD(1) * t98 + t183;
t165 = qJD(1) * t188 - qJD(4) * t152;
t132 = t141 * qJD(4);
t130 = t160 * t140;
t87 = t94 * qJD(5);
t81 = t90 * qJD(4);
t71 = -t207 - t82;
t26 = t236 + t229 / 0.2e1 - t174 * t162;
t24 = t235 - t232 / 0.2e1 + t174 * t160;
t11 = t164 - t173;
t1 = qJD(3) * t44 + qJD(4) * t2;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149 * qJD(3), t113 * qJD(3), -t193, -t199 * qJD(4), 0, t193, 0, 0, t148 * t140, -t148 * t139, -t252 * qJD(3), t30 * qJD(3), -t157 * t193 - t185, -qJD(5) * t98 + t144 * t183, qJD(4) * t67 - t144 * t196, -t156 * t193 + t185, -qJD(4) * t65 - t144 * t195, t193, -qJD(3) * t66 + qJD(4) * t6 + qJD(5) * t28, -qJD(3) * t99 + qJD(4) * t7 + qJD(5) * t27, -t4 * qJD(4), qJD(3) * t9 + qJD(4) * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, t204, 0, 0, 0, 0, 0, 0, 0, 0, -t205, t226, 0, 0, 0, 0, 0, 0, -t220, -t211, 0, qJD(4) * t11 - t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194, -t218, -t139, t194, -t140, 0, -qJD(4) * t78 + t148 * t201, qJD(4) * t77 - t148 * t202, 0, 0, -t217 + (-t157 * t201 - t191) * t144, (t133 - t134) * qJD(4) + (-qJD(5) + t202) * t188, t130 + t219, t217 + (-t156 * t201 + t191) * t144, t131 - t221, t169, t238 + (t160 * t184 - t246) * qJD(4) + t26 * qJD(5), (t162 * t184 + t247) * qJD(4) + t24 * qJD(5) + t178, qJD(4) * t180 - t245, t11 * qJD(3) + (-t78 * pkin(4) + pkin(7) * t180) * qJD(4) + t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, -t166, t186 * t91, t55, t170, t132, qJD(4) * t26 - qJD(5) * t49 + t227, qJD(4) * t24 + qJD(5) * t48 + t228, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t140, t139, 0, 0, 0, 0, 0, 0, 0, 0, t253, t130 + t87, -t212, (t210 * t249 - t248) * qJD(4) - t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81 - t195, t196 + t214, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200, -t204, 0, 0, 0, 0, 0, 0, t140, -t139, t205, -t226, 0, 0, 0, 0, 0, 0, t220 - t253, -qJD(4) * t91 - t144 * t206 + t211, t212, -qJD(4) * t10 + t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, -t202, 0, 0, 0, 0, 0, 0, 0, 0, t190, -t216, t213, -t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t176, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, t218, 0, -t194, 0, 0, -t187 * t146, t187 * t144, 0, 0, t157 * t194 - t217, 0.2e1 * t160 * t170, t87 - t219, t156 * t194 + t217, -t83 + t221, -t169, -qJD(5) * t25 - t146 * t209 - t238, qJD(3) * t91 + qJD(5) * t23 - t178, -qJD(3) * t97 + t245, qJD(3) * t10 - t181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t201, t202, 0, 0, 0, 0, 0, 0, 0, 0, -t190, t216, -t213, t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, t152 * qJD(5), 0, -t192, 0, 0, -pkin(4) * t207, -pkin(4) * t206, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, -t165, t206 + t215, -t69, t71, -t203, -pkin(7) * t206 - t172, pkin(7) * t207 - t171, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t166, t160 * t194 - t214, -t55, t144 * t190 + t81, t132, qJD(3) * t90 + qJD(4) * t25 - t227, -qJD(4) * t23 + t144 * t209 - t228, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, t162 * t202, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t69, t165, -t215, t69, t82, t203, t172, t171, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
