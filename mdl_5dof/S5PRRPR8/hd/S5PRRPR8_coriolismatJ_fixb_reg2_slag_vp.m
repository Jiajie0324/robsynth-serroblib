% Calculate inertial parameters regressor of coriolis matrix for
% S5PRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d5,theta1,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:43
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRRPR8_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRPR8_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRPR8_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRRPR8_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:42:46
% EndTime: 2019-12-31 17:42:48
% DurationCPUTime: 1.19s
% Computational Cost: add. (1370->117), mult. (3085->173), div. (0->0), fcn. (3504->8), ass. (0->104)
t102 = sin(qJ(5));
t98 = t102 ^ 2;
t105 = cos(qJ(5));
t99 = t105 ^ 2;
t148 = t98 + t99;
t100 = sin(pkin(9));
t93 = t100 * pkin(3) + pkin(7);
t121 = t148 * t93;
t101 = cos(pkin(9));
t103 = sin(qJ(3));
t92 = t100 * t103 * pkin(2);
t106 = cos(qJ(3));
t156 = t106 * pkin(2);
t96 = pkin(3) + t156;
t76 = t101 * t96 - t92;
t72 = -pkin(4) - t76;
t94 = -t101 * pkin(3) - pkin(4);
t167 = t72 + t94;
t129 = qJD(2) + qJD(3);
t90 = t99 - t98;
t166 = t129 * t90;
t131 = qJD(3) * t105;
t161 = -t94 / 0.2e1;
t83 = t101 * t156 - t92;
t116 = -t83 / 0.2e1 + t161 - t72 / 0.2e1;
t40 = t116 * t105;
t165 = t40 * qJD(2) - t94 * t131;
t132 = qJD(3) * t102;
t39 = t116 * t102;
t164 = t39 * qJD(2) - t94 * t132;
t133 = qJD(2) * t105;
t163 = t72 * t133;
t134 = qJD(2) * t102;
t162 = t72 * t134;
t160 = -t102 / 0.2e1;
t159 = t102 / 0.2e1;
t158 = -t105 / 0.2e1;
t157 = t105 / 0.2e1;
t104 = sin(qJ(2));
t107 = cos(qJ(2));
t84 = -t103 * t104 + t106 * t107;
t85 = t103 * t107 + t106 * t104;
t115 = t100 * t84 + t101 * t85;
t155 = t115 * t72;
t154 = t115 * t76;
t153 = t115 * t94;
t60 = t100 * t85 - t101 * t84;
t141 = t101 * t103;
t82 = (t100 * t106 + t141) * pkin(2);
t151 = t60 * t82;
t77 = pkin(2) * t141 + t100 * t96;
t150 = t60 * t77;
t149 = t115 * t83;
t147 = pkin(2) * qJD(3);
t146 = pkin(3) * qJD(3);
t145 = qJD(2) * pkin(2);
t144 = t100 * t60;
t143 = t101 * t115;
t122 = t148 * t60;
t7 = (-t122 + t60) * t115;
t142 = t7 * qJD(1);
t57 = t148 * t83;
t137 = t57 * qJD(2);
t136 = t82 * qJD(2);
t135 = t83 * qJD(2);
t130 = t102 * qJD(5);
t97 = t105 * qJD(5);
t126 = t99 / 0.2e1 + t98 / 0.2e1;
t123 = t82 * t134;
t120 = pkin(2) * t129;
t119 = t102 * t129;
t118 = t105 * t129;
t73 = pkin(7) + t77;
t117 = t126 * t73;
t14 = t73 * t57 + t72 * t82;
t109 = t151 / 0.2e1 + t126 * t149;
t2 = (t72 / 0.2e1 + t161) * t115 - (-t126 * t93 + t117) * t60 + t109;
t114 = -t2 * qJD(1) - t14 * qJD(2);
t28 = -t76 * t82 + t77 * t83;
t108 = t150 / 0.2e1 - t149 / 0.2e1 + t154 / 0.2e1 - t151 / 0.2e1;
t110 = (-t144 / 0.2e1 - t143 / 0.2e1) * pkin(3);
t3 = t110 + t108;
t113 = t3 * qJD(1) - t28 * qJD(2);
t91 = t102 * t97;
t89 = t90 * qJD(5);
t81 = t105 * t119;
t79 = t83 * qJD(3);
t78 = t82 * qJD(3);
t69 = t82 * t132;
t64 = t129 * t84;
t63 = t129 * t85;
t49 = t57 * qJD(3);
t42 = t167 * t157 + t83 * t158;
t41 = t167 * t159 + t83 * t160;
t27 = t129 * t60;
t26 = t129 * t115;
t24 = (t157 - t158) * t60;
t23 = (t159 - t160) * t60;
t10 = t129 * t122;
t9 = t23 * qJD(5) - t115 * t118;
t8 = t24 * qJD(5) + t115 * t119;
t4 = t110 - t108;
t1 = t155 / 0.2e1 + t153 / 0.2e1 + t109 + (-t117 - t121 / 0.2e1) * t60;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104 * qJD(2), -t107 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, -t63, -t64, 0, (t103 * t84 - t106 * t85) * t145, 0, 0, 0, 0, 0, 0, -t26, t27, 0, (-t150 - t154) * qJD(2) + t4 * qJD(3), 0, 0, 0, 0, 0, 0, t9, t8, -t10, t142 + (-t73 * t122 + t155) * qJD(2) + t1 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t63, -t64, 0, 0, 0, 0, 0, 0, 0, 0, -t26, t27, 0, t4 * qJD(2) + (-t143 - t144) * t146, 0, 0, 0, 0, 0, 0, t9, t8, -t10, t142 + t1 * qJD(2) + (-t121 * t60 + t153) * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t115 * t97 + t129 * t23, t115 * t130 + t129 * t24, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t3 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2 * qJD(3) - t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103 * t147, -t106 * t147, 0, 0, 0, 0, 0, 0, 0, 0, -t78, -t79, 0, t28 * qJD(3), t91, t89, 0, -t91, 0, 0, t72 * t130 - t82 * t131, t72 * t97 + t69, t49, t14 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103 * t120, -t106 * t120, 0, 0, 0, 0, 0, 0, 0, 0, -t78 - t136, -t79 - t135, 0, (t100 * t83 - t101 * t82) * t146 - t113, t91, t89, 0, -t91, 0, 0, t41 * qJD(5) - t82 * t118, t42 * qJD(5) + t123 + t69, t49 + t137, (t83 * t121 + t82 * t94) * qJD(3) - t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t166, t97, -t81, -t130, 0, t41 * qJD(3) - t73 * t97 + t162, t42 * qJD(3) + t73 * t130 + t163, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2 * qJD(2) - t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103 * t145, t106 * t145, 0, 0, 0, 0, 0, 0, 0, 0, t136, t135, 0, t113, t91, t89, 0, -t91, 0, 0, -t39 * qJD(5) + t82 * t133, -t40 * qJD(5) - t123, -t137, t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, t89, 0, -t91, 0, 0, t94 * t130, t94 * t97, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t166, t97, -t81, -t130, 0, -t93 * t97 - t164, t93 * t130 - t165, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130, -t97, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, -t166, 0, t81, 0, 0, t39 * qJD(3) - t162, t40 * qJD(3) - t163, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, -t166, 0, t81, 0, 0, t164, t165, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
