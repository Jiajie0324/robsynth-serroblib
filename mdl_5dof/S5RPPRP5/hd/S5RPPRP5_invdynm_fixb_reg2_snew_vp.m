% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPPRP5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 17:54
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPPRP5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRP5_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRP5_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPPRP5_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPPRP5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RPPRP5_invdynm_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 17:53:56
% EndTime: 2019-12-31 17:54:07
% DurationCPUTime: 11.12s
% Computational Cost: add. (15476->523), mult. (38354->541), div. (0->0), fcn. (24148->6), ass. (0->332)
t929 = sin(pkin(7));
t930 = cos(pkin(7));
t932 = sin(qJ(4));
t934 = cos(qJ(4));
t963 = t929 * t932 + t930 * t934;
t881 = t963 * qJD(1);
t883 = (t929 * t934 - t930 * t932) * qJD(1);
t1030 = t883 * t881;
t1091 = qJDD(4) + t1030;
t1024 = t932 * t1091;
t878 = t883 ^ 2;
t936 = qJD(4) ^ 2;
t833 = t936 + t878;
t760 = t934 * t833 + t1024;
t1016 = t934 * t1091;
t762 = -t932 * t833 + t1016;
t732 = t930 * t760 - t929 * t762;
t1136 = pkin(1) * t732;
t715 = t929 * t760 + t930 * t762;
t1135 = qJ(2) * t715;
t1134 = qJ(2) * t732;
t933 = sin(qJ(1));
t1133 = t933 * t715;
t935 = cos(qJ(1));
t1132 = t935 * t715;
t1060 = t963 * qJDD(1);
t1048 = t881 ^ 2;
t862 = t1048 - t936;
t780 = -t932 * t862 - t1016;
t786 = -t934 * t862 + t1024;
t734 = t929 * t780 + t930 * t786;
t1131 = t935 * t1060 + t933 * t734;
t1130 = -t933 * t1060 + t935 * t734;
t1129 = pkin(3) * t760;
t1128 = pkin(6) * t760;
t1127 = pkin(6) * t762;
t1092 = qJDD(4) - t1030;
t1015 = t934 * t1092;
t863 = t878 - t936;
t1120 = t932 * t863 + t1015;
t1023 = t932 * t1092;
t1121 = -t934 * t863 + t1023;
t1123 = t1120 * t930 + t1121 * t929;
t1126 = t1123 * t933;
t1125 = t1123 * t935;
t727 = t930 * t780 - t929 * t786;
t1047 = pkin(2) + pkin(3);
t1124 = -qJ(3) * t762 + t1047 * t760;
t1122 = t1120 * t929 - t1121 * t930;
t917 = t929 * qJDD(1);
t919 = t930 * qJDD(1);
t880 = t917 * t934 - t932 * t919;
t1072 = -t1060 * t934 + t932 * t880;
t1074 = -t1060 * t932 - t934 * t880;
t1082 = t1072 * t929 - t1074 * t930;
t1119 = pkin(1) * t1082;
t1062 = -t1048 - t936;
t1071 = t1062 * t934 - t1023;
t1073 = t1062 * t932 + t1015;
t1084 = t1071 * t929 - t1073 * t930;
t1118 = pkin(1) * t1084;
t1117 = qJ(2) * t1082;
t1116 = qJ(2) * t1084;
t1085 = t1071 * t930 + t1073 * t929;
t1003 = t883 * qJD(4);
t839 = t1060 + 0.2e1 * t1003;
t1115 = pkin(1) * t839 + qJ(2) * t1085;
t1083 = t1072 * t930 + t1074 * t929;
t808 = t878 + t1048;
t1114 = -pkin(1) * t808 + qJ(2) * t1083;
t1113 = pkin(5) * (t1085 * t933 + t935 * t839);
t1112 = pkin(5) * (t1085 * t935 - t933 * t839);
t1111 = pkin(5) * (t1083 * t933 - t935 * t808);
t1110 = pkin(5) * (t1083 * t935 + t933 * t808);
t1108 = pkin(3) * t808;
t1107 = pkin(3) * t1073;
t1106 = pkin(3) * t1074;
t1105 = pkin(6) * t1072;
t1104 = pkin(6) * t1073;
t1103 = pkin(6) * t1074;
t1102 = qJ(3) * t808;
t1004 = qJD(4) * t881;
t842 = t880 - t1004;
t805 = t842 - t1004;
t1101 = qJ(5) * t805;
t1094 = t1047 * t808;
t937 = qJD(1) ^ 2;
t938 = t929 ^ 2;
t1009 = t938 * t937;
t940 = t930 ^ 2;
t920 = t940 * t937;
t895 = t920 + t1009;
t901 = t933 * g(1) - t935 * g(2);
t949 = t937 * qJ(2) - qJDD(2) + t901;
t945 = 0.2e1 * qJD(3) * t929 * qJD(1) + t949;
t1034 = qJ(3) * t929;
t989 = pkin(1) + t1034;
t801 = qJDD(1) * (t1047 * t930 + t989) - t895 * pkin(6) + t945;
t840 = t1060 + t1003;
t1093 = t840 * pkin(4) - t1101 + t801;
t1090 = -pkin(3) * t839 + pkin(6) * t1071;
t1063 = (-t881 * t932 - t883 * t934) * qJD(4);
t861 = t932 * t1003;
t992 = t934 * t1004;
t975 = t861 - t992;
t1070 = t1063 * t929 + t930 * t975;
t1089 = t935 * qJDD(4) + t1070 * t933;
t1088 = -t933 * qJDD(4) + t1070 * t935;
t793 = -t1004 * t932 + t934 * t840;
t953 = t932 * t840 + t992;
t1076 = -t929 * t793 + t930 * t953;
t995 = t935 * t1030;
t1087 = t1076 * t933 - t995;
t996 = t933 * t1030;
t1086 = t1076 * t935 + t996;
t1081 = qJ(3) * t1071 - t1047 * t1073;
t1050 = qJ(3) * t1072 - t1047 * t1074;
t1080 = 2 * qJD(2);
t1058 = t937 * (t938 + t940);
t886 = t929 * t1058;
t998 = t935 * qJDD(1);
t952 = -t933 * t886 + t929 * t998;
t1079 = pkin(5) * t952;
t1061 = t878 - t1048;
t1078 = t1061 * t933;
t1077 = t1061 * t935;
t1075 = t930 * t793 + t929 * t953;
t1069 = -t1063 * t930 + t929 * t975;
t1028 = t930 * t937;
t902 = t935 * g(1) + t933 * g(2);
t885 = -t937 * pkin(1) + qJDD(1) * qJ(2) - t902;
t1046 = pkin(2) * t930;
t973 = -t1034 - t1046;
t890 = t973 * qJD(1);
t962 = t885 + (t1080 + t890) * qJD(1);
t947 = -pkin(6) * qJDD(1) + t962;
t1038 = t930 * g(3);
t986 = qJDD(3) + t1038;
t775 = (-pkin(3) * t1028 + t947) * t929 + t986;
t922 = t929 * g(3);
t792 = -pkin(3) * t920 + t930 * t947 - t922;
t724 = -t934 * t775 + t932 * t792;
t725 = t932 * t775 + t934 * t792;
t689 = -t934 * t724 + t932 * t725;
t983 = qJD(1) * t1080 + t885;
t1001 = qJD(5) * qJD(4);
t923 = 0.2e1 * t1001;
t825 = t881 * pkin(4) - t883 * qJ(5);
t968 = t936 * pkin(4) - qJDD(4) * qJ(5) + t881 * t825 - t725;
t704 = t923 - t968;
t706 = -qJDD(4) * pkin(4) - t936 * qJ(5) + t883 * t825 + qJDD(5) + t724;
t1008 = pkin(4) * t706 - qJ(5) * t704;
t682 = t932 * t704 - t934 * t706;
t683 = t934 * t704 + t932 * t706;
t1057 = qJ(3) * t683 - t1047 * t682 + t1008;
t1056 = t1081 + t724;
t950 = pkin(4) * t833 + qJ(5) * t1091 - t968;
t1055 = -t1124 - t950;
t944 = -pkin(4) * t1092 - qJ(5) * t1062 + t706;
t1054 = t1081 + t944;
t1053 = t1124 + t725;
t1007 = pkin(4) * t880 + qJ(5) * t1060;
t1052 = t1007 + t1050;
t690 = t932 * t724 + t934 * t725;
t1049 = qJ(3) * t690 - t1047 * t689;
t710 = (pkin(4) * qJD(4) - 0.2e1 * qJD(5)) * t883 + t1093;
t1045 = pkin(4) * t710;
t916 = t938 * qJDD(1);
t918 = t940 * qJDD(1);
t893 = t918 + t916;
t1044 = pkin(5) * (t933 * t893 + t935 * t895);
t887 = t930 * t1058;
t990 = t930 * t998;
t855 = -t933 * t887 + t990;
t1043 = pkin(5) * t855;
t1000 = t933 * qJDD(1);
t856 = t1000 * t929 + t935 * t886;
t1042 = pkin(5) * t856;
t1041 = pkin(6) * t683;
t1040 = pkin(6) * t689;
t1039 = pkin(6) * t690;
t1037 = qJ(2) * t886;
t1033 = qJ(5) * t932;
t1032 = qJ(5) * t934;
t1031 = qJDD(1) * pkin(1);
t874 = t949 + t1031;
t1029 = t930 * t874;
t1026 = t932 * t801;
t1025 = t932 * t805;
t1022 = t932 * t839;
t1018 = t933 * t874;
t799 = t934 * t801;
t1014 = t934 * t839;
t1011 = t935 * t874;
t1006 = pkin(1) * t895 + qJ(2) * t893;
t1005 = pkin(1) * t919 - qJ(2) * t887;
t997 = pkin(2) * t917;
t906 = t929 * t1028;
t994 = pkin(1) + t1046;
t993 = pkin(4) * t934 + pkin(3);
t988 = -pkin(6) * t682 + t932 * t1045;
t987 = t799 + t1128;
t985 = qJ(3) - t1032;
t849 = t929 * t983 + t1038;
t850 = t930 * t983 - t922;
t771 = t929 * t849 + t930 * t850;
t984 = -t933 * t901 - t935 * t902;
t942 = 0.2e1 * qJD(5) * t883 - t1093;
t696 = -pkin(4) * t1003 + t1101 + t942;
t982 = -pkin(4) * t1025 + t934 * t696 - t1128;
t899 = -t933 * t937 + t998;
t981 = -pkin(5) * t899 - t933 * g(3);
t797 = t1003 * t934 + t932 * t842;
t798 = t934 * t842 - t861;
t746 = t929 * t797 + t930 * t798;
t980 = t933 * t746 + t995;
t979 = t935 * t746 - t996;
t806 = t929 * t962 + t986;
t809 = t930 * t962 - t922;
t974 = -pkin(2) * t806 + qJ(3) * t809;
t972 = -t932 * t696 - t1127;
t698 = t942 + (-t839 - t1003) * pkin(4);
t971 = -t932 * t698 - t1104;
t970 = t1026 - t1104;
t969 = -t1026 + t1127;
t770 = t930 * t849 - t929 * t850;
t894 = t918 - t916;
t896 = -t920 + t1009;
t966 = t935 * t894 + t933 * t896;
t965 = t933 * t894 - t935 * t896;
t964 = t935 * t901 - t933 * t902;
t898 = t935 * t937 + t1000;
t961 = pkin(1) - t973;
t960 = -t993 - t1033;
t693 = pkin(4) * t808 + t704;
t694 = qJ(5) * t808 + t706;
t959 = -t932 * t693 + t934 * t694 - t1103;
t958 = -t934 * t698 - t1090;
t957 = -t689 - t1103;
t956 = -t690 - t1105;
t955 = t1090 - t799;
t951 = t1000 * t930 + t935 * t887;
t948 = -t934 * t693 - t932 * t694 - t1105;
t924 = -0.2e1 * t1001;
t911 = qJ(3) * t919;
t905 = t929 * t919;
t904 = -0.2e1 * t905;
t903 = 0.2e1 * t905;
t888 = -t911 + t997;
t875 = -pkin(5) * t898 + t935 * g(3);
t859 = -t906 * t933 + t929 * t990;
t858 = t898 * t930 * t929;
t853 = pkin(5) * t951;
t851 = pkin(5) * (t935 * t893 - t933 * t895);
t841 = t880 - 0.2e1 * t1004;
t828 = qJDD(1) * t961 + t945;
t827 = (t989 + 0.2e1 * t1046) * qJDD(1) + t945;
t826 = (t994 + 0.2e1 * t1034) * qJDD(1) + t945;
t813 = t1005 + t1029;
t812 = t1037 + (-t874 - t1031) * t929;
t811 = -pkin(2) * t916 + t930 * t826;
t810 = qJ(3) * t918 - t929 * t827;
t804 = t842 + t1004;
t791 = pkin(2) * t895 + t809;
t778 = qJ(3) * t895 + t806;
t777 = pkin(2) * t1009 - qJ(3) * t906 + t809;
t774 = -qJ(3) * t920 - t986 + (pkin(2) * t1028 - qJD(1) * t890 - t983) * t929;
t768 = -t1037 + (qJDD(1) * t994 + t826) * t929;
t767 = (qJ(3) * t917 + t827) * t930 + t1005;
t766 = -t932 * t841 - t1014;
t764 = t934 * t841 - t1022;
t756 = pkin(1) * t874 + qJ(2) * t771;
t751 = t1014 + t1025;
t750 = -t934 * t805 + t1022;
t749 = t771 + t1006;
t748 = t929 * t806 + t930 * t809;
t747 = -t930 * t806 + t929 * t809;
t743 = -t930 * t797 + t929 * t798;
t726 = t930 * t778 - t929 * t791;
t721 = t929 * t778 + t930 * t791 + t1006;
t720 = qJ(3) * t841 + t987;
t719 = t929 * t764 + t930 * t766;
t717 = -t930 * t764 + t929 * t766;
t711 = qJ(3) * t839 + t970;
t708 = -qJ(2) * t747 + (-pkin(2) * t929 + qJ(3) * t930) * t828;
t707 = t1047 * t841 + t969;
t703 = t929 * t750 + t930 * t751;
t702 = -t930 * t750 + t929 * t751;
t700 = pkin(2) * t839 - t955;
t699 = -pkin(1) * t747 - t974;
t697 = qJ(2) * t748 + t828 * t961;
t691 = -t1052 - t1119;
t688 = qJ(3) * t801 - t1040;
t687 = t839 * t985 + t971;
t686 = t1047 * t801 - t1039;
t685 = -t1050 - t1119;
t684 = (pkin(2) + t1033) * t839 + t958;
t681 = t957 - t1102;
t680 = -qJ(3) * t805 + t982;
t679 = t956 - t1094;
t678 = -t1053 - t1136;
t677 = (-pkin(2) - t993) * t805 + t972;
t676 = -t929 * t707 + t930 * t720 - t1134;
t675 = pkin(1) * t841 + t930 * t707 + t929 * t720 - t1135;
t674 = -t1056 - t1118;
t673 = t929 * t689 + t930 * t690;
t672 = -t930 * t689 + t929 * t690;
t671 = -t929 * t700 + t930 * t711 - t1116;
t670 = -t1054 - t1118;
t669 = t930 * t700 + t929 * t711 + t1115;
t668 = t959 - t1102;
t667 = t948 - t1094;
t666 = -t1055 + t923 + t1136;
t665 = t929 * t682 + t930 * t683;
t664 = -t930 * t682 + t929 * t683;
t663 = -t929 * t684 + t930 * t687 - t1116;
t662 = t930 * t684 + t929 * t687 + t1115;
t661 = t710 * t985 + t988;
t660 = -t929 * t679 + t930 * t681 - t1117;
t659 = t930 * t679 + t929 * t681 + t1114;
t658 = -t929 * t677 + t930 * t680 + t1134;
t657 = -t1041 + (pkin(2) - t960) * t710;
t656 = -pkin(1) * t805 + t930 * t677 + t929 * t680 + t1135;
t655 = -qJ(2) * t672 - t929 * t686 + t930 * t688;
t654 = -t929 * t667 + t930 * t668 - t1117;
t653 = pkin(1) * t801 + qJ(2) * t673 + t930 * t686 + t929 * t688;
t652 = -pkin(1) * t672 - t1049;
t651 = t930 * t667 + t929 * t668 + t1114;
t650 = -pkin(1) * t664 - t1057;
t649 = -qJ(2) * t664 - t929 * t657 + t930 * t661;
t648 = pkin(1) * t710 + qJ(2) * t665 + t930 * t657 + t929 * t661;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t899, 0, -t898, 0, t981, -t875, -t964, -pkin(5) * t964, t859, t966, t856, -t859, t951, 0, -t929 * t1011 - t933 * t849 - t1043, -t930 * t1011 - t933 * t850 + t1079, t935 * t770 - t1044, -pkin(5) * (t933 * t771 + t1011) - (t933 * pkin(1) - t935 * qJ(2)) * t770, t859, t856, -t966, 0, -t951, -t859, t933 * t774 + t935 * t810 - t1043, t935 * t726 - t933 * t888 - t1044, t933 * t777 + t935 * t811 - t1079, t935 * t708 - t933 * t699 - pkin(5) * (t933 * t748 + t935 * t828), t979, t935 * t719 - t1078, -t933 * t880 + t1125, t1086, -t1130, t1088, t935 * t671 - t933 * t674 - t1113, t935 * t676 - t933 * t678 - pkin(5) * (t935 * t841 - t1133), t935 * t660 - t933 * t685 - t1111, t935 * t655 - t933 * t652 - pkin(5) * (t933 * t673 + t935 * t801), t979, -t933 * t804 + t1125, t935 * t703 + t1078, t1088, t1130, t1086, t935 * t663 - t933 * t670 - t1113, t935 * t654 - t933 * t691 - t1111, t935 * t658 - t933 * t666 - pkin(5) * (-t935 * t805 + t1133), t935 * t649 - t933 * t650 - pkin(5) * (t933 * t665 + t935 * t710); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t898, 0, t899, 0, t875, t981, t984, pkin(5) * t984, t858, t965, -t952, -t858, -t855, 0, -t929 * t1018 + t935 * t849 - t853, -t930 * t1018 + t935 * t850 + t1042, t933 * t770 + t851, pkin(5) * (t935 * t771 - t1018) - (-t935 * pkin(1) - t933 * qJ(2)) * t770, t858, -t952, -t965, 0, t855, -t858, -t935 * t774 + t933 * t810 - t853, t933 * t726 + t935 * t888 + t851, -t935 * t777 + t933 * t811 - t1042, t933 * t708 + t935 * t699 + pkin(5) * (t935 * t748 - t933 * t828), t980, t933 * t719 + t1077, t935 * t880 + t1126, t1087, -t1131, t1089, t933 * t671 + t935 * t674 + t1112, t933 * t676 + t935 * t678 + pkin(5) * (-t933 * t841 - t1132), t933 * t660 + t935 * t685 + t1110, t933 * t655 + t935 * t652 + pkin(5) * (t935 * t673 - t933 * t801), t980, t935 * t804 + t1126, t933 * t703 - t1077, t1089, t1131, t1087, t933 * t663 + t935 * t670 + t1112, t933 * t654 + t935 * t691 + t1110, t933 * t658 + t935 * t666 + pkin(5) * (t933 * t805 + t1132), t933 * t649 + t935 * t650 + pkin(5) * (t935 * t665 - t933 * t710); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t901, t902, 0, 0, t916, t903, 0, t918, 0, 0, t813, t812, t749, t756, t916, 0, t904, 0, 0, t918, t767, t721, t768, t697, t743, t717, t1122, t1075, t727, t1069, t669, t675, t659, t653, t743, t1122, t702, t1069, -t727, t1075, t662, t651, t656, t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t937, 0, 0, -g(3), -t901, 0, t905, t894, t886, -t905, t887, 0, -t929 * t874, -t1029, t770, qJ(2) * t770, t905, t886, -t894, 0, -t887, -t905, t810, t726, t811, t708, t746, t719, t1123, t1076, -t734, t1070, t671, t676, t660, t655, t746, t1123, t703, t1070, t734, t1076, t663, t654, t658, t649; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t937, 0, qJDD(1), 0, g(3), 0, -t902, 0, t906, -t896, -t917, -t906, -t919, 0, t849, t850, 0, pkin(1) * t770, t906, -t917, t896, 0, t919, -t906, -t774, t888, -t777, t699, t1030, t1061, t880, -t1030, -t1060, qJDD(4), t674, t678, t685, t652, t1030, t804, -t1061, qJDD(4), t1060, -t1030, t670, t691, t666, t650; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t901, t902, 0, 0, t916, t903, 0, t918, 0, 0, t813, t812, t749, t756, t916, 0, t904, 0, 0, t918, t767, t721, t768, t697, t743, t717, t1122, t1075, t727, t1069, t669, t675, t659, t653, t743, t1122, t702, t1069, -t727, t1075, t662, t651, t656, t648; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t917, t919, t906, 0, t920, 0, 0, -t874, t849, 0, t917, t906, -t919, 0, -t920, 0, t911, t778, t826, qJ(3) * t828, t798, t766, t1120, t953, -t786, t975, t711, t720, t681, t688, t798, t1120, t751, t975, t786, t953, t687, t668, t680, t661; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t917, -t1009, t919, -t906, 0, t874, 0, t850, 0, 0, -t1009, -t917, 0, t906, t919, t827, t791, t997, pkin(2) * t828, -t797, -t764, -t1121, t793, t780, -t1063, t700, t707, t679, t686, -t797, -t1121, -t750, -t1063, -t780, t793, t684, t667, t677, t657; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t906, t896, t917, t906, t919, 0, -t849, -t850, 0, 0, -t906, t917, -t896, 0, -t919, t906, t774, -t888, t777, t974, -t1030, -t1061, -t880, t1030, t1060, -qJDD(4), t1056, t1053, t1050, t1049, -t1030, -t804, t1061, -qJDD(4), -t1060, t1030, t1054, t1052, t1055 + t924, t1057; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t917, t906, -t919, 0, -t920, 0, 0, t806, t828, 0, t798, t766, t1120, t953, -t786, t975, t970, t987, t957, -t1040, t798, t1120, t751, t975, t786, t953, -qJ(5) * t1014 + t971, t959, t982, -t1032 * t710 + t988; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t906, t917, -t896, 0, -t919, t906, -t806, 0, t809, 0, -t1030, -t1061, -t880, t1030, t1060, -qJDD(4), t724 - t1107, t725 + t1129, -t1106, -pkin(3) * t689, -t1030, -t804, t1061, -qJDD(4), -t1060, t1030, t944 - t1107, t1007 - t1106, t924 - t950 - t1129, -pkin(3) * t682 + t1008; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1009, t917, 0, -t906, -t919, -t828, -t809, 0, 0, t797, t764, t1121, -t793, -t780, t1063, t955, -pkin(3) * t841 - t969, -t956 + t1108, -pkin(3) * t801 + t1039, t797, t1121, t750, t1063, t780, -t793, -qJ(5) * t1022 - t958, -t948 + t1108, t805 * t993 - t972, t710 * t960 + t1041; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t842, -t839, t1092, t1004, t862, -t1004, 0, t801, t724, 0, t842, t1092, t839, -t1004, -t862, t1004, -qJ(5) * t839, t694, t696, -qJ(5) * t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1003, t841, -t863, -t840, t1091, -t1003, -t801, 0, t725, 0, t1003, -t863, -t805, -t1003, -t1091, -t840, t698, t693, pkin(4) * t805, -t1045; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1030, t1061, t880, -t1030, -t1060, qJDD(4), -t724, -t725, 0, 0, t1030, t804, -t1061, qJDD(4), t1060, -t1030, -t944, -t1007, t923 + t950, -t1008; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t842, t1092, t839, -t1004, -t862, t1004, 0, t706, -t710, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1030, t804, -t1061, qJDD(4), t1060, -t1030, -t706, 0, t704, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1003, t863, t805, t1003, t1091, t840, t710, -t704, 0, 0;];
m_new_reg = t1;
