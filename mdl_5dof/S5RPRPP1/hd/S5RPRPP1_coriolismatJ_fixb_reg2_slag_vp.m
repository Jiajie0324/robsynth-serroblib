% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,theta2,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:09
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPP1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPP1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPP1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRPP1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:09:18
% EndTime: 2019-12-31 18:09:20
% DurationCPUTime: 1.20s
% Computational Cost: add. (1436->113), mult. (2709->141), div. (0->0), fcn. (2877->6), ass. (0->85)
t141 = cos(pkin(8));
t95 = sin(pkin(8));
t97 = sin(qJ(3));
t98 = cos(qJ(3));
t82 = t141 * t97 + t95 * t98;
t153 = t82 ^ 2;
t80 = -t141 * t98 + t95 * t97;
t77 = t80 ^ 2;
t35 = t77 - t153;
t166 = t35 * qJD(1);
t165 = t35 * qJD(3);
t44 = t77 + t153;
t164 = t44 * qJD(1);
t163 = t44 * qJD(4);
t90 = sin(pkin(7)) * pkin(1) + pkin(6);
t162 = qJ(4) + t90;
t75 = t162 * t97;
t147 = t95 * t75;
t76 = t162 * t98;
t60 = t141 * t76;
t112 = t60 - t147;
t40 = t141 * t75 + t95 * t76;
t108 = -t112 * t80 + t40 * t82;
t156 = qJD(4) * t108;
t155 = t108 * qJD(1);
t110 = t60 / 0.2e1;
t152 = t82 * pkin(4);
t151 = t97 * pkin(3);
t150 = t80 * t95;
t88 = t95 * pkin(3) + qJ(5);
t149 = t88 * t80;
t91 = -t141 * pkin(3) - pkin(4);
t148 = t91 * t82;
t146 = qJD(3) * pkin(3);
t143 = t80 * qJ(5);
t92 = -cos(pkin(7)) * pkin(1) - pkin(2);
t84 = -t98 * pkin(3) + t92;
t36 = t80 * pkin(4) - t82 * qJ(5) + t84;
t43 = t143 + t151 + t152;
t9 = t36 * t82 + t43 * t80;
t142 = t9 * qJD(1);
t140 = qJD(1) * t98;
t10 = t36 * t80 - t43 * t82;
t139 = t10 * qJD(1);
t93 = t151 / 0.2e1;
t17 = t93 + (pkin(4) / 0.2e1 - t91 / 0.2e1) * t82 + (qJ(5) / 0.2e1 + t88 / 0.2e1) * t80;
t134 = t17 * qJD(1);
t111 = t141 * t82;
t101 = -t150 / 0.2e1 - t111 / 0.2e1;
t31 = (-t97 / 0.2e1 + t101) * pkin(3);
t133 = t31 * qJD(1);
t32 = t80 * t151 + t84 * t82;
t132 = t32 * qJD(1);
t33 = t82 * t151 - t84 * t80;
t131 = t33 * qJD(1);
t128 = t40 * qJD(3);
t125 = t153 * qJD(1);
t124 = t80 * qJD(1);
t123 = t80 * qJD(3);
t122 = t80 * qJD(4);
t121 = t82 * qJD(1);
t120 = t82 * qJD(3);
t119 = t82 * qJD(5);
t86 = -t97 ^ 2 + t98 ^ 2;
t118 = t86 * qJD(1);
t117 = t97 * qJD(3);
t116 = t98 * qJD(3);
t52 = t80 * t121;
t51 = t80 * t120;
t115 = t92 * t97 * qJD(1);
t114 = t92 * t140;
t113 = t97 * t116;
t3 = t36 * t43;
t107 = t3 * qJD(1);
t8 = t84 * t151;
t106 = t8 * qJD(1);
t38 = t110 - t60 / 0.2e1;
t103 = t38 * qJD(1) + t88 * qJD(3);
t87 = t97 * t140;
t72 = t82 * qJD(4);
t37 = t112 * qJD(3);
t30 = t101 * pkin(3) + t93;
t19 = 0.2e1 * t110 - t147;
t18 = -t149 / 0.2e1 + t148 / 0.2e1 + t93 + t143 / 0.2e1 + t152 / 0.2e1;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, t86 * qJD(3), 0, -t113, 0, 0, t92 * t117, t92 * t116, 0, 0, -t51, t165, 0, t51, 0, 0, t32 * qJD(3), t33 * qJD(3), t163, t8 * qJD(3) + t156, -t51, 0, -t165, 0, 0, t51, t9 * qJD(3) - t80 * t119, t163, t10 * qJD(3) + qJD(5) * t153, t3 * qJD(3) - t36 * t119 + t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t118, t116, -t87, -t117, 0, -t90 * t116 + t115, t90 * t117 + t114, 0, 0, -t52, t166, -t123, t52, -t120, 0, -t37 + t132, t128 + t131, (t141 * t80 - t82 * t95) * t146, (-t112 * t141 - t40 * t95) * t146 + t30 * qJD(4) + t106, -t52, -t123, -t166, 0, t120, t52, -t37 + t142, (-t91 * t80 - t88 * t82) * qJD(3) - qJD(5) * t80, -t128 + t139, (t112 * t91 - t40 * t88) * qJD(3) + t18 * qJD(4) + t19 * qJD(5) + t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, t30 * qJD(3) + t155, 0, 0, 0, 0, 0, 0, 0, t164, 0, t18 * qJD(3) + t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, -t123, t125, t19 * qJD(3) - t36 * t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t117, -t116, 0, 0, 0, 0, 0, 0, 0, 0, -t120, t123, 0, (-t111 - t150) * t146, 0, 0, 0, 0, 0, 0, -t120, 0, -t123, (t148 - t149) * qJD(3) + t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, -t118, 0, t87, 0, 0, -t115, -t114, 0, 0, t52, -t166, 0, -t52, 0, 0, -t72 - t132, t122 - t131, 0, t31 * qJD(4) - t106, t52, 0, t166, 0, 0, -t52, -t72 - t142, 0, -t122 - t139, -t17 * qJD(4) + t38 * qJD(5) - t107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t88 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121, t124, 0, t133, 0, 0, 0, 0, 0, 0, -t121, 0, -t124, -t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, -t123, -t164, -t31 * qJD(3) - t155, 0, 0, 0, 0, 0, 0, t120, -t164, t123, t17 * qJD(3) - t119 - t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121, -t124, 0, -t133, 0, 0, 0, 0, 0, 0, t121, 0, t124, t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, 0, -t125, -t38 * qJD(3) + (qJD(1) * t36 + qJD(4)) * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
