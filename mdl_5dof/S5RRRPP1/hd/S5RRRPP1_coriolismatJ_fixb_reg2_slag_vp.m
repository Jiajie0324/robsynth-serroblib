% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:50
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPP1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPP1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:50:03
% EndTime: 2019-12-31 20:50:08
% DurationCPUTime: 3.67s
% Computational Cost: add. (4100->316), mult. (8090->353), div. (0->0), fcn. (8057->6), ass. (0->233)
t241 = sin(pkin(8));
t242 = sin(qJ(3));
t244 = cos(qJ(3));
t359 = cos(pkin(8));
t201 = t241 * t244 + t359 * t242;
t245 = cos(qJ(2));
t369 = t245 * pkin(1);
t159 = t201 * t369;
t256 = -t241 * t242 + t359 * t244;
t160 = t256 * t369;
t268 = t159 * t201 + t160 * t256;
t386 = t268 * qJD(1);
t196 = t256 ^ 2;
t381 = t201 ^ 2;
t398 = t196 + t381;
t410 = t398 * qJD(4);
t419 = qJD(2) * t268 + t410;
t421 = t419 + t386;
t110 = t381 - t196;
t312 = qJD(1) + qJD(2);
t420 = t312 * t110;
t418 = t410 - t386;
t417 = t110 * qJD(3);
t401 = t312 * t201;
t416 = t256 * t401;
t415 = t312 * t398;
t243 = sin(qJ(2));
t370 = t243 * pkin(1);
t309 = t370 / 0.2e1;
t237 = t244 * qJ(4);
t218 = t244 * pkin(7) + t237;
t204 = t359 * t218;
t217 = (-qJ(4) - pkin(7)) * t242;
t338 = t241 * t217;
t397 = t204 + t338;
t347 = t397 * t256;
t144 = -t359 * t217 + t241 * t218;
t348 = t144 * t201;
t229 = pkin(7) + t370;
t195 = t244 * t229 + t237;
t172 = t359 * t195;
t194 = (-qJ(4) - t229) * t242;
t339 = t241 * t194;
t399 = t172 + t339;
t352 = t399 * t256;
t120 = -t359 * t194 + t241 * t195;
t355 = t120 * t201;
t249 = t347 / 0.2e1 + t352 / 0.2e1 + t348 / 0.2e1 + t355 / 0.2e1 + t309;
t271 = t352 + t355;
t385 = t271 * qJD(1);
t414 = qJD(2) * t249 + t385;
t247 = (-t144 / 0.2e1 - t120 / 0.2e1) * t201 - t256 * (t397 / 0.2e1 + t399 / 0.2e1) + t309;
t411 = qJD(2) * t247 - t385;
t228 = -t359 * pkin(3) - pkin(4);
t371 = t242 * pkin(3);
t232 = t371 / 0.2e1;
t226 = t241 * pkin(3) + qJ(5);
t377 = t226 / 0.2e1;
t49 = t232 + (pkin(4) / 0.2e1 - t228 / 0.2e1) * t201 - (qJ(5) / 0.2e1 + t377) * t256;
t409 = t312 * t49;
t307 = -t359 / 0.2e1;
t378 = t256 / 0.2e1;
t254 = t201 * t307 + t241 * t378;
t373 = -t242 / 0.2e1;
t98 = (t373 + t254) * pkin(3);
t408 = t312 * t98;
t231 = -t244 * pkin(3) - pkin(2);
t123 = -pkin(4) * t256 - t201 * qJ(5) + t231;
t113 = t123 - t369;
t302 = t123 / 0.2e1 + t113 / 0.2e1;
t407 = t302 * t201;
t402 = t312 * t256;
t239 = t242 ^ 2;
t240 = t244 ^ 2;
t224 = t240 - t239;
t400 = t312 * t224;
t391 = qJD(4) * t247;
t269 = t347 + t348;
t390 = qJD(4) * t269;
t389 = qJD(4) * t271;
t387 = t249 * qJD(4);
t382 = -qJD(1) * t247 + qJD(2) * t269;
t287 = t172 / 0.2e1;
t286 = t204 / 0.2e1;
t376 = t228 / 0.2e1;
t230 = -pkin(2) - t369;
t375 = t230 / 0.2e1;
t374 = t241 / 0.2e1;
t372 = t201 * pkin(4);
t368 = pkin(1) * qJD(1);
t367 = pkin(1) * qJD(2);
t366 = pkin(2) * qJD(2);
t365 = qJD(3) * pkin(3);
t346 = t256 * qJ(5);
t125 = -t346 + t371 + t372;
t358 = t113 * t125;
t364 = t358 * qJD(1);
t187 = t201 * qJD(5);
t361 = t49 * qJD(3) - t187;
t360 = (-t226 * t201 + t228 * t256) * qJD(3) + qJD(5) * t256;
t357 = t113 * t256;
t356 = t113 * t201;
t351 = t123 * t256;
t350 = t123 * t201;
t349 = t125 * t123;
t216 = t231 - t369;
t345 = t216 * t256;
t344 = t216 * t201;
t23 = t216 * t371;
t343 = t23 * qJD(1);
t342 = t231 * t256;
t341 = t231 * t201;
t272 = t120 * t159 + t160 * t399;
t24 = t113 * t370 + t272;
t340 = t24 * qJD(1);
t25 = t216 * t370 + t272;
t337 = t25 * qJD(1);
t87 = t125 * t256;
t29 = -t87 + t356;
t336 = t29 * qJD(1);
t88 = t125 * t201;
t30 = -t88 - t357;
t335 = t30 * qJD(1);
t311 = t243 * t367;
t167 = t256 * t311;
t310 = t243 * t368;
t168 = t256 * t310;
t330 = -t167 - t168;
t186 = t381 * qJD(5);
t294 = t201 * t311;
t329 = t186 - t294;
t289 = t359 * t369;
t267 = -t289 / 0.2e1;
t292 = t369 * t374;
t328 = t242 * t292 + t244 * t267;
t266 = t289 / 0.2e1;
t308 = -t369 / 0.2e1;
t291 = t242 * t308;
t327 = t241 * t291 + t244 * t266;
t326 = t242 * t266 + t244 * t292;
t290 = t244 * t308;
t325 = t241 * t290 + t242 * t267;
t324 = qJD(1) * t230;
t173 = t256 * t371;
t108 = -t173 + t344;
t323 = t108 * qJD(1);
t174 = t201 * t371;
t109 = t174 + t345;
t322 = t109 * qJD(1);
t321 = t120 * qJD(3);
t296 = (t239 + t240) * t245;
t124 = (t229 * t296 + t230 * t243) * pkin(1);
t320 = t124 * qJD(1);
t319 = t144 * qJD(3);
t193 = pkin(1) * t296;
t318 = t193 * qJD(1);
t317 = t256 * qJD(3);
t316 = t256 * qJD(4);
t315 = t201 * qJD(3);
t314 = t201 * qJD(4);
t313 = t242 * qJD(3);
t236 = t244 * qJD(3);
t306 = qJD(1) * t356;
t305 = t256 * t315;
t304 = t242 * t324;
t303 = t244 * t324;
t299 = t231 / 0.2e1 + t216 / 0.2e1;
t298 = t159 * t144 + t160 * t397;
t297 = pkin(1) * t312;
t295 = t201 * t310;
t293 = t242 * t310;
t288 = t243 * t297;
t258 = t159 * t376 + t160 * t377;
t1 = -t302 * t125 + t258;
t283 = -t1 * qJD(1) + qJD(2) * t349;
t28 = t231 * t371;
t255 = t159 * t307 + t160 * t374;
t7 = (-t299 * t242 + t255) * pkin(3);
t278 = -t7 * qJD(1) + t28 * qJD(2);
t17 = t325 + t87 - t407;
t33 = -t87 + t350;
t275 = -t17 * qJD(1) + t33 * qJD(2);
t18 = t256 * t302 + t327 + t88;
t34 = -t88 - t351;
t274 = t18 * qJD(1) - t34 * qJD(2);
t117 = -t173 + t341;
t39 = -t299 * t201 + t173 + t325;
t265 = -t39 * qJD(1) + t117 * qJD(2);
t118 = t174 + t342;
t40 = -t256 * t299 - t174 + t328;
t264 = t40 * qJD(1) - t118 * qJD(2);
t263 = t308 + pkin(2) / 0.2e1 - t230 / 0.2e1;
t151 = t263 * t242;
t262 = t151 * qJD(1) + t242 * t366;
t152 = t263 * t244;
t261 = t152 * qJD(1) + t244 * t366;
t260 = -t356 / 0.2e1 - t350 / 0.2e1;
t26 = t326 + t407;
t257 = -t26 * qJD(1) - qJD(2) * t350;
t116 = t287 - t172 / 0.2e1;
t142 = t286 - t204 / 0.2e1;
t252 = t116 * qJD(1) + t142 * qJD(2) + t226 * qJD(3);
t225 = t242 * t236;
t223 = t242 * t311;
t219 = t224 * qJD(3);
t179 = t312 * t244 * t242;
t176 = t193 * qJD(2);
t154 = t290 + (-pkin(2) / 0.2e1 + t375) * t244;
t153 = pkin(2) * t373 + t242 * t375 + t291;
t140 = t256 * t187;
t133 = t397 * qJD(3);
t129 = t312 * t381;
t115 = (-t201 * t241 - t256 * t359) * t365;
t114 = t399 * qJD(3);
t112 = 0.2e1 * t286 + t338;
t97 = pkin(3) * t254 + t232;
t93 = t98 * qJD(3);
t92 = t98 * qJD(4);
t91 = t97 * qJD(3);
t90 = t97 * qJD(4);
t71 = 0.2e1 * t287 + t339;
t50 = t226 * t378 + t201 * t376 + t232 - t346 / 0.2e1 + t372 / 0.2e1;
t48 = t49 * qJD(4);
t47 = t50 * qJD(3);
t46 = t50 * qJD(4);
t42 = t174 + t342 / 0.2e1 + t345 / 0.2e1 + t328;
t41 = -t173 + t341 / 0.2e1 + t344 / 0.2e1 + t325;
t27 = t260 + t326;
t20 = -t88 - t351 / 0.2e1 - t357 / 0.2e1 + t327;
t19 = -t87 - t260 + t325;
t8 = t255 * pkin(3) + (t216 + t231) * t232;
t2 = t349 / 0.2e1 + t358 / 0.2e1 + t258;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t311, -t245 * t367, 0, 0, t225, t219, 0, -t225, 0, 0, t230 * t313 - t244 * t311, t230 * t236 + t223, t176, t124 * qJD(2), t305, -t417, 0, -t305, 0, 0, t108 * qJD(3) - t167, t109 * qJD(3) + t294, t419, t25 * qJD(2) + t23 * qJD(3) + t389, t305, 0, t417, 0, 0, -t305, t29 * qJD(3) + t140 - t167, t419, t30 * qJD(3) + t329, t24 * qJD(2) + qJD(3) * t358 - t113 * t187 + t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t288, -t245 * t297, 0, 0, t225, t219, 0, -t225, 0, 0, t153 * qJD(3) - t244 * t288, t154 * qJD(3) + t223 + t293, t176 + t318, t320 + (-pkin(2) * t243 + pkin(7) * t296) * t367, t305, -t417, 0, -t305, 0, 0, t41 * qJD(3) + t330, t42 * qJD(3) + t294 + t295, t421, t337 + (t231 * t370 + t298) * qJD(2) + t8 * qJD(3) + t387, t305, 0, t417, 0, 0, -t305, t19 * qJD(3) + t140 + t330, t421, t20 * qJD(3) - t295 + t329, t340 + (t123 * t370 + t298) * qJD(2) + t2 * qJD(3) + t387 + t27 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, t400, t236, -t179, -t313, 0, t153 * qJD(2) - t229 * t236 + t304, t154 * qJD(2) + t229 * t313 + t303, 0, 0, t416, -t420, t317, -t416, -t315, 0, t41 * qJD(2) - t114 + t323, t42 * qJD(2) + t321 + t322, t115, t343 + t8 * qJD(2) + (-t120 * t241 - t359 * t399) * t365 + t90, t416, t317, t420, 0, t315, -t416, t19 * qJD(2) - t114 + t336, t360, t20 * qJD(2) - t321 + t335, t364 + t2 * qJD(2) + (-t120 * t226 + t228 * t399) * qJD(3) + t46 + t71 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415, t91 + t414, 0, 0, 0, 0, 0, 0, 0, t415, 0, t47 + t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t416, t317, t129, t27 * qJD(2) + t71 * qJD(3) - t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t310, t245 * t368, 0, 0, t225, t219, 0, -t225, 0, 0, -t151 * qJD(3) + t244 * t310, -t152 * qJD(3) - t293, -t318, -t320, t305, -t417, 0, -t305, 0, 0, -t39 * qJD(3) + t168, -t40 * qJD(3) - t295, t418, -t7 * qJD(3) - t337 - t391, t305, 0, t417, 0, 0, -t305, -t17 * qJD(3) + t140 + t168, t418, -t18 * qJD(3) + t186 + t295, -t1 * qJD(3) - t26 * qJD(5) - t340 - t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t225, t219, 0, -t225, 0, 0, -pkin(2) * t313, -pkin(2) * t236, 0, 0, t305, -t417, 0, -t305, 0, 0, t117 * qJD(3), t118 * qJD(3), t410, t28 * qJD(3) + t390, t305, 0, t417, 0, 0, -t305, t33 * qJD(3) + t140, t410, t34 * qJD(3) + t186, qJD(3) * t349 - t123 * t187 + t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, t400, t236, -t179, -t313, 0, -pkin(7) * t236 - t262, pkin(7) * t313 - t261, 0, 0, t416, -t420, t317, -t416, -t315, 0, -t133 + t265, -t264 + t319, t115, (-t144 * t241 - t359 * t397) * t365 + t90 + t278, t416, t317, t420, 0, t315, -t416, -t133 + t275, t360, -t274 - t319, (-t144 * t226 + t228 * t397) * qJD(3) + t46 + t112 * qJD(5) + t283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415, t382 + t91, 0, 0, 0, 0, 0, 0, 0, t415, 0, t382 + t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t416, t317, t129, t112 * qJD(3) + t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t179, -t400, 0, t179, 0, 0, t151 * qJD(2) - t304, t152 * qJD(2) - t303, 0, 0, -t416, t420, 0, t416, 0, 0, t39 * qJD(2) - t314 - t323, t40 * qJD(2) - t316 - t322, 0, t7 * qJD(2) - t343 + t92, -t416, 0, -t420, 0, 0, t416, t17 * qJD(2) - t314 - t336, 0, t18 * qJD(2) + t316 - t335, t1 * qJD(2) + t116 * qJD(5) - t364 - t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t179, -t400, 0, t179, 0, 0, t262, t261, 0, 0, -t416, t420, 0, t416, 0, 0, -t314 - t265, -t316 + t264, 0, -t278 + t92, -t416, 0, -t420, 0, 0, t416, -t314 - t275, 0, t316 + t274, t142 * qJD(5) - t283 - t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t226 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401, -t402, 0, t408, 0, 0, 0, 0, 0, 0, -t401, 0, t402, -t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t315, t317, -t415, -t93 + t411, 0, 0, 0, 0, 0, 0, t315, -t415, -t317, t361 + t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t315, t317, -t415, -t382 - t93, 0, 0, 0, 0, 0, 0, t315, -t415, -t317, -t382 + t361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401, t402, 0, -t408, 0, 0, 0, 0, 0, 0, t401, 0, -t402, t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t416, 0, -t129, t26 * qJD(2) - t116 * qJD(3) + t306 + t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t416, 0, -t129, -t142 * qJD(3) - t257 + t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
