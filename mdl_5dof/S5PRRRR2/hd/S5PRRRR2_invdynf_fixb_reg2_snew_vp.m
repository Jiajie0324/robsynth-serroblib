% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5PRRRR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d3,d4,d5]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-07-18 13:30
% Revision: 08c8d617a845f5dd194efdf9aca2774760f7818f (2019-07-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5PRRRR2_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR2_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR2_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRR2_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRR2_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S5PRRRR2_invdynf_fixb_reg2_snew_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-07-18 13:30:32
% EndTime: 2019-07-18 13:30:33
% DurationCPUTime: 1.63s
% Computational Cost: add. (3876->110), mult. (5078->148), div. (0->0), fcn. (3206->8), ass. (0->101)
t842 = qJD(2) + qJD(3);
t837 = qJD(4) + t842;
t835 = t837 ^ 2;
t841 = qJDD(2) + qJDD(3);
t836 = qJDD(4) + t841;
t847 = sin(qJ(4));
t851 = cos(qJ(4));
t813 = t835 * t847 - t836 * t851;
t848 = sin(qJ(3));
t852 = cos(qJ(3));
t858 = -t835 * t851 - t836 * t847;
t790 = t813 * t852 - t848 * t858;
t849 = sin(qJ(2));
t853 = cos(qJ(2));
t868 = t813 * t848 + t852 * t858;
t871 = t790 * t849 + t853 * t868;
t774 = t790 * t853 - t849 * t868;
t840 = t842 ^ 2;
t820 = t840 * t848 - t841 * t852;
t857 = -t840 * t852 - t841 * t848;
t867 = t820 * t849 + t853 * t857;
t798 = t820 * t853 - t849 * t857;
t846 = sin(qJ(5));
t862 = t846 * t836;
t850 = cos(qJ(5));
t861 = t850 * t836;
t832 = t849 * g(1) - g(2) * t853;
t824 = qJDD(2) * pkin(2) + t832;
t833 = -g(1) * t853 - g(2) * t849;
t855 = qJD(2) ^ 2;
t825 = -pkin(2) * t855 + t833;
t801 = t848 * t824 + t852 * t825;
t795 = -pkin(3) * t840 + t801;
t800 = t824 * t852 - t825 * t848;
t856 = pkin(3) * t841 + t800;
t779 = t851 * t795 + t847 * t856;
t843 = t846 ^ 2;
t844 = t850 ^ 2;
t860 = t843 + t844;
t859 = qJD(5) * t837;
t778 = -t795 * t847 + t851 * t856;
t854 = qJD(5) ^ 2;
t845 = -g(3) + qJDD(1);
t830 = -qJDD(2) * t849 - t853 * t855;
t829 = qJDD(2) * t853 - t849 * t855;
t828 = t846 * t835 * t850;
t827 = -t835 * t844 - t854;
t826 = -t835 * t843 - t854;
t823 = -qJDD(5) + t828;
t822 = qJDD(5) + t828;
t815 = t860 * t835;
t810 = t860 * t836;
t809 = -0.2e1 * t846 * t859 + t861;
t808 = 0.2e1 * t850 * t859 + t862;
t807 = -t832 * t849 + t833 * t853;
t806 = t832 * t853 + t833 * t849;
t805 = t823 * t850 - t826 * t846;
t804 = -t822 * t846 + t827 * t850;
t803 = t823 * t846 + t826 * t850;
t802 = t822 * t850 + t827 * t846;
t789 = t810 * t851 - t815 * t847;
t786 = t810 * t847 + t815 * t851;
t785 = t805 * t851 + t808 * t847;
t784 = t804 * t851 - t809 * t847;
t783 = t805 * t847 - t808 * t851;
t782 = t804 * t847 + t809 * t851;
t781 = -t800 * t848 + t801 * t852;
t780 = t800 * t852 + t801 * t848;
t777 = -t835 * pkin(6) - t778;
t776 = pkin(6) * t836 + t779;
t773 = -t786 * t848 + t789 * t852;
t770 = t786 * t852 + t789 * t848;
t769 = t776 * t850 + t845 * t846;
t768 = -t776 * t846 + t845 * t850;
t767 = -t783 * t848 + t785 * t852;
t766 = -t782 * t848 + t784 * t852;
t765 = t783 * t852 + t785 * t848;
t764 = t782 * t852 + t784 * t848;
t763 = -t780 * t849 + t781 * t853;
t762 = t780 * t853 + t781 * t849;
t761 = -t778 * t847 + t779 * t851;
t760 = t778 * t851 + t779 * t847;
t759 = -t770 * t849 + t773 * t853;
t758 = t770 * t853 + t773 * t849;
t757 = -t768 * t846 + t769 * t850;
t756 = t768 * t850 + t769 * t846;
t755 = -t765 * t849 + t767 * t853;
t754 = -t764 * t849 + t766 * t853;
t753 = t765 * t853 + t767 * t849;
t752 = t764 * t853 + t766 * t849;
t751 = t757 * t851 + t777 * t847;
t750 = t757 * t847 - t777 * t851;
t749 = -t760 * t848 + t761 * t852;
t748 = t760 * t852 + t761 * t848;
t747 = -t750 * t848 + t751 * t852;
t746 = t750 * t852 + t751 * t848;
t745 = -t748 * t849 + t749 * t853;
t744 = t748 * t853 + t749 * t849;
t743 = -t746 * t849 + t747 * t853;
t742 = t746 * t853 + t747 * t849;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t830, -t829, 0, t807, 0, 0, 0, 0, 0, 0, t867, t798, 0, t763, 0, 0, 0, 0, 0, 0, t871, t774, 0, t745, 0, 0, 0, 0, 0, 0, t754, t755, t759, t743; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t829, t830, 0, t806, 0, 0, 0, 0, 0, 0, -t798, t867, 0, t762, 0, 0, 0, 0, 0, 0, -t774, t871, 0, t744, 0, 0, 0, 0, 0, 0, t752, t753, t758, t742; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, t802, t803, 0, t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t830, -t829, 0, t807, 0, 0, 0, 0, 0, 0, t867, t798, 0, t763, 0, 0, 0, 0, 0, 0, t871, t774, 0, t745, 0, 0, 0, 0, 0, 0, t754, t755, t759, t743; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t829, t830, 0, t806, 0, 0, 0, 0, 0, 0, -t798, t867, 0, t762, 0, 0, 0, 0, 0, 0, -t774, t871, 0, t744, 0, 0, 0, 0, 0, 0, t752, t753, t758, t742; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, t802, t803, 0, t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t855, -qJDD(2), 0, t833, 0, 0, 0, 0, 0, 0, t857, t820, 0, t781, 0, 0, 0, 0, 0, 0, t868, t790, 0, t749, 0, 0, 0, 0, 0, 0, t766, t767, t773, t747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t855, 0, t832, 0, 0, 0, 0, 0, 0, -t820, t857, 0, t780, 0, 0, 0, 0, 0, 0, -t790, t868, 0, t748, 0, 0, 0, 0, 0, 0, t764, t765, t770, t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, t802, t803, 0, t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t840, -t841, 0, t801, 0, 0, 0, 0, 0, 0, t858, t813, 0, t761, 0, 0, 0, 0, 0, 0, t784, t785, t789, t751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t841, -t840, 0, t800, 0, 0, 0, 0, 0, 0, -t813, t858, 0, t760, 0, 0, 0, 0, 0, 0, t782, t783, t786, t750; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, t802, t803, 0, t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t835, -t836, 0, t779, 0, 0, 0, 0, 0, 0, t804, t805, t810, t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t836, -t835, 0, t778, 0, 0, 0, 0, 0, 0, t809, -t808, t815, -t777; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, 0, 0, 0, 0, 0, 0, t802, t803, 0, t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t827, t823, t861, t769; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t822, t826, -t862, t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t809, t808, -t815, t777;];
f_new_reg  = t1;
