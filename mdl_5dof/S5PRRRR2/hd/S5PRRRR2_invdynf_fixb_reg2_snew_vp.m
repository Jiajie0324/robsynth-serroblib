% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5PRRRR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d3,d4,d5]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:05
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5PRRRR2_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(6,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR2_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR2_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRR2_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRR2_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'S5PRRRR2_invdynf_fixb_reg2_snew_vp: pkin has to be [6x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:05:07
% EndTime: 2019-12-05 17:05:09
% DurationCPUTime: 1.57s
% Computational Cost: add. (3876->110), mult. (5078->148), div. (0->0), fcn. (3206->8), ass. (0->101)
t844 = qJD(2) + qJD(3);
t839 = qJD(4) + t844;
t837 = t839 ^ 2;
t843 = qJDD(2) + qJDD(3);
t838 = qJDD(4) + t843;
t849 = sin(qJ(4));
t853 = cos(qJ(4));
t815 = t849 * t837 - t853 * t838;
t850 = sin(qJ(3));
t854 = cos(qJ(3));
t860 = -t853 * t837 - t849 * t838;
t792 = t854 * t815 - t850 * t860;
t851 = sin(qJ(2));
t855 = cos(qJ(2));
t870 = t850 * t815 + t854 * t860;
t873 = t851 * t792 + t855 * t870;
t776 = t855 * t792 - t851 * t870;
t842 = t844 ^ 2;
t822 = t850 * t842 - t854 * t843;
t859 = -t854 * t842 - t850 * t843;
t869 = t851 * t822 + t855 * t859;
t800 = t855 * t822 - t851 * t859;
t848 = sin(qJ(5));
t864 = t848 * t838;
t852 = cos(qJ(5));
t863 = t852 * t838;
t834 = t851 * g(1) - t855 * g(2);
t826 = qJDD(2) * pkin(2) + t834;
t835 = -t855 * g(1) - t851 * g(2);
t857 = qJD(2) ^ 2;
t827 = -t857 * pkin(2) + t835;
t803 = t850 * t826 + t854 * t827;
t797 = -t842 * pkin(3) + t803;
t802 = t854 * t826 - t850 * t827;
t858 = t843 * pkin(3) + t802;
t781 = t853 * t797 + t849 * t858;
t845 = t848 ^ 2;
t846 = t852 ^ 2;
t862 = t845 + t846;
t861 = qJD(5) * t839;
t780 = -t849 * t797 + t853 * t858;
t856 = qJD(5) ^ 2;
t847 = -g(3) + qJDD(1);
t832 = -t851 * qJDD(2) - t855 * t857;
t831 = t855 * qJDD(2) - t851 * t857;
t830 = t848 * t837 * t852;
t829 = -t846 * t837 - t856;
t828 = -t845 * t837 - t856;
t825 = -qJDD(5) + t830;
t824 = qJDD(5) + t830;
t817 = t862 * t837;
t812 = t862 * t838;
t811 = -0.2e1 * t848 * t861 + t863;
t810 = 0.2e1 * t852 * t861 + t864;
t809 = -t851 * t834 + t855 * t835;
t808 = t855 * t834 + t851 * t835;
t807 = t852 * t825 - t848 * t828;
t806 = -t848 * t824 + t852 * t829;
t805 = t848 * t825 + t852 * t828;
t804 = t852 * t824 + t848 * t829;
t791 = t853 * t812 - t849 * t817;
t788 = t849 * t812 + t853 * t817;
t787 = t853 * t807 + t849 * t810;
t786 = t853 * t806 - t849 * t811;
t785 = t849 * t807 - t853 * t810;
t784 = t849 * t806 + t853 * t811;
t783 = -t850 * t802 + t854 * t803;
t782 = t854 * t802 + t850 * t803;
t779 = -t837 * pkin(6) - t780;
t778 = t838 * pkin(6) + t781;
t775 = -t850 * t788 + t854 * t791;
t772 = t854 * t788 + t850 * t791;
t771 = t852 * t778 + t848 * t847;
t770 = -t848 * t778 + t852 * t847;
t769 = -t850 * t785 + t854 * t787;
t768 = -t850 * t784 + t854 * t786;
t767 = t854 * t785 + t850 * t787;
t766 = t854 * t784 + t850 * t786;
t765 = -t851 * t782 + t855 * t783;
t764 = t855 * t782 + t851 * t783;
t763 = -t849 * t780 + t853 * t781;
t762 = t853 * t780 + t849 * t781;
t761 = -t851 * t772 + t855 * t775;
t760 = t855 * t772 + t851 * t775;
t759 = -t848 * t770 + t852 * t771;
t758 = t852 * t770 + t848 * t771;
t757 = -t851 * t767 + t855 * t769;
t756 = -t851 * t766 + t855 * t768;
t755 = t855 * t767 + t851 * t769;
t754 = t855 * t766 + t851 * t768;
t753 = t853 * t759 + t849 * t779;
t752 = t849 * t759 - t853 * t779;
t751 = -t850 * t762 + t854 * t763;
t750 = t854 * t762 + t850 * t763;
t749 = -t850 * t752 + t854 * t753;
t748 = t854 * t752 + t850 * t753;
t747 = -t851 * t750 + t855 * t751;
t746 = t855 * t750 + t851 * t751;
t745 = -t851 * t748 + t855 * t749;
t744 = t855 * t748 + t851 * t749;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t832, -t831, 0, t809, 0, 0, 0, 0, 0, 0, t869, t800, 0, t765, 0, 0, 0, 0, 0, 0, t873, t776, 0, t747, 0, 0, 0, 0, 0, 0, t756, t757, t761, t745; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t831, t832, 0, t808, 0, 0, 0, 0, 0, 0, -t800, t869, 0, t764, 0, 0, 0, 0, 0, 0, -t776, t873, 0, t746, 0, 0, 0, 0, 0, 0, t754, t755, t760, t744; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, t804, t805, 0, t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t832, -t831, 0, t809, 0, 0, 0, 0, 0, 0, t869, t800, 0, t765, 0, 0, 0, 0, 0, 0, t873, t776, 0, t747, 0, 0, 0, 0, 0, 0, t756, t757, t761, t745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t831, t832, 0, t808, 0, 0, 0, 0, 0, 0, -t800, t869, 0, t764, 0, 0, 0, 0, 0, 0, -t776, t873, 0, t746, 0, 0, 0, 0, 0, 0, t754, t755, t760, t744; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, t804, t805, 0, t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t857, -qJDD(2), 0, t835, 0, 0, 0, 0, 0, 0, t859, t822, 0, t783, 0, 0, 0, 0, 0, 0, t870, t792, 0, t751, 0, 0, 0, 0, 0, 0, t768, t769, t775, t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t857, 0, t834, 0, 0, 0, 0, 0, 0, -t822, t859, 0, t782, 0, 0, 0, 0, 0, 0, -t792, t870, 0, t750, 0, 0, 0, 0, 0, 0, t766, t767, t772, t748; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, t804, t805, 0, t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t842, -t843, 0, t803, 0, 0, 0, 0, 0, 0, t860, t815, 0, t763, 0, 0, 0, 0, 0, 0, t786, t787, t791, t753; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t843, -t842, 0, t802, 0, 0, 0, 0, 0, 0, -t815, t860, 0, t762, 0, 0, 0, 0, 0, 0, t784, t785, t788, t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, t804, t805, 0, t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t837, -t838, 0, t781, 0, 0, 0, 0, 0, 0, t806, t807, t812, t759; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t838, -t837, 0, t780, 0, 0, 0, 0, 0, 0, t811, -t810, t817, -t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, 0, 0, 0, 0, 0, 0, t804, t805, 0, t758; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t829, t825, t863, t771; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t824, t828, -t864, t770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t811, t810, -t817, t779;];
f_new_reg = t1;
