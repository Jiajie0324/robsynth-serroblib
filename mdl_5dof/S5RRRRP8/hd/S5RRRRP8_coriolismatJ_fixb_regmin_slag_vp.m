% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:02
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRP8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRP8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRP8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRRP8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:02:11
% EndTime: 2019-12-31 22:02:28
% DurationCPUTime: 7.69s
% Computational Cost: add. (6880->468), mult. (14571->675), div. (0->0), fcn. (14575->6), ass. (0->371)
t314 = cos(qJ(3));
t519 = pkin(7) + pkin(8);
t272 = t519 * t314;
t313 = cos(qJ(4));
t262 = t313 * t272;
t311 = sin(qJ(3));
t271 = t519 * t311;
t310 = sin(qJ(4));
t450 = t310 * t271;
t204 = t262 - t450;
t443 = t313 * t314;
t253 = t310 * t311 - t443;
t138 = -t253 * qJ(5) + t204;
t312 = sin(qJ(2));
t448 = t311 * t312;
t233 = -t310 * t448 + t312 * t443;
t507 = -t233 / 0.2e1;
t535 = t138 * t507;
t444 = t313 * t311;
t449 = t310 * t314;
t257 = t444 + t449;
t230 = t257 * t312;
t461 = t230 * qJ(5);
t315 = cos(qJ(2));
t366 = -t315 * pkin(2) - t312 * pkin(7);
t266 = -pkin(1) + t366;
t447 = t311 * t315;
t291 = pkin(6) * t447;
t436 = -t314 * t266 + t291;
t446 = t312 * t314;
t190 = -pkin(8) * t446 - t436;
t485 = t315 * pkin(3);
t171 = t190 - t485;
t441 = t314 * t315;
t410 = pkin(6) * t441;
t215 = t311 * t266 + t410;
t191 = -pkin(8) * t448 + t215;
t179 = t313 * t191;
t98 = t310 * t171 + t179;
t84 = t98 - t461;
t453 = t310 * t190;
t104 = -t179 - t453;
t87 = t104 + t461;
t534 = t84 + t87;
t504 = -t257 / 0.2e1;
t379 = t313 * t271 + t310 * t272;
t529 = -t257 * qJ(5) - t379;
t532 = t529 / 0.2e1;
t383 = t532 - t529 / 0.2e1;
t413 = qJD(3) + qJD(4);
t530 = t383 * t84;
t225 = t233 * qJ(5);
t158 = t313 * t171;
t452 = t310 * t191;
t97 = -t158 + t452;
t83 = -t225 - t97;
t528 = t84 * t504 + t535;
t505 = t253 / 0.2e1;
t508 = -t230 / 0.2e1;
t509 = t230 / 0.2e1;
t80 = -t315 * pkin(4) + t83;
t527 = t80 * t505 + t528 + (t508 + t509) * t529;
t306 = t311 ^ 2;
t308 = t314 ^ 2;
t286 = t308 - t306;
t417 = t312 * qJD(1);
t396 = t314 * t417;
t526 = t286 * qJD(2) - 0.2e1 * t311 * t396;
t525 = t413 * t379;
t524 = t233 ^ 2;
t523 = t257 ^ 2;
t522 = -pkin(4) / 0.2e1;
t521 = -t80 / 0.2e1;
t275 = t310 * t447;
t235 = t313 * t441 - t275;
t484 = t315 * pkin(7);
t488 = t312 * pkin(2);
t273 = -t484 + t488;
t263 = t314 * t273;
t294 = pkin(6) * t448;
t178 = t312 * pkin(3) - pkin(8) * t441 + t263 + t294;
t160 = t313 * t178;
t260 = t311 * t273;
t412 = pkin(6) * t446;
t195 = -pkin(8) * t447 + t260 - t412;
t451 = t310 * t195;
t380 = t160 - t451;
t82 = t312 * pkin(4) - t235 * qJ(5) + t380;
t520 = t82 / 0.2e1;
t518 = t87 * pkin(4);
t517 = -t138 / 0.2e1;
t512 = t138 / 0.2e1;
t511 = -t158 / 0.2e1;
t510 = -t171 / 0.2e1;
t386 = -t179 / 0.2e1;
t506 = -t253 / 0.2e1;
t503 = t257 / 0.2e1;
t385 = -t262 / 0.2e1;
t502 = -t275 / 0.2e1;
t487 = t313 * pkin(3);
t301 = pkin(4) + t487;
t501 = -t301 / 0.2e1;
t500 = t301 / 0.2e1;
t499 = t313 / 0.2e1;
t498 = t315 / 0.2e1;
t497 = pkin(4) * t230;
t496 = pkin(4) * t233;
t495 = pkin(4) * t235;
t494 = pkin(4) * t253;
t493 = pkin(4) * t257;
t492 = t138 * pkin(4);
t232 = t257 * t315;
t491 = t232 * pkin(4);
t490 = t310 * pkin(3);
t489 = t311 * pkin(3);
t486 = t314 * pkin(3);
t457 = t257 * t233;
t460 = t230 * t253;
t73 = -t457 + t460;
t483 = t413 * t73;
t482 = t80 - t83;
t481 = pkin(3) * qJD(3);
t480 = pkin(3) * qJD(4);
t479 = pkin(4) * qJD(4);
t478 = pkin(4) * qJD(5);
t102 = -t230 * t503 + t233 * t506;
t476 = t413 * t102;
t12 = t482 * t230;
t475 = qJD(1) * t12;
t397 = pkin(6) + t489;
t367 = t397 * t312;
t176 = t367 + t497;
t15 = t176 * t496 - t482 * t84;
t474 = qJD(1) * t15;
t21 = -t230 * t84 - t233 * t80;
t473 = qJD(1) * t21;
t185 = t233 * t367;
t411 = pkin(3) * t446;
t52 = t104 * t315 - t230 * t411 - t185;
t472 = qJD(1) * t52;
t445 = t313 * t190;
t105 = t445 - t452;
t53 = t105 * t315 + (-t397 * t230 + t233 * t486) * t312;
t471 = qJD(1) * t53;
t65 = -t230 * t367 - t97 * t315;
t470 = qJD(1) * t65;
t66 = -t98 * t315 - t185;
t469 = qJD(1) * t66;
t159 = t310 * t178;
t187 = t313 * t195;
t437 = t187 + t159;
t86 = -qJ(5) * t232 + t437;
t11 = -t230 * t86 - t232 * t84 - t233 * t82 - t235 * t80;
t468 = t11 * qJD(1);
t88 = t105 - t225;
t13 = -t534 * t233 + (t80 - t88) * t230;
t467 = t13 * qJD(1);
t292 = pkin(3) * t447;
t305 = t315 * pkin(6);
t264 = t305 + t292;
t177 = t264 + t491;
t14 = t176 * t177 + t80 * t82 + t84 * t86;
t465 = t14 * qJD(1);
t346 = t411 + t496;
t16 = t176 * t346 + t80 * t87 + t84 * t88;
t464 = t16 * qJD(1);
t463 = t379 * t315;
t462 = t204 * t315;
t25 = -t264 * t230 - t232 * t367 + t97 * t312 + t380 * t315;
t459 = t25 * qJD(1);
t26 = t437 * t315 + t264 * t233 + (t397 * t235 - t98) * t312;
t456 = t26 * qJD(1);
t302 = -pkin(2) - t486;
t455 = t302 * t230;
t454 = t302 * t233;
t307 = t312 ^ 2;
t442 = t314 * t307;
t400 = t485 / 0.2e1;
t369 = t400 + t190 / 0.2e1;
t42 = t369 * t313 + t511;
t440 = t42 * qJD(1);
t91 = -t230 * t235 - t232 * t233;
t439 = t91 * qJD(1);
t309 = t315 ^ 2;
t287 = t309 - t307;
t173 = -pkin(6) * t442 - t215 * t315;
t435 = qJD(1) * t173;
t434 = qJD(1) * t233;
t433 = qJD(2) * t257;
t432 = qJD(2) * t302;
t431 = qJD(2) * t311;
t430 = qJD(2) * t314;
t429 = qJD(3) * t311;
t428 = qJD(3) * t314;
t427 = qJD(3) * t315;
t426 = qJD(4) * t302;
t118 = t260 * t315 + (-t215 + t410) * t312;
t425 = t118 * qJD(1);
t119 = t436 * t312 + (-t294 + t263) * t315;
t424 = t119 * qJD(1);
t130 = t230 * t312 - t232 * t315;
t423 = t130 * qJD(1);
t131 = -t233 * t312 + t235 * t315;
t422 = t131 * qJD(1);
t338 = -t449 / 0.2e1 - t444 / 0.2e1;
t150 = (t504 + t338) * t315;
t142 = t150 * qJD(1);
t151 = t502 + (t443 / 0.2e1 + t506) * t315;
t143 = t151 * qJD(1);
t172 = t307 * pkin(6) * t311 + t436 * t315;
t421 = t172 * qJD(1);
t256 = t287 * t311;
t420 = t256 * qJD(1);
t259 = t314 * t309 - t442;
t419 = t259 * qJD(1);
t418 = t287 * qJD(1);
t416 = t312 * qJD(2);
t415 = t315 * qJD(1);
t414 = t315 * qJD(2);
t409 = pkin(1) * t417;
t408 = pkin(1) * t415;
t407 = t310 * t480;
t406 = t496 / 0.2e1;
t405 = t493 / 0.2e1;
t404 = -t490 / 0.2e1;
t403 = t489 / 0.2e1;
t402 = t487 / 0.2e1;
t401 = -t486 / 0.2e1;
t399 = t501 + t522;
t398 = t83 / 0.2e1 + t521;
t395 = t311 * t427;
t394 = t314 * t427;
t393 = t311 * t428;
t392 = t311 * t430;
t391 = t312 * t414;
t390 = t312 * t415;
t389 = t314 * t416;
t388 = t310 * t508;
t387 = t310 * t506;
t384 = t313 * t498;
t382 = -t159 / 0.2e1 - t187 / 0.2e1;
t381 = pkin(3) * t413;
t376 = t413 * t257;
t375 = t413 * t315;
t374 = t411 / 0.2e1;
t373 = -qJD(3) + t415;
t371 = t311 * t389;
t370 = -t487 / 0.2e1 + t500;
t368 = t415 - qJD(3) / 0.2e1;
t365 = t489 + t493;
t363 = t160 / 0.2e1 - t451 / 0.2e1;
t224 = t302 + t494;
t316 = t176 * t365 / 0.2e1 + t80 * t517 + t88 * t512 + t346 * t224 / 0.2e1 + t534 * t532;
t332 = t82 * t500 + t86 * t490 / 0.2e1;
t1 = -t316 + t332;
t24 = t224 * t365;
t362 = -t1 * qJD(1) + t24 * qJD(2);
t317 = t83 * t506 + t527 - t528;
t8 = t495 / 0.2e1 + t317;
t361 = qJD(1) * t8;
t330 = t232 * t404 + t235 * t501;
t5 = (t84 / 0.2e1 + t87 / 0.2e1) * t257 + (t88 / 0.2e1 + t521) * t253 + (t512 + t517) * t233 + t383 * t230 + t330;
t360 = t5 * qJD(1);
t3 = -t530 - t398 * t138 + (t176 * t504 + t224 * t507 + t520) * pkin(4);
t31 = t224 * t493;
t359 = -qJD(1) * t3 + qJD(2) * t31;
t358 = -qJD(4) + t373;
t345 = -t367 / 0.2e1;
t357 = t253 * t345 + t382 - t455 / 0.2e1;
t320 = t138 * t509 + t233 * t532 + t80 * t503 + t84 * t505;
t341 = t292 / 0.2e1 + t305 / 0.2e1 + t491 / 0.2e1;
t17 = t320 + t341;
t54 = -t138 * t253 - t257 * t529;
t356 = -qJD(1) * t17 + qJD(2) * t54;
t117 = t399 * t257 + (t387 - t311 / 0.2e1) * pkin(3);
t90 = t399 * t233 + (t388 - t446 / 0.2e1) * pkin(3);
t355 = qJD(1) * t90 + qJD(2) * t117;
t227 = t230 ^ 2;
t120 = t227 - t524;
t32 = qJD(1) * t120 + qJD(2) * t73;
t342 = t522 + t370;
t122 = t342 * t253;
t94 = t342 * t230;
t354 = qJD(1) * t94 + qJD(2) * t122;
t252 = t253 ^ 2;
t139 = t252 - t523;
t38 = qJD(1) * t73 + qJD(2) * t139;
t146 = t253 * t489 + t302 * t257;
t321 = -t204 * t498 - t230 * t403;
t324 = -t454 / 0.2e1 + t363;
t28 = (t253 * t401 + t397 * t504 + t402) * t312 + t321 + t324;
t353 = -t28 * qJD(1) + t146 * qJD(2);
t147 = -t302 * t253 + t257 * t489;
t322 = t379 * t498 + t489 * t507;
t337 = t455 / 0.2e1 + t382;
t27 = (t257 * t401 + t397 * t505 + t404) * t312 + t322 + t337;
t352 = t27 * qJD(1) - t147 * qJD(2);
t194 = t385 + t262 / 0.2e1;
t40 = t386 + t179 / 0.2e1 + (t510 + t369) * t310;
t351 = t40 * qJD(1) + t194 * qJD(2);
t350 = t373 * t312;
t103 = t457 + t460;
t144 = t227 + t524;
t349 = qJD(1) * t144 + qJD(2) * t103;
t192 = t252 + t523;
t348 = qJD(1) * t103 + qJD(2) * t192;
t347 = t433 + t434;
t344 = t367 / 0.2e1;
t343 = t488 / 0.2e1 - t484 / 0.2e1;
t328 = t343 * t311;
t188 = t260 / 0.2e1 + t328;
t340 = pkin(2) * t430 - t188 * qJD(1);
t329 = t343 * t314;
t189 = -t263 / 0.2e1 - t329;
t339 = pkin(2) * t431 - t189 * qJD(1);
t35 = t463 / 0.2e1 + t253 * t344 + t337;
t336 = t35 * qJD(1) + t253 * t432;
t34 = -t462 / 0.2e1 + t257 * t345 + t324;
t335 = t34 * qJD(1) - t257 * t432;
t334 = t314 * t350;
t57 = qJD(2) * t102 - t230 * t434;
t75 = -qJD(1) * t102 + t253 * t433;
t243 = (t306 / 0.2e1 - t308 / 0.2e1) * t312;
t333 = -t243 * qJD(1) + t392;
t331 = t257 * t344 + t363 + t454 / 0.2e1;
t327 = t311 * qJD(1) * t442 + t243 * qJD(2);
t255 = t286 * t307;
t326 = t255 * qJD(1) + 0.2e1 * t371;
t319 = (t398 * t310 + t84 * t499) * pkin(3) + t84 * t501;
t10 = -t518 / 0.2e1 + t319;
t318 = (t138 * t499 + t383 * t310) * pkin(3) + t138 * t501;
t20 = t492 / 0.2e1 + t318;
t236 = (-t301 + t487) * t490;
t323 = -t10 * qJD(1) - t20 * qJD(2) - t236 * qJD(3);
t298 = -t417 / 0.2e1;
t297 = t417 / 0.2e1;
t296 = t416 / 0.2e1;
t250 = t368 * t312;
t239 = t243 * qJD(3);
t226 = (-qJD(4) / 0.2e1 + t368) * t312;
t155 = t294 + t263 / 0.2e1 - t329;
t154 = t412 - t260 / 0.2e1 + t328;
t153 = t257 * t498 + t338 * t315;
t152 = t253 * t498 + t314 * t384 + t502;
t145 = t347 * pkin(4);
t141 = 0.2e1 * t385 + t450;
t121 = t494 / 0.2e1 + t370 * t253;
t116 = pkin(3) * t387 + t257 * t501 + t403 + t405;
t107 = t150 * qJD(2) - t233 * t415;
t106 = t151 * qJD(2) - t230 * t415;
t101 = t103 * qJD(5);
t96 = -t376 - t142;
t95 = -t413 * t253 - t143;
t93 = t497 / 0.2e1 + t370 * t230;
t89 = pkin(3) * t388 + t233 * t501 + t374 + t406;
t64 = t153 * qJD(2) + t233 * t358;
t63 = t152 * qJD(2) + t230 * t358;
t43 = pkin(3) * t384 + t452 + t511 - t445 / 0.2e1;
t41 = 0.2e1 * t386 - t453 / 0.2e1 + (t400 + t510) * t310;
t37 = t462 / 0.2e1 + t331;
t36 = -t463 / 0.2e1 + t357;
t30 = t257 * t374 + t312 * t404 - t322 + t357;
t29 = t253 * t374 + t312 * t402 - t321 + t331;
t19 = -t492 / 0.2e1 + t318;
t18 = -t320 + t341;
t9 = t518 / 0.2e1 + t319;
t7 = -t495 / 0.2e1 + t317;
t6 = t87 * t504 + t88 * t506 + t330 + t527 - t535;
t4 = pkin(4) * t520 + t138 * t521 + t176 * t405 + t224 * t406 + t83 * t512 + t530;
t2 = t316 + t332;
t22 = [0, 0, 0, t391, t287 * qJD(2), 0, 0, 0, -pkin(1) * t416, -pkin(1) * t414, -t307 * t393 + t308 * t391, -t255 * qJD(3) - 0.2e1 * t315 * t371, -t259 * qJD(2) + t312 * t395, t256 * qJD(2) + t312 * t394, -t391, -qJD(2) * t119 - qJD(3) * t173, qJD(2) * t118 - qJD(3) * t172, (qJD(2) * t235 - t230 * t413) * t233, qJD(2) * t91 + t120 * t413, -t131 * qJD(2) + t230 * t375, -t130 * qJD(2) + t233 * t375, -t391, -qJD(2) * t25 - qJD(3) * t52 - qJD(4) * t66, qJD(2) * t26 + qJD(3) * t53 + qJD(4) * t65, qJD(2) * t11 + qJD(3) * t13 + qJD(4) * t12 + qJD(5) * t144, qJD(2) * t14 + qJD(3) * t16 + qJD(4) * t15 + qJD(5) * t21; 0, 0, 0, t390, t418, t414, -t416, 0, -pkin(6) * t414 - t409, pkin(6) * t416 - t408, -t239 + (t308 * t417 + t392) * t315, -0.2e1 * t312 * t393 + t315 * t526, t311 * t416 - t419, t389 + t420, -t250, -t424 + (t311 * t366 - t410) * qJD(2) + t155 * qJD(3), t425 + (t314 * t366 + t291) * qJD(2) + t154 * qJD(3), t235 * t347 + t476, t439 + (-t232 * t257 - t235 * t253) * qJD(2) + t483, t152 * t413 + t257 * t416 - t422, t153 * t413 - t253 * t416 - t423, -t226, -t459 + (t302 * t232 + t264 * t253 - t312 * t379) * qJD(2) + t29 * qJD(3) + t37 * qJD(4), t456 + (-t204 * t312 + t302 * t235 + t264 * t257) * qJD(2) + t30 * qJD(3) + t36 * qJD(4), t468 + (-t138 * t232 - t235 * t529 - t253 * t86 - t257 * t82) * qJD(2) + t6 * qJD(3) + t7 * qJD(4) + t101, t465 + (t138 * t86 + t177 * t224 + t529 * t82) * qJD(2) + t2 * qJD(3) + t4 * qJD(4) + t18 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327, -t326, t311 * t350, t334, t296, qJD(2) * t155 - qJD(3) * t215 - t435, t154 * qJD(2) + qJD(3) * t436 - t421, t57, t32, t63, t64, t296, qJD(2) * t29 + qJD(3) * t104 + qJD(4) * t41 - t472, qJD(2) * t30 - qJD(3) * t105 + qJD(4) * t43 + t471, t467 + t6 * qJD(2) + (t301 * t230 - t233 * t490) * qJD(3) + t93 * qJD(4), t464 + t2 * qJD(2) + (t87 * t301 + t490 * t88) * qJD(3) + t9 * qJD(4) + t89 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, t32, t63, t64, t296, qJD(2) * t37 + qJD(3) * t41 - qJD(4) * t98 - t469, qJD(2) * t36 + qJD(3) * t43 + qJD(4) * t97 + t470, qJD(2) * t7 + qJD(3) * t93 + t230 * t479 + t475, qJD(2) * t4 + qJD(3) * t9 - t479 * t84 + t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t349, qJD(2) * t18 + qJD(3) * t89 + t473; 0, 0, 0, -t390, -t418, 0, 0, 0, t409, t408, -t308 * t390 - t239, 0.2e1 * t311 * t334, -t394 + t419, t395 - t420, t250, qJD(3) * t189 + t424, qJD(3) * t188 - t425, -t235 * t434 + t476, -t439 + t483, -t151 * t413 + t422, -t150 * t413 + t423, t226, -qJD(3) * t28 - qJD(4) * t34 + t459, -qJD(3) * t27 - qJD(4) * t35 - t456, -qJD(3) * t5 + qJD(4) * t8 + t101 - t468, -qJD(3) * t1 - qJD(4) * t3 - qJD(5) * t17 - t465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, t286 * qJD(3), 0, 0, 0, -pkin(2) * t429, -pkin(2) * t428, -t253 * t376, t413 * t139, 0, 0, 0, t146 * qJD(3) + t257 * t426, t147 * qJD(3) - t253 * t426, qJD(5) * t192, qJD(3) * t24 + qJD(4) * t31 + qJD(5) * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t333, t526, -t373 * t314, t373 * t311, t298, -pkin(7) * t428 - t339, pkin(7) * t429 - t340, -t75, t38, t95, t96, t298, -qJD(3) * t204 + t141 * qJD(4) + t353, -t352 + t525, (t301 * t253 - t257 * t490) * qJD(3) + t121 * qJD(4) - t360, (-t138 * t301 + t490 * t529) * qJD(3) + t19 * qJD(4) + t116 * qJD(5) + t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75, t38, t95, t96, t298, t141 * qJD(3) - t204 * qJD(4) - t335, -t336 + t525, qJD(3) * t121 + t253 * t479 + t361, qJD(3) * t19 - t138 * t479 + t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t348, qJD(3) * t116 + t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t327, t326, (-t311 * t417 + t430) * t315, (-t396 - t431) * t315, t296, -qJD(2) * t189 + t435, -qJD(2) * t188 + t421, -t57, -t32, t106, t107, t296, qJD(2) * t28 + qJD(4) * t40 + t472, qJD(2) * t27 + qJD(4) * t42 - t471, qJD(2) * t5 + qJD(4) * t94 - t467, qJD(2) * t1 + qJD(4) * t10 + qJD(5) * t90 - t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t333, -t526, t314 * t415, -t311 * t415, t297, t339, t340, t75, -t38, t143, t142, t297, qJD(4) * t194 - t353, t352, qJD(4) * t122 + t360, qJD(4) * t20 + qJD(5) * t117 - t362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t407, -t313 * t480, 0, t236 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t310 * t381 + t351, -t313 * t381 + t440, t354, -pkin(4) * t407 - t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t57, -t32, t106, t107, t296, qJD(2) * t34 - qJD(3) * t40 + t469, qJD(2) * t35 - qJD(3) * t42 - t470, -qJD(2) * t8 - qJD(3) * t94 - t475, qJD(2) * t3 - qJD(3) * t10 - t233 * t478 - t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, -t38, t143, t142, t297, -t194 * qJD(3) + t335, t336, -qJD(3) * t122 - t361, -qJD(3) * t20 - t257 * t478 - t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t310 * t481 - t351, t313 * t481 - t440, -t354, t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t349, qJD(2) * t17 - qJD(3) * t90 + t233 * t479 - t473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t348, -qJD(3) * t117 + t257 * t479 - t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t22;
