% Calculate inertial parameters regressor of coriolis matrix for
% S5PRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d4,theta1]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:42
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PRRRP2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRP2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRP2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRRP2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:42:06
% EndTime: 2019-12-05 16:42:09
% DurationCPUTime: 1.26s
% Computational Cost: add. (558->146), mult. (1218->149), div. (0->0), fcn. (846->4), ass. (0->111)
t72 = cos(qJ(3));
t126 = t72 * pkin(2);
t69 = sin(qJ(4));
t71 = cos(qJ(4));
t82 = -t71 * pkin(4) - t69 * qJ(5);
t40 = -pkin(3) + t82;
t35 = t40 - t126;
t27 = t35 * t69;
t37 = t40 * t69;
t118 = t27 / 0.2e1 + t37 / 0.2e1;
t111 = t71 * qJ(5);
t128 = t69 * pkin(4);
t42 = t111 - t128;
t120 = t42 * t71;
t133 = -t118 - t120;
t67 = t69 ^ 2;
t68 = t71 ^ 2;
t132 = t67 + t68;
t60 = -pkin(3) - t126;
t94 = pkin(3) / 0.2e1 - t60 / 0.2e1;
t131 = t94 * t69;
t101 = qJD(2) + qJD(3);
t56 = t68 - t67;
t130 = t101 * t56;
t129 = pkin(3) * t71;
t70 = sin(qJ(3));
t127 = t70 * pkin(2);
t125 = t35 * t42;
t124 = t35 * t71;
t123 = t40 * t71;
t122 = t42 * t40;
t121 = t42 * t69;
t119 = t60 * t71;
t116 = t132 * pkin(7) * t126;
t113 = pkin(2) * qJD(3);
t100 = t70 * t113;
t53 = t69 * t100;
t63 = t67 * qJD(5);
t115 = t63 - t53;
t114 = pkin(2) * qJD(2);
t59 = pkin(7) + t127;
t86 = t132 * t72;
t83 = t59 * t86;
t7 = (t35 * t70 + t83) * pkin(2);
t112 = t7 * qJD(2);
t110 = qJD(2) * t69;
t109 = qJD(3) * t69;
t10 = (t60 * t70 + t83) * pkin(2);
t108 = t10 * qJD(2);
t12 = -t121 + t124;
t107 = t12 * qJD(2);
t13 = -t27 - t120;
t106 = t13 * qJD(2);
t36 = pkin(2) * t86;
t30 = t36 * qJD(2);
t105 = t56 * qJD(4);
t64 = t69 * qJD(4);
t65 = t71 * qJD(4);
t104 = t71 * qJD(5);
t103 = qJD(4) * qJ(5);
t99 = pkin(7) * t64;
t98 = t70 * t114;
t97 = pkin(7) * t65;
t96 = -t126 / 0.2e1;
t95 = t126 / 0.2e1;
t93 = qJD(2) * t125;
t92 = t35 * t110;
t91 = t60 * t110;
t90 = qJD(2) * t119;
t89 = t59 * t64;
t88 = t59 * t65;
t87 = t40 / 0.2e1 + t35 / 0.2e1;
t85 = pkin(2) * t101;
t84 = t71 * t100;
t14 = -t121 + t123;
t49 = t71 * t95;
t4 = t87 * t71 - t121 + t49;
t81 = t4 * qJD(2) + t14 * qJD(3);
t15 = -t37 - t120;
t48 = t69 * t96;
t3 = t48 + t133;
t80 = t3 * qJD(2) + t15 * qJD(3);
t57 = t69 * t104;
t79 = t57 - t84;
t78 = t42 * qJD(4) + t69 * qJD(5);
t17 = t48 + t131;
t77 = pkin(3) * t109 + t17 * qJD(2);
t50 = t71 * t96;
t18 = t94 * t71 + t50;
t76 = t18 * qJD(2) + qJD(3) * t129;
t73 = (t111 / 0.2e1 - t128 / 0.2e1) * t126;
t1 = t87 * t42 + t73;
t75 = t1 * qJD(2) + qJD(3) * t122;
t47 = t69 * t95;
t8 = t47 + t118;
t74 = t8 * qJD(2) + t40 * t109;
t28 = t82 * qJD(4) + t104;
t58 = t69 * t65;
t52 = t71 * t98;
t51 = t69 * t98;
t41 = t101 * t67;
t31 = t101 * t71 * t69;
t29 = t36 * qJD(3);
t20 = -t129 / 0.2e1 + t119 / 0.2e1 + t50;
t19 = t48 - t131;
t11 = t29 + t30;
t9 = t47 - t118;
t6 = t48 - t133;
t5 = -t124 / 0.2e1 + t121 - t123 / 0.2e1 + t49;
t2 = -t122 / 0.2e1 - t125 / 0.2e1 + t73;
t16 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64, -t65, 0, 0, 0, 0, 0, 0, 0, 0, -t64, 0, t65, t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t100, -t72 * t113, 0, 0, t58, t105, 0, -t58, 0, 0, t60 * t64 - t84, t60 * t65 + t53, t29, t10 * qJD(3), t58, 0, -t105, 0, 0, -t58, -t13 * qJD(4) + t79, t29, -t12 * qJD(4) + t115, t7 * qJD(3) - t35 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70 * t85, -t72 * t85, 0, 0, t58, t105, 0, -t58, 0, 0, t19 * qJD(4) - t52 - t84, t20 * qJD(4) + t51 + t53, t11, t108 + (-pkin(3) * t127 + t116) * qJD(3), t58, 0, -t105, 0, 0, -t58, t6 * qJD(4) - t52 + t79, t11, t5 * qJD(4) + t115 - t51, t112 + (t40 * t127 + t116) * qJD(3) + t2 * qJD(4) + t9 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, t130, t65, -t31, -t64, 0, t19 * qJD(3) - t88 + t91, t20 * qJD(3) + t89 + t90, 0, 0, t31, t65, -t130, 0, t64, -t31, t6 * qJD(3) - t106 - t88, t28, t5 * qJD(3) - t107 - t89, t2 * qJD(3) + t28 * t59 - t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, t65, t41, t9 * qJD(3) + t88 - t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, t72 * t114, 0, 0, t58, t105, 0, -t58, 0, 0, -t17 * qJD(4) + t52, -t18 * qJD(4) - t51, -t30, -t108, t58, 0, -t105, 0, 0, -t58, -t3 * qJD(4) + t52 + t57, -t30, -t4 * qJD(4) + t51 + t63, -t1 * qJD(4) - t8 * qJD(5) - t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, t105, 0, -t58, 0, 0, -pkin(3) * t64, -pkin(3) * t65, 0, 0, t58, 0, -t105, 0, 0, -t58, -t15 * qJD(4) + t57, 0, -t14 * qJD(4) + t63, -t78 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, t130, t65, -t31, -t64, 0, -t77 - t97, -t76 + t99, 0, 0, t31, t65, -t130, 0, t64, -t31, -t80 - t97, t28, -t81 - t99, pkin(7) * t28 - t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, t65, t41, -t74 + t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, -t130, 0, t31, 0, 0, t17 * qJD(3) - t91, t18 * qJD(3) - t90, 0, 0, -t31, 0, t130, 0, 0, t31, t3 * qJD(3) + t106, 0, t4 * qJD(3) + t107, t1 * qJD(3) + t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, -t130, 0, t31, 0, 0, t77, t76, 0, 0, -t31, 0, t130, 0, 0, t31, t80, 0, t81, t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, 0, -t41, t8 * qJD(3) + t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, 0, -t41, t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4), -t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t16;
