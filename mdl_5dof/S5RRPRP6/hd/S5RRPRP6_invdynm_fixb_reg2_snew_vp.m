% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPRP6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:59
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPRP6_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP6_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP6_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRP6_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRP6_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP6_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:58:47
% EndTime: 2019-12-31 19:59:01
% DurationCPUTime: 14.66s
% Computational Cost: add. (63376->641), mult. (146150->802), div. (0->0), fcn. (101017->8), ass. (0->444)
t1138 = sin(pkin(8));
t1139 = cos(pkin(8));
t1145 = cos(qJ(2));
t1223 = qJD(1) * t1145;
t1142 = sin(qJ(2));
t1224 = qJD(1) * t1142;
t1102 = t1138 * t1223 + t1139 * t1224;
t1141 = sin(qJ(4));
t1144 = cos(qJ(4));
t1069 = -t1144 * qJD(2) + t1141 * t1102;
t1071 = t1141 * qJD(2) + t1144 * t1102;
t1032 = t1071 * t1069;
t1129 = qJD(2) * t1223;
t1195 = t1142 * qJDD(1);
t1109 = t1129 + t1195;
t1182 = qJD(2) * t1224;
t1193 = t1145 * qJDD(1);
t1158 = -t1182 + t1193;
t1174 = t1138 * t1109 - t1139 * t1158;
t1167 = qJDD(4) + t1174;
t1271 = t1032 - t1167;
t1274 = t1271 * pkin(4);
t1100 = t1138 * t1224 - t1139 * t1223;
t1057 = t1102 * t1100;
t1265 = qJDD(2) - t1057;
t1273 = t1138 * t1265;
t1272 = t1139 * t1265;
t1231 = t1141 * t1271;
t1227 = t1144 * t1271;
t1136 = t1145 ^ 2;
t1147 = qJD(1) ^ 2;
t1133 = t1136 * t1147;
t1135 = t1142 ^ 2;
t1268 = t1135 * t1147;
t1114 = t1133 + t1268;
t1218 = qJD(5) * t1069;
t1061 = -0.2e1 * t1218;
t1058 = t1139 * t1109 + t1138 * t1158;
t1175 = -t1144 * qJDD(2) + t1141 * t1058;
t1005 = -t1071 * qJD(4) - t1175;
t1096 = qJD(4) + t1100;
t1040 = t1096 * pkin(4) - t1071 * qJ(5);
t1067 = t1069 ^ 2;
t1143 = sin(qJ(1));
t1146 = cos(qJ(1));
t1118 = t1143 * g(1) - t1146 * g(2);
t1244 = t1147 * pkin(6);
t1148 = -t1244 + qJDD(3) - t1058 * pkin(7) + t1174 * pkin(3) + (-t1145 * pkin(2) - pkin(1)) * qJDD(1) - t1114 * qJ(3) + (0.2e1 * pkin(2) * t1224 + t1102 * pkin(3) + t1100 * pkin(7)) * qJD(2) - t1118;
t1050 = t1100 * pkin(3) - t1102 * pkin(7);
t1264 = qJD(2) ^ 2;
t1220 = qJD(3) * t1100;
t1090 = -0.2e1 * t1220;
t1119 = t1146 * g(1) + t1143 * g(2);
t1154 = -t1147 * pkin(1) + qJDD(1) * pkin(6) - t1119;
t1083 = -t1142 * g(3) + t1145 * t1154;
t1126 = -t1133 - t1264;
t1024 = t1126 * pkin(2) + qJ(3) * t1193 + t1083;
t1152 = t1142 * t1154;
t1202 = t1142 * t1147;
t1225 = qJD(1) * qJD(2);
t1149 = -t1152 - t1109 * qJ(3) + qJDD(2) * pkin(2) + (pkin(2) * t1202 + qJ(3) * t1225 - g(3)) * t1145;
t1198 = t1139 * t1024 + t1138 * t1149;
t953 = t1090 + t1198;
t932 = -t1264 * pkin(3) + qJDD(2) * pkin(7) - t1100 * t1050 + t953;
t883 = t1141 * t1148 + t1144 * t932;
t1164 = t1067 * pkin(4) - t1005 * qJ(5) + t1096 * t1040 - t883;
t856 = t1061 - t1164;
t979 = (qJD(4) - t1096) * t1071 + t1175;
t1068 = t1071 ^ 2;
t999 = -t1067 - t1068;
t825 = -pkin(4) * t999 - qJ(5) * t979 + t856;
t1006 = -t1069 * qJD(4) + t1141 * qJDD(2) + t1144 * t1058;
t1048 = t1096 * t1069;
t882 = t1141 * t932 - t1144 * t1148;
t1153 = qJ(5) * t1048 + 0.2e1 * qJD(5) * t1071 + t1274 + t882;
t982 = t1006 + t1048;
t834 = (t1006 + t982) * qJ(5) + t1153;
t1270 = -t1141 * t834 - t1144 * t825;
t1095 = t1096 ^ 2;
t1014 = -t1068 - t1095;
t1176 = t1138 * t1024 - t1139 * t1149;
t1161 = -qJDD(2) * pkin(3) - t1264 * pkin(7) + t1176;
t1151 = -t1005 * pkin(4) - t1067 * qJ(5) + t1071 * t1040 + qJDD(5) + t1161;
t1181 = (0.2e1 * qJD(3) + t1050) * t1102;
t878 = t1181 + t1151;
t872 = -qJ(5) * t1014 + t878;
t1267 = t1006 - t1048;
t993 = t1032 + t1167;
t929 = -pkin(4) * t1267 - qJ(5) * t993;
t1269 = -t1141 * t872 - t1144 * t929;
t830 = t1141 * t882 + t1144 * t883;
t1098 = t1100 ^ 2;
t1099 = t1102 ^ 2;
t1002 = -t1095 - t1067;
t944 = t1144 * t1002 + t1231;
t978 = (qJD(4) + t1096) * t1071 + t1175;
t903 = t1138 * t944 - t1139 * t978;
t904 = t1138 * t978 + t1139 * t944;
t848 = t1142 * t904 + t1145 * t903;
t1263 = pkin(1) * t848;
t1219 = qJD(3) * t1102;
t952 = t1176 + 0.2e1 * t1219;
t899 = t1138 * t953 - t1139 * t952;
t1262 = pkin(2) * t899;
t1221 = qJD(2) * t1102;
t1035 = -t1174 + t1221;
t1094 = qJD(2) * t1100;
t1037 = t1094 + t1058;
t985 = t1138 * t1035 - t1139 * t1037;
t1261 = pkin(2) * t985;
t1051 = -t1098 - t1264;
t995 = t1138 * t1051 + t1272;
t1260 = pkin(2) * t995;
t918 = -t1141 * t979 - t1144 * t982;
t1259 = pkin(3) * t918;
t943 = t1141 * t1002 - t1227;
t1258 = pkin(3) * t943;
t1232 = t1141 * t993;
t949 = t1144 * t1014 - t1232;
t1257 = pkin(3) * t949;
t842 = t1006 * qJ(5) + t1153;
t1256 = pkin(4) * t842;
t1255 = pkin(4) * t982;
t920 = t1141 * t982 - t1144 * t979;
t895 = t1138 * t920 - t1139 * t999;
t896 = t1138 * t999 + t1139 * t920;
t841 = -t1142 * t895 + t1145 * t896;
t1254 = pkin(5) * (t1143 * t841 - t1146 * t918);
t849 = -t1142 * t903 + t1145 * t904;
t1253 = pkin(5) * (t1143 * t849 - t1146 * t943);
t1228 = t1144 * t993;
t950 = -t1141 * t1014 - t1228;
t909 = t1138 * t950 - t1139 * t1267;
t910 = t1138 * t1267 + t1139 * t950;
t853 = -t1142 * t909 + t1145 * t910;
t1252 = pkin(5) * (t1143 * t853 - t1146 * t949);
t840 = t1142 * t896 + t1145 * t895;
t1251 = pkin(6) * t840;
t1250 = pkin(6) * t848;
t852 = t1142 * t910 + t1145 * t909;
t1249 = pkin(6) * t852;
t1248 = pkin(7) * t918;
t1247 = pkin(7) * t943;
t1246 = pkin(7) * t949;
t1245 = pkin(3) * t1138;
t1243 = qJ(3) * t895;
t1242 = qJ(3) * t903;
t1241 = qJ(3) * t909;
t1240 = -pkin(1) * t918 + pkin(6) * t841;
t1239 = -pkin(1) * t943 + pkin(6) * t849;
t1238 = -pkin(1) * t949 + pkin(6) * t853;
t1237 = -pkin(3) * t999 + pkin(7) * t920;
t931 = t1181 + t1161;
t1236 = -pkin(3) * t931 + pkin(7) * t830;
t1235 = -pkin(3) * t978 + pkin(7) * t944;
t1234 = -pkin(3) * t1267 + pkin(7) * t950;
t1233 = t1141 * t842;
t926 = t1141 * t931;
t1230 = t1142 * t899;
t1229 = t1144 * t842;
t927 = t1144 * t931;
t1226 = t1145 * t899;
t1217 = t1096 * t1071;
t1216 = t1096 * t1141;
t1215 = t1096 * t1144;
t1214 = t1100 * t1138;
t1213 = t1100 * t1139;
t1212 = t1102 * t1138;
t1211 = t1102 * t1139;
t1110 = -0.2e1 * t1182 + t1193;
t1162 = qJDD(1) * pkin(1) + t1118;
t1030 = qJ(3) * t1268 - qJDD(3) + t1110 * pkin(2) + (t1136 * qJ(3) + pkin(6)) * t1147 + t1162;
t1209 = t1138 * t1030;
t1053 = qJDD(2) + t1057;
t1208 = t1138 * t1053;
t1207 = t1139 * t1030;
t1206 = t1139 * t1053;
t1104 = t1162 + t1244;
t1205 = t1142 * t1104;
t1127 = t1145 * t1202;
t1116 = qJDD(2) + t1127;
t1204 = t1142 * t1116;
t1117 = qJDD(2) - t1127;
t1203 = t1142 * t1117;
t1201 = t1145 * t1104;
t1072 = t1145 * t1110;
t1200 = t1145 * t1117;
t1197 = t1135 + t1136;
t1196 = qJDD(2) * t1146;
t1194 = t1143 * qJDD(1);
t1192 = t1146 * qJDD(1);
t1191 = t926 + t1234;
t1190 = -t927 + t1235;
t1189 = -pkin(3) * t1139 - pkin(2);
t1188 = -pkin(2) * t943 + qJ(3) * t904;
t1187 = -pkin(2) * t949 + qJ(3) * t910;
t1186 = t1143 * t1057;
t1185 = t1146 * t1057;
t1184 = t1138 * t1032;
t1183 = t1139 * t1032;
t900 = t1138 * t952 + t1139 * t953;
t1180 = t1237 - t1270;
t1179 = t1234 - t1269;
t1178 = t1237 + t830;
t902 = pkin(2) * t903;
t1177 = t902 + t1190;
t1082 = t1145 * g(3) + t1152;
t1027 = t1142 * t1082 + t1145 * t1083;
t1173 = -t1118 * t1143 - t1146 * t1119;
t811 = t1138 * t830 - t1139 * t931;
t1172 = pkin(2) * t811 + t1236;
t1171 = t1143 * t1127;
t1170 = t1146 * t1127;
t1088 = -t1099 - t1264;
t1010 = t1139 * t1088 - t1208;
t1169 = pkin(2) * t1010 - t1198;
t1113 = -t1143 * t1147 + t1192;
t1168 = -pkin(5) * t1113 - g(3) * t1143;
t894 = pkin(2) * t895;
t1166 = -pkin(1) * t840 - t1237 - t894;
t908 = pkin(2) * t909;
t1165 = -pkin(1) * t852 - t1234 - t908;
t829 = t1141 * t883 - t1144 * t882;
t1026 = t1145 * t1082 - t1142 * t1083;
t1163 = t1118 * t1146 - t1119 * t1143;
t807 = t1144 * t856 + t1233;
t814 = -pkin(4) * t878 + qJ(5) * t856;
t1160 = -pkin(3) * t878 + pkin(7) * t807 + qJ(5) * t1233 + t1144 * t814;
t1092 = -0.2e1 * t1219;
t854 = -pkin(4) * t978 + qJ(5) * t1002 - t1102 * t1050 + t1092 - t1151;
t1159 = qJ(5) * t1231 + t1144 * t854 + t1235;
t1157 = t1159 + t902;
t1156 = pkin(4) * t1014 + t1164;
t794 = t1138 * t807 - t1139 * t878;
t1155 = pkin(2) * t794 + t1160;
t1150 = -t842 - t1274;
t1130 = t1143 * qJDD(2);
t1125 = t1133 - t1264;
t1124 = -t1268 - t1264;
t1123 = -t1268 + t1264;
t1115 = -t1133 + t1268;
t1112 = t1146 * t1147 + t1194;
t1111 = t1197 * qJDD(1);
t1108 = 0.2e1 * t1129 + t1195;
t1106 = t1145 * t1116;
t1105 = t1197 * t1225;
t1097 = -pkin(5) * t1112 + t1146 * g(3);
t1087 = -t1099 + t1264;
t1086 = t1098 - t1264;
t1085 = t1145 * t1109 - t1135 * t1225;
t1084 = -t1136 * t1225 - t1142 * t1158;
t1081 = -t1142 * t1124 - t1200;
t1080 = -t1142 * t1123 + t1106;
t1079 = t1145 * t1126 - t1204;
t1078 = t1145 * t1125 - t1203;
t1077 = t1145 * t1124 - t1203;
t1076 = t1145 * t1123 + t1204;
t1075 = t1142 * t1126 + t1106;
t1074 = t1142 * t1125 + t1200;
t1073 = (t1109 + t1129) * t1142;
t1060 = -t1142 * t1108 + t1072;
t1059 = t1145 * t1108 + t1142 * t1110;
t1056 = t1098 - t1099;
t1047 = (t1212 - t1213) * qJD(2);
t1046 = (-t1211 - t1214) * qJD(2);
t1044 = -t1068 + t1095;
t1043 = t1067 - t1095;
t1042 = -pkin(6) * t1077 - t1201;
t1041 = -pkin(6) * t1075 - t1205;
t1039 = -pkin(1) * t1077 + t1083;
t1038 = -pkin(1) * t1075 + t1082;
t1036 = -t1094 + t1058;
t1033 = t1174 + t1221;
t1031 = -t1098 - t1099;
t1028 = t1068 - t1067;
t1023 = -qJD(2) * t1212 + t1139 * t1058;
t1022 = qJD(2) * t1211 + t1138 * t1058;
t1021 = qJD(2) * t1213 + t1138 * t1174;
t1020 = qJD(2) * t1214 - t1139 * t1174;
t1018 = pkin(1) * t1110 + pkin(6) * t1079 + t1201;
t1017 = -pkin(1) * t1108 + pkin(6) * t1081 - t1205;
t1013 = -t1138 * t1088 - t1206;
t1012 = -t1138 * t1087 + t1272;
t1011 = t1139 * t1086 - t1208;
t1009 = t1139 * t1087 + t1273;
t1008 = t1138 * t1086 + t1206;
t1000 = pkin(1) * t1104 + pkin(6) * t1027;
t998 = pkin(1) * t1114 + pkin(6) * t1111 + t1027;
t996 = t1139 * t1051 - t1273;
t991 = (-t1069 * t1144 + t1071 * t1141) * t1096;
t990 = (-t1069 * t1141 - t1071 * t1144) * t1096;
t989 = -t1142 * t1046 + t1145 * t1047;
t988 = t1145 * t1046 + t1142 * t1047;
t987 = t1139 * t1035 + t1138 * t1037;
t986 = -t1139 * t1033 - t1138 * t1036;
t984 = -t1138 * t1033 + t1139 * t1036;
t975 = t1144 * t1006 - t1071 * t1216;
t974 = t1141 * t1006 + t1071 * t1215;
t973 = -t1141 * t1005 + t1069 * t1215;
t972 = -t1144 * t1005 - t1069 * t1216;
t971 = -qJ(3) * t1010 - t1207;
t970 = -t1142 * t1022 + t1145 * t1023;
t969 = -t1142 * t1020 + t1145 * t1021;
t968 = t1145 * t1022 + t1142 * t1023;
t967 = t1145 * t1020 + t1142 * t1021;
t966 = -t1142 * t1010 + t1145 * t1013;
t965 = -t1142 * t1009 + t1145 * t1012;
t964 = -t1142 * t1008 + t1145 * t1011;
t963 = t1145 * t1010 + t1142 * t1013;
t962 = t1145 * t1009 + t1142 * t1012;
t961 = t1145 * t1008 + t1142 * t1011;
t960 = t1138 * t1167 + t1139 * t991;
t959 = t1138 * t991 - t1139 * t1167;
t958 = t1144 * t1043 - t1232;
t957 = -t1141 * t1044 - t1227;
t956 = t1141 * t1043 + t1228;
t955 = t1144 * t1044 - t1231;
t954 = -qJ(3) * t995 - t1209;
t940 = -t1142 * t995 + t1145 * t996;
t939 = t1142 * t996 + t1145 * t995;
t938 = -pkin(2) * t1036 + qJ(3) * t1013 - t1209;
t937 = t1139 * t975 + t1184;
t936 = t1139 * t973 - t1184;
t935 = t1138 * t975 - t1183;
t934 = t1138 * t973 + t1183;
t933 = -pkin(2) * t1033 + qJ(3) * t996 + t1207;
t924 = -t1142 * t985 + t1145 * t987;
t923 = -t1142 * t984 + t1145 * t986;
t922 = t1142 * t987 + t1145 * t985;
t921 = t1142 * t986 + t1145 * t984;
t919 = -t1141 * t1267 - t1144 * t978;
t917 = -t1141 * t978 + t1144 * t1267;
t914 = -t1138 * t979 + t1139 * t958;
t913 = t1138 * t982 + t1139 * t957;
t912 = t1138 * t958 + t1139 * t979;
t911 = t1138 * t957 - t1139 * t982;
t906 = -t1142 * t959 + t1145 * t960;
t905 = t1142 * t960 + t1145 * t959;
t898 = t1138 * t1028 + t1139 * t919;
t897 = -t1139 * t1028 + t1138 * t919;
t893 = qJ(3) * t896;
t892 = -pkin(1) * t922 - t1261;
t891 = -pkin(1) * t963 + t1090 - t1169;
t890 = pkin(2) * t1030 + qJ(3) * t900;
t889 = t1255 - t1259;
t888 = t927 - t1246;
t887 = -t1142 * t935 + t1145 * t937;
t886 = -t1142 * t934 + t1145 * t936;
t885 = t1142 * t937 + t1145 * t935;
t884 = t1142 * t936 + t1145 * t934;
t879 = t926 - t1247;
t876 = t1143 * t990 + t1146 * t906;
t875 = t1143 * t906 - t1146 * t990;
t874 = -pkin(1) * t939 - t1260 + t952;
t873 = -qJ(3) * t985 - t899;
t870 = -pkin(6) * t963 - t1142 * t938 + t1145 * t971;
t869 = -pkin(2) * t1031 + qJ(3) * t987 + t900;
t868 = t1143 * t974 + t1146 * t887;
t867 = -t1143 * t972 + t1146 * t886;
t866 = t1143 * t887 - t1146 * t974;
t865 = t1143 * t886 + t1146 * t972;
t864 = -pkin(1) * t1036 + pkin(6) * t966 + t1142 * t971 + t1145 * t938;
t863 = -pkin(6) * t939 - t1142 * t933 + t1145 * t954;
t862 = t883 - t1257;
t861 = -t1142 * t912 + t1145 * t914;
t860 = -t1142 * t911 + t1145 * t913;
t859 = t1142 * t914 + t1145 * t912;
t858 = t1142 * t913 + t1145 * t911;
t857 = t882 - t1258;
t855 = -pkin(1) * t1033 + pkin(6) * t940 + t1142 * t954 + t1145 * t933;
t846 = t1145 * t900 - t1230;
t845 = t1142 * t900 + t1226;
t844 = -t1142 * t897 + t1145 * t898;
t843 = t1142 * t898 + t1145 * t897;
t838 = t1143 * t956 + t1146 * t861;
t837 = t1143 * t955 + t1146 * t860;
t836 = t1143 * t861 - t1146 * t956;
t835 = t1143 * t860 - t1146 * t955;
t831 = pkin(5) * (t1143 * t949 + t1146 * t853);
t826 = pkin(5) * (t1143 * t943 + t1146 * t849);
t823 = t1061 - t1156 - t1257;
t822 = -t1141 * t929 + t1144 * t872 - t1246;
t821 = qJ(5) * t1227 - t1141 * t854 - t1247;
t820 = t1143 * t917 + t1146 * t844;
t819 = t1143 * t844 - t1146 * t917;
t818 = -t1150 - t1258;
t817 = -pkin(1) * t845 - t1262;
t815 = pkin(5) * (t1143 * t918 + t1146 * t841);
t812 = t1138 * t931 + t1139 * t830;
t810 = -t829 - t1248;
t809 = -pkin(6) * t922 - t1142 * t869 + t1145 * t873;
t808 = -pkin(1) * t1031 + pkin(6) * t924 + t1142 * t873 + t1145 * t869;
t806 = t1141 * t856 - t1229;
t804 = -t1138 * t862 + t1139 * t888 - t1241;
t803 = -t1138 * t857 + t1139 * t879 - t1242;
t802 = -pkin(6) * t845 - qJ(3) * t1226 - t1142 * t890;
t801 = pkin(1) * t1030 + pkin(6) * t846 - qJ(3) * t1230 + t1145 * t890;
t800 = t1165 - t926;
t799 = t1138 * t888 + t1139 * t862 + t1187;
t798 = -t1177 - t1263;
t797 = t1138 * t879 + t1139 * t857 + t1188;
t796 = t1139 * t810 + t918 * t1245 - t1243;
t795 = t1138 * t878 + t1139 * t807;
t793 = -t1141 * t825 + t1144 * t834 - t1248;
t792 = -pkin(3) * t806 + t1256;
t791 = t1165 + t1269;
t790 = t1138 * t810 + t1189 * t918 + t893;
t789 = -t1157 - t1263;
t788 = -t1138 * t823 + t1139 * t822 - t1241;
t787 = -t1142 * t811 + t1145 * t812;
t786 = t1142 * t812 + t1145 * t811;
t785 = -t1138 * t818 + t1139 * t821 - t1242;
t784 = t1166 - t830;
t783 = t1138 * t822 + t1139 * t823 + t1187;
t782 = t1138 * t821 + t1139 * t818 + t1188;
t781 = -t1138 * t889 + t1139 * t793 - t1243;
t780 = -qJ(3) * t811 + (-pkin(7) * t1139 + t1245) * t829;
t779 = -pkin(2) * t918 + t1138 * t793 + t1139 * t889 + t893;
t778 = -pkin(7) * t806 + qJ(5) * t1229 - t1141 * t814;
t777 = t1166 + t1270;
t776 = -t1142 * t799 + t1145 * t804 - t1249;
t775 = -t1142 * t794 + t1145 * t795;
t774 = t1142 * t795 + t1145 * t794;
t773 = -t1142 * t797 + t1145 * t803 - t1250;
t772 = qJ(3) * t812 + (-pkin(7) * t1138 + t1189) * t829;
t771 = t1142 * t804 + t1145 * t799 + t1238;
t770 = t1142 * t803 + t1145 * t797 + t1239;
t769 = -pkin(1) * t786 - t1172;
t768 = -t1142 * t790 + t1145 * t796 - t1251;
t767 = t1142 * t796 + t1145 * t790 + t1240;
t766 = -t1142 * t783 + t1145 * t788 - t1249;
t765 = t1142 * t788 + t1145 * t783 + t1238;
t764 = -t1142 * t782 + t1145 * t785 - t1250;
t763 = t1142 * t785 + t1145 * t782 + t1239;
t762 = -t1142 * t779 + t1145 * t781 - t1251;
t761 = t1142 * t781 + t1145 * t779 + t1240;
t760 = -qJ(3) * t794 - t1138 * t792 + t1139 * t778;
t759 = -pkin(2) * t806 + qJ(3) * t795 + t1138 * t778 + t1139 * t792;
t758 = -pkin(6) * t786 - t1142 * t772 + t1145 * t780;
t757 = -pkin(1) * t774 - t1155;
t756 = -pkin(1) * t829 + pkin(6) * t787 + t1142 * t780 + t1145 * t772;
t755 = -pkin(6) * t774 - t1142 * t759 + t1145 * t760;
t754 = -pkin(1) * t806 + pkin(6) * t775 + t1142 * t760 + t1145 * t759;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1113, 0, -t1112, 0, t1168, -t1097, -t1163, -pkin(5) * t1163, t1085 * t1146 - t1171, t1060 * t1146 + t1115 * t1143, t1080 * t1146 + t1142 * t1194, t1084 * t1146 + t1171, t1078 * t1146 + t1143 * t1193, t1105 * t1146 + t1130, t1146 * t1041 - t1143 * t1038 - pkin(5) * (t1079 * t1143 + t1110 * t1146), t1146 * t1042 - t1143 * t1039 - pkin(5) * (t1081 * t1143 - t1108 * t1146), t1146 * t1026 - pkin(5) * (t1111 * t1143 + t1114 * t1146), -pkin(5) * (t1027 * t1143 + t1104 * t1146) - (pkin(1) * t1143 - pkin(6) * t1146) * t1026, t1146 * t970 + t1186, -t1056 * t1143 + t1146 * t923, t1037 * t1143 + t1146 * t965, t1146 * t969 - t1186, t1035 * t1143 + t1146 * t964, t1146 * t989 + t1130, t1146 * t863 - t1143 * t874 - pkin(5) * (-t1033 * t1146 + t1143 * t940), t1146 * t870 - t1143 * t891 - pkin(5) * (-t1036 * t1146 + t1143 * t966), t1146 * t809 - t1143 * t892 - pkin(5) * (-t1031 * t1146 + t1143 * t924), t1146 * t802 - t1143 * t817 - pkin(5) * (t1030 * t1146 + t1143 * t846), t868, t820, t837, t867, t838, t876, -t1143 * t798 + t1146 * t773 - t1253, -t1143 * t800 + t1146 * t776 - t1252, -t1143 * t784 + t1146 * t768 - t1254, t1146 * t758 - t1143 * t769 - pkin(5) * (t1143 * t787 - t1146 * t829), t868, t820, t837, t867, t838, t876, -t1143 * t789 + t1146 * t764 - t1253, -t1143 * t791 + t1146 * t766 - t1252, -t1143 * t777 + t1146 * t762 - t1254, t1146 * t755 - t1143 * t757 - pkin(5) * (t1143 * t775 - t1146 * t806); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1112, 0, t1113, 0, t1097, t1168, t1173, pkin(5) * t1173, t1085 * t1143 + t1170, t1060 * t1143 - t1115 * t1146, t1080 * t1143 - t1142 * t1192, t1084 * t1143 - t1170, t1078 * t1143 - t1145 * t1192, t1105 * t1143 - t1196, t1143 * t1041 + t1146 * t1038 + pkin(5) * (t1079 * t1146 - t1110 * t1143), t1143 * t1042 + t1146 * t1039 + pkin(5) * (t1081 * t1146 + t1108 * t1143), t1143 * t1026 + pkin(5) * (t1111 * t1146 - t1114 * t1143), pkin(5) * (t1027 * t1146 - t1104 * t1143) - (-pkin(1) * t1146 - pkin(6) * t1143) * t1026, t1143 * t970 - t1185, t1056 * t1146 + t1143 * t923, -t1037 * t1146 + t1143 * t965, t1143 * t969 + t1185, -t1035 * t1146 + t1143 * t964, t1143 * t989 - t1196, t1143 * t863 + t1146 * t874 + pkin(5) * (t1033 * t1143 + t1146 * t940), t1143 * t870 + t1146 * t891 + pkin(5) * (t1036 * t1143 + t1146 * t966), t1143 * t809 + t1146 * t892 + pkin(5) * (t1031 * t1143 + t1146 * t924), t1143 * t802 + t1146 * t817 + pkin(5) * (-t1030 * t1143 + t1146 * t846), t866, t819, t835, t865, t836, t875, t1143 * t773 + t1146 * t798 + t826, t1143 * t776 + t1146 * t800 + t831, t1143 * t768 + t1146 * t784 + t815, t1143 * t758 + t1146 * t769 + pkin(5) * (t1143 * t829 + t1146 * t787), t866, t819, t835, t865, t836, t875, t1143 * t764 + t1146 * t789 + t826, t1143 * t766 + t1146 * t791 + t831, t1143 * t762 + t1146 * t777 + t815, t1143 * t755 + t1146 * t757 + pkin(5) * (t1143 * t806 + t1146 * t775); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1118, t1119, 0, 0, t1073, t1059, t1076, t1072, t1074, 0, t1018, t1017, t998, t1000, t968, t921, t962, t967, t961, t988, t855, t864, t808, t801, t885, t843, t858, t884, t859, t905, t770, t771, t767, t756, t885, t843, t858, t884, t859, t905, t763, t765, t761, t754; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1147, 0, 0, -g(3), -t1118, 0, t1085, t1060, t1080, t1084, t1078, t1105, t1041, t1042, t1026, pkin(6) * t1026, t970, t923, t965, t969, t964, t989, t863, t870, t809, t802, t887, t844, t860, t886, t861, t906, t773, t776, t768, t758, t887, t844, t860, t886, t861, t906, t764, t766, t762, t755; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1147, 0, qJDD(1), 0, g(3), 0, -t1119, 0, t1127, -t1115, -t1195, -t1127, -t1193, -qJDD(2), t1038, t1039, 0, pkin(1) * t1026, -t1057, t1056, -t1037, t1057, -t1035, -qJDD(2), t874, t891, t892, t817, -t974, -t917, -t955, t972, -t956, -t990, t798, t800, t784, t769, -t974, -t917, -t955, t972, -t956, -t990, t789, t791, t777, t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1118, t1119, 0, 0, t1073, t1059, t1076, t1072, t1074, 0, t1018, t1017, t998, t1000, t968, t921, t962, t967, t961, t988, t855, t864, t808, t801, t885, t843, t858, t884, t859, t905, t770, t771, t767, t756, t885, t843, t858, t884, t859, t905, t763, t765, t761, t754; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1109, t1110, t1116, -t1129, t1125, t1129, 0, -t1104, t1082, 0, t1023, t986, t1012, t1021, t1011, t1047, t954, t971, t873, -qJ(3) * t899, t937, t898, t913, t936, t914, t960, t803, t804, t796, t780, t937, t898, t913, t936, t914, t960, t785, t788, t781, t760; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1182, t1108, t1123, t1158, t1117, -t1182, t1104, 0, t1083, 0, t1022, t984, t1009, t1020, t1008, t1046, t933, t938, t869, t890, t935, t897, t911, t934, t912, t959, t797, t799, t790, t772, t935, t897, t911, t934, t912, t959, t782, t783, t779, t759; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1127, t1115, t1195, t1127, t1193, qJDD(2), -t1082, -t1083, 0, 0, t1057, -t1056, t1037, -t1057, t1035, qJDD(2), t1092 - t1176 + t1260, t1169 + 0.2e1 * t1220, t1261, t1262, t974, t917, t955, -t972, t956, t990, t1177, t908 + t1191, t894 + t1178, t1172, t974, t917, t955, -t972, t956, t990, t1157, t908 + t1179, t894 + t1180, t1155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1058, -t1033, t1265, t1094, t1086, -t1094, 0, -t1030, t952, 0, t975, t919, t957, t973, t958, t991, t879, t888, t810, -pkin(7) * t829, t975, t919, t957, t973, t958, t991, t821, t822, t793, t778; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1221, t1036, t1087, -t1174, t1053, -t1221, t1030, 0, t953, 0, -t1032, -t1028, -t982, t1032, t979, -t1167, t857, t862, -t1259, -pkin(3) * t829, -t1032, -t1028, -t982, t1032, t979, -t1167, t818, t823, t889, t792; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1057, -t1056, t1037, -t1057, t1035, qJDD(2), -t952, -t953, 0, 0, t974, t917, t955, -t972, t956, t990, t1190, t1191, t1178, t1236, t974, t917, t955, -t972, t956, t990, t1159, t1179, t1180, t1160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1006, -t978, -t1271, t1048, t1043, -t1048, 0, t931, t882, 0, t1006, -t978, -t1271, t1048, t1043, -t1048, qJ(5) * t1271, t872, t834, qJ(5) * t842; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1217, t1267, t1044, t1005, t993, -t1217, -t931, 0, t883, 0, t1217, t1267, t1044, t1005, t993, -t1217, t854, t929, t825, t814; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1032, t1028, t982, -t1032, -t979, t1167, -t882, -t883, 0, 0, t1032, t1028, t982, -t1032, -t979, t1167, t1150, t1156 + 0.2e1 * t1218, -t1255, -t1256; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1006, -t978, -t1271, t1048, t1043, -t1048, 0, t878, t842, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1217, t1267, t1044, t1005, t993, -t1217, -t878, 0, t856, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1032, t1028, t982, -t1032, -t979, t1167, -t842, -t856, 0, 0;];
m_new_reg = t1;
