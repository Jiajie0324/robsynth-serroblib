% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:59
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:58:33
% EndTime: 2019-12-31 19:58:41
% DurationCPUTime: 5.29s
% Computational Cost: add. (6054->372), mult. (12020->489), div. (0->0), fcn. (12760->6), ass. (0->315)
t272 = sin(qJ(2));
t425 = -qJ(3) - pkin(6);
t252 = t425 * t272;
t274 = cos(qJ(2));
t253 = t425 * t274;
t270 = sin(pkin(8));
t411 = cos(pkin(8));
t192 = -t252 * t411 - t253 * t270;
t273 = cos(qJ(4));
t440 = t192 * t273;
t443 = t440 / 0.2e1;
t271 = sin(qJ(4));
t441 = t192 * t271;
t442 = t441 / 0.2e1;
t250 = t411 * t253;
t378 = t270 * t252;
t437 = -t250 + t378;
t397 = t437 * t271;
t396 = t437 * t273;
t304 = t411 * t272;
t377 = t270 * t274;
t247 = t304 + t377;
t375 = t271 * t273;
t323 = t247 * t375;
t303 = 0.2e1 * t323;
t245 = t270 * t272 - t274 * t411;
t429 = t245 * pkin(4);
t374 = t273 * qJ(5);
t265 = -pkin(2) * t274 - pkin(1);
t283 = pkin(3) * t245 - pkin(7) * t247 + t265;
t95 = -t273 * t283 + t397;
t73 = t247 * t374 + t95;
t60 = -t73 + t429;
t439 = t60 + t73;
t340 = t247 * qJD(1);
t229 = t273 * t340;
t335 = t271 * qJD(2);
t205 = t229 + t335;
t242 = t245 ^ 2;
t243 = t247 ^ 2;
t438 = -t243 - t242;
t329 = t243 - t242;
t427 = t272 * pkin(2);
t165 = pkin(3) * t247 + pkin(7) * t245 + t427;
t137 = t271 * t165;
t362 = -t137 / 0.2e1 + t443;
t238 = t304 / 0.2e1 + t377 / 0.2e1;
t436 = pkin(4) / 0.2e1;
t138 = t273 * t165;
t101 = t138 + t441;
t164 = t273 * t245;
t428 = t247 * pkin(4);
t61 = qJ(5) * t164 + t101 + t428;
t435 = t61 / 0.2e1;
t433 = -t245 / 0.2e1;
t269 = t273 ^ 2;
t432 = -t269 / 0.2e1;
t431 = -t271 / 0.2e1;
t430 = pkin(4) * t243;
t426 = t273 * pkin(4);
t162 = t271 * t247;
t96 = t271 * t283 + t396;
t74 = -qJ(5) * t162 + t96;
t415 = t74 * t273;
t419 = t60 * t271;
t424 = -t419 / 0.2e1 + t415 / 0.2e1;
t423 = qJD(2) * pkin(2);
t159 = t271 * t245;
t123 = -pkin(4) * t159 + t437;
t124 = pkin(4) * t162 + t192;
t102 = -t440 + t137;
t80 = qJ(5) * t159 + t102;
t3 = t123 * t124 + t60 * t61 + t74 * t80;
t422 = t3 * qJD(1);
t324 = t73 / 0.2e1 + t60 / 0.2e1;
t325 = t429 / 0.2e1;
t290 = t325 + t324;
t4 = t290 * t273;
t421 = t4 * qJD(1);
t418 = t60 * t273;
t297 = t271 * t74 + t418;
t413 = t80 * t271;
t417 = t61 * t273;
t6 = (t413 + t417) * t247 - t297 * t245;
t420 = t6 * qJD(1);
t7 = t439 * t162;
t416 = t7 * qJD(1);
t384 = t247 * t273;
t8 = pkin(4) * t124 * t384 - t439 * t74;
t414 = t8 * qJD(1);
t9 = t290 * t271;
t412 = t9 * qJD(1);
t410 = t101 * t273;
t409 = t102 * t271;
t403 = t124 * t271;
t406 = t123 * t271;
t11 = (t60 + t406) * t247 + (t61 - t403) * t245;
t408 = t11 * qJD(1);
t12 = (t409 + t410) * t247 + (-t271 * t96 + t273 * t95) * t245;
t407 = t12 * qJD(1);
t405 = t123 * t273;
t404 = t124 * t247;
t402 = t124 * t273;
t13 = -t101 * t95 + t102 * t96 + t192 * t437;
t401 = t13 * qJD(1);
t14 = (-t74 + t405) * t247 + (-t80 - t402) * t245;
t400 = t14 * qJD(1);
t264 = -pkin(2) * t411 - pkin(3);
t251 = t264 - t426;
t310 = t247 * t251 / 0.2e1;
t263 = pkin(2) * t270 + pkin(7);
t363 = qJ(5) + t263;
t239 = t363 * t273;
t386 = t239 * t273;
t237 = t363 * t271;
t389 = t237 * t271;
t276 = (-t386 / 0.2e1 - t389 / 0.2e1) * t245 + t310;
t289 = -t417 / 0.2e1 - t413 / 0.2e1;
t18 = t276 + t289;
t399 = t18 * qJD(1);
t19 = t404 + (-t415 + t419) * t245;
t398 = t19 * qJD(1);
t394 = t192 * t247;
t21 = (-t95 + t397) * t247 + (t101 - t441) * t245;
t391 = t21 * qJD(1);
t22 = (-t96 + t396) * t247 + (-t102 - t440) * t245;
t390 = t22 * qJD(1);
t388 = t237 * t273;
t387 = t239 * t271;
t385 = t247 * t264;
t25 = t297 * t247;
t383 = t25 * qJD(1);
t382 = t251 * t271;
t381 = t251 * t273;
t380 = t263 * t245;
t268 = t271 ^ 2;
t379 = t268 * t247;
t28 = t394 + (-t271 * t95 - t273 * t96) * t245;
t373 = t28 * qJD(1);
t278 = (t432 - t268 / 0.2e1) * t380 + t385 / 0.2e1;
t288 = -t410 / 0.2e1 - t409 / 0.2e1;
t30 = t278 + t288;
t372 = t30 * qJD(1);
t31 = -t74 * t245 + (t271 * t430 + t404) * t273;
t371 = t31 * qJD(1);
t32 = -t124 * t162 + t245 * t73 + t269 * t430;
t370 = t32 * qJD(1);
t45 = -t162 * t192 + t245 * t95;
t368 = t45 * qJD(1);
t46 = t192 * t384 - t245 * t96;
t367 = t46 * qJD(1);
t47 = t265 * t427;
t366 = t47 * qJD(1);
t365 = t74 * qJD(4);
t81 = -t245 * t437 + t394;
t364 = t81 * qJD(1);
t361 = t138 / 0.2e1 + t442;
t257 = t268 + t269;
t258 = t269 - t268;
t360 = qJD(1) * t274;
t359 = qJD(4) * t271;
t267 = qJD(4) * t273;
t308 = t247 * t432;
t300 = -t379 / 0.2e1 + t308;
t112 = t300 - t238;
t358 = t112 * qJD(1);
t116 = t329 * t271;
t357 = t116 * qJD(1);
t117 = t438 * t271;
t356 = t117 * qJD(1);
t118 = t329 * t273;
t355 = t118 * qJD(1);
t282 = t270 * t433 - t411 * t247 / 0.2e1;
t128 = (-t272 / 0.2e1 + t282) * pkin(2);
t354 = t128 * qJD(1);
t353 = t329 * qJD(1);
t135 = t245 * t427 + t247 * t265;
t352 = t135 * qJD(1);
t136 = -t245 * t265 + t247 * t427;
t351 = t136 * qJD(1);
t305 = t268 / 0.2e1 + t432;
t158 = t305 * t247;
t350 = t158 * qJD(4);
t349 = t159 * qJD(1);
t348 = t162 * qJD(1);
t150 = t164 * qJD(1);
t234 = t268 * t245;
t235 = t269 * t245;
t166 = t234 + t235;
t347 = t166 * qJD(1);
t167 = t257 * t243;
t346 = t167 * qJD(1);
t169 = t438 * t273;
t91 = t169 * qJD(1);
t345 = t438 * qJD(1);
t344 = t238 * qJD(1);
t343 = t239 * qJD(4);
t342 = t245 * qJD(1);
t341 = t245 * qJD(3);
t339 = t247 * qJD(2);
t338 = t247 * qJD(3);
t337 = t257 * qJD(2);
t259 = -t272 ^ 2 + t274 ^ 2;
t336 = t259 * qJD(1);
t334 = t271 * qJD(5);
t333 = t272 * qJD(2);
t332 = t273 * qJD(2);
t331 = t273 * qJD(5);
t330 = t274 * qJD(2);
t328 = pkin(1) * t272 * qJD(1);
t327 = pkin(1) * t360;
t326 = pkin(4) * t359;
t322 = t247 * t359;
t321 = t247 * t267;
t320 = t245 * t340;
t188 = t245 * t339;
t260 = t271 * t267;
t319 = t271 * t340;
t318 = t247 * t334;
t317 = t271 * t332;
t316 = t272 * t330;
t315 = t273 * t342;
t314 = t273 * t341;
t313 = t273 * t338;
t312 = t247 * t331;
t311 = -t403 / 0.2e1;
t309 = -t381 / 0.2e1;
t307 = qJ(5) * t431;
t306 = t164 / 0.2e1;
t180 = t245 * t229;
t100 = qJD(2) * t159 + t180;
t302 = t271 * t325;
t301 = t243 * t260;
t299 = qJD(2) * t303;
t298 = t180 + t321;
t284 = t247 * t309 + t311;
t1 = t324 * t239 + (t435 + t284) * pkin(4);
t86 = pkin(4) * t382;
t296 = -qJD(1) * t1 + qJD(2) * t86;
t295 = -t101 * t271 + t102 * t273;
t294 = -t245 * t264 - t247 * t263;
t152 = t386 + t389;
t277 = (-t387 / 0.2e1 + t388 / 0.2e1) * t247 + t424;
t279 = t250 / 0.2e1 - t378 / 0.2e1 + t302;
t16 = t277 + t279;
t293 = qJD(1) * t16 + qJD(2) * t152;
t207 = pkin(4) * t375 - t382;
t23 = t311 + (t374 / 0.2e1 + t239 / 0.2e1) * t245 + (t309 + (0.1e1 - t305) * pkin(4)) * t247 + t361;
t292 = -qJD(1) * t23 - qJD(2) * t207;
t219 = t268 * pkin(4) + t381;
t280 = -pkin(4) * t323 - t402 / 0.2e1 + t271 * t310;
t26 = (t307 - t237 / 0.2e1) * t245 + t280 + t362;
t291 = -qJD(1) * t26 + qJD(2) * t219;
t287 = t380 / 0.2e1 - t385 / 0.2e1;
t281 = t287 * t273;
t43 = -t138 / 0.2e1 - t281;
t286 = -qJD(1) * t43 - t264 * t335;
t275 = t287 * t271 + t443;
t41 = t275 - t362;
t285 = -qJD(1) * t41 - t264 * t332;
t75 = (-qJD(4) - t342) * t162;
t122 = -qJD(1) * t158 + t317;
t203 = t319 - t332;
t119 = qJD(4) * t238 + t320;
t103 = qJD(1) * t243 * t375 + qJD(2) * t158;
t168 = t258 * t243;
t107 = qJD(1) * t168 + t299;
t181 = qJD(1) * t303 - qJD(2) * t258;
t261 = t272 * t360;
t254 = t258 * qJD(4);
t236 = t245 * qJD(2);
t231 = t238 * qJD(2);
t228 = t247 * t332;
t204 = -t267 - t315;
t196 = t205 * pkin(4);
t157 = t169 * qJD(3);
t155 = t166 * qJD(3);
t153 = t166 * qJD(2);
t147 = t162 * qJD(3);
t144 = t159 * qJD(3);
t141 = t159 * qJD(4);
t127 = t427 / 0.2e1 + t282 * pkin(2);
t126 = t267 + t150;
t125 = -t349 - t359;
t113 = t117 * qJD(3);
t111 = t300 + t238;
t109 = -t188 * t269 - t301;
t108 = -t188 * t268 + t301;
t105 = 0.2e1 * t273 * t75;
t99 = t269 * t320 - t350;
t98 = -qJD(2) * t164 + t245 * t319;
t97 = t268 * t320 + t350;
t94 = -qJD(4) * t168 + t245 * t299;
t83 = qJD(2) * t118 - t245 * t322;
t82 = -qJD(2) * t116 - t245 * t321;
t79 = qJD(4) * t164 - t355;
t77 = -t141 + t357;
t72 = -t350 + (-t269 * t340 - t317) * t245;
t71 = t350 + (-t268 * t340 + t317) * t245;
t70 = (t234 - t235) * qJD(2) + (-qJD(4) + t342) * t303;
t68 = -qJD(2) * t162 - t245 * t267 + t91;
t55 = t247 * t335 + t355;
t54 = t228 - t357;
t53 = -t141 + t228 + t356;
t44 = t442 - t281 + t361;
t42 = t275 + t362;
t29 = t278 - t288;
t27 = -t280 + t362 + (t237 / 0.2e1 + t307) * t245;
t24 = pkin(4) * t308 + qJ(5) * t306 + t239 * t433 + t379 * t436 - t284 + t361 + t428;
t17 = t276 - t289;
t15 = t277 - t279;
t10 = t73 * t431 - t415 / 0.2e1 + t302 + t424;
t5 = -t73 * t273 / 0.2e1 - t418 / 0.2e1 + pkin(4) * t306;
t2 = pkin(4) * t435 + t310 * t426 + t403 * t436 - t439 * t239 / 0.2e1;
t20 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, t259 * qJD(2), 0, -t316, 0, 0, -pkin(1) * t333, -pkin(1) * t330, 0, 0, -t188, -t329 * qJD(2), 0, t188, 0, 0, t135 * qJD(2), t136 * qJD(2), -t438 * qJD(3), qJD(2) * t47 + qJD(3) * t81, t109, t94, t83, t108, t82, t188, qJD(2) * t21 + qJD(4) * t46 - t113, qJD(2) * t22 + qJD(4) * t45 - t157, -t12 * qJD(2), qJD(2) * t13 + qJD(3) * t28, t109, t94, t83, t108, t82, t188, qJD(2) * t11 + qJD(4) * t31 - t245 * t312 - t113, qJD(2) * t14 + qJD(4) * t32 + t245 * t318 - t157, -qJD(2) * t6 + qJD(4) * t7 + qJD(5) * t167, qJD(2) * t3 + qJD(3) * t19 + qJD(4) * t8 - qJD(5) * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, t336, t330, -t261, -t333, 0, -pkin(6) * t330 - t328, pkin(6) * t333 - t327, 0, 0, -t320, -t353, -t236, t320, -t339, 0, -qJD(2) * t437 + t352, qJD(2) * t192 + t351, (t245 * t411 - t247 * t270) * t423, t366 + (-t192 * t270 - t411 * t437) * t423 + t127 * qJD(3), t72, t70, t55, t71, t54, t119, t391 + (t271 * t294 - t396) * qJD(2) + t44 * qJD(4), t390 + (t273 * t294 + t397) * qJD(2) + t42 * qJD(4), qJD(2) * t295 - t407, t401 + (t263 * t295 + t264 * t437) * qJD(2) + t29 * qJD(3), t72, t70, t55, t71, t54, t119, t408 + (-t159 * t251 - t237 * t247 - t405) * qJD(2) + t24 * qJD(4) - t159 * qJD(5), t400 + (-t164 * t251 - t239 * t247 + t406) * qJD(2) + t27 * qJD(4) - t245 * t331, -t420 + (-t61 * t271 + t80 * t273 + (t387 - t388) * t245) * qJD(2) + t5 * qJD(4), t422 + (t123 * t251 - t237 * t61 + t239 * t80) * qJD(2) + t17 * qJD(3) + t2 * qJD(4) + t15 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, qJD(2) * t127 + t364, 0, 0, 0, 0, 0, 0, -t356, -t91, 0, qJD(2) * t29 + t373, 0, 0, 0, 0, 0, 0, -t356, -t91, 0, qJD(2) * t17 + qJD(4) * t10 + qJD(5) * t111 + t398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, -t107, t75, t103, -t298, t231, qJD(2) * t44 - qJD(4) * t96 + t367, qJD(2) * t42 + qJD(4) * t95 + t368, 0, 0, -t103, -t107, t75, t103, -t298, t231, qJD(2) * t24 - t365 + t371, qJD(2) * t27 + qJD(4) * t73 + t370, pkin(4) * t322 + qJD(2) * t5 + t416, -pkin(4) * t365 + qJD(2) * t2 + qJD(3) * t10 + t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t100, t203 * t245, t346, qJD(2) * t15 + qJD(3) * t111 - t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t261, -t336, 0, t261, 0, 0, t328, t327, 0, 0, t320, t353, 0, -t320, 0, 0, -t338 - t352, t341 - t351, 0, qJD(3) * t128 - t366, t99, t105, t79, t97, t77, -t119, qJD(4) * t43 - t313 - t391, qJD(4) * t41 + t147 - t390, -t155 + t407, qJD(3) * t30 - t401, t99, t105, t79, t97, t77, -t119, -qJD(4) * t23 - t313 - t408, -qJD(4) * t26 + t147 - t400, -qJD(4) * t4 - t155 + t420, qJD(3) * t18 - qJD(4) * t1 + qJD(5) * t16 - t422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, t254, 0, -t260, 0, 0, t264 * t359, t264 * t267, 0, 0, t260, t254, 0, -t260, 0, 0, -t207 * qJD(4), t219 * qJD(4), t257 * qJD(5), qJD(4) * t86 + qJD(5) * t152; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t340, t342, 0, t354, 0, 0, 0, 0, 0, 0, -t229, t348, -t347, t372, 0, 0, 0, 0, 0, 0, -t229, t348, -t347, t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, -t181, t126, -t122, t125, -t344, -t263 * t267 - t286, t263 * t359 - t285, 0, 0, t122, -t181, t126, -t122, t125, -t344, t292 - t343, qJD(4) * t237 + t291, -pkin(4) * t267 - t421, -pkin(4) * t343 + t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t337, t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t339, -t236, t345, -qJD(2) * t128 - t364, 0, 0, 0, 0, 0, 0, t53, t68, t153, -qJD(2) * t30 - t373, 0, 0, 0, 0, 0, 0, t53, t68, t153, -qJD(2) * t18 - qJD(4) * t9 + qJD(5) * t112 - t398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340, -t342, 0, -t354, 0, 0, 0, 0, 0, 0, t229, -t348, t347, -t372, 0, 0, 0, 0, 0, 0, t229, -t348, t347, -t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, t204, 0, 0, 0, 0, 0, 0, 0, 0, t125, t204, 0, -t326 - t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, t107, t98, -t103, t100, t231, -qJD(2) * t43 + t144 - t367, -qJD(2) * t41 + t314 - t368, 0, 0, t103, t107, t98, -t103, t100, t231, qJD(2) * t23 + t144 - t312 - t371, qJD(2) * t26 + t314 + t318 - t370, qJD(2) * t4 - t416, -pkin(4) * t312 + qJD(2) * t1 + qJD(3) * t9 - t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t122, t181, -t150, t122, t349, t344, t286, t285, 0, 0, -t122, t181, -t150, t122, t349, t344, -t292 - t334, -t291 - t331, t421, -pkin(4) * t334 - t296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t349, t315, 0, 0, 0, 0, 0, 0, 0, 0, t349, t315, 0, t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t205, t203, 0, -t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t75, -t346, pkin(4) * t321 - qJD(2) * t16 - qJD(3) * t112 + t383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t359, t267, -t337, -t293 + t326; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205, -t203, 0, t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t20;
