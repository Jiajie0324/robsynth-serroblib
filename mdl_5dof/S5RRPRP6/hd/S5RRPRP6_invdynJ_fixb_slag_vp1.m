% Calculate vector of inverse dynamics joint torques for
% S5RRPRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:59
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRPRP6_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP6_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP6_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRP6_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRP6_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP6_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRPRP6_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRPRP6_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRPRP6_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:56:46
% EndTime: 2019-12-31 19:58:26
% DurationCPUTime: 88.24s
% Computational Cost: add. (28454->1186), mult. (41417->1501), div. (0->0), fcn. (38293->8), ass. (0->563)
t1122 = -Icges(5,4) - Icges(6,4);
t1047 = Icges(5,1) + Icges(6,1);
t1118 = Icges(5,5) + Icges(6,5);
t1073 = -Icges(5,2) - Icges(6,2);
t1072 = Icges(5,6) + Icges(6,6);
t1121 = Icges(3,3) + Icges(4,3);
t524 = qJ(2) + pkin(8);
t503 = sin(t524);
t504 = cos(t524);
t530 = sin(qJ(2));
t533 = cos(qJ(2));
t1082 = Icges(3,5) * t533 + Icges(4,5) * t504 - Icges(3,6) * t530 - Icges(4,6) * t503;
t532 = cos(qJ(4));
t1120 = t1122 * t532;
t529 = sin(qJ(4));
t1119 = t1122 * t529;
t1117 = Icges(5,3) + Icges(6,3);
t1116 = -t1072 * t529 + t1118 * t532;
t1115 = t1073 * t529 - t1120;
t1114 = t1047 * t532 + t1119;
t534 = cos(qJ(1));
t1113 = t1121 * t534;
t531 = sin(qJ(1));
t830 = t531 * t533;
t833 = t530 * t531;
t837 = t504 * t531;
t841 = t503 * t531;
t1083 = -Icges(3,5) * t830 - Icges(4,5) * t837 + Icges(3,6) * t833 + Icges(4,6) * t841 + t1113;
t1101 = t1082 * t534 + t1121 * t531;
t867 = Icges(4,6) * t534;
t312 = Icges(4,4) * t837 - Icges(4,2) * t841 - t867;
t868 = Icges(3,6) * t534;
t334 = Icges(3,4) * t830 - Icges(3,2) * t833 - t868;
t1112 = t312 * t503 + t334 * t530;
t452 = Icges(4,4) * t841;
t873 = Icges(4,5) * t534;
t314 = Icges(4,1) * t837 - t452 - t873;
t481 = Icges(3,4) * t833;
t874 = Icges(3,5) * t534;
t336 = Icges(3,1) * t830 - t481 - t874;
t1058 = -t314 * t504 - t336 * t533 + t1112;
t1014 = -t1058 * t531 + t1083 * t534;
t881 = Icges(4,4) * t503;
t408 = Icges(4,1) * t504 - t881;
t315 = Icges(4,5) * t531 + t408 * t534;
t882 = Icges(3,4) * t530;
t443 = Icges(3,1) * t533 - t882;
t337 = Icges(3,5) * t531 + t443 * t534;
t1111 = -t315 * t837 - t337 * t830;
t1110 = t1116 * t504 + t1117 * t503;
t1084 = -t1072 * t504 + t1115 * t503;
t1002 = t1072 * t503 + t1115 * t504;
t1062 = t1114 * t503 - t1118 * t504;
t1001 = t1114 * t504 + t1118 * t503;
t1109 = (-t1072 * t532 - t1118 * t529) * t503;
t1108 = (t1073 * t532 + t1119) * t503;
t1107 = (-t1047 * t529 + t1120) * t503;
t1106 = Icges(3,5) * t530 + Icges(4,5) * t503 + Icges(3,6) * t533 + Icges(4,6) * t504;
t826 = t534 * t529;
t831 = t531 * t532;
t385 = -t504 * t826 + t831;
t829 = t532 * t534;
t834 = t529 * t531;
t386 = t504 * t829 + t834;
t840 = t503 * t534;
t178 = Icges(6,5) * t386 + Icges(6,6) * t385 + Icges(6,3) * t840;
t181 = Icges(5,5) * t386 + Icges(5,6) * t385 + Icges(5,3) * t840;
t1065 = t178 + t181;
t352 = Icges(6,4) * t385;
t190 = Icges(6,1) * t386 + Icges(6,5) * t840 + t352;
t355 = Icges(5,4) * t385;
t193 = Icges(5,1) * t386 + Icges(5,5) * t840 + t355;
t1085 = t190 + t193;
t877 = Icges(6,4) * t386;
t184 = Icges(6,2) * t385 + Icges(6,6) * t840 + t877;
t880 = Icges(5,4) * t386;
t187 = Icges(5,2) * t385 + Icges(5,6) * t840 + t880;
t1086 = t184 + t187;
t1019 = t1065 * t840 + t1085 * t386 + t1086 * t385;
t384 = t504 * t831 - t826;
t351 = Icges(6,4) * t384;
t383 = t504 * t834 + t829;
t182 = -Icges(6,2) * t383 + Icges(6,6) * t841 + t351;
t354 = Icges(5,4) * t384;
t185 = -Icges(5,2) * t383 + Icges(5,6) * t841 + t354;
t1087 = t182 + t185;
t350 = Icges(6,4) * t383;
t189 = -Icges(6,1) * t384 - Icges(6,5) * t841 + t350;
t353 = Icges(5,4) * t383;
t192 = -Icges(5,1) * t384 - Icges(5,5) * t841 + t353;
t973 = t189 + t192;
t176 = Icges(6,5) * t384 - Icges(6,6) * t383 + Icges(6,3) * t841;
t179 = Icges(5,5) * t384 - Icges(5,6) * t383 + Icges(5,3) * t841;
t975 = t176 + t179;
t1020 = t1087 * t385 - t386 * t973 + t840 * t975;
t766 = qJD(4) * t503;
t768 = qJD(2) * t531;
t399 = t534 * t766 + t768;
t767 = qJD(2) * t534;
t400 = -t531 * t766 + t767;
t765 = qJD(4) * t504;
t466 = qJD(1) - t765;
t1064 = t1116 * t503 - t1117 * t504;
t977 = t1062 * t386 + t1064 * t840 + t1084 * t385;
t1026 = t1019 * t399 - t1020 * t400 + t466 * t977;
t1021 = t1065 * t841 + t1085 * t384 - t1086 * t383;
t1022 = -t1087 * t383 - t384 * t973 + t841 * t975;
t978 = t1062 * t384 + t1064 * t841 - t1084 * t383;
t1027 = t1021 * t399 - t1022 * t400 + t978 * t466;
t405 = Icges(4,2) * t504 + t881;
t486 = Icges(4,4) * t504;
t407 = Icges(4,1) * t503 + t486;
t440 = Icges(3,2) * t533 + t882;
t515 = Icges(3,4) * t533;
t442 = Icges(3,1) * t530 + t515;
t1080 = t405 * t503 - t407 * t504 + t440 * t530 - t442 * t533;
t1100 = t1101 * t534 + t1111;
t828 = t533 * t534;
t835 = t504 * t534;
t955 = -t1101 * t531 - t315 * t835 - t337 * t828;
t1099 = t1083 * t531 - t314 * t835 - t336 * t828;
t644 = -Icges(4,2) * t503 + t486;
t313 = Icges(4,6) * t531 + t534 * t644;
t645 = -Icges(3,2) * t530 + t515;
t335 = Icges(3,6) * t531 + t534 * t645;
t1098 = t313 * t503 + t335 * t530;
t614 = t532 * t466;
t694 = qJD(1) * t504 - qJD(4);
t728 = t503 * t767;
t948 = t531 * t694 + t728;
t160 = t529 * t948 + t534 * t614;
t613 = t466 * t529;
t161 = -t532 * t948 + t534 * t613;
t727 = t504 * t767;
t771 = qJD(1) * t531;
t732 = t503 * t771;
t584 = t727 - t732;
t85 = Icges(6,5) * t161 + Icges(6,6) * t160 + Icges(6,3) * t584;
t87 = Icges(5,5) * t161 + Icges(5,6) * t160 + Icges(5,3) * t584;
t1096 = t85 + t87;
t729 = t503 * t768;
t162 = t531 * t614 + (-t534 * t694 + t729) * t529;
t769 = qJD(2) * t503;
t163 = t694 * t829 + (-t532 * t769 + t613) * t531;
t770 = qJD(1) * t534;
t585 = t503 * t770 + t504 * t768;
t86 = Icges(6,5) * t163 + Icges(6,6) * t162 + Icges(6,3) * t585;
t88 = Icges(5,5) * t163 + Icges(5,6) * t162 + Icges(5,3) * t585;
t1095 = t86 + t88;
t89 = Icges(6,4) * t161 + Icges(6,2) * t160 + Icges(6,6) * t584;
t91 = Icges(5,4) * t161 + Icges(5,2) * t160 + Icges(5,6) * t584;
t1094 = t89 + t91;
t90 = Icges(6,4) * t163 + Icges(6,2) * t162 + Icges(6,6) * t585;
t92 = Icges(5,4) * t163 + Icges(5,2) * t162 + Icges(5,6) * t585;
t1093 = t90 + t92;
t93 = Icges(6,1) * t161 + Icges(6,4) * t160 + Icges(6,5) * t584;
t95 = Icges(5,1) * t161 + Icges(5,4) * t160 + Icges(5,5) * t584;
t1092 = t93 + t95;
t94 = Icges(6,1) * t163 + Icges(6,4) * t162 + Icges(6,5) * t585;
t96 = Icges(5,1) * t163 + Icges(5,4) * t162 + Icges(5,5) * t585;
t1091 = t94 + t96;
t1013 = -t313 * t841 - t335 * t833 - t1100;
t832 = t530 * t534;
t1012 = -t312 * t840 - t334 * t832 - t1099;
t1011 = -t313 * t840 - t335 * t832 - t955;
t1008 = t312 * t504 + t314 * t503 + t334 * t533 + t336 * t530;
t1007 = t313 * t504 + t315 * t503 + t335 * t533 + t337 * t530;
t1090 = qJD(2) * t1110 + qJD(4) * t1109;
t1089 = qJD(2) * t1002 + qJD(4) * t1108;
t1088 = qJD(2) * t1001 + qJD(4) * t1107;
t1081 = t1106 * qJD(2);
t1079 = -t405 * t504 - t407 * t503 - t440 * t533 - t442 * t530;
t1078 = t315 * t504 + t337 * t533 - t1098;
t1077 = t1062 * t532 - t1084 * t529;
t988 = t1106 * t534;
t987 = t1106 * t531;
t761 = qJD(5) * t534;
t444 = t503 * t761;
t491 = t504 * pkin(3);
t672 = t384 * rSges(6,1) - t383 * rSges(6,2);
t498 = pkin(4) * t532 + pkin(3);
t411 = t498 * t837;
t753 = pkin(4) * t826;
t682 = -t411 + t753;
t527 = -qJ(5) - pkin(7);
t912 = pkin(7) + t527;
t982 = t503 * t912;
t824 = (t491 + t982) * t531 + t682 - rSges(6,3) * t841 - t672;
t1076 = t466 * t824 + t444;
t1010 = -t1080 * t531 - t988;
t1009 = -t1080 * t534 + t987;
t1071 = t1101 * qJD(1);
t675 = t384 * rSges(5,1) - t383 * rSges(5,2);
t197 = -rSges(5,3) * t841 - t675;
t908 = rSges(5,1) * t532;
t674 = -rSges(5,2) * t529 + t908;
t302 = -rSges(5,3) * t504 + t503 * t674;
t1070 = t197 * t466 - t302 * t400;
t1069 = t534 ^ 2;
t1033 = t1087 * t160 + t1091 * t386 + t1093 * t385 + t1095 * t840 - t161 * t973 + t584 * t975;
t1032 = t1065 * t584 + t1085 * t161 + t1086 * t160 + t1092 * t386 + t1094 * t385 + t1096 * t840;
t1031 = t1087 * t162 + t1091 * t384 - t1093 * t383 + t1095 * t841 - t163 * t973 + t585 * t975;
t1030 = t1065 * t585 + t1085 * t163 + t1086 * t162 + t1092 * t384 - t1094 * t383 + t1096 * t841;
t986 = t1062 * t161 + t1064 * t584 + t1084 * t160 + t1088 * t386 + t1089 * t385 + t1090 * t840;
t1068 = t1062 * t163 + t1064 * t585 + t1084 * t162 + t1088 * t384 - t1089 * t383 + t1090 * t841;
t634 = -t182 * t529 - t189 * t532;
t73 = -t176 * t504 + t503 * t634;
t632 = -t185 * t529 - t192 * t532;
t75 = -t179 * t504 + t503 * t632;
t1067 = t73 + t75;
t633 = -t184 * t529 + t190 * t532;
t74 = -t178 * t504 + t503 * t633;
t631 = -t187 * t529 + t193 * t532;
t76 = -t181 * t504 + t503 * t631;
t1066 = t74 + t76;
t976 = -t1064 * t504 + t1077 * t503;
t388 = t644 * qJD(2);
t389 = t408 * qJD(2);
t417 = t645 * qJD(2);
t418 = t443 * qJD(2);
t1061 = qJD(1) * t1106 + t1079 * qJD(2) - t388 * t503 + t389 * t504 - t417 * t530 + t418 * t533;
t590 = qJD(2) * t405;
t170 = -t534 * t590 + (-t531 * t644 + t867) * qJD(1);
t592 = qJD(2) * t407;
t172 = -t534 * t592 + (-t408 * t531 + t873) * qJD(1);
t591 = qJD(2) * t440;
t228 = -t534 * t591 + (-t531 * t645 + t868) * qJD(1);
t593 = qJD(2) * t442;
t230 = -t534 * t593 + (-t443 * t531 + t874) * qJD(1);
t1060 = -qJD(2) * t1007 - t170 * t503 + t172 * t504 - t228 * t530 + t230 * t533 + t1071;
t171 = qJD(1) * t313 - t531 * t590;
t173 = qJD(1) * t315 - t531 * t592;
t229 = qJD(1) * t335 - t531 * t591;
t231 = qJD(1) * t337 - t531 * t593;
t1059 = qJD(1) * t1083 + qJD(2) * t1008 + t171 * t503 - t173 * t504 + t229 * t530 - t231 * t533;
t1057 = t1011 * t531 - t1012 * t534;
t1056 = t1013 * t531 - t1014 * t534;
t1055 = (-t1077 + t1110) * t466 + (t1064 * t531 + t632 + t634) * t400 + (-t1064 * t534 - t631 - t633) * t399;
t1054 = t1080 * qJD(1) + qJD(2) * t1082;
t1053 = qJD(1) * t1058 - t1081 * t531 + t1071;
t1052 = -t1081 * t534 + (-t1082 * t531 - t1078 + t1113) * qJD(1);
t965 = (t1073 * t384 - t350 - t353 - t973) * t400 - (t1073 * t386 + t1085 + t352 + t355) * t399 - (t1062 + t1108) * t466;
t1051 = rSges(6,1) + pkin(4);
t409 = rSges(4,1) * t503 + rSges(4,2) * t504;
t360 = t409 * t531;
t516 = t531 * rSges(4,3);
t489 = t504 * rSges(4,1);
t967 = -rSges(4,2) * t503 + t489;
t175 = -qJD(2) * t360 + (t534 * t967 + t516) * qJD(1);
t390 = t967 * qJD(2);
t758 = qJD(1) * qJD(2);
t429 = -qJDD(2) * t534 + t531 * t758;
t757 = qJD(1) * qJD(3);
t921 = pkin(2) * t530;
t735 = qJDD(3) * t531 + t429 * t921 + t534 * t757;
t316 = rSges(4,1) * t837 - rSges(4,2) * t841 - t534 * rSges(4,3);
t522 = t534 * pkin(6);
t463 = pkin(1) * t531 - t522;
t528 = -qJ(3) - pkin(6);
t496 = t534 * t528;
t521 = t533 * pkin(2);
t499 = t521 + pkin(1);
t779 = -t531 * t499 - t496;
t308 = t463 + t779;
t802 = t308 - t463;
t736 = -t316 + t802;
t827 = t533 * qJD(2) ^ 2;
t752 = pkin(2) * t827;
t520 = t531 * pkin(6);
t755 = pkin(2) * t833;
t777 = qJD(2) * t755 + qJD(3) * t534;
t733 = t528 * t771 + t777;
t914 = pkin(1) - t499;
t223 = (-t534 * t914 - t520) * qJD(1) - t733;
t464 = t534 * pkin(1) + t520;
t423 = t464 * qJD(1);
t816 = -t223 - t423;
t52 = t409 * t429 + (-qJD(2) * t390 - t752) * t534 + t736 * qJDD(1) + (-t175 + t816) * qJD(1) + t735;
t1050 = t52 - g(1);
t1049 = (qJD(2) * t1077 - t1090) * t504 + (t1088 * t532 - t1089 * t529 + (-t1062 * t529 - t1084 * t532) * qJD(4) + t1064 * qJD(2)) * t503;
t1048 = rSges(6,3) - t527;
t1046 = t1009 * qJD(1);
t1045 = -t1109 * t466 + (-t1072 * t384 - t1118 * t383) * t400 + (t1072 * t386 - t1118 * t385) * t399;
t1043 = t1010 * qJD(1);
t1042 = t779 - t672;
t428 = qJDD(2) * t531 + t534 * t758;
t756 = qJDD(4) * t503;
t220 = qJD(4) * t584 + t534 * t756 + t428;
t221 = qJD(4) * t585 + t531 * t756 + t429;
t382 = qJD(2) * t766 - qJDD(4) * t504 + qJDD(1);
t1036 = t1019 * t220 + t1020 * t221 + t1032 * t399 - t1033 * t400 + t382 * t977 + t466 * t986;
t1035 = t1021 * t220 + t1022 * t221 + t1030 * t399 - t1031 * t400 + t1068 * t466 + t382 * t978;
t17 = (qJD(2) * t634 - t86) * t504 + (qJD(2) * t176 - t529 * t90 + t532 * t94 + (-t182 * t532 + t189 * t529) * qJD(4)) * t503;
t19 = (qJD(2) * t632 - t88) * t504 + (qJD(2) * t179 - t529 * t92 + t532 * t96 + (-t185 * t532 + t192 * t529) * qJD(4)) * t503;
t1029 = t17 + t19;
t18 = (qJD(2) * t633 - t85) * t504 + (qJD(2) * t178 - t529 * t89 + t532 * t93 + (-t184 * t532 - t190 * t529) * qJD(4)) * t503;
t20 = (qJD(2) * t631 - t87) * t504 + (qJD(2) * t181 - t529 * t91 + t532 * t95 + (-t187 * t532 - t193 * t529) * qJD(4)) * t503;
t1028 = t18 + t20;
t1025 = t1066 * t399 - t1067 * t400 + t466 * t976;
t1024 = qJD(2) * t1056 + t1043;
t1023 = qJD(2) * t1057 + t1046;
t1018 = t1054 * t531 + t1061 * t534;
t1017 = -t1054 * t534 + t1061 * t531;
t1016 = t1058 * qJD(2) - t171 * t504 - t173 * t503 - t229 * t533 - t231 * t530;
t1015 = qJD(2) * t1078 + t170 * t504 + t172 * t503 + t228 * t533 + t230 * t530;
t1006 = t1084 * t531;
t1005 = t1084 * t534;
t1004 = t1062 * t531;
t1003 = t1062 * t534;
t487 = t503 * rSges(6,3);
t1000 = -t504 * t498 - t487;
t999 = t1055 * t503;
t572 = t334 * t534 - t335 * t531;
t573 = t312 * t534 - t313 * t531;
t939 = t531 * (-t405 * t534 + t315) - t534 * (-Icges(4,2) * t837 + t314 - t452);
t940 = t531 * (-t440 * t534 + t337) - t534 * (-Icges(3,2) * t830 + t336 - t481);
t998 = -t503 * t939 + t573 * t504 - t530 * t940 + t572 * t533;
t780 = t442 + t645;
t781 = -t440 + t443;
t788 = t407 + t644;
t789 = -t405 + t408;
t997 = (-t503 * t788 + t504 * t789 - t530 * t780 + t533 * t781) * qJD(1);
t996 = t1064 * t466 + t1065 * t399 - t400 * t975;
t962 = t1066 * t534 + t1067 * t531;
t995 = t1066 * t531 - t1067 * t534;
t961 = t1019 * t534 + t1020 * t531;
t994 = t1019 * t531 - t1020 * t534;
t960 = t1021 * t534 + t1022 * t531;
t993 = t1021 * t531 - t1022 * t534;
t992 = t1053 * t1069 + (t1060 * t531 + (-t1052 + t1059) * t534) * t531;
t991 = t1059 * t1069 + (t1052 * t531 + (-t1053 + t1060) * t534) * t531;
t470 = pkin(3) * t835;
t379 = pkin(7) * t840 + t470;
t414 = pkin(3) * t503 - pkin(7) * t504;
t696 = t534 * t499 - t528 * t531;
t309 = t696 - t464;
t799 = t309 + t464;
t571 = (t379 + t799) * qJD(1) - t414 * t768 - t777;
t762 = qJD(5) * t531;
t722 = t503 * t762;
t907 = rSges(6,1) * t532;
t671 = -rSges(6,2) * t529 + t907;
t980 = t504 * t912;
t913 = pkin(3) - t498;
t981 = t503 * t913;
t813 = -rSges(6,3) * t504 + t503 * t671 + t980 - t981;
t972 = t386 * rSges(6,1) + t385 * rSges(6,2) + pkin(4) * t834 + t1048 * t840 + t498 * t835;
t823 = -t379 + t972;
t45 = -t399 * t813 + t466 * t823 + t571 + t722;
t703 = t45 * t813;
t966 = t503 * pkin(7) + t491;
t377 = t966 * t531;
t808 = -t308 * t768 + t309 * t767;
t692 = t377 * t768 + t379 * t767 + t808;
t763 = qJD(5) * t504;
t33 = -t399 * t824 + t400 * t823 + t692 - t763;
t705 = t33 * t824;
t990 = t703 + t705;
t989 = t1082 * qJD(1);
t587 = -t409 - t921;
t979 = t534 * t587;
t437 = pkin(7) * t727;
t586 = -t504 * t771 - t728;
t224 = pkin(3) * t586 - pkin(7) * t732 + t437;
t971 = qJD(1) * t224 + qJDD(1) * t379;
t432 = qJD(1) * t463;
t970 = qJD(1) * t308 - t432;
t836 = t504 * t532;
t838 = t504 * t529;
t842 = t503 * t527;
t969 = rSges(6,1) * t836 - rSges(6,2) * t838 - t1000 - t842;
t968 = t967 + t521;
t964 = (-t1084 + t1107) * t466 + (t1047 * t383 + t1087 + t351 + t354) * t400 + (t1047 * t385 - t1086 - t877 - t880) * t399;
t963 = t1045 * t503;
t904 = pkin(4) * qJD(4);
t747 = t532 * t904;
t957 = t161 * rSges(6,1) + t160 * rSges(6,2) + rSges(6,3) * t727 + qJD(1) * t753 + t527 * t732 + t531 * t747 + t444;
t956 = t1083 + t1098;
t952 = t1049 * t466 + t382 * t976;
t676 = rSges(5,1) * t163 + rSges(5,2) * t162;
t100 = rSges(5,3) * t585 + t676;
t359 = (-rSges(5,1) * t529 - rSges(5,2) * t532) * t503;
t488 = t503 * rSges(5,3);
t165 = qJD(4) * t359 + (t504 * t674 + t488) * qJD(2);
t391 = t966 * qJD(2);
t734 = -t377 + t802;
t567 = qJDD(1) * t734 + t429 * t414 + t735;
t436 = pkin(3) * t729;
t225 = pkin(7) * t585 + qJD(1) * t470 - t436;
t737 = -t225 + t816;
t21 = -t100 * t466 - t165 * t400 + t197 * t382 + t221 * t302 + (-qJD(2) * t391 - t752) * t534 + t737 * qJD(1) + t567;
t199 = t386 * rSges(5,1) + t385 * rSges(5,2) + rSges(5,3) * t840;
t502 = pkin(6) * t770;
t507 = qJD(3) * t531;
t726 = t530 * t767;
t611 = -pkin(2) * t726 + t507;
t222 = -t502 + (t531 * t914 - t496) * qJD(1) + t611;
t787 = qJD(1) * (-pkin(1) * t771 + t502) + qJDD(1) * t464;
t650 = qJD(1) * t222 + qJDD(1) * t309 + t531 * t757 + t787;
t542 = (-t428 * t530 - t531 * t827) * pkin(2) - qJDD(3) * t534 + t650;
t740 = t161 * rSges(5,1) + t160 * rSges(5,2) + rSges(5,3) * t727;
t98 = -rSges(5,3) * t732 + t740;
t22 = -t165 * t399 + t199 * t382 - t220 * t302 - t391 * t768 - t428 * t414 + t466 * t98 + t542 + t971;
t951 = t21 * t531 - t22 * t534;
t917 = g(2) * t531;
t950 = g(1) * t534 + t917;
t919 = g(1) * t531;
t949 = -g(2) * t534 + t919;
t739 = t222 * t767 + t223 * t768 - t428 * t308;
t800 = t309 + t379;
t558 = t224 * t767 + t225 * t768 + t428 * t377 - t429 * t800 + t739;
t764 = qJD(5) * t503;
t580 = -t504 * t913 - t982;
t673 = rSges(6,1) * t163 + rSges(6,2) * t162;
t843 = t498 * t503;
t910 = -rSges(6,3) * t585 - t673 - t436 - (qJD(1) * t580 - t747) * t534 - (t764 + pkin(4) * t613 + (-t843 - t980) * qJD(2)) * t531;
t748 = t529 * t904;
t911 = -t437 + (pkin(7) * t771 + t767 * t913) * t503 + ((-qJD(2) * t527 - t748) * t534 + t913 * t771) * t504 - rSges(6,3) * t732 + t957;
t5 = qJD(2) * t764 - qJDD(5) * t504 - t220 * t824 - t221 * t823 - t399 * t910 + t400 * t911 + t558;
t941 = t33 * t911 + t5 * t823;
t936 = t220 / 0.2e1;
t935 = t221 / 0.2e1;
t934 = t382 / 0.2e1;
t933 = -t399 / 0.2e1;
t932 = t399 / 0.2e1;
t931 = -t400 / 0.2e1;
t930 = t400 / 0.2e1;
t929 = t428 / 0.2e1;
t928 = t429 / 0.2e1;
t927 = -t466 / 0.2e1;
t926 = t466 / 0.2e1;
t924 = t531 / 0.2e1;
t923 = -t534 / 0.2e1;
t922 = -rSges(5,3) - pkin(7);
t920 = pkin(4) * t529;
t909 = rSges(3,1) * t533;
t905 = rSges(6,2) * t532;
t903 = t17 * t400;
t902 = t18 * t399;
t901 = t19 * t400;
t900 = t20 * t399;
t517 = t531 * rSges(3,3);
t68 = t199 * t466 - t302 * t399 + t571;
t893 = t531 * t68;
t892 = t73 * t221;
t891 = t74 * t220;
t890 = t75 * t221;
t889 = t76 * t220;
t583 = qJD(2) * t979 + t507;
t114 = qJD(1) * t736 + t583;
t858 = t114 * t409;
t446 = rSges(3,1) * t530 + rSges(3,2) * t533;
t730 = t446 * t767;
t776 = rSges(3,2) * t833 + t534 * rSges(3,3);
t374 = rSges(3,1) * t830 - t776;
t791 = -t374 - t463;
t206 = qJD(1) * t791 - t730;
t857 = t206 * t531;
t856 = t206 * t534;
t375 = rSges(3,1) * t828 - rSges(3,2) * t832 + t517;
t283 = t375 + t464;
t207 = qJD(1) * t283 - t446 * t768;
t402 = t446 * t534;
t855 = t207 * t402;
t839 = t504 * t527;
t358 = (-rSges(6,1) * t529 - t905) * t503;
t825 = qJD(4) * t358 - t503 * t748 - t763 + (t504 * t671 + t487 + t580) * qJD(2);
t467 = pkin(7) * t837;
t595 = -t839 + t981;
t744 = t503 * t831;
t746 = t503 * t834;
t786 = rSges(6,2) * t746 + rSges(6,3) * t837;
t818 = -rSges(6,1) * t744 + t531 * t595 - t467 + t786;
t815 = -t384 * rSges(6,2) - t1051 * t383;
t814 = -t386 * rSges(6,2) + t1051 * t385;
t812 = t966 - t969;
t807 = -t531 * t308 + t534 * t309;
t317 = rSges(4,1) * t835 - rSges(4,2) * t840 + t516;
t801 = -t309 - t317;
t376 = -pkin(3) * t841 + t467;
t469 = pkin(7) * t835;
t378 = -pkin(3) * t840 + t469;
t796 = t376 * t768 + t378 * t767;
t731 = t530 * t771;
t476 = pkin(2) * t731;
t790 = t414 * t771 + t476;
t785 = rSges(5,2) * t746 + rSges(5,3) * t837;
t745 = t503 * t826;
t784 = rSges(6,2) * t745 + rSges(6,3) * t835;
t783 = rSges(5,2) * t745 + rSges(5,3) * t835;
t782 = rSges(4,2) * t732 + rSges(4,3) * t770;
t778 = rSges(3,2) * t731 + rSges(3,3) * t770;
t754 = pkin(2) * t832;
t749 = qJD(2) * t521;
t743 = t503 * t829;
t738 = t534 * t222 + t531 * t223 - t308 * t770;
t725 = t533 * t767;
t718 = -pkin(1) - t909;
t715 = t770 / 0.2e1;
t713 = -t768 / 0.2e1;
t712 = t768 / 0.2e1;
t711 = -t767 / 0.2e1;
t710 = t767 / 0.2e1;
t706 = -t414 - t921;
t582 = t706 * t767 + t507;
t550 = qJD(1) * t734 + t582;
t44 = -t400 * t813 + t1076 + t550;
t704 = t44 * t813;
t702 = (-t531 ^ 2 - t1069) * t530;
t695 = -qJD(1) * t376 + t476;
t691 = t531 * t377 + t534 * t379 + t807;
t683 = t503 * t920 - t358;
t681 = -t302 + t706;
t680 = -t391 - t749;
t449 = rSges(2,1) * t534 - rSges(2,2) * t531;
t447 = rSges(2,1) * t531 + rSges(2,2) * t534;
t448 = -rSges(3,2) * t530 + t909;
t670 = -t839 - t921;
t667 = t44 * t534 + t45 * t531;
t67 = t1070 + t550;
t655 = t534 * t67 + t893;
t174 = rSges(4,1) * t586 - rSges(4,2) * t727 + t782;
t635 = t174 * t534 + t175 * t531;
t630 = -t197 * t534 - t199 * t531;
t629 = -t207 * t531 - t856;
t232 = -rSges(3,2) * t725 + (-t533 * t771 - t726) * rSges(3,1) + t778;
t401 = t446 * t531;
t233 = -qJD(2) * t401 + (t448 * t534 + t517) * qJD(1);
t628 = t232 * t534 + t233 * t531;
t623 = t316 * t531 + t317 * t534;
t620 = t374 * t531 + t375 * t534;
t615 = t706 - t813;
t612 = (t378 - t754) * qJD(1);
t304 = rSges(5,1) * t836 - rSges(5,2) * t838 + t488;
t610 = -t165 + t680;
t608 = t503 * t922 - t491;
t607 = t534 * t224 + t531 * t225 + t377 * t770 + t738;
t606 = -t499 + t1000;
t594 = t680 - t825;
t581 = -t33 * t910 - t5 * t824;
t575 = t44 * t824 + t45 * t823;
t574 = -t33 * t823 + t704;
t556 = -qJD(1) * t377 + t582 + t970;
t555 = -t752 + qJDD(5) * t503 + (-t391 + t763) * qJD(2);
t54 = -t197 * t399 + t199 * t400 + t692;
t549 = t54 * t630 + (t531 * t67 - t534 * t68) * t302;
t541 = t574 * t531 - t534 * t990;
t420 = t448 * qJD(2);
t361 = t409 * t534;
t268 = -rSges(5,1) * t743 + t783;
t266 = -rSges(5,1) * t744 + t785;
t249 = rSges(5,1) * t385 - rSges(5,2) * t386;
t247 = -rSges(5,1) * t383 - rSges(5,2) * t384;
t200 = t620 * qJD(2);
t115 = -t409 * t768 + (t317 + t799) * qJD(1) - t777;
t109 = qJD(2) * t623 + t808;
t102 = qJD(1) * t232 + qJDD(1) * t375 - t420 * t768 - t428 * t446 + t787;
t101 = -t420 * t767 + t429 * t446 + t791 * qJDD(1) + (-t233 - t423) * qJD(1);
t53 = qJD(1) * t174 + qJDD(1) * t317 - t390 * t768 - t409 * t428 + t542;
t8 = t100 * t399 - t197 * t220 - t199 * t221 + t400 * t98 + t558;
t7 = t910 * t466 - t825 * t400 + t824 * t382 + t813 * t221 + t555 * t534 + (-t722 + t737) * qJD(1) + t567;
t6 = (qJD(1) * t764 - qJDD(3)) * t534 + t911 * t466 + t706 * t428 - t825 * t399 + t823 * t382 - t813 * t220 + t555 * t531 + t650 + t971;
t1 = [(t1068 + t1026) * t931 + (-(-qJD(1) * t374 - t206 - t432 - t730) * t207 + t207 * (t502 + t778) + (t446 * t857 - t855) * qJD(2) + ((-pkin(1) - t448) * t856 + (t206 * (-rSges(3,3) - pkin(6)) + t207 * t718) * t531) * qJD(1) + (t102 - g(2)) * t283 + (t101 - g(1)) * (t718 * t531 + t522 + t776)) * m(3) + (t975 * t504 + (t1087 * t529 + t532 * t973) * t503 + t1067) * t399 * t927 + (((t534 * t956 + t1011 + t955) * t534 + (t531 * t956 + t1012 + t1100) * t531) * qJD(2) + t1024 - t1043) * t713 + (-g(1) * (-t1048 * t841 + t1042 + t682) - (-t44 + t556 + t1076) * t45 + t703 * t400 + t7 * (-t411 + t1042) + t44 * (-t673 + t733) + t45 * (t507 + t957) + (t45 * (t670 - t843) * qJD(2) + (t529 * t7 + (t44 * t532 - t45 * t838) * qJD(4)) * pkin(4) + (t44 * (t606 + t842) - t45 * t528) * qJD(1)) * t534 + (t44 * (-qJD(2) * t1048 + t748) * t504 + (-t7 * t1048 + t44 * (qJD(2) * t498 - qJD(5))) * t503 + (-t44 * t920 + t45 * t606) * qJD(1)) * t531 + (-g(2) + t6) * (t696 + t972)) * m(6) + t891 / 0.2e1 + t892 / 0.2e1 + t889 / 0.2e1 + t890 / 0.2e1 + ((((t1101 + t1112) * t534 + t1013 + t1099 + t1111) * t534 - t955 * t531) * qJD(2) + t1046) * t710 + (t1007 + t1009) * t929 + t977 * t936 + t978 * t935 + (t114 * t733 + t115 * (t507 + t782) + (t115 * t979 + t531 * t858) * qJD(2) + ((-t114 * rSges(4,3) + t115 * (-t499 - t489)) * t531 + (t114 * (-t499 - t967) - t115 * t528) * t534) * qJD(1) - (-qJD(1) * t316 - t114 + t583 + t970) * t115 + (t53 - g(2)) * (t317 + t696) + t1050 * (-t316 + t779)) * m(4) + t1026 * t930 - t901 / 0.2e1 + t902 / 0.2e1 - t903 / 0.2e1 + t900 / 0.2e1 + t952 + (t1008 + t1010) * t928 + (-(t1070 + t556 - t67) * t68 - t608 * t919 + t67 * (t436 - t676 + t733) + t68 * (-pkin(3) * t728 + t437 + t611 + t740) + (qJD(2) * t504 * t67 * t922 + t21 * t608) * t531 + ((-t499 + t608) * t893 + (t67 * (-t499 - t966 - t488) - t68 * t528) * t534) * qJD(1) + (-g(2) + t22) * (t696 + t199 + t379) + (-g(1) + t21) * (-t675 + t779)) * m(5) + (m(2) * (t447 ^ 2 + t449 ^ 2) + Icges(2,3) - t1079) * qJDD(1) + (-t1080 * qJD(2) + t388 * t504 + t389 * t503 + t417 * t533 + t418 * t530) * qJD(1) + t986 * t932 - m(2) * (-g(1) * t447 + g(2) * t449) + (t1015 + t1018) * t712 + (-t1016 + t1017 + t1023) * t711; -((t573 * t503 + t504 * t939 + t572 * t530 + t533 * t940) * qJD(2) + (t503 * t789 + t504 * t788 + t530 * t781 + t533 * t780) * qJD(1)) * qJD(1) / 0.2e1 + (g(1) * t402 + g(2) * t401 - g(3) * t448 - (t206 * t401 - t855) * qJD(1) - (t200 * (-t401 * t531 - t402 * t534) + t629 * t448) * qJD(2) + (qJD(2) * t628 + t374 * t428 - t375 * t429) * t620 + t200 * ((t374 * t534 - t375 * t531) * qJD(1) + t628) + t629 * t420 + (-t101 * t534 - t102 * t531 + (-t207 * t534 + t857) * qJD(1)) * t446) * m(3) + (-t45 * (t504 * t762 + t612) - t33 * (t764 + t796) - (t33 * t818 + t45 * t812) * t399 - (-t667 * t966 + (t33 * t702 - t533 * t667) * pkin(2)) * qJD(2) - (t503 * t575 + t504 * t541) * qJD(4) + t5 * t691 + t33 * t607 + (t7 * t615 + (t45 * t615 - t705) * qJD(1) + t941) * t534 + (t6 * t615 + t45 * t594 + (t704 + t33 * (-t800 - t823)) * qJD(1) + t581) * t531 - g(1) * t784 - g(2) * t786 - g(3) * (t521 + t969) - t950 * ((-t498 - t907) * t503 + t670) + (-t33 * t400 - t45 * t466) * (-rSges(6,1) * t743 + t534 * t595 - t469 + t784) + (-t812 * t400 + t818 * t466 - t504 * t761 + t594 * t534 - t695 + t790) * t44) * m(6) + t1056 * t928 + t1057 * t929 - (t1026 * t534 + t1027 * t531) * t765 / 0.2e1 + (t1007 * t531 - t1008 * t534) * qJDD(1) / 0.2e1 + (qJD(1) * t961 + t1032 * t531 - t1033 * t534) * t932 + (-(t114 * t360 + t115 * (-t361 - t754)) * qJD(1) - (t109 * pkin(2) * t702 + (-t109 * t361 - t114 * t968) * t534 + (-t109 * t360 - t115 * t968) * t531) * qJD(2) + t114 * (-pkin(2) * t725 - t390 * t534) + (qJD(2) * t635 + t316 * t428 + t429 * t801 + t739) * (t623 + t807) + t109 * (t635 + t738) + (t109 * t316 + t115 * t587) * t770 + (t53 * t587 + t115 * (-t390 - t749) + (t109 * t801 + t858) * qJD(1)) * t531 - g(3) * t968 - t587 * t917 + t1050 * t979) * m(4) + (-g(1) * (t469 - t754 + t783) - g(2) * (t467 - t755 + t785) - g(3) * (t304 + t521 + t966) - t950 * t503 * (-pkin(3) - t908) + t67 * t790 + t8 * t691 + t54 * t607 + (t21 * t681 + t67 * t610 + t8 * t199 + t54 * t98 + (-t197 * t54 + t68 * t681) * qJD(1)) * t534 + (t22 * t681 + t68 * t610 - t8 * t197 + t54 * t100 + (t67 * t302 + t54 * (-t199 - t800)) * qJD(1)) * t531 - t67 * (-t266 * t466 - t304 * t400 + t695) - t68 * (t268 * t466 - t304 * t399 + t612) - t54 * (t266 * t399 + t268 * t400 + t796) - ((t197 * t67 + t199 * t68) * t503 + t549 * t504) * qJD(4) - (-t655 * t966 + (-t533 * t655 + t54 * t702) * pkin(2)) * qJD(2)) * m(5) + ((-t767 * t987 - t989) * t534 + ((t534 * t988 + t998) * qJD(2) + t997) * t531) * t710 + ((-t768 * t988 + t989) * t531 + ((t531 * t987 + t998) * qJD(2) + t997) * t534) * t713 + t993 * t935 + t994 * t936 + t995 * t934 + ((qJD(4) * t962 - t1055) * t504 + ((t1001 * t532 - t1002 * t529 + t1064) * t466 + (t1004 * t532 - t1006 * t529 - t975) * t400 + (-t1003 * t532 + t1005 * t529 + t1065) * t399 + t976 * qJD(4)) * t503) * t927 + ((t1020 * t837 + t503 * t977) * qJD(4) + ((qJD(4) * t1019 + t996) * t504 + t999) * t534 + (t1001 * t386 + t1002 * t385) * t466 + (t1004 * t386 + t1006 * t385) * t400 + (-t1003 * t386 - t1005 * t385) * t399) * t933 + ((t1021 * t835 + t503 * t978) * qJD(4) + ((qJD(4) * t1022 + t996) * t504 + t999) * t531 + (t1001 * t384 - t1002 * t383) * t466 + (t1004 * t384 - t1006 * t383) * t400 + (-t1003 * t384 + t1005 * t383) * t399) * t930 + ((t1011 * t534 + t1012 * t531) * qJD(1) + t991) * t712 + ((t1013 * t534 + t1014 * t531) * qJD(1) + t992) * t711 + (qJD(1) * t1017 + qJD(2) * t992 + qJDD(1) * t1010 + t1013 * t428 + t1014 * t429 + t1035) * t923 + (qJD(1) * t1018 + qJD(2) * t991 + qJDD(1) * t1009 + t1011 * t428 + t1012 * t429 + t1036) * t924 + (t1016 * t534 + t1015 * t531 + (t1007 * t534 + t1008 * t531) * qJD(1)) * qJD(1) / 0.2e1 - t1025 * t766 / 0.2e1 + (t1023 + t1026) * t715 + (t1024 + t1027) * t771 / 0.2e1 + (qJD(1) * t962 + t1028 * t531 - t1029 * t534) * t926 + (qJD(1) * t960 + t1030 * t531 - t1031 * t534) * t931; (-m(4) - m(6)) * t949 + 0.2e1 * (t6 * t923 + t7 * t924) * m(6) + 0.2e1 * (t52 * t924 + t53 * t923) * m(4) + (-t949 + t951) * m(5); (t503 * t961 - t504 * t977) * t936 + (t503 * t960 - t504 * t978) * t935 + (t503 * t962 - t504 * t976) * t934 + (-t385 * t965 + t964 * t386 - t963 * t534) * t933 + ((qJD(2) * t961 - t986) * t504 + (-qJD(1) * t994 + t977 * qJD(2) + t1032 * t534 + t1033 * t531) * t503) * t932 + ((qJD(2) * t960 - t1068) * t504 + (-qJD(1) * t993 + t978 * qJD(2) + t1030 * t534 + t1031 * t531) * t503) * t931 + (t383 * t965 + t384 * t964 - t531 * t963) * t930 + (t1045 * t504 + (t529 * t965 + t532 * t964) * t503) * t927 + ((qJD(2) * t962 - t1049) * t504 + (-qJD(1) * t995 + t976 * qJD(2) + t1028 * t534 + t1029 * t531) * t503) * t926 - (t891 + t892 + t902 - t903 + t889 + t890 + t900 - t901 + t952) * t504 / 0.2e1 + t1035 * t841 / 0.2e1 + t1036 * t840 / 0.2e1 + t1025 * t769 / 0.2e1 + ((qJD(2) * t541 - t44 * t910 - t45 * t911 - t6 * t823 - t7 * t824) * t504 - (-t44 * t815 + t45 * t814) * t466 - (t33 * t814 + t44 * t683) * t400 - (t33 * t815 + t45 * t683) * t399 - g(1) * t814 - g(2) * t815 + (t575 * qJD(2) + (qJD(1) * t574 - t45 * t825 - t6 * t813 + t581) * t534 + (qJD(1) * t990 + t44 * t825 + t7 * t813 - t941) * t531 - g(3) * (-t1051 * t529 - t905)) * t503) * m(6) + (-t67 * (-t247 * t466 - t359 * t400) - t68 * (t249 * t466 - t359 * t399) - t54 * (t247 * t399 + t249 * t400) + (qJD(2) * t549 + t67 * t100 - t197 * t21 - t22 * t199 - t68 * t98) * t504 + (t67 * (qJD(2) * t197 + t165 * t531) + t68 * (qJD(2) * t199 - t165 * t534) + t8 * t630 + t54 * (t100 * t534 + t197 * t771 - t199 * t770 - t531 * t98) + (qJD(1) * t655 + t951) * t302) * t503 - g(1) * t249 - g(2) * t247 - g(3) * t359) * m(5) + t1026 * (t504 * t710 - t732 / 0.2e1) + t1027 * (t503 * t715 + t504 * t712); ((qJD(2) * t667 - t399 * t45 - t400 * t44 + g(3) - t5) * t504 + (t531 * t6 + t534 * t7 + (qJD(1) - t466) * (-t44 * t531 + t45 * t534) + (-t399 * t531 - t400 * t534 + qJD(2)) * t33 - t950) * t503) * m(6);];
tau = t1;
