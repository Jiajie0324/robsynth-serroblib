% Calculate vector of inverse dynamics joint torques for
% S5RPRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:13
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RPRRR12_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR12_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR12_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR12_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR12_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRR12_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RPRRR12_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RPRRR12_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RPRRR12_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:12:29
% EndTime: 2019-12-31 19:13:07
% DurationCPUTime: 30.96s
% Computational Cost: add. (21616->1067), mult. (31028->1380), div. (0->0), fcn. (28211->8), ass. (0->537)
t447 = sin(qJ(1));
t810 = pkin(1) * t447;
t450 = cos(qJ(1));
t809 = t450 * pkin(1);
t441 = qJD(3) + qJD(4);
t675 = t441 * t450;
t444 = qJ(3) + qJ(4);
t425 = sin(t444);
t448 = cos(qJ(5));
t670 = t447 * t448;
t445 = sin(qJ(5));
t674 = t445 * t450;
t314 = t425 * t674 + t670;
t668 = t448 * t450;
t671 = t447 * t445;
t315 = t425 * t668 - t671;
t645 = t315 * rSges(6,1) - t314 * rSges(6,2);
t426 = cos(t444);
t676 = t426 * t450;
t170 = rSges(6,3) * t676 - t645;
t716 = rSges(6,2) * t445;
t718 = rSges(6,1) * t448;
t545 = -t716 + t718;
t714 = rSges(6,3) * t425;
t242 = t426 * t545 + t714;
t358 = t441 * t447;
t614 = qJD(5) * t450;
t578 = t426 * t614;
t277 = t358 + t578;
t724 = t426 * pkin(4);
t339 = pkin(8) * t425 + t724;
t383 = qJD(5) * t425 + qJD(1);
t449 = cos(qJ(3));
t618 = qJD(3) * t449;
t582 = t447 * t618;
t391 = pkin(3) * t582;
t423 = qJD(2) * t447;
t637 = t391 + t423;
t808 = t170 * t383 - t242 * t277 - t358 * t339 - t637;
t312 = -t425 * t671 + t668;
t313 = t425 * t670 + t674;
t678 = t426 * t447;
t159 = Icges(6,5) * t313 + Icges(6,6) * t312 - Icges(6,3) * t678;
t161 = -Icges(6,5) * t315 + Icges(6,6) * t314 + Icges(6,3) * t676;
t285 = Icges(6,4) * t315;
t164 = Icges(6,2) * t314 + Icges(6,6) * t676 - t285;
t284 = Icges(6,4) * t314;
t166 = Icges(6,1) * t315 - Icges(6,5) * t676 - t284;
t518 = -t314 * t164 - t315 * t166;
t696 = Icges(6,4) * t313;
t162 = Icges(6,2) * t312 - Icges(6,6) * t678 + t696;
t283 = Icges(6,4) * t312;
t165 = Icges(6,1) * t313 - Icges(6,5) * t678 + t283;
t667 = t312 * t162 + t313 * t165;
t804 = t518 + t667 + (-t159 * t447 - t161 * t450) * t426;
t421 = qJD(4) * t450;
t422 = qJD(3) * t450;
t359 = t422 + t421;
t615 = qJD(5) * t447;
t278 = -t426 * t615 + t359;
t71 = t159 * t676 + t314 * t162 - t315 * t165;
t524 = Icges(6,5) * t448 - Icges(6,6) * t445;
t236 = Icges(6,3) * t425 + t426 * t524;
t694 = Icges(6,4) * t448;
t528 = -Icges(6,2) * t445 + t694;
t238 = Icges(6,6) * t425 + t426 * t528;
t695 = Icges(6,4) * t445;
t532 = Icges(6,1) * t448 - t695;
t240 = Icges(6,5) * t425 + t426 * t532;
t95 = t236 * t676 + t238 * t314 - t240 * t315;
t803 = -t278 * t71 - t383 * t95;
t517 = t164 * t445 + t166 * t448;
t76 = t161 * t425 - t426 * t517;
t376 = Icges(5,4) * t678;
t680 = t425 * t447;
t692 = Icges(5,5) * t450;
t249 = Icges(5,1) * t680 + t376 + t692;
t698 = Icges(5,4) * t425;
t334 = Icges(5,1) * t426 - t698;
t529 = Icges(5,2) * t426 + t698;
t790 = -t529 + t334;
t697 = Icges(5,4) * t426;
t533 = Icges(5,1) * t425 + t697;
t250 = -Icges(5,5) * t447 + t450 * t533;
t332 = -Icges(5,2) * t425 + t697;
t792 = t332 * t450 + t250;
t758 = qJD(1) * t790 - t358 * t792 + t359 * (-Icges(5,2) * t680 + t249 + t376);
t791 = t332 + t533;
t248 = -Icges(5,6) * t447 + t450 * t529;
t793 = -t334 * t450 + t248;
t247 = Icges(5,6) * t450 + t447 * t529;
t794 = -t334 * t447 + t247;
t759 = qJD(1) * t791 - t358 * t793 + t359 * t794;
t800 = t425 * t759 - t426 * t758;
t70 = -t161 * t678 + t312 * t164 - t166 * t313;
t446 = sin(qJ(3));
t799 = rSges(4,2) * t446;
t387 = pkin(8) * t676;
t679 = t425 * t450;
t306 = pkin(4) * t679 - t387;
t796 = t170 - t306;
t795 = t242 + t339;
t599 = t426 * t358;
t622 = qJD(1) * t450;
t789 = t425 * t622 + t599;
t669 = t447 * t449;
t400 = Icges(4,4) * t669;
t673 = t446 * t447;
t693 = Icges(4,5) * t450;
t274 = Icges(4,1) * t673 + t400 + t693;
t699 = Icges(4,4) * t449;
t534 = Icges(4,1) * t446 + t699;
t275 = -Icges(4,5) * t447 + t450 * t534;
t364 = -Icges(4,2) * t446 + t699;
t323 = t364 * t450;
t475 = t447 * (t275 + t323) - t450 * (-Icges(4,2) * t673 + t274 + t400);
t700 = Icges(4,4) * t446;
t530 = Icges(4,2) * t449 + t700;
t272 = Icges(4,6) * t450 + t447 * t530;
t273 = -Icges(4,6) * t447 + t450 * t530;
t366 = Icges(4,1) * t449 - t700;
t324 = t366 * t447;
t325 = t366 * t450;
t476 = t447 * (t273 - t325) - t450 * (t272 - t324);
t788 = -t476 * t446 + t475 * t449;
t640 = t364 + t534;
t641 = -t530 + t366;
t787 = (t446 * t640 - t449 * t641) * qJD(1);
t94 = -t236 * t678 + t238 * t312 + t240 * t313;
t785 = t277 * t70 + t94 * t383;
t438 = t450 * rSges(5,3);
t252 = rSges(5,1) * t680 + rSges(5,2) * t678 + t438;
t719 = rSges(5,1) * t426;
t336 = -rSges(5,2) * t425 + t719;
t403 = pkin(3) * t673;
t451 = -pkin(7) - pkin(6);
t721 = pkin(6) + t451;
t311 = -t450 * t721 + t403;
t372 = t447 * qJ(2) + t809;
t728 = pkin(6) * t450;
t569 = t372 + t728;
t553 = t311 + t569;
t581 = t449 * t422;
t393 = pkin(3) * t581;
t424 = qJD(2) * t450;
t635 = -t393 - t424;
t101 = -t336 * t359 + (t252 + t553) * qJD(1) + t635;
t299 = rSges(5,1) * t678 - rSges(5,2) * t680;
t548 = rSges(5,1) * t425 + rSges(5,2) * t426;
t784 = t101 * (qJD(1) * t299 + t359 * t548);
t733 = rSges(6,3) + pkin(8);
t783 = t425 * t733;
t512 = t248 * t426 + t250 * t425;
t782 = t450 * t512;
t489 = t524 * t425;
t514 = t238 * t445 - t240 * t448;
t519 = t162 * t445 - t165 * t448;
t454 = t277 * (-t236 * t450 + t517) + t278 * (t236 * t447 + t519) + t383 * (Icges(6,3) * t426 - t489 + t514);
t781 = t454 * t426;
t509 = t273 * t449 + t275 * t446;
t778 = t509 * t450;
t525 = Icges(5,5) * t425 + Icges(5,6) * t426;
t246 = -Icges(5,3) * t447 + t450 * t525;
t104 = -t450 * t246 - t248 * t678 - t250 * t680;
t507 = t332 * t426 + t334 * t425;
t330 = Icges(5,5) * t426 - Icges(5,6) * t425;
t683 = t330 * t450;
t123 = t447 * t507 + t683;
t777 = t123 * qJD(1) + t104 * t358;
t732 = pkin(3) * t446;
t606 = t450 * t732;
t310 = t447 * t721 + t606;
t428 = t450 * qJ(2);
t368 = -t428 + t810;
t355 = qJD(1) * t368;
t775 = qJD(1) * t310 - t355;
t439 = t450 * rSges(4,3);
t280 = rSges(4,1) * t673 + rSges(4,2) * t669 + t439;
t211 = t280 + t569;
t410 = t426 * pkin(8);
t730 = pkin(4) * t425;
t338 = t410 - t730;
t373 = -rSges(3,2) * t450 + t447 * rSges(3,3);
t544 = -rSges(6,1) * t445 - rSges(6,2) * t448;
t681 = t425 * t441;
t135 = -t545 * t681 + (rSges(6,3) * t441 + qJD(5) * t544) * t426;
t125 = t447 * t135;
t604 = t426 * t716;
t354 = t450 * t604;
t677 = t426 * t448;
t605 = rSges(6,1) * t677;
t209 = t354 + (-t605 - t714) * t450;
t405 = t426 * rSges(6,3);
t638 = t425 * t716 + t405;
t241 = -t425 * t718 + t638;
t268 = t338 * t441;
t307 = t339 * t450;
t774 = t447 * t268 + t125 + t795 * t622 - qJD(1) * t307 + t209 * t383 - t277 * t241 - t358 * t338 - (-t170 * t426 - t242 * t679) * qJD(5);
t646 = t313 * rSges(6,1) + t312 * rSges(6,2);
t168 = -rSges(6,3) * t678 + t646;
t600 = t425 * t675;
t623 = qJD(1) * t447;
t484 = -t426 * t623 - t600;
t598 = t426 * t675;
t174 = t484 * pkin(8) + (t425 * t623 - t598) * pkin(4);
t208 = rSges(6,3) * t680 + (-t604 + t605) * t447;
t305 = pkin(4) * t678 + pkin(8) * t680;
t579 = t425 * t614;
t580 = t425 * t615;
t501 = t450 * t383;
t558 = qJD(1) * t425 + qJD(5);
t769 = t447 * t558 - t598;
t143 = -t445 * t769 + t448 * t501;
t144 = t445 * t501 + t448 * t769;
t547 = rSges(6,1) * t144 + rSges(6,2) * t143;
t90 = rSges(6,3) * t484 + t547;
t773 = -t168 * t579 - t170 * t580 + t208 * t277 - t278 * t209 + t305 * t358 + t359 * t307 + (t174 + t90) * t450;
t371 = rSges(4,1) * t449 - t799;
t327 = t371 * t450;
t549 = rSges(4,1) * t446 + rSges(4,2) * t449;
t188 = -qJD(3) * t327 + (t447 * t549 + t439) * qJD(1);
t316 = qJD(1) * t372 - t424;
t345 = t549 * qJD(3);
t610 = qJD(1) * qJD(3);
t350 = qJDD(3) * t447 + t450 * t610;
t611 = qJD(1) * qJD(2);
t634 = qJDD(2) * t447 + t450 * t611;
t727 = pkin(6) * qJD(1) ^ 2;
t504 = -t450 * t727 + t634;
t281 = -t447 * rSges(4,3) + t450 * t549;
t729 = pkin(6) * t447;
t570 = -t368 - t729;
t555 = t281 + t570;
t619 = qJD(3) * t447;
t77 = -t345 * t619 + t350 * t371 + (-t188 - t316) * qJD(1) + t555 * qJDD(1) + t504;
t585 = t449 * t622;
t586 = t446 * t622;
t592 = rSges(4,2) * t585 + (t582 + t586) * rSges(4,1);
t620 = qJD(3) * t446;
t189 = (-rSges(4,2) * t620 - rSges(4,3) * qJD(1)) * t447 + t592;
t419 = qJDD(3) * t450;
t351 = -t447 * t610 + t419;
t633 = qJ(2) * t622 + t423;
t595 = qJD(1) * (-pkin(1) * t623 + t633) + qJDD(1) * t372 + t447 * t611;
t483 = qJDD(1) * t728 - t447 * t727 + t595;
t78 = qJD(1) * t189 + qJDD(1) * t280 - t351 * t371 + (qJD(3) * t345 - qJDD(2)) * t450 + t483;
t772 = t77 * t447 - t78 * t450;
t154 = -t336 * t675 + (t447 * t548 + t438) * qJD(1);
t257 = qJD(1) * t421 + qJDD(4) * t447 + t350;
t266 = t548 * t441;
t452 = qJD(3) ^ 2;
t731 = pkin(3) * t449;
t463 = t350 * t731 - t403 * t452 + t504;
t435 = t447 * rSges(5,3);
t253 = t450 * t548 - t435;
t554 = t310 + t570;
t503 = t253 + t554;
t621 = qJD(1) * t451;
t399 = t450 * t621;
t218 = -t393 - t399 + (t403 - t728) * qJD(1);
t660 = -t218 - t316;
t48 = t257 * t336 - t266 * t358 + (-t154 + t660) * qJD(1) + t503 * qJDD(1) + t463;
t587 = t426 * t622;
t594 = rSges(5,1) * t789 + rSges(5,2) * t587;
t155 = (-rSges(5,2) * t681 - rSges(5,3) * qJD(1)) * t447 + t594;
t557 = t441 * qJD(1);
t631 = qJDD(4) * t450 + t419;
t258 = -t447 * t557 + t631;
t591 = pkin(3) * t586 + t447 * t621 + t391;
t217 = pkin(6) * t623 + t591;
t609 = qJDD(2) * t450;
t456 = qJD(1) * t217 + qJDD(1) * t311 - t351 * t731 + t452 * t606 + t483 - t609;
t49 = qJD(1) * t155 + qJDD(1) * t252 - t258 * t336 + t266 * t359 + t456;
t771 = t48 * t447 - t49 * t450;
t725 = g(2) * t450;
t770 = g(1) * t447 - t725;
t173 = t273 * t446 - t275 * t449;
t184 = qJD(1) * t272 - qJD(3) * t323;
t186 = -qJD(3) * t325 + (t447 * t534 + t693) * qJD(1);
t526 = Icges(4,5) * t446 + Icges(4,6) * t449;
t271 = -Icges(4,3) * t447 + t450 * t526;
t626 = qJD(1) * t271;
t768 = qJD(3) * t173 + t184 * t449 + t186 * t446 + t626;
t341 = t530 * qJD(3);
t342 = t534 * qJD(3);
t362 = Icges(4,5) * t449 - Icges(4,6) * t446;
t505 = t364 * t446 - t366 * t449;
t767 = qJD(1) * t362 + qJD(3) * t505 + t341 * t449 + t342 * t446;
t185 = qJD(1) * t273 + t364 * t619;
t187 = qJD(1) * t275 + qJD(3) * t324;
t510 = t272 * t446 - t274 * t449;
t270 = Icges(4,3) * t450 + t447 * t526;
t627 = qJD(1) * t270;
t766 = qJD(3) * t510 - t185 * t449 - t187 * t446 + t627;
t617 = qJD(5) * t426;
t385 = pkin(4) * t680;
t304 = -pkin(8) * t678 + t385;
t66 = t168 * t383 - t242 * t278 - t339 * t359 + (t304 + t553) * qJD(1) + t635;
t765 = (-qJD(1) * t305 - t168 * t617 - t383 * t208 + t241 * t278 + t242 * t580 + t338 * t359 + t623 * t795) * t66 - g(2) * t354;
t561 = t791 * t441;
t562 = t790 * t441;
t763 = qJD(1) * t330 + t425 * t561 - t426 * t562;
t564 = -qJD(1) * t250 + t441 * t794;
t566 = qJD(1) * t248 + t249 * t441 + t332 * t358;
t245 = Icges(5,3) * t450 + t447 * t525;
t629 = qJD(1) * t245;
t762 = t425 * t564 - t426 * t566 + t629;
t565 = (t447 * t533 + t692) * qJD(1) + t793 * t441;
t567 = -qJD(1) * t247 + t441 * t792;
t628 = qJD(1) * t246;
t761 = t425 * t565 - t426 * t567 + t628;
t527 = -Icges(6,2) * t448 - t695;
t461 = t277 * (Icges(6,2) * t315 - t166 + t284) + t278 * (-Icges(6,2) * t313 + t165 + t283) + t383 * (t527 * t426 + t240);
t531 = -Icges(6,1) * t445 - t694;
t760 = t277 * (-Icges(6,1) * t314 + t164 - t285) + t278 * (-Icges(6,1) * t312 + t162 + t696) + t383 * (-t531 * t426 + t238);
t442 = t447 ^ 2;
t69 = -t159 * t678 + t667;
t28 = t278 * t69 + t785;
t757 = -t28 / 0.2e1;
t756 = -pkin(1) - pkin(6);
t608 = qJDD(5) * t426;
t137 = qJD(5) * t484 + t450 * t608 + t257;
t755 = t137 / 0.2e1;
t616 = qJD(5) * t441;
t138 = -qJD(1) * t578 + (t425 * t616 - t557 - t608) * t447 + t631;
t754 = t138 / 0.2e1;
t753 = t257 / 0.2e1;
t752 = t258 / 0.2e1;
t751 = -t277 / 0.2e1;
t750 = t277 / 0.2e1;
t749 = -t278 / 0.2e1;
t748 = t278 / 0.2e1;
t279 = qJDD(5) * t425 + t426 * t616 + qJDD(1);
t747 = t279 / 0.2e1;
t746 = t350 / 0.2e1;
t745 = t351 / 0.2e1;
t744 = -t358 / 0.2e1;
t743 = t358 / 0.2e1;
t742 = -t359 / 0.2e1;
t741 = t359 / 0.2e1;
t740 = -t383 / 0.2e1;
t739 = t383 / 0.2e1;
t738 = t447 / 0.2e1;
t737 = -t450 / 0.2e1;
t736 = t450 / 0.2e1;
t735 = rSges(3,2) - pkin(1);
t734 = -rSges(5,3) - pkin(1);
t723 = -qJD(1) / 0.2e1;
t722 = qJD(1) / 0.2e1;
t102 = t236 * t425 - t426 * t514;
t523 = -Icges(6,5) * t445 - Icges(6,6) * t448;
t130 = -t441 * t489 + (Icges(6,3) * t441 + qJD(5) * t523) * t426;
t490 = t528 * t425;
t131 = -t441 * t490 + (Icges(6,6) * t441 + qJD(5) * t527) * t426;
t491 = t532 * t425;
t132 = -t441 * t491 + (Icges(6,5) * t441 + qJD(5) * t531) * t426;
t40 = (t441 * t514 + t130) * t425 + (-t131 * t445 + t132 * t448 + t236 * t441 + (-t238 * t448 - t240 * t445) * qJD(5)) * t426;
t720 = t102 * t279 + t40 * t383;
t715 = rSges(3,3) * t450;
t145 = -t383 * t670 + (-t450 * t558 - t599) * t445;
t146 = t558 * t668 + (-t383 * t445 + t441 * t677) * t447;
t601 = t425 * t358;
t485 = -t587 + t601;
t85 = Icges(6,5) * t146 + Icges(6,6) * t145 + Icges(6,3) * t485;
t87 = Icges(6,4) * t146 + Icges(6,2) * t145 + Icges(6,6) * t485;
t89 = Icges(6,1) * t146 + Icges(6,4) * t145 + Icges(6,5) * t485;
t20 = (t441 * t519 + t85) * t425 + (t159 * t441 - t445 * t87 + t448 * t89 + (-t162 * t448 - t165 * t445) * qJD(5)) * t426;
t713 = t20 * t278;
t84 = Icges(6,5) * t144 + Icges(6,6) * t143 + Icges(6,3) * t484;
t86 = Icges(6,4) * t144 + Icges(6,2) * t143 + Icges(6,6) * t484;
t88 = Icges(6,1) * t144 + Icges(6,4) * t143 + Icges(6,5) * t484;
t21 = (t441 * t517 + t84) * t425 + (t161 * t441 - t445 * t86 + t448 * t88 + (-t164 * t448 + t166 * t445) * qJD(5)) * t426;
t712 = t21 * t277;
t75 = t159 * t425 - t426 * t519;
t707 = t75 * t138;
t706 = t76 * t137;
t703 = qJDD(1) / 0.2e1;
t593 = pkin(4) * t789 + pkin(8) * t601;
t175 = -pkin(8) * t587 + t593;
t597 = t146 * rSges(6,1) + t145 * rSges(6,2) + rSges(6,3) * t601;
t91 = -rSges(6,3) * t587 + t597;
t701 = -t175 - t91;
t550 = -t310 * t422 - t311 * t619;
t58 = -t168 * t277 + t170 * t278 - t304 * t358 - t306 * t359 + t550;
t688 = qJD(1) * t58;
t552 = t358 * t336 + t637;
t100 = qJD(1) * t503 + t552;
t687 = t100 * t450;
t328 = t371 * t619;
t128 = qJD(1) * t555 + t328 + t423;
t685 = t128 * t450;
t682 = t362 * t450;
t672 = t447 * t246;
t287 = t447 * t330;
t320 = t447 * t362;
t666 = t796 * t450;
t661 = -t168 - t304;
t651 = -t252 - t311;
t644 = t795 * t447;
t369 = rSges(3,2) * t447 + t715;
t639 = -t368 + t369;
t303 = t372 + t373;
t632 = rSges(3,2) * t623 + rSges(3,3) * t622;
t630 = t423 - t355;
t624 = qJD(1) * t526;
t124 = t450 * t507 - t287;
t613 = t124 * qJD(1);
t506 = t364 * t449 + t366 * t446;
t177 = t450 * t506 - t320;
t612 = t177 * qJD(1);
t607 = -rSges(4,3) + t756;
t404 = pkin(3) * t669;
t602 = pkin(3) * t620;
t596 = -t311 + t661;
t103 = t450 * t245 + t247 * t678 + t249 * t680;
t108 = t450 * t270 + t272 * t669 + t274 * t673;
t109 = -t450 * t271 - t273 * t669 - t275 * t673;
t590 = t399 - t635;
t589 = t426 * t733;
t584 = t446 * t619;
t577 = -pkin(4) - t718;
t576 = -t623 / 0.2e1;
t575 = t622 / 0.2e1;
t574 = -t619 / 0.2e1;
t573 = t619 / 0.2e1;
t572 = -t422 / 0.2e1;
t571 = t422 / 0.2e1;
t568 = t66 * (-t135 - t268);
t382 = rSges(5,2) * t679;
t301 = -rSges(5,1) * t676 + t382;
t563 = -t299 * t358 + t359 * t301;
t559 = -qJD(1) * t301 - t358 * t548;
t374 = rSges(2,1) * t450 - rSges(2,2) * t447;
t370 = rSges(2,1) * t447 + rSges(2,2) * t450;
t511 = t272 * t449 + t274 * t446;
t469 = qJD(1) * t511 + qJD(3) * t320 + t626;
t470 = -qJD(1) * t509 - qJD(3) * t682 + t627;
t543 = t447 * (t470 * t447 - t450 * t768) + t450 * (t469 * t447 + t450 * t766);
t542 = t447 * (t447 * t768 + t470 * t450) + t450 * (-t447 * t766 + t469 * t450);
t541 = t447 * t70 + t450 * t69;
t540 = t447 * t69 - t450 * t70;
t72 = t161 * t676 - t518;
t539 = t447 * t72 + t450 * t71;
t538 = t447 * t71 - t450 * t72;
t537 = t447 * t76 + t450 * t75;
t536 = t447 * t75 - t450 * t76;
t535 = t591 + t633;
t522 = t108 * t450 + t109 * t447;
t254 = t447 * t270;
t110 = -t511 * t450 + t254;
t111 = -t447 * t271 + t778;
t521 = t110 * t450 + t111 * t447;
t129 = qJD(1) * t211 - t371 * t422 - t424;
t520 = t128 * t447 - t129 * t450;
t516 = t168 * t450 + t170 * t447;
t515 = t188 * t450 - t189 * t447;
t513 = t247 * t426 + t249 * t425;
t127 = t248 * t425 - t250 * t426;
t508 = -t280 * t447 - t281 * t450;
t502 = t306 + t554;
t500 = (-t450 ^ 2 - t442) * pkin(3) * t618;
t397 = pkin(3) * t585;
t499 = -pkin(3) * t584 + t397;
t498 = t103 + t672;
t497 = -t450 * t451 + t372 + t403;
t487 = -t405 + t730 + t732;
t486 = t548 + t732;
t482 = t159 * t278 + t161 * t277 + t236 * t383;
t481 = (Icges(6,5) * t312 - Icges(6,6) * t313) * t278 + (Icges(6,5) * t314 + Icges(6,6) * t315) * t277 + t523 * t426 * t383;
t478 = -qJD(1) * t525 + t287 * t359 - t358 * t683;
t227 = t447 * t245;
t105 = -t450 * t513 + t227;
t474 = t425 * t577 + t410 + t638;
t473 = -t217 * t619 + t218 * t422 - t351 * t310 - t311 * t350;
t472 = -qJD(1) * t512 - t441 * t683 + t629;
t471 = qJD(1) * t513 + t287 * t441 + t628;
t468 = qJD(1) * t507 - t525 * t441;
t467 = t506 * qJD(1) - t526 * qJD(3);
t466 = t208 + t305;
t465 = t426 * t577 - t783;
t106 = -t672 + t782;
t126 = -t247 * t425 + t249 * t426;
t16 = t143 * t162 + t144 * t165 + t159 * t484 + t314 * t87 - t315 * t89 + t676 * t85;
t17 = t143 * t164 - t144 * t166 + t161 * t484 + t314 * t86 - t315 * t88 + t676 * t84;
t18 = t145 * t162 + t146 * t165 + t159 * t485 + t312 * t87 + t313 * t89 - t678 * t85;
t19 = t145 * t164 - t146 * t166 + t161 * t485 + t312 * t86 + t313 * t88 - t678 * t84;
t201 = t238 * t447;
t202 = t238 * t450;
t203 = t240 * t447;
t204 = t240 * t450;
t237 = Icges(6,6) * t426 - t490;
t239 = Icges(6,5) * t426 - t491;
t29 = t277 * t72 - t803;
t33 = t130 * t676 + t131 * t314 - t132 * t315 + t143 * t238 + t144 * t240 + t236 * t484;
t3 = t137 * t72 + t138 * t71 + t16 * t278 + t17 * t277 + t279 * t95 + t33 * t383;
t32 = t102 * t383 + t277 * t76 + t278 * t75;
t34 = -t130 * t678 + t131 * t312 + t132 * t313 + t145 * t238 + t146 * t240 + t236 * t485;
t4 = t137 * t70 + t138 * t69 + t18 * t278 + t19 * t277 + t279 * t94 + t34 * t383;
t43 = t471 * t447 + t450 * t762;
t44 = t472 * t447 - t450 * t761;
t45 = -t447 * t762 + t471 * t450;
t46 = t447 * t761 + t472 * t450;
t56 = t103 * t359 + t777;
t57 = t105 * t359 + t106 * t358 - t613;
t67 = t468 * t447 + t450 * t763;
t68 = -t447 * t763 + t468 * t450;
t73 = -t425 * t566 - t426 * t564;
t74 = t425 * t567 + t426 * t565;
t455 = (qJD(1) * t68 + qJDD(1) * t123 + t103 * t258 + t104 * t257 + t358 * t46 + t359 * t45 + t4) * t736 + (t56 + t28) * t576 + (qJD(1) * t67 - qJDD(1) * t124 + t105 * t258 + t106 * t257 + t358 * t44 + t359 * t43 + t3) * t738 + (((-t201 * t445 + t203 * t448 + t159) * t278 + (t202 * t445 - t204 * t448 + t161) * t277 + (-t237 * t445 + t239 * t448 + t236) * t383 + t102 * qJD(5)) * t426 + (qJD(5) * t536 + t454) * t425) * t740 + ((t201 * t312 + t203 * t313) * t278 + (-t202 * t312 - t204 * t313) * t277 + (t237 * t312 + t239 * t313) * t383 + (t426 * t94 - t679 * t70) * qJD(5) + ((qJD(5) * t69 + t482) * t425 - t781) * t447) * t749 + ((t201 * t314 - t203 * t315) * t278 + (-t202 * t314 + t204 * t315) * t277 + (t237 * t314 - t239 * t315) * t383 + (t426 * t95 + t680 * t71) * qJD(5) + ((-qJD(5) * t72 - t482) * t425 + t781) * t450) * t751 + (t579 / 0.2e1 + t575) * t29 + t537 * t747 + (-qJD(1) * t540 + t18 * t450 + t19 * t447) * t748 + (-qJD(1) * t538 + t16 * t450 + t17 * t447) * t750 + (t103 * t450 + t104 * t447) * t752 + (t105 * t450 + t106 * t447) * t753 + t541 * t754 + t539 * t755 + t580 * t757 + (-qJD(1) * t536 + t20 * t450 + t21 * t447) * t739 + (t447 * t46 + t45 * t450 + (-t103 * t447 + t104 * t450) * qJD(1)) * t741 + (t43 * t450 + t44 * t447 + (-t105 * t447 + t106 * t450) * qJD(1)) * t743 + (t447 * t74 + t450 * t73 + (-t126 * t447 + t127 * t450) * qJD(1)) * t722 + (t126 * t450 + t127 * t447) * t703 - t32 * t617 / 0.2e1 + (-t425 * t758 - t426 * t759) * t723 + t57 * t575 + (t478 * t447 + t450 * t800) * t744 + (-t447 * t800 + t478 * t450) * t742;
t326 = t371 * t447;
t300 = t544 * t426;
t261 = t450 * t310;
t230 = t450 * t253;
t225 = qJD(1) * t303 - t424;
t224 = qJD(1) * t639 + t423;
t207 = t450 * t218;
t197 = rSges(6,1) * t314 + rSges(6,2) * t315;
t196 = rSges(6,1) * t312 - rSges(6,2) * t313;
t176 = t447 * t506 + t682;
t171 = t176 * qJD(1);
t158 = t508 * qJD(3);
t139 = t450 * t154;
t113 = qJD(1) * t632 + qJDD(1) * t373 + t595 - t609;
t112 = t639 * qJDD(1) + (-qJD(1) * t373 - t316) * qJD(1) + t634;
t97 = -t252 * t358 - t253 * t359 + t550;
t82 = -t447 * t767 + t467 * t450;
t81 = t467 * t447 + t450 * t767;
t80 = t509 * qJD(3) - t184 * t446 + t186 * t449;
t79 = -qJD(3) * t511 - t185 * t446 + t187 * t449;
t65 = qJD(1) * t502 - t808;
t62 = qJD(3) * t521 - t612;
t61 = qJD(3) * t522 + t171;
t42 = t154 * t359 - t155 * t358 - t252 * t257 - t253 * t258 + t473;
t23 = qJD(1) * t175 + qJDD(1) * t304 - t135 * t278 - t138 * t242 + t168 * t279 - t258 * t339 - t268 * t359 + t383 * t91 + t456;
t22 = t135 * t277 + t137 * t242 - t170 * t279 + t257 * t339 + t268 * t358 - t383 * t90 + (-t174 + t660) * qJD(1) + t502 * qJDD(1) + t463;
t15 = -t137 * t168 + t138 * t170 + t174 * t359 - t175 * t358 - t257 * t304 - t258 * t306 - t277 * t91 + t278 * t90 + t473;
t1 = [(-(-t100 + (t253 - t729) * qJD(1) + t552 + t775) * t101 + t100 * (rSges(5,1) * t598 - rSges(5,2) * t600 + t590) + t101 * (-rSges(5,2) * t601 + t535 + t594) + (t734 * t687 + (t100 * (-qJ(2) - t486) + t101 * t734) * t447) * qJD(1) + (t49 - g(2)) * (t497 + t252) + (t48 - g(1)) * (t428 - t435 + (-pkin(1) + t451) * t447 + t486 * t450)) * m(5) + (-(qJD(1) * t369 - t224 + t630) * t225 + t224 * t424 + t225 * (t632 + t633) + (t224 * t735 * t450 + (t224 * (-rSges(3,3) - qJ(2)) - t225 * pkin(1)) * t447) * qJD(1) + (t113 - g(2)) * t303 + (t112 - g(1)) * (t447 * t735 + t428 + t715)) * m(3) + (t176 - t510) * t745 + (-qJD(3) * t506 + t341 * t446 - t342 * t449 - t425 * t562 - t426 * t561) * qJD(1) + (t29 + (-t69 + t804) * t277 + t803) * t749 + ((t72 + t804) * t278 + t785) * t751 + (t612 + (t442 * t271 + (-t254 + t109 + (t271 + t511) * t450) * t450) * qJD(3) + t62) * t572 + t173 * t746 + t34 * t748 + t127 * t753 + t94 * t754 + t95 * t755 + (t74 + t67 + t56) * t743 + (-(-t128 + t328 + (t281 - t729) * qJD(1) + t630) * t129 + t128 * (rSges(4,1) * t581 - t422 * t799 + t424) + t129 * (-rSges(4,2) * t584 + t592 + t633) + (t607 * t685 + (t128 * (-qJ(2) - t549) + t129 * t607) * t447) * qJD(1) + (t78 - g(2)) * t211 + (t77 - g(1)) * (t447 * t756 + t281 + t428)) * m(4) + (t613 + (t447 * t512 + t104 - t227) * t359 + (-t103 + t498) * t358 + ((t246 + t513) * t359 - t512 * t358) * t450 + t57) * t742 + (t73 + t68) * t741 + ((t106 + t498 - t782) * t359 + t777) * t744 + (t171 + ((-t110 + t254 + t109) * t447 + (t111 - t778 + (t271 - t511) * t447 + t108) * t450) * qJD(3)) * t574 + ((t23 - g(2)) * (-t447 * t589 + t385 + t497 + t646) + (-t547 + t590 + (t724 + t783) * t675 + (-t809 + (-qJ(2) - t487 + t410) * t447) * qJD(1)) * t65 + (t535 + t593 + t597 + t65 - t775 + (-t589 * t450 - t306 + t729 - t810) * qJD(1) + t808) * t66 + (t22 - g(1)) * (t447 * t451 + t487 * t450 - t368 - t387 + t645)) * m(6) + (t33 + t28) * t750 + (t123 + t126) * t752 + (t80 + t81 + t61) * t573 + t707 / 0.2e1 + t706 / 0.2e1 + t720 + (m(2) * (t370 ^ 2 + t374 ^ 2) - t505 + Icges(2,3) + Icges(3,1) - t332 * t425 + t334 * t426) * qJDD(1) + (t79 + t82) * t571 + t713 / 0.2e1 + t712 / 0.2e1 - t257 * t124 / 0.2e1 - t350 * t177 / 0.2e1 - m(2) * (-g(1) * t370 + g(2) * t374); (-m(3) - m(6)) * t770 + 0.2e1 * (t22 * t738 + t23 * t737) * m(6) + 0.2e1 * (t112 * t738 + t113 * t737) * m(3) + (-t770 + t771) * m(5) + (-t770 + t772) * m(4); (t447 * t80 + t450 * t79 + (t173 * t450 + t447 * t510) * qJD(1)) * t722 + t62 * t575 + t61 * t576 + (qJD(1) * t82 + qJD(3) * t542 + qJDD(1) * t176 + t108 * t351 + t109 * t350) * t736 + t455 + ((t320 * t422 - t624) * t450 + (-t787 + (-t450 * t682 - t788) * qJD(3)) * t447) * t572 + ((-t619 * t682 - t624) * t447 + (t787 + (t447 * t320 + t788) * qJD(3)) * t450) * t574 + ((-t108 * t447 + t109 * t450) * qJD(1) + t542) * t571 + ((-t446 * t641 - t449 * t640) * qJD(1) + (t446 * t475 + t449 * t476) * qJD(3)) * t723 + ((-t110 * t447 + t111 * t450) * qJD(1) + t543) * t573 + (qJD(1) * t81 + qJD(3) * t543 - qJDD(1) * t177 + t110 * t351 + t111 * t350) * t738 + (t173 * t447 - t450 * t510) * t703 + t521 * t746 + t522 * t745 + (-g(1) * (t404 + t466) - g(3) * (t474 - t732) - (t465 - t731) * t725 + t22 * (t404 + t644) + t15 * (-t261 + t666) + (t23 * (-t795 - t731) + t568 + t596 * t688) * t450 + (t15 * t596 + (t310 - t796) * t688) * t447 + (-t447 * t602 + t397 - t499 + t774) * t65 + (t207 + (-t217 + t701) * t447 - t500 + t773) * t58 + t765) * m(6) + (t48 * t404 + t100 * t397 + t42 * (-t230 - t261) + t97 * (t139 + t207) + (t49 * (-t336 - t731) + t101 * t266 + (t100 * t336 + t651 * t97) * qJD(1)) * t450 + (t48 * t336 + t100 * (-t266 - t602) + t42 * t651 + t97 * (-t155 - t217) + (t101 * t336 + t97 * (t253 + t310)) * qJD(1)) * t447 - t100 * (t499 + t559) - t784 - t97 * (t500 + t563) - g(1) * (t299 + t404) - g(2) * (t382 + (-t719 - t731) * t450) + g(3) * t486) * m(5) + (-(t128 * t327 + t129 * t326) * qJD(1) - (t158 * (-t326 * t447 - t327 * t450) - t520 * t549) * qJD(3) + (qJD(3) * t515 - t280 * t350 - t281 * t351) * t508 + t158 * ((-t280 * t450 + t281 * t447) * qJD(1) + t515) - t520 * t345 + ((t129 * t447 + t685) * qJD(1) + t772) * t371 - g(1) * t326 + g(2) * t327 + g(3) * t549) * m(4); t455 + (t22 * t644 + (-t23 * t795 + t661 * t688 + t568) * t450 - g(1) * t466 - g(3) * t474 - t465 * t725 + t774 * t65 + (t447 * t661 + t666) * t15 + ((-qJD(1) * t796 + t701) * t447 + t773) * t58 + t765) * m(6) + (t42 * (-t252 * t447 - t230) - (t100 * t447 - t101 * t450) * t266 + ((t101 * t447 + t687) * qJD(1) + t771) * t336 - t100 * t559 - t784 - g(1) * t299 - g(2) * t301 + g(3) * t548 + (-t155 * t447 + t139 + (-t252 * t450 + t253 * t447) * qJD(1) - t563) * t97) * m(5); t587 * t757 + t28 * t601 / 0.2e1 - t4 * t678 / 0.2e1 + (t425 * t94 - t426 * t540) * t754 + ((t441 * t540 + t34) * t425 + (-qJD(1) * t541 - t18 * t447 + t19 * t450 + t441 * t94) * t426) * t748 + t3 * t676 / 0.2e1 + (t425 * t95 - t426 * t538) * t755 + ((t441 * t538 + t33) * t425 + (-qJD(1) * t539 - t16 * t447 + t17 * t450 + t441 * t95) * t426) * t750 + t441 * t426 * t32 / 0.2e1 + t425 * (t706 + t707 + t712 + t713 + t720) / 0.2e1 + (t102 * t425 - t426 * t536) * t747 + ((t441 * t536 + t40) * t425 + (-qJD(1) * t537 + t102 * t441 - t20 * t447 + t21 * t450) * t426) * t739 + (t312 * t461 - t313 * t760 - t481 * t678) * t749 + (t461 * t314 + t315 * t760 + t481 * t676) * t751 + (t481 * t425 + (-t445 * t461 - t448 * t760) * t426) * t740 + (t426 * t576 - t600 / 0.2e1) * t29 + ((t23 * t168 - t22 * t170 - t65 * t90 + t66 * t91 + (t58 * t516 + (-t447 * t66 - t450 * t65) * t242) * t441) * t425 + (t65 * (t135 * t450 - t170 * t441) + t66 * (t168 * t441 + t125) - t15 * t516 + t58 * (t168 * t623 - t170 * t622 - t447 * t90 - t450 * t91) + (t22 * t450 + t23 * t447 + (-t447 * t65 + t450 * t66) * qJD(1)) * t242) * t426 - t65 * (-t197 * t383 + t277 * t300) - t66 * (t196 * t383 - t278 * t300) - t58 * (-t196 * t277 + t197 * t278) - g(1) * t196 - g(2) * t197 - g(3) * t300) * m(6);];
tau = t1;
