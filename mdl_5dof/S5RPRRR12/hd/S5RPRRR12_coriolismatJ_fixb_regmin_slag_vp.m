% Calculate minimal parameter regressor of coriolis matrix for
% S5RPRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:13
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRR12_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR12_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR12_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRR12_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:13:11
% EndTime: 2019-12-31 19:13:18
% DurationCPUTime: 2.44s
% Computational Cost: add. (2541->228), mult. (5051->324), div. (0->0), fcn. (5258->6), ass. (0->196)
t248 = qJD(3) + qJD(4);
t193 = cos(qJ(3));
t304 = cos(qJ(4));
t180 = t304 * t193;
t190 = sin(qJ(4));
t191 = sin(qJ(3));
t277 = t190 * t191;
t162 = -t180 + t277;
t163 = t190 * t193 + t304 * t191;
t316 = t248 * t163;
t216 = t162 * t316;
t189 = sin(qJ(5));
t194 = -pkin(1) - pkin(6);
t320 = -pkin(7) + t194;
t166 = t320 * t191;
t167 = t320 * t193;
t208 = t304 * t166 + t190 * t167;
t318 = t208 * t189;
t192 = cos(qJ(5));
t179 = t191 * pkin(3) + qJ(2);
t301 = t163 * pkin(4);
t302 = t162 * pkin(8);
t218 = t301 + t302;
t199 = t179 + t218;
t34 = -t192 * t199 + t318;
t325 = (t34 - t318) * t162;
t317 = t208 * t192;
t35 = t189 * t199 + t317;
t324 = (t35 - t317) * t162;
t226 = t190 * t166 - t304 * t167;
t323 = t248 * t226;
t322 = t248 * t208;
t321 = 0.2e1 * t162;
t81 = t162 * t189;
t319 = t248 * t81;
t161 = t162 ^ 2;
t311 = t163 ^ 2;
t315 = t311 / 0.2e1 + t161 / 0.2e1;
t59 = t311 - t161;
t245 = t304 * pkin(3);
t182 = -t245 - pkin(4);
t280 = t163 * t182;
t299 = t190 * pkin(3);
t181 = pkin(8) + t299;
t281 = t162 * t181;
t313 = t302 / 0.2e1 + t301 / 0.2e1 + t281 / 0.2e1 - t280 / 0.2e1 + (-t304 * t163 / 0.2e1 - t190 * t162 / 0.2e1) * pkin(3);
t278 = t189 * t192;
t236 = qJD(1) * t278;
t188 = t192 ^ 2;
t310 = t189 ^ 2;
t74 = (-t310 / 0.2e1 + t188 / 0.2e1) * t162;
t312 = t161 * t236 + t248 * t74;
t246 = -t188 + t310;
t60 = -0.2e1 * t162 * t236 + t246 * t248;
t309 = t181 / 0.2e1;
t308 = t182 / 0.2e1;
t307 = -t189 / 0.2e1;
t306 = -t192 / 0.2e1;
t305 = t192 / 0.2e1;
t303 = t162 * pkin(4);
t300 = t163 * pkin(8);
t298 = t193 * pkin(3);
t295 = pkin(4) * qJD(4);
t112 = t300 - t303;
t95 = t112 + t298;
t292 = t192 * t95;
t1 = t292 * t163 + t325;
t294 = t1 * qJD(1);
t293 = t189 * t95;
t2 = -t293 * t163 + t324;
t291 = t2 * qJD(1);
t79 = t192 * t163;
t3 = t112 * t79 + t325;
t290 = t3 * qJD(1);
t75 = t189 * t163;
t4 = -t112 * t75 + t324;
t289 = t4 * qJD(1);
t222 = -t245 / 0.2e1;
t211 = -t182 / 0.2e1 + t222;
t195 = (-pkin(4) / 0.2e1 + t211) * t163 + (t309 - t299 / 0.2e1 - pkin(8) / 0.2e1) * t162;
t6 = t195 * t189;
t288 = t6 * qJD(1);
t20 = t163 * t34 + t226 * t81;
t287 = qJD(1) * t20;
t82 = t162 * t192;
t21 = -t163 * t35 - t226 * t82;
t286 = qJD(1) * t21;
t285 = t226 * t189;
t284 = t226 * t192;
t212 = 0.1e1 / 0.2e1 + t315;
t37 = t212 * t189;
t275 = t37 * qJD(1);
t47 = t212 * t192;
t274 = t47 * qJD(1);
t49 = t59 * t189;
t273 = t49 * qJD(1);
t50 = t59 * t192;
t272 = t50 * qJD(1);
t271 = t59 * qJD(1);
t65 = -t179 * t162 + t163 * t298;
t270 = t65 * qJD(1);
t66 = -t162 * t298 - t179 * t163;
t269 = t66 * qJD(1);
t268 = t74 * qJD(1);
t267 = t75 * qJD(1);
t70 = t79 * qJD(1);
t98 = t246 * t161;
t266 = t98 * qJD(1);
t264 = qJD(1) * qJ(2);
t263 = qJD(2) * t163;
t262 = qJD(3) * t182;
t261 = qJD(4) * t179;
t260 = qJD(5) * t189;
t259 = qJD(5) * t192;
t159 = t180 / 0.2e1 - t277 / 0.2e1;
t258 = t159 * qJD(1);
t257 = t162 * qJD(1);
t256 = t163 * qJD(1);
t174 = t191 ^ 2 - t193 ^ 2;
t255 = t174 * qJD(1);
t254 = t191 * qJD(1);
t253 = t191 * qJD(3);
t252 = t193 * qJD(1);
t251 = t193 * qJD(3);
t244 = qJD(4) * t299;
t243 = qJD(3) * t299;
t240 = qJ(2) * t254;
t239 = qJ(2) * t252;
t238 = t189 * t256;
t237 = t192 * t256;
t235 = t163 * t260;
t234 = t163 * t259;
t117 = t162 * t256;
t233 = t179 * t257;
t232 = t179 * t256;
t178 = t189 * t259;
t231 = t191 * t252;
t228 = t304 * qJD(3);
t227 = t304 * qJD(4);
t225 = t248 * t192;
t223 = t248 * t189;
t219 = t248 * t299;
t217 = t189 * t225;
t215 = t192 * t223;
t214 = -t280 + t281;
t213 = t162 * (qJD(5) + t256);
t210 = t300 / 0.2e1 - t303 / 0.2e1;
t209 = t162 * t308 + t163 * t309;
t200 = t95 / 0.2e1 + t209;
t11 = t200 * t189;
t207 = -qJD(1) * t11 - t192 * t262;
t13 = t200 * t192;
t206 = qJD(1) * t13 - t189 * t262;
t205 = t192 * t213;
t54 = -t159 * qJD(5) + t117;
t204 = pkin(4) / 0.2e1 + t211;
t9 = t195 * t192;
t203 = -qJD(1) * t9 - t189 * t243;
t202 = t112 / 0.2e1 + t210;
t201 = t217 * t321;
t126 = t204 * t189;
t17 = t202 * t192;
t198 = qJD(1) * t17 + qJD(3) * t126 + t189 * t295;
t127 = t204 * t192;
t15 = t202 * t189;
t197 = -qJD(1) * t15 + qJD(3) * t127 + t192 * t295;
t173 = t189 * t244;
t170 = t246 * qJD(5);
t129 = pkin(4) * t306 + t182 * t305 + t192 * t222;
t128 = pkin(4) * t307 + (t222 + t308) * t189;
t101 = t248 * t162;
t96 = t248 * t159;
t67 = t74 * qJD(5);
t58 = t259 + t70;
t57 = -t260 - t267;
t48 = t305 + (t161 + t311) * t306;
t46 = t215 - t268;
t45 = -t217 + t268;
t44 = 0.2e1 * t189 * t205;
t38 = t315 * t189 + t307;
t36 = -t188 * t117 - t67;
t33 = qJD(5) * t79 + t272;
t32 = -qJD(5) * t75 - t273;
t30 = -t67 + (t188 * t257 - t217) * t163;
t28 = -t272 - t319;
t27 = -t162 * t225 + t273;
t22 = t246 * t316 + (qJD(5) - t256) * t278 * t321;
t19 = t81 * qJD(5) - t163 * t225;
t18 = t112 * t305 - t210 * t192 + t285;
t16 = t112 * t307 + t210 * t189 + t284;
t14 = t285 / 0.2e1 - t226 * t307 + t292 / 0.2e1 - t209 * t192;
t12 = t284 / 0.2e1 - t226 * t306 - t293 / 0.2e1 + t209 * t189;
t8 = t313 * t192 + t318;
t7 = t313 * t189 - t317;
t5 = t82 * qJD(5) + t163 * t223;
t10 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t191 * t251, t174 * qJD(3), 0, 0, 0, qJ(2) * t251 + qJD(2) * t191, -qJ(2) * t253 + qJD(2) * t193, t216, t248 * t59, 0, 0, 0, qJD(3) * t65 - t162 * t261 + t263, -qJD(2) * t162 + qJD(3) * t66 - t163 * t261, -t161 * t178 + t188 * t216, t98 * qJD(5) - t163 * t201, t162 * t235 - t248 * t50, t162 * t234 + t248 * t49, -t216, qJD(3) * t1 + qJD(4) * t3 + qJD(5) * t21 + t192 * t263, qJD(3) * t2 + qJD(4) * t4 + qJD(5) * t20 - t189 * t263; 0, 0, 0, 0, qJD(1), t264, 0, 0, 0, 0, 0, t254, t252, 0, 0, 0, 0, 0, t256, -t257, 0, 0, 0, 0, 0, qJD(5) * t48 + t237, qJD(5) * t38 - t238; 0, 0, 0, 0, 0, 0, -t231, t255, -t253, -t251, 0, -t194 * t253 + t239, -t194 * t251 - t240, t117, t271, -t316, t101, 0, t270 - t322, t269 + t323, t30, t22, t28, t27, -t54, t294 + (t189 * t214 - t317) * qJD(3) + t7 * qJD(4) + t14 * qJD(5), t291 + (t192 * t214 + t318) * qJD(3) + t8 * qJD(4) + t12 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, t271, -t316, t101, 0, -t233 - t322, -t232 + t323, t30, t22, t28, t27, -t54, t290 + t7 * qJD(3) + (t189 * t218 - t317) * qJD(4) + t18 * qJD(5), t289 + t8 * qJD(3) + (t192 * t218 + t318) * qJD(4) + t16 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t312, t215 * t321 + t266, t189 * t213, t205, t96, qJD(2) * t48 + qJD(3) * t14 + qJD(4) * t18 - qJD(5) * t35 + t286, qJD(2) * t38 + qJD(3) * t12 + qJD(4) * t16 + qJD(5) * t34 + t287; 0, 0, 0, 0, -qJD(1), -t264, 0, 0, 0, 0, 0, -t254, -t252, 0, 0, 0, 0, 0, -t256, t257, 0, 0, 0, 0, 0, -qJD(5) * t47 - t237, qJD(5) * t37 + t238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t253, -t251, 0, 0, 0, 0, 0, -t316, t101, 0, 0, 0, 0, 0, t19, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, t101, 0, 0, 0, 0, 0, t19, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t234 - t274 + t319, t248 * t82 + t235 + t275; 0, 0, 0, 0, 0, 0, t231, -t255, 0, 0, 0, -t239, t240, -t117, -t271, 0, 0, 0, -t270, -t269, t36, t44, t33, t32, t54, qJD(4) * t6 - qJD(5) * t13 - t294, qJD(4) * t9 + qJD(5) * t11 - t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t244, -pkin(3) * t227, t178, -t170, 0, 0, 0, t182 * t260 - t192 * t244, t182 * t259 + t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, (-t228 - t227) * pkin(3), t178, -t170, 0, 0, 0, t128 * qJD(5) - t192 * t219 + t288, qJD(5) * t129 + t173 - t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, -t60, t58, t57, -t258, qJD(4) * t128 - t181 * t259 - t206, qJD(4) * t129 + t181 * t260 - t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t117, -t271, 0, 0, 0, t233, t232, t36, t44, t33, t32, t54, -qJD(3) * t6 - qJD(5) * t17 - t290, -qJD(3) * t9 + qJD(5) * t15 - t289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, pkin(3) * t228, t178, -t170, 0, 0, 0, -qJD(5) * t126 + t192 * t243 - t288, -qJD(5) * t127 + t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, -t170, 0, 0, 0, -pkin(4) * t260, -pkin(4) * t259; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, -t60, t58, t57, -t258, -pkin(8) * t259 - t198, pkin(8) * t260 - t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, -t201 - t266, -t117 * t189 - t248 * t79, -t117 * t192 + t248 * t75, t96, qJD(2) * t47 + qJD(3) * t13 + qJD(4) * t17 - t286, -qJD(2) * t37 - qJD(3) * t11 - qJD(4) * t15 - t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274, -t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, t60, -t70, t267, t258, qJD(4) * t126 + t206, qJD(4) * t127 + t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, t60, -t70, t267, t258, t198, t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t10;
