% Calculate vector of centrifugal and Coriolis load on the joints for
% S5RRPRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:55
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5RRPRP5_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP5_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP5_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP5_coriolisvecJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRPRP5_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRPRP5_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRPRP5_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:54:01
% EndTime: 2019-12-31 19:54:48
% DurationCPUTime: 37.84s
% Computational Cost: add. (19363->833), mult. (21125->1043), div. (0->0), fcn. (16430->8), ass. (0->474)
t963 = Icges(3,3) + Icges(4,3);
t476 = qJ(2) + pkin(8);
t446 = qJ(4) + t476;
t434 = cos(t446);
t433 = sin(t446);
t776 = Icges(5,4) * t433;
t333 = Icges(5,2) * t434 + t776;
t423 = Icges(6,5) * t433;
t562 = Icges(6,3) * t434 - t423;
t958 = t333 + t562;
t771 = Icges(6,5) * t434;
t335 = Icges(6,1) * t433 - t771;
t424 = Icges(5,4) * t434;
t337 = Icges(5,1) * t433 + t424;
t962 = t335 + t337;
t444 = sin(t476);
t445 = cos(t476);
t480 = sin(qJ(2));
t482 = cos(qJ(2));
t939 = Icges(3,5) * t482 + Icges(4,5) * t445 - Icges(3,6) * t480 - Icges(4,6) * t444;
t328 = Icges(6,3) * t433 + t771;
t481 = sin(qJ(1));
t483 = cos(qJ(1));
t235 = -Icges(6,6) * t483 + t328 * t481;
t732 = t434 * t481;
t734 = t433 * t481;
t764 = Icges(5,6) * t483;
t241 = Icges(5,4) * t732 - Icges(5,2) * t734 - t764;
t961 = -t235 + t241;
t731 = t434 * t483;
t387 = Icges(6,5) * t731;
t733 = t433 * t483;
t763 = Icges(6,6) * t481;
t236 = Icges(6,3) * t733 + t387 + t763;
t563 = -Icges(5,2) * t433 + t424;
t242 = Icges(5,6) * t481 + t483 * t563;
t960 = -t236 + t242;
t566 = Icges(6,1) * t434 + t423;
t243 = -Icges(6,4) * t483 + t481 * t566;
t388 = Icges(5,4) * t734;
t772 = Icges(5,5) * t483;
t245 = Icges(5,1) * t732 - t388 - t772;
t959 = t243 + t245;
t244 = Icges(6,4) * t481 + t483 * t566;
t338 = Icges(5,1) * t434 - t776;
t246 = Icges(5,5) * t481 + t338 * t483;
t942 = t244 + t246;
t956 = t963 * t483;
t955 = -t562 * t481 + t959;
t724 = t481 * t482;
t726 = t480 * t481;
t728 = t445 * t481;
t730 = t444 * t481;
t920 = -Icges(3,5) * t724 - Icges(4,5) * t728 + Icges(3,6) * t726 + Icges(4,6) * t730 + t956;
t941 = t481 * t963 + t939 * t483;
t954 = (Icges(5,6) - Icges(6,6)) * t434 + (Icges(6,4) + Icges(5,5)) * t433;
t944 = Icges(3,5) * t480 + Icges(4,5) * t444 + Icges(3,6) * t482 + Icges(4,6) * t445;
t765 = Icges(4,6) * t483;
t263 = Icges(4,4) * t728 - Icges(4,2) * t730 - t765;
t766 = Icges(3,6) * t483;
t308 = Icges(3,4) * t724 - Icges(3,2) * t726 - t766;
t953 = t263 * t444 + t308 * t480;
t952 = t338 + t566 - t958;
t951 = t328 - t563 - t962;
t950 = t958 * t483 - t942;
t949 = -t337 * t483 - t960;
t948 = t962 * t481 + t961;
t411 = Icges(4,4) * t730;
t773 = Icges(4,5) * t483;
t265 = Icges(4,1) * t728 - t411 - t773;
t428 = Icges(3,4) * t726;
t774 = Icges(3,5) * t483;
t310 = Icges(3,1) * t724 - t428 - t774;
t906 = -t265 * t445 - t310 * t482 + t953;
t899 = -t481 * t906 + t920 * t483;
t777 = Icges(4,4) * t444;
t360 = Icges(4,1) * t445 - t777;
t266 = Icges(4,5) * t481 + t360 * t483;
t778 = Icges(3,4) * t480;
t403 = Icges(3,1) * t482 - t778;
t311 = Icges(3,5) * t481 + t403 * t483;
t946 = -t266 * t728 - t311 * t724;
t330 = Icges(5,5) * t434 - Icges(5,6) * t433;
t238 = Icges(5,3) * t481 + t330 * t483;
t332 = Icges(6,4) * t434 + Icges(6,6) * t433;
t240 = Icges(6,2) * t481 + t332 * t483;
t945 = -t238 - t240;
t357 = Icges(4,2) * t445 + t777;
t432 = Icges(4,4) * t445;
t359 = Icges(4,1) * t444 + t432;
t400 = Icges(3,2) * t482 + t778;
t461 = Icges(3,4) * t482;
t402 = Icges(3,1) * t480 + t461;
t938 = t357 * t444 - t359 * t445 + t400 * t480 - t402 * t482;
t943 = t958 * t433 - t434 * t962;
t940 = t330 + t332;
t558 = t241 * t433 - t245 * t434;
t560 = t235 * t433 + t243 * t434;
t937 = -t558 + t560;
t475 = qJD(2) + qJD(4);
t936 = t952 * t475;
t935 = t951 * t475;
t934 = t941 * t483 + t946;
t933 = -t942 * qJD(1) + t948 * t475;
t397 = t475 * t483;
t932 = -t335 * t397 + t949 * t475 + (-t338 * t481 - t243 + t772) * qJD(1);
t396 = t475 * t481;
t931 = -t333 * t396 + t955 * t475 + (-t328 * t483 + t242 - t763) * qJD(1);
t930 = -t950 * t475 + (-t481 * t563 + t235 + t764) * qJD(1);
t723 = t482 * t483;
t727 = t445 * t483;
t829 = -t266 * t727 - t311 * t723 - t941 * t481;
t929 = -t265 * t727 - t310 * t723 + t920 * t481;
t838 = t944 * t483;
t837 = t944 * t481;
t928 = t954 * t483;
t927 = t954 * t481;
t564 = -Icges(4,2) * t444 + t432;
t264 = Icges(4,6) * t481 + t483 * t564;
t565 = -Icges(3,2) * t480 + t461;
t309 = Icges(3,6) * t481 + t483 * t565;
t926 = t264 * t444 + t309 * t480;
t913 = rSges(6,3) + qJ(5);
t898 = -t264 * t730 - t309 * t726 - t934;
t725 = t480 * t483;
t729 = t444 * t483;
t897 = -t263 * t729 - t308 * t725 - t929;
t896 = -t264 * t729 - t309 * t725 - t829;
t924 = t943 * t481 + t928;
t923 = -t943 * t483 + t927;
t922 = -t938 * t481 - t838;
t921 = -t938 * t483 + t837;
t859 = t263 * t445 + t265 * t444 + t308 * t482 + t310 * t480;
t858 = t264 * t445 + t266 * t444 + t309 * t482 + t311 * t480;
t918 = t944 * qJD(2);
t917 = t266 * t445 + t311 * t482 - t926;
t916 = t945 * qJD(1);
t915 = rSges(6,1) + pkin(4);
t717 = -t236 * t734 - t244 * t732;
t196 = t246 * t732;
t599 = t238 * t483 - t196;
t87 = -t242 * t734 - t599;
t866 = -t240 * t483 - t717 + t87;
t89 = t236 * t733 + t481 * t240 + t244 * t731;
t715 = t481 * t238 + t246 * t731;
t91 = -t242 * t733 + t715;
t864 = t89 + t91;
t914 = rSges(3,2) * t480;
t339 = pkin(4) * t433 - qJ(5) * t434;
t340 = rSges(6,1) * t433 - rSges(6,3) * t434;
t686 = t339 + t340;
t343 = rSges(6,1) * t434 + rSges(6,3) * t433;
t912 = pkin(4) * t434 + qJ(5) * t433 + t343;
t324 = t564 * qJD(2);
t325 = t360 * qJD(2);
t370 = t565 * qJD(2);
t371 = t403 * qJD(2);
t911 = -t324 * t444 + t325 * t445 - t370 * t480 + t371 * t482 + (-t357 * t445 - t359 * t444 - t400 * t482 - t402 * t480) * qJD(2) + t944 * qJD(1);
t910 = t954 * qJD(1) + t935 * t433 + t936 * t434;
t909 = -t930 * t433 + t932 * t434 - t916;
t759 = Icges(5,3) * t483;
t237 = Icges(5,5) * t732 - Icges(5,6) * t734 - t759;
t239 = -Icges(6,2) * t483 + t332 * t481;
t827 = qJD(1) * t239;
t908 = -qJD(1) * t237 + t931 * t433 + t933 * t434 - t827;
t907 = t948 * t397 + (-Icges(6,1) * t733 + t387 + t949) * t396 + t952 * qJD(1);
t905 = t941 * qJD(1);
t904 = (-Icges(5,2) * t732 - t388 + t955) * t397 + t950 * t396 + t951 * qJD(1);
t903 = t938 * qJD(1) + t939 * qJD(2);
t902 = -t943 * qJD(1) - t940 * t475;
t901 = t937 * qJD(1) + t927 * t475 + t916;
t750 = t242 * t433;
t900 = t827 + t928 * t475 + (t236 * t433 + t330 * t481 + t942 * t434 - t750 - t759) * qJD(1);
t215 = t481 * t239;
t88 = t235 * t733 + t243 * t731 + t215;
t895 = t923 * qJD(1) - t397 * t88;
t894 = t921 * qJD(1);
t533 = qJD(2) * t357;
t154 = -t483 * t533 + (-t481 * t564 + t765) * qJD(1);
t535 = qJD(2) * t359;
t156 = -t483 * t535 + (-t360 * t481 + t773) * qJD(1);
t534 = qJD(2) * t400;
t185 = -t483 * t534 + (-t481 * t565 + t766) * qJD(1);
t536 = qJD(2) * t402;
t187 = -t483 * t536 + (-t403 * t481 + t774) * qJD(1);
t893 = -t858 * qJD(2) - t154 * t444 + t156 * t445 - t185 * t480 + t187 * t482 + t905;
t155 = qJD(1) * t264 - t481 * t533;
t157 = qJD(1) * t266 - t481 * t535;
t186 = qJD(1) * t309 - t481 * t534;
t188 = qJD(1) * t311 - t481 * t536;
t892 = t920 * qJD(1) + t859 * qJD(2) + t155 * t444 - t157 * t445 + t186 * t480 - t188 * t482;
t891 = (t896 * t481 - t897 * t483) * qJD(2);
t890 = (t898 * t481 - t899 * t483) * qJD(2);
t889 = t922 * qJD(1);
t655 = qJD(5) * t483;
t381 = t433 * t655;
t646 = t434 * t397;
t660 = qJD(1) * t483;
t888 = rSges(6,2) * t660 + t913 * t646 + t381;
t887 = t906 * qJD(1) - t918 * t481 + t905;
t886 = -t918 * t483 + (-t481 * t939 - t917 + t956) * qJD(1);
t84 = -t239 * t483 + t481 * t560;
t885 = t924 * qJD(1) + t397 * t84;
t884 = 0.2e1 * qJD(2);
t883 = t481 * t901 + t908 * t483;
t882 = -t481 * t900 + t909 * t483;
t881 = t481 * t908 - t901 * t483;
t880 = t481 * t909 + t900 * t483;
t537 = t558 * t481;
t752 = t237 * t483;
t86 = -t537 - t752;
t879 = t866 * t396 - t397 * t86 - t885;
t716 = -t481 * t237 - t245 * t731;
t90 = -t241 * t733 - t716;
t878 = t864 * t396 - t397 * t90 + t895;
t877 = t889 + t890;
t876 = t891 + t894;
t875 = -t481 * t902 + t910 * t483;
t874 = t481 * t910 + t902 * t483;
t873 = t933 * t433 - t931 * t434;
t872 = t932 * t433 + t930 * t434;
t871 = t481 * t903 + t911 * t483;
t870 = t481 * t911 - t903 * t483;
t869 = qJD(2) * t906 - t155 * t445 - t157 * t444 - t186 * t482 - t188 * t480;
t868 = t917 * qJD(2) + t154 * t445 + t156 * t444 + t185 * t482 + t187 * t480;
t867 = t84 + t86;
t865 = t88 + t90;
t276 = rSges(4,1) * t728 - rSges(4,2) * t730 - t483 * rSges(4,3);
t463 = t481 * rSges(4,3);
t277 = rSges(4,1) * t727 - rSges(4,2) * t729 + t463;
t554 = t276 * t481 + t277 * t483;
t472 = t483 * pkin(6);
t414 = pkin(1) * t481 - t472;
t479 = -qJ(3) - pkin(6);
t437 = t483 * t479;
t471 = t482 * pkin(2);
t438 = t471 + pkin(1);
t672 = t481 * t438 + t437;
t258 = t414 - t672;
t470 = t481 * pkin(6);
t415 = t483 * pkin(1) + t470;
t417 = t483 * t438;
t586 = -t479 * t481 + t417;
t259 = t586 - t415;
t708 = -t481 * t258 + t483 * t259;
t527 = t554 + t708;
t658 = qJD(2) * t483;
t659 = qJD(2) * t481;
t709 = -t258 * t659 + t259 * t658;
t83 = qJD(2) * t554 + t709;
t863 = qJD(2) * t527 + t83;
t583 = qJD(1) * t475;
t367 = t481 * t583;
t484 = qJD(2) ^ 2;
t796 = pkin(3) * t445;
t542 = (-t471 - t796) * t484;
t657 = qJD(5) * t475;
t514 = t434 * t657 + t542;
t656 = qJD(5) * t481;
t622 = t433 * t656;
t797 = pkin(3) * t444;
t389 = t659 * t797;
t798 = pkin(2) * t480;
t420 = t659 * t798;
t649 = qJD(1) * qJD(3);
t673 = qJD(1) * t420 + t483 * t649;
t636 = qJD(1) * t389 + t673;
t661 = qJD(1) * t481;
t425 = t479 * t661;
t378 = -t797 - t798;
t361 = t378 * qJD(2);
t474 = -pkin(7) + t479;
t419 = t474 * t661;
t587 = t361 * t481 - t419;
t372 = t438 + t796;
t679 = t372 - t438;
t118 = t660 * t679 + t420 + t425 + t587;
t448 = qJD(3) * t483;
t670 = t420 + t448;
t633 = t425 + t670;
t793 = pkin(1) - t438;
t180 = (-t483 * t793 - t470) * qJD(1) - t633;
t375 = t415 * qJD(1);
t719 = -t180 - t375;
t645 = -t118 + t719;
t609 = pkin(4) * t475 - qJD(5);
t735 = t433 * t475;
t712 = -qJ(5) * t735 - t343 * t475 - t434 * t609;
t297 = t340 * t481;
t465 = t481 * rSges(6,2);
t720 = (pkin(4) * t660 + qJ(5) * t396) * t434 + (qJ(5) * t660 - t481 * t609) * t433 - t475 * t297 + (t343 * t483 + t465) * qJD(1);
t18 = t712 * t397 + t686 * t367 + t514 * t483 + (-t622 + t645 - t720) * qJD(1) + t636;
t701 = t915 * t731 + t913 * t733 + t465;
t346 = t483 * t372;
t668 = -t474 + t479;
t193 = t481 * t668 + t346 - t417;
t718 = -t193 - t259;
t578 = -t701 + t718;
t634 = -t389 - t670;
t61 = t622 - t686 * t396 + (t415 - t578) * qJD(1) + t634;
t862 = (qJD(1) * t61 + t18) * t483;
t861 = t959 * t433 + t961 * t434;
t860 = t942 * t433 + t960 * t434;
t525 = -t397 * t433 - t434 * t661;
t632 = t433 * t661;
t721 = t915 * t525 - t913 * t632 + t888;
t469 = t483 * rSges(6,2);
t702 = t481 * t912 - t469;
t694 = t339 * t481 + t297;
t851 = t686 * t483;
t846 = t433 * t904 + t434 * t907;
t519 = t308 * t483 - t309 * t481;
t520 = t263 * t483 - t264 * t481;
t810 = t481 * (-t357 * t483 + t266) - t483 * (-Icges(4,2) * t728 + t265 - t411);
t811 = t481 * (-t400 * t483 + t311) - t483 * (-Icges(3,2) * t724 + t310 - t428);
t845 = -t444 * t810 + t520 * t445 - t480 * t811 + t519 * t482;
t674 = t402 + t565;
t675 = -t400 + t403;
t682 = t359 + t564;
t683 = -t357 + t360;
t844 = (-t444 * t682 + t445 * t683 - t480 * t674 + t482 * t675) * qJD(1);
t843 = t940 * qJD(1) - t928 * t396 + t927 * t397;
t842 = -qJD(1) * t851 - t396 * t912 + t434 * t656;
t841 = t939 * qJD(1);
t631 = t444 * t661;
t840 = pkin(3) * t631;
t839 = t397 * t912 - t434 * t655 + t686 * t661;
t611 = t378 + t798;
t283 = t611 * t483;
t648 = pkin(2) * t725;
t836 = (t283 - t648) * qJD(1);
t379 = qJD(1) * t414;
t832 = qJD(1) * t258 - t379;
t831 = t920 + t926;
t447 = qJD(3) * t481;
t722 = t483 * t361;
t828 = t722 + t447;
t684 = -t481 * t372 - t483 * t474;
t192 = t672 + t684;
t825 = qJD(1) * t192 + t832;
t422 = qJD(5) * t433;
t812 = t396 * t694 + t397 * t851 - t422;
t807 = t367 / 0.2e1;
t368 = t483 * t583;
t806 = t368 / 0.2e1;
t805 = -t396 / 0.2e1;
t804 = t396 / 0.2e1;
t803 = -t397 / 0.2e1;
t802 = t397 / 0.2e1;
t801 = t481 / 0.2e1;
t800 = -t483 / 0.2e1;
t795 = -qJD(1) / 0.2e1;
t794 = qJD(1) / 0.2e1;
t792 = rSges(3,1) * t482;
t791 = rSges(4,1) * t445;
t790 = rSges(5,1) * t434;
t789 = rSges(4,2) * t445;
t464 = t481 * rSges(3,3);
t462 = t481 * rSges(5,3);
t341 = rSges(5,1) * t433 + rSges(5,2) * t434;
t250 = rSges(5,1) * t732 - rSges(5,2) * t734 - t483 * rSges(5,3);
t512 = -t397 * t341 + t828;
t698 = t258 - t414;
t640 = t192 + t698;
t77 = (-t250 + t640) * qJD(1) + t512;
t785 = t77 * t341;
t363 = rSges(4,1) * t444 + t789;
t613 = -t363 - t798;
t574 = t613 * t483;
t546 = qJD(2) * t574;
t524 = t447 + t546;
t94 = (-t276 + t698) * qJD(1) + t524;
t784 = t94 * t363;
t580 = -t192 * t659 + t193 * t658 + t709;
t43 = -qJD(5) * t434 + t396 * t702 + t397 * t701 + t580;
t757 = qJD(1) * t43;
t669 = rSges(3,2) * t726 + t483 * rSges(3,3);
t320 = rSges(3,1) * t724 - t669;
t405 = rSges(3,1) * t480 + rSges(3,2) * t482;
t627 = t405 * t658;
t164 = -t627 + (-t320 - t414) * qJD(1);
t755 = t164 * t481;
t754 = t164 * t483;
t628 = t405 * t659;
t321 = rSges(3,1) * t723 - rSges(3,2) * t725 + t464;
t690 = t321 + t415;
t165 = qJD(1) * t690 - t628;
t354 = t405 * t483;
t753 = t165 * t354;
t252 = rSges(5,1) * t731 - rSges(5,2) * t733 + t462;
t711 = t481 * t250 + t483 * t252;
t282 = t611 * t481;
t707 = t282 * t659 + t283 * t658;
t697 = -t259 - t277;
t678 = rSges(5,2) * t632 + rSges(5,3) * t660;
t677 = rSges(4,2) * t631 + rSges(4,3) * t660;
t671 = rSges(3,3) * t660 + t661 * t914;
t650 = qJD(1) * qJD(2);
t647 = qJD(2) * t471;
t149 = rSges(5,1) * t525 - rSges(5,2) * t646 + t678;
t298 = t341 * t481;
t344 = -rSges(5,2) * t433 + t790;
t151 = -t475 * t298 + (t344 * t483 + t462) * qJD(1);
t644 = t483 * t149 + t481 * t151 + t250 * t660;
t443 = pkin(6) * t660;
t626 = t480 * t658;
t584 = pkin(2) * t626;
t179 = -t584 - t443 + t447 + (t481 * t793 - t437) * qJD(1);
t620 = t483 * t650;
t643 = t179 * t658 + t180 * t659 - t258 * t620;
t642 = t483 * t179 + t481 * t180 - t258 * t660;
t366 = qJD(1) * (-pkin(1) * t661 + t443);
t641 = qJD(1) * t179 + t481 * t649 + t366;
t639 = -t252 + t718;
t629 = t363 * t659;
t625 = t482 * t658;
t621 = -pkin(1) - t792;
t619 = t661 / 0.2e1;
t618 = t660 / 0.2e1;
t617 = -t659 / 0.2e1;
t614 = t658 / 0.2e1;
t364 = -rSges(4,2) * t444 + t791;
t612 = -t364 - t471;
t608 = t480 * (-t481 ^ 2 - t483 ^ 2);
t302 = t341 * t483;
t598 = -t396 * t298 - t302 * t397;
t596 = -t237 + t750;
t589 = -qJD(1) * t302 - t344 * t396;
t585 = qJD(1) * t298 - t397 * t344;
t117 = t584 + t722 + (-t481 * t679 + t483 * t668) * qJD(1);
t582 = qJD(1) * t117 + t641;
t579 = -t481 * t192 + t483 * t193 + t708;
t577 = t481 * t702 + t483 * t701;
t572 = t792 - t914;
t503 = -t397 * t686 + t381 + t828;
t60 = (t640 - t702) * qJD(1) + t503;
t571 = -t481 * t61 - t483 * t60;
t78 = -t341 * t396 + (t415 - t639) * qJD(1) + t634;
t570 = -t481 * t78 - t483 * t77;
t561 = -t165 * t481 - t754;
t547 = -t341 + t378;
t545 = t483 * t117 + t481 * t118 - t192 * t660 + t642;
t544 = t481 * t720 + t483 * t721 + t660 * t702;
t326 = t364 * qJD(2);
t543 = -qJD(2) * t326 - t471 * t484;
t353 = t405 * t481;
t318 = t363 * t481;
t538 = t378 - t686;
t160 = (t320 * t481 + t321 * t483) * qJD(2);
t528 = -qJD(2) * t796 - t647;
t279 = t344 * t475;
t523 = -t279 + t528;
t517 = t528 + t712;
t513 = -t372 - t912;
t511 = t481 * t650 * t718 + t117 * t658 + t118 * t659 - t192 * t620 + t643;
t490 = (t481 * t866 - t483 * t867) * t807 + (t481 * t864 - t483 * t865) * t806 + (t481 * t843 + t483 * t846) * t805 + (t883 * t483 + t882 * t481 + (t481 * t865 + t483 * t864) * qJD(1)) * t804 + (t881 * t483 + t880 * t481 + (t481 * t867 + t483 * t866) * qJD(1)) * t803 + (t481 * t846 - t483 * t843) * t802 + (qJD(1) * t875 + t367 * t865 + t368 * t864 + t396 * t882 + t397 * t883) * t801 + (qJD(1) * t874 + t367 * t867 + t368 * t866 + t396 * t880 + t397 * t881) * t800 + (t433 * t907 - t434 * t904) * t795 + (t873 * t483 + t872 * t481 + (t481 * t861 + t483 * t860) * qJD(1)) * t794 + t879 * t619 + t878 * t618;
t373 = t572 * qJD(2);
t319 = t363 * t483;
t191 = -qJD(2) * t353 + (t483 * t572 + t464) * qJD(1);
t190 = -rSges(3,2) * t625 + (-t482 * t661 - t626) * rSges(3,1) + t671;
t159 = -qJD(2) * t318 + (t364 * t483 + t463) * qJD(1);
t158 = -t658 * t789 + (-t444 * t658 - t445 * t661) * rSges(4,1) + t677;
t101 = -t373 * t658 + (-t191 - t375 + t628) * qJD(1);
t100 = -t373 * t659 + t366 + (t190 - t627) * qJD(1);
t95 = -t629 + (t415 - t697) * qJD(1) - t670;
t72 = t543 * t483 + (-t159 + t629 + t719) * qJD(1) + t673;
t71 = t543 * t481 + (t158 + t546) * qJD(1) + t641;
t62 = t250 * t396 + t252 * t397 + t580;
t42 = -t279 * t397 + t341 * t367 + t483 * t542 + (-t151 + t645) * qJD(1) + t636;
t41 = -t279 * t396 - t341 * t368 + t481 * t542 + (t149 + t722) * qJD(1) + t582;
t17 = t712 * t396 - t686 * t368 + t514 * t481 + ((t361 + t422) * t483 + t721) * qJD(1) + t582;
t10 = t149 * t397 + t151 * t396 + t250 * t368 - t252 * t367 + t511;
t9 = -t367 * t701 + t368 * t702 + t396 * t720 + t397 * t721 + t433 * t657 + t511;
t1 = [((t87 + (t241 * t483 + t242 * t481) * t433 + t599 + t716) * t397 + (-t245 * t732 + t752 + t86 + (t241 * t481 - t242 * t483) * t433 + t715 + t89) * t396 + t895) * t802 + ((((t941 + t953) * t483 + t898 + t929 + t946) * t483 - t829 * t481) * qJD(2) + t894) * t614 + (-t938 * qJD(2) + t324 * t445 + t325 * t444 + t370 * t482 + t371 * t480 + t936 * t433 - t935 * t434) * qJD(1) + (-(-qJD(1) * t702 + t503 - t60 + t825) * t61 + t18 * (t469 + t684) + t60 * (t419 + t448) + t17 * (t346 + t701) + t61 * (t828 + t888) + (-t61 * t915 * t735 + (-t61 * t474 + t513 * t60) * qJD(1)) * t483 + (-t17 * t474 - t60 * t361 + (-t475 * t60 * t913 - t18 * t915) * t434 + (-t18 * t913 + t60 * (rSges(6,1) * t475 + t609)) * t433 + (-t60 * rSges(6,2) + t513 * t61) * qJD(1)) * t481) * m(6) + (-(-qJD(1) * t250 + t512 - t77 + t825) * t78 + t42 * (-t250 + t684) + t77 * (t448 - t587) + t41 * (-t474 * t481 + t252 + t346) + t78 * (t678 + t828) + (-t302 * t78 + t481 * t785) * t475 + ((-t77 * rSges(5,3) + t78 * (-t372 - t790)) * t481 + (t77 * (-t344 - t372) - t78 * t474) * t483) * qJD(1)) * m(5) + (-(-qJD(1) * t276 + t524 + t832 - t94) * t95 + t72 * (-t276 - t672) + t94 * t633 + t71 * (t277 + t586) + t95 * (t447 + t677) + (t481 * t784 + t574 * t95) * qJD(2) + ((-t94 * rSges(4,3) + t95 * (-t438 - t791)) * t481 + (t94 * (-t364 - t438) - t95 * t479) * t483) * qJD(1)) * m(4) + (t101 * (t481 * t621 + t472 + t669) + t100 * t690 + t165 * (t443 + t671) + (t405 * t755 - t753) * qJD(2) + ((-pkin(1) - t572) * t754 + (t164 * (-rSges(3,3) - pkin(6)) + t165 * t621) * t481) * qJD(1) - (-qJD(1) * t320 - t164 - t379 - t627) * t165) * m(3) + (t861 - t924) * t807 + (t860 + t923) * t806 + ((t596 * t483 - t537 - t715 + t91) * t397 + (t481 * t596 - t196 - t215 + t717 + (-t937 - t945) * t483 + t865) * t396 + t879 + t885) * t805 + (t872 + t875) * t804 + (((t483 * t831 + t829 + t896) * t483 + (t481 * t831 + t897 + t934) * t481) * qJD(2) + t877 - t889) * t617 + (t868 + t871) * t659 / 0.2e1 + (-t873 + t874 + t878) * t803 - (-t869 + t870 + t876) * t658 / 0.2e1 + ((t859 + t922) * t481 + (t858 + t921) * t483) * t650 / 0.2e1; t490 + ((t520 * t444 + t445 * t810 + t519 * t480 + t482 * t811) * qJD(2) + (t444 * t683 + t445 * t682 + t480 * t675 + t482 * t674) * qJD(1)) * t795 + (t869 * t483 + t868 * t481 + (t859 * t481 + t858 * t483) * qJD(1)) * t794 + ((-t659 * t838 + t841) * t481 + ((t481 * t837 + t845) * qJD(2) + t844) * t483) * t617 + ((-t658 * t837 - t841) * t483 + ((t483 * t838 + t845) * qJD(2) + t844) * t481) * t614 + (-t43 * (t707 - t812) - (t571 * t796 + (t43 * t608 + t482 * t571) * pkin(2)) * qJD(2) + t9 * (t577 + t579) + t43 * (t544 + t545) + t538 * t862 + (t17 * t538 + t578 * t757) * t481 + (t517 * t481 - t836 - t842) * t61 + (-(-t282 + t694) * qJD(1) + t517 * t483 + t839 + t840) * t60) * m(6) + (t10 * (t579 + t711) + t62 * (t545 + t644) + (qJD(1) * t78 + t42) * t547 * t483 + (t41 * t547 + t78 * t523 + (t62 * t639 + t785) * qJD(1)) * t481 - t78 * (t589 + t836) - t62 * (t598 + t707) - (t570 * t796 + (t482 * t570 + t608 * t62) * pkin(2)) * qJD(2) + (qJD(1) * t282 + t523 * t483 - t585 + t840) * t77) * m(5) + (t72 * t574 + (t158 * t658 + t159 * t659 + t643) * t527 + t83 * t642 + (-t94 * t326 + t83 * t158 + (t276 * t863 + t613 * t95) * qJD(1)) * t483 + (t71 * t613 + t95 * (-t326 - t647) + t83 * t159 + (t697 * t863 + t784) * qJD(1)) * t481 - (t94 * t318 + t95 * (-t319 - t648)) * qJD(1) - ((-t83 * t319 + t612 * t94) * t483 + (-t83 * t318 + t612 * t95) * t481) * qJD(2) + (-t83 * t608 * qJD(2) - t94 * t625) * pkin(2)) * m(4) + (0.2e1 * t160 * (t190 * t483 + t191 * t481 + (t320 * t483 - t321 * t481) * qJD(1)) + t561 * t373 + (-t100 * t481 - t101 * t483 + (-t165 * t483 + t755) * qJD(1)) * t405 - (t164 * t353 - t753) * qJD(1) - (t160 * (-t353 * t481 - t354 * t483) + t561 * t572) * qJD(2)) * m(3) + (t871 * qJD(1) + ((t896 * qJD(1) + t892 * t483) * t483 + (t886 * t481 + t897 * qJD(1) + (-t887 + t893) * t483) * t481) * t884) * t801 + (t870 * qJD(1) + ((t898 * qJD(1) + t887 * t483) * t483 + (t893 * t481 + t899 * qJD(1) + (-t886 + t892) * t483) * t481) * t884) * t800 + (t877 + t890) * t619 + (t876 + t891) * t618; 0.2e1 * (t17 * t800 + t18 * t801) * m(6) + 0.2e1 * (t41 * t800 + t42 * t801) * m(5) + 0.2e1 * (t71 * t800 + t72 * t801) * m(4); t490 + (t9 * t577 + (t61 * t712 - t701 * t757) * t481 - t61 * t842 + (-t17 * t481 - t862) * t686 + (-qJD(1) * t694 + t483 * t712 + t839) * t60 + (t544 + t812) * t43) * m(6) + (-t585 * t77 - t589 * t78 + t10 * t711 + t570 * t279 + (-t41 * t481 - t42 * t483 + (t481 * t77 - t483 * t78) * qJD(1)) * t341 + (-t252 * t661 - t598 + t644) * t62) * m(5); (t17 * t734 + t18 * t733 + t60 * t646 + (-t397 * t60 - t9) * t434 + (t735 - (t396 * t481 + t397 * t483) * t433) * t43) * m(6);];
tauc = t1(:);
