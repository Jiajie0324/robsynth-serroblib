% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:03
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPRR9_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR9_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR9_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPPRR9_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:02:53
% EndTime: 2019-12-31 18:02:57
% DurationCPUTime: 2.51s
% Computational Cost: add. (2448->242), mult. (4382->368), div. (0->0), fcn. (4037->6), ass. (0->198)
t166 = sin(qJ(5));
t298 = 0.2e1 * t166;
t169 = cos(qJ(4));
t163 = t169 ^ 2;
t297 = t163 / 0.2e1;
t164 = sin(pkin(8));
t167 = sin(qJ(4));
t266 = t167 * t169;
t296 = t266 * t164;
t225 = t167 * qJD(5);
t154 = t166 * t225;
t168 = cos(qJ(5));
t224 = t169 * qJD(4);
t295 = -t168 * t224 + t154;
t294 = -pkin(1) - pkin(2);
t165 = cos(pkin(8));
t262 = t168 * t165;
t268 = t166 * t169;
t113 = t164 * t268 + t262;
t293 = -t113 / 0.2e1;
t292 = t113 / 0.2e1;
t160 = t166 ^ 2;
t291 = t160 / 0.2e1;
t161 = t167 ^ 2;
t290 = t161 / 0.2e1;
t289 = t168 / 0.2e1;
t288 = -t169 / 0.2e1;
t287 = t167 * pkin(4);
t286 = t169 * pkin(4);
t285 = t169 * pkin(7);
t162 = t168 ^ 2;
t261 = t168 * t169;
t270 = t166 * t165;
t183 = t164 * t261 - t270;
t173 = t183 * t168;
t202 = -t268 / 0.2e1;
t22 = t113 * t202 + t173 * t288 + (t297 + (t162 / 0.2e1 + t291 - 0.1e1 / 0.2e1) * t161) * t164;
t284 = t22 * qJD(4);
t184 = -t164 * qJ(2) + t165 * t294;
t123 = pkin(3) - t184;
t194 = t167 * pkin(7) + t286;
t172 = t123 + t194;
t246 = qJ(2) * t165 + t164 * t294;
t124 = -pkin(6) + t246;
t221 = t124 * t268;
t58 = -t168 * t172 + t221;
t283 = t58 * t169;
t218 = t124 * t261;
t59 = t166 * t172 + t218;
t282 = t59 * t167;
t281 = t59 * t169;
t269 = t166 * t167;
t108 = t124 * t269;
t138 = t285 - t287;
t265 = t168 * t138;
t69 = t108 + t265;
t280 = t69 * t167;
t267 = t167 * t168;
t219 = t124 * t267;
t272 = t166 * t138;
t70 = -t219 + t272;
t279 = t70 * t167;
t8 = (t280 - t283) * t168 + (t279 + t281) * t166;
t278 = t8 * qJD(1);
t11 = t69 * t169 + (t58 - 0.2e1 * t221) * t167;
t277 = t11 * qJD(1);
t12 = -t282 + (t70 + 0.2e1 * t219) * t169;
t276 = t12 * qJD(1);
t275 = t161 * t124;
t274 = t162 * t169;
t273 = t165 * t164;
t271 = t166 * t164;
t264 = t168 * t161;
t263 = t168 * t164;
t260 = t169 * t165;
t170 = t261 * t293 + t183 * t268 / 0.2e1;
t220 = t166 * t260;
t114 = -t220 + t263;
t115 = t168 * t260 + t271;
t182 = t115 * t289 - t114 * t166 / 0.2e1;
t20 = t170 - t182;
t259 = t20 * qJD(1);
t23 = -t166 * t275 - t283;
t258 = t23 * qJD(1);
t24 = -t124 * t264 - t281;
t257 = t24 * qJD(1);
t199 = -t260 / 0.2e1;
t31 = (t199 + t182) * t167;
t256 = t31 * qJD(1);
t120 = (t161 + t163) * t165;
t32 = t120 * t124 + t123 * t164;
t255 = t32 * qJD(1);
t223 = -0.1e1 / 0.2e1 - t161 / 0.2e1;
t49 = -t220 + (t297 - t223) * t263;
t254 = t49 * qJD(1);
t200 = -t262 / 0.2e1;
t50 = (t200 + t293) * t169 + t223 * t271;
t253 = t50 * qJD(1);
t56 = (t114 * t168 + t115 * t166) * t167;
t252 = t56 * qJD(1);
t187 = t164 * t202 + t292;
t61 = (t262 / 0.2e1 + t187) * t167;
t251 = t61 * qJD(1);
t64 = t165 * t269;
t250 = t64 * qJD(1);
t71 = -t164 * t184 + t165 * t246;
t249 = t71 * qJD(1);
t74 = t114 * t169 - t161 * t270;
t248 = t74 * qJD(1);
t75 = t115 * t169 + t161 * t262;
t247 = t75 * qJD(1);
t245 = t160 + t162;
t149 = t162 - t160;
t150 = t163 - t161;
t244 = qJ(2) * qJD(1);
t243 = qJD(1) * t169;
t242 = qJD(4) * t164;
t241 = qJD(4) * t166;
t240 = qJD(4) * t168;
t239 = qJD(5) * t166;
t238 = qJD(5) * t168;
t237 = qJD(5) * t169;
t116 = (t291 - t162 / 0.2e1) * t167;
t236 = t116 * qJD(5);
t235 = t120 * qJD(1);
t126 = t150 * t166;
t234 = t126 * qJD(1);
t127 = t163 * t168 - t264;
t233 = t127 * qJD(1);
t232 = t150 * qJD(1);
t231 = t164 * qJD(1);
t230 = t164 * qJD(2);
t229 = t165 * qJD(1);
t228 = t165 * qJD(2);
t227 = t167 * qJD(1);
t226 = t167 * qJD(4);
t222 = -t287 / 0.2e1;
t217 = t168 * t227;
t216 = t166 * t237;
t215 = t168 * t237;
t214 = t169 * t229;
t213 = t166 * t226;
t212 = t166 * t238;
t211 = t166 * t240;
t210 = t167 * t224;
t209 = t164 * t227;
t208 = t164 * t226;
t207 = t165 * t227;
t153 = t169 * t227;
t206 = t168 * t226;
t204 = t169 * t231;
t203 = -t271 / 0.2e1;
t201 = -t263 / 0.2e1;
t198 = t245 * t167;
t197 = qJD(5) + t243;
t196 = t161 * t212;
t195 = t166 * t206;
t6 = (t279 / 0.2e1 + t281 / 0.2e1) * t168 + (-t280 / 0.2e1 + t283 / 0.2e1) * t166 + (t290 - t163 / 0.2e1) * t124;
t9 = t124 ^ 2 * t266 - t58 * t69 + t59 * t70;
t193 = t9 * qJD(1) + t6 * qJD(3);
t192 = -t69 * t166 + t70 * t168;
t10 = -t114 * t58 + t115 * t59 + t165 * t275;
t191 = qJD(1) * t10 + qJD(3) * t31;
t190 = t197 * t168;
t189 = qJD(1) * t123 - t228;
t188 = t285 / 0.2e1 + t222;
t180 = t138 / 0.2e1 + t188;
t73 = t180 * t168;
t186 = pkin(4) * t241 + qJD(1) * t73;
t72 = t180 * t166;
t185 = pkin(4) * t240 - qJD(1) * t72;
t181 = t167 * t190;
t80 = qJD(1) * t116 + t211;
t76 = qJD(1) * t166 * t264 - qJD(4) * t116;
t125 = t149 * t161;
t179 = -qJD(1) * t125 + 0.2e1 * t195;
t178 = qJD(4) * t149 + t217 * t298;
t177 = t166 * t224 + t168 * t225;
t176 = t182 * pkin(7);
t171 = -t70 * t183 / 0.2e1 + t69 * t292 - t124 * t296;
t2 = t176 + (-t165 * pkin(4) / 0.2e1 + (t59 * t289 + t58 * t166 / 0.2e1) * t164) * t167 + t171;
t30 = (t113 * t269 + t167 * t173 - t296) * t164;
t175 = -t2 * qJD(1) - t30 * qJD(2) - t22 * qJD(3);
t82 = (-0.1e1 + t245) * t266;
t174 = t6 * qJD(1) - t22 * qJD(2) + t82 * qJD(3);
t157 = t160 * t169;
t155 = -t226 / 0.2e1;
t137 = t161 * t273;
t119 = t153 + t225 / 0.2e1;
t62 = (t187 + t200) * t167;
t52 = t183 * t288 + t161 * t201 + t166 * t199 + t263 / 0.2e1;
t51 = t168 * t199 + t169 * t292 + t271 * t290 + t203;
t48 = t108 + t265 / 0.2e1 - t188 * t168;
t47 = t219 - t272 / 0.2e1 + t188 * t166;
t19 = t170 + t182;
t3 = t167 * t203 * t58 + t165 * t222 + t201 * t282 - t171 + t176;
t1 = qJD(2) * t31 + qJD(4) * t6;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), 0, 0, 0, 0, 0, 0, t230, t228, 0, t71 * qJD(2), t210, t150 * qJD(4), 0, -t210, 0, 0, -t123 * t226 + t169 * t230, -t123 * t224 - t167 * t230, -t120 * qJD(2), t32 * qJD(2), t162 * t210 - t196, -qJD(5) * t125 - 0.2e1 * t169 * t195, -qJD(4) * t127 + t167 * t216, t160 * t210 + t196, qJD(4) * t126 + t167 * t215, -t210, qJD(2) * t74 + qJD(4) * t11 + qJD(5) * t24, -qJD(2) * t75 - qJD(4) * t12 - qJD(5) * t23, qJD(2) * t56 + qJD(4) * t8, qJD(2) * t10 + qJD(4) * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t244, 0, 0, 0, 0, 0, 0, t231, t229, 0, t249, 0, 0, 0, 0, 0, 0, t204, -t209, -t235, t255 + (t137 + (t163 - 0.1e1) * t273) * qJD(2), 0, 0, 0, 0, 0, 0, qJD(4) * t62 + qJD(5) * t52 + t248, qJD(5) * t51 - t247, qJD(4) * t19 + t252, (-t113 * t114 + t115 * t183 + t137) * qJD(2) + t3 * qJD(4) + t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, t232, -t224, -t153, t226, 0, -t123 * t227 - t124 * t224, -t123 * t243 + t124 * t226, 0, 0, t236 + (t162 * t227 - t211) * t169, (t157 - t274) * qJD(4) + (qJD(5) - t243) * t267 * t298, -t213 - t233, -t236 + (t160 * t227 + t211) * t169, -t206 + t234, -t119, t277 + t62 * qJD(2) + (t166 * t194 - t218) * qJD(4) + t48 * qJD(5), -t276 + (t168 * t194 + t221) * qJD(4) + t47 * qJD(5), qJD(2) * t19 + qJD(4) * t192 + t278, t3 * qJD(2) + (pkin(7) * t192 - t124 * t286) * qJD(4) + t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, t179, t153 * t166 + t154, t76, t181, t155, qJD(2) * t52 + qJD(4) * t48 - qJD(5) * t59 + t257, qJD(2) * t51 + qJD(4) * t47 + qJD(5) * t58 - t258, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t244, 0, 0, 0, 0, 0, 0, -t231, -t229, 0, -t249, 0, 0, 0, 0, 0, 0, t165 * t226 - t204, t165 * t224 + t209, t235, -t255, 0, 0, 0, 0, 0, 0, qJD(4) * t61 - qJD(5) * t49 - t248, -qJD(4) * t64 - qJD(5) * t50 + t247, qJD(4) * t20 - t252, -qJD(4) * t2 - t191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t30 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t256 - t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t164 * t224 + t207, t208 + t214, 0, 0, 0, 0, 0, 0, 0, 0, t164 * t295 + t251, t164 * t177 - t250, -t198 * t242 + t259, (-pkin(7) * t198 - t286) * t242 + t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t183 + t166 * t208 - t254, qJD(5) * t113 + t164 * t206 - t253, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256 - t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t226, -t224, 0, 0, 0, 0, 0, 0, 0, 0, -t206 - t216, t213 - t215, (t157 + t274) * qJD(4), (t245 * t285 - t287) * qJD(4) + t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, t295, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t153, -t232, 0, t153, 0, 0, t189 * t167, t189 * t169, 0, 0, -t153 * t162 + t236, t181 * t298, t215 + t233, -t153 * t160 - t236, -t216 - t234, t119, -qJD(2) * t61 - qJD(5) * t73 - t277, qJD(2) * t64 + qJD(5) * t72 + t276, -qJD(2) * t20 - t278, qJD(2) * t2 - t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t207, -t214, 0, 0, 0, 0, 0, 0, 0, 0, -t251, t250, -t259, -t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t174; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212, t149 * qJD(5), 0, -t212, 0, 0, -pkin(4) * t239, -pkin(4) * t238, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, t178, t190, -t80, -t197 * t166, t227 / 0.2e1, -pkin(7) * t238 - t186, pkin(7) * t239 - t185, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, -t179, (-t166 * t227 - t240) * t169, -t76, (-t217 + t241) * t169, t155, qJD(2) * t49 + qJD(4) * t73 - t257, qJD(2) * t50 - qJD(4) * t72 + t258, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t253, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t80, -t178, -t168 * t243, t80, t166 * t243, -t227 / 0.2e1, t186, t185, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t4;
