% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:40
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR14_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR14_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR14_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRPRR14_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:38:44
% EndTime: 2019-12-31 20:39:19
% DurationCPUTime: 24.38s
% Computational Cost: add. (24090->836), mult. (58143->1177), div. (0->0), fcn. (64768->10), ass. (0->604)
t577 = sin(qJ(5));
t576 = cos(pkin(10));
t567 = -pkin(3) * t576 - pkin(2);
t574 = sin(pkin(10));
t578 = sin(qJ(4));
t924 = cos(qJ(4));
t764 = t924 * t576;
t538 = t574 * t578 - t764;
t765 = t924 * t574;
t856 = t578 * t576;
t541 = t765 + t856;
t691 = pkin(4) * t538 - pkin(9) * t541;
t623 = t567 + t691;
t919 = pkin(8) + qJ(3);
t553 = t919 * t576;
t715 = t919 * t574;
t479 = t924 * t553 - t578 * t715;
t580 = cos(qJ(5));
t847 = t580 * t479;
t297 = t577 * t623 + t847;
t575 = sin(pkin(5));
t581 = cos(qJ(2));
t579 = sin(qJ(2));
t914 = cos(pkin(5));
t767 = pkin(1) * t914;
t702 = t579 * t767;
t614 = t914 * qJ(3) + t702;
t913 = qJ(3) * t579;
t683 = -pkin(2) * t581 - t913;
t646 = -pkin(1) + t683;
t871 = t575 * t581;
t774 = pkin(7) * t871;
t380 = t574 * t646 * t575 + t576 * (t614 + t774);
t872 = t575 * t579;
t524 = -t574 * t872 + t914 * t576;
t313 = pkin(8) * t524 + t380;
t525 = t914 * t574 + t576 * t872;
t600 = t574 * t614;
t591 = -t525 * pkin(8) - t600;
t582 = t924 * t313 + t578 * t591;
t923 = pkin(7) * t574;
t662 = -pkin(2) * t576 - pkin(3) - t923;
t684 = t576 * (-pkin(1) - t913);
t185 = (t578 * t684 + (t578 * t662 - pkin(9)) * t581) * t575 + t582;
t532 = pkin(7) * t872 - t581 * t767;
t502 = -t914 * pkin(2) + t532;
t433 = -t524 * pkin(3) + t502;
t424 = -t924 * t524 + t578 * t525;
t501 = t924 * t525;
t857 = t578 * t524;
t960 = t501 + t857;
t692 = t424 * pkin(4) - pkin(9) * t960;
t586 = t433 + t692;
t87 = t580 * t185 + t577 * t586;
t934 = -t538 / 0.2e1;
t977 = -t424 / 0.2e1;
t641 = t297 * t977 + t87 * t934;
t533 = t702 + t774;
t769 = t574 * t871;
t554 = pkin(3) * t769;
t483 = t554 + t533;
t484 = t541 * t871;
t547 = t578 * t769;
t703 = t924 * t871;
t679 = t576 * t703;
t485 = t679 - t547;
t275 = t484 * pkin(4) - t485 * pkin(9) + t483;
t852 = t580 * t275;
t530 = (pkin(2) * t579 - qJ(3) * t581) * t575;
t431 = t576 * t530 + t574 * t532;
t361 = (-pkin(8) * t576 * t581 + pkin(3) * t579) * t575 + t431;
t325 = t578 * t361;
t432 = t574 * t530 - t576 * t532;
t376 = -pkin(8) * t769 + t432;
t373 = t924 * t376;
t242 = t373 + t325;
t222 = pkin(9) * t872 + t242;
t869 = t577 * t222;
t127 = t852 - t869;
t946 = -t127 / 0.2e1;
t984 = t641 + t946;
t973 = t580 * t424;
t403 = -t973 / 0.2e1;
t979 = t973 / 0.2e1 + t403;
t983 = qJD(5) * t979;
t974 = t577 * t424;
t732 = t974 / 0.2e1;
t736 = -t871 / 0.2e1;
t388 = t538 * t736 + t679 / 0.2e1 - t547 / 0.2e1;
t758 = qJD(1) * t871;
t700 = t424 * t758;
t982 = t388 * qJD(2) - t700;
t928 = -t574 / 0.2e1;
t387 = t703 * t928 + (t541 + t856) * t736;
t701 = t960 * t758;
t981 = t387 * qJD(2) - t701;
t818 = qJD(2) * t541;
t821 = qJD(1) * t960;
t980 = t818 + t821;
t785 = t960 * qJD(4);
t950 = t424 ^ 2;
t978 = t960 ^ 2;
t940 = t424 / 0.2e1;
t938 = t960 / 0.2e1;
t863 = t577 * t960;
t363 = t580 * t871 + t863;
t976 = t363 * t960;
t849 = t580 * t960;
t365 = -t577 * t871 + t849;
t975 = t365 * t960;
t571 = t577 ^ 2;
t572 = t580 ^ 2;
t929 = -t572 / 0.2e1;
t716 = t929 - t571 / 0.2e1;
t972 = t716 * t424;
t930 = t571 / 0.2e1;
t446 = (t930 + t929) * t541;
t536 = t541 ^ 2;
t851 = t580 * t363;
t724 = t851 / 0.2e1;
t892 = t365 * t577;
t634 = t724 + t892 / 0.2e1;
t622 = t634 * t541;
t813 = qJD(2) * t580;
t971 = t536 * t577 * t813 + qJD(1) * t622 + t446 * qJD(4);
t819 = qJD(2) * t538;
t822 = qJD(1) * t424;
t970 = t819 + t822;
t887 = t424 * t541;
t933 = t538 / 0.2e1;
t635 = t960 * t933 + t887 / 0.2e1;
t966 = t635 * qJD(4);
t969 = t970 * t484 + t966;
t968 = -t484 * t822 + t966;
t865 = t577 * t363;
t891 = t365 * t580;
t230 = -t865 / 0.2e1 + t891 / 0.2e1;
t967 = t230 * qJD(5);
t786 = t424 * qJD(4);
t965 = qJD(1) * t635 + t538 * t818;
t964 = qJD(2) * t635 + t424 * t821;
t823 = qJD(1) * t365;
t963 = qJD(2) * t622 - qJD(4) * t230 + t363 * t823;
t808 = qJD(4) * t580;
t564 = t577 * t808;
t962 = -qJD(1) * t230 + t446 * qJD(2) - t564;
t535 = t538 ^ 2;
t959 = -t536 - t535;
t775 = t536 - t535;
t954 = t622 * qJD(5);
t949 = -pkin(4) / 0.2e1;
t948 = t87 / 0.2e1;
t922 = t424 * pkin(9);
t264 = pkin(4) * t960 + t922;
t853 = t580 * t264;
t588 = (t581 * t662 + t684) * t575;
t194 = t578 * t313 - t924 * (t588 + t591);
t870 = t577 * t194;
t108 = t853 + t870;
t947 = -t108 / 0.2e1;
t184 = pkin(4) * t871 + t194;
t945 = t184 / 0.2e1;
t944 = t363 / 0.2e1;
t943 = -t365 / 0.2e1;
t942 = t365 / 0.2e1;
t556 = t580 * t872;
t859 = t577 * t485;
t434 = -t556 + t859;
t937 = -t434 / 0.2e1;
t478 = t553 * t578 + t924 * t715;
t936 = t478 / 0.2e1;
t935 = -t479 / 0.2e1;
t932 = -t541 / 0.2e1;
t931 = t541 / 0.2e1;
t927 = t577 / 0.2e1;
t926 = -t580 / 0.2e1;
t925 = t580 / 0.2e1;
t921 = t538 * pkin(9);
t920 = t541 * pkin(4);
t86 = t185 * t577 - t580 * t586;
t918 = t86 * t538;
t917 = t86 * t577;
t916 = t87 * t580;
t718 = 0.2e1 * t940;
t690 = t718 * t538;
t717 = 0.2e1 * t938;
t116 = t541 * t717 + t690;
t915 = t116 * qJD(3);
t31 = t184 * t960 - (t916 + t917) * t424;
t912 = qJD(1) * t31;
t46 = -t184 * t363 + t424 * t86;
t911 = qJD(1) * t46;
t47 = t184 * t365 - t424 * t87;
t910 = qJD(1) * t47;
t195 = t578 * t588 + t582;
t56 = t194 * t960 - t195 * t424;
t909 = qJD(1) * t56;
t908 = t127 * t580;
t854 = t580 * t222;
t867 = t577 * t275;
t128 = t854 + t867;
t907 = t128 * t577;
t855 = t580 * t194;
t868 = t577 * t264;
t109 = -t855 + t868;
t14 = -t108 * t86 + t109 * t87 + t184 * t195;
t906 = t14 * qJD(1);
t766 = t924 * t361;
t858 = t578 * t376;
t241 = t766 - t858;
t221 = -pkin(4) * t872 - t241;
t15 = -t127 * t86 + t128 * t87 + t184 * t221;
t905 = t15 * qJD(1);
t16 = -t108 * t365 - t109 * t363 + (t87 * t577 - t86 * t580) * t424;
t904 = t16 * qJD(1);
t845 = t580 * t485;
t435 = t577 * t872 + t845;
t17 = -t127 * t365 - t128 * t363 - t434 * t87 + t435 * t86;
t903 = t17 * qJD(1);
t902 = t184 * t541;
t901 = t184 * t577;
t900 = t184 * t580;
t21 = t195 * t363 - t960 * t86 + (t108 - t901) * t424;
t899 = t21 * qJD(1);
t22 = t195 * t365 - t960 * t87 + (-t109 - t900) * t424;
t898 = t22 * qJD(1);
t25 = t127 * t424 + t184 * t434 + t221 * t363 - t484 * t86;
t897 = t25 * qJD(1);
t26 = -t128 * t424 + t184 * t435 + t221 * t365 - t484 * t87;
t896 = t26 * qJD(1);
t895 = t297 * t580;
t468 = t920 + t921;
t848 = t580 * t468;
t882 = t478 * t577;
t314 = t848 + t882;
t894 = t314 * t580;
t861 = t577 * t468;
t881 = t478 * t580;
t315 = t861 - t881;
t893 = t315 * t577;
t37 = t194 * t485 - t195 * t484 - t241 * t960 - t242 * t424;
t890 = t37 * qJD(1);
t41 = -t194 * t241 + t195 * t242 + t433 * t483;
t889 = t41 * qJD(1);
t888 = t960 * t478;
t886 = t434 * t580;
t885 = t435 * t577;
t884 = t435 * t580;
t883 = t478 * t541;
t880 = t479 * t577;
t879 = t524 * t576;
t878 = t525 * t574;
t54 = t194 * t872 + t241 * t871 - t483 * t424 - t433 * t484;
t877 = t54 * qJD(1);
t876 = t541 * t580;
t55 = t483 * t960 + t433 * t485 + (-t195 * t579 + t242 * t581) * t575;
t875 = t55 * qJD(1);
t569 = t575 ^ 2;
t573 = t581 ^ 2;
t874 = t569 * t573;
t873 = t569 * t581;
t296 = -t580 * t623 + t880;
t866 = t577 * t296;
t862 = t577 * t434;
t860 = t577 * t484;
t447 = t577 * t538;
t449 = t577 * t541;
t846 = t580 * t484;
t452 = t580 * t538;
t735 = t871 / 0.2e1;
t844 = pkin(7) * t735 + t702 / 0.2e1;
t568 = t574 ^ 2;
t570 = t576 ^ 2;
t560 = t570 + t568;
t563 = t572 - t571;
t597 = t433 * t934 + t478 * t736 + t567 * t977;
t719 = -t325 / 0.2e1 - t373 / 0.2e1;
t102 = t597 - t719;
t843 = qJD(1) * t102;
t596 = t433 * t931 + t479 * t735 + t567 * t938;
t624 = -t858 / 0.2e1 + t766 / 0.2e1;
t104 = t596 - t624;
t842 = qJD(1) * t104;
t110 = -t194 * t871 - t433 * t424;
t841 = qJD(1) * t110;
t111 = -t195 * t871 - t433 * t960;
t840 = qJD(1) * t111;
t130 = (-t851 + t892) * t424;
t839 = qJD(1) * t130;
t135 = -t950 * t577 + t976;
t838 = qJD(1) * t135;
t136 = -t424 * t974 - t976;
t837 = qJD(1) * t136;
t137 = -t950 * t580 + t975;
t836 = qJD(1) * t137;
t138 = t424 * t973 + t975;
t835 = qJD(1) * t138;
t727 = -t447 / 0.2e1;
t744 = -t887 / 0.2e1;
t618 = t363 * t727 + t571 * t744;
t154 = t886 / 0.2e1 + t618;
t834 = qJD(1) * t154;
t721 = -t452 / 0.2e1;
t617 = t365 * t721 + t572 * t744;
t156 = -t885 / 0.2e1 + t617;
t833 = qJD(1) * t156;
t738 = -t872 / 0.2e1;
t745 = t363 * t934;
t164 = t745 - t845 / 0.2e1 + (t744 + t738) * t577;
t832 = qJD(1) * t164;
t626 = t365 * t934 + t541 * t403;
t685 = t556 / 0.2e1 - t859 / 0.2e1;
t165 = t626 - t685;
t831 = qJD(1) * t165;
t379 = -t600 + (t576 * t646 - t581 * t923) * t575;
t205 = -t379 * t525 + t380 * t524;
t830 = qJD(1) * t205;
t829 = qJD(1) * t974;
t252 = t718 * t577;
t828 = qJD(1) * t252;
t258 = 0.2e1 * t403;
t827 = qJD(1) * t258;
t273 = t424 * t872 - t484 * t871;
t826 = qJD(1) * t273;
t274 = t485 * t871 - t872 * t960;
t825 = qJD(1) * t274;
t824 = qJD(1) * t363;
t534 = t765 / 0.2e1 + t856 / 0.2e1;
t482 = t534 * t871;
t820 = qJD(1) * t482;
t817 = qJD(2) * t567;
t816 = qJD(2) * t574;
t815 = qJD(2) * t575;
t814 = qJD(2) * t576;
t812 = qJD(3) * t580;
t811 = qJD(3) * t581;
t810 = qJD(4) * t541;
t809 = qJD(4) * t577;
t807 = qJD(5) * t424;
t806 = qJD(5) * t482;
t805 = qJD(5) * t577;
t804 = qJD(5) * t580;
t112 = -t431 * t525 + t432 * t524 + (-t379 * t576 - t380 * t574) * t871;
t803 = t112 * qJD(1);
t621 = (t724 - t892 / 0.2e1) * t538;
t730 = t862 / 0.2e1;
t740 = t884 / 0.2e1;
t114 = t730 + t740 + t621;
t802 = t114 * qJD(1);
t120 = t379 * t431 + t380 * t432 + t502 * t533;
t801 = t120 * qJD(1);
t673 = t851 + t892;
t129 = t673 * t424;
t800 = t129 * qJD(1);
t133 = -t363 * t435 - t365 * t434;
t799 = t133 * qJD(1);
t177 = -t379 * t872 + t431 * t871 - t502 * t769 + t533 * t524;
t798 = t177 * qJD(1);
t178 = t533 * t525 + (-t380 * t579 + (t502 * t576 + t432) * t581) * t575;
t797 = t178 * qJD(1);
t181 = -t363 * t484 - t424 * t434;
t796 = t181 * qJD(1);
t182 = t365 * t484 + t424 * t435;
t795 = t182 * qJD(1);
t204 = -t424 * t485 - t484 * t960;
t794 = t204 * qJD(1);
t372 = (-t878 + t879) * t871;
t793 = t372 * qJD(1);
t386 = (t932 + t534) * t871;
t792 = t386 * qJD(1);
t791 = t386 * qJD(2);
t790 = t387 * qJD(1);
t788 = t388 * qJD(1);
t389 = t547 / 0.2e1 + (t934 - t764 / 0.2e1) * t871;
t787 = t389 * qJD(1);
t782 = t446 * qJD(5);
t781 = t447 * qJD(2);
t461 = t524 * t872 + t574 * t874;
t780 = t461 * qJD(1);
t462 = t525 * t872 - t576 * t874;
t779 = t462 * qJD(1);
t480 = pkin(1) * t569 * t579 + t533 * t914;
t778 = t480 * qJD(1);
t481 = pkin(1) * t873 - t532 * t914;
t777 = t481 * qJD(1);
t531 = t538 * qJD(4);
t540 = (-t579 ^ 2 + t573) * t569;
t776 = t540 * qJD(1);
t773 = pkin(4) * t944;
t772 = pkin(4) * t943;
t771 = t580 * t449;
t770 = t579 * t873;
t762 = t363 * t822;
t761 = t365 * t822;
t756 = t571 * t818;
t755 = t572 * t818;
t754 = t577 * t818;
t753 = t541 * t813;
t752 = t581 * t815;
t751 = t575 * t811;
t750 = qJD(4) * t871;
t749 = t538 * t804;
t748 = t541 * t531;
t747 = t579 * t815;
t746 = t577 * t804;
t743 = -t886 / 0.2e1;
t742 = t885 / 0.2e1;
t741 = -t884 / 0.2e1;
t739 = t876 / 0.2e1;
t737 = t872 / 0.2e1;
t734 = -t869 / 0.2e1;
t733 = -t974 / 0.2e1;
t731 = -t863 / 0.2e1;
t729 = -t860 / 0.2e1;
t728 = t860 / 0.2e1;
t726 = -t449 / 0.2e1;
t725 = -t854 / 0.2e1;
t723 = t849 / 0.2e1;
t722 = -t846 / 0.2e1;
t720 = t945 - t194 / 0.2e1;
t714 = t914 * qJD(1);
t713 = 0.2e1 * t771;
t712 = t554 / 0.2e1 + t844;
t707 = -t781 - t805;
t706 = -qJD(5) - t822;
t705 = qJD(3) + t817;
t704 = -qJD(5) - t819;
t699 = t536 * t746;
t698 = t525 * t758;
t697 = qJD(2) * t770;
t696 = t524 * t758;
t695 = t922 / 0.2e1 + t264 / 0.2e1;
t694 = t575 * t714;
t693 = t914 * t815;
t688 = qJD(2) * t713;
t687 = qJD(4) * t713;
t686 = t275 / 0.2e1 - t902 / 0.2e1;
t682 = -qJD(4) + t758;
t583 = t296 * t947 + t109 * t297 / 0.2e1 + t479 * t945 + t195 * t936 - t86 * t314 / 0.2e1 + t315 * t948;
t639 = t128 * t925 + t577 * t946;
t595 = t639 * pkin(9) + t221 * t949;
t1 = -t583 + t595;
t64 = -t296 * t314 + t297 * t315 + t478 * t479;
t681 = -t1 * qJD(1) + t64 * qJD(2);
t636 = t314 * t942 + t315 * t944;
t642 = t296 * t940 + t918 / 0.2e1;
t3 = (pkin(9) * t937 + t128 / 0.2e1 + t108 * t931 + t642) * t580 + (pkin(9) * t435 / 0.2e1 + t109 * t931 + t984) * t577 + t636;
t63 = (t893 + t894) * t541 + (t296 * t580 - t297 * t577) * t538;
t680 = -t3 * qJD(1) - t63 * qJD(2);
t100 = (-t296 + t880) * t541 + (t314 - t882) * t538;
t585 = t108 * t934 + t296 * t938 + t314 * t977 + t363 * t935 + t86 * t931;
t593 = -pkin(9) * t484 / 0.2e1 + t424 * t936 + t195 * t932 + t184 * t933;
t644 = pkin(4) * t937 + t221 * t926;
t7 = t577 * t593 + t585 + t644;
t678 = -t7 * qJD(1) + t100 * qJD(2);
t101 = (-t297 + t847) * t541 + (-t315 - t881) * t538;
t584 = t109 * t933 + t297 * t938 + t315 * t940 + t365 * t935 + t87 * t931;
t643 = t221 * t927 + t435 * t949;
t8 = t580 * t593 + t584 + t643;
t677 = -t8 * qJD(1) + t101 * qJD(2);
t117 = t883 + (-t866 - t895) * t538;
t638 = t902 / 0.2e1 + t888 / 0.2e1;
t6 = t984 * t580 + (t296 * t977 - t918 / 0.2e1 - t128 / 0.2e1) * t577 + t638;
t676 = -qJD(1) * t6 - qJD(2) * t117;
t675 = -t108 * t577 + t109 * t580;
t674 = -t314 * t577 + t315 * t580;
t672 = -t431 * t574 + t432 * t576;
t671 = t714 + qJD(2);
t610 = t716 * t921 - t920 / 0.2e1;
t637 = t894 / 0.2e1 + t893 / 0.2e1;
t131 = t610 - t637;
t611 = pkin(9) * t972 + t949 * t960;
t640 = t108 * t925 + t109 * t927;
t38 = t611 - t640;
t670 = qJD(1) * t38 + qJD(2) * t131;
t206 = t296 * t538 - t478 * t449;
t605 = t363 * t936 - t642;
t28 = -t577 * t686 + t605 + t725;
t669 = -qJD(1) * t28 + qJD(2) * t206;
t207 = -t297 * t538 + t478 * t876;
t604 = t478 * t943 - t641;
t27 = t580 * t686 + t604 + t734;
t668 = qJD(1) * t27 - qJD(2) * t207;
t265 = -t479 * t538 + t883;
t592 = t194 * t932 + t195 * t933 - t888 / 0.2e1 - t424 * t935;
t52 = t592 + t712;
t667 = qJD(1) * t52 - qJD(2) * t265;
t381 = t775 * t577;
t599 = (t731 - t363 / 0.2e1) * t541 + t424 * t447;
t89 = t722 + t599;
t666 = -qJD(1) * t89 + qJD(2) * t381;
t382 = t959 * t577;
t615 = t931 * t960 + t690;
t590 = t363 * t931 + t615 * t577;
t91 = t722 + t590;
t665 = qJD(1) * t91 - qJD(2) * t382;
t383 = t775 * t580;
t598 = (t723 + t942) * t541 - t424 * t452;
t93 = t729 + t598;
t664 = -qJD(1) * t93 - qJD(2) * t383;
t460 = t959 * t580;
t589 = t365 * t931 + t615 * t580;
t95 = t728 + t589;
t663 = qJD(1) * t95 - qJD(2) * t460;
t661 = t704 * t580;
t169 = t978 + t950;
t660 = qJD(1) * t169 + qJD(2) * t116;
t659 = qJD(1) * t116 - qJD(2) * t959;
t140 = -0.2e1 * t972;
t527 = t571 * t538;
t528 = t572 * t538;
t458 = t527 + t528;
t658 = qJD(1) * t140 + qJD(2) * t458;
t160 = t424 * t538 - t541 * t960;
t213 = t950 - t978;
t657 = qJD(1) * t213 + qJD(2) * t160;
t656 = qJD(1) * t160 - qJD(2) * t775;
t587 = (t879 / 0.2e1 + t878 / 0.2e1) * qJ(3) + t379 * t928 + t380 * t576 / 0.2e1;
t162 = pkin(7) * t736 - t702 / 0.2e1 + t587;
t549 = t560 * qJ(3);
t655 = qJD(1) * t162 + qJD(2) * t549;
t255 = t717 * t577;
t654 = -qJD(1) * t255 - qJD(2) * t449;
t653 = -qJD(1) * t973 - qJD(2) * t452;
t494 = t501 / 0.2e1;
t419 = t494 + t857 / 0.2e1;
t650 = qJD(1) * t419 + qJD(2) * t534;
t422 = t878 + t879;
t453 = t524 ^ 2 + t525 ^ 2;
t649 = qJD(1) * t453 + qJD(2) * t422;
t648 = qJD(1) * t422 + qJD(2) * t560;
t647 = qJD(1) * t524 + t814;
t645 = t921 / 0.2e1 + t920 / 0.2e1;
t260 = t717 * t580;
t629 = qJD(1) * t260 + t753;
t627 = (qJD(2) * t484 + t785) * t424;
t625 = t468 / 0.2e1 + t645;
t620 = (qJD(1) * t525 + t816) * t871;
t119 = (-t865 + t891) * t541;
t170 = t363 ^ 2 - t365 ^ 2;
t619 = qJD(1) * t170 - qJD(2) * t119 - qJD(4) * t673;
t603 = t424 * t771 + t538 * t634;
t85 = t730 + t741 + t603;
t616 = t85 * qJD(1) + t538 * t688;
t200 = t625 * t577;
t48 = t577 * t695 + t580 * t720 + t773;
t613 = pkin(4) * t808 - qJD(1) * t48 - qJD(2) * t200;
t202 = t625 * t580;
t50 = t577 * t720 - t580 * t695 + t772;
t612 = pkin(4) * t809 - qJD(1) * t50 + qJD(2) * t202;
t607 = qJD(5) * t419 + t964;
t606 = qJD(5) * t534 + t965;
t459 = t563 * t536;
t602 = qJD(1) * t119 + qJD(2) * t459 + t687;
t601 = qJD(1) * t673 - qJD(4) * t563 + t688;
t594 = (qJD(2) * t683 + t811) * t575;
t555 = qJD(2) * t737;
t552 = qJD(1) * t770;
t523 = t534 * qJD(4);
t522 = t541 * t808;
t503 = qJD(4) * t738 + t552;
t490 = -0.2e1 * t541 * t746;
t474 = t846 / 0.2e1;
t442 = t447 * qJD(5);
t420 = t494 - t501 / 0.2e1;
t413 = -t862 / 0.2e1;
t410 = t422 * qJD(3);
t378 = t389 * qJD(2);
t285 = qJD(2) * t482 + qJD(4) * t419;
t261 = t926 * t960 + t723;
t254 = t927 * t960 + t731;
t253 = t733 + t732;
t203 = t882 + t848 / 0.2e1 - t645 * t580;
t201 = t881 - t861 / 0.2e1 + t645 * t577;
t166 = t626 + t685;
t163 = t424 * t726 + t745 + t845 / 0.2e1 + t577 * t737;
t161 = t587 + t844;
t158 = t160 * qJD(4);
t155 = t742 + t617;
t153 = t743 + t618;
t147 = t673 * qJD(5);
t139 = -t424 * t930 + t572 * t977 - t972;
t132 = t610 + t637;
t118 = t119 * qJD(5);
t113 = t413 + t741 + t621;
t105 = t596 + t624;
t103 = t597 + t719;
t94 = t729 + t589;
t92 = t728 + t598;
t90 = t474 + t590;
t88 = t474 + t599;
t84 = t413 + t740 + t603;
t53 = -t592 + t712;
t51 = pkin(9) * t403 + t772 + t901 / 0.2e1 + t870 / 0.2e1 + t853 / 0.2e1;
t49 = pkin(9) * t732 + t773 + t900 / 0.2e1 + t855 / 0.2e1 - t868 / 0.2e1;
t39 = t611 + t640;
t30 = t184 * t739 + t734 + t852 / 0.2e1 - t604;
t29 = t184 * t726 + t725 - t867 / 0.2e1 - t605;
t10 = pkin(9) * t722 + t184 * t721 + t195 * t739 + t403 * t478 - t584 + t643;
t9 = t478 * t733 + t195 * t449 / 0.2e1 + t184 * t727 + pkin(9) * t729 - t585 + t644;
t5 = t907 / 0.2e1 + t908 / 0.2e1 + (-t916 / 0.2e1 - t917 / 0.2e1) * t538 - (t895 / 0.2e1 + t866 / 0.2e1) * t424 + t638;
t4 = t297 * t732 + t109 * t726 + t447 * t948 + t296 * t403 + t876 * t947 + t86 * t721 + (t743 + t742) * pkin(9) - t636 + t639;
t2 = t583 + t595;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t697, t540 * qJD(2), t581 * t693, -t697, -t579 * t693, 0, -t480 * qJD(2), -t481 * qJD(2), 0, 0, t525 * t576 * t752, t372 * qJD(2), t462 * qJD(2), -t524 * t574 * t752, t461 * qJD(2), -t697, -t177 * qJD(2) + t525 * t751, t178 * qJD(2) + t524 * t751, qJD(2) * t112 + qJD(3) * t453, qJD(2) * t120 + qJD(3) * t205, (qJD(2) * t485 - t786) * t960, qJD(2) * t204 + qJD(4) * t213, -t274 * qJD(2) + t424 * t750, t627, -t273 * qJD(2) + t750 * t960, -t697, -t54 * qJD(2) - t111 * qJD(4) + t751 * t960, t55 * qJD(2) + t110 * qJD(4) - t424 * t751, qJD(2) * t37 + qJD(3) * t169, qJD(2) * t41 + qJD(3) * t56, (qJD(2) * t435 - qJD(5) * t363 - t580 * t786) * t365, qJD(2) * t133 + qJD(4) * t129 + qJD(5) * t170, qJD(2) * t182 + qJD(4) * t137 - t363 * t807, (qJD(2) * t434 + qJD(5) * t365 - t577 * t786) * t363, qJD(2) * t181 - qJD(4) * t135 - t365 * t807, t627, qJD(2) * t25 - qJD(3) * t136 + qJD(4) * t21 + qJD(5) * t47, qJD(2) * t26 + qJD(3) * t138 + qJD(4) * t22 + qJD(5) * t46, qJD(2) * t17 - qJD(3) * t130 + qJD(4) * t16, qJD(2) * t15 + qJD(3) * t31 + qJD(4) * t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t552, t776, t671 * t871, -t552, -t671 * t872, 0, -qJD(2) * t533 - t778, qJD(2) * t532 - t777, 0, 0, t576 * t620, t793 + (-t568 + t570) * t752, t574 * t747 + t779, -t647 * t769, t576 * t747 + t780, -t552, -t533 * t814 + t574 * t594 - t798, t533 * t816 + t576 * t594 + t797, qJD(2) * t672 + t410 + t803, t801 + (-pkin(2) * t533 + qJ(3) * t672) * qJD(2) + t161 * qJD(3), t980 * t485 - t966, t794 + (-t484 * t541 - t485 * t538) * qJD(2) + t158, -qJD(4) * t389 + t541 * t747 - t825, t969, -qJD(4) * t386 - t538 * t747 - t826, -t503, -t877 + (-t478 * t872 + t483 * t538 + t484 * t567) * qJD(2) - t387 * qJD(3) + t105 * qJD(4), t875 + (-t479 * t872 + t483 * t541 + t485 * t567) * qJD(2) + t388 * qJD(3) + t103 * qJD(4), t890 + (-t241 * t541 - t242 * t538 + t478 * t485 - t479 * t484) * qJD(2) + t915, t889 + (-t241 * t478 + t242 * t479 + t483 * t567) * qJD(2) + t53 * qJD(3), qJD(4) * t155 - t954 + (t753 + t823) * t435, t799 + t84 * qJD(4) - t118 + (-t885 - t886) * t818, t795 + (t435 * t538 + t541 * t846) * qJD(2) + t92 * qJD(4) + t163 * qJD(5), qJD(4) * t153 + t954 + (t754 + t824) * t434, t796 + (-t434 * t538 - t449 * t484) * qJD(2) + t88 * qJD(4) + t166 * qJD(5), t806 + t969, t897 + (t127 * t538 + t221 * t449 - t296 * t484 + t434 * t478) * qJD(2) + t90 * qJD(3) + t9 * qJD(4) + t30 * qJD(5), t896 + (-t128 * t538 + t221 * t876 - t297 * t484 + t435 * t478) * qJD(2) + t94 * qJD(3) + t10 * qJD(4) + t29 * qJD(5), t903 + (t296 * t435 - t297 * t434 + (-t907 - t908) * t541) * qJD(2) + t113 * qJD(3) + t4 * qJD(4), t905 + (-t127 * t296 + t128 * t297 + t221 * t478) * qJD(2) + t5 * qJD(3) + t2 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620, t647 * t871, t649, qJD(2) * t161 + t830, 0, 0, 0, 0, 0, 0, t420 * qJD(4) - t981, t982, t660, qJD(2) * t53 + t909, 0, 0, 0, 0, 0, 0, qJD(2) * t90 + qJD(4) * t261 + qJD(5) * t253 - t837, qJD(2) * t94 + qJD(4) * t254 + t835 + t983, qJD(2) * t113 + qJD(4) * t139 - t839, qJD(2) * t5 + qJD(4) * t39 + t912; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t964, t657, t424 * t682 - t378, t964, t682 * t960 - t791, t555, qJD(2) * t105 + qJD(3) * t420 - qJD(4) * t195 - t840, qJD(2) * t103 + qJD(4) * t194 + t841, 0, 0, qJD(2) * t155 + t967 + (-t809 - t823) * t973, t84 * qJD(2) - t563 * t786 - t147 + t800, qJD(2) * t92 + t577 * t785 + t836 + t983, qJD(2) * t153 - t967 + (t808 - t824) * t974, qJD(2) * t88 + t580 * t785 - t838, t607, t899 + t9 * qJD(2) + t261 * qJD(3) + (-t195 * t580 + t577 * t692) * qJD(4) + t51 * qJD(5), t898 + t10 * qJD(2) + t254 * qJD(3) + (t195 * t577 + t580 * t692) * qJD(4) + t49 * qJD(5), t4 * qJD(2) + t139 * qJD(3) + qJD(4) * t675 + t904, t906 + t2 * qJD(2) + t39 * qJD(3) + (-pkin(4) * t195 + pkin(9) * t675) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t963, t619, qJD(2) * t163 + qJD(4) * t979 + t363 * t706, t963, qJD(2) * t166 + t365 * t706, t285, qJD(2) * t30 + qJD(3) * t253 + qJD(4) * t51 - qJD(5) * t87 + t910, qJD(2) * t29 + qJD(3) * t979 + qJD(4) * t49 + qJD(5) * t86 + t911, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t552, -t776, -t581 * t694, t552, t579 * t694, 0, t778, t777, 0, 0, -t576 * t698, -t793, -t779, t574 * t696, -t780, t552, t798, -t797, t410 - t803, qJD(3) * t162 - t801, -t485 * t821 - t966, t158 - t794, -qJD(4) * t388 + t825, t968, -qJD(4) * t387 + t826, t503, -qJD(3) * t386 + qJD(4) * t104 + t877, qJD(3) * t389 + qJD(4) * t102 - t875, -t890 + t915, -qJD(3) * t52 - t889, qJD(4) * t156 - t435 * t823 - t954, qJD(4) * t85 - t118 - t799, qJD(4) * t93 + qJD(5) * t164 - t795, qJD(4) * t154 - t434 * t824 + t954, qJD(4) * t89 + qJD(5) * t165 - t796, -t806 + t968, qJD(3) * t91 - qJD(4) * t7 - qJD(5) * t27 - t897, qJD(3) * t95 - qJD(4) * t8 - qJD(5) * t28 - t896, qJD(3) * t114 - qJD(4) * t3 - t903, qJD(3) * t6 - qJD(4) * t1 - t905; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t560 * qJD(3), t549 * qJD(3), -t748, -t775 * qJD(4), 0, t748, 0, 0, t567 * t810, -t567 * t531, -qJD(3) * t959, qJD(3) * t265, -t572 * t748 - t699, -qJD(5) * t459 + t538 * t687, -t538 * t541 * t805 + qJD(4) * t383, -t571 * t748 + t699, -qJD(4) * t381 - t541 * t749, t748, -qJD(3) * t382 + qJD(4) * t100 + qJD(5) * t207, -qJD(3) * t460 + qJD(4) * t101 + qJD(5) * t206, -qJD(4) * t63, qJD(3) * t117 + qJD(4) * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t648, t655, 0, 0, 0, 0, 0, 0, -t792, t787, t659, -t667, 0, 0, 0, 0, 0, 0, t665, t663, t802, qJD(4) * t132 - t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t965, t656, -t531 - t788, t965, -t790 - t810, qJD(1) * t738, -qJD(4) * t479 + t541 * t817 + t842, qJD(4) * t478 - t538 * t817 + t843, 0, 0, t833 - t782 + (-t564 - t755) * t538, (t527 - t528) * qJD(4) + t490 + t616, t541 * t809 - t664, t834 + t782 + (t564 - t756) * t538, t522 - t666, t606, (t577 * t691 - t847) * qJD(4) + t203 * qJD(5) + t678, (t580 * t691 + t880) * qJD(4) + t201 * qJD(5) + t677, qJD(4) * t674 + t680, t132 * qJD(3) + (-pkin(4) * t479 + pkin(9) * t674) * qJD(4) + t681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t971, -t602, t449 * t704 + t832, t971, t541 * t661 + t831, t523 - t820, qJD(4) * t203 - qJD(5) * t297 - t668, qJD(4) * t201 + qJD(5) * t296 + t669, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t698, -t696, -t649, -qJD(2) * t162 - t830, 0, 0, 0, 0, 0, 0, -t701 + t791 + t785, -t378 + t700 - t786, -t660, qJD(2) * t52 - t909, 0, 0, 0, 0, 0, 0, -qJD(2) * t91 + qJD(4) * t260 - qJD(5) * t252 + t837, -qJD(2) * t95 - qJD(4) * t255 + qJD(5) * t258 - t835, -qJD(2) * t114 + qJD(4) * t140 + t839, -qJD(2) * t6 - qJD(4) * t38 - t912; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t648, -t655, 0, 0, 0, 0, 0, 0, t792 + t810, -t531 - t787, -t659, t667, 0, 0, 0, 0, 0, 0, -t442 + t522 - t665, -qJD(4) * t449 - t663 - t749, qJD(4) * t458 - t802, -qJD(4) * t131 + t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t980, -t970, 0, 0, 0, 0, 0, 0, 0, 0, t629, t654, t658, -t670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t707 - t828, t661 + t827, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t964, -t657, t982, -t964, t981, t555, -qJD(2) * t104 - qJD(3) * t960 + t840, -qJD(2) * t102 + qJD(3) * t424 - t841, 0, 0, -qJD(2) * t156 + t580 * t761 + t967, -qJD(2) * t85 - t147 - t800, -qJD(2) * t93 + qJD(5) * t973 - t836, -qJD(2) * t154 + t577 * t762 - t967, -qJD(2) * t89 - qJD(5) * t974 + t838, -t607, qJD(2) * t7 - qJD(3) * t260 + qJD(5) * t50 - t899, qJD(2) * t8 + qJD(3) * t255 + qJD(5) * t48 - t898, qJD(2) * t3 - qJD(3) * t140 - t904, qJD(2) * t1 + qJD(3) * t38 - t906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t965, -t656, t788, -t965, t790, qJD(1) * t737, -t541 * t705 - t842, t538 * t705 - t843, 0, 0, t538 * t755 - t782 - t833, t490 - t616, qJD(5) * t452 + t664, t538 * t756 + t782 - t834, -t442 + t666, -t606, -qJD(5) * t202 - t541 * t812 - t678, qJD(3) * t449 + qJD(5) * t200 - t677, -qJD(3) * t458 - t680, qJD(3) * t131 - t681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t980, t970, 0, 0, 0, 0, 0, 0, 0, 0, -t629, -t654, -t658, t670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t746, t563 * qJD(5), 0, -t746, 0, 0, -pkin(4) * t805, -pkin(4) * t804, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t962, -t601, -t653 + t804, t962, t707 - t829, -t650, -pkin(9) * t804 - t612, pkin(9) * t805 - t613, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t963, -t619, -qJD(2) * t164 - qJD(4) * t973 + t762, -t963, -qJD(2) * t165 + qJD(4) * t974 + t761, t285, qJD(2) * t27 + qJD(3) * t252 - qJD(4) * t50 - t910, qJD(2) * t28 - qJD(3) * t258 - qJD(4) * t48 - t911, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t971, t602, -qJD(4) * t452 + t538 * t754 - t832, -t971, qJD(4) * t447 + t538 * t753 - t831, t523 + t820, qJD(3) * t447 + qJD(4) * t202 + t668, -qJD(4) * t200 + t538 * t812 - t669, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t781 + t828, t538 * t813 - t827, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t962, t601, t653, -t962, t781 + t829, t650, t612, t613, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t11;
