% Calculate inertial parameters regressor of coriolis joint torque vector for
% S5RRPRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% tauc_reg [5x(5*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:40
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S5RRPRR14_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR14_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR14_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRPRR14_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:38:38
% EndTime: 2019-12-31 20:38:55
% DurationCPUTime: 6.58s
% Computational Cost: add. (10510->472), mult. (28507->701), div. (0->0), fcn. (22628->10), ass. (0->229)
t201 = sin(pkin(5));
t208 = cos(qJ(2));
t276 = qJD(1) * t208;
t188 = t201 * t276;
t200 = sin(pkin(10));
t202 = cos(pkin(10));
t205 = sin(qJ(4));
t316 = cos(qJ(4));
t224 = -t205 * t200 + t316 * t202;
t126 = t224 * t188;
t259 = qJD(4) * t316;
t274 = qJD(4) * t205;
t158 = t200 * t274 - t202 * t259;
t282 = t158 + t126;
t166 = t316 * t200 + t205 * t202;
t286 = t201 * t208;
t214 = t166 * t286;
t281 = -qJD(1) * t214 + t166 * qJD(4);
t310 = pkin(8) + qJ(3);
t181 = t310 * t200;
t182 = t310 * t202;
t225 = -t316 * t181 - t205 * t182;
t206 = sin(qJ(2));
t236 = pkin(2) * t206 - qJ(3) * t208;
t278 = qJD(1) * t201;
t151 = t236 * t278;
t277 = qJD(1) * t206;
t262 = t201 * t277;
t203 = cos(pkin(5));
t314 = pkin(1) * t208;
t267 = t203 * t314;
t152 = -pkin(7) * t262 + qJD(1) * t267;
t100 = t202 * t151 - t200 * t152;
t285 = t202 * t208;
t220 = (pkin(3) * t206 - pkin(8) * t285) * t201;
t80 = qJD(1) * t220 + t100;
t101 = t200 * t151 + t202 * t152;
t243 = t200 * t188;
t86 = -pkin(8) * t243 + t101;
t304 = t224 * qJD(3) + qJD(4) * t225 - t205 * t80 - t316 * t86;
t204 = sin(qJ(5));
t207 = cos(qJ(5));
t271 = t203 * qJD(1);
t190 = qJD(2) + t271;
t139 = t200 * t190 + t202 * t262;
t315 = pkin(1) * t206;
t280 = pkin(7) * t286 + t203 * t315;
t153 = t280 * qJD(1);
t127 = t190 * qJ(3) + t153;
t148 = (-pkin(2) * t208 - qJ(3) * t206 - pkin(1)) * t201;
t133 = qJD(1) * t148;
t81 = -t200 * t127 + t202 * t133;
t49 = -pkin(3) * t188 - t139 * pkin(8) + t81;
t138 = t202 * t190 - t200 * t262;
t82 = t202 * t127 + t200 * t133;
t57 = t138 * pkin(8) + t82;
t26 = t205 * t49 + t316 * t57;
t269 = t188 - qJD(4);
t24 = -t269 * pkin(9) + t26;
t226 = t205 * t138 + t316 * t139;
t120 = -t190 * pkin(2) + qJD(3) - t152;
t90 = -t138 * pkin(3) + t120;
t92 = -t316 * t138 + t205 * t139;
t33 = t92 * pkin(4) - pkin(9) * t226 + t90;
t10 = t204 * t33 + t207 * t24;
t268 = qJD(1) * qJD(2);
t257 = t208 * t268;
t240 = t201 * t257;
t266 = pkin(1) * qJD(2) * t203;
t245 = qJD(1) * t266;
t146 = pkin(7) * t240 + t206 * t245;
t232 = t200 * t240;
t111 = pkin(3) * t232 + t146;
t260 = qJD(2) * t286;
t241 = t202 * t260;
t227 = t316 * t241;
t55 = t205 * (qJD(4) * t139 + t232) - qJD(1) * t227 - t138 * t259;
t213 = qJD(2) * t214;
t211 = qJD(1) * t213;
t318 = t226 * qJD(4);
t56 = t211 + t318;
t22 = t56 * pkin(4) + t55 * pkin(9) + t111;
t216 = qJD(2) * t220;
t130 = (t236 * qJD(2) - qJD(3) * t206) * t201;
t114 = qJD(1) * t130;
t275 = qJD(2) * t206;
t261 = t201 * t275;
t239 = qJD(1) * t261;
t145 = -pkin(7) * t239 + t208 * t245;
t115 = t190 * qJD(3) + t145;
t76 = t202 * t114 - t200 * t115;
t50 = qJD(1) * t216 + t76;
t77 = t200 * t114 + t202 * t115;
t58 = -pkin(8) * t232 + t77;
t228 = -t205 * t50 - t49 * t259 + t57 * t274 - t316 * t58;
t5 = pkin(9) * t239 - t228;
t2 = -qJD(5) * t10 - t204 * t5 + t207 * t22;
t325 = qJD(5) + t92;
t332 = t10 * t325 + t2;
t235 = t204 * t24 - t207 * t33;
t1 = -t235 * qJD(5) + t204 * t22 + t207 * t5;
t329 = t235 * t325 + t1;
t331 = t92 ^ 2;
t249 = t207 * t269;
t72 = t204 * t226 + t249;
t330 = t72 * t92;
t328 = pkin(9) * t262 - t304;
t327 = t92 * t269;
t118 = pkin(3) * t243 + t153;
t326 = -t281 * pkin(4) - t282 * pkin(9) + t118;
t324 = t226 ^ 2;
t197 = t201 ^ 2;
t323 = -0.2e1 * t197 * t268;
t124 = -t205 * t181 + t316 * t182;
t303 = qJD(3) * t166 + qJD(4) * t124 - t205 * t86 + t316 * t80;
t321 = t226 * t72;
t74 = -t204 * t269 + t207 * t226;
t320 = t226 * t74;
t319 = t226 * t188;
t293 = qJD(5) * t74;
t30 = -t204 * t55 - t207 * t239 + t293;
t256 = t205 * t58 - t316 * t50;
t8 = -t26 * qJD(4) - t256;
t287 = t201 * t206;
t157 = t203 * t200 + t202 * t287;
t147 = t203 * qJ(3) + t280;
t96 = -t200 * t147 + t202 * t148;
t64 = -pkin(3) * t286 - t157 * pkin(8) + t96;
t156 = t200 * t287 - t203 * t202;
t97 = t202 * t147 + t200 * t148;
t79 = -t156 * pkin(8) + t97;
t305 = t205 * t64 + t316 * t79;
t154 = -pkin(7) * t261 + t208 * t266;
t137 = t203 * qJD(3) + t154;
t84 = t202 * t130 - t200 * t137;
t61 = t216 + t84;
t242 = t200 * t260;
t85 = t200 * t130 + t202 * t137;
t75 = -pkin(8) * t242 + t85;
t14 = -qJD(4) * t305 - t205 * t75 + t316 * t61;
t312 = t74 * t72;
t311 = t226 * t92;
t196 = -t202 * pkin(3) - pkin(2);
t108 = -pkin(4) * t224 - t166 * pkin(9) + t196;
t68 = t204 * t108 + t207 * t124;
t309 = t68 * qJD(5) - t328 * t204 + t326 * t207;
t67 = t207 * t108 - t204 * t124;
t308 = -t67 * qJD(5) + t326 * t204 + t328 * t207;
t272 = qJD(5) * t207;
t307 = -t204 * t30 - t72 * t272;
t306 = pkin(4) * t262 + t303;
t302 = t204 * t56;
t301 = t204 * t74;
t300 = t204 * t325;
t299 = t206 * t81;
t298 = t206 * t82;
t273 = qJD(5) * t204;
t29 = qJD(5) * t249 - t204 * t239 + t207 * t55 + t226 * t273;
t297 = t29 * t204;
t296 = t30 * t207;
t104 = t316 * t156 + t205 * t157;
t295 = t56 * t104;
t294 = t56 * t224;
t292 = t166 * t204;
t291 = t166 * t207;
t199 = t208 ^ 2;
t290 = t197 * t199;
t289 = t197 * qJD(1) ^ 2;
t288 = t200 * t208;
t279 = t206 ^ 2 - t199;
t270 = qJD(2) - t190;
t265 = t199 * t289;
t264 = t208 * t289;
t263 = t204 * t286;
t255 = t325 ^ 2;
t252 = t207 * t325;
t102 = t204 * t126 - t207 * t262;
t251 = t158 * t204 + t102;
t103 = t207 * t126 + t204 * t262;
t250 = t158 * t207 + t103;
t248 = t269 * t201;
t247 = t190 + t271;
t246 = qJD(2) * t202 - t138;
t6 = -pkin(4) * t239 - t8;
t244 = pkin(9) * qJD(5) * t325 + t6;
t238 = pkin(1) * t323;
t35 = -pkin(9) * t286 + t305;
t105 = -t205 * t156 + t316 * t157;
t191 = pkin(7) * t287;
t150 = t191 + (-pkin(2) - t314) * t203;
t106 = t156 * pkin(3) + t150;
t44 = t104 * pkin(4) - t105 * pkin(9) + t106;
t18 = t204 * t44 + t207 * t35;
t17 = -t204 * t35 + t207 * t44;
t234 = -t138 * t202 + t139 * t200;
t233 = t197 * t206 * t257;
t25 = -t205 * t57 + t316 * t49;
t36 = -t205 * t79 + t316 * t64;
t23 = t269 * pkin(4) - t25;
t229 = -pkin(9) * t56 + t23 * t325;
t87 = t204 * t105 + t207 * t286;
t13 = t205 * t61 + t64 * t259 - t79 * t274 + t316 * t75;
t223 = t246 * t278;
t222 = (qJD(2) * t200 - t139) * t278;
t219 = t166 * t272 - t251;
t218 = -t166 * t273 - t250;
t217 = t208 * t222;
t155 = t280 * qJD(2);
t119 = pkin(3) * t242 + t155;
t212 = -qJ(3) * t275 + (-pkin(2) * qJD(2) + qJD(3) - t120) * t208;
t176 = t206 * t264;
t170 = -0.2e1 * t233;
t160 = -t191 + t267;
t88 = t207 * t105 - t263;
t70 = t105 * qJD(4) + t213;
t69 = t156 * t259 - t227 + (qJD(4) * t157 + t242) * t205;
t52 = t207 * t56;
t45 = pkin(4) * t226 + t92 * pkin(9);
t39 = -qJD(5) * t263 + t105 * t272 - t204 * t69 - t207 * t261;
t38 = t87 * qJD(5) - t204 * t261 + t207 * t69;
t34 = pkin(4) * t286 - t36;
t28 = t70 * pkin(4) + t69 * pkin(9) + t119;
t16 = t204 * t45 + t207 * t25;
t15 = -t204 * t25 + t207 * t45;
t12 = -pkin(4) * t261 - t14;
t11 = pkin(9) * t261 + t13;
t4 = -t18 * qJD(5) - t204 * t11 + t207 * t28;
t3 = t17 * qJD(5) + t207 * t11 + t204 * t28;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t233, t279 * t323, t247 * t260, t170, -t247 * t261, 0, -t146 * t203 - t155 * t190 + t206 * t238, -t145 * t203 - t154 * t190 + t208 * t238, (t145 * t208 + t146 * t206 + (-t152 * t208 - t153 * t206) * qJD(2) + (t154 * t208 + t155 * t206 + (-t160 * t208 - t206 * t280) * qJD(2)) * qJD(1)) * t201, t145 * t280 - t146 * t160 - t152 * t155 + t153 * t154, (qJD(1) * t157 + t139) * t241, ((-t156 * t202 - t157 * t200) * qJD(1) - t234) * t260, (t139 * t287 + (t157 * t287 - 0.2e1 * t202 * t290) * qJD(1)) * qJD(2), (qJD(1) * t156 - t138) * t242, (t138 * t287 + (-t156 * t287 + 0.2e1 * t200 * t290) * qJD(1)) * qJD(2), t170, -t155 * t138 + t146 * t156 + ((-qJD(1) * t84 - t76) * t208 + (t120 * t288 + t299 + (t150 * t288 + t206 * t96) * qJD(1)) * qJD(2)) * t201, t155 * t139 + t146 * t157 + ((qJD(1) * t85 + t77) * t208 + (t120 * t285 - t298 + (t150 * t285 - t206 * t97) * qJD(1)) * qJD(2)) * t201, t85 * t138 - t84 * t139 - t77 * t156 - t76 * t157 + (-t200 * t82 - t202 * t81 + (-t200 * t97 - t202 * t96) * qJD(1)) * t260, t120 * t155 + t146 * t150 + t76 * t96 + t77 * t97 + t81 * t84 + t82 * t85, -t55 * t105 - t226 * t69, t55 * t104 - t105 * t56 - t226 * t70 + t69 * t92, t69 * t269 + (t55 * t208 + (qJD(1) * t105 + t226) * t275) * t201, t92 * t70 + t295, t70 * t269 + (t56 * t208 + (-qJD(1) * t104 - t92) * t275) * t201, (-t197 * t276 - t248) * t275, -t14 * t269 + t119 * t92 + t106 * t56 + t111 * t104 + t90 * t70 + (-t8 * t208 + (qJD(1) * t36 + t25) * t275) * t201, t13 * t269 + t119 * t226 - t106 * t55 + t111 * t105 - t90 * t69 + (-t228 * t208 + (-qJD(1) * t305 - t26) * t275) * t201, t104 * t228 - t8 * t105 - t13 * t92 - t14 * t226 + t25 * t69 - t26 * t70 - t305 * t56 + t36 * t55, t111 * t106 + t90 * t119 + t26 * t13 + t25 * t14 - t228 * t305 + t8 * t36, -t29 * t88 - t74 * t38, t29 * t87 - t88 * t30 + t38 * t72 - t74 * t39, -t29 * t104 - t325 * t38 + t88 * t56 + t74 * t70, t30 * t87 + t72 * t39, -t30 * t104 - t325 * t39 - t87 * t56 - t72 * t70, t325 * t70 + t295, t2 * t104 + t12 * t72 + t17 * t56 + t23 * t39 - t235 * t70 + t34 * t30 + t325 * t4 + t6 * t87, -t1 * t104 - t10 * t70 + t12 * t74 - t18 * t56 - t23 * t38 - t34 * t29 - t3 * t325 + t6 * t88, -t1 * t87 - t10 * t39 + t17 * t29 - t18 * t30 - t2 * t88 - t235 * t38 - t3 * t72 - t4 * t74, t1 * t18 + t10 * t3 + t23 * t12 + t2 * t17 - t235 * t4 + t6 * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, t279 * t289, t270 * t188, t176, -t270 * t262, 0, t153 * t190 + t289 * t315 - t146, pkin(1) * t264 + t152 * t190 - t145, 0, 0, t202 * t217, ((-t200 ^ 2 + t202 ^ 2) * qJD(2) + t234) * t188, t202 * t265 + t206 * t222, -t246 * t243, -t200 * t265 + t206 * t223, t176, t153 * t138 - t146 * t202 + (t100 * t208 + t200 * t212 - t299) * t278, -t153 * t139 + t146 * t200 + (-t101 * t208 + t202 * t212 + t298) * t278, t100 * t139 - t101 * t138 + (qJD(3) * t138 + t81 * t188 + t77) * t202 + (qJD(3) * t139 + t82 * t188 - t76) * t200, -t146 * pkin(2) - t81 * t100 - t82 * t101 - t120 * t153 + (-t200 * t81 + t202 * t82) * qJD(3) + (-t76 * t200 + t77 * t202) * qJ(3), -t55 * t166 - t226 * t282, -t166 * t56 - t224 * t55 - t226 * t281 + t282 * t92, (qJD(2) * t166 - t226) * t262 + t282 * t269, t281 * t92 - t294, (qJD(2) * t224 + t92) * t262 + t281 * t269, t248 * t277, t196 * t56 - t111 * t224 - t118 * t92 + t281 * t90 + (qJD(2) * t225 - t25) * t262 + t303 * t269, -t196 * t55 + t111 * t166 - t118 * t226 - t282 * t90 + (-qJD(2) * t124 + t26) * t262 + t304 * t269, -t124 * t56 - t8 * t166 - t224 * t228 + t225 * t55 + t226 * t303 + t282 * t25 - t281 * t26 - t304 * t92, t111 * t196 - t90 * t118 - t124 * t228 + t225 * t8 - t303 * t25 + t304 * t26, t218 * t74 - t29 * t291, t74 * t102 + t103 * t72 + (t207 * t72 + t301) * t158 + (t297 - t296 + (t204 * t72 - t207 * t74) * qJD(5)) * t166, t218 * t325 + t224 * t29 + t281 * t74 + t291 * t56, t219 * t72 + t292 * t30, -t219 * t325 + t224 * t30 - t281 * t72 - t292 * t56, t281 * t325 - t294, -t2 * t224 + t219 * t23 - t225 * t30 - t235 * t281 + t6 * t292 + t306 * t72 - t309 * t325 + t67 * t56, t1 * t224 - t281 * t10 + t218 * t23 + t225 * t29 + t6 * t291 + t306 * t74 + t308 * t325 - t68 * t56, t67 * t29 - t68 * t30 - t250 * t235 + t309 * t74 + t308 * t72 + t251 * t10 + (-t1 * t204 - t2 * t207 + (-t10 * t207 - t204 * t235) * qJD(5)) * t166, t1 * t68 - t308 * t10 + t2 * t67 - t225 * t6 + t306 * t23 + t235 * t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, t208 * t223, -t138 ^ 2 - t139 ^ 2, -t82 * t138 + t81 * t139 + t146, 0, 0, 0, 0, 0, 0, t211 + 0.2e1 * t318 - t319, -t55 + t327, -t324 - t331, t226 * t25 + t26 * t92 + t111, 0, 0, 0, 0, 0, 0, -t204 * t255 - t321 + t52, -t207 * t255 - t302 - t320, (t29 - t330) * t207 + t325 * t301 + t307, t329 * t204 + t332 * t207 - t23 * t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, t324 - t331, -t55 - t327, -t311, -t166 * t240 - t319, t239, -t26 * t188 - t226 * t90 - t256, -t25 * t269 + t90 * t92 + t228, 0, 0, t252 * t74 - t297, (-t29 - t330) * t207 - t74 * t300 + t307, t252 * t325 + t302 - t320, t300 * t72 - t296, -t300 * t325 + t321 + t52, -t325 * t226, -pkin(4) * t30 - t15 * t325 + t204 * t229 - t207 * t244 + t226 * t235 - t26 * t72, pkin(4) * t29 + t10 * t226 + t16 * t325 + t204 * t244 + t207 * t229 - t26 * t74, t15 * t74 + t16 * t72 + ((-t30 + t293) * pkin(9) + t329) * t207 + ((qJD(5) * t72 - t29) * pkin(9) - t332) * t204, -t6 * pkin(4) - t10 * t16 + t235 * t15 - t23 * t26 + (t1 * t207 - t2 * t204 + (-t10 * t204 + t207 * t235) * qJD(5)) * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, -t72 ^ 2 + t74 ^ 2, t325 * t72 - t29, -t312, t325 * t74 - t30, t56, -t23 * t74 + t332, t23 * t72 - t329, 0, 0;];
tauc_reg = t7;
