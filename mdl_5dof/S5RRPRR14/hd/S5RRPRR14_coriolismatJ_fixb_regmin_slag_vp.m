% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:40
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR14_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR14_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR14_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRPRR14_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:38:42
% EndTime: 2019-12-31 20:39:07
% DurationCPUTime: 12.36s
% Computational Cost: add. (9952->614), mult. (25180->892), div. (0->0), fcn. (28514->10), ass. (0->464)
t386 = sin(pkin(10));
t388 = cos(pkin(10));
t389 = cos(pkin(5));
t387 = sin(pkin(5));
t392 = sin(qJ(2));
t605 = t387 * t392;
t343 = -t386 * t605 + t388 * t389;
t344 = t386 * t389 + t388 * t605;
t391 = sin(qJ(4));
t640 = cos(qJ(4));
t252 = -t640 * t343 + t391 * t344;
t393 = cos(qJ(5));
t664 = t393 * t252;
t237 = -t664 / 0.2e1;
t669 = t664 / 0.2e1 + t237;
t673 = qJD(5) * t669;
t514 = t640 * t388;
t591 = t391 * t386;
t430 = t514 - t591;
t394 = cos(qJ(2));
t604 = t387 * t394;
t493 = -t604 / 0.2e1;
t465 = t391 * t493;
t471 = t640 * t604;
t644 = t388 / 0.2e1;
t228 = t386 * t465 - t430 * t493 + t471 * t644;
t555 = qJD(1) * t394;
t511 = t387 * t555;
t469 = t252 * t511;
t672 = t228 * qJD(2) - t469;
t515 = t640 * t386;
t590 = t391 * t388;
t357 = t515 + t590;
t645 = -t386 / 0.2e1;
t227 = t357 * t493 + t388 * t465 + t471 * t645;
t322 = t640 * t344;
t592 = t391 * t343;
t661 = t322 + t592;
t470 = t661 * t511;
t671 = t227 * qJD(2) - t470;
t553 = qJD(2) * t357;
t558 = qJD(1) * t661;
t670 = t553 + t558;
t531 = t661 * qJD(4);
t376 = pkin(7) * t604;
t377 = t389 * t392 * pkin(1);
t349 = t376 + t377;
t319 = qJ(3) * t389 + t349;
t457 = -pkin(2) * t394 - qJ(3) * t392;
t320 = (-pkin(1) + t457) * t387;
t219 = -t386 * t319 + t388 * t320;
t149 = -pkin(3) * t604 - t344 * pkin(8) + t219;
t220 = t388 * t319 + t386 * t320;
t168 = pkin(8) * t343 + t220;
t89 = -t640 * t149 + t391 * t168;
t84 = pkin(4) * t604 + t89;
t668 = t84 / 0.2e1;
t654 = t252 / 0.2e1;
t653 = t661 / 0.2e1;
t390 = sin(qJ(5));
t598 = t390 * t661;
t204 = t393 * t604 + t598;
t667 = t204 * t661;
t584 = t393 * t661;
t206 = -t390 * t604 + t584;
t666 = t206 * t661;
t665 = t390 * t252;
t554 = qJD(2) * t430;
t559 = qJD(1) * t252;
t663 = -t554 + t559;
t614 = t252 * t357;
t648 = -t430 / 0.2e1;
t118 = t661 * t648 + t614 / 0.2e1;
t662 = t118 * qJD(4);
t532 = t252 * qJD(4);
t510 = t430 * t553;
t428 = qJD(1) * t118 - t510;
t429 = qJD(2) * t118 + t252 * t558;
t549 = qJD(2) * t393;
t507 = t390 * t549;
t459 = 0.2e1 * t357 * t507;
t351 = t430 ^ 2;
t352 = t357 ^ 2;
t660 = -t352 - t351;
t524 = t352 - t351;
t384 = t390 ^ 2;
t385 = t393 ^ 2;
t375 = t385 - t384;
t477 = qJD(4) * t375;
t659 = t459 - t477;
t658 = t252 ^ 2;
t657 = t204 / 0.2e1;
t656 = -t206 / 0.2e1;
t655 = -t252 / 0.2e1;
t368 = t393 * t605;
t304 = t430 * t604;
t594 = t390 * t304;
t262 = -t368 + t594;
t652 = -t262 / 0.2e1;
t636 = t357 * pkin(4);
t637 = t430 * pkin(9);
t288 = t636 - t637;
t651 = t288 / 0.2e1;
t635 = pkin(8) + qJ(3);
t365 = t635 * t388;
t478 = t635 * t386;
t298 = t640 * t365 - t391 * t478;
t650 = -t298 / 0.2e1;
t649 = t430 / 0.2e1;
t647 = -t357 / 0.2e1;
t646 = t357 / 0.2e1;
t643 = t390 / 0.2e1;
t642 = -t393 / 0.2e1;
t641 = t393 / 0.2e1;
t639 = pkin(1) * t394;
t638 = t252 * pkin(9);
t634 = -t84 + t89;
t633 = t390 * t89;
t632 = t393 * t89;
t348 = pkin(7) * t605 - t389 * t639;
t323 = -pkin(2) * t389 + t348;
t261 = -pkin(3) * t343 + t323;
t462 = pkin(4) * t252 - pkin(9) * t661;
t398 = t261 + t462;
t90 = t391 * t149 + t640 * t168;
t85 = -pkin(9) * t604 + t90;
t27 = t390 * t85 - t393 * t398;
t137 = pkin(4) * t661 + t638;
t588 = t393 * t137;
t5 = t90 * t204 - t27 * t661 + (t634 * t390 + t588) * t252;
t631 = t5 * qJD(1);
t28 = t390 * t398 + t393 * t85;
t602 = t390 * t137;
t6 = t90 * t206 - t28 * t661 + (t634 * t393 - t602) * t252;
t630 = t6 * qJD(1);
t346 = (pkin(2) * t392 - qJ(3) * t394) * t387;
t259 = t388 * t346 + t386 * t348;
t202 = (-pkin(8) * t388 * t394 + pkin(3) * t392) * t387 + t259;
t516 = t640 * t202;
t260 = t386 * t346 - t388 * t348;
t517 = t386 * t604;
t216 = -pkin(8) * t517 + t260;
t593 = t391 * t216;
t432 = t516 - t593;
t107 = -pkin(4) * t605 - t432;
t303 = t357 * t604;
t302 = pkin(3) * t517 + t349;
t147 = pkin(4) * t303 - pkin(9) * t304 + t302;
t587 = t393 * t147;
t175 = t391 * t202;
t213 = t640 * t216;
t565 = t213 + t175;
t108 = pkin(9) * t605 + t565;
t603 = t390 * t108;
t51 = t587 - t603;
t7 = t107 * t204 + t252 * t51 + t262 * t84 - t27 * t303;
t629 = t7 * qJD(1);
t580 = t393 * t304;
t263 = t390 * t605 + t580;
t589 = t393 * t108;
t601 = t390 * t147;
t52 = t589 + t601;
t8 = t107 * t206 - t252 * t52 + t263 * t84 - t28 * t303;
t628 = t8 * qJD(1);
t13 = -t204 * t84 + t252 * t27;
t627 = qJD(1) * t13;
t14 = t206 * t84 - t252 * t28;
t626 = qJD(1) * t14;
t45 = -t261 * t252 - t89 * t604;
t625 = qJD(1) * t45;
t46 = -t261 * t661 - t90 * t604;
t624 = qJD(1) * t46;
t55 = -t658 * t390 + t667;
t623 = qJD(1) * t55;
t56 = -t252 * t665 - t667;
t622 = qJD(1) * t56;
t57 = -t658 * t393 + t666;
t621 = qJD(1) * t57;
t58 = t252 * t664 + t666;
t620 = qJD(1) * t58;
t98 = -t219 * t344 + t220 * t343;
t619 = qJD(1) * t98;
t19 = -t302 * t252 - t261 * t303 + t432 * t604 + t89 * t605;
t618 = t19 * qJD(1);
t20 = t302 * t661 + t261 * t304 + (-t90 * t392 + t565 * t394) * t387;
t617 = t20 * qJD(1);
t616 = t206 * t390;
t615 = t206 * t393;
t272 = t390 * t357;
t586 = t393 * t204;
t431 = t586 / 0.2e1 + t616 / 0.2e1;
t408 = t272 * t664 - t430 * t431;
t433 = t263 * t641 + t390 * t652;
t26 = t408 - t433;
t613 = t26 * qJD(1);
t612 = t263 * t390;
t297 = t391 * t365 + t640 * t478;
t611 = t297 * t390;
t610 = t297 * t393;
t609 = t343 * t388;
t608 = t344 * t386;
t607 = t357 * t393;
t382 = t387 ^ 2;
t606 = t382 * t392;
t600 = t390 * t204;
t597 = t390 * t288;
t596 = t390 * t298;
t595 = t390 * t303;
t270 = t390 * t430;
t583 = t393 * t288;
t582 = t393 * t298;
t581 = t393 * t303;
t275 = t393 * t430;
t380 = -pkin(3) * t388 - pkin(2);
t402 = t261 * t649 + t297 * t493 + t380 * t655;
t482 = -t175 / 0.2e1 - t213 / 0.2e1;
t41 = t402 - t482;
t579 = t41 * qJD(1);
t401 = t261 * t646 + t380 * t653 + t298 * t604 / 0.2e1;
t424 = -t593 / 0.2e1 + t516 / 0.2e1;
t43 = t401 - t424;
t578 = t43 * qJD(1);
t47 = -t259 * t344 + t260 * t343 + (-t219 * t388 - t220 * t386) * t604;
t577 = t47 * qJD(1);
t50 = t219 * t259 + t220 * t260 + t323 * t349;
t576 = t50 * qJD(1);
t451 = t586 + t616;
t53 = t451 * t252;
t575 = t53 * qJD(1);
t54 = -t204 * t263 - t206 * t262;
t574 = t54 * qJD(1);
t483 = t275 / 0.2e1;
t497 = -t614 / 0.2e1;
t420 = t206 * t483 + t385 * t497;
t66 = -t612 / 0.2e1 + t420;
t573 = t66 * qJD(1);
t495 = -t605 / 0.2e1;
t498 = t204 * t649;
t72 = t498 - t580 / 0.2e1 + (t497 + t495) * t390;
t572 = t72 * qJD(1);
t426 = t206 * t649 + t357 * t237;
t458 = t368 / 0.2e1 - t594 / 0.2e1;
t73 = t426 - t458;
t571 = t73 * qJD(1);
t78 = -t219 * t605 + t259 * t604 - t323 * t517 + t349 * t343;
t570 = t78 * qJD(1);
t79 = t349 * t344 + (-t220 * t392 + (t323 * t388 + t260) * t394) * t387;
t569 = t79 * qJD(1);
t82 = -t204 * t303 - t252 * t262;
t568 = t82 * qJD(1);
t83 = t206 * t303 + t252 * t263;
t567 = t83 * qJD(1);
t97 = -t252 * t304 - t303 * t661;
t566 = t97 * qJD(1);
t372 = t386 ^ 2 + t388 ^ 2;
t564 = qJD(1) * t665;
t481 = 0.2e1 * t654;
t125 = t481 * t390;
t563 = qJD(1) * t125;
t145 = t252 * t605 - t303 * t604;
t562 = qJD(1) * t145;
t146 = t304 * t604 - t605 * t661;
t561 = qJD(1) * t146;
t560 = qJD(1) * t206;
t350 = t515 / 0.2e1 + t590 / 0.2e1;
t301 = t350 * t604;
t557 = qJD(1) * t301;
t556 = qJD(1) * t389;
t552 = qJD(2) * t380;
t551 = qJD(2) * t386;
t550 = qJD(2) * t388;
t548 = qJD(2) * t394;
t547 = qJD(3) * t393;
t546 = qJD(3) * t394;
t545 = qJD(4) * t357;
t544 = qJD(4) * t390;
t543 = qJD(4) * t393;
t542 = qJD(5) * t252;
t541 = qJD(5) * t390;
t540 = qJD(5) * t393;
t131 = 0.2e1 * t237;
t539 = t131 * qJD(1);
t226 = (t647 + t350) * t604;
t538 = t226 * qJD(1);
t537 = t226 * qJD(2);
t536 = t227 * qJD(1);
t534 = t228 * qJD(1);
t229 = (t649 - t514 / 0.2e1 + t591 / 0.2e1) * t604;
t533 = t229 * qJD(1);
t530 = t270 * qJD(2);
t299 = pkin(1) * t606 + t349 * t389;
t529 = t299 * qJD(1);
t300 = -t348 * t389 + t382 * t639;
t528 = t300 * qJD(1);
t527 = t301 * qJD(5);
t347 = t430 * qJD(4);
t356 = (-t392 ^ 2 + t394 ^ 2) * t382;
t526 = t356 * qJD(1);
t525 = t387 * qJD(4);
t523 = pkin(4) * t657;
t522 = pkin(4) * t656;
t521 = pkin(4) * t652;
t520 = -pkin(4) * t263 / 0.2e1;
t519 = t638 / 0.2e1;
t518 = t668 - t89 / 0.2e1;
t513 = t206 * t559;
t509 = t385 * t553;
t508 = t357 * t549;
t506 = t387 * t546;
t505 = t394 * t525;
t504 = t390 * t543;
t503 = t430 * t540;
t502 = t357 * t347;
t501 = t382 * t555;
t500 = qJD(2) * t605;
t499 = t390 * t540;
t341 = t357 * t543;
t496 = t607 / 0.2e1;
t494 = t605 / 0.2e1;
t492 = -t603 / 0.2e1;
t491 = -t665 / 0.2e1;
t490 = -t598 / 0.2e1;
t489 = -t595 / 0.2e1;
t488 = t595 / 0.2e1;
t487 = -t272 / 0.2e1;
t486 = -t589 / 0.2e1;
t485 = t584 / 0.2e1;
t484 = -t581 / 0.2e1;
t480 = 0.2e1 * t653;
t479 = -t376 / 0.2e1 - t377 / 0.2e1;
t476 = t530 - t541;
t475 = qJD(2) + t556;
t474 = -qJD(5) - t559;
t473 = qJD(3) + t552;
t472 = -qJD(5) + t554;
t468 = t548 * t606;
t467 = t392 * t501;
t464 = t519 + t137 / 0.2e1;
t463 = t147 / 0.2e1 + t84 * t647;
t461 = -pkin(4) * t430 - pkin(9) * t357;
t460 = 0.2e1 * t390 * t341;
t456 = -qJD(4) + t511;
t400 = -pkin(9) * t303 / 0.2e1 + t90 * t647 - t518 * t430;
t423 = t380 + t461;
t160 = -t393 * t423 + t596;
t411 = t160 * t653 + t204 * t650 + t27 * t646;
t421 = t107 / 0.2e1 + t252 * t651 + t137 * t648;
t1 = t390 * t400 - t393 * t421 + t411 + t521;
t39 = -t288 * t275 + (-t160 + t596) * t357;
t455 = -t1 * qJD(1) + t39 * qJD(2);
t161 = t390 * t423 + t582;
t409 = t161 * t653 + t206 * t650 + t28 * t646;
t2 = t390 * t421 + t393 * t400 + t409 + t520;
t40 = t288 * t270 + (-t161 + t582) * t357;
t454 = -t2 * qJD(1) + t40 * qJD(2);
t412 = t160 * t655 + t27 * t649 + t297 * t657;
t10 = -t390 * t463 + t412 + t486;
t99 = -t160 * t430 - t297 * t272;
t453 = -qJD(1) * t10 + qJD(2) * t99;
t100 = t161 * t430 + t297 * t607;
t410 = t161 * t654 + t28 * t648 + t297 * t656;
t9 = t393 * t463 + t410 + t492;
t452 = qJD(1) * t9 - qJD(2) * t100;
t450 = -t259 * t386 + t260 * t388;
t102 = -t661 ^ 2 + t658;
t68 = -t252 * t430 - t357 * t661;
t449 = qJD(1) * t102 + qJD(2) * t68;
t221 = t524 * t390;
t404 = (t490 - t204 / 0.2e1) * t357 - t252 * t270;
t30 = t484 + t404;
t448 = -qJD(1) * t30 + qJD(2) * t221;
t222 = t660 * t390;
t419 = -t430 * t481 + t646 * t661;
t397 = t204 * t646 + t419 * t390;
t32 = t484 + t397;
t447 = qJD(1) * t32 - qJD(2) * t222;
t223 = t524 * t393;
t403 = (t485 + t206 / 0.2e1) * t357 + t252 * t275;
t34 = t489 + t403;
t446 = -qJD(1) * t34 - qJD(2) * t223;
t445 = qJD(1) * t68 - qJD(2) * t524;
t282 = t660 * t393;
t396 = t206 * t646 + t419 * t393;
t36 = t488 + t396;
t444 = qJD(1) * t36 - qJD(2) * t282;
t362 = t372 * qJ(3);
t395 = (t609 / 0.2e1 + t608 / 0.2e1) * qJ(3) + t219 * t645 + t220 * t644;
t70 = t395 + t479;
t443 = qJD(1) * t70 + qJD(2) * t362;
t442 = t472 * t393;
t128 = t480 * t390;
t441 = -qJD(1) * t128 - qJD(2) * t272;
t440 = -qJD(1) * t664 + qJD(2) * t275;
t314 = t322 / 0.2e1;
t247 = t314 + t592 / 0.2e1;
t437 = qJD(1) * t247 + qJD(2) * t350;
t250 = t608 + t609;
t276 = t343 ^ 2 + t344 ^ 2;
t436 = qJD(1) * t276 + qJD(2) * t250;
t435 = qJD(1) * t250 + qJD(2) * t372;
t434 = -t637 / 0.2e1 + t636 / 0.2e1;
t133 = t480 * t393;
t427 = qJD(1) * t133 + t508;
t425 = t651 + t434;
t49 = (-t600 + t615) * t357;
t77 = t204 ^ 2 - t206 ^ 2;
t422 = qJD(1) * t77 - qJD(2) * t49 - qJD(4) * t451;
t15 = t390 * t464 + t393 * t518 + t523;
t93 = t425 * t390;
t418 = pkin(4) * t543 - qJD(1) * t15 - qJD(2) * t93;
t17 = t390 * t518 - t393 * t464 + t522;
t95 = t425 * t393;
t417 = pkin(4) * t544 - qJD(1) * t17 + qJD(2) * t95;
t110 = -t600 / 0.2e1 + t615 / 0.2e1;
t92 = t431 * t357;
t416 = qJD(2) * t92 - qJD(4) * t110 + t204 * t560;
t269 = (t384 / 0.2e1 - t385 / 0.2e1) * t357;
t415 = qJD(1) * t110 - qJD(2) * t269 + t504;
t414 = qJD(5) * t247 + t429;
t413 = qJD(5) * t350 + t428;
t407 = qJD(1) * t92 + qJD(4) * t269 + t352 * t507;
t281 = t375 * t352;
t406 = qJD(1) * t49 + qJD(2) * t281 + t460;
t405 = qJD(1) * t451 + t659;
t399 = (qJD(2) * t457 + t546) * t387;
t367 = qJD(2) * t494;
t342 = t350 * qJD(4);
t324 = (t501 - t525 / 0.2e1) * t392;
t310 = -0.2e1 * t357 * t499;
t294 = t581 / 0.2e1;
t265 = t270 * qJD(5);
t264 = t269 * qJD(5);
t248 = t314 - t322 / 0.2e1;
t242 = t250 * qJD(3);
t218 = t229 * qJD(2);
t152 = qJD(2) * t301 + qJD(4) * t247;
t134 = t642 * t661 + t485;
t127 = t643 * t661 + t490;
t126 = t491 + t665 / 0.2e1;
t109 = t110 * qJD(5);
t96 = t611 + t583 / 0.2e1 - t434 * t393;
t94 = t610 - t597 / 0.2e1 + t434 * t390;
t91 = t92 * qJD(5);
t74 = t426 + t458;
t71 = t252 * t487 + t498 + t580 / 0.2e1 + t390 * t494;
t69 = t395 - t479;
t67 = t68 * qJD(4);
t65 = t612 / 0.2e1 + t420;
t59 = t451 * qJD(5);
t48 = t49 * qJD(5);
t44 = t401 + t424;
t42 = t402 + t482;
t35 = t489 + t396;
t33 = t488 + t403;
t31 = t294 + t397;
t29 = t294 + t404;
t25 = t408 + t433;
t18 = pkin(9) * t237 + t522 + t84 * t643 + t633 / 0.2e1 + t588 / 0.2e1;
t16 = t390 * t519 + t523 + t84 * t641 + t632 / 0.2e1 - t602 / 0.2e1;
t12 = t84 * t496 + t492 + t587 / 0.2e1 - t410;
t11 = t84 * t487 + t486 - t601 / 0.2e1 - t412;
t4 = (t597 - t610) * t655 + (t602 - t632) * t649 + t297 * t237 + t90 * t496 + t84 * t483 + pkin(9) * t484 + t520 + t107 * t643 - t409;
t3 = (t583 + t611) * t654 + (t588 + t633) * t648 + t297 * t491 + t90 * t272 / 0.2e1 + t270 * t668 + pkin(9) * t489 + t521 + t107 * t642 - t411;
t21 = [0, 0, 0, t468, t356 * qJD(2), t387 * t389 * t548, -t389 * t500, 0, -t299 * qJD(2), -t300 * qJD(2), -t78 * qJD(2) + t344 * t506, t79 * qJD(2) + t343 * t506, qJD(2) * t47 + qJD(3) * t276, qJD(2) * t50 + qJD(3) * t98, (qJD(2) * t304 - t532) * t661, qJD(2) * t97 + qJD(4) * t102, -t146 * qJD(2) + t252 * t505, -t145 * qJD(2) + t505 * t661, -t468, -t19 * qJD(2) - t46 * qJD(4) + t506 * t661, t20 * qJD(2) + t45 * qJD(4) - t252 * t506, (qJD(2) * t263 - qJD(5) * t204 - t393 * t532) * t206, qJD(2) * t54 + qJD(4) * t53 + qJD(5) * t77, qJD(2) * t83 + qJD(4) * t57 - t204 * t542, qJD(2) * t82 - qJD(4) * t55 - t206 * t542, (qJD(2) * t303 + t531) * t252, qJD(2) * t7 - qJD(3) * t56 + qJD(4) * t5 + qJD(5) * t14, qJD(2) * t8 + qJD(3) * t58 + qJD(4) * t6 + qJD(5) * t13; 0, 0, 0, t467, t526, t475 * t604, -t475 * t605, 0, -qJD(2) * t349 - t529, qJD(2) * t348 - t528, -t349 * t550 + t386 * t399 - t570, t349 * t551 + t388 * t399 + t569, qJD(2) * t450 + t242 + t577, t576 + (-t349 * pkin(2) + qJ(3) * t450) * qJD(2) + t69 * qJD(3), t304 * t670 - t662, t566 + (-t303 * t357 + t304 * t430) * qJD(2) + t67, -qJD(4) * t229 + t357 * t500 - t561, -qJD(4) * t226 + t430 * t500 - t562, -t324, -t618 + (-t297 * t605 - t302 * t430 + t303 * t380) * qJD(2) - t227 * qJD(3) + t44 * qJD(4), t617 + (-t298 * t605 + t302 * t357 + t304 * t380) * qJD(2) + t228 * qJD(3) + t42 * qJD(4), t65 * qJD(4) - t91 + (t508 + t560) * t263, t574 + t25 * qJD(4) - t48 + (-t262 * t393 - t612) * t553, t567 + (-t263 * t430 + t357 * t581) * qJD(2) + t33 * qJD(4) + t71 * qJD(5), t568 + (t262 * t430 - t272 * t303) * qJD(2) + t29 * qJD(4) + t74 * qJD(5), t303 * t663 + t527 + t662, t629 + (t107 * t272 - t160 * t303 + t262 * t297 - t430 * t51) * qJD(2) + t31 * qJD(3) + t3 * qJD(4) + t12 * qJD(5), t628 + (t107 * t607 - t161 * t303 + t263 * t297 + t430 * t52) * qJD(2) + t35 * qJD(3) + t4 * qJD(4) + t11 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (qJD(1) * t344 + t551) * t604, (qJD(1) * t343 + t550) * t604, t436, qJD(2) * t69 + t619, 0, 0, 0, 0, 0, t248 * qJD(4) - t671, t672, 0, 0, 0, 0, 0, qJD(2) * t31 + qJD(4) * t134 + qJD(5) * t126 - t622, qJD(2) * t35 + qJD(4) * t127 + t620 + t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t429, t449, t252 * t456 - t218, t456 * t661 - t537, t367, qJD(2) * t44 + qJD(3) * t248 - qJD(4) * t90 - t624, qJD(2) * t42 + qJD(4) * t89 + t625, t65 * qJD(2) + t109 + (-t544 - t560) * t664, t25 * qJD(2) - t252 * t477 + t575 - t59, qJD(2) * t33 + t390 * t531 + t621 + t673, qJD(2) * t29 + t393 * t531 - t623, t414, t631 + t3 * qJD(2) + t134 * qJD(3) + (t390 * t462 - t90 * t393) * qJD(4) + t18 * qJD(5), t630 + t4 * qJD(2) + t127 * qJD(3) + (t90 * t390 + t393 * t462) * qJD(4) + t16 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t416, t422, t71 * qJD(2) + qJD(4) * t669 + t204 * t474, t74 * qJD(2) + t206 * t474, t152, qJD(2) * t12 + qJD(3) * t126 + qJD(4) * t18 - qJD(5) * t28 + t626, qJD(2) * t11 + qJD(3) * t669 + qJD(4) * t16 + qJD(5) * t27 + t627; 0, 0, 0, -t467, -t526, -t389 * t511, t556 * t605, 0, t529, t528, t570, -t569, t242 - t577, qJD(3) * t70 - t576, -t304 * t558 - t662, t67 - t566, -qJD(4) * t228 + t561, -qJD(4) * t227 + t562, t324, -qJD(3) * t226 + qJD(4) * t43 + t618, qJD(3) * t229 + qJD(4) * t41 - t617, qJD(4) * t66 - t263 * t560 - t91, qJD(4) * t26 - t48 - t574, qJD(4) * t34 + qJD(5) * t72 - t567, qJD(4) * t30 + qJD(5) * t73 - t568, -t303 * t559 - t527 + t662, qJD(3) * t32 - qJD(4) * t1 - qJD(5) * t9 - t629, qJD(3) * t36 - qJD(4) * t2 - qJD(5) * t10 - t628; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372 * qJD(3), t362 * qJD(3), t502, -t524 * qJD(4), 0, 0, 0, t380 * t545, t380 * t347, -t352 * t499 + t385 * t502, -qJD(5) * t281 - t430 * t460, t357 * t430 * t541 + qJD(4) * t223, -qJD(4) * t221 + t357 * t503, -t502, -qJD(3) * t222 + qJD(4) * t39 + qJD(5) * t100, -qJD(3) * t282 + qJD(4) * t40 + qJD(5) * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t435, t443, 0, 0, 0, 0, 0, -t538, t533, 0, 0, 0, 0, 0, t447, t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t428, t445, t347 - t534, -t536 - t545, qJD(1) * t495, -qJD(4) * t298 + t357 * t552 + t578, qJD(4) * t297 + t430 * t552 + t579, t573 - t264 - (-t504 - t509) * t430, -t430 * t659 + t310 + t613, t357 * t544 - t446, t341 - t448, t413, (t390 * t461 - t582) * qJD(4) + t96 * qJD(5) + t455, (t393 * t461 + t596) * qJD(4) + t94 * qJD(5) + t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t407, -t406, t272 * t472 + t572, t357 * t442 + t571, t342 - t557, qJD(4) * t96 - qJD(5) * t161 - t452, qJD(4) * t94 + qJD(5) * t160 + t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t344 * t511, -t343 * t511, -t436, -qJD(2) * t70 - t619, 0, 0, 0, 0, 0, -t470 + t537 + t531, -t218 + t469 - t532, 0, 0, 0, 0, 0, -qJD(2) * t32 + qJD(4) * t133 - qJD(5) * t125 + t622, -qJD(2) * t36 - qJD(4) * t128 + qJD(5) * t131 - t620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t435, -t443, 0, 0, 0, 0, 0, t538 + t545, t347 - t533, 0, 0, 0, 0, 0, t265 + t341 - t447, -qJD(4) * t272 - t444 + t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t670, -t663, 0, 0, 0, 0, 0, t427, t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t476 - t563, t442 + t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t429, -t449, t672, t671, t367, -qJD(2) * t43 - qJD(3) * t661 + t624, -qJD(2) * t41 + qJD(3) * t252 - t625, -qJD(2) * t66 + t393 * t513 + t109, -qJD(2) * t26 - t575 - t59, -qJD(2) * t34 + qJD(5) * t664 - t621, -qJD(2) * t30 - qJD(5) * t665 + t623, -t414, qJD(2) * t1 - qJD(3) * t133 + qJD(5) * t17 - t631, qJD(2) * t2 + qJD(3) * t128 + qJD(5) * t15 - t630; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t428, -t445, t534, t536, qJD(1) * t494, -t357 * t473 - t578, -t430 * t473 - t579, -t430 * t509 - t264 - t573, t430 * t459 + t310 - t613, -qJD(5) * t275 + t446, t265 + t448, -t413, -qJD(5) * t95 - t357 * t547 - t455, qJD(3) * t272 + qJD(5) * t93 - t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t670, t663, 0, 0, 0, 0, 0, -t427, -t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t499, t375 * qJD(5), 0, 0, 0, -pkin(4) * t541, -pkin(4) * t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415, -t405, -t440 + t540, t476 - t564, -t437, -pkin(9) * t540 - t417, pkin(9) * t541 - t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t416, -t422, -qJD(2) * t72 - qJD(4) * t664 + t204 * t559, -qJD(2) * t73 + qJD(4) * t665 + t513, t152, qJD(2) * t9 + qJD(3) * t125 - qJD(4) * t17 - t626, qJD(2) * t10 - qJD(3) * t131 - qJD(4) * t15 - t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407, t406, qJD(4) * t275 - t390 * t510 - t572, -qJD(4) * t270 - t430 * t508 - t571, t342 + t557, -qJD(3) * t270 + qJD(4) * t95 + t452, -qJD(4) * t93 - t430 * t547 - t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t530 + t563, -t430 * t549 - t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t415, t405, t440, -t530 + t564, t437, t417, t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t21;
