% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:18
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:17:22
% EndTime: 2019-12-31 21:17:42
% DurationCPUTime: 11.90s
% Computational Cost: add. (17053->602), mult. (33861->793), div. (0->0), fcn. (37648->8), ass. (0->480)
t596 = qJD(2) + qJD(3);
t465 = sin(pkin(9));
t792 = -t465 / 0.2e1;
t466 = cos(pkin(9));
t470 = cos(qJ(2));
t739 = -pkin(7) - pkin(6);
t446 = t739 * t470;
t717 = cos(qJ(3));
t434 = t717 * t446;
t469 = sin(qJ(2));
t445 = t739 * t469;
t468 = sin(qJ(3));
t641 = t468 * t445;
t751 = -t434 + t641;
t778 = t751 * t466;
t736 = -t778 / 0.2e1;
t554 = -t717 * t445 - t468 * t446;
t584 = t717 * t469;
t640 = t468 * t470;
t432 = t584 + t640;
t658 = t432 * t465;
t286 = pkin(4) * t658 + t554;
t430 = t468 * t469 - t717 * t470;
t323 = t465 * t430;
t406 = pkin(4) * t323;
t774 = t751 - t406;
t791 = t286 * t774;
t716 = cos(qJ(5));
t578 = t716 * t466;
t467 = sin(qJ(5));
t643 = t467 * t465;
t425 = -t578 + t643;
t790 = t774 * t425;
t579 = t716 * t465;
t642 = t467 * t466;
t427 = t579 + t642;
t789 = t774 * t427;
t421 = -t434 / 0.2e1;
t776 = t421 + t641 / 0.2e1;
t396 = t432 * t643;
t304 = t432 * t578 - t396;
t487 = t427 * t432;
t726 = t427 / 0.2e1;
t727 = -t425 / 0.2e1;
t135 = t304 * t727 - t487 * t726;
t760 = t596 * t427;
t788 = -qJD(1) * t135 + t425 * t760;
t460 = -t470 * pkin(2) - pkin(1);
t713 = t430 * pkin(3);
t515 = t460 + t713;
t659 = t432 * qJ(4);
t485 = t515 - t659;
t779 = t751 * t465;
t205 = t466 * t485 - t779;
t787 = (t205 + t779) * t432;
t206 = t465 * t485 + t778;
t786 = (-t206 + t778) * t432;
t395 = t430 * t643;
t303 = -t430 * t578 + t395;
t155 = -pkin(8) * t658 + t206;
t710 = -pkin(8) - qJ(4);
t474 = t430 * pkin(4) - t779 + (t710 * t432 + t515) * t466;
t98 = t716 * t155 + t467 * t474;
t785 = t286 * t303 + t304 * t774 - t432 * t98;
t299 = t427 * t430;
t97 = t155 * t467 - t716 * t474;
t784 = -t286 * t299 - t432 * t97 + t487 * t774;
t783 = t425 / 0.2e1;
t714 = t751 * pkin(3);
t759 = t596 * t432;
t781 = t430 * t759;
t757 = t596 * t466;
t531 = t465 * t757;
t343 = t466 * t554;
t662 = t554 * t465;
t780 = t554 * t468;
t665 = t751 * t554;
t777 = -t406 / 0.2e1 + t776;
t749 = qJD(1) * t487;
t775 = -t596 * t425 - t749;
t566 = t643 / 0.2e1;
t163 = t396 / 0.2e1 + (t566 - t578) * t432;
t773 = -qJD(1) * t163 + t760;
t756 = t206 * t466 / 0.2e1 + t205 * t792;
t754 = -t756 + t776;
t771 = qJD(1) * t754;
t770 = qJD(4) * t754;
t769 = t135 * qJD(5);
t752 = t756 + t776;
t768 = t752 * qJD(4);
t618 = qJD(1) * t304;
t767 = t135 * t596 - t487 * t618;
t766 = t596 * t554;
t765 = t487 ^ 2;
t489 = -t642 / 0.2e1 - t579 / 0.2e1;
t213 = (t726 + t489) * t430;
t764 = t213 * t596;
t214 = (t726 - t489) * t430;
t763 = t214 * t596;
t712 = t466 * pkin(4);
t457 = -pkin(3) - t712;
t720 = t457 / 0.2e1;
t593 = t717 * pkin(2);
t459 = -t593 - pkin(3);
t442 = t459 - t712;
t722 = t442 / 0.2e1;
t560 = t720 + t722;
t762 = t427 * t560;
t761 = t487 * t425;
t614 = qJD(1) * t430;
t575 = t487 * t614;
t340 = t596 * t430;
t463 = t465 ^ 2;
t464 = t466 ^ 2;
t448 = t463 + t464;
t758 = t596 * t448;
t746 = t98 * t783 - t97 * t427 / 0.2e1;
t755 = t746 + t777;
t753 = -t746 + t777;
t429 = t432 ^ 2;
t595 = -t430 ^ 2 + t429;
t585 = t717 * t430;
t651 = t459 * t430;
t711 = t468 * pkin(2);
t456 = qJ(4) + t711;
t654 = t456 * t432;
t657 = t432 * t468;
t750 = t713 / 0.2e1 - t654 / 0.2e1 - t651 / 0.2e1 + (-t585 / 0.2e1 + t657 / 0.2e1) * pkin(2);
t747 = qJD(5) * t487;
t298 = t425 * t432;
t125 = -t298 * t304 + t765;
t83 = (t304 / 0.2e1 - t298 / 0.2e1) * t427 + t761;
t745 = qJD(1) * t125 + t596 * t83;
t122 = -t427 * t304 + t761;
t129 = -t304 ^ 2 + t765;
t744 = qJD(1) * t129 + t122 * t596;
t417 = t425 ^ 2;
t741 = t427 ^ 2;
t292 = t417 - t741;
t60 = qJD(1) * t122 + t292 * t596;
t346 = t417 + t741;
t56 = qJD(1) * t83 + t346 * t596;
t462 = t466 * pkin(8);
t414 = t466 * t456 + t462;
t558 = t465 * (-pkin(8) - t456);
t309 = t414 * t467 - t716 * t558;
t738 = -t309 / 0.2e1;
t310 = t716 * t414 + t467 * t558;
t737 = t310 / 0.2e1;
t648 = t466 * qJ(4);
t443 = t462 + t648;
t557 = t710 * t465;
t353 = t443 * t467 - t716 * t557;
t735 = -t353 / 0.2e1;
t734 = t353 / 0.2e1;
t354 = t716 * t443 + t467 * t557;
t733 = -t354 / 0.2e1;
t732 = t354 / 0.2e1;
t731 = t751 / 0.2e1;
t540 = t717 * t716;
t586 = t467 * t717;
t545 = t466 * t586;
t378 = (-t465 * t540 - t545) * pkin(2);
t730 = -t378 / 0.2e1;
t546 = t465 * t586;
t379 = (t466 * t540 - t546) * pkin(2);
t729 = t379 / 0.2e1;
t728 = t395 / 0.2e1;
t725 = -t430 / 0.2e1;
t724 = t430 / 0.2e1;
t723 = t432 / 0.2e1;
t422 = t434 / 0.2e1;
t721 = -t457 / 0.2e1;
t715 = pkin(2) * t469;
t709 = pkin(2) * qJD(3);
t708 = qJD(2) * pkin(2);
t342 = pkin(3) * t432 + qJ(4) * t430;
t326 = t342 + t715;
t219 = t466 * t326 + t662;
t537 = t432 * pkin(4) + t430 * t462;
t147 = t219 + t537;
t583 = t716 * t147;
t220 = t465 * t326 - t343;
t594 = pkin(8) * t323;
t158 = t594 + t220;
t645 = t467 * t158;
t99 = t583 - t645;
t705 = t99 * t427;
t30 = -t298 * t97 - t487 * t98;
t704 = qJD(1) * t30;
t52 = -t286 * t487 + t430 * t97;
t703 = qJD(1) * t52;
t53 = t286 * t304 - t430 * t98;
t702 = qJD(1) * t53;
t581 = t716 * t158;
t647 = t467 * t147;
t100 = t581 + t647;
t700 = t100 * t425;
t226 = t466 * t342 + t662;
t148 = t226 + t537;
t582 = t716 * t148;
t227 = t465 * t342 - t343;
t162 = t594 + t227;
t644 = t467 * t162;
t107 = t582 - t644;
t699 = t107 * t427;
t580 = t716 * t162;
t646 = t467 * t148;
t108 = t580 + t646;
t698 = t108 * t425;
t529 = t299 * t98 + t303 * t97;
t12 = -t100 * t487 - t304 * t99 + t529;
t697 = t12 * qJD(1);
t13 = -t107 * t304 - t108 * t487 + t529;
t696 = t13 * qJD(1);
t16 = t100 * t98 - t97 * t99 + t791;
t695 = t16 * qJD(1);
t17 = -t107 * t97 + t108 * t98 + t791;
t694 = t17 * qJD(1);
t691 = t219 * t465;
t690 = t220 * t466;
t689 = t226 * t465;
t688 = t227 * t466;
t23 = t430 * t99 + t784;
t687 = t23 * qJD(1);
t24 = -t100 * t430 + t785;
t686 = t24 * qJD(1);
t25 = t107 * t430 + t784;
t685 = t25 * qJD(1);
t26 = -t108 * t430 + t785;
t684 = t26 * qJD(1);
t681 = t286 * t425;
t680 = t286 * t427;
t677 = t309 * t303;
t676 = t309 * t427;
t675 = t309 * t432;
t674 = t310 * t299;
t673 = t310 * t425;
t672 = t310 * t432;
t671 = t353 * t303;
t670 = t353 * t427;
t669 = t353 * t432;
t668 = t354 * t299;
t667 = t354 * t425;
t666 = t354 * t432;
t522 = -t205 * t466 - t206 * t465;
t500 = t522 * t430;
t41 = (t219 * t466 + t220 * t465) * t432 + t500;
t661 = t41 * qJD(1);
t660 = t425 * t430;
t656 = t442 * t299;
t655 = t442 * t303;
t653 = t457 * t299;
t652 = t457 * t303;
t46 = (t226 * t466 + t227 * t465) * t432 + t500;
t650 = t46 * qJD(1);
t47 = t205 * t219 + t206 * t220 + t665;
t639 = t47 * qJD(1);
t49 = t205 * t226 + t206 * t227 + t665;
t638 = t49 * qJD(1);
t62 = t786 + (-t220 - t343) * t430;
t637 = t62 * qJD(1);
t63 = t787 + (t219 - t662) * t430;
t636 = t63 * qJD(1);
t64 = t786 + (-t227 - t343) * t430;
t635 = t64 * qJD(1);
t65 = t787 + (t226 - t662) * t430;
t634 = t65 * qJD(1);
t188 = -t378 * t427 - t379 * t425;
t335 = t346 * qJD(4);
t633 = t188 * qJD(3) + t335;
t488 = t448 * t717;
t413 = t488 * pkin(2);
t444 = t448 * qJD(4);
t632 = t413 * qJD(3) + t444;
t461 = t711 / 0.2e1;
t473 = (-t456 / 0.2e1 + t461 + qJ(4) / 0.2e1) * t432 + (-t593 / 0.2e1 - t459 / 0.2e1 - pkin(3) / 0.2e1) * t430;
t103 = t736 + t778 / 0.2e1 + t473 * t465;
t631 = qJD(1) * t103;
t115 = t522 * t432;
t630 = qJD(1) * t115;
t126 = t299 * t304 - t303 * t487;
t627 = qJD(1) * t126;
t138 = t299 * t430 - t432 * t487;
t623 = qJD(1) * t138;
t139 = t303 * t430 + t304 * t432;
t622 = qJD(1) * t139;
t318 = t430 * t715 + t432 * t460;
t617 = qJD(1) * t318;
t319 = -t430 * t460 + t432 * t715;
t616 = qJD(1) * t319;
t359 = t422 + t421;
t615 = qJD(1) * t359;
t613 = qJD(1) * t432;
t612 = qJD(1) * t460;
t611 = qJD(1) * t470;
t610 = qJD(2) * t442;
t609 = qJD(3) * t457;
t608 = qJD(3) * t460;
t607 = qJD(4) * t430;
t606 = qJD(5) * t427;
t605 = qJD(5) * t430;
t130 = t460 * t715;
t603 = t130 * qJD(1);
t196 = t213 * qJD(1);
t189 = t214 * qJD(1);
t538 = -t578 / 0.2e1;
t215 = t728 + (t538 + t783) * t430;
t190 = t215 * qJD(1);
t216 = t728 + (t538 + t727) * t430;
t193 = t216 * qJD(1);
t231 = t448 * t429;
t602 = t231 * qJD(1);
t272 = t595 * t465;
t266 = t272 * qJD(1);
t273 = t595 * t466;
t267 = t273 * qJD(1);
t601 = t595 * qJD(1);
t416 = t584 / 0.2e1 + t640 / 0.2e1;
t600 = t416 * qJD(1);
t411 = t425 * qJD(5);
t449 = -t469 ^ 2 + t470 ^ 2;
t599 = t449 * qJD(1);
t598 = t469 * qJD(2);
t597 = t470 * qJD(2);
t592 = pkin(1) * t469 * qJD(1);
t591 = pkin(1) * t611;
t590 = t468 * t708;
t589 = t468 * t709;
t587 = -t711 / 0.2e1;
t577 = t298 * t614;
t574 = t430 * t612;
t573 = t432 * t612;
t572 = t427 * t411;
t571 = t430 * t613;
t405 = t466 * t607;
t570 = t469 * t597;
t569 = t681 / 0.2e1;
t568 = -t680 / 0.2e1;
t567 = qJ(4) * t792;
t563 = t309 / 0.2e1 + t735;
t562 = -t310 / 0.2e1 + t732;
t561 = t722 + t721;
t556 = t717 * qJD(2);
t555 = t717 * qJD(3);
t274 = qJD(5) * t416 + t571;
t547 = -qJD(5) - t614;
t544 = t466 * t571;
t543 = t463 * t571;
t542 = t464 * t571;
t541 = t465 * t571;
t539 = t716 * t723;
t536 = t596 * t711;
t530 = -t659 + t713;
t526 = t466 * t541;
t128 = -t309 * t378 + t310 * t379 + t442 * t711;
t472 = t107 * t738 + t108 * t737 + t286 * t461 + t722 * t774 + t98 * t729 + t97 * t730;
t481 = t100 * t733 + t721 * t774 + t99 * t734;
t2 = t472 + t481;
t524 = t2 * qJD(1) + t128 * qJD(2);
t504 = t304 * t730 - t487 * t729;
t4 = (-t107 / 0.2e1 + t99 / 0.2e1) * t427 + (-t108 / 0.2e1 + t100 / 0.2e1) * t425 + t563 * t303 - t562 * t299 + t504;
t523 = -qJD(1) * t4 - qJD(2) * t188;
t521 = t690 - t691;
t520 = t688 - t689;
t519 = -t651 - t654;
t141 = -t673 + t676;
t510 = t298 * t738 - t487 * t737;
t19 = -t510 + t755;
t518 = qJD(1) * t19 - qJD(2) * t141;
t511 = t688 / 0.2e1 - t689 / 0.2e1;
t471 = t511 * t456 + (t780 / 0.2e1 + t756 * t717) * pkin(2) + t459 * t731;
t512 = -t690 / 0.2e1 + t691 / 0.2e1;
t28 = t714 / 0.2e1 + t512 * qJ(4) + t471;
t311 = (t456 * t488 + t459 * t468) * pkin(2);
t517 = t28 * qJD(1) + t311 * qJD(2);
t54 = (t227 / 0.2e1 - t220 / 0.2e1) * t466 + (-t226 / 0.2e1 + t219 / 0.2e1) * t465;
t516 = -qJD(1) * t54 - qJD(2) * t413;
t514 = -t540 / 0.2e1;
t380 = t448 * t456;
t513 = qJD(2) * t380 - t771;
t509 = t298 * t734 - t487 * t733;
t508 = t309 * t724 - t487 * t722;
t507 = t304 * t722 + t310 * t725;
t506 = t353 * t724 - t487 * t720;
t505 = t304 * t720 + t354 * t725;
t491 = -t645 / 0.2e1 + t583 / 0.2e1;
t37 = t568 + t491 - t507;
t503 = qJD(1) * t37 - t427 * t610;
t493 = -t647 / 0.2e1 - t581 / 0.2e1;
t38 = t569 + t493 - t508;
t502 = qJD(1) * t38 + t425 * t610;
t499 = t430 * t538 + t728;
t498 = t378 * t724 - t487 * t587;
t497 = t304 * t461 + t379 * t725;
t32 = -t299 * t561 - t432 * t563 + t498;
t496 = -qJD(1) * t32 - t425 * t590;
t34 = t303 * t561 + t432 * t562 + t497;
t495 = -qJD(1) * t34 - t427 * t590;
t105 = (t731 - t751 / 0.2e1) * t465 + t473 * t466;
t494 = -qJD(1) * t105 - t465 * t590;
t492 = -t646 / 0.2e1 - t580 / 0.2e1;
t490 = -t644 / 0.2e1 + t582 / 0.2e1;
t161 = -t667 + t670;
t21 = t509 + t755;
t95 = t461 + (t735 + t738) * t427 + (t732 + t737) * t425;
t486 = qJD(1) * t21 + qJD(2) * t95 - qJD(3) * t161;
t479 = (qJ(4) + t456) * (t463 / 0.2e1 + t464 / 0.2e1);
t307 = t587 + t479;
t441 = t448 * qJ(4);
t484 = -qJD(2) * t307 - qJD(3) * t441 + t771;
t477 = (-t545 / 0.2e1 + t465 * t514) * pkin(2);
t209 = t477 - t762;
t42 = t568 + t490 - t505;
t483 = qJD(1) * t42 + qJD(2) * t209 - t427 * t609;
t476 = (t466 * t514 + t546 / 0.2e1) * pkin(2);
t210 = t425 * t560 + t476;
t43 = t569 + t492 - t506;
t482 = qJD(1) * t43 + qJD(2) * t210 + t425 * t609;
t452 = t469 * t611;
t447 = t465 * t589;
t412 = t427 * qJD(4);
t410 = t425 * qJD(4);
t394 = t427 * t589;
t393 = t425 * t589;
t331 = t596 * t416;
t325 = -0.2e1 * t526;
t314 = t323 * qJD(4);
t306 = t461 + t479;
t297 = -t641 + 0.2e1 * t422;
t278 = t292 * qJD(5);
t235 = t680 / 0.2e1;
t234 = -t681 / 0.2e1;
t218 = t660 / 0.2e1 + t499;
t217 = -t660 / 0.2e1 + t499;
t212 = t477 + t762;
t211 = t425 * t721 + t442 * t727 + t476;
t195 = t213 * qJD(4);
t194 = t214 * qJD(4);
t192 = t216 * qJD(4);
t191 = t218 * qJD(4);
t184 = (-t464 * t613 - t531) * t430;
t183 = (-t463 * t613 + t531) * t430;
t166 = t466 * t539 - t396 / 0.2e1 + (t566 + t538) * t432;
t165 = t489 * t432 + t465 * t539 + t642 * t723;
t160 = t465 * t759 + t267;
t159 = t432 * t757 - t266;
t154 = -t189 - t606;
t153 = -t411 - t190;
t152 = -t411 + t193;
t151 = t196 + t606;
t137 = 0.2e1 * t526 + (t463 - t464) * t340;
t121 = t122 * qJD(5);
t110 = -qJD(5) * t215 - t622;
t109 = -qJD(5) * t214 - t623;
t106 = t779 - t432 * t648 / 0.2e1 + t750 * t466;
t104 = t432 * t567 + t750 * t465 + 0.2e1 * t736;
t102 = -t303 * t618 + t769;
t101 = t299 * t749 - t769;
t96 = -t667 / 0.2e1 - t673 / 0.2e1 + t670 / 0.2e1 + t676 / 0.2e1 + t461;
t80 = t83 * qJD(4);
t67 = qJD(5) * t217 + t427 * t759 + t622;
t66 = -qJD(5) * t213 - t425 * t759 + t623;
t55 = t511 - t512;
t51 = t769 + (t760 + t618) * t303;
t50 = t775 * t299 - t769;
t48 = t121 - t627;
t45 = t235 + t490 + t505;
t44 = t234 + t492 + t506;
t40 = t235 + t491 + t507;
t39 = t234 + t493 + t508;
t33 = -t672 / 0.2e1 + t655 / 0.2e1 + t789 - t666 / 0.2e1 + t652 / 0.2e1 + t497;
t31 = -t675 / 0.2e1 - t656 / 0.2e1 + t790 - t669 / 0.2e1 - t653 / 0.2e1 + t498;
t29 = t627 + t121 + t596 * (t299 * t427 - t303 * t425);
t27 = t220 * t648 / 0.2e1 + t219 * t567 - t714 / 0.2e1 + t471;
t22 = -t509 + t753;
t20 = t510 + t753;
t3 = t674 / 0.2e1 - t698 / 0.2e1 + t677 / 0.2e1 - t699 / 0.2e1 + t668 / 0.2e1 - t700 / 0.2e1 + t671 / 0.2e1 - t705 / 0.2e1 + t504;
t1 = t472 - t481;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t570, t449 * qJD(2), 0, -t570, 0, 0, -pkin(1) * t598, -pkin(1) * t597, 0, 0, -t781, -t596 * t595, 0, t781, 0, 0, qJD(2) * t318 + t432 * t608, qJD(2) * t319 - t430 * t608, 0, qJD(2) * t130, -t464 * t781, 0.2e1 * t432 * t430 * t531, t596 * t273, -t463 * t781, -t596 * t272, t781, qJD(2) * t63 + qJD(3) * t65 - t405 * t432, qJD(2) * t62 + qJD(3) * t64 + t607 * t658, -qJD(2) * t41 - qJD(3) * t46 + qJD(4) * t231, qJD(2) * t47 + qJD(3) * t49 + qJD(4) * t115, (t303 * t596 - t747) * t304, qJD(5) * t129 + t126 * t596, t139 * t596 - t487 * t605, (qJD(5) * t304 - t299 * t596) * t487, t138 * t596 - t304 * t605, t781, qJD(2) * t23 + qJD(3) * t25 + qJD(5) * t53 + t298 * t607, qJD(2) * t24 + qJD(3) * t26 + qJD(5) * t52 + t487 * t607, qJD(2) * t12 + qJD(3) * t13 + qJD(4) * t125, qJD(2) * t16 + qJD(3) * t17 + qJD(4) * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, t599, t597, -t452, -t598, 0, -pkin(6) * t597 - t592, pkin(6) * t598 - t591, 0, 0, -t571, -t601, -t340, t571, -t759, 0, -qJD(2) * t751 + qJD(3) * t297 + t617, t616 + t766, (t585 - t657) * t708, t603 + (-t717 * t751 - t780) * t708, t184, t137, t160, t183, t159, t571, t636 + (t465 * t519 - t778) * qJD(2) + t104 * qJD(3) - t314, t637 + (t466 * t519 + t779) * qJD(2) + t106 * qJD(3) - t405, qJD(2) * t521 + t55 * qJD(3) - t661, t639 + (t456 * t521 + t459 * t751) * qJD(2) + t27 * qJD(3) + t768, t51, t29, t67, t50, t66, t274, t687 + (-t656 - t675 + t790) * qJD(2) + t31 * qJD(3) - t194 + t40 * qJD(5), t686 + (t655 - t672 + t789) * qJD(2) + t33 * qJD(3) + t191 + t39 * qJD(5), t697 + (t674 + t677 - t700 - t705) * qJD(2) + t3 * qJD(3) + t80, t695 + (t100 * t310 - t309 * t99 + t442 * t774) * qJD(2) + t1 * qJD(3) + t20 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t571, -t601, -t340, t571, -t759, 0, qJD(2) * t297 - qJD(3) * t751 + t573, -t574 + t766, 0, 0, t184, t137, t160, t183, t159, t571, t634 + t104 * qJD(2) + (t465 * t530 - t778) * qJD(3) - t314, t635 + t106 * qJD(2) + (t466 * t530 + t779) * qJD(3) - t405, t55 * qJD(2) + qJD(3) * t520 - t650, t638 + t27 * qJD(2) + (qJ(4) * t520 - t714) * qJD(3) + t768, t51, t29, t67, t50, t66, t274, t685 + t31 * qJD(2) + (-t653 - t669 + t790) * qJD(3) - t194 + t45 * qJD(5), t684 + t33 * qJD(2) + (t652 - t666 + t789) * qJD(3) + t191 + t44 * qJD(5), t696 + t3 * qJD(2) + (t668 + t671 - t698 - t699) * qJD(3) + t80, t694 + t1 * qJD(2) + (-t107 * t353 + t108 * t354 + t457 * t774) * qJD(3) + t22 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t323 * t596 - t544, (t465 * t613 - t757) * t430, t602, t596 * t752 + t630, 0, 0, 0, 0, 0, 0, qJD(5) * t166 + t577 - t763, qJD(5) * t165 + t218 * t596 + t575, t745, qJD(2) * t20 + qJD(3) * t22 + t704; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t767, t744, t217 * t596 + t487 * t547, -t767, t304 * t547 - t764, t331, qJD(2) * t40 + qJD(3) * t45 + qJD(4) * t166 - qJD(5) * t98 + t702, qJD(2) * t39 + qJD(3) * t44 + qJD(4) * t165 + qJD(5) * t97 + t703, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t452, -t599, 0, t452, 0, 0, t592, t591, 0, 0, t571, t601, 0, -t571, 0, 0, qJD(3) * t359 - t617, -t616, 0, -t603, t542, t325, -t267, t543, t266, -t571, qJD(3) * t103 - t636, qJD(3) * t105 - t637, qJD(3) * t54 + t661, qJD(3) * t28 - t639 - t770, t102, t48, t110, t101, t109, -t274, qJD(3) * t32 - qJD(5) * t37 - t195 - t687, qJD(3) * t34 - qJD(5) * t38 - t192 - t686, qJD(3) * t4 - t697 + t80, qJD(3) * t2 - qJD(4) * t19 - t695; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t589, -pkin(2) * t555, 0, 0, 0, 0, 0, 0, 0, 0, -t466 * t589, t447, t632, qJD(3) * t311 + qJD(4) * t380, -t572, t278, 0, t572, 0, 0, t442 * t606 + t393, -t411 * t442 + t394, t633, qJD(3) * t128 + qJD(4) * t141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t536 + t615, (-t556 - t555) * pkin(2), 0, 0, 0, 0, 0, 0, 0, 0, -t466 * t536 + t631, t447 - t494, -t516 + t632, (-pkin(3) * t468 + qJ(4) * t488) * t709 + t306 * qJD(4) + t517, -t572, t278, 0, t572, 0, 0, qJD(5) * t212 + t393 - t496, qJD(5) * t211 + t394 - t495, -t523 + t633, (-t353 * t378 + t354 * t379 + t457 * t711) * qJD(3) + t96 * qJD(4) + t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t758, qJD(3) * t306 + t513, 0, 0, 0, 0, 0, 0, -t196, -t193, t56, qJD(3) * t96 - t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t788, t60, t153, t788, t154, -t600, qJD(3) * t212 - qJD(5) * t310 - t503, qJD(3) * t211 + qJD(5) * t309 - t502, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t571, t601, 0, -t571, 0, 0, -qJD(2) * t359 - t573, t574, 0, 0, t542, t325, -t267, t543, t266, -t571, -qJD(2) * t103 - t634, -qJD(2) * t105 - t635, -qJD(2) * t54 + t650, -qJD(2) * t28 - t638 - t770, t102, t48, t110, t101, t109, -t274, -qJD(2) * t32 - qJD(5) * t42 - t195 - t685, -qJD(2) * t34 - qJD(5) * t43 - t192 - t684, -qJD(2) * t4 - t696 + t80, -qJD(2) * t2 - qJD(4) * t21 - t694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t590 - t615, pkin(2) * t556, 0, 0, 0, 0, 0, 0, 0, 0, t466 * t590 - t631, t494, t444 + t516, qJD(4) * t307 - t517, -t572, t278, 0, t572, 0, 0, -qJD(5) * t209 + t496, -qJD(5) * t210 + t495, t335 + t523, -qJD(4) * t95 - t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t444, t441 * qJD(4), -t572, t278, 0, t572, 0, 0, t457 * t606, -t457 * t411, t335, qJD(4) * t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t758, -t484, 0, 0, 0, 0, 0, 0, -t196, -t193, t56, -t486; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t788, t60, t153, t788, t154, -t600, -qJD(5) * t354 - t483, qJD(5) * t353 - t482, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t544, -t541, -t602, t596 * t754 - t630, 0, 0, 0, 0, 0, 0, -qJD(5) * t163 - t577 + t764, t216 * t596 - t575 - t747, -t745, qJD(2) * t19 + qJD(3) * t21 - t704; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t758, -qJD(3) * t307 - t513, 0, 0, 0, 0, 0, 0, t151, t152, -t56, qJD(3) * t95 + t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t758, t484, 0, 0, 0, 0, 0, 0, t151, t152, -t56, t486; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t773, t775, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t767, -t744, t215 * t596 + t575, t767, t304 * t614 + t763, t331, qJD(2) * t37 + qJD(3) * t42 + qJD(4) * t163 - t702, qJD(2) * t38 + qJD(3) * t43 + qJD(4) * t487 - t703, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t788, -t60, t190, -t788, t189, t600, qJD(3) * t209 - t412 + t503, qJD(3) * t210 + t410 + t502, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t788, -t60, t190, -t788, t189, t600, -t412 + t483, t410 + t482, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t773, -t775, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
