% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S5RRRPR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% 
% Output:
% MMD_reg [((5+1)*5/2)x(5*10)]
%   inertial parameter regressor of inertia matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:18
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S5RRRPR7_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR7_inertiaDJ_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR7_inertiaDJ_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR7_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:17:17
% EndTime: 2019-12-31 21:17:24
% DurationCPUTime: 2.27s
% Computational Cost: add. (3508->224), mult. (7997->397), div. (0->0), fcn. (7420->8), ass. (0->144)
t109 = sin(pkin(9));
t107 = t109 ^ 2;
t110 = cos(pkin(9));
t108 = t110 ^ 2;
t162 = t107 + t108;
t192 = t162 * qJD(4);
t193 = 0.2e1 * t192;
t185 = cos(qJ(3));
t144 = t185 * qJD(3);
t135 = pkin(2) * t144;
t92 = t135 + qJD(4);
t191 = t162 * t92;
t114 = cos(qJ(2));
t151 = t185 * t114;
t133 = qJD(2) * t151;
t112 = sin(qJ(3));
t113 = sin(qJ(2));
t165 = t112 * t113;
t188 = qJD(2) + qJD(3);
t59 = -t114 * t144 + t188 * t165 - t133;
t164 = t112 * t114;
t83 = t185 * t113 + t164;
t60 = t188 * t83;
t82 = -t151 + t165;
t131 = t59 * t82 - t83 * t60;
t190 = 0.2e1 * t131;
t111 = sin(qJ(5));
t184 = cos(qJ(5));
t149 = t184 * t110;
t189 = -t111 * t109 + t149;
t187 = -pkin(7) - pkin(6);
t182 = t112 * pkin(2);
t98 = qJ(4) + t182;
t186 = -pkin(8) - t98;
t183 = t110 * pkin(4);
t90 = t187 * t113;
t91 = t187 * t114;
t67 = t112 * t90 - t185 * t91;
t85 = qJD(2) * t90;
t39 = t67 * qJD(3) + t112 * t85 - t187 * t133;
t66 = -t112 * t91 - t185 * t90;
t181 = t66 * t39;
t146 = qJD(5) * t184;
t160 = qJD(5) * t111;
t148 = t109 * t160;
t73 = -t110 * t146 + t148;
t99 = -pkin(3) - t183;
t180 = t99 * t73;
t150 = t184 * t109;
t166 = t111 * t110;
t81 = t150 + t166;
t74 = t81 * qJD(5);
t179 = t99 * t74;
t178 = pkin(8) + qJ(4);
t172 = t109 * t59;
t22 = -pkin(4) * t172 + t39;
t170 = t109 * t83;
t47 = pkin(4) * t170 + t66;
t177 = -t189 * t22 + t47 * t74;
t176 = t22 * t81 - t47 * t73;
t102 = -t114 * pkin(2) - pkin(1);
t130 = t82 * pkin(3) + t102;
t126 = -t83 * qJ(4) + t130;
t32 = t109 * t126 + t110 * t67;
t161 = qJD(3) * t112;
t103 = pkin(2) * t161;
t155 = t185 * pkin(2);
t101 = -t155 - pkin(3);
t88 = t101 - t183;
t175 = -t103 * t189 + t88 * t74;
t174 = t81 * t103 - t88 * t73;
t171 = t109 * t67;
t169 = t110 * t59;
t168 = t39 * t110;
t159 = t113 * qJD(2);
t158 = t114 * qJD(2);
t46 = 0.2e1 * t82 * t60;
t157 = -0.2e1 * t83 * t59;
t156 = -0.2e1 * pkin(1) * qJD(2);
t154 = pkin(2) * t159;
t53 = t109 * t169;
t120 = t82 * pkin(4) - t171 + (-t178 * t83 + t130) * t110;
t117 = t184 * t120;
t23 = -pkin(8) * t170 + t32;
t10 = -t111 * t23 + t117;
t118 = t111 * t120;
t11 = t184 * t23 + t118;
t124 = t90 * t144 + t91 * t161 + t185 * t85;
t134 = t187 * t164;
t121 = qJD(2) * t134 + t124;
t125 = t60 * pkin(3) - t83 * qJD(4) + t154;
t123 = t59 * qJ(4) + t125;
t15 = -t109 * t121 + t110 * t123;
t115 = t60 * pkin(4) + pkin(8) * t169 + t15;
t119 = t110 * t121;
t116 = t119 + (t178 * t59 + t125) * t109;
t3 = -qJD(5) * t117 - t111 * t115 - t184 * t116 + t23 * t160;
t4 = -qJD(5) * t118 - t111 * t116 + t184 * t115 - t23 * t146;
t153 = t10 * t73 - t11 * t74 - t189 * t3 - t4 * t81;
t152 = t111 * t186;
t147 = t113 * t158;
t145 = t178 * t109;
t143 = t184 * qJD(4);
t129 = t186 * t150;
t106 = t110 * pkin(8);
t76 = t110 * t98 + t106;
t28 = -qJD(5) * t129 - t92 * t149 + (qJD(5) * t76 + t109 * t92) * t111;
t29 = -t76 * t146 - t92 * t166 + (-qJD(5) * t152 - t184 * t92) * t109;
t51 = -t111 * t76 + t129;
t52 = t109 * t152 + t184 * t76;
t141 = -t189 * t28 - t29 * t81 + t51 * t73 - t52 * t74;
t128 = t184 * t145;
t89 = t110 * qJ(4) + t106;
t42 = qJD(5) * t128 - t110 * t143 + (t109 * qJD(4) + qJD(5) * t89) * t111;
t43 = -t89 * t146 - qJD(4) * t166 + (t178 * t160 - t143) * t109;
t62 = -t111 * t89 - t128;
t63 = -t111 * t145 + t184 * t89;
t140 = -t189 * t42 - t43 * t81 + t62 * t73 - t63 * t74;
t138 = t66 * t103;
t137 = t109 * t103;
t136 = t110 * t103;
t132 = t39 * t83 - t66 * t59;
t16 = t109 * t123 + t119;
t6 = -t15 * t109 + t16 * t110;
t127 = pkin(3) * t59 - qJ(4) * t60 - qJD(4) * t82;
t122 = -t101 * t59 + t83 * t103 - t60 * t98 - t82 * t92;
t58 = -0.2e1 * t81 * t73;
t57 = -0.2e1 * t189 * t74;
t56 = t110 * t60;
t55 = t109 * t60;
t49 = t189 * t83;
t48 = t81 * t83;
t34 = t39 * t109;
t33 = -0.2e1 * t189 * t73 - 0.2e1 * t81 * t74;
t31 = t110 * t126 - t171;
t30 = (t107 - t108) * t59;
t27 = t189 * t60 - t74 * t82;
t26 = t81 * t60 - t73 * t82;
t18 = -t59 * t150 - t83 * t148 + (-t111 * t59 + t83 * t146) * t110;
t17 = t189 * t59 + t83 * t74;
t14 = -t18 * t189 + t48 * t74;
t13 = -t17 * t81 - t49 * t73;
t5 = -t17 * t189 - t81 * t18 + t73 * t48 - t49 * t74;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t147, 0.2e1 * (-t113 ^ 2 + t114 ^ 2) * qJD(2), 0, -0.2e1 * t147, 0, 0, t113 * t156, t114 * t156, 0, 0, t157, t190, 0, t46, 0, 0, 0.2e1 * t102 * t60 + 0.2e1 * t154 * t82, -0.2e1 * t102 * t59 + 0.2e1 * t154 * t83, -0.2e1 * t121 * t82 - 0.2e1 * t67 * t60 + 0.2e1 * t132, 0.2e1 * t67 * t124 + 0.2e1 * t181 + 0.2e1 * (t102 * t113 * pkin(2) + t134 * t67) * qJD(2), t108 * t157, 0.4e1 * t83 * t53, -0.2e1 * t131 * t110, t107 * t157, t109 * t190, t46, 0.2e1 * t109 * t132 + 0.2e1 * t15 * t82 + 0.2e1 * t31 * t60, 0.2e1 * t110 * t132 - 0.2e1 * t16 * t82 - 0.2e1 * t32 * t60, 0.2e1 * (-t15 * t83 + t31 * t59) * t110 + 0.2e1 * (-t16 * t83 + t32 * t59) * t109, 0.2e1 * t31 * t15 + 0.2e1 * t32 * t16 + 0.2e1 * t181, -0.2e1 * t49 * t17, 0.2e1 * t17 * t48 - 0.2e1 * t49 * t18, -0.2e1 * t17 * t82 + 0.2e1 * t49 * t60, 0.2e1 * t48 * t18, -0.2e1 * t18 * t82 - 0.2e1 * t48 * t60, t46, 0.2e1 * t10 * t60 + 0.2e1 * t47 * t18 + 0.2e1 * t22 * t48 + 0.2e1 * t4 * t82, -0.2e1 * t11 * t60 - 0.2e1 * t47 * t17 + 0.2e1 * t22 * t49 + 0.2e1 * t3 * t82, 0.2e1 * t10 * t17 - 0.2e1 * t11 * t18 + 0.2e1 * t3 * t48 - 0.2e1 * t4 * t49, 0.2e1 * t10 * t4 - 0.2e1 * t11 * t3 + 0.2e1 * t47 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t158, 0, -t159, 0, -pkin(6) * t158, pkin(6) * t159, 0, 0, 0, 0, -t59, 0, -t60, 0, -t39, -t121, (t185 * t59 - t112 * t60 + (t112 * t83 - t185 * t82) * qJD(3)) * pkin(2), t121 * t182 + t135 * t67 - t155 * t39 + t138, -t53, t30, t55, t53, t56, 0, t109 * t122 - t168, t110 * t122 + t34, t6, t138 + t39 * t101 + (t16 * t98 + t32 * t92) * t110 + (-t15 * t98 - t31 * t92) * t109, t13, t5, t26, t14, t27, 0, t103 * t48 + t88 * t18 + t29 * t82 + t51 * t60 + t177, t103 * t49 - t88 * t17 + t28 * t82 - t52 * t60 + t176, t51 * t17 - t52 * t18 + t28 * t48 - t29 * t49 + t153, t10 * t29 + t103 * t47 - t11 * t28 + t22 * t88 - t3 * t52 + t4 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t103, -0.2e1 * t135, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t136, 0.2e1 * t137, 0.2e1 * t191, 0.2e1 * t101 * t103 + 0.2e1 * t191 * t98, t58, t33, 0, t57, 0, 0, 0.2e1 * t175, 0.2e1 * t174, 0.2e1 * t141, 0.2e1 * t103 * t88 - 0.2e1 * t52 * t28 + 0.2e1 * t51 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, 0, -t60, 0, -t39, -t121, 0, 0, -t53, t30, t55, t53, t56, 0, t109 * t127 - t168, t110 * t127 + t34, t6, -t39 * pkin(3) + (-t109 * t31 + t110 * t32) * qJD(4) + t6 * qJ(4), t13, t5, t26, t14, t27, 0, t99 * t18 + t43 * t82 + t62 * t60 + t177, -t99 * t17 + t42 * t82 - t63 * t60 + t176, t62 * t17 - t63 * t18 + t42 * t48 - t43 * t49 + t153, t10 * t43 - t11 * t42 + t22 * t99 - t3 * t63 + t4 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, -t135, 0, 0, 0, 0, 0, 0, 0, 0, -t136, t137, t192 + t191, -pkin(3) * t103 + qJ(4) * t191 + t192 * t98, t58, t33, 0, t57, 0, 0, t175 + t179, t174 - t180, t140 + t141, t103 * t99 - t28 * t63 + t29 * t62 - t52 * t42 + t51 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, qJ(4) * t193, t58, t33, 0, t57, 0, 0, 0.2e1 * t179, -0.2e1 * t180, 0.2e1 * t140, -0.2e1 * t63 * t42 + 0.2e1 * t62 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, -t169, 0, t39, 0, 0, 0, 0, 0, 0, t18, -t17, 0, t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, 0, 0, 0, 0, 0, t74, -t73, 0, t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, -t73, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t17, 0, -t18, t60, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, 0, -t74, 0, t29, t28, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, 0, -t74, 0, t43, t42, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg = t1;
