% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRPR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:18
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRPR7_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR7_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR7_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR7_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR7_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR7_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:18:09
% EndTime: 2019-12-31 21:18:13
% DurationCPUTime: 3.79s
% Computational Cost: add. (26224->257), mult. (55121->357), div. (0->0), fcn. (39622->10), ass. (0->203)
t1645 = sin(qJ(3));
t1649 = cos(qJ(3));
t1650 = cos(qJ(2));
t1682 = qJD(1) * t1650;
t1646 = sin(qJ(2));
t1683 = qJD(1) * t1646;
t1610 = t1645 * t1683 - t1649 * t1682;
t1609 = qJD(5) + t1610;
t1692 = qJD(5) + t1609;
t1637 = t1650 * qJDD(1);
t1668 = qJD(2) * t1683;
t1618 = t1637 - t1668;
t1641 = t1650 ^ 2;
t1653 = qJD(1) ^ 2;
t1647 = sin(qJ(1));
t1651 = cos(qJ(1));
t1626 = g(1) * t1647 - t1651 * g(2);
t1660 = qJDD(1) * pkin(1) + t1626;
t1661 = qJD(2) * pkin(2) - pkin(7) * t1683;
t1585 = pkin(2) * t1618 + (pkin(7) * t1641 + pkin(6)) * t1653 - t1661 * t1683 + t1660;
t1612 = (t1645 * t1650 + t1646 * t1649) * qJD(1);
t1639 = qJD(2) + qJD(3);
t1642 = sin(pkin(9));
t1643 = cos(pkin(9));
t1597 = t1612 * t1642 - t1643 * t1639;
t1599 = t1612 * t1643 + t1639 * t1642;
t1644 = sin(qJ(5));
t1648 = cos(qJ(5));
t1571 = t1648 * t1597 + t1599 * t1644;
t1691 = t1571 ^ 2;
t1573 = -t1597 * t1644 + t1599 * t1648;
t1690 = t1573 ^ 2;
t1689 = t1597 ^ 2;
t1688 = t1599 ^ 2;
t1687 = t1609 ^ 2;
t1592 = t1610 ^ 2;
t1686 = t1612 ^ 2;
t1685 = t1639 ^ 2;
t1684 = -2 * qJD(4);
t1681 = t1571 * t1573;
t1680 = t1597 * t1599;
t1679 = t1599 * t1610;
t1678 = t1610 * t1597;
t1677 = t1610 * t1612;
t1676 = t1641 * t1653;
t1675 = t1646 * t1653;
t1674 = qJD(3) - t1639;
t1673 = qJD(5) - t1609;
t1627 = -g(1) * t1651 - g(2) * t1647;
t1656 = -pkin(1) * t1653 + qJDD(1) * pkin(6) + t1627;
t1606 = -t1646 * g(3) + t1650 * t1656;
t1581 = -pkin(2) * t1676 + t1618 * pkin(7) - qJD(2) * t1661 + t1606;
t1667 = qJD(2) * t1682;
t1671 = t1646 * qJDD(1);
t1617 = t1667 + t1671;
t1655 = t1646 * t1656;
t1654 = -t1655 - t1617 * pkin(7) + qJDD(2) * pkin(2) + (pkin(7) * qJD(1) * qJD(2) + pkin(2) * t1675 - g(3)) * t1650;
t1550 = t1649 * t1581 + t1645 * t1654;
t1640 = t1646 ^ 2;
t1672 = t1640 + t1641;
t1670 = qJDD(2) + qJDD(3);
t1663 = t1617 * t1645 - t1649 * t1618;
t1582 = qJD(3) * t1612 + t1663;
t1662 = -t1617 * t1649 - t1618 * t1645;
t1583 = -qJD(3) * t1610 - t1662;
t1665 = t1639 * t1610 - t1583;
t1531 = t1665 * qJ(4) + (t1612 * t1639 + t1582) * pkin(3) - t1585;
t1591 = pkin(3) * t1610 - qJ(4) * t1612;
t1537 = -t1685 * pkin(3) + t1670 * qJ(4) - t1610 * t1591 + t1550;
t1507 = t1642 * t1531 + t1643 * t1537 + t1597 * t1684;
t1574 = t1643 * t1583 + t1642 * t1670;
t1664 = t1583 * t1642 - t1643 * t1670;
t1666 = -t1574 * t1644 - t1648 * t1664;
t1554 = -t1574 - t1678;
t1549 = -t1581 * t1645 + t1649 * t1654;
t1555 = t1582 - t1680;
t1506 = t1643 * t1531 - t1537 * t1642 + t1599 * t1684;
t1659 = -qJDD(5) - t1582;
t1658 = -t1648 * t1574 + t1644 * t1664;
t1536 = -t1670 * pkin(3) - t1685 * qJ(4) + t1591 * t1612 + qJDD(4) - t1549;
t1652 = qJD(2) ^ 2;
t1632 = t1650 * t1675;
t1629 = -t1652 - t1676;
t1628 = -t1640 * t1653 - t1652;
t1625 = -qJDD(2) + t1632;
t1624 = qJDD(2) + t1632;
t1623 = t1672 * t1653;
t1622 = -qJDD(1) * t1647 - t1651 * t1653;
t1621 = qJDD(1) * t1651 - t1647 * t1653;
t1620 = t1672 * qJDD(1);
t1619 = t1637 - 0.2e1 * t1668;
t1616 = 0.2e1 * t1667 + t1671;
t1613 = pkin(6) * t1653 + t1660;
t1605 = -t1650 * g(3) - t1655;
t1604 = -t1685 - t1686;
t1603 = t1625 * t1650 - t1628 * t1646;
t1602 = -t1624 * t1646 + t1629 * t1650;
t1601 = t1625 * t1646 + t1628 * t1650;
t1600 = t1624 * t1650 + t1629 * t1646;
t1590 = -t1670 - t1677;
t1589 = t1670 - t1677;
t1588 = -t1592 - t1685;
t1586 = pkin(4) * t1610 - pkin(8) * t1599;
t1584 = -t1686 - t1592;
t1580 = -t1605 * t1646 + t1606 * t1650;
t1579 = t1605 * t1650 + t1606 * t1646;
t1575 = -t1592 - t1688;
t1568 = t1590 * t1649 - t1604 * t1645;
t1567 = t1590 * t1645 + t1604 * t1649;
t1566 = t1674 * t1610 + t1662;
t1564 = -t1674 * t1612 - t1663;
t1563 = (qJD(3) + t1639) * t1612 + t1663;
t1562 = -t1592 - t1689;
t1560 = t1588 * t1649 - t1589 * t1645;
t1559 = t1588 * t1645 + t1589 * t1649;
t1558 = -t1688 - t1689;
t1557 = -t1687 - t1690;
t1556 = -t1582 - t1680;
t1553 = t1574 - t1678;
t1552 = -t1664 + t1679;
t1551 = t1664 + t1679;
t1548 = -t1687 - t1691;
t1547 = -t1567 * t1646 + t1568 * t1650;
t1546 = t1567 * t1650 + t1568 * t1646;
t1545 = t1564 * t1649 - t1566 * t1645;
t1544 = t1564 * t1645 + t1566 * t1649;
t1543 = -t1559 * t1646 + t1560 * t1650;
t1542 = t1559 * t1650 + t1560 * t1646;
t1541 = t1556 * t1643 - t1575 * t1642;
t1540 = t1556 * t1642 + t1575 * t1643;
t1539 = t1659 - t1681;
t1538 = -t1659 - t1681;
t1534 = -t1555 * t1642 + t1562 * t1643;
t1533 = t1555 * t1643 + t1562 * t1642;
t1532 = -t1690 - t1691;
t1528 = t1552 * t1643 - t1554 * t1642;
t1527 = t1552 * t1642 + t1554 * t1643;
t1526 = -t1549 * t1645 + t1550 * t1649;
t1525 = t1549 * t1649 + t1550 * t1645;
t1524 = t1673 * t1571 + t1658;
t1523 = -t1692 * t1571 - t1658;
t1522 = -t1673 * t1573 + t1666;
t1521 = t1692 * t1573 - t1666;
t1520 = t1539 * t1648 - t1557 * t1644;
t1519 = t1539 * t1644 + t1557 * t1648;
t1518 = t1541 * t1649 + t1553 * t1645;
t1517 = t1541 * t1645 - t1553 * t1649;
t1516 = t1534 * t1649 + t1551 * t1645;
t1515 = t1534 * t1645 - t1551 * t1649;
t1514 = -t1544 * t1646 + t1545 * t1650;
t1513 = t1544 * t1650 + t1545 * t1646;
t1512 = t1528 * t1649 + t1558 * t1645;
t1511 = t1528 * t1645 - t1558 * t1649;
t1510 = -t1538 * t1644 + t1548 * t1648;
t1509 = t1538 * t1648 + t1548 * t1644;
t1508 = t1664 * pkin(4) - t1689 * pkin(8) + t1586 * t1599 + t1536;
t1505 = -t1525 * t1646 + t1526 * t1650;
t1504 = t1525 * t1650 + t1526 * t1646;
t1503 = t1522 * t1648 - t1524 * t1644;
t1502 = t1522 * t1644 + t1524 * t1648;
t1501 = -t1689 * pkin(4) - t1664 * pkin(8) - t1610 * t1586 + t1507;
t1500 = -t1519 * t1642 + t1520 * t1643;
t1499 = t1519 * t1643 + t1520 * t1642;
t1498 = -t1517 * t1646 + t1518 * t1650;
t1497 = t1517 * t1650 + t1518 * t1646;
t1496 = -t1515 * t1646 + t1516 * t1650;
t1495 = t1515 * t1650 + t1516 * t1646;
t1494 = t1555 * pkin(4) + t1554 * pkin(8) + t1506;
t1493 = -t1511 * t1646 + t1512 * t1650;
t1492 = t1511 * t1650 + t1512 * t1646;
t1491 = -t1509 * t1642 + t1510 * t1643;
t1490 = t1509 * t1643 + t1510 * t1642;
t1489 = -t1506 * t1642 + t1507 * t1643;
t1488 = t1506 * t1643 + t1507 * t1642;
t1487 = t1500 * t1649 + t1523 * t1645;
t1486 = t1500 * t1645 - t1523 * t1649;
t1485 = t1491 * t1649 + t1521 * t1645;
t1484 = t1491 * t1645 - t1649 * t1521;
t1483 = t1489 * t1649 + t1536 * t1645;
t1482 = t1489 * t1645 - t1536 * t1649;
t1481 = -t1502 * t1642 + t1503 * t1643;
t1480 = t1502 * t1643 + t1503 * t1642;
t1479 = t1494 * t1644 + t1501 * t1648;
t1478 = t1494 * t1648 - t1501 * t1644;
t1477 = t1481 * t1649 + t1532 * t1645;
t1476 = t1481 * t1645 - t1532 * t1649;
t1475 = -t1486 * t1646 + t1487 * t1650;
t1474 = t1486 * t1650 + t1487 * t1646;
t1473 = -t1484 * t1646 + t1485 * t1650;
t1472 = t1484 * t1650 + t1485 * t1646;
t1471 = -t1482 * t1646 + t1483 * t1650;
t1470 = t1482 * t1650 + t1483 * t1646;
t1469 = -t1478 * t1644 + t1479 * t1648;
t1468 = t1478 * t1648 + t1479 * t1644;
t1467 = -t1476 * t1646 + t1477 * t1650;
t1466 = t1476 * t1650 + t1477 * t1646;
t1465 = -t1468 * t1642 + t1469 * t1643;
t1464 = t1468 * t1643 + t1469 * t1642;
t1463 = t1465 * t1649 + t1508 * t1645;
t1462 = t1465 * t1645 - t1508 * t1649;
t1461 = -t1462 * t1646 + t1463 * t1650;
t1460 = t1462 * t1650 + t1463 * t1646;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1622, -t1621, 0, -t1626 * t1647 + t1627 * t1651, 0, 0, 0, 0, 0, 0, t1602 * t1651 - t1619 * t1647, t1603 * t1651 + t1616 * t1647, t1620 * t1651 - t1623 * t1647, t1580 * t1651 - t1613 * t1647, 0, 0, 0, 0, 0, 0, t1543 * t1651 + t1563 * t1647, t1547 * t1651 - t1647 * t1665, t1514 * t1651 + t1584 * t1647, t1505 * t1651 - t1585 * t1647, 0, 0, 0, 0, 0, 0, t1496 * t1651 + t1533 * t1647, t1498 * t1651 + t1540 * t1647, t1493 * t1651 + t1527 * t1647, t1471 * t1651 + t1488 * t1647, 0, 0, 0, 0, 0, 0, t1473 * t1651 + t1490 * t1647, t1475 * t1651 + t1499 * t1647, t1467 * t1651 + t1480 * t1647, t1461 * t1651 + t1464 * t1647; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1621, t1622, 0, t1626 * t1651 + t1627 * t1647, 0, 0, 0, 0, 0, 0, t1602 * t1647 + t1619 * t1651, t1603 * t1647 - t1616 * t1651, t1620 * t1647 + t1623 * t1651, t1580 * t1647 + t1613 * t1651, 0, 0, 0, 0, 0, 0, t1543 * t1647 - t1563 * t1651, t1547 * t1647 + t1651 * t1665, t1514 * t1647 - t1584 * t1651, t1505 * t1647 + t1585 * t1651, 0, 0, 0, 0, 0, 0, t1496 * t1647 - t1533 * t1651, t1498 * t1647 - t1540 * t1651, t1493 * t1647 - t1527 * t1651, t1471 * t1647 - t1488 * t1651, 0, 0, 0, 0, 0, 0, t1473 * t1647 - t1490 * t1651, t1475 * t1647 - t1499 * t1651, t1467 * t1647 - t1480 * t1651, t1461 * t1647 - t1464 * t1651; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1600, t1601, 0, t1579, 0, 0, 0, 0, 0, 0, t1542, t1546, t1513, t1504, 0, 0, 0, 0, 0, 0, t1495, t1497, t1492, t1470, 0, 0, 0, 0, 0, 0, t1472, t1474, t1466, t1460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1653, -qJDD(1), 0, t1627, 0, 0, 0, 0, 0, 0, t1602, t1603, t1620, t1580, 0, 0, 0, 0, 0, 0, t1543, t1547, t1514, t1505, 0, 0, 0, 0, 0, 0, t1496, t1498, t1493, t1471, 0, 0, 0, 0, 0, 0, t1473, t1475, t1467, t1461; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1653, 0, t1626, 0, 0, 0, 0, 0, 0, t1619, -t1616, t1623, t1613, 0, 0, 0, 0, 0, 0, -t1563, t1665, -t1584, t1585, 0, 0, 0, 0, 0, 0, -t1533, -t1540, -t1527, -t1488, 0, 0, 0, 0, 0, 0, -t1490, -t1499, -t1480, -t1464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1600, t1601, 0, t1579, 0, 0, 0, 0, 0, 0, t1542, t1546, t1513, t1504, 0, 0, 0, 0, 0, 0, t1495, t1497, t1492, t1470, 0, 0, 0, 0, 0, 0, t1472, t1474, t1466, t1460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1629, t1625, t1637, t1606, 0, 0, 0, 0, 0, 0, t1560, t1568, t1545, t1526, 0, 0, 0, 0, 0, 0, t1516, t1518, t1512, t1483, 0, 0, 0, 0, 0, 0, t1485, t1487, t1477, t1463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1624, t1628, -t1671, t1605, 0, 0, 0, 0, 0, 0, t1559, t1567, t1544, t1525, 0, 0, 0, 0, 0, 0, t1515, t1517, t1511, t1482, 0, 0, 0, 0, 0, 0, t1484, t1486, t1476, t1462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1619, t1616, -t1623, -t1613, 0, 0, 0, 0, 0, 0, t1563, -t1665, t1584, -t1585, 0, 0, 0, 0, 0, 0, t1533, t1540, t1527, t1488, 0, 0, 0, 0, 0, 0, t1490, t1499, t1480, t1464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1588, t1590, t1564, t1550, 0, 0, 0, 0, 0, 0, t1534, t1541, t1528, t1489, 0, 0, 0, 0, 0, 0, t1491, t1500, t1481, t1465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1589, t1604, t1566, t1549, 0, 0, 0, 0, 0, 0, -t1551, -t1553, -t1558, -t1536, 0, 0, 0, 0, 0, 0, -t1521, -t1523, -t1532, -t1508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1563, -t1665, t1584, -t1585, 0, 0, 0, 0, 0, 0, t1533, t1540, t1527, t1488, 0, 0, 0, 0, 0, 0, t1490, t1499, t1480, t1464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1562, t1556, t1552, t1507, 0, 0, 0, 0, 0, 0, t1510, t1520, t1503, t1469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1555, t1575, t1554, t1506, 0, 0, 0, 0, 0, 0, t1509, t1519, t1502, t1468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1551, t1553, t1558, t1536, 0, 0, 0, 0, 0, 0, t1521, t1523, t1532, t1508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1548, t1539, t1522, t1479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1538, t1557, t1524, t1478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1521, t1523, t1532, t1508;];
f_new_reg = t1;
