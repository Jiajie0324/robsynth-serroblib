% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRPR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:18
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRPR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR7_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR7_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR7_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:17:50
% EndTime: 2019-12-31 21:18:09
% DurationCPUTime: 19.84s
% Computational Cost: add. (168291->736), mult. (353023->1037), div. (0->0), fcn. (252659->10), ass. (0->498)
t1346 = sin(pkin(9));
t1349 = sin(qJ(3));
t1350 = sin(qJ(2));
t1353 = cos(qJ(3));
t1354 = cos(qJ(2));
t1310 = (t1349 * t1354 + t1350 * t1353) * qJD(1);
t1343 = qJD(2) + qJD(3);
t1347 = cos(pkin(9));
t1279 = t1346 * t1310 - t1347 * t1343;
t1280 = t1347 * t1310 + t1346 * t1343;
t1242 = t1280 * t1279;
t1436 = qJD(1) * t1354;
t1337 = qJD(2) * t1436;
t1404 = t1350 * qJDD(1);
t1318 = t1337 + t1404;
t1340 = t1354 * qJDD(1);
t1437 = qJD(1) * t1350;
t1396 = qJD(2) * t1437;
t1376 = -t1340 + t1396;
t1387 = t1349 * t1318 + t1353 * t1376;
t1251 = t1310 * qJD(3) + t1387;
t1451 = -t1242 + t1251;
t1459 = t1346 * t1451;
t1458 = t1347 * t1451;
t1348 = sin(qJ(5));
t1352 = cos(qJ(5));
t1231 = t1352 * t1279 + t1348 * t1280;
t1233 = -t1348 * t1279 + t1352 * t1280;
t1174 = t1233 * t1231;
t1248 = qJDD(5) + t1251;
t1453 = -t1174 + t1248;
t1457 = t1348 * t1453;
t1308 = t1349 * t1437 - t1353 * t1436;
t1271 = t1310 * t1308;
t1401 = qJDD(2) + qJDD(3);
t1450 = -t1271 + t1401;
t1456 = t1349 * t1450;
t1455 = t1352 * t1453;
t1454 = t1353 * t1450;
t1252 = -t1308 * qJD(3) + t1353 * t1318 - t1349 * t1376;
t1300 = t1343 * t1308;
t1218 = -t1300 + t1252;
t1345 = t1354 ^ 2;
t1357 = qJD(1) ^ 2;
t1351 = sin(qJ(1));
t1355 = cos(qJ(1));
t1327 = t1351 * g(1) - t1355 * g(2);
t1372 = qJDD(1) * pkin(1) + t1327;
t1254 = (t1345 * pkin(7) + pkin(6)) * t1357 - pkin(2) * t1376 - (qJD(2) * pkin(2) - pkin(7) * t1437) * t1437 + t1372;
t1430 = t1343 * t1310;
t1125 = -t1218 * qJ(4) + (t1251 + t1430) * pkin(3) - t1254;
t1328 = t1355 * g(1) + t1351 * g(2);
t1361 = -t1357 * pkin(1) + qJDD(1) * pkin(6) - t1328;
t1294 = -t1350 * g(3) + t1354 * t1361;
t1341 = t1345 * t1357;
t1356 = qJD(2) ^ 2;
t1332 = -t1341 - t1356;
t1246 = pkin(2) * t1332 + t1340 * pkin(7) + t1294;
t1360 = t1350 * t1361;
t1415 = t1350 * t1357;
t1438 = qJD(1) * qJD(2);
t1358 = -t1360 - t1318 * pkin(7) + qJDD(2) * pkin(2) + (pkin(2) * t1415 + pkin(7) * t1438 - g(3)) * t1354;
t1178 = t1353 * t1246 + t1349 * t1358;
t1268 = t1308 * pkin(3) - t1310 * qJ(4);
t1447 = t1343 ^ 2;
t1136 = -t1447 * pkin(3) + qJ(4) * t1401 - t1308 * t1268 + t1178;
t1056 = 0.2e1 * qJD(4) * t1280 - t1347 * t1125 + t1346 * t1136;
t1057 = -0.2e1 * qJD(4) * t1279 + t1346 * t1125 + t1347 * t1136;
t995 = t1346 * t1056 + t1347 * t1057;
t1234 = t1347 * t1252 + t1346 * t1401;
t1364 = t1346 * t1252 - t1347 * t1401;
t1123 = -t1231 * qJD(5) + t1352 * t1234 - t1348 * t1364;
t1303 = qJD(5) + t1308;
t1205 = t1303 * t1231;
t1452 = -t1205 + t1123;
t1262 = t1308 * t1279;
t1188 = -t1262 + t1234;
t1189 = t1262 + t1234;
t1263 = t1308 * t1280;
t1187 = -t1364 + t1263;
t1389 = t1348 * t1234 + t1352 * t1364;
t1099 = (qJD(5) - t1303) * t1233 + t1389;
t1215 = (qJD(3) - t1343) * t1310 + t1387;
t1228 = t1231 ^ 2;
t1229 = t1233 ^ 2;
t1449 = t1279 ^ 2;
t1278 = t1280 ^ 2;
t1302 = t1303 ^ 2;
t1448 = t1308 ^ 2;
t1307 = t1310 ^ 2;
t1017 = pkin(4) * t1451 - t1189 * pkin(8) - t1056;
t1255 = t1308 * pkin(4) - t1280 * pkin(8);
t1034 = -t1449 * pkin(4) - pkin(8) * t1364 - t1308 * t1255 + t1057;
t971 = -t1352 * t1017 + t1348 * t1034;
t972 = t1348 * t1017 + t1352 * t1034;
t936 = t1348 * t972 - t1352 * t971;
t1446 = pkin(4) * t936;
t1177 = t1349 * t1246 - t1353 * t1358;
t1112 = -t1353 * t1177 + t1349 * t1178;
t1445 = pkin(2) * t1112;
t1219 = t1300 + t1252;
t1162 = -t1215 * t1349 - t1353 * t1219;
t1444 = pkin(2) * t1162;
t1443 = pkin(3) * t1349;
t1102 = t1205 + t1123;
t1036 = -t1099 * t1348 - t1352 * t1102;
t1442 = pkin(4) * t1036;
t1441 = t1346 * t936;
t1440 = t1347 * t936;
t1135 = -t1401 * pkin(3) - t1447 * qJ(4) + t1310 * t1268 + qJDD(4) + t1177;
t1439 = -pkin(3) * t1135 + qJ(4) * t995;
t1435 = t1303 * t1233;
t1434 = t1303 * t1348;
t1433 = t1303 * t1352;
t1432 = t1308 * t1346;
t1431 = t1308 * t1347;
t1429 = t1343 * t1349;
t1428 = t1343 * t1353;
t1344 = t1350 ^ 2;
t1427 = t1344 * t1357;
t1129 = t1346 * t1135;
t1192 = t1242 + t1251;
t1426 = t1346 * t1192;
t1130 = t1347 * t1135;
t1425 = t1347 * t1192;
t1069 = pkin(4) * t1364 - t1449 * pkin(8) + t1280 * t1255 + t1135;
t1424 = t1348 * t1069;
t1138 = t1174 + t1248;
t1423 = t1348 * t1138;
t1422 = t1349 * t1251;
t1421 = t1349 * t1254;
t1266 = t1271 + t1401;
t1420 = t1349 * t1266;
t1419 = t1350 * t1112;
t1311 = t1357 * pkin(6) + t1372;
t1418 = t1350 * t1311;
t1334 = t1354 * t1415;
t1325 = qJDD(2) + t1334;
t1417 = t1350 * t1325;
t1326 = qJDD(2) - t1334;
t1416 = t1350 * t1326;
t1414 = t1352 * t1069;
t1413 = t1352 * t1138;
t1412 = t1353 * t1254;
t1411 = t1353 * t1266;
t1410 = t1354 * t1112;
t1409 = t1354 * t1311;
t1319 = t1340 - 0.2e1 * t1396;
t1282 = t1354 * t1319;
t1408 = t1354 * t1326;
t1405 = t1344 + t1345;
t1403 = t1351 * qJDD(1);
t1402 = t1355 * qJDD(1);
t1400 = -pkin(3) * t1353 - pkin(2);
t1398 = t1349 * t1174;
t1397 = t1349 * t1242;
t1395 = t1351 * t1271;
t1394 = t1353 * t1174;
t1393 = t1353 * t1242;
t1392 = t1355 * t1271;
t1235 = -t1278 - t1448;
t1146 = -t1346 * t1235 - t1425;
t1391 = -pkin(3) * t1188 + qJ(4) * t1146 + t1129;
t1213 = -t1448 - t1449;
t1132 = t1347 * t1213 - t1459;
t1186 = -t1263 - t1364;
t1390 = pkin(3) * t1186 + qJ(4) * t1132 - t1130;
t937 = t1348 * t971 + t1352 * t972;
t1113 = t1349 * t1177 + t1353 * t1178;
t1293 = t1354 * g(3) + t1360;
t1245 = t1350 * t1293 + t1354 * t1294;
t1386 = -t1351 * t1327 - t1355 * t1328;
t1127 = -t1228 - t1229;
t1038 = -t1099 * t1352 + t1348 * t1102;
t926 = -pkin(4) * t1127 + pkin(8) * t1038 + t937;
t928 = -pkin(8) * t1036 - t936;
t979 = -t1346 * t1036 + t1347 * t1038;
t1385 = -pkin(3) * t1127 + qJ(4) * t979 + t1346 * t928 + t1347 * t926;
t1167 = -t1302 - t1228;
t1073 = t1348 * t1167 + t1455;
t1008 = -pkin(8) * t1073 + t1424;
t1074 = t1352 * t1167 - t1457;
t1011 = -t1346 * t1073 + t1347 * t1074;
t1098 = (qJD(5) + t1303) * t1233 + t1389;
t986 = -pkin(4) * t1098 + pkin(8) * t1074 - t1414;
t1384 = -pkin(3) * t1098 + qJ(4) * t1011 + t1346 * t1008 + t1347 * t986;
t1196 = -t1229 - t1302;
t1090 = t1352 * t1196 - t1423;
t1013 = -pkin(8) * t1090 + t1414;
t1091 = -t1348 * t1196 - t1413;
t1029 = -t1346 * t1090 + t1347 * t1091;
t990 = -pkin(4) * t1452 + pkin(8) * t1091 + t1424;
t1383 = -pkin(3) * t1452 + qJ(4) * t1029 + t1346 * t1013 + t1347 * t990;
t983 = -t1353 * t1135 + t1349 * t995;
t1382 = pkin(2) * t983 + t1439;
t1381 = t1351 * t1334;
t1380 = t1355 * t1334;
t1118 = t1347 * t1187 + t1346 * t1189;
t1200 = t1278 + t1449;
t1379 = pkin(3) * t1200 + qJ(4) * t1118 + t995;
t1292 = -t1307 - t1447;
t1220 = t1353 * t1292 - t1420;
t1378 = pkin(2) * t1220 - t1178;
t1322 = -t1351 * t1357 + t1402;
t1377 = -pkin(5) * t1322 - t1351 * g(3);
t994 = -t1347 * t1056 + t1346 * t1057;
t1244 = t1354 * t1293 - t1350 * t1294;
t1375 = t1355 * t1327 - t1351 * t1328;
t1083 = t1349 * t1132 + t1353 * t1186;
t1374 = pkin(2) * t1083 + t1390;
t1086 = t1349 * t1146 - t1188 * t1353;
t1373 = pkin(2) * t1086 + t1391;
t1264 = -t1448 - t1447;
t1203 = t1349 * t1264 + t1454;
t1371 = pkin(2) * t1203 - t1177;
t1370 = pkin(4) * t1073 - t971;
t964 = -t1353 * t1127 + t1349 * t979;
t1369 = pkin(2) * t964 + t1385;
t916 = t1347 * t937 - t1441;
t930 = -pkin(4) * t1069 + pkin(8) * t937;
t1368 = -pkin(3) * t1069 - pkin(8) * t1441 + qJ(4) * t916 + t1347 * t930;
t987 = t1349 * t1011 - t1353 * t1098;
t1367 = pkin(2) * t987 + t1384;
t991 = t1349 * t1029 - t1353 * t1452;
t1366 = pkin(2) * t991 + t1383;
t1075 = t1349 * t1118 + t1353 * t1200;
t1365 = pkin(2) * t1075 + t1379;
t1363 = pkin(4) * t1090 - t972;
t910 = -t1353 * t1069 + t1349 * t916;
t1362 = pkin(2) * t910 + t1368;
t1331 = t1341 - t1356;
t1330 = -t1356 - t1427;
t1329 = t1356 - t1427;
t1324 = -t1341 + t1427;
t1323 = t1341 + t1427;
t1321 = t1355 * t1357 + t1403;
t1320 = t1405 * qJDD(1);
t1317 = 0.2e1 * t1337 + t1404;
t1315 = t1354 * t1325;
t1314 = t1405 * t1438;
t1304 = -pkin(5) * t1321 + t1355 * g(3);
t1298 = -t1307 + t1447;
t1297 = t1448 - t1447;
t1296 = t1354 * t1318 - t1344 * t1438;
t1295 = -t1345 * t1438 + t1350 * t1376;
t1291 = -t1350 * t1330 - t1408;
t1290 = -t1350 * t1329 + t1315;
t1289 = t1354 * t1332 - t1417;
t1288 = t1354 * t1331 - t1416;
t1287 = t1354 * t1330 - t1416;
t1286 = t1354 * t1329 + t1417;
t1285 = t1350 * t1332 + t1315;
t1284 = t1350 * t1331 + t1408;
t1283 = (t1318 + t1337) * t1350;
t1273 = -t1350 * t1317 + t1282;
t1272 = t1354 * t1317 + t1350 * t1319;
t1269 = t1307 - t1448;
t1261 = -t1278 + t1448;
t1260 = -t1448 + t1449;
t1259 = (-t1308 * t1353 + t1310 * t1349) * t1343;
t1258 = (-t1308 * t1349 - t1310 * t1353) * t1343;
t1257 = -pkin(6) * t1287 - t1409;
t1256 = -pkin(6) * t1285 - t1418;
t1253 = -t1448 - t1307;
t1250 = -pkin(1) * t1287 + t1294;
t1249 = -pkin(1) * t1285 + t1293;
t1247 = t1353 * t1251;
t1241 = t1278 - t1449;
t1237 = pkin(1) * t1319 + pkin(6) * t1289 + t1409;
t1236 = -pkin(1) * t1317 + pkin(6) * t1291 - t1418;
t1226 = t1353 * t1297 - t1420;
t1225 = -t1349 * t1298 + t1454;
t1224 = t1349 * t1297 + t1411;
t1223 = t1353 * t1298 + t1456;
t1221 = -t1349 * t1292 - t1411;
t1214 = (qJD(3) + t1343) * t1310 + t1387;
t1212 = pkin(1) * t1311 + pkin(6) * t1245;
t1211 = t1353 * t1252 - t1310 * t1429;
t1210 = t1349 * t1252 + t1310 * t1428;
t1209 = t1308 * t1428 + t1422;
t1208 = t1308 * t1429 - t1247;
t1207 = pkin(1) * t1323 + pkin(6) * t1320 + t1245;
t1204 = t1353 * t1264 - t1456;
t1202 = -t1229 + t1302;
t1201 = t1228 - t1302;
t1198 = (-t1279 * t1347 + t1280 * t1346) * t1308;
t1197 = (-t1279 * t1346 - t1280 * t1347) * t1308;
t1195 = -t1350 * t1258 + t1354 * t1259;
t1194 = t1354 * t1258 + t1350 * t1259;
t1182 = t1347 * t1234 - t1280 * t1432;
t1181 = t1346 * t1234 + t1280 * t1431;
t1180 = t1279 * t1431 + t1346 * t1364;
t1179 = -t1279 * t1432 + t1347 * t1364;
t1175 = -pkin(7) * t1220 - t1412;
t1173 = t1229 - t1228;
t1172 = -pkin(7) * t1203 - t1421;
t1171 = -t1350 * t1224 + t1354 * t1226;
t1170 = -t1350 * t1223 + t1354 * t1225;
t1169 = t1354 * t1224 + t1350 * t1226;
t1168 = t1354 * t1223 + t1350 * t1225;
t1166 = -t1350 * t1220 + t1354 * t1221;
t1165 = t1354 * t1220 + t1350 * t1221;
t1164 = -t1215 * t1353 + t1349 * t1219;
t1163 = -t1353 * t1214 - t1349 * t1218;
t1161 = -t1349 * t1214 + t1353 * t1218;
t1160 = t1353 * t1198 + t1422;
t1159 = t1349 * t1198 - t1247;
t1158 = t1347 * t1260 - t1426;
t1157 = -t1346 * t1261 + t1458;
t1156 = t1346 * t1260 + t1425;
t1155 = t1347 * t1261 + t1459;
t1154 = -t1350 * t1210 + t1354 * t1211;
t1153 = -t1350 * t1208 + t1354 * t1209;
t1152 = t1354 * t1210 + t1350 * t1211;
t1151 = t1354 * t1208 + t1350 * t1209;
t1150 = (-t1231 * t1352 + t1233 * t1348) * t1303;
t1149 = (-t1231 * t1348 - t1233 * t1352) * t1303;
t1148 = -t1350 * t1203 + t1354 * t1204;
t1147 = t1354 * t1203 + t1350 * t1204;
t1145 = t1347 * t1235 - t1426;
t1144 = t1353 * t1182 + t1397;
t1143 = t1353 * t1180 - t1397;
t1142 = t1349 * t1182 - t1393;
t1141 = t1349 * t1180 + t1393;
t1131 = t1346 * t1213 + t1458;
t1124 = -pkin(2) * t1218 + pkin(7) * t1221 - t1421;
t1122 = -t1233 * qJD(5) - t1389;
t1119 = -pkin(2) * t1214 + pkin(7) * t1204 + t1412;
t1117 = t1347 * t1186 - t1346 * t1188;
t1116 = t1346 * t1187 - t1347 * t1189;
t1115 = t1346 * t1186 + t1347 * t1188;
t1111 = t1352 * t1201 - t1423;
t1110 = -t1348 * t1202 + t1455;
t1109 = t1348 * t1201 + t1413;
t1108 = t1352 * t1202 + t1457;
t1107 = t1353 * t1158 + t1187 * t1349;
t1106 = t1353 * t1157 + t1349 * t1189;
t1105 = t1349 * t1158 - t1187 * t1353;
t1104 = t1349 * t1157 - t1353 * t1189;
t1095 = t1352 * t1123 - t1233 * t1434;
t1094 = t1348 * t1123 + t1233 * t1433;
t1093 = -t1348 * t1122 + t1231 * t1433;
t1092 = t1352 * t1122 + t1231 * t1434;
t1089 = t1353 * t1117 + t1349 * t1241;
t1088 = t1349 * t1117 - t1353 * t1241;
t1087 = t1353 * t1146 + t1188 * t1349;
t1085 = pkin(2) * t1254 + pkin(7) * t1113;
t1084 = t1353 * t1132 - t1349 * t1186;
t1082 = -t1350 * t1162 + t1354 * t1164;
t1081 = -t1350 * t1161 + t1354 * t1163;
t1080 = t1354 * t1162 + t1350 * t1164;
t1079 = t1354 * t1161 + t1350 * t1163;
t1078 = -t1350 * t1159 + t1354 * t1160;
t1077 = t1354 * t1159 + t1350 * t1160;
t1076 = t1353 * t1118 - t1349 * t1200;
t1072 = -pkin(1) * t1165 - t1378;
t1071 = -t1346 * t1149 + t1347 * t1150;
t1070 = t1347 * t1149 + t1346 * t1150;
t1067 = -t1350 * t1142 + t1354 * t1144;
t1066 = -t1350 * t1141 + t1354 * t1143;
t1065 = t1354 * t1142 + t1350 * t1144;
t1064 = t1354 * t1141 + t1350 * t1143;
t1063 = -qJ(4) * t1145 + t1130;
t1062 = -pkin(1) * t1147 - t1371;
t1061 = -qJ(4) * t1131 + t1129;
t1060 = -pkin(7) * t1162 - t1112;
t1059 = t1353 * t1071 + t1349 * t1248;
t1058 = t1349 * t1071 - t1353 * t1248;
t1053 = -pkin(2) * t1253 + pkin(7) * t1164 + t1113;
t1052 = -pkin(1) * t1080 - t1444;
t1051 = -pkin(6) * t1165 - t1350 * t1124 + t1354 * t1175;
t1050 = t1354 * t1113 - t1419;
t1049 = t1350 * t1113 + t1410;
t1048 = -pkin(6) * t1147 - t1350 * t1119 + t1354 * t1172;
t1047 = -t1346 * t1109 + t1347 * t1111;
t1046 = -t1346 * t1108 + t1347 * t1110;
t1045 = t1347 * t1109 + t1346 * t1111;
t1044 = t1347 * t1108 + t1346 * t1110;
t1043 = -pkin(1) * t1218 + pkin(6) * t1166 + t1354 * t1124 + t1350 * t1175;
t1042 = -t1350 * t1105 + t1354 * t1107;
t1041 = -t1350 * t1104 + t1354 * t1106;
t1040 = t1354 * t1105 + t1350 * t1107;
t1039 = t1354 * t1104 + t1350 * t1106;
t1037 = -t1352 * t1098 - t1348 * t1452;
t1035 = -t1348 * t1098 + t1352 * t1452;
t1033 = -t1346 * t1094 + t1347 * t1095;
t1032 = -t1346 * t1092 + t1347 * t1093;
t1031 = t1347 * t1094 + t1346 * t1095;
t1030 = t1347 * t1092 + t1346 * t1093;
t1028 = t1347 * t1090 + t1346 * t1091;
t1027 = -t1350 * t1088 + t1354 * t1089;
t1026 = t1354 * t1088 + t1350 * t1089;
t1024 = -t1350 * t1086 + t1354 * t1087;
t1023 = t1354 * t1086 + t1350 * t1087;
t1022 = -pkin(3) * t1145 + t1057;
t1021 = -pkin(1) * t1214 + pkin(6) * t1148 + t1354 * t1119 + t1350 * t1172;
t1020 = -pkin(3) * t1131 + t1056;
t1019 = -t1350 * t1083 + t1354 * t1084;
t1018 = t1354 * t1083 + t1350 * t1084;
t1016 = -t1350 * t1075 + t1354 * t1076;
t1015 = t1354 * t1075 + t1350 * t1076;
t1010 = t1347 * t1073 + t1346 * t1074;
t1006 = t1353 * t1033 + t1398;
t1005 = t1353 * t1032 - t1398;
t1004 = t1349 * t1033 - t1394;
t1003 = t1349 * t1032 + t1394;
t1002 = -pkin(1) * t1049 - t1445;
t1001 = -t1350 * t1058 + t1354 * t1059;
t1000 = t1354 * t1058 + t1350 * t1059;
t999 = t1353 * t1047 - t1349 * t1099;
t998 = t1353 * t1046 + t1349 * t1102;
t997 = t1349 * t1047 + t1353 * t1099;
t996 = t1349 * t1046 - t1353 * t1102;
t992 = t1353 * t1029 + t1349 * t1452;
t988 = t1353 * t1011 + t1349 * t1098;
t984 = t1349 * t1135 + t1353 * t995;
t982 = -pkin(6) * t1049 - pkin(7) * t1410 - t1350 * t1085;
t981 = -qJ(4) * t1116 - t994;
t980 = pkin(1) * t1254 + pkin(6) * t1050 - pkin(7) * t1419 + t1354 * t1085;
t978 = -t1346 * t1035 + t1347 * t1037;
t977 = t1347 * t1036 + t1346 * t1038;
t976 = t1347 * t1035 + t1346 * t1037;
t974 = -pkin(6) * t1080 - t1350 * t1053 + t1354 * t1060;
t973 = -pkin(1) * t1253 + pkin(6) * t1082 + t1354 * t1053 + t1350 * t1060;
t969 = -pkin(7) * t1086 - t1349 * t1022 + t1353 * t1063;
t968 = t1349 * t1173 + t1353 * t978;
t967 = -t1353 * t1173 + t1349 * t978;
t966 = -pkin(7) * t1083 - t1349 * t1020 + t1353 * t1061;
t965 = t1349 * t1127 + t1353 * t979;
t963 = -pkin(1) * t1023 - t1373;
t962 = -pkin(1) * t1018 - t1374;
t961 = -t1350 * t1004 + t1354 * t1006;
t960 = -t1350 * t1003 + t1354 * t1005;
t959 = t1354 * t1004 + t1350 * t1006;
t958 = t1354 * t1003 + t1350 * t1005;
t957 = -pkin(2) * t1145 + pkin(7) * t1087 + t1353 * t1022 + t1349 * t1063;
t956 = -pkin(2) * t1131 + pkin(7) * t1084 + t1353 * t1020 + t1349 * t1061;
t955 = -pkin(7) * t1075 + t1116 * t1443 + t1353 * t981;
t954 = -t1350 * t997 + t1354 * t999;
t953 = -t1350 * t996 + t1354 * t998;
t952 = t1350 * t999 + t1354 * t997;
t951 = t1350 * t998 + t1354 * t996;
t950 = -pkin(3) * t977 - t1442;
t949 = -t1350 * t991 + t1354 * t992;
t948 = t1350 * t992 + t1354 * t991;
t947 = pkin(7) * t1076 + t1116 * t1400 + t1349 * t981;
t946 = -t1350 * t987 + t1354 * t988;
t945 = t1350 * t988 + t1354 * t987;
t944 = -t1350 * t983 + t1354 * t984;
t943 = t1350 * t984 + t1354 * t983;
t942 = -pkin(3) * t1028 - t1363;
t941 = -pkin(1) * t1015 - t1365;
t940 = -qJ(4) * t1028 + t1347 * t1013 - t1346 * t990;
t939 = -pkin(3) * t1010 - t1370;
t938 = -qJ(4) * t1010 + t1347 * t1008 - t1346 * t986;
t935 = -t1350 * t967 + t1354 * t968;
t934 = t1350 * t968 + t1354 * t967;
t933 = -t1350 * t964 + t1354 * t965;
t932 = t1350 * t965 + t1354 * t964;
t931 = -pkin(7) * t983 + (-qJ(4) * t1353 + t1443) * t994;
t924 = -pkin(6) * t1023 - t1350 * t957 + t1354 * t969;
t923 = -pkin(6) * t1018 - t1350 * t956 + t1354 * t966;
t922 = -pkin(1) * t1145 + pkin(6) * t1024 + t1350 * t969 + t1354 * t957;
t921 = pkin(7) * t984 + (-qJ(4) * t1349 + t1400) * t994;
t920 = -pkin(1) * t1131 + pkin(6) * t1019 + t1350 * t966 + t1354 * t956;
t919 = -pkin(6) * t1015 - t1350 * t947 + t1354 * t955;
t918 = -pkin(1) * t943 - t1382;
t917 = -pkin(1) * t1116 + pkin(6) * t1016 + t1350 * t955 + t1354 * t947;
t915 = t1346 * t937 + t1440;
t913 = -pkin(1) * t948 - t1366;
t912 = -pkin(7) * t991 - t1349 * t942 + t1353 * t940;
t911 = t1349 * t1069 + t1353 * t916;
t909 = -pkin(1) * t945 - t1367;
t908 = -pkin(7) * t987 - t1349 * t939 + t1353 * t938;
t907 = -pkin(2) * t1028 + pkin(7) * t992 + t1349 * t940 + t1353 * t942;
t906 = -pkin(2) * t1010 + pkin(7) * t988 + t1349 * t938 + t1353 * t939;
t905 = -pkin(3) * t915 - t1446;
t904 = -qJ(4) * t977 - t1346 * t926 + t1347 * t928;
t903 = -pkin(6) * t943 - t1350 * t921 + t1354 * t931;
t902 = -pkin(1) * t994 + pkin(6) * t944 + t1350 * t931 + t1354 * t921;
t901 = -pkin(8) * t1440 - qJ(4) * t915 - t1346 * t930;
t900 = -pkin(7) * t964 - t1349 * t950 + t1353 * t904;
t899 = -t1350 * t910 + t1354 * t911;
t898 = t1350 * t911 + t1354 * t910;
t897 = -pkin(2) * t977 + pkin(7) * t965 + t1349 * t904 + t1353 * t950;
t896 = -pkin(1) * t932 - t1369;
t895 = -pkin(6) * t948 - t1350 * t907 + t1354 * t912;
t894 = -pkin(1) * t1028 + pkin(6) * t949 + t1350 * t912 + t1354 * t907;
t893 = -pkin(6) * t945 - t1350 * t906 + t1354 * t908;
t892 = -pkin(1) * t1010 + pkin(6) * t946 + t1350 * t908 + t1354 * t906;
t891 = -pkin(7) * t910 - t1349 * t905 + t1353 * t901;
t890 = -pkin(6) * t932 - t1350 * t897 + t1354 * t900;
t889 = -pkin(1) * t977 + pkin(6) * t933 + t1350 * t900 + t1354 * t897;
t888 = -pkin(1) * t898 - t1362;
t887 = -pkin(2) * t915 + pkin(7) * t911 + t1349 * t901 + t1353 * t905;
t886 = -pkin(6) * t898 - t1350 * t887 + t1354 * t891;
t885 = -pkin(1) * t915 + pkin(6) * t899 + t1350 * t891 + t1354 * t887;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1322, 0, -t1321, 0, t1377, -t1304, -t1375, -pkin(5) * t1375, t1355 * t1296 - t1381, t1355 * t1273 + t1351 * t1324, t1355 * t1290 + t1350 * t1403, t1355 * t1295 + t1381, t1355 * t1288 + t1340 * t1351, t1351 * qJDD(2) + t1355 * t1314, t1355 * t1256 - t1351 * t1249 - pkin(5) * (t1351 * t1289 + t1355 * t1319), t1355 * t1257 - t1351 * t1250 - pkin(5) * (t1351 * t1291 - t1355 * t1317), t1355 * t1244 - pkin(5) * (t1351 * t1320 + t1355 * t1323), -pkin(5) * (t1351 * t1245 + t1355 * t1311) - (t1351 * pkin(1) - t1355 * pkin(6)) * t1244, t1355 * t1154 + t1395, t1355 * t1081 + t1351 * t1269, t1355 * t1170 + t1351 * t1219, t1355 * t1153 - t1395, t1355 * t1171 - t1351 * t1215, t1355 * t1195 + t1351 * t1401, t1355 * t1048 - t1351 * t1062 - pkin(5) * (t1351 * t1148 - t1355 * t1214), t1355 * t1051 - t1351 * t1072 - pkin(5) * (t1351 * t1166 - t1218 * t1355), t1355 * t974 - t1351 * t1052 - pkin(5) * (t1351 * t1082 - t1355 * t1253), t1355 * t982 - t1351 * t1002 - pkin(5) * (t1351 * t1050 + t1355 * t1254), t1355 * t1067 + t1351 * t1181, t1355 * t1027 + t1351 * t1115, t1355 * t1041 + t1351 * t1155, t1355 * t1066 - t1351 * t1179, t1355 * t1042 + t1351 * t1156, t1355 * t1078 + t1351 * t1197, t1355 * t923 - t1351 * t962 - pkin(5) * (t1351 * t1019 - t1355 * t1131), t1355 * t924 - t1351 * t963 - pkin(5) * (t1351 * t1024 - t1355 * t1145), t1355 * t919 - t1351 * t941 - pkin(5) * (t1351 * t1016 - t1355 * t1116), t1355 * t903 - t1351 * t918 - pkin(5) * (t1351 * t944 - t1355 * t994), t1351 * t1031 + t1355 * t961, t1351 * t976 + t1355 * t935, t1351 * t1044 + t1355 * t953, t1351 * t1030 + t1355 * t960, t1351 * t1045 + t1355 * t954, t1355 * t1001 + t1351 * t1070, t1355 * t893 - t1351 * t909 - pkin(5) * (-t1355 * t1010 + t1351 * t946), t1355 * t895 - t1351 * t913 - pkin(5) * (-t1355 * t1028 + t1351 * t949), t1355 * t890 - t1351 * t896 - pkin(5) * (t1351 * t933 - t1355 * t977), t1355 * t886 - t1351 * t888 - pkin(5) * (t1351 * t899 - t1355 * t915); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1321, 0, t1322, 0, t1304, t1377, t1386, pkin(5) * t1386, t1351 * t1296 + t1380, t1351 * t1273 - t1355 * t1324, t1351 * t1290 - t1350 * t1402, t1351 * t1295 - t1380, t1351 * t1288 - t1354 * t1402, -t1355 * qJDD(2) + t1351 * t1314, t1351 * t1256 + t1355 * t1249 + pkin(5) * (t1355 * t1289 - t1351 * t1319), t1351 * t1257 + t1355 * t1250 + pkin(5) * (t1355 * t1291 + t1351 * t1317), t1351 * t1244 + pkin(5) * (t1355 * t1320 - t1351 * t1323), pkin(5) * (t1355 * t1245 - t1351 * t1311) - (-t1355 * pkin(1) - t1351 * pkin(6)) * t1244, t1351 * t1154 - t1392, t1351 * t1081 - t1355 * t1269, t1351 * t1170 - t1355 * t1219, t1351 * t1153 + t1392, t1351 * t1171 + t1355 * t1215, t1351 * t1195 - t1355 * t1401, t1351 * t1048 + t1355 * t1062 + pkin(5) * (t1355 * t1148 + t1351 * t1214), t1351 * t1051 + t1355 * t1072 + pkin(5) * (t1355 * t1166 + t1218 * t1351), t1351 * t974 + t1355 * t1052 + pkin(5) * (t1355 * t1082 + t1351 * t1253), t1351 * t982 + t1355 * t1002 + pkin(5) * (t1355 * t1050 - t1351 * t1254), t1351 * t1067 - t1355 * t1181, t1351 * t1027 - t1355 * t1115, t1351 * t1041 - t1355 * t1155, t1351 * t1066 + t1355 * t1179, t1351 * t1042 - t1355 * t1156, t1351 * t1078 - t1355 * t1197, t1351 * t923 + t1355 * t962 + pkin(5) * (t1355 * t1019 + t1351 * t1131), t1351 * t924 + t1355 * t963 + pkin(5) * (t1355 * t1024 + t1351 * t1145), t1351 * t919 + t1355 * t941 + pkin(5) * (t1355 * t1016 + t1351 * t1116), t1351 * t903 + t1355 * t918 + pkin(5) * (t1351 * t994 + t1355 * t944), -t1355 * t1031 + t1351 * t961, t1351 * t935 - t1355 * t976, -t1355 * t1044 + t1351 * t953, -t1355 * t1030 + t1351 * t960, -t1355 * t1045 + t1351 * t954, t1351 * t1001 - t1355 * t1070, t1351 * t893 + t1355 * t909 + pkin(5) * (t1351 * t1010 + t1355 * t946), t1351 * t895 + t1355 * t913 + pkin(5) * (t1351 * t1028 + t1355 * t949), t1351 * t890 + t1355 * t896 + pkin(5) * (t1351 * t977 + t1355 * t933), t1351 * t886 + t1355 * t888 + pkin(5) * (t1351 * t915 + t1355 * t899); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1327, t1328, 0, 0, t1283, t1272, t1286, t1282, t1284, 0, t1237, t1236, t1207, t1212, t1152, t1079, t1168, t1151, t1169, t1194, t1021, t1043, t973, t980, t1065, t1026, t1039, t1064, t1040, t1077, t920, t922, t917, t902, t959, t934, t951, t958, t952, t1000, t892, t894, t889, t885; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1357, 0, 0, -g(3), -t1327, 0, t1296, t1273, t1290, t1295, t1288, t1314, t1256, t1257, t1244, pkin(6) * t1244, t1154, t1081, t1170, t1153, t1171, t1195, t1048, t1051, t974, t982, t1067, t1027, t1041, t1066, t1042, t1078, t923, t924, t919, t903, t961, t935, t953, t960, t954, t1001, t893, t895, t890, t886; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1357, 0, qJDD(1), 0, g(3), 0, -t1328, 0, t1334, -t1324, -t1404, -t1334, -t1340, -qJDD(2), t1249, t1250, 0, pkin(1) * t1244, -t1271, -t1269, -t1219, t1271, t1215, -t1401, t1062, t1072, t1052, t1002, -t1181, -t1115, -t1155, t1179, -t1156, -t1197, t962, t963, t941, t918, -t1031, -t976, -t1044, -t1030, -t1045, -t1070, t909, t913, t896, t888; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1327, t1328, 0, 0, t1283, t1272, t1286, t1282, t1284, 0, t1237, t1236, t1207, t1212, t1152, t1079, t1168, t1151, t1169, t1194, t1021, t1043, t973, t980, t1065, t1026, t1039, t1064, t1040, t1077, t920, t922, t917, t902, t959, t934, t951, t958, t952, t1000, t892, t894, t889, t885; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1318, t1319, t1325, -t1337, t1331, t1337, 0, -t1311, t1293, 0, t1211, t1163, t1225, t1209, t1226, t1259, t1172, t1175, t1060, -pkin(7) * t1112, t1144, t1089, t1106, t1143, t1107, t1160, t966, t969, t955, t931, t1006, t968, t998, t1005, t999, t1059, t908, t912, t900, t891; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1396, t1317, t1329, -t1376, t1326, -t1396, t1311, 0, t1294, 0, t1210, t1161, t1223, t1208, t1224, t1258, t1119, t1124, t1053, t1085, t1142, t1088, t1104, t1141, t1105, t1159, t956, t957, t947, t921, t1004, t967, t996, t1003, t997, t1058, t906, t907, t897, t887; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1334, t1324, t1404, t1334, t1340, qJDD(2), -t1293, -t1294, 0, 0, t1271, t1269, t1219, -t1271, -t1215, t1401, t1371, t1378, t1444, t1445, t1181, t1115, t1155, -t1179, t1156, t1197, t1374, t1373, t1365, t1382, t1031, t976, t1044, t1030, t1045, t1070, t1367, t1366, t1369, t1362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1252, -t1214, t1450, t1300, t1297, -t1300, 0, -t1254, t1177, 0, t1182, t1117, t1157, t1180, t1158, t1198, t1061, t1063, t981, -qJ(4) * t994, t1033, t978, t1046, t1032, t1047, t1071, t938, t940, t904, t901; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1430, t1218, t1298, -t1251, t1266, -t1430, t1254, 0, t1178, 0, -t1242, -t1241, -t1189, t1242, -t1187, -t1251, t1020, t1022, -pkin(3) * t1116, -pkin(3) * t994, -t1174, -t1173, -t1102, t1174, t1099, -t1248, t939, t942, t950, t905; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1271, t1269, t1219, -t1271, -t1215, t1401, -t1177, -t1178, 0, 0, t1181, t1115, t1155, -t1179, t1156, t1197, t1390, t1391, t1379, t1439, t1031, t976, t1044, t1030, t1045, t1070, t1384, t1383, t1385, t1368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1234, t1186, t1451, t1262, t1260, -t1262, 0, t1135, t1056, 0, t1095, t1037, t1110, t1093, t1111, t1150, t1008, t1013, t928, -pkin(8) * t936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1263, t1188, t1261, -t1364, t1192, -t1263, -t1135, 0, t1057, 0, t1094, t1035, t1108, t1092, t1109, t1149, t986, t990, t926, t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1242, t1241, t1189, -t1242, t1187, t1251, -t1056, -t1057, 0, 0, t1174, t1173, t1102, -t1174, -t1099, t1248, t1370, t1363, t1442, t1446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1123, -t1098, t1453, t1205, t1201, -t1205, 0, t1069, t971, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1435, t1452, t1202, t1122, t1138, -t1435, -t1069, 0, t972, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1174, t1173, t1102, -t1174, -t1099, t1248, -t971, -t972, 0, 0;];
m_new_reg = t1;
