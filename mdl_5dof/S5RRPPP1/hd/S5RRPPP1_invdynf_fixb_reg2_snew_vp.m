% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRPPP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha3,d1,d2,theta3]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:25
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRPPP1_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPP1_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPP1_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPPP1_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPPP1_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPPP1_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:25:34
% EndTime: 2019-12-31 19:25:38
% DurationCPUTime: 4.59s
% Computational Cost: add. (11027->234), mult. (28576->277), div. (0->0), fcn. (20897->8), ass. (0->159)
t2058 = cos(qJ(2));
t2097 = t2058 * qJD(1);
t2089 = qJD(2) * t2097;
t2056 = sin(qJ(2));
t2094 = t2056 * qJDD(1);
t2032 = t2089 + t2094;
t2052 = sin(pkin(8));
t2054 = cos(pkin(8));
t2055 = cos(pkin(5));
t2098 = t2056 * qJD(1);
t2091 = qJD(2) * t2098;
t2093 = t2058 * qJDD(1);
t2080 = t2091 - t2093;
t2053 = sin(pkin(5));
t2095 = t2053 * qJDD(2);
t2133 = t2055 * t2080 - t2095;
t2068 = t2054 * t2032 - t2052 * t2133;
t2113 = qJD(2) * t2053;
t2081 = t2055 * t2097 + t2113;
t2009 = t2052 * t2098 - t2081 * t2054;
t2030 = -qJD(2) * t2055 + t2053 * t2097;
t2104 = t2009 * t2030;
t1973 = t2068 + t2104;
t2119 = t2030 ^ 2;
t2099 = t2055 * t2052;
t2011 = t2052 * t2113 - (-t2054 * t2056 - t2058 * t2099) * qJD(1);
t2120 = t2011 ^ 2;
t1989 = t2120 + t2119;
t2049 = t2055 * qJDD(2);
t2075 = -t2053 * t2080 - t2049;
t2103 = t2011 * t2009;
t2072 = t2075 - t2103;
t2144 = t1989 * t2054 - t2072 * t2052;
t1945 = t1973 * t2055 - t2144 * t2053;
t2057 = sin(qJ(1));
t2179 = t1945 * t2057;
t2059 = cos(qJ(1));
t2178 = t1945 * t2059;
t2000 = t2032 * t2052 + t2133 * t2054;
t2003 = t2011 * t2030;
t1968 = t2000 - t2003;
t2071 = t2075 + t2103;
t2007 = t2009 ^ 2;
t2125 = -t2007 - t2119;
t2132 = t2125 * t2052 - t2071 * t2054;
t2155 = t1968 * t2055 + t2132 * t2053;
t2177 = t2057 * t2155;
t2176 = t2059 * t2155;
t2100 = t2054 * t2055;
t2169 = t1973 * t2053;
t2143 = t1989 * t2100 - t2072 * t2099 + t2169;
t1958 = t1989 * t2052 + t2054 * t2072;
t2170 = t1958 * t2058;
t2165 = -t2056 * t2143 - t2170;
t2175 = t2057 * t2165 + t2178;
t2138 = t1968 * t2053;
t2156 = -t2071 * t2100 + t2099 * t2125 - t2138;
t2147 = t2071 * t2052 + t2125 * t2054;
t2158 = t2058 * t2147;
t2164 = -t2056 * t2156 + t2158;
t2174 = t2057 * t2164 - t2176;
t2173 = t2059 * t2165 - t2179;
t2172 = t2059 * t2164 + t2177;
t2171 = t1958 * t2056;
t2166 = t2058 * t2143 - t2171;
t1969 = t2000 + t2003;
t2066 = t2068 - t2104;
t2122 = -t2120 - t2007;
t2139 = t2122 * t2055 + (-t1969 * t2052 - t2066 * t2054) * t2053;
t2145 = -t1969 * t2099 - t2053 * t2122 - t2066 * t2100;
t2146 = -t2054 * t1969 + t2066 * t2052;
t2151 = -t2056 * t2145 + t2058 * t2146;
t2154 = t2057 * t2151 - t2059 * t2139;
t2161 = t2056 * t2147;
t2163 = t2058 * t2156 + t2161;
t2153 = t2057 * t2139 + t2059 * t2151;
t2152 = t2056 * t2146 + t2058 * t2145;
t2041 = t2057 * g(1) - t2059 * g(2);
t2061 = qJD(1) ^ 2;
t2078 = -t2061 * pkin(7) - t2041;
t2102 = t2032 * t2053;
t2116 = t2058 * pkin(2);
t2050 = t2056 ^ 2;
t2051 = t2058 ^ 2;
t2124 = -t2051 - t2050;
t2063 = -qJ(3) * t2102 + (-pkin(1) - t2116) * qJDD(1) + (0.2e1 * t2056 * qJD(2) * pkin(2) + (t2124 * qJD(1) * t2055 - t2058 * t2113) * qJ(3)) * qJD(1) + t2078;
t2042 = -g(1) * t2059 - g(2) * t2057;
t2027 = -pkin(1) * t2061 + qJDD(1) * pkin(7) + t2042;
t2028 = (-qJ(3) * t2053 * t2056 - t2116) * qJD(1);
t2115 = t2058 * g(3);
t2074 = qJD(2) * t2081 - t2032 * t2055;
t2123 = -qJDD(2) * pkin(2) - t2074 * qJ(3);
t2065 = -t2115 + (-qJD(1) * t2028 - t2027) * t2056 - t2123;
t2134 = t2053 * t2063 + t2055 * t2065;
t2127 = t2050 * t2061;
t2060 = qJD(2) ^ 2;
t2118 = 2 * qJD(5);
t2117 = -0.2e1 * t2011;
t2092 = t2055 * t2063 + qJDD(3);
t2018 = -t2056 * g(3) + t2058 * t2027;
t1982 = -t2060 * pkin(2) + (t2055 * t2093 + t2095) * qJ(3) + t2028 * t2097 + t2018;
t2088 = t1982 * t2052 - t2134 * t2054;
t2017 = -t2056 * t2027 - t2115;
t2087 = -0.2e1 * qJD(3) * t2009 + t2054 * t1982;
t1990 = pkin(3) * t2009 - qJ(4) * t2011;
t1917 = qJDD(4) + t2075 * pkin(3) - t2119 * qJ(4) + (0.2e1 * qJD(3) + t1990) * t2011 + t2088;
t1906 = t2068 * pkin(4) + (-pkin(4) * t2009 + t2118) * t2030 + t1917 + t2071 * qJ(5);
t1916 = -t2119 * pkin(3) - qJ(4) * t2075 - 0.2e1 * qJD(4) * t2030 - t2009 * t1990 + t2134 * t2052 + t2087;
t1998 = pkin(4) * t2011 + qJ(5) * t2030;
t1908 = -t2000 * pkin(4) - t2007 * qJ(5) - t2030 * t1998 + qJDD(5) + t1916;
t2086 = -t1906 * t2054 + t1908 * t2052;
t2085 = t1916 * t2052 - t1917 * t2054;
t1931 = qJD(3) * t2117 - t2088;
t2026 = qJDD(1) * pkin(1) - t2078;
t2076 = -t2028 * t2098 + t2017;
t2079 = 0.2e1 * t2091 - t2093;
t1932 = (t2055 * t2076 - t2053 * t2026 + (t2053 * t2079 + t2049) * pkin(2) + (t2055 * t2074 + t2053 * (-t2055 * t2127 - t2081 * t2097 - t2102)) * qJ(3)) * t2052 + t2087;
t2084 = t1931 * t2054 + t1932 * t2052;
t1930 = t1968 * pkin(3) - t1973 * qJ(4) + qJD(4) * t2117 - t2053 * t2065 + t2092;
t2047 = t2058 * t2061 * t2056;
t2046 = -t2051 * t2061 - t2060;
t2045 = -t2060 - t2127;
t2040 = -qJDD(2) + t2047;
t2039 = qJDD(2) + t2047;
t2038 = t2124 * t2061;
t2037 = -qJDD(1) * t2057 - t2059 * t2061;
t2036 = qJDD(1) * t2059 - t2057 * t2061;
t2035 = t2124 * qJDD(1);
t2031 = 0.2e1 * t2089 + t2094;
t2016 = t2040 * t2058 - t2045 * t2056;
t2015 = -t2039 * t2056 + t2046 * t2058;
t2014 = t2040 * t2056 + t2045 * t2058;
t2013 = t2039 * t2058 + t2046 * t2056;
t1997 = -t2017 * t2056 + t2018 * t2058;
t1996 = t2017 * t2058 + t2018 * t2056;
t1954 = t2092 + (-t2076 + t2123) * t2053;
t1948 = -t2055 * t2144 - t2169;
t1944 = -t2055 * t2132 + t2138;
t1927 = -t1948 * t2056 + t2170;
t1924 = t1948 * t2058 + t2171;
t1923 = -t1944 * t2056 - t2158;
t1920 = t1944 * t2058 - t2161;
t1909 = -t2007 * pkin(4) + t2000 * qJ(5) - t2011 * t1998 + t2009 * t2118 + t1930;
t1907 = -t1931 * t2052 + t1932 * t2054;
t1905 = -t1954 * t2053 + t2084 * t2055;
t1904 = t1954 * t2055 + t2084 * t2053;
t1903 = t1916 * t2054 + t1917 * t2052;
t1902 = t1906 * t2052 + t1908 * t2054;
t1901 = -t1930 * t2053 + t2085 * t2055;
t1900 = t1930 * t2055 + t2085 * t2053;
t1899 = -t1905 * t2056 + t1907 * t2058;
t1898 = t1905 * t2058 + t1907 * t2056;
t1897 = -t1909 * t2053 + t2086 * t2055;
t1896 = t1909 * t2055 + t2086 * t2053;
t1895 = -t1901 * t2056 + t1903 * t2058;
t1894 = t1901 * t2058 + t1903 * t2056;
t1893 = -t1897 * t2056 + t1902 * t2058;
t1892 = t1897 * t2058 + t1902 * t2056;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2037, -t2036, 0, -t2041 * t2057 + t2042 * t2059, 0, 0, 0, 0, 0, 0, t2015 * t2059 + t2057 * t2079, t2016 * t2059 + t2031 * t2057, -t2035 * t2059 + t2038 * t2057, t1997 * t2059 - t2026 * t2057, 0, 0, 0, 0, 0, 0, t2172, t1927 * t2059 + t2179, t2153, t1899 * t2059 + t1904 * t2057, 0, 0, 0, 0, 0, 0, t2153, t1923 * t2059 - t2177, t2173, t1895 * t2059 + t1900 * t2057, 0, 0, 0, 0, 0, 0, t2153, t2173, t2172, t1893 * t2059 + t1896 * t2057; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2036, t2037, 0, t2041 * t2059 + t2042 * t2057, 0, 0, 0, 0, 0, 0, t2015 * t2057 - t2059 * t2079, t2016 * t2057 - t2031 * t2059, -t2035 * t2057 - t2038 * t2059, t1997 * t2057 + t2026 * t2059, 0, 0, 0, 0, 0, 0, t2174, t1927 * t2057 - t2178, t2154, t1899 * t2057 - t1904 * t2059, 0, 0, 0, 0, 0, 0, t2154, t1923 * t2057 + t2176, t2175, t1895 * t2057 - t1900 * t2059, 0, 0, 0, 0, 0, 0, t2154, t2175, t2174, t1893 * t2057 - t1896 * t2059; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2013, t2014, 0, t1996, 0, 0, 0, 0, 0, 0, t2163, t1924, t2152, t1898, 0, 0, 0, 0, 0, 0, t2152, t1920, t2166, t1894, 0, 0, 0, 0, 0, 0, t2152, t2166, t2163, t1892; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2061, -qJDD(1), 0, t2042, 0, 0, 0, 0, 0, 0, t2015, t2016, -t2035, t1997, 0, 0, 0, 0, 0, 0, t2164, t1927, t2151, t1899, 0, 0, 0, 0, 0, 0, t2151, t1923, t2165, t1895, 0, 0, 0, 0, 0, 0, t2151, t2165, t2164, t1893; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2061, 0, t2041, 0, 0, 0, 0, 0, 0, -t2079, -t2031, -t2038, t2026, 0, 0, 0, 0, 0, 0, -t2155, -t1945, -t2139, -t1904, 0, 0, 0, 0, 0, 0, -t2139, t2155, t1945, -t1900, 0, 0, 0, 0, 0, 0, -t2139, t1945, -t2155, -t1896; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2013, t2014, 0, t1996, 0, 0, 0, 0, 0, 0, t2163, t1924, t2152, t1898, 0, 0, 0, 0, 0, 0, t2152, t1920, t2166, t1894, 0, 0, 0, 0, 0, 0, t2152, t2166, t2163, t1892; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2046, t2040, t2093, t2018, 0, 0, 0, 0, 0, 0, t2147, t1958, t2146, t1907, 0, 0, 0, 0, 0, 0, t2146, -t2147, -t1958, t1903, 0, 0, 0, 0, 0, 0, t2146, -t1958, t2147, t1902; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2039, t2045, -t2094, t2017, 0, 0, 0, 0, 0, 0, t2156, t1948, t2145, t1905, 0, 0, 0, 0, 0, 0, t2145, t1944, t2143, t1901, 0, 0, 0, 0, 0, 0, t2145, t2143, t2156, t1897; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2079, t2031, t2038, -t2026, 0, 0, 0, 0, 0, 0, t2155, t1945, t2139, t1904, 0, 0, 0, 0, 0, 0, t2139, -t2155, -t1945, t1900, 0, 0, 0, 0, 0, 0, t2139, -t1945, t2155, t1896; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2125, t2072, -t1969, t1932, 0, 0, 0, 0, 0, 0, -t1969, -t2125, -t2072, t1916, 0, 0, 0, 0, 0, 0, -t1969, -t2072, t2125, t1908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2071, -t1989, -t2066, t1931, 0, 0, 0, 0, 0, 0, -t2066, t2071, t1989, -t1917, 0, 0, 0, 0, 0, 0, -t2066, t1989, -t2071, -t1906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1968, t1973, t2122, t1954, 0, 0, 0, 0, 0, 0, t2122, -t1968, -t1973, t1930, 0, 0, 0, 0, 0, 0, t2122, -t1973, t1968, t1909; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2122, -t1968, -t1973, t1930, 0, 0, 0, 0, 0, 0, t2122, -t1973, t1968, t1909; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1969, t2125, t2072, -t1916, 0, 0, 0, 0, 0, 0, t1969, t2072, -t2125, -t1908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2066, -t2071, -t1989, t1917, 0, 0, 0, 0, 0, 0, t2066, -t1989, t2071, t1906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2122, -t1973, t1968, t1909; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2066, -t1989, t2071, t1906; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1969, -t2072, t2125, t1908;];
f_new_reg = t1;
