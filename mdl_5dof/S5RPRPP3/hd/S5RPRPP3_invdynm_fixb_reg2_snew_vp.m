% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRPP3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:13
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRPP3_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPP3_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPP3_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPP3_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPP3_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RPRPP3_invdynm_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:13:11
% EndTime: 2019-12-31 18:13:26
% DurationCPUTime: 15.51s
% Computational Cost: add. (20995->571), mult. (52586->611), div. (0->0), fcn. (35102->6), ass. (0->368)
t1119 = sin(pkin(7));
t1103 = t1119 * qJDD(1);
t1120 = cos(pkin(7));
t1105 = t1120 * qJDD(1);
t1122 = sin(qJ(3));
t1124 = cos(qJ(3));
t1079 = t1122 * t1103 - t1124 * t1105;
t1125 = cos(qJ(1));
t1123 = sin(qJ(1));
t1126 = qJD(3) ^ 2;
t1218 = qJD(1) * t1119;
t1081 = -t1124 * t1120 * qJD(1) + t1122 * t1218;
t1249 = t1081 ^ 2;
t1056 = t1249 - t1126;
t1156 = t1119 * t1124 + t1120 * t1122;
t1083 = t1156 * qJD(1);
t1196 = t1083 * t1081;
t1289 = qJDD(3) + t1196;
t1306 = t1124 * t1289;
t946 = t1056 * t1122 + t1306;
t1307 = t1122 * t1289;
t955 = t1056 * t1124 - t1307;
t1321 = t1119 * t946 - t1120 * t955;
t1326 = t1123 * t1321;
t1337 = t1079 * t1125 - t1326;
t1325 = t1125 * t1321;
t1336 = t1079 * t1123 + t1325;
t1290 = qJDD(3) - t1196;
t1000 = t1124 * t1290;
t1059 = t1249 + t1126;
t1305 = -t1059 * t1122 + t1000;
t1207 = t1290 * t1122;
t934 = t1059 * t1124 + t1207;
t863 = t1119 * t934 - t1120 * t1305;
t1320 = pkin(1) * t863;
t1248 = t1083 ^ 2;
t1259 = t1248 + t1126;
t1274 = t1124 * t1259 + t1307;
t1275 = -t1122 * t1259 + t1306;
t1286 = t1119 * t1275 + t1120 * t1274;
t1335 = pkin(1) * t1286;
t1319 = qJ(2) * t863;
t866 = t1119 * t1305 + t1120 * t934;
t1334 = qJ(2) * t866;
t898 = t1119 * t1274 - t1120 * t1275;
t1333 = qJ(2) * t898;
t1308 = qJ(2) * t1286;
t1332 = t1123 * t866;
t1331 = t1123 * t898;
t1330 = t1125 * t866;
t1329 = t1125 * t898;
t1261 = -t1248 + t1126;
t1312 = t1124 * t1261 + t1207;
t1313 = -t1261 * t1122 + t1000;
t897 = t1119 * t1312 - t1120 * t1313;
t1328 = t1123 * t897;
t1327 = t1125 * t897;
t1069 = t1081 * qJD(3);
t1080 = t1156 * qJDD(1);
t1029 = t1080 - t1069;
t978 = t1069 + t1029;
t1324 = t1125 * t978 + t1328;
t1323 = -t1123 * t978 + t1327;
t1322 = pkin(6) * t934;
t1298 = pkin(2) * t1274;
t1245 = pkin(2) * t1305;
t1297 = pkin(6) * t1274;
t1296 = pkin(6) * t1275;
t1314 = pkin(6) * t1305;
t881 = t1119 * t955 + t1120 * t946;
t1127 = qJD(1) ^ 2;
t1095 = t1123 * g(1) - t1125 * g(2);
t1167 = -qJDD(2) + t1095;
t1113 = t1119 ^ 2;
t1114 = t1120 ^ 2;
t1187 = t1113 + t1114;
t1018 = (t1187 * pkin(6) + qJ(2)) * t1127 + (pkin(2) * t1120 + pkin(1)) * qJDD(1) + t1167;
t1197 = t1083 * qJD(3);
t1135 = -pkin(3) * t1197 + 0.2e1 * qJD(4) * t1083 + t1018;
t979 = -t1069 + t1029;
t1269 = qJ(4) * t979;
t1132 = t1135 + t1269;
t1027 = t1079 + t1197;
t1049 = pkin(4) * t1083 - qJD(3) * qJ(5);
t1299 = -2 * qJD(5);
t1258 = -t1027 * qJ(5) + t1083 * t1049 + t1081 * t1299;
t1130 = t1132 + t1258;
t1237 = t1027 * pkin(3);
t1131 = t1237 - t1130;
t1026 = t1079 + 0.2e1 * t1197;
t1318 = -pkin(1) * t1026 - t1334;
t1317 = pkin(5) * (-t1125 * t1026 - t1332);
t1316 = pkin(5) * (t1026 * t1123 - t1330);
t1315 = t1119 * t1313 + t1120 * t1312;
t1311 = -pkin(2) * t1026 - t1322;
t1230 = qJ(5) * t1290;
t1217 = qJD(4) * qJD(3);
t1111 = -0.2e1 * t1217;
t1303 = t1111 - t1335;
t1263 = pkin(3) * t1290 - qJ(4) * t1059;
t1302 = pkin(1) * t979 - t1333;
t1181 = t1125 * t1196;
t1194 = t1083 * t1124;
t1161 = qJD(3) * t1194 + t1122 * t1029;
t1195 = t1083 * t1122;
t1180 = qJD(3) * t1195;
t1279 = t1124 * t1029 - t1180;
t1287 = -t1119 * t1161 + t1120 * t1279;
t1163 = t1123 * t1287 - t1181;
t1182 = t1123 * t1196;
t1165 = t1125 * t1287 + t1182;
t1301 = pkin(5) * (t1125 * t979 - t1331);
t1300 = pkin(5) * (-t1123 * t979 - t1329);
t1031 = t1249 - t1248;
t1294 = t1031 * t1123;
t1293 = t1031 * t1125;
t1288 = t1119 * t1279 + t1120 * t1161;
t1260 = -t1248 - t1249;
t1284 = pkin(1) * t1260;
t1283 = pkin(2) * t1260;
t1282 = qJ(4) * t1260;
t1281 = t1123 * t1260;
t1280 = t1125 * t1260;
t1012 = pkin(3) * t1081 - qJ(4) * t1083;
t1096 = g(1) * t1125 + g(2) * t1123;
t1085 = -pkin(1) * t1127 + qJDD(1) * qJ(2) - t1096;
t1190 = t1120 * t1127;
t1234 = pkin(6) * qJDD(1);
t1235 = t1120 * g(3);
t986 = -t1235 - 0.2e1 * qJD(2) * t1218 + (pkin(2) * t1190 - t1085 - t1234) * t1119;
t1107 = t1114 * t1127;
t1176 = 0.2e1 * qJD(1) * qJD(2) + t1085;
t1236 = t1119 * g(3);
t989 = -pkin(2) * t1107 - t1236 + (t1176 + t1234) * t1120;
t916 = t1122 * t989 - t1124 * t986;
t1145 = qJDD(3) * pkin(3) + t1126 * qJ(4) - t1083 * t1012 - qJDD(4) - t916;
t1141 = -t1029 * pkin(4) + t1145 + t1230;
t1139 = 0.2e1 * qJD(5) * qJD(3) + t1141;
t1278 = t1139 - pkin(4) * (t1080 + t1069);
t1276 = pkin(3) * t1259 + qJ(4) * t1289;
t1108 = t1123 * qJDD(3);
t1198 = t1081 * t1124;
t1183 = qJD(3) * t1198;
t1159 = t1180 - t1183;
t1199 = t1081 * t1122;
t1149 = (-t1194 - t1199) * qJD(3);
t1268 = t1119 * t1149;
t1252 = t1120 * t1159 - t1268;
t1273 = t1125 * t1252 + t1108;
t1154 = t1027 * t1122 + t1183;
t1160 = qJD(3) * t1199 - t1124 * t1027;
t1251 = -t1119 * t1160 + t1120 * t1154;
t1164 = t1123 * t1251 + t1181;
t1186 = qJDD(3) * t1125;
t1272 = t1123 * t1252 - t1186;
t1166 = t1125 * t1251 - t1182;
t1270 = (t1259 - t1249) * pkin(4);
t1266 = t1120 * t1149;
t1256 = -(t1059 - t1249) * pkin(4) - qJ(5) * t1026;
t1255 = t1127 * t1187;
t1253 = t1119 * t1159 + t1266;
t1250 = t1119 * t1154 + t1120 * t1160;
t917 = t1122 * t986 + t1124 * t989;
t856 = t1122 * t917 - t1124 * t916;
t1247 = pkin(2) * t856;
t1055 = t1124 * t1080;
t976 = t1027 - t1197;
t936 = -t1122 * t976 - t1055;
t1246 = pkin(2) * t936;
t845 = (pkin(4) * t1081 + t1299) * qJD(3) - t1141;
t1244 = pkin(4) * t845;
t1110 = 0.2e1 * t1217;
t1158 = t1126 * pkin(3) - qJDD(3) * qJ(4) + t1081 * t1012 - t917;
t1146 = t1027 * pkin(4) + qJ(5) * t1249 - qJD(3) * t1049 - qJDD(5) + t1158;
t848 = t1110 - t1146;
t1243 = pkin(4) * t848;
t1242 = pkin(3) + qJ(5);
t1240 = pkin(3) * t1124;
t1239 = pkin(4) * t1289;
t1238 = pkin(4) * t1290;
t1233 = qJ(5) * t845;
t1232 = qJDD(1) * pkin(1);
t875 = t1110 - t1158;
t1231 = pkin(3) * t1145 + qJ(4) * t875;
t1228 = qJ(5) * t1080;
t1227 = t1119 * t856;
t1226 = t1120 * t856;
t1225 = t1122 * t979;
t977 = t1027 + t1197;
t1222 = t1124 * t977;
t1221 = t1124 * t979;
t1068 = qJ(4) * t1079;
t1219 = -pkin(3) * t978 - t1068;
t1211 = t1018 * t1122;
t1210 = t1018 * t1124;
t1206 = t1026 * t1122;
t1204 = t1026 * t1124;
t1200 = t1080 * t1122;
t1073 = t1127 * qJ(2) + t1167 + t1232;
t1193 = t1119 * t1073;
t1192 = t1119 * t1120;
t1191 = t1120 * t1073;
t1179 = qJ(4) * t1122 + pkin(2);
t1178 = t1119 * t1105;
t1177 = t1073 + t1232;
t857 = t1122 * t916 + t1124 * t917;
t1039 = t1176 * t1119 + t1235;
t1040 = t1176 * t1120 - t1236;
t945 = t1039 * t1119 + t1120 * t1040;
t1173 = -t1095 * t1123 - t1125 * t1096;
t837 = t1122 * t875 + t1124 * t1145;
t1172 = pkin(2) * t837 + t1231;
t1171 = -t917 - t1298;
t1053 = t1122 * t1079;
t938 = -t1124 * t978 - t1053;
t1170 = pkin(2) * t938 + t1219;
t1169 = -pkin(3) * t845 + qJ(4) * t848 - t1233;
t1094 = qJDD(1) * t1125 - t1123 * t1127;
t1168 = -pkin(5) * t1094 - g(3) * t1123;
t1162 = -pkin(3) * t1080 - t1068 - t1228;
t944 = t1039 * t1120 - t1040 * t1119;
t1157 = t1095 * t1125 - t1096 * t1123;
t1093 = qJDD(1) * t1123 + t1125 * t1127;
t1155 = -t916 + t1245;
t818 = t1122 * t848 - t1124 * t845;
t1153 = pkin(2) * t818 + t1169;
t1087 = t1120 * t1255;
t1152 = -t1087 * t1123 + t1125 * t1105;
t1151 = t1087 * t1125 + t1123 * t1105;
t996 = -t1053 - t1055;
t1150 = pkin(2) * t996 + t1162;
t1148 = -t1158 + t1276;
t1147 = t1148 + t1298;
t1144 = -t1145 - t1263;
t1143 = -pkin(4) * t1079 - t1146;
t1142 = qJ(5) * t1259 - t1146;
t1140 = t1144 - t1245;
t1138 = t1142 + t1276;
t1137 = t1138 + t1298;
t1136 = -pkin(4) * t1069 + t1139 + t1230;
t1134 = t1136 + t1263;
t852 = t1135 - t1237 + 0.2e1 * t1269;
t1106 = t1113 * t1127;
t1104 = t1114 * qJDD(1);
t1102 = t1113 * qJDD(1);
t1098 = t1119 * t1190;
t1097 = 0.2e1 * t1178;
t1092 = t1107 - t1106;
t1091 = t1106 + t1107;
t1090 = t1104 - t1102;
t1089 = t1104 + t1102;
t1086 = t1119 * t1255;
t1074 = -pkin(5) * t1093 + g(3) * t1125;
t1054 = t1124 * t1079;
t1048 = t1094 * t1192;
t1047 = t1093 * t1192;
t1042 = t1086 * t1125 + t1123 * t1103;
t1041 = t1086 * t1123 - t1125 * t1103;
t1028 = t1080 - 0.2e1 * t1069;
t997 = -t1054 + t1200;
t994 = (t1195 - t1198) * qJD(3);
t988 = -qJ(2) * t1087 + t1177 * t1120;
t987 = qJ(2) * t1086 - t1177 * t1119;
t942 = -qJ(4) * t1026 - t1238;
t941 = t1122 * t978 - t1054;
t940 = -t1028 * t1122 - t1204;
t939 = -t1124 * t976 + t1200;
t937 = t1028 * t1124 - t1206;
t929 = -t1119 * t996 + t1120 * t997;
t928 = t1119 * t997 + t1120 * t996;
t927 = pkin(1) * t1073 + qJ(2) * t945;
t925 = t1120 * t994 - t1268;
t922 = t1119 * t994 + t1266;
t920 = t1204 + t1225;
t919 = t1206 - t1221;
t918 = pkin(1) * t1091 + qJ(2) * t1089 + t945;
t914 = -t1210 + t1297;
t913 = -t1222 - t1225;
t912 = -t1122 * t977 + t1221;
t911 = -t1211 - t1314;
t880 = -pkin(2) * t1028 - t1211 - t1296;
t879 = t1242 * t979 + t1239;
t878 = t1210 + t1311;
t874 = -t1119 * t938 + t1120 * t941;
t873 = -t1119 * t937 + t1120 * t940;
t872 = -t1119 * t936 + t1120 * t939;
t871 = t1119 * t941 + t1120 * t938;
t870 = t1119 * t940 + t1120 * t937;
t869 = t1119 * t939 + t1120 * t936;
t861 = t1132 - t1237;
t860 = -pkin(1) * t928 - t1150;
t859 = -t1119 * t919 + t1120 * t920;
t858 = t1119 * t920 + t1120 * t919;
t855 = -t1145 - t1282;
t854 = -pkin(3) * t1260 + t875;
t853 = (t1027 + t977) * pkin(3) - t1132;
t851 = -t1119 * t912 + t1120 * t913;
t850 = t1119 * t913 + t1120 * t912;
t849 = pkin(2) * t1018 + pkin(6) * t857;
t846 = -pkin(1) * t869 - t1246;
t843 = pkin(4) * t1249 - t1131;
t842 = -pkin(6) * t936 - t856;
t841 = -t1171 + t1335;
t840 = -pkin(1) * t871 - t1170;
t839 = -t1278 - t1282;
t838 = -t1122 * t1145 + t1124 * t875;
t836 = pkin(6) * t939 - t1283 + t857;
t835 = -t1155 + t1320;
t834 = -pkin(3) * t1225 + t1124 * t852 - t1297;
t833 = qJ(4) * t1222 - t1122 * t853 + t1314;
t832 = -t1242 * t1260 + t1110 + t1143;
t831 = t1258 + t852 - t1270;
t830 = t1130 + (-t1026 - t1027) * pkin(3) + t1256;
t829 = -t1119 * t880 + t1120 * t914 + t1308;
t828 = t1296 + t1122 * t852 + (pkin(2) + t1240) * t979;
t827 = t1120 * t857 - t1227;
t826 = t1119 * t857 + t1226;
t825 = t1124 * t853 + t1179 * t977 + t1322;
t824 = -t1147 + t1303;
t823 = -pkin(1) * t1028 + t1119 * t914 + t1120 * t880 + t1333;
t822 = -t1119 * t878 + t1120 * t911 + t1319;
t821 = -t1140 - t1320;
t820 = t1119 * t911 + t1120 * t878 + t1318;
t819 = t1122 * t845 + t1124 * t848;
t817 = -pkin(6) * t938 - t1122 * t854 + t1124 * t855;
t816 = -t1122 * t830 + t1124 * t942 - t1314;
t815 = qJ(4) * t843 + t1244;
t814 = -t1230 - t1245 - t1263 + t845 + t1320;
t813 = t1122 * t942 + t1124 * t830 + t1311;
t812 = pkin(6) * t941 + t1122 * t855 + t1124 * t854 - t1283;
t811 = -t1137 + t1303;
t810 = -t1122 * t879 + t1124 * t831 - t1297;
t809 = -pkin(1) * t826 - t1247;
t808 = pkin(2) * t979 + t1122 * t831 + t1124 * t879 + t1296;
t807 = -t1119 * t837 + t1120 * t838;
t806 = t1119 * t838 + t1120 * t837;
t805 = -pkin(6) * t837 + (-pkin(3) * t1122 + qJ(4) * t1124) * t861;
t804 = -pkin(6) * t996 - t1122 * t832 + t1124 * t839;
t803 = -qJ(2) * t869 - t1119 * t836 + t1120 * t842;
t802 = pkin(6) * t997 + t1122 * t839 + t1124 * t832 - t1283;
t801 = t1242 * t843 + t1243;
t800 = pkin(6) * t838 + (t1179 + t1240) * t861;
t799 = qJ(2) * t872 + t1119 * t842 + t1120 * t836 - t1284;
t798 = -pkin(6) * t1226 - qJ(2) * t826 - t1119 * t849;
t797 = -t1119 * t828 + t1120 * t834 - t1308;
t796 = pkin(1) * t1018 - pkin(6) * t1227 + qJ(2) * t827 + t1120 * t849;
t795 = t1119 * t834 + t1120 * t828 + t1302;
t794 = -t1119 * t825 + t1120 * t833 - t1319;
t793 = pkin(1) * t977 + t1119 * t833 + t1120 * t825 + t1334;
t792 = -t1119 * t818 + t1120 * t819;
t791 = t1119 * t819 + t1120 * t818;
t790 = -t1119 * t813 + t1120 * t816 + t1319;
t789 = -qJ(2) * t871 - t1119 * t812 + t1120 * t817;
t788 = t1119 * t816 + t1120 * t813 + t1318;
t787 = qJ(2) * t874 + t1119 * t817 + t1120 * t812 - t1284;
t786 = -pkin(1) * t806 - t1172;
t785 = -t1119 * t808 + t1120 * t810 - t1308;
t784 = t1119 * t810 + t1120 * t808 + t1302;
t783 = -qJ(2) * t928 - t1119 * t802 + t1120 * t804;
t782 = qJ(2) * t929 + t1119 * t804 + t1120 * t802 - t1284;
t781 = -pkin(6) * t818 - t1122 * t801 + t1124 * t815;
t780 = pkin(2) * t843 + pkin(6) * t819 + t1122 * t815 + t1124 * t801;
t779 = -qJ(2) * t806 - t1119 * t800 + t1120 * t805;
t778 = -pkin(1) * t791 - t1153;
t777 = pkin(1) * t861 + qJ(2) * t807 + t1119 * t805 + t1120 * t800;
t776 = -qJ(2) * t791 - t1119 * t780 + t1120 * t781;
t775 = pkin(1) * t843 + qJ(2) * t792 + t1119 * t781 + t1120 * t780;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1094, 0, -t1093, 0, t1168, -t1074, -t1157, -pkin(5) * t1157, t1048, t1090 * t1125 - t1092 * t1123, t1042, -t1048, t1151, 0, -pkin(5) * t1152 - t1123 * t1039 - t1125 * t1193, -pkin(5) * t1041 - t1040 * t1123 - t1125 * t1191, t1125 * t944 - pkin(5) * (t1089 * t1123 + t1091 * t1125), -pkin(5) * (t1073 * t1125 + t1123 * t945) - (pkin(1) * t1123 - qJ(2) * t1125) * t944, t1165, t1125 * t873 - t1294, t1080 * t1123 - t1327, t1166, -t1336, t1273, -t1123 * t835 + t1125 * t822 - t1317, t1125 * t829 - t1123 * t841 - pkin(5) * (-t1028 * t1125 + t1331), t1125 * t803 - t1123 * t846 - pkin(5) * (t1123 * t872 - t1280), t1125 * t798 - t1123 * t809 - pkin(5) * (t1018 * t1125 + t1123 * t827), t1125 * t925 + t1108, t1323, t1123 * t976 + t1325, t1165, t1125 * t851 - t1294, t1166, t1125 * t789 - t1123 * t840 - pkin(5) * (t1123 * t874 - t1280), t1125 * t794 - t1123 * t821 - pkin(5) * (t1125 * t977 + t1332), -t1123 * t824 + t1125 * t797 - t1301, t1125 * t779 - t1123 * t786 - pkin(5) * (t1123 * t807 + t1125 * t861), t1273, t1336, -t1323, t1166, t1125 * t859 + t1294, t1165, t1125 * t783 - t1123 * t860 - pkin(5) * (t1123 * t929 - t1280), -t1123 * t811 + t1125 * t785 - t1301, -t1123 * t814 + t1125 * t790 - t1317, t1125 * t776 - t1123 * t778 - pkin(5) * (t1123 * t792 + t1125 * t843); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1093, 0, t1094, 0, t1074, t1168, t1173, pkin(5) * t1173, t1047, t1090 * t1123 + t1092 * t1125, t1041, -t1047, -t1152, 0, -pkin(5) * t1151 + t1125 * t1039 - t1123 * t1193, pkin(5) * t1042 + t1040 * t1125 - t1123 * t1191, t1123 * t944 + pkin(5) * (t1089 * t1125 - t1091 * t1123), pkin(5) * (-t1073 * t1123 + t1125 * t945) - (-pkin(1) * t1125 - qJ(2) * t1123) * t944, t1163, t1123 * t873 + t1293, -t1080 * t1125 - t1328, t1164, t1337, t1272, t1123 * t822 + t1125 * t835 + t1316, t1123 * t829 + t1125 * t841 + pkin(5) * (t1028 * t1123 + t1329), t1123 * t803 + t1125 * t846 + pkin(5) * (t1125 * t872 + t1281), t1123 * t798 + t1125 * t809 + pkin(5) * (-t1018 * t1123 + t1125 * t827), t1123 * t925 - t1186, t1324, -t1125 * t976 + t1326, t1163, t1123 * t851 + t1293, t1164, t1123 * t789 + t1125 * t840 + pkin(5) * (t1125 * t874 + t1281), t1123 * t794 + t1125 * t821 + pkin(5) * (-t1123 * t977 + t1330), t1123 * t797 + t1125 * t824 + t1300, t1123 * t779 + t1125 * t786 + pkin(5) * (-t1123 * t861 + t1125 * t807), t1272, -t1337, -t1324, t1164, t1123 * t859 - t1293, t1163, t1123 * t783 + t1125 * t860 + pkin(5) * (t1125 * t929 + t1281), t1123 * t785 + t1125 * t811 + t1300, t1123 * t790 + t1125 * t814 + t1316, t1123 * t776 + t1125 * t778 + pkin(5) * (-t1123 * t843 + t1125 * t792); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1095, t1096, 0, 0, t1102, t1097, 0, t1104, 0, 0, t988, t987, t918, t927, t1288, t870, t1315, t1250, t881, t1253, t820, t823, t799, t796, t922, -t1315, -t881, t1288, t850, t1250, t787, t793, t795, t777, t1253, -t881, t1315, t1250, t858, t1288, t782, t784, t788, t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1127, 0, 0, -g(3), -t1095, 0, t1178, t1090, t1086, -t1178, t1087, 0, -t1193, -t1191, t944, qJ(2) * t944, t1287, t873, -t897, t1251, -t1321, t1252, t822, t829, t803, t798, t925, t897, t1321, t1287, t851, t1251, t789, t794, t797, t779, t1252, t1321, -t897, t1251, t859, t1287, t783, t785, t790, t776; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1127, 0, qJDD(1), 0, g(3), 0, -t1096, 0, t1098, t1092, -t1103, -t1098, -t1105, 0, t1039, t1040, 0, pkin(1) * t944, -t1196, t1031, -t1080, t1196, t1079, -qJDD(3), t835, t841, t846, t809, -qJDD(3), t978, -t976, -t1196, t1031, t1196, t840, t821, t824, t786, -qJDD(3), -t1079, -t978, t1196, -t1031, -t1196, t860, t811, t814, t778; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1095, t1096, 0, 0, t1102, t1097, 0, t1104, 0, 0, t988, t987, t918, t927, t1288, t870, t1315, t1250, t881, t1253, t820, t823, t799, t796, t922, -t1315, -t881, t1288, t850, t1250, t787, t793, t795, t777, t1253, -t881, t1315, t1250, t858, t1288, t782, t784, t788, t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1103, t1105, t1098, 0, t1107, 0, 0, -t1073, t1039, 0, t1279, t940, t1313, t1154, t955, t1159, t911, t914, t842, -pkin(6) * t856, t994, -t1313, -t955, t1279, t913, t1154, t817, t833, t834, t805, t1159, -t955, t1313, t1154, t920, t1279, t804, t810, t816, t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1103, -t1106, t1105, -t1098, 0, t1073, 0, t1040, 0, t1161, t937, t1312, t1160, t946, t1149, t878, t880, t836, t849, t1149, -t1312, -t946, t1161, t912, t1160, t812, t825, t828, t800, t1149, -t946, t1312, t1160, t919, t1161, t802, t808, t813, t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1098, -t1092, t1103, t1098, t1105, 0, -t1039, -t1040, 0, 0, t1196, -t1031, t1080, -t1196, -t1079, qJDD(3), t1155, t1171, t1246, t1247, qJDD(3), -t978, t976, t1196, -t1031, -t1196, t1170, t1140, t1110 + t1147, t1172, qJDD(3), t1079, t978, -t1196, t1031, t1196, t1150, t1110 + t1137, t1134 + t1245, t1153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1029, -t1026, t1290, t1069, t1056, -t1069, 0, -t1018, t916, 0, -t1069, -t1290, -t1056, t1029, -t977, t1069, t855, qJ(4) * t977, t852, qJ(4) * t861, -t1069, -t1056, t1290, t1069, t1026, t1029, t839, t831, t942, t815; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1197, t1028, t1261, -t1027, t1289, -t1197, t1018, 0, t917, 0, -t1197, -t1261, -t1289, t1197, t979, -t1027, t854, t853, pkin(3) * t979, pkin(3) * t861, -t1197, -t1289, t1261, -t1027, -t979, t1197, t832, t879, t830, t801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1196, -t1031, t1080, -t1196, -t1079, qJDD(3), -t916, -t917, 0, 0, qJDD(3), -t978, t976, t1196, -t1031, -t1196, t1219, t1144, t1110 + t1148, t1231, qJDD(3), t1079, t978, -t1196, t1031, t1196, t1162, t1110 + t1138, t1134, t1169; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t978, t976, t1196, -t1031, -t1196, 0, -t1145, t875, 0, qJDD(3), t1079, t978, -t1196, t1031, t1196, -t1228, t1110 + t1142, t1136, -t1233; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1069, t1290, t1056, -t1029, t977, -t1069, t1145, 0, -t861, 0, t1069, t1056, -t1290, -t1069, -t1026, -t1029, t1278, t1131 + t1270, t1238, -t1244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1197, t1261, t1289, -t1197, -t979, t1027, -t875, t861, 0, 0, t1197, t1289, -t1261, t1027, t979, -t1197, qJ(5) * t1260 + t1111 - t1143, -qJ(5) * t979 - t1239, t1131 - t1256, -qJ(5) * t843 - t1243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), t1079, t978, -t1196, t1031, t1196, 0, t848, -t845, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1197, t1289, -t1261, t1027, t979, -t1197, -t848, 0, -t843, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1069, -t1056, t1290, t1069, t1026, t1029, t845, t843, 0, 0;];
m_new_reg = t1;
