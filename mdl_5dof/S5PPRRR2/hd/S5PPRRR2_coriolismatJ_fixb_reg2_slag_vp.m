% Calculate inertial parameters regressor of coriolis matrix for
% S5PPRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d3,d4,d5,theta1,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:15
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5PPRRR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PPRRR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PPRRR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PPRRR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:14:56
% EndTime: 2019-12-05 15:14:59
% DurationCPUTime: 1.45s
% Computational Cost: add. (2328->96), mult. (5500->160), div. (0->0), fcn. (6339->8), ass. (0->90)
t180 = qJD(4) + qJD(5);
t160 = cos(qJ(4));
t223 = -pkin(7) - pkin(6);
t148 = t223 * t160;
t157 = sin(qJ(5));
t158 = sin(qJ(4));
t216 = cos(qJ(5));
t177 = t216 * t158;
t166 = -t148 * t157 - t177 * t223;
t156 = sin(pkin(9));
t159 = sin(qJ(3));
t201 = cos(pkin(9));
t217 = cos(qJ(3));
t142 = t156 * t159 - t201 * t217;
t176 = t216 * t160;
t199 = t157 * t158;
t162 = t176 / 0.2e1 - t199 / 0.2e1;
t227 = t176 - t199;
t49 = (-t227 / 0.2e1 + t162) * t142;
t192 = t49 * qJD(1);
t230 = t166 * t180 - t192;
t119 = -t148 * t216 + t199 * t223;
t229 = t180 * t119;
t228 = t180 * t227;
t198 = t157 * t160;
t146 = t177 + t198;
t153 = -pkin(4) * t160 - pkin(3);
t187 = qJD(3) * t153;
t163 = t198 / 0.2e1 + t177 / 0.2e1;
t48 = (-t146 / 0.2e1 + t163) * t142;
t193 = t48 * qJD(1);
t226 = -t146 * t187 + t193;
t214 = pkin(4) * t158;
t95 = t146 * t153 - t214 * t227;
t225 = -qJD(3) * t95 + t193;
t220 = t227 / 0.2e1;
t219 = t146 / 0.2e1;
t215 = pkin(4) * t157;
t206 = qJD(4) * pkin(4);
t143 = t156 * t217 + t159 * t201;
t200 = t142 * t143;
t101 = t142 * t158;
t89 = t142 * t146;
t91 = t142 * t227;
t32 = -t219 * t91 + t220 * t89;
t195 = t32 * qJD(1);
t154 = t158 ^ 2;
t155 = t160 ^ 2;
t188 = -t154 - t155;
t36 = (0.1e1 + t188) * t200;
t194 = t36 * qJD(1);
t86 = -t146 ^ 2 + t227 ^ 2;
t191 = t86 * qJD(3);
t96 = t146 * t214 + t153 * t227;
t189 = t96 * qJD(3);
t186 = qJD(3) * t160;
t185 = qJD(5) * t153;
t184 = t143 * qJD(3);
t149 = t155 - t154;
t183 = t149 * qJD(3);
t182 = t158 * qJD(4);
t181 = t160 * qJD(4);
t179 = pkin(3) * t158 * qJD(3);
t178 = pkin(3) * t186;
t175 = t146 * t227 * qJD(3);
t174 = t227 * t187;
t172 = t158 * t181;
t169 = t216 * qJD(4);
t168 = t216 * qJD(5);
t167 = t188 * t142;
t107 = t180 * t146;
t90 = t146 * t143;
t92 = t227 * t143;
t18 = -t89 * t90 - t91 * t92 + t200;
t165 = qJD(1) * t18 + qJD(2) * t32;
t164 = -t91 * t157 / 0.2e1 + t89 * t216 / 0.2e1;
t2 = (-t101 / 0.2e1 + t164) * pkin(4);
t31 = t153 * t214;
t161 = -t2 * qJD(1) + t31 * qJD(3);
t150 = t158 * t186;
t102 = t142 * t160;
t51 = (t163 + t219) * t142;
t50 = (t162 + t220) * t142;
t44 = t49 * qJD(3);
t42 = t48 * qJD(3);
t30 = t51 * qJD(3) - t180 * t92;
t29 = t50 * qJD(3) + t180 * t90;
t3 = (t101 / 0.2e1 + t164) * pkin(4);
t1 = t32 * qJD(3);
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t18 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t184, t142 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t101 - t160 * t184, qJD(4) * t102 + t158 * t184, qJD(3) * t167, t194 + (-t143 * pkin(3) + pkin(6) * t167) * qJD(3), 0, 0, 0, 0, 0, 0, t180 * t51 - t184 * t227, t146 * t184 + t180 * t50, (-t146 * t89 - t227 * t91) * qJD(3), (-t119 * t91 + t143 * t153 - t166 * t89) * qJD(3) + t3 * qJD(4) + t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t101 - t143 * t181, qJD(3) * t102 + t143 * t182, 0, 0, 0, 0, 0, 0, 0, 0, t30, t29, 0, t3 * qJD(3) + (-t157 * t90 - t216 * t92) * t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, t29, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t182, -t181, 0, 0, 0, 0, 0, 0, 0, 0, -t107, -t228, 0, (-t146 * t216 + t157 * t227) * t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107, -t228, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194, 0, 0, 0, 0, 0, 0, -t180 * t48, -t180 * t49, 0, -qJD(4) * t2 - t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, t149 * qJD(4), 0, -t172, 0, 0, -pkin(3) * t182, -pkin(3) * t181, 0, 0, t227 * t107, t180 * t86, 0, -t146 * t228, 0, 0, qJD(4) * t95 + t146 * t185, qJD(4) * t96 + t185 * t227, 0, t31 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, t183, t181, -t150, -t182, 0, -pkin(6) * t181 - t179, pkin(6) * t182 - t178, 0, 0, t175, t191, t228, -t175, -t107, 0, -t225 - t229, t189 + t230, (-t146 * t157 - t216 * t227) * t206, (-t119 * t216 - t157 * t166) * t206 + t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t175, t191, t228, -t175, -t107, 0, -t226 - t229, t174 + t230, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, t44, 0, t2 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150, -t183, 0, t150, 0, 0, t179, t178, 0, 0, -t175, -t191, 0, t175, 0, 0, t225, t192 - t189, 0, -t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t215, -pkin(4) * t168, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180 * t215, (-t169 - t168) * pkin(4), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, t44, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175, -t191, 0, t175, 0, 0, t226, t192 - t174, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157 * t206, pkin(4) * t169, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t4;
