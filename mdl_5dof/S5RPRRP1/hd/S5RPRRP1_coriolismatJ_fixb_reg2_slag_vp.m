% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:00
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RPRRP1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:00:04
% EndTime: 2019-12-05 18:00:10
% DurationCPUTime: 2.26s
% Computational Cost: add. (3088->185), mult. (5145->195), div. (0->0), fcn. (5442->4), ass. (0->134)
t190 = qJD(3) + qJD(4);
t156 = sin(qJ(3));
t157 = cos(qJ(4));
t158 = cos(qJ(3));
t231 = sin(qJ(4));
t143 = -t156 * t231 + t157 * t158;
t159 = -pkin(1) - pkin(6);
t244 = -pkin(7) + t159;
t145 = t244 * t156;
t146 = t244 * t158;
t239 = t145 * t231 - t146 * t157;
t71 = -qJ(5) * t143 - t239;
t253 = t190 * t71;
t228 = t157 * pkin(3);
t141 = t156 * t157 + t158 * t231;
t199 = t141 * qJD(4);
t151 = pkin(4) + t228;
t232 = -t151 / 0.2e1;
t167 = t228 / 0.2e1 + t232;
t230 = t141 * pkin(4);
t52 = t230 / 0.2e1 - t167 * t141;
t252 = pkin(4) * t199 + qJD(3) * t52;
t187 = t231 * pkin(3);
t171 = t143 * t187;
t251 = t52 * qJD(4) - (-t151 * t141 + t171) * qJD(3);
t242 = t190 * t143;
t250 = t141 * t242;
t138 = t157 * t145;
t182 = t231 * t146;
t100 = t182 + t138;
t243 = (pkin(4) / 0.2e1 + t167) * t141;
t249 = qJD(3) * t243;
t248 = qJD(4) * t243;
t246 = (-t141 * t228 + t171) * qJD(3);
t245 = t190 * t239;
t219 = t141 * qJ(5);
t73 = -t219 + t100;
t140 = t141 ^ 2;
t238 = t143 ^ 2;
t236 = t73 / 0.2e1;
t6 = (t236 - t73 / 0.2e1) * t143;
t235 = t6 * qJD(3);
t234 = t73 * pkin(4);
t233 = -t138 / 0.2e1;
t229 = t143 * pkin(4);
t227 = t158 * pkin(3);
t224 = qJD(3) * pkin(3);
t222 = t6 * qJD(1);
t149 = pkin(3) * t156 + qJ(2);
t114 = t149 + t230;
t89 = t114 * t143;
t20 = -t141 * t73 - t143 * t71;
t215 = t20 * qJD(1);
t115 = t227 + t229;
t30 = t115 * t141 + t89;
t214 = t30 * qJD(1);
t88 = t114 * t141;
t31 = t115 * t143 - t88;
t213 = t31 * qJD(1);
t32 = -t141 * t229 - t89;
t212 = t32 * qJD(1);
t33 = -pkin(4) * t238 + t88;
t211 = t33 * qJD(1);
t169 = -t141 * t231 / 0.2e1;
t43 = (t232 - pkin(4) / 0.2e1) * t143 + (t169 - t158 / 0.2e1) * pkin(3);
t210 = t43 * qJD(1);
t168 = -t140 / 0.2e1 - t238 / 0.2e1;
t45 = -0.1e1 / 0.2e1 + t168;
t209 = t45 * qJD(1);
t208 = t243 * qJD(1);
t207 = t73 * qJD(4);
t77 = t140 - t238;
t206 = t77 * qJD(1);
t83 = t141 * t227 + t143 * t149;
t205 = t83 * qJD(1);
t84 = -t141 * t149 + t143 * t227;
t204 = t84 * qJD(1);
t95 = t233 + t138 / 0.2e1;
t203 = t95 * qJD(1);
t102 = t140 + t238;
t202 = t102 * qJD(1);
t201 = t114 * qJD(1);
t200 = t141 * qJD(1);
t198 = t143 * qJD(1);
t197 = t143 * qJD(4);
t135 = t143 * qJD(5);
t147 = t156 ^ 2 - t158 ^ 2;
t196 = t147 * qJD(1);
t195 = t149 * qJD(1);
t194 = t156 * qJD(1);
t193 = t156 * qJD(3);
t192 = t158 * qJD(1);
t191 = t158 * qJD(3);
t186 = qJD(4) * t228;
t184 = pkin(4) * t198;
t181 = qJ(2) * t194;
t180 = qJ(2) * t192;
t179 = t141 * t198;
t178 = t141 * t195;
t177 = t143 * t195;
t176 = t156 * t191;
t174 = t231 * qJD(3);
t173 = t231 * qJD(4);
t170 = pkin(3) * t173;
t10 = t114 * t115;
t166 = qJD(1) * t10 + qJD(2) * t6;
t11 = pkin(4) * t89;
t165 = t11 * qJD(1);
t18 = t149 * t227;
t164 = t18 * qJD(1);
t119 = (-t151 * t231 + t157 * t187) * pkin(3);
t160 = t228 * t236 + t73 * t232;
t2 = t234 / 0.2e1 + t160;
t161 = qJD(1) * t2 + qJD(2) * t243 + qJD(3) * t119;
t61 = 0.2e1 * t233 - t182;
t155 = qJ(2) * qJD(2);
t154 = qJD(1) * qJ(2);
t148 = t156 * t192;
t133 = t143 * qJD(2);
t130 = t141 * qJD(2);
t129 = t141 * qJD(5);
t96 = t190 * t141;
t93 = t95 * qJD(3);
t92 = t95 * qJD(4);
t79 = pkin(3) * t174 - t203;
t78 = t157 * t224;
t63 = t203 + (-t174 - t173) * pkin(3);
t62 = t190 * t228;
t44 = 0.1e1 / 0.2e1 + t168;
t42 = pkin(3) * t169 + t143 * t232 + t227 / 0.2e1 + t229 / 0.2e1;
t35 = t61 + t219;
t27 = t190 * t77;
t1 = -t234 / 0.2e1 + t160;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t155, -t176, t147 * qJD(3), 0, t176, 0, 0, qJ(2) * t191 + qJD(2) * t156, -qJ(2) * t193 + qJD(2) * t158, 0, t155, -t250, t27, 0, t250, 0, 0, qJD(3) * t83 + t149 * t197 + t130, qJD(3) * t84 - t149 * t199 + t133, 0, qJD(2) * t149 + qJD(3) * t18, -t250, t27, 0, t250, 0, 0, qJD(3) * t30 - qJD(4) * t32 + t130, qJD(3) * t31 - qJD(4) * t33 + t133, t102 * qJD(5), qJD(2) * t114 + qJD(3) * t10 + qJD(4) * t11 + qJD(5) * t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t154, 0, 0, 0, 0, 0, 0, t194, t192, 0, t154, 0, 0, 0, 0, 0, 0, t200, t198, 0, t195, 0, 0, 0, 0, 0, 0, t200, t198, 0, qJD(5) * t44 + t201 + t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t148, t196, -t193, t148, -t191, 0, -t159 * t193 + t180, -t159 * t191 - t181, 0, 0, -t179, t206, -t96, t179, -t242, 0, -qJD(3) * t100 + qJD(4) * t61 + t205, t204 + t245, -t246, (-t100 * t157 - t231 * t239) * t224 + t164, -t179, t206, -t96, t179, -t242, 0, -qJD(3) * t73 + qJD(4) * t35 + t214, t213 - t253, t251, (-t73 * t151 + t187 * t71) * qJD(3) + t1 * qJD(4) + t42 * qJD(5) + t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t179, t206, -t96, t179, -t242, 0, qJD(3) * t61 - qJD(4) * t100 + t177, -t178 + t245, 0, 0, -t179, t206, -t96, t179, -t242, 0, qJD(3) * t35 - t207 - t212, -t211 - t253, t252, -pkin(4) * t207 + qJD(3) * t1 + t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t202, qJD(2) * t44 + qJD(3) * t42 + t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t154, 0, 0, 0, 0, 0, 0, -t194, -t192, 0, -t154, 0, 0, 0, 0, 0, 0, -t200, -t198, 0, -t195, 0, 0, 0, 0, 0, 0, -t200, -t198, 0, qJD(5) * t45 - t201 + t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t193, -t191, 0, 0, 0, 0, 0, 0, 0, 0, -t96, -t242, 0, t246, 0, 0, 0, 0, 0, 0, -t96, -t242, 0, t222 - t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t96, -t242, 0, 0, 0, 0, 0, 0, 0, 0, -t96, -t242, 0, -t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t148, -t196, 0, -t148, 0, 0, -t180, t181, 0, 0, t179, -t206, 0, -t179, 0, 0, t92 - t205, -t204, 0, -t164, t179, -t206, 0, -t179, 0, 0, -t135 + t92 - t214, t129 - t213, -t248, qJD(4) * t2 + qJD(5) * t43 - t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t222 + t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, -t186, 0, 0, 0, 0, 0, 0, 0, 0, -t170, -t186, 0, t119 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63, -t62, 0, 0, 0, 0, 0, 0, 0, 0, t63, -t62, -t208, -pkin(4) * t170 + t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198, t200, 0, t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, -t206, 0, -t179, 0, 0, -t93 - t177, t178, 0, 0, t179, -t206, 0, -t179, 0, 0, -t135 - t93 + t212, t129 + t211, t249, -pkin(4) * t135 - qJD(3) * t2 - t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, t78, 0, 0, 0, 0, 0, 0, 0, 0, t79, t78, t208, -t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198, t200, 0, -t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, -t96, -t202, pkin(4) * t197 - qJD(2) * t45 - qJD(3) * t43 - t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, -t200, 0, -t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, -t200, 0, t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
