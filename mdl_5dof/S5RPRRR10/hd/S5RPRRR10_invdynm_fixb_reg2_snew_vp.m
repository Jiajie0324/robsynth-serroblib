% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRRR10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:11
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRRR10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR10_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR10_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR10_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR10_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:11:16
% EndTime: 2019-12-31 19:11:33
% DurationCPUTime: 18.05s
% Computational Cost: add. (135234->703), mult. (321945->990), div. (0->0), fcn. (242649->10), ass. (0->483)
t1245 = sin(qJ(5));
t1242 = sin(pkin(9));
t1243 = cos(pkin(9));
t1247 = sin(qJ(3));
t1251 = cos(qJ(3));
t1276 = t1242 * t1251 + t1243 * t1247;
t1216 = t1276 * qJD(1);
t1246 = sin(qJ(4));
t1250 = cos(qJ(4));
t1194 = -t1250 * qJD(3) + t1246 * t1216;
t1195 = t1246 * qJD(3) + t1250 * t1216;
t1249 = cos(qJ(5));
t1152 = t1249 * t1194 + t1245 * t1195;
t1154 = -t1245 * t1194 + t1249 * t1195;
t1098 = t1154 * t1152;
t1233 = t1242 * qJDD(1);
t1235 = t1243 * qJDD(1);
t1212 = t1247 * t1233 - t1251 * t1235;
t1320 = t1216 * qJD(3);
t1181 = -t1212 - t1320;
t1173 = qJDD(4) - t1181;
t1172 = qJDD(5) + t1173;
t1351 = -t1098 + t1172;
t1357 = t1245 * t1351;
t1158 = t1195 * t1194;
t1349 = -t1158 + t1173;
t1356 = t1246 * t1349;
t1214 = (t1242 * t1247 - t1243 * t1251) * qJD(1);
t1186 = t1216 * t1214;
t1347 = qJDD(3) - t1186;
t1355 = t1247 * t1347;
t1354 = t1249 * t1351;
t1353 = t1250 * t1349;
t1352 = t1251 * t1347;
t1253 = qJD(1) ^ 2;
t1248 = sin(qJ(1));
t1252 = cos(qJ(1));
t1226 = t1248 * g(1) - t1252 * g(2);
t1278 = -qJDD(2) + t1226;
t1299 = pkin(2) * t1243 + pkin(1);
t1239 = t1242 ^ 2;
t1240 = t1243 ^ 2;
t1302 = t1239 + t1240;
t1176 = t1299 * qJDD(1) + (t1302 * pkin(6) + qJ(2)) * t1253 + t1278;
t1236 = t1240 * t1253;
t1227 = t1252 * g(1) + t1248 * g(2);
t1262 = -0.2e1 * qJD(2) * qJD(1) + t1227;
t1258 = -t1253 * pkin(1) - t1262;
t1335 = t1242 * g(3);
t1348 = (qJ(2) + pkin(6)) * qJDD(1);
t1167 = -pkin(2) * t1236 - t1335 + (t1258 + t1348) * t1243;
t1334 = t1243 * g(3);
t1256 = -t1334 + (t1299 * t1253 + t1262 - t1348) * t1242;
t1109 = t1251 * t1167 + t1247 * t1256;
t1174 = t1214 * pkin(3) - t1216 * pkin(7);
t1343 = qJD(3) ^ 2;
t1064 = -t1343 * pkin(3) + qJDD(3) * pkin(7) - t1214 * t1174 + t1109;
t1205 = t1214 * qJD(3);
t1213 = t1276 * qJDD(1);
t1183 = -t1205 + t1213;
t1071 = (-t1183 + t1205) * pkin(7) + (-t1181 + t1320) * pkin(3) - t1176;
t992 = t1246 * t1064 - t1250 * t1071;
t993 = t1250 * t1064 + t1246 * t1071;
t931 = t1246 * t992 + t1250 * t993;
t1274 = -t1246 * qJDD(3) - t1250 * t1183;
t1134 = -t1194 * qJD(4) - t1274;
t1275 = t1250 * qJDD(3) - t1246 * t1183;
t1260 = t1195 * qJD(4) - t1275;
t1036 = -t1152 * qJD(5) + t1249 * t1134 - t1245 * t1260;
t1207 = qJD(4) + t1214;
t1202 = qJD(5) + t1207;
t1129 = t1202 * t1152;
t1350 = -t1129 + t1036;
t1168 = t1207 * t1194;
t1103 = t1134 + t1168;
t1345 = t1253 * t1302;
t1287 = t1245 * t1134 + t1249 * t1260;
t1006 = (qJD(5) - t1202) * t1154 + t1287;
t1150 = t1152 ^ 2;
t1151 = t1154 ^ 2;
t1342 = t1194 ^ 2;
t1193 = t1195 ^ 2;
t1201 = t1202 ^ 2;
t1206 = t1207 ^ 2;
t1210 = t1214 ^ 2;
t1211 = t1216 ^ 2;
t960 = pkin(4) * t1349 - t1103 * pkin(8) - t992;
t1162 = t1207 * pkin(4) - t1195 * pkin(8);
t967 = -t1342 * pkin(4) - pkin(8) * t1260 - t1207 * t1162 + t993;
t898 = t1245 * t967 - t1249 * t960;
t899 = t1245 * t960 + t1249 * t967;
t860 = t1245 * t899 - t1249 * t898;
t1341 = pkin(4) * t860;
t1009 = t1129 + t1036;
t947 = -t1006 * t1245 - t1249 * t1009;
t1340 = pkin(4) * t947;
t1108 = t1247 * t1167 - t1251 * t1256;
t1037 = -t1251 * t1108 + t1247 * t1109;
t1338 = pkin(2) * t1037;
t1124 = -t1212 * t1247 - t1251 * t1213;
t1337 = pkin(2) * t1124;
t1336 = pkin(3) * t1247;
t1333 = qJDD(1) * pkin(1);
t1063 = -qJDD(3) * pkin(3) - t1343 * pkin(7) + t1216 * t1174 + t1108;
t985 = pkin(4) * t1260 - t1342 * pkin(8) + t1195 * t1162 + t1063;
t1332 = t1245 * t985;
t1331 = t1246 * t860;
t1330 = t1249 * t985;
t1329 = t1250 * t860;
t1328 = -pkin(3) * t1063 + pkin(7) * t931;
t1327 = t1202 * t1154;
t1326 = t1202 * t1245;
t1325 = t1202 * t1249;
t1324 = t1207 * t1246;
t1323 = t1207 * t1250;
t1322 = t1214 * t1247;
t1321 = t1214 * t1251;
t1319 = t1216 * t1247;
t1318 = t1216 * t1251;
t1317 = t1239 * t1253;
t1316 = t1242 * t1037;
t1315 = t1242 * t1243;
t1314 = t1243 * t1037;
t1067 = t1098 + t1172;
t1313 = t1245 * t1067;
t1056 = t1246 * t1063;
t1117 = t1158 + t1173;
t1312 = t1246 * t1117;
t1311 = t1247 * t1176;
t1178 = qJDD(3) + t1186;
t1310 = t1247 * t1178;
t1208 = t1253 * qJ(2) + t1278 + t1333;
t1309 = t1248 * t1208;
t1308 = t1249 * t1067;
t1057 = t1250 * t1063;
t1307 = t1250 * t1117;
t1306 = t1251 * t1176;
t1305 = t1251 * t1178;
t1304 = t1252 * t1208;
t1301 = t1248 * qJDD(1);
t1300 = t1252 * qJDD(1);
t1298 = -pkin(3) * t1251 - pkin(2);
t1297 = t1247 * t1098;
t1296 = t1247 * t1158;
t1295 = t1248 * t1186;
t1294 = t1251 * t1098;
t1293 = t1251 * t1158;
t1292 = t1252 * t1186;
t1145 = -t1193 - t1206;
t1062 = -t1246 * t1145 - t1307;
t1104 = (qJD(4) + t1207) * t1194 + t1274;
t1291 = pkin(3) * t1104 + pkin(7) * t1062 + t1056;
t1138 = -t1206 - t1342;
t1049 = t1250 * t1138 - t1356;
t1169 = t1207 * t1195;
t1100 = -t1169 - t1260;
t1290 = pkin(3) * t1100 + pkin(7) * t1049 - t1057;
t1289 = t1242 * t1235;
t1288 = t1208 + t1333;
t861 = t1245 * t898 + t1249 * t899;
t1038 = t1247 * t1108 + t1251 * t1109;
t1257 = qJDD(1) * qJ(2) + t1258;
t1187 = t1242 * t1257 + t1334;
t1188 = t1243 * t1257 - t1335;
t1137 = t1242 * t1187 + t1243 * t1188;
t1286 = -t1248 * t1226 - t1252 * t1227;
t1044 = -t1150 - t1151;
t949 = -t1006 * t1249 + t1245 * t1009;
t847 = -pkin(4) * t1044 + pkin(8) * t949 + t861;
t854 = -pkin(8) * t947 - t860;
t894 = -t1246 * t947 + t1250 * t949;
t1285 = -pkin(3) * t1044 + pkin(7) * t894 + t1246 * t854 + t1250 * t847;
t1005 = (qJD(5) + t1202) * t1154 + t1287;
t1079 = -t1201 - t1150;
t995 = t1249 * t1079 - t1357;
t901 = -pkin(4) * t1005 + pkin(8) * t995 - t1330;
t994 = t1245 * t1079 + t1354;
t928 = -pkin(8) * t994 + t1332;
t935 = -t1246 * t994 + t1250 * t995;
t1284 = -pkin(3) * t1005 + pkin(7) * t935 + t1246 * t928 + t1250 * t901;
t1107 = -t1151 - t1201;
t1023 = -t1245 * t1107 - t1308;
t906 = -pkin(4) * t1350 + pkin(8) * t1023 + t1332;
t1022 = t1249 * t1107 - t1313;
t943 = -pkin(8) * t1022 + t1330;
t958 = -t1246 * t1022 + t1250 * t1023;
t1283 = -pkin(3) * t1350 + pkin(7) * t958 + t1246 * t943 + t1250 * t906;
t1101 = (-qJD(4) + t1207) * t1195 + t1275;
t1034 = t1250 * t1101 + t1246 * t1103;
t1128 = t1193 + t1342;
t1282 = pkin(3) * t1128 + pkin(7) * t1034 + t931;
t912 = -t1251 * t1063 + t1247 * t931;
t1281 = pkin(2) * t912 + t1328;
t1200 = -t1211 - t1343;
t1141 = t1251 * t1200 - t1310;
t1280 = pkin(2) * t1141 - t1109;
t1225 = -t1248 * t1253 + t1300;
t1279 = -pkin(5) * t1225 - t1248 * g(3);
t930 = t1246 * t993 - t1250 * t992;
t1136 = t1243 * t1187 - t1242 * t1188;
t1277 = t1252 * t1226 - t1248 * t1227;
t1224 = t1252 * t1253 + t1301;
t1011 = t1247 * t1049 + t1251 * t1100;
t1273 = pkin(2) * t1011 + t1290;
t1016 = t1247 * t1062 + t1251 * t1104;
t1272 = pkin(2) * t1016 + t1291;
t1271 = pkin(4) * t994 - t898;
t1175 = -t1210 - t1343;
t1119 = t1247 * t1175 + t1352;
t1270 = pkin(2) * t1119 - t1108;
t838 = t1250 * t861 - t1331;
t856 = -pkin(4) * t985 + pkin(8) * t861;
t1269 = -pkin(3) * t985 + pkin(7) * t838 - pkin(8) * t1331 + t1250 * t856;
t903 = -t1251 * t1005 + t1247 * t935;
t1268 = pkin(2) * t903 + t1284;
t910 = t1247 * t958 - t1251 * t1350;
t1267 = pkin(2) * t910 + t1283;
t882 = -t1251 * t1044 + t1247 * t894;
t1266 = pkin(2) * t882 + t1285;
t987 = t1247 * t1034 + t1251 * t1128;
t1265 = pkin(2) * t987 + t1282;
t1218 = t1243 * t1345;
t1264 = -t1248 * t1218 + t1243 * t1300;
t1263 = t1252 * t1218 + t1243 * t1301;
t1261 = pkin(4) * t1022 - t899;
t834 = t1247 * t838 - t1251 * t985;
t1259 = pkin(2) * t834 + t1269;
t1234 = t1240 * qJDD(1);
t1232 = t1239 * qJDD(1);
t1229 = t1253 * t1315;
t1228 = 0.2e1 * t1289;
t1223 = -t1236 + t1317;
t1222 = t1236 + t1317;
t1221 = t1234 - t1232;
t1220 = t1234 + t1232;
t1217 = t1242 * t1345;
t1209 = -pkin(5) * t1224 + t1252 * g(3);
t1199 = -t1211 + t1343;
t1198 = t1210 - t1343;
t1197 = t1225 * t1315;
t1196 = t1224 * t1315;
t1192 = t1252 * t1217 + t1242 * t1301;
t1191 = t1248 * t1217 - t1242 * t1300;
t1185 = t1211 - t1210;
t1182 = -0.2e1 * t1205 + t1213;
t1180 = t1212 + 0.2e1 * t1320;
t1171 = (t1319 - t1321) * qJD(3);
t1170 = (-t1318 - t1322) * qJD(3);
t1166 = -qJ(2) * t1218 + t1288 * t1243;
t1165 = qJ(2) * t1217 - t1288 * t1242;
t1164 = -t1193 + t1206;
t1163 = -t1206 + t1342;
t1157 = -t1210 - t1211;
t1156 = t1193 - t1342;
t1149 = -qJD(3) * t1319 + t1251 * t1183;
t1148 = qJD(3) * t1318 + t1247 * t1183;
t1147 = qJD(3) * t1321 - t1247 * t1181;
t1146 = qJD(3) * t1322 + t1251 * t1181;
t1144 = -t1247 * t1200 - t1305;
t1143 = -t1247 * t1199 + t1352;
t1142 = t1251 * t1198 - t1310;
t1140 = t1251 * t1199 + t1355;
t1139 = t1247 * t1198 + t1305;
t1127 = -t1251 * t1180 - t1247 * t1182;
t1126 = -t1212 * t1251 + t1247 * t1213;
t1125 = -t1247 * t1180 + t1251 * t1182;
t1123 = -t1151 + t1201;
t1122 = t1150 - t1201;
t1120 = t1251 * t1175 - t1355;
t1115 = pkin(1) * t1208 + qJ(2) * t1137;
t1114 = (-t1194 * t1250 + t1195 * t1246) * t1207;
t1113 = (-t1194 * t1246 - t1195 * t1250) * t1207;
t1112 = -t1242 * t1170 + t1243 * t1171;
t1111 = t1243 * t1170 + t1242 * t1171;
t1110 = pkin(1) * t1222 + qJ(2) * t1220 + t1137;
t1105 = -pkin(6) * t1141 - t1306;
t1102 = t1134 - t1168;
t1099 = -t1169 + t1260;
t1095 = t1151 - t1150;
t1094 = -pkin(6) * t1119 - t1311;
t1093 = t1250 * t1134 - t1195 * t1324;
t1092 = t1246 * t1134 + t1195 * t1323;
t1091 = t1194 * t1323 + t1246 * t1260;
t1090 = -t1194 * t1324 + t1250 * t1260;
t1089 = -t1242 * t1148 + t1243 * t1149;
t1088 = -t1242 * t1146 + t1243 * t1147;
t1087 = t1243 * t1148 + t1242 * t1149;
t1086 = t1243 * t1146 + t1242 * t1147;
t1085 = -t1242 * t1141 + t1243 * t1144;
t1084 = -t1242 * t1140 + t1243 * t1143;
t1083 = -t1242 * t1139 + t1243 * t1142;
t1082 = t1243 * t1141 + t1242 * t1144;
t1081 = t1243 * t1140 + t1242 * t1143;
t1080 = t1243 * t1139 + t1242 * t1142;
t1078 = t1251 * t1114 + t1247 * t1173;
t1077 = t1247 * t1114 - t1251 * t1173;
t1076 = t1250 * t1163 - t1312;
t1075 = -t1246 * t1164 + t1353;
t1074 = t1246 * t1163 + t1307;
t1073 = t1250 * t1164 + t1356;
t1072 = -pkin(2) * t1182 + pkin(6) * t1144 - t1311;
t1065 = -pkin(2) * t1180 + pkin(6) * t1120 + t1306;
t1061 = t1250 * t1145 - t1312;
t1055 = (-t1152 * t1249 + t1154 * t1245) * t1202;
t1054 = (-t1152 * t1245 - t1154 * t1249) * t1202;
t1053 = -t1242 * t1125 + t1243 * t1127;
t1052 = -t1242 * t1124 + t1243 * t1126;
t1051 = t1243 * t1125 + t1242 * t1127;
t1050 = t1243 * t1124 + t1242 * t1126;
t1048 = t1246 * t1138 + t1353;
t1047 = -t1242 * t1119 + t1243 * t1120;
t1046 = t1243 * t1119 + t1242 * t1120;
t1042 = t1251 * t1093 + t1296;
t1041 = t1251 * t1091 - t1296;
t1040 = t1247 * t1093 - t1293;
t1039 = t1247 * t1091 + t1293;
t1035 = -t1154 * qJD(5) - t1287;
t1033 = t1250 * t1100 - t1246 * t1102;
t1032 = t1246 * t1101 - t1250 * t1103;
t1031 = t1246 * t1100 + t1250 * t1102;
t1029 = t1249 * t1122 - t1313;
t1028 = -t1245 * t1123 + t1354;
t1027 = t1245 * t1122 + t1308;
t1026 = t1249 * t1123 + t1357;
t1025 = pkin(2) * t1176 + pkin(6) * t1038;
t1024 = -pkin(1) * t1050 - t1337;
t1021 = t1251 * t1076 - t1247 * t1099;
t1020 = t1251 * t1075 + t1247 * t1103;
t1019 = t1247 * t1076 + t1251 * t1099;
t1018 = t1247 * t1075 - t1251 * t1103;
t1017 = t1251 * t1062 - t1247 * t1104;
t1015 = -pkin(6) * t1124 - t1037;
t1014 = -t1242 * t1077 + t1243 * t1078;
t1013 = t1243 * t1077 + t1242 * t1078;
t1012 = t1251 * t1049 - t1247 * t1100;
t1002 = t1249 * t1036 - t1154 * t1326;
t1001 = t1245 * t1036 + t1154 * t1325;
t1000 = -t1245 * t1035 + t1152 * t1325;
t999 = t1249 * t1035 + t1152 * t1326;
t998 = t1251 * t1033 + t1247 * t1156;
t997 = t1247 * t1033 - t1251 * t1156;
t996 = -pkin(1) * t1082 - t1280;
t989 = -pkin(7) * t1061 + t1057;
t988 = t1251 * t1034 - t1247 * t1128;
t986 = -pkin(7) * t1048 + t1056;
t984 = -t1246 * t1054 + t1250 * t1055;
t983 = t1250 * t1054 + t1246 * t1055;
t981 = -pkin(2) * t1157 + pkin(6) * t1126 + t1038;
t980 = -pkin(1) * t1046 - t1270;
t979 = -t1242 * t1040 + t1243 * t1042;
t978 = -t1242 * t1039 + t1243 * t1041;
t977 = t1243 * t1040 + t1242 * t1042;
t976 = t1243 * t1039 + t1242 * t1041;
t975 = t1247 * t1172 + t1251 * t984;
t974 = -t1251 * t1172 + t1247 * t984;
t973 = -qJ(2) * t1082 - t1242 * t1072 + t1243 * t1105;
t972 = t1243 * t1038 - t1316;
t971 = t1242 * t1038 + t1314;
t970 = -pkin(1) * t1182 + qJ(2) * t1085 + t1243 * t1072 + t1242 * t1105;
t969 = -qJ(2) * t1046 - t1242 * t1065 + t1243 * t1094;
t968 = -pkin(3) * t1061 + t993;
t966 = -pkin(3) * t1048 + t992;
t965 = -t1246 * t1027 + t1250 * t1029;
t964 = -t1246 * t1026 + t1250 * t1028;
t963 = t1250 * t1027 + t1246 * t1029;
t962 = t1250 * t1026 + t1246 * t1028;
t961 = -pkin(1) * t1180 + qJ(2) * t1047 + t1243 * t1065 + t1242 * t1094;
t957 = t1250 * t1022 + t1246 * t1023;
t955 = -t1242 * t1019 + t1243 * t1021;
t954 = -t1242 * t1018 + t1243 * t1020;
t953 = t1243 * t1019 + t1242 * t1021;
t952 = t1243 * t1018 + t1242 * t1020;
t951 = -t1242 * t1016 + t1243 * t1017;
t950 = t1243 * t1016 + t1242 * t1017;
t948 = -t1249 * t1005 - t1245 * t1350;
t946 = -t1245 * t1005 + t1249 * t1350;
t945 = -t1242 * t1011 + t1243 * t1012;
t944 = t1243 * t1011 + t1242 * t1012;
t942 = -t1246 * t1001 + t1250 * t1002;
t941 = t1250 * t1000 - t1246 * t999;
t940 = t1250 * t1001 + t1246 * t1002;
t939 = t1246 * t1000 + t1250 * t999;
t937 = -t1242 * t997 + t1243 * t998;
t936 = t1242 * t998 + t1243 * t997;
t934 = t1246 * t995 + t1250 * t994;
t932 = -pkin(1) * t971 - t1338;
t926 = -t1242 * t987 + t1243 * t988;
t925 = t1242 * t988 + t1243 * t987;
t924 = t1251 * t942 + t1297;
t923 = t1251 * t941 - t1297;
t922 = t1247 * t942 - t1294;
t921 = t1247 * t941 + t1294;
t920 = -t1242 * t974 + t1243 * t975;
t919 = t1242 * t975 + t1243 * t974;
t918 = -t1247 * t1006 + t1251 * t965;
t917 = t1247 * t1009 + t1251 * t964;
t916 = t1251 * t1006 + t1247 * t965;
t915 = -t1251 * t1009 + t1247 * t964;
t914 = -qJ(2) * t1050 + t1243 * t1015 - t1242 * t981;
t913 = t1247 * t1063 + t1251 * t931;
t911 = t1247 * t1350 + t1251 * t958;
t909 = -pkin(1) * t1157 + qJ(2) * t1052 + t1242 * t1015 + t1243 * t981;
t908 = -pkin(6) * t1314 - qJ(2) * t971 - t1242 * t1025;
t907 = -pkin(7) * t1032 - t930;
t904 = t1247 * t1005 + t1251 * t935;
t902 = pkin(1) * t1176 - pkin(6) * t1316 + qJ(2) * t972 + t1243 * t1025;
t896 = -pkin(6) * t1016 - t1247 * t968 + t1251 * t989;
t895 = -pkin(6) * t1011 - t1247 * t966 + t1251 * t986;
t893 = -t1246 * t946 + t1250 * t948;
t892 = t1246 * t949 + t1250 * t947;
t891 = t1246 * t948 + t1250 * t946;
t889 = -pkin(2) * t1061 + pkin(6) * t1017 + t1247 * t989 + t1251 * t968;
t888 = -pkin(2) * t1048 + pkin(6) * t1012 + t1247 * t986 + t1251 * t966;
t887 = -pkin(1) * t950 - t1272;
t886 = t1247 * t1095 + t1251 * t893;
t885 = -t1251 * t1095 + t1247 * t893;
t884 = -pkin(1) * t944 - t1273;
t883 = t1247 * t1044 + t1251 * t894;
t881 = -pkin(6) * t987 + t1032 * t1336 + t1251 * t907;
t880 = -t1242 * t922 + t1243 * t924;
t879 = -t1242 * t921 + t1243 * t923;
t878 = t1242 * t924 + t1243 * t922;
t877 = t1242 * t923 + t1243 * t921;
t876 = -t1242 * t916 + t1243 * t918;
t875 = -t1242 * t915 + t1243 * t917;
t874 = t1242 * t918 + t1243 * t916;
t873 = t1242 * t917 + t1243 * t915;
t872 = -t1242 * t912 + t1243 * t913;
t871 = t1242 * t913 + t1243 * t912;
t870 = -t1242 * t910 + t1243 * t911;
t869 = t1242 * t911 + t1243 * t910;
t868 = pkin(6) * t988 + t1298 * t1032 + t1247 * t907;
t867 = -pkin(3) * t892 - t1340;
t866 = -pkin(3) * t957 - t1261;
t865 = -t1242 * t903 + t1243 * t904;
t864 = t1242 * t904 + t1243 * t903;
t863 = -pkin(3) * t934 - t1271;
t862 = -pkin(1) * t925 - t1265;
t859 = -pkin(7) * t957 - t1246 * t906 + t1250 * t943;
t858 = -pkin(6) * t912 + (-pkin(7) * t1251 + t1336) * t930;
t857 = -pkin(7) * t934 - t1246 * t901 + t1250 * t928;
t852 = -t1242 * t885 + t1243 * t886;
t851 = t1242 * t886 + t1243 * t885;
t850 = pkin(6) * t913 + (-pkin(7) * t1247 + t1298) * t930;
t849 = -t1242 * t882 + t1243 * t883;
t848 = t1242 * t883 + t1243 * t882;
t845 = -qJ(2) * t950 - t1242 * t889 + t1243 * t896;
t844 = -qJ(2) * t944 - t1242 * t888 + t1243 * t895;
t843 = -pkin(1) * t1061 + qJ(2) * t951 + t1242 * t896 + t1243 * t889;
t842 = -pkin(1) * t1048 + qJ(2) * t945 + t1242 * t895 + t1243 * t888;
t841 = -pkin(1) * t871 - t1281;
t840 = -qJ(2) * t925 - t1242 * t868 + t1243 * t881;
t839 = -pkin(1) * t1032 + qJ(2) * t926 + t1242 * t881 + t1243 * t868;
t837 = t1246 * t861 + t1329;
t835 = t1247 * t985 + t1251 * t838;
t833 = -pkin(6) * t910 - t1247 * t866 + t1251 * t859;
t832 = -pkin(1) * t869 - t1267;
t831 = -pkin(6) * t903 - t1247 * t863 + t1251 * t857;
t830 = -pkin(1) * t864 - t1268;
t829 = -pkin(2) * t957 + pkin(6) * t911 + t1247 * t859 + t1251 * t866;
t828 = -pkin(2) * t934 + pkin(6) * t904 + t1247 * t857 + t1251 * t863;
t827 = -pkin(3) * t837 - t1341;
t826 = -qJ(2) * t871 - t1242 * t850 + t1243 * t858;
t825 = -pkin(7) * t892 - t1246 * t847 + t1250 * t854;
t824 = -pkin(1) * t930 + qJ(2) * t872 + t1242 * t858 + t1243 * t850;
t823 = -pkin(7) * t837 - pkin(8) * t1329 - t1246 * t856;
t822 = -t1242 * t834 + t1243 * t835;
t821 = t1242 * t835 + t1243 * t834;
t820 = -pkin(6) * t882 - t1247 * t867 + t1251 * t825;
t819 = -pkin(1) * t848 - t1266;
t818 = -pkin(2) * t892 + pkin(6) * t883 + t1247 * t825 + t1251 * t867;
t817 = -qJ(2) * t869 - t1242 * t829 + t1243 * t833;
t816 = -pkin(1) * t957 + qJ(2) * t870 + t1242 * t833 + t1243 * t829;
t815 = -qJ(2) * t864 - t1242 * t828 + t1243 * t831;
t814 = -pkin(1) * t934 + qJ(2) * t865 + t1242 * t831 + t1243 * t828;
t813 = -pkin(6) * t834 - t1247 * t827 + t1251 * t823;
t812 = -pkin(1) * t821 - t1259;
t811 = -pkin(2) * t837 + pkin(6) * t835 + t1247 * t823 + t1251 * t827;
t810 = -qJ(2) * t848 - t1242 * t818 + t1243 * t820;
t809 = -pkin(1) * t892 + qJ(2) * t849 + t1242 * t820 + t1243 * t818;
t808 = -qJ(2) * t821 - t1242 * t811 + t1243 * t813;
t807 = -pkin(1) * t837 + qJ(2) * t822 + t1242 * t813 + t1243 * t811;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1225, 0, -t1224, 0, t1279, -t1209, -t1277, -pkin(5) * t1277, t1197, t1252 * t1221 + t1248 * t1223, t1192, -t1197, t1263, 0, -pkin(5) * t1264 - t1248 * t1187 - t1242 * t1304, -pkin(5) * t1191 - t1248 * t1188 - t1243 * t1304, t1252 * t1136 - pkin(5) * (t1248 * t1220 + t1252 * t1222), -pkin(5) * (t1248 * t1137 + t1304) - (t1248 * pkin(1) - t1252 * qJ(2)) * t1136, t1252 * t1089 + t1295, t1252 * t1053 + t1248 * t1185, t1252 * t1084 + t1248 * t1213, t1252 * t1088 - t1295, t1252 * t1083 - t1248 * t1212, t1248 * qJDD(3) + t1252 * t1112, t1252 * t969 - t1248 * t980 - pkin(5) * (t1248 * t1047 - t1252 * t1180), t1252 * t973 - t1248 * t996 - pkin(5) * (t1248 * t1085 - t1252 * t1182), t1252 * t914 - t1248 * t1024 - pkin(5) * (t1248 * t1052 - t1252 * t1157), t1252 * t908 - t1248 * t932 - pkin(5) * (t1252 * t1176 + t1248 * t972), t1248 * t1092 + t1252 * t979, t1248 * t1031 + t1252 * t937, t1248 * t1073 + t1252 * t954, -t1248 * t1090 + t1252 * t978, t1248 * t1074 + t1252 * t955, t1252 * t1014 + t1248 * t1113, t1252 * t844 - t1248 * t884 - pkin(5) * (-t1252 * t1048 + t1248 * t945), t1252 * t845 - t1248 * t887 - pkin(5) * (-t1252 * t1061 + t1248 * t951), t1252 * t840 - t1248 * t862 - pkin(5) * (-t1252 * t1032 + t1248 * t926), t1252 * t826 - t1248 * t841 - pkin(5) * (t1248 * t872 - t1252 * t930), t1248 * t940 + t1252 * t880, t1248 * t891 + t1252 * t852, t1248 * t962 + t1252 * t875, t1248 * t939 + t1252 * t879, t1248 * t963 + t1252 * t876, t1248 * t983 + t1252 * t920, t1252 * t815 - t1248 * t830 - pkin(5) * (t1248 * t865 - t1252 * t934), t1252 * t817 - t1248 * t832 - pkin(5) * (t1248 * t870 - t1252 * t957), t1252 * t810 - t1248 * t819 - pkin(5) * (t1248 * t849 - t1252 * t892), t1252 * t808 - t1248 * t812 - pkin(5) * (t1248 * t822 - t1252 * t837); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1224, 0, t1225, 0, t1209, t1279, t1286, pkin(5) * t1286, t1196, t1248 * t1221 - t1252 * t1223, t1191, -t1196, -t1264, 0, -pkin(5) * t1263 + t1252 * t1187 - t1242 * t1309, pkin(5) * t1192 + t1252 * t1188 - t1243 * t1309, t1248 * t1136 + pkin(5) * (t1252 * t1220 - t1248 * t1222), pkin(5) * (t1252 * t1137 - t1309) - (-t1252 * pkin(1) - t1248 * qJ(2)) * t1136, t1248 * t1089 - t1292, t1248 * t1053 - t1252 * t1185, t1248 * t1084 - t1252 * t1213, t1248 * t1088 + t1292, t1248 * t1083 + t1252 * t1212, -t1252 * qJDD(3) + t1248 * t1112, t1248 * t969 + t1252 * t980 + pkin(5) * (t1252 * t1047 + t1248 * t1180), t1248 * t973 + t1252 * t996 + pkin(5) * (t1252 * t1085 + t1248 * t1182), t1248 * t914 + t1252 * t1024 + pkin(5) * (t1252 * t1052 + t1248 * t1157), t1248 * t908 + t1252 * t932 + pkin(5) * (-t1248 * t1176 + t1252 * t972), -t1252 * t1092 + t1248 * t979, -t1252 * t1031 + t1248 * t937, -t1252 * t1073 + t1248 * t954, t1252 * t1090 + t1248 * t978, -t1252 * t1074 + t1248 * t955, t1248 * t1014 - t1252 * t1113, t1248 * t844 + t1252 * t884 + pkin(5) * (t1248 * t1048 + t1252 * t945), t1248 * t845 + t1252 * t887 + pkin(5) * (t1248 * t1061 + t1252 * t951), t1248 * t840 + t1252 * t862 + pkin(5) * (t1248 * t1032 + t1252 * t926), t1248 * t826 + t1252 * t841 + pkin(5) * (t1248 * t930 + t1252 * t872), t1248 * t880 - t1252 * t940, t1248 * t852 - t1252 * t891, t1248 * t875 - t1252 * t962, t1248 * t879 - t1252 * t939, t1248 * t876 - t1252 * t963, t1248 * t920 - t1252 * t983, t1248 * t815 + t1252 * t830 + pkin(5) * (t1248 * t934 + t1252 * t865), t1248 * t817 + t1252 * t832 + pkin(5) * (t1248 * t957 + t1252 * t870), t1248 * t810 + t1252 * t819 + pkin(5) * (t1248 * t892 + t1252 * t849), t1248 * t808 + t1252 * t812 + pkin(5) * (t1248 * t837 + t1252 * t822); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1226, t1227, 0, 0, t1232, t1228, 0, t1234, 0, 0, t1166, t1165, t1110, t1115, t1087, t1051, t1081, t1086, t1080, t1111, t961, t970, t909, t902, t977, t936, t952, t976, t953, t1013, t842, t843, t839, t824, t878, t851, t873, t877, t874, t919, t814, t816, t809, t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1253, 0, 0, -g(3), -t1226, 0, t1289, t1221, t1217, -t1289, t1218, 0, -t1242 * t1208, -t1243 * t1208, t1136, qJ(2) * t1136, t1089, t1053, t1084, t1088, t1083, t1112, t969, t973, t914, t908, t979, t937, t954, t978, t955, t1014, t844, t845, t840, t826, t880, t852, t875, t879, t876, t920, t815, t817, t810, t808; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1253, 0, qJDD(1), 0, g(3), 0, -t1227, 0, t1229, -t1223, -t1233, -t1229, -t1235, 0, t1187, t1188, 0, pkin(1) * t1136, -t1186, -t1185, -t1213, t1186, t1212, -qJDD(3), t980, t996, t1024, t932, -t1092, -t1031, -t1073, t1090, -t1074, -t1113, t884, t887, t862, t841, -t940, -t891, -t962, -t939, -t963, -t983, t830, t832, t819, t812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1226, t1227, 0, 0, t1232, t1228, 0, t1234, 0, 0, t1166, t1165, t1110, t1115, t1087, t1051, t1081, t1086, t1080, t1111, t961, t970, t909, t902, t977, t936, t952, t976, t953, t1013, t842, t843, t839, t824, t878, t851, t873, t877, t874, t919, t814, t816, t809, t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1233, t1235, t1229, 0, t1236, 0, 0, -t1208, t1187, 0, t1149, t1127, t1143, t1147, t1142, t1171, t1094, t1105, t1015, -pkin(6) * t1037, t1042, t998, t1020, t1041, t1021, t1078, t895, t896, t881, t858, t924, t886, t917, t923, t918, t975, t831, t833, t820, t813; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1233, -t1317, t1235, -t1229, 0, t1208, 0, t1188, 0, t1148, t1125, t1140, t1146, t1139, t1170, t1065, t1072, t981, t1025, t1040, t997, t1018, t1039, t1019, t1077, t888, t889, t868, t850, t922, t885, t915, t921, t916, t974, t828, t829, t818, t811; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1229, t1223, t1233, t1229, t1235, 0, -t1187, -t1188, 0, 0, t1186, t1185, t1213, -t1186, -t1212, qJDD(3), t1270, t1280, t1337, t1338, t1092, t1031, t1073, -t1090, t1074, t1113, t1273, t1272, t1265, t1281, t940, t891, t962, t939, t963, t983, t1268, t1267, t1266, t1259; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1183, -t1180, t1347, t1205, t1198, -t1205, 0, -t1176, t1108, 0, t1093, t1033, t1075, t1091, t1076, t1114, t986, t989, t907, -pkin(7) * t930, t942, t893, t964, t941, t965, t984, t857, t859, t825, t823; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1320, t1182, t1199, t1181, t1178, -t1320, t1176, 0, t1109, 0, -t1158, -t1156, -t1103, t1158, t1099, -t1173, t966, t968, -pkin(3) * t1032, -pkin(3) * t930, -t1098, -t1095, -t1009, t1098, t1006, -t1172, t863, t866, t867, t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1186, t1185, t1213, -t1186, -t1212, qJDD(3), -t1108, -t1109, 0, 0, t1092, t1031, t1073, -t1090, t1074, t1113, t1290, t1291, t1282, t1328, t940, t891, t962, t939, t963, t983, t1284, t1283, t1285, t1269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1134, t1100, t1349, t1168, t1163, -t1168, 0, t1063, t992, 0, t1002, t948, t1028, t1000, t1029, t1055, t928, t943, t854, -pkin(8) * t860; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1169, t1102, t1164, -t1260, t1117, -t1169, -t1063, 0, t993, 0, t1001, t946, t1026, t999, t1027, t1054, t901, t906, t847, t856; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1158, t1156, t1103, -t1158, -t1099, t1173, -t992, -t993, 0, 0, t1098, t1095, t1009, -t1098, -t1006, t1172, t1271, t1261, t1340, t1341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1036, -t1005, t1351, t1129, t1122, -t1129, 0, t985, t898, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1327, t1350, t1123, t1035, t1067, -t1327, -t985, 0, t899, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1098, t1095, t1009, -t1098, -t1006, t1172, -t898, -t899, 0, 0;];
m_new_reg = t1;
