% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5PRRRP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d4,theta1]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:40
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5PRRRP1_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRP1_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRP1_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRP1_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRP1_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRRP1_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:40:36
% EndTime: 2019-12-05 16:40:38
% DurationCPUTime: 1.77s
% Computational Cost: add. (3809->126), mult. (5891->175), div. (0->0), fcn. (3880->8), ass. (0->102)
t1015 = sin(pkin(8));
t1016 = cos(pkin(8));
t1019 = sin(qJ(2));
t1022 = cos(qJ(2));
t1011 = qJD(2) + qJD(3);
t1009 = t1011 ^ 2;
t1010 = qJDD(2) + qJDD(3);
t1018 = sin(qJ(3));
t1021 = cos(qJ(3));
t1027 = -t1021 * t1009 - t1018 * t1010;
t985 = t1018 * t1009 - t1021 * t1010;
t1040 = t1019 * t985 + t1022 * t1027;
t967 = -t1019 * t1027 + t1022 * t985;
t1044 = t1015 * t967 + t1016 * t1040;
t1043 = -t1015 * t1040 + t1016 * t967;
t996 = t1015 * g(1) - t1016 * g(2);
t997 = -t1016 * g(1) - t1015 * g(2);
t977 = -t1019 * t997 + t1022 * t996;
t1025 = qJDD(2) * pkin(2) + t977;
t1024 = qJD(2) ^ 2;
t978 = t1019 * t996 + t1022 * t997;
t972 = -t1024 * pkin(2) + t978;
t956 = t1018 * t1025 + t1021 * t972;
t1014 = -g(3) + qJDD(1);
t1017 = sin(qJ(4));
t1020 = cos(qJ(4));
t954 = -t1009 * pkin(3) + t1010 * pkin(7) + t956;
t949 = t1017 * t1014 + t1020 * t954;
t1037 = t1009 * t1020;
t1036 = t1011 * t1017;
t1013 = t1020 ^ 2;
t1035 = t1013 * t1009;
t1034 = t1017 * t1010;
t1033 = t1020 * t1010;
t1012 = t1017 ^ 2;
t1032 = t1012 + t1013;
t1031 = 0.2e1 * t1011 * t1020;
t1030 = qJD(4) * t1036;
t994 = t1022 * qJDD(2) - t1019 * t1024;
t995 = -t1019 * qJDD(2) - t1022 * t1024;
t1029 = -t1015 * t994 + t1016 * t995;
t955 = -t1018 * t972 + t1021 * t1025;
t1028 = t1015 * t995 + t1016 * t994;
t953 = -t1010 * pkin(3) - t1009 * pkin(7) - t955;
t1026 = -t1030 + t1033;
t1023 = qJD(4) ^ 2;
t1005 = t1020 * t1014;
t1000 = t1017 * t1037;
t999 = -t1023 - t1035;
t998 = -t1012 * t1009 - t1023;
t993 = -qJDD(4) + t1000;
t992 = qJDD(4) + t1000;
t991 = qJD(4) * pkin(4) - qJ(5) * t1036;
t987 = t1032 * t1009;
t982 = t1032 * t1010;
t981 = -0.2e1 * t1030 + t1033;
t980 = qJD(4) * t1031 + t1034;
t976 = -t1017 * t998 + t1020 * t993;
t975 = -t1017 * t992 + t1020 * t999;
t974 = t1017 * t993 + t1020 * t998;
t973 = t1017 * t999 + t1020 * t992;
t966 = -t1018 * t987 + t1021 * t982;
t963 = t1018 * t982 + t1021 * t987;
t962 = t1018 * t980 + t1021 * t976;
t961 = -t1018 * t981 + t1021 * t975;
t960 = t1018 * t976 - t1021 * t980;
t959 = t1018 * t975 + t1021 * t981;
t958 = -t1019 * t977 + t1022 * t978;
t957 = t1019 * t978 + t1022 * t977;
t952 = -t1019 * t963 + t1022 * t966;
t951 = t1019 * t966 + t1022 * t963;
t948 = -t1017 * t954 + t1005;
t947 = -t1019 * t960 + t1022 * t962;
t946 = -t1019 * t959 + t1022 * t961;
t945 = t1019 * t962 + t1022 * t960;
t944 = t1019 * t961 + t1022 * t959;
t943 = -pkin(4) * t1026 - qJ(5) * t1035 + t1036 * t991 + qJDD(5) + t953;
t942 = -pkin(4) * t1035 + qJ(5) * t1026 - qJD(4) * t991 + qJD(5) * t1031 + t949;
t941 = qJDD(4) * pkin(4) + t1005 + (pkin(4) * t1037 - t1010 * qJ(5) - 0.2e1 * qJD(5) * t1011 - t954) * t1017;
t940 = -t1018 * t955 + t1021 * t956;
t939 = t1018 * t956 + t1021 * t955;
t938 = -t1015 * t951 + t1016 * t952;
t937 = t1015 * t952 + t1016 * t951;
t936 = -t1017 * t948 + t1020 * t949;
t935 = t1017 * t949 + t1020 * t948;
t934 = -t1015 * t945 + t1016 * t947;
t933 = -t1015 * t944 + t1016 * t946;
t932 = t1015 * t947 + t1016 * t945;
t931 = t1015 * t946 + t1016 * t944;
t930 = t1018 * t953 + t1021 * t936;
t929 = t1018 * t936 - t1021 * t953;
t928 = -t1017 * t941 + t1020 * t942;
t927 = t1017 * t942 + t1020 * t941;
t926 = -t1019 * t939 + t1022 * t940;
t925 = t1019 * t940 + t1022 * t939;
t924 = t1018 * t943 + t1021 * t928;
t923 = t1018 * t928 - t1021 * t943;
t922 = -t1019 * t929 + t1022 * t930;
t921 = t1019 * t930 + t1022 * t929;
t920 = -t1019 * t923 + t1022 * t924;
t919 = t1019 * t924 + t1022 * t923;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1015 * t996 + t1016 * t997, 0, 0, 0, 0, 0, 0, t1029, -t1028, 0, -t1015 * t957 + t1016 * t958, 0, 0, 0, 0, 0, 0, t1044, t1043, 0, -t1015 * t925 + t1016 * t926, 0, 0, 0, 0, 0, 0, t933, t934, t938, -t1015 * t921 + t1016 * t922, 0, 0, 0, 0, 0, 0, t933, t934, t938, -t1015 * t919 + t1016 * t920; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1015 * t997 + t1016 * t996, 0, 0, 0, 0, 0, 0, t1028, t1029, 0, t1015 * t958 + t1016 * t957, 0, 0, 0, 0, 0, 0, -t1043, t1044, 0, t1015 * t926 + t1016 * t925, 0, 0, 0, 0, 0, 0, t931, t932, t937, t1015 * t922 + t1016 * t921, 0, 0, 0, 0, 0, 0, t931, t932, t937, t1015 * t920 + t1016 * t919; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, 0, 0, 0, 0, 0, t973, t974, 0, t935, 0, 0, 0, 0, 0, 0, t973, t974, 0, t927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t997, 0, 0, 0, 0, 0, 0, t995, -t994, 0, t958, 0, 0, 0, 0, 0, 0, t1040, t967, 0, t926, 0, 0, 0, 0, 0, 0, t946, t947, t952, t922, 0, 0, 0, 0, 0, 0, t946, t947, t952, t920; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t996, 0, 0, 0, 0, 0, 0, t994, t995, 0, t957, 0, 0, 0, 0, 0, 0, -t967, t1040, 0, t925, 0, 0, 0, 0, 0, 0, t944, t945, t951, t921, 0, 0, 0, 0, 0, 0, t944, t945, t951, t919; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, 0, 0, 0, 0, 0, t973, t974, 0, t935, 0, 0, 0, 0, 0, 0, t973, t974, 0, t927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1024, -qJDD(2), 0, t978, 0, 0, 0, 0, 0, 0, t1027, t985, 0, t940, 0, 0, 0, 0, 0, 0, t961, t962, t966, t930, 0, 0, 0, 0, 0, 0, t961, t962, t966, t924; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1024, 0, t977, 0, 0, 0, 0, 0, 0, -t985, t1027, 0, t939, 0, 0, 0, 0, 0, 0, t959, t960, t963, t929, 0, 0, 0, 0, 0, 0, t959, t960, t963, t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, 0, 0, 0, 0, 0, t973, t974, 0, t935, 0, 0, 0, 0, 0, 0, t973, t974, 0, t927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1009, -t1010, 0, t956, 0, 0, 0, 0, 0, 0, t975, t976, t982, t936, 0, 0, 0, 0, 0, 0, t975, t976, t982, t928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1010, -t1009, 0, t955, 0, 0, 0, 0, 0, 0, t981, -t980, t987, -t953, 0, 0, 0, 0, 0, 0, t981, -t980, t987, -t943; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, 0, 0, 0, 0, 0, t973, t974, 0, t935, 0, 0, 0, 0, 0, 0, t973, t974, 0, t927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t999, t993, t1033, t949, 0, 0, 0, 0, 0, 0, t999, t993, t1033, t942; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t992, t998, -t1034, t948, 0, 0, 0, 0, 0, 0, t992, t998, -t1034, t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t981, t980, -t987, t953, 0, 0, 0, 0, 0, 0, -t981, t980, -t987, t943; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t999, t993, t1033, t942; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t992, t998, -t1034, t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t981, t980, -t987, t943;];
f_new_reg = t1;
