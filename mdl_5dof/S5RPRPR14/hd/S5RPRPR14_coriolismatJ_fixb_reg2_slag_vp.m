% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:35
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPR14_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR14_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR14_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRPR14_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:35:21
% EndTime: 2019-12-31 18:35:27
% DurationCPUTime: 3.10s
% Computational Cost: add. (3890->252), mult. (6862->345), div. (0->0), fcn. (7351->6), ass. (0->200)
t197 = cos(qJ(3));
t198 = -pkin(1) - pkin(6);
t322 = qJ(4) - t198;
t173 = t322 * t197;
t193 = cos(pkin(8));
t195 = sin(qJ(3));
t224 = t322 * t195;
t302 = sin(pkin(8));
t126 = -t193 * t173 + t224 * t302;
t194 = sin(qJ(5));
t325 = t194 * t126;
t196 = cos(qJ(5));
t324 = t196 * t126;
t323 = 0.2e1 * t194;
t319 = -t302 * t173 - t193 * t224;
t296 = t319 * t194;
t295 = t319 * t196;
t169 = t193 * t195 + t197 * t302;
t167 = t169 ^ 2;
t179 = t302 * t195;
t289 = t193 * t197;
t171 = -t179 + t289;
t168 = t171 ^ 2;
t221 = t167 / 0.2e1 + t168 / 0.2e1;
t63 = 0.1e1 / 0.2e1 - t221;
t102 = t196 * t171;
t225 = t102 * t323;
t313 = qJD(3) * pkin(3);
t321 = (-t169 * t193 + t171 * t302) * t313;
t320 = -t168 - t167;
t242 = t168 - t167;
t318 = -t126 / 0.2e1;
t317 = -t319 / 0.2e1;
t192 = t196 ^ 2;
t316 = -t192 / 0.2e1;
t314 = t197 * pkin(3);
t107 = t171 * pkin(4) + t169 * pkin(7) + t314;
t288 = t194 * t107;
t56 = t324 + t288;
t306 = t56 * t196;
t286 = t196 * t107;
t55 = t286 - t325;
t309 = t55 * t194;
t182 = t195 * pkin(3) + qJ(2);
t200 = t169 * pkin(4) - t171 * pkin(7) + t182;
t54 = t194 * t200 + t295;
t310 = t54 * t196;
t53 = -t196 * t200 + t296;
t311 = t53 * t194;
t2 = (t310 / 0.2e1 + t311 / 0.2e1 + t317) * t171 + (t306 / 0.2e1 - t309 / 0.2e1 + t318) * t169;
t315 = t2 * qJD(3);
t27 = t54 * t194 - t53 * t196;
t307 = t56 * t194;
t308 = t55 * t196;
t3 = (t307 + t308) * t171 - t27 * t169;
t312 = t3 * qJD(1);
t6 = (-t53 + t296) * t171 + (t55 + t325) * t169;
t305 = t6 * qJD(1);
t7 = (-t54 + t295) * t171 + (-t56 + t324) * t169;
t304 = t7 * qJD(1);
t299 = t126 * t171;
t8 = -t299 + (-t310 - t311) * t169;
t303 = t8 * qJD(1);
t191 = t194 ^ 2;
t227 = t316 - t191 / 0.2e1;
t180 = pkin(3) * t302 + pkin(7);
t290 = t180 * t169;
t181 = -t193 * pkin(3) - pkin(4);
t291 = t171 * t181;
t199 = t227 * t290 + t291 / 0.2e1;
t212 = -t308 / 0.2e1 - t307 / 0.2e1;
t10 = t199 + t212;
t301 = t10 * qJD(1);
t228 = t126 / 0.2e1 + t318;
t15 = (t319 / 0.2e1 + t317) * t171 + t228 * t169;
t294 = t15 * qJD(1);
t292 = t169 * t181;
t98 = t194 * t171;
t284 = t27 * qJD(1);
t28 = t126 * t98 + t53 * t169;
t283 = t28 * qJD(1);
t29 = -t102 * t126 - t54 * t169;
t282 = t29 * qJD(1);
t244 = -t168 / 0.2e1;
t205 = t167 * t227 + t244;
t36 = t205 + t227;
t281 = t36 * qJD(1);
t43 = -t169 * t319 - t299;
t280 = t43 * qJD(1);
t64 = -0.1e1 / 0.2e1 - t221;
t57 = t64 * t194;
t279 = t57 * qJD(1);
t278 = t64 * qJD(1);
t66 = t64 * t196;
t277 = t66 * qJD(1);
t68 = t242 * t194;
t276 = t68 * qJD(1);
t69 = t320 * t194;
t275 = t69 * qJD(1);
t70 = t242 * t196;
t274 = t70 * qJD(1);
t202 = -t302 * t169 / 0.2e1 - t193 * t171 / 0.2e1;
t81 = (-t197 / 0.2e1 + t202) * pkin(3);
t273 = t81 * qJD(1);
t272 = t242 * qJD(1);
t86 = t169 * t314 + t182 * t171;
t271 = t86 * qJD(1);
t87 = -t182 * t169 + t171 * t314;
t270 = t87 * qJD(1);
t94 = (t191 / 0.2e1 + t316) * t171;
t269 = t94 * qJD(5);
t95 = t194 * t169;
t268 = t95 * qJD(1);
t267 = t98 * qJD(1);
t266 = t191 + t192;
t177 = t192 - t191;
t265 = qJD(3) * t196;
t264 = qJD(5) * t194;
t263 = qJD(5) * t196;
t100 = t196 * t169;
t262 = t100 * qJD(1);
t156 = t191 * t169;
t157 = t192 * t169;
t108 = t156 + t157;
t261 = t108 * qJD(1);
t110 = t266 * t171;
t260 = t110 * qJD(1);
t111 = t320 * t196;
t259 = t111 * qJD(1);
t258 = t320 * qJD(1);
t164 = t289 / 0.2e1 - t179 / 0.2e1;
t257 = t164 * qJD(1);
t256 = t169 * qJD(1);
t255 = t169 * qJD(2);
t159 = t169 * qJD(3);
t254 = t169 * qJD(4);
t253 = t171 * qJD(1);
t162 = t171 * qJD(3);
t252 = t171 * qJD(4);
t176 = t195 ^ 2 - t197 ^ 2;
t251 = t176 * qJD(1);
t250 = t182 * qJD(1);
t249 = t195 * qJD(1);
t248 = t195 * qJD(3);
t247 = t197 * qJD(1);
t246 = t197 * qJD(3);
t240 = qJ(2) * t249;
t239 = qJ(2) * t247;
t238 = t169 * t264;
t237 = t169 * t263;
t236 = t169 * t253;
t235 = t169 * t162;
t234 = t194 * t263;
t233 = t194 * t256;
t232 = t194 * t265;
t231 = t196 * t256;
t230 = t196 * t253;
t229 = t195 * t246;
t223 = -qJD(5) - t256;
t222 = t168 * t234;
t220 = -t98 * qJD(3) - t237;
t219 = qJD(3) * t225;
t4 = -t126 * t319 - t53 * t55 + t54 * t56;
t218 = t4 * qJD(1) + t2 * qJD(2);
t217 = t306 - t309;
t44 = (-0.1e1 + t266) * t171 * t169;
t216 = -t2 * qJD(1) - t44 * qJD(2);
t30 = t182 * t314;
t215 = t30 * qJD(1) + t15 * qJD(2);
t214 = -t171 * t180 - t292;
t213 = t223 * t196;
t211 = t290 / 0.2e1 - t291 / 0.2e1;
t201 = t107 / 0.2e1 + t211;
t25 = t194 * t228 - t196 * t201;
t210 = -t181 * t194 * qJD(3) - t25 * qJD(1);
t23 = t194 * t201 + t196 * t228;
t209 = -t23 * qJD(1) - t181 * t265;
t72 = -t94 * qJD(1) + t232;
t208 = t171 * t213;
t207 = t164 * qJD(5) + t236;
t61 = t196 * t168 * t194 * qJD(1) + t94 * qJD(3);
t109 = t177 * t168;
t204 = t109 * qJD(1) + t219;
t203 = qJD(1) * t225 - t177 * qJD(3);
t190 = qJ(2) * qJD(2);
t189 = qJD(1) * qJ(2);
t178 = t195 * t247;
t155 = t164 * qJD(3);
t154 = t196 * t162;
t90 = t95 * qJD(5);
t80 = t314 / 0.2e1 + t202 * pkin(3);
t79 = -t264 - t268;
t67 = (-t167 / 0.2e1 + t244 + 0.1e1 / 0.2e1) * t196;
t58 = t63 * t194;
t35 = t205 - t227;
t26 = -t325 + t286 / 0.2e1 - t211 * t196;
t24 = -t324 - t288 / 0.2e1 + t211 * t194;
t13 = t15 * qJD(3);
t9 = t199 - t212;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t190, -t229, t176 * qJD(3), 0, t229, 0, 0, qJ(2) * t246 + qJD(2) * t195, -qJ(2) * t248 + qJD(2) * t197, 0, t190, -t235, -t242 * qJD(3), 0, t235, 0, 0, t86 * qJD(3) + t255, t171 * qJD(2) + t87 * qJD(3), -qJD(4) * t320, t182 * qJD(2) + t30 * qJD(3) + t43 * qJD(4), -t192 * t235 - t222, -t109 * qJD(5) + t169 * t219, t70 * qJD(3) - t171 * t238, -t191 * t235 + t222, -t68 * qJD(3) - t171 * t237, t235, t6 * qJD(3) - t69 * qJD(4) + t29 * qJD(5) + t196 * t255, t7 * qJD(3) - t111 * qJD(4) + t28 * qJD(5) - t194 * t255, -t110 * qJD(2) - t3 * qJD(3), t27 * qJD(2) + t4 * qJD(3) + t8 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t189, 0, 0, 0, 0, 0, 0, t249, t247, 0, t189, 0, 0, 0, 0, 0, 0, t256, t253, 0, t63 * qJD(4) + t13 + t250, 0, 0, 0, 0, 0, 0, t67 * qJD(5) + t231, -t58 * qJD(5) - t233, -t260, t35 * qJD(4) + t284 + t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t178, t251, -t248, t178, -t246, 0, -t198 * t248 + t239, -t198 * t246 - t240, 0, 0, -t236, -t272, -t159, t236, -t162, 0, -qJD(3) * t319 + t271, -t126 * qJD(3) + t270, -t321, (t126 * t302 - t193 * t319) * t313 + t80 * qJD(4) + t215, -t269 + (-t192 * t253 - t232) * t169, (t156 - t157) * qJD(3) + (-qJD(5) + t256) * t225, t162 * t194 + t274, t269 + (-t191 * t253 + t232) * t169, t154 - t276, t207, t305 + (t194 * t214 - t295) * qJD(3) + t26 * qJD(5), t304 + (t196 * t214 + t296) * qJD(3) + t24 * qJD(5), qJD(3) * t217 - t312, (t180 * t217 + t181 * t319) * qJD(3) + t9 * qJD(4) + t218; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t258, t63 * qJD(2) + t80 * qJD(3) + t280, 0, 0, 0, 0, 0, 0, -t275, -t259, 0, t35 * qJD(2) + t9 * qJD(3) + t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, -t204, t223 * t98, t61, t208, t155, t67 * qJD(2) + t26 * qJD(3) - t54 * qJD(5) + t282, -t58 * qJD(2) + t24 * qJD(3) + t53 * qJD(5) + t283, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t189, 0, 0, 0, 0, 0, 0, -t249, -t247, 0, -t189, 0, 0, 0, 0, 0, 0, -t256, -t253, 0, t64 * qJD(4) + t13 - t250, 0, 0, 0, 0, 0, 0, t66 * qJD(5) - t231, -t57 * qJD(5) + t233, t260, t36 * qJD(4) - t284 + t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248, -t246, 0, 0, 0, 0, 0, 0, 0, 0, -t159, -t162, 0, t294 + t321, 0, 0, 0, 0, 0, 0, -t98 * qJD(5) - t159 * t196, -t102 * qJD(5) + t159 * t194, t110 * qJD(3), (t110 * t180 + t292) * qJD(3) - t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, 0, 0, 0, 0, 0, 0, 0, 0, 0, t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220 + t277, -t102 * qJD(3) + t238 - t279, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, -t251, 0, -t178, 0, 0, -t239, t240, 0, 0, t236, t272, 0, -t236, 0, 0, -t252 - t271, t254 - t270, 0, t81 * qJD(4) - t215, t192 * t236 - t269, t208 * t323, t100 * qJD(5) - t274, t191 * t236 + t269, -t90 + t276, -t207, t25 * qJD(5) - t196 * t252 - t305, t98 * qJD(4) + t23 * qJD(5) - t304, -t108 * qJD(4) + t312, t10 * qJD(4) - t218; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t294, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t234, t177 * qJD(5), 0, -t234, 0, 0, t181 * t264, t181 * t263, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t253, t256, 0, t273, 0, 0, 0, 0, 0, 0, -t230, t267, -t261, t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, -t203, t262 + t263, -t72, t79, -t257, -t180 * t263 - t210, t180 * t264 - t209, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t159, t258, -t64 * qJD(2) - t81 * qJD(3) - t280, 0, 0, 0, 0, 0, 0, t154 - t90 + t275, t220 + t259, t108 * qJD(3), -t36 * qJD(2) - t10 * qJD(3) - t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t278, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t253, -t256, 0, -t273, 0, 0, 0, 0, 0, 0, t230, -t267, t261, -t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, t213, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, t204, -t100 * qJD(3) + t171 * t233, -t61, t95 * qJD(3) + t169 * t230, t155, -t66 * qJD(2) - t25 * qJD(3) + t95 * qJD(4) - t282, t57 * qJD(2) - t23 * qJD(3) + t196 * t254 - t283, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t277, t279, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t72, t203, -t262, t72, t268, t257, t210, t209, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t268, t231, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
