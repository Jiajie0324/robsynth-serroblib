% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRPR14
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:35
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRPR14_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR14_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR14_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR14_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR14_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRPR14_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:35:32
% EndTime: 2019-12-31 18:35:44
% DurationCPUTime: 12.26s
% Computational Cost: add. (43731->595), mult. (96116->744), div. (0->0), fcn. (62631->8), ass. (0->389)
t909 = sin(pkin(8));
t910 = cos(pkin(8));
t913 = sin(qJ(3));
t916 = cos(qJ(3));
t869 = (t909 * t916 + t910 * t913) * qJD(1);
t1001 = qJD(1) * t916;
t871 = -t909 * t913 * qJD(1) + t910 * t1001;
t1024 = t871 * t869;
t1037 = qJDD(3) - t1024;
t1040 = t1037 * t909;
t1039 = t1037 * t910;
t1000 = qJD(3) * t869;
t899 = t916 * qJDD(1);
t995 = qJD(1) * qJD(3);
t979 = t913 * t995;
t878 = t899 - t979;
t978 = t916 * t995;
t993 = t913 * qJDD(1);
t937 = -t978 - t993;
t824 = t910 * t878 + t909 * t937;
t1038 = -t824 + t1000;
t858 = qJD(3) * t871;
t964 = t909 * t878 - t910 * t937;
t802 = t858 + t964;
t912 = sin(qJ(5));
t915 = cos(qJ(5));
t832 = -t915 * qJD(3) + t912 * t871;
t834 = t912 * qJD(3) + t915 * t871;
t801 = t834 * t832;
t820 = qJDD(5) + t964;
t1034 = -t801 + t820;
t1036 = t1034 * t912;
t1035 = t1034 * t915;
t1032 = pkin(6) + pkin(1);
t919 = qJD(1) ^ 2;
t914 = sin(qJ(1));
t917 = cos(qJ(1));
t887 = t914 * g(1) - t917 * g(2);
t954 = qJDD(2) - t887;
t935 = -t919 * qJ(2) + t954;
t924 = -t1032 * qJDD(1) + t935;
t828 = t916 * g(3) - t913 * t924;
t906 = t913 ^ 2;
t1023 = t906 * t919;
t918 = qJD(3) ^ 2;
t891 = -t918 - t1023;
t793 = pkin(3) * t891 - qJ(4) * t993 - t828;
t1006 = t916 * t919;
t923 = t916 * t924;
t920 = t923 - t878 * qJ(4) + qJDD(3) * pkin(3) + (-pkin(3) * t1006 - qJ(4) * t995 + g(3)) * t913;
t1003 = t910 * t793 + t909 * t920;
t997 = qJD(4) * t869;
t854 = -0.2e1 * t997;
t718 = t854 + t1003;
t814 = t869 * pkin(4) - t871 * pkin(7);
t697 = -t918 * pkin(4) + qJDD(3) * pkin(7) - t869 * t814 + t718;
t888 = t917 * g(1) + t914 * g(2);
t905 = qJDD(1) * qJ(2);
t942 = t888 - t905;
t1033 = -(t906 * qJ(4) + t1032) * t919 - pkin(3) * t937 + qJDD(4) + (qJD(3) * pkin(3) - qJ(4) * t1001) * t1001 - t942;
t994 = qJD(2) * qJD(1);
t903 = 0.2e1 * t994;
t708 = t802 * pkin(4) + t1038 * pkin(7) + t1033 + t903;
t655 = t912 * t697 - t915 * t708;
t656 = t915 * t697 + t912 * t708;
t626 = t912 * t655 + t915 * t656;
t804 = -t964 + t858;
t827 = t913 * g(3) + t923;
t782 = t916 * t827 - t913 * t828;
t829 = t832 ^ 2;
t830 = t834 ^ 2;
t860 = qJD(5) + t869;
t859 = t860 ^ 2;
t866 = t869 ^ 2;
t867 = t871 ^ 2;
t1031 = pkin(2) * t782;
t989 = -0.2e1 * t994;
t925 = t942 + t989;
t847 = t1032 * t919 + t925;
t1030 = pkin(2) * t847;
t907 = t916 ^ 2;
t1002 = t906 + t907;
t880 = t1002 * qJDD(1);
t1029 = pkin(2) * t880;
t1028 = pkin(4) * t909;
t1027 = qJDD(1) * pkin(1);
t1026 = t860 * t912;
t1025 = t860 * t915;
t1022 = t907 * t919;
t794 = -t1033 + t989;
t1021 = t909 * t794;
t817 = qJDD(3) + t1024;
t1020 = t909 * t817;
t1019 = t910 * t794;
t1018 = t910 * t817;
t968 = t909 * t793 - t910 * t920;
t696 = -qJDD(3) * pkin(4) - t918 * pkin(7) + (0.2e1 * qJD(4) + t814) * t871 + t968;
t693 = t912 * t696;
t767 = t801 + t820;
t1017 = t912 * t767;
t996 = qJD(4) * t871;
t990 = 0.2e1 * t996;
t717 = t968 + t990;
t668 = -t910 * t717 + t909 * t718;
t1016 = t913 * t668;
t1014 = t913 * t847;
t877 = 0.2e1 * t978 + t993;
t835 = t913 * t877;
t894 = t913 * t1006;
t885 = qJDD(3) + t894;
t1013 = t913 * t885;
t886 = qJDD(3) - t894;
t1012 = t913 * t886;
t1011 = t914 * t880;
t694 = t915 * t696;
t1010 = t915 * t767;
t1009 = t916 * t668;
t831 = t916 * t847;
t1008 = t916 * t885;
t1007 = t916 * t886;
t1005 = t917 * t880;
t1004 = -pkin(4) * t696 + pkin(7) * t626;
t999 = qJD(3) * t909;
t998 = qJD(3) * t910;
t992 = t914 * qJDD(1);
t991 = t917 * qJDD(1);
t988 = t909 * t801;
t987 = t910 * t801;
t986 = t914 * t1024;
t985 = t917 * t1024;
t792 = -t830 - t859;
t715 = -t912 * t792 - t1010;
t944 = -t912 * qJDD(3) - t915 * t824;
t751 = (qJD(5) + t860) * t832 + t944;
t984 = pkin(4) * t751 + pkin(7) * t715 + t693;
t778 = -t859 - t829;
t710 = t915 * t778 - t1036;
t812 = t860 * t834;
t966 = t915 * qJDD(3) - t912 * t824;
t940 = t834 * qJD(5) - t966;
t747 = -t812 - t940;
t983 = pkin(4) * t747 + pkin(7) * t710 - t694;
t622 = t909 * t626 - t910 * t696;
t982 = pkin(3) * t622 + t1004;
t852 = -t867 - t918;
t788 = t910 * t852 - t1020;
t981 = pkin(3) * t788 - t1003;
t980 = -pkin(4) * t910 - pkin(3);
t669 = t909 * t717 + t910 * t718;
t633 = t913 * t669 + t1009;
t667 = pkin(3) * t668;
t977 = -pkin(2) * t633 - t667;
t806 = t1000 + t824;
t754 = t909 * t804 - t910 * t806;
t756 = t910 * t804 + t909 * t806;
t690 = t916 * t754 + t913 * t756;
t752 = pkin(3) * t754;
t976 = -pkin(2) * t690 - t752;
t623 = t910 * t626 + t909 * t696;
t625 = -t915 * t655 + t912 * t656;
t598 = qJ(4) * t623 + (-pkin(7) * t909 + t980) * t625;
t601 = -qJ(4) * t622 + (-pkin(7) * t910 + t1028) * t625;
t975 = -t913 * t598 + t916 * t601;
t748 = (-qJD(5) + t860) * t834 + t966;
t779 = -t832 * qJD(5) - t944;
t811 = t860 * t832;
t750 = t779 + t811;
t686 = t912 * t748 - t915 * t750;
t620 = -pkin(7) * t686 - t625;
t688 = t915 * t748 + t912 * t750;
t775 = t829 + t830;
t666 = t910 * t688 - t909 * t775;
t608 = qJ(4) * t666 + t909 * t620 + t980 * t686;
t665 = t909 * t688 + t910 * t775;
t610 = -qJ(4) * t665 + t686 * t1028 + t910 * t620;
t974 = -t913 * t608 + t916 * t610;
t709 = t912 * t778 + t1035;
t643 = -pkin(4) * t709 + t655;
t657 = -pkin(7) * t709 + t693;
t674 = t910 * t710 - t909 * t747;
t614 = -pkin(3) * t709 + qJ(4) * t674 + t910 * t643 + t909 * t657;
t673 = t909 * t710 + t910 * t747;
t617 = -qJ(4) * t673 - t909 * t643 + t910 * t657;
t973 = -t913 * t614 + t916 * t617;
t714 = t915 * t792 - t1017;
t644 = -pkin(4) * t714 + t656;
t658 = -pkin(7) * t714 + t694;
t679 = t910 * t715 - t909 * t751;
t615 = -pkin(3) * t714 + qJ(4) * t679 + t910 * t644 + t909 * t658;
t678 = t909 * t715 + t910 * t751;
t619 = -qJ(4) * t678 - t909 * t644 + t910 * t658;
t972 = -t913 * t615 + t916 * t619;
t800 = -t866 - t867;
t650 = -pkin(3) * t800 + qJ(4) * t756 + t669;
t652 = -qJ(4) * t754 - t668;
t971 = -t913 * t650 + t916 * t652;
t815 = -t918 - t866;
t773 = t910 * t815 - t1040;
t698 = -pkin(3) * t802 + qJ(4) * t773 + t1019;
t772 = t909 * t815 + t1039;
t720 = -qJ(4) * t772 - t1021;
t970 = -t913 * t698 + t916 * t720;
t791 = -t909 * t852 - t1018;
t699 = pkin(3) * t1038 + qJ(4) * t791 - t1021;
t735 = -qJ(4) * t788 - t1019;
t969 = -t913 * t699 + t916 * t735;
t853 = t919 * pkin(1) + t925;
t861 = -t935 + t1027;
t965 = -t917 * t853 - t914 * t861;
t963 = -t914 * t887 - t917 * t888;
t962 = t914 * t894;
t961 = t917 * t894;
t960 = pkin(4) * t775 + pkin(7) * t688 + t626;
t959 = pkin(3) * t678 + t984;
t958 = pkin(3) * t673 + t983;
t881 = -t914 * t919 + t991;
t956 = pkin(5) * t881 + t914 * g(3);
t882 = t917 * t919 + t992;
t955 = -pkin(5) * t882 + t917 * g(3);
t953 = pkin(3) * t772 - t968;
t952 = pkin(2) * t877 - t831;
t879 = t899 - 0.2e1 * t979;
t951 = pkin(2) * t879 + t1014;
t950 = pkin(3) * t665 + t960;
t783 = -t913 * t827 - t916 * t828;
t949 = t914 * t853 - t917 * t861;
t948 = t917 * t887 - t914 * t888;
t604 = t916 * t622 + t913 * t623;
t946 = -pkin(2) * t604 - t982;
t729 = t916 * t788 + t913 * t791;
t945 = -pkin(2) * t729 - t981;
t893 = -t918 - t1022;
t839 = t916 * t893 - t1013;
t943 = -pkin(2) * t839 - t828;
t659 = pkin(3) * t794 + qJ(4) * t669;
t941 = -qJ(4) * t1009 - t913 * t659;
t637 = t916 * t673 + t913 * t674;
t939 = -pkin(2) * t637 - t958;
t641 = t916 * t678 + t913 * t679;
t938 = -pkin(2) * t641 - t959;
t704 = t916 * t772 + t913 * t773;
t936 = -pkin(2) * t704 - t953;
t629 = t916 * t665 + t913 * t666;
t934 = -pkin(2) * t629 - t950;
t933 = pkin(2) * t625 - t916 * t598 - t913 * t601;
t932 = pkin(2) * t686 - t916 * t608 - t913 * t610;
t931 = pkin(2) * t709 - t916 * t614 - t913 * t617;
t930 = pkin(2) * t714 - t916 * t615 - t913 * t619;
t929 = pkin(2) * t800 - t916 * t650 - t913 * t652;
t928 = pkin(2) * t802 - t916 * t698 - t913 * t720;
t927 = -pkin(2) * t1038 - t916 * t699 - t913 * t735;
t926 = -pkin(2) * t794 + qJ(4) * t1016 - t916 * t659;
t837 = t913 * t891 + t1007;
t921 = -pkin(2) * t837 - t827;
t900 = t917 * qJDD(3);
t897 = t914 * qJDD(3);
t892 = t918 - t1022;
t890 = -t918 + t1023;
t884 = (-t906 + t907) * t919;
t883 = t1002 * t919;
t875 = t1002 * t995;
t874 = t954 - 0.2e1 * t1027;
t868 = -t888 + t903 + 0.2e1 * t905;
t856 = -0.2e1 * t996;
t855 = 0.2e1 * t997;
t851 = -t867 + t918;
t850 = t866 - t918;
t849 = t913 * t878 + t907 * t995;
t848 = t906 * t995 + t916 * t937;
t844 = -t913 * t893 - t1008;
t843 = -t913 * t892 + t1007;
t842 = (t878 - t979) * t916;
t841 = t916 * t891 - t1012;
t840 = t916 * t890 - t1013;
t838 = t916 * t892 + t1012;
t836 = t913 * t890 + t1008;
t826 = -t916 * t877 - t913 * t879;
t825 = t916 * t879 - t835;
t819 = t867 - t866;
t813 = pkin(1) * t861 - qJ(2) * t853;
t810 = (-t869 * t910 + t871 * t909) * qJD(3);
t809 = (-t869 * t909 - t871 * t910) * qJD(3);
t808 = -t830 + t859;
t807 = t829 - t859;
t799 = t830 - t829;
t798 = t910 * t824 - t871 * t999;
t797 = t909 * t824 + t871 * t998;
t796 = t869 * t998 + t909 * t964;
t795 = t869 * t999 - t910 * t964;
t790 = -t909 * t851 + t1039;
t789 = t910 * t850 - t1020;
t787 = t910 * t851 + t1040;
t786 = t909 * t850 + t1018;
t776 = pkin(2) * t883 + t783;
t770 = -qJ(2) * t844 - t943;
t769 = -qJ(2) * t841 - t921;
t765 = -t1032 * t841 + t952;
t764 = -t1032 * t844 + t951;
t763 = qJ(2) * t879 - t1032 * t839 - t831;
t762 = qJ(2) * t877 - t1032 * t837 - t1014;
t761 = (-t832 * t915 + t834 * t912) * t860;
t760 = (-t832 * t912 - t834 * t915) * t860;
t759 = -t913 * t809 + t916 * t810;
t758 = t916 * t809 + t913 * t810;
t757 = -qJ(2) * t883 + t1032 * t880 - t782;
t755 = t1038 * t909 - t910 * t802;
t753 = -t1038 * t910 - t909 * t802;
t749 = t779 - t811;
t746 = -t812 + t940;
t743 = -t834 * t1026 + t915 * t779;
t742 = t834 * t1025 + t912 * t779;
t741 = t832 * t1025 + t912 * t940;
t740 = -t832 * t1026 + t915 * t940;
t739 = -t913 * t797 + t916 * t798;
t738 = -t913 * t795 + t916 * t796;
t737 = t916 * t797 + t913 * t798;
t736 = t916 * t795 + t913 * t796;
t733 = -qJ(2) * t783 + t1031;
t732 = -t913 * t788 + t916 * t791;
t731 = -t913 * t787 + t916 * t790;
t730 = -t913 * t786 + t916 * t789;
t728 = t916 * t787 + t913 * t790;
t727 = t916 * t786 + t913 * t789;
t726 = t910 * t761 + t909 * t820;
t725 = t909 * t761 - t910 * t820;
t724 = t915 * t807 - t1017;
t723 = -t912 * t808 + t1035;
t722 = t912 * t807 + t1010;
t721 = t915 * t808 + t1036;
t712 = -t1032 * t783 - t1030;
t711 = -qJ(2) * t847 - t1032 * t782;
t705 = -t913 * t772 + t916 * t773;
t703 = t910 * t743 + t988;
t702 = t910 * t741 - t988;
t701 = t909 * t743 - t987;
t700 = t909 * t741 + t987;
t692 = -t913 * t754 + t916 * t756;
t691 = -t913 * t753 + t916 * t755;
t689 = t916 * t753 + t913 * t755;
t687 = t915 * t747 - t912 * t749;
t685 = t912 * t747 + t915 * t749;
t683 = t910 * t724 - t909 * t746;
t682 = t910 * t723 + t909 * t750;
t681 = t909 * t724 + t910 * t746;
t680 = t909 * t723 - t910 * t750;
t676 = -t913 * t725 + t916 * t726;
t675 = t916 * t725 + t913 * t726;
t671 = t910 * t687 + t909 * t799;
t670 = t909 * t687 - t910 * t799;
t663 = -t913 * t701 + t916 * t703;
t662 = -t913 * t700 + t916 * t702;
t661 = t916 * t701 + t913 * t703;
t660 = t916 * t700 + t913 * t702;
t649 = -qJ(2) * t732 + t855 - t945;
t648 = -t913 * t681 + t916 * t683;
t647 = -t913 * t680 + t916 * t682;
t646 = t916 * t681 + t913 * t683;
t645 = t916 * t680 + t913 * t682;
t642 = -t913 * t678 + t916 * t679;
t640 = -qJ(2) * t692 - t976;
t639 = -qJ(2) * t705 + t856 - t936;
t638 = -t913 * t673 + t916 * t674;
t636 = -t913 * t670 + t916 * t671;
t635 = t916 * t670 + t913 * t671;
t634 = t916 * t669 - t1016;
t632 = -t1032 * t732 + t927;
t631 = -qJ(2) * t1038 - t1032 * t729 + t969;
t630 = -t913 * t665 + t916 * t666;
t628 = -t1032 * t705 + t928;
t627 = qJ(2) * t802 - t1032 * t704 + t970;
t613 = -t1032 * t692 + t929;
t612 = qJ(2) * t800 - t1032 * t690 + t971;
t611 = -qJ(2) * t634 - t977;
t607 = -qJ(2) * t642 - t938;
t606 = -qJ(2) * t638 - t939;
t605 = -t913 * t622 + t916 * t623;
t603 = -t1032 * t634 + t926;
t602 = -qJ(2) * t794 - t1032 * t633 + t941;
t599 = -qJ(2) * t630 - t934;
t597 = -t1032 * t642 + t930;
t596 = qJ(2) * t714 - t1032 * t641 + t972;
t595 = -t1032 * t638 + t931;
t594 = qJ(2) * t709 - t1032 * t637 + t973;
t593 = -t1032 * t630 + t932;
t592 = qJ(2) * t686 - t1032 * t629 + t974;
t591 = -qJ(2) * t605 - t946;
t590 = -t1032 * t605 + t933;
t589 = qJ(2) * t625 - t1032 * t604 + t975;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t881, 0, -t882, 0, -t956, -t955, -t948, -pkin(5) * t948, 0, -t881, t882, 0, 0, 0, t949, t956, t955, pkin(5) * t949 + (-t914 * pkin(1) + t917 * qJ(2)) * g(3), t914 * t849 + t961, t914 * t825 + t917 * t884, t914 * t838 + t916 * t991, t914 * t848 - t961, t914 * t836 - t913 * t991, -t914 * t875 + t900, t917 * t769 - t914 * t765 - pkin(5) * (-t917 * t837 + t914 * t877), t917 * t770 - t914 * t764 - pkin(5) * (-t917 * t839 + t914 * t879), -pkin(2) * t1005 + t914 * t776 - pkin(5) * (-t914 * t883 + t1005), t917 * t733 - t914 * t712 - pkin(5) * (-t917 * t782 - t914 * t847), t914 * t737 + t985, t914 * t689 + t917 * t819, t914 * t728 + t917 * t806, t914 * t736 - t985, t914 * t727 + t804 * t917, t914 * t758 + t900, t917 * t639 - t914 * t628 - pkin(5) * (-t917 * t704 + t914 * t802), t917 * t649 - t914 * t632 - pkin(5) * (-t1038 * t914 - t917 * t729), t917 * t640 - t914 * t613 - pkin(5) * (-t917 * t690 + t914 * t800), t917 * t611 - t914 * t603 - pkin(5) * (-t917 * t633 - t914 * t794), t914 * t661 + t917 * t742, t914 * t635 + t917 * t685, t914 * t645 + t917 * t721, t914 * t660 - t917 * t740, t914 * t646 + t917 * t722, t914 * t675 + t917 * t760, t917 * t606 - t914 * t595 - pkin(5) * (-t917 * t637 + t914 * t709), t917 * t607 - t914 * t597 - pkin(5) * (-t917 * t641 + t914 * t714), t917 * t599 - t914 * t593 - pkin(5) * (-t917 * t629 + t914 * t686), t917 * t591 - t914 * t590 - pkin(5) * (-t917 * t604 + t914 * t625); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t882, 0, t881, 0, t955, -t956, t963, pkin(5) * t963, 0, -t882, -t881, 0, 0, 0, t965, -t955, t956, pkin(5) * t965 + (t917 * pkin(1) + t914 * qJ(2)) * g(3), -t917 * t849 + t962, -t917 * t825 + t914 * t884, -t917 * t838 + t914 * t899, -t917 * t848 - t962, -t917 * t836 - t913 * t992, t917 * t875 + t897, t914 * t769 + t917 * t765 + pkin(5) * (t914 * t837 + t917 * t877), t914 * t770 + t917 * t764 + pkin(5) * (t914 * t839 + t917 * t879), -pkin(2) * t1011 - t917 * t776 + pkin(5) * (-t917 * t883 - t1011), t914 * t733 + t917 * t712 + pkin(5) * (t914 * t782 - t917 * t847), -t917 * t737 + t986, -t917 * t689 + t914 * t819, -t917 * t728 + t914 * t806, -t917 * t736 - t986, -t917 * t727 + t804 * t914, -t917 * t758 + t897, t914 * t639 + t917 * t628 + pkin(5) * (t914 * t704 + t917 * t802), t914 * t649 + t917 * t632 + pkin(5) * (-t1038 * t917 + t914 * t729), t914 * t640 + t917 * t613 + pkin(5) * (t914 * t690 + t917 * t800), t914 * t611 + t917 * t603 + pkin(5) * (t914 * t633 - t917 * t794), -t917 * t661 + t914 * t742, -t917 * t635 + t914 * t685, -t917 * t645 + t914 * t721, -t917 * t660 - t914 * t740, -t917 * t646 + t914 * t722, -t917 * t675 + t914 * t760, t914 * t606 + t917 * t595 + pkin(5) * (t914 * t637 + t917 * t709), t914 * t607 + t917 * t597 + pkin(5) * (t914 * t641 + t917 * t714), t914 * t599 + t917 * t593 + pkin(5) * (t914 * t629 + t917 * t686), t914 * t591 + t917 * t590 + pkin(5) * (t914 * t604 + t917 * t625); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t887, t888, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t874, t868, t813, t842, t826, t843, t835, t840, 0, t762, t763, t757, t711, t739, t691, t731, t738, t730, t759, t627, t631, t612, t602, t663, t636, t647, t662, t648, t676, t594, t596, t592, t589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t919, 0, 0, -g(3), -t887, 0, 0, -qJDD(1), t919, 0, 0, 0, -t861, 0, g(3), qJ(2) * g(3), t894, t884, t899, -t894, -t993, qJDD(3), t769, t770, -t1029, t733, t1024, t819, t806, -t1024, t804, qJDD(3), t639, t649, t640, t611, t742, t685, t721, -t740, t722, t760, t606, t607, t599, t591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t919, 0, qJDD(1), 0, g(3), 0, -t888, 0, 0, -t919, -qJDD(1), 0, 0, 0, -t853, -g(3), 0, pkin(1) * g(3), -t849, -t825, -t838, -t848, -t836, t875, t765, t764, -t776, t712, -t737, -t689, -t728, -t736, -t727, -t758, t628, t632, t613, t603, -t661, -t635, -t645, -t660, -t646, -t675, t595, t597, t593, t590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t887, t888, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t874, t868, t813, t842, t826, t843, t835, t840, 0, t762, t763, t757, t711, t739, t691, t731, t738, t730, t759, t627, t631, t612, t602, t663, t636, t647, t662, t648, t676, t594, t596, t592, t589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t861, -t853, 0, t842, t826, t843, t835, t840, 0, -pkin(6) * t837 - t1014, -pkin(6) * t839 - t831, pkin(6) * t880 - t782, -pkin(6) * t782, t739, t691, t731, t738, t730, t759, -pkin(6) * t704 + t970, -pkin(6) * t729 + t969, -pkin(6) * t690 + t971, -pkin(6) * t633 + t941, t663, t636, t647, t662, t648, t676, -pkin(6) * t637 + t973, -pkin(6) * t641 + t972, -pkin(6) * t629 + t974, -pkin(6) * t604 + t975; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t919, 0, 0, 0, t861, 0, -g(3), 0, -t894, -t884, -t899, t894, t993, -qJDD(3), t921, t943, t1029, -t1031, -t1024, -t819, -t806, t1024, -t804, -qJDD(3), t936 + t990, t854 + t945, t976, t977, -t742, -t685, -t721, t740, -t722, -t760, t939, t938, t934, t946; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t919, qJDD(1), 0, 0, 0, t853, g(3), 0, 0, t849, t825, t838, t848, t836, -t875, pkin(6) * t841 - t952, pkin(6) * t844 - t951, t776, pkin(6) * t783 + t1030, t737, t689, t728, t736, t727, t758, pkin(6) * t705 - t928, pkin(6) * t732 - t927, pkin(6) * t692 - t929, pkin(6) * t634 - t926, t661, t635, t645, t660, t646, t675, pkin(6) * t638 - t931, pkin(6) * t642 - t930, pkin(6) * t630 - t932, pkin(6) * t605 - t933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t878, -t877, t886, t979, t890, -t979, 0, -t847, -t827, 0, t798, t755, t790, t796, t789, t810, t720, t735, t652, -qJ(4) * t668, t703, t671, t682, t702, t683, t726, t617, t619, t610, t601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t978, t879, t892, t937, t885, -t978, t847, 0, -t828, 0, t797, t753, t787, t795, t786, t809, t698, t699, t650, t659, t701, t670, t680, t700, t681, t725, t614, t615, t608, t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t894, t884, t899, -t894, -t993, qJDD(3), t827, t828, 0, 0, t1024, t819, t806, -t1024, t804, qJDD(3), t856 + t953, t855 + t981, t752, t667, t742, t685, t721, -t740, t722, t760, t958, t959, t950, t982; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t824, -t802, t1037, t1000, t850, -t1000, 0, -t794, t717, 0, t743, t687, t723, t741, t724, t761, t657, t658, t620, -pkin(7) * t625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t858, -t1038, t851, -t964, t817, -t858, t794, 0, t718, 0, -t801, -t799, -t750, t801, t746, -t820, t643, t644, -pkin(4) * t686, -pkin(4) * t625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1024, t819, t806, -t1024, t804, qJDD(3), -t717, -t718, 0, 0, t742, t685, t721, -t740, t722, t760, t983, t984, t960, t1004; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t779, t747, t1034, t811, t807, -t811, 0, t696, t655, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t812, t749, t808, -t940, t767, -t812, -t696, 0, t656, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t801, t799, t750, -t801, -t746, t820, -t655, -t656, 0, 0;];
m_new_reg = t1;
