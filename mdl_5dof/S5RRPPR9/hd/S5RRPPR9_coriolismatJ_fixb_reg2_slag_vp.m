% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:42
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPPR9_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR9_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR9_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRPPR9_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:41:53
% EndTime: 2019-12-31 19:41:58
% DurationCPUTime: 2.68s
% Computational Cost: add. (1762->235), mult. (3022->298), div. (0->0), fcn. (2528->4), ass. (0->180)
t127 = qJ(3) + pkin(4);
t129 = sin(qJ(2));
t131 = cos(qJ(2));
t235 = pkin(2) + pkin(3);
t176 = pkin(7) + t235;
t153 = t176 * t131;
t238 = t127 * t129 + t153;
t206 = t176 * t129;
t237 = t235 * t131;
t200 = t131 * t127;
t128 = sin(qJ(5));
t130 = cos(qJ(5));
t202 = t130 * t131;
t169 = t128 * t202;
t154 = 0.2e1 * t169;
t123 = t128 ^ 2;
t125 = t130 ^ 2;
t98 = t125 - t123;
t137 = qJD(1) * t154 - qJD(2) * t98;
t234 = -t125 / 0.2e1;
t233 = t131 * pkin(6);
t203 = t129 * t130;
t119 = t131 * qJ(4);
t92 = -t119 + t233;
t217 = t92 * t131;
t90 = (pkin(6) - qJ(4)) * t129;
t40 = t128 * t90 - t130 * (pkin(1) + t238);
t229 = t129 * t40;
t204 = t129 * qJ(3);
t156 = pkin(1) + t204;
t226 = t130 * t90;
t41 = t226 + (pkin(4) * t129 + t153 + t156) * t128;
t8 = t128 * t229 + t203 * t41 + t217;
t232 = qJD(1) * t8;
t228 = t129 * t41;
t219 = t92 * t128;
t57 = t200 - t206;
t227 = t130 * t57;
t42 = -t219 + t227;
t218 = t92 * t130;
t230 = t128 * t57;
t43 = t218 + t230;
t1 = (t131 * t42 + t229) * t130 + (t131 * t43 - t228) * t128;
t231 = t1 * qJD(1);
t2 = -t40 * t42 + t41 * t43 - t90 * t92;
t225 = t2 * qJD(1);
t4 = t129 * t42 - t131 * t40 + (t129 * t92 + t131 * t90) * t128;
t224 = t4 * qJD(1);
t223 = t42 * t128;
t222 = t43 * t130;
t5 = t129 * t43 - t92 * t203 + (t41 - t226) * t131;
t221 = t5 * qJD(1);
t135 = -(t234 - t123 / 0.2e1) * t206 - t200 / 0.2e1;
t142 = -t42 * t130 / 0.2e1 - t43 * t128 / 0.2e1;
t7 = t135 + t142;
t220 = t7 * qJD(1);
t13 = (t128 * t41 - t130 * t40) * t129;
t216 = qJD(1) * t13;
t23 = -t128 * t217 - t229;
t215 = qJD(1) * t23;
t24 = -t202 * t92 - t228;
t214 = qJD(1) * t24;
t68 = t156 + t237;
t201 = t131 * qJ(3);
t70 = -t129 * t235 + t201;
t44 = t129 * t70 + t131 * t68;
t213 = qJD(1) * t44;
t45 = -t129 * t68 + t131 * t70;
t212 = qJD(1) * t45;
t52 = t129 * t90 + t217;
t211 = qJD(1) * t52;
t126 = t131 ^ 2;
t109 = t128 * t126;
t124 = t129 ^ 2;
t205 = t124 * t128;
t78 = -t109 + t205;
t210 = qJD(1) * t78;
t99 = t126 - t124;
t81 = t99 * t130;
t209 = qJD(1) * t81;
t79 = (t123 + t125) * t129;
t207 = qJD(4) * t79;
t22 = t68 * t70;
t199 = t22 * qJD(1);
t147 = -pkin(2) * t131 - t204;
t87 = -pkin(1) + t147;
t91 = t129 * pkin(2) - t201;
t46 = t129 * t91 + t131 * t87;
t198 = t46 * qJD(1);
t47 = -t129 * t87 + t131 * t91;
t197 = t47 * qJD(1);
t175 = -pkin(2) / 0.2e1 - pkin(3) / 0.2e1;
t58 = t201 + (-t235 / 0.2e1 + t175) * t129;
t196 = t58 * qJD(1);
t59 = t131 * t79;
t195 = t59 * qJD(1);
t69 = (t123 / 0.2e1 + t234) * t131;
t194 = t69 * qJD(5);
t77 = t109 + t205;
t193 = t77 * qJD(1);
t192 = t79 * qJD(1);
t97 = t124 + t126;
t80 = t97 * t130;
t191 = t80 * qJD(1);
t190 = t97 * qJD(1);
t189 = t99 * qJD(1);
t93 = t99 * qJD(2);
t188 = qJD(3) * t128;
t187 = qJD(3) * t129;
t186 = qJD(3) * t130;
t185 = qJD(4) * t131;
t184 = qJD(5) * t128;
t183 = qJD(5) * t129;
t182 = qJD(5) * t130;
t114 = t124 * qJD(1);
t113 = t124 * qJD(3);
t181 = t128 * qJD(2);
t116 = t129 * qJD(1);
t115 = t129 * qJD(2);
t180 = t130 * qJD(2);
t179 = t131 * qJD(1);
t117 = t131 * qJD(2);
t178 = t131 * qJD(3);
t177 = t131 * qJD(5);
t174 = pkin(1) * t116;
t173 = pkin(1) * t179;
t172 = pkin(6) * t115;
t171 = pkin(6) * t117;
t170 = t87 * t91 * qJD(1);
t168 = t87 * t116;
t167 = t128 * t114;
t166 = t128 * t180;
t165 = t128 * t117;
t164 = t130 * t117;
t163 = t129 * t178;
t162 = t129 * t182;
t161 = t129 * t177;
t160 = t128 * t182;
t159 = t128 * t116;
t158 = t128 * t179;
t103 = t129 * t117;
t102 = t129 * t179;
t157 = t130 * t179;
t155 = -0.2e1 * t169;
t152 = qJD(5) + t116;
t151 = t126 * t160;
t150 = -t119 / 0.2e1 + t233 / 0.2e1;
t149 = qJD(2) * t154;
t146 = -t222 + t223;
t143 = t223 / 0.2e1 - t222 / 0.2e1;
t11 = t143 + t150;
t145 = qJD(1) * t11 + qJD(2) * t127;
t144 = t152 * t131;
t141 = -t206 / 0.2e1 + t200 / 0.2e1;
t136 = t57 / 0.2e1 + t141;
t30 = t136 * t130;
t140 = qJD(1) * t30 + t127 * t181;
t29 = t136 * t128;
t139 = -qJD(1) * t29 + t127 * t180;
t56 = -qJD(1) * t69 + t166;
t48 = qJD(1) * t109 * t130 + qJD(2) * t69;
t76 = t98 * t126;
t138 = qJD(1) * t76 + t149;
t134 = qJD(2) * t147 + t178;
t133 = qJD(2) * t238 - t178;
t122 = qJ(3) * qJD(3);
t121 = qJD(2) * qJ(3);
t107 = t117 / 0.2e1;
t105 = t128 * t183;
t104 = t130 * t116;
t82 = t92 * qJD(2);
t74 = -t104 - t182;
t73 = t152 * t128;
t72 = t102 + t177 / 0.2e1;
t61 = (t235 / 0.2e1 + t175) * t129;
t26 = -t219 + t227 / 0.2e1 - t141 * t130;
t25 = -t218 - t230 / 0.2e1 + t141 * t128;
t10 = -t143 + t150;
t6 = t135 - t142;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, t93, 0, -t103, 0, 0, -pkin(1) * t115, -pkin(1) * t117, 0, 0, t103, 0, -t93, 0, 0, -t103, -qJD(2) * t47 + t163, 0, -qJD(2) * t46 + t113, (qJD(2) * t91 - t187) * t87, -t103, t93, 0, t103, 0, 0, qJD(2) * t44 + t113, -qJD(2) * t45 - t163, qJD(4) * t97, qJD(2) * t22 - qJD(4) * t52 + t187 * t68, -t103 * t125 - t151, -qJD(5) * t76 + t129 * t149, -qJD(2) * t81 + t128 * t161, -t103 * t123 + t151, -qJD(2) * t78 + t130 * t161, t103, qJD(2) * t4 + qJD(4) * t77 + qJD(5) * t24 + t113 * t130, -qJD(2) * t5 + qJD(4) * t80 - qJD(5) * t23 - t113 * t128, qJD(2) * t1 + qJD(3) * t59, qJD(2) * t2 + qJD(3) * t13 - qJD(4) * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, t189, t117, -t102, -t115, 0, -t171 - t174, t172 - t173, 0, 0, t102, t117, -t189, 0, t115, -t102, -t171 - t197, t134, -t172 - t198, pkin(6) * t134 + t170, -t102, t189, -t115, t102, t117, 0, -qJD(2) * t90 + t213, t82 - t212, (t204 + t237) * qJD(2) - t178, t199 + (-qJ(3) * t90 - t235 * t92) * qJD(2) + t92 * qJD(3) + t61 * qJD(4), -t194 + (-t125 * t179 - t166) * t129, qJD(5) * t155 + t129 * t137, -t165 - t209, t194 + (-t123 * t179 + t166) * t129, -t164 - t210, t72, t26 * qJD(5) + t128 * t133 - t180 * t90 + t224, t25 * qJD(5) + t130 * t133 + t181 * t90 - t221, qJD(2) * t146 + t231, t225 + (-t127 * t90 + t146 * t176) * qJD(2) + t10 * qJD(3) + t6 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, t117, t114, -t168 + t171, 0, 0, 0, 0, 0, 0, t114, -t102, -t117, t116 * t68 + t82, 0, 0, 0, 0, 0, 0, t114 * t130 - t165, -t164 - t167, t195, qJD(2) * t10 + t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190, qJD(2) * t61 - t211, 0, 0, 0, 0, 0, 0, t193, t191, 0, qJD(2) * t6 - t232; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, -t138, t128 * t144, t48, t130 * t144, t107, qJD(2) * t26 - qJD(5) * t41 + t214, qJD(2) * t25 + qJD(5) * t40 - t215, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, -t189, 0, t102, 0, 0, t174, t173, 0, 0, -t102, 0, t189, 0, 0, t102, t197, 0, t198, -t170, t102, -t189, 0, -t102, 0, 0, -t185 - t213, -qJD(4) * t129 + t212, 0, -qJD(4) * t58 - t199, t102 * t125 - t194, t152 * t155, -t162 + t209, t102 * t123 + t194, t105 + t210, -t72, -qJD(5) * t30 - t130 * t185 - t224, qJD(5) * t29 + t128 * t185 + t221, t207 - t231, qJD(3) * t11 + qJD(4) * t7 - t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t122, 0, 0, 0, 0, 0, 0, qJD(3), 0, 0, t122, t160, t98 * qJD(5), 0, -t160, 0, 0, -t127 * t184 + t186, -t127 * t182 - t188, 0, t127 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t121, 0, 0, 0, 0, 0, 0, qJD(2), 0, 0, t121, 0, 0, 0, 0, 0, 0, t180, -t181, 0, t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t179, -t116, 0, -t196, 0, 0, 0, 0, 0, 0, -t157, t158, t192, t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, -t137, t74, -t56, t73, -t179 / 0.2e1, t176 * t182 - t140, -t176 * t184 - t139, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, 0, -t114, t168, 0, 0, 0, 0, 0, 0, -t114, t102, 0, (-qJD(1) * t68 - qJD(4)) * t129, 0, 0, 0, 0, 0, 0, (-t114 - t183) * t130, t105 + t167, -t195, -qJD(2) * t11 - t207 - t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t121, 0, 0, 0, 0, 0, 0, -qJD(2), 0, 0, -t121, 0, 0, 0, 0, 0, 0, -t180, t181, 0, -t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t73, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, t115, -t190, qJD(2) * t58 + t187 + t211, 0, 0, 0, 0, 0, 0, -t105 + t164 - t193, -t162 - t165 - t191, -t79 * qJD(2), -qJD(2) * t7 + qJD(3) * t79 + t232; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, t116, 0, t196, 0, 0, 0, 0, 0, 0, t157, -t158, -t192, -t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, t74, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, t138, (-t158 + t180) * t129, -t48, (-t157 - t181) * t129, t107, -t214 + qJD(2) * t30 + (qJD(4) * t128 + t186) * t129, t215 - qJD(2) * t29 + (qJD(4) * t130 - t188) * t129, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, t137, t104, t56, -t159, t179 / 0.2e1, t140, t139, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t159, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, t104, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t3;
