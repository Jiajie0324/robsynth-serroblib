% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR15
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:43
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR15_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR15_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR15_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRR15_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:43:14
% EndTime: 2019-12-31 20:43:29
% DurationCPUTime: 9.50s
% Computational Cost: add. (9373->490), mult. (17277->658), div. (0->0), fcn. (16998->6), ass. (0->374)
t380 = sin(qJ(2));
t594 = -t380 / 0.2e1;
t379 = sin(qJ(4));
t383 = -pkin(2) - pkin(7);
t618 = pkin(8) - t383;
t322 = t618 * t379;
t378 = sin(qJ(5));
t381 = cos(qJ(4));
t448 = t618 * t381;
t592 = cos(qJ(5));
t445 = -t378 * t322 + t592 * t448;
t604 = t445 / 0.2e1;
t485 = qJD(4) + qJD(5);
t255 = -t592 * t322 - t378 * t448;
t469 = t592 * t379;
t542 = t378 * t381;
t314 = t469 + t542;
t382 = cos(qJ(2));
t288 = t314 * t382;
t370 = t382 * pkin(6);
t371 = t382 * pkin(3);
t338 = t370 + t371;
t535 = t381 * t382;
t299 = pkin(4) * t535 + t338;
t358 = t379 * pkin(4) + qJ(3);
t630 = t358 / 0.2e1;
t468 = t592 * t381;
t543 = t378 * t379;
t317 = t468 - t543;
t631 = -t317 / 0.2e1;
t635 = t255 * t594 - t288 * t630 - t299 * t631;
t342 = t382 * t468;
t538 = t379 * t382;
t286 = t378 * t538 - t342;
t633 = -t299 * t314 / 0.2e1 + t286 * t630 + t380 * t604;
t600 = t317 / 0.2e1;
t601 = t314 / 0.2e1;
t139 = t286 * t600 + t288 * t601;
t634 = t485 * t139;
t605 = pkin(3) + pkin(6);
t476 = t381 * t605;
t541 = t379 * qJ(3);
t419 = -t476 - t541;
t433 = t618 * t382 + pkin(1);
t384 = t433 * t379 + (pkin(4) - t419) * t380;
t164 = t592 * t384;
t536 = t381 * qJ(3);
t616 = t379 * t605;
t398 = (-t536 + t616) * t380;
t588 = t382 * pkin(2);
t423 = -t382 * pkin(7) - pkin(1) - t588;
t199 = -pkin(8) * t535 + t381 * t423 + t398;
t545 = t378 * t199;
t110 = -t164 + t545;
t537 = t380 * qJ(3);
t198 = t380 * t476 + (t433 + t537) * t379;
t472 = t592 * t198;
t115 = t472 - t545;
t612 = t110 + t115;
t534 = t382 * qJ(3);
t334 = t380 * pkin(2) - t534;
t310 = t380 * pkin(7) + t334;
t295 = t381 * t310;
t320 = t338 * t379;
t252 = t295 + t320;
t590 = pkin(8) * t380;
t203 = t381 * t590 + t252;
t470 = t592 * t203;
t436 = -t470 / 0.2e1;
t321 = t338 * t381;
t587 = t382 * pkin(4);
t183 = t587 + t321 + (-t310 - t590) * t379;
t547 = t378 * t183;
t404 = -t547 / 0.2e1 + t436;
t37 = t404 - t633;
t473 = t592 * t183;
t544 = t378 * t203;
t403 = -t544 / 0.2e1 + t473 / 0.2e1;
t39 = t403 + t635;
t36 = t403 - t635;
t603 = -t255 / 0.2e1;
t632 = t255 / 0.2e1;
t471 = t592 * t199;
t546 = t378 * t198;
t114 = -t471 - t546;
t418 = t612 * t601;
t341 = t380 * t468;
t539 = t379 * t380;
t285 = t378 * t539 - t341;
t287 = t314 * t380;
t483 = t592 / 0.2e1;
t596 = t378 / 0.2e1;
t619 = (t285 * t596 + t287 * t483) * pkin(4);
t627 = t114 * t600 + t418 + t619;
t305 = t317 * qJD(5);
t455 = -t543 / 0.2e1;
t599 = t341 / 0.2e1;
t395 = t599 + (t455 + t600) * t380;
t609 = t395 * qJD(1);
t626 = -t317 * qJD(4) - t305 - t609;
t111 = t384 * t378 + t471;
t620 = t111 / 0.2e1;
t9 = t619 - (t620 + t114 / 0.2e1) * t317 - t418;
t427 = t285 * t314 + t287 * t317;
t625 = qJD(3) * t427;
t496 = t317 * qJD(2);
t624 = -t139 * qJD(1) + t314 * t496;
t518 = qJD(1) * t288;
t623 = -t139 * qJD(2) + t286 * t518;
t622 = t485 * t445;
t621 = t485 * t255;
t443 = t485 * t314;
t617 = t317 * t443;
t533 = t382 * t383;
t454 = t378 * t594;
t392 = t317 * t594 + t379 * t454 + t599;
t615 = t392 * t485;
t614 = t395 * t485;
t582 = pkin(4) * qJD(4);
t613 = (t592 * t314 - t317 * t378) * t582;
t435 = -pkin(1) + t533;
t245 = t379 * t435 + t380 * t419;
t246 = t381 * t435 + t398;
t121 = (t245 * t379 + t246 * t381) * t380;
t607 = t286 * t604 + t288 * t632;
t374 = t379 ^ 2;
t376 = t381 ^ 2;
t348 = t374 - t376;
t487 = t382 * qJD(1);
t467 = t381 * t487;
t400 = t348 * qJD(2) + 0.2e1 * t379 * t467;
t602 = -t445 / 0.2e1;
t598 = t342 / 0.2e1;
t597 = -t378 / 0.2e1;
t595 = t379 / 0.2e1;
t593 = t381 / 0.2e1;
t591 = pkin(4) * t381;
t589 = t378 * pkin(4);
t586 = qJD(4) / 0.2e1;
t450 = t602 + t604;
t451 = t632 + t603;
t43 = t450 * t314 + t451 * t317;
t585 = t43 * qJD(4);
t577 = t111 * t317;
t86 = -t577 / 0.2e1;
t477 = t86 + t607;
t85 = t577 / 0.2e1;
t6 = t85 + t477 - t607;
t581 = t6 * qJD(1);
t580 = t6 * qJD(2);
t101 = -t286 * t314 + t317 * t288;
t579 = t485 * t101;
t15 = t85 + t86;
t578 = qJD(3) * t15;
t112 = t473 - t544;
t576 = t112 * t317;
t113 = t470 + t547;
t575 = t113 * t314;
t29 = -t110 * t287 + t111 * t285;
t12 = t112 * t288 + t113 * t286 - t29;
t574 = t12 * qJD(1);
t13 = (t111 + t114) * t288 + t612 * t286;
t573 = t13 * qJD(1);
t572 = t15 * qJD(1);
t298 = (-t591 - t605) * t380;
t16 = -t110 * t112 + t111 * t113 + t299 * t298;
t571 = t16 * qJD(1);
t484 = pkin(4) * t538;
t17 = -t110 * t114 + t111 * t115 - t299 * t484;
t570 = t17 * qJD(1);
t21 = -t110 * t382 + t112 * t380 + t299 * t285 - t298 * t286;
t569 = t21 * qJD(1);
t22 = t111 * t382 + t113 * t380 - t299 * t287 + t298 * t288;
t568 = t22 * qJD(1);
t540 = t379 * t310;
t250 = t321 - t540;
t567 = t250 * t381;
t566 = t252 * t379;
t559 = t285 * t255;
t558 = t287 * t445;
t557 = t29 * qJD(1);
t556 = t299 * t288;
t553 = t299 * t381;
t453 = -t538 / 0.2e1;
t32 = (t423 * t595 + pkin(8) * t453 + t198 / 0.2e1 + (-pkin(4) - t541 / 0.2e1 - t476 / 0.2e1) * t380) * t378;
t552 = t32 * qJD(1);
t407 = -t164 / 0.2e1 + t592 * pkin(4) * t594;
t34 = t472 / 0.2e1 + t407;
t551 = t34 * qJD(1);
t548 = t358 * t314;
t48 = -t250 * t538 + t252 * t535 - t121;
t532 = t48 * qJD(1);
t49 = t114 * t380 + t286 * t484 - t556;
t531 = t49 * qJD(1);
t225 = t299 * t286;
t50 = t115 * t380 - t288 * t484 - t225;
t530 = t50 * qJD(1);
t475 = t605 * t380;
t51 = -t245 * t250 + t246 * t252 - t338 * t475;
t529 = t51 * qJD(1);
t63 = -t110 * t380 - t225;
t528 = t63 * qJD(1);
t64 = -t111 * t380 - t556;
t527 = t64 * qJD(1);
t474 = t605 * t382;
t93 = -t245 * t382 + (t250 + (-t474 - t338) * t381) * t380;
t526 = t93 * qJD(1);
t94 = t246 * t382 - t338 * t539 + (-t379 * t474 + t252) * t380;
t525 = t94 * qJD(1);
t402 = t469 / 0.2e1 + t542 / 0.2e1;
t214 = t314 * t594 + t402 * t380;
t522 = t485 * t214;
t211 = (t601 + t402) * t380;
t521 = t485 * t211;
t375 = t380 ^ 2;
t377 = t382 ^ 2;
t349 = t377 - t375;
t519 = qJD(1) * t286;
t517 = qJD(1) * t380;
t516 = qJD(1) * t381;
t515 = qJD(3) * t380;
t514 = qJD(3) * t381;
t513 = qJD(4) * t379;
t512 = qJD(4) * t380;
t511 = qJD(4) * t381;
t510 = qJD(4) * t383;
t509 = t121 * qJD(1);
t122 = t285 * t286 + t287 * t288;
t508 = t122 * qJD(1);
t123 = t288 * t285 + t287 * t286;
t507 = t123 * qJD(1);
t146 = -t245 * t380 + t338 * t535;
t506 = t146 * qJD(1);
t147 = -t246 * t380 - t338 * t538;
t505 = t147 * qJD(1);
t173 = -t285 * t380 + t286 * t382;
t504 = t173 * qJD(1);
t174 = t287 * t380 - t288 * t382;
t503 = t174 * qJD(1);
t191 = t211 * qJD(1);
t434 = -t537 - t588;
t323 = -pkin(1) + t434;
t261 = t323 * t382 + t334 * t380;
t502 = t261 * qJD(1);
t262 = -t323 * t380 + t334 * t382;
t501 = t262 * qJD(1);
t289 = (t374 + t376) * t382 * t380;
t500 = t289 * qJD(1);
t308 = (t376 / 0.2e1 - t374 / 0.2e1) * t382;
t499 = t308 * qJD(4);
t498 = t314 * qJD(2);
t316 = t349 * t379;
t497 = t316 * qJD(1);
t319 = t349 * t381;
t495 = t319 * qJD(1);
t494 = t349 * qJD(1);
t493 = t358 * qJD(2);
t492 = t375 * qJD(1);
t491 = t375 * qJD(3);
t490 = t379 * qJD(2);
t489 = t380 * qJD(2);
t488 = t381 * qJD(2);
t367 = t382 * qJD(2);
t486 = t382 * qJD(3);
t482 = pkin(1) * t517;
t481 = pkin(1) * t487;
t480 = pkin(6) * t489;
t479 = -t591 / 0.2e1;
t478 = t587 / 0.2e1;
t466 = t379 * t512;
t465 = t380 * t511;
t464 = t285 * t517;
t462 = t287 * t517;
t460 = t323 * t334 * qJD(1);
t459 = t323 * t517;
t458 = t379 * t367;
t354 = t380 * t367;
t353 = t380 * t487;
t457 = t379 * t511;
t456 = t379 * t488;
t449 = t370 / 0.2e1 + t371 / 0.2e1;
t447 = t592 * qJD(4);
t446 = t592 * qJD(5);
t416 = -t567 / 0.2e1 - t566 / 0.2e1;
t117 = t416 + t449;
t372 = qJD(2) * qJ(3);
t444 = t117 * qJD(1) + t372;
t442 = t485 * t380;
t441 = pkin(4) * t453;
t440 = qJD(4) + t517;
t439 = t377 * t457;
t437 = t382 * t456;
t3 = -t450 * t286 - t451 * t288 - t9;
t432 = t3 * qJD(1);
t431 = -t9 * qJD(1) + t43 * qJD(2);
t430 = qJD(5) + t440;
t428 = t566 + t567;
t387 = t559 / 0.2e1 - t558 / 0.2e1 + t381 * t478 + t449;
t417 = -t576 / 0.2e1 - t575 / 0.2e1;
t20 = t387 + t417;
t426 = -t20 * qJD(1) - t493;
t204 = t314 * t591 + t358 * t317;
t26 = (t286 * t593 + (t314 * t595 + t483) * t382) * pkin(4) + t36;
t425 = t26 * qJD(1) - t204 * qJD(2);
t205 = t317 * t591 - t548;
t25 = (t288 * t593 + (t317 * t595 + t597) * t382) * pkin(4) + t37;
t424 = t25 * qJD(1) - t205 * qJD(2);
t142 = t286 ^ 2 - t288 ^ 2;
t46 = t142 * qJD(1) + t101 * qJD(2);
t184 = t314 ^ 2 - t317 ^ 2;
t52 = t101 * qJD(1) + t184 * qJD(2);
t210 = t598 + (t455 + t631) * t382;
t422 = t210 * qJD(1) + t498;
t212 = (t601 - t402) * t382;
t421 = t212 * qJD(1) + t496;
t420 = -t492 - t512;
t415 = t383 * t594 - t534 / 0.2e1;
t413 = t37 * qJD(1) + t314 * t493;
t412 = t36 * qJD(1) - t317 * t493;
t411 = t440 * t538;
t220 = (t310 / 0.2e1 + t415) * t379;
t410 = -qJ(3) * t488 - t220 * qJD(1);
t397 = t415 * t381;
t221 = t295 / 0.2e1 + t397;
t409 = qJ(3) * t490 - t221 * qJD(1);
t267 = t308 * qJD(1) + t456;
t406 = t112 * t483 + t113 * t596;
t263 = t379 * t377 * t516 - t308 * qJD(2);
t318 = t348 * t377;
t401 = -t318 * qJD(1) + 0.2e1 * t437;
t388 = t114 * t604 + t445 * t620 + t612 * t603;
t1 = (t538 * t630 - t553 / 0.2e1 + t406) * pkin(4) + t388;
t61 = t358 * t591;
t399 = -t1 * qJD(1) + t61 * qJD(2) + t43 * qJD(3);
t389 = qJD(2) * t434 + t486;
t373 = qJ(3) * qJD(3);
t366 = pkin(6) * t367;
t362 = -t487 / 0.2e1;
t361 = t487 / 0.2e1;
t360 = t367 / 0.2e1;
t356 = t381 * t367;
t355 = t380 * t516;
t352 = t379 * t517;
t335 = t349 * qJD(2);
t313 = -t355 - t511;
t312 = -t352 - t513;
t311 = t382 * t586 + t353;
t280 = t353 + (t586 + qJD(5) / 0.2e1) * t382;
t213 = -t288 / 0.2e1 - t402 * t382;
t209 = t378 * t453 + t382 * t600 + t598;
t197 = t392 * qJD(3);
t194 = t214 * qJD(3);
t190 = t211 * qJD(3);
t187 = t395 * qJD(3);
t158 = -t320 - t295 / 0.2e1 + t397;
t157 = t321 - t540 / 0.2e1 + t415 * t379;
t141 = qJD(2) * t395 - t288 * t517;
t140 = t211 * qJD(2) - t286 * t517;
t130 = -t443 - t191;
t116 = -t416 + t449;
t90 = qJD(2) * t392 + t288 * t430;
t89 = t214 * qJD(2) + t286 * t430;
t38 = t404 + t633;
t35 = t545 - t472 / 0.2e1 + t407;
t33 = pkin(4) * t454 - t471 + t384 * t597 - t546 / 0.2e1;
t28 = t288 * t479 + t317 * t441 + t436 + (-t587 / 0.2e1 - t183 / 0.2e1) * t378 + t633;
t27 = t286 * t479 + t314 * t441 + t592 * t478 + t39;
t19 = t387 - t417;
t14 = t15 * qJD(5);
t10 = t85 + t627;
t5 = t6 * qJD(5);
t4 = t286 * t602 + t288 * t603 + t477 - t627;
t2 = t358 * t441 - t388 + (t553 / 0.2e1 + t406) * pkin(4);
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, t335, 0, -t354, 0, 0, -pkin(1) * t489, -pkin(1) * t367, 0, 0, 0, 0, 0, t354, t335, -t354, 0, t262 * qJD(2) - t380 * t486, -t261 * qJD(2) + t491, (qJD(2) * t334 - t515) * t323, -t354 * t374 + t439, -t318 * qJD(4) - 0.2e1 * t380 * t437, -t316 * qJD(2) - t382 * t465, -t354 * t376 - t439, -t319 * qJD(2) + t382 * t466, t354, t93 * qJD(2) + t147 * qJD(4) + t379 * t491, -t94 * qJD(2) - t146 * qJD(4) + t381 * t491, -t48 * qJD(2) + t289 * qJD(3), t51 * qJD(2) - t121 * qJD(3), (-qJD(2) * t287 - t286 * t485) * t288, t123 * qJD(2) + t142 * t485, t174 * qJD(2) + t286 * t442, (-qJD(2) * t285 + t288 * t485) * t286, t173 * qJD(2) + t288 * t442, t354, t21 * qJD(2) + t49 * qJD(4) + t64 * qJD(5) + t287 * t515, -t22 * qJD(2) - t50 * qJD(4) - t63 * qJD(5) - t285 * t515, t12 * qJD(2) + t122 * qJD(3) + t13 * qJD(4), qJD(2) * t16 + qJD(3) * t29 + qJD(4) * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t353, t494, t367, -t353, -t489, 0, -t366 - t482, t480 - t481, 0, 0, 0, -t367, t489, t353, t494, -t353, t389, t366 + t501, -t480 - t502, pkin(6) * t389 + t460, -t499 + (-t374 * t487 + t456) * t380, -t400 * t380 + 0.2e1 * t382 * t457, t356 - t497, t499 + (-t376 * t487 - t456) * t380, -t458 - t495, t311, t526 + (t381 * t533 + (-t536 - t616) * t380) * qJD(2) + t381 * t486 + t157 * qJD(4), -t525 + (-t379 * t533 + (t541 - t476) * t380) * qJD(2) - t379 * t486 + t158 * qJD(4), -qJD(2) * t428 - t532, t529 + (-qJ(3) * t475 + t383 * t428) * qJD(2) + t116 * qJD(3), (t496 - t518) * t287 + t634, t507 + (-t317 * t285 - t287 * t314) * qJD(2) + t579, t317 * t367 + t503 + t522, (t498 - t519) * t285 - t634, -t314 * t367 + t504 + t615, t280, t569 + (t358 * t285 + t298 * t314 - t382 * t445) * qJD(2) + t209 * qJD(3) + t27 * qJD(4) + t39 * qJD(5), -t568 + (-t255 * t382 + t358 * t287 + t298 * t317) * qJD(2) + t213 * qJD(3) + t28 * qJD(4) + t38 * qJD(5), t574 + (t558 - t559 - t575 - t576) * qJD(2) - t625 + t4 * qJD(4) + t5, t571 + (-t112 * t445 + t113 * t255 + t298 * t358) * qJD(2) + t19 * qJD(3) + t2 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367, -t353, t492, t366 - t459, 0, 0, 0, 0, 0, 0, t379 * t492 + t356, t381 * t492 - t458, t500, t116 * qJD(2) - t509, 0, 0, 0, 0, 0, 0, t209 * qJD(2) + t462 + t522, t213 * qJD(2) - t464 + t615, -qJD(2) * t427 + t508, t19 * qJD(2) + t10 * qJD(4) + t14 + t557 + t625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, t401, -t440 * t535, -t263, t411, t360, t157 * qJD(2) - t246 * qJD(4) + t505, t158 * qJD(2) + t245 * qJD(4) - t506, 0, 0, -t623, t46, t89, t623, t90, t360, t27 * qJD(2) + t114 * qJD(4) + t33 * qJD(5) + t194 + t531, t28 * qJD(2) - t115 * qJD(4) + t35 * qJD(5) + t197 - t530, t573 + t4 * qJD(2) + (-t286 * t592 + t288 * t378) * t582, t570 + t2 * qJD(2) + t10 * qJD(3) + (t114 * t592 + t115 * t378) * t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t623, t46, t89, t623, t90, t360, t39 * qJD(2) + t33 * qJD(4) - t111 * qJD(5) + t194 + t527, t38 * qJD(2) + t35 * qJD(4) + t110 * qJD(5) + t197 - t528, t580, t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t353, -t494, 0, t353, 0, 0, t482, t481, 0, 0, 0, 0, 0, -t353, -t494, t353, 0, -t501, t502, -t460, t353 * t374 - t499, 0.2e1 * t381 * t411, -t466 + t497, t353 * t376 + t499, -t465 + t495, -t311, t220 * qJD(4) - t526, t221 * qJD(4) + t525, t532, t117 * qJD(3) - t529, t287 * t518 + t634, -t507 + t579, -t503 - t521, t285 * t519 - t634, -t504 - t614, -t280, t210 * qJD(3) - t26 * qJD(4) - t36 * qJD(5) - t569, t212 * qJD(3) - t25 * qJD(4) - t37 * qJD(5) + t568, -qJD(4) * t3 + t5 - t574, qJD(3) * t20 - qJD(4) * t1 - t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t373, -t457, t348 * qJD(4), 0, t457, 0, 0, qJ(3) * t511 + qJD(3) * t379, -qJ(3) * t513 + t514, 0, t373, -t617, t485 * t184, 0, t617, 0, 0, t314 * qJD(3) + t204 * qJD(4) + t305 * t358, t317 * qJD(3) + t205 * qJD(4) - qJD(5) * t548, 0, t358 * qJD(3) + t61 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t372, 0, 0, 0, 0, 0, 0, t490, t488, 0, t444, 0, 0, 0, 0, 0, 0, t422, t421, 0, -t426 + t585; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267, t400, t312, t267, t313, t362, -t379 * t510 - t410, -t381 * t510 - t409, 0, 0, -t624, t52, t130, t624, t626, t362, -t425 - t621, -t424 + t622, -t432 + t613, (-t255 * t592 - t378 * t445) * t582 + t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t624, t52, t130, t624, t626, t362, -t412 - t621, -t413 + t622, t581, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t353, -t492, t459, 0, 0, 0, 0, 0, 0, t420 * t379, t420 * t381, -t500, -t117 * qJD(2) + t509, 0, 0, 0, 0, 0, 0, -t210 * qJD(2) - t462 - t521, -t212 * qJD(2) + t464 - t614, -t508, -qJD(2) * t20 - qJD(4) * t9 + t14 - t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t372, 0, 0, 0, 0, 0, 0, -t490, -t488, 0, -t444, 0, 0, 0, 0, 0, 0, -t422, -t421, 0, t426 + t585; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, t313, 0, 0, 0, 0, 0, 0, 0, 0, t130, t626, 0, t431 - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, t626, 0, t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263, -t401, (t467 + t490) * t380, t263, (-t379 * t487 + t488) * t380, t360, -t220 * qJD(2) + t379 * t515 - t505, -t221 * qJD(2) + t380 * t514 + t506, 0, 0, t623, -t46, t140, -t623, t141, t360, t26 * qJD(2) + t32 * qJD(5) + t190 - t531, t25 * qJD(2) + t34 * qJD(5) + t187 + t530, t3 * qJD(2) - t573, qJD(2) * t1 + qJD(3) * t9 - t570; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, -t400, t352, -t267, t355, t361, t410, t409, 0, 0, t624, -t52, t191, -t624, t609, t361, t425, t424, t432, -t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t352, t355, 0, 0, 0, 0, 0, 0, 0, 0, t191, t609, 0, -t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t589, -pkin(4) * t446, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t485 * t589 + t552, t551 + (-t447 - t446) * pkin(4), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t623, -t46, t140, -t623, t141, t360, t36 * qJD(2) - t32 * qJD(4) + t190 - t527, t37 * qJD(2) - t34 * qJD(4) + t187 + t528, -t580, -t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t624, -t52, t191, -t624, t609, t361, t412, t413, -t581, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, t609, 0, -t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378 * t582 - t552, pkin(4) * t447 - t551, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t7;
