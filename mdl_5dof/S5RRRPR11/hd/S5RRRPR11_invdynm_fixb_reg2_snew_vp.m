% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRPR11
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:36
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRPR11_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR11_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR11_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR11_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR11_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPR11_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:35:46
% EndTime: 2019-12-31 21:36:04
% DurationCPUTime: 18.96s
% Computational Cost: add. (55699->674), mult. (110975->813), div. (0->0), fcn. (73859->8), ass. (0->433)
t1272 = cos(qJ(3));
t1268 = sin(qJ(3));
t1269 = sin(qJ(2));
t1371 = qJD(1) * t1269;
t1222 = -t1272 * qJD(2) + t1268 * t1371;
t1273 = cos(qJ(2));
t1341 = t1273 * qJD(1);
t1257 = qJD(2) * t1341;
t1335 = t1269 * qJDD(1);
t1228 = t1257 + t1335;
t1294 = -t1268 * qJDD(2) - t1272 * t1228;
t1164 = -t1222 * qJD(3) - t1294;
t1253 = -qJD(3) + t1341;
t1369 = t1222 * t1253;
t1408 = t1164 + t1369;
t1360 = t1268 * t1408;
t1224 = t1268 * qJD(2) + t1272 * t1371;
t1204 = t1224 * t1253;
t1318 = -t1272 * qJDD(2) + t1268 * t1228;
t1289 = t1224 * qJD(3) + t1318;
t1406 = -t1204 + t1289;
t1062 = t1272 * t1406 + t1360;
t1218 = t1224 ^ 2;
t1387 = t1222 ^ 2;
t1405 = t1218 - t1387;
t1032 = t1273 * t1062 - t1269 * t1405;
t1060 = -t1268 * t1406 + t1272 * t1408;
t1270 = sin(qJ(1));
t1274 = cos(qJ(1));
t1467 = t1270 * t1032 + t1274 * t1060;
t1466 = t1274 * t1032 - t1270 * t1060;
t1386 = t1253 ^ 2;
t1197 = t1387 - t1386;
t1181 = t1224 * t1222;
t1256 = qJD(2) * t1371;
t1333 = t1273 * qJDD(1);
t1229 = -t1256 + t1333;
t1219 = -qJDD(3) + t1229;
t1407 = -t1181 + t1219;
t1357 = t1268 * t1407;
t1102 = t1272 * t1197 + t1357;
t1126 = t1204 + t1289;
t1055 = t1273 * t1102 - t1269 * t1126;
t1344 = t1272 * t1407;
t1098 = t1268 * t1197 - t1344;
t1465 = t1270 * t1055 - t1274 * t1098;
t1464 = t1274 * t1055 + t1270 * t1098;
t1198 = t1218 - t1386;
t1320 = t1219 + t1181;
t1356 = t1268 * t1320;
t1443 = -t1272 * t1198 - t1356;
t1409 = t1164 - t1369;
t1343 = t1272 * t1320;
t1442 = t1268 * t1198 - t1343;
t1448 = t1269 * t1409 + t1273 * t1442;
t1463 = t1270 * t1448 - t1274 * t1443;
t1462 = t1270 * t1443 + t1274 * t1448;
t1166 = t1386 + t1218;
t1085 = t1272 * t1166 - t1357;
t1461 = pkin(1) * t1085;
t1460 = pkin(2) * t1085;
t1459 = pkin(7) * t1085;
t1093 = t1268 * t1166 + t1344;
t1458 = pkin(7) * t1093;
t1457 = t1269 * t1093;
t1456 = t1270 * t1085;
t1453 = t1273 * t1093;
t1452 = t1274 * t1085;
t1030 = t1269 * t1062 + t1273 * t1405;
t1051 = t1269 * t1102 + t1273 * t1126;
t1449 = t1269 * t1442 - t1273 * t1409;
t1403 = -t1386 - t1387;
t1417 = t1272 * t1403 + t1356;
t1431 = t1269 * t1417 - t1273 * t1406;
t1447 = pkin(1) * t1431;
t1446 = pkin(6) * t1431;
t1418 = t1268 * t1403 - t1343;
t1430 = t1269 * t1406 + t1273 * t1417;
t1441 = -pkin(1) * t1418 + pkin(6) * t1430;
t1440 = pkin(5) * (t1270 * t1430 - t1274 * t1418);
t1439 = pkin(5) * (t1270 * t1418 + t1274 * t1430);
t1437 = pkin(2) * t1418;
t1436 = pkin(7) * t1417;
t1435 = pkin(7) * t1418;
t1434 = qJ(4) * t1408;
t1404 = t1218 + t1387;
t1429 = pkin(2) * t1404;
t1267 = sin(qJ(5));
t1271 = cos(qJ(5));
t1169 = -t1271 * t1222 + t1267 * t1224;
t1171 = t1267 * t1222 + t1271 * t1224;
t1109 = t1171 * t1169;
t1213 = qJDD(5) + t1219;
t1411 = -t1109 + t1213;
t1428 = t1267 * t1411;
t1427 = t1269 * t1404;
t1423 = t1271 * t1411;
t1422 = t1273 * t1404;
t1241 = t1274 * g(1) + t1270 * g(2);
t1275 = qJD(1) ^ 2;
t1211 = -t1275 * pkin(1) + qJDD(1) * pkin(6) - t1241;
t1380 = pkin(2) * t1273;
t1312 = -pkin(7) * t1269 - t1380;
t1226 = t1312 * qJD(1);
t1378 = t1273 * g(3);
t1388 = qJD(2) ^ 2;
t1144 = -qJDD(2) * pkin(2) - t1388 * pkin(7) + (qJD(1) * t1226 + t1211) * t1269 + t1378;
t1278 = t1289 * pkin(3) + t1144 - t1434;
t1365 = t1253 * t1268;
t1114 = t1222 * t1365 + t1272 * t1289;
t1364 = t1253 * t1272;
t1328 = t1222 * t1364;
t1279 = t1268 * t1289 - t1328;
t1329 = t1269 * t1181;
t1391 = t1273 * t1279 - t1329;
t1416 = t1274 * t1114 + t1270 * t1391;
t1415 = -t1270 * t1114 + t1274 * t1391;
t1194 = t1224 * t1365;
t1299 = -t1194 + t1328;
t1390 = -t1269 * t1219 + t1273 * t1299;
t1412 = (t1222 * t1268 + t1224 * t1272) * t1253;
t1414 = t1270 * t1412 + t1274 * t1390;
t1413 = t1270 * t1390 - t1274 * t1412;
t1240 = t1270 * g(1) - t1274 * g(2);
t1210 = qJDD(1) * pkin(1) + t1275 * pkin(6) + t1240;
t1302 = -t1229 + t1256;
t1303 = t1228 + t1257;
t1123 = pkin(2) * t1302 - pkin(7) * t1303 - t1210;
t1193 = -t1269 * g(3) + t1273 * t1211;
t1145 = -t1388 * pkin(2) + qJDD(2) * pkin(7) + t1226 * t1341 + t1193;
t1069 = -t1272 * t1123 + t1268 * t1145;
t1174 = t1222 * pkin(3) - t1224 * qJ(4);
t1013 = t1219 * pkin(3) - qJ(4) * t1386 + t1224 * t1174 + qJDD(4) + t1069;
t989 = t1320 * pkin(4) - t1409 * pkin(8) + t1013;
t1370 = qJD(4) * t1253;
t1238 = -0.2e1 * t1370;
t1070 = t1268 * t1123 + t1272 * t1145;
t1297 = -pkin(3) * t1386 - t1219 * qJ(4) - t1222 * t1174 + t1070;
t1011 = t1238 + t1297;
t1311 = t1253 * pkin(4) - t1224 * pkin(8);
t996 = -pkin(4) * t1387 + pkin(8) * t1289 - t1253 * t1311 + t1011;
t947 = t1267 * t996 - t1271 * t989;
t948 = t1267 * t989 + t1271 * t996;
t910 = t1267 * t948 - t1271 * t947;
t1067 = -t1169 * qJD(5) + t1271 * t1164 + t1267 * t1289;
t1245 = qJD(5) + t1253;
t1151 = t1245 * t1169;
t1410 = -t1151 + t1067;
t1385 = pkin(3) + pkin(4);
t1321 = t1267 * t1164 - t1271 * t1289;
t1025 = (qJD(5) - t1245) * t1171 + t1321;
t1028 = t1151 + t1067;
t980 = -t1025 * t1267 - t1271 * t1028;
t982 = -t1025 * t1271 + t1267 * t1028;
t1401 = qJ(4) * t982 - t1385 * t980;
t911 = t1267 * t947 + t1271 * t948;
t1400 = qJ(4) * t911 - t1385 * t910;
t1323 = -t1253 * pkin(3) - 0.2e1 * qJD(4);
t1012 = t1323 * t1224 + t1278;
t1325 = qJ(4) * t1268 + pkin(2);
t1379 = pkin(3) * t1272;
t967 = t1272 * t1011 + t1268 * t1013;
t1399 = -t1012 * (t1325 + t1379) + pkin(7) * t967;
t1167 = t1169 ^ 2;
t1242 = t1245 ^ 2;
t1090 = -t1242 - t1167;
t1018 = t1267 * t1090 + t1423;
t1019 = t1271 * t1090 - t1428;
t1398 = qJ(4) * t1019 - t1385 * t1018 + t947;
t1168 = t1171 ^ 2;
t1136 = -t1168 - t1242;
t1083 = t1109 + t1213;
t1362 = t1267 * t1083;
t1038 = t1271 * t1136 - t1362;
t1348 = t1271 * t1083;
t1039 = -t1267 * t1136 - t1348;
t1397 = qJ(4) * t1039 - t1385 * t1038 + t948;
t1117 = t1268 * t1164 - t1224 * t1364;
t1118 = t1272 * t1164 + t1194;
t1300 = t1273 * t1118 + t1329;
t1396 = -t1274 * t1117 + t1270 * t1300;
t1277 = 0.2e1 * qJD(4) * t1224 - t1278;
t1000 = (-t1406 + t1204) * pkin(3) + t1277;
t1395 = t1272 * t1000 - t1325 * t1406 + t1436;
t999 = pkin(3) * t1204 + t1277 + t1434;
t1394 = -t1458 + (pkin(2) + t1379) * t1408 + t1268 * t999;
t1393 = t1273 * t1219 + t1269 * t1299;
t1326 = t1273 * t1181;
t1392 = t1269 * t1279 + t1326;
t1389 = t1270 * t1117 + t1274 * t1300;
t1383 = pkin(8) * t910;
t1382 = pkin(8) * t911;
t1381 = pkin(2) * t1269;
t1375 = qJ(4) * t1272;
t997 = t1318 * pkin(4) + t1387 * pkin(8) + t1278 + (qJD(3) * pkin(4) - t1311 + t1323) * t1224;
t1373 = t1267 * t997;
t995 = t1271 * t997;
t1372 = qJD(1) * qJD(2);
t1368 = t1245 * t1171;
t1367 = t1245 * t1267;
t1366 = t1245 * t1271;
t1263 = t1269 ^ 2;
t1363 = t1263 * t1275;
t1359 = t1268 * t1409;
t1358 = t1268 * t1144;
t1353 = t1269 * t1210;
t1252 = t1273 * t1275 * t1269;
t1236 = -t1252 + qJDD(2);
t1351 = t1269 * t1236;
t1237 = qJDD(2) + t1252;
t1350 = t1269 * t1237;
t1346 = t1272 * t1409;
t1345 = t1272 * t1144;
t1339 = t1273 * t1210;
t1338 = t1273 * t1236;
t1264 = t1273 ^ 2;
t1336 = t1263 + t1264;
t1334 = t1270 * qJDD(1);
t1332 = t1274 * qJDD(1);
t1330 = t1269 * t1109;
t1327 = t1273 * t1109;
t1324 = -pkin(8) * t1038 - t995;
t1003 = t1268 * t1069 + t1272 * t1070;
t1192 = t1269 * t1211 + t1378;
t1135 = t1269 * t1192 + t1273 * t1193;
t1319 = -t1270 * t1240 - t1274 * t1241;
t1317 = t1270 * t1252;
t1316 = t1274 * t1252;
t1313 = -pkin(2) * t1144 + pkin(7) * t1003;
t1233 = -t1270 * t1275 + t1332;
t1310 = -pkin(5) * t1233 - t1270 * g(3);
t1309 = -pkin(3) * t1013 + qJ(4) * t1011;
t1308 = -pkin(3) * t1409 - qJ(4) * t1126;
t1306 = -pkin(8) * t1018 - t1373;
t1305 = -pkin(8) * t1019 - t995;
t1304 = -pkin(8) * t1039 + t1373;
t1301 = t1269 * t1118 - t1326;
t1002 = -t1272 * t1069 + t1268 * t1070;
t1134 = t1273 * t1192 - t1269 * t1193;
t1295 = t1274 * t1240 - t1270 * t1241;
t1292 = -pkin(8) * t980 - t910;
t1291 = -pkin(8) * t982 - t911;
t1288 = -pkin(2) * t1406 - t1345 + t1436;
t1132 = (qJD(3) - t1253) * t1222 + t1294;
t1287 = pkin(2) * t1132 + t1358 + t1458;
t1127 = (-qJD(3) - t1253) * t1224 - t1318;
t1065 = t1272 * t1127 + t1359;
t1286 = pkin(7) * t1065 + t1003 + t1429;
t897 = t1268 * t910 + t1272 * t911;
t901 = -t1385 * t997 - t1382;
t908 = -qJ(4) * t997 - t1383;
t1285 = -pkin(2) * t997 + pkin(7) * t897 + t1268 * t908 + t1272 * t901;
t1024 = (qJD(5) + t1245) * t1171 + t1321;
t923 = t1385 * t1024 + t1305;
t935 = qJ(4) * t1024 + t1306;
t971 = t1268 * t1018 + t1272 * t1019;
t1284 = pkin(2) * t1024 + pkin(7) * t971 + t1268 * t935 + t1272 * t923;
t927 = t1385 * t1410 + t1304;
t939 = qJ(4) * t1410 + t1324;
t984 = t1268 * t1038 + t1272 * t1039;
t1283 = pkin(2) * t1410 + pkin(7) * t984 + t1268 * t939 + t1272 * t927;
t1071 = -t1167 - t1168;
t902 = t1385 * t1071 + t1291;
t905 = qJ(4) * t1071 + t1292;
t933 = t1268 * t980 + t1272 * t982;
t1282 = pkin(2) * t1071 + pkin(7) * t933 + t1268 * t905 + t1272 * t902;
t1001 = pkin(3) * t1404 + t1011;
t1004 = qJ(4) * t1404 + t1013;
t1063 = -t1272 * t1126 + t1359;
t1281 = pkin(7) * t1063 + t1272 * t1001 + t1268 * t1004 + t1429;
t1280 = pkin(3) * t1166 - qJ(4) * t1407 + t1297;
t1276 = -pkin(3) * t1320 + qJ(4) * t1403 - t1013;
t1261 = t1264 * t1275;
t1249 = -t1261 - t1388;
t1248 = t1261 - t1388;
t1247 = -t1363 - t1388;
t1246 = -t1363 + t1388;
t1235 = -t1261 + t1363;
t1234 = t1261 + t1363;
t1232 = t1274 * t1275 + t1334;
t1231 = t1336 * qJDD(1);
t1230 = -0.2e1 * t1256 + t1333;
t1227 = 0.2e1 * t1257 + t1335;
t1221 = t1273 * t1237;
t1220 = t1336 * t1372;
t1206 = -pkin(5) * t1232 + t1274 * g(3);
t1196 = t1273 * t1228 - t1263 * t1372;
t1195 = -t1269 * t1229 - t1264 * t1372;
t1191 = -t1269 * t1247 - t1338;
t1190 = -t1269 * t1246 + t1221;
t1189 = t1273 * t1249 - t1350;
t1188 = t1273 * t1248 - t1351;
t1187 = t1273 * t1247 - t1351;
t1186 = t1273 * t1246 + t1350;
t1185 = t1269 * t1249 + t1221;
t1184 = t1269 * t1248 + t1338;
t1183 = t1303 * t1269;
t1182 = t1302 * t1273;
t1173 = -t1269 * t1227 + t1273 * t1230;
t1172 = t1273 * t1227 + t1269 * t1230;
t1149 = -t1168 + t1242;
t1148 = t1167 - t1242;
t1147 = -pkin(6) * t1187 - t1339;
t1146 = -pkin(6) * t1185 - t1353;
t1138 = -pkin(1) * t1187 + t1193;
t1137 = -pkin(1) * t1185 + t1192;
t1122 = pkin(1) * t1230 + pkin(6) * t1189 + t1339;
t1121 = -pkin(1) * t1227 + pkin(6) * t1191 - t1353;
t1104 = t1168 - t1167;
t1095 = pkin(1) * t1210 + pkin(6) * t1135;
t1089 = pkin(1) * t1234 + pkin(6) * t1231 + t1135;
t1081 = (-t1169 * t1271 + t1171 * t1267) * t1245;
t1080 = (-t1169 * t1267 - t1171 * t1271) * t1245;
t1066 = -t1171 * qJD(5) - t1321;
t1061 = t1268 * t1127 - t1346;
t1059 = -t1268 * t1126 - t1346;
t1057 = t1345 + t1459;
t1048 = t1271 * t1148 - t1362;
t1047 = -t1267 * t1149 + t1423;
t1046 = t1267 * t1148 + t1348;
t1045 = t1271 * t1149 + t1428;
t1044 = t1358 - t1435;
t1042 = -t1269 * t1132 + t1453;
t1040 = t1273 * t1132 + t1457;
t1036 = -t1269 * t1408 - t1453;
t1034 = t1273 * t1408 - t1457;
t1023 = t1271 * t1067 - t1171 * t1367;
t1022 = t1267 * t1067 + t1171 * t1366;
t1021 = -t1267 * t1066 + t1169 * t1366;
t1020 = -t1271 * t1066 - t1169 * t1367;
t1017 = t1273 * t1065 - t1427;
t1016 = t1273 * t1063 - t1427;
t1015 = t1269 * t1065 + t1422;
t1014 = t1269 * t1063 + t1422;
t1010 = t1070 + t1460;
t1009 = t1268 * t1080 + t1272 * t1081;
t1008 = -t1272 * t1080 + t1268 * t1081;
t1007 = t1069 - t1437;
t1006 = t1273 * t1009 - t1269 * t1213;
t1005 = t1269 * t1009 + t1273 * t1213;
t998 = -pkin(2) * t1059 - t1308;
t993 = t1268 * t1046 + t1272 * t1048;
t992 = t1268 * t1045 + t1272 * t1047;
t991 = -t1272 * t1046 + t1268 * t1048;
t990 = -t1272 * t1045 + t1268 * t1047;
t988 = t1273 * t1003 + t1269 * t1144;
t987 = t1269 * t1003 - t1273 * t1144;
t983 = -t1272 * t1038 + t1268 * t1039;
t981 = -t1271 * t1024 - t1267 * t1410;
t979 = -t1267 * t1024 + t1271 * t1410;
t978 = -pkin(1) * t1040 - t1287;
t977 = -t1276 - t1437;
t976 = t1268 * t1022 + t1272 * t1023;
t975 = -t1268 * t1020 + t1272 * t1021;
t974 = -t1272 * t1022 + t1268 * t1023;
t973 = t1272 * t1020 + t1268 * t1021;
t972 = -t1288 - t1447;
t970 = -t1272 * t1018 + t1268 * t1019;
t969 = -t1280 + 0.2e1 * t1370 - t1460;
t968 = -pkin(7) * t1061 - t1002;
t966 = t1268 * t1011 - t1272 * t1013;
t965 = -t1268 * t1000 - t1375 * t1406 - t1435;
t964 = -pkin(3) * t1360 + t1272 * t999 - t1459;
t963 = t1273 * t976 - t1330;
t962 = t1273 * t975 + t1330;
t961 = t1269 * t976 + t1327;
t960 = t1269 * t975 - t1327;
t959 = t1269 * t1025 + t1273 * t993;
t958 = -t1269 * t1028 + t1273 * t992;
t957 = -t1273 * t1025 + t1269 * t993;
t956 = t1273 * t1028 + t1269 * t992;
t955 = -t1269 * t1410 + t1273 * t984;
t954 = t1269 * t984 + t1273 * t1410;
t953 = -pkin(6) * t1040 - t1269 * t1010 + t1273 * t1057;
t952 = -t1269 * t1007 + t1273 * t1044 - t1446;
t951 = -t1269 * t1024 + t1273 * t971;
t950 = t1273 * t1024 + t1269 * t971;
t949 = pkin(6) * t1042 + t1273 * t1010 + t1269 * t1057 + t1461;
t946 = t1269 * t1012 + t1273 * t967;
t945 = -t1273 * t1012 + t1269 * t967;
t942 = -pkin(1) * t1015 - t1286;
t941 = -pkin(1) * t987 - t1313;
t940 = t1273 * t1007 + t1269 * t1044 + t1441;
t938 = -t1395 - t1447;
t937 = -pkin(7) * t1059 - t1268 * t1001 + t1272 * t1004;
t936 = -pkin(1) * t1034 - t1394;
t934 = -pkin(6) * t1015 + t1061 * t1381 + t1273 * t968;
t932 = t1268 * t979 + t1272 * t981;
t931 = t1268 * t982 - t1272 * t980;
t930 = t1268 * t981 - t1272 * t979;
t929 = -t1269 * t1104 + t1273 * t932;
t928 = t1273 * t1104 + t1269 * t932;
t926 = -pkin(7) * t966 + (pkin(3) * t1268 - t1375) * t1012;
t925 = -pkin(2) * t966 - t1309;
t924 = -pkin(6) * t987 + (-pkin(7) * t1273 + t1381) * t1002;
t922 = -t1269 * t1071 + t1273 * t933;
t921 = t1273 * t1071 + t1269 * t933;
t920 = pkin(6) * t1017 + t1269 * t968 + (-pkin(1) - t1380) * t1061;
t919 = -pkin(1) * t1014 - t1281;
t918 = -t1269 * t977 + t1273 * t965 - t1446;
t917 = -pkin(6) * t1034 - t1269 * t969 + t1273 * t964;
t916 = t1269 * t965 + t1273 * t977 + t1441;
t915 = pkin(6) * t1036 + t1269 * t964 + t1273 * t969 - t1461;
t914 = pkin(6) * t988 + (-pkin(1) + t1312) * t1002;
t913 = -pkin(6) * t1014 - t1269 * t998 + t1273 * t937;
t912 = -pkin(1) * t1059 + pkin(6) * t1016 + t1269 * t937 + t1273 * t998;
t909 = -pkin(2) * t983 - t1397;
t907 = -pkin(2) * t970 - t1398;
t906 = -pkin(1) * t945 - t1399;
t904 = -pkin(7) * t983 - t1268 * t927 + t1272 * t939;
t903 = -pkin(2) * t931 - t1401;
t900 = -pkin(7) * t970 - t1268 * t923 + t1272 * t935;
t899 = -pkin(6) * t945 - t1269 * t925 + t1273 * t926;
t898 = -pkin(1) * t954 - t1283;
t896 = t1268 * t911 - t1272 * t910;
t895 = -pkin(1) * t950 - t1284;
t894 = -pkin(1) * t966 + pkin(6) * t946 + t1269 * t926 + t1273 * t925;
t893 = t1269 * t997 + t1273 * t897;
t892 = t1269 * t897 - t1273 * t997;
t891 = -pkin(6) * t954 - t1269 * t909 + t1273 * t904;
t890 = -pkin(6) * t950 - t1269 * t907 + t1273 * t900;
t889 = -pkin(1) * t983 + pkin(6) * t955 + t1269 * t904 + t1273 * t909;
t888 = -pkin(7) * t931 - t1268 * t902 + t1272 * t905;
t887 = -pkin(1) * t970 + pkin(6) * t951 + t1269 * t900 + t1273 * t907;
t886 = -pkin(1) * t921 - t1282;
t885 = -pkin(7) * t896 - t1268 * t901 + t1272 * t908;
t884 = -pkin(2) * t896 - t1400;
t883 = -pkin(6) * t921 - t1269 * t903 + t1273 * t888;
t882 = -pkin(1) * t931 + pkin(6) * t922 + t1269 * t888 + t1273 * t903;
t881 = -pkin(1) * t892 - t1285;
t880 = -pkin(6) * t892 - t1269 * t884 + t1273 * t885;
t879 = -pkin(1) * t896 + pkin(6) * t893 + t1269 * t885 + t1273 * t884;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1233, 0, -t1232, 0, t1310, -t1206, -t1295, -pkin(5) * t1295, t1274 * t1196 - t1317, t1274 * t1173 + t1270 * t1235, t1274 * t1190 + t1269 * t1334, t1274 * t1195 + t1317, t1274 * t1188 + t1270 * t1333, t1270 * qJDD(2) + t1274 * t1220, t1274 * t1146 - t1270 * t1137 - pkin(5) * (t1270 * t1189 + t1274 * t1230), t1274 * t1147 - t1270 * t1138 - pkin(5) * (t1270 * t1191 - t1274 * t1227), t1274 * t1134 - pkin(5) * (t1270 * t1231 + t1274 * t1234), -pkin(5) * (t1270 * t1135 + t1274 * t1210) - (t1270 * pkin(1) - t1274 * pkin(6)) * t1134, t1389, -t1466, t1462, t1415, t1464, t1414, -t1270 * t972 + t1274 * t952 - t1440, t1274 * t953 - t1270 * t978 - pkin(5) * (t1270 * t1042 + t1452), t1274 * t934 - t1270 * t942 - pkin(5) * (t1270 * t1017 - t1274 * t1061), t1274 * t924 - t1270 * t941 - pkin(5) * (-t1274 * t1002 + t1270 * t988), t1389, t1462, t1466, t1414, -t1464, t1415, -t1270 * t938 + t1274 * t918 - t1440, t1274 * t913 - t1270 * t919 - pkin(5) * (t1270 * t1016 - t1274 * t1059), t1274 * t917 - t1270 * t936 - pkin(5) * (t1270 * t1036 - t1452), t1274 * t899 - t1270 * t906 - pkin(5) * (t1270 * t946 - t1274 * t966), t1270 * t974 + t1274 * t963, t1270 * t930 + t1274 * t929, t1270 * t990 + t1274 * t958, t1270 * t973 + t1274 * t962, t1270 * t991 + t1274 * t959, t1274 * t1006 + t1270 * t1008, t1274 * t890 - t1270 * t895 - pkin(5) * (t1270 * t951 - t1274 * t970), t1274 * t891 - t1270 * t898 - pkin(5) * (t1270 * t955 - t1274 * t983), t1274 * t883 - t1270 * t886 - pkin(5) * (t1270 * t922 - t1274 * t931), t1274 * t880 - t1270 * t881 - pkin(5) * (t1270 * t893 - t1274 * t896); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1232, 0, t1233, 0, t1206, t1310, t1319, pkin(5) * t1319, t1270 * t1196 + t1316, t1270 * t1173 - t1274 * t1235, t1270 * t1190 - t1269 * t1332, t1270 * t1195 - t1316, t1270 * t1188 - t1273 * t1332, -t1274 * qJDD(2) + t1270 * t1220, t1270 * t1146 + t1274 * t1137 + pkin(5) * (t1274 * t1189 - t1270 * t1230), t1270 * t1147 + t1274 * t1138 + pkin(5) * (t1274 * t1191 + t1270 * t1227), t1270 * t1134 + pkin(5) * (t1274 * t1231 - t1270 * t1234), pkin(5) * (t1274 * t1135 - t1270 * t1210) - (-t1274 * pkin(1) - t1270 * pkin(6)) * t1134, t1396, -t1467, t1463, t1416, t1465, t1413, t1270 * t952 + t1274 * t972 + t1439, t1270 * t953 + t1274 * t978 + pkin(5) * (t1274 * t1042 - t1456), t1270 * t934 + t1274 * t942 + pkin(5) * (t1274 * t1017 + t1270 * t1061), t1270 * t924 + t1274 * t941 + pkin(5) * (t1270 * t1002 + t1274 * t988), t1396, t1463, t1467, t1413, -t1465, t1416, t1270 * t918 + t1274 * t938 + t1439, t1270 * t913 + t1274 * t919 + pkin(5) * (t1274 * t1016 + t1270 * t1059), t1270 * t917 + t1274 * t936 + pkin(5) * (t1274 * t1036 + t1456), t1270 * t899 + t1274 * t906 + pkin(5) * (t1270 * t966 + t1274 * t946), t1270 * t963 - t1274 * t974, t1270 * t929 - t1274 * t930, t1270 * t958 - t1274 * t990, t1270 * t962 - t1274 * t973, t1270 * t959 - t1274 * t991, t1270 * t1006 - t1274 * t1008, t1270 * t890 + t1274 * t895 + pkin(5) * (t1270 * t970 + t1274 * t951), t1270 * t891 + t1274 * t898 + pkin(5) * (t1270 * t983 + t1274 * t955), t1270 * t883 + t1274 * t886 + pkin(5) * (t1270 * t931 + t1274 * t922), t1270 * t880 + t1274 * t881 + pkin(5) * (t1270 * t896 + t1274 * t893); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1240, t1241, 0, 0, t1183, t1172, t1186, -t1182, t1184, 0, t1122, t1121, t1089, t1095, t1301, -t1030, t1449, t1392, t1051, t1393, t940, t949, t920, t914, t1301, t1449, t1030, t1393, -t1051, t1392, t916, t912, t915, t894, t961, t928, t956, t960, t957, t1005, t887, t889, t882, t879; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1275, 0, 0, -g(3), -t1240, 0, t1196, t1173, t1190, t1195, t1188, t1220, t1146, t1147, t1134, pkin(6) * t1134, t1300, -t1032, t1448, t1391, t1055, t1390, t952, t953, t934, t924, t1300, t1448, t1032, t1390, -t1055, t1391, t918, t913, t917, t899, t963, t929, t958, t962, t959, t1006, t890, t891, t883, t880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1275, 0, qJDD(1), 0, g(3), 0, -t1241, 0, t1252, -t1235, -t1335, -t1252, -t1333, -qJDD(2), t1137, t1138, 0, pkin(1) * t1134, -t1117, -t1060, -t1443, t1114, -t1098, -t1412, t972, t978, t942, t941, -t1117, -t1443, t1060, -t1412, t1098, t1114, t938, t919, t936, t906, -t974, -t930, -t990, -t973, -t991, -t1008, t895, t898, t886, t881; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1240, t1241, 0, 0, t1183, t1172, t1186, -t1182, t1184, 0, t1122, t1121, t1089, t1095, t1301, -t1030, t1449, t1392, t1051, t1393, t940, t949, t920, t914, t1301, t1449, t1030, t1393, -t1051, t1392, t916, t912, t915, t894, t961, t928, t956, t960, t957, t1005, t887, t889, t882, t879; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1228, t1230, t1237, -t1257, t1248, t1257, 0, -t1210, t1192, 0, t1118, -t1062, t1442, t1279, t1102, t1299, t1044, t1057, t968, -pkin(7) * t1002, t1118, t1442, t1062, t1299, -t1102, t1279, t965, t937, t964, t926, t976, t932, t992, t975, t993, t1009, t900, t904, t888, t885; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1256, t1227, t1246, t1229, t1236, -t1256, t1210, 0, t1193, 0, -t1181, -t1405, -t1409, t1181, t1126, t1219, t1007, t1010, -pkin(2) * t1061, -pkin(2) * t1002, -t1181, -t1409, t1405, t1219, -t1126, t1181, t977, t998, t969, t925, t1109, t1104, t1028, -t1109, -t1025, t1213, t907, t909, t903, t884; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1252, t1235, t1335, t1252, t1333, qJDD(2), -t1192, -t1193, 0, 0, t1117, t1060, t1443, -t1114, t1098, t1412, t1288, t1287, t1286, t1313, t1117, t1443, -t1060, t1412, -t1098, -t1114, t1395, t1281, t1394, t1399, t974, t930, t990, t973, t991, t1008, t1284, t1283, t1282, t1285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1164, -t1406, -t1320, -t1369, t1197, t1369, 0, t1144, t1069, 0, t1164, -t1320, t1406, t1369, -t1197, -t1369, -qJ(4) * t1406, t1004, t999, -qJ(4) * t1012, t1023, t981, t1047, t1021, t1048, t1081, t935, t939, t905, t908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1204, t1408, -t1198, -t1289, -t1407, t1204, -t1144, 0, t1070, 0, -t1204, -t1198, -t1408, t1204, t1407, -t1289, t1000, t1001, pkin(3) * t1408, -pkin(3) * t1012, -t1022, -t979, -t1045, t1020, -t1046, -t1080, t923, t927, t902, t901; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1181, t1405, t1409, -t1181, -t1126, -t1219, -t1069, -t1070, 0, 0, t1181, t1409, -t1405, -t1219, t1126, -t1181, t1276, t1308, t1238 + t1280, t1309, -t1109, -t1104, -t1028, t1109, t1025, -t1213, t1398, t1397, t1401, t1400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1164, -t1320, t1406, t1369, -t1197, -t1369, 0, t1013, -t1012, 0, t1023, t981, t1047, t1021, t1048, t1081, t1306, t1324, t1292, -t1383; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1181, t1409, -t1405, -t1219, t1126, -t1181, -t1013, 0, t1011, 0, -t1109, -t1104, -t1028, t1109, t1025, -t1213, -pkin(4) * t1018 + t947, -pkin(4) * t1038 + t948, -pkin(4) * t980, -pkin(4) * t910; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1204, t1198, t1408, -t1204, -t1407, t1289, t1012, -t1011, 0, 0, t1022, t979, t1045, -t1020, t1046, t1080, -pkin(4) * t1024 - t1305, -pkin(4) * t1410 - t1304, -pkin(4) * t1071 - t1291, pkin(4) * t997 + t1382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1067, -t1024, t1411, t1151, t1148, -t1151, 0, -t997, t947, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1368, t1410, t1149, t1066, t1083, -t1368, t997, 0, t948, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1109, t1104, t1028, -t1109, -t1025, t1213, -t947, -t948, 0, 0;];
m_new_reg = t1;
