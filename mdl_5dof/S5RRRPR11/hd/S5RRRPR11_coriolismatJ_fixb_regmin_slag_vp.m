% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:36
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR11_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR11_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR11_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPR11_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:35:17
% EndTime: 2019-12-31 21:35:34
% DurationCPUTime: 7.46s
% Computational Cost: add. (3557->498), mult. (7815->670), div. (0->0), fcn. (7304->6), ass. (0->391)
t409 = qJD(3) - qJD(5);
t294 = sin(qJ(5));
t295 = sin(qJ(3));
t297 = cos(qJ(5));
t298 = cos(qJ(3));
t221 = t294 * t295 + t297 * t298;
t460 = t297 * t295;
t225 = -t294 * t298 + t460;
t433 = qJD(2) * t225;
t296 = sin(qJ(2));
t459 = t297 * t296;
t465 = t296 * t298;
t180 = t294 * t465 - t295 * t459;
t182 = t221 * t296;
t515 = t225 / 0.2e1;
t516 = t221 / 0.2e1;
t47 = t180 * t515 + t182 * t516;
t534 = t47 * qJD(1) + t221 * t433;
t434 = qJD(1) * t182;
t533 = t47 * qJD(2) + t180 * t434;
t467 = t295 * t296;
t270 = pkin(3) * t467;
t458 = t298 * qJ(4);
t366 = -pkin(6) + t458;
t149 = -t270 + (-t295 * pkin(4) + t366) * t296;
t530 = pkin(7) - pkin(8);
t246 = t530 * t295;
t247 = t530 * t298;
t365 = t294 * t246 + t297 * t247;
t299 = cos(qJ(2));
t508 = -t299 / 0.2e1;
t469 = t295 * qJ(4);
t523 = pkin(3) + pkin(4);
t525 = -t523 * t298 - t469;
t204 = pkin(2) - t525;
t518 = t204 / 0.2e1;
t308 = t149 * t515 + t182 * t518 + t365 * t508;
t532 = t409 * t365;
t79 = t297 * t246 - t294 * t247;
t531 = t409 * t79;
t36 = t221 * t180 - t182 * t225;
t54 = t180 ^ 2 - t182 ^ 2;
t343 = t54 * qJD(1) + t36 * qJD(2);
t76 = t221 ^ 2 - t225 ^ 2;
t342 = t36 * qJD(1) + t76 * qJD(2);
t413 = t299 * qJD(1);
t358 = qJD(5) + t413;
t346 = -qJD(3) + t358;
t529 = t180 * t346;
t528 = t182 * t346;
t527 = t221 * t409;
t360 = t409 * t225;
t290 = t295 ^ 2;
t292 = t298 ^ 2;
t260 = t292 - t290;
t417 = t296 * qJD(1);
t400 = t298 * t417;
t357 = t295 * t400;
t524 = t260 * qJD(2) - 0.2e1 * t357;
t454 = t298 * t299;
t273 = pkin(6) * t454;
t504 = t296 * pkin(7);
t352 = -t299 * pkin(2) - t504;
t337 = -pkin(1) + t352;
t170 = t295 * t337 + t273;
t453 = t299 * qJ(4);
t157 = t170 - t453;
t522 = -t157 / 0.2e1;
t217 = t298 * t337;
t466 = t295 * t299;
t407 = pkin(6) * t466;
t169 = -t217 + t407;
t521 = -t169 / 0.2e1;
t176 = -t366 * t296 + t270;
t520 = t176 / 0.2e1;
t503 = t298 * pkin(3);
t350 = t469 + t503;
t203 = t350 * t296;
t519 = -t203 / 0.2e1;
t213 = -t523 * t295 + t458;
t517 = t213 / 0.2e1;
t502 = t299 * pkin(7);
t505 = t296 * pkin(2);
t248 = -t502 + t505;
t514 = -t248 / 0.2e1;
t272 = pkin(6) * t467;
t513 = -t272 / 0.2e1;
t512 = t295 / 0.2e1;
t511 = -t296 / 0.2e1;
t510 = t296 / 0.2e1;
t509 = t298 / 0.2e1;
t507 = t299 / 0.2e1;
t506 = pkin(6) * t295;
t288 = t299 * pkin(3);
t501 = t409 * t36;
t500 = t409 * t47;
t287 = t296 * pkin(3);
t98 = -t296 * pkin(4) - t272 - t287 + (-pkin(8) * t299 - t248) * t298;
t499 = t294 * t98;
t498 = t297 * t98;
t150 = (-pkin(6) + t213) * t299;
t251 = t299 * t460;
t183 = t294 * t454 - t251;
t269 = pkin(8) * t467;
t117 = t157 + t269;
t473 = t294 * t117;
t355 = -pkin(8) * t465 - t217;
t305 = t288 + (pkin(4) + t506) * t299 + t355;
t81 = t297 * t305;
t38 = -t81 + t473;
t227 = t295 * t248;
t285 = t296 * qJ(4);
t160 = -pkin(6) * t465 + t227 + t285;
t120 = pkin(8) * t466 + t160;
t472 = t294 * t120;
t5 = (-t472 + t498) * t299 + t38 * t296 + t150 * t180 + t149 * t183;
t497 = t5 * qJD(1);
t184 = t221 * t299;
t304 = t294 * t305;
t464 = t297 * t117;
t39 = t304 + t464;
t463 = t297 * t120;
t6 = (t463 + t499) * t299 - t39 * t296 - t150 * t182 - t149 * t184;
t496 = t6 * qJD(1);
t230 = t297 * qJ(4) - t294 * t523;
t301 = t230 * t507 - t304 / 0.2e1;
t139 = t269 + t170;
t371 = t139 / 0.2e1 - t117 / 0.2e1;
t138 = -t355 - t407;
t471 = t294 * t138;
t380 = -t471 / 0.2e1;
t13 = t371 * t297 + t301 + t380;
t495 = t13 * qJD(1);
t229 = t294 * qJ(4) + t297 * t523;
t353 = -t81 / 0.2e1 + t229 * t508;
t462 = t297 * t138;
t375 = -t462 / 0.2e1;
t14 = -t371 * t294 + t353 + t375;
t494 = t14 * qJD(1);
t493 = t149 * t180;
t492 = t149 * t182;
t491 = t157 * t299;
t490 = t169 * t299;
t168 = t525 * t296;
t461 = t297 * t139;
t49 = -t461 + t471;
t17 = t168 * t180 - t49 * t299 - t492;
t489 = t17 * qJD(1);
t488 = t170 * t299;
t487 = t176 * t295;
t486 = t176 * t298;
t470 = t294 * t139;
t50 = t462 + t470;
t18 = -t168 * t182 + t50 * t299 - t493;
t485 = t18 * qJD(1);
t158 = t169 + t288;
t456 = t298 * t248;
t364 = -t272 - t456;
t161 = -t287 + t364;
t245 = pkin(3) * t295 - t458;
t177 = (pkin(6) + t245) * t299;
t19 = t157 * t160 + t158 * t161 + t176 * t177;
t484 = t19 * qJD(1);
t20 = -t157 * t169 + t158 * t170 + t176 * t203;
t483 = t20 * qJD(1);
t482 = t203 * t295;
t481 = t204 * t221;
t369 = t521 + t158 / 0.2e1;
t370 = t522 + t170 / 0.2e1;
t21 = (-t288 / 0.2e1 - t369) * t298 + (-t453 / 0.2e1 - t370) * t295;
t480 = t21 * qJD(1);
t479 = t225 * t299;
t23 = -t38 * t299 + t493;
t478 = t23 * qJD(1);
t231 = -pkin(2) - t350;
t477 = t231 * t295;
t24 = -t39 * t299 + t492;
t476 = t24 * qJD(1);
t25 = -t158 * t454 - t161 * t465 + (t160 * t296 + t491) * t295;
t475 = t25 * qJD(1);
t26 = -t170 * t465 + (t157 * t298 + (t158 - t169) * t295) * t296;
t474 = t26 * qJD(1);
t468 = t295 * t182;
t457 = t298 * t225;
t291 = t296 ^ 2;
t455 = t298 * t291;
t340 = t176 * t299 + t177 * t296;
t31 = -t157 * t296 + t160 * t299 + t298 * t340;
t452 = t31 * qJD(1);
t32 = -t158 * t296 + t161 * t299 + t295 * t340;
t451 = t32 * qJD(1);
t42 = -t184 * t180 - t182 * t183;
t450 = t42 * qJD(1);
t43 = t488 + (t482 + t486) * t296;
t449 = t43 * qJD(1);
t44 = -t176 * t467 + t203 * t465 - t490;
t448 = t44 * qJD(1);
t51 = t169 * t296 + (-t364 - 0.2e1 * t272) * t299;
t447 = t51 * qJD(1);
t52 = t227 * t299 + (-t170 + t273) * t296;
t446 = t52 * qJD(1);
t57 = t176 * t465 + t491;
t445 = t57 * qJD(1);
t66 = t180 * t296 - t183 * t299;
t444 = t66 * qJD(1);
t67 = -t182 * t296 + t184 * t299;
t443 = t67 * qJD(1);
t383 = -t479 / 0.2e1;
t372 = t454 / 0.2e1;
t435 = -t251 / 0.2e1 + t294 * t372;
t88 = t383 + t435;
t442 = t88 * qJD(1);
t382 = t479 / 0.2e1;
t373 = -t454 / 0.2e1;
t436 = t251 / 0.2e1 + t294 * t373;
t89 = t382 + t436;
t441 = t89 * qJD(1);
t384 = t184 / 0.2e1;
t377 = t466 / 0.2e1;
t438 = t294 * t377 + t297 * t372;
t90 = t384 + t438;
t440 = t90 * qJD(1);
t385 = -t184 / 0.2e1;
t378 = -t466 / 0.2e1;
t437 = t294 * t378 + t297 * t373;
t91 = t385 + t437;
t439 = t91 * qJD(1);
t293 = t299 ^ 2;
t261 = t293 - t291;
t432 = qJD(2) * t295;
t431 = qJD(2) * t298;
t430 = qJD(3) * t295;
t429 = qJD(3) * t298;
t428 = qJD(5) * t204;
t118 = -t291 * t506 - t490;
t427 = t118 * qJD(1);
t119 = -pkin(6) * t455 - t488;
t426 = t119 * qJD(1);
t124 = t180 * t465 + t294 * t293;
t425 = t124 * qJD(1);
t125 = t182 * t465 + t297 * t293;
t424 = t125 * qJD(1);
t423 = t169 * qJD(3);
t224 = t261 * t295;
t422 = t224 * qJD(1);
t226 = t298 * t293 - t455;
t421 = t226 * qJD(1);
t420 = t261 * qJD(1);
t419 = t294 * qJD(4);
t418 = t295 * qJD(4);
t416 = t296 * qJD(2);
t415 = t297 * qJD(4);
t414 = t298 * qJD(4);
t412 = t299 * qJD(2);
t411 = t299 * qJD(3);
t410 = t299 * qJD(4);
t408 = -t287 + t513;
t406 = pkin(1) * t417;
t405 = pkin(1) * t413;
t404 = pkin(7) * t430;
t403 = pkin(7) * t429;
t402 = pkin(2) * t512;
t401 = t502 / 0.2e1;
t399 = t295 * t411;
t398 = t298 * t411;
t397 = t180 * t413;
t395 = t182 * t413;
t393 = t294 * t410;
t392 = t295 * t429;
t266 = t295 * t431;
t391 = t295 * t414;
t390 = t296 * t412;
t389 = t296 * t418;
t388 = t296 * t413;
t387 = t297 * t410;
t386 = t298 * t416;
t381 = t231 * t510;
t379 = t180 * t512;
t376 = -t465 / 0.2e1;
t374 = t221 * t509;
t368 = t513 - t287 / 0.2e1;
t367 = t290 / 0.2e1 - t292 / 0.2e1;
t189 = (-0.1e1 / 0.2e1 + t367) * t296;
t363 = t189 * qJD(1) - t266;
t205 = t367 * t296;
t362 = t205 * qJD(1) - t266;
t243 = t295 * qJD(1) * t455;
t361 = t205 * qJD(2) + t243;
t359 = t409 * t299;
t268 = -qJD(3) + t413;
t356 = t295 * t386;
t354 = t413 - qJD(3) / 0.2e1;
t351 = t245 * t510 + t520;
t349 = -t231 * t299 + t504;
t302 = t168 * t516 + t180 * t517 - t308;
t332 = -t472 / 0.2e1 + t498 / 0.2e1;
t311 = t229 * t511 + t332;
t1 = t302 + t311;
t55 = -t204 * t225 + t213 * t221;
t348 = -t1 * qJD(1) - t55 * qJD(2);
t325 = t149 * t516 + t180 * t518;
t303 = t168 * t515 + t182 * t517 - t508 * t79 + t325;
t331 = -t499 / 0.2e1 - t463 / 0.2e1;
t310 = t230 * t511 + t331;
t4 = t303 + t310;
t56 = t213 * t225 + t481;
t347 = -t4 * qJD(1) - t56 * qJD(2);
t341 = t160 * t298 + t161 * t295;
t140 = t231 * t298 + t245 * t295;
t209 = -t227 / 0.2e1;
t252 = pkin(7) * t377;
t28 = t252 - t482 / 0.2e1 - t486 / 0.2e1 - t285 + t209 + (t477 / 0.2e1 + (-t245 / 0.2e1 + pkin(6) / 0.2e1) * t298) * t296;
t339 = -t28 * qJD(1) + t140 * qJD(2);
t141 = t245 * t298 - t477;
t333 = t381 + t401;
t312 = t519 + t333;
t326 = t351 * t295;
t30 = t326 + (t514 + t312) * t298 + t408;
t338 = -t30 * qJD(1) + t141 * qJD(2);
t336 = t268 * t296;
t335 = t401 - t505 / 0.2e1;
t334 = -t160 * qJ(4) / 0.2e1 + t161 * pkin(3) / 0.2e1;
t208 = t227 / 0.2e1;
t253 = pkin(7) * t378;
t134 = t296 * t402 + t208 + t253;
t330 = pkin(2) * t431 - t134 * qJD(1);
t135 = (t514 + t335) * t298;
t329 = pkin(2) * t432 - t135 * qJD(1);
t9 = -t308 + t332;
t328 = t9 * qJD(1) - t204 * t433;
t300 = (t370 * t295 + t369 * t298) * pkin(7) + t245 * t520 + t203 * t231 / 0.2e1;
t8 = t300 + t334;
t327 = -t231 * t245 * qJD(2) - t8 * qJD(1);
t309 = -t507 * t79 - t325;
t10 = -t309 + t331;
t323 = t10 * qJD(1) + qJD(2) * t481;
t59 = t379 + (t374 + t297 / 0.2e1) * t296;
t318 = t59 * qJD(1) + t221 * t432;
t58 = -t468 / 0.2e1 + (t294 / 0.2e1 - t457 / 0.2e1) * t296;
t317 = -t58 * qJD(1) + t225 * t432;
t40 = t487 / 0.2e1 + (t514 + t333) * t298 + t368;
t316 = t40 * qJD(1) + t231 * t432;
t315 = t298 * t336;
t223 = t260 * t291;
t314 = t223 * qJD(1) + 0.2e1 * t356;
t307 = -t350 * qJD(3) + t414;
t234 = t292 * t291 + t293;
t306 = t234 * qJD(1) + t356 - t411;
t284 = t297 * qJD(3);
t283 = t294 * qJD(3);
t278 = -t417 / 0.2e1;
t277 = t417 / 0.2e1;
t276 = -t416 / 0.2e1;
t275 = t416 / 0.2e1;
t267 = t298 * t413;
t244 = t298 * t389;
t233 = t268 * qJ(4);
t220 = -t267 + t429;
t219 = t297 * t413 - t284;
t218 = t294 * t413 - t283;
t215 = t354 * t296;
t212 = t456 / 0.2e1;
t202 = t290 * qJD(2) + t357;
t197 = t205 * qJD(3);
t190 = t290 * t511 + t292 * t510 + t511;
t188 = t358 * t297 - t284;
t187 = t358 * t294 - t283;
t179 = (-t295 * t417 + t431) * t299;
t178 = t295 * t336;
t175 = (qJD(5) / 0.2e1 + t354) * t296;
t165 = t170 * qJD(3);
t97 = t298 * t335 + t212 + t272;
t96 = t253 + t209 + (pkin(6) * t298 + t402) * t296;
t95 = t383 + t436;
t94 = t382 + t435;
t93 = t385 + t438;
t92 = t384 + t437;
t61 = t468 / 0.2e1 + (t457 + t294) * t510;
t60 = t379 + t296 * t374 - t459 / 0.2e1;
t41 = pkin(7) * t373 + t231 * t376 - t487 / 0.2e1 - t456 / 0.2e1 + t368;
t29 = t312 * t298 + t212 + t326 - t408;
t27 = t252 + t285 + pkin(6) * t376 + t208 - t351 * t298 + (t381 + t519) * t295;
t22 = t298 * t521 + t295 * t522 + t170 * t512 + t158 * t509 + (-t469 / 0.2e1 - t503 / 0.2e1) * t299;
t16 = t464 / 0.2e1 + t380 + t461 / 0.2e1 - t301;
t15 = -t473 / 0.2e1 + t375 - t470 / 0.2e1 - t353;
t12 = t308 + t332;
t11 = t309 + t331;
t7 = t300 - t334;
t3 = t303 - t310;
t2 = t302 - t311;
t33 = [0, 0, 0, t390, t261 * qJD(2), 0, 0, 0, -pkin(1) * t416, -pkin(1) * t412, -t291 * t392 + t292 * t390, -t223 * qJD(3) - 0.2e1 * t299 * t356, -t226 * qJD(2) + t296 * t399, t224 * qJD(2) + t296 * t398, -t390, -t51 * qJD(2) - t119 * qJD(3), t52 * qJD(2) + t118 * qJD(3), t32 * qJD(2) + t43 * qJD(3) - t291 * t391, -t25 * qJD(2) - t26 * qJD(3) + t299 * t389, -t31 * qJD(2) - t44 * qJD(3) + t234 * qJD(4), t19 * qJD(2) + t20 * qJD(3) - t57 * qJD(4), (qJD(2) * t184 + t180 * t409) * t182, t42 * qJD(2) - t409 * t54, t67 * qJD(2) + t180 * t359, t66 * qJD(2) + t182 * t359, -t390, t5 * qJD(2) + t17 * qJD(3) + t124 * qJD(4) + t24 * qJD(5), -t6 * qJD(2) - t18 * qJD(3) + t125 * qJD(4) - t23 * qJD(5); 0, 0, 0, t388, t420, t412, -t416, 0, -pkin(6) * t412 - t406, pkin(6) * t416 - t405, -t197 + (t292 * t417 + t266) * t299, -0.2e1 * t296 * t392 + t299 * t524, t295 * t416 - t421, t386 + t422, -t215, -t447 + (t295 * t352 - t273) * qJD(2) + t97 * qJD(3), t446 + (t298 * t352 + t407) * qJD(2) + t96 * qJD(3), t451 + (-t177 * t298 - t295 * t349) * qJD(2) + t29 * qJD(3) + t190 * qJD(4), qJD(2) * t341 + t22 * qJD(3) - t475, -t452 + (-t177 * t295 + t298 * t349) * qJD(2) + t27 * qJD(3) + t244, t484 + (pkin(7) * t341 + t177 * t231) * qJD(2) + t7 * qJD(3) + t41 * qJD(4), (t433 + t434) * t184 + t500, t450 + (-t225 * t183 - t184 * t221) * qJD(2) - t501, t92 * qJD(3) + t93 * qJD(5) - t225 * t416 + t443, t94 * qJD(3) + t95 * qJD(5) + t221 * t416 + t444, -t175, t497 + (t150 * t221 + t204 * t183 - t296 * t79) * qJD(2) + t2 * qJD(3) + t60 * qJD(4) + t12 * qJD(5), -t496 + (t150 * t225 + t204 * t184 + t296 * t365) * qJD(2) + t3 * qJD(3) + t61 * qJD(4) + t11 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t361, -t314, t178, t315, t275, t97 * qJD(2) - t165 - t426, t96 * qJD(2) + t423 + t427, t29 * qJD(2) - t165 + t449, -t474 + t22 * qJD(2) + (-t296 * t458 + t270) * qJD(3) - t389, t27 * qJD(2) - t410 - t423 - t448, t483 + t7 * qJD(2) + (-t170 * pkin(3) - t169 * qJ(4)) * qJD(3) + t157 * qJD(4), t533, -t343, t92 * qJD(2) + t529, t94 * qJD(2) + t528, t275, t2 * qJD(2) + t49 * qJD(3) + t16 * qJD(5) - t393 + t489, t3 * qJD(2) + t50 * qJD(3) + t15 * qJD(5) - t387 - t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t190 * qJD(2) - t243, t178, t306, t41 * qJD(2) + t157 * qJD(3) - t445, 0, 0, 0, 0, 0, t60 * qJD(2) - t294 * t411 + t425, t61 * qJD(2) - t297 * t411 + t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t533, t343, t93 * qJD(2) - t529, t95 * qJD(2) - t528, t276, t12 * qJD(2) + t16 * qJD(3) - t39 * qJD(5) + t476, t11 * qJD(2) + t15 * qJD(3) + t38 * qJD(5) - t478; 0, 0, 0, -t388, -t420, 0, 0, 0, t406, t405, -t292 * t388 - t197, 0.2e1 * t295 * t315, -t398 + t421, t399 - t422, t215, t135 * qJD(3) + t447, t134 * qJD(3) - t446, t30 * qJD(3) - t189 * qJD(4) - t451, -t21 * qJD(3) - t298 * t410 + t475, t28 * qJD(3) + t244 + t452, t8 * qJD(3) - t40 * qJD(4) - t484, -t184 * t434 + t500, -t450 - t501, -t91 * qJD(3) - t90 * qJD(5) - t443, -t88 * qJD(3) - t89 * qJD(5) - t444, t175, t1 * qJD(3) + t59 * qJD(4) - t9 * qJD(5) - t497, t4 * qJD(3) - t58 * qJD(4) - t10 * qJD(5) + t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t392, t260 * qJD(3), 0, 0, 0, -pkin(2) * t430, -pkin(2) * t429, -t141 * qJD(3) + t391, 0, -t140 * qJD(3) + t290 * qJD(4), (qJD(3) * t245 - t418) * t231, t221 * t360, -t409 * t76, 0, 0, 0, t55 * qJD(3) + t221 * t418 + t225 * t428, t56 * qJD(3) - t221 * t428 + t225 * t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t362, t524, t220, t268 * t295, t278, -t329 - t403, -t330 + t404, -t338 - t403, t307 - t480, -t339 - t404, pkin(7) * t307 - t327, t534, -t342, -t439 - t527, -t442 - t360, t278, -t348 - t532, -t347 - t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t363, t220, t202, -t316 + t403, 0, 0, 0, 0, 0, t318, t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t534, t342, -t440 + t527, t360 - t441, t277, -t328 + t532, -t323 + t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t361, t314, t179, (-t400 - t432) * t299, t275, -t135 * qJD(2) + t426, -t134 * qJD(2) - t427, -t30 * qJD(2) - t449, t21 * qJD(2) + t474, -t28 * qJD(2) - t410 + t448, -qJ(4) * t410 - t8 * qJD(2) - t483, -t533, t343, t91 * qJD(2) - t397, t88 * qJD(2) - t395, t275, -t1 * qJD(2) - t13 * qJD(5) - t393 - t489, -t4 * qJD(2) - t14 * qJD(5) - t387 + t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t362, -t524, t267, -t295 * t413, t277, t329, t330, t338, t480, t339, t327, -t534, t342, t439, t442, t277, t348, t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), 0, 0, 0, 0, 0, t230 * qJD(5) + t419, -t229 * qJD(5) + t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, -t233, 0, 0, 0, 0, 0, -t218, -t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t230 * t409 - t495, -t229 * t409 - t494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189 * qJD(2) + t243, t179, -t306, qJ(4) * t411 + t40 * qJD(2) + t445, 0, 0, 0, 0, 0, -t59 * qJD(2) + t294 * t359 - t425, t58 * qJD(2) + t297 * t359 - t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t363, t267, -t202, t316, 0, 0, 0, 0, 0, -t318, -t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t268, t233, 0, 0, 0, 0, 0, t187, t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t187, -t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t533, -t343, t90 * qJD(2) + t397, t89 * qJD(2) + t395, t276, t9 * qJD(2) + t13 * qJD(3) + t393 - t476, t10 * qJD(2) + t14 * qJD(3) + t387 + t478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t534, -t342, t440, t441, t278, t328, t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t230 * qJD(3) - t419 + t495, t229 * qJD(3) - t415 + t494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218, t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t33;
