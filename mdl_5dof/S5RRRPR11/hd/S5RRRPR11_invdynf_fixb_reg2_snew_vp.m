% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRPR11
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:36
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRPR11_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR11_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR11_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR11_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR11_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPR11_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:36:04
% EndTime: 2019-12-31 21:36:07
% DurationCPUTime: 3.41s
% Computational Cost: add. (9766->240), mult. (19484->274), div. (0->0), fcn. (13022->8), ass. (0->163)
t1633 = sin(qJ(2));
t1669 = qJD(1) * t1633;
t1624 = qJD(2) * t1669;
t1637 = cos(qJ(2));
t1656 = t1637 * qJDD(1);
t1652 = t1624 - t1656;
t1650 = -qJDD(3) - t1652;
t1632 = sin(qJ(3));
t1636 = cos(qJ(3));
t1599 = -t1636 * qJD(2) + t1632 * t1669;
t1601 = t1632 * qJD(2) + t1636 * t1669;
t1666 = t1601 * t1599;
t1561 = t1650 - t1666;
t1597 = t1601 ^ 2;
t1661 = t1637 * qJD(1);
t1622 = qJD(3) - t1661;
t1671 = t1622 ^ 2;
t1680 = -t1597 - t1671;
t1540 = t1636 * t1561 - t1632 * t1680;
t1655 = qJD(2) * t1661;
t1657 = t1633 * qJDD(1);
t1604 = t1655 + t1657;
t1649 = -t1632 * qJDD(2) - t1636 * t1604;
t1645 = t1599 * qJD(3) + t1649;
t1667 = t1599 * t1622;
t1686 = t1645 + t1667;
t1522 = t1637 * t1540 - t1633 * t1686;
t1538 = t1632 * t1561 + t1636 * t1680;
t1634 = sin(qJ(1));
t1638 = cos(qJ(1));
t1702 = t1634 * t1522 - t1638 * t1538;
t1701 = t1638 * t1522 + t1634 * t1538;
t1520 = t1633 * t1540 + t1637 * t1686;
t1550 = -t1645 + t1667;
t1653 = -t1636 * qJDD(2) + t1632 * t1604;
t1660 = qJD(3) - t1622;
t1646 = -t1660 * t1601 - t1653;
t1678 = -t1636 * t1550 + t1632 * t1646;
t1673 = t1599 ^ 2;
t1560 = t1597 + t1673;
t1677 = t1632 * t1550 + t1636 * t1646;
t1692 = -t1633 * t1560 + t1637 * t1677;
t1698 = t1634 * t1692 - t1638 * t1678;
t1697 = t1634 * t1678 + t1638 * t1692;
t1562 = t1650 + t1666;
t1679 = -t1671 - t1673;
t1684 = t1632 * t1562 + t1636 * t1679;
t1696 = t1633 * t1684;
t1685 = -t1636 * t1562 + t1632 * t1679;
t1695 = t1634 * t1685;
t1694 = t1637 * t1684;
t1693 = t1638 * t1685;
t1691 = t1637 * t1560 + t1633 * t1677;
t1616 = qJD(5) - t1622;
t1681 = qJD(5) + t1616;
t1676 = qJD(2) ^ 2;
t1631 = sin(qJ(5));
t1635 = cos(qJ(5));
t1570 = -t1635 * t1599 + t1631 * t1601;
t1675 = t1570 ^ 2;
t1572 = t1631 * t1599 + t1635 * t1601;
t1674 = t1572 ^ 2;
t1672 = t1616 ^ 2;
t1670 = t1637 * g(3);
t1668 = t1572 * t1570;
t1659 = qJD(5) - t1616;
t1614 = -t1638 * g(1) - t1634 * g(2);
t1639 = qJD(1) ^ 2;
t1592 = -t1639 * pkin(1) + qJDD(1) * pkin(6) + t1614;
t1582 = -t1633 * g(3) + t1637 * t1592;
t1602 = (-t1637 * pkin(2) - pkin(7) * t1633) * qJD(1);
t1556 = -t1676 * pkin(2) + qJDD(2) * pkin(7) + t1602 * t1661 + t1582;
t1613 = t1634 * g(1) - t1638 * g(2);
t1591 = qJDD(1) * pkin(1) + t1639 * pkin(6) + t1613;
t1640 = (-t1604 - t1655) * pkin(7) + (t1652 + t1624) * pkin(2) - t1591;
t1529 = t1636 * t1556 + t1632 * t1640;
t1627 = t1633 ^ 2;
t1628 = t1637 ^ 2;
t1658 = t1627 + t1628;
t1654 = t1622 * pkin(3) - (2 * qJD(4));
t1528 = -t1632 * t1556 + t1636 * t1640;
t1651 = -t1622 * pkin(4) - t1601 * pkin(8);
t1648 = -qJDD(5) - t1650;
t1647 = t1601 * qJD(3) + t1653;
t1573 = t1599 * pkin(3) - t1601 * qJ(4);
t1501 = -pkin(3) * t1671 - qJ(4) * t1650 + 0.2e1 * qJD(4) * t1622 - t1599 * t1573 + t1529;
t1503 = pkin(3) * t1650 - qJ(4) * t1671 + t1601 * t1573 + qJDD(4) - t1528;
t1555 = t1670 - qJDD(2) * pkin(2) - t1676 * pkin(7) + (qJD(1) * t1602 + t1592) * t1633;
t1643 = t1631 * t1645 + t1635 * t1647;
t1642 = t1647 * pkin(3) + t1686 * qJ(4) + t1555;
t1641 = -t1631 * t1647 + t1635 * t1645;
t1621 = t1637 * t1639 * t1633;
t1618 = -t1628 * t1639 - t1676;
t1617 = -t1627 * t1639 - t1676;
t1611 = -qJDD(2) + t1621;
t1610 = qJDD(2) + t1621;
t1609 = t1658 * t1639;
t1608 = -t1634 * qJDD(1) - t1638 * t1639;
t1607 = t1638 * qJDD(1) - t1634 * t1639;
t1606 = t1658 * qJDD(1);
t1605 = -0.2e1 * t1624 + t1656;
t1603 = 0.2e1 * t1655 + t1657;
t1581 = -t1633 * t1592 - t1670;
t1580 = t1637 * t1611 - t1633 * t1617;
t1579 = -t1633 * t1610 + t1637 * t1618;
t1578 = t1633 * t1611 + t1637 * t1617;
t1577 = t1637 * t1610 + t1633 * t1618;
t1553 = -t1672 - t1674;
t1552 = -t1633 * t1581 + t1637 * t1582;
t1551 = t1637 * t1581 + t1633 * t1582;
t1545 = (qJD(3) + t1622) * t1601 + t1653;
t1544 = t1622 * t1601 + t1647;
t1537 = -t1672 - t1675;
t1532 = t1648 - t1668;
t1531 = -t1648 - t1668;
t1530 = -t1674 - t1675;
t1523 = t1633 * t1544 + t1694;
t1521 = -t1637 * t1544 + t1696;
t1519 = t1635 * t1532 - t1631 * t1553;
t1518 = t1631 * t1532 + t1635 * t1553;
t1517 = t1633 * t1545 + t1694;
t1515 = -t1637 * t1545 + t1696;
t1513 = t1659 * t1570 + t1641;
t1512 = -t1681 * t1570 - t1641;
t1511 = -t1659 * t1572 + t1643;
t1510 = t1681 * t1572 - t1643;
t1509 = -t1631 * t1531 + t1635 * t1537;
t1508 = t1635 * t1531 + t1631 * t1537;
t1502 = t1654 * t1601 + t1642;
t1500 = -t1632 * t1528 + t1636 * t1529;
t1499 = t1636 * t1528 + t1632 * t1529;
t1498 = t1653 * pkin(4) + t1673 * pkin(8) + t1642 + (qJD(3) * pkin(4) - t1651 + t1654) * t1601;
t1497 = -pkin(4) * t1673 + t1647 * pkin(8) + t1622 * t1651 + t1501;
t1496 = (t1660 * t1599 + t1649) * pkin(8) + t1562 * pkin(4) + t1503;
t1495 = t1637 * t1500 + t1633 * t1555;
t1494 = t1633 * t1500 - t1637 * t1555;
t1493 = t1632 * t1518 + t1636 * t1519;
t1492 = -t1636 * t1518 + t1632 * t1519;
t1491 = t1635 * t1511 - t1631 * t1513;
t1490 = t1631 * t1511 + t1635 * t1513;
t1489 = t1632 * t1508 + t1636 * t1509;
t1488 = -t1636 * t1508 + t1632 * t1509;
t1487 = t1636 * t1501 + t1632 * t1503;
t1486 = t1632 * t1501 - t1636 * t1503;
t1485 = t1637 * t1493 - t1633 * t1512;
t1484 = t1633 * t1493 + t1637 * t1512;
t1483 = t1637 * t1489 - t1633 * t1510;
t1482 = t1633 * t1489 + t1637 * t1510;
t1481 = t1631 * t1496 + t1635 * t1497;
t1480 = t1635 * t1496 - t1631 * t1497;
t1479 = t1637 * t1487 + t1633 * t1502;
t1478 = t1633 * t1487 - t1637 * t1502;
t1477 = t1632 * t1490 + t1636 * t1491;
t1476 = -t1636 * t1490 + t1632 * t1491;
t1475 = t1637 * t1477 - t1633 * t1530;
t1474 = t1633 * t1477 + t1637 * t1530;
t1473 = -t1631 * t1480 + t1635 * t1481;
t1472 = t1635 * t1480 + t1631 * t1481;
t1471 = t1632 * t1472 + t1636 * t1473;
t1470 = -t1636 * t1472 + t1632 * t1473;
t1469 = t1637 * t1471 + t1633 * t1498;
t1468 = t1633 * t1471 - t1637 * t1498;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1608, -t1607, 0, -t1634 * t1613 + t1638 * t1614, 0, 0, 0, 0, 0, 0, t1638 * t1579 - t1634 * t1605, t1638 * t1580 + t1634 * t1603, t1638 * t1606 - t1634 * t1609, t1638 * t1552 - t1634 * t1591, 0, 0, 0, 0, 0, 0, t1638 * t1517 + t1695, t1701, t1697, t1638 * t1495 + t1634 * t1499, 0, 0, 0, 0, 0, 0, t1638 * t1523 + t1695, t1697, -t1701, t1638 * t1479 + t1634 * t1486, 0, 0, 0, 0, 0, 0, t1638 * t1483 + t1634 * t1488, t1638 * t1485 + t1634 * t1492, t1638 * t1475 + t1634 * t1476, t1638 * t1469 + t1634 * t1470; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1607, t1608, 0, t1638 * t1613 + t1634 * t1614, 0, 0, 0, 0, 0, 0, t1634 * t1579 + t1638 * t1605, t1634 * t1580 - t1638 * t1603, t1634 * t1606 + t1638 * t1609, t1634 * t1552 + t1638 * t1591, 0, 0, 0, 0, 0, 0, t1634 * t1517 - t1693, t1702, t1698, t1634 * t1495 - t1638 * t1499, 0, 0, 0, 0, 0, 0, t1634 * t1523 - t1693, t1698, -t1702, t1634 * t1479 - t1638 * t1486, 0, 0, 0, 0, 0, 0, t1634 * t1483 - t1638 * t1488, t1634 * t1485 - t1638 * t1492, t1634 * t1475 - t1638 * t1476, t1634 * t1469 - t1638 * t1470; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1577, t1578, 0, t1551, 0, 0, 0, 0, 0, 0, t1515, t1520, t1691, t1494, 0, 0, 0, 0, 0, 0, t1521, t1691, -t1520, t1478, 0, 0, 0, 0, 0, 0, t1482, t1484, t1474, t1468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1639, -qJDD(1), 0, t1614, 0, 0, 0, 0, 0, 0, t1579, t1580, t1606, t1552, 0, 0, 0, 0, 0, 0, t1517, t1522, t1692, t1495, 0, 0, 0, 0, 0, 0, t1523, t1692, -t1522, t1479, 0, 0, 0, 0, 0, 0, t1483, t1485, t1475, t1469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1639, 0, t1613, 0, 0, 0, 0, 0, 0, t1605, -t1603, t1609, t1591, 0, 0, 0, 0, 0, 0, -t1685, -t1538, -t1678, -t1499, 0, 0, 0, 0, 0, 0, -t1685, -t1678, t1538, -t1486, 0, 0, 0, 0, 0, 0, -t1488, -t1492, -t1476, -t1470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1577, t1578, 0, t1551, 0, 0, 0, 0, 0, 0, t1515, t1520, t1691, t1494, 0, 0, 0, 0, 0, 0, t1521, t1691, -t1520, t1478, 0, 0, 0, 0, 0, 0, t1482, t1484, t1474, t1468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1618, t1611, t1656, t1582, 0, 0, 0, 0, 0, 0, t1684, t1540, t1677, t1500, 0, 0, 0, 0, 0, 0, t1684, t1677, -t1540, t1487, 0, 0, 0, 0, 0, 0, t1489, t1493, t1477, t1471; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1610, t1617, -t1657, t1581, 0, 0, 0, 0, 0, 0, -t1545, t1686, t1560, -t1555, 0, 0, 0, 0, 0, 0, -t1544, t1560, -t1686, -t1502, 0, 0, 0, 0, 0, 0, t1510, t1512, t1530, -t1498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1605, t1603, -t1609, -t1591, 0, 0, 0, 0, 0, 0, t1685, t1538, t1678, t1499, 0, 0, 0, 0, 0, 0, t1685, t1678, -t1538, t1486, 0, 0, 0, 0, 0, 0, t1488, t1492, t1476, t1470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1679, t1561, t1646, t1529, 0, 0, 0, 0, 0, 0, t1679, t1646, -t1561, t1501, 0, 0, 0, 0, 0, 0, t1509, t1519, t1491, t1473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1562, t1680, -t1550, t1528, 0, 0, 0, 0, 0, 0, -t1562, -t1550, -t1680, -t1503, 0, 0, 0, 0, 0, 0, -t1508, -t1518, -t1490, -t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1545, -t1686, -t1560, t1555, 0, 0, 0, 0, 0, 0, t1544, -t1560, t1686, t1502, 0, 0, 0, 0, 0, 0, -t1510, -t1512, -t1530, t1498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1679, t1646, -t1561, t1501, 0, 0, 0, 0, 0, 0, t1509, t1519, t1491, t1473; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1544, -t1560, t1686, t1502, 0, 0, 0, 0, 0, 0, -t1510, -t1512, -t1530, t1498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1562, t1550, t1680, t1503, 0, 0, 0, 0, 0, 0, t1508, t1518, t1490, t1472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, t1532, t1511, t1481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1531, t1553, t1513, t1480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1510, t1512, t1530, -t1498;];
f_new_reg = t1;
