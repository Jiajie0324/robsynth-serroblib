% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:36
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR11_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR11_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR11_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPR11_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:35:19
% EndTime: 2019-12-31 21:35:43
% DurationCPUTime: 14.81s
% Computational Cost: add. (8990->682), mult. (18180->887), div. (0->0), fcn. (17122->6), ass. (0->500)
t631 = qJD(3) - qJD(5);
t471 = sin(qJ(5));
t474 = cos(qJ(3));
t475 = cos(qJ(2));
t736 = t475 * pkin(2);
t473 = sin(qJ(2));
t738 = t473 * pkin(7);
t551 = -t736 - t738;
t526 = -pkin(1) + t551;
t392 = t474 * t526;
t696 = t473 * t474;
t554 = -pkin(8) * t696 - t392;
t523 = t471 * t554;
t472 = sin(qJ(3));
t620 = pkin(6) * t472 + pkin(3);
t568 = pkin(4) + t620;
t536 = t568 * t475;
t766 = pkin(7) - pkin(8);
t493 = (-t766 * t473 - pkin(1) - t736) * t472;
t737 = t474 * pkin(6);
t571 = -qJ(4) + t737;
t232 = t475 * t571 + t493;
t741 = cos(qJ(5));
t614 = t741 * t232;
t110 = t471 * t536 + t523 + t614;
t692 = t474 * t475;
t628 = pkin(6) * t692;
t483 = t493 + t628;
t245 = t741 * t483;
t697 = t472 * t475;
t629 = pkin(6) * t697;
t269 = -t554 - t629;
t705 = t471 * t269;
t128 = -t245 + t705;
t785 = t110 + t128;
t698 = t472 * t473;
t447 = pkin(3) * t698;
t695 = t474 * qJ(4);
t572 = -pkin(6) + t695;
t283 = -t447 + (-pkin(4) * t472 + t572) * t473;
t424 = t766 * t474;
t570 = t766 * t472;
t289 = -t741 * t424 - t471 * t570;
t397 = t471 * t472 + t741 * t474;
t349 = t397 * t473;
t742 = -t475 / 0.2e1;
t608 = t741 * t472;
t402 = -t471 * t474 + t608;
t755 = t402 / 0.2e1;
t701 = t472 * qJ(4);
t767 = pkin(3) + pkin(4);
t771 = -t767 * t474 - t701;
t380 = pkin(2) - t771;
t758 = t380 / 0.2e1;
t490 = t283 * t755 - t289 * t742 + t349 * t758;
t784 = t631 * t289;
t703 = t471 * t424;
t774 = t741 * t570;
t782 = -t774 + t703;
t762 = -t782 / 0.2e1;
t754 = t774 / 0.2e1;
t775 = t631 * t402;
t783 = t397 * t775;
t607 = t741 * t473;
t347 = t471 * t696 - t472 * t607;
t756 = t397 / 0.2e1;
t513 = t347 * t755 + t349 * t756;
t666 = qJD(2) * t402;
t781 = qJD(1) * t513 + t397 * t666;
t668 = qJD(1) * t349;
t780 = qJD(2) * t513 + t347 * t668;
t135 = t347 ^ 2 - t349 ^ 2;
t79 = t397 * t347 - t349 * t402;
t534 = qJD(1) * t135 + qJD(2) * t79;
t176 = t397 ^ 2 - t402 ^ 2;
t530 = qJD(1) * t79 + qJD(2) * t176;
t681 = t631 * t513;
t633 = t475 * qJD(1);
t563 = qJD(5) + t633;
t540 = -qJD(3) + t563;
t779 = t347 * t540;
t778 = t349 * t540;
t777 = t397 * t631;
t661 = qJD(3) * t475;
t600 = t472 * t661;
t470 = t475 ^ 2;
t468 = t473 ^ 2;
t699 = t472 * t468;
t401 = t472 * t470 - t699;
t640 = t401 * qJD(1);
t773 = t640 - t600;
t635 = t473 * qJD(2);
t772 = t474 * t635 + t640;
t632 = t475 * qJD(2);
t467 = t472 ^ 2;
t469 = t474 ^ 2;
t437 = t469 - t467;
t770 = 0.2e1 * t472 * (qJD(3) + t633) * t696 - t437 * t632;
t487 = t536 + t554;
t181 = t741 * t487;
t707 = t471 * t232;
t109 = -t181 + t707;
t765 = t109 / 0.2e1;
t482 = t471 * t483;
t612 = t741 * t269;
t129 = t612 + t482;
t764 = -t129 / 0.2e1;
t763 = -t289 / 0.2e1;
t325 = t472 * t526 + t628;
t761 = t325 / 0.2e1;
t339 = -t473 * t572 + t447;
t760 = t339 / 0.2e1;
t351 = t397 * t475;
t591 = t351 / 0.2e1;
t544 = t474 * pkin(3) + t701;
t377 = t544 * t473;
t759 = -t377 / 0.2e1;
t389 = -t767 * t472 + t695;
t757 = t389 / 0.2e1;
t408 = t741 * qJ(4) - t471 * t767;
t753 = t408 / 0.2e1;
t735 = t475 * pkin(7);
t739 = t473 * pkin(2);
t425 = -t735 + t739;
t752 = -t425 / 0.2e1;
t449 = pkin(6) * t698;
t751 = -t449 / 0.2e1;
t750 = -t471 / 0.2e1;
t749 = t471 / 0.2e1;
t748 = -t472 / 0.2e1;
t747 = t472 / 0.2e1;
t746 = -t473 / 0.2e1;
t745 = t473 / 0.2e1;
t744 = -t474 / 0.2e1;
t743 = t474 / 0.2e1;
t740 = t472 * pkin(2);
t734 = t631 * t79;
t616 = t475 * t741;
t702 = t471 * t475;
t29 = t109 * t702 + t110 * t616 - t283 * t696;
t733 = qJD(1) * t29;
t428 = t475 * t608;
t350 = t471 * t692 - t428;
t609 = t741 * t397;
t555 = t609 / 0.2e1;
t714 = t402 * t475;
t590 = -t714 / 0.2e1;
t610 = t741 * t351;
t99 = t475 * t555 + t610 / 0.2e1 + (t590 + t350 / 0.2e1) * t471;
t732 = qJD(1) * t99;
t465 = t473 * pkin(3);
t206 = -t473 * pkin(4) - t449 - t465 + (-pkin(8) * t475 - t425) * t474;
t615 = t741 * t206;
t404 = t472 * t425;
t331 = -pkin(6) * t696 + t404;
t463 = t473 * qJ(4);
t302 = t331 + t463;
t236 = pkin(8) * t697 + t302;
t706 = t471 * t236;
t111 = t615 - t706;
t613 = t741 * t236;
t708 = t471 * t206;
t112 = t613 + t708;
t10 = t109 * t351 - t110 * t350 - t111 * t349 - t112 * t347;
t731 = t10 * qJD(1);
t284 = (-pkin(6) + t389) * t475;
t12 = -t109 * t111 + t110 * t112 + t283 * t284;
t730 = t12 * qJD(1);
t14 = t785 * t349 + (t109 - t129) * t347;
t729 = t14 * qJD(1);
t323 = t771 * t473;
t17 = t109 * t128 + t110 * t129 + t283 * t323;
t728 = t17 * qJD(1);
t25 = t109 * t473 + t111 * t475 + t283 * t350 + t284 * t347;
t727 = t25 * qJD(1);
t26 = -t110 * t473 + t112 * t475 - t283 * t351 - t284 * t349;
t726 = t26 * qJD(1);
t725 = t283 * t347;
t724 = t283 * t349;
t723 = t782 * t471;
t722 = t782 * t475;
t296 = t472 * (-pkin(1) - t738) + (t571 - t740) * t475;
t721 = t296 * t475;
t324 = -t392 + t629;
t720 = t324 * t475;
t719 = t325 * t475;
t718 = t339 * t472;
t717 = t339 * t474;
t716 = t377 * t472;
t549 = t245 / 0.2e1 - t705 / 0.2e1;
t38 = -t614 / 0.2e1 - t523 / 0.2e1 + (t568 * t750 + t753) * t475 + t549;
t715 = t38 * qJD(1);
t407 = t471 * qJ(4) + t741 * t767;
t713 = t407 * t475;
t409 = -pkin(2) - t544;
t712 = t409 * t472;
t44 = -t128 * t475 + t323 * t347 - t724;
t711 = t44 * qJD(1);
t45 = t129 * t475 - t323 * t349 - t725;
t710 = t45 * qJD(1);
t300 = t620 * t475 - t392;
t694 = t474 * t425;
t330 = t449 + t694;
t303 = -t330 - t465;
t423 = pkin(3) * t472 - t695;
t340 = (pkin(6) + t423) * t475;
t46 = t296 * t302 + t300 * t303 + t339 * t340;
t709 = t46 * qJD(1);
t704 = t471 * t402;
t700 = t472 * t349;
t693 = t474 * t468;
t48 = -t296 * t324 + t300 * t325 + t339 * t377;
t691 = t48 * qJD(1);
t577 = -t324 / 0.2e1 + t300 / 0.2e1;
t579 = qJ(4) * t742;
t49 = t325 * t748 + (t579 + t296 / 0.2e1) * t472 + (pkin(3) * t742 - t577) * t474;
t690 = t49 * qJD(1);
t51 = -t109 * t475 + t725;
t689 = t51 * qJD(1);
t52 = -t110 * t475 + t724;
t688 = t52 * qJD(1);
t54 = -t300 * t692 - t303 * t696 + (t302 * t473 + t721) * t472;
t687 = t54 * qJD(1);
t58 = ((t296 - t325) * t474 + (t300 - t324) * t472) * t473;
t686 = t58 * qJD(1);
t537 = t339 * t475 + t340 * t473;
t63 = -t296 * t473 + t302 * t475 + t474 * t537;
t685 = t63 * qJD(1);
t64 = -t300 * t473 + t303 * t475 + t472 * t537;
t684 = t64 * qJD(1);
t65 = (t330 * t473 - t720) * t474 + (t331 * t473 + t719) * t472;
t683 = t65 * qJD(1);
t83 = pkin(6) ^ 2 * t473 * t475 - t324 * t330 + t325 * t331;
t682 = t83 * qJD(1);
t580 = t692 / 0.2e1;
t585 = t697 / 0.2e1;
t679 = t471 * t585 + t741 * t580;
t556 = -t616 / 0.2e1;
t586 = -t697 / 0.2e1;
t678 = t471 * t586 + t474 * t556;
t581 = -t692 / 0.2e1;
t677 = t428 / 0.2e1 + t471 * t581;
t676 = -t428 / 0.2e1 + t471 * t580;
t116 = t719 + (t716 + t717) * t473;
t675 = qJD(1) * t116;
t611 = t741 * t347;
t149 = t349 * t702 - t475 * t611;
t674 = qJD(1) * t149;
t165 = t347 * t473 - t350 * t475;
t673 = qJD(1) * t165;
t166 = -t349 * t473 + t351 * t475;
t672 = qJD(1) * t166;
t233 = -pkin(6) * t699 - t720;
t671 = qJD(1) * t233;
t234 = -pkin(6) * t693 - t719;
t670 = qJD(1) * t234;
t669 = qJD(1) * t347;
t667 = qJD(2) * t397;
t665 = qJD(2) * t472;
t664 = qJD(2) * t474;
t663 = qJD(3) * t472;
t662 = qJD(3) * t474;
t660 = qJD(4) * t471;
t659 = qJD(4) * t472;
t658 = qJD(4) * t475;
t657 = qJD(5) * t380;
t115 = -t347 * t351 - t349 * t350;
t656 = t115 * qJD(1);
t117 = -t339 * t698 + t377 * t696 - t720;
t655 = t117 * qJD(1);
t617 = t289 * t741;
t258 = -t617 / 0.2e1;
t557 = t617 / 0.2e1;
t131 = t258 + t557;
t654 = t131 * qJD(2);
t653 = t131 * qJD(4);
t132 = t324 * t473 + (t330 - 0.2e1 * t449) * t475;
t652 = t132 * qJD(1);
t133 = t331 * t475 + (-t325 + 0.2e1 * t628) * t473;
t651 = t133 * qJD(1);
t139 = t339 * t696 + t721;
t650 = t139 * qJD(1);
t196 = t590 + t676;
t649 = t196 * qJD(1);
t589 = t714 / 0.2e1;
t197 = t589 + t677;
t648 = t197 * qJD(1);
t198 = t591 + t679;
t647 = t198 * qJD(1);
t592 = -t351 / 0.2e1;
t199 = t592 + t678;
t646 = t199 * qJD(1);
t248 = t347 * t696 + t470 * t471;
t645 = t248 * qJD(1);
t249 = t349 * t696 + t741 * t470;
t644 = t249 * qJD(1);
t643 = t324 * qJD(3);
t575 = t467 / 0.2e1 - t469 / 0.2e1;
t381 = t575 * t473;
t642 = t381 * qJD(3);
t403 = t474 * t470 - t693;
t639 = t403 * qJD(1);
t638 = t437 * qJD(3);
t438 = t470 - t468;
t637 = t438 * qJD(1);
t461 = t471 * qJD(3);
t636 = t473 * qJD(1);
t634 = t474 * qJD(4);
t630 = t751 - t465;
t627 = t741 / 0.2e1;
t626 = pkin(1) * t636;
t625 = pkin(1) * t633;
t624 = pkin(7) * t663;
t623 = pkin(7) * t662;
t622 = t740 / 0.2e1;
t621 = t735 / 0.2e1;
t619 = t111 * t741;
t618 = t128 * t741;
t605 = t347 * t633;
t604 = t349 * t633;
t603 = t474 * t636;
t599 = t474 * t661;
t598 = t471 * t658;
t597 = t472 * t634;
t444 = t472 * t662;
t443 = t472 * t664;
t596 = t472 * t633;
t595 = t473 * t632;
t594 = t473 * t659;
t593 = t473 * t633;
t588 = t409 * t745;
t587 = t347 * t747;
t584 = -t696 / 0.2e1;
t583 = t696 / 0.2e1;
t582 = t397 * t743;
t578 = t782 / 0.2e1 + t762;
t576 = t751 - t465 / 0.2e1;
t574 = qJD(5) * t741;
t462 = t741 * qJD(3);
t573 = t741 * qJD(4);
t356 = (-0.1e1 / 0.2e1 + t575) * t473;
t569 = qJD(1) * t356 - t443;
t304 = qJD(1) * t381 - t443;
t421 = t472 * qJD(1) * t693;
t278 = qJD(2) * t381 + t421;
t565 = t631 * t475;
t446 = -qJD(3) + t633;
t562 = t468 * t444;
t561 = t472 * t603;
t560 = t473 * t443;
t559 = t475 * t573;
t558 = t741 * t763;
t553 = t633 - qJD(3) / 0.2e1;
t550 = 0.2e1 * t560;
t548 = -t713 / 0.2e1 + t765;
t547 = t423 * t745 + t760;
t543 = -t409 * t475 + t738;
t478 = t109 * t763 - t289 * t764 - t283 * t389 / 0.2e1 - t323 * t380 / 0.2e1 + t785 * t762;
t516 = -t111 * t407 / 0.2e1 + t112 * t753;
t1 = t478 + t516;
t47 = t380 * t389;
t542 = -t1 * qJD(1) + t47 * qJD(2);
t476 = (t110 / 0.2e1 + t128 / 0.2e1) * t402 + (t764 + t765) * t397 - t578 * t347;
t512 = t407 * t591 - t408 * t350 / 0.2e1;
t4 = t476 - t512;
t541 = t4 * qJD(1);
t539 = t302 * t474 + t303 * t472;
t538 = -t330 * t472 + t331 * t474;
t136 = -t380 * t402 + t389 * t397;
t480 = t323 * t756 + t347 * t757 - t490;
t498 = -t706 / 0.2e1 + t615 / 0.2e1;
t485 = t407 * t746 + t498;
t21 = t480 + t485;
t533 = -qJD(1) * t21 - qJD(2) * t136;
t137 = t380 * t397 + t389 * t402;
t515 = t283 * t756 + t347 * t758;
t481 = t323 * t755 + t349 * t757 + t742 * t782 + t515;
t499 = -t708 / 0.2e1 - t613 / 0.2e1;
t484 = t408 * t746 + t499;
t24 = t481 + t484;
t532 = -qJD(1) * t24 - qJD(2) * t137;
t270 = t409 * t474 + t423 * t472;
t385 = -t404 / 0.2e1;
t429 = pkin(7) * t585;
t60 = t429 - t716 / 0.2e1 - t717 / 0.2e1 - t463 + t385 + (t712 / 0.2e1 + (-t423 / 0.2e1 + pkin(6) / 0.2e1) * t474) * t473;
t529 = -qJD(1) * t60 + qJD(2) * t270;
t271 = t423 * t474 - t712;
t520 = t588 + t621;
t496 = t759 + t520;
t517 = t547 * t472;
t62 = t517 + (t752 + t496) * t474 + t630;
t528 = -qJD(1) * t62 + qJD(2) * t271;
t275 = t754 - t774 / 0.2e1;
t477 = -t482 / 0.2e1 - t612 / 0.2e1;
t495 = t181 / 0.2e1 + t713 / 0.2e1 - t707 / 0.2e1;
t39 = t477 - t495;
t527 = -t39 * qJD(1) + t275 * qJD(2);
t525 = t446 * t473;
t524 = t621 - t739 / 0.2e1;
t395 = qJD(1) * t616 - t462;
t521 = -t302 * qJ(4) / 0.2e1 + t303 * pkin(3) / 0.2e1;
t384 = t404 / 0.2e1;
t430 = pkin(7) * t586;
t265 = t473 * t622 + t384 + t430;
t519 = pkin(2) * t664 - qJD(1) * t265;
t266 = (t752 + t524) * t474;
t518 = pkin(2) * t665 - qJD(1) * t266;
t500 = t283 * t747 + t380 * t583;
t20 = -t289 * t556 - t619 / 0.2e1 + (-t722 / 0.2e1 - t112 / 0.2e1) * t471 + t500;
t511 = -qJD(1) * t20 - t380 * t665;
t479 = (t577 * t474 + (-t296 / 0.2e1 + t761) * t472) * pkin(7) + t423 * t760 + t377 * t409 / 0.2e1;
t28 = t479 + t521;
t510 = -t409 * t423 * qJD(2) - t28 * qJD(1);
t30 = -t490 + t498;
t509 = qJD(1) * t30 - t380 * t666;
t491 = t722 / 0.2e1 - t515;
t31 = -t491 + t499;
t508 = qJD(1) * t31 + t380 * t667;
t346 = t474 * t525;
t113 = t718 / 0.2e1 + (t752 + t520) * t474 + t576;
t507 = qJD(1) * t113 + t409 * t665;
t145 = -t700 / 0.2e1 + (t402 * t744 + t749) * t473;
t502 = -qJD(1) * t145 + t402 * t665;
t146 = t587 + (t582 + t627) * t473;
t501 = qJD(1) * t146 + t397 * t665;
t457 = t469 * t468;
t399 = t467 * t468 - t457;
t298 = -qJD(1) * t399 + t550;
t328 = -t437 * qJD(2) + 0.2e1 * t561;
t497 = t401 * qJD(2) + t473 * t599;
t489 = t110 * t627 + t408 * t556;
t16 = t618 / 0.2e1 + (t764 + t548) * t471 + t489;
t264 = t407 * t471 + t408 * t741;
t56 = t578 * t471 + t557 + t558;
t494 = -qJD(1) * t16 + qJD(2) * t56 - qJD(3) * t264;
t492 = -t399 * qJD(3) + t475 * t550;
t488 = -qJD(3) * t544 + t634;
t412 = t470 + t457;
t486 = t412 * qJD(1) + t560 - t661;
t454 = -t636 / 0.2e1;
t453 = t636 / 0.2e1;
t452 = -t635 / 0.2e1;
t451 = t635 / 0.2e1;
t445 = t474 * t633;
t422 = t474 * t594;
t411 = t446 * qJ(4);
t396 = -t445 + t662;
t394 = t446 * t472;
t393 = t471 * t633 - t461;
t391 = t553 * t473;
t388 = t694 / 0.2e1;
t376 = t467 * qJD(2) + t561;
t357 = t467 * t746 + t469 * t745 + t746;
t355 = t574 + t395;
t354 = t471 * t563 - t461;
t345 = (t603 + t665) * t475;
t344 = (-t472 * t636 + t664) * t475;
t343 = t472 * t525;
t338 = (qJD(5) / 0.2e1 + t553) * t473;
t327 = t469 * t595 - t562;
t326 = t467 * t595 + t562;
t313 = t472 * t635 - t639;
t312 = -t599 + t639;
t311 = t325 * qJD(3);
t310 = t472 * t346;
t299 = -t403 * qJD(2) + t473 * t600;
t277 = -t469 * t593 - t642;
t276 = -t467 * t593 + t642;
t205 = t474 * t524 + t388 + t449;
t204 = t430 + t385 + (t622 + t737) * t473;
t203 = t590 + t677;
t202 = t589 + t676;
t201 = t592 + t679;
t200 = t591 + t678;
t190 = -t642 + (t469 * t636 + t443) * t475;
t189 = t642 + (t467 * t636 - t443) * t475;
t179 = -t703 + 0.2e1 * t754;
t148 = t700 / 0.2e1 + t402 * t583 + t471 * t745;
t147 = t587 + t473 * t582 - t607 / 0.2e1;
t144 = -t609 + t704;
t130 = t131 * qJD(5);
t124 = t471 * t349 - t611;
t114 = pkin(7) * t581 + t409 * t584 - t718 / 0.2e1 - t694 / 0.2e1 + t576;
t98 = t350 * t750 - t610 / 0.2e1 + (t555 - t704 / 0.2e1) * t475;
t61 = t496 * t474 + t388 + t517 - t630;
t59 = t429 + t463 + pkin(6) * t584 + t384 - t547 * t474 + (t588 + t759) * t472;
t57 = t258 + t723 / 0.2e1 + t782 * t749 + t558;
t50 = t324 * t744 + t296 * t748 + t300 * t743 + pkin(3) * t581 + (t761 + t579) * t472;
t41 = t408 * t742 + t614 / 0.2e1 + t487 * t749 + t549;
t40 = t477 + t495;
t33 = t490 + t498;
t32 = t491 + t499;
t27 = t479 - t521;
t23 = t481 - t484;
t22 = t480 - t485;
t19 = t112 * t749 + t619 / 0.2e1 + (t557 - t723 / 0.2e1) * t475 + t500;
t15 = t129 * t749 - t618 / 0.2e1 + t548 * t471 + t489;
t3 = t476 + t512;
t2 = -t478 + t516;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t595, t438 * qJD(2), 0, -t595, 0, 0, -pkin(1) * t635, -pkin(1) * t632, 0, 0, t327, -t492, t299, t326, t497, -t595, -qJD(2) * t132 - qJD(3) * t234, qJD(2) * t133 + qJD(3) * t233, -t65 * qJD(2), t83 * qJD(2), t327, t299, t492, -t595, -t497, t326, qJD(2) * t64 + qJD(3) * t116 - t468 * t597, -t54 * qJD(2) - t58 * qJD(3) + t475 * t594, -qJD(2) * t63 - qJD(3) * t117 + qJD(4) * t412, qJD(2) * t46 + qJD(3) * t48 - qJD(4) * t139, (qJD(2) * t351 + t347 * t631) * t349, qJD(2) * t115 - t631 * t135, t166 * qJD(2) + t347 * t565, (qJD(2) * t350 - t349 * t631) * t347, t165 * qJD(2) + t349 * t565, -t595, qJD(2) * t25 + qJD(3) * t44 + qJD(4) * t248 + qJD(5) * t52, -qJD(2) * t26 - qJD(3) * t45 + qJD(4) * t249 - qJD(5) * t51, qJD(2) * t10 + qJD(3) * t14 - qJD(4) * t149, qJD(2) * t12 + qJD(3) * t17 - qJD(4) * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t593, t637, t632, -t593, -t635, 0, -pkin(6) * t632 - t626, pkin(6) * t635 - t625, 0, 0, t190, -t770, t313, t189, t772, -t391, -t652 + (t472 * t551 - t628) * qJD(2) + t205 * qJD(3), t651 + (t474 * t551 + t629) * qJD(2) + t204 * qJD(3), qJD(2) * t538 - t683, t682 + (-pkin(6) * t736 + pkin(7) * t538) * qJD(2), t190, t313, t770, -t391, -t772, t189, t684 + (-t340 * t474 - t472 * t543) * qJD(2) + t61 * qJD(3) + t357 * qJD(4), qJD(2) * t539 + t50 * qJD(3) - t687, -t685 + (-t340 * t472 + t474 * t543) * qJD(2) + t59 * qJD(3) + t422, t709 + (pkin(7) * t539 + t340 * t409) * qJD(2) + t27 * qJD(3) + t114 * qJD(4), (t666 + t668) * t351 + t681, t656 + (-t350 * t402 - t351 * t397) * qJD(2) - t734, qJD(3) * t200 + qJD(5) * t201 - t402 * t635 + t672, (t667 + t669) * t350 - t681, qJD(3) * t202 + qJD(5) * t203 + t397 * t635 + t673, -t338, t727 + (t284 * t397 + t350 * t380 + t473 * t782) * qJD(2) + t22 * qJD(3) + t147 * qJD(4) + t33 * qJD(5), -t726 + (t284 * t402 - t289 * t473 + t351 * t380) * qJD(2) + t23 * qJD(3) + t148 * qJD(4) + t32 * qJD(5), t731 + (-t111 * t402 - t112 * t397 + t289 * t350 + t351 * t782) * qJD(2) + t3 * qJD(3) + t98 * qJD(4), t730 + (-t111 * t782 - t112 * t289 + t284 * t380) * qJD(2) + t2 * qJD(3) + t19 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t278, -t298, t343, t278, t346, t451, qJD(2) * t205 - t311 - t670, qJD(2) * t204 + t643 + t671, 0, 0, -t278, t343, t298, t451, -t346, t278, qJD(2) * t61 - t311 + t675, -t686 + t50 * qJD(2) + (-t473 * t695 + t447) * qJD(3) - t594, t59 * qJD(2) - t643 - t655 - t658, t691 + t27 * qJD(2) + (-pkin(3) * t325 - qJ(4) * t324) * qJD(3) + t296 * qJD(4), t780, -t534, t200 * qJD(2) + t779, -t780, t202 * qJD(2) + t778, t451, t22 * qJD(2) + t128 * qJD(3) + t41 * qJD(5) - t598 + t711, t23 * qJD(2) + t129 * qJD(3) + t40 * qJD(5) - t559 - t710, t729 + t3 * qJD(2) + (t407 * t347 + t408 * t349) * qJD(3) + t124 * qJD(4), t728 + t2 * qJD(2) + (t128 * t407 + t129 * t408) * qJD(3) + t15 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t357 - t421, t343, t486, qJD(2) * t114 + qJD(3) * t296 - t650, 0, 0, 0, 0, 0, 0, t147 * qJD(2) - t461 * t475 + t645, t148 * qJD(2) - t462 * t475 + t644, qJD(2) * t98 + qJD(3) * t124 - t674, qJD(2) * t19 + qJD(3) * t15 - t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t780, t534, t201 * qJD(2) - t779, t780, t203 * qJD(2) - t778, t452, qJD(2) * t33 + qJD(3) * t41 - qJD(5) * t110 + t688, qJD(2) * t32 + qJD(3) * t40 + qJD(5) * t109 - t689, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t593, -t637, 0, t593, 0, 0, t626, t625, 0, 0, t277, 0.2e1 * t310, t312, t276, -t773, t391, qJD(3) * t266 + t652, qJD(3) * t265 - t651, t683, -t682, t277, t312, -0.2e1 * t310, t391, t773, t276, qJD(3) * t62 - qJD(4) * t356 - t684, -t49 * qJD(3) - t475 * t634 + t687, qJD(3) * t60 + t422 + t685, qJD(3) * t28 - qJD(4) * t113 - t709, -t351 * t668 + t681, -t656 - t734, -qJD(3) * t199 - qJD(5) * t198 - t672, -t350 * t669 - t681, -qJD(3) * t196 - qJD(5) * t197 - t673, t338, qJD(3) * t21 + qJD(4) * t146 - qJD(5) * t30 - t727, qJD(3) * t24 - qJD(4) * t145 - qJD(5) * t31 + t726, qJD(3) * t4 + qJD(4) * t99 - t731, -qJD(3) * t1 + qJD(4) * t20 - t730; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t444, t638, 0, -t444, 0, 0, -pkin(2) * t663, -pkin(2) * t662, 0, 0, t444, 0, -t638, 0, 0, -t444, -qJD(3) * t271 + t597, 0, -qJD(3) * t270 + qJD(4) * t467, (qJD(3) * t423 - t659) * t409, t783, -t631 * t176, 0, -t783, 0, 0, qJD(3) * t136 + t397 * t659 + t402 * t657, qJD(3) * t137 - t397 * t657 + t402 * t659, 0, qJD(3) * t47 + t380 * t659; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t304, -t328, t396, t304, t394, t454, -t518 - t623, -t519 + t624, 0, 0, -t304, t396, t328, t454, -t394, t304, -t528 - t623, t488 - t690, -t529 - t624, pkin(7) * t488 - t510, t781, -t530, -t646 - t777, -t781, -t775 - t649, t454, -t533 + t784, qJD(3) * t782 + qJD(5) * t179 - t532, (t407 * t397 + t408 * t402) * qJD(3) + t144 * qJD(4) + t541, (t289 * t407 + t408 * t782) * qJD(3) + t57 * qJD(4) + t542; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t569, t396, t376, -t507 + t623, 0, 0, 0, 0, 0, 0, t501, t502, qJD(3) * t144 + t732, qJD(3) * t57 + t130 - t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t781, t530, -t647 + t777, t781, t775 - t648, t453, -t509 - t784, qJD(3) * t179 + qJD(5) * t782 - t508, 0, t653; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, t298, t344, -t278, -t345, t451, -qJD(2) * t266 + t670, -qJD(2) * t265 - t671, 0, 0, t278, t344, -t298, t451, t345, -t278, -qJD(2) * t62 - t675, qJD(2) * t49 + t686, -t60 * qJD(2) + t655 - t658, -qJ(4) * t658 - t28 * qJD(2) - t691, -t780, t534, t199 * qJD(2) - t605, t780, t196 * qJD(2) - t604, t451, -t21 * qJD(2) - t38 * qJD(5) - t598 - t711, -t24 * qJD(2) - t39 * qJD(5) - t559 + t710, -qJD(2) * t4 - t729, qJD(2) * t1 + qJD(4) * t16 - t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t304, t328, t445, -t304, -t596, t453, t518, t519, 0, 0, t304, t445, -t328, t453, t596, -t304, t528, t690, t529, t510, -t781, t530, t646, t781, t649, t453, t533, qJD(5) * t275 + t532, -t541, -qJD(4) * t56 - t542; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), 0, 0, 0, 0, 0, 0, qJD(5) * t408 + t660, -t407 * qJD(5) + t573, 0, t264 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t446, -t411, 0, 0, 0, 0, 0, 0, -t393, -t395, 0, -t494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t408 * t631 - t715, -t407 * t631 + t527, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t356 + t421, t344, -t486, qJ(4) * t661 + t113 * qJD(2) + t650, 0, 0, 0, 0, 0, 0, -t146 * qJD(2) + t471 * t565 - t645, -t644 + t145 * qJD(2) + (t462 - t574) * t475, -qJD(2) * t99 + t674, -qJD(2) * t20 - qJD(3) * t16 + t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t569, t445, -t376, t507, 0, 0, 0, 0, 0, 0, -t501, -t502, -t732, qJD(3) * t56 + t130 + t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t446, t411, 0, 0, 0, 0, 0, 0, t354, t355, 0, t494; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t354, -t355, 0, t654; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t780, -t534, t198 * qJD(2) + t605, -t780, t197 * qJD(2) + t604, t452, t30 * qJD(2) + t38 * qJD(3) + t598 - t688, t31 * qJD(2) + t39 * qJD(3) + t559 + t689, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t781, -t530, t647, -t781, t648, t454, t509, -qJD(3) * t275 + t508, 0, -t653; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t408 - t660 + t715, t407 * qJD(3) - t527 - t573, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, t395, 0, -t654; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
