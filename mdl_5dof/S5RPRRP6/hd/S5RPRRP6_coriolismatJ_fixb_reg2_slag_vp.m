% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:43
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRP6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:43:21
% EndTime: 2019-12-31 18:43:27
% DurationCPUTime: 3.24s
% Computational Cost: add. (2837->306), mult. (5770->434), div. (0->0), fcn. (4832->6), ass. (0->265)
t216 = sin(qJ(4));
t359 = 0.2e1 * t216;
t218 = cos(qJ(4));
t202 = -cos(pkin(8)) * pkin(1) - pkin(2);
t217 = sin(qJ(3));
t219 = cos(qJ(3));
t237 = -pkin(3) * t219 - pkin(7) * t217;
t220 = t237 + t202;
t127 = t218 * t220;
t310 = t218 * qJ(5);
t268 = t217 * t310;
t201 = sin(pkin(8)) * pkin(1) + pkin(6);
t322 = t201 * t216;
t58 = -t268 + t127 + (-pkin(4) - t322) * t219;
t306 = t219 * t201;
t270 = t216 * t306;
t83 = -t127 + t270;
t69 = t83 + t268;
t358 = t58 + t69;
t213 = t217 ^ 2;
t215 = t219 ^ 2;
t344 = t219 * pkin(7);
t348 = t217 * pkin(3);
t180 = -t344 + t348;
t167 = t216 * t180;
t312 = t217 * t218;
t269 = t201 * t312;
t103 = t167 - t269;
t335 = t103 * t217;
t168 = t218 * t180;
t314 = t217 * t201;
t170 = t216 * t314;
t102 = t170 + t168;
t336 = t102 * t217;
t267 = t218 * t306;
t84 = t216 * t220 + t267;
t337 = t84 * t219;
t338 = t83 * t219;
t13 = (t335 / 0.2e1 + t337 / 0.2e1) * t218 + (-t336 / 0.2e1 + t338 / 0.2e1) * t216 + (t213 / 0.2e1 - t215 / 0.2e1) * t201;
t212 = t216 ^ 2;
t214 = t218 ^ 2;
t192 = t214 + t212;
t311 = t217 * t219;
t106 = (-0.1e1 + t192) * t311;
t295 = t106 * qJD(2);
t357 = -t13 * qJD(1) - t295;
t244 = t216 * pkin(4) + t201;
t130 = t244 * t217;
t131 = t244 * t219;
t350 = -t216 / 0.2e1;
t266 = t58 * t350;
t349 = t218 / 0.2e1;
t316 = t216 * t217;
t70 = -qJ(5) * t316 + t84;
t307 = t219 * qJ(5);
t347 = t217 * pkin(4);
t73 = -t218 * t307 + t102 + t347;
t82 = -t216 * t307 + t103;
t5 = (t70 * t349 + t266 - t131 / 0.2e1) * t219 + (t82 * t349 + t73 * t350 + t130 / 0.2e1) * t217;
t356 = t5 * qJD(1) + t295;
t355 = pkin(4) / 0.2e1;
t354 = t73 / 0.2e1;
t343 = pkin(7) + qJ(5);
t176 = t343 * t218;
t353 = -t176 / 0.2e1;
t352 = t212 / 0.2e1;
t351 = -t214 / 0.2e1;
t346 = t218 * pkin(4);
t345 = t219 * pkin(4);
t275 = t69 / 0.2e1 + t58 / 0.2e1;
t276 = t345 / 0.2e1;
t6 = (t276 - t275) * t218;
t341 = t6 * qJD(1);
t340 = t70 * t219;
t238 = -t58 / 0.2e1 - t345 / 0.2e1;
t8 = (-t69 / 0.2e1 + t238) * t312;
t339 = t8 * qJD(1);
t11 = t358 * t316;
t334 = t11 * qJD(1);
t12 = (t73 * t217 + t58 * t219) * t218 + (t82 * t217 + t340) * t216;
t333 = t12 * qJD(1);
t331 = t130 * t216;
t330 = t130 * t218;
t329 = t131 * t218;
t16 = (t336 - t338) * t218 + (t335 + t337) * t216;
t328 = t16 * qJD(1);
t315 = t216 * t219;
t17 = -t130 * t315 - t131 * t316 - t58 * t217 + t219 * t73;
t327 = t17 * qJD(1);
t175 = t343 * t216;
t326 = t175 * t217;
t325 = t175 * t219;
t324 = t176 * t219;
t20 = (t82 + t330) * t219 + (-t70 + t329) * t217;
t323 = t20 * qJD(1);
t209 = -pkin(3) - t346;
t321 = t209 * t216;
t320 = t209 * t218;
t319 = t212 * t217;
t318 = t212 * t219;
t317 = t214 * t217;
t313 = t217 * t209;
t309 = t218 * t213;
t308 = t218 * t219;
t23 = (t216 * t70 + t58 * t218) * t217;
t305 = t23 * qJD(1);
t26 = t83 * t217 + (t102 - 0.2e1 * t170) * t219;
t304 = t26 * qJD(1);
t27 = t103 * t219 + (-t84 + 0.2e1 * t267) * t217;
t303 = t27 * qJD(1);
t272 = t216 * t309;
t274 = t130 * t312;
t29 = -pkin(4) * t272 - t274 - t340;
t302 = t29 * qJD(1);
t34 = pkin(4) * t213 * t214 - t130 * t316 - t219 * t69;
t301 = t34 * qJD(1);
t44 = -t213 * t322 - t338;
t300 = t44 * qJD(1);
t45 = -t201 * t309 - t337;
t299 = t45 * qJD(1);
t298 = t70 * qJD(4);
t193 = t214 - t212;
t194 = t215 - t213;
t297 = qJD(4) * t216;
t210 = qJD(4) * t218;
t296 = qJD(4) * t219;
t245 = t352 + t351;
t149 = t245 * t217;
t294 = t149 * qJD(4);
t163 = t192 * t213;
t293 = t163 * qJD(1);
t165 = t194 * t216;
t292 = t165 * qJD(1);
t166 = t215 * t218 - t309;
t291 = t166 * qJD(1);
t290 = t176 * qJD(4);
t289 = t192 * qJD(3);
t288 = t194 * qJD(1);
t287 = t216 * qJD(3);
t286 = t216 * qJD(5);
t285 = t217 * qJD(1);
t284 = t217 * qJD(3);
t283 = t217 * qJD(4);
t282 = t218 * qJD(3);
t281 = t218 * qJD(5);
t280 = t219 * qJD(1);
t279 = t219 * qJD(3);
t278 = t219 * qJD(5);
t153 = t168 / 0.2e1;
t277 = t153 + t170 / 0.2e1;
t273 = t176 * t316;
t271 = t216 * t312;
t265 = t216 * t283;
t264 = t216 * t296;
t263 = t218 * t283;
t262 = t218 * t296;
t261 = t202 * t285;
t260 = t202 * t280;
t197 = t216 * t210;
t259 = t216 * t282;
t258 = t216 * t280;
t257 = t216 * t278;
t256 = t217 * t279;
t255 = t217 * t280;
t254 = t217 * t282;
t253 = t218 * t285;
t252 = t217 * t281;
t251 = t218 * t278;
t250 = -t331 / 0.2e1;
t249 = -t313 / 0.2e1;
t248 = t312 / 0.2e1;
t247 = -t308 / 0.2e1;
t246 = t307 / 0.2e1;
t243 = pkin(4) * t263;
t242 = -qJD(4) + t280;
t241 = t213 * t197;
t240 = t216 * t254;
t239 = -pkin(4) * t271 + t325 / 0.2e1;
t9 = t130 * t131 + t58 * t73 + t70 * t82;
t236 = qJD(1) * t9 + qJD(2) * t5;
t10 = pkin(4) * t274 - t358 * t70;
t235 = qJD(1) * t10 + qJD(2) * t8;
t223 = t218 * t249 + t250;
t2 = t275 * t176 + (t354 + t223) * pkin(4);
t37 = pkin(4) * t321;
t234 = -qJD(1) * t2 + qJD(3) * t37;
t18 = t201 ^ 2 * t311 - t102 * t83 + t103 * t84;
t233 = t18 * qJD(1) + t13 * qJD(2);
t232 = -t102 * t216 + t103 * t218;
t93 = t175 * t216 + t176 * t218;
t137 = t216 * t346 - t321;
t21 = t250 + (-t310 / 0.2e1 + t353) * t219 + (-t320 / 0.2e1 + (0.1e1 - t245) * pkin(4)) * t217 + t277;
t231 = -qJD(1) * t21 - qJD(3) * t137;
t150 = t212 * pkin(4) + t320;
t152 = -t167 / 0.2e1;
t24 = t152 + (t314 / 0.2e1 - t130 / 0.2e1) * t218 + (t246 + t313 / 0.2e1) * t216 + t239;
t230 = -qJD(1) * t24 + qJD(3) * t150;
t229 = t242 * t217;
t228 = t344 / 0.2e1 - t348 / 0.2e1;
t224 = t228 * t218;
t86 = -t168 / 0.2e1 + t224;
t227 = pkin(3) * t287 - qJD(1) * t86;
t225 = t228 * t216;
t85 = t167 / 0.2e1 - t225;
t226 = pkin(3) * t282 - qJD(1) * t85;
t126 = t218 * t229;
t105 = -qJD(1) * t149 + t259;
t161 = t253 + t287;
t159 = t216 * t285 - t282;
t90 = qJD(1) * t272 + qJD(3) * t149;
t164 = t193 * t213;
t99 = qJD(1) * t164 + 0.2e1 * t240;
t121 = -qJD(3) * t193 + t253 * t359;
t135 = -t273 / 0.2e1;
t222 = t135 + (t70 / 0.2e1 + t326 / 0.2e1) * t218;
t128 = -t319 / 0.2e1 + (0.1e1 / 0.2e1 + t351) * t217;
t15 = -t306 / 0.2e1 + t238 * t216 + t222;
t221 = qJD(1) * t15 - qJD(2) * t128 + qJD(3) * t93;
t207 = t214 * t219;
t206 = -t285 / 0.2e1;
t205 = t285 / 0.2e1;
t204 = t284 / 0.2e1;
t199 = t218 * t280;
t198 = t216 * t284;
t179 = t193 * qJD(4);
t162 = -t199 + t210;
t160 = t242 * t216;
t154 = (t280 - qJD(4) / 0.2e1) * t217;
t146 = t161 * pkin(4);
t145 = (t207 + t318) * qJD(3);
t143 = t198 - t262;
t142 = -t216 * t279 - t263;
t141 = -t254 - t264;
t140 = -t218 * t279 + t265;
t129 = t317 / 0.2e1 + (t352 + 0.1e1 / 0.2e1) * t217;
t125 = t161 * t219;
t124 = t159 * t219;
t123 = t216 * t229;
t120 = t214 * t256 - t241;
t119 = t212 * t256 + t241;
t113 = t198 - t291;
t112 = -t262 + t291;
t111 = t264 - t292;
t110 = t254 + t292;
t101 = -qJD(3) * t166 + t217 * t264;
t100 = qJD(3) * t165 + t217 * t262;
t97 = t126 * t359;
t94 = t106 * qJD(3);
t89 = -t214 * t255 - t294;
t88 = -t212 * t255 + t294;
t87 = -qJD(4) * t164 - 0.2e1 * t219 * t240;
t72 = -t294 + (t214 * t285 + t259) * t219;
t71 = t294 + (t212 * t285 - t259) * t219;
t64 = (t207 - t318) * qJD(3) + 0.2e1 * (-qJD(4) - t280) * t271;
t61 = -pkin(4) * t315 + t273 / 0.2e1 + t135;
t60 = t170 + t153 + t224;
t59 = t152 - t225 + t269;
t25 = t330 / 0.2e1 + t201 * t248 + t152 - t239 + (t249 + t246) * t216;
t22 = t324 / 0.2e1 + t319 * t355 - pkin(4) * t317 / 0.2e1 + t347 + qJ(5) * t247 - t223 + t277;
t14 = t266 + t306 / 0.2e1 + t216 * t276 + t222;
t7 = pkin(4) * t247 - t218 * t275;
t4 = t13 * qJD(3);
t3 = t331 * t355 + t358 * t353 + (t209 * t248 + t354) * pkin(4);
t1 = qJD(3) * t5 + qJD(4) * t8;
t19 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, t194 * qJD(3), 0, -t256, 0, 0, t202 * t284, t202 * t279, 0, 0, t120, t87, t101, t119, t100, -t256, -qJD(3) * t26 - qJD(4) * t45, qJD(3) * t27 + qJD(4) * t44, -t16 * qJD(3), t18 * qJD(3), t120, t87, t101, t119, t100, -t256, -qJD(3) * t17 - qJD(4) * t29 + t217 * t251, qJD(3) * t20 + qJD(4) * t34 - t217 * t257, -qJD(3) * t12 + qJD(4) * t11 + qJD(5) * t163, qJD(3) * t9 + qJD(4) * t10 - qJD(5) * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t255, t288, t279, -t255, -t284, 0, -t201 * t279 + t261, t201 * t284 + t260, 0, 0, t72, t64, t113, t71, t110, -t154, -t304 + (t216 * t237 - t267) * qJD(3) + t60 * qJD(4), t303 + (t218 * t237 + t270) * qJD(3) + t59 * qJD(4), qJD(3) * t232 - t328, (-pkin(3) * t306 + pkin(7) * t232) * qJD(3) + t233, t72, t64, t113, t71, t110, -t154, -t327 + (t209 * t315 - t326 - t329) * qJD(3) + t22 * qJD(4) + t257, t323 + (t131 * t216 - t176 * t217 + t209 * t308) * qJD(3) + t25 * qJD(4) + t251, -t333 + ((t82 + t325) * t218 + (-t73 - t324) * t216) * qJD(3) + t7 * qJD(4), (t131 * t209 - t175 * t73 + t176 * t82) * qJD(3) + t3 * qJD(4) + t14 * qJD(5) + t236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t90, -t99, t123, t90, t126, t204, qJD(3) * t60 - qJD(4) * t84 - t299, qJD(3) * t59 + qJD(4) * t83 + t300, 0, 0, -t90, -t99, t123, t90, t126, t204, qJD(3) * t22 - t298 - t302, qJD(3) * t25 + qJD(4) * t69 + t301, pkin(4) * t265 + qJD(3) * t7 + t334, -pkin(4) * t298 + qJD(3) * t3 + t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, -t124, t293, qJD(3) * t14 - t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t284, -t279, 0, 0, 0, 0, 0, 0, 0, 0, t141, t143, t145, (t192 * t344 - t348) * qJD(3) - t357, 0, 0, 0, 0, 0, 0, t141, t143, t145, (t219 * t93 + t313) * qJD(3) + t61 * qJD(4) + t129 * qJD(5) + t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, t140, 0, 0, 0, 0, 0, 0, 0, 0, t142, t140, 0, qJD(3) * t61 - t243 + t339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t255, -t288, 0, t255, 0, 0, -t261, -t260, 0, 0, t89, t97, t112, t88, t111, t154, qJD(4) * t86 + t304, qJD(4) * t85 - t303, t328, -t233, t89, t97, t112, t88, t111, t154, -qJD(4) * t21 + t327, -qJD(4) * t24 - t323, qJD(4) * t6 + t333, -qJD(4) * t2 + qJD(5) * t15 - t236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t357, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t128 - t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t197, t179, 0, -t197, 0, 0, -pkin(3) * t297, -pkin(3) * t210, 0, 0, t197, t179, 0, -t197, 0, 0, -t137 * qJD(4), t150 * qJD(4), t192 * qJD(5), qJD(4) * t37 + qJD(5) * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, -t121, t162, -t105, t160, t206, -pkin(7) * t210 - t227, pkin(7) * t297 - t226, 0, 0, t105, -t121, t162, -t105, t160, t206, t231 - t290, qJD(4) * t175 + t230, -pkin(4) * t210 + t341, -pkin(4) * t290 + t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, t99, -t124, -t90, -t125, t204, -qJD(3) * t86 + t299, -qJD(3) * t85 - t300, 0, 0, t90, t99, -t124, -t90, -t125, t204, qJD(3) * t21 - t252 + t302, qJD(3) * t24 + t217 * t286 - t301, -qJD(3) * t6 - t334, -pkin(4) * t252 + qJD(3) * t2 - t235; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105, t121, t199, t105, -t258, t205, t227, t226, 0, 0, -t105, t121, t199, t105, -t258, t205, -t231 - t286, -t230 - t281, -t341, -pkin(4) * t286 - t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t161, t159, 0, -t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126, t123, -t293, -qJD(3) * t15 + t243 + t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, t210, -t289, pkin(4) * t297 - t221; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, -t159, 0, t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t19;
