% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PRPPR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d5,theta1,theta3,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:25
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PRPPR2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPPR2_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPPR2_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRPPR2_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRPPR2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRPPR2_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:24:56
% EndTime: 2019-12-05 15:25:06
% DurationCPUTime: 9.96s
% Computational Cost: add. (34623->476), mult. (67757->684), div. (0->0), fcn. (46844->10), ass. (0->324)
t830 = sin(qJ(2));
t832 = cos(qJ(2));
t825 = sin(pkin(7));
t828 = cos(pkin(7));
t886 = t828 * g(1) + t825 * g(2);
t888 = g(3) - qJDD(1);
t762 = -t830 * t888 - t832 * t886;
t907 = qJD(2) ^ 2;
t758 = -t907 * pkin(2) + t762;
t824 = sin(pkin(8));
t827 = cos(pkin(8));
t761 = -t830 * t886 + t832 * t888;
t837 = qJDD(2) * pkin(2) - t761;
t701 = t824 * t758 - t827 * t837;
t702 = t827 * t758 + t824 * t837;
t865 = t824 * t701 + t827 * t702;
t647 = t827 * t701 - t824 * t702;
t889 = t832 * t647;
t581 = -t830 * t865 + t889;
t894 = t830 * t647;
t924 = t832 * t865 + t894;
t798 = t825 * g(1) - t828 * g(2);
t788 = -qJDD(3) + t798;
t881 = t824 * qJDD(2);
t791 = t827 * t907 + t881;
t743 = qJ(3) * t791 - t827 * t788;
t880 = t827 * qJDD(2);
t792 = -t824 * t907 + t880;
t851 = -qJ(3) * t792 - t824 * t788;
t863 = -t830 * t791 + t832 * t792;
t923 = -pkin(5) * t863 + t830 * t743 + t832 * t851;
t823 = sin(pkin(9));
t826 = cos(pkin(9));
t759 = t791 * t826 * t823;
t883 = t826 * t907;
t800 = t823 * t883;
t874 = t826 * t880;
t760 = -t824 * t800 + t823 * t874;
t706 = t830 * t759 - t832 * t760;
t922 = t825 * t706;
t921 = t828 * t706;
t829 = sin(qJ(5));
t831 = cos(qJ(5));
t773 = (t823 * t829 - t826 * t831) * qJD(2);
t850 = t823 * t831 + t826 * t829;
t775 = t850 * qJD(2);
t727 = t775 * t773;
t910 = qJDD(5) - t727;
t920 = t829 * t910;
t919 = t831 * t910;
t859 = -t907 * pkin(3) + qJDD(2) * qJ(4) + 0.2e1 * qJD(2) * qJD(4) + t702;
t918 = pkin(6) * qJDD(2) + t859;
t734 = t832 * t791 + t830 * t792;
t659 = pkin(5) * t734 + t832 * t743 - t830 * t851;
t820 = t823 ^ 2;
t835 = t826 ^ 2;
t909 = t907 * (t820 + t835);
t782 = t826 * t909;
t749 = -t824 * t782 + t874;
t813 = t826 * qJDD(2);
t751 = t827 * t782 + t824 * t813;
t692 = t832 * t749 - t830 * t751;
t694 = t830 * t749 + t832 * t751;
t916 = t825 * t888;
t915 = t828 * t888;
t778 = t826 * t788;
t664 = t859 * t823 + t778;
t901 = t823 * t788;
t665 = t859 * t826 - t901;
t608 = t823 * t664 + t826 * t665;
t815 = t835 * t907;
t884 = t820 * t907;
t794 = t815 + t884;
t783 = t828 * t798;
t911 = t825 * t886 - t783;
t769 = t773 ^ 2;
t770 = t775 ^ 2;
t906 = pkin(2) * t647;
t652 = -t778 + (pkin(4) * t883 - t918) * t823;
t653 = -pkin(4) * t815 + t918 * t826 - t901;
t591 = -t831 * t652 + t829 * t653;
t592 = t829 * t652 + t831 * t653;
t558 = -t831 * t591 + t829 * t592;
t905 = pkin(4) * t558;
t810 = t823 * qJDD(2);
t771 = t829 * t810 - t831 * t813;
t772 = t850 * qJDD(2);
t670 = -t771 * t829 - t831 * t772;
t904 = pkin(4) * t670;
t902 = t823 * t558;
t681 = -qJDD(2) * pkin(3) - t907 * qJ(4) + qJDD(4) + t701;
t678 = t823 * t681;
t900 = t824 * t681;
t899 = t825 * t798;
t898 = t826 * t558;
t679 = t826 * t681;
t897 = t827 * t681;
t667 = -pkin(4) * t813 - t794 * pkin(6) + t681;
t896 = t829 * t667;
t720 = qJDD(5) + t727;
t895 = t829 * t720;
t891 = t831 * t667;
t890 = t831 * t720;
t887 = -pkin(3) * t681 + qJ(4) * t608;
t768 = t773 * qJD(5);
t885 = t775 * qJD(5);
t811 = t825 * qJDD(2);
t879 = t828 * qJDD(2);
t812 = t835 * qJDD(2);
t878 = t824 * t727;
t877 = t827 * t727;
t876 = pkin(3) * t813 - qJ(4) * t782 - t679;
t875 = t823 * t813;
t809 = t820 * qJDD(2);
t789 = t812 + t809;
t730 = t824 * t789 + t827 * t794;
t732 = t827 * t789 - t824 * t794;
t674 = t832 * t730 + t830 * t732;
t855 = pkin(3) * t794 + qJ(4) * t789 + t608;
t841 = pkin(2) * t730 + t855;
t576 = -pkin(1) * t674 - t841;
t676 = -t830 * t730 + t832 * t732;
t872 = qJ(1) * t676 + t576;
t781 = t823 * t909;
t747 = t824 * t781 - t823 * t880;
t750 = t827 * t781 + t823 * t881;
t690 = t832 * t747 + t830 * t750;
t848 = -pkin(3) * t810 + qJ(4) * t781 + t678;
t839 = pkin(2) * t747 + t848;
t609 = -pkin(1) * t690 - t839;
t693 = -t830 * t747 + t832 * t750;
t871 = qJ(1) * t693 + t609;
t849 = pkin(2) * t749 + t876;
t610 = -pkin(1) * t692 - t849;
t870 = -qJ(1) * t694 + t610;
t853 = -pkin(2) * t791 - t702;
t654 = pkin(1) * t734 - t853;
t869 = -qJ(1) * t863 + t654;
t847 = pkin(2) * t792 - t701;
t655 = -pkin(1) * t863 - t847;
t868 = -qJ(1) * t734 + t655;
t796 = t830 * qJDD(2) + t832 * t907;
t728 = pkin(1) * t796 + t762;
t797 = t832 * qJDD(2) - t830 * t907;
t867 = qJ(1) * t797 - t728;
t729 = -pkin(1) * t797 + t761;
t866 = qJ(1) * t796 - t729;
t559 = t829 * t591 + t831 * t592;
t864 = t830 * t761 + t832 * t762;
t861 = -t828 * t886 - t899;
t860 = -0.2e1 * t875;
t799 = 0.2e1 * t875;
t672 = -t771 * t831 + t829 * t772;
t709 = -t769 - t770;
t538 = -pkin(4) * t709 + pkin(6) * t672 + t559;
t549 = -pkin(6) * t670 - t558;
t625 = -t823 * t670 + t826 * t672;
t858 = -pkin(3) * t709 + qJ(4) * t625 + t826 * t538 + t823 * t549;
t833 = qJD(5) ^ 2;
t718 = -t833 - t769;
t669 = t831 * t718 - t920;
t722 = t771 + 0.2e1 * t885;
t598 = -pkin(4) * t722 + pkin(6) * t669 - t891;
t668 = t829 * t718 + t919;
t619 = -pkin(6) * t668 + t896;
t621 = -t823 * t668 + t826 * t669;
t857 = -pkin(3) * t722 + qJ(4) * t621 + t826 * t598 + t823 * t619;
t765 = -t770 - t833;
t687 = -t829 * t765 - t890;
t724 = -0.2e1 * t768 + t772;
t604 = -pkin(4) * t724 + pkin(6) * t687 + t896;
t684 = t831 * t765 - t895;
t632 = -pkin(6) * t684 + t891;
t640 = -t823 * t684 + t826 * t687;
t856 = -pkin(3) * t724 + qJ(4) * t640 + t826 * t604 + t823 * t632;
t577 = t824 * t608 - t897;
t854 = pkin(2) * t577 + t887;
t756 = pkin(5) * t796 - t832 * t798;
t852 = -pkin(5) * t797 - t830 * t798;
t607 = t826 * t664 - t823 * t665;
t703 = t832 * t759 + t830 * t760;
t712 = t832 * t761 - t830 * t762;
t846 = pkin(4) * t668 - t591;
t534 = t826 * t559 - t902;
t546 = -pkin(4) * t667 + pkin(6) * t559;
t845 = -pkin(3) * t667 - pkin(6) * t902 + qJ(4) * t534 + t826 * t546;
t584 = t824 * t625 - t827 * t709;
t844 = pkin(2) * t584 + t858;
t593 = t824 * t621 - t827 * t722;
t843 = pkin(2) * t593 + t857;
t611 = t824 * t640 - t827 * t724;
t842 = pkin(2) * t611 + t856;
t840 = pkin(4) * t684 - t592;
t530 = t824 * t534 - t827 * t667;
t838 = pkin(2) * t530 + t845;
t795 = -t815 + t884;
t790 = t812 - t809;
t764 = -t770 + t833;
t763 = t769 - t833;
t733 = t827 * t790 + t824 * t795;
t731 = t824 * t790 - t827 * t795;
t726 = t770 - t769;
t725 = -t768 + t772;
t723 = -t771 - t885;
t715 = (-t773 * t831 + t775 * t829) * qJD(5);
t714 = (-t773 * t829 - t775 * t831) * qJD(5);
t699 = t831 * t725 - t829 * t885;
t698 = t829 * t725 + t831 * t885;
t697 = -t829 * t723 + t831 * t768;
t696 = t831 * t723 + t829 * t768;
t688 = pkin(1) * t798 + pkin(5) * t864;
t686 = -t829 * t764 + t919;
t685 = t831 * t763 - t895;
t683 = t831 * t764 + t920;
t682 = t829 * t763 + t890;
t677 = -t830 * t731 + t832 * t733;
t675 = t832 * t731 + t830 * t733;
t673 = -t831 * t722 - t829 * t724;
t671 = -t829 * t722 + t831 * t724;
t661 = -t823 * t714 + t826 * t715;
t660 = t826 * t714 + t823 * t715;
t651 = t824 * qJDD(5) + t827 * t661;
t650 = -t827 * qJDD(5) + t824 * t661;
t644 = -t823 * t698 + t826 * t699;
t643 = -t823 * t696 + t826 * t697;
t642 = t826 * t698 + t823 * t699;
t641 = t826 * t696 + t823 * t697;
t639 = -t823 * t683 + t826 * t686;
t638 = -t823 * t682 + t826 * t685;
t637 = t826 * t684 + t823 * t687;
t636 = t826 * t683 + t823 * t686;
t635 = t826 * t682 + t823 * t685;
t634 = pkin(2) * t788 + qJ(3) * t865;
t630 = t827 * t639 + t824 * t772;
t629 = t827 * t638 - t824 * t771;
t628 = t824 * t639 - t827 * t772;
t627 = t824 * t638 + t827 * t771;
t626 = -t823 * t671 + t826 * t673;
t624 = t826 * t671 + t823 * t673;
t623 = t826 * t670 + t823 * t672;
t620 = t826 * t668 + t823 * t669;
t617 = t827 * t644 + t878;
t616 = t827 * t643 - t878;
t615 = t824 * t644 - t877;
t614 = t824 * t643 + t877;
t612 = t827 * t640 + t824 * t724;
t602 = -qJ(3) * t747 - t824 * t665 + t826 * t897;
t601 = -qJ(3) * t749 - t824 * t664 + t823 * t897;
t600 = qJ(3) * t750 + t827 * t665 + t824 * t679;
t599 = -qJ(3) * t751 + t827 * t664 + t823 * t900;
t597 = t827 * t626 + t824 * t726;
t596 = t824 * t626 - t827 * t726;
t594 = t827 * t621 + t824 * t722;
t589 = -t830 * t650 + t832 * t651;
t588 = t832 * t650 + t830 * t651;
t587 = -qJ(3) * t730 + t827 * t607;
t586 = qJ(3) * t732 + t824 * t607;
t585 = t827 * t625 + t824 * t709;
t583 = -pkin(3) * t623 - t904;
t578 = t827 * t608 + t900;
t575 = -t830 * t628 + t832 * t630;
t574 = -t830 * t627 + t832 * t629;
t573 = t832 * t628 + t830 * t630;
t572 = t832 * t627 + t830 * t629;
t571 = -t830 * t615 + t832 * t617;
t570 = -t830 * t614 + t832 * t616;
t569 = t832 * t615 + t830 * t617;
t568 = t832 * t614 + t830 * t616;
t567 = -t830 * t611 + t832 * t612;
t566 = t832 * t611 + t830 * t612;
t565 = pkin(1) * t581 + t906;
t564 = -pkin(3) * t637 - t840;
t563 = -t830 * t596 + t832 * t597;
t562 = t832 * t596 + t830 * t597;
t561 = -t830 * t593 + t832 * t594;
t560 = t832 * t593 + t830 * t594;
t557 = -t830 * t584 + t832 * t585;
t556 = t832 * t584 + t830 * t585;
t555 = -pkin(5) * t690 - t830 * t600 + t832 * t602;
t554 = -pkin(5) * t692 - t830 * t599 + t832 * t601;
t553 = pkin(5) * t693 + t832 * t600 + t830 * t602;
t552 = -pkin(5) * t694 + t832 * t599 + t830 * t601;
t551 = -pkin(3) * t620 - t846;
t550 = -qJ(4) * t637 - t823 * t604 + t826 * t632;
t548 = pkin(5) * t581 + qJ(3) * t889 - t830 * t634;
t544 = -t830 * t577 + t832 * t578;
t543 = t832 * t577 + t830 * t578;
t542 = -pkin(5) * t674 - t830 * t586 + t832 * t587;
t541 = pkin(5) * t676 + t832 * t586 + t830 * t587;
t540 = pkin(1) * t788 + pkin(5) * t924 + qJ(3) * t894 + t832 * t634;
t539 = -qJ(4) * t620 - t823 * t598 + t826 * t619;
t536 = -qJ(3) * t577 - (pkin(3) * t824 - qJ(4) * t827) * t607;
t535 = qJ(3) * t578 - (-pkin(3) * t827 - qJ(4) * t824 - pkin(2)) * t607;
t533 = t823 * t559 + t898;
t531 = t827 * t534 + t824 * t667;
t529 = -pkin(1) * t543 - t854;
t528 = -pkin(1) * t566 - t842;
t527 = -qJ(3) * t611 + t827 * t550 - t824 * t564;
t526 = -pkin(2) * t637 + qJ(3) * t612 + t824 * t550 + t827 * t564;
t525 = -pkin(1) * t560 - t843;
t524 = -qJ(3) * t593 + t827 * t539 - t824 * t551;
t523 = -qJ(4) * t623 - t823 * t538 + t826 * t549;
t522 = -pkin(3) * t533 - t905;
t521 = -pkin(2) * t620 + qJ(3) * t594 + t824 * t539 + t827 * t551;
t520 = -qJ(3) * t584 + t827 * t523 - t824 * t583;
t519 = -pkin(6) * t898 - qJ(4) * t533 - t823 * t546;
t518 = -pkin(2) * t623 + qJ(3) * t585 + t824 * t523 + t827 * t583;
t517 = -t830 * t530 + t832 * t531;
t516 = t832 * t530 + t830 * t531;
t515 = -pkin(1) * t556 - t844;
t514 = -pkin(5) * t543 - t830 * t535 + t832 * t536;
t513 = pkin(1) * t607 + pkin(5) * t544 + t832 * t535 + t830 * t536;
t512 = -pkin(5) * t566 - t830 * t526 + t832 * t527;
t511 = -pkin(1) * t637 + pkin(5) * t567 + t832 * t526 + t830 * t527;
t510 = -pkin(5) * t560 - t830 * t521 + t832 * t524;
t509 = -pkin(1) * t620 + pkin(5) * t561 + t832 * t521 + t830 * t524;
t508 = -pkin(5) * t556 - t830 * t518 + t832 * t520;
t507 = -qJ(3) * t530 + t827 * t519 - t824 * t522;
t506 = -pkin(1) * t623 + pkin(5) * t557 + t832 * t518 + t830 * t520;
t505 = -pkin(1) * t516 - t838;
t504 = -pkin(2) * t533 + qJ(3) * t531 + t824 * t519 + t827 * t522;
t503 = -pkin(5) * t516 - t830 * t504 + t832 * t507;
t502 = -pkin(1) * t533 + pkin(5) * t517 + t832 * t504 + t830 * t507;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t916, -t915, t911, qJ(1) * t911, 0, 0, t828 * t797, 0, -t828 * t796, t811, t866 * t825 + t828 * t852, t828 * t756 + t867 * t825, t828 * t712, -qJ(1) * (t825 * t864 + t783) - (t825 * pkin(1) - t828 * pkin(5)) * t712, 0, 0, t828 * t863, 0, -t828 * t734, t811, -t825 * t868 + t828 * t923, t828 * t659 - t825 * t869, t828 * t581, t828 * t548 - t825 * t565 - qJ(1) * (t828 * t788 + t825 * t924), t811 * t820 - t921, t828 * t677 + t799 * t825, t828 * t693, t812 * t825 + t921, t828 * t694, 0, t828 * t554 - t825 * t870, t828 * t555 - t825 * t871, t828 * t542 - t825 * t872, t828 * t514 - t825 * t529 - qJ(1) * (t825 * t544 + t607 * t828), t828 * t571 + t825 * t642, t828 * t563 + t825 * t624, t828 * t575 + t825 * t636, t828 * t570 + t825 * t641, t828 * t574 + t825 * t635, t828 * t589 + t825 * t660, t828 * t510 - t825 * t525 - qJ(1) * (t825 * t561 - t828 * t620), t828 * t512 - t825 * t528 - qJ(1) * (t825 * t567 - t828 * t637), t828 * t508 - t825 * t515 - qJ(1) * (t825 * t557 - t828 * t623), t828 * t503 - t825 * t505 - qJ(1) * (t825 * t517 - t828 * t533); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t915, -t916, t861, qJ(1) * t861, 0, 0, t825 * t797, 0, -t825 * t796, -t879, t825 * t852 - t866 * t828, t825 * t756 - t867 * t828, t825 * t712, qJ(1) * (t828 * t864 - t899) - (-t828 * pkin(1) - t825 * pkin(5)) * t712, 0, 0, t825 * t863, 0, -t825 * t734, -t879, t825 * t923 + t828 * t868, t825 * t659 + t828 * t869, t825 * t581, t825 * t548 + t828 * t565 + qJ(1) * (-t825 * t788 + t828 * t924), -t820 * t879 - t922, t825 * t677 + t828 * t860, t825 * t693, -t812 * t828 + t922, t825 * t694, 0, t825 * t554 + t828 * t870, t825 * t555 + t828 * t871, t825 * t542 + t828 * t872, t825 * t514 + t828 * t529 + qJ(1) * (t828 * t544 - t607 * t825), t825 * t571 - t828 * t642, t825 * t563 - t828 * t624, t825 * t575 - t828 * t636, t825 * t570 - t828 * t641, t825 * t574 - t828 * t635, t825 * t589 - t828 * t660, t825 * t510 + t828 * t525 + qJ(1) * (t828 * t561 + t825 * t620), t825 * t512 + t828 * t528 + qJ(1) * (t828 * t567 + t825 * t637), t825 * t508 + t828 * t515 + qJ(1) * (t828 * t557 + t825 * t623), t825 * t503 + t828 * t505 + qJ(1) * (t828 * t517 + t825 * t533); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t798, t886, 0, 0, 0, 0, t796, 0, t797, 0, -t756, t852, t864, t688, 0, 0, t734, 0, t863, 0, -t659, t923, t924, t540, t703, t675, t690, -t703, -t692, 0, t552, t553, t541, t513, t569, t562, t573, t568, t572, t588, t509, t511, t506, t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t888, -t798, 0, 0, 0, t797, 0, -t796, 0, t852, t756, t712, pkin(5) * t712, 0, 0, t863, 0, -t734, 0, t923, t659, t581, t548, -t706, t677, t693, t706, t694, 0, t554, t555, t542, t514, t571, t563, t575, t570, t574, t589, t510, t512, t508, t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t888, 0, -t886, 0, 0, 0, 0, 0, 0, -qJDD(2), t729, t728, 0, pkin(1) * t712, 0, 0, 0, 0, 0, -qJDD(2), t655, t654, 0, t565, -t809, t860, 0, -t812, 0, 0, t610, t609, t576, t529, -t642, -t624, -t636, -t641, -t635, -t660, t525, t528, t515, t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t798, t886, 0, 0, 0, 0, t796, 0, t797, 0, -t756, t852, t864, t688, 0, 0, t734, 0, t863, 0, -t659, t923, t924, t540, t703, t675, t690, -t703, -t692, 0, t552, t553, t541, t513, t569, t562, t573, t568, t572, t588, t509, t511, t506, t502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t907, 0, 0, -t798, t761, 0, 0, 0, t792, 0, -t791, 0, t851, t743, t647, qJ(3) * t647, t760, t733, t750, -t760, t751, 0, t601, t602, t587, t536, t617, t597, t630, t616, t629, t651, t524, t527, t520, t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t907, 0, qJDD(2), 0, t798, 0, t762, 0, 0, 0, t791, 0, t792, 0, -t743, t851, t865, t634, t759, t731, t747, -t759, -t749, 0, t599, t600, t586, t535, t615, t596, t628, t614, t627, t650, t521, t526, t518, t504; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t761, -t762, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t847, t853, 0, -t906, t809, t799, 0, t812, 0, 0, t849, t839, t841, t854, t642, t624, t636, t641, t635, t660, t843, t842, t844, t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t907, 0, 0, -t788, t701, 0, t875, t790, t781, -t875, t782, 0, t678, t679, t607, qJ(4) * t607, t644, t626, t639, t643, t638, t661, t539, t550, t523, t519; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t907, 0, qJDD(2), 0, t788, 0, t702, 0, t800, -t795, -t810, -t800, -t813, 0, t664, t665, 0, pkin(3) * t607, -t727, -t726, -t772, t727, t771, -qJDD(5), t551, t564, t583, t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t701, -t702, 0, 0, t809, t799, 0, t812, 0, 0, t876, t848, t855, t887, t642, t624, t636, t641, t635, t660, t857, t856, t858, t845; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t810, t813, t800, 0, t815, 0, 0, t681, t664, 0, t699, t673, t686, t697, t685, t715, t619, t632, t549, -pkin(6) * t558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t810, -t884, t813, -t800, 0, -t681, 0, t665, 0, t698, t671, t683, t696, t682, t714, t598, t604, t538, t546; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t800, t795, t810, t800, t813, 0, -t664, -t665, 0, 0, t727, t726, t772, -t727, -t771, qJDD(5), t846, t840, t904, t905; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t725, -t722, t910, t768, t763, -t768, 0, t667, t591, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t885, t724, t764, t723, t720, -t885, -t667, 0, t592, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t727, t726, t772, -t727, -t771, qJDD(5), -t591, -t592, 0, 0;];
m_new_reg = t1;
