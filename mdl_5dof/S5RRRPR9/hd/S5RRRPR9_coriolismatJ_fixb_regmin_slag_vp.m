% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:25
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR9_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR9_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR9_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR9_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:24:41
% EndTime: 2019-12-31 21:25:01
% DurationCPUTime: 8.68s
% Computational Cost: add. (7095->466), mult. (15805->651), div. (0->0), fcn. (16986->8), ass. (0->373)
t326 = sin(pkin(9));
t327 = cos(pkin(9));
t330 = sin(qJ(2));
t331 = cos(qJ(3));
t479 = t330 * t331;
t329 = sin(qJ(3));
t481 = t329 * t330;
t252 = -t326 * t479 - t327 * t481;
t254 = -t326 * t481 + t327 * t479;
t328 = sin(qJ(5));
t521 = cos(qJ(5));
t169 = -t521 * t252 + t328 * t254;
t270 = -t326 * t329 + t327 * t331;
t271 = t326 * t331 + t327 * t329;
t197 = -t521 * t270 + t328 * t271;
t512 = -qJ(4) - pkin(7);
t288 = t512 * t329;
t289 = t512 * t331;
t544 = t327 * t288 + t326 * t289;
t558 = -t271 * pkin(8) + t544;
t568 = t521 * t558;
t221 = t326 * t288 - t327 * t289;
t177 = -t270 * pkin(8) - t221;
t571 = t328 * t177;
t364 = t568 + t571;
t332 = cos(qJ(2));
t523 = -t332 / 0.2e1;
t317 = -t331 * pkin(3) - pkin(2);
t245 = -t270 * pkin(4) + t317;
t533 = -t245 / 0.2e1;
t284 = pkin(3) * t481 + t330 * pkin(6);
t202 = -t252 * pkin(4) + t284;
t536 = -t202 / 0.2e1;
t340 = t169 * t533 + t197 * t536 - t364 * t523;
t572 = qJD(3) + qJD(5);
t397 = -t568 / 0.2e1;
t569 = t521 * t177;
t398 = t569 / 0.2e1;
t394 = -t332 * pkin(2) - t330 * pkin(7);
t287 = -pkin(1) + t394;
t477 = t331 * t332;
t434 = pkin(6) * t477;
t244 = t329 * t287 + t434;
t216 = -qJ(4) * t481 + t244;
t206 = t326 * t216;
t273 = t331 * t287;
t393 = -qJ(4) * t479 + t273;
t480 = t329 * t332;
t437 = pkin(6) * t480;
t215 = t393 - t437;
t139 = t327 * t215 - t206;
t519 = pkin(6) * t329;
t201 = (-pkin(3) - t519) * t332 + t393;
t120 = t327 * t201 - t206;
t540 = t120 / 0.2e1;
t575 = -t139 / 0.2e1 + t540;
t570 = t328 * t558;
t365 = t569 - t570;
t363 = t328 * t270 + t521 * t271;
t537 = -t363 / 0.2e1;
t538 = -t197 / 0.2e1;
t242 = t521 * t254;
t484 = t328 * t252;
t545 = t242 + t484;
t565 = t169 * t537 + t538 * t545;
t574 = qJD(1) * t565;
t573 = qJD(2) * t565;
t490 = t327 * t216;
t121 = t326 * t201 + t490;
t138 = -t326 * t215 - t490;
t547 = t121 + t138;
t553 = t169 ^ 2 - t545 ^ 2;
t567 = qJD(1) * t553;
t554 = t197 ^ 2 - t363 ^ 2;
t566 = qJD(2) * t554;
t534 = -t544 / 0.2e1;
t535 = t544 / 0.2e1;
t439 = t332 * qJD(1);
t564 = t169 * t439;
t562 = t197 * t169;
t561 = t202 * t169;
t560 = t202 * t545;
t149 = t545 * t439;
t449 = t197 * qJD(5);
t466 = -t197 * qJD(3) - t449;
t447 = t363 * qJD(5);
t374 = qJD(3) * t363 + t447;
t448 = t197 * qJD(2);
t451 = t169 * qJD(1);
t559 = -t448 - t451;
t463 = qJD(2) * t363;
t464 = qJD(1) * t545;
t376 = t463 + t464;
t557 = qJD(3) * t169;
t556 = qJD(4) * t197;
t450 = t169 * qJD(4);
t555 = t169 * qJD(5);
t552 = t363 * t536 + t533 * t545;
t549 = t545 * t363;
t542 = qJD(4) * t363;
t256 = -t326 * t480 + t327 * t477;
t419 = t521 * t256;
t253 = t271 * t332;
t483 = t328 * t253;
t465 = -t483 / 0.2e1 + t419 / 0.2e1;
t322 = t329 ^ 2;
t324 = t331 ^ 2;
t302 = t324 - t322;
t441 = t330 * qJD(1);
t418 = t331 * t441;
t541 = t302 * qJD(2) - 0.2e1 * t329 * t418;
t396 = t242 / 0.2e1;
t515 = t329 * pkin(3);
t246 = t271 * pkin(4) + t515;
t532 = -t246 / 0.2e1;
t531 = -t252 / 0.2e1;
t529 = -t270 / 0.2e1;
t527 = t326 / 0.2e1;
t526 = -t327 / 0.2e1;
t525 = -t329 / 0.2e1;
t524 = -t330 / 0.2e1;
t522 = t332 / 0.2e1;
t520 = pkin(3) * t326;
t518 = t252 * pkin(8);
t517 = t254 * pkin(8);
t514 = t330 * pkin(2);
t513 = t332 * pkin(7);
t24 = t562 / 0.2e1 + t545 * t537 - t169 * t538 - t549 / 0.2e1;
t33 = -t549 + t562;
t511 = t24 * qJD(3) + t33 * qJD(5);
t510 = t572 * t565;
t509 = pkin(3) * qJD(3);
t74 = -t332 * pkin(4) + t120 - t517;
t508 = t328 * t74;
t291 = -t513 + t514;
t283 = t331 * t291;
t310 = pkin(6) * t481;
t210 = t330 * pkin(3) - qJ(4) * t477 + t283 + t310;
t282 = t329 * t291;
t436 = pkin(6) * t479;
t217 = -qJ(4) * t480 + t282 - t436;
t133 = t327 * t210 - t326 * t217;
t79 = t330 * pkin(4) - t256 * pkin(8) + t133;
t507 = t328 * t79;
t84 = t121 + t518;
t506 = t328 * t84;
t134 = t326 * t210 + t327 * t217;
t85 = -t253 * pkin(8) + t134;
t505 = t328 * t85;
t86 = t138 - t518;
t504 = t328 * t86;
t87 = t139 - t517;
t503 = t328 * t87;
t241 = t521 * t253;
t482 = t328 * t256;
t171 = t241 + t482;
t308 = pkin(3) * t480;
t321 = t332 * pkin(6);
t285 = t321 + t308;
t203 = t253 * pkin(4) + t285;
t430 = t521 * t74;
t35 = -t430 + t506;
t429 = t521 * t79;
t9 = (t429 - t505) * t332 + t35 * t330 - t203 * t169 - t202 * t171;
t502 = t9 * qJD(1);
t174 = t419 - t483;
t428 = t521 * t84;
t36 = t428 + t508;
t427 = t521 * t85;
t10 = (t427 + t507) * t332 - t36 * t330 + t203 * t545 + t202 * t174;
t501 = t10 * qJD(1);
t19 = -t120 * t256 - t121 * t253 - t133 * t254 + t134 * t252;
t500 = t19 * qJD(1);
t499 = t197 * t332;
t20 = -t547 * t254 + (-t120 + t139) * t252;
t498 = t20 * qJD(1);
t497 = t363 * t332;
t435 = pkin(3) * t479;
t372 = t254 * pkin(4) + t435;
t426 = t521 * t86;
t44 = t426 - t503;
t21 = -t169 * t372 + t44 * t332 - t560;
t496 = t21 * qJD(1);
t425 = t521 * t87;
t45 = t425 + t504;
t22 = t45 * t332 + t372 * t545 - t561;
t495 = t22 * qJD(1);
t25 = t120 * t133 + t121 * t134 + t284 * t285;
t494 = t25 * qJD(1);
t26 = t120 * t138 + t121 * t139 + t284 * t435;
t493 = t26 * qJD(1);
t29 = -t35 * t332 - t561;
t492 = t29 * qJD(1);
t30 = -t36 * t332 - t560;
t491 = t30 * qJD(1);
t323 = t330 ^ 2;
t478 = t331 * t323;
t43 = -t174 * t169 - t171 * t545;
t476 = t43 * qJD(1);
t46 = -t120 * t254 + t121 * t252;
t475 = t46 * qJD(1);
t62 = t169 * t330 - t171 * t332;
t474 = t62 * qJD(1);
t63 = t174 * t332 - t330 * t545;
t473 = t63 * qJD(1);
t392 = -t241 / 0.2e1 - t482 / 0.2e1;
t410 = t363 * t523;
t88 = t410 - t392;
t472 = t88 * qJD(1);
t89 = t410 + t392;
t471 = t89 * qJD(1);
t90 = -t497 / 0.2e1 + t392;
t470 = t90 * qJD(1);
t91 = -t499 / 0.2e1 + t465;
t469 = t91 * qJD(1);
t409 = t197 * t522;
t93 = -t409 + t465;
t468 = t93 * qJD(1);
t94 = -t409 - t465;
t467 = t94 * qJD(1);
t325 = t332 ^ 2;
t303 = t325 - t323;
t462 = qJD(2) * t245;
t461 = qJD(2) * t329;
t460 = qJD(2) * t331;
t459 = qJD(3) * t329;
t458 = qJD(3) * t331;
t457 = qJD(3) * t332;
t243 = -t273 + t437;
t142 = t243 * t330 + (-t310 + t283) * t332;
t456 = t142 * qJD(1);
t143 = t282 * t332 + (-t244 + t434) * t330;
t455 = t143 * qJD(1);
t167 = t396 - t242 / 0.2e1;
t454 = t167 * qJD(1);
t453 = t545 * qJD(3);
t452 = t545 * qJD(4);
t204 = -t243 * t332 - t323 * t519;
t446 = t204 * qJD(1);
t205 = -pkin(6) * t478 - t244 * t332;
t445 = t205 * qJD(1);
t280 = t303 * t329;
t444 = t280 * qJD(1);
t281 = t331 * t325 - t478;
t443 = t281 * qJD(1);
t442 = t303 * qJD(1);
t440 = t330 * qJD(2);
t438 = t332 * qJD(2);
t433 = pkin(1) * t441;
t432 = pkin(1) * t439;
t431 = t515 / 0.2e1;
t424 = t327 * pkin(3) + pkin(4);
t417 = t329 * t457;
t416 = t331 * t457;
t415 = t329 * t458;
t414 = t329 * t460;
t413 = t330 * t438;
t412 = t330 * t439;
t411 = t331 * t440;
t408 = -t479 / 0.2e1;
t407 = t308 / 0.2e1 + t321 / 0.2e1;
t405 = t435 / 0.2e1;
t404 = -qJD(3) + t439;
t403 = -qJD(5) + t439;
t401 = t329 * t411;
t400 = t426 / 0.2e1;
t399 = -t425 / 0.2e1;
t395 = t439 - qJD(3) / 0.2e1;
t334 = t169 * t532 + t365 * t522 + t372 * t538 + t552;
t260 = t328 * t520 - t521 * t424;
t352 = -t505 / 0.2e1 + t429 / 0.2e1;
t338 = t260 * t524 + t352;
t1 = t334 + t338;
t55 = t246 * t197 + t245 * t363;
t391 = -t1 * qJD(1) + t55 * qJD(2);
t333 = t372 * t537 + t532 * t545 - t340;
t261 = t328 * t424 + t521 * t520;
t353 = -t507 / 0.2e1 - t427 / 0.2e1;
t337 = t261 * t524 + t353;
t2 = t333 + t337;
t56 = -t197 * t245 + t246 * t363;
t390 = -t2 * qJD(1) + t56 * qJD(2);
t344 = (-t253 * t527 + t256 * t526) * pkin(3);
t5 = (t121 / 0.2e1 + t138 / 0.2e1) * t271 + t575 * t270 + (t534 + t535) * t252 + t344;
t389 = t5 * qJD(1);
t54 = t317 * t515;
t335 = t575 * t221 + t547 * t534;
t368 = t134 * t527 + t133 * t327 / 0.2e1;
t7 = (t284 * t525 + t317 * t408 + t368) * pkin(3) + t335;
t388 = -t7 * qJD(1) + t54 * qJD(2);
t387 = qJD(2) * t24 + t567;
t386 = qJD(1) * t24 + t566;
t385 = qJD(2) * t33 + t567;
t384 = t33 * qJD(1) + t566;
t100 = t221 * t270 - t271 * t544;
t336 = t121 * t529 + t221 * t531 + t254 * t535 + t271 * t540;
t27 = t336 + t407;
t383 = -t27 * qJD(1) + t100 * qJD(2);
t382 = t404 * t330;
t128 = 0.2e1 * t396 + t484;
t380 = t128 * qJD(1) + t463;
t137 = t270 * t252 + t271 * t254;
t181 = t252 ^ 2 + t254 ^ 2;
t379 = t181 * qJD(1) + t137 * qJD(2);
t214 = t270 ^ 2 + t271 ^ 2;
t378 = t137 * qJD(1) + t214 * qJD(2);
t367 = t252 * t527 + t254 * t526;
t145 = (t408 + t367) * pkin(3);
t366 = t270 * t527 + t271 * t526;
t176 = (t525 + t366) * pkin(3);
t377 = t145 * qJD(1) + t176 * qJD(2);
t373 = t555 + t557;
t371 = t513 / 0.2e1 - t514 / 0.2e1;
t351 = t371 * t329;
t212 = t282 / 0.2e1 - t351;
t370 = pkin(2) * t460 - t212 * qJD(1);
t350 = t371 * t331;
t213 = -t283 / 0.2e1 + t350;
t369 = pkin(2) * t461 - t213 * qJD(1);
t339 = -t365 * t523 + t552;
t11 = t339 + t352;
t362 = t11 * qJD(1) - t363 * t462;
t12 = -t340 + t353;
t361 = t12 * qJD(1) + t197 * t462;
t360 = t169 * t464 - t573;
t359 = -t451 * t545 + t573;
t358 = t197 * t463 - t574;
t357 = -t363 * t448 + t574;
t356 = t89 * qJD(2) - t167 * qJD(5) - t149;
t355 = t331 * t382;
t265 = (t322 / 0.2e1 - t324 / 0.2e1) * t330;
t354 = -t265 * qJD(1) + t414;
t349 = t260 * t522 + t430 / 0.2e1;
t348 = t261 * t523 + t428 / 0.2e1;
t347 = t329 * qJD(1) * t478 + t265 * qJD(2);
t279 = t302 * t323;
t346 = t279 * qJD(1) + 0.2e1 * t401;
t15 = t400 + (-t87 / 0.2e1 + t74 / 0.2e1) * t328 + t348;
t37 = t398 - t569 / 0.2e1;
t343 = t15 * qJD(1) + t37 * qJD(2) + t261 * qJD(3);
t16 = t399 + (-t86 / 0.2e1 - t84 / 0.2e1) * t328 + t349;
t38 = t397 + t568 / 0.2e1;
t342 = t16 * qJD(1) - t38 * qJD(2) - t260 * qJD(3);
t341 = t88 * qJD(2) + t128 * qJD(5) - t149 + t453;
t315 = -t441 / 0.2e1;
t314 = t441 / 0.2e1;
t313 = t440 / 0.2e1;
t269 = t395 * t330;
t264 = t265 * qJD(3);
t251 = (-qJD(5) / 0.2e1 + t395) * t330;
t248 = t261 * qJD(5);
t247 = t260 * qJD(5);
t191 = t310 + t283 / 0.2e1 + t350;
t190 = t436 - t282 / 0.2e1 - t351;
t175 = t366 * pkin(3) + t431;
t144 = pkin(3) * t367 + t405;
t126 = t137 * qJD(4);
t95 = t497 / 0.2e1 + t392;
t92 = t499 / 0.2e1 + t465;
t41 = t93 * qJD(2) - t564;
t40 = 0.2e1 * t398 - t570;
t39 = -t571 + 0.2e1 * t397;
t31 = -t94 * qJD(2) + t169 * t404 - t555;
t28 = -t336 + t407;
t18 = -t508 / 0.2e1 - t503 / 0.2e1 + t400 - t348;
t17 = t506 / 0.2e1 + t399 - t504 / 0.2e1 - t349;
t14 = -t339 + t352;
t13 = t340 + t353;
t8 = t368 * pkin(3) + t284 * t431 + t317 * t405 - t335;
t6 = t252 * t535 + t139 * t270 / 0.2e1 + t544 * t531 + t120 * t529 + t344 - t547 * t271 / 0.2e1;
t4 = -t333 + t337;
t3 = -t334 + t338;
t23 = [0, 0, 0, t413, t303 * qJD(2), 0, 0, 0, -pkin(1) * t440, -pkin(1) * t438, -t323 * t415 + t324 * t413, -t279 * qJD(3) - 0.2e1 * t332 * t401, -t281 * qJD(2) + t330 * t417, t280 * qJD(2) + t330 * t416, -t413, -t142 * qJD(2) - t205 * qJD(3), t143 * qJD(2) + t204 * qJD(3), t19 * qJD(2) + t20 * qJD(3) + t181 * qJD(4), qJD(2) * t25 + qJD(3) * t26 + qJD(4) * t46, (qJD(2) * t174 - t373) * t545, qJD(2) * t43 + t553 * t572, -t63 * qJD(2) + t332 * t373, -t62 * qJD(2) + (qJD(5) * t545 + t453) * t332, -t413, -t9 * qJD(2) - t21 * qJD(3) - t30 * qJD(5) + t332 * t452, t10 * qJD(2) + t22 * qJD(3) + t29 * qJD(5) - t332 * t450; 0, 0, 0, t412, t442, t438, -t440, 0, -pkin(6) * t438 - t433, pkin(6) * t440 - t432, -t264 + (t324 * t441 + t414) * t332, -0.2e1 * t330 * t415 + t541 * t332, t329 * t440 - t443, t411 + t444, -t269, -t456 + (t329 * t394 - t434) * qJD(2) + t191 * qJD(3), t455 + (t331 * t394 + t437) * qJD(2) + t190 * qJD(3), t500 + (-t133 * t271 + t134 * t270 - t221 * t253 - t256 * t544) * qJD(2) + t6 * qJD(3) + t126, t494 + (t133 * t544 + t134 * t221 + t285 * t317) * qJD(2) + t8 * qJD(3) + t28 * qJD(4), t376 * t174 + t510, t476 + (-t171 * t363 - t174 * t197) * qJD(2) + t511, -t94 * qJD(3) + t92 * qJD(5) + t363 * t440 - t473, -t88 * qJD(3) + t95 * qJD(5) - t197 * t440 - t474, -t251, -t502 + (t245 * t171 + t203 * t197 + t330 * t364) * qJD(2) + t3 * qJD(3) - t89 * qJD(4) + t14 * qJD(5), t501 + (t245 * t174 + t203 * t363 + t330 * t365) * qJD(2) + t4 * qJD(3) + t93 * qJD(4) + t13 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t347, -t346, t329 * t382, t355, t313, t191 * qJD(2) - t244 * qJD(3) - t445, t190 * qJD(2) + t243 * qJD(3) + t446, t498 + t6 * qJD(2) + (-t252 * t327 - t254 * t326) * t509, t493 + t8 * qJD(2) + t144 * qJD(4) + (t138 * t327 + t139 * t326) * t509, t359, t387, t31, -t341, t313, qJD(2) * t3 + qJD(3) * t44 + qJD(5) * t18 - t496, qJD(2) * t4 - qJD(3) * t45 + qJD(5) * t17 + t495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t379, t28 * qJD(2) + t144 * qJD(3) + t475, 0, 0, 0, 0, 0, -t356, t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t360, t385, t92 * qJD(2) + t169 * t403 - t557, t95 * qJD(2) - t128 * qJD(3) + t403 * t545, t313, t14 * qJD(2) + t18 * qJD(3) + t167 * qJD(4) - t36 * qJD(5) - t491, t13 * qJD(2) + t17 * qJD(3) + t35 * qJD(5) + t492; 0, 0, 0, -t412, -t442, 0, 0, 0, t433, t432, -t324 * t412 - t264, 0.2e1 * t329 * t355, -t416 + t443, t417 - t444, t269, t213 * qJD(3) + t456, t212 * qJD(3) - t455, -t5 * qJD(3) + t126 - t500, -qJD(3) * t7 - qJD(4) * t27 - t494, -t174 * t464 + t510, -t476 + t511, -t93 * qJD(3) - t91 * qJD(5) + t473, -t89 * qJD(3) - t90 * qJD(5) + t474, t251, -t1 * qJD(3) - t88 * qJD(4) - t11 * qJD(5) + t502, -t2 * qJD(3) + t94 * qJD(4) - t12 * qJD(5) - t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t415, t302 * qJD(3), 0, 0, 0, -pkin(2) * t459, -pkin(2) * t458, t214 * qJD(4), t54 * qJD(3) + t100 * qJD(4), t466 * t363, t572 * t554, 0, 0, 0, t55 * qJD(3) + t245 * t447, t56 * qJD(3) - t245 * t449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, t541, -t404 * t331, t404 * t329, t315, -pkin(7) * t458 - t369, pkin(7) * t459 - t370, (-t270 * t327 - t271 * t326) * t509 - t389, t175 * qJD(4) + (-t221 * t327 + t326 * t544) * t509 + t388, t357, t386, t466 - t468, -t374 - t471, t315, qJD(3) * t365 + t40 * qJD(5) + t391, -qJD(3) * t364 + t39 * qJD(5) + t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, t175 * qJD(3) + t383, 0, 0, 0, 0, 0, -t472, t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t358, t384, -t469 + t466, -t470 - t374, t315, t40 * qJD(3) + qJD(5) * t365 - t362, t39 * qJD(3) - qJD(5) * t364 - t361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t347, t346, (-t329 * t441 + t460) * t332, (-t418 - t461) * t332, t313, -t213 * qJD(2) + t445, -t212 * qJD(2) - t446, qJD(2) * t5 - t498, t7 * qJD(2) + t145 * qJD(4) - t493, -t359, -t387, t41, t356, t313, t1 * qJD(2) - t15 * qJD(5) - t452 + t496, t2 * qJD(2) - t16 * qJD(5) + t450 - t495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t354, -t541, t331 * t439, -t329 * t439, t314, t369, t370, t389, t176 * qJD(4) - t388, -t357, -t386, t468, t471, t314, -t37 * qJD(5) - t391 - t542, t38 * qJD(5) - t390 + t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248, t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t377, 0, 0, 0, 0, 0, -t376, -t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454, 0, -t248 - t343, t247 - t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t379, t27 * qJD(2) - t145 * qJD(3) - t475, 0, 0, 0, 0, 0, t341, t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, -t176 * qJD(3) - t383, 0, 0, 0, 0, 0, t374 + t472, t466 - t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t377, 0, 0, 0, 0, 0, t376, t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t380, t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t360, -t385, t91 * qJD(2) - t564, t90 * qJD(2) + t167 * qJD(3) - t149, t313, t11 * qJD(2) + t15 * qJD(3) - t128 * qJD(4) + t491, t12 * qJD(2) + t16 * qJD(3) + t450 - t492; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t358, -t384, t469, t470, t314, t37 * qJD(3) + t362 - t542, -t38 * qJD(3) + t361 + t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454, 0, t343, t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t380, -t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t23;
