% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRPR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:25
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRPR9_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR9_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR9_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR9_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR9_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR9_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:25:37
% EndTime: 2019-12-31 21:25:41
% DurationCPUTime: 4.34s
% Computational Cost: add. (31378->256), mult. (65883->351), div. (0->0), fcn. (46847->10), ass. (0->200)
t1618 = sin(qJ(2));
t1645 = qJD(1) * t1618;
t1605 = qJD(2) * t1645;
t1622 = cos(qJ(2));
t1607 = t1622 * qJDD(1);
t1632 = t1607 - t1605 - qJDD(3);
t1617 = sin(qJ(3));
t1621 = cos(qJ(3));
t1582 = -t1621 * qJD(2) + t1617 * t1645;
t1583 = t1617 * qJD(2) + t1621 * t1645;
t1640 = t1583 * t1582;
t1554 = -t1632 - t1640;
t1613 = sin(pkin(9));
t1614 = cos(pkin(9));
t1563 = t1614 * t1582 + t1613 * t1583;
t1565 = -t1613 * t1582 + t1614 * t1583;
t1642 = t1565 * t1563;
t1528 = -t1632 - t1642;
t1638 = t1622 * qJD(1);
t1602 = -qJD(3) + t1638;
t1596 = -qJD(5) + t1602;
t1657 = qJD(5) - t1596;
t1656 = qJD(2) ^ 2;
t1616 = sin(qJ(5));
t1620 = cos(qJ(5));
t1534 = t1620 * t1563 + t1616 * t1565;
t1655 = t1534 ^ 2;
t1536 = -t1616 * t1563 + t1620 * t1565;
t1654 = t1536 ^ 2;
t1653 = t1563 ^ 2;
t1652 = t1565 ^ 2;
t1651 = t1582 ^ 2;
t1650 = t1583 ^ 2;
t1649 = t1596 ^ 2;
t1648 = t1602 ^ 2;
t1647 = -2 * qJD(4);
t1646 = t1622 * g(3);
t1644 = t1536 * t1534;
t1643 = t1563 * t1602;
t1641 = t1582 * t1602;
t1639 = t1602 * t1565;
t1637 = qJD(3) + t1602;
t1636 = qJD(5) + t1596;
t1619 = sin(qJ(1));
t1623 = cos(qJ(1));
t1594 = t1619 * g(1) - t1623 * g(2);
t1624 = qJD(1) ^ 2;
t1577 = qJDD(1) * pkin(1) + t1624 * pkin(6) + t1594;
t1633 = qJD(2) * t1638;
t1634 = t1618 * qJDD(1);
t1586 = t1633 + t1634;
t1587 = t1607 - 0.2e1 * t1605;
t1539 = (-t1586 - t1633) * pkin(7) - t1587 * pkin(2) - t1577;
t1595 = -t1623 * g(1) - t1619 * g(2);
t1578 = -t1624 * pkin(1) + qJDD(1) * pkin(6) + t1595;
t1573 = -t1618 * g(3) + t1622 * t1578;
t1584 = (-pkin(2) * t1622 - pkin(7) * t1618) * qJD(1);
t1549 = -t1656 * pkin(2) + qJDD(2) * pkin(7) + t1584 * t1638 + t1573;
t1520 = t1617 * t1539 + t1621 * t1549;
t1610 = t1618 ^ 2;
t1611 = t1622 ^ 2;
t1635 = t1610 + t1611;
t1519 = t1621 * t1539 - t1617 * t1549;
t1627 = -t1617 * qJDD(2) - t1621 * t1586;
t1560 = -t1582 * qJD(3) - t1627;
t1496 = (-t1560 + t1641) * qJ(4) + t1554 * pkin(3) + t1519;
t1571 = -t1602 * pkin(3) - t1583 * qJ(4);
t1629 = -t1621 * qJDD(2) + t1617 * t1586;
t1626 = -t1583 * qJD(3) - t1629;
t1498 = -t1651 * pkin(3) + t1626 * qJ(4) + t1602 * t1571 + t1520;
t1471 = t1613 * t1496 + t1614 * t1498 + t1563 * t1647;
t1530 = t1614 * t1560 + t1613 * t1626;
t1630 = t1613 * t1560 - t1614 * t1626;
t1631 = -t1616 * t1530 - t1620 * t1630;
t1516 = -t1530 + t1643;
t1628 = -qJDD(5) + t1632;
t1470 = t1614 * t1496 - t1613 * t1498 + t1565 * t1647;
t1625 = -t1620 * t1530 + t1616 * t1630;
t1548 = t1646 - qJDD(2) * pkin(2) - t1656 * pkin(7) + (qJD(1) * t1584 + t1578) * t1618;
t1512 = -t1626 * pkin(3) - t1651 * qJ(4) + t1583 * t1571 + qJDD(4) + t1548;
t1601 = t1622 * t1624 * t1618;
t1599 = -t1611 * t1624 - t1656;
t1598 = -t1610 * t1624 - t1656;
t1593 = -qJDD(2) + t1601;
t1592 = qJDD(2) + t1601;
t1591 = t1635 * t1624;
t1590 = -t1619 * qJDD(1) - t1623 * t1624;
t1589 = t1623 * qJDD(1) - t1619 * t1624;
t1588 = t1635 * qJDD(1);
t1585 = 0.2e1 * t1633 + t1634;
t1572 = -t1618 * t1578 - t1646;
t1570 = t1622 * t1593 - t1618 * t1598;
t1569 = -t1618 * t1592 + t1622 * t1599;
t1568 = t1618 * t1593 + t1622 * t1598;
t1567 = t1622 * t1592 + t1618 * t1599;
t1566 = -t1648 - t1650;
t1562 = -t1648 - t1651;
t1553 = t1632 - t1640;
t1552 = -t1650 - t1651;
t1550 = -t1602 * pkin(4) - t1565 * pkin(8);
t1547 = -t1648 - t1652;
t1545 = -t1618 * t1572 + t1622 * t1573;
t1544 = t1622 * t1572 + t1618 * t1573;
t1543 = t1637 * t1582 + t1627;
t1542 = t1560 + t1641;
t1541 = -t1637 * t1583 - t1629;
t1540 = (qJD(3) - t1602) * t1583 + t1629;
t1533 = t1621 * t1553 - t1617 * t1566;
t1532 = t1617 * t1553 + t1621 * t1566;
t1531 = -t1648 - t1653;
t1527 = t1632 - t1642;
t1526 = -t1617 * t1554 + t1621 * t1562;
t1525 = t1621 * t1554 + t1617 * t1562;
t1522 = -t1649 - t1654;
t1521 = -t1652 - t1653;
t1518 = t1621 * t1541 - t1617 * t1543;
t1517 = t1617 * t1541 + t1621 * t1543;
t1515 = t1530 + t1643;
t1514 = -t1630 - t1639;
t1513 = t1630 - t1639;
t1511 = t1622 * t1533 + t1618 * t1542;
t1510 = t1614 * t1527 - t1613 * t1547;
t1509 = t1618 * t1533 - t1622 * t1542;
t1508 = t1613 * t1527 + t1614 * t1547;
t1507 = t1622 * t1526 + t1618 * t1540;
t1506 = t1618 * t1526 - t1622 * t1540;
t1505 = -t1649 - t1655;
t1504 = -t1628 - t1644;
t1503 = t1628 - t1644;
t1502 = -t1613 * t1528 + t1614 * t1531;
t1501 = t1614 * t1528 + t1613 * t1531;
t1500 = t1622 * t1518 + t1618 * t1552;
t1499 = t1618 * t1518 - t1622 * t1552;
t1493 = -t1654 - t1655;
t1492 = -t1617 * t1519 + t1621 * t1520;
t1491 = t1621 * t1519 + t1617 * t1520;
t1490 = t1614 * t1514 - t1613 * t1516;
t1489 = t1613 * t1514 + t1614 * t1516;
t1488 = t1620 * t1503 - t1616 * t1522;
t1487 = t1616 * t1503 + t1620 * t1522;
t1486 = t1622 * t1492 + t1618 * t1548;
t1485 = t1618 * t1492 - t1622 * t1548;
t1484 = -t1617 * t1508 + t1621 * t1510;
t1483 = t1621 * t1508 + t1617 * t1510;
t1482 = t1636 * t1534 + t1625;
t1481 = -t1657 * t1534 - t1625;
t1480 = -t1636 * t1536 + t1631;
t1479 = t1657 * t1536 - t1631;
t1478 = t1630 * pkin(4) - t1653 * pkin(8) + t1565 * t1550 + t1512;
t1477 = -t1616 * t1504 + t1620 * t1505;
t1476 = t1620 * t1504 + t1616 * t1505;
t1475 = -t1617 * t1501 + t1621 * t1502;
t1474 = t1621 * t1501 + t1617 * t1502;
t1473 = t1622 * t1484 + t1618 * t1515;
t1472 = t1618 * t1484 - t1622 * t1515;
t1469 = t1622 * t1475 + t1618 * t1513;
t1468 = t1618 * t1475 - t1622 * t1513;
t1467 = -t1617 * t1489 + t1621 * t1490;
t1466 = t1621 * t1489 + t1617 * t1490;
t1465 = -t1613 * t1487 + t1614 * t1488;
t1464 = t1614 * t1487 + t1613 * t1488;
t1463 = -t1653 * pkin(4) - t1630 * pkin(8) + t1602 * t1550 + t1471;
t1462 = t1622 * t1467 + t1618 * t1521;
t1461 = t1618 * t1467 - t1622 * t1521;
t1460 = t1528 * pkin(4) + t1516 * pkin(8) + t1470;
t1459 = t1620 * t1480 - t1616 * t1482;
t1458 = t1616 * t1480 + t1620 * t1482;
t1457 = -t1613 * t1476 + t1614 * t1477;
t1456 = t1614 * t1476 + t1613 * t1477;
t1455 = -t1613 * t1470 + t1614 * t1471;
t1454 = t1614 * t1470 + t1613 * t1471;
t1453 = -t1617 * t1464 + t1621 * t1465;
t1452 = t1621 * t1464 + t1617 * t1465;
t1451 = t1616 * t1460 + t1620 * t1463;
t1450 = t1620 * t1460 - t1616 * t1463;
t1449 = -t1613 * t1458 + t1614 * t1459;
t1448 = t1614 * t1458 + t1613 * t1459;
t1447 = -t1617 * t1456 + t1621 * t1457;
t1446 = t1621 * t1456 + t1617 * t1457;
t1445 = t1622 * t1453 + t1618 * t1481;
t1444 = t1618 * t1453 - t1622 * t1481;
t1443 = t1622 * t1447 + t1618 * t1479;
t1442 = t1618 * t1447 - t1622 * t1479;
t1441 = -t1617 * t1454 + t1621 * t1455;
t1440 = t1621 * t1454 + t1617 * t1455;
t1439 = t1622 * t1441 + t1618 * t1512;
t1438 = t1618 * t1441 - t1622 * t1512;
t1437 = -t1616 * t1450 + t1620 * t1451;
t1436 = t1620 * t1450 + t1616 * t1451;
t1435 = -t1617 * t1448 + t1621 * t1449;
t1434 = t1621 * t1448 + t1617 * t1449;
t1433 = t1622 * t1435 + t1618 * t1493;
t1432 = t1618 * t1435 - t1622 * t1493;
t1431 = -t1613 * t1436 + t1614 * t1437;
t1430 = t1614 * t1436 + t1613 * t1437;
t1429 = -t1617 * t1430 + t1621 * t1431;
t1428 = t1621 * t1430 + t1617 * t1431;
t1427 = t1622 * t1429 + t1618 * t1478;
t1426 = t1618 * t1429 - t1622 * t1478;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1590, -t1589, 0, -t1619 * t1594 + t1623 * t1595, 0, 0, 0, 0, 0, 0, t1623 * t1569 - t1619 * t1587, t1623 * t1570 + t1619 * t1585, t1623 * t1588 - t1619 * t1591, t1623 * t1545 - t1619 * t1577, 0, 0, 0, 0, 0, 0, t1623 * t1507 + t1619 * t1525, t1623 * t1511 + t1619 * t1532, t1623 * t1500 + t1619 * t1517, t1623 * t1486 + t1619 * t1491, 0, 0, 0, 0, 0, 0, t1623 * t1469 + t1619 * t1474, t1623 * t1473 + t1619 * t1483, t1623 * t1462 + t1619 * t1466, t1623 * t1439 + t1619 * t1440, 0, 0, 0, 0, 0, 0, t1623 * t1443 + t1619 * t1446, t1623 * t1445 + t1619 * t1452, t1623 * t1433 + t1619 * t1434, t1623 * t1427 + t1619 * t1428; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1589, t1590, 0, t1623 * t1594 + t1619 * t1595, 0, 0, 0, 0, 0, 0, t1619 * t1569 + t1623 * t1587, t1619 * t1570 - t1623 * t1585, t1619 * t1588 + t1623 * t1591, t1619 * t1545 + t1623 * t1577, 0, 0, 0, 0, 0, 0, t1619 * t1507 - t1623 * t1525, t1619 * t1511 - t1623 * t1532, t1619 * t1500 - t1623 * t1517, t1619 * t1486 - t1623 * t1491, 0, 0, 0, 0, 0, 0, t1619 * t1469 - t1623 * t1474, t1619 * t1473 - t1623 * t1483, t1619 * t1462 - t1623 * t1466, t1619 * t1439 - t1623 * t1440, 0, 0, 0, 0, 0, 0, t1619 * t1443 - t1623 * t1446, t1619 * t1445 - t1623 * t1452, t1619 * t1433 - t1623 * t1434, t1619 * t1427 - t1623 * t1428; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1567, t1568, 0, t1544, 0, 0, 0, 0, 0, 0, t1506, t1509, t1499, t1485, 0, 0, 0, 0, 0, 0, t1468, t1472, t1461, t1438, 0, 0, 0, 0, 0, 0, t1442, t1444, t1432, t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1624, -qJDD(1), 0, t1595, 0, 0, 0, 0, 0, 0, t1569, t1570, t1588, t1545, 0, 0, 0, 0, 0, 0, t1507, t1511, t1500, t1486, 0, 0, 0, 0, 0, 0, t1469, t1473, t1462, t1439, 0, 0, 0, 0, 0, 0, t1443, t1445, t1433, t1427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1624, 0, t1594, 0, 0, 0, 0, 0, 0, t1587, -t1585, t1591, t1577, 0, 0, 0, 0, 0, 0, -t1525, -t1532, -t1517, -t1491, 0, 0, 0, 0, 0, 0, -t1474, -t1483, -t1466, -t1440, 0, 0, 0, 0, 0, 0, -t1446, -t1452, -t1434, -t1428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1567, t1568, 0, t1544, 0, 0, 0, 0, 0, 0, t1506, t1509, t1499, t1485, 0, 0, 0, 0, 0, 0, t1468, t1472, t1461, t1438, 0, 0, 0, 0, 0, 0, t1442, t1444, t1432, t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1599, t1593, t1607, t1573, 0, 0, 0, 0, 0, 0, t1526, t1533, t1518, t1492, 0, 0, 0, 0, 0, 0, t1475, t1484, t1467, t1441, 0, 0, 0, 0, 0, 0, t1447, t1453, t1435, t1429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1592, t1598, -t1634, t1572, 0, 0, 0, 0, 0, 0, -t1540, -t1542, -t1552, -t1548, 0, 0, 0, 0, 0, 0, -t1513, -t1515, -t1521, -t1512, 0, 0, 0, 0, 0, 0, -t1479, -t1481, -t1493, -t1478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1587, t1585, -t1591, -t1577, 0, 0, 0, 0, 0, 0, t1525, t1532, t1517, t1491, 0, 0, 0, 0, 0, 0, t1474, t1483, t1466, t1440, 0, 0, 0, 0, 0, 0, t1446, t1452, t1434, t1428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1562, t1553, t1541, t1520, 0, 0, 0, 0, 0, 0, t1502, t1510, t1490, t1455, 0, 0, 0, 0, 0, 0, t1457, t1465, t1449, t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1554, t1566, t1543, t1519, 0, 0, 0, 0, 0, 0, t1501, t1508, t1489, t1454, 0, 0, 0, 0, 0, 0, t1456, t1464, t1448, t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1540, t1542, t1552, t1548, 0, 0, 0, 0, 0, 0, t1513, t1515, t1521, t1512, 0, 0, 0, 0, 0, 0, t1479, t1481, t1493, t1478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1531, t1527, t1514, t1471, 0, 0, 0, 0, 0, 0, t1477, t1488, t1459, t1437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1528, t1547, t1516, t1470, 0, 0, 0, 0, 0, 0, t1476, t1487, t1458, t1436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1513, t1515, t1521, t1512, 0, 0, 0, 0, 0, 0, t1479, t1481, t1493, t1478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1505, t1503, t1480, t1451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1504, t1522, t1482, t1450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1479, t1481, t1493, t1478;];
f_new_reg = t1;
