% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:25
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPR9_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR9_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR9_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR9_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:24:44
% EndTime: 2019-12-31 21:25:23
% DurationCPUTime: 28.33s
% Computational Cost: add. (18436->727), mult. (39037->985), div. (0->0), fcn. (41815->8), ass. (0->545)
t883 = qJD(3) + qJD(5);
t513 = cos(qJ(3));
t512 = sin(qJ(2));
t785 = -qJ(4) - pkin(7);
t619 = t785 * t512 - pkin(1);
t514 = cos(qJ(2));
t787 = t514 * pkin(2);
t537 = (t619 - t787) * t513;
t511 = sin(qJ(3));
t741 = t511 * t514;
t673 = pkin(6) * t741;
t369 = t537 - t673;
t509 = cos(pkin(9));
t508 = sin(pkin(9));
t788 = t512 * pkin(7);
t618 = -t787 - t788;
t597 = pkin(1) - t618;
t738 = t513 * t514;
t670 = pkin(6) * t738;
t418 = -t511 * t597 + t670;
t742 = t511 * t512;
t488 = qJ(4) * t742;
t529 = -t488 + t418;
t848 = t508 * t529;
t250 = t509 * t369 - t848;
t739 = t513 * t512;
t432 = -t508 * t742 + t509 * t739;
t795 = t432 * pkin(8);
t184 = t250 - t795;
t800 = cos(qJ(5));
t659 = t800 * t184;
t847 = t509 * t529;
t249 = -t369 * t508 - t847;
t757 = t509 * t511;
t758 = t508 * t513;
t457 = t757 + t758;
t429 = t457 * t512;
t798 = pkin(8) * t429;
t183 = t249 + t798;
t510 = sin(qJ(5));
t752 = t510 * t183;
t110 = t659 + t752;
t799 = pkin(6) * t511;
t664 = -pkin(3) - t799;
t756 = t509 * t513;
t517 = -t508 * (t511 * (-pkin(1) - t788) - t488) - t795 + t619 * t756 + (-t508 * (-t511 * pkin(2) + t513 * pkin(6)) + t509 * (-pkin(2) * t513 + t664) - pkin(4)) * t514;
t157 = t800 * t517;
t523 = t514 * t664 + t537;
t230 = t508 * t523 + t847;
t180 = t230 - t798;
t754 = t510 * t180;
t97 = -t157 + t754;
t881 = t110 + t97;
t635 = t785 * t511;
t846 = t785 * t513;
t377 = t508 * t635 - t509 * t846;
t455 = t508 * t511 - t756;
t315 = pkin(8) * t455 - t377;
t857 = t508 * t846 + t509 * t635;
t872 = -t457 * pkin(8) + t857;
t888 = t800 * t315 - t510 * t872;
t889 = t883 * t888;
t660 = t800 * t183;
t751 = t510 * t184;
t109 = t660 - t751;
t516 = t510 * t517;
t662 = t800 * t180;
t98 = t662 + t516;
t882 = t109 + t98;
t887 = -t888 / 0.2e1;
t879 = t800 * t872;
t885 = t510 * t315;
t172 = t879 + t885;
t850 = t172 / 0.2e1;
t229 = t509 * t523 - t848;
t886 = t229 / 0.2e1 - t250 / 0.2e1;
t836 = -t879 / 0.2e1;
t845 = t230 + t249;
t304 = t800 * t429 + t510 * t432;
t770 = t304 ^ 2;
t412 = t800 * t432;
t747 = t510 * t429;
t843 = t412 - t747;
t771 = t843 ^ 2;
t873 = t770 - t771;
t878 = qJD(1) * t873;
t341 = t800 * t455 + t510 * t457;
t768 = t341 ^ 2;
t444 = t800 * t457;
t744 = t510 * t455;
t842 = t444 - t744;
t769 = t842 ^ 2;
t874 = t768 - t769;
t877 = qJD(2) * t874;
t824 = -t857 / 0.2e1;
t823 = t857 / 0.2e1;
t869 = t842 / 0.2e1;
t876 = t304 * t869;
t871 = -t341 / 0.2e1;
t875 = t843 * t871;
t830 = t341 / 0.2e1;
t870 = -t842 / 0.2e1;
t675 = t514 * qJD(1);
t868 = t304 * t675;
t715 = qJD(1) * t843;
t654 = t304 * t715;
t709 = qJD(2) * t842;
t651 = t341 * t709;
t467 = pkin(3) * t742 + t512 * pkin(6);
t353 = pkin(4) * t429 + t467;
t867 = t353 * t304;
t866 = t353 * t843;
t283 = t843 * t675;
t731 = t883 * t341;
t586 = t709 + t715;
t710 = qJD(2) * t341;
t718 = qJD(1) * t304;
t864 = t710 + t718;
t863 = qJD(3) * t304;
t862 = qJD(4) * t304;
t861 = qJD(4) * t341;
t120 = t304 * t870 + t875;
t860 = t120 * qJD(5);
t812 = t457 / 0.2e1;
t815 = -t455 / 0.2e1;
t239 = -t429 * t812 + t432 * t815;
t859 = t239 * qJD(3);
t858 = t304 * qJD(5);
t856 = -qJD(1) * t120 + t651;
t707 = qJD(2) * t457;
t855 = -qJD(1) * t239 + t455 * t707;
t854 = -qJD(2) * t120 + t654;
t711 = qJD(1) * t432;
t853 = qJD(2) * t239 - t429 * t711;
t499 = -pkin(3) * t513 - pkin(2);
t419 = pkin(4) * t455 + t499;
t822 = t419 / 0.2e1;
t826 = t353 / 0.2e1;
t852 = t822 * t843 + t826 * t842;
t475 = t508 * t741;
t666 = t509 * t738;
t434 = -t475 + t666;
t655 = t800 * t434;
t431 = t514 * t457;
t746 = t510 * t431;
t730 = -t746 / 0.2e1 + t655 / 0.2e1;
t504 = t511 ^ 2;
t506 = t513 ^ 2;
t484 = t506 - t504;
t677 = t512 * qJD(1);
t652 = t513 * t677;
t841 = qJD(2) * t484 - 0.2e1 * t511 * t652;
t840 = t432 ^ 2;
t839 = t457 ^ 2;
t835 = -t843 / 0.2e1;
t834 = -t304 / 0.2e1;
t671 = pkin(3) * t739;
t796 = t432 * pkin(4);
t370 = t671 + t796;
t825 = t370 / 0.2e1;
t622 = t412 / 0.2e1;
t791 = t511 * pkin(3);
t794 = t457 * pkin(4);
t422 = t791 + t794;
t821 = t422 / 0.2e1;
t820 = t429 / 0.2e1;
t665 = t509 * pkin(3) + pkin(4);
t792 = t508 * pkin(3);
t440 = t510 * t792 - t800 * t665;
t818 = -t440 / 0.2e1;
t817 = t440 / 0.2e1;
t441 = t510 * t665 + t800 * t792;
t816 = -t441 / 0.2e1;
t621 = t444 / 0.2e1;
t814 = t455 / 0.2e1;
t813 = -t457 / 0.2e1;
t811 = -t499 / 0.2e1;
t810 = -t508 / 0.2e1;
t809 = t508 / 0.2e1;
t808 = -t509 / 0.2e1;
t807 = t509 / 0.2e1;
t806 = -t511 / 0.2e1;
t805 = -t512 / 0.2e1;
t804 = -t513 / 0.2e1;
t803 = -t514 / 0.2e1;
t802 = t514 / 0.2e1;
t571 = 0.2e1 * t869 * t843;
t572 = (t830 - t871) * t304;
t50 = t571 + t572;
t801 = t50 * qJD(4);
t797 = t431 * pkin(4);
t790 = t512 * pkin(2);
t789 = t512 * pkin(3);
t503 = t514 * pkin(6);
t786 = t514 * pkin(7);
t51 = -t571 + t572;
t71 = t304 * t341 - t842 * t843;
t784 = t51 * qJD(3) + t71 * qJD(5);
t783 = pkin(3) * qJD(3);
t31 = -t304 * t98 + t843 * t97;
t782 = qJD(1) * t31;
t46 = t109 * t514 - t370 * t304 - t866;
t781 = qJD(1) * t46;
t47 = t110 * t514 + t370 * t843 - t867;
t780 = qJD(1) * t47;
t62 = -t514 * t97 - t867;
t779 = qJD(1) * t62;
t63 = -t514 * t98 - t866;
t778 = qJD(1) * t63;
t473 = -t786 + t790;
t466 = t513 * t473;
t492 = pkin(6) * t742;
t420 = t492 + t466;
t361 = -qJ(4) * t738 + t420 + t789;
t338 = t508 * t361;
t465 = t511 * t473;
t672 = pkin(6) * t739;
t421 = t465 - t672;
t371 = -qJ(4) * t741 + t421;
t365 = t509 * t371;
t245 = t365 + t338;
t181 = -pkin(8) * t431 + t245;
t661 = t800 * t181;
t339 = t509 * t361;
t759 = t508 * t371;
t244 = t339 - t759;
t174 = pkin(4) * t512 - pkin(8) * t434 + t244;
t755 = t510 * t174;
t100 = t661 + t755;
t411 = t800 * t431;
t745 = t510 * t434;
t306 = t411 + t745;
t311 = t655 - t746;
t663 = t800 * t174;
t753 = t510 * t181;
t99 = t663 - t753;
t10 = -t100 * t304 - t306 * t98 + t311 * t97 - t843 * t99;
t777 = t10 * qJD(1);
t11 = -t881 * t304 - t882 * t843;
t776 = t11 * qJD(1);
t490 = pkin(3) * t741;
t468 = t503 + t490;
t354 = t468 + t797;
t14 = t100 * t98 + t353 * t354 - t97 * t99;
t775 = t14 * qJD(1);
t15 = -t109 * t97 + t110 * t98 + t353 * t370;
t774 = t15 * qJD(1);
t27 = -t354 * t304 - t353 * t306 + t97 * t512 + t514 * t99;
t773 = t27 * qJD(1);
t28 = t100 * t514 + t353 * t311 + t354 * t843 - t98 * t512;
t772 = t28 * qJD(1);
t767 = t341 * t514;
t766 = t842 * t514;
t417 = t513 * t597 + t673;
t765 = t417 * t514;
t764 = t418 * t514;
t763 = t429 * t455;
t44 = -t229 * t434 - t230 * t431 - t244 * t432 - t245 * t429;
t762 = t44 * qJD(1);
t45 = -t845 * t432 + (t229 - t250) * t429;
t761 = t45 * qJD(1);
t760 = t457 * t432;
t743 = t511 * t429;
t505 = t512 ^ 2;
t740 = t513 * t505;
t52 = t229 * t244 + t230 * t245 + t467 * t468;
t737 = t52 * qJD(1);
t53 = t229 * t249 + t230 * t250 + t467 * t671;
t736 = t53 * qJD(1);
t90 = -t229 * t512 + t244 * t514 - t468 * t429 - t467 * t431;
t735 = t90 * qJD(1);
t91 = -t230 * t512 + t245 * t514 + t468 * t432 + t467 * t434;
t734 = t91 * qJD(1);
t117 = t843 * t830 + t876;
t733 = t117 * qJD(3) - t860;
t118 = t875 - t876;
t732 = t118 * qJD(3) + t860;
t507 = t514 ^ 2;
t485 = t507 - t505;
t111 = -t229 * t432 - t230 * t429;
t729 = qJD(1) * t111;
t138 = t249 * t514 - t429 * t671 - t467 * t432;
t728 = qJD(1) * t138;
t139 = t250 * t514 - t467 * t429 + t432 * t671;
t727 = qJD(1) * t139;
t155 = t304 * t512 - t306 * t514;
t726 = qJD(1) * t155;
t156 = t311 * t514 - t512 * t843;
t725 = qJD(1) * t156;
t615 = -t411 / 0.2e1 - t745 / 0.2e1;
t641 = t842 * t803;
t186 = t641 - t615;
t724 = qJD(1) * t186;
t187 = t641 + t615;
t723 = qJD(1) * t187;
t188 = -t766 / 0.2e1 + t615;
t722 = qJD(1) * t188;
t189 = -t767 / 0.2e1 + t730;
t721 = qJD(1) * t189;
t640 = t341 * t802;
t191 = -t640 + t730;
t720 = qJD(1) * t191;
t192 = -t640 - t730;
t719 = qJD(1) * t192;
t307 = -t512 * t429 + t431 * t514;
t717 = qJD(1) * t307;
t308 = t512 * t432 - t434 * t514;
t716 = qJD(1) * t308;
t355 = -t505 * t799 - t765;
t714 = qJD(1) * t355;
t356 = -pkin(6) * t740 - t764;
t713 = qJD(1) * t356;
t712 = qJD(1) * t429;
t708 = qJD(2) * t419;
t706 = qJD(2) * t511;
t705 = qJD(2) * t513;
t704 = qJD(3) * t843;
t703 = qJD(3) * t842;
t702 = qJD(3) * t432;
t701 = qJD(3) * t457;
t700 = qJD(3) * t511;
t699 = qJD(3) * t513;
t698 = qJD(3) * t514;
t697 = qJD(4) * t514;
t337 = t621 - t444 / 0.2e1;
t696 = qJD(5) * t337;
t694 = qJD(5) * t842;
t693 = qJD(5) * t419;
t108 = -t304 * t311 - t306 * t843;
t692 = t108 * qJD(1);
t147 = (t420 * t512 - t765) * t513 + (t421 * t512 + t764) * t511;
t691 = t147 * qJD(1);
t175 = pkin(6) ^ 2 * t512 * t514 - t417 * t420 + t418 * t421;
t690 = t175 * qJD(1);
t221 = -t429 * t434 - t431 * t432;
t689 = t221 * qJD(1);
t263 = t417 * t512 + (t420 - 0.2e1 * t492) * t514;
t688 = t263 * qJD(1);
t264 = t421 * t514 + (-t418 + 0.2e1 * t670) * t512;
t687 = t264 * qJD(1);
t566 = -t758 / 0.2e1 - t757 / 0.2e1;
t326 = (t813 - t566) * t514;
t686 = t326 * qJD(1);
t327 = (t813 + t566) * t514;
t685 = t327 * qJD(1);
t328 = t455 * t803 + t666 / 0.2e1 - t475 / 0.2e1;
t684 = t328 * qJD(1);
t329 = t475 / 0.2e1 + (t815 - t756 / 0.2e1) * t514;
t683 = t329 * qJD(1);
t682 = t429 * qJD(3);
t449 = (t504 / 0.2e1 - t506 / 0.2e1) * t512;
t681 = t449 * qJD(3);
t448 = t455 * qJD(3);
t463 = t485 * t511;
t680 = t463 * qJD(1);
t464 = t507 * t513 - t740;
t679 = t464 * qJD(1);
t678 = t485 * qJD(1);
t676 = t512 * qJD(2);
t674 = t514 * qJD(2);
t669 = pkin(1) * t677;
t668 = pkin(1) * t675;
t500 = t791 / 0.2e1;
t667 = t789 / 0.2e1;
t649 = t511 * t705;
t648 = t513 * t676;
t647 = t511 * t698;
t646 = t513 * t698;
t645 = t457 * t448;
t644 = t511 * t699;
t643 = t512 * t674;
t642 = t512 * t675;
t639 = -t739 / 0.2e1;
t638 = -t338 / 0.2e1 - t365 / 0.2e1;
t637 = t490 / 0.2e1 + t503 / 0.2e1;
t405 = t432 * t675;
t632 = qJD(2) * t327 - t405;
t480 = t513 * t667;
t631 = t480 + t796 / 0.2e1;
t630 = t500 + t794 / 0.2e1;
t629 = -qJD(3) + t675;
t628 = -qJD(5) + t675;
t627 = t511 * t648;
t626 = t505 * t644;
t623 = -t659 / 0.2e1;
t620 = t675 - qJD(3) / 0.2e1;
t617 = t157 / 0.2e1 + t440 * t802;
t616 = t339 / 0.2e1 - t759 / 0.2e1;
t520 = t353 * t821 + t370 * t822 + t882 * t850 + t881 * t887;
t577 = t100 * t816 + t99 * t817;
t2 = t520 + t577;
t38 = t419 * t422;
t614 = t2 * qJD(1) + t38 * qJD(2);
t518 = t172 * t834 + t304 * t850 - t835 * t888 + t843 * t887 + t882 * t870 + t881 * t871;
t569 = t306 * t816 + t311 * t817;
t3 = -t518 + t569;
t613 = t3 * qJD(1);
t527 = -t172 * t835 + t304 * t887 + t98 * t830 + t870 * t97;
t578 = t797 / 0.2e1 + t637;
t17 = t527 + t578;
t69 = -t172 * t842 + t341 * t888;
t612 = qJD(1) * t17 - qJD(2) * t69;
t611 = -t420 * t511 + t421 * t513;
t106 = t770 + t771;
t610 = qJD(1) * t106 + qJD(2) * t50;
t609 = qJD(2) * t51 + t878;
t540 = (t431 * t810 + t434 * t808) * pkin(3);
t23 = (t230 / 0.2e1 + t249 / 0.2e1) * t457 - t886 * t455 + (t823 + t824) * t429 + t540;
t608 = t23 * qJD(1);
t123 = t768 + t769;
t607 = qJD(1) * t50 + qJD(2) * t123;
t606 = qJD(1) * t51 + t877;
t605 = qJD(2) * t71 + t878;
t140 = t499 * t791;
t526 = t886 * t377 + t845 * t824;
t574 = t244 * t807 + t245 * t809;
t25 = (t467 * t806 + t499 * t639 + t574) * pkin(3) + t526;
t604 = -t25 * qJD(1) + t140 * qJD(2);
t141 = t341 * t422 + t419 * t842;
t522 = t304 * t821 + t341 * t825 + t803 * t888 + t852;
t545 = -t753 / 0.2e1 + t663 / 0.2e1;
t531 = t440 * t805 + t545;
t19 = -t522 + t531;
t603 = -qJD(1) * t19 + qJD(2) * t141;
t142 = -t341 * t419 + t422 * t842;
t521 = t172 * t802 - t304 * t822 - t341 * t826 + t821 * t843 + t825 * t842;
t546 = -t755 / 0.2e1 - t661 / 0.2e1;
t530 = t441 * t805 + t546;
t20 = -t521 + t530;
t602 = -qJD(1) * t20 + qJD(2) * t142;
t601 = qJD(1) * t71 + t877;
t198 = -t377 * t455 - t457 * t857;
t525 = t229 * t812 + t230 * t814 + t377 * t820 + t432 * t823;
t60 = t525 + t637;
t600 = -qJD(1) * t60 + qJD(2) * t198;
t323 = t455 * t791 + t457 * t499;
t533 = -t377 * t802 + t432 * t811 + t467 * t813;
t93 = (-t743 / 0.2e1 + (t455 * t804 + t807) * t512) * pkin(3) + t533 + t616;
t599 = -qJD(1) * t93 + qJD(2) * t323;
t324 = -t455 * t499 + t457 * t791;
t532 = -t429 * t811 + t467 * t814 + t803 * t857;
t92 = (t432 * t806 + (t457 * t804 + t810) * t512) * pkin(3) + t532 + t638;
t598 = -qJD(1) * t92 + qJD(2) * t324;
t596 = t629 * t512;
t573 = -t304 * t816 + t818 * t843;
t121 = t573 + t631;
t570 = -t341 * t816 + t818 * t842;
t136 = t570 + t630;
t595 = qJD(1) * t121 + qJD(2) * t136;
t150 = -t760 + t763;
t427 = t429 ^ 2;
t262 = t427 - t840;
t594 = qJD(1) * t262 + qJD(2) * t150;
t451 = t455 ^ 2;
t314 = t451 - t839;
t593 = qJD(1) * t150 + qJD(2) * t314;
t237 = 0.2e1 * t622 - t747;
t280 = 0.2e1 * t621 - t744;
t591 = qJD(1) * t237 + qJD(2) * t280;
t248 = t760 + t763;
t318 = t427 + t840;
t590 = qJD(1) * t318 + qJD(2) * t248;
t368 = t451 + t839;
t589 = qJD(1) * t248 + qJD(2) * t368;
t568 = -t429 * t809 + t432 * t808;
t266 = (t639 + t568) * pkin(3);
t567 = t455 * t810 + t457 * t808;
t313 = (t806 + t567) * pkin(3);
t588 = qJD(1) * t266 + qJD(2) * t313;
t301 = t622 - t412 / 0.2e1;
t587 = qJD(1) * t301 + qJD(2) * t337;
t584 = -qJD(2) * t455 - t712;
t583 = t707 + t711;
t582 = qJD(5) * t280 + t703;
t581 = qJD(5) * t843 + t704;
t580 = t858 + t863;
t579 = t786 / 0.2e1 - t790 / 0.2e1;
t548 = t579 * t511;
t366 = t465 / 0.2e1 - t548;
t576 = pkin(2) * t705 - qJD(1) * t366;
t547 = t579 * t513;
t367 = -t466 / 0.2e1 + t547;
t575 = pkin(2) * t706 - qJD(1) * t367;
t534 = -t802 * t888 + t852;
t34 = -t534 + t545;
t565 = qJD(1) * t34 - t708 * t842;
t535 = -t172 * t803 + t353 * t871 + t419 * t834;
t35 = -t535 + t546;
t564 = qJD(1) * t35 + t341 * t708;
t563 = t513 * t596;
t562 = qJD(2) * t117 + t718 * t843;
t561 = qJD(1) * t117 + t710 * t842;
t560 = qJD(2) * t118 - t654;
t559 = qJD(1) * t118 - t651;
t392 = -qJD(1) * t449 + t649;
t550 = qJD(2) * t326 - t405 + t702;
t549 = qJD(2) * t187 - qJD(5) * t301 - t283;
t544 = -t751 / 0.2e1 + t660 / 0.2e1;
t378 = qJD(1) * t511 * t740 + qJD(2) * t449;
t462 = t484 * t505;
t542 = qJD(1) * t462 + 0.2e1 * t627;
t515 = t441 * t802 - t516 / 0.2e1 - t662 / 0.2e1;
t39 = -t515 + t544;
t539 = qJD(1) * t39 + qJD(3) * t441;
t102 = t836 + t879 / 0.2e1;
t40 = t623 + (-t183 / 0.2e1 - t180 / 0.2e1) * t510 + t617;
t538 = qJD(1) * t40 - qJD(2) * t102 - qJD(3) * t440;
t536 = qJD(2) * t186 + qJD(5) * t237 - t283 + t704;
t497 = -t677 / 0.2e1;
t496 = t677 / 0.2e1;
t495 = t676 / 0.2e1;
t454 = t620 * t512;
t428 = (-qJD(5) / 0.2e1 + t620) * t512;
t424 = t441 * qJD(5);
t423 = t440 * qJD(5);
t335 = t492 + t466 / 0.2e1 + t547;
t334 = t672 - t465 / 0.2e1 - t548;
t312 = pkin(3) * t567 + t500;
t265 = pkin(3) * t568 + t480;
t261 = t328 * qJD(2) - t429 * t675;
t235 = t248 * qJD(4);
t193 = t766 / 0.2e1 + t615;
t190 = t767 / 0.2e1 + t730;
t185 = -t329 * qJD(2) + t429 * t629;
t149 = t150 * qJD(3);
t137 = -t570 + t630;
t122 = -t573 + t631;
t105 = t191 * qJD(2) - t868;
t103 = -t885 + 0.2e1 * t836;
t95 = t432 * t500 + t457 * t480 + t789 * t810 - t532 + t638;
t94 = pkin(3) * t743 / 0.2e1 + t455 * t480 + t509 * t667 - t533 + t616;
t68 = -t192 * qJD(2) + t304 * t629 - t858;
t61 = -t525 + t637;
t42 = t515 + t544;
t41 = t754 / 0.2e1 + t623 - t752 / 0.2e1 - t617;
t37 = t534 + t545;
t36 = t535 + t546;
t26 = pkin(3) * t574 + t467 * t500 + t480 * t499 - t526;
t24 = t229 * t814 + t250 * t815 - t429 * t823 + t845 * t813 + t857 * t820 + t540;
t22 = t521 + t530;
t21 = t522 + t531;
t18 = -t527 + t578;
t4 = t518 + t569;
t1 = t520 - t577;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t643, t485 * qJD(2), 0, -t643, 0, 0, -pkin(1) * t676, -pkin(1) * t674, 0, 0, t506 * t643 - t626, -t462 * qJD(3) - 0.2e1 * t514 * t627, -t464 * qJD(2) + t512 * t647, t504 * t643 + t626, t463 * qJD(2) + t512 * t646, -t643, -qJD(2) * t263 - qJD(3) * t356, qJD(2) * t264 + qJD(3) * t355, -qJD(2) * t147, qJD(2) * t175, (qJD(2) * t434 - t682) * t432, qJD(2) * t221 + qJD(3) * t262, t308 * qJD(2) + t514 * t682, (qJD(2) * t431 + t702) * t429, t307 * qJD(2) + t432 * t698, -t643, -t90 * qJD(2) - t138 * qJD(3) + t432 * t697, t91 * qJD(2) + t139 * qJD(3) - t429 * t697, qJD(2) * t44 + qJD(3) * t45 + qJD(4) * t318, qJD(2) * t52 + qJD(3) * t53 + qJD(4) * t111, (qJD(2) * t311 - t580) * t843, qJD(2) * t108 + t883 * t873, -t156 * qJD(2) + t514 * t580, (qJD(2) * t306 + t581) * t304, -t155 * qJD(2) + t514 * t581, -t643, -t27 * qJD(2) - t46 * qJD(3) - t63 * qJD(5) + t697 * t843, t28 * qJD(2) + t47 * qJD(3) + t62 * qJD(5) - t304 * t697, qJD(2) * t10 + qJD(3) * t11 + qJD(4) * t106, qJD(2) * t14 + qJD(3) * t15 + qJD(4) * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t642, t678, t674, -t642, -t676, 0, -pkin(6) * t674 - t669, pkin(6) * t676 - t668, 0, 0, -t681 + (t506 * t677 + t649) * t514, -0.2e1 * t512 * t644 + t841 * t514, t511 * t676 - t679, t681 + (t504 * t677 - t649) * t514, t648 + t680, -t454, -t688 + (t511 * t618 - t670) * qJD(2) + t335 * qJD(3), t687 + (t513 * t618 + t673) * qJD(2) + t334 * qJD(3), qJD(2) * t611 - t691, t690 + (-pkin(2) * t503 + pkin(7) * t611) * qJD(2), t434 * t583 + t859, t689 + (-t431 * t457 - t434 * t455) * qJD(2) + t149, -qJD(3) * t329 + t457 * t676 + t716, -t431 * t584 - t859, -qJD(3) * t326 - t455 * t676 + t717, -t454, -t735 + (t431 * t499 + t455 * t468 + t512 * t857) * qJD(2) + t94 * qJD(3) - t327 * qJD(4), t734 + (-t377 * t512 + t434 * t499 + t457 * t468) * qJD(2) + t95 * qJD(3) + t328 * qJD(4), t762 + (-t244 * t457 - t245 * t455 - t377 * t431 - t434 * t857) * qJD(2) + t24 * qJD(3) + t235, t737 + (t244 * t857 + t245 * t377 + t468 * t499) * qJD(2) + t26 * qJD(3) + t61 * qJD(4), t586 * t311 + t732, t692 + (-t306 * t842 - t311 * t341) * qJD(2) + t784, -qJD(3) * t192 + qJD(5) * t190 + t676 * t842 - t725, t306 * t864 + t733, -qJD(3) * t186 + qJD(5) * t193 - t341 * t676 - t726, -t428, -t773 + (t172 * t512 + t306 * t419 + t341 * t354) * qJD(2) + t21 * qJD(3) - t187 * qJD(4) + t37 * qJD(5), t772 + (t311 * t419 + t354 * t842 + t512 * t888) * qJD(2) + t22 * qJD(3) + t191 * qJD(4) + t36 * qJD(5), t777 + (-t100 * t341 - t172 * t311 + t306 * t888 - t842 * t99) * qJD(2) + t4 * qJD(3) + t801, t775 + (-t100 * t888 + t172 * t99 + t354 * t419) * qJD(2) + t1 * qJD(3) + t18 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, -t542, t511 * t596, t378, t563, t495, qJD(2) * t335 - qJD(3) * t418 - t713, qJD(2) * t334 + qJD(3) * t417 + t714, 0, 0, t853, t594, t185, -t853, -t550, t495, qJD(2) * t94 + qJD(3) * t249 - t728, qJD(2) * t95 - qJD(3) * t250 + t727, t761 + t24 * qJD(2) + (t429 * t509 - t432 * t508) * t783, t736 + t26 * qJD(2) + t265 * qJD(4) + (t249 * t509 + t250 * t508) * t783, t560, t609, t68, t562, -t536, t495, qJD(2) * t21 + qJD(3) * t109 + qJD(5) * t42 - t781, qJD(2) * t22 - qJD(3) * t110 + qJD(5) * t41 + t780, t776 + t4 * qJD(2) + (-t304 * t440 - t441 * t843) * qJD(3), t774 + t1 * qJD(2) + (-t109 * t440 + t110 * t441) * qJD(3) + t122 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t632, t261, t590, qJD(2) * t61 + qJD(3) * t265 + t729, 0, 0, 0, 0, 0, 0, -t549, t105, t610, qJD(2) * t18 + qJD(3) * t122 + t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t854, t605, t190 * qJD(2) + t304 * t628 - t863, t854, t193 * qJD(2) - t237 * qJD(3) + t628 * t843, t495, qJD(2) * t37 + qJD(3) * t42 + qJD(4) * t301 - qJD(5) * t98 - t778, qJD(2) * t36 + qJD(3) * t41 + qJD(5) * t97 + t779, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t642, -t678, 0, t642, 0, 0, t669, t668, 0, 0, -t506 * t642 - t681, 0.2e1 * t511 * t563, -t646 + t679, -t504 * t642 + t681, t647 - t680, t454, qJD(3) * t367 + t688, qJD(3) * t366 - t687, t691, -t690, -t434 * t711 + t859, t149 - t689, -qJD(3) * t328 - t716, -t431 * t712 - t859, -qJD(3) * t327 - t717, t454, -qJD(3) * t93 - qJD(4) * t326 + t735, -qJD(3) * t92 + qJD(4) * t329 - t734, -qJD(3) * t23 + t235 - t762, -qJD(3) * t25 - qJD(4) * t60 - t737, -t311 * t715 + t732, -t692 + t784, -qJD(3) * t191 - qJD(5) * t189 + t725, -t306 * t718 + t733, -qJD(3) * t187 - qJD(5) * t188 + t726, t428, -qJD(3) * t19 - qJD(4) * t186 - qJD(5) * t34 + t773, -qJD(3) * t20 + qJD(4) * t192 - qJD(5) * t35 - t772, -qJD(3) * t3 - t777 + t801, qJD(3) * t2 - qJD(4) * t17 - t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t644, t484 * qJD(3), 0, -t644, 0, 0, -pkin(2) * t700, -pkin(2) * t699, 0, 0, -t645, t314 * qJD(3), 0, t645, 0, 0, t323 * qJD(3), t324 * qJD(3), qJD(4) * t368, qJD(3) * t140 + qJD(4) * t198, -t731 * t842, t883 * t874, 0, (t694 + t703) * t341, 0, 0, qJD(3) * t141 + t693 * t842, qJD(3) * t142 - t341 * t693, qJD(4) * t123, qJD(3) * t38 + qJD(4) * t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t392, t841, -t629 * t513, -t392, t629 * t511, t497, -pkin(7) * t699 - t575, pkin(7) * t700 - t576, 0, 0, -t855, t593, -t448 - t684, t855, -t685 - t701, t497, -qJD(3) * t377 + t599, -qJD(3) * t857 + t598, (t455 * t509 - t457 * t508) * t783 - t608, t312 * qJD(4) + (-t377 * t509 + t508 * t857) * t783 + t604, t559, t606, -t720 - t731, t561, -t582 - t723, t497, t603 + t889, -qJD(3) * t172 + qJD(5) * t103 + t602, (-t341 * t440 - t441 * t842) * qJD(3) - t613, (t172 * t441 - t440 * t888) * qJD(3) + t137 * qJD(4) + t614; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t686, t683, t589, qJD(3) * t312 + t600, 0, 0, 0, 0, 0, 0, t696 - t724, t719, t607, qJD(3) * t137 - t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t856, t601, -t721 - t731, t856, -qJD(3) * t280 - t694 - t722, t497, qJD(4) * t337 - t565 + t889, qJD(3) * t103 - qJD(5) * t172 - t564, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, t542, (-t511 * t677 + t705) * t514, -t378, (-t652 - t706) * t514, t495, -qJD(2) * t367 + t713, -qJD(2) * t366 - t714, 0, 0, -t853, -t594, t261, t853, t632, t495, qJD(2) * t93 - qJD(4) * t432 + t728, qJD(2) * t92 + qJD(4) * t429 - t727, qJD(2) * t23 - t761, qJD(2) * t25 + qJD(4) * t266 - t736, -t560, -t609, t105, -t562, t549, t495, qJD(2) * t19 - qJD(4) * t843 - qJD(5) * t39 + t781, qJD(2) * t20 - qJD(5) * t40 - t780 + t862, qJD(2) * t3 - t776, -qJD(2) * t2 - qJD(4) * t121 - t774; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t392, -t841, t513 * t675, t392, -t511 * t675, t496, t575, t576, 0, 0, t855, -t593, t684, -t855, t685, t496, -qJD(4) * t457 - t599, qJD(4) * t455 - t598, t608, qJD(4) * t313 - t604, -t559, -t606, t720, -t561, -t696 + t723, t496, -qJD(4) * t842 - t603, qJD(5) * t102 - t602 + t861, t613, -qJD(4) * t136 - t614; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, t423, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t583, -t584, 0, t588, 0, 0, 0, 0, 0, 0, -t586, t864, 0, -t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t587, 0, -t424 - t539, t423 - t538, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t550, t185, -t590, qJD(2) * t60 - qJD(3) * t266 - t729, 0, 0, 0, 0, 0, 0, t536, t68, -t610, qJD(2) * t17 + qJD(3) * t121 - t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t686 + t701, -t448 - t683, -t589, -qJD(3) * t313 - t600, 0, 0, 0, 0, 0, 0, t582 + t724, -t719 - t731, -t607, qJD(3) * t136 + t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t583, t584, 0, -t588, 0, 0, 0, 0, 0, 0, t586, -t864, 0, t595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t591, -t864, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t854, -t605, t189 * qJD(2) - t868, -t854, t188 * qJD(2) + t301 * qJD(3) - t283, t495, qJD(2) * t34 + qJD(3) * t39 - qJD(4) * t237 + t778, qJD(2) * t35 + qJD(3) * t40 - t779 + t862, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t856, -t601, t721, -t856, qJD(3) * t337 + t722, t496, -qJD(4) * t280 + t565, -qJD(3) * t102 + t564 + t861, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t587, 0, t539, t538, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t591, t864, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t5;
