% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S5RRRPR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% 
% Output:
% MMD_reg [((5+1)*5/2)x(5*10)]
%   inertial parameter regressor of inertia matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:25
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S5RRRPR9_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR9_inertiaDJ_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR9_inertiaDJ_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR9_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:24:38
% EndTime: 2019-12-31 21:24:47
% DurationCPUTime: 2.80s
% Computational Cost: add. (3769->278), mult. (9284->535), div. (0->0), fcn. (8202->8), ass. (0->138)
t102 = sin(qJ(3));
t104 = cos(qJ(3));
t178 = sin(pkin(9));
t179 = cos(pkin(9));
t132 = t178 * t102 - t179 * t104;
t144 = qJD(3) * t178;
t145 = qJD(3) * t179;
t65 = -t102 * t144 + t104 * t145;
t69 = t179 * t102 + t178 * t104;
t103 = sin(qJ(2));
t105 = cos(qJ(2));
t167 = t105 * qJD(2);
t171 = qJD(3) * t104;
t193 = t102 * t167 + t103 * t171;
t192 = -0.4e1 * t103;
t101 = sin(qJ(5));
t137 = t179 * pkin(3) + pkin(4);
t162 = t178 * pkin(3);
t190 = cos(qJ(5));
t62 = -t101 * t162 + t190 * t137;
t153 = t104 * t167;
t172 = qJD(3) * t103;
t191 = -t102 * t172 + t153;
t186 = -qJ(4) - pkin(7);
t45 = t69 * t186;
t117 = -t69 * pkin(8) + t45;
t46 = t132 * t186;
t36 = -t132 * pkin(8) + t46;
t16 = t101 * t117 + t190 * t36;
t97 = t102 ^ 2;
t99 = t104 ^ 2;
t181 = t97 - t99;
t151 = qJD(3) * t181;
t98 = t103 ^ 2;
t143 = (t105 ^ 2 - t98) * qJD(2);
t189 = pkin(6) * t102;
t188 = t103 * pkin(3);
t187 = t105 * pkin(2);
t175 = t104 * t103;
t134 = -t103 * pkin(7) - t187;
t130 = -pkin(1) + t134;
t71 = t104 * t130;
t41 = -qJ(4) * t175 + t71 + (-pkin(3) - t189) * t105;
t177 = t102 * t103;
t174 = t104 * t105;
t90 = pkin(6) * t174;
t53 = t102 * t130 + t90;
t44 = -qJ(4) * t177 + t53;
t21 = t178 * t41 + t179 * t44;
t127 = qJD(3) * t130;
t133 = pkin(2) * t103 - pkin(7) * t105;
t128 = t133 * qJD(2);
t185 = -t102 * t128 - t104 * t127;
t184 = t69 * t103;
t95 = t103 * qJD(2);
t157 = t102 * t95;
t183 = pkin(6) * t157 + t104 * t128;
t182 = t102 * t145 + t104 * t144;
t74 = pkin(3) * t177 + t103 * pkin(6);
t176 = t102 * t105;
t173 = qJD(3) * t102;
t170 = qJD(3) * t105;
t169 = qJD(5) * t101;
t168 = t104 * qJD(4);
t166 = -0.2e1 * pkin(1) * qJD(2);
t165 = -0.2e1 * pkin(2) * qJD(3);
t93 = pkin(6) * t167;
t50 = t193 * pkin(3) + t93;
t164 = pkin(6) * t176;
t94 = pkin(3) * t173;
t92 = -t104 * pkin(3) - pkin(2);
t160 = t102 * t170;
t158 = t104 * t170;
t155 = t102 * t171;
t154 = t103 * t167;
t152 = qJD(3) * t186;
t147 = qJD(2) * t179;
t146 = qJD(2) * t178;
t142 = 0.2e1 * t154;
t141 = t98 * t155;
t139 = t102 * t153;
t138 = t190 * t184;
t20 = -t178 * t44 + t179 * t41;
t52 = t71 - t164;
t131 = -t102 * t53 - t104 * t52;
t129 = -t103 * t168 + t183;
t108 = (-qJ(4) * t174 + t188) * qJD(2) + (-t90 + (-t186 * t103 + pkin(1) + t187) * t102) * qJD(3) + t129;
t114 = (-pkin(6) * qJD(2) - qJ(4) * qJD(3)) * t175 + (-qJD(4) * t103 + (-pkin(6) * qJD(3) - qJ(4) * qJD(2)) * t105) * t102 - t185;
t112 = t179 * t114;
t11 = t178 * t108 + t112;
t121 = -t65 * t103 - t146 * t174 - t147 * t176;
t106 = t121 * pkin(8) + t11;
t111 = t178 * t114;
t10 = t179 * t108 - t111;
t33 = t132 * t167 + t69 * t172;
t107 = pkin(4) * t95 + t33 * pkin(8) + t10;
t60 = t132 * t103;
t120 = -t105 * pkin(4) + t60 * pkin(8) + t20;
t119 = t190 * t120;
t17 = -t184 * pkin(8) + t21;
t1 = -qJD(5) * t119 - t101 * t107 - t190 * t106 + t17 * t169;
t32 = -t101 * t184 - t190 * t60;
t125 = t104 * t95 + t160;
t124 = t190 * t132;
t123 = -t102 * qJD(4) + t104 * t152;
t122 = t102 * t152 + t168;
t40 = -t101 * t132 + t190 * t69;
t25 = t125 * pkin(6) + t185;
t26 = -t53 * qJD(3) + t183;
t118 = t131 * qJD(3) - t26 * t102 - t25 * t104;
t63 = t101 * t137 + t190 * t162;
t9 = t101 * t120 + t190 * t17;
t115 = t190 * t117;
t35 = t179 * t122 + t178 * t123;
t34 = -t178 * t122 + t179 * t123;
t113 = -t65 * pkin(8) + t34;
t110 = -t182 * pkin(8) + t35;
t109 = -pkin(6) * t158 - qJ(4) * t191 - t102 * t127 + t129;
t2 = -t9 * qJD(5) - t101 * t106 + t190 * t107;
t85 = -0.2e1 * t154;
t56 = t63 * qJD(5);
t55 = t62 * qJD(5);
t54 = t132 * pkin(4) + t92;
t48 = t182 * pkin(4) + t94;
t47 = t103 * t151 - t139;
t42 = t184 * pkin(4) + t74;
t39 = t101 * t69 + t124;
t31 = -t101 * t60 + t138;
t22 = -t121 * pkin(4) + t50;
t19 = t40 * qJD(5) + t101 * t65 + t190 * t182;
t18 = qJD(5) * t124 + t101 * t182 + t69 * t169 - t190 * t65;
t15 = -t101 * t36 + t115;
t13 = t32 * qJD(5) - t101 * t33 - t190 * t121;
t12 = qJD(5) * t138 - t101 * t121 - t60 * t169 + t190 * t33;
t8 = -t101 * t17 + t119;
t4 = -qJD(5) * t16 - t101 * t110 + t190 * t113;
t3 = -qJD(5) * t115 - t101 * t113 - t190 * t110 + t36 * t169;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, 0.2e1 * t143, 0, t85, 0, 0, t103 * t166, t105 * t166, 0, 0, 0.2e1 * t99 * t154 - 0.2e1 * t141, t139 * t192 + 0.2e1 * t151 * t98, 0.2e1 * t103 * t160 - 0.2e1 * t104 * t143, 0.2e1 * t154 * t97 + 0.2e1 * t141, 0.2e1 * t102 * t143 + 0.2e1 * t103 * t158, t85, 0.2e1 * t52 * t95 - 0.2e1 * t26 * t105 + 0.2e1 * (t102 * t142 + t171 * t98) * pkin(6), -0.2e1 * t53 * t95 - 0.2e1 * t25 * t105 + 0.2e1 * (t104 * t142 - t173 * t98) * pkin(6), 0.2e1 * t131 * t167 + 0.2e1 * (t102 * t25 - t104 * t26 + (t102 * t52 - t104 * t53) * qJD(3)) * t103, 0.2e1 * pkin(6) ^ 2 * t154 - 0.2e1 * t53 * t25 + 0.2e1 * t52 * t26, 0.2e1 * t60 * t33, -0.2e1 * t121 * t60 + 0.2e1 * t184 * t33, 0.2e1 * t105 * t33 - 0.2e1 * t60 * t95, -0.2e1 * t184 * t121, -0.2e1 * t105 * t121 - 0.2e1 * t184 * t95, t85, -0.2e1 * t10 * t105 - 0.2e1 * t121 * t74 + 0.2e1 * t184 * t50 + 0.2e1 * t20 * t95, 0.2e1 * t11 * t105 - 0.2e1 * t21 * t95 - 0.2e1 * t74 * t33 - 0.2e1 * t50 * t60, 0.2e1 * t10 * t60 - 0.2e1 * t11 * t184 + 0.2e1 * t121 * t21 + 0.2e1 * t20 * t33, 0.2e1 * t20 * t10 + 0.2e1 * t21 * t11 + 0.2e1 * t74 * t50, -0.2e1 * t32 * t12, 0.2e1 * t12 * t31 - 0.2e1 * t32 * t13, 0.2e1 * t12 * t105 + 0.2e1 * t32 * t95, 0.2e1 * t31 * t13, 0.2e1 * t13 * t105 - 0.2e1 * t31 * t95, t85, -0.2e1 * t2 * t105 + 0.2e1 * t42 * t13 + 0.2e1 * t22 * t31 + 0.2e1 * t8 * t95, -0.2e1 * t1 * t105 - 0.2e1 * t42 * t12 + 0.2e1 * t22 * t32 - 0.2e1 * t9 * t95, 0.2e1 * t1 * t31 + 0.2e1 * t8 * t12 - 0.2e1 * t9 * t13 - 0.2e1 * t2 * t32, -0.2e1 * t9 * t1 + 0.2e1 * t8 * t2 + 0.2e1 * t42 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, 0, -t95, 0, -t93, pkin(6) * t95, 0, 0, -t47, t155 * t192 - t167 * t181, t157 - t158, t47, t125, 0, (pkin(7) * t174 + (-pkin(2) * t104 + t189) * t103) * qJD(3) + (t102 * t134 - t90) * qJD(2), (pkin(6) * t175 + t102 * t133) * qJD(3) + (t104 * t134 + t164) * qJD(2), t118, -pkin(2) * t93 + t118 * pkin(7), -t33 * t69 - t60 * t65, t121 * t69 + t132 * t33 + t182 * t60 - t184 * t65, -t105 * t65 + t69 * t95, -t121 * t132 + t182 * t184, t105 * t182 - t132 * t95, 0, -t34 * t105 - t121 * t92 + t132 * t50 + t182 * t74 + t184 * t94 + t45 * t95, t35 * t105 - t92 * t33 - t46 * t95 + t50 * t69 - t60 * t94 + t74 * t65, -t10 * t69 - t11 * t132 + t121 * t46 - t182 * t21 - t184 * t35 - t20 * t65 + t45 * t33 + t34 * t60, t10 * t45 + t11 * t46 + t20 * t34 + t21 * t35 + t50 * t92 + t74 * t94, -t12 * t40 - t32 * t18, t12 * t39 - t40 * t13 + t18 * t31 - t32 * t19, t18 * t105 + t40 * t95, t13 * t39 + t31 * t19, t19 * t105 - t39 * t95, 0, -t4 * t105 + t54 * t13 + t15 * t95 + t42 * t19 + t22 * t39 + t48 * t31, -t3 * t105 - t54 * t12 - t16 * t95 - t42 * t18 + t22 * t40 + t48 * t32, t1 * t39 + t15 * t12 - t16 * t13 + t8 * t18 - t9 * t19 - t2 * t40 + t3 * t31 - t4 * t32, -t1 * t16 + t2 * t15 + t22 * t54 - t9 * t3 + t8 * t4 + t42 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t155, -0.2e1 * t151, 0, -0.2e1 * t155, 0, 0, t102 * t165, t104 * t165, 0, 0, 0.2e1 * t69 * t65, -0.2e1 * t132 * t65 - 0.2e1 * t182 * t69, 0, 0.2e1 * t132 * t182, 0, 0, 0.2e1 * t132 * t94 + 0.2e1 * t182 * t92, 0.2e1 * t92 * t65 + 0.2e1 * t69 * t94, -0.2e1 * t132 * t35 - 0.2e1 * t182 * t46 - 0.2e1 * t34 * t69 - 0.2e1 * t45 * t65, 0.2e1 * t45 * t34 + 0.2e1 * t46 * t35 + 0.2e1 * t92 * t94, -0.2e1 * t40 * t18, 0.2e1 * t18 * t39 - 0.2e1 * t40 * t19, 0, 0.2e1 * t39 * t19, 0, 0, 0.2e1 * t54 * t19 + 0.2e1 * t48 * t39, -0.2e1 * t54 * t18 + 0.2e1 * t48 * t40, 0.2e1 * t15 * t18 - 0.2e1 * t16 * t19 + 0.2e1 * t3 * t39 - 0.2e1 * t4 * t40, 0.2e1 * t15 * t4 - 0.2e1 * t16 * t3 + 0.2e1 * t54 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, 0, -t193, t95, t26, t25, 0, 0, 0, 0, -t33, 0, t121, t95, t109 * t179 + 0.2e1 * t147 * t188 - t111, -t109 * t178 - 0.2e1 * t146 * t188 - t112, (t121 * t178 + t179 * t33) * pkin(3), (t10 * t179 + t11 * t178) * pkin(3), 0, 0, -t12, 0, -t13, t95, t56 * t105 + t62 * t95 + t2, t55 * t105 - t63 * t95 + t1, t62 * t12 - t63 * t13 - t55 * t31 + t56 * t32, -t1 * t63 + t2 * t62 + t9 * t55 - t8 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, 0, -t173, 0, -pkin(7) * t171, pkin(7) * t173, 0, 0, 0, 0, t65, 0, -t182, 0, t34, -t35, (-t178 * t182 - t179 * t65) * pkin(3), (t178 * t35 + t179 * t34) * pkin(3), 0, 0, -t18, 0, -t19, 0, t4, t3, t62 * t18 - t63 * t19 - t55 * t39 + t56 * t40, -t15 * t56 + t16 * t55 - t3 * t63 + t4 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t56, -0.2e1 * t55, 0, 0.2e1 * t63 * t55 - 0.2e1 * t62 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121, -t33, 0, t50, 0, 0, 0, 0, 0, 0, t13, -t12, 0, t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, t65, 0, t94, 0, 0, 0, 0, 0, 0, t19, -t18, 0, t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12, 0, -t13, t95, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t18, 0, -t19, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, -t55, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg = t5;
