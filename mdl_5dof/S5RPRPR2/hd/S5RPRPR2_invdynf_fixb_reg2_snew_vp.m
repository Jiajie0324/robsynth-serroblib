% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPRPR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 11:34
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPRPR2_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR2_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR2_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR2_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR2_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR2_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 11:34:38
% EndTime: 2020-01-03 11:34:41
% DurationCPUTime: 2.71s
% Computational Cost: add. (9024->165), mult. (13584->248), div. (0->0), fcn. (8597->10), ass. (0->138)
t1172 = qJD(1) + qJD(3);
t1168 = t1172 ^ 2;
t1179 = sin(qJ(3));
t1169 = qJDD(1) + qJDD(3);
t1182 = cos(qJ(3));
t1197 = t1182 * t1169;
t1145 = t1179 * t1168 - t1197;
t1175 = sin(pkin(8));
t1177 = cos(pkin(8));
t1198 = t1179 * t1169;
t1192 = -t1182 * t1168 - t1198;
t1121 = t1177 * t1145 - t1175 * t1192;
t1180 = sin(qJ(1));
t1183 = cos(qJ(1));
t1211 = t1175 * t1145 + t1177 * t1192;
t1217 = t1180 * t1121 + t1183 * t1211;
t1216 = -t1183 * t1121 + t1180 * t1211;
t1215 = 2 * qJD(5);
t1174 = sin(pkin(9));
t1176 = cos(pkin(9));
t1178 = sin(qJ(5));
t1181 = cos(qJ(5));
t1212 = -t1174 * t1178 + t1176 * t1181;
t1191 = t1174 * t1181 + t1176 * t1178;
t1133 = t1191 * t1169;
t1170 = t1174 ^ 2;
t1171 = t1176 ^ 2;
t1195 = t1170 + t1171;
t1142 = t1195 * t1168;
t1134 = t1212 * t1172;
t1208 = t1134 ^ 2;
t1136 = t1191 * t1172;
t1207 = t1136 ^ 2;
t1206 = qJD(4) * t1172;
t1205 = t1136 * t1134;
t1204 = t1168 * t1176;
t1203 = t1170 * t1168;
t1202 = t1171 * t1168;
t1201 = t1174 * t1169;
t1162 = t1176 * t1169;
t1158 = -t1183 * g(2) - t1180 * g(3);
t1189 = qJDD(1) * pkin(1) + t1158;
t1157 = -t1180 * g(2) + t1183 * g(3);
t1185 = qJD(1) ^ 2;
t1190 = -t1185 * pkin(1) + t1157;
t1125 = t1175 * t1189 + t1177 * t1190;
t1123 = -t1185 * pkin(2) + t1125;
t1124 = -t1175 * t1190 + t1177 * t1189;
t1188 = qJDD(1) * pkin(2) + t1124;
t1098 = t1182 * t1123 + t1179 * t1188;
t1173 = -g(1) + qJDD(2);
t1196 = t1176 * t1173 - 0.2e1 * t1174 * t1206;
t1094 = -t1168 * pkin(3) + t1169 * qJ(4) + t1098;
t1087 = t1174 * t1173 + (t1094 + 0.2e1 * t1206) * t1176;
t1097 = -t1179 * t1123 + t1182 * t1188;
t1148 = -t1175 * qJDD(1) - t1177 * t1185;
t1149 = t1177 * qJDD(1) - t1175 * t1185;
t1194 = t1180 * t1148 + t1183 * t1149;
t1107 = t1212 * t1169;
t1193 = t1183 * t1148 - t1180 * t1149;
t1093 = -t1169 * pkin(3) - t1168 * qJ(4) + qJDD(4) - t1097;
t1184 = qJD(5) ^ 2;
t1152 = t1174 * t1204;
t1151 = t1183 * qJDD(1) - t1180 * t1185;
t1150 = -t1180 * qJDD(1) - t1183 * t1185;
t1140 = t1195 * t1169;
t1138 = t1176 * t1142;
t1137 = t1174 * t1142;
t1130 = -t1184 - t1207;
t1129 = -t1182 * t1138 - t1176 * t1198;
t1128 = t1182 * t1137 + t1174 * t1198;
t1127 = -t1179 * t1138 + t1176 * t1197;
t1126 = t1179 * t1137 - t1174 * t1197;
t1118 = t1182 * t1140 - t1179 * t1142;
t1117 = t1179 * t1140 + t1182 * t1142;
t1113 = t1134 * t1215 + t1133;
t1112 = t1136 * t1215 - t1107;
t1111 = -qJDD(5) + t1205;
t1110 = qJDD(5) + t1205;
t1109 = -t1184 - t1208;
t1108 = -t1207 - t1208;
t1106 = -t1175 * t1127 + t1177 * t1129;
t1105 = -t1175 * t1126 + t1177 * t1128;
t1104 = t1177 * t1127 + t1175 * t1129;
t1103 = t1177 * t1126 + t1175 * t1128;
t1102 = -t1175 * t1124 + t1177 * t1125;
t1101 = t1177 * t1124 + t1175 * t1125;
t1100 = t1181 * t1111 - t1178 * t1130;
t1099 = t1178 * t1111 + t1181 * t1130;
t1096 = -t1175 * t1117 + t1177 * t1118;
t1095 = t1177 * t1117 + t1175 * t1118;
t1091 = t1181 * t1107 + t1178 * t1133;
t1090 = t1178 * t1107 - t1181 * t1133;
t1089 = t1181 * t1109 - t1178 * t1110;
t1088 = t1178 * t1109 + t1181 * t1110;
t1086 = -t1174 * t1094 + t1196;
t1085 = -pkin(4) * t1162 + t1093 + (-t1202 - t1203) * pkin(7);
t1084 = -pkin(4) * t1202 + pkin(7) * t1162 + t1087;
t1083 = (pkin(4) * t1204 - pkin(7) * t1169 - t1094) * t1174 + t1196;
t1082 = -t1174 * t1099 + t1176 * t1100;
t1081 = t1176 * t1099 + t1174 * t1100;
t1080 = -t1179 * t1097 + t1182 * t1098;
t1079 = t1182 * t1097 + t1179 * t1098;
t1078 = -t1174 * t1090 + t1176 * t1091;
t1077 = t1176 * t1090 + t1174 * t1091;
t1076 = -t1174 * t1088 + t1176 * t1089;
t1075 = t1176 * t1088 + t1174 * t1089;
t1074 = t1182 * t1082 + t1179 * t1113;
t1073 = t1179 * t1082 - t1182 * t1113;
t1072 = -t1174 * t1086 + t1176 * t1087;
t1071 = t1176 * t1086 + t1174 * t1087;
t1070 = t1182 * t1076 + t1179 * t1112;
t1069 = t1179 * t1076 - t1182 * t1112;
t1068 = t1178 * t1083 + t1181 * t1084;
t1067 = t1181 * t1083 - t1178 * t1084;
t1066 = t1182 * t1078 + t1179 * t1108;
t1065 = t1179 * t1078 - t1182 * t1108;
t1064 = t1182 * t1072 + t1179 * t1093;
t1063 = t1179 * t1072 - t1182 * t1093;
t1062 = -t1175 * t1079 + t1177 * t1080;
t1061 = t1177 * t1079 + t1175 * t1080;
t1060 = -t1175 * t1073 + t1177 * t1074;
t1059 = t1177 * t1073 + t1175 * t1074;
t1058 = -t1175 * t1069 + t1177 * t1070;
t1057 = t1177 * t1069 + t1175 * t1070;
t1056 = -t1178 * t1067 + t1181 * t1068;
t1055 = t1181 * t1067 + t1178 * t1068;
t1054 = -t1175 * t1065 + t1177 * t1066;
t1053 = t1177 * t1065 + t1175 * t1066;
t1052 = -t1175 * t1063 + t1177 * t1064;
t1051 = t1177 * t1063 + t1175 * t1064;
t1050 = -t1174 * t1055 + t1176 * t1056;
t1049 = t1176 * t1055 + t1174 * t1056;
t1048 = t1182 * t1050 + t1179 * t1085;
t1047 = t1179 * t1050 - t1182 * t1085;
t1046 = -t1175 * t1047 + t1177 * t1048;
t1045 = t1177 * t1047 + t1175 * t1048;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1173, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1173, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1071, 0, 0, 0, 0, 0, 0, t1075, t1081, t1077, t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1151, t1150, 0, t1180 * t1157 + t1183 * t1158, 0, 0, 0, 0, 0, 0, t1194, t1193, 0, t1183 * t1101 + t1180 * t1102, 0, 0, 0, 0, 0, 0, t1216, t1217, 0, t1183 * t1061 + t1180 * t1062, 0, 0, 0, 0, 0, 0, t1183 * t1104 + t1180 * t1106, t1183 * t1103 + t1180 * t1105, t1183 * t1095 + t1180 * t1096, t1183 * t1051 + t1180 * t1052, 0, 0, 0, 0, 0, 0, t1183 * t1057 + t1180 * t1058, t1183 * t1059 + t1180 * t1060, t1183 * t1053 + t1180 * t1054, t1183 * t1045 + t1180 * t1046; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t1150, t1151, 0, -t1183 * t1157 + t1180 * t1158, 0, 0, 0, 0, 0, 0, -t1193, t1194, 0, t1180 * t1101 - t1183 * t1102, 0, 0, 0, 0, 0, 0, -t1217, t1216, 0, t1180 * t1061 - t1183 * t1062, 0, 0, 0, 0, 0, 0, t1180 * t1104 - t1183 * t1106, t1180 * t1103 - t1183 * t1105, t1180 * t1095 - t1183 * t1096, t1180 * t1051 - t1183 * t1052, 0, 0, 0, 0, 0, 0, t1180 * t1057 - t1183 * t1058, t1180 * t1059 - t1183 * t1060, t1180 * t1053 - t1183 * t1054, t1180 * t1045 - t1183 * t1046; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1185, -qJDD(1), 0, t1157, 0, 0, 0, 0, 0, 0, t1148, -t1149, 0, t1102, 0, 0, 0, 0, 0, 0, t1211, t1121, 0, t1062, 0, 0, 0, 0, 0, 0, t1106, t1105, t1096, t1052, 0, 0, 0, 0, 0, 0, t1058, t1060, t1054, t1046; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1185, 0, t1158, 0, 0, 0, 0, 0, 0, t1149, t1148, 0, t1101, 0, 0, 0, 0, 0, 0, -t1121, t1211, 0, t1061, 0, 0, 0, 0, 0, 0, t1104, t1103, t1095, t1051, 0, 0, 0, 0, 0, 0, t1057, t1059, t1053, t1045; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1173, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1173, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1071, 0, 0, 0, 0, 0, 0, t1075, t1081, t1077, t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1185, -qJDD(1), 0, t1125, 0, 0, 0, 0, 0, 0, t1192, t1145, 0, t1080, 0, 0, 0, 0, 0, 0, t1129, t1128, t1118, t1064, 0, 0, 0, 0, 0, 0, t1070, t1074, t1066, t1048; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1185, 0, t1124, 0, 0, 0, 0, 0, 0, -t1145, t1192, 0, t1079, 0, 0, 0, 0, 0, 0, t1127, t1126, t1117, t1063, 0, 0, 0, 0, 0, 0, t1069, t1073, t1065, t1047; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1173, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1173, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1071, 0, 0, 0, 0, 0, 0, t1075, t1081, t1077, t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1168, -t1169, 0, t1098, 0, 0, 0, 0, 0, 0, -t1138, t1137, t1140, t1072, 0, 0, 0, 0, 0, 0, t1076, t1082, t1078, t1050; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1169, -t1168, 0, t1097, 0, 0, 0, 0, 0, 0, t1162, -t1201, t1142, -t1093, 0, 0, 0, 0, 0, 0, -t1112, -t1113, -t1108, -t1085; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1173, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1071, 0, 0, 0, 0, 0, 0, t1075, t1081, t1077, t1049; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1202, t1152, t1162, t1087, 0, 0, 0, 0, 0, 0, t1089, t1100, t1091, t1056; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1152, -t1203, -t1201, t1086, 0, 0, 0, 0, 0, 0, t1088, t1099, t1090, t1055; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1162, t1201, -t1142, t1093, 0, 0, 0, 0, 0, 0, t1112, t1113, t1108, t1085; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1109, t1111, t1107, t1068; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1110, t1130, -t1133, t1067; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1112, t1113, t1108, t1085;];
f_new_reg = t1;
