% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:15
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPP4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPP4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPP4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RPRPP4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:14:54
% EndTime: 2019-12-31 18:14:57
% DurationCPUTime: 1.40s
% Computational Cost: add. (1492->139), mult. (2560->152), div. (0->0), fcn. (2782->4), ass. (0->98)
t101 = cos(pkin(7));
t102 = sin(qJ(3));
t103 = cos(qJ(3));
t151 = sin(pkin(7));
t87 = t101 * t103 - t151 * t102;
t161 = t87 ^ 2;
t85 = t101 * t102 + t151 * t103;
t82 = t85 ^ 2;
t41 = t82 - t161;
t179 = t41 * qJD(1);
t178 = t41 * qJD(3);
t104 = -pkin(1) - pkin(6);
t170 = -qJ(4) + t104;
t90 = t170 * t103;
t116 = t151 * t90;
t89 = t170 * t102;
t80 = t101 * t89;
t173 = t116 + t80;
t48 = -t101 * t90 + t151 * t89;
t113 = -t173 * t85 + t48 * t87;
t164 = t113 * qJD(1);
t115 = -t82 / 0.2e1 - t161 / 0.2e1;
t28 = -0.1e1 / 0.2e1 + t115;
t177 = -t28 * qJD(2) - t164;
t27 = 0.1e1 / 0.2e1 + t115;
t176 = t27 * qJD(2) + t164;
t172 = t82 + t161;
t175 = qJD(4) * t172;
t174 = t172 * qJD(1);
t157 = qJD(3) * pkin(3);
t171 = (-t101 * t85 + t151 * t87) * t157;
t163 = t113 * qJD(4);
t93 = t151 * pkin(3) + qJ(5);
t95 = -t101 * pkin(3) - pkin(4);
t162 = -(t85 * t95 + t87 * t93) * qJD(3) - t85 * qJD(5);
t120 = t80 / 0.2e1;
t160 = -t85 / 0.2e1;
t159 = t87 * pkin(4);
t158 = t103 * pkin(3);
t152 = t85 * qJ(5);
t96 = t102 * pkin(3) + qJ(2);
t44 = t85 * pkin(4) - t87 * qJ(5) + t96;
t45 = t152 + t158 + t159;
t15 = t44 * t87 + t45 * t85;
t150 = t15 * qJD(1);
t16 = t44 * t85 - t45 * t87;
t149 = t16 * qJD(1);
t98 = t158 / 0.2e1;
t19 = t98 + (pkin(4) / 0.2e1 - t95 / 0.2e1) * t87 + (qJ(5) / 0.2e1 + t93 / 0.2e1) * t85;
t146 = t19 * qJD(1);
t145 = t28 * qJD(1);
t106 = t151 * t160 - t101 * t87 / 0.2e1;
t39 = (-t103 / 0.2e1 + t106) * pkin(3);
t144 = t39 * qJD(1);
t42 = t85 * t158 + t96 * t87;
t141 = t42 * qJD(1);
t43 = t87 * t158 - t96 * t85;
t140 = t43 * qJD(1);
t139 = t44 * qJD(1);
t138 = t48 * qJD(3);
t135 = t161 * qJD(1);
t134 = t85 * qJD(1);
t133 = t85 * qJD(3);
t132 = t85 * qJD(4);
t130 = t87 * qJD(1);
t129 = t87 * qJD(2);
t128 = t87 * qJD(3);
t127 = t87 * qJD(5);
t91 = t102 ^ 2 - t103 ^ 2;
t126 = t91 * qJD(1);
t125 = t96 * qJD(1);
t124 = t102 * qJD(1);
t123 = t102 * qJD(3);
t122 = t103 * qJD(1);
t121 = t103 * qJD(3);
t61 = t85 * t130;
t60 = t85 * t128;
t119 = qJ(2) * t124;
t118 = qJ(2) * t122;
t117 = t102 * t121;
t1 = t44 * t45;
t111 = t1 * qJD(1);
t8 = t96 * t158;
t110 = t8 * qJD(1);
t47 = t120 - t80 / 0.2e1;
t109 = t47 * qJD(1) + t93 * qJD(3);
t100 = qJ(2) * qJD(2);
t99 = qJD(1) * qJ(2);
t92 = t102 * t122;
t77 = t87 * qJD(4);
t71 = t85 * qJD(2);
t46 = t173 * qJD(3);
t38 = t106 * pkin(3) + t98;
t31 = 0.2e1 * t120 + t116;
t23 = t28 * qJD(4);
t21 = t27 * qJD(4);
t20 = t93 * t160 + t95 * t87 / 0.2e1 + t98 + t152 / 0.2e1 + t159 / 0.2e1;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t100, -t117, t91 * qJD(3), 0, t117, 0, 0, qJ(2) * t121 + qJD(2) * t102, -qJ(2) * t123 + qJD(2) * t103, 0, t100, -t60, t178, 0, t60, 0, 0, t42 * qJD(3) + t71, t43 * qJD(3) + t129, t175, t96 * qJD(2) + t8 * qJD(3) + t163, -t60, 0, -t178, 0, 0, t60, t15 * qJD(3) - t85 * t127 + t71, t175, t16 * qJD(3) + qJD(5) * t161 - t129, t1 * qJD(3) + t163 + (qJD(2) - t127) * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t99, 0, 0, 0, 0, 0, 0, t124, t122, 0, t99, 0, 0, 0, 0, 0, 0, t134, t130, 0, t21 + t125, 0, 0, 0, 0, 0, 0, t134, 0, -t130, t21 + t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92, t126, -t123, t92, -t121, 0, -t104 * t123 + t118, -t104 * t121 - t119, 0, 0, -t61, t179, -t133, t61, -t128, 0, -t46 + t141, t138 + t140, -t171, (-t101 * t173 - t151 * t48) * t157 + t38 * qJD(4) + t110, -t61, -t133, -t179, 0, t128, t61, -t46 + t150, t162, -t138 + t149, (t173 * t95 - t48 * t93) * qJD(3) + t20 * qJD(4) + t31 * qJD(5) + t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, t38 * qJD(3) + t176, 0, 0, 0, 0, 0, 0, 0, t174, 0, t20 * qJD(3) + t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, -t133, t135, t31 * qJD(3) - t44 * t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t99, 0, 0, 0, 0, 0, 0, -t124, -t122, 0, -t99, 0, 0, 0, 0, 0, 0, -t134, -t130, 0, t23 - t125, 0, 0, 0, 0, 0, 0, -t134, 0, t130, t23 - t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, -t121, 0, 0, 0, 0, 0, 0, 0, 0, -t133, -t128, 0, t171, 0, 0, 0, 0, 0, 0, -t133, 0, t128, -t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92, -t126, 0, -t92, 0, 0, -t118, t119, 0, 0, t61, -t179, 0, -t61, 0, 0, -t77 - t141, t132 - t140, 0, t39 * qJD(4) - t110, t61, 0, t179, 0, 0, -t61, -t77 - t150, 0, -t132 - t149, -t19 * qJD(4) + t47 * qJD(5) - t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t93 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130, t134, 0, t144, 0, 0, 0, 0, 0, 0, -t130, 0, -t134, -t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, -t133, -t174, -t39 * qJD(3) + t177, 0, 0, 0, 0, 0, 0, t128, -t174, t133, t19 * qJD(3) - t127 + t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, -t134, 0, -t144, 0, 0, 0, 0, 0, 0, t130, 0, t134, t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0, -t135, -t47 * qJD(3) + (qJD(4) + t139) * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t2;
