% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPRP9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:08
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPRP9_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP9_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP9_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRP9_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRP9_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP9_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:08:03
% EndTime: 2019-12-31 20:08:27
% DurationCPUTime: 24.72s
% Computational Cost: add. (68214->665), mult. (148948->810), div. (0->0), fcn. (102622->8), ass. (0->438)
t1380 = sin(pkin(8));
t1381 = cos(pkin(8));
t1383 = sin(qJ(2));
t1480 = qJD(1) * t1383;
t1340 = -t1381 * qJD(2) + t1380 * t1480;
t1341 = qJD(2) * t1380 + t1381 * t1480;
t1382 = sin(qJ(4));
t1385 = cos(qJ(4));
t1297 = -t1340 * t1382 + t1341 * t1385;
t1294 = t1297 ^ 2;
t1386 = cos(qJ(2));
t1479 = qJD(1) * t1386;
t1369 = -qJD(4) + t1479;
t1489 = t1369 ^ 2;
t1231 = t1489 + t1294;
t1372 = qJD(2) * t1480;
t1439 = t1386 * qJDD(1);
t1348 = -t1372 + t1439;
t1342 = -qJDD(4) + t1348;
t1295 = t1385 * t1340 + t1341 * t1382;
t1457 = t1297 * t1295;
t1503 = -t1457 + t1342;
t1466 = t1503 * t1382;
t1150 = -t1231 * t1385 + t1466;
t1465 = t1503 * t1385;
t1152 = t1231 * t1382 + t1465;
t1092 = t1150 * t1380 - t1152 * t1381;
t1433 = qJD(2) * t1479;
t1440 = t1383 * qJDD(1);
t1408 = t1433 + t1440;
t1319 = t1380 * qJDD(2) + t1381 * t1408;
t1392 = t1381 * qJDD(2) - t1380 * t1408;
t1213 = -t1295 * qJD(4) + t1385 * t1319 + t1382 * t1392;
t1458 = t1295 * t1369;
t1506 = t1213 + t1458;
t1060 = t1092 * t1386 - t1383 * t1506;
t1098 = t1150 * t1381 + t1152 * t1380;
t1384 = sin(qJ(1));
t1387 = cos(qJ(1));
t1595 = pkin(5) * (t1060 * t1387 - t1098 * t1384);
t1594 = pkin(5) * (t1060 * t1384 + t1098 * t1387);
t1058 = t1092 * t1383 + t1386 * t1506;
t1593 = pkin(1) * t1058;
t1592 = pkin(6) * t1058;
t1591 = pkin(1) * t1098 + pkin(6) * t1060;
t1429 = -t1319 * t1382 + t1385 * t1392;
t1212 = qJD(4) * t1297 - t1429;
t1282 = t1297 * t1369;
t1507 = t1212 - t1282;
t1123 = -t1507 * t1382 + t1385 * t1506;
t1470 = t1506 * t1382;
t1127 = -t1507 * t1385 - t1470;
t1053 = -t1123 * t1380 + t1127 * t1381;
t1491 = t1295 ^ 2;
t1505 = t1294 - t1491;
t1038 = t1053 * t1386 + t1383 * t1505;
t1049 = t1123 * t1381 + t1127 * t1380;
t1588 = t1038 * t1384 - t1049 * t1387;
t1587 = t1038 * t1387 + t1049 * t1384;
t1271 = t1491 - t1489;
t1165 = t1271 * t1382 - t1465;
t1169 = t1271 * t1385 + t1466;
t1119 = t1165 * t1380 - t1169 * t1381;
t1177 = t1212 + t1282;
t1077 = t1119 * t1386 + t1177 * t1383;
t1114 = t1165 * t1381 + t1169 * t1380;
t1586 = t1077 * t1384 + t1114 * t1387;
t1585 = t1077 * t1387 - t1114 * t1384;
t1583 = pkin(2) * t1098;
t1582 = qJ(3) * t1098;
t1579 = pkin(2) * t1506 + qJ(3) * t1092;
t1036 = t1053 * t1383 - t1386 * t1505;
t1073 = t1119 * t1383 - t1177 * t1386;
t1574 = pkin(3) * t1150;
t1573 = pkin(7) * t1150;
t1572 = pkin(7) * t1152;
t1272 = t1294 - t1489;
t1504 = -t1457 - t1342;
t1464 = t1504 * t1382;
t1536 = -t1385 * t1272 + t1464;
t1214 = t1385 * t1504;
t1537 = t1272 * t1382 + t1214;
t1550 = t1380 * t1537 + t1381 * t1536;
t1502 = -t1458 + t1213;
t1549 = -t1380 * t1536 + t1381 * t1537;
t1563 = t1383 * t1502 + t1386 * t1549;
t1571 = t1384 * t1563 - t1387 * t1550;
t1570 = t1384 * t1550 + t1387 * t1563;
t1501 = -t1489 - t1491;
t1512 = t1385 * t1501 - t1464;
t1515 = t1382 * t1501 + t1214;
t1531 = -t1380 * t1515 + t1381 * t1512;
t1552 = t1383 * t1531 - t1386 * t1507;
t1569 = pkin(1) * t1552;
t1568 = pkin(6) * t1552;
t1530 = t1380 * t1512 + t1381 * t1515;
t1551 = t1383 * t1507 + t1386 * t1531;
t1565 = -pkin(1) * t1530 + pkin(6) * t1551;
t1564 = t1383 * t1549 - t1386 * t1502;
t1562 = pkin(5) * (t1384 * t1551 - t1387 * t1530);
t1561 = pkin(5) * (t1384 * t1530 + t1387 * t1551);
t1559 = pkin(2) * t1530;
t1558 = qJ(3) * t1530;
t1553 = -pkin(2) * t1507 + qJ(3) * t1531;
t1199 = -t1491 - t1294;
t1548 = pkin(2) * t1199;
t1547 = pkin(3) * t1199;
t1546 = pkin(3) * t1515;
t1545 = pkin(7) * t1512;
t1544 = pkin(7) * t1515;
t1543 = qJ(5) * t1506;
t1542 = t1199 * t1383;
t1541 = t1199 * t1386;
t1360 = g(1) * t1387 + g(2) * t1384;
t1388 = qJD(1) ^ 2;
t1333 = -pkin(1) * t1388 + qJDD(1) * pkin(6) - t1360;
t1487 = pkin(2) * t1386;
t1419 = -qJ(3) * t1383 - t1487;
t1346 = t1419 * qJD(1);
t1483 = g(3) * t1386;
t1492 = qJD(2) ^ 2;
t1261 = -qJDD(2) * pkin(2) - t1492 * qJ(3) + (qJD(1) * t1346 + t1333) * t1383 + qJDD(3) + t1483;
t1320 = -pkin(3) * t1479 - pkin(7) * t1341;
t1490 = t1340 ^ 2;
t1190 = -t1392 * pkin(3) - t1490 * pkin(7) + t1320 * t1341 + t1261;
t1538 = t1212 * pkin(4) + t1190 - t1543;
t1406 = (t1295 * t1382 + t1297 * t1385) * t1369;
t1446 = t1369 * t1382;
t1270 = t1297 * t1446;
t1445 = t1369 * t1385;
t1436 = t1295 * t1445;
t1414 = -t1270 + t1436;
t1496 = t1380 * t1414 + t1381 * t1406;
t1495 = -t1380 * t1406 + t1381 * t1414;
t1510 = -t1342 * t1383 + t1386 * t1495;
t1535 = t1384 * t1510 - t1387 * t1496;
t1409 = t1212 * t1382 - t1436;
t1415 = -t1385 * t1212 - t1295 * t1446;
t1493 = t1380 * t1409 + t1381 * t1415;
t1438 = t1383 * t1457;
t1494 = -t1380 * t1415 + t1381 * t1409;
t1511 = t1386 * t1494 - t1438;
t1534 = t1384 * t1511 - t1387 * t1493;
t1533 = t1384 * t1496 + t1387 * t1510;
t1532 = t1384 * t1493 + t1387 * t1511;
t1514 = t1386 * t1342 + t1383 * t1495;
t1437 = t1386 * t1457;
t1513 = t1383 * t1494 + t1437;
t1453 = t1341 * t1340;
t1407 = -t1348 - t1453;
t1509 = t1380 * t1407;
t1508 = t1381 * t1407;
t1452 = t1341 * t1386;
t1326 = qJD(1) * t1452;
t1285 = t1392 - t1326;
t1161 = t1213 * t1382 - t1297 * t1445;
t1162 = t1213 * t1385 + t1270;
t1108 = t1161 * t1381 + t1162 * t1380;
t1111 = -t1161 * t1380 + t1162 * t1381;
t1416 = t1386 * t1111 + t1438;
t1498 = -t1387 * t1108 + t1384 * t1416;
t1497 = t1108 * t1384 + t1387 * t1416;
t1339 = t1341 ^ 2;
t1488 = pkin(2) * t1383;
t1359 = t1384 * g(1) - t1387 * g(2);
t1332 = qJDD(1) * pkin(1) + t1388 * pkin(6) + t1359;
t1347 = 0.2e1 * t1433 + t1440;
t1251 = (-t1348 + t1372) * pkin(2) - t1347 * qJ(3) - t1332;
t1315 = -g(3) * t1383 + t1386 * t1333;
t1262 = -t1492 * pkin(2) + qJDD(2) * qJ(3) + t1346 * t1479 + t1315;
t1186 = 0.2e1 * qJD(3) * t1341 - t1381 * t1251 + t1262 * t1380;
t1432 = t1340 * t1479;
t1418 = -t1319 + t1432;
t1133 = pkin(3) * t1407 + pkin(7) * t1418 - t1186;
t1187 = -0.2e1 * qJD(3) * t1340 + t1380 * t1251 + t1381 * t1262;
t1141 = -t1490 * pkin(3) + pkin(7) * t1392 + t1320 * t1479 + t1187;
t1078 = -t1385 * t1133 + t1141 * t1382;
t1079 = t1382 * t1133 + t1385 * t1141;
t1024 = -t1078 * t1385 + t1079 * t1382;
t1486 = pkin(3) * t1024;
t1171 = t1385 * t1502;
t1178 = (-qJD(4) - t1369) * t1297 + t1429;
t1124 = t1178 * t1382 - t1171;
t1485 = pkin(3) * t1124;
t1484 = pkin(4) * t1385;
t1482 = qJ(5) * t1385;
t1481 = qJD(1) * qJD(2);
t1478 = qJD(5) * t1369;
t1477 = t1024 * t1380;
t1476 = t1024 * t1381;
t1469 = t1502 * t1382;
t1468 = t1190 * t1382;
t1467 = t1190 * t1385;
t1463 = t1261 * t1380;
t1462 = t1261 * t1381;
t1288 = t1348 - t1453;
t1460 = t1288 * t1380;
t1459 = t1288 * t1381;
t1455 = t1332 * t1383;
t1454 = t1332 * t1386;
t1305 = t1347 * t1383;
t1450 = t1348 * t1383;
t1368 = t1386 * t1388 * t1383;
t1355 = -t1368 + qJDD(2);
t1449 = t1355 * t1383;
t1448 = t1355 * t1386;
t1356 = qJDD(2) + t1368;
t1447 = t1356 * t1383;
t1377 = t1383 ^ 2;
t1444 = t1377 * t1388;
t1357 = -0.2e1 * t1478;
t1233 = pkin(4) * t1295 - qJ(5) * t1297;
t1413 = -pkin(4) * t1489 - t1342 * qJ(5) - t1295 * t1233 + t1079;
t1044 = t1357 + t1413;
t1046 = t1342 * pkin(4) - qJ(5) * t1489 + t1233 * t1297 + qJDD(5) + t1078;
t1443 = -pkin(4) * t1046 + qJ(5) * t1044;
t1442 = -pkin(4) * t1502 - qJ(5) * t1177;
t1378 = t1386 ^ 2;
t1441 = t1377 + t1378;
t1435 = t1383 * t1453;
t1434 = t1340 * t1452;
t1431 = -qJ(5) * t1382 - pkin(3);
t1025 = t1078 * t1382 + t1385 * t1079;
t1130 = t1186 * t1380 + t1381 * t1187;
t1314 = t1333 * t1383 + t1483;
t1254 = t1314 * t1383 + t1386 * t1315;
t1428 = -t1359 * t1384 - t1387 * t1360;
t1427 = t1380 * t1432;
t1426 = t1384 * t1368;
t1425 = t1387 * t1368;
t1010 = t1044 * t1382 - t1046 * t1385;
t1424 = pkin(3) * t1010 + t1443;
t1122 = -t1177 * t1382 - t1171;
t1423 = pkin(3) * t1122 + t1442;
t1422 = -t1079 + t1574;
t1352 = qJDD(1) * t1387 - t1384 * t1388;
t1421 = -pkin(5) * t1352 - g(3) * t1384;
t1420 = -pkin(2) * t1261 + qJ(3) * t1130;
t1417 = t1383 * t1111 - t1437;
t1129 = -t1186 * t1381 + t1187 * t1380;
t1253 = t1314 * t1386 - t1315 * t1383;
t1412 = t1359 * t1387 - t1360 * t1384;
t1410 = -t1078 + t1546;
t1405 = pkin(4) * t1231 - qJ(5) * t1503 + t1413;
t1374 = t1378 * t1388;
t1298 = -t1374 - t1490;
t1227 = t1298 * t1381 - t1509;
t1284 = t1326 + t1392;
t1404 = pkin(2) * t1284 + qJ(3) * t1227 - t1462;
t1324 = -t1339 - t1374;
t1242 = -t1324 * t1380 + t1459;
t1287 = t1319 + t1432;
t1403 = -pkin(2) * t1287 + qJ(3) * t1242 + t1463;
t1211 = t1285 * t1381 - t1380 * t1418;
t1277 = t1339 + t1490;
t1402 = pkin(2) * t1277 + qJ(3) * t1211 + t1130;
t1068 = (-pkin(4) * t1369 - 0.2e1 * qJD(5)) * t1297 + t1538;
t1011 = t1044 * t1385 + t1046 * t1382;
t991 = pkin(7) * t1011 + (t1431 - t1484) * t1068;
t994 = -t1010 * t1380 + t1011 * t1381;
t997 = -pkin(7) * t1010 + (pkin(4) * t1382 - t1482) * t1068;
t1401 = -pkin(2) * t1068 + qJ(3) * t994 + t1380 * t997 + t1381 * t991;
t1400 = t1405 - t1574;
t1028 = -pkin(4) * t1199 + t1044;
t1029 = -qJ(5) * t1199 + t1046;
t1126 = -t1177 * t1385 + t1469;
t1000 = pkin(7) * t1126 + t1028 * t1385 + t1029 * t1382 - t1547;
t1004 = -pkin(7) * t1122 - t1028 * t1382 + t1029 * t1385;
t1052 = -t1122 * t1380 + t1126 * t1381;
t1399 = qJ(3) * t1052 + t1000 * t1381 + t1004 * t1380 - t1548;
t1128 = t1178 * t1385 + t1469;
t1007 = pkin(7) * t1128 + t1025 - t1547;
t1012 = -pkin(7) * t1124 - t1024;
t1054 = -t1124 * t1380 + t1128 * t1381;
t1398 = qJ(3) * t1054 + t1007 * t1381 + t1012 * t1380 - t1548;
t1389 = 0.2e1 * qJD(5) * t1297 - t1538;
t1042 = pkin(4) * t1282 + t1389 + t1543;
t1015 = -t1572 + t1042 * t1382 + (pkin(3) + t1484) * t1506;
t1020 = -pkin(4) * t1470 + t1042 * t1385 + t1573;
t1397 = t1015 * t1381 + t1020 * t1380 + t1579;
t1043 = t1389 + (-t1507 + t1282) * pkin(4);
t1017 = t1043 * t1385 + t1431 * t1507 + t1545;
t1023 = -t1043 * t1382 - t1482 * t1507 - t1544;
t1396 = t1017 * t1381 + t1023 * t1380 + t1553;
t1063 = -pkin(3) * t1507 - t1467 + t1545;
t1097 = t1468 - t1544;
t1395 = t1063 * t1381 + t1097 * t1380 + t1553;
t1080 = -pkin(3) * t1506 + t1468 + t1572;
t1120 = t1467 - t1573;
t1394 = t1080 * t1381 + t1120 * t1380 - t1579;
t1003 = t1025 * t1381 - t1477;
t1018 = -pkin(3) * t1190 + pkin(7) * t1025;
t1393 = -pkin(2) * t1190 - pkin(7) * t1477 + qJ(3) * t1003 + t1018 * t1381;
t1391 = pkin(4) * t1504 + qJ(5) * t1501 - t1046;
t1390 = t1391 + t1546;
t1366 = -t1374 - t1492;
t1365 = t1374 - t1492;
t1364 = -t1444 - t1492;
t1363 = -t1444 + t1492;
t1354 = -t1374 + t1444;
t1353 = t1374 + t1444;
t1351 = qJDD(1) * t1384 + t1387 * t1388;
t1350 = t1441 * qJDD(1);
t1349 = -0.2e1 * t1372 + t1439;
t1344 = t1386 * t1356;
t1343 = t1441 * t1481;
t1335 = t1386 * t1348;
t1327 = -pkin(5) * t1351 + g(3) * t1387;
t1323 = -t1339 + t1374;
t1322 = -t1374 + t1490;
t1321 = t1381 * t1326;
t1318 = -t1377 * t1481 + t1386 * t1408;
t1317 = -t1378 * t1481 - t1450;
t1313 = -t1364 * t1383 - t1448;
t1312 = -t1363 * t1383 + t1344;
t1311 = t1366 * t1386 - t1447;
t1310 = t1365 * t1386 - t1449;
t1309 = t1364 * t1386 - t1449;
t1308 = t1363 * t1386 + t1447;
t1307 = t1366 * t1383 + t1344;
t1306 = t1365 * t1383 + t1448;
t1304 = -t1383 * t1433 + t1335;
t1301 = t1339 - t1490;
t1300 = t1349 * t1386 - t1305;
t1299 = t1347 * t1386 + t1349 * t1383;
t1275 = (t1340 * t1381 - t1341 * t1380) * t1479;
t1274 = -t1321 - t1427;
t1269 = -pkin(6) * t1309 - t1454;
t1268 = -pkin(6) * t1307 - t1455;
t1266 = t1319 * t1381 + t1380 * t1326;
t1265 = t1319 * t1380 - t1321;
t1264 = -t1380 * t1392 - t1381 * t1432;
t1263 = t1381 * t1392 - t1427;
t1260 = -pkin(1) * t1309 + t1315;
t1259 = -pkin(1) * t1307 + t1314;
t1250 = pkin(1) * t1349 + pkin(6) * t1311 + t1454;
t1249 = -pkin(1) * t1347 + pkin(6) * t1313 - t1455;
t1246 = t1275 * t1386 - t1450;
t1245 = t1275 * t1383 + t1335;
t1244 = t1322 * t1381 + t1460;
t1243 = -t1323 * t1380 + t1508;
t1241 = t1322 * t1380 - t1459;
t1240 = t1323 * t1381 + t1509;
t1239 = t1324 * t1381 + t1460;
t1232 = pkin(1) * t1332 + pkin(6) * t1254;
t1229 = pkin(1) * t1353 + pkin(6) * t1350 + t1254;
t1226 = t1298 * t1380 + t1508;
t1225 = t1266 * t1386 + t1435;
t1224 = t1264 * t1386 - t1435;
t1223 = t1266 * t1383 - t1434;
t1222 = t1264 * t1383 + t1434;
t1210 = t1284 * t1381 - t1287 * t1380;
t1209 = t1285 * t1380 + t1381 * t1418;
t1208 = t1284 * t1380 + t1287 * t1381;
t1197 = t1244 * t1386 + t1285 * t1383;
t1196 = t1243 * t1386 - t1383 * t1418;
t1195 = t1242 * t1386 + t1287 * t1383;
t1194 = t1244 * t1383 - t1285 * t1386;
t1193 = t1243 * t1383 + t1386 * t1418;
t1192 = t1242 * t1383 - t1287 * t1386;
t1191 = -qJ(3) * t1239 + t1462;
t1189 = t1210 * t1386 + t1301 * t1383;
t1188 = t1210 * t1383 - t1301 * t1386;
t1185 = t1227 * t1386 - t1284 * t1383;
t1184 = t1227 * t1383 + t1284 * t1386;
t1156 = -qJ(3) * t1226 + t1463;
t1155 = t1211 * t1386 - t1277 * t1383;
t1154 = t1211 * t1383 + t1277 * t1386;
t1139 = -pkin(2) * t1239 + t1187;
t1134 = -pkin(2) * t1226 + t1186;
t1105 = -pkin(1) * t1192 - t1403;
t1096 = -pkin(1) * t1184 - t1404;
t1095 = t1130 * t1386 + t1261 * t1383;
t1094 = t1130 * t1383 - t1261 * t1386;
t1089 = -qJ(3) * t1209 - t1129;
t1062 = -pkin(6) * t1192 - t1139 * t1383 + t1191 * t1386;
t1057 = -pkin(6) * t1184 - t1134 * t1383 + t1156 * t1386;
t1056 = -pkin(1) * t1239 + pkin(6) * t1195 + t1139 * t1386 + t1191 * t1383;
t1055 = -pkin(1) * t1154 - t1402;
t1050 = t1124 * t1381 + t1128 * t1380;
t1048 = t1122 * t1381 + t1126 * t1380;
t1040 = -pkin(1) * t1226 + pkin(6) * t1185 + t1134 * t1386 + t1156 * t1383;
t1039 = -pkin(6) * t1154 + t1089 * t1386 + t1209 * t1488;
t1034 = -pkin(1) * t1094 - t1420;
t1033 = t1054 * t1386 + t1542;
t1032 = t1052 * t1386 + t1542;
t1031 = t1054 * t1383 - t1541;
t1030 = t1052 * t1383 - t1541;
t1027 = pkin(6) * t1155 + t1089 * t1383 + (-pkin(1) - t1487) * t1209;
t1026 = -pkin(2) * t1050 - t1485;
t1022 = -t1422 - t1583;
t1021 = -pkin(6) * t1094 + (-qJ(3) * t1386 + t1488) * t1129;
t1019 = -t1410 - t1559;
t1016 = -t1080 * t1380 + t1120 * t1381 - t1582;
t1014 = -pkin(2) * t1048 - t1423;
t1013 = -t1063 * t1380 + t1097 * t1381 - t1558;
t1009 = -t1390 - t1559;
t1008 = pkin(6) * t1095 + (-pkin(1) + t1419) * t1129;
t1006 = -t1400 + 0.2e1 * t1478 + t1583;
t1005 = -t1394 + t1593;
t1002 = t1025 * t1380 + t1476;
t1001 = -t1395 - t1569;
t999 = t1003 * t1386 + t1190 * t1383;
t998 = t1003 * t1383 - t1190 * t1386;
t996 = -t1017 * t1380 + t1023 * t1381 - t1558;
t995 = -t1015 * t1380 + t1020 * t1381 + t1582;
t993 = t1010 * t1381 + t1011 * t1380;
t992 = t1016 * t1386 - t1022 * t1383 + t1592;
t990 = t1013 * t1386 - t1019 * t1383 - t1568;
t989 = -pkin(2) * t1002 - t1486;
t988 = t1016 * t1383 + t1022 * t1386 - t1591;
t987 = t1068 * t1383 + t1386 * t994;
t986 = -t1068 * t1386 + t1383 * t994;
t985 = -t1396 - t1569;
t984 = -t1397 - t1593;
t983 = t1013 * t1383 + t1019 * t1386 + t1565;
t982 = -qJ(3) * t1050 - t1007 * t1380 + t1012 * t1381;
t981 = -pkin(7) * t1476 - qJ(3) * t1002 - t1018 * t1380;
t980 = -pkin(1) * t1031 - t1398;
t979 = -t1009 * t1383 + t1386 * t996 - t1568;
t978 = -qJ(3) * t1048 - t1000 * t1380 + t1004 * t1381;
t977 = -t1006 * t1383 + t1386 * t995 - t1592;
t976 = t1009 * t1386 + t1383 * t996 + t1565;
t975 = t1006 * t1386 + t1383 * t995 + t1591;
t974 = -pkin(6) * t1031 - t1026 * t1383 + t1386 * t982;
t973 = -pkin(2) * t993 - t1424;
t972 = -pkin(1) * t1030 - t1399;
t971 = -pkin(1) * t1050 + pkin(6) * t1033 + t1026 * t1386 + t1383 * t982;
t970 = -pkin(1) * t998 - t1393;
t969 = -pkin(6) * t1030 - t1014 * t1383 + t1386 * t978;
t968 = -pkin(1) * t1048 + pkin(6) * t1032 + t1014 * t1386 + t1383 * t978;
t967 = -qJ(3) * t993 - t1380 * t991 + t1381 * t997;
t966 = -pkin(6) * t998 - t1383 * t989 + t1386 * t981;
t965 = -pkin(1) * t1002 + pkin(6) * t999 + t1383 * t981 + t1386 * t989;
t964 = -pkin(1) * t986 - t1401;
t963 = -pkin(6) * t986 - t1383 * t973 + t1386 * t967;
t962 = -pkin(1) * t993 + pkin(6) * t987 + t1383 * t967 + t1386 * t973;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1352, 0, -t1351, 0, t1421, -t1327, -t1412, -pkin(5) * t1412, t1318 * t1387 - t1426, t1300 * t1387 + t1354 * t1384, t1312 * t1387 + t1384 * t1440, t1317 * t1387 + t1426, t1310 * t1387 + t1384 * t1439, qJDD(2) * t1384 + t1343 * t1387, t1387 * t1268 - t1384 * t1259 - pkin(5) * (t1311 * t1384 + t1349 * t1387), t1387 * t1269 - t1384 * t1260 - pkin(5) * (t1313 * t1384 - t1347 * t1387), t1387 * t1253 - pkin(5) * (t1350 * t1384 + t1353 * t1387), -pkin(5) * (t1254 * t1384 + t1332 * t1387) - (pkin(1) * t1384 - pkin(6) * t1387) * t1253, t1225 * t1387 + t1265 * t1384, t1189 * t1387 + t1208 * t1384, t1196 * t1387 + t1240 * t1384, t1224 * t1387 + t1263 * t1384, t1197 * t1387 + t1241 * t1384, t1246 * t1387 - t1274 * t1384, t1387 * t1057 - t1384 * t1096 - pkin(5) * (t1185 * t1384 - t1226 * t1387), t1387 * t1062 - t1384 * t1105 - pkin(5) * (t1195 * t1384 - t1239 * t1387), t1387 * t1039 - t1384 * t1055 - pkin(5) * (t1155 * t1384 - t1209 * t1387), t1387 * t1021 - t1384 * t1034 - pkin(5) * (t1095 * t1384 - t1129 * t1387), t1497, t1587, t1570, t1532, -t1585, t1533, -t1384 * t1001 + t1387 * t990 - t1562, -t1384 * t1005 + t1387 * t992 + t1594, t1387 * t974 - t1384 * t980 - pkin(5) * (t1033 * t1384 - t1050 * t1387), t1387 * t966 - t1384 * t970 - pkin(5) * (-t1002 * t1387 + t1384 * t999), t1497, t1570, -t1587, t1533, t1585, t1532, -t1384 * t985 + t1387 * t979 - t1562, t1387 * t969 - t1384 * t972 - pkin(5) * (t1032 * t1384 - t1048 * t1387), -t1384 * t984 + t1387 * t977 - t1594, t1387 * t963 - t1384 * t964 - pkin(5) * (t1384 * t987 - t1387 * t993); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1351, 0, t1352, 0, t1327, t1421, t1428, pkin(5) * t1428, t1318 * t1384 + t1425, t1300 * t1384 - t1354 * t1387, t1312 * t1384 - t1387 * t1440, t1317 * t1384 - t1425, t1310 * t1384 - t1387 * t1439, -qJDD(2) * t1387 + t1343 * t1384, t1384 * t1268 + t1387 * t1259 + pkin(5) * (t1311 * t1387 - t1349 * t1384), t1384 * t1269 + t1387 * t1260 + pkin(5) * (t1313 * t1387 + t1347 * t1384), t1384 * t1253 + pkin(5) * (t1350 * t1387 - t1353 * t1384), pkin(5) * (t1254 * t1387 - t1332 * t1384) - (-pkin(1) * t1387 - pkin(6) * t1384) * t1253, t1225 * t1384 - t1265 * t1387, t1189 * t1384 - t1208 * t1387, t1196 * t1384 - t1240 * t1387, t1224 * t1384 - t1263 * t1387, t1197 * t1384 - t1241 * t1387, t1246 * t1384 + t1274 * t1387, t1384 * t1057 + t1387 * t1096 + pkin(5) * (t1185 * t1387 + t1226 * t1384), t1384 * t1062 + t1387 * t1105 + pkin(5) * (t1195 * t1387 + t1239 * t1384), t1384 * t1039 + t1387 * t1055 + pkin(5) * (t1155 * t1387 + t1209 * t1384), t1384 * t1021 + t1387 * t1034 + pkin(5) * (t1095 * t1387 + t1129 * t1384), t1498, t1588, t1571, t1534, -t1586, t1535, t1387 * t1001 + t1384 * t990 + t1561, t1387 * t1005 + t1384 * t992 - t1595, t1384 * t974 + t1387 * t980 + pkin(5) * (t1033 * t1387 + t1050 * t1384), t1384 * t966 + t1387 * t970 + pkin(5) * (t1002 * t1384 + t1387 * t999), t1498, t1571, -t1588, t1535, t1586, t1534, t1384 * t979 + t1387 * t985 + t1561, t1384 * t969 + t1387 * t972 + pkin(5) * (t1032 * t1387 + t1048 * t1384), t1384 * t977 + t1387 * t984 + t1595, t1384 * t963 + t1387 * t964 + pkin(5) * (t1384 * t993 + t1387 * t987); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1359, t1360, 0, 0, t1305, t1299, t1308, t1304, t1306, 0, t1250, t1249, t1229, t1232, t1223, t1188, t1193, t1222, t1194, t1245, t1040, t1056, t1027, t1008, t1417, t1036, t1564, t1513, -t1073, t1514, t983, t988, t971, t965, t1417, t1564, -t1036, t1514, t1073, t1513, t976, t968, t975, t962; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1388, 0, 0, -g(3), -t1359, 0, t1318, t1300, t1312, t1317, t1310, t1343, t1268, t1269, t1253, pkin(6) * t1253, t1225, t1189, t1196, t1224, t1197, t1246, t1057, t1062, t1039, t1021, t1416, t1038, t1563, t1511, -t1077, t1510, t990, t992, t974, t966, t1416, t1563, -t1038, t1510, t1077, t1511, t979, t969, t977, t963; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1388, 0, qJDD(1), 0, g(3), 0, -t1360, 0, t1368, -t1354, -t1440, -t1368, -t1439, -qJDD(2), t1259, t1260, 0, pkin(1) * t1253, -t1265, -t1208, -t1240, -t1263, -t1241, t1274, t1096, t1105, t1055, t1034, -t1108, -t1049, -t1550, -t1493, -t1114, -t1496, t1001, t1005, t980, t970, -t1108, -t1550, t1049, -t1496, t1114, -t1493, t985, t972, t984, t964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1359, t1360, 0, 0, t1305, t1299, t1308, t1304, t1306, 0, t1250, t1249, t1229, t1232, t1223, t1188, t1193, t1222, t1194, t1245, t1040, t1056, t1027, t1008, t1417, t1036, t1564, t1513, -t1073, t1514, t983, t988, t971, t965, t1417, t1564, -t1036, t1514, t1073, t1513, t976, t968, t975, t962; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1408, t1349, t1356, -t1433, t1365, t1433, 0, -t1332, t1314, 0, t1266, t1210, t1243, t1264, t1244, t1275, t1156, t1191, t1089, -qJ(3) * t1129, t1111, t1053, t1549, t1494, -t1119, t1495, t1013, t1016, t982, t981, t1111, t1549, -t1053, t1495, t1119, t1494, t996, t978, t995, t967; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1372, t1347, t1363, t1348, t1355, -t1372, t1332, 0, t1315, 0, -t1453, -t1301, t1418, t1453, -t1285, t1348, t1134, t1139, -pkin(2) * t1209, -pkin(2) * t1129, -t1457, -t1505, -t1502, t1457, t1177, t1342, t1019, t1022, t1026, t989, -t1457, -t1502, t1505, t1342, -t1177, t1457, t1009, t1014, t1006, t973; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1368, t1354, t1440, t1368, t1439, qJDD(2), -t1314, -t1315, 0, 0, t1265, t1208, t1240, t1263, t1241, -t1274, t1404, t1403, t1402, t1420, t1108, t1049, t1550, t1493, t1114, t1496, t1395, t1394, t1398, t1393, t1108, t1550, -t1049, t1496, -t1114, t1493, t1396, t1399, t1397, t1401; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1319, t1284, t1407, -t1432, t1322, t1432, 0, t1261, t1186, 0, t1162, t1127, t1537, t1409, t1169, t1414, t1097, t1120, t1012, -pkin(7) * t1024, t1162, t1537, -t1127, t1414, -t1169, t1409, t1023, t1004, t1020, t997; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1326, t1287, t1323, t1392, -t1288, t1326, -t1261, 0, t1187, 0, t1161, t1123, t1536, t1415, t1165, t1406, t1063, t1080, t1007, t1018, t1161, t1536, -t1123, t1406, -t1165, t1415, t1017, t1000, t1015, t991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1453, t1301, -t1418, -t1453, t1285, -t1348, -t1186, -t1187, 0, 0, t1457, t1505, t1502, -t1457, -t1177, -t1342, t1410, t1422, t1485, t1486, t1457, t1502, -t1505, -t1342, t1177, -t1457, t1390, t1423, t1357 + t1400, t1424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1213, -t1507, t1504, -t1458, t1271, t1458, 0, t1190, t1078, 0, t1213, t1504, t1507, t1458, -t1271, -t1458, -qJ(5) * t1507, t1029, t1042, -qJ(5) * t1068; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1282, t1506, -t1272, -t1212, -t1503, t1282, -t1190, 0, t1079, 0, -t1282, -t1272, -t1506, t1282, t1503, -t1212, t1043, t1028, pkin(4) * t1506, -pkin(4) * t1068; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1457, t1505, t1502, -t1457, -t1177, -t1342, -t1078, -t1079, 0, 0, t1457, t1502, -t1505, -t1342, t1177, -t1457, t1391, t1442, t1357 + t1405, t1443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1213, t1504, t1507, t1458, -t1271, -t1458, 0, t1046, -t1068, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1457, t1502, -t1505, -t1342, t1177, -t1457, -t1046, 0, t1044, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1282, t1272, t1506, -t1282, -t1503, t1212, t1068, -t1044, 0, 0;];
m_new_reg = t1;
