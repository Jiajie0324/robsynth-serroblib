% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRPRP9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:08
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRPRP9_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP9_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP9_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRP9_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRP9_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP9_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:08:27
% EndTime: 2019-12-31 20:08:31
% DurationCPUTime: 4.01s
% Computational Cost: add. (11805->236), mult. (25864->276), div. (0->0), fcn. (17731->8), ass. (0->160)
t1770 = sin(qJ(2));
t1797 = qJD(1) * t1770;
t1760 = qJD(2) * t1797;
t1773 = cos(qJ(2));
t1787 = t1773 * qJDD(1);
t1783 = -t1760 + t1787;
t1782 = -qJDD(4) + t1783;
t1767 = sin(pkin(8));
t1768 = cos(pkin(8));
t1739 = -t1768 * qJD(2) + t1767 * t1797;
t1740 = t1767 * qJD(2) + t1768 * t1797;
t1769 = sin(qJ(4));
t1772 = cos(qJ(4));
t1715 = t1772 * t1739 + t1769 * t1740;
t1717 = -t1769 * t1739 + t1772 * t1740;
t1795 = t1717 * t1715;
t1681 = t1782 - t1795;
t1714 = t1717 ^ 2;
t1790 = t1773 * qJD(1);
t1758 = qJD(4) - t1790;
t1800 = t1758 ^ 2;
t1807 = -t1714 - t1800;
t1653 = t1769 * t1681 + t1772 * t1807;
t1655 = t1772 * t1681 - t1769 * t1807;
t1631 = t1767 * t1653 - t1768 * t1655;
t1786 = qJD(2) * t1790;
t1788 = t1770 * qJDD(1);
t1743 = t1786 + t1788;
t1727 = t1767 * qJDD(2) + t1768 * t1743;
t1781 = t1768 * qJDD(2) - t1767 * t1743;
t1778 = -t1715 * qJD(4) + t1772 * t1727 + t1769 * t1781;
t1796 = t1715 * t1758;
t1777 = t1778 - t1796;
t1620 = t1773 * t1631 - t1770 * t1777;
t1635 = t1768 * t1653 + t1767 * t1655;
t1771 = sin(qJ(1));
t1774 = cos(qJ(1));
t1829 = t1771 * t1620 + t1774 * t1635;
t1828 = t1774 * t1620 - t1771 * t1635;
t1618 = t1770 * t1631 + t1773 * t1777;
t1682 = t1782 + t1795;
t1689 = t1715 ^ 2;
t1806 = -t1800 - t1689;
t1812 = t1769 * t1682 + t1772 * t1806;
t1813 = -t1772 * t1682 + t1769 * t1806;
t1815 = -t1767 * t1813 + t1768 * t1812;
t1825 = t1770 * t1815;
t1814 = t1767 * t1812 + t1768 * t1813;
t1824 = t1771 * t1814;
t1823 = t1773 * t1815;
t1822 = t1774 * t1814;
t1666 = t1778 + t1796;
t1784 = t1769 * t1727 - t1772 * t1781;
t1779 = (-qJD(4) + t1758) * t1717 - t1784;
t1804 = t1769 * t1666 + t1772 * t1779;
t1805 = -t1772 * t1666 + t1769 * t1779;
t1810 = t1767 * t1804 + t1768 * t1805;
t1675 = t1714 + t1689;
t1811 = -t1767 * t1805 + t1768 * t1804;
t1816 = -t1770 * t1675 + t1773 * t1811;
t1821 = t1771 * t1816 - t1774 * t1810;
t1820 = t1771 * t1810 + t1774 * t1816;
t1817 = t1773 * t1675 + t1770 * t1811;
t1731 = t1739 * t1790;
t1710 = -t1727 + t1731;
t1803 = qJD(2) ^ 2;
t1802 = t1739 ^ 2;
t1801 = t1740 ^ 2;
t1799 = -2 * qJD(3);
t1798 = t1773 * g(3);
t1794 = t1740 * t1739;
t1765 = t1773 ^ 2;
t1775 = qJD(1) ^ 2;
t1793 = t1765 * t1775;
t1751 = t1771 * g(1) - t1774 * g(2);
t1734 = qJDD(1) * pkin(1) + t1775 * pkin(6) + t1751;
t1693 = (-t1743 - t1786) * qJ(3) + (-t1783 + t1760) * pkin(2) - t1734;
t1752 = -t1774 * g(1) - t1771 * g(2);
t1735 = -t1775 * pkin(1) + qJDD(1) * pkin(6) + t1752;
t1725 = -t1770 * g(3) + t1773 * t1735;
t1741 = (-t1773 * pkin(2) - qJ(3) * t1770) * qJD(1);
t1700 = -t1803 * pkin(2) + qJDD(2) * qJ(3) + t1741 * t1790 + t1725;
t1670 = t1767 * t1693 + t1768 * t1700 + t1739 * t1799;
t1728 = -pkin(3) * t1790 - t1740 * pkin(7);
t1648 = -t1802 * pkin(3) + t1781 * pkin(7) + t1728 * t1790 + t1670;
t1669 = t1768 * t1693 - t1767 * t1700 + t1740 * t1799;
t1712 = -t1783 - t1794;
t1776 = t1712 * pkin(3) + t1710 * pkin(7) + t1669;
t1628 = t1772 * t1648 + t1769 * t1776;
t1764 = t1770 ^ 2;
t1789 = t1764 + t1765;
t1785 = t1740 * t1790;
t1627 = -t1769 * t1648 + t1772 * t1776;
t1780 = -t1717 * qJD(4) - t1784;
t1699 = t1798 + qJDD(3) - t1803 * qJ(3) - qJDD(2) * pkin(2) + (qJD(1) * t1741 + t1735) * t1770;
t1671 = -t1781 * pkin(3) - t1802 * pkin(7) + t1740 * t1728 + t1699;
t1757 = t1773 * t1775 * t1770;
t1755 = -t1793 - t1803;
t1754 = -t1764 * t1775 - t1803;
t1750 = -qJDD(2) + t1757;
t1749 = qJDD(2) + t1757;
t1748 = t1789 * t1775;
t1747 = -t1771 * qJDD(1) - t1774 * t1775;
t1746 = t1774 * qJDD(1) - t1771 * t1775;
t1745 = t1789 * qJDD(1);
t1744 = -0.2e1 * t1760 + t1787;
t1742 = 0.2e1 * t1786 + t1788;
t1729 = -t1793 - t1801;
t1724 = -t1770 * t1735 - t1798;
t1723 = t1773 * t1750 - t1770 * t1754;
t1722 = -t1770 * t1749 + t1773 * t1755;
t1721 = t1770 * t1750 + t1773 * t1754;
t1720 = t1773 * t1749 + t1770 * t1755;
t1718 = -t1793 - t1802;
t1711 = t1783 - t1794;
t1709 = t1727 + t1731;
t1708 = t1781 - t1785;
t1707 = -t1781 - t1785;
t1702 = -t1801 - t1802;
t1695 = -t1770 * t1724 + t1773 * t1725;
t1694 = t1773 * t1724 + t1770 * t1725;
t1691 = t1768 * t1711 - t1767 * t1729;
t1690 = t1767 * t1711 + t1768 * t1729;
t1688 = t1715 * pkin(4) - t1717 * qJ(5);
t1685 = -t1767 * t1712 + t1768 * t1718;
t1684 = t1768 * t1712 + t1767 * t1718;
t1679 = t1768 * t1708 - t1767 * t1710;
t1678 = t1767 * t1708 + t1768 * t1710;
t1673 = t1773 * t1691 + t1770 * t1709;
t1672 = t1770 * t1691 - t1773 * t1709;
t1668 = t1773 * t1685 + t1770 * t1707;
t1667 = t1770 * t1685 - t1773 * t1707;
t1661 = (qJD(4) + t1758) * t1717 + t1784;
t1660 = t1758 * t1717 - t1780;
t1658 = t1773 * t1679 + t1770 * t1702;
t1657 = t1770 * t1679 - t1773 * t1702;
t1644 = -t1767 * t1669 + t1768 * t1670;
t1643 = t1768 * t1669 + t1767 * t1670;
t1634 = t1773 * t1644 + t1770 * t1699;
t1633 = t1770 * t1644 - t1773 * t1699;
t1626 = -t1780 * pkin(4) + (pkin(4) * t1758 - (2 * qJD(5))) * t1717 + t1671 - t1777 * qJ(5);
t1625 = t1770 * t1660 + t1823;
t1623 = -t1773 * t1660 + t1825;
t1621 = t1770 * t1661 + t1823;
t1619 = -t1773 * t1661 + t1825;
t1613 = t1782 * pkin(4) - qJ(5) * t1800 + t1717 * t1688 + qJDD(5) - t1627;
t1612 = -pkin(4) * t1800 - t1782 * qJ(5) + 0.2e1 * qJD(5) * t1758 - t1715 * t1688 + t1628;
t1607 = -t1769 * t1627 + t1772 * t1628;
t1606 = t1772 * t1627 + t1769 * t1628;
t1605 = t1772 * t1612 + t1769 * t1613;
t1604 = t1769 * t1612 - t1772 * t1613;
t1603 = -t1767 * t1606 + t1768 * t1607;
t1602 = t1768 * t1606 + t1767 * t1607;
t1601 = t1773 * t1603 + t1770 * t1671;
t1600 = t1770 * t1603 - t1773 * t1671;
t1599 = -t1767 * t1604 + t1768 * t1605;
t1598 = t1768 * t1604 + t1767 * t1605;
t1597 = t1773 * t1599 + t1770 * t1626;
t1596 = t1770 * t1599 - t1773 * t1626;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1747, -t1746, 0, -t1771 * t1751 + t1774 * t1752, 0, 0, 0, 0, 0, 0, t1774 * t1722 - t1771 * t1744, t1774 * t1723 + t1771 * t1742, t1774 * t1745 - t1771 * t1748, t1774 * t1695 - t1771 * t1734, 0, 0, 0, 0, 0, 0, t1774 * t1668 + t1771 * t1684, t1774 * t1673 + t1771 * t1690, t1774 * t1658 + t1771 * t1678, t1774 * t1634 + t1771 * t1643, 0, 0, 0, 0, 0, 0, t1774 * t1621 + t1824, -t1828, t1820, t1774 * t1601 + t1771 * t1602, 0, 0, 0, 0, 0, 0, t1774 * t1625 + t1824, t1820, t1828, t1774 * t1597 + t1771 * t1598; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1746, t1747, 0, t1774 * t1751 + t1771 * t1752, 0, 0, 0, 0, 0, 0, t1771 * t1722 + t1774 * t1744, t1771 * t1723 - t1774 * t1742, t1771 * t1745 + t1774 * t1748, t1771 * t1695 + t1774 * t1734, 0, 0, 0, 0, 0, 0, t1771 * t1668 - t1774 * t1684, t1771 * t1673 - t1774 * t1690, t1771 * t1658 - t1774 * t1678, t1771 * t1634 - t1774 * t1643, 0, 0, 0, 0, 0, 0, t1771 * t1621 - t1822, -t1829, t1821, t1771 * t1601 - t1774 * t1602, 0, 0, 0, 0, 0, 0, t1771 * t1625 - t1822, t1821, t1829, t1771 * t1597 - t1774 * t1598; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1720, t1721, 0, t1694, 0, 0, 0, 0, 0, 0, t1667, t1672, t1657, t1633, 0, 0, 0, 0, 0, 0, t1619, -t1618, t1817, t1600, 0, 0, 0, 0, 0, 0, t1623, t1817, t1618, t1596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1775, -qJDD(1), 0, t1752, 0, 0, 0, 0, 0, 0, t1722, t1723, t1745, t1695, 0, 0, 0, 0, 0, 0, t1668, t1673, t1658, t1634, 0, 0, 0, 0, 0, 0, t1621, -t1620, t1816, t1601, 0, 0, 0, 0, 0, 0, t1625, t1816, t1620, t1597; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1775, 0, t1751, 0, 0, 0, 0, 0, 0, t1744, -t1742, t1748, t1734, 0, 0, 0, 0, 0, 0, -t1684, -t1690, -t1678, -t1643, 0, 0, 0, 0, 0, 0, -t1814, -t1635, -t1810, -t1602, 0, 0, 0, 0, 0, 0, -t1814, -t1810, t1635, -t1598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1720, t1721, 0, t1694, 0, 0, 0, 0, 0, 0, t1667, t1672, t1657, t1633, 0, 0, 0, 0, 0, 0, t1619, -t1618, t1817, t1600, 0, 0, 0, 0, 0, 0, t1623, t1817, t1618, t1596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1755, t1750, t1787, t1725, 0, 0, 0, 0, 0, 0, t1685, t1691, t1679, t1644, 0, 0, 0, 0, 0, 0, t1815, -t1631, t1811, t1603, 0, 0, 0, 0, 0, 0, t1815, t1811, t1631, t1599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1749, t1754, -t1788, t1724, 0, 0, 0, 0, 0, 0, -t1707, -t1709, -t1702, -t1699, 0, 0, 0, 0, 0, 0, -t1661, -t1777, t1675, -t1671, 0, 0, 0, 0, 0, 0, -t1660, t1675, t1777, -t1626; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1744, t1742, -t1748, -t1734, 0, 0, 0, 0, 0, 0, t1684, t1690, t1678, t1643, 0, 0, 0, 0, 0, 0, t1814, t1635, t1810, t1602, 0, 0, 0, 0, 0, 0, t1814, t1810, -t1635, t1598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1718, t1711, t1708, t1670, 0, 0, 0, 0, 0, 0, t1812, t1655, t1804, t1607, 0, 0, 0, 0, 0, 0, t1812, t1804, -t1655, t1605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1712, t1729, t1710, t1669, 0, 0, 0, 0, 0, 0, t1813, t1653, t1805, t1606, 0, 0, 0, 0, 0, 0, t1813, t1805, -t1653, t1604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1707, t1709, t1702, t1699, 0, 0, 0, 0, 0, 0, t1661, t1777, -t1675, t1671, 0, 0, 0, 0, 0, 0, t1660, -t1675, -t1777, t1626; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1806, t1681, t1779, t1628, 0, 0, 0, 0, 0, 0, t1806, t1779, -t1681, t1612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1682, t1807, -t1666, t1627, 0, 0, 0, 0, 0, 0, -t1682, -t1666, -t1807, -t1613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1661, t1777, -t1675, t1671, 0, 0, 0, 0, 0, 0, t1660, -t1675, -t1777, t1626; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1806, t1779, -t1681, t1612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1660, -t1675, -t1777, t1626; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1682, t1666, t1807, t1613;];
f_new_reg = t1;
