% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,theta3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:08
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRP9_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRP9_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRP9_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRPRP9_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:07:31
% EndTime: 2019-12-31 20:07:41
% DurationCPUTime: 4.08s
% Computational Cost: add. (4836->402), mult. (10443->527), div. (0->0), fcn. (10668->6), ass. (0->287)
t241 = sin(pkin(8));
t382 = cos(qJ(4));
t299 = t382 * t241;
t242 = cos(pkin(8));
t243 = sin(qJ(4));
t349 = t243 * t242;
t207 = t299 + t349;
t197 = t207 * qJD(4);
t245 = cos(qJ(2));
t255 = t349 / 0.2e1 + t299 / 0.2e1;
t388 = -t207 / 0.2e1;
t250 = (t388 + t255) * t245;
t397 = t250 * qJD(1);
t401 = t197 + t397;
t187 = t207 * t245;
t244 = sin(qJ(2));
t298 = t382 * t242;
t350 = t243 * t241;
t262 = t298 - t350;
t188 = t262 * t244;
t311 = t245 * qJD(1);
t169 = t188 * t311;
t400 = -qJD(2) * t250 - t188 * qJD(4) + t169;
t196 = t262 * qJD(4);
t256 = t350 / 0.2e1 - t298 / 0.2e1;
t390 = t262 / 0.2e1;
t118 = (t390 + t256) * t245;
t326 = t118 * qJD(1);
t399 = t326 - t196;
t398 = qJD(3) * t250;
t219 = t244 * pkin(2) - t245 * qJ(3);
t354 = t241 * t244;
t226 = pkin(6) * t354;
t180 = t242 * t219 + t226;
t352 = t242 * t245;
t142 = t244 * pkin(3) - pkin(7) * t352 + t180;
t130 = t243 * t142;
t234 = t244 * pkin(6);
t181 = t241 * t219 - t242 * t234;
t353 = t241 * t245;
t157 = -pkin(7) * t353 + t181;
t149 = t382 * t157;
t336 = -t130 / 0.2e1 - t149 / 0.2e1;
t301 = t382 * t142;
t351 = t243 * t157;
t335 = t301 / 0.2e1 - t351 / 0.2e1;
t396 = t188 ^ 2;
t201 = t207 ^ 2;
t395 = -pkin(4) / 0.2e1;
t378 = pkin(7) + qJ(3);
t217 = t378 * t242;
t291 = t378 * t241;
t158 = t243 * t217 + t382 * t291;
t394 = -t158 / 0.2e1;
t159 = t382 * t217 - t243 * t291;
t393 = -t159 / 0.2e1;
t185 = t207 * t244;
t392 = -t185 / 0.2e1;
t391 = t188 / 0.2e1;
t389 = -t262 / 0.2e1;
t387 = t207 / 0.2e1;
t230 = -t242 * pkin(3) - pkin(2);
t386 = -t230 / 0.2e1;
t235 = t245 * pkin(6);
t385 = t235 / 0.2e1;
t384 = -t244 / 0.2e1;
t381 = t187 * pkin(4);
t380 = t244 * pkin(4);
t379 = t245 * pkin(2);
t190 = t262 * t245;
t268 = -t187 * qJ(5) / 0.2e1 + t190 * t395;
t227 = pkin(6) * t352;
t284 = -t244 * qJ(3) - t379;
t270 = -pkin(1) + t284;
t171 = t241 * t270 + t227;
t155 = -pkin(7) * t354 + t171;
t287 = -t378 * t244 - pkin(1);
t302 = -t241 * pkin(6) - pkin(3);
t246 = t302 * t245 + (t287 - t379) * t242;
t69 = t243 * t155 - t382 * t246;
t58 = t245 * pkin(4) + t69;
t303 = t69 / 0.2e1 - t58 / 0.2e1;
t300 = t382 * t155;
t57 = t300 + t287 * t349 + (t243 * (-t242 * pkin(2) + t302) - qJ(5)) * t245;
t70 = t243 * t246 + t300;
t304 = t57 / 0.2e1 - t70 / 0.2e1;
t3 = t304 * t207 + t262 * t303 + t268;
t377 = t3 * qJD(1);
t334 = t149 + t130;
t348 = t244 * qJ(5);
t60 = t334 + t348;
t263 = t301 - t351;
t61 = -t263 - t380;
t211 = pkin(3) * t354 + t234;
t283 = t185 * pkin(4) - t188 * qJ(5);
t93 = t283 + t211;
t225 = pkin(3) * t353;
t212 = t235 + t225;
t360 = t190 * qJ(5);
t94 = t212 - t360 + t381;
t5 = t57 * t60 + t58 * t61 + t93 * t94;
t376 = t5 * qJD(1);
t109 = pkin(4) * t188 + t185 * qJ(5);
t6 = t93 * t109 - t57 * t69 + t58 * t70;
t375 = t6 * qJD(1);
t374 = t69 * t245;
t7 = -t60 * t185 - t57 * t187 + t61 * t188 + t58 * t190;
t373 = t7 * qJD(1);
t372 = t70 * t245;
t8 = (-t57 + t70) * t188 + (-t58 + t69) * t185;
t371 = t8 * qJD(1);
t370 = t93 * t188;
t15 = t94 * t188 + t93 * t190 - t57 * t244 + t60 * t245;
t369 = t15 * qJD(1);
t368 = t158 * t244;
t367 = t158 * t245;
t366 = t159 * t244;
t365 = t159 * t245;
t16 = t94 * t185 + t93 * t187 - t58 * t244 + t61 * t245;
t364 = t16 * qJD(1);
t145 = t365 / 0.2e1;
t282 = -pkin(4) * t262 - t207 * qJ(5);
t129 = t230 + t282;
t266 = t129 * t391 + t93 * t387;
t285 = -t380 / 0.2e1 - t335;
t17 = t145 + t266 + t285;
t363 = t17 * qJD(1);
t362 = t188 * t207;
t19 = -t212 * t185 - t211 * t187 + t69 * t244 + t245 * t263;
t361 = t19 * qJD(1);
t20 = t212 * t188 + t211 * t190 - t70 * t244 + t334 * t245;
t359 = t20 * qJD(1);
t358 = t262 * t185;
t21 = t109 * t188 - t93 * t185 - t374;
t357 = t21 * qJD(1);
t22 = t109 * t185 + t370 + t372;
t356 = t22 * qJD(1);
t23 = -t57 * t185 + t58 * t188;
t355 = t23 * qJD(1);
t144 = t367 / 0.2e1;
t264 = -t185 * t386 + t211 * t389;
t27 = t144 + t264 + t336;
t347 = t27 * qJD(1);
t30 = t57 * t245 + t370;
t346 = t30 * qJD(1);
t170 = -pkin(6) * t353 + t242 * t270;
t31 = (t170 * t245 + t180 * t244) * t242 + (t171 * t245 + t181 * t244) * t241;
t345 = t31 * qJD(1);
t32 = -t211 * t185 - t374;
t344 = t32 * qJD(1);
t33 = -t211 * t188 - t372;
t343 = t33 * qJD(1);
t42 = t244 * pkin(6) ^ 2 * t245 + t170 * t180 + t171 * t181;
t342 = t42 * qJD(1);
t54 = -t190 * t185 - t188 * t187;
t341 = t54 * qJD(1);
t340 = t69 * qJD(4);
t81 = -t170 * t244 + (t180 - 0.2e1 * t226) * t245;
t339 = t81 * qJD(1);
t82 = t181 * t245 + (-t171 + 0.2e1 * t227) * t244;
t338 = t82 * qJD(1);
t86 = (t170 * t242 + t171 * t241) * t244;
t337 = t86 * qJD(1);
t222 = t241 ^ 2 + t242 ^ 2;
t333 = qJD(3) * t245;
t105 = t185 * t244 - t187 * t245;
t332 = t105 * qJD(1);
t106 = -t188 * t244 + t190 * t245;
t331 = t106 * qJD(1);
t328 = t187 * qJD(1);
t117 = (t390 - t256) * t245;
t110 = t117 * qJD(1);
t327 = t117 * qJD(3);
t325 = t118 * qJD(3);
t324 = t158 * qJD(4);
t154 = t159 * qJD(4);
t323 = t185 * qJD(3);
t322 = t185 * qJD(4);
t321 = t185 * qJD(5);
t320 = t188 * qJD(1);
t183 = t188 * qJD(3);
t239 = t244 ^ 2;
t204 = t222 * t239;
t319 = t204 * qJD(1);
t318 = t262 * qJD(2);
t317 = t207 * qJD(2);
t316 = t207 * qJD(5);
t315 = t222 * qJD(2);
t240 = t245 ^ 2;
t223 = t240 - t239;
t314 = t223 * qJD(1);
t313 = t244 * qJD(1);
t312 = t244 * qJD(2);
t310 = t245 * qJD(2);
t309 = t245 * qJD(4);
t308 = t245 * qJD(5);
t307 = pkin(1) * t313;
t306 = pkin(1) * t311;
t305 = pkin(6) * t310;
t297 = t244 * t333;
t296 = t245 * t323;
t295 = t185 * t320;
t294 = t262 * t317;
t293 = t244 * t310;
t292 = t244 * t311;
t146 = -t365 / 0.2e1;
t289 = -qJD(2) * t187 - t169;
t168 = t185 * t311;
t78 = t117 * qJD(2) - t168;
t228 = -qJD(4) + t311;
t288 = t335 + t380;
t286 = t348 - t336;
t153 = pkin(4) * t207 - qJ(5) * t262;
t267 = -t109 * t129 / 0.2e1 - t93 * t153 / 0.2e1;
t269 = t60 * qJ(5) / 0.2e1 + t61 * t395;
t1 = t304 * t158 + t303 * t159 + t267 + t269;
t24 = t129 * t153;
t281 = -t1 * qJD(1) + t24 * qJD(2);
t41 = -t129 * t262 - t153 * t207;
t143 = -t367 / 0.2e1;
t247 = t109 * t387 + t129 * t392 + t153 * t391 + t93 * t390;
t9 = t143 + t247 + t286;
t280 = t9 * qJD(1) - t41 * qJD(2);
t248 = t109 * t390 + t153 * t392 - t266;
t11 = t146 + t248 + t288;
t40 = t129 * t207 - t153 * t262;
t279 = -t11 * qJD(1) + t40 * qJD(2);
t249 = -t185 * t393 + t188 * t394 + t58 * t388 + t57 * t389;
t254 = t225 / 0.2e1 + t385 + t381 / 0.2e1 - t360 / 0.2e1;
t13 = t249 + t254;
t51 = t158 * t207 + t159 * t262;
t278 = -t13 * qJD(1) + t51 * qJD(2);
t37 = -t358 - t362;
t184 = t185 ^ 2;
t85 = t184 - t396;
t277 = t85 * qJD(1) + t37 * qJD(2);
t276 = -t180 * t241 + t181 * t242;
t275 = -qJD(1) * t109 - qJD(2) * t153;
t200 = t262 ^ 2;
t108 = t200 - t201;
t274 = t37 * qJD(1) + t108 * qJD(2);
t113 = t184 + t396;
t77 = -t358 + t362;
t273 = t113 * qJD(1) + t77 * qJD(2);
t156 = t200 + t201;
t272 = t77 * qJD(1) + t156 * qJD(2);
t213 = t222 * qJ(3);
t265 = t170 * t241 / 0.2e1 - t171 * t242 / 0.2e1;
t83 = t385 + t265;
t271 = t83 * qJD(1) - t213 * qJD(2);
t125 = -t185 * qJD(1) + t318;
t126 = t317 + t320;
t76 = -t185 * t387 + t188 * t390;
t261 = t76 * qJD(2) - t295;
t67 = t384 - t76;
t260 = t67 * qJD(1) - t294;
t259 = -t76 * qJD(1) - t294;
t252 = t188 * t386 + t211 * t388 + t146;
t26 = t252 + t335;
t258 = -t26 * qJD(1) + t230 * t317;
t257 = t118 * qJD(2) - t168 + t322;
t167 = t240 + t396;
t253 = t167 * qJD(1) + t188 * t317 - t309;
t251 = qJD(2) * t284 + t333;
t231 = t312 / 0.2e1;
t218 = t228 * qJ(5);
t202 = (t311 - qJD(4) / 0.2e1) * t244;
t198 = t207 * qJD(3);
t137 = t188 * t316;
t119 = t187 / 0.2e1 + t255 * t245;
t97 = t201 * qJD(2) + t207 * t320;
t92 = t196 - t110;
t84 = t385 - t265;
t75 = t77 * qJD(3);
t71 = t76 * qJD(4);
t68 = t384 + t76;
t66 = t70 * qJD(4);
t36 = t37 * qJD(4);
t29 = -t252 + t335;
t28 = t143 - t264 + t336;
t18 = t146 - t266 + t285;
t14 = -t249 + t254;
t12 = t145 - t248 + t288;
t10 = t144 - t247 + t286;
t4 = t70 * t387 + t57 * t388 + t69 * t389 + t58 * t390 + t268;
t2 = t69 * t393 + t57 * t394 + t70 * t158 / 0.2e1 + t58 * t159 / 0.2e1 - t267 + t269;
t25 = [0, 0, 0, t293, t223 * qJD(2), 0, 0, 0, -pkin(1) * t312, -pkin(1) * t310, -t81 * qJD(2) + t242 * t297, t82 * qJD(2) - t241 * t297, -t31 * qJD(2) + t204 * qJD(3), t42 * qJD(2) - t86 * qJD(3), (qJD(2) * t190 - t322) * t188, t54 * qJD(2) + t85 * qJD(4), -t106 * qJD(2) + t185 * t309, -t105 * qJD(2) + t188 * t309, -t293, -t19 * qJD(2) - t33 * qJD(4) + t183 * t245, t20 * qJD(2) + t32 * qJD(4) - t296, t16 * qJD(2) + t22 * qJD(4) + (-t321 + t333) * t188, t7 * qJD(2) + t113 * qJD(3) + t8 * qJD(4) + t185 * t308, -t15 * qJD(2) - t21 * qJD(4) + t167 * qJD(5) + t296, t5 * qJD(2) + t23 * qJD(3) + t6 * qJD(4) - t30 * qJD(5); 0, 0, 0, t292, t314, t310, -t312, 0, -t305 - t307, pkin(6) * t312 - t306, -t227 * qJD(2) + t241 * t251 - t339, t241 * t305 + t242 * t251 + t338, qJD(2) * t276 - t345, t342 + (-pkin(2) * t235 + qJ(3) * t276) * qJD(2) + t84 * qJD(3), t126 * t190 + t71, t341 + (-t207 * t187 + t190 * t262) * qJD(2) + t36, -t118 * qJD(4) + t207 * t312 - t331, -qJD(4) * t250 + t262 * t312 - t332, -t202, -t361 + (t230 * t187 - t212 * t262 - t368) * qJD(2) + t187 * qJD(3) + t29 * qJD(4), t359 + (t230 * t190 + t212 * t207 - t366) * qJD(2) + t327 + t28 * qJD(4), t364 + (t129 * t187 - t262 * t94 - t368) * qJD(2) + t119 * qJD(3) + t12 * qJD(4) + t68 * qJD(5), t373 + (t158 * t190 - t159 * t187 + t61 * t207 + t262 * t60) * qJD(2) + t75 + t4 * qJD(4) - t118 * qJD(5), -t369 + (-t129 * t190 - t94 * t207 + t366) * qJD(2) - t327 + t10 * qJD(4) + t137, t376 + (t94 * t129 + t61 * t158 + t60 * t159) * qJD(2) + t14 * qJD(3) + t2 * qJD(4) + t18 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (qJD(2) * t241 + t242 * t313) * t245, (qJD(2) * t242 - t241 * t313) * t245, t319, t84 * qJD(2) - t337, 0, 0, 0, 0, 0, -t289, t78, t119 * qJD(2) + t169, t273, -t78, t14 * qJD(2) + t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, t277, -t257, t400, t231, t29 * qJD(2) - t343 - t66, t28 * qJD(2) + t340 + t344, t12 * qJD(2) + t356 - t66, t4 * qJD(2) + qJD(4) * t283 - t321 + t371, t10 * qJD(2) - t308 - t340 - t357, t375 + t2 * qJD(2) + (-t70 * pkin(4) - t69 * qJ(5)) * qJD(4) + t57 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68 * qJD(2) - t295, -t257, t253, t18 * qJD(2) + t57 * qJD(4) - t346; 0, 0, 0, -t292, -t314, 0, 0, 0, t307, t306, t339, -t338, t345, -t83 * qJD(3) - t342, -t190 * t320 + t71, t36 - t341, -t117 * qJD(4) + t331, qJD(4) * t187 + t332, t202, -t26 * qJD(4) + t361 - t398, -t27 * qJD(4) + t325 - t359, -t11 * qJD(4) - t67 * qJD(5) - t364 - t398, -t3 * qJD(4) - t117 * qJD(5) - t373 + t75, -t9 * qJD(4) + t137 - t325 + t369, -t13 * qJD(3) - t1 * qJD(4) - t17 * qJD(5) - t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222 * qJD(3), t213 * qJD(3), t262 * t197, t108 * qJD(4), 0, 0, 0, t230 * t197, t230 * t196, t40 * qJD(4) + t262 * t316, t156 * qJD(3), t41 * qJD(4) + t201 * qJD(5), t51 * qJD(3) + t24 * qJD(4) - t129 * t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t315, -t271, 0, 0, 0, 0, 0, -t397, t326, -t397, t272, -t326, t278; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259, t274, t92, -t197 + t328, -t313 / 0.2e1, -t154 + t258, t230 * t318 + t324 - t347, -t154 + t279, qJD(4) * t282 + qJD(5) * t262 - t377, -t280 - t324, (-t159 * pkin(4) - t158 * qJ(5)) * qJD(4) + t159 * qJD(5) + t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260, t92, t97, -t129 * t317 + t154 - t363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t242 * t292, t241 * t292, -t319, t83 * qJD(2) + t337, 0, 0, 0, 0, 0, -t400, -t257, -t400, -t273, t257, t13 * qJD(2) + qJD(4) * t109 - t188 * qJD(5) - t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t315, t271, 0, 0, 0, 0, 0, t401, -t399, t401, -t272, t399, qJD(4) * t153 - t278 - t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, t125, t126, 0, -t125, -t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t261, -t277, t78, t289, t231, t26 * qJD(2) - t183 + t343, t27 * qJD(2) + t323 - t344, t11 * qJD(2) - t183 - t356, t3 * qJD(2) - t371, t9 * qJD(2) - t308 - t323 + t357, -qJ(5) * t308 + t1 * qJD(2) - qJD(3) * t109 - t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259, -t274, t110, -t328, t313 / 0.2e1, -t198 - t258, t347 - (qJD(2) * t230 + qJD(3)) * t262, -t198 - t279, t377, qJD(3) * t262 + t280, -qJD(3) * t153 - t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t126, -t125, -t126, 0, t125, t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), qJ(5) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t228, -t218; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67 * qJD(2) + t295, t78, -t253, qJ(5) * t309 + t17 * qJD(2) + t183 + t346; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, t110, -t97, t363 + (qJD(2) * t129 + qJD(3)) * t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, t218; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t25;
