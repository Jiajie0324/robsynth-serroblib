% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5PRRPP3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,theta1,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:14
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5PRRPP3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRPP3_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRPP3_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRPP3_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRPP3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRPP3_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:14:20
% EndTime: 2019-12-05 16:14:23
% DurationCPUTime: 3.06s
% Computational Cost: add. (4555->194), mult. (9844->223), div. (0->0), fcn. (6462->8), ass. (0->131)
t1571 = sin(qJ(3));
t1599 = qJD(2) * t1571;
t1553 = qJD(3) * t1599;
t1573 = cos(qJ(3));
t1585 = t1573 * qJDD(2);
t1580 = -t1553 + t1585;
t1566 = sin(pkin(8));
t1568 = cos(pkin(8));
t1527 = -t1568 * qJD(3) + t1566 * t1599;
t1529 = t1566 * qJD(3) + t1568 * t1599;
t1596 = t1529 * t1527;
t1499 = t1580 - t1596;
t1526 = t1529 ^ 2;
t1562 = t1573 ^ 2;
t1575 = qJD(2) ^ 2;
t1558 = t1562 * t1575;
t1602 = -t1526 - t1558;
t1481 = t1568 * t1499 - t1566 * t1602;
t1598 = qJD(2) * t1573;
t1583 = qJD(3) * t1598;
t1586 = t1571 * qJDD(2);
t1537 = t1583 + t1586;
t1578 = t1566 * qJDD(3) + t1568 * t1537;
t1597 = t1527 * t1573;
t1584 = qJD(2) * t1597;
t1577 = t1578 + t1584;
t1462 = t1573 * t1481 + t1571 * t1577;
t1479 = t1566 * t1499 + t1568 * t1602;
t1572 = sin(qJ(2));
t1574 = cos(qJ(2));
t1445 = t1574 * t1462 + t1572 * t1479;
t1460 = t1571 * t1481 - t1573 * t1577;
t1567 = sin(pkin(7));
t1569 = cos(pkin(7));
t1636 = t1567 * t1445 - t1569 * t1460;
t1635 = t1569 * t1445 + t1567 * t1460;
t1443 = t1572 * t1462 - t1574 * t1479;
t1522 = t1529 * t1598;
t1581 = -t1568 * qJDD(3) + t1566 * t1537;
t1493 = -t1522 + t1581;
t1500 = t1580 + t1596;
t1508 = t1527 ^ 2;
t1604 = -t1508 - t1558;
t1608 = t1566 * t1500 + t1568 * t1604;
t1614 = -t1573 * t1493 + t1571 * t1608;
t1610 = -t1568 * t1500 + t1566 * t1604;
t1613 = t1571 * t1493 + t1573 * t1608;
t1619 = t1572 * t1610 + t1574 * t1613;
t1632 = t1567 * t1619 - t1569 * t1614;
t1492 = t1526 + t1508;
t1497 = t1578 - t1584;
t1603 = -t1522 - t1581;
t1607 = t1566 * t1497 + t1568 * t1603;
t1612 = t1573 * t1492 + t1571 * t1607;
t1609 = -t1568 * t1497 + t1566 * t1603;
t1611 = -t1571 * t1492 + t1573 * t1607;
t1620 = t1572 * t1609 + t1574 * t1611;
t1631 = t1567 * t1620 - t1569 * t1612;
t1630 = t1567 * t1614 + t1569 * t1619;
t1629 = t1567 * t1612 + t1569 * t1620;
t1622 = t1572 * t1611 - t1574 * t1609;
t1621 = t1572 * t1613 - t1574 * t1610;
t1601 = qJD(3) ^ 2;
t1600 = -0.2e1 * t1529;
t1561 = t1571 ^ 2;
t1595 = t1561 * t1575;
t1543 = t1567 * g(1) - t1569 * g(2);
t1592 = t1567 * t1543;
t1544 = -t1569 * g(1) - t1567 * g(2);
t1563 = -g(3) + qJDD(1);
t1518 = t1574 * t1544 + t1572 * t1563;
t1510 = -t1575 * pkin(2) + qJDD(2) * pkin(6) + t1518;
t1588 = t1571 * t1510;
t1488 = t1573 * t1510 - t1571 * t1543;
t1535 = (-pkin(3) * t1573 - qJ(4) * t1571) * qJD(2);
t1478 = -t1601 * pkin(3) + qJDD(3) * qJ(4) + t1535 * t1598 + t1488;
t1517 = -t1572 * t1544 + t1574 * t1563;
t1509 = -qJDD(2) * pkin(2) - t1575 * pkin(6) - t1517;
t1576 = (-t1537 - t1583) * qJ(4) + (-t1580 + t1553) * pkin(3) + t1509;
t1449 = -0.2e1 * qJD(4) * t1527 + t1568 * t1478 + t1566 * t1576;
t1582 = t1566 * t1478 - t1568 * t1576;
t1533 = t1573 * t1543;
t1579 = -qJDD(3) * pkin(3) - t1601 * qJ(4) + qJDD(4) + t1533;
t1549 = t1571 * t1575 * t1573;
t1548 = -t1558 - t1601;
t1547 = -t1595 - t1601;
t1546 = -qJDD(3) + t1549;
t1545 = qJDD(3) + t1549;
t1542 = t1558 + t1595;
t1541 = t1574 * qJDD(2) - t1572 * t1575;
t1540 = -t1572 * qJDD(2) - t1574 * t1575;
t1539 = (t1561 + t1562) * qJDD(2);
t1538 = -0.2e1 * t1553 + t1585;
t1536 = 0.2e1 * t1583 + t1586;
t1530 = t1569 * t1543;
t1514 = t1573 * t1546 - t1571 * t1547;
t1513 = -t1571 * t1545 + t1573 * t1548;
t1512 = t1571 * t1546 + t1573 * t1547;
t1511 = t1573 * t1545 + t1571 * t1548;
t1507 = t1574 * t1539 - t1572 * t1542;
t1506 = t1572 * t1539 + t1574 * t1542;
t1504 = t1527 * pkin(4) - t1529 * qJ(5);
t1490 = t1574 * t1514 + t1572 * t1536;
t1489 = t1574 * t1513 - t1572 * t1538;
t1487 = t1572 * t1514 - t1574 * t1536;
t1486 = t1572 * t1513 + t1574 * t1538;
t1485 = -t1533 - t1588;
t1484 = -t1572 * t1517 + t1574 * t1518;
t1483 = t1574 * t1517 + t1572 * t1518;
t1477 = (qJD(2) * t1535 + t1510) * t1571 + t1579;
t1465 = -t1571 * t1485 + t1573 * t1488;
t1464 = t1573 * t1485 + t1571 * t1488;
t1455 = t1574 * t1465 + t1572 * t1509;
t1454 = t1572 * t1465 - t1574 * t1509;
t1448 = qJD(4) * t1600 - t1582;
t1447 = qJD(5) * t1600 + t1588 - t1578 * qJ(5) + (-qJ(5) * t1597 + t1535 * t1571) * qJD(2) + t1579 + t1493 * pkin(4);
t1438 = qJDD(5) + t1580 * pkin(4) - qJ(5) * t1558 + (0.2e1 * qJD(4) + t1504) * t1529 + t1582;
t1437 = -pkin(4) * t1558 - t1580 * qJ(5) - 0.2e1 * qJD(5) * t1598 - t1527 * t1504 + t1449;
t1432 = -t1566 * t1448 + t1568 * t1449;
t1431 = t1568 * t1448 + t1566 * t1449;
t1430 = t1573 * t1432 + t1571 * t1477;
t1429 = t1571 * t1432 - t1573 * t1477;
t1428 = t1568 * t1437 + t1566 * t1438;
t1427 = t1566 * t1437 - t1568 * t1438;
t1426 = t1573 * t1428 + t1571 * t1447;
t1425 = t1571 * t1428 - t1573 * t1447;
t1424 = t1574 * t1430 + t1572 * t1431;
t1423 = t1572 * t1430 - t1574 * t1431;
t1422 = t1574 * t1426 + t1572 * t1427;
t1421 = t1572 * t1426 - t1574 * t1427;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1569 * t1544 - t1592, 0, 0, 0, 0, 0, 0, t1569 * t1540, -t1569 * t1541, 0, t1569 * t1484 - t1592, 0, 0, 0, 0, 0, 0, t1569 * t1489 + t1567 * t1511, t1569 * t1490 + t1567 * t1512, t1569 * t1507, t1569 * t1455 + t1567 * t1464, 0, 0, 0, 0, 0, 0, t1630, t1635, t1629, t1569 * t1424 + t1567 * t1429, 0, 0, 0, 0, 0, 0, t1630, t1629, -t1635, t1569 * t1422 + t1567 * t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1567 * t1544 + t1530, 0, 0, 0, 0, 0, 0, t1567 * t1540, -t1567 * t1541, 0, t1567 * t1484 + t1530, 0, 0, 0, 0, 0, 0, t1567 * t1489 - t1569 * t1511, t1567 * t1490 - t1569 * t1512, t1567 * t1507, t1567 * t1455 - t1569 * t1464, 0, 0, 0, 0, 0, 0, t1632, t1636, t1631, t1567 * t1424 - t1569 * t1429, 0, 0, 0, 0, 0, 0, t1632, t1631, -t1636, t1567 * t1422 - t1569 * t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1563, 0, 0, 0, 0, 0, 0, t1541, t1540, 0, t1483, 0, 0, 0, 0, 0, 0, t1486, t1487, t1506, t1454, 0, 0, 0, 0, 0, 0, t1621, t1443, t1622, t1423, 0, 0, 0, 0, 0, 0, t1621, t1622, -t1443, t1421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1544, 0, 0, 0, 0, 0, 0, t1540, -t1541, 0, t1484, 0, 0, 0, 0, 0, 0, t1489, t1490, t1507, t1455, 0, 0, 0, 0, 0, 0, t1619, t1445, t1620, t1424, 0, 0, 0, 0, 0, 0, t1619, t1620, -t1445, t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1543, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1543, 0, 0, 0, 0, 0, 0, -t1511, -t1512, 0, -t1464, 0, 0, 0, 0, 0, 0, -t1614, -t1460, -t1612, -t1429, 0, 0, 0, 0, 0, 0, -t1614, -t1612, t1460, -t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1563, 0, 0, 0, 0, 0, 0, t1541, t1540, 0, t1483, 0, 0, 0, 0, 0, 0, t1486, t1487, t1506, t1454, 0, 0, 0, 0, 0, 0, t1621, t1443, t1622, t1423, 0, 0, 0, 0, 0, 0, t1621, t1622, -t1443, t1421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1575, -qJDD(2), 0, t1518, 0, 0, 0, 0, 0, 0, t1513, t1514, t1539, t1465, 0, 0, 0, 0, 0, 0, t1613, t1462, t1611, t1430, 0, 0, 0, 0, 0, 0, t1613, t1611, -t1462, t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1575, 0, t1517, 0, 0, 0, 0, 0, 0, t1538, -t1536, t1542, -t1509, 0, 0, 0, 0, 0, 0, -t1610, -t1479, -t1609, -t1431, 0, 0, 0, 0, 0, 0, -t1610, -t1609, t1479, -t1427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1543, 0, 0, 0, 0, 0, 0, t1511, t1512, 0, t1464, 0, 0, 0, 0, 0, 0, t1614, t1460, t1612, t1429, 0, 0, 0, 0, 0, 0, t1614, t1612, -t1460, t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1548, t1546, t1585, t1488, 0, 0, 0, 0, 0, 0, t1608, t1481, t1607, t1432, 0, 0, 0, 0, 0, 0, t1608, t1607, -t1481, t1428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1545, t1547, -t1586, t1485, 0, 0, 0, 0, 0, 0, -t1493, -t1577, t1492, -t1477, 0, 0, 0, 0, 0, 0, -t1493, t1492, t1577, -t1447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1538, t1536, -t1542, t1509, 0, 0, 0, 0, 0, 0, t1610, t1479, t1609, t1431, 0, 0, 0, 0, 0, 0, t1610, t1609, -t1479, t1427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1604, t1499, t1603, t1449, 0, 0, 0, 0, 0, 0, t1604, t1603, -t1499, t1437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1500, t1602, -t1497, t1448, 0, 0, 0, 0, 0, 0, -t1500, -t1497, -t1602, -t1438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1493, t1577, -t1492, t1477, 0, 0, 0, 0, 0, 0, t1493, -t1492, -t1577, t1447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1604, t1603, -t1499, t1437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1493, -t1492, -t1577, t1447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1500, t1497, t1602, t1438;];
f_new_reg = t1;
