% Calculate vector of inverse dynamics joint torques for
% S5PRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,theta1,theta4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:14
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5PRRPP3_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRPP3_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRPP3_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRPP3_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRPP3_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRPP3_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5PRRPP3_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5PRRPP3_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5PRRPP3_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:12:00
% EndTime: 2019-12-05 16:13:26
% DurationCPUTime: 68.92s
% Computational Cost: add. (17861->999), mult. (49674->1330), div. (0->0), fcn. (52426->8), ass. (0->406)
t792 = Icges(6,4) + Icges(5,5);
t822 = Icges(6,2) + Icges(5,3);
t790 = Icges(5,6) - Icges(6,6);
t824 = Icges(5,1) + Icges(6,1);
t802 = Icges(5,4) - Icges(6,5);
t823 = Icges(5,2) + Icges(6,3);
t457 = sin(pkin(8));
t459 = cos(pkin(8));
t464 = cos(qJ(2));
t462 = sin(qJ(2));
t463 = cos(qJ(3));
t651 = t462 * t463;
t387 = t457 * t651 + t459 * t464;
t388 = -t457 * t464 + t459 * t651;
t461 = sin(qJ(3));
t654 = t461 * t462;
t821 = -t790 * t387 + t388 * t792 + t822 * t654;
t458 = sin(pkin(7));
t460 = cos(pkin(7));
t653 = t461 * t464;
t385 = t458 * t653 + t460 * t463;
t615 = qJD(2) * t462;
t577 = t463 * t615;
t271 = -qJD(3) * t385 - t458 * t577;
t614 = qJD(2) * t464;
t579 = t458 * t614;
t200 = t271 * t457 - t459 * t579;
t201 = t271 * t459 + t457 * t579;
t612 = qJD(3) * t464;
t573 = t463 * t612;
t270 = -t458 * t573 + (qJD(3) * t460 + t458 * t615) * t461;
t820 = t200 * t823 - t201 * t802 + t270 * t790;
t389 = -t458 * t463 + t460 * t653;
t273 = -qJD(3) * t389 - t460 * t577;
t578 = t460 * t614;
t202 = t273 * t457 - t459 * t578;
t203 = t273 * t459 + t457 * t578;
t595 = t460 * t654;
t659 = t458 * t461;
t272 = qJD(2) * t595 - qJD(3) * t659 - t460 * t573;
t819 = t202 * t823 - t203 * t802 + t272 * t790;
t818 = -t200 * t790 + t201 * t792 - t270 * t822;
t817 = -t202 * t790 + t203 * t792 - t272 * t822;
t816 = -t802 * t200 + t201 * t824 - t792 * t270;
t815 = -t802 * t202 + t203 * t824 - t792 * t272;
t650 = t463 * t464;
t386 = t458 * t650 - t460 * t461;
t652 = t462 * t459;
t266 = t386 * t457 - t458 * t652;
t658 = t458 * t462;
t267 = t386 * t459 + t457 * t658;
t735 = -t266 * t790 + t267 * t792 + t385 * t822;
t390 = t460 * t650 + t659;
t268 = t390 * t457 - t460 * t652;
t656 = t460 * t462;
t269 = t390 * t459 + t457 * t656;
t734 = -t268 * t790 + t269 * t792 + t389 * t822;
t777 = t266 * t823 - t267 * t802 - t385 * t790;
t776 = t268 * t823 - t269 * t802 - t389 * t790;
t775 = -t802 * t266 + t267 * t824 + t792 * t385;
t774 = -t802 * t268 + t269 * t824 + t792 * t389;
t613 = qJD(3) * t462;
t575 = t461 * t613;
t718 = t463 * t614 - t575;
t274 = t457 * t718 - t459 * t615;
t392 = t457 * t462 + t459 * t650;
t275 = qJD(2) * t392 - t459 * t575;
t487 = t461 * t614 + t463 * t613;
t814 = -t274 * t823 + t275 * t802 + t487 * t790;
t813 = t274 * t790 - t275 * t792 - t487 * t822;
t812 = t802 * t274 - t275 * t824 - t792 * t487;
t769 = -t387 * t823 + t388 * t802 + t654 * t790;
t767 = -t802 * t387 + t388 * t824 + t792 * t654;
t150 = Icges(4,4) * t271 + Icges(4,2) * t270 + Icges(4,6) * t579;
t811 = -t150 + t818;
t151 = Icges(4,4) * t273 + Icges(4,2) * t272 + Icges(4,6) * t578;
t810 = -t151 + t817;
t673 = Icges(4,4) * t386;
t206 = -Icges(4,2) * t385 + Icges(4,6) * t658 + t673;
t809 = -t206 + t735;
t672 = Icges(4,4) * t390;
t207 = -Icges(4,2) * t389 + Icges(4,6) * t656 + t672;
t808 = -t207 + t734;
t670 = Icges(4,4) * t463;
t530 = -Icges(4,2) * t461 + t670;
t349 = Icges(4,6) * t462 + t464 * t530;
t671 = Icges(4,4) * t461;
t404 = (-Icges(4,2) * t463 - t671) * t462;
t236 = qJD(2) * t349 + qJD(3) * t404;
t807 = t236 + t813;
t348 = -Icges(4,6) * t464 + t462 * t530;
t806 = -t348 + t821;
t805 = t821 * t654;
t804 = -t769 * t387 + t767 * t388 + t805;
t152 = Icges(4,1) * t271 + Icges(4,4) * t270 + Icges(4,5) * t579;
t372 = Icges(4,4) * t385;
t208 = Icges(4,1) * t386 + Icges(4,5) * t658 - t372;
t148 = Icges(4,5) * t271 + Icges(4,6) * t270 + Icges(4,3) * t579;
t204 = Icges(4,5) * t386 - Icges(4,6) * t385 + Icges(4,3) * t658;
t507 = t148 * t462 + t204 * t614;
t760 = t152 * t386 + t777 * t200 + t775 * t201 + t208 * t271 + t820 * t266 + t816 * t267 - t809 * t270 + t811 * t385 + t458 * t507;
t153 = Icges(4,1) * t273 + Icges(4,4) * t272 + Icges(4,5) * t578;
t373 = Icges(4,4) * t389;
t209 = Icges(4,1) * t390 + Icges(4,5) * t656 - t373;
t149 = Icges(4,5) * t273 + Icges(4,6) * t272 + Icges(4,3) * t578;
t205 = Icges(4,5) * t390 - Icges(4,6) * t389 + Icges(4,3) * t656;
t506 = t149 * t462 + t205 * t614;
t759 = t153 * t386 + t776 * t200 + t774 * t201 + t209 * t271 + t819 * t266 + t815 * t267 - t808 * t270 + t810 * t385 + t458 * t506;
t758 = t152 * t390 + t777 * t202 + t775 * t203 + t208 * t273 + t820 * t268 + t816 * t269 - t809 * t272 + t811 * t389 + t460 * t507;
t757 = t153 * t390 + t776 * t202 + t774 * t203 + t209 * t273 + t819 * t268 + t815 * t269 - t808 * t272 + t810 * t389 + t460 * t506;
t785 = t204 * t658 + t208 * t386 + t777 * t266 + t775 * t267 + t809 * t385;
t800 = t205 * t658 + t209 * t386 + t776 * t266 + t774 * t267 + t808 * t385;
t799 = t204 * t656 + t208 * t390 + t777 * t268 + t775 * t269 + t809 * t389;
t754 = t205 * t656 + t209 * t390 + t776 * t268 + t774 * t269 + t808 * t389;
t535 = Icges(4,1) * t463 - t671;
t351 = Icges(4,5) * t462 + t464 * t535;
t405 = (-Icges(4,1) * t461 - t670) * t462;
t237 = qJD(2) * t351 + qJD(3) * t405;
t350 = -Icges(4,5) * t464 + t462 * t535;
t525 = Icges(4,5) * t463 - Icges(4,6) * t461;
t347 = Icges(4,3) * t462 + t464 * t525;
t403 = (-Icges(4,5) * t461 - Icges(4,6) * t463) * t462;
t235 = qJD(2) * t347 + qJD(3) * t403;
t346 = -Icges(4,3) * t464 + t462 * t525;
t505 = t235 * t462 + t346 * t614;
t798 = t769 * t200 - t767 * t201 - t237 * t386 + t814 * t266 + t812 * t267 + t806 * t270 - t271 * t350 + t807 * t385 - t458 * t505;
t797 = t769 * t202 - t767 * t203 - t237 * t390 + t814 * t268 + t812 * t269 + t806 * t272 - t273 * t350 + t807 * t389 - t460 * t505;
t521 = -t206 * t461 + t208 * t463;
t753 = -t204 * t464 + t777 * t387 + t775 * t388 + t462 * t521 + t735 * t654;
t520 = -t207 * t461 + t209 * t463;
t752 = -t205 * t464 + t776 * t387 + t774 * t388 + t462 * t520 + t734 * t654;
t796 = -t769 * t266 + t767 * t267 + t346 * t658 + t350 * t386 + t806 * t385;
t795 = -t769 * t268 + t767 * t269 + t346 * t656 + t350 * t390 + t806 * t389;
t455 = t458 ^ 2;
t456 = t460 ^ 2;
t781 = rSges(6,1) + pkin(4);
t778 = rSges(6,3) + qJ(5);
t423 = rSges(3,1) * t462 + rSges(3,2) * t464;
t765 = t455 + t456;
t794 = t423 * t765;
t793 = t458 * t460;
t789 = -t457 * t823 + t802 * t459;
t788 = t790 * t457 - t792 * t459;
t787 = t802 * t457 - t459 * t824;
t617 = qJD(2) * t458;
t410 = t460 * t613 + t617;
t616 = qJD(2) * t460;
t411 = t458 * t613 - t616;
t786 = (t410 * t800 + t411 * t785 - t612 * t796) * t458 + (t410 * t754 + t411 * t799 - t612 * t795) * t460;
t784 = Icges(4,2) + t822;
t783 = 0.2e1 * qJD(2);
t782 = 2 * qJDD(2);
t366 = qJD(4) * t385;
t427 = pkin(2) * t462 - pkin(6) * t464;
t583 = t427 * t617;
t552 = t366 - t583;
t637 = rSges(6,2) * t654 + t387 * t778 + t388 * t781;
t693 = pkin(3) * t463;
t736 = (qJ(4) * t461 + t693) * t462;
t587 = -t736 - t637;
t261 = pkin(3) * t390 + qJ(4) * t389;
t645 = rSges(6,2) * t389 + t268 * t778 + t269 * t781;
t592 = -t261 - t645;
t610 = qJD(5) * t266;
t47 = t410 * t587 + t592 * t612 + t552 + t610;
t780 = t47 * t410;
t257 = pkin(3) * t386 + qJ(4) * t385;
t242 = t257 * t612;
t368 = qJD(4) * t389;
t582 = t427 * t616;
t497 = t411 * t736 + t242 + t368 - t582;
t609 = qJD(5) * t268;
t647 = rSges(6,2) * t385 + t266 * t778 + t267 * t781;
t48 = t411 * t637 + t612 * t647 + t497 + t609;
t779 = t48 * t411;
t312 = t387 * t458;
t313 = t388 * t458;
t596 = t458 * t654;
t773 = -t312 * t823 + t313 * t802 + t596 * t790;
t314 = t387 * t460;
t315 = t388 * t460;
t772 = -t314 * t823 + t315 * t802 + t595 * t790;
t771 = t312 * t802 - t313 * t824 - t596 * t792;
t770 = t314 * t802 - t315 * t824 - t595 * t792;
t391 = t457 * t650 - t652;
t768 = -t391 * t823 + t392 * t802 + t653 * t790;
t766 = t391 * t802 - t392 * t824 - t653 * t792;
t764 = t804 * t462;
t605 = qJD(2) * qJD(3);
t498 = qJDD(3) * t462 + t464 * t605;
t604 = qJDD(2) * t458;
t306 = t460 * t498 + t604;
t603 = qJDD(2) * t460;
t307 = t458 * t498 - t603;
t414 = -qJDD(3) * t464 + t462 * t605;
t762 = t306 * t800 + t307 * t785 + t410 * t759 + t411 * t760 + t414 * t796 + t612 * t798;
t761 = t306 * t754 + t307 * t799 + t410 * t757 + t411 * t758 + t414 * t795 + t612 * t797;
t717 = (qJD(2) * t521 - t148) * t464 + (qJD(2) * t204 - t150 * t461 + t152 * t463 + (-t206 * t463 - t208 * t461) * qJD(3)) * t462 + t818 * t654 + t735 * t487 + t816 * t388 + t820 * t387 + t775 * t275 + t777 * t274;
t716 = (qJD(2) * t520 - t149) * t464 + (qJD(2) * t205 - t151 * t461 + t153 * t463 + (-t207 * t463 - t209 * t461) * qJD(3)) * t462 + t817 * t654 + t734 * t487 + t815 * t388 + t819 * t387 + t774 * t275 + t776 * t274;
t515 = -t348 * t461 + t350 * t463;
t664 = t346 * t464;
t147 = t462 * t515 - t664;
t606 = t147 * qJD(3);
t756 = t752 * t410 + t753 * t411 - t464 * t606 - t612 * t804;
t751 = t312 * t790 - t313 * t792 + t348 * t458 - t596 * t822;
t750 = t314 * t790 - t315 * t792 + t348 * t460 - t595 * t822;
t749 = t391 * t790 - t392 * t792 - t653 * t822 + t349;
t711 = t458 * t753 + t460 * t752;
t748 = -t664 + t805;
t747 = t800 * t460;
t746 = t795 * t462;
t745 = t796 * t462;
t744 = t799 * t458;
t509 = t347 - t515;
t707 = -(-t346 * t460 - t520) * t410 - (-t346 * t458 - t521) * t411;
t743 = (t204 * t411 + t205 * t410) * t464 + (-t509 * t612 - t707) * t462;
t740 = -t457 * t778 - t459 * t781;
t131 = rSges(5,1) * t269 - rSges(5,2) * t268 + rSges(5,3) * t389;
t644 = -t131 - t261;
t733 = -t385 * t410 + t389 * t411 + t487;
t732 = t385 * t789 - t386 * t790;
t731 = t389 * t789 - t390 * t790;
t730 = t385 * t787 + t386 * t792;
t729 = t389 * t787 + t390 * t792;
t329 = t460 * t736;
t629 = -t315 * rSges(5,1) + t314 * rSges(5,2);
t728 = rSges(5,3) * t595 + t329 - t629;
t727 = -t312 * t778 - t313 * t781;
t726 = -t314 * t778 - t315 * t781;
t227 = rSges(5,1) * t388 - rSges(5,2) * t387 + rSges(5,3) * t654;
t636 = -t227 - t736;
t724 = t389 * t612 + t410 * t654 - t270;
t723 = -t385 * t612 - t411 * t654 - t272;
t722 = (-t461 * t789 + t463 * t790) * t462;
t721 = (-t461 * t787 - t463 * t792) * t462;
t720 = t464 * pkin(2) + t462 * pkin(6);
t715 = -(qJD(2) * t515 - t235) * t464 - (qJD(2) * t346 - t236 * t461 + t237 * t463 + (-t348 * t463 - t350 * t461) * qJD(3)) * t462 + t813 * t654 - t821 * t487 + t812 * t388 + t814 * t387 - t767 * t275 + t769 * t274;
t714 = t147 + t804;
t259 = -t389 * pkin(3) + qJ(4) * t390;
t660 = t389 * t459;
t661 = t389 * t457;
t713 = t390 * rSges(6,2) - t660 * t781 - t661 * t778 + t259;
t712 = (t350 + t404 + (-t461 * t788 - t463 * t822) * t462 + t767 * t459 - t769 * t457) * t612 + (t385 * t788 + t386 * t784 - t457 * t777 - t459 * t775 - t208 + t372) * t411 + (t389 * t788 + t390 * t784 - t457 * t776 - t459 * t774 - t209 + t373) * t410;
t710 = t754 * t460 + t744;
t709 = t458 * t785 + t747;
t708 = t462 * (g(1) * t460 + g(2) * t458);
t704 = -m(5) - m(6);
t703 = t306 / 0.2e1;
t702 = t307 / 0.2e1;
t701 = -t410 / 0.2e1;
t700 = t410 / 0.2e1;
t699 = -t411 / 0.2e1;
t698 = t411 / 0.2e1;
t697 = t414 / 0.2e1;
t690 = rSges(4,1) * t463;
t452 = t462 * rSges(4,3);
t677 = -rSges(6,2) * t270 + t200 * t778 + t201 * t781 + t610;
t676 = -rSges(6,2) * t272 + t202 * t778 + t203 * t781 + t609;
t663 = t385 * t457;
t662 = t385 * t459;
t657 = t458 * t464;
t655 = t460 * t464;
t104 = rSges(5,1) * t203 - rSges(5,2) * t202 - rSges(5,3) * t272;
t133 = pkin(3) * t273 - qJ(4) * t272 + t368;
t649 = -t104 - t133;
t132 = pkin(3) * t271 - qJ(4) * t270 + t366;
t648 = t132 * t656 + t257 * t578;
t129 = rSges(5,1) * t267 - rSges(5,2) * t266 + rSges(5,3) * t385;
t646 = -t129 - t257;
t608 = qJD(5) * t387;
t643 = rSges(6,2) * t487 + t274 * t778 + t275 * t781 + t608;
t142 = rSges(5,1) * t275 - rSges(5,2) * t274 + rSges(5,3) * t487;
t611 = qJD(4) * t462;
t436 = t461 * t611;
t234 = pkin(3) * t718 + t487 * qJ(4) + t436;
t642 = -t142 - t234;
t641 = t386 * rSges(6,2) - t662 * t781 - t663 * t778;
t640 = rSges(5,1) * t660 - rSges(5,2) * t661 - t390 * rSges(5,3) - t259;
t639 = -rSges(6,2) * t596 + t727;
t255 = -t385 * pkin(3) + qJ(4) * t386;
t437 = t463 * t611;
t638 = t410 * t255 + t437;
t635 = rSges(6,2) * t653 + t391 * t778 + t392 * t781;
t407 = (-rSges(4,1) * t461 - rSges(4,2) * t463) * t462;
t551 = -rSges(4,2) * t461 + t690;
t244 = qJD(3) * t407 + (t464 * t551 + t452) * qJD(2);
t413 = t720 * qJD(2);
t634 = -t244 - t413;
t633 = t464 * t257 + t658 * t736;
t444 = rSges(6,2) * t651;
t632 = t654 * t740 + t444;
t631 = -t313 * rSges(5,1) + t312 * rSges(5,2);
t508 = qJD(2) * t427;
t370 = t458 * t508;
t371 = t460 * t508;
t627 = -t458 * t370 - t460 * t371;
t439 = pkin(6) * t657;
t441 = pkin(6) * t655;
t624 = (-pkin(2) * t658 + t439) * t617 + (-pkin(2) * t656 + t441) * t616;
t352 = -rSges(4,3) * t464 + t462 * t551;
t623 = -t352 - t427;
t401 = t720 * t458;
t402 = t720 * t460;
t622 = t458 * t401 + t460 * t402;
t621 = rSges(4,2) * t596 + rSges(4,3) * t657;
t597 = t457 * t654;
t620 = rSges(5,2) * t597 + rSges(5,3) * t651;
t619 = rSges(4,2) * t595 + rSges(4,3) * t655;
t409 = pkin(3) * t650 + qJ(4) * t653;
t607 = qJD(5) * t457;
t602 = g(3) * t654;
t601 = rSges(4,1) * t651;
t600 = -t133 - t676;
t594 = t464 * t132 + t234 * t658 + t579 * t736;
t593 = -t257 - t647;
t591 = -t234 - t643;
t590 = -t413 + t642;
t588 = rSges(6,2) * t595 + t329 - t726;
t586 = -t427 + t636;
t440 = qJ(4) * t651;
t406 = -pkin(3) * t654 + t440;
t585 = qJD(4) * t390 + t255 * t612 + t411 * t406;
t229 = t392 * rSges(5,1) - t391 * rSges(5,2) + rSges(5,3) * t653;
t584 = -pkin(2) - t693;
t581 = t720 * t617;
t580 = t720 * t616;
t438 = qJD(4) * t653;
t570 = t401 * t617 + t402 * t616 + qJD(1);
t564 = -t612 / 0.2e1;
t563 = t612 / 0.2e1;
t562 = t458 * t132 + t460 * t133 + t627;
t561 = -t413 + t591;
t560 = -t427 + t587;
t559 = t458 * t257 + t460 * t261 + t622;
t558 = t720 + t409;
t424 = rSges(3,1) * t464 - rSges(3,2) * t462;
t102 = rSges(5,1) * t201 - rSges(5,2) * t200 - rSges(5,3) * t270;
t513 = -t370 * t617 - t371 * t616 + t401 * t604 + t402 * t603 + qJDD(1);
t478 = qJD(2) * t438 + qJD(3) * t437 + qJDD(4) * t654 + t410 * t132 + t306 * t257 + t513;
t10 = t102 * t410 + t129 * t306 + t307 * t644 + t411 * t649 + t478;
t538 = t410 * t257 + t436 + t570;
t50 = t129 * t410 + t411 * t644 + t538;
t549 = t10 * t129 + t50 * t102;
t539 = -t410 * t458 * t736 + t460 * t242 + t438 + t624;
t527 = Icges(3,5) * t464 - Icges(3,6) * t462;
t526 = -Icges(3,5) * t462 - Icges(3,6) * t464;
t224 = rSges(4,1) * t386 - rSges(4,2) * t385 + rSges(4,3) * t658;
t225 = rSges(4,1) * t390 - rSges(4,2) * t389 + rSges(4,3) * t656;
t519 = t224 * t460 - t225 * t458;
t516 = t765 * t424;
t514 = qJD(2) * t794;
t353 = rSges(4,1) * t650 - rSges(4,2) * t653 + t452;
t172 = -rSges(5,1) * t662 + rSges(5,2) * t663 + t386 * rSges(5,3);
t512 = -qJD(2) * t413 - qJDD(2) * t427;
t68 = t410 * t636 + t612 * t644 + t552;
t69 = t129 * t612 + t227 * t411 + t497;
t503 = t68 * t131 + t646 * t69;
t80 = t224 * t410 - t225 * t411 + t570;
t501 = t80 * t519;
t494 = qJD(2) * t526;
t489 = t512 * t458;
t488 = t512 * t460;
t37 = t410 * t647 + t411 * t592 + t538 + t608;
t7 = qJD(5) * t274 + qJDD(5) * t387 + t306 * t647 + t307 * t592 + t410 * t677 + t411 * t600 + t478;
t486 = t37 * t677 + t647 * t7;
t484 = -(-Icges(4,5) * t385 - Icges(4,6) * t386) * t411 - (-Icges(4,5) * t389 - Icges(4,6) * t390) * t410 + t403 * t612;
t483 = t47 * t645 + t48 * t593;
t482 = t261 * t613 - t436 * t458 - t581;
t477 = t462 * t484;
t476 = -qJD(4) * t270 + qJDD(4) * t385 + t414 * t261 + t489;
t475 = t411 * t409 - t436 * t460 - t580;
t472 = -qJD(4) * t272 + qJDD(4) * t389 + t132 * t612 + t411 * t234 + t307 * t736 + t488;
t471 = (-Icges(4,1) * t389 - t207 - t672) * t410 + (-Icges(4,1) * t385 - t206 - t673) * t411 - (-t348 + t405) * t612;
t469 = (t37 * t647 + t47 * t587) * t460 + (t37 * t592 + t48 * t637) * t458;
t400 = t423 * t460;
t399 = t423 * t458;
t394 = t526 * t460;
t393 = t526 * t458;
t367 = qJD(4) * t386;
t357 = t460 * t494;
t356 = t458 * t494;
t322 = Icges(3,3) * t458 + t460 * t527;
t321 = -Icges(3,3) * t460 + t458 * t527;
t294 = -rSges(5,1) * t461 * t652 + t620;
t292 = -t460 * t601 + t619;
t291 = -t458 * t601 + t621;
t284 = t350 * t460;
t283 = t350 * t458;
t260 = -rSges(4,1) * t389 - rSges(4,2) * t390;
t256 = -rSges(4,1) * t385 - rSges(4,2) * t386;
t243 = t261 * t615;
t231 = t257 * t656;
t189 = -rSges(5,3) * t596 + t631;
t155 = rSges(4,1) * t273 + rSges(4,2) * t272 + rSges(4,3) * t578;
t154 = rSges(4,1) * t271 + rSges(4,2) * t270 + rSges(4,3) * t579;
t109 = t224 * t612 + t352 * t411 - t582;
t108 = -t225 * t612 - t352 * t410 - t583;
t105 = -qJD(2) * t514 + qJDD(2) * t516 + qJDD(1);
t67 = t154 * t612 - t224 * t414 + t244 * t411 + t307 * t352 + t488;
t66 = -t155 * t612 + t225 * t414 - t244 * t410 - t306 * t352 + t489;
t49 = t154 * t410 - t155 * t411 + t224 * t306 - t225 * t307 + t513;
t30 = t102 * t612 + t142 * t411 + t227 * t307 + t414 * t646 + t472;
t29 = t131 * t414 + t306 * t636 + t410 * t642 + t612 * t649 + t476;
t9 = qJD(5) * t202 + qJDD(5) * t268 + t307 * t637 + t411 * t643 + t414 * t593 + t612 * t677 + t472;
t8 = qJD(5) * t200 + qJDD(5) * t266 + t306 * t587 + t410 * t591 + t414 * t645 + t600 * t612 + t476;
t1 = [m(2) * qJDD(1) + (-m(2) - m(3) - m(4) + t704) * g(3) + m(3) * t105 + m(4) * t49 + m(5) * t10 + m(6) * t7; (t393 * qJD(2) * t456 - t394 * t460 * t617) * t616 / 0.2e1 - (t394 * qJD(2) * t455 - t393 * t458 * t616) * t617 / 0.2e1 + (t754 * t458 - t799 * t460) * t703 + (t458 * t800 - t460 * t785) * t702 + (t743 * t460 + ((-t351 * t390 + t767 * t315 - t769 * t314 + t766 * t269 + t768 * t268 + (t748 + t754) * t460 + t749 * t389 + t744) * t464 + t746) * qJD(3) + (t268 * t773 + t269 * t771 - t283 * t390 - t314 * t777 - t315 * t775 + t389 * t751 - t595 * t735) * t411 + (t268 * t772 + t269 * t770 - t284 * t390 - t314 * t776 - t315 * t774 + t389 * t750 - t595 * t734) * t410) * t701 + (t458 * t757 - t460 * t758) * t700 + (t743 * t458 + ((-t351 * t386 + t767 * t313 - t769 * t312 + t766 * t267 + t768 * t266 + (t748 + t785) * t458 + t749 * t385 + t747) * t464 + t745) * qJD(3) + (t266 * t773 + t267 * t771 - t283 * t386 - t312 * t777 - t313 * t775 + t385 * t751 - t596 * t735) * t411 + (t266 * t772 + t267 * t770 - t284 * t386 - t312 * t776 - t313 * t774 + t385 * t750 - t596 * t734) * t410) * t699 + (t458 * t759 - t460 * t760) * t698 + (t458 * t752 - t460 * t753) * t697 - t756 * t613 / 0.2e1 + (t606 * t462 + t707 * t464 + ((-t283 * t463 + t204) * t462 + (t462 * t751 + t464 * t735) * t461 + t775 * t392 + t777 * t391 + t771 * t388 + t773 * t387) * t411 + ((-t284 * t463 + t205) * t462 + (t462 * t750 + t464 * t734) * t461 + t774 * t392 + t776 * t391 + t770 * t388 + t772 * t387) * t410 + (((-t351 * t463 - t346) * t462 + t509 * t464 - t767 * t392 + t769 * t391 + t766 * t388 + t768 * t387 + (t462 * t749 - t464 * t821) * t461 + t711) * t464 + t764) * qJD(3)) * t563 + (-g(1) * (t441 + t726) - g(2) * (t439 + t727) - g(3) * (t558 + t635) - ((-rSges(6,2) - qJ(4)) * t461 + t584) * t708 + t7 * t559 + (t48 * t561 + t560 * t9 + t645 * t7) * t460 + (t47 * t561 + t560 * t8 + t486) * t458 - t48 * (-qJD(5) * t314 + t475) - t47 * (-qJD(5) * t312 + t482) - t635 * t779 - (-t409 - t635) * t780 - (t483 * t462 + (t47 * t588 + t48 * t639 + t469) * t464) * qJD(3) + (-qJD(5) * t391 - t639 * t410 - t588 * t411 + t676 * t460 - t539 + t562) * t37) * m(6) + (-t69 * (t229 * t411 + t475) - t68 * (t482 + (-t229 - t409) * t410) - t50 * (t189 * t410 + t411 * t728 + t539) - (t503 * t462 + (t69 * (t227 * t458 + t189) + t68 * (t460 * t636 + t728) + t50 * (t129 * t460 + t458 * t644)) * t464) * qJD(3) - g(1) * (t441 + t629) - g(2) * (t439 + t631) - g(3) * (t558 + t229) - ((-rSges(5,3) - qJ(4)) * t461 + t584) * t708 + t10 * t559 + t50 * t562 + (t10 * t131 + t50 * t104 + t30 * t586 + t590 * t69) * t460 + (t29 * t586 + t590 * t68 + t549) * t458) * m(5) + (t49 * t622 + (t109 * t634 + t49 * t225 + t623 * t67) * t460 + (t108 * t634 + t49 * t224 + t623 * t66) * t458 - g(1) * (t441 + t619) - g(2) * (t439 + t621) - g(3) * (t353 + t720) - (-pkin(2) - t690) * t708 - t109 * (t353 * t411 - t580) - t108 * (-t353 * t410 - t581) - ((t108 * t225 - t109 * t224) * t462 + (t109 * (t352 * t458 + t291) + t108 * (-t352 * t460 - t292) + t501) * t464) * qJD(3) + (t154 * t458 + t155 * t460 - t291 * t410 + t292 * t411 - t624 + t627) * t80) * m(4) + (g(1) * t400 + g(2) * t399 - g(3) * t424 + t105 * t516 + (t424 * qJD(2) ^ 2 + qJDD(2) * t423) * t794 + (-t514 - (-t399 * t458 - t400 * t460) * qJD(2)) * (qJD(2) * t516 + qJD(1))) * m(3) + ((-t321 * t793 + t322 * t455) * t782 + (-t356 * t793 + t357 * t455) * t783 + t761) * t458 / 0.2e1 - ((t321 * t456 - t322 * t793) * t782 + (t356 * t456 - t357 * t793) * t783 + t762) * t460 / 0.2e1 + (t458 * t716 - t460 * t717 + t786) * t564; (t710 * t462 - t464 * t795) * t703 + (t709 * t462 - t464 * t796) * t702 + (t390 * t471 - t460 * t477 + (t268 * t722 + t269 * t721 - t390 * t821) * t612 + (t268 * t732 + t269 * t730 + t390 * t735) * t411 + (t268 * t731 + t269 * t729 + t390 * t734) * t410 + t712 * t389) * t701 + (t797 * t464 + (t458 * t758 + t460 * t757) * t462 + (t464 * t710 + t746) * qJD(2)) * t700 + (t386 * t471 - t458 * t477 + (t266 * t722 + t267 * t721 - t386 * t821) * t612 + (t266 * t732 + t267 * t730 + t386 * t735) * t411 + (t266 * t731 + t267 * t729 + t386 * t734) * t410 + t712 * t385) * t699 + (t798 * t464 + (t458 * t760 + t460 * t759) * t462 + (t464 * t709 + t745) * qJD(2)) * t698 + (t462 * t711 - t464 * t714) * t697 - (t306 * t752 + t307 * t753 + t716 * t410 + t717 * t411 + t714 * t414 + t715 * t612) * t464 / 0.2e1 + t762 * t658 / 0.2e1 + t761 * t656 / 0.2e1 + t756 * t615 / 0.2e1 + (t715 * t464 + (t458 * t717 + t460 * t716) * t462 + (t147 * t462 + t464 * t711 + t764) * qJD(2)) * t564 + (t484 * t464 + (t387 * t722 + t388 * t721) * t612 + (t387 * t732 + t388 * t730) * t411 + (t387 * t731 + t388 * t729) * t410 + ((t410 * t734 + t411 * t735 - t612 * t821 + t471) * t463 + t712 * t461) * t462) * t563 + (t9 * t633 + t48 * t594 + t47 * t243 + t7 * t231 + t37 * t648 + (qJD(2) * t469 + t47 * t600 + t48 * t677 + t592 * t8 + t647 * t9) * t464 + (t483 * qJD(2) + (t47 * t591 + t587 * t8 + t486) * t460 + (t37 * t600 + t48 * t643 + t592 * t7 + t637 * t9) * t458) * t462 - g(1) * t713 - g(2) * (t255 + t641) - g(3) * (t440 + t444) - (-pkin(3) + t740) * t602 - t48 * (-t389 * t607 + t585) - t47 * (-t385 * t607 + t367) - t37 * (-qJD(5) * t597 + t638) - (-t37 * t713 + t48 * t632) * t411 - (t47 * (-t406 - t632) + t37 * t641) * t410 - (-t47 * t713 + t48 * t641) * t612) * m(6) + (t30 * t633 + t69 * t594 + t68 * t243 + t10 * t231 + t50 * t648 + (t30 * t129 + t69 * t102 + t29 * t644 + t68 * t649 + ((t50 * t129 + t636 * t68) * t460 + (t69 * t227 + t50 * t644) * t458) * qJD(2)) * t464 + (t503 * qJD(2) + (t29 * t636 + t642 * t68 + t549) * t460 + (t10 * t644 + t69 * t142 + t30 * t227 + t50 * t649) * t458) * t462 + g(1) * t640 - g(2) * (t172 + t255) - g(3) * (t440 + (-rSges(5,1) * t459 - pkin(3)) * t654 + t620) - t69 * (t172 * t612 + t294 * t411 + t585) - t68 * (t367 + (-t294 - t406) * t410 + t640 * t612) - t50 * (t172 * t410 + t411 * t640 + t638)) * m(5) + ((-t108 * t155 + t109 * t154 + t67 * t224 - t66 * t225 + (t501 + (-t108 * t460 + t109 * t458) * t352) * qJD(2)) * t464 + (t109 * (-qJD(2) * t224 + t244 * t458) + t108 * (qJD(2) * t225 - t244 * t460) + t49 * t519 + t80 * (t154 * t460 - t155 * t458) + (t458 * t67 - t460 * t66) * t352) * t462 - t109 * (t256 * t612 + t407 * t411) - t108 * (-t260 * t612 - t407 * t410) - t80 * (t256 * t410 - t260 * t411) - g(1) * t260 - g(2) * t256 - g(3) * t407) * m(4) + t786 * t614 / 0.2e1; t704 * (g(1) * t389 + g(2) * t385 + t602) + (t37 * t733 + t385 * t8 + t389 * t9 + t47 * t724 + t48 * t723 + t7 * t654) * m(6) + (t10 * t654 + t29 * t385 + t30 * t389 + t50 * t733 + t68 * t724 + t69 * t723) * m(5); (t200 * t47 + t202 * t48 + t274 * t37 + (-g(3) + t7 - t779 + t780) * t387 + (t37 * t411 + t47 * t612 - g(1) + t9) * t268 + (-t37 * t410 - t48 * t612 - g(2) + t8) * t266) * m(6);];
tau = t1;
