% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PRPRR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d4,d5,theta1,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:55
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PRPRR5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPRR5_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPRR5_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRPRR5_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRPRR5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRPRR5_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:55:04
% EndTime: 2019-12-05 15:55:18
% DurationCPUTime: 14.18s
% Computational Cost: add. (73244->604), mult. (169850->855), div. (0->0), fcn. (126792->10), ass. (0->408)
t999 = sin(pkin(9));
t1012 = t999 ^ 2;
t1090 = qJD(2) ^ 2;
t1055 = t1012 * t1090;
t1001 = cos(pkin(9));
t1010 = t1001 ^ 2;
t991 = t1010 * t1090;
t971 = t991 + t1055;
t1003 = sin(qJ(5));
t1006 = cos(qJ(5));
t1004 = sin(qJ(4));
t1007 = cos(qJ(4));
t961 = (-t1001 * t1007 + t1004 * t999) * qJD(2);
t1028 = t1001 * t1004 + t1007 * t999;
t962 = t1028 * qJD(2);
t912 = t1003 * t962 + t1006 * t961;
t914 = -t1003 * t961 + t1006 * t962;
t870 = t914 * t912;
t995 = qJDD(4) + qJDD(5);
t1100 = -t870 + t995;
t1105 = t1003 * t1100;
t925 = t962 * t961;
t1095 = qJDD(4) - t925;
t1104 = t1004 * t1095;
t1103 = t1006 * t1100;
t1102 = t1007 * t1095;
t1005 = sin(qJ(2));
t1008 = cos(qJ(2));
t1081 = g(3) - qJDD(1);
t1000 = sin(pkin(8));
t1002 = cos(pkin(8));
t977 = t1002 * g(1) + t1000 * g(2);
t949 = -t1005 * t1081 - t1008 * t977;
t1035 = -t1090 * pkin(2) + qJDD(2) * qJ(3) + 0.2e1 * qJD(2) * qJD(3) + t949;
t1101 = pkin(6) * qJDD(2) + t1035;
t1061 = t962 * qJD(4);
t988 = t999 * qJDD(2);
t990 = t1001 * qJDD(2);
t959 = t1004 * t988 - t1007 * t990;
t1024 = t959 + t1061;
t956 = t961 * qJD(4);
t960 = t1028 * qJDD(2);
t923 = -t956 + t960;
t848 = -t912 * qJD(5) - t1003 * t1024 + t1006 * t923;
t996 = qJD(4) + qJD(5);
t907 = t996 * t912;
t1099 = -t907 + t848;
t976 = t1000 * g(1) - t1002 * g(2);
t966 = t1002 * t976;
t1098 = -t1000 * t977 + t966;
t1097 = t1000 * t1081;
t1096 = t1002 * t1081;
t1037 = t1003 * t923 + t1006 * t1024;
t806 = (qJD(5) - t996) * t914 + t1037;
t948 = -t1005 * t977 + t1008 * t1081;
t998 = qJDD(2) * pkin(2);
t932 = -t1090 * qJ(3) + qJDD(3) + t948 - t998;
t1044 = -t932 + t998;
t1093 = t1090 * (t1010 + t1012);
t963 = t999 * t1093;
t1094 = qJ(3) * t963 - t1044 * t999;
t964 = t1001 * t1093;
t1092 = -qJ(3) * t964 + t1044 * t1001;
t910 = t912 ^ 2;
t911 = t914 ^ 2;
t1091 = t961 ^ 2;
t958 = t962 ^ 2;
t994 = t996 ^ 2;
t1056 = t1001 * t1090;
t965 = t1001 * t976;
t880 = -t965 + (pkin(3) * t1056 - t1101) * t999;
t1082 = t999 * t976;
t881 = -pkin(3) * t991 + t1101 * t1001 - t1082;
t829 = t1004 * t881 - t1007 * t880;
t830 = t1004 * t880 + t1007 * t881;
t770 = t1004 * t830 - t1007 * t829;
t1089 = pkin(3) * t770;
t873 = -t1004 * t959 - t1007 * t960;
t1088 = pkin(3) * t873;
t1084 = t914 * t996;
t1083 = t999 * t770;
t1053 = t1008 * qJDD(2);
t1045 = t1001 * t1053;
t978 = t999 * t1056;
t946 = -t1005 * t978 + t999 * t1045;
t1080 = t1000 * t946;
t1079 = t1000 * t976;
t1077 = t1001 * t770;
t1076 = t1002 * t946;
t903 = -pkin(3) * t990 - t971 * pkin(6) + t932;
t947 = qJD(4) * pkin(4) - t962 * pkin(7);
t828 = pkin(4) * t1024 - t1091 * pkin(7) + t962 * t947 + t903;
t1075 = t1003 * t828;
t865 = t870 + t995;
t1074 = t1003 * t865;
t1073 = t1003 * t996;
t778 = (-t923 - t956) * pkin(7) + t1095 * pkin(4) - t829;
t781 = -t1091 * pkin(4) - pkin(7) * t1024 - qJD(4) * t947 + t830;
t740 = t1003 * t781 - t1006 * t778;
t741 = t1003 * t778 + t1006 * t781;
t699 = t1003 * t741 - t1006 * t740;
t1072 = t1004 * t699;
t1071 = t1004 * t903;
t919 = qJDD(4) + t925;
t1070 = t1004 * t919;
t1069 = t1005 * t932;
t1068 = t1006 * t828;
t1067 = t1006 * t865;
t1066 = t1006 * t996;
t1065 = t1007 * t699;
t1064 = t1007 * t903;
t1063 = t1007 * t919;
t1062 = t1008 * t932;
t1058 = qJD(4) * t1004;
t1057 = qJD(4) * t1007;
t1054 = t1005 * qJDD(2);
t989 = t1010 * qJDD(2);
t987 = t1012 * qJDD(2);
t1052 = t1005 * t870;
t1051 = t1005 * t925;
t1050 = t1008 * t870;
t1049 = t1008 * t925;
t700 = t1003 * t740 + t1006 * t741;
t670 = t1004 * t700 + t1065;
t698 = pkin(4) * t699;
t1048 = pkin(3) * t670 + t698;
t810 = t907 + t848;
t761 = -t1003 * t806 - t1006 * t810;
t763 = t1003 * t810 - t1006 * t806;
t722 = t1004 * t763 + t1007 * t761;
t759 = pkin(4) * t761;
t1047 = pkin(3) * t722 + t759;
t1046 = t999 * t990;
t895 = t1035 * t999 + t965;
t896 = t1001 * t1035 - t1082;
t856 = t1001 * t896 + t999 * t895;
t969 = t989 + t987;
t1023 = pkin(2) * t971 + qJ(3) * t969 + t856;
t928 = t1005 * t969 + t1008 * t971;
t797 = -pkin(1) * t928 - t1023;
t930 = -t1005 * t971 + t1008 * t969;
t1043 = qJ(1) * t930 + t797;
t934 = t1005 * t963 - t999 * t1053;
t867 = -pkin(1) * t934 - t1094;
t939 = t1008 * t963 + t999 * t1054;
t1042 = qJ(1) * t939 + t867;
t938 = -t1005 * t964 + t1045;
t868 = -pkin(1) * t938 - t1092;
t942 = t1001 * t1054 + t1008 * t964;
t1041 = -qJ(1) * t942 + t868;
t975 = -t1005 * t1090 + t1053;
t926 = -pkin(1) * t975 + t948;
t974 = t1008 * t1090 + t1054;
t1040 = qJ(1) * t974 - t926;
t927 = pkin(1) * t974 + t949;
t1039 = qJ(1) * t975 - t927;
t1038 = -t1002 * t977 - t1079;
t771 = t1004 * t829 + t1007 * t830;
t1036 = t1005 * t948 + t1008 * t949;
t1034 = -0.2e1 * t1046;
t1033 = 0.2e1 * t1046;
t1009 = qJD(4) ^ 2;
t952 = -t958 - t1009;
t884 = t1007 * t952 - t1070;
t1032 = pkin(3) * t884 - t830;
t863 = -t994 - t910;
t789 = t1003 * t863 + t1103;
t1031 = pkin(4) * t789 - t740;
t1030 = -pkin(2) * t932 + qJ(3) * t856;
t1029 = -pkin(5) * t975 - t1005 * t976;
t941 = pkin(5) * t974 - t1008 * t976;
t855 = t1001 * t895 - t999 * t896;
t900 = t1005 * t949 - t1008 * t948;
t917 = -t1009 - t1091;
t871 = t1004 * t917 + t1102;
t1027 = pkin(3) * t871 - t829;
t898 = -t911 - t994;
t826 = t1006 * t898 - t1074;
t1026 = pkin(4) * t826 - t741;
t790 = t1006 * t863 - t1105;
t752 = t1004 * t790 + t1007 * t789;
t1025 = pkin(3) * t752 + t1031;
t827 = -t1003 * t898 - t1067;
t767 = t1004 * t827 + t1007 * t826;
t1022 = pkin(3) * t767 + t1026;
t671 = t1007 * t700 - t1072;
t694 = -pkin(4) * t828 + pkin(7) * t700;
t655 = -pkin(3) * t828 + pkin(6) * t671 - pkin(7) * t1072 + t1007 * t694;
t658 = -pkin(6) * t670 - pkin(7) * t1065 - t1004 * t694;
t661 = t1001 * t671 - t999 * t670;
t1021 = -pkin(2) * t828 + qJ(3) * t661 + t1001 * t655 + t999 * t658;
t846 = -t910 - t911;
t680 = -pkin(4) * t846 + pkin(7) * t763 + t700;
t686 = -pkin(7) * t761 - t699;
t724 = -t1004 * t761 + t1007 * t763;
t662 = -pkin(3) * t846 + pkin(6) * t724 + t1004 * t686 + t1007 * t680;
t663 = -pkin(6) * t722 - t1004 * t680 + t1007 * t686;
t684 = t1001 * t724 - t999 * t722;
t1020 = -pkin(2) * t846 + qJ(3) * t684 + t1001 * t662 + t999 * t663;
t805 = (qJD(5) + t996) * t914 + t1037;
t737 = -pkin(4) * t805 + pkin(7) * t790 - t1068;
t753 = -t1004 * t789 + t1007 * t790;
t765 = -pkin(7) * t789 + t1075;
t685 = -pkin(3) * t805 + pkin(6) * t753 + t1004 * t765 + t1007 * t737;
t691 = -pkin(6) * t752 - t1004 * t737 + t1007 * t765;
t715 = t1001 * t753 - t999 * t752;
t1019 = -pkin(2) * t805 + qJ(3) * t715 + t1001 * t685 + t999 * t691;
t742 = -pkin(4) * t1099 + pkin(7) * t827 + t1075;
t768 = -t1004 * t826 + t1007 * t827;
t769 = -pkin(7) * t826 + t1068;
t690 = -pkin(3) * t1099 + pkin(6) * t768 + t1004 * t769 + t1007 * t742;
t695 = -pkin(6) * t767 - t1004 * t742 + t1007 * t769;
t729 = t1001 * t768 - t999 * t767;
t1018 = -pkin(2) * t1099 + qJ(3) * t729 + t1001 * t690 + t999 * t695;
t875 = t1004 * t960 - t1007 * t959;
t897 = -t958 - t1091;
t743 = -pkin(3) * t897 + pkin(6) * t875 + t771;
t751 = -pkin(6) * t873 - t770;
t813 = t1001 * t875 - t999 * t873;
t1017 = -pkin(2) * t897 + qJ(3) * t813 + t1001 * t743 + t999 * t751;
t872 = t1007 * t917 - t1104;
t921 = t959 + 0.2e1 * t1061;
t802 = -pkin(3) * t921 + pkin(6) * t872 - t1064;
t804 = t1001 * t872 - t999 * t871;
t841 = -pkin(6) * t871 + t1071;
t1016 = -pkin(2) * t921 + qJ(3) * t804 + t1001 * t802 + t999 * t841;
t887 = -t1004 * t952 - t1063;
t922 = -0.2e1 * t956 + t960;
t819 = -pkin(3) * t922 + pkin(6) * t887 + t1071;
t840 = t1001 * t887 - t999 * t884;
t853 = -pkin(6) * t884 + t1064;
t1015 = -pkin(2) * t922 + qJ(3) * t840 + t1001 * t819 + t999 * t853;
t731 = t1001 * t771 - t1083;
t764 = -pkin(3) * t903 + pkin(6) * t771;
t1014 = -pkin(2) * t903 - pkin(6) * t1083 + qJ(3) * t731 + t1001 * t764;
t972 = -t991 + t1055;
t970 = t989 - t987;
t951 = -t958 + t1009;
t950 = -t1009 + t1091;
t945 = t974 * t999 * t1001;
t931 = t1005 * t972 + t1008 * t970;
t929 = t1005 * t970 - t1008 * t972;
t924 = t958 - t1091;
t909 = (t1004 * t962 - t1007 * t961) * qJD(4);
t908 = (-t1004 * t961 - t1007 * t962) * qJD(4);
t905 = -t911 + t994;
t904 = t910 - t994;
t892 = t1007 * t923 - t962 * t1058;
t891 = t1004 * t923 + t962 * t1057;
t890 = t1004 * t1024 + t961 * t1057;
t889 = -t1007 * t1024 + t961 * t1058;
t888 = pkin(1) * t976 + pkin(5) * t1036;
t886 = -t1004 * t951 + t1102;
t885 = t1007 * t950 - t1070;
t883 = t1007 * t951 + t1104;
t882 = t1004 * t950 + t1063;
t876 = -t1004 * t922 - t1007 * t921;
t874 = -t1004 * t921 + t1007 * t922;
t869 = t911 - t910;
t862 = t1001 * t909 - t999 * t908;
t861 = t1001 * t908 + t999 * t909;
t860 = (t1003 * t914 - t1006 * t912) * t996;
t859 = (-t1003 * t912 - t1006 * t914) * t996;
t858 = t1005 * qJDD(4) + t1008 * t862;
t857 = -t1008 * qJDD(4) + t1005 * t862;
t852 = -pkin(5) * t934 + t1001 * t1062 - t1005 * t896;
t851 = -pkin(5) * t938 - t1005 * t895 + t999 * t1062;
t850 = pkin(5) * t939 + t1001 * t1069 + t1008 * t896;
t849 = -pkin(5) * t942 + t1008 * t895 + t999 * t1069;
t847 = -t914 * qJD(5) - t1037;
t845 = t1001 * t892 - t999 * t891;
t844 = t1001 * t890 - t999 * t889;
t843 = t1001 * t891 + t999 * t892;
t842 = t1001 * t889 + t999 * t890;
t839 = t1001 * t886 - t999 * t883;
t838 = t1001 * t885 - t999 * t882;
t837 = t1001 * t884 + t999 * t887;
t836 = t1001 * t883 + t999 * t886;
t835 = t1001 * t882 + t999 * t885;
t834 = t1006 * t904 - t1074;
t833 = -t1003 * t905 + t1103;
t832 = t1003 * t904 + t1067;
t831 = t1006 * t905 + t1105;
t823 = -pkin(5) * t928 + t1008 * t855;
t822 = pkin(5) * t930 + t1005 * t855;
t821 = t1008 * t856 + t1069;
t820 = t1005 * t856 - t1062;
t818 = t1005 * t960 + t1008 * t839;
t817 = -t1005 * t959 + t1008 * t838;
t816 = t1005 * t839 - t1008 * t960;
t815 = t1005 * t838 + t1008 * t959;
t814 = t1001 * t876 - t999 * t874;
t812 = t1001 * t874 + t999 * t876;
t811 = t1001 * t873 + t999 * t875;
t803 = t1001 * t871 + t999 * t872;
t801 = t1008 * t845 + t1051;
t800 = t1008 * t844 - t1051;
t799 = t1005 * t845 - t1049;
t798 = t1005 * t844 + t1049;
t796 = t1006 * t848 - t914 * t1073;
t795 = t1003 * t848 + t914 * t1066;
t794 = -t1003 * t847 + t912 * t1066;
t793 = t1006 * t847 + t912 * t1073;
t792 = t1005 * t922 + t1008 * t840;
t791 = t1005 * t840 - t1008 * t922;
t787 = -t1004 * t859 + t1007 * t860;
t786 = t1004 * t860 + t1007 * t859;
t785 = t1005 * t924 + t1008 * t814;
t784 = t1005 * t814 - t1008 * t924;
t783 = t1005 * t921 + t1008 * t804;
t782 = t1005 * t804 - t1008 * t921;
t780 = t1005 * t897 + t1008 * t813;
t779 = t1005 * t813 - t1008 * t897;
t776 = -pkin(2) * t811 - t1088;
t775 = -t1004 * t832 + t1007 * t834;
t774 = -t1004 * t831 + t1007 * t833;
t773 = t1004 * t834 + t1007 * t832;
t772 = t1004 * t833 + t1007 * t831;
t766 = -pkin(1) * t820 - t1030;
t762 = -t1003 * t1099 - t1006 * t805;
t760 = -t1003 * t805 + t1006 * t1099;
t758 = -pkin(2) * t837 - t1032;
t757 = -t1004 * t795 + t1007 * t796;
t756 = -t1004 * t793 + t1007 * t794;
t755 = t1004 * t796 + t1007 * t795;
t754 = t1004 * t794 + t1007 * t793;
t750 = -pkin(5) * t820 - (pkin(2) * t1005 - qJ(3) * t1008) * t855;
t749 = -pkin(2) * t803 - t1027;
t748 = t1001 * t787 - t999 * t786;
t747 = t1001 * t786 + t999 * t787;
t746 = -qJ(3) * t837 + t1001 * t853 - t999 * t819;
t745 = t1005 * t995 + t1008 * t748;
t744 = t1005 * t748 - t1008 * t995;
t738 = -qJ(3) * t803 + t1001 * t841 - t999 * t802;
t736 = pkin(5) * t821 - (-pkin(2) * t1008 - qJ(3) * t1005 - pkin(1)) * t855;
t735 = t1001 * t775 - t999 * t773;
t734 = t1001 * t774 - t999 * t772;
t733 = t1001 * t773 + t999 * t775;
t732 = t1001 * t772 + t999 * t774;
t730 = t999 * t771 + t1077;
t728 = t1001 * t767 + t999 * t768;
t727 = -pkin(1) * t791 - t1015;
t726 = t1005 * t903 + t1008 * t731;
t725 = t1005 * t731 - t1008 * t903;
t723 = -t1004 * t760 + t1007 * t762;
t721 = t1004 * t762 + t1007 * t760;
t720 = t1001 * t757 - t999 * t755;
t719 = t1001 * t756 - t999 * t754;
t718 = t1001 * t755 + t999 * t757;
t717 = t1001 * t754 + t999 * t756;
t716 = -pkin(1) * t782 - t1016;
t714 = t1001 * t752 + t999 * t753;
t713 = -t1005 * t806 + t1008 * t735;
t712 = t1005 * t810 + t1008 * t734;
t711 = t1005 * t735 + t1008 * t806;
t710 = t1005 * t734 - t1008 * t810;
t709 = t1005 * t1099 + t1008 * t729;
t708 = t1005 * t729 - t1008 * t1099;
t707 = t1008 * t720 + t1052;
t706 = t1008 * t719 - t1052;
t705 = t1005 * t720 - t1050;
t704 = t1005 * t719 + t1050;
t703 = -pkin(2) * t730 - t1089;
t702 = t1005 * t805 + t1008 * t715;
t701 = t1005 * t715 - t1008 * t805;
t697 = -pkin(5) * t791 - t1005 * t758 + t1008 * t746;
t696 = -qJ(3) * t811 + t1001 * t751 - t999 * t743;
t693 = -pkin(1) * t837 + pkin(5) * t792 + t1005 * t746 + t1008 * t758;
t692 = -pkin(5) * t782 - t1005 * t749 + t1008 * t738;
t689 = -pkin(6) * t1077 - qJ(3) * t730 - t999 * t764;
t688 = -pkin(1) * t779 - t1017;
t687 = -pkin(1) * t803 + pkin(5) * t783 + t1005 * t738 + t1008 * t749;
t683 = t1001 * t723 - t999 * t721;
t682 = t1001 * t722 + t999 * t724;
t681 = t1001 * t721 + t999 * t723;
t679 = -pkin(5) * t779 - t1005 * t776 + t1008 * t696;
t678 = t1005 * t869 + t1008 * t683;
t677 = t1005 * t683 - t1008 * t869;
t676 = -pkin(2) * t728 - t1022;
t675 = t1005 * t846 + t1008 * t684;
t674 = t1005 * t684 - t1008 * t846;
t673 = -pkin(1) * t811 + pkin(5) * t780 + t1005 * t696 + t1008 * t776;
t672 = -pkin(2) * t714 - t1025;
t669 = -pkin(1) * t725 - t1014;
t668 = -pkin(2) * t682 - t1047;
t667 = -pkin(5) * t725 - t1005 * t703 + t1008 * t689;
t666 = -qJ(3) * t728 + t1001 * t695 - t999 * t690;
t665 = -qJ(3) * t714 + t1001 * t691 - t999 * t685;
t664 = -pkin(1) * t730 + pkin(5) * t726 + t1005 * t689 + t1008 * t703;
t660 = t1001 * t670 + t999 * t671;
t659 = -pkin(1) * t708 - t1018;
t657 = t1005 * t828 + t1008 * t661;
t656 = t1005 * t661 - t1008 * t828;
t654 = -pkin(1) * t701 - t1019;
t653 = -pkin(5) * t708 - t1005 * t676 + t1008 * t666;
t652 = -pkin(1) * t728 + pkin(5) * t709 + t1005 * t666 + t1008 * t676;
t651 = -pkin(5) * t701 - t1005 * t672 + t1008 * t665;
t650 = -pkin(2) * t660 - t1048;
t649 = -pkin(1) * t714 + pkin(5) * t702 + t1005 * t665 + t1008 * t672;
t648 = -qJ(3) * t682 + t1001 * t663 - t999 * t662;
t647 = -pkin(1) * t674 - t1020;
t646 = -qJ(3) * t660 + t1001 * t658 - t999 * t655;
t645 = -pkin(5) * t674 - t1005 * t668 + t1008 * t648;
t644 = -pkin(1) * t682 + pkin(5) * t675 + t1005 * t648 + t1008 * t668;
t643 = -pkin(1) * t656 - t1021;
t642 = -pkin(5) * t656 - t1005 * t650 + t1008 * t646;
t641 = -pkin(1) * t660 + pkin(5) * t657 + t1005 * t646 + t1008 * t650;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1097, -t1096, -t1098, -qJ(1) * t1098, 0, 0, t1002 * t975, 0, -t1002 * t974, t1000 * qJDD(2), t1000 * t1040 + t1002 * t1029, t1000 * t1039 + t1002 * t941, -t1002 * t900, -qJ(1) * (t1000 * t1036 + t966) + (t1000 * pkin(1) - t1002 * pkin(5)) * t900, t1000 * t987 + t1076, t1000 * t1033 + t1002 * t931, t1002 * t939, t1000 * t989 - t1076, t1002 * t942, 0, -t1000 * t1041 + t1002 * t851, -t1000 * t1042 + t1002 * t852, -t1000 * t1043 + t1002 * t823, t1002 * t750 - t1000 * t766 - qJ(1) * (t1000 * t821 + t1002 * t855), t1000 * t843 + t1002 * t801, t1000 * t812 + t1002 * t785, t1000 * t836 + t1002 * t818, t1000 * t842 + t1002 * t800, t1000 * t835 + t1002 * t817, t1000 * t861 + t1002 * t858, t1002 * t692 - t1000 * t716 - qJ(1) * (t1000 * t783 - t1002 * t803), t1002 * t697 - t1000 * t727 - qJ(1) * (t1000 * t792 - t1002 * t837), t1002 * t679 - t1000 * t688 - qJ(1) * (t1000 * t780 - t1002 * t811), t1002 * t667 - t1000 * t669 - qJ(1) * (t1000 * t726 - t1002 * t730), t1000 * t718 + t1002 * t707, t1000 * t681 + t1002 * t678, t1000 * t732 + t1002 * t712, t1000 * t717 + t1002 * t706, t1000 * t733 + t1002 * t713, t1000 * t747 + t1002 * t745, t1002 * t651 - t1000 * t654 - qJ(1) * (t1000 * t702 - t1002 * t714), t1002 * t653 - t1000 * t659 - qJ(1) * (t1000 * t709 - t1002 * t728), t1002 * t645 - t1000 * t647 - qJ(1) * (t1000 * t675 - t1002 * t682), t1002 * t642 - t1000 * t643 - qJ(1) * (t1000 * t657 - t1002 * t660); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1096, -t1097, t1038, qJ(1) * t1038, 0, 0, t1000 * t975, 0, -t1000 * t974, -t1002 * qJDD(2), t1000 * t1029 - t1002 * t1040, t1000 * t941 - t1002 * t1039, -t1000 * t900, qJ(1) * (t1002 * t1036 - t1079) + (-t1002 * pkin(1) - t1000 * pkin(5)) * t900, -t1002 * t987 + t1080, t1000 * t931 + t1002 * t1034, t1000 * t939, -t1002 * t989 - t1080, t1000 * t942, 0, t1000 * t851 + t1002 * t1041, t1000 * t852 + t1002 * t1042, t1000 * t823 + t1002 * t1043, t1000 * t750 + t1002 * t766 + qJ(1) * (-t1000 * t855 + t1002 * t821), t1000 * t801 - t1002 * t843, t1000 * t785 - t1002 * t812, t1000 * t818 - t1002 * t836, t1000 * t800 - t1002 * t842, t1000 * t817 - t1002 * t835, t1000 * t858 - t1002 * t861, t1000 * t692 + t1002 * t716 + qJ(1) * (t1000 * t803 + t1002 * t783), t1000 * t697 + t1002 * t727 + qJ(1) * (t1000 * t837 + t1002 * t792), t1000 * t679 + t1002 * t688 + qJ(1) * (t1000 * t811 + t1002 * t780), t1000 * t667 + t1002 * t669 + qJ(1) * (t1000 * t730 + t1002 * t726), t1000 * t707 - t1002 * t718, t1000 * t678 - t1002 * t681, t1000 * t712 - t1002 * t732, t1000 * t706 - t1002 * t717, t1000 * t713 - t1002 * t733, t1000 * t745 - t1002 * t747, t1000 * t651 + t1002 * t654 + qJ(1) * (t1000 * t714 + t1002 * t702), t1000 * t653 + t1002 * t659 + qJ(1) * (t1000 * t728 + t1002 * t709), t1000 * t645 + t1002 * t647 + qJ(1) * (t1000 * t682 + t1002 * t675), t1000 * t642 + t1002 * t643 + qJ(1) * (t1000 * t660 + t1002 * t657); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t976, t977, 0, 0, 0, 0, t974, 0, t975, 0, -t941, t1029, t1036, t888, t945, t929, t934, -t945, -t938, 0, t849, t850, t822, t736, t799, t784, t816, t798, t815, t857, t687, t693, t673, t664, t705, t677, t710, t704, t711, t744, t649, t652, t644, t641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1081, -t976, 0, 0, 0, t975, 0, -t974, 0, t1029, t941, -t900, -pkin(5) * t900, t946, t931, t939, -t946, t942, 0, t851, t852, t823, t750, t801, t785, t818, t800, t817, t858, t692, t697, t679, t667, t707, t678, t712, t706, t713, t745, t651, t653, t645, t642; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1081, 0, -t977, 0, 0, 0, 0, 0, 0, -qJDD(2), t926, t927, 0, -pkin(1) * t900, -t987, t1034, 0, -t989, 0, 0, t868, t867, t797, t766, -t843, -t812, -t836, -t842, -t835, -t861, t716, t727, t688, t669, -t718, -t681, -t732, -t717, -t733, -t747, t654, t659, t647, t643; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t976, t977, 0, 0, 0, 0, t974, 0, t975, 0, -t941, t1029, t1036, t888, t945, t929, t934, -t945, -t938, 0, t849, t850, t822, t736, t799, t784, t816, t798, t815, t857, t687, t693, t673, t664, t705, t677, t710, t704, t711, t744, t649, t652, t644, t641; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1090, 0, 0, -t976, t948, 0, t1046, t970, t963, -t1046, t964, 0, t999 * t932, t1001 * t932, t855, qJ(3) * t855, t845, t814, t839, t844, t838, t862, t738, t746, t696, t689, t720, t683, t734, t719, t735, t748, t665, t666, t648, t646; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1090, 0, qJDD(2), 0, t976, 0, t949, 0, t978, -t972, -t988, -t978, -t990, 0, t895, t896, 0, pkin(2) * t855, -t925, -t924, -t960, t925, t959, -qJDD(4), t749, t758, t776, t703, -t870, -t869, -t810, t870, t806, -t995, t672, t676, t668, t650; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t948, -t949, 0, 0, t987, t1033, 0, t989, 0, 0, t1092, t1094, t1023, t1030, t843, t812, t836, t842, t835, t861, t1016, t1015, t1017, t1014, t718, t681, t732, t717, t733, t747, t1019, t1018, t1020, t1021; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t988, t990, t978, 0, t991, 0, 0, t932, t895, 0, t892, t876, t886, t890, t885, t909, t841, t853, t751, -pkin(6) * t770, t757, t723, t774, t756, t775, t787, t691, t695, t663, t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t988, -t1055, t990, -t978, 0, -t932, 0, t896, 0, t891, t874, t883, t889, t882, t908, t802, t819, t743, t764, t755, t721, t772, t754, t773, t786, t685, t690, t662, t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t978, t972, t988, t978, t990, 0, -t895, -t896, 0, 0, t925, t924, t960, -t925, -t959, qJDD(4), t1027, t1032, t1088, t1089, t870, t869, t810, -t870, -t806, t995, t1025, t1022, t1047, t1048; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t923, -t921, t1095, t956, t950, -t956, 0, t903, t829, 0, t796, t762, t833, t794, t834, t860, t765, t769, t686, -pkin(7) * t699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1061, t922, t951, -t1024, t919, -t1061, -t903, 0, t830, 0, t795, t760, t831, t793, t832, t859, t737, t742, t680, t694; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t925, t924, t960, -t925, -t959, qJDD(4), -t829, -t830, 0, 0, t870, t869, t810, -t870, -t806, t995, t1031, t1026, t759, t698; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t848, -t805, t1100, t907, t904, -t907, 0, t828, t740, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1084, t1099, t905, t847, t865, -t1084, -t828, 0, t741, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t870, t869, t810, -t870, -t806, t995, -t740, -t741, 0, 0;];
m_new_reg = t1;
