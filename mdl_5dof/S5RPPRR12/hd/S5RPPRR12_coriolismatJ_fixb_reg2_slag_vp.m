% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5,theta3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:07
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPRR12_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR12_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR12_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPPRR12_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:07:26
% EndTime: 2019-12-31 18:07:31
% DurationCPUTime: 2.53s
% Computational Cost: add. (3707->221), mult. (6599->303), div. (0->0), fcn. (7079->6), ass. (0->181)
t188 = sin(qJ(5));
t295 = 0.2e1 * t188;
t186 = sin(pkin(8));
t187 = cos(pkin(8));
t290 = sin(qJ(4));
t291 = cos(qJ(4));
t161 = t291 * t186 + t290 * t187;
t158 = t161 ^ 2;
t173 = t290 * t186;
t226 = t291 * t187;
t163 = t226 - t173;
t159 = t163 ^ 2;
t209 = t158 / 0.2e1 + t159 / 0.2e1;
t63 = 0.1e1 / 0.2e1 - t209;
t189 = cos(qJ(5));
t100 = t189 * t163;
t214 = t100 * t295;
t294 = -t159 - t158;
t228 = t159 - t158;
t180 = t186 ^ 2;
t181 = t187 ^ 2;
t168 = t180 + t181;
t185 = t189 ^ 2;
t293 = -t185 / 0.2e1;
t286 = -pkin(1) - qJ(3);
t229 = -pkin(6) + t286;
t165 = t229 * t186;
t211 = t229 * t187;
t118 = t290 * t165 - t291 * t211;
t119 = t291 * t165 + t290 * t211;
t287 = t163 * pkin(4);
t288 = t161 * pkin(7);
t120 = t287 + t288;
t270 = t188 * t120;
t272 = t118 * t189;
t56 = t270 - t272;
t279 = t56 * t189;
t268 = t189 * t120;
t273 = t118 * t188;
t55 = t268 + t273;
t282 = t55 * t188;
t172 = t186 * pkin(3) + qJ(2);
t289 = t161 * pkin(4);
t208 = -t163 * pkin(7) + t289;
t191 = t172 + t208;
t269 = t189 * t119;
t52 = t188 * t191 + t269;
t283 = t52 * t189;
t271 = t188 * t119;
t51 = -t189 * t191 + t271;
t284 = t51 * t188;
t2 = (t283 / 0.2e1 + t284 / 0.2e1 - t119 / 0.2e1) * t163 + (t279 / 0.2e1 - t282 / 0.2e1 + t118 / 0.2e1) * t161;
t292 = t2 * qJD(4);
t23 = t52 * t188 - t51 * t189;
t280 = t56 * t188;
t281 = t55 * t189;
t3 = (t280 + t281) * t163 - t23 * t161;
t285 = t3 * qJD(1);
t6 = (-t51 + t271) * t163 + (t55 - t273) * t161;
t278 = t6 * qJD(1);
t7 = (-t52 + t269) * t163 + (-t56 - t272) * t161;
t277 = t7 * qJD(1);
t274 = t118 * t163;
t8 = t274 + (-t283 - t284) * t161;
t276 = t8 * qJD(1);
t184 = t188 ^ 2;
t215 = t293 - t184 / 0.2e1;
t190 = t215 * t288 - t287 / 0.2e1;
t200 = -t281 / 0.2e1 - t280 / 0.2e1;
t9 = t190 + t200;
t275 = t9 * qJD(1);
t95 = t188 * t163;
t267 = t23 * qJD(1);
t28 = -t118 * t95 + t51 * t161;
t266 = t28 * qJD(1);
t29 = t118 * t100 - t52 * t161;
t265 = t29 * qJD(1);
t231 = -t159 / 0.2e1;
t194 = t215 * t158 + t231;
t36 = t194 + t215;
t264 = t36 * qJD(1);
t41 = -t119 * t161 + t274;
t263 = t41 * qJD(1);
t64 = -0.1e1 / 0.2e1 - t209;
t57 = t64 * t188;
t262 = t57 * qJD(1);
t261 = t64 * qJD(1);
t66 = t64 * t189;
t260 = t66 * qJD(1);
t68 = t228 * t188;
t259 = t68 * qJD(1);
t69 = t294 * t188;
t258 = t69 * qJD(1);
t70 = t228 * t189;
t257 = t70 * qJD(1);
t256 = t228 * qJD(1);
t92 = (t184 / 0.2e1 + t293) * t163;
t255 = t92 * qJD(5);
t93 = t188 * t161;
t254 = t93 * qJD(1);
t253 = t95 * qJD(1);
t98 = t189 * t161;
t252 = t98 * qJD(1);
t251 = t184 + t185;
t171 = t185 - t184;
t250 = qJD(2) * t161;
t249 = qJD(3) * t189;
t248 = qJD(4) * t189;
t247 = qJD(5) * t188;
t246 = qJD(5) * t189;
t147 = t184 * t161;
t148 = t185 * t161;
t103 = t147 + t148;
t245 = t103 * qJD(1);
t105 = t251 * t163;
t244 = t105 * qJD(1);
t106 = t294 * t189;
t243 = t106 * qJD(1);
t242 = t294 * qJD(1);
t157 = t226 / 0.2e1 - t173 / 0.2e1;
t241 = t157 * qJD(1);
t160 = t168 * t286;
t240 = t160 * qJD(1);
t239 = t161 * qJD(1);
t151 = t161 * qJD(4);
t238 = t163 * qJD(1);
t154 = t163 * qJD(4);
t216 = -t180 / 0.2e1 - t181 / 0.2e1;
t167 = -0.1e1 / 0.2e1 + t216;
t237 = t167 * qJD(1);
t236 = t168 * qJD(1);
t235 = t172 * qJD(1);
t234 = t186 * qJD(1);
t233 = t187 * qJD(1);
t225 = t161 * t247;
t224 = t161 * t246;
t223 = t161 * t238;
t222 = t161 * t154;
t221 = t188 * t246;
t220 = t188 * t239;
t219 = t188 * t248;
t218 = t189 * t239;
t217 = t189 * t238;
t213 = qJD(3) + t235;
t212 = -qJD(5) - t239;
t210 = t159 * t221;
t207 = -t95 * qJD(4) - t224;
t206 = qJD(4) * t214;
t4 = t118 * t119 - t51 * t55 + t52 * t56;
t205 = t4 * qJD(1) + t2 * qJD(2);
t204 = t279 - t282;
t42 = (-0.1e1 + t251) * t163 * t161;
t203 = -t2 * qJD(1) - t42 * qJD(2);
t202 = t212 * t189;
t201 = t288 / 0.2e1 + t287 / 0.2e1;
t195 = t120 / 0.2e1 + t201;
t26 = t195 * t189;
t199 = pkin(4) * t188 * qJD(4) + t26 * qJD(1);
t24 = t195 * t188;
t198 = pkin(4) * t248 - t24 * qJD(1);
t78 = -t92 * qJD(1) + t219;
t197 = t163 * t202;
t196 = t157 * qJD(5) + t223;
t61 = t189 * t159 * t188 * qJD(1) + t92 * qJD(4);
t104 = t171 * t159;
t193 = t104 * qJD(1) + t206;
t192 = qJD(1) * t214 - t171 * qJD(4);
t183 = qJ(2) * qJD(2);
t182 = qJD(1) * qJ(2);
t166 = 0.1e1 / 0.2e1 + t216;
t146 = t157 * qJD(4);
t145 = t189 * t154;
t84 = t93 * qJD(5);
t79 = -t247 - t254;
t67 = (-t158 / 0.2e1 + t231 + 0.1e1 / 0.2e1) * t189;
t58 = t63 * t188;
t35 = t194 - t215;
t27 = t273 + t268 / 0.2e1 - t201 * t189;
t25 = t272 - t270 / 0.2e1 + t201 * t188;
t10 = t190 - t200;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t183, 0, 0, 0, 0, 0, 0, qJD(2) * t186, qJD(2) * t187, t168 * qJD(3), -t160 * qJD(3) + t183, -t222, -t228 * qJD(4), 0, t222, 0, 0, t172 * t154 + t250, qJD(2) * t163 - t172 * t151, -t294 * qJD(3), t172 * qJD(2) + t41 * qJD(3), -t185 * t222 - t210, -t104 * qJD(5) + t161 * t206, t70 * qJD(4) - t163 * t225, -t184 * t222 + t210, -t68 * qJD(4) - t163 * t224, t222, -t69 * qJD(3) + t6 * qJD(4) + t29 * qJD(5) + t189 * t250, -t106 * qJD(3) + t7 * qJD(4) + t28 * qJD(5) - t188 * t250, -t105 * qJD(2) - t3 * qJD(4), t23 * qJD(2) + t8 * qJD(3) + t4 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t182, 0, 0, 0, 0, 0, 0, t234, t233, 0, t166 * qJD(3) + t182, 0, 0, 0, 0, 0, 0, t239, t238, 0, t63 * qJD(3) + t235, 0, 0, 0, 0, 0, 0, t67 * qJD(5) + t218, -t58 * qJD(5) - t220, -t244, t35 * qJD(3) + t267 + t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, t166 * qJD(2) - t240, 0, 0, 0, 0, 0, 0, 0, 0, -t242, t63 * qJD(2) + t263, 0, 0, 0, 0, 0, 0, -t258, -t243, 0, t35 * qJD(2) + t10 * qJD(4) + t276; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t223, -t256, -t151, t223, -t154, 0, -t119 * qJD(4) + t163 * t235, t118 * qJD(4) - t161 * t235, 0, 0, -t255 + (-t185 * t238 - t219) * t161, (t147 - t148) * qJD(4) + (-qJD(5) + t239) * t214, t188 * t154 + t257, t255 + (-t184 * t238 + t219) * t161, t145 - t259, t196, t278 + (t188 * t208 - t269) * qJD(4) + t27 * qJD(5), t277 + (t189 * t208 + t271) * qJD(4) + t25 * qJD(5), qJD(4) * t204 - t285, t10 * qJD(3) + (-t119 * pkin(4) + pkin(7) * t204) * qJD(4) + t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, -t193, t212 * t95, t61, t197, t146, t67 * qJD(2) + t27 * qJD(4) - t52 * qJD(5) + t265, -t58 * qJD(2) + t25 * qJD(4) + t51 * qJD(5) + t266, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t182, 0, 0, 0, 0, 0, 0, -t234, -t233, 0, t167 * qJD(3) - t182, 0, 0, 0, 0, 0, 0, -t239, -t238, 0, t64 * qJD(3) - t235, 0, 0, 0, 0, 0, 0, t66 * qJD(5) - t218, -t57 * qJD(5) + t220, t244, t36 * qJD(3) - t267 + t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t237, 0, 0, 0, 0, 0, 0, 0, 0, 0, t261, 0, 0, 0, 0, 0, 0, 0, 0, 0, t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151, -t154, 0, 0, 0, 0, 0, 0, 0, 0, -t95 * qJD(5) - t189 * t151, -t100 * qJD(5) + t188 * t151, t105 * qJD(4), (pkin(7) * t105 - t289) * qJD(4) - t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207 + t260, -t100 * qJD(4) + t225 - t262, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t236, -t167 * qJD(2) + t240, 0, 0, 0, 0, 0, 0, t154, -t151, t242, -t64 * qJD(2) - t263, 0, 0, 0, 0, 0, 0, t145 - t84 + t258, t207 + t243, t103 * qJD(4), -t36 * qJD(2) - t9 * qJD(4) - t276; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t237, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t261, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, -t239, 0, 0, 0, 0, 0, 0, 0, 0, t217, -t253, t245, -t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, t202, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, t256, 0, -t223, 0, 0, -t213 * t163, t213 * t161, 0, 0, t185 * t223 - t255, t197 * t295, t98 * qJD(5) - t257, t184 * t223 + t255, -t84 + t259, -t196, -t26 * qJD(5) - t163 * t249 - t278, t95 * qJD(3) + t24 * qJD(5) - t277, -t103 * qJD(3) + t285, t9 * qJD(3) - t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t238, t239, 0, 0, 0, 0, 0, 0, 0, 0, -t217, t253, -t245, t275; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t221, t171 * qJD(5), 0, -t221, 0, 0, -pkin(4) * t247, -pkin(4) * t246, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78, -t192, t246 + t252, -t78, t79, -t241, -pkin(7) * t246 - t199, pkin(7) * t247 - t198, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, t193, -t98 * qJD(4) + t163 * t220, -t61, t93 * qJD(4) + t161 * t217, t146, -t66 * qJD(2) + t93 * qJD(3) + t26 * qJD(4) - t265, t57 * qJD(2) - t24 * qJD(4) + t161 * t249 - t266, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260, t262, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t218, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t78, t192, -t252, t78, t254, t241, t199, t198, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
