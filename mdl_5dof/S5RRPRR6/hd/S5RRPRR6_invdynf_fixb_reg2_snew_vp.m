% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRPRR6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d4,d5,theta3]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:36
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRPRR6_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR6_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR6_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRR6_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRR6_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR6_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:36:51
% EndTime: 2019-12-05 18:36:54
% DurationCPUTime: 2.85s
% Computational Cost: add. (14984->219), mult. (20966->315), div. (0->0), fcn. (13752->10), ass. (0->180)
t1375 = qJD(1) + qJD(2);
t1371 = t1375 ^ 2;
t1382 = sin(qJ(2));
t1372 = qJDD(1) + qJDD(2);
t1386 = cos(qJ(2));
t1408 = t1386 * t1372;
t1348 = t1382 * t1371 - t1408;
t1383 = sin(qJ(1));
t1387 = cos(qJ(1));
t1409 = t1382 * t1372;
t1393 = -t1386 * t1371 - t1409;
t1430 = t1383 * t1348 + t1387 * t1393;
t1429 = t1387 * t1348 - t1383 * t1393;
t1378 = sin(pkin(9));
t1373 = t1378 ^ 2;
t1379 = cos(pkin(9));
t1374 = t1379 ^ 2;
t1405 = t1373 + t1374;
t1345 = t1405 * t1371;
t1410 = t1379 * t1375;
t1359 = -qJD(4) + t1410;
t1353 = -qJD(5) + t1359;
t1426 = qJD(5) - t1353;
t1380 = sin(qJ(5));
t1381 = sin(qJ(4));
t1384 = cos(qJ(5));
t1385 = cos(qJ(4));
t1415 = t1375 * t1378;
t1327 = (-t1380 * t1385 - t1381 * t1384) * t1415;
t1425 = t1327 ^ 2;
t1411 = t1378 * t1385;
t1400 = t1375 * t1411;
t1414 = t1375 * t1381;
t1401 = t1378 * t1414;
t1329 = -t1380 * t1401 + t1384 * t1400;
t1424 = t1329 ^ 2;
t1423 = t1353 ^ 2;
t1422 = t1359 ^ 2;
t1421 = 2 * qJD(3);
t1420 = t1379 * g(1);
t1419 = t1329 * t1327;
t1418 = t1372 * t1381;
t1417 = t1372 * t1385;
t1416 = t1373 * t1371;
t1413 = t1375 * t1385;
t1412 = t1378 * t1372;
t1395 = -pkin(3) * t1379 - pkin(7) * t1378;
t1340 = t1395 * t1375;
t1407 = t1421 + t1340;
t1406 = qJD(5) + t1353;
t1363 = t1383 * g(2) - t1387 * g(3);
t1388 = qJD(1) ^ 2;
t1351 = -t1388 * pkin(1) + t1363;
t1364 = t1387 * g(2) + t1383 * g(3);
t1394 = qJDD(1) * pkin(1) + t1364;
t1325 = t1386 * t1351 + t1382 * t1394;
t1312 = -t1371 * pkin(2) + t1372 * qJ(3) + t1325;
t1304 = -t1378 * g(1) + t1379 * t1312 + t1410 * t1421;
t1293 = t1340 * t1410 + t1304;
t1324 = -t1382 * t1351 + t1386 * t1394;
t1311 = -t1372 * pkin(2) - t1371 * qJ(3) + qJDD(3) - t1324;
t1302 = t1372 * t1395 + t1311;
t1271 = t1385 * t1293 + t1381 * t1302;
t1365 = t1379 * t1372;
t1404 = t1365 - qJDD(4);
t1403 = t1359 * t1414;
t1402 = t1385 * t1416;
t1376 = t1381 ^ 2;
t1399 = t1376 * t1416;
t1398 = -qJDD(5) + t1404;
t1352 = qJD(4) * t1401;
t1335 = t1372 * t1411 - t1352;
t1392 = (-qJD(4) * t1413 - t1418) * t1378;
t1397 = -t1380 * t1335 + t1384 * t1392;
t1396 = t1381 * t1402;
t1391 = -t1384 * t1335 - t1380 * t1392;
t1377 = t1385 ^ 2;
t1358 = t1379 * t1371 * t1378;
t1357 = -t1387 * qJDD(1) + t1383 * t1388;
t1356 = t1383 * qJDD(1) + t1387 * t1388;
t1341 = t1405 * t1372;
t1339 = t1379 * t1345;
t1338 = t1378 * t1345;
t1337 = (t1376 + t1377) * t1416;
t1336 = -t1399 - t1422;
t1334 = -t1359 * pkin(4) - pkin(8) * t1400;
t1333 = -t1396 - t1404;
t1332 = -t1396 + t1404;
t1326 = -t1377 * t1416 - t1422;
t1323 = -t1386 * t1339 - t1379 * t1409;
t1322 = t1386 * t1338 + t1378 * t1409;
t1321 = -t1382 * t1339 + t1379 * t1408;
t1320 = t1382 * t1338 - t1378 * t1408;
t1318 = t1386 * t1341 - t1382 * t1345;
t1317 = t1382 * t1341 + t1386 * t1345;
t1316 = t1352 + (t1403 - t1417) * t1378;
t1315 = -t1352 + (t1403 + t1417) * t1378;
t1314 = (-t1418 + (-qJD(4) - t1359) * t1413) * t1378;
t1313 = (t1418 + (qJD(4) - t1359) * t1413) * t1378;
t1309 = -t1423 - t1424;
t1308 = -t1381 * t1333 + t1385 * t1336;
t1307 = t1385 * t1333 + t1381 * t1336;
t1306 = -t1381 * t1326 + t1385 * t1332;
t1305 = t1385 * t1326 + t1381 * t1332;
t1303 = -0.2e1 * qJD(3) * t1415 - t1378 * t1312 - t1420;
t1301 = -t1398 + t1419;
t1300 = t1398 + t1419;
t1299 = -t1423 - t1425;
t1298 = t1385 * t1302;
t1296 = -t1382 * t1324 + t1386 * t1325;
t1295 = t1386 * t1324 + t1382 * t1325;
t1294 = -t1424 - t1425;
t1292 = t1420 + (t1407 * t1375 + t1312) * t1378;
t1290 = t1385 * t1314 - t1381 * t1316;
t1289 = t1381 * t1314 + t1385 * t1316;
t1288 = t1379 * t1308 + t1378 * t1313;
t1287 = t1378 * t1308 - t1379 * t1313;
t1286 = t1379 * t1306 + t1378 * t1315;
t1285 = t1378 * t1306 - t1379 * t1315;
t1284 = -t1406 * t1327 + t1391;
t1283 = t1426 * t1327 - t1391;
t1282 = -t1406 * t1329 + t1397;
t1281 = t1426 * t1329 - t1397;
t1280 = t1379 * t1290 - t1378 * t1337;
t1279 = t1378 * t1290 + t1379 * t1337;
t1278 = t1384 * t1300 - t1380 * t1309;
t1277 = t1380 * t1300 + t1384 * t1309;
t1276 = -t1378 * t1303 + t1379 * t1304;
t1275 = t1379 * t1303 + t1378 * t1304;
t1274 = t1384 * t1299 - t1380 * t1301;
t1273 = t1380 * t1299 + t1384 * t1301;
t1272 = t1420 - pkin(4) * t1392 - pkin(8) * t1399 + (t1312 + (t1334 * t1385 + t1407) * t1375) * t1378;
t1270 = -t1381 * t1293 + t1298;
t1269 = t1386 * t1288 + t1382 * t1307;
t1268 = t1382 * t1288 - t1386 * t1307;
t1267 = t1386 * t1286 + t1382 * t1305;
t1266 = t1382 * t1286 - t1386 * t1305;
t1265 = t1386 * t1276 + t1382 * t1311;
t1264 = t1382 * t1276 - t1386 * t1311;
t1263 = t1386 * t1280 + t1382 * t1289;
t1262 = t1382 * t1280 - t1386 * t1289;
t1261 = -pkin(4) * t1399 + pkin(8) * t1392 + t1359 * t1334 + t1271;
t1260 = t1298 - t1335 * pkin(8) - t1404 * pkin(4) + (t1359 * pkin(8) * t1415 - pkin(4) * t1402 - t1293) * t1381;
t1259 = t1384 * t1282 - t1380 * t1284;
t1258 = t1380 * t1282 + t1384 * t1284;
t1257 = -t1381 * t1277 + t1385 * t1278;
t1256 = t1385 * t1277 + t1381 * t1278;
t1255 = -t1381 * t1273 + t1385 * t1274;
t1254 = t1385 * t1273 + t1381 * t1274;
t1253 = -t1381 * t1270 + t1385 * t1271;
t1252 = t1385 * t1270 + t1381 * t1271;
t1251 = t1379 * t1257 + t1378 * t1283;
t1250 = t1378 * t1257 - t1379 * t1283;
t1249 = t1379 * t1255 + t1378 * t1281;
t1248 = t1378 * t1255 - t1379 * t1281;
t1247 = t1379 * t1253 + t1378 * t1292;
t1246 = t1378 * t1253 - t1379 * t1292;
t1245 = t1380 * t1260 + t1384 * t1261;
t1244 = t1384 * t1260 - t1380 * t1261;
t1243 = -t1381 * t1258 + t1385 * t1259;
t1242 = t1385 * t1258 + t1381 * t1259;
t1241 = t1379 * t1243 + t1378 * t1294;
t1240 = t1378 * t1243 - t1379 * t1294;
t1239 = t1386 * t1251 + t1382 * t1256;
t1238 = t1382 * t1251 - t1386 * t1256;
t1237 = t1386 * t1249 + t1382 * t1254;
t1236 = t1382 * t1249 - t1386 * t1254;
t1235 = t1386 * t1247 + t1382 * t1252;
t1234 = t1382 * t1247 - t1386 * t1252;
t1233 = -t1380 * t1244 + t1384 * t1245;
t1232 = t1384 * t1244 + t1380 * t1245;
t1231 = t1386 * t1241 + t1382 * t1242;
t1230 = t1382 * t1241 - t1386 * t1242;
t1229 = -t1381 * t1232 + t1385 * t1233;
t1228 = t1385 * t1232 + t1381 * t1233;
t1227 = t1379 * t1229 + t1378 * t1272;
t1226 = t1378 * t1229 - t1379 * t1272;
t1225 = t1386 * t1227 + t1382 * t1228;
t1224 = t1382 * t1227 - t1386 * t1228;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1275, 0, 0, 0, 0, 0, 0, t1287, t1285, t1279, t1246, 0, 0, 0, 0, 0, 0, t1248, t1250, t1240, t1226; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1357, t1356, 0, -t1383 * t1363 - t1387 * t1364, 0, 0, 0, 0, 0, 0, t1429, -t1430, 0, -t1387 * t1295 - t1383 * t1296, 0, 0, 0, 0, 0, 0, -t1387 * t1321 - t1383 * t1323, -t1387 * t1320 - t1383 * t1322, -t1387 * t1317 - t1383 * t1318, -t1387 * t1264 - t1383 * t1265, 0, 0, 0, 0, 0, 0, -t1387 * t1268 - t1383 * t1269, -t1387 * t1266 - t1383 * t1267, -t1387 * t1262 - t1383 * t1263, -t1387 * t1234 - t1383 * t1235, 0, 0, 0, 0, 0, 0, -t1387 * t1236 - t1383 * t1237, -t1387 * t1238 - t1383 * t1239, -t1387 * t1230 - t1383 * t1231, -t1387 * t1224 - t1383 * t1225; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t1356, t1357, 0, t1387 * t1363 - t1383 * t1364, 0, 0, 0, 0, 0, 0, t1430, t1429, 0, -t1383 * t1295 + t1387 * t1296, 0, 0, 0, 0, 0, 0, -t1383 * t1321 + t1387 * t1323, -t1383 * t1320 + t1387 * t1322, -t1383 * t1317 + t1387 * t1318, -t1383 * t1264 + t1387 * t1265, 0, 0, 0, 0, 0, 0, -t1383 * t1268 + t1387 * t1269, -t1383 * t1266 + t1387 * t1267, -t1383 * t1262 + t1387 * t1263, -t1383 * t1234 + t1387 * t1235, 0, 0, 0, 0, 0, 0, -t1383 * t1236 + t1387 * t1237, -t1383 * t1238 + t1387 * t1239, -t1383 * t1230 + t1387 * t1231, -t1383 * t1224 + t1387 * t1225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1388, -qJDD(1), 0, t1363, 0, 0, 0, 0, 0, 0, t1393, t1348, 0, t1296, 0, 0, 0, 0, 0, 0, t1323, t1322, t1318, t1265, 0, 0, 0, 0, 0, 0, t1269, t1267, t1263, t1235, 0, 0, 0, 0, 0, 0, t1237, t1239, t1231, t1225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1388, 0, t1364, 0, 0, 0, 0, 0, 0, -t1348, t1393, 0, t1295, 0, 0, 0, 0, 0, 0, t1321, t1320, t1317, t1264, 0, 0, 0, 0, 0, 0, t1268, t1266, t1262, t1234, 0, 0, 0, 0, 0, 0, t1236, t1238, t1230, t1224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1275, 0, 0, 0, 0, 0, 0, t1287, t1285, t1279, t1246, 0, 0, 0, 0, 0, 0, t1248, t1250, t1240, t1226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1371, -t1372, 0, t1325, 0, 0, 0, 0, 0, 0, -t1339, t1338, t1341, t1276, 0, 0, 0, 0, 0, 0, t1288, t1286, t1280, t1247, 0, 0, 0, 0, 0, 0, t1249, t1251, t1241, t1227; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1372, -t1371, 0, t1324, 0, 0, 0, 0, 0, 0, t1365, -t1412, t1345, -t1311, 0, 0, 0, 0, 0, 0, -t1307, -t1305, -t1289, -t1252, 0, 0, 0, 0, 0, 0, -t1254, -t1256, -t1242, -t1228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1275, 0, 0, 0, 0, 0, 0, t1287, t1285, t1279, t1246, 0, 0, 0, 0, 0, 0, t1248, t1250, t1240, t1226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1374 * t1371, t1358, t1365, t1304, 0, 0, 0, 0, 0, 0, t1308, t1306, t1290, t1253, 0, 0, 0, 0, 0, 0, t1255, t1257, t1243, t1229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1358, -t1416, -t1412, t1303, 0, 0, 0, 0, 0, 0, -t1313, -t1315, t1337, -t1292, 0, 0, 0, 0, 0, 0, -t1281, -t1283, -t1294, -t1272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1365, t1412, -t1345, t1311, 0, 0, 0, 0, 0, 0, t1307, t1305, t1289, t1252, 0, 0, 0, 0, 0, 0, t1254, t1256, t1242, t1228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1336, t1332, t1314, t1271, 0, 0, 0, 0, 0, 0, t1274, t1278, t1259, t1233; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1333, t1326, t1316, t1270, 0, 0, 0, 0, 0, 0, t1273, t1277, t1258, t1232; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1313, t1315, -t1337, t1292, 0, 0, 0, 0, 0, 0, t1281, t1283, t1294, t1272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1299, t1300, t1282, t1245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1301, t1309, t1284, t1244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1281, t1283, t1294, t1272;];
f_new_reg = t1;
