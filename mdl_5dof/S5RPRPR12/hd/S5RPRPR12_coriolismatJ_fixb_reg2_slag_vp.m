% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRPR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:31
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRPR12_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR12_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR12_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR12_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:30:21
% EndTime: 2019-12-31 18:30:31
% DurationCPUTime: 5.87s
% Computational Cost: add. (9129->362), mult. (18415->490), div. (0->0), fcn. (21291->8), ass. (0->292)
t272 = sin(pkin(9));
t443 = cos(qJ(5));
t339 = t443 * t272;
t274 = cos(pkin(9));
t276 = sin(qJ(5));
t397 = t276 * t274;
t250 = t339 + t397;
t273 = sin(pkin(8));
t444 = cos(qJ(3));
t340 = t444 * t273;
t275 = cos(pkin(8));
t277 = sin(qJ(3));
t396 = t277 * t275;
t252 = t340 + t396;
t131 = t252 * t250;
t439 = pkin(7) + qJ(4);
t256 = t439 * t274;
t324 = t439 * t272;
t201 = t276 * t256 + t443 * t324;
t447 = t250 / 0.2e1;
t338 = t443 * t274;
t398 = t276 * t272;
t246 = -t338 + t398;
t451 = -t246 / 0.2e1;
t203 = t443 * t256 - t276 * t324;
t453 = t203 / 0.2e1;
t403 = t252 * t246;
t455 = -t403 / 0.2e1;
t248 = t277 * t273 - t444 * t275;
t267 = -t275 * pkin(2) - pkin(1);
t442 = t248 * pkin(3);
t301 = t267 + t442;
t440 = pkin(6) + qJ(2);
t325 = t440 * t273;
t317 = t277 * t325;
t257 = t440 * t275;
t341 = t444 * t257;
t204 = t341 - t317;
t399 = t272 * t204;
t278 = t248 * pkin(4) - t399 + (-t439 * t252 + t301) * t274;
t184 = t274 * t204;
t405 = t252 * qJ(4);
t285 = t301 - t405;
t101 = t272 * t285 + t184;
t177 = t272 * t252;
t85 = -pkin(7) * t177 + t101;
t50 = t276 * t85 - t443 * t278;
t51 = t276 * t278 + t443 * t85;
t466 = t131 * t453 - t201 * t455 - t50 * t447 - t51 * t451;
t221 = t252 * t398;
t319 = t252 * t338;
t173 = t319 - t221;
t76 = -t131 * t447 + t173 * t451;
t465 = t76 * qJD(5);
t464 = t131 * qJD(1);
t287 = -t397 / 0.2e1 - t339 / 0.2e1;
t352 = t250 * qJD(3);
t463 = -t76 * qJD(1) + t246 * t352;
t379 = qJD(1) * t173;
t462 = t76 * qJD(3) - t131 * t379;
t461 = t131 ^ 2;
t460 = t131 * t246;
t353 = t248 * qJD(1);
t334 = t131 * t353;
t242 = t248 ^ 2;
t243 = t252 ^ 2;
t459 = -t243 - t242;
t345 = t243 - t242;
t354 = t246 * qJD(3);
t457 = t354 + t464;
t362 = t131 * qJD(5);
t240 = t340 / 0.2e1 + t396 / 0.2e1;
t241 = t246 ^ 2;
t456 = t250 ^ 2;
t454 = t201 / 0.2e1;
t220 = t248 * t398;
t452 = t220 / 0.2e1;
t450 = t246 / 0.2e1;
t449 = -t248 / 0.2e1;
t448 = -t250 / 0.2e1;
t266 = -t274 * pkin(4) - pkin(3);
t446 = t266 / 0.2e1;
t36 = (t173 / 0.2e1 + t455) * t250 + t460;
t445 = t36 * qJD(4);
t441 = t252 * pkin(3);
t408 = t248 * qJ(4);
t185 = t408 + t441;
t202 = t277 * t257 + t444 * t325;
t400 = t272 * t202;
t121 = t274 * t185 + t400;
t84 = t274 * t248 * pkin(7) + t252 * pkin(4) + t121;
t436 = t276 * t84;
t183 = t274 * t202;
t122 = t272 * t185 - t183;
t175 = t272 * t248;
t91 = pkin(7) * t175 + t122;
t435 = t276 * t91;
t168 = t250 * t248;
t172 = -t248 * t338 + t220;
t343 = t443 * t84;
t54 = t343 - t435;
t342 = t443 * t91;
t55 = t342 + t436;
t4 = -t131 * t55 + t51 * t168 + t50 * t172 - t54 * t173;
t434 = t4 * qJD(1);
t157 = pkin(4) * t177 + t202;
t344 = pkin(4) * t175;
t158 = t204 - t344;
t7 = t157 * t158 - t50 * t54 + t51 * t55;
t431 = t7 * qJD(1);
t100 = t274 * t285 - t399;
t428 = t100 * t272;
t427 = t101 * t274;
t426 = t121 * t274;
t425 = t122 * t272;
t13 = t131 * t158 - t157 * t168 + t54 * t248 - t50 * t252;
t424 = t13 * qJD(1);
t14 = t157 * t172 + t158 * t173 - t55 * t248 - t51 * t252;
t423 = t14 * qJD(1);
t281 = -t168 * t454 + t172 * t453 + t252 * t446;
t299 = t55 * t448 + t54 * t450;
t15 = t281 + t299;
t422 = t15 * qJD(1);
t421 = t168 * t248;
t17 = t157 * t252 - t50 * t168 + t51 * t172;
t420 = t17 * qJD(1);
t419 = t172 * t131;
t418 = t172 * t246;
t417 = t172 * t248;
t416 = t173 * t168;
t415 = t173 * t252;
t18 = -t131 * t51 - t403 * t50;
t414 = t18 * qJD(1);
t308 = -t100 * t274 - t101 * t272;
t19 = (t425 + t426) * t252 + t308 * t248;
t413 = t19 * qJD(1);
t282 = t157 * t447 + t173 * t446 + t203 * t449;
t288 = -t435 / 0.2e1 + t343 / 0.2e1;
t20 = -t282 + t288;
t412 = t20 * qJD(1);
t411 = t202 * t252;
t283 = -t131 * t446 + t157 * t451 + t248 * t454;
t289 = -t436 / 0.2e1 - t342 / 0.2e1;
t21 = -t283 + t289;
t410 = t21 * qJD(1);
t24 = t100 * t121 + t101 * t122 + t202 * t204;
t409 = t24 * qJD(1);
t25 = -t131 * t157 + t50 * t248;
t407 = t25 * qJD(1);
t406 = t250 * t168;
t404 = t252 * t131;
t26 = t157 * t173 - t51 * t248;
t402 = t26 * qJD(1);
t27 = (t100 + t399) * t252 + (t121 - t400) * t248;
t401 = t27 * qJD(1);
t28 = (-t101 + t184) * t252 + (-t122 - t183) * t248;
t395 = t28 * qJD(1);
t35 = t411 + (-t427 + t428) * t248;
t394 = t35 * qJD(1);
t38 = -t406 - t418;
t393 = t38 * qJD(1);
t268 = t272 ^ 2;
t270 = t274 ^ 2;
t326 = -t268 / 0.2e1 - t270 / 0.2e1;
t284 = t326 * t408 - t441 / 0.2e1;
t297 = t426 / 0.2e1 + t425 / 0.2e1;
t52 = t284 - t297;
t392 = t52 * qJD(1);
t58 = t308 * t252;
t391 = t58 * qJD(1);
t66 = -t416 - t419;
t390 = t66 * qJD(1);
t67 = t416 - t419;
t389 = t67 * qJD(1);
t295 = -t131 * t448 + t403 * t450;
t68 = t295 + t240;
t388 = t68 * qJD(1);
t77 = -t404 + t421;
t387 = t77 * qJD(1);
t78 = t404 + t421;
t386 = t78 * qJD(1);
t79 = t415 + t417;
t385 = t79 * qJD(1);
t80 = t415 - t417;
t384 = t80 * qJD(1);
t93 = -t204 * t248 + t411;
t381 = t93 * qJD(1);
t258 = t268 + t270;
t259 = t273 ^ 2 + t275 ^ 2;
t378 = qJD(3) * t274;
t377 = qJD(4) * t248;
t115 = (t447 + t287) * t248;
t376 = t115 * qJD(1);
t375 = t115 * qJD(3);
t116 = (t447 - t287) * t248;
t104 = t116 * qJD(1);
t374 = t116 * qJD(3);
t315 = -t338 / 0.2e1;
t117 = t452 + (t315 + t450) * t248;
t373 = t117 * qJD(1);
t118 = t452 + (t315 + t451) * t248;
t372 = t118 * qJD(1);
t290 = t248 * t315 + t452;
t329 = t246 * t449;
t119 = t329 - t290;
t371 = t119 * qJD(1);
t123 = t258 * t243;
t370 = t123 * qJD(1);
t369 = t403 * qJD(1);
t314 = t326 * t252;
t151 = t314 - t240;
t367 = t151 * qJD(1);
t154 = t345 * t272;
t366 = t154 * qJD(1);
t155 = t459 * t272;
t365 = t155 * qJD(1);
t156 = t345 * t274;
t364 = t156 * qJD(1);
t363 = t345 * qJD(1);
t361 = t173 * qJD(5);
t360 = t177 * qJD(1);
t230 = t268 * t248;
t231 = t270 * t248;
t179 = t230 + t231;
t359 = t179 * qJD(1);
t180 = t459 * t274;
t358 = t180 * qJD(1);
t357 = t459 * qJD(1);
t356 = t204 * qJD(3);
t355 = t240 * qJD(1);
t236 = t246 * qJD(5);
t237 = t248 * qJD(3);
t351 = t250 * qJD(5);
t350 = t252 * qJD(1);
t349 = t252 * qJD(3);
t255 = t259 * qJ(2);
t348 = t255 * qJD(1);
t347 = t258 * qJD(3);
t346 = t259 * qJD(1);
t337 = t272 * t378;
t336 = t252 * t377;
t335 = t403 * t353;
t200 = t248 * t350;
t199 = t248 * t349;
t331 = t246 * t351;
t330 = t274 * t350;
t229 = t274 * t349;
t328 = t398 / 0.2e1;
t323 = t240 * qJD(5) + t200;
t322 = qJD(1) * t267 + qJD(2);
t321 = -qJD(5) - t353;
t320 = qJD(3) * t266 + qJD(4);
t318 = t248 * t330;
t313 = -t405 + t442;
t312 = t272 * t318;
t280 = t341 / 0.2e1 - t317 / 0.2e1;
t279 = -t344 / 0.2e1 + t280;
t11 = t279 + t466;
t92 = t250 * t201 - t203 * t246;
t311 = t11 * qJD(1) - t92 * qJD(3);
t65 = -t173 * t403 + t461;
t310 = t65 * qJD(1) + t36 * qJD(3);
t64 = -t250 * t173 + t460;
t70 = -t173 ^ 2 + t461;
t309 = t70 * qJD(1) + t64 * qJD(3);
t307 = -t121 * t272 + t122 * t274;
t165 = t241 - t456;
t306 = t64 * qJD(1) + t165 * qJD(3);
t186 = t241 + t456;
t305 = t36 * qJD(1) + t186 * qJD(3);
t94 = t221 / 0.2e1 + (t328 - t338) * t252;
t303 = t94 * qJD(1) - t352;
t254 = t258 * qJ(4);
t298 = -t428 / 0.2e1 + t427 / 0.2e1;
t56 = t280 - t298;
t302 = t56 * qJD(1) - t254 * qJD(3);
t232 = t240 * qJD(3);
t150 = t314 + t240;
t120 = t329 + t290;
t106 = t115 * qJD(5);
t105 = t116 * qJD(5);
t97 = t319 / 0.2e1 - t221 / 0.2e1 + (t328 + t315) * t252;
t89 = -t351 - t104;
t69 = -t295 + t240;
t63 = t64 * qJD(5);
t57 = t280 + t298;
t53 = t284 + t297;
t23 = t282 + t288;
t22 = t283 + t289;
t16 = t281 - t299;
t12 = t279 - t466;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259 * qJD(2), t255 * qJD(2), -t199, -t345 * qJD(3), 0, t199, 0, 0, t267 * t349, -t267 * t237, -t459 * qJD(2), t93 * qJD(2), -t270 * t199, 0.2e1 * t229 * t175, t156 * qJD(3), -t268 * t199, -t154 * qJD(3), t199, -t155 * qJD(2) + t27 * qJD(3) - t274 * t336, -t180 * qJD(2) + t28 * qJD(3) + t272 * t336, -t19 * qJD(3) + t123 * qJD(4), t35 * qJD(2) + t24 * qJD(3) + t58 * qJD(4), (qJD(3) * t172 - t362) * t173, t67 * qJD(3) + t70 * qJD(5), t79 * qJD(3) - t248 * t362, (-qJD(3) * t168 + t361) * t131, t77 * qJD(3) - t248 * t361, t199, t78 * qJD(2) + t13 * qJD(3) + t26 * qJD(5) + t377 * t403, t80 * qJD(2) + t14 * qJD(3) + t25 * qJD(5) + t131 * t377, t66 * qJD(2) + t4 * qJD(3) + t65 * qJD(4), t17 * qJD(2) + t7 * qJD(3) + t18 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t346, t348, 0, 0, 0, 0, 0, 0, 0, 0, -t357, t381, 0, 0, 0, 0, 0, 0, -t365, -t358, 0, t53 * qJD(3) + t150 * qJD(4) + t394, 0, 0, 0, 0, 0, 0, -t106 + t386, -t118 * qJD(5) + t384, t390, t420 + (-t168 * t246 + t172 * t250) * qJD(2) + t16 * qJD(3) + t69 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t200, -t363, -t237, t200, -t349, 0, t267 * t350 - t356, t202 * qJD(3) - t267 * t353, 0, 0, (-t270 * t350 - t337) * t248, 0.2e1 * t312 + (t230 - t231) * qJD(3), t272 * t349 + t364, (-t268 * t350 + t337) * t248, t229 - t366, t200, t401 + (t272 * t313 - t184) * qJD(3) - t175 * qJD(4), t272 * t356 + t395 + (qJD(3) * t313 - t377) * t274, qJD(3) * t307 - t413, t409 + t53 * qJD(2) + (-t204 * pkin(3) + qJ(4) * t307) * qJD(3) + t57 * qJD(4), t465 + (t352 + t379) * t172, t389 + (t406 - t418) * qJD(3) + t63, t120 * qJD(5) + t250 * t349 + t385, -t168 * t457 - t465, -t246 * t349 - t106 + t387, t323, t424 + (t158 * t246 - t266 * t168 - t201 * t252) * qJD(3) - t116 * qJD(4) + t23 * qJD(5), t423 + (t158 * t250 + t266 * t172 - t203 * t252) * qJD(3) - t119 * qJD(4) + t22 * qJD(5), t434 + (t203 * t168 + t201 * t172 - t55 * t246 - t54 * t250) * qJD(3) + t445, t431 + t16 * qJD(2) + (t158 * t266 - t54 * t201 + t55 * t203) * qJD(3) + t12 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t175 * qJD(3) - t318, (t272 * t350 - t378) * t248, t370, t150 * qJD(2) + t57 * qJD(3) + t391, 0, 0, 0, 0, 0, 0, t97 * qJD(5) + t335 - t374, -t119 * qJD(3) + t334, t310, t69 * qJD(2) + t12 * qJD(3) + t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t462, t309, t120 * qJD(3) + t131 * t321, -t462, t173 * t321 - t375, t232, -t115 * qJD(2) + t23 * qJD(3) + t97 * qJD(4) - t51 * qJD(5) + t402, -t118 * qJD(2) + t22 * qJD(3) + t50 * qJD(5) + t407, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t346, -t348, 0, 0, 0, 0, 0, 0, t349, -t237, t357, -t381, 0, 0, 0, 0, 0, 0, t229 + t365, -t177 * qJD(3) + t358, t179 * qJD(3), -t52 * qJD(3) + t151 * qJD(4) - t394, 0, 0, 0, 0, 0, 0, -qJD(3) * t403 - t105 - t386, -t131 * qJD(3) - t119 * qJD(5) - t384, -t38 * qJD(3) - t390, -t15 * qJD(3) - t68 * qJD(4) - t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t350, -t353, 0, 0, 0, 0, 0, 0, 0, 0, t330, -t360, t359, -t392, 0, 0, 0, 0, 0, 0, -t369, -t464, -t393, -t422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, t236 - t371, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t200, t363, 0, -t200, 0, 0, -t322 * t252, t322 * t248, 0, 0, t270 * t200, -0.2e1 * t312, -t364, t268 * t200, t366, -t200, -t274 * t252 * qJD(2) - t401, t177 * qJD(2) - t395, -t179 * qJD(2) + t413, t52 * qJD(2) - t56 * qJD(4) - t409, -t172 * t379 + t465, t63 - t389, -t117 * qJD(5) - t385, t168 * t464 - t465, -t105 - t387, -t323, qJD(2) * t403 - t115 * qJD(4) - t20 * qJD(5) - t424, t131 * qJD(2) - t118 * qJD(4) - t21 * qJD(5) - t423, t38 * qJD(2) - t434 + t445, qJD(2) * t15 - qJD(4) * t11 - t431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t350, t353, 0, 0, 0, 0, 0, 0, 0, 0, -t330, t360, -t359, t392, 0, 0, 0, 0, 0, 0, t369, t464, t393, t422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258 * qJD(4), t254 * qJD(4), -t331, t165 * qJD(5), 0, t331, 0, 0, t266 * t351, -t266 * t236, t186 * qJD(4), t92 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t347, -t302, 0, 0, 0, 0, 0, 0, -t376, -t372, t305, -t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t463, t306, -t236 - t373, t463, t89, -t355, -t203 * qJD(5) + t266 * t352 - t412, t201 * qJD(5) - t266 * t354 - t410, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t318, -t272 * t200, -t370, -t151 * qJD(2) + t56 * qJD(3) - t391, 0, 0, 0, 0, 0, 0, -t94 * qJD(5) - t335 + t375, t118 * qJD(3) - t334 - t362, -t310, t68 * qJD(2) + t11 * qJD(3) - t414; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367, 0, 0, 0, 0, 0, 0, 0, 0, 0, t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t347, t302, 0, 0, 0, 0, 0, 0, t351 + t376, -t236 + t372, -t305, t311; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t303, -t457, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t462, -t309, t117 * qJD(3) + t334, t462, t173 * t353 + t374, t232, t116 * qJD(2) + t20 * qJD(3) + t94 * qJD(4) - t402, t119 * qJD(2) + t21 * qJD(3) + qJD(4) * t131 - t407, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, t371, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t463, -t306, t373, -t463, t104, t355, -t250 * t320 + t412, t246 * t320 + t410, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t303, t457, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
