% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPRPR12
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:31
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPRPR12_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR12_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR12_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR12_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR12_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR12_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:31:00
% EndTime: 2019-12-31 18:31:04
% DurationCPUTime: 3.59s
% Computational Cost: add. (19473->245), mult. (48544->337), div. (0->0), fcn. (36412->10), ass. (0->190)
t1542 = qJD(1) ^ 2;
t1538 = sin(qJ(1));
t1541 = cos(qJ(1));
t1518 = t1538 * g(1) - t1541 * g(2);
t1552 = -qJDD(2) + t1518;
t1535 = cos(pkin(8));
t1556 = pkin(2) * t1535 + pkin(1);
t1533 = sin(pkin(8));
t1528 = t1533 ^ 2;
t1529 = t1535 ^ 2;
t1561 = t1528 + t1529;
t1484 = t1556 * qJDD(1) + (t1561 * pkin(6) + qJ(2)) * t1542 + t1552;
t1515 = t1561 * t1542;
t1537 = sin(qJ(3));
t1540 = cos(qJ(3));
t1509 = (t1533 * t1537 - t1535 * t1540) * qJD(1);
t1506 = qJD(5) + t1509;
t1583 = qJD(5) + t1506;
t1550 = t1533 * t1540 + t1535 * t1537;
t1582 = t1550 * qJDD(1);
t1579 = qJD(3) ^ 2;
t1511 = t1550 * qJD(1);
t1532 = sin(pkin(9));
t1534 = cos(pkin(9));
t1498 = -t1534 * qJD(3) + t1532 * t1511;
t1500 = t1532 * qJD(3) + t1534 * t1511;
t1536 = sin(qJ(5));
t1539 = cos(qJ(5));
t1468 = t1539 * t1498 + t1536 * t1500;
t1578 = t1468 ^ 2;
t1470 = -t1536 * t1498 + t1539 * t1500;
t1577 = t1470 ^ 2;
t1576 = t1498 ^ 2;
t1575 = t1500 ^ 2;
t1574 = t1506 ^ 2;
t1491 = t1509 ^ 2;
t1573 = t1511 ^ 2;
t1572 = -2 * qJD(4);
t1571 = t1535 * g(3);
t1570 = qJD(2) * qJD(1);
t1569 = t1470 * t1468;
t1568 = t1500 * t1498;
t1567 = t1509 * qJD(3);
t1566 = t1509 * t1498;
t1565 = t1509 * t1500;
t1505 = t1511 * qJD(3);
t1564 = t1511 * t1509;
t1563 = t1529 * t1542;
t1562 = qJD(5) - t1506;
t1553 = t1541 * g(1) + t1538 * g(2);
t1546 = -t1542 * pkin(1) + qJDD(1) * qJ(2) - t1553;
t1493 = -t1533 * g(3) + (t1546 + 0.2e1 * t1570) * t1535;
t1525 = t1535 * qJDD(1);
t1480 = -pkin(2) * t1563 + pkin(6) * t1525 + t1493;
t1557 = -0.2e1 * t1570;
t1545 = -t1571 + (t1557 + t1556 * t1542 + (-pkin(6) - qJ(2)) * qJDD(1) + t1553) * t1533;
t1448 = t1540 * t1480 + t1537 * t1545;
t1560 = t1533 * qJDD(1);
t1559 = t1538 * qJDD(1);
t1558 = t1541 * qJDD(1);
t1482 = t1509 * pkin(3) - t1511 * qJ(4);
t1436 = -t1579 * pkin(3) + qJDD(3) * qJ(4) - t1509 * t1482 + t1448;
t1551 = -t1540 * t1525 + t1537 * t1560;
t1488 = t1505 + t1551;
t1490 = t1582 - t1567;
t1443 = (-t1490 + t1567) * qJ(4) + (t1488 + t1505) * pkin(3) - t1484;
t1407 = t1534 * t1436 + t1532 * t1443 + t1498 * t1572;
t1447 = -t1537 * t1480 + t1540 * t1545;
t1479 = t1532 * qJDD(3) + t1534 * t1490;
t1554 = -t1534 * qJDD(3) + t1532 * t1490;
t1555 = -t1536 * t1479 - t1539 * t1554;
t1453 = -t1479 - t1566;
t1454 = t1488 - t1568;
t1406 = -t1532 * t1436 + t1534 * t1443 + t1500 * t1572;
t1548 = -qJDD(5) - t1488;
t1547 = -t1539 * t1479 + t1536 * t1554;
t1435 = -qJDD(3) * pkin(3) - t1579 * qJ(4) + t1511 * t1482 + qJDD(4) - t1447;
t1520 = t1535 * t1542 * t1533;
t1517 = -t1541 * t1542 - t1559;
t1516 = -t1538 * t1542 + t1558;
t1514 = t1561 * qJDD(1);
t1513 = t1535 * t1515;
t1512 = t1533 * t1515;
t1507 = qJDD(1) * pkin(1) + t1542 * qJ(2) + t1552;
t1501 = -t1573 - t1579;
t1492 = -t1571 + (-t1546 + t1557) * t1533;
t1489 = t1582 - 0.2e1 * t1567;
t1487 = 0.2e1 * t1505 + t1551;
t1486 = -qJDD(3) - t1564;
t1485 = qJDD(3) - t1564;
t1483 = -t1491 - t1579;
t1478 = t1509 * pkin(4) - t1500 * pkin(7);
t1472 = -t1573 - t1491;
t1471 = -t1488 + t1505;
t1467 = -t1491 - t1575;
t1466 = t1540 * t1486 - t1537 * t1501;
t1465 = t1537 * t1486 + t1540 * t1501;
t1464 = -t1491 - t1576;
t1463 = -t1533 * t1492 + t1535 * t1493;
t1462 = t1535 * t1492 + t1533 * t1493;
t1460 = t1540 * t1471 + t1537 * t1582;
t1459 = t1537 * t1471 - t1540 * t1582;
t1458 = t1540 * t1483 - t1537 * t1485;
t1457 = t1537 * t1483 + t1540 * t1485;
t1456 = -t1575 - t1576;
t1455 = -t1488 - t1568;
t1452 = t1479 - t1566;
t1451 = -t1554 + t1565;
t1450 = t1554 + t1565;
t1449 = -t1574 - t1577;
t1446 = -t1533 * t1465 + t1535 * t1466;
t1445 = t1535 * t1465 + t1533 * t1466;
t1444 = -t1574 - t1578;
t1440 = t1548 - t1569;
t1439 = -t1548 - t1569;
t1438 = t1534 * t1455 - t1532 * t1467;
t1437 = t1532 * t1455 + t1534 * t1467;
t1433 = -t1533 * t1459 + t1535 * t1460;
t1432 = t1535 * t1459 + t1533 * t1460;
t1431 = -t1532 * t1454 + t1534 * t1464;
t1430 = t1534 * t1454 + t1532 * t1464;
t1429 = -t1533 * t1457 + t1535 * t1458;
t1428 = t1535 * t1457 + t1533 * t1458;
t1427 = -t1577 - t1578;
t1426 = t1534 * t1451 - t1532 * t1453;
t1425 = t1532 * t1451 + t1534 * t1453;
t1424 = -t1537 * t1447 + t1540 * t1448;
t1423 = t1540 * t1447 + t1537 * t1448;
t1422 = t1562 * t1468 + t1547;
t1421 = -t1583 * t1468 - t1547;
t1420 = -t1562 * t1470 + t1555;
t1419 = t1583 * t1470 - t1555;
t1418 = t1540 * t1438 + t1537 * t1452;
t1417 = t1537 * t1438 - t1540 * t1452;
t1416 = t1539 * t1440 - t1536 * t1449;
t1415 = t1536 * t1440 + t1539 * t1449;
t1414 = t1540 * t1431 + t1537 * t1450;
t1413 = t1537 * t1431 - t1540 * t1450;
t1412 = t1540 * t1426 + t1537 * t1456;
t1411 = t1537 * t1426 - t1540 * t1456;
t1410 = -t1536 * t1439 + t1539 * t1444;
t1409 = t1539 * t1439 + t1536 * t1444;
t1408 = t1554 * pkin(4) - t1576 * pkin(7) + t1500 * t1478 + t1435;
t1405 = -t1533 * t1423 + t1535 * t1424;
t1404 = t1535 * t1423 + t1533 * t1424;
t1403 = t1539 * t1420 - t1536 * t1422;
t1402 = t1536 * t1420 + t1539 * t1422;
t1401 = -t1576 * pkin(4) - t1554 * pkin(7) - t1509 * t1478 + t1407;
t1400 = -t1533 * t1417 + t1535 * t1418;
t1399 = t1535 * t1417 + t1533 * t1418;
t1398 = t1454 * pkin(4) + t1453 * pkin(7) + t1406;
t1397 = -t1532 * t1415 + t1534 * t1416;
t1396 = t1534 * t1415 + t1532 * t1416;
t1395 = -t1533 * t1413 + t1535 * t1414;
t1394 = t1535 * t1413 + t1533 * t1414;
t1393 = -t1533 * t1411 + t1535 * t1412;
t1392 = t1535 * t1411 + t1533 * t1412;
t1391 = -t1532 * t1409 + t1534 * t1410;
t1390 = t1534 * t1409 + t1532 * t1410;
t1389 = -t1532 * t1406 + t1534 * t1407;
t1388 = t1534 * t1406 + t1532 * t1407;
t1387 = t1540 * t1397 + t1537 * t1421;
t1386 = t1537 * t1397 - t1540 * t1421;
t1385 = t1540 * t1391 + t1537 * t1419;
t1384 = t1537 * t1391 - t1540 * t1419;
t1383 = t1540 * t1389 + t1537 * t1435;
t1382 = t1537 * t1389 - t1540 * t1435;
t1381 = -t1532 * t1402 + t1534 * t1403;
t1380 = t1534 * t1402 + t1532 * t1403;
t1379 = t1536 * t1398 + t1539 * t1401;
t1378 = t1539 * t1398 - t1536 * t1401;
t1377 = t1540 * t1381 + t1537 * t1427;
t1376 = t1537 * t1381 - t1540 * t1427;
t1375 = -t1533 * t1386 + t1535 * t1387;
t1374 = t1535 * t1386 + t1533 * t1387;
t1373 = -t1533 * t1384 + t1535 * t1385;
t1372 = t1535 * t1384 + t1533 * t1385;
t1371 = -t1533 * t1382 + t1535 * t1383;
t1370 = t1535 * t1382 + t1533 * t1383;
t1369 = -t1536 * t1378 + t1539 * t1379;
t1368 = t1539 * t1378 + t1536 * t1379;
t1367 = -t1533 * t1376 + t1535 * t1377;
t1366 = t1535 * t1376 + t1533 * t1377;
t1365 = -t1532 * t1368 + t1534 * t1369;
t1364 = t1534 * t1368 + t1532 * t1369;
t1363 = t1540 * t1365 + t1537 * t1408;
t1362 = t1537 * t1365 - t1540 * t1408;
t1361 = -t1533 * t1362 + t1535 * t1363;
t1360 = t1535 * t1362 + t1533 * t1363;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1517, -t1516, 0, -t1538 * t1518 - t1541 * t1553, 0, 0, 0, 0, 0, 0, -t1541 * t1513 - t1535 * t1559, t1541 * t1512 + t1533 * t1559, t1541 * t1514 - t1538 * t1515, t1541 * t1463 - t1538 * t1507, 0, 0, 0, 0, 0, 0, t1541 * t1429 + t1538 * t1487, t1541 * t1446 + t1538 * t1489, t1541 * t1433 + t1538 * t1472, t1541 * t1405 - t1538 * t1484, 0, 0, 0, 0, 0, 0, t1541 * t1395 + t1538 * t1430, t1541 * t1400 + t1538 * t1437, t1541 * t1393 + t1538 * t1425, t1541 * t1371 + t1538 * t1388, 0, 0, 0, 0, 0, 0, t1541 * t1373 + t1538 * t1390, t1541 * t1375 + t1538 * t1396, t1541 * t1367 + t1538 * t1380, t1541 * t1361 + t1538 * t1364; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1516, t1517, 0, t1541 * t1518 - t1538 * t1553, 0, 0, 0, 0, 0, 0, -t1538 * t1513 + t1535 * t1558, t1538 * t1512 - t1533 * t1558, t1538 * t1514 + t1541 * t1515, t1538 * t1463 + t1541 * t1507, 0, 0, 0, 0, 0, 0, t1538 * t1429 - t1541 * t1487, t1538 * t1446 - t1541 * t1489, t1538 * t1433 - t1541 * t1472, t1538 * t1405 + t1541 * t1484, 0, 0, 0, 0, 0, 0, t1538 * t1395 - t1541 * t1430, t1538 * t1400 - t1541 * t1437, t1538 * t1393 - t1541 * t1425, t1538 * t1371 - t1541 * t1388, 0, 0, 0, 0, 0, 0, t1538 * t1373 - t1541 * t1390, t1538 * t1375 - t1541 * t1396, t1538 * t1367 - t1541 * t1380, t1538 * t1361 - t1541 * t1364; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1462, 0, 0, 0, 0, 0, 0, t1428, t1445, t1432, t1404, 0, 0, 0, 0, 0, 0, t1394, t1399, t1392, t1370, 0, 0, 0, 0, 0, 0, t1372, t1374, t1366, t1360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1542, -qJDD(1), 0, -t1553, 0, 0, 0, 0, 0, 0, -t1513, t1512, t1514, t1463, 0, 0, 0, 0, 0, 0, t1429, t1446, t1433, t1405, 0, 0, 0, 0, 0, 0, t1395, t1400, t1393, t1371, 0, 0, 0, 0, 0, 0, t1373, t1375, t1367, t1361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1542, 0, t1518, 0, 0, 0, 0, 0, 0, t1525, -t1560, t1515, t1507, 0, 0, 0, 0, 0, 0, -t1487, -t1489, -t1472, t1484, 0, 0, 0, 0, 0, 0, -t1430, -t1437, -t1425, -t1388, 0, 0, 0, 0, 0, 0, -t1390, -t1396, -t1380, -t1364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1462, 0, 0, 0, 0, 0, 0, t1428, t1445, t1432, t1404, 0, 0, 0, 0, 0, 0, t1394, t1399, t1392, t1370, 0, 0, 0, 0, 0, 0, t1372, t1374, t1366, t1360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1563, t1520, t1525, t1493, 0, 0, 0, 0, 0, 0, t1458, t1466, t1460, t1424, 0, 0, 0, 0, 0, 0, t1414, t1418, t1412, t1383, 0, 0, 0, 0, 0, 0, t1385, t1387, t1377, t1363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1520, -t1528 * t1542, -t1560, t1492, 0, 0, 0, 0, 0, 0, t1457, t1465, t1459, t1423, 0, 0, 0, 0, 0, 0, t1413, t1417, t1411, t1382, 0, 0, 0, 0, 0, 0, t1384, t1386, t1376, t1362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1525, t1560, -t1515, -t1507, 0, 0, 0, 0, 0, 0, t1487, t1489, t1472, -t1484, 0, 0, 0, 0, 0, 0, t1430, t1437, t1425, t1388, 0, 0, 0, 0, 0, 0, t1390, t1396, t1380, t1364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1483, t1486, t1471, t1448, 0, 0, 0, 0, 0, 0, t1431, t1438, t1426, t1389, 0, 0, 0, 0, 0, 0, t1391, t1397, t1381, t1365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1485, t1501, -t1582, t1447, 0, 0, 0, 0, 0, 0, -t1450, -t1452, -t1456, -t1435, 0, 0, 0, 0, 0, 0, -t1419, -t1421, -t1427, -t1408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1487, t1489, t1472, -t1484, 0, 0, 0, 0, 0, 0, t1430, t1437, t1425, t1388, 0, 0, 0, 0, 0, 0, t1390, t1396, t1380, t1364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1464, t1455, t1451, t1407, 0, 0, 0, 0, 0, 0, t1410, t1416, t1403, t1369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1454, t1467, t1453, t1406, 0, 0, 0, 0, 0, 0, t1409, t1415, t1402, t1368; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1450, t1452, t1456, t1435, 0, 0, 0, 0, 0, 0, t1419, t1421, t1427, t1408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1444, t1440, t1420, t1379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1439, t1449, t1422, t1378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1419, t1421, t1427, t1408;];
f_new_reg = t1;
