% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRPPR6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:34
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRPPR6_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR6_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR6_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPPR6_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPPR6_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPPR6_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:33:57
% EndTime: 2019-12-31 19:34:01
% DurationCPUTime: 3.60s
% Computational Cost: add. (21453->254), mult. (51260->354), div. (0->0), fcn. (36334->10), ass. (0->201)
t1607 = sin(pkin(8));
t1609 = cos(pkin(8));
t1614 = cos(qJ(2));
t1645 = qJD(1) * t1614;
t1611 = sin(qJ(2));
t1646 = qJD(1) * t1611;
t1573 = t1607 * t1646 - t1609 * t1645;
t1572 = qJD(5) + t1573;
t1655 = qJD(5) + t1572;
t1600 = t1614 * qJDD(1);
t1632 = qJD(2) * t1646;
t1581 = t1600 - t1632;
t1604 = t1614 ^ 2;
t1617 = qJD(1) ^ 2;
t1623 = qJD(2) * pkin(2) - qJ(3) * t1646;
t1612 = sin(qJ(1));
t1615 = cos(qJ(1));
t1589 = t1612 * g(1) - t1615 * g(2);
t1624 = qJDD(1) * pkin(1) + t1589;
t1537 = t1581 * pkin(2) + (qJ(3) * t1604 + pkin(6)) * t1617 - t1623 * t1646 - qJDD(3) + t1624;
t1575 = t1607 * t1645 + t1609 * t1646;
t1606 = sin(pkin(9));
t1608 = cos(pkin(9));
t1559 = -t1608 * qJD(2) + t1606 * t1575;
t1561 = t1606 * qJD(2) + t1608 * t1575;
t1610 = sin(qJ(5));
t1613 = cos(qJ(5));
t1530 = t1613 * t1559 + t1610 * t1561;
t1654 = t1530 ^ 2;
t1532 = -t1610 * t1559 + t1613 * t1561;
t1653 = t1532 ^ 2;
t1652 = t1559 ^ 2;
t1651 = t1561 ^ 2;
t1650 = t1572 ^ 2;
t1552 = t1573 ^ 2;
t1649 = t1575 ^ 2;
t1648 = -2 * qJD(3);
t1647 = -2 * qJD(4);
t1644 = qJD(2) * t1573;
t1643 = qJD(2) * t1575;
t1642 = t1532 * t1530;
t1641 = t1561 * t1559;
t1640 = t1573 * t1559;
t1639 = t1573 * t1561;
t1638 = t1575 * t1573;
t1637 = t1604 * t1617;
t1636 = t1611 * t1617;
t1635 = qJD(5) - t1572;
t1603 = t1611 ^ 2;
t1634 = t1603 + t1604;
t1633 = t1611 * qJDD(1);
t1631 = qJD(2) * t1645;
t1590 = -t1615 * g(1) - t1612 * g(2);
t1621 = -t1617 * pkin(1) + qJDD(1) * pkin(6) + t1590;
t1567 = -t1611 * g(3) + t1614 * t1621;
t1534 = -pkin(2) * t1637 + t1581 * qJ(3) - qJD(2) * t1623 + t1567;
t1580 = t1631 + t1633;
t1619 = t1611 * t1621;
t1618 = -t1619 - t1580 * qJ(3) + qJDD(2) * pkin(2) + (qJD(2) * qJ(3) * qJD(1) + pkin(2) * t1636 - g(3)) * t1614;
t1507 = t1609 * t1534 + t1573 * t1648 + t1607 * t1618;
t1548 = t1573 * pkin(3) - t1575 * qJ(4);
t1616 = qJD(2) ^ 2;
t1491 = -t1616 * pkin(3) + qJDD(2) * qJ(4) - t1573 * t1548 + t1507;
t1553 = t1607 * t1580 - t1609 * t1581;
t1539 = t1553 + t1643;
t1554 = t1609 * t1580 + t1607 * t1581;
t1629 = -t1554 + t1644;
t1501 = t1539 * pkin(3) + t1629 * qJ(4) - t1537;
t1469 = t1608 * t1491 + t1606 * t1501 + t1559 * t1647;
t1628 = t1607 * t1534 - t1609 * t1618;
t1547 = t1606 * qJDD(2) + t1608 * t1554;
t1626 = -t1608 * qJDD(2) + t1606 * t1554;
t1627 = -t1610 * t1547 - t1613 * t1626;
t1517 = -t1547 - t1640;
t1518 = t1553 - t1641;
t1468 = -t1606 * t1491 + t1608 * t1501 + t1561 * t1647;
t1625 = -qJDD(5) - t1553;
t1622 = -t1613 * t1547 + t1610 * t1626;
t1490 = qJDD(4) - t1616 * qJ(4) - qJDD(2) * pkin(3) + ((2 * qJD(3)) + t1548) * t1575 + t1628;
t1596 = t1614 * t1636;
t1595 = -t1616 - t1637;
t1594 = -t1603 * t1617 - t1616;
t1588 = -qJDD(2) + t1596;
t1587 = qJDD(2) + t1596;
t1586 = t1634 * t1617;
t1585 = -t1612 * qJDD(1) - t1615 * t1617;
t1584 = t1615 * qJDD(1) - t1612 * t1617;
t1583 = t1634 * qJDD(1);
t1582 = t1600 - 0.2e1 * t1632;
t1579 = 0.2e1 * t1631 + t1633;
t1577 = t1617 * pkin(6) + t1624;
t1568 = -t1616 - t1649;
t1566 = -t1614 * g(3) - t1619;
t1565 = t1614 * t1588 - t1611 * t1594;
t1564 = -t1611 * t1587 + t1614 * t1595;
t1563 = t1611 * t1588 + t1614 * t1594;
t1562 = t1614 * t1587 + t1611 * t1595;
t1551 = -qJDD(2) - t1638;
t1550 = qJDD(2) - t1638;
t1549 = -t1552 - t1616;
t1543 = t1573 * pkin(4) - t1561 * pkin(7);
t1542 = -t1554 - t1644;
t1540 = -t1553 + t1643;
t1538 = -t1649 - t1552;
t1536 = -t1611 * t1566 + t1614 * t1567;
t1535 = t1614 * t1566 + t1611 * t1567;
t1527 = -t1552 - t1651;
t1526 = t1609 * t1551 - t1607 * t1568;
t1525 = t1607 * t1551 + t1609 * t1568;
t1524 = -t1552 - t1652;
t1522 = -t1651 - t1652;
t1521 = t1609 * t1549 - t1607 * t1550;
t1520 = t1607 * t1549 + t1609 * t1550;
t1519 = -t1553 - t1641;
t1516 = t1547 - t1640;
t1515 = -t1626 + t1639;
t1514 = t1626 + t1639;
t1513 = -t1650 - t1653;
t1512 = t1609 * t1540 - t1607 * t1542;
t1511 = t1607 * t1540 + t1609 * t1542;
t1510 = -t1611 * t1525 + t1614 * t1526;
t1509 = t1614 * t1525 + t1611 * t1526;
t1508 = -t1650 - t1654;
t1506 = t1575 * t1648 - t1628;
t1505 = t1625 - t1642;
t1504 = -t1625 - t1642;
t1503 = t1608 * t1519 - t1606 * t1527;
t1502 = t1606 * t1519 + t1608 * t1527;
t1498 = -t1606 * t1518 + t1608 * t1524;
t1497 = t1608 * t1518 + t1606 * t1524;
t1496 = -t1611 * t1520 + t1614 * t1521;
t1495 = t1614 * t1520 + t1611 * t1521;
t1494 = t1608 * t1515 - t1606 * t1517;
t1493 = t1606 * t1515 + t1608 * t1517;
t1492 = -t1653 - t1654;
t1488 = -t1611 * t1511 + t1614 * t1512;
t1487 = t1614 * t1511 + t1611 * t1512;
t1486 = t1635 * t1530 + t1622;
t1485 = -t1655 * t1530 - t1622;
t1484 = -t1635 * t1532 + t1627;
t1483 = t1655 * t1532 - t1627;
t1482 = t1609 * t1503 + t1607 * t1516;
t1481 = t1607 * t1503 - t1609 * t1516;
t1480 = t1609 * t1498 + t1607 * t1514;
t1479 = t1607 * t1498 - t1609 * t1514;
t1478 = t1613 * t1505 - t1610 * t1513;
t1477 = t1610 * t1505 + t1613 * t1513;
t1476 = t1609 * t1494 + t1607 * t1522;
t1475 = t1607 * t1494 - t1609 * t1522;
t1474 = -t1607 * t1506 + t1609 * t1507;
t1473 = t1609 * t1506 + t1607 * t1507;
t1472 = -t1610 * t1504 + t1613 * t1508;
t1471 = t1613 * t1504 + t1610 * t1508;
t1470 = t1626 * pkin(4) - t1652 * pkin(7) + t1561 * t1543 + t1490;
t1467 = t1613 * t1484 - t1610 * t1486;
t1466 = t1610 * t1484 + t1613 * t1486;
t1465 = -t1611 * t1481 + t1614 * t1482;
t1464 = t1614 * t1481 + t1611 * t1482;
t1463 = -t1611 * t1479 + t1614 * t1480;
t1462 = t1614 * t1479 + t1611 * t1480;
t1461 = -t1606 * t1477 + t1608 * t1478;
t1460 = t1608 * t1477 + t1606 * t1478;
t1459 = -t1652 * pkin(4) - t1626 * pkin(7) - t1573 * t1543 + t1469;
t1458 = -t1611 * t1475 + t1614 * t1476;
t1457 = t1614 * t1475 + t1611 * t1476;
t1456 = t1518 * pkin(4) + t1517 * pkin(7) + t1468;
t1455 = -t1611 * t1473 + t1614 * t1474;
t1454 = t1614 * t1473 + t1611 * t1474;
t1453 = -t1606 * t1471 + t1608 * t1472;
t1452 = t1608 * t1471 + t1606 * t1472;
t1451 = t1609 * t1461 + t1607 * t1485;
t1450 = t1607 * t1461 - t1609 * t1485;
t1449 = -t1606 * t1468 + t1608 * t1469;
t1448 = t1608 * t1468 + t1606 * t1469;
t1447 = t1609 * t1453 + t1607 * t1483;
t1446 = t1607 * t1453 - t1609 * t1483;
t1445 = -t1606 * t1466 + t1608 * t1467;
t1444 = t1608 * t1466 + t1606 * t1467;
t1443 = t1609 * t1449 + t1607 * t1490;
t1442 = t1607 * t1449 - t1609 * t1490;
t1441 = t1610 * t1456 + t1613 * t1459;
t1440 = t1613 * t1456 - t1610 * t1459;
t1439 = t1609 * t1445 + t1607 * t1492;
t1438 = t1607 * t1445 - t1609 * t1492;
t1437 = -t1611 * t1450 + t1614 * t1451;
t1436 = t1614 * t1450 + t1611 * t1451;
t1435 = -t1611 * t1446 + t1614 * t1447;
t1434 = t1614 * t1446 + t1611 * t1447;
t1433 = -t1611 * t1442 + t1614 * t1443;
t1432 = t1614 * t1442 + t1611 * t1443;
t1431 = -t1610 * t1440 + t1613 * t1441;
t1430 = t1613 * t1440 + t1610 * t1441;
t1429 = -t1611 * t1438 + t1614 * t1439;
t1428 = t1614 * t1438 + t1611 * t1439;
t1427 = -t1606 * t1430 + t1608 * t1431;
t1426 = t1608 * t1430 + t1606 * t1431;
t1425 = t1609 * t1427 + t1607 * t1470;
t1424 = t1607 * t1427 - t1609 * t1470;
t1423 = -t1611 * t1424 + t1614 * t1425;
t1422 = t1614 * t1424 + t1611 * t1425;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1585, -t1584, 0, -t1612 * t1589 + t1615 * t1590, 0, 0, 0, 0, 0, 0, t1615 * t1564 - t1612 * t1582, t1615 * t1565 + t1612 * t1579, t1615 * t1583 - t1612 * t1586, t1615 * t1536 - t1612 * t1577, 0, 0, 0, 0, 0, 0, t1615 * t1496 + t1612 * t1539, t1615 * t1510 - t1612 * t1629, t1615 * t1488 + t1612 * t1538, t1615 * t1455 - t1612 * t1537, 0, 0, 0, 0, 0, 0, t1615 * t1463 + t1612 * t1497, t1615 * t1465 + t1612 * t1502, t1615 * t1458 + t1612 * t1493, t1615 * t1433 + t1612 * t1448, 0, 0, 0, 0, 0, 0, t1615 * t1435 + t1612 * t1452, t1615 * t1437 + t1612 * t1460, t1615 * t1429 + t1612 * t1444, t1615 * t1423 + t1612 * t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1584, t1585, 0, t1615 * t1589 + t1612 * t1590, 0, 0, 0, 0, 0, 0, t1612 * t1564 + t1615 * t1582, t1612 * t1565 - t1615 * t1579, t1612 * t1583 + t1615 * t1586, t1612 * t1536 + t1615 * t1577, 0, 0, 0, 0, 0, 0, t1612 * t1496 - t1615 * t1539, t1612 * t1510 + t1615 * t1629, t1612 * t1488 - t1615 * t1538, t1612 * t1455 + t1615 * t1537, 0, 0, 0, 0, 0, 0, t1612 * t1463 - t1615 * t1497, t1612 * t1465 - t1615 * t1502, t1612 * t1458 - t1615 * t1493, t1612 * t1433 - t1615 * t1448, 0, 0, 0, 0, 0, 0, t1612 * t1435 - t1615 * t1452, t1612 * t1437 - t1615 * t1460, t1612 * t1429 - t1615 * t1444, t1612 * t1423 - t1615 * t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1562, t1563, 0, t1535, 0, 0, 0, 0, 0, 0, t1495, t1509, t1487, t1454, 0, 0, 0, 0, 0, 0, t1462, t1464, t1457, t1432, 0, 0, 0, 0, 0, 0, t1434, t1436, t1428, t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1617, -qJDD(1), 0, t1590, 0, 0, 0, 0, 0, 0, t1564, t1565, t1583, t1536, 0, 0, 0, 0, 0, 0, t1496, t1510, t1488, t1455, 0, 0, 0, 0, 0, 0, t1463, t1465, t1458, t1433, 0, 0, 0, 0, 0, 0, t1435, t1437, t1429, t1423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1617, 0, t1589, 0, 0, 0, 0, 0, 0, t1582, -t1579, t1586, t1577, 0, 0, 0, 0, 0, 0, -t1539, t1629, -t1538, t1537, 0, 0, 0, 0, 0, 0, -t1497, -t1502, -t1493, -t1448, 0, 0, 0, 0, 0, 0, -t1452, -t1460, -t1444, -t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1562, t1563, 0, t1535, 0, 0, 0, 0, 0, 0, t1495, t1509, t1487, t1454, 0, 0, 0, 0, 0, 0, t1462, t1464, t1457, t1432, 0, 0, 0, 0, 0, 0, t1434, t1436, t1428, t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1595, t1588, t1600, t1567, 0, 0, 0, 0, 0, 0, t1521, t1526, t1512, t1474, 0, 0, 0, 0, 0, 0, t1480, t1482, t1476, t1443, 0, 0, 0, 0, 0, 0, t1447, t1451, t1439, t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1587, t1594, -t1633, t1566, 0, 0, 0, 0, 0, 0, t1520, t1525, t1511, t1473, 0, 0, 0, 0, 0, 0, t1479, t1481, t1475, t1442, 0, 0, 0, 0, 0, 0, t1446, t1450, t1438, t1424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1582, t1579, -t1586, -t1577, 0, 0, 0, 0, 0, 0, t1539, -t1629, t1538, -t1537, 0, 0, 0, 0, 0, 0, t1497, t1502, t1493, t1448, 0, 0, 0, 0, 0, 0, t1452, t1460, t1444, t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1549, t1551, t1540, t1507, 0, 0, 0, 0, 0, 0, t1498, t1503, t1494, t1449, 0, 0, 0, 0, 0, 0, t1453, t1461, t1445, t1427; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1550, t1568, t1542, t1506, 0, 0, 0, 0, 0, 0, -t1514, -t1516, -t1522, -t1490, 0, 0, 0, 0, 0, 0, -t1483, -t1485, -t1492, -t1470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1539, -t1629, t1538, -t1537, 0, 0, 0, 0, 0, 0, t1497, t1502, t1493, t1448, 0, 0, 0, 0, 0, 0, t1452, t1460, t1444, t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, t1519, t1515, t1469, 0, 0, 0, 0, 0, 0, t1472, t1478, t1467, t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1518, t1527, t1517, t1468, 0, 0, 0, 0, 0, 0, t1471, t1477, t1466, t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1514, t1516, t1522, t1490, 0, 0, 0, 0, 0, 0, t1483, t1485, t1492, t1470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1508, t1505, t1484, t1441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1504, t1513, t1486, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1483, t1485, t1492, t1470;];
f_new_reg = t1;
