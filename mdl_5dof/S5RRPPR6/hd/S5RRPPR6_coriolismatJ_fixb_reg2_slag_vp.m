% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d5,theta3,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:34
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPPR6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPPR6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPPR6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPPR6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:33:12
% EndTime: 2019-12-31 19:33:27
% DurationCPUTime: 6.69s
% Computational Cost: add. (9668->392), mult. (19043->542), div. (0->0), fcn. (21909->8), ass. (0->309)
t282 = cos(pkin(9));
t281 = sin(pkin(8));
t272 = t281 * pkin(2) + qJ(4);
t460 = pkin(7) + t272;
t243 = t460 * t282;
t283 = sin(qJ(5));
t280 = sin(pkin(9));
t335 = t460 * t280;
t463 = cos(qJ(5));
t180 = t463 * t243 - t283 * t335;
t350 = t463 * t282;
t416 = t283 * t280;
t256 = -t350 + t416;
t284 = sin(qJ(2));
t447 = cos(pkin(8));
t334 = t447 * t284;
t285 = cos(qJ(2));
t417 = t281 * t285;
t258 = t334 + t417;
t422 = t258 * t256;
t351 = t463 * t280;
t415 = t283 * t282;
t260 = t351 + t415;
t466 = t260 / 0.2e1;
t469 = -t256 / 0.2e1;
t179 = t283 * t243 + t463 * t335;
t472 = t179 / 0.2e1;
t131 = t260 * t258;
t473 = t131 / 0.2e1;
t459 = -qJ(3) - pkin(6);
t336 = t281 * t459;
t327 = t284 * t336;
t333 = t447 * t285;
t287 = -t459 * t333 + t327;
t254 = t281 * t284 - t333;
t276 = -t285 * pkin(2) - pkin(1);
t293 = t254 * pkin(3) - t258 * qJ(4) + t276;
t113 = -t280 * t287 + t282 * t293;
t462 = pkin(7) * t282;
t286 = t254 * pkin(4) - t258 * t462 + t113;
t114 = t280 * t293 + t282 * t287;
t186 = t280 * t258;
t88 = -pkin(7) * t186 + t114;
t55 = t283 * t88 - t463 * t286;
t56 = t283 * t286 + t463 * t88;
t483 = -t180 * t473 - t422 * t472 + t55 * t466 + t56 * t469;
t228 = t258 * t416;
t329 = t258 * t350;
t175 = t329 - t228;
t76 = -t131 * t466 + t175 * t469;
t482 = t76 * qJD(5);
t481 = t131 * qJD(1);
t296 = -t415 / 0.2e1 - t351 / 0.2e1;
t363 = t260 * qJD(2);
t480 = -t76 * qJD(1) + t256 * t363;
t397 = qJD(1) * t175;
t479 = t76 * qJD(2) - t131 * t397;
t478 = t131 ^ 2;
t368 = t254 * qJD(1);
t346 = t131 * t368;
t251 = t254 ^ 2;
t253 = t258 ^ 2;
t477 = -t253 - t251;
t357 = t253 - t251;
t367 = t256 * qJD(2);
t475 = t367 + t481;
t378 = t131 * qJD(5);
t248 = t334 / 0.2e1 + t417 / 0.2e1;
t252 = t256 ^ 2;
t474 = t260 ^ 2;
t227 = t254 * t416;
t471 = t227 / 0.2e1;
t470 = -t254 / 0.2e1;
t468 = t256 / 0.2e1;
t467 = -t260 / 0.2e1;
t275 = -t447 * pkin(2) - pkin(3);
t264 = -t282 * pkin(4) + t275;
t465 = t264 / 0.2e1;
t35 = (t175 / 0.2e1 - t422 / 0.2e1) * t260 + 0.2e1 * t473 * t256;
t464 = t35 * qJD(4);
t461 = t284 * pkin(2);
t457 = qJD(2) * pkin(2);
t187 = t258 * pkin(3) + t254 * qJ(4) + t461;
t324 = t459 * t447;
t262 = t284 * t324;
t209 = t285 * t336 + t262;
t115 = t282 * t187 - t280 * t209;
t85 = t258 * pkin(4) + t254 * t462 + t115;
t456 = t283 * t85;
t116 = t280 * t187 + t282 * t209;
t183 = t280 * t254;
t90 = pkin(7) * t183 + t116;
t455 = t283 * t90;
t170 = t260 * t254;
t174 = -t254 * t350 + t227;
t353 = t463 * t85;
t57 = t353 - t455;
t352 = t463 * t90;
t58 = t352 + t456;
t5 = -t131 * t58 + t56 * t170 + t55 * t174 - t57 * t175;
t454 = t5 * qJD(1);
t263 = t285 * t324;
t207 = -t263 + t327;
t356 = pkin(4) * t183;
t163 = t207 - t356;
t208 = -t459 * t417 - t262;
t164 = pkin(4) * t186 + t208;
t7 = t164 * t163 - t55 * t57 + t56 * t58;
t451 = t7 * qJD(1);
t446 = t113 * t280;
t445 = t114 * t282;
t444 = t115 * t282;
t443 = t116 * t280;
t289 = -t170 * t472 + t174 * t180 / 0.2e1 + t258 * t465;
t309 = t58 * t467 + t57 * t468;
t14 = t289 + t309;
t442 = t14 * qJD(1);
t15 = t131 * t163 - t164 * t170 + t57 * t254 - t55 * t258;
t441 = t15 * qJD(1);
t16 = t163 * t175 + t164 * t174 - t58 * t254 - t56 * t258;
t440 = t16 * qJD(1);
t17 = t164 * t258 - t55 * t170 + t56 * t174;
t439 = t17 * qJD(1);
t438 = t170 * t254;
t437 = t174 * t131;
t436 = t174 * t254;
t435 = t174 * t256;
t434 = t175 * t170;
t433 = t175 * t258;
t18 = -t131 * t56 - t422 * t55;
t432 = t18 * qJD(1);
t290 = t164 * t466 + t175 * t465 + t180 * t470;
t297 = -t455 / 0.2e1 + t353 / 0.2e1;
t19 = -t290 + t297;
t431 = t19 * qJD(1);
t291 = -t131 * t465 + t164 * t469 + t254 * t472;
t298 = -t456 / 0.2e1 - t352 / 0.2e1;
t20 = -t291 + t298;
t430 = t20 * qJD(1);
t429 = t207 * t282;
t428 = t208 * t207;
t427 = t208 * t258;
t318 = -t113 * t282 - t114 * t280;
t23 = (t443 + t444) * t258 + t318 * t254;
t426 = t23 * qJD(1);
t24 = t113 * t115 + t114 * t116 + t428;
t425 = t24 * qJD(1);
t25 = -t131 * t164 + t55 * t254;
t424 = t25 * qJD(1);
t423 = t258 * t131;
t26 = t164 * t175 - t56 * t254;
t421 = t26 * qJD(1);
t420 = t260 * t170;
t27 = (t207 * t280 + t113) * t258 + (-t208 * t280 + t115) * t254;
t419 = t27 * qJD(1);
t28 = (-t114 + t429) * t258 + (-t208 * t282 - t116) * t254;
t418 = t28 * qJD(1);
t38 = -t420 - t435;
t414 = t38 * qJD(1);
t278 = t280 ^ 2;
t279 = t282 ^ 2;
t337 = -t278 / 0.2e1 - t279 / 0.2e1;
t292 = t337 * t272 * t254 + t258 * t275 / 0.2e1;
t307 = -t444 / 0.2e1 - t443 / 0.2e1;
t40 = t292 + t307;
t413 = t40 * qJD(1);
t41 = t427 + (-t445 + t446) * t254;
t412 = t41 * qJD(1);
t61 = t318 * t258;
t411 = t61 * qJD(1);
t63 = (t207 - t287) * t258 + (-t209 - t208) * t254;
t410 = t63 * qJD(1);
t66 = -t434 - t437;
t409 = t66 * qJD(1);
t67 = t434 - t437;
t408 = t67 * qJD(1);
t305 = -t131 * t467 + t422 * t468;
t69 = t305 + t248;
t407 = t69 * qJD(1);
t72 = t209 * t287 + t276 * t461 + t428;
t406 = t72 * qJD(1);
t77 = -t423 + t438;
t405 = t77 * qJD(1);
t78 = t423 + t438;
t404 = t78 * qJD(1);
t79 = t433 + t436;
t403 = t79 * qJD(1);
t80 = t433 - t436;
t402 = t80 * qJD(1);
t93 = -t254 * t287 + t427;
t399 = t93 * qJD(1);
t265 = t278 + t279;
t396 = qJD(1) * t285;
t395 = qJD(2) * t282;
t394 = qJD(4) * t254;
t117 = (t466 + t296) * t254;
t393 = t117 * qJD(1);
t392 = t117 * qJD(2);
t118 = (t466 - t296) * t254;
t110 = t118 * qJD(1);
t391 = t118 * qJD(2);
t325 = -t350 / 0.2e1;
t119 = t471 + (t325 + t468) * t254;
t390 = t119 * qJD(1);
t120 = t471 + (t325 + t469) * t254;
t389 = t120 * qJD(1);
t300 = t254 * t325 + t471;
t340 = t254 * t469;
t121 = t340 - t300;
t388 = t121 * qJD(1);
t123 = t265 * t253;
t387 = t123 * qJD(1);
t386 = t422 * qJD(1);
t323 = t337 * t258;
t159 = t323 - t248;
t384 = t159 * qJD(1);
t160 = t357 * t280;
t383 = t160 * qJD(1);
t161 = t477 * t280;
t382 = t161 * qJD(1);
t162 = t357 * t282;
t381 = t162 * qJD(1);
t295 = t281 * t470 - t447 * t258 / 0.2e1;
t166 = (-t284 / 0.2e1 + t295) * pkin(2);
t380 = t166 * qJD(1);
t379 = t357 * qJD(1);
t377 = t175 * qJD(5);
t181 = t254 * t461 + t276 * t258;
t376 = t181 * qJD(1);
t182 = -t276 * t254 + t258 * t461;
t375 = t182 * qJD(1);
t374 = t186 * qJD(1);
t240 = t278 * t254;
t241 = t279 * t254;
t188 = t240 + t241;
t373 = t188 * qJD(1);
t189 = t477 * t282;
t372 = t189 * qJD(1);
t371 = t477 * qJD(1);
t370 = t207 * qJD(2);
t369 = t248 * qJD(1);
t247 = t256 * qJD(5);
t366 = t258 * qJD(1);
t365 = t258 * qJD(2);
t364 = t258 * qJD(3);
t362 = t260 * qJD(5);
t361 = t265 * qJD(2);
t270 = -t284 ^ 2 + t285 ^ 2;
t360 = t270 * qJD(1);
t359 = t284 * qJD(2);
t358 = t285 * qJD(2);
t355 = pkin(1) * t284 * qJD(1);
t354 = pkin(1) * t396;
t349 = t280 * t395;
t348 = t258 * t394;
t347 = t422 * t368;
t206 = t254 * t366;
t205 = t254 * t365;
t343 = t256 * t362;
t342 = t282 * t366;
t239 = t282 * t365;
t341 = t284 * t358;
t339 = t416 / 0.2e1;
t332 = t248 * qJD(5) + t206;
t331 = -qJD(5) - t368;
t330 = qJD(2) * t264 + qJD(4);
t328 = t254 * t342;
t322 = t280 * t328;
t299 = -t263 / 0.2e1 + t327 / 0.2e1;
t288 = -t356 / 0.2e1 + t299;
t11 = t288 - t483;
t84 = t179 * t260 - t180 * t256;
t321 = t11 * qJD(1) - t84 * qJD(2);
t65 = -t175 * t422 + t478;
t320 = t65 * qJD(1) + t35 * qJD(2);
t64 = t131 * t256 - t260 * t175;
t71 = -t175 ^ 2 + t478;
t319 = t71 * qJD(1) + t64 * qJD(2);
t317 = -t115 * t280 + t116 * t282;
t316 = -t254 * t275 - t258 * t272;
t168 = t252 - t474;
t315 = t64 * qJD(1) + t168 * qJD(2);
t193 = t252 + t474;
t314 = t35 * qJD(1) + t193 * qJD(2);
t214 = t265 * t272;
t308 = t446 / 0.2e1 - t445 / 0.2e1;
t59 = t299 + t308;
t313 = t59 * qJD(1) - t214 * qJD(2);
t94 = t228 / 0.2e1 + (t339 - t350) * t258;
t311 = t94 * qJD(1) - t363;
t271 = t284 * t396;
t246 = t254 * qJD(2);
t242 = t248 * qJD(2);
t165 = t461 / 0.2e1 + t295 * pkin(2);
t158 = t323 + t248;
t122 = t340 + t300;
t112 = t117 * qJD(5);
t111 = t118 * qJD(5);
t97 = t329 / 0.2e1 - t228 / 0.2e1 + (t339 + t325) * t258;
t91 = -t362 - t110;
t70 = -t305 + t248;
t62 = t64 * qJD(5);
t60 = t299 - t308;
t39 = t292 - t307;
t22 = t290 + t297;
t21 = t291 + t298;
t13 = t289 - t309;
t12 = t288 + t483;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t341, t270 * qJD(2), 0, -t341, 0, 0, -pkin(1) * t359, -pkin(1) * t358, 0, 0, -t205, -t357 * qJD(2), 0, t205, 0, 0, t181 * qJD(2), t182 * qJD(2), t63 * qJD(2) - qJD(3) * t477, t72 * qJD(2) + t93 * qJD(3), -t279 * t205, 0.2e1 * t239 * t183, t162 * qJD(2), -t278 * t205, -t160 * qJD(2), t205, t27 * qJD(2) - t161 * qJD(3) - t282 * t348, t28 * qJD(2) - t189 * qJD(3) + t280 * t348, -t23 * qJD(2) + t123 * qJD(4), t24 * qJD(2) + t41 * qJD(3) + t61 * qJD(4), (qJD(2) * t174 - t378) * t175, t67 * qJD(2) + t71 * qJD(5), t79 * qJD(2) - t254 * t378, (-qJD(2) * t170 + t377) * t131, t77 * qJD(2) - t254 * t377, t205, t15 * qJD(2) + t78 * qJD(3) + t26 * qJD(5) + t394 * t422, t16 * qJD(2) + t80 * qJD(3) + t25 * qJD(5) + t131 * t394, t5 * qJD(2) + t66 * qJD(3) + t65 * qJD(4), t7 * qJD(2) + t17 * qJD(3) + t18 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t271, t360, t358, -t271, -t359, 0, -pkin(6) * t358 - t355, pkin(6) * t359 - t354, 0, 0, -t206, -t379, -t246, t206, -t365, 0, -t370 + t376, -t209 * qJD(2) + t375, t410 + (t447 * t254 - t258 * t281) * t457, t406 + (-t447 * t207 + t209 * t281) * t457 + t165 * qJD(3), (-t279 * t366 - t349) * t254, 0.2e1 * t322 + (t240 - t241) * qJD(2), t280 * t365 + t381, (-t278 * t366 + t349) * t254, t239 - t383, t206, t419 + (t280 * t316 - t429) * qJD(2) - t183 * qJD(4), t280 * t370 + t418 + (qJD(2) * t316 - t394) * t282, qJD(2) * t317 - t426, t425 + (t207 * t275 + t272 * t317) * qJD(2) + t39 * qJD(3) + t60 * qJD(4), t482 + (t363 + t397) * t174, t408 + (t420 - t435) * qJD(2) + t62, t122 * qJD(5) + t258 * t363 + t403, -t170 * t475 - t482, -t256 * t365 - t112 + t405, t332, t441 + (t163 * t256 - t264 * t170 - t179 * t258) * qJD(2) - t118 * qJD(4) + t22 * qJD(5), t440 + (t163 * t260 + t264 * t174 - t180 * t258) * qJD(2) - t121 * qJD(4) + t21 * qJD(5), t454 + (t180 * t170 + t179 * t174 - t58 * t256 - t57 * t260) * qJD(2) + t464, t451 + (t163 * t264 - t57 * t179 + t58 * t180) * qJD(2) + t13 * qJD(3) + t12 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t371, t165 * qJD(2) + t399, 0, 0, 0, 0, 0, 0, -t382, -t372, 0, t39 * qJD(2) + t158 * qJD(4) + t412, 0, 0, 0, 0, 0, 0, -t112 + t404, -t120 * qJD(5) + t402, t409, t439 + t13 * qJD(2) + (-t170 * t256 + t174 * t260) * qJD(3) + t70 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t183 * qJD(2) - t328, (t280 * t366 - t395) * t254, t387, t60 * qJD(2) + t158 * qJD(3) + t411, 0, 0, 0, 0, 0, 0, t97 * qJD(5) + t347 - t391, -t121 * qJD(2) + t346, t320, t12 * qJD(2) + t70 * qJD(3) + t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t479, t319, t122 * qJD(2) + t131 * t331, -t479, t175 * t331 - t392, t242, t22 * qJD(2) - t117 * qJD(3) + t97 * qJD(4) - t56 * qJD(5) + t421, t21 * qJD(2) - t120 * qJD(3) + t55 * qJD(5) + t424, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t271, -t360, 0, t271, 0, 0, t355, t354, 0, 0, t206, t379, 0, -t206, 0, 0, -t364 - t376, t254 * qJD(3) - t375, -t410, t166 * qJD(3) - t406, t279 * t206, -0.2e1 * t322, -t381, t278 * t206, t383, -t206, -t282 * t364 - t419, t186 * qJD(3) - t418, -t188 * qJD(3) + t426, t40 * qJD(3) - t59 * qJD(4) - t425, -t174 * t397 + t482, t62 - t408, -t119 * qJD(5) - t403, t170 * t481 - t482, -t111 - t405, -t332, qJD(3) * t422 - t117 * qJD(4) - t19 * qJD(5) - t441, t131 * qJD(3) - t120 * qJD(4) - t20 * qJD(5) - t440, t38 * qJD(3) - t454 + t464, t14 * qJD(3) - t11 * qJD(4) - t451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t265 * qJD(4), t214 * qJD(4), -t343, t168 * qJD(5), 0, t343, 0, 0, t264 * t362, -t264 * t247, t193 * qJD(4), t84 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t366, t368, 0, t380, 0, 0, 0, 0, 0, 0, -t342, t374, -t373, t413, 0, 0, 0, 0, 0, 0, t386, t481, t414, t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t361, -t313, 0, 0, 0, 0, 0, 0, -t393, -t389, t314, -t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t480, t315, -t247 - t390, t480, t91, -t369, -t180 * qJD(5) + t264 * t363 - t431, t179 * qJD(5) - t264 * t367 - t430, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t365, -t246, t371, -t166 * qJD(2) - t399, 0, 0, 0, 0, 0, 0, t239 + t382, -t186 * qJD(2) + t372, t188 * qJD(2), -t40 * qJD(2) + t159 * qJD(4) - t412, 0, 0, 0, 0, 0, 0, -qJD(2) * t422 - t111 - t404, -t131 * qJD(2) - t121 * qJD(5) - t402, -t38 * qJD(2) - t409, -t14 * qJD(2) - t69 * qJD(4) - t439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t366, -t368, 0, -t380, 0, 0, 0, 0, 0, 0, t342, -t374, t373, -t413, 0, 0, 0, 0, 0, 0, -t386, -t481, -t414, -t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t384, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, t247 - t388, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t328, -t280 * t206, -t387, t59 * qJD(2) - t159 * qJD(3) - t411, 0, 0, 0, 0, 0, 0, -t94 * qJD(5) - t347 + t392, t120 * qJD(2) - t346 - t378, -t320, t11 * qJD(2) + t69 * qJD(3) - t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t361, t313, 0, 0, 0, 0, 0, 0, t362 + t393, -t247 + t389, -t314, t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t384, 0, 0, 0, 0, 0, 0, 0, 0, 0, t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t311, -t475, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t479, -t319, t119 * qJD(2) + t346, t479, t175 * t368 + t391, t242, t19 * qJD(2) + t118 * qJD(3) + t94 * qJD(4) - t421, t20 * qJD(2) + t121 * qJD(3) + qJD(4) * t131 - t424, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, -t315, t390, -t480, t110, t369, -t260 * t330 + t431, t256 * t330 + t430, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, t388, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, t475, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
