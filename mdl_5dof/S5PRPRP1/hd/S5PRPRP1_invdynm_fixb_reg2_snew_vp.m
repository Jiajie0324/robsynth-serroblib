% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5PRPRP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d4,theta1,theta3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 15:29
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5PRPRP1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRPRP1_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRPRP1_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRPRP1_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRPRP1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRPRP1_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 15:28:58
% EndTime: 2019-12-05 15:29:14
% DurationCPUTime: 16.61s
% Computational Cost: add. (26404->524), mult. (61422->644), div. (0->0), fcn. (42626->8), ass. (0->364)
t1091 = sin(pkin(7));
t1093 = cos(pkin(7));
t1090 = sin(pkin(8));
t1075 = t1090 * qJDD(2);
t1092 = cos(pkin(8));
t1077 = t1092 * qJDD(2);
t1095 = sin(qJ(4));
t1097 = cos(qJ(4));
t1041 = t1095 * t1075 - t1097 * t1077;
t1096 = sin(qJ(2));
t1098 = cos(qJ(2));
t1099 = qJD(4) ^ 2;
t1170 = qJD(2) * t1090;
t1043 = -t1097 * t1092 * qJD(2) + t1095 * t1170;
t1193 = t1043 ^ 2;
t1022 = t1193 - t1099;
t1118 = t1090 * t1097 + t1092 * t1095;
t1045 = t1118 * qJD(2);
t1166 = t1045 * t1043;
t1205 = qJDD(4) + t1166;
t1173 = t1097 * t1205;
t922 = t1095 * t1022 + t1173;
t1179 = t1095 * t1205;
t928 = t1097 * t1022 - t1179;
t869 = t1090 * t922 - t1092 * t928;
t844 = -t1098 * t1041 + t1096 * t869;
t847 = t1096 * t1041 + t1098 * t869;
t1288 = t1091 * t847 + t1093 * t844;
t1287 = t1091 * t844 - t1093 * t847;
t1040 = t1045 ^ 2;
t984 = t1099 + t1040;
t908 = t1097 * t984 + t1179;
t933 = t1095 * t984 - t1173;
t867 = t1090 * t933 - t1092 * t908;
t1286 = pkin(1) * t867;
t1285 = pkin(2) * t867;
t1284 = qJ(3) * t867;
t873 = t1090 * t908 + t1092 * t933;
t1283 = qJ(3) * t873;
t1282 = t1096 * t873;
t1281 = t1098 * t873;
t1280 = pkin(3) * t908;
t1279 = pkin(6) * t908;
t1278 = pkin(6) * t933;
t1042 = t1118 * qJDD(2);
t1222 = -t1097 * t1041 + t1095 * t1042;
t1224 = -t1095 * t1041 - t1097 * t1042;
t1235 = -t1090 * t1224 + t1092 * t1222;
t959 = -t1193 - t1040;
t1253 = t1096 * t1235 - t1098 * t959;
t1277 = pkin(1) * t1253;
t1206 = qJDD(4) - t1166;
t1178 = t1095 * t1206;
t1207 = -t1193 - t1099;
t1218 = t1097 * t1207 - t1178;
t971 = t1097 * t1206;
t1225 = t1095 * t1207 + t971;
t1237 = -t1090 * t1225 + t1092 * t1218;
t1167 = t1045 * qJD(4);
t991 = t1041 + 0.2e1 * t1167;
t1256 = t1096 * t1237 - t1098 * t991;
t1276 = pkin(1) * t1256;
t1275 = pkin(5) * t1253;
t1274 = pkin(5) * t1256;
t1023 = t1040 - t1099;
t1228 = t1095 * t1023 + t971;
t1241 = -t1097 * t1023 + t1178;
t1255 = -t1090 * t1241 + t1092 * t1228;
t1273 = t1096 * t1255;
t1272 = t1098 * t1255;
t1234 = t1090 * t1222 + t1092 * t1224;
t1251 = t1096 * t959 + t1098 * t1235;
t1271 = -pkin(1) * t1234 + pkin(5) * t1251;
t1236 = t1090 * t1218 + t1092 * t1225;
t1252 = t1096 * t991 + t1098 * t1237;
t1270 = -pkin(1) * t1236 + pkin(5) * t1252;
t862 = t1090 * t928 + t1092 * t922;
t1269 = qJ(1) * (-t1091 * t1253 + t1093 * t1251);
t1268 = qJ(1) * (t1091 * t1251 + t1093 * t1253);
t1267 = qJ(1) * (-t1091 * t1256 + t1093 * t1252);
t1266 = qJ(1) * (t1091 * t1252 + t1093 * t1256);
t1263 = pkin(2) * t1234;
t1262 = pkin(2) * t1236;
t1261 = qJ(3) * t1234;
t1260 = qJ(3) * t1236;
t1036 = qJD(4) * t1043;
t994 = t1042 - t1036;
t1229 = t1036 - t994;
t1259 = t1229 * qJ(5);
t1258 = -pkin(2) * t991 + qJ(3) * t1237;
t1257 = -pkin(2) * t959 + qJ(3) * t1235;
t1254 = t1090 * t1228 + t1092 * t1241;
t1191 = pkin(3) * t1224;
t1249 = pkin(3) * t1225;
t1248 = pkin(6) * t1218;
t1247 = pkin(6) * t1224;
t1246 = pkin(6) * t1225;
t1063 = t1093 * g(1) + t1091 * g(2);
t1141 = t1091 * g(1) - t1093 * g(2);
t1110 = t1098 * t1063 - t1096 * t1141;
t1131 = t1096 * t1063 + t1098 * t1141;
t1132 = -t1096 * t1131 - t1098 * t1110;
t936 = t1096 * t1110 - t1098 * t1131;
t1184 = t1091 * t936;
t1240 = t1093 * t1132 + t1184;
t1182 = t1093 * t936;
t1239 = -t1091 * t1132 + t1182;
t1238 = -pkin(3) * t959 + pkin(6) * t1222;
t1147 = t1096 * t1166;
t1146 = t1097 * t1036;
t992 = t1041 + t1167;
t1114 = t1095 * t992 + t1146;
t1168 = t1043 * t1095;
t1126 = qJD(4) * t1168 - t1097 * t992;
t1198 = -t1090 * t1126 + t1092 * t1114;
t1217 = t1098 * t1198 - t1147;
t1145 = t1098 * t1166;
t1220 = t1096 * t1198 + t1145;
t1233 = -t1091 * t1220 + t1093 * t1217;
t1232 = t1091 * t1217 + t1093 * t1220;
t1165 = t1045 * t1097;
t1112 = (-t1165 - t1168) * qJD(4);
t1020 = t1095 * t1167;
t1123 = t1020 - t1146;
t1199 = -t1090 * t1112 + t1092 * t1123;
t1219 = -t1098 * qJDD(4) + t1096 * t1199;
t1221 = t1096 * qJDD(4) + t1098 * t1199;
t1231 = t1091 * t1221 + t1093 * t1219;
t1230 = -t1091 * t1219 + t1093 * t1221;
t1209 = t1040 - t1193;
t1227 = t1096 * t1209;
t1226 = t1098 * t1209;
t1102 = t1092 ^ 2;
t1194 = qJD(2) ^ 2;
t1078 = t1102 * t1194;
t1100 = t1090 ^ 2;
t1153 = t1100 * t1194;
t1058 = t1078 + t1153;
t1151 = t1096 * qJDD(2);
t1061 = t1098 * t1194 + t1151;
t1087 = g(3) - qJDD(1);
t1031 = pkin(5) * t1061 - t1098 * t1087;
t1150 = t1098 * qJDD(2);
t1062 = -t1096 * t1194 + t1150;
t1121 = -pkin(5) * t1062 - t1096 * t1087;
t1208 = t1093 * t1061 + t1091 * t1062;
t1223 = qJ(1) * t1208 + t1093 * t1031 - t1091 * t1121;
t1006 = -t1091 * t1061 + t1093 * t1062;
t1216 = -qJ(1) * t1006 + t1091 * t1031 + t1093 * t1121;
t1204 = t1194 * (t1100 + t1102);
t1051 = t1092 * t1204;
t1142 = t1092 * t1150;
t1012 = -t1096 * t1051 + t1142;
t1014 = t1098 * t1051 + t1092 * t1151;
t1215 = t1093 * t1012 - t1091 * t1014;
t1214 = t1091 * t1012 + t1093 * t1014;
t1069 = t1092 * t1087;
t997 = -t1194 * pkin(2) + qJDD(2) * qJ(3) - t1110;
t1140 = 0.2e1 * qJD(2) * qJD(3) + t997;
t957 = t1140 * t1090 + t1069;
t1164 = t1090 * t1087;
t958 = t1140 * t1092 - t1164;
t891 = t1090 * t957 + t1092 * t958;
t1203 = -t1093 * t1063 - t1091 * t1141;
t1201 = -t1091 * t1063 + t1093 * t1141;
t1200 = t1090 * t1123 + t1092 * t1112;
t1197 = t1090 * t1114 + t1092 * t1126;
t943 = qJD(4) * t1165 + t1095 * t994;
t945 = t1097 * t994 - t1020;
t881 = -t1090 * t943 + t1092 * t945;
t1124 = t1096 * t881 - t1145;
t1125 = t1098 * t881 + t1147;
t1196 = t1091 * t1125 + t1093 * t1124;
t1195 = -t1091 * t1124 + t1093 * t1125;
t1159 = t1092 * t1194;
t1189 = pkin(6) * qJDD(2);
t919 = -0.2e1 * qJD(3) * t1170 - t1069 + (pkin(3) * t1159 - t1189 - t997) * t1090;
t920 = -pkin(3) * t1078 - t1164 + (t1140 + t1189) * t1092;
t858 = t1095 * t920 - t1097 * t919;
t859 = t1095 * t919 + t1097 * t920;
t787 = t1095 * t859 - t1097 * t858;
t1192 = pkin(3) * t787;
t1190 = pkin(4) * t1097;
t1169 = qJD(5) * qJD(4);
t1082 = 0.2e1 * t1169;
t979 = t1043 * pkin(4) - t1045 * qJ(5);
t1122 = -t1099 * pkin(4) + qJDD(4) * qJ(5) - t1043 * t979 + t859;
t805 = t1082 + t1122;
t807 = -qJDD(4) * pkin(4) - t1099 * qJ(5) + t1045 * t979 + qJDD(5) + t858;
t1188 = -pkin(4) * t807 + qJ(5) * t805;
t1111 = qJDD(2) * pkin(2) + t1194 * qJ(3) - qJDD(3) + t1131;
t1187 = pkin(2) * t1111 + qJ(3) * t891;
t1185 = t1090 * t787;
t969 = t1090 * t1111;
t1183 = t1092 * t787;
t970 = t1092 * t1111;
t1108 = pkin(3) * t1077 + t1058 * pkin(6) + t1111;
t1181 = t1095 * t1108;
t1180 = t1095 * t1229;
t1177 = t1095 * t991;
t1176 = t1096 * t1111;
t1174 = t1097 * t1108;
t1172 = t1097 * t991;
t1171 = t1098 * t1111;
t1160 = t1091 * t1087;
t1158 = t1093 * t1087;
t1152 = -pkin(4) * t1042 - qJ(5) * t1041;
t1148 = pkin(2) * t1077 - qJ(3) * t1051 + t970;
t1065 = t1090 * t1159;
t1144 = -qJ(5) * t1095 - pkin(3);
t1143 = t1090 * t1077;
t788 = t1095 * t858 + t1097 * t859;
t772 = t1095 * t807 + t1097 * t805;
t1106 = t992 * pkin(4) - t1108 + t1259;
t813 = (pkin(4) * qJD(4) - 0.2e1 * qJD(5)) * t1045 + t1106;
t741 = pkin(6) * t772 + (t1144 - t1190) * t813;
t771 = t1095 * t805 - t1097 * t807;
t748 = -t1090 * t771 + t1092 * t772;
t750 = -pkin(6) * t771 + (pkin(4) * t1095 - qJ(5) * t1097) * t813;
t1139 = -pkin(2) * t813 + qJ(3) * t748 + t1090 * t750 + t1092 * t741;
t789 = -pkin(4) * t959 + t805;
t790 = -qJ(5) * t959 + t807;
t756 = t1095 * t790 + t1097 * t789 + t1238;
t761 = -t1095 * t789 + t1097 * t790 - t1247;
t1138 = t1090 * t761 + t1092 * t756 + t1257;
t1104 = 0.2e1 * qJD(5) * t1045 - t1106;
t794 = -pkin(4) * t1167 + t1104 - t1259;
t767 = -t1278 + t1095 * t794 - (pkin(3) + t1190) * t1229;
t776 = pkin(4) * t1180 + t1097 * t794 - t1279;
t1137 = -pkin(2) * t1229 + t1090 * t776 + t1092 * t767 - t1283;
t770 = t1238 + t788;
t780 = -t787 - t1247;
t1136 = t1090 * t780 + t1092 * t770 + t1257;
t799 = (-t991 - t1167) * pkin(4) + t1104;
t779 = t1097 * t799 + t1144 * t991 + t1248;
t785 = -qJ(5) * t1172 - t1095 * t799 - t1246;
t1135 = t1090 * t785 + t1092 * t779 + t1258;
t819 = -pkin(3) * t991 + t1174 + t1248;
t857 = -t1181 - t1246;
t1134 = t1090 * t857 + t1092 * t819 + t1258;
t993 = t1042 - 0.2e1 * t1036;
t842 = -pkin(3) * t993 - t1181 + t1278;
t887 = -t1174 + t1279;
t1133 = -pkin(2) * t993 + t1090 * t887 + t1092 * t842 + t1283;
t1074 = t1100 * qJDD(2);
t1076 = t1102 * qJDD(2);
t1056 = t1076 + t1074;
t1130 = pkin(2) * t1058 + qJ(3) * t1056 + t891;
t1129 = pkin(3) * t771 + t1188;
t1128 = -t859 - t1280;
t1127 = t1152 + t1191;
t889 = t1090 * t958 - t1092 * t957;
t1017 = t1061 * t1092 * t1090;
t1018 = -t1096 * t1065 + t1090 * t1142;
t1120 = t1093 * t1017 + t1091 * t1018;
t1119 = t1091 * t1017 - t1093 * t1018;
t1050 = t1090 * t1204;
t1117 = -pkin(2) * t1075 + qJ(3) * t1050 - t969;
t1116 = -t858 + t1249;
t759 = t1092 * t788 - t1185;
t782 = pkin(3) * t1108 + pkin(6) * t788;
t1115 = pkin(2) * t1108 - pkin(6) * t1185 + qJ(3) * t759 + t1092 * t782;
t1113 = pkin(4) * t984 + qJ(5) * t1205 + t1122;
t1109 = t1113 + t1280;
t1107 = pkin(4) * t1206 + qJ(5) * t1207 - t807;
t1105 = t1107 + t1249;
t1064 = 0.2e1 * t1143;
t1059 = -t1078 + t1153;
t1057 = t1076 - t1074;
t1013 = t1098 * t1050 + t1090 * t1151;
t1010 = t1096 * t1050 - t1090 * t1150;
t1005 = t1098 * t1057 + t1096 * t1059;
t1004 = t1098 * t1056 - t1096 * t1058;
t1003 = t1096 * t1057 - t1098 * t1059;
t1002 = t1096 * t1056 + t1098 * t1058;
t968 = -pkin(1) * t1061 + t1110;
t967 = pkin(1) * t1062 + t1131;
t953 = t1036 + t994;
t944 = -t1091 * t1010 + t1093 * t1013;
t942 = t1093 * t1010 + t1091 * t1013;
t921 = pkin(1) * t936;
t917 = pkin(1) * t1087 + pkin(5) * t1132;
t914 = -t1095 * t993 - t1172;
t912 = t1097 * t993 - t1177;
t904 = pkin(1) * t1012 + t1148;
t903 = pkin(1) * t1010 + t1117;
t897 = t1172 - t1180;
t896 = t1097 * t1229 + t1177;
t886 = -pkin(5) * t1010 - t1092 * t1171 - t1096 * t958;
t885 = -pkin(5) * t1012 - t1090 * t1171 - t1096 * t957;
t884 = pkin(5) * t1013 - t1092 * t1176 + t1098 * t958;
t883 = -pkin(5) * t1014 - t1090 * t1176 + t1098 * t957;
t878 = t1090 * t945 + t1092 * t943;
t854 = -pkin(5) * t1002 - t1098 * t889;
t853 = pkin(5) * t1004 - t1096 * t889;
t850 = t1098 * t891 - t1176;
t849 = t1096 * t891 + t1171;
t848 = t1096 * t1042 + t1272;
t845 = -t1098 * t1042 + t1273;
t840 = -t1090 * t912 + t1092 * t914;
t838 = t1090 * t914 + t1092 * t912;
t821 = pkin(1) * t1002 + t1130;
t820 = -t1127 - t1263;
t818 = t1096 * t993 + t1281;
t816 = -t1098 * t993 + t1282;
t811 = t1096 * t953 + t1272;
t810 = -t1098 * t953 + t1273;
t809 = -t1090 * t896 + t1092 * t897;
t808 = t1090 * t897 + t1092 * t896;
t803 = t1098 * t840 + t1227;
t802 = t1096 * t840 - t1226;
t796 = t1096 * t1229 - t1281;
t795 = -t1098 * t1229 - t1282;
t793 = t1098 * t809 - t1227;
t792 = t1096 * t809 + t1226;
t791 = -t1191 - t1263;
t786 = pkin(1) * t849 + t1187;
t783 = -t1128 - t1285;
t774 = -t1116 - t1262;
t773 = -pkin(5) * t849 + (pkin(2) * t1096 - qJ(3) * t1098) * t889;
t768 = -t1090 * t842 + t1092 * t887 - t1284;
t765 = -t1105 - t1262;
t764 = -t1090 * t819 + t1092 * t857 - t1260;
t763 = pkin(5) * t850 + (-pkin(2) * t1098 - qJ(3) * t1096 - pkin(1)) * t889;
t762 = -t1109 - 0.2e1 * t1169 + t1285;
t758 = t1090 * t788 + t1183;
t754 = -t1096 * t1108 + t1098 * t759;
t753 = t1096 * t759 + t1098 * t1108;
t752 = pkin(1) * t816 + t1133;
t751 = t1134 + t1276;
t747 = t1090 * t772 + t1092 * t771;
t745 = -t1090 * t779 + t1092 * t785 - t1260;
t744 = -pkin(2) * t758 - t1192;
t743 = -pkin(5) * t816 - t1096 * t783 + t1098 * t768;
t742 = -t1090 * t770 + t1092 * t780 - t1261;
t739 = -t1090 * t767 + t1092 * t776 + t1284;
t738 = t1096 * t813 + t1098 * t748;
t737 = t1096 * t748 - t1098 * t813;
t736 = t1135 + t1276;
t735 = pkin(5) * t818 + t1096 * t768 + t1098 * t783 - t1286;
t734 = -t1096 * t774 + t1098 * t764 - t1274;
t733 = -pkin(6) * t1183 - qJ(3) * t758 - t1090 * t782;
t732 = t1136 + t1277;
t731 = t1096 * t764 + t1098 * t774 + t1270;
t730 = -t1090 * t756 + t1092 * t761 - t1261;
t729 = pkin(1) * t795 + t1137;
t728 = -t1096 * t791 + t1098 * t742 - t1275;
t727 = t1138 + t1277;
t726 = -t1096 * t765 + t1098 * t745 - t1274;
t725 = t1096 * t742 + t1098 * t791 + t1271;
t724 = -t1096 * t820 + t1098 * t730 - t1275;
t723 = t1096 * t745 + t1098 * t765 + t1270;
t722 = -pkin(2) * t747 - t1129;
t721 = t1096 * t730 + t1098 * t820 + t1271;
t720 = -pkin(5) * t795 - t1096 * t762 + t1098 * t739;
t719 = pkin(1) * t753 + t1115;
t718 = pkin(5) * t796 + t1096 * t739 + t1098 * t762 + t1286;
t717 = -qJ(3) * t747 - t1090 * t741 + t1092 * t750;
t716 = -pkin(5) * t753 - t1096 * t744 + t1098 * t733;
t715 = -pkin(1) * t758 + pkin(5) * t754 + t1096 * t733 + t1098 * t744;
t714 = pkin(1) * t737 + t1139;
t713 = -pkin(5) * t737 - t1096 * t722 + t1098 * t717;
t712 = -pkin(1) * t747 + pkin(5) * t738 + t1096 * t717 + t1098 * t722;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1160, -t1158, -t1201, -qJ(1) * t1201, 0, 0, t1006, 0, -t1208, 0, t1216, t1223, t1239, pkin(5) * t1182 + qJ(1) * t1239 - t1091 * t917, -t1119, -t1091 * t1003 + t1093 * t1005, t944, t1119, t1214, 0, -qJ(1) * t1215 - t1091 * t883 + t1093 * t885, -qJ(1) * t942 - t1091 * t884 + t1093 * t886, t1093 * t854 - t1091 * t853 - qJ(1) * (t1093 * t1002 + t1091 * t1004), t1093 * t773 - t1091 * t763 - qJ(1) * (t1091 * t850 + t1093 * t849), t1195, -t1091 * t802 + t1093 * t803, -t1091 * t845 + t1093 * t848, t1233, t1287, t1230, -t1091 * t731 + t1093 * t734 - t1266, t1093 * t743 - t1091 * t735 - qJ(1) * (t1091 * t818 + t1093 * t816), -t1091 * t725 + t1093 * t728 - t1268, t1093 * t716 - t1091 * t715 - qJ(1) * (t1091 * t754 + t1093 * t753), t1195, -t1091 * t810 + t1093 * t811, -t1091 * t792 + t1093 * t793, t1230, -t1287, t1233, -t1091 * t723 + t1093 * t726 - t1266, -t1091 * t721 + t1093 * t724 - t1268, t1093 * t720 - t1091 * t718 - qJ(1) * (t1091 * t796 + t1093 * t795), t1093 * t713 - t1091 * t712 - qJ(1) * (t1091 * t738 + t1093 * t737); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1158, -t1160, t1203, qJ(1) * t1203, 0, 0, t1208, 0, t1006, 0, -t1223, t1216, t1240, pkin(5) * t1184 + qJ(1) * t1240 + t1093 * t917, t1120, t1093 * t1003 + t1091 * t1005, t942, -t1120, -t1215, 0, -qJ(1) * t1214 + t1091 * t885 + t1093 * t883, qJ(1) * t944 + t1091 * t886 + t1093 * t884, t1091 * t854 + t1093 * t853 + qJ(1) * (-t1091 * t1002 + t1093 * t1004), t1091 * t773 + t1093 * t763 + qJ(1) * (-t1091 * t849 + t1093 * t850), t1196, t1091 * t803 + t1093 * t802, t1091 * t848 + t1093 * t845, t1232, -t1288, t1231, t1091 * t734 + t1093 * t731 + t1267, t1091 * t743 + t1093 * t735 + qJ(1) * (-t1091 * t816 + t1093 * t818), t1091 * t728 + t1093 * t725 + t1269, t1091 * t716 + t1093 * t715 + qJ(1) * (-t1091 * t753 + t1093 * t754), t1196, t1091 * t811 + t1093 * t810, t1091 * t793 + t1093 * t792, t1231, t1288, t1232, t1091 * t726 + t1093 * t723 + t1267, t1091 * t724 + t1093 * t721 + t1269, t1091 * t720 + t1093 * t718 + qJ(1) * (-t1091 * t795 + t1093 * t796), t1091 * t713 + t1093 * t712 + qJ(1) * (-t1091 * t737 + t1093 * t738); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1141, t1063, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t967, t968, 0, -t921, t1074, t1064, 0, t1076, 0, 0, t904, t903, t821, t786, t878, t838, t1254, t1197, t862, t1200, t751, t752, t732, t719, t878, t1254, t808, t1200, -t862, t1197, t736, t727, t729, t714; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1087, -t1141, 0, 0, 0, t1062, 0, -t1061, 0, t1121, t1031, t936, pkin(5) * t936, t1018, t1005, t1013, -t1018, t1014, 0, t885, t886, t854, t773, t1125, t803, t848, t1217, -t847, t1221, t734, t743, t728, t716, t1125, t811, t793, t1221, t847, t1217, t726, t724, t720, t713; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1087, 0, -t1063, 0, 0, 0, t1061, 0, t1062, 0, -t1031, t1121, t1132, t917, t1017, t1003, t1010, -t1017, -t1012, 0, t883, t884, t853, t763, t1124, t802, t845, t1220, -t844, t1219, t731, t735, t725, t715, t1124, t810, t792, t1219, t844, t1220, t723, t721, t718, t712; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1141, t1063, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t967, t968, 0, -t921, t1074, t1064, 0, t1076, 0, 0, t904, t903, t821, t786, t878, t838, t1254, t1197, t862, t1200, t751, t752, t732, t719, t878, t1254, t808, t1200, -t862, t1197, t736, t727, t729, t714; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1194, 0, 0, -t1087, -t1131, 0, t1143, t1057, t1050, -t1143, t1051, 0, -t969, -t970, -t889, -qJ(3) * t889, t881, t840, t1255, t1198, -t869, t1199, t764, t768, t742, t733, t881, t1255, t809, t1199, t869, t1198, t745, t730, t739, t717; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1194, 0, qJDD(2), 0, t1087, 0, -t1110, 0, t1065, -t1059, -t1075, -t1065, -t1077, 0, t957, t958, 0, -pkin(2) * t889, -t1166, -t1209, -t1042, t1166, t1041, -qJDD(4), t774, t783, t791, t744, -t1166, -t953, t1209, -qJDD(4), -t1041, t1166, t765, t820, t762, t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t1131, t1110, 0, 0, t1074, t1064, 0, t1076, 0, 0, t1148, t1117, t1130, t1187, t878, t838, t1254, t1197, t862, t1200, t1134, t1133, t1136, t1115, t878, t1254, t808, t1200, -t862, t1197, t1135, t1138, t1137, t1139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1075, t1077, t1065, 0, t1078, 0, 0, -t1111, t957, 0, t945, t914, t1228, t1114, t928, t1123, t857, t887, t780, -pkin(6) * t787, t945, t1228, t897, t1123, -t928, t1114, t785, t761, t776, t750; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1075, -t1153, t1077, -t1065, 0, t1111, 0, t958, 0, t943, t912, t1241, t1126, t922, t1112, t819, t842, t770, t782, t943, t1241, t896, t1112, -t922, t1126, t779, t756, t767, t741; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1065, t1059, t1075, t1065, t1077, 0, -t957, -t958, 0, 0, t1166, t1209, t1042, -t1166, -t1041, qJDD(4), t1116, t1128, t1191, t1192, t1166, t953, -t1209, qJDD(4), t1041, -t1166, t1105, t1127, t1082 + t1109, t1129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t994, -t991, t1206, t1036, t1022, -t1036, 0, -t1108, t858, 0, t994, t1206, t991, -t1036, -t1022, t1036, -qJ(5) * t991, t790, t794, -qJ(5) * t813; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1167, t993, -t1023, -t992, t1205, -t1167, t1108, 0, t859, 0, t1167, -t1023, t1229, -t1167, -t1205, -t992, t799, t789, -pkin(4) * t1229, -pkin(4) * t813; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1166, t1209, t1042, -t1166, -t1041, qJDD(4), -t858, -t859, 0, 0, t1166, t953, -t1209, qJDD(4), t1041, -t1166, t1107, t1152, t1082 + t1113, t1188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t994, t1206, t991, -t1036, -t1022, t1036, 0, t807, -t813, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1166, t953, -t1209, qJDD(4), t1041, -t1166, -t807, 0, t805, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1167, t1023, -t1229, t1167, t1205, t992, t813, -t805, 0, 0;];
m_new_reg = t1;
