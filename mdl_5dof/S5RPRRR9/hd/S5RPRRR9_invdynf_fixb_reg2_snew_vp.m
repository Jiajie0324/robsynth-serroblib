% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPRRR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:08
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPRRR9_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR9_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR9_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR9_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR9_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR9_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:08:47
% EndTime: 2019-12-31 19:08:50
% DurationCPUTime: 3.84s
% Computational Cost: add. (22489->243), mult. (54751->342), div. (0->0), fcn. (42617->10), ass. (0->191)
t1547 = cos(pkin(9));
t1557 = qJD(1) ^ 2;
t1551 = sin(qJ(1));
t1555 = cos(qJ(1));
t1530 = t1551 * g(1) - t1555 * g(2);
t1566 = -qJDD(2) + t1530;
t1546 = sin(pkin(9));
t1543 = t1546 ^ 2;
t1544 = t1547 ^ 2;
t1577 = t1543 + t1544;
t1504 = (t1577 * pkin(6) + qJ(2)) * t1557 + (t1547 * pkin(2) + pkin(1)) * qJDD(1) + t1566;
t1540 = t1547 * qJDD(1);
t1550 = sin(qJ(3));
t1554 = cos(qJ(3));
t1576 = t1546 * qJDD(1);
t1486 = t1554 * t1540 - t1550 * t1576;
t1564 = t1546 * t1554 + t1547 * t1550;
t1522 = t1564 * qJD(1);
t1582 = t1522 * qJD(3);
t1508 = t1486 - t1582;
t1587 = qJD(1) * t1547;
t1588 = qJD(1) * t1546;
t1521 = -t1550 * t1588 + t1554 * t1587;
t1519 = t1521 ^ 2;
t1567 = qJD(3) * pkin(3) - t1522 * pkin(7);
t1468 = t1508 * pkin(3) + t1519 * pkin(7) - t1522 * t1567 + t1504;
t1527 = t1577 * t1557;
t1549 = sin(qJ(4));
t1553 = cos(qJ(4));
t1498 = -t1553 * t1521 + t1549 * t1522;
t1497 = qJD(5) + t1498;
t1602 = qJD(5) + t1497;
t1601 = t1564 * qJDD(1);
t1500 = t1549 * t1521 + t1553 * t1522;
t1545 = qJD(3) + qJD(4);
t1548 = sin(qJ(5));
t1552 = cos(qJ(5));
t1487 = t1548 * t1500 - t1552 * t1545;
t1597 = t1487 ^ 2;
t1489 = t1552 * t1500 + t1548 * t1545;
t1596 = t1489 ^ 2;
t1595 = t1497 ^ 2;
t1594 = t1498 ^ 2;
t1593 = t1500 ^ 2;
t1592 = t1522 ^ 2;
t1591 = t1545 ^ 2;
t1586 = t1489 * t1487;
t1585 = t1500 * t1498;
t1584 = t1521 * qJD(3);
t1583 = t1521 * t1522;
t1581 = t1544 * t1557;
t1580 = t1547 * t1557;
t1579 = qJD(4) - t1545;
t1578 = qJD(5) - t1497;
t1531 = -t1555 * g(1) - t1551 * g(2);
t1523 = -t1557 * pkin(1) + qJDD(1) * qJ(2) + t1531;
t1571 = -t1547 * g(3) - 0.2e1 * qJD(2) * t1588;
t1494 = (pkin(2) * t1580 - pkin(6) * qJDD(1) - t1523) * t1546 + t1571;
t1512 = -t1546 * g(3) + 0.2e1 * qJD(2) * t1587 + t1547 * t1523;
t1496 = -pkin(2) * t1581 + pkin(6) * t1540 + t1512;
t1472 = t1550 * t1494 + t1554 * t1496;
t1452 = -t1519 * pkin(3) + t1508 * pkin(7) - qJD(3) * t1567 + t1472;
t1471 = t1554 * t1494 - t1550 * t1496;
t1505 = qJDD(3) + t1583;
t1510 = t1601 + t1584;
t1560 = (-t1510 + t1584) * pkin(7) + t1505 * pkin(3) + t1471;
t1430 = t1553 * t1452 + t1549 * t1560;
t1575 = t1551 * qJDD(1);
t1574 = t1555 * qJDD(1);
t1573 = qJDD(3) + qJDD(4);
t1429 = -t1549 * t1452 + t1553 * t1560;
t1565 = -t1549 * t1508 - t1553 * t1510;
t1470 = -t1498 * qJD(4) - t1565;
t1570 = t1545 * t1498 - t1470;
t1569 = -t1548 * t1470 + t1552 * t1573;
t1568 = -t1553 * t1508 + t1549 * t1510;
t1562 = -t1552 * t1470 - t1548 * t1573;
t1561 = -t1500 * qJD(4) - qJDD(5) - t1568;
t1455 = (qJD(4) + t1545) * t1500 + t1568;
t1556 = qJD(3) ^ 2;
t1532 = t1546 * t1580;
t1529 = -t1555 * t1557 - t1575;
t1528 = -t1551 * t1557 + t1574;
t1526 = t1577 * qJDD(1);
t1525 = t1547 * t1527;
t1524 = t1546 * t1527;
t1518 = qJDD(1) * pkin(1) + t1557 * qJ(2) + t1566;
t1513 = -t1556 - t1592;
t1511 = -t1546 * t1523 + t1571;
t1509 = t1601 + 0.2e1 * t1584;
t1507 = -t1486 + 0.2e1 * t1582;
t1506 = -qJDD(3) + t1583;
t1503 = -t1556 - t1519;
t1492 = -t1591 - t1593;
t1490 = -t1519 - t1592;
t1485 = t1554 * t1506 - t1550 * t1513;
t1484 = t1550 * t1506 + t1554 * t1513;
t1483 = -t1546 * t1511 + t1547 * t1512;
t1482 = t1547 * t1511 + t1546 * t1512;
t1481 = t1554 * t1486 + t1550 * t1601;
t1480 = t1550 * t1486 - t1554 * t1601;
t1479 = t1554 * t1503 - t1550 * t1505;
t1478 = t1550 * t1503 + t1554 * t1505;
t1477 = t1498 * pkin(4) - t1500 * pkin(8);
t1476 = -t1573 - t1585;
t1475 = t1573 - t1585;
t1474 = -t1591 - t1594;
t1469 = -t1593 - t1594;
t1467 = -t1546 * t1484 + t1547 * t1485;
t1466 = t1547 * t1484 + t1546 * t1485;
t1465 = -t1595 - t1596;
t1464 = t1553 * t1476 - t1549 * t1492;
t1463 = t1549 * t1476 + t1553 * t1492;
t1462 = -t1595 - t1597;
t1461 = -t1596 - t1597;
t1460 = -t1546 * t1480 + t1547 * t1481;
t1459 = t1547 * t1480 + t1546 * t1481;
t1458 = t1579 * t1498 + t1565;
t1456 = -t1579 * t1500 - t1568;
t1454 = -t1546 * t1478 + t1547 * t1479;
t1453 = t1547 * t1478 + t1546 * t1479;
t1451 = t1553 * t1474 - t1549 * t1475;
t1450 = t1549 * t1474 + t1553 * t1475;
t1446 = -t1550 * t1471 + t1554 * t1472;
t1445 = t1554 * t1471 + t1550 * t1472;
t1444 = t1561 - t1586;
t1443 = -t1561 - t1586;
t1442 = t1578 * t1487 + t1562;
t1441 = -t1602 * t1487 - t1562;
t1440 = -t1578 * t1489 + t1569;
t1439 = t1602 * t1489 - t1569;
t1438 = -t1550 * t1463 + t1554 * t1464;
t1437 = t1554 * t1463 + t1550 * t1464;
t1436 = t1553 * t1456 - t1549 * t1458;
t1435 = t1549 * t1456 + t1553 * t1458;
t1434 = -t1550 * t1450 + t1554 * t1451;
t1433 = t1554 * t1450 + t1550 * t1451;
t1432 = t1552 * t1444 - t1548 * t1465;
t1431 = t1548 * t1444 + t1552 * t1465;
t1428 = -t1548 * t1443 + t1552 * t1462;
t1427 = t1552 * t1443 + t1548 * t1462;
t1426 = -t1546 * t1445 + t1547 * t1446;
t1425 = t1547 * t1445 + t1546 * t1446;
t1424 = t1455 * pkin(4) + t1570 * pkin(8) - t1468;
t1423 = -t1591 * pkin(4) + t1573 * pkin(8) - t1498 * t1477 + t1430;
t1422 = -t1573 * pkin(4) - t1591 * pkin(8) + t1500 * t1477 - t1429;
t1421 = t1552 * t1440 - t1548 * t1442;
t1420 = t1548 * t1440 + t1552 * t1442;
t1419 = -t1546 * t1437 + t1547 * t1438;
t1418 = t1547 * t1437 + t1546 * t1438;
t1417 = t1553 * t1432 + t1549 * t1441;
t1416 = t1549 * t1432 - t1553 * t1441;
t1415 = t1553 * t1428 + t1549 * t1439;
t1414 = t1549 * t1428 - t1553 * t1439;
t1413 = -t1550 * t1435 + t1554 * t1436;
t1412 = t1554 * t1435 + t1550 * t1436;
t1411 = t1553 * t1421 + t1549 * t1461;
t1410 = t1549 * t1421 - t1553 * t1461;
t1409 = -t1546 * t1433 + t1547 * t1434;
t1408 = t1547 * t1433 + t1546 * t1434;
t1407 = -t1549 * t1429 + t1553 * t1430;
t1406 = t1553 * t1429 + t1549 * t1430;
t1405 = t1552 * t1423 + t1548 * t1424;
t1404 = -t1548 * t1423 + t1552 * t1424;
t1403 = -t1550 * t1416 + t1554 * t1417;
t1402 = t1554 * t1416 + t1550 * t1417;
t1401 = -t1550 * t1414 + t1554 * t1415;
t1400 = t1554 * t1414 + t1550 * t1415;
t1399 = -t1546 * t1412 + t1547 * t1413;
t1398 = t1547 * t1412 + t1546 * t1413;
t1397 = -t1550 * t1410 + t1554 * t1411;
t1396 = t1554 * t1410 + t1550 * t1411;
t1395 = -t1550 * t1406 + t1554 * t1407;
t1394 = t1554 * t1406 + t1550 * t1407;
t1393 = -t1548 * t1404 + t1552 * t1405;
t1392 = t1552 * t1404 + t1548 * t1405;
t1391 = t1553 * t1393 + t1549 * t1422;
t1390 = t1549 * t1393 - t1553 * t1422;
t1389 = -t1546 * t1402 + t1547 * t1403;
t1388 = t1547 * t1402 + t1546 * t1403;
t1387 = -t1546 * t1400 + t1547 * t1401;
t1386 = t1547 * t1400 + t1546 * t1401;
t1385 = -t1546 * t1396 + t1547 * t1397;
t1384 = t1547 * t1396 + t1546 * t1397;
t1383 = -t1546 * t1394 + t1547 * t1395;
t1382 = t1547 * t1394 + t1546 * t1395;
t1381 = -t1550 * t1390 + t1554 * t1391;
t1380 = t1554 * t1390 + t1550 * t1391;
t1379 = -t1546 * t1380 + t1547 * t1381;
t1378 = t1547 * t1380 + t1546 * t1381;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1529, -t1528, 0, -t1551 * t1530 + t1555 * t1531, 0, 0, 0, 0, 0, 0, -t1555 * t1525 - t1547 * t1575, t1555 * t1524 + t1546 * t1575, t1555 * t1526 - t1551 * t1527, t1555 * t1483 - t1551 * t1518, 0, 0, 0, 0, 0, 0, t1555 * t1454 + t1551 * t1507, t1555 * t1467 + t1551 * t1509, t1555 * t1460 + t1551 * t1490, t1555 * t1426 - t1551 * t1504, 0, 0, 0, 0, 0, 0, t1555 * t1409 + t1551 * t1455, t1555 * t1419 - t1551 * t1570, t1555 * t1399 + t1551 * t1469, t1555 * t1383 - t1551 * t1468, 0, 0, 0, 0, 0, 0, t1555 * t1387 + t1551 * t1427, t1555 * t1389 + t1551 * t1431, t1555 * t1385 + t1551 * t1420, t1555 * t1379 + t1551 * t1392; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1528, t1529, 0, t1555 * t1530 + t1551 * t1531, 0, 0, 0, 0, 0, 0, -t1551 * t1525 + t1547 * t1574, t1551 * t1524 - t1546 * t1574, t1551 * t1526 + t1555 * t1527, t1551 * t1483 + t1555 * t1518, 0, 0, 0, 0, 0, 0, t1551 * t1454 - t1555 * t1507, t1551 * t1467 - t1555 * t1509, t1551 * t1460 - t1555 * t1490, t1551 * t1426 + t1555 * t1504, 0, 0, 0, 0, 0, 0, t1551 * t1409 - t1555 * t1455, t1551 * t1419 + t1555 * t1570, t1551 * t1399 - t1555 * t1469, t1551 * t1383 + t1555 * t1468, 0, 0, 0, 0, 0, 0, t1551 * t1387 - t1555 * t1427, t1551 * t1389 - t1555 * t1431, t1551 * t1385 - t1555 * t1420, t1551 * t1379 - t1555 * t1392; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1482, 0, 0, 0, 0, 0, 0, t1453, t1466, t1459, t1425, 0, 0, 0, 0, 0, 0, t1408, t1418, t1398, t1382, 0, 0, 0, 0, 0, 0, t1386, t1388, t1384, t1378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1557, -qJDD(1), 0, t1531, 0, 0, 0, 0, 0, 0, -t1525, t1524, t1526, t1483, 0, 0, 0, 0, 0, 0, t1454, t1467, t1460, t1426, 0, 0, 0, 0, 0, 0, t1409, t1419, t1399, t1383, 0, 0, 0, 0, 0, 0, t1387, t1389, t1385, t1379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1557, 0, t1530, 0, 0, 0, 0, 0, 0, t1540, -t1576, t1527, t1518, 0, 0, 0, 0, 0, 0, -t1507, -t1509, -t1490, t1504, 0, 0, 0, 0, 0, 0, -t1455, t1570, -t1469, t1468, 0, 0, 0, 0, 0, 0, -t1427, -t1431, -t1420, -t1392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1482, 0, 0, 0, 0, 0, 0, t1453, t1466, t1459, t1425, 0, 0, 0, 0, 0, 0, t1408, t1418, t1398, t1382, 0, 0, 0, 0, 0, 0, t1386, t1388, t1384, t1378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1581, t1532, t1540, t1512, 0, 0, 0, 0, 0, 0, t1479, t1485, t1481, t1446, 0, 0, 0, 0, 0, 0, t1434, t1438, t1413, t1395, 0, 0, 0, 0, 0, 0, t1401, t1403, t1397, t1381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1532, -t1543 * t1557, -t1576, t1511, 0, 0, 0, 0, 0, 0, t1478, t1484, t1480, t1445, 0, 0, 0, 0, 0, 0, t1433, t1437, t1412, t1394, 0, 0, 0, 0, 0, 0, t1400, t1402, t1396, t1380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1540, t1576, -t1527, -t1518, 0, 0, 0, 0, 0, 0, t1507, t1509, t1490, -t1504, 0, 0, 0, 0, 0, 0, t1455, -t1570, t1469, -t1468, 0, 0, 0, 0, 0, 0, t1427, t1431, t1420, t1392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1503, t1506, t1486, t1472, 0, 0, 0, 0, 0, 0, t1451, t1464, t1436, t1407, 0, 0, 0, 0, 0, 0, t1415, t1417, t1411, t1391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1505, t1513, -t1601, t1471, 0, 0, 0, 0, 0, 0, t1450, t1463, t1435, t1406, 0, 0, 0, 0, 0, 0, t1414, t1416, t1410, t1390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1507, t1509, t1490, -t1504, 0, 0, 0, 0, 0, 0, t1455, -t1570, t1469, -t1468, 0, 0, 0, 0, 0, 0, t1427, t1431, t1420, t1392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1474, t1476, t1456, t1430, 0, 0, 0, 0, 0, 0, t1428, t1432, t1421, t1393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1475, t1492, t1458, t1429, 0, 0, 0, 0, 0, 0, -t1439, -t1441, -t1461, -t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1455, -t1570, t1469, -t1468, 0, 0, 0, 0, 0, 0, t1427, t1431, t1420, t1392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1462, t1444, t1440, t1405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1443, t1465, t1442, t1404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1439, t1441, t1461, t1422;];
f_new_reg = t1;
