% Calculate inertial parameters regressor of coriolis matrix for
% S5RPRRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:08
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPRRR9_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR9_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR9_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR9_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:08:05
% EndTime: 2019-12-31 19:08:21
% DurationCPUTime: 9.58s
% Computational Cost: add. (12415->413), mult. (24334->572), div. (0->0), fcn. (28587->8), ass. (0->340)
t394 = qJD(3) + qJD(4);
t304 = cos(qJ(5));
t300 = sin(pkin(9));
t301 = cos(pkin(9));
t518 = sin(qJ(3));
t520 = cos(qJ(3));
t276 = -t300 * t518 + t301 * t520;
t277 = t300 * t520 + t301 * t518;
t303 = sin(qJ(4));
t519 = cos(qJ(4));
t253 = -t276 * t519 + t277 * t303;
t477 = t253 ^ 2;
t270 = t519 * t277;
t465 = t303 * t276;
t542 = t270 + t465;
t563 = t542 ^ 2;
t566 = t563 - t477;
t576 = t566 * t304;
t579 = t576 * qJD(1);
t558 = t304 * t253;
t570 = t558 / 0.2e1;
t571 = -t558 / 0.2e1;
t573 = t571 + t570;
t581 = qJD(5) * t573;
t583 = t579 + t581;
t509 = pkin(6) + qJ(2);
t363 = t509 * t301;
t364 = t509 * t300;
t258 = t363 * t518 + t364 * t520;
t196 = -t277 * pkin(7) - t258;
t259 = t363 * t520 - t364 * t518;
t197 = t276 * pkin(7) + t259;
t74 = -t303 * t196 - t197 * t519;
t582 = t394 * t74;
t302 = sin(qJ(5));
t556 = t542 * t302;
t240 = t556 / 0.2e1;
t373 = -t556 / 0.2e1;
t575 = t373 + t240;
t580 = t575 * qJD(2);
t577 = t566 * t302;
t578 = t577 * qJD(1);
t354 = t270 / 0.2e1;
t541 = t354 + t465 / 0.2e1;
t547 = t542 * qJD(1);
t569 = t253 * t547;
t574 = qJD(5) * t541 + t569;
t572 = t566 * qJD(1);
t299 = t304 ^ 2;
t559 = t299 * t253;
t231 = -t559 / 0.2e1;
t232 = t559 / 0.2e1;
t124 = t196 * t519 - t197 * t303;
t487 = t124 * t74;
t568 = t302 * t124;
t567 = t304 * t124;
t513 = t253 * pkin(8);
t560 = t542 * pkin(4);
t169 = t560 + t513;
t338 = t124 * t253 - t542 * t74;
t515 = t74 * pkin(4);
t511 = t277 * pkin(3);
t129 = t511 + t169;
t470 = t302 * t129;
t76 = t567 + t470;
t497 = t76 * t304;
t462 = t304 * t129;
t75 = t462 - t568;
t500 = t75 * t302;
t533 = t497 / 0.2e1 - t500 / 0.2e1;
t565 = t533 * pkin(8) + t515 / 0.2e1;
t564 = t394 * t124;
t562 = -t253 / 0.2e1;
t528 = t253 / 0.2e1;
t561 = -t542 / 0.2e1;
t516 = pkin(8) * t542;
t290 = -pkin(2) * t301 - pkin(1);
t264 = -pkin(3) * t276 + t290;
t352 = pkin(4) * t253 - t516;
t310 = t264 + t352;
t554 = t74 * t302;
t65 = -t304 * t310 - t554;
t553 = t74 * t304;
t66 = t302 * t310 - t553;
t557 = (t302 * t66 - t304 * t65) * t253;
t404 = t253 * qJD(4);
t552 = -qJD(3) * t253 - t404;
t298 = t302 ^ 2;
t523 = t298 / 0.2e1;
t145 = (t523 - t299 / 0.2e1) * t542;
t467 = t302 * t304;
t544 = t394 * t467;
t119 = -t145 * qJD(1) + t544;
t551 = qJD(1) * t253;
t550 = qJD(2) * t253;
t548 = t541 * qJD(1);
t546 = -0.2e1 * t542;
t287 = t299 - t298;
t545 = t394 * t287;
t162 = 0.2e1 * t571;
t135 = (t562 + t528) * t467;
t426 = t145 * qJD(5);
t540 = -qJD(4) * t135 + t426;
t539 = qJD(3) * t135 + t426;
t134 = t162 * t302;
t538 = -t134 * qJD(4) + t426;
t537 = -t134 * qJD(3) + t426;
t295 = qJD(5) * t304;
t288 = t302 * t295;
t430 = t135 * qJD(1);
t536 = t430 - t288;
t535 = t430 + t288;
t534 = t302 * t65 + t304 * t66;
t385 = qJD(1) * t467;
t53 = t145 * t394 + t385 * t563;
t531 = t277 ^ 2;
t390 = t519 * pkin(3);
t292 = -t390 - pkin(4);
t525 = -t292 / 0.2e1;
t524 = t292 / 0.2e1;
t522 = t303 / 0.2e1;
t521 = -t304 / 0.2e1;
t517 = pkin(4) * t302;
t510 = t303 * pkin(3);
t508 = pkin(3) * qJD(4);
t507 = qJD(3) * pkin(3);
t3 = -t65 * t75 + t66 * t76 + t487;
t506 = t3 * qJD(1);
t461 = t304 * t169;
t83 = t461 - t568;
t469 = t302 * t169;
t84 = t469 + t567;
t4 = -t65 * t83 + t66 * t84 + t487;
t504 = t4 * qJD(1);
t498 = t76 * t302;
t499 = t75 * t304;
t5 = (t498 + t499) * t542 - t557;
t503 = t5 * qJD(1);
t494 = t84 * t302;
t495 = t83 * t304;
t6 = (t494 + t495) * t542 - t557;
t502 = t6 * qJD(1);
t496 = t83 * t302;
t493 = t84 * t304;
t10 = t75 * t253 + t302 * t338 - t542 * t65;
t492 = t10 * qJD(1);
t11 = -t76 * t253 + t304 * t338 - t542 * t66;
t491 = t11 * qJD(1);
t12 = (-t65 - t554) * t542 + (t83 + t568) * t253;
t490 = t12 * qJD(1);
t486 = t124 * t542;
t13 = (-t66 - t553) * t542 + (-t84 + t567) * t253;
t483 = t13 * qJD(1);
t14 = -t253 * t534 - t486;
t482 = t14 * qJD(1);
t291 = pkin(8) + t510;
t351 = (t299 / 0.2e1 + t523) * t253;
t311 = -t291 * t351 + t524 * t542;
t331 = -t499 / 0.2e1 - t498 / 0.2e1;
t15 = t311 + t331;
t481 = t15 * qJD(1);
t312 = -pkin(8) * t351 - t560 / 0.2e1;
t329 = -t495 / 0.2e1 - t494 / 0.2e1;
t19 = t312 + t329;
t479 = t19 * qJD(1);
t392 = -t519 / 0.2e1;
t309 = t291 * t561 + t253 * t525 + (t253 * t392 + t522 * t542) * pkin(3);
t306 = t516 / 0.2e1 + pkin(4) * t562 + t309;
t22 = t306 * t302;
t478 = t22 * qJD(1);
t26 = t264 * t511;
t475 = t26 * qJD(1);
t474 = t292 * t302;
t148 = t302 * t253;
t459 = t304 * t542;
t42 = t124 * t556 + t253 * t65;
t458 = t42 * qJD(1);
t43 = -t124 * t459 - t253 * t66;
t457 = t43 * qJD(1);
t48 = t253 * t74 - t486;
t456 = t48 * qJD(1);
t243 = t298 * t253;
t222 = -t243 / 0.2e1;
t372 = t253 * t523;
t347 = t232 + t372;
t86 = t231 + t222 + t347;
t453 = t86 * qJD(1);
t223 = t243 / 0.2e1;
t89 = t232 + t223 + t347;
t452 = t89 * qJD(1);
t94 = t563 + t477;
t91 = t94 * t302;
t450 = t91 * qJD(1);
t93 = t94 * t304;
t448 = t93 * qJD(1);
t447 = t94 * qJD(1);
t99 = -t253 * t511 - t264 * t542;
t443 = t99 * qJD(1);
t366 = 0.2e1 * t561;
t157 = t366 * t304;
t405 = t542 * qJD(3);
t442 = -qJD(4) * t157 + t304 * t405;
t286 = t300 ^ 2 + t301 ^ 2;
t440 = qJD(1) * t264;
t439 = qJD(3) * t304;
t438 = qJD(4) * t304;
t437 = qJD(5) * t302;
t100 = t253 * t264 - t511 * t542;
t436 = t100 * qJD(1);
t317 = -t253 * t522 + t392 * t542;
t120 = (-t277 / 0.2e1 + t317) * pkin(3);
t434 = t120 * qJD(1);
t131 = t258 * t277 + t259 * t276;
t433 = t131 * qJD(1);
t425 = t556 * qJD(1);
t424 = t148 * qJD(1);
t150 = 0.2e1 * t562 * t302;
t141 = t150 * qJD(1);
t365 = t542 / 0.2e1 + t561;
t153 = t365 * t302;
t423 = t153 * qJD(1);
t155 = t366 * t302;
t422 = t155 * qJD(1);
t156 = t365 * t304;
t421 = t156 * qJD(1);
t420 = t157 * qJD(1);
t419 = t558 * qJD(1);
t161 = 0.2e1 * t570;
t418 = t161 * qJD(1);
t417 = t162 * qJD(1);
t167 = t243 + t559;
t416 = t167 * qJD(1);
t168 = t287 * t563;
t415 = t168 * qJD(1);
t175 = 0.2e1 * t354 + t465;
t413 = t175 * qJD(1);
t275 = t276 ^ 2;
t202 = t275 - t531;
t412 = t202 * qJD(1);
t250 = t354 - t270 / 0.2e1;
t409 = t250 * qJD(1);
t408 = t250 * qJD(4);
t406 = t542 * qJD(2);
t401 = t542 * qJD(4);
t257 = t275 + t531;
t400 = t257 * qJD(1);
t399 = t276 * qJD(1);
t273 = t276 * qJD(3);
t398 = t277 * qJD(1);
t397 = t277 * qJD(3);
t279 = t286 * qJ(2);
t396 = t279 * qJD(1);
t395 = t286 * qJD(1);
t389 = t303 * t508;
t388 = t303 * t507;
t387 = t298 * t547;
t386 = t299 * t547;
t384 = qJD(5) * t253 * t542;
t381 = t542 * t551;
t380 = t253 * t440;
t379 = t542 * t440;
t378 = t276 * t398;
t377 = t276 * t397;
t376 = t302 * t439;
t375 = t302 * t438;
t374 = t304 * t547;
t371 = t302 * t528;
t362 = t519 * qJD(3);
t361 = t519 * qJD(4);
t360 = -qJD(1) * t290 - qJD(2);
t359 = -t390 / 0.2e1;
t358 = t563 * t288;
t356 = t542 * t385;
t355 = t231 + t372;
t353 = t394 * t510;
t350 = -0.2e1 * t356;
t349 = 0.2e1 * t356;
t343 = t497 - t500;
t342 = t493 - t496;
t341 = t253 * t356;
t328 = t493 / 0.2e1 - t496 / 0.2e1;
t305 = t328 * t291 + (-t124 * t522 + t534 * t519 / 0.2e1) * pkin(3) - t74 * t524;
t2 = t305 - t565;
t316 = (t298 + t299) * t519;
t246 = (t291 * t316 + t292 * t303) * pkin(3);
t340 = -t2 * qJD(1) - t246 * qJD(3);
t274 = t316 * pkin(3);
t9 = (t84 / 0.2e1 - t76 / 0.2e1) * t304 + (-t83 / 0.2e1 + t75 / 0.2e1) * t302;
t339 = -qJD(1) * t9 - qJD(3) * t274;
t336 = -t292 * t253 - t291 * t542;
t335 = t542 * (-qJD(5) - t551);
t334 = qJD(4) * t175 + t405;
t332 = t513 / 0.2e1 + t560 / 0.2e1;
t327 = t291 * t528 + t525 * t542;
t315 = t129 / 0.2e1 + t327;
t39 = t315 * t304;
t326 = qJD(1) * t39 - qJD(3) * t474;
t37 = t315 * t302;
t325 = -qJD(1) * t37 - t292 * t439;
t322 = t359 + pkin(4) / 0.2e1 + t525;
t321 = (t401 + t405) * t253;
t320 = t552 * t542;
t25 = t306 * t304;
t319 = -qJD(1) * t25 - t302 * t388;
t318 = t169 / 0.2e1 + t332;
t260 = t322 * t302;
t46 = t318 * t304;
t314 = qJD(1) * t46 + qJD(3) * t260 + qJD(4) * t517;
t261 = t322 * t304;
t44 = t318 * t302;
t313 = pkin(4) * t438 - qJD(1) * t44 + qJD(3) * t261;
t285 = t302 * t389;
t282 = t287 * qJD(5);
t271 = t274 * qJD(4);
t263 = pkin(4) * t521 + (t359 + t524) * t304;
t262 = -t517 / 0.2e1 + t474 / 0.2e1 + t302 * t359;
t203 = t288 * t546;
t171 = t350 + t545;
t170 = t349 - t545;
t166 = t394 * t541;
t152 = 0.2e1 * t240;
t151 = -t148 / 0.2e1 + t371;
t143 = t156 * qJD(4);
t140 = t151 * qJD(5);
t139 = t150 * qJD(5);
t130 = t141 - t437;
t121 = t511 / 0.2e1 + t317 * pkin(3);
t88 = t232 + t222 + t355;
t87 = t231 + t223 + t355;
t47 = -t568 + t461 / 0.2e1 - t332 * t304;
t45 = -t567 - t469 / 0.2e1 + t332 * t302;
t40 = -t568 + t462 / 0.2e1 - t327 * t304;
t38 = -t567 - t470 / 0.2e1 + t327 * t302;
t24 = pkin(4) * t570 + t304 * t309 + t516 * t521 - t554;
t23 = pkin(4) * t371 + pkin(8) * t373 + t302 * t309 + t553;
t20 = t312 - t329;
t16 = t311 - t331;
t8 = t328 + t533;
t1 = t305 + t565;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286 * qJD(2), t279 * qJD(2), t377, t202 * qJD(3), 0, -t377, 0, 0, t290 * t397, t290 * t273, t257 * qJD(2), t131 * qJD(2), t320, -t394 * t566, 0, t321, 0, 0, -qJD(3) * t99 + t264 * t401, -qJD(3) * t100 - t264 * t404, t94 * qJD(2), qJD(2) * t48 + qJD(3) * t26, t299 * t320 - t358, -0.2e1 * t302 * t459 * t552 - t168 * qJD(5), -t302 * t384 + t394 * t576, t298 * t320 + t358, -t304 * t384 - t394 * t577, t321, qJD(2) * t91 + qJD(3) * t10 + qJD(4) * t12 + qJD(5) * t43, qJD(2) * t93 + qJD(3) * t11 + qJD(4) * t13 + qJD(5) * t42, -qJD(3) * t5 - qJD(4) * t6, qJD(2) * t14 + qJD(3) * t3 + qJD(4) * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t395, t396, 0, 0, 0, 0, 0, 0, 0, 0, t400, t433, 0, 0, 0, 0, 0, 0, t408, 0, t447, qJD(3) * t121 + t456, 0, 0, 0, 0, 0, 0, t140 + t143 + t450, t394 * t575 + t448 + t581, t88 * qJD(4), qJD(3) * t16 + qJD(4) * t20 + t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, t412, t273, -t378, -t397, 0, -qJD(3) * t259 + t290 * t398, qJD(3) * t258 + t290 * t399, 0, 0, -t381, -t572, t552, t569, -t334, 0, -t443 + t582, -t436 - t564, (t253 * t519 - t303 * t542) * t507, t475 + t121 * qJD(2) + (t124 * t303 + t519 * t74) * t507, -(t376 + t386) * t253 - t538, 0.2e1 * t341 + (t243 - t559) * qJD(3) + t87 * qJD(4) + t203, qJD(4) * t152 + t302 * t405 + t583, -(-t376 + t387) * t253 + t538, t140 + t442 - t578, t574, t492 + (t302 * t336 + t553) * qJD(3) + t23 * qJD(4) + t40 * qJD(5), t491 + t580 + (t304 * t336 - t554) * qJD(3) + t24 * qJD(4) + t38 * qJD(5), qJD(3) * t343 + qJD(4) * t8 - t503, t506 + t16 * qJD(2) + (t291 * t343 - t292 * t74) * qJD(3) + t1 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t569, -t572, t552, t569, -qJD(3) * t175 - t401, 0, qJD(2) * t250 + t379 + t582, -t380 - t564, 0, 0, (-t375 - t386) * t253 - t537, t87 * qJD(3) + t203 + (-qJD(4) * t287 + t349) * t253, qJD(3) * t152 + t302 * t401 + t583, (t375 - t387) * t253 + t537, -qJD(3) * t157 + t304 * t401 - t578, t574, t490 + t156 * qJD(2) + t23 * qJD(3) + (t302 * t352 + t553) * qJD(4) + t47 * qJD(5), t483 + t580 + t24 * qJD(3) + (t304 * t352 - t554) * qJD(4) + t45 * qJD(5), qJD(2) * t88 + qJD(3) * t8 + qJD(4) * t342 - t502, t504 + t20 * qJD(2) + t1 * qJD(3) + (pkin(8) * t342 + t515) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, t544 * t546 - t415, t302 * t335 + t394 * t573, t53, t151 * qJD(3) + t304 * t335, t166, qJD(2) * t151 + qJD(3) * t40 + qJD(4) * t47 - qJD(5) * t66 + t457, qJD(2) * t573 + qJD(3) * t38 + qJD(4) * t45 + qJD(5) * t65 + t458, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t395, -t396, 0, 0, 0, 0, 0, 0, t397, t273, -t400, -t433, 0, 0, 0, 0, 0, 0, t334, t552, -t447, -qJD(3) * t120 - t456, 0, 0, 0, 0, 0, 0, t139 + t442 - t450, -qJD(3) * t556 + qJD(4) * t155 + qJD(5) * t162 - t448, qJD(3) * t167 + qJD(4) * t89, -qJD(3) * t15 - qJD(4) * t19 - t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t398, t399, 0, 0, 0, 0, 0, 0, 0, 0, t547, -t551, 0, -t434, 0, 0, 0, 0, 0, 0, t374, -t425, t416, -t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t413, -t551, 0, 0, 0, 0, 0, 0, 0, 0, -t420, t422, t452, -t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, -t295 + t417, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, -t412, 0, t378, 0, 0, t360 * t277, t360 * t276, 0, 0, t381, t572, 0, -t569, -t408, 0, -t406 + t443, t436 + t550, 0, qJD(2) * t120 - t475, t299 * t381 - t540, qJD(4) * t86 + t203 - 0.2e1 * t341, qJD(4) * t153 + qJD(5) * t161 - t579, t298 * t381 + t540, t139 + t143 + t578, -t574, qJD(4) * t22 - qJD(5) * t39 - t304 * t406 - t492, qJD(2) * t556 + qJD(4) * t25 + qJD(5) * t37 - t491, -qJD(2) * t167 + qJD(4) * t9 + t503, qJD(2) * t15 + qJD(4) * t2 - t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t398, -t399, 0, 0, 0, 0, 0, 0, 0, 0, -t547, t551, 0, t434, 0, 0, 0, 0, 0, 0, -t374, t425, -t416, t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389, -pkin(3) * t361, 0, 0, t288, t282, 0, -t288, 0, 0, t292 * t437 - t304 * t389, t292 * t295 + t285, t271, t246 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409, 0, -t353, (-t362 - t361) * pkin(3), 0, 0, t535, t282 + t453, t423, -t535, t421, 0, t262 * qJD(5) - t304 * t353 + t478, qJD(5) * t263 + t285 - t319, t271 - t339, (-pkin(4) * t303 + pkin(8) * t316) * t508 - t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t171, t295 + t418, -t119, t130, -t548, qJD(4) * t262 - t291 * t295 - t326, qJD(4) * t263 + t291 * t437 - t325, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t569, t572, 0, -t569, t250 * qJD(3), 0, -qJD(2) * t175 - t379, t380 + t550, 0, 0, t299 * t569 - t539, -qJD(3) * t86 + t253 * t350 + t203, -qJD(3) * t153 + qJD(5) * t558 - t579, t298 * t569 + t539, -qJD(3) * t156 - qJD(5) * t148 + t578, -t574, qJD(2) * t157 - qJD(3) * t22 - qJD(5) * t46 - t490, -qJD(2) * t155 - qJD(3) * t25 + qJD(5) * t44 - t483, -qJD(2) * t89 - qJD(3) * t9 + t502, qJD(2) * t19 - qJD(3) * t2 - t504; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t413, t551, 0, 0, 0, 0, 0, 0, 0, 0, t420, -t422, -t452, t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409, 0, t388, pkin(3) * t362, 0, 0, -t536, t282 - t453, -t423, t536, -t421, 0, -qJD(5) * t260 + t304 * t388 - t478, -qJD(5) * t261 + t319, t339, t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t288, t282, 0, -t288, 0, 0, -pkin(4) * t437, -pkin(4) * t295, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t119, t171, t295 + t419, -t119, -t424 - t437, -t548, -pkin(8) * t295 - t314, pkin(8) * t437 - t313, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0.2e1 * t542 * t544 + t415, -qJD(3) * t161 - qJD(4) * t558 + t302 * t569, -t53, -qJD(3) * t150 + qJD(4) * t148 + t304 * t569, t166, -qJD(2) * t150 + qJD(3) * t39 + qJD(4) * t46 - t457, -qJD(2) * t162 - qJD(3) * t37 - qJD(4) * t44 - t458, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t141, -t417, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, t170, -t418, t119, -t141, t548, qJD(4) * t260 + t326, qJD(4) * t261 + t325, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t119, t170, -t419, t119, t424, t548, t314, t313, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t7;
