% Calculate vector of inverse dynamics joint torques for
% S5RPRRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,d5,theta2]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 19:08
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RPRRR9_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRR9_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRR9_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRR9_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRR9_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRRR9_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RPRRR9_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RPRRR9_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RPRRR9_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 19:07:19
% EndTime: 2019-12-31 19:07:58
% DurationCPUTime: 29.88s
% Computational Cost: add. (32496->1065), mult. (32032->1401), div. (0->0), fcn. (29115->10), ass. (0->537)
t464 = pkin(9) + qJ(3);
t442 = qJ(4) + t464;
t424 = cos(t442);
t473 = cos(qJ(5));
t474 = cos(qJ(1));
t695 = t473 * t474;
t471 = sin(qJ(5));
t472 = sin(qJ(1));
t697 = t471 * t472;
t337 = t424 * t697 + t695;
t694 = t474 * t471;
t696 = t472 * t473;
t338 = t424 * t696 - t694;
t571 = t338 * rSges(6,1) - t337 * rSges(6,2);
t423 = sin(t442);
t710 = t423 * t472;
t186 = -rSges(6,3) * t710 - t571;
t757 = rSges(6,2) * t471;
t761 = rSges(6,1) * t473;
t570 = -t757 + t761;
t257 = -rSges(6,3) * t424 + t423 * t570;
t465 = qJD(3) + qJD(4);
t398 = t465 * t474;
t643 = qJD(5) * t472;
t317 = -t423 * t643 + t398;
t770 = pkin(4) * t423;
t355 = -pkin(8) * t424 + t770;
t645 = qJD(5) * t424;
t392 = qJD(1) - t645;
t445 = qJD(2) * t472;
t437 = sin(t464);
t647 = qJD(3) * t474;
t611 = t437 * t647;
t582 = pkin(3) * t611;
t531 = t445 - t582;
t833 = t186 * t392 - t257 * t317 - t355 * t398 + t531;
t176 = Icges(6,5) * t338 - Icges(6,6) * t337 + Icges(6,3) * t710;
t320 = Icges(6,4) * t338;
t179 = -Icges(6,2) * t337 + Icges(6,6) * t710 + t320;
t319 = Icges(6,4) * t337;
t183 = -Icges(6,1) * t338 - Icges(6,5) * t710 + t319;
t831 = t179 * t471 + t183 * t473;
t79 = -t176 * t424 - t831 * t423;
t550 = Icges(6,5) * t473 - Icges(6,6) * t471;
t249 = -Icges(6,3) * t424 + t423 * t550;
t736 = Icges(6,4) * t473;
t552 = -Icges(6,2) * t471 + t736;
t251 = -Icges(6,6) * t424 + t423 * t552;
t737 = Icges(6,4) * t471;
t556 = Icges(6,1) * t473 - t737;
t253 = -Icges(6,5) * t424 + t423 * t556;
t101 = t249 * t710 - t251 * t337 + t253 * t338;
t444 = qJD(3) * t472;
t397 = qJD(4) * t472 + t444;
t642 = qJD(5) * t474;
t316 = t423 * t642 + t397;
t71 = t176 * t710 - t179 * t337 - t183 * t338;
t339 = -t424 * t694 + t696;
t340 = t424 * t695 + t697;
t708 = t423 * t474;
t178 = Icges(6,5) * t340 + Icges(6,6) * t339 + Icges(6,3) * t708;
t738 = Icges(6,4) * t340;
t181 = Icges(6,2) * t339 + Icges(6,6) * t708 + t738;
t321 = Icges(6,4) * t339;
t184 = Icges(6,1) * t340 + Icges(6,5) * t708 + t321;
t72 = t178 * t710 - t337 * t181 + t338 * t184;
t28 = t101 * t392 + t316 * t72 - t317 * t71;
t102 = t249 * t708 + t251 * t339 + t253 * t340;
t73 = t176 * t708 + t339 * t179 - t183 * t340;
t74 = t178 * t708 + t339 * t181 + t340 * t184;
t29 = t102 * t392 + t316 * t74 - t317 * t73;
t786 = -t316 / 0.2e1;
t783 = t317 / 0.2e1;
t830 = rSges(4,2) * t437;
t569 = -rSges(6,1) * t471 - rSges(6,2) * t473;
t707 = t424 * t465;
t134 = t570 * t707 + (rSges(6,3) * t465 + qJD(5) * t569) * t423;
t635 = -qJDD(3) - qJDD(4);
t636 = qJDD(5) * t423;
t644 = qJD(5) * t465;
t646 = qJD(5) * t423;
t638 = qJD(1) * qJD(3);
t428 = t472 * t638;
t637 = qJD(1) * qJD(4);
t656 = t472 * t637 + t428;
t144 = (t424 * t644 + t636) * t472 + (qJD(1) * t646 + t635) * t474 + t656;
t648 = qJD(1) * t474;
t699 = t465 * t472;
t510 = t423 * t648 + t424 * t699;
t627 = t423 * t699;
t189 = t510 * pkin(8) + (t424 * t648 - t627) * pkin(4);
t416 = t424 * pkin(4);
t809 = t423 * pkin(8) + t416;
t296 = t809 * t465;
t298 = t474 * t635 + t656;
t299 = -qJDD(5) * t424 + t423 * t644 + qJDD(1);
t376 = -qJDD(3) * t474 + t428;
t639 = qJD(1) * qJD(2);
t655 = qJDD(2) * t472 + t474 * t639;
t438 = cos(t464);
t700 = t438 * qJD(3) ^ 2;
t771 = pkin(3) * t437;
t508 = -pkin(3) * t474 * t700 + t376 * t771 + t655;
t313 = t809 * t472;
t469 = cos(pkin(9));
t425 = t469 * pkin(2) + pkin(1);
t422 = pkin(3) * t438;
t371 = t422 + t425;
t470 = -pkin(6) - qJ(2);
t463 = -pkin(7) + t470;
t669 = -t472 * t371 - t474 * t463;
t698 = t470 * t474;
t225 = t425 * t472 + t669 + t698;
t449 = t474 * qJ(2);
t764 = pkin(1) - t425;
t520 = t472 * t764 - t698;
t278 = -t449 + t520;
t399 = pkin(1) * t472 - t449;
t675 = t278 - t399;
t620 = t225 + t675;
t579 = -t313 + t620;
t704 = t437 * t472;
t634 = pkin(3) * t704;
t384 = qJD(3) * t634;
t649 = qJD(1) * t472;
t411 = t463 * t649;
t417 = t470 * t649;
t664 = t371 - t425;
t173 = t648 * t664 - t384 - t411 + t417;
t447 = t472 * qJ(2);
t401 = t474 * pkin(1) + t447;
t446 = qJD(2) * t474;
t345 = qJD(1) * t401 - t446;
t681 = t417 - (-t474 * t764 - t447) * qJD(1) - t345;
t621 = -t173 + t681;
t581 = qJD(1) * t424 - qJD(5);
t165 = t392 * t696 + (-t474 * t581 + t627) * t471;
t709 = t423 * t473;
t166 = t581 * t695 + (t392 * t471 - t465 * t709) * t472;
t572 = rSges(6,1) * t166 + rSges(6,2) * t165;
t99 = rSges(6,3) * t510 + t572;
t20 = -t134 * t317 + t144 * t257 + t186 * t299 - t296 * t398 + t298 * t355 - t392 * t99 + t579 * qJDD(1) + (-t189 + t621) * qJD(1) + t508;
t187 = t340 * rSges(6,1) + t339 * rSges(6,2) + rSges(6,3) * t708;
t705 = t424 * t474;
t315 = pkin(4) * t705 + pkin(8) * t708;
t358 = t474 * t371;
t406 = t474 * t425;
t653 = -t463 + t470;
t226 = t472 * t653 + t358 - t406;
t584 = -t470 * t472 + t406;
t279 = t584 - t401;
t674 = t279 + t401;
t619 = t226 + t674;
t661 = t384 + t446;
t64 = t187 * t392 - t257 * t316 - t355 * t397 + (t315 + t619) * qJD(1) - t661;
t826 = t474 * (qJD(1) * t64 + t20);
t825 = -t186 + t313;
t824 = t187 + t315;
t823 = t257 + t355;
t706 = t424 * t472;
t729 = Icges(5,6) * t474;
t271 = Icges(5,4) * t706 - Icges(5,2) * t710 - t729;
t412 = Icges(5,4) * t424;
t351 = Icges(5,1) * t423 + t412;
t822 = -t351 * t472 - t271;
t553 = -Icges(5,2) * t423 + t412;
t272 = Icges(5,6) * t472 + t474 * t553;
t821 = -t351 * t474 - t272;
t739 = Icges(5,4) * t423;
t352 = Icges(5,1) * t424 - t739;
t274 = Icges(5,5) * t472 + t352 * t474;
t349 = Icges(5,2) * t424 + t739;
t820 = -t349 * t474 + t274;
t819 = -t349 + t352;
t818 = t351 + t553;
t632 = rSges(6,1) * t709;
t630 = t423 * t757;
t666 = rSges(6,3) * t706 + t472 * t630;
t235 = -t472 * t632 + t666;
t665 = rSges(6,3) * t705 + t474 * t630;
t236 = -t474 * t632 + t665;
t413 = t423 * rSges(6,3);
t258 = t570 * t424 + t413;
t393 = pkin(8) * t706;
t312 = -pkin(4) * t710 + t393;
t395 = pkin(8) * t705;
t314 = -pkin(4) * t708 + t395;
t688 = -t225 * t444 + t226 * t647;
t58 = -t186 * t316 + t187 * t317 + t313 * t397 + t315 * t398 + t688;
t608 = t424 * t642;
t609 = t424 * t643;
t806 = g(1) * t474 + g(2) * t472;
t817 = -t58 * (-t186 * t608 - t187 * t609 + t316 * t235 + t236 * t317 + t397 * t312 + t314 * t398) - t64 * (qJD(1) * t314 + t187 * t646 + t392 * t236 - t257 * t608 - t258 * t316 - t397 * t809) - t806 * (-pkin(4) - t761) * t423;
t816 = qJD(1) * t312 - t186 * t646 + t235 * t392 - t257 * t609 + t317 * t258 + t398 * t809 + t823 * t649;
t815 = t28 * t472 + t29 * t474;
t353 = rSges(5,1) * t423 + rSges(5,2) * t424;
t310 = t353 * t472;
t311 = t353 * t474;
t414 = t424 * rSges(5,1);
t810 = -rSges(5,2) * t423 + t414;
t275 = rSges(5,1) * t706 - rSges(5,2) * t710 - t474 * rSges(5,3);
t456 = t472 * rSges(5,3);
t276 = rSges(5,1) * t705 - rSges(5,2) * t708 + t456;
t83 = t275 * t397 + t276 * t398 + t688;
t502 = -t353 * t398 + t531;
t580 = -t275 + t620;
t86 = qJD(1) * t580 + t502;
t87 = -t353 * t397 + (t276 + t619) * qJD(1) - t661;
t814 = -(qJD(1) * t310 - t398 * t810) * t86 - t83 * (-t397 * t310 - t311 * t398) - t87 * (-qJD(1) * t311 - t397 * t810);
t378 = qJD(1) * t399;
t811 = qJD(1) * t278 - t378;
t421 = Icges(4,4) * t438;
t554 = -Icges(4,2) * t437 + t421;
t363 = Icges(4,1) * t437 + t421;
t375 = qJDD(3) * t472 + t474 * t638;
t297 = qJDD(4) * t472 + t474 * t637 + t375;
t614 = t423 * t649;
t625 = t424 * t398;
t509 = -t614 + t625;
t143 = qJD(5) * t509 + t474 * t636 + t297;
t368 = pkin(8) * t625;
t626 = t423 * t398;
t511 = -t424 * t649 - t626;
t188 = pkin(4) * t511 - pkin(8) * t614 + t368;
t172 = -t582 + (-t472 * t664 + t474 * t653) * qJD(1);
t432 = qJ(2) * t648;
t654 = t432 + t445;
t527 = -qJDD(2) * t474 + qJD(1) * (-pkin(1) * t649 + t654) + qJDD(1) * t401 + t472 * t639;
t503 = qJD(1) * (qJD(1) * t520 - t432) + qJDD(1) * t279 + t527;
t482 = qJD(1) * t172 + qJDD(1) * t226 + (-t375 * t437 - t472 * t700) * pkin(3) + t503;
t532 = t392 * t474;
t803 = t472 * t581 + t626;
t163 = t471 * t803 + t473 * t532;
t164 = t471 * t532 - t473 * t803;
t623 = t164 * rSges(6,1) + t163 * rSges(6,2) + rSges(6,3) * t625;
t98 = -rSges(6,3) * t614 + t623;
t21 = qJD(1) * t188 + qJDD(1) * t315 - t316 * t134 - t143 * t257 + t299 * t187 - t397 * t296 - t297 * t355 + t392 * t98 + t482;
t807 = t20 * t472 - t21 * t474;
t805 = qJD(1) * t225 + t811;
t468 = sin(pkin(9));
t760 = rSges(3,2) * t468;
t763 = rSges(3,1) * t469;
t327 = t472 * rSges(3,3) + (-t760 + t763) * t474;
t769 = g(1) * t472;
t804 = -g(2) * t474 + t769;
t702 = t438 * t472;
t727 = Icges(4,3) * t474;
t282 = Icges(4,5) * t702 - Icges(4,6) * t704 - t727;
t405 = Icges(4,4) * t704;
t735 = Icges(4,5) * t474;
t286 = Icges(4,1) * t702 - t405 - t735;
t730 = Icges(4,6) * t474;
t284 = Icges(4,4) * t702 - Icges(4,2) * t704 - t730;
t716 = t284 * t437;
t538 = -t286 * t438 + t716;
t111 = -t282 * t474 - t472 * t538;
t348 = Icges(5,5) * t424 - Icges(5,6) * t423;
t347 = Icges(5,5) * t423 + Icges(5,6) * t424;
t713 = t347 * t474;
t718 = t272 * t423;
t726 = Icges(5,3) * t474;
t802 = -t465 * t713 + (-t274 * t424 - t348 * t472 + t718 + t726) * qJD(1);
t383 = Icges(5,4) * t710;
t734 = Icges(5,5) * t474;
t273 = Icges(5,1) * t706 - t383 - t734;
t540 = t271 * t423 - t273 * t424;
t270 = Icges(5,3) * t472 + t348 * t474;
t652 = qJD(1) * t270;
t714 = t347 * t472;
t801 = qJD(1) * t540 - t465 * t714 + t652;
t360 = Icges(4,5) * t438 - Icges(4,6) * t437;
t359 = Icges(4,5) * t437 + Icges(4,6) * t438;
t513 = qJD(3) * t359;
t740 = Icges(4,4) * t437;
t364 = Icges(4,1) * t438 - t740;
t287 = Icges(4,5) * t472 + t364 * t474;
t285 = Icges(4,6) * t472 + t474 * t554;
t715 = t285 * t437;
t537 = -t287 * t438 + t715;
t800 = -t474 * t513 + (-t360 * t472 + t537 + t727) * qJD(1);
t283 = Icges(4,3) * t472 + t360 * t474;
t651 = qJD(1) * t283;
t799 = qJD(1) * t538 - t472 * t513 + t651;
t535 = t349 * t423 - t351 * t424;
t798 = qJD(1) * t535 + t348 * t465;
t361 = Icges(4,2) * t438 + t740;
t533 = t361 * t437 - t363 * t438;
t797 = t533 * qJD(1) + t360 * qJD(3);
t796 = t472 * (-t361 * t474 + t287) - t474 * (-Icges(4,2) * t702 + t286 - t405);
t517 = t550 * t424;
t541 = -t251 * t471 + t253 * t473;
t544 = -t181 * t471 + t184 * t473;
t795 = t316 * (-t249 * t474 - t544) - t317 * (-t249 * t472 + t831) + t392 * (Icges(6,3) * t423 + t517 - t541);
t551 = -Icges(6,2) * t473 - t737;
t794 = t316 * (-Icges(6,2) * t340 + t184 + t321) - t317 * (-Icges(6,2) * t338 - t183 - t319) + t392 * (t551 * t423 + t253);
t793 = qJD(1) * t818 + t397 * t820 - t398 * (-Icges(5,2) * t706 + t273 - t383);
t92 = Icges(6,5) * t166 + Icges(6,6) * t165 + Icges(6,3) * t510;
t94 = Icges(6,4) * t166 + Icges(6,2) * t165 + Icges(6,6) * t510;
t96 = Icges(6,1) * t166 + Icges(6,4) * t165 + Icges(6,5) * t510;
t22 = (-t465 * t831 - t92) * t424 + (t176 * t465 - t471 * t94 + t473 * t96 + (-t179 * t473 + t183 * t471) * qJD(5)) * t423;
t91 = Icges(6,5) * t164 + Icges(6,6) * t163 + Icges(6,3) * t509;
t93 = Icges(6,4) * t164 + Icges(6,2) * t163 + Icges(6,6) * t509;
t95 = Icges(6,1) * t164 + Icges(6,4) * t163 + Icges(6,5) * t509;
t23 = (t465 * t544 - t91) * t424 + (t178 * t465 - t471 * t93 + t473 * t95 + (-t181 * t473 - t184 * t471) * qJD(5)) * t423;
t790 = t144 / 0.2e1;
t791 = t143 / 0.2e1;
t80 = -t178 * t424 + t423 * t544;
t792 = -t80 * t143 / 0.2e1 - t79 * t144 / 0.2e1 + t23 * t786 + t22 * t783 - t101 * t790 - t102 * t791;
t789 = t297 / 0.2e1;
t788 = t298 / 0.2e1;
t787 = t299 / 0.2e1;
t785 = t316 / 0.2e1;
t784 = -t317 / 0.2e1;
t782 = t375 / 0.2e1;
t781 = t376 / 0.2e1;
t780 = -t392 / 0.2e1;
t779 = t392 / 0.2e1;
t778 = -t397 / 0.2e1;
t777 = t397 / 0.2e1;
t776 = -t398 / 0.2e1;
t775 = t398 / 0.2e1;
t774 = t472 / 0.2e1;
t773 = -t474 / 0.2e1;
t772 = -rSges(6,3) - pkin(8);
t766 = -qJD(1) / 0.2e1;
t765 = qJD(1) / 0.2e1;
t762 = rSges(4,1) * t438;
t759 = rSges(4,2) * t438;
t457 = t472 * rSges(4,3);
t748 = t472 * t64;
t745 = t86 * t353;
t744 = qJDD(1) / 0.2e1;
t103 = -t249 * t424 + t423 * t541;
t549 = -Icges(6,5) * t471 - Icges(6,6) * t473;
t131 = t465 * t517 + (Icges(6,3) * t465 + qJD(5) * t549) * t423;
t518 = t552 * t424;
t132 = t465 * t518 + (Icges(6,6) * t465 + qJD(5) * t551) * t423;
t519 = t556 * t424;
t555 = -Icges(6,1) * t471 - t736;
t133 = t465 * t519 + (Icges(6,5) * t465 + qJD(5) * t555) * t423;
t41 = (t465 * t541 - t131) * t424 + (-t132 * t471 + t133 * t473 + t249 * t465 + (-t251 * t473 - t253 * t471) * qJD(5)) * t423;
t743 = t103 * t299 + t41 * t392;
t724 = qJD(1) * t58;
t365 = rSges(4,1) * t437 + t759;
t574 = -t365 * t647 + t445;
t659 = rSges(4,2) * t704 + t474 * rSges(4,3);
t292 = rSges(4,1) * t702 - t659;
t618 = -t292 + t675;
t117 = qJD(1) * t618 + t574;
t721 = t117 * t472;
t701 = t438 * t474;
t703 = t437 * t474;
t293 = rSges(4,1) * t701 - rSges(4,2) * t703 + t457;
t118 = -t365 * t444 - t446 + (t293 + t674) * qJD(1);
t335 = t365 * t474;
t720 = t118 * t335;
t269 = Icges(5,5) * t706 - Icges(5,6) * t710 - t726;
t719 = t269 * t474;
t712 = t359 * t472;
t711 = t359 * t474;
t693 = -t134 - t296;
t687 = -t472 * t225 + t474 * t226;
t686 = -t472 * t269 - t273 * t705;
t685 = t472 * t270 + t274 * t705;
t683 = -t472 * t282 - t286 * t701;
t682 = t472 * t283 + t287 * t701;
t678 = t472 * t275 + t474 * t276;
t262 = t327 + t401;
t668 = -t361 + t364;
t667 = t363 + t554;
t663 = rSges(5,2) * t614 + rSges(5,3) * t648;
t662 = rSges(4,3) * t648 + t649 * t830;
t633 = t472 * t763;
t418 = t472 * t760;
t657 = t474 * rSges(3,3) + t418;
t326 = t633 - t657;
t660 = -t399 - t326;
t658 = rSges(3,3) * t648 + qJD(1) * t418;
t650 = qJD(1) * t360;
t120 = -t472 * t535 - t713;
t641 = t120 * qJD(1);
t135 = -t472 * t533 - t711;
t640 = t135 * qJD(1);
t628 = qJD(3) * t422;
t161 = rSges(5,1) * t511 - rSges(5,2) * t625 + t663;
t162 = -t465 * t310 + (t474 * t810 + t456) * qJD(1);
t624 = t474 * t161 + t472 * t162 + t275 * t648;
t622 = t474 * t172 + t472 * t173 - t225 * t648;
t617 = t393 + t666;
t616 = t395 + t665;
t615 = t411 + t661;
t612 = t437 * t648;
t606 = -pkin(1) - t763;
t604 = t649 / 0.2e1;
t603 = t648 / 0.2e1;
t602 = -t444 / 0.2e1;
t601 = t444 / 0.2e1;
t600 = -t647 / 0.2e1;
t599 = t647 / 0.2e1;
t512 = -t353 - t771;
t597 = -t425 - t762;
t596 = (-t472 ^ 2 - t474 ^ 2) * t437;
t595 = (-t472 * t553 + t729) * qJD(1) + t820 * t465;
t594 = qJD(1) * t272 + t273 * t465 - t349 * t699;
t593 = (-t352 * t472 + t734) * qJD(1) + t821 * t465;
t592 = qJD(1) * t274 + t822 * t465;
t237 = t274 * t706;
t591 = t270 * t474 - t237;
t243 = t287 * t702;
t590 = t283 * t474 - t243;
t589 = -t269 + t718;
t588 = -t282 + t715;
t587 = t818 * t465;
t586 = t819 * t465;
t585 = -t463 * t472 + t358;
t578 = t825 * t472 + t824 * t474;
t577 = -t823 - t771;
t294 = t810 * t465;
t576 = -t294 - t628;
t402 = rSges(2,1) * t474 - rSges(2,2) * t472;
t400 = rSges(2,1) * t472 + rSges(2,2) * t474;
t366 = t762 - t830;
t147 = t285 * t438 + t287 * t437;
t514 = qJD(3) * t361;
t194 = -t474 * t514 + (-t472 * t554 + t730) * qJD(1);
t515 = qJD(3) * t363;
t196 = -t474 * t515 + (-t364 * t472 + t735) * qJD(1);
t484 = -qJD(3) * t147 - t194 * t437 + t196 * t438 + t651;
t146 = t284 * t438 + t286 * t437;
t195 = qJD(1) * t285 - t472 * t514;
t197 = qJD(1) * t287 - t472 * t515;
t485 = qJD(1) * t282 - qJD(3) * t146 - t195 * t437 + t197 * t438;
t568 = t472 * (t472 * t800 + t484 * t474) - t474 * (t472 * t799 + t485 * t474);
t567 = t472 * (t484 * t472 - t474 * t800) - t474 * (t485 * t472 - t474 * t799);
t63 = qJD(1) * t579 + t833;
t566 = t474 * t63 + t748;
t565 = t472 * t72 - t474 * t71;
t564 = t472 * t71 + t474 * t72;
t563 = t472 * t74 - t474 * t73;
t562 = t472 * t73 + t474 * t74;
t561 = t472 * t80 - t474 * t79;
t560 = t472 * t79 + t474 * t80;
t559 = -t472 * t87 - t474 * t86;
t112 = -t285 * t704 - t590;
t548 = -t111 * t474 + t112 * t472;
t113 = -t284 * t703 - t683;
t114 = -t285 * t703 + t682;
t547 = -t113 * t474 + t114 * t472;
t546 = -t117 * t474 - t118 * t472;
t543 = -t186 * t474 - t187 * t472;
t198 = -t647 * t759 + (-t438 * t649 - t611) * rSges(4,1) + t662;
t334 = t365 * t472;
t199 = -qJD(3) * t334 + (t366 * t474 + t457) * qJD(1);
t542 = t198 * t474 + t199 * t472;
t128 = t271 * t424 + t273 * t423;
t536 = t292 * t472 + t293 * t474;
t534 = t361 * t438 + t363 * t437;
t530 = -t628 + t693;
t529 = t172 * t647 + t173 * t444 - t375 * t225 - t226 * t376;
t528 = t825 * t648 + (t188 + t98) * t474 + (t189 + t99) * t472;
t526 = t423 * t772 - t416;
t516 = t540 * t472;
t507 = t258 + t809;
t506 = -t176 * t317 + t178 * t316 + t249 * t392;
t505 = (-Icges(6,5) * t337 - Icges(6,6) * t338) * t317 - (Icges(6,5) * t339 - Icges(6,6) * t340) * t316 - t549 * t423 * t392;
t504 = qJD(1) * t348 - t397 * t713 + t398 * t714;
t501 = t284 * t474 - t285 * t472;
t500 = t423 * t505;
t496 = (-t437 * t667 + t438 * t668) * qJD(1);
t492 = (Icges(6,1) * t339 - t181 - t738) * t316 - (-Icges(6,1) * t337 - t179 - t320) * t317 + (t555 * t423 - t251) * t392;
t490 = t819 * qJD(1) + t821 * t397 - t822 * t398;
t488 = qJD(1) * t269 - t423 * t594 + t424 * t592;
t487 = -t423 * t595 + t424 * t593 + t652;
t486 = qJD(1) * t347 - t423 * t587 + t424 * t586;
t343 = t554 * qJD(3);
t344 = t364 * qJD(3);
t483 = qJD(1) * t359 - qJD(3) * t534 - t343 * t437 + t344 * t438;
t481 = -t437 * t796 + t501 * t438;
t104 = -t516 - t719;
t105 = -t272 * t710 - t591;
t106 = -t271 * t708 - t686;
t107 = -t272 * t708 + t685;
t121 = -t474 * t535 + t714;
t129 = t272 * t424 + t274 * t423;
t16 = t163 * t179 - t164 * t183 + t176 * t509 + t339 * t94 + t340 * t96 + t708 * t92;
t17 = t163 * t181 + t164 * t184 + t178 * t509 + t339 * t93 + t340 * t95 + t708 * t91;
t18 = t165 * t179 - t166 * t183 + t176 * t510 - t337 * t94 + t338 * t96 + t710 * t92;
t19 = t165 * t181 + t166 * t184 + t178 * t510 - t337 * t93 + t338 * t95 + t710 * t91;
t231 = t251 * t472;
t232 = t251 * t474;
t233 = t253 * t472;
t234 = t253 * t474;
t252 = Icges(6,6) * t423 + t518;
t254 = Icges(6,5) * t423 + t519;
t33 = t131 * t708 + t132 * t339 + t133 * t340 + t163 * t251 + t164 * t253 + t249 * t509;
t3 = t102 * t299 + t143 * t74 + t144 * t73 - t16 * t317 + t17 * t316 + t33 * t392;
t32 = t103 * t392 + t316 * t80 - t317 * t79;
t34 = t131 * t710 - t132 * t337 + t133 * t338 + t165 * t251 + t166 * t253 + t249 * t510;
t4 = t101 * t299 + t143 * t72 + t144 * t71 - t18 * t317 + t19 * t316 + t34 * t392;
t45 = t472 * t801 + t488 * t474;
t46 = t472 * t802 + t487 * t474;
t47 = t488 * t472 - t474 * t801;
t478 = -t423 * t793 + t490 * t424;
t479 = t795 * t423;
t48 = t487 * t472 - t474 * t802;
t56 = -t104 * t398 + t105 * t397 + t641;
t119 = t121 * qJD(1);
t57 = -t106 * t398 + t107 * t397 + t119;
t67 = t472 * t798 + t486 * t474;
t68 = t486 * t472 - t474 * t798;
t75 = t423 * t592 + t424 * t594;
t76 = t423 * t593 + t424 * t595;
t480 = -t32 * t646 / 0.2e1 + t565 * t790 + t563 * t791 + (((t232 * t471 - t234 * t473 + t178) * t316 - (t231 * t471 - t233 * t473 + t176) * t317 + (-t252 * t471 + t254 * t473 + t249) * t392 + t103 * qJD(5)) * t423 + (qJD(5) * t560 - t795) * t424) * t780 + (t490 * t423 + t424 * t793) * t766 + (-t128 * t474 + t129 * t472) * t744 + (t472 * t76 - t474 * t75 + (t128 * t472 + t129 * t474) * qJD(1)) * t765 + (t472 * t478 - t474 * t504) * t775 + (-t47 * t474 + t472 * t48 + (t104 * t472 + t105 * t474) * qJD(1)) * t776 + (-t45 * t474 + t46 * t472 + (t106 * t472 + t107 * t474) * qJD(1)) * t777 + (t472 * t504 + t474 * t478) * t778 + (qJD(1) * t560 - t22 * t474 + t23 * t472) * t779 + ((t232 * t337 - t234 * t338) * t316 - (t231 * t337 - t233 * t338) * t317 + (-t252 * t337 + t254 * t338) * t392 + (t101 * t423 + t705 * t72) * qJD(5) + ((qJD(5) * t71 + t506) * t424 + t479) * t472) * t783 + (qJD(1) * t564 - t18 * t474 + t19 * t472) * t784 + (qJD(1) * t562 - t16 * t474 + t17 * t472) * t785 + ((-t232 * t339 - t234 * t340) * t316 - (-t231 * t339 - t233 * t340) * t317 + (t252 * t339 + t254 * t340) * t392 + (t102 * t423 + t706 * t73) * qJD(5) + ((qJD(5) * t74 + t506) * t424 + t479) * t474) * t786 + t561 * t787 + (-t104 * t474 + t105 * t472) * t788 + (-t106 * t474 + t107 * t472) * t789 + (qJD(1) * t67 + qJDD(1) * t121 + t106 * t298 + t107 * t297 + t397 * t46 - t398 * t45 + t3) * t774 + (qJD(1) * t68 + qJDD(1) * t120 + t104 * t298 + t105 * t297 + t397 * t48 - t398 * t47 + t4) * t773 + (t56 + t28) * t604 + (t57 + t29) * t603 - t815 * t645 / 0.2e1;
t346 = t366 * qJD(3);
t309 = t569 * t423;
t228 = qJD(1) * t262 - t446;
t227 = qJD(1) * t660 + t445;
t219 = rSges(6,1) * t339 - rSges(6,2) * t340;
t218 = -rSges(6,1) * t337 - rSges(6,2) * t338;
t167 = t536 * qJD(3);
t136 = -t474 * t533 + t712;
t130 = t136 * qJD(1);
t116 = qJDD(1) * t327 + qJD(1) * (-qJD(1) * t633 + t658) + t527;
t115 = t660 * qJDD(1) + (-qJD(1) * t327 - t345) * qJD(1) + t655;
t82 = -qJD(3) * t537 + t194 * t438 + t196 * t437;
t81 = -t538 * qJD(3) + t195 * t438 + t197 * t437;
t78 = t483 * t472 - t474 * t797;
t77 = t472 * t797 + t483 * t474;
t70 = qJD(1) * t198 + qJDD(1) * t293 - t346 * t444 - t365 * t375 + t503;
t69 = -t346 * t647 + t365 * t376 + t618 * qJDD(1) + (-t199 + t681) * qJD(1) + t655;
t62 = qJD(3) * t547 + t130;
t61 = qJD(3) * t548 + t640;
t44 = qJD(1) * t161 + qJDD(1) * t276 - t294 * t397 - t297 * t353 + t482;
t43 = -t294 * t398 + t298 * t353 + t580 * qJDD(1) + (-t162 + t621) * qJD(1) + t508;
t39 = t161 * t398 + t162 * t397 + t275 * t297 - t276 * t298 + t529;
t15 = -t143 * t186 - t144 * t187 + t188 * t398 + t189 * t397 + t297 * t313 - t298 * t315 + t316 * t99 + t317 * t98 + t529;
t1 = [(t81 + t78 + t62) * t600 + (-qJD(3) * t533 + t343 * t438 + t344 * t437 + t423 * t586 + t424 * t587) * qJD(1) + (t34 + t29) * t784 + (t135 + t146) * t781 + (t136 + t147) * t782 + (-t526 * t769 - (-qJD(1) * t313 - t63 + t805 + t833) * t64 + t63 * (-t572 + t615) + t64 * (-pkin(4) * t626 + t368 + t531 + t623) + (t20 * t526 + t63 * (t424 * t772 + t770) * t465) * t472 + ((-t371 + t526) * t748 + (t63 * (-t371 - t809 - t413) - t64 * t463) * t474) * qJD(1) + (-g(2) + t21) * (t585 + t824) + (-g(1) + t20) * (-t571 + t669)) * m(6) + (t120 + t128) * t788 + (t75 + t68 + t57) * t776 + (t86 * t615 + t87 * (t531 + t663) + (-t311 * t87 + t472 * t745) * t465 + ((-t86 * rSges(5,3) + t87 * (-t371 - t414)) * t472 + (t86 * (-t371 - t810) - t87 * t463) * t474) * qJD(1) - (-qJD(1) * t275 + t502 + t805 - t86) * t87 + (t44 - g(2)) * (t276 + t585) + (t43 - g(1)) * (-t275 + t669)) * m(5) + (t76 + t67) * t777 + (t121 + t129) * t789 + t743 - m(2) * (-g(1) * t400 + g(2) * t402) + (t82 + t77) * t601 + (t119 + (t105 + (t271 * t474 + t272 * t472) * t423 + t591 + t686) * t398 + (-t273 * t706 + t719 + t104 + (t271 * t472 - t272 * t474) * t423 + t685) * t397) * t775 + (t61 - t640 + ((t474 * t588 + t114 - t682) * t474 + (t472 * t588 + t113 + t590) * t472) * qJD(3)) * t602 + (t117 * (t417 + t446) + t118 * (t445 + t662) + (t365 * t721 - t720) * qJD(3) + ((-t117 * rSges(4,3) + t118 * t597) * t472 + (t117 * (-t366 - t425) - t118 * t470) * t474) * qJD(1) - (-qJD(1) * t292 - t117 + t574 + t811) * t118 + (t70 - g(2)) * (t293 + t584) + (t69 - g(1)) * (t597 * t472 + t659 - t698)) * m(4) + (t227 * t446 + t228 * (t654 + t658) + (t227 * (t606 + t760) * t474 + (t227 * (-rSges(3,3) - qJ(2)) + t228 * t606) * t472) * qJD(1) - (-qJD(1) * t326 - t227 - t378 + t445) * t228 + (t116 - g(2)) * t262 + (t115 - g(1)) * (t606 * t472 + t449 + t657)) * m(3) - t792 + t33 * t785 + (-t641 + (t107 - t516 - t685) * t398 + (t472 * t589 + t106 - t237) * t397 + ((t270 + t540) * t397 + t589 * t398) * t474 + t56) * t778 + (Icges(3,2) * t469 ^ 2 + (Icges(3,1) * t468 + 0.2e1 * Icges(3,4) * t469) * t468 + t349 * t424 + t351 * t423 + m(2) * (t400 ^ 2 + t402 ^ 2) + Icges(2,3) + t534) * qJDD(1) + (t130 + ((t112 - t243 + (t283 + t716) * t474 + t683) * t474 + t682 * t472) * qJD(3)) * t599 + t29 * t783; (-m(3) - m(4) - m(5)) * t804 + 0.2e1 * (t43 * t774 + t44 * t773) * m(5) + 0.2e1 * (t69 * t774 + t70 * t773) * m(4) + 0.2e1 * (t115 * t774 + t116 * t773) * m(3) + (-t804 + t807) * m(6); ((t113 * t472 + t114 * t474) * qJD(1) + t568) * t601 + (qJD(1) * t77 + qJD(3) * t568 + qJDD(1) * t136 + t113 * t376 + t114 * t375) * t774 + (qJD(1) * t78 + qJD(3) * t567 + qJDD(1) * t135 + t111 * t376 + t112 * t375) * t773 + t548 * t781 + t547 * t782 + (-t146 * t474 + t147 * t472) * t744 + t62 * t603 + t61 * t604 + ((-t647 * t712 - t650) * t474 + (t496 + (t474 * t711 + t481) * qJD(3)) * t472) * t599 + (t472 * t82 - t474 * t81 + (t146 * t472 + t147 * t474) * qJD(1)) * t765 + ((t437 * t668 + t438 * t667) * qJD(1) + (t501 * t437 + t438 * t796) * qJD(3)) * t766 + ((t111 * t472 + t112 * t474) * qJD(1) + t567) * t600 + t480 + ((-t444 * t711 + t650) * t472 + (t496 + (t472 * t712 + t481) * qJD(3)) * t474) * t602 + (t15 * (t578 + t687) + t58 * (t528 + t622) + t577 * t826 + (t21 * t577 + t64 * t530 + (-t226 - t824) * t724) * t472 - (-t64 * t612 + (-t438 * t566 + t58 * t596) * qJD(3)) * pkin(3) - g(1) * (-pkin(3) * t703 + t616) - g(2) * (t617 - t634) - g(3) * (t422 + t507) + (t474 * t530 + t816) * t63 + t817) * m(6) + (-g(3) * (t810 + t422) - t806 * t512 + t39 * (t678 + t687) + t83 * (t622 + t624) + (t576 * t86 + (qJD(1) * t87 + t43) * t512) * t474 + (t44 * t512 + t87 * t576 + (t745 + t83 * (-t226 - t276)) * qJD(1)) * t472 - (-t87 * t612 + (t438 * t559 + t596 * t83) * qJD(3)) * pkin(3) + t814) * m(5) + (-(t117 * t334 - t720) * qJD(1) - (t167 * (-t334 * t472 - t335 * t474) + t546 * t366) * qJD(3) + (qJD(3) * t542 + t292 * t375 - t293 * t376) * t536 + t167 * ((t292 * t474 - t293 * t472) * qJD(1) + t542) + t546 * t346 + (-t70 * t472 - t69 * t474 + (-t118 * t474 + t721) * qJD(1)) * t365 + g(1) * t335 + g(2) * t334 - g(3) * t366) * m(4); t480 + (-g(1) * t616 - g(2) * t617 - g(3) * t507 + t15 * t578 + t58 * t528 + (t64 * t693 - t724 * t824) * t472 - (t21 * t472 + t826) * t823 + (t474 * t693 + t816) * t63 + t817) * m(6) + (t39 * t678 + t83 * (-t276 * t649 + t624) + t559 * t294 + (-t43 * t474 - t44 * t472 + (t472 * t86 - t474 * t87) * qJD(1)) * t353 + g(1) * t311 + g(2) * t310 - g(3) * t810 + t814) * m(5); -t29 * t614 / 0.2e1 + t3 * t708 / 0.2e1 + t4 * t710 / 0.2e1 + (t339 * t794 + t492 * t340 - t474 * t500) * t786 + (-t337 * t794 + t338 * t492 - t472 * t500) * t783 + t815 * t707 / 0.2e1 + ((t465 * t562 - t33) * t785 + (t465 * t564 - t34) * t784 - t743 / 0.2e1 - t103 * t787 + (t465 * t560 - t41) * t779 + t505 * t780 + t792) * t424 + (t562 * t791 + (-qJD(1) * t563 + t102 * t465 + t16 * t472 + t17 * t474) * t785 + t28 * t603 + t564 * t790 + (-qJD(1) * t565 + t101 * t465 + t18 * t472 + t19 * t474) * t784 + t465 * t32 / 0.2e1 + t560 * t787 + (-qJD(1) * t561 + t103 * t465 + t22 * t472 + t23 * t474) * t779 + (-t471 * t794 + t473 * t492) * t780) * t423 + ((-t20 * t186 - t21 * t187 + t63 * t99 - t64 * t98 + (t58 * t543 + (t472 * t63 - t474 * t64) * t257) * t465) * t424 + (t63 * (t134 * t472 + t186 * t465) + t64 * (-t134 * t474 + t187 * t465) + t15 * t543 + t58 * (t186 * t649 - t187 * t648 - t472 * t98 + t474 * t99) + (qJD(1) * t566 + t807) * t257) * t423 - t63 * (-t218 * t392 - t309 * t317) - t64 * (t219 * t392 - t309 * t316) - t58 * (t218 * t316 + t219 * t317) - g(1) * t219 - g(2) * t218 - g(3) * t309) * m(6);];
tau = t1;
