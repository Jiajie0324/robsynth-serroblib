% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5PRRRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d4,d5,theta1]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:13
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5PRRRR7_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRR7_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRR7_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRR7_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRR7_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5PRRRR7_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:13:38
% EndTime: 2019-12-05 17:13:41
% DurationCPUTime: 2.68s
% Computational Cost: add. (14638->214), mult. (30758->300), div. (0->0), fcn. (22031->10), ass. (0->175)
t1329 = qJD(3) + qJD(4);
t1326 = qJD(5) + t1329;
t1375 = qJD(5) + t1326;
t1336 = sin(qJ(4));
t1340 = cos(qJ(4));
t1341 = cos(qJ(3));
t1365 = qJD(2) * t1341;
t1337 = sin(qJ(3));
t1366 = qJD(2) * t1337;
t1297 = t1336 * t1366 - t1340 * t1365;
t1299 = (t1336 * t1341 + t1337 * t1340) * qJD(2);
t1335 = sin(qJ(5));
t1339 = cos(qJ(5));
t1275 = t1339 * t1297 + t1335 * t1299;
t1374 = t1275 ^ 2;
t1277 = -t1335 * t1297 + t1339 * t1299;
t1373 = t1277 ^ 2;
t1372 = t1297 ^ 2;
t1371 = t1299 ^ 2;
t1370 = t1326 ^ 2;
t1369 = t1329 ^ 2;
t1368 = t1341 ^ 2;
t1367 = -g(3) + qJDD(1);
t1364 = t1277 * t1275;
t1363 = t1299 * t1297;
t1362 = t1329 * t1297;
t1332 = sin(pkin(9));
t1333 = cos(pkin(9));
t1313 = t1332 * g(1) - t1333 * g(2);
t1361 = t1332 * t1313;
t1344 = qJD(2) ^ 2;
t1360 = t1368 * t1344;
t1359 = qJD(4) - t1329;
t1358 = qJD(5) - t1326;
t1314 = -t1333 * g(1) - t1332 * g(2);
t1338 = sin(qJ(2));
t1342 = cos(qJ(2));
t1293 = t1342 * t1314 + t1338 * t1367;
t1285 = -t1344 * pkin(2) + qJDD(2) * pkin(6) + t1293;
t1269 = -t1337 * t1285 - t1341 * t1313;
t1352 = qJD(3) * t1365;
t1357 = t1337 * qJDD(2);
t1307 = t1352 + t1357;
t1320 = t1337 * t1344 * t1341;
t1315 = qJDD(3) + t1320;
t1252 = (-t1307 + t1352) * pkin(7) + t1315 * pkin(3) + t1269;
t1272 = t1341 * t1285 - t1337 * t1313;
t1317 = qJD(3) * pkin(3) - pkin(7) * t1366;
t1353 = qJD(3) * t1366;
t1356 = t1341 * qJDD(2);
t1347 = -t1353 + t1356;
t1253 = -pkin(3) * t1360 + t1347 * pkin(7) - qJD(3) * t1317 + t1272;
t1232 = t1336 * t1252 + t1340 * t1253;
t1355 = qJDD(3) + qJDD(4);
t1330 = t1337 ^ 2;
t1354 = t1330 + t1368;
t1351 = -qJDD(5) - t1355;
t1231 = t1340 * t1252 - t1336 * t1253;
t1345 = -t1340 * t1307 - t1336 * t1347;
t1264 = -t1297 * qJD(4) - t1345;
t1349 = t1336 * t1307 - t1340 * t1347;
t1348 = t1299 * qJD(4) + t1349;
t1350 = -t1335 * t1264 - t1339 * t1348;
t1292 = -t1338 * t1314 + t1342 * t1367;
t1279 = t1355 - t1363;
t1284 = -qJDD(2) * pkin(2) - t1344 * pkin(6) - t1292;
t1346 = -t1339 * t1264 + t1335 * t1348;
t1260 = -t1347 * pkin(3) - pkin(7) * t1360 + t1317 * t1366 + t1284;
t1343 = qJD(3) ^ 2;
t1319 = -t1343 - t1360;
t1318 = -t1330 * t1344 - t1343;
t1316 = -qJDD(3) + t1320;
t1312 = t1354 * t1344;
t1311 = t1342 * qJDD(2) - t1338 * t1344;
t1310 = -t1338 * qJDD(2) - t1342 * t1344;
t1309 = t1354 * qJDD(2);
t1308 = -0.2e1 * t1353 + t1356;
t1306 = 0.2e1 * t1352 + t1357;
t1301 = t1333 * t1313;
t1291 = t1329 * pkin(4) - t1299 * pkin(8);
t1290 = -t1369 - t1371;
t1289 = t1341 * t1316 - t1337 * t1318;
t1288 = -t1337 * t1315 + t1341 * t1319;
t1287 = t1337 * t1316 + t1341 * t1318;
t1286 = t1341 * t1315 + t1337 * t1319;
t1283 = t1342 * t1309 - t1338 * t1312;
t1282 = t1338 * t1309 + t1342 * t1312;
t1280 = -t1355 - t1363;
t1278 = -t1369 - t1372;
t1274 = t1342 * t1289 + t1338 * t1306;
t1273 = t1342 * t1288 - t1338 * t1308;
t1271 = t1338 * t1289 - t1342 * t1306;
t1270 = t1338 * t1288 + t1342 * t1308;
t1267 = -t1338 * t1292 + t1342 * t1293;
t1266 = t1342 * t1292 + t1338 * t1293;
t1265 = -t1371 - t1372;
t1262 = -t1370 - t1373;
t1259 = t1340 * t1280 - t1336 * t1290;
t1258 = t1336 * t1280 + t1340 * t1290;
t1257 = t1359 * t1297 + t1345;
t1256 = t1264 - t1362;
t1255 = -t1359 * t1299 - t1349;
t1254 = (qJD(4) + t1329) * t1299 + t1349;
t1248 = t1340 * t1278 - t1336 * t1279;
t1247 = t1336 * t1278 + t1340 * t1279;
t1246 = t1351 - t1364;
t1245 = -t1351 - t1364;
t1244 = -t1370 - t1374;
t1243 = -t1337 * t1269 + t1341 * t1272;
t1242 = t1341 * t1269 + t1337 * t1272;
t1241 = -t1373 - t1374;
t1240 = t1342 * t1243 + t1338 * t1284;
t1239 = t1338 * t1243 - t1342 * t1284;
t1238 = t1339 * t1246 - t1335 * t1262;
t1237 = t1335 * t1246 + t1339 * t1262;
t1236 = -t1337 * t1258 + t1341 * t1259;
t1235 = t1341 * t1258 + t1337 * t1259;
t1234 = t1340 * t1255 - t1336 * t1257;
t1233 = t1336 * t1255 + t1340 * t1257;
t1230 = t1348 * pkin(4) - t1372 * pkin(8) + t1299 * t1291 + t1260;
t1229 = -t1337 * t1247 + t1341 * t1248;
t1228 = t1341 * t1247 + t1337 * t1248;
t1227 = t1339 * t1244 - t1335 * t1245;
t1226 = t1335 * t1244 + t1339 * t1245;
t1225 = t1358 * t1275 + t1346;
t1224 = -t1375 * t1275 - t1346;
t1223 = -t1358 * t1277 + t1350;
t1222 = t1375 * t1277 - t1350;
t1221 = t1342 * t1236 + t1338 * t1256;
t1220 = t1338 * t1236 - t1342 * t1256;
t1219 = t1342 * t1229 + t1338 * t1254;
t1218 = t1338 * t1229 - t1342 * t1254;
t1217 = -t1372 * pkin(4) - t1348 * pkin(8) - t1329 * t1291 + t1232;
t1216 = (-t1264 - t1362) * pkin(8) + t1279 * pkin(4) + t1231;
t1215 = -t1336 * t1237 + t1340 * t1238;
t1214 = t1340 * t1237 + t1336 * t1238;
t1213 = -t1337 * t1233 + t1341 * t1234;
t1212 = t1341 * t1233 + t1337 * t1234;
t1211 = -t1336 * t1231 + t1340 * t1232;
t1210 = t1340 * t1231 + t1336 * t1232;
t1209 = t1342 * t1213 + t1338 * t1265;
t1208 = t1338 * t1213 - t1342 * t1265;
t1207 = -t1336 * t1226 + t1340 * t1227;
t1206 = t1340 * t1226 + t1336 * t1227;
t1205 = t1339 * t1223 - t1335 * t1225;
t1204 = t1335 * t1223 + t1339 * t1225;
t1203 = t1335 * t1216 + t1339 * t1217;
t1202 = t1339 * t1216 - t1335 * t1217;
t1201 = -t1337 * t1214 + t1341 * t1215;
t1200 = t1341 * t1214 + t1337 * t1215;
t1199 = -t1337 * t1210 + t1341 * t1211;
t1198 = t1341 * t1210 + t1337 * t1211;
t1197 = -t1337 * t1206 + t1341 * t1207;
t1196 = t1341 * t1206 + t1337 * t1207;
t1195 = t1342 * t1199 + t1338 * t1260;
t1194 = t1338 * t1199 - t1342 * t1260;
t1193 = -t1336 * t1204 + t1340 * t1205;
t1192 = t1340 * t1204 + t1336 * t1205;
t1191 = t1342 * t1201 + t1338 * t1224;
t1190 = t1338 * t1201 - t1342 * t1224;
t1189 = t1342 * t1197 + t1338 * t1222;
t1188 = t1338 * t1197 - t1342 * t1222;
t1187 = -t1335 * t1202 + t1339 * t1203;
t1186 = t1339 * t1202 + t1335 * t1203;
t1185 = -t1337 * t1192 + t1341 * t1193;
t1184 = t1341 * t1192 + t1337 * t1193;
t1183 = t1342 * t1185 + t1338 * t1241;
t1182 = t1338 * t1185 - t1342 * t1241;
t1181 = -t1336 * t1186 + t1340 * t1187;
t1180 = t1340 * t1186 + t1336 * t1187;
t1179 = -t1337 * t1180 + t1341 * t1181;
t1178 = t1341 * t1180 + t1337 * t1181;
t1177 = t1342 * t1179 + t1338 * t1230;
t1176 = t1338 * t1179 - t1342 * t1230;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1333 * t1314 - t1361, 0, 0, 0, 0, 0, 0, t1333 * t1310, -t1333 * t1311, 0, t1333 * t1267 - t1361, 0, 0, 0, 0, 0, 0, t1333 * t1273 + t1332 * t1286, t1333 * t1274 + t1332 * t1287, t1333 * t1283, t1333 * t1240 + t1332 * t1242, 0, 0, 0, 0, 0, 0, t1333 * t1219 + t1332 * t1228, t1333 * t1221 + t1332 * t1235, t1333 * t1209 + t1332 * t1212, t1333 * t1195 + t1332 * t1198, 0, 0, 0, 0, 0, 0, t1333 * t1189 + t1332 * t1196, t1333 * t1191 + t1332 * t1200, t1333 * t1183 + t1332 * t1184, t1333 * t1177 + t1332 * t1178; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1332 * t1314 + t1301, 0, 0, 0, 0, 0, 0, t1332 * t1310, -t1332 * t1311, 0, t1332 * t1267 + t1301, 0, 0, 0, 0, 0, 0, t1332 * t1273 - t1333 * t1286, t1332 * t1274 - t1333 * t1287, t1332 * t1283, t1332 * t1240 - t1333 * t1242, 0, 0, 0, 0, 0, 0, t1332 * t1219 - t1333 * t1228, t1332 * t1221 - t1333 * t1235, t1332 * t1209 - t1333 * t1212, t1332 * t1195 - t1333 * t1198, 0, 0, 0, 0, 0, 0, t1332 * t1189 - t1333 * t1196, t1332 * t1191 - t1333 * t1200, t1332 * t1183 - t1333 * t1184, t1332 * t1177 - t1333 * t1178; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1367, 0, 0, 0, 0, 0, 0, t1311, t1310, 0, t1266, 0, 0, 0, 0, 0, 0, t1270, t1271, t1282, t1239, 0, 0, 0, 0, 0, 0, t1218, t1220, t1208, t1194, 0, 0, 0, 0, 0, 0, t1188, t1190, t1182, t1176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1314, 0, 0, 0, 0, 0, 0, t1310, -t1311, 0, t1267, 0, 0, 0, 0, 0, 0, t1273, t1274, t1283, t1240, 0, 0, 0, 0, 0, 0, t1219, t1221, t1209, t1195, 0, 0, 0, 0, 0, 0, t1189, t1191, t1183, t1177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1313, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1313, 0, 0, 0, 0, 0, 0, -t1286, -t1287, 0, -t1242, 0, 0, 0, 0, 0, 0, -t1228, -t1235, -t1212, -t1198, 0, 0, 0, 0, 0, 0, -t1196, -t1200, -t1184, -t1178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1367, 0, 0, 0, 0, 0, 0, t1311, t1310, 0, t1266, 0, 0, 0, 0, 0, 0, t1270, t1271, t1282, t1239, 0, 0, 0, 0, 0, 0, t1218, t1220, t1208, t1194, 0, 0, 0, 0, 0, 0, t1188, t1190, t1182, t1176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1344, -qJDD(2), 0, t1293, 0, 0, 0, 0, 0, 0, t1288, t1289, t1309, t1243, 0, 0, 0, 0, 0, 0, t1229, t1236, t1213, t1199, 0, 0, 0, 0, 0, 0, t1197, t1201, t1185, t1179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1344, 0, t1292, 0, 0, 0, 0, 0, 0, t1308, -t1306, t1312, -t1284, 0, 0, 0, 0, 0, 0, -t1254, -t1256, -t1265, -t1260, 0, 0, 0, 0, 0, 0, -t1222, -t1224, -t1241, -t1230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1313, 0, 0, 0, 0, 0, 0, t1286, t1287, 0, t1242, 0, 0, 0, 0, 0, 0, t1228, t1235, t1212, t1198, 0, 0, 0, 0, 0, 0, t1196, t1200, t1184, t1178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1319, t1316, t1356, t1272, 0, 0, 0, 0, 0, 0, t1248, t1259, t1234, t1211, 0, 0, 0, 0, 0, 0, t1207, t1215, t1193, t1181; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1315, t1318, -t1357, t1269, 0, 0, 0, 0, 0, 0, t1247, t1258, t1233, t1210, 0, 0, 0, 0, 0, 0, t1206, t1214, t1192, t1180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1308, t1306, -t1312, t1284, 0, 0, 0, 0, 0, 0, t1254, t1256, t1265, t1260, 0, 0, 0, 0, 0, 0, t1222, t1224, t1241, t1230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1278, t1280, t1255, t1232, 0, 0, 0, 0, 0, 0, t1227, t1238, t1205, t1187; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1279, t1290, t1257, t1231, 0, 0, 0, 0, 0, 0, t1226, t1237, t1204, t1186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1254, t1256, t1265, t1260, 0, 0, 0, 0, 0, 0, t1222, t1224, t1241, t1230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1244, t1246, t1223, t1203; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1245, t1262, t1225, t1202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1222, t1224, t1241, t1230;];
f_new_reg = t1;
