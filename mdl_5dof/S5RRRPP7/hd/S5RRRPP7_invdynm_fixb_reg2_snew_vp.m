% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRPP7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:06
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRPP7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP7_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP7_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPP7_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPP7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRRPP7_invdynm_fixb_reg2_snew_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:06:20
% EndTime: 2019-12-31 21:06:35
% DurationCPUTime: 15.87s
% Computational Cost: add. (26520->604), mult. (53113->622), div. (0->0), fcn. (33646->6), ass. (0->379)
t1255 = cos(qJ(2));
t1251 = sin(qJ(3));
t1254 = cos(qJ(3));
t1252 = sin(qJ(2));
t1363 = qJD(1) * t1252;
t1207 = -t1254 * qJD(2) + t1251 * t1363;
t1322 = t1255 * qJD(1);
t1241 = qJD(2) * t1322;
t1311 = t1252 * qJDD(1);
t1213 = t1241 + t1311;
t1288 = -t1251 * qJDD(2) - t1254 * t1213;
t1280 = -t1207 * qJD(3) - t1288;
t1237 = -qJD(3) + t1322;
t1357 = t1237 * t1207;
t1404 = t1357 + t1280;
t1209 = t1251 * qJD(2) + t1254 * t1363;
t1203 = t1209 ^ 2;
t1381 = t1237 ^ 2;
t1406 = t1203 + t1381;
t1240 = qJD(2) * t1363;
t1309 = t1255 * qJDD(1);
t1214 = -t1240 + t1309;
t1204 = -qJDD(3) + t1214;
t1359 = t1209 * t1207;
t1403 = -t1359 + t1204;
t1426 = t1254 * t1403;
t1052 = t1251 * t1406 + t1426;
t1489 = t1252 * t1052;
t1504 = t1255 * t1404 - t1489;
t1514 = pkin(1) * t1504;
t1303 = -t1254 * qJDD(2) + t1251 * t1213;
t1098 = (qJD(3) + t1237) * t1209 + t1303;
t1405 = -t1357 + t1280;
t1330 = t1254 * t1405;
t1015 = t1251 * t1098 + t1330;
t1253 = sin(qJ(1));
t1256 = cos(qJ(1));
t1350 = t1251 * t1405;
t1021 = t1254 * t1098 - t1350;
t1382 = t1207 ^ 2;
t1126 = -t1382 - t1203;
t1454 = t1252 * t1126;
t978 = t1255 * t1021 - t1454;
t1513 = pkin(5) * (t1253 * t1015 + t1256 * t978);
t1512 = pkin(5) * (-t1256 * t1015 + t1253 * t978);
t1511 = pkin(6) * t1504;
t1434 = t1251 * t1403;
t1470 = t1254 * t1406 - t1434;
t1495 = pkin(1) * t1470;
t1484 = t1255 * t1052;
t1502 = -t1252 * t1404 - t1484;
t1510 = pkin(6) * t1502 - t1495;
t1399 = t1382 - t1381;
t1061 = -t1251 * t1399 + t1426;
t1140 = t1209 * qJD(3) + t1303;
t1358 = t1209 * t1237;
t1410 = t1140 + t1358;
t1444 = t1254 * t1399 + t1434;
t1464 = -t1252 * t1410 + t1255 * t1444;
t1478 = t1256 * t1061 + t1253 * t1464;
t1477 = -t1253 * t1061 + t1256 * t1464;
t1480 = t1256 * t1470;
t1509 = pkin(5) * (t1253 * t1502 - t1480);
t1485 = t1253 * t1470;
t1508 = pkin(5) * (t1256 * t1502 + t1485);
t1452 = t1255 * t1126;
t975 = t1252 * t1021 + t1452;
t1507 = pkin(1) * t975;
t1506 = pkin(6) * t975;
t1505 = pkin(6) * t978;
t1491 = pkin(7) * t1052;
t1503 = pkin(2) * t1404 - t1491;
t1407 = t1203 - t1381;
t1402 = t1359 + t1204;
t1427 = t1254 * t1402;
t1062 = -t1251 * t1407 + t1427;
t1007 = t1255 * t1062 - t1252 * t1405;
t1435 = t1251 * t1402;
t1056 = t1254 * t1407 + t1435;
t1499 = t1253 * t1007 - t1256 * t1056;
t1498 = t1256 * t1007 + t1253 * t1056;
t1331 = t1254 * t1404;
t1411 = t1140 - t1358;
t1433 = t1251 * t1411;
t1018 = -t1433 + t1331;
t1400 = -t1382 + t1203;
t1351 = t1251 * t1404;
t1425 = t1254 * t1411;
t1447 = t1425 + t1351;
t1465 = -t1252 * t1400 + t1255 * t1447;
t1476 = t1256 * t1018 + t1253 * t1465;
t1475 = -t1253 * t1018 + t1256 * t1465;
t1466 = t1252 * t1444 + t1255 * t1410;
t1401 = -t1381 - t1382;
t1443 = t1254 * t1401 + t1435;
t1468 = t1252 * t1443 - t1255 * t1411;
t1474 = pkin(1) * t1468;
t1494 = pkin(2) * t1015;
t1493 = pkin(2) * t1470;
t1473 = pkin(6) * t1468;
t1492 = pkin(7) * t1015;
t1490 = pkin(7) * t1470;
t1445 = t1251 * t1401 - t1427;
t1463 = t1252 * t1411 + t1255 * t1443;
t1469 = -pkin(1) * t1445 + pkin(6) * t1463;
t1459 = pkin(2) * t1126;
t1479 = -pkin(7) * t1021 - t1459;
t1001 = t1252 * t1062 + t1255 * t1405;
t1467 = t1252 * t1447 + t1255 * t1400;
t1462 = pkin(5) * (t1253 * t1463 - t1256 * t1445);
t1461 = pkin(5) * (t1253 * t1445 + t1256 * t1463);
t1458 = pkin(2) * t1445;
t1457 = pkin(7) * t1445;
t1442 = -pkin(2) * t1411 + pkin(7) * t1443;
t1456 = qJ(4) * t1126;
t1455 = qJ(4) * t1403;
t1368 = qJ(4) * t1404;
t1367 = qJ(4) * t1401;
t1450 = -pkin(3) * t1402 + t1367;
t1356 = t1237 * t1251;
t1285 = t1254 * t1140 + t1207 * t1356;
t1149 = t1252 * t1359;
t1355 = t1237 * t1254;
t1307 = t1207 * t1355;
t1286 = t1251 * t1140 - t1307;
t1392 = t1255 * t1286 - t1149;
t1419 = t1253 * t1392 + t1256 * t1285;
t1172 = t1209 * t1356;
t1292 = -t1172 + t1307;
t1337 = t1252 * t1204;
t1386 = t1255 * t1292 - t1337;
t1412 = (t1207 * t1251 + t1209 * t1254) * t1237;
t1414 = t1256 * t1412;
t1449 = t1253 * t1386 - t1414;
t1417 = -t1253 * t1285 + t1256 * t1392;
t1416 = t1253 * t1412;
t1448 = t1256 * t1386 + t1416;
t1438 = qJ(5) * t1405;
t1226 = t1256 * g(1) + t1253 * g(2);
t1257 = qJD(1) ^ 2;
t1195 = -t1257 * pkin(1) + qJDD(1) * pkin(6) - t1226;
t1376 = pkin(2) * t1255;
t1298 = -pkin(7) * t1252 - t1376;
t1211 = t1298 * qJD(1);
t1374 = t1255 * g(3);
t1383 = qJD(2) ^ 2;
t1121 = -qJDD(2) * pkin(2) - t1383 * pkin(7) + (qJD(1) * t1211 + t1195) * t1252 + t1374;
t1421 = t1140 * pkin(3) + t1121 - t1368;
t1265 = -t1209 * t1355 + t1251 * t1280;
t1314 = t1254 * t1280 + t1172;
t1391 = t1255 * t1314 + t1149;
t1394 = t1253 * t1391 - t1256 * t1265;
t1385 = t1253 * t1265 + t1256 * t1391;
t1362 = qJD(4) * t1237;
t1223 = -0.2e1 * t1362;
t1361 = qJD(5) * t1207;
t1409 = 0.2e1 * t1361 + t1223;
t1224 = 0.2e1 * t1362;
t1408 = -0.2e1 * t1361 + t1224;
t1169 = t1237 * pkin(4) - t1209 * qJ(5);
t1398 = t1209 * t1169 + qJDD(5);
t1225 = t1253 * g(1) - t1256 * g(2);
t1194 = qJDD(1) * pkin(1) + t1257 * pkin(6) + t1225;
t1293 = -t1214 + t1240;
t1294 = t1213 + t1241;
t1095 = pkin(2) * t1293 - pkin(7) * t1294 - t1194;
t1171 = -t1252 * g(3) + t1255 * t1195;
t1122 = -t1383 * pkin(2) + qJDD(2) * pkin(7) + t1211 * t1322 + t1171;
t1028 = t1251 * t1095 + t1254 * t1122;
t1148 = t1207 * pkin(3) - t1209 * qJ(4);
t1291 = pkin(3) * t1381 + t1204 * qJ(4) + t1207 * t1148 - t1028;
t972 = t1223 - t1291;
t1027 = -t1254 * t1095 + t1251 * t1122;
t1283 = t1204 * pkin(3) - qJ(4) * t1381 + qJDD(4) + t1027;
t1360 = t1209 * t1148;
t974 = t1283 + t1360;
t950 = t1251 * t974 + t1254 * t972;
t973 = (-pkin(3) * t1237 - 0.2e1 * qJD(4)) * t1209 + t1421;
t1396 = -(pkin(3) * t1254 + qJ(4) * t1251 + pkin(2)) * t973 + pkin(7) * t950;
t1379 = pkin(3) + pkin(4);
t1269 = t1204 * pkin(4) + t1283 - t1438;
t1306 = -pkin(4) * t1207 - t1148;
t958 = (-0.2e1 * qJD(5) - t1306) * t1209 + t1269;
t1277 = pkin(4) * t1382 - t1140 * qJ(5) + t1237 * t1169 + t1291;
t959 = -t1277 + t1409;
t1395 = qJ(4) * t959 - t1379 * t958;
t1393 = qJ(4) * t1098 + t1379 * t1405;
t1150 = t1255 * t1359;
t1390 = t1252 * t1286 + t1150;
t1389 = t1252 * t1314 - t1150;
t1388 = t1379 * t1406 - t1277 - t1455;
t1189 = t1255 * t1204;
t1387 = t1252 * t1292 + t1189;
t1384 = (t1411 + t1140) * pkin(4) + (t1401 + t1382) * qJ(5);
t1380 = 0.2e1 * t1209;
t1377 = pkin(2) * t1252;
t1375 = t1140 * pkin(4);
t1372 = qJ(5) * t958;
t1371 = qJ(5) * t959;
t1370 = qJ(4) * t1411;
t1366 = qJ(5) * t1402;
t1365 = qJ(5) * t1403;
t1364 = qJD(1) * qJD(2);
t1247 = t1252 ^ 2;
t1354 = t1247 * t1257;
t1349 = t1251 * t1121;
t1338 = t1252 * t1194;
t1236 = t1255 * t1257 * t1252;
t1221 = -t1236 + qJDD(2);
t1336 = t1252 * t1221;
t1222 = qJDD(2) + t1236;
t1335 = t1252 * t1222;
t1329 = t1254 * t1121;
t1320 = t1255 * t1194;
t1319 = t1255 * t1221;
t1248 = t1255 ^ 2;
t1312 = t1247 + t1248;
t1310 = t1253 * qJDD(1);
t1308 = t1256 * qJDD(1);
t968 = t1251 * t1027 + t1254 * t1028;
t1170 = t1252 * t1195 + t1374;
t1111 = t1252 * t1170 + t1255 * t1171;
t1304 = -t1253 * t1225 - t1256 * t1226;
t1302 = t1253 * t1236;
t1301 = t1256 * t1236;
t1300 = -pkin(2) * t1121 + pkin(7) * t968;
t1297 = -pkin(3) * t974 + qJ(4) * t972;
t1218 = -t1253 * t1257 + t1308;
t1296 = -pkin(5) * t1218 - t1253 * g(3);
t1295 = -pkin(3) * t1405 - qJ(4) * t1410;
t967 = -t1254 * t1027 + t1251 * t1028;
t1110 = t1255 * t1170 - t1252 * t1171;
t1289 = t1256 * t1225 - t1253 * t1226;
t1282 = -t1329 + t1442;
t1108 = (qJD(3) - t1237) * t1207 + t1288;
t1281 = pkin(2) * t1108 + t1349 + t1491;
t1279 = t1479 + t968;
t1264 = qJD(4) * t1380 - t1421;
t1262 = pkin(3) * t1358 + t1264;
t1258 = -t1375 + (t1406 - t1382) * qJ(5) + t1262 + t1398;
t951 = t1258 + t1368;
t981 = t1379 * t1404 + t1365;
t1278 = t1251 * t951 + t1254 * t981 + t1503;
t1029 = -t1366 - t1370;
t965 = (-t1411 + t1358) * pkin(3) + t1264;
t945 = -t1384 + t965 + t1398;
t1276 = t1251 * t1029 + t1254 * t945 + t1442;
t964 = t1262 + t1368;
t1275 = pkin(3) * t1331 + t1251 * t964 + t1503;
t1259 = t973 - t1398;
t962 = qJ(5) * t1382 + t1259 + t1375;
t917 = -t1379 * t962 - t1371;
t930 = t1251 * t958 + t1254 * t959;
t933 = -qJ(4) * t962 - t1372;
t1274 = -pkin(2) * t962 + pkin(7) * t930 + t1251 * t933 + t1254 * t917;
t1273 = -qJ(4) * t1433 + t1254 * t965 + t1442;
t1267 = -qJ(5) * t1098 + t1277;
t944 = t1379 * t1126 + t1267 + t1408;
t1266 = qJD(5) * t1380 - t1269;
t1261 = t1306 * t1209 + t1266 + t1438;
t946 = t1261 + t1456;
t1272 = t1251 * t946 + t1254 * t944 - t1479;
t1023 = -t1254 * t1410 + t1350;
t966 = -pkin(3) * t1126 + t972;
t969 = t974 - t1456;
t1271 = pkin(7) * t1023 + t1251 * t969 + t1254 * t966 - t1459;
t1270 = pkin(3) * t1406 - t1291 - t1455;
t1263 = -t974 + t1450;
t1260 = -t1360 + (-t1402 - t1359) * pkin(4) + t1266;
t1245 = t1248 * t1257;
t1232 = -t1245 - t1383;
t1231 = t1245 - t1383;
t1230 = -t1354 - t1383;
t1229 = -t1354 + t1383;
t1220 = -t1245 + t1354;
t1219 = t1245 + t1354;
t1217 = t1256 * t1257 + t1310;
t1216 = t1312 * qJDD(1);
t1215 = -0.2e1 * t1240 + t1309;
t1212 = 0.2e1 * t1241 + t1311;
t1206 = t1255 * t1222;
t1205 = t1312 * t1364;
t1188 = -pkin(5) * t1217 + t1256 * g(3);
t1174 = t1255 * t1213 - t1247 * t1364;
t1173 = -t1252 * t1214 - t1248 * t1364;
t1168 = -t1252 * t1230 - t1319;
t1167 = -t1252 * t1229 + t1206;
t1166 = t1255 * t1232 - t1335;
t1165 = t1255 * t1231 - t1336;
t1164 = t1255 * t1230 - t1336;
t1163 = t1255 * t1229 + t1335;
t1162 = t1252 * t1232 + t1206;
t1161 = t1252 * t1231 + t1319;
t1160 = t1294 * t1252;
t1159 = t1293 * t1255;
t1147 = -t1252 * t1212 + t1255 * t1215;
t1146 = t1255 * t1212 + t1252 * t1215;
t1124 = -pkin(6) * t1164 - t1320;
t1123 = -pkin(6) * t1162 - t1338;
t1119 = (t1207 * t1254 - t1209 * t1251) * t1237;
t1113 = -pkin(1) * t1164 + t1171;
t1112 = -pkin(1) * t1162 + t1170;
t1092 = pkin(1) * t1215 + pkin(6) * t1166 + t1320;
t1091 = -pkin(1) * t1212 + pkin(6) * t1168 - t1338;
t1072 = t1255 * t1119 - t1337;
t1069 = t1252 * t1119 + t1189;
t1055 = pkin(1) * t1194 + pkin(6) * t1111;
t1048 = pkin(1) * t1219 + pkin(6) * t1216 + t1111;
t1017 = -t1251 * t1410 - t1330;
t1013 = t1329 + t1490;
t1000 = t1349 - t1457;
t997 = -t1252 * t1108 + t1484;
t994 = t1255 * t1108 + t1489;
t979 = t1255 * t1023 + t1454;
t976 = t1252 * t1023 - t1452;
t971 = t1028 + t1493;
t970 = t1027 - t1458;
t963 = -pkin(2) * t1017 - t1295;
t961 = t1252 * t1121 + t1255 * t968;
t960 = -t1255 * t1121 + t1252 * t968;
t957 = -t1393 - t1494;
t956 = -pkin(1) * t994 - t1281;
t955 = -t1263 - t1458;
t954 = -t1282 - t1474;
t953 = t1224 - t1270 - t1493;
t952 = -t967 + t1492;
t949 = t1251 * t972 - t1254 * t974;
t948 = -qJ(4) * t1425 - t1251 * t965 - t1457;
t947 = -pkin(3) * t1351 + t1254 * t964 - t1490;
t943 = -pkin(6) * t994 + t1255 * t1013 - t1252 * t971;
t942 = -t1388 + t1408 - t1493;
t941 = t1255 * t1000 - t1252 * t970 - t1473;
t940 = t1379 * t1402 - t1367 - t1458 + t958;
t939 = pkin(6) * t997 + t1252 * t1013 + t1255 * t971 + t1495;
t938 = t1252 * t973 + t1255 * t950;
t937 = t1252 * t950 - t1255 * t973;
t936 = -t1279 + t1507;
t935 = -pkin(1) * t960 - t1300;
t934 = t1252 * t1000 + t1255 * t970 + t1469;
t932 = -t1273 - t1474;
t931 = -pkin(7) * t1017 - t1251 * t966 + t1254 * t969;
t929 = t1251 * t959 - t1254 * t958;
t928 = -t1275 - t1514;
t927 = -t1251 * t981 + t1254 * t951 - t1490;
t926 = t1254 * t1029 - t1251 * t945 - t1457;
t925 = -t1015 * t1377 + t1255 * t952 + t1506;
t924 = -pkin(7) * t949 + (pkin(3) * t1251 - qJ(4) * t1254) * t973;
t923 = -pkin(2) * t949 - t1297;
t922 = -pkin(6) * t960 + (-pkin(7) * t1255 + t1377) * t967;
t921 = -t1505 + t1252 * t952 - (-pkin(1) - t1376) * t1015;
t920 = -pkin(1) * t976 - t1271;
t919 = -t1278 - t1514;
t918 = -t1276 - t1474;
t916 = -t1252 * t955 + t1255 * t948 - t1473;
t915 = t1252 * t962 + t1255 * t930;
t914 = t1252 * t930 - t1255 * t962;
t913 = -t1252 * t953 + t1255 * t947 - t1511;
t912 = t1252 * t948 + t1255 * t955 + t1469;
t911 = -t1251 * t944 + t1254 * t946 - t1492;
t910 = t1252 * t947 + t1255 * t953 + t1510;
t909 = pkin(6) * t961 + (-pkin(1) + t1298) * t967;
t908 = -pkin(6) * t976 - t1252 * t963 + t1255 * t931;
t907 = -pkin(1) * t1017 + pkin(6) * t979 + t1252 * t931 + t1255 * t963;
t906 = -t1272 - t1507;
t905 = -t1252 * t942 + t1255 * t927 - t1511;
t904 = -t1252 * t940 + t1255 * t926 - t1473;
t903 = t1252 * t927 + t1255 * t942 + t1510;
t902 = t1252 * t926 + t1255 * t940 + t1469;
t901 = -t1252 * t957 + t1255 * t911 - t1506;
t900 = -pkin(2) * t929 - t1395;
t899 = -pkin(1) * t937 - t1396;
t898 = -pkin(1) * t1015 + t1252 * t911 + t1255 * t957 + t1505;
t897 = -pkin(7) * t929 - t1251 * t917 + t1254 * t933;
t896 = -pkin(6) * t937 - t1252 * t923 + t1255 * t924;
t895 = -pkin(1) * t949 + pkin(6) * t938 + t1252 * t924 + t1255 * t923;
t894 = -pkin(1) * t914 - t1274;
t893 = -pkin(6) * t914 - t1252 * t900 + t1255 * t897;
t892 = -pkin(1) * t929 + pkin(6) * t915 + t1252 * t897 + t1255 * t900;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1218, 0, -t1217, 0, t1296, -t1188, -t1289, -pkin(5) * t1289, t1256 * t1174 - t1302, t1256 * t1147 + t1253 * t1220, t1256 * t1167 + t1252 * t1310, t1256 * t1173 + t1302, t1256 * t1165 + t1253 * t1309, t1253 * qJDD(2) + t1256 * t1205, t1256 * t1123 - t1253 * t1112 - pkin(5) * (t1253 * t1166 + t1256 * t1215), t1256 * t1124 - t1253 * t1113 - pkin(5) * (t1253 * t1168 - t1256 * t1212), t1256 * t1110 - pkin(5) * (t1253 * t1216 + t1256 * t1219), -pkin(5) * (t1253 * t1111 + t1256 * t1194) - (t1253 * pkin(1) - t1256 * pkin(6)) * t1110, t1385, -t1475, -t1498, t1417, t1477, t1448, -t1253 * t954 + t1256 * t941 - t1462, t1256 * t943 - t1253 * t956 - pkin(5) * (t1253 * t997 + t1480), -t1253 * t936 + t1256 * t925 + t1512, t1256 * t922 - t1253 * t935 - pkin(5) * (t1253 * t961 - t1256 * t967), t1385, -t1498, t1475, t1448, -t1477, t1417, -t1253 * t932 + t1256 * t916 - t1462, t1256 * t908 - t1253 * t920 - pkin(5) * (-t1256 * t1017 + t1253 * t979), -t1253 * t928 + t1256 * t913 - t1509, t1256 * t896 - t1253 * t899 - pkin(5) * (t1253 * t938 - t1256 * t949), t1385, t1475, t1498, t1417, t1477, t1256 * t1072 + t1416, -t1253 * t918 + t1256 * t904 - t1462, -t1253 * t919 + t1256 * t905 - t1509, -t1253 * t906 + t1256 * t901 - t1512, t1256 * t893 - t1253 * t894 - pkin(5) * (t1253 * t915 - t1256 * t929); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1217, 0, t1218, 0, t1188, t1296, t1304, pkin(5) * t1304, t1253 * t1174 + t1301, t1253 * t1147 - t1256 * t1220, t1253 * t1167 - t1252 * t1308, t1253 * t1173 - t1301, t1253 * t1165 - t1255 * t1308, -t1256 * qJDD(2) + t1253 * t1205, t1253 * t1123 + t1256 * t1112 + pkin(5) * (t1256 * t1166 - t1253 * t1215), t1253 * t1124 + t1256 * t1113 + pkin(5) * (t1256 * t1168 + t1253 * t1212), t1253 * t1110 + pkin(5) * (t1256 * t1216 - t1253 * t1219), pkin(5) * (t1256 * t1111 - t1253 * t1194) - (-t1256 * pkin(1) - t1253 * pkin(6)) * t1110, t1394, -t1476, -t1499, t1419, t1478, t1449, t1253 * t941 + t1256 * t954 + t1461, t1253 * t943 + t1256 * t956 + pkin(5) * (t1256 * t997 - t1485), t1253 * t925 + t1256 * t936 - t1513, t1253 * t922 + t1256 * t935 + pkin(5) * (t1253 * t967 + t1256 * t961), t1394, -t1499, t1476, t1449, -t1478, t1419, t1253 * t916 + t1256 * t932 + t1461, t1253 * t908 + t1256 * t920 + pkin(5) * (t1253 * t1017 + t1256 * t979), t1253 * t913 + t1256 * t928 + t1508, t1253 * t896 + t1256 * t899 + pkin(5) * (t1253 * t949 + t1256 * t938), t1394, t1476, t1499, t1419, t1478, t1253 * t1072 - t1414, t1253 * t904 + t1256 * t918 + t1461, t1253 * t905 + t1256 * t919 + t1508, t1253 * t901 + t1256 * t906 + t1513, t1253 * t893 + t1256 * t894 + pkin(5) * (t1253 * t929 + t1256 * t915); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1225, t1226, 0, 0, t1160, t1146, t1163, -t1159, t1161, 0, t1092, t1091, t1048, t1055, t1389, -t1467, -t1001, t1390, t1466, t1387, t934, t939, t921, t909, t1389, -t1001, t1467, t1387, -t1466, t1390, t912, t907, t910, t895, t1389, t1467, t1001, t1390, t1466, t1069, t902, t903, t898, t892; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1257, 0, 0, -g(3), -t1225, 0, t1174, t1147, t1167, t1173, t1165, t1205, t1123, t1124, t1110, pkin(6) * t1110, t1391, -t1465, -t1007, t1392, t1464, t1386, t941, t943, t925, t922, t1391, -t1007, t1465, t1386, -t1464, t1392, t916, t908, t913, t896, t1391, t1465, t1007, t1392, t1464, t1072, t904, t905, t901, t893; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1257, 0, qJDD(1), 0, g(3), 0, -t1226, 0, t1236, -t1220, -t1311, -t1236, -t1309, -qJDD(2), t1112, t1113, 0, pkin(1) * t1110, -t1265, -t1018, t1056, t1285, t1061, -t1412, t954, t956, t936, t935, -t1265, t1056, t1018, -t1412, -t1061, t1285, t932, t920, t928, t899, -t1265, t1018, -t1056, t1285, t1061, -t1412, t918, t919, t906, t894; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1225, t1226, 0, 0, t1160, t1146, t1163, -t1159, t1161, 0, t1092, t1091, t1048, t1055, t1389, -t1467, -t1001, t1390, t1466, t1387, t934, t939, t921, t909, t1389, -t1001, t1467, t1387, -t1466, t1390, t912, t907, t910, t895, t1389, t1467, t1001, t1390, t1466, t1069, t902, t903, t898, t892; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1213, t1215, t1222, -t1241, t1231, t1241, 0, -t1194, t1170, 0, t1314, -t1447, -t1062, t1286, t1444, t1292, t1000, t1013, t952, -pkin(7) * t967, t1314, -t1062, t1447, t1292, -t1444, t1286, t948, t931, t947, t924, t1314, t1447, t1062, t1286, t1444, t1119, t926, t927, t911, t897; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1240, t1212, t1229, t1214, t1221, -t1240, t1194, 0, t1171, 0, -t1359, -t1400, -t1405, t1359, t1410, t1204, t970, t971, t1494, -pkin(2) * t967, -t1359, -t1405, t1400, t1204, -t1410, t1359, t955, t963, t953, t923, -t1359, t1400, t1405, t1359, t1410, t1204, t940, t942, t957, t900; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1236, t1220, t1311, t1236, t1309, qJDD(2), -t1170, -t1171, 0, 0, t1265, t1018, -t1056, -t1285, -t1061, t1412, t1282, t1281, t1279, t1300, t1265, -t1056, -t1018, t1412, t1061, -t1285, t1273, t1271, t1275, t1396, t1265, -t1018, t1056, -t1285, -t1061, t1412, t1276, t1278, t1272, t1274; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, -t1411, -t1402, -t1357, t1399, t1357, 0, t1121, t1027, 0, t1280, -t1402, t1411, t1357, -t1399, -t1357, -t1370, t969, t964, -qJ(4) * t973, t1280, t1411, t1402, -t1357, t1399, t1357, t1029, t951, t946, t933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1358, t1404, -t1407, -t1140, -t1403, t1358, -t1121, 0, t1028, 0, -t1358, -t1407, -t1404, t1358, t1403, -t1140, t965, t966, pkin(3) * t1404, -pkin(3) * t973, -t1358, -t1404, t1407, -t1140, -t1403, t1358, t945, t981, t944, t917; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1359, t1400, t1405, -t1359, -t1410, -t1204, -t1027, -t1028, 0, 0, t1359, t1405, -t1400, -t1204, t1410, -t1359, t1263, t1295, t1223 + t1270, t1297, t1359, -t1400, -t1405, -t1359, -t1410, -t1204, t1260 + t1450, t1388 + t1409, t1393, t1395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, -t1402, t1411, t1357, -t1399, -t1357, 0, t974, -t973, 0, t1280, t1411, t1402, -t1357, t1399, t1357, -t1366, t1258, t1261, -t1372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1359, t1405, -t1400, -t1204, t1410, -t1359, -t974, 0, t972, 0, t1359, -t1400, -t1405, -t1359, -t1410, -t1204, t1260, pkin(4) * t1406 + t959, pkin(4) * t1405, -pkin(4) * t958; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1358, t1407, t1404, -t1358, -t1403, t1140, t973, -t972, 0, 0, t1358, t1404, -t1407, t1140, t1403, -t1358, t1259 + t1384, -pkin(4) * t1404 - t1365, -pkin(4) * t1126 - t1267 + t1409, pkin(4) * t962 + t1371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, t1411, t1402, -t1357, t1399, t1357, 0, -t962, -t958, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1358, t1404, -t1407, t1140, t1403, -t1358, t962, 0, t959, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1359, t1400, t1405, t1359, t1410, t1204, t958, -t959, 0, 0;];
m_new_reg = t1;
