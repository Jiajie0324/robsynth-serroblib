% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRPP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:06
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPP7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRRPP7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:05:56
% EndTime: 2019-12-31 21:06:09
% DurationCPUTime: 5.56s
% Computational Cost: add. (3165->492), mult. (6578->617), div. (0->0), fcn. (5438->4), ass. (0->346)
t239 = sin(qJ(3));
t228 = t239 * qJ(4);
t241 = cos(qJ(3));
t274 = t241 * pkin(3) + t228;
t335 = t241 * qJD(4);
t447 = -qJD(3) * t274 + t335;
t436 = pkin(3) + pkin(4);
t446 = t436 * t241 + t228;
t409 = pkin(7) - qJ(5);
t242 = cos(qJ(2));
t231 = t242 * pkin(3);
t412 = t242 * pkin(2);
t240 = sin(qJ(2));
t418 = pkin(7) * t240;
t279 = -t412 - t418;
t263 = -pkin(1) + t279;
t163 = t241 * t263;
t368 = t240 * t241;
t278 = -qJ(5) * t368 - t163;
t419 = pkin(6) * t239;
t56 = t231 + (pkin(4) + t419) * t242 + t278;
t370 = t239 * t242;
t331 = pkin(6) * t370;
t88 = -t278 - t331;
t445 = t56 + t88;
t413 = t241 * pkin(6);
t289 = -qJ(4) + t413;
t417 = t239 * pkin(2);
t111 = t239 * (-pkin(1) - t418) + (t289 - t417) * t242;
t364 = t241 * t242;
t330 = pkin(6) * t364;
t128 = t239 * t263 + t330;
t444 = (t111 / 0.2e1 - t128 / 0.2e1) * t239;
t153 = pkin(2) + t446;
t424 = -t240 / 0.2e1;
t306 = t153 * t424;
t362 = t242 * qJ(5);
t443 = t306 + t362 / 0.2e1;
t334 = t242 * qJD(1);
t213 = -qJD(3) + t334;
t235 = t239 ^ 2;
t237 = t241 ^ 2;
t203 = t237 - t235;
t337 = t240 * qJD(1);
t317 = t241 * t337;
t283 = t239 * t317;
t441 = qJD(2) * t203 - 0.2e1 * t283;
t440 = pkin(3) / 0.2e1;
t439 = pkin(4) / 0.2e1;
t438 = -t56 / 0.2e1;
t246 = (-t409 * t240 - pkin(1) - t412) * t239;
t66 = t289 * t242 + t246;
t437 = -t66 / 0.2e1;
t367 = t241 * qJ(4);
t212 = t240 * t367;
t371 = t239 * t240;
t354 = -pkin(3) * t371 + t212;
t107 = (-t239 * pkin(4) - pkin(6)) * t240 + t354;
t435 = -t107 / 0.2e1;
t124 = t446 * t240;
t434 = t124 / 0.2e1;
t433 = -t124 / 0.2e1;
t133 = t240 * pkin(6) - t354;
t432 = t133 / 0.2e1;
t152 = t274 * t240;
t431 = -t152 / 0.2e1;
t410 = t242 * pkin(7);
t416 = t240 * pkin(2);
t184 = -t410 + t416;
t429 = -t184 / 0.2e1;
t216 = pkin(6) * t371;
t428 = -t216 / 0.2e1;
t230 = t240 * pkin(3);
t427 = -t230 / 0.2e1;
t426 = -t239 / 0.2e1;
t425 = t239 / 0.2e1;
t423 = t240 / 0.2e1;
t422 = -t241 / 0.2e1;
t421 = t241 / 0.2e1;
t420 = t436 / 0.2e1;
t415 = t240 * pkin(4);
t411 = t242 * pkin(6);
t408 = t242 * t66;
t363 = t242 * qJ(4);
t299 = t363 / 0.2e1;
t188 = t239 * t299;
t295 = t242 * t420;
t320 = -t88 / 0.2e1 + t438;
t89 = t246 + t330;
t321 = t66 / 0.2e1 - t89 / 0.2e1;
t5 = t188 - t321 * t239 + (t295 - t320) * t241;
t407 = t5 * qJD(1);
t406 = t56 * t241;
t405 = t66 * t239;
t160 = -t436 * t239 + t367;
t108 = (-pkin(6) + t160) * t242;
t60 = -t415 - t216 - t230 + (-t184 - t362) * t241;
t171 = t239 * t184;
t229 = t240 * qJ(4);
t115 = -pkin(6) * t368 + t171 + t229;
t68 = t239 * t362 + t115;
t7 = t107 * t108 + t56 * t60 + t66 * t68;
t404 = t7 * qJD(1);
t8 = -t107 * t124 + t56 * t89 + t66 * t88;
t403 = t8 * qJD(1);
t9 = (-t240 * t60 - t242 * t56) * t241 + (t240 * t68 + t408) * t239;
t402 = t9 * qJD(1);
t33 = t107 * t371 + t124 * t368 + t242 * t88;
t401 = qJD(1) * t33;
t71 = t107 * t368;
t34 = t124 * t371 + t242 * t89 - t71;
t400 = qJD(1) * t34;
t35 = (t405 - t406) * t240;
t399 = qJD(1) * t35;
t384 = t152 * t239;
t386 = t133 * t241;
t388 = t128 * t242;
t38 = t388 + (t384 + t386) * t240;
t398 = qJD(1) * t38;
t127 = -t163 + t331;
t389 = t127 * t242;
t39 = -t133 * t371 + t152 * t368 - t389;
t397 = qJD(1) * t39;
t41 = -t71 + t408;
t396 = qJD(1) * t41;
t391 = t111 * t242;
t44 = t133 * t368 + t391;
t395 = qJD(1) * t44;
t236 = t240 ^ 2;
t69 = -t236 * t419 - t389;
t394 = qJD(1) * t69;
t365 = t241 * t236;
t70 = -pkin(6) * t365 - t388;
t393 = qJD(1) * t70;
t392 = t107 * t239;
t12 = ((t66 - t89) * t241 + t445 * t239) * t240;
t390 = t12 * qJD(1);
t387 = t133 * t239;
t15 = -t56 * t240 + t60 * t242 + (-t107 * t242 - t108 * t240) * t239;
t385 = t15 * qJD(1);
t383 = t153 * t241;
t112 = t127 + t231;
t366 = t241 * t184;
t288 = -t216 - t366;
t116 = -t230 + t288;
t182 = pkin(3) * t239 - t367;
t134 = (pkin(6) + t182) * t242;
t16 = t111 * t115 + t112 * t116 + t133 * t134;
t382 = t16 * qJD(1);
t381 = t160 * t239;
t173 = -pkin(2) - t274;
t380 = t173 * t239;
t181 = t409 * t239;
t379 = t181 * t240;
t378 = t181 * t242;
t183 = t409 * t241;
t377 = t183 * t240;
t376 = t183 * t242;
t19 = -t107 * t364 - t108 * t368 - t66 * t240 + t242 * t68;
t375 = t19 * qJD(1);
t20 = -t111 * t127 + t112 * t128 + t133 * t152;
t374 = t20 * qJD(1);
t300 = -t363 / 0.2e1;
t189 = t239 * t300;
t293 = -t127 / 0.2e1 + t112 / 0.2e1;
t21 = t189 + t444 + (-t231 / 0.2e1 - t293) * t241;
t373 = t21 * qJD(1);
t23 = -t112 * t364 - t116 * t368 + (t115 * t240 + t391) * t239;
t372 = t23 * qJD(1);
t24 = -t128 * t368 + (t111 * t241 + (t112 - t127) * t239) * t240;
t369 = t24 * qJD(1);
t361 = t436 * t240;
t266 = t133 * t242 + t134 * t240;
t29 = -t111 * t240 + t115 * t242 + t241 * t266;
t360 = t29 * qJD(1);
t30 = -t112 * t240 + t116 * t242 + t239 * t266;
t359 = t30 * qJD(1);
t292 = t428 + t427;
t245 = -t392 / 0.2e1 + t376 / 0.2e1 + t292;
t298 = -t362 / 0.2e1;
t252 = t306 + t298;
t324 = -t415 / 0.2e1;
t31 = t324 + (t429 + t252) * t241 + t245;
t358 = t31 * qJD(1);
t42 = t127 * t240 + (-t288 - 0.2e1 * t216) * t242;
t357 = t42 * qJD(1);
t43 = t171 * t242 + (-t128 + t330) * t240;
t356 = t43 * qJD(1);
t159 = t366 / 0.2e1;
t355 = t159 + t216 / 0.2e1;
t202 = t237 + t235;
t238 = t242 ^ 2;
t204 = t238 - t236;
t169 = t204 * t239;
t353 = qJD(1) * t169;
t170 = t238 * t241 - t365;
t352 = qJD(1) * t170;
t351 = qJD(2) * t239;
t350 = qJD(2) * t241;
t349 = qJD(3) * t127;
t348 = qJD(3) * t183;
t347 = qJD(3) * t239;
t226 = qJD(3) * t241;
t346 = qJD(3) * t242;
t345 = qJD(4) * t239;
t344 = qJD(4) * t242;
t343 = qJD(5) * t239;
t342 = qJD(5) * t241;
t341 = qJD(5) * t242;
t167 = t202 * t236;
t340 = t167 * qJD(1);
t339 = t202 * qJD(2);
t338 = t204 * qJD(1);
t336 = t240 * qJD(2);
t333 = t242 * qJD(2);
t332 = t440 + t439;
t329 = pkin(1) * t337;
t328 = pkin(1) * t334;
t327 = pkin(7) * t347;
t326 = pkin(7) * t226;
t325 = t417 / 0.2e1;
t323 = t410 / 0.2e1;
t322 = t439 + t420;
t157 = t171 / 0.2e1;
t303 = -t368 / 0.2e1;
t319 = pkin(6) * t303 + t157 + t229;
t318 = qJ(4) * t344;
t316 = t239 * t346;
t315 = t241 * t346;
t314 = t242 * t335;
t313 = t240 * t342;
t312 = t239 * t226;
t208 = t239 * t350;
t207 = t239 * t335;
t311 = t239 * t341;
t310 = t240 * t333;
t309 = t240 * t345;
t308 = t240 * t334;
t307 = t241 * t334;
t305 = t173 * t423;
t304 = -t370 / 0.2e1;
t302 = t368 / 0.2e1;
t301 = -t364 / 0.2e1;
t296 = t361 / 0.2e1;
t291 = t235 / 0.2e1 - t237 / 0.2e1;
t141 = (-0.1e1 / 0.2e1 + t291) * t240;
t93 = qJD(1) * t141 - t208;
t156 = t291 * t240;
t287 = qJD(1) * t156 - t208;
t177 = t239 * qJD(1) * t365;
t286 = qJD(2) * t156 + t177;
t285 = t240 * t208;
t284 = t242 * t309;
t282 = t440 + t322;
t281 = t437 - t379 / 0.2e1;
t280 = t377 / 0.2e1 + t438;
t277 = t429 + t298;
t276 = t160 * t424 + t435;
t275 = t182 * t423 + t432;
t273 = -t173 * t242 + t418;
t253 = t153 * t434 + t160 * t435;
t258 = -t60 * t436 / 0.2e1 + t68 * qJ(4) / 0.2e1;
t1 = t321 * t181 + t320 * t183 + t253 + t258;
t40 = t153 * t160;
t272 = -t1 * qJD(1) + t40 * qJD(2);
t10 = (t433 + t277) * t241 + (-t381 / 0.2e1 - t383 / 0.2e1 - t322) * t240 + t245;
t62 = -t153 * t239 + t160 * t241;
t271 = qJD(1) * t10 + qJD(2) * t62;
t13 = -t378 / 0.2e1 + t276 * t241 + (t434 - t252) * t239 + t319;
t61 = t381 + t383;
t270 = -qJD(1) * t13 + qJD(2) * t61;
t158 = -t171 / 0.2e1;
t192 = t239 * t323;
t26 = t192 - t384 / 0.2e1 - t386 / 0.2e1 - t229 + t158 + (t380 / 0.2e1 + (-t182 / 0.2e1 + pkin(6) / 0.2e1) * t241) * t240;
t96 = t173 * t241 + t182 * t239;
t269 = -qJD(1) * t26 + qJD(2) * t96;
t259 = t305 + t323;
t247 = t431 + t259;
t254 = t275 * t239;
t28 = -t230 + t428 + t254 + (t429 + t247) * t241;
t97 = t182 * t241 - t380;
t268 = -qJD(1) * t28 + qJD(2) * t97;
t267 = t115 * t241 + t116 * t239;
t104 = t181 * t239 + t183 * t241;
t17 = t411 / 0.2e1 + (t300 + t281) * t241 + (t332 * t242 + t280) * t239;
t265 = qJD(1) * t17 - qJD(2) * t104;
t123 = -t282 * t239 + t367;
t67 = (t282 * t241 + t228) * t240;
t264 = qJD(1) * t67 - qJD(2) * t123;
t262 = t213 * t240;
t261 = t323 - t416 / 0.2e1;
t260 = -t115 * qJ(4) / 0.2e1 + t116 * t440;
t86 = (t429 + t261) * t241;
t257 = pkin(2) * t351 - qJD(1) * t86;
t193 = pkin(7) * t304;
t85 = t240 * t325 + t157 + t193;
t256 = pkin(2) * t350 - qJD(1) * t85;
t244 = (t293 * t241 - t444) * pkin(7) + t182 * t432 + t152 * t173 / 0.2e1;
t4 = t244 + t260;
t255 = -t173 * t182 * qJD(2) - t4 * qJD(1);
t36 = t387 / 0.2e1 + (t429 + t259) * t241 + t292;
t251 = qJD(1) * t36 + t173 * t351;
t137 = t241 * t262;
t165 = t317 + t351;
t168 = t203 * t236;
t250 = qJD(1) * t168 + 0.2e1 * t285;
t248 = t427 - t376 / 0.2e1 + t324;
t176 = t236 * t237 + t238;
t91 = qJD(1) * t176 + t285 - t346;
t233 = qJ(4) * qJD(4);
t225 = t235 * qJD(4);
t218 = qJ(4) * t346;
t217 = t336 / 0.2e1;
t178 = t241 * t309;
t175 = t213 * qJ(4);
t172 = t176 * qJD(4);
t166 = -t226 + t307;
t164 = t239 * t337 - t350;
t162 = (t334 - qJD(3) / 0.2e1) * t240;
t151 = qJD(2) * t235 + t283;
t150 = t156 * qJD(3);
t143 = (-t332 + t420) * t239;
t142 = t235 * t424 + t237 * t423 + t424;
t138 = t165 * t242;
t136 = t239 * t262;
t135 = t239 * t308 - t241 * t333;
t132 = t142 * qJD(4);
t131 = t141 * qJD(4);
t120 = t128 * qJD(3);
t113 = t241 * t296 + t436 * t303;
t81 = qJD(2) * t142 - t177;
t80 = qJD(2) * t141 + t177;
t59 = t241 * t261 + t159 + t216;
t58 = t193 + t158 + (t325 + t413) * t240;
t37 = pkin(7) * t301 + t173 * t303 - t387 / 0.2e1 - t366 / 0.2e1 + t292;
t32 = t153 * t302 + t392 / 0.2e1 + t428 + t277 * t241 + t248;
t27 = t241 * t247 + t230 + t254 + t355;
t25 = t192 - t275 * t241 + (t305 + t431) * t239 + t319;
t22 = pkin(3) * t301 + t111 * t426 + t112 * t421 + t127 * t422 + t128 * t425 + t189;
t18 = -t411 / 0.2e1 + t280 * t239 + t436 * t304 + (t299 + t281) * t241;
t14 = t378 / 0.2e1 + t160 * t302 - t124 * t425 + t107 * t421 + t319 + t443 * t239;
t11 = t276 * t239 - t248 + t296 + t355 + (t433 + t443) * t241;
t6 = t88 * t422 + t405 / 0.2e1 + t89 * t426 - t406 / 0.2e1 + t188 + t241 * t295;
t3 = t244 - t260;
t2 = -t253 + t258 + t445 * t183 / 0.2e1 + (t437 + t89 / 0.2e1) * t181;
t45 = [0, 0, 0, t310, t204 * qJD(2), 0, 0, 0, -pkin(1) * t336, -pkin(1) * t333, -t236 * t312 + t237 * t310, -qJD(3) * t168 - 0.2e1 * t242 * t285, -qJD(2) * t170 + t240 * t316, qJD(2) * t169 + t240 * t315, -t310, -qJD(2) * t42 - qJD(3) * t70, qJD(2) * t43 + qJD(3) * t69, qJD(2) * t30 + qJD(3) * t38 - t236 * t207, -qJD(2) * t23 - qJD(3) * t24 + t284, -qJD(2) * t29 - qJD(3) * t39 + t172, qJD(2) * t16 + qJD(3) * t20 - qJD(4) * t44, t15 * qJD(2) + t34 * qJD(3) + (-t236 * t345 - t240 * t341) * t241, -qJD(2) * t19 - qJD(3) * t33 - t240 * t311 + t172, qJD(2) * t9 + qJD(3) * t12 + qJD(5) * t167 - t284, qJD(2) * t7 + qJD(3) * t8 - qJD(4) * t41 + qJD(5) * t35; 0, 0, 0, t308, t338, t333, -t336, 0, -pkin(6) * t333 - t329, pkin(6) * t336 - t328, -t150 + (t237 * t337 + t208) * t242, -0.2e1 * t240 * t312 + t441 * t242, t239 * t336 - t352, t241 * t336 + t353, -t162, -t357 + (t279 * t239 - t330) * qJD(2) + t59 * qJD(3), t356 + (t279 * t241 + t331) * qJD(2) + t58 * qJD(3), t359 + (-t134 * t241 - t239 * t273) * qJD(2) + t27 * qJD(3) + t132, qJD(2) * t267 + t22 * qJD(3) - t372, -t360 + (-t134 * t239 + t241 * t273) * qJD(2) + t25 * qJD(3) + t178, t382 + (pkin(7) * t267 + t134 * t173) * qJD(2) + t3 * qJD(3) + t37 * qJD(4), t385 + (t108 * t241 - t153 * t370 - t379) * qJD(2) + t11 * qJD(3) + t132 - t311, -t375 + (t108 * t239 + t153 * t364 + t377) * qJD(2) + t14 * qJD(3) + t178 + t241 * t341, t402 + ((-t68 - t378) * t241 + (-t60 + t376) * t239) * qJD(2) + t6 * qJD(3), t404 + (t108 * t153 + t181 * t60 + t183 * t68) * qJD(2) + t2 * qJD(3) + t32 * qJD(4) + t18 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t286, -t250, t136, t137, t217, qJD(2) * t59 - t120 - t393, qJD(2) * t58 + t349 + t394, qJD(2) * t27 - t120 + t398, t22 * qJD(2) - qJD(3) * t354 - t309 - t369, qJD(2) * t25 - t344 - t349 - t397, t374 + t3 * qJD(2) + (-pkin(3) * t128 - qJ(4) * t127) * qJD(3) + t111 * qJD(4), qJD(2) * t11 - qJD(3) * t89 + t400, qJD(2) * t14 + qJD(3) * t88 - t344 - t401, t390 + t6 * qJD(2) + (-t239 * t361 + t212) * qJD(3) + t309, t403 + t2 * qJD(2) + (t88 * qJ(4) - t436 * t89) * qJD(3) + t66 * qJD(4) + t113 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, t136, t91, qJD(2) * t37 + qJD(3) * t111 - t395, t81, t91, -t136, qJD(2) * t32 + qJD(3) * t66 - t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t138, -t135, t340, qJD(2) * t18 + qJD(3) * t113 + t399; 0, 0, 0, -t308, -t338, 0, 0, 0, t329, t328, -t237 * t308 - t150, 0.2e1 * t239 * t137, -t315 + t352, t316 - t353, t162, qJD(3) * t86 + t357, qJD(3) * t85 - t356, qJD(3) * t28 - t131 - t359, -qJD(3) * t21 - t314 + t372, qJD(3) * t26 + t178 + t360, qJD(3) * t4 - qJD(4) * t36 - t382, qJD(3) * t10 - t131 - t385, -qJD(3) * t13 + t178 + t375, -qJD(3) * t5 + t314 - t402, -qJD(3) * t1 - qJD(4) * t31 + qJD(5) * t17 - t404; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t312, t203 * qJD(3), 0, 0, 0, -pkin(2) * t347, -pkin(2) * t226, -qJD(3) * t97 + t207, 0, -qJD(3) * t96 + t225, (qJD(3) * t182 - t345) * t173, qJD(3) * t62 + t207, qJD(3) * t61 + t225, qJD(5) * t202, qJD(3) * t40 - qJD(5) * t104 + t153 * t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t287, t441, -t166, t213 * t239, -t337 / 0.2e1, -t257 - t326, -t256 + t327, -t268 - t326, -t373 + t447, -t269 - t327, pkin(7) * t447 - t255, t271 - t348, -qJD(3) * t181 + t270, t446 * qJD(3) - t335 - t407, (-t181 * qJ(4) - t183 * t436) * qJD(3) + t183 * qJD(4) + t143 * qJD(5) + t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t93, -t166, t151, -t251 + t326, -t93, t151, t166, t153 * t351 + t348 - t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t339, qJD(3) * t143 + t265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t286, t250, -t135, -t138, t217, -qJD(2) * t86 + t393, -qJD(2) * t85 - t394, -qJD(2) * t28 - t398, qJD(2) * t21 + t369, -qJD(2) * t26 - t344 + t397, -qJD(2) * t4 - t318 - t374, -qJD(2) * t10 + t313 - t400, qJD(2) * t13 + t240 * t343 - t344 + t401, qJD(2) * t5 - t390, qJD(2) * t1 + qJD(5) * t67 - t318 - t403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t287, -t441, t307, -t239 * t334, t337 / 0.2e1, t257, t256, t268, t373, t269, t255, -t271 + t343, -t270 - t342, t407, -qJD(5) * t123 - t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t233, 0, qJD(4), 0, t233; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t213, -t175, 0, -t213, 0, -t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165, t164, 0, t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, -t135, -t91, qJD(2) * t36 + t218 + t395, t80, -t91, t135, qJD(2) * t31 + t218 - t313 + t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, t307, -t151, t251, t93, -t151, -t307, t358 + (-qJD(2) * t153 - qJD(5)) * t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, t175, 0, t213, 0, t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, t136, -t340, -qJD(2) * t17 - qJD(3) * t67 + t240 * t335 - t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t347, t226, -t339, qJD(3) * t123 - t265 + t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t165, -t164, 0, -t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t45;
