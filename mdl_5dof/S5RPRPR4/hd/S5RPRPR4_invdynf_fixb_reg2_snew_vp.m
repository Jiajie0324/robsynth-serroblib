% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RPRPR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d5,theta2,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 11:40
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RPRPR4_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRPR4_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRPR4_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRPR4_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRPR4_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPRPR4_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 11:40:07
% EndTime: 2020-01-03 11:40:10
% DurationCPUTime: 2.89s
% Computational Cost: add. (14440->211), mult. (31717->308), div. (0->0), fcn. (21339->10), ass. (0->175)
t1418 = qJD(3) + qJD(5);
t1463 = qJD(5) + t1418;
t1422 = sin(pkin(9));
t1424 = cos(pkin(9));
t1431 = cos(qJ(3));
t1454 = qJD(1) * t1431;
t1428 = sin(qJ(3));
t1455 = qJD(1) * t1428;
t1384 = t1422 * t1455 - t1424 * t1454;
t1386 = (t1422 * t1431 + t1424 * t1428) * qJD(1);
t1427 = sin(qJ(5));
t1430 = cos(qJ(5));
t1359 = t1430 * t1384 + t1427 * t1386;
t1462 = t1359 ^ 2;
t1361 = -t1427 * t1384 + t1430 * t1386;
t1461 = t1361 ^ 2;
t1460 = t1384 ^ 2;
t1459 = t1386 ^ 2;
t1458 = t1418 ^ 2;
t1457 = t1431 ^ 2;
t1456 = -2 * qJD(4);
t1453 = qJD(3) * t1384;
t1452 = qJD(3) * t1386;
t1451 = t1361 * t1359;
t1450 = t1386 * t1384;
t1434 = qJD(1) ^ 2;
t1449 = t1457 * t1434;
t1448 = qJD(5) - t1418;
t1429 = sin(qJ(1));
t1432 = cos(qJ(1));
t1406 = -t1429 * g(2) + t1432 * g(3);
t1393 = -t1434 * pkin(1) + t1406;
t1423 = sin(pkin(8));
t1425 = cos(pkin(8));
t1407 = -t1432 * g(2) - t1429 * g(3);
t1436 = qJDD(1) * pkin(1) + t1407;
t1370 = t1425 * t1393 + t1423 * t1436;
t1363 = -t1434 * pkin(2) + qJDD(1) * pkin(6) + t1370;
t1420 = -g(1) + qJDD(2);
t1351 = t1431 * t1363 + t1428 * t1420;
t1447 = t1428 * qJDD(1);
t1446 = t1431 * qJDD(1);
t1411 = t1431 * t1434 * t1428;
t1404 = qJDD(3) + t1411;
t1445 = -qJDD(3) - qJDD(5);
t1419 = t1428 ^ 2;
t1444 = t1419 + t1457;
t1443 = qJD(3) * t1455;
t1442 = qJD(3) * t1454;
t1350 = -t1428 * t1363 + t1431 * t1420;
t1395 = t1442 + t1447;
t1336 = (-t1395 + t1442) * qJ(4) + t1404 * pkin(3) + t1350;
t1403 = qJD(3) * pkin(3) - qJ(4) * t1455;
t1437 = -t1443 + t1446;
t1337 = -pkin(3) * t1449 + t1437 * qJ(4) - qJD(3) * t1403 + t1351;
t1309 = t1422 * t1336 + t1424 * t1337 + t1384 * t1456;
t1371 = t1424 * t1395 + t1422 * t1437;
t1349 = -t1371 - t1453;
t1440 = t1422 * t1395 - t1424 * t1437;
t1441 = -t1427 * t1371 - t1430 * t1440;
t1369 = -t1423 * t1393 + t1425 * t1436;
t1397 = -t1423 * qJDD(1) - t1425 * t1434;
t1398 = t1425 * qJDD(1) - t1423 * t1434;
t1439 = t1429 * t1397 + t1432 * t1398;
t1365 = qJDD(3) - t1450;
t1308 = t1424 * t1336 - t1422 * t1337 + t1386 * t1456;
t1438 = t1432 * t1397 - t1429 * t1398;
t1362 = -qJDD(1) * pkin(2) - t1434 * pkin(6) - t1369;
t1435 = -t1430 * t1371 + t1427 * t1440;
t1340 = -t1437 * pkin(3) - qJ(4) * t1449 + t1403 * t1455 + qJDD(4) + t1362;
t1433 = qJD(3) ^ 2;
t1410 = -t1433 - t1449;
t1409 = -t1419 * t1434 - t1433;
t1405 = -qJDD(3) + t1411;
t1402 = t1444 * t1434;
t1401 = t1432 * qJDD(1) - t1429 * t1434;
t1400 = -t1429 * qJDD(1) - t1432 * t1434;
t1399 = t1444 * qJDD(1);
t1396 = -0.2e1 * t1443 + t1446;
t1394 = 0.2e1 * t1442 + t1447;
t1379 = -t1433 - t1459;
t1378 = qJD(3) * pkin(4) - t1386 * pkin(7);
t1377 = t1431 * t1405 - t1428 * t1409;
t1376 = -t1428 * t1404 + t1431 * t1410;
t1375 = t1428 * t1405 + t1431 * t1409;
t1374 = t1431 * t1404 + t1428 * t1410;
t1373 = t1425 * t1399 - t1423 * t1402;
t1372 = t1423 * t1399 + t1425 * t1402;
t1366 = -qJDD(3) - t1450;
t1364 = -t1433 - t1460;
t1356 = t1425 * t1377 + t1423 * t1394;
t1355 = t1425 * t1376 - t1423 * t1396;
t1354 = t1423 * t1377 - t1425 * t1394;
t1353 = t1423 * t1376 + t1425 * t1396;
t1352 = -t1458 - t1461;
t1348 = t1371 - t1453;
t1347 = -t1440 + t1452;
t1346 = t1440 + t1452;
t1345 = -t1459 - t1460;
t1344 = t1424 * t1366 - t1422 * t1379;
t1343 = t1422 * t1366 + t1424 * t1379;
t1342 = -t1423 * t1369 + t1425 * t1370;
t1341 = t1425 * t1369 + t1423 * t1370;
t1339 = t1424 * t1364 - t1422 * t1365;
t1338 = t1422 * t1364 + t1424 * t1365;
t1334 = t1445 - t1451;
t1333 = -t1445 - t1451;
t1332 = -t1458 - t1462;
t1329 = -t1428 * t1350 + t1431 * t1351;
t1328 = t1431 * t1350 + t1428 * t1351;
t1327 = t1424 * t1347 - t1422 * t1349;
t1326 = t1422 * t1347 + t1424 * t1349;
t1325 = -t1461 - t1462;
t1324 = -t1428 * t1343 + t1431 * t1344;
t1323 = t1431 * t1343 + t1428 * t1344;
t1322 = t1430 * t1334 - t1427 * t1352;
t1321 = t1427 * t1334 + t1430 * t1352;
t1320 = t1425 * t1329 + t1423 * t1362;
t1319 = t1423 * t1329 - t1425 * t1362;
t1318 = t1448 * t1359 + t1435;
t1317 = -t1463 * t1359 - t1435;
t1316 = -t1448 * t1361 + t1441;
t1315 = t1463 * t1361 - t1441;
t1314 = t1440 * pkin(4) - t1460 * pkin(7) + t1386 * t1378 + t1340;
t1313 = -t1428 * t1338 + t1431 * t1339;
t1312 = t1431 * t1338 + t1428 * t1339;
t1311 = t1430 * t1332 - t1427 * t1333;
t1310 = t1427 * t1332 + t1430 * t1333;
t1307 = t1425 * t1324 + t1423 * t1348;
t1306 = t1423 * t1324 - t1425 * t1348;
t1305 = -t1428 * t1326 + t1431 * t1327;
t1304 = t1431 * t1326 + t1428 * t1327;
t1303 = t1425 * t1313 + t1423 * t1346;
t1302 = t1423 * t1313 - t1425 * t1346;
t1301 = -t1460 * pkin(4) - t1440 * pkin(7) - qJD(3) * t1378 + t1309;
t1300 = t1365 * pkin(4) + t1349 * pkin(7) + t1308;
t1299 = t1425 * t1305 + t1423 * t1345;
t1298 = t1423 * t1305 - t1425 * t1345;
t1297 = -t1422 * t1321 + t1424 * t1322;
t1296 = t1424 * t1321 + t1422 * t1322;
t1295 = t1430 * t1316 - t1427 * t1318;
t1294 = t1427 * t1316 + t1430 * t1318;
t1293 = -t1422 * t1310 + t1424 * t1311;
t1292 = t1424 * t1310 + t1422 * t1311;
t1291 = -t1422 * t1308 + t1424 * t1309;
t1290 = t1424 * t1308 + t1422 * t1309;
t1289 = t1427 * t1300 + t1430 * t1301;
t1288 = t1430 * t1300 - t1427 * t1301;
t1287 = -t1428 * t1296 + t1431 * t1297;
t1286 = t1431 * t1296 + t1428 * t1297;
t1285 = -t1422 * t1294 + t1424 * t1295;
t1284 = t1424 * t1294 + t1422 * t1295;
t1283 = -t1428 * t1292 + t1431 * t1293;
t1282 = t1431 * t1292 + t1428 * t1293;
t1281 = t1425 * t1287 + t1423 * t1317;
t1280 = t1423 * t1287 - t1425 * t1317;
t1279 = -t1428 * t1290 + t1431 * t1291;
t1278 = t1431 * t1290 + t1428 * t1291;
t1277 = t1425 * t1279 + t1423 * t1340;
t1276 = t1423 * t1279 - t1425 * t1340;
t1275 = t1425 * t1283 + t1423 * t1315;
t1274 = t1423 * t1283 - t1425 * t1315;
t1273 = -t1427 * t1288 + t1430 * t1289;
t1272 = t1430 * t1288 + t1427 * t1289;
t1271 = -t1428 * t1284 + t1431 * t1285;
t1270 = t1431 * t1284 + t1428 * t1285;
t1269 = t1425 * t1271 + t1423 * t1325;
t1268 = t1423 * t1271 - t1425 * t1325;
t1267 = -t1422 * t1272 + t1424 * t1273;
t1266 = t1424 * t1272 + t1422 * t1273;
t1265 = -t1428 * t1266 + t1431 * t1267;
t1264 = t1431 * t1266 + t1428 * t1267;
t1263 = t1425 * t1265 + t1423 * t1314;
t1262 = t1423 * t1265 - t1425 * t1314;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1420, 0, 0, 0, 0, 0, 0, t1374, t1375, 0, t1328, 0, 0, 0, 0, 0, 0, t1312, t1323, t1304, t1278, 0, 0, 0, 0, 0, 0, t1282, t1286, t1270, t1264; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1401, t1400, 0, t1429 * t1406 + t1432 * t1407, 0, 0, 0, 0, 0, 0, t1439, t1438, 0, t1432 * t1341 + t1429 * t1342, 0, 0, 0, 0, 0, 0, t1432 * t1353 + t1429 * t1355, t1432 * t1354 + t1429 * t1356, t1432 * t1372 + t1429 * t1373, t1432 * t1319 + t1429 * t1320, 0, 0, 0, 0, 0, 0, t1432 * t1302 + t1429 * t1303, t1432 * t1306 + t1429 * t1307, t1432 * t1298 + t1429 * t1299, t1432 * t1276 + t1429 * t1277, 0, 0, 0, 0, 0, 0, t1432 * t1274 + t1429 * t1275, t1432 * t1280 + t1429 * t1281, t1432 * t1268 + t1429 * t1269, t1432 * t1262 + t1429 * t1263; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t1400, t1401, 0, -t1432 * t1406 + t1429 * t1407, 0, 0, 0, 0, 0, 0, -t1438, t1439, 0, t1429 * t1341 - t1432 * t1342, 0, 0, 0, 0, 0, 0, t1429 * t1353 - t1432 * t1355, t1429 * t1354 - t1432 * t1356, t1429 * t1372 - t1432 * t1373, t1429 * t1319 - t1432 * t1320, 0, 0, 0, 0, 0, 0, t1429 * t1302 - t1432 * t1303, t1429 * t1306 - t1432 * t1307, t1429 * t1298 - t1432 * t1299, t1429 * t1276 - t1432 * t1277, 0, 0, 0, 0, 0, 0, t1429 * t1274 - t1432 * t1275, t1429 * t1280 - t1432 * t1281, t1429 * t1268 - t1432 * t1269, t1429 * t1262 - t1432 * t1263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1434, -qJDD(1), 0, t1406, 0, 0, 0, 0, 0, 0, t1397, -t1398, 0, t1342, 0, 0, 0, 0, 0, 0, t1355, t1356, t1373, t1320, 0, 0, 0, 0, 0, 0, t1303, t1307, t1299, t1277, 0, 0, 0, 0, 0, 0, t1275, t1281, t1269, t1263; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1434, 0, t1407, 0, 0, 0, 0, 0, 0, t1398, t1397, 0, t1341, 0, 0, 0, 0, 0, 0, t1353, t1354, t1372, t1319, 0, 0, 0, 0, 0, 0, t1302, t1306, t1298, t1276, 0, 0, 0, 0, 0, 0, t1274, t1280, t1268, t1262; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1420, 0, 0, 0, 0, 0, 0, t1374, t1375, 0, t1328, 0, 0, 0, 0, 0, 0, t1312, t1323, t1304, t1278, 0, 0, 0, 0, 0, 0, t1282, t1286, t1270, t1264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1434, -qJDD(1), 0, t1370, 0, 0, 0, 0, 0, 0, t1376, t1377, t1399, t1329, 0, 0, 0, 0, 0, 0, t1313, t1324, t1305, t1279, 0, 0, 0, 0, 0, 0, t1283, t1287, t1271, t1265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1434, 0, t1369, 0, 0, 0, 0, 0, 0, t1396, -t1394, t1402, -t1362, 0, 0, 0, 0, 0, 0, -t1346, -t1348, -t1345, -t1340, 0, 0, 0, 0, 0, 0, -t1315, -t1317, -t1325, -t1314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1420, 0, 0, 0, 0, 0, 0, t1374, t1375, 0, t1328, 0, 0, 0, 0, 0, 0, t1312, t1323, t1304, t1278, 0, 0, 0, 0, 0, 0, t1282, t1286, t1270, t1264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1410, t1405, t1446, t1351, 0, 0, 0, 0, 0, 0, t1339, t1344, t1327, t1291, 0, 0, 0, 0, 0, 0, t1293, t1297, t1285, t1267; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1404, t1409, -t1447, t1350, 0, 0, 0, 0, 0, 0, t1338, t1343, t1326, t1290, 0, 0, 0, 0, 0, 0, t1292, t1296, t1284, t1266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1396, t1394, -t1402, t1362, 0, 0, 0, 0, 0, 0, t1346, t1348, t1345, t1340, 0, 0, 0, 0, 0, 0, t1315, t1317, t1325, t1314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1364, t1366, t1347, t1309, 0, 0, 0, 0, 0, 0, t1311, t1322, t1295, t1273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1365, t1379, t1349, t1308, 0, 0, 0, 0, 0, 0, t1310, t1321, t1294, t1272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1346, t1348, t1345, t1340, 0, 0, 0, 0, 0, 0, t1315, t1317, t1325, t1314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1332, t1334, t1316, t1289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1333, t1352, t1318, t1288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1315, t1317, t1325, t1314;];
f_new_reg = t1;
