% Calculate vector of inverse dynamics joint torques for
% S5PRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d4,theta1]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:46
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5PRRRP4_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRP4_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRP4_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5PRRRP4_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5PRRRP4_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRRP4_invdynJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5PRRRP4_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5PRRRP4_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5PRRRP4_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:45:37
% EndTime: 2019-12-05 16:46:19
% DurationCPUTime: 36.65s
% Computational Cost: add. (24172->834), mult. (33150->1159), div. (0->0), fcn. (31973->8), ass. (0->434)
t777 = Icges(6,4) + Icges(5,5);
t776 = Icges(5,6) - Icges(6,6);
t762 = Icges(5,2) + Icges(6,3);
t798 = Icges(6,2) + Icges(5,3);
t413 = sin(qJ(4));
t415 = cos(qJ(4));
t797 = -t413 * t777 - t776 * t415;
t796 = Icges(5,1) + Icges(6,1);
t795 = Icges(5,4) - Icges(6,5);
t410 = qJ(2) + qJ(3);
t404 = sin(t410);
t411 = sin(pkin(8));
t405 = cos(t410);
t601 = qJD(4) * t415;
t583 = t405 * t601;
t412 = cos(pkin(8));
t603 = qJD(4) * t412;
t409 = qJD(2) + qJD(3);
t635 = t409 * t411;
t207 = -t411 * t583 + (t404 * t635 + t603) * t413;
t630 = t412 * t415;
t633 = t411 * t413;
t347 = t405 * t633 + t630;
t632 = t411 * t415;
t593 = t404 * t632;
t208 = -qJD(4) * t347 - t409 * t593;
t590 = t405 * t635;
t794 = t776 * t207 + t777 * t208 + t798 * t590;
t631 = t412 * t413;
t592 = t404 * t631;
t602 = qJD(4) * t413;
t209 = t409 * t592 - t411 * t602 - t412 * t583;
t349 = t405 * t631 - t632;
t591 = t404 * t630;
t210 = -qJD(4) * t349 - t409 * t591;
t634 = t409 * t412;
t589 = t405 * t634;
t793 = t776 * t209 + t777 * t210 + t798 * t589;
t521 = Icges(5,5) * t415 - Icges(5,6) * t413;
t471 = t521 * t405;
t527 = Icges(6,4) * t415 + Icges(6,6) * t413;
t472 = t527 * t405;
t792 = (-t471 - t472) * t409 + (-t797 * qJD(4) - t798 * t409) * t404;
t348 = t405 * t632 - t631;
t644 = t404 * t411;
t162 = Icges(5,5) * t348 - Icges(5,6) * t347 + Icges(5,3) * t644;
t164 = Icges(6,4) * t348 + Icges(6,2) * t644 + Icges(6,6) * t347;
t769 = t164 + t162;
t350 = t405 * t630 + t633;
t643 = t404 * t412;
t163 = Icges(5,5) * t350 - Icges(5,6) * t349 + Icges(5,3) * t643;
t165 = Icges(6,4) * t350 + Icges(6,2) * t643 + Icges(6,6) * t349;
t768 = t165 + t163;
t266 = -Icges(5,3) * t405 + t404 * t521;
t268 = -Icges(6,2) * t405 + t404 * t527;
t781 = -t268 - t266;
t653 = Icges(6,5) * t413;
t659 = Icges(5,4) * t413;
t791 = -t762 * t415 + t653 - t659;
t790 = -t762 * t207 - t795 * t208 - t776 * t590;
t789 = -t762 * t209 - t795 * t210 - t776 * t589;
t788 = t795 * t207 + t796 * t208 + t777 * t590;
t787 = t795 * t209 + t796 * t210 + t777 * t589;
t652 = Icges(6,5) * t415;
t519 = Icges(6,3) * t413 + t652;
t470 = t519 * t405;
t658 = Icges(5,4) * t415;
t529 = -Icges(5,2) * t413 + t658;
t473 = t529 * t405;
t786 = (-t470 + t473) * t409 + (t791 * qJD(4) + t776 * t409) * t404;
t534 = Icges(6,1) * t415 + t653;
t474 = t534 * t405;
t536 = Icges(5,1) * t415 - t659;
t475 = t536 * t405;
t535 = -Icges(5,1) * t413 - t658;
t785 = (-t474 - t475) * t409 + (-t777 * t409 + (Icges(6,1) * t413 - t535 - t652) * qJD(4)) * t404;
t307 = Icges(6,5) * t348;
t160 = Icges(6,6) * t644 + Icges(6,3) * t347 + t307;
t661 = Icges(5,4) * t348;
t166 = -Icges(5,2) * t347 + Icges(5,6) * t644 + t661;
t771 = t160 - t166;
t308 = Icges(6,5) * t350;
t161 = Icges(6,6) * t643 + Icges(6,3) * t349 + t308;
t660 = Icges(5,4) * t350;
t167 = -Icges(5,2) * t349 + Icges(5,6) * t643 + t660;
t770 = t161 - t167;
t655 = Icges(6,5) * t347;
t168 = Icges(6,1) * t348 + Icges(6,4) * t644 + t655;
t309 = Icges(5,4) * t347;
t170 = Icges(5,1) * t348 + Icges(5,5) * t644 - t309;
t784 = t168 + t170;
t654 = Icges(6,5) * t349;
t169 = Icges(6,1) * t350 + Icges(6,4) * t643 + t654;
t310 = Icges(5,4) * t349;
t171 = Icges(5,1) * t350 + Icges(5,5) * t643 - t310;
t783 = t169 + t171;
t641 = t404 * t415;
t385 = Icges(6,5) * t641;
t642 = t404 * t413;
t649 = Icges(6,6) * t405;
t264 = Icges(6,3) * t642 + t385 - t649;
t270 = -Icges(5,6) * t405 + t404 * t529;
t782 = t264 - t270;
t272 = -Icges(6,4) * t405 + t404 * t534;
t274 = -Icges(5,5) * t405 + t404 * t536;
t759 = t272 + t274;
t640 = t405 * t409;
t780 = t792 * t404 + t781 * t640;
t779 = t793 * t404 + t768 * t640;
t778 = t794 * t404 + t769 * t640;
t753 = rSges(6,1) + pkin(4);
t743 = rSges(6,3) + qJ(5);
t752 = -t771 * t207 + t784 * t208 + t790 * t347 + t788 * t348 + t778 * t411;
t751 = -t770 * t207 + t783 * t208 + t789 * t347 + t787 * t348 + t779 * t411;
t750 = -t771 * t209 + t784 * t210 + t790 * t349 + t788 * t350 + t778 * t412;
t749 = -t770 * t209 + t783 * t210 + t789 * t349 + t787 * t350 + t779 * t412;
t775 = t782 * t207 - t759 * t208 + t786 * t347 + t785 * t348 + t780 * t411;
t774 = t782 * t209 - t759 * t210 + t786 * t349 + t785 * t350 + t780 * t412;
t765 = t771 * t347 + t784 * t348 + t769 * t644;
t773 = t770 * t347 + t783 * t348 + t768 * t644;
t772 = t771 * t349 + t784 * t350 + t769 * t643;
t746 = t770 * t349 + t783 * t350 + t768 * t643;
t517 = t160 * t413 + t168 * t415;
t88 = -t164 * t405 + t404 * t517;
t513 = -t166 * t413 + t170 * t415;
t90 = -t162 * t405 + t404 * t513;
t745 = t88 + t90;
t516 = t161 * t413 + t169 * t415;
t89 = -t165 * t405 + t404 * t516;
t512 = -t167 * t413 + t171 * t415;
t91 = -t163 * t405 + t404 * t512;
t744 = t89 + t91;
t715 = t782 * t347 + t759 * t348 - t781 * t644;
t709 = t782 * t349 + t759 * t350 - t781 * t643;
t548 = rSges(6,1) * t415 + rSges(6,3) * t413;
t757 = (pkin(4) * t415 + qJ(5) * t413 + t548) * t404;
t612 = t743 * t641 - t642 * t753;
t414 = sin(qJ(2));
t416 = cos(qJ(2));
t373 = rSges(3,1) * t414 + rSges(3,2) * t416;
t407 = t411 ^ 2;
t408 = t412 ^ 2;
t701 = t407 + t408;
t764 = t373 * t701;
t600 = qJD(5) * t347;
t629 = rSges(6,2) * t590 - t743 * t207 + t753 * t208 + t600;
t599 = qJD(5) * t349;
t761 = rSges(6,2) * t589 - t743 * t209 + t753 * t210 + t599;
t403 = qJD(2) * t411;
t371 = qJD(3) * t411 + t403;
t301 = t404 * t603 + t371;
t604 = qJD(4) * t411;
t302 = t404 * t604 - t634;
t606 = qJD(4) * t405;
t758 = t797 * t404 * t606 + (t777 * t347 + t776 * t348) * t302 + (t777 * t349 + t776 * t350) * t301;
t756 = (t773 * t301 + t765 * t302 - t715 * t606) * t411 + (t746 * t301 + t772 * t302 - t709 * t606) * t412;
t401 = qJDD(2) * t411;
t369 = qJDD(3) * t411 + t401;
t605 = qJD(4) * t409;
t477 = qJDD(4) * t404 + t405 * t605;
t225 = t412 * t477 + t369;
t370 = (-qJDD(2) - qJDD(3)) * t412;
t226 = t411 * t477 + t370;
t351 = -qJDD(4) * t405 + t404 * t605;
t755 = t773 * t225 + t765 * t226 + t751 * t301 + t752 * t302 + t715 * t351 + t775 * t606;
t754 = t746 * t225 + t772 * t226 + t749 * t301 + t750 * t302 + t709 * t351 + t774 * t606;
t718 = ((t513 + t517) * t409 - t794) * t405 + (t788 * t415 + t790 * t413 + t769 * t409 + (-t413 * t784 + t771 * t415) * qJD(4)) * t404;
t717 = ((t512 + t516) * t409 - t793) * t405 + (t787 * t415 + t789 * t413 + t768 * t409 + (-t413 * t783 + t770 * t415) * qJD(4)) * t404;
t509 = -t270 * t413 + t274 * t415;
t647 = t266 * t405;
t105 = t404 * t509 - t647;
t596 = t105 * qJD(4);
t510 = t264 * t413 + t272 * t415;
t646 = t268 * t405;
t104 = t404 * t510 - t646;
t597 = t104 * qJD(4);
t748 = (-t596 - t597) * t405 + t745 * t302 + t744 * t301;
t625 = rSges(6,2) * t644 + t743 * t347 + t753 * t348;
t624 = rSges(6,2) * t643 + t743 * t349 + t753 * t350;
t445 = -t404 * t519 + t649;
t213 = t445 * t411;
t219 = t270 * t411;
t742 = t213 + t219;
t214 = t445 * t412;
t220 = t270 * t412;
t741 = t214 + t220;
t221 = t272 * t411;
t223 = t274 * t411;
t740 = -t221 - t223;
t222 = t272 * t412;
t224 = t274 * t412;
t739 = -t222 - t224;
t639 = t405 * t411;
t376 = rSges(6,2) * t639;
t738 = -t757 * t411 + t376;
t265 = Icges(6,6) * t404 + t470;
t271 = Icges(5,6) * t404 + t473;
t737 = -t265 + t271;
t273 = Icges(6,4) * t404 + t474;
t275 = Icges(5,5) * t404 + t475;
t736 = -t273 - t275;
t617 = -rSges(6,2) * t405 + t757;
t636 = t405 * t415;
t637 = t405 * t413;
t735 = t404 * rSges(6,2) + t753 * t636 + t743 * t637;
t662 = Icges(4,4) * t405;
t531 = -Icges(4,2) * t404 + t662;
t283 = -Icges(4,6) * t412 + t411 * t531;
t537 = -Icges(4,1) * t404 - t662;
t734 = t537 * t411 - t283;
t284 = Icges(4,6) * t411 + t412 * t531;
t733 = t537 * t412 - t284;
t663 = Icges(4,4) * t404;
t538 = Icges(4,1) * t405 - t663;
t285 = -Icges(4,5) * t412 + t411 * t538;
t530 = -Icges(4,2) * t405 - t663;
t732 = -t530 * t411 - t285;
t286 = Icges(4,5) * t411 + t412 * t538;
t731 = -t530 * t412 - t286;
t484 = Icges(5,3) * t404 + t471 - t509;
t485 = -Icges(6,2) * t404 - t472 + t510;
t690 = (t268 * t412 + t516) * t301 + (t268 * t411 + t517) * t302;
t691 = -(-t266 * t412 - t512) * t301 - (-t266 * t411 - t513) * t302;
t730 = (-t690 - t691 + (-t484 + t485) * t606) * t404;
t362 = pkin(3) * t404 - pkin(7) * t405;
t670 = pkin(2) * qJD(2);
t595 = t414 * t670;
t565 = t412 * t595;
t499 = -t362 * t634 - t565;
t72 = t302 * t617 + t606 * t625 + t499 + t599;
t570 = t72 * t625;
t598 = qJD(5) * t413;
t379 = t404 * t598;
t702 = t405 * pkin(3) + t404 * pkin(7);
t325 = t702 * t411;
t327 = t702 * t412;
t406 = t416 * pkin(2);
t262 = -pkin(6) * t412 + t406 * t411;
t263 = pkin(6) * t411 + t406 * t412;
t608 = qJD(2) * t412;
t578 = t262 * t403 + t263 * t608 + qJD(1);
t469 = t371 * t325 + t327 * t634 + t578;
t55 = t301 * t625 - t302 * t624 + t379 + t469;
t571 = t55 * t624;
t694 = g(1) * t412 + g(2) * t411;
t693 = t404 * t694;
t638 = t405 * t412;
t378 = rSges(6,2) * t638;
t706 = t412 * t757 - t378;
t567 = t411 * t595;
t462 = -t362 * t371 - t567;
t71 = -t301 * t617 - t606 * t624 + t462 + t600;
t729 = -(-t413 * t743 - t415 * t753 - pkin(3)) * t693 - (-t404 * t570 + (t71 * (-t617 * t412 + t706) - t411 * t571) * t405) * qJD(4);
t728 = t768 * t301 + t769 * t302;
t727 = -t646 - t647;
t726 = t773 * t412;
t725 = t772 * t411;
t382 = pkin(7) * t639;
t384 = pkin(7) * t638;
t568 = (-pkin(3) * t643 + t384) * t634 + t371 * (-pkin(3) * t644 + t382);
t584 = t405 * t603;
t724 = -t301 * t738 - t302 * t706 - t405 * t598 + t411 * t629 + t412 * t761 - t584 * t625 - t568;
t131 = rSges(5,1) * t208 + rSges(5,2) * t207 + rSges(5,3) * t590;
t133 = rSges(5,1) * t210 + rSges(5,2) * t209 + rSges(5,3) * t589;
t174 = rSges(5,1) * t348 - rSges(5,2) * t347 + rSges(5,3) * t644;
t176 = rSges(5,1) * t350 - rSges(5,2) * t349 + rSges(5,3) * t643;
t611 = t404 * rSges(5,2) * t633 + rSges(5,3) * t639;
t230 = -rSges(5,1) * t593 + t611;
t610 = rSges(5,2) * t592 + rSges(5,3) * t638;
t232 = -rSges(5,1) * t591 + t610;
t585 = t405 * t604;
t723 = t411 * t131 + t412 * t133 - t174 * t584 + t176 * t585 - t301 * t230 + t232 * t302 - t568;
t664 = Icges(3,4) * t416;
t665 = Icges(3,4) * t414;
t722 = (-t414 * (-Icges(3,2) * t416 - t665) + t416 * (-Icges(3,1) * t414 - t664)) * qJD(2);
t360 = rSges(4,1) * t404 + rSges(4,2) * t405;
t323 = t360 * t411;
t258 = t409 * t323;
t324 = t360 * t412;
t259 = t409 * t324;
t703 = t405 * rSges(4,1) - rSges(4,2) * t404;
t291 = -rSges(4,3) * t412 + t411 * t703;
t292 = rSges(4,3) * t411 + t412 * t703;
t719 = (-t411 * t258 - t412 * t259 + t371 * t323 + t324 * t634) * (t291 * t371 + t292 * t634 + t578);
t716 = ((-t509 - t510) * t409 - t792) * t405 + (t785 * t415 + t786 * t413 + t781 * t409 + (t413 * t759 - t415 * t782) * qJD(4)) * t404;
t708 = t104 + t105;
t700 = (t404 * t791 + t759) * t606 + (t348 * t762 + t309 - t655 - t784) * t302 + (t350 * t762 + t310 - t654 - t783) * t301;
t699 = (Icges(6,1) * t642 - t535 * t404 - t385 - t782) * t606 + (-t347 * t796 + t307 - t661 + t771) * t302 + (-t349 * t796 + t308 - t660 + t770) * t301;
t698 = t758 * t404;
t541 = t90 * t411 + t91 * t412;
t542 = t88 * t411 + t89 * t412;
t697 = t541 + t542;
t696 = t412 * t746 + t725;
t695 = t411 * t765 + t726;
t418 = qJD(2) ^ 2;
t688 = t225 / 0.2e1;
t687 = t226 / 0.2e1;
t686 = -t301 / 0.2e1;
t685 = t301 / 0.2e1;
t684 = -t302 / 0.2e1;
t683 = t302 / 0.2e1;
t682 = t351 / 0.2e1;
t680 = t411 / 0.2e1;
t679 = -t412 / 0.2e1;
t677 = pkin(2) * t414;
t672 = rSges(5,1) * t415;
t645 = t702 * t371;
t248 = t412 * t263;
t588 = t409 * t637;
t460 = t404 * t601 + t588;
t627 = t548 * t640 + (rSges(6,2) * t409 + (-rSges(6,1) * t413 + rSges(6,3) * t415) * qJD(4)) * t404 + t379 + t460 * qJ(5) + (-t404 * t602 + t409 * t636) * pkin(4);
t549 = -rSges(5,1) * t413 - rSges(5,2) * t415;
t550 = -rSges(5,2) * t413 + t672;
t149 = t550 * t640 + (rSges(5,3) * t409 + qJD(4) * t549) * t404;
t306 = t702 * t409;
t626 = -t149 - t306;
t623 = -t347 * t753 + t348 * t743;
t622 = t349 * t753 - t350 * t743;
t496 = t409 * t362;
t260 = t411 * t496;
t261 = t412 * t496;
t620 = -t411 * t260 - t412 * t261;
t619 = t411 * t262 + t248;
t618 = t411 * t291 + t412 * t292;
t277 = -rSges(5,3) * t405 + t404 * t550;
t616 = -t277 - t362;
t615 = t411 * t325 + t412 * t327;
t607 = qJD(4) * t404;
t594 = t416 * t670;
t587 = -t306 - t627;
t586 = -t362 - t617;
t574 = -t606 / 0.2e1;
t573 = t606 / 0.2e1;
t461 = -t360 - t677;
t572 = -t362 - t677;
t566 = t411 * t594;
t564 = t412 * t594;
t563 = t411 * t174 + t412 * t176 + t615;
t560 = t701 * t677;
t557 = -t411 * t677 + t382;
t556 = -t412 * t677 + t384;
t555 = -t277 + t572;
t303 = t703 * t409;
t554 = -t303 - t594;
t553 = -t306 - t594;
t374 = rSges(3,1) * t416 - rSges(3,2) * t414;
t540 = Icges(3,1) * t416 - t665;
t533 = -Icges(3,2) * t414 + t664;
t525 = Icges(3,5) * t416 - Icges(3,6) * t414;
t524 = -Icges(3,5) * t414 - Icges(3,6) * t416;
t523 = Icges(4,5) * t405 - Icges(4,6) * t404;
t522 = -Icges(4,5) * t404 - Icges(4,6) * t405;
t511 = t174 * t412 - t176 * t411;
t508 = -t283 * t404 + t285 * t405;
t507 = -t284 * t404 + t286 * t405;
t297 = -Icges(3,6) * t412 + t411 * t533;
t299 = -Icges(3,5) * t412 + t411 * t540;
t506 = -t297 * t414 + t299 * t416;
t298 = Icges(3,6) * t411 + t412 * t533;
t300 = Icges(3,5) * t411 + t412 * t540;
t505 = -t298 * t414 + t300 * t416;
t504 = t701 * t374;
t311 = t522 * t411;
t312 = t522 * t412;
t503 = -t311 * t634 + t312 * t371;
t502 = qJD(2) * t764;
t501 = t572 - t617;
t500 = qJD(2) * t560;
t279 = rSges(5,1) * t636 - rSges(5,2) * t637 + t404 * rSges(5,3);
t498 = -t149 + t553;
t497 = t411 * t625 + t412 * t624 + t615;
t481 = t553 - t627;
t476 = pkin(2) * (-qJDD(2) * t414 - t416 * t418);
t466 = qJD(2) * t524;
t463 = t702 + t735;
t459 = t279 + t702;
t458 = t411 * t476;
t457 = t412 * t476;
t290 = t634 * t702;
t456 = -t174 * t607 + t230 * t606 + t277 * t585 + t302 * t279 - t290;
t455 = -t500 + t620;
t450 = qJDD(2) * t248 + t262 * t401 - t418 * t560 + qJDD(1);
t443 = -t306 * t634 + t370 * t362 + t457;
t440 = (t404 * t732 + t405 * t734) * t409;
t439 = (t404 * t731 + t405 * t733) * t409;
t438 = t302 * t735 - t379 * t412 + t585 * t617 + t606 * t738 - t290;
t437 = (-t297 * t416 - t299 * t414) * qJD(2) + t722 * t411;
t436 = (-t298 * t416 - t300 * t414) * qJD(2) + t722 * t412;
t434 = -t279 * t301 - t645 + t176 * t607 + (-t277 * t412 - t232) * t606;
t433 = -t306 * t371 - t362 * t369 + t458;
t432 = (-pkin(3) - t672) * t693;
t426 = -t301 * t735 - t379 * t411 + t607 * t624 - t645;
t425 = -t371 * t260 - t261 * t634 + t369 * t325 - t370 * t327 + t450;
t424 = (t371 * t733 - t634 * t734) * t405 + (t371 * t731 - t634 * t732) * t404;
t281 = -Icges(4,3) * t412 + t411 * t523;
t108 = -t281 * t412 + t411 * t508;
t282 = Icges(4,3) * t411 + t412 * t523;
t109 = -t282 * t412 + t411 * t507;
t110 = t281 * t411 + t412 * t508;
t111 = t282 * t411 + t412 * t507;
t252 = t409 * t311;
t84 = -t252 * t412 + t411 * t440;
t253 = t409 * t312;
t85 = -t253 * t412 + t411 * t439;
t86 = t252 * t411 + t412 * t440;
t87 = t253 * t411 + t412 * t439;
t419 = -t371 * (t411 * t503 + t412 * t424) / 0.2e1 + t634 * (t411 * t424 - t412 * t503) / 0.2e1 + t370 * (-t108 * t412 + t109 * t411) / 0.2e1 + t369 * (-t110 * t412 + t111 * t411) / 0.2e1 - t634 * (t411 * t85 - t412 * t84) / 0.2e1 + t371 * (t411 * t87 - t412 * t86) / 0.2e1 + (t746 * t411 - t772 * t412) * t688 + (t773 * t411 - t412 * t765) * t687 + (((t349 * t737 + t350 * t736 + t725) * t405 + t709 * t404) * qJD(4) + (((t727 + t746) * qJD(4) + t728) * t405 + t730) * t412 + (t349 * t742 + t350 * t740) * t302 + (t349 * t741 + t350 * t739) * t301) * t686 + (t411 * t749 - t412 * t750) * t685 + (((t347 * t737 + t348 * t736 + t726) * t405 + t715 * t404) * qJD(4) + (((t727 + t765) * qJD(4) + t728) * t405 + t730) * t411 + (t347 * t742 + t348 * t740) * t302 + (t347 * t741 + t348 * t739) * t301) * t684 + (t411 * t751 - t412 * t752) * t683 + (t411 * t744 - t412 * t745) * t682 - t748 * t607 / 0.2e1 + (((t214 * t413 - t222 * t415 + t165) * t301 + (t213 * t413 - t221 * t415 + t164) * t302 + t597) * t404 + ((-t485 * t405 + (-t265 * t413 - t273 * t415 - t268) * t404 + t542) * qJD(4) + t690) * t405 + ((t220 * t413 - t224 * t415 + t163) * t301 + (t219 * t413 - t223 * t415 + t162) * t302 + t596) * t404 + ((t484 * t405 + (t271 * t413 - t275 * t415 - t266) * t404 + t541) * qJD(4) + t691) * t405) * t573 + (t110 * t370 + t111 * t369 + t371 * t87 - t634 * t86 + t754) * t680 + (t108 * t370 + t109 * t369 + t371 * t85 - t634 * t84 + t755) * t679 + (t411 * t717 - t412 * t718 + t756) * t574;
t359 = t373 * t412;
t358 = t373 * t411;
t353 = t524 * t412;
t352 = t524 * t411;
t342 = t549 * t404;
t335 = t412 * t466;
t334 = t411 * t466;
t296 = Icges(3,3) * t411 + t412 * t525;
t295 = -Icges(3,3) * t412 + t411 * t525;
t228 = -t360 * t634 - t565;
t227 = -t360 * t371 - t567;
t203 = -rSges(5,1) * t349 - rSges(5,2) * t350;
t199 = -rSges(5,1) * t347 - rSges(5,2) * t348;
t139 = -t303 * t634 + t360 * t370 + t457;
t138 = -t303 * t371 - t360 * t369 + t458;
t103 = -qJD(2) * t502 + qJDD(2) * t504 + qJDD(1);
t93 = t174 * t606 + t277 * t302 + t499;
t92 = -t176 * t606 - t277 * t301 + t462;
t73 = -t258 * t371 - t259 * t634 + t291 * t369 - t292 * t370 + t450;
t70 = t174 * t301 - t176 * t302 + t469;
t61 = t131 * t606 + t149 * t302 - t174 * t351 + t226 * t277 + t443;
t60 = -t133 * t606 - t149 * t301 + t176 * t351 - t225 * t277 + t433;
t24 = t131 * t301 - t133 * t302 + t174 * t225 - t176 * t226 + t425;
t23 = -qJD(5) * t209 + qJDD(5) * t349 + t226 * t617 + t302 * t627 - t351 * t625 + t606 * t629 + t443;
t22 = -qJD(5) * t207 + qJDD(5) * t347 - t225 * t617 - t301 * t627 + t351 * t624 - t606 * t761 + t433;
t21 = qJD(5) * t460 + qJDD(5) * t642 + t225 * t625 - t226 * t624 + t301 * t629 - t302 * t761 + t425;
t1 = [m(2) * qJDD(1) + (-m(2) - m(3) - m(4) - m(5) - m(6)) * g(3) + m(3) * t103 + m(4) * t73 + m(5) * t24 + m(6) * t21; -(t353 * qJD(2) * t407 - t352 * t411 * t608) * t403 / 0.2e1 + (t352 * qJD(2) * t408 - t353 * t412 * t403) * t608 / 0.2e1 + t419 + (t21 * (t497 + t619) + (t23 * t501 + t481 * t72) * t412 + (t22 * t501 + t481 * t71) * t411 - t72 * (t438 - t564) - t71 * (t426 - t566) - g(1) * (t378 + t556) - g(2) * (t376 + t557) - g(3) * (t406 + t463) + (t595 * t701 + t455 + t724) * t55 + t729) * m(6) + (t24 * (t563 + t619) + (t498 * t93 + t555 * t61) * t412 + (t498 * t92 + t555 * t60) * t411 - t93 * (t456 - t564) - t92 * (t434 - t566) - g(1) * (t556 + t610) - g(2) * (t557 + t611) - g(3) * (t406 + t459) - t432 + (t455 + t500 + t723) * t70) * m(5) + (-t228 * (-t634 * t703 - t564) - t227 * (-t371 * t703 - t566) + t73 * (t618 + t619) + (t139 * t461 + t228 * t554) * t412 + (t138 * t461 + t227 * t554) * t411 - g(3) * (t703 + t406) - t694 * t461 + t719) * m(4) + (g(1) * t359 + g(2) * t358 - g(3) * t374 + t103 * t504 + (qJDD(2) * t373 + t374 * t418) * t764 + (-t502 - (-t358 * t411 - t359 * t412) * qJD(2)) * (qJD(2) * t504 + qJD(1))) * m(3) + 0.2e1 * ((t411 * (t335 * t411 + t412 * t436) - t412 * (t334 * t411 + t412 * t437)) * qJD(2) + (-(t295 * t411 + t412 * t506) * t412 + (t296 * t411 + t412 * t505) * t411) * qJDD(2)) * t680 + 0.2e1 * ((t411 * (-t335 * t412 + t411 * t436) - t412 * (-t334 * t412 + t411 * t437)) * qJD(2) + (-(-t295 * t412 + t411 * t506) * t412 + (-t296 * t412 + t411 * t505) * t411) * qJDD(2)) * t679; t419 + (t21 * t497 + (t23 * t586 + t587 * t72) * t412 + (t22 * t586 + t587 * t71) * t411 - t426 * t71 - t438 * t72 - g(1) * (t378 + t384) - g(2) * (t376 + t382) - g(3) * t463 + (t620 + t724) * t55 + t729) * m(6) + (-t92 * t434 - t93 * t456 + t24 * t563 + (t61 * t616 + t626 * t93) * t412 + (t60 * t616 + t626 * t92) * t411 - g(1) * (t384 + t610) - g(2) * (t382 + t611) - g(3) * t459 - t432 + (t620 + t723) * t70) * m(5) + (t73 * t618 + (-t138 * t411 - t139 * t412) * t360 + (-t227 * t411 - t228 * t412) * t303 + g(1) * t324 + g(2) * t323 + t719 + (t227 * t371 + t228 * t634 - g(3)) * t703) * m(4); (t404 * t696 - t405 * t709) * t688 + (t404 * t695 - t405 * t715) * t687 + (t349 * t700 + t350 * t699 - t412 * t698) * t686 + ((t409 * t696 + t774) * t405 + (t709 * t409 + t411 * t750 + t412 * t749) * t404) * t685 + (t347 * t700 + t348 * t699 - t411 * t698) * t684 + ((t409 * t695 + t775) * t405 + (t715 * t409 + t411 * t752 + t412 * t751) * t404) * t683 + (t404 * t697 - t405 * t708) * t682 - (t744 * t225 + t745 * t226 + t717 * t301 + t718 * t302 + t708 * t351 + t716 * t606) * t405 / 0.2e1 + t748 * t404 * t409 / 0.2e1 + t755 * t644 / 0.2e1 + t754 * t643 / 0.2e1 + ((t409 * t697 + t716) * t405 + (t409 * t708 + t411 * t718 + t412 * t717) * t404) * t574 + (t758 * t405 + (t413 * t700 + t415 * t699) * t404) * t573 + (g(1) * t622 - g(2) * t623 - g(3) * t612 - (t348 * t71 + t350 * t72 + t55 * t641) * qJD(5) - (t55 * t622 + t612 * t72) * t302 - (t55 * t623 - t612 * t71) * t301 - (t622 * t71 + t623 * t72) * t606 + (t23 * t625 + t72 * t629 - t22 * t624 - t71 * t761 + ((t55 * t625 - t617 * t71) * t412 + (t617 * t72 - t571) * t411) * t409) * t405 + ((t624 * t71 - t570) * t409 + (t21 * t625 - t22 * t617 + t55 * t629 - t627 * t71) * t412 + (-t21 * t624 + t23 * t617 - t55 * t761 + t627 * t72) * t411) * t404) * m(6) + ((t93 * t131 - t92 * t133 + t61 * t174 - t60 * t176 + (t70 * t511 + (t411 * t93 - t412 * t92) * t277) * t409) * t405 + (t93 * (t149 * t411 - t174 * t409) + t92 * (-t149 * t412 + t176 * t409) + t24 * t511 + t70 * (t131 * t412 - t133 * t411) + (t411 * t61 - t412 * t60) * t277) * t404 - g(1) * t203 - g(2) * t199 - g(3) * t342 - t93 * (t199 * t606 + t302 * t342) - t92 * (-t203 * t606 - t301 * t342) - t70 * (t199 * t301 - t203 * t302)) * m(5) + t756 * t640 / 0.2e1; (t55 * t588 - t207 * t71 - t209 * t72 + (t21 * t413 + t55 * t601) * t404 + (t71 * t301 - t72 * t302 - g(3)) * t642 + (t55 * t302 + t71 * t606 - g(1) + t23) * t349 + (-t55 * t301 - t72 * t606 - g(2) + t22) * t347) * m(6);];
tau = t1;
