% Calculate vector of centrifugal and Coriolis load on the joints for
% S5PRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d2,d3,d4,theta1]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [5x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 16:46
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S5PRRRP4_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5PRRRP4_coriolisvecJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5PRRRP4_coriolisvecJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5PRRRP4_coriolisvecJ_fixb_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5PRRRP4_coriolisvecJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5PRRRP4_coriolisvecJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5PRRRP4_coriolisvecJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 16:45:37
% EndTime: 2019-12-05 16:46:12
% DurationCPUTime: 28.73s
% Computational Cost: add. (22679->692), mult. (31283->987), div. (0->0), fcn. (30270->8), ass. (0->378)
t703 = Icges(6,4) + Icges(5,5);
t702 = Icges(5,6) - Icges(6,6);
t355 = qJ(2) + qJ(3);
t351 = cos(t355);
t357 = cos(pkin(8));
t358 = sin(qJ(4));
t567 = t357 * t358;
t356 = sin(pkin(8));
t360 = cos(qJ(4));
t568 = t356 * t360;
t321 = t351 * t568 - t567;
t287 = Icges(6,5) * t321;
t566 = t357 * t360;
t569 = t356 * t358;
t320 = t351 * t569 + t566;
t350 = sin(t355);
t577 = t350 * t356;
t147 = Icges(6,6) * t577 + Icges(6,3) * t320 + t287;
t595 = Icges(5,4) * t321;
t153 = -Icges(5,2) * t320 + Icges(5,6) * t577 + t595;
t694 = t147 - t153;
t323 = t351 * t566 + t569;
t288 = Icges(6,5) * t323;
t322 = t351 * t567 - t568;
t576 = t350 * t357;
t148 = Icges(6,6) * t576 + Icges(6,3) * t322 + t288;
t594 = Icges(5,4) * t323;
t154 = -Icges(5,2) * t322 + Icges(5,6) * t576 + t594;
t693 = t148 - t154;
t149 = Icges(5,5) * t321 - Icges(5,6) * t320 + Icges(5,3) * t577;
t151 = Icges(6,4) * t321 + Icges(6,2) * t577 + Icges(6,6) * t320;
t692 = t151 + t149;
t150 = Icges(5,5) * t323 - Icges(5,6) * t322 + Icges(5,3) * t576;
t152 = Icges(6,4) * t323 + Icges(6,2) * t576 + Icges(6,6) * t322;
t691 = t152 + t150;
t589 = Icges(6,5) * t320;
t155 = Icges(6,1) * t321 + Icges(6,4) * t577 + t589;
t289 = Icges(5,4) * t320;
t157 = Icges(5,1) * t321 + Icges(5,5) * t577 - t289;
t713 = t155 + t157;
t588 = Icges(6,5) * t322;
t156 = Icges(6,1) * t323 + Icges(6,4) * t576 + t588;
t290 = Icges(5,4) * t322;
t158 = Icges(5,1) * t323 + Icges(5,5) * t576 - t290;
t712 = t156 + t158;
t679 = Icges(5,2) + Icges(6,3);
t731 = Icges(6,2) + Icges(5,3);
t730 = -t703 * t358 - t702 * t360;
t699 = t693 * t320 + t712 * t321 + t691 * t577;
t698 = t694 * t322 + t713 * t323 + t692 * t576;
t700 = t694 * t320 + t713 * t321 + t692 * t577;
t662 = t693 * t322 + t712 * t323 + t691 * t576;
t729 = Icges(5,1) + Icges(6,1);
t728 = Icges(5,4) - Icges(6,5);
t539 = qJD(4) * t360;
t521 = t351 * t539;
t541 = qJD(4) * t357;
t354 = qJD(2) + qJD(3);
t572 = t354 * t356;
t197 = -t356 * t521 + (t350 * t572 + t541) * t358;
t570 = t354 * t360;
t529 = t350 * t570;
t198 = -qJD(4) * t320 - t356 * t529;
t528 = t351 * t572;
t727 = t702 * t197 + t703 * t198 + t731 * t528;
t540 = qJD(4) * t358;
t578 = t350 * t354;
t199 = -t356 * t540 - t357 * t521 + t567 * t578;
t200 = -qJD(4) * t322 - t357 * t529;
t571 = t354 * t357;
t527 = t351 * t571;
t726 = t702 * t199 + t703 * t200 + t731 * t527;
t459 = Icges(5,5) * t360 - Icges(5,6) * t358;
t411 = t459 * t351;
t463 = Icges(6,4) * t360 + Icges(6,6) * t358;
t412 = t463 * t351;
t725 = (t411 + t412) * t354 + (t730 * qJD(4) + t731 * t354) * t350;
t251 = -Icges(5,3) * t351 + t350 * t459;
t253 = -Icges(6,2) * t351 + t350 * t463;
t710 = t251 + t253;
t587 = Icges(6,5) * t358;
t593 = Icges(5,4) * t358;
t724 = -t679 * t360 + t587 - t593;
t359 = sin(qJ(2));
t361 = cos(qJ(2));
t363 = qJD(2) ^ 2;
t352 = t356 ^ 2;
t353 = t357 ^ 2;
t547 = t352 + t353;
t723 = m(3) * t363 * (rSges(3,1) * t359 + rSges(3,2) * t361) * t547;
t722 = t699 * t357;
t721 = t698 * t356;
t720 = -Icges(4,1) + Icges(4,2);
t719 = -t679 * t197 - t728 * t198 - t702 * t528;
t718 = -t679 * t199 - t728 * t200 - t702 * t527;
t717 = t728 * t197 + t729 * t198 + t703 * t528;
t716 = t728 * t199 + t729 * t200 + t703 * t527;
t586 = Icges(6,5) * t360;
t457 = Icges(6,3) * t358 + t586;
t410 = t457 * t351;
t592 = Icges(5,4) * t360;
t465 = -Icges(5,2) * t358 + t592;
t413 = t465 * t351;
t715 = (-t410 + t413) * t354 + (t724 * qJD(4) + t702 * t354) * t350;
t470 = Icges(6,1) * t360 + t587;
t414 = t470 * t351;
t472 = Icges(5,1) * t360 - t593;
t415 = t472 * t351;
t471 = -Icges(5,1) * t358 - t592;
t714 = (-t414 - t415) * t354 + (-t703 * t354 + (Icges(6,1) * t358 - t471 - t586) * qJD(4)) * t350;
t574 = t350 * t360;
t343 = Icges(6,5) * t574;
t575 = t350 * t358;
t583 = Icges(6,6) * t351;
t249 = Icges(6,3) * t575 + t343 - t583;
t255 = -Icges(5,6) * t351 + t350 * t465;
t711 = t249 - t255;
t257 = -Icges(6,4) * t351 + t350 * t470;
t259 = -Icges(5,5) * t351 + t350 * t472;
t676 = t257 + t259;
t573 = t351 * t354;
t709 = -t725 * t350 - t710 * t573;
t708 = t726 * t350 + t691 * t573;
t707 = t727 * t350 + t692 * t573;
t706 = t662 * t357 + t721;
t705 = t700 * t356 + t722;
t669 = rSges(6,1) + pkin(4);
t661 = rSges(6,3) + qJ(5);
t349 = qJD(2) * t356;
t337 = qJD(3) * t356 + t349;
t281 = t350 * t541 + t337;
t616 = t281 / 0.2e1;
t665 = -t693 * t199 + t712 * t200 + t718 * t322 + t716 * t323 + t708 * t357;
t704 = t665 * t616;
t542 = qJD(4) * t356;
t282 = t350 * t542 - t571;
t614 = t282 / 0.2e1;
t668 = -t694 * t197 + t713 * t198 + t719 * t320 + t717 * t321 + t707 * t356;
t667 = -t693 * t197 + t712 * t198 + t718 * t320 + t716 * t321 + t708 * t356;
t666 = -t694 * t199 + t713 * t200 + t719 * t322 + t717 * t323 + t707 * t357;
t455 = t147 * t358 + t155 * t360;
t85 = -t151 * t351 + t350 * t455;
t451 = -t153 * t358 + t157 * t360;
t87 = -t149 * t351 + t350 * t451;
t697 = t85 + t87;
t454 = t148 * t358 + t156 * t360;
t86 = -t152 * t351 + t350 * t454;
t450 = -t154 * t358 + t158 * t360;
t88 = -t150 * t351 + t350 * t450;
t696 = t86 + t88;
t636 = t711 * t320 + t676 * t321 + t710 * t577;
t635 = t711 * t322 + t676 * t323 + t710 * t576;
t487 = rSges(5,1) * t360 - rSges(5,2) * t358;
t262 = -rSges(5,3) * t351 + t350 * t487;
t695 = t262 * t282;
t483 = pkin(4) * t360 + qJ(5) * t358;
t485 = rSges(6,1) * t360 + rSges(6,3) * t358;
t553 = -rSges(6,2) * t351 + (t483 + t485) * t350;
t688 = (t711 * t199 - t676 * t200 + t715 * t322 + t714 * t323 + t706 * t354 + t709 * t357) * t351;
t687 = (t711 * t197 - t676 * t198 + t715 * t320 + t714 * t321 + t705 * t354 + t709 * t356) * t351;
t686 = 0.2e1 * Icges(4,4) * t350 + t720 * t351;
t685 = -0.2e1 * Icges(4,4) * t351 + t720 * t350;
t460 = -Icges(4,5) * t350 - Icges(4,6) * t351;
t291 = t460 * t356;
t292 = t460 * t357;
t684 = t291 * t571 / 0.2e1 - t292 * t337 / 0.2e1;
t683 = t666 * t614 + t704 + (t635 * t578 + t688) * qJD(4) / 0.2e1;
t681 = t553 * t357;
t538 = qJD(5) * t320;
t565 = rSges(6,2) * t528 - t661 * t197 + t669 * t198 + t538;
t537 = qJD(5) * t322;
t678 = rSges(6,2) * t527 - t661 * t199 + t669 * t200 + t537;
t544 = qJD(4) * t351;
t675 = t730 * t350 * t544 + (t703 * t320 + t702 * t321) * t282 + (t703 * t322 + t702 * t323) * t281;
t477 = t87 * t356 + t88 * t357;
t478 = t85 * t356 + t86 * t357;
t674 = t477 + t478;
t673 = (t699 * t281 + t700 * t282 - t636 * t544) * t356 + (t662 * t281 + t698 * t282 - t635 * t544) * t357;
t237 = t354 * t291;
t238 = t354 * t292;
t648 = -Icges(4,5) * t356 + t686 * t357;
t650 = -Icges(4,6) * t356 + t685 * t357;
t380 = (t350 * t648 + t351 * t650) * t354;
t649 = Icges(4,5) * t357 + t686 * t356;
t651 = Icges(4,6) * t357 + t685 * t356;
t381 = (t350 * t649 + t351 * t651) * t354;
t672 = -(t380 + t237) * t356 / 0.2e1 + (t238 / 0.2e1 - t381 / 0.2e1) * t357;
t671 = t668 * t282 + t667 * t281 + (t636 * t578 + t687) * qJD(4);
t638 = ((t451 + t455) * t354 - t727) * t351 + (t717 * t360 + t719 * t358 + t692 * t354 + (-t358 * t713 + t694 * t360) * qJD(4)) * t350;
t637 = ((t450 + t454) * t354 - t726) * t351 + (t716 * t360 + t718 * t358 + t691 * t354 + (-t358 * t712 + t693 * t360) * qJD(4)) * t350;
t447 = -t255 * t358 + t259 * t360;
t581 = t251 * t351;
t101 = t350 * t447 - t581;
t534 = t101 * qJD(4);
t448 = t249 * t358 + t257 * t360;
t580 = t253 * t351;
t100 = t350 * t448 - t580;
t535 = t100 * qJD(4);
t664 = (-t534 - t535) * t351 + t697 * t282 + t696 * t281;
t561 = rSges(6,2) * t577 + t661 * t320 + t669 * t321;
t560 = rSges(6,2) * t576 + t661 * t322 + t669 * t323;
t385 = -t350 * t457 + t583;
t203 = t385 * t356;
t209 = t255 * t356;
t659 = t203 + t209;
t204 = t385 * t357;
t210 = t255 * t357;
t658 = t204 + t210;
t211 = t257 * t356;
t213 = t259 * t356;
t657 = -t211 - t213;
t212 = t257 * t357;
t214 = t259 * t357;
t656 = -t212 - t214;
t655 = t553 * t356;
t250 = Icges(6,6) * t350 + t410;
t256 = Icges(5,6) * t350 + t413;
t654 = -t250 + t256;
t258 = Icges(6,4) * t350 + t414;
t260 = Icges(5,5) * t350 + t415;
t653 = -t258 - t260;
t418 = t485 * t351;
t652 = rSges(6,2) * t350 + t483 * t351 + t418;
t422 = Icges(5,3) * t350 + t411 - t447;
t423 = -Icges(6,2) * t350 - t412 + t448;
t619 = (t253 * t357 + t454) * t281 + (t253 * t356 + t455) * t282;
t620 = -(-t251 * t357 - t450) * t281 - (-t251 * t356 - t451) * t282;
t647 = (-t619 - t620 + (-t422 + t423) * t544) * t350;
t646 = t691 * t281 + t692 * t282;
t645 = -t580 - t581;
t536 = qJD(5) * t358;
t342 = t351 * t536;
t332 = pkin(3) * t350 - pkin(7) * t351;
t299 = t332 * t357;
t434 = t356 * t332;
t505 = -t299 * t571 - t337 * t434;
t522 = t351 * t541;
t644 = t281 * t655 - t282 * t681 + t565 * t356 + t678 * t357 - t522 * t561 - t342 - t505;
t124 = rSges(5,1) * t198 + rSges(5,2) * t197 + rSges(5,3) * t528;
t126 = rSges(5,1) * t200 + rSges(5,2) * t199 + rSges(5,3) * t527;
t161 = rSges(5,1) * t321 - rSges(5,2) * t320 + rSges(5,3) * t577;
t163 = rSges(5,1) * t323 - rSges(5,2) * t322 + rSges(5,3) * t576;
t218 = t262 * t356;
t523 = t351 * t542;
t643 = t356 * t124 - t161 * t522 + t163 * t523 + t281 * t218 - t505 + (t126 - t695) * t357;
t598 = Icges(3,4) * t361;
t599 = Icges(3,4) * t359;
t642 = (-t359 * (-Icges(3,2) * t361 - t599) + t361 * (-Icges(3,1) * t359 - t598)) * qJD(2);
t330 = rSges(4,1) * t350 + rSges(4,2) * t351;
t420 = t356 * t330;
t243 = t354 * t420;
t297 = t330 * t357;
t244 = t354 * t297;
t331 = rSges(4,1) * t351 - rSges(4,2) * t350;
t273 = -rSges(4,3) * t357 + t331 * t356;
t274 = rSges(4,3) * t356 + t331 * t357;
t609 = pkin(2) * t361;
t247 = -pkin(6) * t357 + t356 * t609;
t248 = pkin(6) * t356 + t357 * t609;
t546 = qJD(2) * t357;
t516 = t247 * t349 + t248 * t546 + qJD(1);
t639 = (-t356 * t243 - t357 * t244 + t297 * t571 + t337 * t420) * (t273 * t337 + t274 * t571 + t516);
t630 = t100 + t101;
t627 = (t724 * t350 + t676) * t544 + (t679 * t321 + t289 - t589 - t713) * t282 + (t679 * t323 + t290 - t588 - t712) * t281;
t626 = (Icges(6,1) * t575 - t471 * t350 - t343 - t711) * t544 + (-t320 * t729 + t287 - t595 + t694) * t282 + (-t322 * t729 + t288 - t594 + t693) * t281;
t625 = t675 * t350;
t624 = (t725 * t351 + (t714 * t360 + t715 * t358 + (t676 * t358 - t360 * t711) * qJD(4)) * t350 + ((-t447 - t448) * t351 - t710 * t350 + t674) * t354) * t351;
t622 = t350 * t539 + t358 * t573;
t617 = -t281 / 0.2e1;
t615 = -t282 / 0.2e1;
t610 = pkin(2) * t359;
t604 = pkin(2) * qJD(2);
t333 = pkin(3) * t351 + pkin(7) * t350;
t579 = t333 * t337;
t341 = t350 * t536;
t484 = -rSges(6,1) * t358 + rSges(6,3) * t360;
t563 = t354 * t418 + (rSges(6,2) * t354 + qJD(4) * t484) * t350 + t341 + t622 * qJ(5) + (-t350 * t540 + t351 * t570) * pkin(4);
t419 = t487 * t351;
t486 = -rSges(5,1) * t358 - rSges(5,2) * t360;
t136 = t354 * t419 + (rSges(5,3) * t354 + qJD(4) * t486) * t350;
t286 = t333 * t354;
t562 = -t136 - t286;
t559 = -t320 * t669 + t321 * t661;
t558 = t322 * t669 - t323 * t661;
t245 = t354 * t434;
t246 = t354 * t299;
t556 = -t356 * t245 - t357 * t246;
t555 = t356 * t247 + t357 * t248;
t554 = t356 * t273 + t357 * t274;
t552 = -t262 - t332;
t298 = t333 * t356;
t300 = t333 * t357;
t551 = t356 * t298 + t357 * t300;
t548 = (-pkin(4) * t358 + qJ(5) * t360 + t484) * t350;
t545 = qJD(4) * t350;
t543 = qJD(4) * t354;
t533 = t363 * t609;
t532 = t359 * t604;
t531 = t361 * t604;
t525 = -t286 - t563;
t524 = -t332 - t553;
t514 = -t544 / 0.2e1;
t513 = t544 / 0.2e1;
t512 = t543 / 0.2e1;
t511 = -t330 - t610;
t510 = -t332 - t610;
t509 = t350 * t561;
t508 = t560 * t356;
t504 = t356 * t533;
t503 = t357 * t533;
t502 = t356 * t532;
t501 = t356 * t531;
t500 = t357 * t532;
t499 = t357 * t531;
t498 = t356 * t161 + t357 * t163 + t551;
t495 = t547 * t610;
t494 = t350 * t512;
t493 = t351 * t512;
t490 = -t262 + t510;
t283 = t331 * t354;
t489 = -t283 - t531;
t488 = -t286 - t531;
t476 = Icges(3,1) * t361 - t599;
t469 = -Icges(3,2) * t359 + t598;
t461 = -Icges(3,5) * t359 - Icges(3,6) * t361;
t449 = t161 * t357 - t163 * t356;
t443 = t363 * t495;
t442 = t356 * t493;
t441 = t357 * t493;
t440 = -t286 * t571 - t503;
t439 = t510 - t553;
t438 = qJD(2) * t495;
t437 = -t332 * t571 - t500;
t436 = -t136 + t488;
t435 = t356 * t561 + t357 * t560 + t551;
t417 = t488 - t563;
t409 = t337 * t298 + t300 * t571 + t516;
t406 = qJD(2) * t461;
t405 = -t286 * t337 - t504;
t404 = -t332 * t337 - t502;
t264 = rSges(5,3) * t350 + t419;
t272 = t571 * t333;
t403 = -t161 * t545 - t218 * t544 + t262 * t523 + t282 * t264 - t272;
t402 = -t438 + t556;
t390 = -t337 * t245 - t246 * t571 - t443;
t379 = t282 * t652 - t341 * t357 + t523 * t553 - t544 * t655 - t272;
t378 = (-(-Icges(3,6) * t357 + t356 * t469) * t361 - (-Icges(3,5) * t357 + t356 * t476) * t359) * qJD(2) + t642 * t356;
t377 = (-(Icges(3,6) * t356 + t357 * t469) * t361 - (Icges(3,5) * t356 + t357 * t476) * t359) * qJD(2) + t642 * t357;
t375 = t163 * t545 - t264 * t281 - t579;
t369 = -t281 * t652 - t341 * t356 + t545 * t560 - t579;
t368 = (t337 * t650 - t571 * t651) * t351 + (t337 * t648 - t571 * t649) * t350;
t53 = t281 * t561 - t282 * t560 + t341 + t409;
t72 = t282 * t553 + t544 * t561 + t437 + t537;
t367 = (-t53 * t508 * t351 - t72 * t509) * qJD(4);
t364 = (((t322 * t654 + t323 * t653 + t721) * t351 + t635 * t350) * qJD(4) + (t322 * t659 + t323 * t657) * t282 + (t322 * t658 + t323 * t656) * t281) * t617 + (((t320 * t654 + t321 * t653 + t722) * t351 + t636 * t350) * qJD(4) + (t320 * t659 + t321 * t657) * t282 + (t320 * t658 + t321 * t656) * t281) * t615 - t664 * t545 / 0.2e1 + (((t204 * t358 - t212 * t360 + t152) * t281 + (t203 * t358 - t211 * t360 + t151) * t282 + t535) * t350 + ((-t423 * t351 + (-t250 * t358 - t258 * t360 - t253) * t350 + t478) * qJD(4) + t619) * t351 + ((t210 * t358 - t214 * t360 + t150) * t281 + (t209 * t358 - t213 * t360 + t149) * t282 + t534) * t350 + ((t422 * t351 + (t256 * t358 - t260 * t360 - t251) * t350 + t477) * qJD(4) + t620) * t351) * t513 + (t704 + (((t645 + t700) * qJD(4) + t646) * t351 + t647) * t615 + t667 * t614 + t696 * t494 + t699 * t442 + t662 * t441 + t683 + (t368 / 0.2e1 + t672) * t571) * t356 + ((((t645 + t662) * qJD(4) + t646) * t351 + t647) * t617 - t666 * t616 - t668 * t614 - t697 * t494 - t700 * t442 - t698 * t441 - t671 / 0.2e1 + (-t237 * t357 + t356 * t381 + t684) * t571) * t357 + ((t238 * t356 + t357 * t380 + t684) * t356 + (-t368 / 0.2e1 + t672) * t357) * t337 + (t356 * t637 - t357 * t638 + t673) * t514;
t325 = t461 * t357;
t324 = t461 * t356;
t315 = t486 * t350;
t308 = t357 * t406;
t307 = t356 * t406;
t216 = -t330 * t571 - t500;
t215 = -t330 * t337 - t502;
t193 = -rSges(5,1) * t322 - rSges(5,2) * t323;
t189 = -rSges(5,1) * t320 - rSges(5,2) * t321;
t172 = -t283 * t571 - t503;
t171 = -t283 * t337 - t504;
t106 = -t243 * t337 - t244 * t571 - t443;
t90 = t161 * t544 + t437 + t695;
t89 = -t163 * t544 - t262 * t281 + t404;
t71 = -t281 * t553 - t544 * t560 + t404 + t538;
t70 = t161 * t281 - t163 * t282 + t409;
t69 = t136 * t282 + (-t161 * t578 + (t262 * t572 + t124) * t351) * qJD(4) + t440;
t68 = -t136 * t281 + (t163 * t578 + (-t262 * t571 - t126) * t351) * qJD(4) + t405;
t48 = t351 * t449 * t543 + t124 * t281 - t126 * t282 + t390;
t23 = -qJD(5) * t199 + t563 * t282 + (-t354 * t509 + (t553 * t572 + t565) * t351) * qJD(4) + t440;
t22 = -qJD(5) * t197 - t563 * t281 + (t560 * t578 + (-t354 * t681 - t678) * t351) * qJD(4) + t405;
t21 = t354 * t342 - t678 * t282 + t565 * t281 + (qJD(5) * t574 + (t357 * t561 - t508) * t573) * qJD(4) + t390;
t1 = [m(4) * t106 + m(5) * t48 + m(6) * t21 - t723; (t324 * qJD(2) * t353 - t325 * t349 * t357) * t546 / 0.2e1 - (t325 * qJD(2) * t352 - t324 * t356 * t546) * t349 / 0.2e1 + t364 - (t356 * (-t308 * t357 + t356 * t377) - t357 * (-t307 * t357 + t356 * t378)) * t546 + (t356 * (t308 * t356 + t357 * t377) - t357 * (t307 * t356 + t357 * t378)) * t349 + (-t72 * (t379 - t499) - t71 * (t369 - t501) - t367 + t21 * (t435 + t555) + (t23 * t439 + t417 * t72) * t357 + (t22 * t439 + t417 * t71) * t356 + (t532 * t547 + t402 + t644) * t53) * m(6) + (-t90 * (t403 - t499) - t89 * (t375 - t501) + t48 * (t498 + t555) + (t436 * t90 + t490 * t69) * t357 + (t436 * t89 + t490 * t68) * t356 + (t438 + t402 + t643) * t70) * m(5) + (-t216 * (-t331 * t571 - t499) - t215 * (-t331 * t337 - t501) + t106 * (t554 + t555) + (t172 * t511 + t216 * t489) * t357 + (t171 * t511 + t215 * t489) * t356 + t639) * m(4) + (-t547 + 0.1e1) * (rSges(3,1) * t361 - rSges(3,2) * t359) * t723; t364 + (t21 * t435 + (t23 * t524 + t525 * t72) * t357 + (t22 * t524 + t525 * t71) * t356 - t369 * t71 - t379 * t72 - t367 + (t556 + t644) * t53) * m(6) + (t48 * t498 + (t552 * t69 + t562 * t90) * t357 + (t552 * t68 + t562 * t89) * t356 - t375 * t89 - t403 * t90 + (t556 + t643) * t70) * m(5) + (-(-t215 * t337 - t216 * t571) * t331 + t106 * t554 + (-t171 * t356 - t172 * t357) * t330 + (-t215 * t356 - t216 * t357) * t283 + t639) * m(4); (t322 * t627 + t323 * t626 - t357 * t625) * t617 + ((t635 * t354 + t356 * t666 + t357 * t665) * t350 + t688) * t616 + (t320 * t627 + t321 * t626 - t356 * t625) * t615 + ((t636 * t354 + t356 * t668 + t357 * t667) * t350 + t687) * t614 - (t638 * t282 + t637 * t281 + (t578 * t630 + t624) * qJD(4)) * t351 / 0.2e1 + t664 * t578 / 0.2e1 + t671 * t577 / 0.2e1 + t576 * t683 + ((t354 * t630 + t356 * t638 + t357 * t637) * t350 + t624) * t514 + (t675 * t351 + (t358 * t627 + t360 * t626) * t350) * t513 + (t674 * t350 - t630 * t351) * t494 + (t705 * t350 - t636 * t351) * t442 + (t706 * t350 - t635 * t351) * t441 + (-(t321 * t71 + t323 * t72 + t53 * t574) * qJD(5) - (t53 * t558 + t548 * t72) * t282 - (t53 * t559 - t548 * t71) * t281 - (t558 * t71 + t559 * t72) * t544 + (t23 * t561 + t72 * t565 - t22 * t560 - t71 * t678 + ((t53 * t561 - t553 * t71) * t357 + (-t53 * t560 + t553 * t72) * t356) * t354) * t351 + ((t560 * t71 - t561 * t72) * t354 + (t21 * t561 - t22 * t553 + t53 * t565 - t563 * t71) * t357 + (-t21 * t560 + t23 * t553 - t53 * t678 + t563 * t72) * t356) * t350) * m(6) + ((t90 * t124 - t89 * t126 + t69 * t161 - t68 * t163 + (t70 * t449 + (t356 * t90 - t357 * t89) * t262) * t354) * t351 + (t90 * (t136 * t356 - t161 * t354) + t89 * (-t136 * t357 + t163 * t354) + t48 * t449 + t70 * (t124 * t357 - t126 * t356) + (t356 * t69 - t357 * t68) * t262) * t350 - t90 * (t189 * t544 + t282 * t315) - t89 * (-t193 * t544 - t281 * t315) - t70 * (t189 * t281 - t193 * t282)) * m(5) + t673 * t573 / 0.2e1; (t21 * t575 + t22 * t320 + t23 * t322 + (-t282 * t575 - t320 * t544 - t199) * t72 + (t281 * t575 + t322 * t544 - t197) * t71 + (-t281 * t320 + t282 * t322 + t622) * t53) * m(6);];
tauc = t1(:);
