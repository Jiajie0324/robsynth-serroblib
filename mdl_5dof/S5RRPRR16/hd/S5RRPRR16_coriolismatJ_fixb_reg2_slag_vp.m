% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR16
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:48
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR16_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR16_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR16_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR16_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:47:32
% EndTime: 2019-12-31 20:48:01
% DurationCPUTime: 19.12s
% Computational Cost: add. (12514->847), mult. (29887->1174), div. (0->0), fcn. (30258->8), ass. (0->612)
t507 = sin(qJ(5));
t500 = t507 ^ 2;
t510 = cos(qJ(5));
t503 = t510 ^ 2;
t511 = cos(qJ(4));
t425 = (t500 / 0.2e1 - t503 / 0.2e1) * t511;
t504 = t511 ^ 2;
t494 = t504 * t510;
t505 = sin(pkin(5));
t509 = sin(qJ(2));
t795 = t505 * t509;
t687 = t507 * t795;
t508 = sin(qJ(4));
t512 = cos(qJ(2));
t793 = t505 * t512;
t462 = t508 * t793;
t506 = cos(pkin(5));
t792 = t506 * t511;
t415 = -t462 + t792;
t803 = t415 * t510;
t310 = t687 + t803;
t819 = t310 * t507;
t773 = t509 * t510;
t686 = t505 * t773;
t804 = t415 * t507;
t308 = -t686 + t804;
t822 = t308 * t510;
t554 = t822 / 0.2e1 + t819 / 0.2e1;
t539 = t554 * t511;
t893 = qJD(2) * t494 * t507 + qJD(1) * t539 + t425 * qJD(4);
t724 = qJD(4) * t510;
t485 = t507 * t724;
t892 = t425 * qJD(2) - t485;
t413 = t506 * t508 + t511 * t793;
t805 = t413 * t511;
t653 = t805 / 0.2e1;
t861 = t508 / 0.2e1;
t249 = t415 * t861 + t653;
t891 = t249 * qJD(4);
t700 = t511 * qJD(2);
t488 = t508 * t700;
t890 = -qJD(1) * t249 - t488;
t706 = t413 * qJD(1);
t889 = qJD(2) * t249 + t415 * t706;
t856 = pkin(1) * t509;
t888 = t506 * (qJ(3) + t856);
t673 = t510 * t700;
t607 = t507 * t673;
t477 = t503 - t500;
t628 = qJD(4) * t477;
t887 = 0.2e1 * t607 - t628;
t817 = t310 * t510;
t282 = -t817 / 0.2e1;
t787 = t507 * t308;
t186 = t282 + t787 / 0.2e1;
t884 = qJD(1) * t186 + t892;
t279 = -t787 / 0.2e1;
t185 = t279 + t817 / 0.2e1;
t883 = -qJD(1) * t185 + t892;
t882 = t539 * qJD(5);
t513 = -pkin(2) - pkin(8);
t847 = qJ(3) * t509;
t587 = -t512 * t513 + t847;
t735 = qJD(1) * t310;
t880 = qJD(2) * t539 + t308 * t735;
t879 = t413 ^ 2;
t492 = t506 * t512 * pkin(1);
t324 = (-pkin(1) - t587) * t505;
t760 = t511 * t324;
t855 = pkin(2) * t506;
t877 = pkin(3) + pkin(7);
t168 = t760 + t508 * (-pkin(8) * t506 - t492 - t855) + (t508 * t877 + pkin(9)) * t795;
t692 = t505 * t877;
t615 = t512 * t692;
t323 = t615 + t888;
t597 = pkin(4) * t413 - pkin(9) * t415;
t514 = t323 + t597;
t81 = t510 * t168 + t507 * t514;
t878 = -t81 / 0.2e1;
t876 = t308 / 0.2e1;
t875 = -t310 / 0.2e1;
t874 = t310 / 0.2e1;
t854 = pkin(4) * t508;
t596 = -pkin(9) * t511 + t854;
t563 = qJ(3) + t596;
t774 = t508 * t513;
t371 = t507 * t774 - t510 * t563;
t873 = t371 / 0.2e1;
t758 = t511 * t513;
t683 = t507 * t758;
t851 = t511 * pkin(4);
t852 = t508 * pkin(9);
t459 = t851 + t852;
t766 = t510 * t459;
t376 = -t683 + t766;
t872 = t376 / 0.2e1;
t463 = t510 * t793;
t380 = t508 * t687 - t463;
t871 = -t380 / 0.2e1;
t757 = t512 * t507;
t381 = (t508 * t773 + t757) * t505;
t870 = -t381 / 0.2e1;
t794 = t505 * t511;
t685 = t509 * t794;
t613 = t510 * t685;
t784 = t507 * t506;
t401 = -t613 + t784;
t869 = -t401 / 0.2e1;
t868 = -t413 / 0.2e1;
t867 = t413 / 0.2e1;
t866 = t415 / 0.2e1;
t865 = t463 / 0.2e1;
t864 = -t507 / 0.2e1;
t862 = -t508 / 0.2e1;
t860 = t510 / 0.2e1;
t859 = -t511 / 0.2e1;
t858 = t511 / 0.2e1;
t857 = -t513 / 0.2e1;
t853 = t413 * pkin(9);
t80 = t168 * t507 - t510 * t514;
t850 = t80 * t510;
t849 = t81 * t507;
t762 = t510 * t513;
t684 = t508 * t762;
t372 = t507 * t563 + t684;
t783 = t507 * t508;
t314 = t372 * t783;
t648 = -t783 / 0.2e1;
t202 = t314 / 0.2e1 + t372 * t648;
t682 = t510 * t758;
t785 = t507 * t459;
t377 = t682 + t785;
t813 = t372 * t511;
t815 = t371 * t511;
t89 = -t508 * t758 + (t377 * t861 + t813 / 0.2e1) * t510 + (t376 * t862 + t815 / 0.2e1) * t507;
t848 = qJD(4) * t89 - qJD(5) * t202;
t530 = t506 * t513 + t509 * t692 - t492;
t187 = t324 * t508 - t511 * t530;
t167 = -pkin(4) * t795 + t187;
t42 = -t167 * t308 + t413 * t80;
t846 = qJD(1) * t42;
t43 = t167 * t310 - t413 * t81;
t845 = qJD(1) * t43;
t188 = t508 * t530 + t760;
t688 = t508 * t795;
t564 = t187 * t688 + t188 * t685;
t52 = -t323 * t506 + t564;
t844 = qJD(1) * t52;
t92 = -t187 * t795 + t323 * t413;
t843 = qJD(1) * t92;
t93 = -t188 * t795 + t323 * t415;
t842 = qJD(1) * t93;
t832 = t188 * t511;
t176 = -t832 / 0.2e1;
t659 = t832 / 0.2e1;
t51 = t176 + t659;
t841 = qJD(2) * t51;
t273 = pkin(4) * t415 + t853;
t768 = t510 * t273;
t791 = t507 * t187;
t117 = t768 + t791;
t840 = t117 * t507;
t771 = t510 * t187;
t788 = t507 * t273;
t118 = -t771 + t788;
t839 = t118 * t510;
t16 = -t117 * t80 + t118 * t81 + t167 * t188;
t838 = t16 * qJD(1);
t837 = t167 * t507;
t836 = t167 * t508;
t835 = t167 * t510;
t238 = t492 + (-t459 - t877) * t795;
t769 = t510 * t238;
t491 = pkin(2) * t795;
t373 = t491 + (pkin(8) * t509 - qJ(3) * t512) * t505;
t341 = t511 * t373;
t697 = t506 * t856;
t375 = t615 + t697;
t344 = t508 * t375;
t220 = t341 + t344;
t204 = pkin(9) * t793 + t220;
t790 = t507 * t204;
t120 = t769 - t790;
t770 = t510 * t204;
t789 = t507 * t238;
t121 = t770 + t789;
t759 = t511 * t375;
t779 = t508 * t373;
t219 = t759 - t779;
t203 = -pkin(4) * t793 - t219;
t17 = -t120 * t80 + t121 * t81 + t167 * t203;
t834 = t17 * qJD(1);
t18 = -t120 * t310 - t121 * t308 - t380 * t81 + t381 * t80;
t833 = t18 * qJD(1);
t19 = -t117 * t310 - t118 * t308 + (t849 - t850) * t413;
t831 = t19 * qJD(1);
t830 = t203 * t507;
t829 = t203 * t510;
t828 = t219 * t511;
t827 = t220 * t508;
t23 = t188 * t308 - t415 * t80 + (t117 - t837) * t413;
t826 = t23 * qJD(1);
t24 = t188 * t310 - t415 * t81 + (-t118 - t835) * t413;
t825 = t24 * qJD(1);
t25 = t120 * t413 + t167 * t380 + t203 * t308 + t685 * t80;
t824 = t25 * qJD(1);
t26 = -t121 * t413 + t167 * t381 + t203 * t310 + t685 * t81;
t823 = t26 * qJD(1);
t821 = t308 * t511;
t614 = t507 * t685;
t764 = t510 * t506;
t400 = t614 + t764;
t31 = -t167 * t688 - t400 * t80 + t401 * t81;
t820 = t31 * qJD(1);
t818 = t310 * t508;
t816 = t323 * t511;
t814 = t372 * t413;
t812 = t380 * t510;
t811 = t381 * t507;
t374 = -t795 * t877 + t492;
t39 = -t187 * t219 + t188 * t220 + t323 * t374;
t810 = t39 * qJD(1);
t40 = -t219 * t415 - t220 * t413 + t564;
t809 = t40 * qJD(1);
t808 = t400 * t507;
t807 = t401 * t510;
t806 = t413 * t508;
t802 = t415 * t511;
t423 = pkin(7) * t795 - t492;
t801 = t423 * t506;
t696 = pkin(7) * t793;
t424 = t696 + t697;
t800 = t424 * t506;
t48 = t374 * t413 + (-t187 * t512 + (t219 - t816) * t509) * t505;
t799 = t48 * qJD(1);
t49 = -t374 * t415 - t323 * t688 + (t188 * t512 + t220 * t509) * t505;
t798 = t49 * qJD(1);
t498 = t505 ^ 2;
t502 = t509 ^ 2;
t797 = t498 * t502;
t796 = t498 * t512;
t786 = t507 * t413;
t782 = t507 * t511;
t781 = t507 * t513;
t780 = t508 * t308;
t778 = t508 * t380;
t777 = t508 * t381;
t776 = t508 * t510;
t775 = t508 * t511;
t772 = t51 * qJD(1);
t767 = t510 * t413;
t501 = t508 ^ 2;
t765 = t510 * t501;
t763 = t510 * t511;
t761 = t511 * t310;
t756 = t513 * t310;
t346 = t763 * t786;
t644 = t780 / 0.2e1;
t657 = t818 / 0.2e1;
t78 = t346 + (t644 + t870) * t510 + (t657 + t380 / 0.2e1) * t507;
t755 = t78 * qJD(1);
t283 = t761 / 0.2e1;
t267 = t507 * t283;
t286 = -t821 / 0.2e1;
t91 = t267 + t808 / 0.2e1 + (t286 + t869) * t510;
t754 = t91 * qJD(1);
t753 = t500 + t503;
t476 = t501 - t504;
t129 = -t308 * t401 - t310 * t400;
t752 = qJD(1) * t129;
t645 = -t780 / 0.2e1;
t654 = -t805 / 0.2e1;
t535 = t500 * t654 + t507 * t645;
t134 = t812 / 0.2e1 + t535;
t751 = qJD(1) * t134;
t643 = -t776 / 0.2e1;
t536 = t310 * t643 + t503 * t654;
t136 = -t811 / 0.2e1 + t536;
t750 = qJD(1) * t136;
t139 = t308 * t415 - t507 * t879;
t749 = qJD(1) * t139;
t140 = t310 * t415 - t510 * t879;
t748 = qJD(1) * t140;
t652 = -t795 / 0.2e1;
t606 = t507 * t652;
t636 = t763 / 0.2e1;
t146 = t865 + t413 * t636 + (t606 + t874) * t508;
t747 = qJD(1) * t146;
t640 = t773 / 0.2e1;
t603 = t508 * t640;
t532 = (t603 + t757 / 0.2e1) * t505;
t646 = t782 / 0.2e1;
t544 = t413 * t646 + t644;
t147 = t532 + t544;
t746 = qJD(1) * t147;
t163 = -t308 * t688 + t400 * t413;
t745 = qJD(1) * t163;
t164 = -t310 * t688 - t401 * t413;
t744 = qJD(1) * t164;
t591 = -pkin(2) * t512 - t847;
t393 = (-pkin(1) + t591) * t505;
t418 = -qJ(3) * t793 + t491;
t183 = t801 + (t393 * t512 + t418 * t509) * t505;
t743 = qJD(1) * t183;
t392 = -t696 - t888;
t221 = t392 * t506 + t393 * t795;
t742 = qJD(1) * t221;
t223 = -t413 * t685 + t415 * t688;
t741 = qJD(1) * t223;
t691 = t508 * t797;
t292 = t415 * t793 + t691;
t740 = qJD(1) * t292;
t690 = t511 * t797;
t293 = -t413 * t793 + t690;
t739 = qJD(1) * t293;
t304 = t413 * t506 + t691;
t738 = qJD(1) * t304;
t305 = t415 * t506 + t690;
t737 = qJD(1) * t305;
t736 = qJD(1) * t308;
t734 = qJD(1) * t505;
t733 = qJD(2) * t202;
t732 = qJD(2) * t423;
t731 = qJD(2) * t424;
t730 = qJD(2) * t505;
t729 = qJD(2) * t506;
t728 = qJD(3) * t202;
t727 = qJD(3) * t508;
t726 = qJD(4) * t507;
t725 = qJD(4) * t508;
t723 = qJD(4) * t511;
t722 = qJD(4) * t513;
t721 = qJD(5) * t413;
t720 = qJD(5) * t507;
t719 = qJD(5) * t510;
t107 = (t505 * t640 + t804 / 0.2e1 - t308 / 0.2e1) * t508;
t718 = t107 * qJD(1);
t546 = t423 - t855;
t122 = t392 * t423 + t393 * t418 + t424 * t546;
t717 = t122 * qJD(1);
t124 = -t308 * t381 - t310 * t380;
t716 = t124 * qJD(1);
t582 = t819 + t822;
t128 = t582 * t413;
t715 = t128 * qJD(1);
t130 = -t392 * t795 - t546 * t793 + (t423 * t512 - t424 * t509) * t505;
t714 = t130 * qJD(1);
t153 = t308 * t685 - t380 * t413;
t713 = t153 * qJD(1);
t154 = -t310 * t685 + t381 * t413;
t712 = t154 * qJD(1);
t179 = (t606 + t803 / 0.2e1 + t875) * t508;
t711 = t179 * qJD(1);
t184 = t800 + (-t393 * t509 + t418 * t512) * t505;
t710 = t184 * qJD(1);
t201 = t802 - t806;
t222 = t201 * t795;
t709 = t222 * qJD(1);
t329 = t498 * t856 + t800;
t708 = t329 * qJD(1);
t330 = pkin(1) * t796 - t801;
t707 = t330 * qJD(1);
t703 = t425 * qJD(5);
t431 = (t512 ^ 2 - t502) * t498;
t702 = t431 * qJD(1);
t495 = t506 * qJD(3);
t701 = t508 * qJD(2);
t699 = t511 * qJD(5);
t698 = t512 * qJD(3);
t695 = 0.1e1 / 0.2e1 + t501 / 0.2e1;
t694 = pkin(4) * t876;
t693 = pkin(4) * t875;
t689 = t509 * t796;
t681 = t81 * t861;
t679 = t308 * t706;
t678 = t310 * t706;
t676 = t509 * t734;
t675 = t509 * t730;
t674 = t507 * t700;
t672 = qJD(3) * t795;
t671 = qJD(4) * t795;
t670 = t507 * t723;
t669 = t510 * t723;
t668 = t508 * t720;
t667 = t507 * t699;
t666 = t508 * t719;
t665 = t510 * t699;
t664 = t512 * t730;
t663 = t512 * t734;
t662 = t507 * t719;
t489 = t508 * t723;
t661 = qJ(3) * t866;
t660 = t836 / 0.2e1;
t658 = t203 * t859;
t656 = -t812 / 0.2e1;
t655 = t811 / 0.2e1;
t651 = t795 / 0.2e1;
t650 = t793 / 0.2e1;
t649 = -t790 / 0.2e1;
t387 = -t786 / 0.2e1;
t388 = t786 / 0.2e1;
t647 = -t782 / 0.2e1;
t642 = t776 / 0.2e1;
t641 = t774 / 0.2e1;
t639 = -t770 / 0.2e1;
t638 = -t767 / 0.2e1;
t383 = t767 / 0.2e1;
t637 = -t763 / 0.2e1;
t635 = t380 * t859;
t634 = t381 * t859;
t633 = t308 * t857;
t632 = t756 / 0.2e1;
t631 = t167 / 0.2e1 - t187 / 0.2e1;
t630 = -t341 / 0.2e1 - t344 / 0.2e1;
t443 = t753 * t511;
t137 = t635 + t638 + (t614 - t400 / 0.2e1) * t508;
t487 = t510 * t701;
t627 = qJD(1) * t137 - t487;
t138 = t634 + t388 + (t613 + t401 / 0.2e1) * t508;
t484 = t507 * t701;
t626 = qJD(1) * t138 + t484;
t243 = 0.2e1 * t387;
t621 = -qJD(1) * t243 + t484;
t246 = 0.2e1 * t383;
t620 = -qJD(1) * t246 - t487;
t617 = pkin(4) * t651;
t490 = qJD(1) * t506 + qJD(2);
t616 = -qJD(5) - t706;
t612 = t504 * t662;
t611 = t506 * t675;
t610 = t506 * t664;
t609 = t506 * t676;
t456 = t508 * t676;
t457 = t511 * t676;
t608 = t506 * t663;
t605 = t511 * t652;
t604 = t511 * t651;
t363 = t508 * t388;
t356 = t508 * t638;
t602 = t513 * t653;
t601 = t513 * t652;
t600 = -t120 / 0.2e1 + pkin(9) * t381 / 0.2e1;
t599 = pkin(9) * t871 + t121 / 0.2e1;
t598 = t853 / 0.2e1 + t273 / 0.2e1;
t595 = 0.2e1 * t511 * t485;
t593 = t238 / 0.2e1 + t167 * t859;
t592 = t506 / 0.2e1 + t806 / 0.2e1;
t590 = -qJD(4) - t676;
t589 = t508 * t606;
t434 = t507 * t604;
t438 = t510 * t604;
t588 = t511 * t601;
t116 = t371 * t776 - t314 + (t376 * t510 + t377 * t507) * t511;
t553 = t310 * t872 + t377 * t876;
t557 = t371 * t867 + t80 * t861;
t3 = t81 * t648 + (-t814 / 0.2e1 + t118 * t858 + t600) * t507 + (t117 * t858 + t557 + t599) * t510 + t553;
t586 = -qJD(1) * t3 - qJD(2) * t116;
t216 = -t371 * t510 + t372 * t507;
t524 = t400 * t873 + t372 * t869 + t850 / 0.2e1;
t556 = t120 * t864 + t121 * t860;
t8 = t658 - t849 / 0.2e1 + (t588 + t556) * t508 + t524;
t585 = -qJD(1) * t8 + qJD(2) * t216;
t584 = t839 - t840;
t583 = t827 + t828;
t581 = -t376 * t507 + t377 * t510;
t517 = (qJ(3) + t856 / 0.2e1) * t506 + (pkin(7) / 0.2e1 + pkin(3) / 0.2e1) * t793;
t555 = -t828 / 0.2e1 - t827 / 0.2e1;
t84 = t517 + t555;
t580 = qJ(3) * qJD(2) + qJD(1) * t84;
t515 = t660 + (pkin(9) * t651 + t413 * t857 - t188 / 0.2e1) * t511;
t526 = t371 * t866 + t376 * t868 + t80 * t858;
t560 = pkin(4) * t871 - t829 / 0.2e1;
t12 = (-t117 / 0.2e1 + t633) * t508 + t515 * t507 + t526 + t560;
t195 = -t815 + (t376 + 0.2e1 * t683) * t508;
t579 = -t12 * qJD(1) + t195 * qJD(2);
t525 = t372 * t866 + t377 * t867 + t81 * t858;
t559 = pkin(4) * t870 + t830 / 0.2e1;
t13 = (t118 / 0.2e1 - t756 / 0.2e1) * t508 + t515 * t510 + t525 + t559;
t196 = t813 + (t377 - 0.2e1 * t682) * t508;
t578 = -t13 * qJD(1) - t196 * qJD(2);
t520 = t814 / 0.2e1 + t681 + t511 * t632;
t27 = t510 * t593 + t520 + t649;
t275 = -t372 * t508 - t504 * t762;
t577 = qJD(1) * t27 - qJD(2) * t275;
t274 = -t371 * t508 - t504 * t781;
t521 = t511 * t633 - t557;
t28 = -t507 * t593 + t521 + t639;
t576 = qJD(1) * t28 + qJD(2) * t274;
t53 = (-t778 / 0.2e1 + t874 + t400 * t858) * t510 + (t777 / 0.2e1 + t876 + t401 * t858) * t507;
t575 = qJD(1) * t53 + qJD(2) * t443;
t574 = t505 * t490;
t573 = (-qJD(5) - t701) * t511;
t284 = -t761 / 0.2e1;
t435 = t507 * t605;
t562 = t806 - t802 / 0.2e1;
t106 = t510 * t562 + t284 + t435;
t445 = -t494 + t765;
t572 = -qJD(1) * t106 - qJD(2) * t445;
t287 = t821 / 0.2e1;
t439 = t510 * t605;
t108 = -t507 * t562 + t287 + t439;
t444 = t476 * t507;
t571 = -qJD(1) * t108 + qJD(2) * t444;
t155 = t510 * t592 + t283 + t434;
t403 = t494 / 0.2e1 + t695 * t510;
t570 = qJD(1) * t155 + qJD(2) * t403;
t156 = -t507 * t592 + t286 + t438;
t402 = (-t504 / 0.2e1 - t695) * t507;
t569 = qJD(1) * t156 + qJD(2) * t402;
t224 = -t415 ^ 2 + t879;
t568 = qJD(1) * t224 - qJD(2) * t201;
t567 = qJD(1) * t201 - qJD(2) * t476;
t566 = t701 + t706;
t448 = t506 ^ 2 + t797;
t565 = qJD(1) * t448 + t729;
t561 = t852 / 0.2e1 + t851 / 0.2e1;
t406 = t792 / 0.2e1 - t462 / 0.2e1;
t558 = t406 * qJD(1) + t700 / 0.2e1;
t552 = t807 / 0.2e1 - t808 / 0.2e1;
t100 = t661 + (t323 / 0.2e1 - t375 / 0.2e1) * t511 + (t601 + t373 / 0.2e1) * t508;
t551 = -qJ(3) * t700 - qJD(1) * t100;
t518 = qJ(3) * t868 + t323 * t862 + t588;
t102 = t518 - t630;
t550 = qJ(3) * t701 - qJD(1) * t102;
t547 = -t671 - t729;
t545 = t699 / 0.2e1 - t890;
t543 = t459 / 0.2e1 + t561;
t542 = t552 * pkin(9);
t516 = t117 * t873 - t118 * t372 / 0.2e1 + t80 * t872 + t377 * t878;
t519 = t556 * pkin(9) - t203 * pkin(4) / 0.2e1;
t1 = (t659 - t836 / 0.2e1) * t513 + t516 + t519;
t126 = -t513 ^ 2 * t775 - t371 * t376 + t372 * t377;
t541 = -t1 * qJD(1) + t126 * qJD(2) + t89 * qJD(3);
t351 = (-0.1e1 + t753) * t775;
t5 = t542 + (t510 * t878 + t80 * t864 + t188 / 0.2e1) * t511 + (t617 - t839 / 0.2e1 + t840 / 0.2e1 - t167 / 0.2e1) * t508;
t540 = t5 * qJD(1) - t89 * qJD(2) - t351 * qJD(3);
t538 = (qJD(1) * t415 + t700) * t795;
t123 = (-t787 + t817) * t511;
t132 = t308 ^ 2 - t310 ^ 2;
t537 = qJD(1) * t132 - qJD(2) * t123 - qJD(4) * t582;
t306 = t543 * t507;
t44 = t507 * t598 + t510 * t631 + t694;
t534 = pkin(4) * t724 - qJD(1) * t44 - qJD(2) * t306;
t307 = t543 * t510;
t46 = t507 * t631 - t510 * t598 + t693;
t533 = pkin(4) * t726 - qJD(1) * t46 + qJD(2) * t307;
t531 = (qJD(4) * t415 - t511 * t675) * t413;
t529 = -qJD(4) * t185 + t880;
t528 = qJD(4) * t186 + t880;
t527 = qJD(5) * t406 + t889;
t442 = t477 * t504;
t523 = qJD(1) * t123 + qJD(2) * t442 + t595;
t522 = qJD(1) * t582 + t887;
t499 = qJ(3) * qJD(3);
t493 = t723 / 0.2e1;
t486 = t507 * t725;
t460 = qJD(2) * t650;
t455 = qJD(2) * t689;
t454 = qJD(1) * t689;
t450 = t490 * qJ(3);
t449 = -0.2e1 * t511 * t662;
t433 = t490 * t511;
t432 = t490 * t508;
t420 = t431 * qJD(2);
t417 = -t457 - t723;
t416 = -t456 - t725;
t405 = -t765 / 0.2e1 - t494 / 0.2e1 + t860;
t404 = t864 + (t501 + t504) * t507 / 0.2e1;
t398 = t512 * t574;
t397 = t509 * t574;
t394 = qJD(4) * t650 + t454;
t354 = t413 * t647;
t298 = qJD(2) * t605 + qJD(4) * t406;
t257 = -t683 + t766 / 0.2e1 - t561 * t510;
t256 = -t682 - t785 / 0.2e1 + t561 * t507;
t245 = t383 + t638;
t244 = t387 + t388;
t199 = t201 * qJD(4);
t182 = t401 * t862 + t387 + t634;
t181 = t400 * t861 + t383 + t635;
t180 = t415 * t643 + t589 + t657;
t178 = t186 * qJD(5);
t177 = t185 * qJD(5);
t158 = t363 + t287 + t438 - t784 / 0.2e1;
t157 = t356 + t284 + t434 + t764 / 0.2e1;
t149 = t413 * t637 - t818 / 0.2e1 + t589 + t865;
t148 = t354 + t645 + t532;
t135 = t655 + t536;
t133 = t656 + t535;
t125 = t582 * qJD(5);
t119 = t123 * qJD(5);
t111 = t415 * t636 + t283 + 0.2e1 * t356 + t435;
t110 = t415 * t648 + t505 * t603 + t354 + t544;
t109 = t415 * t647 + t286 + 0.2e1 * t363 + t439;
t103 = t518 + t630;
t101 = t508 * t601 + t661 + t816 / 0.2e1 - t779 / 0.2e1 + t759 / 0.2e1;
t90 = t308 * t637 + t267 + t552;
t83 = t517 - t555;
t77 = t380 * t864 + t381 * t860 + t508 * t554 + t346;
t54 = t279 + t401 * t647 + t282 + t400 * t637 + (t656 + t655) * t508;
t50 = t51 * qJD(4);
t47 = pkin(9) * t638 + t693 + t837 / 0.2e1 + t791 / 0.2e1 + t768 / 0.2e1;
t45 = pkin(9) * t388 + t694 + t835 / 0.2e1 + t771 / 0.2e1 - t788 / 0.2e1;
t30 = t167 * t636 + t649 + t769 / 0.2e1 - t520;
t29 = t167 * t647 + t639 - t789 / 0.2e1 - t521;
t15 = pkin(9) * t438 + t118 * t862 + t167 * t643 + t188 * t636 + t508 * t632 + t510 * t602 - t525 + t559;
t14 = pkin(9) * t434 + t117 * t861 + t167 * t648 + t188 * t646 + t308 * t641 + t507 * t602 - t526 + t560;
t9 = t604 * t774 + t121 * t642 + t658 + (t81 / 0.2e1 + t120 * t862) * t507 - t524;
t6 = t117 * t648 + t118 * t642 + t508 * t617 + t636 * t81 + t646 * t80 + t176 + t542 + t660;
t4 = t372 * t388 + t118 * t647 + t371 * t638 + t117 * t637 + t80 * t643 + t599 * t510 + (t681 + t600) * t507 - t553;
t2 = t167 * t641 + t176 * t513 - t516 + t519;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t455, t420, t610, -t455, -t611, 0, -t329 * qJD(2), -t330 * qJD(2), 0, 0, 0, -t610, t611, t455, t420, -t455, t505 * t506 * t698 - qJD(2) * t130, qJD(2) * t184 - qJD(3) * t689, -qJD(2) * t183 + qJD(3) * t448, qJD(2) * t122 - qJD(3) * t221, (-qJD(4) * t413 + t508 * t675) * t415, qJD(2) * t222 + qJD(4) * t224, qJD(2) * t292 - t413 * t671, t531, qJD(2) * t293 - t415 * t671, t455, qJD(2) * t48 + qJD(3) * t304 + qJD(4) * t93, -qJD(2) * t49 + qJD(3) * t305 - qJD(4) * t92, qJD(2) * t40 - qJD(3) * t223, qJD(2) * t39 - qJD(3) * t52, (qJD(2) * t381 - qJD(5) * t308 - t413 * t724) * t310, qJD(2) * t124 + qJD(4) * t128 + qJD(5) * t132, qJD(2) * t154 + qJD(4) * t140 - t308 * t721, (qJD(2) * t380 + qJD(5) * t310 - t413 * t726) * t308, qJD(2) * t153 - qJD(4) * t139 - t310 * t721, t531, qJD(2) * t25 + qJD(3) * t163 + qJD(4) * t23 + qJD(5) * t43, qJD(2) * t26 + qJD(3) * t164 + qJD(4) * t24 + qJD(5) * t42, qJD(2) * t18 + qJD(3) * t129 + qJD(4) * t19, qJD(2) * t17 + qJD(3) * t31 + qJD(4) * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454, t702, t398, -t454, -t397, 0, -t708 - t731, -t707 + t732, 0, 0, 0, -t398, t397, t454, t702, -t454, -t714 + (qJD(2) * t591 + t698) * t505, t710 + t731, t495 - t732 - t743, t717 + (-pkin(2) * t424 - qJ(3) * t423) * qJD(2) - t392 * qJD(3), t508 * t538 - t891, -t476 * t675 - t199 + t709, t511 * t664 + t740, -t566 * t685 + t891, -t508 * t664 + t739, t394, t799 + (t374 * t508 - t587 * t794) * qJD(2) + qJD(3) * t413 + t101 * qJD(4), -t798 + (t505 * t508 * t587 + t374 * t511) * qJD(2) + qJD(3) * t415 + t103 * qJD(4), -qJD(2) * t583 + t50 + t809, t810 + (t374 * qJ(3) + t513 * t583) * qJD(2) + t83 * qJD(3), qJD(4) * t135 - t882 + (t673 + t735) * t381, t716 + t77 * qJD(4) - t119 + (-t811 - t812) * t700, t712 + (-t504 * t686 + t777) * qJD(2) + t111 * qJD(4) + t148 * qJD(5), qJD(4) * t133 + t882 + (t674 + t736) * t380, t713 + (t504 * t687 - t778) * qJD(2) + t109 * qJD(4) + t149 * qJD(5), t891 + (-qJD(5) / 0.2e1 - t566) * t685, t120 * t701 + t824 + t181 * qJD(3) + t14 * qJD(4) + t30 * qJD(5) + (t371 * t795 - t380 * t513 + t830) * t700, -t121 * t701 + t823 + t182 * qJD(3) + t15 * qJD(4) + t29 * qJD(5) + (t372 * t795 - t381 * t513 + t829) * t700, t833 + (t371 * t381 - t372 * t380 + (-t120 * t510 - t121 * t507) * t511) * qJD(2) + t54 * qJD(3) + t4 * qJD(4), t834 + (-t120 * t371 + t121 * t372 - t203 * t758) * qJD(2) + t9 * qJD(3) + t2 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t398, -t454, t565, -qJD(2) * t392 - t742, 0, 0, 0, 0, 0, 0, qJD(2) * t413 + t738, qJD(2) * t415 + t737, -t741, qJD(2) * t83 - t844, 0, 0, 0, 0, 0, 0, qJD(2) * t181 + qJD(4) * t110 + qJD(5) * t157 + t745, qJD(2) * t182 + qJD(4) * t180 + qJD(5) * t158 + t744, qJD(2) * t54 + qJD(4) * t90 + t752, t820 + t9 * qJD(2) + t6 * qJD(4) + (t685 + t807 - t808) * t727; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t889, t568, t590 * t413, t889, t590 * t415, t460, qJD(2) * t101 - qJD(4) * t188 + t842, qJD(2) * t103 + qJD(4) * t187 - t843, t841, 0, qJD(2) * t135 + t177 + (-t726 - t735) * t767, t77 * qJD(2) - t413 * t628 - t125 + t715, qJD(2) * t111 + qJD(5) * t245 + t415 * t726 + t748, qJD(2) * t133 + t178 + (t724 - t736) * t786, qJD(2) * t109 + qJD(5) * t244 + t415 * t724 - t749, t527, t826 + t14 * qJD(2) + t110 * qJD(3) + (-t188 * t510 + t507 * t597) * qJD(4) + t47 * qJD(5), t825 + t15 * qJD(2) + t180 * qJD(3) + (t188 * t507 + t510 * t597) * qJD(4) + t45 * qJD(5), qJD(2) * t4 + qJD(3) * t90 + qJD(4) * t584 + t831, t838 + t2 * qJD(2) + t6 * qJD(3) + (-pkin(4) * t188 + pkin(9) * t584) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t529, t537, qJD(2) * t148 + qJD(4) * t245 + t308 * t616, t528, qJD(2) * t149 + qJD(4) * t244 + t310 * t616, t298, qJD(2) * t30 + qJD(3) * t157 + qJD(4) * t47 - qJD(5) * t81 + t845, qJD(2) * t29 + qJD(3) * t158 + qJD(4) * t45 + qJD(5) * t80 + t846, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454, -t702, -t608, t454, t609, 0, t708, t707, 0, 0, 0, t608, -t609, -t454, -t702, t454, t714, -t710, t495 + t743, qJ(3) * t495 - t717, -t415 * t456 - t891, -t199 - t709, -t508 * t671 - t740, t413 * t457 + t891, -t511 * t671 - t739, -t394, qJD(4) * t100 + t495 * t508 - t799, qJD(4) * t102 + t495 * t511 + t798, t50 - t809, qJD(3) * t84 - t810, qJD(4) * t136 - t381 * t735 - t882, qJD(4) * t78 - t119 - t716, -qJD(4) * t106 - qJD(5) * t147 - t712, qJD(4) * t134 - t380 * t736 + t882, -qJD(4) * t108 - qJD(5) * t146 - t713, t891 + (t706 + qJD(5) / 0.2e1) * t685, -qJD(3) * t137 - qJD(4) * t12 - qJD(5) * t27 - t824, -qJD(3) * t138 - qJD(4) * t13 - qJD(5) * t28 - t823, -qJD(3) * t53 - qJD(4) * t3 - t833, -qJD(3) * t8 - qJD(4) * t1 - t834; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t499, -t489, t476 * qJD(4), 0, t489, 0, 0, qJ(3) * t723 + t727, -qJ(3) * t725 + qJD(3) * t511, 0, t499, -t489 * t503 - t612, -qJD(5) * t442 + t508 * t595, -qJD(4) * t445 - t508 * t667, -t489 * t500 + t612, qJD(4) * t444 - t508 * t665, t489, qJD(4) * t195 + qJD(5) * t275 + t510 * t727, -qJD(4) * t196 - qJD(5) * t274 - t507 * t727, -qJD(3) * t443 - qJD(4) * t116, qJD(3) * t216 + qJD(4) * t126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, t450, 0, 0, 0, 0, 0, 0, t432, t433, 0, t580, 0, 0, 0, 0, 0, 0, qJD(5) * t405 - t627, qJD(5) * t404 - t626, -t575, t585 + t848; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t890, -t567, t416, -t890, t417, -t663 / 0.2e1, -t508 * t722 - t551, -t511 * t722 - t550, t772, 0, t750 - t703 + (-t503 * t700 - t485) * t508, t508 * t887 + t449 + t755, t572 + t670, t751 + t703 + (-t500 * t700 + t485) * t508, t571 + t669, t545, (t507 * t596 - t684) * qJD(4) + t257 * qJD(5) + t579, (-pkin(9) * t763 + (pkin(4) * t510 + t781) * t508) * qJD(4) + t256 * qJD(5) + t578, qJD(4) * t581 + t586, (-pkin(4) * t774 + pkin(9) * t581) * qJD(4) + t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t893, -t523, t507 * t573 - t746, t893, t510 * t573 - t747, t457 / 0.2e1 + t493, qJD(3) * t405 + qJD(4) * t257 - qJD(5) * t372 - t577, qJD(3) * t404 + qJD(4) * t256 + qJD(5) * t371 - t576, 0, -t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t608, t454, -t565, -qJ(3) * t729 + t742, 0, 0, 0, 0, 0, 0, t508 * t547 - t738, t511 * t547 - t737, t741, -qJD(2) * t84 + t844, 0, 0, 0, 0, 0, 0, qJD(2) * t137 - qJD(4) * t107 - qJD(5) * t155 - t745, qJD(2) * t138 - qJD(4) * t179 - qJD(5) * t156 - t744, qJD(2) * t53 + qJD(4) * t91 - t752, qJD(2) * t8 - qJD(4) * t5 - t820; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t490, -t450, 0, 0, 0, 0, 0, 0, -t432, -t433, 0, -t580, 0, 0, 0, 0, 0, 0, -qJD(5) * t403 + t627, -qJD(5) * t402 + t626, t575, -t585 + t848; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t351 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t416, t417, 0, 0, 0, 0, 0, 0, 0, 0, -t508 * t724 - t667 - t718, t486 - t665 - t711, qJD(4) * t443 + t754, (pkin(9) * t443 - t854) * qJD(4) - t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t570 - t666 - t670, -t569 + t668 - t669, 0, -t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t889, -t568, t566 * t795, -t889, t538, t460, -qJD(2) * t100 + t508 * t672 - t842, -qJD(2) * t102 + t511 * t672 + t843, -t841, 0, -qJD(2) * t136 + t510 * t678 + t177, -qJD(2) * t78 - t125 - t715, qJD(2) * t106 + qJD(5) * t246 - t748, -qJD(2) * t134 + t507 * t679 + t178, qJD(2) * t108 + qJD(5) * t243 + t749, -t527, qJD(2) * t12 + qJD(3) * t107 + qJD(5) * t46 - t826, qJD(2) * t13 + qJD(3) * t179 + qJD(5) * t44 - t825, qJD(2) * t3 - qJD(3) * t91 - t831, qJD(2) * t1 + qJD(3) * t5 - t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t890, t567, t456, t890, t457, qJD(1) * t650, t551, t550, -t772, 0, t488 * t503 - t703 - t750, -0.2e1 * t508 * t607 + t449 - t755, -t572 + t666, t488 * t500 + t703 - t751, -t571 - t668, -t545, -qJD(5) * t307 - t579, qJD(5) * t306 - t578, -t586, -t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t456, t457, 0, 0, 0, 0, 0, 0, 0, 0, t718, t711, -t754, t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t662, t477 * qJD(5), 0, -t662, 0, 0, -pkin(4) * t720, -pkin(4) * t719, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t883, -t522, -t620 + t719, t884, -t621 - t720, -t558, -pkin(9) * t719 - t533, pkin(9) * t720 - t534, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t529, -t537, qJD(2) * t147 - qJD(4) * t246 + t679, -t528, qJD(2) * t146 - qJD(4) * t243 + t678, t298, qJD(2) * t27 + qJD(3) * t155 - qJD(4) * t46 - t845, qJD(2) * t28 + qJD(3) * t156 - qJD(4) * t44 - t846, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t893, t523, t746 + (t674 - t724) * t508, -t893, t488 * t510 + t486 + t747, -t457 / 0.2e1 + t493, qJD(3) * t403 + qJD(4) * t307 + t577, qJD(3) * t402 - qJD(4) * t306 + t576, 0, t728; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t570, t569, 0, t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t883, t522, t620, -t884, t621, t558, t533, t534, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t7;
