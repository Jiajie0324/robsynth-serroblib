% Calculate minimal parameter regressor of coriolis matrix for
% S5RRPRR16
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x28]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:48
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR16_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR16_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR16_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR16_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:47:29
% EndTime: 2019-12-31 20:47:50
% DurationCPUTime: 9.60s
% Computational Cost: add. (4918->617), mult. (12680->879), div. (0->0), fcn. (13011->8), ass. (0->464)
t329 = sin(qJ(4));
t326 = sin(pkin(5));
t333 = cos(qJ(2));
t536 = t326 * t333;
t286 = t329 * t536;
t327 = cos(pkin(5));
t332 = cos(qJ(4));
t535 = t327 * t332;
t246 = -t286 + t535;
t244 = t327 * t329 + t332 * t536;
t547 = t244 * t332;
t586 = t329 / 0.2e1;
t126 = t246 * t586 + t547 / 0.2e1;
t602 = t126 * qJD(4);
t469 = t332 * qJD(2);
t307 = t329 * t469;
t406 = -t126 * qJD(1) - t307;
t472 = t244 * qJD(1);
t359 = qJD(2) * t126 + t246 * t472;
t328 = sin(qJ(5));
t331 = cos(qJ(5));
t446 = t331 * t469;
t403 = t328 * t446;
t321 = t328 ^ 2;
t324 = t331 ^ 2;
t297 = t324 - t321;
t409 = qJD(4) * t297;
t601 = 0.2e1 * t403 - t409;
t330 = sin(qJ(2));
t522 = t330 * t331;
t455 = t326 * t522;
t546 = t246 * t328;
t173 = -t455 + t546;
t525 = t329 * t173;
t423 = t525 / 0.2e1;
t527 = t328 * t332;
t424 = t527 / 0.2e1;
t353 = t244 * t424 + t423;
t313 = t327 * t333 * pkin(1);
t538 = t326 * t330;
t599 = pkin(3) + pkin(7);
t215 = -t538 * t599 + t313;
t334 = -pkin(2) - pkin(8);
t571 = qJ(3) * t330;
t382 = -t333 * t334 + t571;
t600 = t244 ^ 2;
t598 = -t173 / 0.2e1;
t456 = t328 * t538;
t545 = t246 * t331;
t175 = t456 + t545;
t597 = -t175 / 0.2e1;
t583 = pkin(1) * t330;
t251 = pkin(7) * t536 + t327 * t583;
t216 = pkin(3) * t536 + t251;
t317 = t327 * qJ(3);
t178 = t317 + t216;
t596 = t178 / 0.2e1;
t507 = t333 * t328;
t221 = (t329 * t522 + t507) * t326;
t595 = -t221 / 0.2e1;
t594 = -t244 / 0.2e1;
t593 = t244 / 0.2e1;
t579 = t332 * pkin(4);
t580 = t329 * pkin(9);
t283 = t579 + t580;
t592 = t283 / 0.2e1;
t287 = t331 * t536;
t591 = t287 / 0.2e1;
t590 = -t324 / 0.2e1;
t589 = -t328 / 0.2e1;
t588 = t328 / 0.2e1;
t587 = -t329 / 0.2e1;
t585 = t331 / 0.2e1;
t584 = -t332 / 0.2e1;
t582 = pkin(2) * t327;
t581 = pkin(9) * t244;
t179 = (-pkin(1) - t382) * t326;
t342 = t327 * t334 - t215;
t94 = t179 * t329 - t332 * t342;
t81 = -pkin(4) * t538 + t94;
t578 = -t81 + t94;
t577 = t328 * t94;
t576 = t331 * t94;
t391 = pkin(4) * t244 - pkin(9) * t246;
t348 = t391 + t178;
t510 = t332 * t179;
t82 = t510 + t329 * (-pkin(8) * t327 - t313 - t582) + (t329 * t599 + pkin(9)) * t538;
t27 = t328 * t82 - t331 * t348;
t146 = pkin(4) * t246 + t581;
t519 = t331 * t146;
t95 = t329 * t342 + t510;
t5 = t95 * t173 - t27 * t246 + (t328 * t578 + t519) * t244;
t575 = t5 * qJD(1);
t28 = t328 * t348 + t331 * t82;
t532 = t328 * t146;
t6 = t95 * t175 - t28 * t246 + (t331 * t578 - t532) * t244;
t574 = t6 * qJD(1);
t509 = t332 * t216;
t309 = pkin(2) * t538;
t214 = t309 + (pkin(8) * t330 - qJ(3) * t333) * t326;
t524 = t329 * t214;
t105 = -pkin(4) * t536 - t509 + t524;
t220 = t329 * t456 - t287;
t116 = t313 + (-t283 - t599) * t538;
t520 = t331 * t116;
t191 = t332 * t214;
t194 = t329 * t216;
t496 = t191 + t194;
t106 = pkin(9) * t536 + t496;
t534 = t328 * t106;
t44 = t520 - t534;
t537 = t326 * t332;
t454 = t330 * t537;
t7 = t105 * t173 + t220 * t81 + t244 * t44 + t27 * t454;
t573 = t7 * qJD(1);
t521 = t331 * t106;
t533 = t328 * t116;
t45 = t521 + t533;
t8 = t105 * t175 + t221 * t81 - t244 * t45 + t28 * t454;
t572 = t8 * qJD(1);
t13 = -t173 * t81 + t244 * t27;
t570 = qJD(1) * t13;
t14 = t175 * t81 - t244 * t28;
t569 = qJD(1) * t14;
t29 = t178 * t244 - t538 * t94;
t568 = qJD(1) * t29;
t30 = t178 * t246 - t538 * t95;
t567 = qJD(1) * t30;
t421 = t331 * t587;
t349 = t175 * t421 + t547 * t590;
t548 = t221 * t328;
t55 = -t548 / 0.2e1 + t349;
t566 = qJD(1) * t55;
t58 = t173 * t246 - t328 * t600;
t565 = qJD(1) * t58;
t59 = t175 * t246 - t331 * t600;
t564 = qJD(1) * t59;
t513 = t331 * t332;
t417 = t513 / 0.2e1;
t397 = t244 * t417;
t430 = -t538 / 0.2e1;
t402 = t328 * t430;
t64 = t591 + t397 + (t402 + t175 / 0.2e1) * t329;
t563 = qJD(1) * t64;
t420 = t522 / 0.2e1;
t398 = t329 * t420;
t345 = (t398 + t507 / 0.2e1) * t326;
t65 = t345 + t353;
t562 = qJD(1) * t65;
t514 = t331 * t327;
t354 = t328 * t454 + t514;
t457 = t329 * t538;
t77 = -t173 * t457 + t244 * t354;
t561 = qJD(1) * t77;
t528 = t328 * t327;
t355 = -t331 * t454 + t528;
t78 = -t175 * t457 - t244 * t355;
t560 = qJD(1) * t78;
t385 = -pkin(2) * t333 - t571;
t232 = (-pkin(1) + t385) * t326;
t249 = -qJ(3) * t536 + t309;
t250 = pkin(7) * t538 - t313;
t543 = t250 * t327;
t91 = t543 + (t232 * t333 + t249 * t330) * t326;
t559 = qJD(1) * t91;
t558 = t105 * t328;
t557 = t105 * t331;
t556 = t173 * t332;
t555 = t175 * t328;
t554 = t175 * t329;
t553 = t175 * t331;
t19 = t215 * t244 + (-t94 * t333 + (-t524 + (-t178 + t216) * t332) * t330) * t326;
t552 = t19 * qJD(1);
t20 = -t215 * t246 - t178 * t457 + (t330 * t496 + t95 * t333) * t326;
t551 = t20 * qJD(1);
t390 = pkin(4) * t329 - pkin(9) * t332;
t366 = qJ(3) + t390;
t526 = t328 * t334;
t212 = t329 * t526 - t331 * t366;
t550 = t212 * t246;
t512 = t331 * t334;
t453 = t329 * t512;
t213 = t328 * t366 + t453;
t549 = t213 * t246;
t544 = t246 * t332;
t542 = t251 * t327;
t530 = t328 * t244;
t195 = t513 * t530;
t431 = t554 / 0.2e1;
t26 = t195 + (t423 + t595) * t331 + (t431 + t220 / 0.2e1) * t328;
t541 = t26 * qJD(1);
t320 = t326 ^ 2;
t323 = t330 ^ 2;
t540 = t320 * t323;
t539 = t320 * t333;
t325 = t332 ^ 2;
t315 = t325 * t331;
t531 = t328 * t173;
t529 = t328 * t283;
t523 = t329 * t244;
t518 = t331 * t173;
t517 = t331 * t244;
t516 = t331 * t283;
t322 = t329 ^ 2;
t515 = t331 * t322;
t511 = t332 * t175;
t508 = t332 * t334;
t506 = t334 * t175;
t36 = (t326 * t420 + t546 / 0.2e1 + t598) * t329;
t505 = t36 * qJD(1);
t231 = -t317 - t251;
t357 = t250 - t582;
t46 = t231 * t250 + t232 * t249 + t251 * t357;
t504 = t46 * qJD(1);
t48 = -t173 * t221 - t175 * t220;
t503 = t48 * qJD(1);
t378 = t518 + t555;
t51 = t378 * t244;
t502 = t51 * qJD(1);
t52 = (-t231 - t251) * t538 + (t250 - t357) * t536;
t501 = t52 * qJD(1);
t70 = t173 * t454 - t220 * t244;
t500 = t70 * qJD(1);
t71 = -t175 * t454 + t221 * t244;
t499 = t71 * qJD(1);
t87 = (t402 + t545 / 0.2e1 + t597) * t329;
t498 = t87 * qJD(1);
t92 = t542 + (-t232 * t330 + t249 * t333) * t326;
t497 = t92 * qJD(1);
t296 = t322 - t325;
t107 = t231 * t327 + t232 * t538;
t495 = qJD(1) * t107;
t460 = t329 * t540;
t162 = t246 * t536 + t460;
t494 = qJD(1) * t162;
t459 = t332 * t540;
t163 = -t244 * t536 + t459;
t493 = qJD(1) * t163;
t169 = t244 * t327 + t460;
t492 = qJD(1) * t169;
t170 = t246 * t327 + t459;
t491 = qJD(1) * t170;
t490 = qJD(1) * t175;
t489 = qJD(1) * t326;
t488 = qJD(2) * t250;
t487 = qJD(2) * t251;
t486 = qJD(2) * t326;
t485 = qJD(2) * t327;
t484 = qJD(3) * t329;
t483 = qJD(4) * t328;
t482 = qJD(4) * t329;
t481 = qJD(4) * t331;
t480 = qJD(4) * t332;
t479 = qJD(4) * t334;
t478 = qJD(5) * t244;
t477 = qJD(5) * t328;
t476 = qJD(5) * t331;
t104 = -t523 + t544;
t108 = t104 * t538;
t475 = t108 * qJD(1);
t182 = t320 * t583 + t542;
t474 = t182 * qJD(1);
t183 = pkin(1) * t539 - t543;
t473 = t183 * qJD(1);
t258 = (t333 ^ 2 - t323) * t320;
t471 = t258 * qJD(1);
t316 = t327 * qJD(3);
t470 = t329 * qJD(2);
t468 = t332 * qJD(5);
t467 = t333 * qJD(3);
t466 = 0.1e1 / 0.2e1 + t322 / 0.2e1;
t465 = pkin(4) * t173 / 0.2e1;
t464 = pkin(4) * t597;
t463 = -pkin(4) * t220 / 0.2e1;
t462 = pkin(4) * t595;
t461 = t81 / 0.2e1 - t94 / 0.2e1;
t458 = t330 * t539;
t452 = t328 * t508;
t451 = t331 * t508;
t450 = t175 * t472;
t448 = t330 * t489;
t447 = t330 * t486;
t445 = qJD(3) * t538;
t444 = qJD(4) * t538;
t443 = t328 * t481;
t442 = t328 * t480;
t441 = t331 * t480;
t440 = t329 * t477;
t439 = t328 * t468;
t438 = t329 * t476;
t437 = t331 * t468;
t436 = t333 * t486;
t435 = t333 * t489;
t434 = t328 * t476;
t433 = t329 * t480;
t432 = qJ(3) * t246 / 0.2e1;
t429 = t538 / 0.2e1;
t428 = t536 / 0.2e1;
t427 = -t534 / 0.2e1;
t227 = -t530 / 0.2e1;
t228 = t530 / 0.2e1;
t426 = t328 * t587;
t425 = -t527 / 0.2e1;
t422 = t523 / 0.2e1;
t419 = -t521 / 0.2e1;
t418 = -t517 / 0.2e1;
t223 = t517 / 0.2e1;
t416 = t220 * t584;
t415 = t221 * t584;
t414 = t334 * t598;
t413 = t506 / 0.2e1;
t412 = -t191 / 0.2e1 - t194 / 0.2e1;
t304 = t328 * t470;
t400 = t332 * t429;
t265 = t331 * t400;
t57 = t415 + t228 + (t265 + t528 / 0.2e1) * t329;
t411 = qJD(1) * t57 + t304;
t306 = t331 * t470;
t261 = t328 * t400;
t56 = t416 + t418 + (t261 - t514 / 0.2e1) * t329;
t410 = qJD(1) * t56 - t306;
t121 = 0.2e1 * t227;
t408 = -qJD(1) * t121 + t304;
t124 = 0.2e1 * t223;
t407 = -qJD(1) * t124 - t306;
t308 = qJD(1) * t327 + qJD(2);
t405 = -qJD(5) - t472;
t281 = t329 * t448;
t404 = t327 * t435;
t401 = t332 * t430;
t208 = t328 * t422;
t202 = t329 * t418;
t396 = t334 * t430;
t395 = t461 * t328;
t394 = t461 * t331;
t393 = t581 / 0.2e1 + t146 / 0.2e1;
t392 = t116 / 0.2e1 + t81 * t584;
t389 = 0.2e1 * t328 * t441;
t387 = t105 / 0.2e1 + t244 * t592;
t386 = t327 / 0.2e1 + t422;
t384 = -qJD(4) - t448;
t383 = t329 * t402;
t377 = pkin(9) * t429 - t95 / 0.2e1;
t1 = t463 + t550 / 0.2e1 - t387 * t331 + (-t519 / 0.2e1 + t414 + t395) * t329 + (t27 / 0.2e1 + t377 * t328) * t332;
t101 = -t212 * t332 + (t452 + t516) * t329;
t381 = -t1 * qJD(1) + t101 * qJD(2);
t102 = t213 * t332 + (-t451 + t529) * t329;
t2 = t462 + t549 / 0.2e1 + t387 * t328 + (t532 / 0.2e1 - t506 / 0.2e1 + t394) * t329 + (t28 / 0.2e1 + t377 * t331) * t332;
t380 = -t2 * qJD(1) - t102 * qJD(2);
t148 = -t213 * t329 - t325 * t512;
t336 = t213 * t593 + t28 * t586 + t332 * t413;
t9 = t331 * t392 + t336 + t427;
t379 = qJD(1) * t9 - qJD(2) * t148;
t337 = t212 * t594 + t27 * t587 + t332 * t414;
t10 = -t328 * t392 + t337 + t419;
t147 = -t212 * t329 - t325 * t526;
t376 = qJD(1) * t10 + qJD(2) * t147;
t238 = (-t325 / 0.2e1 - t466) * t328;
t156 = -t556 / 0.2e1;
t73 = -t328 * t386 + t156 + t265;
t375 = qJD(1) * t73 + qJD(2) * t238;
t239 = t315 / 0.2e1 + t466 * t331;
t153 = t511 / 0.2e1;
t72 = t331 * t386 + t153 + t261;
t374 = qJD(1) * t72 + qJD(2) * t239;
t270 = t296 * t328;
t157 = t556 / 0.2e1;
t266 = t331 * t401;
t364 = t523 - t544 / 0.2e1;
t37 = -t328 * t364 + t157 + t266;
t373 = -qJD(1) * t37 + qJD(2) * t270;
t271 = -t315 + t515;
t154 = -t511 / 0.2e1;
t262 = t328 * t401;
t35 = t331 * t364 + t154 + t262;
t372 = -qJD(1) * t35 - qJD(2) * t271;
t371 = (-qJD(5) - t470) * t332;
t109 = -t246 ^ 2 + t600;
t370 = qJD(1) * t109 - qJD(2) * t104;
t369 = qJD(1) * t104 - qJD(2) * t296;
t368 = t470 + t472;
t273 = t327 ^ 2 + t540;
t367 = qJD(1) * t273 + t485;
t365 = t580 / 0.2e1 + t579 / 0.2e1;
t242 = t535 / 0.2e1 - t286 / 0.2e1;
t363 = t242 * qJD(1) + t469 / 0.2e1;
t362 = t518 / 0.2e1 + t555 / 0.2e1;
t31 = t432 + (t596 - t216 / 0.2e1) * t332 + (t396 + t214 / 0.2e1) * t329;
t361 = -qJ(3) * t469 - qJD(1) * t31;
t335 = qJ(3) * t594 + t178 * t587 + t332 * t396;
t33 = t335 - t412;
t360 = qJ(3) * t470 - qJD(1) * t33;
t358 = -t444 - t485;
t356 = t468 / 0.2e1 - t406;
t352 = t592 + t365;
t47 = (-t531 + t553) * t332;
t53 = t173 ^ 2 - t175 ^ 2;
t351 = qJD(1) * t53 - qJD(2) * t47 - qJD(4) * t378;
t350 = (qJD(1) * t246 + t469) * t538;
t15 = t328 * t393 + t394 + t465;
t171 = t352 * t328;
t347 = pkin(4) * t481 - qJD(1) * t15 - qJD(2) * t171;
t17 = -t331 * t393 + t395 + t464;
t172 = t352 * t331;
t346 = pkin(4) * t483 - qJD(1) * t17 + qJD(2) * t172;
t83 = t362 * t332;
t93 = -t531 / 0.2e1 + t553 / 0.2e1;
t344 = qJD(2) * t83 - qJD(4) * t93 + t173 * t490;
t252 = (t321 / 0.2e1 + t590) * t332;
t343 = qJD(1) * t93 - qJD(2) * t252 + t443;
t341 = qJD(5) * t242 + t359;
t340 = qJD(2) * t315 * t328 + qJD(1) * t83 + qJD(4) * t252;
t269 = t297 * t325;
t339 = qJD(1) * t47 + qJD(2) * t269 + t389;
t338 = qJD(1) * t378 + t601;
t314 = t480 / 0.2e1;
t305 = t328 * t482;
t284 = qJD(2) * t428;
t282 = t332 * t448;
t280 = qJD(2) * t458;
t279 = qJD(1) * t458;
t275 = t308 * qJ(3);
t274 = -0.2e1 * t332 * t434;
t260 = t308 * t332;
t259 = t308 * t329;
t248 = -t282 - t480;
t247 = -t281 - t482;
t243 = t252 * qJD(5);
t241 = -t515 / 0.2e1 - t315 / 0.2e1 + t585;
t240 = t589 + (t322 + t325) * t588;
t236 = t308 * t536;
t233 = qJD(4) * t428 + t279;
t200 = t244 * t425;
t168 = qJD(2) * t401 + qJD(4) * t242;
t133 = -t452 + t516 / 0.2e1 - t365 * t331;
t132 = -t451 - t529 / 0.2e1 + t365 * t328;
t123 = t223 + t418;
t122 = t227 + t228;
t103 = t104 * qJD(4);
t90 = t355 * t587 + t227 + t415;
t89 = t354 * t586 + t223 + t416;
t88 = t246 * t421 + t383 + t431;
t86 = t93 * qJD(5);
t76 = t83 * qJD(5);
t75 = t208 + t157 + t265 - t528 / 0.2e1;
t74 = t202 + t154 + t261 + t514 / 0.2e1;
t67 = t332 * t418 - t554 / 0.2e1 + t383 + t591;
t66 = t200 - t525 / 0.2e1 + t345;
t54 = t548 / 0.2e1 + t349;
t49 = t378 * qJD(5);
t43 = t47 * qJD(5);
t40 = t246 * t417 + t153 + 0.2e1 * t202 + t262;
t39 = t246 * t426 + t326 * t398 + t200 + t353;
t38 = t246 * t425 + t156 + 0.2e1 * t208 + t266;
t34 = t335 + t412;
t32 = t329 * t396 + t432 + t332 * t596 - t524 / 0.2e1 + t509 / 0.2e1;
t25 = t220 * t589 + t221 * t585 + t329 * t362 + t195;
t18 = pkin(9) * t418 + t464 + t81 * t588 + t577 / 0.2e1 + t519 / 0.2e1;
t16 = pkin(9) * t228 + t465 + t81 * t585 + t576 / 0.2e1 - t532 / 0.2e1;
t12 = t81 * t417 + t427 + t520 / 0.2e1 - t336;
t11 = t81 * t425 + t419 - t533 / 0.2e1 - t337;
t4 = (t451 + t529) * t594 - t549 / 0.2e1 + (t532 - t576) * t587 + t28 * t584 + t329 * t413 + t334 * t397 + t95 * t417 + t81 * t421 + pkin(9) * t265 + t462 + t558 / 0.2e1;
t3 = (-t452 + t516) * t593 - t550 / 0.2e1 + (t519 + t577) * t586 + t27 * t584 + t95 * t424 + t81 * t426 + pkin(9) * t261 + t463 - t557 / 0.2e1 + t353 * t334;
t21 = [0, 0, 0, t280, t258 * qJD(2), t327 * t436, -t327 * t447, 0, -t182 * qJD(2), -t183 * qJD(2), t326 * t327 * t467 - qJD(2) * t52, qJD(2) * t92 - qJD(3) * t458, -qJD(2) * t91 + qJD(3) * t273, qJD(2) * t46 - qJD(3) * t107, (-qJD(4) * t244 + t329 * t447) * t246, qJD(2) * t108 + qJD(4) * t109, qJD(2) * t162 - t244 * t444, qJD(2) * t163 - t246 * t444, t280, qJD(2) * t19 + qJD(3) * t169 + qJD(4) * t30, -qJD(2) * t20 + qJD(3) * t170 - qJD(4) * t29, (qJD(2) * t221 - qJD(5) * t173 - t244 * t481) * t175, qJD(2) * t48 + qJD(4) * t51 + qJD(5) * t53, qJD(2) * t71 + qJD(4) * t59 - t173 * t478, qJD(2) * t70 - qJD(4) * t58 - t175 * t478, (qJD(4) * t246 - t332 * t447) * t244, qJD(2) * t7 + qJD(3) * t77 + qJD(4) * t5 + qJD(5) * t14, qJD(2) * t8 + qJD(3) * t78 + qJD(4) * t6 + qJD(5) * t13; 0, 0, 0, t279, t471, t236, -t308 * t538, 0, -t474 - t487, -t473 + t488, -t501 + (qJD(2) * t385 + t467) * t326, t487 + t497, t316 - t488 - t559, t504 + (-pkin(2) * t251 - qJ(3) * t250) * qJD(2) - t231 * qJD(3), t329 * t350 - t602, -t296 * t447 - t103 + t475, t332 * t436 + t494, -t329 * t436 + t493, t233, t552 + (t215 * t329 - t382 * t537) * qJD(2) + qJD(3) * t244 + t32 * qJD(4), -t551 + (t326 * t329 * t382 + t215 * t332) * qJD(2) + qJD(3) * t246 + t34 * qJD(4), qJD(4) * t54 - t76 + (t446 + t490) * t221, t503 + t25 * qJD(4) - t43 + (-t220 * t331 - t548) * t469, t499 + (t221 * t329 - t325 * t455) * qJD(2) + t40 * qJD(4) + t66 * qJD(5), t500 + (-t220 * t329 + t325 * t456) * qJD(2) + t38 * qJD(4) + t67 * qJD(5), t602 + (-qJD(5) / 0.2e1 - t368) * t454, t44 * t470 + t573 + t89 * qJD(3) + t3 * qJD(4) + t12 * qJD(5) + (t212 * t538 - t220 * t334 + t558) * t469, -t45 * t470 + t572 + t90 * qJD(3) + t4 * qJD(4) + t11 * qJD(5) + (t213 * t538 - t221 * t334 + t557) * t469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236, -t279, t367, -qJD(2) * t231 - t495, 0, 0, 0, 0, 0, qJD(2) * t244 + t492, qJD(2) * t246 + t491, 0, 0, 0, 0, 0, qJD(2) * t89 + qJD(4) * t39 + qJD(5) * t74 + t561, qJD(2) * t90 + qJD(4) * t88 + qJD(5) * t75 + t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t359, t370, t384 * t244, t384 * t246, t284, qJD(2) * t32 - qJD(4) * t95 + t567, qJD(2) * t34 + qJD(4) * t94 - t568, qJD(2) * t54 + t86 + (-t483 - t490) * t517, t25 * qJD(2) - t244 * t409 - t49 + t502, qJD(2) * t40 + qJD(5) * t123 + t246 * t483 + t564, qJD(2) * t38 + qJD(5) * t122 + t246 * t481 - t565, t341, t575 + t3 * qJD(2) + t39 * qJD(3) + (t328 * t391 - t331 * t95) * qJD(4) + t18 * qJD(5), t574 + t4 * qJD(2) + t88 * qJD(3) + (t328 * t95 + t331 * t391) * qJD(4) + t16 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t344, t351, qJD(2) * t66 + qJD(4) * t123 + t173 * t405, qJD(2) * t67 + qJD(4) * t122 + t175 * t405, t168, qJD(2) * t12 + qJD(3) * t74 + qJD(4) * t18 - qJD(5) * t28 + t569, qJD(2) * t11 + qJD(3) * t75 + qJD(4) * t16 + qJD(5) * t27 + t570; 0, 0, 0, -t279, -t471, -t404, t327 * t448, 0, t474, t473, t501, -t497, t316 + t559, qJ(3) * t316 - t504, -t246 * t281 - t602, -t103 - t475, -t329 * t444 - t494, -t332 * t444 - t493, -t233, qJD(4) * t31 + t316 * t329 - t552, qJD(4) * t33 + t316 * t332 + t551, qJD(4) * t55 - t221 * t490 - t76, qJD(4) * t26 - t43 - t503, -qJD(4) * t35 - qJD(5) * t65 - t499, -qJD(4) * t37 - qJD(5) * t64 - t500, t602 + (t472 + qJD(5) / 0.2e1) * t454, -qJD(3) * t56 - qJD(4) * t1 - qJD(5) * t9 - t573, -qJD(3) * t57 - qJD(4) * t2 - qJD(5) * t10 - t572; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t433, t296 * qJD(4), 0, 0, 0, qJ(3) * t480 + t484, -qJ(3) * t482 + qJD(3) * t332, -t324 * t433 - t325 * t434, -qJD(5) * t269 + t329 * t389, -qJD(4) * t271 - t329 * t439, qJD(4) * t270 - t329 * t437, t433, qJD(4) * t101 + qJD(5) * t148 + t331 * t484, -qJD(4) * t102 - qJD(5) * t147 - t328 * t484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t308, t275, 0, 0, 0, 0, 0, t259, t260, 0, 0, 0, 0, 0, qJD(5) * t241 - t410, qJD(5) * t240 - t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t406, -t369, t247, t248, -t435 / 0.2e1, -t329 * t479 - t361, -t332 * t479 - t360, t566 - t243 + (-t324 * t469 - t443) * t329, t329 * t601 + t274 + t541, t372 + t442, t373 + t441, t356, (t328 * t390 - t453) * qJD(4) + t133 * qJD(5) + t381, (-pkin(9) * t513 + (pkin(4) * t331 + t526) * t329) * qJD(4) + t132 * qJD(5) + t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t340, -t339, t328 * t371 - t562, t331 * t371 - t563, t282 / 0.2e1 + t314, qJD(3) * t241 + qJD(4) * t133 - qJD(5) * t213 - t379, qJD(3) * t240 + qJD(4) * t132 + qJD(5) * t212 - t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t404, t279, -t367, -qJ(3) * t485 + t495, 0, 0, 0, 0, 0, t329 * t358 - t492, t332 * t358 - t491, 0, 0, 0, 0, 0, qJD(2) * t56 - qJD(4) * t36 - qJD(5) * t72 - t561, qJD(2) * t57 - qJD(4) * t87 - qJD(5) * t73 - t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t308, -t275, 0, 0, 0, 0, 0, -t259, -t260, 0, 0, 0, 0, 0, -qJD(5) * t239 + t410, -qJD(5) * t238 + t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t247, t248, 0, 0, 0, 0, 0, -t329 * t481 - t439 - t505, t305 - t437 - t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t374 - t438 - t442, -t375 + t440 - t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t359, -t370, t368 * t538, t350, t284, -qJD(2) * t31 + t329 * t445 - t567, -qJD(2) * t33 + t332 * t445 + t568, -qJD(2) * t55 + t331 * t450 + t86, -qJD(2) * t26 - t49 - t502, qJD(2) * t35 + qJD(5) * t124 - t564, qJD(2) * t37 + qJD(5) * t121 + t565, -t341, qJD(2) * t1 + qJD(3) * t36 + qJD(5) * t17 - t575, qJD(2) * t2 + qJD(3) * t87 + qJD(5) * t15 - t574; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t406, t369, t281, t282, qJD(1) * t428, t361, t360, t307 * t324 - t243 - t566, -0.2e1 * t329 * t403 + t274 - t541, -t372 + t438, -t373 - t440, -t356, -qJD(5) * t172 - t381, qJD(5) * t171 - t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t281, t282, 0, 0, 0, 0, 0, t505, t498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t434, t297 * qJD(5), 0, 0, 0, -pkin(4) * t477, -pkin(4) * t476; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t343, -t338, -t407 + t476, -t408 - t477, -t363, -pkin(9) * t476 - t346, pkin(9) * t477 - t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, -t351, qJD(2) * t65 - qJD(4) * t124 + t173 * t472, qJD(2) * t64 - qJD(4) * t121 + t450, t168, qJD(2) * t9 + qJD(3) * t72 - qJD(4) * t17 - t569, qJD(2) * t10 + qJD(3) * t73 - qJD(4) * t15 - t570; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340, t339, t562 + (t328 * t469 - t481) * t329, t307 * t331 + t305 + t563, -t282 / 0.2e1 + t314, qJD(3) * t239 + qJD(4) * t172 + t379, qJD(3) * t238 - qJD(4) * t171 + t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t374, t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t343, t338, t407, t408, t363, t346, t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t21;
