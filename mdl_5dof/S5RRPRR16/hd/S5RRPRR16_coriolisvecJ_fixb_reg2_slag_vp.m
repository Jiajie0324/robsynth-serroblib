% Calculate inertial parameters regressor of coriolis joint torque vector for
% S5RRPRR16
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5]';
% 
% Output:
% tauc_reg [5x(5*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:48
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S5RRPRR16_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR16_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR16_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR16_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:47:26
% EndTime: 2019-12-31 20:47:40
% DurationCPUTime: 5.33s
% Computational Cost: add. (5991->468), mult. (15731->654), div. (0->0), fcn. (11260->8), ass. (0->229)
t162 = cos(pkin(5));
t168 = cos(qJ(2));
t279 = pkin(1) * t168;
t230 = t162 * t279;
t147 = qJD(1) * t230;
t285 = qJD(3) - t147;
t163 = sin(qJ(5));
t166 = cos(qJ(5));
t161 = sin(pkin(5));
t165 = sin(qJ(2));
t243 = qJD(1) * t165;
t224 = t161 * t243;
t199 = qJD(4) + t224;
t164 = sin(qJ(4));
t167 = cos(qJ(4));
t244 = qJD(1) * t162;
t150 = qJD(2) + t244;
t169 = -pkin(2) - pkin(8);
t283 = pkin(3) + pkin(7);
t47 = t169 * t150 + t283 * t224 + t285;
t215 = -qJ(3) * t165 - pkin(1);
t83 = (t169 * t168 + t215) * t161;
t64 = qJD(1) * t83;
t29 = t164 * t47 + t167 * t64;
t24 = pkin(9) * t199 + t29;
t245 = qJD(1) * t161;
t223 = t168 * t245;
t256 = t150 * t164;
t101 = t167 * t223 + t256;
t207 = t164 * t223;
t103 = t150 * t167 - t207;
t143 = t150 * qJ(3);
t280 = pkin(1) * t165;
t155 = t162 * t280;
t253 = t161 * t168;
t247 = pkin(7) * t253 + t155;
t112 = t247 * qJD(1);
t87 = pkin(3) * t223 + t112;
t59 = t143 + t87;
t30 = pkin(4) * t101 - pkin(9) * t103 + t59;
t198 = t163 * t24 - t166 * t30;
t241 = qJD(2) * t165;
t222 = t161 * t241;
t206 = qJD(1) * t222;
t248 = pkin(7) * t206 - qJD(2) * t147;
t72 = -t150 * qJD(3) + t248;
t50 = -pkin(3) * t206 - t72;
t236 = qJD(4) * t167;
t219 = t168 * t236;
t220 = t164 * t241;
t238 = qJD(4) * t164;
t56 = t150 * t238 + (t219 - t220) * t245;
t57 = -qJD(4) * t207 + t150 * t236 - t167 * t206;
t22 = pkin(4) * t57 + pkin(9) * t56 + t50;
t231 = qJD(1) * qJD(2);
t216 = t168 * t231;
t142 = t161 * t216;
t138 = pkin(2) * t206;
t200 = pkin(8) * t165 - qJ(3) * t168;
t239 = qJD(3) * t165;
t174 = (qJD(2) * t200 - t239) * t161;
t49 = qJD(1) * t174 + t138;
t88 = (t283 * t253 + t155) * qJD(2);
t68 = qJD(1) * t88;
t189 = -t164 * t68 - t167 * t49 - t47 * t236 + t64 * t238;
t7 = pkin(9) * t142 - t189;
t1 = -qJD(5) * t198 + t163 * t22 + t166 * t7;
t98 = qJD(5) + t101;
t297 = t198 * t98 + t1;
t204 = pkin(4) * t167 + pkin(9) * t164;
t296 = -qJD(4) * t204 + (-t204 - t283) * t224 - t285;
t149 = pkin(2) * t224;
t85 = t200 * t245 + t149;
t41 = t164 * t87 + t167 * t85;
t295 = -pkin(9) * t223 + t169 * t236 - t41;
t28 = -t164 * t64 + t167 * t47;
t294 = -t28 * t199 - t189;
t286 = qJD(4) * t199;
t293 = -t169 * t286 + t50;
t158 = t161 ^ 2;
t292 = -0.2e1 * t158 * t231;
t6 = t163 * t30 + t166 * t24;
t2 = -qJD(5) * t6 - t163 * t7 + t166 * t22;
t291 = -t6 * t98 - t2;
t184 = t166 * t199;
t52 = t103 * t163 - t184;
t290 = t199 * t52;
t287 = t103 * t199;
t289 = -t57 + t287;
t288 = t101 * t199;
t54 = t166 * t103 + t163 * t199;
t261 = qJD(5) * t54;
t27 = -t166 * t142 - t163 * t56 + t261;
t214 = t164 * t49 - t167 * t68;
t10 = -qJD(4) * t29 - t214;
t240 = qJD(2) * t168;
t284 = (t165 * t59 + t169 * t240) * t245 + t59 * qJD(4);
t254 = t161 * t165;
t152 = pkin(7) * t254;
t225 = -pkin(2) - t279;
t67 = pkin(3) * t254 + t152 + (-pkin(8) + t225) * t162;
t273 = t164 * t67 + t167 * t83;
t146 = pkin(2) * t222;
t61 = t146 + t174;
t18 = -qJD(4) * t273 - t164 * t61 + t167 * t88;
t278 = t52 * t98;
t277 = t54 * t52;
t276 = t54 * t98;
t130 = pkin(4) * t164 - pkin(9) * t167 + qJ(3);
t252 = t164 * t169;
t100 = t130 * t163 + t166 * t252;
t275 = qJD(5) * t100 + t295 * t163 + t296 * t166;
t99 = t130 * t166 - t163 * t252;
t274 = -qJD(5) * t99 + t296 * t163 - t295 * t166;
t116 = t162 * t164 + t167 * t253;
t272 = t116 * t57;
t235 = qJD(5) * t163;
t26 = -qJD(5) * t184 + t103 * t235 - t163 * t142 + t166 * t56;
t271 = t163 * t26;
t270 = t163 * t52;
t269 = t163 * t54;
t268 = t163 * t57;
t267 = t163 * t98;
t266 = t164 * t57;
t265 = t166 * t27;
t264 = t166 * t52;
t263 = t166 * t54;
t262 = t166 * t57;
t260 = t103 * t101;
t114 = t247 * qJD(2);
t106 = qJD(1) * t114;
t259 = t106 * t165;
t258 = t112 * t150;
t257 = t114 * t165;
t255 = t158 * qJD(1) ^ 2;
t251 = t165 * t166;
t211 = t283 * t254;
t249 = qJD(1) * t211 + t285;
t159 = t165 ^ 2;
t246 = -t168 ^ 2 + t159;
t242 = qJD(2) * t164;
t237 = qJD(4) * t166;
t234 = qJD(5) * t166;
t233 = qJD(5) * t167;
t111 = pkin(7) * t224 - t147;
t232 = qJD(3) + t111;
t229 = qJD(4) * t267;
t228 = t98 * t237;
t227 = t168 * t255;
t226 = t164 * t253;
t107 = -t162 * qJ(3) - t247;
t221 = t161 * t240;
t212 = t166 * t98;
t210 = t29 * t224;
t82 = pkin(3) * t253 - t107;
t8 = -pkin(4) * t142 - t10;
t209 = pkin(9) * qJD(5) * t98 + t8;
t208 = t167 * t224;
t205 = pkin(1) * t292;
t203 = t163 * t6 - t166 * t198;
t202 = -t163 * t198 - t166 * t6;
t34 = pkin(9) * t254 + t273;
t117 = t162 * t167 - t226;
t39 = pkin(4) * t116 - pkin(9) * t117 + t82;
t14 = t163 * t39 + t166 * t34;
t13 = -t163 * t34 + t166 * t39;
t37 = -t164 * t83 + t167 * t67;
t40 = -t164 * t85 + t167 * t87;
t195 = t106 * t162 + t114 * t150;
t194 = t158 * t165 * t216;
t148 = qJD(2) * t230;
t113 = -pkin(7) * t222 + t148;
t91 = -t150 * t223 + t142;
t193 = -t98 * t234 - t268;
t192 = -t98 * t235 + t262;
t190 = -t117 * t163 + t161 * t251;
t78 = t117 * t166 + t163 * t254;
t17 = t164 * t88 + t167 * t61 + t67 * t236 - t83 * t238;
t187 = t199 * t54;
t23 = -pkin(4) * t199 - t28;
t186 = -pkin(9) * t57 + t98 * t23;
t183 = t167 * t199;
t181 = t199 * t161;
t180 = qJD(2) * t161 * (t150 + t244);
t108 = (-pkin(2) * t168 + t215) * t161;
t176 = qJD(1) * t181;
t156 = t162 * qJD(3);
t66 = -qJD(2) * t211 + t148 + t156;
t175 = (-qJ(3) * t240 - t239) * t161;
t173 = -qJD(5) * t203 + t1 * t166 - t163 * t2;
t172 = -t165 * t176 - t286;
t171 = t167 * t142 + t164 * t172;
t132 = t165 * t227;
t124 = -0.2e1 * t194;
t123 = 0.2e1 * t194;
t118 = -t152 + t230;
t115 = t246 * t255;
t110 = -qJ(3) * t223 + t149;
t109 = t225 * t162 + t152;
t104 = t246 * t292;
t97 = -t113 - t156;
t96 = (t163 * t168 + t164 * t251) * t245;
t95 = t163 * t164 * t224 - t166 * t223;
t94 = t150 * t163 - t166 * t208;
t93 = t150 * t166 + t163 * t208;
t92 = qJD(1) * t108;
t90 = (qJD(2) - t150) * t224;
t89 = t146 + t175;
t84 = -t143 - t112;
t81 = t168 * t180;
t80 = t165 * t180;
t79 = -pkin(2) * t150 + t232;
t76 = -qJD(4) * t226 + t162 * t236 - t167 * t222;
t75 = qJD(4) * t116 - t161 * t220;
t70 = qJD(1) * t175 + t138;
t65 = t92 * t224;
t46 = pkin(4) * t103 + pkin(9) * t101;
t35 = -pkin(4) * t223 - t40;
t33 = -pkin(4) * t254 - t37;
t32 = qJD(5) * t190 + t163 * t221 - t166 * t75;
t31 = qJD(5) * t78 - t163 * t75 - t166 * t221;
t25 = pkin(4) * t76 + pkin(9) * t75 + t66;
t16 = t163 * t46 + t166 * t28;
t15 = -t163 * t28 + t166 * t46;
t12 = -pkin(4) * t221 - t18;
t11 = pkin(9) * t221 + t17;
t4 = -qJD(5) * t14 - t11 * t163 + t166 * t25;
t3 = qJD(5) * t13 + t11 * t166 + t163 * t25;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, t104, t81, t124, -t80, 0, t165 * t205 - t195, -t113 * t150 + t162 * t248 + t168 * t205, (-t248 * t168 + t259 + (t111 * t168 - t112 * t165) * qJD(2) + (t113 * t168 + t257 + (-t118 * t168 - t165 * t247) * qJD(2)) * qJD(1)) * t161, -t106 * t118 + t111 * t114 + t112 * t113 - t247 * t248, 0, -t81, t80, t123, t104, t124, (t259 - t168 * t72 + (t165 * t84 + t168 * t79) * qJD(2) + (t257 - t168 * t97 + (t107 * t165 + t109 * t168) * qJD(2)) * qJD(1)) * t161, (-t92 * t241 + t168 * t70 + (-t108 * t241 + t168 * t89) * qJD(1)) * t161 + t195, -t150 * t97 - t162 * t72 + (-t92 * t240 - t165 * t70 + (-t108 * t240 - t165 * t89) * qJD(1)) * t161, t106 * t109 + t107 * t72 + t108 * t70 + t114 * t79 + t84 * t97 + t89 * t92, -t103 * t75 - t117 * t56, t101 * t75 - t103 * t76 + t116 * t56 - t117 * t57, -t75 * qJD(4) + (t103 * t240 - t56 * t165 + (t117 * t240 - t165 * t75) * qJD(1)) * t161, t101 * t76 + t272, -t76 * qJD(4) + (-t101 * t240 - t57 * t165 + (-t116 * t240 - t165 * t76) * qJD(1)) * t161, (t158 * t243 + t181) * t240, t18 * qJD(4) + t66 * t101 + t50 * t116 + t82 * t57 + t59 * t76 + (t28 * t240 + t10 * t165 + (t165 * t18 + t240 * t37) * qJD(1)) * t161, -t17 * qJD(4) + t66 * t103 + t50 * t117 - t82 * t56 - t59 * t75 + (-t29 * t240 + t189 * t165 + (-t165 * t17 - t240 * t273) * qJD(1)) * t161, -t10 * t117 - t101 * t17 - t103 * t18 + t116 * t189 - t273 * t57 + t28 * t75 - t29 * t76 + t37 * t56, t10 * t37 + t17 * t29 + t18 * t28 - t189 * t273 + t50 * t82 + t59 * t66, -t26 * t78 + t32 * t54, -t190 * t26 - t27 * t78 - t31 * t54 - t32 * t52, -t116 * t26 + t32 * t98 + t54 * t76 + t57 * t78, -t190 * t27 + t31 * t52, -t116 * t27 + t190 * t57 - t31 * t98 - t52 * t76, t76 * t98 + t272, t116 * t2 + t12 * t52 + t13 * t57 - t190 * t8 - t198 * t76 + t23 * t31 + t27 * t33 + t4 * t98, -t1 * t116 + t12 * t54 - t14 * t57 + t23 * t32 - t26 * t33 - t3 * t98 - t6 * t76 + t78 * t8, t1 * t190 + t13 * t26 - t14 * t27 + t198 * t32 - t2 * t78 - t3 * t52 - t31 * t6 - t4 * t54, t1 * t14 + t12 * t23 + t13 * t2 - t198 * t4 + t3 * t6 + t33 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132, t115, t91, t132, -t90, 0, -pkin(7) * t142 + t258 + (-t162 * t231 + t255) * t280, pkin(1) * t227 - t111 * t150 + t248, 0, 0, 0, -t91, t90, -t132, t115, t132, ((-qJ(3) * qJD(2) - t112 - t84) * t165 + (-pkin(2) * qJD(2) + t232 - t79) * t168) * t245, -t258 + t65 + (-t110 * t253 + t114) * qJD(1), t232 * t150 + (t110 * t165 + t168 * t92) * t245 - t72, -pkin(2) * t106 - qJ(3) * t72 - t110 * t92 - t112 * t79 - t232 * t84, -t164 * t287 - t167 * t56, (-t57 - t287) * t167 + (t56 + t288) * t164, -t103 * t223 + t171, t101 * t183 + t266, (t101 - t242) * t223 + t172 * t167, -t168 * t176, qJ(3) * t57 + t249 * t101 + t293 * t164 + t284 * t167 - t40 * t199 - t28 * t223, -qJ(3) * t56 + t249 * t103 - t284 * t164 + t293 * t167 + t41 * t199 + t29 * t223, t101 * t41 + t103 * t40 + (-t210 + t169 * t56 - t10 + (-t101 * t169 - t29) * qJD(4)) * t167 + (t28 * t224 - t169 * t57 + t189 + (t103 * t169 + t28) * qJD(4)) * t164, qJ(3) * t50 - t28 * t40 - t29 * t41 + t249 * t59 + (t10 * t167 - t164 * t189 + (-t164 * t28 + t167 * t29) * qJD(4)) * t169, -t166 * t167 * t26 + (-t163 * t233 - t164 * t237 - t96) * t54, t52 * t96 + t54 * t95 + (t264 + t269) * t238 + (t271 - t265 + (-t263 + t270) * qJD(5)) * t167, -t96 * t98 + (-t26 - t228) * t164 + (t187 + t192) * t167, t163 * t167 * t27 + (-t163 * t238 + t166 * t233 - t95) * t52, t95 * t98 + (-t27 + t229) * t164 + (t193 - t290) * t167, t183 * t98 + t266, -t23 * t95 - t35 * t52 + t57 * t99 - t275 * t98 + (t2 + (-t163 * t23 + t169 * t52) * qJD(4)) * t164 + (t163 * t8 - t169 * t27 - t198 * t199 + t23 * t234) * t167, -t100 * t57 - t23 * t96 - t35 * t54 + t274 * t98 + (-t1 + (-t166 * t23 + t169 * t54) * qJD(4)) * t164 + (t166 * t8 + t169 * t26 - t199 * t6 - t23 * t235) * t167, -t100 * t27 + t26 * t99 - t198 * t96 + t6 * t95 + t275 * t54 + t274 * t52 + t203 * t238 + (qJD(5) * t202 - t1 * t163 - t166 * t2) * t167, t1 * t100 + t2 * t99 - t23 * t35 - t274 * t6 + t275 * t198 + (-t167 * t8 + t23 * t238) * t169; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, t132, -t150 ^ 2 - t159 * t255, t150 * t84 + t106 + t65, 0, 0, 0, 0, 0, 0, -t150 * t101 + t171, -t164 * t142 - t150 * t103 + (-t199 * t224 - t286) * t167, (t56 - t288) * t167 + t289 * t164, -t150 * t59 + (t199 * t29 + t10) * t167 + t294 * t164, 0, 0, 0, 0, 0, 0, -t93 * t98 + (-t27 - t229) * t167 + (t193 + t290) * t164, t94 * t98 + (t26 - t228) * t167 + (t187 - t192) * t164, t52 * t94 + t54 * t93 + (-t264 + t269) * t236 + (-t271 - t265 + (t263 + t270) * qJD(5)) * t164, t198 * t93 - t6 * t94 + (-qJD(4) * t202 - t8) * t167 + (t199 * t23 + t173) * t164; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260, -t101 ^ 2 + t103 ^ 2, (t101 - t256) * qJD(4) + (-t219 + (t101 + t242) * t165) * t245, -t260, t289, t142, -t59 * t103 + t210 - t214, t59 * t101 - t294, 0, 0, t212 * t54 - t271, (-t26 - t278) * t166 + (-t27 - t276) * t163, -t103 * t54 + t212 * t98 + t268, t52 * t267 - t265, -t163 * t98 ^ 2 + t103 * t52 + t262, -t98 * t103, -pkin(4) * t27 + t103 * t198 - t15 * t98 + t163 * t186 - t166 * t209 - t29 * t52, pkin(4) * t26 + t103 * t6 + t16 * t98 + t163 * t209 + t166 * t186 - t29 * t54, t15 * t54 + t16 * t52 + ((-t27 + t261) * pkin(9) + t297) * t166 + ((qJD(5) * t52 - t26) * pkin(9) + t291) * t163, -pkin(4) * t8 + pkin(9) * t173 + t15 * t198 - t16 * t6 - t23 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t277, -t52 ^ 2 + t54 ^ 2, -t26 + t278, -t277, t276 - t27, t57, -t23 * t54 - t291, t23 * t52 - t297, 0, 0;];
tauc_reg = t5;
