% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRPRR16
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d4,d5]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:48
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRPRR16_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR16_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR16_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRPRR16_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRPRR16_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRPRR16_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:48:02
% EndTime: 2019-12-31 20:48:23
% DurationCPUTime: 22.19s
% Computational Cost: add. (105626->760), mult. (242162->1036), div. (0->0), fcn. (174984->10), ass. (0->522)
t1309 = cos(qJ(2));
t1301 = sin(pkin(5));
t1305 = sin(qJ(2));
t1433 = t1301 * t1305;
t1403 = qJD(1) * t1433;
t1410 = qJDD(1) * t1301;
t1264 = -qJD(2) * t1403 + t1309 * t1410;
t1302 = cos(pkin(5));
t1411 = t1302 * qJD(1) + qJD(2);
t1392 = t1411 * qJD(1);
t1380 = t1301 * t1392;
t1273 = t1305 * t1380;
t1238 = t1264 - t1273;
t1300 = t1309 ^ 2;
t1299 = t1301 ^ 2;
t1311 = qJD(1) ^ 2;
t1439 = t1299 * t1311;
t1404 = t1300 * t1439;
t1409 = t1411 ^ 2;
t1268 = -t1404 - t1409;
t1413 = t1309 * t1311;
t1440 = t1299 * t1305;
t1282 = t1413 * t1440;
t1294 = t1302 * qJDD(1) + qJDD(2);
t1467 = -t1294 - t1282;
t1415 = t1309 * t1467;
t1347 = t1268 * t1305 - t1415;
t1182 = t1301 * t1238 + t1302 * t1347;
t1421 = t1305 * t1467;
t1224 = -t1309 * t1268 - t1421;
t1306 = sin(qJ(1));
t1310 = cos(qJ(1));
t1505 = pkin(6) * (t1310 * t1182 - t1306 * t1224);
t1504 = pkin(6) * (t1306 * t1182 + t1310 * t1224);
t1263 = (qJD(1) * qJD(2) * t1309 + qJDD(1) * t1305) * t1301;
t1432 = t1301 * t1309;
t1406 = qJD(1) * t1432;
t1234 = t1406 * t1411 + t1263;
t1464 = t1305 ^ 2;
t1293 = t1464 * t1439;
t1246 = -t1293 - t1409;
t1262 = -t1282 + t1294;
t1420 = t1305 * t1262;
t1349 = t1246 * t1309 - t1420;
t1164 = -t1301 * t1234 + t1302 * t1349;
t1414 = t1309 * t1262;
t1211 = t1305 * t1246 + t1414;
t1503 = pkin(6) * (t1310 * t1164 - t1306 * t1211);
t1502 = pkin(6) * (t1306 * t1164 + t1310 * t1211);
t1428 = t1302 * t1238;
t1176 = t1301 * t1347 - t1428;
t1501 = pkin(7) * (t1176 * t1301 + t1182 * t1302);
t1162 = t1302 * t1234 + t1301 * t1349;
t1500 = pkin(7) * (t1162 * t1301 + t1164 * t1302);
t1499 = pkin(1) * t1162;
t1498 = pkin(1) * t1164;
t1497 = pkin(1) * t1176;
t1496 = pkin(1) * t1182;
t1274 = t1309 * t1380;
t1236 = -t1274 + t1263;
t1266 = -t1293 + t1409;
t1348 = t1266 * t1309 - t1421;
t1178 = -t1301 * t1236 + t1302 * t1348;
t1219 = -t1305 * t1266 - t1415;
t1493 = t1306 * t1178 - t1310 * t1219;
t1492 = t1310 * t1178 + t1306 * t1219;
t1237 = t1264 + t1273;
t1267 = t1404 - t1409;
t1346 = t1267 * t1305 + t1414;
t1180 = -t1301 * t1237 + t1302 * t1346;
t1222 = -t1309 * t1267 + t1420;
t1491 = t1306 * t1180 + t1310 * t1222;
t1490 = t1310 * t1180 - t1306 * t1222;
t1485 = pkin(7) * t1211;
t1484 = pkin(7) * t1224;
t1303 = sin(qJ(5));
t1304 = sin(qJ(4));
t1308 = cos(qJ(4));
t1253 = -t1304 * t1406 + t1308 * t1411;
t1284 = qJD(4) + t1403;
t1307 = cos(qJ(5));
t1227 = t1303 * t1253 - t1307 * t1284;
t1229 = t1307 * t1253 + t1303 * t1284;
t1185 = t1229 * t1227;
t1387 = -t1308 * t1264 - t1304 * t1294;
t1336 = t1253 * qJD(4) - t1387;
t1201 = qJDD(5) + t1336;
t1469 = -t1185 + t1201;
t1483 = t1303 * t1469;
t1251 = t1304 * t1411 + t1308 * t1406;
t1217 = t1253 * t1251;
t1256 = qJDD(4) + t1263;
t1468 = -t1217 + t1256;
t1482 = t1304 * t1468;
t1477 = t1307 * t1469;
t1476 = t1308 * t1468;
t1240 = t1284 * t1253;
t1165 = t1240 + t1336;
t1471 = 2 * qJD(3);
t1260 = pkin(3) * t1403 - pkin(8) * t1411;
t1285 = -0.2e1 * qJD(3) * t1403;
t1286 = t1306 * g(1) - t1310 * g(2);
t1455 = pkin(7) * t1301;
t1318 = qJDD(1) * pkin(1) + t1311 * t1455 + t1286;
t1271 = pkin(2) * t1273;
t1451 = t1302 * g(3);
t1396 = -t1271 + t1451;
t1342 = t1263 * qJ(3) + t1396;
t1393 = t1309 * t1411;
t1381 = qJ(3) * t1393;
t1463 = -pkin(2) - pkin(8);
t1112 = -pkin(3) * t1404 + t1285 + t1463 * t1264 + ((-t1305 * t1260 - t1381) * qJD(1) - t1318) * t1301 - t1342;
t1287 = t1310 * g(1) + t1306 * g(2);
t1258 = -t1311 * pkin(1) + pkin(7) * t1410 - t1287;
t1316 = t1302 * t1318;
t1388 = t1305 * t1258 - t1309 * t1316;
t1332 = -t1294 * pkin(2) - t1409 * qJ(3) + qJDD(3) + t1388;
t1460 = pkin(2) * t1309;
t1379 = qJ(3) * t1305 + t1460;
t1446 = qJD(1) * t1301;
t1259 = t1379 * t1446;
t1422 = t1305 * t1259;
t1450 = t1309 * g(3);
t1313 = t1263 * pkin(3) + t1467 * pkin(8) + (t1450 + (-pkin(3) * t1393 - t1422) * qJD(1)) * t1301 + t1332;
t1042 = t1308 * t1112 + t1304 * t1313;
t1215 = t1251 * pkin(4) - t1253 * pkin(9);
t1465 = t1284 ^ 2;
t1014 = -t1465 * pkin(4) + t1256 * pkin(9) - t1251 * t1215 + t1042;
t1315 = -g(3) * t1433 + t1305 * t1316;
t1314 = (-t1259 * t1446 + t1258) * t1309 - t1409 * pkin(2) + t1411 * t1471 + t1315;
t1139 = t1294 * qJ(3) + t1314;
t1111 = t1264 * pkin(3) - pkin(8) * t1404 + t1260 * t1411 + t1139;
t1203 = -t1251 * qJD(4) - t1304 * t1264 + t1308 * t1294;
t1239 = t1284 * t1251;
t1168 = t1203 - t1239;
t1033 = t1165 * pkin(4) - pkin(9) * t1168 + t1111;
t967 = t1303 * t1014 - t1307 * t1033;
t968 = t1307 * t1014 + t1303 * t1033;
t937 = t1303 * t967 + t1307 * t968;
t1407 = pkin(4) * t1308 + pkin(3);
t936 = t1303 * t968 - t1307 * t967;
t1470 = (pkin(9) * t1304 + t1407) * t936;
t1041 = t1304 * t1112 - t1308 * t1313;
t1391 = t1308 * t1041 - t1304 * t1042;
t1235 = t1274 + t1263;
t1247 = qJD(5) + t1251;
t1390 = -t1303 * t1203 + t1307 * t1256;
t1095 = (-qJD(5) + t1247) * t1229 + t1390;
t1353 = -t1307 * t1203 - t1303 * t1256;
t1132 = -t1227 * qJD(5) - t1353;
t1199 = t1247 * t1227;
t1097 = t1132 + t1199;
t1024 = t1303 * t1095 - t1307 * t1097;
t929 = -pkin(9) * t1024 - t936;
t1466 = -t1407 * t1024 + t1304 * t929;
t1174 = t1302 * t1237 + t1301 * t1346;
t1172 = t1302 * t1236 + t1301 * t1348;
t1225 = t1227 ^ 2;
t1226 = t1229 ^ 2;
t1245 = t1247 ^ 2;
t1249 = t1251 ^ 2;
t1250 = t1253 ^ 2;
t1462 = pkin(3) * t1391;
t1461 = pkin(2) * t1305;
t1167 = (-qJD(4) + t1284) * t1253 + t1387;
t1169 = t1203 + t1239;
t1100 = t1304 * t1167 - t1308 * t1169;
t1459 = pkin(3) * t1100;
t1458 = pkin(3) * t1111;
t1457 = pkin(4) * t1304;
t1270 = -t1293 - t1404;
t1350 = -t1236 * t1309 + t1237 * t1305;
t1154 = -t1301 * t1270 + t1302 * t1350;
t1188 = t1305 * t1236 + t1309 * t1237;
t1456 = pkin(6) * (t1310 * t1154 + t1306 * t1188);
t1454 = pkin(7) * t1302;
t1453 = pkin(9) * t1308;
t1452 = t1264 * pkin(2);
t1013 = -t1256 * pkin(4) - t1465 * pkin(9) + t1253 * t1215 + t1041;
t1448 = -pkin(4) * t1013 + pkin(9) * t937;
t1447 = t1024 * t1457 + t1308 * t929;
t1445 = t1238 * t1305;
t1444 = t1247 * t1303;
t1443 = t1247 * t1307;
t1442 = t1284 * t1304;
t1441 = t1284 * t1308;
t1434 = t1301 * t1294;
t1010 = t1303 * t1013;
t1124 = t1185 + t1201;
t1427 = t1303 * t1124;
t1425 = t1304 * t1111;
t1197 = t1217 + t1256;
t1424 = t1304 * t1197;
t1243 = t1301 * t1318 + t1451;
t1423 = t1305 * t1243;
t1011 = t1307 * t1013;
t1419 = t1307 * t1124;
t1109 = t1308 * t1111;
t1418 = t1308 * t1197;
t1417 = t1309 * t1238;
t1416 = t1309 * t1243;
t1412 = pkin(1) * t1154 + t1188 * t1455;
t1408 = t1305 * t1471;
t1405 = t1305 * t1217;
t1402 = t1304 * t1185;
t1401 = t1308 * t1185;
t1400 = t1309 * t1217;
t1171 = -t1226 - t1245;
t1070 = -t1303 * t1171 - t1419;
t1098 = (qJD(5) + t1247) * t1227 + t1353;
t1399 = pkin(4) * t1098 + pkin(9) * t1070 + t1010;
t1145 = -t1245 - t1225;
t1064 = t1307 * t1145 - t1483;
t1200 = t1247 * t1229;
t1335 = t1229 * qJD(5) - t1390;
t1094 = -t1200 - t1335;
t1398 = pkin(4) * t1094 + pkin(9) * t1064 - t1011;
t1152 = t1302 * t1270 + t1301 * t1350;
t1397 = -pkin(1) * t1152 + t1188 * t1454;
t1063 = t1303 * t1145 + t1477;
t957 = -pkin(4) * t1063 + t967;
t975 = -pkin(9) * t1063 + t1010;
t1395 = -t1304 * t957 + t1308 * t975;
t1069 = t1307 * t1171 - t1427;
t958 = -pkin(4) * t1069 + t968;
t978 = -pkin(9) * t1069 + t1011;
t1394 = -t1304 * t958 + t1308 * t978;
t980 = t1304 * t1041 + t1308 * t1042;
t1386 = -t1306 * t1286 - t1310 * t1287;
t1026 = t1307 * t1095 + t1303 * t1097;
t1134 = t1225 + t1226;
t1385 = pkin(4) * t1134 + pkin(9) * t1026 + t937;
t926 = -t1308 * t1013 + t1304 * t937;
t1384 = -pkin(3) * t926 - t1448;
t1218 = -t1250 - t1465;
t1137 = t1308 * t1218 - t1424;
t1383 = -pkin(3) * t1137 + t1042;
t1280 = t1310 * qJDD(1) - t1306 * t1311;
t1382 = -pkin(6) * t1280 - t1306 * g(3);
t1378 = pkin(3) * t1165 + t1109;
t1377 = pkin(3) * t1168 - t1425;
t1376 = -t1423 - t1485;
t1375 = t1416 - t1484;
t1374 = t1305 * t936 - t1309 * t926;
t1096 = t1132 - t1199;
t1023 = t1303 * t1094 + t1307 * t1096;
t1025 = t1307 * t1094 - t1303 * t1096;
t1184 = t1226 - t1225;
t999 = t1304 * t1025 - t1308 * t1184;
t1373 = t1023 * t1305 - t1309 * t999;
t991 = t1304 * t1026 + t1308 * t1134;
t1372 = t1024 * t1305 - t1309 * t991;
t1371 = t1111 * t1305 + t1309 * t1391;
t1006 = t1304 * t1064 + t1308 * t1094;
t1369 = -t1006 * t1309 + t1063 * t1305;
t1015 = t1304 * t1070 + t1308 * t1098;
t1368 = -t1015 * t1309 + t1069 * t1305;
t1195 = -t1226 + t1245;
t1081 = -t1303 * t1195 + t1477;
t1017 = t1304 * t1081 - t1308 * t1097;
t1079 = t1307 * t1195 + t1483;
t1367 = -t1017 * t1309 + t1079 * t1305;
t1194 = t1225 - t1245;
t1082 = t1307 * t1194 - t1427;
t1093 = -t1200 + t1335;
t1018 = t1304 * t1082 + t1308 * t1093;
t1080 = t1303 * t1194 + t1419;
t1366 = -t1018 * t1309 + t1080 * t1305;
t1088 = t1227 * t1443 + t1303 * t1335;
t1051 = t1304 * t1088 + t1401;
t1087 = -t1227 * t1444 + t1307 * t1335;
t1365 = -t1051 * t1309 - t1087 * t1305;
t1090 = t1307 * t1132 - t1229 * t1444;
t1052 = t1304 * t1090 - t1401;
t1089 = t1303 * t1132 + t1229 * t1443;
t1364 = -t1052 * t1309 + t1089 * t1305;
t1127 = (-t1227 * t1307 + t1229 * t1303) * t1247;
t1085 = t1304 * t1127 - t1308 * t1201;
t1126 = (-t1227 * t1303 - t1229 * t1307) * t1247;
t1363 = -t1085 * t1309 + t1126 * t1305;
t1099 = -t1304 * t1165 + t1308 * t1168;
t1216 = t1250 - t1249;
t1362 = -t1099 * t1309 + t1216 * t1305;
t1193 = -t1249 - t1250;
t1361 = -t1100 * t1309 + t1193 * t1305;
t1208 = -t1465 - t1249;
t1129 = t1304 * t1208 + t1476;
t1360 = -t1129 * t1309 + t1165 * t1305;
t1131 = -pkin(2) * t1270 + t1139;
t1147 = (-qJD(1) * t1422 + t1450) * t1301 + t1332;
t1135 = -qJ(3) * t1270 + t1147;
t1359 = t1131 * t1309 + t1135 * t1305;
t1358 = -t1137 * t1309 + t1168 * t1305;
t1357 = t1139 * t1305 - t1147 * t1309;
t1233 = -t1250 + t1465;
t1141 = t1308 * t1233 + t1482;
t1356 = -t1141 * t1309 + t1169 * t1305;
t1232 = t1249 - t1465;
t1142 = t1304 * t1232 + t1418;
t1166 = -t1240 + t1336;
t1355 = -t1142 * t1309 - t1166 * t1305;
t1190 = (-t1251 * t1304 - t1253 * t1308) * t1284;
t1354 = -t1190 * t1309 + t1256 * t1305;
t1209 = g(3) * t1432 + t1388;
t1210 = t1309 * t1258 + t1315;
t1352 = -t1309 * t1209 + t1305 * t1210;
t1136 = t1305 * t1209 + t1309 * t1210;
t1351 = t1235 * t1309 + t1445;
t1345 = t1310 * t1286 - t1306 * t1287;
t1344 = -pkin(3) * t1006 - t1398;
t1343 = -pkin(3) * t1015 - t1399;
t1341 = pkin(3) * t1193 - t980;
t1340 = -pkin(3) * t1129 + t1041;
t1339 = -pkin(3) * t991 - t1385;
t1157 = -t1251 * t1442 + t1308 * t1336;
t1338 = t1157 * t1309 - t1405;
t1159 = t1304 * t1203 + t1253 * t1441;
t1337 = -t1159 * t1309 + t1405;
t1334 = (-t1152 * t1301 - t1154 * t1302) * pkin(7);
t1333 = -t1302 * t1311 + t1392;
t927 = t1304 * t1013 + t1308 * t937;
t902 = t1463 * t927 + t1470;
t907 = -qJ(3) * t927 - t1384;
t913 = t1305 * t926 + t1309 * t936;
t1331 = pkin(7) * t913 + t1305 * t907 + t1309 * t902;
t992 = t1308 * t1026 - t1304 * t1134;
t912 = t1463 * t992 - t1466;
t916 = -qJ(3) * t992 - t1339;
t962 = t1309 * t1024 + t1305 * t991;
t1330 = pkin(7) * t962 + t1305 * t916 + t1309 * t912;
t1007 = t1308 * t1064 - t1304 * t1094;
t1326 = pkin(3) * t1063 - t1304 * t975 - t1308 * t957;
t918 = t1463 * t1007 + t1326;
t931 = -qJ(3) * t1007 - t1344;
t973 = t1305 * t1006 + t1309 * t1063;
t1329 = pkin(7) * t973 + t1305 * t931 + t1309 * t918;
t1016 = t1308 * t1070 - t1304 * t1098;
t1325 = pkin(3) * t1069 - t1304 * t978 - t1308 * t958;
t920 = t1463 * t1016 + t1325;
t933 = -qJ(3) * t1016 - t1343;
t977 = t1305 * t1015 + t1309 * t1069;
t1328 = pkin(7) * t977 + t1305 * t933 + t1309 * t920;
t941 = t1463 * t980 + t1458;
t946 = -qJ(3) * t980 - t1462;
t964 = t1309 * t1111 - t1305 * t1391;
t1327 = pkin(7) * t964 + t1305 * t946 + t1309 * t941;
t1074 = t1305 * t1129 + t1309 * t1165;
t1130 = t1308 * t1208 - t1482;
t983 = -qJ(3) * t1130 - t1340;
t988 = t1463 * t1130 + t1378;
t1324 = pkin(7) * t1074 + t1305 * t983 + t1309 * t988;
t1077 = t1305 * t1137 + t1168 * t1309;
t1138 = -t1304 * t1218 - t1418;
t984 = -qJ(3) * t1138 - t1383;
t996 = t1463 * t1138 + t1377;
t1323 = pkin(7) * t1077 + t1305 * t984 + t1309 * t996;
t1102 = t1308 * t1167 + t1304 * t1169;
t1028 = -qJ(3) * t1102 + t1459;
t1057 = t1305 * t1100 + t1309 * t1193;
t952 = t1463 * t1102 + t1341;
t1321 = pkin(7) * t1057 + t1028 * t1305 + t1309 * t952;
t1120 = t1452 + (qJD(1) * t1408 + t1318) * t1301 + (t1234 + t1235) * qJ(3) + t1396;
t1320 = t1120 * t1305 + t1234 * t1460 + t1485;
t1121 = t1271 + t1285 - t1235 * qJ(3) + (-t1264 - t1238) * pkin(2) - t1243;
t1319 = -qJ(3) * t1445 + t1121 * t1309 + t1484;
t1075 = t1309 * t1139 + t1305 * t1147;
t1140 = t1452 + ((t1381 + t1408) * qJD(1) + t1318) * t1301 + t1342;
t1317 = pkin(7) * t1075 + t1140 * t1379;
t1298 = t1301 * t1299;
t1279 = t1306 * qJDD(1) + t1310 * t1311;
t1278 = t1302 * t1294;
t1269 = t1293 - t1404;
t1265 = -pkin(6) * t1279 + t1310 * g(3);
t1242 = (t1300 + t1464) * t1411 * t1446;
t1231 = t1309 * t1263 - t1464 * t1380;
t1230 = -t1305 * t1264 - t1300 * t1380;
t1214 = t1310 * t1242 + t1306 * t1434;
t1213 = t1306 * t1242 - t1310 * t1434;
t1207 = (t1235 * t1302 + t1298 * t1413) * t1305;
t1206 = (t1299 * t1309 * t1333 + t1301 * t1263) * t1305;
t1205 = (t1301 * t1264 - t1333 * t1440) * t1309;
t1204 = (-t1298 * t1311 * t1305 + t1428) * t1309;
t1192 = -pkin(2) * t1236 + qJ(3) * t1237;
t1191 = (-t1251 * t1308 + t1253 * t1304) * t1284;
t1189 = -t1305 * t1235 + t1417;
t1160 = t1308 * t1203 - t1253 * t1442;
t1158 = t1251 * t1441 + t1304 * t1336;
t1156 = t1305 * t1190 + t1309 * t1256;
t1155 = -t1301 * t1269 + t1302 * t1351;
t1153 = t1302 * t1269 + t1301 * t1351;
t1151 = -t1306 * t1207 + t1310 * t1231;
t1150 = -t1306 * t1204 + t1310 * t1230;
t1149 = t1310 * t1207 + t1306 * t1231;
t1148 = t1310 * t1204 + t1306 * t1230;
t1144 = t1308 * t1232 - t1424;
t1143 = -t1304 * t1233 + t1476;
t1122 = pkin(2) * t1467 - qJ(3) * t1268 + t1147;
t1119 = t1305 * t1159 + t1400;
t1118 = -t1305 * t1157 - t1400;
t1117 = t1301 * t1243 + t1302 * t1352;
t1116 = -t1302 * t1243 + t1301 * t1352;
t1115 = -pkin(2) * t1246 + (t1294 + t1262) * qJ(3) + t1314;
t1108 = -t1301 * t1191 + t1302 * t1354;
t1107 = t1302 * t1191 + t1301 * t1354;
t1106 = -t1306 * t1155 + t1310 * t1189;
t1105 = t1310 * t1155 + t1306 * t1189;
t1103 = pkin(6) * (-t1306 * t1154 + t1310 * t1188);
t1101 = -t1308 * t1165 - t1304 * t1168;
t1086 = t1308 * t1127 + t1304 * t1201;
t1084 = t1305 * t1141 + t1309 * t1169;
t1083 = t1305 * t1142 - t1309 * t1166;
t1078 = -t1423 - t1501;
t1076 = -pkin(2) * t1147 + qJ(3) * t1139;
t1073 = -t1416 - t1500;
t1072 = t1301 * t1209 + t1302 * t1375 - t1497;
t1071 = -t1302 * t1209 + t1301 * t1375 + t1496;
t1067 = t1305 * t1099 + t1309 * t1216;
t1066 = t1301 * t1210 + t1302 * t1376 - t1499;
t1065 = -t1302 * t1210 + t1301 * t1376 + t1498;
t1061 = -t1301 * t1160 + t1302 * t1337;
t1060 = -t1301 * t1158 + t1302 * t1338;
t1059 = t1302 * t1160 + t1301 * t1337;
t1058 = t1302 * t1158 + t1301 * t1338;
t1056 = pkin(1) * t1117 + t1136 * t1455;
t1055 = -pkin(1) * t1116 + t1136 * t1454;
t1054 = t1308 * t1090 + t1402;
t1053 = t1308 * t1088 - t1402;
t1050 = t1136 * t1302 + t1397;
t1049 = t1136 * t1301 + t1412;
t1048 = -t1301 * t1143 + t1302 * t1356;
t1047 = -t1301 * t1144 + t1302 * t1355;
t1046 = t1302 * t1143 + t1301 * t1356;
t1045 = t1302 * t1144 + t1301 * t1355;
t1044 = (-t1116 * t1301 - t1117 * t1302) * pkin(7);
t1043 = t1334 - t1352;
t1038 = t1301 * t1140 + t1302 * t1357;
t1037 = -t1302 * t1140 + t1301 * t1357;
t1036 = -t1301 * t1138 + t1302 * t1358;
t1035 = t1302 * t1138 + t1301 * t1358;
t1034 = t1305 * t1085 + t1309 * t1126;
t1031 = -t1301 * t1130 + t1302 * t1360;
t1030 = t1302 * t1130 + t1301 * t1360;
t1029 = -qJ(3) * t1417 - t1305 * t1121 + t1501;
t1027 = t1309 * t1120 - t1234 * t1461 + t1500;
t1020 = t1308 * t1082 - t1304 * t1093;
t1019 = t1308 * t1081 + t1304 * t1097;
t1009 = -t1301 * t1101 + t1302 * t1362;
t1008 = t1302 * t1101 + t1301 * t1362;
t1005 = -t1301 * t1102 + t1302 * t1361;
t1004 = t1302 * t1102 + t1301 * t1361;
t1003 = -t1305 * t1131 + t1309 * t1135 + t1334;
t1002 = -t1301 * t1122 + t1302 * t1319 + t1497;
t1001 = t1302 * t1122 + t1301 * t1319 - t1496;
t1000 = t1308 * t1025 + t1304 * t1184;
t998 = t1305 * t1052 + t1309 * t1089;
t997 = t1305 * t1051 - t1309 * t1087;
t995 = qJ(3) * t1168 + t1463 * t1137 + t1109;
t994 = -t1301 * t1115 + t1302 * t1320 + t1499;
t993 = t1302 * t1115 + t1301 * t1320 - t1498;
t990 = -t1301 * t1192 + t1302 * t1359 + t1397;
t989 = t1302 * t1192 + t1301 * t1359 + t1412;
t987 = qJ(3) * t1165 + t1463 * t1129 + t1425;
t986 = -t1301 * t1086 + t1302 * t1363;
t985 = t1302 * t1086 + t1301 * t1363;
t982 = t1305 * t1018 + t1309 * t1080;
t981 = t1305 * t1017 + t1309 * t1079;
t972 = -t1301 * t1054 + t1302 * t1364;
t971 = -t1301 * t1053 + t1302 * t1365;
t970 = t1302 * t1054 + t1301 * t1364;
t969 = t1302 * t1053 + t1301 * t1365;
t963 = t1309 * t1023 + t1305 * t999;
t961 = (qJ(3) * t1309 - t1461) * t1140 + (-t1037 * t1301 - t1038 * t1302) * pkin(7);
t960 = -pkin(1) * t1037 - t1301 * t1076 + t1302 * t1317;
t959 = pkin(1) * t1038 + t1302 * t1076 + t1301 * t1317;
t956 = -t1301 * t1020 + t1302 * t1366;
t955 = -t1301 * t1019 + t1302 * t1367;
t954 = t1302 * t1020 + t1301 * t1366;
t953 = t1302 * t1019 + t1301 * t1367;
t951 = qJ(3) * t1193 + t1463 * t1100 + t1391;
t950 = -t1301 * t1016 + t1302 * t1368;
t949 = t1302 * t1016 + t1301 * t1368;
t948 = -t1301 * t1007 + t1302 * t1369;
t947 = t1302 * t1007 + t1301 * t1369;
t945 = -t1301 * t1000 + t1302 * t1373;
t944 = t1302 * t1000 + t1301 * t1373;
t943 = -t1301 * t992 + t1302 * t1372;
t942 = t1301 * t1372 + t1302 * t992;
t940 = qJ(3) * t1111 - t1391 * t1463;
t939 = -t1301 * t980 + t1302 * t1371;
t938 = t1301 * t1371 + t1302 * t980;
t934 = t936 * t1457;
t932 = -t1305 * t996 + t1309 * t984 + (-t1035 * t1301 - t1036 * t1302) * pkin(7);
t930 = -t1305 * t988 + t1309 * t983 + (-t1030 * t1301 - t1031 * t1302) * pkin(7);
t925 = -pkin(1) * t1035 - t1301 * t995 + t1302 * t1323;
t924 = pkin(1) * t1036 + t1301 * t1323 + t1302 * t995;
t923 = -pkin(1) * t1030 - t1301 * t987 + t1302 * t1324;
t922 = pkin(1) * t1031 + t1301 * t1324 + t1302 * t987;
t921 = t1309 * t1028 - t1305 * t952 + (-t1004 * t1301 - t1005 * t1302) * pkin(7);
t919 = qJ(3) * t1069 + t1463 * t1015 + t1394;
t917 = qJ(3) * t1063 + t1463 * t1006 + t1395;
t915 = -pkin(1) * t1004 - t1301 * t951 + t1302 * t1321;
t914 = pkin(1) * t1005 + t1301 * t1321 + t1302 * t951;
t911 = qJ(3) * t1024 + t1463 * t991 + t1447;
t910 = -t1301 * t927 + t1302 * t1374;
t909 = t1301 * t1374 + t1302 * t927;
t908 = -t1305 * t941 + t1309 * t946 + (-t1301 * t938 - t1302 * t939) * pkin(7);
t906 = -pkin(1) * t938 - t1301 * t940 + t1302 * t1327;
t905 = pkin(1) * t939 + t1301 * t1327 + t1302 * t940;
t904 = -t1305 * t920 + t1309 * t933 + (-t1301 * t949 - t1302 * t950) * pkin(7);
t903 = -t1305 * t918 + t1309 * t931 + (-t1301 * t947 - t1302 * t948) * pkin(7);
t901 = t934 + (qJ(3) - t1453) * t936 + t1463 * t926;
t900 = -pkin(1) * t949 - t1301 * t919 + t1302 * t1328;
t899 = pkin(1) * t950 + t1301 * t1328 + t1302 * t919;
t898 = -pkin(1) * t947 - t1301 * t917 + t1302 * t1329;
t897 = pkin(1) * t948 + t1301 * t1329 + t1302 * t917;
t896 = -t1305 * t912 + t1309 * t916 + (-t1301 * t942 - t1302 * t943) * pkin(7);
t895 = -pkin(1) * t942 - t1301 * t911 + t1302 * t1330;
t894 = pkin(1) * t943 + t1301 * t1330 + t1302 * t911;
t893 = -t1305 * t902 + t1309 * t907 + (-t1301 * t909 - t1302 * t910) * pkin(7);
t892 = -pkin(1) * t909 - t1301 * t901 + t1302 * t1331;
t891 = pkin(1) * t910 + t1301 * t1331 + t1302 * t901;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1280, 0, -t1279, 0, t1382, -t1265, -t1345, -pkin(6) * t1345, t1151, t1106, -t1493, t1150, -t1491, t1214, -t1306 * t1072 + t1310 * t1078 - t1505, -t1306 * t1066 + t1310 * t1073 - t1503, t1310 * t1043 - t1306 * t1050 - t1456, t1310 * t1044 - t1306 * t1055 - pkin(6) * (t1310 * t1117 + t1306 * t1136), t1214, t1493, t1491, t1151, t1106, t1150, t1310 * t1003 - t1306 * t990 - t1456, -t1306 * t1002 + t1310 * t1029 + t1505, t1310 * t1027 - t1306 * t994 + t1503, t1310 * t961 - t1306 * t960 - pkin(6) * (t1310 * t1038 + t1306 * t1075), -t1306 * t1061 + t1310 * t1119, -t1306 * t1009 + t1310 * t1067, -t1306 * t1048 + t1310 * t1084, -t1306 * t1060 + t1310 * t1118, -t1306 * t1047 + t1310 * t1083, -t1306 * t1108 + t1310 * t1156, t1310 * t930 - t1306 * t923 - pkin(6) * (t1310 * t1031 + t1306 * t1074), t1310 * t932 - t1306 * t925 - pkin(6) * (t1310 * t1036 + t1306 * t1077), t1310 * t921 - t1306 * t915 - pkin(6) * (t1310 * t1005 + t1306 * t1057), t1310 * t908 - t1306 * t906 - pkin(6) * (t1306 * t964 + t1310 * t939), -t1306 * t972 + t1310 * t998, -t1306 * t945 + t1310 * t963, -t1306 * t955 + t1310 * t981, -t1306 * t971 + t1310 * t997, -t1306 * t956 + t1310 * t982, t1310 * t1034 - t1306 * t986, t1310 * t903 - t1306 * t898 - pkin(6) * (t1306 * t973 + t1310 * t948), t1310 * t904 - t1306 * t900 - pkin(6) * (t1306 * t977 + t1310 * t950), t1310 * t896 - t1306 * t895 - pkin(6) * (t1306 * t962 + t1310 * t943), t1310 * t893 - t1306 * t892 - pkin(6) * (t1306 * t913 + t1310 * t910); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1279, 0, t1280, 0, t1265, t1382, t1386, pkin(6) * t1386, t1149, t1105, t1492, t1148, t1490, t1213, t1310 * t1072 + t1306 * t1078 - t1504, t1310 * t1066 + t1306 * t1073 - t1502, t1306 * t1043 + t1310 * t1050 + t1103, t1306 * t1044 + t1310 * t1055 + pkin(6) * (-t1306 * t1117 + t1310 * t1136), t1213, -t1492, -t1490, t1149, t1105, t1148, t1306 * t1003 + t1310 * t990 + t1103, t1310 * t1002 + t1306 * t1029 + t1504, t1306 * t1027 + t1310 * t994 + t1502, t1306 * t961 + t1310 * t960 + pkin(6) * (-t1306 * t1038 + t1310 * t1075), t1310 * t1061 + t1306 * t1119, t1310 * t1009 + t1306 * t1067, t1310 * t1048 + t1306 * t1084, t1310 * t1060 + t1306 * t1118, t1310 * t1047 + t1306 * t1083, t1310 * t1108 + t1306 * t1156, t1306 * t930 + t1310 * t923 + pkin(6) * (-t1306 * t1031 + t1310 * t1074), t1306 * t932 + t1310 * t925 + pkin(6) * (-t1306 * t1036 + t1310 * t1077), t1306 * t921 + t1310 * t915 + pkin(6) * (-t1306 * t1005 + t1310 * t1057), t1306 * t908 + t1310 * t906 + pkin(6) * (-t1306 * t939 + t1310 * t964), t1306 * t998 + t1310 * t972, t1306 * t963 + t1310 * t945, t1306 * t981 + t1310 * t955, t1306 * t997 + t1310 * t971, t1306 * t982 + t1310 * t956, t1306 * t1034 + t1310 * t986, t1306 * t903 + t1310 * t898 + pkin(6) * (-t1306 * t948 + t1310 * t973), t1306 * t904 + t1310 * t900 + pkin(6) * (-t1306 * t950 + t1310 * t977), t1306 * t896 + t1310 * t895 + pkin(6) * (-t1306 * t943 + t1310 * t962), t1306 * t893 + t1310 * t892 + pkin(6) * (-t1306 * t910 + t1310 * t913); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1286, t1287, 0, 0, t1206, t1153, t1172, t1205, t1174, t1278, t1071, t1065, t1049, t1056, t1278, -t1172, -t1174, t1206, t1153, t1205, t989, t1001, t993, t959, t1059, t1008, t1046, t1058, t1045, t1107, t922, t924, t914, t905, t970, t944, t953, t969, t954, t985, t897, t899, t894, t891; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1311, 0, 0, -g(3), -t1286, 0, t1231, t1189, t1219, t1230, -t1222, t1242, t1078, t1073, t1043, t1044, t1242, -t1219, t1222, t1231, t1189, t1230, t1003, t1029, t1027, t961, t1119, t1067, t1084, t1118, t1083, t1156, t930, t932, t921, t908, t998, t963, t981, t997, t982, t1034, t903, t904, t896, t893; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1311, 0, qJDD(1), 0, g(3), 0, -t1287, 0, t1207, t1155, t1178, t1204, t1180, -t1434, t1072, t1066, t1050, t1055, -t1434, -t1178, -t1180, t1207, t1155, t1204, t990, t1002, t994, t960, t1061, t1009, t1048, t1060, t1047, t1108, t923, t925, t915, t906, t972, t945, t955, t971, t956, t986, t898, t900, t895, t892; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1286, t1287, 0, 0, t1206, t1153, t1172, t1205, t1174, t1278, t1071, t1065, t1049, t1056, t1278, -t1172, -t1174, t1206, t1153, t1205, t989, t1001, t993, t959, t1059, t1008, t1046, t1058, t1045, t1107, t922, t924, t914, t905, t970, t944, t953, t969, t954, t985, t897, t899, t894, t891; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1263, t1238, -t1467, -t1274, t1267, t1274, 0, -t1243, t1209, 0, t1274, t1467, -t1267, t1263, t1238, -t1274, t1135, -qJ(3) * t1238, t1120, qJ(3) * t1140, t1217, t1216, t1169, -t1217, -t1166, t1256, t983, t984, t1028, t946, t1089, t1023, t1079, -t1087, t1080, t1126, t931, t933, t916, t907; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1273, t1235, t1266, t1264, t1262, -t1273, t1243, 0, t1210, 0, -t1273, -t1266, -t1262, t1273, t1235, t1264, t1131, t1121, pkin(2) * t1234, pkin(2) * t1140, -t1159, -t1099, -t1141, t1157, -t1142, -t1190, t988, t996, t952, t941, -t1052, -t999, -t1017, -t1051, -t1018, -t1085, t918, t920, t912, t902; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1282, t1269, t1236, t1282, t1237, t1294, -t1209, -t1210, 0, 0, t1294, -t1236, -t1237, -t1282, t1269, t1282, t1192, t1122, t1115, t1076, t1160, t1101, t1143, t1158, t1144, t1191, t987, t995, t951, t940, t1054, t1000, t1019, t1053, t1020, t1086, t917, t919, t911, t901; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1294, -t1236, -t1237, -t1282, t1269, t1282, 0, t1147, t1139, 0, t1160, t1101, t1143, t1158, t1144, t1191, -pkin(8) * t1129 + t1425, -pkin(8) * t1137 + t1109, -pkin(8) * t1100 + t1391, pkin(8) * t1391, t1054, t1000, t1019, t1053, t1020, t1086, -pkin(8) * t1006 + t1395, -pkin(8) * t1015 + t1394, -pkin(8) * t991 + t1447, -pkin(8) * t926 - t1453 * t936 + t934; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1274, -t1467, t1267, -t1263, -t1238, t1274, -t1147, 0, -t1140, 0, -t1217, -t1216, -t1169, t1217, t1166, -t1256, t1340, t1383, -t1459, t1462, -t1089, -t1023, -t1079, t1087, -t1080, -t1126, t1344, t1343, t1339, t1384; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1273, t1266, t1262, -t1273, -t1235, -t1264, -t1139, t1140, 0, 0, t1159, t1099, t1141, -t1157, t1142, t1190, pkin(8) * t1130 - t1378, pkin(8) * t1138 - t1377, pkin(8) * t1102 - t1341, pkin(8) * t980 - t1458, t1052, t999, t1017, t1051, t1018, t1085, pkin(8) * t1007 - t1326, pkin(8) * t1016 - t1325, pkin(8) * t992 + t1466, pkin(8) * t927 - t1470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1203, -t1165, t1468, t1239, t1232, -t1239, 0, t1111, t1041, 0, t1090, t1025, t1081, t1088, t1082, t1127, t975, t978, t929, -pkin(9) * t936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1240, t1168, t1233, -t1336, t1197, -t1240, -t1111, 0, t1042, 0, -t1185, -t1184, -t1097, t1185, t1093, -t1201, t957, t958, -pkin(4) * t1024, -pkin(4) * t936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1217, t1216, t1169, -t1217, -t1166, t1256, -t1041, -t1042, 0, 0, t1089, t1023, t1079, -t1087, t1080, t1126, t1398, t1399, t1385, t1448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1132, t1094, t1469, t1199, t1194, -t1199, 0, t1013, t967, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1200, t1096, t1195, -t1335, t1124, -t1200, -t1013, 0, t968, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1185, t1184, t1097, -t1185, -t1093, t1201, -t967, -t968, 0, 0;];
m_new_reg = t1;
