% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 20:52
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPP2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RRRPP2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 20:52:04
% EndTime: 2019-12-31 20:52:08
% DurationCPUTime: 2.44s
% Computational Cost: add. (1550->288), mult. (2927->276), div. (0->0), fcn. (2123->4), ass. (0->194)
t149 = sin(qJ(3));
t151 = cos(qJ(3));
t143 = t151 * pkin(4);
t141 = t149 * qJ(4);
t205 = -t151 * pkin(3) - t141;
t195 = pkin(2) - t205;
t88 = t143 + t195;
t235 = t88 * t149;
t152 = cos(qJ(2));
t247 = t152 * pkin(1);
t129 = -pkin(2) - t247;
t87 = t129 + t205;
t73 = t143 - t87;
t239 = t73 * t149;
t246 = t239 / 0.2e1 + t235 / 0.2e1;
t153 = -pkin(3) - pkin(4);
t220 = t153 * t149;
t221 = t151 * qJ(4);
t96 = t221 + t220;
t78 = t96 * t151;
t257 = t246 - t78;
t249 = t149 * pkin(3);
t107 = -t221 + t249;
t225 = t107 * t151;
t74 = t87 * t149;
t97 = t195 * t149;
t244 = t74 / 0.2e1 - t97 / 0.2e1;
t256 = t244 - t225;
t147 = t149 ^ 2;
t148 = t151 ^ 2;
t123 = t148 + t147;
t200 = t151 * qJD(4);
t255 = t205 * qJD(3) + t200;
t198 = qJD(1) + qJD(2);
t196 = -pkin(3) / 0.2e1 - pkin(4) / 0.2e1;
t56 = t221 + (t153 / 0.2e1 + t196) * t149;
t254 = t198 * t56;
t187 = pkin(2) / 0.2e1 - t129 / 0.2e1;
t253 = t187 * t149;
t252 = t198 * t123;
t124 = t148 - t147;
t251 = t198 * t124;
t250 = pkin(2) * t151;
t150 = sin(qJ(2));
t248 = t150 * pkin(1);
t3 = t73 * t96;
t6 = t96 * t88;
t242 = pkin(1) * qJD(1);
t241 = pkin(1) * qJD(2);
t240 = t3 * qJD(1);
t238 = t73 * t151;
t237 = t87 * t107;
t236 = t87 * t151;
t234 = t88 * t151;
t128 = pkin(7) + t248;
t140 = t149 * qJ(5);
t90 = t149 * t128 - t140;
t233 = t90 * t149;
t142 = t151 * qJ(5);
t91 = t151 * t128 - t142;
t232 = t91 * t151;
t110 = t123 * qJD(5);
t174 = t123 * t152;
t89 = pkin(1) * t174;
t211 = t89 * qJD(2);
t231 = t110 - t211;
t137 = t149 * qJD(4);
t230 = t56 * qJD(3) + t137;
t229 = t195 * t151;
t106 = t149 * pkin(7) - t140;
t228 = t106 * t149;
t227 = t107 * t195;
t226 = t107 * t149;
t108 = t151 * pkin(7) - t142;
t224 = t108 * t151;
t28 = t232 + t233;
t12 = (-t150 * t73 + t28 * t152) * pkin(1);
t223 = t12 * qJD(1);
t222 = t129 * t151;
t171 = t128 * t174;
t22 = (t150 * t87 + t171) * pkin(1);
t219 = t22 * qJD(1);
t77 = t96 * t149;
t25 = t77 + t238;
t218 = t25 * qJD(1);
t26 = t78 - t239;
t217 = t26 * qJD(1);
t216 = t28 * qJD(1);
t29 = (t129 * t150 + t171) * pkin(1);
t215 = t29 * qJD(1);
t34 = t226 + t236;
t214 = t34 * qJD(1);
t35 = -t74 + t225;
t213 = t35 * qJD(1);
t212 = t89 * qJD(1);
t210 = t91 * qJD(3);
t192 = t150 * t242;
t118 = t149 * t192;
t135 = t147 * qJD(4);
t209 = t118 + t135;
t119 = t151 * t192;
t125 = t149 * t200;
t208 = t119 + t125;
t207 = t123 * pkin(7) * t247;
t194 = t150 * t241;
t120 = t149 * t194;
t206 = t135 - t120;
t204 = qJD(1) * t149;
t203 = qJD(2) * t149;
t202 = t108 * qJD(3);
t201 = t124 * qJD(3);
t138 = t149 * qJD(3);
t139 = t151 * qJD(3);
t199 = t151 * qJD(5);
t193 = pkin(7) * t138;
t191 = pkin(7) * t139;
t190 = -t248 / 0.2e1;
t189 = -t247 / 0.2e1;
t188 = t247 / 0.2e1;
t186 = -t88 / 0.2e1 - t73 / 0.2e1;
t185 = t73 * t204;
t184 = qJD(1) * t237;
t183 = t87 * t204;
t182 = -t195 / 0.2e1 + t87 / 0.2e1;
t181 = -t118 + t206;
t180 = t129 * t204;
t179 = qJD(1) * t222;
t178 = t128 * t138;
t177 = t128 * t139;
t176 = t221 / 0.2e1;
t175 = pkin(1) * t198;
t173 = (-t153 * t151 + t141) * qJD(3) - t200;
t105 = t198 * t151;
t172 = t151 * t194;
t155 = (t176 + t220 / 0.2e1) * t247;
t1 = t186 * t96 + t155;
t170 = -t1 * qJD(1) + t6 * qJD(2);
t30 = t77 + t234;
t116 = t151 * t188;
t8 = t186 * t151 + t116 - t77;
t169 = -t8 * qJD(1) + t30 * qJD(2);
t31 = t78 - t235;
t115 = t149 * t189;
t7 = t115 + t257;
t168 = t7 * qJD(1) - t31 * qJD(2);
t4 = t190 + (t108 / 0.2e1 + t91 / 0.2e1) * t151 + (t106 / 0.2e1 + t90 / 0.2e1) * t149;
t40 = t224 + t228;
t167 = -t4 * qJD(1) - t40 * qJD(2);
t16 = t115 - t256;
t38 = t97 + t225;
t166 = t16 * qJD(1) + t38 * qJD(2);
t17 = t182 * t151 + t116 + t226;
t37 = t226 - t229;
t165 = t17 * qJD(1) + t37 * qJD(2);
t164 = qJD(3) * t107 - t137;
t163 = t125 - t172;
t51 = t115 + t253;
t162 = pkin(2) * t203 + t51 * qJD(1);
t117 = t151 * t189;
t52 = t187 * t151 + t117;
t161 = t52 * qJD(1) + qJD(2) * t250;
t114 = t149 * t188;
t20 = t114 - t246;
t160 = t20 * qJD(1) - t88 * t203;
t156 = (t176 - t249 / 0.2e1) * t247;
t13 = -t182 * t107 + t156;
t159 = t13 * qJD(1) + qJD(2) * t227;
t23 = t114 + t244;
t158 = t23 * qJD(1) - t195 * t203;
t157 = -t119 + t163;
t146 = qJ(4) * qJD(4);
t145 = qJD(3) * qJ(4);
t136 = t149 * qJD(5);
t126 = t149 * t139;
t104 = t198 * t149;
t103 = t198 * t147;
t83 = t149 * t105;
t75 = -t220 / 0.2e1 + t196 * t149;
t72 = t75 * qJD(3);
t71 = t75 * qJD(5);
t54 = -t250 / 0.2e1 + t222 / 0.2e1 + t117;
t53 = t115 - t253;
t47 = t56 * qJD(5);
t33 = t212 + t211;
t24 = t114 - t244;
t21 = t114 + t246;
t19 = t115 + t256;
t18 = -t226 - t236 / 0.2e1 + t116 + t229 / 0.2e1;
t15 = -t227 / 0.2e1 + t237 / 0.2e1 + t156;
t10 = t115 - t257;
t9 = t77 + t234 / 0.2e1 + t238 / 0.2e1 + t116;
t5 = -t224 / 0.2e1 - t232 / 0.2e1 - t228 / 0.2e1 - t233 / 0.2e1 + t190;
t2 = t6 / 0.2e1 + t3 / 0.2e1 + t155;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194, -t152 * t241, 0, 0, t126, t201, 0, -t126, 0, 0, t129 * t138 - t172, t129 * t139 + t120, t211, t29 * qJD(2), t126, 0, -t201, 0, 0, -t126, -t35 * qJD(3) + t163, t211, -t34 * qJD(3) + t206, t22 * qJD(2) + t164 * t87, t126, -t201, 0, -t126, 0, 0, t26 * qJD(3) + t163, t25 * qJD(3) + t206, t231, t12 * qJD(2) + t3 * qJD(3) - t28 * qJD(5) + t137 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150 * t175, -t152 * t175, 0, 0, t126, t201, 0, -t126, 0, 0, t53 * qJD(3) - t119 - t172, t54 * qJD(3) + t118 + t120, t33, t215 + (-pkin(2) * t248 + t207) * qJD(2), t126, 0, -t201, 0, 0, -t126, t19 * qJD(3) + t157, t33, t18 * qJD(3) + t181, t219 + (-t195 * t248 + t207) * qJD(2) + t15 * qJD(3) + t24 * qJD(4), t126, -t201, 0, -t126, 0, 0, t10 * qJD(3) + t157, t9 * qJD(3) + t181, -t212 + t231, t223 + t2 * qJD(3) + t21 * qJD(4) + t5 * qJD(5) + (-t150 * t88 + t152 * t40) * t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t251, t139, -t83, -t138, 0, t53 * qJD(2) - t177 + t180, t54 * qJD(2) + t178 + t179, 0, 0, t83, t139, -t251, 0, t138, -t83, t19 * qJD(2) - t177 - t213, t255, t18 * qJD(2) - t178 - t214, t15 * qJD(2) + t128 * t255 + t184, t83, -t251, -t139, -t83, -t138, 0, t10 * qJD(2) - t210 + t217, t9 * qJD(2) - t90 * qJD(3) + t218, t173, t240 + t2 * qJD(2) + (-t90 * qJ(4) + t91 * t153) * qJD(3) + t91 * qJD(4) + t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t139, t103, t24 * qJD(2) + t177 - t183, 0, 0, 0, 0, 0, 0, t83, t103, -t139, t21 * qJD(2) + t185 + t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t5 * qJD(2) - t216 + t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, t152 * t242, 0, 0, t126, t201, 0, -t126, 0, 0, -t51 * qJD(3) + t119, -t52 * qJD(3) - t118, -t212, -t215, t126, 0, -t201, 0, 0, -t126, -t16 * qJD(3) + t208, -t212, -t17 * qJD(3) + t209, -t13 * qJD(3) - t23 * qJD(4) - t219, t126, -t201, 0, -t126, 0, 0, -t7 * qJD(3) + t208, -t8 * qJD(3) + t209, t212 + t110, -t1 * qJD(3) - t20 * qJD(4) - t4 * qJD(5) - t223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, t201, 0, -t126, 0, 0, -pkin(2) * t138, -pkin(2) * t139, 0, 0, t126, 0, -t201, 0, 0, -t126, -t38 * qJD(3) + t125, 0, -t37 * qJD(3) + t135, -t164 * t195, t126, -t201, 0, -t126, 0, 0, t31 * qJD(3) + t125, t30 * qJD(3) + t135, t110, t6 * qJD(3) - t40 * qJD(5) + t137 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t251, t139, -t83, -t138, 0, -t162 - t191, -t161 + t193, 0, 0, t83, t139, -t251, 0, t138, -t83, -t166 - t191, t255, -t165 - t193, pkin(7) * t255 - t159, t83, -t251, -t139, -t83, -t138, 0, -t168 - t202, -t106 * qJD(3) + t169, t173, (-t106 * qJ(4) + t108 * t153) * qJD(3) + t108 * qJD(4) + t71 + t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, t139, t103, -t158 + t191, 0, 0, 0, 0, 0, 0, t83, t103, -t139, -t160 + t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t167 + t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, -t251, 0, t83, 0, 0, t51 * qJD(2) - t180, t52 * qJD(2) - t179, 0, 0, -t83, 0, t251, 0, 0, t83, t16 * qJD(2) + t213, 0, t17 * qJD(2) + t214, t13 * qJD(2) - t184, -t83, t251, 0, t83, 0, 0, t7 * qJD(2) + t136 - t217, t8 * qJD(2) - t199 - t218, 0, t1 * qJD(2) - t240 - t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, -t251, 0, t83, 0, 0, t162, t161, 0, 0, -t83, 0, t251, 0, 0, t83, t166, 0, t165, t159, -t83, t251, 0, t83, 0, 0, t136 + t168, -t169 - t199, 0, -t170 - t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t146, 0, 0, 0, 0, 0, 0, 0, qJD(4), 0, t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t145, 0, 0, 0, 0, 0, 0, 0, qJD(3), 0, t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t105, 0, -t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, 0, -t103, t23 * qJD(2) + t183, 0, 0, 0, 0, 0, 0, -t83, -t103, 0, t20 * qJD(2) - t136 - t185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t83, 0, -t103, t158, 0, 0, 0, 0, 0, 0, -t83, -t103, 0, -t136 + t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t145, 0, 0, 0, 0, 0, 0, 0, -qJD(3), 0, -t145; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t138, t139, -t252, t4 * qJD(2) + t216 + t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t138, t139, -t252, -t167 + t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t104, t105, 0, t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t11;
