% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRPR10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,alpha2,d1,d2,d3,d5,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:31
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRPR10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR10_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR10_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR10_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S5RRRPR10_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:30:46
% EndTime: 2019-12-31 21:31:22
% DurationCPUTime: 37.06s
% Computational Cost: add. (328476->880), mult. (732203->1333), div. (0->0), fcn. (584205->12), ass. (0->627)
t1567 = sin(qJ(3));
t1572 = cos(qJ(2));
t1563 = sin(pkin(5));
t1568 = sin(qJ(2));
t1707 = t1563 * t1568;
t1675 = qJD(1) * t1707;
t1678 = qJDD(1) * t1563;
t1532 = -qJD(2) * t1675 + t1572 * t1678;
t1526 = -qJDD(3) + t1532;
t1571 = cos(qJ(3));
t1565 = cos(pkin(5));
t1703 = t1565 * qJD(1);
t1665 = qJD(2) + t1703;
t1523 = t1567 * t1665 + t1571 * t1675;
t1606 = t1567 * t1675 - t1571 * t1665;
t1592 = t1523 * t1606;
t1732 = -t1526 - t1592;
t1738 = t1567 * t1732;
t1737 = t1571 * t1732;
t1562 = sin(pkin(10));
t1564 = cos(pkin(10));
t1490 = t1562 * t1523 + t1564 * t1606;
t1492 = t1564 * t1523 - t1562 * t1606;
t1428 = t1492 * t1490;
t1729 = -t1428 - t1526;
t1736 = t1562 * t1729;
t1735 = t1564 * t1729;
t1566 = sin(qJ(5));
t1706 = t1563 * t1572;
t1670 = qJD(1) * t1706;
t1549 = -qJD(3) + t1670;
t1570 = cos(qJ(5));
t1462 = t1566 * t1492 + t1570 * t1549;
t1464 = t1570 * t1492 - t1566 * t1549;
t1403 = t1464 * t1462;
t1677 = t1568 * qJDD(1);
t1717 = qJD(1) * t1572;
t1531 = (qJD(2) * t1717 + t1677) * t1563;
t1658 = t1565 * qJDD(1) + qJDD(2);
t1475 = -qJD(3) * t1606 + t1571 * t1531 + t1567 * t1658;
t1589 = -t1567 * t1531 + t1571 * t1658;
t1581 = -t1523 * qJD(3) + t1589;
t1661 = t1562 * t1475 - t1564 * t1581;
t1413 = qJDD(5) + t1661;
t1730 = -t1403 + t1413;
t1734 = t1566 * t1730;
t1733 = t1570 * t1730;
t1713 = t1549 * t1492;
t1388 = t1661 - t1713;
t1605 = t1606 ^ 2;
t1657 = t1665 ^ 2;
t1559 = t1563 ^ 2;
t1574 = qJD(1) ^ 2;
t1710 = t1559 * t1574;
t1649 = t1665 * qJD(1);
t1731 = t1559 * (-t1565 * t1574 + t1649);
t1716 = qJD(4) * t1490;
t1483 = -0.2e1 * t1716;
t1569 = sin(qJ(1));
t1573 = cos(qJ(1));
t1551 = t1569 * g(1) - t1573 * g(2);
t1721 = pkin(7) * t1563;
t1587 = qJDD(1) * pkin(1) + t1574 * t1721 + t1551;
t1610 = t1568 * t1649;
t1611 = t1572 * t1649;
t1719 = t1565 * g(3);
t1720 = t1531 * pkin(8);
t1577 = -t1532 * pkin(2) - t1720 - t1719 + (pkin(2) * t1610 - pkin(8) * t1611 - t1587) * t1563;
t1552 = t1573 * g(1) + t1569 * g(2);
t1527 = -t1574 * pkin(1) + pkin(7) * t1678 - t1552;
t1725 = pkin(2) * t1572;
t1653 = -pkin(8) * t1568 - t1725;
t1718 = qJD(1) * t1563;
t1530 = t1653 * t1718;
t1584 = t1565 * t1587;
t1580 = -g(3) * t1707 + t1568 * t1584;
t1579 = pkin(8) * t1658 + t1580;
t1578 = -t1657 * pkin(2) + (t1530 * t1718 + t1527) * t1572 + t1579;
t1372 = t1567 * t1577 + t1571 * t1578;
t1501 = -t1549 * pkin(3) - t1523 * qJ(4);
t1321 = -pkin(3) * t1605 + qJ(4) * t1581 + t1549 * t1501 + t1372;
t1371 = t1567 * t1578 - t1571 * t1577;
t1509 = t1606 * t1549;
t1728 = t1509 - t1475;
t1576 = pkin(3) * t1732 + qJ(4) * t1728 - t1371;
t1680 = t1564 * t1321 + t1562 * t1576;
t1236 = t1483 + t1680;
t1422 = t1490 * pkin(4) - t1492 * pkin(9);
t1525 = t1549 ^ 2;
t1211 = -t1525 * pkin(4) - t1526 * pkin(9) - t1490 * t1422 + t1236;
t1660 = t1568 * t1527 - t1572 * t1584;
t1435 = -t1658 * pkin(2) - t1657 * pkin(8) + (qJD(1) * t1530 * t1568 + g(3) * t1572) * t1563 + t1660;
t1351 = -t1581 * pkin(3) - t1605 * qJ(4) + t1523 * t1501 + qJDD(4) + t1435;
t1417 = t1564 * t1475 + t1562 * t1581;
t1471 = t1490 * t1549;
t1391 = t1471 + t1417;
t1251 = t1388 * pkin(4) - pkin(9) * t1391 + t1351;
t1172 = t1566 * t1211 - t1570 * t1251;
t1173 = t1570 * t1211 + t1566 * t1251;
t1129 = t1566 * t1172 + t1570 * t1173;
t1446 = t1509 + t1475;
t1539 = t1563 * t1610;
t1508 = t1532 - t1539;
t1460 = t1462 ^ 2;
t1461 = t1464 ^ 2;
t1487 = qJD(5) + t1490;
t1486 = t1487 ^ 2;
t1488 = t1490 ^ 2;
t1489 = t1492 ^ 2;
t1522 = t1523 ^ 2;
t1727 = 0.2e1 * qJD(4);
t1726 = pkin(2) * t1568;
t1664 = t1562 * t1321 - t1564 * t1576;
t1235 = t1492 * t1727 + t1664;
t1174 = -t1564 * t1235 + t1562 * t1236;
t1724 = pkin(3) * t1174;
t1389 = t1661 + t1713;
t1392 = -t1471 + t1417;
t1299 = -t1389 * t1562 - t1564 * t1392;
t1723 = pkin(3) * t1299;
t1722 = pkin(4) * t1562;
t1715 = t1487 * t1566;
t1714 = t1487 * t1570;
t1712 = t1549 * t1562;
t1711 = t1549 * t1564;
t1709 = t1562 * t1351;
t1410 = -t1428 + t1526;
t1708 = t1562 * t1410;
t1705 = t1564 * t1351;
t1704 = t1564 * t1410;
t1702 = t1565 * t1568;
t1210 = t1526 * pkin(4) - t1525 * pkin(9) + (t1727 + t1422) * t1492 + t1664;
t1207 = t1566 * t1210;
t1340 = t1403 + t1413;
t1701 = t1566 * t1340;
t1700 = t1567 * t1174;
t1699 = t1567 * t1435;
t1466 = t1526 - t1592;
t1698 = t1567 * t1466;
t1697 = t1567 * t1523;
t1438 = -t1509 * t1571 - t1567 * t1581;
t1696 = t1568 * t1438;
t1440 = t1571 * t1475 + t1549 * t1697;
t1695 = t1568 * t1440;
t1512 = t1563 * t1587 + t1719;
t1694 = t1568 * t1512;
t1693 = t1568 * t1526;
t1548 = t1572 * t1568 * t1710;
t1528 = -t1548 + t1658;
t1692 = t1568 * t1528;
t1529 = t1548 + t1658;
t1691 = t1568 * t1529;
t1208 = t1570 * t1210;
t1690 = t1570 * t1340;
t1689 = t1571 * t1174;
t1688 = t1571 * t1435;
t1687 = t1571 * t1466;
t1686 = t1571 * t1523;
t1685 = t1572 * t1512;
t1684 = t1572 * t1527;
t1683 = t1572 * t1528;
t1682 = t1572 * t1529;
t1681 = -pkin(4) * t1210 + pkin(9) * t1129;
t1560 = t1568 ^ 2;
t1561 = t1572 ^ 2;
t1679 = t1560 + t1561;
t1676 = -pkin(4) * t1564 - pkin(3);
t1674 = t1572 * t1428;
t1673 = t1560 * t1710;
t1672 = t1561 * t1710;
t1671 = t1562 * t1403;
t1669 = t1564 * t1403;
t1668 = t1568 * t1428;
t1396 = -t1461 - t1486;
t1277 = -t1566 * t1396 - t1690;
t1627 = -t1570 * t1417 + t1566 * t1526;
t1317 = (qJD(5) + t1487) * t1462 + t1627;
t1667 = pkin(4) * t1317 + pkin(9) * t1277 + t1207;
t1379 = -t1486 - t1460;
t1271 = t1570 * t1379 - t1734;
t1662 = -t1566 * t1417 - t1570 * t1526;
t1361 = -t1464 * qJD(5) + t1662;
t1415 = t1487 * t1464;
t1313 = t1361 - t1415;
t1666 = pkin(4) * t1313 + pkin(9) * t1271 - t1208;
t1175 = t1562 * t1235 + t1564 * t1236;
t1283 = t1567 * t1371 + t1571 * t1372;
t1659 = -t1569 * t1551 - t1573 * t1552;
t1314 = (-qJD(5) + t1487) * t1464 + t1662;
t1362 = -t1462 * qJD(5) - t1627;
t1414 = t1487 * t1462;
t1316 = t1362 + t1414;
t1246 = t1570 * t1314 + t1566 * t1316;
t1367 = t1460 + t1461;
t1656 = pkin(4) * t1367 + pkin(9) * t1246 + t1129;
t1113 = t1562 * t1129 - t1564 * t1210;
t1655 = pkin(3) * t1113 + t1681;
t1455 = -t1489 - t1525;
t1369 = t1564 * t1455 + t1708;
t1654 = pkin(3) * t1369 - t1680;
t1546 = t1573 * qJDD(1) - t1569 * t1574;
t1652 = -pkin(6) * t1546 - t1569 * g(3);
t1519 = -t1673 - t1657;
t1493 = -t1568 * t1519 - t1683;
t1651 = pkin(7) * t1493 - t1694;
t1536 = -t1657 - t1672;
t1498 = t1572 * t1536 - t1691;
t1650 = pkin(7) * t1498 + t1685;
t1114 = t1564 * t1129 + t1562 * t1210;
t1088 = -t1567 * t1113 + t1571 * t1114;
t1128 = -t1570 * t1172 + t1566 * t1173;
t1648 = t1088 * t1568 - t1128 * t1572;
t1131 = t1571 * t1175 - t1700;
t1647 = t1131 * t1568 - t1351 * t1572;
t1215 = t1562 * t1246 + t1564 * t1367;
t1216 = t1564 * t1246 - t1562 * t1367;
t1153 = -t1567 * t1215 + t1571 * t1216;
t1244 = t1566 * t1314 - t1570 * t1316;
t1646 = t1153 * t1568 - t1244 * t1572;
t1315 = t1362 - t1414;
t1245 = t1570 * t1313 - t1566 * t1315;
t1402 = t1461 - t1460;
t1222 = t1562 * t1245 - t1564 * t1402;
t1223 = t1564 * t1245 + t1562 * t1402;
t1162 = -t1567 * t1222 + t1571 * t1223;
t1243 = t1566 * t1313 + t1570 * t1315;
t1645 = t1162 * t1568 - t1243 * t1572;
t1224 = t1562 * t1271 + t1564 * t1313;
t1225 = t1564 * t1271 - t1562 * t1313;
t1167 = -t1567 * t1224 + t1571 * t1225;
t1270 = t1566 * t1379 + t1733;
t1644 = t1167 * t1568 - t1270 * t1572;
t1226 = t1562 * t1277 + t1564 * t1317;
t1227 = t1564 * t1277 - t1562 * t1317;
t1169 = -t1567 * t1226 + t1571 * t1227;
t1276 = t1570 * t1396 - t1701;
t1643 = t1169 * t1568 - t1276 * t1572;
t1409 = -t1461 + t1486;
t1290 = -t1566 * t1409 + t1733;
t1237 = t1562 * t1290 - t1564 * t1316;
t1239 = t1564 * t1290 + t1562 * t1316;
t1180 = -t1567 * t1237 + t1571 * t1239;
t1288 = t1570 * t1409 + t1734;
t1642 = t1180 * t1568 - t1288 * t1572;
t1408 = t1460 - t1486;
t1291 = t1570 * t1408 - t1701;
t1312 = -t1361 - t1415;
t1238 = t1562 * t1291 + t1564 * t1312;
t1240 = t1564 * t1291 - t1562 * t1312;
t1181 = -t1567 * t1238 + t1571 * t1240;
t1289 = t1566 * t1408 + t1690;
t1641 = t1181 * t1568 - t1289 * t1572;
t1307 = -t1566 * t1361 + t1462 * t1714;
t1264 = t1562 * t1307 + t1669;
t1266 = t1564 * t1307 - t1671;
t1201 = -t1567 * t1264 + t1571 * t1266;
t1306 = -t1570 * t1361 - t1462 * t1715;
t1640 = t1201 * t1568 + t1306 * t1572;
t1309 = t1570 * t1362 - t1464 * t1715;
t1265 = t1562 * t1309 - t1669;
t1267 = t1564 * t1309 + t1671;
t1202 = -t1567 * t1265 + t1571 * t1267;
t1308 = t1566 * t1362 + t1464 * t1714;
t1639 = t1202 * t1568 - t1308 * t1572;
t1348 = (-t1462 * t1570 + t1464 * t1566) * t1487;
t1296 = t1562 * t1348 - t1564 * t1413;
t1297 = t1564 * t1348 + t1562 * t1413;
t1229 = -t1567 * t1296 + t1571 * t1297;
t1347 = (-t1462 * t1566 - t1464 * t1570) * t1487;
t1638 = t1229 * t1568 - t1347 * t1572;
t1298 = -t1562 * t1388 + t1564 * t1391;
t1300 = -t1564 * t1388 - t1562 * t1391;
t1233 = -t1567 * t1298 + t1571 * t1300;
t1423 = t1489 - t1488;
t1637 = t1233 * t1568 - t1423 * t1572;
t1301 = -t1389 * t1564 + t1562 * t1392;
t1234 = -t1567 * t1299 + t1571 * t1301;
t1397 = -t1488 - t1489;
t1636 = t1234 * t1568 - t1397 * t1572;
t1419 = -t1525 - t1488;
t1349 = t1562 * t1419 + t1735;
t1350 = t1564 * t1419 - t1736;
t1261 = -t1567 * t1349 + t1571 * t1350;
t1635 = t1261 * t1568 - t1388 * t1572;
t1370 = -t1562 * t1455 + t1704;
t1281 = -t1567 * t1369 + t1571 * t1370;
t1634 = t1281 * t1568 - t1391 * t1572;
t1633 = t1283 * t1568 - t1435 * t1572;
t1470 = -t1489 + t1525;
t1375 = t1564 * t1470 + t1736;
t1377 = -t1562 * t1470 + t1735;
t1286 = -t1567 * t1375 + t1571 * t1377;
t1632 = t1286 * t1568 - t1392 * t1572;
t1469 = t1488 - t1525;
t1376 = t1562 * t1469 - t1704;
t1378 = t1564 * t1469 + t1708;
t1287 = -t1567 * t1376 + t1571 * t1378;
t1631 = t1287 * t1568 + t1389 * t1572;
t1282 = -t1571 * t1371 + t1567 * t1372;
t1510 = t1549 * t1523;
t1444 = t1510 + t1581;
t1386 = t1571 * t1444 - t1567 * t1446;
t1494 = t1522 - t1605;
t1630 = t1386 * t1568 - t1494 * t1572;
t1445 = (-qJD(3) - t1549) * t1523 + t1589;
t1387 = t1571 * t1445 - t1567 * t1728;
t1465 = t1605 + t1522;
t1629 = t1387 * t1568 + t1465 * t1572;
t1480 = -t1525 - t1605;
t1407 = t1571 * t1480 - t1738;
t1628 = t1407 * t1568 + t1444 * t1572;
t1495 = -t1522 - t1525;
t1421 = -t1567 * t1495 + t1687;
t1626 = t1421 * t1568 - t1446 * t1572;
t1503 = -t1522 + t1525;
t1426 = -t1567 * t1503 + t1737;
t1625 = t1426 * t1568 + t1572 * t1728;
t1502 = t1605 - t1525;
t1427 = t1571 * t1502 + t1698;
t1443 = t1510 - t1581;
t1624 = t1427 * t1568 + t1443 * t1572;
t1481 = g(3) * t1706 + t1660;
t1482 = t1580 + t1684;
t1623 = -t1572 * t1481 + t1568 * t1482;
t1418 = t1568 * t1481 + t1572 * t1482;
t1540 = t1563 * t1611;
t1505 = t1540 + t1531;
t1622 = t1505 * t1572 + t1508 * t1568;
t1506 = -t1540 + t1531;
t1507 = t1532 + t1539;
t1621 = -t1506 * t1572 + t1507 * t1568;
t1620 = t1519 * t1572 - t1692;
t1535 = -t1657 + t1672;
t1619 = t1535 * t1568 + t1683;
t1534 = t1657 - t1673;
t1618 = t1534 * t1572 + t1691;
t1617 = t1536 * t1568 + t1682;
t1616 = t1573 * t1551 - t1569 * t1552;
t1615 = pkin(3) * t1226 + t1667;
t1614 = pkin(3) * t1224 + t1666;
t1613 = t1563 * t1658;
t1612 = t1563 * t1649;
t1380 = -t1490 * t1712 - t1564 * t1661;
t1381 = -t1490 * t1711 + t1562 * t1661;
t1294 = -t1567 * t1380 + t1571 * t1381;
t1609 = t1294 * t1568 + t1674;
t1382 = t1562 * t1417 - t1492 * t1711;
t1383 = t1564 * t1417 + t1492 * t1712;
t1295 = -t1567 * t1382 + t1571 * t1383;
t1608 = t1295 * t1568 - t1674;
t1607 = pkin(3) * t1215 + t1656;
t1076 = qJ(4) * t1114 + (-pkin(9) * t1562 + t1676) * t1128;
t1085 = -qJ(4) * t1113 + (-pkin(9) * t1564 + t1722) * t1128;
t1087 = t1571 * t1113 + t1567 * t1114;
t1061 = -pkin(8) * t1087 - t1567 * t1076 + t1571 * t1085;
t1074 = -pkin(2) * t1087 - t1655;
t1080 = t1572 * t1088 + t1568 * t1128;
t1604 = pkin(7) * t1080 + t1061 * t1568 + t1074 * t1572;
t1117 = -pkin(9) * t1244 - t1128;
t1098 = qJ(4) * t1216 + t1562 * t1117 + t1244 * t1676;
t1100 = -qJ(4) * t1215 + t1564 * t1117 + t1244 * t1722;
t1152 = t1571 * t1215 + t1567 * t1216;
t1077 = -pkin(8) * t1152 - t1567 * t1098 + t1571 * t1100;
t1091 = -pkin(2) * t1152 - t1607;
t1135 = t1572 * t1153 + t1568 * t1244;
t1603 = pkin(7) * t1135 + t1077 * t1568 + t1091 * t1572;
t1146 = -pkin(4) * t1270 + t1172;
t1186 = -pkin(9) * t1270 + t1207;
t1103 = -pkin(3) * t1270 + qJ(4) * t1225 + t1564 * t1146 + t1562 * t1186;
t1109 = -qJ(4) * t1224 - t1562 * t1146 + t1564 * t1186;
t1166 = t1571 * t1224 + t1567 * t1225;
t1083 = -pkin(8) * t1166 - t1567 * t1103 + t1571 * t1109;
t1111 = -pkin(2) * t1166 - t1614;
t1143 = t1572 * t1167 + t1568 * t1270;
t1602 = pkin(7) * t1143 + t1083 * t1568 + t1111 * t1572;
t1147 = -pkin(4) * t1276 + t1173;
t1187 = -pkin(9) * t1276 + t1208;
t1105 = -pkin(3) * t1276 + qJ(4) * t1227 + t1564 * t1147 + t1562 * t1187;
t1110 = -qJ(4) * t1226 - t1562 * t1147 + t1564 * t1187;
t1168 = t1571 * t1226 + t1567 * t1227;
t1084 = -pkin(8) * t1168 - t1567 * t1105 + t1571 * t1110;
t1112 = -pkin(2) * t1168 - t1615;
t1145 = t1572 * t1169 + t1568 * t1276;
t1601 = pkin(7) * t1145 + t1084 * t1568 + t1112 * t1572;
t1130 = t1567 * t1175 + t1689;
t1156 = -pkin(3) * t1351 + qJ(4) * t1175;
t1095 = -pkin(8) * t1130 - qJ(4) * t1689 - t1567 * t1156;
t1106 = -pkin(2) * t1130 - t1724;
t1126 = t1572 * t1131 + t1568 * t1351;
t1600 = pkin(7) * t1126 + t1095 * t1568 + t1106 * t1572;
t1144 = -pkin(3) * t1397 + qJ(4) * t1301 + t1175;
t1148 = -qJ(4) * t1299 - t1174;
t1232 = t1571 * t1299 + t1567 * t1301;
t1104 = -pkin(8) * t1232 - t1567 * t1144 + t1571 * t1148;
t1195 = -pkin(2) * t1232 - t1723;
t1214 = t1572 * t1234 + t1568 * t1397;
t1599 = pkin(7) * t1214 + t1104 * t1568 + t1195 * t1572;
t1247 = -pkin(3) * t1388 + qJ(4) * t1350 - t1705;
t1260 = t1571 * t1349 + t1567 * t1350;
t1268 = -qJ(4) * t1349 + t1709;
t1163 = -pkin(8) * t1260 - t1567 * t1247 + t1571 * t1268;
t1590 = pkin(3) * t1349 - t1235;
t1177 = -pkin(2) * t1260 - t1590;
t1242 = t1572 * t1261 + t1568 * t1388;
t1598 = pkin(7) * t1242 + t1163 * t1568 + t1177 * t1572;
t1249 = -pkin(3) * t1391 + qJ(4) * t1370 + t1709;
t1274 = -qJ(4) * t1369 + t1705;
t1280 = t1571 * t1369 + t1567 * t1370;
t1176 = -pkin(8) * t1280 - t1567 * t1249 + t1571 * t1274;
t1188 = -pkin(2) * t1280 + t1483 - t1654;
t1252 = t1572 * t1281 + t1391 * t1568;
t1597 = pkin(7) * t1252 + t1176 * t1568 + t1188 * t1572;
t1406 = t1567 * t1480 + t1737;
t1322 = t1567 * (t1530 * t1670 + t1579 + t1684) - t1571 * (-pkin(8) * t1540 - t1512 - t1720) + (t1508 * t1571 - t1567 * t1657 - t1406) * pkin(2);
t1355 = -pkin(8) * t1406 + t1699;
t1359 = t1572 * t1407 - t1568 * t1444;
t1596 = pkin(7) * t1359 + t1322 * t1572 + t1355 * t1568;
t1420 = t1571 * t1495 + t1698;
t1325 = -pkin(2) * t1420 + t1372;
t1363 = -pkin(8) * t1420 + t1688;
t1364 = t1572 * t1421 + t1446 * t1568;
t1595 = pkin(7) * t1364 + t1325 * t1572 + t1363 * t1568;
t1456 = t1568 * t1506 + t1572 * t1507;
t1594 = pkin(7) * t1456 + t1418;
t1385 = t1567 * t1445 + t1571 * t1728;
t1253 = -pkin(8) * t1385 - t1282;
t1342 = t1572 * t1387 - t1568 * t1465;
t1593 = pkin(7) * t1342 + t1253 * t1568 - t1385 * t1725;
t1258 = t1572 * t1283 + t1568 * t1435;
t1588 = pkin(7) * t1258 + t1282 * t1653;
t1586 = t1568 * t1592;
t1585 = t1572 * t1592;
t1583 = t1565 * t1585;
t1582 = t1563 * t1710 + t1565 * t1612;
t1545 = t1569 * qJDD(1) + t1573 * t1574;
t1544 = t1565 * t1658;
t1538 = t1679 * t1710;
t1537 = (t1560 - t1561) * t1710;
t1533 = -pkin(6) * t1545 + t1573 * g(3);
t1514 = t1565 * t1572 * t1526;
t1513 = t1526 * t1706;
t1511 = t1665 * t1679 * t1718;
t1504 = (t1677 + (0.2e1 * qJD(2) + t1703) * t1717) * t1563;
t1500 = t1572 * t1531 - t1560 * t1612;
t1499 = -t1568 * t1532 - t1561 * t1612;
t1497 = t1572 * t1535 - t1692;
t1496 = -t1568 * t1534 + t1682;
t1479 = (t1565 * t1531 + t1572 * t1582) * t1568;
t1478 = (t1563 * t1531 + t1572 * t1731) * t1568;
t1477 = (t1563 * t1532 - t1568 * t1731) * t1572;
t1476 = (t1565 * t1532 - t1568 * t1582) * t1572;
t1459 = (t1571 * t1606 - t1697) * t1549;
t1458 = (t1567 * t1606 + t1686) * t1549;
t1457 = -t1568 * t1505 + t1572 * t1508;
t1454 = t1563 * t1508 + t1565 * t1617;
t1453 = -t1563 * t1507 + t1565 * t1619;
t1452 = -t1563 * t1506 + t1565 * t1618;
t1451 = -t1565 * t1508 + t1563 * t1617;
t1450 = t1565 * t1507 + t1563 * t1619;
t1449 = t1565 * t1506 + t1563 * t1618;
t1442 = -t1563 * t1504 + t1565 * t1620;
t1441 = t1565 * t1504 + t1563 * t1620;
t1439 = t1567 * t1475 - t1549 * t1686;
t1437 = -t1509 * t1567 + t1571 * t1581;
t1436 = t1572 * t1459 - t1693;
t1434 = -t1563 * t1537 + t1565 * t1622;
t1433 = t1563 * t1538 + t1565 * t1621;
t1432 = t1565 * t1537 + t1563 * t1622;
t1431 = -t1565 * t1538 + t1563 * t1621;
t1425 = t1567 * t1502 - t1687;
t1424 = t1571 * t1503 + t1738;
t1405 = (t1490 * t1564 - t1492 * t1562) * t1549;
t1404 = (t1490 * t1562 + t1492 * t1564) * t1549;
t1401 = t1572 * t1440 + t1586;
t1400 = t1572 * t1438 - t1586;
t1399 = t1563 * t1512 + t1565 * t1623;
t1398 = -t1565 * t1512 + t1563 * t1623;
t1395 = -t1563 * t1458 + t1459 * t1702 + t1514;
t1394 = t1565 * t1458 + t1459 * t1707 + t1513;
t1384 = t1567 * t1444 + t1571 * t1446;
t1374 = t1572 * t1427 - t1568 * t1443;
t1373 = t1572 * t1426 - t1568 * t1728;
t1366 = -t1694 + (-t1451 * t1563 - t1454 * t1565) * pkin(7);
t1358 = -t1685 + (-t1441 * t1563 - t1442 * t1565) * pkin(7);
t1357 = -pkin(1) * t1451 + t1563 * t1481 + t1565 * t1650;
t1356 = pkin(1) * t1454 - t1565 * t1481 + t1563 * t1650;
t1354 = t1572 * t1386 + t1568 * t1494;
t1353 = -pkin(1) * t1441 + t1563 * t1482 + t1565 * t1651;
t1352 = pkin(1) * t1442 - t1565 * t1482 + t1563 * t1651;
t1346 = -t1563 * t1439 + t1565 * t1695 - t1583;
t1345 = -t1563 * t1437 + t1565 * t1696 + t1583;
t1344 = t1565 * t1439 + (-t1585 + t1695) * t1563;
t1343 = t1565 * t1437 + (t1585 + t1696) * t1563;
t1338 = -t1567 * t1404 + t1571 * t1405;
t1337 = t1571 * t1404 + t1567 * t1405;
t1336 = pkin(1) * t1399 + t1418 * t1721;
t1335 = t1565 * pkin(7) * t1418 - pkin(1) * t1398;
t1334 = t1572 * t1338 - t1693;
t1333 = -pkin(1) * t1431 + t1565 * t1594;
t1332 = pkin(1) * t1433 + t1563 * t1594;
t1331 = -pkin(2) * t1446 + pkin(8) * t1421 + t1699;
t1330 = -t1563 * t1425 + t1565 * t1624;
t1329 = -t1563 * t1424 + t1565 * t1625;
t1328 = t1565 * t1425 + t1563 * t1624;
t1327 = t1565 * t1424 + t1563 * t1625;
t1326 = (-t1398 * t1563 - t1399 * t1565) * pkin(7);
t1324 = pkin(2) * t1444 + pkin(8) * t1407 - t1688;
t1323 = (-t1431 * t1563 - t1433 * t1565) * pkin(7) - t1623;
t1320 = -t1563 * t1420 + t1565 * t1626;
t1319 = t1565 * t1420 + t1563 * t1626;
t1305 = -t1563 * t1406 + t1565 * t1628;
t1304 = t1565 * t1406 + t1563 * t1628;
t1293 = t1571 * t1382 + t1567 * t1383;
t1292 = t1571 * t1380 + t1567 * t1381;
t1285 = t1571 * t1376 + t1567 * t1378;
t1284 = t1571 * t1375 + t1567 * t1377;
t1279 = -t1563 * t1384 + t1565 * t1630;
t1278 = t1565 * t1384 + t1563 * t1630;
t1273 = -t1563 * t1385 + t1565 * t1629;
t1272 = t1565 * t1385 + t1563 * t1629;
t1263 = t1572 * t1295 + t1668;
t1262 = t1572 * t1294 - t1668;
t1259 = -pkin(2) * t1435 + pkin(8) * t1283;
t1257 = -t1563 * t1337 + t1338 * t1702 + t1514;
t1256 = t1565 * t1337 + t1338 * t1707 + t1513;
t1255 = t1572 * t1287 - t1568 * t1389;
t1254 = t1572 * t1286 + t1568 * t1392;
t1248 = pkin(2) * t1465 + pkin(8) * t1387 + t1283;
t1231 = t1571 * t1298 + t1567 * t1300;
t1228 = t1571 * t1296 + t1567 * t1297;
t1221 = t1572 * t1233 + t1568 * t1423;
t1220 = -t1563 * t1293 + t1565 * t1608;
t1219 = -t1563 * t1292 + t1565 * t1609;
t1218 = t1565 * t1293 + t1563 * t1608;
t1217 = t1565 * t1292 + t1563 * t1609;
t1213 = -t1563 * t1282 + t1565 * t1633;
t1212 = t1565 * t1282 + t1563 * t1633;
t1206 = -t1563 * t1285 + t1565 * t1631;
t1205 = -t1563 * t1284 + t1565 * t1632;
t1204 = t1565 * t1285 + t1563 * t1631;
t1203 = t1565 * t1284 + t1563 * t1632;
t1200 = t1571 * t1265 + t1567 * t1267;
t1199 = t1571 * t1264 + t1567 * t1266;
t1198 = t1572 * t1229 + t1568 * t1347;
t1197 = -t1563 * t1280 + t1565 * t1634;
t1196 = t1565 * t1280 + t1563 * t1634;
t1194 = -t1563 * t1260 + t1565 * t1635;
t1193 = t1565 * t1260 + t1563 * t1635;
t1192 = -t1568 * t1325 + t1572 * t1363 + (-t1319 * t1563 - t1320 * t1565) * pkin(7);
t1191 = -t1568 * t1322 + t1572 * t1355 + (-t1304 * t1563 - t1305 * t1565) * pkin(7);
t1190 = t1572 * t1202 + t1568 * t1308;
t1189 = t1572 * t1201 - t1568 * t1306;
t1185 = -pkin(1) * t1319 - t1563 * t1331 + t1565 * t1595;
t1184 = pkin(1) * t1320 + t1565 * t1331 + t1563 * t1595;
t1183 = -pkin(1) * t1304 - t1563 * t1324 + t1565 * t1596;
t1182 = pkin(1) * t1305 + t1565 * t1324 + t1563 * t1596;
t1179 = t1571 * t1238 + t1567 * t1240;
t1178 = t1571 * t1237 + t1567 * t1239;
t1165 = -t1563 * t1231 + t1565 * t1637;
t1164 = t1565 * t1231 + t1563 * t1637;
t1161 = t1571 * t1222 + t1567 * t1223;
t1160 = -t1563 * t1232 + t1565 * t1636;
t1159 = t1565 * t1232 + t1563 * t1636;
t1158 = -pkin(2) * t1391 + pkin(8) * t1281 + t1571 * t1249 + t1567 * t1274;
t1157 = t1385 * t1726 + t1572 * t1253 + (-t1272 * t1563 - t1273 * t1565) * pkin(7);
t1155 = -t1563 * t1228 + t1565 * t1638;
t1154 = t1565 * t1228 + t1563 * t1638;
t1151 = -pkin(2) * t1388 + pkin(8) * t1261 + t1571 * t1247 + t1567 * t1268;
t1150 = t1572 * t1181 + t1568 * t1289;
t1149 = t1572 * t1180 + t1568 * t1288;
t1142 = -pkin(1) * t1272 - t1563 * t1248 + t1565 * t1593;
t1141 = pkin(1) * t1273 + t1565 * t1248 + t1563 * t1593;
t1140 = -t1563 * t1200 + t1565 * t1639;
t1139 = -t1563 * t1199 + t1565 * t1640;
t1138 = t1565 * t1200 + t1563 * t1639;
t1137 = t1565 * t1199 + t1563 * t1640;
t1136 = t1572 * t1162 + t1568 * t1243;
t1134 = (-pkin(8) * t1572 + t1726) * t1282 + (-t1212 * t1563 - t1213 * t1565) * pkin(7);
t1133 = -pkin(1) * t1212 - t1563 * t1259 + t1565 * t1588;
t1132 = pkin(1) * t1213 + t1565 * t1259 + t1563 * t1588;
t1125 = -t1563 * t1179 + t1565 * t1641;
t1124 = -t1563 * t1178 + t1565 * t1642;
t1123 = t1565 * t1179 + t1563 * t1641;
t1122 = t1565 * t1178 + t1563 * t1642;
t1121 = -t1563 * t1168 + t1565 * t1643;
t1120 = t1565 * t1168 + t1563 * t1643;
t1119 = -t1563 * t1166 + t1565 * t1644;
t1118 = t1565 * t1166 + t1563 * t1644;
t1116 = -t1563 * t1161 + t1565 * t1645;
t1115 = t1565 * t1161 + t1563 * t1645;
t1108 = -t1563 * t1152 + t1565 * t1646;
t1107 = t1565 * t1152 + t1563 * t1646;
t1102 = -pkin(2) * t1397 + pkin(8) * t1234 + t1571 * t1144 + t1567 * t1148;
t1101 = t1572 * t1176 - t1568 * t1188 + (-t1196 * t1563 - t1197 * t1565) * pkin(7);
t1099 = t1572 * t1163 - t1568 * t1177 + (-t1193 * t1563 - t1194 * t1565) * pkin(7);
t1097 = -pkin(1) * t1196 - t1563 * t1158 + t1565 * t1597;
t1096 = pkin(1) * t1197 + t1565 * t1158 + t1563 * t1597;
t1094 = -t1563 * t1130 + t1565 * t1647;
t1093 = t1565 * t1130 + t1563 * t1647;
t1092 = -pkin(2) * t1351 + pkin(8) * t1131 - qJ(4) * t1700 + t1571 * t1156;
t1090 = -pkin(1) * t1193 - t1563 * t1151 + t1565 * t1598;
t1089 = pkin(1) * t1194 + t1565 * t1151 + t1563 * t1598;
t1086 = t1572 * t1104 - t1568 * t1195 + (-t1159 * t1563 - t1160 * t1565) * pkin(7);
t1082 = -pkin(2) * t1276 + pkin(8) * t1169 + t1571 * t1105 + t1567 * t1110;
t1081 = -pkin(2) * t1270 + pkin(8) * t1167 + t1571 * t1103 + t1567 * t1109;
t1079 = -pkin(1) * t1159 - t1563 * t1102 + t1565 * t1599;
t1078 = pkin(1) * t1160 + t1565 * t1102 + t1563 * t1599;
t1075 = -pkin(2) * t1244 + pkin(8) * t1153 + t1571 * t1098 + t1567 * t1100;
t1073 = -t1563 * t1087 + t1565 * t1648;
t1072 = t1565 * t1087 + t1563 * t1648;
t1071 = t1572 * t1084 - t1568 * t1112 + (-t1120 * t1563 - t1121 * t1565) * pkin(7);
t1070 = t1572 * t1083 - t1568 * t1111 + (-t1118 * t1563 - t1119 * t1565) * pkin(7);
t1069 = t1572 * t1095 - t1568 * t1106 + (-t1093 * t1563 - t1094 * t1565) * pkin(7);
t1068 = -pkin(1) * t1093 - t1563 * t1092 + t1565 * t1600;
t1067 = pkin(1) * t1094 + t1565 * t1092 + t1563 * t1600;
t1066 = t1572 * t1077 - t1568 * t1091 + (-t1107 * t1563 - t1108 * t1565) * pkin(7);
t1065 = -pkin(1) * t1120 - t1563 * t1082 + t1565 * t1601;
t1064 = pkin(1) * t1121 + t1565 * t1082 + t1563 * t1601;
t1063 = -pkin(1) * t1118 - t1563 * t1081 + t1565 * t1602;
t1062 = pkin(1) * t1119 + t1565 * t1081 + t1563 * t1602;
t1060 = -pkin(2) * t1128 + pkin(8) * t1088 + t1571 * t1076 + t1567 * t1085;
t1059 = -pkin(1) * t1107 - t1563 * t1075 + t1565 * t1603;
t1058 = pkin(1) * t1108 + t1565 * t1075 + t1563 * t1603;
t1057 = t1572 * t1061 - t1568 * t1074 + (-t1072 * t1563 - t1073 * t1565) * pkin(7);
t1056 = -pkin(1) * t1072 - t1563 * t1060 + t1565 * t1604;
t1055 = pkin(1) * t1073 + t1565 * t1060 + t1563 * t1604;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1546, 0, -t1545, 0, t1652, -t1533, -t1616, -pkin(6) * t1616, -t1569 * t1479 + t1573 * t1500, -t1569 * t1434 + t1573 * t1457, -t1569 * t1452 + t1573 * t1496, -t1569 * t1476 + t1573 * t1499, -t1569 * t1453 + t1573 * t1497, t1573 * t1511 + t1569 * t1613, t1573 * t1366 - t1569 * t1357 - pkin(6) * (t1573 * t1454 + t1569 * t1498), t1573 * t1358 - t1569 * t1353 - pkin(6) * (t1573 * t1442 + t1569 * t1493), t1573 * t1323 - t1569 * t1333 - pkin(6) * (t1573 * t1433 + t1569 * t1456), t1573 * t1326 - t1569 * t1335 - pkin(6) * (t1573 * t1399 + t1569 * t1418), -t1569 * t1346 + t1573 * t1401, -t1569 * t1279 + t1573 * t1354, -t1569 * t1329 + t1573 * t1373, -t1569 * t1345 + t1573 * t1400, -t1569 * t1330 + t1573 * t1374, -t1569 * t1395 + t1573 * t1436, t1573 * t1191 - t1569 * t1183 - pkin(6) * (t1573 * t1305 + t1569 * t1359), t1573 * t1192 - t1569 * t1185 - pkin(6) * (t1573 * t1320 + t1569 * t1364), t1573 * t1157 - t1569 * t1142 - pkin(6) * (t1573 * t1273 + t1569 * t1342), t1573 * t1134 - t1569 * t1133 - pkin(6) * (t1573 * t1213 + t1569 * t1258), -t1569 * t1220 + t1573 * t1263, -t1569 * t1165 + t1573 * t1221, -t1569 * t1205 + t1573 * t1254, -t1569 * t1219 + t1573 * t1262, -t1569 * t1206 + t1573 * t1255, -t1569 * t1257 + t1573 * t1334, t1573 * t1099 - t1569 * t1090 - pkin(6) * (t1573 * t1194 + t1569 * t1242), t1573 * t1101 - t1569 * t1097 - pkin(6) * (t1573 * t1197 + t1569 * t1252), t1573 * t1086 - t1569 * t1079 - pkin(6) * (t1573 * t1160 + t1569 * t1214), t1573 * t1069 - t1569 * t1068 - pkin(6) * (t1573 * t1094 + t1569 * t1126), -t1569 * t1140 + t1573 * t1190, -t1569 * t1116 + t1573 * t1136, -t1569 * t1124 + t1573 * t1149, -t1569 * t1139 + t1573 * t1189, -t1569 * t1125 + t1573 * t1150, -t1569 * t1155 + t1573 * t1198, t1573 * t1070 - t1569 * t1063 - pkin(6) * (t1573 * t1119 + t1569 * t1143), t1573 * t1071 - t1569 * t1065 - pkin(6) * (t1573 * t1121 + t1569 * t1145), t1573 * t1066 - t1569 * t1059 - pkin(6) * (t1573 * t1108 + t1569 * t1135), t1573 * t1057 - t1569 * t1056 - pkin(6) * (t1573 * t1073 + t1569 * t1080); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1545, 0, t1546, 0, t1533, t1652, t1659, pkin(6) * t1659, t1573 * t1479 + t1569 * t1500, t1573 * t1434 + t1569 * t1457, t1573 * t1452 + t1569 * t1496, t1573 * t1476 + t1569 * t1499, t1573 * t1453 + t1569 * t1497, t1569 * t1511 - t1573 * t1613, t1569 * t1366 + t1573 * t1357 + pkin(6) * (-t1569 * t1454 + t1573 * t1498), t1569 * t1358 + t1573 * t1353 + pkin(6) * (-t1569 * t1442 + t1573 * t1493), t1569 * t1323 + t1573 * t1333 + pkin(6) * (-t1569 * t1433 + t1573 * t1456), t1569 * t1326 + t1573 * t1335 + pkin(6) * (-t1569 * t1399 + t1573 * t1418), t1573 * t1346 + t1569 * t1401, t1573 * t1279 + t1569 * t1354, t1573 * t1329 + t1569 * t1373, t1573 * t1345 + t1569 * t1400, t1573 * t1330 + t1569 * t1374, t1573 * t1395 + t1569 * t1436, t1569 * t1191 + t1573 * t1183 + pkin(6) * (-t1569 * t1305 + t1573 * t1359), t1569 * t1192 + t1573 * t1185 + pkin(6) * (-t1569 * t1320 + t1573 * t1364), t1569 * t1157 + t1573 * t1142 + pkin(6) * (-t1569 * t1273 + t1573 * t1342), t1569 * t1134 + t1573 * t1133 + pkin(6) * (-t1569 * t1213 + t1573 * t1258), t1573 * t1220 + t1569 * t1263, t1573 * t1165 + t1569 * t1221, t1573 * t1205 + t1569 * t1254, t1573 * t1219 + t1569 * t1262, t1573 * t1206 + t1569 * t1255, t1573 * t1257 + t1569 * t1334, t1569 * t1099 + t1573 * t1090 + pkin(6) * (-t1569 * t1194 + t1573 * t1242), t1569 * t1101 + t1573 * t1097 + pkin(6) * (-t1569 * t1197 + t1573 * t1252), t1569 * t1086 + t1573 * t1079 + pkin(6) * (-t1569 * t1160 + t1573 * t1214), t1569 * t1069 + t1573 * t1068 + pkin(6) * (-t1569 * t1094 + t1573 * t1126), t1573 * t1140 + t1569 * t1190, t1573 * t1116 + t1569 * t1136, t1573 * t1124 + t1569 * t1149, t1573 * t1139 + t1569 * t1189, t1573 * t1125 + t1569 * t1150, t1573 * t1155 + t1569 * t1198, t1569 * t1070 + t1573 * t1063 + pkin(6) * (-t1569 * t1119 + t1573 * t1143), t1569 * t1071 + t1573 * t1065 + pkin(6) * (-t1569 * t1121 + t1573 * t1145), t1569 * t1066 + t1573 * t1059 + pkin(6) * (-t1569 * t1108 + t1573 * t1135), t1569 * t1057 + t1573 * t1056 + pkin(6) * (-t1569 * t1073 + t1573 * t1080); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1551, t1552, 0, 0, t1478, t1432, t1449, t1477, t1450, t1544, t1356, t1352, t1332, t1336, t1344, t1278, t1327, t1343, t1328, t1394, t1182, t1184, t1141, t1132, t1218, t1164, t1203, t1217, t1204, t1256, t1089, t1096, t1078, t1067, t1138, t1115, t1122, t1137, t1123, t1154, t1062, t1064, t1058, t1055; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1574, 0, 0, -g(3), -t1551, 0, t1500, t1457, t1496, t1499, t1497, t1511, t1366, t1358, t1323, t1326, t1401, t1354, t1373, t1400, t1374, t1436, t1191, t1192, t1157, t1134, t1263, t1221, t1254, t1262, t1255, t1334, t1099, t1101, t1086, t1069, t1190, t1136, t1149, t1189, t1150, t1198, t1070, t1071, t1066, t1057; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1574, 0, qJDD(1), 0, g(3), 0, -t1552, 0, t1479, t1434, t1452, t1476, t1453, -t1613, t1357, t1353, t1333, t1335, t1346, t1279, t1329, t1345, t1330, t1395, t1183, t1185, t1142, t1133, t1220, t1165, t1205, t1219, t1206, t1257, t1090, t1097, t1079, t1068, t1140, t1116, t1124, t1139, t1125, t1155, t1063, t1065, t1059, t1056; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1551, t1552, 0, 0, t1478, t1432, t1449, t1477, t1450, t1544, t1356, t1352, t1332, t1336, t1344, t1278, t1327, t1343, t1328, t1394, t1182, t1184, t1141, t1132, t1218, t1164, t1203, t1217, t1204, t1256, t1089, t1096, t1078, t1067, t1138, t1115, t1122, t1137, t1123, t1154, t1062, t1064, t1058, t1055; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1531, t1508, t1529, -t1540, t1535, t1540, 0, -t1512, t1481, 0, t1440, t1386, t1426, t1438, t1427, t1459, t1355, t1363, t1253, -pkin(8) * t1282, t1295, t1233, t1286, t1294, t1287, t1338, t1163, t1176, t1104, t1095, t1202, t1162, t1180, t1201, t1181, t1229, t1083, t1084, t1077, t1061; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1539, t1505, t1534, t1532, t1528, -t1539, t1512, 0, t1482, 0, -t1592, -t1494, t1728, t1592, t1443, t1526, t1322, t1325, -pkin(2) * t1385, -pkin(2) * t1282, -t1428, -t1423, -t1392, t1428, t1389, t1526, t1177, t1188, t1195, t1106, -t1308, -t1243, -t1288, t1306, -t1289, -t1347, t1111, t1112, t1091, t1074; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1548, t1537, t1506, t1548, t1507, t1658, -t1481, -t1482, 0, 0, t1439, t1384, t1424, t1437, t1425, t1458, t1324, t1331, t1248, t1259, t1293, t1231, t1284, t1292, t1285, t1337, t1151, t1158, t1102, t1092, t1200, t1161, t1178, t1199, t1179, t1228, t1081, t1082, t1075, t1060; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1475, t1444, t1732, -t1509, t1502, t1509, 0, t1435, t1371, 0, t1383, t1300, t1377, t1381, t1378, t1405, t1268, t1274, t1148, -qJ(4) * t1174, t1267, t1223, t1239, t1266, t1240, t1297, t1109, t1110, t1100, t1085; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1510, t1446, t1503, t1581, -t1466, t1510, -t1435, 0, t1372, 0, t1382, t1298, t1375, t1380, t1376, t1404, t1247, t1249, t1144, t1156, t1265, t1222, t1237, t1264, t1238, t1296, t1103, t1105, t1098, t1076; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1592, t1494, -t1728, -t1592, -t1443, -t1526, -t1371, -t1372, 0, 0, t1428, t1423, t1392, -t1428, -t1389, -t1526, t1590, t1654 + 0.2e1 * t1716, t1723, t1724, t1308, t1243, t1288, -t1306, t1289, t1347, t1614, t1615, t1607, t1655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1417, -t1388, t1729, -t1471, t1469, t1471, 0, t1351, t1235, 0, t1309, t1245, t1290, t1307, t1291, t1348, t1186, t1187, t1117, -pkin(9) * t1128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1713, t1391, t1470, -t1661, -t1410, t1713, -t1351, 0, t1236, 0, -t1403, -t1402, -t1316, t1403, t1312, -t1413, t1146, t1147, -pkin(4) * t1244, -pkin(4) * t1128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1428, t1423, t1392, -t1428, -t1389, -t1526, -t1235, -t1236, 0, 0, t1308, t1243, t1288, -t1306, t1289, t1347, t1666, t1667, t1656, t1681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1362, t1313, t1730, t1414, t1408, -t1414, 0, t1210, t1172, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1415, t1315, t1409, t1361, t1340, -t1415, -t1210, 0, t1173, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1403, t1402, t1316, -t1403, -t1312, t1413, -t1172, -t1173, 0, 0;];
m_new_reg = t1;
