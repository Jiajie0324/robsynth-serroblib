% Calculate inertial parameters regressor of coriolis matrix for
% S5RRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [4x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,d4,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-07-18 17:22
% Revision: 08c8d617a845f5dd194efdf9aca2774760f7818f (2019-07-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRPRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(4,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRPRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRPRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [4 1]), ...
  'S5RRPRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [4x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-07-18 17:22:32
% EndTime: 2019-07-18 17:22:42
% DurationCPUTime: 4.91s
% Computational Cost: add. (4296->325), mult. (9023->447), div. (0->0), fcn. (8885->6), ass. (0->274)
t333 = qJD(2) + qJD(4);
t260 = sin(qJ(2));
t415 = cos(qJ(4));
t323 = t415 * t260;
t259 = sin(qJ(4));
t262 = cos(qJ(2));
t372 = t259 * t262;
t225 = t323 + t372;
t258 = sin(qJ(5));
t429 = pkin(3) + qJ(3);
t229 = t429 * t262;
t222 = t415 * t229;
t310 = t429 * t260;
t299 = t259 * t310;
t426 = t222 - t299;
t433 = t426 * t258;
t261 = cos(qJ(5));
t263 = pkin(2) + pkin(1);
t236 = t263 * t262;
t414 = t225 * pkin(4);
t281 = -t236 - t414;
t81 = -t261 * t281 + t433;
t438 = (-t81 + t433) * t225;
t432 = t426 * t261;
t83 = t258 * t281 + t432;
t437 = (-t83 + t432) * t225;
t223 = t259 * t260 - t262 * t415;
t428 = t333 * t225;
t436 = t223 * t428;
t307 = t259 * t229 + t415 * t310;
t435 = t307 * t258;
t434 = t307 * t261;
t384 = t426 * t307;
t431 = t333 * t307;
t430 = 0.2e1 * t225;
t219 = t223 ^ 2;
t220 = t225 ^ 2;
t427 = -t220 - t219;
t332 = t220 - t219;
t251 = t260 * pkin(2);
t252 = t260 * pkin(1);
t235 = t252 + t251;
t172 = pkin(4) * t223 + t235;
t374 = t258 * t172;
t82 = -t434 + t374;
t404 = t82 * t261;
t367 = t261 * t172;
t80 = t367 + t435;
t407 = t80 * t258;
t425 = t404 / 0.2e1 - t407 / 0.2e1;
t371 = t259 * t263;
t315 = t371 / 0.2e1;
t237 = pkin(4) + t371;
t418 = -t237 / 0.2e1;
t291 = t418 + t315;
t424 = t225 * t291 - t414 / 0.2e1;
t423 = t258 * t81 + t83 * t261;
t254 = t258 ^ 2;
t256 = t261 ^ 2;
t416 = -t256 / 0.2e1;
t127 = (t254 / 0.2e1 + t416) * t225;
t373 = t258 * t261;
t51 = qJD(1) * t220 * t373 + t127 * t333;
t340 = t225 * qJD(1);
t202 = t261 * t340;
t238 = t256 - t254;
t112 = -0.2e1 * t258 * t202 + t238 * t333;
t421 = t80 / 0.2e1;
t420 = -t82 / 0.2e1;
t419 = t307 / 0.2e1;
t293 = -t222 / 0.2e1;
t417 = t237 / 0.2e1;
t276 = (-t83 * t258 + t261 * t81) * t223;
t405 = t82 * t258;
t406 = t80 * t261;
t3 = (t405 + t406) * t225 + t276;
t412 = t3 * qJD(1);
t4 = -t80 * t81 + t82 * t83 + t384;
t411 = t4 * qJD(1);
t128 = t258 * t223;
t203 = pkin(4) * t128;
t94 = t203 - t434;
t399 = t94 * t258;
t133 = t261 * t223;
t49 = pkin(4) * t133;
t93 = t49 + t435;
t400 = t93 * t261;
t5 = (t399 + t400) * t225 + t276;
t410 = t5 * qJD(1);
t6 = -t81 * t93 + t83 * t94 + t384;
t409 = t6 * qJD(1);
t8 = t438 + (t80 - t435) * t223;
t408 = t8 * qJD(1);
t9 = t437 + (-t82 - t434) * t223;
t402 = t9 * qJD(1);
t401 = t93 * t258;
t398 = t94 * t261;
t206 = t254 * t223;
t207 = t256 * t223;
t139 = t206 + t207;
t397 = t139 * qJD(3);
t381 = t307 * t225;
t16 = -t223 * t423 + t381;
t396 = qJD(1) * t16;
t131 = t258 * t225;
t44 = -t131 * t307 + t223 * t81;
t395 = qJD(1) * t44;
t378 = t225 * t261;
t45 = -t223 * t83 + t307 * t378;
t394 = qJD(1) * t45;
t55 = -t223 * t426 + t381;
t393 = qJD(1) * t55;
t95 = t223 * t235 - t225 * t236;
t392 = qJD(1) * t95;
t96 = t223 * t236 + t225 * t235;
t391 = qJD(1) * t96;
t97 = t332 * t258;
t390 = qJD(1) * t97;
t98 = t427 * t258;
t389 = qJD(1) * t98;
t99 = t332 * t261;
t388 = qJD(1) * t99;
t12 = t438 + (t93 - t435) * t223;
t387 = t12 * qJD(1);
t13 = t437 + (-t94 - t434) * t223;
t386 = t13 * qJD(1);
t292 = (t416 - t254 / 0.2e1) * t223;
t326 = t263 * t415;
t295 = -t326 / 0.2e1;
t265 = t225 * t295 + t237 * t292;
t280 = -t406 / 0.2e1 - t405 / 0.2e1;
t15 = t265 + t280;
t385 = t15 * qJD(1);
t270 = t225 * (pkin(4) / 0.2e1 + t291);
t17 = t258 * t270;
t380 = t17 * qJD(1);
t279 = -t400 / 0.2e1 - t399 / 0.2e1;
t282 = pkin(4) * t292;
t23 = t282 + t279;
t377 = t23 * qJD(1);
t294 = t326 / 0.2e1;
t269 = t223 * t417 + t225 * t294;
t266 = t172 / 0.2e1 + t269;
t314 = t419 - t307 / 0.2e1;
t26 = t258 * t266 + t261 * t314;
t370 = t26 * qJD(1);
t28 = t258 * t314 - t261 * t266;
t366 = t28 * qJD(1);
t31 = t235 * t236;
t365 = t31 * qJD(1);
t37 = t261 * t270;
t364 = t37 * qJD(1);
t363 = t49 * qJD(1);
t362 = t203 * qJD(1);
t268 = (-t259 * t223 / 0.2e1 - t225 * t415 / 0.2e1) * t263;
t312 = -t251 / 0.2e1 - t252 / 0.2e1;
t92 = t268 + t312;
t361 = t92 * qJD(1);
t351 = qJD(4) * t261;
t360 = qJD(2) * t378 + t225 * t351;
t255 = t260 ^ 2;
t257 = t262 ^ 2;
t240 = t257 - t255;
t239 = t257 + t255;
t359 = qJ(3) * qJD(2);
t358 = qJD(1) * t127;
t140 = t238 * t220;
t357 = qJD(1) * t140;
t141 = t427 * t261;
t356 = qJD(1) * t141;
t157 = t293 + t222 / 0.2e1;
t355 = qJD(1) * t157;
t234 = t240 * pkin(1);
t354 = qJD(1) * t234;
t353 = qJD(2) * t263;
t352 = qJD(4) * t236;
t350 = qJD(5) * t258;
t349 = qJD(5) * t261;
t348 = t332 * qJD(1);
t347 = t127 * qJD(5);
t346 = t128 * qJD(1);
t345 = t131 * qJD(1);
t123 = t133 * qJD(1);
t344 = t139 * qJD(1);
t343 = t427 * qJD(1);
t271 = (t254 + t256) * t415;
t191 = t271 * t263;
t184 = t191 * qJD(4);
t218 = t323 / 0.2e1 + t372 / 0.2e1;
t342 = t218 * qJD(1);
t341 = t223 * qJD(1);
t208 = t223 * qJD(3);
t212 = t225 * qJD(3);
t227 = t239 * qJ(3);
t339 = t227 * qJD(1);
t338 = t239 * qJD(1);
t337 = t240 * qJD(1);
t336 = t260 * qJD(1);
t335 = t260 * qJD(2);
t334 = t262 * qJD(1);
t249 = t262 * qJD(2);
t330 = pkin(1) * t336;
t325 = t415 * t426;
t324 = t415 * t223;
t322 = t236 * t341;
t321 = t236 * t340;
t320 = t259 * t353;
t319 = t261 * t212;
t318 = qJD(4) * t371;
t317 = t223 * t349;
t316 = t223 * t340;
t243 = t258 * t349;
t245 = t260 * t249;
t311 = qJD(5) * t415;
t309 = t415 * qJD(2);
t308 = t415 * qJD(4);
t306 = t333 * t261;
t304 = t333 * t258;
t303 = -qJD(5) - t341;
t300 = t220 * t243;
t298 = t258 * t311;
t297 = t261 * t311;
t296 = t263 * t309;
t289 = t258 * t306;
t287 = t261 * t304;
t286 = t404 - t407;
t107 = (t237 * t271 - t259 * t326) * t263;
t135 = t426 * t295;
t2 = t135 + t307 * t315 + (pkin(4) * t420 + t294 * t83 + t417 * t94) * t261 + (pkin(4) * t421 + t294 * t81 + t418 * t93) * t258;
t285 = -t2 * qJD(1) - t107 * qJD(2);
t11 = (t94 / 0.2e1 + t420) * t261 + (-t93 / 0.2e1 + t421) * t258;
t284 = -qJD(1) * t11 - qJD(2) * t191;
t283 = t303 * t261;
t278 = t398 / 0.2e1 - t401 / 0.2e1;
t275 = t225 * t283;
t100 = qJD(5) * t218 + t316;
t274 = (t398 - t401) * qJD(4);
t273 = -t225 * t237 + t263 * t324;
t272 = t287 * t430;
t267 = (-t309 - t308) * t263;
t264 = pkin(1) ^ 2;
t244 = t260 * t334;
t231 = t240 * qJD(2);
t230 = t238 * qJD(5);
t228 = t258 * t318;
t152 = t333 * t223;
t137 = t333 * t218;
t120 = t131 * qJD(3);
t116 = t128 * qJD(5);
t109 = 0.2e1 * t293 + t299;
t105 = t123 + t349;
t104 = -t346 - t350;
t91 = t268 - t312;
t90 = t287 - t358;
t89 = -t289 + t358;
t84 = 0.2e1 * t258 * t275;
t61 = t256 * t316 - t347;
t60 = t254 * t316 + t347;
t54 = qJD(5) * t133 - t388;
t53 = -t116 + t390;
t48 = -t347 + (-t256 * t340 - t289) * t223;
t47 = t347 + (-t254 * t340 + t287) * t223;
t43 = t225 * t304 + t388;
t42 = t360 - t390;
t39 = (-qJD(5) + t341) * t373 * t430 + t333 * (t206 - t207);
t36 = t424 * t261 + t433;
t29 = t435 + t367 / 0.2e1 - t269 * t261;
t27 = t434 - t374 / 0.2e1 + t269 * t258;
t24 = t282 - t279;
t18 = t424 * t258 - t432;
t14 = t265 - t280;
t10 = t278 + t425;
t1 = t135 + t278 * t237 + (t259 * t419 + t423 * t415 / 0.2e1) * t263 + t425 * pkin(4);
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245, t231, 0, -t245, 0, 0, 0, 0, 0, 0, t245, t231, 0, -t245, 0, 0, -0.2e1 * pkin(1) * t245, -t234 * qJD(2), t239 * qJD(3), qJD(3) * t227 - t245 * t264, -t436, -t333 * t332, 0, t436, 0, 0, qJD(2) * t95 - t225 * t352, qJD(2) * t96 + t223 * t352, -qJD(3) * t427, -qJD(2) * t31 + qJD(3) * t55, -t256 * t436 - t300, -qJD(5) * t140 + t223 * t272, -t223 * t225 * t350 + t333 * t99, -t254 * t436 + t300, -t225 * t317 - t333 * t97, t436, qJD(2) * t8 - qJD(3) * t98 + qJD(4) * t12 + qJD(5) * t45, qJD(2) * t9 - qJD(3) * t141 + qJD(4) * t13 + qJD(5) * t44, -qJD(2) * t3 - qJD(4) * t5, qJD(2) * t4 + qJD(3) * t16 + qJD(4) * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, t337, t249, -t244, -t335, 0, 0, 0, 0, 0, t244, t337, t249, -t244, -t335, 0, (-0.2e1 * t330 - t359) * t262, qJ(3) * t335 - t354, -pkin(1) * t249, (-pkin(1) * t359 - t264 * t336) * t262, -t316, -t348, -t152, t316, -t428, 0, -qJD(2) * t426 + qJD(4) * t109 + t392, t391 + t431, (-t225 * t259 + t324) * t353, -t365 + (-t259 * t307 - t325) * t353 + t91 * qJD(3), t48, t39, t43, t47, t42, t100, t408 + (t258 * t273 - t432) * qJD(2) + t18 * qJD(4) + t29 * qJD(5), t402 + (t261 * t273 + t433) * qJD(2) + t36 * qJD(4) + t27 * qJD(5), qJD(2) * t286 + t10 * qJD(4) - t412, t411 + (t237 * t286 - t263 * t325) * qJD(2) + t14 * qJD(3) + t1 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t338, t339, 0, 0, 0, 0, 0, 0, 0, 0, -t343, qJD(2) * t91 + t393, 0, 0, 0, 0, 0, 0, -t389, -t356, 0, qJD(2) * t14 + qJD(4) * t24 + t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, -t348, -t152, t316, -t428, 0, qJD(2) * t109 - qJD(4) * t426 - t321, t322 + t431, 0, 0, t48, t39, t43, t47, t42, t100, t387 + t18 * qJD(2) + (-pkin(4) * t131 - t432) * qJD(4) + t435 * qJD(5), t386 + t36 * qJD(2) + (-pkin(4) * t378 + t433) * qJD(4) + t434 * qJD(5), t10 * qJD(2) + t274 - t410, pkin(4) * t274 + t1 * qJD(2) + t24 * qJD(3) + t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, -t289 * t430 - t357, t303 * t131, t51, t275, t137, qJD(2) * t29 + qJD(4) * t435 - qJD(5) * t83 + t394, qJD(2) * t27 + qJD(4) * t434 + qJD(5) * t81 + t395, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t244, -t337, 0, t244, 0, 0, 0, 0, 0, 0, -t244, -t337, 0, t244, 0, 0, (0.2e1 * pkin(1) * t334 - qJD(3)) * t260, -qJD(3) * t262 + t354, 0, (-pkin(1) * qJD(3) + t264 * t334) * t260, t316, t348, 0, -t316, 0, 0, qJD(4) * t157 - t212 - t392, t208 - t391, 0, qJD(3) * t92 + t365, t61, t84, t54, t60, t53, -t100, qJD(4) * t17 + qJD(5) * t28 - t319 - t408, qJD(4) * t37 + qJD(5) * t26 + t120 - t402, qJD(4) * t11 - t397 + t412, qJD(3) * t15 + qJD(4) * t2 - t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t318, -t263 * t308, 0, 0, t243, t230, 0, -t243, 0, 0, (-t259 * t351 - t298) * t263, -t263 * t297 + t228, t184, t107 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t336, -t334, 0, -t330, 0, 0, 0, 0, 0, 0, -t340, t341, 0, t361, 0, 0, 0, 0, 0, 0, -t202, t345, -t344, t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t333 * t371 + t355, t267, 0, 0, t243, t230, 0, -t243, 0, 0, t380 + (-t259 * t306 - t298) * t263, t364 + t228 + (qJD(2) * t258 * t259 - t297) * t263, t184 - t284, pkin(4) * t184 - t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, t112, t105, t89, t104, -t342, -t237 * t349 + t258 * t267 + t366, t237 * t350 + t261 * t267 + t370, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335, t249, -t338, pkin(1) * t335 - t339, 0, 0, 0, 0, 0, 0, t428, -t152, t343, -qJD(2) * t92 - t393, 0, 0, 0, 0, 0, 0, -t116 + t360 + t389, -t131 * t333 - t317 + t356, t333 * t139, -qJD(2) * t15 - qJD(4) * t23 - t396; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t336, t334, 0, t330, 0, 0, 0, 0, 0, 0, t340, -t341, 0, -t361, 0, 0, 0, 0, 0, 0, t202, -t345, t344, -t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340, -t341, 0, 0, 0, 0, 0, 0, 0, 0, t202, -t345, t344, -t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, t283, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, t348, 0, -t316, 0, 0, -qJD(2) * t157 - t212 + t321, t208 - t322, 0, 0, t61, t84, t54, t60, t53, -t100, -qJD(2) * t17 - qJD(5) * t49 - t319 - t387, -qJD(2) * t37 + qJD(5) * t203 + t120 - t386, -qJD(2) * t11 - t397 + t410, -qJD(2) * t2 + qJD(3) * t23 - t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320 - t355, t296, 0, 0, t243, t230, 0, -t243, 0, 0, t261 * t320 - t380, -t258 * t320 - t364, t284, t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t340, t341, 0, 0, 0, 0, 0, 0, 0, 0, -t202, t345, -t344, t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243, t230, 0, -t243, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, t112, t105, t89, t104, -t342, -pkin(4) * t349 - t363, pkin(4) * t350 + t362, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51, t272 + t357, -t133 * t333 + t258 * t316, -t51, t128 * t333 + t202 * t223, t137, -qJD(2) * t28 + qJD(3) * t128 + qJD(4) * t49 - t394, -qJD(2) * t26 - qJD(4) * t203 + t208 * t261 - t395, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, -t112, -t123, t90, t346, t342, t258 * t296 - t366, t261 * t296 - t370, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t346, t261 * t341, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, -t112, -t123, t90, t346, t342, t363, -t362, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
