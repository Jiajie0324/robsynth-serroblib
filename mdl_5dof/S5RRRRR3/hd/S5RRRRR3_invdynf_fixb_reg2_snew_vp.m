% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRRR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,a5,d1,d4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:57
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRRR3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR3_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR3_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR3_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'S5RRRRR3_invdynf_fixb_reg2_snew_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:57:14
% EndTime: 2019-12-05 18:57:17
% DurationCPUTime: 3.48s
% Computational Cost: add. (21776->241), mult. (44563->333), div. (0->0), fcn. (34736->10), ass. (0->199)
t1472 = sin(qJ(3));
t1477 = cos(qJ(3));
t1478 = cos(qJ(2));
t1505 = qJD(1) * t1478;
t1473 = sin(qJ(2));
t1506 = qJD(1) * t1473;
t1437 = t1472 * t1506 - t1477 * t1505;
t1436 = qJD(4) + t1437;
t1432 = qJD(5) + t1436;
t1514 = qJD(5) + t1432;
t1439 = (t1472 * t1478 + t1473 * t1477) * qJD(1);
t1467 = qJD(2) + qJD(3);
t1471 = sin(qJ(4));
t1476 = cos(qJ(4));
t1422 = t1471 * t1439 - t1476 * t1467;
t1421 = t1422 ^ 2;
t1433 = t1436 ^ 2;
t1394 = -t1421 - t1433;
t1424 = t1476 * t1439 + t1471 * t1467;
t1470 = sin(qJ(5));
t1475 = cos(qJ(5));
t1404 = t1475 * t1422 + t1470 * t1424;
t1513 = t1404 ^ 2;
t1406 = -t1470 * t1422 + t1475 * t1424;
t1512 = t1406 ^ 2;
t1511 = t1424 ^ 2;
t1510 = t1432 ^ 2;
t1509 = t1437 ^ 2;
t1508 = t1439 ^ 2;
t1507 = t1467 ^ 2;
t1504 = t1406 * t1404;
t1503 = t1424 * t1422;
t1502 = t1439 * t1437;
t1474 = sin(qJ(1));
t1479 = cos(qJ(1));
t1453 = t1474 * g(1) - t1479 * g(2);
t1501 = t1474 * t1453;
t1500 = qJD(3) - t1467;
t1499 = qJD(4) - t1436;
t1498 = qJD(5) - t1432;
t1493 = qJD(2) * t1505;
t1496 = t1473 * qJDD(1);
t1444 = t1493 + t1496;
t1465 = t1478 * qJDD(1);
t1494 = qJD(2) * t1506;
t1445 = t1465 - t1494;
t1489 = t1472 * t1444 - t1477 * t1445;
t1395 = (qJD(3) + t1467) * t1439 + t1489;
t1419 = t1453 + (t1445 - t1494) * pkin(1);
t1488 = -t1477 * t1444 - t1472 * t1445;
t1407 = -t1437 * qJD(3) - t1488;
t1491 = t1467 * t1437 - t1407;
t1367 = t1395 * pkin(2) + t1491 * pkin(5) - t1419;
t1454 = -t1479 * g(1) - t1474 * g(2);
t1435 = -t1473 * g(3) + t1478 * t1454;
t1469 = t1478 ^ 2;
t1480 = qJD(2) ^ 2;
t1481 = qJD(1) ^ 2;
t1456 = -t1469 * t1481 - t1480;
t1425 = t1456 * pkin(1) + t1435;
t1434 = -t1478 * g(3) - t1473 * t1454;
t1458 = t1478 * t1481 * t1473;
t1451 = qJDD(2) + t1458;
t1482 = t1451 * pkin(1) + t1434;
t1402 = t1477 * t1425 + t1472 * t1482;
t1415 = t1437 * pkin(2) - t1439 * pkin(5);
t1495 = qJDD(2) + qJDD(3);
t1383 = -t1507 * pkin(2) + t1495 * pkin(5) - t1437 * t1415 + t1402;
t1348 = t1471 * t1367 + t1476 * t1383;
t1468 = t1473 ^ 2;
t1497 = t1468 + t1469;
t1347 = t1476 * t1367 - t1471 * t1383;
t1486 = -t1476 * t1407 - t1471 * t1495;
t1389 = -t1422 * qJD(4) - t1486;
t1490 = t1471 * t1407 - t1476 * t1495;
t1487 = t1424 * qJD(4) + t1490;
t1492 = -t1470 * t1389 - t1475 * t1487;
t1401 = -t1472 * t1425 + t1477 * t1482;
t1485 = t1439 * qJD(3) + qJDD(4) + t1489;
t1382 = -t1495 * pkin(2) - t1507 * pkin(5) + t1439 * t1415 - t1401;
t1484 = -qJDD(5) - t1485;
t1384 = t1485 - t1503;
t1483 = -t1475 * t1389 + t1470 * t1487;
t1455 = -t1468 * t1481 - t1480;
t1452 = -qJDD(2) + t1458;
t1450 = t1497 * t1481;
t1449 = -t1474 * qJDD(1) - t1479 * t1481;
t1448 = t1479 * qJDD(1) - t1474 * t1481;
t1447 = t1497 * qJDD(1);
t1446 = t1465 - 0.2e1 * t1494;
t1443 = 0.2e1 * t1493 + t1496;
t1442 = t1479 * t1453;
t1430 = -t1507 - t1508;
t1429 = t1478 * t1452 - t1473 * t1455;
t1428 = -t1473 * t1451 + t1478 * t1456;
t1427 = t1473 * t1452 + t1478 * t1455;
t1426 = t1478 * t1451 + t1473 * t1456;
t1414 = -t1495 - t1502;
t1413 = t1495 - t1502;
t1412 = -t1507 - t1509;
t1411 = -t1473 * t1434 + t1478 * t1435;
t1410 = t1478 * t1434 + t1473 * t1435;
t1408 = -t1508 - t1509;
t1403 = -t1433 - t1511;
t1400 = t1477 * t1414 - t1472 * t1430;
t1399 = t1472 * t1414 + t1477 * t1430;
t1398 = t1500 * t1437 + t1488;
t1396 = -t1500 * t1439 - t1489;
t1392 = t1477 * t1412 - t1472 * t1413;
t1391 = t1472 * t1412 + t1477 * t1413;
t1390 = -t1421 - t1511;
t1386 = -t1510 - t1512;
t1385 = -t1485 - t1503;
t1380 = -t1472 * t1401 + t1477 * t1402;
t1379 = t1477 * t1401 + t1472 * t1402;
t1378 = t1499 * t1422 + t1486;
t1377 = -t1436 * t1422 + t1389;
t1376 = -t1499 * t1424 - t1490;
t1375 = (qJD(4) + t1436) * t1424 + t1490;
t1374 = -t1510 - t1513;
t1373 = -t1473 * t1399 + t1478 * t1400;
t1372 = t1478 * t1399 + t1473 * t1400;
t1371 = t1477 * t1396 - t1472 * t1398;
t1370 = t1472 * t1396 + t1477 * t1398;
t1369 = -t1473 * t1391 + t1478 * t1392;
t1368 = t1478 * t1391 + t1473 * t1392;
t1366 = t1484 - t1504;
t1365 = -t1484 - t1504;
t1364 = t1476 * t1385 - t1471 * t1403;
t1363 = t1471 * t1385 + t1476 * t1403;
t1360 = -t1512 - t1513;
t1359 = -t1471 * t1384 + t1476 * t1394;
t1358 = t1476 * t1384 + t1471 * t1394;
t1357 = t1382 + (t1424 * t1436 + t1487) * pkin(3);
t1356 = -t1473 * t1379 + t1478 * t1380;
t1355 = t1478 * t1379 + t1473 * t1380;
t1354 = t1476 * t1376 - t1471 * t1378;
t1353 = t1471 * t1376 + t1476 * t1378;
t1352 = t1475 * t1366 - t1470 * t1386;
t1351 = t1470 * t1366 + t1475 * t1386;
t1350 = -t1473 * t1370 + t1478 * t1371;
t1349 = t1478 * t1370 + t1473 * t1371;
t1346 = t1477 * t1364 + t1472 * t1377;
t1345 = t1472 * t1364 - t1477 * t1377;
t1344 = -t1470 * t1365 + t1475 * t1374;
t1343 = t1475 * t1365 + t1470 * t1374;
t1342 = t1477 * t1359 + t1472 * t1375;
t1341 = t1472 * t1359 - t1477 * t1375;
t1340 = t1498 * t1404 + t1483;
t1339 = -t1514 * t1404 - t1483;
t1338 = -t1498 * t1406 + t1492;
t1337 = t1514 * t1406 - t1492;
t1336 = t1394 * pkin(3) + t1348;
t1335 = t1477 * t1354 + t1472 * t1390;
t1334 = t1472 * t1354 - t1477 * t1390;
t1333 = t1384 * pkin(3) + t1347;
t1332 = -t1471 * t1351 + t1476 * t1352;
t1331 = t1476 * t1351 + t1471 * t1352;
t1330 = -t1471 * t1347 + t1476 * t1348;
t1329 = t1476 * t1347 + t1471 * t1348;
t1328 = -t1473 * t1345 + t1478 * t1346;
t1327 = t1478 * t1345 + t1473 * t1346;
t1326 = -t1471 * t1343 + t1476 * t1344;
t1325 = t1476 * t1343 + t1471 * t1344;
t1324 = -t1473 * t1341 + t1478 * t1342;
t1323 = t1478 * t1341 + t1473 * t1342;
t1322 = t1475 * t1338 - t1470 * t1340;
t1321 = t1470 * t1338 + t1475 * t1340;
t1320 = -t1473 * t1334 + t1478 * t1335;
t1319 = t1478 * t1334 + t1473 * t1335;
t1318 = t1477 * t1330 + t1472 * t1382;
t1317 = t1472 * t1330 - t1477 * t1382;
t1316 = t1470 * t1333 + t1475 * t1336;
t1315 = t1475 * t1333 - t1470 * t1336;
t1314 = t1477 * t1332 + t1472 * t1339;
t1313 = t1472 * t1332 - t1477 * t1339;
t1312 = t1477 * t1326 + t1472 * t1337;
t1311 = t1472 * t1326 - t1477 * t1337;
t1310 = -t1471 * t1321 + t1476 * t1322;
t1309 = t1476 * t1321 + t1471 * t1322;
t1308 = -t1473 * t1317 + t1478 * t1318;
t1307 = t1478 * t1317 + t1473 * t1318;
t1306 = t1477 * t1310 + t1472 * t1360;
t1305 = t1472 * t1310 - t1477 * t1360;
t1304 = -t1470 * t1315 + t1475 * t1316;
t1303 = t1475 * t1315 + t1470 * t1316;
t1302 = -t1473 * t1313 + t1478 * t1314;
t1301 = t1478 * t1313 + t1473 * t1314;
t1300 = -t1473 * t1311 + t1478 * t1312;
t1299 = t1478 * t1311 + t1473 * t1312;
t1298 = -t1473 * t1305 + t1478 * t1306;
t1297 = t1478 * t1305 + t1473 * t1306;
t1296 = -t1471 * t1303 + t1476 * t1304;
t1295 = t1476 * t1303 + t1471 * t1304;
t1294 = t1477 * t1296 + t1472 * t1357;
t1293 = t1472 * t1296 - t1477 * t1357;
t1292 = -t1473 * t1293 + t1478 * t1294;
t1291 = t1478 * t1293 + t1473 * t1294;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1449, -t1448, 0, t1479 * t1454 - t1501, 0, 0, 0, 0, 0, 0, t1479 * t1428 - t1474 * t1446, t1479 * t1429 + t1474 * t1443, t1479 * t1447 - t1474 * t1450, t1479 * t1411 - t1501, 0, 0, 0, 0, 0, 0, t1479 * t1369 + t1474 * t1395, t1479 * t1373 - t1474 * t1491, t1479 * t1350 + t1474 * t1408, t1479 * t1356 - t1474 * t1419, 0, 0, 0, 0, 0, 0, t1479 * t1324 + t1474 * t1358, t1479 * t1328 + t1474 * t1363, t1479 * t1320 + t1474 * t1353, t1479 * t1308 + t1474 * t1329, 0, 0, 0, 0, 0, 0, t1479 * t1300 + t1474 * t1325, t1479 * t1302 + t1474 * t1331, t1479 * t1298 + t1474 * t1309, t1479 * t1292 + t1474 * t1295; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1448, t1449, 0, t1474 * t1454 + t1442, 0, 0, 0, 0, 0, 0, t1474 * t1428 + t1479 * t1446, t1474 * t1429 - t1479 * t1443, t1474 * t1447 + t1479 * t1450, t1474 * t1411 + t1442, 0, 0, 0, 0, 0, 0, t1474 * t1369 - t1479 * t1395, t1474 * t1373 + t1479 * t1491, t1474 * t1350 - t1479 * t1408, t1474 * t1356 + t1479 * t1419, 0, 0, 0, 0, 0, 0, t1474 * t1324 - t1479 * t1358, t1474 * t1328 - t1479 * t1363, t1474 * t1320 - t1479 * t1353, t1474 * t1308 - t1479 * t1329, 0, 0, 0, 0, 0, 0, t1474 * t1300 - t1479 * t1325, t1474 * t1302 - t1479 * t1331, t1474 * t1298 - t1479 * t1309, t1474 * t1292 - t1479 * t1295; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1426, t1427, 0, t1410, 0, 0, 0, 0, 0, 0, t1368, t1372, t1349, t1355, 0, 0, 0, 0, 0, 0, t1323, t1327, t1319, t1307, 0, 0, 0, 0, 0, 0, t1299, t1301, t1297, t1291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1481, -qJDD(1), 0, t1454, 0, 0, 0, 0, 0, 0, t1428, t1429, t1447, t1411, 0, 0, 0, 0, 0, 0, t1369, t1373, t1350, t1356, 0, 0, 0, 0, 0, 0, t1324, t1328, t1320, t1308, 0, 0, 0, 0, 0, 0, t1300, t1302, t1298, t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1481, 0, t1453, 0, 0, 0, 0, 0, 0, t1446, -t1443, t1450, t1453, 0, 0, 0, 0, 0, 0, -t1395, t1491, -t1408, t1419, 0, 0, 0, 0, 0, 0, -t1358, -t1363, -t1353, -t1329, 0, 0, 0, 0, 0, 0, -t1325, -t1331, -t1309, -t1295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1426, t1427, 0, t1410, 0, 0, 0, 0, 0, 0, t1368, t1372, t1349, t1355, 0, 0, 0, 0, 0, 0, t1323, t1327, t1319, t1307, 0, 0, 0, 0, 0, 0, t1299, t1301, t1297, t1291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1456, t1452, t1465, t1435, 0, 0, 0, 0, 0, 0, t1392, t1400, t1371, t1380, 0, 0, 0, 0, 0, 0, t1342, t1346, t1335, t1318, 0, 0, 0, 0, 0, 0, t1312, t1314, t1306, t1294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1451, t1455, -t1496, t1434, 0, 0, 0, 0, 0, 0, t1391, t1399, t1370, t1379, 0, 0, 0, 0, 0, 0, t1341, t1345, t1334, t1317, 0, 0, 0, 0, 0, 0, t1311, t1313, t1305, t1293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1446, t1443, -t1450, -t1453, 0, 0, 0, 0, 0, 0, t1395, -t1491, t1408, -t1419, 0, 0, 0, 0, 0, 0, t1358, t1363, t1353, t1329, 0, 0, 0, 0, 0, 0, t1325, t1331, t1309, t1295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1412, t1414, t1396, t1402, 0, 0, 0, 0, 0, 0, t1359, t1364, t1354, t1330, 0, 0, 0, 0, 0, 0, t1326, t1332, t1310, t1296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1413, t1430, t1398, t1401, 0, 0, 0, 0, 0, 0, -t1375, -t1377, -t1390, -t1382, 0, 0, 0, 0, 0, 0, -t1337, -t1339, -t1360, -t1357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1395, -t1491, t1408, -t1419, 0, 0, 0, 0, 0, 0, t1358, t1363, t1353, t1329, 0, 0, 0, 0, 0, 0, t1325, t1331, t1309, t1295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1394, t1385, t1376, t1348, 0, 0, 0, 0, 0, 0, t1344, t1352, t1322, t1304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1384, t1403, t1378, t1347, 0, 0, 0, 0, 0, 0, t1343, t1351, t1321, t1303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1375, t1377, t1390, t1382, 0, 0, 0, 0, 0, 0, t1337, t1339, t1360, t1357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1374, t1366, t1338, t1316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1365, t1386, t1340, t1315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1337, t1339, t1360, t1357;];
f_new_reg = t1;
