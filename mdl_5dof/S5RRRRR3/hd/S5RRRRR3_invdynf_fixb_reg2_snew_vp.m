% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRRR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,a5,d1,d4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-07-18 17:19
% Revision: 08c8d617a845f5dd194efdf9aca2774760f7818f (2019-07-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRRR3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR3_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR3_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR3_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'S5RRRRR3_invdynf_fixb_reg2_snew_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-07-18 17:19:34
% EndTime: 2019-07-18 17:19:37
% DurationCPUTime: 3.57s
% Computational Cost: add. (21776->241), mult. (44563->333), div. (0->0), fcn. (34736->10), ass. (0->199)
t1473 = sin(qJ(3));
t1478 = cos(qJ(3));
t1479 = cos(qJ(2));
t1506 = qJD(1) * t1479;
t1474 = sin(qJ(2));
t1507 = qJD(1) * t1474;
t1438 = t1473 * t1507 - t1478 * t1506;
t1437 = qJD(4) + t1438;
t1433 = qJD(5) + t1437;
t1515 = qJD(5) + t1433;
t1440 = (t1473 * t1479 + t1474 * t1478) * qJD(1);
t1468 = qJD(2) + qJD(3);
t1472 = sin(qJ(4));
t1477 = cos(qJ(4));
t1423 = t1440 * t1472 - t1477 * t1468;
t1422 = t1423 ^ 2;
t1434 = t1437 ^ 2;
t1395 = -t1422 - t1434;
t1425 = t1440 * t1477 + t1468 * t1472;
t1471 = sin(qJ(5));
t1476 = cos(qJ(5));
t1405 = t1476 * t1423 + t1425 * t1471;
t1514 = t1405 ^ 2;
t1407 = -t1423 * t1471 + t1425 * t1476;
t1513 = t1407 ^ 2;
t1512 = t1425 ^ 2;
t1511 = t1433 ^ 2;
t1510 = t1438 ^ 2;
t1509 = t1440 ^ 2;
t1508 = t1468 ^ 2;
t1505 = t1405 * t1407;
t1504 = t1423 * t1425;
t1503 = t1438 * t1440;
t1475 = sin(qJ(1));
t1480 = cos(qJ(1));
t1454 = t1475 * g(1) - t1480 * g(2);
t1502 = t1454 * t1475;
t1501 = qJD(3) - t1468;
t1500 = qJD(4) - t1437;
t1499 = qJD(5) - t1433;
t1494 = qJD(2) * t1506;
t1497 = t1474 * qJDD(1);
t1445 = t1494 + t1497;
t1466 = t1479 * qJDD(1);
t1495 = qJD(2) * t1507;
t1446 = t1466 - t1495;
t1490 = t1473 * t1445 - t1478 * t1446;
t1396 = (qJD(3) + t1468) * t1440 + t1490;
t1420 = t1454 + (t1446 - t1495) * pkin(1);
t1489 = -t1478 * t1445 - t1473 * t1446;
t1408 = -qJD(3) * t1438 - t1489;
t1492 = t1468 * t1438 - t1408;
t1368 = pkin(2) * t1396 + pkin(5) * t1492 - t1420;
t1455 = -g(1) * t1480 - g(2) * t1475;
t1436 = -t1474 * g(3) + t1479 * t1455;
t1470 = t1479 ^ 2;
t1481 = qJD(2) ^ 2;
t1482 = qJD(1) ^ 2;
t1457 = -t1470 * t1482 - t1481;
t1426 = pkin(1) * t1457 + t1436;
t1435 = -t1479 * g(3) - t1474 * t1455;
t1459 = t1479 * t1482 * t1474;
t1452 = qJDD(2) + t1459;
t1483 = pkin(1) * t1452 + t1435;
t1403 = t1478 * t1426 + t1473 * t1483;
t1416 = pkin(2) * t1438 - pkin(5) * t1440;
t1496 = qJDD(2) + qJDD(3);
t1384 = -pkin(2) * t1508 + pkin(5) * t1496 - t1438 * t1416 + t1403;
t1349 = t1472 * t1368 + t1477 * t1384;
t1469 = t1474 ^ 2;
t1498 = t1469 + t1470;
t1348 = t1477 * t1368 - t1472 * t1384;
t1487 = -t1477 * t1408 - t1472 * t1496;
t1390 = -t1423 * qJD(4) - t1487;
t1491 = t1472 * t1408 - t1477 * t1496;
t1488 = qJD(4) * t1425 + t1491;
t1493 = -t1471 * t1390 - t1476 * t1488;
t1402 = -t1473 * t1426 + t1478 * t1483;
t1486 = qJD(3) * t1440 + qJDD(4) + t1490;
t1383 = -t1496 * pkin(2) - t1508 * pkin(5) + t1440 * t1416 - t1402;
t1485 = -qJDD(5) - t1486;
t1385 = t1486 - t1504;
t1484 = -t1476 * t1390 + t1471 * t1488;
t1456 = -t1469 * t1482 - t1481;
t1453 = -qJDD(2) + t1459;
t1451 = t1498 * t1482;
t1450 = -qJDD(1) * t1475 - t1480 * t1482;
t1449 = qJDD(1) * t1480 - t1475 * t1482;
t1448 = t1498 * qJDD(1);
t1447 = t1466 - 0.2e1 * t1495;
t1444 = 0.2e1 * t1494 + t1497;
t1443 = t1480 * t1454;
t1431 = -t1508 - t1509;
t1430 = t1453 * t1479 - t1456 * t1474;
t1429 = -t1452 * t1474 + t1457 * t1479;
t1428 = t1453 * t1474 + t1456 * t1479;
t1427 = t1452 * t1479 + t1457 * t1474;
t1415 = -t1496 - t1503;
t1414 = t1496 - t1503;
t1413 = -t1508 - t1510;
t1412 = -t1435 * t1474 + t1436 * t1479;
t1411 = t1435 * t1479 + t1436 * t1474;
t1409 = -t1509 - t1510;
t1404 = -t1434 - t1512;
t1401 = t1415 * t1478 - t1431 * t1473;
t1400 = t1415 * t1473 + t1431 * t1478;
t1399 = t1438 * t1501 + t1489;
t1397 = -t1440 * t1501 - t1490;
t1393 = t1413 * t1478 - t1414 * t1473;
t1392 = t1413 * t1473 + t1414 * t1478;
t1391 = -t1422 - t1512;
t1387 = -t1511 - t1513;
t1386 = -t1486 - t1504;
t1381 = -t1402 * t1473 + t1403 * t1478;
t1380 = t1402 * t1478 + t1403 * t1473;
t1379 = t1423 * t1500 + t1487;
t1378 = -t1437 * t1423 + t1390;
t1377 = -t1425 * t1500 - t1491;
t1376 = (qJD(4) + t1437) * t1425 + t1491;
t1375 = -t1511 - t1514;
t1374 = -t1400 * t1474 + t1401 * t1479;
t1373 = t1400 * t1479 + t1401 * t1474;
t1372 = t1397 * t1478 - t1399 * t1473;
t1371 = t1397 * t1473 + t1399 * t1478;
t1370 = -t1392 * t1474 + t1393 * t1479;
t1369 = t1392 * t1479 + t1393 * t1474;
t1367 = t1485 - t1505;
t1366 = -t1485 - t1505;
t1365 = t1386 * t1477 - t1404 * t1472;
t1364 = t1386 * t1472 + t1404 * t1477;
t1361 = -t1513 - t1514;
t1360 = -t1385 * t1472 + t1395 * t1477;
t1359 = t1385 * t1477 + t1395 * t1472;
t1358 = t1383 + (t1425 * t1437 + t1488) * pkin(3);
t1357 = -t1380 * t1474 + t1381 * t1479;
t1356 = t1380 * t1479 + t1381 * t1474;
t1355 = t1377 * t1477 - t1379 * t1472;
t1354 = t1377 * t1472 + t1379 * t1477;
t1353 = t1367 * t1476 - t1387 * t1471;
t1352 = t1367 * t1471 + t1387 * t1476;
t1351 = -t1371 * t1474 + t1372 * t1479;
t1350 = t1371 * t1479 + t1372 * t1474;
t1347 = t1365 * t1478 + t1378 * t1473;
t1346 = t1365 * t1473 - t1378 * t1478;
t1345 = -t1366 * t1471 + t1375 * t1476;
t1344 = t1366 * t1476 + t1375 * t1471;
t1343 = t1360 * t1478 + t1376 * t1473;
t1342 = t1360 * t1473 - t1376 * t1478;
t1341 = t1405 * t1499 + t1484;
t1340 = -t1405 * t1515 - t1484;
t1339 = -t1407 * t1499 + t1493;
t1338 = t1407 * t1515 - t1493;
t1337 = pkin(3) * t1395 + t1349;
t1336 = t1355 * t1478 + t1391 * t1473;
t1335 = t1355 * t1473 - t1391 * t1478;
t1334 = pkin(3) * t1385 + t1348;
t1333 = -t1352 * t1472 + t1353 * t1477;
t1332 = t1352 * t1477 + t1353 * t1472;
t1331 = -t1348 * t1472 + t1349 * t1477;
t1330 = t1348 * t1477 + t1349 * t1472;
t1329 = -t1346 * t1474 + t1347 * t1479;
t1328 = t1346 * t1479 + t1347 * t1474;
t1327 = -t1344 * t1472 + t1345 * t1477;
t1326 = t1344 * t1477 + t1345 * t1472;
t1325 = -t1342 * t1474 + t1343 * t1479;
t1324 = t1342 * t1479 + t1343 * t1474;
t1323 = t1339 * t1476 - t1341 * t1471;
t1322 = t1339 * t1471 + t1341 * t1476;
t1321 = -t1335 * t1474 + t1336 * t1479;
t1320 = t1335 * t1479 + t1336 * t1474;
t1319 = t1331 * t1478 + t1383 * t1473;
t1318 = t1331 * t1473 - t1383 * t1478;
t1317 = t1334 * t1471 + t1337 * t1476;
t1316 = t1334 * t1476 - t1337 * t1471;
t1315 = t1333 * t1478 + t1340 * t1473;
t1314 = t1333 * t1473 - t1340 * t1478;
t1313 = t1327 * t1478 + t1338 * t1473;
t1312 = t1327 * t1473 - t1338 * t1478;
t1311 = -t1322 * t1472 + t1323 * t1477;
t1310 = t1322 * t1477 + t1323 * t1472;
t1309 = -t1318 * t1474 + t1319 * t1479;
t1308 = t1318 * t1479 + t1319 * t1474;
t1307 = t1311 * t1478 + t1361 * t1473;
t1306 = t1311 * t1473 - t1361 * t1478;
t1305 = -t1316 * t1471 + t1317 * t1476;
t1304 = t1316 * t1476 + t1317 * t1471;
t1303 = -t1314 * t1474 + t1315 * t1479;
t1302 = t1314 * t1479 + t1315 * t1474;
t1301 = -t1312 * t1474 + t1313 * t1479;
t1300 = t1312 * t1479 + t1313 * t1474;
t1299 = -t1306 * t1474 + t1307 * t1479;
t1298 = t1306 * t1479 + t1307 * t1474;
t1297 = -t1304 * t1472 + t1305 * t1477;
t1296 = t1304 * t1477 + t1305 * t1472;
t1295 = t1297 * t1478 + t1358 * t1473;
t1294 = t1297 * t1473 - t1358 * t1478;
t1293 = -t1294 * t1474 + t1295 * t1479;
t1292 = t1294 * t1479 + t1295 * t1474;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1450, -t1449, 0, t1455 * t1480 - t1502, 0, 0, 0, 0, 0, 0, t1429 * t1480 - t1447 * t1475, t1430 * t1480 + t1444 * t1475, t1448 * t1480 - t1451 * t1475, t1412 * t1480 - t1502, 0, 0, 0, 0, 0, 0, t1370 * t1480 + t1396 * t1475, t1374 * t1480 - t1475 * t1492, t1351 * t1480 + t1409 * t1475, t1357 * t1480 - t1420 * t1475, 0, 0, 0, 0, 0, 0, t1325 * t1480 + t1359 * t1475, t1329 * t1480 + t1364 * t1475, t1321 * t1480 + t1354 * t1475, t1309 * t1480 + t1330 * t1475, 0, 0, 0, 0, 0, 0, t1301 * t1480 + t1326 * t1475, t1303 * t1480 + t1332 * t1475, t1299 * t1480 + t1310 * t1475, t1293 * t1480 + t1296 * t1475; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1449, t1450, 0, t1455 * t1475 + t1443, 0, 0, 0, 0, 0, 0, t1429 * t1475 + t1447 * t1480, t1430 * t1475 - t1444 * t1480, t1448 * t1475 + t1451 * t1480, t1412 * t1475 + t1443, 0, 0, 0, 0, 0, 0, t1370 * t1475 - t1396 * t1480, t1374 * t1475 + t1480 * t1492, t1351 * t1475 - t1409 * t1480, t1357 * t1475 + t1420 * t1480, 0, 0, 0, 0, 0, 0, t1325 * t1475 - t1359 * t1480, t1329 * t1475 - t1364 * t1480, t1321 * t1475 - t1354 * t1480, t1309 * t1475 - t1330 * t1480, 0, 0, 0, 0, 0, 0, t1301 * t1475 - t1326 * t1480, t1303 * t1475 - t1332 * t1480, t1299 * t1475 - t1310 * t1480, t1293 * t1475 - t1296 * t1480; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1427, t1428, 0, t1411, 0, 0, 0, 0, 0, 0, t1369, t1373, t1350, t1356, 0, 0, 0, 0, 0, 0, t1324, t1328, t1320, t1308, 0, 0, 0, 0, 0, 0, t1300, t1302, t1298, t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1482, -qJDD(1), 0, t1455, 0, 0, 0, 0, 0, 0, t1429, t1430, t1448, t1412, 0, 0, 0, 0, 0, 0, t1370, t1374, t1351, t1357, 0, 0, 0, 0, 0, 0, t1325, t1329, t1321, t1309, 0, 0, 0, 0, 0, 0, t1301, t1303, t1299, t1293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1482, 0, t1454, 0, 0, 0, 0, 0, 0, t1447, -t1444, t1451, t1454, 0, 0, 0, 0, 0, 0, -t1396, t1492, -t1409, t1420, 0, 0, 0, 0, 0, 0, -t1359, -t1364, -t1354, -t1330, 0, 0, 0, 0, 0, 0, -t1326, -t1332, -t1310, -t1296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1427, t1428, 0, t1411, 0, 0, 0, 0, 0, 0, t1369, t1373, t1350, t1356, 0, 0, 0, 0, 0, 0, t1324, t1328, t1320, t1308, 0, 0, 0, 0, 0, 0, t1300, t1302, t1298, t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1457, t1453, t1466, t1436, 0, 0, 0, 0, 0, 0, t1393, t1401, t1372, t1381, 0, 0, 0, 0, 0, 0, t1343, t1347, t1336, t1319, 0, 0, 0, 0, 0, 0, t1313, t1315, t1307, t1295; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1452, t1456, -t1497, t1435, 0, 0, 0, 0, 0, 0, t1392, t1400, t1371, t1380, 0, 0, 0, 0, 0, 0, t1342, t1346, t1335, t1318, 0, 0, 0, 0, 0, 0, t1312, t1314, t1306, t1294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1447, t1444, -t1451, -t1454, 0, 0, 0, 0, 0, 0, t1396, -t1492, t1409, -t1420, 0, 0, 0, 0, 0, 0, t1359, t1364, t1354, t1330, 0, 0, 0, 0, 0, 0, t1326, t1332, t1310, t1296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1413, t1415, t1397, t1403, 0, 0, 0, 0, 0, 0, t1360, t1365, t1355, t1331, 0, 0, 0, 0, 0, 0, t1327, t1333, t1311, t1297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1414, t1431, t1399, t1402, 0, 0, 0, 0, 0, 0, -t1376, -t1378, -t1391, -t1383, 0, 0, 0, 0, 0, 0, -t1338, -t1340, -t1361, -t1358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1396, -t1492, t1409, -t1420, 0, 0, 0, 0, 0, 0, t1359, t1364, t1354, t1330, 0, 0, 0, 0, 0, 0, t1326, t1332, t1310, t1296; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1395, t1386, t1377, t1349, 0, 0, 0, 0, 0, 0, t1345, t1353, t1323, t1305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1385, t1404, t1379, t1348, 0, 0, 0, 0, 0, 0, t1344, t1352, t1322, t1304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1376, t1378, t1391, t1383, 0, 0, 0, 0, 0, 0, t1338, t1340, t1361, t1358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1375, t1367, t1339, t1317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1366, t1387, t1341, t1316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1338, t1340, t1361, t1358;];
f_new_reg  = t1;
