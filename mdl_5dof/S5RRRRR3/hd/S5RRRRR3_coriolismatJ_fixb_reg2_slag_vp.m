% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,a5,d1,d4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-07-18 17:19
% Revision: 08c8d617a845f5dd194efdf9aca2774760f7818f (2019-07-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'S5RRRRR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-07-18 17:18:48
% EndTime: 2019-07-18 17:19:21
% DurationCPUTime: 17.32s
% Computational Cost: add. (13796->631), mult. (31312->910), div. (0->0), fcn. (35268->8), ass. (0->522)
t500 = cos(qJ(2));
t498 = sin(qJ(2));
t824 = cos(qJ(3));
t652 = t824 * t498;
t497 = sin(qJ(3));
t733 = t497 * t500;
t462 = t652 + t733;
t459 = t497 * t498 - t500 * t824;
t819 = t459 * pkin(2);
t586 = -t462 * pkin(5) + t819;
t343 = -pkin(1) * t500 + t586;
t499 = cos(qJ(4));
t821 = pkin(3) * t459;
t580 = t343 * t499 + t821;
t823 = cos(qJ(5));
t241 = t823 * t580;
t496 = sin(qJ(4));
t822 = sin(qJ(5));
t645 = t822 * t496;
t175 = t343 * t645 - t241;
t648 = t823 * t499;
t457 = t645 - t648;
t200 = t457 * t343;
t875 = t175 - t200;
t532 = t822 * t580;
t649 = t823 * t496;
t177 = t343 * t649 + t532;
t644 = t822 * t499;
t533 = -t644 - t649;
t199 = t533 * t343;
t830 = -t533 / 0.2e1;
t831 = t533 / 0.2e1;
t866 = t457 / 0.2e1;
t879 = t177 * t830 - t199 * t831 + t866 * t875;
t310 = t533 * t459;
t412 = t459 * t645;
t313 = -t459 * t648 + t412;
t668 = -t822 / 0.2e1;
t670 = -t823 / 0.2e1;
t518 = (t310 * t668 + t313 * t670) * pkin(3);
t503 = t518 + t879;
t878 = qJD(4) * t503;
t508 = t518 - t879;
t877 = t508 * qJD(4);
t674 = qJD(2) + qJD(3);
t311 = t533 * t462;
t314 = t462 * t457;
t839 = t314 / 0.2e1;
t154 = t311 * t830 + t457 * t839;
t673 = qJD(4) + qJD(5);
t876 = t673 * t154;
t874 = t177 + t199;
t617 = t674 * t533;
t861 = t154 * qJD(1);
t873 = -t457 * t617 - t861;
t755 = t457 * t533;
t872 = t674 * t755 + t861;
t868 = -0.2e1 * t462;
t867 = -t175 / 0.2e1;
t816 = t497 * pkin(1);
t489 = pkin(5) + t816;
t381 = t533 * t489;
t838 = t381 / 0.2e1;
t451 = t533 * pkin(5);
t835 = t451 / 0.2e1;
t452 = t457 * pkin(5);
t834 = -t452 / 0.2e1;
t833 = -t459 / 0.2e1;
t832 = t459 / 0.2e1;
t666 = t824 * pkin(1);
t490 = -t666 - pkin(2);
t815 = t499 * pkin(3);
t473 = t490 - t815;
t829 = t473 / 0.2e1;
t491 = -pkin(2) - t815;
t865 = -t491 / 0.2e1;
t864 = t491 / 0.2e1;
t858 = t462 * t674;
t863 = t459 * t858;
t455 = t652 / 0.2e1 + t733 / 0.2e1;
t713 = qJD(1) * t462;
t638 = t459 * t713;
t270 = t455 * qJD(4) + t638;
t809 = pkin(3) * qJD(4);
t853 = qJD(1) * t503;
t862 = (t457 * t823 + t533 * t822) * t809 - t853;
t715 = qJD(1) * t314;
t860 = t154 * t674 - t311 * t715;
t859 = 0.2e1 * t462;
t382 = t457 * t489;
t837 = t382 / 0.2e1;
t351 = t674 * t459;
t494 = t496 ^ 2;
t495 = t499 ^ 2;
t718 = t494 + t495;
t621 = t718 * t343;
t456 = t462 ^ 2;
t672 = -t459 ^ 2 + t456;
t856 = t473 + t491;
t751 = t462 * t497;
t635 = t751 / 0.2e1;
t653 = t824 * t459;
t753 = t462 * t489;
t754 = t459 * t490;
t855 = -t753 / 0.2e1 - t754 / 0.2e1 + (-t653 / 0.2e1 + t635) * pkin(1) + t819 / 0.2e1;
t604 = -t666 / 0.2e1;
t854 = t604 + t490 / 0.2e1;
t227 = qJD(5) * t455 + t270;
t454 = t462 * pkin(3);
t657 = t454 / 0.2e1;
t609 = t457 * t657;
t820 = pkin(3) * t496;
t660 = -t820 / 0.2e1;
t851 = t311 * t660 + t499 * t609 + t823 * t657;
t665 = t822 * pkin(3);
t603 = -t665 / 0.2e1;
t607 = t533 * t657;
t659 = t820 / 0.2e1;
t850 = -t314 * t659 + t462 * t603 - t499 * t607;
t849 = t314 * t864 + t452 * t833;
t848 = t311 * t865 + t451 * t832;
t847 = t314 * t829 + t382 * t833;
t846 = -t473 * t311 / 0.2e1 + t381 * t832;
t100 = -t311 * t457 - t314 * t533;
t122 = t311 ^ 2 - t314 ^ 2;
t27 = qJD(1) * t122 + t100 * t674;
t295 = t457 ^ 2 - t533 ^ 2;
t66 = t100 * qJD(1) + t295 * t674;
t335 = (t494 / 0.2e1 - t495 / 0.2e1) * t462;
t734 = t496 * t499;
t642 = qJD(1) * t734;
t180 = t335 * t674 + t456 * t642;
t478 = t495 - t494;
t298 = t478 * t674 + t642 * t868;
t841 = -t177 / 0.2e1;
t817 = t462 * pkin(2);
t818 = t459 * pkin(5);
t357 = t817 + t818;
t731 = t499 * t357;
t263 = t454 + t731;
t650 = t823 * t263;
t185 = -t357 * t645 + t650;
t840 = -t185 / 0.2e1;
t836 = t412 / 0.2e1;
t828 = -t490 / 0.2e1;
t826 = -t496 / 0.2e1;
t825 = -t499 / 0.2e1;
t813 = t673 * t100;
t812 = pkin(1) * qJD(2);
t811 = pkin(1) * qJD(3);
t810 = pkin(2) * qJD(3);
t737 = t496 * t314;
t78 = t199 * t459 + (-t311 * t499 - t737) * t454;
t800 = qJD(1) * t78;
t738 = t496 * t311;
t79 = t200 * t459 + (-t314 * t499 + t738) * t454;
t799 = qJD(1) * t79;
t752 = t462 * t496;
t671 = pkin(3) * t752;
t90 = t175 * t459 + t311 * t671;
t798 = qJD(1) * t90;
t91 = -t177 * t459 - t314 * t671;
t797 = qJD(1) * t91;
t342 = pkin(1) * t498 + t357;
t732 = t499 * t342;
t258 = t454 + t732;
t651 = t823 * t258;
t174 = -t342 * t645 + t651;
t796 = t174 * t533;
t647 = t822 * t258;
t176 = t342 * t649 + t647;
t792 = t176 * t457;
t788 = t185 * t533;
t646 = t822 * t263;
t186 = t357 * t649 + t646;
t787 = t186 * t457;
t569 = t175 * t313 - t177 * t310;
t19 = t174 * t314 + t176 * t311 + t569;
t786 = t19 * qJD(1);
t20 = t185 * t314 + t186 * t311 + t569;
t784 = t20 * qJD(1);
t21 = t311 * t875 + t314 * t874;
t782 = t21 * qJD(1);
t501 = pkin(3) ^ 2;
t654 = t494 * t462 * t501;
t605 = t459 * t654;
t29 = -t174 * t175 + t176 * t177 - t605;
t781 = t29 * qJD(1);
t32 = -t175 * t185 + t177 * t186 - t605;
t780 = t32 * qJD(1);
t34 = t456 * t501 * t734 - t175 * t199 - t177 * t200;
t779 = t34 * qJD(1);
t778 = t343 * t462;
t517 = (t310 * t462 + t311 * t459) * t820 - t175 * t462;
t35 = t174 * t459 + t517;
t777 = t35 * qJD(1);
t516 = (t313 * t462 + t314 * t459) * t820 - t177 * t462;
t36 = -t176 * t459 + t516;
t776 = t36 * qJD(1);
t37 = t185 * t459 + t517;
t775 = t37 * qJD(1);
t38 = -t186 * t459 + t516;
t774 = t38 * qJD(1);
t772 = t381 * t313;
t769 = t381 * t462;
t768 = t382 * t310;
t764 = t382 * t462;
t762 = t451 * t313;
t760 = t451 * t462;
t759 = t452 * t310;
t756 = t452 * t462;
t750 = t473 * t310;
t748 = t473 * t313;
t746 = t473 * t457;
t745 = t473 * t533;
t744 = t491 * t310;
t742 = t491 * t313;
t740 = t491 * t457;
t739 = t491 * t533;
t736 = t496 * t457;
t735 = t496 * t533;
t587 = t459 * t621;
t620 = t718 * t462;
t82 = t342 * t620 - t587;
t730 = t82 * qJD(1);
t87 = t357 * t620 - t587;
t729 = t87 * qJD(1);
t722 = t673 * t381;
t721 = t673 * t382;
t720 = t673 * t451;
t719 = t673 * t452;
t716 = qJD(1) * t311;
t714 = qJD(1) * t459;
t712 = qJD(1) * t500;
t711 = qJD(2) * t473;
t710 = qJD(2) * t490;
t709 = qJD(3) * t491;
t708 = qJD(4) * t496;
t707 = qJD(4) * t499;
t706 = qJD(5) * t473;
t705 = qJD(5) * t491;
t101 = t310 * t314 + t311 * t313;
t703 = t101 * qJD(1);
t107 = t342 * t621;
t702 = t107 * qJD(1);
t108 = t357 * t621;
t701 = t108 * qJD(1);
t555 = t828 + t604;
t655 = t816 / 0.2e1;
t504 = (-t489 / 0.2e1 + t655 + pkin(5) / 0.2e1) * t462 + (-pkin(2) / 0.2e1 + t555) * t459;
t114 = t504 * t496;
t700 = t114 * qJD(1);
t123 = t459 * t665;
t699 = t123 * qJD(1);
t544 = -t241 / 0.2e1 + t670 * t821;
t592 = -t648 / 0.2e1;
t124 = t343 * t592 - t544;
t698 = t124 * qJD(1);
t156 = -t310 * t459 + t311 * t462;
t695 = t156 * qJD(1);
t157 = t313 * t459 - t314 * t462;
t694 = t157 * qJD(1);
t568 = t342 * t459 + t778;
t165 = t568 * t496;
t693 = t165 * qJD(1);
t166 = t568 * t499;
t692 = t166 * qJD(1);
t567 = t357 * t459 + t778;
t172 = t567 * t496;
t691 = t172 * qJD(1);
t173 = t567 * t499;
t690 = t173 * qJD(1);
t523 = t644 / 0.2e1 + t649 / 0.2e1;
t212 = (t830 + t523) * t459;
t207 = t212 * qJD(1);
t213 = t836 + (t592 + t866) * t459;
t208 = t213 * qJD(1);
t268 = t672 * t496;
t689 = t268 * qJD(1);
t269 = t672 * t499;
t688 = t269 * qJD(1);
t687 = t672 * qJD(1);
t534 = t718 * t824;
t328 = (t489 * t534 + t490 * t497) * pkin(1);
t686 = t328 * qJD(2);
t331 = (t459 * t498 - t462 * t500) * pkin(1);
t685 = t331 * qJD(1);
t332 = (t459 * t500 + t462 * t498) * pkin(1);
t684 = t332 * qJD(1);
t683 = t335 * qJD(1);
t682 = t335 * qJD(4);
t336 = t496 * t459;
t681 = t336 * qJD(1);
t339 = t499 * t459;
t327 = t339 * qJD(1);
t346 = t478 * t456;
t680 = t346 * qJD(1);
t453 = t534 * pkin(1);
t679 = t453 * qJD(2);
t678 = t455 * qJD(1);
t479 = -t498 ^ 2 + t500 ^ 2;
t676 = t479 * qJD(1);
t675 = t500 * qJD(2);
t127 = t473 * t820;
t439 = pkin(3) * t736;
t440 = pkin(3) * t735;
t201 = t491 * t820;
t669 = t823 / 0.2e1;
t667 = t822 / 0.2e1;
t664 = pkin(1) * t712;
t663 = t500 * t811;
t662 = t497 * t811;
t661 = t497 * t812;
t656 = -t816 / 0.2e1;
t643 = t343 * t714;
t641 = t459 * t708;
t640 = t459 * t707;
t482 = t496 * t707;
t637 = t498 * t675;
t483 = t498 * t712;
t636 = -t752 / 0.2e1;
t634 = t462 * t825;
t633 = t841 - t199 / 0.2e1;
t632 = t200 / 0.2e1 + t867;
t631 = t838 - t451 / 0.2e1;
t630 = t837 + t834;
t629 = t829 + t865;
t628 = t864 + t829;
t627 = t824 * qJD(2);
t626 = t824 * qJD(3);
t625 = t823 * qJD(4);
t624 = t823 * qJD(5);
t623 = t822 * qJD(4);
t622 = t822 * qJD(5);
t616 = t674 * t499;
t615 = t673 * t459;
t614 = t673 * t533;
t613 = t459 * t664;
t612 = t462 * t664;
t610 = t499 * t657;
t608 = t454 * t831;
t606 = -qJD(4) - t714;
t602 = t456 * t482;
t502 = pkin(1) ^ 2;
t599 = t502 * t483;
t598 = -t654 / 0.2e1;
t597 = t824 * t823;
t596 = t824 * t822;
t595 = t651 / 0.2e1;
t594 = t650 / 0.2e1;
t593 = -t649 / 0.2e1;
t591 = -t647 / 0.2e1;
t590 = -t646 / 0.2e1;
t589 = -t645 / 0.2e1;
t588 = t674 * t816;
t583 = t674 * t734;
t581 = t496 * t616;
t577 = -qJD(5) + t606;
t526 = t174 * t669 + t176 * t667;
t9 = t598 - t632 * t382 + t633 * t381 + (t473 * t634 + t526) * pkin(3);
t576 = -t9 * qJD(1) + t127 * qJD(2);
t565 = t499 * t596;
t410 = (-t496 * t597 - t565) * pkin(1);
t566 = t496 * t596;
t411 = (t499 * t597 - t566) * pkin(1);
t155 = t381 * t410 - t382 * t411 + t473 * t816;
t511 = t175 * t410 / 0.2e1 + t411 * t841 + t381 * t840 + t186 * t837;
t552 = t174 * t835 + t176 * t834;
t3 = (t459 * t629 + t462 * t656) * t820 + t511 + t552;
t575 = -t3 * qJD(1) + t155 * qJD(2);
t551 = t410 * t839 + t411 * t311 / 0.2e1;
t2 = -(t840 + t174 / 0.2e1) * t533 + (-t186 / 0.2e1 + t176 / 0.2e1) * t457 - t631 * t313 + t630 * t310 + t551;
t211 = t410 * t533 - t411 * t457;
t574 = -qJD(1) * t2 - qJD(2) * t211;
t564 = t342 * t593;
t563 = t357 * t593;
t562 = t342 * t589;
t561 = t357 * t589;
t285 = t439 - t745;
t507 = (t738 / 0.2e1 + (t669 + t457 * t825 + t735 / 0.2e1) * t462) * pkin(3);
t514 = t595 + t847;
t40 = t562 + t507 + t514;
t560 = qJD(1) * t40 - qJD(2) * t285;
t286 = -t440 - t746;
t506 = (t737 / 0.2e1 + (t668 - t533 * t825 + t736 / 0.2e1) * t462) * pkin(3);
t515 = t591 + t846;
t39 = t564 + t506 + t515;
t559 = qJD(1) * t39 - qJD(2) * t286;
t558 = t606 * t496;
t557 = t606 * t499;
t556 = -t597 / 0.2e1;
t554 = t818 / 0.2e1 + t817 / 0.2e1;
t553 = qJD(3) * t586;
t550 = t462 * t828 + t489 * t832;
t75 = (t342 * t670 + t609) * t496 + t515;
t549 = qJD(1) * t75 + t457 * t711;
t74 = (t342 * t668 + t608) * t496 + t514;
t548 = qJD(1) * t74 + t533 * t711;
t547 = t462 * t557;
t531 = t342 / 0.2e1 + t550;
t191 = t531 * t496;
t546 = -qJD(1) * t191 - t499 * t710;
t194 = t531 * t499;
t545 = qJD(1) * t194 - t496 * t710;
t543 = qJD(2) * (-t753 - t754);
t542 = pkin(2) / 0.2e1 + t555;
t541 = t311 * t656 + t410 * t832;
t540 = -t314 * t655 + t411 * t833;
t70 = t310 * t629 + t462 * t631 + t541;
t539 = -qJD(1) * t70 - t457 * t661;
t71 = t313 * t629 + t462 * t630 + t540;
t538 = -qJD(1) * t71 + t533 * t661;
t117 = t504 * t499;
t537 = -qJD(1) * t117 - t496 * t661;
t536 = t357 / 0.2e1 + t554;
t535 = t581 * t859;
t525 = t185 * t669 + t186 * t667;
t16 = t598 - t632 * t452 + t633 * t451 + (t491 * t634 + t525) * pkin(3);
t524 = t410 * t669 + t411 * t667;
t72 = (-t496 * t628 + t524) * pkin(3);
t530 = -t16 * qJD(1) - t72 * qJD(2) + t201 * qJD(3);
t509 = (-t565 / 0.2e1 + t496 * t556) * pkin(1);
t216 = t533 * t628 + t509;
t195 = -t439 + t216;
t319 = t439 - t739;
t512 = t594 + t849;
t52 = t561 + t507 + t512;
t529 = qJD(1) * t52 + qJD(2) * t195 - qJD(3) * t319;
t510 = (t499 * t556 + t566 / 0.2e1) * pkin(1);
t217 = t457 * t628 + t510;
t196 = t440 + t217;
t320 = -t440 - t740;
t513 = t590 + t848;
t51 = t563 + t506 + t513;
t528 = qJD(1) * t51 + qJD(2) * t196 - qJD(3) * t320;
t202 = t536 * t496;
t394 = t542 * t499;
t522 = -qJD(1) * t202 + qJD(2) * t394 + t499 * t810;
t205 = t536 * t499;
t393 = t542 * t496;
t521 = qJD(1) * t205 + qJD(2) * t393 + t496 * t810;
t83 = (t357 * t668 + t608) * t496 + t512;
t520 = qJD(1) * t83 + qJD(2) * t216 + t533 * t709;
t84 = (t357 * t670 + t609) * t496 + t513;
t519 = qJD(1) * t84 + qJD(2) * t217 + t457 * t709;
t347 = pkin(3) * t457 * t636;
t76 = t347 + t564 + t591 - t846;
t348 = t496 * t607;
t77 = -t348 + t562 + t595 - t847;
t85 = t347 + t563 + t590 - t848;
t86 = -t348 + t561 + t594 - t849;
t218 = -t740 / 0.2e1 - t746 / 0.2e1 + t510;
t219 = -t739 / 0.2e1 - t745 / 0.2e1 + t509;
t477 = t496 * t662;
t474 = t478 * qJD(4);
t445 = t453 * qJD(3);
t432 = t533 * t662;
t431 = t457 * t662;
t416 = t654 / 0.2e1;
t396 = pkin(2) * t825 + t499 * t854;
t395 = pkin(2) * t826 + t496 * t854;
t356 = t459 * t440;
t355 = t459 * t439;
t344 = t674 * t455;
t283 = t327 + t707;
t282 = -t681 - t708;
t257 = t581 - t683;
t256 = -t583 + t683;
t240 = t457 * t614;
t238 = t673 * t755;
t237 = 0.2e1 * t496 * t547;
t215 = (t523 + t831) * t459;
t214 = t457 * t833 + t459 * t592 + t836;
t210 = t495 * t638 - t682;
t209 = t494 * t638 + t682;
t206 = t211 * qJD(3);
t204 = t731 / 0.2e1 - t554 * t499;
t203 = t357 * t826 + t496 * t554;
t198 = -t440 + t218;
t197 = t439 + t219;
t193 = t732 / 0.2e1 - t550 * t499;
t192 = t342 * t826 + t496 * t550;
t190 = qJD(4) * t339 - t688;
t189 = -qJD(4) * t336 + t689;
t188 = t673 * t295;
t169 = t614 - t207;
t168 = -t457 * t673 - t208;
t146 = -t682 + (-t495 * t713 - t583) * t459;
t145 = t682 + (-t494 * t713 + t581) * t459;
t119 = t496 * t858 + t688;
t118 = t462 * t616 - t689;
t116 = pkin(5) * t634 + t499 * t855;
t115 = pkin(5) * t636 + t496 * t855;
t109 = (-qJD(4) + t714) * t734 * t859 - t478 * t351;
t103 = (t645 + t592) * t343 + t544;
t102 = t459 * t603 - t532 / 0.2e1 + (-t649 - t644 / 0.2e1) * t343;
t89 = t212 * t674 - t314 * t714;
t88 = t213 * t674 - t311 * t714;
t73 = pkin(3) * t524 + t659 * t856;
t69 = -t213 * t673 - t694;
t68 = -t212 * t673 - t695;
t64 = t764 / 0.2e1 + t748 / 0.2e1 + t356 + t756 / 0.2e1 + t742 / 0.2e1 + t540;
t63 = t769 / 0.2e1 + t750 / 0.2e1 - t355 + t760 / 0.2e1 + t744 / 0.2e1 + t541;
t56 = t215 * t674 - t314 * t577;
t55 = t214 * t674 - t311 * t577;
t54 = t86 + t851;
t53 = t85 + t850;
t50 = t313 * t715 + t876;
t45 = t310 * t716 - t876;
t44 = t214 * t673 - t462 * t617 + t694;
t43 = t215 * t673 - t457 * t858 + t695;
t42 = t77 + t851;
t41 = t76 + t850;
t31 = (-t617 - t715) * t313 + t876;
t30 = (t457 * t674 - t716) * t310 - t876;
t24 = -t703 + t813;
t17 = pkin(3) * t525 + t491 * t610 + t834 * t875 + t835 * t874 + t416;
t13 = t703 + t674 * (t310 * t533 - t313 * t457) + t813;
t10 = t526 * pkin(3) + t200 * t837 + t382 * t867 + t473 * t610 + t838 * t874 + t416;
t4 = pkin(1) * t635 * t820 + t459 * t660 * t856 - t511 + t552;
t1 = t768 / 0.2e1 - t787 / 0.2e1 - t772 / 0.2e1 + t788 / 0.2e1 + t759 / 0.2e1 - t792 / 0.2e1 - t762 / 0.2e1 + t796 / 0.2e1 + t551;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t637, t479 * qJD(2), 0, -t637, 0, 0, 0, 0, 0, 0, -t863, -t674 * t672, 0, t863, 0, 0, qJD(2) * t331 - t462 * t663, qJD(2) * t332 + t459 * t663, 0, -t502 * t637, -t495 * t863 - t602, -t346 * qJD(4) + t459 * t535, t269 * t674 - t462 * t641, -t494 * t863 + t602, -t268 * t674 - t462 * t640, t863, qJD(2) * t166 + qJD(3) * t173 - t343 * t641, -qJD(2) * t165 - qJD(3) * t172 - t343 * t640, -qJD(2) * t82 - qJD(3) * t87, qJD(2) * t107 + qJD(3) * t108, -(t311 * t673 + t313 * t674) * t314, t101 * t674 + t122 * t673, t157 * t674 + t311 * t615, -(t310 * t674 - t314 * t673) * t311, t156 * t674 + t314 * t615, t863, qJD(2) * t35 + qJD(3) * t37 + qJD(4) * t78 + qJD(5) * t91, qJD(2) * t36 + qJD(3) * t38 + qJD(4) * t79 + qJD(5) * t90, qJD(2) * t19 + qJD(3) * t20 + qJD(4) * t21, qJD(2) * t29 + qJD(3) * t32 + qJD(4) * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t483, t676, t675, -t483, -t498 * qJD(2), 0, 0, 0, 0, 0, -t638, -t687, -t351, t638, -t858, 0, t685, t684, (t653 - t751) * t812, -t599, t146, t109, t119, t145, t118, t270, t115 * qJD(3) + t193 * qJD(4) + t496 * t543 + t692, t116 * qJD(3) + t192 * qJD(4) + t499 * t543 - t693, -t730, t702, t31, t13, t44, t30, t43, t227, t777 + (-t355 + t750 + t769) * qJD(2) + t63 * qJD(3) + t42 * qJD(4) + t77 * qJD(5), t776 + (t356 + t748 + t764) * qJD(2) + t64 * qJD(3) + t41 * qJD(4) + t76 * qJD(5), t786 + (t768 - t772 - t792 + t796) * qJD(2) + t1 * qJD(3) + t877, t781 + (-t127 * t459 + t174 * t381 - t176 * t382) * qJD(2) + t4 * qJD(3) + t10 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t638, -t687, -t351, t638, -t858, 0, -t612, t613, 0, 0, t146, t109, t119, t145, t118, t270, t115 * qJD(2) + t204 * qJD(4) + t496 * t553 + t690, t116 * qJD(2) + t203 * qJD(4) + t499 * t553 - t691, -t729, t701, t31, t13, t44, t30, t43, t227, t775 + t63 * qJD(2) + (-t355 + t744 + t760) * qJD(3) + t54 * qJD(4) + t86 * qJD(5), t774 + t64 * qJD(2) + (t356 + t742 + t756) * qJD(3) + t53 * qJD(4) + t85 * qJD(5), t784 + t1 * qJD(2) + (t759 - t762 - t787 + t788) * qJD(3) + t877, t780 + t4 * qJD(2) + (t185 * t451 - t186 * t452 - t201 * t459) * qJD(3) + t17 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t180, t583 * t868 - t680, t462 * t558, t180, t547, t344, t193 * qJD(2) + t204 * qJD(3) + t343 * t558, t192 * qJD(2) + t203 * qJD(3) + t343 * t557, 0, 0, t860, t27, t55, -t860, t56, t344, qJD(2) * t42 + qJD(3) * t54 + qJD(4) * t199 + qJD(5) * t102 + t800, qJD(2) * t41 + qJD(3) * t53 + qJD(4) * t200 + qJD(5) * t103 + t799, t782 + (-t311 * t823 + t314 * t822) * t809 + t674 * t508, t779 + t10 * qJD(2) + t17 * qJD(3) + (t199 * t823 - t200 * t822) * t809; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t860, t27, t55, -t860, t56, t344, qJD(2) * t77 + qJD(3) * t86 + qJD(4) * t102 - qJD(5) * t177 + t797, qJD(2) * t76 + qJD(3) * t85 + qJD(4) * t103 + qJD(5) * t175 + t798, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t483, -t676, 0, t483, 0, 0, 0, 0, 0, 0, t638, t687, 0, -t638, 0, 0, -t685, -t684, 0, t599, t210, t237, t190, t209, t189, -t270, qJD(3) * t114 - qJD(4) * t194 - t692, qJD(3) * t117 + qJD(4) * t191 + t693, t730, -t702, t50, t24, t69, t45, t68, -t227, qJD(3) * t70 - qJD(4) * t40 - qJD(5) * t74 - t777, qJD(3) * t71 - qJD(4) * t39 - qJD(5) * t75 - t776, qJD(3) * t2 - t786 - t878, -qJD(3) * t3 - qJD(4) * t9 - t781; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t662, -pkin(1) * t626, 0, 0, t482, t474, 0, -t482, 0, 0, t490 * t708 - t499 * t662, t490 * t707 + t477, t445, t328 * qJD(3), t240, t188, 0, -t238, 0, 0, qJD(4) * t285 - t533 * t706 + t431, qJD(4) * t286 - t457 * t706 - t432, t206, qJD(3) * t155 + qJD(4) * t127; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t588, (-t627 - t626) * pkin(1), 0, 0, t482, t474, 0, -t482, 0, 0, t395 * qJD(4) - t499 * t588 + t700, qJD(4) * t396 + t477 - t537, t445 + t679, t686 + (-pkin(2) * t497 + pkin(5) * t534) * t811, t240, t188, 0, -t238, 0, 0, qJD(4) * t197 + qJD(5) * t219 + t431 - t539, qJD(4) * t198 + qJD(5) * t218 - t432 - t538, t206 - t574, (t410 * t451 - t411 * t452 + t491 * t816) * qJD(3) + t73 * qJD(4) + t575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, t298, t283, t256, t282, -t678, qJD(3) * t395 - t489 * t707 - t545, qJD(3) * t396 + t489 * t708 - t546, 0, 0, t872, t66, t168, t873, t169, -t678, qJD(3) * t197 - t560 + t721, qJD(3) * t198 - t559 - t722, t862, t73 * qJD(3) + (t381 * t822 + t382 * t823) * t809 + t576; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t872, t66, t168, t873, t169, -t678, qJD(3) * t219 - t548 + t721, qJD(3) * t218 - t549 - t722, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t638, t687, 0, -t638, 0, 0, t612, -t613, 0, 0, t210, t237, t190, t209, t189, -t270, -qJD(2) * t114 - qJD(4) * t205 - t690, -qJD(2) * t117 + qJD(4) * t202 + t691, t729, -t701, t50, t24, t69, t45, t68, -t227, -qJD(2) * t70 - qJD(4) * t52 - qJD(5) * t83 - t775, -qJD(2) * t71 - qJD(4) * t51 - qJD(5) * t84 - t774, -qJD(2) * t2 - t784 - t878, qJD(2) * t3 - qJD(4) * t16 - t780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t661, pkin(1) * t627, 0, 0, t482, t474, 0, -t482, 0, 0, -qJD(4) * t393 + t499 * t661 - t700, -qJD(4) * t394 + t537, -t679, -t686, t240, t188, 0, -t238, 0, 0, -qJD(4) * t195 - qJD(5) * t216 + t539, -qJD(4) * t196 - qJD(5) * t217 + t538, t574, -qJD(4) * t72 - t575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t482, t474, 0, -t482, 0, 0, -pkin(2) * t708, -pkin(2) * t707, 0, 0, t240, t188, 0, -t238, 0, 0, qJD(4) * t319 - t533 * t705, qJD(4) * t320 - t457 * t705, 0, qJD(4) * t201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t257, t298, t283, t256, t282, -t678, -pkin(5) * t707 - t521, pkin(5) * t708 - t522, 0, 0, t872, t66, t168, t873, t169, -t678, -t529 + t719, -t528 - t720, t862, (t451 * t822 + t452 * t823) * t809 + t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t872, t66, t168, t873, t169, -t678, -t520 + t719, -t519 - t720, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, t535 + t680, -t339 * t674 + t496 * t638, -t180, t336 * t674 + t499 * t638, t344, qJD(2) * t194 + qJD(3) * t205 + t496 * t643, -qJD(2) * t191 - qJD(3) * t202 + t499 * t643, 0, 0, -t860, -t27, t88, t860, t89, t344, qJD(2) * t40 + qJD(3) * t52 - qJD(5) * t123 - t800, qJD(2) * t39 + qJD(3) * t51 - qJD(5) * t124 - t799, t503 * t674 - t782, qJD(2) * t9 + qJD(3) * t16 - t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, -t298, -t327, t257, t681, t678, qJD(3) * t393 + t545, qJD(3) * t394 + t546, 0, 0, t873, -t66, t208, t872, t207, t678, qJD(3) * t195 + t560, qJD(3) * t196 + t559, t853, qJD(3) * t72 - t576; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, -t298, -t327, t257, t681, t678, t521, t522, 0, 0, t873, -t66, t208, t872, t207, t678, t529, t528, t853, -t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -pkin(3) * t622, -pkin(3) * t624, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t699 + (-t623 - t622) * pkin(3), -t698 + (-t625 - t624) * pkin(3), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t860, -t27, t88, t860, t89, t344, qJD(2) * t74 + qJD(3) * t83 + qJD(4) * t123 - t797, qJD(2) * t75 + qJD(3) * t84 + qJD(4) * t124 - t798, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t873, -t66, t208, t872, t207, t678, qJD(3) * t216 + t548, qJD(3) * t217 + t549, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t873, -t66, t208, t872, t207, t678, t520, t519, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, pkin(3) * t623 + t699, pkin(3) * t625 + t698, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
