% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S5RRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,a5,d1,d4]';
% 
% Output:
% MMD_reg [((5+1)*5/2)x(5*10)]
%   inertial parameter regressor of inertia matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:57
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S5RRRRR3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR3_inertiaDJ_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR3_inertiaDJ_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'S5RRRRR3_inertiaDJ_reg2_slag_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:56:29
% EndTime: 2019-12-05 18:56:38
% DurationCPUTime: 2.68s
% Computational Cost: add. (2838->220), mult. (7118->405), div. (0->0), fcn. (6912->8), ass. (0->140)
t102 = sin(qJ(4));
t103 = sin(qJ(3));
t104 = sin(qJ(2));
t106 = cos(qJ(2));
t185 = cos(qJ(3));
t80 = t103 * t106 + t185 * t104;
t105 = cos(qJ(4));
t98 = qJD(4) * t105;
t149 = t80 * t98;
t141 = t185 * qJD(3);
t148 = t185 * t106;
t168 = t103 * t104;
t190 = qJD(2) + qJD(3);
t60 = -qJD(2) * t148 - t106 * t141 + t190 * t168;
t119 = -t102 * t60 + t149;
t193 = t119 * pkin(3);
t100 = t105 ^ 2;
t99 = t102 ^ 2;
t192 = t100 + t99;
t194 = 0.2e1 * t192;
t101 = sin(qJ(5));
t170 = t101 * t102;
t184 = cos(qJ(5));
t116 = t184 * t105 - t170;
t147 = t184 * t102;
t79 = t101 * t105 + t147;
t172 = t100 - t99;
t191 = t172 * qJD(4);
t189 = qJD(4) + qJD(5);
t188 = 2 * pkin(1);
t61 = t190 * t80;
t187 = t61 * pkin(3);
t78 = -t148 + t168;
t186 = t78 * pkin(3);
t183 = t105 * pkin(3);
t182 = t80 * t60;
t59 = t189 * t79;
t167 = qJD(4) * t102;
t156 = pkin(3) * t167;
t176 = pkin(1) * qJD(3);
t157 = t103 * t176;
t81 = t156 + t157;
t96 = -t185 * pkin(1) - pkin(2);
t85 = t96 - t183;
t181 = -t116 * t81 + t85 * t59;
t140 = t184 * qJD(4);
t130 = t105 * t140;
t139 = t184 * qJD(5);
t58 = -t105 * t139 + t189 * t170 - t130;
t180 = -t85 * t58 + t81 * t79;
t97 = -pkin(2) - t183;
t179 = -t116 * t156 + t97 * t59;
t178 = t79 * t156 - t97 * t58;
t177 = t102 * t157 + t96 * t98;
t55 = -t106 * pkin(1) + t78 * pkin(2) - t80 * pkin(5);
t174 = t105 * t55;
t173 = t105 * t60;
t171 = qJD(4) * t80;
t166 = qJD(5) * t101;
t165 = t104 * qJD(2);
t164 = t106 * qJD(2);
t42 = 0.2e1 * t78 * t61;
t162 = pkin(3) * t102 * t80;
t161 = -t193 * t116 + t59 * t162;
t160 = -t58 * t162 + t193 * t79;
t159 = pkin(2) * t167;
t158 = pkin(2) * t98;
t155 = t99 * t171;
t154 = pkin(3) * t166;
t153 = t102 * t173;
t152 = t78 * t167;
t151 = t80 * t167;
t150 = t78 * t98;
t145 = t102 * t166;
t144 = t102 * t98;
t143 = t104 * t164;
t129 = t174 + t186;
t114 = t184 * t129;
t15 = -t55 * t170 + t114;
t132 = t55 * t147;
t16 = t101 * t129 + t132;
t27 = pkin(1) * t165 + t61 * pkin(2) + t60 * pkin(5);
t120 = t105 * t27 - t55 * t167;
t110 = t120 + t187;
t4 = -qJD(5) * t114 - t101 * t110 - t27 * t147 + (-t130 + t145) * t55;
t115 = -qJD(5) * t132 + t184 * t110;
t121 = -t102 * t27 - t55 * t98;
t5 = (-qJD(5) * t129 + t121) * t101 + t115;
t142 = -t116 * t4 + t15 * t58 - t16 * t59 - t5 * t79;
t134 = pkin(1) * t141;
t123 = t105 * t134;
t124 = t102 * t134;
t95 = t103 * pkin(1) + pkin(5);
t24 = t101 * t124 - t184 * t123 + t59 * t95;
t108 = t189 * t116;
t25 = -t79 * t176 * t185 - t108 * t95;
t64 = t79 * t95;
t65 = t116 * t95;
t138 = -t116 * t24 - t25 * t79 - t64 * t58 - t65 * t59;
t53 = t59 * pkin(5);
t54 = t108 * pkin(5);
t73 = t79 * pkin(5);
t74 = t116 * pkin(5);
t137 = -t116 * t53 + t54 * t79 - t73 * t58 - t74 * t59;
t135 = -0.2e1 * t143;
t133 = pkin(3) * t139;
t75 = t80 ^ 2;
t131 = t75 * t144;
t127 = t27 * t78 + t55 * t61;
t126 = t60 * t78 - t80 * t61;
t125 = t78 * t95 - t80 * t96;
t122 = -t105 * t157 + t96 * t167;
t118 = t151 + t173;
t32 = t102 * t61 + t150;
t117 = -t105 * t61 + t152;
t113 = t192 * t185;
t112 = (t103 * t80 - t185 * t78) * qJD(3);
t111 = -t99 * t182 + t131;
t109 = pkin(1) * t112 - t60 * t96 - t61 * t95;
t107 = pkin(3) ^ 2;
t88 = -0.2e1 * t144;
t87 = 0.2e1 * t144;
t76 = 0.2e1 * t191;
t72 = t113 * t176;
t48 = t116 * t80;
t47 = t79 * t80;
t43 = -0.2e1 * t79 * t58;
t41 = -0.2e1 * t116 * t59;
t26 = -t100 * t171 + t153 + t155;
t22 = t116 * t61 - t59 * t78;
t21 = -t58 * t78 + t79 * t61;
t20 = -0.4e1 * t80 * t144 - t172 * t60;
t17 = -0.2e1 * t116 * t58 - 0.2e1 * t79 * t59;
t14 = (t184 * t58 - t101 * t59 + (t101 * t79 + t116 * t184) * qJD(5)) * pkin(3);
t9 = -t60 * t147 - t101 * t151 - t80 * t145 + (-t101 * t60 + (t140 + t139) * t80) * t105;
t8 = t116 * t60 + t59 * t80;
t7 = -t116 * t9 + t47 * t59;
t6 = -t48 * t58 - t8 * t79;
t1 = -t116 * t8 + t58 * t47 - t48 * t59 - t79 * t9;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t143, 0.2e1 * (-t104 ^ 2 + t106 ^ 2) * qJD(2), 0, t135, 0, 0, 0, 0, 0, 0, -0.2e1 * t182, 0.2e1 * t126, 0, t42, 0, 0, (-t106 * t61 + t78 * t165) * t188, (t106 * t60 + t80 * t165) * t188, 0, (pkin(1) ^ 2) * t135, -0.2e1 * t100 * t182 - 0.2e1 * t131, 0.4e1 * t80 * t153 - 0.2e1 * t75 * t191, -0.2e1 * t126 * t105 - 0.2e1 * t78 * t151, 0.2e1 * t111, 0.2e1 * t126 * t102 - 0.2e1 * t78 * t149, t42, 0.2e1 * t127 * t105 - 0.2e1 * t55 * t152, -0.2e1 * t127 * t102 - 0.2e1 * t55 * t150, (-t27 * t80 + t55 * t60) * t194, t55 * t27 * t194, -0.2e1 * t48 * t8, 0.2e1 * t8 * t47 - 0.2e1 * t48 * t9, 0.2e1 * t48 * t61 - 0.2e1 * t8 * t78, 0.2e1 * t47 * t9, -0.2e1 * t47 * t61 - 0.2e1 * t9 * t78, t42, 0.2e1 * t15 * t61 + 0.2e1 * t5 * t78 + 0.2e1 * (t47 * t149 + (-t47 * t60 + t80 * t9) * t102) * pkin(3), -0.2e1 * t16 * t61 + 0.2e1 * t4 * t78 + 0.2e1 * (t48 * t149 + (-t48 * t60 - t8 * t80) * t102) * pkin(3), 0.2e1 * t15 * t8 - 0.2e1 * t16 * t9 + 0.2e1 * t4 * t47 - 0.2e1 * t5 * t48, 0.2e1 * t107 * t111 + 0.2e1 * t15 * t5 - 0.2e1 * t16 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164, 0, -t165, 0, 0, 0, 0, 0, 0, 0, -t60, 0, -t61, 0, 0, 0, (-t103 * t61 + t185 * t60 + t112) * pkin(1), 0, -t26, t20, t32, t26, -t117, 0, t109 * t102 - t125 * t98, t109 * t105 + t125 * t167, 0, 0, t6, t1, t21, t7, t22, 0, t25 * t78 + t81 * t47 - t64 * t61 + t85 * t9 + t161, t24 * t78 + t81 * t48 - t65 * t61 - t85 * t8 + t160, t24 * t47 - t25 * t48 - t64 * t8 - t65 * t9 + t142, t15 * t25 - t16 * t24 - t4 * t65 - t5 * t64 + (t85 * t149 + (-t60 * t85 + t80 * t81) * t102) * pkin(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t157, -0.2e1 * t134, 0, 0, t87, t76, 0, t88, 0, 0, 0.2e1 * t122, 0.2e1 * t177, 0.2e1 * t72, 0.2e1 * (t103 * t96 + t113 * t95) * t176, t43, t17, 0, t41, 0, 0, 0.2e1 * t181, 0.2e1 * t180, 0.2e1 * t138, -0.2e1 * t65 * t24 - 0.2e1 * t64 * t25 + 0.2e1 * t85 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, 0, -t61, 0, 0, 0, 0, 0, -t26, t20, t32, t26, -t117, 0, -t119 * pkin(2) - t32 * pkin(5), t118 * pkin(2) + t117 * pkin(5), 0, 0, t6, t1, t21, t7, t22, 0, t47 * t156 - t54 * t78 - t73 * t61 + t97 * t9 + t161, t48 * t156 + t53 * t78 - t74 * t61 - t97 * t8 + t160, t53 * t47 + t54 * t48 - t73 * t8 - t74 * t9 + t142, t107 * t155 - t15 * t54 - t16 * t53 + t97 * t193 - t4 * t74 - t5 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t157, -t134, 0, 0, t87, t76, 0, t88, 0, 0, t122 - t159, -t158 + t177, t72, (-pkin(2) * t103 + t113 * pkin(5)) * t176, t43, t17, 0, t41, 0, 0, t179 + t181, t178 + t180, t137 + t138, t156 * t85 - t24 * t74 - t25 * t73 - t65 * t53 + t64 * t54 + t81 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, t76, 0, t88, 0, 0, -0.2e1 * t159, -0.2e1 * t158, 0, 0, t43, t17, 0, t41, 0, 0, 0.2e1 * t179, 0.2e1 * t178, 0.2e1 * t137, 0.2e1 * t156 * t97 - 0.2e1 * t74 * t53 + 0.2e1 * t73 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, 0, -t119, t61, t120, t121, 0, 0, 0, 0, -t8, 0, -t9, t61, t184 * t187 + ((-t174 - 0.2e1 * t186) * qJD(5) + t121) * t101 + t115, (-t101 * t61 - t78 * t139) * pkin(3) + t4, (t184 * t8 - t101 * t9 + (t101 * t48 - t184 * t47) * qJD(5)) * pkin(3), (t184 * t5 - t101 * t4 + (-t101 * t15 + t184 * t16) * qJD(5)) * pkin(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, -t167, 0, -t95 * t98 - t124, t95 * t167 - t123, 0, 0, 0, 0, -t58, 0, -t59, 0, t25, t24, t14, (t184 * t25 - t101 * t24 + (t101 * t64 + t184 * t65) * qJD(5)) * pkin(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, -t167, 0, -pkin(5) * t98, pkin(5) * t167, 0, 0, 0, 0, -t58, 0, -t59, 0, -t54, t53, t14, (-t184 * t54 - t101 * t53 + (t101 * t73 + t184 * t74) * qJD(5)) * pkin(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t154, -0.2e1 * t133, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t8, 0, -t9, t61, t5, t4, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, 0, -t59, 0, t25, t24, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, 0, -t59, 0, -t54, t53, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t154, -t133, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg = t2;
