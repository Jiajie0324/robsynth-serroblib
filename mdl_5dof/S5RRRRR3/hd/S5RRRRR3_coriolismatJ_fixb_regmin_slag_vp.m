% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,a5,d1,d4]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x31]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-07-18 17:19
% Revision: 08c8d617a845f5dd194efdf9aca2774760f7818f (2019-07-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'S5RRRRR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-07-18 17:18:47
% EndTime: 2019-07-18 17:19:06
% DurationCPUTime: 7.07s
% Computational Cost: add. (5745->453), mult. (13498->665), div. (0->0), fcn. (15504->8), ass. (0->407)
t318 = cos(qJ(2));
t547 = sin(qJ(3));
t303 = t547 * t318;
t316 = sin(qJ(2));
t549 = cos(qJ(3));
t306 = t549 * t316;
t280 = -t306 - t303;
t315 = sin(qJ(4));
t548 = cos(qJ(5));
t430 = t548 * t315;
t314 = sin(qJ(5));
t317 = cos(qJ(4));
t497 = t314 * t317;
t360 = t430 + t497;
t166 = t360 * t280;
t576 = -t166 / 0.2e1;
t278 = t316 * t547 - t318 * t549;
t555 = -t278 / 0.2e1;
t575 = t278 / 0.2e1;
t441 = t549 * pkin(1);
t309 = -t441 - pkin(2);
t538 = t317 * pkin(3);
t290 = t309 - t538;
t574 = t290 / 0.2e1;
t310 = -pkin(2) - t538;
t573 = t310 / 0.2e1;
t447 = qJD(2) + qJD(3);
t569 = t447 * t280;
t572 = t278 * t569;
t273 = t306 / 0.2e1 + t303 / 0.2e1;
t468 = qJD(1) * t280;
t423 = t278 * t468;
t139 = -t273 * qJD(4) + t423;
t429 = t548 * t317;
t498 = t314 * t315;
t359 = t429 - t498;
t408 = t447 * t360;
t164 = t359 * t280;
t556 = t360 / 0.2e1;
t557 = -t359 / 0.2e1;
t68 = t164 * t557 + t166 * t556;
t47 = t68 * qJD(1) + t359 * t408;
t446 = qJD(4) + qJD(5);
t571 = 0.2e1 * t280;
t196 = t447 * t278;
t272 = t280 * pkin(3);
t434 = t272 / 0.2e1;
t400 = t360 * t434;
t544 = pkin(3) * t315;
t437 = -t544 / 0.2e1;
t568 = t164 * t437 - t317 * t400;
t274 = t280 ^ 2;
t445 = -t278 ^ 2 + t274;
t440 = t547 * pkin(1);
t308 = t440 + pkin(5);
t514 = t280 * t308;
t515 = t278 * t309;
t543 = t278 * pkin(2);
t567 = t514 / 0.2e1 - t515 / 0.2e1 + (t549 * t555 - t547 * t280 / 0.2e1) * pkin(1) + t543 / 0.2e1;
t108 = qJD(5) * t273 - t139;
t442 = -t548 / 0.2e1;
t395 = pkin(3) * t442;
t435 = -t272 / 0.2e1;
t402 = t359 * t435;
t566 = t166 * t437 + t280 * t395 - t317 * t402;
t270 = t360 * pkin(5);
t565 = t270 * t555 + t310 * t576;
t271 = t359 * pkin(5);
t564 = t164 * t573 + t271 * t575;
t215 = t360 * t308;
t563 = t215 * t555 + t290 * t576;
t216 = t359 * t308;
t562 = t164 * t574 + t216 * t575;
t470 = qJD(1) * t164;
t16 = -t166 * t470 + t447 * t68;
t51 = t164 * t360 + t166 * t359;
t62 = -t164 ^ 2 + t166 ^ 2;
t3 = t62 * qJD(1) + t447 * t51;
t154 = t359 ^ 2 - t360 ^ 2;
t27 = t51 * qJD(1) + t154 * t447;
t313 = t317 ^ 2;
t559 = t315 ^ 2;
t180 = (-t559 / 0.2e1 + t313 / 0.2e1) * t280;
t490 = t315 * t317;
t427 = qJD(1) * t490;
t561 = t180 * t447 + t274 * t427;
t444 = -t313 + t559;
t156 = -0.2e1 * t280 * t427 + t444 * t447;
t558 = -pkin(2) / 0.2e1;
t554 = t308 / 0.2e1;
t553 = t309 / 0.2e1;
t552 = -t314 / 0.2e1;
t551 = -t317 / 0.2e1;
t550 = t317 / 0.2e1;
t546 = pkin(1) * t278;
t545 = pkin(1) * t318;
t542 = t278 * pkin(5);
t541 = t280 * pkin(2);
t540 = t280 * pkin(5);
t539 = t314 * pkin(3);
t537 = t446 * t51;
t536 = t446 * t68;
t535 = pkin(2) * qJD(3);
t165 = t360 * t278;
t525 = t166 * t278;
t382 = t540 + t543;
t188 = t382 - t545;
t378 = pkin(3) * t278 + t188 * t317;
t117 = t548 * t378;
t78 = t188 * t498 - t117;
t330 = t78 * t280 + (t165 * t280 + t525) * t544;
t200 = -t541 + t542;
t187 = pkin(1) * t316 + t200;
t489 = t317 * t187;
t126 = -t272 + t489;
t432 = t548 * t126;
t494 = t315 * t187;
t6 = (-t314 * t494 + t432) * t278 + t330;
t534 = t6 * qJD(1);
t168 = t359 * t278;
t526 = t164 * t278;
t354 = t314 * t378;
t79 = t188 * t430 + t354;
t329 = t79 * t280 + (t168 * t280 + t526) * t544;
t500 = t314 * t126;
t7 = -(t187 * t430 + t500) * t278 + t329;
t533 = t7 * qJD(1);
t488 = t317 * t200;
t131 = -t272 + t488;
t431 = t548 * t131;
t493 = t315 * t200;
t8 = (-t314 * t493 + t431) * t278 + t330;
t532 = t8 * qJD(1);
t499 = t314 * t131;
t9 = -(t200 * t430 + t499) * t278 + t329;
t531 = t9 * qJD(1);
t496 = t315 * t164;
t91 = t360 * t188;
t37 = -t91 * t278 + (t166 * t317 + t496) * t272;
t530 = qJD(1) * t37;
t495 = t315 * t166;
t92 = t359 * t188;
t38 = -t92 * t278 + (t164 * t317 - t495) * t272;
t529 = qJD(1) * t38;
t513 = t280 * t315;
t443 = pkin(3) * t513;
t45 = -t166 * t443 + t278 * t78;
t528 = qJD(1) * t45;
t46 = t164 * t443 - t278 * t79;
t527 = qJD(1) * t46;
t524 = t188 * t280;
t522 = t215 * t280;
t520 = t216 * t280;
t518 = t270 * t280;
t516 = t271 * t280;
t511 = t290 * t165;
t509 = t290 * t168;
t508 = t290 * t359;
t507 = t290 * t360;
t505 = t310 * t165;
t503 = t310 * t168;
t502 = t310 * t359;
t501 = t310 * t360;
t492 = t315 * t359;
t491 = t315 * t360;
t52 = -t164 * t165 - t166 * t168;
t486 = t52 * qJD(1);
t396 = -t441 / 0.2e1;
t366 = -t309 / 0.2e1 + t396;
t394 = -t440 / 0.2e1;
t321 = (t554 + t394 - pkin(5) / 0.2e1) * t280 + (t558 + t366) * t278;
t56 = t321 * t315;
t485 = t56 * qJD(1);
t63 = t278 * t539;
t483 = t63 * qJD(1);
t352 = -t117 / 0.2e1 + t278 * t395;
t383 = -t429 / 0.2e1;
t64 = t188 * t383 - t352;
t482 = t64 * qJD(1);
t69 = t165 * t278 - t166 * t280;
t480 = t69 * qJD(1);
t70 = t164 * t280 - t168 * t278;
t479 = t70 * qJD(1);
t375 = t187 * t278 - t524;
t72 = t375 * t315;
t478 = t72 * qJD(1);
t73 = t375 * t317;
t477 = t73 * qJD(1);
t374 = -t200 * t278 + t524;
t76 = t374 * t315;
t476 = t76 * qJD(1);
t77 = t374 * t317;
t475 = t77 * qJD(1);
t474 = t446 * t215;
t473 = t446 * t216;
t472 = t446 * t270;
t471 = t446 * t271;
t469 = qJD(1) * t278;
t467 = qJD(1) * t318;
t466 = qJD(2) * t290;
t465 = qJD(2) * t309;
t464 = qJD(3) * t310;
t463 = qJD(4) * t315;
t462 = qJD(4) * t317;
t461 = qJD(5) * t290;
t460 = qJD(5) * t310;
t347 = t497 / 0.2e1 + t430 / 0.2e1;
t100 = (t556 + t347) * t278;
t97 = t100 * qJD(1);
t346 = t383 + t498 / 0.2e1;
t101 = (t557 + t346) * t278;
t98 = t101 * qJD(1);
t136 = t445 * t315;
t459 = t136 * qJD(1);
t137 = t445 * t317;
t458 = t137 * qJD(1);
t457 = t445 * qJD(1);
t176 = (t278 * t316 + t280 * t318) * pkin(1);
t456 = t176 * qJD(1);
t177 = (t278 * t318 - t280 * t316) * pkin(1);
t455 = t177 * qJD(1);
t454 = t180 * qJD(1);
t181 = t315 * t278;
t453 = t181 * qJD(1);
t184 = t317 * t278;
t175 = t184 * qJD(1);
t191 = t444 * t274;
t452 = t191 * qJD(1);
t451 = t273 * qJD(1);
t296 = -t316 ^ 2 + t318 ^ 2;
t449 = t296 * qJD(1);
t448 = t318 * qJD(2);
t260 = pkin(3) * t492;
t261 = pkin(3) * t491;
t439 = pkin(1) * t467;
t438 = qJD(3) * t545;
t433 = t317 * t549;
t428 = t188 * t469;
t426 = t278 * t463;
t425 = t278 * t462;
t299 = t315 * t462;
t422 = t316 * t467;
t421 = t513 / 0.2e1;
t420 = -t500 / 0.2e1;
t419 = -t499 / 0.2e1;
t418 = -t494 / 0.2e1;
t417 = -t493 / 0.2e1;
t416 = t573 + t574;
t415 = t549 * qJD(2);
t414 = t549 * qJD(3);
t413 = t548 * qJD(4);
t412 = t548 * qJD(5);
t411 = t547 * qJD(2);
t410 = t547 * qJD(3);
t406 = t447 * t317;
t405 = t446 * t360;
t404 = t278 * t439;
t403 = t280 * t439;
t401 = t360 * t435;
t399 = qJD(4) + t469;
t398 = pkin(1) * t410;
t397 = pkin(1) * t411;
t393 = t549 * t498;
t390 = t314 * t418;
t389 = t314 * t417;
t388 = t549 * t548;
t387 = -t433 / 0.2e1;
t386 = t432 / 0.2e1;
t385 = t431 / 0.2e1;
t384 = -t430 / 0.2e1;
t381 = t315 * t406;
t379 = t447 * t490;
t376 = qJD(5) + t399;
t373 = t187 * t384;
t372 = t200 * t384;
t324 = (t496 / 0.2e1 + (t314 / 0.2e1 - t360 * t551 + t492 / 0.2e1) * t280) * pkin(3);
t332 = t420 + t563;
t10 = t373 + t324 + t332;
t149 = t261 + t508;
t371 = qJD(1) * t10 - qJD(2) * t149;
t323 = (t495 / 0.2e1 + (t442 - t359 * t550 + t491 / 0.2e1) * t280) * pkin(3);
t328 = t386 + t562;
t11 = t390 + t323 + t328;
t148 = -t260 + t507;
t370 = qJD(1) * t11 - qJD(2) * t148;
t369 = t188 * t399;
t368 = t280 * t399;
t367 = -t388 / 0.2e1;
t365 = t542 / 0.2e1 - t541 / 0.2e1;
t364 = qJD(3) * t382;
t363 = -t518 / 0.2e1 + t505 / 0.2e1;
t362 = -t516 / 0.2e1 + t503 / 0.2e1;
t361 = t278 * t554 + t280 * t553;
t34 = (t187 * t442 - t402) * t315 + t332;
t358 = qJD(1) * t34 - t359 * t466;
t33 = (t187 * t552 - t401) * t315 + t328;
t357 = qJD(1) * t33 - t360 * t466;
t345 = t187 / 0.2e1 + t361;
t86 = t345 * t317;
t356 = qJD(1) * t86 - t315 * t465;
t83 = t345 * t315;
t355 = -qJD(1) * t83 - t317 * t465;
t353 = t317 * t368;
t351 = qJD(2) * (t514 - t515);
t350 = pkin(2) / 0.2e1 + t366;
t349 = t200 / 0.2e1 + t365;
t348 = t381 * t571;
t169 = -t260 + t501;
t327 = t385 + t564;
t20 = t389 + t323 + t327;
t326 = (t314 * t387 + t315 * t367) * pkin(1);
t104 = -t360 * t416 + t326;
t87 = t260 + t104;
t344 = qJD(1) * t20 + qJD(2) * t87 - qJD(3) * t169;
t170 = t261 + t502;
t331 = t419 + t565;
t19 = t372 + t324 + t331;
t325 = (t317 * t367 + t393 / 0.2e1) * pkin(1);
t105 = -t359 * t416 + t325;
t88 = -t261 + t105;
t343 = qJD(1) * t19 + qJD(2) * t88 - qJD(3) * t170;
t320 = t522 / 0.2e1 - t511 / 0.2e1 + (-t314 * t433 - t315 * t388) * t546 / 0.2e1 + t166 * t394;
t31 = t320 + t363;
t342 = -t31 * qJD(1) + t359 * t397;
t59 = t321 * t317;
t341 = -t59 * qJD(1) - t315 * t397;
t319 = t520 / 0.2e1 - t509 / 0.2e1 - (t317 * t388 - t393) * t546 / 0.2e1 + t164 * t394;
t32 = t319 + t362;
t340 = -t32 * qJD(1) - t360 * t397;
t192 = pkin(3) * t359 * t421;
t339 = -t192 + t373 - t563;
t338 = -t192 + t372 - t565;
t225 = t350 * t315;
t96 = t349 * t317;
t337 = qJD(1) * t96 + qJD(2) * t225 + t315 * t535;
t226 = t350 * t317;
t93 = t349 * t315;
t336 = -qJD(1) * t93 + qJD(2) * t226 + t317 * t535;
t335 = (-t411 - t410) * pkin(1);
t39 = (t200 * t552 - t401) * t315 + t327;
t334 = qJD(1) * t39 + qJD(2) * t104 - t360 * t464;
t40 = (t200 * t442 - t402) * t315 + t331;
t333 = qJD(1) * t40 + qJD(2) * t105 - t359 * t464;
t193 = t315 * t400;
t36 = -t193 + t390 + t386 - t562;
t42 = -t193 + t389 + t385 - t564;
t106 = t502 / 0.2e1 + t508 / 0.2e1 + t325;
t107 = t501 / 0.2e1 + t507 / 0.2e1 + t326;
t294 = t315 * t398;
t291 = t444 * qJD(4);
t253 = t360 * t398;
t252 = t359 * t398;
t228 = pkin(1) * t387 + pkin(2) * t551 + t309 * t550;
t227 = (t396 + t553 + t558) * t315;
t199 = t278 * t261;
t198 = t278 * t260;
t189 = t447 * t273;
t173 = t180 * qJD(4);
t147 = t175 + t462;
t146 = -t453 - t463;
t125 = t379 - t454;
t124 = -t381 + t454;
t116 = t359 * t405;
t114 = 0.2e1 * t315 * t353;
t103 = (-t360 / 0.2e1 + t347) * t278;
t102 = t278 * t346 - t359 * t555;
t99 = -t313 * t423 - t173;
t95 = t488 / 0.2e1 - t365 * t317;
t94 = t315 * t365 + t417;
t90 = t261 + t106;
t89 = -t260 + t107;
t85 = t489 / 0.2e1 - t361 * t317;
t84 = t315 * t361 + t418;
t82 = qJD(4) * t184 - t458;
t81 = -qJD(4) * t181 + t459;
t80 = t446 * t154;
t75 = -t405 - t97;
t74 = t359 * t446 - t98;
t65 = -t173 + (t313 * t468 - t381) * t278;
t61 = -t315 * t569 + t458;
t60 = -t280 * t406 - t459;
t58 = t317 * t567 + t540 * t550;
t57 = pkin(5) * t421 + t315 * t567;
t55 = (qJD(4) - t469) * t490 * t571 + t444 * t196;
t54 = (t383 + t498) * t188 + t352;
t53 = -t63 / 0.2e1 - t354 / 0.2e1 + (-t430 - t497 / 0.2e1) * t188;
t44 = t101 * t447 - t166 * t469;
t43 = t100 * t447 - t164 * t469;
t41 = t419 + t338;
t35 = t420 + t339;
t30 = -t101 * t446 - t479;
t29 = -t100 * t446 - t480;
t26 = -t199 + t319 - t362;
t25 = t198 + t320 - t363;
t24 = t102 * t447 + t166 * t376;
t23 = t103 * t447 + t164 * t376;
t22 = t42 + t566;
t21 = (t434 - t131 / 0.2e1) * t314 + t338 + t568;
t18 = -t168 * t470 + t536;
t15 = t102 * t446 - t360 * t569 + t479;
t14 = t103 * t446 - t359 * t569 + t480;
t13 = t36 + t566;
t12 = (t434 - t126 / 0.2e1) * t314 + t339 + t568;
t5 = -(t408 - t470) * t168 + t536;
t2 = -t486 + t537;
t1 = t486 + t447 * (t165 * t360 - t168 * t359) + t537;
t4 = [0, 0, 0, t316 * t448, t296 * qJD(2), 0, 0, 0, 0, 0, t572, -t447 * t445, 0, 0, 0, t176 * qJD(2) + t280 * t438, t177 * qJD(2) + t278 * t438, -t274 * t299 + t313 * t572, t191 * qJD(4) - t278 * t348, t137 * t447 + t280 * t426, -t136 * t447 + t280 * t425, -t572, qJD(2) * t73 - qJD(3) * t77 - t188 * t426, -qJD(2) * t72 + qJD(3) * t76 - t188 * t425, (-t166 * t446 + t168 * t447) * t164, t446 * t62 + t447 * t52, t446 * t525 + t447 * t70, t446 * t526 + t447 * t69, -t572, qJD(2) * t6 + qJD(3) * t8 + qJD(4) * t37 + qJD(5) * t46, qJD(2) * t7 + qJD(3) * t9 + qJD(4) * t38 + qJD(5) * t45; 0, 0, 0, t422, t449, t448, -t316 * qJD(2), 0, 0, 0, t423, -t457, -t196, t569, 0, t456, t455, t65, t55, t61, t60, -t139, t57 * qJD(3) + t85 * qJD(4) + t315 * t351 + t477, t58 * qJD(3) + t84 * qJD(4) + t317 * t351 - t478, t5, t1, t15, t14, t108, t534 + (t198 - t511 + t522) * qJD(2) + t25 * qJD(3) + t13 * qJD(4) + t36 * qJD(5), t533 + (-t199 - t509 + t520) * qJD(2) + t26 * qJD(3) + t12 * qJD(4) + t35 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423, -t457, -t196, t569, 0, t403, t404, t65, t55, t61, t60, -t139, t57 * qJD(2) + t95 * qJD(4) + t315 * t364 - t475, t58 * qJD(2) + t94 * qJD(4) + t317 * t364 + t476, t5, t1, t15, t14, t108, t532 + t25 * qJD(2) + (t198 - t505 + t518) * qJD(3) + t22 * qJD(4) + t42 * qJD(5), t531 + t26 * qJD(2) + (-t199 - t503 + t516) * qJD(3) + t21 * qJD(4) + t41 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t561, t379 * t571 + t452, t315 * t368, t353, t189, t85 * qJD(2) + t95 * qJD(3) - t315 * t369, t84 * qJD(2) + t94 * qJD(3) - t317 * t369, t16, t3, t24, t23, t189, qJD(2) * t13 + qJD(3) * t22 - qJD(4) * t91 + qJD(5) * t53 + t530, qJD(2) * t12 + qJD(3) * t21 - qJD(4) * t92 + qJD(5) * t54 + t529; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t16, t3, t24, t23, t189, qJD(2) * t36 + qJD(3) * t42 + qJD(4) * t53 - qJD(5) * t79 + t527, qJD(2) * t35 + qJD(3) * t41 + qJD(4) * t54 + qJD(5) * t78 + t528; 0, 0, 0, -t422, -t449, 0, 0, 0, 0, 0, -t423, t457, 0, 0, 0, -t456, -t455, t99, t114, t82, t81, t139, qJD(3) * t56 - qJD(4) * t86 - t477, qJD(3) * t59 + qJD(4) * t83 + t478, t18, t2, t30, t29, -t108, qJD(3) * t31 - qJD(4) * t11 - qJD(5) * t33 - t534, qJD(3) * t32 - qJD(4) * t10 - qJD(5) * t34 - t533; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t398, -pkin(1) * t414, t299, -t291, 0, 0, 0, t309 * t463 - t317 * t398, t309 * t462 + t294, t116, t80, 0, 0, 0, qJD(4) * t148 + t360 * t461 - t252, qJD(4) * t149 + t359 * t461 + t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335, (-t415 - t414) * pkin(1), t299, -t291, 0, 0, 0, t227 * qJD(4) + t317 * t335 + t485, t228 * qJD(4) + t294 - t341, t116, t80, 0, 0, 0, t89 * qJD(4) + t107 * qJD(5) - t252 - t342, t90 * qJD(4) + t106 * qJD(5) + t253 - t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, -t156, t147, t146, -t451, qJD(3) * t227 - t308 * t462 - t356, qJD(3) * t228 + t308 * t463 - t355, t47, t27, t74, t75, -t451, qJD(3) * t89 - t370 - t473, qJD(3) * t90 - t371 + t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, t27, t74, t75, -t451, qJD(3) * t107 - t357 - t473, qJD(3) * t106 - t358 + t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t423, t457, 0, 0, 0, -t403, -t404, t99, t114, t82, t81, t139, -qJD(2) * t56 - qJD(4) * t96 + t475, -qJD(2) * t59 + qJD(4) * t93 - t476, t18, t2, t30, t29, -t108, -qJD(2) * t31 - qJD(4) * t20 - qJD(5) * t39 - t532, -qJD(2) * t32 - qJD(4) * t19 - qJD(5) * t40 - t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t397, pkin(1) * t415, t299, -t291, 0, 0, 0, -t225 * qJD(4) + t317 * t397 - t485, -t226 * qJD(4) + t341, t116, t80, 0, 0, 0, -t87 * qJD(4) - t104 * qJD(5) + t342, -t88 * qJD(4) - t105 * qJD(5) + t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t299, -t291, 0, 0, 0, -pkin(2) * t463, -pkin(2) * t462, t116, t80, 0, 0, 0, qJD(4) * t169 + t360 * t460, qJD(4) * t170 + t359 * t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, -t156, t147, t146, -t451, -pkin(5) * t462 - t337, pkin(5) * t463 - t336, t47, t27, t74, t75, -t451, -t344 - t471, -t343 + t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, t27, t74, t75, -t451, -t334 - t471, -t333 + t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t561, -t348 - t452, -t184 * t447 - t315 * t423, t181 * t447 - t317 * t423, t189, qJD(2) * t86 + qJD(3) * t96 + t315 * t428, -qJD(2) * t83 - qJD(3) * t93 + t317 * t428, -t16, -t3, t44, t43, t189, qJD(2) * t11 + qJD(3) * t20 - qJD(5) * t63 - t530, qJD(2) * t10 + qJD(3) * t19 - qJD(5) * t64 - t529; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, t156, -t175, t453, t451, qJD(3) * t225 + t356, qJD(3) * t226 + t355, -t47, -t27, t98, t97, t451, qJD(3) * t87 + t370, qJD(3) * t88 + t371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, t156, -t175, t453, t451, t337, t336, -t47, -t27, t98, t97, t451, t344, t343; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t539, -pkin(3) * t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t446 * t539 - t483, -t482 + (-t413 - t412) * pkin(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16, -t3, t44, t43, t189, qJD(2) * t33 + qJD(3) * t39 + qJD(4) * t63 - t527, qJD(2) * t34 + qJD(3) * t40 + qJD(4) * t64 - t528; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, -t27, t98, t97, t451, qJD(3) * t104 + t357, qJD(3) * t105 + t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, -t27, t98, t97, t451, t334, t333; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t539 + t483, pkin(3) * t413 + t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t4;
