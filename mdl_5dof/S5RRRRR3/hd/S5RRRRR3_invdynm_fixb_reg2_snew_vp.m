% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,a5,d1,d4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-07-18 17:19
% Revision: 08c8d617a845f5dd194efdf9aca2774760f7818f (2019-07-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRR3_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR3_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR3_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR3_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR3_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'S5RRRRR3_invdynm_fixb_reg2_snew_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-07-18 17:19:19
% EndTime: 2019-07-18 17:19:34
% DurationCPUTime: 15.25s
% Computational Cost: add. (89354->629), mult. (182857->885), div. (0->0), fcn. (141728->10), ass. (0->448)
t1185 = sin(qJ(4));
t1184 = sin(qJ(5));
t1189 = cos(qJ(5));
t1187 = sin(qJ(2));
t1191 = cos(qJ(3));
t1186 = sin(qJ(3));
t1192 = cos(qJ(2));
t1241 = t1186 * t1192;
t1147 = (t1187 * t1191 + t1241) * qJD(1);
t1181 = qJD(2) + qJD(3);
t1190 = cos(qJ(4));
t1116 = t1147 * t1185 - t1190 * t1181;
t1118 = t1147 * t1190 + t1181 * t1185;
t1084 = t1118 * t1116;
t1261 = qJD(1) * qJD(2);
t1173 = t1192 * t1261;
t1231 = t1187 * qJDD(1);
t1155 = t1173 + t1231;
t1176 = t1192 * qJDD(1);
t1220 = t1187 * t1261;
t1156 = t1176 - t1220;
t1214 = t1186 * t1155 - t1191 * t1156;
t1087 = -qJD(3) * t1147 - t1214;
t1086 = qJDD(4) - t1087;
t1279 = -t1084 + t1086;
t1188 = sin(qJ(1));
t1193 = cos(qJ(1));
t1233 = t1193 * g(1) + t1188 * g(2);
t1140 = -t1187 * g(3) - t1192 * t1233;
t1183 = t1192 ^ 2;
t1195 = qJD(1) ^ 2;
t1177 = t1183 * t1195;
t1194 = qJD(2) ^ 2;
t1276 = -t1177 - t1194;
t1119 = pkin(1) * t1276 + t1140;
t1139 = t1192 * g(3) - t1187 * t1233;
t1169 = t1192 * t1195 * t1187;
t1163 = qJDD(2) + t1169;
t1196 = pkin(1) * t1163 - t1139;
t1076 = t1191 * t1119 + t1186 * t1196;
t1237 = t1191 * t1192;
t1242 = t1186 * t1187;
t1145 = (-t1237 + t1242) * qJD(1);
t1104 = pkin(2) * t1145 - pkin(5) * t1147;
t1230 = qJDD(2) + qJDD(3);
t1274 = t1181 ^ 2;
t1035 = -pkin(2) * t1274 + pkin(5) * t1230 - t1145 * t1104 + t1076;
t1088 = -qJD(3) * t1145 + t1155 * t1191 + t1156 * t1186;
t1135 = t1181 * t1145;
t1067 = t1088 - t1135;
t1165 = t1188 * g(1) - t1193 * g(2);
t1282 = t1156 - t1220;
t1112 = pkin(1) * t1282 + t1165;
t1247 = t1181 * t1147;
t992 = -t1067 * pkin(5) + (-t1087 + t1247) * pkin(2) - t1112;
t952 = t1185 * t1035 - t1190 * t992;
t919 = pkin(3) * t1279 - t952;
t1114 = t1116 ^ 2;
t1141 = qJD(4) + t1145;
t1138 = t1141 ^ 2;
t1062 = -t1114 - t1138;
t953 = t1190 * t1035 + t1185 * t992;
t927 = pkin(3) * t1062 + t953;
t883 = t1184 * t927 - t1189 * t919;
t884 = t1184 * t919 + t1189 * t927;
t846 = t1184 * t884 - t1189 * t883;
t1291 = t1185 * t846;
t1290 = t1190 * t846;
t1075 = t1186 * t1119 - t1191 * t1196;
t1031 = t1075 * t1191 - t1076 * t1186;
t1289 = t1031 * t1187;
t1080 = t1189 * t1116 + t1118 * t1184;
t1082 = -t1116 * t1184 + t1118 * t1189;
t1037 = t1082 * t1080;
t1085 = qJDD(5) + t1086;
t1280 = -t1037 + t1085;
t1288 = t1184 * t1280;
t1287 = t1185 * t1279;
t1108 = t1147 * t1145;
t1277 = -t1108 + t1230;
t1286 = t1186 * t1277;
t1285 = t1189 * t1280;
t1284 = t1190 * t1279;
t1283 = t1191 * t1277;
t1137 = qJD(5) + t1141;
t1056 = t1137 * t1080;
t1204 = -t1190 * t1088 - t1185 * t1230;
t1051 = -t1116 * qJD(4) - t1204;
t1203 = -t1185 * t1088 + t1190 * t1230;
t1198 = t1118 * qJD(4) - t1203;
t976 = -t1080 * qJD(5) + t1189 * t1051 - t1184 * t1198;
t1281 = -t1056 + t976;
t1096 = t1141 * t1118;
t1278 = t1096 + t1198;
t1152 = t1193 * t1165;
t1275 = t1188 * t1233 - t1152;
t1218 = t1184 * t1051 + t1189 * t1198;
t937 = (qJD(5) - t1137) * t1082 + t1218;
t1064 = (qJD(3) - t1181) * t1147 + t1214;
t1078 = t1080 ^ 2;
t1079 = t1082 ^ 2;
t1115 = t1118 ^ 2;
t1136 = t1137 ^ 2;
t1143 = t1145 ^ 2;
t1144 = t1147 ^ 2;
t1273 = pkin(3) * t846;
t940 = t1056 + t976;
t895 = -t1184 * t937 - t1189 * t940;
t1272 = pkin(3) * t895;
t1068 = t1088 + t1135;
t1007 = -t1064 * t1186 - t1068 * t1191;
t1271 = pkin(1) * t1007;
t1270 = pkin(1) * t1031;
t1269 = pkin(1) * t1112;
t1268 = pkin(2) * t1186;
t1034 = -t1230 * pkin(2) - t1274 * pkin(5) + t1147 * t1104 + t1075;
t974 = pkin(3) * t1278 + t1034;
t1267 = t1184 * t974;
t990 = t1037 + t1085;
t1266 = t1184 * t990;
t1265 = t1185 * t974;
t1264 = t1189 * t974;
t1263 = t1189 * t990;
t1262 = t1190 * t974;
t1260 = t1034 * t1185;
t1259 = t1034 * t1190;
t1039 = t1084 + t1086;
t1258 = t1039 * t1185;
t1257 = t1039 * t1190;
t1102 = t1108 + t1230;
t1256 = t1102 * t1186;
t1255 = t1102 * t1191;
t1254 = t1112 * t1193;
t1253 = t1137 * t1082;
t1252 = t1137 * t1184;
t1251 = t1137 * t1189;
t1250 = t1141 * t1185;
t1249 = t1141 * t1190;
t1248 = t1165 * t1188;
t1246 = t1181 * t1186;
t1245 = t1181 * t1191;
t1182 = t1187 ^ 2;
t1244 = t1182 * t1195;
t1243 = t1186 * t1112;
t1240 = t1187 * t1163;
t1150 = t1187 * t1165;
t1239 = t1187 * t1188;
t1238 = t1191 * t1112;
t1164 = qJDD(2) - t1169;
t1236 = t1192 * t1164;
t1151 = t1192 * t1165;
t1232 = t1182 + t1183;
t1229 = t1192 * t1269;
t1228 = -pkin(2) * t1191 - pkin(1);
t1227 = t1186 * t1037;
t1226 = t1191 * t1037;
t1225 = t1186 * t1084;
t1224 = t1191 * t1084;
t1223 = t1188 * t1108;
t1222 = t1193 * t1108;
t1221 = t1116 * t1250;
t848 = t1184 * t883 + t1189 * t884;
t1217 = t1075 * t1186 + t1191 * t1076;
t1215 = t1139 * t1187 + t1192 * t1140;
t1213 = -t1193 * t1233 - t1248;
t1212 = t1188 * t1169;
t1211 = t1193 * t1169;
t903 = t1185 * t952 + t1190 * t953;
t1210 = -pkin(2) * t1034 + pkin(5) * t903;
t1160 = qJDD(1) * t1193 - t1188 * t1195;
t1209 = -pkin(4) * t1160 - g(3) * t1188;
t902 = t1185 * t953 - t1190 * t952;
t818 = t1190 * t848 - t1291;
t1208 = -pkin(2) * t974 - pkin(3) * t1262 + pkin(5) * t818;
t1015 = -t1136 - t1078;
t945 = t1015 * t1184 + t1285;
t1207 = pkin(3) * t945 - t883;
t982 = t1062 * t1190 - t1287;
t1206 = -pkin(2) * t1278 + pkin(5) * t982 - t1259;
t1029 = (qJD(4) + t1141) * t1116 + t1204;
t1077 = -t1115 - t1138;
t988 = -t1077 * t1185 - t1257;
t1205 = pkin(2) * t1029 + pkin(5) * t988 + t1260;
t1043 = -t1079 - t1136;
t961 = t1043 * t1189 - t1266;
t1202 = pkin(3) * t961 - t884;
t946 = t1015 * t1189 - t1288;
t900 = -t1185 * t945 + t1190 * t946;
t936 = (qJD(5) + t1137) * t1082 + t1218;
t909 = -pkin(3) * t936 - t1264;
t1201 = -pkin(2) * t936 + pkin(5) * t900 + t1184 * t1265 + t1190 * t909;
t983 = -t1078 - t1079;
t840 = -pkin(3) * t983 + t848;
t897 = t1184 * t940 - t1189 * t937;
t861 = -t1185 * t895 + t1190 * t897;
t1200 = -pkin(2) * t983 + pkin(5) * t861 + t1190 * t840 - t1291;
t1052 = t1114 + t1115;
t1026 = (-qJD(4) + t1141) * t1118 + t1203;
t1095 = t1141 * t1116;
t1028 = t1095 + t1051;
t966 = t1026 * t1190 + t1028 * t1185;
t1199 = pkin(2) * t1052 + pkin(5) * t966 + t903;
t908 = -pkin(3) * t1281 + t1267;
t962 = -t1043 * t1184 - t1263;
t911 = -t1185 * t961 + t1190 * t962;
t1197 = -pkin(2) * t1281 + pkin(5) * t911 + t1185 * t1264 + t1190 * t908;
t1167 = t1177 - t1194;
t1166 = t1194 - t1244;
t1162 = -t1177 + t1244;
t1161 = t1177 + t1244;
t1159 = qJDD(1) * t1188 + t1193 * t1195;
t1158 = t1232 * qJDD(1);
t1157 = t1176 - 0.2e1 * t1220;
t1154 = 0.2e1 * t1173 + t1231;
t1149 = t1232 * t1261;
t1142 = -pkin(4) * t1159 + g(3) * t1193;
t1132 = -t1144 + t1274;
t1131 = t1143 - t1274;
t1130 = t1155 * t1192 - t1182 * t1261;
t1129 = -t1156 * t1187 - t1183 * t1261;
t1128 = -t1144 - t1274;
t1127 = -t1236 - t1187 * (-t1194 - t1244);
t1126 = t1163 * t1192 - t1166 * t1187;
t1125 = t1192 * t1276 - t1240;
t1124 = -t1164 * t1187 + t1167 * t1192;
t1123 = t1166 * t1192 + t1240;
t1122 = t1167 * t1187 + t1236;
t1121 = (t1155 + t1173) * t1187;
t1120 = t1282 * t1192;
t1110 = -t1154 * t1187 + t1157 * t1192;
t1109 = t1154 * t1192 + t1157 * t1187;
t1105 = t1144 - t1143;
t1100 = -t1274 - t1143;
t1098 = t1139 * t1192 - t1140 * t1187;
t1094 = -t1115 + t1138;
t1093 = t1114 - t1138;
t1092 = (-t1145 * t1191 + t1147 * t1186) * t1181;
t1091 = (-t1145 * t1186 - t1147 * t1191) * t1181;
t1090 = t1118 * t1249;
t1089 = -t1143 - t1144;
t1083 = t1115 - t1114;
t1074 = t1131 * t1191 - t1256;
t1073 = -t1132 * t1186 + t1283;
t1072 = t1131 * t1186 + t1255;
t1071 = t1132 * t1191 + t1286;
t1069 = t1128 * t1191 - t1256;
t1063 = (qJD(3) + t1181) * t1147 + t1214;
t1061 = t1088 * t1191 - t1147 * t1246;
t1060 = t1088 * t1186 + t1147 * t1245;
t1059 = -t1087 * t1186 + t1145 * t1245;
t1058 = t1087 * t1191 + t1145 * t1246;
t1055 = t1100 * t1186 + t1283;
t1054 = -t1079 + t1136;
t1053 = t1078 - t1136;
t1047 = (-t1116 * t1190 + t1118 * t1185) * t1141;
t1046 = -t1090 - t1221;
t1045 = -t1091 * t1187 + t1092 * t1192;
t1044 = t1091 * t1192 + t1092 * t1187;
t1042 = -pkin(1) * t1063 + t1238;
t1041 = -pkin(1) * t1067 - t1243;
t1036 = t1079 - t1078;
t1032 = pkin(1) * t1069 - t1076;
t1027 = -t1095 + t1051;
t1024 = -t1096 + t1198;
t1023 = -t1072 * t1187 + t1074 * t1192;
t1022 = -t1071 * t1187 + t1073 * t1192;
t1021 = t1072 * t1192 + t1074 * t1187;
t1020 = t1071 * t1192 + t1073 * t1187;
t1019 = t1051 * t1190 - t1118 * t1250;
t1018 = -t1185 * t1051 - t1090;
t1017 = t1116 * t1249 + t1185 * t1198;
t1016 = -t1190 * t1198 + t1221;
t1014 = t1192 * (-t1128 * t1186 - t1255) - t1187 * t1069;
t1013 = -t1041 * t1187 - t1112 * t1237;
t1012 = -t1042 * t1187 - t1112 * t1241;
t1011 = t1041 * t1192 - t1187 * t1238;
t1010 = t1042 * t1192 - t1112 * t1242;
t1009 = pkin(1) * t1055 - t1075;
t1008 = -t1063 * t1191 - t1067 * t1186;
t1006 = -t1063 * t1186 + t1067 * t1191;
t1005 = t1047 * t1191 + t1086 * t1186;
t1004 = t1047 * t1186 - t1086 * t1191;
t1003 = t1093 * t1190 - t1258;
t1002 = -t1094 * t1185 + t1284;
t1001 = t1093 * t1185 + t1257;
t1000 = t1094 * t1190 + t1287;
t999 = -t1060 * t1187 + t1061 * t1192;
t998 = -t1058 * t1187 + t1059 * t1192;
t997 = t1060 * t1192 + t1061 * t1187;
t996 = t1058 * t1192 + t1059 * t1187;
t995 = (-t1080 * t1189 + t1082 * t1184) * t1137;
t994 = (-t1080 * t1184 - t1082 * t1189) * t1137;
t993 = t1192 * (t1100 * t1191 - t1286) - t1187 * t1055;
t987 = t1077 * t1190 - t1258;
t984 = -pkin(1) * t1089 + t1217;
t981 = t1062 * t1185 + t1284;
t980 = t1019 * t1191 + t1225;
t979 = t1017 * t1191 - t1225;
t978 = t1019 * t1186 - t1224;
t977 = t1017 * t1186 + t1224;
t975 = -qJD(5) * t1082 - t1218;
t973 = t1053 * t1189 - t1266;
t972 = -t1054 * t1184 + t1285;
t971 = t1053 * t1184 + t1263;
t970 = t1054 * t1189 + t1288;
t967 = t1192 * t1217 + t1289;
t965 = -t1027 * t1185 - t1190 * t1278;
t964 = t1026 * t1185 - t1028 * t1190;
t963 = t1027 * t1190 - t1185 * t1278;
t960 = t1192 * (-t1064 * t1191 + t1068 * t1186) - t1187 * t1007;
t959 = -t1006 * t1187 + t1008 * t1192;
t958 = t1006 * t1192 + t1008 * t1187;
t957 = t1003 * t1191 - t1024 * t1186;
t956 = t1002 * t1191 + t1028 * t1186;
t955 = t1003 * t1186 + t1024 * t1191;
t954 = t1002 * t1186 - t1028 * t1191;
t951 = -pkin(5) * t987 + t1259;
t950 = -t1004 * t1187 + t1005 * t1192;
t949 = t1004 * t1192 + t1005 * t1187;
t948 = -pkin(5) * t981 + t1260;
t947 = t1029 * t1191 + t1186 * t988;
t944 = t1031 * t1192 - t1187 * t984;
t943 = t1192 * t984 + t1289;
t942 = t1186 * t982 - t1191 * t1278;
t935 = -t1082 * t1252 + t1189 * t976;
t934 = t1082 * t1251 + t1184 * t976;
t933 = t1080 * t1251 - t1184 * t975;
t932 = t1080 * t1252 + t1189 * t975;
t931 = t1083 * t1186 + t1191 * t965;
t930 = -t1083 * t1191 + t1186 * t965;
t929 = -t1185 * t994 + t1190 * t995;
t928 = t1185 * t995 + t1190 * t994;
t926 = t1052 * t1191 + t1186 * t966;
t925 = t1085 * t1186 + t1191 * t929;
t924 = -t1085 * t1191 + t1186 * t929;
t923 = -t1187 * t978 + t1192 * t980;
t922 = -t1187 * t977 + t1192 * t979;
t921 = t1187 * t980 + t1192 * t978;
t920 = t1187 * t979 + t1192 * t977;
t917 = -pkin(2) * t987 + t953;
t916 = -pkin(2) * t981 + t952;
t915 = -t1185 * t971 + t1190 * t973;
t914 = -t1185 * t970 + t1190 * t972;
t913 = t1185 * t973 + t1190 * t971;
t912 = t1185 * t972 + t1190 * t970;
t910 = t1185 * t962 + t1190 * t961;
t907 = -t1187 * t955 + t1192 * t957;
t906 = -t1187 * t954 + t1192 * t956;
t905 = t1187 * t957 + t1192 * t955;
t904 = t1187 * t956 + t1192 * t954;
t901 = t1192 * (-t1029 * t1186 + t1191 * t988) - t1187 * t947;
t899 = t1185 * t946 + t1190 * t945;
t898 = t1192 * (t1186 * t1278 + t1191 * t982) - t1187 * t942;
t896 = -t1184 * t1281 - t1189 * t936;
t894 = -t1184 * t936 + t1189 * t1281;
t893 = -t1185 * t934 + t1190 * t935;
t892 = -t1185 * t932 + t1190 * t933;
t891 = t1185 * t935 + t1190 * t934;
t890 = t1185 * t933 + t1190 * t932;
t889 = -t1187 * t930 + t1192 * t931;
t888 = t1187 * t931 + t1192 * t930;
t887 = t1192 * (-t1052 * t1186 + t1191 * t966) - t1187 * t926;
t886 = -t1034 * t1191 + t1186 * t903;
t885 = pkin(1) * t947 + t1205;
t881 = pkin(1) * t942 + t1206;
t880 = -t1186 * t917 + t1191 * t951;
t879 = -t1187 * t924 + t1192 * t925;
t878 = t1187 * t925 + t1192 * t924;
t877 = t1191 * t893 + t1227;
t876 = t1191 * t892 - t1227;
t875 = t1186 * t893 - t1226;
t874 = t1186 * t892 + t1226;
t873 = -t1186 * t916 + t1191 * t948;
t872 = -t1186 * t937 + t1191 * t915;
t871 = t1186 * t940 + t1191 * t914;
t870 = t1186 * t915 + t1191 * t937;
t869 = t1186 * t914 - t1191 * t940;
t868 = -pkin(5) * t964 - t902;
t867 = t1186 * t911 - t1191 * t1281;
t866 = -pkin(1) * t987 + t1186 * t951 + t1191 * t917;
t865 = t1186 * t900 - t1191 * t936;
t864 = -pkin(1) * t981 + t1186 * t948 + t1191 * t916;
t863 = t1191 * t868 + t1268 * t964;
t862 = (-pkin(5) * t1191 + t1268) * t902;
t860 = -t1185 * t894 + t1190 * t896;
t859 = t1185 * t897 + t1190 * t895;
t858 = t1185 * t896 + t1190 * t894;
t857 = pkin(1) * t926 + t1199;
t856 = -pkin(5) * t910 - t1185 * t908 + t1189 * t1262;
t855 = t1186 * t868 + t1228 * t964;
t854 = t1036 * t1186 + t1191 * t860;
t853 = -t1036 * t1191 + t1186 * t860;
t852 = pkin(1) * t886 + t1210;
t851 = t1192 * (t1034 * t1186 + t1191 * t903) - t1187 * t886;
t850 = -pkin(5) * t899 + t1184 * t1262 - t1185 * t909;
t849 = t1186 * t861 - t1191 * t983;
t845 = -t1187 * t875 + t1192 * t877;
t844 = -t1187 * t874 + t1192 * t876;
t843 = t1187 * t877 + t1192 * t875;
t842 = t1187 * t876 + t1192 * t874;
t841 = -pkin(2) * t910 - t1202;
t839 = -t1187 * t870 + t1192 * t872;
t838 = -t1187 * t869 + t1192 * t871;
t837 = t1187 * t872 + t1192 * t870;
t836 = t1187 * t871 + t1192 * t869;
t835 = -pkin(2) * t899 - t1207;
t834 = -t1187 * t866 + t1192 * t880;
t833 = t1187 * t880 + t1192 * t866;
t832 = t1192 * (t1186 * t1281 + t1191 * t911) - t1187 * t867;
t831 = -t1187 * t864 + t1192 * t873;
t830 = t1187 * t873 + t1192 * t864;
t829 = (-pkin(5) * t1186 + t1228) * t902;
t828 = t1192 * (t1186 * t936 + t1191 * t900) - t1187 * t865;
t827 = -pkin(2) * t859 - t1272;
t826 = -t1187 * t855 + t1192 * t863;
t825 = t1187 * t863 + t1192 * t855;
t824 = pkin(1) * t867 + t1197;
t823 = pkin(1) * t865 + t1201;
t822 = -t1187 * t853 + t1192 * t854;
t821 = t1187 * t854 + t1192 * t853;
t820 = t1192 * (t1186 * t983 + t1191 * t861) - t1187 * t849;
t819 = -t1186 * t841 + t1191 * t856;
t817 = t1185 * t848 + t1290;
t816 = -t1187 * t829 + t1192 * t862;
t815 = t1187 * t862 + t1192 * t829;
t814 = -t1186 * t835 + t1191 * t850;
t813 = pkin(3) * t1265 - pkin(5) * t817;
t812 = t1186 * t818 - t1191 * t974;
t811 = -pkin(1) * t910 + t1186 * t856 + t1191 * t841;
t810 = -pkin(1) * t899 + t1186 * t850 + t1191 * t835;
t809 = -pkin(5) * t859 - t1185 * t840 - t1290;
t808 = -pkin(2) * t817 - t1273;
t807 = pkin(1) * t849 + t1200;
t806 = -t1186 * t827 + t1191 * t809;
t805 = -t1187 * t811 + t1192 * t819;
t804 = t1187 * t819 + t1192 * t811;
t803 = t1192 * (t1186 * t974 + t1191 * t818) - t1187 * t812;
t802 = pkin(1) * t812 + t1208;
t801 = -t1187 * t810 + t1192 * t814;
t800 = t1187 * t814 + t1192 * t810;
t799 = -pkin(1) * t859 + t1186 * t809 + t1191 * t827;
t798 = -t1186 * t808 + t1191 * t813;
t797 = -pkin(1) * t817 + t1186 * t813 + t1191 * t808;
t796 = -t1187 * t799 + t1192 * t806;
t795 = t1187 * t806 + t1192 * t799;
t794 = -t1187 * t797 + t1192 * t798;
t793 = t1187 * t798 + t1192 * t797;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1160, 0, -t1159, 0, t1209, -t1142, t1275, pkin(4) * t1275, t1130 * t1193 - t1212, t1110 * t1193 + t1162 * t1188, t1126 * t1193 + t1188 * t1231, t1129 * t1193 + t1212, t1124 * t1193 + t1176 * t1188, qJDD(2) * t1188 + t1149 * t1193, -t1187 * t1152 - t1188 * t1139 - pkin(4) * (t1125 * t1188 + t1157 * t1193), -t1192 * t1152 - t1188 * t1140 - pkin(4) * (t1127 * t1188 - t1154 * t1193), t1193 * t1098 - pkin(4) * (t1158 * t1188 + t1161 * t1193), -pkin(4) * (t1188 * t1215 + t1152), t1193 * t999 + t1223, t1105 * t1188 + t1193 * t959, t1022 * t1193 + t1068 * t1188, t1193 * t998 - t1223, t1023 * t1193 - t1064 * t1188, t1193 * t1045 + t1188 * t1230, t1193 * t1012 + t1188 * t1009 - pkin(4) * (-t1063 * t1193 + t1188 * t993), t1193 * t1013 + t1188 * t1032 - pkin(4) * (t1014 * t1188 - t1067 * t1193), t1193 * t944 + t1188 * t1271 - pkin(4) * (-t1089 * t1193 + t1188 * t960), -pkin(4) * (t1188 * t967 + t1254) + (-t1031 * t1188 - t1187 * t1254) * pkin(1), -t1018 * t1188 + t1193 * t923, t1188 * t963 + t1193 * t889, t1000 * t1188 + t1193 * t906, t1016 * t1188 + t1193 * t922, t1001 * t1188 + t1193 * t907, t1046 * t1188 + t1193 * t950, t1193 * t831 + t1188 * t881 - pkin(4) * (t1188 * t898 - t1193 * t981), t1193 * t834 + t1188 * t885 - pkin(4) * (t1188 * t901 - t1193 * t987), t1193 * t826 + t1188 * t857 - pkin(4) * (t1188 * t887 - t1193 * t964), t1193 * t816 + t1188 * t852 - pkin(4) * (t1188 * t851 - t1193 * t902), t1188 * t891 + t1193 * t845, t1188 * t858 + t1193 * t822, t1188 * t912 + t1193 * t838, t1188 * t890 + t1193 * t844, t1188 * t913 + t1193 * t839, t1188 * t928 + t1193 * t879, t1193 * t801 + t1188 * t823 - pkin(4) * (t1188 * t828 - t1193 * t899), t1193 * t805 + t1188 * t824 - pkin(4) * (t1188 * t832 - t1193 * t910), t1193 * t796 + t1188 * t807 - pkin(4) * (t1188 * t820 - t1193 * t859), t1193 * t794 + t1188 * t802 - pkin(4) * (t1188 * t803 - t1193 * t817); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1159, 0, t1160, 0, t1142, t1209, t1213, pkin(4) * t1213, t1130 * t1188 + t1211, t1110 * t1188 - t1162 * t1193, t1126 * t1188 - t1193 * t1231, t1129 * t1188 - t1211, t1124 * t1188 - t1176 * t1193, -qJDD(2) * t1193 + t1149 * t1188, -t1165 * t1239 + t1193 * t1139 + pkin(4) * (t1125 * t1193 - t1157 * t1188), -t1188 * t1151 + t1193 * t1140 + pkin(4) * (t1127 * t1193 + t1154 * t1188), t1188 * t1098 + pkin(4) * (t1158 * t1193 - t1161 * t1188), pkin(4) * (t1193 * t1215 - t1248), t1188 * t999 - t1222, -t1105 * t1193 + t1188 * t959, t1022 * t1188 - t1068 * t1193, t1188 * t998 + t1222, t1023 * t1188 + t1064 * t1193, t1188 * t1045 - t1193 * t1230, t1188 * t1012 - t1193 * t1009 + pkin(4) * (t1063 * t1188 + t1193 * t993), t1188 * t1013 - t1193 * t1032 + pkin(4) * (t1014 * t1193 + t1067 * t1188), t1188 * t944 - t1193 * t1271 + pkin(4) * (t1089 * t1188 + t1193 * t960), pkin(4) * (-t1112 * t1188 + t1193 * t967) + (t1031 * t1193 - t1112 * t1239) * pkin(1), t1018 * t1193 + t1188 * t923, t1188 * t889 - t1193 * t963, -t1000 * t1193 + t1188 * t906, -t1016 * t1193 + t1188 * t922, -t1001 * t1193 + t1188 * t907, -t1046 * t1193 + t1188 * t950, t1188 * t831 - t1193 * t881 + pkin(4) * (t1188 * t981 + t1193 * t898), t1188 * t834 - t1193 * t885 + pkin(4) * (t1188 * t987 + t1193 * t901), t1188 * t826 - t1193 * t857 + pkin(4) * (t1188 * t964 + t1193 * t887), t1188 * t816 - t1193 * t852 + pkin(4) * (t1188 * t902 + t1193 * t851), t1188 * t845 - t1193 * t891, t1188 * t822 - t1193 * t858, t1188 * t838 - t1193 * t912, t1188 * t844 - t1193 * t890, t1188 * t839 - t1193 * t913, t1188 * t879 - t1193 * t928, t1188 * t801 - t1193 * t823 + pkin(4) * (t1188 * t899 + t1193 * t828), t1188 * t805 - t1193 * t824 + pkin(4) * (t1188 * t910 + t1193 * t832), t1188 * t796 - t1193 * t807 + pkin(4) * (t1188 * t859 + t1193 * t820), t1188 * t794 - t1193 * t802 + pkin(4) * (t1188 * t817 + t1193 * t803); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1165, t1233, 0, 0, t1121, t1109, t1123, t1120, t1122, 0, t1151, -t1150, t1215, 0, t997, t958, t1020, t996, t1021, t1044, t1010, t1011, t943, t1229, t921, t888, t904, t920, t905, t949, t830, t833, t825, t815, t843, t821, t836, t842, t837, t878, t800, t804, t795, t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1195, 0, 0, -g(3), -t1165, 0, t1130, t1110, t1126, t1129, t1124, t1149, -t1150, -t1151, t1098, 0, t999, t959, t1022, t998, t1023, t1045, t1012, t1013, t944, -t1187 * t1269, t923, t889, t906, t922, t907, t950, t831, t834, t826, t816, t845, t822, t838, t844, t839, t879, t801, t805, t796, t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1195, 0, qJDD(1), 0, g(3), 0, -t1233, 0, t1169, -t1162, -t1231, -t1169, -t1176, -qJDD(2), t1139, t1140, 0, 0, -t1108, -t1105, -t1068, t1108, t1064, -t1230, -t1009, -t1032, -t1271, t1270, t1018, -t963, -t1000, -t1016, -t1001, -t1046, -t881, -t885, -t857, -t852, -t891, -t858, -t912, -t890, -t913, -t928, -t823, -t824, -t807, -t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1165, t1233, 0, 0, t1121, t1109, t1123, t1120, t1122, 0, t1151, -t1150, t1215, 0, t997, t958, t1020, t996, t1021, t1044, t1010, t1011, t943, t1229, t921, t888, t904, t920, t905, t949, t830, t833, t825, t815, t843, t821, t836, t842, t837, t878, t800, t804, t795, t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1155, t1157, t1163, -t1173, t1167, t1173, 0, -t1165, t1139, 0, t1061, t1008, t1073, t1059, t1074, t1092, -t1243, -t1238, t1031, 0, t980, t931, t956, t979, t957, t1005, t873, t880, t863, t862, t877, t854, t871, t876, t872, t925, t814, t819, t806, t798; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1220, t1154, t1166, t1156, t1164, -t1220, t1165, 0, t1140, 0, t1060, t1006, t1071, t1058, t1072, t1091, t1042, t1041, t984, t1269, t978, t930, t954, t977, t955, t1004, t864, t866, t855, t829, t875, t853, t869, t874, t870, t924, t810, t811, t799, t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1169, t1162, t1231, t1169, t1176, qJDD(2), -t1139, -t1140, 0, 0, t1108, t1105, t1068, -t1108, -t1064, t1230, t1009, t1032, t1271, -t1270, -t1018, t963, t1000, t1016, t1001, t1046, t881, t885, t857, t852, t891, t858, t912, t890, t913, t928, t823, t824, t807, t802; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1088, -t1063, t1277, t1135, t1131, -t1135, 0, -t1112, t1075, 0, t1019, t965, t1002, t1017, t1003, t1047, t948, t951, t868, -pkin(5) * t902, t893, t860, t914, t892, t915, t929, t850, t856, t809, t813; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1247, t1067, t1132, t1087, t1102, -t1247, t1112, 0, t1076, 0, -t1084, -t1083, -t1028, t1084, t1024, -t1086, t916, t917, -pkin(2) * t964, -pkin(2) * t902, -t1037, -t1036, -t940, t1037, t937, -t1085, t835, t841, t827, t808; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1108, t1105, t1068, -t1108, -t1064, t1230, -t1075, -t1076, 0, 0, -t1018, t963, t1000, t1016, t1001, t1046, t1206, t1205, t1199, t1210, t891, t858, t912, t890, t913, t928, t1201, t1197, t1200, t1208; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1051, -t1278, t1279, t1095, t1093, -t1095, 0, t1034, t952, 0, t935, t896, t972, t933, t973, t995, t1267, t1264, -t846, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1096, t1027, t1094, -t1198, t1039, -t1096, -t1034, 0, t953, 0, t934, t894, t970, t932, t971, t994, t909, t908, t840, -pkin(3) * t974; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1084, t1083, t1028, -t1084, -t1024, t1086, -t952, -t953, 0, 0, t1037, t1036, t940, -t1037, -t937, t1085, t1207, t1202, t1272, t1273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t976, -t936, t1280, t1056, t1053, -t1056, 0, t974, t883, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1253, t1281, t1054, t975, t990, -t1253, -t974, 0, t884, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1037, t1036, t940, -t1037, -t937, t1085, -t883, -t884, 0, 0;];
m_new_reg  = t1;
