% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRR3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,a5,d1,d4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 18:57
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRR3_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(5,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR3_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR3_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR3_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR3_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'S5RRRRR3_invdynm_fixb_reg2_snew_vp: pkin has to be [5x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 18:56:59
% EndTime: 2019-12-05 18:57:14
% DurationCPUTime: 15.18s
% Computational Cost: add. (89354->629), mult. (182857->888), div. (0->0), fcn. (141728->10), ass. (0->448)
t1183 = sin(qJ(4));
t1182 = sin(qJ(5));
t1187 = cos(qJ(5));
t1185 = sin(qJ(2));
t1189 = cos(qJ(3));
t1184 = sin(qJ(3));
t1190 = cos(qJ(2));
t1240 = t1184 * t1190;
t1145 = (t1185 * t1189 + t1240) * qJD(1);
t1179 = qJD(2) + qJD(3);
t1188 = cos(qJ(4));
t1114 = t1145 * t1183 - t1188 * t1179;
t1116 = t1145 * t1188 + t1179 * t1183;
t1083 = t1116 * t1114;
t1260 = qJD(1) * qJD(2);
t1171 = t1190 * t1260;
t1230 = t1185 * qJDD(1);
t1153 = t1171 + t1230;
t1174 = t1190 * qJDD(1);
t1218 = t1185 * t1260;
t1154 = t1174 - t1218;
t1212 = t1184 * t1153 - t1189 * t1154;
t1086 = -qJD(3) * t1145 - t1212;
t1085 = qJDD(4) - t1086;
t1278 = -t1083 + t1085;
t1186 = sin(qJ(1));
t1191 = cos(qJ(1));
t1232 = t1191 * g(1) + t1186 * g(2);
t1138 = -t1185 * g(3) - t1190 * t1232;
t1181 = t1190 ^ 2;
t1193 = qJD(1) ^ 2;
t1175 = t1181 * t1193;
t1192 = qJD(2) ^ 2;
t1275 = -t1175 - t1192;
t1117 = t1275 * pkin(1) + t1138;
t1137 = t1190 * g(3) - t1185 * t1232;
t1167 = t1190 * t1193 * t1185;
t1161 = qJDD(2) + t1167;
t1194 = t1161 * pkin(1) - t1137;
t1075 = t1189 * t1117 + t1184 * t1194;
t1236 = t1189 * t1190;
t1241 = t1184 * t1185;
t1143 = (-t1236 + t1241) * qJD(1);
t1102 = pkin(2) * t1143 - pkin(5) * t1145;
t1227 = qJDD(2) + qJDD(3);
t1273 = t1179 ^ 2;
t1034 = -t1273 * pkin(2) + t1227 * pkin(5) - t1143 * t1102 + t1075;
t1087 = -qJD(3) * t1143 + t1153 * t1189 + t1154 * t1184;
t1133 = t1179 * t1143;
t1066 = t1087 - t1133;
t1163 = t1186 * g(1) - t1191 * g(2);
t1281 = t1154 - t1218;
t1110 = t1281 * pkin(1) + t1163;
t1246 = t1179 * t1145;
t991 = -t1066 * pkin(5) + (-t1086 + t1246) * pkin(2) - t1110;
t951 = t1183 * t1034 - t1188 * t991;
t918 = pkin(3) * t1278 - t951;
t1112 = t1114 ^ 2;
t1139 = qJD(4) + t1143;
t1136 = t1139 ^ 2;
t1061 = -t1112 - t1136;
t952 = t1188 * t1034 + t1183 * t991;
t926 = t1061 * pkin(3) + t952;
t882 = t1182 * t926 - t1187 * t918;
t883 = t1182 * t918 + t1187 * t926;
t845 = t1182 * t883 - t1187 * t882;
t1290 = t1183 * t845;
t1289 = t1188 * t845;
t1074 = t1184 * t1117 - t1189 * t1194;
t1030 = t1074 * t1189 - t1075 * t1184;
t1288 = t1030 * t1185;
t1079 = t1187 * t1114 + t1116 * t1182;
t1081 = -t1114 * t1182 + t1116 * t1187;
t1036 = t1081 * t1079;
t1084 = qJDD(5) + t1085;
t1279 = -t1036 + t1084;
t1287 = t1182 * t1279;
t1286 = t1183 * t1278;
t1106 = t1145 * t1143;
t1276 = -t1106 + t1227;
t1285 = t1184 * t1276;
t1284 = t1187 * t1279;
t1283 = t1188 * t1278;
t1282 = t1189 * t1276;
t1135 = qJD(5) + t1139;
t1055 = t1135 * t1079;
t1202 = -t1188 * t1087 - t1183 * t1227;
t1050 = -t1114 * qJD(4) - t1202;
t1201 = -t1183 * t1087 + t1188 * t1227;
t1196 = t1116 * qJD(4) - t1201;
t975 = -t1079 * qJD(5) + t1187 * t1050 - t1182 * t1196;
t1280 = -t1055 + t975;
t1094 = t1139 * t1116;
t1277 = t1094 + t1196;
t1150 = t1191 * t1163;
t1274 = t1186 * t1232 - t1150;
t1216 = t1182 * t1050 + t1187 * t1196;
t936 = (qJD(5) - t1135) * t1081 + t1216;
t1063 = (qJD(3) - t1179) * t1145 + t1212;
t1077 = t1079 ^ 2;
t1078 = t1081 ^ 2;
t1113 = t1116 ^ 2;
t1134 = t1135 ^ 2;
t1141 = t1143 ^ 2;
t1142 = t1145 ^ 2;
t1272 = pkin(3) * t845;
t939 = t1055 + t975;
t894 = -t1182 * t936 - t1187 * t939;
t1271 = pkin(3) * t894;
t1067 = t1087 + t1133;
t1006 = -t1063 * t1184 - t1067 * t1189;
t1270 = pkin(1) * t1006;
t1269 = pkin(1) * t1030;
t1268 = pkin(1) * t1110;
t1267 = pkin(2) * t1184;
t1033 = -t1227 * pkin(2) - t1273 * pkin(5) + t1145 * t1102 + t1074;
t973 = t1277 * pkin(3) + t1033;
t1266 = t1182 * t973;
t989 = t1036 + t1084;
t1265 = t1182 * t989;
t1264 = t1183 * t973;
t1263 = t1187 * t973;
t1262 = t1187 * t989;
t1261 = t1188 * t973;
t1259 = t1033 * t1183;
t1258 = t1033 * t1188;
t1038 = t1083 + t1085;
t1257 = t1038 * t1183;
t1256 = t1038 * t1188;
t1100 = t1106 + t1227;
t1255 = t1100 * t1184;
t1254 = t1100 * t1189;
t1253 = t1110 * t1191;
t1252 = t1135 * t1081;
t1251 = t1135 * t1182;
t1250 = t1135 * t1187;
t1249 = t1139 * t1183;
t1248 = t1139 * t1188;
t1247 = t1163 * t1186;
t1245 = t1179 * t1184;
t1244 = t1179 * t1189;
t1180 = t1185 ^ 2;
t1243 = t1180 * t1193;
t1242 = t1184 * t1110;
t1239 = t1185 * t1161;
t1148 = t1185 * t1163;
t1238 = t1185 * t1186;
t1237 = t1189 * t1110;
t1162 = qJDD(2) - t1167;
t1235 = t1190 * t1162;
t1149 = t1190 * t1163;
t1231 = t1180 + t1181;
t1229 = t1186 * qJDD(1);
t1228 = t1191 * qJDD(1);
t1226 = t1190 * t1268;
t1225 = -pkin(2) * t1189 - pkin(1);
t1224 = t1184 * t1036;
t1223 = t1189 * t1036;
t1222 = t1184 * t1083;
t1221 = t1189 * t1083;
t1220 = t1186 * t1106;
t1219 = t1191 * t1106;
t847 = t1182 * t882 + t1187 * t883;
t1215 = t1074 * t1184 + t1189 * t1075;
t1213 = t1137 * t1185 + t1190 * t1138;
t1211 = -t1191 * t1232 - t1247;
t1210 = t1186 * t1167;
t1209 = t1191 * t1167;
t902 = t1183 * t951 + t1188 * t952;
t1208 = -pkin(2) * t1033 + pkin(5) * t902;
t1158 = -t1186 * t1193 + t1228;
t1207 = -pkin(4) * t1158 - g(3) * t1186;
t901 = t1183 * t952 - t1188 * t951;
t817 = t1188 * t847 - t1290;
t1206 = -pkin(2) * t973 - pkin(3) * t1261 + pkin(5) * t817;
t1014 = -t1134 - t1077;
t944 = t1014 * t1182 + t1284;
t1205 = pkin(3) * t944 - t882;
t981 = t1061 * t1188 - t1286;
t1204 = -pkin(2) * t1277 + pkin(5) * t981 - t1258;
t1028 = (qJD(4) + t1139) * t1114 + t1202;
t1076 = -t1113 - t1136;
t987 = -t1076 * t1183 - t1256;
t1203 = pkin(2) * t1028 + pkin(5) * t987 + t1259;
t1042 = -t1078 - t1134;
t960 = t1042 * t1187 - t1265;
t1200 = pkin(3) * t960 - t883;
t945 = t1014 * t1187 - t1287;
t899 = -t1183 * t944 + t1188 * t945;
t935 = (qJD(5) + t1135) * t1081 + t1216;
t908 = -pkin(3) * t935 - t1263;
t1199 = -pkin(2) * t935 + pkin(5) * t899 + t1182 * t1264 + t1188 * t908;
t982 = -t1077 - t1078;
t839 = -pkin(3) * t982 + t847;
t896 = t1182 * t939 - t1187 * t936;
t860 = -t1183 * t894 + t1188 * t896;
t1198 = -pkin(2) * t982 + pkin(5) * t860 + t1188 * t839 - t1290;
t1051 = t1112 + t1113;
t1025 = (-qJD(4) + t1139) * t1116 + t1201;
t1093 = t1139 * t1114;
t1027 = t1093 + t1050;
t965 = t1025 * t1188 + t1027 * t1183;
t1197 = pkin(2) * t1051 + pkin(5) * t965 + t902;
t907 = -pkin(3) * t1280 + t1266;
t961 = -t1042 * t1182 - t1262;
t910 = -t1183 * t960 + t1188 * t961;
t1195 = -pkin(2) * t1280 + pkin(5) * t910 + t1183 * t1263 + t1188 * t907;
t1165 = t1175 - t1192;
t1164 = t1192 - t1243;
t1160 = -t1175 + t1243;
t1159 = t1175 + t1243;
t1157 = t1191 * t1193 + t1229;
t1156 = t1231 * qJDD(1);
t1155 = t1174 - 0.2e1 * t1218;
t1152 = 0.2e1 * t1171 + t1230;
t1147 = t1231 * t1260;
t1140 = -pkin(4) * t1157 + t1191 * g(3);
t1130 = -t1142 + t1273;
t1129 = t1141 - t1273;
t1128 = t1190 * t1153 - t1180 * t1260;
t1127 = -t1185 * t1154 - t1181 * t1260;
t1126 = -t1142 - t1273;
t1125 = -t1235 - t1185 * (-t1192 - t1243);
t1124 = t1161 * t1190 - t1164 * t1185;
t1123 = t1190 * t1275 - t1239;
t1122 = -t1162 * t1185 + t1165 * t1190;
t1121 = t1164 * t1190 + t1239;
t1120 = t1165 * t1185 + t1235;
t1119 = (t1153 + t1171) * t1185;
t1118 = t1281 * t1190;
t1108 = -t1152 * t1185 + t1155 * t1190;
t1107 = t1152 * t1190 + t1155 * t1185;
t1103 = t1142 - t1141;
t1098 = -t1273 - t1141;
t1096 = t1137 * t1190 - t1138 * t1185;
t1092 = -t1113 + t1136;
t1091 = t1112 - t1136;
t1090 = (-t1143 * t1189 + t1145 * t1184) * t1179;
t1089 = (-t1143 * t1184 - t1145 * t1189) * t1179;
t1088 = -t1141 - t1142;
t1082 = t1113 - t1112;
t1073 = t1129 * t1189 - t1255;
t1072 = -t1130 * t1184 + t1282;
t1071 = t1129 * t1184 + t1254;
t1070 = t1130 * t1189 + t1285;
t1068 = t1126 * t1189 - t1255;
t1062 = (qJD(3) + t1179) * t1145 + t1212;
t1060 = t1087 * t1189 - t1145 * t1245;
t1059 = t1087 * t1184 + t1145 * t1244;
t1058 = -t1086 * t1184 + t1143 * t1244;
t1057 = t1086 * t1189 + t1143 * t1245;
t1054 = t1098 * t1184 + t1282;
t1053 = -t1078 + t1134;
t1052 = t1077 - t1134;
t1046 = (-t1114 * t1188 + t1116 * t1183) * t1139;
t1045 = (-t1114 * t1183 - t1116 * t1188) * t1139;
t1044 = -t1089 * t1185 + t1090 * t1190;
t1043 = t1089 * t1190 + t1090 * t1185;
t1041 = -pkin(1) * t1062 + t1237;
t1040 = -pkin(1) * t1066 - t1242;
t1035 = t1078 - t1077;
t1031 = pkin(1) * t1068 - t1075;
t1026 = -t1093 + t1050;
t1023 = -t1094 + t1196;
t1022 = -t1071 * t1185 + t1073 * t1190;
t1021 = -t1070 * t1185 + t1072 * t1190;
t1020 = t1071 * t1190 + t1073 * t1185;
t1019 = t1070 * t1190 + t1072 * t1185;
t1018 = t1050 * t1188 - t1116 * t1249;
t1017 = t1050 * t1183 + t1116 * t1248;
t1016 = t1114 * t1248 + t1183 * t1196;
t1015 = -t1114 * t1249 + t1188 * t1196;
t1013 = t1190 * (-t1126 * t1184 - t1254) - t1185 * t1068;
t1012 = -t1040 * t1185 - t1110 * t1236;
t1011 = -t1041 * t1185 - t1110 * t1240;
t1010 = t1040 * t1190 - t1185 * t1237;
t1009 = t1041 * t1190 - t1110 * t1241;
t1008 = pkin(1) * t1054 - t1074;
t1007 = -t1062 * t1189 - t1066 * t1184;
t1005 = -t1062 * t1184 + t1066 * t1189;
t1004 = t1046 * t1189 + t1085 * t1184;
t1003 = t1046 * t1184 - t1085 * t1189;
t1002 = t1091 * t1188 - t1257;
t1001 = -t1092 * t1183 + t1283;
t1000 = t1091 * t1183 + t1256;
t999 = t1092 * t1188 + t1286;
t998 = -t1059 * t1185 + t1060 * t1190;
t997 = -t1057 * t1185 + t1058 * t1190;
t996 = t1059 * t1190 + t1060 * t1185;
t995 = t1057 * t1190 + t1058 * t1185;
t994 = (-t1079 * t1187 + t1081 * t1182) * t1135;
t993 = (-t1079 * t1182 - t1081 * t1187) * t1135;
t992 = t1190 * (t1098 * t1189 - t1285) - t1185 * t1054;
t986 = t1076 * t1188 - t1257;
t983 = -pkin(1) * t1088 + t1215;
t980 = t1061 * t1183 + t1283;
t979 = t1018 * t1189 + t1222;
t978 = t1016 * t1189 - t1222;
t977 = t1018 * t1184 - t1221;
t976 = t1016 * t1184 + t1221;
t974 = -qJD(5) * t1081 - t1216;
t972 = t1052 * t1187 - t1265;
t971 = -t1053 * t1182 + t1284;
t970 = t1052 * t1182 + t1262;
t969 = t1053 * t1187 + t1287;
t966 = t1190 * t1215 + t1288;
t964 = -t1026 * t1183 - t1188 * t1277;
t963 = t1025 * t1183 - t1027 * t1188;
t962 = t1026 * t1188 - t1183 * t1277;
t959 = t1190 * (-t1063 * t1189 + t1067 * t1184) - t1185 * t1006;
t958 = -t1005 * t1185 + t1007 * t1190;
t957 = t1005 * t1190 + t1007 * t1185;
t956 = t1002 * t1189 - t1023 * t1184;
t955 = t1001 * t1189 + t1027 * t1184;
t954 = t1002 * t1184 + t1023 * t1189;
t953 = t1001 * t1184 - t1027 * t1189;
t950 = -pkin(5) * t986 + t1258;
t949 = -t1003 * t1185 + t1004 * t1190;
t948 = t1003 * t1190 + t1004 * t1185;
t947 = -pkin(5) * t980 + t1259;
t946 = t1028 * t1189 + t1184 * t987;
t943 = t1030 * t1190 - t1185 * t983;
t942 = t1190 * t983 + t1288;
t941 = t1184 * t981 - t1189 * t1277;
t934 = -t1081 * t1251 + t1187 * t975;
t933 = t1081 * t1250 + t1182 * t975;
t932 = t1079 * t1250 - t1182 * t974;
t931 = t1079 * t1251 + t1187 * t974;
t930 = t1082 * t1184 + t1189 * t964;
t929 = -t1082 * t1189 + t1184 * t964;
t928 = -t1183 * t993 + t1188 * t994;
t927 = t1183 * t994 + t1188 * t993;
t925 = t1051 * t1189 + t1184 * t965;
t924 = t1084 * t1184 + t1189 * t928;
t923 = -t1084 * t1189 + t1184 * t928;
t922 = -t1185 * t977 + t1190 * t979;
t921 = -t1185 * t976 + t1190 * t978;
t920 = t1185 * t979 + t1190 * t977;
t919 = t1185 * t978 + t1190 * t976;
t916 = -pkin(2) * t986 + t952;
t915 = -pkin(2) * t980 + t951;
t914 = -t1183 * t970 + t1188 * t972;
t913 = -t1183 * t969 + t1188 * t971;
t912 = t1183 * t972 + t1188 * t970;
t911 = t1183 * t971 + t1188 * t969;
t909 = t1183 * t961 + t1188 * t960;
t906 = -t1185 * t954 + t1190 * t956;
t905 = -t1185 * t953 + t1190 * t955;
t904 = t1185 * t956 + t1190 * t954;
t903 = t1185 * t955 + t1190 * t953;
t900 = t1190 * (-t1028 * t1184 + t1189 * t987) - t1185 * t946;
t898 = t1183 * t945 + t1188 * t944;
t897 = t1190 * (t1184 * t1277 + t1189 * t981) - t1185 * t941;
t895 = -t1182 * t1280 - t1187 * t935;
t893 = -t1182 * t935 + t1187 * t1280;
t892 = -t1183 * t933 + t1188 * t934;
t891 = -t1183 * t931 + t1188 * t932;
t890 = t1183 * t934 + t1188 * t933;
t889 = t1183 * t932 + t1188 * t931;
t888 = -t1185 * t929 + t1190 * t930;
t887 = t1185 * t930 + t1190 * t929;
t886 = t1190 * (-t1051 * t1184 + t1189 * t965) - t1185 * t925;
t885 = -t1033 * t1189 + t1184 * t902;
t884 = pkin(1) * t946 + t1203;
t880 = pkin(1) * t941 + t1204;
t879 = -t1184 * t916 + t1189 * t950;
t878 = -t1185 * t923 + t1190 * t924;
t877 = t1185 * t924 + t1190 * t923;
t876 = t1189 * t892 + t1224;
t875 = t1189 * t891 - t1224;
t874 = t1184 * t892 - t1223;
t873 = t1184 * t891 + t1223;
t872 = -t1184 * t915 + t1189 * t947;
t871 = -t1184 * t936 + t1189 * t914;
t870 = t1184 * t939 + t1189 * t913;
t869 = t1184 * t914 + t1189 * t936;
t868 = t1184 * t913 - t1189 * t939;
t867 = -pkin(5) * t963 - t901;
t866 = t1184 * t910 - t1189 * t1280;
t865 = -pkin(1) * t986 + t1184 * t950 + t1189 * t916;
t864 = t1184 * t899 - t1189 * t935;
t863 = -pkin(1) * t980 + t1184 * t947 + t1189 * t915;
t862 = t1189 * t867 + t963 * t1267;
t861 = (-pkin(5) * t1189 + t1267) * t901;
t859 = -t1183 * t893 + t1188 * t895;
t858 = t1183 * t896 + t1188 * t894;
t857 = t1183 * t895 + t1188 * t893;
t856 = pkin(1) * t925 + t1197;
t855 = -pkin(5) * t909 - t1183 * t907 + t1187 * t1261;
t854 = t1184 * t867 + t1225 * t963;
t853 = t1035 * t1184 + t1189 * t859;
t852 = -t1035 * t1189 + t1184 * t859;
t851 = pkin(1) * t885 + t1208;
t850 = t1190 * (t1033 * t1184 + t1189 * t902) - t1185 * t885;
t849 = -pkin(5) * t898 + t1182 * t1261 - t1183 * t908;
t848 = t1184 * t860 - t1189 * t982;
t844 = -t1185 * t874 + t1190 * t876;
t843 = -t1185 * t873 + t1190 * t875;
t842 = t1185 * t876 + t1190 * t874;
t841 = t1185 * t875 + t1190 * t873;
t840 = -pkin(2) * t909 - t1200;
t838 = -t1185 * t869 + t1190 * t871;
t837 = -t1185 * t868 + t1190 * t870;
t836 = t1185 * t871 + t1190 * t869;
t835 = t1185 * t870 + t1190 * t868;
t834 = -pkin(2) * t898 - t1205;
t833 = -t1185 * t865 + t1190 * t879;
t832 = t1185 * t879 + t1190 * t865;
t831 = t1190 * (t1184 * t1280 + t1189 * t910) - t1185 * t866;
t830 = -t1185 * t863 + t1190 * t872;
t829 = t1185 * t872 + t1190 * t863;
t828 = (-pkin(5) * t1184 + t1225) * t901;
t827 = t1190 * (t1184 * t935 + t1189 * t899) - t1185 * t864;
t826 = -pkin(2) * t858 - t1271;
t825 = -t1185 * t854 + t1190 * t862;
t824 = t1185 * t862 + t1190 * t854;
t823 = pkin(1) * t866 + t1195;
t822 = pkin(1) * t864 + t1199;
t821 = -t1185 * t852 + t1190 * t853;
t820 = t1185 * t853 + t1190 * t852;
t819 = t1190 * (t1184 * t982 + t1189 * t860) - t1185 * t848;
t818 = -t1184 * t840 + t1189 * t855;
t816 = t1183 * t847 + t1289;
t815 = -t1185 * t828 + t1190 * t861;
t814 = t1185 * t861 + t1190 * t828;
t813 = -t1184 * t834 + t1189 * t849;
t812 = pkin(3) * t1264 - pkin(5) * t816;
t811 = t1184 * t817 - t1189 * t973;
t810 = -pkin(1) * t909 + t1184 * t855 + t1189 * t840;
t809 = -pkin(1) * t898 + t1184 * t849 + t1189 * t834;
t808 = -pkin(5) * t858 - t1183 * t839 - t1289;
t807 = -pkin(2) * t816 - t1272;
t806 = pkin(1) * t848 + t1198;
t805 = -t1184 * t826 + t1189 * t808;
t804 = -t1185 * t810 + t1190 * t818;
t803 = t1185 * t818 + t1190 * t810;
t802 = t1190 * (t1184 * t973 + t1189 * t817) - t1185 * t811;
t801 = pkin(1) * t811 + t1206;
t800 = -t1185 * t809 + t1190 * t813;
t799 = t1185 * t813 + t1190 * t809;
t798 = -pkin(1) * t858 + t1184 * t808 + t1189 * t826;
t797 = -t1184 * t807 + t1189 * t812;
t796 = -pkin(1) * t816 + t1184 * t812 + t1189 * t807;
t795 = -t1185 * t798 + t1190 * t805;
t794 = t1185 * t805 + t1190 * t798;
t793 = -t1185 * t796 + t1190 * t797;
t792 = t1185 * t797 + t1190 * t796;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1158, 0, -t1157, 0, t1207, -t1140, t1274, pkin(4) * t1274, t1128 * t1191 - t1210, t1108 * t1191 + t1160 * t1186, t1124 * t1191 + t1185 * t1229, t1127 * t1191 + t1210, t1122 * t1191 + t1174 * t1186, qJDD(2) * t1186 + t1147 * t1191, -t1185 * t1150 - t1186 * t1137 - pkin(4) * (t1123 * t1186 + t1155 * t1191), -t1190 * t1150 - t1186 * t1138 - pkin(4) * (t1125 * t1186 - t1152 * t1191), t1191 * t1096 - pkin(4) * (t1156 * t1186 + t1159 * t1191), -pkin(4) * (t1186 * t1213 + t1150), t1191 * t998 + t1220, t1103 * t1186 + t1191 * t958, t1021 * t1191 + t1067 * t1186, t1191 * t997 - t1220, t1022 * t1191 - t1063 * t1186, t1191 * t1044 + t1186 * t1227, t1191 * t1011 + t1186 * t1008 - pkin(4) * (-t1062 * t1191 + t1186 * t992), t1191 * t1012 + t1186 * t1031 - pkin(4) * (t1013 * t1186 - t1066 * t1191), t1191 * t943 + t1186 * t1270 - pkin(4) * (-t1088 * t1191 + t1186 * t959), -pkin(4) * (t1186 * t966 + t1253) + (-t1030 * t1186 - t1185 * t1253) * pkin(1), t1017 * t1186 + t1191 * t922, t1186 * t962 + t1191 * t888, t1186 * t999 + t1191 * t905, -t1015 * t1186 + t1191 * t921, t1000 * t1186 + t1191 * t906, t1045 * t1186 + t1191 * t949, t1191 * t830 + t1186 * t880 - pkin(4) * (t1186 * t897 - t1191 * t980), t1191 * t833 + t1186 * t884 - pkin(4) * (t1186 * t900 - t1191 * t986), t1191 * t825 + t1186 * t856 - pkin(4) * (t1186 * t886 - t1191 * t963), t1191 * t815 + t1186 * t851 - pkin(4) * (t1186 * t850 - t1191 * t901), t1186 * t890 + t1191 * t844, t1186 * t857 + t1191 * t821, t1186 * t911 + t1191 * t837, t1186 * t889 + t1191 * t843, t1186 * t912 + t1191 * t838, t1186 * t927 + t1191 * t878, t1191 * t800 + t1186 * t822 - pkin(4) * (t1186 * t827 - t1191 * t898), t1191 * t804 + t1186 * t823 - pkin(4) * (t1186 * t831 - t1191 * t909), t1191 * t795 + t1186 * t806 - pkin(4) * (t1186 * t819 - t1191 * t858), t1191 * t793 + t1186 * t801 - pkin(4) * (t1186 * t802 - t1191 * t816); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1157, 0, t1158, 0, t1140, t1207, t1211, pkin(4) * t1211, t1128 * t1186 + t1209, t1108 * t1186 - t1160 * t1191, t1124 * t1186 - t1185 * t1228, t1127 * t1186 - t1209, t1122 * t1186 - t1190 * t1228, -qJDD(2) * t1191 + t1147 * t1186, -t1163 * t1238 + t1191 * t1137 + pkin(4) * (t1123 * t1191 - t1155 * t1186), -t1186 * t1149 + t1191 * t1138 + pkin(4) * (t1125 * t1191 + t1152 * t1186), t1186 * t1096 + pkin(4) * (t1156 * t1191 - t1159 * t1186), pkin(4) * (t1191 * t1213 - t1247), t1186 * t998 - t1219, -t1103 * t1191 + t1186 * t958, t1021 * t1186 - t1067 * t1191, t1186 * t997 + t1219, t1022 * t1186 + t1063 * t1191, t1186 * t1044 - t1191 * t1227, t1186 * t1011 - t1191 * t1008 + pkin(4) * (t1062 * t1186 + t1191 * t992), t1186 * t1012 - t1191 * t1031 + pkin(4) * (t1013 * t1191 + t1066 * t1186), t1186 * t943 - t1191 * t1270 + pkin(4) * (t1088 * t1186 + t1191 * t959), pkin(4) * (-t1110 * t1186 + t1191 * t966) + (t1030 * t1191 - t1110 * t1238) * pkin(1), -t1017 * t1191 + t1186 * t922, t1186 * t888 - t1191 * t962, t1186 * t905 - t1191 * t999, t1015 * t1191 + t1186 * t921, -t1000 * t1191 + t1186 * t906, -t1045 * t1191 + t1186 * t949, t1186 * t830 - t1191 * t880 + pkin(4) * (t1186 * t980 + t1191 * t897), t1186 * t833 - t1191 * t884 + pkin(4) * (t1186 * t986 + t1191 * t900), t1186 * t825 - t1191 * t856 + pkin(4) * (t1186 * t963 + t1191 * t886), t1186 * t815 - t1191 * t851 + pkin(4) * (t1186 * t901 + t1191 * t850), t1186 * t844 - t1191 * t890, t1186 * t821 - t1191 * t857, t1186 * t837 - t1191 * t911, t1186 * t843 - t1191 * t889, t1186 * t838 - t1191 * t912, t1186 * t878 - t1191 * t927, t1186 * t800 - t1191 * t822 + pkin(4) * (t1186 * t898 + t1191 * t827), t1186 * t804 - t1191 * t823 + pkin(4) * (t1186 * t909 + t1191 * t831), t1186 * t795 - t1191 * t806 + pkin(4) * (t1186 * t858 + t1191 * t819), t1186 * t793 - t1191 * t801 + pkin(4) * (t1186 * t816 + t1191 * t802); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1163, t1232, 0, 0, t1119, t1107, t1121, t1118, t1120, 0, t1149, -t1148, t1213, 0, t996, t957, t1019, t995, t1020, t1043, t1009, t1010, t942, t1226, t920, t887, t903, t919, t904, t948, t829, t832, t824, t814, t842, t820, t835, t841, t836, t877, t799, t803, t794, t792; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1193, 0, 0, -g(3), -t1163, 0, t1128, t1108, t1124, t1127, t1122, t1147, -t1148, -t1149, t1096, 0, t998, t958, t1021, t997, t1022, t1044, t1011, t1012, t943, -t1185 * t1268, t922, t888, t905, t921, t906, t949, t830, t833, t825, t815, t844, t821, t837, t843, t838, t878, t800, t804, t795, t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1193, 0, qJDD(1), 0, g(3), 0, -t1232, 0, t1167, -t1160, -t1230, -t1167, -t1174, -qJDD(2), t1137, t1138, 0, 0, -t1106, -t1103, -t1067, t1106, t1063, -t1227, -t1008, -t1031, -t1270, t1269, -t1017, -t962, -t999, t1015, -t1000, -t1045, -t880, -t884, -t856, -t851, -t890, -t857, -t911, -t889, -t912, -t927, -t822, -t823, -t806, -t801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1163, t1232, 0, 0, t1119, t1107, t1121, t1118, t1120, 0, t1149, -t1148, t1213, 0, t996, t957, t1019, t995, t1020, t1043, t1009, t1010, t942, t1226, t920, t887, t903, t919, t904, t948, t829, t832, t824, t814, t842, t820, t835, t841, t836, t877, t799, t803, t794, t792; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1153, t1155, t1161, -t1171, t1165, t1171, 0, -t1163, t1137, 0, t1060, t1007, t1072, t1058, t1073, t1090, -t1242, -t1237, t1030, 0, t979, t930, t955, t978, t956, t1004, t872, t879, t862, t861, t876, t853, t870, t875, t871, t924, t813, t818, t805, t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1218, t1152, t1164, t1154, t1162, -t1218, t1163, 0, t1138, 0, t1059, t1005, t1070, t1057, t1071, t1089, t1041, t1040, t983, t1268, t977, t929, t953, t976, t954, t1003, t863, t865, t854, t828, t874, t852, t868, t873, t869, t923, t809, t810, t798, t796; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1167, t1160, t1230, t1167, t1174, qJDD(2), -t1137, -t1138, 0, 0, t1106, t1103, t1067, -t1106, -t1063, t1227, t1008, t1031, t1270, -t1269, t1017, t962, t999, -t1015, t1000, t1045, t880, t884, t856, t851, t890, t857, t911, t889, t912, t927, t822, t823, t806, t801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1087, -t1062, t1276, t1133, t1129, -t1133, 0, -t1110, t1074, 0, t1018, t964, t1001, t1016, t1002, t1046, t947, t950, t867, -pkin(5) * t901, t892, t859, t913, t891, t914, t928, t849, t855, t808, t812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1246, t1066, t1130, t1086, t1100, -t1246, t1110, 0, t1075, 0, -t1083, -t1082, -t1027, t1083, t1023, -t1085, t915, t916, -pkin(2) * t963, -pkin(2) * t901, -t1036, -t1035, -t939, t1036, t936, -t1084, t834, t840, t826, t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1106, t1103, t1067, -t1106, -t1063, t1227, -t1074, -t1075, 0, 0, t1017, t962, t999, -t1015, t1000, t1045, t1204, t1203, t1197, t1208, t890, t857, t911, t889, t912, t927, t1199, t1195, t1198, t1206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1050, -t1277, t1278, t1093, t1091, -t1093, 0, t1033, t951, 0, t934, t895, t971, t932, t972, t994, t1266, t1263, -t845, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1094, t1026, t1092, -t1196, t1038, -t1094, -t1033, 0, t952, 0, t933, t893, t969, t931, t970, t993, t908, t907, t839, -pkin(3) * t973; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1083, t1082, t1027, -t1083, -t1023, t1085, -t951, -t952, 0, 0, t1036, t1035, t939, -t1036, -t936, t1084, t1205, t1200, t1271, t1272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t975, -t935, t1279, t1055, t1052, -t1055, 0, t973, t882, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1252, t1280, t1053, t974, t989, -t1252, -t973, 0, t883, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1036, t1035, t939, -t1036, -t936, t1084, -t882, -t883, 0, 0;];
m_new_reg = t1;
