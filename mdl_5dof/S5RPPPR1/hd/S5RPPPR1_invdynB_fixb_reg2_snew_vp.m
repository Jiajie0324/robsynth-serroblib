% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S5RPPPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d5,theta2,theta3,theta4]';
% 
% Output:
% tauB_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-05 17:29
% Revision: 77da58f92bca3eff71542919beafa37024070d86 (2019-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S5RPPPR1_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPPR1_invdynB_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPPR1_invdynB_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPPPR1_invdynB_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPPPR1_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RPPPR1_invdynB_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-05 17:29:15
% EndTime: 2019-12-05 17:29:27
% DurationCPUTime: 12.02s
% Computational Cost: add. (31526->553), mult. (75833->857), div. (0->0), fcn. (48937->10), ass. (0->397)
t560 = sin(qJ(1));
t562 = cos(qJ(1));
t530 = t560 * g(2) - t562 * g(3);
t563 = qJD(1) ^ 2;
t515 = -t563 * pkin(1) + t530;
t555 = sin(pkin(7));
t558 = cos(pkin(7));
t531 = t562 * g(2) + t560 * g(3);
t568 = qJDD(1) * pkin(1) + t531;
t457 = t555 * t515 - t558 * t568;
t458 = t558 * t515 + t555 * t568;
t584 = t555 * t457 + t558 * t458;
t402 = t558 * t457 - t555 * t458;
t611 = t562 * t402;
t347 = -t560 * t584 + t611;
t614 = t560 * t402;
t348 = t562 * t584 + t614;
t602 = t555 * qJDD(1);
t518 = t558 * t563 + t602;
t610 = g(1) - qJDD(2);
t493 = -qJ(2) * t518 + t558 * t610;
t600 = t558 * qJDD(1);
t519 = -t555 * t563 + t600;
t574 = t560 * t518 - t562 * t519;
t640 = -qJ(2) * t519 - t555 * t610;
t655 = -pkin(5) * t574 + t560 * t493 - t562 * t640;
t468 = t562 * t518 + t560 * t519;
t654 = pkin(5) * t468 - t562 * t493 - t560 * t640;
t552 = qJDD(1) * pkin(2);
t441 = -t563 * qJ(3) + qJDD(3) + t457 - t552;
t554 = sin(pkin(8));
t557 = cos(pkin(8));
t637 = pkin(3) * t557;
t578 = -qJ(4) * t554 - t637;
t609 = qJD(1) * t554;
t653 = -0.2e1 * qJD(4) * t609 + t578 * qJDD(1) + t441;
t553 = sin(pkin(9));
t556 = cos(pkin(9));
t559 = sin(qJ(5));
t561 = cos(qJ(5));
t573 = t553 * t561 + t556 * t559;
t570 = t573 * t554;
t488 = qJD(1) * t570;
t604 = qJDD(1) * t554;
t588 = t553 * t604;
t625 = t554 * t556;
t593 = t561 * t625;
t438 = -t488 * qJD(5) + qJDD(1) * t593 - t559 * t588;
t608 = t557 * qJD(1);
t536 = -qJD(5) + t608;
t634 = t488 * t536;
t652 = t438 + t634;
t442 = -t563 * pkin(2) + qJDD(1) * qJ(3) + t458;
t639 = 2 * qJD(3);
t651 = qJD(1) * t639 + t442;
t548 = t554 ^ 2;
t550 = t557 ^ 2;
t618 = t557 * t563;
t513 = (t548 + t550) * t618;
t586 = t557 * t600;
t473 = -t555 * t513 + t586;
t601 = t557 * qJDD(1);
t587 = t555 * t601;
t475 = t558 * t513 + t587;
t648 = t562 * t473 - t560 * t475;
t647 = t560 * t473 + t562 * t475;
t535 = -qJDD(5) + t601;
t490 = -t559 * t553 * t609 + qJD(1) * t593;
t633 = t490 * t488;
t569 = -t535 - t633;
t645 = t559 * t569;
t643 = t561 * t569;
t641 = (qJD(5) + t536) * t490;
t486 = t488 ^ 2;
t487 = t490 ^ 2;
t534 = t536 ^ 2;
t638 = pkin(3) * t554;
t632 = t536 * t559;
t631 = t536 * t561;
t630 = t548 * t563;
t427 = -t554 * t610 + t651 * t557;
t514 = t578 * qJD(1);
t396 = t514 * t608 + t427;
t571 = t653 * t556;
t572 = -pkin(4) * t557 - pkin(6) * t625;
t624 = t554 * t557;
t332 = t572 * qJDD(1) + (-t396 + (-pkin(4) * t548 * t556 + pkin(6) * t624) * t563) * t553 + t571;
t350 = t556 * t396 + t653 * t553;
t507 = t572 * qJD(1);
t546 = t553 ^ 2;
t533 = t546 * t630;
t333 = -pkin(4) * t533 - pkin(6) * t588 + t507 * t608 + t350;
t286 = -t561 * t332 + t559 * t333;
t287 = t559 * t332 + t561 * t333;
t248 = -t561 * t286 + t559 * t287;
t629 = t553 * t248;
t541 = t557 * t610;
t599 = qJDD(4) + t541;
t607 = t639 + t514;
t395 = (t607 * qJD(1) + t442) * t554 + t599;
t628 = t553 * t395;
t596 = t553 * t556 * t563;
t520 = t548 * t596;
t499 = -t520 + t601;
t627 = t553 * t499;
t500 = -t520 - t601;
t626 = t553 * t500;
t623 = t555 * t441;
t622 = t556 * t248;
t621 = t556 * t395;
t620 = t556 * t499;
t619 = t556 * t500;
t617 = t558 * t441;
t605 = qJDD(1) * t553;
t366 = -pkin(6) * t533 + (pkin(4) * t605 + t442 + (t507 * t556 + t607) * qJD(1)) * t554 + t599;
t616 = t559 * t366;
t430 = t535 - t633;
t615 = t559 * t430;
t613 = t561 * t366;
t612 = t561 * t430;
t603 = qJDD(1) * t556;
t549 = t556 ^ 2;
t597 = t549 * t630;
t595 = t553 * t618;
t594 = t554 * t633;
t592 = t554 * t618;
t591 = t556 * t618;
t590 = t557 * t633;
t589 = t553 * t603;
t585 = -t441 + t552;
t249 = t559 * t286 + t561 * t287;
t426 = t651 * t554 + t541;
t365 = t554 * t426 + t557 * t427;
t547 = t554 * t548;
t582 = t547 * t596;
t581 = t553 * t591;
t580 = t554 * t586;
t526 = t560 * qJDD(1) + t562 * t563;
t579 = pkin(5) * t526 - t562 * g(1);
t577 = t548 * t581;
t349 = t553 * t396 - t571;
t301 = -t556 * t349 + t553 * t350;
t302 = t553 * t349 + t556 * t350;
t364 = t557 * t426 - t554 * t427;
t482 = t518 * t624;
t483 = -t555 * t592 + t580;
t576 = t562 * t482 + t560 * t483;
t575 = t560 * t482 - t562 * t483;
t478 = t562 * t530 - t560 * t531;
t477 = -t560 * t530 - t562 * t531;
t567 = qJDD(1) * t570;
t566 = t573 * t604;
t545 = t550 * t563;
t543 = t550 * qJDD(1);
t542 = t548 * qJDD(1);
t527 = -t562 * qJDD(1) + t560 * t563;
t523 = t545 - t630;
t522 = t545 + t630;
t517 = t543 - t542;
t516 = t543 + t542;
t512 = -t545 - t597;
t511 = t545 - t597;
t510 = (t550 * t554 + t547) * t563;
t509 = -t533 - t545;
t508 = t533 - t545;
t503 = -pkin(5) * t527 + t560 * g(1);
t502 = t533 - t597;
t501 = t533 + t597;
t498 = (t595 - t603) * t554;
t497 = (t595 + t603) * t554;
t496 = (t591 - t605) * t554;
t495 = (t591 + t605) * t554;
t485 = (-t546 - t549) * t592;
t484 = (qJDD(1) * t549 + t581) * t554;
t481 = (t549 * t618 - t589) * t554;
t480 = (t546 * t618 + t589) * t554;
t479 = (qJDD(1) * t546 - t581) * t554;
t474 = t558 * t510 + t554 * t602;
t471 = t555 * t510 - t554 * t600;
t464 = t558 * t517 - t555 * t523;
t463 = t558 * t516 - t555 * t522;
t462 = t555 * t517 + t558 * t523;
t461 = t555 * t516 + t558 * t522;
t460 = -t487 + t534;
t459 = t486 - t534;
t455 = t557 * t484 + t582;
t454 = t557 * t479 - t582;
t453 = -t555 * t485 - t580;
t452 = t558 * t485 - t554 * t587;
t451 = -t487 - t534;
t450 = -t553 * t511 + t619;
t449 = -t553 * t512 + t620;
t448 = t556 * t509 - t626;
t447 = t556 * t508 + t627;
t446 = -t556 * t511 - t626;
t445 = t556 * t512 + t627;
t444 = t553 * t509 + t619;
t443 = -t553 * t508 + t620;
t439 = -t487 + t486;
t437 = -t490 * qJD(5) - t567;
t436 = -t556 * t495 - t553 * t498;
t435 = t556 * t496 - t553 * t497;
t434 = -t553 * t495 + t556 * t498;
t433 = -t553 * t496 - t556 * t497;
t428 = -t534 - t486;
t421 = -t560 * t471 + t562 * t474;
t419 = -t562 * t471 - t560 * t474;
t418 = (t488 * t561 - t490 * t559) * t536;
t417 = (t488 * t559 + t490 * t561) * t536;
t416 = t557 * t450 - t554 * t498;
t415 = t557 * t449 + t554 * t497;
t414 = t557 * t448 - t554 * t496;
t413 = t557 * t447 - t554 * t495;
t412 = t554 * t449 - t557 * t497;
t411 = t554 * t448 + t557 * t496;
t410 = -t560 * t461 + t562 * t463;
t409 = -t562 * t461 - t560 * t463;
t408 = -t486 - t487;
t407 = t558 * t455 - t555 * t481;
t406 = t558 * t454 - t555 * t480;
t405 = t555 * t455 + t558 * t481;
t404 = t555 * t454 + t558 * t480;
t401 = t557 * t436 - t554 * t501;
t400 = t557 * t435 - t554 * t502;
t397 = t554 * t436 + t557 * t501;
t394 = -t438 + t634;
t391 = -t567 - t641;
t390 = t566 + t641;
t389 = (qJD(5) - t536) * t490 + t566;
t387 = pkin(1) * t610 + qJ(2) * t584;
t386 = t561 * t438 + t490 * t632;
t385 = t559 * t438 - t490 * t631;
t384 = -t559 * t437 - t488 * t631;
t383 = t561 * t437 - t488 * t632;
t382 = t561 * t459 + t615;
t381 = -t559 * t460 + t643;
t380 = t559 * t459 - t612;
t379 = t561 * t460 + t645;
t378 = -t559 * t451 + t612;
t377 = t561 * t451 + t615;
t376 = t561 * t428 - t645;
t375 = t559 * t428 + t643;
t374 = t558 * t416 - t555 * t446;
t373 = t558 * t415 + t555 * t445;
t372 = t558 * t414 + t555 * t444;
t371 = t558 * t413 - t555 * t443;
t370 = t555 * t416 + t558 * t446;
t369 = t555 * t415 - t558 * t445;
t368 = t555 * t414 - t558 * t444;
t367 = t555 * t413 + t558 * t443;
t362 = -qJ(4) * t445 + t621;
t361 = -qJ(4) * t444 + t628;
t360 = t558 * t401 + t555 * t434;
t359 = t558 * t400 - t555 * t433;
t358 = t555 * t401 - t558 * t434;
t357 = t555 * t400 + t558 * t433;
t356 = -qJ(2) * t471 - t555 * t427 + t557 * t617;
t355 = -qJ(2) * t473 - t555 * t426 + t554 * t617;
t354 = qJ(2) * t474 + t558 * t427 + t557 * t623;
t353 = -qJ(2) * t475 + t558 * t426 + t554 * t623;
t352 = -t553 * t417 + t556 * t418;
t351 = -t556 * t417 - t553 * t418;
t346 = t557 * t352 - t554 * t535;
t345 = -qJ(2) * t461 + t558 * t364;
t344 = qJ(2) * t463 + t555 * t364;
t343 = t561 * t391 - t559 * t394;
t342 = -t561 * t389 - t559 * t652;
t341 = t559 * t391 + t561 * t394;
t340 = -t559 * t389 + t561 * t652;
t339 = t558 * t365 + t623;
t338 = t555 * t365 - t617;
t337 = -t553 * t385 + t556 * t386;
t336 = -t553 * t383 + t556 * t384;
t335 = -t556 * t385 - t553 * t386;
t334 = -t556 * t383 - t553 * t384;
t331 = -pkin(3) * t445 + t350;
t330 = -pkin(3) * t444 + t349;
t326 = -t553 * t380 + t556 * t382;
t325 = -t553 * t379 + t556 * t381;
t324 = -t556 * t380 - t553 * t382;
t323 = -t556 * t379 - t553 * t381;
t322 = -t553 * t377 + t556 * t378;
t321 = t556 * t377 + t553 * t378;
t320 = -pkin(2) * t411 - pkin(3) * t496 - qJ(4) * t448 + t621;
t319 = -pkin(2) * t412 + pkin(3) * t497 - qJ(4) * t449 - t628;
t318 = -pkin(6) * t377 + t613;
t317 = t557 * t337 + t594;
t316 = t557 * t336 - t594;
t315 = -t553 * t375 + t556 * t376;
t314 = t556 * t375 + t553 * t376;
t313 = -t560 * t369 + t562 * t373;
t312 = -t560 * t368 + t562 * t372;
t311 = -t562 * t369 - t560 * t373;
t310 = -t562 * t368 - t560 * t372;
t309 = -pkin(6) * t375 + t616;
t308 = -t560 * t358 + t562 * t360;
t307 = -t562 * t358 - t560 * t360;
t306 = t557 * t326 - t554 * t390;
t305 = t557 * t325 - t554 * t394;
t304 = t557 * t322 + t554 * t652;
t303 = t554 * t322 - t557 * t652;
t300 = -pkin(4) * t652 + pkin(6) * t378 + t616;
t299 = t558 * t346 - t555 * t351;
t298 = t555 * t346 + t558 * t351;
t297 = -pkin(4) * t389 + pkin(6) * t376 - t613;
t296 = t557 * t315 + t554 * t389;
t295 = t554 * t315 - t557 * t389;
t294 = -t553 * t341 + t556 * t343;
t293 = -t553 * t340 + t556 * t342;
t292 = t556 * t341 + t553 * t343;
t291 = -t556 * t340 - t553 * t342;
t290 = -t560 * t338 + t562 * t339;
t289 = -t562 * t338 - t560 * t339;
t288 = -qJ(4) * t434 - t301;
t284 = t557 * t302 + t554 * t395;
t283 = t554 * t302 - t557 * t395;
t282 = t557 * t293 - t554 * t439;
t281 = -qJ(3) * t412 - t554 * t331 + t557 * t362;
t280 = -qJ(3) * t411 - t554 * t330 + t557 * t361;
t279 = t557 * t294 + t554 * t408;
t278 = t554 * t294 - t557 * t408;
t277 = t558 * t317 - t555 * t335;
t276 = t558 * t316 - t555 * t334;
t275 = t555 * t317 + t558 * t335;
t274 = t555 * t316 + t558 * t334;
t273 = -qJ(2) * t338 - (pkin(2) * t555 - qJ(3) * t558) * t364;
t272 = -pkin(2) * t397 - pkin(3) * t501 - qJ(4) * t436 - t302;
t271 = t558 * t306 - t555 * t324;
t270 = t558 * t305 - t555 * t323;
t269 = t555 * t306 + t558 * t324;
t268 = t555 * t305 + t558 * t323;
t267 = -qJ(3) * t397 + t557 * t288 + t434 * t638;
t266 = -pkin(3) * t292 - pkin(4) * t341;
t265 = t558 * t304 + t555 * t321;
t264 = t555 * t304 - t558 * t321;
t263 = qJ(2) * t339 - (-pkin(2) * t558 - qJ(3) * t555 - pkin(1)) * t364;
t262 = t558 * t296 + t555 * t314;
t261 = t555 * t296 - t558 * t314;
t260 = -pkin(3) * t321 - pkin(4) * t377 + t287;
t259 = t558 * t284 + t555 * t301;
t258 = t555 * t284 - t558 * t301;
t257 = -qJ(2) * t369 + t558 * t281 - t555 * t319;
t256 = -qJ(2) * t368 + t558 * t280 - t555 * t320;
t255 = t558 * t282 - t555 * t291;
t254 = t555 * t282 + t558 * t291;
t253 = -pkin(3) * t314 - pkin(4) * t375 + t286;
t252 = -qJ(4) * t321 - t553 * t300 + t556 * t318;
t251 = t558 * t279 + t555 * t292;
t250 = t555 * t279 - t558 * t292;
t247 = -pkin(2) * t283 + pkin(3) * t395 - qJ(4) * t302;
t246 = -pkin(1) * t412 + qJ(2) * t373 + t555 * t281 + t558 * t319;
t245 = -pkin(1) * t411 + qJ(2) * t372 + t555 * t280 + t558 * t320;
t244 = -qJ(4) * t314 - t553 * t297 + t556 * t309;
t243 = -pkin(4) * t366 + pkin(6) * t249;
t242 = -pkin(6) * t341 - t248;
t241 = -pkin(4) * t408 + pkin(6) * t343 + t249;
t240 = -qJ(3) * t283 + (-qJ(4) * t557 + t638) * t301;
t239 = -t560 * t264 + t562 * t265;
t238 = -t562 * t264 - t560 * t265;
t237 = -qJ(2) * t358 + t558 * t267 - t555 * t272;
t236 = -pkin(2) * t303 + pkin(3) * t652 - qJ(4) * t322 - t556 * t300 - t553 * t318;
t235 = -t560 * t261 + t562 * t262;
t234 = -t562 * t261 - t560 * t262;
t233 = -pkin(1) * t397 + qJ(2) * t360 + t555 * t267 + t558 * t272;
t232 = -pkin(2) * t295 + pkin(3) * t389 - qJ(4) * t315 - t556 * t297 - t553 * t309;
t231 = -t560 * t258 + t562 * t259;
t230 = -t562 * t258 - t560 * t259;
t229 = -t560 * t250 + t562 * t251;
t228 = -t562 * t250 - t560 * t251;
t227 = t556 * t249 - t629;
t226 = t553 * t249 + t622;
t225 = t557 * t227 + t554 * t366;
t224 = t554 * t227 - t557 * t366;
t223 = -qJ(3) * t303 + t557 * t252 - t554 * t260;
t222 = -qJ(3) * t295 + t557 * t244 - t554 * t253;
t221 = -qJ(4) * t292 - t553 * t241 + t556 * t242;
t220 = -pkin(3) * t226 - pkin(4) * t248;
t219 = -qJ(2) * t258 + t558 * t240 - t555 * t247;
t218 = -pkin(2) * t278 + pkin(3) * t408 - qJ(4) * t294 - t556 * t241 - t553 * t242;
t217 = -pkin(1) * t283 + qJ(2) * t259 + t555 * t240 + t558 * t247;
t216 = -qJ(3) * t278 + t557 * t221 - t554 * t266;
t215 = -pkin(6) * t622 - qJ(4) * t226 - t553 * t243;
t214 = t558 * t225 + t555 * t226;
t213 = t555 * t225 - t558 * t226;
t212 = -qJ(2) * t264 + t558 * t223 - t555 * t236;
t211 = -qJ(2) * t261 + t558 * t222 - t555 * t232;
t210 = -pkin(1) * t303 + qJ(2) * t265 + t555 * t223 + t558 * t236;
t209 = -pkin(1) * t295 + qJ(2) * t262 + t555 * t222 + t558 * t232;
t208 = -pkin(2) * t224 + pkin(3) * t366 + pkin(6) * t629 - qJ(4) * t227 - t556 * t243;
t207 = -t560 * t213 + t562 * t214;
t206 = -t562 * t213 - t560 * t214;
t205 = -qJ(2) * t250 + t558 * t216 - t555 * t218;
t204 = -pkin(1) * t278 + qJ(2) * t251 + t555 * t216 + t558 * t218;
t203 = -qJ(3) * t224 + t557 * t215 - t554 * t220;
t202 = -qJ(2) * t213 + t558 * t203 - t555 * t208;
t201 = -pkin(1) * t224 + qJ(2) * t214 + t555 * t203 + t558 * t208;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t610, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t364, 0, 0, 0, 0, 0, 0, t411, t412, t397, t283, 0, 0, 0, 0, 0, 0, t295, t303, t278, t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t527, t526, 0, t477, 0, 0, 0, 0, 0, 0, t574, t468, 0, t347, 0, 0, 0, 0, 0, 0, -t648, t419, t409, t289, 0, 0, 0, 0, 0, 0, t310, t311, t307, t230, 0, 0, 0, 0, 0, 0, t234, t238, t228, t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, -t526, t527, 0, t478, 0, 0, 0, 0, 0, 0, -t468, t574, 0, t348, 0, 0, 0, 0, 0, 0, -t647, t421, t410, t290, 0, 0, 0, 0, 0, 0, t312, t313, t308, t231, 0, 0, 0, 0, 0, 0, t235, t239, t229, t207; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, qJDD(1), t531, -t530, 0, 0, 0, 0, 0, 0, 0, qJDD(1), pkin(1) * t519 - t457, -pkin(1) * t518 - t458, 0, -pkin(1) * t402, t542, 0.2e1 * t554 * t601, 0, t543, 0, 0, pkin(1) * t473 - qJ(3) * t513 + t557 * t585, pkin(1) * t471 + qJ(3) * t510 - t554 * t585, pkin(1) * t461 + pkin(2) * t522 + qJ(3) * t516 + t365, pkin(1) * t338 - pkin(2) * t441 + qJ(3) * t365, t554 * t484 - t577, t554 * t435 + t557 * t502, t554 * t450 + t557 * t498, t554 * t479 + t577, t554 * t447 + t557 * t495, t543, pkin(1) * t368 - pkin(2) * t444 + qJ(3) * t414 + t557 * t330 + t554 * t361, pkin(1) * t369 - pkin(2) * t445 + qJ(3) * t415 + t557 * t331 + t554 * t362, pkin(1) * t358 + qJ(3) * t401 + t554 * t288 + (-pkin(2) - t637) * t434, pkin(1) * t258 + qJ(3) * t284 + (-pkin(2) + t578) * t301, t554 * t337 - t590, t554 * t293 + t557 * t439, t554 * t325 + t557 * t394, t554 * t336 + t590, t554 * t326 + t557 * t390, t554 * t352 + t557 * t535, pkin(1) * t261 - pkin(2) * t314 + qJ(3) * t296 + t554 * t244 + t557 * t253, pkin(1) * t264 - pkin(2) * t321 + qJ(3) * t304 + t554 * t252 + t557 * t260, pkin(1) * t250 - pkin(2) * t292 + qJ(3) * t279 + t554 * t221 + t557 * t266, pkin(1) * t213 - pkin(2) * t226 + qJ(3) * t225 + t554 * t215 + t557 * t220; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, -t526, 0, t527, 0, t579, t503, -t478, -pkin(5) * t478, 0, 0, -t468, 0, t574, 0, t654, t655, -t348, -pkin(5) * t348 - qJ(2) * t614 - t562 * t387, -t576, -t562 * t462 - t560 * t464, t419, t576, t648, 0, pkin(5) * t647 - t562 * t353 - t560 * t355, -pkin(5) * t421 - t562 * t354 - t560 * t356, -pkin(5) * t410 - t562 * t344 - t560 * t345, -pkin(5) * t290 - t562 * t263 - t560 * t273, -t562 * t405 - t560 * t407, -t562 * t357 - t560 * t359, -t562 * t370 - t560 * t374, -t562 * t404 - t560 * t406, -t562 * t367 - t560 * t371, -t562 * t452 - t560 * t453, -pkin(5) * t312 - t562 * t245 - t560 * t256, -pkin(5) * t313 - t562 * t246 - t560 * t257, -pkin(5) * t308 - t562 * t233 - t560 * t237, -pkin(5) * t231 - t562 * t217 - t560 * t219, -t562 * t275 - t560 * t277, -t562 * t254 - t560 * t255, -t562 * t268 - t560 * t270, -t562 * t274 - t560 * t276, -t562 * t269 - t560 * t271, -t562 * t298 - t560 * t299, -pkin(5) * t235 - t562 * t209 - t560 * t211, -pkin(5) * t239 - t562 * t210 - t560 * t212, -pkin(5) * t229 - t562 * t204 - t560 * t205, -pkin(5) * t207 - t562 * t201 - t560 * t202; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, -t527, 0, -t526, 0, -t503, t579, t477, pkin(5) * t477, 0, 0, -t574, 0, -t468, 0, -t655, t654, t347, pkin(5) * t347 + qJ(2) * t611 - t560 * t387, -t575, -t560 * t462 + t562 * t464, t421, t575, t647, 0, -pkin(5) * t648 - t560 * t353 + t562 * t355, pkin(5) * t419 - t560 * t354 + t562 * t356, pkin(5) * t409 - t560 * t344 + t562 * t345, pkin(5) * t289 - t560 * t263 + t562 * t273, -t560 * t405 + t562 * t407, -t560 * t357 + t562 * t359, -t560 * t370 + t562 * t374, -t560 * t404 + t562 * t406, -t560 * t367 + t562 * t371, -t560 * t452 + t562 * t453, pkin(5) * t310 - t560 * t245 + t562 * t256, pkin(5) * t311 - t560 * t246 + t562 * t257, pkin(5) * t307 - t560 * t233 + t562 * t237, pkin(5) * t230 - t560 * t217 + t562 * t219, -t560 * t275 + t562 * t277, -t560 * t254 + t562 * t255, -t560 * t268 + t562 * t270, -t560 * t274 + t562 * t276, -t560 * t269 + t562 * t271, -t560 * t298 + t562 * t299, pkin(5) * t234 - t560 * t209 + t562 * t211, pkin(5) * t238 - t560 * t210 + t562 * t212, pkin(5) * t228 - t560 * t204 + t562 * t205, pkin(5) * t206 - t560 * t201 + t562 * t202;];
tauB_reg = t1;
