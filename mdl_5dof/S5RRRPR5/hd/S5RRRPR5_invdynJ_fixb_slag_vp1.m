% Calculate vector of inverse dynamics joint torques for
% S5RRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
% m_mdh [6x1]
%   mass of all robot links (including the base)
% rSges [6x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [6x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [5x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:15
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S5RRRPR5_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1),zeros(6,1),zeros(6,3),zeros(6,6)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR5_invdynJ_fixb_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR5_invdynJ_fixb_slag_vp1: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR5_invdynJ_fixb_slag_vp1: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR5_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR5_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [6 1]), ...
  'S5RRRPR5_invdynJ_fixb_slag_vp1: m has to be [6x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [6,3]), ...
  'S5RRRPR5_invdynJ_fixb_slag_vp1: rSges has to be [6x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [6 6]), ...
  'S5RRRPR5_invdynJ_fixb_slag_vp1: Icges has to be [6x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:13:01
% EndTime: 2019-12-31 21:14:15
% DurationCPUTime: 61.55s
% Computational Cost: add. (36612->1263), mult. (38718->1612), div. (0->0), fcn. (34432->10), ass. (0->633)
t1082 = Icges(4,3) + Icges(5,3);
t582 = qJ(2) + qJ(3);
t551 = pkin(9) + t582;
t532 = sin(t551);
t533 = cos(t551);
t556 = sin(t582);
t557 = cos(t582);
t1075 = Icges(4,5) * t557 + Icges(5,5) * t533 - Icges(4,6) * t556 - Icges(5,6) * t532;
t1081 = Icges(4,5) * t556 + Icges(5,5) * t532 + Icges(4,6) * t557 + Icges(5,6) * t533;
t588 = cos(qJ(1));
t1080 = t1082 * t588;
t585 = sin(qJ(1));
t880 = t557 * t585;
t883 = t556 * t585;
t885 = t533 * t585;
t889 = t532 * t585;
t1076 = -Icges(4,5) * t880 - Icges(5,5) * t885 + Icges(4,6) * t883 + Icges(5,6) * t889 + t1080;
t1079 = t1075 * t588 + t1082 * t585;
t930 = Icges(5,4) * t532;
t423 = Icges(5,2) * t533 + t930;
t518 = Icges(5,4) * t533;
t425 = Icges(5,1) * t532 + t518;
t931 = Icges(4,4) * t556;
t453 = Icges(4,2) * t557 + t931;
t530 = Icges(4,4) * t557;
t455 = Icges(4,1) * t556 + t530;
t1078 = t423 * t532 - t425 * t533 + t453 * t556 - t455 * t557;
t917 = Icges(5,6) * t588;
t324 = Icges(5,4) * t885 - Icges(5,2) * t889 - t917;
t478 = Icges(5,4) * t889;
t924 = Icges(5,5) * t588;
t326 = Icges(5,1) * t885 - t478 - t924;
t918 = Icges(4,6) * t588;
t350 = Icges(4,4) * t880 - Icges(4,2) * t883 - t918;
t509 = Icges(4,4) * t883;
t925 = Icges(4,5) * t588;
t352 = Icges(4,1) * t880 - t509 - t925;
t1074 = t324 * t532 - t326 * t533 + t350 * t556 - t352 * t557;
t426 = Icges(5,1) * t533 - t930;
t327 = Icges(5,5) * t585 + t426 * t588;
t456 = Icges(4,1) * t557 - t931;
t353 = Icges(4,5) * t585 + t456 * t588;
t1077 = -t327 * t885 - t353 * t880;
t1073 = t1081 * t588;
t1072 = t1081 * t585;
t693 = -Icges(5,2) * t532 + t518;
t325 = Icges(5,6) * t585 + t588 * t693;
t694 = -Icges(4,2) * t556 + t530;
t351 = Icges(4,6) * t585 + t588 * t694;
t1071 = t325 * t532 + t351 * t556;
t1037 = -t1078 * t585 - t1073;
t1036 = -t1078 * t588 + t1072;
t1070 = t1074 * t585;
t1069 = t1079 * t588 + t1077;
t1068 = t1079 * qJD(1);
t879 = t557 * t588;
t884 = t533 * t588;
t1016 = -t1079 * t585 - t327 * t884 - t353 * t879;
t1067 = t1076 * t585 - t326 * t884 - t352 * t879;
t1066 = t1076 * t588;
t586 = cos(qJ(5));
t872 = t586 * t588;
t583 = sin(qJ(5));
t877 = t583 * t585;
t415 = t533 * t877 + t872;
t866 = t588 * t583;
t874 = t585 * t586;
t416 = t533 * t874 - t866;
t712 = t416 * rSges(6,1) - t415 * rSges(6,2);
t220 = -rSges(6,3) * t889 - t712;
t948 = rSges(6,2) * t583;
t953 = rSges(6,1) * t586;
t711 = -t948 + t953;
t301 = -rSges(6,3) * t533 + t532 * t711;
t579 = qJD(2) + qJD(3);
t492 = t579 * t588;
t806 = qJD(5) * t585;
t384 = -t532 * t806 + t492;
t808 = qJD(5) * t533;
t485 = qJD(1) - t808;
t1065 = -t485 * t220 + t384 * t301;
t391 = Icges(6,4) * t416;
t213 = -Icges(6,2) * t415 + Icges(6,6) * t889 + t391;
t390 = Icges(6,4) * t415;
t217 = -Icges(6,1) * t416 - Icges(6,5) * t889 + t390;
t1055 = t213 * t583 + t217 * t586;
t210 = Icges(6,5) * t416 - Icges(6,6) * t415 + Icges(6,3) * t889;
t99 = -t1055 * t532 - t210 * t533;
t1041 = t1066 - t1070;
t1040 = -t325 * t889 - t351 * t883 - t1069;
t882 = t556 * t588;
t887 = t532 * t588;
t1039 = -t324 * t887 - t350 * t882 - t1067;
t1038 = -t325 * t887 - t351 * t882 - t1016;
t1022 = -t453 + t456;
t733 = t1022 * t579;
t1021 = t455 + t694;
t734 = t1021 * t579;
t1024 = -t423 + t426;
t737 = t1024 * t579;
t1023 = t425 + t693;
t738 = t1023 * t579;
t1064 = qJD(1) * t1081 - t532 * t738 + t533 * t737 - t556 * t734 + t557 * t733;
t1026 = -t455 * t588 - t351;
t746 = (-t456 * t585 + t925) * qJD(1) + t1026 * t579;
t1025 = -t453 * t588 + t353;
t748 = (-t585 * t694 + t918) * qJD(1) + t1025 * t579;
t1029 = -t425 * t588 - t325;
t750 = (-t426 * t585 + t924) * qJD(1) + t1029 * t579;
t1028 = -t423 * t588 + t327;
t752 = (-t585 * t693 + t917) * qJD(1) + t1028 * t579;
t1063 = -t532 * t752 + t533 * t750 - t556 * t748 + t557 * t746 + t1068;
t1027 = -t455 * t585 - t350;
t745 = qJD(1) * t353 + t1027 * t579;
t878 = t579 * t585;
t747 = qJD(1) * t351 + t352 * t579 - t453 * t878;
t1030 = -t425 * t585 - t324;
t749 = qJD(1) * t327 + t1030 * t579;
t751 = qJD(1) * t325 + t326 * t579 - t423 * t878;
t1062 = t1076 * qJD(1) + t532 * t751 - t533 * t749 + t556 * t747 - t557 * t745;
t1061 = t1078 * qJD(1) + t1075 * t579;
t1060 = t1074 * qJD(1) - t1072 * t579 + t1068;
t1059 = -t1073 * t579 + (-t1075 * t585 - t327 * t533 - t353 * t557 + t1071 + t1080) * qJD(1);
t1058 = t1036 * qJD(1);
t1056 = t1037 * qJD(1);
t690 = Icges(6,5) * t586 - Icges(6,6) * t583;
t293 = -Icges(6,3) * t533 + t532 * t690;
t927 = Icges(6,4) * t586;
t692 = -Icges(6,2) * t583 + t927;
t295 = -Icges(6,6) * t533 + t532 * t692;
t928 = Icges(6,4) * t583;
t697 = Icges(6,1) * t586 - t928;
t297 = -Icges(6,5) * t533 + t532 * t697;
t120 = t293 * t889 - t295 * t415 + t297 * t416;
t555 = qJD(2) * t585;
t491 = qJD(3) * t585 + t555;
t805 = qJD(5) * t588;
t383 = t532 * t805 + t491;
t91 = t210 * t889 - t213 * t415 - t217 * t416;
t417 = -t533 * t866 + t874;
t418 = t533 * t872 + t877;
t212 = Icges(6,5) * t418 + Icges(6,6) * t417 + Icges(6,3) * t887;
t929 = Icges(6,4) * t418;
t215 = Icges(6,2) * t417 + Icges(6,6) * t887 + t929;
t392 = Icges(6,4) * t417;
t218 = Icges(6,1) * t418 + Icges(6,5) * t887 + t392;
t92 = t212 * t889 - t415 * t215 + t416 * t218;
t33 = t120 * t485 + t383 * t92 - t384 * t91;
t121 = t293 * t887 + t295 * t417 + t297 * t418;
t93 = t210 * t887 + t417 * t213 - t217 * t418;
t94 = t212 * t887 + t417 * t215 + t418 * t218;
t34 = t121 * t485 + t383 * t94 - t384 * t93;
t1054 = -t1060 * t585 + t1062 * t588;
t1053 = t1059 * t585 + t1063 * t588;
t1052 = t1060 * t588 + t1062 * t585;
t1051 = -t1059 * t588 + t1063 * t585;
t1050 = t1040 * t491 - t1041 * t492 + t1056;
t1049 = t1038 * t491 - t1039 * t492 + t1058;
t1048 = t1061 * t585 + t1064 * t588;
t1047 = -t1061 * t588 + t1064 * t585;
t1046 = -t532 * t749 - t533 * t751 - t556 * t745 - t557 * t747;
t1045 = t532 * t750 + t533 * t752 + t556 * t746 + t557 * t748;
t1035 = t324 * t533 + t326 * t532 + t350 * t557 + t352 * t556;
t1034 = t325 * t533 + t327 * t532 + t351 * t557 + t353 * t556;
t522 = t533 * pkin(4);
t1005 = t532 * pkin(8) + t522;
t379 = t1005 * t585;
t1033 = -t220 + t379;
t221 = t418 * rSges(6,1) + t417 * rSges(6,2) + rSges(6,3) * t887;
t381 = pkin(4) * t884 + pkin(8) * t887;
t1032 = t221 + t381;
t958 = t532 * pkin(4);
t432 = -pkin(8) * t533 + t958;
t1031 = t301 + t432;
t610 = qJD(1) * t1022 + t1026 * t491 - t1027 * t492;
t611 = qJD(1) * t1024 + t1029 * t491 - t1030 * t492;
t985 = qJD(1) * t1023 + t491 * t1028 - t492 * (-Icges(5,2) * t885 + t326 - t478);
t986 = qJD(1) * t1021 + t491 * t1025 - t492 * (-Icges(4,2) * t880 + t352 - t509);
t1020 = -t532 * t985 + t611 * t533 - t556 * t986 + t610 * t557;
t1019 = t1075 * qJD(1) + t1072 * t492 - t1073 * t491;
t1018 = t1071 + t1076;
t888 = t532 * t586;
t795 = rSges(6,1) * t888;
t794 = t532 * t948;
t832 = rSges(6,3) * t885 + t585 * t794;
t279 = -t585 * t795 + t832;
t519 = t532 * rSges(6,3);
t302 = t533 * t711 + t519;
t487 = pkin(8) * t885;
t378 = -pkin(4) * t889 + t487;
t540 = pkin(3) * t557;
t431 = t492 * t540;
t812 = qJD(1) * t585;
t772 = t556 * t812;
t493 = pkin(3) * t772;
t766 = t533 * t806;
t809 = qJD(5) * t532;
t1017 = qJD(1) * t378 + t1005 * t492 + t1031 * t812 - t220 * t809 + t279 * t485 - t301 * t766 + t384 * t302 + t431 + t493;
t1015 = t33 * t585 + t34 * t588;
t811 = qJD(1) * t588;
t636 = t532 * t811 + t533 * t878;
t666 = t586 * t485;
t727 = qJD(1) * t533 - qJD(5);
t790 = t532 * t878;
t195 = t585 * t666 + (-t588 * t727 + t790) * t583;
t665 = t485 * t583;
t196 = t727 * t872 + (-t579 * t888 + t665) * t585;
t713 = rSges(6,1) * t196 + rSges(6,2) * t195;
t118 = rSges(6,3) * t636 + t713;
t710 = -rSges(6,1) * t583 - rSges(6,2) * t586;
t886 = t533 * t579;
t166 = t711 * t886 + (rSges(6,3) * t579 + qJD(5) * t710) * t532;
t797 = -qJDD(2) - qJDD(3);
t798 = qJDD(5) * t532;
t807 = qJD(5) * t579;
t801 = qJD(1) * qJD(2);
t538 = t585 * t801;
t800 = qJD(1) * qJD(3);
t820 = t585 * t800 + t538;
t178 = (t533 * t807 + t798) * t585 + (qJD(1) * t809 + t797) * t588 + t820;
t225 = t636 * pkin(8) + (t533 * t811 - t790) * pkin(4);
t356 = t1005 * t579;
t362 = t588 * t797 + t820;
t363 = -qJDD(5) * t533 + t532 * t807 + qJDD(1);
t471 = -qJDD(2) * t588 + t538;
t587 = cos(qJ(2));
t870 = t587 * qJD(2) ^ 2;
t584 = sin(qJ(2));
t963 = pkin(2) * t584;
t668 = -pkin(2) * t588 * t870 + t471 * t963;
t799 = qJD(1) * qJD(4);
t962 = pkin(3) * t556;
t620 = qJDD(4) * t585 + t362 * t962 - t579 * t431 + t588 * t799 + t668;
t575 = t587 * pkin(2);
t542 = t575 + pkin(1);
t589 = -pkin(7) - pkin(6);
t546 = t588 * t589;
t825 = t585 * t542 + t546;
t467 = t540 + t542;
t578 = -qJ(4) + t589;
t835 = -t585 * t467 - t588 * t578;
t277 = t825 + t835;
t576 = t588 * pkin(6);
t504 = pkin(1) * t585 - t576;
t341 = t504 - t825;
t846 = t341 - t504;
t781 = t277 + t846;
t724 = -t379 + t781;
t947 = pkin(2) * qJD(2);
t792 = t584 * t947;
t434 = -t579 * t962 - t792;
t553 = qJD(4) * t588;
t823 = t578 * t812 + t553;
t717 = t434 * t585 - t823;
t516 = t585 * t792;
t822 = t589 * t812 + t516;
t830 = t467 - t542;
t147 = t811 * t830 + t717 + t822;
t574 = t585 * pkin(6);
t955 = pkin(1) - t542;
t274 = (-t588 * t955 - t574) * qJD(1) - t822;
t505 = t588 * pkin(1) + t574;
t468 = t505 * qJD(1);
t862 = -t274 - t468;
t786 = -t147 + t862;
t20 = -t485 * t118 - t384 * t166 + t178 * t301 + t363 * t220 - t492 * t356 + t362 * t432 + t724 * qJDD(1) + (-t225 + t786) * qJD(1) + t620;
t429 = t491 * t962;
t776 = -t429 - t516 - t553;
t437 = t588 * t467;
t511 = t588 * t542;
t819 = -t578 + t589;
t278 = t585 * t819 + t437 - t511;
t730 = -t585 * t589 + t511;
t342 = t730 - t505;
t845 = t342 + t505;
t780 = t278 + t845;
t71 = t221 * t485 - t301 * t383 - t432 * t491 + (t381 + t780) * qJD(1) + t776;
t910 = qJD(1) * t71;
t1014 = (t20 + t910) * t588;
t531 = t557 * rSges(4,1);
t1004 = -rSges(4,2) * t556 + t531;
t357 = rSges(4,1) * t880 - rSges(4,2) * t883 - t588 * rSges(4,3);
t569 = t585 * rSges(4,3);
t358 = rSges(4,1) * t879 - rSges(4,2) * t882 + t569;
t810 = qJD(2) * t588;
t853 = -t341 * t555 + t342 * t810;
t129 = t357 * t491 + t358 * t492 + t853;
t950 = rSges(4,2) * t557;
t457 = rSges(4,1) * t556 + t950;
t768 = t584 * t810;
t728 = pkin(2) * t768;
t641 = -t457 * t492 - t728;
t777 = -t357 + t846;
t135 = qJD(1) * t777 + t641;
t136 = -t457 * t491 - t516 + (t358 + t845) * qJD(1);
t419 = t457 * t585;
t420 = t457 * t588;
t1013 = -t135 * (qJD(1) * t419 - t1004 * t492) - t129 * (-t491 * t419 - t420 * t492) - t136 * (-qJD(1) * t420 - t1004 * t491);
t969 = t491 / 0.2e1;
t968 = -t492 / 0.2e1;
t568 = t585 * rSges(5,3);
t332 = rSges(5,1) * t884 - rSges(5,2) * t887 + t568;
t427 = rSges(5,1) * t532 + rSges(5,2) * t533;
t106 = -t427 * t491 + (t332 + t780) * qJD(1) + t776;
t520 = t533 * rSges(5,1);
t1006 = -rSges(5,2) * t532 + t520;
t376 = t427 * t585;
t190 = -t579 * t376 + (t1006 * t588 + t568) * qJD(1);
t354 = t1006 * t579;
t331 = rSges(5,1) * t885 - rSges(5,2) * t889 - t588 * rSges(5,3);
t725 = -t331 + t781;
t45 = -t354 * t492 + t362 * t427 + t725 * qJDD(1) + (-t190 + t786) * qJD(1) + t620;
t1011 = qJD(1) * t106 + t45;
t1009 = -t166 - t356;
t473 = qJD(1) * t504;
t1008 = qJD(1) * t341 - t473;
t474 = -t962 - t963;
t446 = t585 * t474;
t876 = t584 * t585;
t373 = pkin(2) * t876 + t446;
t771 = t584 * t812;
t517 = pkin(2) * t771;
t1007 = -qJD(1) * t373 + t517;
t567 = Icges(3,4) * t587;
t695 = -Icges(3,2) * t584 + t567;
t498 = Icges(3,1) * t584 + t567;
t773 = t532 * t812;
t789 = t532 * t492;
t999 = t585 * t727 + t789;
t193 = t583 * t999 + t588 * t666;
t194 = -t586 * t999 + t588 * t665;
t788 = t533 * t492;
t785 = t194 * rSges(6,1) + t193 * rSges(6,2) + rSges(6,3) * t788;
t117 = -rSges(6,3) * t773 + t785;
t470 = qJDD(2) * t585 + t588 * t801;
t361 = qJDD(3) * t585 + t588 * t800 + t470;
t635 = -t773 + t788;
t177 = qJD(5) * t635 + t588 * t798 + t361;
t450 = pkin(8) * t788;
t637 = -t533 * t812 - t789;
t224 = pkin(4) * t637 - pkin(8) * t773 + t450;
t552 = qJD(4) * t585;
t838 = t588 * t434 + t552;
t146 = t728 + (-t585 * t830 + t588 * t819) * qJD(1) + t838;
t547 = pkin(6) * t811;
t273 = -t728 - t547 + (t585 * t955 - t546) * qJD(1);
t834 = qJD(1) * (-pkin(1) * t812 + t547) + qJDD(1) * t505;
t614 = qJD(1) * t273 + qJDD(1) * t342 + (-t470 * t584 - t585 * t870) * pkin(2) + t834;
t881 = t557 * t579;
t596 = qJD(1) * t146 + qJDD(1) * t278 + t585 * t799 + (-t361 * t556 - t491 * t881) * pkin(3) - qJDD(4) * t588 + t614;
t21 = qJD(1) * t224 + qJDD(1) * t381 + t485 * t117 - t383 * t166 - t177 * t301 + t363 * t221 - t491 * t356 - t361 * t432 + t596;
t1002 = t20 * t585 - t21 * t588;
t1001 = g(1) * t588 + g(2) * t585;
t961 = g(1) * t585;
t1000 = -g(2) * t588 + t961;
t873 = t585 * t587;
t915 = Icges(3,3) * t588;
t399 = Icges(3,5) * t873 - Icges(3,6) * t876 - t915;
t526 = Icges(3,4) * t876;
t926 = Icges(3,5) * t588;
t403 = Icges(3,1) * t873 - t526 - t926;
t919 = Icges(3,6) * t588;
t401 = Icges(3,4) * t873 - Icges(3,2) * t876 - t919;
t899 = t401 * t584;
t675 = -t403 * t587 + t899;
t149 = -t588 * t399 - t585 * t675;
t495 = Icges(3,5) * t587 - Icges(3,6) * t584;
t494 = Icges(3,5) * t584 + Icges(3,6) * t587;
t642 = qJD(2) * t494;
t932 = Icges(3,4) * t584;
t499 = Icges(3,1) * t587 - t932;
t404 = Icges(3,5) * t585 + t499 * t588;
t402 = Icges(3,6) * t585 + t588 * t695;
t898 = t402 * t584;
t674 = -t404 * t587 + t898;
t994 = -t588 * t642 + (-t495 * t585 + t674 + t915) * qJD(1);
t400 = Icges(3,3) * t585 + t495 * t588;
t814 = qJD(1) * t400;
t993 = qJD(1) * t675 - t585 * t642 + t814;
t496 = Icges(3,2) * t587 + t932;
t669 = t496 * t584 - t498 * t587;
t990 = t669 * qJD(1) + t495 * qJD(2);
t989 = t585 * (-t496 * t588 + t404) - t588 * (-Icges(3,2) * t873 + t403 - t526);
t648 = t690 * t533;
t680 = -t295 * t583 + t297 * t586;
t684 = -t215 * t583 + t218 * t586;
t988 = t383 * (-t293 * t588 - t684) - t384 * (-t293 * t585 + t1055) + t485 * (Icges(6,3) * t532 + t648 - t680);
t691 = -Icges(6,2) * t586 - t928;
t987 = t383 * (-Icges(6,2) * t418 + t218 + t392) - t384 * (-Icges(6,2) * t416 - t217 - t390) + t485 * (t691 * t532 + t297);
t984 = t177 / 0.2e1;
t983 = t178 / 0.2e1;
t982 = t585 * t968 + t588 * t969;
t981 = t361 / 0.2e1;
t980 = t362 / 0.2e1;
t979 = t363 / 0.2e1;
t978 = -t383 / 0.2e1;
t977 = t383 / 0.2e1;
t976 = -t384 / 0.2e1;
t975 = t384 / 0.2e1;
t974 = t470 / 0.2e1;
t973 = t471 / 0.2e1;
t972 = -t485 / 0.2e1;
t971 = t485 / 0.2e1;
t970 = -t491 / 0.2e1;
t967 = t492 / 0.2e1;
t966 = t585 / 0.2e1;
t965 = -t588 / 0.2e1;
t964 = -rSges(6,3) - pkin(8);
t957 = -qJD(1) / 0.2e1;
t956 = qJD(1) / 0.2e1;
t954 = rSges(3,1) * t587;
t952 = rSges(3,2) * t587;
t111 = Icges(6,5) * t196 + Icges(6,6) * t195 + Icges(6,3) * t636;
t113 = Icges(6,4) * t196 + Icges(6,2) * t195 + Icges(6,6) * t636;
t115 = Icges(6,1) * t196 + Icges(6,4) * t195 + Icges(6,5) * t636;
t26 = (-t1055 * t579 - t111) * t533 + (-t113 * t583 + t115 * t586 + t210 * t579 + (-t213 * t586 + t217 * t583) * qJD(5)) * t532;
t944 = t26 * t384;
t110 = Icges(6,5) * t194 + Icges(6,6) * t193 + Icges(6,3) * t635;
t112 = Icges(6,4) * t194 + Icges(6,2) * t193 + Icges(6,6) * t635;
t114 = Icges(6,1) * t194 + Icges(6,4) * t193 + Icges(6,5) * t635;
t27 = (t579 * t684 - t110) * t533 + (-t112 * t583 + t114 * t586 + t212 * t579 + (-t215 * t586 - t218 * t583) * qJD(5)) * t532;
t943 = t27 * t383;
t570 = t585 * rSges(3,3);
t938 = t99 * t178;
t937 = qJDD(1) / 0.2e1;
t130 = -t293 * t533 + t532 * t680;
t689 = -Icges(6,5) * t583 - Icges(6,6) * t586;
t163 = t579 * t648 + (Icges(6,3) * t579 + qJD(5) * t689) * t532;
t649 = t692 * t533;
t164 = t579 * t649 + (Icges(6,6) * t579 + qJD(5) * t691) * t532;
t650 = t697 * t533;
t696 = -Icges(6,1) * t583 - t927;
t165 = t579 * t650 + (Icges(6,5) * t579 + qJD(5) * t696) * t532;
t48 = (t579 * t680 - t163) * t533 + (-t164 * t583 + t165 * t586 + t293 * t579 + (-t295 * t586 - t297 * t583) * qJD(5)) * t532;
t936 = t130 * t363 + t48 * t485;
t778 = -t491 * t277 + t853;
t860 = t278 + t381;
t58 = -t220 * t383 + t221 * t384 + t379 * t491 + t492 * t860 + t778;
t911 = qJD(1) * t58;
t861 = t278 + t332;
t86 = t331 * t491 + t492 * t861 + t778;
t909 = qJD(1) * t86;
t100 = -t212 * t533 + t532 * t684;
t908 = t100 * t177;
t906 = t135 * t585;
t500 = rSges(3,1) * t584 + t952;
t769 = t500 * t810;
t821 = rSges(3,2) * t876 + t588 * rSges(3,3);
t406 = rSges(3,1) * t873 - t821;
t837 = -t406 - t504;
t234 = qJD(1) * t837 - t769;
t905 = t234 * t585;
t904 = t234 * t588;
t871 = t587 * t588;
t875 = t584 * t588;
t407 = rSges(3,1) * t871 - rSges(3,2) * t875 + t570;
t315 = t407 + t505;
t235 = qJD(1) * t315 - t500 * t555;
t445 = t500 * t588;
t903 = t235 * t445;
t893 = t491 * t557;
t892 = t494 * t585;
t891 = t494 * t588;
t890 = t532 * t579;
t863 = -t585 * t277 + t588 * t278;
t852 = -t585 * t341 + t588 * t342;
t849 = t585 * t357 + t588 * t358;
t848 = -t585 * t399 - t403 * t871;
t847 = t585 * t400 + t404 * t871;
t842 = t427 * t812 + t493;
t831 = rSges(6,3) * t884 + t588 * t794;
t829 = rSges(5,2) * t773 + rSges(5,3) * t811;
t828 = rSges(4,2) * t772 + rSges(4,3) * t811;
t827 = -t496 + t499;
t826 = t498 + t695;
t824 = rSges(3,2) * t771 + rSges(3,3) * t811;
t813 = qJD(1) * t495;
t238 = -t585 * t669 - t891;
t802 = t238 * qJD(1);
t796 = pkin(3) * t881;
t430 = t492 * t962;
t791 = t587 * t947;
t787 = t588 * t146 + t585 * t147 - t277 * t811;
t222 = -t492 * t950 + (-t492 * t556 - t557 * t812) * rSges(4,1) + t828;
t223 = -t579 * t419 + (t1004 * t588 + t569) * qJD(1);
t784 = t588 * t222 + t585 * t223 + t357 * t811;
t783 = -t221 - t860;
t782 = t588 * t273 + t585 * t274 - t341 * t811;
t775 = t487 + t832;
t489 = pkin(8) * t884;
t774 = t489 + t831;
t770 = t584 * t811;
t765 = t533 * t805;
t763 = -pkin(1) - t954;
t761 = t812 / 0.2e1;
t760 = t811 / 0.2e1;
t759 = -t555 / 0.2e1;
t758 = t555 / 0.2e1;
t757 = -t810 / 0.2e1;
t756 = t810 / 0.2e1;
t639 = -t457 - t963;
t638 = -t427 - t962;
t754 = -t432 - t962;
t753 = (-t585 ^ 2 - t588 ^ 2) * t584;
t447 = t588 * t474;
t374 = pkin(2) * t875 + t447;
t743 = t491 * t373 + t374 * t492;
t377 = t427 * t588;
t742 = -t491 * t376 - t377 * t492;
t335 = t404 * t873;
t739 = t588 * t400 - t335;
t736 = -qJD(1) * t377 - t1006 * t491;
t732 = -t399 + t898;
t731 = -t578 * t585 + t437;
t726 = t585 * t331 + t588 * t332 + t863;
t723 = -pkin(3) * t893 + qJD(1) * t374;
t722 = -t354 - t796;
t397 = t1004 * t579;
t720 = -t397 - t791;
t719 = t1006 + t540;
t716 = qJD(1) * t376 - t1006 * t492 - t431;
t503 = rSges(2,1) * t588 - rSges(2,2) * t585;
t501 = rSges(2,1) * t585 + rSges(2,2) * t588;
t502 = -rSges(3,2) * t584 + t954;
t664 = t552 - t728;
t652 = -t430 + t664;
t70 = qJD(1) * t724 - t432 * t492 - t1065 + t652;
t709 = t585 * t71 + t588 * t70;
t237 = t402 * t587 + t404 * t584;
t643 = qJD(2) * t496;
t257 = -t588 * t643 + (-t585 * t695 + t919) * qJD(1);
t644 = qJD(2) * t498;
t259 = -t588 * t644 + (-t499 * t585 + t926) * qJD(1);
t599 = -qJD(2) * t237 - t257 * t584 + t259 * t587 + t814;
t236 = t401 * t587 + t403 * t584;
t258 = qJD(1) * t402 - t585 * t643;
t260 = qJD(1) * t404 - t585 * t644;
t600 = qJD(1) * t399 - qJD(2) * t236 - t258 * t584 + t260 * t587;
t708 = t585 * (t585 * t994 + t599 * t588) - t588 * (t585 * t993 + t600 * t588);
t707 = t585 * (t599 * t585 - t588 * t994) - t588 * (t600 * t585 - t588 * t993);
t706 = t585 * t92 - t588 * t91;
t705 = t585 * t91 + t588 * t92;
t704 = t585 * t94 - t588 * t93;
t703 = t585 * t93 + t588 * t94;
t702 = t100 * t588 + t585 * t99;
t701 = t100 * t585 - t588 * t99;
t688 = -t135 * t588 - t136 * t585;
t150 = -t402 * t876 - t739;
t687 = -t149 * t588 + t150 * t585;
t151 = -t401 * t875 - t848;
t152 = -t402 * t875 + t847;
t686 = -t151 * t588 + t152 * t585;
t683 = -t220 * t588 - t221 * t585;
t682 = -t235 * t585 - t904;
t262 = -t810 * t952 + (-t587 * t812 - t768) * rSges(3,1) + t824;
t444 = t500 * t585;
t263 = -qJD(2) * t444 + (t502 * t588 + t570) * qJD(1);
t681 = t262 * t588 + t263 * t585;
t673 = t406 * t585 + t407 * t588;
t670 = t496 * t587 + t498 * t584;
t667 = -t796 + t1009;
t663 = -t427 + t474;
t661 = t273 * t810 + t274 * t555 - t470 * t341 - t342 * t471;
t660 = t532 * t964 - t522;
t189 = rSges(5,1) * t637 - rSges(5,2) * t788 + t829;
t659 = t588 * t189 + t585 * t190 + t331 * t811 + t787;
t658 = t1032 * t588 + t1033 * t585 + t863;
t651 = t474 - t1031;
t645 = -t791 - t796;
t640 = -t1005 - t519;
t634 = (-t556 * t811 - t893) * pkin(3);
t633 = t491 * t147 - t361 * t277 + t661;
t632 = -t210 * t384 + t212 * t383 + t293 * t485;
t631 = (-Icges(6,5) * t415 - Icges(6,6) * t416) * t384 - (Icges(6,5) * t417 - Icges(6,6) * t418) * t383 - t689 * t532 * t485;
t630 = -t354 + t645;
t280 = -t588 * t795 + t831;
t380 = -pkin(4) * t887 + t489;
t627 = -t220 * t765 + t383 * t279 + t280 * t384 + t491 * t378 + t380 * t492;
t626 = t401 * t588 - t402 * t585;
t625 = qJD(1) * t277 + t1008 + t664;
t624 = t302 + t540 + t1005;
t623 = t645 + t1009;
t622 = t787 + t1033 * t811 + (t117 + t224) * t588 + (t118 + t225) * t585;
t621 = t532 * t631;
t616 = (-t584 * t826 + t587 * t827) * qJD(1);
t613 = (Icges(6,1) * t417 - t215 - t929) * t383 - (-Icges(6,1) * t415 - t213 - t391) * t384 + (t696 * t532 - t295) * t485;
t609 = qJD(1) * t380 - t1005 * t491 + t221 * t809 + t485 * t280 - t301 * t765 - t302 * t383;
t607 = t1001 * (-pkin(4) - t953) * t532;
t462 = t695 * qJD(2);
t463 = t499 * qJD(2);
t598 = qJD(1) * t494 - qJD(2) * t670 - t462 * t584 + t463 * t587;
t597 = -t584 * t989 + t626 * t587;
t595 = t988 * t532;
t22 = t111 * t887 + t113 * t417 + t115 * t418 + t193 * t213 - t194 * t217 + t210 * t635;
t23 = t110 * t887 + t112 * t417 + t114 * t418 + t193 * t215 + t194 * t218 + t212 * t635;
t24 = t111 * t889 - t113 * t415 + t115 * t416 + t195 * t213 - t196 * t217 + t210 * t636;
t25 = t110 * t889 - t112 * t415 + t114 * t416 + t195 * t215 + t196 * t218 + t212 * t636;
t269 = t295 * t585;
t270 = t295 * t588;
t271 = t297 * t585;
t272 = t297 * t588;
t296 = Icges(6,6) * t532 + t649;
t298 = Icges(6,5) * t532 + t650;
t38 = t163 * t887 + t164 * t417 + t165 * t418 + t193 * t295 + t194 * t297 + t293 * t635;
t3 = t121 * t363 + t177 * t94 + t178 * t93 - t22 * t384 + t23 * t383 + t38 * t485;
t37 = t100 * t383 + t130 * t485 - t384 * t99;
t39 = t163 * t889 - t164 * t415 + t165 * t416 + t195 * t295 + t196 * t297 + t293 * t636;
t4 = t120 * t363 + t177 * t92 + t178 * t91 - t24 * t384 + t25 * t383 + t39 * t485;
t592 = (qJD(1) * t702 - t26 * t588 + t27 * t585) * t971 + ((t270 * t415 - t272 * t416) * t383 - (t269 * t415 - t271 * t416) * t384 + (-t296 * t415 + t298 * t416) * t485 + (t120 * t532 + t884 * t92) * qJD(5) + ((qJD(5) * t91 + t632) * t533 + t595) * t585) * t975 + (qJD(1) * t705 - t24 * t588 + t25 * t585) * t976 + (((t270 * t583 - t272 * t586 + t212) * t383 - (t269 * t583 - t271 * t586 + t210) * t384 + (-t296 * t583 + t298 * t586 + t293) * t485 + t130 * qJD(5)) * t532 + (qJD(5) * t702 - t988) * t533) * t972 - t37 * t809 / 0.2e1 + (qJD(1) * t703 - t22 * t588 + t23 * t585) * t977 + ((-t270 * t417 - t272 * t418) * t383 - (-t269 * t417 - t271 * t418) * t384 + (t296 * t417 + t298 * t418) * t485 + (t121 * t532 + t885 * t93) * qJD(5) + ((qJD(5) * t94 + t632) * t533 + t595) * t588) * t978 + t701 * t979 + t706 * t983 + t704 * t984 + (t1038 * t585 - t1039 * t588) * t981 + (t1040 * t585 - t1041 * t588) * t980 + (t1019 * t585 + t1020 * t588) * t970 + (t1054 * t588 + t1053 * t585 + (t1038 * t588 + t1039 * t585) * qJD(1)) * t969 + (t1052 * t588 + t1051 * t585 + (t1040 * t588 + t1041 * t585) * qJD(1)) * t968 + (-t1019 * t588 + t1020 * t585) * t967 + (t611 * t532 + t533 * t985 + t610 * t556 + t557 * t986) * t957 + (t1046 * t588 + t1045 * t585 + (t1034 * t588 + t1035 * t585) * qJD(1)) * t956 + (t1034 * t585 - t1035 * t588) * t937 - t1015 * t808 / 0.2e1 + (t1048 * qJD(1) + t1036 * qJDD(1) + t1038 * t361 + t1039 * t362 + t1053 * t491 + t1054 * t492 + t3) * t966 + (qJD(1) * t1047 + qJDD(1) * t1037 + t1040 * t361 + t1041 * t362 + t1051 * t491 + t1052 * t492 + t4) * t965 + (t33 + t1050) * t761 + (t34 + t1049) * t760;
t464 = t502 * qJD(2);
t414 = t588 * t430;
t375 = t710 * t532;
t250 = rSges(6,1) * t417 - rSges(6,2) * t418;
t249 = -rSges(6,1) * t415 - rSges(6,2) * t416;
t239 = -t588 * t669 + t892;
t233 = t239 * qJD(1);
t232 = t673 * qJD(2);
t127 = qJD(1) * t262 + qJDD(1) * t407 - t464 * t555 - t470 * t500 + t834;
t126 = -t464 * t810 + t471 * t500 + t837 * qJDD(1) + (-t263 - t468) * qJD(1);
t125 = t598 * t585 - t588 * t990;
t124 = t585 * t990 + t598 * t588;
t123 = -qJD(2) * t674 + t257 * t587 + t259 * t584;
t122 = -t675 * qJD(2) + t258 * t587 + t260 * t584;
t105 = qJD(1) * t725 - t427 * t492 + t652;
t90 = qJD(2) * t686 + t233;
t89 = qJD(2) * t687 + t802;
t81 = qJD(1) * t222 + qJDD(1) * t358 - t361 * t457 - t397 * t491 + t614;
t80 = t362 * t457 - t397 * t492 + t777 * qJDD(1) + (-t223 + t862) * qJD(1) + t668;
t56 = t222 * t492 + t223 * t491 + t357 * t361 - t358 * t362 + t661;
t46 = qJD(1) * t189 + qJDD(1) * t332 - t354 * t491 - t361 * t427 + t596;
t28 = t190 * t491 + t331 * t361 + (t146 + t189) * t492 - t861 * t362 + t633;
t13 = t117 * t384 + t118 * t383 - t177 * t220 - t178 * t221 + t225 * t491 + t361 * t379 + (t146 + t224) * t492 - t860 * t362 + t633;
t1 = [(t123 + t124) * t758 + (t238 + t236) * t973 + (-t802 + ((t588 * t732 + t152 - t847) * t588 + (t585 * t732 + t151 + t739) * t585) * qJD(2) + t89) * t759 + (-qJD(2) * t669 + t462 * t587 + t463 * t584 + t532 * t737 + t533 * t738 + t556 * t733 + t557 * t734) * qJD(1) + (t122 + t125 + t90) * t757 + (t1045 + t1048) * t969 + (-t1046 + t1047 + t1049) * t968 + t34 * t975 + (((t350 * t588 + t351 * t585) * t556 + (t324 * t588 + t325 * t585) * t532 + t1040 + t1067 + t1069) * t492 + (-t352 * t880 + (t350 * t585 - t351 * t588) * t556 - t326 * t885 + (t324 * t585 - t325 * t588) * t532 - t1016 + t1041 - t1066) * t491 + t1058) * t967 + (t239 + t237) * t974 + ((t1018 * t588 + t1016 + t1038 - t1070) * t492 + ((t1074 + t1079) * t588 + t1018 * t585 + t1039 + t1077) * t491 + t1050 - t1056) * t970 + ((t20 * t640 + (-t467 + t660) * t910) * t585 - t660 * t961 + (-t713 + t823 + (-t467 + t640) * t811 + (-t434 + (t533 * t964 + t958) * t579) * t585) * t70 + (qJD(1) * t379 - t492 * t754 - t625 + t70 + t450 + t785 + t838 + (-pkin(4) * t890 - t578 * qJD(1)) * t588 + t1065) * t71 + (t21 - g(2)) * (t731 + t1032) + (t20 - g(1)) * (-t712 + t835)) * m(6) + (t233 + ((t150 - t335 + (t400 + t899) * t588 + t848) * t588 + t847 * t585) * qJD(2)) * t756 + (t235 * (t547 + t824) + (t500 * t905 - t903) * qJD(2) + ((-pkin(1) - t502) * t904 + (t234 * (-rSges(3,3) - pkin(6)) + t235 * t763) * t585) * qJD(1) - (-qJD(1) * t406 - t234 - t473 - t769) * t235 + (t127 - g(2)) * t315 + (t126 - g(1)) * (t763 * t585 + t576 + t821)) * m(3) - t944 / 0.2e1 + t943 / 0.2e1 + (-t105 * t717 + t106 * (t829 + t838) + (t105 * t376 - t106 * t377) * t579 + ((-t105 * rSges(5,3) + t106 * (-t467 - t520)) * t585 + (t105 * (-t467 - t1006) - t106 * t578) * t588) * qJD(1) - (-qJD(1) * t331 + t492 * t638 - t105 + t625) * t106 + (t46 - g(2)) * (t332 + t731) + (t45 - g(1)) * (-t331 + t835)) * m(5) + (t135 * t822 + t136 * (-t728 + t828) + (-t136 * t420 + t457 * t906) * t579 + ((-t135 * rSges(4,3) + t136 * (-t542 - t531)) * t585 + (t135 * (-t542 - t1004) - t136 * t589) * t588) * qJD(1) - (-qJD(1) * t357 + t1008 - t135 + t641) * t136 + (t81 - g(2)) * (t358 + t730) + (t80 - g(1)) * (-t357 - t825)) * m(4) + (m(2) * (t501 ^ 2 + t503 ^ 2) + t670 + Icges(2,3) + t423 * t533 + t425 * t532 + t453 * t557 + t455 * t556) * qJDD(1) + t938 / 0.2e1 + t936 - m(2) * (-g(1) * t501 + g(2) * t503) + (t1034 + t1036) * t981 + (t1035 + t1037) * t980 + t908 / 0.2e1 + t38 * t977 + t120 * t983 + t121 * t984 + (t39 + t34) * t976; t687 * t973 + t686 * t974 + (-t122 * t588 + t123 * t585 + (t236 * t585 + t237 * t588) * qJD(1)) * t956 + (qJD(1) * t125 + qJD(2) * t707 + qJDD(1) * t238 + t149 * t471 + t150 * t470) * t965 + (qJD(1) * t124 + qJD(2) * t708 + qJDD(1) * t239 + t151 * t471 + t152 * t470) * t966 + (-t236 * t588 + t237 * t585) * t937 + ((t584 * t827 + t587 * t826) * qJD(1) + (t626 * t584 + t587 * t989) * qJD(2)) * t957 + ((-t810 * t892 - t813) * t588 + (t616 + (t588 * t891 + t597) * qJD(2)) * t585) * t756 + ((-t555 * t891 + t813) * t585 + (t616 + (t585 * t892 + t597) * qJD(2)) * t588) * t759 + t592 + ((t149 * t585 + t150 * t588) * qJD(1) + t707) * t757 + ((t151 * t585 + t152 * t588) * qJD(1) + t708) * t758 + t90 * t760 + t89 * t761 + (t13 * (t658 + t852) + t58 * (t622 + t782) + t651 * t1014 + (t21 * t651 + t71 * t623 + (-t342 + t783) * t911) * t585 - g(1) * (t447 + t774) - g(2) * (t446 + t775) - g(3) * (t575 + t624) - t607 - t71 * (t609 + t723) - t58 * (-t221 * t766 + t627 + t743) - (-t71 * t770 + (t58 * t753 - t587 * t709) * qJD(2)) * pkin(2) + (t588 * t623 - t1007 + t1017 + t517) * t70) * m(6) + (t105 * (t517 + t842) + t28 * (t726 + t852) + t86 * (t659 + t782) + (t1011 * t663 + t105 * t630) * t588 + (t46 * t663 + t106 * t630 + (-t342 - t861) * t909) * t585 - g(1) * (t447 - t377) - g(2) * (t446 - t376) - g(3) * (t575 + t719) - t105 * (t716 + t1007) - t106 * (t723 + t736) - t86 * (t742 + t743) - (-t106 * t770 + ((-t105 * t588 - t106 * t585) * t587 + t86 * t753) * qJD(2)) * pkin(2)) * m(5) + (t56 * (t849 + t852) + t129 * (t782 + t784) + (t135 * t720 + (qJD(1) * t136 + t80) * t639) * t588 + (t81 * t639 + t136 * t720 + (t135 * t457 + t129 * (-t342 - t358)) * qJD(1)) * t585 - g(3) * (t1004 + t575) - t1001 * t639 - (-t136 * t770 + (t129 * t753 + t587 * t688) * qJD(2)) * pkin(2) + t1013) * m(4) + (g(1) * t445 + g(2) * t444 - g(3) * t502 - (t234 * t444 - t903) * qJD(1) - (t232 * (-t444 * t585 - t445 * t588) + t682 * t502) * qJD(2) + (qJD(2) * t681 + t406 * t470 - t407 * t471) * t673 + t232 * ((t406 * t588 - t407 * t585) * qJD(1) + t681) + t682 * t464 + (-t126 * t588 - t127 * t585 + (-t235 * t588 + t905) * qJD(1)) * t500) * m(3); t592 + (-t71 * (t634 + t609) + t13 * t658 + (t667 * t71 + t783 * t911) * t585 - g(1) * (-pkin(3) * t882 + t774) - g(2) * (-pkin(3) * t883 + t775) - g(3) * t624 - t607 + (t21 * t585 + t1014) * (-t301 + t754) + (t588 * t667 + t1017 - t493) * t70 + (t414 - (-t221 * t808 - t429) * t585 - t627 + t622) * t58) * m(6) + (-t106 * (t634 + t736) + t28 * t726 + (t106 * t722 - t861 * t909) * t585 - g(3) * t719 + (t429 * t585 + t414 + t659 - t742) * t86 + (t588 * t722 - t493 - t716 + t842) * t105 + (t1011 * t588 + t46 * t585 - t1001) * t638) * m(5) + (g(1) * t420 + g(2) * t419 - g(3) * t1004 + t56 * t849 + t129 * (-t358 * t812 + t784) + t688 * t397 + (-t81 * t585 - t80 * t588 + (-t136 * t588 + t906) * qJD(1)) * t457 + t1013) * m(4); -m(5) * t1000 + 0.2e1 * (t45 * t966 + t46 * t965 + t86 * t982) * m(5) + (0.2e1 * t58 * t982 - t1000 + t1002) * m(6); -t34 * t773 / 0.2e1 + t3 * t887 / 0.2e1 + (-t121 * t533 + t532 * t703) * t984 + ((t579 * t703 - t38) * t533 + (-qJD(1) * t704 + t121 * t579 + t22 * t585 + t23 * t588) * t532) * t977 + t532 * t33 * t760 + t4 * t889 / 0.2e1 + (-t120 * t533 + t532 * t705) * t983 + ((t579 * t705 - t39) * t533 + (-qJD(1) * t706 + t120 * t579 + t24 * t585 + t25 * t588) * t532) * t976 + t37 * t890 / 0.2e1 - t533 * (t908 + t936 + t938 + t943 - t944) / 0.2e1 + (-t130 * t533 + t532 * t702) * t979 + ((t579 * t702 - t48) * t533 + (-qJD(1) * t701 + t130 * t579 + t26 * t585 + t27 * t588) * t532) * t971 + (t417 * t987 + t613 * t418 - t588 * t621) * t978 + (-t415 * t987 + t416 * t613 - t585 * t621) * t975 + (t631 * t533 + (-t583 * t987 + t586 * t613) * t532) * t972 + t1015 * t886 / 0.2e1 + ((-t71 * t117 + t70 * t118 - t20 * t220 - t21 * t221 + (t58 * t683 + (t585 * t70 - t588 * t71) * t301) * t579) * t533 + (t70 * (t166 * t585 + t220 * t579) + t71 * (-t166 * t588 + t221 * t579) + t13 * t683 + t58 * (-t117 * t585 + t118 * t588 + t220 * t812 - t221 * t811) + (qJD(1) * t709 + t1002) * t301) * t532 - t70 * (-t249 * t485 - t375 * t384) - t71 * (t250 * t485 - t375 * t383) - t58 * (t249 * t383 + t250 * t384) - g(1) * t250 - g(2) * t249 - g(3) * t375) * m(6);];
tau = t1;
