% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRPR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:15
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRPR5_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR5_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR5_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR5_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR5_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR5_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:15:09
% EndTime: 2019-12-31 21:15:13
% DurationCPUTime: 4.34s
% Computational Cost: add. (26229->257), mult. (59404->357), div. (0->0), fcn. (43555->10), ass. (0->205)
t1642 = cos(qJ(2));
t1628 = t1642 * qJDD(1);
t1638 = sin(qJ(2));
t1679 = qJD(1) * t1638;
t1662 = qJD(2) * t1679;
t1608 = t1628 - t1662;
t1633 = t1642 ^ 2;
t1645 = qJD(1) ^ 2;
t1639 = sin(qJ(1));
t1643 = cos(qJ(1));
t1616 = t1639 * g(1) - t1643 * g(2);
t1650 = qJDD(1) * pkin(1) + t1616;
t1651 = qJD(2) * pkin(2) - pkin(7) * t1679;
t1575 = t1608 * pkin(2) - t1651 * t1679 + t1650 + (pkin(7) * t1633 + pkin(6)) * t1645;
t1637 = sin(qJ(3));
t1641 = cos(qJ(3));
t1601 = (t1637 * t1642 + t1638 * t1641) * qJD(1);
t1678 = qJD(1) * t1642;
t1661 = qJD(2) * t1678;
t1665 = t1638 * qJDD(1);
t1607 = t1661 + t1665;
t1656 = t1607 * t1637 - t1641 * t1608;
t1572 = -qJD(3) * t1601 - t1656;
t1599 = t1637 * t1679 - t1641 * t1678;
t1598 = t1599 ^ 2;
t1631 = qJD(2) + qJD(3);
t1654 = pkin(3) * t1631 - qJ(4) * t1601;
t1531 = t1572 * pkin(3) + t1598 * qJ(4) - t1601 * t1654 - qJDD(4) + t1575;
t1634 = sin(pkin(9));
t1635 = cos(pkin(9));
t1582 = t1635 * t1599 + t1601 * t1634;
t1580 = qJD(5) + t1582;
t1688 = qJD(5) + t1580;
t1584 = -t1599 * t1634 + t1601 * t1635;
t1636 = sin(qJ(5));
t1640 = cos(qJ(5));
t1569 = t1584 * t1636 - t1640 * t1631;
t1687 = t1569 ^ 2;
t1571 = t1584 * t1640 + t1631 * t1636;
t1686 = t1571 ^ 2;
t1685 = t1580 ^ 2;
t1684 = t1582 ^ 2;
t1683 = t1584 ^ 2;
t1682 = t1601 ^ 2;
t1681 = t1631 ^ 2;
t1680 = -2 * qJD(4);
t1677 = t1569 * t1571;
t1676 = t1582 * t1584;
t1675 = t1584 * t1631;
t1674 = t1599 * t1601;
t1617 = -g(1) * t1643 - g(2) * t1639;
t1603 = -pkin(1) * t1645 + qJDD(1) * pkin(6) + t1617;
t1673 = t1603 * t1638;
t1672 = t1631 * t1582;
t1671 = t1631 * t1599;
t1670 = t1633 * t1645;
t1669 = t1638 * t1645;
t1668 = qJD(3) - t1631;
t1667 = qJD(5) - t1580;
t1564 = qJDD(2) * pkin(2) - pkin(7) * t1607 - t1673 + (pkin(7) * qJD(1) * qJD(2) + pkin(2) * t1669 - g(3)) * t1642;
t1594 = -t1638 * g(3) + t1642 * t1603;
t1567 = -pkin(2) * t1670 + t1608 * pkin(7) - qJD(2) * t1651 + t1594;
t1547 = t1637 * t1564 + t1641 * t1567;
t1632 = t1638 ^ 2;
t1666 = t1632 + t1633;
t1664 = qJDD(2) + qJDD(3);
t1524 = -t1598 * pkin(3) + t1572 * qJ(4) - t1631 * t1654 + t1547;
t1546 = t1641 * t1564 - t1637 * t1567;
t1652 = -t1607 * t1641 - t1608 * t1637;
t1573 = -qJD(3) * t1599 - t1652;
t1586 = t1664 - t1674;
t1646 = (-t1573 - t1671) * qJ(4) + t1586 * pkin(3) + t1546;
t1501 = t1635 * t1524 + t1582 * t1680 + t1634 * t1646;
t1660 = t1524 * t1634 - t1635 * t1646;
t1548 = t1572 * t1634 + t1573 * t1635;
t1659 = -t1548 + t1672;
t1658 = -t1548 * t1636 + t1640 * t1664;
t1657 = -t1635 * t1572 + t1634 * t1573;
t1653 = -qJDD(5) - t1657;
t1533 = t1657 + t1675;
t1649 = -t1640 * t1548 - t1636 * t1664;
t1644 = qJD(2) ^ 2;
t1622 = t1642 * t1669;
t1620 = -t1644 - t1670;
t1619 = -t1632 * t1645 - t1644;
t1615 = -qJDD(2) + t1622;
t1614 = qJDD(2) + t1622;
t1613 = t1666 * t1645;
t1612 = -qJDD(1) * t1639 - t1643 * t1645;
t1611 = qJDD(1) * t1643 - t1639 * t1645;
t1610 = t1666 * qJDD(1);
t1609 = t1628 - 0.2e1 * t1662;
t1606 = 0.2e1 * t1661 + t1665;
t1602 = t1645 * pkin(6) + t1650;
t1593 = -g(3) * t1642 - t1673;
t1592 = -t1681 - t1682;
t1591 = t1615 * t1642 - t1619 * t1638;
t1590 = -t1614 * t1638 + t1620 * t1642;
t1589 = t1615 * t1638 + t1619 * t1642;
t1588 = t1614 * t1642 + t1620 * t1638;
t1587 = -t1664 - t1674;
t1585 = -t1681 - t1598;
t1576 = -t1681 - t1683;
t1574 = -t1598 - t1682;
t1566 = -t1593 * t1638 + t1594 * t1642;
t1565 = t1593 * t1642 + t1594 * t1638;
t1561 = t1587 * t1641 - t1592 * t1637;
t1560 = t1587 * t1637 + t1592 * t1641;
t1559 = t1668 * t1599 + t1652;
t1558 = t1573 - t1671;
t1557 = -t1668 * t1601 - t1656;
t1556 = (qJD(3) + t1631) * t1601 + t1656;
t1555 = t1585 * t1641 - t1586 * t1637;
t1554 = t1585 * t1637 + t1586 * t1641;
t1553 = pkin(4) * t1582 - pkin(8) * t1584;
t1552 = -t1664 - t1676;
t1551 = t1664 - t1676;
t1550 = -t1681 - t1684;
t1545 = -t1683 - t1684;
t1544 = -t1685 - t1686;
t1543 = t1552 * t1635 - t1576 * t1634;
t1542 = t1552 * t1634 + t1576 * t1635;
t1541 = -t1685 - t1687;
t1540 = -t1560 * t1638 + t1561 * t1642;
t1539 = t1560 * t1642 + t1561 * t1638;
t1538 = t1557 * t1641 - t1559 * t1637;
t1537 = t1557 * t1637 + t1559 * t1641;
t1536 = -t1548 - t1672;
t1534 = -t1657 + t1675;
t1532 = -t1686 - t1687;
t1530 = -t1554 * t1638 + t1555 * t1642;
t1529 = t1554 * t1642 + t1555 * t1638;
t1528 = t1550 * t1635 - t1551 * t1634;
t1527 = t1550 * t1634 + t1551 * t1635;
t1526 = t1653 - t1677;
t1525 = -t1653 - t1677;
t1520 = -t1546 * t1637 + t1547 * t1641;
t1519 = t1546 * t1641 + t1547 * t1637;
t1518 = t1667 * t1569 + t1649;
t1517 = -t1688 * t1569 - t1649;
t1516 = -t1667 * t1571 + t1658;
t1515 = t1688 * t1571 - t1658;
t1514 = -t1542 * t1637 + t1543 * t1641;
t1513 = t1542 * t1641 + t1543 * t1637;
t1512 = -t1537 * t1638 + t1538 * t1642;
t1511 = t1537 * t1642 + t1538 * t1638;
t1510 = t1534 * t1635 - t1536 * t1634;
t1509 = t1534 * t1634 + t1536 * t1635;
t1508 = t1526 * t1640 - t1544 * t1636;
t1507 = t1526 * t1636 + t1544 * t1640;
t1506 = -t1527 * t1637 + t1528 * t1641;
t1505 = t1527 * t1641 + t1528 * t1637;
t1504 = -t1525 * t1636 + t1541 * t1640;
t1503 = t1525 * t1640 + t1541 * t1636;
t1502 = t1533 * pkin(4) + t1659 * pkin(8) - t1531;
t1500 = t1584 * t1680 - t1660;
t1499 = -t1519 * t1638 + t1520 * t1642;
t1498 = t1519 * t1642 + t1520 * t1638;
t1497 = t1516 * t1640 - t1518 * t1636;
t1496 = t1516 * t1636 + t1518 * t1640;
t1495 = -t1513 * t1638 + t1514 * t1642;
t1494 = t1513 * t1642 + t1514 * t1638;
t1493 = t1508 * t1635 + t1517 * t1634;
t1492 = t1508 * t1634 - t1517 * t1635;
t1491 = -t1509 * t1637 + t1510 * t1641;
t1490 = t1509 * t1641 + t1510 * t1637;
t1489 = -pkin(4) * t1681 + t1664 * pkin(8) - t1582 * t1553 + t1501;
t1488 = -t1664 * pkin(4) - t1681 * pkin(8) + ((2 * qJD(4)) + t1553) * t1584 + t1660;
t1487 = t1504 * t1635 + t1515 * t1634;
t1486 = t1504 * t1634 - t1515 * t1635;
t1485 = t1497 * t1635 + t1532 * t1634;
t1484 = t1497 * t1634 - t1532 * t1635;
t1483 = -t1505 * t1638 + t1506 * t1642;
t1482 = t1505 * t1642 + t1506 * t1638;
t1481 = -t1500 * t1634 + t1501 * t1635;
t1480 = t1500 * t1635 + t1501 * t1634;
t1479 = t1489 * t1640 + t1502 * t1636;
t1478 = -t1489 * t1636 + t1502 * t1640;
t1477 = -t1492 * t1637 + t1493 * t1641;
t1476 = t1492 * t1641 + t1493 * t1637;
t1475 = -t1490 * t1638 + t1491 * t1642;
t1474 = t1490 * t1642 + t1491 * t1638;
t1473 = -t1486 * t1637 + t1487 * t1641;
t1472 = t1486 * t1641 + t1487 * t1637;
t1471 = -t1484 * t1637 + t1485 * t1641;
t1470 = t1484 * t1641 + t1485 * t1637;
t1469 = -t1480 * t1637 + t1481 * t1641;
t1468 = t1480 * t1641 + t1481 * t1637;
t1467 = -t1478 * t1636 + t1479 * t1640;
t1466 = t1478 * t1640 + t1479 * t1636;
t1465 = -t1476 * t1638 + t1477 * t1642;
t1464 = t1476 * t1642 + t1477 * t1638;
t1463 = -t1472 * t1638 + t1473 * t1642;
t1462 = t1472 * t1642 + t1473 * t1638;
t1461 = -t1470 * t1638 + t1471 * t1642;
t1460 = t1470 * t1642 + t1471 * t1638;
t1459 = t1467 * t1635 + t1488 * t1634;
t1458 = t1467 * t1634 - t1488 * t1635;
t1457 = -t1468 * t1638 + t1469 * t1642;
t1456 = t1468 * t1642 + t1638 * t1469;
t1455 = -t1458 * t1637 + t1459 * t1641;
t1454 = t1458 * t1641 + t1459 * t1637;
t1453 = -t1454 * t1638 + t1455 * t1642;
t1452 = t1454 * t1642 + t1455 * t1638;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1612, -t1611, 0, -t1616 * t1639 + t1617 * t1643, 0, 0, 0, 0, 0, 0, t1590 * t1643 - t1609 * t1639, t1591 * t1643 + t1606 * t1639, t1610 * t1643 - t1613 * t1639, t1566 * t1643 - t1602 * t1639, 0, 0, 0, 0, 0, 0, t1530 * t1643 + t1556 * t1639, t1540 * t1643 + t1558 * t1639, t1512 * t1643 + t1574 * t1639, t1499 * t1643 - t1575 * t1639, 0, 0, 0, 0, 0, 0, t1483 * t1643 + t1533 * t1639, t1495 * t1643 - t1639 * t1659, t1475 * t1643 + t1545 * t1639, t1457 * t1643 - t1531 * t1639, 0, 0, 0, 0, 0, 0, t1463 * t1643 + t1503 * t1639, t1465 * t1643 + t1507 * t1639, t1461 * t1643 + t1496 * t1639, t1453 * t1643 + t1466 * t1639; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1611, t1612, 0, t1616 * t1643 + t1617 * t1639, 0, 0, 0, 0, 0, 0, t1590 * t1639 + t1609 * t1643, t1591 * t1639 - t1606 * t1643, t1610 * t1639 + t1613 * t1643, t1566 * t1639 + t1602 * t1643, 0, 0, 0, 0, 0, 0, t1530 * t1639 - t1556 * t1643, t1540 * t1639 - t1558 * t1643, t1512 * t1639 - t1574 * t1643, t1499 * t1639 + t1575 * t1643, 0, 0, 0, 0, 0, 0, t1483 * t1639 - t1533 * t1643, t1495 * t1639 + t1643 * t1659, t1475 * t1639 - t1545 * t1643, t1457 * t1639 + t1531 * t1643, 0, 0, 0, 0, 0, 0, t1463 * t1639 - t1503 * t1643, t1465 * t1639 - t1507 * t1643, t1461 * t1639 - t1496 * t1643, t1453 * t1639 - t1466 * t1643; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1588, t1589, 0, t1565, 0, 0, 0, 0, 0, 0, t1529, t1539, t1511, t1498, 0, 0, 0, 0, 0, 0, t1482, t1494, t1474, t1456, 0, 0, 0, 0, 0, 0, t1462, t1464, t1460, t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1645, -qJDD(1), 0, t1617, 0, 0, 0, 0, 0, 0, t1590, t1591, t1610, t1566, 0, 0, 0, 0, 0, 0, t1530, t1540, t1512, t1499, 0, 0, 0, 0, 0, 0, t1483, t1495, t1475, t1457, 0, 0, 0, 0, 0, 0, t1463, t1465, t1461, t1453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1645, 0, t1616, 0, 0, 0, 0, 0, 0, t1609, -t1606, t1613, t1602, 0, 0, 0, 0, 0, 0, -t1556, -t1558, -t1574, t1575, 0, 0, 0, 0, 0, 0, -t1533, t1659, -t1545, t1531, 0, 0, 0, 0, 0, 0, -t1503, -t1507, -t1496, -t1466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1588, t1589, 0, t1565, 0, 0, 0, 0, 0, 0, t1529, t1539, t1511, t1498, 0, 0, 0, 0, 0, 0, t1482, t1494, t1474, t1456, 0, 0, 0, 0, 0, 0, t1462, t1464, t1460, t1452; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1620, t1615, t1628, t1594, 0, 0, 0, 0, 0, 0, t1555, t1561, t1538, t1520, 0, 0, 0, 0, 0, 0, t1506, t1514, t1491, t1469, 0, 0, 0, 0, 0, 0, t1473, t1477, t1471, t1455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1614, t1619, -t1665, t1593, 0, 0, 0, 0, 0, 0, t1554, t1560, t1537, t1519, 0, 0, 0, 0, 0, 0, t1505, t1513, t1490, t1468, 0, 0, 0, 0, 0, 0, t1472, t1476, t1470, t1454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1609, t1606, -t1613, -t1602, 0, 0, 0, 0, 0, 0, t1556, t1558, t1574, -t1575, 0, 0, 0, 0, 0, 0, t1533, -t1659, t1545, -t1531, 0, 0, 0, 0, 0, 0, t1503, t1507, t1496, t1466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1585, t1587, t1557, t1547, 0, 0, 0, 0, 0, 0, t1528, t1543, t1510, t1481, 0, 0, 0, 0, 0, 0, t1487, t1493, t1485, t1459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1586, t1592, t1559, t1546, 0, 0, 0, 0, 0, 0, t1527, t1542, t1509, t1480, 0, 0, 0, 0, 0, 0, t1486, t1492, t1484, t1458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1556, t1558, t1574, -t1575, 0, 0, 0, 0, 0, 0, t1533, -t1659, t1545, -t1531, 0, 0, 0, 0, 0, 0, t1503, t1507, t1496, t1466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1550, t1552, t1534, t1501, 0, 0, 0, 0, 0, 0, t1504, t1508, t1497, t1467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1551, t1576, t1536, t1500, 0, 0, 0, 0, 0, 0, -t1515, -t1517, -t1532, -t1488; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1533, -t1659, t1545, -t1531, 0, 0, 0, 0, 0, 0, t1503, t1507, t1496, t1466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1541, t1526, t1516, t1479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1525, t1544, t1518, t1478; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1515, t1517, t1532, t1488;];
f_new_reg = t1;
