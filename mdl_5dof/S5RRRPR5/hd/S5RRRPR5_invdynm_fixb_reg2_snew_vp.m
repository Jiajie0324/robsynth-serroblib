% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRPR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d5,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:15
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRPR5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPR5_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPR5_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPR5_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPR5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRPR5_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:14:48
% EndTime: 2019-12-31 21:15:09
% DurationCPUTime: 21.67s
% Computational Cost: add. (168003->742), mult. (380415->1042), div. (0->0), fcn. (277959->10), ass. (0->510)
t1343 = cos(qJ(2));
t1328 = t1343 * qJDD(1);
t1339 = sin(qJ(2));
t1434 = qJD(1) * t1339;
t1388 = qJD(2) * t1434;
t1303 = t1328 - t1388;
t1334 = t1343 ^ 2;
t1346 = qJD(1) ^ 2;
t1340 = sin(qJ(1));
t1344 = cos(qJ(1));
t1312 = t1340 * g(1) - t1344 * g(2);
t1356 = qJDD(1) * pkin(1) + t1312;
t1357 = qJD(2) * pkin(2) - pkin(7) * t1434;
t1236 = t1303 * pkin(2) - t1357 * t1434 + t1356 + (pkin(7) * t1334 + pkin(6)) * t1346;
t1335 = sin(pkin(9));
t1338 = sin(qJ(3));
t1342 = cos(qJ(3));
t1433 = qJD(1) * t1343;
t1292 = -t1338 * t1434 + t1342 * t1433;
t1293 = (t1338 * t1343 + t1339 * t1342) * qJD(1);
t1336 = cos(pkin(9));
t1254 = -t1336 * t1292 + t1335 * t1293;
t1256 = t1335 * t1292 + t1336 * t1293;
t1197 = t1256 * t1254;
t1331 = qJDD(2) + qJDD(3);
t1444 = -t1197 + t1331;
t1451 = t1335 * t1444;
t1450 = t1336 * t1444;
t1337 = sin(qJ(5));
t1325 = qJD(2) * t1433;
t1398 = t1339 * qJDD(1);
t1302 = t1325 + t1398;
t1375 = t1338 * t1302 - t1342 * t1303;
t1233 = -t1293 * qJD(3) - t1375;
t1234 = t1292 * qJD(3) + t1342 * t1302 + t1338 * t1303;
t1376 = -t1336 * t1233 + t1335 * t1234;
t1176 = qJDD(5) + t1376;
t1332 = qJD(2) + qJD(3);
t1341 = cos(qJ(5));
t1228 = t1337 * t1256 - t1341 * t1332;
t1230 = t1341 * t1256 + t1337 * t1332;
t1180 = t1230 * t1228;
t1445 = t1176 - t1180;
t1449 = t1337 * t1445;
t1262 = t1292 * t1293;
t1442 = t1262 + t1331;
t1448 = t1338 * t1442;
t1447 = t1341 * t1445;
t1446 = t1342 * t1442;
t1290 = t1292 ^ 2;
t1365 = t1332 * pkin(3) - t1293 * qJ(4);
t1138 = t1233 * pkin(3) + t1290 * qJ(4) - t1293 * t1365 - qJDD(4) + t1236;
t1428 = t1332 * t1256;
t1145 = t1376 + t1428;
t1432 = qJD(4) * t1254;
t1246 = -0.2e1 * t1432;
t1409 = t1339 * t1346;
t1313 = t1344 * g(1) + t1340 * g(2);
t1295 = -t1346 * pkin(1) + qJDD(1) * pkin(6) - t1313;
t1412 = t1339 * t1295;
t1435 = qJD(1) * qJD(2);
t1220 = qJDD(2) * pkin(2) - t1302 * pkin(7) - t1412 + (pkin(2) * t1409 + pkin(7) * t1435 - g(3)) * t1343;
t1278 = -t1339 * g(3) + t1343 * t1295;
t1329 = t1334 * t1346;
t1224 = -pkin(2) * t1329 + t1303 * pkin(7) - qJD(2) * t1357 + t1278;
t1175 = t1338 * t1220 + t1342 * t1224;
t1117 = -t1290 * pkin(3) + t1233 * qJ(4) - t1332 * t1365 + t1175;
t1284 = t1332 * t1292;
t1209 = t1234 - t1284;
t1360 = t1342 * t1220 - t1338 * t1224;
t1347 = t1442 * pkin(3) - t1209 * qJ(4) + t1360;
t1400 = t1336 * t1117 + t1335 * t1347;
t1048 = t1246 + t1400;
t1193 = t1254 * pkin(4) - t1256 * pkin(8);
t1314 = t1332 ^ 2;
t1015 = -t1314 * pkin(4) + t1331 * pkin(8) - t1254 * t1193 + t1048;
t1178 = t1335 * t1233 + t1336 * t1234;
t1245 = t1332 * t1254;
t1149 = t1178 - t1245;
t1051 = t1145 * pkin(4) - pkin(8) * t1149 - t1138;
t982 = t1337 * t1015 - t1341 * t1051;
t983 = t1341 * t1015 + t1337 * t1051;
t942 = t1337 * t982 + t1341 * t983;
t1443 = t1234 + t1284;
t1205 = (qJD(3) - t1332) * t1293 + t1375;
t1226 = t1228 ^ 2;
t1227 = t1230 ^ 2;
t1250 = qJD(5) + t1254;
t1249 = t1250 ^ 2;
t1251 = t1254 ^ 2;
t1252 = t1256 ^ 2;
t1291 = t1293 ^ 2;
t1112 = t1338 * t1175 + t1342 * t1360;
t1441 = pkin(2) * t1112;
t1152 = -t1205 * t1338 - t1342 * t1209;
t1440 = pkin(2) * t1152;
t1439 = pkin(4) * t1335;
t1379 = t1335 * t1117 - t1336 * t1347;
t1431 = qJD(4) * t1256;
t1395 = 0.2e1 * t1431;
t1047 = t1379 + t1395;
t988 = -t1336 * t1047 + t1335 * t1048;
t1438 = t1338 * t988;
t1437 = t1342 * t988;
t1014 = -t1331 * pkin(4) - t1314 * pkin(8) + (0.2e1 * qJD(4) + t1193) * t1256 + t1379;
t1436 = -pkin(4) * t1014 + pkin(8) * t942;
t1430 = t1250 * t1337;
t1429 = t1250 * t1341;
t1427 = t1332 * t1293;
t1426 = t1332 * t1335;
t1425 = t1332 * t1336;
t1424 = t1332 * t1338;
t1423 = t1332 * t1342;
t1333 = t1339 ^ 2;
t1422 = t1333 * t1346;
t1421 = t1335 * t1138;
t1191 = t1197 + t1331;
t1420 = t1335 * t1191;
t1419 = t1336 * t1138;
t1418 = t1336 * t1191;
t1011 = t1337 * t1014;
t1119 = t1176 + t1180;
t1417 = t1337 * t1119;
t1416 = t1338 * t1236;
t1259 = -t1262 + t1331;
t1415 = t1338 * t1259;
t1414 = t1339 * t1112;
t1294 = t1346 * pkin(6) + t1356;
t1413 = t1339 * t1294;
t1320 = t1343 * t1409;
t1310 = qJDD(2) + t1320;
t1411 = t1339 * t1310;
t1311 = qJDD(2) - t1320;
t1410 = t1339 * t1311;
t1408 = t1340 * t1331;
t1012 = t1341 * t1014;
t1407 = t1341 * t1119;
t1406 = t1342 * t1236;
t1405 = t1342 * t1259;
t1404 = t1343 * t1112;
t1403 = t1343 * t1294;
t1402 = t1343 * t1311;
t1399 = t1333 + t1334;
t1397 = t1340 * qJDD(1);
t1396 = t1344 * qJDD(1);
t925 = -t1336 * t1014 + t1335 * t942;
t1394 = pkin(3) * t925 + t1436;
t1393 = -pkin(4) * t1336 - pkin(3);
t989 = t1335 * t1047 + t1336 * t1048;
t944 = t1338 * t989 + t1437;
t987 = pkin(3) * t988;
t1391 = pkin(2) * t944 + t987;
t1390 = t1335 * t1180;
t1389 = t1336 * t1180;
t1387 = t1340 * t1197;
t1386 = t1340 * t1262;
t1385 = t1344 * t1197;
t1384 = t1344 * t1262;
t1170 = -t1227 - t1249;
t1070 = -t1337 * t1170 - t1407;
t1361 = -t1341 * t1178 - t1337 * t1331;
t1111 = (qJD(5) + t1250) * t1228 + t1361;
t1383 = pkin(4) * t1111 + pkin(8) * t1070 + t1011;
t1157 = -t1249 - t1226;
t1065 = t1341 * t1157 - t1449;
t1188 = t1250 * t1230;
t1377 = -t1337 * t1178 + t1341 * t1331;
t1355 = t1230 * qJD(5) - t1377;
t1107 = -t1188 - t1355;
t1382 = pkin(4) * t1107 + pkin(8) * t1065 - t1012;
t1237 = -t1252 - t1314;
t1159 = t1336 * t1237 - t1420;
t1381 = pkin(3) * t1159 - t1400;
t1146 = t1376 - t1428;
t1150 = t1178 + t1245;
t1083 = -t1146 * t1335 - t1336 * t1150;
t1085 = -t1146 * t1336 + t1335 * t1150;
t1017 = t1342 * t1083 + t1338 * t1085;
t1081 = pkin(3) * t1083;
t1380 = pkin(2) * t1017 + t1081;
t1113 = t1342 * t1175 - t1338 * t1360;
t1277 = t1343 * g(3) + t1412;
t1223 = t1339 * t1277 + t1343 * t1278;
t1374 = -t1340 * t1312 - t1344 * t1313;
t1108 = (-qJD(5) + t1250) * t1230 + t1377;
t1131 = -t1228 * qJD(5) - t1361;
t1187 = t1250 * t1228;
t1110 = t1131 + t1187;
t1041 = t1341 * t1108 + t1337 * t1110;
t1144 = t1226 + t1227;
t1373 = pkin(4) * t1144 + pkin(8) * t1041 + t942;
t1372 = t1340 * t1320;
t1371 = t1344 * t1320;
t1021 = t1335 * t1070 + t1336 * t1111;
t1370 = pkin(3) * t1021 + t1383;
t1009 = t1335 * t1065 + t1336 * t1107;
t1369 = pkin(3) * t1009 + t1382;
t1276 = -t1291 - t1314;
t1210 = t1342 * t1276 - t1415;
t1368 = pkin(2) * t1210 - t1175;
t1307 = -t1340 * t1346 + t1396;
t1366 = -pkin(5) * t1307 - t1340 * g(3);
t1189 = -t1314 - t1251;
t1128 = t1335 * t1189 + t1450;
t1364 = pkin(3) * t1128 - t1379;
t1000 = t1335 * t1041 + t1336 * t1144;
t1363 = pkin(3) * t1000 + t1373;
t941 = t1337 * t983 - t1341 * t982;
t926 = t1335 * t1014 + t1336 * t942;
t905 = t1338 * t926 + t1342 * t925;
t1362 = pkin(2) * t905 + t1394;
t1222 = t1343 * t1277 - t1339 * t1278;
t1359 = t1344 * t1312 - t1340 * t1313;
t1160 = -t1335 * t1237 - t1418;
t1094 = t1342 * t1159 + t1338 * t1160;
t1358 = pkin(2) * t1094 + t1381;
t1010 = t1336 * t1065 - t1335 * t1107;
t961 = t1342 * t1009 + t1338 * t1010;
t1354 = pkin(2) * t961 + t1369;
t1022 = t1336 * t1070 - t1335 * t1111;
t967 = t1342 * t1021 + t1338 * t1022;
t1353 = pkin(2) * t967 + t1370;
t1129 = t1336 * t1189 - t1451;
t1066 = t1342 * t1128 + t1338 * t1129;
t1352 = pkin(2) * t1066 + t1364;
t1001 = t1336 * t1041 - t1335 * t1144;
t955 = t1342 * t1000 + t1338 * t1001;
t1351 = pkin(2) * t955 + t1363;
t1257 = -t1314 - t1290;
t1195 = t1338 * t1257 + t1446;
t1350 = pkin(2) * t1195 + t1360;
t1345 = qJD(2) ^ 2;
t1322 = t1344 * t1331;
t1318 = -t1329 - t1345;
t1317 = t1329 - t1345;
t1316 = -t1345 - t1422;
t1315 = t1345 - t1422;
t1309 = -t1329 + t1422;
t1308 = t1329 + t1422;
t1306 = t1344 * t1346 + t1397;
t1305 = t1399 * qJDD(1);
t1304 = t1328 - 0.2e1 * t1388;
t1301 = 0.2e1 * t1325 + t1398;
t1299 = t1343 * t1310;
t1298 = t1399 * t1435;
t1289 = -pkin(5) * t1306 + t1344 * g(3);
t1282 = -t1291 + t1314;
t1281 = t1290 - t1314;
t1280 = t1343 * t1302 - t1333 * t1435;
t1279 = -t1339 * t1303 - t1334 * t1435;
t1275 = -t1339 * t1316 - t1402;
t1274 = -t1339 * t1315 + t1299;
t1273 = t1343 * t1318 - t1411;
t1272 = t1343 * t1317 - t1410;
t1271 = t1343 * t1316 - t1410;
t1270 = t1343 * t1315 + t1411;
t1269 = t1339 * t1318 + t1299;
t1268 = t1339 * t1317 + t1402;
t1267 = (t1302 + t1325) * t1339;
t1266 = (t1303 - t1388) * t1343;
t1264 = -t1339 * t1301 + t1343 * t1304;
t1263 = t1343 * t1301 + t1339 * t1304;
t1261 = t1291 - t1290;
t1248 = -0.2e1 * t1431;
t1247 = 0.2e1 * t1432;
t1243 = -t1252 + t1314;
t1242 = t1251 - t1314;
t1241 = (t1292 * t1342 + t1293 * t1338) * t1332;
t1240 = (t1292 * t1338 - t1293 * t1342) * t1332;
t1239 = -pkin(6) * t1271 - t1403;
t1238 = -pkin(6) * t1269 - t1413;
t1235 = -t1290 - t1291;
t1232 = -pkin(1) * t1271 + t1278;
t1231 = -pkin(1) * t1269 + t1277;
t1217 = pkin(1) * t1304 + pkin(6) * t1273 + t1403;
t1216 = -pkin(1) * t1301 + pkin(6) * t1275 - t1413;
t1215 = t1342 * t1281 - t1415;
t1214 = -t1338 * t1282 + t1446;
t1213 = t1338 * t1281 + t1405;
t1212 = t1342 * t1282 + t1448;
t1211 = -t1338 * t1276 - t1405;
t1204 = (qJD(3) + t1332) * t1293 + t1375;
t1203 = pkin(1) * t1294 + pkin(6) * t1223;
t1202 = t1342 * t1234 - t1293 * t1424;
t1201 = t1338 * t1234 + t1293 * t1423;
t1200 = -t1338 * t1233 - t1292 * t1423;
t1199 = t1342 * t1233 - t1292 * t1424;
t1198 = pkin(1) * t1308 + pkin(6) * t1305 + t1223;
t1196 = t1342 * t1257 - t1448;
t1194 = t1252 - t1251;
t1186 = -t1227 + t1249;
t1185 = t1226 - t1249;
t1184 = (-t1254 * t1336 + t1256 * t1335) * t1332;
t1183 = (-t1254 * t1335 - t1256 * t1336) * t1332;
t1182 = -t1339 * t1240 + t1343 * t1241;
t1181 = t1343 * t1240 + t1339 * t1241;
t1179 = t1227 - t1226;
t1173 = -t1251 - t1252;
t1171 = -pkin(7) * t1210 - t1406;
t1169 = -pkin(7) * t1195 - t1416;
t1168 = -t1339 * t1213 + t1343 * t1215;
t1167 = -t1339 * t1212 + t1343 * t1214;
t1166 = t1336 * t1242 - t1420;
t1165 = -t1335 * t1243 + t1450;
t1164 = t1343 * t1213 + t1339 * t1215;
t1163 = t1343 * t1212 + t1339 * t1214;
t1162 = t1335 * t1242 + t1418;
t1161 = t1336 * t1243 + t1451;
t1156 = -t1339 * t1210 + t1343 * t1211;
t1155 = t1343 * t1210 + t1339 * t1211;
t1154 = -t1205 * t1342 + t1338 * t1209;
t1153 = -t1342 * t1204 - t1338 * t1443;
t1151 = -t1338 * t1204 + t1342 * t1443;
t1142 = t1336 * t1178 - t1256 * t1426;
t1141 = t1335 * t1178 + t1256 * t1425;
t1140 = t1254 * t1425 + t1335 * t1376;
t1139 = t1254 * t1426 - t1336 * t1376;
t1137 = -t1339 * t1201 + t1343 * t1202;
t1136 = -t1339 * t1199 + t1343 * t1200;
t1135 = t1343 * t1201 + t1339 * t1202;
t1134 = t1343 * t1199 + t1339 * t1200;
t1133 = -t1339 * t1195 + t1343 * t1196;
t1132 = t1343 * t1195 + t1339 * t1196;
t1126 = (-t1228 * t1341 + t1230 * t1337) * t1250;
t1125 = (-t1228 * t1337 - t1230 * t1341) * t1250;
t1124 = -pkin(2) * t1443 + pkin(7) * t1211 - t1416;
t1123 = -t1338 * t1183 + t1342 * t1184;
t1122 = t1342 * t1183 + t1338 * t1184;
t1121 = -pkin(2) * t1204 + pkin(7) * t1196 + t1406;
t1109 = t1131 - t1187;
t1106 = -t1188 + t1355;
t1103 = t1341 * t1131 - t1230 * t1430;
t1102 = t1337 * t1131 + t1230 * t1429;
t1101 = t1228 * t1429 + t1337 * t1355;
t1100 = -t1228 * t1430 + t1341 * t1355;
t1099 = -t1338 * t1162 + t1342 * t1166;
t1098 = -t1338 * t1161 + t1342 * t1165;
t1097 = t1342 * t1162 + t1338 * t1166;
t1096 = t1342 * t1161 + t1338 * t1165;
t1095 = -t1338 * t1159 + t1342 * t1160;
t1093 = pkin(2) * t1236 + pkin(7) * t1113;
t1092 = -t1339 * t1152 + t1343 * t1154;
t1091 = -t1339 * t1151 + t1343 * t1153;
t1090 = t1343 * t1152 + t1339 * t1154;
t1089 = t1343 * t1151 + t1339 * t1153;
t1088 = -qJ(4) * t1159 - t1419;
t1087 = t1336 * t1126 + t1335 * t1176;
t1086 = t1335 * t1126 - t1336 * t1176;
t1084 = -t1336 * t1145 - t1335 * t1149;
t1082 = -t1335 * t1145 + t1336 * t1149;
t1080 = t1341 * t1185 - t1417;
t1079 = -t1337 * t1186 + t1447;
t1078 = t1337 * t1185 + t1407;
t1077 = t1341 * t1186 + t1449;
t1076 = -t1338 * t1141 + t1342 * t1142;
t1075 = -t1338 * t1139 + t1342 * t1140;
t1074 = t1342 * t1141 + t1338 * t1142;
t1073 = t1342 * t1139 + t1338 * t1140;
t1072 = -pkin(1) * t1155 - t1368;
t1071 = -qJ(4) * t1128 - t1421;
t1069 = t1341 * t1170 - t1417;
t1067 = -t1338 * t1128 + t1342 * t1129;
t1064 = t1337 * t1157 + t1447;
t1062 = -pkin(1) * t1132 - t1350;
t1061 = t1336 * t1103 + t1390;
t1060 = t1336 * t1101 - t1390;
t1059 = t1335 * t1103 - t1389;
t1058 = t1335 * t1101 + t1389;
t1057 = -pkin(7) * t1152 - t1112;
t1056 = -t1339 * t1122 + t1343 * t1123;
t1055 = t1343 * t1122 + t1339 * t1123;
t1054 = -pkin(2) * t1235 + pkin(7) * t1154 + t1113;
t1053 = -pkin(1) * t1090 - t1440;
t1052 = -pkin(3) * t1149 + qJ(4) * t1160 - t1421;
t1049 = -pkin(6) * t1155 - t1339 * t1124 + t1343 * t1171;
t1046 = -pkin(3) * t1145 + qJ(4) * t1129 + t1419;
t1045 = t1343 * t1113 - t1414;
t1044 = t1339 * t1113 + t1404;
t1042 = -pkin(6) * t1132 - t1339 * t1121 + t1343 * t1169;
t1040 = t1341 * t1107 - t1337 * t1109;
t1039 = t1337 * t1108 - t1341 * t1110;
t1038 = t1337 * t1107 + t1341 * t1109;
t1036 = -pkin(1) * t1443 + pkin(6) * t1156 + t1343 * t1124 + t1339 * t1171;
t1035 = -t1339 * t1097 + t1343 * t1099;
t1034 = -t1339 * t1096 + t1343 * t1098;
t1033 = t1343 * t1097 + t1339 * t1099;
t1032 = t1343 * t1096 + t1339 * t1098;
t1031 = t1336 * t1080 - t1335 * t1106;
t1030 = t1336 * t1079 + t1335 * t1110;
t1029 = t1335 * t1080 + t1336 * t1106;
t1028 = t1335 * t1079 - t1336 * t1110;
t1027 = -t1339 * t1094 + t1343 * t1095;
t1026 = t1343 * t1094 + t1339 * t1095;
t1025 = -pkin(1) * t1204 + pkin(6) * t1133 + t1343 * t1121 + t1339 * t1169;
t1024 = -t1338 * t1086 + t1342 * t1087;
t1023 = t1342 * t1086 + t1338 * t1087;
t1019 = -t1338 * t1083 + t1342 * t1085;
t1018 = -t1338 * t1082 + t1342 * t1084;
t1016 = t1342 * t1082 + t1338 * t1084;
t1007 = t1336 * t1040 + t1335 * t1179;
t1006 = t1335 * t1040 - t1336 * t1179;
t1005 = -t1339 * t1074 + t1343 * t1076;
t1004 = -t1339 * t1073 + t1343 * t1075;
t1003 = t1343 * t1074 + t1339 * t1076;
t1002 = t1343 * t1073 + t1339 * t1075;
t998 = -t1339 * t1066 + t1343 * t1067;
t997 = t1343 * t1066 + t1339 * t1067;
t996 = -pkin(1) * t1044 - t1441;
t995 = -t1338 * t1059 + t1342 * t1061;
t994 = -t1338 * t1058 + t1342 * t1060;
t993 = t1342 * t1059 + t1338 * t1061;
t992 = t1342 * t1058 + t1338 * t1060;
t991 = -pkin(8) * t1069 + t1012;
t990 = -pkin(8) * t1064 + t1011;
t986 = -pkin(6) * t1044 - pkin(7) * t1404 - t1339 * t1093;
t985 = -pkin(7) * t1094 - t1338 * t1052 + t1342 * t1088;
t984 = pkin(1) * t1236 + pkin(6) * t1045 - pkin(7) * t1414 + t1343 * t1093;
t979 = -pkin(6) * t1090 - t1339 * t1054 + t1343 * t1057;
t978 = pkin(3) * t1138 + qJ(4) * t989;
t977 = -t1338 * t1029 + t1342 * t1031;
t976 = -t1338 * t1028 + t1342 * t1030;
t975 = t1342 * t1029 + t1338 * t1031;
t974 = t1342 * t1028 + t1338 * t1030;
t973 = -pkin(1) * t1235 + pkin(6) * t1092 + t1343 * t1054 + t1339 * t1057;
t972 = -pkin(7) * t1066 - t1338 * t1046 + t1342 * t1071;
t971 = -pkin(2) * t1149 + pkin(7) * t1095 + t1342 * t1052 + t1338 * t1088;
t970 = -t1339 * t1023 + t1343 * t1024;
t969 = t1343 * t1023 + t1339 * t1024;
t968 = -t1338 * t1021 + t1342 * t1022;
t966 = -t1339 * t1017 + t1343 * t1019;
t965 = -t1339 * t1016 + t1343 * t1018;
t964 = t1343 * t1017 + t1339 * t1019;
t963 = t1343 * t1016 + t1339 * t1018;
t962 = -t1338 * t1009 + t1342 * t1010;
t960 = -t1338 * t1006 + t1342 * t1007;
t959 = t1342 * t1006 + t1338 * t1007;
t958 = -qJ(4) * t1083 - t988;
t957 = -pkin(2) * t1145 + pkin(7) * t1067 + t1342 * t1046 + t1338 * t1071;
t956 = -t1338 * t1000 + t1342 * t1001;
t954 = -pkin(3) * t1173 + qJ(4) * t1085 + t989;
t953 = -pkin(4) * t1069 + t983;
t952 = -pkin(4) * t1064 + t982;
t951 = -pkin(1) * t1026 + t1246 - t1358;
t950 = -t1339 * t993 + t1343 * t995;
t949 = -t1339 * t992 + t1343 * t994;
t948 = t1339 * t995 + t1343 * t993;
t947 = t1339 * t994 + t1343 * t992;
t946 = -pkin(1) * t997 - t1352 + t1395;
t945 = t1342 * t989 - t1438;
t943 = -pkin(1) * t964 - t1380;
t939 = -t1339 * t975 + t1343 * t977;
t938 = -t1339 * t974 + t1343 * t976;
t937 = t1339 * t977 + t1343 * t975;
t936 = t1339 * t976 + t1343 * t974;
t935 = -t1339 * t967 + t1343 * t968;
t934 = t1339 * t968 + t1343 * t967;
t933 = -t1339 * t961 + t1343 * t962;
t932 = t1339 * t962 + t1343 * t961;
t931 = -t1339 * t959 + t1343 * t960;
t930 = t1339 * t960 + t1343 * t959;
t929 = -pkin(8) * t1039 - t941;
t928 = -t1339 * t955 + t1343 * t956;
t927 = t1339 * t956 + t1343 * t955;
t923 = -pkin(6) * t1026 - t1339 * t971 + t1343 * t985;
t922 = -pkin(1) * t1149 + pkin(6) * t1027 + t1339 * t985 + t1343 * t971;
t921 = -qJ(4) * t1021 - t1335 * t953 + t1336 * t991;
t920 = -qJ(4) * t1009 - t1335 * t952 + t1336 * t990;
t919 = -pkin(6) * t997 - t1339 * t957 + t1343 * t972;
t918 = -pkin(7) * t1017 - t1338 * t954 + t1342 * t958;
t917 = -pkin(3) * t1069 + qJ(4) * t1022 + t1335 * t991 + t1336 * t953;
t916 = -pkin(1) * t1145 + pkin(6) * t998 + t1339 * t972 + t1343 * t957;
t915 = -pkin(3) * t1064 + qJ(4) * t1010 + t1335 * t990 + t1336 * t952;
t914 = -pkin(2) * t1173 + pkin(7) * t1019 + t1338 * t958 + t1342 * t954;
t913 = -qJ(4) * t1000 + t1039 * t1439 + t1336 * t929;
t912 = -t1339 * t944 + t1343 * t945;
t911 = t1339 * t945 + t1343 * t944;
t910 = -pkin(7) * t944 - qJ(4) * t1437 - t1338 * t978;
t909 = pkin(2) * t1138 + pkin(7) * t945 - qJ(4) * t1438 + t1342 * t978;
t908 = qJ(4) * t1001 + t1039 * t1393 + t1335 * t929;
t907 = -pkin(1) * t934 - t1353;
t906 = -t1338 * t925 + t1342 * t926;
t904 = -pkin(1) * t932 - t1354;
t903 = -pkin(1) * t911 - t1391;
t902 = -qJ(4) * t925 + (-pkin(8) * t1336 + t1439) * t941;
t901 = -pkin(7) * t967 - t1338 * t917 + t1342 * t921;
t900 = -pkin(1) * t927 - t1351;
t899 = -pkin(7) * t961 - t1338 * t915 + t1342 * t920;
t898 = -pkin(2) * t1069 + pkin(7) * t968 + t1338 * t921 + t1342 * t917;
t897 = -pkin(6) * t964 - t1339 * t914 + t1343 * t918;
t896 = -pkin(2) * t1064 + pkin(7) * t962 + t1338 * t920 + t1342 * t915;
t895 = -pkin(1) * t1173 + pkin(6) * t966 + t1339 * t918 + t1343 * t914;
t894 = qJ(4) * t926 + (-pkin(8) * t1335 + t1393) * t941;
t893 = -pkin(7) * t955 - t1338 * t908 + t1342 * t913;
t892 = -pkin(2) * t1039 + pkin(7) * t956 + t1338 * t913 + t1342 * t908;
t891 = -t1339 * t905 + t1343 * t906;
t890 = t1339 * t906 + t1343 * t905;
t889 = -pkin(6) * t911 - t1339 * t909 + t1343 * t910;
t888 = pkin(1) * t1138 + pkin(6) * t912 + t1339 * t910 + t1343 * t909;
t887 = -pkin(6) * t934 - t1339 * t898 + t1343 * t901;
t886 = -pkin(6) * t932 - t1339 * t896 + t1343 * t899;
t885 = -pkin(1) * t1069 + pkin(6) * t935 + t1339 * t901 + t1343 * t898;
t884 = -pkin(1) * t1064 + pkin(6) * t933 + t1339 * t899 + t1343 * t896;
t883 = -pkin(7) * t905 - t1338 * t894 + t1342 * t902;
t882 = -pkin(1) * t890 - t1362;
t881 = -pkin(6) * t927 - t1339 * t892 + t1343 * t893;
t880 = -pkin(1) * t1039 + pkin(6) * t928 + t1339 * t893 + t1343 * t892;
t879 = -pkin(2) * t941 + pkin(7) * t906 + t1338 * t902 + t1342 * t894;
t878 = -pkin(6) * t890 - t1339 * t879 + t1343 * t883;
t877 = -pkin(1) * t941 + pkin(6) * t891 + t1339 * t883 + t1343 * t879;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1307, 0, -t1306, 0, t1366, -t1289, -t1359, -pkin(5) * t1359, t1344 * t1280 - t1372, t1344 * t1264 + t1340 * t1309, t1344 * t1274 + t1339 * t1397, t1344 * t1279 + t1372, t1344 * t1272 + t1328 * t1340, t1340 * qJDD(2) + t1344 * t1298, t1344 * t1238 - t1340 * t1231 - pkin(5) * (t1340 * t1273 + t1344 * t1304), t1344 * t1239 - t1340 * t1232 - pkin(5) * (t1340 * t1275 - t1344 * t1301), t1344 * t1222 - pkin(5) * (t1340 * t1305 + t1344 * t1308), -pkin(5) * (t1340 * t1223 + t1344 * t1294) - (t1340 * pkin(1) - t1344 * pkin(6)) * t1222, t1344 * t1137 - t1386, t1344 * t1091 + t1340 * t1261, t1344 * t1167 + t1340 * t1209, t1344 * t1136 + t1386, t1344 * t1168 - t1340 * t1205, t1344 * t1182 + t1408, t1344 * t1042 - t1340 * t1062 - pkin(5) * (t1340 * t1133 - t1344 * t1204), t1344 * t1049 - t1340 * t1072 - pkin(5) * (t1340 * t1156 - t1344 * t1443), t1344 * t979 - t1340 * t1053 - pkin(5) * (t1340 * t1092 - t1344 * t1235), t1344 * t986 - t1340 * t996 - pkin(5) * (t1340 * t1045 + t1344 * t1236), t1344 * t1005 + t1387, t1340 * t1194 + t1344 * t965, t1344 * t1034 + t1340 * t1150, t1344 * t1004 - t1387, t1344 * t1035 - t1340 * t1146, t1344 * t1056 + t1408, t1344 * t919 - t1340 * t946 - pkin(5) * (-t1344 * t1145 + t1340 * t998), t1344 * t923 - t1340 * t951 - pkin(5) * (t1340 * t1027 - t1149 * t1344), t1344 * t897 - t1340 * t943 - pkin(5) * (-t1344 * t1173 + t1340 * t966), t1344 * t889 - t1340 * t903 - pkin(5) * (t1344 * t1138 + t1340 * t912), t1340 * t1102 + t1344 * t950, t1340 * t1038 + t1344 * t931, t1340 * t1077 + t1344 * t938, -t1340 * t1100 + t1344 * t949, t1340 * t1078 + t1344 * t939, t1340 * t1125 + t1344 * t970, t1344 * t886 - t1340 * t904 - pkin(5) * (-t1344 * t1064 + t1340 * t933), t1344 * t887 - t1340 * t907 - pkin(5) * (-t1344 * t1069 + t1340 * t935), t1344 * t881 - t1340 * t900 - pkin(5) * (-t1344 * t1039 + t1340 * t928), t1344 * t878 - t1340 * t882 - pkin(5) * (t1340 * t891 - t1344 * t941); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1306, 0, t1307, 0, t1289, t1366, t1374, pkin(5) * t1374, t1340 * t1280 + t1371, t1340 * t1264 - t1344 * t1309, t1340 * t1274 - t1339 * t1396, t1340 * t1279 - t1371, t1340 * t1272 - t1343 * t1396, -t1344 * qJDD(2) + t1340 * t1298, t1340 * t1238 + t1344 * t1231 + pkin(5) * (t1344 * t1273 - t1340 * t1304), t1340 * t1239 + t1344 * t1232 + pkin(5) * (t1344 * t1275 + t1340 * t1301), t1340 * t1222 + pkin(5) * (t1344 * t1305 - t1340 * t1308), pkin(5) * (t1344 * t1223 - t1340 * t1294) - (-t1344 * pkin(1) - t1340 * pkin(6)) * t1222, t1340 * t1137 + t1384, t1340 * t1091 - t1344 * t1261, t1340 * t1167 - t1344 * t1209, t1340 * t1136 - t1384, t1340 * t1168 + t1344 * t1205, t1340 * t1182 - t1322, t1340 * t1042 + t1344 * t1062 + pkin(5) * (t1344 * t1133 + t1340 * t1204), t1340 * t1049 + t1344 * t1072 + pkin(5) * (t1344 * t1156 + t1340 * t1443), t1340 * t979 + t1344 * t1053 + pkin(5) * (t1344 * t1092 + t1340 * t1235), t1340 * t986 + t1344 * t996 + pkin(5) * (t1344 * t1045 - t1340 * t1236), t1340 * t1005 - t1385, -t1344 * t1194 + t1340 * t965, t1340 * t1034 - t1344 * t1150, t1340 * t1004 + t1385, t1340 * t1035 + t1344 * t1146, t1340 * t1056 - t1322, t1340 * t919 + t1344 * t946 + pkin(5) * (t1340 * t1145 + t1344 * t998), t1340 * t923 + t1344 * t951 + pkin(5) * (t1344 * t1027 + t1149 * t1340), t1340 * t897 + t1344 * t943 + pkin(5) * (t1340 * t1173 + t1344 * t966), t1340 * t889 + t1344 * t903 + pkin(5) * (-t1340 * t1138 + t1344 * t912), -t1344 * t1102 + t1340 * t950, -t1344 * t1038 + t1340 * t931, -t1344 * t1077 + t1340 * t938, t1344 * t1100 + t1340 * t949, -t1344 * t1078 + t1340 * t939, -t1344 * t1125 + t1340 * t970, t1340 * t886 + t1344 * t904 + pkin(5) * (t1340 * t1064 + t1344 * t933), t1340 * t887 + t1344 * t907 + pkin(5) * (t1340 * t1069 + t1344 * t935), t1340 * t881 + t1344 * t900 + pkin(5) * (t1340 * t1039 + t1344 * t928), t1340 * t878 + t1344 * t882 + pkin(5) * (t1340 * t941 + t1344 * t891); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1312, t1313, 0, 0, t1267, t1263, t1270, t1266, t1268, 0, t1217, t1216, t1198, t1203, t1135, t1089, t1163, t1134, t1164, t1181, t1025, t1036, t973, t984, t1003, t963, t1032, t1002, t1033, t1055, t916, t922, t895, t888, t948, t930, t936, t947, t937, t969, t884, t885, t880, t877; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1346, 0, 0, -g(3), -t1312, 0, t1280, t1264, t1274, t1279, t1272, t1298, t1238, t1239, t1222, pkin(6) * t1222, t1137, t1091, t1167, t1136, t1168, t1182, t1042, t1049, t979, t986, t1005, t965, t1034, t1004, t1035, t1056, t919, t923, t897, t889, t950, t931, t938, t949, t939, t970, t886, t887, t881, t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1346, 0, qJDD(1), 0, g(3), 0, -t1313, 0, t1320, -t1309, -t1398, -t1320, -t1328, -qJDD(2), t1231, t1232, 0, pkin(1) * t1222, t1262, -t1261, -t1209, -t1262, t1205, -t1331, t1062, t1072, t1053, t996, -t1197, -t1194, -t1150, t1197, t1146, -t1331, t946, t951, t943, t903, -t1102, -t1038, -t1077, t1100, -t1078, -t1125, t904, t907, t900, t882; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1312, t1313, 0, 0, t1267, t1263, t1270, t1266, t1268, 0, t1217, t1216, t1198, t1203, t1135, t1089, t1163, t1134, t1164, t1181, t1025, t1036, t973, t984, t1003, t963, t1032, t1002, t1033, t1055, t916, t922, t895, t888, t948, t930, t936, t947, t937, t969, t884, t885, t880, t877; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1302, t1304, t1310, -t1325, t1317, t1325, 0, -t1294, t1277, 0, t1202, t1153, t1214, t1200, t1215, t1241, t1169, t1171, t1057, -pkin(7) * t1112, t1076, t1018, t1098, t1075, t1099, t1123, t972, t985, t918, t910, t995, t960, t976, t994, t977, t1024, t899, t901, t893, t883; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1388, t1301, t1315, t1303, t1311, -t1388, t1294, 0, t1278, 0, t1201, t1151, t1212, t1199, t1213, t1240, t1121, t1124, t1054, t1093, t1074, t1016, t1096, t1073, t1097, t1122, t957, t971, t914, t909, t993, t959, t974, t992, t975, t1023, t896, t898, t892, t879; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1320, t1309, t1398, t1320, t1328, qJDD(2), -t1277, -t1278, 0, 0, -t1262, t1261, t1209, t1262, -t1205, t1331, t1350, t1368, t1440, t1441, t1197, t1194, t1150, -t1197, -t1146, t1331, t1248 + t1352, t1247 + t1358, t1380, t1391, t1102, t1038, t1077, -t1100, t1078, t1125, t1354, t1353, t1351, t1362; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1234, -t1204, t1442, -t1284, t1281, t1284, 0, -t1236, -t1360, 0, t1142, t1084, t1165, t1140, t1166, t1184, t1071, t1088, t958, -qJ(4) * t988, t1061, t1007, t1030, t1060, t1031, t1087, t920, t921, t913, t902; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1427, t1443, t1282, t1233, t1259, -t1427, t1236, 0, t1175, 0, t1141, t1082, t1161, t1139, t1162, t1183, t1046, t1052, t954, t978, t1059, t1006, t1028, t1058, t1029, t1086, t915, t917, t908, t894; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1262, t1261, t1209, t1262, -t1205, t1331, t1360, -t1175, 0, 0, t1197, t1194, t1150, -t1197, -t1146, t1331, t1248 + t1364, t1247 + t1381, t1081, t987, t1102, t1038, t1077, -t1100, t1078, t1125, t1369, t1370, t1363, t1394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1178, -t1145, t1444, t1245, t1242, -t1245, 0, -t1138, t1047, 0, t1103, t1040, t1079, t1101, t1080, t1126, t990, t991, t929, -pkin(8) * t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1428, t1149, t1243, -t1376, t1191, -t1428, t1138, 0, t1048, 0, -t1180, -t1179, -t1110, t1180, t1106, -t1176, t952, t953, -pkin(4) * t1039, -pkin(4) * t941; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1197, t1194, t1150, -t1197, -t1146, t1331, -t1047, -t1048, 0, 0, t1102, t1038, t1077, -t1100, t1078, t1125, t1382, t1383, t1373, t1436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1131, t1107, t1445, t1187, t1185, -t1187, 0, t1014, t982, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1188, t1109, t1186, -t1355, t1119, -t1188, -t1014, 0, t983, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1180, t1179, t1110, -t1180, -t1106, t1176, -t982, -t983, 0, 0;];
m_new_reg = t1;
