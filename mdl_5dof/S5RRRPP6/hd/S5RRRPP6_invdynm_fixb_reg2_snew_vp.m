% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRPP6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,theta4]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:03
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRPP6_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP6_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP6_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPP6_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPP6_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPP6_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:02:36
% EndTime: 2019-12-31 21:03:00
% DurationCPUTime: 25.18s
% Computational Cost: add. (73217->665), mult. (152736->794), div. (0->0), fcn. (105324->8), ass. (0->447)
t1431 = sin(qJ(3));
t1434 = cos(qJ(3));
t1432 = sin(qJ(2));
t1533 = qJD(1) * t1432;
t1392 = -t1434 * qJD(2) + t1431 * t1533;
t1393 = t1431 * qJD(2) + t1434 * t1533;
t1428 = sin(pkin(8));
t1429 = cos(pkin(8));
t1351 = -t1428 * t1392 + t1429 * t1393;
t1348 = t1351 ^ 2;
t1435 = cos(qJ(2));
t1499 = t1435 * qJD(1);
t1418 = -qJD(3) + t1499;
t1544 = t1418 ^ 2;
t1277 = t1544 + t1348;
t1421 = qJD(2) * t1533;
t1489 = t1435 * qJDD(1);
t1397 = -t1421 + t1489;
t1389 = -qJDD(3) + t1397;
t1349 = t1429 * t1392 + t1428 * t1393;
t1528 = t1351 * t1349;
t1557 = -t1528 + t1389;
t1517 = t1428 * t1557;
t1194 = t1429 * t1277 - t1517;
t1512 = t1429 * t1557;
t1205 = t1428 * t1277 + t1512;
t1145 = t1431 * t1194 + t1434 * t1205;
t1484 = qJD(2) * t1499;
t1491 = t1432 * qJDD(1);
t1459 = t1484 + t1491;
t1441 = -t1431 * qJDD(2) - t1434 * t1459;
t1344 = -t1392 * qJD(3) - t1441;
t1442 = t1434 * qJDD(2) - t1431 * t1459;
t1439 = t1393 * qJD(3) - t1442;
t1273 = t1429 * t1344 - t1428 * t1439;
t1529 = t1349 * t1418;
t1561 = t1273 + t1529;
t1116 = t1435 * t1145 + t1432 * t1561;
t1128 = t1434 * t1194 - t1431 * t1205;
t1433 = sin(qJ(1));
t1436 = cos(qJ(1));
t1671 = pkin(5) * (t1436 * t1116 - t1433 * t1128);
t1670 = pkin(5) * (t1433 * t1116 + t1436 * t1128);
t1114 = t1432 * t1145 - t1435 * t1561;
t1669 = pkin(1) * t1114;
t1668 = pkin(6) * t1114;
t1667 = -pkin(1) * t1128 - pkin(6) * t1116;
t1272 = t1428 * t1344 + t1429 * t1439;
t1333 = t1351 * t1418;
t1562 = t1272 - t1333;
t1169 = -t1428 * t1562 + t1429 * t1561;
t1519 = t1428 * t1561;
t1171 = t1429 * t1562 + t1519;
t1099 = t1431 * t1169 + t1434 * t1171;
t1546 = t1349 ^ 2;
t1559 = t1348 - t1546;
t1085 = t1435 * t1099 - t1432 * t1559;
t1095 = -t1434 * t1169 + t1431 * t1171;
t1664 = t1433 * t1085 - t1436 * t1095;
t1663 = t1436 * t1085 + t1433 * t1095;
t1325 = t1546 - t1544;
t1212 = t1428 * t1325 - t1512;
t1218 = t1429 * t1325 + t1517;
t1157 = t1431 * t1212 - t1434 * t1218;
t1234 = t1272 + t1333;
t1126 = t1435 * t1157 + t1432 * t1234;
t1152 = t1434 * t1212 + t1431 * t1218;
t1662 = t1433 * t1126 + t1436 * t1152;
t1661 = t1436 * t1126 - t1433 * t1152;
t1659 = pkin(2) * t1128;
t1658 = pkin(7) * t1128;
t1655 = pkin(2) * t1561 - pkin(7) * t1145;
t1083 = t1432 * t1099 + t1435 * t1559;
t1122 = t1432 * t1157 - t1435 * t1234;
t1249 = -t1546 - t1348;
t1556 = -t1529 + t1273;
t1593 = -t1429 * t1234 + t1428 * t1556;
t1594 = -t1428 * t1234 - t1429 * t1556;
t1611 = -t1431 * t1594 + t1434 * t1593;
t1628 = -t1435 * t1249 + t1432 * t1611;
t1650 = pkin(1) * t1628;
t1649 = pkin(3) * t1194;
t1648 = pkin(6) * t1628;
t1647 = qJ(4) * t1194;
t1646 = qJ(4) * t1205;
t1610 = t1431 * t1593 + t1434 * t1594;
t1626 = t1432 * t1249 + t1435 * t1611;
t1645 = -pkin(1) * t1610 + pkin(6) * t1626;
t1326 = t1348 - t1544;
t1558 = -t1528 - t1389;
t1516 = t1428 * t1558;
t1595 = -t1429 * t1326 + t1516;
t1259 = t1429 * t1558;
t1596 = t1428 * t1326 + t1259;
t1609 = t1431 * t1596 + t1434 * t1595;
t1608 = -t1431 * t1595 + t1434 * t1596;
t1627 = t1432 * t1556 + t1435 * t1608;
t1644 = t1433 * t1627 - t1436 * t1609;
t1643 = t1433 * t1609 + t1436 * t1627;
t1642 = pkin(5) * (t1433 * t1626 - t1436 * t1610);
t1641 = pkin(5) * (t1433 * t1610 + t1436 * t1626);
t1555 = -t1544 - t1546;
t1570 = t1429 * t1555 - t1516;
t1572 = t1428 * t1555 + t1259;
t1588 = -t1431 * t1572 + t1434 * t1570;
t1613 = t1432 * t1588 - t1435 * t1562;
t1639 = pkin(1) * t1613;
t1638 = pkin(2) * t1610;
t1637 = pkin(6) * t1613;
t1636 = pkin(7) * t1610;
t1587 = t1431 * t1570 + t1434 * t1572;
t1612 = t1432 * t1562 + t1435 * t1588;
t1631 = -pkin(1) * t1587 + pkin(6) * t1612;
t1630 = -pkin(2) * t1249 + pkin(7) * t1611;
t1629 = t1432 * t1608 - t1435 * t1556;
t1625 = pkin(5) * (t1433 * t1612 - t1436 * t1587);
t1624 = pkin(5) * (t1433 * t1587 + t1436 * t1612);
t1540 = pkin(3) * t1594;
t1622 = pkin(7) * t1587;
t1621 = qJ(4) * t1594;
t1605 = pkin(3) * t1572;
t1616 = -pkin(2) * t1587 - t1605;
t1615 = -pkin(2) * t1562 + pkin(7) * t1588;
t1614 = -pkin(3) * t1249 + qJ(4) * t1593;
t1604 = qJ(4) * t1570;
t1603 = qJ(4) * t1572;
t1602 = qJ(5) * t1561;
t1409 = t1436 * g(1) + t1433 * g(2);
t1437 = qJD(1) ^ 2;
t1383 = -t1437 * pkin(1) + qJDD(1) * pkin(6) - t1409;
t1542 = pkin(2) * t1435;
t1470 = -t1432 * pkin(7) - t1542;
t1395 = t1470 * qJD(1);
t1536 = t1435 * g(3);
t1547 = qJD(2) ^ 2;
t1319 = (qJD(1) * t1395 + t1383) * t1432 - qJDD(2) * pkin(2) - t1547 * pkin(7) + t1536;
t1367 = -t1418 * pkin(3) - t1393 * qJ(4);
t1545 = t1392 ^ 2;
t1208 = t1439 * pkin(3) - t1545 * qJ(4) + t1393 * t1367 + qJDD(4) + t1319;
t1597 = t1272 * pkin(4) + t1208 - t1602;
t1458 = (t1349 * t1428 + t1351 * t1429) * t1418;
t1526 = t1418 * t1428;
t1324 = t1351 * t1526;
t1525 = t1418 * t1429;
t1487 = t1349 * t1525;
t1464 = -t1324 + t1487;
t1551 = t1431 * t1464 + t1434 * t1458;
t1506 = t1432 * t1389;
t1550 = -t1431 * t1458 + t1434 * t1464;
t1567 = t1435 * t1550 - t1506;
t1592 = t1433 * t1567 - t1436 * t1551;
t1460 = t1428 * t1272 - t1487;
t1465 = -t1429 * t1272 - t1349 * t1526;
t1548 = t1431 * t1460 + t1434 * t1465;
t1486 = t1432 * t1528;
t1549 = -t1431 * t1465 + t1434 * t1460;
t1568 = t1435 * t1549 - t1486;
t1591 = t1433 * t1568 - t1436 * t1548;
t1590 = t1433 * t1551 + t1436 * t1567;
t1589 = t1433 * t1548 + t1436 * t1568;
t1378 = t1435 * t1389;
t1571 = t1432 * t1550 + t1378;
t1483 = t1435 * t1528;
t1569 = t1432 * t1549 + t1483;
t1527 = t1393 * t1392;
t1454 = -t1389 - t1527;
t1566 = t1431 * t1454;
t1565 = t1434 * t1454;
t1564 = pkin(4) * t1277 - qJ(5) * t1557;
t1563 = -pkin(4) * t1558 - qJ(5) * t1555;
t1532 = qJD(4) * t1349;
t1341 = -0.2e1 * t1532;
t1530 = qJD(5) * t1418;
t1560 = t1341 - 0.2e1 * t1530;
t1374 = t1392 * t1418;
t1306 = -t1374 + t1344;
t1226 = t1428 * t1273 - t1351 * t1525;
t1227 = t1429 * t1273 + t1324;
t1163 = t1434 * t1226 + t1431 * t1227;
t1166 = -t1431 * t1226 + t1434 * t1227;
t1466 = t1435 * t1166 + t1486;
t1553 = -t1436 * t1163 + t1433 * t1466;
t1552 = t1433 * t1163 + t1436 * t1466;
t1388 = t1393 ^ 2;
t1543 = pkin(2) * t1432;
t1408 = t1433 * g(1) - t1436 * g(2);
t1382 = qJDD(1) * pkin(1) + t1437 * pkin(6) + t1408;
t1396 = 0.2e1 * t1484 + t1491;
t1468 = -t1397 + t1421;
t1301 = pkin(2) * t1468 - pkin(7) * t1396 - t1382;
t1369 = -t1432 * g(3) + t1435 * t1383;
t1320 = -t1547 * pkin(2) + qJDD(2) * pkin(7) + t1395 * t1499 + t1369;
t1246 = -t1434 * t1301 + t1431 * t1320;
t1179 = t1454 * pkin(3) - qJ(4) * t1306 - t1246;
t1247 = t1431 * t1301 + t1434 * t1320;
t1185 = -t1545 * pkin(3) - qJ(4) * t1439 + t1418 * t1367 + t1247;
t1479 = -t1429 * t1179 + t1428 * t1185;
t1531 = qJD(4) * t1351;
t1110 = t1479 + 0.2e1 * t1531;
t1494 = t1428 * t1179 + t1429 * t1185;
t1111 = t1341 + t1494;
t1066 = -t1429 * t1110 + t1428 * t1111;
t1541 = pkin(3) * t1066;
t1537 = pkin(4) * t1429;
t1535 = qJ(5) * t1429;
t1534 = qJD(1) * qJD(2);
t1524 = t1418 * t1431;
t1523 = t1418 * t1434;
t1425 = t1432 ^ 2;
t1522 = t1425 * t1437;
t1521 = t1428 * t1208;
t1514 = t1429 * t1208;
t1511 = t1431 * t1066;
t1510 = t1431 * t1319;
t1335 = t1389 - t1527;
t1509 = t1431 * t1335;
t1507 = t1432 * t1382;
t1358 = t1432 * t1396;
t1417 = t1435 * t1437 * t1432;
t1404 = -t1417 + qJDD(2);
t1505 = t1432 * t1404;
t1405 = qJDD(2) + t1417;
t1504 = t1432 * t1405;
t1502 = t1434 * t1066;
t1501 = t1434 * t1319;
t1500 = t1434 * t1335;
t1497 = t1435 * t1382;
t1496 = t1435 * t1404;
t1281 = t1349 * pkin(4) - t1351 * qJ(5);
t1462 = -pkin(4) * t1544 - t1389 * qJ(5) - t1349 * t1281 + t1494;
t1082 = t1462 + t1560;
t1457 = t1389 * pkin(4) - qJ(5) * t1544 + qJDD(5) + t1479;
t1088 = (0.2e1 * qJD(4) + t1281) * t1351 + t1457;
t1495 = -pkin(4) * t1088 + qJ(5) * t1082;
t1493 = -pkin(4) * t1556 - qJ(5) * t1234;
t1426 = t1435 ^ 2;
t1492 = t1425 + t1426;
t1490 = t1433 * qJDD(1);
t1488 = t1436 * qJDD(1);
t1485 = t1432 * t1527;
t1482 = t1435 * t1527;
t1481 = -qJ(5) * t1428 - pkin(3);
t1067 = t1428 * t1110 + t1429 * t1111;
t1176 = t1431 * t1246 + t1434 * t1247;
t1368 = t1432 * t1383 + t1536;
t1310 = t1432 * t1368 + t1435 * t1369;
t1478 = -t1433 * t1408 - t1436 * t1409;
t1477 = t1433 * t1417;
t1476 = t1436 * t1417;
t1054 = t1428 * t1082 - t1429 * t1088;
t1475 = pkin(3) * t1054 + t1495;
t1474 = t1493 + t1540;
t1473 = -t1494 - t1649;
t1471 = -pkin(2) * t1319 + pkin(7) * t1176;
t1401 = -t1433 * t1437 + t1488;
t1469 = -pkin(5) * t1401 - t1433 * g(3);
t1467 = t1432 * t1166 - t1483;
t1175 = -t1434 * t1246 + t1431 * t1247;
t1309 = t1435 * t1368 - t1432 * t1369;
t1461 = t1436 * t1408 - t1433 * t1409;
t1345 = -t1544 - t1545;
t1264 = t1434 * t1345 - t1566;
t1375 = t1418 * t1393;
t1303 = t1375 - t1439;
t1456 = pkin(2) * t1303 + pkin(7) * t1264 - t1501;
t1354 = -t1388 - t1544;
t1279 = -t1431 * t1354 + t1500;
t1307 = (qJD(3) - t1418) * t1392 + t1441;
t1455 = pkin(2) * t1307 + pkin(7) * t1279 + t1510;
t1304 = (-qJD(3) - t1418) * t1393 + t1442;
t1244 = t1434 * t1304 + t1431 * t1306;
t1334 = t1388 + t1545;
t1453 = pkin(2) * t1334 + pkin(7) * t1244 + t1176;
t1452 = t1462 + t1564 + t1649;
t1055 = t1429 * t1082 + t1428 * t1088;
t1113 = (-pkin(4) * t1418 - 0.2e1 * qJD(5)) * t1351 + t1597;
t1037 = qJ(4) * t1055 + (t1481 - t1537) * t1113;
t1039 = -t1431 * t1054 + t1434 * t1055;
t1043 = -qJ(4) * t1054 + (pkin(4) * t1428 - t1535) * t1113;
t1451 = -pkin(2) * t1113 + pkin(7) * t1039 + t1434 * t1037 + t1431 * t1043;
t1074 = -pkin(4) * t1249 + t1082;
t1075 = -qJ(5) * t1249 + t1088;
t1048 = t1429 * t1074 + t1428 * t1075 + t1614;
t1050 = -t1428 * t1074 + t1429 * t1075 - t1621;
t1450 = t1434 * t1048 + t1431 * t1050 + t1630;
t1052 = t1067 + t1614;
t1056 = -t1066 - t1621;
t1449 = t1434 * t1052 + t1431 * t1056 + t1630;
t1438 = 0.2e1 * qJD(5) * t1351 - t1597;
t1092 = pkin(4) * t1333 + t1438 + t1602;
t1063 = -t1646 + t1428 * t1092 + (pkin(3) + t1537) * t1561;
t1069 = -pkin(4) * t1519 + t1429 * t1092 - t1647;
t1448 = t1434 * t1063 + t1431 * t1069 + t1655;
t1093 = (-t1562 + t1333) * pkin(4) + t1438;
t1065 = t1429 * t1093 + t1481 * t1562 + t1604;
t1070 = -t1428 * t1093 - t1535 * t1562 - t1603;
t1447 = t1434 * t1065 + t1431 * t1070 + t1615;
t1112 = -pkin(3) * t1562 - t1514 + t1604;
t1142 = t1521 - t1603;
t1446 = t1434 * t1112 + t1431 * t1142 + t1615;
t1118 = -pkin(3) * t1561 + t1521 + t1646;
t1147 = t1514 + t1647;
t1445 = t1434 * t1118 + t1431 * t1147 - t1655;
t1047 = t1434 * t1067 - t1511;
t1059 = -pkin(3) * t1208 + qJ(4) * t1067;
t1443 = -pkin(2) * t1208 + pkin(7) * t1047 - qJ(4) * t1511 + t1434 * t1059;
t1343 = -0.2e1 * t1531;
t1440 = -t1351 * t1281 + t1343 - t1457 - t1563;
t1423 = t1426 * t1437;
t1415 = -t1423 - t1547;
t1414 = t1423 - t1547;
t1413 = -t1522 - t1547;
t1412 = -t1522 + t1547;
t1403 = -t1423 + t1522;
t1402 = t1423 + t1522;
t1400 = t1436 * t1437 + t1490;
t1399 = t1492 * qJDD(1);
t1398 = -0.2e1 * t1421 + t1489;
t1391 = t1435 * t1405;
t1390 = t1492 * t1534;
t1377 = -pkin(5) * t1400 + t1436 * g(3);
t1373 = -t1388 + t1544;
t1372 = -t1544 + t1545;
t1371 = -t1425 * t1534 + t1435 * t1459;
t1370 = -t1432 * t1397 - t1426 * t1534;
t1366 = -t1432 * t1413 - t1496;
t1365 = -t1432 * t1412 + t1391;
t1364 = t1435 * t1415 - t1504;
t1363 = t1435 * t1414 - t1505;
t1362 = t1435 * t1413 - t1505;
t1361 = t1435 * t1412 + t1504;
t1360 = t1432 * t1415 + t1391;
t1359 = t1432 * t1414 + t1496;
t1357 = t1468 * t1435;
t1355 = t1388 - t1545;
t1353 = t1435 * t1398 - t1358;
t1352 = t1435 * t1396 + t1432 * t1398;
t1342 = 0.2e1 * t1532;
t1323 = -pkin(6) * t1362 - t1497;
t1322 = -pkin(6) * t1360 - t1507;
t1318 = (t1392 * t1434 - t1393 * t1431) * t1418;
t1317 = (t1392 * t1431 + t1393 * t1434) * t1418;
t1313 = -pkin(1) * t1362 + t1369;
t1312 = -pkin(1) * t1360 + t1368;
t1305 = t1374 + t1344;
t1302 = t1375 + t1439;
t1300 = pkin(1) * t1398 + pkin(6) * t1364 + t1497;
t1299 = -pkin(1) * t1396 + pkin(6) * t1366 - t1507;
t1296 = t1434 * t1344 + t1393 * t1524;
t1295 = t1431 * t1344 - t1393 * t1523;
t1294 = -t1392 * t1523 + t1431 * t1439;
t1293 = t1392 * t1524 + t1434 * t1439;
t1292 = t1435 * t1318 - t1506;
t1291 = t1432 * t1318 + t1378;
t1287 = t1434 * t1372 + t1509;
t1286 = -t1431 * t1373 + t1565;
t1285 = t1431 * t1372 - t1500;
t1284 = t1434 * t1373 + t1566;
t1280 = pkin(1) * t1382 + pkin(6) * t1310;
t1278 = t1434 * t1354 + t1509;
t1274 = pkin(1) * t1402 + pkin(6) * t1399 + t1310;
t1263 = t1431 * t1345 + t1565;
t1254 = t1435 * t1296 + t1485;
t1253 = t1435 * t1294 - t1485;
t1252 = t1432 * t1296 - t1482;
t1251 = t1432 * t1294 + t1482;
t1243 = t1434 * t1303 - t1431 * t1305;
t1242 = t1431 * t1304 - t1434 * t1306;
t1241 = t1431 * t1303 + t1434 * t1305;
t1228 = -pkin(7) * t1278 + t1501;
t1221 = t1435 * t1287 - t1432 * t1302;
t1220 = t1435 * t1286 + t1432 * t1306;
t1215 = t1432 * t1287 + t1435 * t1302;
t1214 = t1432 * t1286 - t1435 * t1306;
t1209 = -pkin(7) * t1263 + t1510;
t1207 = t1435 * t1279 - t1432 * t1307;
t1204 = t1432 * t1279 + t1435 * t1307;
t1201 = t1435 * t1264 - t1432 * t1303;
t1200 = t1432 * t1264 + t1435 * t1303;
t1199 = t1435 * t1243 + t1432 * t1355;
t1198 = t1432 * t1243 - t1435 * t1355;
t1193 = t1435 * t1244 - t1432 * t1334;
t1192 = t1432 * t1244 + t1435 * t1334;
t1187 = -pkin(2) * t1278 + t1247;
t1186 = -pkin(2) * t1263 + t1246;
t1149 = t1435 * t1176 + t1432 * t1319;
t1148 = t1432 * t1176 - t1435 * t1319;
t1141 = -pkin(1) * t1204 - t1455;
t1140 = -pkin(1) * t1200 - t1456;
t1127 = -pkin(7) * t1242 - t1175;
t1108 = -pkin(6) * t1204 - t1432 * t1187 + t1435 * t1228;
t1103 = -pkin(6) * t1200 - t1432 * t1186 + t1435 * t1209;
t1094 = -pkin(1) * t1278 + pkin(6) * t1207 + t1435 * t1187 + t1432 * t1228;
t1091 = -pkin(1) * t1192 - t1453;
t1090 = -pkin(1) * t1148 - t1471;
t1089 = -pkin(1) * t1263 + pkin(6) * t1201 + t1435 * t1186 + t1432 * t1209;
t1076 = -pkin(6) * t1192 + t1435 * t1127 + t1242 * t1543;
t1073 = -pkin(6) * t1148 + (-pkin(7) * t1435 + t1543) * t1175;
t1072 = -t1540 - t1638;
t1071 = pkin(6) * t1193 + t1432 * t1127 + (-pkin(1) - t1542) * t1242;
t1068 = t1341 - t1473 + t1659;
t1064 = t1110 + t1616;
t1062 = pkin(6) * t1149 + (-pkin(1) + t1470) * t1175;
t1061 = -t1431 * t1118 + t1434 * t1147 + t1658;
t1060 = -t1474 - t1638;
t1058 = -t1431 * t1112 + t1434 * t1142 - t1622;
t1057 = t1088 + t1563 + t1616;
t1053 = t1342 - t1452 + 0.2e1 * t1530 - t1659;
t1051 = -t1445 - t1669;
t1049 = -t1446 - t1639;
t1046 = t1431 * t1067 + t1502;
t1045 = t1435 * t1047 + t1432 * t1208;
t1044 = t1432 * t1047 - t1435 * t1208;
t1042 = -t1431 * t1065 + t1434 * t1070 - t1622;
t1041 = -t1431 * t1063 + t1434 * t1069 - t1658;
t1040 = t1435 * t1061 - t1432 * t1068 - t1668;
t1038 = t1434 * t1054 + t1431 * t1055;
t1036 = t1435 * t1058 - t1432 * t1064 - t1637;
t1035 = t1432 * t1061 + t1435 * t1068 - t1667;
t1034 = -t1447 - t1639;
t1033 = -pkin(2) * t1046 - t1541;
t1032 = -t1448 + t1669;
t1031 = t1435 * t1039 + t1432 * t1113;
t1030 = t1432 * t1039 - t1435 * t1113;
t1029 = t1432 * t1058 + t1435 * t1064 + t1631;
t1028 = -t1431 * t1052 + t1434 * t1056 - t1636;
t1027 = t1435 * t1042 - t1432 * t1057 - t1637;
t1026 = -t1449 - t1650;
t1025 = -pkin(7) * t1046 - qJ(4) * t1502 - t1431 * t1059;
t1024 = t1435 * t1041 - t1432 * t1053 + t1668;
t1023 = -t1431 * t1048 + t1434 * t1050 - t1636;
t1022 = t1432 * t1042 + t1435 * t1057 + t1631;
t1021 = t1432 * t1041 + t1435 * t1053 + t1667;
t1020 = t1435 * t1028 - t1432 * t1072 - t1648;
t1019 = -t1450 - t1650;
t1018 = -pkin(2) * t1038 - t1475;
t1017 = t1432 * t1028 + t1435 * t1072 + t1645;
t1016 = t1435 * t1023 - t1432 * t1060 - t1648;
t1015 = -pkin(1) * t1044 - t1443;
t1014 = t1432 * t1023 + t1435 * t1060 + t1645;
t1013 = -pkin(7) * t1038 - t1431 * t1037 + t1434 * t1043;
t1012 = -pkin(6) * t1044 + t1435 * t1025 - t1432 * t1033;
t1011 = -pkin(1) * t1030 - t1451;
t1010 = -pkin(1) * t1046 + pkin(6) * t1045 + t1432 * t1025 + t1435 * t1033;
t1009 = -pkin(6) * t1030 + t1435 * t1013 - t1432 * t1018;
t1008 = -pkin(1) * t1038 + pkin(6) * t1031 + t1432 * t1013 + t1435 * t1018;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1401, 0, -t1400, 0, t1469, -t1377, -t1461, -pkin(5) * t1461, t1436 * t1371 - t1477, t1436 * t1353 + t1433 * t1403, t1436 * t1365 + t1432 * t1490, t1436 * t1370 + t1477, t1436 * t1363 + t1433 * t1489, t1433 * qJDD(2) + t1436 * t1390, t1436 * t1322 - t1433 * t1312 - pkin(5) * (t1433 * t1364 + t1436 * t1398), t1436 * t1323 - t1433 * t1313 - pkin(5) * (t1433 * t1366 - t1436 * t1396), t1436 * t1309 - pkin(5) * (t1433 * t1399 + t1436 * t1402), -pkin(5) * (t1433 * t1310 + t1436 * t1382) - (t1433 * pkin(1) - t1436 * pkin(6)) * t1309, t1436 * t1254 + t1433 * t1295, t1436 * t1199 + t1433 * t1241, t1436 * t1220 + t1433 * t1284, t1436 * t1253 - t1433 * t1293, t1436 * t1221 + t1433 * t1285, t1436 * t1292 + t1433 * t1317, t1436 * t1103 - t1433 * t1140 - pkin(5) * (t1433 * t1201 - t1436 * t1263), t1436 * t1108 - t1433 * t1141 - pkin(5) * (t1433 * t1207 - t1436 * t1278), t1436 * t1076 - t1433 * t1091 - pkin(5) * (t1433 * t1193 - t1436 * t1242), t1436 * t1073 - t1433 * t1090 - pkin(5) * (t1433 * t1149 - t1436 * t1175), t1552, -t1663, t1643, t1589, -t1661, t1590, t1436 * t1036 - t1433 * t1049 - t1625, t1436 * t1040 - t1433 * t1051 - t1670, t1436 * t1020 - t1433 * t1026 - t1642, t1436 * t1012 - t1433 * t1015 - pkin(5) * (t1433 * t1045 - t1436 * t1046), t1552, t1643, t1663, t1590, t1661, t1589, t1436 * t1027 - t1433 * t1034 - t1625, t1436 * t1016 - t1433 * t1019 - t1642, t1436 * t1024 - t1433 * t1032 + t1670, t1436 * t1009 - t1433 * t1011 - pkin(5) * (t1433 * t1031 - t1436 * t1038); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1400, 0, t1401, 0, t1377, t1469, t1478, pkin(5) * t1478, t1433 * t1371 + t1476, t1433 * t1353 - t1436 * t1403, t1433 * t1365 - t1432 * t1488, t1433 * t1370 - t1476, t1433 * t1363 - t1435 * t1488, -t1436 * qJDD(2) + t1433 * t1390, t1433 * t1322 + t1436 * t1312 + pkin(5) * (t1436 * t1364 - t1433 * t1398), t1433 * t1323 + t1436 * t1313 + pkin(5) * (t1436 * t1366 + t1433 * t1396), t1433 * t1309 + pkin(5) * (t1436 * t1399 - t1433 * t1402), pkin(5) * (t1436 * t1310 - t1433 * t1382) - (-t1436 * pkin(1) - t1433 * pkin(6)) * t1309, t1433 * t1254 - t1436 * t1295, t1433 * t1199 - t1436 * t1241, t1433 * t1220 - t1436 * t1284, t1433 * t1253 + t1436 * t1293, t1433 * t1221 - t1436 * t1285, t1433 * t1292 - t1436 * t1317, t1433 * t1103 + t1436 * t1140 + pkin(5) * (t1436 * t1201 + t1433 * t1263), t1433 * t1108 + t1436 * t1141 + pkin(5) * (t1436 * t1207 + t1433 * t1278), t1433 * t1076 + t1436 * t1091 + pkin(5) * (t1436 * t1193 + t1433 * t1242), t1433 * t1073 + t1436 * t1090 + pkin(5) * (t1436 * t1149 + t1433 * t1175), t1553, -t1664, t1644, t1591, -t1662, t1592, t1433 * t1036 + t1436 * t1049 + t1624, t1433 * t1040 + t1436 * t1051 + t1671, t1433 * t1020 + t1436 * t1026 + t1641, t1433 * t1012 + t1436 * t1015 + pkin(5) * (t1436 * t1045 + t1433 * t1046), t1553, t1644, t1664, t1592, t1662, t1591, t1433 * t1027 + t1436 * t1034 + t1624, t1433 * t1016 + t1436 * t1019 + t1641, t1433 * t1024 + t1436 * t1032 - t1671, t1433 * t1009 + t1436 * t1011 + pkin(5) * (t1436 * t1031 + t1433 * t1038); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1408, t1409, 0, 0, t1358, t1352, t1361, -t1357, t1359, 0, t1300, t1299, t1274, t1280, t1252, t1198, t1214, t1251, t1215, t1291, t1089, t1094, t1071, t1062, t1467, -t1083, t1629, t1569, -t1122, t1571, t1029, t1035, t1017, t1010, t1467, t1629, t1083, t1571, t1122, t1569, t1022, t1014, t1021, t1008; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1437, 0, 0, -g(3), -t1408, 0, t1371, t1353, t1365, t1370, t1363, t1390, t1322, t1323, t1309, pkin(6) * t1309, t1254, t1199, t1220, t1253, t1221, t1292, t1103, t1108, t1076, t1073, t1466, -t1085, t1627, t1568, -t1126, t1567, t1036, t1040, t1020, t1012, t1466, t1627, t1085, t1567, t1126, t1568, t1027, t1016, t1024, t1009; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1437, 0, qJDD(1), 0, g(3), 0, -t1409, 0, t1417, -t1403, -t1491, -t1417, -t1489, -qJDD(2), t1312, t1313, 0, pkin(1) * t1309, -t1295, -t1241, -t1284, t1293, -t1285, -t1317, t1140, t1141, t1091, t1090, -t1163, t1095, -t1609, -t1548, -t1152, -t1551, t1049, t1051, t1026, t1015, -t1163, -t1609, -t1095, -t1551, t1152, -t1548, t1034, t1019, t1032, t1011; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1408, t1409, 0, 0, t1358, t1352, t1361, -t1357, t1359, 0, t1300, t1299, t1274, t1280, t1252, t1198, t1214, t1251, t1215, t1291, t1089, t1094, t1071, t1062, t1467, -t1083, t1629, t1569, -t1122, t1571, t1029, t1035, t1017, t1010, t1467, t1629, t1083, t1571, t1122, t1569, t1022, t1014, t1021, t1008; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1459, t1398, t1405, -t1484, t1414, t1484, 0, -t1382, t1368, 0, t1296, t1243, t1286, t1294, t1287, t1318, t1209, t1228, t1127, -pkin(7) * t1175, t1166, -t1099, t1608, t1549, -t1157, t1550, t1058, t1061, t1028, t1025, t1166, t1608, t1099, t1550, t1157, t1549, t1042, t1023, t1041, t1013; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1421, t1396, t1412, t1397, t1404, -t1421, t1382, 0, t1369, 0, -t1527, -t1355, -t1306, t1527, t1302, t1389, t1186, t1187, -pkin(2) * t1242, -pkin(2) * t1175, -t1528, -t1559, -t1556, t1528, t1234, t1389, t1064, t1068, t1072, t1033, -t1528, -t1556, t1559, t1389, -t1234, t1528, t1057, t1060, t1053, t1018; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1417, t1403, t1491, t1417, t1489, qJDD(2), -t1368, -t1369, 0, 0, t1295, t1241, t1284, -t1293, t1285, t1317, t1456, t1455, t1453, t1471, t1163, -t1095, t1609, t1548, t1152, t1551, t1446, t1445, t1449, t1443, t1163, t1609, t1095, t1551, -t1152, t1548, t1447, t1450, t1448, t1451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1344, t1303, t1454, -t1374, t1372, t1374, 0, t1319, t1246, 0, t1227, -t1171, t1596, t1460, t1218, t1464, t1142, t1147, t1056, -qJ(4) * t1066, t1227, t1596, t1171, t1464, -t1218, t1460, t1070, t1050, t1069, t1043; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1375, t1305, t1373, -t1439, -t1335, t1375, -t1319, 0, t1247, 0, t1226, t1169, t1595, t1465, t1212, t1458, t1112, t1118, t1052, t1059, t1226, t1595, -t1169, t1458, -t1212, t1465, t1065, t1048, t1063, t1037; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1527, t1355, t1306, -t1527, -t1302, -t1389, -t1246, -t1247, 0, 0, t1528, t1559, t1556, -t1528, -t1234, -t1389, t1343 - t1479 + t1605, t1342 + t1473, t1540, t1541, t1528, t1556, -t1559, -t1389, t1234, -t1528, t1440 + t1605, t1474, t1452 + t1560, t1475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1273, -t1562, t1558, -t1529, t1325, t1529, 0, t1208, t1110, 0, t1273, t1558, t1562, t1529, -t1325, -t1529, -qJ(5) * t1562, t1075, t1092, -qJ(5) * t1113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1333, t1561, -t1326, -t1272, -t1557, t1333, -t1208, 0, t1111, 0, -t1333, -t1326, -t1561, t1333, t1557, -t1272, t1093, t1074, pkin(4) * t1561, -pkin(4) * t1113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1528, t1559, t1556, -t1528, -t1234, -t1389, -t1110, -t1111, 0, 0, t1528, t1556, -t1559, -t1389, t1234, -t1528, t1440, t1493, t1082 + t1564, t1495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1273, t1558, t1562, t1529, -t1325, -t1529, 0, t1088, -t1113, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1528, t1556, -t1559, -t1389, t1234, -t1528, -t1088, 0, t1082, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1333, t1326, t1561, -t1333, -t1557, t1272, t1113, -t1082, 0, 0;];
m_new_reg = t1;
