% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S5RRRPP6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,theta4]';
%
% Output:
% f_new_reg [(3*6)x(6*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:03
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S5RRRPP6_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP6_invdynf_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP6_invdynf_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRPP6_invdynf_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRPP6_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPP6_invdynf_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:03:00
% EndTime: 2019-12-31 21:03:04
% DurationCPUTime: 4.15s
% Computational Cost: add. (12720->233), mult. (26561->272), div. (0->0), fcn. (18295->8), ass. (0->158)
t1848 = sin(qJ(2));
t1879 = qJD(1) * t1848;
t1838 = qJD(2) * t1879;
t1851 = cos(qJ(2));
t1867 = t1851 * qJDD(1);
t1863 = t1838 - t1867;
t1862 = -qJDD(3) - t1863;
t1847 = sin(qJ(3));
t1850 = cos(qJ(3));
t1816 = -t1850 * qJD(2) + t1847 * t1879;
t1817 = t1847 * qJD(2) + t1850 * t1879;
t1844 = sin(pkin(8));
t1845 = cos(pkin(8));
t1797 = t1845 * t1816 + t1844 * t1817;
t1799 = -t1844 * t1816 + t1845 * t1817;
t1877 = t1799 * t1797;
t1757 = t1862 - t1877;
t1796 = t1799 ^ 2;
t1871 = t1851 * qJD(1);
t1835 = -qJD(3) + t1871;
t1883 = t1835 ^ 2;
t1890 = -t1796 - t1883;
t1733 = t1844 * t1757 + t1845 * t1890;
t1736 = t1845 * t1757 - t1844 * t1890;
t1707 = t1847 * t1733 - t1850 * t1736;
t1866 = qJD(2) * t1871;
t1868 = t1848 * qJDD(1);
t1820 = t1866 + t1868;
t1860 = -t1847 * qJDD(2) - t1850 * t1820;
t1794 = -t1816 * qJD(3) - t1860;
t1861 = t1850 * qJDD(2) - t1847 * t1820;
t1857 = -t1817 * qJD(3) + t1861;
t1856 = t1845 * t1794 + t1844 * t1857;
t1878 = t1797 * t1835;
t1855 = t1856 + t1878;
t1696 = t1851 * t1707 - t1848 * t1855;
t1709 = t1850 * t1733 + t1847 * t1736;
t1849 = sin(qJ(1));
t1852 = cos(qJ(1));
t1916 = t1849 * t1696 + t1852 * t1709;
t1915 = t1852 * t1696 - t1849 * t1709;
t1694 = t1848 * t1707 + t1851 * t1855;
t1758 = t1862 + t1877;
t1767 = t1797 ^ 2;
t1889 = -t1883 - t1767;
t1897 = t1844 * t1758 + t1845 * t1889;
t1898 = -t1845 * t1758 + t1844 * t1889;
t1899 = t1847 * t1897 + t1850 * t1898;
t1864 = -t1844 * t1794 + t1845 * t1857;
t1876 = t1799 * t1835;
t1858 = -t1864 - t1876;
t1900 = -t1847 * t1898 + t1850 * t1897;
t1906 = t1848 * t1858 + t1851 * t1900;
t1912 = t1849 * t1906 - t1852 * t1899;
t1911 = t1849 * t1899 + t1852 * t1906;
t1908 = t1848 * t1900 - t1851 * t1858;
t1747 = t1856 - t1878;
t1859 = t1864 - t1876;
t1887 = t1844 * t1747 + t1845 * t1859;
t1888 = -t1845 * t1747 + t1844 * t1859;
t1895 = t1847 * t1887 + t1850 * t1888;
t1753 = t1796 + t1767;
t1896 = -t1847 * t1888 + t1850 * t1887;
t1901 = -t1848 * t1753 + t1851 * t1896;
t1907 = t1849 * t1901 - t1852 * t1895;
t1905 = t1849 * t1895 + t1852 * t1901;
t1902 = t1851 * t1753 + t1848 * t1896;
t1886 = qJD(2) ^ 2;
t1885 = t1816 ^ 2;
t1884 = t1817 ^ 2;
t1882 = -2 * qJD(4);
t1881 = -2 * qJD(5);
t1880 = t1851 * g(3);
t1875 = t1816 * t1835;
t1874 = t1817 * t1816;
t1870 = qJD(3) + t1835;
t1828 = t1849 * g(1) - t1852 * g(2);
t1853 = qJD(1) ^ 2;
t1811 = qJDD(1) * pkin(1) + t1853 * pkin(6) + t1828;
t1769 = (-t1820 - t1866) * pkin(7) + (t1863 + t1838) * pkin(2) - t1811;
t1829 = -t1852 * g(1) - t1849 * g(2);
t1812 = -t1853 * pkin(1) + qJDD(1) * pkin(6) + t1829;
t1807 = -t1848 * g(3) + t1851 * t1812;
t1818 = (-t1851 * pkin(2) - pkin(7) * t1848) * qJD(1);
t1780 = -t1886 * pkin(2) + qJDD(2) * pkin(7) + t1818 * t1871 + t1807;
t1751 = t1847 * t1769 + t1850 * t1780;
t1841 = t1848 ^ 2;
t1842 = t1851 ^ 2;
t1869 = t1841 + t1842;
t1805 = -t1835 * pkin(3) - t1817 * qJ(4);
t1724 = -t1885 * pkin(3) + t1857 * qJ(4) + t1835 * t1805 + t1751;
t1750 = t1850 * t1769 - t1847 * t1780;
t1788 = -t1862 - t1874;
t1854 = (-t1794 + t1875) * qJ(4) + t1788 * pkin(3) + t1750;
t1699 = t1845 * t1724 + t1797 * t1882 + t1844 * t1854;
t1865 = t1844 * t1724 - t1845 * t1854;
t1779 = t1880 - qJDD(2) * pkin(2) - t1886 * pkin(7) + (qJD(1) * t1818 + t1812) * t1848;
t1739 = -t1857 * pkin(3) - t1885 * qJ(4) + t1817 * t1805 + qJDD(4) + t1779;
t1834 = t1851 * t1853 * t1848;
t1832 = -t1842 * t1853 - t1886;
t1831 = -t1841 * t1853 - t1886;
t1827 = -qJDD(2) + t1834;
t1826 = qJDD(2) + t1834;
t1825 = t1869 * t1853;
t1824 = -t1849 * qJDD(1) - t1852 * t1853;
t1823 = t1852 * qJDD(1) - t1849 * t1853;
t1822 = t1869 * qJDD(1);
t1821 = -0.2e1 * t1838 + t1867;
t1819 = 0.2e1 * t1866 + t1868;
t1806 = -t1848 * t1812 - t1880;
t1804 = t1851 * t1827 - t1848 * t1831;
t1803 = -t1848 * t1826 + t1851 * t1832;
t1802 = t1848 * t1827 + t1851 * t1831;
t1801 = t1851 * t1826 + t1848 * t1832;
t1800 = -t1883 - t1884;
t1795 = -t1883 - t1885;
t1787 = t1862 - t1874;
t1786 = -t1884 - t1885;
t1775 = -t1848 * t1806 + t1851 * t1807;
t1774 = t1851 * t1806 + t1848 * t1807;
t1773 = t1870 * t1816 + t1860;
t1772 = t1794 + t1875;
t1771 = -t1870 * t1817 + t1861;
t1770 = (qJD(3) - t1835) * t1817 - t1861;
t1766 = t1797 * pkin(4) - t1799 * qJ(5);
t1765 = t1850 * t1787 - t1847 * t1800;
t1764 = t1847 * t1787 + t1850 * t1800;
t1756 = -t1847 * t1788 + t1850 * t1795;
t1755 = t1850 * t1788 + t1847 * t1795;
t1749 = t1850 * t1771 - t1847 * t1773;
t1748 = t1847 * t1771 + t1850 * t1773;
t1738 = t1851 * t1765 + t1848 * t1772;
t1735 = t1848 * t1765 - t1851 * t1772;
t1732 = t1851 * t1756 + t1848 * t1770;
t1731 = t1848 * t1756 - t1851 * t1770;
t1726 = t1851 * t1749 + t1848 * t1786;
t1725 = t1848 * t1749 - t1851 * t1786;
t1720 = -t1847 * t1750 + t1850 * t1751;
t1719 = t1850 * t1750 + t1847 * t1751;
t1714 = t1851 * t1720 + t1848 * t1779;
t1713 = t1848 * t1720 - t1851 * t1779;
t1700 = -t1864 * pkin(4) + (-pkin(4) * t1835 + t1881) * t1799 + t1739 - t1855 * qJ(5);
t1698 = t1799 * t1882 - t1865;
t1689 = qJDD(5) + t1862 * pkin(4) - t1883 * qJ(5) + ((2 * qJD(4)) + t1766) * t1799 + t1865;
t1688 = -pkin(4) * t1883 - qJ(5) * t1862 - t1797 * t1766 + t1835 * t1881 + t1699;
t1683 = -t1844 * t1698 + t1845 * t1699;
t1682 = t1845 * t1698 + t1844 * t1699;
t1681 = t1845 * t1688 + t1844 * t1689;
t1680 = t1844 * t1688 - t1845 * t1689;
t1679 = -t1847 * t1682 + t1850 * t1683;
t1678 = t1850 * t1682 + t1847 * t1683;
t1677 = t1851 * t1679 + t1848 * t1739;
t1676 = t1848 * t1679 - t1851 * t1739;
t1675 = -t1847 * t1680 + t1850 * t1681;
t1674 = t1850 * t1680 + t1847 * t1681;
t1673 = t1851 * t1675 + t1848 * t1700;
t1672 = t1848 * t1675 - t1851 * t1700;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t1824, -t1823, 0, -t1849 * t1828 + t1852 * t1829, 0, 0, 0, 0, 0, 0, t1852 * t1803 - t1849 * t1821, t1852 * t1804 + t1849 * t1819, t1852 * t1822 - t1849 * t1825, t1852 * t1775 - t1849 * t1811, 0, 0, 0, 0, 0, 0, t1852 * t1732 + t1849 * t1755, t1852 * t1738 + t1849 * t1764, t1852 * t1726 + t1849 * t1748, t1852 * t1714 + t1849 * t1719, 0, 0, 0, 0, 0, 0, t1911, -t1915, t1905, t1852 * t1677 + t1849 * t1678, 0, 0, 0, 0, 0, 0, t1911, t1905, t1915, t1852 * t1673 + t1849 * t1674; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1823, t1824, 0, t1852 * t1828 + t1849 * t1829, 0, 0, 0, 0, 0, 0, t1849 * t1803 + t1852 * t1821, t1849 * t1804 - t1852 * t1819, t1849 * t1822 + t1852 * t1825, t1849 * t1775 + t1852 * t1811, 0, 0, 0, 0, 0, 0, t1849 * t1732 - t1852 * t1755, t1849 * t1738 - t1852 * t1764, t1849 * t1726 - t1852 * t1748, t1849 * t1714 - t1852 * t1719, 0, 0, 0, 0, 0, 0, t1912, -t1916, t1907, t1849 * t1677 - t1852 * t1678, 0, 0, 0, 0, 0, 0, t1912, t1907, t1916, t1849 * t1673 - t1852 * t1674; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1801, t1802, 0, t1774, 0, 0, 0, 0, 0, 0, t1731, t1735, t1725, t1713, 0, 0, 0, 0, 0, 0, t1908, -t1694, t1902, t1676, 0, 0, 0, 0, 0, 0, t1908, t1902, t1694, t1672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1853, -qJDD(1), 0, t1829, 0, 0, 0, 0, 0, 0, t1803, t1804, t1822, t1775, 0, 0, 0, 0, 0, 0, t1732, t1738, t1726, t1714, 0, 0, 0, 0, 0, 0, t1906, -t1696, t1901, t1677, 0, 0, 0, 0, 0, 0, t1906, t1901, t1696, t1673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1853, 0, t1828, 0, 0, 0, 0, 0, 0, t1821, -t1819, t1825, t1811, 0, 0, 0, 0, 0, 0, -t1755, -t1764, -t1748, -t1719, 0, 0, 0, 0, 0, 0, -t1899, -t1709, -t1895, -t1678, 0, 0, 0, 0, 0, 0, -t1899, -t1895, t1709, -t1674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1801, t1802, 0, t1774, 0, 0, 0, 0, 0, 0, t1731, t1735, t1725, t1713, 0, 0, 0, 0, 0, 0, t1908, -t1694, t1902, t1676, 0, 0, 0, 0, 0, 0, t1908, t1902, t1694, t1672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1832, t1827, t1867, t1807, 0, 0, 0, 0, 0, 0, t1756, t1765, t1749, t1720, 0, 0, 0, 0, 0, 0, t1900, -t1707, t1896, t1679, 0, 0, 0, 0, 0, 0, t1900, t1896, t1707, t1675; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1826, t1831, -t1868, t1806, 0, 0, 0, 0, 0, 0, -t1770, -t1772, -t1786, -t1779, 0, 0, 0, 0, 0, 0, -t1858, -t1855, t1753, -t1739, 0, 0, 0, 0, 0, 0, -t1858, t1753, t1855, -t1700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1821, t1819, -t1825, -t1811, 0, 0, 0, 0, 0, 0, t1755, t1764, t1748, t1719, 0, 0, 0, 0, 0, 0, t1899, t1709, t1895, t1678, 0, 0, 0, 0, 0, 0, t1899, t1895, -t1709, t1674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1795, t1787, t1771, t1751, 0, 0, 0, 0, 0, 0, t1897, t1736, t1887, t1683, 0, 0, 0, 0, 0, 0, t1897, t1887, -t1736, t1681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1788, t1800, t1773, t1750, 0, 0, 0, 0, 0, 0, t1898, t1733, t1888, t1682, 0, 0, 0, 0, 0, 0, t1898, t1888, -t1733, t1680; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1770, t1772, t1786, t1779, 0, 0, 0, 0, 0, 0, t1858, t1855, -t1753, t1739, 0, 0, 0, 0, 0, 0, t1858, -t1753, -t1855, t1700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1889, t1757, t1859, t1699, 0, 0, 0, 0, 0, 0, t1889, t1859, -t1757, t1688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1758, t1890, -t1747, t1698, 0, 0, 0, 0, 0, 0, -t1758, -t1747, -t1890, -t1689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1858, t1855, -t1753, t1739, 0, 0, 0, 0, 0, 0, t1858, -t1753, -t1855, t1700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1889, t1859, -t1757, t1688; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1858, -t1753, -t1855, t1700; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1758, t1747, t1890, t1689;];
f_new_reg = t1;
