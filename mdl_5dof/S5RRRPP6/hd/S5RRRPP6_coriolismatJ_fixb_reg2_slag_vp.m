% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRPP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,theta4]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 21:03
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRPP6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRPP6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRPP6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RRRPP6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 21:02:05
% EndTime: 2019-12-31 21:02:23
% DurationCPUTime: 11.75s
% Computational Cost: add. (7769->620), mult. (17082->787), div. (0->0), fcn. (17137->6), ass. (0->438)
t392 = sin(pkin(8));
t394 = sin(qJ(3));
t393 = cos(pkin(8));
t396 = cos(qJ(3));
t563 = t393 * t396;
t328 = t392 * t394 - t563;
t564 = t393 * t394;
t567 = t392 * t396;
t330 = t564 + t567;
t395 = sin(qJ(2));
t301 = t330 * t395;
t524 = t301 * qJD(1);
t192 = -t328 * qJD(2) - t524;
t397 = cos(qJ(2));
t303 = t330 * t397;
t558 = t396 * t395;
t561 = t394 * t395;
t304 = -t392 * t561 + t393 * t558;
t634 = t330 / 0.2e1;
t637 = -t328 / 0.2e1;
t126 = -t301 * t634 + t304 * t637;
t672 = t126 * qJD(3);
t688 = -t192 * t303 - t672;
t687 = -t303 * t524 - t672;
t560 = t394 * t397;
t351 = t392 * t560;
t557 = t396 * t397;
t306 = t393 * t557 - t351;
t97 = -t306 * t301 - t304 * t303;
t677 = t97 * qJD(1);
t576 = t304 * t330;
t577 = t301 * t328;
t61 = t576 - t577;
t678 = t61 * qJD(3);
t686 = t678 + t677;
t322 = t328 ^ 2;
t644 = t330 ^ 2;
t174 = t644 - t322;
t685 = t174 * qJD(3);
t612 = t397 * pkin(7);
t616 = t395 * pkin(2);
t349 = -t612 + t616;
t339 = t396 * t349;
t368 = pkin(6) * t561;
t294 = t368 + t339;
t615 = t395 * pkin(3);
t233 = -qJ(4) * t557 + t294 + t615;
t566 = t393 * t233;
t338 = t394 * t349;
t506 = pkin(6) * t558;
t295 = t338 - t506;
t247 = -qJ(4) * t560 + t295;
t568 = t392 * t247;
t430 = t568 / 0.2e1 - t566 / 0.2e1;
t614 = t395 * pkin(4);
t408 = -t614 / 0.2e1 + t430;
t684 = t678 - t677 + qJD(2) * (t330 * t303 + t306 * t328);
t298 = t301 ^ 2;
t645 = t304 ^ 2;
t138 = t645 - t298;
t451 = qJD(1) * t138 + qJD(2) * t61;
t449 = qJD(1) * t61 + qJD(2) * t174;
t683 = -qJD(2) * t97 + qJD(3) * t138;
t638 = t304 / 0.2e1;
t636 = t328 / 0.2e1;
t635 = -t330 / 0.2e1;
t611 = -qJ(4) - pkin(7);
t348 = t611 * t396;
t334 = t393 * t348;
t477 = t611 * t394;
t470 = t392 * t477;
t663 = -t334 + t470;
t682 = -t663 / 0.2e1;
t511 = t397 * qJD(1);
t279 = t304 * t511;
t292 = t304 * qJD(3);
t676 = t279 - t292;
t512 = t395 * qJD(2);
t454 = t395 * t301 - t397 * t303;
t651 = t454 * qJD(1);
t675 = -t328 * t512 - t651;
t664 = t322 + t644;
t674 = qJD(4) * t664;
t665 = t298 + t645;
t673 = qJD(4) * t665;
t518 = t330 * qJD(2);
t490 = t328 * t518;
t671 = -t126 * qJD(1) + t490;
t453 = t576 + t577;
t670 = qJD(1) * t665 + qJD(2) * t453;
t521 = t304 * qJD(1);
t492 = t301 * t521;
t669 = t126 * qJD(2) - t492;
t668 = qJD(1) * t453 + qJD(2) * t664;
t613 = t397 * pkin(2);
t469 = -t395 * pkin(7) - t613;
t445 = -pkin(1) + t469;
t332 = t396 * t445;
t468 = -qJ(4) * t558 + t332;
t621 = pkin(6) * t394;
t220 = (-pkin(3) - t621) * t397 + t468;
t199 = t392 * t220;
t504 = pkin(6) * t557;
t246 = t504 + (t611 * t395 - pkin(1) - t613) * t394;
t565 = t393 * t246;
t117 = t565 + t199;
t667 = t117 / 0.2e1;
t572 = t328 * qJ(5);
t617 = t394 * pkin(3);
t618 = t330 * pkin(4);
t202 = t572 + t617 + t618;
t666 = t202 / 0.2e1;
t626 = t393 / 0.2e1;
t628 = t392 / 0.2e1;
t546 = t557 * t628 + t560 * t626;
t184 = -t303 / 0.2e1 + t546;
t662 = -t184 * qJD(2) + t676;
t575 = t306 * qJ(5);
t620 = t303 * pkin(4);
t661 = -t575 / 0.2e1 + t620 / 0.2e1;
t315 = t328 * qJD(3);
t187 = t351 / 0.2e1 + (t637 - t563 / 0.2e1) * t397;
t531 = t187 * qJD(1);
t660 = t531 + t315;
t253 = -t392 * t348 - t393 * t477;
t456 = t253 * t330 - t328 * t663;
t655 = qJD(2) * t456;
t653 = qJD(4) * t456;
t652 = t453 * qJD(4);
t203 = t392 * t233;
t237 = t393 * t247;
t548 = -t203 / 0.2e1 - t237 / 0.2e1;
t650 = t253 * t638 + t301 * t682;
t569 = t392 * t246;
t116 = t393 * t220 - t569;
t649 = t116 * t635 + t117 * t637;
t100 = t397 * pkin(4) - t116;
t556 = t397 * qJ(5);
t99 = t117 - t556;
t648 = t100 * t635 + t99 * t636;
t388 = t394 ^ 2;
t390 = t396 ^ 2;
t360 = t390 - t388;
t513 = t395 * qJD(1);
t498 = t396 * t513;
t647 = t360 * qJD(2) - 0.2e1 * t394 * t498;
t509 = t397 * qJD(3);
t646 = qJD(2) * t454 - t304 * t509;
t507 = pkin(6) * t560;
t245 = t468 - t507;
t570 = t392 * t245;
t132 = t565 + t570;
t643 = -t132 / 0.2e1;
t133 = t393 * t245 - t569;
t642 = t133 / 0.2e1;
t641 = t663 / 0.2e1;
t640 = -t253 / 0.2e1;
t482 = -t334 / 0.2e1;
t369 = t392 * pkin(3) + qJ(5);
t633 = -t369 / 0.2e1;
t632 = t369 / 0.2e1;
t371 = -t393 * pkin(3) - pkin(4);
t631 = t371 / 0.2e1;
t379 = -t396 * pkin(3) - pkin(2);
t630 = -t379 / 0.2e1;
t629 = -t392 / 0.2e1;
t627 = -t393 / 0.2e1;
t625 = -t394 / 0.2e1;
t624 = -t395 / 0.2e1;
t623 = -t396 / 0.2e1;
t622 = -t397 / 0.2e1;
t619 = t304 * pkin(4);
t386 = t397 * pkin(6);
t610 = pkin(3) * qJD(3);
t128 = t237 + t203;
t108 = t395 * qJ(5) + t128;
t127 = t566 - t568;
t109 = -t127 - t614;
t340 = pkin(3) * t561 + t395 * pkin(6);
t153 = t301 * pkin(4) - t304 * qJ(5) + t340;
t366 = pkin(3) * t560;
t341 = t386 + t366;
t154 = t341 - t575 + t620;
t9 = t100 * t109 + t108 * t99 + t153 * t154;
t609 = t9 * qJD(1);
t39 = -t116 * t304 - t117 * t301;
t607 = qJD(1) * t39;
t505 = pkin(3) * t558;
t578 = t301 * qJ(5);
t158 = t505 + t578 + t619;
t10 = t100 * t132 + t133 * t99 + t153 * t158;
t606 = t10 * qJD(1);
t11 = t100 * t306 - t108 * t301 + t109 * t304 - t99 * t303;
t604 = t11 * qJD(1);
t601 = t132 * t253;
t600 = t132 * t397;
t599 = t133 * t663;
t598 = t133 * t397;
t597 = t153 * t304;
t16 = (t132 - t99) * t304 + (-t100 - t133) * t301;
t596 = t16 * qJD(1);
t17 = -t116 * t306 - t117 * t303 - t127 * t304 - t128 * t301;
t595 = t17 * qJD(1);
t18 = (-t117 + t132) * t304 + (t116 - t133) * t301;
t594 = t18 * qJD(1);
t21 = t116 * t127 + t117 * t128 + t340 * t341;
t593 = t21 * qJD(1);
t22 = t108 * t397 + t153 * t306 + t154 * t304 - t99 * t395;
t592 = t22 * qJD(1);
t23 = -t100 * t395 + t109 * t397 + t153 * t303 + t154 * t301;
t591 = t23 * qJD(1);
t24 = -t116 * t132 + t117 * t133 + t340 * t505;
t590 = t24 * qJD(1);
t589 = t663 * t397;
t587 = t253 * t395;
t586 = t253 * t397;
t584 = t663 * t395;
t198 = t328 * pkin(4) - t330 * qJ(5) + t379;
t433 = t153 * t634 + t198 * t638;
t405 = t622 * t663 - t433;
t27 = -t405 + t408;
t583 = t27 * qJD(1);
t29 = t158 * t301 + t597 + t600;
t582 = t29 * qJD(1);
t290 = -t332 + t507;
t581 = t290 * t397;
t291 = t394 * t445 + t504;
t580 = t291 * t397;
t30 = -t153 * t301 + t158 * t304 + t598;
t579 = t30 * qJD(1);
t31 = -t116 * t395 + t127 * t397 - t341 * t301 - t340 * t303;
t574 = t31 * qJD(1);
t32 = -t117 * t395 + t128 * t397 + t341 * t304 + t340 * t306;
t573 = t32 * qJD(1);
t37 = t100 * t304 - t99 * t301;
t571 = t37 * qJD(1);
t562 = t394 * t301;
t389 = t395 ^ 2;
t559 = t396 * t389;
t44 = t99 * t397 + t597;
t555 = t44 * qJD(1);
t46 = -t301 * t505 - t340 * t304 - t600;
t554 = t46 * qJD(1);
t47 = -t340 * t301 + t304 * t505 + t598;
t553 = t47 * qJD(1);
t52 = (t294 * t395 - t581) * t396 + (t295 * t395 + t580) * t394;
t552 = t52 * qJD(1);
t71 = t397 * pkin(6) ^ 2 * t395 - t290 * t294 + t291 * t295;
t551 = t71 * qJD(1);
t391 = t397 ^ 2;
t361 = t391 - t389;
t545 = qJD(2) * t394;
t544 = qJD(2) * t396;
t543 = qJD(3) * t394;
t542 = qJD(3) * t396;
t541 = qJD(5) * t301;
t540 = t133 * qJD(3);
t140 = t295 * t397 + (-t291 + 0.2e1 * t504) * t395;
t539 = t140 * qJD(1);
t141 = t290 * t395 + (t294 - 0.2e1 * t368) * t397;
t538 = t141 * qJD(1);
t171 = -t304 * t395 + t306 * t397;
t535 = t171 * qJD(1);
t534 = t184 * qJD(1);
t427 = -t567 / 0.2e1 - t564 / 0.2e1;
t185 = (t635 + t427) * t397;
t533 = t185 * qJD(1);
t186 = -t351 / 0.2e1 + (t637 + t563 / 0.2e1) * t397;
t177 = t186 * qJD(1);
t532 = t186 * qJD(4);
t530 = t187 * qJD(4);
t188 = t303 / 0.2e1 + t546;
t529 = t188 * qJD(1);
t189 = (t634 + t427) * t397;
t528 = t189 * qJD(1);
t224 = t389 * t621 + t581;
t527 = t224 * qJD(1);
t225 = -pkin(6) * t559 - t580;
t526 = t225 * qJD(1);
t525 = t253 * qJD(3);
t523 = t301 * qJD(3);
t522 = t301 * qJD(4);
t293 = t304 * qJD(4);
t320 = (t388 / 0.2e1 - t390 / 0.2e1) * t395;
t520 = t320 * qJD(3);
t519 = t328 * qJD(4);
t316 = t330 * qJD(3);
t517 = t330 * qJD(5);
t336 = t361 * t394;
t516 = t336 * qJD(1);
t337 = t396 * t391 - t559;
t515 = t337 * qJD(1);
t514 = t361 * qJD(1);
t510 = t397 * qJD(2);
t508 = t397 * qJD(5);
t503 = pkin(1) * t513;
t502 = pkin(1) * t511;
t380 = t617 / 0.2e1;
t500 = t615 / 0.2e1;
t499 = t631 - pkin(4) / 0.2e1;
t496 = t394 * t509;
t495 = t396 * t509;
t493 = t397 * t522;
t243 = t328 * t316;
t489 = t394 * t542;
t488 = t394 * t544;
t487 = t395 * t510;
t486 = t395 * t511;
t485 = t396 * t512;
t484 = -t599 / 0.2e1;
t481 = -t558 / 0.2e1;
t480 = qJ(5) / 0.2e1 + t632;
t479 = -t199 / 0.2e1 - t565 / 0.2e1;
t478 = t366 / 0.2e1 + t386 / 0.2e1;
t476 = t253 * t306 - t303 * t663;
t474 = t185 * qJD(2) - t279;
t278 = t301 * t511;
t136 = t186 * qJD(2) - t278;
t356 = t396 * t500;
t364 = -qJD(3) + t511;
t473 = t389 * t489;
t471 = t394 * t485;
t467 = t565 / 0.2e1 + t570 / 0.2e1;
t399 = t100 * t641 + t601 / 0.2e1 + t153 * t666 + t158 * t198 / 0.2e1 + t99 * t640;
t435 = t108 * t632 + t109 * t631;
t1 = t484 - t399 + t435;
t38 = t198 * t202;
t466 = -t1 * qJD(1) + t38 * qJD(2);
t402 = (t640 + t253 / 0.2e1) * t301;
t431 = t303 * t633 + t306 * t631;
t3 = (t99 / 0.2e1 + t643) * t330 + (t642 + t100 / 0.2e1) * t328 + t402 + t431;
t465 = t3 * qJD(1);
t411 = (t303 * t629 + t306 * t627) * pkin(3);
t5 = (t667 + t643) * t330 + (t642 - t116 / 0.2e1) * t328 + t411 + t402;
t464 = t5 * qJD(1);
t48 = t379 * t617;
t406 = t116 * t641 + t253 * t667 - t601 / 0.2e1;
t434 = t127 * t626 + t128 * t628;
t7 = t484 + (t340 * t625 + t379 * t481 + t434) * pkin(3) + t406;
t463 = -t7 * qJD(1) + t48 * qJD(2);
t228 = -t586 / 0.2e1;
t400 = t153 * t637 + t158 * t634 - t198 * t301 / 0.2e1 + t202 * t638;
t415 = t395 * t480 - t548;
t12 = t228 + t400 + t415;
t63 = t198 * t328 - t202 * t330;
t462 = -t12 * qJD(1) + t63 * qJD(2);
t398 = t158 * t636 + t301 * t666 + t589 / 0.2e1 + t433;
t14 = t395 * t499 + t398 + t430;
t62 = t198 * t330 + t202 * t328;
t461 = t14 * qJD(1) + t62 * qJD(2);
t403 = t478 - t650;
t19 = t403 + t648 + t661;
t460 = -t19 * qJD(1) + t655;
t25 = t403 - t649;
t459 = -qJD(1) * t25 + t655;
t54 = t301 * t480 - t304 * t499 + t356;
t92 = t328 * t480 - t330 * t499 + t380;
t458 = qJD(1) * t54 + qJD(2) * t92;
t455 = -t294 * t394 + t295 * t396;
t182 = t328 * t617 + t379 * t330;
t404 = -t589 / 0.2e1 + t340 * t635 + t304 * t630;
t34 = (-t562 / 0.2e1 + (t328 * t623 + t626) * t395) * pkin(3) + t404 - t430;
t447 = -t34 * qJD(1) + t182 * qJD(2);
t183 = -t379 * t328 + t330 * t617;
t229 = t586 / 0.2e1;
t432 = -t301 * t630 + t340 * t636;
t33 = t229 + (t304 * t625 + (t330 * t623 + t629) * t395) * pkin(3) + t432 + t548;
t446 = -t33 * qJD(1) + t183 * qJD(2);
t444 = t364 * t395;
t429 = -t301 * t628 + t304 * t627;
t146 = (t481 + t429) * pkin(3);
t428 = t328 * t629 + t330 * t627;
t173 = (t625 + t428) * pkin(3);
t439 = qJD(1) * t146 + qJD(2) * t173;
t193 = t518 + t521;
t438 = t616 / 0.2e1 - t612 / 0.2e1;
t416 = t438 * t394;
t239 = t338 / 0.2e1 + t416;
t437 = pkin(2) * t544 - t239 * qJD(1);
t417 = t438 * t396;
t240 = -t339 / 0.2e1 - t417;
t436 = pkin(2) * t545 - t240 * qJD(1);
t426 = t396 * t444;
t110 = t624 - t126;
t425 = t110 * qJD(1) + t490;
t272 = -t320 * qJD(1) + t488;
t420 = t187 * qJD(2) - t278 + t523;
t418 = (qJD(2) * t303 + t292) * t301;
t414 = t478 + t650;
t256 = t394 * qJD(1) * t559 + t320 * qJD(2);
t335 = t360 * t389;
t413 = t335 * qJD(1) + 0.2e1 * t471;
t244 = t482 + t334 / 0.2e1;
t42 = t397 * t480 + t467 + t479;
t410 = t42 * qJD(1) - t244 * qJD(2) - t369 * qJD(3);
t277 = t391 + t645;
t407 = t277 * qJD(1) + t304 * t518 - t509;
t401 = t132 * t634 + t133 * t637 + t304 * t682 + t663 * t638;
t375 = -t513 / 0.2e1;
t374 = t513 / 0.2e1;
t373 = t512 / 0.2e1;
t327 = (t511 - qJD(3) / 0.2e1) * t395;
t317 = t330 * qJD(4);
t238 = t663 * qJD(3);
t216 = t304 * t517;
t201 = t368 + t339 / 0.2e1 - t417;
t200 = t506 - t338 / 0.2e1 + t416;
t176 = 0.2e1 * t482 + t470;
t172 = pkin(3) * t428 + t380;
t157 = qJD(2) * t644 + t330 * t521;
t149 = -t315 - t177;
t145 = pkin(3) * t429 + t356;
t137 = t188 * qJD(2) + t279;
t129 = t132 * qJD(3);
t112 = -t171 * qJD(2) + t301 * t509;
t111 = t624 + t126;
t94 = (qJD(2) * t306 - t523) * t304;
t93 = t328 * t633 + t330 * t631 + t380 + t572 / 0.2e1 + t618 / 0.2e1;
t81 = -t189 * qJD(2) - t676;
t77 = -qJD(3) * t186 + t535;
t70 = t599 / 0.2e1;
t55 = -t301 * t632 + t304 * t631 + t356 + t578 / 0.2e1 + t619 / 0.2e1;
t53 = -t187 * qJD(3) + t330 * t512 - t535;
t51 = -t306 * t521 + t672;
t45 = t193 * t306 + t672;
t43 = t369 * t622 - t556 / 0.2e1 + t467 - t479;
t36 = t304 * t380 + t330 * t356 + t615 * t629 + t228 - t432 + t548;
t35 = pkin(3) * t562 / 0.2e1 + t328 * t356 + t393 * t500 - t404 - t430;
t28 = t405 + t408;
t26 = t414 + t649;
t20 = t414 - t648 + t661;
t15 = t371 * t624 + t398 - t408;
t13 = t229 - t400 + t415;
t8 = pkin(3) * t434 + t340 * t380 + t356 * t379 - t406 + t70;
t6 = t116 * t636 + t117 * t635 + t401 + t411;
t4 = t100 * t637 + t99 * t635 + t401 + t431;
t2 = t70 + t399 + t435;
t40 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t487, t361 * qJD(2), 0, -t487, 0, 0, -pkin(1) * t512, -pkin(1) * t510, 0, 0, t390 * t487 - t473, -t335 * qJD(3) - 0.2e1 * t397 * t471, -t337 * qJD(2) + t395 * t496, t388 * t487 + t473, t336 * qJD(2) + t395 * t495, -t487, -t141 * qJD(2) - t225 * qJD(3), t140 * qJD(2) - t224 * qJD(3), -qJD(2) * t52, qJD(2) * t71, t94, -t683, t112, t418, -t646, -t487, -t31 * qJD(2) - t46 * qJD(3) + t293 * t397, t32 * qJD(2) + t47 * qJD(3) - t493, qJD(2) * t17 + qJD(3) * t18 + t673, qJD(2) * t21 + qJD(3) * t24 + qJD(4) * t39, t94, t112, t683, -t487, t646, t418, t23 * qJD(2) + t29 * qJD(3) + (qJD(4) * t397 - t541) * t304, t11 * qJD(2) + t16 * qJD(3) + t301 * t508 + t673, -t22 * qJD(2) - t30 * qJD(3) + t277 * qJD(5) + t493, qJD(2) * t9 + qJD(3) * t10 + qJD(4) * t37 - qJD(5) * t44; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t486, t514, t510, -t486, -t512, 0, -pkin(6) * t510 - t503, pkin(6) * t512 - t502, 0, 0, -t520 + (t390 * t513 + t488) * t397, -0.2e1 * t395 * t489 + t397 * t647, t394 * t512 - t515, t520 + (t388 * t513 - t488) * t397, t485 + t516, -t327, -t538 + (t394 * t469 - t504) * qJD(2) + t201 * qJD(3), t539 + (t396 * t469 + t507) * qJD(2) + t200 * qJD(3), qJD(2) * t455 - t552, t551 + (-pkin(2) * t386 + pkin(7) * t455) * qJD(2), t45, -t684, t53, t688, -t184 * qJD(3) + t675, -t327, -t574 + (t379 * t303 + t341 * t328 - t587) * qJD(2) + t35 * qJD(3) - t185 * qJD(4), t573 + (t379 * t306 + t341 * t330 - t584) * qJD(2) + t36 * qJD(3) + t532, t595 + (-t127 * t330 - t128 * t328 + t476) * qJD(2) + t6 * qJD(3) + t652, t593 + (-t127 * t253 + t128 * t663 + t341 * t379) * qJD(2) + t8 * qJD(3) + t26 * qJD(4), t45, t53, t684, -t327, -t189 * qJD(3) - t675, t688, t591 + (t154 * t328 + t198 * t303 - t587) * qJD(2) + t15 * qJD(3) + t188 * qJD(4) + t111 * qJD(5), t604 + (-t108 * t328 + t109 * t330 + t476) * qJD(2) + t4 * qJD(3) + t652 - t187 * qJD(5), -t592 + (-t154 * t330 - t198 * t306 + t584) * qJD(2) + t13 * qJD(3) - t532 + t216, t609 + (t108 * t663 + t109 * t253 + t154 * t198) * qJD(2) + t2 * qJD(3) + t20 * qJD(4) + t28 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t256, -t413, t394 * t444, t256, t426, t373, t201 * qJD(2) - t291 * qJD(3) - t526, t200 * qJD(2) + t290 * qJD(3) - t527, 0, 0, t669, -t451, -t420, -t669, t662, t373, qJD(2) * t35 - t129 - t554, qJD(2) * t36 - t540 + t553, t594 + t6 * qJD(2) + (t301 * t393 - t304 * t392) * t610, t590 + t8 * qJD(2) + t145 * qJD(4) + (-t132 * t393 + t133 * t392) * t610, t669, -t420, t451, t373, t81, -t669, qJD(2) * t15 - t129 + t582, t596 + t4 * qJD(2) + (-t371 * t301 - t369 * t304) * qJD(3) - t541, t13 * qJD(2) - t508 + t540 - t579, t606 + t2 * qJD(2) + (t132 * t371 + t133 * t369) * qJD(3) + t55 * qJD(4) + t43 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t474, t136, t670, qJD(2) * t26 + qJD(3) * t145 + t607, 0, 0, 0, 0, 0, 0, t137, t670, -t136, qJD(2) * t20 + qJD(3) * t55 + t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t111 * qJD(2) - t492, -t420, t407, qJD(2) * t28 + qJD(3) * t43 - t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t486, -t514, 0, t486, 0, 0, t503, t502, 0, 0, -t390 * t486 - t520, 0.2e1 * t394 * t426, -t495 + t515, -t388 * t486 + t520, t496 - t516, t327, t240 * qJD(3) + t538, t239 * qJD(3) - t539, t552, -t551, t51, -t686, t77, t687, -qJD(3) * t185 + t651, t327, -t34 * qJD(3) - t184 * qJD(4) + t574, -qJD(3) * t33 + t530 - t573, -qJD(3) * t5 - t595 + t652, -qJD(3) * t7 - qJD(4) * t25 - t593, t51, t77, t686, t327, -qJD(3) * t188 - t651, t687, qJD(3) * t14 + qJD(4) * t189 - qJD(5) * t110 - t591, -qJD(3) * t3 - qJD(5) * t186 - t604 + t652, -t12 * qJD(3) + t216 - t530 + t592, -qJD(3) * t1 - qJD(4) * t19 - qJD(5) * t27 - t609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, t360 * qJD(3), 0, -t489, 0, 0, -pkin(2) * t543, -pkin(2) * t542, 0, 0, -t243, -t685, 0, t243, 0, 0, t182 * qJD(3), t183 * qJD(3), t674, qJD(3) * t48 + t653, -t243, 0, t685, 0, 0, t243, t62 * qJD(3) - t328 * t517, t674, t63 * qJD(3) + qJD(5) * t644, t38 * qJD(3) - t198 * t517 + t653; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t272, t647, -t364 * t396, -t272, t364 * t394, t375, -pkin(7) * t542 - t436, pkin(7) * t543 - t437, 0, 0, -t671, -t449, t149, t671, -t316 - t533, t375, -t238 + t447, t446 + t525, (t328 * t393 - t330 * t392) * t610 - t464, t172 * qJD(4) + (-t253 * t392 - t393 * t663) * t610 + t463, -t671, t149, t449, t375, t316 - t529, t671, -t238 + t461, (-t371 * t328 - t369 * t330) * qJD(3) - qJD(5) * t328 - t465, t462 - t525, (-t253 * t369 + t371 * t663) * qJD(3) + t93 * qJD(4) + t176 * qJD(5) + t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t534, t531, t668, qJD(3) * t172 + t459, 0, 0, 0, 0, 0, 0, t528, t668, -t531, qJD(3) * t93 + t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t425, t149, t157, t176 * qJD(3) - t198 * t518 - t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t256, t413, (-t394 * t513 + t544) * t397, -t256, (-t498 - t545) * t397, t373, -t240 * qJD(2) + t526, -t239 * qJD(2) + t527, 0, 0, -t669, t451, t136, t669, t474, t373, t34 * qJD(2) - t293 + t554, t33 * qJD(2) + t522 - t553, qJD(2) * t5 - t594, qJD(2) * t7 + qJD(4) * t146 - t590, -t669, t136, -t451, t373, t137, t669, -t14 * qJD(2) - t293 - t582, qJD(2) * t3 - t596, t12 * qJD(2) - t508 - t522 + t579, qJD(2) * t1 - qJD(4) * t54 - qJD(5) * t42 - t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t272, -t647, t396 * t511, t272, -t394 * t511, t374, t436, t437, 0, 0, t671, t449, t177, -t671, t533, t374, -t317 - t447, -t446 + t519, t464, qJD(4) * t173 - t463, t671, t177, -t449, t374, t529, -t671, -t317 - t461, t465, -t462 - t519, -t92 * qJD(4) + t244 * qJD(5) - t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t369 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t193, -t192, 0, t439, 0, 0, 0, 0, 0, 0, -t193, 0, t192, -t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t364, -t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t662, -t420, -t670, qJD(2) * t25 - qJD(3) * t146 - t607, 0, 0, 0, 0, 0, 0, t81, -t670, t420, t19 * qJD(2) + t54 * qJD(3) - t304 * qJD(5) - t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316 + t534, -t660, -t668, -qJD(3) * t173 - t459, 0, 0, 0, 0, 0, 0, t316 - t528, -t668, t660, t92 * qJD(3) - t460 - t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, t192, 0, -t439, 0, 0, 0, 0, 0, 0, t193, 0, -t192, t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110 * qJD(2) + t492, t136, -t407, t27 * qJD(2) + t42 * qJD(3) + t293 + t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t425, t177, -t157, t583 - t244 * qJD(3) + (qJD(2) * t198 + qJD(4)) * t330; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t364, t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t40;
