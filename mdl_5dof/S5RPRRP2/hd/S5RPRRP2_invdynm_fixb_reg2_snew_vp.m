% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RPRRP2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d3,d4,theta2]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2020-01-03 11:45
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RPRRP2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPRRP2_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPRRP2_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RPRRP2_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RPRRP2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S5RPRRP2_invdynm_fixb_reg2_snew_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2020-01-03 11:45:42
% EndTime: 2020-01-03 11:45:50
% DurationCPUTime: 8.76s
% Computational Cost: add. (27120->425), mult. (41233->528), div. (0->0), fcn. (22674->8), ass. (0->317)
t820 = qJD(1) + qJD(3);
t818 = t820 ^ 2;
t831 = cos(qJ(3));
t819 = qJDD(1) + qJDD(3);
t828 = sin(qJ(3));
t893 = t828 * t819;
t772 = t831 * t818 + t893;
t888 = t831 * t819;
t775 = t828 * t818 - t888;
t825 = sin(pkin(8));
t826 = cos(pkin(8));
t715 = t826 * t772 - t825 * t775;
t823 = g(1) - qJDD(2);
t750 = pkin(6) * t772 - t831 * t823;
t932 = pkin(6) * t775 - t828 * t823;
t662 = qJ(2) * t715 + t826 * t750 - t825 * t932;
t829 = sin(qJ(1));
t832 = cos(qJ(1));
t719 = t825 * t772 + t826 * t775;
t931 = t829 * t715 + t832 * t719;
t939 = qJ(2) * t719 + t825 * t750 + t826 * t932;
t949 = pkin(5) * t931 + t829 * t662 + t832 * t939;
t676 = t832 * t715 - t829 * t719;
t948 = -pkin(5) * t676 - t832 * t662 + t829 * t939;
t797 = t832 * g(2) + t829 * g(3);
t841 = qJDD(1) * pkin(1) - t797;
t796 = t829 * g(2) - t832 * g(3);
t834 = qJD(1) ^ 2;
t845 = t834 * pkin(1) + t796;
t727 = t825 * t841 - t826 * t845;
t724 = -t834 * pkin(2) + t727;
t837 = t825 * t845 + t826 * t841;
t836 = qJDD(1) * pkin(2) + t837;
t681 = t828 * t724 - t831 * t836;
t682 = t831 * t724 + t828 * t836;
t864 = t828 * t681 + t831 * t682;
t623 = t831 * t681 - t828 * t682;
t898 = t826 * t623;
t574 = -t825 * t864 + t898;
t899 = t825 * t623;
t934 = t826 * t864 + t899;
t947 = t829 * t574 + t832 * t934;
t946 = -t832 * t574 + t829 * t934;
t863 = t826 * t727 - t825 * t837;
t686 = -t825 * t727 - t826 * t837;
t886 = t832 * t686;
t936 = t829 * t863 - t886;
t891 = t829 * t686;
t935 = t832 * t863 + t891;
t785 = t825 * qJDD(1) + t826 * t834;
t754 = qJ(2) * t785 - t826 * t823;
t786 = t826 * qJDD(1) - t825 * t834;
t847 = -qJ(2) * t786 - t825 * t823;
t920 = -t832 * t785 - t829 * t786;
t933 = pkin(5) * t920 - t832 * t754 + t829 * t847;
t827 = sin(qJ(4));
t830 = cos(qJ(4));
t795 = t830 * t818 * t827;
t783 = qJDD(4) + t795;
t914 = pkin(4) * t783;
t921 = t829 * t785 - t832 * t786;
t930 = pkin(5) * t921 + t829 * t754 + t832 * t847;
t810 = t830 * t823;
t672 = -t818 * pkin(3) + t819 * pkin(7) + t682;
t896 = t827 * t672;
t653 = t810 + t896;
t654 = t830 * t672 - t827 * t823;
t602 = t827 * t653 + t830 * t654;
t918 = pkin(1) * t823;
t771 = t830 * t783;
t822 = t830 ^ 2;
t808 = t822 * t818;
t833 = qJD(4) ^ 2;
t793 = -t808 - t833;
t735 = t827 * t793 + t771;
t917 = pkin(3) * t735;
t821 = t827 ^ 2;
t900 = t821 * t818;
t791 = -t833 - t900;
t784 = qJDD(4) - t795;
t894 = t827 * t784;
t736 = t830 * t791 - t894;
t916 = pkin(3) * t736;
t878 = qJD(4) * t820;
t803 = t830 * t878;
t806 = t827 * t819;
t766 = t806 + t803;
t842 = t810 + (t766 - t803) * qJ(5) - t914;
t877 = (qJD(5) * t820);
t860 = t672 + (2 * t877);
t628 = t860 * t827 + t842;
t915 = pkin(4) * t628;
t895 = t827 * t783;
t739 = t830 * t793 - t895;
t802 = t827 * t878;
t807 = t830 * t819;
t768 = t807 - 0.2e1 * t802;
t696 = t828 * t739 + t831 * t768;
t698 = t831 * t739 - t828 * t768;
t647 = t826 * t696 + t825 * t698;
t649 = -t825 * t696 + t826 * t698;
t913 = pkin(5) * (t829 * t647 - t832 * t649);
t889 = t830 * t784;
t742 = -t827 * t791 - t889;
t765 = t806 + 0.2e1 * t803;
t697 = t828 * t742 - t831 * t765;
t699 = t831 * t742 + t828 * t765;
t648 = t826 * t697 + t825 * t699;
t650 = -t825 * t697 + t826 * t699;
t912 = pkin(5) * (t829 * t648 - t832 * t650);
t879 = t821 + t822;
t770 = t879 * t819;
t776 = t808 + t900;
t721 = t828 * t770 + t831 * t776;
t722 = t831 * t770 - t828 * t776;
t677 = t826 * t721 + t825 * t722;
t678 = -t825 * t721 + t826 * t722;
t911 = pkin(5) * (t829 * t677 - t832 * t678);
t909 = pkin(6) * t696;
t908 = pkin(6) * t697;
t907 = pkin(6) * t721;
t906 = pkin(7) * t735;
t905 = pkin(7) * t736;
t904 = qJ(2) * t647;
t903 = qJ(2) * t648;
t902 = qJ(2) * t677;
t901 = t820 * t827;
t897 = t827 * t628;
t671 = -t819 * pkin(3) - t818 * pkin(7) + t681;
t667 = t827 * t671;
t890 = t830 * t628;
t668 = t830 * t671;
t883 = -pkin(3) * t671 + pkin(7) * t602;
t882 = pkin(3) * t768 + pkin(7) * t739;
t881 = -pkin(3) * t765 + pkin(7) * t742;
t880 = pkin(3) * t776 + pkin(7) * t770;
t876 = pkin(4) * t806;
t875 = t827 * t893;
t874 = t827 * t888;
t873 = t667 + t881;
t872 = -t668 + t882;
t585 = t828 * t602 - t831 * t671;
t871 = pkin(2) * t585 + t883;
t870 = t830 * t877;
t869 = -pkin(1) * t735 + qJ(2) * t649;
t868 = -pkin(1) * t736 + qJ(2) * t650;
t867 = -pkin(2) * t735 + pkin(6) * t698;
t866 = -pkin(2) * t736 + pkin(6) * t699;
t787 = -t829 * qJDD(1) - t832 * t834;
t865 = pkin(5) * t787 + t832 * g(1);
t861 = -t829 * t796 - t832 * t797;
t859 = t828 * t795;
t858 = t831 * t795;
t800 = 0.2e1 * t870;
t767 = t807 - t802;
t782 = qJD(4) * pkin(4) - qJ(5) * t901;
t848 = pkin(4) * t808 - t767 * qJ(5) + qJD(4) * t782 - t654;
t629 = t800 - t848;
t615 = pkin(4) * t776 + qJ(5) * t807 + t629;
t626 = (qJ(5) * t819 + t860) * t827 + t842;
t857 = t830 * t615 + t827 * t626 + t880;
t632 = -t767 * pkin(4) - qJ(5) * t808 + t782 * t901 + qJDD(5) + t671;
t630 = -qJ(5) * t791 + t632;
t728 = -pkin(4) * t765 - qJ(5) * t784;
t856 = t827 * t630 + t830 * t728 + t881;
t855 = t880 + t602;
t695 = pkin(2) * t697;
t854 = t695 + t873;
t694 = pkin(2) * t696;
t853 = t694 + t872;
t852 = -pkin(2) * t775 - t681;
t714 = pkin(2) * t721;
t851 = t714 + t857;
t850 = t695 + t856;
t849 = t714 + t855;
t601 = t830 * t653 - t827 * t654;
t846 = t832 * t796 - t829 * t797;
t584 = t830 * t629 + t897;
t588 = -pkin(4) * t632 + qJ(5) * t629;
t844 = -pkin(3) * t632 + pkin(7) * t584 + qJ(5) * t897 + t830 * t588;
t620 = pkin(4) * t768 + qJ(5) * t793 - t632;
t843 = -qJ(5) * t895 + t830 * t620 + t882;
t840 = pkin(4) * t791 + t848;
t563 = t828 * t584 - t831 * t632;
t839 = pkin(2) * t563 + t844;
t838 = t694 + t843;
t835 = -pkin(2) * t772 - t682;
t792 = t808 - t833;
t790 = t833 - t900;
t788 = t832 * qJDD(1) - t829 * t834;
t777 = -t808 + t900;
t761 = pkin(5) * t788 + t829 * g(1);
t760 = t879 * t878;
t746 = t828 * qJDD(4) + t831 * t760;
t745 = -t831 * qJDD(4) + t828 * t760;
t744 = t830 * t766 - t821 * t878;
t743 = -t827 * t767 - t822 * t878;
t741 = t827 * t792 + t889;
t740 = -t827 * t790 + t771;
t738 = t830 * t792 - t894;
t737 = t830 * t790 + t895;
t730 = (t767 - t802) * t830;
t729 = (t766 + t803) * t827;
t713 = pkin(6) * t722;
t711 = -t827 * t765 + t830 * t768;
t710 = t830 * t765 + t827 * t768;
t709 = t831 * t740 + t875;
t708 = t831 * t738 + t828 * t807;
t707 = t828 * t740 - t874;
t706 = t828 * t738 - t830 * t888;
t705 = t831 * t744 - t859;
t704 = t831 * t743 + t859;
t703 = t828 * t744 + t858;
t702 = t828 * t743 - t858;
t701 = pkin(1) * t786 + t837;
t700 = -pkin(1) * t785 - t727;
t691 = -t825 * t745 + t826 * t746;
t690 = t826 * t745 + t825 * t746;
t689 = t831 * t711 + t828 * t777;
t688 = t828 * t711 - t831 * t777;
t683 = pkin(1) * t686;
t680 = qJ(2) * t863 + t918;
t674 = pkin(1) * t677;
t673 = qJ(2) * t678;
t666 = -t825 * t707 + t826 * t709;
t665 = -t825 * t706 + t826 * t708;
t664 = t826 * t707 + t825 * t709;
t663 = t826 * t706 + t825 * t708;
t658 = -t825 * t703 + t826 * t705;
t657 = -t825 * t702 + t826 * t704;
t656 = t826 * t703 + t825 * t705;
t655 = t826 * t702 + t825 * t704;
t646 = pkin(1) * t648;
t645 = pkin(1) * t647;
t642 = t668 - t905;
t641 = t667 - t906;
t640 = t829 * t690 - t832 * t691;
t639 = t832 * t690 + t829 * t691;
t638 = t654 - t916;
t637 = t653 - t917;
t636 = -t825 * t688 + t826 * t689;
t635 = t826 * t688 + t825 * t689;
t634 = -pkin(1) * t719 + t852;
t633 = -pkin(1) * t715 + t835;
t619 = pkin(2) * t623;
t616 = pkin(2) * t823 + pkin(6) * t864;
t614 = pkin(5) * (t832 * t677 + t829 * t678);
t612 = t800 - t840 - t916;
t611 = t628 - t914 - t917;
t610 = t829 * t664 - t832 * t666;
t609 = t829 * t663 - t832 * t665;
t608 = t832 * t664 + t829 * t666;
t607 = t832 * t663 + t829 * t665;
t606 = t829 * t656 - t832 * t658;
t605 = t829 * t655 - t832 * t657;
t604 = t832 * t656 + t829 * t658;
t603 = t832 * t655 + t829 * t657;
t598 = -qJ(5) * t771 - t827 * t620 - t906;
t597 = t830 * t630 - t827 * t728 - t905;
t594 = pkin(5) * (t832 * t648 + t829 * t650);
t593 = pkin(5) * (t832 * t647 + t829 * t649);
t592 = t831 * t601 - t907;
t591 = t828 * t601 + t713;
t590 = t829 * t635 - t832 * t636;
t589 = t832 * t635 + t829 * t636;
t586 = t831 * t602 + t828 * t671;
t583 = t827 * t629 - t890;
t580 = t646 + t854;
t579 = t645 + t853;
t578 = -t828 * t638 + t831 * t642 - t908;
t577 = -t828 * t637 + t831 * t641 - t909;
t576 = -t827 * t615 + t830 * t626;
t571 = t831 * t638 + t828 * t642 + t866;
t570 = t831 * t637 + t828 * t641 + t867;
t569 = t674 + t849;
t568 = -pkin(4) * t875 + t831 * t576 - t907;
t567 = pkin(4) * t874 + t828 * t576 + t713;
t566 = t645 + t838;
t565 = t646 + t850;
t564 = t831 * t584 + t828 * t632;
t561 = -pkin(3) * t583 + t915;
t560 = t831 * t597 - t828 * t612 - t908;
t559 = t831 * t598 - t828 * t611 - t909;
t558 = t674 + t851;
t557 = t828 * t597 + t831 * t612 + t866;
t556 = t828 * t598 + t831 * t611 + t867;
t555 = -pkin(1) * t574 - t619;
t554 = -t825 * t591 + t826 * t592 - t902;
t553 = t826 * t591 + t825 * t592 + t673;
t552 = -t825 * t585 + t826 * t586;
t551 = t826 * t585 + t825 * t586;
t550 = pkin(6) * t898 + qJ(2) * t574 - t825 * t616;
t549 = pkin(6) * t899 + qJ(2) * t934 + t826 * t616 + t918;
t548 = -pkin(6) * t585 - (pkin(3) * t828 - pkin(7) * t831) * t601;
t547 = -pkin(7) * t583 + qJ(5) * t890 - t827 * t588;
t546 = -t825 * t571 + t826 * t578 - t903;
t545 = -t825 * t570 + t826 * t577 - t904;
t544 = t826 * t571 + t825 * t578 + t868;
t543 = t826 * t570 + t825 * t577 + t869;
t542 = -t825 * t567 + t826 * t568 - t902;
t541 = t826 * t567 + t825 * t568 + t673;
t540 = -t825 * t563 + t826 * t564;
t539 = t826 * t563 + t825 * t564;
t538 = pkin(6) * t586 - (-pkin(3) * t831 - pkin(7) * t828 - pkin(2)) * t601;
t537 = -t825 * t557 + t826 * t560 - t903;
t536 = -t825 * t556 + t826 * t559 - t904;
t535 = t826 * t557 + t825 * t560 + t868;
t534 = t826 * t556 + t825 * t559 + t869;
t533 = pkin(1) * t551 + t871;
t532 = -pkin(6) * t563 + t831 * t547 - t828 * t561;
t531 = -pkin(2) * t583 + pkin(6) * t564 + t828 * t547 + t831 * t561;
t530 = pkin(1) * t539 + t839;
t529 = -qJ(2) * t551 - t825 * t538 + t826 * t548;
t528 = pkin(1) * t601 + qJ(2) * t552 + t826 * t538 + t825 * t548;
t527 = -qJ(2) * t539 - t825 * t531 + t826 * t532;
t526 = -pkin(1) * t583 + qJ(2) * t540 + t826 * t531 + t825 * t532;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, qJDD(1), -t797, t796, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t701, t700, 0, -t683, 0, 0, 0, 0, 0, t819, t634, t633, 0, t555, t729, t710, t737, t730, t741, 0, t579, t580, t569, t533, t729, t710, t737, t730, t741, 0, t566, t565, t558, t530; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, -t787, 0, t788, 0, t865, -t761, -t846, -pkin(5) * t846, 0, 0, -t920, 0, -t921, 0, t933, t930, t935, pkin(5) * t935 + qJ(2) * t891 + t832 * t680, 0, 0, t676, 0, -t931, 0, t948, t949, t947, pkin(5) * t947 + t832 * t549 + t829 * t550, t604, t589, t608, t603, t607, t639, t832 * t543 + t829 * t545 - t913, t832 * t544 + t829 * t546 - t912, t832 * t553 + t829 * t554 - t911, t829 * t529 + t832 * t528 - pkin(5) * (t829 * t551 - t832 * t552), t604, t589, t608, t603, t607, t639, t832 * t534 + t829 * t536 - t913, t832 * t535 + t829 * t537 - t912, t832 * t541 + t829 * t542 - t911, t829 * t527 + t832 * t526 - pkin(5) * (t829 * t539 - t832 * t540); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, -t788, 0, -t787, 0, t761, t865, t861, pkin(5) * t861, 0, 0, t921, 0, -t920, 0, -t930, t933, t936, pkin(5) * t936 - qJ(2) * t886 + t829 * t680, 0, 0, t931, 0, t676, 0, -t949, t948, t946, pkin(5) * t946 + t829 * t549 - t832 * t550, t606, t590, t610, t605, t609, t640, t829 * t543 - t832 * t545 + t593, t829 * t544 - t832 * t546 + t594, t829 * t553 - t832 * t554 + t614, -t832 * t529 + t829 * t528 + pkin(5) * (t832 * t551 + t829 * t552), t606, t590, t610, t605, t609, t640, t829 * t534 - t832 * t536 + t593, t829 * t535 - t832 * t537 + t594, t829 * t541 - t832 * t542 + t614, -t832 * t527 + t829 * t526 + pkin(5) * (t832 * t539 + t829 * t540); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t834, 0, 0, -g(1), t797, 0, 0, 0, t786, 0, -t785, 0, t847, t754, t686, qJ(2) * t686, 0, 0, -t719, 0, -t715, 0, t939, t662, t574, t550, t658, t636, t666, t657, t665, t691, t545, t546, t554, t529, t658, t636, t666, t657, t665, t691, t536, t537, t542, t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t834, 0, qJDD(1), 0, g(1), 0, -t796, 0, 0, 0, t785, 0, t786, 0, -t754, t847, t863, t680, 0, 0, t715, 0, -t719, 0, -t662, t939, t934, t549, t656, t635, t664, t655, t663, t690, t543, t544, t553, t528, t656, t635, t664, t655, t663, t690, t534, t535, t541, t526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t797, t796, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t701, t700, 0, -t683, 0, 0, 0, 0, 0, t819, t634, t633, 0, t555, t729, t710, t737, t730, t741, 0, t579, t580, t569, t533, t729, t710, t737, t730, t741, 0, t566, t565, t558, t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t834, 0, 0, -t823, -t837, 0, 0, 0, -t775, 0, -t772, 0, t932, t750, t623, pkin(6) * t623, t705, t689, t709, t704, t708, t746, t577, t578, t592, t548, t705, t689, t709, t704, t708, t746, t559, t560, t568, t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t834, 0, qJDD(1), 0, t823, 0, t727, 0, 0, 0, t772, 0, -t775, 0, -t750, t932, t864, t616, t703, t688, t707, t702, t706, t745, t570, t571, t591, t538, t703, t688, t707, t702, t706, t745, t556, t557, t567, t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t837, -t727, 0, 0, 0, 0, 0, 0, 0, t819, t852, t835, 0, -t619, t729, t710, t737, t730, t741, 0, t853, t854, t849, t871, t729, t710, t737, t730, t741, 0, t838, t850, t851, t839; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t819, 0, -t818, 0, 0, -t823, t681, 0, t744, t711, t740, t743, t738, t760, t641, t642, t601, pkin(7) * t601, t744, t711, t740, t743, t738, t760, t598, t597, t576, t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t818, 0, t819, 0, t823, 0, t682, 0, t795, -t777, -t806, -t795, -t807, -qJDD(4), t637, t638, 0, pkin(3) * t601, t795, -t777, -t806, -t795, -t807, -qJDD(4), t611, t612, t876, t561; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t819, -t681, -t682, 0, 0, t729, t710, t737, t730, t741, 0, t872, t873, t855, t883, t729, t710, t737, t730, t741, 0, t843, t856, t857, t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t766, t768, t783, -t803, t792, t803, 0, t671, t653, 0, t766, t768, t783, -t803, t792, t803, -qJ(5) * t783, t630, t626, qJ(5) * t628; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t802, t765, t790, t767, t784, -t802, -t671, 0, t654, 0, t802, t765, t790, t767, t784, -t802, t620, t728, t615, t588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t795, t777, t806, t795, t807, qJDD(4), -t653, -t654, 0, 0, -t795, t777, t806, t795, t807, qJDD(4), -0.2e1 * t827 * t877 - t842 - t896 + t914, t840 - 0.2e1 * t870, -t876, -t915; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t766, t768, t783, -t803, t792, t803, 0, t632, t628, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t802, t765, t790, t767, t784, -t802, -t632, 0, t629, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t795, t777, t806, t795, t807, qJDD(4), -t628, -t629, 0, 0;];
m_new_reg = t1;
