% Calculate inertial parameters regressor of coriolis matrix for
% S5RPPRR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d4,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 18:06
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RPPRR11_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(7,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RPPRR11_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RPPRR11_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'S5RPPRR11_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [7x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 18:05:59
% EndTime: 2019-12-31 18:06:02
% DurationCPUTime: 2.01s
% Computational Cost: add. (1216->207), mult. (2274->275), div. (0->0), fcn. (1751->4), ass. (0->161)
t129 = sin(qJ(5));
t226 = 0.2e1 * t129;
t131 = cos(qJ(5));
t132 = cos(qJ(4));
t197 = t131 * t132;
t152 = t197 * t226;
t130 = sin(qJ(4));
t124 = t130 ^ 2;
t126 = t132 ^ 2;
t87 = t124 + t126;
t71 = t87 * t129;
t123 = t129 ^ 2;
t125 = t131 ^ 2;
t178 = t123 + t125;
t128 = pkin(1) + qJ(3);
t171 = t128 * qJD(1);
t225 = -t171 + qJD(2);
t224 = t123 / 0.2e1;
t223 = t124 / 0.2e1;
t222 = t126 / 0.2e1;
t127 = -pkin(6) + qJ(2);
t199 = t130 * t132;
t219 = t130 * pkin(4);
t149 = -t132 * pkin(7) + t219;
t138 = t149 + t128;
t198 = t131 * t127;
t164 = t130 * t198;
t50 = t129 * t138 + t164;
t211 = t50 * t132;
t200 = t129 * t130;
t49 = t127 * t200 - t131 * t138;
t212 = t49 * t132;
t201 = t127 * t129;
t163 = t132 * t201;
t217 = t132 * pkin(4);
t218 = t130 * pkin(7);
t78 = t217 + t218;
t215 = t131 * t78;
t52 = -t163 + t215;
t162 = t127 * t197;
t216 = t129 * t78;
t53 = t162 + t216;
t2 = -t127 * t199 + (t53 * t130 / 0.2e1 + t211 / 0.2e1) * t131 + (-t52 * t130 / 0.2e1 + t212 / 0.2e1) * t129;
t220 = t2 * qJD(4);
t209 = t53 * t129;
t210 = t52 * t131;
t213 = t49 * t131;
t3 = t130 * t213 - t50 * t200 + (t209 + t210) * t132;
t214 = t3 * qJD(1);
t153 = t125 / 0.2e1 + t224;
t166 = t217 / 0.2e1;
t133 = t153 * t218 + t166;
t141 = t210 / 0.2e1 + t209 / 0.2e1;
t6 = t133 + t141;
t208 = t6 * qJD(1);
t8 = t126 * t127 + (t49 * t129 + t50 * t131) * t130;
t207 = t8 * qJD(1);
t9 = -t212 + (t52 + 0.2e1 * t163) * t130;
t206 = t9 * qJD(1);
t10 = t211 + (t53 - 0.2e1 * t162) * t130;
t205 = t10 * qJD(1);
t202 = t126 * t131;
t20 = t50 * t129 - t213;
t196 = t20 * qJD(1);
t23 = -t126 * t201 - t49 * t130;
t195 = t23 * qJD(1);
t24 = -t126 * t198 - t50 * t130;
t194 = t24 * qJD(1);
t45 = t222 + t178 * (t223 + 0.1e1 / 0.2e1);
t193 = t45 * qJD(1);
t154 = t223 + t222;
t76 = 0.1e1 / 0.2e1 + t154;
t54 = t76 * t129;
t192 = t54 * qJD(1);
t55 = t76 * t131;
t191 = t55 * qJD(1);
t61 = (t224 - t125 / 0.2e1) * t132;
t190 = t61 * qJD(5);
t65 = t87 * t127;
t189 = t65 * qJD(1);
t107 = t123 * t130;
t108 = t125 * t130;
t68 = -t107 - t108;
t188 = t68 * qJD(1);
t70 = t178 * t132;
t187 = t70 * qJD(1);
t186 = t71 * qJD(1);
t88 = t124 - t126;
t72 = t88 * t129;
t185 = t72 * qJD(1);
t73 = t87 * t131;
t184 = t73 * qJD(1);
t74 = t88 * t131;
t183 = t74 * qJD(1);
t182 = t76 * qJD(1);
t181 = t87 * qJD(1);
t180 = t88 * qJD(1);
t169 = t132 * qJD(4);
t100 = t129 * t169;
t172 = qJD(5) * t131;
t105 = t130 * t172;
t179 = -t100 - t105;
t89 = t125 - t123;
t177 = qJD(2) * t130;
t176 = qJD(2) * t132;
t175 = qJD(3) * t130;
t174 = qJD(4) * t131;
t173 = qJD(5) * t129;
t117 = t130 * qJD(1);
t170 = t130 * qJD(4);
t118 = t132 * qJD(1);
t168 = t132 * qJD(5);
t161 = t129 * t168;
t160 = t131 * t168;
t159 = t129 * t172;
t158 = t129 * t174;
t157 = t129 * t118;
t156 = t131 * t169;
t155 = t131 * t118;
t103 = t130 * t169;
t102 = t130 * t118;
t150 = t126 * t159;
t148 = qJD(4) * t152;
t104 = t130 * t173;
t147 = t104 - t156;
t4 = -t127 ^ 2 * t199 - t49 * t52 + t50 * t53;
t146 = t4 * qJD(1) + t2 * qJD(3);
t145 = -t52 * t129 + t53 * t131;
t51 = (-0.1e1 + t178) * t199;
t144 = -t2 * qJD(1) - t51 * qJD(3);
t143 = (-qJD(5) - t117) * t132;
t142 = t218 / 0.2e1 + t166;
t136 = t78 / 0.2e1 + t142;
t36 = t136 * t131;
t140 = pkin(4) * t129 * qJD(4) + t36 * qJD(1);
t35 = t136 * t129;
t139 = pkin(4) * t174 - t35 * qJD(1);
t48 = -t61 * qJD(1) + t158;
t137 = t131 * t143;
t41 = t129 * qJD(1) * t202 + t61 * qJD(4);
t69 = t89 * t126;
t135 = t69 * qJD(1) + t148;
t134 = qJD(1) * t152 - t89 * qJD(4);
t122 = qJ(2) * qJD(1);
t121 = qJ(2) * qJD(2);
t110 = t128 * qJD(3);
t106 = t169 / 0.2e1;
t101 = t131 * t117;
t99 = t129 * t170;
t98 = t129 * t117;
t77 = -0.1e1 / 0.2e1 + t154;
t67 = t101 + t172;
t66 = t98 + t173;
t64 = t102 + t168 / 0.2e1;
t57 = -t202 / 0.2e1 + (-t124 / 0.2e1 + 0.1e1 / 0.2e1) * t131;
t56 = -t129 / 0.2e1 + t71 / 0.2e1;
t46 = t153 * t124 - t153 + t222;
t22 = -t163 + t215 / 0.2e1 - t142 * t131;
t21 = -t162 - t216 / 0.2e1 + t142 * t129;
t7 = t133 - t141;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t121, 0, 0, 0, 0, 0, 0, 0, qJD(2), qJD(3), t110 + t121, -t103, t88 * qJD(4), 0, t103, 0, 0, t128 * t169 + t175, qJD(3) * t132 - t128 * t170, -t87 * qJD(2), t65 * qJD(2) + t110, -t125 * t103 - t150, -t69 * qJD(5) + t130 * t148, -t74 * qJD(4) - t130 * t161, -t123 * t103 + t150, t72 * qJD(4) - t130 * t160, t103, -t71 * qJD(2) + t9 * qJD(4) + t24 * qJD(5) + t131 * t175, -t73 * qJD(2) - t10 * qJD(4) - t23 * qJD(5) - t129 * t175, -t70 * qJD(3) - t3 * qJD(4), t8 * qJD(2) + t20 * qJD(3) + t4 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t122, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, t122, 0, 0, 0, 0, 0, 0, 0, 0, -t181, t77 * qJD(3) + t189, 0, 0, 0, 0, 0, 0, -t186, -t184, 0, t46 * qJD(3) + t7 * qJD(4) + t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t171, 0, 0, 0, 0, 0, 0, t117, t118, 0, t77 * qJD(2) + t171, 0, 0, 0, 0, 0, 0, t57 * qJD(5) + t101, t56 * qJD(5) - t98, -t187, t46 * qJD(2) + t196 + t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, t180, -t170, t102, -t169, 0, t128 * t118 - t127 * t170, -t128 * t117 - t127 * t169, 0, 0, -t190 + (-t125 * t118 - t158) * t130, (t107 - t108) * qJD(4) + (-qJD(5) + t117) * t152, t100 - t183, t190 + (-t123 * t118 + t158) * t130, t156 + t185, t64, t206 + (t129 * t149 - t164) * qJD(4) + t22 * qJD(5), -t205 + (-pkin(7) * t197 + (pkin(4) * t131 + t201) * t130) * qJD(4) + t21 * qJD(5), qJD(4) * t145 - t214, t7 * qJD(2) + (pkin(7) * t145 - t127 * t219) * qJD(4) + t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, -t135, t129 * t143, t41, t137, t106, t57 * qJD(3) + t22 * qJD(4) - t50 * qJD(5) + t194, t56 * qJD(3) + t21 * qJD(4) + t49 * qJD(5) - t195, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t122, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, -qJD(3) - t122, 0, 0, 0, 0, 0, 0, -t169, t170, t181, -t76 * qJD(3) - t189, 0, 0, 0, 0, 0, 0, t147 + t186, -t179 + t184, t68 * qJD(4), -t45 * qJD(3) - t6 * qJD(4) - t207; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t182, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t118, t117, 0, 0, 0, 0, 0, 0, 0, 0, -t155, t157, t188, -t208; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, t67, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), t225, 0, 0, 0, 0, 0, 0, -t117, -t118, 0, t76 * qJD(2) - t171, 0, 0, 0, 0, 0, 0, -t55 * qJD(5) - t101, t54 * qJD(5) + t98, t187, t45 * qJD(2) - t196 + t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, -t169, 0, 0, 0, 0, 0, 0, 0, 0, -t131 * t170 - t161, t99 - t160, t70 * qJD(4), (pkin(7) * t70 - t219) * qJD(4) - t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179 - t191, t147 + t192, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, -t180, 0, -t102, 0, 0, t225 * t132, -t225 * t130, 0, 0, t125 * t102 - t190, t137 * t226, t105 + t183, t123 * t102 + t190, -t104 - t185, -t64, -t36 * qJD(5) + t131 * t176 - t206, t35 * qJD(5) - t129 * t176 + t205, -t68 * qJD(2) + t214, t6 * qJD(2) - t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, -t117, 0, 0, 0, 0, 0, 0, 0, 0, t155, -t157, -t188, t208; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t159, t89 * qJD(5), 0, -t159, 0, 0, -pkin(4) * t173, -pkin(4) * t172, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, -t134, t67, -t48, -t66, -t118 / 0.2e1, -pkin(7) * t172 - t140, pkin(7) * t173 - t139, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t41, t135, (t157 - t174) * t130, -t41, t131 * t102 + t99, t106, t55 * qJD(3) + t36 * qJD(4) - t129 * t177 - t194, -t54 * qJD(3) - t35 * qJD(4) - t131 * t177 + t195, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, -t101, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, -t192, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, t134, -t101, t48, t98, t118 / 0.2e1, t140, t139, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t1;
