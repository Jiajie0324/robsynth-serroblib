% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S5RRRRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% qJDD [5x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4,d5]';
%
% Output:
% m_new_reg [(3*6)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:23
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S5RRRRR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(5,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR7_invdynm_fixb_reg2_snew_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR7_invdynm_fixb_reg2_snew_vp: qJD has to be [5x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [5 1]), ...
  'S5RRRRR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S5RRRRR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRR7_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:23:03
% EndTime: 2019-12-31 22:23:24
% DurationCPUTime: 22.32s
% Computational Cost: add. (181914->737), mult. (397829->1035), div. (0->0), fcn. (294649->10), ass. (0->506)
t1326 = cos(qJ(2));
t1310 = t1326 * qJDD(1);
t1321 = sin(qJ(2));
t1414 = qJD(1) * t1321;
t1377 = qJD(2) * t1414;
t1286 = t1310 - t1377;
t1317 = t1326 ^ 2;
t1329 = qJD(1) ^ 2;
t1322 = sin(qJ(1));
t1327 = cos(qJ(1));
t1295 = t1322 * g(1) - t1327 * g(2);
t1343 = qJDD(1) * pkin(1) + t1295;
t1344 = qJD(2) * pkin(2) - pkin(7) * t1414;
t1225 = t1286 * pkin(2) - t1344 * t1414 + t1343 + (t1317 * pkin(7) + pkin(6)) * t1329;
t1318 = sin(qJ(5));
t1320 = sin(qJ(3));
t1325 = cos(qJ(3));
t1413 = qJD(1) * t1326;
t1275 = -t1320 * t1414 + t1325 * t1413;
t1276 = (t1320 * t1326 + t1321 * t1325) * qJD(1);
t1319 = sin(qJ(4));
t1324 = cos(qJ(4));
t1241 = t1319 * t1275 + t1324 * t1276;
t1308 = qJD(2) * t1413;
t1385 = t1321 * qJDD(1);
t1285 = t1308 + t1385;
t1363 = t1320 * t1285 - t1325 * t1286;
t1222 = -t1276 * qJD(3) - t1363;
t1223 = t1275 * qJD(3) + t1325 * t1285 + t1320 * t1286;
t1364 = -t1324 * t1222 + t1319 * t1223;
t1140 = -t1241 * qJD(4) - t1364;
t1139 = qJDD(5) - t1140;
t1323 = cos(qJ(5));
t1315 = qJD(2) + qJD(3);
t1371 = qJD(4) + t1315;
t1216 = t1318 * t1241 - t1323 * t1371;
t1218 = t1323 * t1241 + t1318 * t1371;
t1168 = t1218 * t1216;
t1425 = t1139 - t1168;
t1432 = t1318 * t1425;
t1239 = -t1324 * t1275 + t1319 * t1276;
t1186 = t1241 * t1239;
t1314 = qJDD(2) + qJDD(3);
t1309 = qJDD(4) + t1314;
t1424 = -t1186 + t1309;
t1431 = t1319 * t1424;
t1247 = t1275 * t1276;
t1422 = t1247 + t1314;
t1430 = t1320 * t1422;
t1429 = t1323 * t1425;
t1428 = t1324 * t1424;
t1427 = t1325 * t1422;
t1141 = -t1239 * qJD(4) + t1319 * t1222 + t1324 * t1223;
t1232 = t1371 * t1239;
t1426 = t1141 - t1232;
t1273 = t1275 ^ 2;
t1354 = t1315 * pkin(3) - t1276 * pkin(8);
t1137 = t1222 * pkin(3) + t1273 * pkin(8) - t1276 * t1354 + t1225;
t1366 = t1371 ^ 2;
t1396 = t1321 * t1329;
t1296 = t1327 * g(1) + t1322 * g(2);
t1278 = -t1329 * pkin(1) + qJDD(1) * pkin(6) - t1296;
t1399 = t1321 * t1278;
t1415 = qJD(1) * qJD(2);
t1208 = qJDD(2) * pkin(2) - t1285 * pkin(7) - t1399 + (pkin(2) * t1396 + pkin(7) * t1415 - g(3)) * t1326;
t1263 = -t1321 * g(3) + t1326 * t1278;
t1311 = t1317 * t1329;
t1212 = -pkin(2) * t1311 + t1286 * pkin(7) - qJD(2) * t1344 + t1263;
t1166 = t1320 * t1208 + t1325 * t1212;
t1109 = -t1273 * pkin(3) + t1222 * pkin(8) - t1315 * t1354 + t1166;
t1269 = t1315 * t1275;
t1197 = t1223 - t1269;
t1347 = t1325 * t1208 - t1320 * t1212;
t1330 = t1422 * pkin(3) - t1197 * pkin(8) + t1347;
t1040 = t1324 * t1109 + t1319 * t1330;
t1181 = t1239 * pkin(4) - t1241 * pkin(9);
t1024 = -t1366 * pkin(4) + t1309 * pkin(9) - t1239 * t1181 + t1040;
t1352 = t1371 * t1241;
t1030 = -t1426 * pkin(9) + (-t1140 + t1352) * pkin(4) - t1137;
t969 = t1318 * t1024 - t1323 * t1030;
t970 = t1323 * t1024 + t1318 * t1030;
t931 = t1318 * t969 + t1323 * t970;
t1423 = t1223 + t1269;
t1193 = (qJD(3) - t1315) * t1276 + t1363;
t1214 = t1216 ^ 2;
t1215 = t1218 ^ 2;
t1235 = qJD(5) + t1239;
t1234 = t1235 ^ 2;
t1237 = t1239 ^ 2;
t1238 = t1241 ^ 2;
t1274 = t1276 ^ 2;
t1313 = t1315 ^ 2;
t1103 = t1320 * t1166 + t1325 * t1347;
t1421 = pkin(2) * t1103;
t1143 = -t1193 * t1320 - t1325 * t1197;
t1420 = pkin(2) * t1143;
t1419 = pkin(4) * t1319;
t1039 = t1319 * t1109 - t1324 * t1330;
t978 = -t1324 * t1039 + t1319 * t1040;
t1418 = t1320 * t978;
t1417 = t1325 * t978;
t1023 = -t1309 * pkin(4) - t1366 * pkin(9) + t1241 * t1181 + t1039;
t1416 = -pkin(4) * t1023 + pkin(9) * t931;
t1412 = t1235 * t1318;
t1411 = t1235 * t1323;
t1410 = t1315 * t1276;
t1409 = t1315 * t1320;
t1408 = t1315 * t1325;
t1316 = t1321 ^ 2;
t1407 = t1316 * t1329;
t1020 = t1318 * t1023;
t1101 = t1139 + t1168;
t1406 = t1318 * t1101;
t1405 = t1319 * t1137;
t1179 = t1186 + t1309;
t1404 = t1319 * t1179;
t1403 = t1320 * t1225;
t1244 = -t1247 + t1314;
t1402 = t1320 * t1244;
t1401 = t1321 * t1103;
t1277 = t1329 * pkin(6) + t1343;
t1400 = t1321 * t1277;
t1304 = t1326 * t1396;
t1293 = qJDD(2) + t1304;
t1398 = t1321 * t1293;
t1294 = qJDD(2) - t1304;
t1397 = t1321 * t1294;
t1021 = t1323 * t1023;
t1395 = t1323 * t1101;
t1394 = t1324 * t1137;
t1393 = t1324 * t1179;
t1392 = t1325 * t1225;
t1391 = t1325 * t1244;
t1390 = t1326 * t1103;
t1389 = t1326 * t1277;
t1388 = t1326 * t1294;
t1386 = t1316 + t1317;
t1384 = t1322 * qJDD(1);
t1383 = t1327 * qJDD(1);
t920 = -t1324 * t1023 + t1319 * t931;
t1382 = pkin(3) * t920 + t1416;
t1381 = -pkin(4) * t1324 - pkin(3);
t979 = t1319 * t1039 + t1324 * t1040;
t932 = t1320 * t979 + t1417;
t977 = pkin(3) * t978;
t1379 = pkin(2) * t932 + t977;
t1378 = t1319 * t1168;
t1376 = t1322 * t1186;
t1375 = t1322 * t1247;
t1374 = t1324 * t1168;
t1373 = t1327 * t1186;
t1372 = t1327 * t1247;
t1161 = -t1215 - t1234;
t1058 = -t1318 * t1161 - t1395;
t1348 = -t1323 * t1141 - t1318 * t1309;
t1087 = (qJD(5) + t1235) * t1216 + t1348;
t1370 = pkin(4) * t1087 + pkin(9) * t1058 + t1020;
t1146 = -t1234 - t1214;
t1049 = t1323 * t1146 - t1432;
t1176 = t1235 * t1218;
t1365 = -t1318 * t1141 + t1323 * t1309;
t1338 = t1218 * qJD(5) - t1365;
t1083 = -t1176 - t1338;
t1369 = pkin(4) * t1083 + pkin(9) * t1049 - t1021;
t1219 = -t1238 - t1366;
t1150 = t1324 * t1219 - t1404;
t1368 = pkin(3) * t1150 - t1040;
t1120 = -t1315 * t1241 + t1364;
t1123 = t1141 + t1232;
t1062 = -t1120 * t1319 - t1324 * t1123;
t1059 = pkin(3) * t1062;
t1064 = -t1120 * t1324 + t1319 * t1123;
t989 = t1325 * t1062 + t1320 * t1064;
t1367 = pkin(2) * t989 + t1059;
t1104 = t1325 * t1166 - t1320 * t1347;
t1262 = t1326 * g(3) + t1399;
t1211 = t1321 * t1262 + t1326 * t1263;
t1362 = -t1322 * t1295 - t1327 * t1296;
t1084 = (-qJD(5) + t1235) * t1218 + t1365;
t1110 = -t1216 * qJD(5) - t1348;
t1175 = t1235 * t1216;
t1086 = t1110 + t1175;
t1016 = t1323 * t1084 + t1318 * t1086;
t1138 = t1214 + t1215;
t1361 = pkin(4) * t1138 + pkin(9) * t1016 + t931;
t1360 = t1322 * t1304;
t1359 = t1327 * t1304;
t1004 = t1319 * t1058 + t1324 * t1087;
t1358 = pkin(3) * t1004 + t1370;
t1001 = t1319 * t1049 + t1324 * t1083;
t1357 = pkin(3) * t1001 + t1369;
t1261 = -t1274 - t1313;
t1198 = t1325 * t1261 - t1402;
t1356 = pkin(2) * t1198 - t1166;
t1290 = -t1322 * t1329 + t1383;
t1353 = -pkin(5) * t1290 - t1322 * g(3);
t1177 = -t1366 - t1237;
t1128 = t1319 * t1177 + t1428;
t1351 = pkin(3) * t1128 - t1039;
t993 = t1319 * t1016 + t1324 * t1138;
t1350 = pkin(3) * t993 + t1361;
t930 = t1318 * t970 - t1323 * t969;
t921 = t1319 * t1023 + t1324 * t931;
t894 = t1320 * t921 + t1325 * t920;
t1349 = pkin(2) * t894 + t1382;
t1210 = t1326 * t1262 - t1321 * t1263;
t1346 = t1327 * t1295 - t1322 * t1296;
t1151 = -t1319 * t1219 - t1393;
t1094 = t1325 * t1150 + t1320 * t1151;
t1345 = pkin(2) * t1094 + t1368;
t1342 = t1319 * t1232;
t1341 = t1319 * t1352;
t1340 = t1324 * t1232;
t1339 = t1324 * t1352;
t1002 = t1324 * t1049 - t1319 * t1083;
t950 = t1325 * t1001 + t1320 * t1002;
t1337 = pkin(2) * t950 + t1357;
t1005 = t1324 * t1058 - t1319 * t1087;
t953 = t1325 * t1004 + t1320 * t1005;
t1336 = pkin(2) * t953 + t1358;
t1129 = t1324 * t1177 - t1431;
t1066 = t1325 * t1128 + t1320 * t1129;
t1335 = pkin(2) * t1066 + t1351;
t994 = t1324 * t1016 - t1319 * t1138;
t943 = t1320 * t994 + t1325 * t993;
t1334 = pkin(2) * t943 + t1350;
t1242 = -t1313 - t1273;
t1182 = t1320 * t1242 + t1427;
t1333 = pkin(2) * t1182 + t1347;
t1328 = qJD(2) ^ 2;
t1302 = -t1311 - t1328;
t1301 = t1311 - t1328;
t1300 = -t1328 - t1407;
t1299 = t1328 - t1407;
t1292 = -t1311 + t1407;
t1291 = t1311 + t1407;
t1289 = t1327 * t1329 + t1384;
t1288 = t1386 * qJDD(1);
t1287 = t1310 - 0.2e1 * t1377;
t1284 = 0.2e1 * t1308 + t1385;
t1282 = t1326 * t1293;
t1281 = t1386 * t1415;
t1272 = -pkin(5) * t1289 + t1327 * g(3);
t1267 = -t1274 + t1313;
t1266 = t1273 - t1313;
t1265 = t1326 * t1285 - t1316 * t1415;
t1264 = -t1321 * t1286 - t1317 * t1415;
t1260 = -t1321 * t1300 - t1388;
t1259 = -t1321 * t1299 + t1282;
t1258 = t1326 * t1302 - t1398;
t1257 = t1326 * t1301 - t1397;
t1256 = t1326 * t1300 - t1397;
t1255 = t1326 * t1299 + t1398;
t1254 = t1321 * t1302 + t1282;
t1253 = t1321 * t1301 + t1388;
t1252 = (t1285 + t1308) * t1321;
t1251 = (t1286 - t1377) * t1326;
t1249 = -t1321 * t1284 + t1326 * t1287;
t1248 = t1326 * t1284 + t1321 * t1287;
t1246 = t1274 - t1273;
t1231 = -t1238 + t1366;
t1230 = t1237 - t1366;
t1229 = (t1275 * t1325 + t1276 * t1320) * t1315;
t1228 = (t1275 * t1320 - t1276 * t1325) * t1315;
t1227 = -pkin(6) * t1256 - t1389;
t1226 = -pkin(6) * t1254 - t1400;
t1224 = -t1273 - t1274;
t1221 = -pkin(1) * t1256 + t1263;
t1220 = -pkin(1) * t1254 + t1262;
t1205 = pkin(1) * t1287 + pkin(6) * t1258 + t1389;
t1204 = -pkin(1) * t1284 + pkin(6) * t1260 - t1400;
t1203 = t1325 * t1266 - t1402;
t1202 = -t1320 * t1267 + t1427;
t1201 = t1320 * t1266 + t1391;
t1200 = t1325 * t1267 + t1430;
t1199 = -t1320 * t1261 - t1391;
t1192 = (qJD(3) + t1315) * t1276 + t1363;
t1191 = pkin(1) * t1277 + pkin(6) * t1211;
t1190 = t1325 * t1223 - t1276 * t1409;
t1189 = t1320 * t1223 + t1276 * t1408;
t1188 = -t1320 * t1222 - t1275 * t1408;
t1187 = t1325 * t1222 - t1275 * t1409;
t1185 = pkin(1) * t1291 + pkin(6) * t1288 + t1211;
t1184 = t1238 - t1237;
t1183 = t1325 * t1242 - t1430;
t1174 = -t1215 + t1234;
t1173 = t1214 - t1234;
t1172 = -t1340 + t1341;
t1171 = -t1342 - t1339;
t1170 = -t1321 * t1228 + t1326 * t1229;
t1169 = t1326 * t1228 + t1321 * t1229;
t1167 = t1215 - t1214;
t1164 = -t1237 - t1238;
t1162 = -pkin(7) * t1198 - t1392;
t1160 = -pkin(7) * t1182 - t1403;
t1159 = -t1321 * t1201 + t1326 * t1203;
t1158 = -t1321 * t1200 + t1326 * t1202;
t1157 = t1326 * t1201 + t1321 * t1203;
t1156 = t1326 * t1200 + t1321 * t1202;
t1155 = t1324 * t1230 - t1404;
t1154 = -t1319 * t1231 + t1428;
t1153 = t1319 * t1230 + t1393;
t1152 = t1324 * t1231 + t1431;
t1148 = -t1321 * t1198 + t1326 * t1199;
t1147 = t1326 * t1198 + t1321 * t1199;
t1145 = -t1193 * t1325 + t1320 * t1197;
t1144 = -t1325 * t1192 - t1320 * t1423;
t1142 = -t1320 * t1192 + t1325 * t1423;
t1135 = -t1321 * t1189 + t1326 * t1190;
t1134 = -t1321 * t1187 + t1326 * t1188;
t1133 = t1326 * t1189 + t1321 * t1190;
t1132 = t1326 * t1187 + t1321 * t1188;
t1131 = -t1321 * t1182 + t1326 * t1183;
t1130 = t1326 * t1182 + t1321 * t1183;
t1126 = (-t1216 * t1323 + t1218 * t1318) * t1235;
t1125 = (-t1216 * t1318 - t1218 * t1323) * t1235;
t1119 = (0.2e1 * qJD(4) + t1315) * t1241 + t1364;
t1118 = -pkin(2) * t1423 + pkin(7) * t1199 - t1403;
t1117 = -t1320 * t1171 + t1325 * t1172;
t1116 = t1325 * t1171 + t1320 * t1172;
t1115 = t1324 * t1141 - t1341;
t1114 = t1319 * t1141 + t1339;
t1113 = -t1319 * t1140 + t1340;
t1112 = t1324 * t1140 + t1342;
t1111 = -pkin(2) * t1192 + pkin(7) * t1183 + t1392;
t1099 = -t1320 * t1153 + t1325 * t1155;
t1098 = -t1320 * t1152 + t1325 * t1154;
t1097 = t1325 * t1153 + t1320 * t1155;
t1096 = t1325 * t1152 + t1320 * t1154;
t1095 = -t1320 * t1150 + t1325 * t1151;
t1093 = pkin(2) * t1225 + pkin(7) * t1104;
t1092 = -t1321 * t1143 + t1326 * t1145;
t1091 = -t1321 * t1142 + t1326 * t1144;
t1090 = t1326 * t1143 + t1321 * t1145;
t1089 = t1326 * t1142 + t1321 * t1144;
t1088 = -pkin(8) * t1150 - t1394;
t1085 = t1110 - t1175;
t1082 = -t1176 + t1338;
t1079 = t1323 * t1110 - t1218 * t1412;
t1078 = t1318 * t1110 + t1218 * t1411;
t1077 = t1216 * t1411 + t1318 * t1338;
t1076 = -t1216 * t1412 + t1323 * t1338;
t1075 = -pkin(1) * t1147 - t1356;
t1074 = -pkin(8) * t1128 - t1405;
t1073 = t1324 * t1126 + t1319 * t1139;
t1072 = t1319 * t1126 - t1324 * t1139;
t1071 = t1323 * t1173 - t1406;
t1070 = -t1318 * t1174 + t1429;
t1069 = t1318 * t1173 + t1395;
t1068 = t1323 * t1174 + t1432;
t1067 = -t1320 * t1128 + t1325 * t1129;
t1065 = -pkin(1) * t1130 - t1333;
t1063 = -t1324 * t1119 - t1319 * t1426;
t1061 = -t1319 * t1119 + t1324 * t1426;
t1060 = -pkin(7) * t1143 - t1103;
t1057 = t1323 * t1161 - t1406;
t1055 = -t1321 * t1116 + t1326 * t1117;
t1054 = t1326 * t1116 + t1321 * t1117;
t1053 = -t1320 * t1114 + t1325 * t1115;
t1052 = -t1320 * t1112 + t1325 * t1113;
t1051 = t1325 * t1114 + t1320 * t1115;
t1050 = t1325 * t1112 + t1320 * t1113;
t1048 = t1318 * t1146 + t1429;
t1046 = t1324 * t1079 + t1378;
t1045 = t1324 * t1077 - t1378;
t1044 = t1319 * t1079 - t1374;
t1043 = t1319 * t1077 + t1374;
t1042 = -pkin(2) * t1224 + pkin(7) * t1145 + t1104;
t1041 = -pkin(1) * t1090 - t1420;
t1037 = -pkin(6) * t1147 - t1321 * t1118 + t1326 * t1162;
t1036 = t1326 * t1104 - t1401;
t1035 = t1321 * t1104 + t1390;
t1034 = -pkin(3) * t1426 + pkin(8) * t1151 - t1405;
t1033 = -pkin(6) * t1130 - t1321 * t1111 + t1326 * t1160;
t1032 = -pkin(3) * t1119 + pkin(8) * t1129 + t1394;
t1031 = -pkin(1) * t1423 + pkin(6) * t1148 + t1326 * t1118 + t1321 * t1162;
t1028 = -t1321 * t1097 + t1326 * t1099;
t1027 = -t1321 * t1096 + t1326 * t1098;
t1026 = t1326 * t1097 + t1321 * t1099;
t1025 = t1326 * t1096 + t1321 * t1098;
t1019 = -pkin(1) * t1192 + pkin(6) * t1131 + t1326 * t1111 + t1321 * t1160;
t1018 = -t1321 * t1094 + t1326 * t1095;
t1017 = t1326 * t1094 + t1321 * t1095;
t1015 = t1323 * t1083 - t1318 * t1085;
t1014 = t1318 * t1084 - t1323 * t1086;
t1013 = t1318 * t1083 + t1323 * t1085;
t1011 = t1324 * t1071 - t1319 * t1082;
t1010 = t1324 * t1070 + t1319 * t1086;
t1009 = t1319 * t1071 + t1324 * t1082;
t1008 = t1319 * t1070 - t1324 * t1086;
t1007 = -t1320 * t1072 + t1325 * t1073;
t1006 = t1325 * t1072 + t1320 * t1073;
t999 = -t1321 * t1066 + t1326 * t1067;
t998 = t1326 * t1066 + t1321 * t1067;
t997 = t1324 * t1015 + t1319 * t1167;
t996 = t1319 * t1015 - t1324 * t1167;
t995 = -pkin(1) * t1035 - t1421;
t991 = -t1320 * t1062 + t1325 * t1064;
t990 = -t1320 * t1061 + t1325 * t1063;
t988 = t1325 * t1061 + t1320 * t1063;
t987 = -t1321 * t1051 + t1326 * t1053;
t986 = -t1321 * t1050 + t1326 * t1052;
t985 = t1326 * t1051 + t1321 * t1053;
t984 = t1326 * t1050 + t1321 * t1052;
t983 = -t1320 * t1044 + t1325 * t1046;
t982 = -t1320 * t1043 + t1325 * t1045;
t981 = t1325 * t1044 + t1320 * t1046;
t980 = t1325 * t1043 + t1320 * t1045;
t976 = -pkin(9) * t1057 + t1021;
t975 = -pkin(9) * t1048 + t1020;
t974 = -pkin(6) * t1035 - pkin(7) * t1390 - t1321 * t1093;
t973 = pkin(3) * t1137 + pkin(8) * t979;
t972 = pkin(1) * t1225 + pkin(6) * t1036 - pkin(7) * t1401 + t1326 * t1093;
t971 = -pkin(7) * t1094 - t1320 * t1034 + t1325 * t1088;
t966 = -pkin(6) * t1090 - t1321 * t1042 + t1326 * t1060;
t965 = -pkin(1) * t1224 + pkin(6) * t1092 + t1326 * t1042 + t1321 * t1060;
t964 = -pkin(7) * t1066 - t1320 * t1032 + t1325 * t1074;
t963 = -pkin(2) * t1426 + pkin(7) * t1095 + t1325 * t1034 + t1320 * t1088;
t962 = -pkin(8) * t1062 - t978;
t961 = -t1320 * t1009 + t1325 * t1011;
t960 = -t1320 * t1008 + t1325 * t1010;
t959 = t1325 * t1009 + t1320 * t1011;
t958 = t1325 * t1008 + t1320 * t1010;
t957 = -t1321 * t1006 + t1326 * t1007;
t956 = t1326 * t1006 + t1321 * t1007;
t955 = -pkin(3) * t1164 + pkin(8) * t1064 + t979;
t954 = -t1320 * t1004 + t1325 * t1005;
t952 = -pkin(2) * t1119 + pkin(7) * t1067 + t1325 * t1032 + t1320 * t1074;
t951 = -t1320 * t1001 + t1325 * t1002;
t949 = -t1320 * t996 + t1325 * t997;
t948 = t1320 * t997 + t1325 * t996;
t947 = -pkin(1) * t1017 - t1345;
t946 = -pkin(4) * t1057 + t970;
t945 = -pkin(4) * t1048 + t969;
t944 = -t1320 * t993 + t1325 * t994;
t942 = -t1321 * t989 + t1326 * t991;
t941 = -t1321 * t988 + t1326 * t990;
t940 = t1321 * t991 + t1326 * t989;
t939 = t1321 * t990 + t1326 * t988;
t938 = -t1321 * t981 + t1326 * t983;
t937 = -t1321 * t980 + t1326 * t982;
t936 = t1321 * t983 + t1326 * t981;
t935 = t1321 * t982 + t1326 * t980;
t934 = -pkin(1) * t998 - t1335;
t933 = t1325 * t979 - t1418;
t928 = -t1321 * t959 + t1326 * t961;
t927 = -t1321 * t958 + t1326 * t960;
t926 = t1321 * t961 + t1326 * t959;
t925 = t1321 * t960 + t1326 * t958;
t924 = -pkin(1) * t940 - t1367;
t923 = -t1321 * t953 + t1326 * t954;
t922 = t1321 * t954 + t1326 * t953;
t918 = -t1321 * t950 + t1326 * t951;
t917 = t1321 * t951 + t1326 * t950;
t916 = -pkin(9) * t1014 - t930;
t915 = -t1321 * t948 + t1326 * t949;
t914 = t1321 * t949 + t1326 * t948;
t913 = -pkin(6) * t1017 - t1321 * t963 + t1326 * t971;
t912 = -t1321 * t943 + t1326 * t944;
t911 = t1321 * t944 + t1326 * t943;
t910 = -pkin(1) * t1426 + pkin(6) * t1018 + t1321 * t971 + t1326 * t963;
t909 = -pkin(8) * t1004 - t1319 * t946 + t1324 * t976;
t908 = -pkin(8) * t1001 - t1319 * t945 + t1324 * t975;
t907 = -pkin(6) * t998 - t1321 * t952 + t1326 * t964;
t906 = -pkin(7) * t989 - t1320 * t955 + t1325 * t962;
t905 = -pkin(1) * t1119 + pkin(6) * t999 + t1321 * t964 + t1326 * t952;
t904 = -pkin(3) * t1057 + pkin(8) * t1005 + t1319 * t976 + t1324 * t946;
t903 = -pkin(2) * t1164 + pkin(7) * t991 + t1320 * t962 + t1325 * t955;
t902 = -t1321 * t932 + t1326 * t933;
t901 = t1321 * t933 + t1326 * t932;
t900 = -pkin(3) * t1048 + pkin(8) * t1002 + t1319 * t975 + t1324 * t945;
t899 = -pkin(7) * t932 - pkin(8) * t1417 - t1320 * t973;
t898 = pkin(2) * t1137 + pkin(7) * t933 - pkin(8) * t1418 + t1325 * t973;
t897 = -pkin(8) * t993 + t1014 * t1419 + t1324 * t916;
t896 = pkin(8) * t994 + t1381 * t1014 + t1319 * t916;
t895 = -t1320 * t920 + t1325 * t921;
t893 = -pkin(1) * t922 - t1336;
t892 = -pkin(1) * t917 - t1337;
t891 = -pkin(1) * t901 - t1379;
t890 = -pkin(8) * t920 + (-pkin(9) * t1324 + t1419) * t930;
t889 = -pkin(7) * t953 - t1320 * t904 + t1325 * t909;
t888 = -pkin(7) * t950 - t1320 * t900 + t1325 * t908;
t887 = -pkin(1) * t911 - t1334;
t886 = -pkin(2) * t1057 + pkin(7) * t954 + t1320 * t909 + t1325 * t904;
t885 = -pkin(6) * t940 - t1321 * t903 + t1326 * t906;
t884 = -pkin(2) * t1048 + pkin(7) * t951 + t1320 * t908 + t1325 * t900;
t883 = -pkin(1) * t1164 + pkin(6) * t942 + t1321 * t906 + t1326 * t903;
t882 = pkin(8) * t921 + (-pkin(9) * t1319 + t1381) * t930;
t881 = -pkin(7) * t943 - t1320 * t896 + t1325 * t897;
t880 = -pkin(6) * t901 - t1321 * t898 + t1326 * t899;
t879 = -pkin(2) * t1014 + pkin(7) * t944 + t1320 * t897 + t1325 * t896;
t878 = -t1321 * t894 + t1326 * t895;
t877 = t1321 * t895 + t1326 * t894;
t876 = pkin(1) * t1137 + pkin(6) * t902 + t1321 * t899 + t1326 * t898;
t875 = -pkin(6) * t922 - t1321 * t886 + t1326 * t889;
t874 = -pkin(6) * t917 - t1321 * t884 + t1326 * t888;
t873 = -pkin(1) * t1057 + pkin(6) * t923 + t1321 * t889 + t1326 * t886;
t872 = -pkin(1) * t1048 + pkin(6) * t918 + t1321 * t888 + t1326 * t884;
t871 = -pkin(7) * t894 - t1320 * t882 + t1325 * t890;
t870 = -pkin(1) * t877 - t1349;
t869 = -pkin(2) * t930 + pkin(7) * t895 + t1320 * t890 + t1325 * t882;
t868 = -pkin(6) * t911 - t1321 * t879 + t1326 * t881;
t867 = -pkin(1) * t1014 + pkin(6) * t912 + t1321 * t881 + t1326 * t879;
t866 = -pkin(6) * t877 - t1321 * t869 + t1326 * t871;
t865 = -pkin(1) * t930 + pkin(6) * t878 + t1321 * t871 + t1326 * t869;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1290, 0, -t1289, 0, t1353, -t1272, -t1346, -pkin(5) * t1346, t1327 * t1265 - t1360, t1327 * t1249 + t1322 * t1292, t1327 * t1259 + t1321 * t1384, t1327 * t1264 + t1360, t1327 * t1257 + t1310 * t1322, t1322 * qJDD(2) + t1327 * t1281, t1327 * t1226 - t1322 * t1220 - pkin(5) * (t1322 * t1258 + t1327 * t1287), t1327 * t1227 - t1322 * t1221 - pkin(5) * (t1322 * t1260 - t1327 * t1284), t1327 * t1210 - pkin(5) * (t1322 * t1288 + t1327 * t1291), -pkin(5) * (t1322 * t1211 + t1327 * t1277) - (t1322 * pkin(1) - t1327 * pkin(6)) * t1210, t1327 * t1135 - t1375, t1327 * t1091 + t1322 * t1246, t1327 * t1158 + t1322 * t1197, t1327 * t1134 + t1375, t1327 * t1159 - t1322 * t1193, t1327 * t1170 + t1322 * t1314, t1327 * t1033 - t1322 * t1065 - pkin(5) * (t1322 * t1131 - t1327 * t1192), t1327 * t1037 - t1322 * t1075 - pkin(5) * (t1322 * t1148 - t1327 * t1423), t1327 * t966 - t1322 * t1041 - pkin(5) * (t1322 * t1092 - t1327 * t1224), t1327 * t974 - t1322 * t995 - pkin(5) * (t1322 * t1036 + t1327 * t1225), t1327 * t987 + t1376, t1322 * t1184 + t1327 * t941, t1327 * t1027 + t1322 * t1123, t1327 * t986 - t1376, t1327 * t1028 - t1322 * t1120, t1327 * t1055 + t1322 * t1309, t1327 * t907 - t1322 * t934 - pkin(5) * (-t1327 * t1119 + t1322 * t999), t1327 * t913 - t1322 * t947 - pkin(5) * (t1322 * t1018 - t1327 * t1426), t1327 * t885 - t1322 * t924 - pkin(5) * (-t1327 * t1164 + t1322 * t942), t1327 * t880 - t1322 * t891 - pkin(5) * (t1327 * t1137 + t1322 * t902), t1322 * t1078 + t1327 * t938, t1322 * t1013 + t1327 * t915, t1322 * t1068 + t1327 * t927, -t1322 * t1076 + t1327 * t937, t1322 * t1069 + t1327 * t928, t1322 * t1125 + t1327 * t957, t1327 * t874 - t1322 * t892 - pkin(5) * (-t1327 * t1048 + t1322 * t918), t1327 * t875 - t1322 * t893 - pkin(5) * (-t1327 * t1057 + t1322 * t923), t1327 * t868 - t1322 * t887 - pkin(5) * (-t1327 * t1014 + t1322 * t912), t1327 * t866 - t1322 * t870 - pkin(5) * (t1322 * t878 - t1327 * t930); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1289, 0, t1290, 0, t1272, t1353, t1362, pkin(5) * t1362, t1322 * t1265 + t1359, t1322 * t1249 - t1327 * t1292, t1322 * t1259 - t1321 * t1383, t1322 * t1264 - t1359, t1322 * t1257 - t1326 * t1383, -t1327 * qJDD(2) + t1322 * t1281, t1322 * t1226 + t1327 * t1220 + pkin(5) * (t1327 * t1258 - t1322 * t1287), t1322 * t1227 + t1327 * t1221 + pkin(5) * (t1327 * t1260 + t1322 * t1284), t1322 * t1210 + pkin(5) * (t1327 * t1288 - t1322 * t1291), pkin(5) * (t1327 * t1211 - t1322 * t1277) - (-t1327 * pkin(1) - t1322 * pkin(6)) * t1210, t1322 * t1135 + t1372, t1322 * t1091 - t1327 * t1246, t1322 * t1158 - t1327 * t1197, t1322 * t1134 - t1372, t1322 * t1159 + t1327 * t1193, t1322 * t1170 - t1327 * t1314, t1322 * t1033 + t1327 * t1065 + pkin(5) * (t1327 * t1131 + t1322 * t1192), t1322 * t1037 + t1327 * t1075 + pkin(5) * (t1327 * t1148 + t1322 * t1423), t1322 * t966 + t1327 * t1041 + pkin(5) * (t1327 * t1092 + t1322 * t1224), t1322 * t974 + t1327 * t995 + pkin(5) * (t1327 * t1036 - t1322 * t1225), t1322 * t987 - t1373, -t1327 * t1184 + t1322 * t941, t1322 * t1027 - t1327 * t1123, t1322 * t986 + t1373, t1322 * t1028 + t1327 * t1120, t1322 * t1055 - t1327 * t1309, t1322 * t907 + t1327 * t934 + pkin(5) * (t1322 * t1119 + t1327 * t999), t1322 * t913 + t1327 * t947 + pkin(5) * (t1327 * t1018 + t1322 * t1426), t1322 * t885 + t1327 * t924 + pkin(5) * (t1322 * t1164 + t1327 * t942), t1322 * t880 + t1327 * t891 + pkin(5) * (-t1322 * t1137 + t1327 * t902), -t1327 * t1078 + t1322 * t938, -t1327 * t1013 + t1322 * t915, -t1327 * t1068 + t1322 * t927, t1327 * t1076 + t1322 * t937, -t1327 * t1069 + t1322 * t928, -t1327 * t1125 + t1322 * t957, t1322 * t874 + t1327 * t892 + pkin(5) * (t1322 * t1048 + t1327 * t918), t1322 * t875 + t1327 * t893 + pkin(5) * (t1322 * t1057 + t1327 * t923), t1322 * t868 + t1327 * t887 + pkin(5) * (t1322 * t1014 + t1327 * t912), t1322 * t866 + t1327 * t870 + pkin(5) * (t1322 * t930 + t1327 * t878); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1295, t1296, 0, 0, t1252, t1248, t1255, t1251, t1253, 0, t1205, t1204, t1185, t1191, t1133, t1089, t1156, t1132, t1157, t1169, t1019, t1031, t965, t972, t985, t939, t1025, t984, t1026, t1054, t905, t910, t883, t876, t936, t914, t925, t935, t926, t956, t872, t873, t867, t865; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1329, 0, 0, -g(3), -t1295, 0, t1265, t1249, t1259, t1264, t1257, t1281, t1226, t1227, t1210, pkin(6) * t1210, t1135, t1091, t1158, t1134, t1159, t1170, t1033, t1037, t966, t974, t987, t941, t1027, t986, t1028, t1055, t907, t913, t885, t880, t938, t915, t927, t937, t928, t957, t874, t875, t868, t866; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1329, 0, qJDD(1), 0, g(3), 0, -t1296, 0, t1304, -t1292, -t1385, -t1304, -t1310, -qJDD(2), t1220, t1221, 0, pkin(1) * t1210, t1247, -t1246, -t1197, -t1247, t1193, -t1314, t1065, t1075, t1041, t995, -t1186, -t1184, -t1123, t1186, t1120, -t1309, t934, t947, t924, t891, -t1078, -t1013, -t1068, t1076, -t1069, -t1125, t892, t893, t887, t870; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1295, t1296, 0, 0, t1252, t1248, t1255, t1251, t1253, 0, t1205, t1204, t1185, t1191, t1133, t1089, t1156, t1132, t1157, t1169, t1019, t1031, t965, t972, t985, t939, t1025, t984, t1026, t1054, t905, t910, t883, t876, t936, t914, t925, t935, t926, t956, t872, t873, t867, t865; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1285, t1287, t1293, -t1308, t1301, t1308, 0, -t1277, t1262, 0, t1190, t1144, t1202, t1188, t1203, t1229, t1160, t1162, t1060, -pkin(7) * t1103, t1053, t990, t1098, t1052, t1099, t1117, t964, t971, t906, t899, t983, t949, t960, t982, t961, t1007, t888, t889, t881, t871; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1377, t1284, t1299, t1286, t1294, -t1377, t1277, 0, t1263, 0, t1189, t1142, t1200, t1187, t1201, t1228, t1111, t1118, t1042, t1093, t1051, t988, t1096, t1050, t1097, t1116, t952, t963, t903, t898, t981, t948, t958, t980, t959, t1006, t884, t886, t879, t869; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1304, t1292, t1385, t1304, t1310, qJDD(2), -t1262, -t1263, 0, 0, -t1247, t1246, t1197, t1247, -t1193, t1314, t1333, t1356, t1420, t1421, t1186, t1184, t1123, -t1186, -t1120, t1309, t1335, t1345, t1367, t1379, t1078, t1013, t1068, -t1076, t1069, t1125, t1337, t1336, t1334, t1349; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1223, -t1192, t1422, -t1269, t1266, t1269, 0, -t1225, -t1347, 0, t1115, t1063, t1154, t1113, t1155, t1172, t1074, t1088, t962, -pkin(8) * t978, t1046, t997, t1010, t1045, t1011, t1073, t908, t909, t897, t890; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1410, t1423, t1267, t1222, t1244, -t1410, t1225, 0, t1166, 0, t1114, t1061, t1152, t1112, t1153, t1171, t1032, t1034, t955, t973, t1044, t996, t1008, t1043, t1009, t1072, t900, t904, t896, t882; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1247, t1246, t1197, t1247, -t1193, t1314, t1347, -t1166, 0, 0, t1186, t1184, t1123, -t1186, -t1120, t1309, t1351, t1368, t1059, t977, t1078, t1013, t1068, -t1076, t1069, t1125, t1357, t1358, t1350, t1382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1141, -t1119, t1424, t1232, t1230, -t1232, 0, -t1137, t1039, 0, t1079, t1015, t1070, t1077, t1071, t1126, t975, t976, t916, -pkin(9) * t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1352, t1426, t1231, t1140, t1179, -t1352, t1137, 0, t1040, 0, -t1168, -t1167, -t1086, t1168, t1082, -t1139, t945, t946, -pkin(4) * t1014, -pkin(4) * t930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1186, t1184, t1123, -t1186, -t1120, t1309, -t1039, -t1040, 0, 0, t1078, t1013, t1068, -t1076, t1069, t1125, t1369, t1370, t1361, t1416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1110, t1083, t1425, t1175, t1173, -t1175, 0, t1023, t969, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1176, t1085, t1174, -t1338, t1101, -t1176, -t1023, 0, t970, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1168, t1167, t1086, -t1168, -t1082, t1139, -t969, -t970, 0, 0;];
m_new_reg = t1;
