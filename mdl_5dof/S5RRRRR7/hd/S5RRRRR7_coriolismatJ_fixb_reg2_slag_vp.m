% Calculate inertial parameters regressor of coriolis matrix for
% S5RRRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4,d5]';
% 
% Output:
% cmat_reg [(5*5)x(5*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:23
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRR7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRR7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:22:32
% EndTime: 2019-12-31 22:23:03
% DurationCPUTime: 21.41s
% Computational Cost: add. (22027->749), mult. (43062->973), div. (0->0), fcn. (48546->8), ass. (0->559)
t528 = cos(qJ(2));
t832 = cos(qJ(3));
t865 = -pkin(7) - pkin(6);
t632 = t865 * t832;
t612 = t528 * t632;
t526 = sin(qJ(2));
t525 = sin(qJ(3));
t687 = t525 * t865;
t635 = t526 * t687;
t429 = t612 - t635;
t685 = t832 * t528;
t490 = -t525 * t526 + t685;
t823 = t490 * pkin(8);
t543 = t429 - t823;
t831 = cos(qJ(4));
t342 = t831 * t543;
t613 = t526 * t632;
t634 = t528 * t687;
t431 = t634 + t613;
t759 = t525 * t528;
t491 = t832 * t526 + t759;
t485 = t491 * pkin(8);
t358 = -t485 + t431;
t524 = sin(qJ(4));
t763 = t524 * t358;
t224 = -t342 + t763;
t614 = t865 * t685;
t432 = -t614 + t635;
t359 = t432 + t823;
t762 = t524 * t359;
t636 = t865 * t759;
t547 = t613 + t636;
t874 = -t485 + t547;
t885 = t831 * t874;
t226 = t885 - t762;
t411 = -t831 * t490 + t524 * t491;
t789 = t226 * t411;
t481 = t831 * t491;
t761 = t524 * t490;
t875 = t481 + t761;
t602 = t224 * t875 + t789;
t916 = qJD(3) + qJD(4);
t527 = cos(qJ(5));
t913 = t527 * t226;
t662 = -t913 / 0.2e1;
t523 = sin(qJ(5));
t914 = t523 * t226;
t663 = -t914 / 0.2e1;
t790 = t224 * t527;
t344 = t831 * t359;
t887 = t524 * t874;
t894 = t344 + t887;
t902 = t894 * t527;
t915 = -t902 / 0.2e1;
t920 = t790 / 0.2e1 + t915;
t538 = t524 * t543;
t683 = t831 * t358;
t533 = t538 / 0.2e1 + t683 / 0.2e1;
t857 = -t885 / 0.2e1;
t900 = t857 + t762 / 0.2e1;
t912 = t533 + t900;
t919 = qJD(1) * t912;
t910 = t900 - t533;
t918 = qJD(2) * t910;
t917 = qJD(2) * t912;
t696 = qJD(2) + qJD(3);
t906 = qJD(4) + t696;
t859 = -t226 / 0.2e1;
t903 = t894 * t523;
t205 = t903 / 0.2e1;
t798 = t226 * t894;
t627 = t832 * t831;
t760 = t524 * t525;
t484 = (t627 - t760) * pkin(2);
t847 = -t484 / 0.2e1;
t628 = t832 * pkin(2) + pkin(3);
t497 = t831 * t628;
t475 = pkin(2) * t760 - t497;
t850 = -t475 / 0.2e1;
t911 = t850 + t847;
t409 = t875 ^ 2;
t893 = -t411 ^ 2 + t409;
t904 = t893 * t527;
t909 = qJD(1) * t904;
t905 = t893 * t523;
t908 = qJD(1) * t905;
t747 = -t763 / 0.2e1 + t342 / 0.2e1;
t327 = -t344 / 0.2e1;
t892 = -t887 / 0.2e1 + t327;
t899 = t892 + t747;
t907 = qJD(2) * t899;
t467 = -pkin(4) + t475;
t853 = t467 / 0.2e1;
t901 = t894 * t853;
t797 = t894 * t875;
t898 = t893 * qJD(1);
t897 = -t894 / 0.2e1;
t521 = t523 ^ 2;
t729 = qJD(1) * t875;
t890 = t411 * t729;
t896 = t521 * t890;
t522 = t527 ^ 2;
t895 = t522 * t890;
t638 = t696 * t411;
t884 = qJD(4) * t411 + t638;
t825 = t875 * pkin(4);
t826 = t411 * pkin(9);
t265 = t825 + t826;
t855 = t411 / 0.2e1;
t856 = t875 / 0.2e1;
t889 = t523 * t875;
t876 = t696 * t527;
t888 = t523 * t876;
t886 = t527 * t875;
t514 = -pkin(2) * t528 - pkin(1);
t452 = -t490 * pkin(3) + t514;
t622 = t411 * pkin(4) - pkin(9) * t875;
t548 = t452 + t622;
t119 = -t527 * t548 + t903;
t120 = t523 * t548 + t902;
t565 = (t119 * t527 - t120 * t523) * t411;
t839 = -t522 / 0.2e1;
t840 = t521 / 0.2e1;
t648 = t840 + t839;
t246 = t648 * t875;
t642 = qJD(2) + t916;
t765 = t523 * t527;
t877 = t642 * t765;
t185 = -qJD(1) * t246 + t877;
t848 = t481 / 0.2e1;
t873 = t761 / 0.2e1 + t848;
t883 = qJD(5) * t873;
t882 = t873 * qJD(1);
t829 = pkin(3) * t491;
t229 = t829 + t265;
t769 = t523 * t229;
t126 = t913 + t769;
t804 = t126 * t527;
t755 = t527 * t229;
t125 = t755 - t914;
t805 = t125 * t523;
t577 = -t805 / 0.2e1 + t804 / 0.2e1;
t881 = pkin(4) * t897 + t577 * pkin(9);
t880 = -0.2e1 * t875;
t507 = t522 - t521;
t878 = t507 * t642;
t639 = t696 * t875;
t227 = t683 + t538;
t756 = t527 * t227;
t520 = t526 * pkin(2);
t222 = t229 + t520;
t773 = t523 * t222;
t124 = t756 + t773;
t806 = t124 * t527;
t112 = t806 / 0.2e1;
t758 = t527 * t222;
t771 = t523 * t227;
t123 = t758 - t771;
t807 = t123 * t523;
t750 = -t807 / 0.2e1 + t112;
t744 = t521 + t522;
t838 = t522 / 0.2e1;
t872 = (t838 + t840) * t484;
t833 = t527 / 0.2e1;
t836 = t523 / 0.2e1;
t578 = t119 * t836 + t120 * t833;
t235 = (-t411 / 0.2e1 + t855) * t765;
t708 = t246 * qJD(5);
t871 = -qJD(4) * t235 + t708;
t654 = t411 * t833;
t248 = t523 * t411;
t659 = -t248 / 0.2e1;
t234 = -t523 * t654 + t527 * t659;
t870 = -qJD(4) * t234 + t708;
t519 = qJD(5) * t527;
t509 = t523 * t519;
t709 = t235 * qJD(1);
t217 = t709 - t509;
t216 = t709 + t509;
t869 = t696 * t234 - t708;
t868 = t235 * t696 + t708;
t672 = qJD(1) * t765;
t82 = t246 * t642 + t409 * t672;
t866 = pkin(4) / 0.2e1;
t864 = t123 / 0.2e1;
t863 = -t124 / 0.2e1;
t754 = t527 * t265;
t143 = t754 - t914;
t862 = -t143 / 0.2e1;
t768 = t523 * t265;
t144 = t768 + t913;
t861 = t144 / 0.2e1;
t858 = t894 / 0.2e1;
t854 = -t467 / 0.2e1;
t584 = t524 * t628;
t679 = t831 * t525;
t476 = pkin(2) * t679 + t584;
t468 = pkin(9) + t476;
t852 = -t468 / 0.2e1;
t851 = t468 / 0.2e1;
t849 = t476 / 0.2e1;
t626 = -t481 / 0.2e1;
t846 = t484 / 0.2e1;
t436 = t524 * pkin(3);
t512 = pkin(9) + t436;
t845 = -t512 / 0.2e1;
t844 = t512 / 0.2e1;
t692 = t831 * pkin(3);
t513 = -t692 - pkin(4);
t843 = -t513 / 0.2e1;
t842 = t513 / 0.2e1;
t841 = -t521 / 0.2e1;
t837 = -t523 / 0.2e1;
t835 = t524 / 0.2e1;
t834 = -t527 / 0.2e1;
t830 = pkin(2) * t525;
t827 = t224 * pkin(4);
t686 = t832 * t524;
t482 = (t686 + t679) * pkin(2);
t824 = t482 * pkin(4);
t822 = pkin(3) * qJD(3);
t821 = pkin(3) * qJD(4);
t820 = qJD(2) * pkin(2);
t794 = t224 * t226;
t7 = -t119 * t123 + t120 * t124 - t794;
t819 = t7 * qJD(1);
t8 = -t119 * t125 + t120 * t126 - t798;
t818 = t8 * qJD(1);
t9 = (t123 * t527 + t124 * t523) * t875 + t565;
t817 = t9 * qJD(1);
t572 = t411 * t847 + t482 * t856;
t534 = -(t853 + t843) * t411 + (t852 + t844) * t875 + t572;
t31 = t523 * t534 + t920;
t816 = qJD(1) * t31;
t649 = t475 / 0.2e1 + t854;
t546 = (t852 + t849) * t875 + t649 * t411;
t583 = pkin(9) * t856 - t411 * t866;
t535 = t546 + t583;
t35 = t535 * t523 + t920;
t815 = qJD(1) * t35;
t70 = t119 * t411 + t226 * t889;
t814 = qJD(1) * t70;
t71 = -t120 * t411 - t226 * t886;
t813 = qJD(1) * t71;
t10 = -t119 * t143 + t120 * t144 - t798;
t812 = t10 * qJD(1);
t11 = (t125 * t527 + t126 * t523) * t875 + t565;
t811 = t11 * qJD(1);
t810 = t119 * t875;
t12 = (t143 * t527 + t144 * t523) * t875 + t565;
t809 = t12 * qJD(1);
t808 = t120 * t875;
t803 = t143 * t523;
t802 = t144 * t527;
t20 = t123 * t411 + t523 * t602 - t810;
t801 = t20 * qJD(1);
t21 = -t124 * t411 + t527 * t602 - t808;
t800 = t21 * qJD(1);
t603 = t789 + t797;
t22 = t125 * t411 + t523 * t603 - t810;
t799 = t22 * qJD(1);
t792 = t224 * t513;
t791 = t224 * t523;
t788 = t226 * t482;
t23 = -t126 * t411 + t527 * t603 - t808;
t785 = t23 * qJD(1);
t24 = (-t119 + t903) * t875 + (t143 + t914) * t411;
t784 = t24 * qJD(1);
t25 = (-t120 + t902) * t875 + (-t144 + t913) * t411;
t783 = t25 * qJD(1);
t30 = -t227 * t411 + t602 - t797;
t781 = t30 * qJD(1);
t780 = t875 * t468;
t779 = t875 * t524;
t778 = t467 * t411;
t777 = t475 * t411;
t776 = t476 * t875;
t455 = t520 + t829;
t49 = t227 * t894 + t452 * t455 - t794;
t775 = t49 * qJD(1);
t52 = t452 * t829;
t774 = t52 * qJD(1);
t255 = t527 * t411;
t540 = -t777 / 0.2e1 - t776 / 0.2e1 + t572;
t682 = t831 * t411;
t552 = (-t779 / 0.2e1 + t682 / 0.2e1) * pkin(3);
t80 = t552 - t540;
t751 = t80 * qJD(1);
t464 = t476 * qJD(4);
t477 = t482 * qJD(3);
t745 = -t477 - t464;
t288 = t452 * t875;
t163 = t411 * t455 + t288;
t740 = qJD(1) * t163;
t289 = t452 * t411;
t164 = t455 * t875 - t289;
t739 = qJD(1) * t164;
t181 = -t411 * t829 - t288;
t736 = qJD(1) * t181;
t182 = -t829 * t875 + t289;
t735 = qJD(1) * t182;
t262 = t507 * t409;
t733 = qJD(1) * t262;
t392 = -t490 * t520 + t491 * t514;
t732 = qJD(1) * t392;
t393 = t490 * t514 + t491 * t520;
t731 = qJD(1) * t393;
t730 = qJD(1) * t411;
t728 = qJD(1) * t452;
t727 = qJD(1) * t514;
t726 = qJD(1) * t528;
t725 = qJD(2) * t523;
t724 = qJD(2) * t527;
t723 = qJD(3) * t513;
t722 = qJD(3) * t514;
t718 = qJD(4) * t875;
t717 = qJD(4) * t452;
t716 = qJD(4) * t523;
t715 = qJD(4) * t527;
t714 = qJD(5) * t523;
t148 = (-t429 - t432) * t491 + (-t547 + t431) * t490;
t713 = t148 * qJD(1);
t158 = t429 * t547 + t431 * t432 + t514 * t520;
t711 = t158 * qJD(1);
t651 = t856 - t875 / 0.2e1;
t247 = t651 * t523;
t707 = t247 * qJD(1);
t706 = t248 * qJD(1);
t650 = 0.2e1 * t855;
t250 = t650 * t523;
t240 = t250 * qJD(1);
t253 = t651 * t527;
t705 = t253 * qJD(1);
t704 = t255 * qJD(1);
t257 = t650 * t527;
t243 = t257 * qJD(1);
t354 = t490 ^ 2 - t491 ^ 2;
t703 = t354 * qJD(1);
t408 = t626 + t848;
t700 = t408 * qJD(1);
t508 = -t526 ^ 2 + t528 ^ 2;
t699 = t508 * qJD(1);
t698 = t526 * qJD(2);
t697 = t528 * qJD(2);
t693 = -t831 / 0.2e1;
t691 = pkin(1) * t526 * qJD(1);
t690 = pkin(1) * t726;
t689 = t524 * t822;
t688 = t524 * t821;
t518 = pkin(4) * t834;
t681 = t831 * t521;
t680 = t831 * t522;
t678 = t411 * t728;
t677 = t875 * t728;
t676 = t521 * t729;
t675 = t522 * t729;
t674 = t490 * t727;
t673 = t491 * t727;
t671 = t523 * t715;
t670 = qJD(5) * t411 * t875;
t267 = t875 * t730;
t668 = t491 * t490 * qJD(1);
t667 = t526 * t697;
t494 = t513 * t836;
t658 = t411 * t837;
t657 = t512 * t837;
t655 = -t886 / 0.2e1;
t653 = t859 + t226 / 0.2e1;
t652 = t859 + t227 / 0.2e1;
t647 = t839 + t841;
t646 = t832 * qJD(2);
t645 = t832 * qJD(3);
t644 = t831 * qJD(3);
t643 = t831 * qJD(4);
t352 = t744 * t475;
t394 = t744 * t484;
t641 = -pkin(9) * t889 / 0.2e1 - pkin(4) * t658 + t915;
t418 = t696 * t491;
t417 = t696 * t490;
t633 = -t692 / 0.2e1;
t630 = t409 * t509;
t629 = t875 * t672;
t625 = t436 / 0.2e1 + t849;
t624 = t866 + t649;
t623 = t916 * t436;
t620 = t647 * t475;
t619 = -0.2e1 * t629;
t618 = 0.2e1 * t629;
t615 = t847 + t843 + t854;
t611 = t411 * t629;
t610 = pkin(9) * t655 - t411 * t518 + t205;
t159 = -t352 * t468 + t467 * t476;
t574 = -t226 * t849 + t901;
t4 = t827 / 0.2e1 + (pkin(9) * t863 + t120 * t850 + t144 * t851) * t527 + (pkin(9) * t864 + t119 * t850 + t143 * t852) * t523 + t574;
t609 = t4 * qJD(1) + t159 * qJD(2);
t177 = t394 * t468 + t467 * t482;
t575 = t901 - t788 / 0.2e1;
t2 = -t792 / 0.2e1 + (t120 * t846 + t124 * t845 + t126 * t851) * t527 + (t119 * t846 + t123 * t844 + t125 * t852) * t523 + t575;
t608 = t2 * qJD(1) + t177 * qJD(2);
t606 = t806 - t807;
t605 = t804 - t805;
t604 = t802 - t803;
t599 = -t778 - t780;
t598 = -t513 * t411 - t512 * t875;
t14 = -t806 / 0.2e1 + t807 / 0.2e1 + t577;
t597 = -qJD(1) * t14 - qJD(2) * t394;
t17 = (t861 + t863) * t527 + (t862 + t864) * t523;
t596 = -qJD(1) * t17 + qJD(2) * t352;
t541 = t788 / 0.2e1 + t476 * t859 + t911 * t894;
t553 = (t224 * t693 + t227 * t835) * pkin(3);
t26 = t553 + t541;
t269 = t475 * t482 + t476 * t484;
t595 = -t26 * qJD(1) + t269 * qJD(2);
t579 = -t482 / 0.2e1 + t625;
t314 = t579 * t527;
t536 = t875 * t845 + t411 * t843 + (t411 * t693 + t835 * t875) * pkin(3);
t531 = t536 + t583;
t40 = t915 + t902 / 0.2e1 + t531 * t523;
t594 = qJD(1) * t40 - qJD(2) * t314;
t593 = t875 * (-qJD(5) - t730);
t592 = -t627 / 0.2e1;
t127 = t327 - t342 / 0.2e1 + (-t874 / 0.2e1 + t358 / 0.2e1) * t524;
t591 = -qJD(1) * t127 + qJD(2) * t482;
t532 = t887 / 0.2e1 + t344 / 0.2e1;
t129 = t532 + t892;
t590 = -qJD(1) * t129 - qJD(2) * t436;
t130 = t532 + t747;
t589 = qJD(1) * t130 + qJD(2) * t476;
t131 = t857 + t885 / 0.2e1;
t585 = -t497 / 0.2e1 + t633;
t438 = pkin(2) * t592 - t585;
t588 = -t131 * qJD(1) + t438 * qJD(2);
t587 = -qJD(2) * t475 - t919;
t586 = qJD(2) * t484 - t919;
t582 = t826 / 0.2e1 + t825 / 0.2e1;
t576 = t802 / 0.2e1 - t803 / 0.2e1;
t573 = t411 * t851 + t854 * t875;
t571 = t411 * t844 + t843 * t875;
t34 = t205 - t791 / 0.2e1 + t534 * t527;
t570 = -qJD(1) * t34 - t482 * t725;
t38 = (t858 - t224 / 0.2e1) * t523 + t535 * t527;
t569 = -qJD(1) * t38 - t476 * t725;
t559 = t222 / 0.2e1 + t573;
t55 = t523 * t652 - t527 * t559;
t568 = -qJD(1) * t55 - t467 * t725;
t53 = t523 * t559 + t527 * t652;
t567 = -qJD(1) * t53 - t467 * t724;
t175 = t267 + t883;
t566 = t890 + t883;
t564 = t633 + t866 + t843;
t562 = t265 / 0.2e1 + t582;
t561 = t681 + t680;
t403 = (t512 * t561 + t513 * t524) * pkin(3);
t529 = t576 * t512 + (-t226 * t835 + t578 * t831) * pkin(3) + t894 * t842;
t6 = t529 - t881;
t556 = t680 / 0.2e1 + t681 / 0.2e1;
t530 = (t467 * t835 + t556 * t468) * pkin(3) + t512 * t620 + t476 * t842;
t89 = t824 / 0.2e1 + t647 * t484 * pkin(9) + t530;
t560 = t6 * qJD(1) + t89 * qJD(2) + t403 * qJD(3);
t558 = t229 / 0.2e1 + t571;
t189 = t744 * (t692 / 0.2e1 + t911);
t19 = (t861 - t126 / 0.2e1) * t527 + (t862 + t125 / 0.2e1) * t523;
t483 = t561 * pkin(3);
t557 = -qJD(1) * t19 - qJD(2) * t189 - qJD(3) * t483;
t555 = t884 * t875;
t554 = (t639 + t718) * t411;
t300 = t615 * t523;
t67 = t523 * t653 - t527 * t558;
t551 = -qJD(1) * t67 + qJD(2) * t300 - t523 * t723;
t301 = t615 * t527;
t65 = t523 * t558 + t527 * t653;
t550 = -qJD(1) * t65 + qJD(2) * t301 - t527 * t723;
t313 = t579 * t523;
t43 = (t858 + t897) * t523 + t531 * t527;
t549 = -qJD(1) * t43 - qJD(2) * t313 - t523 * t689;
t308 = t624 * t523;
t435 = t564 * t523;
t74 = t562 * t527;
t545 = pkin(4) * t716 + qJD(1) * t74 + qJD(2) * t308 + qJD(3) * t435;
t309 = t624 * t527;
t437 = t564 * t527;
t72 = t562 * t523;
t544 = pkin(4) * t715 - qJD(1) * t72 + qJD(2) * t309 + qJD(3) * t437;
t539 = -t780 / 0.2e1 - t778 / 0.2e1 + t572;
t517 = pkin(4) * t837;
t510 = t526 * t726;
t506 = t523 * t688;
t496 = t507 * qJD(5);
t495 = t513 * t833;
t479 = t484 * qJD(3);
t478 = t483 * qJD(4);
t463 = t475 * qJD(4);
t462 = t523 * t477;
t451 = t523 * t464;
t444 = t467 * t833;
t443 = t467 * t836;
t440 = t527 * t633 + t495 + t518;
t439 = t523 * t633 + t494 + t517;
t420 = (t592 + t760) * pkin(2) + t585;
t419 = -t436 / 0.2e1 - t584 / 0.2e1 + (-t679 - t686 / 0.2e1) * pkin(2);
t400 = t408 * qJD(4);
t374 = t394 * qJD(3);
t361 = t612 / 0.2e1 + t614 / 0.2e1 - t635;
t360 = -t634 / 0.2e1 - t636 / 0.2e1 - t613;
t353 = t509 * t880;
t345 = t352 * qJD(4);
t315 = t482 * t834 - t625 * t527;
t312 = t482 * t836 + t625 * t523;
t311 = t475 * t833 + t444 + t518;
t310 = t475 * t836 + t443 + t517;
t305 = 0.2e1 * t626 - t761;
t303 = t484 * t834 + t444 + t495;
t302 = t484 * t837 + t443 + t494;
t264 = t619 + t878;
t263 = t618 - t878;
t256 = t255 / 0.2e1 - t654;
t251 = t659 - t658;
t231 = t519 + t243;
t230 = -t240 - t714;
t208 = -t790 / 0.2e1;
t207 = t791 / 0.2e1;
t188 = pkin(3) * t556 + t620 + t872;
t160 = t906 * t873;
t156 = qJD(4) * t305 - t639;
t150 = (t648 - t838 - t841) * t411;
t137 = 0.2e1 * t892;
t132 = 0.2e1 * t900;
t88 = -t824 / 0.2e1 + t530 + t872 * pkin(9);
t86 = -t871 + t895;
t85 = t871 + t896;
t84 = t353 - 0.2e1 * t611;
t81 = t552 + t540;
t79 = -qJD(4) * t247 + qJD(5) * t257 - t909;
t78 = -qJD(4) * t253 - qJD(5) * t250 + t908;
t77 = -(t675 + t888) * t411 - t870;
t76 = -(t676 - t888) * t411 + t870;
t75 = -t914 + t754 / 0.2e1 - t582 * t527;
t73 = -t913 - t768 / 0.2e1 + t582 * t523;
t68 = 0.2e1 * t663 + t755 / 0.2e1 - t571 * t527;
t66 = 0.2e1 * t662 - t769 / 0.2e1 + t571 * t523;
t64 = qJD(4) * t889 + qJD(5) * t256 + t523 * t639 + t909;
t63 = qJD(4) * t886 + qJD(5) * t251 + t875 * t876 - t908;
t56 = t663 - t771 / 0.2e1 + t758 / 0.2e1 - t573 * t527;
t54 = t662 - t756 / 0.2e1 - t773 / 0.2e1 + t573 * t523;
t46 = qJD(4) * t150 - t507 * t638 + t353 + 0.2e1 * t611;
t42 = t527 * t536 + t205 + t610;
t41 = t523 * t536 + t641 + t915;
t37 = t527 * t546 + t207 + t610;
t36 = t523 * t546 + t208 + t641;
t33 = t512 * t655 - t513 * t654 + t527 * t539 + t205 + t207;
t32 = -t411 * t494 + t523 * t539 + t657 * t875 + t208 + t915;
t27 = t553 - t541;
t18 = t576 + t577;
t16 = t576 + t750;
t13 = t577 + t750;
t5 = t529 + t881;
t3 = -t827 / 0.2e1 - t578 * t475 + t576 * t468 + t574 + t750 * pkin(9);
t1 = t512 * t112 + t123 * t657 + t792 / 0.2e1 + t578 * t484 + t577 * t468 + t575;
t15 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t667, t508 * qJD(2), 0, -t667, 0, 0, -pkin(1) * t698, -pkin(1) * t697, 0, 0, t491 * t417, t696 * t354, 0, -t490 * t418, 0, 0, qJD(2) * t392 + t491 * t722, qJD(2) * t393 + t490 * t722, qJD(2) * t148, qJD(2) * t158, -t555, -t906 * t893, 0, t554, 0, 0, qJD(2) * t163 - qJD(3) * t181 + t717 * t875, qJD(2) * t164 - qJD(3) * t182 - t411 * t717, qJD(2) * t30, qJD(2) * t49 + qJD(3) * t52, -t522 * t555 - t630, 0.2e1 * t523 * t884 * t886 - qJD(5) * t262, -t523 * t670 + t906 * t904, -t521 * t555 + t630, -t527 * t670 - t906 * t905, t554, qJD(2) * t20 + qJD(3) * t22 + qJD(4) * t24 + qJD(5) * t71, qJD(2) * t21 + qJD(3) * t23 + qJD(4) * t25 + qJD(5) * t70, -qJD(2) * t9 - qJD(3) * t11 - qJD(4) * t12, qJD(2) * t7 + qJD(3) * t8 + qJD(4) * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t510, t699, t697, -t510, -t698, 0, -pkin(6) * t697 - t691, pkin(6) * t698 - t690, 0, 0, t668, t703, t417, -t668, -t418, 0, qJD(2) * t429 + qJD(3) * t361 + t732, -qJD(2) * t431 + qJD(3) * t360 + t731, t713 + (-t490 * t832 - t491 * t525) * t820, t711 + (t429 * t832 + t431 * t525) * t820, -t890, -t898, -t884, t267, t156, 0, -qJD(2) * t224 + t916 * t899 + t740, -qJD(2) * t227 + t916 * t910 + t739, t781 + (-t776 - t777) * qJD(2) + t81 * qJD(3), t775 + (t224 * t475 + t227 * t476) * qJD(2) + t27 * qJD(3), t77, t46, t64, t76, t63, t175, t801 + (t523 * t599 - t790) * qJD(2) + t32 * qJD(3) + t36 * qJD(4) + t56 * qJD(5), t800 + (t527 * t599 + t791) * qJD(2) + t33 * qJD(3) + t37 * qJD(4) + t54 * qJD(5), qJD(2) * t606 + t13 * qJD(3) + t16 * qJD(4) - t817, t819 + (t224 * t467 + t468 * t606) * qJD(2) + t1 * qJD(3) + t3 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t668, t703, t417, -t668, -t418, 0, qJD(2) * t361 - qJD(3) * t432 + t673, qJD(2) * t360 - qJD(3) * t547 + t674, 0, 0, -t890, -t898, -t884, t267, t156, 0, -qJD(3) * t894 + qJD(4) * t137 - t736 + t907, -qJD(3) * t226 + qJD(4) * t132 - t735 + t918, t81 * qJD(2) + (t682 - t779) * t822, t774 + t27 * qJD(2) + (t226 * t524 - t831 * t894) * t822, t77, t46, t64, t76, t63, t175, t799 + t32 * qJD(2) + (t523 * t598 - t902) * qJD(3) + t41 * qJD(4) + t68 * qJD(5), t785 + t33 * qJD(2) + (t527 * t598 + t903) * qJD(3) + t42 * qJD(4) + t66 * qJD(5), t13 * qJD(2) + qJD(3) * t605 + t18 * qJD(4) - t811, t818 + t1 * qJD(2) + (t512 * t605 + t513 * t894) * qJD(3) + t5 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t890, -t898, -t884, t890, t305 * t696 - t718, 0, qJD(3) * t137 - qJD(4) * t894 + t677 + t907, qJD(3) * t132 - qJD(4) * t226 - t678 + t918, 0, 0, (-t671 - t675) * t411 + t869, t353 + t696 * t150 + (-qJD(4) * t507 + t618) * t411, t696 * t889 + t716 * t875 + t909, (t671 - t676) * t411 - t869, t696 * t886 + t715 * t875 - t908, t566, t784 + t36 * qJD(2) + t41 * qJD(3) + (t523 * t622 - t902) * qJD(4) + t75 * qJD(5), t783 + t37 * qJD(2) + t42 * qJD(3) + (t527 * t622 + t903) * qJD(4) + t73 * qJD(5), t16 * qJD(2) + t18 * qJD(3) + qJD(4) * t604 - t809, t812 + t3 * qJD(2) + t5 * qJD(3) + (-pkin(4) * t894 + pkin(9) * t604) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, t877 * t880 - t733, t256 * t696 + t523 * t593, t82, t251 * t696 + t527 * t593, t160, qJD(2) * t56 + qJD(3) * t68 + qJD(4) * t75 - qJD(5) * t120 + t813, qJD(2) * t54 + qJD(3) * t66 + qJD(4) * t73 + qJD(5) * t119 + t814, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t510, -t699, 0, t510, 0, 0, t691, t690, 0, 0, -t668, -t703, 0, t668, 0, 0, -t732, -t731, -t713, -t711, t890, t898, 0, -t267, t400, 0, qJD(3) * t127 - qJD(4) * t130 - t740, t916 * t912 - t739, -qJD(3) * t80 - t781, -qJD(3) * t26 - t775, t86, t84, t79, t85, t78, -t175, qJD(3) * t31 + qJD(4) * t35 + qJD(5) * t55 - t801, qJD(3) * t34 + qJD(4) * t38 + qJD(5) * t53 - t800, qJD(3) * t14 + qJD(4) * t17 + t817, qJD(3) * t2 + qJD(4) * t4 - t819; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t830, -pkin(2) * t645, 0, 0, 0, 0, 0, 0, 0, 0, t745, -t479 + t463, 0, qJD(3) * t269, t509, t496, 0, -t509, 0, 0, t467 * t714 + t527 * t745, t467 * t519 + t451 + t462, t374 - t345, qJD(3) * t177 + qJD(4) * t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t696 * t830, (-t646 - t645) * pkin(2), 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t419 - t477 - t591, qJD(4) * t420 - t479 - t586, -t751, (-t482 * t831 + t484 * t524) * t822 + t595, t509, t496, 0, -t509, 0, 0, qJD(4) * t315 + qJD(5) * t302 - t482 * t876 + t816, qJD(4) * t312 + qJD(5) * t303 + t462 - t570, qJD(4) * t188 + t374 - t597, (t394 * t512 + t482 * t513) * qJD(3) + t88 * qJD(4) + t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t700, 0, qJD(3) * t419 - t464 - t589, qJD(3) * t420 + t463 - t587, 0, 0, t216, t496, -t707, -t216, -t705, 0, t815 + qJD(3) * t315 + qJD(5) * t310 + (-qJD(2) - qJD(4)) * t527 * t476, qJD(3) * t312 + qJD(5) * t311 + t451 - t569, qJD(3) * t188 - t345 - t596, t88 * qJD(3) + (-pkin(4) * t476 - pkin(9) * t352) * qJD(4) + t609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, t264, t231, -t185, t230, -t882, qJD(3) * t302 + qJD(4) * t310 - t468 * t519 - t568, qJD(3) * t303 + qJD(4) * t311 + t468 * t714 - t567, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t668, -t703, 0, t668, 0, 0, -t673, -t674, 0, 0, t890, t898, 0, -t267, t400, 0, -qJD(2) * t127 - qJD(4) * t129 + t736, qJD(4) * t131 + t735 - t917, qJD(2) * t80, qJD(2) * t26 - t774, t86, t84, t79, t85, t78, -t175, -qJD(2) * t31 + qJD(4) * t40 + qJD(5) * t67 - t799, -qJD(2) * t34 + qJD(4) * t43 + qJD(5) * t65 - t785, -qJD(2) * t14 + qJD(4) * t19 + t811, -qJD(2) * t2 + qJD(4) * t6 - t818; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t525 * t820, pkin(2) * t646, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t436 + t591, -qJD(4) * t438 + t586, t751, -t595, t509, t496, 0, -t509, 0, 0, -qJD(4) * t314 - qJD(5) * t300 + t482 * t724 - t816, qJD(4) * t313 - qJD(5) * t301 + t570, qJD(4) * t189 + t597, qJD(4) * t89 - t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t688, -pkin(3) * t643, 0, 0, t509, t496, 0, -t509, 0, 0, t513 * t714 - t527 * t688, t513 * t519 + t506, t478, t403 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t700, 0, -t623 + t590, (-t644 - t643) * pkin(3) - t588, 0, 0, t216, t496, -t707, -t216, -t705, 0, qJD(5) * t439 - t527 * t623 + t594, qJD(5) * t440 + t506 - t549, t478 - t557, (-pkin(4) * t524 + pkin(9) * t561) * t821 + t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, t264, t231, -t185, t230, -t882, qJD(4) * t439 - t512 * t519 - t551, qJD(4) * t440 + t512 * t714 - t550, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t890, t898, 0, -t890, -t696 * t408, 0, qJD(2) * t130 + qJD(3) * t129 - t677, -qJD(3) * t131 + t678 - t917, 0, 0, -t868 + t895, t411 * t619 + t353, qJD(5) * t255 + t247 * t696 - t909, t868 + t896, -qJD(5) * t248 + t253 * t696 + t908, -t566, -qJD(2) * t35 - qJD(3) * t40 - qJD(5) * t74 - t784, -qJD(2) * t38 - qJD(3) * t43 + qJD(5) * t72 - t783, -qJD(2) * t17 - qJD(3) * t19 + t809, -qJD(2) * t4 - qJD(3) * t6 - t812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t700, 0, qJD(3) * t436 + t589, qJD(3) * t438 + t587, 0, 0, -t217, t496, t707, t217, t705, 0, qJD(3) * t314 - qJD(5) * t308 + t476 * t724 - t815, -qJD(3) * t313 - qJD(5) * t309 + t569, -qJD(3) * t189 + t596, -qJD(3) * t89 - t609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t700, 0, -t590 + t689, pkin(3) * t644 + t588, 0, 0, -t217, t496, t707, t217, t705, 0, -qJD(5) * t435 + t527 * t689 - t594, -qJD(5) * t437 + t549, t557, -t560; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t509, t496, 0, -t509, 0, 0, -pkin(4) * t714, -pkin(4) * t519, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, t264, t519 + t704, -t185, -t706 - t714, -t882, -pkin(9) * t519 - t545, pkin(9) * t714 - t544, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, 0.2e1 * t875 * t877 + t733, -qJD(4) * t255 - t257 * t696 + t523 * t890, -t82, qJD(4) * t248 + t250 * t696 + t527 * t890, t160, -qJD(2) * t55 - qJD(3) * t67 + qJD(4) * t74 - t813, -qJD(2) * t53 - qJD(3) * t65 - qJD(4) * t72 - t814, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, t263, -t243, t185, t240, t882, qJD(3) * t300 + qJD(4) * t308 + t568, qJD(3) * t301 + qJD(4) * t309 + t567, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, t263, -t243, t185, t240, t882, qJD(4) * t435 + t551, qJD(4) * t437 + t550, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, t263, -t704, t185, t706, t882, t545, t544, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t15;
