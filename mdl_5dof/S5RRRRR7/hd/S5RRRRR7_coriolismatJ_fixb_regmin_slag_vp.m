% Calculate minimal parameter regressor of coriolis matrix for
% S5RRRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% qJD [5x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,d1,d2,d3,d4,d5]';
% 
% Output:
% cmat_reg [(5*%NQJ)%x31]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-12-31 22:23
% Revision: 9bd3e9fa678258af3b32f1bcc8622e39ff85504d (2019-12-30)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S5RRRRR7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(5,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'S5RRRRR7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [5x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [5 1]), ...
  'S5RRRRR7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S5RRRRR7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-12-31 22:22:30
% EndTime: 2019-12-31 22:22:53
% DurationCPUTime: 11.64s
% Computational Cost: add. (9191->488), mult. (18607->649), div. (0->0), fcn. (21181->8), ass. (0->391)
t343 = sin(qJ(5));
t344 = sin(qJ(4));
t346 = sin(qJ(2));
t585 = pkin(6) + pkin(7);
t318 = t585 * t346;
t349 = cos(qJ(2));
t319 = t585 * t349;
t345 = sin(qJ(3));
t348 = cos(qJ(3));
t214 = t348 * t318 + t345 * t319;
t310 = -t345 * t349 - t348 * t346;
t595 = t310 * pkin(8) - t214;
t607 = t344 * t595;
t309 = -t345 * t346 + t348 * t349;
t312 = t348 * t319;
t523 = t345 * t318;
t593 = -t312 + t523;
t210 = -t309 * pkin(8) + t593;
t565 = cos(qJ(4));
t624 = t565 * t210;
t630 = -t624 + t607;
t645 = t630 * t343;
t651 = t645 / 0.2e1;
t657 = 0.2e1 * t651;
t347 = cos(qJ(5));
t644 = t630 * t347;
t652 = -t644 / 0.2e1;
t656 = 0.2e1 * t652;
t567 = -t347 / 0.2e1;
t339 = pkin(4) * t567;
t423 = t565 * t309 + t344 * t310;
t301 = t565 * t310;
t526 = t344 * t309;
t594 = -t301 + t526;
t606 = t347 * t594;
t438 = -t606 / 0.2e1;
t655 = pkin(9) * t438 + t423 * t339 + t657;
t569 = -t343 / 0.2e1;
t441 = t423 * t569;
t608 = t343 * t594;
t443 = -t608 / 0.2e1;
t654 = pkin(4) * t441 + pkin(9) * t443 + t656;
t185 = t624 / 0.2e1;
t440 = -t607 / 0.2e1;
t643 = t440 + t185;
t653 = 0.2e1 * t643;
t650 = qJD(3) + qJD(4);
t335 = -t349 * pkin(2) - pkin(1);
t280 = -t309 * pkin(3) + t335;
t407 = -pkin(4) * t423 - pkin(9) * t594;
t358 = t280 + t407;
t41 = -t347 * t358 + t645;
t646 = t594 * t630;
t649 = t343 * t646 - t41 * t594;
t42 = t343 * t358 + t644;
t648 = t347 * t646 - t42 * t594;
t604 = t565 * t595;
t616 = -t604 / 0.2e1;
t625 = t344 * t210;
t626 = t616 - t625 / 0.2e1;
t647 = 0.2e1 * t626;
t642 = qJD(2) * t653;
t641 = qJD(2) * t647;
t470 = qJD(2) + qJD(3);
t627 = qJD(4) + t470;
t633 = t604 + t625;
t542 = t347 * t633;
t638 = t567 * t633 - t542 / 0.2e1;
t543 = t343 * t633;
t637 = t569 * t633 - t543 / 0.2e1;
t636 = -t624 / 0.2e1;
t414 = t604 / 0.2e1;
t47 = t616 + t414;
t635 = t47 * qJD(1);
t634 = t47 * qJD(4);
t254 = t594 ^ 2;
t615 = -t423 ^ 2 + t254;
t620 = t615 * t347;
t629 = t620 * qJD(1);
t621 = t615 * t343;
t628 = t621 * qJD(1);
t617 = t615 * qJD(1);
t562 = t594 * pkin(4);
t563 = pkin(9) * t423;
t137 = t562 - t563;
t342 = t347 ^ 2;
t587 = t343 ^ 2;
t421 = t587 / 0.2e1 - t342 / 0.2e1;
t118 = t421 * t594;
t111 = t118 * qJD(5);
t502 = qJD(1) * t594;
t605 = t423 * t502;
t613 = -t342 * t605 - t111;
t611 = -t423 / 0.2e1;
t578 = t423 / 0.2e1;
t610 = t594 / 0.2e1;
t419 = t470 * t423;
t478 = qJD(4) * t423;
t603 = t419 + t478;
t425 = qJD(2) + t650;
t531 = t343 * t347;
t597 = t425 * t531;
t77 = -t118 * qJD(1) + t597;
t413 = -t301 / 0.2e1;
t592 = t413 + t526 / 0.2e1;
t602 = qJD(5) * t592;
t601 = t592 * qJD(1);
t600 = -0.2e1 * t594;
t467 = -t342 + t587;
t599 = t467 * t425;
t420 = t470 * t594;
t591 = t470 * t214;
t268 = t344 * pkin(3);
t462 = t268 * qJD(3);
t463 = t268 * qJD(4);
t453 = qJD(1) * t531;
t590 = t118 * t425 + t254 * t453;
t586 = pkin(4) / 0.2e1;
t577 = -t594 / 0.2e1;
t461 = t348 * pkin(2) + pkin(3);
t320 = t565 * t461;
t525 = t344 * t345;
t296 = pkin(2) * t525 - t320;
t289 = -pkin(4) + t296;
t575 = -t289 / 0.2e1;
t409 = t344 * t461;
t456 = t565 * t345;
t297 = pkin(2) * t456 + t409;
t290 = pkin(9) + t297;
t574 = -t290 / 0.2e1;
t573 = t297 / 0.2e1;
t294 = t301 / 0.2e1;
t455 = t565 * t348;
t303 = (t455 - t525) * pkin(2);
t572 = -t303 / 0.2e1;
t436 = -t312 / 0.2e1;
t333 = pkin(9) + t268;
t571 = t333 / 0.2e1;
t466 = t565 * pkin(3);
t334 = -t466 - pkin(4);
t570 = -t334 / 0.2e1;
t568 = t343 / 0.2e1;
t566 = t347 / 0.2e1;
t564 = pkin(4) * t343;
t560 = t310 * pkin(3);
t341 = t346 * pkin(2);
t559 = pkin(2) * qJD(3);
t558 = qJD(2) * pkin(2);
t127 = t347 * t423;
t106 = -t560 + t137;
t99 = t106 + t341;
t1 = -t99 * t127 + t649;
t557 = t1 * qJD(1);
t120 = t343 * t423;
t2 = t99 * t120 + t648;
t556 = t2 * qJD(1);
t3 = -t106 * t127 + t649;
t555 = t3 * qJD(1);
t4 = t106 * t120 + t648;
t554 = t4 * qJD(1);
t5 = -t137 * t127 + (-t41 + t645) * t594;
t551 = t5 * qJD(1);
t6 = t137 * t120 + (-t42 + t644) * t594;
t550 = t6 * qJD(1);
t524 = t344 * t348;
t302 = (t456 + t524) * pkin(2);
t378 = t302 * t610 - t423 * t572;
t351 = (t289 / 0.2e1 + t570) * t423 + (t574 + t571) * t594 + t378;
t7 = t652 + t644 / 0.2e1 + t351 * t343;
t549 = t7 * qJD(1);
t428 = t296 / 0.2e1 + t575;
t357 = (t574 + t573) * t594 - t428 * t423;
t385 = pkin(4) * t578 + pkin(9) * t610;
t352 = t357 + t385;
t11 = t343 * t352;
t541 = t11 * qJD(1);
t540 = t594 * t290;
t539 = t423 * t289;
t30 = -t41 * t423 + t608 * t633;
t538 = t30 * qJD(1);
t537 = t302 * t347;
t536 = t309 * t310;
t31 = t42 * t423 - t606 * t633;
t535 = t31 * qJD(1);
t429 = t611 + t578;
t57 = t467 * t429;
t519 = t57 * qJD(1);
t155 = t280 * t594;
t281 = t341 - t560;
t67 = -t281 * t423 + t155;
t515 = t67 * qJD(1);
t156 = t280 * t423;
t68 = t281 * t594 + t156;
t514 = t68 * qJD(1);
t73 = -t423 * t560 - t155;
t511 = t73 * qJD(1);
t74 = t560 * t594 - t156;
t510 = t74 * qJD(1);
t288 = t297 * qJD(4);
t298 = t302 * qJD(3);
t504 = -t298 - t288;
t503 = qJD(1) * t423;
t501 = qJD(1) * t280;
t500 = qJD(1) * t335;
t499 = qJD(1) * t349;
t498 = qJD(2) * t289;
t497 = qJD(3) * t334;
t496 = qJD(3) * t335;
t495 = qJD(4) * t347;
t494 = qJD(5) * t343;
t340 = qJD(5) * t347;
t110 = t429 * t531;
t493 = t110 * qJD(1);
t431 = t610 + t577;
t119 = t431 * t343;
t491 = t119 * qJD(1);
t490 = t120 * qJD(1);
t430 = 0.2e1 * t611;
t122 = t430 * t343;
t113 = t122 * qJD(1);
t125 = t431 * t347;
t489 = t125 * qJD(1);
t488 = t127 * qJD(1);
t129 = t430 * t347;
t116 = t129 * qJD(1);
t134 = t467 * t254;
t487 = t134 * qJD(1);
t207 = t309 ^ 2 - t310 ^ 2;
t486 = t207 * qJD(1);
t240 = -t309 * t341 - t335 * t310;
t483 = t240 * qJD(1);
t241 = t335 * t309 - t310 * t341;
t482 = t241 * qJD(1);
t252 = t294 + t413;
t480 = t252 * qJD(1);
t477 = t594 * qJD(4);
t266 = t436 + t312 / 0.2e1;
t476 = t266 * qJD(1);
t475 = t297 * qJD(2);
t474 = t302 * qJD(2);
t329 = -t346 ^ 2 + t349 ^ 2;
t473 = t329 * qJD(1);
t472 = t346 * qJD(2);
t471 = t349 * qJD(2);
t465 = pkin(1) * t346 * qJD(1);
t464 = pkin(1) * t499;
t454 = t342 * t502;
t452 = qJD(5) * t423 * t594;
t450 = t423 * t501;
t449 = t594 * t501;
t448 = t309 * t500;
t447 = t310 * t500;
t330 = t343 * t340;
t446 = t346 * t499;
t315 = t334 * t568;
t442 = t120 / 0.2e1;
t437 = t423 * t566;
t427 = t565 * qJD(3);
t426 = t565 * qJD(4);
t424 = pkin(2) * t470;
t418 = t470 * t347;
t417 = -t466 / 0.2e1;
t415 = t594 * t453;
t412 = -t455 / 0.2e1;
t411 = t268 / 0.2e1 + t573;
t410 = t586 + t428;
t408 = t650 * t268;
t405 = -0.2e1 * t415;
t404 = 0.2e1 * t415;
t402 = t572 + t570 + t575;
t401 = t423 * t415;
t397 = t539 - t540;
t396 = -t333 * t594 + t334 * t423;
t353 = t333 * t577 - t423 * t570 + (t344 * t610 + t565 * t578) * pkin(3);
t350 = t353 + t385;
t15 = t343 * t350;
t380 = -t302 / 0.2e1 + t411;
t173 = t380 * t347;
t394 = t15 * qJD(1) - t173 * qJD(2);
t363 = t607 / 0.2e1;
t45 = t440 + t363;
t393 = -t45 * qJD(1) - t268 * qJD(2);
t386 = -t320 / 0.2e1 + t417;
t270 = pkin(2) * t412 - t386;
t392 = t270 * qJD(2) - t635;
t391 = -t296 * qJD(2) - t635;
t46 = t636 + t363 + t643;
t390 = t46 * qJD(1) + t475;
t43 = t185 + t636;
t389 = -t43 * qJD(1) + t474;
t51 = t414 + t625 / 0.2e1 + t626;
t388 = -t51 * qJD(1) + t303 * qJD(2);
t387 = t594 * (-qJD(5) + t503);
t384 = -t563 / 0.2e1 + t562 / 0.2e1;
t379 = t290 * t611 + t575 * t594;
t377 = -t423 * t571 + t570 * t594;
t10 = t651 - t645 / 0.2e1 + t351 * t347;
t376 = -t10 * qJD(1) - t343 * t474;
t14 = t347 * t352;
t375 = -t14 * qJD(1) - t343 * t475;
t367 = t99 / 0.2e1 + t379;
t20 = t343 * t367;
t374 = -t20 * qJD(1) - t347 * t498;
t22 = t347 * t367;
t373 = t22 * qJD(1) - t343 * t498;
t71 = -t503 * t594 + t602;
t372 = -t605 + t602;
t371 = t417 + t586 + t570;
t370 = t137 / 0.2e1 + t384;
t364 = t106 / 0.2e1 + t377;
t362 = t603 * t594;
t161 = t402 * t343;
t28 = t347 * t364;
t361 = t28 * qJD(1) + t161 * qJD(2) - t343 * t497;
t162 = t402 * t347;
t26 = t343 * t364;
t360 = -t26 * qJD(1) + t162 * qJD(2) - t347 * t497;
t172 = t380 * t343;
t18 = t347 * t350;
t359 = -t18 * qJD(1) - t172 * qJD(2) - t343 * t462;
t167 = t410 * t343;
t267 = t371 * t343;
t34 = t370 * t347;
t356 = t34 * qJD(1) + t167 * qJD(2) + t267 * qJD(3) + qJD(4) * t564;
t168 = t410 * t347;
t269 = t371 * t347;
t32 = t370 * t343;
t355 = pkin(4) * t495 - t32 * qJD(1) + t168 * qJD(2) + t269 * qJD(3);
t354 = -t540 / 0.2e1 + t539 / 0.2e1 + t378;
t338 = -t564 / 0.2e1;
t327 = t343 * t463;
t317 = t467 * qJD(5);
t316 = t334 * t566;
t299 = t303 * qJD(3);
t287 = t296 * qJD(4);
t286 = t343 * t298;
t279 = t343 * t288;
t274 = t289 * t566;
t273 = t289 * t568;
t272 = t347 * t417 + t316 + t339;
t271 = t343 * t417 + t315 + t338;
t264 = qJD(1) * t536;
t263 = (t412 + t525) * pkin(2) + t386;
t262 = -t268 / 0.2e1 - t409 / 0.2e1 + (-t456 - t524 / 0.2e1) * pkin(2);
t261 = t470 * t310;
t260 = t470 * t309;
t248 = t252 * qJD(4);
t215 = 0.2e1 * t436 + t523;
t206 = t330 * t600;
t174 = -t537 / 0.2e1 - t411 * t347;
t171 = t302 * t568 + t411 * t343;
t170 = t296 * t566 + t274 + t339;
t169 = t296 * t568 + t273 + t338;
t166 = -t526 + 0.2e1 * t294;
t164 = t303 * t567 + t274 + t316;
t163 = t303 * t569 + t273 + t315;
t136 = t405 - t599;
t135 = t404 + t599;
t128 = -t127 / 0.2e1 + t437;
t123 = t442 + t441;
t109 = t343 * t437 + t347 * t442;
t108 = t340 + t116;
t107 = -t113 - t494;
t96 = t330 + t493;
t95 = t330 - t493;
t66 = t627 * t592;
t64 = t166 * qJD(4) - t420;
t58 = t342 * t578 - t421 * t423 + t587 * t611;
t56 = -t317 - t519;
t55 = -t317 + t519;
t40 = -t110 * qJD(4) + t613;
t39 = t57 * qJD(4) + t206 + 0.2e1 * t401;
t38 = -t119 * qJD(4) + t129 * qJD(5) - t629;
t37 = -t125 * qJD(4) - t122 * qJD(5) + t628;
t36 = t109 * qJD(4) - t111 + (t343 * t418 + t454) * t423;
t35 = t137 * t566 - t384 * t347 - t543;
t33 = t137 * t569 + t384 * t343 - t542;
t29 = t106 * t566 - t377 * t347 + t637;
t27 = t106 * t569 + t377 * t343 + t638;
t25 = qJD(4) * t608 + t128 * qJD(5) + t343 * t420 + t629;
t24 = qJD(4) * t606 + t123 * qJD(5) + t418 * t594 - t628;
t23 = -t379 * t347 + t99 * t566 + t637;
t21 = t379 * t343 + t99 * t569 + t638;
t19 = t58 * qJD(4) - t467 * t419 + t206 - 0.2e1 * t401;
t17 = t347 * t353 + t655;
t16 = t343 * t353 + t654;
t13 = t347 * t357 + t655;
t12 = t343 * t357 + t654;
t9 = t333 * t438 + t334 * t437 + t347 * t354 + t657;
t8 = t315 * t423 + t333 * t443 + t343 * t354 + t656;
t44 = [0, 0, 0, t346 * t471, t329 * qJD(2), 0, 0, 0, -pkin(1) * t472, -pkin(1) * t471, -t470 * t536, t470 * t207, 0, 0, 0, t240 * qJD(2) - t310 * t496, t241 * qJD(2) + t309 * t496, t362, -t627 * t615, 0, 0, 0, t67 * qJD(2) - t73 * qJD(3) + t280 * t477, t68 * qJD(2) - t74 * qJD(3) + t280 * t478, -t254 * t330 + t342 * t362, -0.2e1 * t343 * t603 * t606 + t134 * qJD(5), t343 * t452 + t627 * t620, t347 * t452 - t627 * t621, -(t420 + t477) * t423, t1 * qJD(2) + t3 * qJD(3) + t5 * qJD(4) + t31 * qJD(5), t2 * qJD(2) + t4 * qJD(3) + t6 * qJD(4) + t30 * qJD(5); 0, 0, 0, t446, t473, t471, -t472, 0, -pkin(6) * t471 - t465, pkin(6) * t472 - t464, -t264, t486, t260, t261, 0, qJD(2) * t593 + t215 * qJD(3) + t483, t482 + t591, t605, -t617, t603, t64, 0, -qJD(2) * t630 + t650 * t653 + t515, -qJD(2) * t633 + t650 * t647 + t514, t36, t19, t25, t24, t71, t557 + (t343 * t397 - t644) * qJD(2) + t8 * qJD(3) + t12 * qJD(4) + t23 * qJD(5), t556 + (t347 * t397 + t645) * qJD(2) + t9 * qJD(3) + t13 * qJD(4) + t21 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t264, t486, t260, t261, 0, t215 * qJD(2) + qJD(3) * t593 - t447, t448 + t591, t605, -t617, t603, t64, 0, -qJD(3) * t630 + qJD(4) * t653 - t511 + t642, -qJD(3) * t633 + qJD(4) * t647 - t510 + t641, t36, t19, t25, t24, t71, t555 + t8 * qJD(2) + (t343 * t396 - t644) * qJD(3) + t16 * qJD(4) + t29 * qJD(5), t554 + t9 * qJD(2) + (t347 * t396 + t645) * qJD(3) + t17 * qJD(4) + t27 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t605, -t617, t603, t166 * t470 - t477, 0, qJD(3) * t653 - qJD(4) * t630 + t449 + t642, qJD(3) * t647 - qJD(4) * t633 + t450 + t641, -t111 - (-t343 * t495 - t454) * t423 + t470 * t109, t206 + t470 * t58 - (qJD(4) * t467 + t404) * t423, t343 * t477 + t470 * t608 + t629, t347 * t477 + t470 * t606 - t628, t372, t551 + t12 * qJD(2) + t16 * qJD(3) + (t343 * t407 - t644) * qJD(4) + t35 * qJD(5), t550 + t13 * qJD(2) + t17 * qJD(3) + (t347 * t407 + t645) * qJD(4) + t33 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t590, t597 * t600 + t487, t128 * t470 + t343 * t387, t123 * t470 + t347 * t387, t66, t23 * qJD(2) + t29 * qJD(3) + t35 * qJD(4) - t42 * qJD(5) + t535, t21 * qJD(2) + t27 * qJD(3) + t33 * qJD(4) + t41 * qJD(5) + t538; 0, 0, 0, -t446, -t473, 0, 0, 0, t465, t464, t264, -t486, 0, 0, 0, t266 * qJD(3) - t483, -t482, -t605, t617, 0, -t248, 0, t43 * qJD(3) - t46 * qJD(4) - t515, t51 * qJD(3) - t514 + t634, t40, t39, t38, t37, -t71, t7 * qJD(3) + t11 * qJD(4) - t22 * qJD(5) - t557, t10 * qJD(3) + t14 * qJD(4) + t20 * qJD(5) - t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345 * t559, -t348 * t559, 0, 0, 0, 0, 0, t504, -t299 + t287, t330, -t317, 0, 0, 0, t289 * t494 + t347 * t504, t289 * t340 + t279 + t286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345 * t424 + t476, -t348 * t424, 0, 0, 0, 0, 0, t262 * qJD(4) - t298 - t389, t263 * qJD(4) - t299 - t388, t330, -t317, 0, 0, 0, t174 * qJD(4) + t163 * qJD(5) - t470 * t537 + t549, t171 * qJD(4) + t164 * qJD(5) + t286 - t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t480, 0, t262 * qJD(3) - t288 - t390, t263 * qJD(3) + t287 - t391, t95, t55, -t491, -t489, 0, t541 + t174 * qJD(3) + t169 * qJD(5) + (-qJD(2) - qJD(4)) * t347 * t297, t171 * qJD(3) + t170 * qJD(5) + t279 - t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, t136, t108, t107, -t601, t163 * qJD(3) + t169 * qJD(4) - t290 * t340 - t373, t164 * qJD(3) + t170 * qJD(4) + t290 * t494 - t374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t264, -t486, 0, 0, 0, -t266 * qJD(2) + t447, -t448, -t605, t617, 0, -t248, 0, -t43 * qJD(2) - t45 * qJD(4) + t511, -t51 * qJD(2) + t510 + t634, t40, t39, t38, t37, -t71, -t7 * qJD(2) + t15 * qJD(4) - t28 * qJD(5) - t555, -t10 * qJD(2) + t18 * qJD(4) + t26 * qJD(5) - t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t345 * t558 - t476, t348 * t558, 0, 0, 0, 0, 0, t389 - t463, -t270 * qJD(4) + t388, t330, -t317, 0, 0, 0, -t173 * qJD(4) - t161 * qJD(5) + t347 * t474 - t549, t172 * qJD(4) - t162 * qJD(5) + t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t463, -pkin(3) * t426, t330, -t317, 0, 0, 0, t334 * t494 - t347 * t463, t334 * t340 + t327; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t480, 0, -t408 + t393, (-t427 - t426) * pkin(3) - t392, t95, t55, -t491, -t489, 0, t271 * qJD(5) - t347 * t408 + t394, t272 * qJD(5) + t327 - t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, t136, t108, t107, -t601, t271 * qJD(4) - t333 * t340 - t361, t272 * qJD(4) + t333 * t494 - t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t605, t617, 0, t470 * t252, 0, t46 * qJD(2) + t45 * qJD(3) - t449, -t470 * t47 - t450, t110 * t470 + t613, -t405 * t423 - t470 * t57 + t206, -t127 * qJD(5) + t119 * t470 - t629, t120 * qJD(5) + t125 * t470 + t628, -t372, -t11 * qJD(2) - t15 * qJD(3) - t34 * qJD(5) - t551, -t14 * qJD(2) - t18 * qJD(3) + t32 * qJD(5) - t550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, 0, t390 + t462, t270 * qJD(3) + t391, t96, t56, t491, t489, 0, t173 * qJD(3) - t167 * qJD(5) + t347 * t475 - t541, -t172 * qJD(3) - t168 * qJD(5) + t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, 0, -t393 + t462, pkin(3) * t427 + t392, t96, t56, t491, t489, 0, -t267 * qJD(5) + t347 * t462 - t394, -t269 * qJD(5) + t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t330, -t317, 0, 0, 0, -pkin(4) * t494, -pkin(4) * t340; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t77, t136, t340 - t488, t490 - t494, -t601, -pkin(9) * t340 - t356, pkin(9) * t494 - t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t590, 0.2e1 * t594 * t597 - t487, t127 * qJD(4) - t129 * t470 - t343 * t605, -t120 * qJD(4) + t122 * t470 - t347 * t605, t66, t22 * qJD(2) + t28 * qJD(3) + t34 * qJD(4) - t535, -t20 * qJD(2) - t26 * qJD(3) - t32 * qJD(4) - t538; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t77, t135, -t116, t113, t601, t161 * qJD(3) + t167 * qJD(4) + t373, t162 * qJD(3) + t168 * qJD(4) + t374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t77, t135, -t116, t113, t601, t267 * qJD(4) + t361, t269 * qJD(4) + t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t77, t135, t488, -t490, t601, t356, t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg = t44;
