% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRPRPR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 23:22
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRPRPR7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRPR7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRPR7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRPRPR7_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 23:22:09
% EndTime: 2019-05-04 23:22:35
% DurationCPUTime: 27.12s
% Computational Cost: add. (56985->798), mult. (111593->977), div. (0->0), fcn. (68895->10), ass. (0->534)
t1217 = cos(qJ(4));
t1203 = t1217 ^ 2;
t1219 = qJD(2) ^ 2;
t1349 = t1203 * t1219;
t1407 = qJD(4) ^ 2;
t1185 = -t1349 - t1407;
t1214 = sin(qJ(4));
t1339 = t1217 * t1219;
t1188 = t1214 * t1339;
t1173 = qJDD(4) + t1188;
t1354 = t1173 * t1217;
t1127 = t1185 * t1214 + t1354;
t1207 = sin(pkin(6));
t1209 = cos(pkin(6));
t1355 = t1173 * t1214;
t1118 = -t1185 * t1217 + t1355;
t1368 = qJD(4) * t1214;
t1194 = qJD(2) * t1368;
t1331 = t1217 * qJDD(2);
t1163 = -0.2e1 * t1194 + t1331;
t1215 = sin(qJ(2));
t1218 = cos(qJ(2));
t1277 = t1118 * t1218 + t1163 * t1215;
t1011 = -t1209 * t1127 + t1207 * t1277;
t1015 = t1207 * t1127 + t1209 * t1277;
t1482 = pkin(7) * (t1011 * t1207 + t1015 * t1209);
t1406 = t1214 ^ 2;
t1343 = t1406 * t1219;
t1183 = -t1343 - t1407;
t1174 = qJDD(4) - t1188;
t1353 = t1174 * t1214;
t1125 = -t1183 * t1217 + t1353;
t1352 = t1174 * t1217;
t1115 = t1183 * t1214 + t1352;
t1370 = qJD(2) * t1217;
t1325 = qJD(4) * t1370;
t1332 = t1214 * qJDD(2);
t1161 = 0.2e1 * t1325 + t1332;
t1279 = t1115 * t1218 - t1161 * t1215;
t1010 = t1209 * t1125 + t1207 * t1279;
t1014 = -t1207 * t1125 + t1209 * t1279;
t1481 = pkin(7) * (t1010 * t1207 + t1014 * t1209);
t1073 = t1118 * t1215 - t1163 * t1218;
t1206 = sin(pkin(10));
t1208 = cos(pkin(10));
t1480 = qJ(1) * (t1015 * t1208 - t1073 * t1206);
t1479 = qJ(1) * (t1015 * t1206 + t1073 * t1208);
t1070 = t1115 * t1215 + t1161 * t1218;
t1478 = qJ(1) * (t1014 * t1208 - t1070 * t1206);
t1477 = qJ(1) * (t1014 * t1206 + t1070 * t1208);
t1476 = pkin(1) * t1010;
t1475 = pkin(1) * t1011;
t1474 = pkin(1) * t1014;
t1473 = pkin(1) * t1015;
t1182 = t1343 - t1407;
t1126 = -t1182 * t1217 + t1355;
t1114 = t1182 * t1214 + t1354;
t1257 = t1114 * t1218 + t1215 * t1332;
t1025 = -t1207 * t1126 + t1209 * t1257;
t1082 = t1114 * t1215 - t1218 * t1332;
t1468 = t1025 * t1206 + t1082 * t1208;
t1467 = t1025 * t1208 - t1082 * t1206;
t1184 = -t1349 + t1407;
t1128 = -t1184 * t1214 + t1352;
t1119 = t1184 * t1217 + t1353;
t1255 = t1119 * t1218 - t1215 * t1331;
t1028 = t1207 * t1128 + t1209 * t1255;
t1083 = t1119 * t1215 + t1218 * t1331;
t1466 = t1028 * t1206 + t1083 * t1208;
t1465 = t1028 * t1208 - t1083 * t1206;
t1462 = pkin(7) * t1070;
t1461 = pkin(7) * t1073;
t1024 = -t1209 * t1128 + t1207 * t1255;
t1021 = t1209 * t1126 + t1207 * t1257;
t1333 = t1207 * qJDD(2);
t1341 = t1215 * t1219;
t1141 = t1207 * t1341 - t1218 * t1333;
t1196 = t1209 * qJDD(2);
t1143 = -t1196 * t1218 + t1209 * t1341;
t1171 = g(1) * t1206 - t1208 * g(2);
t1384 = g(3) - qJDD(1);
t1136 = t1207 * t1171 + t1209 * t1384;
t1342 = t1215 * t1136;
t1040 = (t1141 * t1207 + t1143 * t1209) * pkin(7) - t1342;
t1168 = qJDD(2) * t1215 + t1218 * t1219;
t1097 = t1143 * t1206 - t1168 * t1208;
t1452 = -qJ(1) * t1097 - t1040 * t1206;
t1092 = t1143 * t1208 + t1168 * t1206;
t1451 = -qJ(1) * t1092 - t1040 * t1208;
t1140 = t1168 * t1207;
t1142 = t1168 * t1209;
t1338 = t1218 * t1136;
t1043 = (t1140 * t1207 + t1142 * t1209) * pkin(7) - t1338;
t1167 = qJDD(2) * t1218 - t1341;
t1095 = t1142 * t1206 - t1167 * t1208;
t1450 = -qJ(1) * t1095 - t1043 * t1206;
t1090 = t1142 * t1208 + t1167 * t1206;
t1449 = -qJ(1) * t1090 - t1043 * t1208;
t1405 = 2 * qJD(3);
t1448 = pkin(3) * t1115;
t1447 = pkin(3) * t1118;
t1446 = pkin(8) * t1115;
t1445 = pkin(8) * t1118;
t1444 = pkin(8) * t1125;
t1443 = pkin(8) * t1127;
t1438 = qJ(3) * t1125;
t1437 = qJ(3) * t1127;
t1402 = -pkin(8) - pkin(2);
t1436 = t1115 * t1402;
t1435 = t1125 * t1402;
t1434 = t1127 * t1402;
t1213 = sin(qJ(6));
t1216 = cos(qJ(6));
t1371 = qJD(2) * t1214;
t1155 = qJD(4) * t1213 - t1216 * t1371;
t1157 = qJD(4) * t1216 + t1213 * t1371;
t1110 = t1157 * t1155;
t1162 = -t1194 + t1331;
t1151 = qJDD(6) + t1162;
t1417 = -t1110 + t1151;
t1425 = t1213 * t1417;
t1424 = t1216 * t1417;
t1172 = g(1) * t1208 + g(2) * t1206;
t1422 = -t1209 * t1171 + t1207 * t1384;
t1080 = -t1218 * t1172 - t1215 * t1422;
t1224 = qJD(2) * t1405 + t1080;
t1366 = qJDD(2) * qJ(3);
t1423 = t1224 + t1366;
t1421 = qJ(3) * t1163 - t1118 * t1402;
t1380 = qJ(5) * t1214;
t1388 = pkin(4) * t1217;
t1303 = t1380 + t1388;
t1211 = t1219 * pkin(8);
t1212 = t1219 * pkin(2);
t1259 = t1325 + t1332;
t1408 = t1259 * pkin(4) - t1162 * qJ(5) - t1211 - t1212;
t1221 = t1080 + t1408;
t1367 = qJD(5) * t1217;
t992 = t1366 + (qJD(4) * t1303 - 0.2e1 * t1367 + t1405) * qJD(2) + t1221;
t1420 = (pkin(3) + t1303) * t992;
t1205 = qJDD(2) * pkin(2);
t1079 = -t1172 * t1215 + t1218 * t1422;
t1263 = qJDD(3) + t1079;
t1065 = -t1219 * qJ(3) - t1205 + t1263;
t1062 = -qJDD(2) * pkin(8) + t1065;
t1060 = t1217 * t1062;
t1379 = qJ(5) * t1217;
t1389 = pkin(4) * t1214;
t1158 = (-t1379 + t1389) * qJD(2);
t1230 = -qJDD(4) * pkin(4) - qJ(5) * t1407 + t1158 * t1370 + qJDD(5) - t1060;
t1372 = qJD(2) * qJD(4);
t942 = t1162 * pkin(5) - qJDD(4) * pkin(9) + (pkin(5) * t1372 + pkin(9) * t1339 - t1136) * t1214 + t1230;
t1404 = 0.2e1 * qJD(5);
t1336 = pkin(5) * t1370 - qJD(4) * pkin(9) + t1404;
t1403 = pkin(4) + pkin(9);
t945 = -pkin(5) * t1343 + (pkin(9) * t1214 + qJ(3)) * qJDD(2) + (qJ(5) * t1368 + t1405 + (qJD(4) * t1403 - t1336) * t1217) * qJD(2) + t1221;
t894 = t1213 * t945 - t1216 * t942;
t895 = t1213 * t942 + t1216 * t945;
t847 = t1213 * t895 - t1216 * t894;
t1419 = t1206 * t1384;
t1418 = t1208 * t1384;
t1008 = t1214 * t1062 - t1217 * t1136;
t1344 = t1214 * t1136;
t1310 = t1060 + t1344;
t926 = t1008 * t1214 + t1217 * t1310;
t1088 = -t1155 * qJD(6) + t1216 * qJDD(4) + t1213 * t1259;
t1189 = qJD(6) + t1370;
t1138 = t1189 * t1155;
t1416 = -t1138 + t1088;
t1329 = t1203 + t1406;
t1166 = t1329 * qJDD(2);
t1169 = t1329 * t1219;
t1415 = pkin(2) * t1166 - qJ(3) * t1169;
t1308 = t1213 * qJDD(4) - t1216 * t1259;
t1054 = (qJD(6) - t1189) * t1157 + t1308;
t973 = pkin(4) * t1161 + t992;
t1414 = t1161 * (pkin(3) + t1380) + t1217 * t973;
t972 = -pkin(4) * t1325 + 0.2e1 * qJD(2) * t1367 + (t1163 - t1194) * qJ(5) - t1408 - t1423;
t1413 = t1163 * (pkin(3) + t1388) + t1214 * t972;
t1296 = pkin(7) * t1168 - t1338;
t1412 = pkin(1) * t1143 + t1207 * t1296;
t1297 = pkin(7) * t1167 + t1342;
t1411 = pkin(1) * t1142 + t1207 * t1297;
t1410 = -pkin(1) * t1141 + t1209 * t1296;
t1409 = -pkin(1) * t1140 + t1209 * t1297;
t1149 = t1155 ^ 2;
t1150 = t1157 ^ 2;
t1186 = t1189 ^ 2;
t1401 = pkin(3) * t926;
t1400 = pkin(5) * t847;
t1226 = -pkin(4) * t1407 + qJDD(4) * qJ(5) - t1158 * t1371 + t1008;
t941 = -pkin(5) * t1259 - pkin(9) * t1343 + qJD(4) * t1336 + t1226;
t1399 = pkin(5) * t941;
t1058 = t1138 + t1088;
t960 = -t1054 * t1213 - t1058 * t1216;
t1398 = pkin(5) * t960;
t1397 = pkin(9) * t847;
t1063 = -t1212 + t1423;
t1061 = -t1211 + t1063;
t1392 = pkin(3) * t1061;
t1391 = pkin(3) * t1166;
t1390 = pkin(3) * t1169;
t1387 = pkin(7) * t1207;
t1386 = pkin(7) * t1209;
t1385 = pkin(8) * t1166;
t981 = qJD(4) * t1404 + t1226;
t985 = t1230 - t1344;
t1383 = -pkin(4) * t985 + qJ(5) * t981;
t1356 = t1166 * t1218;
t1274 = -t1169 * t1215 + t1356;
t1100 = t1274 * t1209;
t1357 = t1166 * t1215;
t1106 = -t1169 * t1218 - t1357;
t1382 = qJ(1) * (t1100 * t1208 + t1106 * t1206);
t1377 = t1213 * t941;
t1375 = t1214 * t973;
t936 = t1216 * t941;
t1360 = t1163 * t1214;
t1373 = -pkin(4) * t1360 + t1217 * t972;
t1364 = t1157 * t1189;
t1113 = t1161 * t1214;
t1362 = t1161 * t1217;
t1351 = t1189 * t1213;
t1350 = t1189 * t1216;
t1348 = t1207 * t1136;
t1078 = t1110 + t1151;
t1346 = t1213 * t1078;
t1345 = t1214 * t1061;
t1340 = t1216 * t1078;
t1059 = t1217 * t1061;
t1334 = pkin(1) * t1100 + t1106 * t1387;
t1330 = -t1150 - t1186;
t1327 = t1214 * t1110;
t1326 = t1217 * t1110;
t1018 = t1216 * t1330 - t1346;
t1323 = -pkin(9) * t1018 + t936;
t1318 = t1208 * t1333;
t1099 = t1274 * t1207;
t1317 = -pkin(1) * t1099 + t1106 * t1386;
t1315 = -qJ(3) + t1379;
t848 = t1213 * t894 + t1216 * t895;
t824 = -t1403 * t848 + t1399;
t831 = -qJ(5) * t848 + t1400;
t1314 = -t1214 * t824 + t1217 * t831;
t1076 = -t1149 - t1150;
t1241 = pkin(5) * t1076 - t848;
t962 = -t1054 * t1216 + t1213 * t1058;
t832 = -t1403 * t962 + t1241;
t904 = -qJ(5) * t962 + t1398;
t1313 = -t1214 * t832 + t1217 * t904;
t1098 = -t1186 - t1149;
t1006 = t1216 * t1098 - t1425;
t1005 = t1213 * t1098 + t1424;
t1268 = -pkin(5) * t1005 + t894;
t864 = -qJ(5) * t1006 - t1268;
t1053 = (qJD(6) + t1189) * t1157 + t1308;
t1302 = pkin(5) * t1053 + t936;
t879 = -t1006 * t1403 + t1302;
t1312 = -t1214 * t879 + t1217 * t864;
t1019 = -t1213 * t1330 - t1340;
t1242 = -pkin(5) * t1018 + t895;
t866 = -qJ(5) * t1019 - t1242;
t1301 = pkin(5) * t1416 - t1377;
t881 = -t1019 * t1403 + t1301;
t1311 = -t1214 * t881 + t1217 * t866;
t1309 = -t1171 * t1206 - t1208 * t1172;
t908 = t1214 * t981 - t1217 * t985;
t1307 = -pkin(3) * t908 - t1383;
t1306 = -pkin(4) * t847 + qJ(5) * t941 - t1397;
t1305 = t1215 * t1188;
t1304 = t1218 * t1188;
t1300 = -pkin(9) * t1005 + t1377;
t1299 = pkin(3) * t1161 + t1059;
t1298 = pkin(3) * t1163 - t1345;
t839 = t1214 * t941 - t1217 * t847;
t1295 = t1215 * t848 - t1218 * t839;
t1294 = t1215 * t992 - t1218 * t908;
t924 = t1076 * t1214 - t1217 * t960;
t1293 = t1215 * t962 - t1218 * t924;
t1109 = t1150 - t1149;
t959 = -t1053 * t1213 + t1216 * t1416;
t930 = t1109 * t1214 - t1217 * t959;
t961 = -t1053 * t1216 - t1213 * t1416;
t1292 = t1215 * t961 - t1218 * t930;
t934 = -t1005 * t1217 + t1053 * t1214;
t1291 = t1006 * t1215 - t1218 * t934;
t938 = -t1018 * t1217 + t1214 * t1416;
t1290 = t1019 * t1215 - t1218 * t938;
t1135 = -t1150 + t1186;
t1036 = -t1135 * t1213 + t1424;
t1034 = t1135 * t1216 + t1425;
t947 = -t1034 * t1217 + t1058 * t1214;
t1289 = t1036 * t1215 - t1218 * t947;
t1134 = t1149 - t1186;
t1037 = t1134 * t1216 - t1346;
t1035 = t1134 * t1213 + t1340;
t946 = -t1035 * t1217 - t1054 * t1214;
t1288 = t1037 * t1215 - t1218 * t946;
t1087 = -qJD(6) * t1157 - t1308;
t1045 = t1087 * t1213 - t1155 * t1350;
t1044 = -t1087 * t1216 - t1155 * t1351;
t993 = t1044 * t1217 - t1327;
t1287 = -t1045 * t1215 - t1218 * t993;
t1047 = t1088 * t1216 - t1157 * t1351;
t1046 = t1088 * t1213 + t1157 * t1350;
t994 = t1046 * t1217 - t1327;
t1286 = t1047 * t1215 + t1218 * t994;
t1285 = t1061 * t1215 - t1218 * t926;
t1261 = t1303 * qJDD(2);
t1111 = -t1261 - t1391;
t963 = pkin(4) * t1169 + t981;
t967 = qJ(5) * t1169 + t985;
t901 = t1214 * t967 + t1217 * t963 + t1390;
t1284 = t1111 * t1215 - t1218 * t901;
t927 = t1008 * t1217 - t1214 * t1310;
t1066 = (-t1155 * t1213 - t1157 * t1216) * t1189;
t1038 = -t1066 * t1217 + t1151 * t1214;
t1067 = (-t1155 * t1216 + t1157 * t1213) * t1189;
t1283 = -t1038 * t1218 + t1067 * t1215;
t984 = t1063 * t1218 + t1065 * t1215;
t1282 = t1063 * t1215 - t1065 * t1218;
t1001 = t1079 * t1218 - t1080 * t1215;
t1002 = t1079 * t1215 + t1080 * t1218;
t1104 = t1163 * t1217 - t1113;
t1170 = (t1203 - t1406) * t1219;
t1281 = -t1104 * t1218 + t1170 * t1215;
t1273 = t1171 * t1208 - t1172 * t1206;
t1272 = -pkin(4) * t1018 + qJ(5) * t1416 + t1323;
t1154 = t1329 * t1372;
t1271 = qJDD(4) * t1215 + t1154 * t1218;
t1269 = -pkin(9) * t960 - t847;
t1267 = -t1214 * t963 + t1217 * t967 + t1385;
t923 = t927 + t1390;
t1266 = -pkin(3) * t1357 - t1218 * t923;
t1265 = -t1310 - t1448;
t1264 = t1385 - t926;
t1262 = -pkin(3) * t839 - t1306;
t1260 = (-t1099 * t1207 - t1100 * t1209) * pkin(7);
t1253 = -pkin(4) * t1005 + qJ(5) * t1053 + t1300;
t1252 = pkin(3) * t848 - t1214 * t831 - t1217 * t824;
t1251 = pkin(3) * t962 - t1214 * t904 - t1217 * t832;
t840 = t1214 * t847 + t1217 * t941;
t804 = t1402 * t840 + t1252;
t812 = -qJ(3) * t840 - t1262;
t823 = t1215 * t839 + t1218 * t848;
t1250 = pkin(7) * t823 + t1215 * t812 + t1218 * t804;
t925 = t1076 * t1217 + t1214 * t960;
t821 = t1402 * t925 + t1251;
t1232 = -pkin(4) * t960 + qJ(5) * t1076 + t1269;
t1227 = -pkin(3) * t924 - t1232;
t827 = -qJ(3) * t925 - t1227;
t889 = t1215 * t924 + t1218 * t962;
t1249 = pkin(7) * t889 + t1215 * t827 + t1218 * t821;
t1244 = pkin(3) * t1006 - t1214 * t864 - t1217 * t879;
t935 = t1005 * t1214 + t1053 * t1217;
t826 = t1402 * t935 + t1244;
t1228 = -pkin(3) * t934 - t1253;
t841 = -qJ(3) * t935 - t1228;
t905 = t1006 * t1218 + t1215 * t934;
t1248 = pkin(7) * t905 + t1215 * t841 + t1218 * t826;
t1243 = pkin(3) * t1019 - t1214 * t866 - t1217 * t881;
t939 = t1018 * t1214 + t1217 * t1416;
t829 = t1402 * t939 + t1243;
t1234 = -pkin(3) * t938 - t1272;
t845 = -qJ(3) * t939 - t1234;
t907 = t1019 * t1218 + t1215 * t938;
t1247 = pkin(7) * t907 + t1215 * t845 + t1218 * t829;
t909 = t1214 * t985 + t1217 * t981;
t834 = t1402 * t909 + t1420;
t842 = -qJ(3) * t909 - t1307;
t888 = t1215 * t908 + t1218 * t992;
t1246 = pkin(7) * t888 + t1215 * t842 + t1218 * t834;
t874 = t1402 * t927 + t1392;
t886 = -qJ(3) * t927 + t1401;
t906 = t1061 * t1218 + t1215 * t926;
t1245 = pkin(7) * t906 + t1215 * t886 + t1218 * t874;
t950 = -t1265 + t1438;
t955 = t1299 - t1435;
t1240 = t1215 * t950 + t1218 * t955 + t1462;
t917 = -t1414 + t1435;
t1225 = -pkin(4) * t1174 - qJ(5) * t1183 + t985;
t1222 = -t1225 + t1448;
t922 = -t1222 - t1438;
t1239 = t1215 * t922 + t1218 * t917 - t1462;
t1233 = t1008 + t1447;
t951 = -t1233 + t1437;
t954 = t1298 - t1434;
t1238 = t1215 * t951 + t1218 * t954 - t1461;
t918 = -t1413 + t1434;
t1223 = -pkin(4) * t1185 + qJ(5) * t1173 + t981;
t1220 = -t1223 - t1447;
t921 = -t1220 - t1437;
t1237 = t1215 * t921 + t1218 * t918 + t1461;
t1131 = -t1217 * t1259 + t1372 * t1406;
t1236 = -t1131 * t1218 - t1305;
t1132 = t1162 * t1214 + t1203 * t1372;
t1235 = -t1132 * t1218 + t1305;
t1229 = pkin(7) * t984 + (pkin(2) * t1218 + qJ(3) * t1215) * t1136;
t1179 = t1206 * t1333;
t1133 = qJDD(4) * t1218 - t1154 * t1215;
t1124 = (t1162 - t1194) * t1217;
t1112 = t1209 * t1136;
t1108 = t1271 * t1209;
t1107 = t1271 * t1207;
t1105 = -t1360 - t1362;
t1086 = t1131 * t1215 - t1304;
t1085 = t1132 * t1215 + t1304;
t1069 = -0.2e1 * t1205 + t1263;
t1068 = t1224 + 0.2e1 * t1366;
t1064 = t1104 * t1215 + t1170 * t1218;
t1050 = -t1108 * t1206 + t1133 * t1208;
t1049 = t1108 * t1208 + t1133 * t1206;
t1039 = t1066 * t1214 + t1151 * t1217;
t1032 = -t1207 * t1113 + t1209 * t1236;
t1031 = -t1207 * t1124 + t1209 * t1235;
t1030 = t1209 * t1113 + t1207 * t1236;
t1029 = t1209 * t1124 + t1207 * t1235;
t1020 = qJ(1) * (-t1100 * t1206 + t1106 * t1208);
t1000 = -t1207 * t1105 + t1209 * t1281;
t999 = t1209 * t1105 + t1207 * t1281;
t998 = t1002 * t1209;
t997 = t1002 * t1207;
t996 = t1046 * t1214 + t1326;
t995 = -t1044 * t1214 - t1326;
t991 = -pkin(2) * t1065 + qJ(3) * t1063;
t990 = t1207 * t1079 - t1410;
t989 = t1207 * t1080 - t1409;
t988 = -t1209 * t1079 - t1412;
t987 = -t1209 * t1080 - t1411;
t986 = t992 * t1389;
t979 = -t1207 * t1069 + t1410;
t978 = t1209 * t1069 + t1412;
t977 = t984 * t1209;
t976 = t984 * t1207;
t975 = -t1207 * t1068 + t1409;
t974 = t1209 * t1068 + t1411;
t971 = -t1032 * t1206 + t1086 * t1208;
t970 = -t1031 * t1206 + t1085 * t1208;
t969 = t1032 * t1208 + t1086 * t1206;
t968 = t1031 * t1208 + t1085 * t1206;
t965 = -t1001 * t1209 + t1348;
t964 = -t1001 * t1207 - t1112;
t956 = t1038 * t1215 + t1067 * t1218;
t953 = t1059 + t1421;
t952 = qJ(3) * t1161 + t1345 + t1436;
t949 = t1034 * t1214 + t1058 * t1217;
t948 = t1035 * t1214 - t1054 * t1217;
t944 = t1209 * t1282 + t1348;
t943 = t1207 * t1282 - t1112;
t933 = -t1000 * t1206 + t1064 * t1208;
t932 = t1000 * t1208 + t1064 * t1206;
t931 = t1109 * t1217 + t1214 * t959;
t929 = t1047 * t1218 - t1215 * t994;
t928 = -t1045 * t1218 + t1215 * t993;
t920 = -t1207 * t1039 + t1209 * t1283;
t919 = t1209 * t1039 + t1207 * t1283;
t916 = t1373 - t1421;
t915 = t1161 * t1315 - t1375 - t1436;
t914 = t1264 + t1415;
t913 = t1037 * t1218 + t1215 * t946;
t912 = t1036 * t1218 + t1215 * t947;
t911 = pkin(1) * t965 + t1002 * t1387;
t910 = -pkin(1) * t964 + t1002 * t1386;
t903 = (-t1207 * t964 - t1209 * t965) * pkin(7);
t900 = -t1207 * t996 + t1209 * t1286;
t899 = -t1207 * t995 + t1209 * t1287;
t898 = t1207 * t1286 + t1209 * t996;
t897 = t1207 * t1287 + t1209 * t995;
t896 = -pkin(3) * t1356 + t1215 * t923 + t1260;
t893 = t1267 + t1415;
t890 = t1215 * t930 + t1218 * t961;
t887 = (-pkin(2) * t1215 + qJ(3) * t1218) * t1136 + (-t1207 * t943 - t1209 * t944) * pkin(7);
t885 = -t1207 * t948 + t1209 * t1288;
t884 = -t1207 * t949 + t1209 * t1289;
t883 = t1207 * t1288 + t1209 * t948;
t882 = t1207 * t1289 + t1209 * t949;
t880 = t1218 * t1111 + t1215 * t901 + t1260;
t878 = -t1207 * t939 + t1209 * t1290;
t877 = t1207 * t1290 + t1209 * t939;
t876 = -t1207 * t935 + t1209 * t1291;
t875 = t1207 * t1291 + t1209 * t935;
t873 = qJ(3) * t1061 + t1402 * t926;
t872 = -t1207 * t927 + t1209 * t1285;
t871 = t1207 * t1285 + t1209 * t927;
t870 = -pkin(1) * t943 - t1207 * t991 + t1209 * t1229;
t869 = pkin(1) * t944 + t1207 * t1229 + t1209 * t991;
t868 = -t1215 * t954 + t1218 * t951 - t1482;
t867 = -t1215 * t955 + t1218 * t950 + t1481;
t863 = -t1207 * t931 + t1209 * t1292;
t862 = t1207 * t1292 + t1209 * t931;
t860 = -t1207 * t925 + t1209 * t1293;
t859 = t1207 * t1293 + t1209 * t925;
t858 = -t1207 * t914 + t1209 * t1266 + t1317;
t857 = t1207 * t1266 + t1209 * t914 + t1334;
t856 = -t1207 * t953 + t1209 * t1238 - t1475;
t855 = -t1207 * t952 + t1209 * t1240 + t1476;
t854 = t1207 * t1238 + t1209 * t953 + t1473;
t853 = t1207 * t1240 + t1209 * t952 - t1474;
t852 = -t1215 * t917 + t1218 * t922 - t1481;
t851 = -t1215 * t918 + t1218 * t921 + t1482;
t850 = -t1207 * t909 + t1209 * t1294;
t849 = t1207 * t1294 + t1209 * t909;
t844 = -t1207 * t893 + t1209 * t1284 + t1317;
t843 = t1207 * t1284 + t1209 * t893 + t1334;
t838 = -t1207 * t915 + t1209 * t1239 - t1476;
t837 = t1207 * t1239 + t1209 * t915 + t1474;
t836 = -t1207 * t916 + t1209 * t1237 + t1475;
t835 = t1207 * t1237 + t1209 * t916 - t1473;
t833 = -t1315 * t992 + t1402 * t908 + t986;
t828 = qJ(3) * t1019 + t1402 * t938 + t1311;
t825 = qJ(3) * t1006 + t1402 * t934 + t1312;
t822 = -t1215 * t874 + t1218 * t886 + (-t1207 * t871 - t1209 * t872) * pkin(7);
t820 = qJ(3) * t962 + t1402 * t924 + t1313;
t819 = -pkin(1) * t871 - t1207 * t873 + t1209 * t1245;
t818 = pkin(1) * t872 + t1207 * t1245 + t1209 * t873;
t817 = -t1207 * t840 + t1209 * t1295;
t816 = t1207 * t1295 + t1209 * t840;
t815 = -t1215 * t834 + t1218 * t842 + (-t1207 * t849 - t1209 * t850) * pkin(7);
t814 = -t1215 * t829 + t1218 * t845 + (-t1207 * t877 - t1209 * t878) * pkin(7);
t813 = -t1215 * t826 + t1218 * t841 + (-t1207 * t875 - t1209 * t876) * pkin(7);
t811 = -pkin(1) * t849 - t1207 * t833 + t1209 * t1246;
t810 = pkin(1) * t850 + t1207 * t1246 + t1209 * t833;
t809 = -pkin(1) * t877 - t1207 * t828 + t1209 * t1247;
t808 = pkin(1) * t878 + t1207 * t1247 + t1209 * t828;
t807 = -pkin(1) * t875 - t1207 * t825 + t1209 * t1248;
t806 = pkin(1) * t876 + t1207 * t1248 + t1209 * t825;
t805 = -t1215 * t821 + t1218 * t827 + (-t1207 * t859 - t1209 * t860) * pkin(7);
t803 = qJ(3) * t848 + t1402 * t839 + t1314;
t802 = -pkin(1) * t859 - t1207 * t820 + t1209 * t1249;
t801 = pkin(1) * t860 + t1207 * t1249 + t1209 * t820;
t800 = -t1215 * t804 + t1218 * t812 + (-t1207 * t816 - t1209 * t817) * pkin(7);
t799 = -pkin(1) * t816 - t1207 * t803 + t1209 * t1250;
t798 = pkin(1) * t817 + t1207 * t1250 + t1209 * t803;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1419, -t1418, -t1273, -qJ(1) * t1273, 0, 0, -t1095, 0, t1097, t1179, -t1206 * t990 - t1451, -t1206 * t989 - t1449, t1001 * t1208 - t1206 * t998, t1208 * t903 - t1206 * t910 - qJ(1) * (t1002 * t1206 + t1208 * t965), t1179, t1095, -t1097, 0, 0, 0, -t1206 * t977 - t1208 * t1282, -t1206 * t979 + t1451, -t1206 * t975 + t1449, t1208 * t887 - t1206 * t870 - qJ(1) * (t1206 * t984 + t1208 * t944), t970, t933, t1466, t971, t1468, t1050, -t1206 * t855 + t1208 * t867 + t1478, -t1206 * t856 + t1208 * t868 - t1480, -t1206 * t858 + t1208 * t896 - t1382, t1208 * t822 - t1206 * t819 - qJ(1) * (t1206 * t906 + t1208 * t872), t1050, -t1466, -t1468, t970, t933, t971, -t1206 * t844 + t1208 * t880 - t1382, -t1206 * t838 + t1208 * t852 - t1478, -t1206 * t836 + t1208 * t851 + t1480, t1208 * t815 - t1206 * t811 - qJ(1) * (t1206 * t888 + t1208 * t850), -t1206 * t900 + t1208 * t929, -t1206 * t863 + t1208 * t890, -t1206 * t884 + t1208 * t912, -t1206 * t899 + t1208 * t928, -t1206 * t885 + t1208 * t913, -t1206 * t920 + t1208 * t956, t1208 * t813 - t1206 * t807 - qJ(1) * (t1206 * t905 + t1208 * t876), t1208 * t814 - t1206 * t809 - qJ(1) * (t1206 * t907 + t1208 * t878), t1208 * t805 - t1206 * t802 - qJ(1) * (t1206 * t889 + t1208 * t860), t1208 * t800 - t1206 * t799 - qJ(1) * (t1206 * t823 + t1208 * t817); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1418, -t1419, t1309, qJ(1) * t1309, 0, 0, t1090, 0, -t1092, -t1318, t1208 * t990 - t1452, t1208 * t989 - t1450, t1001 * t1206 + t1208 * t998, t1206 * t903 + t1208 * t910 + qJ(1) * (t1002 * t1208 - t1206 * t965), -t1318, -t1090, t1092, 0, 0, 0, -t1206 * t1282 + t1208 * t977, t1208 * t979 + t1452, t1208 * t975 + t1450, t1206 * t887 + t1208 * t870 + qJ(1) * (-t1206 * t944 + t1208 * t984), t968, t932, -t1465, t969, -t1467, t1049, t1206 * t867 + t1208 * t855 + t1477, t1206 * t868 + t1208 * t856 - t1479, t1206 * t896 + t1208 * t858 + t1020, t1206 * t822 + t1208 * t819 + qJ(1) * (-t1206 * t872 + t1208 * t906), t1049, t1465, t1467, t968, t932, t969, t1206 * t880 + t1208 * t844 + t1020, t1206 * t852 + t1208 * t838 - t1477, t1206 * t851 + t1208 * t836 + t1479, t1206 * t815 + t1208 * t811 + qJ(1) * (-t1206 * t850 + t1208 * t888), t1206 * t929 + t1208 * t900, t1206 * t890 + t1208 * t863, t1206 * t912 + t1208 * t884, t1206 * t928 + t1208 * t899, t1206 * t913 + t1208 * t885, t1206 * t956 + t1208 * t920, t1206 * t813 + t1208 * t807 + qJ(1) * (-t1206 * t876 + t1208 * t905), t1206 * t814 + t1208 * t809 + qJ(1) * (-t1206 * t878 + t1208 * t907), t1206 * t805 + t1208 * t802 + qJ(1) * (-t1206 * t860 + t1208 * t889), t1206 * t800 + t1208 * t799 + qJ(1) * (-t1206 * t817 + t1208 * t823); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1171, t1172, 0, 0, 0, 0, t1140, 0, -t1141, t1196, t988, t987, t997, t911, t1196, -t1140, t1141, 0, 0, 0, t976, t978, t974, t869, t1029, t999, -t1024, t1030, -t1021, t1107, t853, t854, t857, t818, t1107, t1024, t1021, t1029, t999, t1030, t843, t837, t835, t810, t898, t862, t882, t897, t883, t919, t806, t808, t801, t798; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1384, -t1171, 0, 0, 0, t1167, 0, -t1168, 0, t1040, t1043, t1001, t903, 0, -t1167, t1168, 0, 0, 0, -t1282, -t1040, -t1043, t887, t1085, t1064, t1083, t1086, t1082, t1133, t867, t868, t896, t822, t1133, -t1083, -t1082, t1085, t1064, t1086, t880, t852, t851, t815, t929, t890, t912, t928, t913, t956, t813, t814, t805, t800; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1384, 0, -t1172, 0, 0, 0, t1142, 0, -t1143, -t1333, t990, t989, t998, t910, -t1333, -t1142, t1143, 0, 0, 0, t977, t979, t975, t870, t1031, t1000, -t1028, t1032, -t1025, t1108, t855, t856, t858, t819, t1108, t1028, t1025, t1031, t1000, t1032, t844, t838, t836, t811, t900, t863, t884, t899, t885, t920, t807, t809, t802, t799; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1171, t1172, 0, 0, 0, 0, t1140, 0, -t1141, t1196, t988, t987, t997, t911, t1196, -t1140, t1141, 0, 0, 0, t976, t978, t974, t869, t1029, t999, -t1024, t1030, -t1021, t1107, t853, t854, t857, t818, t1107, t1024, t1021, t1029, t999, t1030, t843, t837, t835, t810, t898, t862, t882, t897, t883, t919, t806, t808, t801, t798; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1219, 0, 0, -t1136, t1079, 0, 0, -qJDD(2), t1219, 0, 0, 0, t1065, 0, t1136, qJ(3) * t1136, t1188, t1170, t1331, -t1188, -t1332, qJDD(4), t950, t951, -t1391, t886, qJDD(4), -t1331, t1332, t1188, t1170, -t1188, t1111, t922, t921, t842, t1047, t961, t1036, -t1045, t1037, t1067, t841, t845, t827, t812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1219, 0, qJDD(2), 0, t1136, 0, t1080, 0, 0, -t1219, -qJDD(2), 0, 0, 0, t1063, -t1136, 0, pkin(2) * t1136, -t1132, -t1104, -t1119, -t1131, -t1114, t1154, t955, t954, -t923, t874, t1154, t1119, t1114, -t1132, -t1104, -t1131, -t901, t917, t918, t834, t994, -t930, -t947, -t993, -t946, -t1038, t826, t829, t821, t804; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1079, -t1080, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t1069, t1068, t991, t1124, t1105, t1128, t1113, -t1126, 0, t952, t953, t914, t873, 0, -t1128, t1126, t1124, t1105, t1113, t893, t915, t916, t833, t996, t931, t949, t995, t948, t1039, t825, t828, t820, t803; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, 0, 0, 0, 0, 0, t1065, t1063, 0, t1124, t1105, t1128, t1113, -t1126, 0, t1345 - t1446, t1059 + t1445, t1264, -pkin(8) * t926, 0, -t1128, t1126, t1124, t1105, t1113, t1267, qJ(5) * t1362 - t1375 + t1446, t1373 - t1445, -pkin(8) * t908 - t1379 * t992 + t986, t996, t931, t949, t995, t948, t1039, -pkin(8) * t934 + t1312, -pkin(8) * t938 + t1311, -pkin(8) * t924 + t1313, -pkin(8) * t839 + t1314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1219, 0, 0, 0, -t1065, 0, -t1136, 0, -t1188, -t1170, -t1331, t1188, t1332, -qJDD(4), t1265, t1233, t1391, -t1401, -qJDD(4), t1331, -t1332, -t1188, -t1170, t1188, -t1111, t1222, t1220, t1307, -t1047, -t961, -t1036, t1045, -t1037, -t1067, t1228, t1234, t1227, t1262; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1219, qJDD(2), 0, 0, 0, -t1063, t1136, 0, 0, t1132, t1104, t1119, t1131, t1114, -t1154, -t1299 - t1444, -t1298 - t1443, t923, pkin(8) * t927 - t1392, -t1154, -t1119, -t1114, t1132, t1104, t1131, t901, t1414 + t1444, t1413 + t1443, pkin(8) * t909 - t1420, -t994, t930, t947, t993, t946, t1038, pkin(8) * t935 - t1244, pkin(8) * t939 - t1243, pkin(8) * t925 - t1251, pkin(8) * t840 - t1252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1162, -t1161, t1174, t1194, t1182, -t1194, 0, t1061, -t1310, 0, -t1194, -t1174, -t1182, t1162, -t1161, t1194, t967, qJ(5) * t1161, t972, -qJ(5) * t992, t1110, t1109, t1058, -t1110, -t1054, t1151, t864, t866, t904, t831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1325, t1163, t1184, -t1259, t1173, -t1325, -t1061, 0, t1008, 0, -t1325, -t1184, -t1173, t1325, t1163, -t1259, t963, t973, pkin(4) * t1163, -pkin(4) * t992, -t1046, -t959, -t1034, t1044, -t1035, -t1066, t879, t881, t832, t824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1188, t1170, t1331, -t1188, -t1332, qJDD(4), t1310, -t1008, 0, 0, qJDD(4), -t1331, t1332, t1188, t1170, -t1188, -t1261, t1225, t1223, t1383, t1047, t961, t1036, -t1045, t1037, t1067, t1253, t1272, t1232, t1306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(4), -t1331, t1332, t1188, t1170, -t1188, 0, t985, t981, 0, t1047, t961, t1036, -t1045, t1037, t1067, t1300, t1323, t1269, -t1397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1194, t1174, t1182, -t1162, t1161, -t1194, -t985, 0, t992, 0, -t1110, -t1109, -t1058, t1110, t1054, -t1151, t1268, t1242, -t1398, -t1400; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1325, t1184, t1173, -t1325, -t1163, t1259, -t981, -t992, 0, 0, t1046, t959, t1034, -t1044, t1035, t1066, pkin(9) * t1006 - t1302, pkin(9) * t1019 - t1301, pkin(9) * t962 - t1241, pkin(9) * t848 - t1399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1088, -t1053, t1417, t1138, t1134, -t1138, 0, t941, t894, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1364, t1416, t1135, t1087, t1078, -t1364, -t941, 0, t895, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1110, t1109, t1058, -t1110, -t1054, t1151, -t894, -t895, 0, 0;];
m_new_reg  = t1;
