% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d5,d6,theta1,theta3,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPPRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPPRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPPRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPPRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:16:27
% EndTime: 2019-03-08 19:16:32
% DurationCPUTime: 4.80s
% Computational Cost: add. (8346->326), mult. (19676->488), div. (0->0), fcn. (23377->12), ass. (0->276)
t317 = sin(qJ(6));
t493 = 0.2e1 * t317;
t315 = sin(pkin(11));
t473 = sin(pkin(6));
t474 = cos(pkin(11));
t366 = t474 * t473;
t319 = sin(qJ(2));
t380 = t319 * t473;
t481 = cos(qJ(2));
t265 = t315 * t380 - t366 * t481;
t314 = sin(pkin(12));
t480 = cos(qJ(5));
t398 = t480 * t314;
t316 = cos(pkin(12));
t318 = sin(qJ(5));
t442 = t318 * t316;
t299 = t398 + t442;
t200 = t265 * t299;
t397 = t480 * t316;
t443 = t318 * t314;
t297 = -t397 + t443;
t201 = t265 * t297;
t446 = t317 * t201;
t350 = t319 * t366;
t370 = t473 * t481;
t353 = t315 * t370;
t266 = t350 + t353;
t320 = cos(qJ(6));
t449 = t266 * t320;
t169 = -t446 + t449;
t441 = t320 * t201;
t450 = t266 * t317;
t170 = t441 + t450;
t345 = t170 * t320 / 0.2e1 - t169 * t317 / 0.2e1;
t492 = -t200 * pkin(5) / 0.2e1 - t345 * pkin(9);
t438 = t320 * t299;
t376 = t438 * t493;
t475 = cos(pkin(6));
t249 = t266 * t316 + t314 * t475;
t340 = -t266 * t314 + t316 * t475;
t179 = t249 * t480 + t318 * t340;
t433 = t320 * t179 + t265 * t317;
t491 = t433 / 0.2e1;
t227 = t317 * t297;
t220 = t227 * qJD(6);
t293 = t299 * qJD(5);
t284 = t320 * t293;
t489 = -t284 + t220;
t295 = t297 ^ 2;
t296 = t299 ^ 2;
t488 = -t296 - t295;
t400 = t296 - t295;
t432 = -t314 ^ 2 - t316 ^ 2;
t447 = t317 * t179;
t118 = -t265 * t320 + t447;
t487 = -t118 / 0.2e1;
t381 = t315 * pkin(2) + qJ(4);
t373 = pkin(8) + t381;
t289 = t373 * t316;
t354 = t373 * t314;
t214 = t318 * t289 + t354 * t480;
t486 = t214 / 0.2e1;
t485 = t297 / 0.2e1;
t484 = -t299 / 0.2e1;
t483 = t299 / 0.2e1;
t313 = t320 ^ 2;
t482 = -t313 / 0.2e1;
t478 = t297 * pkin(9);
t477 = t299 * pkin(5);
t386 = t200 * t485;
t37 = t299 * t345 - t386;
t472 = qJD(1) * t37;
t178 = t318 * t249 - t340 * t480;
t459 = t178 * t299;
t387 = -t459 / 0.2e1;
t458 = t179 * t297;
t343 = t387 + t458 / 0.2e1;
t156 = t459 / 0.2e1;
t434 = t156 - t458 / 0.2e1;
t28 = t343 + t434;
t471 = qJD(3) * t28;
t470 = t118 * t297;
t469 = t118 * t317;
t371 = -pkin(2) * t474 - pkin(3);
t301 = -t316 * pkin(4) + t371;
t369 = t297 * pkin(5) - t299 * pkin(9);
t325 = t301 + t369;
t215 = t289 * t480 - t318 * t354;
t445 = t317 * t215;
t138 = -t320 * t325 + t445;
t468 = t138 * t317;
t440 = t320 * t215;
t139 = t317 * t325 + t440;
t467 = t139 * t320;
t466 = t169 * t320;
t465 = t170 * t317;
t248 = t477 + t478;
t439 = t320 * t248;
t453 = t214 * t317;
t171 = t439 + t453;
t464 = t171 * t317;
t463 = t171 * t320;
t444 = t317 * t248;
t452 = t214 * t320;
t172 = t444 - t452;
t462 = t172 * t317;
t461 = t172 * t320;
t460 = t178 * t200;
t457 = t200 * t214;
t456 = t200 * t317;
t455 = t200 * t320;
t454 = t214 * t299;
t451 = t249 * t316;
t448 = t28 * qJD(1);
t228 = t317 * t299;
t312 = t317 ^ 2;
t382 = t482 - t312 / 0.2e1;
t327 = t382 * t478 - t477 / 0.2e1;
t344 = t463 / 0.2e1 + t462 / 0.2e1;
t43 = t327 - t344;
t437 = t43 * qJD(2);
t329 = t340 * t314;
t80 = (t266 + t329 - t451) * t265;
t436 = t80 * qJD(1);
t85 = t201 * t483 - t386;
t435 = t85 * qJD(1);
t431 = -t312 - t313;
t308 = t313 - t312;
t429 = qJD(4) * t320;
t428 = qJD(5) * t320;
t427 = qJD(6) * t317;
t426 = qJD(6) * t320;
t351 = (0.1e1 / 0.2e1 + t382) * t299;
t130 = t297 * t351;
t424 = t130 * qJD(2);
t294 = t398 / 0.2e1 + t442 / 0.2e1;
t133 = (t484 + t294) * t265;
t423 = t133 * qJD(1);
t338 = t397 / 0.2e1 - t443 / 0.2e1;
t134 = (t485 + t338) * t265;
t422 = t134 * qJD(1);
t420 = t179 * qJD(5);
t202 = t400 * t317;
t419 = t202 * qJD(2);
t203 = t488 * t317;
t418 = t203 * qJD(2);
t204 = t400 * t320;
t417 = t204 * qJD(2);
t416 = t400 * qJD(2);
t225 = (t312 / 0.2e1 + t482) * t299;
t415 = t225 * qJD(6);
t219 = t227 * qJD(2);
t414 = t228 * qJD(2);
t231 = t320 * t297;
t413 = t231 * qJD(2);
t412 = t231 * qJD(5);
t286 = t312 * t297;
t287 = t313 * t297;
t238 = t286 + t287;
t411 = t238 * qJD(2);
t410 = t238 * qJD(5);
t240 = t488 * t320;
t409 = t240 * qJD(2);
t408 = t488 * qJD(2);
t407 = t265 * qJD(2);
t406 = t266 * qJD(2);
t405 = t294 * qJD(2);
t404 = t297 * qJD(2);
t292 = t297 * qJD(5);
t403 = t299 * qJD(2);
t402 = t432 * qJD(2);
t332 = -t467 / 0.2e1 - t468 / 0.2e1 + t215 / 0.2e1;
t8 = (t461 / 0.2e1 - t464 / 0.2e1 + t486) * t299 + t332 * t297;
t401 = t130 * qJD(4) + t8 * qJD(5);
t396 = t299 * t427;
t395 = t299 * t426;
t394 = t297 * t403;
t393 = t297 * t293;
t392 = t317 * t426;
t391 = t317 * t428;
t390 = t320 * t403;
t385 = -t446 / 0.2e1;
t384 = -t441 / 0.2e1;
t383 = t438 / 0.2e1;
t379 = t433 * t297;
t378 = t433 * t320;
t377 = t431 * t178;
t375 = qJD(2) * t301 + qJD(4);
t374 = -qJD(6) - t404;
t372 = t296 * t392;
t368 = qJD(5) * t376;
t367 = t266 / 0.2e1 + t387;
t12 = (t179 - t378 - t469) * t178;
t333 = -t378 / 0.2e1 - t469 / 0.2e1;
t6 = (t179 / 0.2e1 + t333) * t297 + t178 * t351;
t365 = t12 * qJD(1) + t6 * qJD(3);
t347 = (t487 + t447 / 0.2e1) * t299;
t16 = -t455 / 0.2e1 + t347;
t29 = (-t138 + t445) * t299 + (t171 - t453) * t297;
t364 = t16 * qJD(1) + t29 * qJD(2);
t21 = (t462 + t463) * t299 + (t138 * t320 - t139 * t317) * t297;
t326 = (t317 * t491 + t320 * t487) * t297;
t23 = t326 - t345;
t363 = t23 * qJD(1) - t21 * qJD(2);
t32 = t385 + t379 / 0.2e1 + t367 * t320;
t78 = -t139 * t297 + t214 * t438;
t362 = t32 * qJD(1) - t78 * qJD(2);
t33 = t384 - t470 / 0.2e1 - t367 * t317;
t77 = t138 * t297 - t214 * t228;
t361 = -t33 * qJD(1) + t77 * qJD(2);
t13 = -t118 * t169 + t170 * t433 - t460;
t360 = t13 * qJD(1) + t37 * qJD(3);
t31 = t179 * t201 + t265 * t266 - t460;
t359 = t31 * qJD(1) + t85 * qJD(3);
t358 = t461 - t464;
t104 = -t215 * t297 + t454;
t322 = t350 / 0.2e1 + t353 / 0.2e1;
t56 = t322 + t343;
t357 = t56 * qJD(1) - t104 * qJD(2);
t356 = t374 * t320;
t324 = t451 / 0.2e1 - t329 / 0.2e1;
t128 = t322 - t324;
t264 = t432 * t381;
t355 = t128 * qJD(1) + t264 * qJD(2);
t352 = t478 / 0.2e1 + t477 / 0.2e1;
t339 = t248 / 0.2e1 + t352;
t75 = t339 * t320;
t349 = pkin(5) * t317 * qJD(5) + t75 * qJD(2);
t73 = t339 * t317;
t348 = pkin(5) * t428 - t73 * qJD(2);
t346 = -t466 / 0.2e1 - t465 / 0.2e1;
t342 = t299 * t356;
t206 = -t225 * qJD(2) + t391;
t341 = t294 * qJD(6) + t394;
t184 = t320 * t296 * t317 * qJD(2) + t225 * qJD(5);
t239 = t308 * t296;
t337 = t239 * qJD(2) + t368;
t336 = qJD(2) * t376 - t308 * qJD(5);
t321 = t171 * t487 + t172 * t491 + t332 * t178 + t179 * t486;
t2 = t321 + t492;
t20 = -t138 * t171 + t139 * t172 + t214 * t215;
t335 = t2 * qJD(1) + t20 * qJD(2) + t8 * qJD(3);
t132 = (0.1e1 + t431) * t299 * t297;
t334 = t6 * qJD(1) + t8 * qJD(2) + t132 * qJD(3);
t323 = t297 * t333 + t156;
t10 = t323 + t346;
t38 = t454 + (-t467 - t468) * t297;
t331 = -qJD(1) * t10 - qJD(2) * t38 - qJD(3) * t130;
t328 = t179 * t383 + t433 * t484;
t19 = t456 / 0.2e1 + t328;
t30 = (-t139 + t440) * t299 + (-t172 - t452) * t297;
t330 = t19 * qJD(1) + t30 * qJD(2);
t285 = t294 * qJD(5);
t283 = t317 * t293;
t224 = t231 * qJD(6);
t218 = t227 * qJD(5);
t208 = -t219 - t427;
t136 = (t294 + t483) * t265;
t135 = (-t297 / 0.2e1 + t338) * t265;
t129 = t322 + t324;
t84 = t178 * t320;
t83 = t178 * t317;
t76 = t453 + t439 / 0.2e1 - t352 * t320;
t74 = t452 - t444 / 0.2e1 + t352 * t317;
t57 = t322 + t434;
t44 = t327 + t344;
t35 = -t379 / 0.2e1 + t178 * t383 + t385 + t449 / 0.2e1;
t34 = t470 / 0.2e1 + t317 * t387 + t384 - t450 / 0.2e1;
t22 = t326 + t345;
t18 = -t456 / 0.2e1 + t328;
t17 = t455 / 0.2e1 + t347;
t11 = qJD(2) * t85 + qJD(5) * t28;
t9 = t323 - t346;
t3 = qJD(2) * t37 + qJD(5) * t6;
t1 = t321 - t492;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t31, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t13 + qJD(5) * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t380, -qJD(2) * t370, 0, 0, 0, 0, 0, 0, 0, 0, -t406, t407, 0 (-t265 * t315 - t266 * t474) * qJD(2) * pkin(2), 0, 0, 0, 0, 0, 0, -t316 * t406, t314 * t406, t432 * t407, t436 + (t264 * t265 + t266 * t371) * qJD(2) + t129 * qJD(4), 0, 0, 0, 0, 0, 0, t136 * qJD(5) + t266 * t404, t135 * qJD(5) + t266 * t403 (-t200 * t299 - t201 * t297) * qJD(2) (t201 * t215 + t266 * t301 - t457) * qJD(2) + t57 * qJD(4) + t359, 0, 0, 0, 0, 0, 0 (t169 * t297 - t200 * t228) * qJD(2) + t17 * qJD(5) + t35 * qJD(6) (-t170 * t297 - t200 * t438) * qJD(2) + t18 * qJD(5) + t34 * qJD(6), t22 * qJD(5) + (-t465 - t466) * t403 (-t169 * t138 + t170 * t139 - t457) * qJD(2) + t9 * qJD(4) + t1 * qJD(5) + t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t57 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136 * qJD(2) - t420, t135 * qJD(2) + t178 * qJD(5), 0, t471, 0, 0, 0, 0, 0, 0, t17 * qJD(2) + t83 * qJD(6) - t320 * t420, t18 * qJD(2) + t84 * qJD(6) + t317 * t420, t22 * qJD(2) + qJD(5) * t377, t1 * qJD(2) + (-t179 * pkin(5) + pkin(9) * t377) * qJD(5) + t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35 * qJD(2) + t83 * qJD(5) - qJD(6) * t433, qJD(2) * t34 + qJD(5) * t84 + qJD(6) * t118, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t128 - t436, 0, 0, 0, 0, 0, 0, -t133 * qJD(5), -t134 * qJD(5), 0, -qJD(4) * t56 - t359, 0, 0, 0, 0, 0, 0, qJD(5) * t16 - qJD(6) * t32, qJD(5) * t19 - qJD(6) * t33, qJD(5) * t23, qJD(4) * t10 + qJD(5) * t2 - t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t432 * qJD(4), -t264 * qJD(4), -t393, -t400 * qJD(5), 0, t393, 0, 0, t301 * t293, -t301 * t292, -t488 * qJD(4), qJD(4) * t104, -t313 * t393 - t372, -t239 * qJD(6) + t297 * t368, t204 * qJD(5) - t297 * t396, -t312 * t393 + t372, -t202 * qJD(5) - t297 * t395, t393, -t203 * qJD(4) + t29 * qJD(5) + t78 * qJD(6), -t240 * qJD(4) + t30 * qJD(5) + t77 * qJD(6), -qJD(5) * t21, qJD(4) * t38 + qJD(5) * t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t435, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401 - t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402, -t355, 0, 0, 0, 0, 0, 0, 0, 0, -t408, -t357, 0, 0, 0, 0, 0, 0, -t418, -t409, 0, qJD(5) * t44 - t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t394, -t416, -t292, t394, -t293, 0, -t215 * qJD(5) + t301 * t403 - t423, t214 * qJD(5) - t301 * t404 - t422, 0, 0, -t415 + (-t313 * t403 - t391) * t297 (t286 - t287) * qJD(5) + (-qJD(6) + t404) * t376, t283 + t417, t415 + (-t312 * t403 + t391) * t297, t284 - t419, t341 (t317 * t369 - t440) * qJD(5) + t76 * qJD(6) + t364 (t320 * t369 + t445) * qJD(5) + t74 * qJD(6) + t330, qJD(5) * t358 + t363, t44 * qJD(4) + (-t215 * pkin(5) + pkin(9) * t358) * qJD(5) + t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t184, -t337, t374 * t228, t184, t342, t285, t76 * qJD(5) - t139 * qJD(6) - t362, t74 * qJD(5) + t138 * qJD(6) + t361, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t435, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401 + t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t132 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t293, t292, 0, t448, 0, 0, 0, 0, 0, 0, t489, t224 + t283, -t410 (t431 * t478 - t477) * qJD(5) + t334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218 - t395, t396 + t412, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t56 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402, t355, 0, 0, 0, 0, 0, 0, t293, -t292, t408, t357, 0, 0, 0, 0, 0, 0, t418 - t489, -t228 * qJD(5) - t297 * t426 + t409, t410, -qJD(5) * t43 + t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t403, -t404, 0, 0, 0, 0, 0, 0, 0, 0, t390, -t414, t411, -t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, t356, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133 * qJD(2), t134 * qJD(2), 0, -t471, 0, 0, 0, 0, 0, 0, -qJD(2) * t16, -qJD(2) * t19, -qJD(2) * t23, -qJD(2) * t2 - t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t394, t416, 0, -t394, 0, 0, -t299 * t375 + t423, t297 * t375 + t422, 0, 0, t313 * t394 - t415, t342 * t493, t224 - t417, t312 * t394 + t415, -t220 + t419, -t341, -t75 * qJD(6) - t299 * t429 - t364, t228 * qJD(4) + t73 * qJD(6) - t330, -t238 * qJD(4) - t363, qJD(4) * t43 - t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t448, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t403, t404, 0, 0, 0, 0, 0, 0, 0, 0, -t390, t414, -t411, t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t392, t308 * qJD(6), 0, -t392, 0, 0, -pkin(5) * t427, -pkin(5) * t426, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t206, -t336, t413 + t426, -t206, t208, -t405, -pkin(9) * t426 - t349, pkin(9) * t427 - t348, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t32, qJD(2) * t33, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184, t337, t317 * t394 - t412, -t184, t297 * t390 + t218, t285, t227 * qJD(4) + t75 * qJD(5) + t362, -t73 * qJD(5) + t297 * t429 - t361, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, t320 * t404, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206, t336, -t413, t206, t219, t405, t349, t348, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t4;
