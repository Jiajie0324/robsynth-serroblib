% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d5,d6,theta1,theta3,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x23]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPPRR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPPRR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPPRR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPPRR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:16:17
% EndTime: 2019-03-08 19:16:21
% DurationCPUTime: 1.90s
% Computational Cost: add. (2179->195), mult. (5548->321), div. (0->0), fcn. (6530->12), ass. (0->181)
t151 = sin(pkin(12));
t255 = cos(qJ(5));
t205 = t255 * t151;
t153 = cos(pkin(12));
t155 = sin(qJ(5));
t232 = t155 * t153;
t136 = t205 + t232;
t130 = t136 * qJD(5);
t157 = cos(qJ(6));
t126 = t157 * t130;
t204 = t255 * t153;
t233 = t155 * t151;
t134 = -t204 + t233;
t154 = sin(qJ(6));
t82 = t154 * t134;
t75 = t82 * qJD(6);
t260 = -t126 + t75;
t132 = t134 ^ 2;
t133 = t136 ^ 2;
t259 = -t133 - t132;
t209 = t133 - t132;
t149 = t154 ^ 2;
t150 = t157 ^ 2;
t144 = t150 - t149;
t234 = t154 * t157;
t193 = 0.2e1 * t136 * t234;
t163 = qJD(2) * t193 - t144 * qJD(5);
t253 = t136 * pkin(5);
t254 = t134 * pkin(9);
t100 = t253 + t254;
t258 = t100 / 0.2e1;
t257 = -t136 / 0.2e1;
t256 = cos(qJ(2));
t152 = sin(pkin(11));
t145 = t152 * pkin(2) + qJ(4);
t252 = pkin(8) + t145;
t156 = sin(qJ(2));
t239 = sin(pkin(6));
t240 = cos(pkin(11));
t184 = t240 * t239;
t176 = t156 * t184;
t189 = t239 * t256;
t178 = t152 * t189;
t110 = t176 + t178;
t241 = cos(pkin(6));
t101 = t110 * t153 + t241 * t151;
t168 = -t110 * t151 + t241 * t153;
t52 = t255 * t101 + t155 * t168;
t251 = t154 * t52;
t195 = t156 * t239;
t109 = t152 * t195 - t256 * t184;
t59 = t109 * t134;
t250 = t154 * t59;
t128 = t252 * t153;
t196 = t252 * t151;
t71 = t255 * t128 - t155 * t196;
t249 = t154 * t71;
t248 = t157 * t52;
t247 = t157 * t59;
t246 = t157 * t71;
t28 = -t109 * t157 + t251;
t245 = t28 * t134;
t29 = t109 * t154 + t248;
t244 = t29 * t134;
t58 = t109 * t136;
t243 = t58 * t154;
t242 = t58 * t157;
t238 = t101 * t153;
t237 = t110 * t154;
t236 = t110 * t157;
t235 = t136 * t157;
t83 = t154 * t136;
t86 = t157 * t134;
t161 = t168 * t151;
t18 = (t110 + t161 - t238) * t109;
t231 = t18 * qJD(1);
t131 = t205 / 0.2e1 + t232 / 0.2e1;
t32 = (t257 + t131) * t109;
t229 = t32 * qJD(1);
t164 = t204 / 0.2e1 - t233 / 0.2e1;
t33 = (t134 / 0.2e1 + t164) * t109;
t228 = t33 * qJD(1);
t60 = t209 * t154;
t227 = t60 * qJD(2);
t61 = t259 * t154;
t226 = t61 * qJD(2);
t62 = t209 * t157;
t225 = t62 * qJD(2);
t224 = t209 * qJD(2);
t74 = t82 * qJD(2);
t223 = t83 * qJD(2);
t222 = t86 * qJD(2);
t221 = t86 * qJD(5);
t94 = t259 * t157;
t220 = t94 * qJD(2);
t141 = t151 ^ 2 + t153 ^ 2;
t219 = qJD(2) * t110;
t218 = qJD(4) * t157;
t217 = qJD(5) * t154;
t216 = qJD(5) * t157;
t215 = qJD(6) * t154;
t214 = qJD(6) * t157;
t213 = t131 * qJD(2);
t212 = t134 * qJD(2);
t129 = t134 * qJD(5);
t211 = t136 * qJD(2);
t210 = t141 * qJD(2);
t208 = -t250 / 0.2e1;
t207 = -t247 / 0.2e1;
t51 = t155 * t101 - t255 * t168;
t206 = t51 * t257;
t203 = t136 * t215;
t202 = t136 * t214;
t201 = t134 * t211;
t200 = t134 * t130;
t199 = t154 * t214;
t198 = t154 * t216;
t197 = t157 * t211;
t194 = t141 * t109;
t190 = -t240 * pkin(2) - pkin(3);
t137 = -t153 * pkin(4) + t190;
t192 = qJD(2) * t137 + qJD(4);
t191 = -qJD(6) - t212;
t188 = t110 / 0.2e1 + t206;
t187 = t134 * pkin(5) - t136 * pkin(9);
t185 = qJD(5) * t193;
t175 = (-t28 / 0.2e1 + t251 / 0.2e1) * t136;
t1 = -t242 / 0.2e1 + t175;
t160 = t137 + t187;
t36 = -t157 * t160 + t249;
t5 = (-t36 + t249) * t136 + t100 * t86;
t183 = t1 * qJD(1) + t5 * qJD(2);
t70 = t155 * t128 + t255 * t196;
t16 = t36 * t134 - t70 * t83;
t8 = t207 - t245 / 0.2e1 - t188 * t154;
t182 = -t8 * qJD(1) + t16 * qJD(2);
t37 = t154 * t160 + t246;
t17 = -t37 * t134 + t70 * t235;
t7 = t208 + t244 / 0.2e1 + t188 * t157;
t181 = t7 * qJD(1) - t17 * qJD(2);
t108 = t141 * t145;
t158 = t176 / 0.2e1 + t178 / 0.2e1;
t159 = t238 / 0.2e1 - t161 / 0.2e1;
t30 = t158 - t159;
t180 = t30 * qJD(1) - t108 * qJD(2);
t179 = t191 * t157;
t177 = t254 / 0.2e1 + t253 / 0.2e1;
t174 = (-t29 / 0.2e1 + t248 / 0.2e1) * t136;
t167 = t258 + t177;
t12 = t167 * t154;
t173 = pkin(5) * t216 - t12 * qJD(2);
t14 = t167 * t157;
t172 = pkin(5) * t217 + t14 * qJD(2);
t80 = (t149 / 0.2e1 - t150 / 0.2e1) * t136;
t171 = -t80 * qJD(2) + t198;
t170 = t136 * t179;
t169 = t131 * qJD(6) + t201;
t166 = t133 * qJD(2) * t234 + t80 * qJD(5);
t93 = t144 * t133;
t165 = t93 * qJD(2) + t185;
t4 = t243 / 0.2e1 + t174;
t6 = (-t37 + t246) * t136 - t100 * t82;
t162 = t4 * qJD(1) + t6 * qJD(2);
t127 = t131 * qJD(5);
t125 = t154 * t130;
t79 = t86 * qJD(6);
t73 = t82 * qJD(5);
t72 = t80 * qJD(6);
t64 = -t215 - t74;
t35 = (t136 / 0.2e1 + t131) * t109;
t34 = (-t134 / 0.2e1 + t164) * t109;
t31 = t158 + t159;
t22 = t51 * t157;
t21 = t51 * t154;
t15 = t70 * t154 + (-t177 + t258) * t157;
t13 = t70 * t157 + (-t100 / 0.2e1 + t177) * t154;
t10 = -t244 / 0.2e1 + t51 * t235 / 0.2e1 + t208 + t236 / 0.2e1;
t9 = t245 / 0.2e1 + t154 * t206 + t207 - t237 / 0.2e1;
t3 = -t243 / 0.2e1 + t174;
t2 = t242 / 0.2e1 + t175;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, t18 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -qJD(2) * t195, -qJD(2) * t189 (-t109 * t152 - t110 * t240) * qJD(2) * pkin(2), -t153 * t219, t151 * t219, -qJD(2) * t194, t231 + (t110 * t190 - t145 * t194) * qJD(2) + t31 * qJD(4), 0, 0, 0, 0, 0, t35 * qJD(5) + t110 * t212, t34 * qJD(5) + t110 * t211, 0, 0, 0, 0, 0 ((t236 - t250) * t134 - t58 * t83) * qJD(2) + t2 * qJD(5) + t10 * qJD(6) (-(t237 + t247) * t134 - t58 * t235) * qJD(2) + t3 * qJD(5) + t9 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, t31 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35 * qJD(2) - t52 * qJD(5), t34 * qJD(2) + t51 * qJD(5), 0, 0, 0, 0, 0, t2 * qJD(2) + t21 * qJD(6) - t216 * t52, t3 * qJD(2) + t22 * qJD(6) + t217 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10 * qJD(2) + t21 * qJD(5) - t29 * qJD(6), t9 * qJD(2) + t22 * qJD(5) + t28 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, -t30 * qJD(4) - t231, 0, 0, 0, 0, 0, -t32 * qJD(5), -t33 * qJD(5), 0, 0, 0, 0, 0, t1 * qJD(5) - t7 * qJD(6), t4 * qJD(5) - t8 * qJD(6); 0, 0, 0, 0, 0, 0, 0, t141 * qJD(4), t108 * qJD(4), -t200, -t209 * qJD(5), 0, 0, 0, t137 * t130, -t137 * t129, -t133 * t199 - t150 * t200, -t93 * qJD(6) + t134 * t185, t62 * qJD(5) - t134 * t203, -t60 * qJD(5) - t134 * t202, t200, -t61 * qJD(4) + t5 * qJD(5) + t17 * qJD(6), -t94 * qJD(4) + t6 * qJD(5) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, t210, -t180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t226, -t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t201, -t224, -t129, -t130, 0, -t71 * qJD(5) + t137 * t211 - t229, t70 * qJD(5) - t137 * t212 - t228, -t72 + (-t150 * t211 - t198) * t134, t134 * t163 - 0.2e1 * t136 * t199, t125 + t225, t126 - t227, t169 (t154 * t187 - t246) * qJD(5) + t15 * qJD(6) + t183 (t157 * t187 + t249) * qJD(5) + t13 * qJD(6) + t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, -t165, t191 * t83, t170, t127, t15 * qJD(5) - t37 * qJD(6) - t181, t13 * qJD(5) + t36 * qJD(6) + t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t130, t129, 0, 0, 0, 0, 0, t260, t125 + t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73 - t202, t203 + t221; 0, 0, 0, 0, 0, 0, 0, 0, t30 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, -t210, t180, 0, 0, 0, 0, 0, t130, -t129, 0, 0, 0, 0, 0, t226 - t260, -t83 * qJD(5) - t134 * t214 + t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t211, -t212, 0, 0, 0, 0, 0, t197, -t223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32 * qJD(2), t33 * qJD(2), 0, 0, 0, 0, 0, -t1 * qJD(2), -t4 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, t224, 0, 0, 0, -t136 * t192 + t229, t134 * t192 + t228, t150 * t201 - t72, 0.2e1 * t154 * t170, t79 - t225, -t75 + t227, -t169, -t14 * qJD(6) - t136 * t218 - t183, t83 * qJD(4) + t12 * qJD(6) - t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, t212, 0, 0, 0, 0, 0, -t197, t223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, t144 * qJD(6), 0, 0, 0, -pkin(5) * t215, -pkin(5) * t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171, -t163, t214 + t222, t64, -t213, -pkin(9) * t214 - t172, pkin(9) * t215 - t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t7 * qJD(2), t8 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, t165, t154 * t201 - t221, t134 * t197 + t73, t127, t82 * qJD(4) + t14 * qJD(5) + t181, -t12 * qJD(5) + t134 * t218 - t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t157 * t212; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t171, t163, -t222, t74, t213, t172, t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t11;
