% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRPPRR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d5,d6,theta1,theta3,theta4]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 21:43
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRPPRR1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPPRR1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPPRR1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPPRR1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPPRR1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPPRR1_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 21:42:52
% EndTime: 2019-05-04 21:43:31
% DurationCPUTime: 41.61s
% Computational Cost: add. (275947->916), mult. (571078->1397), div. (0->0), fcn. (438912->14), ass. (0->638)
t1503 = cos(pkin(12));
t1499 = sin(pkin(12));
t1495 = t1499 ^ 2;
t1515 = t1503 ^ 2;
t1643 = qJD(2) ^ 2;
t1646 = t1643 * (t1495 + t1515);
t1459 = t1503 * t1646;
t1485 = t1503 * qJDD(2);
t1500 = sin(pkin(11));
t1504 = cos(pkin(11));
t1424 = -t1459 * t1500 + t1485 * t1504;
t1426 = t1459 * t1504 + t1485 * t1500;
t1510 = sin(qJ(2));
t1513 = cos(qJ(2));
t1366 = t1510 * t1424 + t1426 * t1513;
t1501 = sin(pkin(10));
t1505 = cos(pkin(10));
t1506 = cos(pkin(6));
t1551 = t1424 * t1513 - t1426 * t1510;
t1672 = t1551 * t1506;
t1677 = t1366 * t1505 + t1501 * t1672;
t1676 = -t1366 * t1501 + t1505 * t1672;
t1502 = sin(pkin(6));
t1673 = t1551 * t1502;
t1597 = g(1) * t1501 - t1505 * g(2);
t1636 = g(3) - qJDD(1);
t1522 = -t1502 * t1636 + t1506 * t1597;
t1609 = t1505 * g(1) + t1501 * g(2);
t1392 = t1510 * t1522 - t1513 * t1609;
t1384 = -pkin(2) * t1643 + t1392;
t1391 = -t1510 * t1609 - t1513 * t1522;
t1521 = qJDD(2) * pkin(2) - t1391;
t1313 = t1500 * t1384 - t1504 * t1521;
t1314 = t1504 * t1384 + t1500 * t1521;
t1594 = t1313 * t1500 + t1504 * t1314;
t1219 = t1313 * t1504 - t1314 * t1500;
t1614 = t1219 * t1510;
t1671 = t1513 * t1594 + t1614;
t1632 = t1219 * t1513;
t1137 = -t1510 * t1594 + t1632;
t1670 = 2 * qJD(4);
t1465 = qJDD(2) * t1500 + t1504 * t1643;
t1616 = t1499 * t1503;
t1433 = t1465 * t1616;
t1474 = t1643 * t1616;
t1599 = t1499 * t1485;
t1434 = -t1474 * t1500 + t1504 * t1599;
t1373 = t1510 * t1433 - t1434 * t1513;
t1669 = t1373 * t1501;
t1668 = t1373 * t1505;
t1508 = sin(qJ(6));
t1509 = sin(qJ(5));
t1512 = cos(qJ(5));
t1546 = t1499 * t1512 + t1503 * t1509;
t1455 = t1546 * qJD(2);
t1511 = cos(qJ(6));
t1430 = -t1511 * qJD(5) + t1455 * t1508;
t1432 = qJD(5) * t1508 + t1455 * t1511;
t1378 = t1432 * t1430;
t1483 = t1499 * qJDD(2);
t1447 = t1483 * t1509 - t1512 * t1485;
t1621 = t1455 * qJD(5);
t1408 = -t1447 - t1621;
t1393 = qJDD(6) - t1408;
t1649 = -t1378 + t1393;
t1667 = t1508 * t1649;
t1453 = (t1499 * t1509 - t1503 * t1512) * qJD(2);
t1414 = t1455 * t1453;
t1647 = qJDD(5) - t1414;
t1666 = t1509 * t1647;
t1665 = t1511 * t1649;
t1664 = t1512 * t1647;
t1488 = t1515 * t1643;
t1618 = t1495 * t1643;
t1468 = t1488 + t1618;
t1436 = t1502 * t1597 + t1506 * t1636;
t1435 = -qJDD(3) + t1436;
t1390 = qJ(3) * t1465 - t1435 * t1504;
t1466 = qJDD(2) * t1504 - t1500 * t1643;
t1578 = -qJ(3) * t1466 - t1435 * t1500;
t1663 = t1390 * t1510 + t1513 * t1578;
t1662 = t1513 * t1390 - t1510 * t1578;
t1420 = t1510 * t1465 - t1466 * t1513;
t1547 = t1465 * t1513 + t1510 * t1466;
t1650 = t1547 * t1506;
t1661 = t1420 * t1505 + t1501 * t1650;
t1660 = t1420 * t1501 - t1505 * t1650;
t1659 = t1501 * t1636;
t1550 = t1433 * t1513 + t1434 * t1510;
t1658 = t1502 * t1550;
t1657 = t1505 * t1636;
t1656 = t1506 * t1550;
t1651 = t1547 * t1502;
t1617 = t1499 * t1435;
t1520 = qJDD(2) * qJ(4) + t1314;
t1648 = -pkin(3) * t1643 + qJD(2) * t1670 + t1520;
t1260 = -pkin(4) * t1488 + pkin(8) * t1485 + t1503 * t1648 - t1617;
t1615 = t1503 * t1435;
t1517 = pkin(4) * t1474 - pkin(8) * t1483 - t1499 * t1648 - t1615;
t1166 = t1512 * t1260 + t1509 * t1517;
t1396 = pkin(5) * t1453 - pkin(9) * t1455;
t1642 = qJD(5) ^ 2;
t1147 = -pkin(5) * t1642 + qJDD(5) * pkin(9) - t1396 * t1453 + t1166;
t1311 = -qJDD(2) * pkin(3) - qJ(4) * t1643 + qJDD(4) + t1313;
t1289 = -pkin(4) * t1485 - pkin(8) * t1468 + t1311;
t1442 = t1453 * qJD(5);
t1448 = t1546 * qJDD(2);
t1410 = -t1442 + t1448;
t1202 = (-t1410 + t1442) * pkin(9) + (-t1408 + t1621) * pkin(5) + t1289;
t1093 = t1147 * t1508 - t1511 * t1202;
t1094 = t1147 * t1511 + t1202 * t1508;
t1041 = t1508 * t1093 + t1511 * t1094;
t1518 = (-pkin(3) * qJD(2) + t1670) * qJD(2) + t1520;
t1267 = t1499 * t1518 + t1615;
t1268 = t1503 * t1518 - t1617;
t1174 = t1499 * t1267 + t1503 * t1268;
t1645 = -t1501 * t1597 - t1505 * t1609;
t1644 = -t1501 * t1609 + t1505 * t1597;
t1428 = t1430 ^ 2;
t1429 = t1432 ^ 2;
t1444 = qJD(6) + t1453;
t1443 = t1444 ^ 2;
t1445 = t1453 ^ 2;
t1446 = t1455 ^ 2;
t1641 = pkin(2) * t1219;
t1165 = t1260 * t1509 - t1512 * t1517;
t1086 = -t1165 * t1512 + t1166 * t1509;
t1640 = pkin(4) * t1086;
t1331 = -t1447 * t1509 - t1448 * t1512;
t1639 = pkin(4) * t1331;
t1638 = pkin(5) * t1509;
t1325 = t1510 * t1391 + t1392 * t1513;
t1637 = pkin(7) * t1325;
t1634 = t1086 * t1499;
t1633 = t1086 * t1503;
t1631 = t1289 * t1509;
t1630 = t1289 * t1512;
t1322 = t1378 + t1393;
t1629 = t1322 * t1508;
t1628 = t1322 * t1511;
t1405 = qJDD(5) + t1414;
t1627 = t1405 * t1509;
t1626 = t1405 * t1512;
t1625 = t1444 * t1508;
t1624 = t1444 * t1511;
t1623 = t1453 * t1509;
t1622 = t1453 * t1512;
t1620 = t1455 * t1509;
t1619 = t1455 * t1512;
t1302 = t1499 * t1311;
t1303 = t1503 * t1311;
t1146 = -qJDD(5) * pkin(5) - pkin(9) * t1642 + t1396 * t1455 + t1165;
t1143 = t1508 * t1146;
t1613 = t1510 * t1436;
t1144 = t1511 * t1146;
t1612 = t1513 * t1436;
t1611 = -pkin(5) * t1146 + pkin(9) * t1041;
t1610 = -pkin(3) * t1311 + qJ(4) * t1174;
t1608 = t1502 * qJDD(2);
t1486 = t1506 * qJDD(2);
t1484 = t1515 * qJDD(2);
t1607 = -pkin(5) * t1512 - pkin(4);
t1606 = t1509 * t1378;
t1605 = t1512 * t1378;
t1604 = t1500 * t1414;
t1603 = t1504 * t1414;
t1364 = -t1429 - t1443;
t1254 = -t1364 * t1508 - t1628;
t1544 = -t1508 * qJDD(5) - t1511 * t1410;
t1299 = (qJD(6) + t1444) * t1430 + t1544;
t1602 = pkin(5) * t1299 + pkin(9) * t1254 + t1143;
t1343 = -t1443 - t1428;
t1241 = t1343 * t1511 - t1667;
t1593 = t1511 * qJDD(5) - t1508 * t1410;
t1341 = -qJD(6) * t1432 + t1593;
t1383 = t1432 * t1444;
t1296 = t1341 - t1383;
t1601 = pkin(5) * t1296 + pkin(9) * t1241 - t1144;
t1600 = pkin(3) * t1485 - qJ(4) * t1459 - t1303;
t1598 = t1505 * t1608;
t1087 = t1165 * t1509 + t1512 * t1166;
t1472 = 0.2e1 * t1599;
t1040 = -t1093 * t1511 + t1094 * t1508;
t1011 = t1041 * t1512 + t1146 * t1509;
t953 = pkin(8) * t1011 + (-pkin(9) * t1509 + t1607) * t1040;
t1010 = t1041 * t1509 - t1146 * t1512;
t971 = -pkin(8) * t1010 + (-pkin(9) * t1512 + t1638) * t1040;
t977 = -t1010 * t1499 + t1011 * t1503;
t1592 = -pkin(3) * t1040 + qJ(4) * t977 + t1499 * t971 + t1503 * t953;
t1295 = (-qJD(6) + t1444) * t1432 + t1593;
t1342 = -qJD(6) * t1430 - t1544;
t1382 = t1444 * t1430;
t1298 = t1342 + t1382;
t1199 = t1295 * t1511 + t1298 * t1508;
t1335 = t1428 + t1429;
t1158 = t1199 * t1509 + t1335 * t1512;
t1159 = t1199 * t1512 - t1335 * t1509;
t1085 = -t1158 * t1499 + t1159 * t1503;
t1197 = t1295 * t1508 - t1298 * t1511;
t1021 = -pkin(9) * t1197 - t1040;
t987 = pkin(8) * t1159 + t1509 * t1021 + t1197 * t1607;
t994 = -pkin(8) * t1158 + t1021 * t1512 + t1197 * t1638;
t1591 = -pkin(3) * t1197 + qJ(4) * t1085 + t1499 * t994 + t1503 * t987;
t1240 = t1343 * t1508 + t1665;
t1063 = -pkin(5) * t1240 + t1093;
t1109 = -pkin(9) * t1240 + t1143;
t1170 = t1241 * t1512 - t1296 * t1509;
t1003 = -pkin(4) * t1240 + pkin(8) * t1170 + t1063 * t1512 + t1109 * t1509;
t1169 = t1241 * t1509 + t1296 * t1512;
t1009 = -pkin(8) * t1169 - t1063 * t1509 + t1109 * t1512;
t1103 = -t1169 * t1499 + t1170 * t1503;
t1590 = -pkin(3) * t1240 + qJ(4) * t1103 + t1503 * t1003 + t1499 * t1009;
t1253 = t1364 * t1511 - t1629;
t1066 = -pkin(5) * t1253 + t1094;
t1110 = -pkin(9) * t1253 + t1144;
t1182 = t1254 * t1512 - t1299 * t1509;
t1005 = -pkin(4) * t1253 + pkin(8) * t1182 + t1066 * t1512 + t1110 * t1509;
t1181 = t1254 * t1509 + t1299 * t1512;
t1013 = -pkin(8) * t1181 - t1066 * t1509 + t1110 * t1512;
t1106 = -t1181 * t1499 + t1182 * t1503;
t1589 = -pkin(3) * t1253 + qJ(4) * t1106 + t1503 * t1005 + t1499 * t1013;
t1333 = -t1447 * t1512 + t1448 * t1509;
t1377 = -t1445 - t1446;
t1068 = -pkin(4) * t1377 + pkin(8) * t1333 + t1087;
t1078 = -pkin(8) * t1331 - t1086;
t1245 = -t1331 * t1499 + t1333 * t1503;
t1588 = -pkin(3) * t1377 + qJ(4) * t1245 + t1503 * t1068 + t1499 * t1078;
t1587 = pkin(5) * t1335 + pkin(9) * t1199 + t1041;
t1397 = -t1445 - t1642;
t1329 = t1397 * t1512 - t1666;
t1407 = t1447 + 0.2e1 * t1621;
t1194 = -pkin(4) * t1407 + pkin(8) * t1329 - t1630;
t1328 = t1397 * t1509 + t1664;
t1216 = -pkin(8) * t1328 + t1631;
t1239 = -t1328 * t1499 + t1329 * t1503;
t1586 = -pkin(3) * t1407 + qJ(4) * t1239 + t1503 * t1194 + t1499 * t1216;
t1439 = -t1446 - t1642;
t1363 = -t1439 * t1509 - t1626;
t1409 = -0.2e1 * t1442 + t1448;
t1204 = -pkin(4) * t1409 + pkin(8) * t1363 + t1631;
t1360 = t1439 * t1512 - t1627;
t1222 = -pkin(8) * t1360 + t1630;
t1279 = -t1360 * t1499 + t1363 * t1503;
t1585 = -pkin(3) * t1409 + qJ(4) * t1279 + t1503 * t1204 + t1499 * t1222;
t1482 = t1495 * qJDD(2);
t1463 = t1484 + t1482;
t1584 = pkin(3) * t1468 + qJ(4) * t1463 + t1174;
t1583 = pkin(4) * t1010 + t1611;
t1582 = pkin(4) * t1360 - t1166;
t1470 = qJDD(2) * t1513 - t1510 * t1643;
t1581 = -pkin(7) * t1470 - t1613;
t1545 = t1510 * qJDD(2) + t1513 * t1643;
t1580 = -pkin(7) * t1545 + t1612;
t961 = -t1040 * t1504 + t1500 * t977;
t962 = t1040 * t1500 + t1504 * t977;
t1579 = t1510 * t962 + t1513 * t961;
t1035 = t1087 * t1503 - t1634;
t1023 = t1035 * t1500 - t1289 * t1504;
t1024 = t1035 * t1504 + t1289 * t1500;
t1577 = t1023 * t1513 + t1024 * t1510;
t1051 = t1085 * t1500 - t1197 * t1504;
t1052 = t1085 * t1504 + t1197 * t1500;
t1576 = t1051 * t1513 + t1052 * t1510;
t1297 = t1342 - t1382;
t1200 = t1296 * t1511 - t1297 * t1508;
t1376 = t1429 - t1428;
t1167 = t1200 * t1509 - t1376 * t1512;
t1168 = t1200 * t1512 + t1376 * t1509;
t1098 = -t1167 * t1499 + t1168 * t1503;
t1198 = t1296 * t1508 + t1297 * t1511;
t1058 = t1098 * t1500 - t1198 * t1504;
t1059 = t1098 * t1504 + t1198 * t1500;
t1575 = t1058 * t1513 + t1059 * t1510;
t1070 = t1103 * t1500 - t1240 * t1504;
t1071 = t1103 * t1504 + t1240 * t1500;
t1574 = t1070 * t1513 + t1071 * t1510;
t1073 = t1106 * t1500 - t1253 * t1504;
t1074 = t1106 * t1504 + t1253 * t1500;
t1573 = t1073 * t1513 + t1074 * t1510;
t1381 = -t1429 + t1443;
t1265 = -t1381 * t1508 + t1665;
t1187 = t1265 * t1509 - t1298 * t1512;
t1189 = t1265 * t1512 + t1298 * t1509;
t1113 = -t1187 * t1499 + t1189 * t1503;
t1263 = t1381 * t1511 + t1667;
t1079 = t1113 * t1500 - t1263 * t1504;
t1081 = t1113 * t1504 + t1263 * t1500;
t1572 = t1079 * t1513 + t1081 * t1510;
t1380 = t1428 - t1443;
t1266 = t1380 * t1511 - t1629;
t1294 = -t1341 - t1383;
t1188 = t1266 * t1509 + t1294 * t1512;
t1190 = t1266 * t1512 - t1294 * t1509;
t1114 = -t1188 * t1499 + t1190 * t1503;
t1264 = t1380 * t1508 + t1628;
t1080 = t1114 * t1500 - t1264 * t1504;
t1082 = t1114 * t1504 + t1264 * t1500;
t1571 = t1080 * t1513 + t1082 * t1510;
t1286 = -t1341 * t1508 + t1430 * t1624;
t1223 = t1286 * t1509 + t1605;
t1225 = t1286 * t1512 - t1606;
t1150 = -t1223 * t1499 + t1225 * t1503;
t1285 = -t1511 * t1341 - t1430 * t1625;
t1118 = t1150 * t1500 + t1285 * t1504;
t1120 = t1150 * t1504 - t1285 * t1500;
t1570 = t1118 * t1513 + t1120 * t1510;
t1288 = t1342 * t1511 - t1432 * t1625;
t1224 = t1288 * t1509 - t1605;
t1226 = t1288 * t1512 + t1606;
t1151 = -t1224 * t1499 + t1226 * t1503;
t1287 = t1342 * t1508 + t1432 * t1624;
t1119 = t1151 * t1500 - t1287 * t1504;
t1121 = t1151 * t1504 + t1287 * t1500;
t1569 = t1119 * t1513 + t1121 * t1510;
t1139 = t1174 * t1500 - t1311 * t1504;
t1140 = t1174 * t1504 + t1311 * t1500;
t1568 = t1139 * t1513 + t1140 * t1510;
t1319 = (-t1430 * t1511 + t1432 * t1508) * t1444;
t1269 = t1319 * t1509 - t1393 * t1512;
t1270 = t1319 * t1512 + t1393 * t1509;
t1176 = -t1269 * t1499 + t1270 * t1503;
t1317 = (-t1430 * t1508 - t1432 * t1511) * t1444;
t1141 = t1176 * t1500 - t1317 * t1504;
t1142 = t1176 * t1504 + t1317 * t1500;
t1567 = t1141 * t1513 + t1142 * t1510;
t1206 = t1245 * t1500 - t1377 * t1504;
t1207 = t1245 * t1504 + t1377 * t1500;
t1566 = t1206 * t1513 + t1207 * t1510;
t1211 = t1239 * t1500 - t1407 * t1504;
t1212 = t1239 * t1504 + t1407 * t1500;
t1565 = t1211 * t1513 + t1212 * t1510;
t1332 = -t1407 * t1509 + t1409 * t1512;
t1334 = -t1407 * t1512 - t1409 * t1509;
t1246 = -t1332 * t1499 + t1334 * t1503;
t1413 = t1446 - t1445;
t1214 = t1246 * t1500 - t1413 * t1504;
t1215 = t1246 * t1504 + t1413 * t1500;
t1564 = t1214 * t1513 + t1215 * t1510;
t1227 = t1279 * t1500 - t1409 * t1504;
t1228 = t1279 * t1504 + t1409 * t1500;
t1561 = t1227 * t1513 + t1228 * t1510;
t1368 = qJD(5) * t1623 + t1408 * t1512;
t1369 = qJD(5) * t1622 - t1408 * t1509;
t1282 = -t1368 * t1499 + t1369 * t1503;
t1229 = t1282 * t1500 + t1603;
t1231 = t1282 * t1504 - t1604;
t1560 = t1229 * t1513 + t1231 * t1510;
t1370 = qJD(5) * t1619 + t1410 * t1509;
t1371 = -qJD(5) * t1620 + t1410 * t1512;
t1283 = -t1370 * t1499 + t1371 * t1503;
t1230 = t1283 * t1500 - t1603;
t1232 = t1283 * t1504 + t1604;
t1559 = t1230 * t1513 + t1232 * t1510;
t1437 = t1445 - t1642;
t1358 = t1437 * t1509 + t1626;
t1361 = t1437 * t1512 - t1627;
t1277 = -t1358 * t1499 + t1361 * t1503;
t1249 = t1277 * t1500 + t1447 * t1504;
t1251 = t1277 * t1504 - t1447 * t1500;
t1558 = t1249 * t1513 + t1251 * t1510;
t1438 = -t1446 + t1642;
t1359 = t1438 * t1512 + t1666;
t1362 = -t1438 * t1509 + t1664;
t1278 = -t1359 * t1499 + t1362 * t1503;
t1250 = t1278 * t1500 - t1448 * t1504;
t1252 = t1278 * t1504 + t1448 * t1500;
t1557 = t1250 * t1513 + t1252 * t1510;
t1173 = t1267 * t1503 - t1268 * t1499;
t1385 = (-t1619 - t1623) * qJD(5);
t1386 = (t1620 - t1622) * qJD(5);
t1316 = -t1385 * t1499 + t1386 * t1503;
t1309 = -qJDD(5) * t1504 + t1316 * t1500;
t1310 = qJDD(5) * t1500 + t1316 * t1504;
t1556 = t1309 * t1513 + t1310 * t1510;
t1324 = t1391 * t1513 - t1510 * t1392;
t1415 = t1463 * t1500 + t1468 * t1504;
t1417 = t1463 * t1504 - t1468 * t1500;
t1555 = t1415 * t1513 + t1417 * t1510;
t1464 = t1484 - t1482;
t1469 = -t1488 + t1618;
t1416 = t1464 * t1500 - t1469 * t1504;
t1418 = t1464 * t1504 + t1469 * t1500;
t1554 = t1416 * t1513 + t1418 * t1510;
t1458 = t1499 * t1646;
t1422 = t1458 * t1500 - t1483 * t1504;
t1425 = t1458 * t1504 + t1483 * t1500;
t1553 = t1422 * t1513 + t1425 * t1510;
t1451 = t1545 * t1506;
t1549 = t1451 * t1505 + t1470 * t1501;
t1548 = t1451 * t1501 - t1470 * t1505;
t1543 = pkin(4) * t1181 + t1602;
t1542 = pkin(4) * t1169 + t1601;
t1541 = -pkin(3) * t1483 + qJ(4) * t1458 + t1302;
t1540 = pkin(4) * t1328 - t1165;
t1072 = -pkin(4) * t1289 + pkin(8) * t1087;
t1539 = -pkin(3) * t1289 - pkin(8) * t1634 + qJ(4) * t1035 + t1503 * t1072;
t1538 = pkin(4) * t1158 + t1587;
t976 = t1010 * t1503 + t1011 * t1499;
t935 = -qJ(4) * t976 - t1499 * t953 + t1503 * t971;
t946 = -pkin(3) * t976 - t1583;
t922 = -pkin(2) * t976 + qJ(3) * t962 + t1500 * t935 + t1504 * t946;
t925 = -qJ(3) * t961 - t1500 * t946 + t1504 * t935;
t939 = -t1510 * t961 + t1513 * t962;
t1537 = pkin(7) * t939 + t1510 * t925 + t1513 * t922;
t1034 = t1087 * t1499 + t1633;
t1000 = -pkin(3) * t1034 - t1640;
t979 = -pkin(8) * t1633 - qJ(4) * t1034 - t1072 * t1499;
t943 = -pkin(2) * t1034 + qJ(3) * t1024 + t1000 * t1504 + t1500 * t979;
t950 = -qJ(3) * t1023 - t1000 * t1500 + t1504 * t979;
t978 = -t1510 * t1023 + t1024 * t1513;
t1536 = pkin(7) * t978 + t1510 * t950 + t1513 * t943;
t1001 = -t1510 * t1051 + t1052 * t1513;
t1084 = t1158 * t1503 + t1159 * t1499;
t954 = -qJ(4) * t1084 - t1499 * t987 + t1503 * t994;
t980 = -pkin(3) * t1084 - t1538;
t938 = -pkin(2) * t1084 + qJ(3) * t1052 + t1500 * t954 + t1504 * t980;
t940 = -qJ(3) * t1051 - t1500 * t980 + t1504 * t954;
t1535 = pkin(7) * t1001 + t1510 * t940 + t1513 * t938;
t1016 = -t1510 * t1070 + t1071 * t1513;
t1102 = t1169 * t1503 + t1170 * t1499;
t1015 = -pkin(3) * t1102 - t1542;
t972 = -qJ(4) * t1102 - t1003 * t1499 + t1009 * t1503;
t944 = -pkin(2) * t1102 + qJ(3) * t1071 + t1015 * t1504 + t1500 * t972;
t947 = -qJ(3) * t1070 - t1015 * t1500 + t1504 * t972;
t1534 = pkin(7) * t1016 + t1510 * t947 + t1513 * t944;
t1018 = -t1510 * t1073 + t1074 * t1513;
t1105 = t1181 * t1503 + t1182 * t1499;
t1017 = -pkin(3) * t1105 - t1543;
t973 = -qJ(4) * t1105 - t1005 * t1499 + t1013 * t1503;
t945 = -pkin(2) * t1105 + qJ(3) * t1074 + t1017 * t1504 + t1500 * t973;
t948 = -qJ(3) * t1073 - t1017 * t1500 + t1504 * t973;
t1533 = pkin(7) * t1018 + t1510 * t948 + t1513 * t945;
t1130 = -t1510 * t1206 + t1207 * t1513;
t1243 = t1331 * t1503 + t1333 * t1499;
t1007 = -qJ(4) * t1243 - t1068 * t1499 + t1078 * t1503;
t1193 = -pkin(3) * t1243 - t1639;
t985 = -pkin(2) * t1243 + qJ(3) * t1207 + t1007 * t1500 + t1193 * t1504;
t988 = -qJ(3) * t1206 + t1007 * t1504 - t1193 * t1500;
t1532 = pkin(7) * t1130 + t1510 * t988 + t1513 * t985;
t1238 = t1328 * t1503 + t1329 * t1499;
t1090 = -qJ(4) * t1238 - t1194 * t1499 + t1216 * t1503;
t1107 = -pkin(3) * t1238 - t1540;
t1014 = -pkin(2) * t1238 + qJ(3) * t1212 + t1090 * t1500 + t1107 * t1504;
t1022 = -qJ(3) * t1211 + t1090 * t1504 - t1107 * t1500;
t1133 = -t1510 * t1211 + t1212 * t1513;
t1531 = pkin(7) * t1133 + t1014 * t1513 + t1022 * t1510;
t1276 = t1360 * t1503 + t1363 * t1499;
t1108 = -qJ(4) * t1276 - t1204 * t1499 + t1222 * t1503;
t1115 = -pkin(3) * t1276 - t1582;
t1025 = -pkin(2) * t1276 + qJ(3) * t1228 + t1108 * t1500 + t1115 * t1504;
t1037 = -qJ(3) * t1227 + t1108 * t1504 - t1115 * t1500;
t1152 = -t1510 * t1227 + t1228 * t1513;
t1530 = pkin(7) * t1152 + t1025 * t1513 + t1037 * t1510;
t1036 = qJ(3) * t1140 - (-pkin(3) * t1504 - qJ(4) * t1500 - pkin(2)) * t1173;
t1050 = -qJ(3) * t1139 - (pkin(3) * t1500 - qJ(4) * t1504) * t1173;
t1061 = -t1510 * t1139 + t1140 * t1513;
t1529 = pkin(7) * t1061 + t1036 * t1513 + t1050 * t1510;
t1160 = qJ(3) * t1417 + t1173 * t1500;
t1161 = -qJ(3) * t1415 + t1173 * t1504;
t1344 = -t1510 * t1415 + t1417 * t1513;
t1528 = pkin(7) * t1344 + t1160 * t1513 + t1161 * t1510;
t1177 = -qJ(3) * t1426 + t1267 * t1504 + t1302 * t1500;
t1179 = -qJ(3) * t1424 - t1267 * t1500 + t1302 * t1504;
t1527 = -pkin(7) * t1366 + t1177 * t1513 + t1179 * t1510;
t1178 = qJ(3) * t1425 + t1268 * t1504 + t1303 * t1500;
t1180 = -qJ(3) * t1422 - t1268 * t1500 + t1303 * t1504;
t1365 = -t1510 * t1422 + t1425 * t1513;
t1526 = pkin(7) * t1365 + t1178 * t1513 + t1180 * t1510;
t1525 = -pkin(7) * t1547 - t1662;
t1524 = pkin(7) * t1420 + t1663;
t1205 = pkin(2) * t1435 + qJ(3) * t1594;
t1523 = pkin(7) * t1671 + qJ(3) * t1614 + t1205 * t1513;
t1473 = t1501 * t1608;
t1452 = t1470 * t1506;
t1450 = t1470 * t1502;
t1449 = t1545 * t1502;
t1412 = -t1452 * t1501 - t1505 * t1545;
t1411 = t1452 * t1505 - t1501 * t1545;
t1403 = t1420 * t1506;
t1400 = t1420 * t1502;
t1355 = t1553 * t1506;
t1352 = t1553 * t1502;
t1351 = -t1612 + (t1449 * t1502 + t1451 * t1506) * pkin(7);
t1350 = -t1613 + (-t1450 * t1502 - t1452 * t1506) * pkin(7);
t1349 = -t1484 * t1502 - t1656;
t1348 = -t1495 * t1608 + t1656;
t1347 = t1484 * t1506 - t1658;
t1346 = t1486 * t1495 + t1658;
t1345 = -t1510 * t1416 + t1418 * t1513;
t1340 = t1403 * t1501 - t1505 * t1547;
t1339 = -t1403 * t1505 - t1501 * t1547;
t1338 = t1555 * t1506;
t1337 = t1555 * t1502;
t1327 = -0.2e1 * t1502 * t1599 + t1506 * t1554;
t1326 = t1472 * t1506 + t1502 * t1554;
t1320 = t1325 * t1506;
t1318 = t1325 * t1502;
t1315 = t1385 * t1503 + t1386 * t1499;
t1307 = -pkin(1) * t1450 + t1502 * t1391 + t1506 * t1580;
t1306 = pkin(1) * t1449 + t1502 * t1392 + t1506 * t1581;
t1305 = pkin(1) * t1452 - t1506 * t1391 + t1502 * t1580;
t1304 = -pkin(1) * t1451 - t1506 * t1392 + t1502 * t1581;
t1301 = -pkin(2) * t1465 - t1314;
t1300 = pkin(2) * t1466 - t1313;
t1291 = -t1324 * t1506 + t1502 * t1436;
t1290 = -t1324 * t1502 - t1506 * t1436;
t1281 = t1370 * t1503 + t1371 * t1499;
t1280 = t1368 * t1503 + t1369 * t1499;
t1275 = t1359 * t1503 + t1362 * t1499;
t1274 = t1358 * t1503 + t1361 * t1499;
t1272 = -t1355 * t1501 + t1365 * t1505;
t1271 = t1355 * t1505 + t1365 * t1501;
t1256 = pkin(2) * t1424 + t1600;
t1255 = pkin(2) * t1422 + t1541;
t1244 = t1332 * t1503 + t1334 * t1499;
t1234 = (t1502 * t1651 + t1506 * t1650) * pkin(7) + t1662;
t1233 = (t1400 * t1502 + t1403 * t1506) * pkin(7) + t1663;
t1210 = pkin(1) * t1291 + t1502 * t1637;
t1209 = -pkin(1) * t1290 + t1506 * t1637;
t1208 = -t1510 * t1309 + t1310 * t1513;
t1191 = (-t1290 * t1502 - t1291 * t1506) * pkin(7);
t1186 = pkin(1) * t1651 - t1502 * t1301 + t1506 * t1524;
t1185 = pkin(1) * t1400 - t1502 * t1300 + t1506 * t1525;
t1184 = -pkin(1) * t1650 + t1506 * t1301 + t1502 * t1524;
t1183 = -pkin(1) * t1403 + t1506 * t1300 + t1502 * t1525;
t1175 = t1269 * t1503 + t1270 * t1499;
t1163 = -t1502 * t1315 + t1506 * t1556;
t1162 = t1506 * t1315 + t1502 * t1556;
t1157 = -t1510 * t1250 + t1252 * t1513;
t1156 = -t1510 * t1249 + t1251 * t1513;
t1155 = pkin(2) * t1415 + t1584;
t1154 = -t1510 * t1230 + t1232 * t1513;
t1153 = -t1510 * t1229 + t1231 * t1513;
t1149 = t1224 * t1503 + t1226 * t1499;
t1148 = t1223 * t1503 + t1225 * t1499;
t1136 = t1671 * t1506;
t1135 = t1671 * t1502;
t1134 = -t1510 * t1214 + t1215 * t1513;
t1132 = -t1137 * t1506 + t1502 * t1435;
t1131 = -t1137 * t1502 - t1506 * t1435;
t1129 = -t1502 * t1275 + t1506 * t1557;
t1128 = -t1502 * t1274 + t1506 * t1558;
t1127 = t1506 * t1275 + t1502 * t1557;
t1126 = t1506 * t1274 + t1502 * t1558;
t1125 = -t1502 * t1281 + t1506 * t1559;
t1124 = -t1502 * t1280 + t1506 * t1560;
t1123 = t1506 * t1281 + t1502 * t1559;
t1122 = t1506 * t1280 + t1502 * t1560;
t1117 = -t1502 * t1276 + t1506 * t1561;
t1116 = t1506 * t1276 + t1502 * t1561;
t1112 = t1188 * t1503 + t1190 * t1499;
t1111 = t1187 * t1503 + t1189 * t1499;
t1100 = -t1502 * t1244 + t1506 * t1564;
t1099 = t1506 * t1244 + t1502 * t1564;
t1097 = t1167 * t1503 + t1168 * t1499;
t1096 = -t1502 * t1238 + t1506 * t1565;
t1095 = t1506 * t1238 + t1502 * t1565;
t1089 = -t1502 * t1243 + t1506 * t1566;
t1088 = t1506 * t1243 + t1502 * t1566;
t1077 = -t1510 * t1178 + t1513 * t1180 + (-t1352 * t1502 - t1355 * t1506) * pkin(7);
t1076 = -t1510 * t1177 + t1513 * t1179 + (-t1502 * t1673 - t1506 * t1672) * pkin(7);
t1065 = pkin(2) * t1227 + t1585;
t1064 = -t1510 * t1141 + t1142 * t1513;
t1062 = pkin(2) * t1139 + t1610;
t1060 = -t1510 * t1160 + t1513 * t1161 + (-t1337 * t1502 - t1338 * t1506) * pkin(7);
t1057 = -pkin(1) * t1352 - t1502 * t1255 + t1506 * t1526;
t1056 = -pkin(1) * t1673 - t1502 * t1256 + t1506 * t1527;
t1055 = pkin(1) * t1355 + t1506 * t1255 + t1502 * t1526;
t1054 = pkin(1) * t1672 + t1506 * t1256 + t1502 * t1527;
t1053 = pkin(2) * t1211 + t1586;
t1049 = -t1510 * t1119 + t1121 * t1513;
t1048 = -t1510 * t1118 + t1120 * t1513;
t1047 = -t1502 * t1175 + t1506 * t1567;
t1046 = t1506 * t1175 + t1502 * t1567;
t1045 = t1173 * t1502 + t1506 * t1568;
t1044 = -t1173 * t1506 + t1502 * t1568;
t1043 = -pkin(1) * t1337 - t1502 * t1155 + t1506 * t1528;
t1042 = pkin(1) * t1338 + t1506 * t1155 + t1502 * t1528;
t1032 = qJ(3) * t1632 - t1510 * t1205 + (-t1131 * t1502 - t1132 * t1506) * pkin(7);
t1031 = -t1510 * t1080 + t1082 * t1513;
t1030 = -t1510 * t1079 + t1081 * t1513;
t1029 = -t1502 * t1149 + t1506 * t1569;
t1028 = -t1502 * t1148 + t1506 * t1570;
t1027 = t1506 * t1149 + t1502 * t1569;
t1026 = t1506 * t1148 + t1502 * t1570;
t1020 = -pkin(1) * t1131 + t1502 * t1641 + t1506 * t1523;
t1019 = pkin(1) * t1132 + t1502 * t1523 - t1506 * t1641;
t1006 = -t1510 * t1058 + t1059 * t1513;
t999 = -t1502 * t1112 + t1506 * t1571;
t998 = -t1502 * t1111 + t1506 * t1572;
t997 = t1506 * t1112 + t1502 * t1571;
t996 = t1506 * t1111 + t1502 * t1572;
t995 = pkin(2) * t1206 + t1588;
t992 = -t1502 * t1105 + t1506 * t1573;
t991 = t1506 * t1105 + t1502 * t1573;
t990 = -t1502 * t1102 + t1506 * t1574;
t989 = t1506 * t1102 + t1502 * t1574;
t984 = -t1502 * t1097 + t1506 * t1575;
t983 = t1506 * t1097 + t1502 * t1575;
t982 = -t1502 * t1084 + t1506 * t1576;
t981 = t1506 * t1084 + t1502 * t1576;
t974 = -t1510 * t1025 + t1513 * t1037 + (-t1116 * t1502 - t1117 * t1506) * pkin(7);
t970 = -t1502 * t1034 + t1506 * t1577;
t969 = t1506 * t1034 + t1502 * t1577;
t967 = pkin(2) * t1023 + t1539;
t966 = -t1510 * t1014 + t1513 * t1022 + (-t1095 * t1502 - t1096 * t1506) * pkin(7);
t965 = -pkin(1) * t1116 - t1502 * t1065 + t1506 * t1530;
t964 = pkin(1) * t1117 + t1506 * t1065 + t1502 * t1530;
t963 = -t1510 * t1036 + t1513 * t1050 + (-t1044 * t1502 - t1045 * t1506) * pkin(7);
t960 = pkin(2) * t1073 + t1589;
t959 = -pkin(1) * t1095 - t1502 * t1053 + t1506 * t1531;
t958 = pkin(1) * t1096 + t1506 * t1053 + t1502 * t1531;
t957 = pkin(2) * t1070 + t1590;
t956 = -pkin(1) * t1044 - t1502 * t1062 + t1506 * t1529;
t955 = pkin(1) * t1045 + t1506 * t1062 + t1502 * t1529;
t951 = -t1510 * t985 + t1513 * t988 + (-t1088 * t1502 - t1089 * t1506) * pkin(7);
t949 = pkin(2) * t1051 + t1591;
t942 = -pkin(1) * t1088 - t1502 * t995 + t1506 * t1532;
t941 = pkin(1) * t1089 + t1502 * t1532 + t1506 * t995;
t937 = -t1502 * t976 + t1506 * t1579;
t936 = t1502 * t1579 + t1506 * t976;
t934 = -t1510 * t945 + t1513 * t948 + (-t1502 * t991 - t1506 * t992) * pkin(7);
t933 = -t1510 * t944 + t1513 * t947 + (-t1502 * t989 - t1506 * t990) * pkin(7);
t932 = pkin(2) * t961 + t1592;
t931 = -pkin(1) * t991 - t1502 * t960 + t1506 * t1533;
t930 = pkin(1) * t992 + t1502 * t1533 + t1506 * t960;
t929 = -t1510 * t943 + t1513 * t950 + (-t1502 * t969 - t1506 * t970) * pkin(7);
t928 = -pkin(1) * t989 - t1502 * t957 + t1506 * t1534;
t927 = pkin(1) * t990 + t1502 * t1534 + t1506 * t957;
t926 = -t1510 * t938 + t1513 * t940 + (-t1502 * t981 - t1506 * t982) * pkin(7);
t924 = -pkin(1) * t969 - t1502 * t967 + t1506 * t1536;
t923 = pkin(1) * t970 + t1502 * t1536 + t1506 * t967;
t921 = -pkin(1) * t981 - t1502 * t949 + t1506 * t1535;
t920 = pkin(1) * t982 + t1502 * t1535 + t1506 * t949;
t919 = -t1510 * t922 + t1513 * t925 + (-t1502 * t936 - t1506 * t937) * pkin(7);
t918 = -pkin(1) * t936 - t1502 * t932 + t1506 * t1537;
t917 = pkin(1) * t937 + t1502 * t1537 + t1506 * t932;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1659, -t1657, -t1644, -qJ(1) * t1644, 0, 0, -t1548, 0, t1412, t1473, -qJ(1) * t1411 - t1307 * t1501 + t1350 * t1505, qJ(1) * t1549 - t1501 * t1306 + t1505 * t1351, -t1320 * t1501 + t1324 * t1505, t1505 * t1191 - t1501 * t1209 - qJ(1) * (t1291 * t1505 + t1325 * t1501), 0, 0, -t1661, 0, t1340, t1473, -qJ(1) * t1339 - t1185 * t1501 + t1233 * t1505, -qJ(1) * t1660 - t1501 * t1186 + t1505 * t1234, -t1136 * t1501 + t1137 * t1505, t1505 * t1032 - t1501 * t1020 - qJ(1) * (t1132 * t1505 + t1501 * t1671), -t1348 * t1501 - t1668, -t1327 * t1501 + t1345 * t1505, t1272, -t1349 * t1501 + t1668, t1677, 0, -qJ(1) * t1676 - t1501 * t1056 + t1505 * t1076, -qJ(1) * t1271 - t1057 * t1501 + t1077 * t1505, t1505 * t1060 - t1501 * t1043 - qJ(1) * (t1338 * t1505 + t1344 * t1501), t1505 * t963 - t1501 * t956 - qJ(1) * (t1045 * t1505 + t1061 * t1501), -t1125 * t1501 + t1154 * t1505, -t1100 * t1501 + t1134 * t1505, -t1129 * t1501 + t1157 * t1505, -t1124 * t1501 + t1153 * t1505, -t1128 * t1501 + t1156 * t1505, -t1163 * t1501 + t1208 * t1505, t1505 * t966 - t1501 * t959 - qJ(1) * (t1096 * t1505 + t1133 * t1501), t1505 * t974 - t1501 * t965 - qJ(1) * (t1117 * t1505 + t1152 * t1501), t1505 * t951 - t1501 * t942 - qJ(1) * (t1089 * t1505 + t1130 * t1501), t1505 * t929 - t1501 * t924 - qJ(1) * (t1501 * t978 + t1505 * t970), -t1029 * t1501 + t1049 * t1505, t1006 * t1505 - t1501 * t984, t1030 * t1505 - t1501 * t998, -t1028 * t1501 + t1048 * t1505, t1031 * t1505 - t1501 * t999, -t1047 * t1501 + t1064 * t1505, t1505 * t933 - t1501 * t928 - qJ(1) * (t1016 * t1501 + t1505 * t990), t1505 * t934 - t1501 * t931 - qJ(1) * (t1018 * t1501 + t1505 * t992), t1505 * t926 - t1501 * t921 - qJ(1) * (t1001 * t1501 + t1505 * t982), t1505 * t919 - t1501 * t918 - qJ(1) * (t1501 * t939 + t1505 * t937); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1657, -t1659, t1645, qJ(1) * t1645, 0, 0, t1549, 0, t1411, -t1598, qJ(1) * t1412 + t1307 * t1505 + t1350 * t1501, qJ(1) * t1548 + t1505 * t1306 + t1501 * t1351, t1320 * t1505 + t1324 * t1501, t1501 * t1191 + t1505 * t1209 + qJ(1) * (-t1291 * t1501 + t1325 * t1505), 0, 0, -t1660, 0, t1339, -t1598, qJ(1) * t1340 + t1185 * t1505 + t1233 * t1501, qJ(1) * t1661 + t1505 * t1186 + t1501 * t1234, t1136 * t1505 + t1137 * t1501, t1501 * t1032 + t1505 * t1020 + qJ(1) * (-t1132 * t1501 + t1505 * t1671), t1348 * t1505 - t1669, t1327 * t1505 + t1345 * t1501, t1271, t1349 * t1505 + t1669, -t1676, 0, -qJ(1) * t1677 + t1505 * t1056 + t1501 * t1076, qJ(1) * t1272 + t1057 * t1505 + t1077 * t1501, t1501 * t1060 + t1505 * t1043 + qJ(1) * (-t1338 * t1501 + t1344 * t1505), t1501 * t963 + t1505 * t956 + qJ(1) * (-t1045 * t1501 + t1061 * t1505), t1125 * t1505 + t1154 * t1501, t1100 * t1505 + t1134 * t1501, t1129 * t1505 + t1157 * t1501, t1124 * t1505 + t1153 * t1501, t1128 * t1505 + t1156 * t1501, t1163 * t1505 + t1208 * t1501, t1501 * t966 + t1505 * t959 + qJ(1) * (-t1096 * t1501 + t1133 * t1505), t1501 * t974 + t1505 * t965 + qJ(1) * (-t1117 * t1501 + t1152 * t1505), t1501 * t951 + t1505 * t942 + qJ(1) * (-t1089 * t1501 + t1130 * t1505), t1501 * t929 + t1505 * t924 + qJ(1) * (-t1501 * t970 + t1505 * t978), t1029 * t1505 + t1049 * t1501, t1006 * t1501 + t1505 * t984, t1030 * t1501 + t1505 * t998, t1028 * t1505 + t1048 * t1501, t1031 * t1501 + t1505 * t999, t1047 * t1505 + t1064 * t1501, t1501 * t933 + t1505 * t928 + qJ(1) * (t1016 * t1505 - t1501 * t990), t1501 * t934 + t1505 * t931 + qJ(1) * (t1018 * t1505 - t1501 * t992), t1501 * t926 + t1505 * t921 + qJ(1) * (t1001 * t1505 - t1501 * t982), t1501 * t919 + t1505 * t918 + qJ(1) * (-t1501 * t937 + t1505 * t939); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1597, t1609, 0, 0, 0, 0, t1449, 0, t1450, t1486, t1305, t1304, t1318, t1210, 0, 0, t1651, 0, -t1400, t1486, t1183, t1184, t1135, t1019, t1346, t1326, t1352, t1347, -t1673, 0, t1054, t1055, t1042, t955, t1123, t1099, t1127, t1122, t1126, t1162, t958, t964, t941, t923, t1027, t983, t996, t1026, t997, t1046, t927, t930, t920, t917; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1636, -t1597, 0, 0, 0, t1470, 0, -t1545, 0, t1350, t1351, t1324, t1191, 0, 0, -t1420, 0, -t1547, 0, t1233, t1234, t1137, t1032, -t1373, t1345, t1365, t1373, t1366, 0, t1076, t1077, t1060, t963, t1154, t1134, t1157, t1153, t1156, t1208, t966, t974, t951, t929, t1049, t1006, t1030, t1048, t1031, t1064, t933, t934, t926, t919; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1636, 0, -t1609, 0, 0, 0, t1451, 0, t1452, -t1608, t1307, t1306, t1320, t1209, 0, 0, t1650, 0, -t1403, -t1608, t1185, t1186, t1136, t1020, t1348, t1327, t1355, t1349, -t1672, 0, t1056, t1057, t1043, t956, t1125, t1100, t1129, t1124, t1128, t1163, t959, t965, t942, t924, t1029, t984, t998, t1028, t999, t1047, t928, t931, t921, t918; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1597, t1609, 0, 0, 0, 0, t1449, 0, t1450, t1486, t1305, t1304, t1318, t1210, 0, 0, t1651, 0, -t1400, t1486, t1183, t1184, t1135, t1019, t1346, t1326, t1352, t1347, -t1673, 0, t1054, t1055, t1042, t955, t1123, t1099, t1127, t1122, t1126, t1162, t958, t964, t941, t923, t1027, t983, t996, t1026, t997, t1046, t927, t930, t920, t917; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1643, 0, 0, -t1436, t1391, 0, 0, 0, t1466, 0, -t1465, 0, t1578, t1390, t1219, qJ(3) * t1219, t1434, t1418, t1425, -t1434, t1426, 0, t1179, t1180, t1161, t1050, t1232, t1215, t1252, t1231, t1251, t1310, t1022, t1037, t988, t950, t1121, t1059, t1081, t1120, t1082, t1142, t947, t948, t940, t925; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1643, 0, qJDD(2), 0, t1436, 0, t1392, 0, 0, 0, t1465, 0, t1466, 0, -t1390, t1578, t1594, t1205, t1433, t1416, t1422, -t1433, -t1424, 0, t1177, t1178, t1160, t1036, t1230, t1214, t1250, t1229, t1249, t1309, t1014, t1025, t985, t943, t1119, t1058, t1079, t1118, t1080, t1141, t944, t945, t938, t922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1391, -t1392, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t1300, t1301, 0, -t1641, t1482, t1472, 0, t1484, 0, 0, t1256, t1255, t1155, t1062, t1281, t1244, t1275, t1280, t1274, t1315, t1053, t1065, t995, t967, t1149, t1097, t1111, t1148, t1112, t1175, t957, t960, t949, t932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1643, 0, 0, -t1435, t1313, 0, t1599, t1464, t1458, -t1599, t1459, 0, t1302, t1303, t1173, qJ(4) * t1173, t1283, t1246, t1278, t1282, t1277, t1316, t1090, t1108, t1007, t979, t1151, t1098, t1113, t1150, t1114, t1176, t972, t973, t954, t935; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1643, 0, qJDD(2), 0, t1435, 0, t1314, 0, t1474, -t1469, -t1483, -t1474, -t1485, 0, t1267, t1268, 0, pkin(3) * t1173, -t1414, -t1413, -t1448, t1414, t1447, -qJDD(5), t1107, t1115, t1193, t1000, -t1287, -t1198, -t1263, t1285, -t1264, -t1317, t1015, t1017, t980, t946; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1313, -t1314, 0, 0, t1482, t1472, 0, t1484, 0, 0, t1600, t1541, t1584, t1610, t1281, t1244, t1275, t1280, t1274, t1315, t1586, t1585, t1588, t1539, t1149, t1097, t1111, t1148, t1112, t1175, t1590, t1589, t1591, t1592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1483, t1485, t1474, 0, t1488, 0, 0, t1311, t1267, 0, t1371, t1334, t1362, t1369, t1361, t1386, t1216, t1222, t1078, -pkin(8) * t1086, t1226, t1168, t1189, t1225, t1190, t1270, t1009, t1013, t994, t971; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1483, -t1618, t1485, -t1474, 0, -t1311, 0, t1268, 0, t1370, t1332, t1359, t1368, t1358, t1385, t1194, t1204, t1068, t1072, t1224, t1167, t1187, t1223, t1188, t1269, t1003, t1005, t987, t953; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1474, t1469, t1483, t1474, t1485, 0, -t1267, -t1268, 0, 0, t1414, t1413, t1448, -t1414, -t1447, qJDD(5), t1540, t1582, t1639, t1640, t1287, t1198, t1263, -t1285, t1264, t1317, t1542, t1543, t1538, t1583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1410, -t1407, t1647, t1442, t1437, -t1442, 0, t1289, t1165, 0, t1288, t1200, t1265, t1286, t1266, t1319, t1109, t1110, t1021, -pkin(9) * t1040; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1621, t1409, t1438, t1408, t1405, -t1621, -t1289, 0, t1166, 0, -t1378, -t1376, -t1298, t1378, t1294, -t1393, t1063, t1066, -pkin(5) * t1197, -pkin(5) * t1040; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1414, t1413, t1448, -t1414, -t1447, qJDD(5), -t1165, -t1166, 0, 0, t1287, t1198, t1263, -t1285, t1264, t1317, t1601, t1602, t1587, t1611; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1342, t1296, t1649, t1382, t1380, -t1382, 0, t1146, t1093, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1383, t1297, t1381, t1341, t1322, -t1383, -t1146, 0, t1094, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1378, t1376, t1298, -t1378, -t1294, t1393, -t1093, -t1094, 0, 0;];
m_new_reg  = t1;
