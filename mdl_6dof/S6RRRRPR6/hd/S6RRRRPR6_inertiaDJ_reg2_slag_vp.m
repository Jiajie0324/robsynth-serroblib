% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 22:25
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPR6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPR6_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 22:23:12
% EndTime: 2019-03-09 22:23:30
% DurationCPUTime: 7.12s
% Computational Cost: add. (15238->452), mult. (36479->814), div. (0->0), fcn. (34002->10), ass. (0->190)
t256 = sin(qJ(4));
t215 = qJD(4) * t256;
t267 = qJD(3) * t256 + t215;
t258 = cos(qJ(4));
t212 = t258 * qJD(4);
t266 = t258 * qJD(3) + t212;
t149 = sin(qJ(3));
t150 = sin(qJ(2));
t152 = cos(qJ(2));
t239 = t152 * qJD(2);
t151 = cos(qJ(3));
t242 = qJD(3) * t151;
t265 = t149 * t239 + t150 * t242;
t264 = -t267 * t149 + t266 * t151;
t259 = -pkin(9) - pkin(8);
t203 = t259 * t256;
t186 = t149 * t203;
t204 = t259 * t258;
t231 = t258 * t151;
t91 = -t259 * t231 + t186;
t67 = (t151 * t204 - t186) * qJD(3) - t91 * qJD(4);
t227 = t256 * t151;
t118 = t258 * t149 + t227;
t106 = t118 * t150;
t117 = t256 * t149 - t231;
t144 = t149 ^ 2;
t146 = t151 ^ 2;
t245 = t144 - t146;
t210 = qJD(3) * t245;
t145 = t150 ^ 2;
t209 = (-t152 ^ 2 + t145) * qJD(2);
t255 = pkin(2) * t152;
t195 = -t150 * pkin(8) - t255;
t183 = -pkin(1) + t195;
t116 = t151 * t183;
t142 = t150 * qJD(2);
t241 = qJD(3) * t152;
t224 = t149 * t241;
t179 = t151 * t142 + t224;
t194 = pkin(2) * t150 - pkin(8) * t152;
t182 = t194 * t149;
t70 = t179 * pkin(7) - qJD(2) * t182 - qJD(3) * t116;
t188 = t149 * t204;
t172 = -t259 * t227 - t188;
t66 = -(t151 * t203 + t188) * qJD(3) + t172 * qJD(4);
t257 = cos(qJ(6));
t254 = t149 * pkin(7);
t253 = t151 * pkin(2);
t251 = sin(pkin(11));
t252 = cos(pkin(11));
t107 = t117 * t150;
t232 = -pkin(3) - t254;
t249 = t150 * t151;
t86 = -pkin(9) * t249 + t232 * t152 + t116;
t248 = t151 * t152;
t136 = pkin(7) * t248;
t100 = t149 * t183 + t136;
t250 = t149 * t150;
t89 = -pkin(9) * t250 + t100;
t60 = -t256 * t89 + t258 * t86;
t43 = -t152 * pkin(4) + t107 * qJ(5) + t60;
t61 = t256 * t86 + t258 * t89;
t49 = -qJ(5) * t106 + t61;
t31 = t251 * t43 + t252 * t49;
t164 = -t118 * qJ(5) - t172;
t165 = -t117 * qJ(5) + t91;
t46 = t251 * t164 + t252 * t165;
t119 = pkin(3) * t250 + t150 * pkin(7);
t243 = qJD(3) * t149;
t148 = sin(qJ(6));
t240 = qJD(6) * t148;
t238 = -0.2e1 * pkin(1) * qJD(2);
t237 = -0.2e1 * pkin(2) * qJD(3);
t196 = t256 * t252;
t104 = (-t251 * t258 - t196) * qJD(4) * pkin(3);
t233 = t256 * pkin(3);
t184 = t251 * t233;
t207 = pkin(3) * t212;
t105 = -qJD(4) * t184 + t252 * t207;
t234 = t258 * pkin(3);
t138 = t234 + pkin(4);
t108 = t252 * t138 - t184;
t173 = pkin(5) + t108;
t167 = t257 * t173;
t236 = -qJD(6) * t167 - t148 * t104 - t257 * t105;
t235 = t152 * t254;
t141 = pkin(3) * t243;
t140 = pkin(7) * t239;
t94 = pkin(3) * t265 + t140;
t139 = -t151 * pkin(3) - pkin(2);
t110 = pkin(3) * t196 + t251 * t138;
t230 = t257 * t110;
t229 = t252 * pkin(4);
t226 = t251 * pkin(4);
t222 = t151 * t241;
t221 = t149 * t242;
t220 = t150 * t239;
t219 = t151 * t239;
t218 = qJD(2) * t258;
t217 = qJD(2) * t256;
t214 = qJD(6) * t257;
t211 = t257 * t104 - t148 * t105;
t208 = 0.2e1 * t220;
t206 = pkin(3) * t215;
t205 = t266 * t149 + t267 * t151;
t202 = t148 * t226;
t201 = t150 * t219;
t200 = t145 * t221;
t199 = t152 * t218;
t198 = t152 * t217;
t87 = t106 * pkin(4) + t119;
t197 = t229 + pkin(5);
t64 = t149 * t198 - t151 * t199 + (qJD(3) + qJD(4)) * t106;
t65 = t149 * t199 + t150 * t264 + t198 * t151;
t193 = t251 * t64 - t252 * t65;
t30 = -t251 * t49 + t252 * t43;
t192 = t252 * t106 - t251 * t107;
t191 = t252 * t117 + t251 * t118;
t99 = t116 - t235;
t190 = -t100 * t149 - t151 * t99;
t50 = t65 * pkin(4) + t94;
t185 = t257 * t226;
t103 = t117 * pkin(4) + t139;
t160 = (-t136 + (-t259 * t150 + pkin(1) + t255) * t149) * qJD(3) + (t259 * t248 + (-t232 + t253) * t150) * qJD(2);
t162 = -pkin(9) * t265 - t70;
t161 = t258 * t160 - t256 * t162;
t29 = -qJD(4) * t61 + t161;
t14 = pkin(4) * t142 + t64 * qJ(5) + t107 * qJD(5) + t29;
t28 = -t256 * t160 - t258 * t162 - t86 * t212 + t89 * t215;
t17 = -t65 * qJ(5) - t106 * qJD(5) - t28;
t9 = t251 * t14 + t252 * t17;
t163 = t193 * pkin(10) + t9;
t35 = -t251 * t65 - t252 * t64;
t8 = t252 * t14 - t251 * t17;
t166 = pkin(5) * t142 - t35 * pkin(10) + t8;
t73 = -t251 * t106 - t252 * t107;
t21 = -t152 * pkin(5) - t73 * pkin(10) + t30;
t22 = -t192 * pkin(10) + t31;
t1 = -t148 * t166 - t257 * t163 - t21 * t214 + t22 * t240;
t11 = t148 * t21 + t257 * t22;
t78 = t205 * pkin(4) + t141;
t181 = t257 * t197;
t177 = t257 * t192;
t176 = t257 * t191;
t174 = t252 * t205 + t251 * t264;
t40 = -t148 * t192 + t257 * t73;
t85 = -t251 * t117 + t252 * t118;
t53 = -t148 * t191 + t257 * t85;
t71 = -t100 * qJD(3) + (pkin(7) * t250 + t151 * t194) * qJD(2);
t168 = t190 * qJD(3) - t149 * t71 - t151 * t70;
t111 = t148 * t197 + t185;
t77 = t148 * t173 + t230;
t2 = -t11 * qJD(6) - t148 * t163 + t257 * t166;
t45 = t252 * t164 - t251 * t165;
t159 = -t205 * qJ(5) - t117 * qJD(5) - t66;
t158 = -t85 * pkin(10) + t45;
t157 = t148 * t158;
t156 = t257 * t158;
t155 = -qJ(5) * t264 - t118 * qJD(5) + t67;
t26 = t251 * t155 + t252 * t159;
t25 = t252 * t155 - t251 * t159;
t59 = -t251 * t205 + t252 * t264;
t154 = -t59 * pkin(10) + t25;
t153 = -t174 * pkin(10) + t26;
t128 = -0.2e1 * t220;
t120 = qJD(6) * t181;
t109 = -t202 + t181;
t102 = t111 * qJD(6);
t101 = qJD(6) * t202 - t120;
t92 = -t149 * t219 + t150 * t210;
t76 = -t148 * t110 + t167;
t68 = t191 * pkin(5) + t103;
t52 = t148 * t85 + t176;
t51 = t192 * pkin(5) + t87;
t48 = -t77 * qJD(6) + t211;
t47 = t110 * t240 + t236;
t39 = t148 * t73 + t177;
t38 = t174 * pkin(5) + t78;
t37 = -t191 * pkin(10) + t46;
t27 = -t193 * pkin(5) + t50;
t24 = t53 * qJD(6) + t148 * t59 + t257 * t174;
t23 = qJD(6) * t176 + t148 * t174 + t85 * t240 - t257 * t59;
t19 = t257 * t37 + t157;
t18 = -t148 * t37 + t156;
t13 = t40 * qJD(6) + t148 * t35 - t257 * t193;
t12 = qJD(6) * t177 - t148 * t193 + t73 * t240 - t257 * t35;
t10 = -t148 * t22 + t257 * t21;
t4 = -qJD(6) * t157 - t148 * t153 + t257 * t154 - t37 * t214;
t3 = -qJD(6) * t156 - t148 * t154 - t257 * t153 + t37 * t240;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, -0.2e1 * t209, 0, t128, 0, 0, t150 * t238, t152 * t238, 0, 0, 0.2e1 * t146 * t220 - 0.2e1 * t200, 0.2e1 * t145 * t210 - 0.4e1 * t149 * t201, 0.2e1 * t150 * t224 + 0.2e1 * t151 * t209, 0.2e1 * t144 * t220 + 0.2e1 * t200, -0.2e1 * t149 * t209 + 0.2e1 * t150 * t222, t128, 0.2e1 * t99 * t142 - 0.2e1 * t152 * t71 + 0.2e1 * (t145 * t242 + t149 * t208) * pkin(7), -0.2e1 * t100 * t142 - 0.2e1 * t152 * t70 + 0.2e1 * (-t145 * t243 + 0.2e1 * t201) * pkin(7), 0.2e1 * t190 * t239 + 0.2e1 * (t149 * t70 - t151 * t71 + (-t100 * t151 + t149 * t99) * qJD(3)) * t150, 0.2e1 * pkin(7) ^ 2 * t220 - 0.2e1 * t100 * t70 + 0.2e1 * t99 * t71, 0.2e1 * t107 * t64, 0.2e1 * t106 * t64 + 0.2e1 * t107 * t65, -0.2e1 * t107 * t142 + 0.2e1 * t152 * t64, 0.2e1 * t106 * t65, -0.2e1 * t106 * t142 + 0.2e1 * t152 * t65, t128, 0.2e1 * t94 * t106 + 0.2e1 * t119 * t65 + 0.2e1 * t60 * t142 - 0.2e1 * t152 * t29, -0.2e1 * t94 * t107 - 0.2e1 * t119 * t64 - 0.2e1 * t61 * t142 - 0.2e1 * t152 * t28, 0.2e1 * t106 * t28 + 0.2e1 * t107 * t29 + 0.2e1 * t60 * t64 - 0.2e1 * t61 * t65, 0.2e1 * t119 * t94 - 0.2e1 * t28 * t61 + 0.2e1 * t29 * t60, 0.2e1 * t73 * t35, -0.2e1 * t192 * t35 + 0.2e1 * t193 * t73, 0.2e1 * t73 * t142 - 0.2e1 * t152 * t35, -0.2e1 * t192 * t193, -0.2e1 * t192 * t142 - 0.2e1 * t152 * t193, t128, 0.2e1 * t30 * t142 - 0.2e1 * t8 * t152 + 0.2e1 * t192 * t50 - 0.2e1 * t193 * t87, -0.2e1 * t31 * t142 + 0.2e1 * t152 * t9 + 0.2e1 * t87 * t35 + 0.2e1 * t50 * t73, -0.2e1 * t192 * t9 + 0.2e1 * t193 * t31 - 0.2e1 * t30 * t35 - 0.2e1 * t8 * t73, 0.2e1 * t30 * t8 + 0.2e1 * t31 * t9 + 0.2e1 * t50 * t87, -0.2e1 * t40 * t12, 0.2e1 * t12 * t39 - 0.2e1 * t13 * t40, 0.2e1 * t12 * t152 + 0.2e1 * t142 * t40, 0.2e1 * t39 * t13, 0.2e1 * t13 * t152 - 0.2e1 * t142 * t39, t128, 0.2e1 * t10 * t142 + 0.2e1 * t51 * t13 - 0.2e1 * t152 * t2 + 0.2e1 * t27 * t39, -0.2e1 * t1 * t152 - 0.2e1 * t11 * t142 - 0.2e1 * t51 * t12 + 0.2e1 * t27 * t40, 0.2e1 * t1 * t39 + 0.2e1 * t10 * t12 - 0.2e1 * t11 * t13 - 0.2e1 * t2 * t40, -0.2e1 * t1 * t11 + 0.2e1 * t10 * t2 + 0.2e1 * t27 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t239, 0, -t142, 0, -t140, pkin(7) * t142, 0, 0, -t92, -0.4e1 * t150 * t221 - t245 * t239, t149 * t142 - t222, t92, t179, 0 (pkin(8) * t248 + (-t253 + t254) * t150) * qJD(3) + (t195 * t149 - t136) * qJD(2) (pkin(7) * t249 + t182) * qJD(3) + (t195 * t151 + t235) * qJD(2), t168, -pkin(2) * t140 + pkin(8) * t168, -t107 * t264 - t64 * t118, -t106 * t264 + t107 * t205 + t64 * t117 - t118 * t65, t118 * t142 - t152 * t264, t106 * t205 + t65 * t117, -t117 * t142 + t152 * t205, 0, t106 * t141 + t94 * t117 + t119 * t205 + t139 * t65 - t142 * t172 - t67 * t152, -t107 * t141 + t94 * t118 + t119 * t264 - t139 * t64 - t91 * t142 - t66 * t152, t66 * t106 + t67 * t107 + t28 * t117 - t29 * t118 - t172 * t64 - t205 * t61 - t264 * t60 - t91 * t65, t119 * t141 + t139 * t94 - t172 * t29 - t28 * t91 + t60 * t67 - t61 * t66, t35 * t85 + t59 * t73, -t174 * t73 - t191 * t35 - t192 * t59 + t193 * t85, t85 * t142 - t152 * t59, t174 * t192 - t191 * t193, -t191 * t142 + t152 * t174, 0, -t103 * t193 + t45 * t142 - t25 * t152 + t174 * t87 + t191 * t50 + t192 * t78, t103 * t35 - t46 * t142 + t152 * t26 + t50 * t85 + t87 * t59 + t78 * t73, -t174 * t31 - t191 * t9 - t192 * t26 + t193 * t46 - t25 * t73 - t30 * t59 - t45 * t35 - t8 * t85, t103 * t50 + t25 * t30 + t26 * t31 + t45 * t8 + t46 * t9 + t78 * t87, -t12 * t53 - t23 * t40, t12 * t52 - t13 * t53 + t23 * t39 - t24 * t40, t142 * t53 + t152 * t23, t13 * t52 + t24 * t39, -t142 * t52 + t152 * t24, 0, t68 * t13 + t142 * t18 - t152 * t4 + t51 * t24 + t27 * t52 + t38 * t39, -t68 * t12 - t142 * t19 - t152 * t3 - t51 * t23 + t27 * t53 + t38 * t40, t1 * t52 + t10 * t23 - t11 * t24 + t12 * t18 - t13 * t19 - t2 * t53 + t3 * t39 - t4 * t40, -t1 * t19 + t10 * t4 - t11 * t3 + t18 * t2 + t27 * t68 + t38 * t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t221, -0.2e1 * t210, 0, -0.2e1 * t221, 0, 0, t149 * t237, t151 * t237, 0, 0, 0.2e1 * t118 * t264, -0.2e1 * t117 * t264 - 0.2e1 * t118 * t205, 0, 0.2e1 * t117 * t205, 0, 0, 0.2e1 * t117 * t141 + 0.2e1 * t139 * t205, 0.2e1 * t118 * t141 + 0.2e1 * t139 * t264, 0.2e1 * t66 * t117 - 0.2e1 * t67 * t118 + 0.2e1 * t172 * t264 - 0.2e1 * t205 * t91, 0.2e1 * t139 * t141 - 0.2e1 * t172 * t67 - 0.2e1 * t66 * t91, 0.2e1 * t85 * t59, -0.2e1 * t174 * t85 - 0.2e1 * t191 * t59, 0, 0.2e1 * t191 * t174, 0, 0, 0.2e1 * t103 * t174 + 0.2e1 * t191 * t78, 0.2e1 * t103 * t59 + 0.2e1 * t78 * t85, -0.2e1 * t174 * t46 - 0.2e1 * t191 * t26 - 0.2e1 * t25 * t85 - 0.2e1 * t45 * t59, 0.2e1 * t103 * t78 + 0.2e1 * t25 * t45 + 0.2e1 * t26 * t46, -0.2e1 * t53 * t23, 0.2e1 * t23 * t52 - 0.2e1 * t24 * t53, 0, 0.2e1 * t52 * t24, 0, 0, 0.2e1 * t24 * t68 + 0.2e1 * t38 * t52, -0.2e1 * t23 * t68 + 0.2e1 * t38 * t53, 0.2e1 * t18 * t23 - 0.2e1 * t19 * t24 + 0.2e1 * t3 * t52 - 0.2e1 * t4 * t53, 0.2e1 * t18 * t4 - 0.2e1 * t19 * t3 + 0.2e1 * t38 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150 * t243 + t219, 0, -t265, t142, t71, t70, 0, 0, 0, 0, -t64, 0, -t65, t142, pkin(3) * t150 * t218 + (t152 * t233 - t61) * qJD(4) + t161 (-t150 * t217 + t152 * t212) * pkin(3) + t28 (t258 * t64 - t256 * t65 + (-t258 * t106 - t256 * t107) * qJD(4)) * pkin(3) (t258 * t29 - t256 * t28 + (-t256 * t60 + t258 * t61) * qJD(4)) * pkin(3), 0, 0, t35, 0, t193, t142, -t104 * t152 + t108 * t142 + t8, t105 * t152 - t110 * t142 - t9, -t104 * t73 - t105 * t192 - t108 * t35 + t110 * t193, t104 * t30 + t105 * t31 + t108 * t8 + t110 * t9, 0, 0, -t12, 0, -t13, t142, t142 * t76 - t48 * t152 + t2, -t142 * t77 - t152 * t47 + t1, t12 * t76 - t13 * t77 + t39 * t47 - t40 * t48, -t1 * t77 + t10 * t48 - t11 * t47 + t2 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t242, 0, -t243, 0, -pkin(8) * t242, pkin(8) * t243, 0, 0, 0, 0, t264, 0, -t205, 0, t67, t66, -t117 * t207 + t118 * t206 - t205 * t233 - t234 * t264 (t258 * t67 - t256 * t66 + (t172 * t256 + t258 * t91) * qJD(4)) * pkin(3), 0, 0, t59, 0, -t174, 0, t25, -t26, -t104 * t85 - t105 * t191 - t108 * t59 - t110 * t174, t104 * t45 + t105 * t46 + t108 * t25 + t110 * t26, 0, 0, -t23, 0, -t24, 0, t4, t3, t23 * t76 - t24 * t77 + t47 * t52 - t48 * t53, t18 * t48 - t19 * t47 - t3 * t77 + t4 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t206, -0.2e1 * t207, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t104, -0.2e1 * t105, 0, 0.2e1 * t104 * t108 + 0.2e1 * t105 * t110, 0, 0, 0, 0, 0, 0, 0.2e1 * t48, 0.2e1 * t47, 0, -0.2e1 * t47 * t77 + 0.2e1 * t48 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64, 0, -t65, t142, t29, t28, 0, 0, 0, 0, t35, 0, t193, t142, t229 * t142 + t8, -t226 * t142 - t9 (t251 * t193 - t252 * t35) * pkin(4) (t251 * t9 + t252 * t8) * pkin(4), 0, 0, -t12, 0, -t13, t142, t102 * t152 + t109 * t142 + t2, -t101 * t152 - t111 * t142 + t1, t101 * t39 + t102 * t40 + t109 * t12 - t111 * t13, -t1 * t111 - t10 * t102 - t101 * t11 + t109 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t264, 0, -t205, 0, t67, t66, 0, 0, 0, 0, t59, 0, -t174, 0, t25, -t26 (-t251 * t174 - t252 * t59) * pkin(4) (t252 * t25 + t251 * t26) * pkin(4), 0, 0, -t23, 0, -t24, 0, t4, t3, t101 * t52 + t102 * t53 + t109 * t23 - t111 * t24, -t101 * t19 - t102 * t18 + t109 * t4 - t111 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t206, -t207, 0, 0, 0, 0, 0, 0, 0, 0, t104, -t105, 0 (t252 * t104 + t251 * t105) * pkin(4), 0, 0, 0, 0, 0, 0 (-t185 - t230 + (-t229 - 0.2e1 * pkin(5) - t108) * t148) * qJD(6) + t211, -t120 + (t226 + t110) * t240 + t236, 0, -t101 * t77 - t102 * t76 + t109 * t48 - t111 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t102, 0.2e1 * t101, 0, -0.2e1 * t101 * t111 - 0.2e1 * t102 * t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t193, t35, 0, t50, 0, 0, 0, 0, 0, 0, t13, -t12, 0, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, t59, 0, t78, 0, 0, 0, 0, 0, 0, t24, -t23, 0, t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12, 0, -t13, t142, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t23, 0, -t24, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48, t47, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, t101, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
