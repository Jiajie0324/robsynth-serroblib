% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP10_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP10_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP10_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP10_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:36:56
% EndTime: 2019-03-09 17:37:28
% DurationCPUTime: 13.68s
% Computational Cost: add. (20914->708), mult. (55113->937), div. (0->0), fcn. (43517->10), ass. (0->293)
t297 = sin(qJ(3));
t299 = cos(qJ(3));
t427 = cos(pkin(6));
t365 = t427 * qJD(1);
t335 = t365 + qJD(2);
t298 = sin(qJ(2));
t294 = sin(pkin(6));
t392 = qJD(1) * t294;
t379 = t298 * t392;
t228 = t297 * t335 + t299 * t379;
t300 = cos(qJ(2));
t391 = qJD(1) * t300;
t378 = t294 * t391;
t273 = -qJD(3) + t378;
t293 = sin(pkin(11));
t295 = cos(pkin(11));
t181 = t228 * t295 - t273 * t293;
t296 = sin(qJ(5));
t209 = t293 * t228;
t363 = t273 * t295 + t209;
t445 = cos(qJ(5));
t328 = t445 * t363;
t111 = t181 * t296 + t328;
t473 = t111 ^ 2;
t359 = t297 * t379;
t226 = -t299 * t335 + t359;
t220 = qJD(5) + t226;
t472 = t111 * t220;
t382 = pkin(1) * t427;
t284 = t298 * t382;
t347 = pkin(3) * t297 - qJ(4) * t299;
t408 = t294 * t300;
t471 = -(t284 + (pkin(8) + t347) * t408) * qJD(1) + qJD(3) * t347 - t297 * qJD(4);
t464 = t181 * t445 - t296 * t363;
t447 = t464 ^ 2;
t470 = t220 * t464;
t360 = t300 * t382;
t245 = -pkin(8) * t379 + qJD(1) * t360;
t330 = (pkin(2) * t298 - pkin(9) * t300) * t294;
t246 = qJD(1) * t330;
t172 = t299 * t245 + t297 * t246;
t152 = qJ(4) * t379 + t172;
t389 = qJD(3) * t297;
t383 = pkin(9) * t389;
t396 = t471 * t295 + (t152 + t383) * t293;
t357 = t299 * t378;
t210 = t293 * t357 - t295 * t379;
t388 = qJD(3) * t299;
t465 = -t293 * t388 + t210;
t403 = t299 * t300;
t211 = (t293 * t298 + t295 * t403) * t392;
t469 = -t295 * t388 + t211;
t468 = -t295 * t152 + t293 * t471;
t358 = t297 * t378;
t405 = t295 * t299;
t467 = pkin(4) * t358 - pkin(10) * t211 - (pkin(4) * t297 - pkin(10) * t405) * qJD(3) - t396;
t406 = t295 * t297;
t410 = t293 * t299;
t466 = pkin(10) * t210 + (-pkin(9) * t406 - pkin(10) * t410) * qJD(3) + t468;
t263 = t293 * t445 + t296 * t295;
t369 = qJD(5) * t445;
t387 = qJD(5) * t296;
t454 = -t293 * t387 + t295 * t369;
t400 = t210 * t445 + t211 * t296 - t263 * t388 - t297 * t454;
t253 = t263 * qJD(5);
t399 = t253 * t297 - t296 * t465 + t445 * t469;
t461 = t263 * t226 + t253;
t324 = -t296 * t293 + t445 * t295;
t397 = -t324 * t226 - t454;
t460 = t358 - t389;
t376 = qJD(2) * t408;
t352 = qJD(1) * t376;
t386 = t228 * qJD(3);
t187 = t297 * t352 + t386;
t243 = t263 * t297;
t322 = t273 * t297;
t384 = qJD(1) * qJD(2);
t367 = t298 * t384;
t353 = t294 * t367;
t450 = qJD(3) * t359 - t299 * (qJD(3) * t335 + t352);
t151 = t293 * t353 - t295 * t450;
t179 = t293 * t450;
t318 = t295 * t353 + t179;
t55 = qJD(5) * t464 + t296 * t151 - t445 * t318;
t459 = t111 * t322 - t187 * t243 + t220 * t400 + t299 * t55;
t290 = t294 ^ 2;
t458 = -0.2e1 * t290 * t384;
t268 = -pkin(3) * t299 - qJ(4) * t297 - pkin(2);
t260 = t295 * t268;
t189 = -pkin(10) * t406 + t260 + (-pkin(9) * t293 - pkin(4)) * t299;
t225 = pkin(9) * t405 + t293 * t268;
t411 = t293 * t297;
t199 = -pkin(10) * t411 + t225;
t438 = -t189 * t369 + t199 * t387 + t296 * t467 - t466 * t445;
t442 = pkin(10) + qJ(4);
t271 = t442 * t293;
t272 = t442 * t295;
t205 = -t296 * t271 + t272 * t445;
t415 = t226 * t295;
t394 = pkin(8) * t408 + t284;
t241 = t427 * pkin(9) + t394;
t207 = qJD(2) * pkin(9) + qJD(1) * t241;
t242 = (-pkin(2) * t300 - pkin(9) * t298 - pkin(1)) * t294;
t219 = qJD(1) * t242;
t135 = -t297 * t207 + t299 * t219;
t161 = pkin(3) * t228 + qJ(4) * t226;
t94 = -t135 * t293 + t295 * t161;
t70 = pkin(4) * t228 + pkin(10) * t415 + t94;
t416 = t226 * t293;
t95 = t295 * t135 + t293 * t161;
t80 = pkin(10) * t416 + t95;
t428 = qJD(4) * t263 + qJD(5) * t205 - t296 * t80 + t445 * t70;
t457 = t55 - t470;
t171 = -t297 * t245 + t246 * t299;
t154 = -pkin(3) * t379 - t171;
t401 = -pkin(4) * t465 + pkin(9) * t388 - t154;
t409 = t294 * t298;
t254 = t297 * t409 - t299 * t427;
t150 = t187 * t254;
t255 = t297 * t427 + t299 * t409;
t197 = qJD(3) * t255 + t297 * t376;
t456 = t197 * t226 + t150;
t455 = t296 * t189 + t445 * t199;
t395 = t295 * t383 - t468;
t256 = -pkin(8) * t409 + t360;
t453 = t357 - t388;
t452 = t228 * t111 + t187 * t324 - t220 * t461;
t198 = -qJD(3) * t254 + t299 * t376;
t390 = qJD(2) * t298;
t377 = t294 * t390;
t169 = t198 * t295 + t293 * t377;
t247 = qJD(2) * t330;
t249 = t256 * qJD(2);
t109 = -t241 * t389 + t242 * t388 + t297 * t247 + t299 * t249;
t100 = (qJ(4) * t390 - qJD(4) * t300) * t294 + t109;
t250 = t394 * qJD(2);
t108 = t197 * pkin(3) - t198 * qJ(4) - t255 * qJD(4) + t250;
t52 = -t100 * t293 + t295 * t108;
t36 = pkin(4) * t197 - pkin(10) * t169 + t52;
t196 = t255 * t295 - t293 * t408;
t240 = -pkin(2) * t427 - t256;
t146 = t254 * pkin(3) - t255 * qJ(4) + t240;
t163 = t299 * t241 + t297 * t242;
t147 = -qJ(4) * t408 + t163;
t92 = t295 * t146 - t147 * t293;
t66 = pkin(4) * t254 - pkin(10) * t196 + t92;
t329 = t255 * t293 + t295 * t408;
t93 = t293 * t146 + t295 * t147;
t76 = -pkin(10) * t329 + t93;
t436 = t296 * t66 + t445 * t76;
t317 = -t198 * t293 + t295 * t377;
t53 = t295 * t100 + t293 * t108;
t44 = pkin(10) * t317 + t53;
t8 = -qJD(5) * t436 - t296 * t44 + t36 * t445;
t439 = qJD(5) * t455 + t466 * t296 + t445 * t467;
t54 = qJD(5) * t328 - t445 * t151 + t181 * t387 - t296 * t318;
t449 = t111 * t397 - t263 * t55 - t324 * t54 - t461 * t464;
t244 = t324 * t297;
t448 = t111 * t399 + t54 * t243 - t244 * t55 + t400 * t464;
t446 = t226 ^ 2;
t301 = qJD(1) ^ 2;
t444 = pkin(5) * t187;
t443 = pkin(9) * t299;
t289 = t297 * pkin(9);
t441 = qJ(6) * t460 + qJD(6) * t299 + t438;
t440 = -pkin(5) * t460 - t439;
t437 = pkin(5) * t400 - qJ(6) * t399 + qJD(6) * t244 - t401;
t34 = t296 * t70 + t445 * t80;
t313 = qJ(4) * t353 - qJD(4) * t273;
t235 = qJD(1) * t247;
t236 = qJD(1) * t249;
t319 = t207 * t389 - t219 * t388 - t297 * t235 - t299 * t236;
t84 = t313 - t319;
t342 = pkin(8) * t352;
t349 = qJD(2) * t365;
t90 = pkin(1) * t298 * t349 + t187 * pkin(3) + qJ(4) * t450 - t228 * qJD(4) + t342;
t46 = t293 * t90 + t295 * t84;
t126 = t273 * pkin(3) + qJD(4) - t135;
t97 = pkin(4) * t363 + t126;
t37 = t111 * pkin(5) - qJ(6) * t464 + t97;
t435 = t464 * t37;
t361 = t207 * t388 + t219 * t389 - t299 * t235 + t297 * t236;
t91 = -pkin(3) * t353 + t361;
t434 = t91 * t293;
t433 = t91 * t295;
t136 = t207 * t299 + t219 * t297;
t118 = -pkin(4) * t416 + t136;
t432 = pkin(5) * t461 + qJ(6) * t397 - qJD(6) * t263 - t118;
t325 = -t271 * t445 - t296 * t272;
t164 = qJD(4) * t324 + qJD(5) * t325;
t25 = qJ(6) * t228 + t34;
t431 = t164 - t25;
t430 = t164 - t34;
t429 = t228 * pkin(5) + t428;
t426 = t464 * t111;
t424 = t151 * t293;
t423 = t187 * qJ(6);
t422 = t187 * t299;
t420 = t325 * t187;
t419 = t205 * t187;
t418 = t220 * t228;
t417 = t226 * t228;
t413 = t290 * t301;
t412 = t293 * t187;
t407 = t295 * t187;
t206 = -pkin(2) * t335 - t245;
t124 = t226 * pkin(3) - t228 * qJ(4) + t206;
t129 = -qJ(4) * t273 + t136;
t74 = t295 * t124 - t129 * t293;
t51 = pkin(4) * t226 - pkin(10) * t181 + t74;
t75 = t293 * t124 + t295 * t129;
t59 = -pkin(10) * t363 + t75;
t18 = -t296 * t59 + t445 * t51;
t402 = qJD(6) - t18;
t264 = pkin(4) * t411 + t289;
t393 = t298 ^ 2 - t300 ^ 2;
t385 = -qJD(4) + t126;
t287 = -pkin(4) * t295 - pkin(3);
t373 = t273 * t389;
t371 = t299 * t386;
t370 = -t447 + t473;
t45 = -t293 * t84 + t295 * t90;
t22 = pkin(4) * t187 - pkin(10) * t151 + t45;
t31 = pkin(10) * t318 + t46;
t366 = -t445 * t22 + t296 * t31 + t59 * t369 + t51 * t387;
t162 = -t297 * t241 + t299 * t242;
t362 = t298 * t300 * t413;
t356 = t228 * t378;
t355 = -t164 * t111 - t205 * t55 + t325 * t54;
t351 = t294 * t301 * t427;
t350 = pkin(1) * t458;
t148 = pkin(3) * t408 - t162;
t312 = t445 * t329;
t130 = t196 * t296 + t312;
t131 = t196 * t445 - t296 * t329;
t69 = qJD(5) * t131 + t296 * t169 - t317 * t445;
t346 = t111 * t69 + t130 * t55;
t343 = t297 * t361 - t299 * t319;
t340 = -t447 - t473;
t338 = t363 * qJD(3);
t337 = t290 * t300 * t367;
t334 = 0.2e1 * t365 + qJD(2);
t110 = -t241 * t388 - t242 * t389 + t299 * t247 - t297 * t249;
t2 = t366 - t444;
t19 = t296 * t51 + t445 * t59;
t333 = t19 * t220 - t366;
t27 = -t296 * t76 + t445 * t66;
t3 = t296 * t22 + t445 * t31 + t51 * t369 - t387 * t59;
t7 = t296 * t36 + t66 * t369 - t387 * t76 + t445 * t44;
t127 = t189 * t445 - t296 * t199;
t321 = -t111 * t400 + t55 * t243;
t320 = t111 * t461 - t324 * t55;
t315 = -t181 * t293 - t295 * t363;
t314 = t318 * t295;
t311 = pkin(1) * (-t349 + t413);
t310 = t54 + t472;
t68 = qJD(5) * t312 - t169 * t445 + t196 * t387 - t296 * t317;
t309 = t111 * t68 + t130 * t54 - t131 * t55 - t464 * t69;
t308 = t111 * t197 + t130 * t187 + t220 * t69 + t254 * t55;
t107 = -pkin(3) * t377 - t110;
t307 = -t226 * t322 - t422;
t117 = pkin(4) * t329 + t148;
t303 = t55 + t470;
t61 = -pkin(4) * t318 + t91;
t77 = -pkin(4) * t317 + t107;
t9 = t55 * pkin(5) + t54 * qJ(6) - qJD(6) * t464 + t61;
t248 = t394 * qJD(1);
t237 = qJD(1) * t250;
t224 = -pkin(9) * t410 + t260;
t186 = -pkin(5) * t324 - qJ(6) * t263 + t287;
t149 = pkin(5) * t243 - qJ(6) * t244 + t264;
t123 = t299 * pkin(5) - t127;
t122 = -qJ(6) * t299 + t455;
t104 = -t220 * t322 - t422;
t101 = t197 * t220 + t150;
t60 = pkin(5) * t464 + qJ(6) * t111;
t48 = t130 * pkin(5) - t131 * qJ(6) + t117;
t40 = t263 * t187 - t220 * t397 - t228 * t464;
t32 = -t54 + t472;
t24 = -t254 * pkin(5) - t27;
t23 = qJ(6) * t254 + t436;
t17 = t220 * qJ(6) + t19;
t16 = -t220 * pkin(5) + t402;
t15 = -t54 * t263 - t397 * t464;
t14 = -t54 * t244 - t399 * t464;
t13 = -t131 * t54 - t464 * t68;
t12 = t69 * pkin(5) + t68 * qJ(6) - t131 * qJD(6) + t77;
t11 = t244 * t187 - t220 * t399 + t54 * t299 - t322 * t464;
t10 = t131 * t187 + t197 * t464 - t220 * t68 - t254 * t54;
t6 = -t197 * pkin(5) - t8;
t5 = qJ(6) * t197 + qJD(6) * t254 + t7;
t1 = qJD(6) * t220 + t3 + t423;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t337, t393 * t458, t334 * t376, -0.2e1 * t337, -t334 * t377, 0, -t237 * t427 - t250 * t335 + t298 * t350, -t236 * t427 - t249 * t335 + t300 * t350 (t236 * t300 + t237 * t298 + (-t245 * t300 - t248 * t298) * qJD(2) + (t249 * t300 + t250 * t298 + (-t256 * t300 - t298 * t394) * qJD(2)) * qJD(1)) * t294, t236 * t394 - t237 * t256 - t245 * t250 + t248 * t249, t228 * t198 - t255 * t450, -t255 * t187 - t228 * t197 - t198 * t226 + t254 * t450, -t198 * t273 + t228 * t377 + t255 * t353 + t408 * t450, t456, t197 * t273 + (t187 * t300 + (-qJD(1) * t254 - t226) * t390) * t294 (-t273 * t294 - t290 * t391) * t390, -t110 * t273 + t240 * t187 + t206 * t197 + t250 * t226 + t237 * t254 + (t300 * t361 + (qJD(1) * t162 + t135) * t390) * t294, t109 * t273 - t136 * t377 - t163 * t353 + t206 * t198 + t250 * t228 + t237 * t255 - t240 * t450 - t319 * t408, -t109 * t226 - t110 * t228 - t135 * t198 - t136 * t197 + t162 * t450 - t163 * t187 + t254 * t319 + t255 * t361, t109 * t136 + t110 * t135 - t162 * t361 - t163 * t319 + t206 * t250 + t237 * t240, t151 * t196 + t169 * t181, -t151 * t329 - t169 * t363 + t181 * t317 + t196 * t318, t151 * t254 + t169 * t226 + t181 * t197 + t187 * t196, -t317 * t363 - t318 * t329, -t187 * t329 - t197 * t363 + t226 * t317 + t254 * t318, t456, t107 * t363 - t126 * t317 - t148 * t318 + t92 * t187 + t74 * t197 + t52 * t226 + t45 * t254 + t329 * t91, t107 * t181 + t126 * t169 + t148 * t151 - t187 * t93 + t196 * t91 - t197 * t75 - t226 * t53 - t254 * t46, -t92 * t151 - t74 * t169 - t52 * t181 - t45 * t196 + t317 * t75 + t318 * t93 - t329 * t46 - t363 * t53, t107 * t126 + t148 * t91 + t45 * t92 + t46 * t93 + t52 * t74 + t53 * t75, t13, t309, t10, t346, -t308, t101, t111 * t77 + t117 * t55 + t130 * t61 + t18 * t197 + t187 * t27 + t220 * t8 - t254 * t366 + t69 * t97, -t117 * t54 + t131 * t61 - t187 * t436 - t19 * t197 - t220 * t7 - t254 * t3 + t464 * t77 - t68 * t97, -t111 * t7 - t130 * t3 + t131 * t366 + t18 * t68 - t19 * t69 + t27 * t54 - t436 * t55 - t464 * t8, t117 * t61 + t18 * t8 + t19 * t7 - t27 * t366 + t3 * t436 + t77 * t97, t13, t10, -t309, t101, t308, t346, t111 * t12 + t130 * t9 - t16 * t197 - t187 * t24 - t2 * t254 - t220 * t6 + t37 * t69 + t48 * t55, -t1 * t130 - t111 * t5 + t131 * t2 - t16 * t68 - t17 * t69 - t23 * t55 - t24 * t54 + t464 * t6, t1 * t254 - t12 * t464 - t131 * t9 + t17 * t197 + t187 * t23 + t220 * t5 + t37 * t68 + t48 * t54, t1 * t23 + t12 * t37 + t16 * t6 + t17 * t5 + t2 * t24 + t48 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t362, t393 * t413, -t300 * t351, t362, t298 * t351, 0, t248 * t335 + t298 * t311 - t342, pkin(8) * t353 + t245 * t335 + t300 * t311, 0, 0, -t297 * t450 - t299 * t356 + t371, -t299 * t450 + t453 * t226 + (-t187 + t356 - t386) * t297, -t273 * t388 + (t273 * t403 + (t297 * qJD(2) - t228) * t298) * t392, t307, t373 + (-t300 * t322 + (qJD(2) * t299 + t226) * t298) * t392, t273 * t379, -pkin(2) * t187 + t171 * t273 - t248 * t226 - t237 * t299 + (t206 * t297 + t273 * t443) * qJD(3) + (-t135 * t298 + (-pkin(9) * t390 - t206 * t300) * t297) * t392, pkin(2) * t450 - pkin(9) * t373 + t136 * t379 - t172 * t273 - t206 * t453 - t248 * t228 + t237 * t297 - t353 * t443, t171 * t228 - t450 * t289 + t343 + (t172 + t383) * t226 + t460 * t136 + t453 * t135 + (t371 - t422) * pkin(9), -t237 * pkin(2) - t135 * t171 - t136 * t172 - t206 * t248 + ((-t135 * t299 - t136 * t297) * qJD(3) + t343) * pkin(9), t151 * t406 - t181 * t469, t211 * t363 + t181 * t210 + (t314 - t424) * t297 + t315 * t388, -t151 * t299 - t469 * t226 + (-t181 * t273 + t407) * t297, -t363 * t210 + (-t297 * t318 + t299 * t338) * t293, -t318 * t299 + t465 * t226 + (t363 * t378 - t338 - t412) * t297, t307, t224 * t187 - t154 * t363 - t126 * t210 + t396 * t226 + (-t45 + (pkin(9) * t363 + t126 * t293) * qJD(3)) * t299 + (-pkin(9) * t318 - t273 * t74 + t434) * t297, -t126 * t211 - t154 * t181 - t187 * t225 + t395 * t226 + (t46 + (pkin(9) * t181 + t126 * t295) * qJD(3)) * t299 + (pkin(9) * t151 + t273 * t75 + t433) * t297, t225 * t318 - t224 * t151 + t75 * t210 + t74 * t211 + (-t293 * t46 - t295 * t45) * t297 - t396 * t181 + (-t293 * t75 - t295 * t74) * t388 + t395 * t363, -t126 * t154 + t45 * t224 + t46 * t225 - t395 * t75 + t396 * t74 + (t126 * t388 + t297 * t91) * pkin(9), t14, t448, t11, t321, t459, t104, t111 * t401 + t127 * t187 - t18 * t322 - t220 * t439 + t243 * t61 + t264 * t55 + t299 * t366 - t400 * t97, -t187 * t455 + t19 * t322 + t220 * t438 + t244 * t61 - t264 * t54 + t299 * t3 - t399 * t97 + t401 * t464, t111 * t438 + t127 * t54 + t18 * t399 + t19 * t400 - t243 * t3 + t244 * t366 + t439 * t464 - t455 * t55, -t127 * t366 - t18 * t439 - t19 * t438 + t61 * t264 + t3 * t455 + t401 * t97, t14, t11, -t448, t104, -t459, t321, -t111 * t437 - t123 * t187 + t149 * t55 + t16 * t322 + t2 * t299 + t220 * t440 + t243 * t9 - t37 * t400, -t1 * t243 + t111 * t441 - t122 * t55 - t123 * t54 - t16 * t399 + t17 * t400 + t2 * t244 - t440 * t464, -t1 * t299 + t122 * t187 + t149 * t54 - t17 * t322 - t220 * t441 - t244 * t9 + t37 * t399 + t437 * t464, t1 * t122 + t2 * t123 + t9 * t149 - t16 * t440 - t17 * t441 - t37 * t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, t228 ^ 2 - t446, -t226 * t273 - t450, -t417, -t228 * t273 - t187, t353, -t136 * t273 - t206 * t228 - t361, -t135 * t273 + t206 * t226 + t319, 0, 0, t181 * t415 + t424, t151 * t295 + t226 * t315 + t293 * t318, -t181 * t228 + t295 * t446 + t412, t363 * t416 + t314, t228 * t363 - t293 * t446 + t407, -t417, -qJ(4) * t412 + pkin(3) * t318 - t433 - t74 * t228 - t136 * t363 + (t293 * t385 - t94) * t226, -qJ(4) * t407 - pkin(3) * t151 - t136 * t181 + t75 * t228 + t434 + (t295 * t385 + t95) * t226, t94 * t181 + t95 * t209 + (qJ(4) * t179 - qJD(4) * t209 - t74 * t226 + t95 * t273 + t295 * t313 + t46) * t295 + (qJ(4) * t151 + qJD(4) * t181 - t226 * t75 - t45) * t293, -t91 * pkin(3) - t126 * t136 - t74 * t94 - t75 * t95 + (-t293 * t74 + t295 * t75) * qJD(4) + (-t45 * t293 + t46 * t295) * qJ(4), t15, t449, t40, t320, t452, -t418, -t118 * t111 - t18 * t228 - t220 * t428 + t287 * t55 - t324 * t61 + t461 * t97 + t420, -t118 * t464 + t19 * t228 - t220 * t430 + t61 * t263 - t287 * t54 - t397 * t97 - t419, t111 * t34 + t18 * t397 - t19 * t461 + t263 * t366 + t3 * t324 + t428 * t464 + t355, -t97 * t118 - t18 * t428 + t19 * t430 + t3 * t205 + t61 * t287 - t325 * t366, t15, t40, -t449, -t418, -t452, t320, t111 * t432 + t16 * t228 + t186 * t55 - t220 * t429 - t324 * t9 + t37 * t461 + t420, t1 * t324 + t111 * t25 - t16 * t397 - t17 * t461 + t2 * t263 + t429 * t464 + t355, -t17 * t228 + t186 * t54 + t220 * t431 - t263 * t9 + t37 * t397 - t432 * t464 + t419, t1 * t205 + t16 * t429 + t17 * t431 + t9 * t186 - t2 * t325 + t37 * t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181 * t226 - t318, -t226 * t363 + t151, -t181 ^ 2 - t363 ^ 2, t181 * t74 + t363 * t75 + t91, 0, 0, 0, 0, 0, 0, t303, -t310, t340, t111 * t19 + t18 * t464 + t61, 0, 0, 0, 0, 0, 0, t303, t340, t310, t111 * t17 - t16 * t464 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t426, -t370, t32, -t426, -t457, t187, -t464 * t97 + t333, t111 * t97 + t18 * t220 - t3, 0, 0, t426, t32, t370, t187, t457, -t426, -t111 * t60 + t333 - t435 + 0.2e1 * t444, pkin(5) * t54 - qJ(6) * t55 + (t17 - t19) * t464 + (t16 - t402) * t111, 0.2e1 * t423 - t37 * t111 + t60 * t464 + (0.2e1 * qJD(6) - t18) * t220 + t3, -pkin(5) * t2 + qJ(6) * t1 - t16 * t19 + t17 * t402 - t37 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t187 + t426, t32, -t220 ^ 2 - t447, -t17 * t220 + t2 + t435;];
tauc_reg  = t4;
