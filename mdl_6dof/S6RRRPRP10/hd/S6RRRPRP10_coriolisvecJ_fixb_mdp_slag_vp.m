% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRRPRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% MDP [32x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRRPRP10_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRRPRP10_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1),zeros(32,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP10_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP10_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP10_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [11x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [32 1]), ...
  'S6RRRPRP10_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [32x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:37:25
% EndTime: 2019-03-09 17:37:52
% DurationCPUTime: 18.13s
% Computational Cost: add. (14743->667), mult. (38551->882), div. (0->0), fcn. (30178->10), ass. (0->250)
t674 = sin(pkin(6));
t680 = cos(qJ(2));
t764 = qJD(1) * t680;
t752 = t674 * t764;
t654 = -qJD(3) + t752;
t677 = sin(qJ(3));
t679 = cos(qJ(3));
t804 = cos(pkin(6));
t740 = t804 * qJD(1);
t719 = t740 + qJD(2);
t678 = sin(qJ(2));
t765 = qJD(1) * t674;
t753 = t678 * t765;
t613 = t677 * t719 + t679 * t753;
t673 = sin(pkin(11));
t675 = cos(pkin(11));
t565 = t613 * t675 - t654 * t673;
t676 = sin(qJ(5));
t739 = t613 * t673 + t654 * t675;
t808 = cos(qJ(5));
t714 = t808 * t739;
t505 = t565 * t676 + t714;
t838 = t505 ^ 2;
t611 = t677 * t753 - t679 * t719;
t605 = qJD(5) + t611;
t837 = t505 * t605;
t730 = pkin(1) * t740;
t659 = t678 * t730;
t633 = pkin(8) * t752 + t659;
t836 = qJD(4) * t677 + t633 + t654 * (pkin(3) * t677 - qJ(4) * t679);
t722 = t676 * t739;
t833 = t565 * t808 - t722;
t809 = t833 ^ 2;
t835 = t605 * t833;
t630 = -pkin(8) * t753 + t680 * t730;
t716 = (pkin(2) * t678 - pkin(9) * t680) * t674;
t631 = qJD(1) * t716;
t769 = t630 * t679 + t631 * t677;
t542 = qJ(4) * t753 + t769;
t834 = t675 * t542 + t673 * t836;
t761 = qJD(3) * t677;
t755 = pkin(9) * t761;
t771 = -t836 * t675 + (t542 + t755) * t673;
t731 = t679 * t752;
t595 = t673 * t731 - t675 * t753;
t760 = qJD(3) * t679;
t830 = -t673 * t760 + t595;
t784 = t679 * t680;
t596 = (t673 * t678 + t675 * t784) * t765;
t818 = -t675 * t760 + t596;
t732 = t677 * t752;
t785 = t675 * t679;
t832 = pkin(4) * t732 - pkin(10) * t596 - (pkin(4) * t677 - pkin(10) * t785) * qJD(3) - t771;
t786 = t675 * t677;
t789 = t673 * t679;
t831 = -pkin(10) * t595 - (-pkin(9) * t786 - pkin(10) * t789) * qJD(3) + t834;
t737 = -t630 * t677 + t631 * t679;
t544 = -pkin(3) * t753 - t737;
t827 = pkin(9) * t760 - t544;
t645 = t673 * t808 + t675 * t676;
t638 = t645 * qJD(5);
t774 = -t638 * t677 + t676 * t830 - t808 * t818;
t743 = qJD(5) * t808;
t758 = qJD(5) * t676;
t815 = -t673 * t758 + t675 * t743;
t773 = -t595 * t808 - t596 * t676 + t645 * t760 + t677 * t815;
t704 = -t673 * t676 + t675 * t808;
t768 = t611 * t704 + t815;
t767 = t611 * t645 + t638;
t812 = t761 - t732;
t670 = t674 ^ 2;
t756 = qJD(1) * qJD(2);
t826 = -0.2e1 * t670 * t756;
t825 = MDP(5) * (t678 ^ 2 - t680 ^ 2);
t754 = pkin(1) * t804;
t788 = t674 * t678;
t813 = -pkin(8) * t788 + t680 * t754;
t625 = -pkin(2) * t804 - t813;
t639 = t677 * t788 - t679 * t804;
t640 = t677 * t804 + t679 * t788;
t538 = pkin(3) * t639 - qJ(4) * t640 + t625;
t787 = t674 * t680;
t692 = pkin(8) * t787 + t678 * t754;
t626 = pkin(9) * t804 + t692;
t627 = (-pkin(2) * t680 - pkin(9) * t678 - pkin(1)) * t674;
t770 = t626 * t679 + t627 * t677;
t539 = -qJ(4) * t787 + t770;
t492 = t538 * t675 - t539 * t673;
t581 = t640 * t675 - t673 * t787;
t469 = pkin(4) * t639 - pkin(10) * t581 + t492;
t493 = t538 * t673 + t539 * t675;
t715 = t640 * t673 + t675 * t787;
t477 = -pkin(10) * t715 + t493;
t824 = t469 * t676 + t477 * t808;
t592 = pkin(9) * t719 + t633;
t604 = qJD(1) * t627;
t527 = -t592 * t677 + t679 * t604;
t551 = pkin(3) * t613 + qJ(4) * t611;
t495 = t527 * t675 + t551 * t673;
t823 = -qJD(4) * t675 + t495;
t822 = t675 * t755 + t834;
t494 = -t527 * t673 + t551 * t675;
t794 = t611 * t675;
t473 = pkin(4) * t613 + pkin(10) * t794 + t494;
t795 = t611 * t673;
t481 = pkin(10) * t795 + t495;
t805 = pkin(10) + qJ(4);
t652 = t805 * t673;
t653 = t805 * t675;
t705 = -t652 * t808 - t653 * t676;
t821 = -qJD(4) * t704 - qJD(5) * t705 + t473 * t676 + t481 * t808;
t589 = -t652 * t676 + t653 * t808;
t820 = -qJD(4) * t645 - qJD(5) * t589 - t473 * t808 + t481 * t676;
t649 = -pkin(3) * t679 - qJ(4) * t677 - pkin(2);
t643 = t675 * t649;
t573 = -pkin(10) * t786 + t643 + (-pkin(9) * t673 - pkin(4)) * t679;
t610 = pkin(9) * t785 + t649 * t673;
t790 = t673 * t677;
t584 = -pkin(10) * t790 + t610;
t819 = t573 * t676 + t584 * t808;
t817 = -pkin(4) * t830 + t827;
t816 = -t573 * t743 + t584 * t758 + t676 * t832 + t808 * t831;
t814 = t731 - t760;
t695 = qJD(3) * t719;
t763 = qJD(2) * t678;
t744 = t673 * t763;
t762 = qJD(2) * t680;
t749 = t679 * t762;
t683 = (t675 * (-t678 * t761 + t749) + t744) * t765 + t695 * t785;
t741 = t674 * t756;
t727 = t680 * t741;
t571 = qJD(3) * t613 + t677 * t727;
t632 = qJD(2) * t716;
t634 = t813 * qJD(2);
t699 = -t626 * t761 + t627 * t760 + t632 * t677 + t634 * t679;
t498 = (qJ(4) * t763 - qJD(4) * t680) * t674 + t699;
t750 = t674 * t762;
t582 = qJD(3) * t640 + t677 * t750;
t583 = -qJD(3) * t639 + t674 * t749;
t635 = t692 * qJD(2);
t504 = pkin(3) * t582 - qJ(4) * t583 - qJD(4) * t640 + t635;
t455 = -t673 * t498 + t504 * t675;
t693 = t583 * t675 + t674 * t744;
t443 = t582 * pkin(4) - pkin(10) * t693 + t455;
t456 = t498 * t675 + t504 * t673;
t751 = t674 * t763;
t694 = -t583 * t673 + t675 * t751;
t448 = pkin(10) * t694 + t456;
t811 = -qJD(5) * t824 + t443 * t808 - t448 * t676;
t810 = -qJD(5) * t819 + t676 * t831 - t808 * t832;
t681 = qJD(1) ^ 2;
t807 = pkin(5) * t571;
t806 = pkin(9) * t679;
t669 = t677 * pkin(9);
t803 = qJ(4) * t673;
t802 = qJ(4) * t675;
t801 = qJ(6) * t571;
t591 = -pkin(2) * t719 - t630;
t518 = pkin(3) * t611 - qJ(4) * t613 + t591;
t528 = t592 * t679 + t604 * t677;
t521 = -qJ(4) * t654 + t528;
t475 = t518 * t675 - t521 * t673;
t454 = pkin(4) * t611 - pkin(10) * t565 + t475;
t476 = t518 * t673 + t521 * t675;
t462 = -pkin(10) * t739 + t476;
t430 = t454 * t676 + t462 * t808;
t800 = t430 * t605;
t728 = t678 * t741;
t620 = qJD(1) * t632;
t621 = qJD(1) * t634;
t734 = t592 * t760 + t604 * t761 - t620 * t679 + t621 * t677;
t491 = -pkin(3) * t728 + t734;
t799 = t491 * t673;
t798 = t833 * t505;
t797 = t705 * t571;
t796 = t589 * t571;
t793 = t613 * t654;
t702 = t654 * t677;
t791 = t670 * t681;
t783 = qJ(6) * t613 + t821;
t782 = -pkin(5) * t613 + t820;
t781 = -qJ(6) * t812 + qJD(6) * t679 + t816;
t780 = pkin(5) * t812 + t810;
t512 = -pkin(4) * t795 + t528;
t779 = -pkin(5) * t767 + qJ(6) * t768 + qJD(6) * t645 + t512;
t629 = t704 * t677;
t778 = -pkin(5) * t773 + qJ(6) * t774 + qJD(6) * t629 - t817;
t700 = t592 * t761 - t604 * t760 - t620 * t677 - t621 * t679;
t484 = qJ(4) * t728 - qJD(4) * t654 - t700;
t685 = -qJD(3) * t611 + t679 * t727;
t723 = pkin(8) * t727;
t490 = pkin(3) * t571 - qJ(4) * t685 + qJD(2) * t659 - qJD(4) * t613 + t723;
t450 = t484 * t675 + t490 * t673;
t646 = pkin(4) * t790 + t669;
t429 = t454 * t808 - t462 * t676;
t757 = qJD(6) - t429;
t667 = -pkin(4) * t675 - pkin(3);
t748 = t654 * t761;
t449 = -t673 * t484 + t490 * t675;
t738 = -t626 * t677 + t627 * t679;
t736 = t670 * t678 * t680 * MDP(4);
t433 = t571 * pkin(4) - pkin(10) * t683 + t449;
t696 = -t673 * t685 + t675 * t728;
t440 = pkin(10) * t696 + t450;
t735 = -t433 * t808 + t440 * t676 + t454 * t758 + t462 * t743;
t725 = pkin(1) * t826;
t540 = pkin(3) * t787 - t738;
t721 = -t449 * t673 + t450 * t675;
t717 = -t626 * t760 - t627 * t761 + t679 * t632 - t634 * t677;
t713 = t469 * t808 - t477 * t676;
t710 = t573 * t808 - t584 * t676;
t520 = t654 * pkin(3) + qJD(4) - t527;
t497 = pkin(4) * t739 + t520;
t444 = pkin(5) * t505 - qJ(6) * t833 + t497;
t701 = t444 * t833 + t735;
t421 = t433 * t676 + t440 * t808 + t454 * t743 - t462 * t758;
t698 = t443 * t676 + t448 * t808 + t469 * t743 - t477 * t758;
t457 = qJD(5) * t714 + t565 * t758 - t676 * t696 - t683 * t808;
t691 = t808 * t715;
t689 = pkin(1) * (-qJD(2) * t740 + t791);
t503 = -pkin(3) * t751 - t717;
t523 = t581 * t808 - t676 * t715;
t511 = pkin(4) * t715 + t540;
t464 = -pkin(4) * t696 + t491;
t478 = -pkin(4) * t694 + t503;
t458 = -qJD(5) * t722 + t565 * t743 + t676 * t683 - t696 * t808;
t425 = t458 * pkin(5) + t457 * qJ(6) - qJD(6) * t833 + t464;
t628 = t645 * t677;
t622 = qJD(1) * t635;
t609 = -pkin(9) * t789 + t643;
t570 = -pkin(5) * t704 - qJ(6) * t645 + t667;
t541 = pkin(5) * t628 - qJ(6) * t629 + t646;
t522 = t581 * t676 + t691;
t517 = pkin(5) * t679 - t710;
t516 = -qJ(6) * t679 + t819;
t472 = qJD(5) * t523 + t676 * t693 - t694 * t808;
t471 = qJD(5) * t691 + t581 * t758 - t676 * t694 - t693 * t808;
t463 = pkin(5) * t833 + qJ(6) * t505;
t451 = pkin(5) * t522 - qJ(6) * t523 + t511;
t441 = -t457 + t837;
t435 = -pkin(5) * t639 - t713;
t434 = qJ(6) * t639 + t824;
t428 = qJ(6) * t605 + t430;
t427 = -pkin(5) * t605 + t757;
t426 = pkin(5) * t472 + qJ(6) * t471 - qJD(6) * t523 + t478;
t424 = -pkin(5) * t582 - t811;
t423 = qJ(6) * t582 + qJD(6) * t639 + t698;
t420 = t735 - t807;
t419 = qJD(6) * t605 + t421 + t801;
t1 = [0.2e1 * t736 * t756 + (t449 * t639 + t455 * t611 + t475 * t582 + t491 * t715 + t492 * t571 + t503 * t739 - t520 * t694 - t540 * t696) * MDP(18) + (-t654 * t674 - t670 * t764) * MDP(15) * t763 + (t429 * t582 + t511 * t458 + t464 * t522 + t497 * t472 + t478 * t505 + t713 * t571 + t605 * t811 - t639 * t735) * MDP(27) + (-t449 * t581 - t450 * t715 - t455 * t565 - t456 * t739 - t475 * t693 + t476 * t694 - t492 * t683 + t493 * t696) * MDP(20) + (-t621 * t804 - t634 * t719 + t680 * t725) * MDP(10) + (-t622 * t804 - t635 * t719 + t678 * t725) * MDP(9) + (t613 * t583 + t640 * t685) * MDP(11) + (-t640 * t571 - t613 * t582 - t583 * t611 - t639 * t685) * MDP(12) + (-t450 * t639 - t456 * t611 - t476 * t582 + t491 * t581 - t493 * t571 + t503 * t565 + t520 * t693 + t540 * t683) * MDP(19) + (-t528 * t751 + t591 * t583 + t635 * t613 + t622 * t640 + t625 * t685 + t654 * t699 - t700 * t787 - t728 * t770) * MDP(17) + (-t583 * t654 + t613 * t751 + t640 * t728 - t685 * t787) * MDP(13) + (t582 * t654 + (t571 * t680 + (-qJD(1) * t639 - t611) * t763) * t674) * MDP(14) + (-t717 * t654 + t635 * t611 + t625 * t571 + t622 * t639 + t591 * t582 + (t734 * t680 + (qJD(1) * t738 + t527) * t763) * t674) * MDP(16) + (MDP(6) * t750 - MDP(7) * t751) * (0.2e1 * t740 + qJD(2)) + t825 * t826 + (-t420 * t639 - t424 * t605 + t425 * t522 + t426 * t505 - t427 * t582 - t435 * t571 + t444 * t472 + t451 * t458) * MDP(29) + (t571 * t639 + t582 * t605) * MDP(26) + (-t458 * t639 - t472 * t605 - t505 * t582 - t522 * t571) * MDP(25) + (t419 * t434 + t420 * t435 + t423 * t428 + t424 * t427 + t425 * t451 + t426 * t444) * MDP(32) + (-t457 * t639 - t471 * t605 + t523 * t571 + t582 * t833) * MDP(24) + (t419 * t639 + t423 * t605 - t425 * t523 - t426 * t833 + t428 * t582 + t434 * t571 + t444 * t471 + t451 * t457) * MDP(31) + (-t421 * t639 - t430 * t582 - t511 * t457 + t464 * t523 - t497 * t471 + t478 * t833 - t571 * t824 - t605 * t698) * MDP(28) + (-t457 * t523 - t471 * t833) * MDP(22) + (t457 * t522 - t458 * t523 + t471 * t505 - t472 * t833) * MDP(23) + (-t419 * t522 + t420 * t523 - t423 * t505 + t424 * t833 - t427 * t471 - t428 * t472 - t434 * t458 - t435 * t457) * MDP(30) + (t449 * t492 + t450 * t493 + t455 * t475 + t456 * t476 + t491 * t540 + t503 * t520) * MDP(21); (t419 * t516 + t420 * t517 + t425 * t541 - t427 * t780 - t428 * t781 - t444 * t778) * MDP(32) + (-t654 * t760 + (t654 * t784 + (qJD(2) * t677 - t613) * t678) * t765) * MDP(13) + (pkin(8) * t728 + t630 * t719 + t680 * t689) * MDP(10) + (t458 * t679 + t505 * t702 - t571 * t628 - t605 * t773) * MDP(25) + (t429 * t812 + t646 * t458 + t464 * t628 + t497 * t773 + t505 * t817 + t710 * t571 + t605 * t810 + t679 * t735) * MDP(27) + t654 * MDP(15) * t753 + (-pkin(2) * t571 - t622 * t679 + t737 * t654 - t633 * t611 + (t591 * t677 + t654 * t806) * qJD(3) + (-t527 * t678 + (-pkin(9) * t763 - t591 * t680) * t677) * t765) * MDP(16) + (t420 * t679 + t425 * t628 + t427 * t702 + t444 * t773 + t458 * t541 - t505 * t778 - t517 * t571 + t605 * t780) * MDP(29) + (t633 * t719 + t678 * t689 - t723) * MDP(9) + (t748 + (-t680 * t702 + (qJD(2) * t679 + t611) * t678) * t765) * MDP(14) + (-qJD(3) * t677 ^ 2 * t753 + ((t695 + t727) * t677 - t793) * t679) * MDP(11) + (t609 * t571 - t544 * t739 - t520 * t595 + t771 * t611 + (-t449 + (pkin(9) * t739 + t520 * t673) * qJD(3)) * t679 + (-pkin(9) * t696 - t475 * t654 + t799) * t677) * MDP(18) + (t449 * t609 + t450 * t610 - t520 * t544 - t822 * t476 + t771 * t475 + (t491 * t677 + t520 * t760) * pkin(9)) * MDP(21) + (t450 * t679 - t812 * t476 + t491 * t786 - t818 * t520 + t565 * t827 - t610 * t571 + t822 * t611 + t669 * t683) * MDP(19) + (-t677 * t571 + t611 * t814 - t613 * t812 + t679 * t685) * MDP(12) + (-pkin(2) * t685 - pkin(9) * t748 + t528 * t753 - t591 * t814 - t633 * t613 + t622 * t677 - t654 * t769 - t728 * t806) * MDP(17) + t791 * t825 + (-t736 + (-MDP(6) * t680 + MDP(7) * t678) * t674 * t804) * t681 + (-t571 * t679 - t605 * t702) * MDP(26) + (-t449 * t786 - t450 * t790 + t818 * t475 + t476 * t830 - t771 * t565 - t609 * t683 + t610 * t696 + t822 * t739) * MDP(20) + (-t457 * t629 + t774 * t833) * MDP(22) + (t457 * t628 - t458 * t629 - t505 * t774 - t773 * t833) * MDP(23) + (-t419 * t628 + t420 * t629 + t427 * t774 - t428 * t773 - t457 * t517 - t458 * t516 + t505 * t781 - t780 * t833) * MDP(30) + (t457 * t679 + t571 * t629 + t605 * t774 - t702 * t833) * MDP(24) + (-t419 * t679 - t425 * t629 - t428 * t702 - t444 * t774 + t457 * t541 + t516 * t571 - t605 * t781 + t778 * t833) * MDP(31) + (t421 * t679 + t430 * t702 - t646 * t457 + t464 * t629 + t774 * t497 - t571 * t819 + t605 * t816 + t817 * t833) * MDP(28); t685 * MDP(13) + (-t571 - t793) * MDP(14) + MDP(15) * t728 + (-t528 * t654 - t734) * MDP(16) + (-t527 * t654 + t700) * MDP(17) + (pkin(3) * t696 - t491 * t675 - t528 * t739 - t571 * t803) * MDP(18) + (-pkin(3) * t683 + t520 * t794 - t528 * t565 - t571 * t802 + t799) * MDP(19) + (-t475 * t794 - t476 * t795 + t683 * t803 + t696 * t802 + t721 + t823 * t739 + (qJD(4) * t673 + t494) * t565) * MDP(20) + (-pkin(3) * t491 - t475 * t494 - t476 * t495 - t520 * t528 + (-t475 * t673 + t476 * t675) * qJD(4) + t721 * qJ(4)) * MDP(21) + (-t457 * t645 + t768 * t833) * MDP(22) + (-t457 * t704 - t458 * t645 - t505 * t768 - t767 * t833) * MDP(23) + (t571 * t645 + t605 * t768) * MDP(24) + (t571 * t704 - t605 * t767) * MDP(25) + (t667 * t458 - t464 * t704 + t767 * t497 - t512 * t505 + t605 * t820 + t797) * MDP(27) + (-t667 * t457 + t464 * t645 + t768 * t497 - t512 * t833 + t605 * t821 - t796) * MDP(28) + (-t425 * t704 + t444 * t767 + t458 * t570 - t505 * t779 + t605 * t782 + t797) * MDP(29) + (t419 * t704 + t420 * t645 + t427 * t768 - t428 * t767 + t457 * t705 - t458 * t589 + t505 * t783 - t782 * t833) * MDP(30) + (-t425 * t645 - t444 * t768 + t457 * t570 - t605 * t783 + t779 * t833 + t796) * MDP(31) + (t419 * t589 - t420 * t705 + t425 * t570 - t427 * t782 - t428 * t783 - t444 * t779) * MDP(32) + (t613 * MDP(12) - t591 * MDP(16) - t475 * MDP(18) + MDP(19) * t476 - MDP(24) * t833 + t505 * MDP(25) - t605 * MDP(26) - t429 * MDP(27) + t430 * MDP(28) + t427 * MDP(29) - t428 * MDP(31)) * t613 + (t613 * MDP(11) - t654 * MDP(13) + t591 * MDP(17) + (-t494 + (-qJD(4) + t520) * t673) * MDP(18) + t823 * MDP(19) - MDP(12) * t611) * t611; (t565 * t611 - t696) * MDP(18) + (-t611 * t739 + t683) * MDP(19) + (-t565 ^ 2 - t739 ^ 2) * MDP(20) + (t475 * t565 + t476 * t739 + t491) * MDP(21) + (-t809 - t838) * MDP(30) + (-t427 * t833 + t428 * t505 + t425) * MDP(32) + (-MDP(28) + MDP(31)) * (t457 + t837) + (MDP(27) + MDP(29)) * (t458 + t835); MDP(22) * t798 + (t809 - t838) * MDP(23) + t441 * MDP(24) + (-t458 + t835) * MDP(25) + t571 * MDP(26) + (-t497 * t833 - t735 + t800) * MDP(27) + (t429 * t605 + t497 * t505 - t421) * MDP(28) + (-t463 * t505 - t701 + t800 + 0.2e1 * t807) * MDP(29) + (pkin(5) * t457 - qJ(6) * t458 + (t428 - t430) * t833 + (t427 - t757) * t505) * MDP(30) + (0.2e1 * t801 - t444 * t505 + t463 * t833 + (0.2e1 * qJD(6) - t429) * t605 + t421) * MDP(31) + (-pkin(5) * t420 + qJ(6) * t419 - t427 * t430 + t428 * t757 - t444 * t463) * MDP(32); (-t571 + t798) * MDP(29) + t441 * MDP(30) + (-t605 ^ 2 - t809) * MDP(31) + (-t428 * t605 + t701 - t807) * MDP(32);];
tauc  = t1;
