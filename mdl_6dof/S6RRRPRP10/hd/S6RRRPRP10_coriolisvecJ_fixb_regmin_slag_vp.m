% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% tauc_reg [6x32]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:40
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP10_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP10_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP10_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP10_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:36:56
% EndTime: 2019-03-09 17:37:25
% DurationCPUTime: 11.45s
% Computational Cost: add. (14651->576), mult. (38448->787), div. (0->0), fcn. (30178->10), ass. (0->256)
t256 = sin(pkin(6));
t262 = cos(qJ(2));
t345 = qJD(1) * t262;
t334 = t256 * t345;
t236 = -qJD(3) + t334;
t259 = sin(qJ(3));
t261 = cos(qJ(3));
t373 = cos(pkin(6));
t321 = t373 * qJD(1);
t301 = t321 + qJD(2);
t260 = sin(qJ(2));
t346 = qJD(1) * t256;
t335 = t260 * t346;
t195 = t259 * t301 + t261 * t335;
t255 = sin(pkin(11));
t257 = cos(pkin(11));
t147 = t195 * t257 - t236 * t255;
t258 = sin(qJ(5));
t320 = t255 * t195 + t236 * t257;
t389 = cos(qJ(5));
t289 = t389 * t320;
t87 = t147 * t258 + t289;
t418 = t87 ^ 2;
t193 = t259 * t335 - t261 * t301;
t187 = qJD(5) + t193;
t417 = t187 * t87;
t312 = pkin(1) * t321;
t241 = t260 * t312;
t215 = pkin(8) * t334 + t241;
t416 = qJD(4) * t259 + t215 + t236 * (pkin(3) * t259 - qJ(4) * t261);
t303 = t258 * t320;
t412 = t147 * t389 - t303;
t390 = t412 ^ 2;
t415 = t187 * t412;
t212 = -pkin(8) * t335 + t262 * t312;
t292 = (pkin(2) * t260 - pkin(9) * t262) * t256;
t213 = qJD(1) * t292;
t350 = t261 * t212 + t259 * t213;
t124 = qJ(4) * t335 + t350;
t343 = qJD(3) * t259;
t337 = pkin(9) * t343;
t374 = -t416 * t257 + (t124 + t337) * t255;
t414 = t257 * t124 + t255 * t416;
t313 = t261 * t334;
t177 = t255 * t313 - t257 * t335;
t342 = qJD(3) * t261;
t409 = -t255 * t342 + t177;
t356 = t261 * t262;
t178 = (t255 * t260 + t257 * t356) * t346;
t413 = -t257 * t342 + t178;
t314 = t259 * t334;
t357 = t257 * t261;
t411 = -pkin(4) * t314 + pkin(10) * t178 + (pkin(4) * t259 - pkin(10) * t357) * qJD(3) + t374;
t358 = t257 * t259;
t361 = t255 * t261;
t410 = -pkin(10) * t177 - (-pkin(9) * t358 - pkin(10) * t361) * qJD(3) + t414;
t318 = -t259 * t212 + t213 * t261;
t126 = -pkin(3) * t335 - t318;
t406 = pkin(9) * t342 - t126;
t227 = t255 * t389 + t258 * t257;
t220 = t227 * qJD(5);
t354 = -t220 * t259 + t258 * t409 - t389 * t413;
t324 = qJD(5) * t389;
t340 = qJD(5) * t258;
t396 = -t255 * t340 + t257 * t324;
t353 = -t177 * t389 - t178 * t258 + t227 * t342 + t259 * t396;
t284 = -t258 * t255 + t257 * t389;
t405 = -t284 * t193 - t396;
t348 = t227 * t193 + t220;
t393 = t343 - t314;
t404 = -t257 * t337 - t414;
t403 = -t409 * pkin(4) + t406;
t174 = pkin(9) * t301 + t215;
t209 = (-pkin(2) * t262 - pkin(9) * t260 - pkin(1)) * t256;
t186 = qJD(1) * t209;
t109 = -t259 * t174 + t261 * t186;
t133 = pkin(3) * t195 + qJ(4) * t193;
t77 = t257 * t109 + t255 * t133;
t402 = -qJD(4) * t257 + t77;
t401 = t260 * t262;
t384 = pkin(10) + qJ(4);
t234 = t384 * t255;
t235 = t384 * t257;
t285 = -t234 * t389 - t258 * t235;
t366 = t193 * t257;
t76 = -t109 * t255 + t257 * t133;
t55 = pkin(4) * t195 + pkin(10) * t366 + t76;
t367 = t193 * t255;
t63 = pkin(10) * t367 + t77;
t400 = -qJD(4) * t284 - qJD(5) * t285 + t258 * t55 + t389 * t63;
t171 = -t258 * t234 + t235 * t389;
t399 = -qJD(4) * t227 - qJD(5) * t171 + t258 * t63 - t389 * t55;
t231 = -pkin(3) * t261 - qJ(4) * t259 - pkin(2);
t225 = t257 * t231;
t155 = -pkin(10) * t358 + t225 + (-pkin(9) * t255 - pkin(4)) * t261;
t192 = pkin(9) * t357 + t255 * t231;
t362 = t255 * t259;
t166 = -pkin(10) * t362 + t192;
t398 = t258 * t155 + t389 * t166;
t397 = -t155 * t324 + t166 * t340 - t411 * t258 + t410 * t389;
t395 = t313 - t342;
t336 = pkin(1) * t373;
t360 = t256 * t260;
t394 = -pkin(8) * t360 + t262 * t336;
t277 = qJD(3) * t301;
t344 = qJD(2) * t260;
t325 = t255 * t344;
t339 = t261 * qJD(2);
t331 = t262 * t339;
t265 = (t257 * (-t260 * t343 + t331) + t325) * t346 + t277 * t357;
t338 = qJD(1) * qJD(2);
t322 = t256 * t338;
t309 = t262 * t322;
t153 = t195 * qJD(3) + t259 * t309;
t222 = t259 * t373 + t261 * t360;
t359 = t256 * t262;
t332 = qJD(2) * t359;
t164 = qJD(3) * t222 + t259 * t332;
t221 = t259 * t360 - t261 * t373;
t165 = -qJD(3) * t221 + t256 * t331;
t275 = t165 * t257 + t256 * t325;
t274 = pkin(8) * t359 + t260 * t336;
t208 = pkin(9) * t373 + t274;
t214 = qJD(2) * t292;
t216 = t394 * qJD(2);
t280 = -t208 * t343 + t209 * t342 + t259 * t214 + t261 * t216;
t80 = (qJ(4) * t344 - qJD(4) * t262) * t256 + t280;
t217 = t274 * qJD(2);
t86 = t164 * pkin(3) - t165 * qJ(4) - t222 * qJD(4) + t217;
t37 = -t255 * t80 + t257 * t86;
t25 = t164 * pkin(4) - pkin(10) * t275 + t37;
t163 = t222 * t257 - t255 * t359;
t207 = -pkin(2) * t373 - t394;
t120 = t221 * pkin(3) - t222 * qJ(4) + t207;
t351 = t261 * t208 + t259 * t209;
t121 = -qJ(4) * t359 + t351;
t74 = t257 * t120 - t121 * t255;
t51 = pkin(4) * t221 - pkin(10) * t163 + t74;
t291 = t222 * t255 + t257 * t359;
t75 = t255 * t120 + t257 * t121;
t59 = -pkin(10) * t291 + t75;
t293 = t258 * t51 + t389 * t59;
t333 = t256 * t344;
t276 = -t165 * t255 + t257 * t333;
t38 = t255 * t86 + t257 * t80;
t30 = pkin(10) * t276 + t38;
t392 = -qJD(5) * t293 + t25 * t389 - t258 * t30;
t391 = -qJD(5) * t398 + t410 * t258 + t411 * t389;
t263 = qJD(1) ^ 2;
t388 = pkin(5) * t153;
t387 = pkin(9) * t261;
t251 = t259 * pkin(9);
t102 = t236 * pkin(3) + qJD(4) - t109;
t79 = pkin(4) * t320 + t102;
t26 = t87 * pkin(5) - qJ(6) * t412 + t79;
t386 = t26 * t412;
t385 = t412 * t87;
t383 = -qJ(6) * t393 + qJD(6) * t261 + t397;
t382 = pkin(5) * t393 + t391;
t211 = t284 * t259;
t381 = -pkin(5) * t353 + qJ(6) * t354 + qJD(6) * t211 - t403;
t202 = qJD(1) * t214;
t203 = qJD(1) * t216;
t281 = t174 * t343 - t186 * t342 - t259 * t202 - t261 * t203;
t310 = t260 * t322;
t66 = qJ(4) * t310 - qJD(4) * t236 - t281;
t267 = -qJD(3) * t193 + t261 * t309;
t304 = pkin(8) * t309;
t72 = t153 * pkin(3) - qJ(4) * t267 + qJD(2) * t241 - t195 * qJD(4) + t304;
t32 = t255 * t72 + t257 * t66;
t316 = t174 * t342 + t186 * t343 - t261 * t202 + t259 * t203;
t73 = -pkin(3) * t310 + t316;
t378 = t73 * t255;
t173 = -pkin(2) * t301 - t212;
t100 = t193 * pkin(3) - t195 * qJ(4) + t173;
t110 = t261 * t174 + t259 * t186;
t103 = -qJ(4) * t236 + t110;
t58 = t255 * t100 + t257 * t103;
t94 = -pkin(4) * t367 + t110;
t377 = pkin(5) * t348 + qJ(6) * t405 - qJD(6) * t227 - t94;
t376 = -qJ(6) * t195 - t400;
t375 = t195 * pkin(5) - t399;
t372 = qJ(4) * t255;
t371 = qJ(4) * t257;
t370 = qJ(6) * t153;
t369 = t285 * t153;
t368 = t171 * t153;
t365 = t195 * t236;
t282 = t236 * t259;
t252 = t256 ^ 2;
t363 = t252 * t263;
t57 = t257 * t100 - t103 * t255;
t36 = pkin(4) * t193 - pkin(10) * t147 + t57;
t44 = -pkin(10) * t320 + t58;
t11 = -t258 * t44 + t36 * t389;
t355 = qJD(6) - t11;
t228 = pkin(4) * t362 + t251;
t347 = t260 ^ 2 - t262 ^ 2;
t249 = -pkin(4) * t257 - pkin(3);
t330 = t236 * t343;
t326 = t102 * t342;
t323 = t252 * t338;
t31 = -t255 * t66 + t257 * t72;
t15 = t153 * pkin(4) - pkin(10) * t265 + t31;
t278 = -t255 * t267 + t257 * t310;
t22 = pkin(10) * t278 + t32;
t4 = t389 * t15 - t258 * t22 - t44 * t324 - t36 * t340;
t319 = -t259 * t208 + t261 * t209;
t317 = 0.2e1 * t323;
t308 = t256 * t263 * t373;
t307 = -0.2e1 * pkin(1) * t323;
t122 = pkin(3) * t359 - t319;
t305 = -t31 * t255 + t32 * t257;
t300 = 0.2e1 * t321 + qJD(2);
t299 = -t208 * t342 - t209 * t343 + t261 * t214 - t259 * t216;
t2 = -t4 - t388;
t12 = t258 * t36 + t389 * t44;
t298 = t12 * t187 + t4;
t297 = -t258 * t59 + t389 * t51;
t3 = t258 * t15 + t389 * t22 + t36 * t324 - t340 * t44;
t290 = t258 * t25 + t389 * t30 + t51 * t324 - t340 * t59;
t288 = t155 * t389 - t258 * t166;
t39 = qJD(5) * t289 + t147 * t340 - t258 * t278 - t389 * t265;
t273 = t389 * t291;
t271 = pkin(1) * (-qJD(2) * t321 + t363);
t270 = t39 + t417;
t85 = -pkin(3) * t333 - t299;
t105 = t163 * t389 - t258 * t291;
t93 = pkin(4) * t291 + t122;
t46 = -pkin(4) * t278 + t73;
t60 = -pkin(4) * t276 + t85;
t40 = -qJD(5) * t303 + t147 * t324 + t258 * t265 - t389 * t278;
t7 = t40 * pkin(5) + t39 * qJ(6) - qJD(6) * t412 + t46;
t264 = t40 + t415;
t210 = t227 * t259;
t204 = qJD(1) * t217;
t191 = -pkin(9) * t361 + t225;
t152 = -pkin(5) * t284 - qJ(6) * t227 + t249;
t123 = pkin(5) * t210 - qJ(6) * t211 + t228;
t104 = t163 * t258 + t273;
t99 = t261 * pkin(5) - t288;
t98 = -qJ(6) * t261 + t398;
t54 = qJD(5) * t105 + t258 * t275 - t276 * t389;
t53 = qJD(5) * t273 + t163 * t340 - t258 * t276 - t275 * t389;
t45 = pkin(5) * t412 + qJ(6) * t87;
t33 = t104 * pkin(5) - t105 * qJ(6) + t93;
t23 = -t39 + t417;
t17 = -t221 * pkin(5) - t297;
t16 = qJ(6) * t221 + t293;
t10 = t187 * qJ(6) + t12;
t9 = -t187 * pkin(5) + t355;
t8 = t54 * pkin(5) + t53 * qJ(6) - t105 * qJD(6) + t60;
t6 = -t164 * pkin(5) - t392;
t5 = qJ(6) * t164 + qJD(6) * t221 + t290;
t1 = qJD(6) * t187 + t3 + t370;
t13 = [0, 0, 0, t317 * t401, -t347 * t317, t300 * t332, -t300 * t333, 0, -t204 * t373 - t217 * t301 + t260 * t307, -t203 * t373 - t216 * t301 + t262 * t307, t195 * t165 + t222 * t267, -t222 * t153 - t195 * t164 - t165 * t193 - t221 * t267, -t165 * t236 + t195 * t333 + t222 * t310 - t267 * t359, t164 * t236 + (t153 * t262 + (-qJD(1) * t221 - t193) * t344) * t256 (-t236 * t256 - t252 * t345) * t344, -t299 * t236 + t217 * t193 + t207 * t153 + t204 * t221 + t173 * t164 + (t316 * t262 + (qJD(1) * t319 + t109) * t344) * t256, -t110 * t333 + t173 * t165 + t217 * t195 + t204 * t222 + t207 * t267 + t236 * t280 - t281 * t359 - t310 * t351, -t102 * t276 - t122 * t278 + t74 * t153 + t57 * t164 + t37 * t193 + t31 * t221 + t291 * t73 + t320 * t85, t102 * t275 + t122 * t265 + t85 * t147 - t75 * t153 + t73 * t163 - t58 * t164 - t38 * t193 - t32 * t221, -t37 * t147 - t31 * t163 - t265 * t74 - t275 * t57 + t276 * t58 + t278 * t75 - t291 * t32 - t320 * t38, t102 * t85 + t122 * t73 + t31 * t74 + t32 * t75 + t37 * t57 + t38 * t58, -t105 * t39 - t412 * t53, t104 * t39 - t105 * t40 - t412 * t54 + t53 * t87, t105 * t153 + t164 * t412 - t187 * t53 - t221 * t39, -t104 * t153 - t164 * t87 - t187 * t54 - t221 * t40, t153 * t221 + t164 * t187, t46 * t104 + t11 * t164 + t297 * t153 + t187 * t392 + t4 * t221 + t93 * t40 + t79 * t54 + t60 * t87, t46 * t105 - t12 * t164 - t153 * t293 - t187 * t290 - t3 * t221 - t93 * t39 + t412 * t60 - t79 * t53, t104 * t7 - t153 * t17 - t164 * t9 - t187 * t6 - t2 * t221 + t26 * t54 + t33 * t40 + t8 * t87, -t1 * t104 - t10 * t54 + t105 * t2 - t16 * t40 - t17 * t39 + t412 * t6 - t5 * t87 - t53 * t9, t1 * t221 + t10 * t164 - t105 * t7 + t153 * t16 + t187 * t5 + t26 * t53 + t33 * t39 - t412 * t8, t1 * t16 + t10 * t5 + t17 * t2 + t26 * t8 + t33 * t7 + t6 * t9; 0, 0, 0, -t363 * t401, t347 * t363, -t262 * t308, t260 * t308, 0, t215 * t301 + t260 * t271 - t304, pkin(8) * t310 + t212 * t301 + t262 * t271, -qJD(3) * t259 ^ 2 * t335 + ((t277 + t309) * t259 - t365) * t261, -t259 * t153 + t193 * t395 - t195 * t393 + t261 * t267, -t236 * t342 + (t236 * t356 + (qJD(2) * t259 - t195) * t260) * t346, t330 + (-t262 * t282 + (t193 + t339) * t260) * t346, t236 * t335, -pkin(2) * t153 - t204 * t261 + t318 * t236 - t215 * t193 + (t173 * t259 + t236 * t387) * qJD(3) + (-t109 * t260 + (-pkin(9) * t344 - t173 * t262) * t259) * t346, -pkin(2) * t267 - pkin(9) * t330 + t110 * t335 - t173 * t395 - t215 * t195 + t204 * t259 - t236 * t350 - t310 * t387, t191 * t153 - t126 * t320 - t102 * t177 + t374 * t193 + (-t31 + (pkin(9) * t320 + t102 * t255) * qJD(3)) * t261 + (-pkin(9) * t278 - t236 * t57 + t378) * t259, -t102 * t178 + t147 * t406 - t192 * t153 - t404 * t193 + t265 * t251 + t257 * t326 + t32 * t261 + t358 * t73 - t393 * t58, -t374 * t147 - t191 * t265 + t192 * t278 - t31 * t358 - t32 * t362 - t404 * t320 + t409 * t58 + t413 * t57, -t102 * t126 + t191 * t31 + t192 * t32 + t404 * t58 + t374 * t57 + (t73 * t259 + t326) * pkin(9), -t211 * t39 + t354 * t412, t210 * t39 - t211 * t40 - t353 * t412 - t354 * t87, t153 * t211 + t187 * t354 + t261 * t39 - t282 * t412, -t153 * t210 - t187 * t353 + t261 * t40 + t282 * t87, -t153 * t261 - t187 * t282, t11 * t393 + t288 * t153 + t187 * t391 + t46 * t210 + t228 * t40 - t4 * t261 + t353 * t79 + t403 * t87, t12 * t282 - t153 * t398 + t187 * t397 + t46 * t211 - t228 * t39 + t3 * t261 + t354 * t79 + t403 * t412, t123 * t40 - t153 * t99 + t187 * t382 + t2 * t261 + t210 * t7 + t26 * t353 + t282 * t9 - t381 * t87, -t1 * t210 - t10 * t353 + t2 * t211 + t354 * t9 - t382 * t412 + t383 * t87 - t39 * t99 - t40 * t98, -t1 * t261 - t10 * t282 + t123 * t39 + t153 * t98 - t187 * t383 - t211 * t7 - t26 * t354 + t381 * t412, t1 * t98 - t10 * t383 + t123 * t7 + t2 * t99 - t26 * t381 - t382 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195 * t193, -t193 ^ 2 + t195 ^ 2, -t193 * t236 + t267, -t153 - t365, t310, -t110 * t236 - t173 * t195 - t316, -t109 * t236 + t173 * t193 + t281, -t153 * t372 + pkin(3) * t278 - t73 * t257 - t57 * t195 - t110 * t320 + (-t76 + (-qJD(4) + t102) * t255) * t193, -pkin(3) * t265 + t102 * t366 - t110 * t147 - t153 * t371 + t193 * t402 + t58 * t195 + t378, t265 * t372 + t278 * t371 - t366 * t57 - t367 * t58 + t305 + t402 * t320 + (qJD(4) * t255 + t76) * t147, -pkin(3) * t73 - t102 * t110 - t57 * t76 - t58 * t77 + (-t255 * t57 + t257 * t58) * qJD(4) + t305 * qJ(4), -t227 * t39 - t405 * t412, -t227 * t40 - t284 * t39 - t348 * t412 + t405 * t87, t153 * t227 - t187 * t405 - t195 * t412, t153 * t284 - t187 * t348 + t195 * t87, -t187 * t195, -t11 * t195 + t187 * t399 + t249 * t40 - t284 * t46 + t348 * t79 - t94 * t87 + t369, t12 * t195 + t187 * t400 + t46 * t227 - t249 * t39 - t405 * t79 - t412 * t94 - t368, t152 * t40 - t187 * t375 + t195 * t9 + t26 * t348 - t284 * t7 + t377 * t87 + t369, t1 * t284 - t10 * t348 - t171 * t40 + t2 * t227 + t285 * t39 + t375 * t412 - t376 * t87 - t405 * t9, -t10 * t195 + t152 * t39 + t187 * t376 - t227 * t7 + t26 * t405 - t377 * t412 + t368, t1 * t171 + t10 * t376 + t152 * t7 - t2 * t285 + t26 * t377 + t375 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147 * t193 - t278, -t193 * t320 + t265, -t147 ^ 2 - t320 ^ 2, t147 * t57 + t320 * t58 + t73, 0, 0, 0, 0, 0, t264, -t270, t264, -t390 - t418, t270, t10 * t87 - t412 * t9 + t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t385, t390 - t418, t23, -t40 + t415, t153, -t412 * t79 + t298, t11 * t187 + t79 * t87 - t3, -t45 * t87 + t298 - t386 + 0.2e1 * t388, pkin(5) * t39 - qJ(6) * t40 + (t10 - t12) * t412 + (t9 - t355) * t87, 0.2e1 * t370 - t26 * t87 + t45 * t412 + (0.2e1 * qJD(6) - t11) * t187 + t3, -pkin(5) * t2 + qJ(6) * t1 + t10 * t355 - t12 * t9 - t26 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t153 + t385, t23, -t187 ^ 2 - t390, -t10 * t187 + t2 + t386;];
tauc_reg  = t13;
