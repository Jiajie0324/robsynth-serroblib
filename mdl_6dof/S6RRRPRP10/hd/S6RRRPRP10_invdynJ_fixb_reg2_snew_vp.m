% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 09:06
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPRP10_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP10_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP10_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPRP10_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPRP10_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP10_invdynJ_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 09:00:16
% EndTime: 2019-05-07 09:01:37
% DurationCPUTime: 27.88s
% Computational Cost: add. (119525->654), mult. (261670->917), div. (0->0), fcn. (210840->12), ass. (0->427)
t398 = cos(qJ(5));
t394 = cos(pkin(6));
t472 = qJD(1) * t394;
t386 = qJD(2) + t472;
t396 = sin(qJ(3));
t399 = cos(qJ(3));
t392 = sin(pkin(6));
t397 = sin(qJ(2));
t471 = qJD(1) * t397;
t454 = t392 * t471;
t363 = t386 * t396 + t399 * t454;
t400 = cos(qJ(2));
t470 = qJD(1) * t400;
t453 = t392 * t470;
t464 = qJDD(1) * t392;
t369 = qJD(2) * t453 + t397 * t464;
t385 = qJDD(1) * t394 + qJDD(2);
t446 = t369 * t396 - t399 * t385;
t327 = qJD(3) * t363 + t446;
t326 = qJDD(5) + t327;
t379 = -qJD(3) + t453;
t391 = sin(pkin(11));
t393 = cos(pkin(11));
t342 = t363 * t391 + t393 * t379;
t343 = t363 * t393 - t379 * t391;
t395 = sin(qJ(5));
t304 = t398 * t342 + t343 * t395;
t306 = -t342 * t395 + t343 * t398;
t494 = t306 * t304;
t225 = -t494 - t326;
t503 = t225 * t395;
t303 = t306 ^ 2;
t361 = -t399 * t386 + t396 * t454;
t356 = qJD(5) + t361;
t527 = t356 ^ 2;
t546 = -t303 - t527;
t184 = t398 * t546 + t503;
t502 = t225 * t398;
t186 = -t395 * t546 + t502;
t121 = t184 * t393 + t186 * t391;
t107 = t184 * t391 - t186 * t393;
t434 = -t369 * t399 - t385 * t396;
t328 = -qJD(3) * t361 - t434;
t463 = qJDD(1) * t400;
t423 = (qJD(2) * t471 - t463) * t392;
t412 = qJDD(3) + t423;
t309 = t393 * t328 + t391 * t412;
t448 = t328 * t391 - t393 * t412;
t410 = -t304 * qJD(5) + t398 * t309 - t395 * t448;
t495 = t304 * t356;
t542 = t410 - t495;
t85 = t107 * t399 - t396 * t542;
t635 = pkin(1) * (t121 * t400 + t397 * t85);
t83 = t107 * t396 + t399 * t542;
t634 = pkin(8) * (-t397 * t121 + t400 * t85) - pkin(1) * t83;
t632 = pkin(2) * t83;
t631 = pkin(9) * t83;
t630 = pkin(2) * t121 + pkin(9) * t85;
t529 = t304 ^ 2;
t276 = t529 - t527;
t192 = -t276 * t395 + t502;
t196 = -t276 * t398 - t503;
t135 = t192 * t393 + t196 * t391;
t140 = t192 * t391 - t196 * t393;
t449 = t309 * t395 + t398 * t448;
t424 = (-qJD(5) + t356) * t306 - t449;
t94 = t140 * t396 - t424 * t399;
t627 = t392 * (t397 * (t140 * t399 + t424 * t396) + t400 * t135) + t394 * t94;
t545 = t303 - t529;
t175 = (qJD(5) + t356) * t306 + t449;
t126 = -t175 * t395 + t398 * t542;
t508 = t542 * t395;
t129 = t175 * t398 + t508;
t74 = t126 * t391 + t129 * t393;
t65 = t396 * t74 + t399 * t545;
t70 = -t126 * t393 + t129 * t391;
t625 = t392 * (t397 * (-t396 * t545 + t399 * t74) - t400 * t70) + t394 * t65;
t623 = qJ(4) * t121;
t619 = -pkin(3) * t121 - pkin(4) * t184;
t618 = -pkin(3) * t542 - qJ(4) * t107;
t612 = pkin(10) * t184;
t611 = pkin(10) * t186;
t539 = t495 + t410;
t277 = -t303 + t527;
t540 = -t494 + t326;
t501 = t540 * t395;
t580 = t398 * t277 + t501;
t220 = t398 * t540;
t581 = -t277 * t395 + t220;
t592 = -t391 * t580 + t393 * t581;
t593 = t391 * t581 + t393 * t580;
t609 = t396 * t592 - t399 * t539;
t610 = t394 * t609 + (t397 * (t396 * t539 + t399 * t592) - t400 * t593) * t392;
t538 = -t527 - t529;
t553 = t398 * t538 - t501;
t556 = t395 * t538 + t220;
t572 = t391 * t553 + t393 * t556;
t607 = pkin(2) * t572;
t214 = -t529 - t303;
t534 = t395 * t539 + t398 * t424;
t536 = t395 * t424 - t398 * t539;
t552 = -t391 * t536 + t393 * t534;
t575 = -t214 * t399 + t396 * t552;
t606 = pkin(2) * t575;
t605 = pkin(9) * t575;
t604 = qJ(4) * t572;
t573 = -t391 * t556 + t393 * t553;
t603 = qJ(4) * t573;
t600 = t396 * t573;
t599 = t397 * t572;
t598 = t399 * t573;
t597 = t400 * t572;
t596 = -pkin(3) * t572 - pkin(4) * t556;
t551 = t391 * t534 + t393 * t536;
t574 = t214 * t396 + t399 * t552;
t595 = -pkin(2) * t551 + pkin(9) * t574;
t594 = pkin(1) * (t397 * t574 - t400 * t551);
t591 = pkin(8) * (t397 * t551 + t400 * t574) - pkin(1) * t575;
t588 = pkin(10) * t553;
t587 = pkin(10) * t556;
t586 = qJ(4) * t551;
t51 = -pkin(3) * t551 - pkin(4) * t536;
t579 = -pkin(4) * t214 + pkin(10) * t534;
t430 = (-t304 * t395 - t306 * t398) * t356;
t487 = t356 * t395;
t274 = t306 * t487;
t486 = t356 * t398;
t458 = t304 * t486;
t439 = t274 - t458;
t530 = -t391 * t430 + t393 * t439;
t531 = t391 * t439 + t393 * t430;
t555 = -t399 * t326 + t396 * t530;
t578 = t394 * t555 + (t397 * (t326 * t396 + t399 * t530) - t400 * t531) * t392;
t462 = t396 * t494;
t432 = -qJD(5) * t306 - t449;
t409 = -t395 * t432 + t458;
t440 = t304 * t487 + t398 * t432;
t532 = t391 * t409 + t393 * t440;
t533 = -t391 * t440 + t393 * t409;
t461 = t399 * t494;
t554 = t396 * t533 + t461;
t577 = t394 * t554 + (t397 * (t399 * t533 - t462) - t400 * t532) * t392;
t576 = -pkin(3) * t214 + qJ(4) * t552;
t568 = pkin(10) * t536;
t567 = qJ(6) * t542;
t311 = t343 * t342;
t544 = -t311 + t327;
t566 = t391 * t544;
t565 = t393 * t544;
t483 = t363 * t361;
t408 = t412 - t483;
t548 = t396 * t408;
t547 = t399 * t408;
t320 = t361 * t342;
t259 = -t320 - t309;
t543 = -t320 + t309;
t349 = t361 * t379;
t299 = t328 + t349;
t522 = sin(qJ(1));
t523 = cos(qJ(1));
t428 = g(1) * t523 + g(2) * t522;
t524 = qJD(1) ^ 2;
t365 = -pkin(1) * t524 + pkin(8) * t464 - t428;
t427 = g(1) * t522 - g(2) * t523;
t467 = t392 * t524;
t407 = qJDD(1) * pkin(1) + pkin(8) * t467 + t427;
t405 = t394 * t407;
t447 = t397 * t365 - t400 * t405;
t479 = t392 * t400;
t330 = g(3) * t479 + t447;
t480 = t392 * t397;
t404 = -g(3) * t480 + t397 * t405;
t331 = t400 * t365 + t404;
t541 = t397 * t330 + t400 * t331;
t245 = pkin(5) * t304 - qJ(6) * t306;
t521 = pkin(2) * t400;
t443 = -pkin(9) * t397 - t521;
t473 = qJD(1) * t392;
t368 = t443 * t473;
t384 = t386 ^ 2;
t290 = t385 * pkin(9) - t384 * pkin(2) + (t368 * t473 + t365) * t400 + t404;
t517 = t394 * g(3);
t401 = -t369 * pkin(9) - t517 + ((-pkin(1) - t521) * qJDD(1) + (-pkin(8) * t473 - t400 * t386 * pkin(9) + (qJD(2) + t386) * t397 * pkin(2)) * qJD(1) - t427) * t392;
t238 = t399 * t290 + t396 * t401;
t332 = pkin(3) * t361 - qJ(4) * t363;
t525 = t379 ^ 2;
t202 = -pkin(3) * t525 + qJ(4) * t412 - t361 * t332 + t238;
t289 = -t385 * pkin(2) - t384 * pkin(9) + (g(3) * t400 + t368 * t471) * t392 + t447;
t209 = -t299 * qJ(4) + (-t363 * t379 + t327) * pkin(3) + t289;
t143 = 0.2e1 * qJD(4) * t343 + t202 * t391 - t393 * t209;
t102 = pkin(4) * t544 + pkin(10) * t259 - t143;
t144 = -0.2e1 * qJD(4) * t342 + t393 * t202 + t391 * t209;
t314 = pkin(4) * t361 - pkin(10) * t343;
t528 = t342 ^ 2;
t111 = -pkin(4) * t528 - pkin(10) * t448 - t361 * t314 + t144;
t62 = t395 * t102 + t398 * t111;
t444 = -t326 * qJ(6) + t304 * t245 - t62;
t537 = -pkin(5) * (t546 + t527) - qJ(6) * t225 - t444;
t294 = (qJD(3) + t379) * t363 + t446;
t172 = t306 * t486 + t395 * t410;
t173 = t398 * t410 - t274;
t117 = t172 * t393 + t173 * t391;
t120 = -t172 * t391 + t173 * t393;
t441 = t396 * t120 - t461;
t535 = t394 * t441 + (t399 * t120 + t462) * t480 - t117 * t479;
t341 = t343 ^ 2;
t526 = t361 ^ 2;
t360 = t363 ^ 2;
t388 = t392 ^ 2;
t520 = pkin(3) * t396;
t519 = pkin(5) * t398;
t518 = pkin(8) * t392;
t61 = -t398 * t102 + t111 * t395;
t37 = t395 * t62 - t398 * t61;
t516 = t37 * t391;
t515 = t37 * t393;
t514 = qJ(6) * t398;
t237 = t290 * t396 - t399 * t401;
t201 = -t412 * pkin(3) - t525 * qJ(4) + t332 * t363 + qJDD(4) + t237;
t147 = t448 * pkin(4) - t528 * pkin(10) + t314 * t343 + t201;
t513 = t147 * t395;
t512 = t147 * t398;
t505 = t201 * t391;
t504 = t201 * t393;
t262 = t311 + t327;
t500 = t262 * t391;
t499 = t262 * t393;
t497 = t289 * t396;
t496 = t289 * t399;
t315 = -t412 - t483;
t493 = t315 * t396;
t492 = t315 * t399;
t490 = t327 * t396;
t489 = t343 * t361;
t488 = t356 * t306;
t485 = t361 * t391;
t484 = t361 * t393;
t482 = t379 * t396;
t481 = t379 * t399;
t468 = t388 * t524;
t378 = t400 * t397 * t468;
t366 = t378 + t385;
t477 = t397 * t366;
t367 = -t378 + t385;
t475 = t400 * t367;
t469 = qJD(6) * t356;
t466 = qJD(3) - t379;
t460 = t396 * t311;
t459 = t399 * t311;
t457 = t400 * t483;
t373 = t386 * t453;
t456 = t373 + t369;
t455 = -pkin(3) * t399 - pkin(2);
t389 = t397 ^ 2;
t452 = t389 * t468;
t390 = t400 ^ 2;
t451 = t390 * t468;
t450 = -qJ(6) * t395 - pkin(4);
t38 = t395 * t61 + t398 * t62;
t82 = t143 * t391 + t393 * t144;
t162 = t237 * t396 + t399 * t238;
t445 = -t386 + t472;
t351 = 0.2e1 * t469;
t436 = t351 - t444;
t52 = -pkin(5) * t527 + t436;
t53 = -t326 * pkin(5) - qJ(6) * t527 + t245 * t306 + qJDD(6) + t61;
t442 = -pkin(5) * t53 + qJ(6) * t52;
t438 = -pkin(3) * t201 + qJ(4) * t82;
t437 = -pkin(5) * t539 + qJ(6) * t424;
t81 = -t143 * t393 + t144 * t391;
t435 = t237 * t399 - t238 * t396;
t433 = -pkin(1) + t443;
t260 = t448 - t489;
t285 = -t526 - t528;
t217 = t285 * t393 - t566;
t255 = t448 + t489;
t426 = -pkin(3) * t255 + qJ(4) * t217 - t504;
t308 = -t341 - t526;
t227 = -t308 * t391 - t499;
t425 = -pkin(3) * t543 + qJ(4) * t227 + t505;
t206 = -t259 * t391 - t260 * t393;
t270 = -t341 - t528;
t422 = -pkin(3) * t270 + qJ(4) * t206 + t82;
t32 = t395 * t52 - t398 * t53;
t33 = t395 * t53 + t398 * t52;
t16 = -t32 * t391 + t33 * t393;
t403 = -t432 * pkin(5) + t147 - t567;
t78 = (pkin(5) * t356 - 0.2e1 * qJD(6)) * t306 + t403;
t18 = pkin(10) * t33 + (t450 - t519) * t78;
t24 = -pkin(10) * t32 + (pkin(5) * t395 - t514) * t78;
t420 = -pkin(3) * t78 + qJ(4) * t16 + t18 * t393 + t24 * t391;
t30 = t38 + t579;
t31 = -t37 - t568;
t419 = t30 * t393 + t31 * t391 + t576;
t49 = (-t214 - t527) * pkin(5) + t436;
t50 = -qJ(6) * t214 + t53;
t27 = t395 * t50 + t398 * t49 + t579;
t28 = -t395 * t49 + t398 * t50 - t568;
t418 = t27 * t393 + t28 * t391 + t576;
t402 = 0.2e1 * qJD(6) * t306 - t403;
t63 = -pkin(5) * t488 + t402 + t567;
t43 = -t611 + t395 * t63 + (pkin(4) + t519) * t542;
t47 = -pkin(5) * t508 + t398 * t63 + t612;
t417 = t391 * t47 + t393 * t43 - t618;
t79 = -pkin(4) * t175 - t512 + t588;
t95 = t513 - t587;
t416 = -pkin(3) * t175 + t391 * t95 + t393 * t79 + t603;
t176 = -t432 + t488;
t64 = t402 + (-t176 - t488) * pkin(5);
t45 = t176 * t450 + t398 * t64 + t588;
t48 = -t176 * t514 - t395 * t64 - t587;
t415 = -pkin(3) * t176 + t391 * t48 + t393 * t45 + t603;
t103 = t512 - t612;
t80 = -pkin(4) * t542 + t513 + t611;
t414 = t103 * t391 + t393 * t80 + t618;
t23 = t38 * t393 - t516;
t34 = -pkin(4) * t147 + pkin(10) * t38;
t411 = -pkin(3) * t147 - pkin(10) * t516 + qJ(4) * t23 + t34 * t393;
t406 = pkin(5) * t540 + qJ(6) * t538 - t53;
t372 = t386 * t454;
t371 = (t389 - t390) * t468;
t370 = -t384 - t451;
t355 = -t452 - t384;
t350 = t392 * t407 + t517;
t348 = -t372 - t423;
t347 = t372 - t423;
t346 = -t373 + t369;
t345 = -t360 + t525;
t344 = t526 - t525;
t336 = -t360 - t525;
t334 = t360 - t526;
t329 = -t526 - t525;
t324 = t399 * t327;
t319 = -t341 + t526;
t318 = -t526 + t528;
t313 = t526 + t360;
t312 = (t361 * t396 + t363 * t399) * t379;
t310 = -t341 + t528;
t298 = t361 * t466 + t434;
t297 = t328 - t349;
t295 = -t363 * t466 - t446;
t292 = t328 * t396 - t363 * t481;
t291 = -t361 * t482 - t324;
t284 = t344 * t396 - t492;
t283 = t345 * t399 + t548;
t273 = -t336 * t396 + t492;
t272 = t336 * t399 + t493;
t269 = t329 * t399 - t548;
t268 = t329 * t396 + t547;
t267 = (-t342 * t393 + t343 * t391) * t361;
t266 = (-t342 * t391 - t343 * t393) * t361;
t254 = t309 * t393 - t343 * t485;
t253 = t309 * t391 + t343 * t484;
t252 = t342 * t484 + t391 * t448;
t251 = -t342 * t485 + t393 * t448;
t244 = -t294 * t399 + t297 * t396;
t242 = t295 * t396 + t299 * t399;
t241 = t267 * t396 - t324;
t235 = t318 * t393 - t500;
t234 = -t319 * t391 + t565;
t233 = t318 * t391 + t499;
t232 = t319 * t393 + t566;
t226 = t308 * t393 - t500;
t219 = t254 * t396 - t459;
t218 = t252 * t396 + t459;
t216 = t285 * t391 + t565;
t205 = -t255 * t393 - t391 * t543;
t204 = t259 * t393 - t260 * t391;
t203 = -t255 * t391 + t393 * t543;
t200 = pkin(2) * t298 + pkin(9) * t273 + t497;
t198 = pkin(2) * t295 + pkin(9) * t269 - t496;
t189 = t235 * t396 + t260 * t399;
t188 = t234 * t396 + t259 * t399;
t167 = t227 * t399 + t396 * t543;
t166 = t227 * t396 - t399 * t543;
t165 = t205 * t396 + t310 * t399;
t164 = t217 * t399 + t255 * t396;
t163 = t217 * t396 - t255 * t399;
t160 = t206 * t399 + t270 * t396;
t159 = t206 * t396 - t270 * t399;
t150 = -pkin(2) * t289 + pkin(9) * t162;
t146 = -qJ(4) * t226 + t504;
t145 = -qJ(4) * t216 + t505;
t141 = pkin(2) * t313 + pkin(9) * t244 + t162;
t109 = -pkin(3) * t226 + t144;
t104 = -pkin(3) * t216 + t143;
t90 = t176 * t396 + t598;
t88 = -t176 * t399 + t600;
t86 = t175 * t396 + t598;
t84 = -t175 * t399 + t600;
t69 = -qJ(4) * t204 - t81;
t68 = t201 * t396 + t399 * t82;
t67 = -t201 * t399 + t396 * t82;
t55 = -pkin(2) * t226 + pkin(9) * t167 + t109 * t399 + t146 * t396;
t54 = -pkin(2) * t216 + pkin(9) * t164 + t104 * t399 + t145 * t396;
t46 = pkin(9) * t160 + t204 * t455 + t396 * t69;
t44 = t619 + t62;
t42 = t103 * t393 - t391 * t80 - t623;
t41 = -t437 + t51;
t40 = t596 + t61;
t39 = -t391 * t79 + t393 * t95 - t604;
t36 = -t406 + t596;
t35 = -0.2e1 * t469 - t537 - t619;
t29 = pkin(9) * t68 + (-qJ(4) * t396 + t455) * t81;
t26 = -t391 * t45 + t393 * t48 - t604;
t25 = -t391 * t43 + t393 * t47 + t623;
t22 = t38 * t391 + t515;
t21 = t147 * t396 + t23 * t399;
t20 = -t147 * t399 + t23 * t396;
t19 = t396 * t42 + t399 * t44 - t630;
t17 = pkin(9) * t86 + t39 * t396 + t399 * t40 - t607;
t15 = t32 * t393 + t33 * t391;
t14 = t16 * t399 + t396 * t78;
t13 = t16 * t396 - t399 * t78;
t12 = -t30 * t391 + t31 * t393 - t586;
t11 = -pkin(3) * t22 - pkin(4) * t37;
t10 = pkin(9) * t90 + t26 * t396 + t36 * t399 - t607;
t9 = t25 * t396 + t35 * t399 + t630;
t8 = -t27 * t391 + t28 * t393 - t586;
t7 = -pkin(10) * t515 - qJ(4) * t22 - t34 * t391;
t6 = t12 * t396 + t399 * t51 + t595;
t5 = -pkin(3) * t15 - pkin(4) * t32 - t442;
t4 = t396 * t8 + t399 * t41 + t595;
t3 = -qJ(4) * t15 - t18 * t391 + t24 * t393;
t2 = -pkin(2) * t22 + pkin(9) * t21 + t11 * t399 + t396 * t7;
t1 = -pkin(2) * t15 + pkin(9) * t14 + t3 * t396 + t399 * t5;
t56 = [0, 0, 0, 0, 0, qJDD(1), t427, t428, 0, 0, (-t388 * t445 * t470 + t369 * t392) * t397, t394 * t371 + (t397 * t348 + t400 * t456) * t392, t394 * t346 + (t477 + t400 * (t384 - t452)) * t392, (t463 + (-qJD(2) + t445) * t471) * t388 * t400, t394 * t347 + (t397 * (-t384 + t451) + t475) * t392, t394 * t385, (-t330 + pkin(1) * (t366 * t400 + t370 * t397)) * t394 + (t400 * t350 + pkin(1) * t348 + pkin(8) * (t370 * t400 - t477)) * t392, -t350 * t480 - t394 * t331 + pkin(1) * (-t392 * t456 + (t355 * t400 - t367 * t397) * t394) + (-t397 * t355 - t475) * t518, pkin(1) * ((-t346 * t400 + t347 * t397) * t394 - (-t389 - t390) * t388 * t467) + (t397 * t346 + t347 * t400) * t518 + t541 * t392, pkin(1) * (t392 * t350 + (-t330 * t400 + t331 * t397) * t394) + t541 * t518, t394 * t292 + (t397 * (t328 * t399 + t363 * t482) - t457) * t392, t394 * t242 + (t397 * (t295 * t399 - t299 * t396) - t400 * t334) * t392, t394 * t283 + (t397 * (-t345 * t396 + t547) - t400 * t297) * t392, t394 * t291 + (t397 * (-t361 * t481 + t490) + t457) * t392, t394 * t284 + (t397 * (t344 * t399 + t493) + t400 * t294) * t392, -t412 * t479 + t394 * t312 + (t361 * t399 - t363 * t396) * t379 * t480, (t198 + pkin(1) * (t269 * t397 + t295 * t400)) * t394 + (t397 * (-pkin(9) * t268 + t497) + t400 * (-pkin(2) * t268 + t237) - pkin(1) * t268 + pkin(8) * (t269 * t400 - t397 * t295)) * t392, (t200 + pkin(1) * (t273 * t397 + t298 * t400)) * t394 + (t397 * (-pkin(9) * t272 + t496) + t400 * (-pkin(2) * t272 + t238) - pkin(1) * t272 + pkin(8) * (t273 * t400 - t397 * t298)) * t392, (t141 + pkin(1) * (t244 * t397 + t313 * t400)) * t394 + (t397 * t435 + pkin(8) * (t244 * t400 - t397 * t313) + t433 * (-t294 * t396 - t297 * t399)) * t392, (t150 + pkin(1) * (t162 * t397 - t289 * t400)) * t394 + (pkin(8) * (t162 * t400 + t397 * t289) - t433 * t435) * t392, t394 * t219 + (t397 * (t254 * t399 + t460) - t400 * t253) * t392, t394 * t165 + (t397 * (t205 * t399 - t310 * t396) - t400 * t203) * t392, t394 * t188 + (t397 * (t234 * t399 - t259 * t396) - t400 * t232) * t392, t394 * t218 + (t397 * (t252 * t399 - t460) + t400 * t251) * t392, t394 * t189 + (t397 * (t235 * t399 - t260 * t396) - t400 * t233) * t392, t394 * t241 + (t397 * (t267 * t399 + t490) - t400 * t266) * t392, (t54 + pkin(1) * (t164 * t397 - t216 * t400)) * t394 + (t397 * (-pkin(9) * t163 - t104 * t396 + t145 * t399) + t400 * (-pkin(2) * t163 - t426) - pkin(1) * t163 + pkin(8) * (t164 * t400 + t397 * t216)) * t392, (t55 + pkin(1) * (t167 * t397 - t226 * t400)) * t394 + (t397 * (-pkin(9) * t166 - t109 * t396 + t146 * t399) + t400 * (-pkin(2) * t166 - t425) - pkin(1) * t166 + pkin(8) * (t167 * t400 + t397 * t226)) * t392, (t46 + pkin(1) * (t160 * t397 - t204 * t400)) * t394 + (t397 * (-pkin(9) * t159 + t204 * t520 + t399 * t69) + t400 * (-pkin(2) * t159 - t422) - pkin(1) * t159 + pkin(8) * (t160 * t400 + t397 * t204)) * t392, (t29 + pkin(1) * (t397 * t68 - t400 * t81)) * t394 + (t397 * (-pkin(9) * t67 + (-qJ(4) * t399 + t520) * t81) + t400 * (-pkin(2) * t67 - t438) - pkin(1) * t67 + pkin(8) * (t397 * t81 + t400 * t68)) * t392, t535, -t625, t610, t577, t627, t578, (t17 + pkin(1) * (t397 * t86 - t597)) * t394 + (t397 * (-pkin(9) * t84 + t39 * t399 - t396 * t40) + t400 * (-pkin(2) * t84 - t416) - pkin(1) * t84 + pkin(8) * (t400 * t86 + t599)) * t392, (t19 - t635) * t394 + (t397 * (-t396 * t44 + t399 * t42 + t631) + t400 * (-t414 + t632) - t634) * t392, (t6 + t594) * t394 + (t397 * (t12 * t399 - t396 * t51 - t605) + t400 * (-t419 - t606) + t591) * t392, (t2 + pkin(1) * (t21 * t397 - t22 * t400)) * t394 + (t397 * (-pkin(9) * t20 - t11 * t396 + t399 * t7) + t400 * (-pkin(2) * t20 - t411) - pkin(1) * t20 + pkin(8) * (t21 * t400 + t397 * t22)) * t392, t535, t610, t625, t578, -t627, t577, (t10 + pkin(1) * (t397 * t90 - t597)) * t394 + (t397 * (-pkin(9) * t88 + t26 * t399 - t36 * t396) + t400 * (-pkin(2) * t88 - t415) - pkin(1) * t88 + pkin(8) * (t400 * t90 + t599)) * t392, (t4 + t594) * t394 + (t397 * (-t396 * t41 + t399 * t8 - t605) + t400 * (-t418 - t606) + t591) * t392, (t9 + t635) * t394 + (t397 * (t25 * t399 - t35 * t396 - t631) + t400 * (-t417 - t632) + t634) * t392, (t1 + pkin(1) * (t14 * t397 - t15 * t400)) * t394 + (t397 * (-pkin(9) * t13 + t3 * t399 - t396 * t5) + t400 * (-pkin(2) * t13 - t420) - pkin(1) * t13 + pkin(8) * (t14 * t400 + t397 * t15)) * t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t378, t371, t346, t378, t347, t385, -t330, -t331, 0, 0, t292, t242, t283, t291, t284, t312, t198, t200, t141, t150, t219, t165, t188, t218, t189, t241, t54, t55, t46, t29, t441, -t65, t609, t554, t94, t555, t17, t19, t6, t2, t441, t609, t65, t555, -t94, t554, t10, t4, t9, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t483, t334, t297, -t483, -t294, t412, -t237, -t238, 0, 0, t253, t203, t232, -t251, t233, t266, t426, t425, t422, t438, t117, -t70, t593, t532, -t135, t531, t416, t414, t419, t411, t117, t593, t70, t531, t135, t532, t415, t418, t417, t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t255, t543, t270, t201, 0, 0, 0, 0, 0, 0, t175, t542, t214, t147, 0, 0, 0, 0, 0, 0, t176, t214, -t542, t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t494, t545, t539, -t494, t424, t326, -t61, -t62, 0, 0, t494, t539, -t545, t326, -t424, -t494, t406, t437, t351 + t537, t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t540, t539, t546, t53;];
tauJ_reg  = t56;
