% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x24]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:43
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRPPR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPPR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:42:42
% EndTime: 2019-03-09 02:42:47
% DurationCPUTime: 2.32s
% Computational Cost: add. (2635->207), mult. (5052->290), div. (0->0), fcn. (5438->8), ass. (0->171)
t158 = cos(qJ(3));
t259 = cos(pkin(10));
t145 = t259 * t158;
t153 = sin(pkin(10));
t156 = sin(qJ(3));
t248 = t153 * t156;
t135 = -t145 + t248;
t132 = t135 ^ 2;
t137 = t153 * t158 + t259 * t156;
t272 = t137 ^ 2;
t281 = -t272 - t132;
t287 = t281 * qJD(1);
t286 = t281 * qJD(4);
t155 = sin(qJ(6));
t146 = sin(pkin(9)) * pkin(1) + pkin(7);
t228 = qJ(4) + t146;
t130 = t228 * t156;
t131 = t228 * t158;
t66 = t259 * t130 + t153 * t131;
t174 = t137 * pkin(5) + t66;
t261 = t155 * t174;
t157 = cos(qJ(6));
t285 = t157 * t174;
t224 = qJD(6) * t155;
t74 = t155 * t137;
t234 = t74 * qJD(1);
t284 = t234 + t224;
t105 = t259 * t131;
t249 = t153 * t130;
t282 = t105 - t249;
t283 = -t135 * pkin(5) + t282;
t184 = -t135 * t282 + t66 * t137;
t277 = qJD(4) * t184;
t274 = t184 * qJD(1);
t151 = t155 ^ 2;
t152 = t157 ^ 2;
t141 = t151 - t152;
t77 = t157 * t135;
t191 = 0.2e1 * t155 * t77;
t165 = qJD(1) * t191 - t141 * qJD(3);
t271 = -t283 / 0.2e1;
t270 = pkin(4) + pkin(8);
t188 = t105 / 0.2e1;
t267 = t137 * pkin(4);
t150 = t156 * pkin(3);
t265 = qJD(3) * pkin(3);
t148 = -cos(pkin(9)) * pkin(1) - pkin(2);
t176 = -t158 * pkin(3) + t148;
t161 = -t137 * qJ(5) + t176;
t41 = t270 * t135 + t161;
t18 = t155 * t41 - t285;
t256 = t135 * qJ(5);
t190 = t150 + t256;
t57 = t270 * t137 + t190;
t263 = t155 * t57;
t1 = -t263 * t137 + (t18 + t285) * t135;
t264 = t1 * qJD(1);
t262 = t157 * t57;
t260 = t283 * t155;
t255 = t135 * t153;
t14 = t18 * t137 + t283 * t77;
t254 = t14 * qJD(1);
t144 = t153 * pkin(3) + qJ(5);
t253 = t144 * t135;
t252 = t144 * t137;
t147 = -t259 * pkin(3) - pkin(4);
t251 = t147 * t137;
t19 = t157 * t41 + t261;
t15 = t135 * t260 - t19 * t137;
t250 = t15 * qJD(1);
t63 = t135 * pkin(4) + t161;
t79 = t190 + t267;
t20 = -t79 * t135 - t63 * t137;
t247 = t20 * qJD(1);
t21 = t63 * t135 - t79 * t137;
t246 = t21 * qJD(1);
t149 = t150 / 0.2e1;
t29 = t149 + (pkin(4) / 0.2e1 - t147 / 0.2e1) * t137 + (qJ(5) / 0.2e1 + t144 / 0.2e1) * t135;
t240 = t29 * qJD(1);
t32 = t281 * t155;
t239 = t32 * qJD(1);
t208 = t272 - t132;
t58 = t208 * t155;
t238 = t58 * qJD(1);
t59 = t208 * t157;
t237 = t59 * qJD(1);
t60 = t281 * t157;
t236 = t60 * qJD(1);
t192 = t259 * t137;
t160 = (-t255 / 0.2e1 - t192 / 0.2e1) * pkin(3);
t62 = -t150 / 0.2e1 + t160;
t235 = t62 * qJD(1);
t233 = t74 * qJD(6);
t232 = t77 * qJD(1);
t231 = t77 * qJD(3);
t227 = qJD(1) * t155;
t226 = qJD(1) * t158;
t225 = qJD(5) * t155;
t223 = qJD(6) * t157;
t129 = t248 / 0.2e1 - t145 / 0.2e1;
t222 = t129 * qJD(1);
t221 = t272 * qJD(1);
t220 = t272 * qJD(5);
t219 = t135 * qJD(1);
t124 = t135 * qJD(3);
t218 = t135 * qJD(4);
t217 = t135 * qJD(5);
t216 = t137 * qJD(1);
t126 = t137 * qJD(3);
t125 = t137 * qJD(4);
t215 = t137 * qJD(5);
t142 = -t156 ^ 2 + t158 ^ 2;
t214 = t142 * qJD(1);
t213 = t155 * qJD(3);
t212 = t156 * qJD(3);
t211 = t157 * qJD(3);
t210 = t158 * qJD(3);
t207 = t283 / 0.2e1 + t271;
t206 = t63 * t216;
t205 = t137 * t224;
t204 = t137 * t223;
t203 = t135 * t216;
t202 = t135 * t126;
t201 = t148 * t156 * qJD(1);
t200 = t148 * t226;
t199 = t155 * t219;
t198 = t135 * t213;
t197 = t155 * t216;
t196 = t272 * t227;
t195 = t156 * t226;
t194 = t155 * t223;
t116 = t157 * t216;
t193 = t155 * t211;
t189 = qJD(6) + t216;
t185 = qJD(3) * t191;
t5 = t63 * t79;
t183 = t5 * qJD(1);
t2 = -t262 * t137 + (t19 - t261) * t135;
t182 = t2 * qJD(1);
t16 = t176 * t150;
t181 = t16 * qJD(1);
t143 = -pkin(8) + t147;
t178 = t135 * t143 + t252;
t64 = t188 - t105 / 0.2e1;
t177 = t64 * qJD(1) + t144 * qJD(3);
t175 = t189 * t155;
t171 = -t143 * t137 / 0.2e1 + t253 / 0.2e1;
t162 = t57 / 0.2e1 + t171;
t8 = -t207 * t155 + t162 * t157;
t173 = -t8 * qJD(1) + t144 * t213;
t6 = t162 * t155 + t207 * t157;
t172 = -t6 * qJD(1) - t144 * t211;
t76 = (t152 / 0.2e1 - t151 / 0.2e1) * t135;
t170 = -t76 * qJD(1) + t193;
t169 = t135 * t175;
t168 = t129 * qJD(6) + t203;
t167 = t132 * t157 * t227 + t76 * qJD(3);
t80 = t141 * t132;
t166 = t80 * qJD(1) + t185;
t164 = -t198 + t204;
t117 = t129 * qJD(3);
t115 = t137 * t211;
t114 = t135 * t211;
t97 = -t116 - t223;
t72 = t76 * qJD(6);
t61 = t149 + t160;
t33 = 0.2e1 * t188 - t249;
t30 = -t253 / 0.2e1 + t251 / 0.2e1 + t149 + t256 / 0.2e1 + t267 / 0.2e1;
t9 = -t260 / 0.2e1 - t262 / 0.2e1 + t155 * t271 + t171 * t157;
t7 = -t263 / 0.2e1 + t171 * t155 + t283 * t157;
t3 = [0, 0, 0, 0, t156 * t210, t142 * qJD(3), 0, 0, 0, t148 * t212, t148 * t210, -t286, t16 * qJD(3) + t277, -t286, t20 * qJD(3) + t135 * t215, t21 * qJD(3) + t220, t5 * qJD(3) - t63 * t215 + t277, t132 * t194 + t151 * t202, -t80 * qJD(6) + t137 * t185, t58 * qJD(3) + t135 * t204, t59 * qJD(3) - t135 * t205, -t202, t1 * qJD(3) - t60 * qJD(4) + t15 * qJD(6) + t272 * t225, t2 * qJD(3) + t32 * qJD(4) + t14 * qJD(6) + t157 * t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, t195, t214, t210, -t212, 0, -t146 * t210 + t201, t146 * t212 + t200 (t259 * t135 - t137 * t153) * t265 (-t153 * t66 - t259 * t282) * t265 + t61 * qJD(4) + t181 (-t147 * t135 - t252) * qJD(3) - t217, qJD(3) * t282 + t247, -qJD(3) * t66 + t246 (-t144 * t66 + t147 * t282) * qJD(3) + t30 * qJD(4) + t33 * qJD(5) + t183, t72 + (t151 * t219 + t193) * t137, -0.2e1 * t135 * t194 + t165 * t137, -t114 + t238, t198 + t237, -t168, t264 + (-t157 * t178 - t261) * qJD(3) - t77 * qJD(5) + t7 * qJD(6), -t174 * t211 + t9 * qJD(6) + (qJD(3) * t178 + t217) * t155 + t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t287, t61 * qJD(3) + t274, -t287, 0, 0, t30 * qJD(3) + t274, 0, 0, 0, 0, 0, -t236, t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, t203, t221, t33 * qJD(3) - t206, 0, 0, 0, 0, 0, t196 - t231, t157 * t221 + t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t167, -t166, t189 * t77, -t169, -t117, t7 * qJD(3) - t19 * qJD(6) + t250, t9 * qJD(3) + t18 * qJD(6) + t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t212, -t210, 0 (-t192 - t255) * t265, 0, t126, -t124 (t251 - t253) * qJD(3) + t215, 0, 0, 0, 0, 0, t164, -t114 - t205; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135 * t224 + t115, -t135 * t223 - t137 * t213; 0, 0, 0, 0, -t195, -t214, 0, 0, 0, -t201, -t200, 0, t62 * qJD(4) - t181, 0, t125 - t247, -t218 - t246, -t29 * qJD(4) + t64 * qJD(5) - t183, -t151 * t203 + t72, -0.2e1 * t157 * t169, -t205 - t238, -t204 - t237, t168, t6 * qJD(6) - t155 * t218 - t264, -t77 * qJD(4) + t8 * qJD(6) - t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t144 * qJD(5), -t194, t141 * qJD(6), 0, 0, 0, t144 * t223 + t225, qJD(5) * t157 - t144 * t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235, 0, t216, -t219, -t240, 0, 0, 0, 0, 0, -t199, -t232; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t177, 0, 0, 0, 0, 0, t213, t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, -t165, -t175, t97, t222, -t143 * t224 - t172, -t143 * t223 - t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t287, -t62 * qJD(3) - t274, t287, -t126, t124, t29 * qJD(3) - t215 - t274, 0, 0, 0, 0, 0, -t164 + t236, t231 + t233 - t239; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235, 0, -t216, t219, t240, 0, 0, 0, 0, 0, t199, t232; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, -t221, -t64 * qJD(3) + t125 + t206, 0, 0, 0, 0, 0, -t196 - t233 (-qJD(6) * t137 - t221) * t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t177, 0, 0, 0, 0, 0, -t213, -t211; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t284, -t189 * t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t167, t166 (-t157 * t219 + t213) * t137, t135 * t197 + t115, -t117, -t6 * qJD(3) + t74 * qJD(5) + t125 * t157 - t250, -t8 * qJD(3) - t74 * qJD(4) + t157 * t215 - t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, t165, t197, t116, -t222, t172, t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116, -t234; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t234, t116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t3;
