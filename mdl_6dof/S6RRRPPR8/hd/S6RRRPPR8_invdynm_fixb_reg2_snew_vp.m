% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRPPR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 06:19
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRPPR8_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR8_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR8_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR8_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR8_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPR8_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 06:18:22
% EndTime: 2019-05-07 06:19:25
% DurationCPUTime: 69.87s
% Computational Cost: add. (191992->1015), mult. (418465->1251), div. (0->0), fcn. (320379->10), ass. (0->655)
t2017 = sin(qJ(1));
t2021 = cos(qJ(1));
t2016 = sin(qJ(2));
t2020 = cos(qJ(2));
t2015 = sin(qJ(3));
t2019 = cos(qJ(3));
t2013 = cos(pkin(6));
t2228 = qJD(1) * t2013;
t2150 = qJD(2) + t2228;
t2012 = sin(pkin(6));
t2190 = t2012 * t2016;
t2168 = qJD(1) * t2190;
t1966 = t2015 * t2150 + t2019 * t2168;
t2170 = t2016 * qJDD(1);
t2227 = qJD(1) * t2020;
t1977 = (qJD(2) * t2227 + t2170) * t2012;
t2005 = qJDD(1) * t2013 + qJDD(2);
t1895 = t1966 * qJD(3) + t2015 * t1977 - t2019 * t2005;
t2189 = t2012 * t2020;
t1999 = qJD(1) * t2189 - qJD(3);
t1944 = t1966 * t1999;
t2289 = -t1944 + t1895;
t2255 = t1999 ^ 2;
t1964 = t2015 * t2168 - t2019 * t2150;
t2257 = t1964 ^ 2;
t2285 = -t2255 - t2257;
t1912 = t1966 * t1964;
t2171 = qJDD(1) * t2012;
t1978 = -qJD(2) * t2168 + t2020 * t2171;
t1972 = -qJDD(3) + t1978;
t2046 = -t1972 - t1912;
t2343 = t2046 * t2015;
t2339 = t2285 * t2019 - t2343;
t2357 = t2016 * t2289 + t2020 * t2339;
t2346 = t2019 * t2046;
t2341 = t2285 * t2015 + t2346;
t2360 = t2016 * t2339 - t2020 * t2289;
t2388 = -t2012 * t2341 + t2013 * t2360;
t2414 = pkin(7) * (t2017 * t2357 + t2021 * t2388);
t2417 = pkin(7) * (t2017 * t2388 - t2021 * t2357);
t2392 = t2012 * t2360 + t2013 * t2341;
t2411 = (t2012 * t2392 + t2013 * t2388) * pkin(8);
t2437 = pkin(1) * t2388;
t2434 = pkin(1) * t2392;
t2092 = t2019 * t1977 + t2015 * t2005;
t2051 = qJD(3) * t1964 - t2092;
t2195 = t1999 * t1964;
t2287 = t2195 - t2051;
t2221 = t2287 * t2015;
t1758 = t2289 * t2019 + t2221;
t2256 = t1966 ^ 2;
t2283 = t2257 - t2256;
t2114 = t1758 * t2016 - t2020 * t2283;
t2334 = -t2289 * t2015 + t2019 * t2287;
t1617 = t2012 * t2334 + t2013 * t2114;
t1703 = t1758 * t2020 + t2016 * t2283;
t2448 = t1617 * t2017 - t1703 * t2021;
t2447 = t1617 * t2021 + t1703 * t2017;
t2290 = -t1944 - t1895;
t1929 = t2257 - t2255;
t2291 = -t1912 + t1972;
t2312 = t2291 * t2015;
t2365 = t1929 * t2019 + t2312;
t2385 = t2290 * t2016 + t2020 * t2365;
t2318 = t2019 * t2291;
t1804 = -t1929 * t2015 + t2318;
t2387 = t2016 * t2365 - t2290 * t2020;
t2438 = t2012 * t1804 + t2013 * t2387;
t2451 = t2017 * t2438 - t2021 * t2385;
t2443 = t2017 * t2385 + t2021 * t2438;
t2406 = pkin(8) * t2357;
t1662 = t2013 * t1804 - t2012 * t2387;
t1614 = t2012 * t2114 - t2013 * t2334;
t1907 = pkin(3) * t1964 - qJ(4) * t1966;
t2001 = g(1) * t2021 + g(2) * t2017;
t2022 = qJD(1) ^ 2;
t1973 = -pkin(1) * t2022 + pkin(8) * t2171 - t2001;
t2248 = pkin(2) * t2020;
t2143 = -pkin(9) * t2016 - t2248;
t2229 = qJD(1) * t2012;
t1976 = t2143 * t2229;
t2000 = t2017 * g(1) - t2021 * g(2);
t2245 = pkin(8) * t2012;
t2042 = qJDD(1) * pkin(1) + t2022 * t2245 + t2000;
t2039 = t2013 * t2042;
t2034 = -g(3) * t2190 + t2016 * t2039;
t2145 = t2150 ^ 2;
t1822 = t2005 * pkin(9) - t2145 * pkin(2) + (t1976 * t2229 + t1973) * t2020 + t2034;
t2131 = t2150 * qJD(1);
t2079 = t2016 * t2131;
t2080 = t2020 * t2131;
t2243 = t2013 * g(3);
t1823 = -t1978 * pkin(2) - t1977 * pkin(9) - t2243 + (pkin(2) * t2079 - pkin(9) * t2080 - t2042) * t2012;
t1726 = t2015 * t1822 - t2019 * t1823;
t2068 = t1972 * pkin(3) - t2255 * qJ(4) + qJDD(4) + t1726;
t1670 = t1966 * t1907 + t2068;
t2240 = qJ(4) * t2285;
t2033 = pkin(3) * t2046 - t1670 + t2240;
t2381 = pkin(2) * t2341;
t1592 = -t2033 - t2381;
t2377 = pkin(9) * t2339;
t2440 = -pkin(2) * t2289 + t2377;
t2286 = t2195 + t2051;
t2284 = t2256 - t2255;
t2362 = t2284 * t2015 + t2346;
t2384 = -t2016 * t2286 + t2020 * t2362;
t2366 = -t2019 * t2284 + t2343;
t2386 = t2016 * t2362 + t2020 * t2286;
t2420 = -t2012 * t2366 + t2013 * t2386;
t2419 = -t2017 * t2420 + t2021 * t2384;
t2418 = t2017 * t2384 + t2021 * t2420;
t2297 = t2015 * t2290;
t2342 = t2019 * t2286 + t2297;
t2282 = t2257 + t2256;
t2317 = t2020 * t2282;
t2295 = t2019 * t2290;
t2338 = -t2286 * t2015 + t2295;
t2359 = t2016 * t2338 + t2317;
t2389 = -t2012 * t2342 + t2013 * t2359;
t2436 = pkin(1) * t2389;
t1914 = -t2256 - t2255;
t1796 = -t1914 * t2015 + t2318;
t2431 = t1796 * t2016;
t2358 = t2020 * t2287 - t2431;
t1793 = t1914 * t2019 + t2312;
t2429 = t2012 * t1793;
t2390 = t2013 * t2358 + t2429;
t2435 = pkin(1) * t2390;
t2393 = t2012 * t2359 + t2013 * t2342;
t2433 = pkin(1) * t2393;
t2426 = t2013 * t1793;
t2394 = t2012 * t2358 - t2426;
t2432 = pkin(1) * t2394;
t2382 = pkin(2) * t1793;
t2378 = pkin(9) * t1793;
t2379 = pkin(9) * t1796;
t2376 = pkin(9) * t2341;
t2430 = t1796 * t2020;
t2421 = t2012 * t2386 + t2013 * t2366;
t2324 = t2016 * t2282;
t2356 = t2020 * t2338 - t2324;
t2416 = pkin(7) * (-t2017 * t2389 + t2021 * t2356);
t2355 = -t2016 * t2287 - t2430;
t2415 = pkin(7) * (-t2017 * t2390 + t2021 * t2355);
t2413 = pkin(7) * (t2017 * t2356 + t2021 * t2389);
t2412 = pkin(7) * (t2017 * t2355 + t2021 * t2390);
t2410 = (-t2012 * t2393 - t2013 * t2389) * pkin(8);
t2409 = (-t2012 * t2394 - t2013 * t2390) * pkin(8);
t2408 = pkin(8) * t2355;
t2407 = pkin(8) * t2356;
t2383 = 2 * qJD(4);
t2380 = pkin(2) * t2342;
t2375 = pkin(9) * t2342;
t2147 = t2016 * t1973 - t2020 * t2039;
t1821 = (qJD(1) * t1976 * t2016 + g(3) * t2020) * t2012 - t2005 * pkin(2) - t2145 * pkin(9) + t2147;
t2352 = qJ(4) * t2287;
t2030 = t1895 * pkin(3) + t1821 - t2352;
t2029 = t1966 * t2383 - t2030;
t1628 = t2029 - pkin(3) * (t2289 - t1944);
t2332 = pkin(2) * t2282;
t2361 = pkin(9) * t2338 + t2332;
t2353 = qJ(4) * t2282;
t2351 = qJ(4) * (t2291 + t1972);
t1727 = t2019 * t1822 + t2015 * t1823;
t2071 = -t2255 * pkin(3) + t1727;
t2041 = t1964 * t1907 + t1999 * t2383 - t2071;
t2340 = -pkin(3) * t1914 - t2041 - t2351;
t2193 = t1999 * t2019;
t2163 = t1964 * t2193;
t2074 = t1895 * t2015 - t2163;
t2165 = t2016 * t1912;
t2267 = t2020 * t2074 - t2165;
t2194 = t1999 * t2015;
t2136 = -t2019 * t1895 - t1964 * t2194;
t2164 = t2020 * t1912;
t2268 = t2016 * t2074 + t2164;
t2306 = -t2012 * t2136 + t2013 * t2268;
t2335 = -t2017 * t2306 + t2021 * t2267;
t2333 = t2017 * t2267 + t2021 * t2306;
t2330 = qJ(4) * t2289;
t2014 = sin(qJ(6));
t2018 = cos(qJ(6));
t1920 = t1964 * t2014 - t2018 * t1999;
t1922 = t1964 * t2018 + t1999 * t2014;
t1863 = t1922 * t1920;
t1892 = qJDD(6) - t2051;
t2292 = -t1863 + t1892;
t2325 = t2014 * t2292;
t1927 = t1966 * t2194;
t2174 = -t2019 * t2051 + t1927;
t2265 = t2020 * t2174 + t2165;
t2321 = t2017 * t2265;
t2319 = t2018 * t2292;
t2314 = t2021 * t2265;
t2307 = t2012 * t2268 + t2013 * t2136;
t2135 = -t1927 + t2163;
t2188 = t2013 * t2016;
t2070 = (t1964 * t2015 + t1966 * t2019) * t1999;
t2269 = t2013 * t2020 * t1972 - t2012 * t2070;
t2259 = t2135 * t2188 + t2269;
t2200 = t1972 * t2016;
t2266 = t2020 * t2135 - t2200;
t2305 = t2017 * t2266 + t2021 * t2259;
t2304 = -t2017 * t2259 + t2021 * t2266;
t2241 = qJ(4) * t2290;
t2303 = qJ(5) * (t2290 - t1895);
t2009 = t2012 ^ 2;
t2192 = t2009 * t2022;
t2302 = t2009 * (-t2013 * t2022 + t2131);
t2137 = -t1966 * t2193 - t2015 * t2051;
t2300 = t2012 * t2137;
t2298 = t2013 * t2137;
t2250 = -pkin(4) - pkin(10);
t1926 = pkin(4) * t1999 - qJ(5) * t1966;
t2281 = t1966 * t1926 + qJDD(5);
t2278 = t2257 * qJ(5) - t2281;
t1575 = t2250 * t1895 + t2029 - t2051 * pkin(5) + (pkin(5) * t1964 + (pkin(3) + pkin(10)) * t1966) * t1999 - t2278;
t1908 = pkin(5) * t1966 - pkin(10) * t1964;
t2279 = t1972 * pkin(4) + qJ(5) * t2286;
t2040 = t2068 + t2279;
t2155 = -pkin(4) * t1964 - t1907;
t2253 = -2 * qJD(5);
t2144 = t2253 - t2155;
t1583 = -t2255 * pkin(5) + t1972 * pkin(10) + (-t1908 + t2144) * t1966 + t2040;
t1532 = -t2018 * t1575 + t2014 * t1583;
t1533 = t1575 * t2014 + t1583 * t2018;
t2293 = -t2018 * t1532 + t2014 * t1533;
t1956 = t2257 * pkin(4);
t2254 = -2 * qJD(4);
t2288 = -t1956 + t2071 + (t2254 - t1926) * t1999;
t1492 = t2014 * t1532 + t2018 * t1533;
t2252 = 2 * qJD(5);
t2181 = t2252 - t1907;
t2231 = t1972 * qJ(4);
t2233 = t1895 * qJ(5);
t1588 = -t2231 + t2233 - t1972 * pkin(5) - t2255 * pkin(10) + (t1908 + t2181) * t1964 + t2288;
t2179 = pkin(5) * t1588 - pkin(10) * t1492;
t2251 = pkin(3) + pkin(4);
t2276 = qJ(4) * t1588 - t1492 * t2251 + t2179;
t1597 = t1966 * t2144 + t2040;
t2031 = t1964 * t2181 + t2288;
t2028 = t2031 - t2231;
t1600 = t2028 + t2233;
t2275 = qJ(4) * t1600 - t1597 * t2251;
t1957 = qJD(6) + t1966;
t2148 = t2014 * t1895 - t2018 * t1972;
t1745 = (qJD(6) - t1957) * t1922 + t2148;
t1789 = -t1920 * qJD(6) + t2018 * t1895 + t2014 * t1972;
t2204 = t1957 * t1920;
t1748 = -t1789 - t2204;
t1635 = -t1745 * t2018 - t2014 * t1748;
t1919 = t1920 ^ 2;
t2258 = t1922 ^ 2;
t1791 = -t1919 - t2258;
t2087 = -pkin(5) * t1791 + pkin(10) * t1635 + t1492;
t2274 = qJ(4) * t1791 - t1635 * t2251 - t2087;
t1954 = t1957 ^ 2;
t1811 = -t1954 - t1919;
t1698 = t1811 * t2018 - t2325;
t1744 = (qJD(6) + t1957) * t1922 + t2148;
t2183 = t2018 * t1588;
t2158 = pkin(5) * t1744 - pkin(10) * t1698 + t2183;
t2273 = qJ(4) * t1744 - t1698 * t2251 + t2158;
t2157 = -t1954 - t2258;
t1779 = t1863 + t1892;
t2224 = t1779 * t2018;
t1708 = -t2014 * t2157 - t2224;
t1747 = t1789 - t2204;
t1584 = t2014 * t1588;
t2159 = -pkin(5) * t1747 + pkin(10) * t1708 + t1584;
t2272 = qJ(4) * t1747 - t1708 * t2251 - t2159;
t1846 = (-qJD(3) - t1999) * t1964 + t2092;
t2271 = t1846 * t2251 - t2241;
t2270 = t1972 * t2189 + t2013 * t2070;
t2264 = (t2289 + t1895) * pkin(4) + (t2285 + t2257) * qJ(5);
t2047 = -t2013 * t2164 + t2174 * t2188 - t2300;
t2263 = t2021 * t2047 + t2321;
t2262 = -t2017 * t2047 + t2314;
t2261 = -t1914 * t2251 + t2233 - t2351;
t2260 = t2135 * t2190 + t2270;
t2249 = pkin(2) * t2016;
t2246 = pkin(3) * t2019;
t2244 = t1895 * pkin(4);
t2239 = qJ(4) * t2019;
t2238 = qJ(5) * t1588;
t2237 = qJ(5) * t1597;
t2236 = qJ(5) * t1600;
t2235 = qJ(5) * t2046;
t2234 = qJ(5) * t2291;
t2230 = pkin(3) - t2250;
t2223 = t1821 * t2015;
t2222 = t1821 * t2019;
t2203 = t1957 * t1922;
t2202 = t1957 * t2014;
t2201 = t1957 * t2018;
t1998 = t2020 * t2016 * t2192;
t1974 = -t1998 + t2005;
t2199 = t1974 * t2016;
t2198 = t1974 * t2020;
t1975 = t1998 + t2005;
t2197 = t1975 * t2016;
t2196 = t1975 * t2020;
t2191 = t2012 * t2005;
t2186 = t2014 * t1779;
t1946 = t2012 * t2042 + t2243;
t2185 = t2016 * t1946;
t2182 = t2020 * t1946;
t2010 = t2016 ^ 2;
t2011 = t2020 ^ 2;
t2172 = t2010 + t2011;
t2169 = t1954 - t2258;
t2167 = t2015 * t1863;
t2166 = t2019 * t1863;
t2162 = t2010 * t2192;
t2161 = t2011 * t2192;
t1697 = t2014 * t1811 + t2319;
t2160 = -pkin(5) * t1697 + t1532;
t2156 = -qJ(4) * t2015 - pkin(2);
t1490 = pkin(5) * t2293;
t2154 = -qJ(5) * t1492 + t1490;
t2153 = -qJ(5) * t1747 - t2183;
t1633 = -t1745 * t2014 + t1748 * t2018;
t1631 = pkin(5) * t1633;
t2152 = -qJ(5) * t1635 + t1631;
t1622 = t1726 * t2015 + t2019 * t1727;
t2146 = -t2000 * t2017 - t2021 * t2001;
t1997 = qJDD(1) * t2021 - t2017 * t2022;
t2142 = -pkin(7) * t1997 - g(3) * t2017;
t1655 = -t2041 - t2231;
t2140 = -pkin(3) * t1670 + qJ(4) * t1655;
t2139 = pkin(3) * t2286 + t2241;
t1955 = -t2162 - t2145;
t1906 = -t1955 * t2016 - t2198;
t2134 = pkin(8) * t1906 - t2185;
t1982 = -t2145 - t2161;
t1917 = t1982 * t2020 - t2197;
t2133 = pkin(8) * t1917 + t2182;
t2132 = -qJ(5) * t1744 - t1584;
t1481 = t1492 * t2015 + t1588 * t2019;
t2130 = t1481 * t2016 + t2020 * t2293;
t1549 = t1597 * t2015 + t1600 * t2019;
t1671 = (-pkin(3) * t1999 + t2254) * t1966 + t2030;
t1610 = t1671 + t2244 + t2278;
t2129 = t1549 * t2016 - t1610 * t2020;
t1573 = t1655 * t2019 + t1670 * t2015;
t2128 = t1573 * t2016 - t1671 * t2020;
t1596 = t1635 * t2015 + t1791 * t2019;
t2127 = t1596 * t2016 + t1633 * t2020;
t1634 = -t1744 * t2018 - t1747 * t2014;
t1862 = -t1919 + t2258;
t1602 = t1634 * t2015 + t1862 * t2019;
t1632 = -t2014 * t1744 + t1747 * t2018;
t2126 = t1602 * t2016 + t1632 * t2020;
t1612 = t1698 * t2015 + t1744 * t2019;
t2125 = t1612 * t2016 + t1697 * t2020;
t1620 = t1708 * t2015 + t1747 * t2019;
t1707 = t2018 * t2157 - t2186;
t2124 = t1620 * t2016 + t1707 * t2020;
t2123 = t1622 * t2016 - t1821 * t2020;
t1723 = -t2014 * t2169 + t2319;
t1625 = t1723 * t2015 - t1748 * t2019;
t1721 = t2018 * t2169 + t2325;
t2122 = t1625 * t2016 + t1721 * t2020;
t1878 = t1919 - t1954;
t1724 = t1878 * t2018 - t2186;
t1626 = t1724 * t2015 - t1745 * t2019;
t1722 = t1878 * t2014 + t2224;
t2121 = t1626 * t2016 + t1722 * t2020;
t2073 = -qJD(6) * t1922 - t2148;
t1737 = -t1920 * t2201 + t2014 * t2073;
t1676 = -t1737 * t2015 - t2166;
t1736 = -t1920 * t2202 - t2018 * t2073;
t2120 = t1676 * t2016 - t1736 * t2020;
t1739 = t1789 * t2018 - t1922 * t2202;
t1677 = t1739 * t2015 + t2166;
t1738 = t1789 * t2014 + t1922 * t2201;
t2119 = t1677 * t2016 + t1738 * t2020;
t1621 = -t1726 * t2019 + t1727 * t2015;
t1781 = (-t1920 * t2018 + t1922 * t2014) * t1957;
t1735 = t1781 * t2015 + t1892 * t2019;
t1780 = (-t1920 * t2014 - t1922 * t2018) * t1957;
t2118 = t1735 * t2016 + t1780 * t2020;
t1756 = -t1846 * t2015 - t2295;
t2116 = t1756 * t2016 - t2317;
t1847 = (qJD(3) - t1999) * t1964 - t2092;
t2108 = t1847 * t2020 + t2431;
t1904 = g(3) * t2189 + t2147;
t1905 = t2020 * t1973 + t2034;
t2099 = -t2020 * t1904 + t2016 * t1905;
t1792 = t1904 * t2016 + t1905 * t2020;
t1986 = t2012 * t2080;
t1935 = t1986 + t1977;
t1985 = t2012 * t2079;
t1939 = t1978 - t1985;
t2098 = t1935 * t2020 + t1939 * t2016;
t1937 = -t1986 + t1977;
t1938 = t1978 + t1985;
t2097 = -t1937 * t2020 + t1938 * t2016;
t2096 = t1955 * t2020 - t2199;
t1981 = -t2145 + t2161;
t2095 = t1981 * t2016 + t2198;
t1980 = t2145 - t2162;
t2094 = t1980 * t2020 + t2197;
t2093 = t1982 * t2016 + t2196;
t2091 = t2000 * t2021 - t2001 * t2017;
t2088 = -qJ(5) * t1698 - t2160;
t2082 = -qJ(5) * t1791 + t2293;
t2081 = t2012 * t2131;
t2075 = t2016 * t2174 - t2164;
t2072 = -pkin(5) * t1707 + t1533;
t2069 = -t2012 * t2164 + t2174 * t2190 + t2298;
t1456 = t2230 * t2293 - t2238;
t1457 = qJ(4) * t2293 + t2154;
t1480 = -t1492 * t2019 + t1588 * t2015;
t1440 = -pkin(9) * t1480 - t1456 * t2015 + t1457 * t2019;
t1450 = -pkin(2) * t1480 - t2276;
t1462 = t1481 * t2020 - t2016 * t2293;
t2066 = pkin(8) * t1462 + t1440 * t2016 + t1450 * t2020;
t1471 = t1633 * t2230 + t2082;
t1535 = qJ(4) * t1633 + t2152;
t1595 = -t1635 * t2019 + t1791 * t2015;
t1463 = -pkin(9) * t1595 - t1471 * t2015 + t1535 * t2019;
t1464 = -pkin(2) * t1595 - t2274;
t1556 = t1596 * t2020 - t1633 * t2016;
t2065 = pkin(8) * t1556 + t1463 * t2016 + t1464 * t2020;
t1504 = qJ(4) * t1697 + t2088;
t1514 = t1697 * t2230 + t2132;
t1611 = -t1698 * t2019 + t1744 * t2015;
t1469 = -pkin(9) * t1611 + t1504 * t2019 - t1514 * t2015;
t1502 = -pkin(2) * t1611 - t2273;
t1567 = t1612 * t2020 - t1697 * t2016;
t2064 = pkin(8) * t1567 + t1469 * t2016 + t1502 * t2020;
t2044 = -qJ(5) * t1708 - t2072;
t1505 = qJ(4) * t1707 + t2044;
t1517 = t1707 * t2230 + t2153;
t1619 = -t1708 * t2019 + t1747 * t2015;
t1470 = -pkin(9) * t1619 + t1505 * t2019 - t1517 * t2015;
t1503 = -pkin(2) * t1619 - t2272;
t1570 = t1620 * t2020 - t1707 * t2016;
t2063 = pkin(8) * t1570 + t1470 * t2016 + t1503 * t2020;
t1523 = -t1610 * t2251 - t2236;
t1548 = -t1597 * t2019 + t1600 * t2015;
t1555 = -qJ(4) * t1610 - t2237;
t1477 = -pkin(9) * t1548 - t1523 * t2015 + t1555 * t2019;
t1493 = -pkin(2) * t1548 - t2275;
t1518 = t1549 * t2020 + t1610 * t2016;
t2062 = pkin(8) * t1518 + t1477 * t2016 + t1493 * t2020;
t2032 = t1999 * t1926 + t1964 * t2253 + t1956 + t2041;
t1566 = -t2251 * t2282 + t2032 + t2231 + t2303;
t1951 = t1966 * t2252;
t2027 = qJ(5) * t1846 + t1966 * t2155 + t1951 - t2040;
t1571 = t2027 - t2353;
t1750 = t1846 * t2019 - t2297;
t1513 = -pkin(9) * t1750 - t1566 * t2015 + t1571 * t2019;
t1603 = -pkin(2) * t1750 - t2271;
t1681 = t1756 * t2020 + t2324;
t2061 = pkin(8) * t1681 + t1513 * t2016 + t1603 * t2020;
t1572 = t1655 * t2015 - t1670 * t2019;
t1527 = -pkin(2) * t1572 - t2140;
t1528 = -pkin(9) * t1572 + (pkin(3) * t2015 - t2239) * t1671;
t1552 = t1573 * t2020 + t1671 * t2016;
t2060 = pkin(8) * t1552 + t1527 * t2020 + t1528 * t2016;
t2026 = pkin(3) * t1944 + t2029;
t2025 = t2026 + t2281;
t2024 = -t2244 + (-t1914 - t2257) * qJ(5) + t2025;
t1581 = t2024 + t2352;
t1699 = t2251 * t2287 + t2234;
t1547 = t1581 * t2019 - t1699 * t2015 + t2378;
t1559 = t2032 - t2261 + t2382;
t2059 = t1547 * t2016 + t1559 * t2020 + t2408;
t1629 = pkin(3) * t2282 + t1655;
t1636 = t1670 + t2353;
t1550 = -t1629 * t2015 + t1636 * t2019 - t2375;
t1637 = -t2139 - t2380;
t2058 = t1550 * t2016 + t1637 * t2020 + t2407;
t1568 = t2264 - t2281 - t1628;
t1767 = -t2235 + t2330;
t1551 = -t1568 * t2015 + t1767 * t2019 + t2376;
t1558 = t1951 + (t2046 - t1912) * pkin(4) - t2279 - t1592;
t2057 = t1551 * t2016 + t1558 * t2020 - t2406;
t1627 = t2026 + t2352;
t1576 = -pkin(3) * t2221 + t1627 * t2019 + t2378;
t1589 = -t2340 + t2382;
t2056 = t1576 * t2016 + t1589 * t2020 + t2408;
t1579 = -t1628 * t2015 - t2239 * t2289 - t2376;
t2055 = t1579 * t2016 + t1592 * t2020 + t2406;
t1651 = t1726 - t2381;
t1709 = t2223 - t2376;
t2054 = t1651 * t2020 + t1709 * t2016 + t2406;
t1654 = t1727 - t2382;
t1716 = t2222 - t2378;
t1717 = -t1847 * t2016 + t2430;
t2053 = pkin(8) * t1717 + t1654 * t2020 + t1716 * t2016;
t1864 = t1937 * t2016 + t1938 * t2020;
t2052 = pkin(8) * t1864 + t1792;
t1580 = -t1621 - t2375;
t2050 = t1580 * t2016 - t2248 * t2342 + t2407;
t1593 = t1622 * t2020 + t1821 * t2016;
t2045 = pkin(8) * t1593 + t1621 * t2143;
t2038 = t2012 * t2192 + t2013 * t2081;
t1996 = qJDD(1) * t2017 + t2021 * t2022;
t1993 = t2013 * t2005;
t1984 = t2172 * t2192;
t1983 = (t2010 - t2011) * t2192;
t1979 = -pkin(7) * t1996 + g(3) * t2021;
t1945 = t2150 * t2172 * t2229;
t1936 = (t2170 + (0.2e1 * qJD(2) + t2228) * t2227) * t2012;
t1925 = t2020 * t1977 - t2010 * t2081;
t1924 = -t2016 * t1978 - t2011 * t2081;
t1916 = t1981 * t2020 - t2199;
t1915 = -t1980 * t2016 + t2196;
t1900 = (t2013 * t1977 + t2020 * t2038) * t2016;
t1899 = (t2012 * t1977 + t2020 * t2302) * t2016;
t1898 = (t2012 * t1978 - t2016 * t2302) * t2020;
t1897 = (t2013 * t1978 - t2016 * t2038) * t2020;
t1870 = (t1964 * t2019 - t1966 * t2015) * t1999;
t1865 = -t1935 * t2016 + t1939 * t2020;
t1861 = t2012 * t1939 + t2013 * t2093;
t1860 = -t2012 * t1938 + t2013 * t2095;
t1859 = -t2012 * t1937 + t2013 * t2094;
t1858 = -t2013 * t1939 + t2012 * t2093;
t1857 = t2013 * t1938 + t2012 * t2095;
t1856 = t2013 * t1937 + t2012 * t2094;
t1839 = -t2012 * t1936 + t2013 * t2096;
t1838 = t2013 * t1936 + t2012 * t2096;
t1825 = t1870 * t2020 - t2200;
t1819 = -t2012 * t1983 + t2013 * t2098;
t1818 = t2012 * t1984 + t2013 * t2097;
t1817 = t2013 * t1983 + t2012 * t2098;
t1816 = -t2013 * t1984 + t2012 * t2097;
t1769 = t2012 * t1946 + t2013 * t2099;
t1768 = -t2013 * t1946 + t2012 * t2099;
t1765 = t1870 * t2188 + t2269;
t1762 = t1870 * t2190 + t2270;
t1734 = -t1781 * t2019 + t1892 * t2015;
t1720 = -t2185 + (-t1858 * t2012 - t1861 * t2013) * pkin(8);
t1712 = -t2182 + (-t1838 * t2012 - t1839 * t2013) * pkin(8);
t1711 = -pkin(1) * t1858 + t2012 * t1904 + t2013 * t2133;
t1710 = pkin(1) * t1861 - t2013 * t1904 + t2012 * t2133;
t1701 = -pkin(1) * t1838 + t2012 * t1905 + t2013 * t2134;
t1700 = pkin(1) * t1839 - t2013 * t1905 + t2012 * t2134;
t1692 = t2013 * t2075 - t2300;
t1686 = t2012 * t2075 + t2298;
t1679 = pkin(1) * t1769 + t1792 * t2245;
t1678 = pkin(8) * t1792 * t2013 - pkin(1) * t1768;
t1675 = -t1739 * t2019 + t2167;
t1674 = t1737 * t2019 - t2167;
t1673 = -pkin(1) * t1816 + t2013 * t2052;
t1672 = pkin(1) * t1818 + t2012 * t2052;
t1669 = pkin(2) * t1847 + t2223 + t2379;
t1656 = (-t1768 * t2012 - t1769 * t2013) * pkin(8);
t1653 = -t2222 + t2440;
t1652 = (-t1816 * t2012 - t1818 * t2013) * pkin(8) - t2099;
t1648 = t2013 * t2108 - t2429;
t1645 = t2012 * t2108 + t2426;
t1644 = t1735 * t2020 - t1780 * t2016;
t1624 = -t1724 * t2019 - t1745 * t2015;
t1623 = -t1723 * t2019 - t1748 * t2015;
t1608 = -t2012 * t1750 + t2013 * t2116;
t1605 = t2013 * t1750 + t2012 * t2116;
t1601 = -t1634 * t2019 + t1862 * t2015;
t1599 = t1677 * t2020 - t1738 * t2016;
t1598 = t1676 * t2020 + t1736 * t2016;
t1594 = -pkin(2) * t1821 + pkin(9) * t1622;
t1591 = -t2012 * t1734 + t2013 * t2118;
t1590 = t2013 * t1734 + t2012 * t2118;
t1578 = t1626 * t2020 - t1722 * t2016;
t1577 = t1625 * t2020 - t1721 * t2016;
t1569 = t1622 + t2361;
t1565 = t2019 * t1628 + t2156 * t2289 + t2377;
t1564 = -t2379 + t2015 * t1627 + (pkin(2) + t2246) * t2287;
t1563 = -t2012 * t1675 + t2013 * t2119;
t1562 = -t2012 * t1674 + t2013 * t2120;
t1561 = t2013 * t1675 + t2012 * t2119;
t1560 = t2013 * t1674 + t2012 * t2120;
t1557 = t1602 * t2020 - t1632 * t2016;
t1554 = -t2012 * t1621 + t2013 * t2123;
t1553 = t2013 * t1621 + t2012 * t2123;
t1546 = t1629 * t2019 + t1636 * t2015 + t2361;
t1545 = -t2012 * t1624 + t2013 * t2121;
t1544 = -t2012 * t1623 + t2013 * t2122;
t1543 = t2013 * t1624 + t2012 * t2121;
t1542 = t2013 * t1623 + t2012 * t2122;
t1541 = t1568 * t2019 + t1767 * t2015 - t2440;
t1540 = pkin(2) * t2287 + t1581 * t2015 + t1699 * t2019 - t2379;
t1539 = -t2012 * t1619 + t2013 * t2124;
t1538 = t2013 * t1619 + t2012 * t2124;
t1537 = -t2012 * t1611 + t2013 * t2125;
t1536 = t2013 * t1611 + t2012 * t2125;
t1534 = -t2016 * t1654 + t2020 * t1716 + (-t1645 * t2012 - t1648 * t2013) * pkin(8);
t1526 = -t2016 * t1651 + t2020 * t1709 - t2411;
t1525 = -t2012 * t1601 + t2013 * t2126;
t1524 = t2013 * t1601 + t2012 * t2126;
t1522 = -pkin(1) * t1645 - t2012 * t1669 + t2013 * t2053;
t1521 = pkin(1) * t1648 + t2013 * t1669 + t2012 * t2053;
t1520 = -t2012 * t1595 + t2013 * t2127;
t1519 = t2013 * t1595 + t2012 * t2127;
t1516 = -t2012 * t1653 + t2013 * t2054 - t2434;
t1515 = t2013 * t1653 + t2012 * t2054 + t2437;
t1512 = pkin(9) * t1573 + (t2156 - t2246) * t1671;
t1511 = -t2012 * t1572 + t2013 * t2128;
t1510 = t2013 * t1572 + t2012 * t2128;
t1509 = pkin(9) * t1756 + t1566 * t2019 + t1571 * t2015 - t2332;
t1508 = t2020 * t1580 + t2342 * t2249 + t2410;
t1507 = t2020 * t1579 - t2016 * t1592 - t2411;
t1506 = t2020 * t1576 - t2016 * t1589 + t2409;
t1501 = -t2012 * t1569 + t2013 * t2050 - t2433;
t1500 = t2013 * t1569 + t2012 * t2050 + t2436;
t1499 = t2020 * t1550 - t2016 * t1637 + t2410;
t1498 = -t2012 * t1548 + t2013 * t2129;
t1497 = t2013 * t1548 + t2012 * t2129;
t1496 = -t2012 * t1565 + t2013 * t2055 - t2434;
t1495 = t2013 * t1565 + t2012 * t2055 + t2437;
t1494 = t2020 * t1551 - t2016 * t1558 + t2411;
t1488 = t2020 * t1547 - t2016 * t1559 + t2409;
t1487 = -t2012 * t1564 + t2013 * t2056 - t2432;
t1486 = t2013 * t1564 + t2012 * t2056 + t2435;
t1485 = (-pkin(9) * t2020 + t2249) * t1621 + (-t1553 * t2012 - t1554 * t2013) * pkin(8);
t1484 = -pkin(1) * t1553 - t2012 * t1594 + t2013 * t2045;
t1483 = pkin(1) * t1554 + t2013 * t1594 + t2012 * t2045;
t1482 = t2020 * t1513 - t2016 * t1603 + (-t1605 * t2012 - t1608 * t2013) * pkin(8);
t1479 = -t2012 * t1546 + t2013 * t2058 - t2433;
t1478 = t2013 * t1546 + t2012 * t2058 + t2436;
t1476 = -t2012 * t1541 + t2013 * t2057 + t2434;
t1475 = t2013 * t1541 + t2012 * t2057 - t2437;
t1474 = -t2012 * t1540 + t2013 * t2059 - t2432;
t1473 = t2013 * t1540 + t2012 * t2059 + t2435;
t1472 = -pkin(2) * t1610 + pkin(9) * t1549 + t1523 * t2019 + t1555 * t2015;
t1468 = pkin(2) * t1707 + pkin(9) * t1620 + t1505 * t2015 + t1517 * t2019;
t1467 = pkin(2) * t1697 + pkin(9) * t1612 + t1504 * t2015 + t1514 * t2019;
t1466 = -pkin(1) * t1605 - t2012 * t1509 + t2013 * t2061;
t1465 = pkin(1) * t1608 + t2013 * t1509 + t2012 * t2061;
t1461 = -t2016 * t1527 + t2020 * t1528 + (-t1510 * t2012 - t1511 * t2013) * pkin(8);
t1460 = pkin(2) * t1633 + pkin(9) * t1596 + t1471 * t2019 + t1535 * t2015;
t1459 = -pkin(1) * t1510 - t2012 * t1512 + t2013 * t2060;
t1458 = pkin(1) * t1511 + t2013 * t1512 + t2012 * t2060;
t1455 = t2020 * t1470 - t2016 * t1503 + (-t1538 * t2012 - t1539 * t2013) * pkin(8);
t1454 = t2020 * t1469 - t2016 * t1502 + (-t1536 * t2012 - t1537 * t2013) * pkin(8);
t1453 = -t2012 * t1480 + t2013 * t2130;
t1452 = t2013 * t1480 + t2012 * t2130;
t1451 = t2020 * t1477 - t2016 * t1493 + (-t1497 * t2012 - t1498 * t2013) * pkin(8);
t1449 = -pkin(1) * t1538 - t2012 * t1468 + t2013 * t2063;
t1448 = pkin(1) * t1539 + t2013 * t1468 + t2012 * t2063;
t1447 = -pkin(1) * t1536 - t2012 * t1467 + t2013 * t2064;
t1446 = pkin(1) * t1537 + t2013 * t1467 + t2012 * t2064;
t1445 = t2020 * t1463 - t2016 * t1464 + (-t1519 * t2012 - t1520 * t2013) * pkin(8);
t1444 = -pkin(1) * t1497 - t2012 * t1472 + t2013 * t2062;
t1443 = pkin(1) * t1498 + t2013 * t1472 + t2012 * t2062;
t1442 = -pkin(1) * t1519 - t2012 * t1460 + t2013 * t2065;
t1441 = pkin(1) * t1520 + t2013 * t1460 + t2012 * t2065;
t1439 = pkin(2) * t2293 + pkin(9) * t1481 + t1456 * t2019 + t1457 * t2015;
t1438 = t2020 * t1440 - t2016 * t1450 + (-t1452 * t2012 - t1453 * t2013) * pkin(8);
t1437 = -pkin(1) * t1452 - t2012 * t1439 + t2013 * t2066;
t1436 = pkin(1) * t1453 + t2013 * t1439 + t2012 * t2066;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1997, 0, -t1996, 0, t2142, -t1979, -t2091, -pkin(7) * t2091, -t1900 * t2017 + t1925 * t2021, -t1819 * t2017 + t1865 * t2021, -t1859 * t2017 + t1915 * t2021, -t1897 * t2017 + t1924 * t2021, -t1860 * t2017 + t1916 * t2021, t1945 * t2021 + t2017 * t2191, t2021 * t1720 - t2017 * t1711 - pkin(7) * (t1861 * t2021 + t1917 * t2017), t2021 * t1712 - t2017 * t1701 - pkin(7) * (t1839 * t2021 + t1906 * t2017), t2021 * t1652 - t2017 * t1673 - pkin(7) * (t1818 * t2021 + t1864 * t2017), t2021 * t1656 - t2017 * t1678 - pkin(7) * (t1769 * t2021 + t1792 * t2017), t2262, t2448, t2419, t2335, -t2451, t2304, -t2017 * t1516 + t2021 * t1526 - t2414, t2021 * t1534 - t2017 * t1522 - pkin(7) * (t1648 * t2021 + t1717 * t2017), -t2017 * t1501 + t2021 * t1508 - t2413, t2021 * t1485 - t2017 * t1484 - pkin(7) * (t1554 * t2021 + t1593 * t2017), t2262, t2419, -t2448, t2304, t2451, t2335, -t2017 * t1496 + t2021 * t1507 - t2414, -t2017 * t1479 + t2021 * t1499 - t2413, -t2017 * t1487 + t2021 * t1506 - t2412, t2021 * t1461 - t2017 * t1459 - pkin(7) * (t1511 * t2021 + t1552 * t2017), t2335, t2448, -t2451, -t1692 * t2017 + t2314, t2419, -t1765 * t2017 + t1825 * t2021, -t2017 * t1474 + t2021 * t1488 - t2412, -t2017 * t1476 + t2021 * t1494 + t2414, t2021 * t1482 - t2017 * t1466 - pkin(7) * (t1608 * t2021 + t1681 * t2017), t2021 * t1451 - t2017 * t1444 - pkin(7) * (t1498 * t2021 + t1518 * t2017), -t1563 * t2017 + t1599 * t2021, -t1525 * t2017 + t1557 * t2021, -t1544 * t2017 + t1577 * t2021, -t1562 * t2017 + t1598 * t2021, -t1545 * t2017 + t1578 * t2021, -t1591 * t2017 + t1644 * t2021, t2021 * t1454 - t2017 * t1447 - pkin(7) * (t1537 * t2021 + t1567 * t2017), t2021 * t1455 - t2017 * t1449 - pkin(7) * (t1539 * t2021 + t1570 * t2017), t2021 * t1445 - t2017 * t1442 - pkin(7) * (t1520 * t2021 + t1556 * t2017), t2021 * t1438 - t2017 * t1437 - pkin(7) * (t1453 * t2021 + t1462 * t2017); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1996, 0, t1997, 0, t1979, t2142, t2146, pkin(7) * t2146, t1900 * t2021 + t1925 * t2017, t1819 * t2021 + t1865 * t2017, t1859 * t2021 + t1915 * t2017, t1897 * t2021 + t1924 * t2017, t1860 * t2021 + t1916 * t2017, t1945 * t2017 - t2021 * t2191, t2017 * t1720 + t2021 * t1711 + pkin(7) * (-t1861 * t2017 + t1917 * t2021), t2017 * t1712 + t2021 * t1701 + pkin(7) * (-t1839 * t2017 + t1906 * t2021), t2017 * t1652 + t2021 * t1673 + pkin(7) * (-t1818 * t2017 + t1864 * t2021), t2017 * t1656 + t2021 * t1678 + pkin(7) * (-t1769 * t2017 + t1792 * t2021), t2263, -t2447, t2418, t2333, t2443, t2305, t2021 * t1516 + t2017 * t1526 - t2417, t2017 * t1534 + t2021 * t1522 + pkin(7) * (-t1648 * t2017 + t1717 * t2021), t2021 * t1501 + t2017 * t1508 + t2416, t2017 * t1485 + t2021 * t1484 + pkin(7) * (-t1554 * t2017 + t1593 * t2021), t2263, t2418, t2447, t2305, -t2443, t2333, t2021 * t1496 + t2017 * t1507 - t2417, t2021 * t1479 + t2017 * t1499 + t2416, t2021 * t1487 + t2017 * t1506 + t2415, t2017 * t1461 + t2021 * t1459 + pkin(7) * (-t1511 * t2017 + t1552 * t2021), t2333, -t2447, t2443, t1692 * t2021 + t2321, t2418, t1765 * t2021 + t1825 * t2017, t2021 * t1474 + t2017 * t1488 + t2415, t2021 * t1476 + t2017 * t1494 + t2417, t2017 * t1482 + t2021 * t1466 + pkin(7) * (-t1608 * t2017 + t1681 * t2021), t2017 * t1451 + t2021 * t1444 + pkin(7) * (-t1498 * t2017 + t1518 * t2021), t1563 * t2021 + t1599 * t2017, t1525 * t2021 + t1557 * t2017, t1544 * t2021 + t1577 * t2017, t1562 * t2021 + t1598 * t2017, t1545 * t2021 + t1578 * t2017, t1591 * t2021 + t1644 * t2017, t2017 * t1454 + t2021 * t1447 + pkin(7) * (-t1537 * t2017 + t1567 * t2021), t2017 * t1455 + t2021 * t1449 + pkin(7) * (-t1539 * t2017 + t1570 * t2021), t2017 * t1445 + t2021 * t1442 + pkin(7) * (-t1520 * t2017 + t1556 * t2021), t2017 * t1438 + t2021 * t1437 + pkin(7) * (-t1453 * t2017 + t1462 * t2021); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2000, t2001, 0, 0, t1899, t1817, t1856, t1898, t1857, t1993, t1710, t1700, t1672, t1679, t2069, -t1614, t2421, t2307, -t1662, t2260, t1515, t1521, t1500, t1483, t2069, t2421, t1614, t2260, t1662, t2307, t1495, t1478, t1486, t1458, t2307, -t1614, -t1662, t1686, t2421, t1762, t1473, t1475, t1465, t1443, t1561, t1524, t1542, t1560, t1543, t1590, t1446, t1448, t1441, t1436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2022, 0, 0, -g(3), -t2000, 0, t1925, t1865, t1915, t1924, t1916, t1945, t1720, t1712, t1652, t1656, t2265, -t1703, t2384, t2267, t2385, t2266, t1526, t1534, t1508, t1485, t2265, t2384, t1703, t2266, -t2385, t2267, t1507, t1499, t1506, t1461, t2267, -t1703, t2385, t2265, t2384, t1825, t1488, t1494, t1482, t1451, t1599, t1557, t1577, t1598, t1578, t1644, t1454, t1455, t1445, t1438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2022, 0, qJDD(1), 0, g(3), 0, -t2001, 0, t1900, t1819, t1859, t1897, t1860, -t2191, t1711, t1701, t1673, t1678, t2047, -t1617, t2420, t2306, t2438, t2259, t1516, t1522, t1501, t1484, t2047, t2420, t1617, t2259, -t2438, t2306, t1496, t1479, t1487, t1459, t2306, -t1617, t2438, t1692, t2420, t1765, t1474, t1476, t1466, t1444, t1563, t1525, t1544, t1562, t1545, t1591, t1447, t1449, t1442, t1437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2000, t2001, 0, 0, t1899, t1817, t1856, t1898, t1857, t1993, t1710, t1700, t1672, t1679, t2069, -t1614, t2421, t2307, -t1662, t2260, t1515, t1521, t1500, t1483, t2069, t2421, t1614, t2260, t1662, t2307, t1495, t1478, t1486, t1458, t2307, -t1614, -t1662, t1686, t2421, t1762, t1473, t1475, t1465, t1443, t1561, t1524, t1542, t1560, t1543, t1590, t1446, t1448, t1441, t1436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1977, t1939, t1975, -t1986, t1981, t1986, 0, -t1946, t1904, 0, t2174, -t1758, t2362, t2074, t2365, t2135, t1709, t1716, t1580, -pkin(9) * t1621, t2174, t2362, t1758, t2135, -t2365, t2074, t1579, t1550, t1576, t1528, t2074, -t1758, t2365, t2174, t2362, t1870, t1547, t1551, t1513, t1477, t1677, t1602, t1625, t1676, t1626, t1735, t1469, t1470, t1463, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1985, t1935, t1980, t1978, t1974, -t1985, t1946, 0, t1905, 0, -t1912, t2283, t2286, t1912, -t2290, t1972, t1651, t1654, -t2380, -pkin(2) * t1621, -t1912, t2286, -t2283, t1972, t2290, t1912, t1592, t1637, t1589, t1527, t1912, t2283, -t2290, -t1912, t2286, t1972, t1559, t1558, t1603, t1493, t1738, t1632, t1721, -t1736, t1722, t1780, t1502, t1503, t1464, t1450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1998, t1983, t1937, t1998, t1938, t2005, -t1904, -t1905, 0, 0, t2137, t2334, t2366, t2136, -t1804, t2070, t1653, t1669, t1569, t1594, t2137, t2366, -t2334, t2070, t1804, t2136, t1565, t1546, t1564, t1512, t2136, t2334, -t1804, t2137, t2366, t2070, t1540, t1541, t1509, t1472, t1675, t1601, t1623, t1674, t1624, t1734, t1467, t1468, t1460, t1439; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2051, -t2289, t2046, -t2195, t1929, t2195, 0, t1821, t1726, 0, -t2051, t2046, t2289, t2195, -t1929, -t2195, -t2330, t1636, t1627, -qJ(4) * t1671, -t2195, -t2289, t1929, -t2051, t2046, t2195, t1581, t1767, t1571, t1555, t1863, t1862, -t1748, -t1863, -t1745, t1892, t1504, t1505, t1535, t1457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1944, t2287, -t2284, -t1895, -t2291, t1944, -t1821, 0, t1727, 0, -t1944, -t2284, -t2287, t1944, t2291, -t1895, t1628, t1629, pkin(3) * t2287, -pkin(3) * t1671, -t1895, t2287, -t2291, -t1944, -t2284, t1944, t1699, t1568, t1566, t1523, -t1739, -t1634, -t1723, t1737, -t1724, -t1781, t1514, t1517, t1471, t1456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1912, -t2283, -t2286, -t1912, t2290, -t1972, -t1726, -t1727, 0, 0, t1912, -t2286, t2283, -t1972, -t2290, -t1912, t2033, t2139, t2340, t2140, -t1912, -t2283, t2290, t1912, -t2286, -t1972, t2031 + t2261, -t2046 * t2251 + t1597 - t2240, t2271, t2275, -t1738, -t1632, -t1721, t1736, -t1722, -t1780, t2273, t2272, t2274, t2276; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2051, t2046, t2289, t2195, -t1929, -t2195, 0, t1670, -t1671, 0, -t2195, -t2289, t1929, -t2051, t2046, t2195, t2024, -t2235, t2027, -t2237, t1863, t1862, -t1748, -t1863, -t1745, t1892, t2088, t2044, t2152, t2154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1912, -t2286, t2283, -t1972, -t2290, -t1912, -t1670, 0, t1655, 0, -t1912, -t2283, t2290, t1912, -t2286, -t1972, -pkin(4) * t1914 + t1600, -pkin(4) * t2046 + t1597, pkin(4) * t1846, -pkin(4) * t1597, -t1738, -t1632, -t1721, t1736, -t1722, -t1780, -pkin(4) * t1698 + t2158, -pkin(4) * t1708 - t2159, -pkin(4) * t1635 - t2087, -pkin(4) * t1492 + t2179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1944, t2284, t2287, -t1944, -t2291, t1895, t1671, -t1655, 0, 0, t1895, -t2287, t2291, t1944, t2284, -t1944, -pkin(4) * t2287 - t2234, t2025 - t2264, pkin(4) * t2282 + t2028 - t2303, pkin(4) * t1610 + t2236, t1739, t1634, t1723, -t1737, t1724, t1781, t1697 * t2250 - t2132, t1707 * t2250 - t2153, t1633 * t2250 - t2082, t2250 * t2293 + t2238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1895, -t2287, t2291, t1944, t2284, -t1944, 0, -t1610, t1600, 0, t1739, t1634, t1723, -t1737, t1724, t1781, -pkin(10) * t1697 + t1584, -pkin(10) * t1707 + t2183, -pkin(10) * t1633 - t2293, -pkin(10) * t2293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2195, t2289, -t1929, t2051, -t2046, -t2195, t1610, 0, t1597, 0, -t1863, -t1862, t1748, t1863, t1745, -t1892, t2160, t2072, -t1631, -t1490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1912, t2283, -t2290, -t1912, t2286, t1972, -t1600, -t1597, 0, 0, t1738, t1632, t1721, -t1736, t1722, t1780, -t2158, t2159, t2087, -t2179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1789, -t1744, t2292, t2204, t1878, -t2204, 0, t1588, t1532, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2203, t1747, t2169, t2073, t1779, -t2203, -t1588, 0, t1533, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1863, t1862, -t1748, -t1863, -t1745, t1892, -t1532, -t1533, 0, 0;];
m_new_reg  = t1;
