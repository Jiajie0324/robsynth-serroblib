% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPPR8_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR8_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR8_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPR8_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:09:30
% EndTime: 2019-03-09 16:09:52
% DurationCPUTime: 9.00s
% Computational Cost: add. (9710->621), mult. (25112->788), div. (0->0), fcn. (18679->8), ass. (0->266)
t222 = sin(qJ(3));
t225 = cos(qJ(3));
t351 = cos(pkin(6));
t294 = t351 * qJD(1);
t265 = t294 + qJD(2);
t223 = sin(qJ(2));
t219 = sin(pkin(6));
t329 = qJD(1) * t219;
t305 = t223 * t329;
t144 = t222 * t265 + t225 * t305;
t226 = cos(qJ(2));
t316 = qJD(1) * qJD(2);
t299 = t226 * t316;
t282 = t219 * t299;
t100 = qJD(3) * t144 + t222 * t282;
t328 = qJD(1) * t226;
t304 = t219 * t328;
t189 = -qJD(3) + t304;
t343 = t144 * t189;
t392 = t100 - t343;
t142 = t222 * t305 - t225 * t265;
t345 = t142 * t189;
t405 = qJD(3) * t142;
t99 = -t225 * t282 + t405;
t402 = t99 - t345;
t407 = t392 * t222 + t225 * t402;
t323 = qJD(3) * t225;
t375 = pkin(9) - qJ(5);
t298 = t226 * t351;
t205 = pkin(1) * t298;
t159 = -pkin(8) * t305 + qJD(1) * t205;
t261 = t219 * (pkin(2) * t223 - pkin(9) * t226);
t160 = qJD(1) * t261;
t85 = -t222 * t159 + t225 * t160;
t406 = -t222 * qJD(5) + t323 * t375 + t85;
t389 = -t222 * qJD(4) + (t225 * t304 - t323) * qJ(4);
t204 = t351 * t223 * pkin(1);
t380 = -pkin(4) - pkin(10);
t317 = pkin(3) - t380;
t252 = pkin(5) * t225 - t222 * t317;
t338 = t219 * t226;
t404 = -qJD(3) * t252 + (-t204 + (-pkin(8) + t252) * t338) * qJD(1) + t389;
t289 = t317 * t223;
t335 = t225 * t226;
t309 = qJ(5) * t335;
t403 = -(-t289 - t309) * t329 + t406;
t332 = pkin(8) * t338 + t204;
t386 = t332 * qJD(2);
t154 = qJD(1) * t386;
t29 = t100 * pkin(3) + t99 * qJ(4) - t144 * qJD(4) + t154;
t156 = t351 * pkin(9) + t332;
t372 = qJD(2) * pkin(9);
t115 = qJD(1) * t156 + t372;
t157 = (-pkin(2) * t226 - pkin(9) * t223 - pkin(1)) * t219;
t125 = qJD(1) * t157;
t161 = qJD(2) * t261;
t152 = qJD(1) * t161;
t339 = t219 * t223;
t172 = -pkin(8) * t339 + t205;
t163 = t172 * qJD(2);
t153 = qJD(1) * t163;
t325 = qJD(3) * t222;
t285 = t115 * t323 + t125 * t325 - t225 * t152 + t222 * t153;
t74 = t115 * t225 + t125 * t222;
t253 = -t189 * t74 - t285;
t171 = t222 * t351 + t225 * t339;
t327 = qJD(2) * t219;
t301 = t226 * t327;
t107 = qJD(3) * t171 + t222 * t301;
t308 = t222 * t339;
t108 = -qJD(3) * t308 + (qJD(3) * t351 + t301) * t225;
t47 = t107 * pkin(3) - t108 * qJ(4) - t171 * qJD(4) + t386;
t293 = t222 * t115 - t225 * t125;
t400 = qJD(4) + t293;
t170 = -t225 * t351 + t308;
t326 = qJD(2) * t223;
t399 = -t107 * t189 + t219 * ((qJD(1) * t170 + t142) * t326 - t100 * t226);
t215 = t219 ^ 2;
t398 = -0.2e1 * t215 * t316;
t255 = t99 * qJ(5) + t285;
t262 = t289 * t327;
t318 = t144 * qJD(5);
t14 = -qJD(1) * t262 + t255 - t318;
t221 = sin(qJ(6));
t224 = cos(qJ(6));
t114 = -t265 * pkin(2) - t159;
t63 = t142 * pkin(3) - t144 * qJ(4) + t114;
t260 = qJD(5) - t63;
t25 = t144 * pkin(5) + t142 * t380 + t260;
t390 = -t144 * qJ(5) + t400;
t31 = t189 * t317 + t390;
t272 = t221 * t31 - t224 * t25;
t8 = -t99 * pkin(5) + t100 * t380 - t29;
t1 = -qJD(6) * t272 + t224 * t14 + t221 * t8;
t134 = qJD(6) + t144;
t279 = t134 * t272 + t1;
t6 = t221 * t25 + t224 * t31;
t2 = -qJD(6) * t6 - t221 * t14 + t224 * t8;
t397 = t6 * t134 + t2;
t86 = t225 * t159 + t222 * t160;
t79 = qJ(4) * t305 + t86;
t396 = -qJD(5) * t225 - t325 * t375 - t79;
t303 = t219 * t326;
t193 = qJD(1) * t303;
t271 = pkin(3) * t193;
t30 = -t271 + t285;
t182 = t189 * qJ(4);
t70 = -t182 + t74;
t395 = t189 * t70 + t30;
t93 = t142 * t221 - t224 * t189;
t296 = t93 * t134;
t320 = qJD(6) * t224;
t49 = t221 * (qJD(6) * t142 + t193) - t224 * t100 - t189 * t320;
t394 = t49 - t296;
t95 = t142 * t224 + t189 * t221;
t295 = t95 * t134;
t50 = qJD(6) * t95 + t221 * t100 + t193 * t224;
t270 = -t50 + t295;
t78 = t99 * t171;
t38 = t108 * t144 - t78;
t341 = t189 * t225;
t92 = t99 * t222;
t44 = -t144 * t341 - t92;
t391 = t100 + t343;
t139 = t142 ^ 2;
t383 = t144 ^ 2;
t388 = -t383 + t139;
t387 = -t189 ^ 2 - t383;
t337 = t222 * t226;
t385 = (-t142 * t223 + t189 * t337) * t329 - t189 * t325 - t225 * t193;
t228 = qJD(1) ^ 2;
t381 = pkin(3) + pkin(4);
t379 = pkin(9) * t144;
t376 = t95 * t93;
t220 = qJ(4) + pkin(5);
t186 = -t225 * pkin(3) - t222 * qJ(4) - pkin(2);
t174 = t225 * pkin(4) - t186;
t133 = pkin(5) * t222 + pkin(10) * t225 + t174;
t191 = t375 * t222;
t90 = t133 * t221 + t191 * t224;
t374 = qJD(6) * t90 + t403 * t221 + t224 * t404;
t89 = t133 * t224 - t191 * t221;
t373 = -qJD(6) * t89 + t221 * t404 - t403 * t224;
t187 = qJ(4) * t193;
t178 = qJD(4) * t189;
t286 = t115 * t325 - t125 * t323 - t222 * t152 - t225 * t153;
t269 = -t178 - t286;
t249 = t100 * qJ(5) + t142 * qJD(5) + t269;
t15 = -t187 - t249;
t11 = pkin(5) * t193 - t15;
t371 = t11 * t221;
t370 = t11 * t224;
t369 = t142 * t93;
t368 = t142 * t95;
t367 = t144 * t63;
t364 = t189 * t93;
t363 = t189 * t95;
t362 = t221 * t49;
t361 = t221 * t99;
t360 = t224 * t99;
t55 = qJ(5) * t142 + t74;
t48 = t182 - t55;
t359 = t48 * t189;
t358 = t50 * t224;
t310 = t381 * t222;
t357 = -qJD(3) * t310 - (-t204 + (-pkin(8) - t310) * t338) * qJD(1) - t389;
t356 = -(pkin(5) * t223 + qJ(5) * t337) * t329 + t396;
t355 = qJ(5) * t222 * t304 - t396;
t354 = pkin(3) * t325 - (t204 + (pkin(3) * t222 + pkin(8)) * t338) * qJD(1) + t389;
t353 = -(-t223 * t381 - t309) * t329 + t406;
t350 = t100 * qJ(4);
t349 = t100 * t225;
t344 = t144 * t142;
t342 = t170 * qJ(5);
t340 = t215 * t228;
t336 = t224 * t226;
t82 = t144 * pkin(3) + t142 * qJ(4);
t84 = t225 * t156 + t222 * t157;
t330 = t223 ^ 2 - t226 ^ 2;
t324 = qJD(3) * t224;
t322 = qJD(4) * t226;
t321 = qJD(6) * t221;
t319 = qJD(6) * t225;
t315 = pkin(9) * t189 * t222;
t314 = pkin(9) * t341;
t312 = pkin(9) * t326;
t311 = t225 * t372;
t155 = -t351 * pkin(2) - t172;
t302 = t219 * t322;
t46 = -pkin(4) * t142 + t260;
t297 = (-qJD(5) - t46) * t144;
t83 = -t222 * t156 + t157 * t225;
t292 = -t193 + t344;
t291 = t134 * t221;
t290 = t134 * t224;
t287 = t223 * t226 * t340;
t284 = t189 * t305;
t281 = pkin(1) * t398;
t280 = -t221 * t6 + t224 * t272;
t77 = pkin(3) * t338 - t83;
t119 = (t221 * t337 + t223 * t224) * t329;
t278 = -t221 * t325 + t119;
t120 = (-t221 * t223 + t222 * t336) * t329;
t277 = t222 * t324 - t120;
t273 = (-t99 + t405) * pkin(9);
t75 = t170 * pkin(3) - t171 * qJ(4) + t155;
t36 = t171 * pkin(5) + t170 * t380 - t75;
t58 = pkin(4) * t338 - qJ(5) * t171 + t77;
t53 = pkin(10) * t338 + t58;
t12 = -t221 * t53 + t224 * t36;
t13 = t221 * t36 + t224 * t53;
t268 = t381 * t303;
t39 = t100 * t170 + t107 * t142;
t267 = t215 * t223 * t299;
t264 = 0.2e1 * t294 + qJD(2);
t76 = -qJ(4) * t338 + t84;
t52 = -t156 * t323 - t157 * t325 + t225 * t161 - t222 * t163;
t258 = -t170 * t221 + t219 * t336;
t110 = t170 * t224 + t221 * t338;
t254 = t189 * t293 + t286;
t40 = -pkin(5) * t189 - t48;
t251 = -t134 * t40 - t317 * t99;
t51 = -t156 * t325 + t157 * t323 + t222 * t161 + t225 * t163;
t246 = -t134 * t290 + t361;
t245 = t134 ^ 2 * t221 + t360;
t244 = qJ(4) * t303 + t51;
t106 = (-t189 * t219 - t215 * t328) * t326;
t241 = pkin(1) * (-qJD(2) * t294 + t340);
t239 = t100 * t171 + t107 * t144 + t108 * t142 - t170 * t99;
t238 = t99 + t345;
t45 = -t222 * t345 - t349;
t237 = -t108 * qJ(5) - t171 * qJD(5) - t52;
t236 = t107 * qJ(5) + t170 * qJD(5) + t244;
t234 = -qJD(1) * t268 + t255;
t26 = -t108 * t189 + (t226 * t99 + (qJD(1) * t171 + t144) * t326) * t219;
t59 = -t189 * t323 + t222 * t193 + (-t144 * t223 + t189 * t335) * t329;
t23 = -t100 * pkin(4) - t29;
t192 = t375 * t225;
t184 = 0.2e1 * t187;
t162 = t332 * qJD(1);
t88 = pkin(9) * t349;
t81 = -pkin(3) * t305 - t85;
t69 = -pkin(4) * t144 - t82;
t68 = pkin(3) * t189 + t400;
t66 = -t76 - t342;
t64 = -pkin(4) * t170 - t75;
t61 = qJD(6) * t258 + t107 * t224 - t221 * t303;
t60 = qJD(6) * t110 + t107 * t221 + t224 * t303;
t57 = -t220 * t338 + t342 + t84;
t41 = -pkin(3) * t303 - t52;
t37 = t189 * t381 + t390;
t35 = t244 - t302;
t32 = -pkin(5) * t142 + t144 * t380 - t82;
t28 = -t107 * pkin(4) - t47;
t27 = t187 + t269;
t24 = -t236 + t302;
t22 = -t268 + t237;
t19 = (pkin(5) * t326 - t322) * t219 + t236;
t18 = -t262 + t237;
t17 = t108 * pkin(5) + t107 * t380 - t47;
t16 = t234 - t318;
t10 = t221 * t32 + t224 * t55;
t9 = -t221 * t55 + t224 * t32;
t4 = -qJD(6) * t13 + t224 * t17 - t221 * t18;
t3 = qJD(6) * t12 + t221 * t17 + t224 * t18;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t267, t330 * t398, t264 * t301, -0.2e1 * t267, -t264 * t303, 0, -t154 * t351 + t223 * t281 - t265 * t386, -t153 * t351 - t163 * t265 + t226 * t281 (t153 * t226 + t154 * t223 + (-t159 * t226 - t162 * t223) * qJD(2) + (t163 * t226 + t386 * t223 + (-t172 * t226 - t223 * t332) * qJD(2)) * qJD(1)) * t219, t153 * t332 - t154 * t172 - t159 * t386 + t162 * t163, t38, -t239, t26, t39, -t399, t106, t155 * t100 + t114 * t107 + t386 * t142 + t154 * t170 - t52 * t189 + (t226 * t285 + (qJD(1) * t83 - t293) * t326) * t219, t114 * t108 + t386 * t144 + t154 * t171 - t155 * t99 + t51 * t189 + (-t226 * t286 + (-qJD(1) * t84 - t74) * t326) * t219, -t100 * t84 - t107 * t74 + t108 * t293 - t142 * t51 - t144 * t52 + t170 * t286 + t171 * t285 + t83 * t99, t114 * t386 + t154 * t155 - t285 * t83 - t286 * t84 - t293 * t52 + t51 * t74, t38, t26, t239, t106, t399, t39, t75 * t100 + t63 * t107 + t47 * t142 + t29 * t170 + t41 * t189 + (t226 * t30 + (-qJD(1) * t77 - t68) * t326) * t219, -t100 * t76 - t107 * t70 + t108 * t68 - t142 * t35 + t144 * t41 - t170 * t27 + t171 * t30 - t77 * t99, -t63 * t108 - t47 * t144 - t29 * t171 - t35 * t189 + t75 * t99 + (-t226 * t27 + (qJD(1) * t76 + t70) * t326) * t219, t27 * t76 + t29 * t75 + t30 * t77 + t35 * t70 + t41 * t68 + t47 * t63, t39, -t239, -t399, t38, t26, t106, t46 * t108 + t28 * t144 + t23 * t171 + t24 * t189 - t64 * t99 + (t15 * t226 + (-qJD(1) * t66 - t48) * t326) * t219, t64 * t100 + t46 * t107 + t28 * t142 + t23 * t170 - t22 * t189 + (-t16 * t226 + (qJD(1) * t58 + t37) * t326) * t219, -t100 * t66 - t107 * t48 - t108 * t37 - t142 * t24 - t144 * t22 - t15 * t170 - t16 * t171 + t58 * t99, t15 * t66 + t16 * t58 + t22 * t37 + t23 * t64 + t24 * t48 + t28 * t46, -t110 * t49 + t61 * t95, -t110 * t50 - t258 * t49 - t60 * t95 - t61 * t93, t108 * t95 - t110 * t99 + t134 * t61 - t171 * t49, -t258 * t50 + t60 * t93, -t108 * t93 - t134 * t60 - t171 * t50 - t258 * t99, t108 * t134 - t78, -t108 * t272 - t11 * t258 - t12 * t99 + t134 * t4 + t171 * t2 + t19 * t93 + t40 * t60 + t50 * t57, -t1 * t171 - t108 * t6 + t11 * t110 + t13 * t99 - t134 * t3 + t19 * t95 + t40 * t61 - t49 * t57, t1 * t258 - t110 * t2 + t12 * t49 - t13 * t50 + t272 * t61 - t3 * t93 - t4 * t95 - t6 * t60, t1 * t13 + t11 * t57 + t12 * t2 + t19 * t40 - t272 * t4 + t3 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t287, t330 * t340, -t219 * t228 * t298, t287, t265 * t305 - t193, 0, -pkin(8) * t282 + t162 * t265 + t223 * t241, pkin(8) * t193 + t159 * t265 + t226 * t241, 0, 0, t44, -t407, t59, t45, -t385, t284, -pkin(2) * t100 - t162 * t142 - t154 * t225 + t85 * t189 + (t114 * t222 + t314) * qJD(3) + (t223 * t293 + (-t114 * t226 - t312) * t222) * t329, pkin(2) * t99 - t162 * t144 + t154 * t222 - t86 * t189 + (t114 * t225 - t315) * qJD(3) + (-t114 * t335 + (t74 - t311) * t223) * t329, t86 * t142 + t85 * t144 - t88 + (-t293 * t304 - t286 + (t293 + t379) * qJD(3)) * t225 + (t273 - t253) * t222, -t154 * pkin(2) - t114 * t162 + t293 * t85 - t74 * t86 + (t285 * t222 - t286 * t225 + (-t222 * t74 + t225 * t293) * qJD(3)) * pkin(9), t44, t59, t407, t284, t385, t45, t186 * t100 - t81 * t189 - t29 * t225 + t354 * t142 + (t222 * t63 + t314) * qJD(3) + (t223 * t68 + (-t226 * t63 - t312) * t222) * t329, t79 * t142 - t81 * t144 - t88 + (-t68 * t304 + t27 + (t68 + t379) * qJD(3)) * t225 + (t273 + t395) * t222, t186 * t99 + t79 * t189 - t29 * t222 - t354 * t144 + (-t225 * t63 + t315) * qJD(3) + (t63 * t335 + (-t70 + t311) * t223) * t329, t29 * t186 - t68 * t81 - t70 * t79 + t354 * t63 + (t30 * t222 + t27 * t225 + (-t222 * t70 + t225 * t68) * qJD(3)) * pkin(9), t45, -t407, -t385, t44, t59, t284, t46 * t323 - t174 * t99 + t23 * t222 + t355 * t189 + t357 * t144 + (-t46 * t335 + (qJD(2) * t192 + t48) * t223) * t329, t46 * t325 + t174 * t100 - t23 * t225 - t353 * t189 + t357 * t142 + (-t46 * t337 + (qJD(2) * t191 - t37) * t223) * t329, t192 * t100 + t191 * t99 - t353 * t144 - t355 * t142 + (t189 * t37 + t15) * t225 + (-t16 + t359) * t222, -t15 * t192 + t16 * t191 + t23 * t174 + t353 * t37 + t355 * t48 + t357 * t46, t49 * t224 * t225 + (t221 * t319 + t277) * t95, t95 * t119 + t120 * t93 + (-t221 * t95 - t224 * t93) * t325 + (-t362 + t358 + (-t221 * t93 + t224 * t95) * qJD(6)) * t225, -t49 * t222 + t277 * t134 + (t134 * t321 + t360 - t363) * t225, -t50 * t221 * t225 + (-t224 * t319 - t278) * t93, -t50 * t222 + t278 * t134 + (t134 * t320 - t361 + t364) * t225, -t134 * t341 - t92, -t40 * t119 + t192 * t50 - t89 * t99 + t356 * t93 + (qJD(3) * t221 * t40 + t2) * t222 - t374 * t134 + (t189 * t272 - t320 * t40 - t371) * t225, -t40 * t120 - t192 * t49 + t90 * t99 + t356 * t95 + (t324 * t40 - t1) * t222 + t373 * t134 + (t189 * t6 + t321 * t40 - t370) * t225, t6 * t119 - t272 * t120 + t89 * t49 - t90 * t50 + t374 * t95 + t373 * t93 + t280 * t325 + (t1 * t221 + t2 * t224 + (t221 * t272 + t224 * t6) * qJD(6)) * t225, t1 * t90 + t11 * t192 + t2 * t89 + t272 * t374 + t356 * t40 - t373 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, -t388, -t238, -t344, -t391, t193, -t114 * t144 + t253, t114 * t142 + t254, 0, 0, t344, -t238, t388, t193, t391, -t344, -t142 * t82 + t253 + 0.2e1 * t271 - t367, pkin(3) * t99 - t350 + (t70 - t74) * t144 + (t68 - t400) * t142, -t142 * t63 + t144 * t82 - 0.2e1 * t178 + t184 - t254, -pkin(3) * t30 + qJ(4) * t27 + t400 * t70 - t63 * t82 - t68 * t74, -t344, -t388, -t391, t344, -t238, t193, t46 * t142 - t69 * t144 - t189 * t390 + t184 + t249, -t69 * t142 + t55 * t189 - 0.2e1 * t193 * t381 + t255 + t297, t350 - t381 * t99 + (t48 + t55) * t144 + (-t37 + t390) * t142, -t15 * qJ(4) - t16 * t381 - t37 * t55 - t390 * t48 - t46 * t69, -t290 * t95 + t362 (t49 + t296) * t224 + (t50 + t295) * t221, t246 + t368, -t291 * t93 + t358, t245 - t369, t134 * t142, t370 - t272 * t142 + t220 * t50 + t390 * t93 + (t317 * t320 - t9) * t134 + t251 * t221, -t371 - t6 * t142 - t220 * t49 + t390 * t95 + (-t317 * t321 + t10) * t134 + t251 * t224, t10 * t93 + t9 * t95 + (-t144 * t272 + t317 * t50 - t1 + (-t317 * t95 - t272) * qJD(6)) * t224 + (t144 * t6 + t317 * t49 + t2 + (-t317 * t93 + t6) * qJD(6)) * t221, -t6 * t10 + t11 * t220 + t272 * t9 + t390 * t40 - (qJD(6) * t280 + t1 * t224 - t2 * t221) * t317; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t292, -t238, t387, t367 + t395, 0, 0, 0, 0, 0, 0, t387, -t292, t238, t234 + t297 - t359, 0, 0, 0, 0, 0, 0, t246 + t364, t245 + t363, -t221 * t394 + t270 * t224, t40 * t189 - t221 * t397 + t279 * t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402, t392, -t383 - t139, t48 * t142 + t37 * t144 + t23, 0, 0, 0, 0, 0, 0, -t134 * t291 - t360 - t369, t246 - t368, t270 * t221 + t224 * t394, -t40 * t142 + t279 * t221 + t224 * t397; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, -t93 ^ 2 + t95 ^ 2, -t394, -t376, t270, -t99, -t40 * t95 + t397, t40 * t93 - t279, 0, 0;];
tauc_reg  = t5;
