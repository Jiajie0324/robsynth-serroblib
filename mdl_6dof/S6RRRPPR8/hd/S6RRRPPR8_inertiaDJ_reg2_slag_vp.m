% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRPPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPPR8_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR8_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR8_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRPPR8_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:09:30
% EndTime: 2019-03-09 16:09:45
% DurationCPUTime: 5.27s
% Computational Cost: add. (4614->389), mult. (12038->674), div. (0->0), fcn. (10979->8), ass. (0->193)
t117 = sin(qJ(2));
t211 = cos(pkin(6));
t184 = pkin(1) * t211;
t113 = sin(pkin(6));
t120 = cos(qJ(2));
t204 = t113 * t120;
t225 = pkin(8) * t204 + t117 * t184;
t67 = t225 * qJD(2);
t116 = sin(qJ(3));
t119 = cos(qJ(3));
t205 = t113 * t117;
t72 = t211 * t116 + t119 * t205;
t128 = t72 * qJD(4) - t67;
t198 = qJD(2) * t120;
t178 = t113 * t198;
t185 = t116 * t205;
t46 = -qJD(3) * t185 + (t211 * qJD(3) + t178) * t119;
t246 = -t46 * qJ(4) - t128;
t114 = qJ(4) + pkin(5);
t231 = pkin(3) + pkin(4);
t188 = pkin(10) + t231;
t171 = t188 * t119;
t245 = t114 * t116 + t171;
t244 = t231 * t119;
t243 = t114 * t119 - t188 * t116;
t199 = qJD(2) * t117;
t45 = qJD(3) * t72 + t116 * t178;
t71 = -t211 * t119 + t185;
t28 = (-t120 * t45 + t71 * t199) * t113;
t242 = -0.2e1 * t28;
t145 = 0.2e1 * t45 * t72 + 0.2e1 * t46 * t71;
t241 = pkin(9) - qJ(5);
t240 = t45 * qJ(5) + t71 * qJD(5);
t239 = -pkin(8) * t205 + t120 * t184;
t138 = t211 * pkin(2) + t239;
t173 = t188 * t71;
t103 = qJD(3) * t116;
t104 = qJD(3) * t119;
t137 = qJD(2) * t239;
t200 = qJD(2) * t113;
t143 = (pkin(2) * t117 - pkin(9) * t120) * t200;
t64 = t211 * pkin(9) + t225;
t65 = (-pkin(2) * t120 - pkin(9) * t117 - pkin(1)) * t113;
t125 = t65 * t103 + t64 * t104 + t116 * t137 - t119 * t143;
t93 = t113 * t199;
t169 = pkin(3) * t93;
t14 = t125 - t169;
t9 = -pkin(4) * t93 - t46 * qJ(5) - t72 * qJD(5) + t14;
t236 = pkin(10) * t93 - qJD(6) * (t114 * t72 + t138 - t173) - t9;
t132 = t72 * qJ(4) + t138;
t235 = t72 * pkin(5) + t132 - t173;
t210 = qJ(4) * t116;
t174 = pkin(2) + t210;
t234 = pkin(5) * t116 + t171 + t174;
t115 = sin(qJ(6));
t109 = t115 ^ 2;
t118 = cos(qJ(6));
t111 = t118 ^ 2;
t202 = t109 - t111;
t172 = qJD(6) * t202;
t186 = pkin(9) * t103;
t68 = -qJ(5) * t103 + qJD(5) * t119 + t186;
t233 = qJD(6) * t243 + t68;
t232 = t116 * t45 - t119 * t46 + (t116 * t72 + t119 * t71) * qJD(3);
t122 = 0.2e1 * qJD(4);
t230 = pkin(9) * t46;
t229 = pkin(9) * t113;
t18 = t64 * t103 - t65 * t104 - t116 * t143 - t119 * t137;
t88 = qJ(4) * t93;
t144 = -t18 + t88;
t191 = qJD(4) * t120;
t8 = (pkin(5) * t199 - t191) * t113 + t144 + t240;
t228 = t115 * t8;
t227 = t118 * t8;
t87 = t241 * t119;
t226 = t68 * t87;
t37 = t116 * t65 + t119 * t64;
t224 = qJ(5) * t71;
t48 = t115 * t204 + t118 * t71;
t23 = qJD(6) * t48 + t115 * t45 + t118 * t93;
t223 = t115 * t23;
t102 = qJD(6) * t115;
t24 = -t71 * t102 - t115 * t93 + (qJD(6) * t204 + t45) * t118;
t222 = t115 * t24;
t47 = t115 * t71 - t118 * t204;
t221 = t115 * t47;
t220 = t115 * t48;
t219 = t118 * t23;
t218 = t118 * t24;
t217 = t118 * t47;
t216 = t118 * t48;
t177 = t113 * t191;
t13 = t144 - t177;
t215 = t119 * t13;
t214 = t119 * t18;
t213 = t119 * t45;
t209 = qJ(4) * t119;
t208 = qJD(4) * t87;
t207 = t188 * t115;
t206 = t188 * t118;
t112 = t119 ^ 2;
t201 = t116 ^ 2 - t112;
t197 = qJD(3) * t115;
t196 = qJD(3) * t118;
t195 = qJD(3) * t120;
t194 = qJD(4) * t116;
t193 = qJD(4) * t118;
t192 = qJD(4) * t119;
t190 = qJD(6) * t118;
t189 = qJD(6) * t119;
t38 = 0.2e1 * t71 * t45;
t39 = 0.2e1 * t72 * t46;
t187 = -0.2e1 * pkin(2) * qJD(3);
t107 = t113 ^ 2;
t183 = t107 * t198;
t182 = t116 * t196;
t181 = t119 * t195;
t180 = t115 * t189;
t179 = t118 * t189;
t176 = t115 * t190;
t175 = t116 * t104;
t36 = -t116 * t64 + t119 * t65;
t84 = t201 * qJD(3);
t170 = pkin(9) * t93;
t167 = t115 * t182;
t166 = t112 * t176;
t165 = t117 * t183;
t31 = pkin(3) * t204 - t36;
t164 = t211 * t200;
t124 = t114 * t46 - t188 * t45 + t128;
t22 = pkin(4) * t204 - qJ(5) * t72 + t31;
t20 = pkin(10) * t204 + t22;
t1 = t20 * t102 - t115 * t124 + t236 * t118;
t2 = t236 * t115 + t118 * t124 - t20 * t190;
t163 = -t1 * t118 - t115 * t2;
t4 = -t115 * t20 + t235 * t118;
t5 = t235 * t115 + t118 * t20;
t162 = -t115 * t5 - t118 * t4;
t160 = -pkin(3) * t119 - t210;
t159 = -t219 + t222;
t86 = t241 * t116;
t40 = -t115 * t86 + t118 * t234;
t41 = t115 * t234 + t118 * t86;
t158 = -t115 * t41 - t118 * t40;
t157 = t217 + t220;
t156 = t216 + t221;
t30 = -qJ(4) * t204 + t37;
t155 = -t116 * t30 + t119 * t31;
t154 = -t116 * t37 - t119 * t36;
t151 = -qJ(4) * t45 - qJD(4) * t71;
t32 = t71 * t103 - t213;
t34 = t72 * t104 + t116 * t46;
t33 = -t115 * t46 - t72 * t190;
t147 = t72 * t102 - t118 * t46;
t146 = (t116 * t71 + t119 * t72) * pkin(9);
t142 = t116 * t195 + t119 * t199;
t141 = -t18 + 0.2e1 * t88 - 0.2e1 * t177;
t27 = 0.2e1 * (-t120 * t46 + t72 * t199) * t113;
t57 = t142 * t113;
t136 = t243 * qJD(3);
t135 = t160 * qJD(3) + t192;
t134 = -t1 * t115 + t118 * t2 + (-t115 * t4 + t118 * t5) * qJD(6);
t133 = t162 * qJD(6) + t163;
t101 = pkin(9) * t104;
t70 = -qJ(5) * t104 - qJD(5) * t116 + t101;
t15 = t86 * t102 - t115 * (t136 + t194) - (pkin(2) + t245) * t190 - t118 * t70;
t16 = -qJD(6) * t41 - t115 * t70 + t116 * t193 + t118 * t136;
t131 = -t115 * t15 + t118 * t16 + (-t115 * t40 + t118 * t41) * qJD(6);
t3 = t158 * qJD(6) - t115 * t16 - t118 * t15;
t129 = t245 * qJD(3) - qJD(6) * t87 - t192;
t106 = qJ(4) * t122;
t92 = -0.2e1 * t175;
t91 = 0.2e1 * t175;
t81 = -pkin(2) + t160;
t80 = -0.2e1 * t165;
t79 = t181 * t229;
t78 = -0.2e1 * t84;
t77 = t174 + t244;
t74 = -t115 * t104 - t116 * t190;
t73 = t116 * t102 - t118 * t104;
t69 = -t194 + (pkin(3) * t116 - t209) * qJD(3);
t56 = (t116 * t199 - t181) * t113;
t55 = t194 + (-t231 * t116 + t209) * qJD(3);
t50 = t119 * t172 + t167;
t43 = pkin(9) * t213;
t29 = t71 * pkin(3) - t132;
t26 = -t30 - t224;
t25 = -t231 * t71 + t132;
t21 = -t114 * t204 + t224 + t37;
t17 = t45 * pkin(3) + t246;
t11 = -t231 * t45 - t246;
t10 = -t13 - t240;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t165, 0.2e1 * (-t117 ^ 2 + t120 ^ 2) * t107 * qJD(2), 0.2e1 * t120 * t164, t80, -0.2e1 * t117 * t164, 0, -0.2e1 * t107 * pkin(1) * t199 - 0.2e1 * t67 * t211, -0.2e1 * pkin(1) * t183 - 0.2e1 * t211 * t137, 0.2e1 * t137 * t204 - 0.2e1 * t178 * t239 + 0.2e1 * t67 * t205 - 0.2e1 * t225 * t93, 0.2e1 * t137 * t225 - 0.2e1 * t239 * t67, t39, -t145, t27, t38, t242, t80, -0.2e1 * t45 * t138 + 0.2e1 * t67 * t71 + 0.2e1 * (t120 * t125 + t36 * t199) * t113, -0.2e1 * t46 * t138 + 0.2e1 * t67 * t72 + 0.2e1 * (-t120 * t18 - t37 * t199) * t113, 0.2e1 * t125 * t72 + 0.2e1 * t18 * t71 - 0.2e1 * t36 * t46 - 0.2e1 * t37 * t45, -0.2e1 * t125 * t36 - 0.2e1 * t138 * t67 - 0.2e1 * t18 * t37, t39, t27, t145, t80, 0.2e1 * t28, t38, 0.2e1 * t17 * t71 + 0.2e1 * t29 * t45 + 0.2e1 * (t120 * t14 - t31 * t199) * t113, -0.2e1 * t13 * t71 + 0.2e1 * t14 * t72 - 0.2e1 * t30 * t45 + 0.2e1 * t31 * t46, -0.2e1 * t17 * t72 - 0.2e1 * t29 * t46 + 0.2e1 * (-t120 * t13 + t30 * t199) * t113, 0.2e1 * t13 * t30 + 0.2e1 * t14 * t31 + 0.2e1 * t17 * t29, t38, -t145, t242, t39, t27, t80, 0.2e1 * t11 * t72 + 0.2e1 * t25 * t46 + 0.2e1 * (t10 * t120 - t26 * t199) * t113, 0.2e1 * t11 * t71 + 0.2e1 * t25 * t45 + 0.2e1 * (-t120 * t9 + t22 * t199) * t113, -0.2e1 * t10 * t71 - 0.2e1 * t22 * t46 - 0.2e1 * t26 * t45 - 0.2e1 * t72 * t9, 0.2e1 * t10 * t26 + 0.2e1 * t11 * t25 + 0.2e1 * t22 * t9, 0.2e1 * t48 * t24, -0.2e1 * t23 * t48 - 0.2e1 * t24 * t47, 0.2e1 * t24 * t72 + 0.2e1 * t46 * t48, 0.2e1 * t47 * t23, -0.2e1 * t23 * t72 - 0.2e1 * t46 * t47, t39, 0.2e1 * t2 * t72 + 0.2e1 * t21 * t23 + 0.2e1 * t4 * t46 + 0.2e1 * t47 * t8, 0.2e1 * t1 * t72 + 0.2e1 * t21 * t24 - 0.2e1 * t46 * t5 + 0.2e1 * t48 * t8, 0.2e1 * t1 * t47 - 0.2e1 * t2 * t48 - 0.2e1 * t23 * t5 - 0.2e1 * t24 * t4, -0.2e1 * t1 * t5 + 0.2e1 * t2 * t4 + 0.2e1 * t21 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, 0, -t93, 0, -t67, -t137, 0, 0, t34, -t232, t56, t32, t57, 0, -pkin(2) * t45 - t119 * t67 + t79 + (-qJD(3) * t138 - t170) * t116, -pkin(2) * t46 - t104 * t138 + t116 * t67 - t142 * t229, -t214 - t43 + (t125 + t230) * t116 + (t146 + t154) * qJD(3), -pkin(2) * t67 + (t154 * qJD(3) + t116 * t125 - t214) * pkin(9), t34, t56, t232, 0, -t57, t32, -t119 * t17 + t45 * t81 + t69 * t71 + t79 + (qJD(3) * t29 - t170) * t116, t215 - t43 + (t14 + t230) * t116 + (t146 + t155) * qJD(3), pkin(9) * t57 - t29 * t104 - t116 * t17 - t46 * t81 - t69 * t72, t17 * t81 + t29 * t69 + (qJD(3) * t155 + t116 * t14 + t215) * pkin(9), t32, -t232, t57, t34, t56, 0, t25 * t104 + t11 * t116 + t46 * t77 + t55 * t72 + (t120 * t68 + t87 * t199) * t113, t25 * t103 - t11 * t119 + t45 * t77 + t55 * t71 + (-t120 * t70 + t86 * t199) * t113, t10 * t119 - t116 * t9 + t45 * t87 - t46 * t86 - t68 * t71 - t70 * t72 + (-t116 * t26 - t119 * t22) * qJD(3), -t10 * t87 + t11 * t77 + t22 * t70 + t25 * t55 + t26 * t68 + t86 * t9, t48 * t180 + (t48 * t103 - t119 * t24) * t118, -t157 * t103 + (t222 + t219 + (t216 - t221) * qJD(6)) * t119 (t72 * t196 + t24) * t116 + (qJD(3) * t48 + t147) * t119, -t47 * t179 + (t103 * t47 - t119 * t23) * t115 (-t197 * t72 - t23) * t116 + (-qJD(3) * t47 - t33) * t119, t34, t16 * t72 + t23 * t87 + t40 * t46 - t47 * t68 + (t197 * t21 + t2) * t116 + (qJD(3) * t4 - t190 * t21 - t228) * t119, t15 * t72 + t24 * t87 - t41 * t46 - t48 * t68 + (t196 * t21 + t1) * t116 + (-qJD(3) * t5 + t102 * t21 - t227) * t119, t103 * t162 + t119 * t134 + t15 * t47 - t16 * t48 - t23 * t41 - t24 * t40, -t1 * t41 - t15 * t5 + t16 * t4 + t2 * t40 - t21 * t68 + t8 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, t78, 0, t92, 0, 0, t116 * t187, t119 * t187, 0, 0, t91, 0, 0.2e1 * t84, 0, 0, t92, 0.2e1 * t81 * t103 - 0.2e1 * t119 * t69, 0, -0.2e1 * t81 * t104 - 0.2e1 * t116 * t69, 0.2e1 * t81 * t69, t92, t78, 0, t91, 0, 0, 0.2e1 * t77 * t104 + 0.2e1 * t116 * t55, 0.2e1 * t77 * t103 - 0.2e1 * t119 * t55, -0.2e1 * t116 * t70 + 0.2e1 * t119 * t68 + 0.2e1 * (t116 * t87 - t119 * t86) * qJD(3), 0.2e1 * t55 * t77 + 0.2e1 * t70 * t86 - 0.2e1 * t226, -0.2e1 * t111 * t175 - 0.2e1 * t166, 0.2e1 * t112 * t172 + 0.4e1 * t119 * t167, 0.2e1 * t116 * t180 + 0.2e1 * t196 * t201, -0.2e1 * t109 * t175 + 0.2e1 * t166, -0.2e1 * t115 * t84 + 0.2e1 * t116 * t179, t91, 0.2e1 * (t197 * t87 + t16) * t116 + 0.2e1 * (qJD(3) * t40 + t115 * t68 - t190 * t87) * t119, 0.2e1 * (t196 * t87 + t15) * t116 + 0.2e1 * (-qJD(3) * t41 + t102 * t87 + t118 * t68) * t119, 0.2e1 * t103 * t158 + 0.2e1 * t119 * t131, -0.2e1 * t15 * t41 + 0.2e1 * t16 * t40 - 0.2e1 * t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, -t45, t93, -t125, t18, 0, 0, 0, t46, 0, t93, t45, 0, -t125 + 0.2e1 * t169, -pkin(3) * t46 + t151, t141, -pkin(3) * t14 + qJ(4) * t13 + qJD(4) * t30, 0, 0, -t45, 0, t46, t93, t141 + t240, -t231 * t93 + t9, t231 * t46 - t151, -qJ(4) * t10 - qJD(4) * t26 - t231 * t9, -t190 * t48 - t222, qJD(6) * t157 - t218 + t223, t33, -t102 * t47 + t219, t147, 0, t46 * t207 + qJD(4) * t47 + t114 * t23 + t227 + (-t115 * t21 + t206 * t72) * qJD(6), t46 * t206 + qJD(4) * t48 + t114 * t24 - t228 + (-t118 * t21 - t207 * t72) * qJD(6), -t159 * t188 + (-t156 * t188 - t162) * qJD(6) - t163, qJD(4) * t21 + t114 * t8 - t133 * t188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, -t103, 0, -t101, t186, 0, 0, 0, t104, 0, 0, t103, 0, -t101, t135, -t186, t135 * pkin(9), 0, 0, -t103, 0, t104, 0, -t68, t70, -t192 + (t210 + t244) * qJD(3), -qJ(4) * t68 - t231 * t70 + t208, -t50, t202 * t103 - 0.4e1 * t119 * t176, t74, t50, t73, 0, t129 * t115 - t118 * t233, t115 * t233 + t129 * t118, -t3, -t114 * t68 - t188 * t3 + t208; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, t106, 0, 0, 0, 0, 0, 0, t122, 0, 0, t106, 0.2e1 * t176, -0.2e1 * t172, 0, -0.2e1 * t176, 0, 0, -0.2e1 * t102 * t114 + 0.2e1 * t193, -0.2e1 * qJD(4) * t115 - 0.2e1 * t114 * t190, 0, t114 * t122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t93, t46, 0, t14, 0, 0, 0, 0, 0, 0, 0, t93, -t46, t9, 0, 0, 0, 0, 0, 0, t33, t147, qJD(6) * t156 + t159, t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, t101, 0, 0, 0, 0, 0, 0, 0, 0, -t104, t70, 0, 0, 0, 0, 0, 0, t74, t73, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, t45, 0, t11, 0, 0, 0, 0, 0, 0, -t147, t33, -t223 - t218 + (-t217 + t220) * qJD(6), t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, t103, 0, t55, 0, 0, 0, 0, 0, 0, -t73, t74 (-t109 - t111) * t103, t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24, 0, -t23, t46, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180 + t182, 0, -t103 * t115 + t179, t104, t16, t15, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t190, 0, t102, 0, t188 * t190, -t188 * t102, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t190, t102, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, -t190, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
