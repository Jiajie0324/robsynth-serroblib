% Calculate inertial parameters regressor of coriolis matrix for
% S6PRPRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:34:19
% EndTime: 2019-03-08 20:34:50
% DurationCPUTime: 24.09s
% Computational Cost: add. (22990->684), mult. (50590->961), div. (0->0), fcn. (62033->12), ass. (0->541)
t743 = qJD(4) + qJD(5);
t559 = sin(pkin(12));
t888 = sin(qJ(4));
t732 = t888 * t559;
t561 = cos(pkin(12));
t890 = cos(qJ(4));
t734 = t890 * t561;
t527 = -t732 + t734;
t731 = t888 * t561;
t735 = t890 * t559;
t528 = t735 + t731;
t563 = sin(qJ(5));
t889 = cos(qJ(5));
t493 = -t889 * t527 + t563 * t528;
t565 = cos(qJ(6));
t950 = t565 * t493;
t970 = t950 / 0.2e1;
t971 = -t950 / 0.2e1;
t985 = t971 + t970;
t992 = qJD(6) * t985;
t837 = t493 ^ 2;
t521 = t889 * t528;
t821 = t563 * t527;
t928 = t521 + t821;
t958 = t928 ^ 2;
t961 = t958 - t837;
t987 = t961 * t565;
t994 = qJD(2) * t987;
t997 = t992 + t994;
t878 = pkin(8) + qJ(3);
t693 = t878 * t559;
t694 = t561 * t878;
t503 = t693 * t890 + t694 * t888;
t431 = -t528 * pkin(9) - t503;
t504 = -t693 * t888 + t694 * t890;
t432 = t527 * pkin(9) + t504;
t147 = -t563 * t431 - t889 * t432;
t996 = t743 * t147;
t562 = sin(qJ(6));
t995 = 0.2e1 * t562;
t739 = t889 * pkin(4);
t551 = -t739 - pkin(5);
t899 = -t551 / 0.2e1;
t988 = t961 * t562;
t993 = qJD(2) * t988;
t560 = sin(pkin(6));
t564 = sin(qJ(2));
t834 = t560 * t564;
t874 = cos(pkin(6));
t601 = t559 * t874 + t561 * t834;
t602 = -t559 * t834 + t561 * t874;
t446 = t601 * t890 + t602 * t888;
t571 = t601 * t888 - t602 * t890;
t687 = t563 * t446 + t889 * t571;
t566 = cos(qJ(2));
t833 = t560 * t566;
t430 = t889 * t446;
t570 = t563 * t571;
t927 = -t570 + t430;
t945 = t927 * t565;
t255 = -t562 * t833 + t945;
t861 = t255 * t565;
t829 = t562 * t927;
t254 = t565 * t833 + t829;
t863 = t254 * t562;
t976 = (t927 - t861 - t863) * t687;
t991 = t976 * qJD(1);
t944 = t928 * t562;
t480 = t944 / 0.2e1;
t973 = -t944 / 0.2e1;
t984 = t973 + t480;
t990 = t984 * qJD(3);
t885 = t927 * pkin(5);
t558 = t565 ^ 2;
t557 = t562 ^ 2;
t897 = t557 / 0.2e1;
t695 = t558 / 0.2e1 + t897;
t947 = t695 * t687;
t989 = -t885 / 0.2e1 - pkin(10) * t947;
t672 = t521 / 0.2e1;
t926 = t672 + t821 / 0.2e1;
t934 = t928 * qJD(2);
t969 = t493 * t934;
t986 = qJD(6) * t926 + t969;
t584 = t528 * t833;
t583 = t563 * t584;
t505 = t527 * t833;
t733 = t889 * t505;
t388 = t733 - t583;
t826 = t562 * t388;
t374 = t565 * t834 - t826;
t736 = t562 * t834;
t816 = t565 * t388;
t375 = t736 + t816;
t891 = t565 / 0.2e1;
t895 = -t562 / 0.2e1;
t811 = t374 * t895 + t375 * t891;
t892 = -t565 / 0.2e1;
t894 = t562 / 0.2e1;
t949 = (t254 * t892 + t255 * t894) * t493;
t963 = t949 - t811;
t983 = qJD(1) * t963;
t502 = t889 * t584;
t822 = t563 * t505;
t808 = -t822 / 0.2e1 - t502 / 0.2e1;
t709 = -t833 / 0.2e1;
t943 = t928 * t709;
t965 = t943 - t808;
t982 = qJD(1) * t965;
t962 = t949 + t811;
t981 = qJD(2) * t962;
t980 = qJD(2) * t963;
t964 = t943 + t808;
t979 = qJD(2) * t964;
t978 = qJD(2) * t965;
t977 = t961 * qJD(2);
t387 = t502 + t822;
t975 = t811 * pkin(10) - t387 * pkin(5) / 0.2e1;
t879 = t563 * pkin(4);
t550 = pkin(10) + t879;
t974 = t387 * t899 - t811 * t550;
t910 = -t945 / 0.2e1;
t972 = t945 / 0.2e1;
t951 = t558 * t493;
t471 = -t951 / 0.2e1;
t472 = t951 / 0.2e1;
t308 = t889 * t431 - t563 * t432;
t860 = t308 * t147;
t968 = t562 * t308;
t967 = t565 * t308;
t955 = t687 / 0.2e1;
t966 = t147 * t955;
t882 = t493 * pkin(10);
t952 = t928 * pkin(5);
t369 = t952 + t882;
t641 = -t147 * t928 + t308 * t493;
t886 = t147 * pkin(5);
t880 = t528 * pkin(4);
t321 = t880 + t369;
t828 = t562 * t321;
t149 = t967 + t828;
t869 = t149 * t565;
t818 = t565 * t321;
t148 = t818 - t968;
t872 = t148 * t562;
t917 = t869 / 0.2e1 - t872 / 0.2e1;
t960 = t917 * pkin(10) + t886 / 0.2e1;
t959 = t743 * t308;
t957 = -t493 / 0.2e1;
t956 = t493 / 0.2e1;
t954 = -t927 / 0.2e1;
t953 = -t928 / 0.2e1;
t887 = pkin(10) * t928;
t549 = -pkin(3) * t561 - pkin(2);
t513 = -pkin(4) * t527 + t549;
t670 = pkin(5) * t493 - t887;
t585 = t513 + t670;
t941 = t147 * t562;
t136 = -t565 * t585 - t941;
t940 = t147 * t565;
t137 = t562 * t585 - t940;
t948 = (t136 * t565 - t137 * t562) * t493;
t807 = t557 + t558;
t946 = t807 * t687;
t939 = t743 * t493;
t339 = (t897 - t558 / 0.2e1) * t928;
t824 = t562 * t565;
t930 = t743 * t824;
t284 = -t339 * qJD(2) + t930;
t938 = qJD(2) * t493;
t937 = qJD(3) * t493;
t935 = t926 * qJD(2);
t933 = t743 * t687;
t932 = -0.2e1 * t928;
t546 = t558 - t557;
t931 = t546 * t743;
t356 = 0.2e1 * t971;
t555 = t559 ^ 2;
t556 = t561 ^ 2;
t544 = t556 + t555;
t326 = t356 * t562;
t772 = t339 * qJD(6);
t924 = -t326 * qJD(5) + t772;
t923 = -t326 * qJD(4) + t772;
t327 = (t957 + t956) * t824;
t922 = -qJD(5) * t327 + t772;
t921 = qJD(4) * t327 + t772;
t554 = qJD(6) * t565;
t547 = t562 * t554;
t774 = t327 * qJD(2);
t920 = t774 - t547;
t919 = t774 + t547;
t576 = t733 / 0.2e1 - t583 / 0.2e1;
t728 = qJD(2) * t824;
t124 = t339 * t743 + t728 * t958;
t915 = t528 ^ 2;
t914 = -t254 / 0.2e1;
t913 = t255 / 0.2e1;
t912 = -t308 / 0.2e1;
t911 = -t147 / 0.2e1;
t907 = t927 / 0.2e1;
t673 = -t430 / 0.2e1;
t902 = t928 / 0.2e1;
t901 = t527 / 0.2e1;
t900 = t528 / 0.2e1;
t898 = t551 / 0.2e1;
t893 = t563 / 0.2e1;
t587 = t902 * t927;
t48 = t927 * t953 + t587;
t877 = t48 * qJD(4);
t876 = pkin(4) * qJD(5);
t875 = qJD(4) * pkin(4);
t873 = t137 * t565;
t871 = t148 * t565;
t870 = t149 * t562;
t817 = t565 * t369;
t180 = t817 - t968;
t868 = t180 * t562;
t867 = t180 * t565;
t827 = t562 * t369;
t181 = t827 + t967;
t866 = t181 * t562;
t865 = t181 * t565;
t864 = t254 * t493;
t862 = t255 * t493;
t857 = t308 * t387;
t856 = t308 * t928;
t851 = t687 * t387;
t848 = t374 * t565;
t847 = t375 * t562;
t843 = t387 * t562;
t842 = t387 * t565;
t667 = t695 * t493;
t588 = -t550 * t667 + t898 * t928;
t624 = t871 / 0.2e1 + t870 / 0.2e1;
t41 = t588 - t624;
t841 = t41 * qJD(2);
t840 = t48 * qJD(2);
t49 = -t254 * t374 + t255 * t375 + t851;
t839 = t49 * qJD(1);
t591 = -pkin(10) * t667 - t952 / 0.2e1;
t622 = t867 / 0.2e1 + t866 / 0.2e1;
t50 = t591 - t622;
t836 = t50 * qJD(2);
t832 = t562 * t136;
t342 = t562 * t493;
t814 = t565 * t928;
t540 = t560 ^ 2 * t564 * t566;
t90 = t388 * t927 - t540 + t851;
t812 = t90 * qJD(1);
t697 = 0.2e1 * t953;
t351 = t697 * t565;
t791 = qJD(4) * t565;
t810 = -t351 * qJD(5) + t791 * t928;
t483 = t557 * t493;
t462 = -t483 / 0.2e1;
t712 = t493 * t897;
t663 = t472 + t712;
t184 = t471 + t462 + t663;
t806 = qJD(2) * t184;
t201 = t837 + t958;
t189 = t201 * t562;
t804 = qJD(2) * t189;
t191 = t201 * t565;
t802 = qJD(2) * t191;
t798 = qJD(2) * t513;
t797 = qJD(2) * t560;
t796 = qJD(3) * t928;
t794 = qJD(4) * t928;
t792 = qJD(4) * t562;
t788 = qJD(5) * t928;
t787 = qJD(5) * t513;
t786 = qJD(5) * t562;
t785 = qJD(5) * t565;
t784 = qJD(6) * t562;
t463 = t483 / 0.2e1;
t187 = t472 + t463 + t663;
t782 = t187 * qJD(2);
t192 = t446 * t505 + t571 * t584 - t540;
t781 = t192 * qJD(1);
t780 = t201 * qJD(2);
t741 = -t889 / 0.2e1;
t604 = -t493 * t893 + t741 * t928;
t290 = (-t528 / 0.2e1 + t604) * pkin(4);
t777 = t290 * qJD(2);
t771 = t944 * qJD(2);
t770 = t342 * qJD(2);
t344 = t957 * t995;
t335 = t344 * qJD(2);
t696 = t902 + t953;
t347 = t696 * t562;
t769 = t347 * qJD(2);
t349 = t697 * t562;
t768 = t349 * qJD(2);
t350 = t696 * t565;
t767 = t350 * qJD(2);
t766 = t351 * qJD(2);
t765 = t950 * qJD(2);
t355 = 0.2e1 * t970;
t764 = t355 * qJD(2);
t763 = t356 * qJD(2);
t361 = t483 + t951;
t762 = t361 * qJD(2);
t362 = t546 * t958;
t761 = t362 * qJD(2);
t379 = (-0.1e1 + t544) * t540;
t760 = t379 * qJD(1);
t398 = 0.2e1 * t672 + t821;
t758 = t398 * qJD(2);
t594 = -t731 / 0.2e1 - t735 / 0.2e1;
t409 = (t900 + t594) * t833;
t757 = t409 * qJD(1);
t595 = -t734 / 0.2e1 + t732 / 0.2e1;
t410 = (t901 + t595) * t833;
t756 = t410 * qJD(1);
t526 = t527 ^ 2;
t437 = t526 - t915;
t755 = t437 * qJD(2);
t490 = t672 - t521 / 0.2e1;
t752 = t490 * qJD(2);
t751 = t490 * qJD(5);
t501 = t526 + t915;
t748 = t501 * qJD(2);
t747 = t527 * qJD(2);
t524 = t527 * qJD(4);
t746 = t528 * qJD(2);
t745 = t528 * qJD(4);
t744 = t544 * qJD(2);
t740 = t889 / 0.2e1;
t738 = t563 * t875;
t737 = t563 * t876;
t730 = t557 * t934;
t729 = t558 * t934;
t727 = t562 * t791;
t726 = t562 * t785;
t725 = qJD(6) * t493 * t928;
t722 = t928 * t938;
t721 = t527 * t746;
t720 = t527 * t745;
t719 = t564 * t797;
t718 = t565 * t934;
t717 = t928 * t955;
t304 = t687 * t894;
t305 = t687 * t891;
t716 = -t843 / 0.2e1;
t715 = t842 / 0.2e1;
t710 = t834 / 0.2e1;
t708 = t833 / 0.2e1;
t707 = t829 / 0.2e1;
t706 = -t826 / 0.2e1;
t705 = t493 * t895;
t702 = -t816 / 0.2e1;
t700 = t912 + t308 / 0.2e1;
t699 = t911 + t147 / 0.2e1;
t698 = t955 - t687 / 0.2e1;
t692 = t889 * qJD(4);
t691 = t889 * qJD(5);
t690 = t544 * t566;
t686 = -qJD(2) * t549 - qJD(3);
t685 = -t739 / 0.2e1;
t684 = t958 * t547;
t682 = t928 * t728;
t680 = t493 * t708;
t679 = t493 * t709;
t677 = t528 * t709;
t676 = t471 + t712;
t675 = t562 * t740;
t674 = t565 * t740;
t671 = t743 * t879;
t666 = -0.2e1 * t682;
t665 = 0.2e1 * t682;
t619 = t912 * t927 - t966;
t625 = t873 / 0.2e1 + t832 / 0.2e1;
t574 = t148 * t914 + t149 * t913 - t625 * t687 + t619;
t2 = t574 + t974;
t9 = -t136 * t148 + t137 * t149 + t860;
t659 = t2 * qJD(1) + t9 * qJD(2);
t10 = -t136 * t180 + t137 * t181 + t860;
t575 = (t911 - t625) * t687 + t180 * t914 + t181 * t913 - t308 * t907;
t4 = t575 - t975;
t658 = t4 * qJD(1) + t10 * qJD(2);
t657 = t493 * t682;
t11 = (t870 + t871) * t928 + t948;
t656 = -t11 * qJD(2) + t983;
t14 = (t866 + t867) * t928 + t948;
t655 = -t14 * qJD(2) + t983;
t581 = t308 * t954 - t619 - t966;
t605 = t387 * t741 + t388 * t893;
t15 = (t528 * t708 + t605) * pkin(4) + t581;
t62 = t513 * t880;
t654 = -t15 * qJD(1) + t62 * qJD(2);
t22 = -t136 * t928 + t148 * t493 + t562 * t641;
t580 = t254 * t953 + t562 * t587;
t31 = t715 + t580;
t653 = t31 * qJD(1) + t22 * qJD(2);
t23 = -t137 * t928 - t149 * t493 + t565 * t641;
t579 = t255 * t953 + t565 * t587;
t36 = t716 + t579;
t652 = t36 * qJD(1) + t23 * qJD(2);
t24 = (-t136 - t941) * t928 + (t180 + t968) * t493;
t627 = (t914 + t707) * t928;
t29 = t715 + t627;
t651 = t29 * qJD(1) + t24 * qJD(2);
t25 = (-t137 - t940) * t928 + (-t181 + t967) * t493;
t626 = (-t255 / 0.2e1 + t972) * t928;
t34 = t716 + t626;
t650 = t34 * qJD(1) + t25 * qJD(2);
t28 = -t856 - (t832 + t873) * t493;
t582 = -(t861 / 0.2e1 + t863 / 0.2e1) * t493 + t717;
t617 = -t848 / 0.2e1 - t847 / 0.2e1;
t40 = t582 + t617;
t649 = -qJD(1) * t40 - qJD(2) * t28;
t648 = t48 * qJD(1);
t78 = t136 * t493 + t308 * t944;
t614 = t687 * t953 + t710;
t87 = t702 - t864 / 0.2e1 - t614 * t562;
t647 = qJD(1) * t87 - qJD(2) * t78;
t79 = -t137 * t493 - t308 * t814;
t86 = t706 + t862 / 0.2e1 + t614 * t565;
t646 = qJD(1) * t86 - qJD(2) * t79;
t644 = t869 - t872;
t643 = t865 - t868;
t639 = -t551 * t493 - t550 * t928;
t156 = t910 + t972;
t578 = t550 * t953 + t493 * t899 + (t493 * t741 + t893 * t928) * pkin(4);
t572 = t887 / 0.2e1 + pkin(5) * t957 + t578;
t53 = t562 * t572 - t565 * t699;
t638 = t156 * qJD(1) + t53 * qJD(2);
t637 = t928 * (-qJD(6) - t938);
t618 = t927 * t957 + t717;
t107 = t710 - t618;
t109 = t147 * t493 - t856;
t636 = qJD(1) * t107 - qJD(2) * t109;
t316 = t673 + t430 / 0.2e1;
t635 = t316 * qJD(1);
t567 = t446 * t901 + t571 * t900;
t236 = t710 - t567;
t323 = t503 * t528 + t504 * t527;
t634 = qJD(1) * t236 - qJD(2) * t323;
t251 = -t493 * t880 - t513 * t928;
t633 = qJD(2) * t251 - t982;
t252 = t493 * t513 - t880 * t928;
t263 = -t679 + t576;
t632 = -qJD(1) * t263 + qJD(2) * t252;
t399 = (0.1e1 / 0.2e1 - t556 / 0.2e1 - t555 / 0.2e1) * t834;
t534 = t544 * qJ(3);
t631 = qJD(1) * t399 - qJD(2) * t534;
t630 = qJD(5) * t398 + t794;
t628 = t882 / 0.2e1 + t952 / 0.2e1;
t621 = t865 / 0.2e1 - t868 / 0.2e1;
t615 = t550 * t956 + t928 * t899;
t261 = t680 + t576;
t613 = -qJD(1) * t261 + t493 * t798;
t612 = -t798 * t928 - t982;
t609 = t685 + pkin(5) / 0.2e1 + t899;
t608 = (t788 + t794) * t493;
t607 = t939 * t928;
t606 = t369 / 0.2e1 + t628;
t603 = t807 * t889;
t569 = (t254 * t675 + t255 * t674 + t687 * t893) * pkin(4) - t550 * t947 + t927 * t898;
t13 = t569 - t989;
t486 = (t550 * t603 + t551 * t563) * pkin(4);
t568 = t621 * t550 + (t136 * t675 + t137 * t674 - t308 * t893) * pkin(4) - t147 * t898;
t6 = t568 - t960;
t600 = t13 * qJD(1) + t6 * qJD(2) + t486 * qJD(4);
t597 = t321 / 0.2e1 + t615;
t19 = (t181 / 0.2e1 - t149 / 0.2e1) * t565 + (-t180 / 0.2e1 + t148 / 0.2e1) * t562;
t525 = t603 * pkin(4);
t596 = -qJD(2) * t19 - qJD(4) * t525;
t506 = t609 * t562;
t84 = t606 * t565;
t593 = pkin(5) * t786 + qJD(2) * t84 + qJD(4) * t506;
t507 = t609 * t565;
t82 = t606 * t562;
t592 = pkin(5) * t785 - qJD(2) * t82 + qJD(4) * t507;
t151 = t698 * t562;
t73 = t562 * t700 - t565 * t597;
t590 = qJD(1) * t151 - qJD(2) * t73 - t551 * t792;
t155 = t698 * t565;
t71 = t562 * t597 + t565 * t700;
t589 = qJD(1) * t155 - qJD(2) * t71 - t551 * t791;
t153 = (t907 + t954) * t562;
t56 = t562 * t699 + t565 * t572;
t586 = -qJD(1) * t153 - qJD(2) * t56 - t562 * t738;
t543 = t562 * t737;
t539 = t546 * qJD(6);
t522 = t525 * qJD(5);
t509 = pkin(5) * t892 + t551 * t891 + t565 * t685;
t508 = pkin(5) * t895 + t551 * t894 + t562 * t685;
t438 = t547 * t932;
t412 = t594 * t833 + t677;
t411 = t527 * t709 + t595 * t833;
t400 = t601 * t561 / 0.2e1 - t602 * t559 / 0.2e1 + t710;
t385 = t666 + t931;
t384 = t665 - t931;
t383 = -t842 / 0.2e1;
t382 = t843 / 0.2e1;
t360 = t743 * t926;
t346 = 0.2e1 * t480;
t345 = -t342 / 0.2e1 - t705;
t337 = t350 * qJD(5);
t334 = t345 * qJD(6);
t333 = t344 * qJD(6);
t322 = t335 - t784;
t291 = t880 / 0.2e1 + t604 * pkin(4);
t264 = -t679 - t576;
t262 = t680 - t576;
t237 = t710 + t567;
t210 = 0.2e1 * t673 + t570;
t186 = t472 + t462 + t676;
t185 = t471 + t463 + t676;
t161 = -t687 * t892 + t305;
t160 = 0.2e1 * t305;
t159 = -t687 * t895 + t304;
t158 = 0.2e1 * t304;
t157 = 0.2e1 * t910;
t152 = t894 * t927 + t707;
t108 = t710 + t618;
t89 = -t862 / 0.2e1 + t928 * t305 + t706 + t565 * t710;
t88 = t864 / 0.2e1 + t687 * t973 + t702 - t736 / 0.2e1;
t85 = -t968 + t817 / 0.2e1 - t628 * t565;
t83 = -t967 - t827 / 0.2e1 + t628 * t562;
t76 = -0.2e1 * t947;
t74 = -t968 + t818 / 0.2e1 - t615 * t565;
t72 = -t967 - t828 / 0.2e1 + t615 * t562;
t55 = pkin(5) * t970 + t578 * t565 + t887 * t892 - t941;
t54 = -pkin(5) * t705 + pkin(10) * t973 + t578 * t562 + t940;
t51 = t591 + t622;
t42 = t588 + t624;
t39 = t582 - t617;
t35 = t382 + t579;
t33 = t382 + t626;
t32 = t383 + t580;
t30 = t383 + t627;
t18 = t621 + t917;
t16 = -t581 + (t605 + t677) * pkin(4);
t12 = t569 + t989;
t5 = t568 + t960;
t3 = t575 + t975;
t1 = t574 - t974;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t379 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t192, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t90, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t49 + t743 * t976; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t719, -t566 * t797, 0, 0, 0, 0, 0, 0, 0, 0, -t561 * t719, t559 * t719, t690 * t797, t760 + t400 * qJD(3) + (-pkin(2) * t564 + qJ(3) * t690) * t797, 0, 0, 0, 0, 0, 0, qJD(4) * t412 - t527 * t719, qJD(4) * t411 + t528 * t719 (t505 * t527 + t528 * t584) * qJD(2), t781 + (t503 * t584 + t505 * t504 + t549 * t834) * qJD(2) + t237 * qJD(3), 0, 0, 0, 0, 0, 0, t493 * t719 + t743 * t964, qJD(4) * t264 + qJD(5) * t262 + t719 * t928 (t387 * t928 - t388 * t493) * qJD(2) + t877, t812 + (-t147 * t388 + t513 * t834 - t857) * qJD(2) + t108 * qJD(3) + t16 * qJD(4), 0, 0, 0, 0, 0, 0 (t374 * t493 + t387 * t944) * qJD(2) + t32 * qJD(4) + t30 * qJD(5) + t89 * qJD(6) (-t375 * t493 + t387 * t814) * qJD(2) + t35 * qJD(4) + t33 * qJD(5) + t88 * qJD(6) (-t847 - t848) * t934 + t743 * t962, t839 + (-t136 * t374 + t137 * t375 - t857) * qJD(2) + t39 * qJD(3) + t1 * qJD(4) + t3 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t400 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t237 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t108 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t412 - qJD(4) * t446, t411 * qJD(2) + qJD(4) * t571, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t927 + qJD(5) * t210 + t979, qJD(2) * t264 + t933, t840, t16 * qJD(2) + (-t563 * t687 - t889 * t927) * t875, 0, 0, 0, 0, 0, 0, qJD(2) * t32 + qJD(5) * t157 + qJD(6) * t159 - t791 * t927, qJD(2) * t35 + qJD(5) * t152 + qJD(6) * t161 + t792 * t927, -qJD(4) * t946 + t76 * qJD(5) + t981, t991 + t1 * qJD(2) + (-t550 * t946 + t551 * t927) * qJD(4) + t12 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t210 - qJD(5) * t927 + t979, qJD(2) * t262 + t933, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t30 + qJD(4) * t157 + qJD(6) * t158 - t785 * t927, qJD(2) * t33 + qJD(4) * t152 + qJD(6) * t160 + t786 * t927, t76 * qJD(4) - qJD(5) * t946 + t981, t991 + t3 * qJD(2) + t12 * qJD(4) + (-pkin(10) * t946 - t885) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t89 + qJD(4) * t159 + qJD(5) * t158 - qJD(6) * t255, qJD(2) * t88 + qJD(4) * t161 + qJD(5) * t160 + qJD(6) * t254, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t399 - t760, 0, 0, 0, 0, 0, 0, -t409 * qJD(4), -t410 * qJD(4), 0, -qJD(3) * t236 - t781, 0, 0, 0, 0, 0, 0, t743 * t965, qJD(4) * t263 + qJD(5) * t261, t877, -qJD(3) * t107 - qJD(4) * t15 - t812, 0, 0, 0, 0, 0, 0, qJD(4) * t31 + qJD(5) * t29 - qJD(6) * t86, qJD(4) * t36 + qJD(5) * t34 - qJD(6) * t87, t743 * t963, qJD(3) * t40 + qJD(4) * t2 + qJD(5) * t4 - t839; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t544 * qJD(3), t534 * qJD(3), t720, t437 * qJD(4), 0, -t720, 0, 0, t549 * t745, t549 * t524, qJD(3) * t501, qJD(3) * t323, -t607, -t743 * t961, 0, t608, 0, 0, -qJD(4) * t251 + t787 * t928, -qJD(4) * t252 - t493 * t787, qJD(3) * t201, qJD(3) * t109 + qJD(4) * t62, -t558 * t607 - t684, t814 * t939 * t995 - t362 * qJD(6), -t562 * t725 + t743 * t987, -t557 * t607 + t684, -t565 * t725 - t743 * t988, t608, qJD(3) * t189 + qJD(4) * t22 + qJD(5) * t24 + qJD(6) * t79, qJD(3) * t191 + qJD(4) * t23 + qJD(5) * t25 + qJD(6) * t78, -qJD(4) * t11 - qJD(5) * t14, qJD(3) * t28 + qJD(4) * t9 + qJD(5) * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t744, -t631, 0, 0, 0, 0, 0, 0, 0, 0, t748, -t634, 0, 0, 0, 0, 0, 0, t751, 0, t780, qJD(4) * t291 - t636, 0, 0, 0, 0, 0, 0, t334 + t337 + t804, t743 * t984 + t802 + t992, t186 * qJD(5), qJD(4) * t42 + qJD(5) * t51 - t649; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t721, t755, t524, -t721, -t745, 0, -qJD(4) * t504 + t549 * t746 - t757, qJD(4) * t503 + t549 * t747 - t756, 0, 0, -t722, -t977, -t939, t969, -t630, 0, -t633 + t996, -t632 - t959 (t493 * t889 - t563 * t928) * t875 + t648, t291 * qJD(3) + (t147 * t889 + t308 * t563) * t875 + t654 -(t727 + t729) * t493 - t924, 0.2e1 * t657 + (t483 - t951) * qJD(4) + t185 * qJD(5) + t438, qJD(5) * t346 + t792 * t928 + t997 -(-t727 + t730) * t493 + t924, t334 - t993 + t810, t986 (t562 * t639 + t940) * qJD(4) + t54 * qJD(5) + t74 * qJD(6) + t653, t990 + (t565 * t639 - t941) * qJD(4) + t55 * qJD(5) + t72 * qJD(6) + t652, qJD(4) * t644 + t18 * qJD(5) + t656, t42 * qJD(3) + (-t147 * t551 + t550 * t644) * qJD(4) + t5 * qJD(5) + t659; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t969, -t977, -t939, t969, -qJD(4) * t398 - t788, 0, qJD(3) * t490 - t612 + t996, -t613 - t959, 0, 0 (-t726 - t729) * t493 - t923, t185 * qJD(4) + t438 + (-qJD(5) * t546 + t665) * t493, qJD(4) * t346 + t786 * t928 + t997 (t726 - t730) * t493 + t923, -qJD(4) * t351 + t785 * t928 - t993, t986, t350 * qJD(3) + t54 * qJD(4) + (t562 * t670 + t940) * qJD(5) + t85 * qJD(6) + t651, t990 + t55 * qJD(4) + (t565 * t670 - t941) * qJD(5) + t83 * qJD(6) + t650, t186 * qJD(3) + t18 * qJD(4) + qJD(5) * t643 + t655, t51 * qJD(3) + t5 * qJD(4) + (pkin(10) * t643 + t886) * qJD(5) + t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, t930 * t932 - t761, t562 * t637 + t743 * t985, t124, t345 * qJD(4) + t565 * t637, t360, qJD(3) * t345 + qJD(4) * t74 + qJD(5) * t85 - qJD(6) * t137 - t646, qJD(3) * t985 + qJD(4) * t72 + qJD(5) * t83 + qJD(6) * t136 - t647, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t236 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t107 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t744, t631, 0, 0, 0, 0, 0, 0, t745, t524, -t748, t634, 0, 0, 0, 0, 0, 0, t630, -t939, -t780, -qJD(4) * t290 + t636, 0, 0, 0, 0, 0, 0, t333 - t804 + t810, -qJD(4) * t944 + qJD(5) * t349 + qJD(6) * t356 - t802, qJD(4) * t361 + qJD(5) * t187, -qJD(4) * t41 - qJD(5) * t50 + t649; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t746, t747, 0, 0, 0, 0, 0, 0, 0, 0, t934, -t938, 0, -t777, 0, 0, 0, 0, 0, 0, t718, -t771, t762, -t841; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t758, -t938, 0, 0, 0, 0, 0, 0, 0, 0, -t766, t768, t782, -t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t322, -t554 + t763, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409 * qJD(2), t410 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t316 - t978, -qJD(2) * t263, -t840, qJD(2) * t15, 0, 0, 0, 0, 0, 0, -qJD(2) * t31 + qJD(5) * t156 - qJD(6) * t151, -qJD(2) * t36 + qJD(5) * t153 - qJD(6) * t155, -t980, -qJD(2) * t2 + qJD(5) * t13 - t991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t721, -t755, 0, t721, 0, 0, t528 * t686 + t757, t527 * t686 + t756, 0, 0, t722, t977, 0, -t969, -t751, 0, t633 - t796, t632 + t937, -t648, qJD(3) * t290 - t654, t558 * t722 - t922, qJD(5) * t184 + t438 - 0.2e1 * t657, qJD(5) * t347 + qJD(6) * t355 - t994, t557 * t722 + t922, t333 + t337 + t993, -t986, qJD(5) * t53 + qJD(6) * t73 - t565 * t796 - t653, qJD(3) * t944 + qJD(5) * t56 + qJD(6) * t71 - t652, -qJD(3) * t361 + qJD(5) * t19 - t656, qJD(3) * t41 + qJD(5) * t6 - t659; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t746, -t747, 0, 0, 0, 0, 0, 0, 0, 0, -t934, t938, 0, t777, 0, 0, 0, 0, 0, 0, -t718, t771, -t762, t841; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t737, -pkin(4) * t691, 0, 0, t547, t539, 0, -t547, 0, 0, t551 * t784 - t565 * t737, t551 * t554 + t543, t522, t486 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t752, 0, -t671 + t635 (-t692 - t691) * pkin(4), 0, 0, t919, t539 + t806, t769, -t919, t767, 0, t508 * qJD(6) - t565 * t671 + t638, qJD(6) * t509 + t543 - t586, t522 - t596 (-pkin(5) * t563 + pkin(10) * t603) * t876 + t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t284, t385, t554 + t764, -t284, t322, -t935, qJD(5) * t508 - t550 * t554 - t590, qJD(5) * t509 + t550 * t784 - t589, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t316 - t978, -qJD(2) * t261, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t29 - qJD(4) * t156, -qJD(2) * t34 - qJD(4) * t153, -t980, -qJD(2) * t4 - qJD(4) * t13 - t991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t969, t977, 0, -t969, t490 * qJD(4), 0, -qJD(3) * t398 + t612, t613 + t937, 0, 0, t558 * t969 - t921, -qJD(4) * t184 + t493 * t666 + t438, -qJD(4) * t347 + qJD(6) * t950 - t994, t557 * t969 + t921, -qJD(4) * t350 - qJD(6) * t342 + t993, -t986, qJD(3) * t351 - qJD(4) * t53 - qJD(6) * t84 - t651, -qJD(3) * t349 - qJD(4) * t56 + qJD(6) * t82 - t650, -qJD(3) * t187 - qJD(4) * t19 - t655, qJD(3) * t50 - qJD(4) * t6 - t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t758, t938, 0, 0, 0, 0, 0, 0, 0, 0, t766, -t768, -t782, t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t752, 0, -t635 + t738, pkin(4) * t692, 0, 0, -t920, t539 - t806, -t769, t920, -t767, 0, -qJD(6) * t506 + t565 * t738 - t638, -qJD(6) * t507 + t586, t596, -t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t547, t539, 0, -t547, 0, 0, -pkin(5) * t784, -pkin(5) * t554, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t284, t385, t554 + t765, -t284, -t770 - t784, -t935, -pkin(10) * t554 - t593, pkin(10) * t784 - t592, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t86 + qJD(4) * t151, qJD(2) * t87 + qJD(4) * t155, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, 0.2e1 * t928 * t930 + t761, -qJD(4) * t355 - qJD(5) * t950 + t562 * t969, -t124, -qJD(4) * t344 + qJD(5) * t342 + t565 * t969, t360, -qJD(3) * t344 - qJD(4) * t73 + qJD(5) * t84 + t646, -qJD(3) * t356 - qJD(4) * t71 - qJD(5) * t82 + t647, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t335, -t763, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t284, t384, -t764, t284, -t335, t935, qJD(5) * t506 + t590, qJD(5) * t507 + t589, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t284, t384, -t765, t284, t770, t935, t593, t592, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t7;
