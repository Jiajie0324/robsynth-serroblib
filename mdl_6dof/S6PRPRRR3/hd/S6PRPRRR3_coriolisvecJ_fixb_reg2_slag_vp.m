% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRPRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRPRRR3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:34:12
% EndTime: 2019-03-08 20:34:25
% DurationCPUTime: 5.70s
% Computational Cost: add. (10542->427), mult. (27343->585), div. (0->0), fcn. (22608->12), ass. (0->224)
t160 = sin(pkin(12));
t269 = pkin(8) + qJ(3);
t144 = t269 * t160;
t162 = cos(pkin(12));
t169 = cos(qJ(4));
t240 = t162 * t169;
t166 = sin(qJ(4));
t244 = t160 * t166;
t196 = -t240 + t244;
t161 = sin(pkin(6));
t170 = cos(qJ(2));
t242 = t161 * t170;
t178 = t196 * t242;
t227 = qJD(4) * t169;
t320 = qJD(1) * t178 + qJD(3) * t240 - t144 * t227;
t141 = t160 * t169 + t162 * t166;
t179 = t141 * t242;
t319 = -qJD(1) * t179 + t141 * qJD(3);
t164 = sin(qJ(6));
t168 = cos(qJ(6));
t224 = qJD(6) * t168;
t230 = qJD(2) * t162;
t215 = t169 * t230;
t147 = qJD(4) * t215;
t212 = qJD(2) * t244;
t124 = qJD(4) * t212 - t147;
t182 = qJD(2) * t141;
t125 = qJD(4) * t182;
t132 = -t212 + t215;
t165 = sin(qJ(5));
t281 = cos(qJ(5));
t211 = qJD(5) * t281;
t226 = qJD(5) * t165;
t185 = -t281 * t124 - t165 * t125 + t132 * t211 - t182 * t226;
t189 = -t165 * t132 - t182 * t281;
t223 = qJD(4) + qJD(5);
t82 = t164 * t223 - t168 * t189;
t247 = qJD(6) * t82;
t39 = t164 * t185 + t247;
t205 = t168 * t223;
t80 = -t164 * t189 - t205;
t266 = -t164 * t39 - t80 * t224;
t96 = t281 * t132 - t165 * t182;
t301 = qJD(6) - t96;
t315 = t164 * t301;
t293 = t82 * t315;
t306 = t168 * t96;
t225 = qJD(6) * t164;
t38 = -qJD(6) * t205 - t168 * t185 - t189 * t225;
t36 = t168 * t38;
t318 = t306 * t80 + t266 - t293 - t36;
t228 = qJD(3) * t160;
t145 = t269 * t162;
t239 = t166 * t145;
t279 = pkin(9) * t141;
t317 = -t166 * t228 + (-t239 - t279) * qJD(4) + t320;
t108 = -t166 * t144 + t169 * t145;
t311 = t196 * pkin(9) - t108;
t316 = t311 * qJD(4) - t319;
t167 = sin(qJ(2));
t234 = qJD(1) * t161;
t214 = t167 * t234;
t143 = qJD(2) * qJ(3) + t214;
t163 = cos(pkin(6));
t233 = qJD(1) * t163;
t150 = t162 * t233;
t105 = t150 + (-pkin(8) * qJD(2) - t143) * t160;
t112 = t162 * t143 + t160 * t233;
t106 = pkin(8) * t230 + t112;
t73 = t105 * t166 + t106 * t169;
t62 = pkin(9) * t132 + t73;
t221 = t281 * t62;
t246 = t106 * t166;
t72 = t169 * t105 - t246;
t61 = -pkin(9) * t182 + t72;
t58 = qJD(4) * pkin(4) + t61;
t30 = t165 * t58 + t221;
t28 = pkin(10) * t223 + t30;
t232 = qJD(1) * t170;
t213 = t161 * t232;
t201 = qJD(3) - t213;
t154 = -t162 * pkin(3) - pkin(2);
t231 = qJD(2) * t154;
t126 = t201 + t231;
t98 = -t132 * pkin(4) + t126;
t42 = -pkin(5) * t96 + pkin(10) * t189 + t98;
t199 = t164 * t28 - t168 * t42;
t314 = t301 * t199;
t183 = t141 * qJD(4);
t313 = pkin(4) * t183 - t214;
t294 = t223 * t96;
t312 = t185 - t294;
t271 = t96 ^ 2;
t272 = t189 ^ 2;
t310 = -t271 + t272;
t12 = t164 * t42 + t168 * t28;
t140 = (qJD(3) + t213) * qJD(2);
t186 = t141 * t140;
t44 = -t73 * qJD(4) - t186;
t173 = t124 * pkin(9) + t44;
t250 = t105 * t227 + t140 * t240;
t43 = (-qJD(4) * t106 - t140 * t160) * t166 + t250;
t41 = -t125 * pkin(9) + t43;
t172 = -t165 * t173 - t58 * t211 + t62 * t226 - t281 * t41;
t146 = qJD(2) * t214;
t104 = pkin(4) * t125 + t146;
t206 = t165 * t124 - t281 * t125;
t299 = qJD(5) * t189;
t60 = -t206 - t299;
t22 = pkin(5) * t60 - pkin(10) * t185 + t104;
t3 = -qJD(6) * t12 + t164 * t172 + t168 * t22;
t295 = t301 * t12 + t3;
t35 = t38 * t164;
t308 = -t35 + (t224 - t306) * t82;
t51 = t164 * t60;
t265 = t224 * t301 + t51;
t273 = t82 * t189;
t307 = -t301 * t306 + t265 + t273;
t107 = -t169 * t144 - t239;
t88 = t107 - t279;
t194 = t165 * t311 + t281 * t88;
t268 = t194 * qJD(5) + t316 * t165 + t317 * t281;
t275 = t80 * t189;
t305 = t301 * t189;
t270 = t96 * t189;
t304 = t98 * t189;
t177 = t281 * t196;
t67 = t141 * t226 + t165 * t183 + t223 * t177;
t101 = t281 * t141 - t165 * t196;
t181 = t196 * qJD(4);
t68 = t101 * qJD(5) - t165 * t181 + t281 * t183;
t303 = t68 * pkin(5) + t67 * pkin(10) + t313;
t302 = t199 * t189;
t238 = t189 * qJD(4);
t300 = -t238 + t206;
t298 = -t98 * t96 + t172;
t255 = t165 * t62;
t29 = t281 * t58 - t255;
t27 = -pkin(5) * t223 - t29;
t40 = t281 * t173;
t210 = t165 * t41 - t40;
t8 = qJD(5) * t30 + t210;
t284 = t8 * t164 + t27 * t224;
t297 = -t12 * t189 + t284;
t64 = -pkin(5) * t189 - pkin(10) * t96;
t2 = -qJD(6) * t199 + t164 * t22 - t168 * t172;
t296 = t2 + t314;
t53 = t168 * t60;
t191 = t225 * t301 - t53;
t25 = t27 * t225;
t292 = t8 * t168 - t25;
t198 = (-t143 * t160 + t150) * t160 - t112 * t162;
t291 = t198 * t170;
t289 = t12 * t168 + t164 * t199;
t288 = t182 ^ 2;
t287 = qJD(4) ^ 2;
t286 = t8 * t194;
t243 = t161 * t167;
t129 = -t160 * t243 + t162 * t163;
t130 = t160 * t163 + t162 * t243;
t91 = t129 * t169 - t130 * t166;
t92 = t129 * t166 + t130 * t169;
t193 = -t165 * t92 + t281 * t91;
t285 = t8 * t193;
t49 = t165 * t88 - t281 * t311;
t100 = t165 * t141 + t177;
t116 = pkin(4) * t196 + t154;
t50 = t100 * pkin(5) - t101 * pkin(10) + t116;
t23 = -t164 * t49 + t168 * t50;
t283 = qJD(6) * t23 + t303 * t164 + t268 * t168;
t24 = t164 * t50 + t168 * t49;
t282 = -qJD(6) * t24 - t268 * t164 + t303 * t168;
t280 = pkin(4) * t182;
t1 = t2 * t168;
t274 = t82 * t80;
t267 = t49 * qJD(5) + t317 * t165 - t316 * t281;
t263 = pkin(4) * qJD(5);
t262 = qJD(2) * pkin(2);
t261 = t100 * t60;
t258 = t164 * t27;
t256 = t164 * t80;
t254 = t168 * t67;
t253 = t168 * t82;
t37 = t39 * t168;
t249 = (-qJD(4) * t145 - t228) * t166 + t320;
t248 = qJD(4) * t108 + t319;
t245 = t182 * t132;
t171 = qJD(2) ^ 2;
t241 = t161 * t171;
t235 = t160 ^ 2 + t162 ^ 2;
t229 = qJD(2) * t167;
t219 = t167 * t241;
t218 = t170 * t241;
t217 = t161 ^ 2 * t232;
t216 = t161 * t229;
t207 = t235 * t140;
t204 = pkin(4) * t211;
t31 = t165 * t61 + t221;
t203 = pkin(4) * t226 - t31;
t200 = t12 * t164 - t168 * t199;
t195 = t315 * t96 - t191;
t56 = t165 * t91 + t281 * t92;
t45 = -t164 * t56 - t168 * t242;
t190 = t164 * t242 - t168 * t56;
t188 = pkin(4) * t141;
t155 = pkin(4) * t165 + pkin(10);
t176 = -t155 * t60 - t204 * t301 - t27 * t96;
t175 = -qJD(6) * t200 - t3 * t164 + t1;
t156 = -t281 * pkin(4) - pkin(5);
t142 = t201 - t262;
t128 = t132 ^ 2;
t71 = -qJD(2) * t179 - qJD(4) * t92;
t70 = -qJD(2) * t178 + qJD(4) * t91;
t47 = t280 + t64;
t32 = t281 * t61 - t255;
t18 = t56 * qJD(5) + t165 * t70 - t281 * t71;
t17 = t193 * qJD(5) + t165 * t71 + t281 * t70;
t16 = t164 * t64 + t168 * t29;
t15 = -t164 * t29 + t168 * t64;
t14 = t164 * t47 + t168 * t32;
t13 = -t164 * t32 + t168 * t47;
t10 = qJD(6) * t190 - t164 * t17 + t168 * t216;
t9 = qJD(6) * t45 + t164 * t216 + t168 * t17;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, -t218, 0, 0, 0, 0, 0, 0, 0, 0, -t162 * t219, t160 * t219, t235 * t218 (-t129 * t160 + t130 * t162) * t140 + (-t167 * t217 + (t142 * t167 - t291) * t161) * qJD(2), 0, 0, 0, 0, 0, 0, t71 * qJD(4) + (-t125 * t170 - t132 * t229) * t161, -t70 * qJD(4) + (t124 * t170 + t182 * t229) * t161, t124 * t91 - t125 * t92 + t132 * t70 - t182 * t71, t43 * t92 + t44 * t91 + t73 * t70 + t72 * t71 + (t126 * t161 - t217) * t229, 0, 0, 0, 0, 0, 0, -t18 * t223 + (-t170 * t60 - t229 * t96) * t161, -t17 * t223 + (-t170 * t185 - t189 * t229) * t161, t17 * t96 - t18 * t189 - t185 * t193 - t56 * t60, t30 * t17 - t29 * t18 - t285 - t172 * t56 + (-t104 * t170 + t229 * t98) * t161, 0, 0, 0, 0, 0, 0, t10 * t301 + t18 * t80 - t193 * t39 + t45 * t60, t18 * t82 + t190 * t60 + t193 * t38 - t301 * t9, -t10 * t82 + t190 * t39 + t38 * t45 - t80 * t9, -t10 * t199 + t12 * t9 + t18 * t27 - t190 * t2 + t3 * t45 - t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201 * qJD(2) * t235 + t207, -t198 * qJD(3) + qJ(3) * t207 + (t291 + (-t142 - t262) * t167) * t234, -t124 * t141 - t181 * t182, -t141 * t125 + t124 * t196 + (-t132 * t196 - t141 * t182) * qJD(4), -t196 * t287, t125 * t196 - t132 * t183, -t141 * t287, 0, t154 * t125 + (qJD(2) * t196 + t132) * t214 + (t126 * t141 - t248) * qJD(4), -t154 * t124 + (-t126 * t196 - t249) * qJD(4), -t108 * t125 - t43 * t196 + t107 * t124 - t44 * t141 + t248 * t182 + t249 * t132 + (-t141 * t73 + t196 * t72) * qJD(4), t44 * t107 + t43 * t108 + t249 * t73 - t248 * t72 + (-t126 + t231) * t214, t101 * t185 + t189 * t67, -t100 * t185 - t101 * t60 + t189 * t68 - t67 * t96, -t67 * t223, -t68 * t96 + t261, -t68 * t223, 0, t96 * t214 + t104 * t100 + t116 * t60 + t98 * t68 - t267 * qJD(5) + (-t188 * t96 - t267) * qJD(4), t189 * t214 + t104 * t101 + t116 * t185 - t98 * t67 - t268 * qJD(5) + (-t188 * t189 - t268) * qJD(4), t100 * t172 + t8 * t101 - t185 * t194 - t189 * t267 + t268 * t96 + t29 * t67 - t30 * t68 - t49 * t60, t104 * t116 - t172 * t49 - t267 * t29 + t268 * t30 + t313 * t98 - t286, -t67 * t253 + (-t225 * t82 - t36) * t101 (t164 * t82 + t168 * t80) * t67 + (t35 - t37 + (-t253 + t256) * qJD(6)) * t101, -t38 * t100 - t101 * t191 - t254 * t301 + t82 * t68, -t101 * t266 - t256 * t67, -t39 * t100 - t101 * t265 + t315 * t67 - t80 * t68, t301 * t68 + t261, t3 * t100 + t284 * t101 - t194 * t39 - t199 * t68 + t23 * t60 - t67 * t258 + t267 * t80 + t282 * t301, -t2 * t100 + t292 * t101 - t12 * t68 + t194 * t38 - t24 * t60 - t27 * t254 + t267 * t82 - t283 * t301, t23 * t38 - t24 * t39 - t282 * t82 - t283 * t80 + t200 * t67 + (-qJD(6) * t289 - t2 * t164 - t3 * t168) * t101, t12 * t283 - t199 * t282 + t2 * t24 + t3 * t23 + t267 * t27 - t286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235 * t171, qJD(2) * t198 + t146, 0, 0, 0, 0, 0, 0, 0.2e1 * t125, t147 + (t132 - t212) * qJD(4), -t128 - t288, -t132 * t73 + t182 * t72 + t146, 0, 0, 0, 0, 0, 0, -t206 - t238 - 0.2e1 * t299, t185 + t294, -t271 - t272, -t189 * t29 - t30 * t96 + t104, 0, 0, 0, 0, 0, 0, t195 + t275, -t168 * t301 ^ 2 + t273 - t51 (t80 * t96 + t38) * t168 + t293 + t266, t296 * t164 + t295 * t168 + t189 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t245, -t128 + t288, t147 + (-t132 - t212) * qJD(4), t245, 0, 0, -t126 * t182 - t186, t140 * t244 - t126 * t132 + (t72 + t246) * qJD(4) - t250, 0, 0, t270, t310, t312, -t270, t300, 0, -t62 * t211 + t40 + t31 * t223 + t96 * t280 + t304 + (-qJD(5) * t58 - t223 * t263 - t41) * t165, t32 * t223 + (t182 * t189 - t211 * t223) * pkin(4) + t298, t29 * t96 - t30 * t189 + t31 * t189 - t32 * t96 + (-t281 * t185 - t165 * t60 + (-t165 * t189 + t281 * t96) * qJD(5)) * pkin(4), t29 * t31 - t30 * t32 + (-t281 * t8 - t182 * t98 - t165 * t172 + (-t165 * t29 + t281 * t30) * qJD(5)) * pkin(4), t308, t318, t307, t315 * t80 - t37, t195 - t275, t305, -t302 - t13 * t301 + t156 * t39 + t25 + t203 * t80 + (-qJD(6) * t155 * t301 - t8) * t168 + t176 * t164, -t156 * t38 + (t155 * t225 + t14) * t301 + t203 * t82 + t176 * t168 + t297, t13 * t82 + t14 * t80 + t1 + (-t80 * t204 - t199 * t96 - t155 * t39 + (t155 * t82 + t199) * qJD(6)) * t168 + (t82 * t204 + t12 * t96 - t155 * t38 - t3 + (t155 * t80 - t12) * qJD(6)) * t164, t199 * t13 - t12 * t14 + t8 * t156 - t27 * t31 + (t165 * t27 + t281 * t289) * t263 + t175 * t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t270, t310, t312, -t270, t300, 0, t30 * qJD(4) - t210 + t304, t223 * t29 + t298, 0, 0, t308, t318, t307, t256 * t301 - t37, -t301 * t315 - t275 + t53, t305, -pkin(5) * t39 - pkin(10) * t265 - t15 * t301 - t258 * t96 - t30 * t80 - t292 - t302, pkin(5) * t38 + pkin(10) * t191 + t16 * t301 - t27 * t306 - t30 * t82 + t297, t15 * t82 + t16 * t80 + t1 + (t314 + (-t39 + t247) * pkin(10)) * t168 + ((qJD(6) * t80 - t38) * pkin(10) - t295) * t164, -t8 * pkin(5) + pkin(10) * t175 - t12 * t16 + t15 * t199 - t27 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t274, -t80 ^ 2 + t82 ^ 2, t301 * t80 - t38, -t274, t301 * t82 - t39, t60, -t27 * t82 + t295, t27 * t80 - t296, 0, 0;];
tauc_reg  = t4;
