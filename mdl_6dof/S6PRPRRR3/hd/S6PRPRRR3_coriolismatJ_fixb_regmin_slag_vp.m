% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,d6,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRPRRR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:34:16
% EndTime: 2019-03-08 20:34:34
% DurationCPUTime: 9.42s
% Computational Cost: add. (7679->426), mult. (17458->628), div. (0->0), fcn. (21503->12), ass. (0->340)
t321 = cos(qJ(6));
t315 = cos(pkin(12));
t322 = cos(qJ(4));
t487 = t322 * t315;
t313 = sin(pkin(12));
t319 = sin(qJ(4));
t495 = t319 * t313;
t281 = t487 - t495;
t529 = cos(qJ(5));
t427 = t529 * t281;
t488 = t322 * t313;
t494 = t319 * t315;
t282 = t488 + t494;
t318 = sin(qJ(5));
t496 = t318 * t282;
t565 = t427 - t496;
t567 = t321 * t565;
t579 = t567 / 0.2e1;
t580 = -t567 / 0.2e1;
t590 = t579 + t580;
t596 = qJD(6) * t590;
t508 = t565 ^ 2;
t278 = t529 * t282;
t350 = t318 * t281;
t549 = t278 + t350;
t571 = t549 ^ 2;
t575 = t571 - t508;
t593 = t575 * t321;
t598 = qJD(2) * t593;
t601 = t596 + t598;
t437 = qJD(4) + qJD(5);
t317 = sin(qJ(6));
t314 = sin(pkin(6));
t323 = cos(qJ(2));
t506 = t314 * t323;
t330 = t549 * t506;
t328 = -t330 / 0.2e1;
t316 = cos(pkin(6));
t505 = t316 * t313;
t320 = sin(qJ(2));
t507 = t314 * t320;
t276 = t315 * t507 + t505;
t361 = -t313 * t507 + t316 * t315;
t218 = t276 * t319 - t322 * t361;
t219 = t276 * t322 + t319 * t361;
t356 = -t218 * t318 + t219 * t529;
t489 = t321 * t549;
t405 = t489 / 0.2e1;
t568 = -t549 / 0.2e1;
t492 = t321 * t356;
t84 = -t317 * t506 + t492;
t430 = t84 * t568;
t591 = t317 * t328 + t356 * t405 + t430;
t600 = qJD(1) * t591;
t599 = qJD(2) * t591;
t594 = t575 * t317;
t597 = qJD(2) * t594;
t566 = t549 * t317;
t581 = t566 / 0.2e1;
t582 = -t566 / 0.2e1;
t589 = t582 + t581;
t595 = t589 * qJD(3);
t558 = t549 * qJD(2);
t423 = t565 * t558;
t388 = t278 / 0.2e1;
t576 = t388 + t350 / 0.2e1;
t592 = qJD(6) * t576 - t423;
t327 = t330 / 0.2e1;
t503 = t317 * t356;
t83 = t321 * t506 + t503;
t431 = t83 * t568;
t5 = t321 * t327 + t356 * t581 + t431;
t569 = -t565 / 0.2e1;
t573 = (t569 - t496 / 0.2e1 + t427 / 0.2e1) * t506;
t588 = qJD(1) * t573;
t574 = (t568 + t576) * t506;
t587 = qJD(1) * t574;
t586 = t573 * qJD(2);
t585 = t574 * qJD(2);
t584 = t575 * qJD(2);
t523 = pkin(8) + qJ(3);
t292 = t523 * t313;
t293 = t523 * t315;
t368 = t292 * t319 - t293 * t322;
t205 = pkin(9) * t281 - t368;
t393 = t292 * t322 + t293 * t319;
t362 = -pkin(9) * t282 - t393;
t564 = t205 * t529 + t318 * t362;
t583 = t437 * t564;
t578 = t564 * t317;
t577 = t564 * t321;
t525 = t549 * pkin(5);
t526 = t565 * pkin(10);
t162 = t525 - t526;
t416 = -t506 / 0.2e1;
t340 = t281 * t416;
t415 = t506 / 0.2e1;
t557 = -t278 * t415 + t318 * t340 + t416 * t549;
t572 = qJD(2) * t557 - t356 * t437;
t570 = t565 / 0.2e1;
t550 = t529 * t362;
t542 = -t550 / 0.2e1;
t527 = pkin(10) * t549;
t563 = t437 * t565;
t497 = t318 * t205;
t118 = t550 - t497;
t311 = t317 ^ 2;
t312 = t321 ^ 2;
t398 = t311 / 0.2e1 - t312 / 0.2e1;
t139 = t398 * t549;
t500 = t317 * t321;
t551 = t437 * t500;
t105 = -t139 * qJD(2) + t551;
t562 = qJD(2) * t565;
t561 = qJD(3) * t565;
t559 = t576 * qJD(2);
t394 = t218 * t529 + t219 * t318;
t556 = t437 * t394;
t554 = -0.2e1 * t549;
t300 = t312 - t311;
t553 = t300 * t437;
t156 = 0.2e1 * t579;
t425 = qJD(2) * t500;
t546 = t139 * t437 + t425 * t571;
t309 = t313 ^ 2;
t535 = t549 / 0.2e1;
t435 = t529 * pkin(4);
t305 = -t435 - pkin(5);
t534 = -t305 / 0.2e1;
t533 = -t317 / 0.2e1;
t532 = t317 / 0.2e1;
t531 = -t321 / 0.2e1;
t530 = t321 / 0.2e1;
t528 = pkin(4) * t282;
t524 = t318 * pkin(4);
t522 = t83 * t565;
t521 = t84 * t565;
t371 = t508 + t571;
t52 = t371 * t317;
t518 = qJD(2) * t52;
t54 = t371 * t321;
t516 = qJD(2) * t54;
t511 = t317 * t118;
t510 = t321 * t118;
t170 = t565 * t506;
t502 = t317 * t170;
t142 = t317 * t565;
t491 = t321 * t170;
t34 = t542 + t550 / 0.2e1;
t485 = t34 * qJD(2);
t400 = 0.2e1 * t568;
t151 = t400 * t321;
t471 = qJD(4) * t321;
t482 = -qJD(5) * t151 + t471 * t549;
t481 = t340 * t529 - t416 * t496;
t298 = t315 ^ 2 + t309;
t132 = (t570 + t569) * t500;
t479 = qJD(2) * t132;
t303 = -pkin(3) * t315 - pkin(2);
t268 = -pkin(4) * t281 + t303;
t477 = qJD(2) * t268;
t476 = qJD(2) * t314;
t475 = qJD(3) * t549;
t474 = qJD(4) * t549;
t472 = qJD(4) * t317;
t469 = qJD(5) * t549;
t468 = qJD(5) * t268;
t467 = qJD(5) * t317;
t466 = qJD(5) * t321;
t465 = qJD(6) * t317;
t308 = qJD(6) * t321;
t463 = t566 * qJD(2);
t462 = t142 * qJD(2);
t144 = 0.2e1 * t570 * t317;
t136 = t144 * qJD(2);
t399 = t535 + t568;
t147 = t399 * t317;
t461 = t147 * qJD(2);
t149 = t400 * t317;
t460 = t149 * qJD(2);
t150 = t399 * t321;
t459 = t150 * qJD(2);
t458 = t151 * qJD(2);
t457 = t567 * qJD(2);
t155 = 0.2e1 * t580;
t456 = t155 * qJD(2);
t455 = t156 * qJD(2);
t161 = t300 * t571;
t454 = t161 * qJD(2);
t163 = ((-0.1e1 + t309) * t507 + (t276 - t505) * t315) * t506;
t453 = t163 * qJD(1);
t174 = 0.2e1 * t388 + t350;
t451 = t174 * qJD(2);
t358 = t488 / 0.2e1 + t494 / 0.2e1;
t185 = (t282 / 0.2e1 - t358) * t506;
t450 = t185 * qJD(1);
t357 = -t487 / 0.2e1 + t495 / 0.2e1;
t186 = (t281 / 0.2e1 + t357) * t506;
t449 = t186 * qJD(1);
t210 = t281 ^ 2 - t282 ^ 2;
t448 = t210 * qJD(2);
t251 = t388 - t278 / 0.2e1;
t445 = t251 * qJD(2);
t444 = t251 * qJD(5);
t441 = t281 * qJD(2);
t279 = t281 * qJD(4);
t440 = t282 * qJD(2);
t439 = t282 * qJD(4);
t438 = t298 * qJD(2);
t434 = qJD(4) * t524;
t433 = qJD(5) * t524;
t432 = t317 * t507;
t426 = t312 * t558;
t424 = qJD(6) * t565 * t549;
t422 = t549 * t562;
t421 = t281 * t440;
t420 = t320 * t476;
t301 = t317 * t308;
t419 = t321 * t558;
t114 = t394 * t532;
t115 = t394 * t530;
t417 = t507 / 0.2e1;
t414 = t503 / 0.2e1;
t413 = -t502 / 0.2e1;
t412 = t142 / 0.2e1;
t411 = t565 * t533;
t407 = -t491 / 0.2e1;
t397 = t529 * qJD(4);
t396 = t529 * qJD(5);
t395 = t298 * t323;
t392 = -qJD(2) * t303 - qJD(3);
t391 = -t435 / 0.2e1;
t389 = t549 * t425;
t387 = t437 * t524;
t386 = -pkin(5) * t565 - t527;
t384 = -0.2e1 * t389;
t383 = 0.2e1 * t389;
t129 = t528 + t162;
t335 = t268 + t386;
t31 = -t321 * t335 + t578;
t346 = t564 * t549;
t1 = -t129 * t567 - t31 * t549 + t317 * t346;
t7 = t114 * t565 - t394 * t412 + t5;
t380 = t7 * qJD(1) + t1 * qJD(2);
t3 = -t162 * t567 + (-t31 + t578) * t549;
t379 = t5 * qJD(1) + t3 * qJD(2);
t32 = t317 * t335 + t577;
t4 = t162 * t142 + (-t32 + t577) * t549;
t378 = t4 * qJD(2) + t600;
t2 = t129 * t142 - t32 * t549 + t321 * t346;
t377 = t2 * qJD(2) + t600;
t304 = pkin(10) + t524;
t333 = t304 * t568 - t565 * t534 + (t318 * t535 + t529 * t570) * pkin(4);
t324 = t527 / 0.2e1 + pkin(5) * t570 + t333;
t13 = t317 * t324;
t376 = t13 * qJD(2);
t21 = t118 * t566 - t31 * t565;
t359 = t394 * t568 + t417;
t28 = t407 + t522 / 0.2e1 - t359 * t317;
t375 = qJD(1) * t28 - qJD(2) * t21;
t22 = -t118 * t489 + t32 * t565;
t27 = t413 - t521 / 0.2e1 + t359 * t321;
t374 = qJD(1) * t27 - qJD(2) * t22;
t80 = -t268 * t549 + t528 * t565;
t373 = qJD(2) * t80 - t587;
t81 = -t268 * t565 - t528 * t549;
t372 = qJD(2) * t81 - t588;
t369 = -t304 * t549 + t305 * t565;
t367 = t549 * (-qJD(6) + t562);
t334 = t276 * t315 / 0.2e1 - t361 * t313 / 0.2e1;
t175 = t417 - t334;
t287 = t298 * qJ(3);
t366 = qJD(1) * t175 - qJD(2) * t287;
t365 = qJD(5) * t174 + t474;
t363 = -t526 / 0.2e1 + t525 / 0.2e1;
t360 = t304 * t569 + t534 * t549;
t355 = -t477 * t565 - t588;
t354 = -t477 * t549 - t587;
t349 = t391 + pkin(5) / 0.2e1 + t534;
t348 = t563 * t549;
t347 = t162 / 0.2e1 + t363;
t343 = t129 / 0.2e1 + t360;
t23 = t347 * t317;
t263 = t349 * t321;
t342 = pkin(5) * t466 - qJD(2) * t23 + qJD(4) * t263;
t25 = t347 * t321;
t262 = t349 * t317;
t341 = pkin(5) * t467 + qJD(2) * t25 + qJD(4) * t262;
t17 = t317 * t343;
t339 = -qJD(2) * t17 - t305 * t471;
t19 = t321 * t343;
t338 = qJD(2) * t19 - t305 * t472;
t337 = t356 * t535;
t16 = t321 * t324;
t336 = -qJD(2) * t16 - t317 * t434;
t329 = t549 * t330;
t297 = t317 * t433;
t294 = t300 * qJD(6);
t265 = pkin(5) * t531 + t305 * t530 + t321 * t391;
t264 = pkin(5) * t533 + t305 * t532 + t317 * t391;
t211 = t301 * t554;
t188 = t282 * t416 - t358 * t506;
t187 = t357 * t506 + t340;
t176 = t417 + t334;
t169 = t384 + t553;
t168 = t383 - t553;
t167 = t321 * t328;
t166 = t317 * t327;
t160 = t437 * t576;
t146 = 0.2e1 * t581;
t145 = t412 + t411;
t138 = t150 * qJD(5);
t135 = t145 * qJD(6);
t134 = t144 * qJD(6);
t133 = t139 * qJD(6);
t131 = t156 * t317;
t130 = t136 - t465;
t90 = t416 * t565 + t481;
t88 = -t415 * t565 + t481;
t50 = t311 * t569 + t312 * t570 - t398 * t565;
t48 = -t394 * t531 + t115;
t47 = 0.2e1 * t115;
t46 = -t394 * t533 + t114;
t45 = 0.2e1 * t114;
t44 = -t492 / 0.2e1 + t356 * t531;
t39 = t356 * t532 + t414;
t35 = t497 + 0.2e1 * t542;
t30 = t521 / 0.2e1 + t394 * t405 + t413 + t321 * t417;
t29 = -t522 / 0.2e1 + t394 * t582 + t407 - t432 / 0.2e1;
t26 = t162 * t530 - t321 * t363 - t511;
t24 = t162 * t533 + t317 * t363 - t510;
t20 = -t511 / 0.2e1 + t118 * t533 + t129 * t530 - t360 * t321;
t18 = -t510 / 0.2e1 + t118 * t531 + t129 * t533 + t360 * t317;
t15 = pkin(5) * t580 + t321 * t333 + t527 * t531 + t578;
t14 = pkin(5) * t411 + pkin(10) * t582 + t317 * t333 - t577;
t11 = t321 * t337 + t166 + t430;
t9 = t166 + (-t84 / 0.2e1 + t492 / 0.2e1) * t549;
t8 = t317 * t337 + t167 + t431;
t6 = t167 + (-t83 / 0.2e1 + t414) * t549;
t10 = [0, 0, 0, 0, 0, 0, 0, t163 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t420, -t323 * t476, -t315 * t420, t313 * t420, t395 * t476, t453 + t176 * qJD(3) + (-pkin(2) * t320 + qJ(3) * t395) * t476, 0, 0, 0, 0, 0, qJD(4) * t188 - t281 * t420, qJD(4) * t187 + t282 * t420, 0, 0, 0, 0, 0, -t420 * t565 + t437 * t557, qJD(4) * t90 + qJD(5) * t88 + t420 * t549, 0, 0, 0, 0, 0 (-(t321 * t507 - t502) * t565 + t317 * t329) * qJD(2) + t8 * qJD(4) + t6 * qJD(5) + t30 * qJD(6) ((t432 + t491) * t565 + t321 * t329) * qJD(2) + t11 * qJD(4) + t9 * qJD(5) + t29 * qJD(6); 0, 0, 0, 0, 0, 0, 0, t176 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t188 - qJD(4) * t219, qJD(2) * t187 + qJD(4) * t218, 0, 0, 0, 0, 0, t572, qJD(2) * t90 + t556, 0, 0, 0, 0, 0, qJD(2) * t8 + qJD(5) * t44 + qJD(6) * t46 - t356 * t471, qJD(2) * t11 + qJD(5) * t39 + qJD(6) * t48 + t356 * t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t572, qJD(2) * t88 + t556, 0, 0, 0, 0, 0, qJD(2) * t6 + qJD(4) * t44 + qJD(6) * t45 - t356 * t466, qJD(2) * t9 + qJD(4) * t39 + qJD(6) * t47 + t356 * t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t30 + qJD(4) * t46 + qJD(5) * t45 - qJD(6) * t84, qJD(2) * t29 + qJD(4) * t48 + qJD(5) * t47 + qJD(6) * t83; 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t175 - t453, 0, 0, 0, 0, 0, -t185 * qJD(4), -t186 * qJD(4), 0, 0, 0, 0, 0, t437 * t574, t437 * t573, 0, 0, 0, 0, 0, qJD(4) * t7 + qJD(5) * t5 - qJD(6) * t27, -qJD(6) * t28 + t437 * t591; 0, 0, 0, 0, 0, 0, t298 * qJD(3), t287 * qJD(3), t281 * t439, t210 * qJD(4), 0, 0, 0, t303 * t439, t303 * t279, t348, -t437 * t575, 0, 0, 0, -qJD(4) * t80 + t468 * t549, -qJD(4) * t81 + t468 * t565, -t301 * t571 + t312 * t348, -0.2e1 * t317 * t489 * t563 - t161 * qJD(6), t317 * t424 + t437 * t593, t321 * t424 - t437 * t594 -(t469 + t474) * t565, qJD(3) * t52 + qJD(4) * t1 + qJD(5) * t3 + qJD(6) * t22, qJD(3) * t54 + qJD(4) * t2 + qJD(5) * t4 + qJD(6) * t21; 0, 0, 0, 0, 0, 0, t438, -t366, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t444, 0, 0, 0, 0, 0, 0, t135 + t138 + t518, t437 * t589 + t516 + t596; 0, 0, 0, 0, 0, 0, 0, 0, t421, t448, t279, -t439, 0, qJD(4) * t368 + t303 * t440 - t450, qJD(4) * t393 + t303 * t441 - t449, t422, -t584, t563, -t365, 0, -t373 - t583, -qJD(4) * t118 + qJD(5) * t35 - t372, t131 * qJD(5) - t133 + (t317 * t471 + t426) * t565, t50 * qJD(5) + t211 + (qJD(4) * t300 + t384) * t565, qJD(5) * t146 + t472 * t549 + t601, t135 + t482 - t597, t592 (t317 * t369 - t577) * qJD(4) + t14 * qJD(5) + t20 * qJD(6) + t380, t595 + (t321 * t369 + t578) * qJD(4) + t15 * qJD(5) + t18 * qJD(6) + t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423, -t584, t563, -qJD(4) * t174 - t469, 0, qJD(3) * t251 - t354 - t583, qJD(4) * t35 - qJD(5) * t118 - t355, t131 * qJD(4) - t133 - (-t317 * t466 - t426) * t565, t50 * qJD(4) + t211 - (-qJD(5) * t300 + t383) * t565, qJD(4) * t146 + t467 * t549 + t601, -qJD(4) * t151 + t466 * t549 - t597, t592, t150 * qJD(3) + t14 * qJD(4) + (t317 * t386 - t577) * qJD(5) + t26 * qJD(6) + t379, t595 + t15 * qJD(4) + (t321 * t386 + t578) * qJD(5) + t24 * qJD(6) + t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t546, t551 * t554 - t454, t317 * t367 + t437 * t590, t145 * qJD(4) + t321 * t367, t160, qJD(3) * t145 + qJD(4) * t20 + qJD(5) * t26 - qJD(6) * t32 - t374, qJD(3) * t590 + qJD(4) * t18 + qJD(5) * t24 + qJD(6) * t31 - t375; 0, 0, 0, 0, 0, 0, 0, t175 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -t438, t366, 0, 0, 0, 0, 0, t439, t279, 0, 0, 0, 0, 0, t365, t563, 0, 0, 0, 0, 0, t134 + t482 - t518, -qJD(4) * t566 + qJD(5) * t149 + qJD(6) * t156 - t516; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t440, t441, 0, 0, 0, 0, 0, t558, t562, 0, 0, 0, 0, 0, t419, -t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, t562, 0, 0, 0, 0, 0, -t458, t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, -t308 + t455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185 * qJD(2), t186 * qJD(2), 0, 0, 0, 0, 0, -t585, -t586, 0, 0, 0, 0, 0, -qJD(2) * t7, -t599; 0, 0, 0, 0, 0, 0, 0, 0, -t421, -t448, 0, 0, 0, t282 * t392 + t450, t281 * t392 + t449, -t422, t584, 0, -t444, 0, t373 - t475, qJD(5) * t34 + t372 - t561, qJD(5) * t132 - t312 * t422 - t133, t383 * t565 + t211, qJD(5) * t147 + qJD(6) * t155 - t598, t134 + t138 + t597, -t592, qJD(5) * t13 - qJD(6) * t19 - t321 * t475 - t380, qJD(3) * t566 + qJD(5) * t16 + qJD(6) * t17 - t377; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t440, -t441, 0, 0, 0, 0, 0, -t558, -t562, 0, 0, 0, 0, 0, -t419, t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t433, -pkin(4) * t396, t301, t294, 0, 0, 0, t305 * t465 - t321 * t433, t305 * t308 + t297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t445, 0, -t387, t485 + (-t397 - t396) * pkin(4), t301 + t479, t294, t461, t459, 0, t264 * qJD(6) - t321 * t387 + t376, qJD(6) * t265 + t297 - t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, t169, t308 + t456, t130, -t559, qJD(5) * t264 - t304 * t308 - t338, qJD(5) * t265 + t304 * t465 - t339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t585, -t586, 0, 0, 0, 0, 0, -qJD(2) * t5, -t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t423, t584, 0, t251 * qJD(4), 0, -qJD(3) * t174 + t354, -qJD(4) * t34 + t355 - t561, -qJD(4) * t132 - t312 * t423 - t133, -t384 * t565 + t211, -qJD(4) * t147 - qJD(6) * t567 - t598, -qJD(4) * t150 + qJD(6) * t142 + t597, -t592, qJD(3) * t151 - qJD(4) * t13 - qJD(6) * t25 - t379, -qJD(3) * t149 - qJD(4) * t16 + qJD(6) * t23 - t378; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t451, -t562, 0, 0, 0, 0, 0, t458, -t460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t445, 0, t434, pkin(4) * t397 - t485, t301 - t479, t294, -t461, -t459, 0, -qJD(6) * t262 + t321 * t434 - t376, -qJD(6) * t263 + t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t301, t294, 0, 0, 0, -pkin(5) * t465, -pkin(5) * t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, t169, t308 - t457, t462 - t465, -t559, -pkin(10) * t308 - t341, pkin(10) * t465 - t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t27, qJD(2) * t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t546, 0.2e1 * t549 * t551 + t454, -qJD(4) * t155 + qJD(5) * t567 - t317 * t423, -qJD(4) * t144 - qJD(5) * t142 - t321 * t423, t160, -qJD(3) * t144 + qJD(4) * t19 + qJD(5) * t25 + t374, -qJD(3) * t156 - qJD(4) * t17 - qJD(5) * t23 + t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t136, -t455; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105, t168, -t456, -t136, t559, qJD(5) * t262 + t338, qJD(5) * t263 + t339; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105, t168, t457, -t462, t559, t341, t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t10;
