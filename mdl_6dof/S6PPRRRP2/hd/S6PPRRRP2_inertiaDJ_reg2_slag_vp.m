% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PPRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,theta1,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:58
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PPRRRP2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRP2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRP2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PPRRRP2_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:58:09
% EndTime: 2019-03-08 18:58:16
% DurationCPUTime: 2.79s
% Computational Cost: add. (2283->249), mult. (7090->439), div. (0->0), fcn. (7413->12), ass. (0->156)
t101 = sin(qJ(5));
t103 = cos(qJ(5));
t102 = sin(qJ(4));
t104 = cos(qJ(4));
t100 = sin(pkin(6));
t191 = cos(pkin(12));
t192 = cos(pkin(7));
t193 = cos(pkin(6));
t99 = sin(pkin(7));
t117 = -t100 * t191 * t99 + t192 * t193;
t142 = t192 * t191;
t156 = t99 * t193;
t207 = sin(qJ(3));
t208 = cos(qJ(3));
t98 = sin(pkin(12));
t44 = t207 * t156 + (t142 * t207 + t208 * t98) * t100;
t29 = t102 * t117 + t44 * t104;
t43 = -t208 * t156 + (-t142 * t208 + t207 * t98) * t100;
t18 = t101 * t29 - t103 * t43;
t19 = t101 * t43 + t103 * t29;
t139 = -t101 * t19 + t103 * t18;
t28 = t44 * t102 - t104 * t117;
t38 = t43 * qJD(3);
t17 = -qJD(4) * t28 - t38 * t104;
t39 = t44 * qJD(3);
t6 = qJD(5) * t19 + t17 * t101 - t103 * t39;
t7 = -qJD(5) * t18 + t39 * t101 + t17 * t103;
t118 = qJD(5) * t139 + t6 * t101 + t103 * t7;
t173 = t99 * t208;
t65 = t104 * t207 * t99 + t102 * t192;
t46 = t101 * t65 + t103 * t173;
t151 = t101 * t173;
t47 = t103 * t65 - t151;
t138 = -t101 * t47 + t103 * t46;
t159 = qJD(3) * t208;
t146 = t104 * t159;
t155 = t104 * t192;
t169 = t102 * t207;
t64 = t169 * t99 - t155;
t108 = -t64 * qJD(4) + t146 * t99;
t158 = qJD(3) * t207;
t148 = t99 * t158;
t23 = qJD(5) * t46 - t101 * t148 - t103 * t108;
t93 = qJD(5) * t103;
t24 = -qJD(5) * t151 + t101 * t108 - t103 * t148 + t65 * t93;
t116 = qJD(5) * t138 + t24 * t101 - t103 * t23;
t182 = t104 * qJD(4);
t149 = t99 * t159;
t188 = t65 * qJD(4);
t45 = t102 * t149 + t188;
t129 = t45 * t102 + t182 * t64;
t92 = t102 * qJD(4);
t214 = t104 * t108 - t65 * t92 + t129;
t68 = t101 * t182 + t102 * t93;
t16 = qJD(4) * t29 - t38 * t102;
t213 = t16 * t64 + t28 * t45;
t94 = t101 ^ 2;
t96 = t103 ^ 2;
t197 = t94 - t96;
t81 = t197 * qJD(5);
t204 = t102 * pkin(10);
t145 = -pkin(4) * t104 - t204;
t133 = -pkin(3) + t145;
t126 = t103 * t133;
t206 = pkin(10) * t104;
t144 = pkin(4) * t102 - t206;
t127 = t144 * qJD(4);
t184 = qJD(5) * t104;
t167 = t101 * t184;
t67 = t103 * t92 + t167;
t34 = pkin(9) * t67 - qJD(5) * t126 - t101 * t127;
t140 = pkin(5) * t101 - qJ(6) * t103;
t131 = pkin(9) + t140;
t62 = t131 * t102;
t63 = qJD(5) * t140 - t101 * qJD(6);
t141 = pkin(5) * t103 + qJ(6) * t101;
t77 = -pkin(4) - t141;
t211 = qJD(4) * (-t104 * t77 + t204) - qJD(5) * t62 - t102 * t63;
t210 = qJD(5) * t141 - t103 * qJD(6);
t164 = t101 * t92;
t202 = t103 * pkin(9);
t90 = t104 * t202;
t198 = t101 * t133 + t90;
t35 = pkin(9) * t164 - qJD(5) * t198 + t103 * t127;
t209 = 0.2e1 * qJD(6);
t205 = t101 * pkin(9);
t203 = t103 * pkin(4);
t12 = t28 * t16;
t201 = t43 * t39;
t36 = t64 * t45;
t95 = t102 ^ 2;
t196 = -t104 ^ 2 + t95;
t195 = t16 * t102;
t190 = t101 * t102;
t187 = qJD(4) * t103;
t186 = qJD(5) * t101;
t185 = qJD(5) * t102;
t181 = t104 * qJD(6);
t180 = -0.2e1 * pkin(3) * qJD(4);
t179 = -0.2e1 * pkin(4) * qJD(5);
t178 = t104 * t205;
t177 = pkin(5) * t92;
t176 = pkin(10) * t186;
t175 = pkin(10) * t93;
t174 = pkin(9) * t182;
t172 = t208 * t39;
t168 = qJ(6) * t92;
t165 = t103 * t184;
t162 = t101 * t93;
t161 = t102 * t182;
t160 = t103 * t182;
t157 = qJD(4) * t208;
t154 = t196 * qJD(4);
t153 = 0.2e1 * t161;
t150 = t95 * t162;
t147 = t101 * t160;
t52 = -qJ(6) * t104 + t198;
t54 = -t103 * (-pkin(3) - t204) + (pkin(5) + t203 + t205) * t104;
t137 = -t101 * t52 + t103 * t54;
t59 = t126 - t178;
t136 = -t101 * t198 - t103 * t59;
t130 = 0.2e1 * t18 * t6 + 0.2e1 * t19 * t7 + 0.2e1 * t12;
t11 = -t103 * t16 + t186 * t28;
t31 = -t103 * t45 + t186 * t64;
t128 = -0.2e1 * t23 * t47 + 0.2e1 * t24 * t46 + 0.2e1 * t36;
t125 = t18 * t24 - t19 * t23 + t46 * t6 + t47 * t7 + t213;
t123 = t6 * t104 + t16 * t190 - t18 * t92 + t28 * t68;
t122 = t24 * t104 + t45 * t190 - t46 * t92 + t64 * t68;
t113 = t118 * pkin(10);
t112 = t195 + t17 * t104 + (-t102 * t29 + t104 * t28) * qJD(4);
t27 = -t34 + t168 - t181;
t32 = -t177 - t35;
t111 = qJD(5) * t137 + t32 * t101 + t27 * t103;
t110 = qJD(5) * t136 - t35 * t101 - t34 * t103;
t109 = t116 * pkin(10);
t106 = t139 * t182 + (-t101 * t7 + t103 * t6 + (-t101 * t18 - t103 * t19) * qJD(5)) * t102;
t105 = t138 * t182 + (t101 * t23 + t103 * t24 + (-t101 * t46 - t103 * t47) * qJD(5)) * t102;
t88 = -0.2e1 * t161;
t87 = -0.2e1 * t162;
t86 = 0.2e1 * t162;
t85 = pkin(10) * t165;
t69 = t164 - t165;
t66 = -t101 * t185 + t160;
t58 = 0.2e1 * t161 * t96 - 0.2e1 * t150;
t57 = 0.2e1 * t161 * t94 + 0.2e1 * t150;
t53 = t185 * t197 - t147;
t51 = -t101 * t154 + t102 * t165;
t50 = 0.4e1 * t102 * t162 + t182 * t197;
t49 = 0.2e1 * t102 * t167 + 0.2e1 * t187 * t196;
t48 = -0.2e1 * t102 * t147 + t81 * t95;
t33 = t102 * t210 + t131 * t182;
t30 = t101 * t45 + t64 * t93;
t10 = t101 * t16 + t28 * t93;
t8 = (t187 * t64 - t23) * t104 + (-qJD(4) * t47 - t31) * t102;
t1 = (t187 * t28 + t7) * t104 + (-qJD(4) * t19 - t11) * t102;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t38 * t44 + 0.2e1 * t201, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t17 * t29 + 0.2e1 * t12 + 0.2e1 * t201, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-t207 * t38 - t172 + (t207 * t43 + t208 * t44) * qJD(3)) * t99, 0, 0, 0, 0, 0, 0, 0, 0, 0, t108 * t29 + t148 * t43 + t17 * t65 - t172 * t99 + t213, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t155 * t188 + 0.2e1 * t36 + 0.2e1 * (t65 * (-qJD(4) * t169 + t146) - t208 * t148) * t99, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t39, t38, 0, 0, 0, 0, 0, 0, 0, 0, -t104 * t39 + t43 * t92, t102 * t39 + t182 * t43, t112, -t39 * pkin(3) + pkin(9) * t112, 0, 0, 0, 0, 0, 0, t123, t1, t106, -t18 * t35 - t19 * t34 - t6 * t59 + t7 * t198 + (t182 * t28 + t195) * pkin(9), 0, 0, 0, 0, 0, 0, t123, t106, -t1, t16 * t62 + t18 * t32 + t19 * t27 + t28 * t33 + t52 * t7 + t54 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t148, -t149, 0, 0, 0, 0, 0, 0, 0, 0 (-t102 * t157 - t104 * t158) * t99 (t102 * t158 - t104 * t157) * t99, t214, -pkin(3) * t148 + pkin(9) * t214, 0, 0, 0, 0, 0, 0, t122, t8, t105, pkin(9) * t129 - t198 * t23 - t24 * t59 - t47 * t34 - t46 * t35, 0, 0, 0, 0, 0, 0, t122, t105, -t8, -t23 * t52 + t24 * t54 + t27 * t47 + t32 * t46 + t33 * t64 + t45 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, -0.2e1 * t154, 0, t88, 0, 0, t102 * t180, t104 * t180, 0, 0, t58, 0.2e1 * t48, t49, t57, 0.2e1 * t51, t88, 0.2e1 * t59 * t92 - 0.2e1 * t35 * t104 + 0.2e1 * (t101 * t153 + t93 * t95) * pkin(9), -0.2e1 * t198 * t92 - 0.2e1 * t34 * t104 + 0.2e1 * (t103 * t153 - t186 * t95) * pkin(9), 0.2e1 * t136 * t182 + 0.2e1 * (t101 * t34 - t103 * t35 + (t101 * t59 - t103 * t198) * qJD(5)) * t102, 0.2e1 * pkin(9) ^ 2 * t161 - 0.2e1 * t198 * t34 + 0.2e1 * t35 * t59, t58, t49, -0.2e1 * t48, t88, -0.2e1 * t51, t57, 0.2e1 * (qJD(4) * t101 * t62 + t32) * t104 + 0.2e1 * (-qJD(4) * t54 + t33 * t101 + t62 * t93) * t102, 0.2e1 * t137 * t182 + 0.2e1 * (-t101 * t27 + t103 * t32 + (-t101 * t54 - t103 * t52) * qJD(5)) * t102, 0.2e1 * (-t187 * t62 - t27) * t104 + 0.2e1 * (qJD(4) * t52 - t33 * t103 + t186 * t62) * t102, 0.2e1 * t27 * t52 + 0.2e1 * t32 * t54 + 0.2e1 * t33 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16, -t17, 0, 0, 0, 0, 0, 0, 0, 0, t11, t10, t118, -t16 * pkin(4) + t113, 0, 0, 0, 0, 0, 0, t11, t118, -t10, t16 * t77 + t28 * t63 + t113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t45, -t108, 0, 0, 0, 0, 0, 0, 0, 0, t31, t30, t116, -t45 * pkin(4) + t109, 0, 0, 0, 0, 0, 0, t31, t116, -t30, t45 * t77 + t64 * t63 + t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, 0, -t92, 0, -t174, pkin(9) * t92, 0, 0, -t53, -t50, t69, t53, t67, 0, t85 + (-t203 + t205) * t185 + (t101 * t145 - t90) * qJD(4) (t101 * t144 + t102 * t202) * qJD(5) + (t103 * t145 + t178) * qJD(4), t110, -pkin(4) * t174 + pkin(10) * t110, -t53, t69, t50, 0, -t67, t53, t85 + (t185 * t77 - t33) * t103 - t211 * t101, t111 (-t33 + (t102 * t77 + t206) * qJD(5)) * t101 + t211 * t103, pkin(10) * t111 + t33 * t77 + t62 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86, -0.2e1 * t81, 0, t87, 0, 0, t101 * t179, t103 * t179, 0, 0, t86, 0, 0.2e1 * t81, 0, 0, t87, -0.2e1 * t103 * t63 + 0.2e1 * t186 * t77, 0, -0.2e1 * t101 * t63 - 0.2e1 * t77 * t93, 0.2e1 * t77 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t6, -t7, 0, 0, 0, 0, 0, 0, 0, 0, -t6, 0, t7, -pkin(5) * t6 + qJ(6) * t7 + qJD(6) * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t24, t23, 0, 0, 0, 0, 0, 0, 0, 0, -t24, 0, -t23, -pkin(5) * t24 - qJ(6) * t23 + qJD(6) * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, -t68, t92, t35, t34, 0, 0, 0, t66, 0, t92, t68, 0, t35 + 0.2e1 * t177 (-pkin(5) * t182 - qJ(6) * t185) * t103 + (-qJ(6) * t182 + (pkin(5) * qJD(5) - qJD(6)) * t102) * t101, -t34 + 0.2e1 * t168 - 0.2e1 * t181, -pkin(5) * t32 + qJ(6) * t27 + qJD(6) * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, -t186, 0, -t175, t176, 0, 0, 0, t93, 0, 0, t186, 0, -t175, -t210, -t176, -t210 * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, qJ(6) * t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92, t66, 0, t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0, t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t2;
