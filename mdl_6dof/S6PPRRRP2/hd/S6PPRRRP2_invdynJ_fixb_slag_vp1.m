% Calculate vector of inverse dynamics joint torques for
% S6PPRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,theta1,theta2]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:58
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PPRRRP2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRP2_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRP2_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPRRRP2_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPRRRP2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PPRRRP2_invdynJ_fixb_slag_vp1: pkin has to be [12x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PPRRRP2_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PPRRRP2_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PPRRRP2_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:56:03
% EndTime: 2019-03-08 18:58:07
% DurationCPUTime: 113.08s
% Computational Cost: add. (145524->1500), mult. (419855->2052), div. (0->0), fcn. (529978->14), ass. (0->514)
t932 = Icges(6,4) - Icges(7,5);
t926 = Icges(6,1) + Icges(7,1);
t925 = Icges(7,4) + Icges(6,5);
t924 = Icges(6,2) + Icges(7,3);
t931 = Icges(7,2) + Icges(6,3);
t930 = Icges(6,6) - Icges(7,6);
t598 = sin(pkin(11));
t600 = cos(pkin(11));
t793 = sin(pkin(12));
t797 = cos(pkin(6));
t682 = t797 * t793;
t795 = cos(pkin(12));
t585 = t598 * t795 + t600 * t682;
t684 = t797 * t795;
t630 = t598 * t793 - t600 * t684;
t796 = cos(pkin(7));
t613 = t630 * t796;
t599 = sin(pkin(6));
t794 = sin(pkin(7));
t702 = t599 * t794;
t805 = sin(qJ(3));
t670 = t805 * t702;
t808 = cos(qJ(3));
t546 = t585 * t808 - t600 * t670 - t613 * t805;
t703 = t599 * t796;
t576 = -t600 * t703 + t630 * t794;
t602 = sin(qJ(4));
t807 = cos(qJ(4));
t472 = t546 * t807 + t576 * t602;
t671 = t808 * t702;
t545 = t585 * t805 + t600 * t671 + t613 * t808;
t601 = sin(qJ(5));
t806 = cos(qJ(5));
t355 = t472 * t806 + t545 * t601;
t947 = t932 * t355;
t586 = -t598 * t682 + t600 * t795;
t629 = t598 * t684 + t600 * t793;
t612 = t629 * t796;
t548 = t586 * t808 + t598 * t670 - t612 * t805;
t577 = t598 * t703 + t629 * t794;
t474 = t548 * t807 + t577 * t602;
t547 = t586 * t805 - t598 * t671 + t612 * t808;
t357 = t474 * t806 + t547 * t601;
t946 = t932 * t357;
t681 = t796 * t795;
t683 = t797 * t794;
t575 = t805 * t683 + (t681 * t805 + t793 * t808) * t599;
t584 = -t702 * t795 + t796 * t797;
t550 = t575 * t807 + t584 * t602;
t875 = t599 * (t808 * t681 - t793 * t805) + t808 * t683;
t476 = t550 * t806 - t601 * t875;
t945 = t932 * t476;
t665 = -t550 * t601 - t806 * t875;
t944 = t932 * t665;
t666 = -t474 * t601 + t547 * t806;
t943 = t932 * t666;
t667 = -t472 * t601 + t545 * t806;
t942 = t932 * t667;
t514 = t545 * qJD(3);
t664 = -t546 * t602 + t576 * t807;
t339 = qJD(4) * t664 - t514 * t807;
t515 = t546 * qJD(3);
t159 = qJD(5) * t355 + t339 * t601 - t515 * t806;
t160 = qJD(5) * t667 + t339 * t806 + t515 * t601;
t338 = qJD(4) * t472 - t514 * t602;
t941 = -t159 * t924 + t160 * t932 + t338 * t930;
t516 = t547 * qJD(3);
t663 = -t548 * t602 + t577 * t807;
t341 = qJD(4) * t663 - t516 * t807;
t517 = t548 * qJD(3);
t161 = qJD(5) * t357 + t341 * t601 - t517 * t806;
t162 = qJD(5) * t666 + t341 * t806 + t517 * t601;
t340 = qJD(4) * t474 - t516 * t602;
t940 = -t161 * t924 + t162 * t932 + t340 * t930;
t939 = t159 * t930 - t160 * t925 - t338 * t931;
t938 = t161 * t930 - t162 * t925 - t340 * t931;
t937 = -t932 * t159 + t160 * t926 + t925 * t338;
t936 = -t932 * t161 + t162 * t926 + t925 * t340;
t557 = t875 * qJD(3);
t662 = -t575 * t602 + t584 * t807;
t457 = qJD(4) * t662 + t557 * t807;
t558 = t575 * qJD(3);
t267 = qJD(5) * t476 + t457 * t601 - t558 * t806;
t268 = qJD(5) * t665 + t457 * t806 + t558 * t601;
t456 = qJD(4) * t550 + t557 * t602;
t935 = -t267 * t924 + t268 * t932 + t456 * t930;
t934 = t267 * t930 - t268 * t925 - t456 * t931;
t933 = -t932 * t267 + t268 * t926 + t925 * t456;
t903 = t664 * t930 - t667 * t924 - t947;
t902 = t663 * t930 - t666 * t924 - t946;
t901 = t355 * t925 - t664 * t931 + t667 * t930;
t900 = t357 * t925 - t663 * t931 + t666 * t930;
t899 = t355 * t926 - t925 * t664 + t942;
t898 = t357 * t926 - t925 * t663 + t943;
t887 = t662 * t930 - t665 * t924 - t945;
t886 = t476 * t925 - t662 * t931 + t665 * t930;
t885 = t476 * t926 - t925 * t662 + t944;
t916 = t903 * t159 + t899 * t160 + t901 * t338 + t937 * t355 + t939 * t664 + t667 * t941;
t915 = t159 * t902 + t160 * t898 + t338 * t900 + t355 * t936 + t664 * t938 + t667 * t940;
t914 = t903 * t161 + t899 * t162 + t901 * t340 + t937 * t357 + t939 * t663 + t666 * t941;
t913 = t161 * t902 + t162 * t898 + t340 * t900 + t357 * t936 + t663 * t938 + t666 * t940;
t910 = t903 * t267 + t899 * t268 + t901 * t456 + t937 * t476 + t939 * t662 + t665 * t941;
t909 = t267 * t902 + t268 * t898 + t456 * t900 + t476 * t936 + t662 * t938 + t665 * t940;
t907 = t159 * t887 + t160 * t885 + t338 * t886 + t355 * t933 + t664 * t934 + t667 * t935;
t906 = t161 * t887 + t162 * t885 + t340 * t886 + t357 * t933 + t663 * t934 + t666 * t935;
t905 = t267 * t887 + t268 * t885 + t456 * t886 + t476 * t933 + t662 * t934 + t665 * t935;
t874 = t355 * t899 - t664 * t901 - t667 * t903;
t873 = t355 * t898 - t664 * t900 - t667 * t902;
t872 = t357 * t899 - t663 * t901 - t666 * t903;
t871 = t357 * t898 - t663 * t900 - t666 * t902;
t870 = t476 * t899 - t662 * t901 - t665 * t903;
t869 = t476 * t898 - t662 * t900 - t665 * t902;
t868 = t355 * t885 - t664 * t886 - t667 * t887;
t867 = t357 * t885 - t663 * t886 - t666 * t887;
t866 = t476 * t885 - t662 * t886 - t665 * t887;
t929 = -t601 * t924 + t806 * t932;
t928 = t601 * t930 - t806 * t925;
t927 = -t601 * t932 + t806 * t926;
t917 = rSges(7,1) + pkin(5);
t904 = rSges(7,3) + qJ(6);
t922 = 0.2e1 * qJD(3);
t921 = 2 * qJDD(3);
t569 = qJDD(3) * t576;
t360 = qJD(4) * t515 + qJDD(4) * t545 + t569;
t155 = qJD(5) * t338 - qJDD(5) * t664 + t360;
t570 = qJDD(3) * t577;
t361 = qJD(4) * t517 + qJDD(4) * t547 + t570;
t156 = qJD(5) * t340 - qJDD(5) * t663 + t361;
t582 = qJDD(3) * t584;
t479 = qJD(4) * t558 - qJDD(4) * t875 + t582;
t264 = qJD(5) * t456 - qJDD(5) * t662 + t479;
t572 = qJD(3) * t576;
t477 = qJD(4) * t545 + t572;
t307 = -qJD(5) * t664 + t477;
t573 = qJD(3) * t577;
t478 = qJD(4) * t547 + t573;
t308 = -qJD(5) * t663 + t478;
t583 = qJD(3) * t584;
t551 = -qJD(4) * t875 + t583;
t435 = -qJD(5) * t662 + t551;
t920 = t874 * t155 + t873 * t156 + t868 * t264 + t307 * t916 + t915 * t308 + t907 * t435;
t919 = t155 * t872 + t156 * t871 + t264 * t867 + t307 * t914 + t308 * t913 + t435 * t906;
t918 = t155 * t870 + t156 * t869 + t264 * t866 + t307 * t910 + t308 * t909 + t435 * t905;
t912 = t307 * t874 + t308 * t873 + t435 * t868;
t911 = t307 * t872 + t308 * t871 + t435 * t867;
t908 = t307 * t870 + t308 * t869 + t435 * t866;
t709 = t601 * t807;
t408 = -t545 * t709 - t546 * t806;
t689 = t807 * t806;
t409 = -t545 * t689 + t546 * t601;
t770 = t545 * t602;
t897 = -t408 * t924 + t409 * t932 - t770 * t930;
t410 = -t547 * t709 - t548 * t806;
t411 = -t547 * t689 + t548 * t601;
t769 = t547 * t602;
t896 = -t410 * t924 + t411 * t932 - t769 * t930;
t895 = t408 * t930 - t409 * t925 + t770 * t931;
t894 = t410 * t930 - t411 * t925 + t769 * t931;
t893 = -t408 * t932 + t409 * t926 - t770 * t925;
t892 = -t410 * t932 + t411 * t926 - t769 * t925;
t891 = t472 * t930 + t664 * t929;
t890 = t474 * t930 + t663 * t929;
t889 = t472 * t925 + t664 * t927;
t888 = t474 * t925 + t663 * t927;
t300 = pkin(4) * t472 - pkin(10) * t664;
t764 = -rSges(7,2) * t664 + t355 * t917 - t904 * t667;
t718 = -t300 - t764;
t302 = pkin(4) * t474 - pkin(10) * t663;
t762 = -rSges(7,2) * t663 + t357 * t917 - t904 * t666;
t717 = -t302 - t762;
t494 = -t575 * t806 + t709 * t875;
t495 = t575 * t601 + t689 * t875;
t767 = t875 * t602;
t884 = -t494 * t924 + t495 * t932 + t767 * t930;
t883 = t494 * t930 - t495 * t925 - t767 * t931;
t882 = -t494 * t932 + t495 * t926 + t767 * t925;
t881 = t550 * t930 + t662 * t929;
t880 = t550 * t925 + t662 * t927;
t434 = pkin(4) * t550 - pkin(10) * t662;
t751 = -rSges(7,2) * t662 + t476 * t917 - t904 * t665;
t716 = -t434 - t751;
t879 = (-t550 * t931 + t601 * t887 + t662 * t928 + t806 * t885) * t435 + (-t474 * t931 + t601 * t902 + t663 * t928 + t806 * t898) * t308 + (-t472 * t931 + t601 * t903 + t664 * t928 + t806 * t899) * t307;
t376 = Icges(5,5) * t550 + Icges(5,6) * t662 - Icges(5,3) * t875;
t787 = Icges(5,4) * t550;
t377 = Icges(5,2) * t662 - Icges(5,6) * t875 + t787;
t541 = Icges(5,4) * t662;
t378 = Icges(5,1) * t550 - Icges(5,5) * t875 + t541;
t112 = t376 * t545 + t377 * t664 + t378 * t472;
t163 = Icges(5,5) * t339 - Icges(5,6) * t338 + Icges(5,3) * t515;
t165 = Icges(5,4) * t339 - Icges(5,2) * t338 + Icges(5,6) * t515;
t167 = Icges(5,1) * t339 - Icges(5,4) * t338 + Icges(5,5) * t515;
t244 = Icges(5,5) * t472 + Icges(5,6) * t664 + Icges(5,3) * t545;
t789 = Icges(5,4) * t472;
t246 = Icges(5,2) * t664 + Icges(5,6) * t545 + t789;
t458 = Icges(5,4) * t664;
t248 = Icges(5,1) * t472 + Icges(5,5) * t545 + t458;
t46 = t163 * t545 + t165 * t664 + t167 * t472 + t244 * t515 - t246 * t338 + t248 * t339;
t164 = Icges(5,5) * t341 - Icges(5,6) * t340 + Icges(5,3) * t517;
t166 = Icges(5,4) * t341 - Icges(5,2) * t340 + Icges(5,6) * t517;
t168 = Icges(5,1) * t341 - Icges(5,4) * t340 + Icges(5,5) * t517;
t245 = Icges(5,5) * t474 + Icges(5,6) * t663 + Icges(5,3) * t547;
t788 = Icges(5,4) * t474;
t247 = Icges(5,2) * t663 + Icges(5,6) * t547 + t788;
t459 = Icges(5,4) * t663;
t249 = Icges(5,1) * t474 + Icges(5,5) * t547 + t459;
t47 = t164 * t545 + t166 * t664 + t168 * t472 + t245 * t515 - t247 * t338 + t249 * t339;
t269 = Icges(5,5) * t457 - Icges(5,6) * t456 + Icges(5,3) * t558;
t270 = Icges(5,4) * t457 - Icges(5,2) * t456 + Icges(5,6) * t558;
t271 = Icges(5,1) * t457 - Icges(5,4) * t456 + Icges(5,5) * t558;
t56 = t269 * t545 + t270 * t664 + t271 * t472 - t338 * t377 + t339 * t378 + t376 * t515;
t77 = t244 * t545 + t246 * t664 + t248 * t472;
t78 = t245 * t545 + t247 * t664 + t249 * t472;
t878 = t112 * t479 + t360 * t77 + t361 * t78 + t46 * t477 + t47 * t478 + t551 * t56 + t920;
t113 = t376 * t547 + t377 * t663 + t378 * t474;
t48 = t163 * t547 + t165 * t663 + t167 * t474 + t244 * t517 - t246 * t340 + t248 * t341;
t49 = t164 * t547 + t166 * t663 + t168 * t474 + t245 * t517 - t247 * t340 + t249 * t341;
t57 = t269 * t547 + t270 * t663 + t271 * t474 - t340 * t377 + t341 * t378 + t376 * t517;
t79 = t244 * t547 + t246 * t663 + t248 * t474;
t80 = t245 * t547 + t247 * t663 + t249 * t474;
t877 = t113 * t479 + t360 * t79 + t361 * t80 + t477 * t48 + t478 * t49 + t551 * t57 + t919;
t106 = -t244 * t875 + t246 * t662 + t248 * t550;
t107 = -t245 * t875 + t247 * t662 + t249 * t550;
t121 = -t376 * t875 + t377 * t662 + t378 * t550;
t51 = -t163 * t875 + t165 * t662 + t167 * t550 + t244 * t558 - t246 * t456 + t248 * t457;
t52 = -t164 * t875 + t166 * t662 + t168 * t550 + t245 * t558 - t247 * t456 + t249 * t457;
t68 = -t269 * t875 + t270 * t662 + t271 * t550 + t376 * t558 - t377 * t456 + t378 * t457;
t876 = t106 * t360 + t107 * t361 + t121 * t479 + t477 * t51 + t478 * t52 + t551 * t68 + t918;
t715 = t664 * t806;
t773 = t664 * t601;
t865 = t472 * rSges(7,2) + t715 * t917 + t904 * t773;
t714 = t663 * t806;
t772 = t663 * t601;
t864 = t474 * rSges(7,2) + t714 * t917 + t904 * t772;
t711 = t662 * t806;
t768 = t662 * t601;
t863 = t550 * rSges(7,2) + t711 * t917 + t904 * t768;
t862 = (t476 * t924 - t885 - t944) * t435 + (t357 * t924 - t898 - t943) * t308 + (t355 * t924 - t899 - t942) * t307;
t861 = (t665 * t926 + t887 - t945) * t435 + (t666 * t926 + t902 - t946) * t308 + (t667 * t926 + t903 - t947) * t307;
t860 = (-t476 * t930 + t665 * t925) * t435 + (-t357 * t930 + t666 * t925) * t308 + (-t355 * t930 + t667 * t925) * t307;
t394 = -rSges(4,1) * t514 - rSges(4,2) * t515;
t395 = -rSges(4,1) * t516 - rSges(4,2) * t517;
t677 = t394 * t577 - t395 * t576;
t372 = rSges(4,1) * t546 - rSges(4,2) * t545 + rSges(4,3) * t576;
t373 = rSges(4,1) * t548 - rSges(4,2) * t547 + rSges(4,3) * t577;
t680 = t372 * t577 - t373 * t576;
t858 = t677 * qJD(3) + t680 * qJDD(3);
t724 = qJDD(2) * t797 + qJDD(1);
t857 = -m(3) - m(4) - m(5) - m(6) - m(7);
t735 = qJD(6) * t666;
t800 = rSges(7,2) * t340 + t161 * t904 + t162 * t917 - t735;
t736 = qJD(6) * t667;
t801 = rSges(7,2) * t338 + t159 * t904 + t160 * t917 - t736;
t856 = -t762 * t155 + t764 * t156 - t800 * t307 + t801 * t308;
t181 = pkin(4) * t339 + pkin(10) * t338;
t138 = t478 * t181;
t178 = t361 * t300;
t396 = -pkin(3) * t514 + pkin(9) * t515;
t358 = t396 * t573;
t426 = pkin(3) * t546 + pkin(9) * t545;
t371 = t426 * t570;
t397 = -pkin(3) * t516 + pkin(9) * t517;
t428 = pkin(3) * t548 + pkin(9) * t547;
t626 = t358 + t371 + (-qJD(3) * t397 - qJDD(3) * t428) * t576 + t724;
t182 = pkin(4) * t341 + pkin(10) * t340;
t771 = t477 * t182;
t774 = t360 * t302;
t609 = t138 + t178 + t626 - t771 - t774;
t726 = qJDD(6) * t665;
t737 = qJD(6) * t267;
t9 = t609 - t726 + t737 + t856;
t855 = 0.2e1 * t9;
t284 = pkin(4) * t457 + pkin(10) * t456;
t488 = pkin(3) * t557 + pkin(9) * t558;
t503 = pkin(3) * t575 - pkin(9) * t875;
t727 = qJDD(2) * t599;
t592 = t598 * t727;
t627 = t488 * t572 + t503 * t569 + t592 + (-qJD(3) * t396 - qJDD(3) * t426) * t584;
t610 = -t181 * t551 + t477 * t284 - t300 * t479 + t360 * t434 + t627;
t734 = qJD(6) * t665;
t766 = rSges(7,2) * t456 + t267 * t904 + t268 * t917 - t734;
t11 = qJD(6) * t161 - qJDD(6) * t666 + t155 * t751 - t264 * t764 + t307 * t766 - t435 * t801 + t610;
t854 = 0.2e1 * t11;
t707 = t600 * t727;
t611 = t397 * t583 + t428 * t582 + (-qJD(3) * t488 - qJDD(3) * t503) * t577 - t707;
t607 = t551 * t182 - t478 * t284 + t479 * t302 - t361 * t434 + t611;
t12 = qJD(6) * t159 - qJDD(6) * t667 - t156 * t751 + t264 * t762 - t308 * t766 + t435 * t800 + t607;
t853 = 0.2e1 * t12;
t732 = qJD(2) * t797 + qJD(1);
t650 = t426 * t573 - t428 * t572 + t732;
t628 = t478 * t300 - t302 * t477 + t650;
t40 = -t307 * t762 + t308 * t764 + t628 - t734;
t852 = 0.2e1 * t40;
t742 = qJD(2) * t599;
t593 = t598 * t742;
t669 = -t426 * t583 + t503 * t572 + t593;
t638 = -t300 * t551 + t477 * t434 + t669;
t43 = t307 * t751 - t435 * t764 + t638 - t735;
t851 = 0.2e1 * t43;
t708 = t600 * t742;
t639 = t428 * t583 - t503 * t573 - t708;
t625 = t551 * t302 - t434 * t478 + t639;
t44 = -t308 * t751 + t435 * t762 + t625 - t736;
t850 = 0.2e1 * t44;
t849 = m(3) / 0.2e1;
t848 = m(4) / 0.2e1;
t847 = m(5) / 0.2e1;
t846 = m(6) / 0.2e1;
t845 = m(7) / 0.2e1;
t844 = t155 / 0.2e1;
t843 = t156 / 0.2e1;
t842 = t264 / 0.2e1;
t841 = -t307 / 0.2e1;
t840 = t307 / 0.2e1;
t839 = -t308 / 0.2e1;
t838 = t308 / 0.2e1;
t835 = t360 / 0.2e1;
t834 = t361 / 0.2e1;
t831 = -t435 / 0.2e1;
t830 = t435 / 0.2e1;
t826 = -t477 / 0.2e1;
t825 = t477 / 0.2e1;
t824 = -t478 / 0.2e1;
t823 = t478 / 0.2e1;
t822 = t479 / 0.2e1;
t815 = -t551 / 0.2e1;
t814 = t551 / 0.2e1;
t99 = rSges(6,1) * t162 - rSges(6,2) * t161 + rSges(6,3) * t340;
t803 = t307 * t99;
t97 = rSges(6,1) * t160 - rSges(6,2) * t159 + rSges(6,3) * t338;
t802 = t308 * t97;
t799 = -t181 - t97;
t798 = -t182 - t99;
t792 = Icges(4,4) * t546;
t791 = Icges(4,4) * t548;
t790 = Icges(4,4) * t575;
t152 = rSges(6,1) * t355 + rSges(6,2) * t667 - rSges(6,3) * t664;
t780 = t152 * t156;
t154 = rSges(6,1) * t357 + rSges(6,2) * t666 - rSges(6,3) * t663;
t779 = t154 * t155;
t169 = rSges(5,1) * t339 - rSges(5,2) * t338 + rSges(5,3) * t515;
t778 = t169 * t478;
t170 = rSges(5,1) * t341 - rSges(5,2) * t340 + rSges(5,3) * t517;
t777 = t170 * t477;
t250 = rSges(5,1) * t472 + rSges(5,2) * t664 + rSges(5,3) * t545;
t776 = t250 * t361;
t251 = rSges(5,1) * t474 + rSges(5,2) * t663 + rSges(5,3) * t547;
t775 = t251 * t360;
t129 = rSges(6,1) * t268 - rSges(6,2) * t267 + rSges(6,3) * t456;
t765 = -t129 - t284;
t763 = -t152 - t300;
t761 = -t154 - t302;
t760 = t547 * t181 + t517 * t300;
t759 = -t182 * t875 + t558 * t302;
t359 = t577 * t396;
t758 = t577 * t181 + t359;
t383 = t584 * t397;
t757 = t584 * t182 + t383;
t756 = t355 * t904 + t667 * t917;
t755 = t357 * t904 + t666 * t917;
t754 = -rSges(7,2) * t770 + t408 * t904 + t409 * t917;
t753 = -rSges(7,2) * t769 + t410 * t904 + t411 * t917;
t752 = t545 * t284 + t515 * t434;
t260 = rSges(6,1) * t476 + rSges(6,2) * t665 - rSges(6,3) * t662;
t750 = -t260 - t434;
t437 = t576 * t488;
t749 = t576 * t284 + t437;
t380 = t577 * t426;
t748 = t577 * t300 + t380;
t387 = t584 * t428;
t747 = t584 * t302 + t387;
t746 = t476 * t904 + t665 * t917;
t745 = rSges(7,2) * t767 + t494 * t904 + t495 * t917;
t455 = t576 * t503;
t744 = t576 * t434 + t455;
t713 = t545 * t807;
t412 = -pkin(4) * t713 - pkin(10) * t770;
t712 = t547 * t807;
t413 = -pkin(4) * t712 - pkin(10) * t769;
t710 = t875 * t807;
t496 = pkin(4) * t710 + pkin(10) * t767;
t743 = 0.2e1 * t724;
t741 = qJD(4) * t546;
t740 = qJD(4) * t548;
t739 = qJD(4) * t575;
t738 = qJD(5) * t602;
t733 = qJD(6) * t601;
t731 = 0.2e1 * m(4);
t730 = 0.2e1 * m(5);
t729 = 0.2e1 * m(6);
t728 = 0.2e1 * m(7);
t723 = 0.2e1 * t797;
t722 = 0.2e1 * t599;
t721 = -t181 - t801;
t720 = -t182 - t800;
t719 = -t284 - t766;
t216 = t409 * rSges(6,1) - t408 * rSges(6,2) - rSges(6,3) * t770;
t218 = t411 * rSges(6,1) - t410 * rSges(6,2) - rSges(6,3) * t769;
t316 = t495 * rSges(6,1) - t494 * rSges(6,2) + rSges(6,3) * t767;
t425 = -t545 * pkin(3) + pkin(9) * t546;
t427 = -t547 * pkin(3) + pkin(9) * t548;
t502 = pkin(3) * t875 + pkin(9) * t575;
t299 = pkin(4) * t664 + pkin(10) * t472;
t301 = pkin(4) * t663 + pkin(10) * t474;
t433 = pkin(4) * t662 + pkin(10) * t550;
t699 = -t730 / 0.2e1;
t698 = t730 / 0.2e1;
t697 = -t729 / 0.2e1;
t696 = t729 / 0.2e1;
t695 = -t728 / 0.2e1;
t692 = t478 * t299 - t301 * t477;
t691 = t551 * t301 - t433 * t478;
t690 = -t299 * t551 + t477 * t433;
t687 = t425 * t573 - t427 * t572;
t686 = t427 * t583 - t502 * t573;
t685 = -t425 * t583 + t502 * t572;
t483 = rSges(4,1) * t575 + rSges(4,2) * t875 + rSges(4,3) * t584;
t679 = -t372 * t584 + t483 * t576;
t678 = t373 * t584 - t483 * t577;
t487 = rSges(4,1) * t557 - rSges(4,2) * t558;
t676 = -t394 * t584 + t487 * t576;
t675 = t395 * t584 - t487 * t577;
t674 = t425 + t412;
t673 = t427 + t413;
t672 = t502 + t496;
t323 = -rSges(5,1) * t713 + rSges(5,2) * t770 + t546 * rSges(5,3);
t324 = -rSges(5,1) * t712 + rSges(5,2) * t769 + t548 * rSges(5,3);
t441 = rSges(5,1) * t710 - rSges(5,2) * t767 + t575 * rSges(5,3);
t234 = rSges(6,1) * t715 - rSges(6,2) * t773 + t472 * rSges(6,3);
t236 = rSges(6,1) * t714 - rSges(6,2) * t772 + t474 * rSges(6,3);
t332 = rSges(6,1) * t711 - rSges(6,2) * t768 + t550 * rSges(6,3);
t668 = -0.2e1 * t397 * t572 - 0.2e1 * t428 * t569 + 0.2e1 * t358 + 0.2e1 * t371 + t743;
t661 = -Icges(5,1) * t807 + Icges(5,4) * t602;
t660 = -Icges(5,4) * t807 + Icges(5,2) * t602;
t659 = -Icges(5,5) * t807 + Icges(5,6) * t602;
t646 = t40 * t801 + t764 * t9;
t643 = (Icges(5,5) * t664 - Icges(5,6) * t472) * t477 + (Icges(5,5) * t663 - Icges(5,6) * t474) * t478 + (Icges(5,5) * t662 - Icges(5,6) * t550) * t551;
t642 = (-Icges(4,5) * t545 - Icges(4,6) * t546) * t576 + (-Icges(4,5) * t547 - Icges(4,6) * t548) * t577 + (Icges(4,5) * t875 - Icges(4,6) * t575) * t584;
t641 = t12 * t762 + t44 * t800;
t640 = t11 * t751 + t43 * t766;
t631 = -0.2e1 * t771 + 0.2e1 * t138 - 0.2e1 * t774 + 0.2e1 * t178 + t668;
t620 = (Icges(5,1) * t663 - t247 - t788) * t478 + (Icges(5,1) * t664 - t246 - t789) * t477 + (Icges(5,1) * t662 - t377 - t787) * t551;
t619 = (Icges(5,2) * t474 - t249 - t459) * t478 + (Icges(5,2) * t472 - t248 - t458) * t477 + (Icges(5,2) * t550 - t378 - t541) * t551;
t366 = -Icges(4,2) * t545 + Icges(4,6) * t576 + t792;
t367 = -Icges(4,2) * t547 + Icges(4,6) * t577 + t791;
t481 = Icges(4,2) * t875 + Icges(4,6) * t584 + t790;
t618 = (-Icges(4,1) * t547 - t367 - t791) * t577 + (-Icges(4,1) * t545 - t366 - t792) * t576 + (Icges(4,1) * t875 - t481 - t790) * t584;
t535 = Icges(4,4) * t545;
t368 = Icges(4,1) * t546 + Icges(4,5) * t576 - t535;
t536 = Icges(4,4) * t547;
t369 = Icges(4,1) * t548 + Icges(4,5) * t577 - t536;
t567 = Icges(4,4) * t875;
t482 = Icges(4,1) * t575 + Icges(4,5) * t584 + t567;
t617 = (Icges(4,2) * t548 - t369 + t536) * t577 + (Icges(4,2) * t546 - t368 + t535) * t576 + (Icges(4,2) * t575 - t482 - t567) * t584;
t616 = t300 * t740 - t302 * t741 + t478 * t412 - t413 * t477 + t687;
t615 = t302 * t739 + t551 * t413 - t434 * t740 - t478 * t496 + t686;
t614 = -t300 * t739 - t412 * t551 + t434 * t741 + t477 * t496 + t685;
t606 = (Icges(5,3) * t548 + t247 * t602 - t249 * t807 + t547 * t659) * t478 + (Icges(5,3) * t546 + t246 * t602 - t248 * t807 + t545 * t659) * t477 + (Icges(5,3) * t575 + t377 * t602 - t378 * t807 - t659 * t875) * t551;
t501 = rSges(4,1) * t875 - rSges(4,2) * t575;
t497 = t738 * t875 + t739;
t486 = Icges(4,1) * t557 - Icges(4,4) * t558;
t485 = Icges(4,4) * t557 - Icges(4,2) * t558;
t484 = Icges(4,5) * t557 - Icges(4,6) * t558;
t480 = Icges(4,5) * t575 + Icges(4,6) * t875 + Icges(4,3) * t584;
t440 = Icges(5,5) * t575 - t661 * t875;
t439 = Icges(5,6) * t575 - t660 * t875;
t432 = rSges(5,1) * t662 - rSges(5,2) * t550;
t424 = -rSges(4,1) * t547 - rSges(4,2) * t548;
t423 = -rSges(4,1) * t545 - rSges(4,2) * t546;
t416 = -t547 * t738 + t740;
t415 = -t545 * t738 + t741;
t393 = -Icges(4,1) * t516 - Icges(4,4) * t517;
t392 = -Icges(4,1) * t514 - Icges(4,4) * t515;
t391 = -Icges(4,4) * t516 - Icges(4,2) * t517;
t390 = -Icges(4,4) * t514 - Icges(4,2) * t515;
t389 = -Icges(4,5) * t516 - Icges(4,6) * t517;
t388 = -Icges(4,5) * t514 - Icges(4,6) * t515;
t379 = rSges(5,1) * t550 + rSges(5,2) * t662 - rSges(5,3) * t875;
t365 = Icges(4,5) * t548 - Icges(4,6) * t547 + Icges(4,3) * t577;
t364 = Icges(4,5) * t546 - Icges(4,6) * t545 + Icges(4,3) * t576;
t336 = t545 * t434;
t322 = Icges(5,5) * t548 + t547 * t661;
t321 = Icges(5,5) * t546 + t545 * t661;
t320 = Icges(5,6) * t548 + t547 * t660;
t319 = Icges(5,6) * t546 + t545 * t660;
t305 = rSges(6,1) * t665 - rSges(6,2) * t476;
t292 = rSges(5,1) * t663 - rSges(5,2) * t474;
t291 = rSges(5,1) * t664 - rSges(5,2) * t472;
t276 = t875 * t302;
t272 = rSges(5,1) * t457 - rSges(5,2) * t456 + rSges(5,3) * t558;
t261 = t547 * t300;
t220 = qJD(3) * t678 - t708;
t219 = qJD(3) * t679 + t593;
t201 = rSges(6,1) * t666 - rSges(6,2) * t357;
t197 = rSges(6,1) * t667 - rSges(6,2) * t355;
t173 = qJD(3) * t680 + t732;
t133 = qJD(3) * t675 + qJDD(3) * t678 - t707;
t132 = qJD(3) * t676 + qJDD(3) * t679 + t592;
t114 = t724 + t858;
t111 = t251 * t551 - t379 * t478 + t639;
t110 = -t250 * t551 + t379 * t477 + t669;
t83 = t250 * t478 - t251 * t477 + t650;
t59 = t154 * t435 - t260 * t308 + t625;
t58 = -t152 * t435 + t260 * t307 + t638;
t55 = t170 * t551 + t251 * t479 - t272 * t478 - t361 * t379 + t611;
t54 = -t169 * t551 - t250 * t479 + t272 * t477 + t360 * t379 + t627;
t53 = t152 * t308 - t154 * t307 + t628;
t50 = t626 - t775 + t776 - t777 + t778;
t45 = t106 * t477 + t107 * t478 + t121 * t551;
t42 = t113 * t551 + t477 * t79 + t478 * t80;
t41 = t112 * t551 + t477 * t77 + t478 * t78;
t31 = -t129 * t308 + t154 * t264 - t156 * t260 + t435 * t99 + t607;
t30 = t129 * t307 - t152 * t264 + t155 * t260 - t435 * t97 + t610;
t13 = t609 - t779 + t780 + t802 - t803;
t1 = [(t631 - 0.2e1 * t779 + 0.2e1 * t780 + 0.2e1 * t802 - 0.2e1 * t803) * t846 + (t668 - 0.2e1 * t775 + 0.2e1 * t776 - 0.2e1 * t777 + 0.2e1 * t778) * t847 + m(2) * qJDD(1) + (-m(2) + t857) * g(3) + (t848 + t849) * t743 + 0.2e1 * t858 * t848 + (t631 - 0.2e1 * t726 + 0.2e1 * t737 + 0.2e1 * t856) * t845; (t9 * t723 + (t11 * t598 - t12 * t600) * t722) * t845 + (t13 * t723 + (t30 * t598 - t31 * t600) * t722) * t846 + (t50 * t723 + (t54 * t598 - t55 * t600) * t722) * t847 + (t114 * t723 + (t132 * t598 - t133 * t600) * t722) * t848 + (t724 * t723 + 0.2e1 * (t598 ^ 2 + t600 ^ 2) * t599 ^ 2 * qJDD(2)) * t849 + t857 * (g(3) * t797 + (g(1) * t598 - g(2) * t600) * t599); (t576 * t870 + t577 * t869 + t584 * t866) * t842 + (((t364 * t577 - t366 * t547 + t368 * t548) * t576 + (t365 * t577 - t367 * t547 + t369 * t548) * t577 + (t480 * t577 - t481 * t547 + t482 * t548) * t584) * t921 + ((-t366 * t517 - t368 * t516 + t388 * t577 - t390 * t547 + t392 * t548) * t576 + (-t367 * t517 - t369 * t516 + t389 * t577 - t391 * t547 + t393 * t548) * t577 + (-t481 * t517 - t482 * t516 + t484 * t577 - t485 * t547 + t486 * t548) * t584) * t922 + t877) * t577 / 0.2e1 + (((t364 * t576 - t366 * t545 + t368 * t546) * t576 + (t365 * t576 - t367 * t545 + t369 * t546) * t577 + (t480 * t576 - t481 * t545 + t482 * t546) * t584) * t921 + ((-t366 * t515 - t368 * t514 + t388 * t576 - t390 * t545 + t392 * t546) * t576 + (-t367 * t515 - t369 * t514 + t389 * t576 - t391 * t545 + t393 * t546) * t577 + (-t481 * t515 - t482 * t514 + t484 * t576 - t485 * t545 + t486 * t546) * t584) * t922 + t878) * t576 / 0.2e1 + (((t364 * t584 + t366 * t875 + t368 * t575) * t576 + (t365 * t584 + t367 * t875 + t369 * t575) * t577 + (t480 * t584 + t481 * t875 + t482 * t575) * t584) * t921 + ((-t366 * t558 + t368 * t557 + t388 * t584 + t390 * t875 + t392 * t575) * t576 + (-t367 * t558 + t369 * t557 + t389 * t584 + t391 * t875 + t393 * t575) * t577 + (-t481 * t558 + t482 * t557 + t484 * t584 + t485 * t875 + t486 * t575) * t584) * t922 + t876) * t584 / 0.2e1 - (t584 * (t575 * t618 + t584 * t642 - t617 * t875) + t577 * (t547 * t617 + t548 * t618 + t577 * t642) + t576 * (t545 * t617 + t546 * t618 + t576 * t642)) * qJD(3) ^ 2 / 0.2e1 + ((t575 * t245 + t320 * t662 + t550 * t322) * t478 + (t575 * t244 + t319 * t662 + t550 * t321) * t477 + (t575 * t376 + t439 * t662 + t550 * t440) * t551 + (t106 * t546 + t107 * t548 + t121 * t575) * qJD(4) - t606 * t875) * t815 + (t576 * t910 + t577 * t909 + t584 * t905) * t830 - t911 * t416 / 0.2e1 - t912 * t415 / 0.2e1 + (t576 * t914 + t577 * t913 + t584 * t906) * t838 + (t576 * t916 + t577 * t915 + t584 * t907) * t840 + (t58 * (-t152 * t497 - t216 * t435 + t260 * t415 + t307 * t316 + t614) + t59 * (t154 * t497 + t218 * t435 - t260 * t416 - t308 * t316 + t615) + t53 * (t152 * t416 - t154 * t415 + t216 * t308 - t218 * t307 + t616)) * t697 + (t54 * (t379 * t576 + t455 + (-t250 - t426) * t584) + t110 * (t272 * t576 + t437 + (-t169 - t396) * t584) + t55 * (t251 * t584 + t387 + (-t379 - t503) * t577) + t111 * (t170 * t584 + t383 + (-t272 - t488) * t577) + t50 * (t250 * t577 + t380 + (-t251 - t428) * t576) + t83 * (t169 * t577 + t359 + (-t170 - t397) * t576)) * t698 + (t110 * (-t323 * t551 + t441 * t477 + (-t250 * t575 + t379 * t546) * qJD(4) + t685) + t111 * (t324 * t551 - t441 * t478 + (t251 * t575 - t379 * t548) * qJD(4) + t686) + t83 * (t323 * t478 - t324 * t477 + (t250 * t548 - t251 * t546) * qJD(4) + t687)) * t699 + (t114 * t680 + t132 * t679 + t133 * t678 + t173 * t677 + t219 * t676 + t220 * t675) * t731 / 0.2e1 - t45 * t739 / 0.2e1 - t42 * t740 / 0.2e1 - t41 * t741 / 0.2e1 - (t219 * (-t423 * t584 + t501 * t576) + t220 * (t424 * t584 - t501 * t577) + t173 * (t423 * t577 - t424 * t576)) * qJD(3) * t731 / 0.2e1 + (t113 * t584 + t576 * t79 + t577 * t80) * t834 + (t112 * t584 + t576 * t77 + t577 * t78) * t835 + (t106 * t576 + t107 * t577 + t121 * t584) * t822 + (t48 * t576 + t49 * t577 + t57 * t584) * t823 + (t46 * t576 + t47 * t577 + t56 * t584) * t825 - m(5) * (g(1) * (t324 + t427) + g(2) * (t323 + t425) + g(3) * (t441 + t502)) + (t576 * t872 + t577 * t871 + t584 * t867) * t843 + (t867 * t497 + (t357 * t882 + t410 * t887 + t411 * t885 + t663 * t883 + t666 * t884 - t769 * t886) * t435 + t871 * t416 + t872 * t415 + (t357 * t892 + t410 * t902 + t411 * t898 + t663 * t894 + t666 * t896 - t769 * t900) * t308 + (t357 * t893 + t410 * t903 + t411 * t899 + t663 * t895 + t666 * t897 - t769 * t901) * t307) * t839 + (t576 * t874 + t577 * t873 + t584 * t868) * t844 + (t868 * t497 + (t355 * t882 + t408 * t887 + t409 * t885 + t664 * t883 + t667 * t884 - t770 * t886) * t435 + t873 * t416 + t874 * t415 + (t355 * t892 + t408 * t902 + t409 * t898 + t664 * t894 + t667 * t896 - t770 * t900) * t308 + (t355 * t893 + t408 * t903 + t409 * t899 + t664 * t895 + t667 * t897 - t770 * t901) * t307) * t841 - t908 * t497 / 0.2e1 + (t30 * (t260 * t576 + (-t426 + t763) * t584 + t744) + t58 * (t129 * t576 + (-t396 + t799) * t584 + t749) + t31 * (t154 * t584 + (-t503 + t750) * t577 + t747) + t59 * (t584 * t99 + (-t488 + t765) * t577 + t757) + t13 * (t152 * t577 + (-t428 + t761) * t576 + t748) + t53 * (t577 * t97 + (-t397 + t798) * t576 + t758)) * t696 + (t744 * t854 + t747 * t853 + t748 * t855 + t749 * t851 + t757 * t850 + t758 * t852 + 0.2e1 * (t11 * (-t426 + t718) + t43 * (-t396 + t721) + t641) * t584 + 0.2e1 * (t12 * (-t503 + t716) + t44 * (-t488 + t719) + t646) * t577 + 0.2e1 * (t9 * (-t428 + t717) + t40 * (-t397 + t720) + t640) * t576) * t845 - m(6) * (g(1) * (t673 + t218) + g(2) * (t674 + t216) + g(3) * (t672 + t316)) - m(7) * (g(1) * (t673 + t753) + g(2) * (t674 + t754) + g(3) * (t672 + t745)) + (t866 * t497 + (t476 * t882 + t494 * t887 + t495 * t885 + t662 * t883 + t665 * t884 + t767 * t886) * t435 + t869 * t416 + t870 * t415 + (t476 * t892 + t494 * t902 + t495 * t898 + t662 * t894 + t665 * t896 + t767 * t900) * t308 + (t476 * t893 + t494 * t903 + t495 * t899 + t662 * t895 + t665 * t897 + t767 * t901) * t307) * t831 + ((t546 * t245 + t320 * t664 + t472 * t322) * t478 + (t546 * t244 + t319 * t664 + t472 * t321) * t477 + (t546 * t376 + t439 * t664 + t472 * t440) * t551 + (t112 * t575 + t546 * t77 + t548 * t78) * qJD(4) + t606 * t545) * t826 + ((t548 * t245 + t320 * t663 + t474 * t322) * t478 + (t548 * t244 + t319 * t663 + t474 * t321) * t477 + (t548 * t376 + t439 * t663 + t474 * t440) * t551 + (t113 * t575 + t546 * t79 + t548 * t80) * qJD(4) + t606 * t547) * t824 - m(4) * (g(1) * t424 + g(2) * t423 + g(3) * t501) + (t51 * t576 + t52 * t577 + t584 * t68) * t814 + (t43 * (qJD(6) * t410 + t307 * t745 + t415 * t751 - t435 * t754 - t497 * t764 + t614) + t44 * (qJD(6) * t408 - t308 * t745 - t416 * t751 + t435 * t753 + t497 * t762 + t615) + t40 * (qJD(6) * t494 - t307 * t753 + t308 * t754 - t415 * t762 + t416 * t764 + t616)) * t695; -(t472 * t912 + t474 * t911 + t550 * t908) * qJD(5) / 0.2e1 + (t879 * t662 + (t476 * t880 + t550 * t886 + t665 * t881) * t435 + (t476 * t888 + t550 * t900 + t665 * t890) * t308 + (t476 * t889 + t550 * t901 + t665 * t891) * t307 + (t472 * t870 + t474 * t869 + t550 * t866) * qJD(5)) * t831 + (t879 * t663 + (t357 * t880 + t474 * t886 + t666 * t881) * t435 + (t357 * t888 + t474 * t900 + t666 * t890) * t308 + (t357 * t889 + t474 * t901 + t666 * t891) * t307 + (t472 * t872 + t474 * t871 + t550 * t867) * qJD(5)) * t839 - m(5) * (g(1) * t292 + g(2) * t291 + g(3) * t432) + t877 * t547 / 0.2e1 + t878 * t545 / 0.2e1 + (t54 * (t250 * t875 + t379 * t545) + t110 * (t169 * t875 - t250 * t558 + t272 * t545 + t379 * t515) + t55 * (-t251 * t875 - t379 * t547) + t111 * (-t170 * t875 + t251 * t558 - t272 * t547 - t379 * t517) + t50 * (t250 * t547 - t251 * t545) + t83 * (t169 * t547 - t170 * t545 + t250 * t517 - t251 * t515)) * t698 + (-t113 * t875 + t545 * t79 + t547 * t80) * t834 + (-t112 * t875 + t545 * t77 + t547 * t78) * t835 + (t106 * t545 + t107 * t547 - t121 * t875) * t822 + (t113 * t558 + t48 * t545 + t49 * t547 + t515 * t79 + t517 * t80 - t57 * t875) * t823 + (t112 * t558 + t46 * t545 + t47 * t547 + t515 * t77 + t517 * t78 - t56 * t875) * t825 + (t545 * t874 + t547 * t873 - t868 * t875) * t844 + (t550 * t620 - t619 * t662 - t643 * t875) * t815 + (t106 * t515 + t107 * t517 + t121 * t558 + t51 * t545 + t52 * t547 - t68 * t875) * t814 - t876 * t875 / 0.2e1 + (t261 * t855 - t276 * t853 + t336 * t854 + t752 * t851 + t759 * t850 + t760 * t852 + (t718 * t851 + t762 * t850) * t558 + (t716 * t850 + t764 * t852) * t517 + (t717 * t852 + t751 * t851) * t515 - 0.2e1 * (t11 * t718 + t43 * t721 + t641) * t875 + 0.2e1 * (t12 * t716 + t44 * t719 + t646) * t547 + 0.2e1 * (t40 * t720 + t717 * t9 + t640) * t545) * t845 + (t30 * (t260 * t545 - t763 * t875 + t336) + t58 * (t129 * t545 + t260 * t515 + t558 * t763 - t799 * t875 + t752) + t31 * (-t154 * t875 + t547 * t750 - t276) + t59 * (t154 * t558 + t517 * t750 + t547 * t765 - t875 * t99 + t759) + t13 * (t152 * t547 + t545 * t761 + t261) + t53 * (t152 * t517 + t515 * t761 + t545 * t798 + t547 * t97 + t760)) * t696 + (t42 + t911) * t517 / 0.2e1 + (t41 + t912) * t515 / 0.2e1 + (t58 * (-t234 * t435 + t307 * t332 + (-t152 * t550 + t260 * t472) * qJD(5) + t690) + t59 * (t236 * t435 - t308 * t332 + (t154 * t550 - t260 * t474) * qJD(5) + t691) + t53 * (t234 * t308 - t236 * t307 + (t152 * t474 - t154 * t472) * qJD(5) + t692)) * t697 + (t110 * (-t291 * t551 + t432 * t477) + t111 * (t292 * t551 - t432 * t478) + t83 * (t291 * t478 - t292 * t477)) * t699 + (t545 * t870 + t547 * t869 - t866 * t875) * t842 + (t545 * t872 + t547 * t871 - t867 * t875) * t843 + (t515 * t870 + t517 * t869 + t545 * t910 + t547 * t909 + t558 * t866 - t875 * t905) * t830 + (t515 * t872 + t517 * t871 + t545 * t914 + t547 * t913 + t558 * t867 - t875 * t906) * t838 + (t515 * t874 + t517 * t873 + t545 * t916 + t547 * t915 + t558 * t868 - t875 * t907) * t840 - m(6) * (g(1) * (t236 + t301) + g(2) * (t234 + t299) + g(3) * (t332 + t433)) + (t879 * t664 + (t355 * t880 + t472 * t886 + t667 * t881) * t435 + (t355 * t888 + t472 * t900 + t667 * t890) * t308 + (t355 * t889 + t472 * t901 + t667 * t891) * t307 + (t472 * t874 + t474 * t873 + t550 * t868) * qJD(5)) * t841 + (t45 + t908) * t558 / 0.2e1 + (t472 * t620 + t545 * t643 - t619 * t664) * t826 + (t474 * t620 + t547 * t643 - t619 * t663) * t824 - m(7) * ((t307 * t863 - t435 * t865 + t663 * t733 + t690) * t851 + (-t308 * t863 + t435 * t864 + t664 * t733 + t691) * t850 + (-t307 * t864 + t308 * t865 + t662 * t733 + t692) * t852 + 0.2e1 * ((-t43 * t764 + t44 * t762) * t550 + (t40 * t764 - t44 * t751) * t474 + (-t40 * t762 + t43 * t751) * t472) * qJD(5)) / 0.2e1 - m(7) * (g(1) * (t301 + t864) + g(2) * (t299 + t865) + g(3) * (t433 + t863)); (t30 * (t152 * t662 - t260 * t664) + t58 * (-t129 * t664 - t152 * t456 + t260 * t338 + t662 * t97) + t31 * (-t154 * t662 + t260 * t663) + t59 * (t129 * t663 + t154 * t456 - t260 * t340 - t662 * t99) + t13 * (-t152 * t663 + t154 * t664) + t53 * (t152 * t340 - t154 * t338 - t663 * t97 + t664 * t99)) * t696 + (t58 * (-t197 * t435 + t305 * t307) + t59 * (t201 * t435 - t305 * t308) + t53 * (t197 * t308 - t201 * t307)) * t697 - m(6) * (g(1) * t201 + g(2) * t197 + g(3) * t305) + (t11 * (t662 * t764 - t664 * t751) + t43 * (t338 * t751 - t456 * t764 + t662 * t801 - t664 * t766) + t12 * (-t662 * t762 + t663 * t751) + t44 * (-t340 * t751 + t456 * t762 - t662 * t800 + t663 * t766) + t9 * (-t663 * t764 + t664 * t762) + t40 * (-t338 * t762 + t340 * t764 - t663 * t801 + t664 * t800)) * t728 / 0.2e1 - m(7) * (g(1) * t755 + g(2) * t756 + g(3) * t746) + (t43 * (qJD(6) * t357 + t307 * t746 - t435 * t756) + t44 * (qJD(6) * t355 - t308 * t746 + t435 * t755) + t40 * (qJD(6) * t476 - t307 * t755 + t308 * t756)) * t695 + (-t662 * t868 - t663 * t873 - t664 * t874) * t844 + (-t662 * t867 - t663 * t871 - t664 * t872) * t843 + (-t662 * t866 - t663 * t869 - t664 * t870) * t842 + (t355 * t861 - t664 * t860 - t667 * t862) * t841 + (t874 * t338 + t873 * t340 + t868 * t456 - t662 * t907 - t663 * t915 - t664 * t916) * t840 + (t357 * t861 - t663 * t860 - t666 * t862) * t839 + (t872 * t338 + t871 * t340 + t867 * t456 - t662 * t906 - t663 * t913 - t664 * t914) * t838 + t912 * t338 / 0.2e1 + t911 * t340 / 0.2e1 + (t476 * t861 - t662 * t860 - t665 * t862) * t831 + (t870 * t338 + t869 * t340 + t866 * t456 - t662 * t905 - t663 * t909 - t664 * t910) * t830 + t908 * t456 / 0.2e1 - t920 * t664 / 0.2e1 - t919 * t663 / 0.2e1 - t918 * t662 / 0.2e1; (t159 * t44 + t161 * t43 + t267 * t40 - (-t307 * t43 + t308 * t44 - g(3) + t9) * t665 - (t307 * t40 - t435 * t44 - g(1) + t11) * t666 - (-t308 * t40 + t43 * t435 - g(2) + t12) * t667) * m(7);];
tau  = t1;
