% Calculate minimal parameter regressor of coriolis matrix for
% S6PPRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,theta1,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x23]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:58
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PPRRRP2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRP2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRP2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PPRRRP2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:58:11
% EndTime: 2019-03-08 18:58:29
% DurationCPUTime: 9.45s
% Computational Cost: add. (6784->511), mult. (19131->764), div. (0->0), fcn. (22002->12), ass. (0->387)
t376 = sin(qJ(4));
t375 = sin(qJ(5));
t557 = t375 * qJ(6);
t378 = cos(qJ(5));
t607 = t378 * pkin(5);
t448 = t557 + t607;
t311 = t448 * t376;
t623 = -t311 / 0.2e1;
t377 = sin(qJ(3));
t591 = sin(pkin(6));
t472 = sin(pkin(12)) * t591;
t612 = cos(qJ(3));
t374 = sin(pkin(7));
t449 = cos(pkin(12)) * t591;
t592 = cos(pkin(7));
t593 = cos(pkin(6));
t655 = t593 * t374 + t592 * t449;
t234 = t377 * t472 - t612 * t655;
t578 = t234 * t378;
t235 = t377 * t655 + t612 * t472;
t379 = cos(qJ(4));
t384 = -t374 * t449 + t592 * t593;
t177 = t235 * t379 + t376 * t384;
t581 = t177 * t375;
t115 = -t578 + t581;
t176 = t235 * t376 - t379 * t384;
t606 = t378 * pkin(9);
t608 = t376 * pkin(10);
t610 = t375 * pkin(4);
t264 = t375 * (-pkin(3) - t608) + (-qJ(6) + t606 - t610) * t379;
t456 = -pkin(4) * t379 - t608;
t430 = -pkin(3) + t456;
t542 = t378 * t379;
t503 = pkin(9) * t542;
t288 = t375 * t430 + t503;
t478 = t264 / 0.2e1 - t288 / 0.2e1;
t664 = t478 * t115 + t176 * t623;
t496 = t374 * t612;
t463 = t378 * t496;
t558 = t374 * t377;
t309 = t376 * t592 + t379 * t558;
t554 = t375 * t309;
t246 = t463 + t554;
t308 = t376 * t558 - t379 * t592;
t663 = t478 * t246 + t308 * t623;
t553 = t375 * t376;
t359 = pkin(5) * t553;
t548 = t378 * qJ(6);
t297 = t359 + (pkin(9) - t548) * t376;
t550 = t376 * t378;
t572 = t264 * t379;
t180 = t297 * t550 + t572;
t479 = t550 / 0.2e1;
t464 = t375 * t496;
t545 = t378 * t309;
t247 = -t464 + t545;
t573 = t247 * t379;
t411 = t573 / 0.2e1 + t308 * t479;
t457 = t496 / 0.2e1;
t435 = t375 * t457;
t485 = -t558 / 0.2e1;
t130 = t378 * t485 + t379 * t435 + t411;
t579 = t234 * t375;
t580 = t177 * t378;
t116 = t579 + t580;
t583 = t116 * t379;
t413 = t583 / 0.2e1 + t176 * t479;
t551 = t375 * t379;
t482 = -t551 / 0.2e1;
t576 = t235 * t378;
t35 = t234 * t482 - t576 / 0.2e1 + t413;
t600 = t35 * qJD(1) + t130 * qJD(2);
t662 = t180 * qJD(3) + t600;
t605 = t379 * pkin(10);
t609 = t376 * pkin(4);
t342 = -t605 + t609;
t328 = t375 * t342;
t173 = t328 * t379 + (-t288 + t503) * t376;
t453 = -t116 / 0.2e1 + t580 / 0.2e1;
t24 = (t579 / 0.2e1 + t453) * t376;
t458 = -t496 / 0.2e1;
t436 = t375 * t458;
t452 = -t247 / 0.2e1 + t545 / 0.2e1;
t90 = (t436 + t452) * t376;
t604 = t24 * qJD(1) + t90 * qJD(2);
t661 = t173 * qJD(3) + t604;
t318 = t378 * t430;
t504 = pkin(9) * t551;
t287 = -t318 + t504;
t569 = t287 * t379;
t153 = -t297 * t553 + t311 * t550 - t569;
t484 = -t553 / 0.2e1;
t574 = t246 * t379;
t412 = -t574 / 0.2e1 + t308 * t484;
t495 = t379 * t612;
t462 = t378 * t495;
t552 = t375 * t377;
t128 = (t462 / 0.2e1 + t552 / 0.2e1) * t374 + t412;
t638 = -t115 / 0.2e1;
t454 = t638 - t578 / 0.2e1;
t616 = -t376 / 0.2e1;
t33 = t454 * t379 + (t176 * t616 + t235 / 0.2e1) * t375;
t602 = t33 * qJD(1) + t128 * qJD(2);
t660 = t153 * qJD(3) + t602;
t370 = t376 ^ 2;
t559 = t370 * t375;
t232 = -pkin(9) * t559 - t569;
t659 = -qJD(3) * t232 - t602;
t564 = t311 * t375;
t566 = t297 * t378;
t568 = t288 * t379;
t152 = t568 + (t564 + t566) * t376;
t658 = -qJD(3) * t152 - t600;
t366 = t376 * qJ(6);
t267 = -pkin(9) * t550 + t328 + t366;
t611 = pkin(5) * t375;
t340 = -t548 + t611;
t298 = (pkin(9) + t340) * t379;
t439 = t297 * t379 + t298 * t376;
t96 = -t264 * t376 + t267 * t379 + t378 * t439;
t657 = -t96 * qJD(3) - t604;
t481 = t551 / 0.2e1;
t656 = t481 + t482;
t422 = -t548 / 0.2e1 + t611 / 0.2e1;
t621 = t340 / 0.2e1;
t654 = t422 + t621;
t196 = t308 * t375;
t549 = t377 * t378;
t534 = t379 * t436 + t374 * t549 / 0.2e1;
t392 = t411 + t534;
t653 = qJD(3) * t392 + t196 * qJD(4) - t247 * qJD(5);
t535 = t234 * t481 + t576 / 0.2e1;
t393 = t413 + t535;
t72 = t176 * t375;
t652 = qJD(3) * t393 + t72 * qJD(4) - t116 * qJD(5);
t265 = -t318 + (pkin(9) * t375 + pkin(5)) * t379;
t626 = -t287 / 0.2e1;
t651 = t626 + t265 / 0.2e1;
t434 = t378 * t458;
t634 = t246 / 0.2e1;
t385 = (t434 - t554 / 0.2e1 + t634) * t376;
t649 = qJD(3) * t385;
t391 = (-t581 / 0.2e1 - t454) * t376;
t648 = qJD(3) * t391;
t647 = qJD(4) * t385;
t646 = qJD(4) * t391;
t483 = t553 / 0.2e1;
t382 = t246 * t616 + t308 * t656 + t309 * t483 + t376 * t434;
t514 = t309 * qJD(4);
t645 = qJD(3) * t382 + t196 * qJD(5) - t378 * t514;
t387 = t115 * t616 + t176 * t656 + t177 * t483 + t234 * t479;
t528 = qJD(4) * t378;
t644 = qJD(3) * t387 + t72 * qJD(5) - t177 * t528;
t369 = t375 ^ 2;
t371 = t378 ^ 2;
t352 = t371 - t369;
t510 = t376 * qJD(3);
t494 = t378 * t510;
t461 = t375 * t494;
t643 = qJD(4) * t352 - 0.2e1 * t461;
t642 = -qJD(1) * t391 - qJD(2) * t385;
t285 = (t375 * t495 - t549) * t374;
t641 = qJD(4) * t382 + qJD(5) * t392 + (t285 * t379 + t370 * t464) * qJD(3);
t144 = -t234 * t551 - t576;
t640 = qJD(4) * t387 + qJD(5) * t393 + (t144 * t379 - t234 * t559) * qJD(3);
t637 = -t144 / 0.2e1;
t635 = -t234 / 0.2e1;
t633 = t247 / 0.2e1;
t630 = -t267 / 0.2e1;
t367 = t376 * pkin(5);
t361 = pkin(9) * t553;
t544 = t378 * t342;
t470 = -t361 - t544;
t269 = -t367 + t470;
t629 = t269 / 0.2e1;
t628 = -t285 / 0.2e1;
t286 = (t462 + t552) * t374;
t627 = t286 / 0.2e1;
t624 = t309 / 0.2e1;
t622 = -t340 / 0.2e1;
t620 = -t342 / 0.2e1;
t619 = -t361 / 0.2e1;
t618 = -t375 / 0.2e1;
t617 = t375 / 0.2e1;
t615 = t376 / 0.2e1;
t614 = t378 / 0.2e1;
t613 = -t379 / 0.2e1;
t590 = qJD(3) * t24;
t589 = qJD(3) * t33;
t588 = qJD(3) * t35;
t586 = t115 * t375;
t585 = t115 * t379;
t584 = t116 * t378;
t149 = t234 * t376;
t577 = t235 * t375;
t571 = t285 * t375;
t570 = t286 * t378;
t567 = t297 * t375;
t331 = -pkin(4) - t448;
t562 = t331 * t375;
t561 = t331 * t376;
t556 = t375 * t246;
t555 = t375 * t265;
t547 = t378 * t247;
t546 = t378 * t264;
t543 = t378 * t370;
t477 = t287 / 0.2e1 - t265 / 0.2e1;
t54 = (pkin(5) * t613 + t477) * t378 + (qJ(6) * t613 + t478) * t375;
t541 = t54 * qJD(3);
t80 = -t288 * t550 + (t546 + (t265 - t287) * t375) * t376;
t540 = t80 * qJD(3);
t538 = t90 * qJD(3);
t533 = -t369 - t371;
t372 = t379 ^ 2;
t353 = t372 - t370;
t529 = qJD(4) * t375;
t527 = qJD(5) * t375;
t526 = qJD(5) * t378;
t525 = qJD(5) * t379;
t524 = qJD(6) * t375;
t523 = qJD(6) * t379;
t521 = t128 * qJD(3);
t519 = t130 * qJD(3);
t515 = t287 * qJD(5);
t326 = t353 * t375;
t513 = t326 * qJD(3);
t327 = t372 * t378 - t543;
t512 = t327 * qJD(3);
t511 = t353 * qJD(3);
t509 = t376 * qJD(4);
t508 = t378 * qJD(6);
t507 = t379 * qJD(3);
t506 = t379 * qJD(4);
t505 = t619 - t367;
t502 = pkin(3) * t510;
t501 = pkin(3) * t507;
t500 = pkin(10) * t527;
t499 = pkin(10) * t526;
t498 = t605 / 0.2e1;
t497 = t234 * t542;
t493 = t375 * t525;
t492 = t378 * t525;
t491 = t375 * t508;
t490 = t375 * t526;
t489 = t376 * t524;
t356 = t375 * t528;
t488 = t376 * t506;
t487 = t376 * t507;
t486 = t561 / 0.2e1;
t480 = -t550 / 0.2e1;
t476 = t619 - t367 / 0.2e1;
t475 = t369 / 0.2e1 - t371 / 0.2e1;
t474 = pkin(10) * t533;
t473 = qJD(4) * t612;
t469 = qJD(4) * t533;
t303 = (-0.1e1 / 0.2e1 + t475) * t376;
t468 = qJD(3) * t303 - t356;
t312 = t475 * t376;
t467 = qJD(3) * t312 - t356;
t338 = t375 * qJD(3) * t543;
t466 = qJD(4) * t312 + t338;
t358 = -qJD(5) + t507;
t465 = t376 * t496;
t460 = t376 * t356;
t459 = qJD(3) * t496;
t451 = t340 * t615 + t297 / 0.2e1;
t447 = -t331 * t379 + t608;
t145 = -t497 + t577;
t6 = t145 * t633 + t116 * t627 + t144 * t634 + t115 * t285 / 0.2e1 + (t176 * t457 + t308 * t635) * t376;
t9 = t115 * t144 + t116 * t145 - t149 * t176;
t446 = t9 * qJD(1) + t6 * qJD(2);
t10 = (t177 - t584 - t586) * t176;
t7 = (-t584 / 0.2e1 + t177 / 0.2e1 - t586 / 0.2e1) * t308 + (-t547 / 0.2e1 + t624 - t556 / 0.2e1) * t176;
t445 = t10 * qJD(1) + t7 * qJD(2);
t47 = (t309 - t547 - t556) * t308;
t444 = t7 * qJD(1) + t47 * qJD(2);
t49 = t246 * t285 + t247 * t286 + t308 * t465;
t443 = t6 * qJD(1) + t49 * qJD(2);
t442 = t331 * t465;
t441 = qJD(4) * t24 + qJD(5) * t33;
t440 = t267 * t378 + t269 * t375;
t251 = t331 * t378 + t340 * t375;
t314 = -t328 / 0.2e1;
t344 = pkin(10) * t481;
t93 = t344 - t564 / 0.2e1 - t566 / 0.2e1 - t366 + t314 + (t562 / 0.2e1 + (t622 + pkin(9) / 0.2e1) * t378) * t376;
t433 = -qJD(3) * t93 + qJD(4) * t251;
t252 = t340 * t378 - t562;
t423 = t486 + t498;
t408 = t623 + t423;
t419 = t451 * t375;
t95 = t419 + (t620 + t408) * t378 + t505;
t432 = -qJD(3) * t95 + qJD(4) * t252;
t431 = qJD(4) * t90 + qJD(5) * t128;
t428 = t358 * t376;
t427 = t498 - t609 / 0.2e1;
t426 = pkin(5) * t637 + t145 * qJ(6) / 0.2e1;
t425 = pkin(5) * t629 + qJ(6) * t630;
t424 = pkin(5) * t628 + qJ(6) * t627;
t313 = t328 / 0.2e1;
t345 = pkin(10) * t482;
t244 = pkin(4) * t483 + t313 + t345;
t421 = pkin(4) * t528 - qJD(3) * t244;
t245 = (t620 + t427) * t378;
t420 = pkin(4) * t529 - qJD(3) * t245;
t418 = t144 * t617 + t145 * t614;
t417 = -t570 / 0.2e1 - t571 / 0.2e1;
t416 = t378 * t428;
t142 = t567 / 0.2e1 + (t620 + t423) * t378 + t476;
t415 = qJD(3) * t142 + t331 * t529;
t325 = t352 * t370;
t410 = qJD(3) * t325 + 0.2e1 * t460;
t407 = t622 + t422;
t401 = t546 / 0.2e1 - t298 / 0.2e1 + t555 / 0.2e1;
t380 = t246 * t629 + t267 * t633 + t297 * t624 - t308 * t401;
t17 = -t442 / 0.2e1 + t417 * pkin(10) + t380;
t383 = pkin(10) * t418 + t561 * t635;
t390 = t269 * t638 + t116 * t630 - t177 * t297 / 0.2e1;
t2 = t176 * t401 + t383 + t390;
t44 = t264 * t267 + t265 * t269 + t297 * t298;
t406 = -t2 * qJD(1) + t17 * qJD(2) + t44 * qJD(3);
t26 = t477 * t247 + t424 + t663;
t4 = t477 * t116 + t426 + t664;
t48 = -t264 * t287 + t265 * t288 + t297 * t311;
t405 = -t4 * qJD(1) - t26 * qJD(2) + t48 * qJD(3);
t15 = (t585 / 0.2e1 - t145 / 0.2e1) * t378 + (-t583 / 0.2e1 + t637) * t375;
t56 = -t265 * t542 - t269 * t550 + (t267 * t376 + t572) * t375;
t66 = (t574 / 0.2e1 - t286 / 0.2e1) * t378 + (-t573 / 0.2e1 + t628) * t375;
t404 = t15 * qJD(1) + t66 * qJD(2) - t56 * qJD(3);
t97 = -t265 * t376 + t269 * t379 + t375 * t439;
t403 = t97 * qJD(3) + t642;
t23 = t234 * t484 + t376 * t453;
t34 = -t585 / 0.2e1 + t176 * t484 + t497 / 0.2e1 - t577 / 0.2e1;
t402 = qJD(3) * (t145 * t379 - t234 * t543) + qJD(4) * t23 + qJD(5) * t34;
t172 = t287 * t376 + (-t470 - 0.2e1 * t361) * t379;
t400 = -t172 * qJD(3) + t642;
t74 = t176 * t378;
t399 = qJD(3) * t34 + qJD(4) * t74 + qJD(5) * t115;
t127 = -t411 + t534;
t233 = -pkin(9) * t543 - t568;
t32 = -t413 + t535;
t398 = qJD(1) * t32 + qJD(2) * t127 + qJD(3) * t233;
t129 = t375 * t485 + t379 * t434 + t412;
t89 = (t435 + t452) * t376;
t397 = qJD(3) * (t286 * t379 + t370 * t463) + qJD(4) * t89 + qJD(5) * t129;
t198 = t308 * t378;
t396 = qJD(3) * t129 + qJD(4) * t198 + qJD(5) * t246;
t395 = qJD(3) * t23 + qJD(5) * t74 + t177 * t529;
t394 = qJD(3) * t89 + qJD(5) * t198 + t375 * t514;
t389 = -qJD(5) * t448 + t508;
t337 = t370 * t371 + t372;
t388 = t337 * qJD(3) + t460 - t525;
t11 = t407 * t176;
t381 = (-t375 * t478 - t378 * t477) * pkin(10) + t297 * t621 + t311 * t331 / 0.2e1;
t39 = t381 + t425;
t45 = t407 * t308;
t386 = t331 * t340 * qJD(4) - t11 * qJD(1) - t45 * qJD(2) + t39 * qJD(3);
t363 = t509 / 0.2e1;
t357 = t378 * t507;
t339 = t378 * t489;
t336 = t358 * qJ(6);
t324 = -t357 + t526;
t317 = (t507 - qJD(5) / 0.2e1) * t376;
t315 = t544 / 0.2e1;
t310 = qJD(4) * t369 + t461;
t307 = t312 * qJD(5);
t304 = t369 * t616 + t371 * t615 + t616;
t300 = (-t375 * t510 + t528) * t379;
t299 = t375 * t428;
t282 = t288 * qJD(5);
t220 = t378 * t427 + t315 + t361;
t219 = t345 + t314 + (t610 / 0.2e1 + t606) * t376;
t151 = t234 * t379;
t143 = -pkin(10) * t542 / 0.2e1 + t331 * t480 - t567 / 0.2e1 - t544 / 0.2e1 + t476;
t94 = t378 * t408 + t315 + t419 - t505;
t92 = t344 + t366 + pkin(9) * t480 + t313 - t451 * t378 + (t486 + t623) * t375;
t65 = (t246 * t614 + t247 * t618) * t379 - t417;
t55 = t378 * t626 + t264 * t618 + t288 * t617 + t265 * t614 + (-t557 / 0.2e1 - t607 / 0.2e1) * t379;
t46 = t654 * t308;
t38 = t381 - t425;
t27 = t651 * t247 + t424 - t663;
t16 = t442 / 0.2e1 + t380 + (t570 + t571) * pkin(10) / 0.2e1;
t14 = (t115 * t614 + t116 * t618) * t379 + t418;
t12 = t654 * t176;
t5 = t651 * t116 + t426 - t664;
t3 = t176 * t298 / 0.2e1 + t383 - t390 - (t546 + t555) * t176 / 0.2e1;
t1 = qJD(3) * t6 + qJD(4) * t7;
t8 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t9 + qJD(4) * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, -t235 * qJD(3), t234 * qJD(3), 0, 0, 0, 0, 0, t149 * qJD(4) - t235 * t507, qJD(4) * t151 + t235 * t510, 0, 0, 0, 0, 0, t640, t402, t640, t14 * qJD(4) + (t144 * t378 - t145 * t375) * t510, -t402 (t144 * t265 + t145 * t264 - t149 * t297) * qJD(3) + t3 * qJD(4) + t5 * qJD(5) - t393 * qJD(6) + t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t149 - qJD(4) * t177, qJD(3) * t151 + qJD(4) * t176, 0, 0, 0, 0, 0, t644, t395, t644, t14 * qJD(3) + t176 * t469, -t395, t3 * qJD(3) + (t176 * t474 + t177 * t331) * qJD(4) + t12 * qJD(5) - t72 * qJD(6) + t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t652, t399, t652, 0, -t399, t5 * qJD(3) + t12 * qJD(4) + (-pkin(5) * t116 - qJ(6) * t115) * qJD(5) + t116 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t652; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t49 + qJD(4) * t47; 0, 0, 0, -qJD(3) * t558, -t459, 0, 0, 0, 0, 0 (-t376 * t473 - t377 * t507) * t374 (t377 * t510 - t379 * t473) * t374, 0, 0, 0, 0, 0, t641, t397, t641, t65 * qJD(4) + (t285 * t378 - t286 * t375) * t510, -t397 (t286 * t264 + t285 * t265 + t297 * t465) * qJD(3) + t16 * qJD(4) + t27 * qJD(5) - t392 * qJD(6) + t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376 * t459 - t514, t308 * qJD(4) - t379 * t459, 0, 0, 0, 0, 0, t645, t394, t645, t65 * qJD(3) + t308 * t469, -t394, t16 * qJD(3) + (t308 * t474 + t309 * t331) * qJD(4) + t46 * qJD(5) - t196 * qJD(6) + t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t653, t396, t653, 0, -t396, t27 * qJD(3) + t46 * qJD(4) + (-pkin(5) * t247 - qJ(6) * t246) * qJD(5) + t247 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t653; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t32 - t646, t441, qJD(5) * t35 - t646, qJD(4) * t15, -t441, -qJD(4) * t2 - qJD(5) * t4 - qJD(6) * t35 - t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t127 - t647, t431, qJD(5) * t130 - t647, qJD(4) * t66, -t431, qJD(4) * t17 - qJD(5) * t26 - qJD(6) * t130 - t443; 0, 0, 0, 0, 0, t488, t353 * qJD(4), 0, 0, 0, -pkin(3) * t509, -pkin(3) * t506, -t370 * t490 + t371 * t488, -t325 * qJD(5) - 0.2e1 * t379 * t460, -t327 * qJD(4) + t376 * t493, t326 * qJD(4) + t376 * t492, -t488, -qJD(4) * t172 - qJD(5) * t233, qJD(4) * t173 + qJD(5) * t232, qJD(4) * t97 + qJD(5) * t152 - t370 * t491, -t56 * qJD(4) - t80 * qJD(5) + t379 * t489, -qJD(4) * t96 - qJD(5) * t153 + qJD(6) * t337, qJD(4) * t44 + qJD(5) * t48 - qJD(6) * t180; 0, 0, 0, 0, 0, t487, t511, t506, -t509, 0, -pkin(9) * t506 - t502, pkin(9) * t509 - t501, -t307 + (t371 * t510 + t356) * t379, -0.2e1 * t376 * t490 + t379 * t643, t375 * t509 - t512, t378 * t509 + t513, -t317 (t375 * t456 - t503) * qJD(4) + t220 * qJD(5) + t400 (t378 * t456 + t504) * qJD(4) + t219 * qJD(5) + t661 (-t298 * t378 - t375 * t447) * qJD(4) + t94 * qJD(5) + t304 * qJD(6) + t403, qJD(4) * t440 + t55 * qJD(5) + t404 (-t298 * t375 + t378 * t447) * qJD(4) + t92 * qJD(5) + t339 + t657 (pkin(10) * t440 + t298 * t331) * qJD(4) + t38 * qJD(5) + t143 * qJD(6) + t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t466, -t410, t299, t416, t363, qJD(4) * t220 - t282 - t398, qJD(4) * t219 + t515 - t659, qJD(4) * t94 - t282 - t658, -t540 + t55 * qJD(4) + (-t376 * t548 + t359) * qJD(5) - t489, t92 * qJD(4) - t515 - t523 - t660, t38 * qJD(4) + (-pkin(5) * t288 - qJ(6) * t287) * qJD(5) + t264 * qJD(6) + t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t304 - t338, t299, t388, qJD(4) * t143 + qJD(5) * t264 - t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t648, -t590, t648, -qJD(3) * t15, t590, qJD(3) * t2 - qJD(5) * t11 - t445; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t649, -t538, t649, -qJD(3) * t66, t538, -qJD(3) * t17 - qJD(5) * t45 - t444; 0, 0, 0, 0, 0, -t487, -t511, 0, 0, 0, t502, t501, -t371 * t487 - t307, 0.2e1 * t375 * t416, -t492 + t512, t493 - t513, t317, qJD(5) * t245 - t400, qJD(5) * t244 - t661, qJD(5) * t95 - qJD(6) * t303 - t403, -t54 * qJD(5) - t379 * t508 - t404, qJD(5) * t93 + t339 - t657, qJD(5) * t39 - qJD(6) * t142 - t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, t352 * qJD(5), 0, 0, 0, -pkin(4) * t527, -pkin(4) * t526, -qJD(5) * t252 + t491, 0, -qJD(5) * t251 + qJD(6) * t369 (qJD(5) * t340 - t524) * t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t467, t643, t324, t358 * t375, -t510 / 0.2e1, -t420 - t499, -t421 + t500, -t499 - t432, t389 - t541, -t433 - t500, pkin(10) * t389 + t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t468, t324, t310, -t415 + t499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t32, -t589, -t588, 0, t589, qJD(3) * t4 + qJD(4) * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t127, -t521, -t519, 0, t521, qJD(3) * t26 + qJD(4) * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t466, t410, t300 (-t494 - t529) * t379, t363, -qJD(4) * t245 + t398, -qJD(4) * t244 + t659, -qJD(4) * t95 + t658, qJD(4) * t54 + t540, -t93 * qJD(4) - t523 + t660, -qJ(6) * t523 - t39 * qJD(4) - t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t467, -t643, t357, -t375 * t507, t510 / 0.2e1, t420, t421, t432, t541, t433, -t386; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t358, -t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t519; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t303 + t338, t300, -t388, qJ(6) * t525 + t142 * qJD(4) + t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t468, t357, -t310, t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t358, t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t8;
