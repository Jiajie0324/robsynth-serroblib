% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RPRRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRRR12_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR12_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR12_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR12_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR12_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RPRRRR12_invdynJ_fixb_regmin_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:00:48
% EndTime: 2019-03-09 08:01:41
% DurationCPUTime: 24.04s
% Computational Cost: add. (40908->813), mult. (136663->1178), div. (0->0), fcn. (122890->18), ass. (0->379)
t360 = sin(qJ(6));
t352 = sin(pkin(14));
t356 = cos(pkin(14));
t364 = sin(qJ(1));
t359 = cos(pkin(6));
t369 = cos(qJ(1));
t521 = t359 * t369;
t311 = t352 * t364 - t356 * t521;
t312 = t352 * t521 + t356 * t364;
t363 = sin(qJ(3));
t368 = cos(qJ(3));
t354 = sin(pkin(7));
t355 = sin(pkin(6));
t529 = t355 * t369;
t480 = t354 * t529;
t358 = cos(pkin(7));
t524 = t358 * t363;
t226 = t311 * t524 - t312 * t368 + t363 * t480;
t362 = sin(qJ(4));
t367 = cos(qJ(4));
t225 = t368 * (t311 * t358 + t480) + t312 * t363;
t357 = cos(pkin(8));
t275 = -t311 * t354 + t358 * t529;
t353 = sin(pkin(8));
t543 = t275 * t353;
t423 = t225 * t357 + t543;
t152 = t226 * t367 + t362 * t423;
t190 = t225 * t353 - t275 * t357;
t361 = sin(qJ(5));
t366 = cos(qJ(5));
t95 = t152 * t366 - t190 * t361;
t594 = t360 * t95;
t365 = cos(qJ(6));
t593 = t365 * t95;
t592 = t152 * t361 + t190 * t366;
t531 = t355 * t356;
t534 = t354 * t359;
t412 = t358 * t531 + t534;
t392 = t412 * qJD(1);
t502 = qJD(1) * t355;
t473 = t352 * t502;
t451 = t363 * t473;
t261 = t368 * t392 - t451;
t414 = t352 * t368 + t356 * t524;
t533 = t354 * t363;
t479 = t359 * t533;
t270 = t355 * t414 + t479;
t264 = t270 * qJD(1);
t526 = t357 * t362;
t199 = t261 * t367 - t264 * t526;
t496 = qJD(4) * t367;
t468 = t353 * t496;
t589 = -t199 + t468;
t472 = t356 * t502;
t501 = qJD(1) * t359;
t483 = pkin(1) * t501;
t306 = qJ(2) * t472 + t352 * t483;
t248 = pkin(10) * t392 + t306;
t340 = t356 * t483;
t540 = t352 * t355;
t389 = pkin(2) * t359 + (-pkin(10) * t358 - qJ(2)) * t540;
t255 = qJD(1) * t389 + t340;
t295 = (-pkin(10) * t352 * t354 - pkin(2) * t356 - pkin(1)) * t355;
t281 = qJD(1) * t295 + qJD(2);
t523 = t358 * t368;
t532 = t354 * t368;
t508 = t255 * t523 + t281 * t532;
t441 = -t363 * t248 + t508;
t565 = pkin(11) * t357;
t141 = -t264 * t565 + t441;
t384 = -t363 * (t255 * t358 + t281 * t354) - t368 * t248;
t527 = t357 * t261;
t142 = -pkin(11) * t527 + t384;
t249 = t353 * t261;
t204 = pkin(3) * t264 - pkin(11) * t249;
t537 = t353 * t362;
t345 = pkin(11) * t537;
t525 = t357 * t367;
t576 = pkin(3) * t525 - t345;
t588 = t576 * qJD(4) - t367 * t141 - t142 * t526 - t204 * t537;
t516 = t367 * t264;
t198 = t261 * t362 + t357 * t516;
t98 = -t142 * t353 + t357 * t204;
t586 = pkin(4) * t198 - pkin(12) * t199 - (pkin(4) * t362 - pkin(12) * t367) * t353 * qJD(4) + t98;
t545 = t264 * t353;
t585 = -pkin(12) * t545 + t588;
t584 = t226 * t362;
t497 = qJD(4) * t362;
t465 = t353 * t497;
t582 = t198 - t465;
t528 = t356 * t368;
t293 = (-t352 * t524 + t528) * t502;
t397 = t355 * (-t352 * t523 - t356 * t363);
t292 = qJD(1) * t397;
t454 = t354 * t473;
t391 = t292 * t357 + t353 * t454;
t515 = t367 * t368;
t519 = t362 * t363;
t410 = t357 * t515 - t519;
t581 = t293 * t367 + t362 * t391 - t358 * t468 - (t410 * qJD(4) + (-t357 * t519 + t515) * qJD(3)) * t354;
t499 = qJD(3) * t363;
t580 = t357 * t454 + (-t354 * t499 - t292) * t353;
t316 = -t366 * t357 + t361 * t537;
t538 = t353 * t361;
t507 = -qJD(5) * t316 - t264 * t538 + t366 * t589;
t536 = t353 * t366;
t317 = t357 * t361 + t362 * t536;
t506 = qJD(5) * t317 + t264 * t536 + t361 * t589;
t535 = t353 * t367;
t504 = pkin(3) * t526 + pkin(11) * t535;
t579 = t504 * qJD(4) - t362 * t141 + t367 * (t142 * t357 + t204 * t353);
t439 = -t354 * t472 + t358 * t501;
t418 = qJD(3) + t439;
t398 = t418 * t353;
t289 = t367 * t398;
t179 = -t261 * t525 + t264 * t362 - t289;
t176 = qJD(5) + t179;
t381 = t398 + t527;
t181 = t362 * t381 + t516;
t385 = t357 * t418 - t249;
t383 = -qJD(4) - t385;
t215 = t366 * t383;
t121 = t181 * t361 + t215;
t120 = qJD(6) + t121;
t478 = t356 * t523;
t539 = t352 * t363;
t415 = t478 - t539;
t485 = qJDD(1) * t368;
t488 = qJD(1) * qJD(3);
t208 = -t355 * (qJDD(1) * t415 - t414 * t488) + (t363 * t488 - t485) * t534;
t553 = pkin(4) * t545 + t579;
t350 = t355 ^ 2;
t578 = t350 * (t352 ^ 2 + t356 ^ 2);
t517 = t363 * t367;
t518 = t362 * t368;
t409 = t357 * t518 + t517;
t509 = -t293 * t362 + t367 * t391 + t358 * t465 + (t409 * qJD(4) + (t357 * t517 + t518) * qJD(3)) * t354;
t303 = pkin(12) * t357 + t504;
t304 = (-pkin(4) * t367 - pkin(12) * t362 - pkin(3)) * t353;
t505 = t366 * t303 + t361 * t304;
t492 = qJD(5) * t366;
t494 = qJD(5) * t361;
t575 = t303 * t494 - t304 * t492 + t361 * t586 - t585 * t366;
t487 = qJDD(1) * t356;
t463 = t355 * t487;
t486 = qJDD(1) * t359;
t408 = -t354 * t463 + t358 * t486 + qJDD(3);
t182 = -t208 * t353 - t357 * t408 - qJDD(4);
t482 = pkin(1) * t486;
t338 = t356 * t482;
t489 = qJD(1) * qJD(2);
t464 = t355 * t489;
t450 = t352 * t464;
t238 = qJDD(1) * t389 + t338 - t450;
t276 = qJDD(1) * t295 + qJDD(2);
t195 = -t238 * t354 + t358 * t276;
t456 = t355 * t478;
t498 = qJD(3) * t368;
t470 = t354 * t498;
t207 = -qJD(3) * t451 + qJDD(1) * t479 + t456 * t488 + t463 * t524 + t470 * t501 + t485 * t540;
t566 = pkin(11) * t353;
t102 = pkin(3) * t208 - t207 * t566 + t195;
t115 = pkin(11) * t381 - t384;
t117 = pkin(3) * t418 + t141;
t211 = -t255 * t354 + t358 * t281;
t156 = -pkin(3) * t261 - pkin(11) * t545 + t211;
t466 = t357 * t496;
t286 = qJ(2) * t463 + t352 * t482 + t356 * t464;
t399 = t412 * pkin(10);
t237 = qJDD(1) * t399 + t286;
t469 = t358 * t498;
t428 = t368 * t237 + t238 * t524 + t255 * t469 + t276 * t533 + t281 * t470;
t387 = -t248 * t499 + t428;
t394 = t408 * t353;
t76 = (-t208 * t357 + t394) * pkin(11) + t387;
t442 = -t363 * t237 + t238 * t523 + t276 * t532;
t372 = qJD(3) * t384 + t442;
t77 = pkin(3) * t408 - t207 * t565 + t372;
t390 = -t102 * t537 + t115 * t497 - t117 * t466 - t156 * t468 - t367 * t76 - t77 * t526;
t15 = -pkin(12) * t182 - t390;
t45 = t357 * t102 - t353 * t77;
t84 = qJD(4) * t289 + t367 * t207 - t208 * t526 + t261 * t466 - t264 * t497 + t362 * t394;
t443 = t362 * t207 + t208 * t525 - t367 * t394;
t85 = qJD(4) * t181 + t443;
t23 = pkin(4) * t85 - pkin(12) * t84 + t45;
t56 = t367 * t115 + t117 * t526 + t156 * t537;
t47 = -pkin(12) * t383 + t56;
t79 = -t117 * t353 + t357 * t156;
t53 = pkin(4) * t179 - pkin(12) * t181 + t79;
t27 = t361 * t53 + t366 * t47;
t6 = -qJD(5) * t27 - t15 * t361 + t366 * t23;
t50 = -qJD(5) * t215 - t181 * t494 - t361 * t182 + t366 * t84;
t83 = qJDD(5) + t85;
t123 = t366 * t181 - t361 * t383;
t88 = t123 * t365 + t176 * t360;
t25 = qJD(6) * t88 + t360 * t50 - t365 * t83;
t55 = -t362 * t115 + t367 * (t117 * t357 + t156 * t353);
t4 = -pkin(5) * t83 - t6;
t477 = t359 * t532;
t269 = t355 * t539 - t456 - t477;
t411 = t354 * t531 - t358 * t359;
t395 = t411 * t353;
t380 = -t269 * t357 - t395;
t187 = t270 * t367 + t362 * t380;
t222 = -t269 * t353 + t357 * t411;
t143 = t187 * t361 + t222 * t366;
t522 = t359 * t364;
t313 = -t352 * t522 + t356 * t369;
t413 = -t352 * t369 - t356 * t522;
t530 = t355 * t364;
t376 = t354 * t530 + t358 * t413;
t227 = -t313 * t363 + t368 * t376;
t228 = t313 * t368 + t363 * t376;
t377 = -t354 * t413 + t358 * t530;
t373 = t377 * t353;
t154 = t228 * t367 + (t227 * t357 + t373) * t362;
t192 = -t227 * t353 + t357 * t377;
t96 = -t154 * t361 + t192 * t366;
t405 = g(1) * t96 + g(2) * t592 - g(3) * t143;
t574 = t120 * (pkin(5) * t123 + pkin(13) * t120) + t4 + t405;
t332 = -pkin(5) * t366 - pkin(13) * t361 - pkin(4);
t51 = qJD(5) * t123 + t366 * t182 + t361 * t84;
t49 = qJDD(6) + t51;
t573 = t120 * (-t56 + t176 * (pkin(5) * t361 - pkin(13) * t366)) + t332 * t49;
t567 = pkin(1) * t359;
t315 = qJ(2) * t531 + t352 * t567;
t266 = t399 + t315;
t254 = t368 * t266;
t344 = t356 * t567;
t271 = t344 + t389;
t474 = t271 * t524 + t295 * t533 + t254;
t140 = pkin(11) * t380 + t474;
t440 = -t363 * t266 + t271 * t523 + t295 * t532;
t145 = -pkin(3) * t411 - t270 * t565 + t440;
t216 = -t271 * t354 + t358 * t295;
t163 = pkin(3) * t269 - t270 * t566 + t216;
t572 = -t362 * t140 + t367 * (t145 * t357 + t163 * t353);
t263 = t270 * qJD(3);
t500 = qJD(2) * t355;
t471 = t352 * t500;
t375 = t271 * t469 + t295 * t470 + t500 * t528 + (-qJD(3) * t266 - t358 * t471) * t363;
t129 = -t263 * t565 + t375;
t262 = (t355 * t415 + t477) * qJD(3);
t371 = qJD(2) * t397 + (-t254 + (-t271 * t358 - t295 * t354) * t363) * qJD(3);
t130 = -t262 * t565 + t371;
t453 = t354 * t471;
t193 = pkin(3) * t263 - t262 * t566 + t453;
t467 = t357 * t497;
t570 = (t130 * t357 + t193 * t353) * t367 - t362 * t129 - t140 * t496 - t145 * t467 - t163 * t465;
t386 = t367 * t129 + t130 * t526 - t140 * t497 + t145 * t466 + t163 * t468 + t193 * t537;
t546 = t263 * t353;
t32 = pkin(12) * t546 + t386;
t476 = t367 * t140 + t145 * t526 + t163 * t537;
t59 = -pkin(12) * t222 + t476;
t544 = t270 * t362;
t186 = t269 * t525 + t367 * t395 + t544;
t89 = -t145 * t353 + t357 * t163;
t62 = pkin(4) * t186 - pkin(12) * t187 + t89;
t430 = t361 * t62 + t366 * t59;
t124 = qJD(4) * t187 + t262 * t362 + t263 * t525;
t125 = -t263 * t526 + t262 * t367 + (t367 * t380 - t544) * qJD(4);
t90 = -t130 * t353 + t357 * t193;
t44 = pkin(4) * t124 - pkin(12) * t125 + t90;
t569 = -qJD(5) * t430 - t32 * t361 + t366 * t44;
t5 = t366 * t15 + t361 * t23 - t47 * t494 + t53 * t492;
t3 = pkin(13) * t83 + t5;
t20 = pkin(13) * t176 + t27;
t46 = pkin(4) * t383 - t55;
t30 = t121 * pkin(5) - t123 * pkin(13) + t46;
t434 = t20 * t360 - t30 * t365;
t18 = t102 * t535 - t115 * t496 - t117 * t467 - t156 * t465 - t362 * t76 + t77 * t525;
t16 = pkin(4) * t182 - t18;
t8 = pkin(5) * t51 - pkin(13) * t50 + t16;
t1 = -t434 * qJD(6) + t365 * t3 + t360 * t8;
t564 = g(2) * t364;
t563 = g(2) * t369;
t561 = pkin(12) * qJD(5);
t86 = t123 * t360 - t365 * t176;
t560 = t120 * t86;
t559 = t120 * t88;
t490 = qJD(6) * t365;
t491 = qJD(6) * t360;
t24 = -t123 * t491 + t176 * t490 + t360 * t83 + t365 * t50;
t558 = t24 * t360;
t556 = t360 * t49;
t555 = t365 * t49;
t554 = t582 * pkin(5) + t505 * qJD(5) + t585 * t361 + t586 * t366;
t106 = pkin(4) * t181 + pkin(12) * t179;
t551 = t361 * t106 + t366 * t55;
t550 = pkin(1) * qJDD(1);
t549 = t121 * t176;
t548 = t123 * t176;
t547 = t179 * t366;
t370 = qJD(1) ^ 2;
t520 = t359 * t370;
t274 = t354 * t409 + t358 * t537;
t310 = -t353 * t532 + t357 * t358;
t229 = t274 * t361 - t310 * t366;
t513 = qJD(5) * t229 + t361 * t580 + t366 * t581;
t230 = t274 * t366 + t310 * t361;
t512 = qJD(5) * t230 - t361 * t581 + t366 * t580;
t282 = t317 * t360 + t365 * t535;
t511 = -qJD(6) * t282 - t360 * t582 + t365 * t507;
t481 = t360 * t535;
t510 = -qJD(6) * t481 + t317 * t490 + t360 * t507 + t365 * t582;
t495 = qJD(5) * t360;
t493 = qJD(5) * t365;
t458 = t120 * t365;
t457 = t176 * t366;
t448 = g(1) * t369 + t564;
t447 = g(1) * t364 - t563;
t302 = t345 + (-pkin(3) * t367 - pkin(4)) * t357;
t231 = pkin(5) * t316 - pkin(13) * t317 + t302;
t445 = pkin(13) * t582 - qJD(6) * t231 + t575;
t233 = -pkin(13) * t535 + t505;
t444 = -pkin(5) * t506 + pkin(13) * t507 + qJD(6) * t233 - t553;
t104 = t181 * t360 - t365 * t547;
t437 = t365 * t492 - t104;
t273 = -t354 * t410 - t358 * t535;
t436 = -qJD(6) * t273 + t513;
t435 = qJD(6) * t230 - t509;
t12 = t20 * t365 + t30 * t360;
t29 = pkin(13) * t186 + t430;
t144 = t187 * t366 - t222 * t361;
t58 = pkin(4) * t222 - t572;
t38 = pkin(5) * t143 - pkin(13) * t144 + t58;
t433 = t29 * t365 + t360 * t38;
t432 = -t29 * t360 + t365 * t38;
t26 = -t361 * t47 + t366 * t53;
t429 = -t361 * t59 + t366 * t62;
t92 = t144 * t365 + t186 * t360;
t91 = t144 * t360 - t186 * t365;
t421 = -t303 * t361 + t304 * t366;
t420 = (-qJ(2) * t473 + t340) * t352 - t306 * t356;
t341 = -t355 * t550 + qJDD(2);
t417 = -t341 * t355 + t350 * t550;
t407 = t366 * t32 + t361 * t44 + t62 * t492 - t494 * t59;
t406 = -pkin(12) * t83 + t176 * t46;
t149 = t225 * t525 + t367 * t543 - t584;
t153 = -t227 * t525 + t228 * t362 - t367 * t373;
t402 = g(1) * t153 + g(2) * t149 + g(3) * t186;
t401 = -g(1) * t154 + g(2) * t152 - g(3) * t187;
t393 = -t16 + t402;
t19 = -pkin(5) * t176 - t26;
t388 = -pkin(13) * t49 + (t19 + t26) * t120;
t2 = -qJD(6) * t12 - t360 * t3 + t365 * t8;
t382 = pkin(12) * qJD(6) * t120 - t402;
t379 = t353 * t383;
t378 = qJD(4) * t383;
t33 = -pkin(4) * t546 - t570;
t374 = (pkin(13) * t181 - qJD(6) * t332 + t551) * t120 + t401;
t314 = -qJ(2) * t540 + t344;
t285 = t338 + (-qJ(2) * qJDD(1) - t489) * t540;
t283 = t317 * t365 - t481;
t232 = pkin(5) * t535 - t421;
t213 = -t269 * t367 - t270 * t526;
t212 = -t269 * t362 + t270 * t525;
t173 = t213 * t366 + t270 * t538;
t171 = t227 * t367 - t228 * t526;
t170 = t227 * t362 + t228 * t525;
t169 = -t225 * t367 + t226 * t526;
t168 = -t225 * t362 - t226 * t525;
t151 = -t367 * t423 + t584;
t119 = t171 * t366 + t228 * t538;
t118 = t169 * t366 - t226 * t538;
t103 = -t365 * t181 - t360 * t547;
t97 = t154 * t366 + t192 * t361;
t71 = -qJD(5) * t143 + t125 * t366 + t263 * t538;
t70 = qJD(5) * t144 + t125 * t361 - t263 * t536;
t67 = t153 * t360 + t365 * t97;
t66 = t153 * t365 - t360 * t97;
t40 = -qJD(6) * t91 + t124 * t360 + t365 * t71;
t39 = qJD(6) * t92 - t124 * t365 + t360 * t71;
t36 = -pkin(5) * t181 - t106 * t366 + t361 * t55;
t28 = -pkin(5) * t186 - t429;
t13 = pkin(5) * t70 - pkin(13) * t71 + t33;
t10 = -pkin(5) * t124 - t569;
t9 = pkin(13) * t124 + t407;
t7 = [qJDD(1), t447, t448, g(1) * t312 - g(2) * t313 + t417 * t356 + (qJDD(1) * t314 + t285 - t450) * t359, -g(1) * t311 + (-t417 + t563) * t352 + (-t315 * qJDD(1) - t286 + (-t464 + t564) * t356) * t359, t489 * t578 + (-t285 * t352 + t286 * t356 + (-t314 * t352 + t315 * t356) * qJDD(1) - t448) * t355, t285 * t314 + t286 * t315 + t447 * pkin(1) + (-t341 * pkin(1) - qJ(2) * t448 - qJD(2) * t420) * t355, t207 * t270 + t262 * t264, -t207 * t269 - t208 * t270 + t261 * t262 - t263 * t264, -t207 * t411 + t262 * t418 + t270 * t408, t208 * t411 - t263 * t418 - t269 * t408, -t408 * t411, -g(1) * t226 - g(2) * t228 + t195 * t269 + t216 * t208 + t211 * t263 - t261 * t453 + t371 * t418 - t372 * t411 + t408 * t440, -g(1) * t225 - g(2) * t227 + t195 * t270 + t216 * t207 + t211 * t262 + t264 * t453 - t375 * t418 + t387 * t411 - t408 * t474, t125 * t181 + t187 * t84, -t124 * t181 - t125 * t179 - t186 * t84 - t187 * t85, -t125 * t383 + t181 * t546 - t182 * t187 - t222 * t84, t124 * t383 - t179 * t546 + t182 * t186 + t222 * t85, t182 * t222 - t263 * t379, -g(1) * t152 - g(2) * t154 + t79 * t124 + t90 * t179 - t18 * t222 - t182 * t572 + t45 * t186 - t383 * t570 + t55 * t546 + t89 * t85, g(1) * t151 + g(2) * t153 + t79 * t125 + t90 * t181 + t182 * t476 + t45 * t187 - t222 * t390 + t383 * t386 - t546 * t56 + t89 * t84, t123 * t71 + t144 * t50, -t121 * t71 - t123 * t70 - t143 * t50 - t144 * t51, t123 * t124 + t144 * t83 + t176 * t71 + t186 * t50, -t121 * t124 - t143 * t83 - t176 * t70 - t186 * t51, t124 * t176 + t186 * t83, -g(1) * t95 - g(2) * t97 + t33 * t121 + t26 * t124 + t16 * t143 + t176 * t569 + t6 * t186 + t429 * t83 + t46 * t70 + t58 * t51, g(1) * t592 - g(2) * t96 + t33 * t123 - t27 * t124 + t16 * t144 - t407 * t176 - t5 * t186 - t430 * t83 + t46 * t71 + t58 * t50, t24 * t92 + t40 * t88, -t24 * t91 - t25 * t92 - t39 * t88 - t40 * t86, t120 * t40 + t143 * t24 + t49 * t92 + t70 * t88, -t120 * t39 - t143 * t25 - t49 * t91 - t70 * t86, t120 * t70 + t143 * t49 (-qJD(6) * t433 + t13 * t365 - t360 * t9) * t120 + t432 * t49 + t2 * t143 - t434 * t70 + t10 * t86 + t28 * t25 + t4 * t91 + t19 * t39 - g(1) * (t151 * t360 + t593) - g(2) * t67 -(qJD(6) * t432 + t13 * t360 + t365 * t9) * t120 - t433 * t49 - t1 * t143 - t12 * t70 + t10 * t88 + t28 * t24 + t4 * t92 + t19 * t40 - g(1) * (t151 * t365 - t594) - g(2) * t66; 0, 0, 0 (t352 * t520 - t487) * t355 (qJDD(1) * t352 + t356 * t520) * t355, -t370 * t578, -g(3) * t359 + qJDD(2) + (qJD(1) * t420 - t447 - t550) * t355, 0, 0, 0, 0, 0, t358 * t208 - t292 * t418 + (t261 * t473 + t368 * t408 - t418 * t499) * t354, t358 * t207 + t293 * t418 + (-t264 * t473 - t363 * t408 - t418 * t498) * t354, 0, 0, 0, 0, 0, -t179 * t580 + t273 * t182 + t310 * t85 + t383 * t509, -t181 * t580 + t274 * t182 + t310 * t84 - t383 * t581, 0, 0, 0, 0, 0, t121 * t509 - t176 * t512 - t229 * t83 + t273 * t51, t123 * t509 + t176 * t513 - t230 * t83 + t273 * t50, 0, 0, 0, 0, 0 (-t230 * t360 + t273 * t365) * t49 + t229 * t25 + t512 * t86 + (t360 * t436 - t365 * t435) * t120 -(t230 * t365 + t273 * t360) * t49 + t229 * t24 + t512 * t88 + (t360 * t435 + t365 * t436) * t120; 0, 0, 0, 0, 0, 0, 0, -t264 * t261, -t261 ^ 2 + t264 ^ 2, -t261 * t418 + t207, t418 * t264 - t208, t408, -g(1) * t227 + g(2) * t225 + g(3) * t269 - t211 * t264 - t384 * t439 + t442, g(1) * t228 - g(2) * t226 + g(3) * t270 + qJD(3) * t508 - t211 * t261 + t439 * t441 - t428, t181 * t589 + t84 * t537, t179 * t199 + t181 * t198 + (-t362 * t85 + t367 * t84 + (-t179 * t367 - t181 * t362) * qJD(4)) * t353, t357 * t84 + t383 * t199 + (-t264 * t181 - t182 * t362 - t367 * t378) * t353, -t357 * t85 - t383 * t198 + (t264 * t179 - t182 * t367 + t362 * t378) * t353, -t182 * t357 + t264 * t379, -t353 * pkin(3) * t85 - g(1) * t171 - g(2) * t169 - g(3) * t213 - t98 * t179 + t18 * t357 - t576 * t182 + t383 * t579 - t45 * t535 - t55 * t545 - t582 * t79, t504 * t182 + t390 * t357 - t98 * t181 - t79 * t199 + g(1) * t170 + g(2) * t168 + g(3) * t212 + (-pkin(3) * t84 + t264 * t56 + t362 * t45 + t496 * t79) * t353 + t588 * t383, t123 * t507 + t317 * t50, -t121 * t507 - t123 * t506 - t316 * t50 - t317 * t51, -t123 * t582 + t176 * t507 + t317 * t83 - t50 * t535, t121 * t582 - t176 * t506 - t316 * t83 + t51 * t535, -t176 * t582 - t535 * t83, t421 * t83 - t6 * t535 + t302 * t51 + t16 * t316 - g(1) * t119 - g(2) * t118 - g(3) * t173 + t506 * t46 - t582 * t26 + ((-qJD(5) * t303 - t586) * t366 + (-qJD(5) * t304 - t585) * t361) * t176 + t553 * t121, -t505 * t83 + t5 * t535 + t302 * t50 + t16 * t317 - g(1) * (-t171 * t361 + t228 * t536) - g(2) * (-t169 * t361 - t226 * t536) - g(3) * (-t213 * t361 + t270 * t536) + t507 * t46 + t582 * t27 + t575 * t176 + t553 * t123, t24 * t283 + t511 * t88, -t24 * t282 - t25 * t283 - t510 * t88 - t511 * t86, t120 * t511 + t24 * t316 + t283 * t49 + t506 * t88, -t120 * t510 - t25 * t316 - t282 * t49 - t506 * t86, t120 * t506 + t316 * t49 (t231 * t365 - t233 * t360) * t49 + t2 * t316 + t232 * t25 + t4 * t282 - g(1) * (t119 * t365 + t170 * t360) - g(2) * (t118 * t365 + t168 * t360) - g(3) * (t173 * t365 + t212 * t360) + t554 * t86 + t510 * t19 + (t360 * t445 - t365 * t444) * t120 - t506 * t434 -(t231 * t360 + t233 * t365) * t49 - t1 * t316 + t232 * t24 + t4 * t283 - g(1) * (-t119 * t360 + t170 * t365) - g(2) * (-t118 * t360 + t168 * t365) - g(3) * (-t173 * t360 + t212 * t365) + t554 * t88 + t511 * t19 + (t360 * t444 + t365 * t445) * t120 - t506 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179 * t181, -t179 ^ 2 + t181 ^ 2, -t179 * t383 + t84, t385 * t181 - t443, -t182, -t79 * t181 - t383 * t56 + t18 + t402, t79 * t179 - t383 * t55 + t390 - t401, t123 * t457 + t361 * t50 (t50 - t549) * t366 + (-t51 - t548) * t361, -t123 * t181 + t176 * t457 + t361 * t83, -t176 ^ 2 * t361 + t121 * t181 + t366 * t83, -t176 * t181, -pkin(4) * t51 - t56 * t121 - t26 * t181 + (t55 * t176 + t406) * t361 + ((-t106 - t561) * t176 + t393) * t366, -pkin(4) * t50 + t551 * t176 + t27 * t181 - t56 * t123 + t406 * t366 + (t176 * t561 - t393) * t361, t24 * t361 * t365 + (-t361 * t491 + t437) * t88, t103 * t88 + t104 * t86 + (-t360 * t88 - t365 * t86) * t492 + (-t558 - t25 * t365 + (t360 * t86 - t365 * t88) * qJD(6)) * t361, -t24 * t366 + t437 * t120 + (-t120 * t491 + t176 * t88 + t555) * t361, t25 * t366 + (-t360 * t492 + t103) * t120 + (-t120 * t490 - t176 * t86 - t556) * t361, t120 * t176 * t361 - t366 * t49, -t19 * t103 - t36 * t86 + t573 * t365 + t374 * t360 + (t19 * t495 - t2 + (qJD(5) * t86 - t556) * pkin(12) - t382 * t365) * t366 + (t19 * t490 + t4 * t360 - t176 * t434 + (t120 * t495 + t25) * pkin(12)) * t361, -t19 * t104 - t36 * t88 - t573 * t360 + t374 * t365 + (t19 * t493 + t1 + (qJD(5) * t88 - t555) * pkin(12) + t382 * t360) * t366 + (-t19 * t491 + t4 * t365 - t176 * t12 + (t120 * t493 + t24) * pkin(12)) * t361; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123 * t121, -t121 ^ 2 + t123 ^ 2, t50 + t549, -t51 + t548, t83, -t123 * t46 + t176 * t27 - t405 + t6, g(1) * t97 - g(2) * t95 + g(3) * t144 + t121 * t46 + t176 * t26 - t5, t458 * t88 + t558 (t24 - t560) * t365 + (-t25 - t559) * t360, t120 * t458 - t123 * t88 + t556, -t120 ^ 2 * t360 + t123 * t86 + t555, -t120 * t123, -pkin(5) * t25 + t123 * t434 - t27 * t86 + t388 * t360 - t365 * t574, -pkin(5) * t24 + t12 * t123 - t27 * t88 + t360 * t574 + t388 * t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88 * t86, -t86 ^ 2 + t88 ^ 2, t24 + t560, -t25 + t559, t49, t12 * t120 - t19 * t88 - g(1) * t66 - g(2) * (t149 * t365 + t594) + g(3) * t91 + t2, -t434 * t120 + t19 * t86 + g(1) * t67 - g(2) * (-t149 * t360 + t593) + g(3) * t92 - t1;];
tau_reg  = t7;
