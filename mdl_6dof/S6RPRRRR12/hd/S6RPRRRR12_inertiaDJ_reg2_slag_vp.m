% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRR12_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR12_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR12_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RPRRRR12_inertiaDJ_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:00:43
% EndTime: 2019-03-09 08:01:40
% DurationCPUTime: 25.02s
% Computational Cost: add. (45469->738), mult. (136970->1328), div. (0->0), fcn. (149464->16), ass. (0->300)
t131 = sin(pkin(8));
t133 = cos(pkin(14));
t132 = sin(pkin(6));
t345 = sin(pkin(7));
t293 = t132 * t345;
t347 = cos(pkin(7));
t348 = cos(pkin(6));
t233 = t133 * t293 - t347 * t348;
t130 = sin(pkin(14));
t268 = t348 * t345;
t292 = t133 * t347;
t306 = pkin(1) * t348;
t339 = t132 * t133;
t176 = t130 * t306 + qJ(2) * t339 + (t132 * t292 + t268) * pkin(10);
t371 = sin(qJ(3));
t372 = cos(qJ(3));
t217 = pkin(2) * t348 + t133 * t306;
t343 = t130 * t132;
t186 = (-pkin(10) * t347 - qJ(2)) * t343 + t217;
t214 = t132 * (-pkin(10) * t130 * t345 - pkin(2) * t133 - pkin(1));
t394 = t186 * t347 + t345 * t214;
t377 = t371 * t176 - t394 * t372;
t161 = -pkin(3) * t233 - t377;
t227 = t371 * t268;
t256 = t371 * t292;
t177 = t132 * (t130 * t372 + t256) + t227;
t175 = pkin(11) * t177;
t346 = cos(pkin(8));
t156 = t175 * t346 - t161;
t228 = t372 * t268;
t257 = t372 * t292;
t179 = t132 * (-t130 * t371 + t257) + t228;
t162 = -pkin(3) * t179 - t186 * t345 + t214 * t347;
t160 = -t131 * t175 + t162;
t395 = -t131 * t160 + t156 * t346;
t166 = -t131 * t233 + t179 * t346;
t267 = t346 * t345;
t393 = t347 * t131 + t372 * t267;
t335 = qJD(2) * t132;
t255 = t130 * t347 * t335;
t305 = t133 * t335;
t48 = t372 * t176 + t394 * t371;
t43 = -qJD(3) * t48 - t255 * t372 - t305 * t371;
t334 = qJD(3) * t132;
t304 = t130 * t334;
t308 = qJD(3) * t227 + t256 * t334 + t372 * t304;
t392 = -0.2e1 * t308;
t139 = cos(qJ(4));
t390 = t139 * t166;
t136 = sin(qJ(4));
t389 = t177 * t136;
t206 = t179 * t131 + t233 * t346;
t155 = t166 * pkin(11) + t48;
t23 = -t136 * t155 - t139 * t395;
t21 = pkin(4) * t206 - t23;
t135 = sin(qJ(5));
t138 = cos(qJ(5));
t54 = t136 * t166 + t139 * t177;
t39 = t135 * t54 + t138 * t206;
t40 = -t135 * t206 + t54 * t138;
t144 = t39 * pkin(5) - t40 * pkin(13) + t21;
t183 = qJD(3) * (t132 * t257 + t228) - t371 * t304;
t378 = t166 * qJD(4) + t183;
t249 = t308 * t346;
t383 = qJD(4) * t177 + t249;
t36 = t378 * t136 + t383 * t139;
t196 = t206 * pkin(12);
t24 = -t136 * t395 + t139 * t155;
t146 = -t196 + t24;
t181 = pkin(11) * t183;
t151 = t181 * t346 - t43;
t254 = t130 * qJD(2) * t293;
t203 = pkin(3) * t308 + t254;
t165 = -t131 * t181 + t203;
t37 = -t383 * t136 + t378 * t139;
t386 = -t36 * pkin(4) + t37 * pkin(12) + qJD(5) * t146 - t131 * t151 - t165 * t346;
t53 = t389 - t390;
t280 = t53 * pkin(4) - t54 * pkin(12);
t148 = -t131 * t156 - t160 * t346 - t280;
t42 = qJD(3) * t377 + t371 * t255 - t372 * t305;
t379 = pkin(11) * t249 + t395 * qJD(4) + t42;
t380 = qJD(4) * t155 - t131 * t165 + t151 * t346;
t15 = t136 * t380 + t139 * t379;
t277 = t308 * t131;
t387 = -pkin(12) * t277 + qJD(5) * t148 + t15;
t5 = t386 * t135 + t387 * t138;
t388 = -t36 * pkin(13) - qJD(6) * t144 + t5;
t341 = t131 * t138;
t100 = t135 * t346 + t136 * t341;
t342 = t131 * t136;
t218 = -pkin(3) * t139 * t346 + pkin(11) * t342;
t95 = -pkin(4) * t346 + t218;
t310 = t135 * t342;
t99 = -t138 * t346 + t310;
t187 = t99 * pkin(5) - t100 * pkin(13) + t95;
t291 = t136 * t346;
t284 = pkin(3) * t291;
t216 = pkin(12) * t346 + t284;
t210 = qJD(5) * t216;
t96 = t218 * qJD(4);
t190 = -t135 * t210 - t138 * t96;
t273 = pkin(4) * t136 - pkin(12) * t139;
t307 = -pkin(12) * t136 - pkin(3);
t259 = pkin(4) * t139 - t307;
t369 = pkin(11) * t139;
t209 = t135 * t369 + t138 * t259;
t381 = t209 * qJD(5);
t384 = -(-t381 + (t136 * pkin(13) + t135 * t273) * qJD(4)) * t131 - t190 - qJD(6) * t187;
t275 = t345 * t371;
t252 = qJD(3) * t275;
t231 = t131 * t252;
t226 = t371 * t267;
t276 = t345 * t372;
t253 = qJD(3) * t276;
t83 = t136 * t275 - t393 * t139;
t66 = qJD(3) * t226 * t136 + qJD(4) * t83 - t139 * t253;
t207 = t135 * t231 - t138 * t66;
t84 = t393 * t136 + t139 * t275;
t98 = -t131 * t276 + t346 * t347;
t68 = t135 * t84 - t138 * t98;
t184 = -qJD(5) * t68 + t207;
t330 = qJD(5) * t135;
t332 = qJD(4) * t139;
t296 = t131 * t332;
t323 = t100 * qJD(5);
t85 = t135 * t296 + t323;
t245 = -t138 * t85 + t99 * t330;
t134 = sin(qJ(6));
t126 = t134 ^ 2;
t137 = cos(qJ(6));
t128 = t137 ^ 2;
t337 = t126 - t128;
t287 = qJD(6) * t337;
t230 = t135 * t259;
t382 = (t138 * t369 - t230) * qJD(5);
t328 = qJD(5) * t138;
t69 = t135 * t98 + t138 * t84;
t44 = qJD(5) * t69 - t135 * t66 - t138 * t231;
t349 = t44 * t135;
t376 = (t68 * t328 + t349) * pkin(12);
t118 = qJD(5) * t310;
t288 = t346 * qJD(5);
t221 = t288 + t296;
t375 = -t138 * t221 + t118;
t124 = t131 ^ 2;
t374 = t139 ^ 2;
t373 = 0.2e1 * t131;
t370 = pkin(11) * t135;
t368 = pkin(12) * t131;
t367 = pkin(12) * t135;
t366 = pkin(12) * t138;
t365 = t68 * t44;
t67 = (t136 * t276 + t139 * t226) * qJD(3) + t84 * qJD(4);
t364 = t83 * t67;
t340 = t131 * t139;
t315 = pkin(11) * t340;
t103 = t284 + t315;
t97 = t103 * qJD(4);
t363 = t83 * t97;
t13 = -t135 * t148 + t138 * t146;
t75 = -t131 * t230 + t138 * (t216 + t315);
t26 = -t54 * t330 + t135 * t277 + (-qJD(5) * t206 + t37) * t138;
t326 = qJD(6) * t134;
t19 = t134 * t36 - t40 * t326 + (qJD(6) * t53 + t26) * t137;
t362 = t134 * t19;
t33 = t134 * t40 - t53 * t137;
t361 = t134 * t33;
t333 = qJD(4) * t136;
t297 = t131 * t333;
t86 = t134 * t100 + t137 * t340;
t60 = qJD(6) * t86 - t134 * t297 + t137 * t375;
t360 = t134 * t60;
t359 = t134 * t86;
t358 = t135 * t26;
t34 = t134 * t53 + t137 * t40;
t18 = qJD(6) * t34 + t134 * t26 - t36 * t137;
t357 = t137 * t18;
t356 = t137 * t19;
t355 = t137 * t34;
t354 = t137 * t60;
t311 = t134 * t340;
t325 = qJD(6) * t137;
t61 = -qJD(6) * t311 + t100 * t325 - t134 * t375 - t137 * t297;
t353 = t137 * t61;
t87 = t100 * t137 - t311;
t352 = t137 * t87;
t25 = qJD(5) * t40 + t37 * t135 - t138 * t277;
t351 = t138 * t25;
t338 = t137 * t138;
t127 = t135 ^ 2;
t336 = -t138 ^ 2 + t127;
t331 = qJD(5) * t134;
t329 = qJD(5) * t137;
t327 = qJD(5) * t139;
t324 = qJD(6) * t138;
t322 = 0.2e1 * t39 * t25;
t321 = 0.2e1 * t53 * t36;
t320 = 0.2e1 * t99 * t85;
t319 = -0.2e1 * pkin(4) * qJD(5);
t318 = -0.2e1 * pkin(5) * qJD(6);
t317 = t134 * t366;
t316 = pkin(12) * t338;
t314 = pkin(12) * t330;
t313 = pkin(12) * t328;
t303 = t124 * t332;
t302 = t135 * t327;
t301 = t137 * t328;
t300 = t134 * t324;
t299 = t135 * t325;
t298 = t137 * t324;
t295 = t134 * t325;
t294 = t135 * t328;
t289 = qJD(4) * t346;
t286 = t336 * qJD(5);
t285 = 0.2e1 * t294;
t283 = t137 * t294;
t282 = t127 * t295;
t281 = t136 * t303;
t278 = t124 * t308;
t274 = t136 * t289;
t272 = -pkin(5) * t138 - pkin(13) * t135;
t271 = pkin(5) * t135 - pkin(13) * t138;
t11 = pkin(13) * t53 + t13;
t7 = -t134 * t11 + t137 * t144;
t8 = t137 * t11 + t134 * t144;
t270 = -t134 * t8 - t137 * t7;
t269 = t25 * t99 + t39 * t85;
t266 = -t134 * t34 - t137 * t33;
t71 = -pkin(13) * t340 + t75;
t45 = -t134 * t71 + t137 * t187;
t46 = t134 * t187 + t137 * t71;
t265 = -t134 * t46 - t137 * t45;
t55 = -t134 * t69 + t137 * t83;
t56 = t134 * t83 + t137 * t69;
t264 = -t134 * t56 - t137 * t55;
t263 = -t134 * t87 - t137 * t86;
t258 = pkin(4) - t272;
t229 = t137 * t258;
t92 = -t229 - t317;
t93 = -t134 * t258 + t316;
t262 = -t134 * t93 - t137 * t92;
t235 = qJD(4) * t273;
t57 = (-t135 * t235 + t381) * t131 - t190;
t191 = t135 * t96 - t138 * t210;
t58 = (t138 * t235 - t382) * t131 + t191;
t261 = -t58 * t135 - t57 * t138;
t260 = -0.2e1 * t348 * t335;
t10 = -t53 * pkin(5) + t135 * t146 + t138 * t148;
t6 = t387 * t135 - t386 * t138;
t4 = -t36 * pkin(5) - t6;
t251 = t10 * t325 + t134 * t4;
t250 = t10 * t326 - t137 * t4;
t248 = t330 * t39 - t351;
t247 = t135 * t36 + t328 * t53;
t246 = -t138 * t36 + t330 * t53;
t244 = t134 * t25 + t325 * t39;
t243 = -t137 * t25 + t326 * t39;
t242 = t134 * t44 + t325 * t68;
t241 = -t137 * t44 + t326 * t68;
t51 = (t382 + (-t136 * pkin(5) - t138 * t273) * qJD(4)) * t131 - t191;
t211 = t135 * t216;
t70 = t211 + (-t138 * t307 + (pkin(4) * t138 + pkin(5) + t370) * t139) * t131;
t240 = t134 * t51 + t325 * t70;
t239 = -t137 * t51 + t326 * t70;
t238 = t134 * t85 + t325 * t99;
t237 = -t137 * t85 + t326 * t99;
t236 = t271 * t134;
t234 = 0.2e1 * (t130 ^ 2 + t133 ^ 2) * t132 ^ 2 * qJD(2);
t232 = t124 * t252;
t224 = t135 * t333 - t138 * t327;
t223 = t135 * t329 + t300;
t222 = (-t139 * t36 + t333 * t53) * t131;
t16 = t136 * t379 - t139 * t380;
t14 = -pkin(4) * t277 - t16;
t141 = t25 * pkin(5) - t26 * pkin(13) + t14;
t1 = t11 * t326 - t134 * t141 + t388 * t137;
t2 = -t11 * t325 + t388 * t134 + t137 * t141;
t202 = qJD(6) * t270 - t1 * t137 - t134 * t2;
t29 = -t131 * t161 + t162 * t346;
t12 = -t135 * (t139 * t48 + t161 * t291 + t162 * t342 - t196) + t138 * (t280 + t29) - (t390 + (-t346 ^ 2 - t124) * t389) * t370;
t200 = -t135 * t6 - t138 * t5 + (-t12 * t138 - t13 * t135) * qJD(5);
t167 = pkin(3) * t274 + t85 * pkin(5) + pkin(11) * t296 + pkin(13) * t375;
t27 = -t134 * t167 + t384 * t137 + t71 * t326;
t28 = t384 * t134 + t137 * t167 - t71 * t325;
t199 = qJD(6) * t265 - t134 * t28 - t137 * t27;
t30 = -t134 * t67 - t137 * t184 - t325 * t83 + t326 * t69;
t31 = -t134 * t184 + t137 * t67 - t325 * t69 - t326 * t83;
t198 = qJD(6) * t264 - t134 * t31 - t137 * t30;
t72 = pkin(12) * t223 - qJD(5) * t236 + qJD(6) * t229;
t73 = -t93 * qJD(6) + (t134 * t367 + t137 * t271) * qJD(5);
t197 = qJD(6) * t262 - t134 * t73 - t137 * t72;
t195 = t131 * t206;
t194 = qJD(4) * t195;
t122 = -0.2e1 * t294;
t109 = -0.2e1 * t281;
t88 = -t134 * t301 + t135 * t287;
t74 = -t131 * t209 - t211;
t62 = -t345 * (-qJ(2) * t343 + t217) + t347 * (-t132 * pkin(1) - pkin(2) * t339);
t32 = -t43 * t131 + t346 * t203;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130 * t260, t133 * t260, t234, qJ(2) * t234, 0.2e1 * t177 * t183, -0.2e1 * t177 * t308 + 0.2e1 * t179 * t183, -0.2e1 * t233 * t183, t179 * t392, 0.2e1 * t233 * t308, 0, -0.2e1 * t179 * t254 - 0.2e1 * t43 * t233 + 0.2e1 * t62 * t308, 0.2e1 * t177 * t254 + 0.2e1 * t183 * t62 - 0.2e1 * t233 * t42, -0.2e1 * t177 * t43 - 0.2e1 * t179 * t42 + 0.2e1 * t183 * t377 - 0.2e1 * t308 * t48, 0.2e1 * t254 * t62 - 0.2e1 * t377 * t43 - 0.2e1 * t48 * t42, 0.2e1 * t54 * t37, -0.2e1 * t36 * t54 - 0.2e1 * t37 * t53, -0.2e1 * t206 * t37 + 0.2e1 * t277 * t54, t321, 0.2e1 * t206 * t36 - 0.2e1 * t277 * t53, t195 * t392, -0.2e1 * t16 * t206 + 0.2e1 * t23 * t277 + 0.2e1 * t29 * t36 + 0.2e1 * t32 * t53, -0.2e1 * t15 * t206 - 0.2e1 * t24 * t277 + 0.2e1 * t29 * t37 + 0.2e1 * t32 * t54, 0.2e1 * t15 * t53 - 0.2e1 * t16 * t54 - 0.2e1 * t23 * t37 - 0.2e1 * t24 * t36, -0.2e1 * t15 * t24 + 0.2e1 * t16 * t23 + 0.2e1 * t29 * t32, 0.2e1 * t40 * t26, -0.2e1 * t25 * t40 - 0.2e1 * t26 * t39, 0.2e1 * t26 * t53 + 0.2e1 * t36 * t40, t322, -0.2e1 * t25 * t53 - 0.2e1 * t36 * t39, t321, 0.2e1 * t12 * t36 + 0.2e1 * t14 * t39 + 0.2e1 * t21 * t25 + 0.2e1 * t53 * t6, -0.2e1 * t13 * t36 + 0.2e1 * t14 * t40 + 0.2e1 * t21 * t26 + 0.2e1 * t5 * t53, -0.2e1 * t12 * t26 - 0.2e1 * t13 * t25 + 0.2e1 * t39 * t5 - 0.2e1 * t40 * t6, 0.2e1 * t12 * t6 - 0.2e1 * t13 * t5 + 0.2e1 * t14 * t21, 0.2e1 * t34 * t19, -0.2e1 * t18 * t34 - 0.2e1 * t19 * t33, 0.2e1 * t19 * t39 + 0.2e1 * t25 * t34, 0.2e1 * t33 * t18, -0.2e1 * t18 * t39 - 0.2e1 * t25 * t33, t322, 0.2e1 * t10 * t18 + 0.2e1 * t2 * t39 + 0.2e1 * t25 * t7 + 0.2e1 * t33 * t4, 0.2e1 * t1 * t39 + 0.2e1 * t10 * t19 - 0.2e1 * t25 * t8 + 0.2e1 * t34 * t4, 0.2e1 * t1 * t33 - 0.2e1 * t18 * t8 - 0.2e1 * t19 * t7 - 0.2e1 * t2 * t34, -0.2e1 * t1 * t8 + 0.2e1 * t10 * t4 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t233 * t252 + t308 * t347, t183 * t347 + t233 * t253, t177 * t252 + t179 * t253 - t183 * t276 - t275 * t308, t347 * t254 - t42 * t275 + t43 * t276 + (t275 * t377 + t276 * t48) * qJD(3), 0, 0, 0, 0, 0, 0, t98 * t36 + t67 * t206 + (t252 * t53 - t308 * t83) * t131, t98 * t37 - t66 * t206 + (t252 * t54 - t308 * t84) * t131, -t36 * t84 + t37 * t83 + t53 * t66 + t54 * t67, -t15 * t84 - t16 * t83 - t23 * t67 + t231 * t29 - t24 * t66 + t32 * t98, 0, 0, 0, 0, 0, 0, t25 * t83 - t36 * t68 + t39 * t67 - t44 * t53, -t184 * t53 + t83 * t26 - t69 * t36 + t67 * t40, -t184 * t39 - t69 * t25 + t68 * t26 + t44 * t40, -t12 * t44 + t13 * t184 + t14 * t83 + t21 * t67 - t5 * t69 - t6 * t68, 0, 0, 0, 0, 0, 0, t18 * t68 + t25 * t55 + t31 * t39 + t33 * t44, t19 * t68 - t25 * t56 + t30 * t39 + t34 * t44, -t18 * t56 - t19 * t55 + t30 * t33 - t31 * t34, -t1 * t56 + t10 * t44 + t2 * t55 - t30 * t8 + t31 * t7 + t4 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t231 * t98 - 0.2e1 * t84 * t66 + 0.2e1 * t364, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t184 * t69 + 0.2e1 * t364 + 0.2e1 * t365, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t30 * t56 + 0.2e1 * t31 * t55 + 0.2e1 * t365; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183, 0, -t308, 0, t43, t42, 0, 0 (t136 * t37 + t332 * t54) * t131 (-t136 * t36 + t139 * t37 + (-t136 * t54 - t139 * t53) * qJD(4)) * t131, t136 * t278 - t139 * t194 + t346 * t37, t222, t136 * t194 + t139 * t278 - t346 * t36, t131 * t249, t97 * t206 + t16 * t346 + (-pkin(3) * t36 - t32 * t139 - t218 * t308 + t29 * t333) * t131, -t96 * t206 + t15 * t346 + (-pkin(3) * t37 - t103 * t308 + t32 * t136 + t29 * t332) * t131, t218 * t37 - t103 * t36 + t96 * t53 + t97 * t54 + (-t136 * t16 - t139 * t15 + (-t136 * t24 - t139 * t23) * qJD(4)) * t131, -pkin(3) * t131 * t32 - t103 * t15 - t16 * t218 - t23 * t97 - t24 * t96, t26 * t100 - t375 * t40, -t100 * t25 - t26 * t99 + t375 * t39 - t40 * t85, t100 * t36 - t26 * t340 + t297 * t40 - t375 * t53, t269, -t99 * t36 - t85 * t53 + (t139 * t25 - t333 * t39) * t131, t222, t14 * t99 + t21 * t85 + t95 * t25 + t74 * t36 + t97 * t39 + t58 * t53 + (t12 * t333 - t139 * t6) * t131, t14 * t100 - t13 * t297 - t21 * t375 + t95 * t26 - t340 * t5 - t75 * t36 + t97 * t40 + t57 * t53, -t6 * t100 + t12 * t375 - t13 * t85 - t75 * t25 - t74 * t26 + t57 * t39 - t58 * t40 + t5 * t99, t12 * t58 - t13 * t57 + t14 * t95 + t21 * t97 - t5 * t75 + t6 * t74, t19 * t87 - t34 * t60, -t18 * t87 - t19 * t86 + t33 * t60 - t34 * t61, t19 * t99 + t25 * t87 + t34 * t85 - t39 * t60, t18 * t86 + t33 * t61, -t18 * t99 - t25 * t86 - t33 * t85 - t39 * t61, t269, t10 * t61 + t18 * t70 + t2 * t99 + t25 * t45 + t28 * t39 + t33 * t51 + t4 * t86 + t7 * t85, t1 * t99 - t10 * t60 + t19 * t70 - t25 * t46 + t27 * t39 + t34 * t51 + t4 * t87 - t8 * t85, t1 * t86 - t18 * t46 - t19 * t45 - t2 * t87 + t27 * t33 - t28 * t34 + t60 * t7 - t61 * t8, -t1 * t46 + t10 * t51 + t2 * t45 - t27 * t8 + t28 * t7 + t4 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t252, -t253, 0, 0, 0, 0, 0, 0, 0, 0, -t139 * t232 + t297 * t98 - t346 * t67, t136 * t232 + t296 * t98 + t346 * t66 (t136 * t67 - t139 * t66 + (-t136 * t84 + t139 * t83) * qJD(4)) * t131, -pkin(3) * t232 - t66 * t103 + t218 * t67 - t84 * t96 + t363, 0, 0, 0, 0, 0, 0, t67 * t99 + t83 * t85 + (t139 * t44 - t333 * t68) * t131, t67 * t100 + t184 * t340 - t297 * t69 - t375 * t83, t44 * t100 - t184 * t99 - t375 * t68 - t69 * t85, t184 * t75 - t44 * t74 - t69 * t57 - t68 * t58 + t67 * t95 + t363, 0, 0, 0, 0, 0, 0, t31 * t99 + t44 * t86 + t55 * t85 + t61 * t68, t30 * t99 + t44 * t87 - t56 * t85 - t60 * t68, t30 * t86 - t31 * t87 + t55 * t60 - t56 * t61, -t27 * t56 + t28 * t55 - t30 * t46 + t31 * t45 + t44 * t70 + t51 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t281, 0.2e1 * (-t136 ^ 2 + t374) * t124 * qJD(4), 0.2e1 * t289 * t340, t109, -0.2e1 * t131 * t274, 0, -0.2e1 * pkin(3) * t124 * t333 - 0.2e1 * t346 * t97, -0.2e1 * pkin(3) * t303 + 0.2e1 * t346 * t96 (t136 * t97 - t139 * t96 + (-t103 * t136 + t139 * t218) * qJD(4)) * t373, -0.2e1 * t103 * t96 + 0.2e1 * t218 * t97, -0.2e1 * t100 * t375, -0.2e1 * t100 * t85 + 0.2e1 * t375 * t99 (-(t138 * t288 - t118) * t139 + (t100 * t136 - t341 * t374) * qJD(4)) * t373, t320 (t139 * t85 - t333 * t99) * t373, t109, 0.2e1 * t95 * t85 + 0.2e1 * t97 * t99 + 0.2e1 * (-t139 * t58 + t333 * t74) * t131, 0.2e1 * t97 * t100 - 0.2e1 * t297 * t75 - 0.2e1 * t340 * t57 - 0.2e1 * t375 * t95, -0.2e1 * t58 * t100 + 0.2e1 * t375 * t74 + 0.2e1 * t57 * t99 - 0.2e1 * t75 * t85, -0.2e1 * t57 * t75 + 0.2e1 * t58 * t74 + 0.2e1 * t95 * t97, -0.2e1 * t87 * t60, 0.2e1 * t60 * t86 - 0.2e1 * t61 * t87, -0.2e1 * t60 * t99 + 0.2e1 * t85 * t87, 0.2e1 * t86 * t61, -0.2e1 * t61 * t99 - 0.2e1 * t85 * t86, t320, 0.2e1 * t28 * t99 + 0.2e1 * t45 * t85 + 0.2e1 * t51 * t86 + 0.2e1 * t61 * t70, 0.2e1 * t27 * t99 - 0.2e1 * t46 * t85 + 0.2e1 * t51 * t87 - 0.2e1 * t60 * t70, 0.2e1 * t27 * t86 - 0.2e1 * t28 * t87 + 0.2e1 * t45 * t60 - 0.2e1 * t46 * t61, -0.2e1 * t27 * t46 + 0.2e1 * t28 * t45 + 0.2e1 * t51 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, 0, -t36, t277, t16, t15, 0, 0, t328 * t40 + t358, -t135 * t25 + t138 * t26 + (-t135 * t40 - t138 * t39) * qJD(5), t247, t248, -t246, 0, -pkin(4) * t25 - pkin(12) * t247 - t138 * t14 + t21 * t330, -pkin(4) * t26 + pkin(12) * t246 + t135 * t14 + t21 * t328 (t358 - t351 + (t135 * t39 + t138 * t40) * qJD(5)) * pkin(12) + t200, -pkin(4) * t14 + pkin(12) * t200, t34 * t301 + (-t326 * t34 + t356) * t135, t266 * t328 + (-t362 - t357 + (-t355 + t361) * qJD(6)) * t135 (t329 * t39 - t19) * t138 + (qJD(5) * t34 - t243) * t135, t33 * t299 + (t135 * t18 + t328 * t33) * t134 (-t331 * t39 + t18) * t138 + (-qJD(5) * t33 - t244) * t135, t248, t25 * t92 + t39 * t73 + (-t2 + (pkin(12) * t33 + t10 * t134) * qJD(5)) * t138 + (pkin(12) * t18 + qJD(5) * t7 + t251) * t135, -t25 * t93 + t39 * t72 + (-t1 + (pkin(12) * t34 + t10 * t137) * qJD(5)) * t138 + (pkin(12) * t19 - qJD(5) * t8 - t250) * t135, -t18 * t93 - t19 * t92 + t33 * t72 - t34 * t73 + t270 * t328 + (t1 * t134 - t137 * t2 + (t134 * t7 - t137 * t8) * qJD(6)) * t135, -t1 * t93 + t2 * t92 + t7 * t73 - t72 * t8 + (t10 * t328 + t135 * t4) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t67, t66, 0, 0, 0, 0, 0, 0, 0, 0, -t138 * t67 + t330 * t83, t135 * t67 + t328 * t83, t138 * t207 - t330 * t69 + t349, -t67 * pkin(4) + t184 * t366 - t314 * t69 + t376, 0, 0, 0, 0, 0, 0 (t331 * t68 - t31) * t138 + (qJD(5) * t55 + t242) * t135 (t329 * t68 - t30) * t138 + (-qJD(5) * t56 - t241) * t135, t264 * t328 + (t134 * t30 - t137 * t31 + (t134 * t55 - t137 * t56) * qJD(6)) * t135, -t30 * t93 + t31 * t92 + t55 * t73 - t56 * t72 + t376; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, 0, -t297, 0, -t97, t96, 0, 0, -t118 * t135 + (t135 * t221 + t323) * t138, -t138 * t375 - t328 * t99 + (-t323 - t85) * t135, t224 * t131, t245 (t138 * t333 + t302) * t131, 0, -pkin(4) * t85 - t97 * t138 - t224 * t368 + t330 * t95, pkin(4) * t375 + t97 * t135 - t297 * t366 - t302 * t368 + t328 * t95, pkin(12) * t245 + t100 * t313 - t328 * t74 - t330 * t75 - t367 * t375 + t261, -pkin(4) * t97 + ((-t135 * t75 - t138 * t74) * qJD(5) + t261) * pkin(12), t87 * t301 + (-t326 * t87 - t354) * t135, t263 * t328 + (t360 - t353 + (-t352 + t359) * qJD(6)) * t135 (t329 * t99 + t60) * t138 + (qJD(5) * t87 - t237) * t135, t86 * t299 + (t135 * t61 + t328 * t86) * t134 (-t331 * t99 + t61) * t138 + (-qJD(5) * t86 - t238) * t135, t245, t73 * t99 + t85 * t92 + (-t28 + (pkin(12) * t86 + t134 * t70) * qJD(5)) * t138 + (pkin(12) * t61 + qJD(5) * t45 + t240) * t135, t72 * t99 - t85 * t93 + (-t27 + (pkin(12) * t87 + t137 * t70) * qJD(5)) * t138 + (-pkin(12) * t60 - qJD(5) * t46 - t239) * t135, t60 * t92 - t61 * t93 + t72 * t86 - t73 * t87 + t265 * t328 + (t134 * t27 - t137 * t28 + (t134 * t45 - t137 * t46) * qJD(6)) * t135, -t27 * t93 + t28 * t92 + t45 * t73 - t46 * t72 + (t135 * t51 + t328 * t70) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, -0.2e1 * t286, 0, t122, 0, 0, t135 * t319, t138 * t319, 0, 0, 0.2e1 * t128 * t294 - 0.2e1 * t282, 0.2e1 * t127 * t287 - 0.4e1 * t134 * t283, 0.2e1 * t135 * t300 + 0.2e1 * t329 * t336, 0.2e1 * t126 * t294 + 0.2e1 * t282, -0.2e1 * t134 * t286 + 0.2e1 * t135 * t298, t122, 0.2e1 * t92 * t330 - 0.2e1 * t138 * t73 + 0.2e1 * (t127 * t325 + t134 * t285) * pkin(12), -0.2e1 * t93 * t330 - 0.2e1 * t138 * t72 + 0.2e1 * (-t127 * t326 + 0.2e1 * t283) * pkin(12), 0.2e1 * t262 * t328 + 0.2e1 * (t134 * t72 - t137 * t73 + (t134 * t92 - t137 * t93) * qJD(6)) * t135, 0.2e1 * pkin(12) ^ 2 * t294 - 0.2e1 * t72 * t93 + 0.2e1 * t73 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, 0, -t25, t36, t6, t5, 0, 0, t325 * t34 + t362, qJD(6) * t266 - t134 * t18 + t356, t244, t326 * t33 - t357, -t243, 0, -pkin(5) * t18 - pkin(13) * t244 + t250, -pkin(5) * t19 + pkin(13) * t243 + t251 (t362 - t357 + (t355 + t361) * qJD(6)) * pkin(13) + t202, -pkin(5) * t4 + pkin(13) * t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, -t184, 0, 0, 0, 0, 0, 0, 0, 0, t241, t242, t198, -pkin(5) * t44 + pkin(13) * t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t375, 0, -t85, t297, t58, t57, 0, 0, t325 * t87 - t360, qJD(6) * t263 - t134 * t61 - t354, t238, t326 * t86 - t353, -t237, 0, -pkin(5) * t61 - pkin(13) * t238 + t239, pkin(5) * t60 + pkin(13) * t237 + t240 (-t360 - t353 + (t352 + t359) * qJD(6)) * pkin(13) + t199, -pkin(5) * t51 + pkin(13) * t199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t328, 0, -t330, 0, -t313, t314, 0, 0, -t88, -0.4e1 * t135 * t295 - t328 * t337, t134 * t330 - t298, t88, t223, 0 (pkin(13) * t338 + (-pkin(5) * t137 + pkin(12) * t134) * t135) * qJD(6) + (t134 * t272 - t316) * qJD(5) (t137 * t367 + t236) * qJD(6) + (t137 * t272 + t317) * qJD(5), t197, -pkin(5) * t313 + pkin(13) * t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t295, -0.2e1 * t287, 0, -0.2e1 * t295, 0, 0, t134 * t318, t137 * t318, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, -t18, t25, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, t30, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t60, 0, -t61, t85, t28, t27, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135 * t326 + t301, 0, -t134 * t328 - t299, t330, t73, t72, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t325, 0, -t326, 0, -pkin(13) * t325, pkin(13) * t326, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
