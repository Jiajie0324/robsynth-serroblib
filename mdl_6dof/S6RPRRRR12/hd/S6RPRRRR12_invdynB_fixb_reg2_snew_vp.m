% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPRRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 07:02
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPRRRR12_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR12_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR12_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR12_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR12_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RPRRRR12_invdynB_fixb_reg2_snew_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 06:47:04
% EndTime: 2019-05-06 06:52:55
% DurationCPUTime: 367.62s
% Computational Cost: add. (4477780->1466), mult. (14619377->2501), div. (0->0), fcn. (12916211->18), ass. (0->1063)
t1544 = sin(pkin(14));
t1547 = sin(pkin(6));
t1555 = sin(qJ(3));
t1560 = cos(qJ(3));
t1541 = t1547 ^ 2;
t1551 = cos(pkin(6));
t1543 = t1551 ^ 2;
t1548 = cos(pkin(14));
t1785 = -t1548 * pkin(1) - pkin(2) * t1543;
t1542 = t1548 ^ 2;
t1902 = pkin(2) * t1542;
t1611 = -t1541 * t1902 + t1785;
t1550 = cos(pkin(7));
t1832 = t1550 * t1560;
t1546 = sin(pkin(7));
t1843 = t1546 * t1555;
t1656 = pkin(2) * t1832 + pkin(10) * t1843;
t1897 = pkin(10) * t1550;
t1802 = qJ(2) + t1897;
t1840 = t1547 * t1548;
t1817 = qJD(1) * t1840;
t1905 = pkin(1) * qJD(1);
t1821 = t1550 * t1905;
t1842 = t1546 * t1560;
t1890 = qJD(1) * t1551;
t1906 = 2 * qJD(2);
t1838 = t1548 * t1550;
t1657 = t1546 * t1551 + t1547 * t1838;
t1612 = t1657 * pkin(10);
t1837 = t1548 * t1551;
t1892 = qJ(2) * t1547;
t1918 = t1550 * (t1551 * t1612 + t1837 * t1892) + t1546 * (-qJ(2) * t1541 - t1612 * t1840);
t1939 = t1840 * t1906;
t1943 = (t1544 * (t1547 * ((-pkin(2) * t1842 + t1555 * t1802) * t1890 - t1656 * t1817 + t1832 * t1906) - t1560 * t1821) + (t1555 * t1611 - t1560 * t1918) * qJD(1) + t1555 * t1939) * qJD(1);
t1539 = t1544 ^ 2;
t1556 = sin(qJ(1));
t1561 = cos(qJ(1));
t1533 = t1556 * g(1) - t1561 * g(2);
t1661 = qJDD(1) * pkin(1) + t1533;
t1641 = t1551 * t1661;
t1822 = qJDD(1) * t1551;
t1819 = pkin(2) * t1822;
t1590 = t1548 * t1641 + t1819;
t1534 = t1561 * g(1) + t1556 * g(2);
t1824 = qJDD(1) * t1547;
t1603 = qJ(2) * t1824 - t1534;
t1575 = -g(3) * t1840 - t1544 * t1603 + t1590;
t1795 = t1551 * g(3) - qJDD(2);
t1823 = qJDD(1) * t1548;
t1797 = t1547 * t1823;
t1585 = -pkin(2) * t1797 - t1547 * t1661 - t1795;
t1570 = t1546 * t1575 - t1550 * t1585;
t1898 = pkin(10) * t1546;
t1665 = t1544 * pkin(1) + t1543 * t1898;
t1649 = t1665 * qJD(1);
t1852 = t1544 * t1546;
t1903 = pkin(2) * t1548;
t1663 = -pkin(10) * t1852 - t1903;
t1789 = -t1542 * t1897 - qJ(2);
t1845 = t1546 * t1548;
t1850 = t1544 * t1550;
t1891 = qJD(1) * t1547;
t1907 = -2 * qJD(2);
t1398 = (t1546 * t1649 + t1547 * (t1890 * ((qJ(2) + 0.2e1 * t1897) * t1845 - pkin(2) * t1850) - (t1663 * t1852 + t1550 * (-t1539 * t1897 + t1789)) * t1891 + t1852 * t1907)) * qJD(1) + t1570;
t1908 = t1546 ^ 2;
t1941 = t1547 * (-g(3) * t1838 + qJDD(1) * (t1544 * (-pkin(10) * t1908 - t1550 * t1802) + t1546 * (-pkin(1) - t1903)) - t1533 * t1546) - t1546 * t1795 + t1550 * (t1534 * t1544 + t1590);
t1552 = sin(qJ(6));
t1833 = t1550 * t1555;
t1805 = t1548 * t1833;
t1808 = t1551 * t1843;
t1592 = t1808 + (t1544 * t1560 + t1805) * t1547;
t1497 = t1592 * qJD(1);
t1559 = cos(qJ(4));
t1554 = sin(qJ(4));
t1508 = -t1546 * t1817 + t1550 * t1890 + qJD(3);
t1545 = sin(pkin(8));
t1851 = t1544 * t1547;
t1496 = (-t1555 * t1851 + t1560 * t1657) * qJD(1);
t1549 = cos(pkin(8));
t1864 = t1496 * t1549;
t1672 = t1508 * t1545 + t1864;
t1652 = t1672 * t1554;
t1453 = t1497 * t1559 + t1652;
t1849 = t1545 * t1496;
t1478 = t1508 * t1549 + qJD(4) - t1849;
t1553 = sin(qJ(5));
t1558 = cos(qJ(5));
t1417 = t1453 * t1558 + t1478 * t1553;
t1834 = t1549 * t1559;
t1846 = t1545 * t1559;
t1451 = -t1496 * t1834 + t1497 * t1554 - t1508 * t1846;
t1448 = qJD(5) + t1451;
t1557 = cos(qJ(6));
t1383 = t1417 * t1552 - t1557 * t1448;
t1385 = t1417 * t1557 + t1448 * t1552;
t1315 = t1385 * t1383;
t1588 = t1592 * qJDD(1);
t1583 = t1496 * qJD(3) + t1588;
t1800 = t1544 * t1824;
t1932 = t1546 * t1822 + t1550 * t1797;
t1651 = t1555 * t1800 - t1560 * t1932;
t1468 = -qJD(3) * t1497 - t1651;
t1642 = -t1546 * t1797 + t1550 * t1822 + qJDD(3);
t1600 = t1545 * t1642;
t1917 = t1549 * t1468 + t1600;
t1933 = t1917 * t1554 + t1559 * t1583;
t1388 = -t1451 * qJD(4) + t1933;
t1458 = -t1468 * t1545 + t1549 * t1642 + qJDD(4);
t1803 = t1417 * qJD(5) + t1553 * t1388 - t1558 * t1458;
t1787 = qJDD(6) + t1803;
t1921 = -t1315 + t1787;
t1938 = t1552 * t1921;
t1415 = t1453 * t1553 - t1558 * t1478;
t1354 = t1417 * t1415;
t1579 = -t1468 * t1834 + t1554 * t1583 - t1559 * t1600;
t1578 = t1453 * qJD(4) + t1579;
t1387 = qJDD(5) + t1578;
t1920 = -t1354 + t1387;
t1937 = t1553 * t1920;
t1936 = t1557 * t1921;
t1935 = t1558 * t1920;
t1536 = g(3) * t1851;
t1580 = t1544 * t1641 + t1548 * t1603 - t1536;
t1893 = pkin(10) * qJDD(1);
t1573 = t1657 * t1893 + t1580;
t1650 = t1547 * t1663;
t1782 = t1551 * t1802;
t1569 = (t1785 * qJD(1) + (t1548 * t1906 + (t1544 * t1782 + t1548 * t1650) * qJD(1)) * t1547) * qJD(1) + t1573;
t1602 = t1642 * pkin(3);
t1653 = t1508 * t1672;
t1896 = pkin(11) * t1545;
t1662 = -pkin(3) * t1496 - t1497 * t1896;
t1895 = pkin(11) * t1549;
t1826 = t1539 + t1542;
t1911 = qJD(1) ^ 2;
t1841 = t1547 * t1911;
t1894 = t1547 * g(3);
t1904 = pkin(2) * t1544;
t1919 = t1550 * (t1819 + (t1641 - t1894) * t1548 + (-t1802 * t1824 + t1534) * t1544 + (t1649 + (t1544 * t1907 + (-t1544 * t1650 + t1548 * t1782) * qJD(1)) * t1547) * qJD(1)) + t1546 * (((-pkin(1) + t1663) * qJDD(1) - t1533) * t1547 + (t1551 * t1904 - t1892 + (-t1547 * t1550 * t1826 - t1546 * t1837) * pkin(10)) * t1841 - t1795);
t1565 = pkin(11) * t1653 - t1497 * t1662 - t1555 * t1569 + t1560 * t1919 - t1583 * t1895 + t1602;
t1495 = t1497 ^ 2;
t1829 = qJD(3) + t1508;
t1567 = (t1497 * t1508 - t1468) * pkin(3) + (-t1495 * t1549 + (-t1545 * t1829 - t1864) * t1496 - t1545 * t1588) * pkin(11) - t1398;
t1934 = t1545 * t1567 + t1549 * t1565;
t1873 = t1417 * t1448;
t1931 = t1803 + t1873;
t1870 = t1451 * t1453;
t1613 = t1458 - t1870;
t1927 = t1554 * t1613;
t1865 = t1496 * t1497;
t1596 = t1642 + t1865;
t1926 = t1555 * t1596;
t1924 = t1559 * t1613;
t1923 = t1560 * t1596;
t1810 = t1544 * t1548 * t1911;
t1922 = (t1541 + t1543) * t1547 * t1810;
t1319 = -t1415 * qJD(5) + t1558 * t1388 + t1553 * t1458;
t1392 = t1448 * t1415;
t1287 = -t1392 + t1319;
t1425 = t1478 * t1451;
t1340 = -t1425 + t1388;
t1412 = qJD(6) + t1415;
t1332 = t1412 * t1383;
t1804 = t1383 * qJD(6) - t1557 * t1319 - t1552 * t1387;
t1216 = t1804 + t1332;
t1794 = t1319 * t1552 - t1557 * t1387;
t1211 = t1385 * (qJD(6) - t1412) + t1794;
t1375 = t1383 ^ 2;
t1376 = t1385 ^ 2;
t1411 = t1412 ^ 2;
t1413 = t1415 ^ 2;
t1414 = t1417 ^ 2;
t1910 = t1448 ^ 2;
t1449 = t1451 ^ 2;
t1450 = t1453 ^ 2;
t1909 = t1478 ^ 2;
t1494 = t1496 ^ 2;
t1507 = t1508 ^ 2;
t1901 = pkin(4) * t1554;
t1900 = pkin(4) * t1559;
t1899 = pkin(5) * t1553;
t1400 = pkin(4) * t1451 - pkin(12) * t1453;
t1304 = t1560 * t1569 + t1496 * t1662 - t1508 * (pkin(3) * t1508 - t1497 * t1895) + t1919 * t1555 + t1917 * pkin(11);
t1830 = t1559 * t1304;
t1157 = -pkin(4) * t1909 + t1458 * pkin(12) - t1451 * t1400 + t1554 * t1934 + t1830;
t1313 = t1549 * t1567;
t1867 = t1478 * t1453;
t1563 = -t1545 * t1565 + t1313 - t1340 * pkin(12) + (t1578 + t1867) * pkin(4);
t1083 = t1157 * t1553 - t1558 * t1563;
t1352 = pkin(5) * t1415 - pkin(13) * t1417;
t1058 = -t1387 * pkin(5) - pkin(13) * t1910 + t1352 * t1417 + t1083;
t1889 = t1058 * t1552;
t1888 = t1058 * t1557;
t1180 = t1304 * t1554 - t1559 * t1934;
t1156 = -t1458 * pkin(4) - t1909 * pkin(12) + t1400 * t1453 + t1180;
t1887 = t1156 * t1553;
t1886 = t1156 * t1558;
t1594 = -qJD(3) * t1864 + t1653;
t1791 = pkin(10) * t1800;
t1231 = -t1313 + (-t1549 * t1588 + t1594) * t1896 + (-t1555 * (pkin(10) * t1932 + t1580) + (-t1550 * t1791 + t1575) * t1832 + (-t1546 * t1791 + t1585) * t1842 + t1602 + pkin(3) * t1865 + t1495 * t1896 - t1943) * t1545;
t1885 = t1231 * t1554;
t1884 = t1231 * t1559;
t1243 = t1315 + t1787;
t1883 = t1243 * t1552;
t1882 = t1243 * t1557;
t1308 = t1354 + t1387;
t1881 = t1308 * t1553;
t1880 = t1308 * t1558;
t1364 = -t1458 - t1870;
t1879 = t1364 * t1554;
t1878 = t1364 * t1559;
t1877 = t1398 * t1555;
t1876 = t1398 * t1560;
t1875 = t1412 * t1552;
t1874 = t1412 * t1557;
t1872 = t1448 * t1553;
t1871 = t1448 * t1558;
t1460 = -t1642 + t1865;
t1869 = t1460 * t1555;
t1868 = t1460 * t1560;
t1863 = t1496 * t1560;
t1862 = t1497 * t1555;
t1597 = qJ(2) * t1841 + t1661;
t1498 = t1547 * t1597 + t1795;
t1861 = t1498 * t1544;
t1860 = t1498 * t1548;
t1483 = t1508 * t1496;
t1525 = t1541 * t1810;
t1513 = t1525 + t1822;
t1859 = t1513 * t1544;
t1858 = t1513 * t1548;
t1514 = -t1525 + t1822;
t1857 = t1514 * t1544;
t1856 = t1514 * t1548;
t1855 = t1539 * t1541;
t1854 = t1541 * t1911;
t1853 = t1541 * t1542;
t1848 = t1545 * t1546;
t1847 = t1545 * t1554;
t1839 = t1547 * t1560;
t1835 = t1549 * t1554;
t1831 = t1551 * t1911;
t1828 = qJD(4) + t1478;
t1084 = t1558 * t1157 + t1553 * t1563;
t1059 = -pkin(5) * t1910 + pkin(13) * t1387 - t1352 * t1415 + t1084;
t1095 = pkin(5) * t1931 - t1287 * pkin(13) + t1156;
t1002 = t1557 * t1059 + t1552 * t1095;
t1825 = qJDD(1) * t1541;
t1818 = -pkin(5) * t1558 - pkin(4);
t1814 = t1553 * t1315;
t1813 = t1558 * t1315;
t1812 = t1554 * t1354;
t1811 = t1559 * t1354;
t1806 = t1547 * t1831;
t1799 = t1544 * t1823;
t1796 = t1547 * t1822;
t1001 = t1059 * t1552 - t1557 * t1095;
t1007 = t1083 * t1553 + t1558 * t1084;
t1502 = -t1533 * t1556 - t1561 * t1534;
t1531 = qJDD(1) * t1561 - t1556 * t1911;
t1784 = -pkin(9) * t1531 - g(3) * t1556;
t1783 = t1544 * (-t1550 ^ 2 - t1908);
t1459 = -t1507 - t1494;
t1408 = t1459 * t1560 - t1926;
t1781 = pkin(10) * t1408 + t1876;
t1464 = -t1495 - t1507;
t1418 = -t1464 * t1555 + t1868;
t1780 = pkin(10) * t1418 - t1877;
t1393 = -t1909 - t1449;
t1311 = t1393 * t1559 - t1927;
t1779 = pkin(11) * t1311 + t1884;
t1399 = -t1450 - t1909;
t1324 = -t1399 * t1554 + t1878;
t1778 = pkin(11) * t1324 - t1885;
t937 = t1001 * t1552 + t1002 * t1557;
t912 = t1058 * t1553 + t1558 * t937;
t936 = -t1001 * t1557 + t1002 * t1552;
t1767 = t1554 * t912 - t1559 * t936;
t911 = -t1058 * t1558 + t1553 * t937;
t846 = -t1545 * t911 + t1549 * t1767;
t879 = t1554 * t936 + t1559 * t912;
t1766 = t1555 * t879 + t1560 * t846;
t845 = t1545 * t1767 + t1549 * t911;
t814 = -t1546 * t845 + t1550 * t1766;
t824 = -t1555 * t846 + t1560 * t879;
t1777 = t1544 * t824 + t1548 * t814;
t1006 = -t1083 * t1558 + t1084 * t1553;
t1756 = t1007 * t1554 - t1156 * t1559;
t932 = -t1006 * t1545 + t1549 * t1756;
t978 = t1007 * t1559 + t1156 * t1554;
t1765 = t1555 * t978 + t1560 * t932;
t931 = t1006 * t1549 + t1545 * t1756;
t867 = -t1546 * t931 + t1550 * t1765;
t896 = -t1555 * t932 + t1560 * t978;
t1776 = t1544 * t896 + t1548 * t867;
t1215 = -t1332 + t1804;
t1135 = -t1211 * t1557 - t1215 * t1552;
t1278 = t1375 + t1376;
t1097 = t1135 * t1558 - t1278 * t1553;
t1133 = -t1211 * t1552 + t1215 * t1557;
t1029 = t1097 * t1559 + t1133 * t1554;
t1096 = t1135 * t1553 + t1278 * t1558;
t1742 = t1097 * t1554 - t1133 * t1559;
t986 = -t1096 * t1545 + t1549 * t1742;
t1761 = t1029 * t1555 + t1560 * t986;
t985 = t1096 * t1549 + t1545 * t1742;
t900 = -t1546 * t985 + t1550 * t1761;
t941 = t1029 * t1560 - t1555 * t986;
t1775 = t1544 * t941 + t1548 * t900;
t1212 = (-qJD(6) - t1412) * t1385 - t1794;
t1134 = t1212 * t1557 + t1216 * t1552;
t1314 = -t1376 + t1375;
t1108 = t1134 * t1558 - t1314 * t1553;
t1132 = -t1212 * t1552 + t1216 * t1557;
t1037 = t1108 * t1559 - t1132 * t1554;
t1107 = t1134 * t1553 + t1314 * t1558;
t1739 = t1108 * t1554 + t1132 * t1559;
t991 = -t1107 * t1545 + t1549 * t1739;
t1760 = t1037 * t1555 + t1560 * t991;
t990 = t1107 * t1549 + t1545 * t1739;
t903 = -t1546 * t990 + t1550 * t1760;
t946 = t1037 * t1560 - t1555 * t991;
t1774 = t1544 * t946 + t1548 * t903;
t1296 = -t1411 - t1375;
t1183 = t1296 * t1557 - t1938;
t1116 = t1183 * t1553 + t1212 * t1558;
t1117 = t1183 * t1558 - t1212 * t1553;
t1182 = t1296 * t1552 + t1936;
t1736 = t1117 * t1554 - t1182 * t1559;
t1011 = t1116 * t1549 + t1545 * t1736;
t1012 = -t1116 * t1545 + t1549 * t1736;
t1060 = t1117 * t1559 + t1182 * t1554;
t1755 = t1012 * t1560 + t1060 * t1555;
t918 = -t1011 * t1546 + t1550 * t1755;
t962 = -t1012 * t1555 + t1060 * t1560;
t1773 = t1544 * t962 + t1548 * t918;
t1305 = -t1376 - t1411;
t1193 = -t1305 * t1552 - t1882;
t1119 = t1193 * t1553 + t1216 * t1558;
t1120 = t1193 * t1558 - t1216 * t1553;
t1192 = t1305 * t1557 - t1883;
t1735 = t1120 * t1554 - t1192 * t1559;
t1017 = t1119 * t1549 + t1545 * t1735;
t1018 = -t1119 * t1545 + t1549 * t1735;
t1066 = t1120 * t1559 + t1192 * t1554;
t1754 = t1018 * t1560 + t1066 * t1555;
t923 = -t1017 * t1546 + t1550 * t1754;
t967 = -t1018 * t1555 + t1066 * t1560;
t1772 = t1544 * t967 + t1548 * t923;
t1331 = -t1376 + t1411;
t1209 = -t1331 * t1552 + t1936;
t1128 = t1209 * t1553 + t1215 * t1558;
t1130 = t1209 * t1558 - t1215 * t1553;
t1207 = -t1331 * t1557 - t1938;
t1733 = t1130 * t1554 + t1207 * t1559;
t1020 = t1128 * t1549 + t1545 * t1733;
t1022 = -t1128 * t1545 + t1549 * t1733;
t1073 = t1130 * t1559 - t1207 * t1554;
t1753 = t1022 * t1560 + t1073 * t1555;
t929 = -t1020 * t1546 + t1550 * t1753;
t971 = -t1022 * t1555 + t1073 * t1560;
t1771 = t1544 * t971 + t1548 * t929;
t1330 = t1375 - t1411;
t1210 = t1330 * t1557 - t1883;
t1129 = t1210 * t1553 + t1211 * t1558;
t1131 = t1210 * t1558 - t1211 * t1553;
t1208 = -t1330 * t1552 - t1882;
t1732 = t1131 * t1554 + t1208 * t1559;
t1021 = t1129 * t1549 + t1545 * t1732;
t1023 = -t1129 * t1545 + t1549 * t1732;
t1074 = t1131 * t1559 - t1208 * t1554;
t1752 = t1023 * t1560 + t1074 * t1555;
t930 = -t1021 * t1546 + t1550 * t1752;
t972 = -t1023 * t1555 + t1074 * t1560;
t1770 = t1544 * t972 + t1548 * t930;
t1240 = -qJD(6) * t1385 - t1794;
t1204 = -t1240 * t1552 + t1383 * t1874;
t1164 = t1204 * t1553 + t1813;
t1166 = t1204 * t1558 - t1814;
t1203 = -t1240 * t1557 - t1383 * t1875;
t1722 = t1166 * t1554 + t1203 * t1559;
t1048 = t1164 * t1549 + t1545 * t1722;
t1050 = -t1164 * t1545 + t1549 * t1722;
t1105 = t1166 * t1559 - t1203 * t1554;
t1747 = t1050 * t1560 + t1105 * t1555;
t955 = -t1048 * t1546 + t1550 * t1747;
t998 = -t1050 * t1555 + t1105 * t1560;
t1769 = t1544 * t998 + t1548 * t955;
t1206 = -t1385 * t1875 - t1557 * t1804;
t1165 = t1206 * t1553 - t1813;
t1167 = t1206 * t1558 + t1814;
t1205 = -t1385 * t1874 + t1552 * t1804;
t1721 = t1167 * t1554 + t1205 * t1559;
t1049 = t1165 * t1549 + t1545 * t1721;
t1051 = -t1165 * t1545 + t1549 * t1721;
t1106 = t1167 * t1559 - t1205 * t1554;
t1746 = t1051 * t1560 + t1106 * t1555;
t956 = -t1049 * t1546 + t1550 * t1746;
t999 = -t1051 * t1555 + t1106 * t1560;
t1768 = t1544 * t999 + t1548 * t956;
t1521 = (-t1543 - t1853) * t1911;
t1489 = t1521 * t1548 - t1859;
t1764 = qJ(2) * t1489 + t1860;
t1519 = (-t1543 - t1855) * t1911;
t1491 = -t1519 * t1544 - t1856;
t1763 = qJ(2) * t1491 - t1861;
t1660 = pkin(10) * t1838 + qJ(2) * t1548;
t1664 = -pkin(10) * t1845 + t1904;
t1181 = t1830 + pkin(3) * t1497 * t1652 + (-t1555 * t1657 + t1783 * t1839) * t1835 * t1893 + (t1549 * (-t1555 * t1580 + t1575 * t1832 + t1585 * t1842 + t1602) + t1545 * (-t1468 * pkin(3) - t1570) + (t1549 * t1594 + t1545 * (-qJD(3) * t1849 - t1496 * t1672) + (-t1545 ^ 2 - t1549 ^ 2) * qJDD(1) * (t1544 * t1839 + t1547 * t1805 + t1808)) * pkin(11) + ((t1549 * (-t1555 * t1785 + t1665 * t1832) - t1665 * t1848) * qJD(1) + ((t1549 * (t1555 * t1902 + t1789 * t1842) + t1545 * t1550 * t1789 + (t1545 * pkin(10) * t1783 + (-pkin(2) * t1848 + t1549 * t1656) * t1548) * t1544) * t1891 + (t1549 * (-t1544 * t1832 - t1548 * t1555) + t1544 * t1848) * t1906 + (t1549 * (-t1555 * (pkin(10) * t1850 + qJ(2) * t1544) + t1660 * t1832 + t1664 * t1842) + t1545 * (-t1546 * t1660 + t1550 * t1664)) * t1890) * t1547) * qJD(1)) * t1554;
t1718 = -t1180 * t1559 + t1181 * t1554;
t1068 = t1231 * t1545 + t1549 * t1718;
t1102 = t1180 * t1554 + t1181 * t1559;
t1008 = -t1068 * t1555 + t1102 * t1560;
t1067 = -t1231 * t1549 + t1545 * t1718;
t1743 = t1068 * t1560 + t1102 * t1555;
t964 = -t1067 * t1546 + t1550 * t1743;
t1762 = t1008 * t1544 + t1548 * t964;
t1269 = (-t1383 * t1557 + t1385 * t1552) * t1412;
t1219 = t1269 * t1553 - t1558 * t1787;
t1220 = t1269 * t1558 + t1553 * t1787;
t1268 = (t1383 * t1552 + t1385 * t1557) * t1412;
t1713 = t1220 * t1554 + t1268 * t1559;
t1099 = -t1219 * t1545 + t1549 * t1713;
t1154 = t1220 * t1559 - t1268 * t1554;
t1040 = -t1099 * t1555 + t1154 * t1560;
t1098 = t1219 * t1549 + t1545 * t1713;
t1741 = t1099 * t1560 + t1154 * t1555;
t993 = -t1098 * t1546 + t1550 * t1741;
t1759 = t1040 * t1544 + t1548 * t993;
t1286 = -t1803 + t1873;
t1288 = -t1392 - t1319;
t1197 = t1286 * t1553 + t1288 * t1558;
t1199 = t1286 * t1558 - t1288 * t1553;
t1325 = t1413 + t1414;
t1714 = t1199 * t1554 + t1325 * t1559;
t1101 = -t1197 * t1545 + t1549 * t1714;
t1163 = t1199 * t1559 - t1325 * t1554;
t1044 = -t1101 * t1555 + t1163 * t1560;
t1100 = t1197 * t1549 + t1545 * t1714;
t1740 = t1101 * t1560 + t1163 * t1555;
t997 = -t1100 * t1546 + t1550 * t1740;
t1758 = t1044 * t1544 + t1548 * t997;
t1196 = t1287 * t1558 - t1553 * t1931;
t1198 = -t1287 * t1553 - t1558 * t1931;
t1353 = -t1414 + t1413;
t1715 = t1198 * t1554 + t1353 * t1559;
t1109 = t1196 * t1549 + t1545 * t1715;
t1110 = -t1196 * t1545 + t1549 * t1715;
t1176 = t1198 * t1559 - t1353 * t1554;
t1738 = t1110 * t1560 + t1176 * t1555;
t1004 = -t1109 * t1546 + t1550 * t1738;
t1053 = -t1110 * t1555 + t1176 * t1560;
t1757 = t1004 * t1548 + t1053 * t1544;
t1335 = -t1910 - t1413;
t1251 = t1335 * t1553 + t1935;
t1252 = t1335 * t1558 - t1937;
t1708 = t1252 * t1554 - t1559 * t1931;
t1138 = t1251 * t1549 + t1545 * t1708;
t1139 = -t1251 * t1545 + t1549 * t1708;
t1179 = t1252 * t1559 + t1554 * t1931;
t1730 = t1139 * t1560 + t1179 * t1555;
t1025 = -t1138 * t1546 + t1550 * t1730;
t1069 = -t1139 * t1555 + t1179 * t1560;
t1751 = t1025 * t1548 + t1069 * t1544;
t1347 = -t1414 - t1910;
t1255 = t1347 * t1558 - t1881;
t1256 = -t1347 * t1553 - t1880;
t1706 = t1256 * t1554 - t1287 * t1559;
t1142 = t1255 * t1549 + t1545 * t1706;
t1143 = -t1255 * t1545 + t1549 * t1706;
t1184 = t1256 * t1559 + t1287 * t1554;
t1729 = t1143 * t1560 + t1184 * t1555;
t1027 = -t1142 * t1546 + t1550 * t1729;
t1075 = -t1143 * t1555 + t1184 * t1560;
t1750 = t1027 * t1548 + t1075 * t1544;
t1391 = -t1414 + t1910;
t1270 = t1391 * t1558 + t1937;
t1272 = -t1391 * t1553 + t1935;
t1701 = t1272 * t1554 + t1288 * t1559;
t1146 = t1270 * t1549 + t1545 * t1701;
t1148 = -t1270 * t1545 + t1549 * t1701;
t1194 = t1272 * t1559 - t1288 * t1554;
t1728 = t1148 * t1560 + t1194 * t1555;
t1033 = -t1146 * t1546 + t1550 * t1728;
t1086 = -t1148 * t1555 + t1194 * t1560;
t1749 = t1033 * t1548 + t1086 * t1544;
t1390 = t1413 - t1910;
t1271 = t1390 * t1553 + t1880;
t1273 = t1390 * t1558 - t1881;
t1700 = t1273 * t1554 - t1286 * t1559;
t1147 = t1271 * t1549 + t1545 * t1700;
t1149 = -t1271 * t1545 + t1549 * t1700;
t1195 = t1273 * t1559 + t1286 * t1554;
t1727 = t1149 * t1560 + t1195 * t1555;
t1034 = -t1147 * t1546 + t1550 * t1727;
t1087 = -t1149 * t1555 + t1195 * t1560;
t1748 = t1034 * t1548 + t1087 * t1544;
t1280 = t1415 * t1872 - t1558 * t1803;
t1281 = t1415 * t1871 + t1553 * t1803;
t1659 = t1281 * t1554 + t1811;
t1171 = t1280 * t1549 + t1545 * t1659;
t1173 = -t1280 * t1545 + t1549 * t1659;
t1236 = t1281 * t1559 - t1812;
t1720 = t1173 * t1560 + t1236 * t1555;
t1063 = -t1171 * t1546 + t1550 * t1720;
t1126 = -t1173 * t1555 + t1236 * t1560;
t1745 = t1063 * t1548 + t1126 * t1544;
t1282 = t1319 * t1553 + t1417 * t1871;
t1283 = t1319 * t1558 - t1417 * t1872;
t1658 = t1283 * t1554 - t1811;
t1172 = t1282 * t1549 + t1545 * t1658;
t1174 = -t1282 * t1545 + t1549 * t1658;
t1237 = t1283 * t1559 + t1812;
t1719 = t1174 * t1560 + t1237 * t1555;
t1064 = -t1172 * t1546 + t1550 * t1719;
t1127 = -t1174 * t1555 + t1237 * t1560;
t1744 = t1064 * t1548 + t1127 * t1544;
t1322 = (-t1415 * t1553 - t1417 * t1558) * t1448;
t1323 = (-t1415 * t1558 + t1417 * t1553) * t1448;
t1697 = t1323 * t1554 - t1387 * t1559;
t1223 = t1322 * t1549 + t1545 * t1697;
t1224 = -t1322 * t1545 + t1549 * t1697;
t1279 = t1323 * t1559 + t1387 * t1554;
t1712 = t1224 * t1560 + t1279 * t1555;
t1113 = -t1223 * t1546 + t1550 * t1712;
t1162 = -t1224 * t1555 + t1279 * t1560;
t1737 = t1113 * t1548 + t1162 * t1544;
t1363 = -t1449 - t1450;
t1341 = t1425 + t1388;
t1576 = (-qJD(4) + t1478) * t1453 - t1579;
t1695 = -t1341 * t1559 + t1554 * t1576;
t1234 = t1363 * t1549 + t1545 * t1695;
t1235 = -t1363 * t1545 + t1549 * t1695;
t1275 = t1341 * t1554 + t1559 * t1576;
t1710 = t1235 * t1560 + t1275 * t1555;
t1122 = -t1234 * t1546 + t1550 * t1710;
t1170 = -t1235 * t1555 + t1275 * t1560;
t1734 = t1122 * t1548 + t1170 * t1544;
t1401 = t1450 - t1449;
t1336 = t1453 * t1828 + t1579;
t1696 = -t1336 * t1554 + t1340 * t1559;
t1247 = t1401 * t1549 + t1545 * t1696;
t1248 = -t1401 * t1545 + t1549 * t1696;
t1274 = -t1336 * t1559 - t1340 * t1554;
t1709 = t1248 * t1560 + t1274 * t1555;
t1137 = -t1247 * t1546 + t1550 * t1709;
t1178 = -t1248 * t1555 + t1274 * t1560;
t1731 = t1137 * t1548 + t1178 * t1544;
t1686 = t1393 * t1554 + t1924;
t1253 = t1336 * t1549 + t1545 * t1686;
t1254 = -t1336 * t1545 + t1549 * t1686;
t1707 = t1254 * t1560 + t1311 * t1555;
t1151 = -t1253 * t1546 + t1550 * t1707;
t1202 = -t1254 * t1555 + t1311 * t1560;
t1726 = t1151 * t1548 + t1202 * t1544;
t1339 = -t1451 * t1828 + t1933;
t1689 = t1399 * t1559 + t1879;
t1261 = t1339 * t1549 + t1545 * t1689;
t1262 = -t1339 * t1545 + t1549 * t1689;
t1704 = t1262 * t1560 + t1324 * t1555;
t1153 = -t1261 * t1546 + t1550 * t1704;
t1217 = -t1262 * t1555 + t1324 * t1560;
t1725 = t1153 * t1548 + t1217 * t1544;
t1422 = -t1450 + t1909;
t1687 = t1422 * t1559 + t1927;
t1264 = t1341 * t1549 + t1545 * t1687;
t1266 = -t1341 * t1545 + t1549 * t1687;
t1328 = -t1422 * t1554 + t1924;
t1703 = t1266 * t1560 + t1328 * t1555;
t1160 = -t1264 * t1546 + t1550 * t1703;
t1221 = -t1266 * t1555 + t1328 * t1560;
t1724 = t1160 * t1548 + t1221 * t1544;
t1421 = t1449 - t1909;
t1688 = t1421 * t1554 - t1878;
t1265 = t1545 * t1688 + t1549 * t1576;
t1267 = -t1545 * t1576 + t1549 * t1688;
t1329 = t1421 * t1559 + t1879;
t1702 = t1267 * t1560 + t1329 * t1555;
t1161 = -t1265 * t1546 + t1550 * t1702;
t1222 = -t1267 * t1555 + t1329 * t1560;
t1723 = t1161 * t1548 + t1222 * t1544;
t1577 = t1559 * t1578;
t1300 = -t1545 * t1577 + (-t1453 * t1549 + t1478 * t1847) * t1451;
t1301 = -t1549 * t1577 + (t1453 * t1545 + t1478 * t1835) * t1451;
t1333 = t1425 * t1559 + t1554 * t1578;
t1699 = t1301 * t1560 + t1333 * t1555;
t1187 = -t1300 * t1546 + t1550 * t1699;
t1245 = -t1301 * t1555 + t1333 * t1560;
t1717 = t1187 * t1548 + t1245 * t1544;
t1302 = t1388 * t1847 + (t1451 * t1549 + t1478 * t1846) * t1453;
t1303 = t1388 * t1835 + (-t1451 * t1545 + t1478 * t1834) * t1453;
t1334 = t1388 * t1559 - t1554 * t1867;
t1698 = t1303 * t1560 + t1334 * t1555;
t1188 = -t1302 * t1546 + t1550 * t1698;
t1246 = -t1303 * t1555 + t1334 * t1560;
t1716 = t1188 * t1548 + t1246 * t1544;
t1655 = t1478 * (-t1451 * t1554 - t1453 * t1559);
t1342 = t1458 * t1549 + t1545 * t1655;
t1343 = -t1458 * t1545 + t1549 * t1655;
t1358 = (-t1451 * t1559 + t1453 * t1554) * t1478;
t1694 = t1343 * t1560 + t1358 * t1555;
t1233 = -t1342 * t1546 + t1550 * t1694;
t1294 = -t1343 * t1555 + t1358 * t1560;
t1711 = t1233 * t1548 + t1294 * t1544;
t1348 = t1555 * t1573 - t1560 * t1941 + t1943;
t1349 = t1560 * t1573 + t1941 * t1555 + (t1560 * t1939 + (t1555 * t1918 + t1560 * t1611) * qJD(1) + (t1555 * t1821 + (t1833 * t1907 + (pkin(2) * t1833 - pkin(10) * t1842) * t1817 + (pkin(2) * t1843 + t1560 * t1802) * t1890) * t1547) * t1544) * qJD(1);
t1693 = -t1348 * t1560 + t1349 * t1555;
t1258 = t1398 * t1546 + t1550 * t1693;
t1295 = t1348 * t1555 + t1349 * t1560;
t1705 = t1258 * t1548 + t1295 * t1544;
t1454 = -t1494 - t1495;
t1438 = -t1483 + t1583;
t1593 = (-qJD(3) + t1508) * t1497 - t1651;
t1678 = -t1438 * t1560 + t1555 * t1593;
t1351 = -t1454 * t1546 + t1550 * t1678;
t1397 = t1438 * t1555 + t1560 * t1593;
t1692 = t1351 * t1548 + t1397 * t1544;
t1469 = t1495 - t1494;
t1433 = t1497 * t1829 + t1651;
t1437 = t1483 + t1583;
t1679 = -t1433 * t1555 + t1437 * t1560;
t1360 = -t1469 * t1546 + t1550 * t1679;
t1396 = -t1433 * t1560 - t1437 * t1555;
t1691 = t1360 * t1548 + t1396 * t1544;
t1677 = t1459 * t1555 + t1923;
t1362 = -t1433 * t1546 + t1550 * t1677;
t1690 = t1362 * t1548 + t1408 * t1544;
t1436 = t1496 * t1829 + t1588;
t1676 = t1464 * t1560 + t1869;
t1368 = -t1436 * t1546 + t1550 * t1676;
t1685 = t1368 * t1548 + t1418 * t1544;
t1482 = -t1495 + t1507;
t1674 = t1482 * t1560 + t1926;
t1379 = -t1438 * t1546 + t1550 * t1674;
t1426 = -t1482 * t1555 + t1923;
t1684 = t1379 * t1548 + t1426 * t1544;
t1481 = t1494 - t1507;
t1675 = t1481 * t1555 - t1868;
t1380 = -t1546 * t1593 + t1550 * t1675;
t1427 = t1481 * t1560 + t1869;
t1683 = t1380 * t1548 + t1427 * t1544;
t1403 = t1468 * t1832 + (-t1497 * t1546 - t1508 * t1833) * t1496;
t1430 = -t1468 * t1555 - t1483 * t1560;
t1682 = t1403 * t1548 + t1430 * t1544;
t1581 = t1555 * t1583;
t1405 = t1550 * t1581 + (t1496 * t1546 + t1508 * t1832) * t1497;
t1432 = qJD(3) * t1863 - t1508 * t1862 + t1560 * t1588;
t1681 = t1405 * t1548 + t1432 * t1544;
t1654 = t1508 * (t1496 * t1555 - t1497 * t1560);
t1429 = -t1546 * t1642 + t1550 * t1654;
t1441 = (t1862 + t1863) * t1508;
t1680 = t1429 * t1548 + t1441 * t1544;
t1586 = (t1547 * t1906 - t1905) * qJD(1) + t1603;
t1595 = t1551 * t1597;
t1479 = (-t1595 + t1894) * t1548 + t1586 * t1544;
t1480 = t1544 * t1595 + t1548 * t1586 - t1536;
t1673 = -t1479 * t1548 + t1480 * t1544;
t1431 = t1479 * t1544 + t1480 * t1548;
t1527 = t1548 * t1806;
t1509 = t1527 + t1800;
t1526 = t1544 * t1806;
t1512 = -t1526 + t1797;
t1671 = t1509 * t1548 + t1512 * t1544;
t1510 = -t1527 + t1800;
t1511 = t1526 + t1797;
t1670 = -t1510 * t1548 + t1511 * t1544;
t1518 = (t1543 - t1855) * t1911;
t1669 = t1518 * t1548 + t1859;
t1668 = t1521 * t1544 + t1858;
t1667 = t1519 * t1548 - t1857;
t1520 = (-t1543 + t1853) * t1911;
t1666 = t1520 * t1544 + t1856;
t1501 = t1533 * t1561 - t1556 * t1534;
t851 = -pkin(12) * t911 + (-pkin(13) * t1558 + t1899) * t936;
t873 = -pkin(4) * t911 + pkin(5) * t1058 - pkin(13) * t937;
t1643 = pkin(11) * t879 + t1554 * t851 + t1559 * t873;
t834 = pkin(12) * t912 + (-pkin(13) * t1553 + t1818) * t936;
t795 = -pkin(3) * t845 - t1545 * t834 + t1549 * t1643;
t800 = -t1554 * t873 + t1559 * t851 + (-t1545 * t845 - t1549 * t846) * pkin(11);
t1648 = pkin(10) * t824 + t1555 * t800 + t1560 * t795;
t920 = -pkin(13) * t1133 - t936;
t901 = -pkin(12) * t1096 + t1133 * t1899 + t1558 * t920;
t904 = -pkin(4) * t1096 - pkin(5) * t1278 - pkin(13) * t1135 - t937;
t1637 = pkin(11) * t1029 + t1554 * t901 + t1559 * t904;
t893 = pkin(12) * t1097 + t1133 * t1818 + t1553 * t920;
t826 = -pkin(3) * t985 - t1545 * t893 + t1549 * t1637;
t836 = -t1554 * t904 + t1559 * t901 + (-t1545 * t985 - t1549 * t986) * pkin(11);
t1647 = pkin(10) * t941 + t1555 * t836 + t1560 * t826;
t1028 = -pkin(13) * t1182 + t1889;
t980 = -pkin(5) * t1182 + t1001;
t921 = -pkin(12) * t1116 + t1028 * t1558 - t1553 * t980;
t973 = -pkin(4) * t1116 - pkin(5) * t1212 - pkin(13) * t1183 + t1888;
t1636 = pkin(11) * t1060 + t1554 * t921 + t1559 * t973;
t913 = -pkin(4) * t1182 + pkin(12) * t1117 + t1028 * t1553 + t1558 * t980;
t841 = -pkin(3) * t1011 - t1545 * t913 + t1549 * t1636;
t868 = -t1554 * t973 + t1559 * t921 + (-t1011 * t1545 - t1012 * t1549) * pkin(11);
t1646 = pkin(10) * t962 + t1555 * t868 + t1560 * t841;
t1030 = -pkin(13) * t1192 + t1888;
t981 = -pkin(5) * t1192 + t1002;
t924 = -pkin(12) * t1119 + t1030 * t1558 - t1553 * t981;
t975 = -pkin(4) * t1119 - pkin(5) * t1216 - pkin(13) * t1193 - t1889;
t1635 = pkin(11) * t1066 + t1554 * t924 + t1559 * t975;
t916 = -pkin(4) * t1192 + pkin(12) * t1120 + t1030 * t1553 + t1558 * t981;
t843 = -pkin(3) * t1017 - t1545 * t916 + t1549 * t1635;
t871 = -t1554 * t975 + t1559 * t924 + (-t1017 * t1545 - t1018 * t1549) * pkin(11);
t1645 = pkin(10) * t967 + t1555 * t871 + t1560 * t843;
t1599 = pkin(11) * t978 + (-pkin(12) * t1554 - t1900) * t1006;
t979 = -pkin(4) * t1156 + pkin(12) * t1007;
t853 = -pkin(3) * t931 - t1545 * t979 + t1549 * t1599;
t859 = (-pkin(12) * t1559 + t1901) * t1006 + (-t1545 * t931 - t1549 * t932) * pkin(11);
t1644 = pkin(10) * t896 + t1555 * t859 + t1560 * t853;
t987 = -pkin(12) * t1197 - t1006;
t1605 = pkin(11) * t1163 - t1197 * t1900 + t1554 * t987;
t982 = pkin(4) * t1325 + pkin(12) * t1199 + t1007;
t898 = -pkin(3) * t1100 - t1545 * t982 + t1549 * t1605;
t933 = t1197 * t1901 + t1559 * t987 + (-t1100 * t1545 - t1101 * t1549) * pkin(11);
t1640 = pkin(10) * t1044 + t1555 * t933 + t1560 * t898;
t1089 = -pkin(4) * t1931 + pkin(12) * t1252 - t1886;
t1054 = -pkin(4) * t1251 + t1083;
t1115 = -pkin(12) * t1251 + t1887;
t1619 = pkin(11) * t1179 + t1054 * t1559 + t1115 * t1554;
t943 = -pkin(3) * t1138 - t1089 * t1545 + t1549 * t1619;
t958 = -t1054 * t1554 + t1115 * t1559 + (-t1138 * t1545 - t1139 * t1549) * pkin(11);
t1639 = pkin(10) * t1069 + t1555 * t958 + t1560 * t943;
t1091 = -pkin(4) * t1287 + pkin(12) * t1256 + t1887;
t1055 = -pkin(4) * t1255 + t1084;
t1118 = -pkin(12) * t1255 + t1886;
t1618 = pkin(11) * t1184 + t1055 * t1559 + t1118 * t1554;
t945 = -pkin(3) * t1142 - t1091 * t1545 + t1549 * t1618;
t959 = -t1055 * t1554 + t1118 * t1559 + (-t1142 * t1545 - t1143 * t1549) * pkin(11);
t1638 = pkin(10) * t1075 + t1555 * t959 + t1560 * t945;
t1009 = -pkin(3) * t1067 + t1102 * t1895;
t994 = (-t1067 * t1545 - t1068 * t1549) * pkin(11);
t1634 = pkin(10) * t1008 + t1009 * t1560 + t1555 * t994;
t794 = pkin(3) * t846 + t1545 * t1643 + t1549 * t834;
t813 = t1546 * t1766 + t1550 * t845;
t778 = -pkin(2) * t813 - t1546 * t794 + t1550 * t1648;
t781 = -t1555 * t795 + t1560 * t800 + (-t1546 * t813 - t1550 * t814) * pkin(10);
t797 = -t1544 * t814 + t1548 * t824;
t1633 = qJ(2) * t797 + t1544 * t781 + t1548 * t778;
t825 = pkin(3) * t986 + t1545 * t1637 + t1549 * t893;
t899 = t1546 * t1761 + t1550 * t985;
t793 = -pkin(2) * t899 - t1546 * t825 + t1550 * t1647;
t801 = -t1555 * t826 + t1560 * t836 + (-t1546 * t899 - t1550 * t900) * pkin(10);
t874 = -t1544 * t900 + t1548 * t941;
t1632 = qJ(2) * t874 + t1544 * t801 + t1548 * t793;
t852 = pkin(3) * t932 + t1545 * t1599 + t1549 * t979;
t866 = t1546 * t1765 + t1550 * t931;
t799 = -pkin(2) * t866 - t1546 * t852 + t1550 * t1644;
t806 = -t1555 * t853 + t1560 * t859 + (-t1546 * t866 - t1550 * t867) * pkin(10);
t833 = -t1544 * t867 + t1548 * t896;
t1631 = qJ(2) * t833 + t1544 * t806 + t1548 * t799;
t840 = pkin(3) * t1012 + t1545 * t1636 + t1549 * t913;
t917 = t1011 * t1550 + t1546 * t1755;
t803 = -pkin(2) * t917 - t1546 * t840 + t1550 * t1646;
t816 = -t1555 * t841 + t1560 * t868 + (-t1546 * t917 - t1550 * t918) * pkin(10);
t885 = -t1544 * t918 + t1548 * t962;
t1630 = qJ(2) * t885 + t1544 * t816 + t1548 * t803;
t842 = pkin(3) * t1018 + t1545 * t1635 + t1549 * t916;
t922 = t1017 * t1550 + t1546 * t1754;
t805 = -pkin(2) * t922 - t1546 * t842 + t1550 * t1645;
t817 = -t1555 * t843 + t1560 * t871 + (-t1546 * t922 - t1550 * t923) * pkin(10);
t888 = -t1544 * t923 + t1548 * t967;
t1629 = qJ(2) * t888 + t1544 * t817 + t1548 * t805;
t897 = pkin(3) * t1101 + t1545 * t1605 + t1549 * t982;
t996 = t1100 * t1550 + t1546 * t1740;
t830 = -pkin(2) * t996 - t1546 * t897 + t1550 * t1640;
t844 = -t1555 * t898 + t1560 * t933 + (-t1546 * t996 - t1550 * t997) * pkin(10);
t952 = t1044 * t1548 - t1544 * t997;
t1628 = qJ(2) * t952 + t1544 * t844 + t1548 * t830;
t1024 = t1138 * t1550 + t1546 * t1730;
t942 = pkin(3) * t1139 + t1089 * t1549 + t1545 * t1619;
t848 = -pkin(2) * t1024 - t1546 * t942 + t1550 * t1639;
t872 = -t1555 * t943 + t1560 * t958 + (-t1024 * t1546 - t1025 * t1550) * pkin(10);
t970 = -t1025 * t1544 + t1069 * t1548;
t1627 = qJ(2) * t970 + t1544 * t872 + t1548 * t848;
t1026 = t1142 * t1550 + t1546 * t1729;
t944 = pkin(3) * t1143 + t1091 * t1549 + t1545 * t1618;
t850 = -pkin(2) * t1026 - t1546 * t944 + t1550 * t1638;
t875 = -t1555 * t945 + t1560 * t959 + (-t1026 * t1546 - t1027 * t1550) * pkin(10);
t974 = -t1027 * t1544 + t1075 * t1548;
t1626 = qJ(2) * t974 + t1544 * t875 + t1548 * t850;
t1010 = pkin(3) * t1068 + t1102 * t1896;
t963 = t1067 * t1550 + t1546 * t1743;
t870 = -pkin(2) * t963 - t1010 * t1546 + t1550 * t1634;
t876 = -t1009 * t1555 + t1560 * t994 + (-t1546 * t963 - t1550 * t964) * pkin(10);
t919 = t1008 * t1548 - t1544 * t964;
t1625 = qJ(2) * t919 + t1544 * t876 + t1548 * t870;
t1041 = (-t1234 * t1545 - t1235 * t1549) * pkin(11) - t1718;
t1617 = pkin(11) * t1275 + t1102;
t1046 = -pkin(3) * t1234 + t1549 * t1617;
t1623 = pkin(10) * t1170 + t1041 * t1555 + t1046 * t1560;
t1072 = -pkin(3) * t1253 + t1180 * t1545 + t1549 * t1779;
t1123 = -t1885 + (-t1253 * t1545 - t1254 * t1549) * pkin(11);
t1622 = pkin(10) * t1202 + t1072 * t1560 + t1123 * t1555;
t1079 = -pkin(3) * t1261 + t1181 * t1545 + t1549 * t1778;
t1125 = -t1884 + (-t1261 * t1545 - t1262 * t1549) * pkin(11);
t1621 = pkin(10) * t1217 + t1079 * t1560 + t1125 * t1555;
t1620 = pkin(10) * t1397 + t1295;
t1056 = -t1122 * t1544 + t1170 * t1548;
t1045 = pkin(3) * t1235 + t1545 * t1617;
t1121 = t1234 * t1550 + t1546 * t1710;
t915 = -pkin(2) * t1121 - t1045 * t1546 + t1550 * t1623;
t938 = t1041 * t1560 - t1046 * t1555 + (-t1121 * t1546 - t1122 * t1550) * pkin(10);
t1616 = qJ(2) * t1056 + t1544 * t938 + t1548 * t915;
t1090 = -t1151 * t1544 + t1202 * t1548;
t1071 = pkin(3) * t1254 - t1180 * t1549 + t1545 * t1779;
t1150 = t1253 * t1550 + t1546 * t1707;
t948 = -pkin(2) * t1150 - t1071 * t1546 + t1550 * t1622;
t968 = -t1072 * t1555 + t1123 * t1560 + (-t1150 * t1546 - t1151 * t1550) * pkin(10);
t1615 = qJ(2) * t1090 + t1544 * t968 + t1548 * t948;
t1092 = -t1153 * t1544 + t1217 * t1548;
t1078 = pkin(3) * t1262 - t1181 * t1549 + t1545 * t1778;
t1152 = t1261 * t1550 + t1546 * t1704;
t950 = -pkin(2) * t1152 - t1078 * t1546 + t1550 * t1621;
t969 = -t1079 * t1555 + t1125 * t1560 + (-t1152 * t1546 - t1153 * t1550) * pkin(10);
t1614 = qJ(2) * t1092 + t1544 * t969 + t1548 * t950;
t1257 = -t1398 * t1550 + t1546 * t1693;
t1177 = (-t1257 * t1546 - t1258 * t1550) * pkin(10);
t1189 = -t1258 * t1544 + t1295 * t1548;
t1190 = -pkin(2) * t1257 + t1295 * t1897;
t1610 = qJ(2) * t1189 + t1177 * t1544 + t1190 * t1548;
t1350 = t1454 * t1550 + t1546 * t1678;
t1218 = (-t1350 * t1546 - t1351 * t1550) * pkin(10) - t1693;
t1226 = -pkin(2) * t1350 + t1550 * t1620;
t1306 = -t1351 * t1544 + t1397 * t1548;
t1609 = qJ(2) * t1306 + t1218 * t1544 + t1226 * t1548;
t1361 = t1433 * t1550 + t1546 * t1677;
t1239 = -pkin(2) * t1361 + t1348 * t1546 + t1550 * t1781;
t1276 = -t1877 + (-t1361 * t1546 - t1362 * t1550) * pkin(10);
t1326 = -t1362 * t1544 + t1408 * t1548;
t1608 = qJ(2) * t1326 + t1239 * t1548 + t1276 * t1544;
t1367 = t1436 * t1550 + t1546 * t1676;
t1250 = -pkin(2) * t1367 + t1349 * t1546 + t1550 * t1780;
t1277 = -t1876 + (-t1367 * t1546 - t1368 * t1550) * pkin(10);
t1327 = -t1368 * t1544 + t1418 * t1548;
t1607 = qJ(2) * t1327 + t1250 * t1548 + t1277 * t1544;
t1484 = t1510 * t1544 + t1511 * t1548;
t1606 = qJ(2) * t1484 + t1431;
t1530 = t1556 * qJDD(1) + t1561 * t1911;
t1517 = -pkin(9) * t1530 + g(3) * t1561;
t1516 = t1826 * t1854;
t1515 = (t1539 - t1542) * t1854;
t1506 = t1826 * t1806;
t1505 = (-t1539 * t1831 + t1799) * t1547;
t1504 = (-t1542 * t1831 - t1799) * t1547;
t1493 = t1539 * t1796 + t1922;
t1492 = t1542 * t1796 - t1922;
t1490 = -t1518 * t1544 + t1858;
t1488 = t1520 * t1548 - t1857;
t1485 = -t1509 * t1544 + t1512 * t1548;
t1476 = -t1509 * t1547 + t1551 * t1667;
t1475 = -t1510 * t1547 + t1551 * t1669;
t1474 = t1512 * t1547 + t1551 * t1668;
t1473 = -t1511 * t1547 + t1551 * t1666;
t1472 = t1509 * t1551 + t1547 * t1667;
t1471 = -t1512 * t1551 + t1547 * t1668;
t1467 = -t1515 * t1547 + t1551 * t1671;
t1466 = t1516 * t1547 + t1551 * t1670;
t1465 = -t1516 * t1551 + t1547 * t1670;
t1445 = -t1556 * t1476 + t1491 * t1561;
t1444 = -t1556 * t1474 + t1489 * t1561;
t1443 = t1476 * t1561 + t1556 * t1491;
t1442 = t1474 * t1561 + t1556 * t1489;
t1440 = -t1556 * t1466 + t1484 * t1561;
t1439 = t1466 * t1561 + t1556 * t1484;
t1428 = t1546 * t1654 + t1550 * t1642;
t1424 = t1498 * t1547 + t1551 * t1673;
t1423 = -t1498 * t1551 + t1547 * t1673;
t1420 = -t1860 + (-t1472 * t1547 - t1476 * t1551) * qJ(2);
t1419 = -t1861 + (-t1471 * t1547 - t1474 * t1551) * qJ(2);
t1407 = -pkin(1) * t1471 + t1479 * t1547 + t1551 * t1764;
t1406 = -pkin(1) * t1472 + t1480 * t1547 + t1551 * t1763;
t1404 = t1546 * t1581 + (-t1496 * t1550 + t1508 * t1842) * t1497;
t1402 = t1468 * t1842 + (t1497 * t1550 - t1508 * t1843) * t1496;
t1395 = -pkin(1) * t1465 + t1551 * t1606;
t1394 = -t1429 * t1544 + t1441 * t1548;
t1389 = (-t1465 * t1547 - t1466 * t1551) * qJ(2) - t1673;
t1378 = t1546 * t1675 + t1550 * t1593;
t1377 = t1438 * t1550 + t1546 * t1674;
t1371 = qJ(2) * t1431 * t1551 - pkin(1) * t1423;
t1370 = -t1556 * t1424 + t1431 * t1561;
t1369 = t1424 * t1561 + t1556 * t1431;
t1359 = t1469 * t1550 + t1546 * t1679;
t1357 = (-t1423 * t1547 - t1424 * t1551) * qJ(2);
t1356 = -t1405 * t1544 + t1432 * t1548;
t1355 = -t1403 * t1544 + t1430 * t1548;
t1346 = -t1428 * t1547 + t1551 * t1680;
t1345 = -t1380 * t1544 + t1427 * t1548;
t1344 = -t1379 * t1544 + t1426 * t1548;
t1321 = -t1404 * t1547 + t1551 * t1681;
t1320 = -t1402 * t1547 + t1551 * t1682;
t1310 = -t1360 * t1544 + t1396 * t1548;
t1298 = -t1378 * t1547 + t1551 * t1683;
t1297 = -t1377 * t1547 + t1551 * t1684;
t1293 = -t1367 * t1547 + t1551 * t1685;
t1292 = t1367 * t1551 + t1547 * t1685;
t1291 = -t1361 * t1547 + t1551 * t1690;
t1290 = t1361 * t1551 + t1547 * t1690;
t1263 = -t1359 * t1547 + t1551 * t1691;
t1260 = -t1350 * t1547 + t1551 * t1692;
t1259 = t1350 * t1551 + t1547 * t1692;
t1249 = pkin(2) * t1368 - t1349 * t1550 + t1546 * t1780;
t1238 = pkin(2) * t1362 - t1348 * t1550 + t1546 * t1781;
t1232 = t1342 * t1550 + t1546 * t1694;
t1230 = -t1556 * t1293 + t1327 * t1561;
t1229 = t1293 * t1561 + t1556 * t1327;
t1228 = -t1556 * t1291 + t1326 * t1561;
t1227 = t1291 * t1561 + t1556 * t1326;
t1225 = pkin(2) * t1351 + t1546 * t1620;
t1201 = -t1556 * t1260 + t1306 * t1561;
t1200 = t1260 * t1561 + t1556 * t1306;
t1191 = pkin(2) * t1258 + t1295 * t1898;
t1186 = t1302 * t1550 + t1546 * t1698;
t1185 = t1300 * t1550 + t1546 * t1699;
t1175 = -t1233 * t1544 + t1294 * t1548;
t1159 = t1265 * t1550 + t1546 * t1702;
t1158 = t1264 * t1550 + t1546 * t1703;
t1145 = -t1257 * t1547 + t1551 * t1705;
t1144 = t1257 * t1551 + t1547 * t1705;
t1141 = -t1188 * t1544 + t1246 * t1548;
t1140 = -t1187 * t1544 + t1245 * t1548;
t1136 = t1247 * t1550 + t1546 * t1709;
t1124 = -t1232 * t1547 + t1551 * t1711;
t1114 = -t1250 * t1544 + t1277 * t1548 + (-t1292 * t1547 - t1293 * t1551) * qJ(2);
t1112 = t1223 * t1550 + t1546 * t1712;
t1111 = -t1239 * t1544 + t1276 * t1548 + (-t1290 * t1547 - t1291 * t1551) * qJ(2);
t1104 = -t1161 * t1544 + t1222 * t1548;
t1103 = -t1160 * t1544 + t1221 * t1548;
t1088 = -pkin(1) * t1292 - t1249 * t1547 + t1551 * t1607;
t1085 = -pkin(1) * t1290 - t1238 * t1547 + t1551 * t1608;
t1081 = -t1556 * t1145 + t1189 * t1561;
t1080 = t1145 * t1561 + t1556 * t1189;
t1077 = -t1186 * t1547 + t1551 * t1716;
t1076 = -t1185 * t1547 + t1551 * t1717;
t1070 = t1218 * t1548 - t1226 * t1544 + (-t1259 * t1547 - t1260 * t1551) * qJ(2);
t1065 = -t1137 * t1544 + t1178 * t1548;
t1062 = t1172 * t1550 + t1546 * t1719;
t1061 = t1171 * t1550 + t1546 * t1720;
t1052 = -pkin(1) * t1259 - t1225 * t1547 + t1551 * t1609;
t1047 = -t1113 * t1544 + t1162 * t1548;
t1043 = -t1159 * t1547 + t1551 * t1723;
t1042 = -t1158 * t1547 + t1551 * t1724;
t1039 = -t1152 * t1547 + t1551 * t1725;
t1038 = t1152 * t1551 + t1547 * t1725;
t1036 = -t1150 * t1547 + t1551 * t1726;
t1035 = t1150 * t1551 + t1547 * t1726;
t1032 = t1147 * t1550 + t1546 * t1727;
t1031 = t1146 * t1550 + t1546 * t1728;
t1019 = -t1136 * t1547 + t1551 * t1731;
t1016 = -t1064 * t1544 + t1127 * t1548;
t1015 = -t1063 * t1544 + t1126 * t1548;
t1014 = -t1121 * t1547 + t1551 * t1734;
t1013 = t1121 * t1551 + t1547 * t1734;
t1005 = t1177 * t1548 - t1190 * t1544 + (-t1144 * t1547 - t1145 * t1551) * qJ(2);
t1003 = t1109 * t1550 + t1546 * t1738;
t1000 = -t1112 * t1547 + t1551 * t1737;
t995 = -pkin(1) * t1144 - t1191 * t1547 + t1551 * t1610;
t992 = t1098 * t1550 + t1546 * t1741;
t989 = -t1556 * t1039 + t1092 * t1561;
t988 = t1039 * t1561 + t1556 * t1092;
t984 = -t1556 * t1036 + t1090 * t1561;
t983 = t1036 * t1561 + t1556 * t1090;
t977 = -t1034 * t1544 + t1087 * t1548;
t976 = -t1033 * t1544 + t1086 * t1548;
t966 = -t1062 * t1547 + t1551 * t1744;
t965 = -t1061 * t1547 + t1551 * t1745;
t961 = -t1556 * t1014 + t1056 * t1561;
t960 = t1014 * t1561 + t1556 * t1056;
t957 = -t1004 * t1544 + t1053 * t1548;
t954 = t1049 * t1550 + t1546 * t1746;
t953 = t1048 * t1550 + t1546 * t1747;
t951 = t1040 * t1548 - t1544 * t993;
t949 = pkin(2) * t1153 + t1078 * t1550 + t1546 * t1621;
t947 = pkin(2) * t1151 + t1071 * t1550 + t1546 * t1622;
t940 = -t1032 * t1547 + t1551 * t1748;
t939 = -t1031 * t1547 + t1551 * t1749;
t935 = -t1026 * t1547 + t1551 * t1750;
t934 = t1026 * t1551 + t1547 * t1750;
t928 = t1021 * t1550 + t1546 * t1752;
t927 = t1020 * t1550 + t1546 * t1753;
t926 = -t1024 * t1547 + t1551 * t1751;
t925 = t1024 * t1551 + t1547 * t1751;
t914 = pkin(2) * t1122 + t1045 * t1550 + t1546 * t1623;
t910 = -t1003 * t1547 + t1551 * t1757;
t909 = -t1544 * t956 + t1548 * t999;
t908 = -t1544 * t955 + t1548 * t998;
t907 = -t1547 * t996 + t1551 * t1758;
t906 = t1547 * t1758 + t1551 * t996;
t905 = -t1547 * t992 + t1551 * t1759;
t902 = t1546 * t1760 + t1550 * t990;
t895 = -t1556 * t935 + t1561 * t974;
t894 = t1556 * t974 + t1561 * t935;
t892 = -t1544 * t930 + t1548 * t972;
t891 = -t1544 * t929 + t1548 * t971;
t890 = -t1556 * t926 + t1561 * t970;
t889 = t1556 * t970 + t1561 * t926;
t887 = -t1547 * t963 + t1551 * t1762;
t886 = t1547 * t1762 + t1551 * t963;
t884 = -t1547 * t954 + t1551 * t1768;
t883 = -t1547 * t953 + t1551 * t1769;
t882 = -t1556 * t907 + t1561 * t952;
t881 = t1556 * t952 + t1561 * t907;
t880 = -t1544 * t950 + t1548 * t969 + (-t1038 * t1547 - t1039 * t1551) * qJ(2);
t878 = -t1544 * t948 + t1548 * t968 + (-t1035 * t1547 - t1036 * t1551) * qJ(2);
t877 = -t1544 * t903 + t1548 * t946;
t869 = pkin(2) * t964 + t1010 * t1550 + t1546 * t1634;
t865 = -t1547 * t928 + t1551 * t1770;
t864 = -t1547 * t927 + t1551 * t1771;
t863 = -pkin(1) * t1038 - t1547 * t949 + t1551 * t1614;
t862 = -t1547 * t922 + t1551 * t1772;
t861 = t1547 * t1772 + t1551 * t922;
t860 = -pkin(1) * t1035 - t1547 * t947 + t1551 * t1615;
t858 = -t1556 * t887 + t1561 * t919;
t857 = t1556 * t919 + t1561 * t887;
t856 = -t1547 * t917 + t1551 * t1773;
t855 = t1547 * t1773 + t1551 * t917;
t854 = -t1544 * t915 + t1548 * t938 + (-t1013 * t1547 - t1014 * t1551) * qJ(2);
t849 = pkin(2) * t1027 + t1546 * t1638 + t1550 * t944;
t847 = pkin(2) * t1025 + t1546 * t1639 + t1550 * t942;
t839 = -t1547 * t902 + t1551 * t1774;
t838 = -t1547 * t899 + t1551 * t1775;
t837 = t1547 * t1775 + t1551 * t899;
t835 = -pkin(1) * t1013 - t1547 * t914 + t1551 * t1616;
t832 = -t1556 * t862 + t1561 * t888;
t831 = t1556 * t888 + t1561 * t862;
t829 = pkin(2) * t997 + t1546 * t1640 + t1550 * t897;
t828 = -t1556 * t856 + t1561 * t885;
t827 = t1556 * t885 + t1561 * t856;
t823 = -t1556 * t838 + t1561 * t874;
t822 = t1556 * t874 + t1561 * t838;
t821 = -t1547 * t866 + t1551 * t1776;
t820 = t1547 * t1776 + t1551 * t866;
t819 = -t1544 * t850 + t1548 * t875 + (-t1547 * t934 - t1551 * t935) * qJ(2);
t818 = -t1544 * t848 + t1548 * t872 + (-t1547 * t925 - t1551 * t926) * qJ(2);
t815 = -t1544 * t870 + t1548 * t876 + (-t1547 * t886 - t1551 * t887) * qJ(2);
t812 = -pkin(1) * t934 - t1547 * t849 + t1551 * t1626;
t811 = -pkin(1) * t886 - t1547 * t869 + t1551 * t1625;
t810 = -pkin(1) * t925 - t1547 * t847 + t1551 * t1627;
t809 = -t1544 * t830 + t1548 * t844 + (-t1547 * t906 - t1551 * t907) * qJ(2);
t808 = -t1556 * t821 + t1561 * t833;
t807 = t1556 * t833 + t1561 * t821;
t804 = pkin(2) * t923 + t1546 * t1645 + t1550 * t842;
t802 = pkin(2) * t918 + t1546 * t1646 + t1550 * t840;
t798 = pkin(2) * t867 + t1546 * t1644 + t1550 * t852;
t796 = -pkin(1) * t906 - t1547 * t829 + t1551 * t1628;
t792 = pkin(2) * t900 + t1546 * t1647 + t1550 * t825;
t791 = -t1547 * t813 + t1551 * t1777;
t790 = t1547 * t1777 + t1551 * t813;
t789 = -t1544 * t805 + t1548 * t817 + (-t1547 * t861 - t1551 * t862) * qJ(2);
t788 = -t1544 * t803 + t1548 * t816 + (-t1547 * t855 - t1551 * t856) * qJ(2);
t787 = -pkin(1) * t861 - t1547 * t804 + t1551 * t1629;
t786 = -pkin(1) * t855 - t1547 * t802 + t1551 * t1630;
t785 = -t1544 * t793 + t1548 * t801 + (-t1547 * t837 - t1551 * t838) * qJ(2);
t784 = -t1556 * t791 + t1561 * t797;
t783 = t1556 * t797 + t1561 * t791;
t782 = -t1544 * t799 + t1548 * t806 + (-t1547 * t820 - t1551 * t821) * qJ(2);
t780 = -pkin(1) * t820 - t1547 * t798 + t1551 * t1631;
t779 = -pkin(1) * t837 - t1547 * t792 + t1551 * t1632;
t777 = pkin(2) * t814 + t1546 * t1648 + t1550 * t794;
t776 = -t1544 * t778 + t1548 * t781 + (-t1547 * t790 - t1551 * t791) * qJ(2);
t775 = -pkin(1) * t790 - t1547 * t777 + t1551 * t1633;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1530, -t1531, 0, t1502, 0, 0, 0, 0, 0, 0, t1444, t1445, t1440, t1370, 0, 0, 0, 0, 0, 0, t1228, t1230, t1201, t1081, 0, 0, 0, 0, 0, 0, t984, t989, t961, t858, 0, 0, 0, 0, 0, 0, t890, t895, t882, t808, 0, 0, 0, 0, 0, 0, t828, t832, t823, t784; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1531, -t1530, 0, t1501, 0, 0, 0, 0, 0, 0, t1442, t1443, t1439, t1369, 0, 0, 0, 0, 0, 0, t1227, t1229, t1200, t1080, 0, 0, 0, 0, 0, 0, t983, t988, t960, t857, 0, 0, 0, 0, 0, 0, t889, t894, t881, t807, 0, 0, 0, 0, 0, 0, t827, t831, t822, t783; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1471, t1472, t1465, t1423, 0, 0, 0, 0, 0, 0, t1290, t1292, t1259, t1144, 0, 0, 0, 0, 0, 0, t1035, t1038, t1013, t886, 0, 0, 0, 0, 0, 0, t925, t934, t906, t820, 0, 0, 0, 0, 0, 0, t855, t861, t837, t790; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1531, 0, -t1530, 0, t1784, -t1517, -t1501, -pkin(9) * t1501, -t1556 * t1493 + t1505 * t1561, -t1556 * t1467 + t1485 * t1561, -t1556 * t1475 + t1490 * t1561, -t1556 * t1492 + t1504 * t1561, -t1556 * t1473 + t1488 * t1561, t1506 * t1561 + t1556 * t1796, -pkin(9) * t1442 - t1556 * t1407 + t1419 * t1561, -pkin(9) * t1443 - t1556 * t1406 + t1420 * t1561, -pkin(9) * t1439 + t1389 * t1561 - t1556 * t1395, -pkin(9) * t1369 + t1357 * t1561 - t1556 * t1371, -t1556 * t1321 + t1356 * t1561, -t1556 * t1263 + t1310 * t1561, -t1556 * t1297 + t1344 * t1561, -t1556 * t1320 + t1355 * t1561, -t1556 * t1298 + t1345 * t1561, -t1556 * t1346 + t1394 * t1561, -pkin(9) * t1227 - t1556 * t1085 + t1111 * t1561, -pkin(9) * t1229 - t1556 * t1088 + t1114 * t1561, -pkin(9) * t1200 - t1556 * t1052 + t1070 * t1561, -pkin(9) * t1080 + t1005 * t1561 - t1556 * t995, -t1556 * t1077 + t1141 * t1561, -t1556 * t1019 + t1065 * t1561, -t1556 * t1042 + t1103 * t1561, -t1556 * t1076 + t1140 * t1561, -t1556 * t1043 + t1104 * t1561, -t1556 * t1124 + t1175 * t1561, -pkin(9) * t983 - t1556 * t860 + t1561 * t878, -pkin(9) * t988 - t1556 * t863 + t1561 * t880, -pkin(9) * t960 - t1556 * t835 + t1561 * t854, -pkin(9) * t857 - t1556 * t811 + t1561 * t815, t1016 * t1561 - t1556 * t966, -t1556 * t910 + t1561 * t957, -t1556 * t939 + t1561 * t976, t1015 * t1561 - t1556 * t965, -t1556 * t940 + t1561 * t977, -t1556 * t1000 + t1047 * t1561, -pkin(9) * t889 - t1556 * t810 + t1561 * t818, -pkin(9) * t894 - t1556 * t812 + t1561 * t819, -pkin(9) * t881 - t1556 * t796 + t1561 * t809, -pkin(9) * t807 - t1556 * t780 + t1561 * t782, -t1556 * t884 + t1561 * t909, -t1556 * t839 + t1561 * t877, -t1556 * t864 + t1561 * t891, -t1556 * t883 + t1561 * t908, -t1556 * t865 + t1561 * t892, -t1556 * t905 + t1561 * t951, -pkin(9) * t827 - t1556 * t786 + t1561 * t788, -pkin(9) * t831 - t1556 * t787 + t1561 * t789, -pkin(9) * t822 - t1556 * t779 + t1561 * t785, -pkin(9) * t783 - t1556 * t775 + t1561 * t776; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1530, 0, t1531, 0, t1517, t1784, t1502, pkin(9) * t1502, t1493 * t1561 + t1556 * t1505, t1467 * t1561 + t1556 * t1485, t1475 * t1561 + t1556 * t1490, t1492 * t1561 + t1556 * t1504, t1473 * t1561 + t1556 * t1488, t1556 * t1506 - t1561 * t1796, pkin(9) * t1444 + t1407 * t1561 + t1556 * t1419, pkin(9) * t1445 + t1406 * t1561 + t1556 * t1420, pkin(9) * t1440 + t1556 * t1389 + t1395 * t1561, pkin(9) * t1370 + t1556 * t1357 + t1371 * t1561, t1321 * t1561 + t1556 * t1356, t1263 * t1561 + t1556 * t1310, t1297 * t1561 + t1556 * t1344, t1320 * t1561 + t1556 * t1355, t1298 * t1561 + t1556 * t1345, t1346 * t1561 + t1556 * t1394, pkin(9) * t1228 + t1085 * t1561 + t1556 * t1111, pkin(9) * t1230 + t1088 * t1561 + t1556 * t1114, pkin(9) * t1201 + t1052 * t1561 + t1556 * t1070, pkin(9) * t1081 + t1556 * t1005 + t1561 * t995, t1077 * t1561 + t1556 * t1141, t1019 * t1561 + t1556 * t1065, t1042 * t1561 + t1556 * t1103, t1076 * t1561 + t1556 * t1140, t1043 * t1561 + t1556 * t1104, t1124 * t1561 + t1556 * t1175, pkin(9) * t984 + t1556 * t878 + t1561 * t860, pkin(9) * t989 + t1556 * t880 + t1561 * t863, pkin(9) * t961 + t1556 * t854 + t1561 * t835, pkin(9) * t858 + t1556 * t815 + t1561 * t811, t1556 * t1016 + t1561 * t966, t1556 * t957 + t1561 * t910, t1556 * t976 + t1561 * t939, t1556 * t1015 + t1561 * t965, t1556 * t977 + t1561 * t940, t1000 * t1561 + t1556 * t1047, pkin(9) * t890 + t1556 * t818 + t1561 * t810, pkin(9) * t895 + t1556 * t819 + t1561 * t812, pkin(9) * t882 + t1556 * t809 + t1561 * t796, pkin(9) * t808 + t1556 * t782 + t1561 * t780, t1556 * t909 + t1561 * t884, t1556 * t877 + t1561 * t839, t1556 * t891 + t1561 * t864, t1556 * t908 + t1561 * t883, t1556 * t892 + t1561 * t865, t1556 * t951 + t1561 * t905, pkin(9) * t828 + t1556 * t788 + t1561 * t786, pkin(9) * t832 + t1556 * t789 + t1561 * t787, pkin(9) * t823 + t1556 * t785 + t1561 * t779, pkin(9) * t784 + t1556 * t776 + t1561 * t775; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1533, t1534, 0, 0, t1539 * t1825, t1515 * t1551 + t1547 * t1671, t1510 * t1551 + t1547 * t1669, t1542 * t1825, t1511 * t1551 + t1547 * t1666, t1543 * qJDD(1), pkin(1) * t1474 - t1479 * t1551 + t1547 * t1764, pkin(1) * t1476 - t1480 * t1551 + t1547 * t1763, pkin(1) * t1466 + t1547 * t1606, pkin(1) * t1424 + t1431 * t1892, t1404 * t1551 + t1547 * t1681, t1359 * t1551 + t1547 * t1691, t1377 * t1551 + t1547 * t1684, t1402 * t1551 + t1547 * t1682, t1378 * t1551 + t1547 * t1683, t1428 * t1551 + t1547 * t1680, pkin(1) * t1291 + t1238 * t1551 + t1547 * t1608, pkin(1) * t1293 + t1249 * t1551 + t1547 * t1607, pkin(1) * t1260 + t1225 * t1551 + t1547 * t1609, pkin(1) * t1145 + t1191 * t1551 + t1547 * t1610, t1186 * t1551 + t1547 * t1716, t1136 * t1551 + t1547 * t1731, t1158 * t1551 + t1547 * t1724, t1185 * t1551 + t1547 * t1717, t1159 * t1551 + t1547 * t1723, t1232 * t1551 + t1547 * t1711, pkin(1) * t1036 + t1547 * t1615 + t1551 * t947, pkin(1) * t1039 + t1547 * t1614 + t1551 * t949, pkin(1) * t1014 + t1547 * t1616 + t1551 * t914, pkin(1) * t887 + t1547 * t1625 + t1551 * t869, t1062 * t1551 + t1547 * t1744, t1003 * t1551 + t1547 * t1757, t1031 * t1551 + t1547 * t1749, t1061 * t1551 + t1547 * t1745, t1032 * t1551 + t1547 * t1748, t1112 * t1551 + t1547 * t1737, pkin(1) * t926 + t1547 * t1627 + t1551 * t847, pkin(1) * t935 + t1547 * t1626 + t1551 * t849, pkin(1) * t907 + t1547 * t1628 + t1551 * t829, pkin(1) * t821 + t1547 * t1631 + t1551 * t798, t1547 * t1768 + t1551 * t954, t1547 * t1774 + t1551 * t902, t1547 * t1771 + t1551 * t927, t1547 * t1769 + t1551 * t953, t1547 * t1770 + t1551 * t928, t1547 * t1759 + t1551 * t992, pkin(1) * t856 + t1547 * t1630 + t1551 * t802, pkin(1) * t862 + t1547 * t1629 + t1551 * t804, pkin(1) * t838 + t1547 * t1632 + t1551 * t792, pkin(1) * t791 + t1547 * t1633 + t1551 * t777;];
tauB_reg  = t1;
