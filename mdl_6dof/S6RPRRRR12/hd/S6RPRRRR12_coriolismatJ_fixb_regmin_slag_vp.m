% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x35]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRR12_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR12_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR12_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RPRRRR12_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:00:49
% EndTime: 2019-03-09 08:03:04
% DurationCPUTime: 96.37s
% Computational Cost: add. (100673->1845), mult. (291057->2589), div. (0->0), fcn. (346603->16), ass. (0->1227)
t1146 = sin(qJ(5));
t1831 = cos(pkin(8));
t1462 = t1146 * t1831;
t1147 = sin(qJ(4));
t1142 = sin(pkin(8));
t1150 = cos(qJ(5));
t1607 = t1142 * t1150;
t1482 = t1147 * t1607;
t1069 = t1462 + t1482;
t1852 = t1069 / 0.2e1;
t1608 = t1142 * t1147;
t1493 = t1146 * t1608;
t1067 = -t1150 * t1831 + t1493;
t1854 = t1067 / 0.2e1;
t1144 = cos(pkin(14));
t1143 = sin(pkin(6));
t1830 = sin(pkin(7));
t1464 = t1143 * t1830;
t1832 = cos(pkin(7));
t1833 = cos(pkin(6));
t1313 = t1144 * t1464 - t1832 * t1833;
t1141 = sin(pkin(14));
t1148 = sin(qJ(3));
t1405 = t1833 * t1830;
t1867 = cos(qJ(3));
t1437 = t1832 * t1867;
t978 = t1867 * t1405 + (-t1141 * t1148 + t1144 * t1437) * t1143;
t955 = t978 * t1142;
t1212 = t1313 * t1831 + t955;
t1253 = t1142 * t1313;
t1501 = t1831 * t978;
t1189 = t1501 - t1253;
t1151 = cos(qJ(4));
t1460 = t1148 * t1832;
t979 = t1148 * t1405 + (t1141 * t1867 + t1144 * t1460) * t1143;
t1638 = t979 * t1151;
t724 = t1147 * t1189 + t1638;
t568 = t1146 * t724 + t1150 * t1212;
t1190 = t1212 * t1146;
t1659 = t724 * t1150;
t570 = -t1190 + t1659;
t303 = t1852 * t568 + t1854 * t570;
t1930 = t303 * qJD(5);
t1018 = (-pkin(10) * t1141 * t1830 - pkin(2) * t1144 - pkin(1)) * t1143;
t1436 = t1830 * t1867;
t1465 = t1141 * t1833;
t1605 = t1143 * t1144;
t1576 = pkin(1) * t1465 + qJ(2) * t1605;
t961 = (t1605 * t1832 + t1405) * pkin(10) + t1576;
t1463 = t1144 * t1833;
t1121 = pkin(1) * t1463;
t1609 = t1141 * t1143;
t980 = t1833 * pkin(2) + t1121 + (-pkin(10) * t1832 - qJ(2)) * t1609;
t682 = -t1018 * t1436 + t1148 * t961 - t980 * t1437;
t1187 = -pkin(3) * t1313 - t682;
t826 = t1018 * t1832 - t1830 * t980;
t1221 = -t978 * pkin(3) + t826;
t1445 = t979 * t1831 * pkin(11);
t1761 = t1142 * t979;
t1929 = t1831 * (-t1445 + t1187) + t1142 * (-pkin(11) * t1761 + t1221);
t1839 = t1150 / 0.2e1;
t1845 = -t1146 / 0.2e1;
t1291 = t1067 * t1845 + t1069 * t1839;
t1616 = t1067 * qJD(3);
t1234 = qJD(1) * t303 - qJD(4) * t1291 + t1069 * t1616;
t1522 = t568 * t1845;
t1301 = t1839 * t570 + t1522;
t1776 = qJD(1) * t570;
t1238 = qJD(3) * t303 - qJD(4) * t1301 + t568 * t1776;
t1404 = t1831 * t1832;
t1208 = -t1142 * t1436 + t1404;
t1928 = t1208 / 0.2e1;
t1927 = t1212 / 0.2e1;
t1145 = sin(qJ(6));
t1461 = t1147 * t1831;
t1444 = pkin(3) * t1461;
t1606 = t1142 * t1151;
t1072 = pkin(11) * t1606 + t1444;
t1056 = pkin(12) * t1831 + t1072;
t1397 = -pkin(4) * t1151 - pkin(12) * t1147;
t1363 = -pkin(3) + t1397;
t1284 = t1363 * t1142;
t877 = t1146 * t1056 - t1150 * t1284;
t1880 = t877 / 0.2e1;
t860 = pkin(5) * t1606 + t877;
t1881 = -t860 / 0.2e1;
t1550 = t1880 + t1881;
t1926 = t1145 * t1550;
t1458 = t1151 * t1831;
t722 = t1147 * t979 + t1151 * t1253 - t1458 * t978;
t1419 = t722 * pkin(4) - t724 * pkin(12);
t342 = -t1142 * t1187 + t1221 * t1831;
t1154 = t1419 + t342;
t683 = -t1148 * (t1018 * t1830 + t1832 * t980) - t1867 * t961;
t566 = pkin(11) * t1189 - t683;
t250 = t1147 * t1929 + t1151 * t566;
t236 = -pkin(12) * t1212 + t250;
t127 = t1146 * t236 - t1150 * t1154;
t109 = -pkin(5) * t722 + t127;
t1907 = -t109 / 0.2e1;
t1553 = t127 / 0.2e1 + t1907;
t1925 = t1145 * t1553;
t1477 = -t1606 / 0.2e1;
t1663 = t722 * qJD(1);
t1924 = t1146 * (t1663 / 0.2e1 + qJD(3) * t1477);
t1149 = cos(qJ(6));
t1923 = t1149 * t1550;
t1922 = t1149 * t1553;
t1837 = t1151 / 0.2e1;
t1843 = -t1147 / 0.2e1;
t1250 = (t1837 * t724 + t1843 * t722) * t1142;
t1921 = t1250 * qJD(4);
t1920 = t1291 * qJD(5);
t1919 = t1301 * qJD(5);
t1185 = t1208 * t1142;
t1359 = -t1436 / 0.2e1;
t1918 = t1185 / 0.2e1 + t1359;
t1403 = t1831 * t1830;
t1917 = t1832 * t1142 + t1867 * t1403;
t1600 = t1145 * t1146;
t1475 = -t1600 / 0.2e1;
t1661 = t722 * t1149;
t1672 = t570 * t1145;
t391 = -t1661 + t1672;
t1687 = t391 * t1150;
t1916 = t568 * t1475 + t1687 / 0.2e1;
t902 = t1149 * t1067;
t1469 = -t902 / 0.2e1;
t1488 = t1145 * t1606;
t1589 = t1149 * t1069;
t990 = -t1488 + t1589;
t1633 = t990 * t1150;
t1915 = t1146 * t1469 + t1633 / 0.2e1;
t1484 = t1149 * t1606;
t1602 = t1145 * t1069;
t988 = t1484 + t1602;
t1636 = t988 * t1150;
t1271 = t1067 * t1475 + t1636 / 0.2e1;
t1593 = t1146 * t1149;
t1472 = -t1593 / 0.2e1;
t1442 = t568 * t1472;
t1662 = t722 * t1145;
t1670 = t570 * t1149;
t393 = t1662 + t1670;
t1683 = t393 * t1150;
t1914 = t1683 / 0.2e1 + t1442;
t598 = -t1445 - t682;
t596 = t1147 * t598;
t599 = -pkin(11) * t1501 + t683;
t817 = pkin(3) * t979 - pkin(11) * t955;
t298 = t1151 * (t1142 * t817 + t1831 * t599) - t596;
t1134 = t1142 ^ 2;
t1611 = t1134 * t1151;
t1494 = t1147 * t1611;
t1451 = qJD(1) * t1250 + qJD(3) * t1494;
t1315 = -qJD(3) * t1250 + t724 * t1663;
t1585 = t1150 * qJD(4);
t1126 = t1146 * t1585;
t1296 = qJD(1) * t1301 + qJD(3) * t1291 + t1126;
t1911 = t568 ^ 2;
t1910 = t722 ^ 2;
t1909 = t1067 ^ 2;
t1908 = pkin(12) / 0.2e1;
t1906 = -t391 / 0.2e1;
t1905 = t391 / 0.2e1;
t1904 = -t393 / 0.2e1;
t1586 = t1149 * t1150;
t1660 = t724 * t1145;
t463 = -t1586 * t722 + t1660;
t1903 = -t463 / 0.2e1;
t1639 = t979 * t1146;
t1435 = t979 * t1461;
t1641 = t978 * t1151;
t805 = -t1435 + t1641;
t1652 = t805 * t1150;
t661 = t1142 * t1639 + t1652;
t1666 = t661 * t1145;
t1642 = t978 * t1147;
t926 = t979 * t1458;
t804 = t926 + t1642;
t783 = t804 * t1149;
t490 = -t783 + t1666;
t1902 = -t490 / 0.2e1;
t1901 = t490 / 0.2e1;
t1654 = t804 * t1145;
t1664 = t661 * t1149;
t491 = t1654 + t1664;
t1900 = -t491 / 0.2e1;
t1899 = -t568 / 0.2e1;
t1898 = t568 / 0.2e1;
t1897 = -t570 / 0.2e1;
t1070 = -pkin(3) * t1458 + pkin(11) * t1608;
t1055 = -pkin(4) * t1831 + t1070;
t1396 = t1067 * pkin(5) - t1069 * pkin(13);
t1186 = t1055 + t1396;
t1583 = t1150 * t1056;
t861 = t1583 + (-t1151 * pkin(13) + t1146 * t1363) * t1142;
t656 = t1145 * t861 - t1149 * t1186;
t1896 = -t656 / 0.2e1;
t657 = t1145 * t1186 + t1149 * t861;
t1895 = t657 / 0.2e1;
t1653 = t805 * t1146;
t660 = -t1607 * t979 + t1653;
t1894 = -t660 / 0.2e1;
t1893 = -t661 / 0.2e1;
t1892 = -t722 / 0.2e1;
t1891 = t722 / 0.2e1;
t1890 = -t724 / 0.2e1;
t1459 = t1148 * t1830;
t1411 = t1147 * t1459;
t981 = -t1151 * t1917 + t1411;
t1720 = t1149 * t981;
t1410 = t1151 * t1459;
t982 = t1147 * t1917 + t1410;
t857 = t1146 * t1208 + t1150 * t982;
t1750 = t1145 * t857;
t728 = -t1720 + t1750;
t1889 = -t728 / 0.2e1;
t1888 = t728 / 0.2e1;
t1726 = t1149 * t857;
t1744 = t1145 * t981;
t729 = t1726 + t1744;
t1887 = -t729 / 0.2e1;
t1886 = t729 / 0.2e1;
t856 = t1146 * t982 - t1150 * t1208;
t1885 = -t856 / 0.2e1;
t1884 = t856 / 0.2e1;
t1883 = -t857 / 0.2e1;
t1882 = t857 / 0.2e1;
t878 = t1146 * t1284 + t1583;
t1879 = t878 / 0.2e1;
t1071 = (pkin(4) * t1147 - pkin(12) * t1151) * t1142;
t1581 = t1150 * t1071;
t1594 = t1146 * t1070;
t1355 = t1581 + t1594;
t883 = -pkin(5) * t1608 - t1355;
t1878 = -t883 / 0.2e1;
t1877 = t926 / 0.2e1;
t1414 = t1142 * t1459;
t1349 = t1148 * t1403;
t1288 = t1147 * t1349;
t1034 = t1151 * t1436 - t1288;
t1595 = t1146 * t1034;
t927 = -t1150 * t1414 + t1595;
t1876 = -t927 / 0.2e1;
t1875 = -t981 / 0.2e1;
t1874 = t981 / 0.2e1;
t1873 = -t982 / 0.2e1;
t1872 = t982 / 0.2e1;
t1871 = -t988 / 0.2e1;
t1870 = t988 / 0.2e1;
t1869 = -t990 / 0.2e1;
t1868 = t990 / 0.2e1;
t1866 = pkin(12) * t722;
t1865 = pkin(13) * t568;
t1864 = t722 * pkin(13);
t1863 = qJD(6) / 0.2e1;
t1287 = t1151 * t1349;
t1033 = t1147 * t1436 + t1287;
t1862 = t1033 / 0.2e1;
t1113 = t1149 * t1608;
t1037 = t1150 * t1488 - t1113;
t1861 = -t1037 / 0.2e1;
t1860 = t1037 / 0.2e1;
t1580 = t1150 * t1151;
t1599 = t1145 * t1147;
t1038 = (t1149 * t1580 + t1599) * t1142;
t1859 = -t1038 / 0.2e1;
t1858 = t1038 / 0.2e1;
t1395 = -pkin(5) * t1150 - pkin(13) * t1146;
t1362 = -pkin(4) + t1395;
t1597 = t1145 * t1150;
t1567 = pkin(12) * t1597;
t1039 = -t1149 * t1362 + t1567;
t1857 = -t1039 / 0.2e1;
t1856 = t1055 / 0.2e1;
t1855 = -t1067 / 0.2e1;
t1853 = -t1069 / 0.2e1;
t1851 = -t1070 / 0.2e1;
t1850 = -t1072 / 0.2e1;
t1834 = t1150 * pkin(13);
t1835 = t1146 * pkin(5);
t1110 = -t1834 + t1835;
t1849 = t1110 / 0.2e1;
t1848 = t1113 / 0.2e1;
t1847 = -t1145 / 0.2e1;
t1846 = t1145 / 0.2e1;
t1844 = t1146 / 0.2e1;
t1842 = t1147 / 0.2e1;
t1841 = t1149 / 0.2e1;
t1840 = -t1150 / 0.2e1;
t1838 = -t1151 / 0.2e1;
t1836 = pkin(13) * t1067;
t128 = t1146 * t1154 + t1150 * t236;
t110 = t128 + t1864;
t1418 = t568 * pkin(5) - t570 * pkin(13);
t249 = t1147 * t566 - t1151 * t1929;
t235 = pkin(4) * t1212 + t249;
t1159 = t1418 + t235;
t55 = t110 * t1145 - t1149 * t1159;
t31 = -t109 * t391 + t55 * t568;
t1829 = qJD(1) * t31;
t56 = t1149 * t110 + t1145 * t1159;
t32 = t109 * t393 - t56 * t568;
t1828 = qJD(1) * t32;
t57 = t127 * t722 - t235 * t568;
t1827 = qJD(1) * t57;
t58 = -t128 * t722 + t235 * t570;
t1826 = qJD(1) * t58;
t319 = pkin(5) * t570 + t1865;
t1731 = t1149 * t319;
t1809 = -t109 + t127;
t13 = t128 * t391 - t55 * t570 + (t1145 * t1809 + t1731) * t568;
t1825 = t13 * qJD(1);
t1755 = t1145 * t319;
t14 = t128 * t393 - t56 * t570 + (t1149 * t1809 - t1755) * t568;
t1824 = t14 * qJD(1);
t436 = -t1142 * t599 + t1831 * t817;
t297 = pkin(4) * t804 - pkin(12) * t805 + t436;
t1717 = t1150 * t297;
t587 = t599 * t1461;
t597 = t1151 * t598;
t786 = t817 * t1608;
t299 = t597 + t587 + t786;
t280 = pkin(12) * t1761 + t299;
t1740 = t1146 * t280;
t166 = t1717 - t1740;
t151 = -pkin(5) * t804 - t166;
t279 = -pkin(4) * t1761 - t298;
t211 = t660 * pkin(5) - t661 * pkin(13) + t279;
t1732 = t1149 * t211;
t274 = t1150 * t280;
t296 = t1146 * t297;
t167 = t274 + t296;
t152 = pkin(13) * t804 + t167;
t1759 = t1145 * t152;
t63 = t1732 - t1759;
t15 = t109 * t490 + t151 * t391 - t55 * t660 + t568 * t63;
t1823 = t15 * qJD(1);
t1735 = t1149 * t152;
t1756 = t1145 * t211;
t64 = t1735 + t1756;
t16 = t109 * t491 + t151 * t393 - t56 * t660 - t568 * t64;
t1822 = t16 * qJD(1);
t489 = pkin(4) * t724 + t1866;
t1716 = t1150 * t489;
t1741 = t1146 * t249;
t1368 = t1716 + t1741;
t172 = -pkin(5) * t724 - t1368;
t714 = t724 * t1149;
t462 = -t1597 * t722 - t714;
t467 = t1146 * t722;
t198 = -t1110 * t722 + t250;
t1733 = t1149 * t198;
t248 = t1150 * t249;
t484 = t1146 * t489;
t1808 = -t248 + t484;
t173 = pkin(13) * t724 + t1808;
t1758 = t1145 * t173;
t71 = t1733 - t1758;
t17 = t109 * t462 + t172 * t391 + t467 * t55 + t568 * t71;
t1821 = t17 * qJD(1);
t1734 = t1149 * t173;
t1757 = t1145 * t198;
t72 = t1734 + t1757;
t18 = t109 * t463 + t172 * t393 + t467 * t56 - t568 * t72;
t1820 = t18 * qJD(1);
t33 = -t127 * t804 + t166 * t722 + t235 * t660 + t279 * t568;
t1819 = t33 * qJD(1);
t34 = -t128 * t804 - t167 * t722 + t235 * t661 + t279 * t570;
t1818 = t34 * qJD(1);
t35 = -t127 * t724 + t250 * t568 + (t1716 + (-t235 + t249) * t1146) * t722;
t1817 = t35 * qJD(1);
t1699 = t235 * t1150;
t36 = -t128 * t724 + t250 * t570 + (-t1699 - t1808) * t722;
t1816 = t36 * qJD(1);
t59 = -t1212 * t298 - t1761 * t249 + t342 * t804 + t436 * t722;
t1815 = t59 * qJD(1);
t60 = t1212 * t299 - t1761 * t250 + t342 * t805 + t436 * t724;
t1814 = t60 * qJD(1);
t1590 = t1149 * t1033;
t1352 = t1146 * t1414;
t1584 = t1150 * t1034;
t928 = t1352 + t1584;
t1747 = t1145 * t928;
t1365 = t1590 - t1747;
t1166 = t1365 * t1899 + t1876 * t391 + t1885 * t490 + t1888 * t660;
t1416 = t1141 * t1464;
t1351 = t1142 * t1416;
t1360 = t1141 * t1437;
t1604 = t1144 * t1148;
t1030 = (-t1360 - t1604) * t1143;
t1455 = t1831 * t1030;
t1220 = t1351 + t1455;
t1409 = t1141 * t1460;
t1549 = t1867 * t1144;
t1031 = (-t1409 + t1549) * t1143;
t1591 = t1147 * t1031;
t815 = -t1151 * t1220 + t1591;
t1727 = t1149 * t815;
t1579 = t1151 * t1031;
t816 = t1147 * t1220 + t1579;
t1713 = t1150 * t816;
t908 = -t1142 * t1030 + t1403 * t1609;
t1737 = t1146 * t908;
t654 = t1713 + t1737;
t1753 = t1145 * t654;
t497 = t1727 - t1753;
t1738 = t1146 * t816;
t889 = t1150 * t908;
t653 = -t889 + t1738;
t1323 = t1854 * t497 + t1870 * t653;
t81 = t1166 + t1323;
t1813 = t81 * qJD(1);
t1603 = t1145 * t1033;
t1723 = t1149 * t928;
t1364 = t1603 + t1723;
t1165 = t1364 * t1898 + t1876 * t393 + t1885 * t491 + t1886 * t660;
t1729 = t1149 * t654;
t1751 = t1145 * t815;
t498 = t1729 + t1751;
t1322 = t1855 * t498 + t1868 * t653;
t83 = t1165 + t1322;
t1812 = t83 * qJD(1);
t1719 = t1149 * t982;
t807 = t1597 * t981 + t1719;
t1334 = t1884 * t462 + t1898 * t807;
t1338 = t1875 * t391 + t1888 * t722;
t1669 = t653 * t1145;
t1520 = -t1669 / 0.2e1;
t1674 = t497 * t1150;
t89 = t1674 / 0.2e1 + (t1520 + t1338) * t1146 + t1334;
t1811 = t89 * qJD(1);
t1743 = t1145 * t982;
t808 = -t1586 * t981 + t1743;
t1333 = t1884 * t463 + t1899 * t808;
t1335 = t1875 * t393 + t1886 * t722;
t1668 = t653 * t1149;
t1519 = -t1668 / 0.2e1;
t1673 = t498 * t1150;
t92 = -t1673 / 0.2e1 + (t1519 + t1335) * t1146 + t1333;
t1810 = t92 * qJD(1);
t1807 = -t860 + t877;
t1339 = t1882 * t391 + t1889 * t570;
t103 = t1668 / 0.2e1 + t1339;
t1806 = qJD(1) * t103;
t1336 = t1882 * t393 + t1887 * t570;
t106 = t1520 + t1336;
t1805 = qJD(1) * t106;
t134 = -t1212 * t249 - t342 * t722;
t1804 = qJD(1) * t134;
t135 = t1212 * t250 + t342 * t724;
t1803 = qJD(1) * t135;
t1307 = -t1753 / 0.2e1 + t1727 / 0.2e1;
t1337 = t1885 * t393 + t1886 * t568;
t174 = t1307 + t1337;
t1802 = qJD(1) * t174;
t1306 = -t1751 / 0.2e1 - t1729 / 0.2e1;
t1340 = t1884 * t391 + t1889 * t568;
t175 = t1306 + t1340;
t1801 = qJD(1) * t175;
t178 = -t1145 * t1911 + t391 * t570;
t1800 = qJD(1) * t178;
t179 = -t1149 * t1911 + t393 * t570;
t1799 = qJD(1) * t179;
t182 = t391 * t653 + t497 * t568;
t1798 = qJD(1) * t182;
t183 = t393 * t653 - t498 * t568;
t1797 = qJD(1) * t183;
t1324 = t1858 * t393 + t1868 * t463;
t1471 = t1593 / 0.2e1;
t1441 = t491 * t1471;
t186 = t1441 - t1324;
t1796 = qJD(1) * t186;
t1331 = t1872 * t568 + t1885 * t724;
t1650 = t815 * t1150;
t188 = t1650 / 0.2e1 + t1331;
t1795 = qJD(1) * t188;
t1329 = t1872 * t570 + t1883 * t724;
t1651 = t815 * t1146;
t191 = -t1651 / 0.2e1 + t1329;
t1794 = qJD(1) * t191;
t1317 = t1854 * t393 + t1868 * t568;
t1258 = t1317 * t1149;
t1675 = t491 * t1145;
t1524 = -t1675 / 0.2e1;
t195 = t1524 - t1258;
t1793 = qJD(1) * t195;
t1300 = -t1664 / 0.2e1 - t1654 / 0.2e1;
t1325 = t1854 * t391 + t1870 * t568;
t200 = t1300 - t1325;
t1792 = qJD(1) * t200;
t1402 = t783 / 0.2e1 - t1666 / 0.2e1;
t201 = -t1317 - t1402;
t1791 = qJD(1) * t201;
t1330 = t1875 * t570 + t1882 * t722;
t1401 = t889 / 0.2e1 - t1738 / 0.2e1;
t255 = t1330 + t1401;
t1790 = qJD(1) * t255;
t1303 = -t1737 / 0.2e1 - t1713 / 0.2e1;
t1332 = t1874 * t568 + t1885 * t722;
t256 = t1303 + t1332;
t1789 = qJD(1) * t256;
t259 = -t1146 * t1910 + t568 * t724;
t1788 = qJD(1) * t259;
t260 = -t1150 * t1910 + t570 * t724;
t1787 = qJD(1) * t260;
t267 = t568 * t815 - t653 * t722;
t1786 = qJD(1) * t267;
t268 = t570 * t815 - t654 * t722;
t1785 = qJD(1) * t268;
t1155 = t1208 * t1890 + t1212 * t1873;
t1209 = t1455 / 0.2e1 + t1351 / 0.2e1;
t1168 = t1209 * t1151 - t1591 / 0.2e1;
t362 = t1155 + t1168;
t1784 = qJD(1) * t362;
t1156 = t1208 * t1891 + t1212 * t1874;
t1169 = -t1209 * t1147 - t1579 / 0.2e1;
t363 = t1156 + t1169;
t1783 = qJD(1) * t363;
t389 = t1212 * t815 + t908 * t722;
t1782 = qJD(1) * t389;
t390 = t1212 * t816 + t908 * t724;
t1781 = qJD(1) * t390;
t1780 = qJD(1) * t393;
t439 = -t1313 * t682 + t826 * t978;
t1779 = qJD(1) * t439;
t440 = -t1313 * t683 + t826 * t979;
t1778 = qJD(1) * t440;
t1777 = qJD(1) * t568;
t1512 = t979 * t1840;
t1516 = t1653 / 0.2e1;
t655 = t1142 * t1512 + t1516;
t1775 = qJD(1) * t655;
t1774 = qJD(1) * t724;
t761 = -t1030 * t1313 - t1416 * t978;
t1773 = qJD(1) * t761;
t762 = t1031 * t1313 + t1416 * t979;
t1772 = qJD(1) * t762;
t793 = t1642 / 0.2e1 + t1877;
t1771 = qJD(1) * t793;
t1770 = qJD(3) * t990;
t1769 = qJD(5) * t722;
t1768 = qJD(5) * t902;
t1767 = qJD(6) * t568;
t1766 = qJD(6) * t655;
t1565 = pkin(12) * t1586;
t1040 = t1145 * t1362 + t1565;
t1765 = t1040 * t570;
t1764 = t1067 * t722;
t1763 = t1069 * t722;
t1762 = t109 * t1149;
t1760 = t1145 * t127;
t1754 = t1145 * t391;
t1752 = t1145 * t660;
t1749 = t1145 * t877;
t1061 = t1146 * t1071;
t1062 = t1150 * t1070;
t1577 = -t1062 + t1061;
t884 = pkin(13) * t1608 + t1577;
t1748 = t1145 * t884;
t948 = pkin(5) * t1069 + t1836;
t1746 = t1145 * t948;
t956 = t1444 + (pkin(11) + t1110) * t1606;
t1745 = t1145 * t956;
t1742 = t1145 * t988;
t1739 = t1146 * t804;
t1736 = t1149 * t127;
t1730 = t1149 * t391;
t315 = t1149 * t568;
t1728 = t1149 * t660;
t1725 = t1149 * t877;
t1724 = t1149 * t884;
t1722 = t1149 * t948;
t1721 = t1149 * t956;
t1718 = t1149 * t988;
t1715 = t1150 * t568;
t470 = t1150 * t722;
t1714 = t1150 * t804;
t133 = -t391 * t463 - t393 * t462;
t1712 = t133 * qJD(1);
t136 = -t391 * t491 - t393 * t490;
t1711 = t136 * qJD(1);
t1686 = t393 * t1145;
t1372 = t1686 + t1730;
t149 = t1372 * t568;
t1710 = t149 * qJD(1);
t1709 = t151 * t1149;
t1195 = t1862 * t568 + t1874 * t660 + t1876 * t722 + t1885 * t804;
t1476 = t1606 / 0.2e1;
t1278 = t1476 * t653 + t1854 * t815;
t158 = -t1195 + t1278;
t1708 = t158 * qJD(1);
t1194 = t1862 * t570 + t1874 * t661 + t1883 * t804 + t1892 * t928;
t1277 = t1476 * t654 + t1852 * t815;
t159 = -t1194 + t1277;
t1707 = t159 * qJD(1);
t1706 = t172 * t1145;
t1705 = t172 * t1149;
t180 = -t391 * t660 - t490 * t568;
t1704 = t180 * qJD(1);
t181 = t393 * t660 + t491 * t568;
t1703 = t181 * qJD(1);
t1688 = t391 * t1146;
t184 = t1688 * t722 - t462 * t568;
t1702 = t184 * qJD(1);
t1685 = t393 * t1146;
t185 = -t1685 * t722 + t463 * t568;
t1701 = t185 * qJD(1);
t218 = -t568 * t661 - t570 * t660;
t1700 = t218 * qJD(1);
t1671 = t570 * t1146;
t1367 = t1671 + t1715;
t237 = t1367 * t722;
t1698 = t237 * qJD(1);
t1181 = t1212 * t1862;
t1348 = t1404 / 0.2e1;
t1407 = t1459 / 0.2e1;
t1505 = t815 * t1831;
t251 = t804 * t1348 + t1181 + t1505 / 0.2e1 + (t1359 * t804 + t1407 * t722 + t1837 * t908 + t1875 * t979) * t1142;
t1697 = t251 * qJD(1);
t1180 = t1034 * t1927;
t1504 = t816 * t1831;
t254 = t805 * t1348 + t1180 + t1504 / 0.2e1 + (t1359 * t805 + t1407 * t724 + t1843 * t908 + t1873 * t979) * t1142;
t1696 = t254 * qJD(1);
t265 = -t568 * t804 - t660 * t722;
t1695 = t265 * qJD(1);
t266 = t570 * t804 + t661 * t722;
t1694 = t266 * qJD(1);
t1274 = t568 * t1477 + t1764 / 0.2e1;
t1236 = t1274 * t1146;
t1667 = t660 * t1150;
t275 = t1667 / 0.2e1 - t1236;
t1693 = t275 * qJD(1);
t1279 = t1763 / 0.2e1 + t570 * t1477;
t1235 = t1279 * t1150;
t1665 = t661 * t1146;
t278 = -t1665 / 0.2e1 - t1235;
t1692 = t278 * qJD(1);
t282 = -t1764 / 0.2e1 - t1652 / 0.2e1 + (t568 * t1837 - t1639 / 0.2e1) * t1142;
t1691 = t282 * qJD(1);
t283 = -t1763 / 0.2e1 + t1516 + (t1837 * t570 + t1512) * t1142;
t1690 = t283 * qJD(1);
t304 = -t722 * t805 - t724 * t804;
t1689 = t304 * qJD(1);
t1684 = t393 * t1149;
t398 = -t1212 * t804 + t1761 * t722;
t1682 = t398 * qJD(1);
t399 = t1212 * t805 - t1761 * t724;
t1681 = t399 * qJD(1);
t1191 = t1212 * t1142;
t1179 = -t1191 / 0.2e1;
t1171 = t1179 - t978 / 0.2e1;
t1560 = -t1831 / 0.2e1;
t1430 = t722 * t1560;
t416 = t1430 + t1435 / 0.2e1 + t1171 * t1151;
t1680 = t416 * qJD(1);
t1429 = t724 * t1560;
t417 = -t1147 * t1171 + t1429 + t1877;
t1679 = t417 * qJD(1);
t1678 = t463 * t1145;
t1677 = t467 * qJD(1);
t1676 = t470 * qJD(1);
t725 = t978 ^ 2 - t979 ^ 2;
t1658 = t725 * qJD(1);
t1408 = -t1459 / 0.2e1;
t1561 = -t1832 / 0.2e1;
t1170 = t1313 * t1408 + t1561 * t979;
t1203 = (-t1604 / 0.2e1 - t1360 / 0.2e1) * t1143;
t753 = t1203 + t1170;
t1657 = t753 * qJD(1);
t1167 = t1313 * t1359 + t1561 * t978;
t1202 = (-t1549 / 0.2e1 + t1409 / 0.2e1) * t1143;
t754 = t1202 + t1167;
t1656 = t754 * qJD(1);
t1655 = t793 * qJD(5);
t1649 = t860 * t1145;
t1648 = t860 * t1149;
t879 = (t1576 * t1144 + (qJ(2) * t1609 - t1121) * t1141) * t1143;
t1647 = t879 * qJD(1);
t1646 = t883 * t1145;
t1645 = t883 * t1149;
t1644 = t927 * t1145;
t1643 = t927 * t1149;
t1640 = t979 * qJD(3);
t1637 = t988 * t1146;
t1635 = t990 * t1145;
t1634 = t990 * t1149;
t1632 = qJD(3) * t1069;
t1631 = qJD(3) * t1142;
t1137 = t1146 ^ 2;
t1139 = t1150 ^ 2;
t1123 = t1139 - t1137;
t1630 = qJD(4) * t1123;
t1136 = t1145 ^ 2;
t1138 = t1149 ^ 2;
t1122 = t1138 - t1136;
t1629 = qJD(5) * t1122;
t1628 = qJD(5) * t1145;
t1627 = qJD(5) * t1146;
t1626 = qJD(5) * t1149;
t1625 = qJD(5) * t1150;
t1624 = qJD(6) * t1067;
t1623 = qJD(6) * t1145;
t1622 = qJD(6) * t1149;
t1621 = t1033 * t1146;
t1620 = t1033 * t1150;
t1619 = t1038 * t1145;
t1618 = t1040 * t1069;
t1617 = t1055 * t1150;
t1615 = t1069 * t1146;
t1074 = (t1141 ^ 2 + t1144 ^ 2) * t1143 ^ 2;
t1614 = t1074 * qJD(1);
t1613 = t1134 * t1151 ^ 2;
t1612 = t1134 * t1147;
t1610 = t1137 * t1145;
t898 = t1145 * t1067;
t1601 = t1145 * t1110;
t1598 = t1145 * t1149;
t1596 = t1146 * qJD(4);
t1592 = t1146 * t1151;
t1588 = t1149 * t1110;
t1587 = t1149 * t1137;
t1582 = t1150 * t1067;
t1478 = t1608 / 0.2e1;
t1063 = t1150 * t1478 + t1462 / 0.2e1;
t1427 = t1146 * t1476;
t1578 = qJD(4) * t1427 + t1063 * qJD(5);
t1575 = pkin(4) * t1897;
t1574 = pkin(5) * t1905;
t1573 = pkin(5) * t1904;
t1572 = pkin(5) * t1903;
t1571 = pkin(5) * t1870;
t1570 = pkin(5) * t1869;
t1569 = pkin(12) * t1904;
t1568 = pkin(12) * t1869;
t1129 = pkin(12) * t1600;
t1566 = pkin(12) * t1593;
t1564 = pkin(4) * t1853;
t1563 = pkin(5) * t1859;
t1562 = pkin(13) * t1846;
t1558 = t393 * t1777;
t1556 = t570 * t1663;
t1554 = t979 * t978 * qJD(1);
t1552 = -t248 / 0.2e1 + t484 / 0.2e1;
t1551 = -t274 / 0.2e1 - t296 / 0.2e1;
t1548 = t990 * t1616;
t1547 = t568 * t1586;
t1546 = -t1761 / 0.2e1;
t1545 = t1761 / 0.2e1;
t1544 = -t1755 / 0.2e1;
t1543 = -t1752 / 0.2e1;
t1542 = t1750 / 0.2e1;
t1541 = -t1746 / 0.2e1;
t1540 = -t467 / 0.2e1;
t1539 = t467 / 0.2e1;
t1538 = -t1739 / 0.2e1;
t1537 = -t1734 / 0.2e1;
t1536 = t1731 / 0.2e1;
t1535 = -t1728 / 0.2e1;
t1534 = t1728 / 0.2e1;
t1533 = -t1724 / 0.2e1;
t1532 = t1722 / 0.2e1;
t1531 = -t470 / 0.2e1;
t1530 = -t1714 / 0.2e1;
t1529 = t151 * t1846;
t1527 = t1685 / 0.2e1;
t1525 = t490 * t1839;
t1523 = t491 * t1840;
t1521 = -t1671 / 0.2e1;
t1518 = -t1662 / 0.2e1;
t1517 = t1661 / 0.2e1;
t1515 = -t1648 / 0.2e1;
t1514 = -t1644 / 0.2e1;
t1513 = -t1643 / 0.2e1;
t1511 = t981 * t1855;
t1510 = t981 * t1852;
t1509 = t1637 / 0.2e1;
t1507 = t990 * t1844;
t1503 = t981 * t1831;
t1502 = t982 * t1831;
t1499 = qJD(4) * t1593;
t1498 = qJD(5) * t1606;
t1497 = qJD(5) * t1598;
t1496 = qJD(6) * t1597;
t1495 = qJD(6) * t1586;
t1492 = t1142 * t1592;
t1491 = t1142 * t1580;
t1490 = qJD(3) * t1606;
t1489 = qJD(6) * t1598;
t1487 = t1145 * t1593;
t1486 = t1145 * t1582;
t1485 = t1146 * t1625;
t1483 = t1149 * t1582;
t1481 = t1055 * t1844;
t1480 = t1138 * t1845;
t1479 = -t1608 / 0.2e1;
t1474 = t1600 / 0.2e1;
t1473 = t1597 / 0.2e1;
t1470 = -t1592 / 0.2e1;
t1468 = t1586 / 0.2e1;
t1467 = t1580 / 0.2e1;
t1466 = t1061 / 0.2e1 - t1062 / 0.2e1;
t1456 = t1831 * qJD(3);
t1454 = t1808 * t1151;
t1453 = -qJD(5) - t1663;
t1452 = -qJD(6) - t1777;
t1449 = pkin(13) * t1539;
t1448 = -qJD(6) - t1616;
t1447 = -qJD(6) + t1585;
t1446 = t1129 + t1588;
t1440 = t1865 / 0.2e1 + t319 / 0.2e1;
t1439 = t1777 + t1863;
t1438 = t1864 / 0.2e1 - t128 / 0.2e1;
t1434 = t1150 * t1490;
t1433 = qJD(5) * t1487;
t1432 = qJD(4) * t1494;
t1431 = qJD(4) * t1487;
t1428 = t1142 * t1470;
t1426 = t1142 * t1467;
t1425 = t1145 * t1477;
t1424 = t1145 * t1476;
t1422 = t1149 * t1476;
t1420 = t1836 / 0.2e1 + t948 / 0.2e1;
t1417 = t1143 * t1465;
t1415 = t1142 * t1461;
t1413 = t1142 * t1458;
t1412 = t1143 * t1463;
t1406 = -t587 / 0.2e1 - t597 / 0.2e1 - t786 / 0.2e1;
t1400 = t1845 * t856 + t1872;
t1399 = t1744 / 0.2e1 + t1887;
t1398 = t1720 / 0.2e1 + t1888;
t1394 = 0.2e1 * t1431;
t1393 = -qJD(5) + t1490;
t1392 = pkin(13) * t1428;
t1391 = t1456 + qJD(4);
t700 = -t1037 * t990 - t1038 * t988;
t1188 = t1859 * t391 + t1861 * t393 + t1869 * t462 + t1871 * t463;
t1251 = (t1149 * t1902 + t1524) * t1146;
t73 = t1251 - t1188;
t1390 = -t73 * qJD(1) + t700 * qJD(3);
t1369 = t1635 + t1718;
t721 = t1369 * t1067;
t80 = (t1900 + t1325) * t1149 + (t1901 + t1317) * t1145;
t1389 = t80 * qJD(1) + t721 * qJD(3);
t1312 = t1854 * t462 + t1860 * t568;
t111 = t1525 + (t1476 * t391 + t1871 * t722 + t1543) * t1146 + t1312;
t784 = -t1037 * t1067 - t1492 * t988;
t1388 = -t111 * qJD(1) + t784 * qJD(3);
t1311 = t1855 * t463 + t1859 * t568;
t112 = t1523 + (t1477 * t393 + t1868 * t722 + t1534) * t1146 + t1311;
t785 = t1038 * t1067 + t1492 * t990;
t1387 = -t112 * qJD(1) + t785 * qJD(3);
t536 = t568 * t1487;
t116 = t536 + (-t1687 / 0.2e1 + t1903) * t1149 + (-t1683 / 0.2e1 + t462 / 0.2e1) * t1145;
t1008 = t1067 * t1487;
t589 = t1008 + (-t1636 / 0.2e1 + t1859) * t1149 + (-t1633 / 0.2e1 + t1860) * t1145;
t1386 = t116 * qJD(1) + t589 * qJD(3);
t1223 = t1853 * t391 + t1871 * t570 + t568 * t898;
t130 = t1535 + t1223;
t763 = t988 * t1069 - t1145 * t1909;
t1385 = -qJD(1) * t130 + qJD(3) * t763;
t1224 = t1852 * t393 + t1868 * t570 - t568 * t902;
t132 = t1543 + t1224;
t764 = t1069 * t990 - t1149 * t1909;
t1384 = -qJD(1) * t132 - qJD(3) * t764;
t156 = (t1893 + t1274) * t1150 + (t660 / 0.2e1 + t1279) * t1146;
t845 = -t1582 - t1615;
t865 = t845 * t1606;
t1383 = t156 * qJD(1) + t865 * qJD(3);
t1243 = t1468 * t393 + t1480 * t568;
t204 = -t1678 / 0.2e1 + t1243;
t1240 = t1067 * t1480 + t1468 * t990;
t752 = -t1619 / 0.2e1 + t1240;
t1382 = qJD(1) * t204 + qJD(3) * t752;
t208 = (t1905 + t1517) * t1150 + (t1522 + t1890) * t1145;
t1233 = (t1149 * t1467 + t1599 / 0.2e1) * t1142;
t770 = t1233 - t1271;
t1381 = -t208 * qJD(1) + t770 * qJD(3);
t209 = t1442 - t714 / 0.2e1 + (t393 / 0.2e1 + t1518) * t1150;
t769 = t1848 + t1067 * t1471 + (t1425 + t1869) * t1150;
t1380 = -t209 * qJD(1) + t769 * qJD(3);
t1197 = (-t1592 * t722 + t1843 * t568) * t1142 + t724 * t1855;
t215 = t1530 + t1197;
t971 = -t1067 * t1608 + t1146 * t1613;
t1379 = t215 * qJD(1) + t971 * qJD(3);
t1196 = (t1580 * t722 + t1842 * t570) * t1142 + t724 * t1852;
t217 = t1538 + t1196;
t972 = -t1069 * t1608 + t1150 * t1613;
t1378 = t217 * qJD(1) - t972 * qJD(3);
t311 = t1145 * t568;
t1377 = -t311 * qJD(1) - t898 * qJD(3);
t1376 = t315 * qJD(1) + t902 * qJD(3);
t335 = t1606 * t722 + t1608 * t724;
t347 = -t724 ^ 2 + t1910;
t1375 = qJD(1) * t347 - qJD(3) * t335;
t1374 = -t1736 + t1755;
t1373 = t1731 + t1760;
t1371 = -t1725 + t1746;
t1370 = t1722 + t1749;
t1081 = t1134 * t1147 ^ 2 - t1613;
t1366 = qJD(1) * t335 + qJD(3) * t1081;
t1361 = t1447 * t1146;
t1358 = pkin(13) * t1477 - t878 / 0.2e1;
t1357 = t1585 - t1616;
t1356 = t1596 + t1632;
t1354 = qJD(1) * t1417;
t1353 = qJD(1) * t1412;
t1350 = t1142 * t1407;
t1347 = t1834 / 0.2e1 - t1835 / 0.2e1;
t1346 = pkin(3) * t1890 + t1842 * t342;
t1345 = pkin(4) * t1893 + t1844 * t279;
t1344 = -pkin(5) * t462 / 0.2e1 - t1705 / 0.2e1;
t1343 = pkin(12) * t1901 + t1529;
t1342 = t491 * t1908 + t1709 / 0.2e1;
t1341 = pkin(5) * t1861 - t1645 / 0.2e1;
t1328 = t1840 * t63 + t1857 * t660;
t1327 = t1040 * t1898 + t1840 * t56;
t1326 = t1040 * t1894 + t1839 * t64;
t1321 = t1855 * t728 + t1870 * t856;
t1320 = t1853 * t728 + t1870 * t857;
t1319 = t1854 * t729 + t1869 * t856;
t1318 = t1853 * t729 + t1868 * t857;
t1316 = -t1566 + t1601;
t1314 = t1142 * t1397;
t1310 = -t1759 / 0.2e1 + t1732 / 0.2e1;
t1309 = -t1758 / 0.2e1 + t1733 / 0.2e1;
t1308 = -t1756 / 0.2e1 - t1735 / 0.2e1;
t1305 = -t1748 / 0.2e1 + t1721 / 0.2e1;
t1304 = -t1740 / 0.2e1 + t1717 / 0.2e1;
t1302 = t1730 / 0.2e1 + t1686 / 0.2e1;
t1299 = t1854 * t807 + t1860 * t856;
t1298 = t1855 * t808 + t1858 * t856;
t1297 = t1635 / 0.2e1 + t1718 / 0.2e1;
t1295 = t1040 * t1854 + t1840 * t657;
t1294 = t1603 / 0.2e1 + t1723 / 0.2e1;
t1293 = -t1590 / 0.2e1 + t1747 / 0.2e1;
t1289 = t1368 * t1151;
t1286 = t1365 * t1150;
t1285 = t1364 * t1150;
t1283 = t596 / 0.2e1 - t599 * t1458 / 0.2e1;
t716 = t1638 / 0.2e1 + (t1501 / 0.2e1 - t1253 / 0.2e1) * t1147;
t1282 = t716 * qJD(1) + qJD(3) * t1478;
t1281 = t1477 * t728 + t1871 * t981;
t1280 = t1477 * t729 + t1869 * t981;
t1276 = t1479 * t856 + t1854 * t982;
t1275 = t1479 * t857 + t1852 * t982;
t1273 = -t1110 / 0.2e1 + t1347;
t745 = t1721 - t1748;
t1163 = t109 * t1861 + t172 * t1871 + t1855 * t71 + t1878 * t391 + t1881 * t462 + t1899 * t745;
t1 = (t1476 * t55 + t1892 * t656 + t1343) * t1146 + t1163 + t1328;
t261 = t1286 / 0.2e1 + (t1514 + t1281) * t1146 + t1299;
t292 = t860 * t1037 + t745 * t1067 - t1492 * t656 + t883 * t988;
t1270 = -t1 * qJD(1) + t261 * qJD(2) + t292 * qJD(3);
t746 = t1724 + t1745;
t1162 = t109 * t1859 + t172 * t1869 + t1854 * t72 + t1878 * t393 + t1881 * t463 + t1898 * t746;
t2 = (t1476 * t56 + t1892 * t657 + t1342) * t1146 + t1162 + t1326;
t264 = -t1285 / 0.2e1 + (t1513 + t1280) * t1146 + t1298;
t293 = t860 * t1038 - t746 * t1067 - t1492 * t657 + t883 * t990;
t1269 = -t2 * qJD(1) + t264 * qJD(2) + t293 * qJD(3);
t285 = -t656 * t1069 + t878 * t988 + (t1145 * t1807 + t1722) * t1067;
t287 = t1643 / 0.2e1 + t1320;
t1153 = t128 * t1870 + t1370 * t1898 + t1373 * t1854 + t1649 * t1899 + t1853 * t55 + t1879 * t391 + t1896 * t570 + t1907 * t898;
t1227 = pkin(5) * t1902 - t1709 / 0.2e1 + pkin(13) * t1543;
t5 = -t1153 + t1227;
t1268 = -t5 * qJD(1) + t287 * qJD(2) + t285 * qJD(3);
t286 = -t657 * t1069 + t878 * t990 + (t1149 * t1807 - t1746) * t1067;
t290 = t1514 + t1318;
t1152 = t109 * t1469 + t128 * t1868 + t1371 * t1899 + t1374 * t1855 + t1515 * t568 + t1853 * t56 + t1879 * t393 + t1897 * t657;
t1226 = pkin(5) * t1900 + pkin(13) * t1535 + t1529;
t6 = -t1152 + t1226;
t1267 = -t6 * qJD(1) + t290 * qJD(2) + t286 * qJD(3);
t1198 = t109 * t1869 + t1854 * t56 + t1881 * t393 + t1895 * t568;
t19 = t1198 + t1310;
t394 = -t1293 + t1319;
t448 = -t1067 * t657 + t860 * t990;
t1266 = qJD(1) * t19 + qJD(2) * t394 - qJD(3) * t448;
t1199 = t109 * t1870 + t1855 * t55 + t1896 * t568 + t1905 * t860;
t20 = t1199 + t1308;
t395 = -t1294 + t1321;
t447 = t1067 * t656 - t860 * t988;
t1265 = qJD(1) * t20 + qJD(2) * t395 - qJD(3) * t447;
t1158 = t1355 * t1892 + t1481 * t722 + t1850 * t568 + t1855 * t250 + t1880 * t724;
t1228 = pkin(4) * t1894 + pkin(12) * t1538 + t1840 * t279;
t27 = (t1289 / 0.2e1 + t127 * t1842 + t235 * t1470) * t1142 + t1158 + t1228;
t441 = t1620 / 0.2e1 + t1276;
t571 = -t1055 * t1492 - t1072 * t1067 + t1355 * t1606 + t1608 * t877;
t1264 = -t27 * qJD(1) + t441 * qJD(2) - t571 * qJD(3);
t1174 = t1577 * t1891 + t1850 * t570 + t1853 * t250 + t1879 * t724;
t28 = (-pkin(12) * t804 / 0.2e1 + t722 * t1856) * t1150 + (-t1454 / 0.2e1 + t128 * t1842 - t235 * t1580 / 0.2e1) * t1142 + t1174 + t1345;
t444 = -t1621 / 0.2e1 + t1275;
t572 = t1072 * t1069 + (-t878 * t1147 + (t1577 + t1617) * t1151) * t1142;
t1263 = -t28 * qJD(1) + t444 * qJD(2) + t572 * qJD(3);
t1177 = t1055 * t1897 + t128 * t1477 + t1853 * t235 + t1879 * t722;
t41 = t1177 + t1304;
t581 = t1510 + t1595 / 0.2e1 + (t1150 * t1408 + t1837 * t857) * t1142;
t737 = -t1055 * t1069 - t1606 * t878;
t1262 = qJD(1) * t41 - qJD(2) * t581 + qJD(3) * t737;
t1178 = t127 * t1476 + t1854 * t235 + t1856 * t568 + t1892 * t877;
t42 = t1178 + t1551;
t579 = t1511 + t1584 / 0.2e1 + (t1146 * t1407 + t1838 * t856) * t1142;
t736 = -t1055 * t1067 - t1606 * t877;
t1261 = qJD(1) * t42 - qJD(2) * t579 - qJD(3) * t736;
t1161 = t1359 - t1185 / 0.2e1;
t1248 = -t1287 / 0.2e1;
t757 = t1248 + t1502 / 0.2e1 + t1161 * t1147;
t1164 = t1072 * t1927 + t250 * t1560;
t87 = (t1838 * t817 + t1346) * t1142 + t1164 + t1283;
t994 = pkin(3) * t1612 + t1072 * t1831;
t1260 = -qJD(1) * t87 + qJD(2) * t757 + qJD(3) * t994;
t1249 = t1288 / 0.2e1;
t758 = t1249 - t1503 / 0.2e1 + t1161 * t1151;
t1157 = (pkin(3) * t1891 + t1837 * t342) * t1142 + t1212 * t1851 + t249 * t1831 / 0.2e1;
t85 = t1157 - t1406;
t995 = pkin(3) * t1611 - t1070 * t1831;
t1259 = -qJD(1) * t85 + qJD(2) * t758 + qJD(3) * t995;
t234 = t1067 * t568 - t1069 * t570;
t243 = -t570 ^ 2 + t1911;
t1256 = qJD(1) * t243 + qJD(3) * t234 - qJD(4) * t1367;
t866 = -t1069 ^ 2 + t1909;
t1255 = qJD(1) * t234 + qJD(3) * t866 + qJD(4) * t845;
t1254 = qJD(3) * t1313;
t1252 = t1313 * qJD(1);
t1092 = t1123 * t1145;
t140 = -t568 * t1597 + (-t1672 / 0.2e1 + t1906 + t1517) * t1146;
t667 = t1486 + (t1422 + t1602 / 0.2e1 + t1870) * t1146;
t1247 = qJD(1) * t140 - qJD(3) * t667 + qJD(4) * t1092;
t1093 = t1139 * t1149 - t1587;
t141 = -t1547 + (t1518 - t1670 / 0.2e1 + t1904) * t1146;
t666 = -t1483 + (t1424 - t1589 / 0.2e1 + t1869) * t1146;
t1246 = -qJD(1) * t141 - qJD(3) * t666 - qJD(4) * t1093;
t1245 = -qJD(1) * t1367 + qJD(3) * t845 + t1630;
t1244 = qJD(5) * t1479 + t1451;
t67 = t1575 + (-t1866 / 0.2e1 - t489 / 0.2e1) * t1150 + (t235 / 0.2e1 - t249 / 0.2e1) * t1146;
t734 = t1564 + (pkin(12) * t1476 - t1071 / 0.2e1) * t1150 + (t1856 + t1851) * t1146;
t1242 = pkin(4) * t1596 - qJD(1) * t67 - qJD(3) * t734;
t1229 = pkin(4) * t1898 + t1699 / 0.2e1 + pkin(12) * t1539;
t65 = t1229 + t1552;
t1207 = pkin(4) * t1854 + t1617 / 0.2e1 + pkin(12) * t1428;
t732 = t1207 + t1466;
t1241 = pkin(4) * t1585 - qJD(1) * t65 - qJD(3) * t732;
t567 = t1659 / 0.2e1 - t1190 / 0.2e1;
t1239 = t567 * qJD(1) + t1063 * qJD(3) + t1596 / 0.2e1;
t1237 = qJD(5) * t716 + t1315;
t1232 = t1039 * t570 / 0.2e1 + t1446 * t1899;
t1231 = -t1252 + qJD(3);
t1230 = qJD(6) * t1845 + t1296;
t1225 = t1039 * t1852 + t1446 * t1855;
t1222 = t1688 * t1908 + t1839 * t55 + t1857 * t568;
t221 = (pkin(12) * t1871 + t1532 + t1926) * t1150 + (t656 / 0.2e1 + (pkin(12) * t1854 + t1358) * t1145) * t1146 + t1225 + t1341;
t326 = (t1542 - t1398) * t1146;
t854 = t1039 * t1146 + (t1446 - 0.2e1 * t1129) * t1150;
t9 = (pkin(12) * t1906 + t1536 + t1925) * t1150 + (t55 / 0.2e1 + (pkin(12) * t1898 + t1438) * t1145) * t1146 + t1232 + t1344;
t1219 = -t9 * qJD(1) + t326 * qJD(2) - t221 * qJD(3) - t854 * qJD(4);
t1218 = pkin(12) * t1509 + t1039 * t1855 + t1839 * t656;
t10 = t1572 + t1765 / 0.2e1 + (t172 / 0.2e1 + t568 * t1849) * t1145 + (t1544 + t1569 + t1922) * t1150 + (t56 / 0.2e1 + t1438 * t1149) * t1146;
t222 = t1563 + t1618 / 0.2e1 + (t883 / 0.2e1 + t1067 * t1849) * t1145 + (t1541 + t1568 + t1923) * t1150 + (t1149 * t1358 + t1895) * t1146;
t328 = (-t1726 / 0.2e1 - t1399) * t1146;
t855 = t1110 * t1597 + (-t1040 + t1565) * t1146;
t1217 = -t10 * qJD(1) - t328 * qJD(2) - t222 * qJD(3) + t855 * qJD(4);
t23 = (t1569 - t1762 / 0.2e1) * t1146 + t1309 + t1327;
t305 = (t1568 + t1515) * t1146 + t1295 + t1305;
t424 = t1149 * t1400 + t1150 * t1399;
t976 = -pkin(12) * t1587 - t1040 * t1150;
t1216 = qJD(1) * t23 + qJD(2) * t424 + qJD(3) * t305 + qJD(4) * t976;
t24 = t1537 + (-t198 / 0.2e1 + t109 * t1844) * t1145 + t1222;
t306 = t1533 + (-t956 / 0.2e1 + t860 * t1844) * t1145 + t1218;
t425 = -t1145 * t1400 + t1150 * t1398;
t975 = -pkin(12) * t1610 - t1039 * t1150;
t1215 = qJD(1) * t24 + qJD(2) * t425 + qJD(3) * t306 - qJD(4) * t975;
t138 = t391 * t988 - t990 * t393;
t154 = (t1684 - t1754) * t1146;
t165 = t391 ^ 2 - t393 ^ 2;
t1214 = qJD(1) * t165 + qJD(3) * t138 - qJD(4) * t154 - qJD(5) * t1372;
t681 = (t1634 - t1742) * t1146;
t742 = t988 ^ 2 - t990 ^ 2;
t1213 = qJD(1) * t138 + qJD(3) * t742 - qJD(4) * t681 - qJD(5) * t1369;
t39 = -t1149 * t1440 + t1573 - t1925;
t477 = -t1149 * t1420 + t1570 - t1926;
t987 = t1273 * t1149;
t1211 = pkin(5) * t1628 - qJD(1) * t39 - qJD(3) * t477 - qJD(4) * t987;
t37 = t1145 * t1440 + t1574 - t1922;
t475 = t1145 * t1420 + t1571 - t1923;
t986 = t1273 * t1145;
t1210 = pkin(5) * t1626 - qJD(1) * t37 - qJD(3) * t475 + qJD(4) * t986;
t213 = t1869 * t391 + t1871 * t393;
t226 = t1302 * t1146;
t230 = -t1754 / 0.2e1 + t1684 / 0.2e1;
t1206 = -qJD(3) * t213 + qJD(4) * t226 - qJD(5) * t230 + t1780 * t391;
t806 = t1297 * t1146;
t821 = -t1742 / 0.2e1 + t1634 / 0.2e1;
t1205 = -qJD(1) * t213 + qJD(4) * t806 - qJD(5) * t821 + t1770 * t988;
t1204 = qJD(6) * t567 + t1238;
t1073 = (t1136 / 0.2e1 - t1138 / 0.2e1) * t1146;
t1201 = qJD(1) * t230 + qJD(3) * t821 - qJD(4) * t1073 + t1497;
t1200 = qJD(6) * t1063 + t1234;
t1193 = qJD(4) * t1212;
t1192 = t1212 * qJD(1);
t1184 = qJD(4) * t1145 * t1587 + qJD(1) * t226 + qJD(3) * t806 + qJD(5) * t1073;
t1091 = t1122 * t1137;
t1183 = qJD(1) * t154 + qJD(3) * t681 + qJD(4) * t1091 + 0.2e1 * t1433;
t1182 = qJD(1) * t1372 + qJD(3) * t1369 + t1394 - t1629;
t1175 = t1192 - qJD(4);
t1173 = t1192 - qJD(4) / 0.2e1;
t1132 = t1627 / 0.2e1;
t1111 = qJD(4) * t1478;
t1098 = -0.2e1 * qJD(6) * t1487;
t1066 = t1073 * qJD(6);
t947 = t1129 + t1588 / 0.2e1 + t1347 * t1149;
t946 = t1566 - t1601 / 0.2e1 - t1347 * t1145;
t922 = qJD(3) * t1545;
t839 = t845 * qJD(5);
t818 = t821 * qJD(6);
t814 = t981 * t1150;
t813 = t981 * t1146;
t800 = t806 * qJD(6);
t772 = t1150 * t1425 + t1848 + t1915;
t771 = t1233 + t1271;
t760 = t1503 / 0.2e1 + t1249 + t1918 * t1151;
t759 = -t1502 / 0.2e1 + t1248 + t1918 * t1147;
t756 = t1203 - t1170;
t755 = t1202 - t1167;
t751 = t1619 / 0.2e1 + t1240;
t735 = pkin(12) * t1426 + t1564 + t1481 + t1594 / 0.2e1 + t1581 / 0.2e1;
t733 = t1207 - t1466;
t712 = t1369 * qJD(6);
t674 = t681 * qJD(6);
t669 = t1069 * t1471 + t1146 * t1424 + t1483 + t1507;
t668 = -t1486 + t1069 * t1475 - t1637 / 0.2e1 + t1146 * t1422;
t646 = t856 * t1149;
t645 = t856 * t1145;
t588 = t1037 * t1847 + t1038 * t1841 - t1150 * t1297 + t1008;
t582 = t857 * t1476 + t1510 - t1595 / 0.2e1 + t1150 * t1350;
t580 = t856 * t1477 + t1511 - t1584 / 0.2e1 - t1352 / 0.2e1;
t529 = qJD(3) * t793 + qJD(4) * t716;
t478 = pkin(13) * t1469 + t1570 + t1649 / 0.2e1 + t1749 / 0.2e1 + t1532;
t476 = t1067 * t1562 + t1571 + t1648 / 0.2e1 + t1725 / 0.2e1 + t1541;
t443 = t1621 / 0.2e1 + t1275;
t442 = -t1620 / 0.2e1 + t1276;
t427 = t729 * t1839 + t856 * t1471 + t981 * t1473 + t1719 / 0.2e1;
t426 = t728 * t1840 + t856 * t1475 + t981 * t1468 - t1743 / 0.2e1;
t418 = -t1191 * t1843 + t1429 - t793;
t415 = t1430 + t1151 * t1179 + t1641 / 0.2e1 - t1435 / 0.2e1;
t397 = -t1293 - t1319;
t396 = -t1294 - t1321;
t365 = -t1155 + t1168;
t364 = -t1156 + t1169;
t332 = t335 * qJD(4);
t329 = t1471 * t857 + t1475 * t981 + t1845 * t729;
t327 = t981 * t1471 + (t1889 + t1542) * t1146;
t308 = pkin(12) * t1507 + t1471 * t860 - t1295 + t1305;
t307 = t860 * t1475 + t1533 - t1745 / 0.2e1 - t1218;
t291 = t655 * qJD(3) + qJD(4) * t1540 + t567 * qJD(5);
t289 = t1644 / 0.2e1 + t1318;
t288 = t1513 + t1320;
t284 = -t655 - t1279;
t281 = t1652 / 0.2e1 + t1146 * t1545 - t1274;
t277 = t1665 / 0.2e1 - t1235;
t276 = -t1667 / 0.2e1 - t1236;
t263 = t1285 / 0.2e1 + t927 * t1471 + t1280 * t1146 + t1298;
t262 = -t1286 / 0.2e1 + t927 * t1474 + t1281 * t1146 + t1299;
t258 = -t1330 + t1401;
t257 = t1303 - t1332;
t253 = t724 * t1350 + t805 * t1928 + t1180 + t982 * t1546 + t908 * t1478 - t1504 / 0.2e1;
t252 = t722 * t1350 + t804 * t1928 + t1181 + t981 * t1546 + t908 * t1477 - t1505 / 0.2e1;
t239 = t1367 * qJD(5);
t231 = t234 * qJD(5);
t227 = t230 * qJD(6);
t225 = t226 * qJD(6);
t224 = t1316 * t1855 - t1618 / 0.2e1 + t1371 * t1839 + t657 * t1845 + t878 * t1471 + t860 * t1468 + t1149 * t1392 + t1563 + t1646 / 0.2e1 + t1915 * pkin(12);
t223 = pkin(12) * t1271 + t1145 * t1392 + t1370 * t1840 + t860 * t1473 + t878 * t1474 + t656 * t1845 - t1225 + t1341;
t216 = t1739 / 0.2e1 + t1196;
t214 = t1714 / 0.2e1 + t1197;
t212 = t213 * qJD(6);
t210 = t722 * t1473 + t714 / 0.2e1 + t1914;
t207 = t1149 * t1531 + t1660 / 0.2e1 + t1916;
t203 = t1678 / 0.2e1 + t1243;
t202 = -t1317 + t1402;
t199 = -t1300 - t1325;
t194 = t1675 / 0.2e1 - t1258;
t190 = t1651 / 0.2e1 + t1329;
t189 = -t1650 / 0.2e1 + t1331;
t187 = t1441 + t1324;
t177 = t1307 - t1337;
t176 = t1306 - t1340;
t161 = t1194 + t1277;
t160 = t1195 + t1278;
t157 = t1372 * qJD(6);
t155 = t660 * t1845 + t661 * t1839 + (t1615 / 0.2e1 + t1582 / 0.2e1) * t722 + (-t1715 / 0.2e1 + t1521) * t1606;
t153 = t154 * qJD(6);
t142 = t1471 * t570 + t1475 * t722 + t1527 + t1547;
t139 = -t1688 / 0.2e1 + t722 * t1472 + (t1521 - t1715) * t1145;
t137 = t138 * qJD(6);
t131 = t1752 / 0.2e1 + t1224;
t129 = t1534 + t1223;
t115 = -t1150 * t1302 + t1841 * t463 + t1847 * t462 + t536;
t114 = t1427 * t393 + t1471 * t660 + t1540 * t990 - t1311 + t1523;
t113 = t1428 * t391 + t1475 * t660 + t1509 * t722 - t1312 + t1525;
t105 = t1669 / 0.2e1 + t1336;
t104 = t1519 + t1339;
t91 = t1673 / 0.2e1 + t653 * t1471 + t1335 * t1146 + t1333;
t90 = -t1674 / 0.2e1 + t653 * t1474 + t1338 * t1146 + t1334;
t88 = t1142 * t1346 + t1476 * t817 + t1164 - t1283;
t86 = t1157 + t1406;
t84 = -t1165 + t1322;
t82 = -t1166 + t1323;
t79 = t1067 * t1302 + t1297 * t568 + t1841 * t491 + t1847 * t490;
t74 = t1251 + t1188;
t68 = pkin(12) * t1531 + t1575 + t235 * t1844 + t1741 / 0.2e1 + t1716 / 0.2e1;
t66 = t1229 - t1552;
t44 = -t1177 + t1304;
t43 = -t1178 + t1551;
t40 = -pkin(13) * t315 / 0.2e1 + t1573 + t109 * t1846 + t1760 / 0.2e1 + t1536;
t38 = t568 * t1562 + t1574 + t1762 / 0.2e1 + t1736 / 0.2e1 + t1544;
t30 = t1142 * t1454 / 0.2e1 + t128 * t1479 + t1055 * t1531 + t235 * t1426 + pkin(12) * t1530 - t1174 + t1345;
t29 = -t1142 * t1289 / 0.2e1 + t127 * t1479 + t235 * t1427 - t1158 + t1228;
t26 = pkin(12) * t1527 + t109 * t1471 + t1309 - t1327;
t25 = t109 * t1475 + t1537 - t1757 / 0.2e1 - t1222;
t22 = -t1198 + t1310;
t21 = -t1199 + t1308;
t12 = t1316 * t1899 - t1765 / 0.2e1 + t1374 * t1839 + t56 * t1845 + t128 * t1471 + t109 * t1468 + t1149 * t1449 + t1572 + t1706 / 0.2e1 + t1914 * pkin(12);
t11 = pkin(12) * t1916 + t109 * t1473 + t1145 * t1449 + t128 * t1474 + t1373 * t1840 + t55 * t1845 - t1232 + t1344;
t8 = t1152 + t1226;
t7 = t1153 + t1227;
t4 = t1146 * t1342 + t1428 * t56 + t1539 * t657 - t1162 + t1326;
t3 = t1146 * t1343 + t1428 * t55 + t1539 * t656 - t1163 + t1328;
t45 = [0, 0, 0, -qJD(2) * t1417, -qJD(2) * t1412, t1074 * qJD(2), t879 * qJD(2), t978 * t1640, t725 * qJD(3), -t978 * t1254, t979 * t1254, 0, qJD(2) * t761 + qJD(3) * t440, qJD(2) * t762 + qJD(3) * t439 (qJD(3) * t805 - t722 * qJD(4)) * t724, qJD(3) * t304 + qJD(4) * t347, -t399 * qJD(3) + t1193 * t722, -t398 * qJD(3) + t1193 * t724, -t1191 * t1640, qJD(2) * t389 + qJD(3) * t59 + qJD(4) * t135, qJD(2) * t390 + qJD(3) * t60 + qJD(4) * t134 (qJD(3) * t661 - qJD(5) * t568 - t1585 * t722) * t570, qJD(3) * t218 + qJD(4) * t237 + qJD(5) * t243, qJD(3) * t266 + qJD(4) * t260 - t1769 * t568, qJD(3) * t265 - qJD(4) * t259 - t1769 * t570 (qJD(3) * t804 + t724 * qJD(4)) * t722, qJD(2) * t267 + qJD(3) * t33 + qJD(4) * t35 + qJD(5) * t58, qJD(2) * t268 + qJD(3) * t34 + qJD(4) * t36 + qJD(5) * t57 (qJD(3) * t491 + qJD(4) * t463 - qJD(6) * t391 - t1626 * t568) * t393, qJD(3) * t136 + qJD(4) * t133 + qJD(5) * t149 + qJD(6) * t165, qJD(3) * t181 + qJD(4) * t185 + qJD(5) * t179 - t1767 * t391, qJD(3) * t180 + qJD(4) * t184 - qJD(5) * t178 - t1767 * t393 (qJD(3) * t660 + qJD(5) * t570 - t1596 * t722) * t568, qJD(2) * t182 + qJD(3) * t15 + qJD(4) * t17 + qJD(5) * t13 + qJD(6) * t32, qJD(2) * t183 + qJD(3) * t16 + qJD(4) * t18 + qJD(5) * t14 + qJD(6) * t31; 0, 0, 0, -t1354, -t1353, t1614, t1647, 0, 0, 0, 0, 0, qJD(3) * t756 + t1773, qJD(3) * t755 + t1772, 0, 0, 0, 0, 0, qJD(3) * t252 + qJD(4) * t365 + t1782, qJD(3) * t253 + qJD(4) * t364 + t1781, 0, 0, 0, 0, 0, qJD(3) * t160 + qJD(4) * t189 + qJD(5) * t258 + t1786, qJD(3) * t161 + qJD(4) * t190 + qJD(5) * t257 + t1785, 0, 0, 0, 0, 0, qJD(3) * t82 + qJD(4) * t90 + qJD(5) * t104 + qJD(6) * t177 + t1798, qJD(3) * t84 + qJD(4) * t91 + qJD(5) * t105 + qJD(6) * t176 + t1797; 0, 0, 0, 0, 0, 0, 0, t1554, t1658, t1231 * t978, -t1231 * t979, 0, qJD(2) * t756 + qJD(3) * t683 + t1778, qJD(2) * t755 + qJD(3) * t682 + t1779, t1921 + (qJD(3) * t1608 + t1774) * t805, t1689 - t332 + (-t1147 * t804 + t1151 * t805) * t1631, -t1681 + (t1612 * t979 + t1831 * t805) * qJD(3) + t415 * qJD(4), -t1682 + (t1611 * t979 - t1831 * t804) * qJD(3) + t418 * qJD(4) (t1456 - t1173) * t1761, t298 * t1456 + t1815 + t252 * qJD(2) + t88 * qJD(4) + (-pkin(3) * t804 - t1070 * t979 - t1151 * t436) * t1631, -t299 * t1456 + t1814 + t253 * qJD(2) + t86 * qJD(4) + (-pkin(3) * t805 - t1072 * t979 + t1147 * t436) * t1631, qJD(4) * t277 - t1930 + (t1632 + t1776) * t661, t1700 + (-t1067 * t661 - t1069 * t660) * qJD(3) + t155 * qJD(4) + t231, t1694 + (t1069 * t804 - t1606 * t661) * qJD(3) + t216 * qJD(4) + t281 * qJD(5), t1695 + (-t1067 * t804 + t1606 * t660) * qJD(3) + t214 * qJD(4) + t284 * qJD(5), t1655 - t1921 + (-t1490 + t1663) * t804, t1819 + t160 * qJD(2) + (t1055 * t660 + t279 * t1067 - t1606 * t166 - t877 * t804) * qJD(3) + t29 * qJD(4) + t44 * qJD(5), t1818 + t161 * qJD(2) + (t1055 * t661 + t279 * t1069 + t1606 * t167 - t878 * t804) * qJD(3) + t30 * qJD(4) + t43 * qJD(5), qJD(4) * t187 + qJD(5) * t194 + t212 + (t1770 + t1780) * t491, t1711 + (-t490 * t990 - t491 * t988) * qJD(3) + t74 * qJD(4) + t79 * qJD(5) + t137, t1703 + (t1067 * t491 + t660 * t990) * qJD(3) + t114 * qJD(4) + t131 * qJD(5) + t199 * qJD(6), t1704 + (-t1067 * t490 - t660 * t988) * qJD(3) + t113 * qJD(4) + t129 * qJD(5) + t202 * qJD(6), qJD(4) * t276 + t1766 + t1930 + (t1616 + t1777) * t660, t1823 + t82 * qJD(2) + (t1067 * t63 + t151 * t988 + t490 * t860 - t656 * t660) * qJD(3) + t3 * qJD(4) + t7 * qJD(5) + t22 * qJD(6), t1822 + t84 * qJD(2) + (-t1067 * t64 + t151 * t990 + t491 * t860 - t657 * t660) * qJD(3) + t4 * qJD(4) + t8 * qJD(5) + t21 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1315, t1375, t415 * qJD(3) + t1175 * t722, t418 * qJD(3) + t1175 * t724, t922, qJD(2) * t365 + qJD(3) * t88 - qJD(4) * t250 + t1803, qJD(2) * t364 + qJD(3) * t86 + qJD(4) * t249 + t1804, t277 * qJD(3) + t1919 + (-t1596 - t1776) * t470, t155 * qJD(3) - t1630 * t722 + t1698 - t239, qJD(3) * t216 + t1596 * t724 + t1787, qJD(3) * t214 + t1585 * t724 - t1788, t1237, t1817 + t189 * qJD(2) + t29 * qJD(3) + (t1146 * t1419 - t250 * t1150) * qJD(4) + t68 * qJD(5), t1816 + t190 * qJD(2) + t30 * qJD(3) + (t250 * t1146 + t1150 * t1419) * qJD(4) + t66 * qJD(5), qJD(3) * t187 + qJD(5) * t203 - t225 + (t1499 + t1780) * t463, t1712 + t74 * qJD(3) + t115 * qJD(5) - t153 + (-t1149 * t462 - t1678) * t1596, t1701 + t114 * qJD(3) + (-t1150 * t463 - t1587 * t722) * qJD(4) + t142 * qJD(5) + t207 * qJD(6), t1702 + t113 * qJD(3) + (t1150 * t462 + t1610 * t722) * qJD(4) + t139 * qJD(5) + t210 * qJD(6), t276 * qJD(3) - t1919 + (-t1439 + t1585) * t467, -t71 * t1585 + t1821 + t90 * qJD(2) + t3 * qJD(3) + t11 * qJD(5) + t26 * qJD(6) + (pkin(12) * t462 + t1039 * t722 + t1706) * t1596, t72 * t1585 + t1820 + t91 * qJD(2) + t4 * qJD(3) + t12 * qJD(5) + t25 * qJD(6) + (pkin(12) * t463 + t1040 * t722 + t1705) * t1596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1238, t1256, qJD(3) * t281 + t1453 * t568, qJD(3) * t284 + t1453 * t570, t529, qJD(2) * t258 + qJD(3) * t44 + qJD(4) * t68 - qJD(5) * t128 + t1826, qJD(2) * t257 + qJD(3) * t43 + qJD(4) * t66 + qJD(5) * t127 + t1827, qJD(3) * t194 + qJD(4) * t203 + t227 + (-t1628 - t1780) * t315, t79 * qJD(3) + t115 * qJD(4) - t1629 * t568 - t157 + t1710, qJD(3) * t131 + qJD(4) * t142 + t1628 * t570 + t1799, qJD(3) * t129 + qJD(4) * t139 + t1626 * t570 - t1800, t1204, t1825 + t104 * qJD(2) + t7 * qJD(3) + t11 * qJD(4) + (t1145 * t1418 - t128 * t1149) * qJD(5) + t40 * qJD(6), t1824 + t105 * qJD(2) + t8 * qJD(3) + t12 * qJD(4) + (t128 * t1145 + t1149 * t1418) * qJD(5) + t38 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1206, t1214, qJD(3) * t199 + qJD(4) * t207 + t1452 * t391, qJD(3) * t202 + qJD(4) * t210 + t1452 * t393, t291, qJD(2) * t177 + qJD(3) * t22 + qJD(4) * t26 + qJD(5) * t40 - qJD(6) * t56 + t1828, qJD(2) * t176 + qJD(3) * t21 + qJD(4) * t25 + qJD(5) * t38 + qJD(6) * t55 + t1829; 0, 0, 0, t1354, t1353, -t1614, -t1647, 0, 0, 0, 0, 0, -qJD(3) * t753 - t1773, -qJD(3) * t754 - t1772, 0, 0, 0, 0, 0, qJD(3) * t251 - qJD(4) * t362 - t1782, qJD(3) * t254 - qJD(4) * t363 - t1781, 0, 0, 0, 0, 0, -qJD(3) * t158 + qJD(4) * t188 - qJD(5) * t255 - t1786, -qJD(3) * t159 + qJD(4) * t191 - qJD(5) * t256 - t1785, 0, 0, 0, 0, 0, -qJD(3) * t81 + qJD(4) * t89 + qJD(5) * t103 - qJD(6) * t174 - t1798, -qJD(3) * t83 + qJD(4) * t92 + qJD(5) * t106 - qJD(6) * t175 - t1797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t1459 - t1657, -qJD(3) * t1436 - t1656, 0, 0, 0, 0, 0, t1697 + (-t1033 * t1831 - t1134 * t1410) * qJD(3) + t759 * qJD(4), t1696 + (-t1034 * t1831 + t1134 * t1411) * qJD(3) + t760 * qJD(4), 0, 0, 0, 0, 0, -t1708 + (t1033 * t1067 + t1606 * t927) * qJD(3) + t442 * qJD(4) + t582 * qJD(5), -t1707 + (t1033 * t1069 + t1606 * t928) * qJD(3) + t443 * qJD(4) + t580 * qJD(5), 0, 0, 0, 0, 0, -t1813 + (t1067 * t1365 + t927 * t988) * qJD(3) + t262 * qJD(4) + t288 * qJD(5) + t397 * qJD(6), -t1812 + (-t1067 * t1364 + t927 * t990) * qJD(3) + t263 * qJD(4) + t289 * qJD(5) + t396 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t759 - qJD(4) * t982 - t1784, qJD(3) * t760 + qJD(4) * t981 - t1783, 0, 0, 0, 0, 0, qJD(3) * t442 + qJD(5) * t813 - t1585 * t982 + t1795, qJD(3) * t443 + qJD(5) * t814 + t1596 * t982 + t1794, 0, 0, 0, 0, 0, t1811 + t262 * qJD(3) + (-t1150 * t807 - t1610 * t981) * qJD(4) + t327 * qJD(5) + t427 * qJD(6), t1810 + t263 * qJD(3) + (t1150 * t808 - t1587 * t981) * qJD(4) + t329 * qJD(5) + t426 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t582 + qJD(4) * t813 - qJD(5) * t857 - t1790, qJD(3) * t580 + qJD(4) * t814 + qJD(5) * t856 - t1789, 0, 0, 0, 0, 0, qJD(3) * t288 + qJD(4) * t327 + qJD(6) * t645 - t1626 * t857 + t1806, qJD(3) * t289 + qJD(4) * t329 + qJD(6) * t646 + t1628 * t857 + t1805; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t397 + qJD(4) * t427 + qJD(5) * t645 - qJD(6) * t729 - t1802, qJD(3) * t396 + qJD(4) * t426 + qJD(5) * t646 + qJD(6) * t728 - t1801; 0, 0, 0, 0, 0, 0, 0, -t1554, -t1658, t978 * t1252, -t979 * t1252, 0, qJD(2) * t753 - t1778, qJD(2) * t754 - t1779, -t1774 * t805 + t1921, -t332 - t1689, qJD(4) * t416 + t1681, qJD(4) * t417 + t1682, t1173 * t1761, -qJD(2) * t251 + qJD(4) * t87 - t1815, -qJD(2) * t254 + qJD(4) * t85 - t1814, qJD(4) * t278 - t1776 * t661 - t1930, qJD(4) * t156 - t1700 + t231, qJD(4) * t217 + qJD(5) * t282 - t1694, qJD(4) * t215 + qJD(5) * t283 - t1695, -t1663 * t804 - t1655 - t1921, qJD(2) * t158 - qJD(4) * t27 - qJD(5) * t41 - t1819, qJD(2) * t159 - qJD(4) * t28 - qJD(5) * t42 - t1818, -qJD(4) * t186 + qJD(5) * t195 - t1780 * t491 + t212, -qJD(4) * t73 + qJD(5) * t80 + t137 - t1711, -qJD(4) * t112 + qJD(5) * t132 + qJD(6) * t200 - t1703, -qJD(4) * t111 + qJD(5) * t130 + qJD(6) * t201 - t1704, qJD(4) * t275 - t1777 * t660 - t1766 + t1930, qJD(2) * t81 - qJD(4) * t1 - qJD(5) * t5 - qJD(6) * t19 - t1823, qJD(2) * t83 - qJD(4) * t2 - qJD(5) * t6 - qJD(6) * t20 - t1822; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1657, t1656, 0, 0, 0, 0, 0, -qJD(4) * t757 - t1697, -qJD(4) * t758 - t1696, 0, 0, 0, 0, 0, qJD(4) * t441 + qJD(5) * t581 + t1708, qJD(4) * t444 + qJD(5) * t579 + t1707, 0, 0, 0, 0, 0, qJD(4) * t261 + qJD(5) * t287 - qJD(6) * t394 + t1813, qJD(4) * t264 + qJD(5) * t290 - qJD(6) * t395 + t1812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1432, -t1081 * qJD(4), qJD(4) * t1413, -qJD(4) * t1415, 0, -t994 * qJD(4), -t995 * qJD(4) (qJD(4) * t1491 - t1067 * qJD(5)) * t1069, qJD(4) * t865 + qJD(5) * t866, -t972 * qJD(4) + t1067 * t1498, t971 * qJD(4) + t1069 * t1498, -t1432, -qJD(4) * t571 - qJD(5) * t737, qJD(4) * t572 + qJD(5) * t736 (qJD(4) * t1038 - qJD(6) * t988 - t1768) * t990, qJD(4) * t700 + qJD(5) * t721 + qJD(6) * t742, qJD(4) * t785 + qJD(5) * t764 - t1624 * t988, qJD(4) * t784 - qJD(5) * t763 - t1624 * t990 (qJD(4) * t1492 + t1069 * qJD(5)) * t1067, qJD(4) * t292 + qJD(5) * t285 + qJD(6) * t448, qJD(4) * t293 + qJD(5) * t286 + qJD(6) * t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1451, -t1366, t1391 * t1606 + t1680, -t1391 * t1608 + t1679, qJD(1) * t1546, -qJD(4) * t1072 - t1260, qJD(4) * t1070 - t1259, t1356 * t1491 + t1692 + t1920, t1606 * t1630 + t1383 + t839, qJD(4) * t1493 + t1378, qJD(4) * t1482 + t1379, -t1244 (-t1072 * t1150 + t1146 * t1314) * qJD(4) + t735 * qJD(5) + t1264 (t1072 * t1146 + t1150 * t1314) * qJD(4) + t733 * qJD(5) + t1263, -t1796 + qJD(5) * t751 - t800 + (t1499 + t1770) * t1038, t588 * qJD(5) - t674 + (-t1037 * t1149 - t1619) * t1596 + t1390 (-t1038 * t1150 + t1137 * t1484) * qJD(4) + t669 * qJD(5) + t771 * qJD(6) + t1387 (t1037 * t1150 - t1137 * t1488) * qJD(4) + t668 * qJD(5) + t772 * qJD(6) + t1388, t1693 - t1920 + (t1863 - t1357) * t1492, -t745 * t1585 + t223 * qJD(5) + t308 * qJD(6) + (pkin(12) * t1037 - t1039 * t1606 + t1646) * t1596 + t1270, t746 * t1585 + t224 * qJD(5) + t307 * qJD(6) + (pkin(12) * t1038 - t1040 * t1606 + t1645) * t1596 + t1269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1234, t1255, t1067 * t1393 + t1691, t1069 * t1393 + t1690, t1111 - t1771, qJD(4) * t735 - qJD(5) * t878 - t1262, qJD(4) * t733 + qJD(5) * t877 - t1261, t1793 + qJD(4) * t751 + t818 + (-t1628 - t1770) * t902, t588 * qJD(4) - t1067 * t1629 + t1389 - t712, qJD(4) * t669 + qJD(5) * t1602 - t1384, qJD(4) * t668 + qJD(5) * t1589 - t1385, t1200, t223 * qJD(4) + (t1145 * t1396 - t878 * t1149) * qJD(5) + t478 * qJD(6) + t1268, t224 * qJD(4) + (t878 * t1145 + t1149 * t1396) * qJD(5) + t476 * qJD(6) + t1267; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1205, t1213, qJD(4) * t771 + t1448 * t988 + t1792, qJD(4) * t772 + t1448 * t990 + t1791, t1578 - t1775, qJD(4) * t308 + qJD(5) * t478 - qJD(6) * t657 - t1266, qJD(4) * t307 + qJD(5) * t476 + qJD(6) * t656 - t1265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1315, -t1375, -t416 * qJD(3) - t1192 * t722, -t417 * qJD(3) - t1192 * t724, t922, qJD(2) * t362 - qJD(3) * t87 - t1803, qJD(2) * t363 - qJD(3) * t85 - t1804, -qJD(3) * t278 + t1150 * t1556 + t1919, -qJD(3) * t156 - t1698 - t239, -qJD(3) * t217 + qJD(5) * t470 - t1787, -qJD(3) * t215 - qJD(5) * t467 + t1788, -t1237, -qJD(2) * t188 + qJD(3) * t27 + qJD(5) * t67 - t1817, -qJD(2) * t191 + qJD(3) * t28 + qJD(5) * t65 - t1816, qJD(3) * t186 + qJD(5) * t204 - t1780 * t463 - t225, qJD(3) * t73 + qJD(5) * t116 - t153 - t1712, qJD(3) * t112 - qJD(5) * t141 + qJD(6) * t208 - t1701, qJD(3) * t111 + qJD(5) * t140 + qJD(6) * t209 - t1702, -t275 * qJD(3) + t1439 * t467 - t1919, -qJD(2) * t89 + qJD(3) * t1 - qJD(5) * t9 - qJD(6) * t23 - t1821, -qJD(2) * t92 + qJD(3) * t2 - qJD(5) * t10 - qJD(6) * t24 - t1820; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t757 + t1784, qJD(3) * t758 + t1783, 0, 0, 0, 0, 0, -qJD(3) * t441 - t1795, -qJD(3) * t444 - t1794, 0, 0, 0, 0, 0, -qJD(3) * t261 + qJD(5) * t326 - qJD(6) * t424 - t1811, -qJD(3) * t264 - qJD(5) * t328 - qJD(6) * t425 - t1810; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1451, t1366, -qJD(3) * t1413 - t1680, qJD(3) * t1415 - t1679, qJD(1) * t1545, t1260, t1259, -t1069 * t1434 - t1692 + t1920, -t1383 + t839, -qJD(5) * t1491 - t1378, qJD(5) * t1492 - t1379, t1244, qJD(5) * t734 - t1264, qJD(5) * t732 - t1263, qJD(5) * t752 - t1038 * t1770 + t1796 - t800, qJD(5) * t589 - t1390 - t674, -qJD(5) * t666 - qJD(6) * t770 - t1387, -qJD(5) * t667 - qJD(6) * t769 - t1388, -t1693 - t1920 + (-t1616 - qJD(6) / 0.2e1) * t1492, -qJD(5) * t221 - qJD(6) * t305 - t1270, -qJD(5) * t222 - qJD(6) * t306 - t1269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1485, t1123 * qJD(5), 0, 0, 0, -pkin(4) * t1627, -pkin(4) * t1625, -t1137 * t1489 + t1138 * t1485, -qJD(6) * t1091 - 0.2e1 * t1150 * t1433, -qJD(5) * t1093 + t1146 * t1496, qJD(5) * t1092 + t1146 * t1495, -t1485, -qJD(5) * t854 - qJD(6) * t976, qJD(5) * t855 + qJD(6) * t975; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1296, t1245, -t1150 * t1393 + t1676, t1146 * t1393 - t1677, -t1282, -pkin(12) * t1625 - t1242, pkin(12) * t1627 - t1241, -t1066 + (t1138 * t1596 + t1497) * t1150 + t1382, t1098 + (-0.2e1 * t1431 + t1629) * t1150 + t1386, qJD(5) * t1600 + t1246, qJD(5) * t1593 + t1247, -t1230 (t1145 * t1395 - t1565) * qJD(5) + t947 * qJD(6) + t1219 (t1149 * t1395 + t1567) * qJD(5) + t946 * qJD(6) + t1217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1184, -t1183, t1145 * t1361 - t1381, t1149 * t1361 - t1380, t1132 + t1924, qJD(5) * t947 - qJD(6) * t1040 - t1216, qJD(5) * t946 + qJD(6) * t1039 - t1215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1238, -t1256, -qJD(3) * t282 - qJD(4) * t470 + t1663 * t568, -qJD(3) * t283 + qJD(4) * t467 + t1556, t529, qJD(2) * t255 + qJD(3) * t41 - qJD(4) * t67 - t1826, qJD(2) * t256 + qJD(3) * t42 - qJD(4) * t65 - t1827, -qJD(3) * t195 - qJD(4) * t204 + t1149 * t1558 + t227, -qJD(3) * t80 - qJD(4) * t116 - t157 - t1710, -qJD(3) * t132 + qJD(4) * t141 + qJD(6) * t315 - t1799, -qJD(3) * t130 - qJD(4) * t140 - qJD(6) * t311 + t1800, -t1204, -qJD(2) * t103 + qJD(3) * t5 + qJD(4) * t9 + qJD(6) * t39 - t1825, -qJD(2) * t106 + qJD(3) * t6 + qJD(4) * t10 + qJD(6) * t37 - t1824; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t581 + t1790, -qJD(3) * t579 + t1789, 0, 0, 0, 0, 0, -qJD(3) * t287 - qJD(4) * t326 - t1806, -qJD(3) * t290 + qJD(4) * t328 - t1805; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1234, -t1255, t1357 * t1606 - t1691, -t1356 * t1606 - t1690, t1111 + t1771, -qJD(4) * t734 + t1262, -qJD(4) * t732 + t1261, -qJD(4) * t752 + t1149 * t1548 - t1793 + t818, -qJD(4) * t589 - t1389 - t712, qJD(4) * t666 + qJD(6) * t902 + t1384, qJD(4) * t667 - qJD(6) * t898 + t1385, -t1200, qJD(4) * t221 + qJD(6) * t477 - t1268, qJD(4) * t222 + qJD(6) * t475 - t1267; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1296, -t1245, t1434 - t1676, -t1146 * t1490 + t1677, t1282, t1242, t1241, -t1126 * t1138 - t1066 - t1382, t1150 * t1394 + t1098 - t1386, -t1246 - t1495, -t1247 + t1496, t1230, qJD(6) * t987 - t1219, -qJD(6) * t986 - t1217; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1489, t1122 * qJD(6), 0, 0, 0, -pkin(5) * t1623, -pkin(5) * t1622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1201, -t1182, -t1149 * t1447 + t1376, t1145 * t1447 + t1377, -t1239, -pkin(13) * t1622 - t1211, pkin(13) * t1623 - t1210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1206, -t1214, -qJD(3) * t200 - qJD(4) * t208 - qJD(5) * t315 + t1777 * t391, -qJD(3) * t201 - qJD(4) * t209 + qJD(5) * t311 + t1558, t291, qJD(2) * t174 + qJD(3) * t19 + qJD(4) * t23 - qJD(5) * t39 - t1828, qJD(2) * t175 + qJD(3) * t20 + qJD(4) * t24 - qJD(5) * t37 - t1829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t394 + qJD(4) * t424 + t1802, qJD(3) * t395 + qJD(4) * t425 + t1801; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1205, -t1213, qJD(4) * t770 + t1616 * t988 - t1768 - t1792, qJD(4) * t769 + qJD(5) * t898 + t1548 - t1791, t1578 + t1775, qJD(4) * t305 - qJD(5) * t477 + t1266, qJD(4) * t306 - qJD(5) * t475 + t1265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1184, t1183 (-t1145 * t1596 + t1626) * t1150 + t1381 (-t1499 - t1628) * t1150 + t1380, t1132 - t1924, -qJD(5) * t987 + t1216, qJD(5) * t986 + t1215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1201, t1182, t1149 * t1585 - t1376, -t1145 * t1585 - t1377, t1239, t1211, t1210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t45;
