% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRRR12_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR12_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR12_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR12_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR12_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RPRRRR12_invdynJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:00:54
% EndTime: 2019-03-09 08:02:09
% DurationCPUTime: 42.86s
% Computational Cost: add. (94573->1087), mult. (315395->1494), div. (0->0), fcn. (277868->18), ass. (0->459)
t442 = cos(pkin(6));
t439 = sin(pkin(14));
t707 = sin(qJ(1));
t620 = t707 * t439;
t441 = cos(pkin(14));
t710 = cos(qJ(1));
t625 = t710 * t441;
t384 = -t442 * t625 + t620;
t619 = t707 * t441;
t626 = t710 * t439;
t385 = t442 * t626 + t619;
t440 = sin(pkin(6));
t684 = sin(pkin(7));
t706 = sin(qJ(3));
t577 = t684 * t706;
t554 = t440 * t577;
t686 = cos(pkin(7));
t580 = t686 * t706;
t709 = cos(qJ(3));
t281 = -t384 * t580 + t385 * t709 - t710 * t554;
t445 = sin(qJ(4));
t708 = cos(qJ(4));
t578 = t684 * t709;
t555 = t440 * t578;
t581 = t686 * t709;
t282 = t384 * t581 + t385 * t706 + t555 * t710;
t603 = t440 * t686;
t495 = t384 * t684 - t710 * t603;
t683 = sin(pkin(8));
t685 = cos(pkin(8));
t715 = t685 * t282 - t495 * t683;
t187 = -t281 * t708 + t445 * t715;
t240 = t282 * t683 + t495 * t685;
t444 = sin(qJ(5));
t447 = cos(qJ(5));
t125 = t187 * t447 - t240 * t444;
t443 = sin(qJ(6));
t744 = t125 * t443;
t446 = cos(qJ(6));
t743 = t125 * t446;
t652 = qJD(1) * t440;
t617 = qJ(2) * t652;
t651 = qJD(1) * t442;
t631 = pkin(1) * t651;
t376 = t439 * t631 + t441 * t617;
t493 = (t441 * t603 + t442 * t684) * pkin(10);
t309 = qJD(1) * t493 + t376;
t421 = t441 * t631;
t668 = t439 * t440;
t494 = t442 * pkin(2) + (-pkin(10) * t686 - qJ(2)) * t668;
t317 = qJD(1) * t494 + t421;
t362 = (-pkin(10) * t439 * t684 - pkin(2) * t441 - pkin(1)) * t440;
t349 = qJD(1) * t362 + qJD(2);
t205 = -t309 * t706 + t317 * t581 + t349 * t578;
t730 = t440 * (t709 * t439 + t441 * t580);
t337 = t442 * t577 + t730;
t327 = t337 * qJD(1);
t629 = pkin(11) * t685;
t173 = -t327 * t629 + t205;
t711 = -t709 * t309 - t317 * t580;
t477 = -t349 * t577 + t711;
t550 = t441 * t581;
t528 = t440 * t550;
t553 = t442 * t578;
t482 = t528 + t553;
t618 = t706 * t439;
t585 = t440 * t618;
t556 = qJD(1) * t585;
t324 = qJD(1) * t482 - t556;
t594 = t685 * t324;
t174 = -pkin(11) * t594 + t477;
t310 = t683 * t324;
t256 = t327 * pkin(3) - pkin(11) * t310;
t579 = t685 * t708;
t598 = t445 * t683;
t390 = pkin(3) * t579 - pkin(11) * t598;
t599 = t445 * t685;
t688 = t390 * qJD(4) - t708 * t173 - t174 * t599 - t256 * t598;
t250 = t324 * t708 - t327 * t599;
t576 = t683 * t708;
t538 = qJD(4) * t576;
t514 = t538 - t250;
t488 = t440 * (-t439 * t581 - t441 * t706);
t359 = qJD(1) * t488;
t539 = qJD(3) * t577;
t712 = -t539 - t359;
t128 = -t174 * t683 + t685 * t256;
t249 = t324 * t445 + t327 * t579;
t742 = -t249 * pkin(4) + t250 * pkin(12) - t128 + (pkin(4) * t598 - pkin(12) * t576) * qJD(4);
t607 = t327 * t683;
t741 = -pkin(12) * t607 + t688;
t124 = t187 * t444 + t240 * t447;
t391 = pkin(3) * t599 + pkin(11) * t576;
t687 = t391 * qJD(4) - t445 * t173 + t174 * t579 + t256 * t576;
t728 = -t439 * t580 + t709 * t441;
t360 = t728 * t652;
t565 = t685 * t684;
t713 = t709 * t565 + t686 * t683;
t461 = -t445 * t577 + t708 * t713;
t592 = qJD(1) * t684;
t575 = t440 * t592;
t544 = t439 * t575;
t507 = t683 * t544;
t518 = t706 * t565;
t658 = (-t445 * t518 + t578 * t708) * qJD(3) + t461 * qJD(4) - t708 * t360 - (t359 * t685 + t507) * t445;
t388 = t444 * t598 - t447 * t685;
t600 = t444 * t683;
t656 = qJD(5) * t388 + t327 * t600 - t514 * t447;
t596 = t447 * t683;
t389 = t444 * t685 + t445 * t596;
t655 = qJD(5) * t389 + t327 * t596 + t514 * t444;
t497 = -t544 * t685 - t683 * t712;
t573 = qJD(4) * t598;
t531 = t573 - t249;
t402 = t441 * t575;
t601 = t442 * t686;
t532 = qJD(1) * t601 - t402;
t513 = -qJD(3) - t532;
t492 = t683 * t513;
t357 = t708 * t492;
t222 = -t324 * t579 + t327 * t445 + t357;
t533 = qJD(5) + t222;
t704 = pkin(12) * t447;
t373 = pkin(12) * t685 + t391;
t621 = t683 * pkin(3);
t374 = -pkin(4) * t576 - pkin(12) * t598 - t621;
t646 = qJD(5) * t447;
t647 = qJD(5) * t444;
t692 = -t373 * t647 + t374 * t646 + t742 * t444 + t741 * t447;
t723 = pkin(4) * t607 + t687;
t481 = t594 - t492;
t224 = t327 * t708 + t445 * t481;
t136 = pkin(4) * t224 + pkin(12) * t222;
t145 = pkin(11) * t481 - t477;
t147 = -pkin(3) * t513 + t173;
t262 = -t317 * t684 + t686 * t349;
t191 = -t324 * pkin(3) - pkin(11) * t607 + t262;
t75 = -t445 * t145 + t147 * t579 + t191 * t576;
t60 = t444 * t136 + t447 * t75;
t740 = pkin(12) * t647 + t60;
t639 = qJD(1) * qJD(3);
t587 = qJDD(1) * t585 + t539 * t651 + t730 * t639;
t470 = -qJDD(1) * t482 + t587;
t602 = t440 * t684;
t584 = t441 * t602;
t635 = -qJDD(1) * t584 + qJDD(3);
t511 = -qJDD(1) * t601 - t635;
t225 = -t470 * t683 + t511 * t685 - qJDD(4);
t423 = t441 * t440 * qJ(2);
t640 = qJD(1) * qJD(2);
t614 = t440 * t640;
t636 = qJDD(1) * t442;
t630 = pkin(1) * t636;
t354 = qJDD(1) * t423 + t439 * t630 + t441 * t614;
t293 = qJDD(1) * t493 + t354;
t419 = t441 * t630;
t296 = qJDD(1) * t494 - t439 * t614 + t419;
t344 = qJDD(1) * t362 + qJDD(2);
t540 = qJD(3) * t578;
t542 = qJD(3) * t581;
t616 = qJD(3) * t706;
t118 = t709 * t293 + t296 * t580 - t309 * t616 + t317 * t542 + t344 * t577 + t349 * t540;
t731 = t470 * t685 + t511 * t683;
t100 = -t731 * pkin(11) + t118;
t396 = qJD(3) * t556;
t469 = t337 * qJDD(1);
t464 = t469 - t396;
t480 = t482 * qJD(3);
t456 = -qJD(1) * t480 - t464;
t455 = pkin(11) * t456;
t534 = -t293 * t706 + t296 * t581 + t344 * t578;
t101 = -t511 * pkin(3) + qJD(3) * t711 - t349 * t539 + t455 * t685 + t534;
t246 = -t296 * t684 + t686 * t344;
t132 = pkin(3) * t470 + t455 * t683 + t246;
t574 = qJD(4) * t599;
t615 = qJD(4) * t708;
t30 = -t445 * t100 + t101 * t579 + t132 * t576 - t145 * t615 - t147 * t574 - t191 * t573;
t24 = pkin(4) * t225 - t30;
t541 = qJD(4) * t579;
t649 = qJD(4) * t445;
t109 = qJD(4) * t357 - t324 * t541 + t327 * t649 + t731 * t445 + t708 * t456;
t484 = t513 * t685 - qJD(4) + t310;
t266 = t447 * t484;
t70 = qJD(5) * t266 + t447 * t109 + t224 * t647 + t444 * t225;
t591 = -t444 * t109 + t447 * t225;
t155 = t447 * t224 - t444 * t484;
t648 = qJD(5) * t155;
t71 = t591 + t648;
t10 = pkin(5) * t71 + pkin(13) * t70 + t24;
t503 = -t708 * t100 - t101 * t599 - t132 * t598 + t145 * t649 - t147 * t541 - t191 * t538;
t23 = -pkin(12) * t225 - t503;
t454 = -t445 * t456 + t731 * t708;
t110 = t324 * t574 + t327 * t615 - t492 * t649 + t454;
t65 = -t101 * t683 + t685 * t132;
t35 = t110 * pkin(4) + t109 * pkin(12) + t65;
t76 = t708 * t145 + (t147 * t685 + t191 * t683) * t445;
t67 = -pkin(12) * t484 + t76;
t103 = -t147 * t683 + t685 * t191;
t73 = t222 * pkin(4) - t224 * pkin(12) + t103;
t530 = -t447 * t23 - t444 * t35 - t73 * t646 + t647 * t67;
t717 = qJD(4) * t224 + qJDD(5) + t454;
t5 = pkin(13) * t717 - t530;
t39 = t444 * t73 + t447 * t67;
t32 = pkin(13) * t533 + t39;
t153 = t224 * t444 + t266;
t66 = pkin(4) * t484 - t75;
t44 = t153 * pkin(5) - t155 * pkin(13) + t66;
t563 = t32 * t443 - t44 * t446;
t1 = -t563 * qJD(6) + t443 * t10 + t446 * t5;
t152 = qJD(6) + t153;
t738 = t563 * t152 + t1;
t737 = pkin(13) * t531 + t692;
t736 = t655 * pkin(5) + t656 * pkin(13) + t723;
t735 = t281 * t445;
t342 = t445 * t713 + t708 * t577;
t382 = -t578 * t683 + t685 * t686;
t285 = t342 * t444 - t447 * t382;
t662 = -qJD(5) * t285 + t497 * t444 + t658 * t447;
t657 = t359 * t579 - t360 * t445 + t507 * t708 + (t445 * t578 + t518 * t708) * qJD(3) + t342 * qJD(4);
t505 = -t442 * t619 - t626;
t487 = t505 * t686;
t504 = -t442 * t620 + t625;
t460 = -t487 * t709 + t504 * t706 - t555 * t707;
t472 = t505 * t684 - t707 * t603;
t732 = t460 * t683 - t472 * t685;
t38 = -t444 * t67 + t447 * t73;
t729 = -t38 * t533 - t530;
t727 = pkin(13) * t224 + t740;
t726 = -qJD(6) * t704 - t76 + t533 * (pkin(5) * t444 - pkin(13) * t447);
t16 = t32 * t446 + t44 * t443;
t2 = -qJD(6) * t16 + t446 * t10 - t443 * t5;
t725 = -t16 * t152 - t2;
t718 = t447 * t373 + t444 * t374;
t691 = -qJD(5) * t718 - t741 * t444 + t742 * t447;
t722 = t153 * t533;
t721 = t155 * t533;
t436 = t439 ^ 2;
t437 = t440 ^ 2;
t438 = t441 ^ 2;
t720 = t437 * (t436 + t438);
t286 = t342 * t447 + t382 * t444;
t661 = qJD(5) * t286 + t444 * t658 - t447 * t497;
t719 = -t360 + t540;
t716 = t460 * t685 + t472 * t683;
t714 = qJD(3) * t528 + t442 * t540;
t449 = qJDD(5) + t110;
t113 = t446 * t155 + t443 * t533;
t645 = qJD(6) * t113;
t37 = -t443 * t70 - t446 * t449 + t645;
t612 = t444 * t23 - t447 * t35;
t8 = -qJD(5) * t39 - t612;
t705 = pkin(1) * t442;
t387 = t439 * t705 + t423;
t331 = t493 + t387;
t428 = t441 * t705;
t339 = t428 + t494;
t196 = t728 * qJD(2) * t440 - t331 * t616 + t339 * t542 + t362 * t540;
t326 = t337 * qJD(3);
t161 = -t326 * t629 + t196;
t227 = t709 * t331 + t339 * t580 + t362 * t577;
t197 = qJD(2) * t488 - qJD(3) * t227;
t325 = qJD(3) * t585 - t714;
t162 = t325 * t629 + t197;
t336 = -t553 + (-t550 + t618) * t440;
t502 = t584 - t601;
t485 = t502 * t683;
t476 = -t336 * t685 - t485;
t172 = pkin(11) * t476 + t227;
t226 = -t331 * t706 + t339 * t581 + t362 * t578;
t177 = -pkin(3) * t502 - t337 * t629 + t226;
t267 = -t339 * t684 + t686 * t362;
t606 = t337 * t683;
t535 = t336 * pkin(3) - pkin(11) * t606;
t200 = t535 + t267;
t543 = t439 * qJD(2) * t602;
t244 = pkin(11) * t325 * t683 + t326 * pkin(3) + t543;
t50 = t708 * t161 + t162 * t599 - t172 * t649 + t177 * t541 + t200 * t538 + t244 * t598;
t608 = t326 * t683;
t46 = pkin(12) * t608 + t50;
t117 = -t162 * t683 + t685 * t244;
t233 = t337 * t708 + t445 * t476;
t156 = qJD(4) * t233 - t325 * t445 + t326 * t579;
t232 = t336 * t579 + t337 * t445 + t485 * t708;
t157 = -qJD(4) * t232 - t325 * t708 - t326 * t599;
t64 = t156 * pkin(4) - t157 * pkin(12) + t117;
t276 = -t336 * t683 + t502 * t685;
t84 = t708 * t172 + t177 * t599 + t200 * t598;
t79 = -pkin(12) * t276 + t84;
t114 = -t177 * t683 + t685 * t200;
t231 = t232 * pkin(4);
t82 = -t233 * pkin(12) + t114 + t231;
t703 = t444 * t82 + t447 * t79;
t14 = -qJD(5) * t703 - t444 * t46 + t447 * t64;
t516 = t446 * t533;
t644 = qJD(6) * t443;
t36 = -qJD(6) * t516 + t155 * t644 - t443 * t449 + t446 * t70;
t700 = t36 * t443;
t699 = t37 * t446;
t69 = qJDD(6) + t71;
t698 = t443 * t69;
t697 = t446 * t69;
t696 = t66 * t222;
t372 = -pkin(4) * t685 - t390;
t287 = t388 * pkin(5) - t389 * pkin(13) + t372;
t289 = -pkin(13) * t576 + t718;
t213 = t287 * t446 - t289 * t443;
t695 = qJD(6) * t213 + t736 * t443 + t737 * t446;
t214 = t287 * t443 + t289 * t446;
t694 = -qJD(6) * t214 - t737 * t443 + t736 * t446;
t693 = -t531 * pkin(5) - t691;
t413 = -pkin(5) * t447 - pkin(13) * t444 - pkin(4);
t643 = qJD(6) * t446;
t690 = t413 * t643 + t443 * t726 - t446 * t727;
t689 = -t413 * t644 + t443 * t727 + t446 * t726;
t682 = pkin(1) * qJDD(1);
t111 = t155 * t443 - t516;
t681 = t111 * t152;
t680 = t111 * t443;
t679 = t113 * t111;
t678 = t113 * t152;
t677 = t155 * t153;
t184 = t708 * t715 + t735;
t676 = t184 * t444;
t675 = t184 * t447;
t284 = t487 * t706 + t504 * t709 + t554 * t707;
t188 = t284 * t445 + t708 * t716;
t674 = t188 * t444;
t673 = t188 * t447;
t672 = t222 * t224;
t671 = t232 * t444;
t670 = t232 * t447;
t669 = t327 * t324;
t448 = qJD(1) ^ 2;
t667 = t442 * t448;
t666 = t443 * t447;
t665 = t446 * t447;
t237 = -t286 * t443 - t446 * t461;
t664 = qJD(6) * t237 + t657 * t443 + t662 * t446;
t238 = t286 * t446 - t443 * t461;
t663 = -qJD(6) * t238 - t662 * t443 + t657 * t446;
t350 = t443 * t389 + t446 * t576;
t660 = -qJD(6) * t350 + t531 * t443 - t656 * t446;
t551 = t443 * t576;
t659 = -qJD(6) * t551 + t389 * t643 - t656 * t443 - t531 * t446;
t627 = t440 * t707;
t654 = t710 * pkin(1) + qJ(2) * t627;
t641 = qJD(3) - t402;
t638 = qJDD(1) * t437;
t637 = qJDD(1) * t441;
t634 = g(1) * t707;
t633 = g(2) * t710;
t632 = g(2) * t707;
t628 = t440 * t710;
t613 = g(2) * t628 - g(3) * t442;
t611 = t281 * t683;
t609 = t284 * t683;
t590 = t533 * t444;
t589 = t152 * t446;
t588 = 0.2e1 * t440 * t636;
t582 = -pkin(1) * t707 + qJ(2) * t628;
t189 = t284 * t708 - t445 * t716;
t126 = t189 * t444 - t447 * t732;
t571 = g(1) * t124 + g(2) * t126;
t186 = -t282 * t579 + t495 * t576 - t735;
t570 = g(1) * t186 + g(2) * t188;
t133 = -t222 * t666 - t446 * t224;
t569 = -t443 * t646 + t133;
t134 = -t222 * t665 + t224 * t443;
t568 = t446 * t646 - t134;
t564 = -t16 * t443 + t446 * t563;
t41 = pkin(13) * t232 + t703;
t175 = t233 * t444 + t276 * t447;
t176 = t233 * t447 - t276 * t444;
t83 = -t445 * t172 + t177 * t579 + t200 * t576;
t78 = t276 * pkin(4) - t83;
t56 = t175 * pkin(5) - t176 * pkin(13) + t78;
t18 = t41 * t446 + t443 * t56;
t17 = -t41 * t443 + t446 * t56;
t42 = -t444 * t79 + t447 * t82;
t59 = t136 * t447 - t444 * t75;
t121 = t176 * t446 + t232 * t443;
t120 = t176 * t443 - t232 * t446;
t298 = -t444 * t373 + t447 * t374;
t559 = (-t439 * t617 + t421) * t439 - t376 * t441;
t537 = -t282 * pkin(3) + pkin(11) * t611;
t536 = -t460 * pkin(3) + pkin(11) * t609;
t13 = t444 * t64 + t447 * t46 + t82 * t646 - t647 * t79;
t31 = -pkin(5) * t533 - t38;
t529 = -pkin(13) * t69 + t152 * t31;
t525 = g(1) * t710 + t632;
t524 = g(1) * t126 - g(2) * t124 + g(3) * t175;
t127 = t189 * t447 + t444 * t732;
t523 = -g(1) * t127 + g(2) * t125 - g(3) * t176;
t210 = -t281 * t599 - t282 * t708;
t148 = t210 * t444 - t281 * t596;
t212 = -t284 * t599 - t460 * t708;
t150 = t212 * t444 - t284 * t596;
t264 = -t336 * t708 - t337 * t599;
t216 = t264 * t444 - t337 * t596;
t522 = -g(1) * t150 - g(2) * t148 - g(3) * t216;
t521 = g(1) * t188 + g(2) * t184 + g(3) * t232;
t520 = g(1) * t189 - g(2) * t187 + g(3) * t233;
t209 = t281 * t579 - t282 * t445;
t211 = t284 * t579 - t445 * t460;
t263 = -t336 * t445 + t337 * t579;
t519 = -g(1) * t211 - g(2) * t209 - g(3) * t263;
t515 = -t614 + t632;
t512 = qJD(5) * t533;
t6 = -pkin(5) * t717 - t8;
t510 = t524 - t6;
t508 = -g(1) * t627 + t613;
t501 = t210 * pkin(4) + t209 * pkin(12) + t537;
t500 = t212 * pkin(4) + t211 * pkin(12) + t536;
t499 = t264 * pkin(4) + t263 * pkin(12) - t535;
t422 = -t440 * t682 + qJDD(2);
t498 = pkin(1) * t638 - t422 * t440 - t633;
t490 = pkin(13) * qJD(6) * t152 - t510;
t489 = -t385 * pkin(2) - t495 * pkin(10) + t582;
t479 = t222 * t533 + t512;
t478 = t484 * t683;
t51 = -t445 * t161 + t162 * t579 - t172 * t615 - t177 * t574 - t200 * t573 + t244 * t576;
t475 = t504 * pkin(2) - t472 * pkin(10) + t654;
t474 = qJD(4) * t478;
t47 = -pkin(4) * t608 - t51;
t473 = -t281 * pkin(3) - pkin(11) * t240 + t489;
t471 = qJD(1) * t714 - t396;
t465 = t187 * pkin(4) + t186 * pkin(12) + t473;
t457 = -t482 * t639 - t464;
t452 = t284 * pkin(3) + t732 * pkin(11) + t475;
t450 = t189 * pkin(4) + t188 * pkin(12) + t452;
t386 = -qJ(2) * t668 + t428;
t369 = pkin(12) * t665 + t413 * t443;
t368 = -pkin(12) * t666 + t413 * t446;
t353 = t419 + (-qJ(2) * qJDD(1) - t640) * t668;
t351 = t446 * t389 - t551;
t288 = pkin(5) * t576 - t298;
t217 = t264 * t447 + t337 * t600;
t182 = t188 * pkin(4);
t180 = t184 * pkin(4);
t151 = t212 * t447 + t284 * t600;
t149 = t210 * t447 + t281 * t600;
t119 = qJD(3) * t477 + t534;
t102 = pkin(5) * t155 + pkin(13) * t153;
t95 = -qJD(5) * t175 + t157 * t447 + t326 * t600;
t94 = qJD(5) * t176 + t157 * t444 - t326 * t596;
t89 = t127 * t446 + t188 * t443;
t88 = -t127 * t443 + t188 * t446;
t58 = -qJD(6) * t120 + t156 * t443 + t446 * t95;
t57 = qJD(6) * t121 - t156 * t446 + t443 * t95;
t54 = -pkin(5) * t224 - t59;
t40 = -pkin(5) * t232 - t42;
t28 = t102 * t443 + t38 * t446;
t27 = t102 * t446 - t38 * t443;
t19 = t94 * pkin(5) - t95 * pkin(13) + t47;
t12 = -pkin(5) * t156 - t14;
t11 = pkin(13) * t156 + t13;
t4 = -qJD(6) * t18 - t11 * t443 + t19 * t446;
t3 = qJD(6) * t17 + t11 * t446 + t19 * t443;
t7 = [0, 0, 0, 0, 0, qJDD(1), t634 - t633, t525, 0, 0, t436 * t638, 0.2e1 * t437 * t439 * t637, t439 * t588, t438 * t638, t441 * t588, t442 ^ 2 * qJDD(1), g(1) * t385 + t498 * t441 + (t386 * qJDD(1) + t439 * t515 + t353) * t442, -g(1) * t384 - t498 * t439 + (-t387 * qJDD(1) + t441 * t515 - t354) * t442, t640 * t720 + (-t353 * t439 + t354 * t441 + (-t386 * t439 + t387 * t441) * qJDD(1) - t525) * t440, t354 * t387 + t353 * t386 - g(1) * t582 - g(2) * t654 + (-t422 * pkin(1) - qJD(2) * t559) * t440, -t327 * t325 + (t469 + t471) * t337, -t325 * t324 - t327 * t326 - t471 * t336 + (-t587 + (-t336 + t482) * qJDD(1)) * t337, t325 * t513 - t337 * t511 + t456 * t502, -t324 * t326 + t336 * t470, t326 * t513 + t336 * t511 + t470 * t502, t511 * t502, g(1) * t281 - g(2) * t284 - t119 * t502 - t197 * t513 - t226 * t511 + t246 * t336 + t262 * t326 + t267 * t470 - t324 * t543, -g(1) * t282 + g(2) * t460 + t118 * t502 + t196 * t513 + t227 * t511 + t246 * t337 - t262 * t325 - t267 * t456 + t327 * t543, g(1) * t495 + g(2) * t472 - t118 * t336 - t119 * t337 + t196 * t324 - t197 * t327 + t205 * t325 + t226 * t457 - t227 * t470 + t326 * t477, -g(1) * t489 - g(2) * t475 + t118 * t227 + t119 * t226 - t196 * t477 + t205 * t197 + t246 * t267 + t262 * t543, -t109 * t233 + t157 * t224, t109 * t232 - t110 * t233 - t156 * t224 - t157 * t222, t276 * t109 - t157 * t484 + t224 * t608 - t225 * t233, t110 * t232 + t156 * t222, t276 * t110 + t156 * t484 - t222 * t608 + t225 * t232, t225 * t276 - t326 * t478, -g(1) * t187 - g(2) * t189 + t103 * t156 + t114 * t110 + t117 * t222 - t83 * t225 + t65 * t232 - t30 * t276 - t484 * t51 + t608 * t75, t103 * t157 - t114 * t109 + t117 * t224 + t84 * t225 + t65 * t233 - t276 * t503 + t484 * t50 - t608 * t76 + t570, g(1) * t240 - g(2) * t732 + t83 * t109 - t84 * t110 - t76 * t156 - t75 * t157 - t50 * t222 - t51 * t224 + t232 * t503 - t30 * t233, -g(1) * t473 - g(2) * t452 + t103 * t117 + t65 * t114 + t30 * t83 + t76 * t50 - t503 * t84 + t75 * t51, t155 * t95 - t176 * t70, -t153 * t95 - t155 * t94 + t175 * t70 - t176 * t71, t155 * t156 + t176 * t717 - t70 * t232 + t533 * t95, t153 * t94 + t175 * t71, -t153 * t156 - t175 * t717 - t71 * t232 - t533 * t94, t156 * t533 + t232 * t717, -g(1) * t125 - g(2) * t127 + t14 * t533 + t47 * t153 + t38 * t156 + t24 * t175 + t8 * t232 + t42 * t449 + t66 * t94 + t78 * t71, -t13 * t533 + t47 * t155 - t39 * t156 + t24 * t176 + t232 * t530 - t449 * t703 + t66 * t95 - t78 * t70 + t571, -t13 * t153 - t14 * t155 + t175 * t530 - t176 * t8 - t38 * t95 - t39 * t94 + t42 * t70 - t703 * t71 - t570, -g(1) * t465 - g(2) * t450 + t39 * t13 + t38 * t14 + t24 * t78 + t8 * t42 + t66 * t47 - t530 * t703, t113 * t58 - t121 * t36, -t111 * t58 - t113 * t57 + t120 * t36 - t121 * t37, t113 * t94 + t121 * t69 + t152 * t58 - t175 * t36, t111 * t57 + t120 * t37, -t111 * t94 - t120 * t69 - t152 * t57 - t175 * t37, t152 * t94 + t175 * t69, t4 * t152 + t17 * t69 + t2 * t175 - t563 * t94 + t12 * t111 + t40 * t37 + t6 * t120 + t31 * t57 - g(1) * (t186 * t443 + t743) - g(2) * t89, -t3 * t152 - t18 * t69 - t1 * t175 - t16 * t94 + t12 * t113 - t40 * t36 + t6 * t121 + t31 * t58 - g(1) * (t186 * t446 - t744) - g(2) * t88, -t1 * t120 - t111 * t3 - t113 * t4 - t121 * t2 - t16 * t57 + t17 * t36 - t18 * t37 + t563 * t58 - t571, t1 * t18 + t16 * t3 + t2 * t17 - t563 * t4 + t6 * t40 + t31 * t12 - g(1) * (t125 * pkin(5) + t124 * pkin(13) + t465) - g(2) * (t127 * pkin(5) + t126 * pkin(13) + t450); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t439 * t667 - t637) * t440 (qJDD(1) * t439 + t441 * t667) * t440, -t448 * t720, qJDD(2) + (qJD(1) * t559 - t634 - t682) * t440 + t613, 0, 0, 0, 0, 0, 0, t324 * t544 + t635 * t578 + t712 * t641 + (-qJDD(1) * t528 + t651 * t712 + t587) * t686, -t327 * t544 - t686 * t456 + t511 * t577 + t719 * t513, t719 * t324 - t712 * t327 + t457 * t578 - t470 * t577, t118 * t577 + t119 * t578 + t246 * t686 - t205 * t359 + t477 * t360 + (-t262 * t439 * t592 - t634) * t440 + (-t205 * t577 - t477 * t578) * qJD(3) + t613, 0, 0, 0, 0, 0, 0, t382 * t110 + t222 * t497 - t225 * t461 + t657 * t484, -t382 * t109 + t224 * t497 + t342 * t225 + t658 * t484, t109 * t461 - t110 * t342 - t222 * t658 + t224 * t657, t103 * t497 + t30 * t461 - t342 * t503 + t65 * t382 - t657 * t75 + t658 * t76 + t508, 0, 0, 0, 0, 0, 0, t657 * t153 - t285 * t449 - t461 * t71 - t661 * t533, t657 * t155 - t286 * t449 + t461 * t70 - t662 * t533, -t153 * t662 + t155 * t661 - t285 * t70 - t286 * t71, -t24 * t461 - t8 * t285 - t286 * t530 - t38 * t661 + t39 * t662 + t657 * t66 + t508, 0, 0, 0, 0, 0, 0, t111 * t661 + t152 * t663 + t237 * t69 + t285 * t37, t113 * t661 - t152 * t664 - t238 * t69 - t285 * t36, -t111 * t664 - t113 * t663 + t237 * t36 - t238 * t37, t1 * t238 + t16 * t664 + t2 * t237 + t6 * t285 + t31 * t661 - t563 * t663 + t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t669, -t324 ^ 2 + t327 ^ 2, -t641 * t324 + (-t324 * t601 + t480) * qJD(1) + t464, t669, -t327 * t513 - t470, -t511, g(1) * t460 + g(2) * t282 + g(3) * t336 - t262 * t327 - t477 * t532 + t534, g(1) * t284 + g(2) * t281 + g(3) * t337 - t205 * t513 - t262 * t324 - t118, 0, 0, -t109 * t598 + t224 * t514, -t109 * t576 - t110 * t598 + t222 * t250 + t249 * t224 + (-t222 * t576 - t224 * t598) * qJD(4), -t109 * t685 - t224 * t607 - t225 * t598 + t250 * t484 - t474 * t708, -t110 * t576 + t222 * t531, -t110 * t685 + t222 * t607 - t225 * t576 - t249 * t484 + t445 * t474, -t225 * t685 + t327 * t478, -g(1) * t212 - g(2) * t210 - g(3) * t264 + t103 * t531 - t110 * t621 - t128 * t222 - t390 * t225 + t30 * t685 + t687 * t484 - t576 * t65 - t607 * t75, t103 * t514 + t109 * t621 - t128 * t224 + t391 * t225 + t688 * t484 + t503 * t685 + t598 * t65 + t607 * t76 - t519, -t503 * t576 - g(1) * t609 - g(2) * t611 - g(3) * t606 - t30 * t598 + t390 * t109 - t391 * t110 + t76 * t249 + t75 * t250 + t687 * t224 - t688 * t222 + (-t576 * t75 - t598 * t76) * qJD(4), -g(1) * t536 - g(2) * t537 + g(3) * t535 - t103 * t128 + t30 * t390 - t391 * t503 - t621 * t65 - t687 * t75 + t688 * t76, -t155 * t656 - t389 * t70, t153 * t656 - t155 * t655 + t388 * t70 - t389 * t71, t531 * t155 + t389 * t449 - t656 * t533 + t576 * t70, t153 * t655 + t388 * t71, -t531 * t153 - t388 * t449 - t655 * t533 + t576 * t71, -t449 * t576 + t531 * t533, -g(1) * t151 - g(2) * t149 - g(3) * t217 + t723 * t153 + t24 * t388 + t298 * t449 + t372 * t71 + t531 * t38 + t691 * t533 - t576 * t8 + t655 * t66, t723 * t155 + t24 * t389 - t372 * t70 - t531 * t39 - t449 * t718 - t530 * t576 - t692 * t533 - t656 * t66 - t522, -t153 * t692 - t155 * t691 + t298 * t70 + t38 * t656 + t388 * t530 - t389 * t8 - t39 * t655 - t71 * t718 + t519, -g(1) * t500 - g(2) * t501 - g(3) * t499 + t24 * t372 + t8 * t298 + t691 * t38 + t692 * t39 - t530 * t718 + t66 * t723, t113 * t660 - t351 * t36, -t111 * t660 - t113 * t659 + t350 * t36 - t351 * t37, t113 * t655 + t152 * t660 + t351 * t69 - t36 * t388, t111 * t659 + t350 * t37, -t111 * t655 - t152 * t659 - t350 * t69 - t37 * t388, t152 * t655 + t388 * t69, t213 * t69 + t2 * t388 + t288 * t37 + t6 * t350 - g(1) * (t151 * t446 + t211 * t443) - g(2) * (t149 * t446 + t209 * t443) - g(3) * (t217 * t446 + t263 * t443) + t659 * t31 + t694 * t152 - t655 * t563 + t693 * t111, -t214 * t69 - t1 * t388 - t288 * t36 + t6 * t351 - g(1) * (-t151 * t443 + t211 * t446) - g(2) * (-t149 * t443 + t209 * t446) - g(3) * (-t217 * t443 + t263 * t446) + t660 * t31 - t655 * t16 - t695 * t152 + t693 * t113, -t1 * t350 - t111 * t695 - t113 * t694 - t16 * t659 - t2 * t351 + t213 * t36 - t214 * t37 + t563 * t660 + t522, t1 * t214 + t2 * t213 + t6 * t288 - g(1) * (t151 * pkin(5) + t150 * pkin(13) + t500) - g(2) * (t149 * pkin(5) + t148 * pkin(13) + t501) - g(3) * (t217 * pkin(5) + t216 * pkin(13) + t499) + t693 * t31 + t695 * t16 - t694 * t563; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t672, -t222 ^ 2 + t224 ^ 2, -t222 * t484 - t109, -t672, -t224 * t484 - t110, -t225, -t103 * t224 - t484 * t76 + t30 + t521, t103 * t222 - t484 * t75 + t503 + t520, 0, 0, -t444 * t70 + t447 * t721 (-t70 - t722) * t447 + (-t71 - t721) * t444, -t155 * t224 + t444 * t717 + t447 * t479, t153 * t590 - t447 * t71, t153 * t224 - t444 * t479 + t447 * t717, -t533 * t224, -pkin(4) * t71 + g(1) * t673 + g(2) * t675 + g(3) * t670 - t76 * t153 - t38 * t224 - t24 * t447 - t512 * t704 - t533 * t59 + t647 * t66 + (-pkin(12) * t449 + t696) * t444, pkin(4) * t70 - g(1) * t674 - g(2) * t676 - g(3) * t671 - t76 * t155 + t39 * t224 + t24 * t444 + t447 * t696 - t449 * t704 + t533 * t740 + t646 * t66, t153 * t60 + t155 * t59 + ((-t71 + t648) * pkin(12) + t729) * t447 + (-t8 - t533 * t39 + (qJD(5) * t153 - t70) * pkin(12)) * t444 - t520, -t24 * pkin(4) + g(1) * t182 + g(2) * t180 + g(3) * t231 - t38 * t59 - t39 * t60 - t66 * t76 + (-t8 * t444 - t530 * t447 + (-t38 * t447 - t39 * t444) * qJD(5) - t520) * pkin(12), -t36 * t444 * t446 + (-t444 * t644 + t568) * t113, t111 * t134 + t113 * t133 + (-t111 * t446 - t113 * t443) * t646 + (t700 - t699 + (-t113 * t446 + t680) * qJD(6)) * t444, t36 * t447 + t568 * t152 + (t113 * t533 - t152 * t644 + t697) * t444, t37 * t443 * t444 + (t444 * t643 - t569) * t111, t37 * t447 + t569 * t152 + (-t111 * t533 - t152 * t643 - t698) * t444, t152 * t590 - t447 * t69, -t54 * t111 - t31 * t133 + t368 * t69 + t689 * t152 - t520 * t443 + (-t2 + (pkin(12) * t111 + t31 * t443) * qJD(5) + t521 * t446) * t447 + (pkin(12) * t37 + t31 * t643 + t6 * t443 - t533 * t563) * t444, -t54 * t113 - t31 * t134 - t369 * t69 - t690 * t152 - t520 * t446 + (t1 + (pkin(12) * t113 + t31 * t446) * qJD(5) - t521 * t443) * t447 + (-pkin(12) * t36 - t16 * t533 - t31 * t644 + t6 * t446) * t444, t133 * t16 - t134 * t563 + t36 * t368 - t369 * t37 - t689 * t113 - t690 * t111 + t564 * t646 + (-t1 * t443 - t2 * t446 + (-t16 * t446 - t443 * t563) * qJD(6) + t521) * t444, t1 * t369 + t2 * t368 - t31 * t54 - g(1) * (-pkin(5) * t673 - pkin(13) * t674 - t182) - g(2) * (-pkin(5) * t675 - pkin(13) * t676 - t180) - g(3) * (-pkin(5) * t670 - pkin(13) * t671 - t231) + t690 * t16 - t689 * t563 + (t31 * t646 + t444 * t6 - t520) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t677, -t153 ^ 2 + t155 ^ 2, -t70 + t722, -t677, t155 * t222 - t591, t449, -t66 * t155 + t222 * t39 + t524 - t612, t66 * t153 - t523 - t729, 0, 0, t113 * t589 - t700 (-t36 - t681) * t446 + (-t37 - t678) * t443, -t113 * t155 + t152 * t589 + t698, t152 * t680 - t699, -t152 ^ 2 * t443 + t111 * t155 + t697, -t152 * t155, -pkin(5) * t37 - t111 * t39 - t152 * t27 + t155 * t563 + t443 * t529 - t446 * t490, pkin(5) * t36 - t113 * t39 + t152 * t28 + t155 * t16 + t443 * t490 + t446 * t529, t111 * t28 + t113 * t27 + ((-t37 + t645) * pkin(13) + t738) * t446 + ((qJD(6) * t111 - t36) * pkin(13) + t725) * t443 + t523, t563 * t27 - t16 * t28 - t31 * t39 + t510 * pkin(5) + (qJD(6) * t564 + t1 * t446 - t2 * t443 + t523) * pkin(13); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t679, -t111 ^ 2 + t113 ^ 2, -t36 + t681, -t679, t678 - t37, t69, -t31 * t113 - g(1) * t88 - g(2) * (t184 * t446 + t744) + g(3) * t120 - t725, t31 * t111 + g(1) * t89 - g(2) * (-t184 * t443 + t743) + g(3) * t121 - t738, 0, 0;];
tau_reg  = t7;
