% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RPRRRR12
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRR12_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR12_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR12_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RPRRRR12_inertiaDJ_regmin_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:00:42
% EndTime: 2019-03-09 08:01:05
% DurationCPUTime: 7.67s
% Computational Cost: add. (18959->496), mult. (58256->935), div. (0->0), fcn. (64190->16), ass. (0->226)
t174 = sin(qJ(4));
t165 = sin(pkin(8));
t169 = cos(pkin(8));
t166 = sin(pkin(7));
t170 = cos(pkin(7));
t171 = cos(pkin(6));
t164 = sin(pkin(14));
t167 = sin(pkin(6));
t168 = cos(pkin(14));
t271 = t167 * t168;
t292 = pkin(1) * t171;
t260 = qJ(2) * t271 + t164 * t292;
t105 = (t166 * t171 + t170 * t271) * pkin(10) + t260;
t179 = cos(qJ(3));
t175 = sin(qJ(3));
t270 = t168 * t175;
t273 = t166 * t175;
t107 = t171 * t273 + (t164 * t179 + t170 * t270) * t167;
t135 = t166 * t271 - t170 * t171;
t118 = (-pkin(10) * t164 * t166 - pkin(2) * t168 - pkin(1)) * t167;
t153 = t168 * t292;
t277 = t164 * t167;
t108 = t171 * pkin(2) + t153 + (-pkin(10) * t170 - qJ(2)) * t277;
t278 = t108 * t170;
t208 = t118 * t166 + t278;
t290 = pkin(11) * t169;
t55 = -t135 * pkin(3) - t175 * t105 - t107 * t290 + t179 * t208;
t291 = pkin(11) * t165;
t267 = t170 * t179;
t272 = t166 * t179;
t297 = t167 * (-t164 * t175 + t168 * t267) + t171 * t272;
t82 = -t108 * t166 + t170 * t118;
t64 = -pkin(3) * t297 - t107 * t291 + t82;
t212 = t165 * t64 + t169 * t55;
t103 = t107 * qJD(3);
t280 = t103 * t169;
t255 = qJD(3) * t179;
t227 = t166 * t255;
t256 = qJD(2) * t167;
t236 = t164 * t256;
t60 = t175 * (qJD(3) * t105 + t170 * t236) - t179 * t168 * t256 - t118 * t227 - t255 * t278;
t46 = -pkin(11) * t280 - t60;
t178 = cos(qJ(4));
t209 = -t135 * t165 + t169 * t297;
t296 = -t179 * t105 - t175 * t208;
t52 = pkin(11) * t209 - t296;
t51 = t178 * t52;
t304 = -(t174 * t212 + t51) * qJD(4) - t174 * t46;
t173 = sin(qJ(5));
t303 = -0.4e1 * t173;
t269 = t169 * t174;
t274 = t165 * t178;
t259 = pkin(3) * t269 + pkin(11) * t274;
t130 = pkin(12) * t169 + t259;
t131 = (-pkin(4) * t178 - pkin(12) * t174 - pkin(3)) * t165;
t177 = cos(qJ(5));
t302 = t177 * t130 + t173 * t131;
t268 = t169 * t178;
t102 = t297 * qJD(3);
t61 = (-t164 * t267 - t270) * t256 + t296 * qJD(3);
t47 = -t102 * t290 + t61;
t301 = -t47 * t268 - t304;
t275 = t165 * t177;
t279 = t107 * t174;
t43 = -t103 * t269 + t102 * t178 + (t178 * t209 - t279) * qJD(4);
t71 = t107 * t178 + t174 * t209;
t89 = t135 * t169 + t165 * t297;
t54 = -t173 * t89 + t177 * t71;
t31 = qJD(5) * t54 - t103 * t275 + t43 * t173;
t281 = t103 * t165;
t53 = t173 * t71 + t89 * t177;
t32 = -qJD(5) * t53 + t173 * t281 + t43 * t177;
t300 = t31 * pkin(5) - t32 * pkin(13);
t176 = cos(qJ(6));
t162 = t176 ^ 2;
t172 = sin(qJ(6));
t258 = t172 ^ 2 - t162;
t224 = t258 * qJD(6);
t298 = -t174 * t52 + t178 * t212;
t132 = (pkin(4) * t174 - pkin(12) * t178) * t165 * qJD(4);
t254 = qJD(4) * t174;
t230 = t165 * t254;
t253 = qJD(4) * t178;
t234 = t169 * t253;
t133 = -pkin(3) * t234 + pkin(11) * t230;
t77 = -qJD(5) * t302 + t177 * t132 + t173 * t133;
t229 = t165 * t253;
t276 = t165 * t174;
t220 = t166 * t236;
t78 = pkin(3) * t103 - t102 * t291 + t220;
t17 = -t178 * t46 - t64 * t229 - t55 * t234 + t254 * t52 - t47 * t269 - t78 * t276;
t15 = pkin(12) * t281 - t17;
t38 = -t165 * t47 + t169 * t78;
t42 = qJD(4) * t71 + t102 * t174 + t103 * t268;
t24 = pkin(4) * t42 - pkin(12) * t43 + t38;
t242 = t55 * t269 + t64 * t276 + t51;
t27 = -pkin(12) * t89 + t242;
t35 = -t165 * t55 + t169 * t64;
t70 = t135 * t274 - t268 * t297 + t279;
t30 = pkin(4) * t70 - pkin(12) * t71 + t35;
t287 = t173 * t30 + t177 * t27;
t6 = -qJD(5) * t287 - t173 * t15 + t177 * t24;
t295 = 0.2e1 * t165;
t289 = pkin(12) * t165;
t288 = pkin(12) * t172;
t39 = t172 * t54 - t70 * t176;
t22 = -qJD(6) * t39 + t42 * t172 + t32 * t176;
t285 = t22 * t172;
t284 = t22 * t176;
t137 = -t177 * t169 + t173 * t276;
t112 = -qJD(5) * t137 + t177 * t229;
t138 = t169 * t173 + t174 * t275;
t114 = t138 * t172 + t176 * t274;
t80 = -qJD(6) * t114 + t176 * t112 + t172 * t230;
t283 = t80 * t172;
t158 = t165 ^ 2;
t282 = t103 * t158;
t266 = t173 * t176;
t265 = t174 * t175;
t264 = t174 * t179;
t263 = t175 * t178;
t262 = t176 * t177;
t161 = t173 ^ 2;
t257 = -t177 ^ 2 + t161;
t252 = qJD(5) * t172;
t251 = qJD(5) * t173;
t250 = qJD(5) * t176;
t249 = qJD(5) * t177;
t248 = qJD(5) * t178;
t247 = qJD(6) * t172;
t246 = qJD(6) * t176;
t245 = qJD(6) * t177;
t244 = -0.2e1 * pkin(4) * qJD(5);
t243 = -0.2e1 * pkin(5) * qJD(6);
t241 = t177 * t288;
t240 = pkin(12) * t262;
t239 = t172 * t274;
t235 = t158 * t253;
t233 = t176 * t249;
t232 = t172 * t245;
t231 = t176 * t245;
t228 = qJD(3) * t273;
t226 = t172 * t246;
t225 = t173 * t249;
t223 = t257 * qJD(5);
t222 = -0.2e1 * t171 * t256;
t221 = 0.2e1 * t225;
t219 = t158 * t228;
t218 = t165 * t228;
t217 = t174 * t235;
t216 = t172 * t233;
t215 = -pkin(5) * t177 - pkin(13) * t173;
t214 = pkin(5) * t173 - pkin(13) * t177;
t11 = pkin(13) * t70 + t287;
t26 = t89 * pkin(4) - t298;
t20 = t53 * pkin(5) - t54 * pkin(13) + t26;
t8 = t11 * t176 + t172 * t20;
t40 = t172 * t70 + t176 * t54;
t211 = -t172 * t40 - t176 * t39;
t154 = pkin(11) * t276;
t129 = t154 + (-pkin(3) * t178 - pkin(4)) * t169;
t92 = t137 * pkin(5) - t138 * pkin(13) + t129;
t94 = -pkin(13) * t274 + t302;
t66 = t172 * t92 + t176 * t94;
t12 = -t173 * t27 + t177 * t30;
t110 = -t170 * t274 + (-t179 * t268 + t265) * t166;
t191 = t169 * t264 + t263;
t111 = t166 * t191 + t170 * t276;
t136 = -t165 * t272 + t169 * t170;
t91 = t111 * t177 + t136 * t173;
t74 = t110 * t172 + t176 * t91;
t115 = t138 * t176 - t239;
t207 = -t114 * t176 - t115 * t172;
t97 = -t130 * t173 + t131 * t177;
t149 = -pkin(4) + t215;
t126 = t149 * t172 + t240;
t10 = -pkin(5) * t70 - t12;
t4 = -t42 * pkin(5) - t6;
t204 = t10 * t246 + t4 * t172;
t203 = t10 * t247 - t4 * t176;
t201 = t173 * t42 + t249 * t70;
t200 = -t177 * t42 + t251 * t70;
t199 = t172 * t31 + t246 * t53;
t198 = -t176 * t31 + t247 * t53;
t87 = -t234 * t272 - t170 * t229 - t178 * t227 + (qJD(3) * t169 + qJD(4)) * t166 * t265;
t63 = qJD(5) * t91 - t173 * t87 - t177 * t218;
t90 = t111 * t173 - t177 * t136;
t197 = t172 * t63 + t246 * t90;
t196 = -t176 * t63 + t247 * t90;
t68 = -pkin(5) * t230 - t77;
t93 = pkin(5) * t274 - t97;
t195 = t68 * t172 + t246 * t93;
t194 = -t68 * t176 + t247 * t93;
t193 = t214 * t172;
t5 = -t177 * t15 - t173 * t24 - t30 * t249 + t251 * t27;
t113 = qJD(5) * t138 + t173 * t229;
t190 = t113 * t172 + t137 * t246;
t189 = -t113 * t176 + t137 * t247;
t76 = t130 * t251 - t131 * t249 - t173 * t132 + t177 * t133;
t187 = t173 * t248 + t177 * t254;
t186 = t173 * t254 - t177 * t248;
t185 = -t173 * t247 + t233;
t184 = t173 * t250 + t232;
t134 = t259 * qJD(4);
t183 = -pkin(13) * t42 + t5;
t181 = pkin(13) * t230 - t76;
t180 = t113 * pkin(5) - t112 * pkin(13) + t134;
t16 = (-pkin(4) * t103 - t178 * t78) * t165 + t301;
t125 = t149 * t176 - t241;
t96 = -t126 * qJD(6) + (t173 * t288 + t176 * t214) * qJD(5);
t95 = pkin(12) * t184 - qJD(5) * t193 - t149 * t246;
t88 = t170 * t230 + (t191 * qJD(4) + (t169 * t263 + t264) * qJD(3)) * t166;
t81 = -qJD(6) * t239 + t112 * t172 + t138 * t246 - t176 * t230;
t73 = t110 * t176 - t172 * t91;
t65 = -t172 * t94 + t176 * t92;
t62 = t111 * t251 - t136 * t249 - t173 * t218 + t177 * t87;
t37 = -qJD(6) * t74 + t172 * t62 + t176 * t88;
t36 = -t110 * t246 - t172 * t88 + t176 * t62 + t247 * t91;
t34 = -qJD(6) * t66 - t172 * t181 + t176 * t180;
t33 = -t172 * t180 - t176 * t181 - t246 * t92 + t247 * t94;
t21 = qJD(6) * t40 + t32 * t172 - t42 * t176;
t18 = (t165 * t78 + t169 * t47) * t178 + t304;
t7 = -t11 * t172 + t176 * t20;
t2 = -t8 * qJD(6) + t172 * t183 + (-pkin(4) * t281 - t78 * t274 + t300 + t301) * t176;
t1 = t11 * t247 - t20 * t246 + t176 * t183 - t172 * (t16 + t300);
t3 = [0, 0, 0, t164 * t222, t168 * t222, 0.2e1 * (t164 ^ 2 + t168 ^ 2) * t167 ^ 2 * qJD(2), 0.2e1 * (t260 * t168 + (qJ(2) * t277 - t153) * t164) * t256, 0.2e1 * t107 * t102, 0.2e1 * t102 * t297 - 0.2e1 * t103 * t107, -0.2e1 * t135 * t102, 0.2e1 * t135 * t103, 0, 0.2e1 * t103 * t82 - 0.2e1 * t135 * t61 - 0.2e1 * t220 * t297, 0.2e1 * t102 * t82 + 0.2e1 * t107 * t220 - 0.2e1 * t135 * t60, 0.2e1 * t71 * t43, -0.2e1 * t42 * t71 - 0.2e1 * t43 * t70, 0.2e1 * t71 * t281 - 0.2e1 * t43 * t89, -0.2e1 * t70 * t281 + 0.2e1 * t42 * t89, -0.2e1 * t89 * t281, -0.2e1 * t18 * t89 + 0.2e1 * t298 * t281 + 0.2e1 * t35 * t42 + 0.2e1 * t38 * t70, -0.2e1 * t17 * t89 - 0.2e1 * t242 * t281 + 0.2e1 * t35 * t43 + 0.2e1 * t38 * t71, 0.2e1 * t54 * t32, -0.2e1 * t31 * t54 - 0.2e1 * t32 * t53, 0.2e1 * t32 * t70 + 0.2e1 * t42 * t54, -0.2e1 * t31 * t70 - 0.2e1 * t42 * t53, 0.2e1 * t70 * t42, 0.2e1 * t12 * t42 + 0.2e1 * t16 * t53 + 0.2e1 * t26 * t31 + 0.2e1 * t6 * t70, 0.2e1 * t16 * t54 + 0.2e1 * t26 * t32 - 0.2e1 * t287 * t42 + 0.2e1 * t5 * t70, 0.2e1 * t40 * t22, -0.2e1 * t21 * t40 - 0.2e1 * t22 * t39, 0.2e1 * t22 * t53 + 0.2e1 * t31 * t40, -0.2e1 * t21 * t53 - 0.2e1 * t31 * t39, 0.2e1 * t53 * t31, 0.2e1 * t10 * t21 + 0.2e1 * t2 * t53 + 0.2e1 * t31 * t7 + 0.2e1 * t39 * t4, 0.2e1 * t1 * t53 + 0.2e1 * t10 * t22 - 0.2e1 * t31 * t8 + 0.2e1 * t4 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103 * t170 + t135 * t228, t170 * t102 + t135 * t227, 0, 0, 0, 0, 0, t136 * t42 + t88 * t89 + (-t103 * t110 + t228 * t70) * t165, t136 * t43 - t87 * t89 + (-t103 * t111 + t228 * t71) * t165, 0, 0, 0, 0, 0, t110 * t31 - t42 * t90 + t53 * t88 - t63 * t70, t110 * t32 - t42 * t91 + t54 * t88 + t62 * t70, 0, 0, 0, 0, 0, t21 * t90 + t31 * t73 + t37 * t53 + t39 * t63, t22 * t90 - t31 * t74 + t36 * t53 + t40 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, -t103, 0, t61, t60 (t174 * t43 + t253 * t71) * t165 (-t174 * t42 + t178 * t43 + (-t174 * t71 - t178 * t70) * qJD(4)) * t165, t169 * t43 + t174 * t282 - t229 * t89, -t169 * t42 + t178 * t282 + t230 * t89, t165 * t280, t134 * t89 + t18 * t169 + (-pkin(3) * t42 - t38 * t178 + t35 * t254 + (pkin(3) * t268 - t154) * t103) * t165, -t133 * t89 + t17 * t169 + (-pkin(3) * t43 - t103 * t259 + t38 * t174 + t253 * t35) * t165, t112 * t54 + t138 * t32, -t112 * t53 - t113 * t54 - t137 * t32 - t138 * t31, t112 * t70 + t138 * t42 + (-t178 * t32 + t254 * t54) * t165, -t113 * t70 - t137 * t42 + (t178 * t31 - t254 * t53) * t165 (-t178 * t42 + t254 * t70) * t165, t26 * t113 + t129 * t31 + t134 * t53 + t16 * t137 + t97 * t42 + t77 * t70 + (t12 * t254 - t178 * t6) * t165, t26 * t112 + t129 * t32 + t134 * t54 + t16 * t138 - t302 * t42 + t76 * t70 + (-t178 * t5 - t254 * t287) * t165, t115 * t22 + t40 * t80, -t114 * t22 - t115 * t21 - t39 * t80 - t40 * t81, t113 * t40 + t115 * t31 + t137 * t22 + t53 * t80, -t113 * t39 - t114 * t31 - t137 * t21 - t53 * t81, t113 * t53 + t137 * t31, t10 * t81 + t113 * t7 + t114 * t4 + t137 * t2 + t21 * t93 + t31 * t65 + t34 * t53 + t39 * t68, t1 * t137 + t10 * t80 - t113 * t8 + t115 * t4 + t22 * t93 - t31 * t66 + t33 * t53 + t40 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t228, -t227, 0, 0, 0, 0, 0, t136 * t230 - t169 * t88 - t178 * t219, t136 * t229 + t169 * t87 + t174 * t219, 0, 0, 0, 0, 0, t110 * t113 + t88 * t137 + (t178 * t63 - t254 * t90) * t165, t110 * t112 + t88 * t138 + (-t178 * t62 - t254 * t91) * t165, 0, 0, 0, 0, 0, t113 * t73 + t114 * t63 + t137 * t37 + t81 * t90, -t113 * t74 + t115 * t63 + t137 * t36 + t80 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t217, 0.2e1 * (-t174 ^ 2 + t178 ^ 2) * t158 * qJD(4), 0.2e1 * t169 * t229, -0.2e1 * t169 * t230, 0, -0.2e1 * pkin(3) * t158 * t254 - 0.2e1 * t134 * t169, -0.2e1 * pkin(3) * t235 + 0.2e1 * t133 * t169, 0.2e1 * t138 * t112, -0.2e1 * t112 * t137 - 0.2e1 * t113 * t138 (-t112 * t178 + t138 * t254) * t295 (t113 * t178 - t137 * t254) * t295, -0.2e1 * t217, 0.2e1 * t129 * t113 + 0.2e1 * t134 * t137 + 0.2e1 * (-t178 * t77 + t254 * t97) * t165, 0.2e1 * t129 * t112 + 0.2e1 * t134 * t138 + 0.2e1 * (-t178 * t76 - t254 * t302) * t165, 0.2e1 * t115 * t80, -0.2e1 * t114 * t80 - 0.2e1 * t115 * t81, 0.2e1 * t113 * t115 + 0.2e1 * t137 * t80, -0.2e1 * t113 * t114 - 0.2e1 * t137 * t81, 0.2e1 * t137 * t113, 0.2e1 * t113 * t65 + 0.2e1 * t114 * t68 + 0.2e1 * t137 * t34 + 0.2e1 * t81 * t93, -0.2e1 * t113 * t66 + 0.2e1 * t115 * t68 + 0.2e1 * t137 * t33 + 0.2e1 * t80 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t43, -t42, t281, t18, t17, t173 * t32 + t249 * t54, -t173 * t31 + t32 * t177 + (-t173 * t54 - t177 * t53) * qJD(5), t201, -t200, 0, -pkin(4) * t31 - pkin(12) * t201 - t16 * t177 + t251 * t26, -pkin(4) * t32 + pkin(12) * t200 + t16 * t173 + t249 * t26, t40 * t233 + (-t247 * t40 + t284) * t173, t211 * t249 + (-t285 - t176 * t21 + (t172 * t39 - t176 * t40) * qJD(6)) * t173 (t250 * t53 - t22) * t177 + (qJD(5) * t40 - t198) * t173 (-t252 * t53 + t21) * t177 + (-qJD(5) * t39 - t199) * t173, -t177 * t31 + t251 * t53, t125 * t31 + t96 * t53 + (-t2 + (pkin(12) * t39 + t10 * t172) * qJD(5)) * t177 + (pkin(12) * t21 + qJD(5) * t7 + t204) * t173, -t126 * t31 + t95 * t53 + (-t1 + (pkin(12) * t40 + t10 * t176) * qJD(5)) * t177 + (pkin(12) * t22 - qJD(5) * t8 - t203) * t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t88, t87, 0, 0, 0, 0, 0, t110 * t251 - t177 * t88, t110 * t249 + t173 * t88, 0, 0, 0, 0, 0 (t252 * t90 - t37) * t177 + (qJD(5) * t73 + t197) * t173 (t250 * t90 - t36) * t177 + (-qJD(5) * t74 - t196) * t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, -t230, 0, -t134, t133, t112 * t173 + t138 * t249, t112 * t177 - t173 * t113 + (-t137 * t177 - t138 * t173) * qJD(5), t186 * t165, t187 * t165, 0, -pkin(4) * t113 + t129 * t251 - t134 * t177 - t186 * t289, -pkin(4) * t112 + t129 * t249 + t134 * t173 - t187 * t289, t115 * t185 + t266 * t80, t207 * t249 + (-t283 - t176 * t81 + (t114 * t172 - t115 * t176) * qJD(6)) * t173 (t137 * t250 - t80) * t177 + (qJD(5) * t115 - t189) * t173 (-t137 * t252 + t81) * t177 + (-qJD(5) * t114 - t190) * t173, -t113 * t177 + t137 * t251, t125 * t113 + t96 * t137 + (-t34 + (pkin(12) * t114 + t172 * t93) * qJD(5)) * t177 + (pkin(12) * t81 + qJD(5) * t65 + t195) * t173, -t126 * t113 + t95 * t137 + (-t33 + (pkin(12) * t115 + t176 * t93) * qJD(5)) * t177 + (pkin(12) * t80 - qJD(5) * t66 - t194) * t173; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t221, -0.2e1 * t223, 0, 0, 0, t173 * t244, t177 * t244, -0.2e1 * t161 * t226 + 0.2e1 * t162 * t225, 0.2e1 * t161 * t224 + t216 * t303, 0.2e1 * t173 * t232 + 0.2e1 * t250 * t257, -0.2e1 * t172 * t223 + 0.2e1 * t173 * t231, -0.2e1 * t225, 0.2e1 * t125 * t251 - 0.2e1 * t96 * t177 + 0.2e1 * (t161 * t246 + t172 * t221) * pkin(12), -0.2e1 * t126 * t251 - 0.2e1 * t95 * t177 + 0.2e1 * (-t161 * t247 + t176 * t221) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, -t31, t42, t6, t5, t246 * t40 + t285, qJD(6) * t211 - t172 * t21 + t284, t199, -t198, 0, -pkin(5) * t21 - pkin(13) * t199 + t203, -pkin(5) * t22 + pkin(13) * t198 + t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t63, t62, 0, 0, 0, 0, 0, t196, t197; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, -t113, t230, t77, t76, t115 * t246 + t283, qJD(6) * t207 - t172 * t81 + t80 * t176, t190, -t189, 0, -pkin(5) * t81 - pkin(13) * t190 + t194, -pkin(5) * t80 + pkin(13) * t189 + t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249, -t251, 0, -pkin(12) * t249, pkin(12) * t251, -t173 * t224 + t216, t226 * t303 - t249 * t258, t172 * t251 - t231, t184, 0 (pkin(13) * t262 + (-pkin(5) * t176 + t288) * t173) * qJD(6) + (t172 * t215 - t240) * qJD(5) (pkin(12) * t266 + t193) * qJD(6) + (t176 * t215 + t241) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t226, -0.2e1 * t224, 0, 0, 0, t172 * t243, t176 * t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, -t21, t31, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, -t81, t113, t34, t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, -t172 * t249 - t173 * t246, t251, t96, t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, -t247, 0, -pkin(13) * t246, pkin(13) * t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
