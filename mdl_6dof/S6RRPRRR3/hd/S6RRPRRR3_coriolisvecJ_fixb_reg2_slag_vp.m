% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRR3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRR3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:25:19
% EndTime: 2019-03-09 13:25:44
% DurationCPUTime: 11.23s
% Computational Cost: add. (25037->603), mult. (61852->806), div. (0->0), fcn. (47172->10), ass. (0->277)
t290 = sin(qJ(4));
t349 = qJD(4) * t290;
t294 = cos(qJ(2));
t389 = cos(pkin(11));
t327 = t389 * t294;
t273 = qJD(1) * t327;
t287 = sin(pkin(11));
t291 = sin(qJ(2));
t350 = qJD(1) * t291;
t248 = t287 * t350 - t273;
t372 = t248 * t290;
t447 = t349 + t372;
t292 = cos(qJ(5));
t293 = cos(qJ(4));
t289 = sin(qJ(5));
t364 = t289 * t290;
t264 = -t292 * t293 + t364;
t363 = t289 * t293;
t265 = t290 * t292 + t363;
t165 = t265 * t248;
t306 = t265 * qJD(4);
t299 = t265 * qJD(5) + t306;
t298 = t165 + t299;
t344 = t293 * qJD(2);
t262 = t287 * t294 + t291 * t389;
t352 = qJD(1) * t262;
t210 = t290 * t352 - t344;
t212 = qJD(2) * t290 + t293 * t352;
t313 = -t210 * t289 + t292 * t212;
t343 = qJD(1) * qJD(2);
t332 = t291 * t343;
t272 = t287 * t332;
t232 = qJD(2) * t273 - t272;
t153 = -qJD(4) * t344 - t293 * t232 + t349 * t352;
t373 = t232 * t290;
t154 = qJD(4) * t212 + t373;
t346 = qJD(5) * t292;
t347 = qJD(5) * t289;
t68 = t292 * t153 + t289 * t154 + t210 * t346 + t212 * t347;
t446 = t264 * t68 - t298 * t313;
t341 = pkin(2) * t350;
t172 = pkin(3) * t352 + pkin(8) * t248 + t341;
t402 = -qJ(3) - pkin(7);
t271 = t402 * t294;
t267 = qJD(1) * t271;
t254 = t287 * t267;
t270 = t402 * t291;
t266 = qJD(1) * t270;
t197 = t266 * t389 + t254;
t122 = t293 * t172 - t197 * t290;
t278 = pkin(2) * t287 + pkin(8);
t403 = pkin(9) + t278;
t329 = qJD(4) * t403;
t445 = pkin(4) * t352 + t122 + (pkin(9) * t248 + t329) * t293;
t123 = t290 * t172 + t293 * t197;
t444 = pkin(9) * t372 + t290 * t329 + t123;
t135 = t292 * t210 + t212 * t289;
t288 = sin(qJ(6));
t408 = cos(qJ(6));
t428 = -t288 * t135 + t313 * t408;
t89 = t408 * t135 + t288 * t313;
t404 = t89 * t428;
t328 = t389 * t267;
t195 = t266 * t287 - t328;
t443 = t447 * pkin(4) - t195;
t342 = qJD(4) + qJD(5);
t348 = qJD(4) * t293;
t354 = t264 * t248 - t292 * t348 - t293 * t346 + t342 * t364;
t434 = t428 ^ 2 - t89 ^ 2;
t238 = qJD(4) + t248;
t230 = qJD(5) + t238;
t423 = pkin(10) * t313;
t283 = -pkin(2) * t294 - pkin(1);
t351 = qJD(1) * t283;
t268 = qJD(3) + t351;
t159 = pkin(3) * t248 - pkin(8) * t352 + t268;
t399 = qJD(2) * pkin(2);
t258 = t266 + t399;
t190 = t287 * t258 - t328;
t180 = qJD(2) * pkin(8) + t190;
t113 = t293 * t159 - t180 * t290;
t95 = -pkin(9) * t212 + t113;
t73 = pkin(4) * t238 + t95;
t114 = t159 * t290 + t180 * t293;
t96 = -pkin(9) * t210 + t114;
t84 = t289 * t96;
t43 = t292 * t73 - t84;
t33 = t43 - t423;
t29 = pkin(5) * t230 + t33;
t437 = pkin(10) * t135;
t86 = t292 * t96;
t44 = t289 * t73 + t86;
t34 = t44 - t437;
t394 = t288 * t34;
t12 = t29 * t408 - t394;
t339 = t408 * t34;
t13 = t288 * t29 + t339;
t442 = -t12 * t89 + t13 * t428;
t226 = qJD(6) + t230;
t312 = -t289 * t153 + t154 * t292 - t210 * t347 + t212 * t346;
t333 = qJD(6) * t408;
t345 = qJD(6) * t288;
t25 = t135 * t333 + t288 * t312 + t313 * t345 + t408 * t68;
t432 = t226 * t89 - t25;
t250 = t262 * qJD(2);
t231 = qJD(1) * t250;
t330 = qJD(2) * t402;
t243 = qJD(3) * t294 + t291 * t330;
t218 = t243 * qJD(1);
t244 = -qJD(3) * t291 + t294 * t330;
t219 = t244 * qJD(1);
t150 = t218 * t389 + t287 * t219;
t276 = pkin(2) * t332;
t157 = pkin(3) * t231 - pkin(8) * t232 + t276;
t61 = -qJD(4) * t114 - t150 * t290 + t293 * t157;
t41 = pkin(4) * t231 + pkin(9) * t153 + t61;
t60 = t293 * t150 + t290 * t157 + t159 * t348 - t180 * t349;
t47 = -pkin(9) * t154 + t60;
t9 = -qJD(5) * t44 - t289 * t47 + t292 * t41;
t6 = pkin(5) * t231 + pkin(10) * t68 + t9;
t326 = -t289 * t41 - t292 * t47 - t73 * t346 + t96 * t347;
t7 = -pkin(10) * t312 - t326;
t302 = -t288 * t6 - t29 * t333 + t34 * t345 - t408 * t7;
t189 = t258 * t389 + t254;
t179 = -qJD(2) * pkin(3) - t189;
t129 = t210 * pkin(4) + t179;
t79 = t135 * pkin(5) + t129;
t431 = t79 * t89 + t302;
t259 = t403 * t290;
t260 = t403 * t293;
t184 = -t289 * t259 + t292 * t260;
t392 = -qJD(5) * t184 + t444 * t289 - t445 * t292;
t438 = t259 * t346 + t445 * t289 + t444 * t292;
t2 = -qJD(6) * t13 - t288 * t7 + t408 * t6;
t416 = -t428 * t79 + t2;
t26 = qJD(6) * t428 - t288 * t68 + t408 * t312;
t414 = t226 * t428 - t26;
t436 = pkin(5) * t352 - pkin(10) * t354 - t392;
t365 = t289 * t260;
t406 = pkin(10) * t265;
t435 = -(-t365 - t406) * qJD(5) + t438 + (t165 + t306) * pkin(10);
t385 = t135 * t313;
t358 = t264 * t333 + t265 * t345 + t288 * t298 + t354 * t408;
t198 = -t288 * t264 + t265 * t408;
t357 = qJD(6) * t198 - t288 * t354 + t298 * t408;
t307 = -t287 * t291 + t327;
t253 = t307 * qJD(2);
t370 = t253 * t290;
t309 = t262 * t348 + t370;
t433 = -t135 ^ 2 + t313 ^ 2;
t430 = t135 * t230 - t68;
t429 = t129 * t135 + t326;
t424 = -0.2e1 * t343;
t422 = -t113 * t238 + t60;
t421 = t114 * t238 + t61;
t323 = t238 * t290;
t420 = t212 * t323;
t188 = -pkin(3) * t307 - pkin(8) * t262 + t283;
t209 = t287 * t270 - t271 * t389;
t127 = t293 * t188 - t209 * t290;
t367 = t262 * t293;
t107 = -pkin(4) * t307 - pkin(9) * t367 + t127;
t200 = t293 * t209;
t128 = t290 * t188 + t200;
t368 = t262 * t290;
t117 = -pkin(9) * t368 + t128;
t63 = t289 * t107 + t292 * t117;
t415 = -t129 * t313 + t9;
t413 = t198 * t231 - t226 * t358;
t412 = t230 * t313 - t312;
t411 = -t230 * t354 + t231 * t265;
t196 = t264 * t408 + t265 * t288;
t410 = t196 * t25 - t357 * t428;
t409 = t352 ^ 2;
t407 = pkin(2) * t291;
t183 = -t292 * t259 - t365;
t151 = t183 - t406;
t152 = -pkin(10) * t264 + t184;
t100 = t288 * t151 + t152 * t408;
t401 = qJD(6) * t100 - t288 * t435 + t408 * t436;
t99 = t151 * t408 - t288 * t152;
t400 = -qJD(6) * t99 + t288 * t436 + t408 * t435;
t49 = t292 * t95 - t84;
t397 = t352 * t89;
t396 = t352 * t428;
t393 = -t260 * t347 - t438;
t282 = pkin(4) * t292 + pkin(5);
t336 = t408 * t289;
t48 = -t289 * t95 - t86;
t35 = t48 + t437;
t36 = t49 - t423;
t391 = -t288 * t36 + t408 * t35 + t282 * t345 - (-t289 * t333 + (-t288 * t292 - t336) * qJD(5)) * pkin(4);
t366 = t288 * t289;
t390 = -t288 * t35 - t408 * t36 + t282 * t333 + (-t289 * t345 + (t292 * t408 - t366) * qJD(5)) * pkin(4);
t386 = t135 * t352;
t384 = t313 * t352;
t149 = t287 * t218 - t389 * t219;
t208 = -t389 * t270 - t271 * t287;
t383 = t149 * t208;
t382 = t153 * t290;
t381 = t154 * t293;
t379 = t210 * t248;
t378 = t210 * t352;
t377 = t212 * t210;
t376 = t212 * t352;
t194 = t231 * t307;
t374 = t231 * t290;
t371 = t352 * t248;
t369 = t253 * t293;
t142 = t290 * t154;
t215 = t293 * t231;
t296 = qJD(1) ^ 2;
t361 = t294 * t296;
t295 = qJD(2) ^ 2;
t360 = t295 * t291;
t359 = t295 * t294;
t356 = pkin(5) * t298 + t443;
t355 = -t210 * t348 - t142;
t353 = t291 ^ 2 - t294 ^ 2;
t340 = t291 * t399;
t338 = t291 * t361;
t335 = t262 * t349;
t325 = pkin(1) * t424;
t62 = t292 * t107 - t117 * t289;
t171 = t243 * t389 + t287 * t244;
t173 = pkin(3) * t250 - pkin(8) * t253 + t340;
t324 = -t171 * t290 + t293 * t173;
t170 = t243 * t287 - t389 * t244;
t322 = t238 * t293;
t321 = 0.2e1 * t352;
t320 = -t198 * t26 + t358 * t89;
t319 = t294 * t332;
t279 = -pkin(2) * t389 - pkin(3);
t317 = -t196 * t231 - t226 * t357;
t316 = t135 * t354 - t265 * t312;
t315 = -t230 * t298 - t264 * t231;
t167 = pkin(4) * t368 + t208;
t314 = -t113 * t293 - t114 * t290;
t124 = pkin(4) * t309 + t170;
t311 = -t447 * t238 + t215;
t108 = t154 * pkin(4) + t149;
t176 = t264 * t262;
t46 = -pkin(5) * t307 + pkin(10) * t176 + t62;
t175 = t265 * t262;
t50 = -pkin(10) * t175 + t63;
t22 = -t288 * t50 + t408 * t46;
t23 = t288 * t46 + t408 * t50;
t119 = -t288 * t175 - t176 * t408;
t308 = -t335 + t369;
t56 = -pkin(9) * t369 + pkin(4) * t250 + (-t200 + (pkin(9) * t262 - t188) * t290) * qJD(4) + t324;
t69 = t293 * t171 + t290 * t173 + t188 * t348 - t209 * t349;
t59 = -pkin(9) * t309 + t69;
t16 = t107 * t346 - t117 * t347 + t289 * t56 + t292 * t59;
t269 = -t293 * pkin(4) + t279;
t303 = t179 * t238 - t231 * t278;
t17 = -qJD(5) * t63 - t289 * t59 + t292 * t56;
t247 = pkin(4) * t336 + t288 * t282;
t246 = -pkin(4) * t366 + t282 * t408;
t245 = t248 ^ 2;
t214 = t264 * pkin(5) + t269;
t121 = pkin(5) * t175 + t167;
t120 = pkin(4) * t212 + pkin(5) * t313;
t118 = t175 * t408 - t176 * t288;
t78 = t253 * t363 - t289 * t335 - t347 * t368 + (t342 * t367 + t370) * t292;
t77 = t253 * t264 + t262 * t299;
t70 = -qJD(4) * t128 + t324;
t57 = pkin(5) * t78 + t124;
t42 = pkin(5) * t312 + t108;
t28 = qJD(6) * t119 - t288 * t77 + t408 * t78;
t27 = t175 * t333 - t176 * t345 + t288 * t78 + t408 * t77;
t15 = t33 * t408 - t394;
t14 = -t288 * t33 - t339;
t11 = -pkin(10) * t78 + t16;
t10 = pkin(5) * t250 + pkin(10) * t77 + t17;
t4 = -qJD(6) * t23 + t10 * t408 - t288 * t11;
t3 = qJD(6) * t22 + t288 * t10 + t11 * t408;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t319, t353 * t424, t359, -0.2e1 * t319, -t360, 0, -pkin(7) * t359 + t291 * t325, pkin(7) * t360 + t294 * t325, 0, 0, t232 * t262 + t253 * t352, -t231 * t262 + t232 * t307 - t248 * t253 - t250 * t352, t253 * qJD(2), t248 * t250 - t194, -t250 * qJD(2), 0, t231 * t283 + t250 * t268 + (-t170 + (-qJD(1) * t307 + t248) * t407) * qJD(2), t232 * t283 + t253 * t268 + (t321 * t407 - t171) * qJD(2), t149 * t262 + t150 * t307 + t170 * t352 - t171 * t248 - t189 * t253 - t190 * t250 + t208 * t232 - t209 * t231, t383 + t150 * t209 - t170 * t189 + t171 * t190 + (t268 + t351) * t340, -t153 * t367 + t212 * t308 (-t210 * t293 - t212 * t290) * t253 + (t382 - t381 + (t210 * t290 - t212 * t293) * qJD(4)) * t262, t153 * t307 + t212 * t250 + t215 * t262 + t238 * t308, t142 * t262 + t210 * t309, t154 * t307 - t210 * t250 - t231 * t368 - t238 * t309, t238 * t250 - t194, t113 * t250 + t127 * t231 + t149 * t368 + t154 * t208 + t170 * t210 + t179 * t309 + t238 * t70 - t307 * t61, -t114 * t250 - t128 * t231 + t149 * t367 - t153 * t208 + t170 * t212 + t179 * t308 - t238 * t69 + t307 * t60, t127 * t153 - t128 * t154 - t210 * t69 - t212 * t70 + t314 * t253 + (-t290 * t60 - t293 * t61 + (t113 * t290 - t114 * t293) * qJD(4)) * t262, t113 * t70 + t114 * t69 + t127 * t61 + t128 * t60 + t170 * t179 + t383, t176 * t68 - t313 * t77, t77 * t135 + t68 * t175 + t176 * t312 - t313 * t78, -t176 * t231 - t230 * t77 + t250 * t313 + t307 * t68, t135 * t78 + t175 * t312, -t135 * t250 - t175 * t231 - t78 * t230 + t307 * t312, t230 * t250 - t194, t108 * t175 + t124 * t135 + t129 * t78 + t167 * t312 + t17 * t230 + t62 * t231 + t43 * t250 - t307 * t9, -t108 * t176 + t124 * t313 - t129 * t77 - t16 * t230 - t167 * t68 - t231 * t63 - t250 * t44 - t307 * t326, -t16 * t135 - t17 * t313 + t175 * t326 + t9 * t176 - t312 * t63 + t43 * t77 - t44 * t78 + t62 * t68, t108 * t167 + t124 * t129 + t16 * t44 + t17 * t43 - t326 * t63 + t62 * t9, -t119 * t25 - t27 * t428, t118 * t25 - t119 * t26 + t27 * t89 - t28 * t428, t119 * t231 - t226 * t27 + t25 * t307 + t250 * t428, t118 * t26 + t28 * t89, -t118 * t231 - t226 * t28 - t250 * t89 + t26 * t307, t226 * t250 - t194, t118 * t42 + t12 * t250 + t121 * t26 - t2 * t307 + t22 * t231 + t226 * t4 + t28 * t79 + t57 * t89, t119 * t42 - t121 * t25 - t13 * t250 - t226 * t3 - t23 * t231 - t27 * t79 - t302 * t307 + t428 * t57, t118 * t302 - t119 * t2 + t12 * t27 - t13 * t28 + t22 * t25 - t23 * t26 - t3 * t89 - t4 * t428, t12 * t4 + t121 * t42 + t13 * t3 + t2 * t22 - t23 * t302 + t57 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t338, t353 * t296, 0, t338, 0, 0, t296 * pkin(1) * t291, pkin(1) * t361, 0, 0, t371, -t245 + t409, -t272 + (t273 + t248) * qJD(2), -t371, 0, 0, qJD(2) * t195 - t248 * t341 - t268 * t352 - t149, t197 * qJD(2) + t268 * t248 - t341 * t352 - t150 (t190 - t195) * t352 + (-t189 + t197) * t248 + (-t231 * t287 - t232 * t389) * pkin(2), t189 * t195 - t190 * t197 + (-t149 * t389 + t150 * t287 - t268 * t350) * pkin(2), t212 * t322 - t382 (-t153 - t379) * t293 - t420 + t355, t238 * t322 + t374 - t376, t210 * t323 - t381, t311 + t378, -t238 * t352, -t113 * t352 - t149 * t293 + t154 * t279 - t195 * t210 + (-t278 * t348 - t122) * t238 + t303 * t290, t114 * t352 + t149 * t290 - t153 * t279 - t195 * t212 + (t278 * t349 + t123) * t238 + t303 * t293, t122 * t212 + t123 * t210 + (-t113 * t248 - t154 * t278 + t60 + (t212 * t278 - t113) * qJD(4)) * t293 + (-t114 * t248 - t153 * t278 - t61 + (t210 * t278 - t114) * qJD(4)) * t290, -t113 * t122 - t114 * t123 + t149 * t279 - t179 * t195 + (qJD(4) * t314 - t290 * t61 + t293 * t60) * t278, -t265 * t68 - t313 * t354, t316 + t446, -t384 + t411, t135 * t298 + t264 * t312, t315 + t386, -t230 * t352, t108 * t264 + t298 * t129 + t135 * t443 + t183 * t231 + t392 * t230 + t269 * t312 - t43 * t352, t108 * t265 - t129 * t354 - t184 * t231 - t230 * t393 - t269 * t68 + t313 * t443 + t352 * t44, -t135 * t393 + t183 * t68 - t184 * t312 + t264 * t326 - t9 * t265 - t298 * t44 - t313 * t392 + t354 * t43, t108 * t269 + t129 * t443 + t183 * t9 - t184 * t326 + t392 * t43 + t393 * t44, -t198 * t25 - t358 * t428, t320 + t410, -t396 + t413, t196 * t26 + t357 * t89, t317 + t397, -t226 * t352, -t12 * t352 + t196 * t42 + t214 * t26 - t226 * t401 + t231 * t99 + t356 * t89 + t357 * t79, -t100 * t231 + t13 * t352 + t198 * t42 - t214 * t25 + t226 * t400 + t356 * t428 - t358 * t79, -t100 * t26 + t12 * t358 - t13 * t357 + t196 * t302 - t198 * t2 + t25 * t99 + t400 * t89 + t401 * t428, -t100 * t302 - t12 * t401 - t13 * t400 + t2 * t99 + t214 * t42 + t356 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t321 * qJD(2), -t272 + (t273 - t248) * qJD(2), -t245 - t409, t189 * t352 + t190 * t248 + t276, 0, 0, 0, 0, 0, 0, t311 - t378, -t238 ^ 2 * t293 - t374 - t376 (t153 - t379) * t293 + t420 + t355, -t179 * t352 + t290 * t422 + t293 * t421, 0, 0, 0, 0, 0, 0, t315 - t386, -t384 - t411, t316 - t446, -t129 * t352 - t9 * t264 - t265 * t326 - t298 * t43 - t354 * t44, 0, 0, 0, 0, 0, 0, t317 - t397, -t396 - t413, t320 - t410, -t12 * t357 - t13 * t358 - t196 * t2 - t198 * t302 - t352 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t377, -t210 ^ 2 + t212 ^ 2, t210 * t238 - t153, -t377, -t373 + (-qJD(4) + t238) * t212, t231, -t179 * t212 + t421, t179 * t210 - t422, 0, 0, t385, t433, t430, -t385, t412, t231, -t230 * t48 + (-t135 * t212 - t230 * t347 + t231 * t292) * pkin(4) + t415, t230 * t49 + (-t212 * t313 - t230 * t346 - t231 * t289) * pkin(4) + t429, t44 * t313 + t49 * t135 - t43 * t135 + t48 * t313 + (-t289 * t312 + t292 * t68 + (-t135 * t292 + t289 * t313) * qJD(5)) * pkin(4), -t43 * t48 - t44 * t49 + (-t129 * t212 - t289 * t326 + t292 * t9 + (-t289 * t43 + t292 * t44) * qJD(5)) * pkin(4), t404, t434, t432, -t404, t414, t231, -t120 * t89 - t226 * t391 + t246 * t231 + t416, -t120 * t428 - t226 * t390 - t247 * t231 + t431, t246 * t25 - t247 * t26 - t390 * t89 + t391 * t428 + t442, -t12 * t391 - t120 * t79 + t13 * t390 + t2 * t246 - t247 * t302; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t385, t433, t430, -t385, t412, t231, t230 * t44 + t415, t230 * t43 + t429, 0, 0, t404, t434, t432, -t404, t414, t231, -t14 * t226 + (-t226 * t345 + t231 * t408 - t313 * t89) * pkin(5) + t416, t15 * t226 + (-t226 * t333 - t231 * t288 - t313 * t428) * pkin(5) + t431, t14 * t428 + t15 * t89 + (t408 * t25 - t26 * t288 + (t288 * t428 - t408 * t89) * qJD(6)) * pkin(5) + t442, -t12 * t14 - t13 * t15 + (t408 * t2 - t302 * t288 - t313 * t79 + (-t12 * t288 + t13 * t408) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t404, t434, t432, -t404, t414, t231, t13 * t226 + t416, t12 * t226 + t431, 0, 0;];
tauc_reg  = t1;
