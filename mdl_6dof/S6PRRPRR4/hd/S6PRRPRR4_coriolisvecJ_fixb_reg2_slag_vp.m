% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRPRR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRPRR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:14:28
% EndTime: 2019-03-08 22:14:41
% DurationCPUTime: 4.93s
% Computational Cost: add. (6019->442), mult. (14080->584), div. (0->0), fcn. (10019->10), ass. (0->241)
t158 = cos(qJ(5));
t159 = cos(qJ(3));
t255 = t158 * t159;
t154 = sin(qJ(5));
t155 = sin(qJ(3));
t257 = t154 * t155;
t97 = t255 + t257;
t88 = t97 * qJD(2);
t306 = qJD(6) + t88;
t153 = sin(qJ(6));
t157 = cos(qJ(6));
t231 = qJD(3) - qJD(5);
t205 = t157 * t231;
t241 = qJD(2) * t159;
t243 = qJD(2) * t155;
t91 = -t154 * t241 + t158 * t243;
t70 = t153 * t91 + t205;
t314 = t306 * t70;
t72 = -t153 * t231 + t157 * t91;
t313 = t306 * t72;
t161 = -pkin(3) - pkin(4);
t224 = t161 * qJD(3);
t202 = t155 * t224;
t156 = sin(qJ(2));
t150 = sin(pkin(6));
t246 = qJD(1) * t150;
t221 = t156 * t246;
t140 = t155 * qJD(4);
t238 = qJD(3) * t159;
t248 = qJ(4) * t238 + t140;
t194 = t202 + t248 + t221;
t236 = qJD(5) * t158;
t239 = qJD(3) * t158;
t312 = t154 * t238 + (t236 - t239) * t155;
t151 = cos(pkin(6));
t258 = t151 * t159;
t123 = qJD(1) * t258;
t106 = qJD(2) * pkin(8) + t221;
t93 = t155 * t106;
t75 = -t93 + t123;
t64 = pkin(9) * t243 + t75;
t308 = qJD(4) - t64;
t52 = t224 + t308;
t147 = qJD(3) * qJ(4);
t215 = pkin(9) * qJD(2) - t106;
t245 = qJD(1) * t155;
t220 = t151 * t245;
t174 = -t215 * t159 + t220;
t57 = t147 + t174;
t25 = t154 * t52 + t158 * t57;
t21 = -t231 * pkin(10) + t25;
t160 = cos(qJ(2));
t122 = t160 * t246;
t152 = qJD(2) * pkin(2);
t107 = -t122 - t152;
t77 = -pkin(3) * t241 - qJ(4) * t243 + t107;
t65 = pkin(4) * t241 - t77;
t30 = pkin(5) * t88 - pkin(10) * t91 + t65;
t10 = t153 * t30 + t157 * t21;
t233 = qJD(2) * qJD(3);
t218 = t159 * t233;
t249 = qJ(4) * t218 + qJD(2) * t140;
t232 = qJD(2) * qJD(5);
t217 = t159 * t232;
t250 = t158 * t217 + t232 * t257;
t53 = qJD(2) * t312 - t154 * t217;
t16 = t250 * pkin(10) + t53 * pkin(5) + (-t221 + (-pkin(10) * t255 + (-pkin(10) * t154 + t161) * t155) * qJD(3)) * qJD(2) + t249;
t198 = qJD(2) * t122;
t164 = qJD(3) * t174 + t155 * t198;
t237 = qJD(5) * t154;
t146 = qJD(3) * qJD(4);
t240 = qJD(3) * t155;
t252 = qJD(3) * t123 + t159 * t198;
t38 = t215 * t240 + t146 + t252;
t181 = -t154 * t164 - t158 * t38 - t52 * t236 + t57 * t237;
t2 = -qJD(6) * t10 + t153 * t181 + t157 * t16;
t311 = -t306 * t10 - t2;
t185 = t153 * t21 - t157 * t30;
t1 = -t185 * qJD(6) + t153 * t16 - t157 * t181;
t310 = t306 * t185 + t1;
t292 = pkin(8) - pkin(9);
t103 = t292 * t240;
t114 = t292 * t155;
t115 = t292 * t159;
t184 = t158 * t114 - t115 * t154;
t203 = qJD(3) * t115;
t278 = t184 * qJD(5) - t158 * t103 - t97 * t122 + t154 * t203;
t60 = qJD(5) * t97 - t154 * t240 - t158 * t238;
t61 = -t159 * t237 + t312;
t309 = pkin(5) * t61 + pkin(10) * t60 + t194;
t307 = qJD(4) - t75;
t269 = t157 * t53;
t298 = t153 * t306;
t305 = t298 * t306 - t70 * t91 - t269;
t274 = t153 * t53;
t297 = t157 * t306;
t304 = t297 * t306 - t72 * t91 + t274;
t180 = t97 * qJD(3);
t171 = -qJD(2) * t180 + t250;
t263 = qJD(6) * t72;
t27 = -t153 * t171 + t263;
t265 = t27 * t157;
t303 = t298 * t70 - t265;
t235 = qJD(6) * t153;
t26 = qJD(6) * t205 + t157 * t171 + t91 * t235;
t266 = t26 * t153;
t302 = t297 * t72 - t266;
t301 = (t26 + t314) * t157 + (t27 + t313) * t153;
t201 = t155 * t122;
t256 = t154 * t159;
t74 = t114 * t154 + t115 * t158;
t277 = t74 * qJD(5) - t103 * t154 - t122 * t256 + (t201 - t203) * t158;
t29 = t154 * t174 + t158 * t64;
t108 = -qJ(4) * t154 + t158 * t161;
t80 = t158 * qJD(4) + qJD(5) * t108;
t276 = t80 - t29;
t24 = -t154 * t57 + t158 * t52;
t20 = t231 * pkin(5) - t24;
t300 = t306 * t20;
t76 = t106 * t159 + t220;
t69 = t147 + t76;
t299 = t91 * t231 + t53;
t66 = -qJD(3) * pkin(3) + t307;
t109 = t158 * qJ(4) + t154 * t161;
t294 = -(t75 + t93) * qJD(3) + t252;
t293 = t231 ^ 2;
t261 = t150 * t156;
t85 = t155 * t261 - t258;
t86 = t151 * t155 + t159 * t261;
t46 = t154 * t86 - t85 * t158;
t216 = t154 * t38 - t158 * t164;
t6 = t25 * qJD(5) + t216;
t291 = t46 * t6;
t290 = t6 * t184;
t98 = t155 * t158 - t256;
t289 = t6 * t98;
t288 = t185 * t91;
t110 = -t159 * pkin(3) - t155 * qJ(4) - pkin(2);
t94 = t159 * pkin(4) - t110;
t41 = pkin(5) * t97 - pkin(10) * t98 + t94;
t22 = -t153 * t74 + t157 * t41;
t287 = t22 * qJD(6) + t309 * t153 + t278 * t157;
t23 = t153 * t41 + t157 * t74;
t286 = -t23 * qJD(6) - t278 * t153 + t309 * t157;
t285 = t10 * t91;
t260 = t150 * t160;
t222 = qJD(2) * t260;
t50 = t106 * t238 + (qJD(3) * t151 + t222) * t245;
t284 = t50 * t85;
t283 = t53 * t97;
t282 = t72 * t70;
t281 = t306 * t91;
t280 = t91 * t88;
t279 = t98 * t53;
t275 = qJD(5) * t109 + t308 * t154 + t158 * t174;
t273 = t153 * t70;
t272 = t153 * t72;
t271 = t154 * t91;
t270 = t155 * t50;
t268 = t157 * t70;
t267 = t157 * t72;
t264 = qJD(5) * t306;
t262 = qJD(6) * t306;
t163 = qJD(2) ^ 2;
t259 = t150 * t163;
t162 = qJD(3) ^ 2;
t254 = t162 * t155;
t141 = t162 * t159;
t148 = t155 ^ 2;
t149 = t159 ^ 2;
t247 = -t148 + t149;
t244 = qJD(2) * t110;
t242 = qJD(2) * t156;
t234 = qJD(6) * t157;
t230 = -t25 + t275;
t229 = pkin(3) * t240;
t228 = t88 ^ 2 - t91 ^ 2;
t227 = t98 * t235;
t226 = t98 * t234;
t225 = t156 * t259;
t223 = t150 * t242;
t208 = t24 * t231;
t207 = t88 * t231;
t204 = pkin(10) * t262 + t6;
t200 = t155 * t222;
t199 = t159 * t222;
t197 = t155 * t218;
t54 = pkin(5) * t91 + pkin(10) * t88;
t102 = -pkin(10) + t109;
t196 = t102 * t262 - t6;
t195 = -t20 * t60 + t289;
t193 = t77 + t122;
t192 = -t306 * t60 + t279;
t191 = -t107 - t122;
t190 = t10 * t157 + t153 * t185;
t189 = t10 * t153 - t157 * t185;
t47 = t154 * t85 + t158 * t86;
t183 = -t65 * t91 - t216;
t135 = qJ(4) * t241;
t82 = t161 * t243 + t135;
t49 = -t106 * t240 + t252;
t34 = -t153 * t47 + t157 * t260;
t35 = t153 * t260 + t157 * t47;
t182 = -pkin(10) * t53 + t300;
t179 = (-t148 - t149) * t198;
t177 = t65 * t88 + t181;
t176 = -t102 * t53 - t306 * t80 - t300;
t59 = (t221 + t229) * qJD(2) - t249;
t83 = t229 - t248;
t173 = -pkin(8) * t162 - t59 + (-t83 + t221) * qJD(2);
t172 = -qJD(3) * t88 + t250;
t170 = -t189 * qJD(6) + t1 * t157 - t153 * t2;
t42 = t146 + t49;
t169 = t270 + t159 * t42 + (-t155 * t69 + t159 * t66) * qJD(3);
t168 = t270 + t159 * t49 + (-t155 * t76 - t159 * t75) * qJD(3);
t63 = qJD(3) * t86 + t200;
t166 = -t159 * t225 + (-t63 - t200) * qJD(3);
t62 = -qJD(3) * t85 + t199;
t165 = t62 * t241 + (t155 * t63 + (-t155 * t86 + t159 * t85) * qJD(3)) * qJD(2);
t127 = t155 * t163 * t159;
t113 = -0.2e1 * t197;
t112 = 0.2e1 * t197;
t111 = t247 * t163;
t104 = qJD(3) * t201;
t101 = pkin(5) - t108;
t100 = pkin(3) * t243 - t135;
t95 = t247 * t233;
t90 = t153 * t243 + t157 * t239;
t87 = -t153 * t239 + t157 * t243;
t51 = (t202 - t221) * qJD(2) + t249;
t36 = -t54 + t82;
t33 = -t155 * t225 + (t62 + t199) * qJD(3);
t18 = -qJD(5) * t46 + t154 * t63 + t158 * t62;
t17 = qJD(5) * t47 + t154 * t62 - t63 * t158;
t14 = t153 * t54 + t157 * t24;
t13 = -t153 * t24 + t157 * t54;
t12 = t153 * t36 + t157 * t29;
t11 = -t153 * t29 + t157 * t36;
t8 = qJD(6) * t34 - t153 * t223 + t157 * t18;
t7 = -qJD(6) * t35 - t153 * t18 - t157 * t223;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t225, -t160 * t259, 0, 0, 0, 0, 0, 0, 0, 0, t166, -t33, t165, t49 * t86 + t284 + t62 * t76 - t63 * t75 + (t107 - t122) * t223, 0, 0, 0, 0, 0, 0, t166, t165, t33, t42 * t86 + t284 + t62 * t69 + t63 * t66 + (-t160 * t59 + t77 * t242) * t150, 0, 0, 0, 0, 0, 0, t17 * t231 + (t160 * t53 - t88 * t242) * t150, t18 * t231 + (-t160 * t250 + (-t156 * t91 + t160 * t180) * qJD(2)) * t150, t17 * t91 - t172 * t46 - t18 * t88 - t47 * t53, -t17 * t24 + t18 * t25 + t291 - t47 * t181 + (t160 * t51 - t242 * t65) * t150, 0, 0, 0, 0, 0, 0, t17 * t70 + t27 * t46 + t306 * t7 + t34 * t53, t17 * t72 - t26 * t46 - t306 * t8 - t35 * t53, t26 * t34 - t27 * t35 - t7 * t72 - t70 * t8, t1 * t35 + t10 * t8 + t17 * t20 - t185 * t7 + t2 * t34 + t291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0.2e1 * t95, t141, t113, -t254, 0, -pkin(8) * t141 + t104 + (t107 - t152) * t240, pkin(8) * t254 + (-t191 - t152) * t238, t179 + t168 ((t155 * t75 - t159 * t76) * t160 + (-t107 - t152) * t156) * t246 + t168 * pkin(8), t112, t141, -0.2e1 * t95, 0, t254, t113, t104 + (t77 + t244) * t240 + t173 * t159, t179 + t169 (-t193 - t244) * t238 + t173 * t155, t110 * t59 + t77 * t83 + (-t156 * t77 + (-t155 * t66 - t159 * t69) * t160) * t246 + t169 * pkin(8), -t171 * t98 - t91 * t60, t171 * t97 + t60 * t88 - t91 * t61 - t279, t60 * t231, t61 * t88 + t283, t61 * t231, 0, t194 * t88 + t277 * t231 + t51 * t97 + t94 * t53 + t65 * t61, -t94 * t171 + t194 * t91 + t278 * t231 + t51 * t98 - t65 * t60, t172 * t184 + t181 * t97 + t24 * t60 - t25 * t61 + t277 * t91 - t278 * t88 - t74 * t53 + t289, -t181 * t74 + t194 * t65 - t277 * t24 + t278 * t25 + t51 * t94 - t290, -t72 * t227 + (-t26 * t98 - t60 * t72) * t157 (t268 + t272) * t60 + (t266 - t265 + (-t267 + t273) * qJD(6)) * t98, t157 * t192 - t227 * t306 - t26 * t97 + t61 * t72, t70 * t226 + (t27 * t98 - t60 * t70) * t153, -t153 * t192 - t226 * t306 - t27 * t97 - t61 * t70, t306 * t61 + t283, t195 * t153 - t184 * t27 - t185 * t61 + t2 * t97 + t20 * t226 + t22 * t53 + t277 * t70 + t286 * t306, -t1 * t97 - t10 * t61 + t195 * t157 + t184 * t26 - t20 * t227 - t23 * t53 + t277 * t72 - t287 * t306, t22 * t26 - t23 * t27 - t286 * t72 - t287 * t70 + t189 * t60 + (-qJD(6) * t190 - t1 * t153 - t157 * t2) * t98, t1 * t23 + t287 * t10 - t185 * t286 + t2 * t22 + t277 * t20 - t290; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t127, -t111, 0, t127, 0, 0, t191 * t243, -t107 * t241 - t294, 0, 0, -t127, 0, t111, 0, 0, t127 (t100 * t159 - t193 * t155) * qJD(2), 0, 0.2e1 * t146 + (t100 * t155 + t159 * t77) * qJD(2) + t294, -pkin(3) * t50 + qJ(4) * t42 - t100 * t77 + t307 * t69 - t66 * t76, -t280, t228, t207 + t172, t280, t299, 0, t275 * qJD(3) - t230 * qJD(5) - t82 * t88 - t183, t276 * t231 - t82 * t91 - t177, -t109 * t53 + t108 * t172 + t230 * t91 + (t24 - t276) * t88, -t108 * t6 - t109 * t181 - t275 * t24 + t276 * t25 - t65 * t82, -t302, t301, -t304, -t303, t305, t281, t101 * t27 - t11 * t306 + t176 * t153 - t196 * t157 + t275 * t70 - t288, -t101 * t26 + t12 * t306 + t196 * t153 + t176 * t157 + t275 * t72 - t285, t11 * t72 + t12 * t70 + (-t102 * t27 - t70 * t80 - t88 * t185 - t1 + (t102 * t72 - t185) * qJD(6)) * t157 + (t10 * t88 - t102 * t26 + t72 * t80 + t2 + (t102 * t70 + t10) * qJD(6)) * t153, t101 * t6 - (-t153 * t80 - t11) * t185 + t275 * t20 + (t157 * t80 - t12) * t10 + t170 * t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t127, 0, -t148 * t163 - t162, t193 * t243 + (-t69 + t76) * qJD(3), 0, 0, 0, 0, 0, 0, -t154 * t293 - t88 * t243, -t158 * t293 - t91 * t243, -t154 * t53 + t158 * t250 + (-t158 * t88 + t271) * qJD(5) - qJD(3) * t271, -t65 * t243 + (-t231 * t25 - t6) * t158 + (-t181 + t208) * t154, 0, 0, 0, 0, 0, 0, -t306 * t87 + (-t153 * t264 - t27) * t158 + (-t231 * t70 - t234 * t306 - t274) * t154, t306 * t90 + (-t157 * t264 + t26) * t158 + (-t231 * t72 + t235 * t306 - t269) * t154, t70 * t90 + t72 * t87 + (-t268 + t272) * t236 + (-t266 - t265 + (t267 + t273) * qJD(6)) * t154, -t10 * t90 + t87 * t185 + (qJD(5) * t190 - t6) * t158 + (-t20 * t231 + t170) * t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t280, -t228, -t207 - t171, -t280, -t299, 0, -t25 * qJD(3) + t183, -t208 + t177, 0, 0, t302, -t301, t304, t303, -t305, -t281, -pkin(5) * t27 - t13 * t306 + t153 * t182 - t157 * t204 - t25 * t70 + t288, pkin(5) * t26 + t14 * t306 + t153 * t204 + t157 * t182 - t25 * t72 + t285, t13 * t72 + t14 * t70 + ((-t27 + t263) * pkin(10) + t310) * t157 + ((qJD(6) * t70 - t26) * pkin(10) + t311) * t153, -pkin(5) * t6 + pkin(10) * t170 - t10 * t14 + t13 * t185 - t20 * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t282, -t70 ^ 2 + t72 ^ 2, -t26 + t314, -t282, -t27 + t313, t53, -t20 * t72 - t311, t20 * t70 - t310, 0, 0;];
tauc_reg  = t3;
