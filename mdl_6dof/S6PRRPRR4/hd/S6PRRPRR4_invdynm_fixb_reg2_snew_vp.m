% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRRPRR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 05:12
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRRPRR4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR4_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR4_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR4_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRR4_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 05:11:46
% EndTime: 2019-05-05 05:12:30
% DurationCPUTime: 46.83s
% Computational Cost: add. (180201->970), mult. (363082->1323), div. (0->0), fcn. (245476->12), ass. (0->652)
t1576 = qJD(3) ^ 2;
t1570 = sin(qJ(3));
t1558 = t1570 ^ 2;
t1577 = qJD(2) ^ 2;
t1716 = t1558 * t1577;
t1534 = t1576 + t1716;
t1574 = cos(qJ(3));
t1710 = t1574 * t1577;
t1540 = t1570 * t1710;
t1532 = qJDD(3) - t1540;
t1719 = t1532 * t1570;
t1476 = t1534 * t1574 + t1719;
t1563 = sin(pkin(6));
t1565 = cos(pkin(6));
t1711 = t1574 * t1532;
t1482 = -t1534 * t1570 + t1711;
t1739 = qJD(2) * t1574;
t1547 = qJD(3) * t1739;
t1700 = t1570 * qJDD(2);
t1521 = 0.2e1 * t1547 + t1700;
t1571 = sin(qJ(2));
t1575 = cos(qJ(2));
t1624 = t1482 * t1571 + t1521 * t1575;
t1370 = t1565 * t1476 + t1563 * t1624;
t1373 = -t1563 * t1476 + t1565 * t1624;
t1812 = pkin(7) * (t1370 * t1563 + t1373 * t1565);
t1434 = t1482 * t1575 - t1521 * t1571;
t1562 = sin(pkin(11));
t1564 = cos(pkin(11));
t1811 = qJ(1) * (t1373 * t1564 + t1434 * t1562);
t1810 = qJ(1) * (t1373 * t1562 - t1434 * t1564);
t1809 = pkin(1) * t1370;
t1808 = pkin(1) * t1373;
t1740 = qJD(2) * t1570;
t1691 = qJD(3) * t1740;
t1699 = t1574 * qJDD(2);
t1523 = -0.2e1 * t1691 + t1699;
t1723 = t1523 * t1570;
t1457 = t1521 * t1574 + t1723;
t1470 = t1523 * t1574;
t1726 = t1521 * t1570;
t1460 = -t1470 + t1726;
t1559 = t1574 ^ 2;
t1529 = (-t1558 + t1559) * t1577;
t1626 = t1460 * t1571 - t1529 * t1575;
t1360 = t1563 * t1457 + t1565 * t1626;
t1421 = t1460 * t1575 + t1529 * t1571;
t1804 = t1360 * t1562 - t1421 * t1564;
t1803 = t1360 * t1564 + t1421 * t1562;
t1715 = t1559 * t1577;
t1536 = -t1576 + t1715;
t1472 = t1536 * t1570 + t1711;
t1480 = -t1536 * t1574 + t1719;
t1602 = t1480 * t1571 + t1575 * t1699;
t1390 = t1563 * t1472 + t1565 * t1602;
t1440 = t1480 * t1575 - t1571 * t1699;
t1802 = t1390 * t1562 - t1440 * t1564;
t1801 = t1390 * t1564 + t1440 * t1562;
t1800 = pkin(7) * t1434;
t1569 = sin(qJ(5));
t1555 = qJDD(3) - qJDD(5);
t1573 = cos(qJ(5));
t1505 = (t1569 * t1570 + t1573 * t1574) * qJD(2);
t1507 = -t1569 * t1739 + t1573 * t1740;
t1727 = t1507 * t1505;
t1788 = -t1555 - t1727;
t1793 = t1569 * t1788;
t1792 = t1573 * t1788;
t1387 = -t1565 * t1472 + t1563 * t1602;
t1358 = -t1565 * t1457 + t1563 * t1626;
t1791 = pkin(8) * t1482;
t1787 = pkin(2) * t1476;
t1786 = pkin(8) * t1476;
t1568 = sin(qJ(6));
t1572 = cos(qJ(6));
t1708 = qJD(3) - qJD(5);
t1466 = t1507 * t1568 + t1572 * t1708;
t1468 = t1572 * t1507 - t1568 * t1708;
t1415 = t1468 * t1466;
t1522 = t1547 + t1700;
t1604 = t1691 - t1699;
t1676 = t1569 * t1522 - t1573 * t1604;
t1418 = -t1507 * qJD(5) - t1676;
t1416 = qJDD(6) - t1418;
t1773 = -t1415 + t1416;
t1781 = t1568 * t1773;
t1780 = t1572 * t1773;
t1682 = g(1) * t1562 - t1564 * g(2);
t1747 = g(3) - qJDD(1);
t1490 = t1563 * t1682 + t1565 * t1747;
t1486 = t1574 * t1490;
t1672 = qJDD(3) * pkin(3) + t1576 * qJ(4) - qJDD(4) - t1486;
t1530 = g(1) * t1564 + g(2) * t1562;
t1776 = -t1563 * t1747 + t1565 * t1682;
t1437 = -t1575 * t1530 + t1571 * t1776;
t1426 = -t1577 * pkin(2) + qJDD(2) * pkin(8) + t1437;
t1756 = pkin(3) * t1574;
t1663 = -qJ(4) * t1570 - t1756;
t1519 = t1663 * qJD(2);
t1678 = qJD(2) * t1519 + t1426;
t1346 = t1570 * t1678 - t1672;
t1531 = qJDD(3) + t1540;
t1537 = -t1576 - t1715;
t1779 = pkin(3) * t1531 + qJ(4) * t1537 - t1346;
t1419 = -t1505 * qJD(5) + t1573 * t1522 + t1569 * t1604;
t1679 = t1505 * t1708;
t1778 = t1419 + t1679;
t1777 = t1522 + t1547;
t1698 = t1708 ^ 2;
t1775 = t1562 * t1747;
t1774 = t1564 * t1747;
t1738 = qJD(4) * qJD(3);
t1553 = 0.2e1 * t1738;
t1383 = t1574 * t1426 - t1570 * t1490;
t1652 = -t1576 * pkin(3) + qJDD(3) * qJ(4) + t1519 * t1739 + t1383;
t1343 = t1553 + t1652;
t1319 = pkin(4) * t1537 - pkin(9) * t1699 + t1343;
t1578 = -qJDD(3) * pkin(4) + (-t1522 + t1547) * pkin(9) + (-pkin(4) * t1710 + t1678) * t1570 - t1672;
t1240 = t1573 * t1319 + t1569 * t1578;
t1450 = pkin(5) * t1505 - pkin(10) * t1507;
t1212 = -pkin(5) * t1698 - t1555 * pkin(10) - t1505 * t1450 + t1240;
t1661 = t1571 * t1530 + t1575 * t1776;
t1599 = qJDD(2) * pkin(2) + t1577 * pkin(8) + t1661;
t1581 = -t1604 * pkin(3) + qJ(4) * t1777 + t1599;
t1580 = 0.2e1 * qJD(4) * t1740 + t1581;
t1579 = -pkin(3) * t1691 + t1580;
t1680 = t1507 * t1708;
t1772 = pkin(9) * t1715 - (-qJD(3) * pkin(4) - pkin(9) * t1740) * t1740;
t1242 = -t1778 * pkin(10) - t1604 * pkin(4) + (-t1418 - t1680) * pkin(5) + t1579 - t1772;
t1150 = t1212 * t1568 - t1572 * t1242;
t1151 = t1212 * t1572 + t1242 * t1568;
t1101 = t1568 * t1150 + t1572 * t1151;
t1239 = t1569 * t1319 - t1573 * t1578;
t1160 = -t1573 * t1239 + t1240 * t1569;
t1211 = t1555 * pkin(5) - pkin(10) * t1698 + t1450 * t1507 + t1239;
t1085 = t1101 * t1569 - t1211 * t1573;
t1086 = t1101 * t1573 + t1211 * t1569;
t1707 = pkin(5) * t1211 - pkin(10) * t1101;
t1759 = pkin(3) + pkin(4);
t1770 = qJ(4) * t1086 - t1085 * t1759 + t1707;
t1161 = t1569 * t1239 + t1573 * t1240;
t1769 = qJ(4) * t1161 - t1160 * t1759;
t1497 = qJD(6) + t1505;
t1677 = -t1568 * t1419 - t1572 * t1555;
t1313 = (-qJD(6) + t1497) * t1468 + t1677;
t1628 = -t1572 * t1419 + t1568 * t1555;
t1361 = -qJD(6) * t1466 - t1628;
t1431 = t1497 * t1466;
t1316 = t1361 + t1431;
t1236 = t1313 * t1572 + t1316 * t1568;
t1464 = t1466 ^ 2;
t1465 = t1468 ^ 2;
t1365 = t1464 + t1465;
t1194 = t1236 * t1569 + t1365 * t1573;
t1195 = t1236 * t1573 - t1365 * t1569;
t1673 = pkin(5) * t1365 + pkin(10) * t1236 + t1101;
t1768 = qJ(4) * t1195 - t1194 * t1759 - t1673;
t1495 = t1497 ^ 2;
t1385 = -t1495 - t1464;
t1267 = t1385 * t1572 - t1781;
t1432 = t1468 * t1497;
t1607 = qJD(6) * t1468 - t1677;
t1314 = -t1432 - t1607;
t1214 = t1267 * t1569 + t1314 * t1573;
t1215 = t1267 * t1573 - t1314 * t1569;
t1207 = t1572 * t1211;
t1689 = -pkin(5) * t1314 - pkin(10) * t1267 + t1207;
t1767 = qJ(4) * t1215 - t1214 * t1759 + t1689;
t1411 = -t1465 - t1495;
t1341 = t1415 + t1416;
t1734 = t1341 * t1572;
t1271 = -t1411 * t1568 - t1734;
t1317 = (qJD(6) + t1497) * t1466 + t1628;
t1216 = t1271 * t1569 + t1317 * t1573;
t1217 = t1271 * t1573 - t1317 * t1569;
t1206 = t1568 * t1211;
t1690 = pkin(5) * t1317 + pkin(10) * t1271 + t1206;
t1766 = qJ(4) * t1217 - t1216 * t1759 - t1690;
t1398 = qJD(3) * t1507 + t1676;
t1402 = -t1679 + t1419;
t1294 = -t1398 * t1569 - t1402 * t1573;
t1296 = -t1398 * t1573 + t1402 * t1569;
t1765 = qJ(4) * t1296 - t1294 * t1759;
t1503 = t1505 ^ 2;
t1438 = -t1698 - t1503;
t1367 = t1438 * t1569 + t1792;
t1368 = t1438 * t1573 - t1793;
t1764 = qJ(4) * t1368 - t1367 * t1759 + t1239;
t1504 = t1507 ^ 2;
t1484 = -t1504 - t1698;
t1445 = -t1727 + t1555;
t1731 = t1445 * t1569;
t1403 = t1484 * t1573 + t1731;
t1730 = t1445 * t1573;
t1404 = -t1484 * t1569 + t1730;
t1763 = qJ(4) * t1404 - t1403 * t1759 + t1240;
t1762 = -t1564 * t1530 - t1562 * t1682;
t1761 = -t1562 * t1530 + t1564 * t1682;
t1760 = -0.2e1 * qJD(4);
t1515 = t1574 * t1531;
t1473 = t1537 * t1570 + t1515;
t1758 = pkin(2) * t1473;
t1755 = pkin(5) * t1569;
t1754 = pkin(7) * t1563;
t1753 = pkin(7) * t1565;
t1752 = pkin(8) * t1473;
t1751 = pkin(9) * t1086;
t1750 = pkin(9) * t1160;
t1749 = pkin(9) * t1161;
t1748 = pkin(10) * t1573;
t1720 = t1531 * t1570;
t1479 = t1537 * t1574 - t1720;
t1625 = t1479 * t1571 + t1523 * t1575;
t1372 = -t1563 * t1473 + t1565 * t1625;
t1433 = t1479 * t1575 - t1523 * t1571;
t1746 = qJ(1) * (t1372 * t1564 + t1433 * t1562);
t1702 = t1558 + t1559;
t1525 = t1702 * qJDD(2);
t1528 = t1702 * t1577;
t1620 = t1525 * t1571 + t1528 * t1575;
t1452 = t1620 * t1565;
t1461 = t1525 * t1575 - t1528 * t1571;
t1745 = qJ(1) * (t1452 * t1564 + t1461 * t1562);
t1741 = qJD(2) * qJD(3);
t1382 = t1570 * t1426 + t1486;
t1285 = t1382 * t1574 - t1383 * t1570;
t1736 = t1285 * t1571;
t1735 = t1341 * t1568;
t1733 = t1599 * t1570;
t1732 = t1599 * t1574;
t1729 = t1497 * t1568;
t1728 = t1497 * t1572;
t1322 = -pkin(4) * t1699 + (qJD(3) * t1759 + t1760) * t1740 - t1581 + t1772;
t1713 = t1569 * t1322;
t1712 = t1571 * t1490;
t1321 = t1573 * t1322;
t1709 = t1575 * t1490;
t1706 = pkin(1) * t1372 + t1433 * t1754;
t1705 = pkin(1) * t1452 + t1461 * t1754;
t1704 = pkin(2) * t1523 + pkin(8) * t1479;
t1703 = pkin(2) * t1528 + pkin(8) * t1525;
t1701 = t1563 * qJDD(2);
t1696 = pkin(5) * t1573 + pkin(4);
t1695 = t1569 * t1415;
t1694 = t1573 * t1415;
t1693 = t1571 * t1727;
t1692 = t1575 * t1727;
t1369 = t1565 * t1473 + t1563 * t1625;
t1686 = -pkin(1) * t1369 + t1433 * t1753;
t1451 = t1620 * t1563;
t1685 = -pkin(1) * t1451 + t1461 * t1753;
t1100 = -t1150 * t1572 + t1151 * t1568;
t1684 = -pkin(9) * t1085 + t1100 * t1755;
t1683 = -pkin(9) * t1403 - t1321;
t1286 = t1382 * t1570 + t1574 * t1383;
t1675 = t1571 * t1540;
t1674 = t1575 * t1540;
t1234 = t1313 * t1568 - t1316 * t1572;
t1090 = -pkin(10) * t1234 - t1100;
t1671 = -pkin(9) * t1194 + t1573 * t1090 + t1234 * t1755;
t1668 = t1569 * t1680;
t1667 = t1569 * t1679;
t1666 = t1573 * t1680;
t1665 = t1573 * t1679;
t1664 = -pkin(3) * t1346 + qJ(4) * t1343;
t1662 = pkin(3) * t1570 - qJ(4) * t1574;
t1526 = qJDD(2) * t1575 - t1571 * t1577;
t1659 = -pkin(7) * t1526 - t1712;
t1618 = qJDD(2) * t1571 + t1575 * t1577;
t1658 = -pkin(7) * t1618 + t1709;
t1657 = -pkin(9) * t1195 - t1569 * t1090;
t1656 = -pkin(9) * t1367 - t1713;
t1655 = -pkin(9) * t1368 - t1321;
t1654 = -pkin(9) * t1404 + t1713;
t1653 = -pkin(10) * t1569 - t1696;
t1056 = t1085 * t1570 + t1086 * t1574;
t1651 = t1056 * t1571 + t1100 * t1575;
t1105 = t1160 * t1570 + t1161 * t1574;
t1650 = t1105 * t1571 - t1322 * t1575;
t1130 = t1194 * t1570 + t1195 * t1574;
t1649 = t1130 * t1571 + t1234 * t1575;
t1315 = t1361 - t1431;
t1237 = t1314 * t1572 - t1315 * t1568;
t1414 = t1465 - t1464;
t1208 = t1237 * t1569 - t1414 * t1573;
t1209 = t1237 * t1573 + t1414 * t1569;
t1134 = t1208 * t1570 + t1209 * t1574;
t1235 = t1314 * t1568 + t1315 * t1572;
t1648 = t1134 * t1571 + t1235 * t1575;
t1138 = t1214 * t1570 + t1215 * t1574;
t1266 = t1385 * t1568 + t1780;
t1647 = t1138 * t1571 + t1266 * t1575;
t1142 = t1216 * t1570 + t1217 * t1574;
t1270 = t1411 * t1572 - t1735;
t1646 = t1142 * t1571 + t1270 * t1575;
t1430 = -t1465 + t1495;
t1282 = -t1430 * t1568 + t1780;
t1221 = t1282 * t1569 - t1316 * t1573;
t1223 = t1282 * t1573 + t1316 * t1569;
t1154 = t1221 * t1570 + t1223 * t1574;
t1280 = t1430 * t1572 + t1781;
t1645 = t1154 * t1571 + t1280 * t1575;
t1429 = t1464 - t1495;
t1283 = t1429 * t1572 - t1735;
t1312 = -t1432 + t1607;
t1222 = t1283 * t1569 + t1312 * t1573;
t1224 = t1283 * t1573 - t1312 * t1569;
t1155 = t1222 * t1570 + t1224 * t1574;
t1281 = t1429 * t1568 + t1734;
t1644 = t1155 * t1571 + t1281 * t1575;
t1300 = t1466 * t1728 + t1568 * t1607;
t1259 = t1300 * t1569 + t1694;
t1261 = t1300 * t1573 - t1695;
t1184 = t1259 * t1570 + t1261 * t1574;
t1299 = -t1466 * t1729 + t1572 * t1607;
t1643 = t1184 * t1571 - t1299 * t1575;
t1302 = t1361 * t1572 - t1468 * t1729;
t1260 = t1302 * t1569 - t1694;
t1262 = t1302 * t1573 + t1695;
t1185 = t1260 * t1570 + t1262 * t1574;
t1301 = t1361 * t1568 + t1468 * t1728;
t1642 = t1185 * t1571 + t1301 * t1575;
t1350 = (-t1466 * t1572 + t1468 * t1568) * t1497;
t1289 = t1350 * t1569 - t1416 * t1573;
t1290 = t1350 * t1573 + t1416 * t1569;
t1219 = t1289 * t1570 + t1290 * t1574;
t1349 = (-t1466 * t1568 - t1468 * t1572) * t1497;
t1641 = t1219 * t1571 + t1349 * t1575;
t1397 = (0.2e1 * qJD(5) - qJD(3)) * t1507 + t1676;
t1293 = -t1397 * t1569 + t1573 * t1778;
t1295 = -t1397 * t1573 - t1569 * t1778;
t1227 = t1293 * t1570 + t1295 * t1574;
t1453 = t1504 - t1503;
t1640 = t1227 * t1571 + t1453 * t1575;
t1228 = t1294 * t1570 + t1296 * t1574;
t1422 = -t1503 - t1504;
t1639 = t1228 * t1571 + t1422 * t1575;
t1331 = pkin(3) * t1528 + t1343;
t1332 = qJ(4) * t1528 + t1346;
t1247 = -t1331 * t1570 + t1332 * t1574;
t1518 = t1662 * qJDD(2);
t1638 = t1247 * t1571 + t1518 * t1575;
t1257 = t1343 * t1574 + t1346 * t1570;
t1351 = (pkin(3) * qJD(3) + t1760) * t1740 - t1581;
t1637 = t1257 * t1571 - t1351 * t1575;
t1275 = t1367 * t1570 + t1368 * t1574;
t1636 = t1275 * t1571 + t1397 * t1575;
t1635 = t1286 * t1571 + t1575 * t1599;
t1335 = (t1523 - t1691) * pkin(3) + t1580;
t1287 = qJ(4) * t1470 - t1335 * t1570 - t1752;
t1292 = -t1758 - t1779;
t1634 = t1287 * t1571 + t1292 * t1575;
t1298 = t1403 * t1570 + t1404 * t1574;
t1633 = t1298 * t1571 + t1575 * t1778;
t1492 = -t1504 + t1698;
t1407 = t1492 * t1573 + t1793;
t1409 = -t1492 * t1569 + t1792;
t1305 = t1407 * t1570 + t1409 * t1574;
t1632 = t1305 * t1571 + t1402 * t1575;
t1491 = t1503 - t1698;
t1408 = t1491 * t1569 - t1730;
t1410 = t1491 * t1573 + t1731;
t1306 = t1408 * t1570 + t1410 * t1574;
t1631 = t1306 * t1571 - t1398 * t1575;
t1344 = t1382 - t1758;
t1376 = -t1733 - t1752;
t1630 = t1344 * t1575 + t1376 * t1571;
t1427 = t1667 + t1666;
t1428 = t1665 - t1668;
t1348 = t1427 * t1570 + t1428 * t1574;
t1629 = t1348 * t1571 - t1555 * t1575;
t1362 = -t1437 * t1571 - t1575 * t1661;
t1363 = t1437 * t1575 - t1571 * t1661;
t1500 = t1618 * t1565;
t1622 = t1500 * t1564 + t1526 * t1562;
t1621 = t1500 * t1562 - t1526 * t1564;
t1514 = t1702 * t1741;
t1617 = -qJDD(3) * t1575 + t1514 * t1571;
t1120 = -pkin(5) * t1266 + t1150;
t1165 = -pkin(10) * t1266 + t1206;
t1614 = -pkin(9) * t1214 - t1120 * t1569 + t1573 * t1165;
t1121 = -pkin(5) * t1270 + t1151;
t1167 = -pkin(10) * t1270 + t1207;
t1613 = -pkin(9) * t1216 - t1121 * t1569 + t1573 * t1167;
t1612 = -pkin(9) * t1294 - t1160;
t1611 = -pkin(9) * t1296 - t1161;
t1378 = -t1573 * t1418 + t1667;
t1379 = -t1569 * t1418 - t1665;
t1278 = -t1378 * t1570 + t1379 * t1574;
t1609 = t1278 * t1571 - t1692;
t1380 = t1569 * t1419 - t1666;
t1381 = t1573 * t1419 + t1668;
t1279 = t1380 * t1570 + t1381 * t1574;
t1608 = t1279 * t1571 + t1692;
t1606 = (-t1369 * t1563 - t1372 * t1565) * pkin(7);
t1605 = (-t1451 * t1563 - t1452 * t1565) * pkin(7);
t1535 = -t1576 + t1716;
t1481 = t1535 * t1570 + t1515;
t1601 = t1481 * t1571 - t1575 * t1700;
t1487 = -t1559 * t1741 + t1570 * t1604;
t1598 = t1487 * t1571 - t1674;
t1488 = t1522 * t1574 - t1558 * t1741;
t1597 = t1488 * t1571 + t1674;
t1042 = -t1751 + (pkin(3) - t1653) * t1100;
t1047 = (qJ(4) - t1748) * t1100 + t1684;
t1055 = -t1085 * t1574 + t1086 * t1570;
t1028 = -pkin(8) * t1055 - t1042 * t1570 + t1047 * t1574;
t1039 = -pkin(2) * t1055 - t1770;
t1052 = t1056 * t1575 - t1100 * t1571;
t1596 = pkin(7) * t1052 + t1028 * t1571 + t1039 * t1575;
t1063 = (pkin(3) + t1696) * t1234 + t1657;
t1065 = qJ(4) * t1234 + t1671;
t1129 = -t1194 * t1574 + t1195 * t1570;
t1044 = -pkin(8) * t1129 - t1063 * t1570 + t1065 * t1574;
t1054 = -pkin(2) * t1129 - t1768;
t1107 = t1130 * t1575 - t1234 * t1571;
t1595 = pkin(7) * t1107 + t1044 * t1571 + t1054 * t1575;
t1585 = -pkin(9) * t1215 - t1573 * t1120 - t1569 * t1165;
t1074 = t1266 * t1759 + t1585;
t1079 = qJ(4) * t1266 + t1614;
t1137 = -t1214 * t1574 + t1215 * t1570;
t1050 = -pkin(8) * t1137 - t1074 * t1570 + t1079 * t1574;
t1069 = -pkin(2) * t1137 - t1767;
t1114 = t1138 * t1575 - t1266 * t1571;
t1594 = pkin(7) * t1114 + t1050 * t1571 + t1069 * t1575;
t1584 = -pkin(9) * t1217 - t1573 * t1121 - t1569 * t1167;
t1075 = t1270 * t1759 + t1584;
t1080 = qJ(4) * t1270 + t1613;
t1141 = -t1216 * t1574 + t1217 * t1570;
t1051 = -pkin(8) * t1141 - t1075 * t1570 + t1080 * t1574;
t1070 = -pkin(2) * t1141 - t1766;
t1116 = t1142 * t1575 - t1270 * t1571;
t1593 = pkin(7) * t1116 + t1051 * t1571 + t1070 * t1575;
t1104 = -t1160 * t1574 + t1161 * t1570;
t1061 = -pkin(2) * t1104 - t1769;
t1118 = -t1322 * t1759 - t1749;
t1132 = -qJ(4) * t1322 - t1750;
t1064 = -pkin(8) * t1104 - t1118 * t1570 + t1132 * t1574;
t1097 = t1105 * t1575 + t1322 * t1571;
t1592 = pkin(7) * t1097 + t1061 * t1575 + t1064 * t1571;
t1119 = t1422 * t1759 + t1611;
t1125 = qJ(4) * t1422 + t1612;
t1226 = -t1294 * t1574 + t1296 * t1570;
t1078 = -pkin(8) * t1226 - t1119 * t1570 + t1125 * t1574;
t1126 = -pkin(2) * t1226 - t1765;
t1201 = t1228 * t1575 - t1422 * t1571;
t1591 = pkin(7) * t1201 + t1078 * t1571 + t1126 * t1575;
t1200 = t1397 * t1759 + t1655;
t1229 = qJ(4) * t1397 + t1656;
t1274 = -t1367 * t1574 + t1368 * t1570;
t1117 = -pkin(8) * t1274 - t1200 * t1570 + t1229 * t1574;
t1131 = -pkin(2) * t1274 - t1764;
t1245 = t1275 * t1575 - t1397 * t1571;
t1590 = pkin(7) * t1245 + t1117 * t1571 + t1131 * t1575;
t1204 = t1759 * t1778 + t1654;
t1241 = qJ(4) * t1778 + t1683;
t1297 = -t1403 * t1574 + t1404 * t1570;
t1124 = -pkin(8) * t1297 - t1204 * t1570 + t1241 * t1574;
t1143 = -pkin(2) * t1297 - t1763;
t1248 = t1298 * t1575 - t1571 * t1778;
t1589 = pkin(7) * t1248 + t1124 * t1571 + t1143 * t1575;
t1256 = t1343 * t1570 - t1346 * t1574;
t1175 = -pkin(2) * t1256 - t1664;
t1181 = -pkin(8) * t1256 + t1351 * t1662;
t1220 = t1257 * t1575 + t1351 * t1571;
t1588 = pkin(7) * t1220 + t1175 * t1575 + t1181 * t1571;
t1334 = qJ(4) * t1521 + t1579;
t1288 = -pkin(3) * t1726 + t1334 * t1574 - t1786;
t1582 = pkin(3) * t1534 + qJ(4) * t1532 + t1652;
t1291 = -t1582 - 0.2e1 * t1738 - t1787;
t1587 = t1288 * t1571 + t1291 * t1575 + t1800;
t1345 = t1383 + t1787;
t1377 = -t1732 + t1786;
t1586 = t1345 * t1575 + t1377 * t1571 - t1800;
t1255 = t1286 * t1575 - t1571 * t1599;
t1583 = pkin(7) * t1255 - (-pkin(2) * t1575 - pkin(8) * t1571) * t1285;
t1549 = t1565 * qJDD(2);
t1501 = t1526 * t1565;
t1499 = t1526 * t1563;
t1498 = t1618 * t1563;
t1489 = qJDD(3) * t1571 + t1514 * t1575;
t1475 = -t1535 * t1574 + t1720;
t1471 = t1777 * t1570;
t1463 = t1617 * t1565;
t1462 = t1617 * t1563;
t1449 = -t1501 * t1562 - t1564 * t1618;
t1448 = t1501 * t1564 - t1562 * t1618;
t1443 = t1488 * t1575 - t1675;
t1442 = t1487 * t1575 + t1675;
t1441 = t1481 * t1575 + t1571 * t1700;
t1413 = -t1463 * t1562 + t1489 * t1564;
t1412 = t1463 * t1564 + t1489 * t1562;
t1406 = -t1709 + (t1498 * t1563 + t1500 * t1565) * pkin(7);
t1405 = -t1712 + (-t1499 * t1563 - t1501 * t1565) * pkin(7);
t1395 = -t1563 * t1471 + t1565 * t1597;
t1394 = -t1563 * t1470 + t1565 * t1598;
t1393 = t1565 * t1471 + t1563 * t1597;
t1392 = t1565 * t1470 + t1563 * t1598;
t1391 = -t1563 * t1475 + t1565 * t1601;
t1388 = t1565 * t1475 + t1563 * t1601;
t1384 = qJ(1) * (-t1452 * t1562 + t1461 * t1564);
t1356 = t1704 + t1732;
t1355 = -pkin(2) * t1521 - t1733 - t1791;
t1353 = t1363 * t1565;
t1352 = t1363 * t1563;
t1347 = -t1427 * t1574 + t1428 * t1570;
t1339 = -pkin(1) * t1499 - t1563 * t1661 + t1565 * t1658;
t1338 = pkin(1) * t1498 + t1563 * t1437 + t1565 * t1659;
t1337 = pkin(1) * t1501 + t1563 * t1658 + t1565 * t1661;
t1336 = -pkin(1) * t1500 - t1565 * t1437 + t1563 * t1659;
t1333 = t1348 * t1575 + t1555 * t1571;
t1330 = -t1395 * t1562 + t1443 * t1564;
t1329 = -t1394 * t1562 + t1442 * t1564;
t1328 = t1395 * t1564 + t1443 * t1562;
t1327 = t1394 * t1564 + t1442 * t1562;
t1326 = -t1391 * t1562 + t1441 * t1564;
t1325 = t1391 * t1564 + t1441 * t1562;
t1324 = -t1362 * t1565 + t1563 * t1490;
t1323 = -t1362 * t1563 - t1565 * t1490;
t1318 = qJ(1) * (-t1372 * t1562 + t1433 * t1564);
t1304 = -t1408 * t1574 + t1410 * t1570;
t1303 = -t1407 * t1574 + t1409 * t1570;
t1277 = -t1380 * t1574 + t1381 * t1570;
t1276 = t1378 * t1574 + t1379 * t1570;
t1273 = t1791 + t1570 * t1334 + (pkin(2) + t1756) * t1521;
t1272 = qJ(4) * t1723 + t1335 * t1574 + t1704;
t1268 = t1286 + t1703;
t1264 = t1279 * t1575 - t1693;
t1263 = t1278 * t1575 + t1693;
t1258 = pkin(2) * t1599 + pkin(8) * t1286;
t1254 = pkin(1) * t1324 + t1363 * t1754;
t1253 = -pkin(1) * t1323 + t1363 * t1753;
t1252 = t1306 * t1575 + t1398 * t1571;
t1251 = t1305 * t1575 - t1402 * t1571;
t1250 = -t1563 * t1347 + t1565 * t1629;
t1249 = t1565 * t1347 + t1563 * t1629;
t1246 = t1575 * t1285 + t1605;
t1244 = (-t1323 * t1563 - t1324 * t1565) * pkin(7);
t1243 = t1331 * t1574 + t1332 * t1570 + t1703;
t1225 = -t1293 * t1574 + t1295 * t1570;
t1218 = -t1289 * t1574 + t1290 * t1570;
t1213 = t1575 * t1247 - t1571 * t1518 + t1605;
t1205 = t1227 * t1575 - t1453 * t1571;
t1203 = -t1571 * t1345 + t1575 * t1377 + t1812;
t1202 = -t1571 * t1344 + t1575 * t1376 + t1606;
t1199 = -t1563 * t1304 + t1565 * t1631;
t1198 = -t1563 * t1303 + t1565 * t1632;
t1197 = t1565 * t1304 + t1563 * t1631;
t1196 = t1565 * t1303 + t1563 * t1632;
t1193 = -t1563 * t1277 + t1565 * t1608;
t1192 = -t1563 * t1276 + t1565 * t1609;
t1191 = t1565 * t1277 + t1563 * t1608;
t1190 = t1565 * t1276 + t1563 * t1609;
t1189 = -t1563 * t1297 + t1565 * t1633;
t1188 = t1565 * t1297 + t1563 * t1633;
t1187 = t1285 * t1563 + t1565 * t1635;
t1186 = -t1285 * t1565 + t1563 * t1635;
t1183 = -t1260 * t1574 + t1262 * t1570;
t1182 = -t1259 * t1574 + t1261 * t1570;
t1180 = -t1563 * t1355 + t1565 * t1586 + t1809;
t1179 = -t1563 * t1356 + t1565 * t1630 + t1686;
t1178 = t1565 * t1355 + t1563 * t1586 - t1808;
t1177 = t1565 * t1356 + t1563 * t1630 + t1706;
t1176 = t1219 * t1575 - t1349 * t1571;
t1174 = -t1268 * t1563 + t1565 * t1736 + t1685;
t1173 = t1268 * t1565 + t1563 * t1736 + t1705;
t1172 = -t1563 * t1274 + t1565 * t1636;
t1171 = t1565 * t1274 + t1563 * t1636;
t1170 = t1575 * t1287 - t1571 * t1292 + t1606;
t1169 = t1575 * t1288 - t1571 * t1291 - t1812;
t1168 = pkin(8) * t1257 + (-pkin(2) + t1663) * t1351;
t1163 = -t1563 * t1256 + t1565 * t1637;
t1162 = t1565 * t1256 + t1563 * t1637;
t1159 = t1185 * t1575 - t1301 * t1571;
t1158 = t1184 * t1575 + t1299 * t1571;
t1157 = -t1563 * t1243 + t1565 * t1638 + t1685;
t1156 = t1565 * t1243 + t1563 * t1638 + t1705;
t1153 = -t1222 * t1574 + t1224 * t1570;
t1152 = -t1221 * t1574 + t1223 * t1570;
t1147 = -t1563 * t1272 + t1565 * t1634 + t1686;
t1146 = t1565 * t1272 + t1563 * t1634 + t1706;
t1145 = -t1563 * t1273 + t1565 * t1587 - t1809;
t1144 = t1565 * t1273 + t1563 * t1587 + t1808;
t1140 = -t1563 * t1225 + t1565 * t1640;
t1139 = t1565 * t1225 + t1563 * t1640;
t1136 = -t1563 * t1226 + t1565 * t1639;
t1135 = t1565 * t1226 + t1563 * t1639;
t1133 = -t1208 * t1574 + t1209 * t1570;
t1128 = -t1563 * t1218 + t1565 * t1641;
t1127 = t1565 * t1218 + t1563 * t1641;
t1123 = t1155 * t1575 - t1281 * t1571;
t1122 = t1154 * t1575 - t1280 * t1571;
t1115 = pkin(2) * t1778 + pkin(8) * t1298 + t1204 * t1574 + t1241 * t1570;
t1113 = pkin(2) * t1397 + pkin(8) * t1275 + t1200 * t1574 + t1229 * t1570;
t1112 = t1134 * t1575 - t1235 * t1571;
t1111 = -t1563 * t1183 + t1565 * t1642;
t1110 = -t1563 * t1182 + t1565 * t1643;
t1109 = t1565 * t1183 + t1563 * t1642;
t1108 = t1565 * t1182 + t1563 * t1643;
t1106 = -(pkin(2) * t1571 - pkin(8) * t1575) * t1285 + (-t1186 * t1563 - t1187 * t1565) * pkin(7);
t1103 = -pkin(1) * t1186 - t1563 * t1258 + t1565 * t1583;
t1102 = pkin(1) * t1187 + t1565 * t1258 + t1563 * t1583;
t1096 = -t1563 * t1153 + t1565 * t1644;
t1095 = -t1563 * t1152 + t1565 * t1645;
t1094 = t1565 * t1153 + t1563 * t1644;
t1093 = t1565 * t1152 + t1563 * t1645;
t1092 = -t1563 * t1141 + t1565 * t1646;
t1091 = t1565 * t1141 + t1563 * t1646;
t1088 = -t1563 * t1137 + t1565 * t1647;
t1087 = t1565 * t1137 + t1563 * t1647;
t1084 = -t1563 * t1133 + t1565 * t1648;
t1083 = t1565 * t1133 + t1563 * t1648;
t1082 = -t1563 * t1129 + t1565 * t1649;
t1081 = t1565 * t1129 + t1563 * t1649;
t1077 = -t1571 * t1175 + t1575 * t1181 + (-t1162 * t1563 - t1163 * t1565) * pkin(7);
t1076 = pkin(2) * t1422 + pkin(8) * t1228 + t1119 * t1574 + t1125 * t1570;
t1073 = t1575 * t1124 - t1571 * t1143 + (-t1188 * t1563 - t1189 * t1565) * pkin(7);
t1072 = -pkin(1) * t1162 - t1563 * t1168 + t1565 * t1588;
t1071 = pkin(1) * t1163 + t1565 * t1168 + t1563 * t1588;
t1068 = t1575 * t1117 - t1571 * t1131 + (-t1171 * t1563 - t1172 * t1565) * pkin(7);
t1067 = -t1563 * t1104 + t1565 * t1650;
t1066 = t1565 * t1104 + t1563 * t1650;
t1062 = -pkin(2) * t1322 + pkin(8) * t1105 + t1118 * t1574 + t1132 * t1570;
t1060 = -pkin(1) * t1188 - t1563 * t1115 + t1565 * t1589;
t1059 = pkin(1) * t1189 + t1565 * t1115 + t1563 * t1589;
t1058 = -pkin(1) * t1171 - t1563 * t1113 + t1565 * t1590;
t1057 = pkin(1) * t1172 + t1565 * t1113 + t1563 * t1590;
t1053 = t1575 * t1078 - t1571 * t1126 + (-t1135 * t1563 - t1136 * t1565) * pkin(7);
t1049 = pkin(2) * t1270 + pkin(8) * t1142 + t1075 * t1574 + t1080 * t1570;
t1048 = pkin(2) * t1266 + pkin(8) * t1138 + t1074 * t1574 + t1079 * t1570;
t1046 = -pkin(1) * t1135 - t1563 * t1076 + t1565 * t1591;
t1045 = pkin(1) * t1136 + t1565 * t1076 + t1563 * t1591;
t1043 = pkin(2) * t1234 + pkin(8) * t1130 + t1063 * t1574 + t1065 * t1570;
t1041 = -t1563 * t1055 + t1565 * t1651;
t1040 = t1565 * t1055 + t1563 * t1651;
t1038 = t1575 * t1051 - t1571 * t1070 + (-t1091 * t1563 - t1092 * t1565) * pkin(7);
t1037 = t1575 * t1050 - t1571 * t1069 + (-t1087 * t1563 - t1088 * t1565) * pkin(7);
t1036 = -t1571 * t1061 + t1575 * t1064 + (-t1066 * t1563 - t1067 * t1565) * pkin(7);
t1035 = -pkin(1) * t1066 - t1563 * t1062 + t1565 * t1592;
t1034 = pkin(1) * t1067 + t1565 * t1062 + t1563 * t1592;
t1033 = t1575 * t1044 - t1571 * t1054 + (-t1081 * t1563 - t1082 * t1565) * pkin(7);
t1032 = -pkin(1) * t1091 - t1563 * t1049 + t1565 * t1593;
t1031 = pkin(1) * t1092 + t1565 * t1049 + t1563 * t1593;
t1030 = -pkin(1) * t1087 - t1563 * t1048 + t1565 * t1594;
t1029 = pkin(1) * t1088 + t1565 * t1048 + t1563 * t1594;
t1027 = pkin(2) * t1100 + pkin(8) * t1056 + t1042 * t1574 + t1047 * t1570;
t1026 = -pkin(1) * t1081 - t1563 * t1043 + t1565 * t1595;
t1025 = pkin(1) * t1082 + t1565 * t1043 + t1563 * t1595;
t1024 = t1575 * t1028 - t1571 * t1039 + (-t1040 * t1563 - t1041 * t1565) * pkin(7);
t1023 = -pkin(1) * t1040 - t1563 * t1027 + t1565 * t1596;
t1022 = pkin(1) * t1041 + t1565 * t1027 + t1563 * t1596;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1775, -t1774, -t1761, -qJ(1) * t1761, 0, 0, -t1621, 0, t1449, t1562 * t1701, -qJ(1) * t1448 - t1339 * t1562 + t1405 * t1564, qJ(1) * t1622 - t1562 * t1338 + t1564 * t1406, -t1353 * t1562 + t1362 * t1564, t1564 * t1244 - t1562 * t1253 - qJ(1) * (t1324 * t1564 + t1363 * t1562), t1330, t1804, t1326, t1329, t1802, t1413, -t1179 * t1562 + t1202 * t1564 - t1746, -t1562 * t1180 + t1564 * t1203 + t1811, -t1174 * t1562 + t1246 * t1564 - t1745, t1564 * t1106 - t1562 * t1103 - qJ(1) * (t1187 * t1564 + t1255 * t1562), t1330, t1326, -t1804, t1413, -t1802, t1329, -t1147 * t1562 + t1170 * t1564 - t1746, -t1157 * t1562 + t1213 * t1564 - t1745, -t1562 * t1145 + t1564 * t1169 - t1811, t1564 * t1077 - t1562 * t1072 - qJ(1) * (t1163 * t1564 + t1220 * t1562), -t1193 * t1562 + t1264 * t1564, -t1140 * t1562 + t1205 * t1564, -t1198 * t1562 + t1251 * t1564, -t1192 * t1562 + t1263 * t1564, -t1199 * t1562 + t1252 * t1564, -t1250 * t1562 + t1333 * t1564, t1564 * t1068 - t1562 * t1058 - qJ(1) * (t1172 * t1564 + t1245 * t1562), t1564 * t1073 - t1562 * t1060 - qJ(1) * (t1189 * t1564 + t1248 * t1562), t1564 * t1053 - t1562 * t1046 - qJ(1) * (t1136 * t1564 + t1201 * t1562), t1564 * t1036 - t1562 * t1035 - qJ(1) * (t1067 * t1564 + t1097 * t1562), -t1111 * t1562 + t1159 * t1564, -t1084 * t1562 + t1112 * t1564, -t1095 * t1562 + t1122 * t1564, -t1110 * t1562 + t1158 * t1564, -t1096 * t1562 + t1123 * t1564, -t1128 * t1562 + t1176 * t1564, t1564 * t1037 - t1562 * t1030 - qJ(1) * (t1088 * t1564 + t1114 * t1562), t1564 * t1038 - t1562 * t1032 - qJ(1) * (t1092 * t1564 + t1116 * t1562), t1564 * t1033 - t1562 * t1026 - qJ(1) * (t1082 * t1564 + t1107 * t1562), t1564 * t1024 - t1562 * t1023 - qJ(1) * (t1041 * t1564 + t1052 * t1562); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1774, -t1775, t1762, qJ(1) * t1762, 0, 0, t1622, 0, t1448, -t1564 * t1701, qJ(1) * t1449 + t1339 * t1564 + t1405 * t1562, qJ(1) * t1621 + t1564 * t1338 + t1562 * t1406, t1353 * t1564 + t1362 * t1562, t1562 * t1244 + t1564 * t1253 + qJ(1) * (-t1324 * t1562 + t1363 * t1564), t1328, -t1803, t1325, t1327, -t1801, t1412, t1179 * t1564 + t1202 * t1562 + t1318, t1564 * t1180 + t1562 * t1203 + t1810, t1174 * t1564 + t1246 * t1562 + t1384, t1562 * t1106 + t1564 * t1103 + qJ(1) * (-t1187 * t1562 + t1255 * t1564), t1328, t1325, t1803, t1412, t1801, t1327, t1147 * t1564 + t1170 * t1562 + t1318, t1157 * t1564 + t1213 * t1562 + t1384, t1564 * t1145 + t1562 * t1169 - t1810, t1562 * t1077 + t1564 * t1072 + qJ(1) * (-t1163 * t1562 + t1220 * t1564), t1193 * t1564 + t1264 * t1562, t1140 * t1564 + t1205 * t1562, t1198 * t1564 + t1251 * t1562, t1192 * t1564 + t1263 * t1562, t1199 * t1564 + t1252 * t1562, t1250 * t1564 + t1333 * t1562, t1562 * t1068 + t1564 * t1058 + qJ(1) * (-t1172 * t1562 + t1245 * t1564), t1562 * t1073 + t1564 * t1060 + qJ(1) * (-t1189 * t1562 + t1248 * t1564), t1562 * t1053 + t1564 * t1046 + qJ(1) * (-t1136 * t1562 + t1201 * t1564), t1562 * t1036 + t1564 * t1035 + qJ(1) * (-t1067 * t1562 + t1097 * t1564), t1111 * t1564 + t1159 * t1562, t1084 * t1564 + t1112 * t1562, t1095 * t1564 + t1122 * t1562, t1110 * t1564 + t1158 * t1562, t1096 * t1564 + t1123 * t1562, t1128 * t1564 + t1176 * t1562, t1562 * t1037 + t1564 * t1030 + qJ(1) * (-t1088 * t1562 + t1114 * t1564), t1562 * t1038 + t1564 * t1032 + qJ(1) * (-t1092 * t1562 + t1116 * t1564), t1562 * t1033 + t1564 * t1026 + qJ(1) * (-t1082 * t1562 + t1107 * t1564), t1562 * t1024 + t1564 * t1023 + qJ(1) * (-t1041 * t1562 + t1052 * t1564); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1682, t1530, 0, 0, 0, 0, t1498, 0, t1499, t1549, t1337, t1336, t1352, t1254, t1393, -t1358, t1388, t1392, -t1387, t1462, t1177, t1178, t1173, t1102, t1393, t1388, t1358, t1462, t1387, t1392, t1146, t1156, t1144, t1071, t1191, t1139, t1196, t1190, t1197, t1249, t1057, t1059, t1045, t1034, t1109, t1083, t1093, t1108, t1094, t1127, t1029, t1031, t1025, t1022; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1747, -t1682, 0, 0, 0, t1526, 0, -t1618, 0, t1405, t1406, t1362, t1244, t1443, -t1421, t1441, t1442, -t1440, t1489, t1202, t1203, t1246, t1106, t1443, t1441, t1421, t1489, t1440, t1442, t1170, t1213, t1169, t1077, t1264, t1205, t1251, t1263, t1252, t1333, t1068, t1073, t1053, t1036, t1159, t1112, t1122, t1158, t1123, t1176, t1037, t1038, t1033, t1024; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1747, 0, -t1530, 0, 0, 0, t1500, 0, t1501, -t1701, t1339, t1338, t1353, t1253, t1395, -t1360, t1391, t1394, -t1390, t1463, t1179, t1180, t1174, t1103, t1395, t1391, t1360, t1463, t1390, t1394, t1147, t1157, t1145, t1072, t1193, t1140, t1198, t1192, t1199, t1250, t1058, t1060, t1046, t1035, t1111, t1084, t1095, t1110, t1096, t1128, t1030, t1032, t1026, t1023; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1682, t1530, 0, 0, 0, 0, t1498, 0, t1499, t1549, t1337, t1336, t1352, t1254, t1393, -t1358, t1388, t1392, -t1387, t1462, t1177, t1178, t1173, t1102, t1393, t1388, t1358, t1462, t1387, t1392, t1146, t1156, t1144, t1071, t1191, t1139, t1196, t1190, t1197, t1249, t1057, t1059, t1045, t1034, t1109, t1083, t1093, t1108, t1094, t1127, t1029, t1031, t1025, t1022; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1577, 0, 0, -t1490, -t1661, 0, t1488, -t1460, t1481, t1487, -t1480, t1514, t1376, t1377, t1285, pkin(8) * t1285, t1488, t1481, t1460, t1514, t1480, t1487, t1287, t1247, t1288, t1181, t1279, t1227, t1305, t1278, t1306, t1348, t1117, t1124, t1078, t1064, t1185, t1134, t1154, t1184, t1155, t1219, t1050, t1051, t1044, t1028; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1577, 0, qJDD(2), 0, t1490, 0, t1437, 0, t1540, t1529, -t1700, -t1540, -t1699, -qJDD(3), t1344, t1345, 0, pkin(2) * t1285, t1540, -t1700, -t1529, -qJDD(3), t1699, -t1540, t1292, t1518, t1291, t1175, t1727, t1453, t1402, -t1727, -t1398, -t1555, t1131, t1143, t1126, t1061, t1301, t1235, t1280, -t1299, t1281, t1349, t1069, t1070, t1054, t1039; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t1661, -t1437, 0, 0, t1471, t1457, t1475, t1470, t1472, 0, t1356, t1355, t1268, t1258, t1471, t1475, -t1457, 0, -t1472, t1470, t1272, t1243, t1273, t1168, t1277, t1225, t1303, t1276, t1304, t1347, t1113, t1115, t1076, t1062, t1183, t1133, t1152, t1182, t1153, t1218, t1048, t1049, t1043, t1027; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1522, t1523, t1531, -t1547, t1536, t1547, 0, -t1599, t1382, 0, t1522, t1531, -t1523, t1547, -t1536, -t1547, qJ(4) * t1523, t1332, t1334, -qJ(4) * t1351, t1381, t1295, t1409, t1379, t1410, t1428, t1229, t1241, t1125, t1132, t1262, t1209, t1223, t1261, t1224, t1290, t1079, t1080, t1065, t1047; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1691, t1521, -t1535, -t1604, t1532, -t1691, t1599, 0, t1383, 0, t1691, -t1535, -t1521, -t1691, -t1532, -t1604, t1335, t1331, pkin(3) * t1521, -pkin(3) * t1351, -t1380, -t1293, -t1407, t1378, -t1408, -t1427, t1200, t1204, t1119, t1118, -t1260, -t1208, -t1221, -t1259, -t1222, -t1289, t1074, t1075, t1063, t1042; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1540, -t1529, t1700, t1540, t1699, qJDD(3), -t1382, -t1383, 0, 0, -t1540, t1700, t1529, qJDD(3), -t1699, t1540, t1779, -t1518, t1553 + t1582, t1664, -t1727, -t1453, -t1402, t1727, t1398, t1555, t1764, t1763, t1765, t1769, -t1301, -t1235, -t1280, t1299, -t1281, -t1349, t1767, t1766, t1768, t1770; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1522, t1531, -t1523, t1547, -t1536, -t1547, 0, t1346, -t1351, 0, t1381, t1295, t1409, t1379, t1410, t1428, t1656, t1683, t1612, -t1750, t1262, t1209, t1223, t1261, t1224, t1290, t1614, t1613, t1671, -t1100 * t1748 + t1684; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1540, t1700, t1529, qJDD(3), -t1699, t1540, -t1346, 0, t1343, 0, -t1727, -t1453, -t1402, t1727, t1398, t1555, -pkin(4) * t1367 + t1239, -pkin(4) * t1403 + t1240, -pkin(4) * t1294, -pkin(4) * t1160, -t1301, -t1235, -t1280, t1299, -t1281, -t1349, -pkin(4) * t1214 + t1689, -pkin(4) * t1216 - t1690, -pkin(4) * t1194 - t1673, -pkin(4) * t1085 + t1707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1691, t1535, t1521, t1691, t1532, t1604, t1351, -t1343, 0, 0, t1380, t1293, t1407, -t1378, t1408, t1427, -pkin(4) * t1397 - t1655, -pkin(4) * t1778 - t1654, -pkin(4) * t1422 - t1611, pkin(4) * t1322 + t1749, t1260, t1208, t1221, t1259, t1222, t1289, -pkin(4) * t1266 - t1585, -pkin(4) * t1270 - t1584, -t1234 * t1696 - t1657, t1100 * t1653 + t1751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1419, -t1397, t1788, -t1679, t1491, t1679, 0, -t1322, t1239, 0, t1302, t1237, t1282, t1300, t1283, t1350, t1165, t1167, t1090, -pkin(10) * t1100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1680, t1778, t1492, t1418, -t1445, t1680, t1322, 0, t1240, 0, -t1415, -t1414, -t1316, t1415, t1312, -t1416, t1120, t1121, -pkin(5) * t1234, -pkin(5) * t1100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1727, t1453, t1402, -t1727, -t1398, -t1555, -t1239, -t1240, 0, 0, t1301, t1235, t1280, -t1299, t1281, t1349, -t1689, t1690, t1673, -t1707; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1361, t1314, t1773, t1431, t1429, -t1431, 0, t1211, t1150, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1432, t1315, t1430, -t1607, t1341, -t1432, -t1211, 0, t1151, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1415, t1414, t1316, -t1415, -t1312, t1416, -t1150, -t1151, 0, 0;];
m_new_reg  = t1;
