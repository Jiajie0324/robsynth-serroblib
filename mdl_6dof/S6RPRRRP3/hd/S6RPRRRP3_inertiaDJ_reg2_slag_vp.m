% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRP3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP3_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:05:16
% EndTime: 2019-03-09 06:05:26
% DurationCPUTime: 3.64s
% Computational Cost: add. (3933->315), mult. (9063->506), div. (0->0), fcn. (7764->8), ass. (0->155)
t111 = sin(qJ(4));
t112 = sin(qJ(3));
t113 = cos(qJ(4));
t114 = cos(qJ(3));
t205 = sin(qJ(5));
t156 = qJD(3) * t205;
t143 = t114 * t156;
t206 = cos(qJ(5));
t157 = qJD(3) * t206;
t144 = t114 * t157;
t168 = t205 * t111;
t147 = t112 * t168;
t208 = qJD(4) + qJD(5);
t154 = t206 * qJD(5);
t210 = t206 * qJD(4) + t154;
t33 = t111 * t144 + (t210 * t112 + t143) * t113 - t208 * t147;
t153 = t205 * qJD(5);
t51 = (t205 * qJD(4) + t153) * t111 - t210 * t113;
t76 = t206 * t111 + t205 * t113;
t61 = t76 * t112;
t193 = t76 * t33 - t51 * t61;
t52 = t208 * t76;
t32 = t111 * t143 + t52 * t112 - t113 * t144;
t169 = t206 * t113;
t62 = t112 * t169 - t147;
t75 = t168 - t169;
t194 = t32 * t75 - t62 * t52;
t214 = t193 - t194;
t213 = t193 + t194;
t180 = t114 * qJD(3);
t182 = qJD(4) * t113;
t212 = t111 * t180 + t112 * t182;
t211 = -0.4e1 * t112;
t106 = t112 * qJD(3);
t209 = t61 * t106 - t114 * t33;
t195 = t32 * t61 - t62 * t33;
t107 = t111 ^ 2;
t109 = t113 ^ 2;
t152 = qJD(4) * (t107 - t109);
t108 = t112 ^ 2;
t184 = -t114 ^ 2 + t108;
t151 = t184 * qJD(3);
t203 = pkin(8) * t114;
t204 = pkin(3) * t112;
t141 = -t203 + t204;
t130 = t141 * t111;
t100 = -cos(pkin(10)) * pkin(1) - pkin(2);
t200 = t114 * pkin(3);
t127 = t100 - t200;
t202 = t112 * pkin(8);
t121 = t127 - t202;
t64 = t113 * t121;
t181 = qJD(4) * t114;
t167 = t111 * t181;
t67 = t113 * t106 + t167;
t98 = sin(pkin(10)) * pkin(1) + pkin(7);
t30 = -qJD(3) * t130 - qJD(4) * t64 + t67 * t98;
t190 = t111 * t98;
t159 = -pkin(4) - t190;
t186 = t113 * t114;
t201 = t113 * pkin(3);
t207 = -pkin(9) - pkin(8);
t78 = t98 * t186;
t117 = (-t78 + (-t207 * t112 - t127) * t111) * qJD(4) + (t207 * t186 + (-t159 + t201) * t112) * qJD(3);
t119 = -pkin(9) * t212 - t30;
t187 = t112 * t113;
t45 = -pkin(9) * t187 + t159 * t114 + t64;
t188 = t111 * t112;
t50 = t111 * t121 + t78;
t47 = -pkin(9) * t188 + t50;
t192 = t205 * t45 + t206 * t47;
t4 = -qJD(5) * t192 + t206 * t117 - t205 * t119;
t115 = 2 * qJD(6);
t198 = t61 * t33;
t65 = pkin(4) * t188 + t112 * t98;
t183 = qJD(4) * t111;
t179 = t114 * qJD(6);
t178 = 0.2e1 * t198;
t177 = 0.2e1 * t75 * t52;
t176 = -0.2e1 * pkin(3) * qJD(4);
t79 = t98 * t180;
t53 = t212 * pkin(4) + t79;
t175 = 0.2e1 * qJD(3) * t100;
t174 = pkin(5) * t106;
t173 = pkin(4) * t183;
t172 = t114 * t190;
t170 = qJD(4) * t108 * t98;
t104 = -t113 * pkin(4) - pkin(3);
t165 = t113 * t181;
t164 = t107 * t180;
t162 = t111 * t182;
t161 = t112 * t180;
t160 = t113 * t180;
t148 = t207 * t205;
t133 = qJD(4) * t148;
t149 = t207 * t206;
t134 = qJD(4) * t149;
t135 = t111 * t149;
t86 = t207 * t113;
t34 = -qJD(5) * t135 - t111 * t134 - t113 * t133 - t86 * t153;
t35 = -t86 * t154 - t113 * t134 + (qJD(5) * t148 + t133) * t111;
t54 = -t205 * t86 - t135;
t55 = t111 * t148 - t206 * t86;
t158 = -t55 * t34 + t54 * t35;
t150 = pkin(4) * t153;
t146 = t111 * t160;
t145 = t108 * t162;
t142 = -t200 - t202;
t139 = t33 * t75 + t61 * t52;
t138 = t51 * t75 - t76 * t52;
t49 = t64 - t172;
t137 = -t111 * t50 - t113 * t49;
t136 = t111 * t49 - t113 * t50;
t132 = t55 * t106 + t34 * t114;
t131 = -t54 * t106 + t35 * t114;
t39 = t76 * t106 + t114 * t51;
t38 = t75 * t106 - t114 * t52;
t129 = -t32 * t55 + t33 * t54 - t62 * t34 + t61 * t35;
t128 = -t54 * t32 - t55 * t33 + t34 * t61 + t35 * t62;
t14 = -t205 * t47 + t206 * t45;
t125 = -t33 * pkin(5) - t32 * qJ(6) + t62 * qJD(6);
t3 = -t205 * t117 - t206 * t119 + t47 * t153 - t45 * t154;
t101 = qJ(6) * t106;
t124 = t101 - t3;
t123 = 0.2e1 * t34 * t75 + 0.2e1 * t35 * t76 - 0.2e1 * t54 * t51 - 0.2e1 * t55 * t52;
t22 = t62 * t32;
t122 = -0.2e1 * t161 - 0.2e1 * t22 + 0.2e1 * t198;
t31 = -t50 * qJD(4) + (t113 * t141 + t98 * t188) * qJD(3);
t120 = t137 * qJD(4) - t31 * t111 - t30 * t113;
t116 = t114 * t150 + t4;
t105 = pkin(4) * t154;
t103 = -t206 * pkin(4) - pkin(5);
t99 = t205 * pkin(4) + qJ(6);
t97 = -0.2e1 * t150;
t94 = t109 * t180;
t92 = t105 + qJD(6);
t91 = -0.2e1 * t161;
t83 = t109 * t161;
t81 = t107 * t161;
t69 = t111 * t106 - t165;
t66 = t112 * t183 - t160;
t56 = t112 * t152 - t146;
t48 = t75 * pkin(5) - t76 * qJ(6) + t104;
t44 = -0.2e1 * t76 * t51;
t37 = t61 * pkin(5) - t62 * qJ(6) + t65;
t19 = -0.2e1 * t22;
t17 = t52 * pkin(5) + t51 * qJ(6) - t76 * qJD(6) + t173;
t9 = 0.2e1 * t62 * t106 + 0.2e1 * t114 * t32;
t8 = t114 * pkin(5) - t14;
t7 = -t114 * qJ(6) + t192;
t6 = -t32 * t76 - t62 * t51;
t5 = -t125 + t53;
t2 = -t174 - t4;
t1 = t124 - t179;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t161, -0.2e1 * t151, 0, t91, 0, 0, t112 * t175, t114 * t175, 0, 0, 0.2e1 * t83 - 0.2e1 * t145, 0.2e1 * t108 * t152 + t146 * t211, 0.2e1 * t112 * t167 + 0.2e1 * t113 * t151, 0.2e1 * t81 + 0.2e1 * t145, -0.2e1 * t111 * t151 + 0.2e1 * t112 * t165, t91, 0.2e1 * t113 * t170 - 0.2e1 * t31 * t114 + 0.2e1 * (t49 + 0.2e1 * t172) * t106, -0.2e1 * t111 * t170 - 0.2e1 * t30 * t114 + 0.2e1 * (-t50 + 0.2e1 * t78) * t106, 0.2e1 * t137 * t180 + 0.2e1 * (t136 * qJD(4) + t111 * t30 - t113 * t31) * t112, 0.2e1 * t98 ^ 2 * t161 - 0.2e1 * t50 * t30 + 0.2e1 * t49 * t31, t19, 0.2e1 * t195, t9, t178, -0.2e1 * t209, t91, 0.2e1 * t14 * t106 - 0.2e1 * t4 * t114 + 0.2e1 * t65 * t33 + 0.2e1 * t53 * t61, -0.2e1 * t106 * t192 - 0.2e1 * t3 * t114 - 0.2e1 * t65 * t32 + 0.2e1 * t53 * t62, 0.2e1 * t14 * t32 - 0.2e1 * t192 * t33 + 0.2e1 * t3 * t61 - 0.2e1 * t4 * t62, 0.2e1 * t14 * t4 - 0.2e1 * t192 * t3 + 0.2e1 * t65 * t53, t19, t9, -0.2e1 * t195, t91, 0.2e1 * t209, t178, -0.2e1 * t8 * t106 + 0.2e1 * t2 * t114 + 0.2e1 * t37 * t33 + 0.2e1 * t5 * t61, -0.2e1 * t1 * t61 + 0.2e1 * t2 * t62 - 0.2e1 * t8 * t32 - 0.2e1 * t7 * t33, -0.2e1 * t1 * t114 + 0.2e1 * t106 * t7 + 0.2e1 * t37 * t32 - 0.2e1 * t5 * t62, 0.2e1 * t7 * t1 + 0.2e1 * t8 * t2 + 0.2e1 * t37 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120 * t112 + (-t136 * t114 + t184 * t98) * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t65 * t106 - t53 * t114 - t14 * t33 - t192 * t32 - t3 * t62 - t4 * t61, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1 * t62 + t106 * t37 - t5 * t114 + t2 * t61 - t7 * t32 + t8 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t81 + 0.2e1 * t83 - 0.2e1 * t161, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, 0, -t106, 0, -t79, t98 * t106, 0, 0, -t56, t162 * t211 - t164 + t94, t69, t56, t67, 0 (pkin(8) * t186 + (t190 - t201) * t112) * qJD(4) + (t142 * t111 - t78) * qJD(3) (t98 * t187 + t130) * qJD(4) + (t142 * t113 + t172) * qJD(3), t120, -pkin(3) * t79 + pkin(8) * t120, t6, -t214, t39, t139, -t38, 0, t104 * t33 + t61 * t173 + t65 * t52 + t53 * t75 + t131, -t104 * t32 + t62 * t173 - t65 * t51 + t53 * t76 - t132, t14 * t51 - t192 * t52 + t3 * t75 - t4 * t76 + t128, t53 * t104 - t14 * t35 + t65 * t173 - t192 * t34 - t3 * t55 - t4 * t54, t6, t39, t214, 0, t38, t139, t17 * t61 + t48 * t33 + t37 * t52 + t5 * t75 + t131, -t1 * t75 + t2 * t76 - t8 * t51 - t7 * t52 + t128, -t17 * t62 + t48 * t32 + t37 * t51 - t5 * t76 + t132, t1 * t55 + t37 * t17 + t2 * t54 - t7 * t34 + t8 * t35 + t5 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106, -t180, 0, 0, 0, 0, 0, 0, 0, 0, -t67, t69, t94 + t164 (-t204 + (t107 + t109) * t203) * qJD(3), 0, 0, 0, 0, 0, 0, t38, t39, t213, -pkin(4) * t167 + t104 * t106 + t129, 0, 0, 0, 0, 0, 0, t38, t213, -t39, t106 * t48 - t114 * t17 + t129; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t162, -0.2e1 * t152, 0, -0.2e1 * t162, 0, 0, t111 * t176, t113 * t176, 0, 0, t44, 0.2e1 * t138, 0, t177, 0, 0, 0.2e1 * t104 * t52 + 0.2e1 * t75 * t173, -0.2e1 * t104 * t51 + 0.2e1 * t76 * t173, t123, 0.2e1 * t104 * t173 + 0.2e1 * t158, t44, 0, -0.2e1 * t138, 0, 0, t177, 0.2e1 * t17 * t75 + 0.2e1 * t48 * t52, t123, -0.2e1 * t17 * t76 + 0.2e1 * t48 * t51, 0.2e1 * t48 * t17 + 0.2e1 * t158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t66, 0, -t212, t106, t31, t30, 0, 0, 0, 0, -t32, 0, -t33, t106, pkin(4) * t112 * t157 + t116 (-t112 * t156 + t114 * t154) * pkin(4) + t3 (t206 * t32 - t205 * t33 + (t205 * t62 - t206 * t61) * qJD(5)) * pkin(4) (t206 * t4 - t205 * t3 + (-t205 * t14 + t192 * t206) * qJD(5)) * pkin(4), 0, -t32, 0, t106, t33, 0, -t103 * t106 + t116 + t174, -t103 * t32 + t150 * t62 - t99 * t33 - t92 * t61, t99 * t106 + (-qJD(6) - t92) * t114 + t124, t1 * t99 + t2 * t103 + t150 * t8 + t7 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t212, t66, 0, 0, 0, 0, 0, 0, 0, 0, -t33, t32, 0 (-t206 * t33 - t205 * t32 + (t205 * t61 + t206 * t62) * qJD(5)) * pkin(4), 0, 0, 0, 0, 0, 0, -t33, 0, -t32, t33 * t103 + t150 * t61 - t32 * t99 + t62 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t182, 0, -t183, 0, -pkin(8) * t182, pkin(8) * t183, 0, 0, 0, 0, -t51, 0, -t52, 0, -t35, t34 (t206 * t51 - t205 * t52 + (t205 * t76 - t206 * t75) * qJD(5)) * pkin(4) (-t206 * t35 - t205 * t34 + (t205 * t54 + t206 * t55) * qJD(5)) * pkin(4), 0, -t51, 0, 0, t52, 0, -t35, -t103 * t51 + t150 * t76 - t99 * t52 - t92 * t75, -t34, t35 * t103 + t150 * t54 - t34 * t99 + t55 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, -0.2e1 * t105, 0, 0, 0, 0, 0, 0, 0, 0, t97, 0, 0.2e1 * t92, 0.2e1 * t103 * t150 + 0.2e1 * t99 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t32, 0, -t33, t106, t4, t3, 0, 0, 0, -t32, 0, t106, t33, 0, t4 + 0.2e1 * t174, pkin(5) * t32 - t33 * qJ(6) - t61 * qJD(6), 0.2e1 * t101 - t3 - 0.2e1 * t179, -t2 * pkin(5) + t1 * qJ(6) + t7 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t33, t32, 0, 0, 0, 0, 0, 0, 0, 0, -t33, 0, -t32, t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, 0, -t52, 0, -t35, t34, 0, 0, 0, -t51, 0, 0, t52, 0, -t35, pkin(5) * t51 - t52 * qJ(6) - t75 * qJD(6), -t34, -t35 * pkin(5) - t34 * qJ(6) + t55 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150, -t105, 0, 0, 0, 0, 0, 0, 0, 0, -t150, 0, t115 + t105, -pkin(5) * t150 + t92 * qJ(6) + t99 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, qJ(6) * t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106, -t32, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51, 0, t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
