% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:06
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRP3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:05:16
% EndTime: 2019-03-09 06:05:30
% DurationCPUTime: 5.35s
% Computational Cost: add. (8201->478), mult. (18989->607), div. (0->0), fcn. (12493->8), ass. (0->231)
t201 = cos(qJ(3));
t281 = qJD(1) * t201;
t182 = -qJD(4) + t281;
t172 = -qJD(5) + t182;
t198 = sin(qJ(4));
t200 = cos(qJ(4));
t275 = qJD(3) * t200;
t199 = sin(qJ(3));
t282 = qJD(1) * t199;
t148 = -t198 * t282 + t275;
t277 = qJD(3) * t198;
t149 = t200 * t282 + t277;
t197 = sin(qJ(5));
t330 = cos(qJ(5));
t212 = t197 * t148 + t330 * t149;
t271 = qJD(4) * t199;
t247 = qJD(1) * t271;
t268 = qJD(1) * qJD(3);
t354 = qJD(3) * qJD(4) + t201 * t268;
t111 = t198 * t247 - t354 * t200;
t261 = t354 * t198 + t200 * t247;
t43 = t212 * qJD(5) - t197 * t111 + t330 * t261;
t356 = t172 * t212 + t43;
t184 = sin(pkin(10)) * pkin(1) + pkin(7);
t163 = t184 * qJD(1);
t338 = qJD(2) * t201 - t199 * t163;
t117 = -qJD(3) * pkin(3) - t338;
t89 = -pkin(4) * t148 + t117;
t92 = -t330 * t148 + t149 * t197;
t34 = pkin(5) * t92 - qJ(6) * t212 + t89;
t361 = t34 * t92;
t360 = t89 * t92;
t359 = t92 * t212;
t259 = t330 * t200;
t293 = t198 * t199;
t263 = t197 * t293;
t131 = t199 * t259 - t263;
t187 = t199 * t268;
t294 = t197 * t200;
t151 = t330 * t198 + t294;
t337 = qJD(4) + qJD(5);
t101 = t337 * t151;
t274 = qJD(3) * t201;
t233 = t330 * t274;
t256 = t198 * t274;
t68 = t101 * t199 + t197 * t256 - t200 * t233;
t358 = -t131 * t187 - t68 * t172;
t276 = qJD(3) * t199;
t249 = t330 * qJD(5);
t269 = qJD(5) * t197;
t42 = t330 * t111 - t148 * t249 + t149 * t269 + t197 * t261;
t357 = t201 * t42 + t212 * t276;
t250 = t330 * qJD(4);
t232 = t200 * t250;
t258 = t198 * t281;
t295 = t197 * t198;
t286 = -t197 * t258 - t200 * t249 + t259 * t281 + t337 * t295 - t232;
t285 = -t151 * t281 + t101;
t270 = qJD(4) * t200;
t253 = t199 * t270;
t353 = t253 + t256;
t246 = -t201 * t43 + t92 * t276;
t130 = t151 * t199;
t254 = t198 * t271;
t69 = t198 * t233 - t197 * t254 - qJD(5) * t263 + (t197 * t274 + (t250 + t249) * t199) * t200;
t341 = -t130 * t187 + t69 * t172;
t352 = t341 - t246;
t351 = t341 + t246;
t321 = -t131 * t43 + t68 * t92;
t346 = -t42 * t130 + t212 * t69;
t350 = t346 - t321;
t349 = t346 + t321;
t332 = t212 ^ 2;
t265 = t92 ^ 2 - t332;
t348 = -t172 * t92 - t42;
t58 = pkin(5) * t212 + qJ(6) * t92;
t331 = -pkin(9) - pkin(8);
t166 = t331 * t198;
t167 = t331 * t200;
t108 = t197 * t166 - t330 * t167;
t260 = qJD(4) * t331;
t155 = t198 * t260;
t290 = t200 * t201;
t217 = pkin(4) * t199 - pkin(9) * t290;
t227 = pkin(3) * t199 - pkin(8) * t201;
t154 = t227 * qJD(1);
t84 = t200 * t154 - t198 * t338;
t74 = t217 * qJD(1) + t84;
t85 = t198 * t154 + t200 * t338;
t80 = -pkin(9) * t258 + t85;
t323 = t108 * qJD(5) - t331 * t232 + t330 * t74 + (t155 - t80) * t197;
t329 = t34 * t212;
t345 = t89 * t212;
t119 = t338 * qJD(3);
t156 = t227 * qJD(3);
t144 = qJD(1) * t156;
t127 = qJD(2) * t199 + t163 * t201;
t118 = qJD(3) * pkin(8) + t127;
t186 = -cos(pkin(10)) * pkin(1) - pkin(2);
t145 = -pkin(3) * t201 - pkin(8) * t199 + t186;
t121 = t145 * qJD(1);
t76 = t118 * t200 + t121 * t198;
t38 = -qJD(4) * t76 - t198 * t119 + t200 * t144;
t343 = t76 * t182 - t38;
t272 = qJD(4) * t198;
t37 = -t118 * t272 + t200 * t119 + t121 * t270 + t198 * t144;
t75 = -t118 * t198 + t200 * t121;
t342 = t182 * t75 + t37;
t339 = t201 * t261;
t229 = -t127 + (-t258 + t272) * pkin(4);
t153 = t184 * t290;
t98 = t198 * t145 + t153;
t336 = t357 + t358;
t193 = t199 ^ 2;
t220 = qJD(1) * t193 - t182 * t201;
t335 = -t182 * t254 - t220 * t275;
t133 = t200 * t145;
t291 = t199 * t200;
t296 = t184 * t198;
t82 = -pkin(9) * t291 + t133 + (-pkin(4) - t296) * t201;
t88 = -pkin(9) * t293 + t98;
t318 = t197 * t82 + t330 * t88;
t284 = t200 * t156 + t276 * t296;
t51 = t217 * qJD(3) + (-t153 + (pkin(9) * t199 - t145) * t198) * qJD(4) + t284;
t66 = t145 * t270 + t198 * t156 + (-t199 * t275 - t201 * t272) * t184;
t53 = -pkin(9) * t353 + t66;
t9 = -qJD(5) * t318 - t197 * t53 + t330 * t51;
t150 = -t259 + t295;
t334 = t172 * t285 - (qJD(3) * t150 - t92) * t282;
t333 = -t42 * t150 + t151 * t43 + t212 * t285 - t286 * t92;
t36 = t197 * t74 + t330 * t80;
t30 = qJ(6) * t282 + t36;
t211 = t330 * t166 + t197 * t167;
t70 = t211 * qJD(5) + t330 * t155 + t260 * t294;
t325 = t30 - t70;
t324 = pkin(5) * t282 + t323;
t322 = -t36 + t70;
t319 = t285 * pkin(5) + t286 * qJ(6) - qJD(6) * t151 + t229;
t65 = pkin(9) * t148 + t76;
t315 = t197 * t65;
t228 = t261 * t200;
t255 = t200 * t274;
t310 = t148 * t255 - t199 * t228;
t64 = -pkin(9) * t149 + t75;
t19 = t330 * t64 - t315;
t309 = pkin(4) * t249 + qJD(6) - t19;
t307 = t117 * t198;
t306 = t117 * t200;
t120 = t127 * qJD(3);
t305 = t120 * t198;
t304 = t120 * t199;
t303 = t120 * t200;
t302 = t148 * t182;
t301 = t148 * t199;
t300 = t149 * t148;
t299 = t149 * t182;
t298 = t182 * t198;
t297 = t182 * t200;
t292 = t198 * t201;
t202 = qJD(3) ^ 2;
t289 = t202 * t199;
t288 = t202 * t201;
t56 = -pkin(4) * t182 + t64;
t16 = t330 * t56 - t315;
t287 = qJD(6) - t16;
t136 = pkin(4) * t293 + t199 * t184;
t283 = -t201 ^ 2 + t193;
t164 = qJD(1) * t186;
t279 = qJD(3) * t211;
t278 = qJD(3) * t108;
t273 = qJD(4) * t148;
t264 = t330 * t65;
t203 = qJD(1) ^ 2;
t262 = t201 * t203 * t199;
t102 = t353 * pkin(4) + t184 * t274;
t192 = -pkin(4) * t200 - pkin(3);
t257 = t149 * t274;
t252 = t182 * t270;
t251 = t172 * t282;
t24 = pkin(4) * t187 + t111 * pkin(9) + t38;
t28 = -t261 * pkin(9) + t37;
t245 = -t197 * t24 - t56 * t249 + t65 * t269 - t330 * t28;
t244 = t197 * t28 - t330 * t24 + t65 * t249 + t56 * t269;
t240 = t111 * t201 + t149 * t276;
t239 = -t111 - t273;
t238 = pkin(5) * t187;
t236 = t199 * t252;
t235 = t149 * t253;
t234 = -t108 * t43 + t211 * t42 - t70 * t92;
t231 = t201 * t187;
t18 = t197 * t64 + t264;
t230 = pkin(4) * t269 - t18;
t224 = t130 * t43 + t69 * t92;
t222 = -t198 * t76 - t200 * t75;
t221 = t198 * t75 - t200 * t76;
t218 = 0.2e1 * qJD(3) * t164;
t158 = t172 * qJD(6);
t178 = qJ(6) * t187;
t1 = t178 - t158 - t245;
t216 = -t16 * t172 + t245;
t17 = t197 * t56 + t264;
t215 = -t17 * t172 - t244;
t47 = -t197 * t88 + t330 * t82;
t8 = t197 * t51 + t82 * t249 - t88 * t269 + t330 * t53;
t210 = t43 * t150 + t285 * t92;
t209 = t220 * t198;
t2 = -t238 + t244;
t206 = t222 * qJD(4) - t38 * t198 + t37 * t200;
t78 = t261 * pkin(4) + t120;
t204 = t119 * t201 + t304 + (-t127 * t199 - t201 * t338) * qJD(3);
t191 = -t330 * pkin(4) - pkin(5);
t185 = pkin(4) * t197 + qJ(6);
t115 = (-t172 - t281) * t276;
t97 = -t184 * t292 + t133;
t90 = pkin(5) * t150 - qJ(6) * t151 + t192;
t72 = pkin(5) * t130 - qJ(6) * t131 + t136;
t67 = -t98 * qJD(4) + t284;
t50 = pkin(4) * t149 + t58;
t45 = t201 * pkin(5) - t47;
t44 = -qJ(6) * t201 + t318;
t25 = t286 * t172 + (qJD(3) * t151 - t212) * t282;
t15 = -t172 * qJ(6) + t17;
t14 = t172 * pkin(5) + t287;
t13 = pkin(5) * t69 + qJ(6) * t68 - qJD(6) * t131 + t102;
t12 = -t131 * t42 - t212 * t68;
t11 = -t42 * t151 - t212 * t286;
t10 = t357 - t358;
t7 = -pkin(5) * t276 - t9;
t6 = t43 * pkin(5) + t42 * qJ(6) - qJD(6) * t212 + t78;
t5 = qJ(6) * t276 - qJD(6) * t201 + t8;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t231, -0.2e1 * t283 * t268, t288, -0.2e1 * t231, -t289, 0, -t184 * t288 + t199 * t218, t184 * t289 + t201 * t218, t204, t204 * t184, -t111 * t291 + (-t254 + t255) * t149, -t235 + (-t257 + (t111 - t273) * t199) * t198 + t310, t240 - t335, -t148 * t353 + t261 * t293, t236 + t339 + (-t209 + t301) * qJD(3) (-t182 - t281) * t276, -t67 * t182 + (-t38 + (-t148 * t184 + t307) * qJD(3)) * t201 + (t184 * t261 + t305 + t117 * t270 + (qJD(1) * t97 + t75) * qJD(3)) * t199, t66 * t182 + (t37 + (t149 * t184 + t306) * qJD(3)) * t201 + (-t117 * t272 - t111 * t184 + t303 + (-qJD(1) * t98 - t76) * qJD(3)) * t199, t66 * t148 - t98 * t261 - t67 * t149 + t97 * t111 + t222 * t274 + (qJD(4) * t221 - t37 * t198 - t38 * t200) * t199, t37 * t98 + t38 * t97 + t76 * t66 + t75 * t67 + (t117 * t274 + t304) * t184, t12, -t350, t10, t224, t352, t115, t102 * t92 + t78 * t130 + t136 * t43 - t9 * t172 + t244 * t201 + t89 * t69 + (qJD(1) * t47 + t16) * t276, t102 * t212 + t78 * t131 - t136 * t42 + t8 * t172 - t245 * t201 - t89 * t68 + (-qJD(1) * t318 - t17) * t276, t130 * t245 + t131 * t244 + t16 * t68 - t17 * t69 - t212 * t9 - t318 * t43 + t42 * t47 - t8 * t92, t102 * t89 + t136 * t78 + t16 * t9 + t17 * t8 - t244 * t47 - t245 * t318, t12, t10, t350, t115, -t352, t224, t13 * t92 + t6 * t130 + t7 * t172 + t2 * t201 + t34 * t69 + t72 * t43 + (-qJD(1) * t45 - t14) * t276, -t1 * t130 + t131 * t2 - t14 * t68 - t15 * t69 + t212 * t7 - t42 * t45 - t43 * t44 - t5 * t92, -t1 * t201 - t13 * t212 - t6 * t131 - t5 * t172 + t34 * t68 + t72 * t42 + (qJD(1) * t44 + t15) * t276, t1 * t44 + t13 * t34 + t14 * t7 + t15 * t5 + t2 * t45 + t6 * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, -t288, 0, t119 * t199 - t120 * t201 + (t127 * t201 - t199 * t338) * qJD(3), 0, 0, 0, 0, 0, 0, t236 - t339 + (-t209 - t301) * qJD(3), t240 + t335, t235 + (t199 * t239 + t257) * t198 + t310 (-qJD(3) * t221 - t120) * t201 + (qJD(3) * t117 + t206) * t199, 0, 0, 0, 0, 0, 0, t351, t336, t349, t130 * t244 - t131 * t245 - t16 * t69 - t17 * t68 - t201 * t78 + t276 * t89, 0, 0, 0, 0, 0, 0, t351, t349, -t336, t1 * t131 + t130 * t2 + t14 * t69 - t15 * t68 - t201 * t6 + t276 * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t262, t283 * t203, 0, t262, 0, 0, -t164 * t282, -t164 * t281, 0, 0, -t111 * t198 - t149 * t297 (-t111 - t302) * t200 + (-t261 + t299) * t198, -t252 + (t182 * t290 + (-t149 + t277) * t199) * qJD(1), t148 * t298 - t228, t182 * t272 + (-t182 * t292 + (-t148 + t275) * t199) * qJD(1), t182 * t282, -pkin(3) * t261 - t303 + t84 * t182 + t127 * t148 + (pkin(8) * t297 + t307) * qJD(4) + (-t75 * t199 + (-pkin(8) * t276 - t117 * t201) * t198) * qJD(1), pkin(3) * t111 + t305 - t127 * t149 - t85 * t182 + (-pkin(8) * t298 + t306) * qJD(4) + (-t117 * t290 + (-pkin(8) * t275 + t76) * t199) * qJD(1), -t85 * t148 + t84 * t149 + ((qJD(4) * t149 - t261) * pkin(8) + t342) * t200 + (pkin(8) * t239 + t343) * t198, -t120 * pkin(3) + pkin(8) * t206 - t117 * t127 - t75 * t84 - t76 * t85, t11, -t333, t25, t210, t334, t251, t78 * t150 + t192 * t43 + t229 * t92 + t285 * t89 + t323 * t172 + (-t16 + t279) * t282, t78 * t151 - t192 * t42 + t229 * t212 - t286 * t89 + t322 * t172 + (t17 - t278) * t282, t150 * t245 + t151 * t244 + t16 * t286 - t17 * t285 + t212 * t323 + t36 * t92 + t234, -t108 * t245 - t16 * t323 + t17 * t322 + t78 * t192 - t211 * t244 + t229 * t89, t11, t25, t333, t251, -t334, t210, t6 * t150 + t90 * t43 + t319 * t92 + t285 * t34 + t324 * t172 + (t14 + t279) * t282, -t1 * t150 - t14 * t286 - t15 * t285 + t2 * t151 + t212 * t324 + t30 * t92 + t234, -t6 * t151 + t90 * t42 - t319 * t212 + t286 * t34 + t325 * t172 + (-t15 + t278) * t282, t1 * t108 + t324 * t14 - t15 * t325 - t2 * t211 + t319 * t34 + t6 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t300, -t148 ^ 2 + t149 ^ 2, -t111 + t302, t300, -t261 - t299, t187, -t117 * t149 - t343, -t117 * t148 - t342, 0, 0, t359, -t265, t348, -t359, -t356, t187, -t18 * t172 - t345 + (-t149 * t92 + t172 * t269 + t330 * t187) * pkin(4) - t244, -t19 * t172 + t360 + (-t149 * t212 + t172 * t249 - t187 * t197) * pkin(4) + t245, -t16 * t92 + t17 * t212 - t18 * t212 + t19 * t92 + (t330 * t42 - t197 * t43 + (t197 * t212 - t330 * t92) * qJD(5)) * pkin(4), t16 * t18 - t17 * t19 + (-t330 * t244 - t149 * t89 - t197 * t245 + (-t16 * t197 + t330 * t17) * qJD(5)) * pkin(4), t359, t348, t265, t187, t356, -t359, -t329 - t50 * t92 + t230 * t172 + (pkin(5) - t191) * t187 - t244, -t185 * t43 - t191 * t42 + (t15 + t230) * t212 + (t14 - t309) * t92, -t172 * t309 + t185 * t187 + t212 * t50 + t1 - t361, t1 * t185 + t14 * t230 + t15 * t309 + t2 * t191 - t34 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t359, -t265, t348, -t359, -t356, t187, t215 - t345, t216 + t360, 0, 0, t359, t348, t265, t187, t356, -t359, -t58 * t92 + t215 + 0.2e1 * t238 - t329, pkin(5) * t42 - t43 * qJ(6) + (t15 - t17) * t212 + (t14 - t287) * t92, t212 * t58 - 0.2e1 * t158 + 0.2e1 * t178 - t216 - t361, -t2 * pkin(5) + t1 * qJ(6) - t14 * t17 + t15 * t287 - t34 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t187 + t359, t348, -t172 ^ 2 - t332, t15 * t172 + t2 + t329;];
tauc_reg  = t3;
