% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:19
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRRP4_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP4_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP4_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP4_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP4_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP4_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:17:54
% EndTime: 2019-03-09 00:18:14
% DurationCPUTime: 10.65s
% Computational Cost: add. (11139->708), mult. (25433->917), div. (0->0), fcn. (19524->14), ass. (0->328)
t277 = sin(qJ(3));
t280 = cos(qJ(3));
t344 = pkin(3) * t277 - pkin(9) * t280;
t215 = t344 * qJD(3);
t345 = pkin(3) * t280 + pkin(9) * t277;
t222 = -pkin(2) - t345;
t276 = sin(qJ(4));
t279 = cos(qJ(4));
t394 = qJD(4) * t279;
t396 = qJD(4) * t276;
t398 = qJD(3) * t279;
t273 = sin(pkin(6));
t406 = qJD(1) * t273;
t281 = cos(qJ(2));
t418 = t280 * t281;
t278 = sin(qJ(2));
t423 = t276 * t278;
t454 = t276 * t215 + t222 * t394 + (-t277 * t398 - t280 * t396) * pkin(8) - (t279 * t418 + t423) * t406;
t399 = qJD(3) * t277;
t471 = pkin(8) * t276;
t505 = t279 * t215 + t399 * t471 - (-t276 * t418 + t278 * t279) * t406;
t419 = t279 * t280;
t256 = pkin(8) * t419;
t332 = pkin(4) * t277 - pkin(10) * t419;
t504 = t332 * qJD(3) + (-t256 + (pkin(10) * t277 - t222) * t276) * qJD(4) + t505;
t397 = qJD(3) * t280;
t375 = t276 * t397;
t495 = t277 * t394 + t375;
t503 = pkin(10) * t495 - t454;
t401 = qJD(2) * t280;
t254 = -qJD(4) + t401;
t239 = -qJD(5) + t254;
t403 = qJD(2) * t277;
t208 = -t276 * t403 + t398;
t400 = qJD(3) * t276;
t209 = t279 * t403 + t400;
t275 = sin(qJ(5));
t474 = cos(qJ(5));
t324 = t275 * t208 + t474 * t209;
t395 = qJD(4) * t277;
t362 = qJD(2) * t395;
t389 = t277 * qJDD(2);
t111 = -t279 * (qJD(3) * (qJD(4) + t401) + t389) + (-qJDD(3) + t362) * t276;
t391 = qJD(2) * qJD(3);
t364 = t280 * t391;
t352 = qJD(3) * t396 + t279 * t362 + (t364 + t389) * t276;
t311 = t279 * qJDD(3) - t352;
t40 = qJD(5) * t324 - t275 * t111 - t474 * t311;
t500 = t239 * t324 + t40;
t502 = pkin(4) * t276 + pkin(8);
t119 = -t474 * t208 + t209 * t275;
t217 = qJD(2) * pkin(8) + t278 * t406;
t204 = t277 * t217;
t274 = cos(pkin(6));
t405 = qJD(1) * t274;
t160 = t280 * t405 - t204;
t147 = -qJD(3) * pkin(3) - t160;
t107 = -pkin(4) * t208 + t147;
t43 = pkin(5) * t119 - qJ(6) * t324 + t107;
t501 = t119 * t43;
t499 = t107 * t119;
t498 = t119 * t324;
t369 = t474 * qJD(4);
t349 = t279 * t369;
t368 = t474 * qJD(5);
t376 = t276 * t401;
t380 = t474 * t279;
t426 = t275 * t276;
t484 = qJD(4) + qJD(5);
t413 = -t275 * t376 - t279 * t368 + t380 * t401 + t426 * t484 - t349;
t425 = t275 * t279;
t211 = t474 * t276 + t425;
t134 = t484 * t211;
t412 = -t211 * t401 + t134;
t392 = qJD(1) * qJD(2);
t366 = t281 * t392;
t450 = qJDD(2) * pkin(8);
t497 = t450 + (qJDD(1) * t278 + t366) * t273 + qJD(3) * t405;
t262 = pkin(4) * t279 + pkin(3);
t475 = pkin(10) + pkin(9);
t420 = t277 * t475;
t494 = -t262 * t280 - t420;
t367 = t278 * t392;
t427 = t273 * t281;
t339 = -qJDD(1) * t427 + t273 * t367;
t100 = qJD(2) * t215 + qJDD(2) * t222 + t339;
t404 = qJD(1) * t277;
t161 = t217 * t280 + t274 * t404;
t148 = qJD(3) * pkin(9) + t161;
t379 = t281 * t406;
t163 = qJD(2) * t222 - t379;
t390 = qJDD(1) * t274;
t382 = -t277 * t390 - t497 * t280;
t82 = -t217 * t399 - t382;
t73 = qJDD(3) * pkin(9) + t82;
t318 = -t276 * t100 + t148 * t396 - t163 * t394 - t279 * t73;
t89 = -t148 * t276 + t279 * t163;
t493 = t89 * t254 - t318;
t476 = t324 ^ 2;
t371 = t119 ^ 2 - t476;
t393 = qJD(5) * t275;
t39 = t474 * t111 - t208 * t368 + t209 * t393 - t275 * t311;
t492 = -t119 * t239 - t39;
t63 = pkin(5) * t324 + qJ(6) * t119;
t207 = t279 * t222;
t421 = t277 * t279;
t129 = -pkin(10) * t421 + t207 + (-pkin(4) - t471) * t280;
t172 = t276 * t222 + t256;
t424 = t276 * t277;
t143 = -pkin(10) * t424 + t172;
t467 = t129 * t368 - t143 * t393 + t504 * t275 - t503 * t474;
t231 = t475 * t276;
t232 = t475 * t279;
t151 = -t275 * t231 + t474 * t232;
t381 = qJD(4) * t475;
t214 = t276 * t381;
t213 = t344 * qJD(2);
t105 = -t160 * t276 + t279 * t213;
t88 = qJD(2) * t332 + t105;
t106 = t279 * t160 + t276 * t213;
t95 = -pkin(10) * t376 + t106;
t462 = -t151 * qJD(5) - t475 * t349 - t474 * t88 + (t214 + t95) * t275;
t90 = t148 * t279 + t163 * t276;
t24 = -qJD(4) * t90 + t279 * t100 - t276 * t73;
t490 = t90 * t254 - t24;
t346 = -t161 + (-t376 + t396) * pkin(4);
t486 = t275 * t129 + t474 * t143;
t330 = t495 * pkin(4) + pkin(8) * t397 - t277 * t379;
t264 = t280 * qJDD(2);
t205 = t277 * t391 + qJDD(4) - t264;
t201 = qJDD(5) + t205;
t185 = t201 * qJ(6);
t221 = t239 * qJD(6);
t485 = t185 - t221;
t186 = t201 * pkin(5);
t483 = t186 - qJDD(6);
t428 = t273 * t280;
t195 = t274 * t277 + t278 * t428;
t271 = qJ(4) + qJ(5);
t265 = sin(t271);
t266 = cos(t271);
t124 = t195 * t265 + t266 * t427;
t12 = pkin(4) * t205 + pkin(10) * t111 + t24;
t19 = pkin(10) * t311 - t318;
t61 = -pkin(10) * t209 + t89;
t50 = -pkin(4) * t254 + t61;
t62 = pkin(10) * t208 + t90;
t356 = -t474 * t12 + t275 * t19 + t62 * t368 + t50 * t393;
t452 = cos(pkin(11));
t358 = t452 * t278;
t272 = sin(pkin(11));
t430 = t272 * t281;
t188 = t274 * t358 + t430;
t359 = t273 * t452;
t136 = t188 * t280 - t277 * t359;
t357 = t452 * t281;
t431 = t272 * t278;
t187 = -t274 * t357 + t431;
t84 = t136 * t265 - t187 * t266;
t190 = -t274 * t431 + t357;
t138 = t272 * t273 * t277 + t190 * t280;
t189 = t274 * t430 + t358;
t86 = t138 * t265 - t189 * t266;
t297 = g(1) * t86 + g(2) * t84 + g(3) * t124 - t356;
t286 = t324 * t43 - t297 - t483;
t482 = -t107 * t324 + t297;
t210 = -t380 + t426;
t481 = t119 * t403 - t201 * t210 + t239 * t412;
t135 = -t188 * t277 - t280 * t359;
t137 = -t190 * t277 + t272 * t428;
t429 = t273 * t278;
t194 = -t274 * t280 + t277 * t429;
t313 = g(1) * t137 + g(2) * t135 - g(3) * t194;
t480 = -t151 * t201 + t265 * t313;
t451 = qJDD(2) * pkin(2);
t169 = t339 - t451;
t283 = qJD(3) ^ 2;
t343 = g(1) * t189 + g(2) * t187;
t479 = -pkin(8) * t283 + t273 * (-g(3) * t281 + t367) - t169 + t343 + t451;
t466 = -qJD(5) * t486 + t503 * t275 + t504 * t474;
t477 = t119 * t413 + t210 * t39 - t211 * t40 - t324 * t412;
t469 = qJ(6) * t399 - qJD(6) * t280 + t467;
t468 = -pkin(5) * t399 - t466;
t465 = t412 * pkin(5) + t413 * qJ(6) - qJD(6) * t211 + t346;
t42 = t275 * t88 + t474 * t95;
t37 = qJ(6) * t403 + t42;
t323 = -t474 * t231 - t275 * t232;
t78 = t323 * qJD(5) - t474 * t214 - t381 * t425;
t464 = t78 - t37;
t463 = t78 - t42;
t461 = pkin(5) * t403 - t462;
t460 = qJD(2) * pkin(2);
t387 = t474 * t62;
t31 = t275 * t50 + t387;
t459 = t239 * t31;
t458 = t275 * t62;
t33 = t474 * t61 - t458;
t455 = pkin(4) * t368 + qJD(6) - t33;
t453 = -qJD(4) * t172 + t505;
t449 = qJDD(3) * pkin(3);
t448 = t111 * t276;
t442 = t187 * t279;
t441 = t189 * t279;
t440 = t208 * t254;
t439 = t208 * t276;
t438 = t209 * t208;
t437 = t209 * t254;
t436 = t209 * t279;
t433 = t265 * t280;
t432 = t266 * t280;
t422 = t276 * t280;
t30 = t474 * t50 - t458;
t417 = qJD(6) - t30;
t416 = qJDD(1) - g(3);
t415 = t135 * t262 + t136 * t475;
t414 = t137 * t262 + t138 * t475;
t411 = -t194 * t262 + t195 * t475;
t409 = pkin(2) * t427 + pkin(8) * t429;
t216 = pkin(4) * t424 + t277 * pkin(8);
t269 = t277 ^ 2;
t270 = t280 ^ 2;
t408 = t269 - t270;
t407 = t269 + t270;
t402 = qJD(2) * t278;
t386 = t279 * t427;
t385 = t265 * t427;
t384 = t275 * t424;
t284 = qJD(2) ^ 2;
t383 = t277 * t284 * t280;
t378 = t273 * t402;
t377 = qJD(2) * t427;
t374 = t276 * t395;
t372 = t239 * t403;
t370 = g(3) * t409;
t363 = t281 * t391;
t3 = t275 * t12 + t474 * t19 + t50 * t368 - t62 * t393;
t85 = t136 * t266 + t187 * t265;
t361 = -t84 * pkin(5) + qJ(6) * t85;
t87 = t138 * t266 + t189 * t265;
t360 = -t86 * pkin(5) + qJ(6) * t87;
t353 = t217 * t397 + t497 * t277 - t280 * t390;
t350 = t474 * t397;
t348 = t277 * t364;
t32 = t275 * t61 + t387;
t347 = pkin(4) * t393 - t32;
t342 = g(1) * t190 + g(2) * t188;
t125 = t195 * t266 - t385;
t341 = g(3) * (-t124 * pkin(5) + qJ(6) * t125);
t340 = pkin(5) * t266 + qJ(6) * t265;
t180 = t211 * t277;
t76 = t276 * t350 - t275 * t374 - qJD(5) * t384 + (t275 * t397 + (t369 + t368) * t277) * t279;
t338 = t119 * t76 + t180 * t40;
t336 = -t276 * t90 - t279 * t89;
t333 = qJDD(2) * t281 - t278 * t284;
t181 = t277 * t380 - t384;
t75 = t134 * t277 + t275 * t375 - t279 * t350;
t331 = -pkin(5) * t76 - qJ(6) * t75 + qJD(6) * t181 - t330;
t141 = -t195 * t276 - t386;
t327 = -t195 * t279 + t276 * t427;
t65 = t474 * t129 - t275 * t143;
t326 = t474 * t141 + t275 * t327;
t69 = t275 * t141 - t327 * t474;
t321 = t205 * t276 - t254 * t394;
t320 = t205 * t279 + t254 * t396;
t139 = -qJD(3) * t194 + t280 * t377;
t55 = qJD(4) * t327 - t139 * t276 + t279 * t378;
t56 = qJD(4) * t141 + t139 * t279 + t276 * t378;
t13 = t326 * qJD(5) + t275 * t55 + t474 * t56;
t14 = t69 * qJD(5) + t275 * t56 - t474 * t55;
t319 = -t13 * t119 + t14 * t324 + t326 * t39 - t69 * t40;
t317 = t119 * t412 + t210 * t40;
t140 = qJD(3) * t195 + t277 * t377;
t316 = t140 * t119 + t14 * t239 + t194 * t40 + t201 * t326;
t74 = t353 - t449;
t101 = -t187 * t433 - t188 * t266;
t103 = -t189 * t433 - t190 * t266;
t154 = -t266 * t429 + t280 * t385;
t315 = -g(1) * t103 - g(2) * t101 - g(3) * t154;
t102 = -t187 * t432 + t188 * t265;
t104 = -t189 * t432 + t190 * t265;
t155 = (t265 * t278 + t266 * t418) * t273;
t314 = -g(1) * t104 - g(2) * t102 - g(3) * t155;
t312 = g(1) * t138 + g(2) * t136 + g(3) * t195;
t309 = -t313 - t74;
t308 = g(3) * t427 - t343;
t307 = -g(3) * t429 - t342;
t306 = -pkin(9) * t205 - t147 * t254;
t305 = t311 * t279;
t304 = t420 * t427 + t409 + (pkin(4) * t423 + t262 * t418) * t273;
t182 = t187 * pkin(2);
t303 = t494 * t187 + t502 * t188 - t182;
t183 = t189 * pkin(2);
t302 = t494 * t189 + t502 * t190 - t183;
t301 = t308 * t277;
t300 = t119 * t75 + t180 * t39 - t181 * t40 - t324 * t76;
t299 = t13 * t239 + t140 * t324 - t194 * t39 - t201 * t69;
t298 = g(1) * t87 + g(2) * t85 + g(3) * t125 - t3;
t295 = -t78 * t119 - t151 * t40 + t323 * t39 - t312;
t294 = t119 * t399 + t180 * t201 - t239 * t76 - t280 * t40;
t293 = -pkin(9) * qJD(4) * t254 - t309;
t292 = t201 * t323 - t266 * t313;
t218 = -t379 - t460;
t291 = -pkin(8) * qJDD(3) + (t218 + t379 - t460) * qJD(3);
t289 = -t239 * t30 + t298;
t287 = g(3) * t386 + t276 * t312;
t44 = -pkin(4) * t311 + t74;
t285 = t353 * t277 + t82 * t280 + (-t160 * t280 - t161 * t277) * qJD(3) - t342;
t261 = -t474 * pkin(4) - pkin(5);
t258 = pkin(4) * t275 + qJ(6);
t177 = pkin(4) * t441;
t175 = pkin(4) * t442;
t171 = -pkin(8) * t422 + t207;
t130 = -t201 * t280 - t239 * t399;
t116 = pkin(5) * t210 - qJ(6) * t211 - t262;
t94 = pkin(5) * t180 - qJ(6) * t181 + t216;
t60 = t280 * pkin(5) - t65;
t59 = -qJ(6) * t280 + t486;
t47 = pkin(4) * t209 + t63;
t35 = t201 * t211 + t239 * t413 - t324 * t403;
t27 = -t239 * qJ(6) + t31;
t25 = t239 * pkin(5) + t417;
t11 = -t181 * t39 - t324 * t75;
t8 = -t211 * t39 - t324 * t413;
t6 = t181 * t201 + t239 * t75 + t280 * t39 + t324 * t399;
t5 = t40 * pkin(5) + t39 * qJ(6) - qJD(6) * t324 + t44;
t2 = t356 - t483;
t1 = t3 + t485;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t416, 0, 0, 0, 0, 0, 0, t333 * t273 (-qJDD(2) * t278 - t281 * t284) * t273, 0, -g(3) + (t274 ^ 2 + (t278 ^ 2 + t281 ^ 2) * t273 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, -qJD(3) * t140 - qJDD(3) * t194 + (-t277 * t363 + t280 * t333) * t273, -qJD(3) * t139 - qJDD(3) * t195 + (-t277 * t333 - t280 * t363) * t273 (t194 * t277 + t195 * t280) * qJDD(2) + (t139 * t280 + t140 * t277 + (t194 * t280 - t195 * t277) * qJD(3)) * qJD(2), t139 * t161 - t140 * t160 + t194 * t353 + t195 * t82 - g(3) + (-t169 * t281 + t218 * t402) * t273, 0, 0, 0, 0, 0, 0, -t140 * t208 + t141 * t205 - t194 * t311 - t55 * t254, -t111 * t194 + t140 * t209 + t205 * t327 + t254 * t56, t141 * t111 + t56 * t208 - t55 * t209 - t311 * t327, t140 * t147 + t141 * t24 + t194 * t74 + t318 * t327 + t55 * t89 + t56 * t90 - g(3), 0, 0, 0, 0, 0, 0, t316, t299, t319, t107 * t140 + t13 * t31 - t14 * t30 + t194 * t44 + t3 * t69 - t326 * t356 - g(3), 0, 0, 0, 0, 0, 0, t316, t319, -t299, t1 * t69 + t13 * t27 + t14 * t25 + t140 * t43 + t194 * t5 - t2 * t326 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t416 * t427 + t343, -t416 * t429 + t342, 0, 0, qJDD(2) * t269 + 0.2e1 * t348, 0.2e1 * t264 * t277 - 0.2e1 * t391 * t408, qJDD(3) * t277 + t280 * t283, qJDD(2) * t270 - 0.2e1 * t348, qJDD(3) * t280 - t277 * t283, 0, t291 * t277 + t280 * t479, -t277 * t479 + t291 * t280, t407 * t450 + (-g(3) * t278 - t366 * t407) * t273 + t285, -t169 * pkin(2) + g(1) * t183 + g(2) * t182 - t370 + (-t218 * t278 + (t160 * t277 - t161 * t280) * t281) * t406 + t285 * pkin(8), -t111 * t421 + (t279 * t397 - t374) * t209 (t208 * t279 - t209 * t276) * t397 + (t305 + t448 + (-t436 - t439) * qJD(4)) * t277 (-t254 * t398 + t111) * t280 + (qJD(3) * t209 + t320) * t277, -t208 * t495 - t311 * t424 (t254 * t400 - t311) * t280 + (qJD(3) * t208 - t321) * t277, -t205 * t280 - t254 * t399, t171 * t205 - t453 * t254 + t307 * t276 + (-t24 + (-pkin(8) * t208 + t147 * t276) * qJD(3) - t308 * t279) * t280 + (-pkin(8) * t311 + t89 * qJD(3) + t147 * t394 + t208 * t379 + t74 * t276) * t277, -t172 * t205 + t454 * t254 + t307 * t279 + (-t318 + (pkin(8) * t209 + t147 * t279) * qJD(3) + t308 * t276) * t280 + (-pkin(8) * t111 - qJD(3) * t90 - t147 * t396 - t209 * t379 + t74 * t279) * t277, t172 * t311 + t171 * t111 - t453 * t209 + t454 * t208 + t336 * t397 + (t318 * t276 - t24 * t279 + (t276 * t89 - t279 * t90) * qJD(4) - t308) * t277, -t318 * t172 + t24 * t171 - g(1) * (-t189 * t345 - t183) - g(2) * (-t187 * t345 - t182) - t370 + t454 * t90 + t453 * t89 + (-g(3) * t345 - t147 * t404) * t427 + (t147 * t397 + t277 * t74 - t342) * pkin(8), t11, t300, t6, t338, -t294, t130, t107 * t76 + t119 * t330 + t180 * t44 + t201 * t65 + t216 * t40 - t239 * t466 + t280 * t356 + t30 * t399 + t314, -t107 * t75 + t181 * t44 - t201 * t486 - t216 * t39 + t239 * t467 + t280 * t3 - t31 * t399 + t324 * t330 - t315, -t119 * t467 - t180 * t3 + t181 * t356 + t30 * t75 - t31 * t76 - t324 * t466 + t39 * t65 - t40 * t486 - t301, -g(1) * t302 - g(2) * t303 - g(3) * t304 + t107 * t330 + t44 * t216 + t3 * t486 + t30 * t466 + t31 * t467 - t356 * t65, t11, t6, -t300, t130, t294, t338, -t331 * t119 + t180 * t5 + t2 * t280 - t201 * t60 + t239 * t468 - t25 * t399 + t40 * t94 + t43 * t76 + t314, -t1 * t180 - t469 * t119 + t181 * t2 - t25 * t75 - t27 * t76 + t324 * t468 - t39 * t60 - t40 * t59 - t301, -t1 * t280 - t181 * t5 + t201 * t59 - t469 * t239 + t27 * t399 + t324 * t331 + t39 * t94 + t43 * t75 + t315, t1 * t59 + t5 * t94 + t2 * t60 - g(1) * (pkin(5) * t104 + qJ(6) * t103 + t302) - g(2) * (pkin(5) * t102 + qJ(6) * t101 + t303) - g(3) * (pkin(5) * t155 + qJ(6) * t154 + t304) - t331 * t43 + t469 * t27 + t468 * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t383, t408 * t284, t389, t383, t264, qJDD(3), qJD(3) * t161 - t218 * t403 - t313 - t353, -t218 * t401 + (t160 + t204) * qJD(3) + t312 + t382, 0, 0, -t254 * t436 - t448 (-t111 - t440) * t279 + (t311 + t437) * t276 (-t209 * t277 + t254 * t419) * qJD(2) + t321, t254 * t439 + t305 (-t208 * t277 - t254 * t422) * qJD(2) + t320, t254 * t403, -pkin(3) * t352 + t105 * t254 - t89 * t403 + t161 * t208 + t306 * t276 + (-t293 + t449) * t279, pkin(3) * t111 - t106 * t254 - t161 * t209 + t276 * t293 + t279 * t306 + t403 * t90, t105 * t209 - t106 * t208 + ((qJD(4) * t209 + t311) * pkin(9) + t493) * t279 + ((-qJD(4) * t208 - t111) * pkin(9) + t490) * t276 - t312, -t89 * t105 - t90 * t106 - t147 * t161 + t309 * pkin(3) + (qJD(4) * t336 - t24 * t276 - t279 * t318 - t312) * pkin(9), t8, t477, t35, t317, t481, t372, t107 * t412 + t119 * t346 + t210 * t44 - t239 * t462 - t262 * t40 - t30 * t403 + t292, -t107 * t413 + t211 * t44 + t239 * t463 + t262 * t39 + t31 * t403 + t324 * t346 + t480, t119 * t42 - t210 * t3 + t211 * t356 + t30 * t413 - t31 * t412 - t324 * t462 + t295, -g(1) * t414 - g(2) * t415 - g(3) * t411 + t107 * t346 + t3 * t151 - t44 * t262 + t30 * t462 + t31 * t463 - t323 * t356, t8, t35, -t477, t372, -t481, t317, t116 * t40 + t119 * t465 + t210 * t5 + t239 * t461 + t25 * t403 + t412 * t43 + t292, -t1 * t210 + t119 * t37 + t2 * t211 - t25 * t413 - t27 * t412 + t324 * t461 + t295, t116 * t39 - t211 * t5 - t239 * t464 - t27 * t403 - t324 * t465 + t413 * t43 - t480, t1 * t151 + t5 * t116 - t2 * t323 - g(1) * (t137 * t340 + t414) - g(2) * (t135 * t340 + t415) - g(3) * (-t194 * t340 + t411) + t465 * t43 + t464 * t27 + t461 * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, -t208 ^ 2 + t209 ^ 2, -t111 + t440, t438, t311 - t437, t205, -t147 * t209 - g(1) * (-t138 * t276 + t441) - g(2) * (-t136 * t276 + t442) - g(3) * t141 - t490, -t147 * t208 - g(1) * (-t138 * t279 - t189 * t276) - g(2) * (-t136 * t279 - t187 * t276) - g(3) * t327 - t493, 0, 0, t498, -t371, t492, -t498, -t500, t201, -t32 * t239 + (-t119 * t209 + t474 * t201 + t239 * t393) * pkin(4) + t482, t499 - t33 * t239 + (-t201 * t275 - t209 * t324 + t239 * t368) * pkin(4) + t298, t31 * t324 + t33 * t119 - t119 * t30 - t32 * t324 + (t474 * t39 - t275 * t40 + (-t474 * t119 + t275 * t324) * qJD(5)) * pkin(4), -g(1) * t177 - g(2) * t175 + t30 * t32 - t31 * t33 + (-t356 * t474 - t107 * t209 + t3 * t275 + (-t30 * t275 + t31 * t474) * qJD(5) + t287) * pkin(4), t498, t492, t371, t201, t500, -t498, -t119 * t47 - t201 * t261 + t239 * t347 - t286, -t258 * t40 - t261 * t39 + (t27 + t347) * t324 + (-t455 + t25) * t119, t201 * t258 - t239 * t455 + t324 * t47 - t298 + t485 - t501, t1 * t258 + t2 * t261 - t43 * t47 - t25 * t32 - g(1) * (t177 + t360) - g(2) * (t175 + t361) - t341 + t455 * t27 + (t25 * t393 + t287) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t498, -t371, t492, -t498, -t500, t201, -t459 + t482, t289 + t499, 0, 0, t498, t492, t371, t201, t500, -t498, -t119 * t63 + t186 - t286 - t459, pkin(5) * t39 - qJ(6) * t40 + (t27 - t31) * t324 + (t25 - t417) * t119, t324 * t63 + 0.2e1 * t185 - 0.2e1 * t221 - t289 - t501, -t2 * pkin(5) - g(1) * t360 - g(2) * t361 + t1 * qJ(6) - t25 * t31 + t27 * t417 - t43 * t63 - t341; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t201 + t498, t492, -t239 ^ 2 - t476, t239 * t27 + t286;];
tau_reg  = t4;
