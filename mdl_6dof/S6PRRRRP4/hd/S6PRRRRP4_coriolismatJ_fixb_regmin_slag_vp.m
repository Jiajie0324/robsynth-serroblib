% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:19
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRRP4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:17:51
% EndTime: 2019-03-09 00:18:37
% DurationCPUTime: 30.92s
% Computational Cost: add. (14234->829), mult. (33318->1087), div. (0->0), fcn. (35956->10), ass. (0->595)
t632 = sin(qJ(4));
t635 = cos(qJ(5));
t902 = t635 * t632;
t631 = sin(qJ(5));
t636 = cos(qJ(4));
t913 = t631 * t636;
t569 = t902 + t913;
t633 = sin(qJ(3));
t928 = t569 * t633;
t1001 = t928 / 0.2e1;
t630 = sin(pkin(6));
t638 = cos(qJ(2));
t920 = t630 * t638;
t822 = t632 * t920;
t637 = cos(qJ(3));
t634 = sin(qJ(2));
t921 = t630 * t634;
t967 = cos(pkin(6));
t547 = t633 * t967 + t637 * t921;
t930 = t547 * t636;
t459 = -t822 + t930;
t823 = t636 * t920;
t698 = t547 * t632 + t823;
t784 = t631 * t459 + t635 * t698;
t1070 = t784 / 0.2e1;
t546 = t633 * t921 - t637 * t967;
t1103 = t546 * t1001 + t1070 * t637;
t898 = t637 * t638;
t908 = t634 * t632;
t515 = (t636 * t898 + t908) * t630;
t903 = t635 * t515;
t907 = t634 * t636;
t514 = (-t632 * t898 + t907) * t630;
t916 = t631 * t514;
t881 = t916 / 0.2e1 + t903 / 0.2e1;
t1087 = t881 - t1103;
t1115 = qJD(1) * t1087;
t1114 = qJD(2) * t1087;
t659 = t635 * t459 - t631 * t698;
t1017 = t659 / 0.2e1;
t901 = t635 * t636;
t914 = t631 * t632;
t565 = -t901 + t914;
t355 = t546 * t565;
t912 = t632 * t633;
t540 = -t631 * t912 + t633 * t901;
t542 = t565 * t637;
t984 = -t637 / 0.2e1;
t995 = t547 / 0.2e1;
t996 = t546 / 0.2e1;
t1101 = -t633 * t1017 - t355 * t984 + t540 * t995 - t542 * t996;
t824 = t633 * t920;
t770 = -t824 / 0.2e1;
t60 = t569 * t770 + t1101;
t838 = qJD(4) + qJD(5);
t1113 = qJD(3) * t60 + t1087 * t838;
t1088 = t881 + t1103;
t335 = t903 + t916;
t793 = t920 / 0.2e1;
t63 = t793 * t928 + t1101;
t1112 = t1088 * t838 - t63 * qJD(3) - qJD(2) * (t335 * t637 + t540 * t824);
t1111 = qJD(2) * t1088 - t838 * t784;
t1094 = t637 * t1017 + t540 * t996;
t904 = t635 * t514;
t915 = t631 * t515;
t879 = t915 / 0.2e1 - t904 / 0.2e1;
t83 = t879 + t1094;
t1085 = qJD(1) * t83;
t1110 = qJD(2) * t83;
t99 = t879 - t1094;
t1109 = -qJD(2) * t99 - t838 * t659;
t1107 = t60 * qJD(1);
t1106 = t60 * qJD(2);
t843 = t547 * qJD(3);
t1105 = -qJD(2) * t63 - t569 * t843;
t798 = -t355 / 0.2e1;
t363 = t546 * t636;
t794 = -t363 / 0.2e1;
t876 = t635 * t794 + t914 * t996;
t229 = t798 + t876;
t1098 = t229 * qJD(3) + t1114;
t797 = t355 / 0.2e1;
t685 = t901 / 0.2e1 - t914 / 0.2e1;
t877 = t685 * t546;
t230 = t797 + t877;
t1097 = t230 * qJD(3) - t1114;
t232 = t798 + t877;
t1096 = t232 * qJD(3) - t1111;
t231 = t797 + t876;
t1095 = t231 * qJD(3) + t1111;
t1023 = -pkin(10) - pkin(9);
t586 = t1023 * t636;
t825 = t1023 * t632;
t783 = -t631 * t586 - t635 * t825;
t1069 = t783 * t637;
t1079 = t1069 / 0.2e1;
t972 = t637 * pkin(9);
t976 = t633 * pkin(3);
t587 = -t972 + t976;
t574 = t636 * t587;
t607 = pkin(8) * t912;
t899 = t636 * t637;
t430 = pkin(4) * t633 - pkin(10) * t899 + t574 + t607;
t396 = t631 * t430;
t572 = t632 * t587;
t909 = t633 * t636;
t835 = pkin(8) * t909;
t911 = t632 * t637;
t468 = -pkin(10) * t911 + t572 - t835;
t449 = t635 * t468;
t886 = t396 / 0.2e1 + t449 / 0.2e1;
t981 = pkin(4) * t636;
t619 = -pkin(3) - t981;
t923 = t619 * t928;
t1092 = t1079 + t923 / 0.2e1 - t886;
t1000 = -t928 / 0.2e1;
t937 = t540 * qJ(6);
t979 = t928 * pkin(5);
t759 = -t937 + t979;
t982 = pkin(4) * t632;
t812 = pkin(8) + t982;
t764 = t812 * t633;
t332 = t764 + t759;
t929 = t569 * qJ(6);
t978 = t565 * pkin(5);
t758 = -t929 + t978;
t395 = t619 + t758;
t994 = -t565 / 0.2e1;
t1034 = t1000 * t395 + t332 * t994;
t1091 = t1079 + t886 - t1034;
t1080 = -t1069 / 0.2e1;
t1090 = t1080 + t886 + t1034;
t713 = -t764 / 0.2e1;
t105 = t1080 + t565 * t713 - t923 / 0.2e1 - t886;
t686 = t913 / 0.2e1 + t902 / 0.2e1;
t992 = -t569 / 0.2e1;
t228 = (t992 + t686) * t546;
t1084 = t228 * qJD(3) - t1110;
t932 = t546 * t569;
t796 = t932 / 0.2e1;
t233 = t546 * t686 + t796;
t1083 = t233 * qJD(3) + t1109;
t767 = t1023 * t633 - pkin(2);
t973 = t637 * pkin(3);
t665 = (t767 - t973) * t636;
t980 = pkin(8) * t632;
t813 = -pkin(4) - t980;
t651 = t637 * t813 + t665;
t394 = t635 * t651;
t763 = -pkin(9) * t633 - t973;
t725 = -pkin(2) + t763;
t834 = pkin(8) * t899;
t522 = t632 * t725 + t834;
t463 = -pkin(10) * t912 + t522;
t918 = t631 * t463;
t284 = -t394 + t918;
t244 = pkin(5) * t637 + t284;
t836 = pkin(8) * t911;
t462 = t665 - t836;
t905 = t635 * t462;
t308 = t905 - t918;
t1078 = t244 + t308;
t677 = -t635 * t586 + t631 * t825;
t1054 = t677 * t637;
t443 = t1054 / 0.2e1;
t991 = t569 / 0.2e1;
t997 = t540 / 0.2e1;
t695 = t332 * t991 + t395 * t997;
t1047 = t443 + t695;
t1075 = t1000 * t783;
t906 = t635 * t430;
t917 = t631 * t468;
t884 = t906 / 0.2e1 - t917 / 0.2e1;
t975 = t633 * pkin(5);
t760 = -t975 / 0.2e1 - t884;
t539 = t569 * t637;
t999 = -t539 / 0.2e1;
t1057 = -t677 / 0.2e1;
t1072 = -t783 / 0.2e1;
t1071 = t783 / 0.2e1;
t444 = -t1054 / 0.2e1;
t1025 = t540 ^ 2;
t629 = t637 ^ 2;
t513 = t629 + t1025;
t781 = t838 * t637;
t866 = qJD(3) * t569;
t1067 = -qJD(2) * t513 - t540 * t866 + t781;
t1048 = t838 * t677;
t850 = t228 * qJD(1);
t1066 = -t850 - t1048;
t1064 = t1072 + t1071;
t1060 = t838 * t783;
t334 = -t904 + t915;
t1028 = t547 * t1000 + t546 * t999 + t637 * t796;
t769 = t565 * t793;
t986 = -t633 / 0.2e1;
t653 = t633 * t769 + t784 * t986 - t1028;
t1059 = qJD(3) * t653 + (t334 * t637 + t824 * t928) * qJD(2) - t838 * t99;
t644 = (t769 + t1070) * t633 + t1028;
t1058 = -qJD(3) * t644 + t83 * t838;
t1056 = t677 / 0.2e1;
t712 = t764 / 0.2e1;
t104 = t565 * t712 + t1092;
t848 = t230 * qJD(1);
t865 = qJD(3) * t619;
t1046 = qJD(2) * t104 + t565 * t865 + t848;
t371 = -t565 * t619 + t569 * t982;
t977 = t631 * pkin(4);
t828 = -t977 / 0.2e1;
t829 = -t981 / 0.2e1;
t993 = t565 / 0.2e1;
t998 = -t540 / 0.2e1;
t71 = t982 * t998 + (t569 * t829 + t812 * t993 + t828) * t633 + t1092;
t1045 = qJD(2) * t71 - qJD(3) * t371 + t848;
t450 = pkin(5) * t569 + qJ(6) * t565;
t950 = t395 * t565;
t174 = -t450 * t569 + t950;
t364 = pkin(5) * t540 + qJ(6) * t928;
t689 = t364 * t992 + t450 * t998;
t910 = t633 * qJ(6);
t39 = -t689 + t910 + t1090;
t849 = t229 * qJD(1);
t1044 = qJD(2) * t39 - qJD(3) * t174 + t849;
t398 = t450 + t982;
t160 = -t398 * t569 + t950;
t837 = pkin(4) * t909;
t346 = t364 + t837;
t692 = t346 * t991 + t398 * t997;
t1021 = qJ(6) / 0.2e1;
t609 = qJ(6) + t977;
t989 = t609 / 0.2e1;
t762 = (t989 + t1021) * t633;
t30 = t762 + t692 + t1090;
t1043 = qJD(2) * t30 - qJD(3) * t160 + t849;
t1011 = -t394 / 0.2e1;
t983 = t637 / 0.2e1;
t826 = pkin(4) * t983;
t118 = t1011 + (t826 + t462 / 0.2e1) * t635;
t969 = pkin(4) * qJD(4);
t778 = t118 * qJD(2) - t635 * t969;
t1042 = qJD(1) * t644;
t1037 = t659 * qJD(6);
t1036 = t677 * qJD(6);
t1035 = t1057 * t540 + t1075;
t1032 = qJD(2) * t644 - t228 * t838;
t1031 = qJD(2) * t653 + t233 * t838 + t565 * t843;
t626 = t632 ^ 2;
t628 = t636 ^ 2;
t600 = t628 - t626;
t841 = t633 * qJD(2);
t810 = t636 * t841;
t1029 = qJD(3) * t600 - 0.2e1 * t632 * t810;
t560 = t569 ^ 2;
t1024 = -pkin(5) / 0.2e1;
t1022 = -qJ(6) / 0.2e1;
t431 = t635 * t463;
t243 = t431 + t767 * t913 + (t631 * (-pkin(3) * t636 + t813) - qJ(6)) * t637;
t1020 = t243 / 0.2e1;
t1019 = t244 / 0.2e1;
t882 = t449 + t396;
t261 = t882 + t910;
t1018 = t261 / 0.2e1;
t919 = t631 * t462;
t307 = t431 + t919;
t1014 = t307 / 0.2e1;
t1013 = t308 / 0.2e1;
t1012 = -t332 / 0.2e1;
t1010 = -t395 / 0.2e1;
t990 = -t609 / 0.2e1;
t974 = t635 * pkin(4);
t618 = -pkin(5) - t974;
t988 = t618 / 0.2e1;
t987 = t631 / 0.2e1;
t985 = t635 / 0.2e1;
t785 = -t659 / 0.2e1 + t1017;
t786 = t1070 - t784 / 0.2e1;
t38 = t540 * t785 + t786 * t928;
t971 = t38 * qJD(4);
t46 = t565 * t786 + t569 * t785;
t970 = t46 * qJD(4);
t968 = pkin(4) * qJD(5);
t709 = qJ(6) * t999 - t1024 * t542;
t787 = t284 / 0.2e1 - t244 / 0.2e1;
t647 = t631 * t651;
t285 = t647 + t431;
t788 = t1020 - t285 / 0.2e1;
t13 = -t565 * t787 + t569 * t788 + t709;
t966 = t13 * qJD(2);
t965 = t284 * t637;
t964 = t285 * t637;
t29 = (-t243 + t285) * t540 + (-t244 + t284) * t928;
t963 = t29 * qJD(2);
t957 = t307 * t637;
t956 = t308 * t637;
t955 = t332 * t540;
t949 = t395 * t569;
t946 = t783 * t633;
t942 = t677 * t633;
t51 = t334 * t784 + t335 * t659 + t546 * t824;
t939 = t51 * qJD(1);
t52 = t355 * t659 + t546 * t547 - t784 * t932;
t938 = t52 * qJD(1);
t936 = t546 * t450;
t361 = t546 * t632;
t927 = t609 * t540;
t926 = t609 * t569;
t925 = t618 * t928;
t924 = t618 * t565;
t922 = t619 * t540;
t627 = t633 ^ 2;
t900 = t636 * t627;
t641 = -t647 / 0.2e1 - t431 / 0.2e1;
t640 = t631 * t826 + t641;
t761 = t431 / 0.2e1 + t919 / 0.2e1;
t117 = t640 - t761;
t897 = -t307 * qJD(4) + t117 * qJD(5);
t896 = t117 * qJD(4) - t285 * qJD(5);
t158 = -t569 * t540 + t565 * t928;
t895 = t838 * t158;
t302 = t540 * t994 - t928 * t991;
t887 = t838 * t302;
t795 = -t361 / 0.2e1;
t875 = t631 * t794 + t635 * t795;
t575 = pkin(4) * t911 + t637 * pkin(8);
t601 = t629 - t627;
t874 = qJ(6) * qJD(5);
t639 = -t641 + (qJ(6) + t609) * t984;
t101 = -t639 + t761;
t873 = qJD(2) * t101;
t116 = t640 + t761;
t872 = qJD(2) * t116;
t357 = -t540 * t633 - t542 * t637;
t871 = qJD(2) * t357;
t870 = qJD(2) * t540;
t568 = t601 * t632;
t869 = qJD(2) * t568;
t571 = t629 * t636 - t900;
t868 = qJD(2) * t571;
t867 = qJD(2) * t630;
t864 = qJD(3) * t632;
t863 = qJD(3) * t633;
t862 = qJD(3) * t636;
t861 = qJD(3) * t637;
t860 = qJD(3) * t638;
t859 = qJD(4) * t118;
t858 = qJD(4) * t632;
t857 = qJD(4) * t636;
t856 = qJD(4) * t637;
t855 = qJD(5) * t118;
t854 = qJD(5) * t619;
t853 = qJD(6) * t569;
t852 = qJD(6) * t637;
t238 = -t539 * t540 + t542 * t928;
t847 = t238 * qJD(2);
t521 = -t636 * t725 + t836;
t316 = t521 * t633 + (-t607 + t574) * t637;
t846 = t316 * qJD(2);
t356 = -t539 * t637 + t633 * t928;
t845 = t356 * qJD(2);
t374 = (t992 - t686) * t637;
t368 = t374 * qJD(2);
t375 = (t994 + t685) * t637;
t369 = t375 * qJD(2);
t844 = t928 * qJD(6);
t550 = t565 * qJD(6);
t842 = t601 * qJD(2);
t840 = t637 * qJD(2);
t622 = t635 * t968;
t839 = t622 + qJD(6);
t833 = pkin(2) * t841;
t832 = pkin(2) * t840;
t831 = t631 * t968;
t830 = t982 / 0.2e1;
t827 = t974 / 0.2e1;
t811 = t928 * t870;
t808 = t565 * t866;
t807 = t632 * t862;
t806 = t633 * t862;
t805 = t632 * t856;
t804 = t636 * t856;
t803 = t638 * t867;
t802 = t632 * t857;
t801 = t633 * t861;
t800 = t633 * t840;
t791 = t909 / 0.2e1;
t789 = -t898 / 0.2e1;
t782 = t838 * t569;
t780 = pkin(4) * t791;
t779 = -qJD(4) + t840;
t777 = t243 * t992 + t244 * t994 + t1035;
t773 = t569 * t712 + t922 / 0.2e1 + t884;
t772 = t632 * t806;
t768 = t632 * t793;
t766 = t884 + t975;
t765 = t840 - qJD(4) / 0.2e1;
t738 = t906 - t917;
t266 = -t738 - t975;
t333 = pkin(5) * t539 + qJ(6) * t542 + t575;
t642 = t1018 * t659 - t1019 * t932 + t1070 * t266 + t243 * t797 + t332 * t995 + t333 * t996;
t658 = t1057 * t335 + t1072 * t334 + t395 * t770;
t2 = t642 + t658;
t25 = t243 * t261 + t244 * t266 + t332 * t333;
t757 = t2 * qJD(1) + t25 * qJD(2);
t26 = -t243 * t284 + t244 * t285 + t332 * t364;
t652 = t364 * t996 - t659 * t787 - t784 * t788;
t705 = t334 * pkin(5) / 0.2e1 + t335 * t1022;
t6 = t652 + t705;
t756 = t6 * qJD(1) + t26 * qJD(2);
t27 = t243 * t308 + t244 * t307 + t332 * t346;
t646 = t1013 * t659 + t1017 * t244 + t346 * t996 + (t1014 - t1020) * t784;
t693 = t334 * t988 + t335 * t989;
t3 = -t646 + t693;
t755 = -t3 * qJD(1) + t27 * qJD(2);
t590 = -qJD(5) + t779;
t753 = -t922 / 0.2e1 + t884;
t654 = t1000 * t355 - t1070 * t542 + t659 * t999 - t932 * t997;
t694 = t334 * t991 + t335 * t994;
t22 = t654 - t694;
t28 = -t243 * t539 - t244 * t542 - t261 * t928 + t266 * t540;
t749 = t22 * qJD(1) + t28 * qJD(2);
t34 = (-t243 + t307) * t540 - t1078 * t928;
t748 = t38 * qJD(1) + t34 * qJD(2);
t47 = -t243 * t633 + t261 * t637 - t332 * t542 + t333 * t540;
t747 = -t47 * qJD(2) - t1107;
t48 = -t244 * t633 + t266 * t637 + t332 * t539 + t333 * t928;
t746 = t48 * qJD(2) - t1042;
t67 = t284 * t633 - t539 * t764 - t575 * t928 + t637 * t738;
t745 = -t67 * qJD(2) - t1042;
t68 = t882 * t637 + t575 * t540 + (-t542 * t812 - t285) * t633;
t744 = t68 * qJD(2) + t1107;
t65 = t346 * t928 + t955 + t957;
t743 = -qJD(2) * t65 - t1085;
t262 = t332 * t928;
t66 = t346 * t540 - t262 + t956;
t742 = qJD(2) * t66 + t1115;
t69 = t364 * t540 - t262 - t965;
t741 = qJD(2) * t69 + t1115;
t70 = t364 * t928 + t955 + t964;
t740 = -qJD(2) * t70 - t1085;
t739 = qJD(2) * t38 + qJD(3) * t46;
t107 = t243 * t637 + t955;
t736 = -qJD(2) * t107 - t1085;
t447 = t540 * t764;
t132 = -t837 * t928 - t447 - t957;
t735 = qJD(2) * t132 - t1085;
t133 = t956 + (t540 * t981 - t812 * t928) * t633;
t734 = -qJD(2) * t133 - t1115;
t146 = -t764 * t928 - t965;
t733 = -qJD(2) * t146 - t1115;
t147 = -t447 - t964;
t732 = qJD(2) * t147 - t1085;
t159 = t398 * t565 + t949;
t655 = t398 * t1001 + t346 * t993 + t1047;
t32 = (t988 + t1024) * t633 + t655 - t884;
t731 = -qJD(2) * t32 - qJD(3) * t159;
t173 = t450 * t565 + t949;
t672 = t444 - t695;
t690 = t1001 * t450 + t364 * t993;
t41 = t672 - t690 + t766;
t729 = qJD(2) * t41 - qJD(3) * t173;
t370 = t565 * t982 + t569 * t619;
t678 = -t928 * t830 + t444;
t72 = (t565 * t829 + t812 * t992 + t827) * t633 + t678 + t753;
t727 = qJD(2) * t72 - qJD(3) * t370;
t724 = t779 * t633;
t136 = (t768 + t459 / 0.2e1 - t930 / 0.2e1) * t633;
t317 = t572 * t637 + (-t522 + t834) * t633;
t723 = -t136 * qJD(1) + t317 * qJD(2);
t662 = (t632 * t789 + t907 / 0.2e1) * t630;
t673 = t459 * t984 + t633 * t794;
t198 = t662 + t673;
t423 = -pkin(8) * t900 - t522 * t637;
t722 = qJD(1) * t198 + qJD(2) * t423;
t199 = (-t921 / 0.2e1 + t547 * t983 + t633 * t996) * t632;
t422 = -t521 * t637 - t627 * t980;
t721 = qJD(1) * t199 - qJD(2) * t422;
t702 = t990 + t977 / 0.2e1 + t1021;
t710 = -t974 / 0.2e1 - t618 / 0.2e1 + t1024;
t125 = t540 * t702 + t710 * t928;
t141 = t565 * t710 + t569 * t702;
t720 = qJD(2) * t125 + qJD(3) * t141;
t319 = t928 ^ 2 - t1025;
t81 = qJD(2) * t319 + qJD(3) * t158;
t365 = t565 ^ 2 - t560;
t114 = qJD(2) * t158 + qJD(3) * t365;
t119 = t635 * t826 + t918 + t1011 - t905 / 0.2e1;
t719 = qJD(4) * t119 + qJD(5) * t284;
t718 = -qJD(4) * t308 + qJD(5) * t119;
t711 = t972 / 0.2e1 - t976 / 0.2e1;
t708 = qJ(6) * t1018 + t1024 * t266;
t707 = pkin(5) * t1017 + qJ(6) * t1070;
t706 = pkin(5) * t1014 + t1022 * t308;
t704 = qJ(6) * t797 - t1024 * t932;
t703 = pkin(5) * t1056 + qJ(6) * t1071;
t675 = t711 * t632;
t457 = t572 / 0.2e1 - t675;
t700 = pkin(3) * t862 - qJD(2) * t457;
t674 = t711 * t636;
t458 = -t574 / 0.2e1 + t674;
t699 = pkin(3) * t864 - qJD(2) * t458;
t697 = t261 * t989 + t266 * t988;
t696 = t1010 * t364 + t1012 * t450;
t691 = t355 * t989 - t932 * t988;
t687 = t539 * t990 - t542 * t988;
t684 = t636 * t724;
t103 = t569 * t713 + t444 + t753;
t683 = qJD(2) * t103 - t569 * t865;
t280 = t986 - t302;
t681 = qJD(2) * t280 + t808;
t142 = qJD(3) * t302 - t811;
t162 = -qJD(2) * t302 + t808;
t551 = (t626 / 0.2e1 - t628 / 0.2e1) * t633;
t679 = -qJD(2) * t551 + t807;
t671 = qJD(2) * t632 * t900 + qJD(3) * t551;
t567 = t600 * t627;
t670 = qJD(2) * t567 + 0.2e1 * t772;
t645 = t1064 * t659 + t398 * t996;
t15 = -t645 + t691;
t643 = t1010 * t346 + t1012 * t398 + t1057 * t1078 + t1071 * t243 + t1072 * t307;
t7 = t643 + t697;
t77 = t395 * t398;
t668 = -t15 * qJD(1) - t7 * qJD(2) + t77 * qJD(3);
t17 = -t936 / 0.2e1 + t704;
t78 = t395 * t450;
t9 = t677 * t787 + t783 * t788 + t696 + t708;
t667 = -t17 * qJD(1) - t9 * qJD(2) + t78 * qJD(3);
t11 = (t1020 - t307 / 0.2e1) * t569 + (t1013 + t1019) * t565 + (t1056 + t1057) * t540 + t1064 * t928 + t687;
t666 = t46 * qJD(1) - t11 * qJD(2);
t227 = t796 + t875;
t55 = t760 + t1047;
t661 = qJD(1) * t227 + qJD(2) * t55 + t395 * t866;
t650 = (t243 * t985 + t244 * t987) * pkin(4) + t284 * t990 + t285 * t988;
t20 = t650 + t706;
t649 = (t659 * t985 + t784 * t987) * pkin(4) + t784 * t990 + t659 * t988;
t24 = t649 + t707;
t520 = (t609 * t635 + t618 * t631) * pkin(4);
t648 = (t677 * t985 + t783 * t987) * pkin(4) + t783 * t990 + t677 * t988;
t76 = t648 + t703;
t660 = t24 * qJD(1) + t20 * qJD(2) + t76 * qJD(3) + t520 * qJD(4);
t625 = qJ(6) * qJD(6);
t613 = t863 / 0.2e1;
t612 = -t841 / 0.2e1;
t611 = t841 / 0.2e1;
t599 = t609 * qJD(6);
t559 = t590 * qJ(6);
t558 = t765 * t633;
t545 = t551 * qJD(4);
t534 = (-qJD(5) / 0.2e1 + t765) * t633;
t414 = t540 * t853;
t389 = t607 + t574 / 0.2e1 + t674;
t388 = t835 - t572 / 0.2e1 - t675;
t377 = t569 * t983 - t637 * t686;
t376 = t565 * t983 + t637 * t685;
t342 = qJD(3) * t560 + t569 * t870;
t312 = qJD(3) * t374 - t540 * t840;
t311 = qJD(3) * t375 - t840 * t928;
t281 = t986 + t302;
t278 = -t782 - t368;
t277 = -t565 * t838 - t369;
t234 = -t932 / 0.2e1 + t875;
t201 = t662 - t673;
t200 = t698 * t984 + t633 * t795 + (t636 * t789 - t908 / 0.2e1) * t630;
t145 = qJD(3) * t377 + t540 * t590;
t144 = qJD(3) * t376 + t590 * t928;
t140 = -t926 / 0.2e1 - t924 / 0.2e1 - t929 / 0.2e1 + t978 / 0.2e1 + (t569 * t987 + t635 * t994) * pkin(4);
t139 = t459 * t986 + t547 * t791 + t633 * t768;
t138 = t636 * t770 + t698 * t986 + t912 * t995;
t124 = -t927 / 0.2e1 - t925 / 0.2e1 - t937 / 0.2e1 + t979 / 0.2e1 + (t540 * t987 - t928 * t985) * pkin(4);
t113 = t116 * qJD(4);
t108 = t116 * qJD(5);
t106 = t443 + t773;
t102 = t639 + t761;
t75 = t648 - t703;
t74 = t540 * t830 + t569 * t780 + t633 * t828 + t105;
t73 = t565 * t780 + t633 * t827 - t678 + t773;
t56 = t672 + t760;
t54 = t631 * t969 - t872;
t53 = -t838 * t977 + t872;
t42 = t690 + t766 + t1047;
t40 = t689 + t910 + t1091;
t33 = t618 * t986 + t655 - t760;
t31 = t762 - t692 + t1091;
t23 = t649 - t707;
t21 = t654 + t694;
t19 = t650 - t706;
t18 = t936 / 0.2e1 + t704;
t16 = t645 + t691;
t14 = t284 * t993 + t285 * t991 - t1035 + t709 + t777;
t12 = t307 * t991 + t308 * t994 + t677 * t997 - t1075 + t687 + t777;
t10 = t1056 * t244 + t1057 * t284 + t1071 * t285 + t1072 * t243 - t696 + t708;
t8 = -t643 + t697;
t5 = t652 - t705;
t4 = t646 + t693;
t1 = t642 - t658;
t35 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t51 + qJD(3) * t52; 0, 0, -t634 * t867, -t803, 0, 0, 0, 0, 0 (-t633 * t860 - t634 * t840) * t630 (t634 * t841 - t637 * t860) * t630, 0, 0, 0, 0, 0 (-t514 * t637 + t627 * t822) * qJD(2) + t138 * qJD(3) + t201 * qJD(4) (t515 * t637 + t627 * t823) * qJD(2) + t139 * qJD(3) + t200 * qJD(4), 0, 0, 0, 0, 0, t1059, -t1112, t1059 (t334 * t540 - t335 * t928) * qJD(2) + t21 * qJD(3) + t971, t1112, t939 + (t335 * t243 + t334 * t244 + t332 * t824) * qJD(2) + t1 * qJD(3) + t4 * qJD(4) + t5 * qJD(5) + t99 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t633 * t803 - t843, t546 * qJD(3) - t637 * t803, 0, 0, 0, 0, 0, qJD(2) * t138 + qJD(4) * t361 - t636 * t843, qJD(2) * t139 + qJD(4) * t363 + t632 * t843, 0, 0, 0, 0, 0, t1031, t232 * t838 - t1105, t1031, t21 * qJD(2) + (-t355 * t565 - t569 * t932) * qJD(3) + t970, t231 * t838 + t1105, t938 + t1 * qJD(2) + (t355 * t677 + t395 * t547 - t783 * t932) * qJD(3) + t16 * qJD(4) + t18 * qJD(5) + t234 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t201 + qJD(3) * t361 - qJD(4) * t459, t200 * qJD(2) + t363 * qJD(3) + qJD(4) * t698, 0, 0, 0, 0, 0, t1083, t1096, t1083, t739, t1095, t4 * qJD(2) + t16 * qJD(3) + (-t609 * t784 + t618 * t659) * qJD(4) + t23 * qJD(5) + t1037; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1083, t1096, t1083, 0, t1095, t5 * qJD(2) + t18 * qJD(3) + t23 * qJD(4) + (-pkin(5) * t659 - qJ(6) * t784) * qJD(5) + t1037; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t234 - t1109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t198, -qJD(3) * t136 - qJD(4) * t199, 0, 0, 0, 0, 0, t1058, t1113, t1058, qJD(3) * t22 + t971, -t1113, qJD(3) * t2 - qJD(4) * t3 + qJD(5) * t6 - qJD(6) * t83 - t939; 0, 0, 0, 0, t801, t601 * qJD(3), 0, 0, 0, -pkin(2) * t863, -pkin(2) * t861, -t627 * t802 + t628 * t801, -qJD(4) * t567 - 0.2e1 * t637 * t772, -qJD(3) * t571 + t633 * t805, qJD(3) * t568 + t633 * t804, -t801, -qJD(3) * t316 - qJD(4) * t423, qJD(3) * t317 + qJD(4) * t422 (-qJD(3) * t542 - t838 * t928) * t540, qJD(3) * t238 + t319 * t838, -qJD(3) * t357 + t781 * t928, -qJD(3) * t356 + t540 * t781, -t801, -qJD(3) * t67 - qJD(4) * t132 - qJD(5) * t147, qJD(3) * t68 + qJD(4) * t133 + qJD(5) * t146, qJD(3) * t48 + qJD(4) * t65 + qJD(5) * t70 - t540 * t844, qJD(3) * t28 + qJD(4) * t34 + qJD(5) * t29 + t637 * t844, -qJD(3) * t47 - qJD(4) * t66 - qJD(5) * t69 + qJD(6) * t513, qJD(3) * t25 + qJD(4) * t27 + qJD(5) * t26 - qJD(6) * t107; 0, 0, 0, 0, t800, t842, t861, -t863, 0, -pkin(8) * t861 - t833, pkin(8) * t863 - t832, -t545 + (t628 * t841 + t807) * t637, t1029 * t637 - 0.2e1 * t633 * t802, t632 * t863 - t868, t806 + t869, -t558, -t846 + (t632 * t763 - t834) * qJD(3) + t389 * qJD(4) (t636 * t763 + t836) * qJD(3) + t388 * qJD(4) + t723 -(t866 + t870) * t542 + t887, t847 + (-t539 * t569 + t542 * t565) * qJD(3) + t895, t376 * t838 + t569 * t863 - t871, t377 * t838 - t565 * t863 - t845, -t534 (t539 * t619 + t565 * t575 - t946) * qJD(3) + t73 * qJD(4) + t106 * qJD(5) + t745 (-t542 * t619 + t569 * t575 - t942) * qJD(3) + t74 * qJD(4) + t105 * qJD(5) + t744 (t333 * t565 + t395 * t539 - t946) * qJD(3) + t33 * qJD(4) + t42 * qJD(5) + t281 * qJD(6) + t746 (-t261 * t565 + t266 * t569 - t539 * t677 - t542 * t783) * qJD(3) + t12 * qJD(4) + t14 * qJD(5) + t376 * qJD(6) + t749 (-t333 * t569 + t395 * t542 + t942) * qJD(3) + t31 * qJD(4) + t40 * qJD(5) + t414 + t747 (t261 * t677 + t266 * t783 + t333 * t395) * qJD(3) + t8 * qJD(4) + t10 * qJD(5) + t56 * qJD(6) + t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t671, -t670, t632 * t724, t684, t613, qJD(3) * t389 - qJD(4) * t522 - t722, qJD(3) * t388 + qJD(4) * t521 - t721, t142, t81, t144, t145, t613, qJD(3) * t73 - t735 + t897, qJD(3) * t74 + t718 - t734, qJD(3) * t33 - t743 + t897, t12 * qJD(3) + (-t925 - t927) * qJD(4) + t124 * qJD(5) - t844 + t748, qJD(3) * t31 - t718 - t742 - t852, t8 * qJD(3) + (t307 * t618 + t308 * t609) * qJD(4) + t19 * qJD(5) + t102 * qJD(6) + t755; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t142, t81, t144, t145, t613, qJD(3) * t106 - t732 + t896, qJD(3) * t105 + t719 - t733, qJD(3) * t42 - t740 + t896, t14 * qJD(3) + t124 * qJD(4) + qJD(5) * t759 - t844 + t963, qJD(3) * t40 - t719 - t741 - t852, t10 * qJD(3) + t19 * qJD(4) + (-pkin(5) * t285 - qJ(6) * t284) * qJD(5) + t243 * qJD(6) + t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t281 - t811, t144, -t1067, qJD(3) * t56 + qJD(4) * t102 + qJD(5) * t243 + t736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t136, 0, 0, 0, 0, 0, t1032, -t230 * t838 - t1106, t1032, -qJD(2) * t22 + t970, -t229 * t838 + t1106, -qJD(2) * t2 - qJD(4) * t15 - qJD(5) * t17 - qJD(6) * t227 - t938; 0, 0, 0, 0, -t800, -t842, 0, 0, 0, t833, t832, -t628 * t800 - t545, 0.2e1 * t632 * t684, -t804 + t868, t805 - t869, t558, qJD(4) * t458 + t846, qJD(4) * t457 - t723, t542 * t870 + t887, -t847 + t895, -t375 * t838 + t871, -t374 * t838 + t845, t534, -qJD(4) * t72 - qJD(5) * t103 - t745, -qJD(4) * t71 - qJD(5) * t104 - t744, qJD(4) * t32 - qJD(5) * t41 - qJD(6) * t280 - t746, -qJD(4) * t11 - qJD(5) * t13 - qJD(6) * t375 - t749, -qJD(4) * t30 - qJD(5) * t39 + t414 - t747, -qJD(4) * t7 - qJD(5) * t9 - qJD(6) * t55 - t757; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t802, t600 * qJD(4), 0, 0, 0, -pkin(3) * t858, -pkin(3) * t857, -t565 * t782, t838 * t365, 0, 0, 0, qJD(4) * t370 + t569 * t854, qJD(4) * t371 - t565 * t854, qJD(4) * t159 + qJD(5) * t173 - t550 * t569, 0, qJD(4) * t160 + qJD(5) * t174 + qJD(6) * t560, qJD(4) * t77 + qJD(5) * t78 - t395 * t853; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t679, t1029, -t779 * t636, t779 * t632, t612, -pkin(9) * t857 - t699, pkin(9) * t858 - t700, -t162, t114, t277, t278, t612, -t727 + t1066, t1060 - t1045, -t731 + t1066 (-t924 - t926) * qJD(4) + t140 * qJD(5) - t550 + t666, -t1060 - t1043 (-t609 * t783 + t618 * t677) * qJD(4) + t75 * qJD(5) + t1036 + t668; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t162, t114, t277, t278, t612, -t683 + t1066, t1060 - t1046, -t729 + t1066, t140 * qJD(4) + qJD(5) * t758 - t550 - t966, -t1060 - t1044, t75 * qJD(4) + (-pkin(5) * t677 - qJ(6) * t783) * qJD(5) + t1036 + t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t681, t277, t342, -t661 + t1048; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t198, qJD(2) * t199, 0, 0, 0, 0, 0, t1084, t1097, t1084, -t739, t1098, qJD(2) * t3 + qJD(3) * t15 + qJD(5) * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t671, t670 (-t632 * t841 + t862) * t637 (-t810 - t864) * t637, t613, -qJD(3) * t458 + t722, -qJD(3) * t457 + t721, -t142, -t81, t311, t312, t613, qJD(3) * t72 + t108 + t735, qJD(3) * t71 + t734 + t855, -qJD(3) * t32 + t108 + t743, qJD(3) * t11 + qJD(5) * t125 - t748, qJD(3) * t30 + t742 - t852 - t855, qJD(3) * t7 + qJD(5) * t20 - qJD(6) * t101 - t755; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t679, -t1029, t636 * t840, -t632 * t840, t611, t699, t700, t162, -t114, t369, t368, t611, t727 + t850, t1045, t731 + t850, qJD(5) * t141 - t666, t1043, qJD(5) * t76 - t668; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t831, -t622, -t831, 0, t839, qJD(5) * t520 + t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, -t622 + t778, t53, t720, -t778 + t839, t599 + (-pkin(5) * t631 + qJ(6) * t635) * t968 + t660; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t590, t609 * t838 - t873; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1084, t1097, t1084, 0, t1098, -qJD(2) * t6 + qJD(3) * t17 - qJD(4) * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, -t81, t311, t312, t613, qJD(3) * t103 - t113 + t732, qJD(3) * t104 + t733 - t859, qJD(3) * t41 - t113 + t740, qJD(3) * t13 - qJD(4) * t125 - t963, qJD(3) * t39 + t741 - t852 + t859, -qJ(6) * t852 + qJD(3) * t9 - qJD(4) * t20 - t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t114, t369, t368, t611, t683 + t850, t1046, t729 + t850, -qJD(4) * t141 + t966, t1044, -qJD(4) * t76 - t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, -t778, t54, -t720, qJD(6) + t778, t625 - t660; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t625; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t590, -t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t227 + t1110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t280 + t811, t311, t1067, qJD(3) * t55 + qJD(4) * t101 + t637 * t874 - t736; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t681, t369, -t342, t661; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t590, -qJD(4) * t609 + t873 - t874; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t590, t559; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t35;
