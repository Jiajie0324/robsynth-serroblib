% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:19
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRRP4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP4_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:17:47
% EndTime: 2019-03-09 00:18:00
% DurationCPUTime: 4.80s
% Computational Cost: add. (4217->378), mult. (11096->618), div. (0->0), fcn. (10220->10), ass. (0->187)
t113 = sin(qJ(4));
t115 = cos(qJ(4));
t114 = sin(qJ(3));
t116 = cos(qJ(3));
t111 = sin(pkin(6));
t237 = sin(qJ(2));
t197 = t111 * t237;
t229 = cos(pkin(6));
t141 = t229 * t114 + t116 * t197;
t185 = qJD(2) * t237;
t172 = t111 * t185;
t248 = qJD(4) * t141 - t172;
t239 = cos(qJ(2));
t198 = t111 * t239;
t173 = qJD(2) * t198;
t69 = t114 * t197 - t229 * t116;
t242 = t69 * qJD(3) - t116 * t173;
t249 = -qJD(4) * t198 - t242;
t120 = -t248 * t113 + t249 * t115;
t133 = t113 * t141 + t115 * t198;
t252 = qJD(4) * t133 + t120;
t235 = t113 * pkin(8);
t199 = -pkin(4) - t235;
t223 = t115 * t116;
t233 = t115 * pkin(3);
t236 = pkin(3) * t116;
t240 = -pkin(10) - pkin(9);
t95 = pkin(8) * t223;
t122 = (-t95 + (-t240 * t114 + pkin(2) + t236) * t113) * qJD(4) + (t240 * t223 + (-t199 + t233) * t114) * qJD(3);
t112 = sin(qJ(5));
t238 = cos(qJ(5));
t224 = t114 * t115;
t171 = -pkin(9) * t114 - t236;
t161 = -pkin(2) + t171;
t77 = t115 * t161;
t54 = -pkin(10) * t224 + t116 * t199 + t77;
t226 = t113 * t114;
t66 = t113 * t161 + t95;
t60 = -pkin(10) * t226 + t66;
t232 = t112 * t54 + t238 * t60;
t251 = -t232 * qJD(5) + t238 * t122;
t217 = qJD(4) * t115;
t191 = t114 * t217;
t219 = qJD(3) * t116;
t194 = t113 * t219;
t245 = t191 + t194;
t138 = t141 * qJD(3);
t250 = -t114 * t138 - t116 * t242;
t216 = qJD(4) * t116;
t192 = t113 * t216;
t170 = pkin(3) * t114 - pkin(9) * t116;
t151 = t170 * t113;
t231 = qJD(3) * t151 + qJD(4) * t77;
t124 = -t112 * (-pkin(8) * t192 - pkin(10) * t191 + t231) + t251;
t182 = t238 * qJD(5);
t247 = t238 * qJD(4) + t182;
t187 = t115 * t219;
t218 = qJD(4) * t113;
t193 = t114 * t218;
t246 = t187 - t193;
t58 = t114 * t173 + t138;
t244 = t58 * t114 + t69 * t219;
t107 = t113 ^ 2;
t109 = t115 ^ 2;
t222 = t107 - t109;
t181 = qJD(4) * t222;
t243 = qJD(4) + qJD(5);
t220 = qJD(3) * t115;
t147 = t114 * t220 + t192;
t45 = pkin(8) * t147 - t231;
t121 = t249 * t113 + t248 * t115;
t59 = -t113 * t198 + t115 * t141;
t241 = t121 * t113 + t252 * t115 - t59 * t218;
t117 = 2 * qJD(6);
t234 = t114 * pkin(5);
t47 = t69 * t58;
t81 = pkin(4) * t226 + t114 * pkin(8);
t228 = t112 * t113;
t227 = t112 * t115;
t225 = t113 * t116;
t108 = t114 ^ 2;
t221 = -t116 ^ 2 + t108;
t105 = qJD(3) * t114;
t215 = qJD(5) * t112;
t214 = qJD(6) * t116;
t175 = t238 * t219;
t203 = t112 * t226;
t38 = t113 * t175 - t112 * t193 - qJD(5) * t203 + (t112 * t219 + t247 * t114) * t115;
t79 = t238 * t113 + t227;
t67 = t79 * t114;
t213 = 0.2e1 * t67 * t38;
t57 = t243 * t79;
t195 = t238 * t115;
t78 = -t195 + t228;
t212 = 0.2e1 * t78 * t57;
t211 = -0.2e1 * pkin(2) * qJD(3);
t210 = -0.2e1 * pkin(3) * qJD(4);
t209 = pkin(8) * t225;
t208 = pkin(8) * t224;
t207 = pkin(10) * t225;
t103 = pkin(8) * t219;
t64 = pkin(4) * t245 + t103;
t206 = t238 * pkin(4);
t205 = pkin(4) * t218;
t204 = pkin(4) * t215;
t200 = t69 * t218;
t102 = -pkin(4) * t115 - pkin(3);
t196 = t240 * qJD(4);
t190 = t115 * t216;
t189 = t113 * t217;
t188 = t114 * t219;
t178 = t240 * t238;
t163 = qJD(4) * t178;
t164 = t113 * t178;
t85 = t240 * t115;
t39 = -qJD(5) * t164 - t113 * t163 - t196 * t227 - t215 * t85;
t40 = -t85 * t182 - t115 * t163 + (qJD(5) * t240 + t196) * t228;
t61 = -t112 * t85 - t164;
t62 = t240 * t228 - t238 * t85;
t186 = -t62 * t39 + t40 * t61;
t184 = qJD(3) * t239;
t180 = t221 * qJD(3);
t179 = 0.2e1 * t188;
t177 = t114 * t187;
t176 = t108 * t189;
t37 = t112 * t194 + t114 * t57 - t115 * t175;
t68 = t114 * t195 - t203;
t169 = t37 * t67 - t38 * t68;
t168 = t38 * t78 + t57 * t67;
t56 = -t247 * t115 + t243 * t228;
t167 = t56 * t78 - t57 * t79;
t166 = t56 * t69 - t58 * t79;
t65 = t77 - t209;
t165 = -t113 * t66 - t115 * t65;
t128 = t238 * t133;
t35 = t112 * t59 + t128;
t131 = t112 * t133;
t36 = t238 * t59 - t131;
t5 = qJD(5) * t128 + t112 * t121 - t238 * t120 + t59 * t215;
t6 = -qJD(5) * t131 + t112 * t120 + t238 * t121 + t59 * t182;
t160 = 0.2e1 * t35 * t6 - 0.2e1 * t36 * t5 + 0.2e1 * t47;
t32 = -t112 * t60 + t238 * t54;
t158 = t105 * t67 - t116 * t38;
t157 = t105 * t62 + t116 * t39;
t156 = -t105 * t61 + t116 * t40;
t155 = t105 * t78 - t116 * t57;
t154 = -t35 * t37 - t36 * t38 + t5 * t67 + t6 * t68;
t153 = t35 * t40 - t36 * t39 - t5 * t62 + t6 * t61;
t152 = -t35 * t56 - t36 * t57 + t5 * t78 + t6 * t79;
t125 = -pkin(10) * t245 - t45;
t9 = -t112 * t122 - t238 * t125 - t54 * t182 + t215 * t60;
t150 = -t37 * t61 - t62 * t38 + t39 * t67 + t40 * t68;
t99 = qJ(6) * t105;
t149 = -t9 + t99;
t148 = t244 * pkin(8);
t145 = -t105 * t35 + t116 * t6 + t69 * t38 + t58 * t67;
t143 = t112 * (-t207 - t208);
t142 = 0.2e1 * t39 * t78 + 0.2e1 * t40 * t79 - 0.2e1 * t56 * t61 - 0.2e1 * t62 * t57;
t140 = t37 * t78 - t38 * t79 + t56 * t67 - t57 * t68;
t137 = t105 * t36 + t116 * t5 + t37 * t69 - t58 * t68;
t46 = -t66 * qJD(4) + (pkin(8) * t226 + t115 * t170) * qJD(3);
t135 = qJD(4) * t165 - t113 * t46 - t115 * t45;
t130 = qJD(3) * t133;
t123 = t116 * t204 + t124;
t104 = pkin(4) * t182;
t101 = -t206 - pkin(5);
t98 = pkin(4) * t112 + qJ(6);
t96 = -0.2e1 * t204;
t91 = t104 + qJD(6);
t90 = -0.2e1 * t188;
t63 = -t113 * t187 + t114 * t181;
t51 = pkin(5) * t78 - qJ(6) * t79 + t102;
t48 = -0.2e1 * t79 * t56;
t43 = pkin(5) * t67 - qJ(6) * t68 + t81;
t42 = t105 * t79 + t116 * t56;
t31 = t116 * pkin(5) - t32;
t30 = -qJ(6) * t116 + t232;
t21 = -0.2e1 * t68 * t37;
t20 = pkin(5) * t57 + qJ(6) * t56 - qJD(6) * t79 + t205;
t17 = 0.2e1 * t105 * t68 + 0.2e1 * t116 * t37;
t16 = t57 * t69 + t58 * t78;
t14 = -t37 * t79 - t56 * t68;
t11 = pkin(5) * t38 + qJ(6) * t37 - qJD(6) * t68 + t64;
t10 = -t112 * t125 + t251;
t8 = (t143 - t234) * qJD(3) - t124;
t7 = t149 - t214;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t111 ^ 2 * t239 * t185 - 0.2e1 * t141 * t242 + 0.2e1 * t47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t120 * t59 + 0.2e1 * t121 * t133 + 0.2e1 * t47, 0, 0, 0, 0, 0, 0, 0, 0, 0, t160, 0, 0, 0, 0, 0, 0, 0, 0, 0, t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172, -t173, 0, 0, 0, 0, 0, 0, 0, 0 (-t114 * t184 - t116 * t185) * t111 (t114 * t185 - t116 * t184) * t111, t244 + t250, -pkin(2) * t172 + t250 * pkin(8) + t148, 0, 0, 0, 0, 0, 0, -t114 * t130 + t116 * t121 + t58 * t226 + t245 * t69, -t105 * t59 + t116 * t120 + t58 * t224 + t246 * t69, t121 * t224 + t130 * t223 - t252 * t226 - t245 * t59, t120 * t66 - t121 * t65 - t133 * t46 - t59 * t45 + t148, 0, 0, 0, 0, 0, 0, t145, -t137, t154, -t10 * t35 - t232 * t5 - t32 * t6 - t36 * t9 + t58 * t81 + t64 * t69, 0, 0, 0, 0, 0, 0, t145, t154, t137, t11 * t69 - t30 * t5 + t31 * t6 + t35 * t8 + t36 * t7 + t43 * t58; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, -0.2e1 * t180, 0, t90, 0, 0, t114 * t211, t116 * t211, 0, 0, 0.2e1 * t109 * t188 - 0.2e1 * t176, 0.2e1 * t108 * t181 - 0.4e1 * t113 * t177, 0.2e1 * t114 * t192 + 0.2e1 * t220 * t221, 0.2e1 * t107 * t188 + 0.2e1 * t176, -0.2e1 * t113 * t180 + 0.2e1 * t114 * t190, t90, 0.2e1 * t65 * t105 - 0.2e1 * t116 * t46 + 0.2e1 * (t108 * t217 + t113 * t179) * pkin(8), -0.2e1 * t66 * t105 - 0.2e1 * t116 * t45 + 0.2e1 * (-t108 * t218 + 0.2e1 * t177) * pkin(8), 0.2e1 * t165 * t219 + 0.2e1 * (t113 * t45 - t115 * t46 + (t113 * t65 - t115 * t66) * qJD(4)) * t114, 0.2e1 * pkin(8) ^ 2 * t188 - 0.2e1 * t45 * t66 + 0.2e1 * t46 * t65, t21, 0.2e1 * t169, t17, t213, -0.2e1 * t158, t90, -0.2e1 * t10 * t116 + 0.2e1 * t105 * t32 + 0.2e1 * t38 * t81 + 0.2e1 * t64 * t67, -0.2e1 * t105 * t232 - 0.2e1 * t116 * t9 - 0.2e1 * t37 * t81 + 0.2e1 * t64 * t68, -0.2e1 * t10 * t68 - 0.2e1 * t232 * t38 + 0.2e1 * t32 * t37 + 0.2e1 * t67 * t9, 0.2e1 * t10 * t32 - 0.2e1 * t232 * t9 + 0.2e1 * t64 * t81, t21, t17, -0.2e1 * t169, t90, 0.2e1 * t158, t213, -0.2e1 * t105 * t31 + 0.2e1 * t11 * t67 + 0.2e1 * t116 * t8 + 0.2e1 * t38 * t43, -0.2e1 * t30 * t38 - 0.2e1 * t31 * t37 - 0.2e1 * t67 * t7 + 0.2e1 * t68 * t8, 0.2e1 * t105 * t30 - 0.2e1 * t11 * t68 - 0.2e1 * t116 * t7 + 0.2e1 * t37 * t43, 0.2e1 * t11 * t43 + 0.2e1 * t30 * t7 + 0.2e1 * t31 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, t242, 0, 0, 0, 0, 0, 0, 0, 0, -t58 * t115 + t200, t58 * t113 + t217 * t69, t241, -t58 * pkin(3) + t241 * pkin(9), 0, 0, 0, 0, 0, 0, t16, -t166, t152, pkin(4) * t200 + t102 * t58 + t153, 0, 0, 0, 0, 0, 0, t16, t152, t166, t20 * t69 + t51 * t58 + t153; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, 0, -t105, 0, -t103, pkin(8) * t105, 0, 0, -t63, -0.4e1 * t114 * t189 - t222 * t219, t105 * t113 - t190, t63, t147, 0 (pkin(9) * t223 + (-t233 + t235) * t114) * qJD(4) + (t113 * t171 - t95) * qJD(3) (t151 + t208) * qJD(4) + (t115 * t171 + t209) * qJD(3), t135, -pkin(3) * t103 + pkin(9) * t135, t14, t140, t42, t168, -t155, 0, t102 * t38 + t205 * t67 + t57 * t81 + t64 * t78 + t156, -t102 * t37 + t205 * t68 - t56 * t81 + t64 * t79 - t157, -t10 * t79 - t232 * t57 + t32 * t56 + t78 * t9 + t150, -t10 * t61 + t102 * t64 + t205 * t81 - t232 * t39 - t32 * t40 - t62 * t9, t14, t42, -t140, 0, t155, t168, t11 * t78 + t20 * t67 + t38 * t51 + t43 * t57 + t156, -t30 * t57 - t31 * t56 - t7 * t78 + t79 * t8 + t150, -t11 * t79 - t20 * t68 + t37 * t51 + t43 * t56 + t157, t11 * t51 + t20 * t43 - t30 * t39 + t31 * t40 + t61 * t8 + t62 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t189, -0.2e1 * t181, 0, -0.2e1 * t189, 0, 0, t113 * t210, t115 * t210, 0, 0, t48, 0.2e1 * t167, 0, t212, 0, 0, 0.2e1 * t102 * t57 + 0.2e1 * t205 * t78, -0.2e1 * t102 * t56 + 0.2e1 * t205 * t79, t142, 0.2e1 * t102 * t205 + 0.2e1 * t186, t48, 0, -0.2e1 * t167, 0, 0, t212, 0.2e1 * t20 * t78 + 0.2e1 * t51 * t57, t142, -0.2e1 * t20 * t79 + 0.2e1 * t51 * t56, 0.2e1 * t20 * t51 + 0.2e1 * t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121, -t120, 0, 0, 0, 0, 0, 0, 0, 0, -t6, t5, 0 (-t238 * t6 - t112 * t5 + (t112 * t35 + t238 * t36) * qJD(5)) * pkin(4), 0, 0, 0, 0, 0, 0, -t6, 0, -t5, t101 * t6 + t204 * t35 + t36 * t91 - t5 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, 0, -t245, t105, t46, t45, 0, 0, 0, 0, -t37, 0, -t38, t105 (t114 * t206 - t143) * qJD(3) + t123 (-t105 * t112 + t116 * t182) * pkin(4) + t9 (t238 * t37 - t112 * t38 + (t112 * t68 - t238 * t67) * qJD(5)) * pkin(4) (t238 * t10 - t112 * t9 + (-t112 * t32 + t232 * t238) * qJD(5)) * pkin(4), 0, -t37, 0, t105, t38, 0 (t112 * t207 + (pkin(8) * t227 + pkin(5) - t101) * t114) * qJD(3) + t123, -t101 * t37 + t204 * t68 - t38 * t98 - t67 * t91, t98 * t105 + (-qJD(6) - t91) * t116 + t149, t101 * t8 + t204 * t31 + t30 * t91 + t7 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, 0, -t218, 0, -pkin(9) * t217, pkin(9) * t218, 0, 0, 0, 0, -t56, 0, -t57, 0, -t40, t39 (t238 * t56 - t112 * t57 + (t112 * t79 - t238 * t78) * qJD(5)) * pkin(4) (-t238 * t40 - t112 * t39 + (t112 * t61 + t238 * t62) * qJD(5)) * pkin(4), 0, -t56, 0, 0, t57, 0, -t40, -t101 * t56 + t204 * t79 - t57 * t98 - t78 * t91, -t39, t101 * t40 + t204 * t61 - t39 * t98 + t62 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96, -0.2e1 * t104, 0, 0, 0, 0, 0, 0, 0, 0, t96, 0, 0.2e1 * t91, 0.2e1 * t101 * t204 + 0.2e1 * t91 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t6, t5, 0, 0, 0, 0, 0, 0, 0, 0, -t6, 0, -t5, -pkin(5) * t6 - qJ(6) * t5 + qJD(6) * t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t37, 0, -t38, t105, t10, t9, 0, 0, 0, -t37, 0, t105, t38, 0 (-t143 + 0.2e1 * t234) * qJD(3) + t124, pkin(5) * t37 - qJ(6) * t38 - qJD(6) * t67, -t9 + 0.2e1 * t99 - 0.2e1 * t214, -pkin(5) * t8 + qJ(6) * t7 + qJD(6) * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, -t57, 0, -t40, t39, 0, 0, 0, -t56, 0, 0, t57, 0, -t40, pkin(5) * t56 - qJ(6) * t57 - qJD(6) * t78, -t39, -pkin(5) * t40 - qJ(6) * t39 + qJD(6) * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t204, -t104, 0, 0, 0, 0, 0, 0, 0, 0, -t204, 0, t117 + t104, -pkin(5) * t204 + qJ(6) * t91 + qJD(6) * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117, qJ(6) * t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t105, -t37, 0, t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, 0, t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t1;
