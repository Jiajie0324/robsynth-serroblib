% Calculate vector of inverse dynamics joint torques for
% S6PRRRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:19
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRRRP4_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP4_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP4_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP4_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP4_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP4_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRRRP4_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRRRP4_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRRRP4_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:13:09
% EndTime: 2019-03-09 00:17:46
% DurationCPUTime: 261.67s
% Computational Cost: add. (116340->2230), mult. (259610->3020), div. (0->0), fcn. (302558->12), ass. (0->793)
t1381 = Icges(6,4) - Icges(7,5);
t1367 = Icges(6,1) + Icges(7,1);
t1365 = Icges(7,4) + Icges(6,5);
t1364 = Icges(6,2) + Icges(7,3);
t1363 = Icges(7,2) + Icges(6,3);
t1380 = Icges(6,6) - Icges(7,6);
t1169 = qJ(4) + qJ(5);
t1058 = cos(t1169);
t888 = sin(pkin(6));
t891 = sin(qJ(3));
t1174 = t888 * t891;
t1226 = cos(qJ(3));
t1221 = cos(pkin(6));
t892 = sin(qJ(2));
t1055 = t892 * t1221;
t887 = sin(pkin(11));
t889 = cos(pkin(11));
t894 = cos(qJ(2));
t841 = t1055 * t889 + t887 * t894;
t744 = -t889 * t1174 + t841 * t1226;
t885 = sin(t1169);
t1054 = t894 * t1221;
t958 = t1054 * t889 - t887 * t892;
t581 = t1058 * t744 - t885 * t958;
t1387 = t1381 * t581;
t1014 = t887 * t1055;
t843 = t889 * t894 - t1014;
t746 = t1174 * t887 + t1226 * t843;
t962 = -t1054 * t887 - t889 * t892;
t583 = t1058 * t746 - t885 * t962;
t1386 = t1381 * t583;
t580 = t1058 * t958 + t744 * t885;
t1385 = t1381 * t580;
t582 = t1058 * t962 + t746 * t885;
t1384 = t1381 * t582;
t1172 = t888 * t894;
t1092 = t885 * t1172;
t1068 = t888 * t1226;
t845 = t1068 * t892 + t1221 * t891;
t722 = t1058 * t845 - t1092;
t1383 = t1381 * t722;
t1009 = t888 * t1058;
t983 = t894 * t1009;
t721 = t845 * t885 + t983;
t1382 = t1381 * t721;
t886 = qJD(4) + qJD(5);
t1010 = t886 * t1058;
t810 = t958 * qJD(2);
t968 = -t1068 * t889 - t841 * t891;
t595 = qJD(3) * t968 + t1226 * t810;
t811 = t841 * qJD(2);
t294 = t744 * t1010 - t811 * t1058 + (-t886 * t958 + t595) * t885;
t516 = t744 * t886;
t295 = -t958 * t1010 + t595 * t1058 + (t811 - t516) * t885;
t594 = qJD(3) * t744 + t810 * t891;
t1379 = t1364 * t294 - t1380 * t594 - t1381 * t295;
t812 = t962 * qJD(2);
t969 = t1068 * t887 - t843 * t891;
t597 = qJD(3) * t969 + t1226 * t812;
t1117 = qJD(2) * t889;
t813 = -qJD(2) * t1014 + t1117 * t894;
t296 = t746 * t1010 - t813 * t1058 + (-t886 * t962 + t597) * t885;
t517 = t746 * t886;
t297 = -t962 * t1010 + t597 * t1058 + (t813 - t517) * t885;
t596 = qJD(3) * t746 + t812 * t891;
t1378 = t1364 * t296 - t1380 * t596 - t1381 * t297;
t1377 = t1363 * t594 + t1365 * t295 - t1380 * t294;
t1376 = t1363 * t596 + t1365 * t297 - t1380 * t296;
t1375 = t1365 * t594 + t1367 * t295 - t1381 * t294;
t1374 = t1365 * t596 + t1367 * t297 - t1381 * t296;
t1065 = t894 * t1226;
t1016 = t888 * t1065;
t1173 = t888 * t892;
t844 = t1173 * t891 - t1221 * t1226;
t748 = qJD(2) * t1016 - qJD(3) * t844;
t984 = t892 * t1009;
t457 = -qJD(2) * t984 + t1010 * t845 - t1092 * t886 + t748 * t885;
t1116 = qJD(2) * t892;
t1063 = t888 * t1116;
t688 = t845 * t886;
t458 = -t886 * t983 + t748 * t1058 + (t1063 - t688) * t885;
t1093 = t891 * t1172;
t747 = qJD(2) * t1093 + qJD(3) * t845;
t1373 = t1364 * t457 - t1380 * t747 - t1381 * t458;
t1372 = t1363 * t747 + t1365 * t458 - t1380 * t457;
t1371 = t1365 * t747 + t1367 * t458 - t1381 * t457;
t1328 = t1364 * t580 + t1380 * t968 - t1387;
t1327 = t1364 * t582 + t1380 * t969 - t1386;
t1326 = -t1363 * t968 + t1365 * t581 - t1380 * t580;
t1325 = -t1363 * t969 + t1365 * t583 - t1380 * t582;
t1324 = -t1365 * t968 + t1367 * t581 - t1385;
t1323 = -t1365 * t969 + t1367 * t583 - t1384;
t1312 = t1364 * t721 - t1380 * t844 - t1383;
t1311 = t1363 * t844 + t1365 * t722 - t1380 * t721;
t1310 = t1365 * t844 + t1367 * t722 - t1382;
t1352 = rSges(7,1) + pkin(5);
t1370 = t1324 * t295 + t1326 * t594 + t1328 * t294 + t1375 * t581 - t1377 * t968 + t1379 * t580;
t1349 = t1323 * t295 + t1325 * t594 + t1327 * t294 + t1374 * t581 - t1376 * t968 + t1378 * t580;
t1369 = t1324 * t297 + t1326 * t596 + t1328 * t296 + t1375 * t583 - t1377 * t969 + t1379 * t582;
t1347 = t1323 * t297 + t1325 * t596 + t1327 * t296 + t1374 * t583 - t1376 * t969 + t1378 * t582;
t1368 = t1324 * t458 + t1326 * t747 + t1328 * t457 + t1375 * t722 + t1377 * t844 + t1379 * t721;
t1343 = t1323 * t458 + t1325 * t747 + t1327 * t457 + t1374 * t722 + t1376 * t844 + t1378 * t721;
t1341 = t1310 * t295 + t1311 * t594 + t1312 * t294 + t1371 * t581 - t1372 * t968 + t1373 * t580;
t1340 = t1310 * t297 + t1311 * t596 + t1312 * t296 + t1371 * t583 - t1372 * t969 + t1373 * t582;
t1339 = t1310 * t458 + t1311 * t747 + t1312 * t457 + t1371 * t722 + t1372 * t844 + t1373 * t721;
t1338 = rSges(7,3) + qJ(6);
t1337 = t1324 * t581 - t1326 * t968 + t1328 * t580;
t1336 = t1323 * t581 - t1325 * t968 + t1327 * t580;
t1335 = t1324 * t583 - t1326 * t969 + t1328 * t582;
t1334 = t1323 * t583 - t1325 * t969 + t1327 * t582;
t1333 = t1324 * t722 + t1326 * t844 + t1328 * t721;
t1332 = t1323 * t722 + t1325 * t844 + t1327 * t721;
t1331 = t1310 * t581 - t1311 * t968 + t1312 * t580;
t1330 = t1310 * t583 - t1311 * t969 + t1312 * t582;
t1329 = t1310 * t722 + t1311 * t844 + t1312 * t721;
t1361 = t1058 * t1381 - t1364 * t885;
t1360 = -t1058 * t1365 + t1380 * t885;
t1359 = -t1058 * t1367 + t1381 * t885;
t1118 = qJD(2) * t888;
t875 = t887 * t1118;
t756 = -qJD(3) * t962 + t875;
t565 = -qJD(4) * t969 + t756;
t442 = -qJD(5) * t969 + t565;
t1064 = t888 * t1117;
t757 = -qJD(3) * t958 - t1064;
t566 = -qJD(4) * t968 + t757;
t443 = -qJD(5) * t968 + t566;
t1115 = qJD(3) * t888;
t884 = qJD(2) * t1221;
t854 = -t1115 * t894 + t884;
t729 = qJD(4) * t844 + t854;
t609 = qJD(5) * t844 + t729;
t1342 = t1329 * t609 + t1332 * t442 + t1333 * t443;
t1357 = -t1342 / 0.2e1;
t1345 = t1330 * t609 + t1334 * t442 + t1335 * t443;
t1356 = -t1345 / 0.2e1;
t1346 = t1331 * t609 + t1336 * t442 + t1337 * t443;
t1355 = -t1346 / 0.2e1;
t1099 = qJDD(2) * t888;
t874 = t887 * t1099;
t610 = qJD(3) * t813 - qJDD(3) * t962 + t874;
t315 = qJD(4) * t596 - qJDD(4) * t969 + t610;
t206 = qJD(5) * t596 - qJDD(5) * t969 + t315;
t1057 = t889 * t1099;
t611 = qJD(3) * t811 - qJDD(3) * t958 - t1057;
t316 = qJD(4) * t594 - qJDD(4) * t968 + t611;
t207 = qJD(5) * t594 - qJDD(5) * t968 + t316;
t876 = t892 * t1115;
t883 = qJDD(2) * t1221;
t769 = qJD(2) * t876 - qJDD(3) * t1172 + t883;
t486 = qJD(4) * t747 + qJDD(4) * t844 + t769;
t338 = qJD(5) * t747 + qJDD(5) * t844 + t486;
t1354 = t1331 * t338 + t1336 * t206 + t1337 * t207 + t1341 * t609 + t1349 * t442 + t1370 * t443;
t1353 = t1330 * t338 + t1334 * t206 + t1335 * t207 + t1340 * t609 + t1347 * t442 + t1369 * t443;
t1351 = t1329 * t338 + t1332 * t206 + t1333 * t207 + t1339 * t609 + t1343 * t442 + t1368 * t443;
t1108 = qJD(6) * t580;
t1166 = rSges(7,2) * t594 + t1338 * t294 + t1352 * t295 + t1108;
t1107 = qJD(6) * t582;
t1165 = rSges(7,2) * t596 + t1338 * t296 + t1352 * t297 + t1107;
t1106 = qJD(6) * t721;
t1159 = rSges(7,2) * t747 + t1338 * t457 + t1352 * t458 + t1106;
t987 = t1338 * t581 - t1352 * t580;
t1147 = rSges(7,2) * t968 - t1338 * t580 - t1352 * t581;
t986 = t1338 * t583 - t1352 * t582;
t1146 = -rSges(7,2) * t969 + t1338 * t582 + t1352 * t583;
t1184 = t958 * t891;
t1069 = t885 * t1226;
t626 = -t1058 * t841 + t1069 * t958;
t980 = t1226 * t1058;
t627 = t841 * t885 + t958 * t980;
t1322 = -t1184 * t1380 + t1364 * t626 - t1381 * t627;
t1180 = t962 * t891;
t628 = -t1058 * t843 + t1069 * t962;
t629 = t843 * t885 + t962 * t980;
t1321 = -t1180 * t1380 + t1364 * t628 - t1381 * t629;
t1320 = t1184 * t1363 + t1365 * t627 - t1380 * t626;
t1319 = t1180 * t1363 + t1365 * t629 - t1380 * t628;
t1318 = t1184 * t1365 + t1367 * t627 - t1381 * t626;
t1317 = t1180 * t1365 + t1367 * t629 - t1381 * t628;
t1316 = -t1361 * t968 - t1380 * t744;
t1315 = -t1361 * t969 - t1380 * t746;
t1314 = -t1359 * t968 + t1365 * t744;
t1313 = -t1359 * t969 + t1365 * t746;
t985 = t1338 * t722 - t1352 * t721;
t1137 = rSges(7,2) * t844 + t1338 * t721 + t1352 * t722;
t765 = t1016 * t885 - t984;
t766 = (t885 * t892 + t894 * t980) * t888;
t1309 = -t1093 * t1380 + t1364 * t765 - t1381 * t766;
t1308 = t1093 * t1363 + t1365 * t766 - t1380 * t765;
t1307 = t1093 * t1365 + t1367 * t766 - t1381 * t765;
t1306 = t1361 * t844 - t1380 * t845;
t1305 = t1359 * t844 + t1365 * t845;
t1304 = (-t1058 * t1310 - t1312 * t885 + t1360 * t844 + t1363 * t845) * t609 + (-t1058 * t1324 - t1328 * t885 - t1360 * t968 + t1363 * t744) * t443 + (-t1058 * t1323 - t1327 * t885 - t1360 * t969 + t1363 * t746) * t442;
t1303 = (t1364 * t722 - t1310 + t1382) * t609 + (t1364 * t581 - t1324 + t1385) * t443 + (t1364 * t583 - t1323 + t1384) * t442;
t1302 = (-t1367 * t721 + t1312 - t1383) * t609 + (-t1367 * t580 + t1328 - t1387) * t443 + (-t1367 * t582 + t1327 - t1386) * t442;
t1301 = (-t1365 * t721 - t1380 * t722) * t609 + (-t1365 * t580 - t1380 * t581) * t443 + (-t1365 * t582 - t1380 * t583) * t442;
t890 = sin(qJ(4));
t1185 = t958 * t890;
t895 = -pkin(10) - pkin(9);
t1224 = -pkin(9) - t895;
t893 = cos(qJ(4));
t882 = pkin(4) * t893 + pkin(3);
t1225 = -pkin(3) + t882;
t273 = -pkin(4) * t1185 - t1224 * t968 + t1225 * t744;
t1079 = -t273 + t1147;
t1181 = t962 * t890;
t274 = -pkin(4) * t1181 - t1224 * t969 + t1225 * t746;
t1078 = -t274 - t1146;
t162 = rSges(6,1) * t297 - rSges(6,2) * t296 + rSges(6,3) * t596;
t602 = -t746 * t890 - t962 * t893;
t936 = qJD(4) * t602 + t813 * t890;
t187 = pkin(4) * t936 + t1224 * t596 + t1225 * t597;
t1164 = -t162 - t187;
t386 = pkin(3) * t597 + pkin(9) * t596;
t1300 = -t386 + t1164;
t1091 = t890 * t1172;
t455 = -pkin(4) * t1091 + t1224 * t844 + t1225 * t845;
t1076 = -t455 - t1137;
t292 = rSges(6,1) * t583 - rSges(6,2) * t582 - rSges(6,3) * t969;
t1150 = -t274 - t292;
t537 = pkin(3) * t746 - pkin(9) * t969;
t1294 = -t537 + t1150;
t453 = rSges(6,1) * t722 - rSges(6,2) * t721 + rSges(6,3) * t844;
t1139 = -t453 - t455;
t708 = pkin(3) * t845 + pkin(9) * t844;
t1075 = -t708 + t1139;
t1299 = t882 * t1226 - t891 * t895;
t600 = -t744 * t890 - t958 * t893;
t1298 = -rSges(5,1) * t893 + rSges(5,2) * t890;
t487 = Icges(4,5) * t748 - Icges(4,6) * t747 + Icges(4,3) * t1063;
t488 = Icges(4,4) * t748 - Icges(4,2) * t747 + Icges(4,6) * t1063;
t489 = Icges(4,1) * t748 - Icges(4,4) * t747 + Icges(4,5) * t1063;
t652 = Icges(4,5) * t845 - Icges(4,6) * t844 - Icges(4,3) * t1172;
t1215 = Icges(4,4) * t845;
t653 = -Icges(4,2) * t844 - Icges(4,6) * t1172 + t1215;
t835 = Icges(4,4) * t844;
t654 = Icges(4,1) * t845 - Icges(4,5) * t1172 - t835;
t119 = -t487 * t958 + t488 * t968 + t489 * t744 - t594 * t653 + t595 * t654 + t652 * t811;
t601 = t744 * t893 - t1185;
t302 = Icges(5,5) * t601 + Icges(5,6) * t600 - Icges(5,3) * t968;
t1214 = Icges(5,4) * t601;
t304 = Icges(5,2) * t600 - Icges(5,6) * t968 + t1214;
t590 = Icges(5,4) * t600;
t306 = Icges(5,1) * t601 - Icges(5,5) * t968 + t590;
t115 = -t302 * t968 + t304 * t600 + t306 * t601;
t603 = t746 * t893 - t1181;
t303 = Icges(5,5) * t603 + Icges(5,6) * t602 - Icges(5,3) * t969;
t1213 = Icges(5,4) * t603;
t305 = Icges(5,2) * t602 - Icges(5,6) * t969 + t1213;
t591 = Icges(5,4) * t602;
t307 = Icges(5,1) * t603 - Icges(5,5) * t969 + t591;
t116 = -t303 * t968 + t305 * t600 + t307 * t601;
t750 = -t1172 * t893 - t845 * t890;
t976 = -t845 * t893 + t1091;
t470 = -Icges(5,5) * t976 + Icges(5,6) * t750 + Icges(5,3) * t844;
t1212 = Icges(5,4) * t976;
t471 = Icges(5,2) * t750 + Icges(5,6) * t844 - t1212;
t741 = Icges(5,4) * t750;
t472 = -Icges(5,1) * t976 + Icges(5,5) * t844 + t741;
t137 = -t470 * t968 + t471 * t600 + t472 * t601;
t318 = -qJD(4) * t601 - t595 * t890 + t811 * t893;
t937 = qJD(4) * t600 + t811 * t890;
t319 = t595 * t893 + t937;
t167 = Icges(5,5) * t319 + Icges(5,6) * t318 + Icges(5,3) * t594;
t169 = Icges(5,4) * t319 + Icges(5,2) * t318 + Icges(5,6) * t594;
t171 = Icges(5,1) * t319 + Icges(5,4) * t318 + Icges(5,5) * t594;
t50 = -t167 * t968 + t169 * t600 + t171 * t601 + t302 * t594 + t304 * t318 + t306 * t319;
t320 = -qJD(4) * t603 - t597 * t890 + t813 * t893;
t321 = t597 * t893 + t936;
t168 = Icges(5,5) * t321 + Icges(5,6) * t320 + Icges(5,3) * t596;
t170 = Icges(5,4) * t321 + Icges(5,2) * t320 + Icges(5,6) * t596;
t172 = Icges(5,1) * t321 + Icges(5,4) * t320 + Icges(5,5) * t596;
t51 = -t168 * t968 + t170 * t600 + t172 * t601 + t303 * t594 + t305 * t318 + t307 * t319;
t482 = qJD(4) * t976 + t1063 * t893 - t748 * t890;
t916 = qJD(4) * t750 + t1063 * t890;
t483 = t748 * t893 + t916;
t233 = Icges(5,5) * t483 + Icges(5,6) * t482 + Icges(5,3) * t747;
t234 = Icges(5,4) * t483 + Icges(5,2) * t482 + Icges(5,6) * t747;
t235 = Icges(5,1) * t483 + Icges(5,4) * t482 + Icges(5,5) * t747;
t86 = -t233 * t968 + t234 * t600 + t235 * t601 + t318 * t471 + t319 * t472 + t470 * t594;
t13 = t316 * t115 + t116 * t315 + t137 * t486 + t566 * t50 + t51 * t565 + t729 * t86;
t461 = Icges(4,5) * t744 + Icges(4,6) * t968 - Icges(4,3) * t958;
t1217 = Icges(4,4) * t744;
t463 = Icges(4,2) * t968 - Icges(4,6) * t958 + t1217;
t730 = Icges(4,4) * t968;
t465 = Icges(4,1) * t744 - Icges(4,5) * t958 + t730;
t177 = -t461 * t958 + t463 * t968 + t465 * t744;
t462 = Icges(4,5) * t746 + Icges(4,6) * t969 - Icges(4,3) * t962;
t1216 = Icges(4,4) * t746;
t464 = Icges(4,2) * t969 - Icges(4,6) * t962 + t1216;
t731 = Icges(4,4) * t969;
t466 = Icges(4,1) * t746 - Icges(4,5) * t962 + t731;
t178 = -t462 * t958 + t464 * t968 + t466 * t744;
t212 = -t652 * t958 + t653 * t968 + t654 * t744;
t322 = Icges(4,5) * t595 - Icges(4,6) * t594 + Icges(4,3) * t811;
t324 = Icges(4,4) * t595 - Icges(4,2) * t594 + Icges(4,6) * t811;
t326 = Icges(4,1) * t595 - Icges(4,4) * t594 + Icges(4,5) * t811;
t96 = -t322 * t958 + t324 * t968 + t326 * t744 + t461 * t811 - t463 * t594 + t465 * t595;
t323 = Icges(4,5) * t597 - Icges(4,6) * t596 + Icges(4,3) * t813;
t325 = Icges(4,4) * t597 - Icges(4,2) * t596 + Icges(4,6) * t813;
t327 = Icges(4,1) * t597 - Icges(4,4) * t596 + Icges(4,5) * t813;
t97 = -t323 * t958 + t325 * t968 + t327 * t744 + t462 * t811 - t464 * t594 + t466 * t595;
t1297 = t119 * t854 + t611 * t177 + t178 * t610 + t212 * t769 + t756 * t97 + t757 * t96 + t13 + t1354;
t120 = -t487 * t962 + t488 * t969 + t489 * t746 - t596 * t653 + t597 * t654 + t652 * t813;
t117 = -t302 * t969 + t304 * t602 + t306 * t603;
t118 = -t303 * t969 + t305 * t602 + t307 * t603;
t138 = -t470 * t969 + t471 * t602 + t472 * t603;
t52 = -t167 * t969 + t169 * t602 + t171 * t603 + t302 * t596 + t304 * t320 + t306 * t321;
t53 = -t168 * t969 + t170 * t602 + t172 * t603 + t303 * t596 + t305 * t320 + t307 * t321;
t87 = -t233 * t969 + t234 * t602 + t235 * t603 + t320 * t471 + t321 * t472 + t470 * t596;
t14 = t117 * t316 + t315 * t118 + t138 * t486 + t52 * t566 + t565 * t53 + t729 * t87;
t179 = -t461 * t962 + t463 * t969 + t465 * t746;
t180 = -t462 * t962 + t464 * t969 + t466 * t746;
t213 = -t652 * t962 + t653 * t969 + t654 * t746;
t98 = -t322 * t962 + t324 * t969 + t326 * t746 + t461 * t813 - t463 * t596 + t465 * t597;
t99 = -t323 * t962 + t325 * t969 + t327 * t746 + t462 * t813 - t464 * t596 + t466 * t597;
t1296 = t120 * t854 + t179 * t611 + t610 * t180 + t213 * t769 + t756 * t99 + t757 * t98 + t1353 + t14;
t102 = -t324 * t844 + t326 * t845 - t463 * t747 + t465 * t748 + (t1116 * t461 - t322 * t894) * t888;
t103 = -t325 * t844 + t327 * t845 - t464 * t747 + t466 * t748 + (t1116 * t462 - t323 * t894) * t888;
t129 = -t488 * t844 + t489 * t845 - t653 * t747 + t654 * t748 + (t1116 * t652 - t487 * t894) * t888;
t196 = -t1172 * t461 - t463 * t844 + t465 * t845;
t197 = -t1172 * t462 - t464 * t844 + t466 * t845;
t127 = t302 * t844 + t304 * t750 - t306 * t976;
t128 = t303 * t844 + t305 * t750 - t307 * t976;
t184 = t470 * t844 + t471 * t750 - t472 * t976;
t66 = t167 * t844 + t169 * t750 - t171 * t976 + t302 * t747 + t304 * t482 + t306 * t483;
t67 = t168 * t844 + t170 * t750 - t172 * t976 + t303 * t747 + t305 * t482 + t307 * t483;
t91 = t233 * t844 + t234 * t750 - t235 * t976 + t470 * t747 + t471 * t482 + t472 * t483;
t21 = t127 * t316 + t128 * t315 + t184 * t486 + t565 * t67 + t566 * t66 + t729 * t91;
t252 = -t1172 * t652 - t653 * t844 + t654 * t845;
t1295 = t102 * t757 + t103 * t756 + t129 * t854 + t196 * t611 + t197 * t610 + t252 * t769 + t1351 + t21;
t1293 = qJD(6) * t583 + t443 * t985 - t609 * t987;
t1292 = qJD(6) * t581 - t442 * t985 + t609 * t986;
t1291 = qJD(6) * t722 + t442 * t987 - t443 * t986;
t1290 = -t1146 * t207 - t1147 * t206 - t1165 * t443 + t1166 * t442;
t329 = rSges(4,1) * t595 - rSges(4,2) * t594 + rSges(4,3) * t811;
t330 = rSges(4,1) * t597 - rSges(4,2) * t596 + rSges(4,3) * t813;
t467 = rSges(4,1) * t744 + rSges(4,2) * t968 - rSges(4,3) * t958;
t468 = rSges(4,1) * t746 + rSges(4,2) * t969 - rSges(4,3) * t962;
t1289 = t329 * t756 - t330 * t757 + t467 * t610 - t468 * t611;
t186 = pkin(4) * t937 + t1224 * t594 + t1225 * t595;
t251 = pkin(4) * t916 + t1224 * t747 + t1225 * t748;
t385 = pkin(3) * t595 + pkin(9) * t594;
t535 = pkin(3) * t744 - pkin(9) * t968;
t543 = pkin(3) * t748 + pkin(9) * t747;
t670 = pkin(2) * t810 + pkin(8) * t811;
t1053 = t1221 * t670;
t1175 = t888 * t889;
t832 = (pkin(2) * t894 + pkin(8) * t892) * t1118;
t690 = pkin(2) * t841 - pkin(8) * t958;
t1052 = t1221 * t690;
t850 = (pkin(2) * t892 - pkin(8) * t894) * t888;
t959 = -t1175 * t850 - t1052;
t907 = (-t1175 * t832 - t1053) * qJD(2) + t959 * qJDD(2);
t901 = -t854 * t385 - t769 * t535 + t757 * t543 + t611 * t708 + t907;
t897 = -t729 * t186 + t566 * t251 - t486 * t273 + t316 * t455 + t901;
t24 = qJD(6) * t296 + qJDD(6) * t582 + t1137 * t207 + t1147 * t338 + t1159 * t443 - t1166 * t609 + t897;
t939 = t959 * qJD(2);
t915 = -t854 * t535 + t757 * t708 + t939;
t912 = -t729 * t273 + t566 * t455 + t915;
t85 = t1137 * t443 + t1147 * t609 + t1107 + t912;
t1288 = t1147 * t24 - t1166 * t85;
t973 = Icges(4,5) * t1226 - Icges(4,6) * t891;
t1287 = t756 * (-Icges(4,3) * t843 + t1226 * t466 - t464 * t891 - t962 * t973) + t757 * (-Icges(4,3) * t841 + t1226 * t465 - t463 * t891 - t958 * t973) + t854 * (t1226 * t654 - t653 * t891 - (Icges(4,3) * t892 + t894 * t973) * t888);
t1098 = qJDD(6) * t721;
t1109 = qJD(6) * t457;
t1192 = t566 * t187;
t1197 = t316 * t274;
t144 = t565 * t186;
t195 = t315 * t273;
t1186 = t757 * t386;
t1191 = t611 * t537;
t314 = t756 * t385;
t389 = t610 * t535;
t607 = t670 * t875;
t671 = pkin(2) * t812 + pkin(8) * t813;
t608 = t671 * t1064;
t640 = t690 * t874;
t692 = pkin(2) * t843 - pkin(8) * t962;
t641 = t692 * t1057;
t990 = qJDD(1) + t607 + t608 + t640 + t641;
t919 = -t1186 + t314 + t389 + t990 - t1191;
t908 = -t1192 + t144 + t195 + t919 - t1197;
t22 = t1098 + t908 + t1109 + t1290;
t1286 = 0.2e1 * t22;
t1176 = t887 * t888;
t933 = t671 * t884 + t692 * t883 + (-qJD(2) * t832 - qJDD(2) * t850) * t1176;
t910 = t854 * t386 + t769 * t537 - t756 * t543 - t610 * t708 + t933;
t904 = t729 * t187 - t565 * t251 + t486 * t274 - t315 * t455 + t910;
t23 = qJD(6) * t294 + qJDD(6) * t580 - t1137 * t206 + t1146 * t338 - t1159 * t442 + t1165 * t609 + t904;
t1285 = 0.2e1 * t23;
t1284 = 0.2e1 * t24;
t1200 = t207 * t292;
t290 = rSges(6,1) * t581 - rSges(6,2) * t580 - rSges(6,3) * t968;
t1201 = t206 * t290;
t1204 = t162 * t443;
t160 = rSges(6,1) * t295 - rSges(6,2) * t294 + rSges(6,3) * t594;
t1205 = t160 * t442;
t25 = -t1200 + t1201 - t1204 + t908 + t1205;
t1283 = 0.2e1 * t25;
t225 = rSges(6,1) * t458 - rSges(6,2) * t457 + rSges(6,3) * t747;
t30 = -t609 * t160 + t207 * t453 + t443 * t225 - t338 * t290 + t897;
t1282 = 0.2e1 * t30;
t1059 = t692 * t1064 + t690 * t875 + qJD(1);
t970 = t756 * t535 - t537 * t757 + t1059;
t934 = t565 * t273 - t274 * t566 + t970;
t74 = -t1146 * t443 - t1147 * t442 + t1106 + t934;
t1281 = 0.2e1 * t74;
t981 = t692 * t884 - t850 * t875;
t938 = t854 * t537 - t708 * t756 + t981;
t918 = t729 * t274 - t455 * t565 + t938;
t84 = -t1137 * t442 + t1146 * t609 + t1108 + t918;
t1280 = 0.2e1 * t84;
t1279 = 0.2e1 * t85;
t88 = t290 * t442 - t292 * t443 + t934;
t1278 = 0.2e1 * t88;
t94 = t292 * t609 - t442 * t453 + t918;
t1277 = 0.2e1 * t94;
t95 = -t609 * t290 + t443 * t453 + t912;
t1276 = 0.2e1 * t95;
t1275 = m(5) / 0.2e1;
t1274 = m(6) / 0.2e1;
t1273 = m(7) / 0.2e1;
t70 = t115 * t566 + t116 * t565 + t137 * t729;
t1272 = -t70 / 0.2e1;
t71 = t117 * t566 + t118 * t565 + t138 * t729;
t1271 = -t71 / 0.2e1;
t79 = t127 * t566 + t128 * t565 + t184 * t729;
t1270 = -t79 / 0.2e1;
t1269 = t206 / 0.2e1;
t1268 = t207 / 0.2e1;
t1267 = t315 / 0.2e1;
t1266 = t316 / 0.2e1;
t1265 = t338 / 0.2e1;
t1264 = -t442 / 0.2e1;
t1263 = t442 / 0.2e1;
t1262 = -t443 / 0.2e1;
t1261 = t443 / 0.2e1;
t1260 = t486 / 0.2e1;
t1255 = -t565 / 0.2e1;
t1254 = t565 / 0.2e1;
t1253 = -t566 / 0.2e1;
t1252 = t566 / 0.2e1;
t1251 = t594 / 0.2e1;
t1250 = t596 / 0.2e1;
t1249 = -t609 / 0.2e1;
t1248 = t609 / 0.2e1;
t1247 = t610 / 0.2e1;
t1246 = t611 / 0.2e1;
t1244 = -t729 / 0.2e1;
t1243 = t729 / 0.2e1;
t1242 = -t968 / 0.2e1;
t1241 = -t969 / 0.2e1;
t1240 = t747 / 0.2e1;
t1238 = -t756 / 0.2e1;
t1237 = t756 / 0.2e1;
t1236 = -t757 / 0.2e1;
t1235 = t757 / 0.2e1;
t1234 = t769 / 0.2e1;
t1229 = t844 / 0.2e1;
t1228 = -t854 / 0.2e1;
t1227 = t854 / 0.2e1;
t1220 = Icges(3,4) * t841;
t1219 = Icges(3,4) * t843;
t1218 = Icges(3,4) * t892;
t173 = rSges(5,1) * t319 + rSges(5,2) * t318 + rSges(5,3) * t594;
t1203 = t173 * t565;
t174 = rSges(5,1) * t321 + rSges(5,2) * t320 + rSges(5,3) * t596;
t1202 = t174 * t566;
t309 = rSges(5,1) * t601 + rSges(5,2) * t600 - rSges(5,3) * t968;
t1199 = t309 * t315;
t310 = rSges(5,1) * t603 + rSges(5,2) * t602 - rSges(5,3) * t969;
t1198 = t310 * t316;
t1190 = t968 * t885;
t1188 = t969 * t885;
t1182 = t841 * t890;
t1178 = t843 * t890;
t1177 = t844 * t885;
t1171 = t890 * t892;
t1168 = -t160 * t969 + t596 * t290;
t1167 = t844 * t162 + t747 * t292;
t1163 = -t186 * t969 + t596 * t273;
t1162 = -t174 - t386;
t1161 = t844 * t187 + t747 * t274;
t1160 = -t225 * t968 + t594 * t453;
t1158 = -t225 - t251;
t1157 = -t251 * t968 + t594 * t455;
t237 = rSges(5,1) * t483 + rSges(5,2) * t482 + rSges(5,3) * t747;
t1156 = -t237 - t543;
t1155 = t1147 * t969;
t473 = t962 * t535;
t1154 = -t273 * t962 - t473;
t1153 = t1146 * t844;
t491 = t537 * t1063;
t1152 = t274 * t1063 + t491;
t1151 = -t273 - t290;
t1149 = -t310 - t537;
t1148 = -t385 * t962 + t813 * t535;
t1145 = t1137 * t968;
t630 = t1221 * t671;
t1144 = t1221 * t386 + t630;
t1013 = t968 * t1058;
t1143 = t744 * rSges(7,2) + t1013 * t1352 + t1190 * t1338;
t1012 = t969 * t1058;
t1142 = t746 * rSges(7,2) + t1012 * t1352 + t1188 * t1338;
t1141 = -rSges(7,2) * t1184 - t1338 * t626 - t1352 * t627;
t1140 = rSges(7,2) * t1180 + t1338 * t628 + t1352 * t629;
t474 = -rSges(5,1) * t976 + rSges(5,2) * t750 + rSges(5,3) * t844;
t1138 = -t474 - t708;
t1136 = t535 * t1172 - t708 * t958;
t679 = t1221 * t692;
t1135 = t1221 * t537 + t679;
t1011 = t844 * t1058;
t1134 = t845 * rSges(7,2) - t1011 * t1352 - t1177 * t1338;
t357 = -t580 * rSges(6,1) - t581 * rSges(6,2);
t361 = -t582 * rSges(6,1) - t583 * rSges(6,2);
t1133 = rSges(7,2) * t1093 + t1338 * t765 + t1352 * t766;
t1132 = t671 * t1175 + t670 * t1176;
t636 = Icges(3,2) * t958 - Icges(3,6) * t1175 + t1220;
t684 = Icges(3,1) * t958 - t1220;
t1131 = -t636 + t684;
t637 = Icges(3,2) * t962 + Icges(3,6) * t1176 + t1219;
t685 = Icges(3,1) * t962 - t1219;
t1130 = -t637 + t685;
t827 = Icges(3,4) * t958;
t638 = Icges(3,1) * t841 - Icges(3,5) * t1175 + t827;
t682 = -Icges(3,2) * t841 + t827;
t1129 = -t638 - t682;
t828 = Icges(3,4) * t962;
t639 = Icges(3,1) * t843 + Icges(3,5) * t1176 + t828;
t683 = -Icges(3,2) * t843 + t828;
t1128 = -t639 - t683;
t689 = pkin(2) * t958 + pkin(8) * t841;
t691 = pkin(2) * t962 + pkin(8) * t843;
t1127 = t691 * t1064 + t689 * t875;
t1126 = t692 * t1175 + t690 * t1176;
t1125 = -t744 * t895 + t882 * t968;
t1124 = -t746 * t895 + t882 * t969;
t501 = -t721 * rSges(6,1) - t722 * rSges(6,2);
t1123 = -t844 * t882 - t845 * t895;
t789 = Icges(3,6) * t1221 + (Icges(3,2) * t894 + t1218) * t888;
t848 = (Icges(3,1) * t894 - t1218) * t888;
t1122 = -t789 + t848;
t877 = Icges(3,4) * t1172;
t790 = Icges(3,1) * t1173 + Icges(3,5) * t1221 + t877;
t847 = -Icges(3,2) * t1173 + t877;
t1121 = -t790 - t847;
t1073 = t958 * t1226;
t1120 = -pkin(3) * t1073 - pkin(9) * t1184;
t1071 = t962 * t1226;
t1119 = -pkin(3) * t1071 - pkin(9) * t1180;
t1111 = qJD(4) * t891;
t822 = qJD(3) * t841;
t677 = t1111 * t958 + t822;
t824 = qJD(3) * t843;
t678 = t1111 * t962 + t824;
t807 = pkin(3) * t1016 + pkin(9) * t1093;
t815 = qJD(4) * t1093 + t876;
t851 = pkin(2) * t1172 + pkin(8) * t1173;
t1114 = qJD(4) * t744;
t1113 = qJD(4) * t746;
t1112 = qJD(4) * t845;
t1110 = qJD(5) * t891;
t1105 = qJD(6) * t885;
t1103 = 2 * m(3);
t1102 = 2 * m(4);
t1101 = 0.2e1 * m(5);
t1100 = 0.2e1 * m(6);
t1097 = 0.2e1 * t962;
t1096 = 0.2e1 * t887;
t1095 = 0.2e1 * t889;
t1094 = 0.2e1 * t894;
t1088 = -t187 - t1165;
t1087 = t1221 * t187 + t1144;
t1086 = -t251 - t1159;
t1084 = -t543 + t1158;
t1083 = -t832 + t1156;
t1080 = t1221 * t274 + t1135;
t1077 = t385 * t1172 - t543 * t958 + t811 * t708;
t1074 = -t850 + t1138;
t376 = t627 * rSges(6,1) - t626 * rSges(6,2) + rSges(6,3) * t1184;
t378 = t629 * rSges(6,1) - t628 * rSges(6,2) + rSges(6,3) * t1180;
t1067 = t890 * t1226;
t664 = -t1067 * t958 + t841 * t893;
t1066 = t893 * t1226;
t665 = t1066 * t958 + t1182;
t404 = t665 * rSges(5,1) + t664 * rSges(5,2) + rSges(5,3) * t1184;
t666 = -t1067 * t962 + t843 * t893;
t667 = t1066 * t962 + t1178;
t405 = t667 * rSges(5,1) + t666 * rSges(5,2) + rSges(5,3) * t1180;
t515 = t766 * rSges(6,1) - t765 * rSges(6,2) + rSges(6,3) * t1093;
t782 = (-t1065 * t890 + t892 * t893) * t888;
t783 = (t1065 * t893 + t1171) * t888;
t586 = t783 * rSges(5,1) + t782 * rSges(5,2) + rSges(5,3) * t1093;
t1056 = t1118 / 0.2e1;
t534 = pkin(3) * t968 + pkin(9) * t744;
t536 = pkin(3) * t969 + pkin(9) * t746;
t707 = -t844 * pkin(3) + pkin(9) * t845;
t1051 = -t1102 / 0.2e1;
t1050 = t1102 / 0.2e1;
t1049 = -t1101 / 0.2e1;
t1048 = t1101 / 0.2e1;
t1047 = -t1100 / 0.2e1;
t490 = rSges(4,1) * t748 - rSges(4,2) * t747 + rSges(4,3) * t1063;
t1045 = t888 * (-t490 - t832);
t655 = rSges(4,1) * t845 - rSges(4,2) * t844 - rSges(4,3) * t1172;
t1044 = t888 * (-t655 - t850);
t1039 = t442 * t357 - t361 * t443;
t1038 = t609 * t361 - t442 * t501;
t1037 = -t357 * t609 + t443 * t501;
t592 = t600 * pkin(4);
t593 = t602 * pkin(4);
t1036 = t565 * t592 - t566 * t593;
t1035 = t756 * t534 - t536 * t757;
t742 = t750 * pkin(4);
t1034 = t566 * t742 - t592 * t729;
t1033 = -t565 * t742 + t729 * t593;
t1032 = t854 * t536 - t707 * t756;
t1031 = -t534 * t854 + t757 * t707;
t1030 = 0.2e1 * t1116;
t1029 = -t1147 * t596 - t1166 * t969;
t1028 = t1146 * t747 + t1165 * t844;
t1027 = -t386 + t1088;
t1026 = -t186 * t962 + t813 * t273 + t1148;
t1025 = t1137 * t594 - t1159 * t968;
t1024 = -t543 + t1086;
t1023 = -t832 + t1084;
t1022 = t273 * t1172 - t455 * t958 + t1136;
t1021 = -t537 + t1078;
t1020 = t386 * t1175 + t385 * t1176 + t1132;
t1019 = -t708 + t1076;
t1018 = -t850 + t1075;
t1017 = t537 * t1175 + t535 * t1176 + t1126;
t1008 = t88 * t160 + t25 * t290;
t1007 = -t832 + t1024;
t1006 = -t850 + t1019;
t896 = 0.2e1 * qJDD(1);
t1005 = 0.2e1 * t607 + 0.2e1 * t608 + 0.2e1 * t640 + 0.2e1 * t641 + t896;
t1004 = -Icges(5,1) * t893 + Icges(5,4) * t890;
t1003 = -Icges(5,4) * t893 + Icges(5,2) * t890;
t1002 = -Icges(5,5) * t893 + Icges(5,6) * t890;
t658 = Icges(3,5) * t810 - Icges(3,6) * t811;
t659 = Icges(3,5) * t812 - Icges(3,6) * t813;
t660 = Icges(3,4) * t810 - Icges(3,2) * t811;
t661 = Icges(3,4) * t812 - Icges(3,2) * t813;
t662 = Icges(3,1) * t810 - Icges(3,4) * t811;
t663 = Icges(3,1) * t812 - Icges(3,4) * t813;
t1000 = -(t1176 * t658 - t636 * t813 + t638 * t812 + t660 * t962 + t662 * t843) * t889 + (t1176 * t659 - t637 * t813 + t639 * t812 + t661 * t962 + t663 * t843) * t887;
t994 = -t637 * t892 + t639 * t894;
t995 = -t636 * t892 + t638 * t894;
t999 = -(t1221 * t658 + (qJD(2) * t995 + t660 * t894 + t662 * t892) * t888) * t889 + (t1221 * t659 + (qJD(2) * t994 + t661 * t894 + t663 * t892) * t888) * t887;
t634 = Icges(3,5) * t841 + Icges(3,6) * t958 - Icges(3,3) * t1175;
t635 = Icges(3,5) * t843 + Icges(3,6) * t962 + Icges(3,3) * t1176;
t998 = -(-t1175 * t634 + t636 * t958 + t638 * t841) * t889 + (-t1175 * t635 + t637 * t958 + t639 * t841) * t887;
t997 = -(t1176 * t634 + t636 * t962 + t638 * t843) * t889 + (t1176 * t635 + t637 * t962 + t639 * t843) * t887;
t996 = -(t1221 * t634 + (t636 * t894 + t638 * t892) * t888) * t889 + (t1221 * t635 + (t637 * t894 + t639 * t892) * t888) * t887;
t642 = rSges(3,1) * t841 + rSges(3,2) * t958 - rSges(3,3) * t1175;
t643 = rSges(3,1) * t843 + rSges(3,2) * t962 + rSges(3,3) * t1176;
t993 = t642 * t887 + t643 * t889;
t668 = rSges(3,1) * t810 - rSges(3,2) * t811;
t669 = rSges(3,1) * t812 - rSges(3,2) * t813;
t992 = t668 * t887 + t669 * t889;
t991 = -t789 * t892 + t790 * t894;
t553 = rSges(4,1) * t1073 - rSges(4,2) * t1184 + t841 * rSges(4,3);
t554 = rSges(4,1) * t1071 - rSges(4,2) * t1180 + t843 * rSges(4,3);
t435 = t744 * rSges(5,3) - t1298 * t968;
t436 = t746 * rSges(5,3) - t1298 * t969;
t560 = t845 * rSges(5,3) + t1298 * t844;
t424 = rSges(6,1) * t1013 - rSges(6,2) * t1190 + t744 * rSges(6,3);
t426 = rSges(6,1) * t1012 - rSges(6,2) * t1188 + t746 * rSges(6,3);
t539 = -rSges(6,1) * t1011 + rSges(6,2) * t1177 + t845 * rSges(6,3);
t989 = pkin(4) * t1182 + t1299 * t958;
t988 = pkin(4) * t1178 + t1299 * t962;
t982 = t691 * t884 - t851 * t875;
t979 = t187 * t1175 + t186 * t1176 + t1020;
t978 = t186 * t1172 - t251 * t958 + t811 * t455 + t1077;
t977 = t274 * t1175 + t273 * t1176 + t1017;
t975 = Icges(4,1) * t1226 - Icges(4,4) * t891;
t974 = Icges(4,4) * t1226 - Icges(4,2) * t891;
t849 = (rSges(3,1) * t894 - rSges(3,2) * t892) * t888;
t755 = rSges(4,1) * t1016 - rSges(4,2) * t1093 + rSges(4,3) * t1173;
t972 = t888 * pkin(4) * t1171 + t882 * t1016 - t1093 * t895;
t846 = (Icges(3,5) * t894 - Icges(3,6) * t892) * t888;
t971 = t993 * t888;
t809 = t1221 * rSges(3,3) + (rSges(3,1) * t892 + rSges(3,2) * t894) * t888;
t964 = -t1176 * t809 + t1221 * t643;
t825 = qJD(2) * t849;
t963 = -t1176 * t825 + t1221 * t669;
t961 = -t1175 * t809 - t1221 * t642;
t960 = -t1175 * t825 - t1221 * t668;
t955 = (Icges(5,5) * t600 - Icges(5,6) * t601) * t566 + (Icges(5,5) * t602 - Icges(5,6) * t603) * t565 + (Icges(5,5) * t750 + Icges(5,6) * t976) * t729;
t954 = (Icges(4,5) * t968 - Icges(4,6) * t744) * t757 + (Icges(4,5) * t969 - Icges(4,6) * t746) * t756 + (-Icges(4,5) * t844 - Icges(4,6) * t845) * t854;
t947 = -t1147 * t22 + t1166 * t74;
t946 = -t1221 * t385 - t1053;
t945 = -t1221 * t535 - t1052;
t944 = t972 + t851;
t943 = t689 + t989;
t942 = t691 + t988;
t941 = 0.2e1 * t314 - 0.2e1 * t1186 + 0.2e1 * t389 - 0.2e1 * t1191 + t1005;
t940 = (-t1175 * t851 - t1221 * t689) * qJD(2);
t935 = t1119 * t757 - t1120 * t756 + t535 * t824 - t537 * t822 + t1127;
t331 = -t534 + t1125;
t332 = -t536 + t1124;
t932 = t273 * t1113 - t1114 * t274 + t565 * t331 - t332 * t566 + t1035;
t479 = -t707 + t1123;
t931 = t274 * t1112 - t1113 * t455 + t729 * t332 - t479 * t565 + t1032;
t930 = -t1112 * t273 + t455 * t1114 - t331 * t729 + t566 * t479 + t1031;
t929 = -t1221 * t186 + t946;
t928 = -t1221 * t273 + t945;
t923 = (Icges(5,1) * t602 - t1213 - t305) * t565 + (Icges(5,1) * t600 - t1214 - t304) * t566 + (Icges(5,1) * t750 + t1212 - t471) * t729;
t922 = (-Icges(5,2) * t603 + t307 + t591) * t565 + (-Icges(5,2) * t601 + t306 + t590) * t566 + (Icges(5,2) * t976 + t472 + t741) * t729;
t921 = (Icges(4,1) * t969 - t1216 - t464) * t756 + (Icges(4,1) * t968 - t1217 - t463) * t757 + (-Icges(4,1) * t844 - t1215 - t653) * t854;
t920 = (Icges(4,2) * t746 - t466 - t731) * t756 + (Icges(4,2) * t744 - t465 - t730) * t757 + (Icges(4,2) * t845 - t654 + t835) * t854;
t917 = 0.2e1 * t144 - 0.2e1 * t1192 + 0.2e1 * t195 - 0.2e1 * t1197 + t941;
t914 = -t1119 * t854 + t537 * t876 - t708 * t824 - t756 * t807 + t982;
t913 = (qJD(2) * t992 + qJDD(2) * t993) * t888;
t406 = t989 + t1120;
t407 = t988 + t1119;
t911 = t678 * t273 - t274 * t677 + t565 * t406 - t407 * t566 + t935;
t909 = t1120 * t854 - t535 * t876 + t708 * t822 + t757 * t807 + t940;
t587 = t972 - t807;
t906 = t815 * t274 + t729 * t407 - t678 * t455 - t565 * t587 + t914;
t905 = (Icges(5,3) * t746 - t1002 * t969 + t305 * t890 - t307 * t893) * t565 + (Icges(5,3) * t744 - t1002 * t968 + t304 * t890 - t306 * t893) * t566 + (Icges(5,3) * t845 + t1002 * t844 + t471 * t890 - t472 * t893) * t729;
t903 = (t1330 * t844 - t1334 * t969 - t1335 * t968) * t1269 + (t1331 * t844 - t1336 * t969 - t1337 * t968) * t1268 + (t1329 * t844 - t1332 * t969 - t1333 * t968) * t1265 + (-t1301 * t969 + t1302 * t583 + t1303 * t582) * t1264 + (t1330 * t747 + t1334 * t596 + t1335 * t594 + t1340 * t844 - t1347 * t969 - t1369 * t968) * t1263 + (-t1301 * t968 + t1302 * t581 + t1303 * t580) * t1262 + (t1331 * t747 + t1336 * t596 + t1337 * t594 + t1341 * t844 - t1349 * t969 - t1370 * t968) * t1261 + t1346 * t1251 + t1345 * t1250 + (t1301 * t844 + t1302 * t722 + t1303 * t721) * t1249 + (t1329 * t747 + t1332 * t596 + t1333 * t594 + t1339 * t844 - t1343 * t969 - t1368 * t968) * t1248 + t1354 * t1242 + t1353 * t1241 + t1342 * t1240 + t1351 * t1229;
t902 = -t815 * t273 - t729 * t406 + t677 * t455 + t566 * t587 + t909;
t818 = qJD(2) * t848;
t817 = (Icges(3,4) * t894 - Icges(3,2) * t892) * t1118;
t816 = qJD(2) * t846;
t788 = Icges(3,3) * t1221 + (Icges(3,5) * t892 + Icges(3,6) * t894) * t888;
t754 = (Icges(4,5) * t892 + t894 * t975) * t888;
t753 = (Icges(4,6) * t892 + t894 * t974) * t888;
t749 = qJD(5) * t1093 + t815;
t696 = -rSges(4,1) * t844 - rSges(4,2) * t845;
t687 = rSges(3,1) * t962 - rSges(3,2) * t843;
t686 = rSges(3,1) * t958 - rSges(3,2) * t841;
t681 = Icges(3,5) * t962 - Icges(3,6) * t843;
t680 = Icges(3,5) * t958 - Icges(3,6) * t841;
t579 = Icges(5,1) * t783 + Icges(5,4) * t782 + Icges(5,5) * t1093;
t578 = Icges(5,4) * t783 + Icges(5,2) * t782 + Icges(5,6) * t1093;
t577 = Icges(5,5) * t783 + Icges(5,6) * t782 + Icges(5,3) * t1093;
t557 = Icges(5,5) * t845 + t1004 * t844;
t556 = Icges(5,6) * t845 + t1003 * t844;
t552 = Icges(4,5) * t843 + t962 * t975;
t551 = Icges(4,5) * t841 + t958 * t975;
t550 = Icges(4,6) * t843 + t962 * t974;
t549 = Icges(4,6) * t841 + t958 * t974;
t546 = t1110 * t962 + t678;
t545 = t1110 * t958 + t677;
t544 = rSges(5,1) * t750 + rSges(5,2) * t976;
t533 = rSges(4,1) * t969 - rSges(4,2) * t746;
t532 = rSges(4,1) * t968 - rSges(4,2) * t744;
t478 = t961 * qJD(2);
t477 = t964 * qJD(2);
t434 = Icges(5,5) * t746 - t1004 * t969;
t433 = Icges(5,5) * t744 - t1004 * t968;
t432 = Icges(5,6) * t746 - t1003 * t969;
t431 = Icges(5,6) * t744 - t1003 * t968;
t428 = t1176 * t788 + t789 * t962 + t790 * t843;
t427 = -t1175 * t788 + t789 * t958 + t790 * t841;
t408 = qJD(2) * t971 + qJD(1);
t403 = Icges(5,1) * t667 + Icges(5,4) * t666 + Icges(5,5) * t1180;
t402 = Icges(5,1) * t665 + Icges(5,4) * t664 + Icges(5,5) * t1184;
t401 = Icges(5,4) * t667 + Icges(5,2) * t666 + Icges(5,6) * t1180;
t400 = Icges(5,4) * t665 + Icges(5,2) * t664 + Icges(5,6) * t1184;
t399 = Icges(5,5) * t667 + Icges(5,6) * t666 + Icges(5,3) * t1180;
t398 = Icges(5,5) * t665 + Icges(5,6) * t664 + Icges(5,3) * t1184;
t397 = rSges(5,1) * t602 - rSges(5,2) * t603;
t396 = rSges(5,1) * t600 - rSges(5,2) * t601;
t381 = t968 * t455;
t380 = t968 * t453;
t263 = t844 * t292;
t258 = t844 * t274;
t245 = t1176 * t816 - t789 * t813 + t790 * t812 + t817 * t962 + t818 * t843;
t244 = -t1175 * t816 - t789 * t811 + t790 * t810 + t817 * t958 + t818 * t841;
t241 = t969 * t290;
t238 = t969 * t273;
t205 = -t854 * t467 + t757 * t655 + t939;
t204 = t468 * t854 - t655 * t756 + t981;
t188 = t467 * t756 - t468 * t757 + t1059;
t126 = -t729 * t309 + t566 * t474 + t915;
t125 = t310 * t729 - t474 * t565 + t938;
t114 = -t854 * t329 - t769 * t467 + t757 * t490 + t611 * t655 + t907;
t113 = t330 * t854 + t468 * t769 - t490 * t756 - t610 * t655 + t933;
t104 = t309 * t565 - t310 * t566 + t970;
t101 = t990 + t1289;
t100 = t196 * t757 + t197 * t756 + t854 * t252;
t93 = t179 * t757 + t180 * t756 + t213 * t854;
t92 = t177 * t757 + t178 * t756 + t212 * t854;
t78 = -t729 * t173 + t566 * t237 - t486 * t309 + t316 * t474 + t901;
t77 = t174 * t729 - t237 * t565 + t310 * t486 - t315 * t474 + t910;
t37 = -t1198 + t1199 - t1202 + t919 + t1203;
t29 = t162 * t609 - t206 * t453 - t225 * t442 + t292 * t338 + t904;
t1 = [m(2) * qJDD(1) + (-0.2e1 * t1198 + 0.2e1 * t1199 - 0.2e1 * t1202 + t941 + 0.2e1 * t1203) * t1275 + (-0.2e1 * t1200 + 0.2e1 * t1201 - 0.2e1 * t1204 + t917 + 0.2e1 * t1205) * t1274 + (-m(2) - m(5) - m(6) - m(7)) * g(3) + (t896 / 0.2e1 - g(3) + t913) * m(3) + (t1005 / 0.2e1 - g(3) + t1289) * m(4) + (0.2e1 * t1098 + 0.2e1 * t1109 + t917 + 0.2e1 * t1290) * t1273; ((qJD(2) * t999 + qJDD(2) * t996) * t888 + t1295) * t1221 / 0.2e1 + ((t1343 * t887 - t1368 * t889) * t888 + t1339 * t1221) * t1248 + ((t1347 * t887 - t1369 * t889) * t888 + t1340 * t1221) * t1263 + ((t1349 * t887 - t1370 * t889) * t888 + t1341 * t1221) * t1261 + t1221 * t884 * (t1221 * t816 + (qJD(2) * t991 + t817 * t894 + t818 * t892) * t888) + t545 * t1355 + t546 * t1356 + t749 * t1357 + ((-t844 * t550 + t845 * t552) * t756 + (-t844 * t549 + t845 * t551) * t757 + (-t844 * t753 + t845 * t754) * t854 + (t196 * t841 + t197 * t843) * qJD(3) + ((qJD(3) * t252 + t461 * t757 + t462 * t756 + t652 * t854) * t892 + t1287 * t894) * t888) * t1228 + (t245 * t884 + t428 * t883 + (qJD(2) * t1000 + qJDD(2) * t997) * t888 + t1296) * t1176 / 0.2e1 + (t1329 * t749 + (t1093 * t1311 + t1307 * t722 + t1308 * t844 + t1309 * t721 + t1310 * t766 + t1312 * t765) * t609 + t1332 * t546 + t1333 * t545 + (t1093 * t1326 + t1318 * t722 + t1320 * t844 + t1322 * t721 + t1324 * t766 + t1328 * t765) * t443 + (t1093 * t1325 + t1317 * t722 + t1319 * t844 + t1321 * t721 + t1323 * t766 + t1327 * t765) * t442) * t1249 + ((t1332 * t887 - t1333 * t889) * t888 + t1329 * t1221) * t1265 + (t1330 * t749 + (t1180 * t1311 + t1307 * t583 - t1308 * t969 + t1309 * t582 + t1310 * t629 + t1312 * t628) * t609 + t1334 * t546 + t1335 * t545 + (t1180 * t1326 + t1318 * t583 - t1320 * t969 + t1322 * t582 + t1324 * t629 + t1328 * t628) * t443 + (t1180 * t1325 + t1317 * t583 - t1319 * t969 + t1321 * t582 + t1323 * t629 + t1327 * t628) * t442) * t1264 + ((t1334 * t887 - t1335 * t889) * t888 + t1330 * t1221) * t1269 + (t1331 * t749 + (t1184 * t1311 + t1307 * t581 - t1308 * t968 + t1309 * t580 + t1310 * t627 + t1312 * t626) * t609 + t1336 * t546 + t1337 * t545 + (t1184 * t1326 + t1318 * t581 - t1320 * t968 + t1322 * t580 + t1324 * t627 + t1328 * t626) * t443 + (t1184 * t1325 + t1317 * t581 - t1319 * t968 + t1321 * t580 + t1323 * t627 + t1327 * t626) * t442) * t1262 + ((t1336 * t887 - t1337 * t889) * t888 + t1331 * t1221) * t1268 + ((-t1221 * t290 + t928) * t1282 + (-t1221 * t160 + t929) * t1276 + 0.2e1 * t29 * (t1221 * t292 + t1080) + (t1221 * t162 + t1087) * t1277 + t977 * t1283 + t979 * t1278 + ((t1018 * t30 + t1023 * t95 + t88 * t162 + t25 * t292) * t1095 + (t1018 * t29 + t1023 * t94 + t1008) * t1096) * t888) * t1274 + (t114 * (t1044 * t889 - t1221 * t467 - t1052) + t205 * (t1045 * t889 - t1221 * t329 - t1053) + t113 * (t1044 * t887 + t1221 * t468 + t679) + t204 * (t1045 * t887 + t1221 * t330 + t630) + t101 * ((t467 * t887 + t468 * t889) * t888 + t1126) + t188 * ((t329 * t887 + t330 * t889) * t888 + t1132)) * t1050 - (t1221 * t427 + t888 * t998) * t1057 / 0.2e1 + (t1221 * t428 + t888 * t997) * t874 / 0.2e1 + (t205 * (-t854 * t553 + t757 * t755 + (-t1173 * t467 + t655 * t841) * qJD(3) + t940) + t204 * (t554 * t854 - t755 * t756 + (t1173 * t468 - t655 * t843) * qJD(3) + t982) + t188 * (t553 * t756 - t554 * t757 + (t467 * t843 - t468 * t841) * qJD(3) + t1127)) * t1051 + t1221 * t883 * (t1221 * t788 + (t789 * t894 + t790 * t892) * t888) + ((t1180 * t303 + t305 * t666 + t307 * t667 - t399 * t969 + t401 * t602 + t403 * t603) * t565 + t118 * t678 + (t1180 * t302 + t304 * t666 + t306 * t667 - t398 * t969 + t400 * t602 + t402 * t603) * t566 + t117 * t677 + (t1180 * t470 + t471 * t666 + t472 * t667 - t577 * t969 + t578 * t602 + t579 * t603) * t729 + t138 * t815) * t1255 + ((t1093 * t303 + t305 * t782 + t307 * t783 + t399 * t844 + t401 * t750 - t403 * t976) * t565 + t128 * t678 + (t1093 * t302 + t304 * t782 + t306 * t783 + t398 * t844 + t400 * t750 - t402 * t976) * t566 + t127 * t677 + (t1093 * t470 + t471 * t782 + t472 * t783 + t577 * t844 + t578 * t750 - t579 * t976) * t729 + t184 * t815) * t1244 + (t252 * t1221 + (-t196 * t889 + t197 * t887) * t888) * t1234 + (t119 * t1221 + (t887 * t97 - t889 * t96) * t888) * t1235 + (t120 * t1221 + (t887 * t99 - t889 * t98) * t888) * t1237 + (t91 * t1221 + (-t66 * t889 + t67 * t887) * t888) * t1243 + ((t841 * t462 + t550 * t968 + t744 * t552) * t756 + (t841 * t461 + t549 * t968 + t744 * t551) * t757 + (t841 * t652 + t744 * t754 + t753 * t968) * t854 + (t1173 * t212 + t177 * t841 + t178 * t843) * qJD(3) + t1287 * t958) * t1236 + ((t843 * t462 + t550 * t969 + t746 * t552) * t756 + (t843 * t461 + t549 * t969 + t746 * t551) * t757 + (t843 * t652 + t746 * t754 + t753 * t969) * t854 + (t1173 * t213 + t179 * t841 + t180 * t843) * qJD(3) + t1287 * t962) * t1238 + (t126 * (-t815 * t309 - t729 * t404 + t677 * t474 + t566 * t586 + t909) + t125 * (t310 * t815 + t405 * t729 - t474 * t678 - t565 * t586 + t914) + t104 * (t309 * t678 - t310 * t677 + t404 * t565 - t405 * t566 + t935)) * t1049 + (0.2e1 * t78 * (-t1221 * t309 + t945) + 0.2e1 * t126 * (-t1221 * t173 + t946) + 0.2e1 * t77 * (t1221 * t310 + t1135) + 0.2e1 * t125 * (t1221 * t174 + t1144) + 0.2e1 * t37 * t1017 + 0.2e1 * t104 * t1020 + ((t104 * t174 + t1074 * t78 + t1083 * t126 + t37 * t310) * t1095 + (t104 * t173 + t1074 * t77 + t1083 * t125 + t37 * t309) * t1096) * t888) * t1275 - (((t683 * t894 + t685 * t892 + t994) * t887 - (t682 * t894 + t684 * t892 + t995) * t889) * t888 * t1118 + ((-t680 * t889 + t681 * t887 + t847 * t894 + t848 * t892 + t991) * t1118 + t846 * t884) * t1221) * t884 / 0.2e1 - m(4) * (g(1) * (t554 + t691) + g(2) * (t553 + t689) + g(3) * (t755 + t851)) - m(5) * (g(1) * (t691 + t405 - t1119) + g(2) * (t689 + t404 - t1120) + g(3) * (t586 + t851 + t807)) + (t129 * t1221 + (-t102 * t889 + t103 * t887) * t888) * t1227 + (t95 * (-t749 * t290 - t609 * t376 + t443 * t515 + t545 * t453 + t902) + t94 * (t292 * t749 + t378 * t609 - t442 * t515 - t453 * t546 + t906) + t88 * (t290 * t546 - t292 * t545 + t376 * t442 - t378 * t443 + t911)) * t1047 - (t408 * (t686 * t887 + t687 * t889) * t1118 + (t478 * (-t1175 * t849 - t1221 * t686) + t477 * (-t1176 * t849 + t1221 * t687)) * qJD(2)) * t1103 / 0.2e1 - t100 * t876 / 0.2e1 + (t883 * t996 + t884 * t999) * t888 / 0.2e1 - m(6) * (g(1) * (t942 + t378) + g(2) * (t943 + t376) + g(3) * (t944 + t515)) + (-t887 * ((-t1128 * t962 + t1130 * t843 + t1176 * t681) * t1176 - (-t1129 * t962 + t1131 * t843 + t1176 * t680) * t1175 + (-t1121 * t962 + t1122 * t843 + t1176 * t846) * t1221) / 0.2e1 + t889 * ((-t1128 * t958 + t1130 * t841 - t1175 * t681) * t1176 - (-t1129 * t958 + t1131 * t841 - t1175 * t680) * t1175 + (-t1121 * t958 + t1122 * t841 - t1175 * t846) * t1221) / 0.2e1) * t888 * qJD(2) ^ 2 + ((t1184 * t303 + t305 * t664 + t307 * t665 - t399 * t968 + t401 * t600 + t403 * t601) * t565 + t116 * t678 + (t1184 * t302 + t304 * t664 + t306 * t665 - t398 * t968 + t400 * t600 + t402 * t601) * t566 + t115 * t677 + (t1184 * t470 + t471 * t664 + t472 * t665 - t577 * t968 + t578 * t600 + t579 * t601) * t729 + t137 * t815) * t1253 + ((qJD(2) * t960 + qJDD(2) * t961) * t961 + t478 * t960 + (qJD(2) * t963 + qJDD(2) * t964) * t964 + t477 * t963 + (qJDD(1) + t913) * t971 + t408 * t992 * t888) * t1103 / 0.2e1 + (t184 * t1221 + (-t127 * t889 + t128 * t887) * t888) * t1260 - m(3) * (g(1) * t687 + g(2) * t686 + g(3) * t849) + t887 * (t1000 * t888 + t1221 * t245) * t1056 - t93 * t824 / 0.2e1 - t92 * t822 / 0.2e1 + (t212 * t1221 + (-t177 * t889 + t178 * t887) * t888) * t1246 + (t213 * t1221 + (-t179 * t889 + t180 * t887) * t888) * t1247 + (t86 * t1221 + (-t50 * t889 + t51 * t887) * t888) * t1252 + (t87 * t1221 + (-t52 * t889 + t53 * t887) * t888) * t1254 + (t137 * t1221 + (-t115 * t889 + t116 * t887) * t888) * t1266 + (t138 * t1221 + (-t117 * t889 + t118 * t887) * t888) * t1267 + t815 * t1270 + t678 * t1271 + t677 * t1272 - (t998 * t1099 + t244 * t884 + t427 * t883 + (0.2e1 * (-(-t1175 * t658 - t636 * t811 + t638 * t810 + t660 * t958 + t662 * t841) * t889 + (-t1175 * t659 - t637 * t811 + t639 * t810 + t661 * t958 + t663 * t841) * t887) * t888 + t1221 * t244) * qJD(2) + t1297) * t1175 / 0.2e1 + (t928 * t1284 + t929 * t1279 + t1080 * t1285 + t1087 * t1280 + t977 * t1286 + t979 * t1281 + ((t1006 * t24 + t1007 * t85 + t1146 * t22 + t1165 * t74) * t1095 + (t1006 * t23 + t1007 * t84 + t947) * t1096) * t888 + (t1146 * t1285 + t1147 * t1284 + t1165 * t1280 - t1166 * t1279) * t1221) * t1273 + (-t85 * (qJD(6) * t628 + t1133 * t443 + t1137 * t545 + t1141 * t609 + t1147 * t749 + t902) - t84 * (qJD(6) * t626 - t1133 * t442 - t1137 * t546 + t1140 * t609 + t1146 * t749 + t906) - t74 * (qJD(6) * t765 - t1140 * t443 - t1141 * t442 - t1146 * t545 - t1147 * t546 + t911) - g(1) * (t942 + t1140) - g(2) * (t943 - t1141) - g(3) * (t944 + t1133)) * m(7); ((t1116 * t1329 - t1339 * t894) * t888 - t1343 * t962 - t1368 * t958 + t1332 * t813 + t1333 * t811) * t1248 + ((t1116 * t1330 - t1340 * t894) * t888 - t1347 * t962 - t1369 * t958 + t1334 * t813 + t1335 * t811) * t1263 + ((t1116 * t1331 - t1341 * t894) * t888 - t1349 * t962 - t1370 * t958 + t1336 * t813 + t1337 * t811) * t1261 + t516 * t1355 + t517 * t1356 + t688 * t1357 - t1296 * t962 / 0.2e1 + (t1022 * t1282 + t978 * t1276 + t1152 * t1277 + t1154 * t1283 + t1026 * t1278 - (t1075 * t29 + t1084 * t94 + t1008) * t1097 + ((t95 * (-t535 + t1151) + t94 * t292) * t1030 + (t1294 * t29 + t1300 * t94 + t95 * t160 + t30 * t290) * t1094) * t888 + (t1075 * t1277 + t290 * t1278) * t813 + (t453 * t1276 + t1278 * t1294) * t811 - (t225 * t1276 + t1278 * t1300 + t453 * t1282 + t1294 * t1283) * t958) * t1274 + (t1304 * t844 + t1329 * t688 + (t1305 * t722 + t1306 * t721 + t1311 * t845) * t609 + t1332 * t517 + t1333 * t516 + (t1314 * t722 + t1316 * t721 + t1326 * t845) * t443 + (t1313 * t722 + t1315 * t721 + t1325 * t845) * t442) * t1249 + (-t1172 * t1329 - t1332 * t962 - t1333 * t958) * t1265 + (-t85 * (t1105 * t969 + t1134 * t443 + t1137 * t516 - t1143 * t609 + t1147 * t688 + t930) - t84 * (t1105 * t968 - t1134 * t442 - t1137 * t517 + t1142 * t609 + t1146 * t688 + t931) - t74 * (-t1105 * t844 - t1142 * t443 + t1143 * t442 - t1146 * t516 - t1147 * t517 + t932) - g(1) * (t1124 + t1142) - g(2) * (t1125 + t1143) - g(3) * (t1123 + t1134)) * m(7) + (-t1304 * t969 + t1330 * t688 + (t1305 * t583 + t1306 * t582 + t1311 * t746) * t609 + t1334 * t517 + t1335 * t516 + (t1314 * t583 + t1316 * t582 + t1326 * t746) * t443 + (t1313 * t583 + t1315 * t582 + t1325 * t746) * t442) * t1264 + (-t1172 * t1330 - t1334 * t962 - t1335 * t958) * t1269 + (-t1304 * t968 + t1331 * t688 + (t1305 * t581 + t1306 * t580 + t1311 * t744) * t609 + t1336 * t517 + t1337 * t516 + (t1314 * t581 + t1316 * t580 + t1326 * t744) * t443 + (t1313 * t581 + t1315 * t580 + t1325 * t744) * t442) * t1262 + (-t1172 * t1331 - t1336 * t962 - t1337 * t958) * t1268 + (t93 + t71 + t1345) * t813 / 0.2e1 + (t92 + t70 + t1346) * t811 / 0.2e1 - t1297 * t958 / 0.2e1 + ((t303 * t746 + t432 * t602 + t434 * t603) * t565 + (t302 * t746 + t431 * t602 + t433 * t603) * t566 + (t470 * t746 + t556 * t602 + t557 * t603) * t729 + (t117 * t744 + t118 * t746 + t138 * t845) * qJD(4) - t905 * t969) * t1255 + ((t303 * t845 + t432 * t750 - t434 * t976) * t565 + (t302 * t845 + t431 * t750 - t433 * t976) * t566 + (t470 * t845 + t556 * t750 - t557 * t976) * t729 + (t127 * t744 + t128 * t746 + t184 * t845) * qJD(4) + t905 * t844) * t1244 + (t744 * t921 - t920 * t968 - t954 * t958) * t1236 + (t1022 * t1284 + t978 * t1279 + t1152 * t1280 + t1154 * t1286 + t1026 * t1281 - (t1019 * t23 + t1024 * t84 + t947) * t1097 + ((t85 * (-t535 + t1079) + t84 * t1146) * t1030 + (t1021 * t23 + t1027 * t84 - t1288) * t1094) * t888 + 0.2e1 * (t1019 * t84 - t1147 * t74) * t813 + 0.2e1 * (t1021 * t74 + t1137 * t85) * t811 - 0.2e1 * (t1021 * t22 + t1027 * t74 + t1137 * t24 + t1159 * t85) * t958) * t1273 + ((t303 * t744 + t432 * t600 + t434 * t601) * t565 + (t302 * t744 + t431 * t600 + t433 * t601) * t566 + (t470 * t744 + t556 * t600 + t557 * t601) * t729 + (t115 * t744 + t116 * t746 + t137 * t845) * qJD(4) - t905 * t968) * t1253 + (t126 * (-t435 * t729 + t560 * t566 + (-t309 * t845 + t474 * t744) * qJD(4) + t1031) + t125 * (t436 * t729 - t560 * t565 + (t310 * t845 - t474 * t746) * qJD(4) + t1032) + t104 * (t435 * t565 - t436 * t566 + (t309 * t746 - t310 * t744) * qJD(4) + t1035)) * t1049 + (t205 * (-t532 * t854 + t696 * t757) + t204 * (t533 * t854 - t696 * t756) + t188 * (t532 * t756 - t533 * t757)) * t1051 + (-t1172 * t954 + t844 * t920 + t845 * t921) * t1228 + (t746 * t921 - t920 * t969 - t954 * t962) * t1238 - m(6) * (g(1) * (t426 + t1124) + g(2) * (t424 + t1125) + g(3) * (t539 + t1123)) + (t95 * (-t290 * t688 - t424 * t609 + t443 * t539 + t453 * t516 + t930) + t94 * (t292 * t688 + t426 * t609 - t442 * t539 - t453 * t517 + t931) + t88 * (t290 * t517 - t292 * t516 + t424 * t442 - t426 * t443 + t932)) * t1047 + (t100 + t79 + t1342) * t892 * t1056 - m(5) * (g(1) * (t436 + t536) + g(2) * (t435 + t534) + g(3) * (t560 + t707)) - t1295 * t1172 / 0.2e1 + t1112 * t1270 + t1113 * t1271 + t1114 * t1272 - m(4) * (g(1) * t533 + g(2) * t532 + g(3) * t696) + (t114 * (t1172 * t467 - t655 * t958) + t205 * (-t490 * t958 + t655 * t811 + (-t1116 * t467 + t329 * t894) * t888) + t113 * (-t1172 * t468 + t655 * t962) + t204 * (t490 * t962 - t655 * t813 + (t1116 * t468 - t330 * t894) * t888) + t101 * (-t467 * t962 + t468 * t958) + t188 * (-t329 * t962 + t330 * t958 + t467 * t813 - t468 * t811)) * t1050 + (-t1172 * t252 - t196 * t958 - t197 * t962) * t1234 + (t177 * t811 + t178 * t813 - t958 * t96 - t962 * t97 + (t1116 * t212 - t119 * t894) * t888) * t1235 + (t179 * t811 + t180 * t813 - t958 * t98 - t962 * t99 + (t1116 * t213 - t120 * t894) * t888) * t1237 + (t127 * t811 + t128 * t813 - t66 * t958 - t67 * t962 + (t1116 * t184 - t894 * t91) * t888) * t1243 + (-t102 * t958 - t103 * t962 + t196 * t811 + t197 * t813 + (t1116 * t252 - t129 * t894) * t888) * t1227 + (-t1172 * t184 - t127 * t958 - t128 * t962) * t1260 + (-t1172 * t212 - t177 * t958 - t178 * t962) * t1246 + (-t1172 * t213 - t179 * t958 - t180 * t962) * t1247 + (t115 * t811 + t116 * t813 - t50 * t958 - t51 * t962 + (t1116 * t137 - t86 * t894) * t888) * t1252 + (t117 * t811 + t118 * t813 - t52 * t958 - t53 * t962 + (t1116 * t138 - t87 * t894) * t888) * t1254 + (-t115 * t958 - t116 * t962 - t1172 * t137) * t1266 + (-t117 * t958 - t1172 * t138 - t118 * t962) * t1267 + (t78 * (t1172 * t309 - t474 * t958 + t1136) + t126 * (-t237 * t958 + t474 * t811 + (t173 * t894 + (-t309 - t535) * t1116) * t888 + t1077) + t77 * (-t1138 * t962 + t1149 * t1172) + t125 * (t491 - t1156 * t962 + t1138 * t813 + (t1116 * t310 + t1162 * t894) * t888) + t37 * (-t1149 * t958 - t309 * t962 - t473) + t104 * (t1149 * t811 - t1162 * t958 - t173 * t962 + t309 * t813 + t1148)) * t1048; (t750 * t922 + t844 * t955 - t923 * t976) * t1244 + (t600 * t922 + t601 * t923 - t955 * t968) * t1253 + t79 * t1240 + t14 * t1241 + t13 * t1242 + ((-t381 - t1145) * t1284 + (t258 + t1153) * t1285 + (-t238 + t1155) * t1286 + 0.2e1 * (t24 * t1079 + t85 * (-t186 - t1166)) * t844 - 0.2e1 * (t1076 * t23 + t1086 * t84) * t969 - 0.2e1 * (t1078 * t22 + t1088 * t74) * t968 + (t1078 * t594 + t1029 + t1163) * t1281 + (t1076 * t596 + t1028 + t1161) * t1280 + (t1079 * t747 + t1025 + t1157) * t1279) * t1273 + (t126 * (-t396 * t729 + t544 * t566) + t125 * (t397 * t729 - t544 * t565) + t104 * (t396 * t565 - t397 * t566)) * t1049 + t21 * t1229 - m(5) * (g(1) * t397 + g(2) * t396 + g(3) * t544) - m(6) * (g(1) * (t593 + t361) + g(2) * (t592 + t357) + g(3) * (t742 + t501)) + (t95 * (t1034 + t1037) + t94 * (t1033 + t1038) + t88 * (t1036 + t1039)) * t1047 + (t127 * t594 + t128 * t596 + t184 * t747 - t66 * t968 - t67 * t969 + t844 * t91) * t1243 + (t78 * (-t309 * t844 - t474 * t968) + t126 * (-t173 * t844 - t237 * t968 - t309 * t747 + t474 * t594) + t77 * (t310 * t844 + t474 * t969) + t125 * (t174 * t844 + t237 * t969 + t310 * t747 - t474 * t596) + t37 * (-t309 * t969 + t310 * t968) + t104 * (-t173 * t969 + t174 * t968 + t309 * t596 - t310 * t594)) * t1048 + (-t127 * t968 - t128 * t969 + t184 * t844) * t1260 + (t115 * t594 + t116 * t596 + t137 * t747 - t50 * t968 - t51 * t969 + t844 * t86) * t1252 + (t117 * t594 + t118 * t596 + t138 * t747 - t52 * t968 - t53 * t969 + t844 * t87) * t1254 + (-t115 * t968 - t116 * t969 + t137 * t844) * t1266 + (-t117 * t968 - t118 * t969 + t138 * t844) * t1267 + (t602 * t922 + t603 * t923 - t955 * t969) * t1255 + t71 * t1250 + t70 * t1251 + t903 + (t30 * (t1151 * t844 - t380 - t381) + t95 * ((-t160 - t186) * t844 + t1151 * t747 + t1157 + t1160) + t29 * (-t1139 * t969 + t258 + t263) + t94 * (t1139 * t596 - t1158 * t969 + t1161 + t1167) + t25 * (-t1150 * t968 - t238 - t241) + t88 * (t1150 * t594 - t1164 * t968 + t1163 + t1168)) * t1100 / 0.2e1 + (-g(1) * (t593 + t986) - g(2) * (t592 + t987) - g(3) * (t742 + t985) - t85 * (t1034 + t1293) - t84 * (t1033 + t1292) - t74 * (t1036 + t1291)) * m(7); (-t24 * t1145 + t23 * t1153 + t22 * (t1146 * t968 + t1155) - g(1) * t986 - g(2) * t987 - g(3) * t985 + (t1147 * t747 + t1025 - t1293) * t85 + t1288 * t844 + (-t1137 * t596 + t1028 - t1292) * t84 - (-t1137 * t23 - t1159 * t84) * t969 + (-t1146 * t594 + t1165 * t968 + t1029 - t1291) * t74) * m(7) + (t30 * (-t290 * t844 - t380) + t29 * (t453 * t969 + t263) + t25 * (t292 * t968 - t241) - g(1) * t361 - g(2) * t357 - g(3) * t501 + (-t160 * t844 - t290 * t747 - t1037 + t1160) * t95 + (t225 * t969 - t453 * t596 - t1038 + t1167) * t94 + (t162 * t968 - t292 * t594 - t1039 + t1168) * t88) * m(6) + t903; (t84 * t294 + t85 * t296 + t74 * t457 + (t442 * t84 - t443 * t85 - g(3) + t22) * t721 + (t443 * t74 - t609 * t84 - g(1) + t24) * t582 + (-t442 * t74 + t609 * t85 - g(2) + t23) * t580) * m(7);];
tau  = t1;
