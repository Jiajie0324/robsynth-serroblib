% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR6_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:42:56
% EndTime: 2019-03-09 10:43:10
% DurationCPUTime: 5.94s
% Computational Cost: add. (7194->376), mult. (19820->678), div. (0->0), fcn. (19537->10), ass. (0->208)
t108 = sin(qJ(4));
t243 = pkin(4) + pkin(10);
t193 = t243 * t108;
t111 = cos(qJ(4));
t218 = qJ(5) * t111;
t265 = t193 - t218;
t264 = t243 * t111;
t112 = cos(qJ(2));
t106 = sin(pkin(6));
t206 = qJD(3) * t106;
t109 = sin(qJ(2));
t178 = t106 * (-pkin(8) - qJ(3));
t221 = cos(pkin(6));
t189 = pkin(1) * t221;
t94 = t112 * t189;
t256 = t109 * t178 + t94;
t124 = t256 * qJD(2) + t112 * t206;
t93 = t109 * t189;
t125 = -t109 * t206 + (t112 * t178 - t93) * qJD(2);
t219 = sin(pkin(11));
t220 = cos(pkin(11));
t118 = t220 * t124 + t219 * t125;
t142 = t220 * t109 + t219 * t112;
t139 = t106 * t142;
t216 = t106 * t112;
t176 = t219 * t109;
t177 = t220 * t112;
t71 = (-t177 + t176) * t106;
t122 = t106 * pkin(1) + pkin(2) * t216 - t71 * pkin(3) + pkin(9) * t139;
t263 = -qJD(4) * t122 + t118;
t59 = t221 * pkin(2) + t256;
t84 = pkin(8) * t216 + t93;
t67 = qJ(3) * t216 + t84;
t42 = t219 * t59 + t220 * t67;
t132 = t221 * pkin(9) + t42;
t162 = qJD(2) * t177;
t209 = qJD(2) * t106;
t89 = t176 * t209;
t145 = t106 * t162 - t89;
t208 = qJD(2) * t109;
t181 = t106 * t208;
t171 = pkin(2) * t181;
t137 = qJD(2) * t142;
t68 = t106 * t137;
t262 = -t68 * pkin(3) + pkin(9) * t145 + qJD(4) * t132 - t171;
t130 = t108 * t132;
t190 = -t112 * pkin(2) - pkin(1);
t261 = t130 - t111 * (-pkin(9) * t142 + t190) * t106;
t107 = sin(qJ(6));
t200 = qJD(6) * t111;
t183 = t107 * t200;
t110 = cos(qJ(6));
t204 = qJD(4) * t110;
t184 = t108 * t204;
t80 = t183 + t184;
t128 = -t221 * t108 - t111 * t139;
t135 = qJD(4) * t139;
t174 = t221 * qJD(4);
t40 = -t108 * t135 + (t174 + t145) * t111;
t98 = qJD(4) * t108;
t147 = -t40 * t111 - t128 * t98;
t140 = t145 * t108;
t120 = t108 * t174 + t111 * t135 + t140;
t57 = t108 * t139 - t221 * t111;
t99 = qJD(4) * t111;
t252 = -t108 * t120 - t57 * t99;
t260 = t252 - t147;
t259 = t252 + t147;
t258 = 0.2e1 * t145;
t257 = -t68 * qJ(5) - t71 * qJD(5);
t83 = -t109 * t106 * pkin(8) + t94;
t31 = t219 * t124 - t220 * t125;
t13 = pkin(4) * t120 - t40 * qJ(5) + qJD(5) * t128 + t31;
t21 = -t71 * pkin(4) + t111 * t122 + t130;
t242 = t128 * pkin(5);
t255 = -pkin(10) * t120 - qJD(6) * (-t71 * pkin(10) + t21 - t242) - t13;
t105 = t111 ^ 2;
t173 = qJD(4) * (t108 ^ 2 - t105);
t102 = t107 ^ 2;
t104 = t110 ^ 2;
t212 = t102 - t104;
t172 = t212 * qJD(6);
t254 = 0.2e1 * t57 * t120;
t239 = pkin(3) * t111;
t253 = -t242 + (-t239 - t243) * t71 + t261;
t251 = t120 * t71 + t68 * t57;
t182 = t110 * t200;
t250 = -t107 * t147 - t128 * t182;
t96 = t219 * pkin(2) + pkin(9);
t191 = t96 * t99;
t192 = t96 * t98;
t223 = t111 * t96;
t227 = t108 * t96;
t249 = -t120 * t223 - t128 * t191 + t57 * t192 + t40 * t227;
t203 = qJD(5) * t111;
t214 = t108 * qJ(5);
t240 = pkin(5) + t96;
t86 = t240 * t111;
t248 = qJD(4) * (t214 + t264) - qJD(6) * t86 - t203;
t188 = t240 * t108;
t168 = t110 * t188;
t97 = -t220 * pkin(2) - pkin(3);
t144 = t97 - t214;
t72 = t144 - t264;
t50 = -t107 * t72 + t168;
t51 = t107 * t188 + t110 * t72;
t152 = t107 * t50 - t110 * t51;
t185 = t107 * t99;
t198 = t108 * qJD(5);
t202 = qJD(6) * t107;
t27 = t72 * t202 - t110 * (t265 * qJD(4) - t198) - t240 * t185 - qJD(6) * t168;
t201 = qJD(6) * t110;
t28 = -t72 * t201 + (-qJD(6) * t240 + qJD(5)) * t107 * t108 + (-t107 * t193 + (t107 * qJ(5) + t110 * t240) * t111) * qJD(4);
t10 = -t152 * qJD(6) - t107 * t27 + t110 * t28;
t44 = t107 * t71 - t57 * t110;
t224 = t110 * t44;
t19 = t107 * t120 + t68 * t110 + t57 * t201 - t71 * t202;
t226 = t110 * t19;
t45 = t107 * t57 + t110 * t71;
t229 = t107 * t45;
t18 = qJD(6) * t45 + t107 * t68 - t120 * t110;
t230 = t107 * t18;
t247 = qJD(6) * (-t224 + t229) - t226 - t230;
t115 = t263 * t108 + t262 * t111;
t241 = t68 * pkin(4);
t8 = t115 - t241;
t114 = t40 * pkin(5) - t68 * pkin(10) + t8;
t41 = -t219 * t67 + t220 * t59;
t34 = -t221 * pkin(3) - t41;
t134 = qJ(5) * t128 + t34;
t16 = t243 * t57 + t134;
t1 = -t107 * t114 + t255 * t110 + t16 * t202;
t5 = -t107 * t16 + t253 * t110;
t6 = t253 * t107 + t110 * t16;
t159 = t107 * t5 - t110 * t6;
t2 = t255 * t107 + t110 * t114 - t16 * t201;
t133 = -t159 * qJD(6) - t1 * t107 + t2 * t110;
t246 = 0.2e1 * t120 * t128 - 0.2e1 * t40 * t57;
t245 = -t111 * t140 + (t57 * t108 + t111 * t128) * qJD(4);
t101 = t106 ^ 2;
t244 = 0.2e1 * qJD(5);
t238 = t111 * pkin(4);
t11 = t262 * t108 - t263 * t111;
t7 = t11 + t257;
t4 = -pkin(5) * t120 - t7;
t237 = t4 * t107;
t236 = t4 * t110;
t233 = t19 * t108 + t45 * t99;
t24 = -t108 * t122 + t111 * t132;
t231 = t80 * t128;
t228 = t108 * t18;
t225 = t110 * t40;
t217 = qJD(4) * t44;
t215 = t107 * t243;
t213 = t110 * t243;
t211 = t102 + t104;
t207 = qJD(2) * t112;
t205 = qJD(4) * t107;
t199 = qJD(6) * t243;
t29 = -0.2e1 * t128 * t40;
t49 = 0.2e1 * t71 * t68;
t197 = 0.2e1 * qJD(4) * t97;
t196 = t71 * t227;
t194 = t68 * t223;
t187 = t101 * t207;
t186 = t107 * t98;
t180 = t108 * t99;
t179 = t107 * t201;
t175 = t108 * t211;
t90 = 0.2e1 * t180;
t170 = t45 * t184;
t167 = t107 * t184;
t166 = t105 * t179;
t165 = t109 * t187;
t20 = -qJ(5) * t71 - t24;
t163 = t221 * t209;
t160 = t107 * t6 + t110 * t5;
t158 = t8 * t108 - t7 * t111;
t157 = -t128 * t68 + t40 * t71;
t153 = t107 * t51 + t110 * t50;
t151 = t108 * t115 - t11 * t111;
t25 = t108 * t40 - t128 * t99;
t47 = t108 * t68 + t71 * t99;
t146 = -t107 * t40 + t128 * t201;
t143 = -t71 * t191 - t68 * t227;
t76 = t240 * t98;
t141 = t265 * qJD(6) - t76;
t136 = t203 + (-t214 - t238) * qJD(4);
t100 = qJ(5) * t244;
t91 = -0.2e1 * t180;
t88 = t190 * t106;
t87 = -0.2e1 * t173;
t85 = t144 - t238;
t82 = t182 - t186;
t81 = t108 * t201 + t185;
t79 = -t108 * t202 + t110 * t99;
t78 = qJD(4) * t175;
t77 = t198 + (-pkin(4) * t108 + t218) * qJD(4);
t75 = t84 * qJD(2);
t74 = t83 * qJD(2);
t62 = -t111 * t172 - t167;
t46 = -t111 * t68 + t71 * t98;
t33 = t44 * t186;
t26 = t128 * t202 + t225;
t23 = t71 * t239 - t261;
t22 = t57 * pkin(4) + t134;
t15 = -pkin(5) * t57 - t20;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t165, 0.2e1 * (-t109 ^ 2 + t112 ^ 2) * t101 * qJD(2), 0.2e1 * t112 * t163, -0.2e1 * t165, -0.2e1 * t109 * t163, 0, -0.2e1 * t101 * pkin(1) * t208 - 0.2e1 * t75 * t221, -0.2e1 * pkin(1) * t187 - 0.2e1 * t74 * t221, 0.2e1 * (t109 * t75 + t112 * t74 + (-t109 * t84 - t112 * t83) * qJD(2)) * t106, 0.2e1 * t74 * t84 - 0.2e1 * t75 * t83, t139 * t258, 0.2e1 * t89 * t71 + 0.2e1 * (-t142 * t68 - t71 * t162) * t106, t221 * t258, t49, -0.2e1 * t68 * t221, 0, 0.2e1 * t71 * t171 - 0.2e1 * t31 * t221 + 0.2e1 * t88 * t68, 0.2e1 * t101 * t109 * pkin(2) * t137 - 0.2e1 * t118 * t221 + 0.2e1 * t88 * t145, -0.2e1 * t118 * t71 + 0.2e1 * t31 * t139 - 0.2e1 * t145 * t41 - 0.2e1 * t42 * t68, 0.2e1 * t118 * t42 + 0.2e1 * t88 * t171 - 0.2e1 * t41 * t31, t29, t246, 0.2e1 * t157, t254, -0.2e1 * t251, t49, -0.2e1 * t115 * t71 + 0.2e1 * t120 * t34 + 0.2e1 * t23 * t68 + 0.2e1 * t31 * t57, 0.2e1 * t11 * t71 - 0.2e1 * t128 * t31 - 0.2e1 * t24 * t68 + 0.2e1 * t34 * t40, 0.2e1 * t11 * t57 - 0.2e1 * t115 * t128 - 0.2e1 * t120 * t24 - 0.2e1 * t23 * t40, -0.2e1 * t11 * t24 - 0.2e1 * t115 * t23 + 0.2e1 * t31 * t34, t49, -0.2e1 * t157, 0.2e1 * t251, t29, t246, t254, 0.2e1 * t120 * t20 - 0.2e1 * t128 * t8 + 0.2e1 * t21 * t40 + 0.2e1 * t7 * t57, -0.2e1 * t120 * t22 - 0.2e1 * t13 * t57 + 0.2e1 * t21 * t68 + 0.2e1 * t8 * t71, 0.2e1 * t128 * t13 - 0.2e1 * t20 * t68 - 0.2e1 * t22 * t40 - 0.2e1 * t7 * t71, 0.2e1 * t13 * t22 + 0.2e1 * t20 * t7 + 0.2e1 * t21 * t8, 0.2e1 * t45 * t19, -0.2e1 * t18 * t45 - 0.2e1 * t19 * t44, -0.2e1 * t128 * t19 + 0.2e1 * t40 * t45, 0.2e1 * t44 * t18, 0.2e1 * t128 * t18 - 0.2e1 * t40 * t44, t29, -0.2e1 * t128 * t2 + 0.2e1 * t15 * t18 + 0.2e1 * t4 * t44 + 0.2e1 * t40 * t5, -0.2e1 * t1 * t128 + 0.2e1 * t15 * t19 + 0.2e1 * t4 * t45 - 0.2e1 * t40 * t6, 0.2e1 * t1 * t44 - 0.2e1 * t18 * t6 - 0.2e1 * t19 * t5 - 0.2e1 * t2 * t45, -0.2e1 * t1 * t6 + 0.2e1 * t15 * t4 + 0.2e1 * t2 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106 * t207, 0, -t181, 0, -t75, -t74, 0, 0, 0, 0, t145, 0, -t68, 0, -t31, -t118 (-t220 * t145 - t219 * t68) * pkin(2) (t118 * t219 - t31 * t220) * pkin(2), t25, t260, t47, t245, -t46, 0, -t31 * t111 + t120 * t97 + t34 * t98 + t143, -t194 + t108 * t31 + t40 * t97 + (t111 * t34 + t196) * qJD(4), -t23 * t99 - t24 * t98 + t151 + t249, t31 * t97 + ((-t24 * t108 - t23 * t111) * qJD(4) + t151) * t96, 0, -t47, t46, t25, t260, t245, t20 * t98 + t21 * t99 + t158 + t249, t13 * t111 - t120 * t85 - t22 * t98 + t77 * t57 - t143, t194 - t108 * t13 - t40 * t85 - t128 * t77 + (-t111 * t22 - t196) * qJD(4), t13 * t85 - t22 * t77 + ((t20 * t108 + t21 * t111) * qJD(4) + t158) * t96, -t45 * t182 + (-t111 * t19 + t45 * t98) * t107, t170 - t33 + (t230 - t226 + (t224 + t229) * qJD(6)) * t111, t233 - t250, -t44 * t183 + (t111 * t18 - t44 * t98) * t110, -t228 + (-t217 - t225) * t111 - t231, t25, t18 * t86 - t28 * t128 + t40 * t50 - t44 * t76 + (-t15 * t204 + t2) * t108 + (qJD(4) * t5 - t15 * t202 + t236) * t111, t19 * t86 - t27 * t128 - t40 * t51 - t45 * t76 + (t15 * t205 + t1) * t108 + (-qJD(4) * t6 - t15 * t201 - t237) * t111, -t18 * t51 - t19 * t50 + t27 * t44 - t28 * t45 - t159 * t98 + (qJD(6) * t160 + t1 * t110 + t107 * t2) * t111, -t1 * t51 - t15 * t76 + t2 * t50 - t27 * t6 + t28 * t5 + t4 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, t87, 0, t91, 0, 0, t108 * t197, t111 * t197, 0, 0, 0, 0, 0, t90, t87, t91, 0, -0.2e1 * t111 * t77 - 0.2e1 * t85 * t98, 0.2e1 * t108 * t77 - 0.2e1 * t85 * t99, -0.2e1 * t85 * t77, -0.2e1 * t102 * t180 + 0.2e1 * t166, -0.2e1 * t105 * t172 - 0.4e1 * t111 * t167, 0.2e1 * t107 * t173 - 0.2e1 * t108 * t182, -0.2e1 * t104 * t180 - 0.2e1 * t166, 0.2e1 * t108 * t183 + 0.2e1 * t110 * t173, t90, 0.2e1 * (-t204 * t86 + t28) * t108 + 0.2e1 * (qJD(4) * t50 - t76 * t110 - t202 * t86) * t111, 0.2e1 * (t205 * t86 + t27) * t108 + 0.2e1 * (-qJD(4) * t51 + t76 * t107 - t201 * t86) * t111, -0.2e1 * t152 * t98 + 0.2e1 * (qJD(6) * t153 + t107 * t28 + t110 * t27) * t111, -0.2e1 * t27 * t51 + 0.2e1 * t28 * t50 - 0.2e1 * t76 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, t145, 0, t171, 0, 0, 0, 0, 0, 0, -t46, -t47, t259, -t108 * t11 - t111 * t115 + (-t108 * t23 + t111 * t24) * qJD(4), 0, 0, 0, 0, 0, 0, t259, t46, t47, -t108 * t7 - t111 * t8 + (t108 * t21 - t111 * t20) * qJD(4), 0, 0, 0, 0, 0, 0, t228 + (t217 - t225) * t111 - t231, t233 + t250, -t247 * t111 - t170 - t33 (qJD(4) * t160 + t4) * t108 + (qJD(4) * t15 - t133) * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(4) * t153 - t76) * t108 + (qJD(4) * t86 - t10) * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (0.1e1 - t211) * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, 0, -t120, t68, -t115, t11, 0, 0, t68, -t40, t120, 0, 0, 0, -t40 * pkin(4) - qJ(5) * t120 - qJD(5) * t57, t115 - 0.2e1 * t241, -t7 - t257, -pkin(4) * t8 - qJ(5) * t7 - qJD(5) * t20, -t45 * t202 + t226, -t107 * t19 - t110 * t18 + (t107 * t44 - t110 * t45) * qJD(6), t26, t201 * t44 + t230, t146, 0, -t40 * t213 + qJ(5) * t18 + qJD(5) * t44 + t237 + (t110 * t15 - t128 * t215) * qJD(6), t40 * t215 + qJ(5) * t19 + qJD(5) * t45 + t236 + (-t107 * t15 - t128 * t213) * qJD(6) (t19 * t243 - t2) * t110 + (t18 * t243 + t1) * t107 + ((t243 * t44 - t6) * t110 + (-t243 * t45 + t5) * t107) * qJD(6), t4 * qJ(5) + t15 * qJD(5) - t133 * t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, 0, -t98, 0, -t191, t192, 0, 0, 0, -t99, t98, 0, 0, 0, t136, t191, -t192, t136 * t96, -t62, 0.4e1 * t111 * t179 - t212 * t98, t79, t62, -t81, 0, t141 * t107 - t248 * t110, t248 * t107 + t141 * t110, -t10, -t76 * qJ(5) + t86 * qJD(5) - t10 * t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, -t99, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, t99, t77, 0, 0, 0, 0, 0, 0, t81, t79, -t78, t198 + (-t175 * t243 + t218) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, t100, -0.2e1 * t179, 0.2e1 * t172, 0, 0.2e1 * t179, 0, 0, 0.2e1 * qJ(5) * t201 + 0.2e1 * t107 * qJD(5), -0.2e1 * qJ(5) * t202 + 0.2e1 * qJD(5) * t110, 0, t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, t68, 0, t8, 0, 0, 0, 0, 0, 0, t26, t146, t247, t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, 0, 0, t191, 0, 0, 0, 0, 0, 0, t79, -t81, 0, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, -t18, t40, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, 0, t80, t99, t28, t27, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, t82, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202, 0, -t201, 0, t107 * t199, t110 * t199, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t202, -t201, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
