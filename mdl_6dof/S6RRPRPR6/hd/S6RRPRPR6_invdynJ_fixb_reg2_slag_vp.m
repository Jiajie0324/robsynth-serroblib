% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRPR6_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR6_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR6_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR6_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR6_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR6_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:43:03
% EndTime: 2019-03-09 10:43:31
% DurationCPUTime: 17.11s
% Computational Cost: add. (18038->817), mult. (50982->1007), div. (0->0), fcn. (41698->12), ass. (0->399)
t284 = sin(qJ(4));
t442 = qJD(4) * t284;
t281 = sin(pkin(11));
t282 = sin(pkin(6));
t289 = cos(qJ(2));
t489 = cos(pkin(11));
t410 = t289 * t489;
t382 = t282 * t410;
t285 = sin(qJ(2));
t446 = qJD(1) * t282;
t427 = t285 * t446;
t213 = -qJD(1) * t382 + t281 * t427;
t467 = t213 * t284;
t555 = t442 + t467;
t205 = qJD(4) + t213;
t490 = cos(pkin(6));
t411 = t289 * t490;
t270 = pkin(1) * t411;
t265 = qJD(1) * t270;
t511 = pkin(8) + qJ(3);
t419 = t511 * t282;
t388 = t285 * t419;
t197 = -qJD(1) * t388 + t265;
t412 = t285 * t490;
t269 = pkin(1) * t412;
t458 = t282 * t289;
t198 = (t458 * t511 + t269) * qJD(1);
t408 = t489 * t198;
t116 = t197 * t281 + t408;
t554 = pkin(4) * t555 - qJD(5) * t284 - t116;
t288 = cos(qJ(4));
t553 = t554 + t205 * (pkin(10) * t284 - qJ(5) * t288);
t188 = t281 * t198;
t117 = t197 * t489 - t188;
t111 = t284 * t117;
t242 = -t289 * t281 - t285 * t489;
t321 = qJD(1) * t242;
t217 = t282 * t321;
t391 = pkin(2) * t427;
t128 = -pkin(3) * t217 + pkin(9) * t213 + t391;
t519 = pkin(2) * t281;
t274 = pkin(9) + t519;
t512 = pkin(5) + t274;
t240 = t512 * t288;
t522 = pkin(4) + pkin(10);
t552 = qJD(4) * t240 - t111 - (-pkin(5) * t213 - t128) * t288 - t522 * t217;
t283 = sin(qJ(6));
t287 = cos(qJ(6));
t137 = -t217 * t283 + t287 * t467;
t441 = qJD(4) * t287;
t367 = t284 * t441 + t137;
t437 = qJD(6) * t288;
t551 = t283 * t437 + t367;
t276 = t289 * pkin(2) + pkin(1);
t231 = -t276 * t446 + qJD(3);
t302 = pkin(3) * t213 + pkin(9) * t217 + t231;
t393 = t490 * qJDD(1);
t350 = t393 + qJDD(2);
t413 = qJD(2) * t511;
t332 = qJD(3) * t289 - t285 * t413;
t405 = t490 * qJD(1);
t369 = qJD(2) * t405;
t351 = pkin(1) * t369;
t383 = pkin(1) * t393;
t434 = qJDD(1) * t289;
t414 = t282 * t434;
t429 = pkin(8) * t414 + t285 * t383 + t289 * t351;
t108 = (qJ(3) * t434 + qJD(1) * t332) * t282 + t429;
t264 = t289 * t383;
t325 = -t285 * t351 + t264;
t435 = qJDD(1) * t285;
t444 = qJD(3) * t285;
t94 = t350 * pkin(2) + (-t511 * t435 + (-t289 * t413 - t444) * qJD(1)) * t282 + t325;
t51 = t489 * t108 + t281 * t94;
t550 = -pkin(9) * t350 - qJD(4) * t302 - t51;
t354 = t405 + qJD(2);
t180 = -t288 * t217 + t284 * t354;
t396 = t180 * t205;
t549 = t284 * t396;
t318 = pkin(2) * t490 - t388;
t182 = qJD(2) * pkin(2) + qJD(1) * t318 + t265;
t98 = t281 * t182 + t408;
t90 = pkin(9) * t354 + t98;
t52 = t284 * t90 - t288 * t302;
t451 = qJD(5) + t52;
t138 = -t217 * t287 - t283 * t467;
t548 = -t283 * t442 + t138;
t380 = qJD(2) * t410;
t436 = qJD(1) * qJD(2);
t417 = t285 * t436;
t386 = t282 * t417;
t543 = t281 * t386 + (-qJD(1) * t380 + qJDD(1) * t242) * t282;
t547 = -qJD(4) * t354 + t543;
t286 = sin(qJ(1));
t290 = cos(qJ(1));
t409 = t290 * t490;
t546 = -t286 * t285 + t289 * t409;
t241 = t281 * t285 - t410;
t365 = t490 * t489;
t450 = -t281 * t411 - t285 * t365;
t166 = t286 * t241 + t290 * t450;
t457 = t282 * t290;
t139 = -t166 * t284 + t288 * t457;
t305 = -t281 * t412 + t289 * t365;
t167 = t286 * t242 + t290 * t305;
t545 = t139 * t283 - t167 * t287;
t544 = t139 * t287 + t167 * t283;
t278 = t282 ^ 2;
t542 = 0.2e1 * t278;
t452 = pkin(5) * t180 + t451;
t29 = -t205 * t522 + t452;
t178 = -t217 * t284 - t288 * t354;
t97 = t182 * t489 - t188;
t89 = -pkin(3) * t354 - t97;
t297 = -t180 * qJ(5) + t89;
t37 = t178 * t522 + t297;
t360 = t283 * t37 - t287 * t29;
t247 = qJDD(1) * t382;
t320 = qJD(2) * t242;
t415 = t281 * t435;
t151 = -t247 + (-qJD(1) * t320 + t415) * t282;
t150 = qJDD(4) + t151;
t440 = qJD(4) * t288;
t432 = pkin(2) * t386 + qJDD(3);
t520 = pkin(1) * t282;
t68 = -pkin(2) * t414 + t151 * pkin(3) + pkin(9) * t543 - qJDD(1) * t520 + t432;
t12 = t284 * t550 + t288 * t68 - t90 * t440;
t364 = qJDD(5) - t12;
t77 = -t217 * t442 - t284 * t350 + t288 * t547;
t6 = -pkin(5) * t77 - t150 * t522 + t364;
t507 = t281 * t108 - t489 * t94;
t46 = -pkin(3) * t350 + t507;
t298 = t77 * qJ(5) - t180 * qJD(5) + t46;
t249 = t288 * t350;
t78 = qJD(4) * t180 - t284 * t543 - t249;
t9 = t522 * t78 + t298;
t1 = -t360 * qJD(6) + t283 * t6 + t287 * t9;
t177 = qJD(6) + t180;
t541 = t177 * t360 + t1;
t14 = t283 * t29 + t287 * t37;
t2 = -qJD(6) * t14 - t283 * t9 + t287 * t6;
t540 = t14 * t177 + t2;
t428 = t489 * pkin(2);
t275 = -t428 - pkin(3);
t456 = t284 * qJ(5);
t334 = t275 - t456;
t222 = -t288 * t522 + t334;
t239 = t512 * t284;
t164 = -t222 * t283 + t239 * t287;
t539 = qJD(6) * t164 + t552 * t283 + t287 * t553;
t165 = t222 * t287 + t239 * t283;
t509 = -qJD(6) * t165 - t283 * t553 + t552 * t287;
t64 = t288 * t117 + t284 * t128;
t54 = qJ(5) * t217 - t64;
t492 = -pkin(5) * t467 - t512 * t442 + t54;
t466 = t213 * t288;
t538 = (-t440 - t466) * qJ(5) + t554;
t438 = qJD(6) * t287;
t439 = qJD(6) * t283;
t32 = -t287 * t150 - t178 * t438 + t205 * t439 - t283 * t78;
t103 = -t287 * t178 + t205 * t283;
t394 = t103 * t177;
t537 = t32 - t394;
t105 = t178 * t283 + t205 * t287;
t33 = qJD(6) * t105 + t150 * t283 - t287 * t78;
t484 = t105 * t177;
t536 = -t33 + t484;
t535 = t213 * t354;
t319 = -t287 * t437 - t548;
t534 = t319 * t177;
t533 = t367 * t105;
t477 = t167 * t288;
t532 = pkin(4) * t477 + t167 * t456;
t170 = t242 * t290 - t286 * t305;
t476 = t170 * t288;
t531 = pkin(4) * t476 + t170 * t456;
t460 = t282 * t285;
t220 = t281 * t460 - t382;
t464 = t220 * t288;
t530 = -pkin(4) * t464 - t220 * t456;
t529 = (qJDD(2) + 0.2e1 * t393) * t282;
t448 = pkin(8) * t458 + t269;
t226 = t448 * qJD(2);
t53 = t284 * t302 + t288 * t90;
t43 = -t205 * qJ(5) - t53;
t514 = t178 * pkin(5);
t34 = -t43 - t514;
t76 = -qJDD(6) + t77;
t528 = t177 * t34 + t522 * t76;
t171 = -t290 * t241 + t286 * t450;
t361 = -t14 * t287 - t283 * t360;
t527 = -qJD(6) * t361 + t1 * t283 + t2 * t287;
t525 = t180 ^ 2;
t524 = t205 ^ 2;
t523 = t217 ^ 2;
t292 = qJD(1) ^ 2;
t521 = pkin(5) + pkin(9);
t518 = pkin(4) * t150;
t517 = pkin(9) * t167;
t516 = pkin(9) * t170;
t515 = g(1) * t286;
t221 = t242 * t282;
t191 = -t221 * t284 - t288 * t490;
t513 = t191 * pkin(10);
t508 = t105 * t440 - t32 * t284;
t504 = t205 * t34;
t503 = t205 * t43;
t502 = t205 * t52;
t501 = t205 * t53;
t500 = t274 * t77;
t499 = t274 * t78;
t498 = t283 * t33;
t497 = t283 * t76;
t496 = t284 * t33;
t495 = t287 * t32;
t72 = t287 * t76;
t493 = -t178 * t440 - t284 * t78;
t488 = qJ(5) * t178;
t487 = t103 * t205;
t486 = t103 * t287;
t485 = t105 * t103;
t483 = t105 * t213;
t482 = t105 * t283;
t147 = t150 * qJ(5);
t481 = t150 * t274;
t480 = t150 * t284;
t475 = t178 * t180;
t474 = t178 * t205;
t473 = t178 * t213;
t472 = t178 * t217;
t471 = t178 * t274;
t470 = t180 * t217;
t469 = t180 * t274;
t468 = t205 * t217;
t465 = t217 * t213;
t463 = t274 * t284;
t462 = t274 * t288;
t461 = t278 * t292;
t459 = t282 * t286;
t195 = t270 + t318;
t210 = qJ(3) * t458 + t448;
t126 = t281 * t195 + t489 * t210;
t114 = pkin(9) * t490 + t126;
t267 = pkin(2) * t458;
t449 = -t220 * pkin(3) + t267;
t384 = -pkin(9) * t221 + t449;
t136 = -t384 - t520;
t67 = t288 * t114 + t284 * t136;
t279 = t285 ^ 2;
t280 = t289 ^ 2;
t447 = t279 - t280;
t445 = qJD(2) * t282;
t443 = qJD(4) * t178;
t431 = t289 * t461;
t430 = -t288 * t150 + t205 * t555;
t426 = t285 * t445;
t425 = t274 * t442;
t424 = t274 * t440;
t420 = -t178 ^ 2 + t525;
t418 = pkin(1) * t542;
t416 = t289 * t436;
t407 = t548 * t103;
t404 = -t284 * t68 + t288 * t550 + t90 * t442;
t140 = -t166 * t288 - t284 * t457;
t403 = -t139 * pkin(4) + qJ(5) * t140;
t143 = t171 * t284 - t288 * t459;
t144 = t171 * t288 + t284 * t459;
t402 = -t143 * pkin(4) + qJ(5) * t144;
t192 = -t221 * t288 + t284 * t490;
t401 = -t191 * pkin(4) + t192 * qJ(5);
t66 = -t284 * t114 + t136 * t288;
t63 = t128 * t288 - t111;
t266 = qJD(2) * t270;
t183 = t282 * t332 + t266;
t184 = -t282 * t444 + (-t289 * t419 - t269) * qJD(2);
t92 = t183 * t281 - t489 * t184;
t227 = pkin(2) * t412 - t419;
t400 = -t227 * t286 + t290 * t276;
t399 = t177 ^ 2;
t398 = t205 * t288;
t390 = pkin(2) * t426;
t389 = t285 * t431;
t387 = t285 * t416;
t385 = t546 * pkin(2);
t379 = t282 * t292 * t490;
t378 = -g(1) * t139 + g(2) * t143;
t377 = -g(1) * t140 + g(2) * t144;
t376 = g(1) * t167 - g(2) * t170;
t375 = g(1) * t290 + g(2) * t286;
t58 = -qJ(5) * t220 - t67;
t372 = t551 * t177;
t371 = t171 * pkin(3) + t400;
t368 = g(2) * t457 - g(3) * t490;
t366 = t276 * qJDD(1);
t362 = t14 * t283 - t287 * t360;
t36 = pkin(5) * t192 - t220 * t522 - t66;
t125 = t195 * t489 - t281 * t210;
t113 = -pkin(3) * t490 - t125;
t65 = t113 - t401;
t48 = t65 + t513;
t18 = -t283 * t48 + t287 * t36;
t19 = t283 * t36 + t287 * t48;
t215 = t281 * t426 - t282 * t380;
t123 = qJD(4) * t192 - t215 * t284;
t359 = t123 * t178 + t191 * t78;
t124 = t221 * t442 + (qJD(4) * t490 - t215) * t288;
t358 = t124 * t180 - t192 * t77;
t357 = t191 * t287 - t220 * t283;
t131 = t191 * t283 + t220 * t287;
t356 = -t227 * t290 - t276 * t286;
t353 = 0.2e1 * t405 + qJD(2);
t352 = t167 * pkin(3) + t385;
t216 = t282 * t320;
t129 = -pkin(3) * t216 + pkin(9) * t215 + t390;
t93 = t183 * t489 + t281 * t184;
t28 = -t114 * t440 + t129 * t288 - t136 * t442 - t284 * t93;
t202 = t205 * qJD(5);
t8 = -t147 - t202 + t404;
t349 = t430 + t472;
t348 = -t430 + t472;
t345 = -t283 * t399 - t72;
t344 = pkin(3) * t166 + t356;
t27 = -t114 * t442 + t284 * t129 + t136 * t440 + t288 * t93;
t343 = t205 * t89 - t481;
t49 = t178 * pkin(4) + t297;
t342 = -t205 * t49 + t481;
t341 = -t416 - t435;
t340 = t217 * t354;
t339 = g(1) * t143 + g(2) * t139 + g(3) * t191;
t338 = -g(1) * t144 - g(2) * t140 - g(3) * t192;
t337 = -g(1) * t171 + g(2) * t166 + g(3) * t221;
t336 = -g(1) * t170 - g(2) * t167 + g(3) * t220;
t234 = -t290 * t285 - t286 * t411;
t333 = -pkin(9) * t166 + t352;
t331 = -t287 * t399 + t497;
t330 = -t284 * t77 + t288 * t396;
t329 = t284 * t474 - t288 * t78;
t328 = t205 * t398 + t480;
t327 = -t288 * t524 - t480;
t326 = t341 * pkin(8);
t323 = -g(1) * t459 + t368;
t322 = t144 * pkin(4) + qJ(5) * t143 + t371;
t317 = t234 * pkin(2);
t316 = -qJ(5) * t124 - qJD(5) * t192 + t92;
t315 = -t77 + t474;
t314 = -pkin(4) * t140 - qJ(5) * t139 + t344;
t313 = -t123 * t180 - t124 * t178 + t191 * t77 - t192 * t78;
t312 = t123 * t205 + t150 * t191 - t178 * t216 + t220 * t78;
t311 = t124 * t205 + t150 * t192 - t180 * t216 - t220 * t77;
t310 = t170 * pkin(3) + t317;
t309 = t339 + t12;
t308 = t338 - t404;
t307 = qJD(4) * t205 * t274 - t336;
t7 = -pkin(5) * t78 - t8;
t306 = qJD(6) * t177 * t522 + t338 + t7;
t15 = t78 * pkin(4) + t298;
t304 = t15 + t307;
t303 = t307 + t46;
t22 = qJ(5) * t216 - qJD(5) * t220 - t27;
t301 = pkin(9) * t171 + t310;
t299 = t180 * t49 + qJDD(5) - t309;
t293 = t217 * t440 + t284 * t547 + t249 + t396;
t246 = t350 * t490;
t243 = -t267 - t520;
t238 = -t288 * pkin(4) + t334;
t236 = -pkin(8) * t460 + t270;
t235 = -t286 * t412 + t290 * t289;
t233 = -t285 * t409 - t286 * t289;
t225 = -pkin(8) * t426 + t266;
t224 = t448 * qJD(1);
t223 = -pkin(8) * t427 + t265;
t208 = t213 ^ 2;
t196 = -t282 * t366 + t432;
t175 = t282 * t326 + t325;
t174 = -pkin(8) * t386 + t429;
t115 = t178 * t466;
t91 = pkin(4) * t180 + t488;
t80 = t143 * t283 - t170 * t287;
t79 = t143 * t287 + t170 * t283;
t70 = t150 * t220 - t205 * t216;
t69 = t180 * t522 + t488;
t59 = -pkin(4) * t220 - t66;
t57 = qJD(6) * t357 + t123 * t283 - t216 * t287;
t56 = qJD(6) * t131 - t123 * t287 - t216 * t283;
t55 = pkin(4) * t217 - t63;
t41 = -pkin(5) * t191 - t58;
t40 = -pkin(4) * t205 + t451;
t39 = t53 - t514;
t31 = pkin(4) * t123 + t316;
t26 = t123 * t522 + t316;
t25 = pkin(4) * t216 - t28;
t24 = t283 * t39 + t287 * t69;
t23 = -t283 * t69 + t287 * t39;
t17 = -pkin(5) * t123 - t22;
t16 = pkin(5) * t124 + t216 * t522 - t28;
t10 = t364 - t518;
t4 = -qJD(6) * t19 + t16 * t287 - t26 * t283;
t3 = qJD(6) * t18 + t16 * t283 + t26 * t287;
t5 = [0, 0, 0, 0, 0, qJDD(1), -g(2) * t290 + t515, t375, 0, 0 (qJDD(1) * t279 + 0.2e1 * t387) * t278 (t285 * t434 - t436 * t447) * t542, t289 * t353 * t445 + t285 * t529 (qJDD(1) * t280 - 0.2e1 * t387) * t278, t289 * t529 - t353 * t426, t246, -t226 * t354 + t236 * t350 + t175 * t490 - g(1) * t233 - g(2) * t235 + (-t417 + t434) * t418, g(1) * t546 - g(2) * t234 - t174 * t490 - t225 * t354 + t341 * t418 - t350 * t448 ((-t223 * qJD(2) + qJDD(1) * t448 + t174 + (-qJD(2) * t236 + t225) * qJD(1)) * t289 + (-t224 * qJD(2) - qJDD(1) * t236 - t175) * t285 - t375) * t282, t174 * t448 + t224 * t225 + t175 * t236 - t223 * t226 + t278 * qJDD(1) * pkin(1) ^ 2 - g(1) * (-pkin(1) * t286 + pkin(8) * t457) - g(2) * (pkin(1) * t290 + pkin(8) * t459) t217 * t215 + t221 * t543, t221 * t151 + t215 * t213 - t217 * t216 + t220 * t543, -t215 * t354 - t221 * t350 - t490 * t543, t151 * t220 - t213 * t216, -t151 * t490 + t216 * t354 - t220 * t350, t246, -g(1) * t166 - g(2) * t171 + t125 * t350 + t243 * t151 + t196 * t220 + t213 * t390 - t231 * t216 - t354 * t92 - t490 * t507, -t126 * t350 - t196 * t221 - t231 * t215 - t217 * t390 - t243 * t543 - t354 * t93 - t490 * t51 + t376, -g(1) * t457 - g(2) * t459 + t125 * t543 - t126 * t151 - t93 * t213 + t97 * t215 + t98 * t216 - t92 * t217 - t51 * t220 - t221 * t507, -g(1) * t356 - g(2) * t400 - t125 * t507 + t51 * t126 + t196 * t243 + t231 * t390 - t97 * t92 + t98 * t93, t358, t313, t311, t359, -t312, t70, t113 * t78 + t12 * t220 + t123 * t89 + t150 * t66 + t178 * t92 + t191 * t46 + t205 * t28 + t216 * t52 - t377, -t113 * t77 + t124 * t89 - t150 * t67 + t180 * t92 + t192 * t46 - t205 * t27 + t216 * t53 + t220 * t404 + t378, -t12 * t192 - t123 * t53 + t124 * t52 - t178 * t27 - t180 * t28 + t191 * t404 + t66 * t77 - t67 * t78 - t376, -t404 * t67 + t53 * t27 + t12 * t66 - t52 * t28 + t46 * t113 + t89 * t92 - g(1) * (t344 + t517) - g(2) * (t371 - t516) t70, -t311, t312, t358, t313, t359, t10 * t192 + t123 * t43 + t124 * t40 + t178 * t22 + t180 * t25 + t191 * t8 + t58 * t78 - t59 * t77 - t376, t10 * t220 - t123 * t49 - t15 * t191 + t150 * t59 - t178 * t31 + t205 * t25 - t216 * t40 - t65 * t78 + t377, -t124 * t49 - t15 * t192 - t150 * t58 - t180 * t31 - t205 * t22 + t216 * t43 - t220 * t8 + t65 * t77 - t378, t15 * t65 + t49 * t31 + t8 * t58 + t43 * t22 + t10 * t59 + t40 * t25 - g(1) * (t314 + t517) - g(2) * (t322 - t516) t105 * t57 - t131 * t32, -t103 * t57 - t105 * t56 - t131 * t33 - t32 * t357, t105 * t124 - t131 * t76 + t177 * t57 - t192 * t32, t103 * t56 - t33 * t357, -t103 * t124 - t177 * t56 - t192 * t33 - t357 * t76, t124 * t177 - t192 * t76, g(1) * t545 - g(2) * t80 + t17 * t103 - t360 * t124 + t4 * t177 - t18 * t76 + t2 * t192 + t41 * t33 + t34 * t56 - t7 * t357, g(1) * t544 - g(2) * t79 - t1 * t192 + t17 * t105 - t14 * t124 + t7 * t131 - t3 * t177 + t19 * t76 - t41 * t32 + t34 * t57, t1 * t357 - t103 * t3 - t105 * t4 - t131 * t2 - t14 * t56 + t18 * t32 - t19 * t33 + t360 * t57 - t377, t1 * t19 + t14 * t3 + t2 * t18 - t360 * t4 + t7 * t41 + t34 * t17 - g(1) * (-pkin(10) * t140 + t167 * t521 + t314) - g(2) * (pkin(10) * t144 - t170 * t521 + t322); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389, t447 * t461, t282 * t435 - t289 * t379, t389, t285 * t379 + t414, t350, t264 + t224 * t354 - g(1) * t234 - g(2) * t546 + (-t369 + t461) * t285 * pkin(1) + (-g(3) * t289 + t326) * t282, pkin(1) * t431 + t223 * t354 + g(1) * t235 - g(2) * t233 + (pkin(8) * t436 + g(3)) * t460 - t429, 0, 0, -t465, -t208 + t523, -t543 + t535, t465, t247 - t340 + (qJD(2) * t321 - t415) * t282, t350, t116 * t354 + t231 * t217 + (-t213 * t427 + t350 * t489) * pkin(2) + t336 - t507, t117 * t354 + t231 * t213 + (t217 * t427 - t281 * t350) * pkin(2) - t337 - t51, -t151 * t519 + t543 * t428 + (t116 - t98) * t217 + (t117 - t97) * t213, -g(1) * t317 - g(2) * t385 - g(3) * t267 + t97 * t116 - t98 * t117 - t231 * t391 - t428 * t507 + t51 * t519, t330 (-t77 - t473) * t288 - t549 + t493, t328 + t470, t329, -t349, t468, -t116 * t178 - t205 * t63 - t217 * t52 + t275 * t78 + t284 * t343 - t288 * t303, -t116 * t180 + t205 * t64 - t217 * t53 - t275 * t77 + t284 * t303 + t288 * t343, t178 * t64 + t180 * t63 + (t213 * t52 - t499 - t404 + (t52 + t469) * qJD(4)) * t288 + (-t213 * t53 - t500 - t12 + (-t53 + t471) * qJD(4)) * t284 + t337, -g(1) * t301 - g(2) * t333 - g(3) * t384 - t404 * t462 - t89 * t116 - t12 * t463 + t46 * t275 + (-t425 - t64) * t53 + (t424 + t63) * t52, t468, t327 - t470, t349, t330, -t115 + (-t77 - t443) * t288 + (-t78 - t396) * t284, t329, -t178 * t54 - t180 * t55 + (t213 * t40 - t499 - t8 + (t40 + t469) * qJD(4)) * t288 + (t213 * t43 - t500 + t10 + (t43 + t471) * qJD(4)) * t284 + t337, -t178 * t538 - t205 * t55 + t217 * t40 - t238 * t78 + t284 * t342 + t288 * t304, -t180 * t538 + t205 * t54 - t217 * t43 + t238 * t77 - t284 * t304 + t288 * t342, t15 * t238 - t8 * t462 + t10 * t463 - g(1) * (t301 + t531) - g(2) * (t333 + t532) - g(3) * (t384 + t530) + t538 * t49 + (t425 - t54) * t43 + (t424 - t55) * t40, t283 * t288 * t32 + t105 * t319, t533 + (t498 + t495 + (t482 + t486) * qJD(6)) * t288 + t407 (t483 + t497) * t288 + t534 + t508, t287 * t288 * t33 - t103 * t551, -t496 + (-t487 + t72) * t288 + t372, t177 * t398 - t284 * t76, -t34 * t137 - t164 * t76 + t240 * t33 + t337 * t287 + (t283 * t336 - t34 * t441 + t2) * t284 + t509 * t177 + t492 * t103 + (-t205 * t360 + t7 * t287 - t34 * t439) * t288, -t34 * t138 + t165 * t76 - t240 * t32 - t337 * t283 + (t34 * t283 * qJD(4) + t287 * t336 - t1) * t284 - t539 * t177 + t492 * t105 + (-t14 * t205 - t7 * t283 - t34 * t438) * t288, -t360 * t138 + t137 * t14 + t164 * t32 - t165 * t33 - t509 * t105 - t539 * t103 - t361 * t442 + (qJD(6) * t362 - t1 * t287 + t2 * t283 + t336) * t288, t1 * t165 + t2 * t164 + t7 * t240 - g(1) * (pkin(10) * t476 + t171 * t521 + t310 + t531) - g(2) * (pkin(10) * t477 - t166 * t521 + t352 + t532) - g(3) * (-pkin(10) * t464 - t221 * t521 + t449 + t530) + t492 * t34 + t539 * t14 - t509 * t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t340 + t151, -t543 - t535, -t208 - t523, t98 * t213 - t97 * t217 + (-t366 - t515) * t282 + t368 + t432, 0, 0, 0, 0, 0, 0, t348, t327 + t470 (t77 - t473) * t288 + t549 + t493, t89 * t217 + (t12 + t501) * t288 + (-t404 + t502) * t284 + t323, 0, 0, 0, 0, 0, 0, -t115 + (t77 - t443) * t288 + (-t78 + t396) * t284, -t348, t328 - t470, t49 * t217 + (-t10 - t503) * t288 + (t205 * t40 - t8) * t284 + t323, 0, 0, 0, 0, 0, 0, t496 + (t487 + t72) * t288 + t372 (t483 - t497) * t288 - t534 + t508, -t533 + (t498 - t495 + (-t482 + t486) * qJD(6)) * t288 + t407, -t360 * t137 - t14 * t138 + (qJD(4) * t362 + t7) * t284 + (t504 - t527) * t288 + t323; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t475, t420, t315, -t475, t293, t150, -t180 * t89 + t309 + t501, t178 * t89 - t308 - t502, 0, 0, t150, -t315, -t293, t475, t420, -t475, pkin(4) * t77 - qJ(5) * t78 + (-t43 - t53) * t180 + (t40 - t451) * t178, t178 * t91 + t299 - t501 - 0.2e1 * t518, -t178 * t49 + t180 * t91 + t205 * t451 + 0.2e1 * t147 + t202 + t308, -t10 * pkin(4) - g(1) * t402 - g(2) * t403 - g(3) * t401 - t8 * qJ(5) - t40 * t53 - t43 * t451 - t49 * t91, -t283 * t484 - t495 (-t33 - t484) * t287 + (t32 + t394) * t283, t105 * t178 + t345, t287 * t394 + t498, -t103 * t178 + t331, t177 * t178, qJ(5) * t33 + t452 * t103 - t177 * t23 - t178 * t360 + t306 * t283 + t287 * t528, -qJ(5) * t32 + t452 * t105 - t14 * t178 + t177 * t24 - t283 * t528 + t306 * t287, t103 * t24 + t105 * t23 + (-t14 * t180 - t522 * t32 - t2 + (t103 * t522 - t14) * qJD(6)) * t287 + (-t360 * t180 + t522 * t33 - t1 + (-t105 * t522 - t360) * qJD(6)) * t283 + t339, t7 * qJ(5) - t14 * t24 + t360 * t23 - g(1) * (-pkin(10) * t143 + t402) - g(2) * (-pkin(10) * t139 + t403) - g(3) * (t401 - t513) + t452 * t34 - t527 * t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t315, t150 - t475, -t524 - t525, t299 + t503 - t518, 0, 0, 0, 0, 0, 0, t345 - t487, -t105 * t205 + t331, t283 * t536 + t287 * t537, t283 * t541 + t287 * t540 - t339 - t504; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t485, -t103 ^ 2 + t105 ^ 2, -t537, -t485, t536, -t76, -g(1) * t79 - g(2) * t544 - g(3) * t357 - t34 * t105 + t540, g(1) * t80 + g(2) * t545 + g(3) * t131 + t34 * t103 - t541, 0, 0;];
tau_reg  = t5;
