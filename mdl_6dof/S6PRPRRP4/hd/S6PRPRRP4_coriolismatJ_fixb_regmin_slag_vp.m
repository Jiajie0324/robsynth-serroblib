% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRP4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:12:31
% EndTime: 2019-03-08 20:12:42
% DurationCPUTime: 7.71s
% Computational Cost: add. (7312->486), mult. (16687->666), div. (0->0), fcn. (19132->10), ass. (0->383)
t344 = cos(qJ(5));
t340 = cos(pkin(11));
t555 = cos(qJ(4));
t455 = t555 * t340;
t338 = sin(pkin(11));
t342 = sin(qJ(4));
t511 = t342 * t338;
t375 = t455 - t511;
t306 = t375 ^ 2;
t456 = t555 * t338;
t510 = t342 * t340;
t312 = t456 + t510;
t307 = t312 ^ 2;
t462 = -t307 - t306;
t581 = t462 * t344;
t586 = qJD(2) * t581;
t341 = sin(qJ(5));
t582 = t462 * t341;
t585 = qJD(2) * t582;
t584 = qJD(3) * t581;
t583 = qJD(3) * t582;
t580 = 0.2e1 * t341;
t461 = t307 - t306;
t217 = t341 * t375;
t472 = t217 * qJD(2);
t479 = qJD(5) * t341;
t579 = -t472 + t479;
t545 = cos(pkin(6));
t432 = t545 * t338;
t339 = sin(pkin(6));
t343 = sin(qJ(2));
t517 = t339 * t343;
t294 = t340 * t517 + t432;
t364 = -t338 * t517 + t340 * t545;
t200 = t294 * t555 + t342 * t364;
t514 = t341 * t200;
t345 = cos(qJ(2));
t516 = t339 * t345;
t164 = t344 * t516 + t514;
t380 = (-t164 / 0.2e1 + t514 / 0.2e1) * t312;
t258 = t312 * t516;
t520 = t258 * t344;
t354 = t520 / 0.2e1 + t380;
t578 = qJD(1) * t354;
t199 = t294 * t342 - t364 * t555;
t222 = t344 * t312;
t437 = -t222 / 0.2e1;
t165 = t344 * t200 - t341 * t516;
t530 = t165 * t375;
t369 = -t530 / 0.2e1 + t199 * t437;
t441 = t517 / 0.2e1;
t259 = t375 * t516;
t512 = t341 * t259;
t498 = -t512 / 0.2e1 + t344 * t441;
t356 = t369 + t498;
t577 = qJD(1) * t356;
t576 = qJD(2) * t354;
t575 = qJD(2) * t356;
t506 = t344 * t259;
t204 = t341 * t517 + t506;
t574 = qJD(2) * (t204 * t375 + t222 * t258);
t467 = t375 * qJD(2);
t425 = qJD(5) - t467;
t361 = -t520 / 0.2e1 + t380;
t482 = qJD(4) * t344;
t97 = t199 * t341;
t573 = qJD(2) * t361 + t97 * qJD(5) - t200 * t482;
t436 = t222 / 0.2e1;
t420 = t199 * t436 + t530 / 0.2e1;
t382 = t420 + t498;
t546 = t97 * qJD(4) - t165 * qJD(5);
t572 = qJD(2) * t382 + t546;
t571 = qJD(4) * t354 - qJD(5) * t356;
t203 = -t344 * t517 + t512;
t218 = t341 * t312;
t570 = qJD(4) * t361 + qJD(5) * t382 + (t203 * t375 + t258 * t218) * qJD(2);
t334 = t338 ^ 2;
t568 = -qJ(6) / 0.2e1;
t332 = -pkin(3) * t340 - pkin(2);
t553 = pkin(9) * t312;
t416 = -pkin(4) * t375 - t553;
t363 = t332 + t416;
t547 = pkin(8) + qJ(3);
t323 = t547 * t340;
t433 = t547 * t338;
t251 = t323 * t555 - t342 * t433;
t513 = t341 * t251;
t125 = -t344 * t363 + t513;
t552 = t375 * pkin(5);
t103 = t125 + t552;
t567 = t103 / 0.2e1;
t550 = t312 * pkin(4);
t551 = t375 * pkin(9);
t239 = t550 - t551;
t508 = t344 * t239;
t250 = t323 * t342 + t555 * t433;
t523 = t250 * t341;
t549 = t312 * pkin(5);
t109 = -t508 - t523 - t549;
t566 = t109 / 0.2e1;
t238 = t250 * t344;
t234 = t238 / 0.2e1;
t565 = -t239 / 0.2e1;
t564 = t312 / 0.2e1;
t515 = t341 * qJ(6);
t548 = t344 * pkin(5);
t412 = t515 + t548;
t318 = -pkin(4) - t412;
t563 = t318 / 0.2e1;
t509 = t344 * qJ(6);
t554 = pkin(5) * t341;
t324 = t509 - t554;
t562 = -t324 / 0.2e1;
t561 = t324 / 0.2e1;
t336 = t341 ^ 2;
t560 = -t336 / 0.2e1;
t337 = t344 ^ 2;
t559 = -t337 / 0.2e1;
t558 = -t341 / 0.2e1;
t557 = t341 / 0.2e1;
t556 = -t344 / 0.2e1;
t507 = t344 * t251;
t126 = t341 * t363 + t507;
t519 = t375 * qJ(6);
t102 = t126 - t519;
t435 = -t102 / 0.2e1 + t126 / 0.2e1;
t374 = -t519 / 0.2e1 - t435;
t434 = -t125 / 0.2e1 + t567;
t385 = -t552 / 0.2e1 - t434;
t12 = t341 * t385 - t344 * t374;
t544 = qJD(2) * t12;
t541 = t102 * t344;
t10 = -t126 * t222 + (t541 + (t103 - t125) * t341) * t312;
t543 = t10 * qJD(2);
t542 = t102 * t375;
t540 = t103 * t341;
t11 = t341 * t374 + t344 * t385;
t539 = t11 * qJD(2);
t538 = t125 * t375;
t537 = t126 * t375;
t415 = pkin(5) * t218 - qJ(6) * t222;
t140 = t250 + t415;
t536 = t140 * t341;
t535 = t140 * t344;
t141 = -t324 * t375 + t251;
t534 = t141 * t341;
t533 = t141 * t344;
t532 = t164 * t375;
t531 = t164 * t341;
t529 = t165 * t344;
t528 = t203 * t341;
t527 = t203 * t344;
t526 = t204 * t341;
t525 = t204 * t344;
t22 = (t200 - t529 - t531) * t199;
t524 = t22 * qJD(1);
t522 = t258 * t318;
t521 = t258 * t341;
t518 = t324 * t341;
t221 = t344 * t375;
t37 = t164 * t203 + t165 * t204 + t199 * t258;
t505 = t37 * qJD(1);
t443 = t312 * t563;
t359 = -(t559 + t560) * t551 + t443;
t304 = t312 * qJ(6);
t231 = t341 * t239;
t500 = t231 - t238;
t108 = t304 + t500;
t378 = t108 * t557 + t109 * t556;
t38 = t359 - t378;
t504 = t38 * qJD(2);
t503 = t536 / 0.2e1 + t318 * t436;
t502 = t231 / 0.2e1 - t238 / 0.2e1;
t501 = -t231 / 0.2e1 + t234;
t442 = -t517 / 0.2e1;
t499 = t512 / 0.2e1 + t344 * t442;
t497 = t506 / 0.2e1 + t341 * t441;
t496 = -t506 / 0.2e1 + t341 * t442;
t495 = t312 * t560 + t337 * t564;
t325 = t340 ^ 2 + t334;
t329 = t337 - t336;
t172 = t461 * t341;
t493 = qJD(2) * t172;
t174 = t461 * t344;
t491 = qJD(2) * t174;
t487 = qJD(2) * t339;
t486 = qJD(3) * t217;
t485 = qJD(3) * t341;
t484 = qJD(3) * t344;
t483 = qJD(4) * t341;
t481 = qJD(5) * t125;
t480 = qJD(5) * t375;
t478 = qJD(5) * t344;
t477 = qJD(6) * t341;
t142 = ((-0.1e1 + t334) * t517 + (-t432 + t294) * t340) * t516;
t476 = t142 * qJD(1);
t305 = t456 / 0.2e1 + t510 / 0.2e1;
t177 = (t564 - t305) * t516;
t475 = t177 * qJD(1);
t367 = -t455 / 0.2e1 + t511 / 0.2e1;
t178 = (t375 / 0.2e1 + t367) * t516;
t474 = t178 * qJD(1);
t473 = t461 * qJD(2);
t471 = t218 * qJD(2);
t212 = t221 * qJD(2);
t470 = t222 * qJD(2);
t295 = t336 * t375;
t296 = t337 * t375;
t227 = -t295 - t296;
t469 = t227 * qJD(2);
t468 = t305 * qJD(2);
t302 = t375 * qJD(4);
t300 = t375 * qJD(6);
t466 = t312 * qJD(2);
t465 = t312 * qJD(4);
t464 = t325 * qJD(2);
t463 = t344 * qJD(6);
t460 = pkin(9) * t479;
t459 = pkin(9) * t478;
t297 = t549 / 0.2e1;
t438 = -t221 / 0.2e1;
t458 = -t536 / 0.2e1 + t318 * t437 + pkin(9) * t438;
t226 = t508 / 0.2e1;
t232 = t523 / 0.2e1;
t457 = t226 + t232 + t297;
t454 = t375 * t479;
t453 = t375 * t478;
t452 = t341 * t463;
t451 = t375 * t466;
t450 = t375 * t465;
t449 = t343 * t487;
t448 = t341 * t478;
t447 = t341 * t466;
t446 = t312 * t477;
t330 = t341 * t482;
t445 = t344 * t466;
t291 = t344 * t465;
t444 = t199 * t564;
t440 = -t218 / 0.2e1;
t439 = t221 / 0.2e1;
t431 = t325 * t345;
t430 = (-t336 - t337) * t199;
t169 = t305 + t495;
t429 = qJD(2) * t169 + t330;
t215 = (t336 / 0.2e1 + t559) * t312;
t428 = qJD(2) * t215 - t330;
t265 = t344 * t307 * t341 * qJD(2);
t427 = qJD(4) * t215 + t265;
t426 = qJD(2) * t332 + qJD(3);
t424 = t341 * t445;
t423 = t341 * t291;
t152 = t199 * t439;
t422 = t341 * t444 + t532 / 0.2e1;
t421 = t199 * t440 - t532 / 0.2e1;
t419 = -t549 / 0.2e1 - t523 / 0.2e1;
t214 = t412 * t312;
t417 = -t214 / 0.2e1 + t551 / 0.2e1;
t413 = 0.2e1 * t423;
t411 = -t318 * t375 + t553;
t379 = -t541 / 0.2e1 - t540 / 0.2e1;
t346 = (t141 / 0.2e1 + t379) * t199 + t164 * t566 + t165 * t108 / 0.2e1 + t200 * t140 / 0.2e1;
t376 = -t525 / 0.2e1 - t528 / 0.2e1;
t2 = -t522 / 0.2e1 + t376 * pkin(9) + t346;
t7 = t102 * t108 + t103 * t109 + t140 * t141;
t410 = t2 * qJD(1) + t7 * qJD(2);
t349 = t435 * t164 + t434 * t165 + t199 * t214 / 0.2e1;
t387 = t203 * pkin(5) / 0.2e1 + t204 * t568;
t4 = t349 + t387;
t8 = -t102 * t125 + t103 * t126 + t140 * t214;
t409 = t4 * qJD(1) + t8 * qJD(2);
t362 = (t164 * t556 + t165 * t557) * t375;
t41 = -t362 + t376;
t9 = -t103 * t221 - t109 * t222 + (t108 * t312 + t542) * t341;
t408 = t41 * qJD(1) - t9 * qJD(2);
t15 = (t102 - t533) * t312 - (t108 + t535) * t375;
t244 = t521 / 0.2e1;
t368 = t165 * t564 + t152;
t357 = t199 * t438 + t200 * t437 + t368;
t25 = t244 + t357;
t407 = t25 * qJD(1) + t15 * qJD(2);
t16 = (-t103 + t534) * t312 - (-t109 - t536) * t375;
t406 = t16 * qJD(2) + t578;
t17 = t140 * t312 - (-t540 - t541) * t375;
t351 = -(-t529 / 0.2e1 - t531 / 0.2e1) * t375 + t444;
t377 = t527 / 0.2e1 - t526 / 0.2e1;
t19 = t351 + t377;
t405 = qJD(1) * t19 + qJD(2) * t17;
t35 = -t239 * t221 + (-t125 + t513) * t312;
t404 = t35 * qJD(2) + t578;
t245 = -t521 / 0.2e1;
t358 = t200 * t436 + t152 - t368;
t28 = t245 + t358;
t36 = (-t126 + t507) * t312 - (-t500 - t238) * t375;
t403 = t28 * qJD(1) + t36 * qJD(2);
t42 = t537 + (t214 * t341 + t535) * t312;
t402 = qJD(2) * t42 - t577;
t43 = t538 + (-t214 * t344 + t536) * t312;
t51 = t421 + t497;
t401 = qJD(1) * t51 - qJD(2) * t43;
t47 = -t140 * t222 - t542;
t48 = t420 + t499;
t400 = -qJD(1) * t48 + qJD(2) * t47;
t71 = t222 * t250 + t537;
t399 = qJD(2) * t71 - t577;
t52 = t422 + t496;
t70 = -t218 * t250 - t538;
t398 = -qJD(1) * t52 + qJD(2) * t70;
t397 = t108 * t344 + t109 * t341;
t20 = (-t518 / 0.2e1 - pkin(5) / 0.2e1) * t312 + (t565 + t417) * t344 + t419 + t503;
t255 = -t318 * t341 - t324 * t344;
t395 = -qJD(2) * t20 + qJD(4) * t255;
t254 = t318 * t344 - t518;
t348 = (t312 * t561 - t140 / 0.2e1) * t344 + (t443 + t417) * t341;
t32 = -t304 + t348 + t501;
t394 = -qJD(2) * t32 + qJD(4) * t254;
t99 = t199 * t344;
t393 = -qJD(4) * t99 - qJD(5) * t164;
t392 = t425 * t341;
t391 = t425 * t344;
t350 = t294 * t340 / 0.2e1 - t364 * t338 / 0.2e1;
t167 = t441 - t350;
t317 = t325 * qJ(3);
t390 = qJD(1) * t167 - qJD(2) * t317;
t389 = -qJD(5) * t324 - t477;
t388 = pkin(5) * t566 + t108 * t568;
t386 = -t509 / 0.2e1 + t554 / 0.2e1;
t276 = pkin(9) * t439;
t66 = t276 + (-t550 / 0.2e1 + t565) * t344;
t384 = pkin(4) * t483 - qJD(2) * t66;
t352 = (-t551 / 0.2e1 + t550 / 0.2e1) * t341 + t234;
t64 = t352 + t502;
t383 = pkin(4) * t482 - qJD(2) * t64;
t46 = t457 + t458;
t373 = -qJD(2) * t46 + t318 * t483;
t372 = -qJD(5) * t99 - t200 * t483;
t371 = t312 * t391;
t370 = qJD(5) * t305 - t451;
t228 = t329 * t307;
t366 = qJD(2) * t228 + t413;
t365 = -qJD(4) * t329 + 0.2e1 * t424;
t33 = (t561 + t386) * t199;
t347 = (t341 * t435 + t344 * t434) * pkin(9) + t140 * t562 + t214 * t563;
t6 = t347 + t388;
t360 = t318 * t324 * qJD(4) + t33 * qJD(1) - t6 * qJD(2);
t355 = -qJD(5) * t412 + t463;
t237 = t307 * t337 + t306;
t353 = qJD(2) * t237 + t423 - t480;
t293 = t305 * qJD(4);
t290 = t341 * t465;
t266 = t344 * t446;
t264 = t425 * qJ(6);
t256 = qJD(4) * t336 + t424;
t211 = t221 * qJD(5);
t207 = t217 * qJD(5);
t205 = t215 * qJD(5);
t189 = -t212 + t478;
t180 = (-t312 / 0.2e1 - t305) * t516;
t179 = (-t375 / 0.2e1 + t367) * t516;
t170 = -t305 + t495;
t168 = t441 + t350;
t127 = qJD(4) * t221 - t375 * t447;
t118 = t126 * qJD(5);
t100 = t312 * t392;
t67 = pkin(4) * t437 + t226 + 0.2e1 * t232 + t276;
t65 = t352 + t501;
t55 = t369 + t499;
t54 = t421 + t496;
t53 = t422 + t497;
t45 = -t508 / 0.2e1 + t419 + t458;
t40 = -t362 - t376;
t39 = t359 + t378;
t34 = (t386 + t562) * t199;
t31 = t304 + t348 + t502;
t27 = t244 + t358;
t26 = t245 + t357;
t21 = t324 * t440 + t344 * t417 + t297 + t457 + t503;
t18 = t351 - t377;
t14 = t125 * t556 + t102 * t558 + t126 * t557 + t344 * t567 - (t515 / 0.2e1 + t548 / 0.2e1) * t375;
t13 = t125 * t558 + t126 * t556 - t375 * t386 - t379;
t5 = t347 - t388;
t3 = t349 - t387;
t1 = t522 / 0.2e1 + t346 + (t525 + t528) * pkin(9) / 0.2e1;
t23 = [0, 0, 0, 0, 0, 0, 0, t142 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t37 + qJD(4) * t22; 0, 0, -t449, -t345 * t487, -t340 * t449, t338 * t449, t431 * t487, t476 + t168 * qJD(3) + (-pkin(2) * t343 + qJ(3) * t431) * t487, 0, 0, 0, 0, 0, qJD(4) * t180 - t375 * t449, qJD(4) * t179 + t312 * t449, 0, 0, 0, 0, 0, t570, t27 * qJD(4) + t54 * qJD(5) + t574, t570, t40 * qJD(4) + (-t526 + t527) * t466, t26 * qJD(4) + t53 * qJD(5) - t574, t505 + (t102 * t204 + t103 * t203 + t140 * t258) * qJD(2) + t18 * qJD(3) + t1 * qJD(4) + t3 * qJD(5) + t55 * qJD(6); 0, 0, 0, 0, 0, 0, 0, t168 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t180 - qJD(4) * t200, qJD(2) * t179 + qJD(4) * t199, 0, 0, 0, 0, 0, t573, qJD(2) * t27 - t372, t573, t40 * qJD(2) + qJD(4) * t430, qJD(2) * t26 + t372, t524 + t1 * qJD(2) + (pkin(9) * t430 + t200 * t318) * qJD(4) + t34 * qJD(5) - t97 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t572, qJD(2) * t54 - t393, t572, 0, qJD(2) * t53 + t393, t3 * qJD(2) + t34 * qJD(4) + (-pkin(5) * t165 - qJ(6) * t164) * qJD(5) + t165 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t55 - t546; 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t167 - t476, 0, 0, 0, 0, 0, -t177 * qJD(4), -t178 * qJD(4), 0, 0, 0, 0, 0, t571, qJD(4) * t28 - qJD(5) * t52, t571, qJD(4) * t41, qJD(4) * t25 - qJD(5) * t51, qJD(3) * t19 + qJD(4) * t2 + qJD(5) * t4 - qJD(6) * t48 - t505; 0, 0, 0, 0, 0, 0, t325 * qJD(3), t317 * qJD(3), t450, -t461 * qJD(4), 0, 0, 0, t332 * t465, t332 * t302, -t307 * t448 + t337 * t450, -qJD(5) * t228 - t375 * t413, qJD(4) * t174 + t312 * t454, -qJD(4) * t172 + t312 * t453, -t450, qJD(4) * t35 + qJD(5) * t71 - t583, qJD(4) * t36 + qJD(5) * t70 - t584, qJD(4) * t16 + qJD(5) * t42 - t307 * t452 - t583, -qJD(4) * t9 - qJD(5) * t10 + t375 * t446, qJD(4) * t15 + qJD(5) * t43 + qJD(6) * t237 + t584, qJD(3) * t17 + qJD(4) * t7 + qJD(5) * t8 + qJD(6) * t47; 0, 0, 0, 0, 0, 0, t464, -t390, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t585, -t586, -t585, 0, t586, qJD(4) * t39 + qJD(5) * t13 + t405; 0, 0, 0, 0, 0, 0, 0, 0, t451, -t473, t302, -t465, 0, -qJD(4) * t251 + t332 * t466 - t475, qJD(4) * t250 + t332 * t467 - t474, -t205 - (-t337 * t466 - t330) * t375 (-t295 + t296) * qJD(4) + (-t467 - qJD(5)) * t222 * t580, t290 + t491, t291 - t493, t370 (t341 * t416 - t507) * qJD(4) + t67 * qJD(5) + t404 (t344 * t416 + t513) * qJD(4) + t65 * qJD(5) + t403 (-t341 * t411 - t533) * qJD(4) + t21 * qJD(5) + t170 * qJD(6) + t406, qJD(4) * t397 + t14 * qJD(5) + t408 (t344 * t411 - t534) * qJD(4) + t31 * qJD(5) + t266 + t407, t39 * qJD(3) + (pkin(9) * t397 + t141 * t318) * qJD(4) + t5 * qJD(5) + t45 * qJD(6) + t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427, -t366, -t100, -t371, t293, qJD(4) * t67 - t118 + t399, qJD(4) * t65 + t398 + t481, qJD(4) * t21 - t118 + t402, t14 * qJD(4) + qJD(5) * t415 - t446 - t543, qJD(4) * t31 - t300 - t401 - t481, t13 * qJD(3) + t5 * qJD(4) + (-pkin(5) * t126 - qJ(6) * t125) * qJD(5) + t102 * qJD(6) + t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t170 - t265, -t100, t353, qJD(4) * t45 + qJD(5) * t102 + t400; 0, 0, 0, 0, 0, 0, 0, t167 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t19; 0, 0, 0, 0, 0, 0, -t464, t390, 0, 0, 0, 0, 0, t465, t302, 0, 0, 0, 0, 0, t207 + t291 + t585, -qJD(4) * t218 + t453 + t586, qJD(4) * t222 + t454 + t585, t227 * qJD(4), -t211 + t290 - t586, -qJD(4) * t38 - qJD(5) * t12 - qJD(6) * t217 - t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t466, t467, 0, 0, 0, 0, 0, t445, -t471, t470, t469, t447, -t504; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t579, -t391, -t392, 0, t189, -t389 - t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t177 * qJD(2), t178 * qJD(2), 0, 0, 0, 0, 0, -t576, -qJD(2) * t28, -t576, -qJD(2) * t41, -qJD(2) * t25, -qJD(2) * t2 - qJD(5) * t33 - t524; 0, 0, 0, 0, 0, 0, 0, 0, -t451, t473, 0, 0, 0, -t312 * t426 + t475, -t375 * t426 + t474, -t337 * t451 - t205, -t371 * t580, -t211 - t491, t207 + t493, -t370, qJD(5) * t66 - t312 * t484 - t404, qJD(3) * t218 + qJD(5) * t64 - t403, -qJD(3) * t222 + qJD(5) * t20 + qJD(6) * t169 - t406, -qJD(3) * t227 - qJD(5) * t11 - qJD(6) * t221 - t408, qJD(5) * t32 - t312 * t485 + t266 - t407, qJD(3) * t38 + qJD(5) * t6 + qJD(6) * t46 - t410; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t466, -t467, 0, 0, 0, 0, 0, -t445, t471, -t470, -t469, -t447, t504; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t448, t329 * qJD(5), 0, 0, 0, -pkin(4) * t479, -pkin(4) * t478, -qJD(5) * t255 + t452, 0, -qJD(5) * t254 + qJD(6) * t336, t389 * t318; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t428, -t365, t189, -t579, -t468, -t384 - t459, -t383 + t460, -t395 - t459, t355 - t539, -t394 - t460, pkin(9) * t355 - t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t429, t189, t256, -t373 + t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t575, qJD(2) * t52, t575, 0, qJD(2) * t51, -qJD(2) * t4 + qJD(4) * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t427, t366, t127, -qJD(4) * t217 - t375 * t445, t293, -qJD(4) * t66 - t399 - t486, -qJD(4) * t64 - t375 * t484 - t398, -qJD(4) * t20 - t375 * t485 - t402, qJD(4) * t11 + t543, qJD(3) * t221 - qJD(4) * t32 - t300 + t401, -qJ(6) * t300 + qJD(3) * t12 - qJD(4) * t6 - t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t472, -t344 * t467, -t341 * t467, 0, t212, t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t428, t365, t212, -t472, t468, t384, t383, t395, t539, t394, t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t425, t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t169 + t265, t127, -t353, qJ(6) * t480 - qJD(4) * t46 - t400 + t486; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t472; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t429, t212, -t256, t373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t425, -t264; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t23;
