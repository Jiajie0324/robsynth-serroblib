% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRPRRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRPRRP4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRRP4_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:12:19
% EndTime: 2019-03-08 20:12:25
% DurationCPUTime: 2.32s
% Computational Cost: add. (2520->207), mult. (6398->371), div. (0->0), fcn. (6536->10), ass. (0->135)
t168 = cos(qJ(2));
t86 = sin(pkin(6));
t139 = t86 * t168;
t166 = sin(qJ(2));
t138 = t86 * t166;
t151 = cos(pkin(6));
t85 = sin(pkin(11));
t87 = cos(pkin(11));
t105 = t87 * t138 + t151 * t85;
t106 = -t85 * t138 + t151 * t87;
t167 = cos(qJ(4));
t89 = sin(qJ(4));
t39 = t167 * t105 + t89 * t106;
t88 = sin(qJ(5));
t90 = cos(qJ(5));
t33 = t90 * t139 + t88 * t39;
t134 = qJD(2) * t166;
t73 = t86 * t134;
t38 = t89 * t105 - t167 * t106;
t92 = t38 * qJD(4);
t130 = t168 * t167;
t137 = t89 * t168;
t99 = t87 * t130 - t85 * t137;
t95 = t99 * t86;
t91 = qJD(2) * t95 - t92;
t10 = t33 * qJD(5) - t88 * t73 - t90 * t91;
t132 = t88 * t139;
t79 = qJD(5) * t90;
t11 = -qJD(5) * t132 + t39 * t79 - t90 * t73 + t88 * t91;
t34 = t90 * t39 - t132;
t116 = t33 * t90 - t34 * t88;
t100 = t116 * qJD(5) - t10 * t90 + t11 * t88;
t83 = t88 ^ 2;
t84 = t90 ^ 2;
t153 = t83 - t84;
t70 = t153 * qJD(5);
t181 = t10 * t88 + t11 * t90;
t62 = -t167 * t87 + t89 * t85;
t63 = t167 * t85 + t89 * t87;
t76 = -t87 * pkin(3) - pkin(2);
t111 = -t62 * pkin(4) + t63 * pkin(9) - t76;
t154 = pkin(8) + qJ(3);
t68 = t154 * t85;
t69 = t154 * t87;
t52 = t167 * t69 - t89 * t68;
t180 = -t88 * t111 + t90 * t52;
t179 = t85 ^ 2 + t87 ^ 2;
t115 = t86 ^ 2 * t168 * t166;
t51 = t167 * t68 + t89 * t69;
t178 = t179 * qJD(3);
t58 = t62 * qJD(4);
t156 = t90 * t58;
t78 = qJD(5) * t88;
t114 = t63 * t78 + t156;
t161 = t63 * t90;
t150 = qJD(2) * t86;
t24 = t39 * qJD(4) + (t85 * t130 + t87 * t137) * t150;
t59 = t63 * qJD(4);
t177 = -t10 * t62 + t114 * t38 - t24 * t161 + t34 * t59;
t128 = t59 * pkin(4) + t58 * pkin(9);
t36 = t62 * qJD(3) + t51 * qJD(4);
t5 = -qJD(5) * t180 + t90 * t128 + t88 * t36;
t104 = t90 * t111;
t22 = -t88 * t52 - t104;
t4 = qJD(5) * t104 - t88 * t128 + t90 * t36 + t52 * t78;
t176 = t4 * t88 - t5 * t90 + (-t180 * t90 + t22 * t88) * qJD(5);
t148 = t62 * qJD(6);
t152 = t59 * qJ(6);
t1 = t148 - t4 + t152;
t18 = t62 * qJ(6) + t180;
t19 = -t62 * pkin(5) - t22;
t169 = t59 * pkin(5);
t3 = -t169 - t5;
t175 = t1 * t88 - t3 * t90 + (t18 * t90 + t19 * t88) * qJD(5);
t123 = t90 * pkin(5) + t88 * qJ(6);
t174 = t123 * qJD(5) - t90 * qJD(6);
t173 = 0.2e1 * t59;
t172 = 0.2e1 * qJD(6);
t171 = pkin(9) * t59;
t170 = pkin(9) * t62;
t14 = t38 * t24;
t37 = t63 * qJD(3) + t52 * qJD(4);
t164 = t51 * t37;
t163 = t63 * t58;
t162 = t63 * t88;
t160 = t88 * t58;
t159 = t88 * t59;
t155 = t90 * t59;
t147 = t88 * qJD(6);
t50 = t62 * t173;
t145 = -0.2e1 * pkin(4) * qJD(5);
t144 = t88 * t156;
t143 = pkin(9) * t78;
t142 = pkin(9) * t79;
t141 = t38 * t79;
t140 = t88 * t79;
t60 = t63 ^ 2;
t133 = t60 * t140;
t131 = 0.2e1 * t178;
t127 = pkin(4) * t58 - t171;
t126 = pkin(4) * t63 + t170;
t122 = pkin(5) * t88 - qJ(6) * t90;
t120 = t18 * t88 - t19 * t90;
t119 = t180 * t88 + t22 * t90;
t117 = t24 * t51 + t38 * t37;
t48 = t63 * t79 - t160;
t47 = t62 * t79 + t159;
t45 = t62 * t78 - t155;
t113 = -0.2e1 * t34 * t10 + 0.2e1 * t33 * t11 + 0.2e1 * t14;
t112 = t179 * t168;
t110 = -t11 * t62 + t63 * t141 - t38 * t160 + t24 * t162 - t33 * t59;
t109 = t33 * t78 + t34 * t79 - t181;
t64 = -pkin(4) - t123;
t9 = -t122 * t58 + t174 * t63 + t37;
t108 = -t9 + (t63 * t64 - t170) * qJD(5);
t25 = t122 * t63 + t51;
t57 = -pkin(5) * t78 + qJ(6) * t79 + t147;
t102 = -qJD(5) * t25 + t57 * t63 + t58 * t64 + t171;
t98 = -t120 * qJD(5) + t1 * t90 + t3 * t88;
t97 = -t119 * qJD(5) - t4 * t90 - t5 * t88;
t94 = t100 * pkin(9);
t93 = -t116 * t58 + ((-t33 * t88 - t34 * t90) * qJD(5) + t181) * t63;
t72 = -0.2e1 * t140;
t71 = 0.2e1 * t140;
t41 = (t83 + t84) * t58;
t32 = -0.2e1 * t84 * t163 - 0.2e1 * t133;
t31 = -0.2e1 * t83 * t163 + 0.2e1 * t133;
t28 = t63 * t70 + t144;
t26 = 0.4e1 * t63 * t140 - t153 * t58;
t21 = 0.2e1 * t63 * t144 + t60 * t70;
t16 = t63 * t159 + t48 * t62;
t15 = -0.2e1 * t114 * t62 + 0.2e1 * t63 * t155;
t13 = -t24 * t90 + t38 * t78;
t12 = t24 * t88 + t141;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * (t179 - 0.1e1) * t115 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t14 - 0.2e1 * t39 * t92 + 0.2e1 * (t39 * t95 - t115) * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t73, -qJD(2) * t139, 0, 0, 0, 0, 0, 0, 0, 0, -t87 * t73, t85 * t73, t112 * t150 (t112 * qJ(3) * qJD(2) + (-qJD(2) * pkin(2) + t178) * t166) * t86, 0, 0, 0, 0, 0, 0 (t62 * t134 - t168 * t59) * t86 (t63 * t134 + t168 * t58) * t86, t24 * t63 - t38 * t58 - t39 * t59 - t91 * t62, -t39 * t36 + t91 * t52 + t76 * t73 + t117, 0, 0, 0, 0, 0, 0, t110, -t177, t93, -t10 * t180 - t11 * t22 - t33 * t5 - t34 * t4 + t117, 0, 0, 0, 0, 0, 0, t110, t93, t177, t34 * t1 - t10 * t18 + t11 * t19 + t24 * t25 + t33 * t3 + t38 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131, qJ(3) * t131, -0.2e1 * t163, 0.2e1 * t58 * t62 - 0.2e1 * t63 * t59, 0, t50, 0, 0, t76 * t173, -0.2e1 * t76 * t58, 0.2e1 * t36 * t62 + 0.2e1 * t37 * t63 - 0.2e1 * t51 * t58 - 0.2e1 * t52 * t59, -0.2e1 * t52 * t36 + 0.2e1 * t164, t32, 0.2e1 * t21, t15, t31, -0.2e1 * t16, t50, 0.2e1 * t37 * t162 + 0.2e1 * t22 * t59 + 0.2e1 * t48 * t51 + 0.2e1 * t5 * t62, -0.2e1 * t114 * t51 + 0.2e1 * t37 * t161 - 0.2e1 * t180 * t59 + 0.2e1 * t4 * t62, 0.2e1 * t119 * t58 + 0.2e1 * t176 * t63, -0.2e1 * t180 * t4 + 0.2e1 * t22 * t5 + 0.2e1 * t164, t32, t15, -0.2e1 * t21, t50, 0.2e1 * t16, t31, 0.2e1 * t9 * t162 - 0.2e1 * t19 * t59 + 0.2e1 * t48 * t25 - 0.2e1 * t3 * t62, 0.2e1 * t120 * t58 - 0.2e1 * t175 * t63, 0.2e1 * t1 * t62 + 0.2e1 * t114 * t25 - 0.2e1 * t9 * t161 + 0.2e1 * t18 * t59, 0.2e1 * t18 * t1 + 0.2e1 * t19 * t3 + 0.2e1 * t25 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, 0, 0, 0, 0, 0, 0, 0, 0, 0, t73, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t59, -t58, 0, 0, 0, 0, 0, 0, 0, 0, -t45, -t47, t41, -t176, 0, 0, 0, 0, 0, 0, -t45, t41, t47, t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t24, -t99 * t150 + t92, 0, 0, 0, 0, 0, 0, 0, 0, t13, t12, t100, -t24 * pkin(4) + t94, 0, 0, 0, 0, 0, 0, t13, t100, -t12, t24 * t64 - t38 * t57 + t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t58, 0, -t59, 0, -t37, t36, 0, 0, -t28, -t26, t47, t28, -t45, 0, -t37 * t90 + t127 * t88 + (-t126 * t90 + t51 * t88) * qJD(5), t37 * t88 + t127 * t90 + (t126 * t88 + t51 * t90) * qJD(5), t97, -t37 * pkin(4) + t97 * pkin(9), -t28, t47, t26, 0, t45, t28, -t102 * t88 + t108 * t90, t98, t102 * t90 + t108 * t88, pkin(9) * t98 - t25 * t57 + t9 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, -0.2e1 * t70, 0, t72, 0, 0, t88 * t145, t90 * t145, 0, 0, t71, 0, 0.2e1 * t70, 0, 0, t72, 0.2e1 * t57 * t90 + 0.2e1 * t64 * t78, 0, 0.2e1 * t57 * t88 - 0.2e1 * t64 * t79, -0.2e1 * t64 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11, t10, 0, 0, 0, 0, 0, 0, 0, 0, -t11, 0, -t10, -t11 * pkin(5) - t10 * qJ(6) + t34 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t114, 0, -t48, t59, t5, t4, 0, 0, 0, -t114, 0, t59, t48, 0, t5 + 0.2e1 * t169, t123 * t58 + (qJD(5) * t122 - t147) * t63, 0.2e1 * t148 - t4 + 0.2e1 * t152, -t3 * pkin(5) + t1 * qJ(6) + t18 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t78, -t79, 0, 0, 0, 0, 0, 0, 0, 0, -t78, 0, t79, t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, -t78, 0, -t142, t143, 0, 0, 0, t79, 0, 0, t78, 0, -t142, -t174, -t143, -t174 * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, qJ(6) * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, -t114, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, 0, t142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t2;
