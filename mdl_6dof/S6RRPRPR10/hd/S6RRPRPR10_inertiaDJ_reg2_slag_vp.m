% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR10_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR10_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR10_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR10_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:09:25
% EndTime: 2019-03-09 11:09:44
% DurationCPUTime: 7.70s
% Computational Cost: add. (8162->405), mult. (21204->742), div. (0->0), fcn. (21535->10), ass. (0->216)
t101 = cos(pkin(11));
t244 = sin(qJ(4));
t245 = cos(qJ(4));
t99 = sin(pkin(11));
t261 = t244 * t101 + t245 * t99;
t196 = t245 * t101;
t81 = t244 * t99 - t196;
t260 = -0.4e1 * t81;
t235 = pkin(9) + qJ(3);
t65 = t261 * t235;
t100 = sin(pkin(6));
t103 = sin(qJ(2));
t223 = cos(pkin(6));
t197 = pkin(1) * t223;
t177 = t103 * t197;
t137 = qJ(3) * t223 + t177;
t105 = cos(qJ(2));
t218 = t101 * t105;
t206 = pkin(8) * t218;
t242 = pkin(2) * t105;
t115 = (t223 * pkin(9) + t137) * t101 + (t206 + (-t103 * t235 - pkin(1) - t242) * t99) * t100;
t130 = t99 * t137;
t222 = qJ(3) * t103;
t219 = t101 * t103;
t73 = t100 * t219 + t223 * t99;
t118 = t130 + t73 * pkin(9) - (t101 * (-pkin(1) - t222) + (-pkin(2) * t101 - pkin(8) * t99 - pkin(3)) * t105) * t100;
t259 = t244 * t115 + t245 * t118;
t22 = t245 * t115 - t244 * t118;
t221 = t100 * t103;
t258 = -pkin(8) * t221 + t105 * t197;
t214 = qJD(2) * t103;
t188 = t244 * qJD(3);
t189 = t245 * qJD(3);
t53 = t65 * qJD(4) - t101 * t189 + t188 * t99;
t172 = t235 * t245;
t173 = t235 * t244;
t66 = t101 * t172 - t173 * t99;
t257 = t100 * (t105 * t53 + t214 * t66);
t75 = t261 * qJD(4);
t256 = (-t105 * t75 + t214 * t81) * t100;
t190 = qJD(4) * t244;
t74 = -qJD(4) * t196 + t190 * t99;
t255 = (t105 * t74 + t214 * t261) * t100;
t186 = t223 * t101;
t142 = t221 * t99 - t186;
t58 = -t244 * t142 + t245 * t73;
t121 = t58 * qJD(4);
t220 = t100 * t105;
t20 = pkin(4) * t220 + t259;
t110 = t58 * pkin(5) + pkin(10) * t220 + t20;
t213 = qJD(2) * t105;
t194 = t100 * t213;
t116 = t194 * t261 + t121;
t136 = t105 * t261;
t215 = qJD(2) * t100;
t117 = -t136 * t215 - t121;
t185 = qJD(2) * t223;
t170 = t103 * t185;
t180 = t99 * t194;
t129 = t245 * t142;
t174 = t101 * t194;
t39 = qJD(4) * t129 - t245 * t174 + t244 * t180 + t73 * t190;
t15 = pkin(1) * t170 + pkin(3) * t180 - pkin(4) * t117 + pkin(8) * t194 + t39 * qJ(5) - t58 * qJD(5);
t254 = -pkin(10) * t116 - qJD(6) * t110 - t15;
t253 = qJD(6) * t220 + t116;
t133 = pkin(5) * t261 + t65;
t157 = qJ(5) * t74 - qJD(5) * t261;
t246 = pkin(4) + pkin(10);
t252 = -qJD(6) * t133 - t246 * t75 - t157;
t71 = t258 * qJD(2);
t102 = sin(qJ(6));
t96 = t102 ^ 2;
t104 = cos(qJ(6));
t97 = t104 ^ 2;
t187 = (t96 - t97) * qJD(6);
t251 = -0.2e1 * t74;
t250 = -0.2e1 * t100;
t249 = 0.2e1 * t100;
t248 = 0.2e1 * qJD(2);
t247 = 0.2e1 * qJD(5);
t243 = pkin(2) * t103;
t57 = t244 * t73 + t129;
t241 = t39 * t57;
t240 = t57 * t75;
t239 = t73 * t99;
t238 = t75 * t96;
t237 = t81 * t75;
t94 = t100 ^ 2;
t98 = t105 ^ 2;
t236 = t94 * t98;
t70 = t97 * t75;
t86 = t100 * t214;
t25 = (qJD(6) * t57 + t86) * t102 - t253 * t104;
t233 = t102 * t25;
t210 = qJD(6) * t104;
t26 = t253 * t102 + t104 * t86 + t210 * t57;
t232 = t102 * t26;
t46 = t102 * t220 + t104 * t57;
t231 = t102 * t46;
t47 = -t102 * t57 + t104 * t220;
t230 = t102 * t47;
t229 = t103 * t99;
t228 = t104 * t26;
t227 = t104 * t46;
t226 = t104 * t47;
t225 = t104 * t75;
t224 = t105 * t99;
t217 = t102 * t246;
t216 = t104 * t246;
t212 = qJD(3) * t103;
t211 = qJD(6) * t102;
t209 = qJD(6) * t246;
t30 = -0.2e1 * t58 * t39;
t208 = 0.2e1 * t237;
t63 = t261 * t251;
t207 = pkin(8) * t219;
t205 = t102 * t225;
t203 = t94 * t213;
t202 = t81 * t211;
t201 = t261 * t211;
t200 = t81 * t210;
t199 = t261 * t210;
t198 = t99 * t212;
t91 = -pkin(3) * t101 - pkin(2);
t193 = qJD(5) * t220;
t191 = t102 * t210;
t184 = t223 * qJD(3);
t183 = pkin(4) * t86;
t79 = t81 ^ 2;
t182 = t79 * t191;
t181 = t57 * t86;
t179 = t103 * t203;
t93 = t99 ^ 2;
t95 = t101 ^ 2;
t178 = 0.2e1 * (t93 + t95) * qJD(3);
t175 = qJ(5) * t86;
t19 = qJ(5) * t220 - t22;
t17 = -pkin(5) * t57 - t19;
t161 = -qJ(3) * t105 + t243;
t111 = -t99 * (t184 + t71) + t101 * (qJD(2) * t161 - t212) * t100 - pkin(9) * t174 + pkin(3) * t86;
t169 = t105 * t185;
t132 = pkin(1) * t169 + t184;
t123 = t101 * t132;
t112 = t123 + (-t198 + (-t207 + (-t105 * t235 + t243) * t99) * qJD(2)) * t100;
t10 = t259 * qJD(4) - t244 * t111 - t245 * t112;
t8 = t10 - t175 + t193;
t5 = -pkin(5) * t116 - t8;
t171 = t17 * t75 + t5 * t81;
t69 = -pkin(2) * t223 - t258;
t61 = pkin(3) * t142 + t69;
t120 = -t58 * qJ(5) + t61;
t18 = t246 * t57 + t120;
t6 = -t102 * t18 + t104 * t110;
t7 = t102 * t110 + t104 * t18;
t168 = -t102 * t6 + t104 * t7;
t24 = -t261 * t39 - t58 * t74;
t167 = -t39 * t81 + t58 * t75;
t42 = -t75 * pkin(5) - t53;
t56 = -t81 * pkin(5) + t66;
t166 = t42 * t81 + t56 * t75;
t54 = (-qJD(4) * t173 + t189) * t99 + (qJD(4) * t172 + t188) * t101;
t165 = -t53 * t66 + t54 * t65;
t164 = -t261 * t75 + t74 * t81;
t44 = -t99 * t132 + (-t101 * t212 + (pkin(8) * t229 + t101 * t161) * qJD(2)) * t100;
t45 = t123 + (-t198 + (t161 * t99 - t207) * qJD(2)) * t100;
t163 = t45 * t101 - t44 * t99;
t162 = -t222 - t242;
t154 = -qJ(5) * t261 + t91;
t49 = t246 * t81 + t154;
t31 = -t102 * t49 + t104 * t133;
t32 = t102 * t133 + t104 * t49;
t160 = -t102 * t31 + t104 * t32;
t159 = -t226 + t231;
t158 = t99 * t174;
t156 = -qJ(5) * t75 - qJD(5) * t81;
t153 = -pkin(1) + t162;
t152 = t105 * t39 + t214 * t58;
t29 = t102 * t39 - t210 * t58;
t148 = t104 * t39 + t211 * t58;
t60 = t102 * t74 - t199;
t147 = t104 * t74 + t201;
t146 = 0.2e1 * t164;
t145 = -t65 * t39 + t53 * t57 + t54 * t58;
t144 = t74 * t57 - t167;
t141 = t42 + (qJ(5) * t81 + t246 * t261) * qJD(6);
t77 = pkin(8) * t220 + t177;
t139 = t220 * t54 - t65 * t86;
t135 = t100 * t142;
t134 = t142 * t101;
t131 = -qJD(6) * t56 - t246 * t74 - t156;
t127 = 0.2e1 * t261 * t54 + 0.2e1 * t53 * t81 - 0.2e1 * t65 * t74 - 0.2e1 * t66 * t75;
t126 = t100 * (qJD(2) * t162 + qJD(3) * t105);
t11 = -t22 * qJD(4) + t245 * t111 - t244 * t112;
t9 = -t11 - t183;
t107 = -t39 * pkin(5) - pkin(10) * t86 + t9;
t1 = -t102 * t107 + t254 * t104 + t18 * t211;
t2 = t254 * t102 + t104 * t107 - t18 * t210;
t125 = qJD(6) * t168 - t1 * t102 + t2 * t104;
t124 = -t1 * t104 - t102 * t2 + (-t102 * t7 - t104 * t6) * qJD(6);
t119 = -t74 * pkin(5) + t54;
t13 = -t102 * t119 + t252 * t104 + t211 * t49;
t14 = t252 * t102 + t104 * t119 - t210 * t49;
t3 = qJD(6) * t160 - t102 * t13 + t104 * t14;
t122 = -t102 * t14 - t104 * t13 + (-t102 * t32 - t104 * t31) * qJD(6);
t92 = qJ(5) * t247;
t84 = -0.2e1 * t179;
t72 = t77 * qJD(2);
t64 = (t177 + (pkin(3) * t99 + pkin(8)) * t220) * qJD(2);
t62 = pkin(4) * t81 + t154;
t51 = t101 * t137 + (t153 * t99 + t206) * t100;
t50 = -t130 + (-pkin(8) * t224 + t101 * t153) * t100;
t48 = pkin(4) * t75 + t157;
t43 = -t187 * t81 + t205;
t27 = t57 * pkin(4) + t120;
t23 = t104 * t25;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t179 (-t103 ^ 2 + t98) * t94 * t248, t169 * t249, t84, t170 * t250, 0, -0.2e1 * pkin(1) * t214 * t94 - 0.2e1 * t223 * t72, -0.2e1 * pkin(1) * t203 - 0.2e1 * t223 * t71 (t103 * t72 + t105 * t71 + (-t103 * t77 - t105 * t258) * qJD(2)) * t249, -0.2e1 * t258 * t72 + 0.2e1 * t71 * t77, 0.2e1 * t73 * t174, 0.2e1 * (-t134 - t239) * t194 (-t101 * t236 + t221 * t73) * t248, 0.2e1 * t99 * t135 * t213 (-t103 * t135 + t99 * t236) * t248, t84, -0.2e1 * t72 * t186 + 0.2e1 * (t72 * t229 - t44 * t105 + (t103 * t50 + t224 * t69) * qJD(2)) * t100, 0.2e1 * t72 * t73 + 0.2e1 * (t105 * t45 + (-t103 * t51 + t218 * t69) * qJD(2)) * t100, -0.2e1 * t45 * t142 - 0.2e1 * t44 * t73 + 0.2e1 * (-t101 * t50 - t51 * t99) * t194, 0.2e1 * t44 * t50 + 0.2e1 * t45 * t51 + 0.2e1 * t69 * t72, t30, 0.2e1 * t117 * t58 + 0.2e1 * t241, t152 * t249, -0.2e1 * t57 * t117, -0.2e1 * t117 * t220 - 0.2e1 * t181, t84, -0.2e1 * t11 * t220 + 0.2e1 * t116 * t61 - 0.2e1 * t259 * t86 + 0.2e1 * t64 * t57, -0.2e1 * t39 * t61 + 0.2e1 * t58 * t64 + 0.2e1 * (-t10 * t105 - t214 * t22) * t100, 0.2e1 * t10 * t57 - 0.2e1 * t11 * t58 + 0.2e1 * t117 * t22 - 0.2e1 * t259 * t39, -0.2e1 * t10 * t22 - 0.2e1 * t11 * t259 + 0.2e1 * t61 * t64, t84, t152 * t250, -0.2e1 * t116 * t220 + 0.2e1 * t181, t30, -0.2e1 * t116 * t58 + 0.2e1 * t241, 0.2e1 * t57 * t116, 0.2e1 * t116 * t19 - 0.2e1 * t20 * t39 + 0.2e1 * t8 * t57 + 0.2e1 * t9 * t58, -0.2e1 * t9 * t220 - 0.2e1 * t15 * t57 - 0.2e1 * t27 * t121 + 0.2e1 * (t20 * t103 - t136 * t27) * t215, -0.2e1 * t15 * t58 + 0.2e1 * t27 * t39 + 0.2e1 * (t105 * t8 - t19 * t214) * t100, 0.2e1 * t15 * t27 + 0.2e1 * t19 * t8 + 0.2e1 * t20 * t9, -0.2e1 * t47 * t26, 0.2e1 * t25 * t47 + 0.2e1 * t26 * t46, 0.2e1 * t26 * t58 + 0.2e1 * t39 * t47, -0.2e1 * t46 * t25, -0.2e1 * t25 * t58 - 0.2e1 * t39 * t46, t30, 0.2e1 * t17 * t25 + 0.2e1 * t2 * t58 - 0.2e1 * t39 * t6 - 0.2e1 * t46 * t5, 0.2e1 * t1 * t58 + 0.2e1 * t17 * t26 + 0.2e1 * t39 * t7 - 0.2e1 * t47 * t5, -0.2e1 * t1 * t46 + 0.2e1 * t2 * t47 - 0.2e1 * t25 * t7 - 0.2e1 * t26 * t6, -0.2e1 * t1 * t7 + 0.2e1 * t17 * t5 + 0.2e1 * t2 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, 0, -t86, 0, -t72, -t71, 0, 0, t158 (-t93 + t95) * t194, t99 * t86, -t158, t101 * t86, 0, -t101 * t72 + t126 * t99, t101 * t126 + t72 * t99 (-t134 + t239) * qJD(3) + t163, -pkin(2) * t72 + (t101 * t51 - t50 * t99) * qJD(3) + t163 * qJ(3), t24, t117 * t261 + t144, t255, -t117 * t81 + t240, -t256, 0, t116 * t91 + t61 * t75 + t64 * t81 + t139, t261 * t64 - t39 * t91 - t61 * t74 - t257, t10 * t81 - t11 * t261 + t117 * t66 - t22 * t75 - t259 * t74 + t145, -t10 * t66 - t11 * t65 - t22 * t53 + t259 * t54 + t64 * t91, 0, -t255, t256, t24, -t116 * t261 + t144, t116 * t81 + t240, -t116 * t66 + t19 * t75 - t20 * t74 + t261 * t9 + t8 * t81 + t145, t117 * t62 - t15 * t81 - t27 * t75 - t48 * t57 - t139, -t15 * t261 + t27 * t74 + t39 * t62 - t48 * t58 + t257, t15 * t62 + t19 * t53 + t20 * t54 + t27 * t48 + t65 * t9 - t66 * t8, -t47 * t200 + (t26 * t81 - t47 * t75) * t102, t159 * t75 + (-t233 + t228 + (t227 + t230) * qJD(6)) * t81, t102 * t167 + t200 * t58 + t26 * t261 + t47 * t74, -t46 * t202 + (-t25 * t81 + t46 * t75) * t104, t104 * t167 - t202 * t58 - t25 * t261 - t46 * t74, t24, -t104 * t171 + t14 * t58 + t17 * t202 + t2 * t261 + t25 * t56 - t31 * t39 - t42 * t46 - t6 * t74, t1 * t261 + t102 * t171 + t13 * t58 + t17 * t200 + t26 * t56 + t32 * t39 - t42 * t47 + t7 * t74, t124 * t81 - t13 * t46 + t14 * t47 + t168 * t75 - t25 * t32 - t26 * t31, -t1 * t32 - t13 * t7 + t14 * t6 + t17 * t42 + t2 * t31 + t5 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, qJ(3) * t178, t63, t146, 0, t208, 0, 0, 0.2e1 * t91 * t75, t91 * t251, t127, 0.2e1 * t165, 0, 0, 0, t63, t146, t208, t127, -0.2e1 * t48 * t81 - 0.2e1 * t62 * t75, -0.2e1 * t261 * t48 + 0.2e1 * t62 * t74, 0.2e1 * t48 * t62 + 0.2e1 * t165, 0.2e1 * t96 * t237 + 0.2e1 * t182, -0.2e1 * t187 * t79 - t205 * t260, -0.2e1 * t102 * t164 + 0.2e1 * t199 * t81, 0.2e1 * t81 * t70 - 0.2e1 * t182, -0.2e1 * t104 * t164 - 0.2e1 * t201 * t81, t63, -0.2e1 * t104 * t166 + 0.2e1 * t14 * t261 + 0.2e1 * t202 * t56 - 0.2e1 * t31 * t74, 0.2e1 * t102 * t166 + 0.2e1 * t13 * t261 + 0.2e1 * t200 * t56 + 0.2e1 * t32 * t74, 0.2e1 * t122 * t81 + 0.2e1 * t160 * t75, -0.2e1 * t13 * t32 + 0.2e1 * t14 * t31 + 0.2e1 * t42 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, t174, 0, t72, 0, 0, 0, 0, 0, 0, t116, -t39, 0, t64, 0, 0, 0, 0, 0, 0, 0, t117, t39, t15, 0, 0, 0, 0, 0, 0, t29, t148, t232 - t23 + (-t226 - t231) * qJD(6), t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75, -t74, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75, t74, t48, 0, 0, 0, 0, 0, 0, t60, t147, t70 + t238, t122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t39, 0, t117, t86, t11, t10, 0, 0, t86, t39, t116, 0, 0, 0, pkin(4) * t39 - qJ(5) * t116 - qJD(5) * t57, -t11 - 0.2e1 * t183, -t10 + 0.2e1 * t175 - 0.2e1 * t193, -pkin(4) * t9 - qJ(5) * t8 - qJD(5) * t19, t211 * t47 + t228, -qJD(6) * t159 - t23 - t232, -t148, -t210 * t46 + t233, t29, 0, t39 * t216 + qJ(5) * t25 - qJD(5) * t46 + t5 * t102 + (t104 * t17 + t217 * t58) * qJD(6), -t39 * t217 + qJ(5) * t26 - qJD(5) * t47 + t5 * t104 + (-t102 * t17 + t216 * t58) * qJD(6) (t246 * t26 - t2) * t104 + (t246 * t25 + t1) * t102 + ((-t246 * t46 - t7) * t104 + (t246 * t47 + t6) * t102) * qJD(6), t5 * qJ(5) + t17 * qJD(5) - t125 * t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, 0, -t75, 0, -t54, t53, 0, 0, 0, t74, t75, 0, 0, 0, pkin(4) * t74 + t156, t54, -t53, -pkin(4) * t54 - qJ(5) * t53 + qJD(5) * t66, t43, t191 * t260 - t238 + t70, -t147, -t43, t60, 0, t102 * t141 - t104 * t131, t102 * t131 + t104 * t141, -t3, t42 * qJ(5) + t56 * qJD(5) - t246 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t247, t92, -0.2e1 * t191, 0.2e1 * t187, 0, 0.2e1 * t191, 0, 0, 0.2e1 * qJ(5) * t210 + 0.2e1 * qJD(5) * t102, -0.2e1 * qJ(5) * t211 + 0.2e1 * qJD(5) * t104, 0, t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t39, t86, 0, t9, 0, 0, 0, 0, 0, 0, -t148, t29, -t233 - t228 + (t227 - t230) * qJD(6), t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t74, 0, 0, t54, 0, 0, 0, 0, 0, 0, -t147, t60, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, 0, -t25, -t39, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102 * t75 + t200, 0, -t202 + t225, -t74, t14, t13, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t210, t211, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, 0, -t210, 0, t102 * t209, t104 * t209, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t211, -t210, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
