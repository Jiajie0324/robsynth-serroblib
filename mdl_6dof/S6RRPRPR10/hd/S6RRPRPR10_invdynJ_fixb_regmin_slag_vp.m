% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRPRPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3]';
% 
% Output:
% tau_reg [6x32]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRPR10_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR10_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR10_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR10_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR10_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR10_invdynJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:09:29
% EndTime: 2019-03-09 11:09:48
% DurationCPUTime: 8.22s
% Computational Cost: add. (10477->644), mult. (26204->861), div. (0->0), fcn. (21544->14), ass. (0->317)
t250 = cos(pkin(6));
t385 = qJD(1) * t250;
t232 = qJD(2) + t385;
t254 = sin(qJ(2));
t249 = sin(pkin(6));
t414 = sin(pkin(11));
t349 = t249 * t414;
t321 = qJD(1) * t349;
t415 = cos(pkin(11));
t170 = t232 * t415 - t254 * t321;
t350 = t249 * t415;
t322 = qJD(1) * t350;
t302 = t254 * t322;
t171 = t232 * t414 + t302;
t253 = sin(qJ(4));
t433 = cos(qJ(4));
t293 = t253 * t170 + t171 * t433;
t441 = qJD(6) + t293;
t457 = t441 ^ 2;
t323 = t433 * t415;
t197 = t253 * t414 - t323;
t257 = cos(qJ(2));
t399 = t249 * t257;
t291 = t323 * t399;
t304 = t257 * t321;
t392 = qJD(1) * t291 + t197 * qJD(4) - t253 * t304;
t116 = -t433 * t170 + t171 * t253;
t456 = t116 ^ 2;
t384 = qJD(1) * t257;
t358 = t249 * t384;
t215 = -qJD(4) + t358;
t252 = sin(qJ(6));
t256 = cos(qJ(6));
t85 = -t256 * t116 - t215 * t252;
t455 = t116 * t85;
t87 = t116 * t252 - t215 * t256;
t454 = t116 * t87;
t453 = t441 * t85;
t452 = t116 * t215;
t223 = pkin(8) * t358;
t372 = pkin(1) * t385;
t187 = t254 * t372 + t223;
t159 = qJ(3) * t232 + t187;
t300 = -pkin(2) * t257 - qJ(3) * t254 - pkin(1);
t181 = t300 * t249;
t164 = qJD(1) * t181;
t95 = -t159 * t414 + t415 * t164;
t63 = -pkin(3) * t358 - t171 * pkin(9) + t95;
t96 = t415 * t159 + t414 * t164;
t69 = pkin(9) * t170 + t96;
t29 = t253 * t69 - t433 * t63;
t394 = -qJD(5) - t29;
t311 = pkin(2) * t254 - qJ(3) * t257;
t386 = qJD(1) * t249;
t185 = t311 * t386;
t359 = t254 * t386;
t186 = -pkin(8) * t359 + t257 * t372;
t128 = t414 * t185 + t415 * t186;
t107 = -pkin(9) * t304 + t128;
t344 = t414 * qJ(3);
t210 = -pkin(9) * t414 - t344;
t345 = t415 * qJ(3);
t360 = t415 * pkin(9);
t211 = t345 + t360;
t338 = t414 * qJD(3);
t356 = qJD(4) * t433;
t127 = t415 * t185 - t186 * t414;
t280 = t249 * (pkin(3) * t254 - t257 * t360);
t91 = qJD(1) * t280 + t127;
t451 = qJD(3) * t323 - t433 * t107 + t210 * t356 + (-qJD(4) * t211 - t338 - t91) * t253;
t198 = t253 * t415 + t414 * t433;
t269 = t198 * t399;
t157 = qJD(1) * t269;
t191 = t198 * qJD(4);
t391 = t191 - t157;
t434 = cos(qJ(1));
t362 = t434 * t254;
t255 = sin(qJ(1));
t396 = t255 * t257;
t193 = t250 * t362 + t396;
t246 = pkin(11) + qJ(4);
t242 = sin(t246);
t243 = cos(t246);
t363 = t249 * t434;
t140 = t193 * t242 + t243 * t363;
t361 = t434 * t257;
t397 = t254 * t255;
t192 = -t250 * t361 + t397;
t450 = t140 * t252 + t192 * t256;
t449 = t140 * t256 - t192 * t252;
t375 = qJDD(1) * t250;
t332 = qJDD(2) + t375;
t287 = t414 * t332;
t337 = qJDD(1) * t415;
t313 = t254 * t337;
t339 = t415 * qJD(2);
t320 = t257 * t339;
t262 = t249 * (qJD(1) * t320 + t313) + t287;
t329 = t257 * t349;
t301 = qJD(2) * t329;
t330 = t254 * t349;
t275 = qJD(1) * t301 + qJDD(1) * t330 - t332 * t415;
t382 = qJD(4) * t253;
t52 = -t170 * t356 + t171 * t382 + t253 * t275 - t433 * t262;
t51 = -qJDD(6) + t52;
t284 = t252 * t51 - t256 * t457;
t436 = t293 ^ 2;
t245 = t249 ^ 2;
t448 = 0.2e1 * t245;
t417 = qJ(5) * t359 - t451;
t447 = t215 * t293;
t401 = t249 * t254;
t233 = pkin(8) * t401;
t371 = pkin(1) * qJD(2) * t250;
t334 = qJD(1) * t371;
t370 = pkin(1) * t375;
t333 = qJD(2) * t223 + qJDD(1) * t233 + t254 * t334 - t257 * t370;
t122 = -pkin(2) * t332 + qJDD(3) + t333;
t194 = t250 * t396 + t362;
t317 = g(1) * t194 + g(2) * t192;
t283 = g(3) * t399 - t317;
t446 = -t122 - t283;
t156 = t253 * t210 + t211 * t433;
t445 = qJD(3) * t198 + qJD(4) * t156 - t253 * t107 + t433 * t91;
t444 = t127 + t338;
t150 = pkin(3) * t304 + t187;
t443 = qJ(5) * t392 - qJD(5) * t198 - t150;
t374 = qJDD(1) * t257;
t229 = t249 * t374;
t376 = qJD(1) * qJD(2);
t354 = t254 * t376;
t331 = t249 * t354;
t442 = -t331 + t229;
t393 = pkin(5) * t293 - t394;
t440 = t441 - qJD(6);
t30 = t253 * t63 + t433 * t69;
t28 = qJ(5) * t215 - t30;
t429 = pkin(5) * t116;
t18 = -t28 - t429;
t435 = pkin(4) + pkin(10);
t439 = t435 * t51 + (t18 - t30 + t429) * t441;
t184 = qJDD(4) - t442;
t438 = -t156 * t184 + t283 * t242;
t155 = -t210 * t433 + t253 * t211;
t437 = -t155 * t184 - t283 * t243;
t274 = qJD(2) * t311 - qJD(3) * t254;
t162 = t274 * t249;
t383 = qJD(2) * t254;
t357 = t249 * t383;
t306 = -pkin(8) * t357 + t257 * t371;
t168 = qJD(3) * t250 + t306;
t102 = t415 * t162 - t168 * t414;
t73 = qJD(2) * t280 + t102;
t236 = pkin(8) * t399;
t432 = pkin(1) * t254;
t388 = t250 * t432 + t236;
t180 = qJ(3) * t250 + t388;
t123 = -t180 * t414 + t415 * t181;
t189 = t250 * t414 + t254 * t350;
t75 = -pkin(3) * t399 - t189 * pkin(9) + t123;
t103 = t414 * t162 + t415 * t168;
t88 = -pkin(9) * t301 + t103;
t124 = t415 * t180 + t414 * t181;
t348 = t250 * t415;
t278 = -t330 + t348;
t90 = pkin(9) * t278 + t124;
t294 = -t253 * t73 - t75 * t356 + t382 * t90 - t433 * t88;
t14 = -t249 * (qJ(5) * t383 - qJD(5) * t257) + t294;
t431 = pkin(3) * t249;
t430 = pkin(4) * t184;
t426 = g(3) * t249;
t425 = t257 * pkin(1);
t424 = t253 * t75 + t433 * t90;
t422 = -t391 * pkin(5) - t417;
t366 = pkin(8) * t229 + t254 * t370 + t257 * t334;
t279 = -pkin(8) * t331 + t366;
t101 = qJ(3) * t332 + t232 * qJD(3) + t279;
t109 = (qJD(1) * t274 + qJDD(1) * t300) * t249;
t56 = t415 * t101 + t414 * t109;
t380 = qJD(6) * t256;
t381 = qJD(6) * t252;
t53 = t170 * t382 + t171 * t356 + t253 * t262 + t433 * t275;
t21 = t116 * t380 + t256 * t184 + t215 * t381 + t252 * t53;
t421 = t21 * t256;
t420 = t215 * t30;
t48 = t256 * t51;
t418 = t391 * pkin(4) + t443;
t416 = pkin(4) * t359 + t445;
t413 = qJ(5) * t116;
t411 = t293 * t116;
t177 = t184 * qJ(5);
t406 = t197 * t252;
t405 = t197 * t256;
t404 = t242 * t252;
t403 = t242 * t256;
t402 = t245 * qJD(1) ^ 2;
t400 = t249 * t255;
t398 = t252 * t257;
t395 = t256 * t257;
t188 = qJD(2) * t236 + t254 * t371;
t389 = t434 * pkin(1) + pkin(8) * t400;
t247 = t254 ^ 2;
t387 = -t257 ^ 2 + t247;
t379 = qJD(2) - t232;
t373 = t254 * qJDD(1);
t369 = t257 * t402;
t368 = t249 * t398;
t367 = t249 * t395;
t151 = pkin(3) * t301 + t188;
t365 = g(1) * t415;
t364 = g(2) * t415;
t355 = pkin(1) * t448;
t353 = t257 * t376;
t352 = -t255 * pkin(1) + pkin(8) * t363;
t351 = t122 * t414;
t346 = t255 * t414;
t55 = -t101 * t414 + t415 * t109;
t33 = -pkin(3) * t442 - pkin(9) * t262 + t55;
t41 = -pkin(9) * t275 + t56;
t343 = -t253 * t33 - t63 * t356 + t69 * t382 - t433 * t41;
t342 = -t253 * t41 + t433 * t33 - t69 * t356 - t63 * t382;
t341 = t184 * t252 - t256 * t53;
t340 = qJD(2) * t414;
t141 = t193 * t243 - t242 * t363;
t336 = t441 * t252;
t335 = t435 * t401;
t328 = -t253 * t90 + t433 * t75;
t241 = pkin(3) * t415 + pkin(2);
t288 = -t198 * qJ(5) - t241;
t121 = t197 * t435 + t288;
t326 = t392 * pkin(5) - qJD(1) * t335 + qJD(6) * t121 - t445;
t129 = t198 * pkin(5) + t155;
t325 = -qJD(6) * t129 - t391 * t435 - t443;
t324 = t434 * t414;
t195 = -t250 * t397 + t361;
t144 = t195 * t242 - t243 * t400;
t319 = g(1) * t140 - g(2) * t144;
t145 = t195 * t243 + t242 * t400;
t318 = -g(1) * t141 + g(2) * t145;
t316 = g(1) * t192 - g(2) * t194;
t315 = g(1) * t195 + g(2) * t193;
t312 = qJDD(5) - t342;
t4 = -pkin(5) * t52 - t184 * t435 + t312;
t68 = pkin(3) * t275 + t122;
t261 = t52 * qJ(5) - qJD(5) * t293 + t68;
t8 = t435 * t53 + t261;
t314 = t252 * t4 + t256 * t8;
t17 = t215 * t435 + t393;
t152 = -pkin(2) * t232 + qJD(3) - t186;
t113 = -pkin(3) * t170 + t152;
t267 = -qJ(5) * t293 + t113;
t24 = t116 * t435 + t267;
t9 = t17 * t256 - t24 * t252;
t10 = t17 * t252 + t24 * t256;
t134 = t189 * t433 + t253 * t278;
t43 = pkin(4) * t399 - t328;
t25 = t134 * pkin(5) + pkin(10) * t399 + t43;
t270 = t433 * t278;
t133 = t189 * t253 - t270;
t138 = pkin(3) * t330 + t233 + (-t241 - t425) * t250;
t264 = -t134 * qJ(5) + t138;
t36 = t133 * t435 + t264;
t309 = t25 * t256 - t252 * t36;
t308 = t25 * t252 + t256 * t36;
t42 = qJ(5) * t399 - t424;
t202 = qJD(5) * t215;
t6 = -t177 + t202 + t343;
t305 = t257 * t322;
t303 = t249 * t320;
t296 = -t336 * t441 - t48;
t295 = t253 * t88 + t90 * t356 + t75 * t382 - t433 * t73;
t110 = t133 * t256 + t368;
t179 = t242 * t250 + t243 * t401;
t289 = -g(1) * t145 - g(2) * t141 - g(3) * t179;
t131 = -t256 * t157 + t252 * t359;
t286 = -t191 * t256 + t197 * t381 - t131;
t132 = t157 * t252 + t256 * t359;
t285 = t191 * t252 + t197 * t380 - t132;
t282 = -g(3) * t401 - t315;
t80 = -qJD(4) * t270 - qJD(2) * t291 + (qJD(4) * t189 + t301) * t253;
t281 = qJ(5) * t80 - qJD(5) * t134 + t151;
t277 = -t52 - t452;
t276 = t52 - t452;
t2 = -qJD(6) * t10 - t252 * t8 + t256 * t4;
t178 = t242 * t401 - t250 * t243;
t273 = g(1) * t144 + g(2) * t140 + g(3) * t178 + t342;
t272 = t289 - t343;
t5 = -pkin(5) * t53 - t6;
t268 = t5 + (t435 * t441 + t413) * t441 + t289;
t38 = pkin(4) * t116 + t267;
t266 = t293 * t38 + qJDD(5) - t273;
t265 = -t414 * t55 + t415 * t56 + t282;
t11 = t53 * pkin(4) + t261;
t260 = t53 - t447;
t251 = -pkin(9) - qJ(3);
t183 = t233 + (-pkin(2) - t425) * t250;
t139 = t197 * pkin(4) + t288;
t130 = -t197 * pkin(5) + t156;
t111 = t133 * t252 - t367;
t106 = t144 * t252 + t194 * t256;
t105 = t144 * t256 - t194 * t252;
t81 = qJD(2) * t269 + qJD(4) * t134;
t58 = pkin(4) * t293 + t413;
t54 = t133 * pkin(4) + t264;
t45 = qJD(6) * t110 + t252 * t81 + t256 * t357;
t44 = -qJD(6) * t367 - t256 * t81 + (qJD(6) * t133 + t357) * t252;
t27 = pkin(4) * t215 - t394;
t26 = -pkin(5) * t133 - t42;
t23 = pkin(4) * t81 + t281;
t22 = qJD(6) * t87 + t341;
t16 = t435 * t81 + t281;
t15 = -pkin(4) * t357 + t295;
t13 = -pkin(5) * t81 - t14;
t12 = -t80 * pkin(5) - qJD(2) * t335 + t295;
t7 = t312 - t430;
t1 = t9 * qJD(6) + t314;
t3 = [qJDD(1), g(1) * t255 - g(2) * t434, g(1) * t434 + g(2) * t255 (qJDD(1) * t247 + 0.2e1 * t254 * t353) * t245 (t257 * t373 - t376 * t387) * t448 (qJD(2) * t257 * t232 + t254 * qJDD(2) + (t353 + 0.2e1 * t373) * t250) * t249 (-t232 * t383 + t257 * qJDD(2) + (-t354 + 0.2e1 * t374) * t250) * t249, t332 * t250, -t188 * t232 + (t250 * t425 - t233) * t332 - t333 * t250 + g(1) * t193 - g(2) * t195 + (-t354 + t374) * t355, -t306 * t232 - t388 * t332 - t279 * t250 + (-t353 - t373) * t355 - t316, -t188 * t170 + t183 * t275 - t122 * t348 + t193 * t365 - t195 * t364 + (-g(1) * t324 - g(2) * t346 + (t351 + (qJD(1) * t123 + t95) * qJD(2)) * t254 + (-qJD(1) * t102 - qJDD(1) * t123 + t152 * t340 - t55) * t257) * t249, t103 * t358 + t56 * t399 - t96 * t357 + t188 * t171 + t183 * t262 + t122 * t189 + t152 * t303 - g(1) * (t193 * t414 + t350 * t434) - g(2) * (-t195 * t414 + t255 * t350) + t442 * t124, -t102 * t171 + t103 * t170 - t123 * t262 - t124 * t275 - t55 * t189 + t278 * t56 - t301 * t96 - t303 * t95 + t316, t56 * t124 + t96 * t103 + t55 * t123 + t95 * t102 + t122 * t183 + t152 * t188 - g(1) * (-pkin(2) * t193 - qJ(3) * t192 + t352) - g(2) * (pkin(2) * t195 + qJ(3) * t194 + t389) -t134 * t52 - t293 * t80, t116 * t80 + t133 * t52 - t134 * t53 - t293 * t81, t134 * t184 + t215 * t80 + (t257 * t52 + t293 * t383) * t249, -t133 * t184 + t215 * t81 + (-t116 * t383 + t257 * t53) * t249 (-t184 * t257 - t215 * t383) * t249, t295 * t215 + t328 * t184 + t151 * t116 + t138 * t53 + t68 * t133 + t113 * t81 + (-t257 * t342 - t29 * t383) * t249 - t318, -t294 * t215 - t424 * t184 + t151 * t293 - t138 * t52 + t68 * t134 - t113 * t80 + (-t257 * t343 - t30 * t383) * t249 - t319, t116 * t14 + t133 * t6 + t134 * t7 + t15 * t293 - t27 * t80 + t28 * t81 + t42 * t53 - t43 * t52 + t316, -t11 * t133 - t116 * t23 - t15 * t215 + t184 * t43 - t38 * t81 - t53 * t54 + (-t257 * t7 + t27 * t383) * t249 + t318, -t11 * t134 - t293 * t23 + t14 * t215 - t184 * t42 + t38 * t80 + t52 * t54 + (t257 * t6 - t28 * t383) * t249 + t319, t11 * t54 + t38 * t23 + t6 * t42 + t28 * t14 + t7 * t43 + t27 * t15 - g(1) * (-pkin(4) * t141 - qJ(5) * t140 + t192 * t251 - t193 * t241 + t324 * t431 + t352) - g(2) * (t145 * pkin(4) + t144 * qJ(5) - t194 * t251 + t195 * t241 + t346 * t431 + t389) t111 * t21 + t45 * t87, t110 * t21 - t111 * t22 - t44 * t87 - t45 * t85, -t111 * t51 + t134 * t21 + t441 * t45 - t80 * t87, -t110 * t51 - t134 * t22 - t44 * t441 + t80 * t85, -t134 * t51 - t441 * t80 (-qJD(6) * t308 + t12 * t256 - t16 * t252) * t441 - t309 * t51 + t2 * t134 - t9 * t80 + t13 * t85 + t26 * t22 - t5 * t110 + t18 * t44 + g(1) * t450 - g(2) * t106 -(qJD(6) * t309 + t12 * t252 + t16 * t256) * t441 + t308 * t51 - t1 * t134 + t10 * t80 + t13 * t87 + t26 * t21 + t5 * t111 + t18 * t45 + g(1) * t449 - g(2) * t105; 0, 0, 0, -t254 * t369, t387 * t402 (t379 * t384 + t373) * t249, -t359 * t379 + t229, t332, t187 * t232 + t402 * t432 - t283 - t333, pkin(1) * t369 + t186 * t232 + (pkin(8) * t376 + g(3)) * t401 + t315 - t366, -pkin(2) * t275 - t122 * t415 + t187 * t170 + t194 * t365 + t192 * t364 + ((-t415 * g(3) + qJDD(1) * t344) * t257 + ((-qJ(3) * t340 - t95) * t254 + (-t152 * t414 + t444) * t257) * qJD(1)) * t249, -pkin(2) * t262 + g(3) * t329 - t128 * t358 - t187 * t171 + t96 * t359 + t351 - t317 * t414 + (qJD(3) - t152) * t305 + (-qJD(2) * t302 + t337 * t399) * qJ(3), t262 * t344 - t275 * t345 + t96 * t304 + t95 * t305 + t265 + t444 * t171 + (qJD(3) * t415 - t128) * t170, -t95 * t127 - t96 * t128 - t152 * t187 + (-t414 * t95 + t415 * t96) * qJD(3) + t446 * pkin(2) + t265 * qJ(3), -t198 * t52 - t293 * t392, t116 * t392 + t197 * t52 - t198 * t53 - t293 * t391, t184 * t198 + t215 * t392 - t293 * t359, t116 * t359 - t184 * t197 + t215 * t391, t215 * t359, t391 * t113 - t150 * t116 + t68 * t197 + t215 * t445 - t241 * t53 + t29 * t359 + t437, -t392 * t113 - t150 * t293 + t68 * t198 + t451 * t215 + t241 * t52 + t30 * t359 + t438, t116 * t417 - t155 * t52 - t156 * t53 + t197 * t6 + t198 * t7 - t27 * t392 + t28 * t391 + t293 * t416 + t282, -t11 * t197 - t116 * t418 - t139 * t53 - t215 * t416 - t27 * t359 - t38 * t391 - t437, -t11 * t198 + t139 * t52 + t215 * t417 + t28 * t359 - t293 * t418 + t38 * t392 - t438, t11 * t139 + t7 * t155 - t6 * t156 + t416 * t27 + t417 * t28 + t418 * t38 + (t254 * t426 + t315) * t251 + (-t257 * t426 + t317) * (pkin(4) * t243 + qJ(5) * t242 + t241) t21 * t406 + t285 * t87, t131 * t87 + t132 * t85 + (-t252 * t85 + t256 * t87) * t191 + (t421 - t22 * t252 + (-t252 * t87 - t256 * t85) * qJD(6)) * t197, t198 * t21 + t285 * t441 - t392 * t87 - t406 * t51, -t198 * t22 - t286 * t441 + t392 * t85 - t405 * t51, -t198 * t51 - t392 * t441 -(-t121 * t252 + t129 * t256) * t51 + t2 * t198 + t130 * t22 - t5 * t405 - g(1) * (-t194 * t404 + t195 * t256) - g(2) * (-t192 * t404 + t193 * t256) - t392 * t9 + t422 * t85 - (t242 * t398 + t254 * t256) * t426 + (t252 * t325 - t256 * t326) * t441 + t286 * t18 (t121 * t256 + t129 * t252) * t51 - t1 * t198 + t130 * t21 + t5 * t406 - g(1) * (-t194 * t403 - t195 * t252) - g(2) * (-t192 * t403 - t193 * t252) + t422 * t87 - (t242 * t395 - t252 * t254) * t426 + (t252 * t326 + t256 * t325) * t441 + t392 * t10 + t285 * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t171 * t358 + t275, t287 + (t313 + (t339 - t170) * t384) * t249, -t170 ^ 2 - t171 ^ 2, -t96 * t170 + t95 * t171 - t446, 0, 0, 0, 0, 0, t260, -t276, -t436 - t456, -t260, t276, -t116 * t28 - t27 * t293 + t11 + t283, 0, 0, 0, 0, 0, t284 + t455, t252 * t457 + t454 + t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t411, t436 - t456, t277, -t53 - t447, t184, -t113 * t293 + t273 - t420, t113 * t116 + t215 * t29 - t272, pkin(4) * t52 - qJ(5) * t53 + (-t28 - t30) * t293 + (t27 + t394) * t116, t116 * t58 + t266 + t420 - 0.2e1 * t430, -t116 * t38 + t215 * t394 + t293 * t58 + 0.2e1 * t177 - t202 + t272, -t6 * qJ(5) - t7 * pkin(4) - t38 * t58 - t27 * t30 - g(1) * (-pkin(4) * t144 + qJ(5) * t145) - g(2) * (-pkin(4) * t140 + qJ(5) * t141) - g(3) * (-pkin(4) * t178 + qJ(5) * t179) + t394 * t28, -t336 * t87 + t421 (-t441 * t87 - t22) * t256 + (-t21 + t453) * t252, t296 + t454, t284 - t455, t441 * t116, qJ(5) * t22 + t9 * t116 + t268 * t252 + t256 * t439 + t393 * t85, qJ(5) * t21 - t10 * t116 - t252 * t439 + t268 * t256 + t393 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t277, t184 - t411, -t215 ^ 2 - t436, -t215 * t28 + t266 - t430, 0, 0, 0, 0, 0, t215 * t85 + t296, t215 * t87 + t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87 * t85, -t85 ^ 2 + t87 ^ 2, t21 + t453, t440 * t87 - t341, -t51, t10 * t441 - t18 * t87 - g(1) * t105 - g(2) * t449 - g(3) * (t178 * t256 + t368) + t2, t18 * t85 + g(1) * t106 + g(2) * t450 - g(3) * (-t178 * t252 + t367) - t314 + t440 * t9;];
tau_reg  = t3;
