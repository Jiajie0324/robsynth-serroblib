% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRPR10_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR10_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR10_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR10_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR10_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR10_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:09:33
% EndTime: 2019-03-09 11:10:02
% DurationCPUTime: 15.90s
% Computational Cost: add. (20316->810), mult. (50410->1057), div. (0->0), fcn. (41300->14), ass. (0->373)
t297 = sin(pkin(11));
t299 = cos(pkin(11));
t303 = sin(qJ(4));
t515 = cos(qJ(4));
t428 = t515 * t299;
t298 = sin(pkin(6));
t307 = cos(qJ(2));
t473 = t298 * t307;
t371 = t428 * t473;
t455 = qJD(1) * t307;
t426 = t298 * t455;
t398 = t297 * t426;
t421 = qJD(4) * t515;
t451 = qJD(4) * t303;
t462 = qJD(1) * t371 + t297 * t451 - t299 * t421 - t303 * t398;
t242 = t297 * t515 + t303 * t299;
t334 = t242 * t473;
t465 = qJD(1) * t334 - t242 * qJD(4);
t445 = qJD(1) * qJD(2);
t418 = t307 * t445;
t304 = sin(qJ(2));
t442 = t304 * qJDD(1);
t348 = t418 + t442;
t300 = cos(pkin(6));
t457 = qJD(1) * t300;
t280 = qJD(2) + t457;
t456 = qJD(1) * t304;
t427 = t298 * t456;
t202 = t280 * t299 - t297 * t427;
t203 = t280 * t297 + t299 * t427;
t134 = -t515 * t202 + t203 * t303;
t265 = -qJD(4) + t426;
t302 = sin(qJ(6));
t306 = cos(qJ(6));
t105 = t134 * t302 - t265 * t306;
t354 = t303 * t202 + t203 * t515;
t526 = qJD(6) + t354;
t545 = t306 * t526;
t554 = t105 * t545;
t377 = pkin(2) * t304 - qJ(3) * t307;
t225 = t377 * t298 * qJD(1);
t441 = pkin(1) * t457;
t226 = -pkin(8) * t427 + t307 * t441;
t145 = t299 * t225 - t226 * t297;
t345 = (-pkin(9) * t299 * t307 + pkin(3) * t304) * t298;
t109 = qJD(1) * t345 + t145;
t146 = t297 * t225 + t299 * t226;
t125 = -pkin(9) * t398 + t146;
t507 = pkin(9) + qJ(3);
t258 = t507 * t297;
t259 = t507 * t299;
t181 = -t303 * t258 + t259 * t515;
t494 = qJD(3) * t242 + qJD(4) * t181 + t109 * t515 - t303 * t125;
t227 = pkin(8) * t426 + t304 * t441;
t176 = pkin(3) * t398 + t227;
t553 = qJ(5) * t462 - qJD(5) * t242 - t176;
t444 = qJDD(1) * t300;
t391 = qJDD(2) + t444;
t361 = t297 * t391;
t476 = t298 * t299;
t313 = t348 * t476 + t361;
t542 = t348 * t298;
t460 = t542 * t297;
t337 = t299 * t391 - t460;
t69 = -t202 * t421 + t203 * t451 - t303 * t337 - t515 * t313;
t68 = -qJDD(6) + t69;
t340 = t302 * t68 - t526 * t545;
t552 = t134 ^ 2;
t517 = pkin(4) + pkin(10);
t551 = -t465 * t517 + t553;
t475 = t298 * t304;
t403 = t517 * t475;
t550 = -pkin(5) * t462 + qJD(1) * t403 + t494;
t452 = qJD(3) * t297;
t496 = -qJD(3) * t428 + t515 * t125 + t258 * t421 + (qJD(4) * t259 + t109 + t452) * t303;
t443 = qJDD(1) * t307;
t277 = t298 * t443;
t419 = t304 * t445;
t390 = t298 * t419;
t528 = -t390 + t277;
t220 = qJDD(4) - t528;
t449 = qJD(6) * t306;
t450 = qJD(6) * t302;
t70 = t202 * t451 + t203 * t421 + t303 * t313 - t515 * t337;
t36 = -t134 * t449 - t306 * t220 - t265 * t450 - t302 * t70;
t103 = -t306 * t134 - t265 * t302;
t404 = t526 * t103;
t549 = t36 - t404;
t548 = t103 * t134;
t547 = t105 * t134;
t546 = t134 * t265;
t184 = qJ(3) * t280 + t227;
t366 = -pkin(2) * t307 - qJ(3) * t304 - pkin(1);
t217 = t366 * t298;
t190 = qJD(1) * t217;
t113 = -t184 * t297 + t190 * t299;
t323 = -pkin(3) * t426 - pkin(9) * t203 + t113;
t82 = t515 * t323;
t114 = t299 * t184 + t297 * t190;
t87 = pkin(9) * t202 + t114;
t44 = t303 * t87 - t82;
t467 = -qJD(5) - t44;
t440 = pkin(1) * qJD(2) * t300;
t402 = qJD(1) * t440;
t439 = pkin(1) * t444;
t399 = pkin(8) * t542 + t304 * t402 - t307 * t439;
t535 = pkin(2) * t391;
t140 = qJDD(3) + t399 - t535;
t516 = cos(qJ(1));
t429 = t516 * t307;
t305 = sin(qJ(1));
t470 = t304 * t305;
t233 = -t300 * t429 + t470;
t430 = t516 * t304;
t469 = t305 * t307;
t235 = t300 * t469 + t430;
t385 = g(1) * t235 + g(2) * t233;
t530 = g(3) * t473 - t385;
t544 = t140 + t530;
t180 = t515 * t258 + t259 * t303;
t294 = pkin(11) + qJ(4);
t291 = cos(t294);
t331 = t530 * t291;
t543 = -t180 * t220 - t331;
t466 = pkin(5) * t354 - t467;
t29 = t265 * t517 + t466;
t178 = -pkin(2) * t280 + qJD(3) - t226;
t131 = -pkin(3) * t202 + t178;
t318 = -qJ(5) * t354 + t131;
t39 = t134 * t517 + t318;
t13 = t29 * t306 - t302 * t39;
t86 = -pkin(3) * t337 + t140;
t312 = t69 * qJ(5) - qJD(5) * t354 + t86;
t10 = t517 * t70 + t312;
t319 = t303 * t323;
t432 = pkin(8) * t277 + t304 * t439 + t307 * t402;
t155 = -pkin(8) * t390 + t432;
t119 = qJ(3) * t391 + t280 * qJD(3) + t155;
t328 = qJD(2) * t377 - qJD(3) * t304;
t127 = (qJD(1) * t328 + qJDD(1) * t366) * t298;
t74 = -t297 * t119 + t299 * t127;
t48 = -pkin(3) * t528 - pkin(9) * t313 + t74;
t75 = t299 * t119 + t297 * t127;
t56 = pkin(9) * t337 + t75;
t413 = qJD(4) * t319 + t303 * t56 + t87 * t421 - t515 * t48;
t379 = qJDD(5) + t413;
t6 = -pkin(5) * t69 - t220 * t517 + t379;
t378 = t306 * t10 + t302 * t6;
t1 = qJD(6) * t13 + t378;
t541 = -t13 * t526 + t1;
t14 = t29 * t302 + t306 * t39;
t2 = -qJD(6) * t14 - t302 * t10 + t306 * t6;
t540 = t14 * t526 + t2;
t234 = t300 * t430 + t469;
t290 = sin(t294);
t431 = t298 * t516;
t166 = t234 * t290 + t291 * t431;
t538 = t166 * t302 + t233 * t306;
t537 = t166 * t306 - t233 * t302;
t518 = t354 ^ 2;
t293 = t298 ^ 2;
t536 = 0.2e1 * t293;
t534 = pkin(3) * t297;
t497 = qJ(5) * t427 + t496;
t533 = t265 * t354;
t283 = pkin(4) * t473;
t438 = qJ(5) * t473;
t531 = t291 * t283 + t290 * t438;
t423 = t203 * t455;
t529 = t298 * t423 + t337;
t514 = pkin(1) * t304;
t238 = pkin(8) * t473 + t300 * t514;
t229 = qJD(2) * t238;
t527 = qJD(3) - t178;
t525 = t526 - qJD(6);
t45 = t515 * t87 + t319;
t43 = t265 * qJ(5) - t45;
t508 = t134 * pkin(5);
t30 = -t43 - t508;
t524 = t30 * t526 + t517 * t68;
t523 = t220 * t242 + t265 * t462 - t354 * t427;
t241 = t297 * t303 - t428;
t522 = -t134 * t427 + t220 * t241 + t265 * t465;
t521 = -t181 * t220 + t290 * t530;
t187 = t328 * t298;
t454 = qJD(2) * t304;
t425 = t298 * t454;
t228 = -pkin(8) * t425 + t307 * t440;
t194 = qJD(3) * t300 + t228;
t121 = t297 * t187 + t299 * t194;
t453 = qJD(2) * t307;
t424 = t298 * t453;
t396 = t297 * t424;
t106 = -pkin(9) * t396 + t121;
t216 = qJ(3) * t300 + t238;
t142 = t299 * t216 + t297 * t217;
t435 = t297 * t475;
t472 = t299 * t300;
t355 = -t435 + t472;
t108 = pkin(9) * t355 + t142;
t120 = t299 * t187 - t194 * t297;
t91 = qJD(2) * t345 + t120;
t141 = -t216 * t297 + t299 * t217;
t230 = t297 * t300 + t299 * t475;
t93 = -pkin(3) * t473 - pkin(9) * t230 + t141;
t353 = -t515 * t106 + t108 * t451 - t303 * t91 - t93 * t421;
t22 = -t298 * (qJ(5) * t454 - qJD(5) * t307) + t353;
t154 = t230 * t515 + t303 * t355;
t335 = t515 * t355;
t98 = -qJD(4) * t335 - qJD(2) * t371 + (qJD(4) * t230 + t396) * t303;
t520 = t298 * (t307 * t69 + t354 * t454) + t154 * t220 + t265 * t98;
t153 = t230 * t303 - t335;
t99 = qJD(2) * t334 + qJD(4) * t154;
t519 = t298 * (t134 * t454 - t307 * t70) + t153 * t220 - t265 * t99;
t513 = pkin(1) * t307;
t512 = pkin(4) * t220;
t509 = g(3) * t298;
t289 = t299 * pkin(3) + pkin(2);
t365 = -qJ(5) * t242 - t289;
t139 = t241 * t517 + t365;
t149 = pkin(5) * t242 + t180;
t78 = -t139 * t302 + t149 * t306;
t506 = qJD(6) * t78 + t302 * t550 + t306 * t551;
t79 = t139 * t306 + t149 * t302;
t505 = -qJD(6) * t79 - t302 * t551 + t306 * t550;
t504 = t265 * t45;
t412 = t220 * t302 - t306 * t70;
t37 = qJD(6) * t105 + t412;
t503 = t302 * t37;
t501 = t306 * t36;
t65 = t306 * t68;
t60 = t515 * t108 + t303 * t93;
t499 = pkin(5) * t465 - t497;
t498 = -pkin(4) * t465 + t553;
t495 = pkin(4) * t427 + t494;
t493 = qJ(3) * t297;
t492 = qJ(5) * t134;
t491 = qJ(5) * t290;
t490 = t105 * t103;
t489 = t134 * t354;
t212 = t220 * qJ(5);
t486 = t233 * t291;
t483 = t235 * t291;
t482 = t241 * t302;
t481 = t241 * t306;
t480 = t290 * t302;
t479 = t290 * t306;
t296 = t307 ^ 2;
t478 = t293 * t296;
t477 = t293 * qJD(1) ^ 2;
t474 = t298 * t305;
t471 = t302 * t307;
t468 = t306 * t307;
t464 = -t233 * t289 + t234 * t507;
t236 = -t300 * t470 + t429;
t463 = -t235 * t289 + t236 * t507;
t459 = t516 * pkin(1) + pkin(8) * t474;
t295 = t304 ^ 2;
t458 = t295 - t296;
t448 = qJD(2) - t280;
t437 = t296 * t477;
t436 = t307 * t477;
t434 = t298 * t471;
t433 = t298 * t468;
t422 = t518 - t552;
t420 = pkin(1) * t536;
t416 = t299 * t443;
t415 = -pkin(1) * t305 + pkin(8) * t431;
t414 = -qJD(4) * t82 - t303 * t48 + t87 * t451 - t515 * t56;
t167 = t234 * t291 - t290 * t431;
t411 = -t166 * pkin(4) + qJ(5) * t167;
t170 = t236 * t290 - t291 * t474;
t171 = t236 * t291 + t290 * t474;
t410 = -t170 * pkin(4) + qJ(5) * t171;
t213 = t290 * t475 - t300 * t291;
t214 = t290 * t300 + t291 * t475;
t409 = -t213 * pkin(4) + qJ(5) * t214;
t408 = t302 * t427 - t306 * t465;
t407 = t302 * t465 + t306 * t427;
t405 = t526 * t302;
t401 = -pkin(4) * t486 - t233 * t491 + t464;
t400 = -pkin(4) * t483 - t235 * t491 + t463;
t397 = t299 * t426;
t395 = t299 * t424;
t393 = t265 * t427;
t392 = t202 * t426;
t388 = t304 * t418;
t59 = -t303 * t108 + t515 * t93;
t387 = g(1) * t166 - g(2) * t170;
t386 = -g(1) * t167 + g(2) * t171;
t384 = g(1) * t233 - g(2) * t235;
t383 = g(1) * t236 + g(2) * t234;
t382 = g(1) * t234 - g(2) * t236;
t246 = t289 * t473;
t381 = t475 * t507 + t246;
t376 = t134 * t99 + t153 * t70;
t375 = -t154 * t69 - t354 * t98;
t58 = t283 - t59;
t40 = t154 * pkin(5) + pkin(10) * t473 + t58;
t281 = pkin(8) * t475;
t160 = pkin(3) * t435 + t281 + (-t289 - t513) * t300;
t315 = -t154 * qJ(5) + t160;
t51 = t153 * t517 + t315;
t20 = -t302 * t51 + t306 * t40;
t21 = t302 * t40 + t306 * t51;
t374 = t235 * t507 + t236 * t289 + t474 * t534 + t459;
t370 = -t518 - t552;
t368 = qJD(1) * (qJD(2) * t299 - t202);
t249 = qJD(5) * t265;
t8 = -t212 + t249 + t414;
t57 = t438 - t60;
t360 = g(1) * t516 + g(2) * t305;
t359 = -t405 * t526 - t65;
t358 = t303 * t106 + t108 * t421 + t93 * t451 - t515 * t91;
t128 = t153 * t306 + t434;
t352 = -t233 * t507 - t234 * t289 + t431 * t534 + t415;
t350 = -t134 * t465 + t241 * t70;
t349 = -t242 * t69 - t354 * t462;
t347 = g(1) * t170 + g(2) * t166 + g(3) * t213;
t346 = -g(1) * t171 - g(2) * t167 - g(3) * t214;
t342 = t241 * t450 - t408;
t341 = t241 * t449 - t407;
t338 = -g(3) * t475 - t383;
t336 = t171 * pkin(4) + qJ(5) * t170 + t374;
t333 = t69 + t546;
t332 = t69 - t546;
t330 = t134 * t98 + t153 * t69 - t154 * t70 - t354 * t99;
t329 = t337 * t299;
t177 = pkin(3) * t396 + t229;
t327 = -pkin(4) * t167 - qJ(5) * t166 + t352;
t326 = t347 - t413;
t325 = t346 - t414;
t7 = -pkin(5) * t70 - t8;
t324 = qJD(6) * t517 * t526 + t346 + t7;
t322 = -t180 * t69 - t181 * t70 + t338;
t321 = -t74 * t297 + t75 * t299 + t338;
t320 = t134 * t462 + t241 * t69 - t242 * t70 + t354 * t465;
t53 = pkin(4) * t134 + t318;
t317 = t354 * t53 + qJDD(5) - t326;
t316 = qJ(5) * t98 - qJD(5) * t154 + t177;
t15 = t70 * pkin(4) + t312;
t311 = t70 - t533;
t310 = t70 + t533;
t256 = t304 * t436;
t237 = t300 * t513 - t281;
t219 = t281 + (-pkin(2) - t513) * t300;
t215 = (qJDD(1) * t296 - 0.2e1 * t388) * t293;
t161 = pkin(4) * t241 + t365;
t150 = -t241 * pkin(5) + t181;
t148 = (-t220 * t307 - t265 * t454) * t298;
t129 = -t302 * t153 + t433;
t124 = t170 * t302 + t235 * t306;
t123 = t170 * t306 - t235 * t302;
t77 = pkin(4) * t354 + t492;
t73 = t153 * pkin(4) + t315;
t62 = qJD(6) * t128 + t302 * t99 + t306 * t425;
t61 = -qJD(6) * t433 - t306 * t99 + (qJD(6) * t153 + t425) * t302;
t52 = t354 * t517 + t492;
t42 = pkin(4) * t265 - t467;
t41 = -pkin(5) * t153 - t57;
t38 = pkin(4) * t99 + t316;
t35 = t306 * t37;
t34 = t45 - t508;
t28 = t517 * t99 + t316;
t23 = -pkin(4) * t425 + t358;
t19 = -pkin(5) * t99 - t22;
t18 = -t98 * pkin(5) - qJD(2) * t403 + t358;
t17 = t302 * t34 + t306 * t52;
t16 = -t302 * t52 + t306 * t34;
t9 = t379 - t512;
t4 = -qJD(6) * t21 + t18 * t306 - t28 * t302;
t3 = qJD(6) * t20 + t18 * t302 + t28 * t306;
t5 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t305 - g(2) * t516, t360, 0, 0 (qJDD(1) * t295 + 0.2e1 * t388) * t293 (t307 * t442 - t445 * t458) * t536 (t280 * t453 + t304 * qJDD(2) + (t418 + 0.2e1 * t442) * t300) * t298, t215 (-t280 * t454 + t307 * qJDD(2) + (-t419 + 0.2e1 * t443) * t300) * t298, t391 * t300, -t229 * t280 + t237 * t391 - t399 * t300 + (-t419 + t443) * t420 + t382, -t155 * t300 - t228 * t280 - t238 * t391 - t348 * t420 - t384 ((-qJD(2) * t226 + t238 * qJDD(1) + t155 + (-qJD(2) * t237 + t228) * qJD(1)) * t307 + (-qJD(2) * t227 - t237 * qJDD(1) + t399) * t304 - t360) * t298, t293 * qJDD(1) * pkin(1) ^ 2 - g(1) * t415 - g(2) * t459 + t155 * t238 - t226 * t229 + t227 * t228 - t237 * t399, t230 * t361 + (t203 * t453 + t230 * t348) * t476, t202 * t395 - t203 * t396 + t230 * t337 + t313 * t355, -t299 * t445 * t478 + t203 * t425 - t230 * t528 - t313 * t473, -t202 * t396 + t337 * t355 (-t299 * qJDD(2) + (t435 - 0.2e1 * t472) * qJDD(1) + t460) * t473 + (t202 * t475 + (t297 * t478 + t355 * t475) * qJD(1)) * qJD(2), t215, -t229 * t202 + t219 * t460 + (-t140 * t300 - t219 * t391 + t382) * t299 + ((qJD(1) * t141 + t113) * t454 + (-qJD(1) * t120 - qJDD(1) * t141 - t74) * t307 + (t140 * t304 + t178 * t453 - t360) * t297) * t298, t121 * t426 + t75 * t473 - t114 * t425 + t229 * t203 + t219 * t313 + t140 * t230 + t178 * t395 - g(1) * (t234 * t297 + t299 * t431) - g(2) * (-t236 * t297 + t299 * t474) + t528 * t142, -t113 * t395 - t114 * t396 - t120 * t203 + t121 * t202 - t141 * t313 + t142 * t337 - t74 * t230 + t355 * t75 + t384, t75 * t142 + t114 * t121 + t74 * t141 + t113 * t120 + t140 * t219 + t178 * t229 - g(1) * (-pkin(2) * t234 - qJ(3) * t233 + t415) - g(2) * (pkin(2) * t236 + qJ(3) * t235 + t459) t375, t330, t520, t376, -t519, t148, t131 * t99 + t134 * t177 + t153 * t86 + t160 * t70 + t220 * t59 + t358 * t265 + (t307 * t413 - t44 * t454) * t298 - t386, -t131 * t98 + t354 * t177 + t154 * t86 - t160 * t69 - t220 * t60 - t353 * t265 + (-t307 * t414 - t45 * t454) * t298 - t387, t134 * t353 + t153 * t414 + t154 * t413 + t354 * t358 - t44 * t98 - t45 * t99 + t59 * t69 - t60 * t70 + t384, -g(1) * t352 - g(2) * t374 + t131 * t177 + t86 * t160 - t353 * t45 + t358 * t44 - t413 * t59 - t414 * t60, t148, -t520, t519, t375, t330, t376, t134 * t22 + t153 * t8 + t154 * t9 + t23 * t354 - t42 * t98 + t43 * t99 + t57 * t70 - t58 * t69 + t384, -t134 * t38 - t15 * t153 + t220 * t58 - t23 * t265 - t53 * t99 - t70 * t73 + (-t307 * t9 + t42 * t454) * t298 + t386, -t354 * t38 - t15 * t154 + t22 * t265 - t220 * t57 + t53 * t98 + t69 * t73 + (t307 * t8 - t43 * t454) * t298 + t387, -g(1) * t327 - g(2) * t336 + t15 * t73 + t43 * t22 + t42 * t23 + t53 * t38 + t8 * t57 + t9 * t58, t105 * t62 + t129 * t36, -t103 * t62 - t105 * t61 - t128 * t36 + t129 * t37, -t105 * t98 + t129 * t68 - t154 * t36 + t526 * t62, t103 * t61 - t128 * t37, t103 * t98 - t128 * t68 - t154 * t37 - t526 * t61, -t154 * t68 - t526 * t98, g(1) * t538 - g(2) * t124 + t19 * t103 - t7 * t128 - t13 * t98 + t2 * t154 - t20 * t68 + t30 * t61 + t41 * t37 + t4 * t526, g(1) * t537 - g(2) * t123 - t1 * t154 + t19 * t105 - t7 * t129 + t14 * t98 + t21 * t68 - t3 * t526 + t30 * t62 - t41 * t36, t1 * t128 - t103 * t3 - t105 * t4 + t129 * t2 - t13 * t62 - t14 * t61 + t20 * t36 - t21 * t37 - t386, t1 * t21 + t14 * t3 + t2 * t20 + t13 * t4 + t7 * t41 + t30 * t19 - g(1) * (-pkin(5) * t233 - pkin(10) * t167 + t327) - g(2) * (pkin(5) * t235 + pkin(10) * t171 + t336); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t256, t458 * t477 (t448 * t455 + t442) * t298, t256, -t427 * t448 + t277, t391, t227 * t280 + t477 * t514 - t399 - t530, pkin(1) * t436 + t226 * t280 + (pkin(8) * t445 + g(3)) * t475 + t383 - t432, 0, 0, t297 ^ 2 * t391 + (t297 * t348 - t423) * t476 (t313 - t392) * t299 + t529 * t297, t299 * t437 + (-t297 * t443 + (qJD(2) * t297 - t203) * t456) * t298, t297 * t392 + t329, -t297 * t437 + (t304 * t368 - t416) * t298, t256, -pkin(2) * t460 + t227 * t202 + (-t140 + t385 + t535) * t299 + ((-g(3) * t299 + qJDD(1) * t493) * t307 + (-t113 * t304 + t145 * t307 + (-qJ(3) * t454 + t307 * t527) * t297) * qJD(1)) * t298, -pkin(2) * t313 + t114 * t427 - t146 * t426 - t227 * t203 + t527 * t397 + (t298 * t416 - t299 * t390) * qJ(3) + t544 * t297, qJ(3) * t329 + t113 * t397 + t114 * t398 + t313 * t493 + t321 + (t145 + t452) * t203 + (qJD(3) * t299 - t146) * t202, -t113 * t145 - t114 * t146 - t178 * t227 + (-t113 * t297 + t114 * t299) * qJD(3) - t544 * pkin(2) + t321 * qJ(3), t349, t320, t523, t350, -t522, t393, -t131 * t465 - t134 * t176 + t241 * t86 + t265 * t494 - t289 * t70 + t427 * t44 + t543, -t131 * t462 - t176 * t354 + t242 * t86 - t265 * t496 + t289 * t69 + t427 * t45 + t521, t134 * t496 + t241 * t414 + t242 * t413 + t354 * t494 - t44 * t462 + t45 * t465 + t322, -g(1) * t463 - g(2) * t464 - g(3) * t381 - t131 * t176 + t180 * t413 - t181 * t414 - t86 * t289 + t44 * t494 - t45 * t496, t393, -t523, t522, t349, t320, t350, t134 * t497 + t241 * t8 + t242 * t9 + t354 * t495 - t42 * t462 - t43 * t465 + t322, -t134 * t498 - t15 * t241 - t161 * t70 - t265 * t495 - t42 * t427 + t465 * t53 - t543, -t15 * t242 + t161 * t69 + t265 * t497 - t354 * t498 + t427 * t43 + t462 * t53 - t521, t15 * t161 - t8 * t181 + t9 * t180 - g(1) * t400 - g(2) * t401 - g(3) * (t381 + t531) + t498 * t53 + t497 * t43 + t495 * t42, t105 * t341 - t36 * t482, t408 * t105 + t407 * t103 + (-t503 - t501 + (-t103 * t306 - t105 * t302) * qJD(6)) * t241, -t105 * t462 - t242 * t36 + t341 * t526 - t482 * t68, t103 * t342 - t37 * t481, t103 * t462 - t242 * t37 - t342 * t526 - t481 * t68, -t242 * t68 - t462 * t526, -t78 * t68 + t2 * t242 + t150 * t37 - t7 * t481 - g(1) * (-t235 * t480 + t236 * t306) - g(2) * (-t233 * t480 + t234 * t306) - (t290 * t471 + t304 * t306) * t509 + t505 * t526 - t462 * t13 + t499 * t103 + t342 * t30, t79 * t68 - t1 * t242 - t150 * t36 + t7 * t482 - g(1) * (-t235 * t479 - t236 * t302) - g(2) * (-t233 * t479 - t234 * t302) - (t290 * t468 - t302 * t304) * t509 + t462 * t14 - t506 * t526 + t499 * t105 + t341 * t30, t36 * t78 - t37 * t79 + t408 * t14 + t407 * t13 - t505 * t105 - t506 * t103 - t331 + (t1 * t306 - t2 * t302 + (-t13 * t306 - t14 * t302) * qJD(6)) * t241, t1 * t79 + t2 * t78 + t7 * t150 - g(1) * (pkin(5) * t236 - pkin(10) * t483 + t400) - g(2) * (pkin(5) * t234 - pkin(10) * t486 + t401) - g(3) * (t246 + t531) + t499 * t30 - (pkin(10) * t291 * t307 + (pkin(5) + t507) * t304) * t509 + t506 * t14 + t505 * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t529, t361 + (t299 * t442 + t307 * t368) * t298, -t202 ^ 2 - t203 ^ 2, t113 * t203 - t114 * t202 + t544, 0, 0, 0, 0, 0, 0, t311, -t332, t370, t134 * t45 - t354 * t44 + t530 + t86, 0, 0, 0, 0, 0, 0, t370, -t311, t332, -t134 * t43 - t354 * t42 + t15 + t530, 0, 0, 0, 0, 0, 0, t340 + t548, t302 * t526 ^ 2 + t547 + t65, -t302 * t549 - t35 + t554, t134 * t30 - t302 * t540 + t306 * t541 + t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, t422, -t333, -t489, -t310, t220, -t131 * t354 + t326 - t504, t131 * t134 + t265 * t44 - t325, 0, 0, t220, t333, t310, t489, t422, -t489, pkin(4) * t69 - qJ(5) * t70 + (-t43 - t45) * t354 + (t42 + t467) * t134, t134 * t77 + t317 + t504 - 0.2e1 * t512, -t134 * t53 + t265 * t467 + t354 * t77 + 0.2e1 * t212 - t249 + t325, -t9 * pkin(4) - g(1) * t410 - g(2) * t411 - g(3) * t409 - t8 * qJ(5) - t42 * t45 + t43 * t467 - t53 * t77, -t105 * t405 - t501, -t35 - t554 + (t36 + t404) * t302, t359 + t547, t306 * t404 + t503, t340 - t548, t526 * t134, qJ(5) * t37 + t466 * t103 + t13 * t134 - t16 * t526 + t324 * t302 + t306 * t524, -qJ(5) * t36 + t466 * t105 - t134 * t14 + t17 * t526 - t302 * t524 + t324 * t306, t103 * t17 + t105 * t16 + (-t354 * t14 - t517 * t36 - t2 + (t103 * t517 - t14) * qJD(6)) * t306 + (t13 * t354 + t517 * t37 - t1 + (-t105 * t517 + t13) * qJD(6)) * t302 + t347, t7 * qJ(5) - t14 * t17 - t13 * t16 - g(1) * (-pkin(10) * t170 + t410) - g(2) * (-pkin(10) * t166 + t411) - g(3) * (-pkin(10) * t213 + t409) + t466 * t30 - (t1 * t302 + t2 * t306 + (-t13 * t302 + t14 * t306) * qJD(6)) * t517; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t333, t220 - t489, -t265 ^ 2 - t518, -t265 * t43 + t317 - t512, 0, 0, 0, 0, 0, 0, t103 * t265 + t359, t105 * t265 + t340, t549 * t306 + (t105 * t526 - t37) * t302, t265 * t30 + t302 * t541 + t306 * t540 - t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, -t103 ^ 2 + t105 ^ 2, -t549, -t490, t105 * t525 - t412, -t68, -t30 * t105 - g(1) * t123 - g(2) * t537 - g(3) * (t213 * t306 + t434) + t540, t30 * t103 + g(1) * t124 + g(2) * t538 - g(3) * (-t213 * t302 + t433) - t378 + t525 * t13, 0, 0;];
tau_reg  = t5;
