% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPRPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x32]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR10_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR10_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR10_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRPR10_inertiaDJ_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:09:25
% EndTime: 2019-03-09 11:09:32
% DurationCPUTime: 2.59s
% Computational Cost: add. (3899->302), mult. (10509->558), div. (0->0), fcn. (10528->10), ass. (0->153)
t115 = sin(pkin(6));
t121 = cos(qJ(2));
t119 = sin(qJ(2));
t180 = qJD(2) * t119;
t132 = (qJ(5) * t180 - qJD(5) * t121) * t115;
t118 = sin(qJ(4));
t194 = cos(qJ(4));
t163 = qJD(4) * t194;
t178 = qJD(4) * t118;
t116 = cos(pkin(11));
t184 = t116 * t121;
t114 = sin(pkin(11));
t75 = (-qJD(3) * t119 + (pkin(2) * t119 - qJ(3) * t121) * qJD(2)) * t115;
t187 = cos(pkin(6));
t102 = t115 * t180;
t161 = qJD(2) * t187;
t151 = t121 * t161;
t85 = -pkin(1) * t151 + pkin(8) * t102;
t79 = qJD(3) * t187 - t85;
t49 = -t114 * t79 + t116 * t75;
t33 = (pkin(3) * t119 - pkin(9) * t184) * t115 * qJD(2) + t49;
t185 = t115 * t121;
t168 = pkin(1) * t187;
t81 = pkin(8) * t185 + qJ(3) * t187 + t119 * t168;
t147 = -pkin(2) * t121 - qJ(3) * t119;
t82 = (-pkin(1) + t147) * t115;
t55 = -t114 * t81 + t116 * t82;
t186 = t115 * t119;
t87 = t114 * t187 + t116 * t186;
t35 = -pkin(3) * t185 - t87 * pkin(9) + t55;
t179 = qJD(2) * t121;
t165 = t115 * t179;
t157 = t114 * t165;
t50 = t114 * t75 + t116 * t79;
t45 = -pkin(9) * t157 + t50;
t162 = t187 * t116;
t134 = t114 * t186 - t162;
t56 = t114 * t82 + t116 * t81;
t47 = -pkin(9) * t134 + t56;
t9 = -t118 * t33 - t35 * t163 + t178 * t47 - t194 * t45;
t7 = t9 - t132;
t193 = pkin(9) + qJ(3);
t97 = t193 * t114;
t98 = t193 * t116;
t73 = -t118 * t97 + t194 * t98;
t93 = t194 * t114 + t118 * t116;
t59 = qJD(3) * t93 + qJD(4) * t73;
t72 = t118 * t98 + t194 * t97;
t200 = t115 * (-t121 * t59 + t180 * t72);
t167 = t194 * t116;
t58 = (qJD(3) * t114 + qJD(4) * t98) * t118 - qJD(3) * t167 + t97 * t163;
t199 = t115 * (t121 * t58 + t180 * t73);
t117 = sin(qJ(6));
t112 = t117 ^ 2;
t120 = cos(qJ(6));
t181 = -t120 ^ 2 + t112;
t160 = t181 * qJD(6);
t88 = t114 * t178 - t116 * t163;
t198 = -0.2e1 * t88;
t197 = 0.2e1 * t115;
t196 = 0.2e1 * qJD(5);
t195 = pkin(4) + pkin(10);
t192 = t118 * t35 + t194 * t47;
t89 = t93 * qJD(4);
t191 = t120 * t89;
t63 = -t118 * t134 + t194 * t87;
t42 = qJD(4) * t63 + t165 * t93;
t128 = t194 * t134;
t62 = t118 * t87 + t128;
t51 = t117 * t185 + t120 * t62;
t23 = qJD(6) * t51 + t102 * t120 + t117 * t42;
t190 = t23 * t120;
t152 = t119 * t161;
t86 = pkin(1) * t152 + pkin(8) * t165;
t189 = t86 * t114;
t183 = t117 * t195;
t182 = t120 * t195;
t177 = qJD(6) * t117;
t176 = qJD(6) * t120;
t175 = qJD(6) * t195;
t71 = pkin(3) * t157 + t86;
t174 = t117 * t191;
t92 = t118 * t114 - t167;
t173 = t92 * t177;
t172 = t93 * t177;
t171 = t92 * t176;
t170 = t93 * t176;
t169 = t120 * t185;
t108 = -t116 * pkin(3) - pkin(2);
t110 = t115 ^ 2;
t166 = t110 * t179;
t164 = t117 * t176;
t159 = pkin(4) * t102;
t158 = t119 * t166;
t156 = t116 * t165;
t155 = 0.2e1 * (t114 ^ 2 + t116 ^ 2) * qJD(3);
t154 = -t118 * t47 + t194 * t35;
t19 = qJ(5) * t185 - t192;
t17 = -t62 * pkin(5) - t19;
t4 = -t42 * pkin(5) - t7;
t153 = t17 * t89 + t4 * t92;
t41 = qJD(4) * t128 - t194 * t156 + (qJD(4) * t87 + t157) * t118;
t150 = -t41 * t92 + t63 * t89;
t48 = -t89 * pkin(5) - t58;
t61 = -t92 * pkin(5) + t73;
t149 = t48 * t92 + t61 * t89;
t148 = t88 * t92 - t93 * t89;
t146 = -t49 * t114 + t50 * t116;
t20 = pkin(4) * t185 - t154;
t16 = t63 * pkin(5) + pkin(10) * t185 + t20;
t84 = -pkin(2) * t187 + pkin(8) * t186 - t121 * t168;
t66 = pkin(3) * t134 + t84;
t123 = -t63 * qJ(5) + t66;
t18 = t195 * t62 + t123;
t6 = t117 * t16 + t120 * t18;
t52 = t117 * t62 - t169;
t145 = t117 * t51 + t120 * t52;
t141 = -t93 * qJ(5) + t108;
t54 = t195 * t92 + t141;
t60 = t93 * pkin(5) + t72;
t29 = t117 * t60 + t120 * t54;
t144 = t88 * qJ(5) - t93 * qJD(5);
t143 = -qJ(5) * t89 - qJD(5) * t92;
t26 = t117 * t41 - t176 * t63;
t138 = t120 * t41 + t177 * t63;
t65 = t117 * t88 - t170;
t137 = t120 * t88 + t172;
t136 = t118 * t45 + t47 * t163 + t35 * t178 - t194 * t33;
t133 = t41 * qJ(5) - t63 * qJD(5) + t71;
t131 = t48 + (qJ(5) * t92 + t195 * t93) * qJD(6);
t130 = t195 * t89 + t144;
t129 = -qJD(6) * t61 - t195 * t88 - t143;
t127 = t195 * t42 + t133;
t126 = t115 * (qJD(2) * t147 + qJD(3) * t121);
t125 = -t41 * pkin(5) - t195 * t102 + t136;
t124 = -t88 * pkin(5) + t59;
t91 = t92 ^ 2;
t68 = t93 * t198;
t67 = t92 * pkin(4) + t141;
t53 = t89 * pkin(4) + t144;
t28 = -t117 * t54 + t120 * t60;
t27 = -0.2e1 * t63 * t41;
t24 = t62 * pkin(4) + t123;
t22 = -t120 * t42 - qJD(6) * t169 + (qJD(6) * t62 + t102) * t117;
t21 = -t41 * t93 - t63 * t88;
t14 = t42 * pkin(4) + t133;
t13 = -qJD(6) * t29 - t117 * t130 + t120 * t124;
t12 = -t117 * t124 - t120 * t130 - t176 * t60 + t177 * t54;
t8 = t136 - t159;
t5 = -t117 * t18 + t120 * t16;
t2 = -qJD(6) * t6 - t117 * t127 + t120 * t125;
t1 = -t117 * t125 - t120 * t127 - t16 * t176 + t177 * t18;
t3 = [0, 0, 0, 0.2e1 * t158, 0.2e1 * (-t119 ^ 2 + t121 ^ 2) * t110 * qJD(2), t151 * t197, -0.2e1 * t115 * t152, 0, -0.2e1 * pkin(1) * t110 * t180 - 0.2e1 * t187 * t86, -0.2e1 * pkin(1) * t166 + 0.2e1 * t187 * t85, -0.2e1 * t86 * t162 + 0.2e1 * (t119 * t189 - t49 * t121 + (t114 * t121 * t84 + t119 * t55) * qJD(2)) * t115, 0.2e1 * t86 * t87 + 0.2e1 * (t121 * t50 + (-t119 * t56 + t184 * t84) * qJD(2)) * t115, -0.2e1 * t50 * t134 - 0.2e1 * t49 * t87 + 0.2e1 * (-t114 * t56 - t116 * t55) * t165, 0.2e1 * t55 * t49 + 0.2e1 * t56 * t50 + 0.2e1 * t84 * t86, t27, 0.2e1 * t41 * t62 - 0.2e1 * t63 * t42 (t121 * t41 + t180 * t63) * t197 (t121 * t42 - t180 * t62) * t197, -0.2e1 * t158, 0.2e1 * t66 * t42 + 0.2e1 * t71 * t62 + 0.2e1 * (t121 * t136 + t154 * t180) * t115, -0.2e1 * t66 * t41 + 0.2e1 * t71 * t63 + 0.2e1 * (-t9 * t121 - t192 * t180) * t115, 0.2e1 * t19 * t42 - 0.2e1 * t20 * t41 + 0.2e1 * t7 * t62 + 0.2e1 * t8 * t63, -0.2e1 * t14 * t62 - 0.2e1 * t24 * t42 + 0.2e1 * (-t121 * t8 + t180 * t20) * t115, -0.2e1 * t14 * t63 + 0.2e1 * t24 * t41 + 0.2e1 * (t121 * t7 - t180 * t19) * t115, 0.2e1 * t24 * t14 + 0.2e1 * t19 * t7 + 0.2e1 * t20 * t8, 0.2e1 * t52 * t23, -0.2e1 * t52 * t22 + 0.2e1 * t23 * t51, 0.2e1 * t23 * t63 - 0.2e1 * t52 * t41, -0.2e1 * t22 * t63 - 0.2e1 * t51 * t41, t27, 0.2e1 * t17 * t22 + 0.2e1 * t2 * t63 - 0.2e1 * t4 * t51 - 0.2e1 * t5 * t41, 0.2e1 * t1 * t63 + 0.2e1 * t17 * t23 + 0.2e1 * t4 * t52 + 0.2e1 * t6 * t41; 0, 0, 0, 0, 0, t165, -t102, 0, -t86, t85, t114 * t126 - t86 * t116, t116 * t126 + t189 (t114 * t87 - t116 * t134) * qJD(3) + t146, -t86 * pkin(2) + (-t114 * t55 + t116 * t56) * qJD(3) + t146 * qJ(3), t21, -t93 * t42 + t88 * t62 - t150 (t121 * t88 + t180 * t93) * t115 (t121 * t89 - t180 * t92) * t115, 0, t108 * t42 + t66 * t89 + t71 * t92 - t200, -t108 * t41 - t66 * t88 + t71 * t93 - t199, t19 * t89 - t20 * t88 - t72 * t41 - t73 * t42 + t58 * t62 + t59 * t63 + t7 * t92 + t8 * t93, -t14 * t92 - t24 * t89 - t67 * t42 - t53 * t62 + t200, -t14 * t93 + t24 * t88 + t67 * t41 - t53 * t63 + t199, t14 * t67 + t19 * t58 + t20 * t59 + t24 * t53 - t7 * t73 + t8 * t72, t52 * t171 + (t23 * t92 + t52 * t89) * t117, t145 * t89 + (-t117 * t22 + t190 + (-t117 * t52 + t120 * t51) * qJD(6)) * t92, t117 * t150 + t171 * t63 + t23 * t93 - t52 * t88, t120 * t150 - t173 * t63 - t22 * t93 - t51 * t88, t21, -t120 * t153 + t13 * t63 + t17 * t173 + t2 * t93 + t61 * t22 - t28 * t41 - t48 * t51 - t5 * t88, t1 * t93 + t117 * t153 + t12 * t63 + t17 * t171 + t61 * t23 + t29 * t41 + t48 * t52 + t6 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t155, qJ(3) * t155, t68, 0.2e1 * t148, 0, 0, 0, 0.2e1 * t108 * t89, t108 * t198, 0.2e1 * t58 * t92 + 0.2e1 * t59 * t93 - 0.2e1 * t72 * t88 - 0.2e1 * t73 * t89, -0.2e1 * t53 * t92 - 0.2e1 * t67 * t89, -0.2e1 * t53 * t93 + 0.2e1 * t67 * t88, 0.2e1 * t67 * t53 - 0.2e1 * t73 * t58 + 0.2e1 * t72 * t59, 0.2e1 * t112 * t92 * t89 + 0.2e1 * t164 * t91, -0.2e1 * t160 * t91 + 0.4e1 * t174 * t92, -0.2e1 * t117 * t148 + 0.2e1 * t170 * t92, -0.2e1 * t120 * t148 - 0.2e1 * t172 * t92, t68, -0.2e1 * t120 * t149 + 0.2e1 * t13 * t93 + 0.2e1 * t173 * t61 - 0.2e1 * t28 * t88, 0.2e1 * t117 * t149 + 0.2e1 * t12 * t93 + 0.2e1 * t171 * t61 + 0.2e1 * t29 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, t156, 0, t86, 0, 0, 0, 0, 0, t42, -t41, 0, -t42, t41, t14, 0, 0, 0, 0, 0, t26, t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, -t88, 0, -t89, t88, t53, 0, 0, 0, 0, 0, t65, t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, -t42, t102, -t136, t9, pkin(4) * t41 - qJ(5) * t42 - qJD(5) * t62, t136 - 0.2e1 * t159, 0.2e1 * t132 - t9, -t8 * pkin(4) - t7 * qJ(5) - t19 * qJD(5), -t177 * t52 + t190, -qJD(6) * t145 - t23 * t117 - t120 * t22, -t138, t26, 0, t41 * t182 + qJ(5) * t22 - qJD(5) * t51 + t4 * t117 + (t120 * t17 + t183 * t63) * qJD(6), -t41 * t183 + qJ(5) * t23 + qJD(5) * t52 + t4 * t120 + (-t117 * t17 + t182 * t63) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t88, -t89, 0, -t59, t58, pkin(4) * t88 + t143, t59, -t58, -t59 * pkin(4) - t58 * qJ(5) + t73 * qJD(5), -t160 * t92 + t174, -0.4e1 * t164 * t92 - t181 * t89, -t137, t65, 0, t117 * t131 - t120 * t129, t117 * t129 + t120 * t131; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t196, qJ(5) * t196, -0.2e1 * t164, 0.2e1 * t160, 0, 0, 0, 0.2e1 * qJ(5) * t176 + 0.2e1 * qJD(5) * t117, -0.2e1 * qJ(5) * t177 + 0.2e1 * qJD(5) * t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, t102, 0, t8, 0, 0, 0, 0, 0, -t138, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t88, 0, 0, t59, 0, 0, 0, 0, 0, -t137, t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23, -t22, -t41, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117 * t89 + t171, -t173 + t191, -t88, t13, t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t176, t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, -t176, 0, t117 * t175, t120 * t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, -t176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
