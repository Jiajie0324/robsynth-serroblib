% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRRPP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:52
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPP7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(8,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'S6RPRRPP7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [8x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:52:19
% EndTime: 2019-03-09 04:52:38
% DurationCPUTime: 12.12s
% Computational Cost: add. (5507->716), mult. (10515->793), div. (0->0), fcn. (8609->4), ass. (0->488)
t407 = sin(qJ(4));
t393 = t407 * qJ(5);
t409 = cos(qJ(4));
t639 = t409 * pkin(4);
t448 = t393 + t639;
t426 = t448 * qJD(4);
t513 = t409 * qJD(5);
t682 = -t426 + t513;
t666 = pkin(4) + pkin(5);
t561 = t409 * t666;
t681 = -t561 - t393;
t680 = pkin(8) - qJ(6);
t410 = cos(qJ(3));
t640 = pkin(8) * t410;
t408 = sin(qJ(3));
t641 = pkin(3) * t408;
t455 = -t640 + t641;
t436 = qJ(2) + t455;
t286 = t409 * t436;
t412 = -pkin(1) - pkin(7);
t565 = t408 * t412;
t198 = t407 * t565 - t286;
t562 = t409 * t410;
t501 = qJ(6) * t562;
t134 = -t198 + t501;
t570 = t407 * t412;
t466 = -pkin(4) + t570;
t86 = -t501 - t286 + (-pkin(5) + t466) * t408;
t679 = t134 + t86;
t404 = t407 ^ 2;
t405 = t409 ^ 2;
t341 = t405 + t404;
t296 = t341 * t410;
t268 = t296 * qJD(2);
t532 = qJD(5) * t407;
t362 = t410 * t532;
t678 = -t408 * t362 - t268;
t511 = t410 * qJD(3);
t356 = t407 * t511;
t406 = t410 ^ 2;
t383 = t406 * t409;
t669 = t408 ^ 2;
t298 = t409 * t669 - t383;
t518 = t298 * qJD(1);
t677 = t518 - t356;
t533 = qJD(4) * t409;
t365 = t408 * t533;
t202 = t518 + t365;
t361 = t409 * t511;
t382 = t406 * t407;
t297 = t407 * t669 - t382;
t519 = t297 * qJD(1);
t200 = t519 + t361;
t534 = qJD(4) * t408;
t364 = t407 * t534;
t676 = t519 + t364;
t509 = t669 / 0.2e1;
t468 = t509 + 0.1e1 / 0.2e1;
t654 = t383 / 0.2e1;
t249 = t409 * t468 + t654;
t526 = t249 * qJD(1);
t102 = t526 + t356 + t365;
t655 = t382 / 0.2e1;
t246 = t407 * t468 + t655;
t527 = t246 * qJD(1);
t675 = t527 + t364 - t361;
t557 = t410 * t412;
t326 = t407 * t557;
t638 = t410 * pkin(3);
t316 = pkin(8) * t408 + t638;
t563 = t409 * t316;
t208 = -t326 + t563;
t299 = t407 * t316;
t327 = t409 * t557;
t209 = t327 + t299;
t560 = t409 * t412;
t324 = t408 * t560;
t199 = t407 * t436 + t324;
t598 = t199 * t410;
t601 = t198 * t410;
t648 = t408 / 0.2e1;
t649 = -t408 / 0.2e1;
t33 = -t408 * t557 + (t209 * t648 + t598 / 0.2e1) * t409 + (t208 * t649 + t601 / 0.2e1) * t407;
t566 = t408 * t410;
t196 = (-0.1e1 + t341) * t566;
t528 = t196 * qJD(2);
t674 = -t33 * qJD(1) - t528;
t514 = t408 * qJD(3);
t395 = t410 * qJ(5);
t672 = t395 + t327 / 0.2e1;
t564 = t409 * qJ(5);
t284 = -t407 * t666 + t564;
t342 = t405 - t404;
t515 = t408 * qJD(1);
t670 = 0.2e1 * t407 * t562 * (-qJD(4) + t515) - t342 * t514;
t668 = -pkin(4) / 0.2e1;
t667 = pkin(4) / 0.2e1;
t571 = t407 * t410;
t135 = qJ(6) * t571 + t199;
t394 = t408 * qJ(5);
t108 = t135 + t394;
t665 = -t108 / 0.2e1;
t572 = t407 * t408;
t145 = t199 * t572;
t664 = t145 / 0.2e1;
t370 = t409 * t395;
t373 = pkin(4) * t571;
t544 = t370 - t373;
t162 = (-t407 * pkin(5) + t412) * t410 + t544;
t663 = -t162 / 0.2e1;
t207 = t681 * t410;
t662 = -t207 / 0.2e1;
t215 = -t544 - t557;
t661 = t215 / 0.2e1;
t265 = t448 * t410;
t660 = -t265 / 0.2e1;
t312 = t680 * t407;
t659 = t312 / 0.2e1;
t657 = -t316 / 0.2e1;
t656 = t326 / 0.2e1;
t653 = -t393 / 0.2e1;
t652 = t404 / 0.2e1;
t651 = -t407 / 0.2e1;
t650 = t407 / 0.2e1;
t647 = -t409 / 0.2e1;
t646 = t409 / 0.2e1;
t645 = -t410 / 0.2e1;
t644 = t410 / 0.2e1;
t643 = t666 / 0.2e1;
t642 = -t666 / 0.2e1;
t637 = t410 * pkin(5);
t486 = -t572 / 0.2e1;
t62 = t199 * t486 + t664;
t636 = t33 * qJD(3) - t62 * qJD(4);
t177 = t395 + t209;
t569 = t408 * qJ(6);
t112 = -t407 * t569 + t177;
t161 = (-t284 - t412) * t408;
t314 = t680 * t409;
t396 = t410 * pkin(4);
t93 = -t637 + t326 - t396 + (-t316 + t569) * t409;
t631 = t93 * t408;
t4 = t161 * t644 + t162 * t649 + (t108 * t644 + t112 * t648 + t659) * t409 + (t631 / 0.2e1 + t86 * t644 - t314 / 0.2e1) * t407;
t635 = t4 * qJD(1);
t7 = t108 * t112 + t161 * t162 + t86 * t93;
t634 = t7 * qJD(1);
t319 = qJ(5) * t486;
t471 = t108 / 0.2e1 - t135 / 0.2e1;
t454 = t471 * t407;
t473 = t408 * t642;
t500 = t134 / 0.2e1 + t86 / 0.2e1;
t8 = t319 - t454 + (t473 + t500) * t409;
t633 = t8 * qJD(1);
t632 = t86 * t409;
t610 = t162 * t407;
t45 = t134 * t408 + (t207 * t409 - t610) * t410;
t630 = qJD(1) * t45;
t596 = t207 * t407;
t609 = t162 * t409;
t46 = t135 * t408 + (t596 + t609) * t410;
t629 = qJD(1) * t46;
t618 = t108 * t407;
t49 = t618 - t632;
t48 = t49 * t410;
t628 = qJD(1) * t48;
t627 = qJD(1) * t49;
t593 = t215 * t409;
t599 = t199 * t408;
t52 = -t599 + (t265 * t407 + t593) * t410;
t626 = qJD(1) * t52;
t591 = t265 * t409;
t594 = t215 * t407;
t603 = t198 * t408;
t53 = -t603 + (-t591 + t594) * t410;
t625 = qJD(1) * t53;
t617 = t108 * t408;
t54 = t162 * t562 + t617;
t624 = qJD(1) * t54;
t167 = t408 * t466 - t286;
t607 = t167 * t409;
t163 = t394 + t199;
t608 = t163 * t407;
t60 = -t607 + t608;
t623 = qJD(1) * t60;
t65 = t163 * t408 - t215 * t562;
t622 = qJD(1) * t65;
t600 = t199 * t407;
t602 = t198 * t409;
t69 = t600 - t602;
t621 = qJD(1) * t69;
t99 = -t406 * t570 - t603;
t620 = qJD(1) * t99;
t619 = qJD(2) * t62;
t414 = (t409 * t500 - t454) * t408 + t207 * t644;
t11 = t653 - t561 / 0.2e1 + t414;
t616 = t11 * qJD(1);
t13 = t108 * t134 + t135 * t86 + t162 * t207;
t615 = t13 * qJD(1);
t313 = pkin(4) * t407 - t564;
t214 = (-t313 + t412) * t408;
t182 = -t208 - t396;
t604 = t182 * t407;
t606 = t177 * t409;
t14 = (t163 * t646 - t214 / 0.2e1 + t167 * t650) * t410 + (t606 / 0.2e1 + t661 + t604 / 0.2e1) * t408;
t614 = t14 * qJD(1);
t15 = (t86 * t408 - t410 * t93) * t409 + (t112 * t410 - t617) * t407;
t613 = t15 * qJD(1);
t612 = t161 * t407;
t611 = t161 * t409;
t18 = ((t108 - t135) * t409 + t679 * t407) * t410;
t605 = t18 * qJD(1);
t114 = t163 * t572;
t567 = t408 * t409;
t144 = t198 * t567;
t420 = -t114 / 0.2e1 - t144 / 0.2e1 + t664 + t265 * t645;
t20 = t653 + (t167 * t648 + t668) * t409 + t420;
t597 = t20 * qJD(1);
t595 = t214 * t409;
t22 = t631 - t162 * t572 + (t86 + t612) * t410;
t592 = t22 * qJD(1);
t27 = (t108 + t611) * t410 + (t112 - t609) * t408;
t590 = t27 * qJD(1);
t28 = -t163 * t198 + t167 * t199 + t215 * t265;
t589 = t28 * qJD(1);
t588 = t284 * t407;
t483 = t394 / 0.2e1;
t318 = t407 * t483;
t429 = t608 / 0.2e1 - t600 / 0.2e1;
t470 = -t198 / 0.2e1 + t167 / 0.2e1;
t29 = t318 + (pkin(4) * t648 - t470) * t409 + t429;
t587 = t29 * qJD(1);
t302 = -pkin(3) - t448;
t586 = t302 * t408;
t31 = t167 * t567 + t177 * t571 - t182 * t562 - t114;
t585 = t31 * qJD(1);
t584 = t312 * t408;
t583 = t312 * t410;
t582 = t314 * t408;
t581 = t314 * t410;
t34 = ((t163 - t199) * t409 + (t167 - t198) * t407) * t410;
t579 = t34 * qJD(1);
t35 = (t163 - t595) * t410 + (t177 + t593) * t408;
t578 = t35 * qJD(1);
t36 = t144 - t145 + (t208 * t409 + t209 * t407) * t410;
t577 = t36 * qJD(1);
t37 = -t167 * t410 - t182 * t408 + (t214 * t410 - t215 * t408) * t407;
t576 = t37 * qJD(1);
t575 = t404 * t406;
t574 = t404 * t410;
t573 = t405 * t410;
t274 = pkin(3) - t681;
t568 = t408 * t274;
t559 = t410 * t284;
t558 = t410 * t313;
t556 = t666 * t410;
t487 = -t582 / 0.2e1;
t430 = -t610 / 0.2e1 + t487;
t506 = -t396 / 0.2e1 + t656;
t417 = t430 + t506;
t482 = t569 / 0.2e1;
t488 = t274 * t645;
t428 = t488 + t482;
t503 = -t637 / 0.2e1;
t42 = t503 + (t657 + t428) * t409 + t417;
t555 = t42 * qJD(1);
t58 = -t601 + (t208 + 0.2e1 * t326) * t408;
t554 = t58 * qJD(1);
t59 = t598 + (t209 - 0.2e1 * t327) * t408;
t553 = t59 * qJD(1);
t552 = t62 * qJD(1);
t551 = t528 + t362;
t250 = t409 * t509 + t647 + t654;
t524 = t250 * qJD(2);
t550 = -t199 * qJD(4) - t524;
t223 = t246 * qJD(2);
t391 = t408 * qJD(5);
t549 = t223 + t391;
t283 = t563 / 0.2e1;
t548 = t283 - t326 / 0.2e1;
t381 = t405 * t406;
t304 = t381 + t669;
t540 = qJD(2) * t408;
t351 = t407 * t540;
t547 = t304 * qJD(5) + t351;
t543 = (t573 + t574) * pkin(8);
t247 = t407 * t509 + t651 + t655;
t225 = t247 * qJD(2);
t542 = t391 - t225;
t100 = -t406 * t560 - t599;
t541 = qJD(1) * t100;
t539 = qJD(3) * t407;
t538 = qJD(3) * t409;
t537 = qJD(4) * t198;
t536 = qJD(4) * t314;
t535 = qJD(4) * t407;
t531 = qJD(6) * t407;
t530 = qJD(6) * t409;
t529 = qJD(6) * t410;
t525 = t249 * qJD(2);
t469 = t652 - t405 / 0.2e1;
t280 = t469 * t410;
t523 = t280 * qJD(4);
t294 = t381 + t575;
t521 = t294 * qJD(1);
t520 = t296 * qJD(1);
t266 = t296 * qJD(3);
t340 = -t406 + t669;
t517 = t340 * qJD(1);
t516 = t341 * qJD(3);
t315 = t342 * qJD(4);
t512 = t410 * qJD(1);
t510 = t410 * qJD(4);
t508 = t668 - pkin(5) / 0.2e1;
t322 = t370 / 0.2e1;
t507 = t322 - t373 / 0.2e1;
t505 = pkin(8) * t535;
t504 = pkin(8) * t533;
t502 = pkin(5) / 0.2e1 + t643;
t479 = -t562 / 0.2e1;
t480 = t567 / 0.2e1;
t499 = -t594 / 0.2e1 + t302 * t479 + pkin(8) * t480;
t281 = t299 / 0.2e1;
t498 = t281 + t672;
t497 = t396 / 0.2e1 + t548;
t496 = qJ(2) * t515;
t495 = qJ(2) * t512;
t494 = t409 * t512;
t493 = t407 * t510;
t492 = t409 * t510;
t491 = t409 * t529;
t355 = t407 * t533;
t490 = t408 * t531;
t354 = t407 * t538;
t353 = t407 * t513;
t363 = t408 * t511;
t489 = t408 * t512;
t485 = t572 / 0.2e1;
t484 = t571 / 0.2e1;
t481 = -t567 / 0.2e1;
t478 = t562 / 0.2e1;
t477 = t559 / 0.2e1;
t476 = -t558 / 0.2e1;
t475 = t558 / 0.2e1;
t474 = t407 * t643;
t472 = t556 / 0.2e1;
t244 = (-0.1e1 / 0.2e1 + t469) * t410;
t156 = qJD(1) * t244 - t354;
t194 = qJD(1) * t280 - t354;
t305 = t407 * qJD(1) * t383;
t170 = qJD(3) * t280 + t305;
t352 = t407 * t515;
t465 = qJD(4) * t246 + t352;
t464 = qJD(4) * t247 - t352;
t371 = qJD(4) + t515;
t462 = t407 * t494;
t461 = t407 * t361;
t460 = t406 * t355;
t458 = t667 + t502;
t456 = t581 / 0.2e1 - t86 / 0.2e1;
t453 = 0.2e1 * t461;
t452 = t665 - t583 / 0.2e1;
t451 = -t559 / 0.2e1 + t663;
t450 = -qJ(5) * t534 - t525;
t449 = pkin(3) * t484 + pkin(8) * t485;
t447 = t586 + t640;
t21 = t163 * t177 + t167 * t182 + t214 * t215;
t446 = t21 * qJD(1) + t14 * qJD(2);
t44 = -t412 ^ 2 * t566 - t198 * t208 + t199 * t209;
t445 = t44 * qJD(1) + t33 * qJD(2);
t421 = t662 - t428;
t16 = (-t588 / 0.2e1 - t502) * t410 + (t657 - t421) * t409 + t417;
t98 = -t274 * t407 + t284 * t409;
t444 = qJD(1) * t16 + qJD(3) * t98;
t23 = t584 / 0.2e1 + t451 * t409 + t421 * t407 + t498;
t97 = t274 * t409 + t588;
t443 = -qJD(1) * t23 + qJD(3) * t97;
t442 = t604 + t606;
t441 = -t208 * t407 + t209 * t409;
t173 = t312 * t407 + t314 * t409;
t164 = t302 * t409 + t313 * t407;
t282 = -t299 / 0.2e1;
t415 = pkin(8) * t486 + (t302 * t644 + t660) * t407 + (t476 - t215 / 0.2e1) * t409;
t39 = t282 + t415 - t672;
t440 = -qJD(1) * t39 + qJD(3) * t164;
t165 = -t302 * t407 + t313 * t409;
t336 = pkin(8) * t481;
t425 = t407 * t475 + t594 / 0.2e1 + t302 * t478 + t336;
t41 = -t396 + t656 + (t660 + t657) * t409 + t425;
t439 = -qJD(1) * t41 + qJD(3) * t165;
t438 = t371 * t410;
t118 = (t409 * t458 + t393) * t410;
t206 = -t407 * t458 + t564;
t437 = qJD(1) * t118 - qJD(3) * t206;
t435 = -t177 * qJ(5) / 0.2e1 + t182 * t667;
t434 = t112 * qJ(5) / 0.2e1 + t93 * t642;
t139 = t281 + t449;
t433 = pkin(3) * t538 - qJD(1) * t139;
t140 = t336 + (-t638 / 0.2e1 + t657) * t409;
t432 = pkin(3) * t539 - qJD(1) * t140;
t431 = t274 * t662 + t284 * t663;
t51 = t497 + t499;
t427 = -qJD(1) * t51 + t302 * t539;
t239 = t409 * t438;
t292 = t494 + t539;
t295 = -t381 + t575;
t184 = -qJD(1) * t295 + t453;
t216 = -qJD(3) * t342 + 0.2e1 * t462;
t424 = -qJD(3) * t297 + t408 * t492;
t423 = qJD(3) * t298 + t408 * t493;
t1 = t312 * t471 - t314 * t500 + t431 + t434;
t55 = t274 * t284;
t57 = -t370 / 0.2e1 + (t284 / 0.2e1 + t474) * t410;
t422 = -t1 * qJD(1) + t57 * qJD(2) + t55 * qJD(3);
t243 = (-0.1e1 / 0.2e1 + t405 / 0.2e1 + t652) * t408;
t25 = t565 / 0.2e1 + (t483 + t452) * t409 + (t408 * t508 + t456) * t407;
t419 = qJD(1) * t25 - qJD(2) * t243 - qJD(3) * t173;
t418 = qJD(4) * t295 + t408 * t453;
t136 = t475 + t507;
t413 = (t470 * t409 + (-t163 / 0.2e1 + t199 / 0.2e1) * t407) * pkin(8) + t313 * t661 + t265 * t302 / 0.2e1;
t6 = t413 + t435;
t416 = t302 * t313 * qJD(3) + t6 * qJD(1) - t136 * qJD(2);
t150 = qJD(1) * t304 + t461 + t534;
t403 = qJ(2) * qJD(2);
t402 = qJ(5) * qJD(5);
t401 = qJD(1) * qJ(2);
t390 = t404 * qJD(5);
t380 = qJ(5) * t391;
t379 = t393 / 0.2e1;
t378 = -t512 / 0.2e1;
t377 = t512 / 0.2e1;
t376 = t511 / 0.2e1;
t360 = t409 * t514;
t359 = t409 * t515;
t358 = t409 * t540;
t357 = t408 * t513;
t306 = t409 * t362;
t303 = t371 * qJ(5);
t291 = t359 + t533;
t290 = t407 * t512 - t538;
t289 = t352 + t535;
t288 = (t515 + qJD(4) / 0.2e1) * t410;
t264 = -t407 * t514 + t492;
t263 = -t360 - t493;
t262 = qJD(3) * t404 + t462;
t251 = t407 * t508 + t474;
t248 = (0.1e1 + t341) * t649;
t245 = -t574 / 0.2e1 + t573 / 0.2e1 + t645;
t238 = t292 * t408;
t237 = t407 * t438;
t236 = t407 * t489 - t360;
t230 = t250 * qJD(5);
t227 = t249 * qJD(5);
t222 = t245 * qJD(5);
t221 = t244 * qJD(5);
t213 = -t363 * t405 - t460;
t212 = -t363 * t404 + t460;
t197 = t407 * t239;
t192 = t409 * t472 + t479 * t666;
t181 = 0.2e1 * t197;
t178 = t196 * qJD(3);
t169 = t405 * t489 - t523;
t168 = t404 * t489 + t523;
t155 = -qJD(4) * t249 - t359;
t154 = -qJD(4) * t250 + t359;
t137 = t476 + t507;
t128 = qJD(3) * t245 - t305;
t127 = qJD(3) * t244 + t305;
t95 = -t523 + (-t405 * t512 - t354) * t408;
t94 = t523 + (-t404 * t512 + t354) * t408;
t90 = pkin(3) * t479 + t283 - t326 + t336;
t89 = -t327 + t282 + t449;
t56 = -t484 * t666 + t322 + t477;
t50 = -t563 / 0.2e1 + t499 + t506;
t43 = t274 * t478 + t503 + (t657 + t482) * t409 - t430 + t506;
t40 = -t591 / 0.2e1 + t396 + t425 + t548;
t38 = t415 + t498;
t30 = -t602 / 0.2e1 + t607 / 0.2e1 + t318 + pkin(4) * t480 - t429;
t26 = -t565 / 0.2e1 + qJ(5) * t481 + t452 * t409 + t456 * t407 + t666 * t485;
t24 = -t584 / 0.2e1 + t409 * t477 + t407 * t488 + t596 / 0.2e1 + t609 / 0.2e1 + qJ(6) * t486 + t498;
t19 = t167 * t480 + t379 + t639 / 0.2e1 + t420;
t17 = t487 + t472 + qJ(6) * t481 + t637 / 0.2e1 + (t488 + t207 / 0.2e1) * t409 + t451 * t407 + t497;
t12 = t14 * qJD(3);
t10 = t379 + t561 / 0.2e1 + t414;
t9 = t134 * t647 + t618 / 0.2e1 + t135 * t651 - t632 / 0.2e1 + t319 + t409 * t473;
t5 = t413 - t435;
t3 = t314 * t650 + t312 * t647 + (t108 * t646 + t86 * t650 + t161 / 0.2e1) * t410 + (t112 * t646 + t650 * t93 + t663) * t408;
t2 = t135 * t659 + t312 * t665 - t431 + t434 + t679 * t314 / 0.2e1;
t32 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t403, -t363, t340 * qJD(3), 0, t363, 0, 0, qJ(2) * t511 + t540, -qJ(2) * t514 + qJD(2) * t410, 0, t403, t213, t418, -t423, t212, -t424, t363, qJD(3) * t58 + qJD(4) * t100 + t358, -qJD(3) * t59 - qJD(4) * t99 - t351, -qJD(3) * t36 - t268, qJD(2) * t69 + qJD(3) * t44, t213, -t423, -t418, t363, t424, t212, qJD(3) * t37 + qJD(4) * t52 - t353 * t406 + t358, -qJD(3) * t31 - qJD(4) * t34 + t678, qJD(3) * t35 + qJD(4) * t53 + t547, qJD(2) * t60 + qJD(3) * t21 + qJD(4) * t28 + qJD(5) * t65, t213, -t418, t423, t212, -t424, t363, -t22 * qJD(3) - t46 * qJD(4) + t358 + (-t406 * t532 + t408 * t529) * t409, qJD(3) * t27 + qJD(4) * t45 + t410 * t490 + t547, qJD(3) * t15 + qJD(4) * t18 + qJD(6) * t294 - t678, qJD(2) * t49 + qJD(3) * t7 + qJD(4) * t13 + qJD(5) * t54 + qJD(6) * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t401, 0, 0, 0, 0, 0, 0, t515, t512, 0, t401, 0, 0, 0, 0, 0, 0, t154, t464, -t520, t621 + t636, 0, 0, 0, 0, 0, 0, t154, -t520, -t464, qJD(4) * t19 + t12 + t230 + t623, 0, 0, 0, 0, 0, 0, t154, -t464, t520, qJD(3) * t3 + qJD(4) * t10 + t230 + t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t489, t517, -t514, t489, -t511, 0, -t412 * t514 + t495, -t412 * t511 - t496, 0, 0, t95, t670, -t677, t94, t200, t288, t554 + (t407 * t455 - t324) * qJD(3) + t90 * qJD(4), -t553 + (-pkin(8) * t562 + (pkin(3) * t409 + t570) * t408) * qJD(3) + t89 * qJD(4), qJD(3) * t441 - t577 (-pkin(3) * t565 + pkin(8) * t441) * qJD(3) + t445, t95, -t677, -t670, t288, -t200, t94, t576 + (-t407 * t447 - t595) * qJD(3) + t40 * qJD(4) + t222, qJD(3) * t442 + t30 * qJD(4) - t585, t578 + (-t214 * t407 + t409 * t447) * qJD(3) + t38 * qJD(4) + t306 (pkin(8) * t442 + t214 * t302) * qJD(3) + t5 * qJD(4) + t50 * qJD(5) + t446, t95, -t670, t677, t94, t200, t288, -t592 + (t407 * t568 - t583 + t611) * qJD(3) + t17 * qJD(4) + t222 + t490, t590 + (-t274 * t567 + t581 + t612) * qJD(3) + t24 * qJD(4) + t306 - t408 * t530, t613 + ((-t112 + t584) * t409 + (-t93 - t582) * t407) * qJD(3) + t9 * qJD(4), t634 + t3 * qJD(2) + (t112 * t314 + t161 * t274 + t312 * t93) * qJD(3) + t2 * qJD(4) + t43 * qJD(5) + t26 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t170, -t184, -t237, t170, -t239, t376, qJD(3) * t90 + t541 + t550, qJD(3) * t89 + t225 + t537 - t620, 0, -t619, -t170, -t237, t184, t376, t239, t170, qJD(3) * t40 + t550 + t626, t30 * qJD(3) - qJD(4) * t544 - t362 - t579, qJD(3) * t38 - t537 + t542 + t625, t589 + t19 * qJD(2) + t5 * qJD(3) + (-pkin(4) * t199 - qJ(5) * t198) * qJD(4) + t163 * qJD(5), -t170, t184, t237, t170, -t239, t376, qJD(3) * t17 - qJD(4) * t135 - t524 - t629, qJD(3) * t24 + qJD(4) * t134 + t542 + t630, t605 + t9 * qJD(3) + (-t407 * t556 + t370) * qJD(4) + t362, t615 + t10 * qJD(2) + t2 * qJD(3) + (qJ(5) * t134 - t135 * t666) * qJD(4) + t108 * qJD(5) + t192 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, -t237, t150, qJD(3) * t50 + qJD(4) * t163 + t524 + t622, 0, 0, 0, 0, 0, 0, t128, t150, t237, qJD(3) * t43 + qJD(4) * t108 + t524 + t624; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t238, t236, t521, qJD(3) * t26 + qJD(4) * t192 + t628; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t401, 0, 0, 0, 0, 0, 0, -t515, -t512, 0, -t401, 0, 0, 0, 0, 0, 0, t155, t465, t520, -t621 + t636, 0, 0, 0, 0, 0, 0, t155, t520, -t465, qJD(4) * t20 + t12 + t227 - t623, 0, 0, 0, 0, 0, 0, t155, -t465, -t520, qJD(3) * t4 + qJD(4) * t11 + t227 - t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178, 0, 0, 0, 0, 0, 0, 0, 0, 0, t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t514, -t511, 0, 0, 0, 0, 0, 0, 0, 0, t263, -t264, t266 (t543 - t641) * qJD(3) - t674, 0, 0, 0, 0, 0, 0, t263, t266, t264, t614 + (t543 + t586) * qJD(3) + t137 * qJD(4) + t551, 0, 0, 0, 0, 0, 0, t263, t264, -t266, t635 + (t173 * t410 - t568) * qJD(3) + t56 * qJD(4) + t248 * qJD(6) + t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, t675, 0, -t552, 0, 0, 0, 0, 0, 0, -t102, 0, -t675, t137 * qJD(3) - t408 * t426 + t357 + t597, 0, 0, 0, 0, 0, 0, -t102, -t675, 0, t56 * qJD(3) + t534 * t681 + t357 + t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t248 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, -t517, 0, -t489, 0, 0, -t495, t496, 0, 0, t169, -0.2e1 * t197, t202, t168, -t676, -t288, qJD(4) * t140 - t554, qJD(4) * t139 + t553, t577, -t445, t169, t202, t181, -t288, t676, t168, qJD(4) * t41 - t221 - t576, -qJD(4) * t29 + t357 + t585, qJD(4) * t39 + t306 - t578, qJD(4) * t6 + qJD(5) * t51 - t446, t169, t181, -t202, t168, -t676, -t288, qJD(4) * t16 - t221 + t592, -qJD(4) * t23 + t306 - t590, -qJD(4) * t8 - t357 - t613, -qJD(2) * t4 - qJD(4) * t1 - qJD(5) * t42 + qJD(6) * t25 - t634; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t674, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t136 - t528 - t614, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t57 - qJD(6) * t243 - t528 - t635; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t355, t315, 0, -t355, 0, 0, -pkin(3) * t535, -pkin(3) * t533, 0, 0, t355, 0, -t315, 0, 0, -t355, -qJD(4) * t165 + t353, 0, -qJD(4) * t164 + t390 (qJD(4) * t313 - t532) * t302, t355, -t315, 0, -t355, 0, 0, qJD(4) * t98 + t353, qJD(4) * t97 + t390, qJD(6) * t341, qJD(4) * t55 - qJD(6) * t173 + t274 * t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194, -t216, t291, t194, -t289, t378, -t432 - t504, -t433 + t505, 0, 0, -t194, t291, t216, t378, t289, t194, -t439 - t504, -t587 + t682, -t440 - t505, pkin(8) * t682 + t416, -t194, t216, -t291, t194, -t289, t378, t444 - t536, -qJD(4) * t312 + t443, -qJD(4) * t681 - t513 - t633 (-qJ(5) * t312 - t314 * t666) * qJD(4) + t314 * qJD(5) + t251 * qJD(6) + t422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, t291, t262, -t427 + t504, 0, 0, 0, 0, 0, 0, -t156, t262, -t291, t274 * t539 + t536 - t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t516, qJD(4) * t251 + t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, t184, t236, -t170, t238, t376, -qJD(3) * t140 + t525 - t541, -qJD(3) * t139 - t223 + t620, 0, t619, t170, t236, -t184, t376, -t238, -t170, -qJD(3) * t41 + t525 - t626, qJD(3) * t29 + t579, -qJD(3) * t39 + t549 - t625, -qJD(2) * t20 - qJD(3) * t6 + t380 - t589, t170, -t184, -t236, -t170, t238, t376, -qJD(3) * t16 + t491 + t525 + t629, qJD(3) * t23 + t407 * t529 + t549 - t630, qJD(3) * t8 - t605, -qJD(2) * t11 + qJD(3) * t1 + qJD(6) * t118 + t380 - t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t526, -t527, 0, t552, 0, 0, 0, 0, 0, 0, t526, 0, t527, qJD(3) * t136 - t597, 0, 0, 0, 0, 0, 0, t526, t527, 0, -qJD(3) * t57 - t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, t216, -t359, -t194, t352, t377, t432, t433, 0, 0, t194, -t359, -t216, t377, -t352, -t194, t439, t587, t440, -t416, t194, -t216, t359, -t194, t352, t377, -t444 + t531, -t443 - t530, t633, -qJD(6) * t206 - t422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t402, 0, 0, 0, 0, 0, 0, 0, qJD(5), 0, t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t371, t303, 0, 0, 0, 0, 0, 0, 0, t371, 0, t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t292, t290, 0, t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t127, t236, -t150, -qJD(3) * t51 + t450 - t622, 0, 0, 0, 0, 0, 0, t127, -t150, -t236, qJD(3) * t42 + t450 - t491 - t624; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t526, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156, -t359, -t262, t427, 0, 0, 0, 0, 0, 0, t156, -t262, t359, t555 + (-qJD(3) * t274 - qJD(6)) * t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t371, -t303, 0, 0, 0, 0, 0, 0, 0, -t371, 0, -t303; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239, -t237, -t521, -qJD(3) * t25 - qJD(4) * t118 + t410 * t513 - t628; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t243 * qJD(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t535, t533, -t516, qJD(4) * t206 - t419 + t532; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t292, -t290, 0, -t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t32;
