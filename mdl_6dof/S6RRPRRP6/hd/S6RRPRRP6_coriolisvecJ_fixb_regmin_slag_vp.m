% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRPRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% tauc_reg [6x30]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRP6_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP6_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP6_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRP6_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:14:10
% EndTime: 2019-03-09 12:14:29
% DurationCPUTime: 7.08s
% Computational Cost: add. (12244->518), mult. (36374->691), div. (0->0), fcn. (29083->10), ass. (0->254)
t191 = sin(pkin(6));
t197 = cos(qJ(2));
t312 = cos(pkin(11));
t268 = t312 * t197;
t254 = t191 * t268;
t176 = qJD(1) * t254;
t190 = sin(pkin(11));
t194 = sin(qJ(2));
t292 = qJD(1) * t191;
t279 = t194 * t292;
t233 = t190 * t279 - t176;
t352 = qJD(4) + t233;
t313 = cos(pkin(6));
t281 = pkin(1) * t313;
t258 = t197 * t281;
t182 = qJD(1) * t258;
t331 = pkin(8) + qJ(3);
t274 = t194 * t331;
t256 = t191 * t274;
t150 = -qJD(1) * t256 + t182;
t259 = t194 * t281;
t300 = t191 * t197;
t158 = t300 * t331 + t259;
t151 = t158 * qJD(1);
t269 = t312 * t151;
t105 = t150 * t190 + t269;
t193 = sin(qJ(4));
t196 = cos(qJ(4));
t356 = -t105 + t352 * (pkin(4) * t193 - pkin(10) * t196);
t343 = qJD(4) * t352;
t355 = t196 * t343;
t225 = t190 * t197 + t312 * t194;
t163 = t225 * t292;
t192 = sin(qJ(5));
t195 = cos(qJ(5));
t298 = t195 * t196;
t122 = t163 * t192 - t233 * t298;
t289 = qJD(4) * t196;
t275 = t195 * t289;
t354 = t122 - t275;
t262 = t313 * qJD(1);
t238 = t262 + qJD(2);
t131 = t193 * t163 - t196 * t238;
t285 = qJD(1) * qJD(2);
t272 = t191 * t285;
t255 = t194 * t272;
t220 = qJD(2) * t176 - t190 * t255;
t210 = t196 * t220;
t199 = -qJD(4) * t131 + t210;
t353 = qJD(5) * t352 + t199;
t130 = qJD(5) + t131;
t351 = t356 * t195;
t291 = qJD(2) * t191;
t278 = t194 * t291;
t350 = pkin(2) * t278;
t253 = (-pkin(2) * t197 - pkin(1)) * t191;
t234 = qJD(1) * t253;
t170 = qJD(3) + t234;
t101 = pkin(3) * t233 - pkin(9) * t163 + t170;
t214 = pkin(2) * t313 - t256;
t134 = qJD(2) * pkin(2) + qJD(1) * t214 + t182;
t84 = t190 * t134 + t269;
t73 = pkin(9) * t238 + t84;
t48 = t193 * t101 + t196 * t73;
t38 = pkin(10) * t352 + t48;
t208 = -t196 * t163 - t193 * t238;
t140 = t190 * t151;
t83 = t312 * t134 - t140;
t72 = -pkin(3) * t238 - t83;
t44 = t131 * pkin(4) + pkin(10) * t208 + t72;
t14 = t192 * t44 + t195 * t38;
t10 = qJ(6) * t130 + t14;
t221 = qJD(2) * t225;
t161 = t191 * t221;
t206 = qJD(1) * t161;
t179 = pkin(2) * t255;
t207 = qJD(2) * t163;
t102 = pkin(3) * t207 - pkin(9) * t220 + t179;
t290 = qJD(4) * t193;
t249 = qJD(2) * t262;
t235 = pkin(1) * t249;
t180 = t197 * t235;
t213 = (-qJD(2) * t274 + qJD(3) * t197) * t191;
t127 = qJD(1) * t213 + t180;
t301 = t191 * t194;
t138 = -qJD(2) * t158 - qJD(3) * t301;
t201 = qJD(1) * t138;
t65 = t127 * t312 + t190 * t201;
t229 = -t101 * t289 - t193 * t102 - t196 * t65 + t73 * t290;
t15 = pkin(10) * t206 - t229;
t287 = qJD(5) * t195;
t288 = qJD(5) * t192;
t64 = t190 * t127 - t312 * t201;
t211 = t193 * t220;
t88 = -qJD(4) * t208 + t211;
t33 = t88 * pkin(4) - pkin(10) * t199 + t64;
t267 = t192 * t15 - t195 * t33 + t38 * t287 + t44 * t288;
t338 = pkin(5) * t88;
t2 = t267 - t338;
t349 = -t10 * t130 + t2;
t308 = t233 * t196;
t121 = -t195 * t163 - t192 * t308;
t247 = t193 * t287 - t121;
t91 = t192 * t352 - t195 * t208;
t348 = t247 * t91;
t280 = t312 * pkin(2);
t186 = -t280 - pkin(3);
t172 = -t196 * pkin(4) - t193 * pkin(10) + t186;
t335 = t190 * pkin(2);
t185 = pkin(9) + t335;
t294 = t192 * t172 + t185 * t298;
t347 = -t193 * t206 - t355;
t346 = t289 + t308;
t309 = t233 * t193;
t345 = t290 + t309;
t106 = t150 * t312 - t140;
t116 = pkin(2) * t279 + pkin(3) * t163 + pkin(9) * t233;
t296 = t196 * t106 + t193 * t116;
t50 = pkin(10) * t163 + t296;
t344 = -t172 * t287 - t192 * t356 + t195 * t50;
t47 = t196 * t101 - t193 * t73;
t37 = -pkin(4) * t352 - t47;
t89 = -t192 * t208 - t195 * t352;
t17 = t89 * pkin(5) - t91 * qJ(6) + t37;
t337 = pkin(10) * t88;
t342 = t130 * t17 - t337;
t149 = t258 + t214;
t114 = t190 * t149 + t312 * t158;
t104 = pkin(9) * t313 + t114;
t302 = t190 * t194;
t162 = (t268 - t302) * t291;
t117 = pkin(3) * t161 - pkin(9) * t162 + t350;
t165 = t190 * t301 - t254;
t166 = t225 * t191;
t120 = pkin(3) * t165 - pkin(9) * t166 + t253;
t183 = qJD(2) * t258;
t137 = t183 + t213;
t75 = t137 * t312 + t190 * t138;
t224 = -t104 * t290 + t193 * t117 + t120 * t289 + t196 * t75;
t23 = pkin(10) * t161 + t224;
t314 = t196 * t104 + t193 * t120;
t55 = pkin(10) * t165 + t314;
t113 = t312 * t149 - t190 * t158;
t103 = -pkin(3) * t313 - t113;
t144 = t166 * t196 + t313 * t193;
t226 = -t166 * t193 + t313 * t196;
t59 = -pkin(4) * t226 - t144 * pkin(10) + t103;
t240 = t192 * t59 + t195 * t55;
t111 = qJD(4) * t144 + t162 * t193;
t112 = qJD(4) * t226 + t162 * t196;
t74 = t137 * t190 - t312 * t138;
t35 = pkin(4) * t111 - pkin(10) * t112 + t74;
t341 = -qJD(5) * t240 - t192 * t23 + t195 * t35;
t340 = t91 ^ 2;
t339 = t130 ^ 2;
t198 = qJD(1) ^ 2;
t336 = t17 * t91;
t266 = t101 * t290 - t196 * t102 + t193 * t65 + t73 * t289;
t16 = -pkin(4) * t206 + t266;
t40 = -t192 * t206 - t353 * t195 - t208 * t288;
t41 = t353 * t192 - t195 * t206 - t208 * t287;
t7 = t41 * pkin(5) + t40 * qJ(6) - t91 * qJD(6) + t16;
t334 = t192 * t7;
t333 = t195 * t7;
t332 = t91 * t89;
t304 = t185 * t195;
t330 = -qJ(6) * t309 - (-t185 * t288 - qJD(6)) * t196 - (qJ(6) - t304) * t290 + t344;
t305 = t185 * t192;
t271 = pkin(5) + t305;
t329 = pkin(5) * t309 - t294 * qJD(5) + t192 * t50 + t271 * t290 + t351;
t76 = -pkin(4) * t208 + pkin(10) * t131;
t328 = t192 * t76 + t195 * t47;
t326 = qJ(6) * t88;
t324 = t130 * t89;
t323 = t16 * t192;
t322 = t192 * t88;
t321 = t195 * t88;
t320 = t196 * t40;
t319 = t196 * t41;
t318 = t91 * t130;
t242 = pkin(5) * t192 - qJ(6) * t195;
t232 = t185 + t242;
t243 = pkin(5) * t195 + qJ(6) * t192;
t264 = -t193 * t106 + t116 * t196;
t49 = -pkin(4) * t163 - t264;
t317 = -pkin(5) * t121 + qJ(6) * t122 + (t243 * qJD(5) - qJD(6) * t195) * t193 + t232 * t289 - t49;
t299 = t193 * t195;
t316 = t130 * t275 + t88 * t299;
t315 = -qJD(6) * t192 + t130 * t242 - t48;
t311 = qJD(5) * t89;
t310 = t208 * t163;
t307 = t163 * t131;
t306 = t172 * t195;
t187 = t191 ^ 2;
t303 = t187 * t198;
t13 = -t192 * t38 + t195 * t44;
t297 = qJD(6) - t13;
t293 = t194 ^ 2 - t197 ^ 2;
t284 = pkin(10) * t288;
t283 = t91 * t289;
t282 = t197 * t303;
t277 = t130 * t288;
t276 = t192 * t289;
t273 = t187 * t285;
t270 = t91 * t290 + t320;
t265 = -t40 + t311;
t263 = -t193 * t104 + t120 * t196;
t261 = t130 * t195;
t260 = 0.2e1 * t273;
t257 = -t41 * t299 + t354 * t89;
t252 = t191 * t198 * t313;
t251 = -0.2e1 * pkin(1) * t273;
t248 = -t121 + t276;
t246 = -t193 * t288 - t122;
t9 = -pkin(5) * t130 + t297;
t245 = t10 * t195 + t192 * t9;
t244 = -t10 * t192 + t195 * t9;
t239 = -t192 * t55 + t195 * t59;
t119 = t144 * t195 + t165 * t192;
t118 = t144 * t192 - t165 * t195;
t237 = 0.2e1 * t262 + qJD(2);
t236 = -t104 * t289 + t117 * t196 - t120 * t290 - t193 * t75;
t54 = -pkin(4) * t165 - t263;
t231 = t130 * t14 - t267;
t230 = -t130 * t287 - t322;
t3 = t195 * t15 + t192 * t33 + t44 * t287 - t38 * t288;
t228 = t192 * t35 + t195 * t23 + t59 * t287 - t55 * t288;
t227 = t130 * t37 - t337;
t24 = -pkin(4) * t161 - t236;
t222 = -pkin(8) * t300 - t259;
t219 = t233 * t352;
t218 = t246 + t275;
t1 = qJD(6) * t130 + t3 + t326;
t204 = qJD(5) * t244 + t1 * t195 + t192 * t2;
t203 = t196 * t206 + (-t343 - t219) * t193;
t202 = t238 * t222;
t200 = -t319 + t89 * t290 + (t233 * t89 - t322) * t193 + (-t247 - t276) * t130;
t178 = -pkin(4) - t243;
t157 = t232 * t193;
t136 = t196 * t271 - t306;
t135 = -qJ(6) * t196 + t294;
t56 = pkin(5) * t91 + qJ(6) * t89;
t53 = -qJD(5) * t118 + t112 * t195 + t161 * t192;
t52 = qJD(5) * t119 + t112 * t192 - t161 * t195;
t29 = pkin(5) * t118 - qJ(6) * t119 + t54;
t27 = pkin(5) * t208 + t192 * t47 - t195 * t76;
t26 = -qJ(6) * t208 + t328;
t25 = -t40 + t324;
t19 = pkin(5) * t226 - t239;
t18 = -qJ(6) * t226 + t240;
t8 = pkin(5) * t52 - qJ(6) * t53 - qJD(6) * t119 + t24;
t6 = -pkin(5) * t111 - t341;
t5 = qJ(6) * t111 - qJD(6) * t226 + t228;
t4 = [0, 0, 0, t194 * t197 * t260, -t293 * t260, t237 * t197 * t291, -t237 * t278, 0, qJD(2) * t202 + t194 * t251 + t222 * t249, t197 * t251 - (-pkin(8) * t278 + t183) * t238 - (-pkin(8) * t255 + t180) * t313, -t113 * t220 - t114 * t207 - t84 * t161 - t83 * t162 + t74 * t163 - t65 * t165 + t64 * t166 - t233 * t75, -t64 * t113 + t65 * t114 - t83 * t74 + t84 * t75 + (t170 + t234) * t350, -t112 * t208 + t144 * t199, t111 * t208 - t112 * t131 - t144 * t88 + t199 * t226, t112 * t352 + t144 * t206 - t161 * t208 + t165 * t199, -t111 * t352 - t131 * t161 - t88 * t165 + t206 * t226 (qJD(4) - t176) * t161 + (t161 * t302 + t165 * t221) * t292, t103 * t88 + t72 * t111 + t74 * t131 + t47 * t161 - t165 * t266 + t206 * t263 - t226 * t64 + t236 * t352, t103 * t199 + t72 * t112 + t64 * t144 - t48 * t161 + t165 * t229 - t207 * t314 - t208 * t74 - t224 * t352, -t119 * t40 + t53 * t91, t118 * t40 - t119 * t41 - t52 * t91 - t53 * t89, t111 * t91 + t119 * t88 + t130 * t53 + t226 * t40, -t111 * t89 - t118 * t88 - t130 * t52 + t226 * t41, t111 * t130 - t226 * t88, t13 * t111 + t16 * t118 + t130 * t341 + t226 * t267 + t239 * t88 + t24 * t89 + t37 * t52 + t54 * t41, -t14 * t111 + t16 * t119 - t130 * t228 + t226 * t3 + t24 * t91 - t240 * t88 + t37 * t53 - t54 * t40, -t111 * t9 + t118 * t7 - t130 * t6 + t17 * t52 - t19 * t88 + t2 * t226 + t29 * t41 + t8 * t89, -t1 * t118 - t10 * t52 + t119 * t2 - t18 * t41 - t19 * t40 - t5 * t89 + t53 * t9 + t6 * t91, -t1 * t226 + t10 * t111 - t119 * t7 + t130 * t5 - t17 * t53 + t18 * t88 + t29 * t40 - t8 * t91, t1 * t18 + t10 * t5 + t17 * t8 + t19 * t2 + t29 * t7 + t6 * t9; 0, 0, 0, -t194 * t282, t293 * t303, -t197 * t252, t194 * t252, 0, -t197 * pkin(8) * t272 - qJD(1) * t202 + (pkin(1) * t303 - t235) * t194, -t180 + pkin(1) * t282 + (-pkin(8) * t279 + t182) * t262 + t182 * qJD(2), -t207 * t335 - t220 * t280 - (t105 - t84) * t163 - (-t106 + t83) * t233, t83 * t105 - t84 * t106 + (-t170 * t279 + t190 * t65 - t312 * t64) * pkin(2), -qJD(4) * t193 ^ 2 * t163 + ((qJD(4) * t238 + t220) * t193 - t352 * t208) * t196, -t131 * t346 - t193 * t88 + t196 * t199 + t208 * t345, t196 * t219 + t310 - t347, t203 + t307, -t352 * t163, -t105 * t131 - t47 * t163 + t185 * t347 + t186 * t88 - t64 * t196 - t264 * t352 + t345 * t72, t105 * t208 + t48 * t163 + t186 * t199 + t64 * t193 + t352 * t296 + t346 * t72 + (t193 * t343 - t196 * t207) * t185, t218 * t91 - t299 * t40, -t348 + (-t283 + (t40 + t311) * t193) * t192 + t257, t130 * t246 + t309 * t91 + t270 + t316, t319 - t248 * t130 + (-t352 * t89 + t230) * t193, t130 * t193 * t352 - t196 * t88, t88 * t306 - t37 * t121 - t49 * t89 + (t351 + (-qJD(5) * t172 + t50) * t192) * t130 + (t37 * t192 * qJD(4) + t267 + (qJD(4) * t89 + t230) * t185) * t196 + (t37 * t287 + t13 * t233 + t323 + t185 * t41 + (t130 * t305 + t13) * qJD(4)) * t193, -t294 * t88 - t49 * t91 - t37 * t122 + t344 * t130 + (t185 * t277 + t3 + (t185 * t91 + t37 * t195) * qJD(4)) * t196 + (-t37 * t288 - t14 * t233 + t16 * t195 - t185 * t40 + (t130 * t304 - t14) * qJD(4)) * t193, -t136 * t88 + t157 * t41 + t196 * t2 + t317 * t89 + t248 * t17 + t329 * t130 + (t17 * t287 - t352 * t9 + t334) * t193, t10 * t121 - t122 * t9 - t135 * t41 - t136 * t40 - t329 * t91 + t330 * t89 + t244 * t289 + (-qJD(5) * t245 - t1 * t192 + t195 * t2) * t193, -t1 * t196 + t135 * t88 + t157 * t40 - t317 * t91 + t354 * t17 - t330 * t130 + (t10 * t352 + t17 * t288 - t333) * t193, t1 * t135 - t10 * t330 + t136 * t2 + t157 * t7 + t17 * t317 - t329 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163 ^ 2 - t233 ^ 2, t163 * t83 + t233 * t84 + t179, 0, 0, 0, 0, 0, t203 - t307, -t193 * t207 - t308 * t352 + t310 - t355, 0, 0, 0, 0, 0, t200 (t233 * t91 - t321) * t193 - t218 * t130 + t270, t200, t348 + (t193 * t265 + t283) * t192 + t257, -t122 * t130 - t320 + (-t352 * t91 - t277) * t193 + t316, -t10 * t122 - t121 * t9 + (qJD(4) * t245 - t7) * t196 + (t17 * t352 + t204) * t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208 * t131, -t131 ^ 2 + t208 ^ 2, t131 * t233 + t210, -t208 * t233 - t211, t206, t208 * t72 + t352 * t48 - t266, t72 * t131 + t352 * t47 + t229, -t192 * t40 + t261 * t91 (-t40 - t324) * t195 + (-t41 - t318) * t192, t130 * t261 + t208 * t91 + t322, -t192 * t339 - t208 * t89 + t321, t130 * t208, -pkin(4) * t41 + t13 * t208 - t48 * t89 + (-t16 + (-pkin(10) * qJD(5) - t76) * t130) * t195 + (t47 * t130 + t227) * t192, pkin(4) * t40 - t14 * t208 + t323 - t48 * t91 + (t284 + t328) * t130 + t227 * t195, -t208 * t9 + t178 * t41 - t333 + t315 * t89 + (-pkin(10) * t287 + t27) * t130 + t342 * t192, t26 * t89 - t27 * t91 + (t1 + t130 * t9 + (qJD(5) * t91 - t41) * pkin(10)) * t195 + (pkin(10) * t265 + t349) * t192, t10 * t208 + t178 * t40 - t334 - t315 * t91 + (-t26 - t284) * t130 - t342 * t195, pkin(10) * t204 - t10 * t26 + t17 * t315 + t178 * t7 - t27 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332, -t89 ^ 2 + t340, t25, -t41 + t318, t88, -t37 * t91 + t231, t13 * t130 + t37 * t89 - t3, -t56 * t89 + t231 - t336 + 0.2e1 * t338, pkin(5) * t40 - qJ(6) * t41 + (t10 - t14) * t91 + (t9 - t297) * t89, 0.2e1 * t326 - t17 * t89 + t56 * t91 + (0.2e1 * qJD(6) - t13) * t130 + t3, -pkin(5) * t2 + qJ(6) * t1 + t10 * t297 - t14 * t9 - t17 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332 - t88, t25, -t339 - t340, t336 + t349;];
tauc_reg  = t4;
