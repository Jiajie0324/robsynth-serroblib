% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRP6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRP6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:14:10
% EndTime: 2019-03-09 12:14:36
% DurationCPUTime: 10.70s
% Computational Cost: add. (18395->644), mult. (54978->834), div. (0->0), fcn. (43817->10), ass. (0->309)
t240 = sin(qJ(5));
t243 = cos(qJ(5));
t239 = sin(pkin(6));
t242 = sin(qJ(2));
t245 = cos(qJ(2));
t388 = sin(pkin(11));
t389 = cos(pkin(11));
t279 = t242 * t389 + t245 * t388;
t424 = t279 * t239;
t199 = qJD(1) * t424;
t241 = sin(qJ(4));
t244 = cos(qJ(4));
t390 = cos(pkin(6));
t323 = t390 * qJD(1);
t292 = t323 + qJD(2);
t263 = -t244 * t199 - t241 * t292;
t369 = t239 * t245;
t311 = t389 * t369;
t222 = qJD(1) * t311;
t328 = t242 * t388;
t312 = t239 * t328;
t195 = qJD(1) * t312 - t222;
t277 = qJD(4) + t195;
t117 = -t240 * t263 - t243 * t277;
t365 = t241 * t243;
t364 = t243 * t244;
t151 = -t195 * t364 + t199 * t240;
t353 = qJD(5) * t240;
t306 = t241 * t353 + t151;
t354 = qJD(4) * t244;
t338 = t243 * t354;
t438 = t306 - t338;
t269 = qJD(2) * t279;
t198 = t239 * t269;
t254 = qJD(1) * t198;
t352 = qJD(5) * t243;
t190 = t195 * qJD(2);
t350 = t241 * qJD(4);
t417 = t199 * t350 - t244 * (qJD(4) * t292 - t190);
t436 = -qJD(5) * t277 + t417;
t63 = -t436 * t240 - t243 * t254 - t263 * t352;
t272 = t438 * t117 - t63 * t365;
t119 = t240 * t277 - t243 * t263;
t367 = t240 * t244;
t150 = -t195 * t367 - t243 * t199;
t307 = t240 * t354 - t150;
t276 = t241 * t352 + t307;
t368 = t240 * t241;
t62 = -t240 * t254 + t436 * t243 - t263 * t353;
t290 = t119 * t276 - t62 * t368;
t444 = t272 + t290;
t443 = t272 - t290;
t345 = pkin(1) * t390;
t232 = t245 * t345;
t228 = qJD(1) * t232;
t406 = pkin(8) + qJ(3);
t333 = t406 * t242;
t314 = t239 * t333;
t182 = -qJD(1) * t314 + t228;
t231 = t242 * t345;
t416 = t369 * t406 + t231;
t183 = t416 * qJD(1);
t327 = t389 * t183;
t134 = t182 * t388 + t327;
t442 = -t134 + t277 * (pkin(4) * t241 - pkin(10) * t244);
t419 = qJD(4) * t277;
t440 = t244 * t419;
t217 = (-pkin(2) * t245 - pkin(1)) * t239;
t357 = qJD(1) * t217;
t212 = qJD(3) + t357;
t128 = pkin(3) * t195 - pkin(9) * t199 + t212;
t349 = qJD(1) * qJD(2);
t331 = t242 * t349;
t313 = t239 * t331;
t225 = pkin(2) * t313;
t261 = qJD(2) * t424;
t255 = qJD(1) * t261;
t129 = pkin(3) * t255 + t190 * pkin(9) + t225;
t226 = qJD(2) * t228;
t271 = (-qJD(2) * t333 + qJD(3) * t245) * t239;
t157 = qJD(1) * t271 + t226;
t370 = t239 * t242;
t250 = -qJD(2) * t416 - qJD(3) * t370;
t249 = t388 * t250;
t91 = qJD(1) * t249 + t157 * t389;
t273 = pkin(2) * t390 - t314;
t164 = qJD(2) * pkin(2) + qJD(1) * t273 + t228;
t112 = t388 * t164 + t327;
t98 = pkin(9) * t292 + t112;
t283 = -t128 * t354 - t241 * t129 - t244 * t91 + t350 * t98;
t69 = t244 * t128 - t241 * t98;
t439 = -t277 * t69 - t283;
t318 = t128 * t350 - t244 * t129 + t241 * t91 + t98 * t354;
t70 = t241 * t128 + t244 * t98;
t437 = t277 * t70 - t318;
t161 = t199 * t241 - t244 * t292;
t160 = qJD(5) + t161;
t58 = pkin(10) * t277 + t70;
t172 = t388 * t183;
t111 = t164 * t389 - t172;
t97 = -pkin(3) * t292 - t111;
t66 = t161 * pkin(4) + pkin(10) * t263 + t97;
t21 = t240 * t66 + t243 * t58;
t22 = pkin(10) * t254 - t283;
t366 = t241 * t190;
t116 = -qJD(4) * t263 - t366;
t159 = t389 * t250;
t90 = -qJD(1) * t159 + t157 * t388;
t51 = t116 * pkin(4) + pkin(10) * t417 + t90;
t326 = t240 * t22 - t243 * t51 + t58 * t352 + t66 * t353;
t286 = t160 * t21 - t326;
t377 = t195 * t244;
t420 = t354 + t377;
t378 = t195 * t241;
t421 = t350 + t378;
t435 = -t244 * t417 + t421 * t263;
t319 = t119 * t160;
t320 = t117 * t160;
t434 = (t63 + t319) * t240 + (t62 + t320) * t243;
t236 = t239 ^ 2;
t433 = -0.2e1 * t236 * t349;
t16 = qJ(6) * t160 + t21;
t411 = pkin(5) * t116;
t2 = t326 - t411;
t432 = -t16 * t160 + t2;
t344 = t389 * pkin(2);
t235 = -t344 - pkin(3);
t216 = -t244 * pkin(4) - t241 * pkin(10) + t235;
t135 = t182 * t389 - t172;
t356 = qJD(1) * t239;
t342 = t242 * t356;
t317 = pkin(2) * t342;
t145 = pkin(3) * t199 + pkin(9) * t195 + t317;
t82 = t244 * t135 + t241 * t145;
t72 = pkin(10) * t199 + t82;
t429 = t216 * t352 + t240 * t442 - t243 * t72;
t426 = t195 * t292;
t425 = t276 * t160;
t343 = t388 * pkin(2);
t234 = t343 + pkin(9);
t423 = t240 * t216 + t234 * t364;
t422 = -t241 * t254 - t440;
t203 = t312 - t311;
t57 = -pkin(4) * t277 - t69;
t24 = t117 * pkin(5) - t119 * qJ(6) + t57;
t410 = pkin(10) * t116;
t418 = t160 * t24 - t410;
t322 = t160 ^ 2;
t384 = t116 * t243;
t415 = t117 * t263 + t240 * t322 - t384;
t229 = qJD(2) * t232;
t167 = t229 + t271;
t100 = t167 * t389 + t249;
t181 = t232 + t273;
t359 = pkin(8) * t369 + t231;
t193 = qJ(3) * t369 + t359;
t143 = t388 * t181 + t389 * t193;
t131 = pkin(9) * t390 + t143;
t197 = t203 * qJD(2);
t355 = qJD(2) * t239;
t341 = t242 * t355;
t316 = pkin(2) * t341;
t146 = pkin(3) * t198 + pkin(9) * t197 + t316;
t149 = pkin(3) * t203 - pkin(9) * t424 + t217;
t42 = t244 * t100 - t131 * t350 + t241 * t146 + t149 * t354;
t33 = pkin(10) * t198 + t42;
t85 = t244 * t131 + t241 * t149;
t77 = pkin(10) * t203 + t85;
t142 = t181 * t389 - t388 * t193;
t130 = -pkin(3) * t390 - t142;
t176 = t241 * t390 + t244 * t424;
t282 = -t241 * t424 + t244 * t390;
t83 = -pkin(4) * t282 - t176 * pkin(10) + t130;
t405 = t240 * t83 + t243 * t77;
t140 = qJD(4) * t176 - t197 * t241;
t141 = qJD(4) * t282 - t197 * t244;
t99 = t167 * t388 - t159;
t53 = t140 * pkin(4) - t141 * pkin(10) + t99;
t8 = -qJD(5) * t405 - t240 * t33 + t243 * t53;
t414 = -qJD(5) * t423 + t240 * t72 + t243 * t442;
t413 = t119 ^ 2;
t412 = t199 ^ 2;
t246 = qJD(1) ^ 2;
t409 = pkin(10) * t119;
t23 = -pkin(4) * t254 + t318;
t9 = t63 * pkin(5) + t62 * qJ(6) - t119 * qJD(6) + t23;
t408 = t240 * t9;
t407 = t243 * t9;
t101 = -pkin(4) * t263 + pkin(10) * t161;
t47 = t240 * t101 + t243 * t69;
t404 = t119 * t24;
t401 = t23 * t240;
t400 = t23 * t243;
t399 = t243 * t63;
t398 = t244 * t62;
t397 = t244 * t63;
t396 = qJ(6) * t378 + (-t234 * t353 - qJD(6)) * t244 + (-t234 * t243 + qJ(6)) * t350 + t429;
t330 = t234 * t240 + pkin(5);
t395 = -pkin(5) * t378 - t330 * t350 - t414;
t394 = (-t243 * t350 - t244 * t353) * t234 + t429;
t335 = t234 * t350;
t393 = t240 * t335 + t414;
t303 = pkin(5) * t240 - qJ(6) * t243;
t287 = t234 + t303;
t304 = pkin(5) * t243 + qJ(6) * t240;
t81 = -t241 * t135 + t145 * t244;
t71 = -pkin(4) * t199 - t81;
t392 = -pkin(5) * t150 + qJ(6) * t151 + (qJD(5) * t304 - qJD(6) * t243) * t241 + t287 * t354 - t71;
t391 = -qJD(6) * t240 + t160 * t303 - t70;
t387 = qJ(6) * t116;
t386 = t116 * t282;
t385 = t116 * t240;
t383 = t117 * t195;
t382 = t119 * t117;
t381 = t160 * t263;
t380 = t263 * t161;
t379 = t263 * t199;
t376 = t199 * t161;
t375 = t199 * t195;
t374 = t216 * t243;
t372 = t234 * t241;
t371 = t236 * t246;
t363 = t244 * t116;
t20 = -t240 * t58 + t243 * t66;
t362 = qJD(6) - t20;
t361 = t116 * t365 + t160 * t338;
t358 = t242 ^ 2 - t245 ^ 2;
t351 = t199 * qJD(2);
t348 = pkin(10) * t353;
t347 = pkin(10) * t352;
t346 = t245 * t371;
t340 = t245 * t355;
t336 = t263 * t354;
t334 = t117 ^ 2 - t413;
t329 = t199 * t390;
t325 = t119 * t350 + t398;
t324 = t117 * t350 - t397;
t84 = -t241 * t131 + t149 * t244;
t321 = t241 * t277;
t315 = t242 * t346;
t310 = t239 * t246 * t390;
t309 = pkin(1) * t433;
t305 = (qJD(5) * t117 - t62) * pkin(10);
t147 = t176 * t240 - t203 * t243;
t148 = t176 * t243 + t203 * t240;
t74 = qJD(5) * t148 + t141 * t240 - t198 * t243;
t302 = t117 * t74 + t147 * t63;
t15 = -pkin(5) * t160 + t362;
t301 = t15 * t243 - t16 * t240;
t300 = t15 * t240 + t16 * t243;
t299 = -t20 * t243 - t21 * t240;
t298 = t20 * t240 - t21 * t243;
t35 = -t240 * t77 + t243 * t83;
t295 = t241 * t318 - t244 * t283;
t46 = t101 * t243 - t240 * t69;
t293 = t236 * t245 * t331;
t291 = 0.2e1 * t323 + qJD(2);
t43 = -t241 * t100 - t131 * t354 + t146 * t244 - t149 * t350;
t288 = -t241 * t116 - t420 * t161;
t76 = -pkin(4) * t203 - t84;
t3 = t243 * t22 + t240 * t51 + t66 * t352 - t353 * t58;
t7 = t240 * t53 + t243 * t33 + t83 * t352 - t353 * t77;
t284 = t160 * t57 - t410;
t201 = -pkin(8) * t313 + t226;
t280 = t240 * t320 - t399;
t34 = -pkin(4) * t198 - t43;
t209 = t359 * qJD(2);
t75 = t198 * t240 - t176 * t353 + (qJD(5) * t203 + t141) * t243;
t268 = t117 * t75 + t119 * t74 - t147 * t62 + t148 * t63;
t267 = t195 * t277;
t262 = t116 * t147 + t117 * t140 + t160 * t74 - t282 * t63;
t1 = qJD(6) * t160 + t3 + t387;
t257 = qJD(5) * t301 + t1 * t243 + t2 * t240;
t256 = qJD(5) * t299 + t240 * t326 + t243 * t3;
t252 = t244 * t254 + (-t419 - t267) * t241;
t251 = t117 * t276 + t368 * t63;
t248 = (t383 - t385) * t241 - t425 + t324;
t247 = t63 - t319;
t224 = -pkin(4) - t304;
t214 = -pkin(8) * t370 + t232;
t208 = -pkin(8) * t341 + t229;
t207 = t359 * qJD(1);
t206 = -pkin(8) * t342 + t228;
t202 = qJD(1) * t209;
t192 = t195 ^ 2;
t191 = t287 * t241;
t170 = -t234 * t367 + t374;
t166 = t244 * t330 - t374;
t165 = -qJ(6) * t244 + t423;
t78 = pkin(5) * t119 + qJ(6) * t117;
t61 = pkin(10) * t399;
t56 = t160 * t321 - t363;
t54 = t140 * t160 - t386;
t45 = pkin(5) * t147 - qJ(6) * t148 + t76;
t39 = pkin(5) * t263 - t46;
t38 = -qJ(6) * t263 + t47;
t37 = -t62 + t320;
t30 = t119 * t263 + t243 * t322 + t385;
t28 = pkin(5) * t282 - t35;
t27 = -qJ(6) * t282 + t405;
t17 = -t240 * t62 + t243 * t319;
t14 = t119 * t75 - t148 * t62;
t13 = -t119 * t438 - t365 * t62;
t12 = t119 * t378 - t160 * t306 + t325 + t361;
t11 = t116 * t148 + t119 * t140 + t160 * t75 + t282 * t62;
t10 = pkin(5) * t74 - qJ(6) * t75 - qJD(6) * t148 + t34;
t6 = -pkin(5) * t140 - t8;
t5 = qJ(6) * t140 - qJD(6) * t282 + t7;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t293, t358 * t433, t291 * t340, -0.2e1 * t293, -t291 * t341, 0, -t202 * t390 - t209 * t292 + t242 * t309, -t201 * t390 - t208 * t292 + t245 * t309 (t201 * t245 + t202 * t242 + (-t206 * t245 - t207 * t242) * qJD(2) + (t208 * t245 + t209 * t242 + (-t214 * t245 - t242 * t359) * qJD(2)) * qJD(1)) * t239, t201 * t359 - t202 * t214 - t206 * t209 + t207 * t208, -t190 * t424 - t197 * t199, t190 * t203 + t197 * t195 - t199 * t198 - t255 * t424, -t190 * t390 - t197 * t292, t195 * t198 + t203 * t255, -t198 * qJD(2) + (-t198 - t261) * t323, 0, t195 * t316 + t212 * t198 + t203 * t225 + t217 * t254 - t292 * t99 - t390 * t90, -t100 * t292 - t217 * t190 - t212 * t197 + 0.2e1 * t199 * t316 - t91 * t390, -t100 * t195 + t111 * t197 - t112 * t198 + t142 * t190 - t143 * t255 + t99 * t199 - t91 * t203 + t424 * t90, t100 * t112 - t111 * t99 - t142 * t90 + t143 * t91 + (t212 + t357) * t316, -t141 * t263 - t176 * t417, -t176 * t116 + t140 * t263 - t141 * t161 - t282 * t417, t141 * t277 + t176 * t254 - t198 * t263 - t203 * t417, t140 * t161 - t386, -t116 * t203 - t140 * t277 - t161 * t198 + t254 * t282 (qJD(4) - t222) * t198 + (t198 * t328 + t203 * t269) * t356, t130 * t116 + t97 * t140 + t99 * t161 + t69 * t198 - t203 * t318 + t254 * t84 + t277 * t43 - t282 * t90, -t130 * t417 + t97 * t141 + t90 * t176 - t70 * t198 + t203 * t283 - t255 * t85 - t263 * t99 - t277 * t42, -t85 * t116 - t70 * t140 - t69 * t141 - t42 * t161 + t176 * t318 + t263 * t43 - t282 * t283 + t417 * t84, t130 * t90 - t283 * t85 - t318 * t84 + t42 * t70 + t43 * t69 + t97 * t99, t14, -t268, t11, t302, -t262, t54, t116 * t35 + t117 * t34 + t140 * t20 + t147 * t23 + t160 * t8 + t282 * t326 + t57 * t74 + t63 * t76, -t116 * t405 + t119 * t34 - t140 * t21 + t148 * t23 - t160 * t7 + t282 * t3 + t57 * t75 - t62 * t76, -t117 * t7 - t119 * t8 - t147 * t3 + t148 * t326 - t20 * t75 - t21 * t74 + t35 * t62 - t405 * t63, t20 * t8 + t21 * t7 + t23 * t76 + t3 * t405 - t326 * t35 + t34 * t57, t14, t11, t268, t54, t262, t302, t10 * t117 - t116 * t28 - t140 * t15 + t147 * t9 - t160 * t6 + t2 * t282 + t24 * t74 + t45 * t63, -t1 * t147 - t117 * t5 + t119 * t6 + t148 * t2 + t15 * t75 - t16 * t74 - t27 * t63 - t28 * t62, -t1 * t282 - t10 * t119 + t116 * t27 + t140 * t16 - t148 * t9 + t160 * t5 - t24 * t75 + t45 * t62, t1 * t27 + t10 * t24 + t15 * t6 + t16 * t5 + t2 * t28 + t45 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t315, t358 * t371, -t245 * t310, t315, t242 * t310, 0, -qJD(1) * pkin(8) * t340 + t207 * t292 + (-qJD(2) * t323 + t371) * t242 * pkin(1), pkin(1) * t346 + t206 * t292 - t201, 0, 0, t375, -t192 + t412, -t190 + t426, -t375, t351 + (t329 - t261) * qJD(1), 0, t134 * t292 - t195 * t317 - t212 * t199 - t90, t135 * t292 + t212 * t195 - t199 * t317 - t91, t190 * t344 - t255 * t343 - (-t112 + t134) * t199 + (t135 - t111) * t195, t111 * t134 - t112 * t135 + (-t212 * t342 + t388 * t91 - t389 * t90) * pkin(2), -t241 * t417 - t263 * t377 - t336, t288 + t435, t244 * t267 + t379 - t422, t161 * t321 - t363, t252 + t376, -t277 * t199, t235 * t116 - t134 * t161 - t69 * t199 + t422 * t234 - t90 * t244 - t277 * t81 + t421 * t97, -t234 * t244 * t255 + t134 * t263 + t70 * t199 - t235 * t417 + t90 * t241 + t277 * t82 + t372 * t419 + t420 * t97, -t81 * t263 - t417 * t372 + t295 - t421 * t70 - t420 * t69 + (-t336 - t363) * t234 + (t335 + t82) * t161, -t134 * t97 + t235 * t90 - t69 * t81 - t70 * t82 + ((-t241 * t70 - t244 * t69) * qJD(4) + t295) * t234, t13, t443, t12, t251, t397 - t307 * t160 + (-t117 * t277 - t160 * t352 - t385) * t241, t56, t116 * t170 - t117 * t71 - t150 * t57 + t393 * t160 + (t326 + (t117 * t234 + t240 * t57) * qJD(4)) * t244 + (t20 * t277 + t234 * t63 + t352 * t57 + t401) * t241, -t116 * t423 - t119 * t71 - t151 * t57 - t394 * t160 + (t3 + (t119 * t234 + t243 * t57) * qJD(4)) * t244 + (-t21 * t277 - t234 * t62 - t353 * t57 + t400) * t241, t150 * t21 + t151 * t20 + t170 * t62 - t423 * t63 - t393 * t119 - t394 * t117 + t299 * t354 + (qJD(5) * t298 - t240 * t3 + t243 * t326) * t241, -t170 * t326 + t423 * t3 - t57 * t71 + (t23 * t241 + t354 * t57) * t234 + t394 * t21 + t393 * t20, t13, t12, -t443, t56 (t383 + t385) * t241 + t425 + t324, t251, -t116 * t166 + t191 * t63 + t2 * t244 + t307 * t24 - t395 * t160 + t392 * t117 + (-t15 * t277 + t24 * t352 + t408) * t241, -t15 * t151 + t150 * t16 - t165 * t63 - t166 * t62 + t395 * t119 - t396 * t117 + t301 * t354 + (-qJD(5) * t300 - t1 * t240 + t2 * t243) * t241, -t1 * t244 + t116 * t165 + t191 * t62 + (t151 - t338) * t24 + t396 * t160 - t392 * t119 + (t16 * t277 + t24 * t353 - t407) * t241, t1 * t165 + t15 * t395 + t16 * t396 + t166 * t2 + t191 * t9 + t24 * t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t351 + (t329 + t198) * qJD(1), -t190 - t426, -t192 - t412, t111 * t199 + t112 * t195 + t225, 0, 0, 0, 0, 0, 0, t252 - t376, -t241 * t255 - t277 * t377 + t379 - t440, t288 - t435, -t199 * t97 + t439 * t241 + t437 * t244, 0, 0, 0, 0, 0, 0, t248 (t119 * t195 - t384) * t241 + t438 * t160 + t325, t444, t150 * t20 - t151 * t21 + (-qJD(4) * t298 - t23) * t244 + (t277 * t57 + t256) * t241, 0, 0, 0, 0, 0, 0, t248, t444, -t151 * t160 - t398 + (-t119 * t277 - t160 * t353) * t241 + t361, -t15 * t150 - t151 * t16 + (qJD(4) * t300 - t9) * t244 + (t24 * t277 + t257) * t241; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t380, -t161 ^ 2 + t263 ^ 2, t161 * t277 - t417, t380, -t263 * t195 + t366, t254, t263 * t97 + t437, t97 * t161 - t439, 0, 0, t17, -t434, t30, t280, -t415, t381, -pkin(4) * t63 - t117 * t70 + t263 * t20 - t400 + (-t46 - t347) * t160 + t284 * t240, pkin(4) * t62 - t119 * t70 - t263 * t21 + t401 + (t47 + t348) * t160 + t284 * t243, t117 * t47 + t119 * t46 - t61 + (-t161 * t20 + t3 + (-t20 + t409) * qJD(5)) * t243 + (t305 - t286) * t240, -pkin(4) * t23 + pkin(10) * t256 - t20 * t46 - t21 * t47 - t57 * t70, t17, t30, t434, t381, t415, t280, -t15 * t263 + t224 * t63 - t407 + (t39 - t347) * t160 + t391 * t117 + t418 * t240, t117 * t38 - t119 * t39 - t61 + (t15 * t161 + t1 + (t15 + t409) * qJD(5)) * t243 + (t305 + t432) * t240, t16 * t263 + t224 * t62 - t408 + (-t38 - t348) * t160 - t391 * t119 - t418 * t243, pkin(10) * t257 - t15 * t39 - t16 * t38 + t224 * t9 + t24 * t391; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t382, -t334, t37, -t382, -t247, t116, -t119 * t57 + t286, t117 * t57 + t160 * t20 - t3, 0, 0, t382, t37, t334, t116, t247, -t382, -t117 * t78 + t286 - t404 + 0.2e1 * t411, pkin(5) * t62 - qJ(6) * t63 + (t16 - t21) * t119 + (t15 - t362) * t117, 0.2e1 * t387 - t117 * t24 + t119 * t78 + (0.2e1 * qJD(6) - t20) * t160 + t3, -pkin(5) * t2 + qJ(6) * t1 - t15 * t21 + t16 * t362 - t24 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116 + t382, t37, -t322 - t413, t404 + t432;];
tauc_reg  = t4;
