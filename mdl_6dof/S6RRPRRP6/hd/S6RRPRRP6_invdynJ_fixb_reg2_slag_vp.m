% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRP6_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP6_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP6_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP6_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP6_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRP6_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:14:18
% EndTime: 2019-03-09 12:14:51
% DurationCPUTime: 18.15s
% Computational Cost: add. (22982->875), mult. (65015->1116), div. (0->0), fcn. (53269->12), ass. (0->412)
t321 = sin(qJ(5));
t325 = cos(qJ(5));
t319 = sin(pkin(6));
t323 = sin(qJ(2));
t327 = cos(qJ(2));
t529 = sin(pkin(11));
t530 = cos(pkin(11));
t370 = t323 * t530 + t327 * t529;
t361 = qJD(1) * t370;
t256 = t319 * t361;
t322 = sin(qJ(4));
t326 = cos(qJ(4));
t320 = cos(pkin(6));
t434 = qJD(1) * t320 + qJD(2);
t365 = -t326 * t256 - t322 * t434;
t446 = t327 * t530;
t425 = t319 * t446;
t290 = qJD(1) * t425;
t447 = t323 * t529;
t426 = t319 * t447;
t396 = qJD(1) * t426;
t252 = t396 - t290;
t369 = qJD(4) + t252;
t138 = -t321 * t365 - t325 * t369;
t494 = t322 * t325;
t287 = qJDD(1) * t425;
t360 = qJD(2) * t370;
t417 = qJDD(1) * t447;
t335 = (qJD(1) * t360 + t417) * t319;
t188 = -t287 + t335;
t332 = qJDD(4) + t188;
t477 = qJD(5) * t325;
t472 = qJDD(1) * t320;
t431 = qJDD(2) + t472;
t480 = qJD(4) * t322;
t377 = t256 * t480 - t322 * t431;
t424 = qJD(2) * t446;
t189 = -qJD(2) * t396 + (qJD(1) * t424 + qJDD(1) * t370) * t319;
t379 = qJD(4) * t434 + t189;
t559 = -t326 * t379 + t377;
t574 = -qJD(5) * t369 + t559;
t57 = -t321 * t574 - t325 * t332 - t365 * t477;
t490 = t325 * t326;
t174 = -t252 * t490 + t256 * t321;
t478 = qJD(5) * t321;
t415 = t322 * t478 + t174;
t479 = qJD(4) * t326;
t459 = t325 * t479;
t577 = t415 - t459;
t364 = t138 * t577 - t57 * t494;
t140 = t321 * t369 - t325 * t365;
t495 = t321 * t326;
t173 = -t252 * t495 - t325 * t256;
t416 = t321 * t479 - t173;
t368 = t322 * t477 + t416;
t496 = t321 * t322;
t56 = -t321 * t332 + t325 * t574 - t365 * t478;
t397 = t140 * t368 - t56 * t496;
t583 = t364 + t397;
t582 = t364 - t397;
t309 = t320 * t327 * pkin(1);
t304 = qJD(1) * t309;
t544 = pkin(8) + qJ(3);
t455 = t544 * t319;
t430 = t323 * t455;
t236 = -qJD(1) * t430 + t304;
t497 = t320 * t323;
t308 = pkin(1) * t497;
t499 = t319 * t327;
t237 = (t499 * t544 + t308) * qJD(1);
t445 = t530 * t237;
t153 = t236 * t529 + t445;
t581 = -t153 + t369 * (pkin(4) * t322 - pkin(10) * t326);
t561 = qJD(4) * t369;
t573 = t252 * t369 + t561;
t579 = t573 * t326;
t378 = t320 * pkin(2) - t430;
t219 = qJD(2) * pkin(2) + qJD(1) * t378 + t304;
t132 = t529 * t219 + t445;
t120 = pkin(9) * t434 + t132;
t315 = pkin(2) * t327 + pkin(1);
t271 = -qJD(1) * t315 * t319 + qJD(3);
t148 = pkin(3) * t252 - pkin(9) * t256 + t271;
t467 = pkin(1) * t472;
t303 = t327 * t467;
t473 = qJD(1) * qJD(2);
t454 = t320 * t473;
t433 = pkin(1) * t454;
t389 = -t323 * t433 + t303;
t448 = qJD(2) * t544;
t471 = qJDD(1) * t323;
t481 = qJD(3) * t323;
t124 = t431 * pkin(2) + (-t544 * t471 + (-t327 * t448 - t481) * qJD(1)) * t319 + t389;
t374 = qJD(3) * t327 - t323 * t448;
t470 = qJDD(1) * t327;
t451 = t319 * t470;
t464 = pkin(8) * t451 + t323 * t467 + t327 * t433;
t143 = (qJ(3) * t470 + qJD(1) * t374) * t319 + t464;
t74 = t529 * t124 + t530 * t143;
t69 = pkin(9) * t431 + t74;
t414 = t315 * qJDD(1);
t453 = t323 * t473;
t428 = t319 * t453;
t469 = pkin(2) * t428 + qJDD(3);
t235 = -t319 * t414 + t469;
t94 = pkin(3) * t188 - pkin(9) * t189 + t235;
t391 = t120 * t480 - t148 * t479 - t322 * t94 - t326 * t69;
t75 = -t322 * t120 + t326 * t148;
t578 = -t369 * t75 - t391;
t436 = t120 * t479 + t148 * t480 + t322 * t69 - t326 * t94;
t76 = t326 * t120 + t322 * t148;
t576 = t369 * t76 - t436;
t511 = t252 * t326;
t575 = -t479 - t511;
t475 = qJD(4) * t365;
t216 = t256 * t322 - t326 * t434;
t215 = qJD(5) + t216;
t262 = t370 * t320;
t281 = t447 - t446;
t324 = sin(qJ(1));
t328 = cos(qJ(1));
t207 = t262 * t328 - t281 * t324;
t498 = t319 * t328;
t176 = t207 * t326 - t322 * t498;
t261 = t281 * t320;
t206 = -t328 * t261 - t324 * t370;
t102 = t176 * t321 + t206 * t325;
t103 = t176 * t325 - t206 * t321;
t512 = t252 * t322;
t572 = t322 * t475 - t326 * t559 + t365 * t512;
t438 = t140 * t215;
t524 = t138 * t215;
t571 = (t57 + t438) * t321 + (t56 + t524) * t325;
t314 = -pkin(2) * t530 - pkin(3);
t280 = -t326 * pkin(4) - t322 * pkin(10) + t314;
t228 = t529 * t237;
t154 = t236 * t530 - t228;
t482 = qJD(1) * t323;
t463 = t319 * t482;
t164 = pkin(2) * t463 + pkin(3) * t256 + pkin(9) * t252;
t90 = t326 * t154 + t322 * t164;
t78 = pkin(10) * t256 + t90;
t568 = t280 * t477 + t321 * t581 - t325 * t78;
t565 = t252 * t434;
t564 = t368 * t215;
t313 = pkin(2) * t529 + pkin(9);
t563 = t321 * t280 + t313 * t490;
t468 = qJDD(4) - t287;
t562 = t468 + t335;
t411 = pkin(5) * t325 + qJ(6) * t321;
t484 = pkin(8) * t499 + t308;
t267 = t484 * qJD(2);
t442 = t322 * t189 - t326 * t431;
t101 = t442 - t475;
t100 = qJDD(5) + t101;
t62 = -pkin(4) * t369 - t75;
t31 = t138 * pkin(5) - t140 * qJ(6) + t62;
t549 = pkin(10) * t100;
t560 = t215 * t31 - t549;
t255 = t319 * t360;
t305 = qJD(2) * t309;
t222 = t319 * t374 + t305;
t339 = -t319 * t481 + (-t327 * t455 - t308) * qJD(2);
t122 = t222 * t530 + t339 * t529;
t234 = t309 + t378;
t248 = qJ(3) * t499 + t484;
t162 = t529 * t234 + t530 * t248;
t150 = pkin(9) * t320 + t162;
t254 = qJD(2) * t426 - t319 * t424;
t501 = t319 * t323;
t462 = qJD(2) * t501;
t435 = pkin(2) * t462;
t165 = pkin(3) * t255 + pkin(9) * t254 + t435;
t259 = t426 - t425;
t260 = t370 * t319;
t306 = pkin(2) * t499;
t427 = -t259 * pkin(3) + pkin(9) * t260 + t306;
t552 = pkin(1) * t319;
t172 = -t427 - t552;
t45 = t326 * t122 - t150 * t480 + t322 * t165 + t172 * t479;
t37 = pkin(10) * t255 + t45;
t93 = t326 * t150 + t322 * t172;
t83 = pkin(10) * t259 + t93;
t161 = t234 * t530 - t529 * t248;
t149 = -t320 * pkin(3) - t161;
t231 = t260 * t322 - t320 * t326;
t224 = t231 * pkin(4);
t232 = t260 * t326 + t320 * t322;
t91 = -t232 * pkin(10) + t149 + t224;
t543 = t321 * t91 + t325 * t83;
t121 = t222 * t529 - t530 * t339;
t159 = qJD(4) * t232 - t254 * t322;
t160 = -qJD(4) * t231 - t254 * t326;
t60 = t159 * pkin(4) - t160 * pkin(10) + t121;
t9 = -qJD(5) * t543 - t321 * t37 + t325 * t60;
t558 = -qJD(5) * t563 + t321 * t78 + t325 * t581;
t557 = t140 ^ 2;
t556 = t215 ^ 2;
t555 = t256 ^ 2;
t329 = qJD(1) ^ 2;
t554 = qJD(2) ^ 2;
t316 = t319 ^ 2;
t553 = pkin(1) * t316;
t551 = pkin(5) * t100;
t548 = pkin(10) * t140;
t491 = t324 * t327;
t492 = t323 * t328;
t275 = -t320 * t491 - t492;
t547 = g(1) * t275;
t546 = g(1) * t324;
t545 = g(3) * t327;
t63 = pkin(10) * t369 + t76;
t131 = t219 * t530 - t228;
t119 = -pkin(3) * t434 - t131;
t70 = t216 * pkin(4) + pkin(10) * t365 + t119;
t28 = t321 * t70 + t325 * t63;
t23 = qJ(6) * t215 + t28;
t542 = t215 * t23;
t541 = t215 * t28;
t540 = t325 * t57;
t539 = t326 * t56;
t538 = t326 * t57;
t537 = qJ(6) * t512 + (-t313 * t478 - qJD(6)) * t326 + (-t313 * t325 + qJ(6)) * t480 + t568;
t450 = t313 * t321 + pkin(5);
t536 = -pkin(5) * t512 - t450 * t480 - t558;
t535 = (-t325 * t480 - t326 * t478) * t313 + t568;
t461 = t313 * t480;
t534 = t321 * t461 + t558;
t410 = pkin(5) * t321 - qJ(6) * t325;
t395 = t313 + t410;
t89 = -t322 * t154 + t164 * t326;
t77 = -pkin(4) * t256 - t89;
t533 = -pkin(5) * t173 + qJ(6) * t174 + (qJD(5) * t411 - qJD(6) * t325) * t322 + t395 * t479 - t77;
t532 = t100 * t494 + t215 * t459;
t531 = -qJD(6) * t321 + t215 * t410 - t76;
t123 = -pkin(4) * t365 + pkin(10) * t216;
t50 = t321 * t123 + t325 * t75;
t528 = qJ(6) * t100;
t526 = t100 * t321;
t525 = t100 * t325;
t523 = t138 * t252;
t522 = t140 * t138;
t520 = t206 * t322;
t518 = t206 * t326;
t209 = t261 * t324 - t328 * t370;
t517 = t209 * t322;
t516 = t209 * t326;
t515 = t215 * t365;
t514 = t365 * t216;
t513 = t365 * t256;
t510 = t256 * t216;
t509 = t256 * t252;
t508 = t259 * t322;
t507 = t259 * t326;
t506 = t280 * t325;
t504 = t313 * t322;
t503 = t313 * t326;
t502 = t316 * t329;
t500 = t319 * t324;
t493 = t323 * t324;
t489 = t326 * t101;
t488 = t327 * t328;
t27 = -t321 * t63 + t325 * t70;
t487 = qJD(6) - t27;
t486 = -t530 * t124 + t529 * t143;
t317 = t323 ^ 2;
t318 = t327 ^ 2;
t483 = t317 - t318;
t476 = t119 * qJD(4);
t474 = qJD(4) - t290;
t466 = t327 * t502;
t465 = t320 * t488;
t457 = t319 * t320 * t329;
t456 = t138 ^ 2 - t557;
t452 = t327 * t473;
t449 = g(2) * t498 - g(3) * t320;
t17 = t562 * pkin(10) - t391;
t68 = -pkin(3) * t431 + t486;
t26 = t101 * pkin(4) + pkin(10) * t559 + t68;
t4 = -t321 * t17 + t325 * t26 - t63 * t477 - t70 * t478;
t444 = t140 * t480 + t539;
t443 = t138 * t480 - t538;
t92 = -t322 * t150 + t172 * t326;
t441 = -t207 * t322 - t326 * t498;
t269 = pkin(2) * t497 - t455;
t440 = -t269 * t324 + t328 * t315;
t439 = t369 * t322;
t437 = t215 * t321;
t432 = t323 * t466;
t429 = t323 * t452;
t208 = t324 * t262 + t281 * t328;
t180 = -t208 * t326 + t322 * t500;
t106 = t180 * t321 + t209 * t325;
t422 = g(1) * t102 - g(2) * t106;
t107 = t180 * t325 - t209 * t321;
t421 = g(1) * t103 - g(2) * t107;
t179 = -t208 * t322 - t326 * t500;
t420 = g(1) * t441 + g(2) * t179;
t419 = g(1) * t206 - g(2) * t209;
t418 = g(1) * t328 + g(2) * t324;
t413 = (qJD(5) * t138 - t56) * pkin(10);
t166 = t232 * t321 - t259 * t325;
t167 = t232 * t325 + t259 * t321;
t412 = -pkin(5) * t166 + qJ(6) * t167;
t80 = qJD(5) * t167 + t160 * t321 - t255 * t325;
t409 = t138 * t80 + t166 * t57;
t408 = t322 * t436 - t326 * t391;
t22 = -pkin(5) * t215 + t487;
t407 = t22 * t325 - t23 * t321;
t406 = t22 * t321 + t23 * t325;
t405 = -t27 * t325 - t28 * t321;
t404 = t27 * t321 - t28 * t325;
t39 = -t321 * t83 + t325 * t91;
t49 = t123 * t325 - t321 * t75;
t401 = t138 * t365 - t525;
t400 = -t269 * t328 - t315 * t324;
t399 = t256 * t434;
t398 = -t322 * t101 + t216 * t575;
t46 = -t322 * t122 - t150 * t479 + t165 * t326 - t172 * t480;
t82 = -pkin(4) * t259 - t92;
t3 = t325 * t17 + t321 * t26 + t70 * t477 - t478 * t63;
t8 = t321 * t60 + t325 * t37 + t91 * t477 - t478 * t83;
t393 = -pkin(4) * t507 - pkin(10) * t508 + t427;
t392 = t215 * t62 - t549;
t388 = -g(1) * t500 + t449;
t387 = t452 + t471;
t108 = t206 * t495 - t207 * t325;
t110 = t208 * t325 + t209 * t495;
t186 = -t259 * t495 - t260 * t325;
t386 = g(1) * t110 + g(2) * t108 + g(3) * t186;
t109 = t206 * t490 + t207 * t321;
t111 = -t208 * t321 + t209 * t490;
t187 = -t259 * t490 + t260 * t321;
t385 = -g(1) * t111 - g(2) * t109 - g(3) * t187;
t384 = g(1) * t179 - g(2) * t441 + g(3) * t231;
t383 = -g(1) * t180 - g(2) * t176 - g(3) * t232;
t382 = -g(1) * t208 + g(2) * t207 + g(3) * t260;
t381 = -g(1) * t209 - g(2) * t206 + g(3) * t259;
t380 = -pkin(3) * t208 - pkin(9) * t209 + t440;
t295 = pkin(2) * t465;
t375 = -pkin(2) * t493 + t206 * pkin(3) + pkin(9) * t207 + t295;
t373 = t138 * t437 - t540;
t372 = -pkin(10) * t540 + t383;
t38 = -pkin(4) * t255 - t46;
t371 = t387 * pkin(8);
t366 = -t207 * pkin(3) + pkin(9) * t206 + t400;
t363 = -0.2e1 * t453 + 0.2e1 * t470;
t362 = pkin(4) * t518 + pkin(10) * t520 + t375;
t81 = t255 * t321 - t232 * t478 + (qJD(5) * t259 + t160) * t325;
t359 = t138 * t81 + t140 * t80 - t166 * t56 + t167 * t57;
t354 = t100 * t166 + t138 * t159 + t215 * t80 + t231 * t57;
t353 = t180 * pkin(4) + pkin(10) * t179 + t380;
t352 = pkin(10) * qJD(5) * t215 - t384;
t351 = g(1) * t106 + g(2) * t102 + g(3) * t166 + t4;
t5 = -pkin(4) * t332 + t57 * pkin(5) + t56 * qJ(6) - t140 * qJD(6) + t436;
t350 = -t352 - t5;
t18 = -t562 * pkin(4) + t436;
t349 = t18 + t352;
t348 = pkin(2) * t275 + t209 * pkin(3) - pkin(9) * t208;
t1 = qJD(6) * t215 + t3 + t528;
t2 = qJDD(6) - t4 - t551;
t347 = qJD(5) * t407 + t1 * t325 + t2 * t321;
t346 = qJD(5) * t405 + t3 * t325 - t4 * t321;
t345 = -pkin(4) * t176 + pkin(10) * t441 + t366;
t344 = -g(1) * t107 - g(2) * t103 - g(3) * t167 + t3;
t343 = pkin(4) * t516 + pkin(10) * t517 + t348;
t342 = -t322 * t573 + t326 * t332;
t341 = t138 * t368 + t496 * t57;
t340 = t140 * t31 + qJDD(6) - t351;
t336 = (-qJD(2) * t361 - t417) * t319;
t334 = t287 + t336;
t333 = -qJDD(4) + t334;
t331 = (t523 - t526) * t322 - t564 + t443;
t330 = t57 - t438;
t292 = -pkin(4) - t411;
t286 = t431 * t320;
t282 = -t306 - t552;
t278 = -pkin(8) * t501 + t309;
t276 = -t320 * t493 + t488;
t274 = -t320 * t492 - t491;
t273 = -t465 + t493;
t266 = -pkin(8) * t462 + t305;
t265 = t484 * qJD(1);
t264 = -pkin(8) * t463 + t304;
t247 = t252 ^ 2;
t244 = t395 * t322;
t226 = -t313 * t495 + t506;
t221 = t326 * t450 - t506;
t220 = -qJ(6) * t326 + t563;
t213 = -t319 * t371 + t389;
t212 = -pkin(8) * t428 + t464;
t170 = t179 * pkin(4);
t168 = t441 * pkin(4);
t84 = pkin(5) * t140 + qJ(6) * t138;
t58 = -t100 * t326 + t215 * t439;
t55 = t100 * t231 + t159 * t215;
t48 = -t412 + t82;
t42 = pkin(5) * t365 - t49;
t41 = -qJ(6) * t365 + t50;
t33 = -pkin(5) * t231 - t39;
t32 = qJ(6) * t231 + t543;
t30 = t140 * t365 + t325 * t556 + t526;
t29 = -t56 + t524;
t21 = -t321 * t56 + t325 * t438;
t14 = t140 * t81 - t167 * t56;
t13 = -t140 * t577 - t494 * t56;
t12 = pkin(5) * t80 - qJ(6) * t81 - qJD(6) * t167 + t38;
t11 = t140 * t512 - t215 * t415 + t444 + t532;
t10 = t100 * t167 + t140 * t159 + t215 * t81 - t231 * t56;
t7 = -pkin(5) * t159 - t9;
t6 = qJ(6) * t159 + qJD(6) * t231 + t8;
t15 = [0, 0, 0, 0, 0, qJDD(1), -g(2) * t328 + t546, t418, 0, 0 (qJDD(1) * t317 + 0.2e1 * t429) * t316, 0.2e1 * (t323 * t470 - t473 * t483) * t316 (t323 * qJDD(2) + 0.2e1 * t320 * t387 + t327 * t554) * t319 (qJDD(1) * t318 - 0.2e1 * t429) * t316 (t327 * qJDD(2) + t320 * t363 - t323 * t554) * t319, t286, -g(1) * t274 - g(2) * t276 + t213 * t320 - t267 * t434 + t278 * t431 + t363 * t553, -g(1) * t273 - g(2) * t275 - t212 * t320 - t266 * t434 - 0.2e1 * t387 * t553 - t431 * t484 ((-t264 * qJD(2) + qJDD(1) * t484 + t212 + (-qJD(2) * t278 + t266) * qJD(1)) * t327 + (-t265 * qJD(2) - qJDD(1) * t278 - t213) * t323 - t418) * t319, t212 * t484 + t265 * t266 + t213 * t278 - t264 * t267 + t316 * qJDD(1) * pkin(1) ^ 2 - g(1) * (-pkin(1) * t324 + pkin(8) * t498) - g(2) * (pkin(1) * t328 + pkin(8) * t500) t189 * t260 - t254 * t256, -t188 * t260 - t189 * t259 + t252 * t254 - t255 * t256, t189 * t320 - t254 * t434 + t260 * t431, t188 * t259 + t252 * t255, -t188 * t320 - t255 * t434 - t259 * t431, t286, g(1) * t207 + g(2) * t208 - t121 * t434 + t161 * t431 + t282 * t188 + t235 * t259 + t252 * t435 + t271 * t255 - t320 * t486, -t122 * t434 - t162 * t431 + t282 * t189 + t235 * t260 - t271 * t254 + t256 * t435 - t74 * t320 + t419, t121 * t256 - t122 * t252 + t131 * t254 - t132 * t255 - t161 * t189 - t162 * t188 - t259 * t74 + t260 * t486 - t319 * t418, -g(1) * t400 - g(2) * t440 - t131 * t121 + t132 * t122 - t161 * t486 + t74 * t162 + t235 * t282 + t271 * t435, -t160 * t365 - t232 * t559, -t232 * t101 + t159 * t365 - t160 * t216 + t231 * t559, t160 * t369 + t232 * t332 - t255 * t365 - t259 * t559, t101 * t231 + t159 * t216, -t159 * t474 - t231 * t468 - t101 * t259 - t216 * t255 + (-t231 * t417 + (-t159 * t447 - t231 * t360) * qJD(1)) * t319, t468 * t259 + t474 * t255 + (t259 * t417 + (t255 * t447 + t259 * t360) * qJD(1)) * t319, g(1) * t176 - g(2) * t180 + t149 * t101 + t119 * t159 + t121 * t216 + t68 * t231 + t75 * t255 - t259 * t436 + t332 * t92 + t369 * t46, t119 * t160 - t121 * t365 - t149 * t559 + t68 * t232 - t76 * t255 + t259 * t391 + t333 * t93 - t369 * t45 + t420, -t93 * t101 - t76 * t159 - t75 * t160 - t45 * t216 + t231 * t391 + t232 * t436 + t365 * t46 + t559 * t92 - t419, -g(1) * t366 - g(2) * t380 + t119 * t121 + t68 * t149 - t391 * t93 - t436 * t92 + t76 * t45 + t75 * t46, t14, -t359, t10, t409, -t354, t55, t100 * t39 + t138 * t38 + t159 * t27 + t166 * t18 + t215 * t9 + t231 * t4 + t57 * t82 + t62 * t80 + t421, -t100 * t543 + t140 * t38 - t159 * t28 + t167 * t18 - t215 * t8 - t231 * t3 - t56 * t82 + t62 * t81 - t422, -t138 * t8 - t140 * t9 - t166 * t3 - t167 * t4 - t27 * t81 - t28 * t80 + t39 * t56 - t543 * t57 - t420, -g(1) * t345 - g(2) * t353 + t18 * t82 + t27 * t9 + t28 * t8 + t3 * t543 + t62 * t38 + t4 * t39, t14, t10, t359, t55, t354, t409, -t100 * t33 + t12 * t138 - t159 * t22 + t166 * t5 - t2 * t231 - t215 * t7 + t31 * t80 + t48 * t57 + t421, -t1 * t166 - t138 * t6 + t140 * t7 + t167 * t2 + t22 * t81 - t23 * t80 - t32 * t57 - t33 * t56 - t420, t1 * t231 + t100 * t32 - t12 * t140 + t159 * t23 - t167 * t5 + t215 * t6 - t31 * t81 + t48 * t56 + t422, t1 * t32 + t23 * t6 + t5 * t48 + t31 * t12 + t2 * t33 + t22 * t7 - g(1) * (-pkin(5) * t103 - qJ(6) * t102 + t345) - g(2) * (pkin(5) * t107 + qJ(6) * t106 + t353); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t432, t483 * t502, t319 * t471 - t327 * t457, t432, t323 * t457 + t451, t431, t303 + t265 * t434 - t547 + g(2) * t273 + (-t454 + t502) * t323 * pkin(1) + (-t371 - t545) * t319, pkin(1) * t466 + t264 * t434 + g(1) * t276 - g(2) * t274 + (pkin(8) * t473 + g(3)) * t501 - t464, 0, 0, t509, -t247 + t555, t189 + t565, -t509, t399 + t334, t431, t153 * t434 - t271 * t256 + (-t252 * t463 + t431 * t530) * pkin(2) + t381 - t486, t154 * t434 + t271 * t252 + (-t256 * t463 - t431 * t529) * pkin(2) + t382 - t74 (t132 - t153) * t256 + (-t131 + t154) * t252 + (-t188 * t529 - t189 * t530) * pkin(2), -g(2) * t295 + t131 * t153 - t132 * t154 + (t74 * t529 - t486 * t530 - t547 + g(2) * t493 + (-t271 * t482 - t545) * t319) * pkin(2), -t377 * t322 + (t322 * t379 - t365 * t369) * t326, t398 + t572, t562 * t322 + t513 + t579, t216 * t439 - t489, t342 + t510, -t369 * t256, -g(1) * t516 - g(2) * t518 + g(3) * t507 + t314 * t101 + t119 * t512 - t153 * t216 - t75 * t256 + t322 * t476 - t68 * t326 - t332 * t504 - t369 * t89 - t503 * t561, g(1) * t517 + g(2) * t520 - g(3) * t508 + t119 * t511 + t153 * t365 + t76 * t256 - t314 * t559 + t68 * t322 + t326 * t476 + t333 * t503 + t369 * t90 + t504 * t561, -t89 * t365 - t313 * t489 - t559 * t504 - t475 * t503 - t382 + t408 + (-t480 - t512) * t76 + t575 * t75 + (t461 + t90) * t216, t68 * t314 - t76 * t90 - t75 * t89 - t119 * t153 - g(1) * t348 - g(2) * t375 - g(3) * t427 + ((-t322 * t76 - t326 * t75) * qJD(4) + t408) * t313, t13, t582, t11, t341, t538 - t416 * t215 + (-t138 * t369 - t215 * t477 - t526) * t322, t58, t100 * t226 - t138 * t77 - t173 * t62 + t534 * t215 + (-t4 + (t138 * t313 + t321 * t62) * qJD(4)) * t326 + (t18 * t321 + t27 * t369 + t313 * t57 + t477 * t62) * t322 + t385, -t100 * t563 - t140 * t77 - t174 * t62 - t535 * t215 + (t3 + (t140 * t313 + t325 * t62) * qJD(4)) * t326 + (t18 * t325 - t28 * t369 - t313 * t56 - t478 * t62) * t322 + t386, t173 * t28 + t174 * t27 + t226 * t56 - t563 * t57 - t534 * t140 - t535 * t138 + t405 * t479 + (qJD(5) * t404 - t3 * t321 - t325 * t4 + t381) * t322, t3 * t563 + t4 * t226 - t62 * t77 - g(1) * t343 - g(2) * t362 - g(3) * t393 + (t18 * t322 + t479 * t62) * t313 + t535 * t28 + t534 * t27, t13, t11, -t582, t58 (t523 + t526) * t322 + t564 + t443, t341, -t100 * t221 + t2 * t326 + t244 * t57 + t416 * t31 - t536 * t215 + t533 * t138 + (-t22 * t369 + t31 * t477 + t321 * t5) * t322 + t385, t173 * t23 - t174 * t22 - t220 * t57 - t221 * t56 + t536 * t140 - t537 * t138 + t407 * t479 + (-qJD(5) * t406 - t1 * t321 + t2 * t325 + t381) * t322, -t1 * t326 + t100 * t220 + t244 * t56 + (t174 - t459) * t31 + t537 * t215 - t533 * t140 + (t23 * t369 + t31 * t478 - t325 * t5) * t322 - t386, t1 * t220 + t5 * t244 + t2 * t221 - g(1) * (pkin(5) * t111 + qJ(6) * t110 + t343) - g(2) * (pkin(5) * t109 + qJ(6) * t108 + t362) - g(3) * (pkin(5) * t187 + qJ(6) * t186 + t393) + t533 * t31 + t537 * t23 + t536 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399 + t188, t189 - t565, -t247 - t555, t131 * t256 + t132 * t252 + (-t414 - t546) * t319 + t449 + t469, 0, 0, 0, 0, 0, 0, t342 - t510, t513 - t579 + (-t468 + t336) * t322, t398 - t572, -t119 * t256 + t322 * t578 + t326 * t576 + t388, 0, 0, 0, 0, 0, 0, t331 (t140 * t252 - t525) * t322 + t577 * t215 + t444, t583, t173 * t27 - t174 * t28 + (-qJD(4) * t404 - t18) * t326 + (t369 * t62 + t346) * t322 + t388, 0, 0, 0, 0, 0, 0, t331, t583, -t174 * t215 - t539 + (-t140 * t369 - t215 * t478) * t322 + t532, -t173 * t22 - t174 * t23 + (qJD(4) * t406 - t5) * t326 + (t31 * t369 + t347) * t322 + t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t514, -t216 ^ 2 + t365 ^ 2, t216 * t369 - t559, t514, -t365 * t252 - t442, t332, t119 * t365 + t384 + t576, t119 * t216 - t383 - t578, 0, 0, t21, -t571, t30, t373, -t321 * t556 - t401, t515, -pkin(4) * t57 - t138 * t76 - t215 * t49 + t27 * t365 + t321 * t392 - t325 * t349, pkin(4) * t56 - t140 * t76 + t215 * t50 - t28 * t365 + t321 * t349 + t325 * t392, t138 * t50 + t140 * t49 + (-t216 * t27 + t3 + (-t27 + t548) * qJD(5)) * t325 + (-t4 + t413 - t541) * t321 + t372, -t18 * pkin(4) + g(1) * t170 - g(2) * t168 + g(3) * t224 - t27 * t49 - t28 * t50 - t62 * t76 + (t346 + t383) * pkin(10), t21, t30, t571, t515, t215 * t437 + t401, t373, t531 * t138 + t215 * t42 - t22 * t365 + t292 * t57 + t321 * t560 + t350 * t325, t138 * t41 - t140 * t42 + (t216 * t22 + t1 + (t22 + t548) * qJD(5)) * t325 + (t2 + t413 - t542) * t321 + t372, -t531 * t140 - t215 * t41 + t23 * t365 + t292 * t56 + t350 * t321 - t325 * t560, t5 * t292 - t23 * t41 - t22 * t42 - g(1) * (-t411 * t179 - t170) - g(2) * (t411 * t441 + t168) - g(3) * (-t411 * t231 - t224) + t531 * t31 + (t347 + t383) * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t522, -t456, t29, -t522, -t330, t100, -t140 * t62 + t351 + t541, t138 * t62 + t215 * t27 - t344, 0, 0, t522, t29, t456, t100, t330, -t522, -t138 * t84 - t340 + t541 + 0.2e1 * t551, pkin(5) * t56 - qJ(6) * t57 + (t23 - t28) * t140 + (t22 - t487) * t138, 0.2e1 * t528 - t138 * t31 + t140 * t84 + (0.2e1 * qJD(6) - t27) * t215 + t344, t1 * qJ(6) - t2 * pkin(5) - t31 * t84 - t22 * t28 - g(1) * (-pkin(5) * t106 + qJ(6) * t107) - g(2) * (-pkin(5) * t102 + qJ(6) * t103) - g(3) * t412 + t487 * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t522 - t100, t29, -t556 - t557, t340 - t542 - t551;];
tau_reg  = t15;
