% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRP6_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:14:10
% EndTime: 2019-03-09 12:14:29
% DurationCPUTime: 6.76s
% Computational Cost: add. (9589->453), mult. (26523->770), div. (0->0), fcn. (26184->10), ass. (0->238)
t151 = sin(qJ(4));
t153 = cos(qJ(5));
t150 = sin(qJ(5));
t202 = pkin(5) * t153 + qJ(6) * t150;
t294 = qJD(5) * t202 - t153 * qJD(6);
t301 = t151 * t294;
t146 = t153 ^ 2;
t154 = cos(qJ(4));
t252 = qJD(4) * t154;
t133 = t146 * t252;
t144 = t150 ^ 2;
t233 = t144 * t252;
t106 = t133 + t233;
t251 = qJD(5) * t150;
t148 = sin(pkin(11));
t149 = sin(pkin(6));
t152 = sin(qJ(2));
t155 = cos(qJ(2));
t272 = cos(pkin(11));
t100 = (t148 * t155 + t272 * t152) * t149;
t273 = cos(pkin(6));
t81 = t100 * t151 - t273 * t154;
t237 = t81 * t251;
t82 = t100 * t154 + t273 * t151;
t265 = t149 * t155;
t210 = t272 * t265;
t257 = qJD(2) * t152;
t225 = t149 * t257;
t97 = -qJD(2) * t210 + t148 * t225;
t61 = qJD(4) * t82 - t97 * t151;
t34 = -t153 * t61 + t237;
t300 = pkin(10) * t34;
t235 = pkin(1) * t273;
t137 = t155 * t235;
t219 = t149 * (-pkin(8) - qJ(3));
t299 = t152 * t219 + t137;
t266 = t149 * t152;
t113 = -pkin(8) * t266 + t137;
t259 = t144 - t146;
t255 = qJD(3) * t149;
t298 = t299 * qJD(2) + t155 * t255;
t120 = t259 * qJD(5);
t141 = qJD(5) * t153;
t227 = t151 * t141;
t281 = -t151 * t61 - t81 * t252;
t297 = -t150 * t281 + t81 * t227;
t201 = pkin(5) * t150 - qJ(6) * t153;
t105 = qJD(5) * t201 - t150 * qJD(6);
t119 = -pkin(4) - t202;
t287 = t151 * pkin(10);
t139 = pkin(2) * t148 + pkin(9);
t186 = t139 + t201;
t91 = t186 * t151;
t296 = qJD(4) * (-t119 * t154 + t287) - qJD(5) * t91 - t105 * t151;
t136 = t152 * t235;
t160 = -t152 * t255 + (t155 * t219 - t136) * qJD(2);
t40 = t148 * t298 - t272 * t160;
t142 = qJD(4) * t151;
t62 = -t100 * t142 + (t273 * qJD(4) - t97) * t154;
t156 = t61 * pkin(4) - t62 * pkin(10) + t40;
t216 = pkin(2) * t225;
t98 = qJD(2) * t100;
t173 = pkin(3) * t98 + pkin(9) * t97 + t216;
t41 = t148 * t160 + t272 * t298;
t85 = t273 * pkin(2) + t299;
t114 = pkin(8) * t265 + t136;
t95 = qJ(3) * t265 + t114;
t64 = t148 * t85 + t272 * t95;
t52 = t273 * pkin(9) + t64;
t116 = (-pkin(2) * t155 - pkin(1)) * t149;
t99 = t148 * t266 - t210;
t68 = t99 * pkin(3) - t100 * pkin(9) + t116;
t15 = t142 * t52 - t151 * t173 - t154 * t41 - t68 * t252;
t174 = t98 * pkin(10) - t15;
t63 = -t148 * t95 + t272 * t85;
t51 = -t273 * pkin(3) - t63;
t162 = t81 * pkin(4) - t82 * pkin(10) + t51;
t33 = t151 * t68 + t154 * t52;
t29 = pkin(10) * t99 + t33;
t283 = t150 * t162 + t153 * t29;
t4 = -qJD(5) * t283 - t150 * t174 + t153 * t156;
t67 = t150 * t99 + t153 * t82;
t26 = qJD(5) * t67 + t62 * t150 - t98 * t153;
t27 = t98 * t150 - t82 * t251 + (qJD(5) * t99 + t62) * t153;
t275 = t27 * t153;
t66 = t150 * t82 - t99 * t153;
t295 = qJD(5) * (t150 * t67 + t153 * t66) + t150 * t26 - t275;
t289 = pkin(10) * t154;
t207 = pkin(4) * t151 - t289;
t178 = t207 * qJD(4);
t223 = t150 * t142;
t267 = t139 * t154;
t117 = t153 * t267;
t140 = -t272 * pkin(2) - pkin(3);
t176 = t140 - t287;
t286 = t154 * pkin(4);
t172 = t176 - t286;
t261 = t150 * t172 + t117;
t54 = -qJD(5) * t261 + t139 * t223 + t153 * t178;
t293 = 0.2e1 * qJD(6);
t292 = pkin(10) * t27;
t291 = t61 * pkin(5);
t290 = pkin(4) * t153;
t271 = qJD(6) * t81;
t280 = qJ(6) * t61;
t159 = t153 * t162;
t3 = -qJD(5) * t159 - t150 * t156 - t153 * t174 + t251 * t29;
t1 = t271 - t3 + t280;
t288 = t1 * t153;
t285 = t3 * t153;
t264 = t151 * t153;
t220 = t153 * t252;
t48 = t66 * t220;
t284 = -t26 * t264 - t48;
t282 = t81 * t220 + t61 * t264;
t279 = t150 * t27;
t278 = t151 * t62;
t277 = t153 * t26;
t276 = t154 * t61;
t274 = t27 * t154;
t270 = t139 * t150;
t269 = t139 * t151;
t268 = t139 * t153;
t170 = t153 * t172;
t263 = qJD(5) * t170 + t150 * t178;
t260 = t106 * pkin(10);
t145 = t151 ^ 2;
t258 = -t154 ^ 2 + t145;
t256 = qJD(2) * t155;
t254 = qJD(4) * t150;
t253 = qJD(4) * t153;
t250 = qJD(5) * t151;
t249 = qJD(5) * t154;
t247 = 0.2e1 * t66 * t26;
t37 = 0.2e1 * t81 * t61;
t246 = 0.2e1 * t99 * t98;
t245 = -0.2e1 * pkin(4) * qJD(5);
t244 = -0.2e1 * t273;
t232 = t150 * t252;
t50 = t67 * t227;
t243 = t151 * t279 + t67 * t232 + t50;
t241 = 0.2e1 * qJD(4) * t140;
t240 = pkin(5) * t142;
t239 = pkin(10) * t251;
t238 = pkin(10) * t141;
t236 = t150 * t267;
t143 = t149 ^ 2;
t234 = t143 * t256;
t231 = t139 * t252;
t230 = t139 * t251;
t229 = t150 * t250;
t228 = t150 * t249;
t226 = t153 * t249;
t222 = t150 * t141;
t221 = t151 * t252;
t218 = t66 * t142 - t154 * t26;
t32 = -t151 * t52 + t154 * t68;
t217 = t258 * qJD(4);
t214 = t145 * t222;
t213 = t152 * t234;
t212 = t150 * t220;
t209 = qJD(2) * t149 * t273;
t208 = -t286 - t287;
t7 = qJ(6) * t81 + t283;
t13 = -t150 * t29 + t159;
t8 = -t81 * pkin(5) - t13;
t206 = t150 * t8 + t153 * t7;
t205 = -t150 * t7 + t153 * t8;
t204 = t26 * t67 + t27 * t66;
t203 = t26 * t81 + t61 * t66;
t199 = -t13 * t153 - t150 * t283;
t198 = t13 * t150 - t153 * t283;
t16 = -t68 * t142 - t151 * t41 + t154 * t173 - t52 * t252;
t197 = -t15 * t154 - t16 * t151;
t73 = -qJ(6) * t154 + t261;
t74 = -t153 * t176 + (pkin(5) + t270 + t290) * t154;
t194 = t150 * t74 + t153 * t73;
t193 = -t150 * t73 + t153 * t74;
t78 = t170 - t236;
t192 = -t150 * t261 - t153 * t78;
t191 = t150 * t78 - t153 * t261;
t190 = -t151 * t33 - t154 * t32;
t28 = -pkin(4) * t99 - t32;
t17 = pkin(5) * t66 - qJ(6) * t67 + t28;
t11 = -t98 * pkin(4) - t16;
t5 = t26 * pkin(5) - t27 * qJ(6) - t67 * qJD(6) + t11;
t188 = -t141 * t17 - t5 * t150;
t187 = -t5 * t153 + t17 * t251;
t36 = t142 * t81 - t276;
t184 = -t142 * t82 + t154 * t62;
t183 = t151 * t98 + t252 * t99;
t182 = t11 * t150 + t141 * t28;
t181 = -t11 * t153 + t251 * t28;
t180 = t251 * t66 - t277;
t35 = t141 * t81 + t150 * t61;
t179 = (t150 * t66 + t153 * t67) * pkin(10);
t177 = t229 * t66 + t284;
t175 = t35 * pkin(10);
t108 = t151 * t253 + t228;
t2 = -t291 - t4;
t167 = qJD(5) * t205 + t2 * t150 + t288;
t166 = qJD(5) * t199 - t4 * t150 - t285;
t42 = (-qJD(6) - t230) * t154 + (qJ(6) - t268) * t142 + t263;
t43 = -t240 - t54;
t165 = qJD(5) * t193 + t43 * t150 + t42 * t153;
t53 = t108 * t139 - t263;
t164 = qJD(5) * t192 - t54 * t150 - t53 * t153;
t163 = t66 * t227 + (t151 * t26 + t252 * t66) * t150;
t158 = t218 - t297;
t130 = -0.2e1 * t221;
t129 = -0.2e1 * t222;
t128 = 0.2e1 * t222;
t127 = pkin(10) * t226;
t122 = t146 * t221;
t121 = t144 * t221;
t110 = -t223 + t226;
t109 = t227 + t232;
t107 = -t220 + t229;
t103 = t114 * qJD(2);
t102 = t113 * qJD(2);
t94 = 0.2e1 * t122 - 0.2e1 * t214;
t93 = 0.2e1 * t121 + 0.2e1 * t214;
t89 = t259 * t250 - t212;
t88 = -t150 * t217 + t151 * t226;
t87 = 0.4e1 * t151 * t222 - t133 + t233;
t84 = 0.2e1 * t151 * t228 + 0.2e1 * t253 * t258;
t83 = t120 * t145 - 0.2e1 * t151 * t212;
t80 = 0.2e1 * t121 + 0.2e1 * t122 - 0.2e1 * t221;
t70 = -t142 * t99 + t154 * t98;
t69 = t186 * t252 + t301;
t56 = t67 * t142;
t24 = pkin(10) * t277;
t19 = 0.2e1 * t67 * t27;
t18 = t141 * t67 + t279;
t12 = t67 * t220 + (-t251 * t67 + t275) * t151;
t10 = 0.2e1 * t27 * t81 + 0.2e1 * t61 * t67;
t6 = -t229 * t81 - t274 + t282 + t56;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t213, 0.2e1 * (-t152 ^ 2 + t155 ^ 2) * t143 * qJD(2), 0.2e1 * t155 * t209, -0.2e1 * t213, -0.2e1 * t152 * t209, 0, -0.2e1 * t143 * pkin(1) * t257 - 0.2e1 * t103 * t273, -0.2e1 * pkin(1) * t234 - 0.2e1 * t102 * t273, 0.2e1 * (t102 * t155 + t103 * t152 + (-t113 * t155 - t114 * t152) * qJD(2)) * t149, 0.2e1 * t102 * t114 - 0.2e1 * t103 * t113, -0.2e1 * t100 * t97, -0.2e1 * t100 * t98 + 0.2e1 * t97 * t99, t97 * t244, t246, t98 * t244, 0, 0.2e1 * t116 * t98 + 0.2e1 * t99 * t216 - 0.2e1 * t40 * t273, 0.2e1 * t100 * t216 - 0.2e1 * t116 * t97 - 0.2e1 * t41 * t273, 0.2e1 * t100 * t40 - 0.2e1 * t41 * t99 + 0.2e1 * t63 * t97 - 0.2e1 * t64 * t98, 0.2e1 * t116 * t216 - 0.2e1 * t40 * t63 + 0.2e1 * t41 * t64, 0.2e1 * t82 * t62, -0.2e1 * t61 * t82 - 0.2e1 * t62 * t81, 0.2e1 * t62 * t99 + 0.2e1 * t82 * t98, t37, -0.2e1 * t61 * t99 - 0.2e1 * t81 * t98, t246, 0.2e1 * t16 * t99 + 0.2e1 * t32 * t98 + 0.2e1 * t40 * t81 + 0.2e1 * t51 * t61, 0.2e1 * t15 * t99 - 0.2e1 * t33 * t98 + 0.2e1 * t40 * t82 + 0.2e1 * t51 * t62, 0.2e1 * t15 * t81 - 0.2e1 * t16 * t82 - 0.2e1 * t32 * t62 - 0.2e1 * t33 * t61, -0.2e1 * t15 * t33 + 0.2e1 * t16 * t32 + 0.2e1 * t40 * t51, t19, -0.2e1 * t204, t10, t247, -0.2e1 * t203, t37, 0.2e1 * t11 * t66 + 0.2e1 * t13 * t61 + 0.2e1 * t26 * t28 + 0.2e1 * t4 * t81, 0.2e1 * t11 * t67 + 0.2e1 * t27 * t28 - 0.2e1 * t283 * t61 + 0.2e1 * t3 * t81, -0.2e1 * t13 * t27 - 0.2e1 * t26 * t283 + 0.2e1 * t3 * t66 - 0.2e1 * t4 * t67, 0.2e1 * t11 * t28 + 0.2e1 * t13 * t4 - 0.2e1 * t283 * t3, t19, t10, 0.2e1 * t204, t37, 0.2e1 * t203, t247, 0.2e1 * t17 * t26 - 0.2e1 * t2 * t81 + 0.2e1 * t5 * t66 - 0.2e1 * t61 * t8, -0.2e1 * t1 * t66 + 0.2e1 * t2 * t67 - 0.2e1 * t26 * t7 + 0.2e1 * t27 * t8, 0.2e1 * t1 * t81 - 0.2e1 * t17 * t27 - 0.2e1 * t5 * t67 + 0.2e1 * t61 * t7, 0.2e1 * t1 * t7 + 0.2e1 * t17 * t5 + 0.2e1 * t2 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149 * t256, 0, -t225, 0, -t103, -t102, 0, 0, 0, 0, -t97, 0, -t98, 0, -t40, -t41 (-t148 * t98 + t272 * t97) * pkin(2) (t148 * t41 - t272 * t40) * pkin(2), t252 * t82 + t278, t184 + t281, t183, t36, t70, 0, -t98 * t269 + t140 * t61 - t40 * t154 + (t151 * t51 - t99 * t267) * qJD(4), -t98 * t267 + t140 * t62 + t40 * t151 + (t154 * t51 + t99 * t269) * qJD(4) (-t276 + t278) * t139 + ((t151 * t81 + t154 * t82) * t139 + t190) * qJD(4) + t197, t40 * t140 + (qJD(4) * t190 + t197) * t139, t12, t177 - t243, t6, t163 (-t254 * t81 + t26) * t154 + (-qJD(4) * t66 - t35) * t151, t36, t54 * t81 + t78 * t61 + (-t4 + (t139 * t66 + t150 * t28) * qJD(4)) * t154 + (qJD(4) * t13 + t139 * t26 + t182) * t151, t53 * t81 - t261 * t61 + (-t3 + (t139 * t67 + t153 * t28) * qJD(4)) * t154 + (-qJD(4) * t283 + t139 * t27 - t181) * t151, -t261 * t26 - t78 * t27 + t53 * t66 - t54 * t67 + t199 * t252 + (qJD(5) * t198 + t150 * t3 - t153 * t4) * t151, t13 * t54 - t283 * t53 - t3 * t261 + t4 * t78 + (t11 * t151 + t252 * t28) * t139, t12, t6, -t151 * t180 + t243 + t48, t36, t218 + t297, t163, t91 * t26 - t43 * t81 - t74 * t61 + t69 * t66 + (t17 * t254 + t2) * t154 + (-qJD(4) * t8 - t188) * t151, -t73 * t26 + t74 * t27 - t42 * t66 + t43 * t67 + t205 * t252 + (-qJD(5) * t206 - t1 * t150 + t153 * t2) * t151, -t91 * t27 + t42 * t81 + t73 * t61 - t69 * t67 + (-t17 * t253 - t1) * t154 + (qJD(4) * t7 + t187) * t151, t1 * t73 + t17 * t69 + t2 * t74 + t42 * t7 + t43 * t8 + t5 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t221, -0.2e1 * t217, 0, t130, 0, 0, t151 * t241, t154 * t241, 0, 0, t94, 0.2e1 * t83, t84, t93, 0.2e1 * t88, t130, 0.2e1 * t145 * t139 * t141 - 0.2e1 * t54 * t154 + 0.2e1 * (t78 + 0.2e1 * t236) * t142, -0.2e1 * t145 * t230 - 0.2e1 * t53 * t154 + 0.2e1 * (-t261 + 0.2e1 * t117) * t142, 0.2e1 * t192 * t252 + 0.2e1 * (qJD(5) * t191 + t150 * t53 - t153 * t54) * t151, 0.2e1 * t139 ^ 2 * t221 - 0.2e1 * t261 * t53 + 0.2e1 * t54 * t78, t94, t84, -0.2e1 * t83, t130, -0.2e1 * t88, t93, 0.2e1 * (t254 * t91 + t43) * t154 + 0.2e1 * (-qJD(4) * t74 + t141 * t91 + t69 * t150) * t151, 0.2e1 * t193 * t252 + 0.2e1 * (-qJD(5) * t194 - t150 * t42 + t153 * t43) * t151, 0.2e1 * (-t253 * t91 - t42) * t154 + 0.2e1 * (qJD(4) * t73 - t69 * t153 + t251 * t91) * t151, 0.2e1 * t42 * t73 + 0.2e1 * t43 * t74 + 0.2e1 * t69 * t91; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98, -t97, 0, t216, 0, 0, 0, 0, 0, 0, t70, -t183, -t184 + t281, -t15 * t151 + t16 * t154 + (-t151 * t32 + t154 * t33) * qJD(4), 0, 0, 0, 0, 0, 0, t158, t56 + (-t253 * t81 - t27) * t154 + t34 * t151, t50 + (t67 * t252 + (qJD(5) * t66 + t27) * t151) * t150 + t284 (-qJD(4) * t198 - t11) * t154 + (qJD(4) * t28 + t166) * t151, 0, 0, 0, 0, 0, 0, t158, t177 + t243, t274 + (-qJD(4) * t67 - t237) * t151 + t282 (qJD(4) * t206 - t5) * t154 + (qJD(4) * t17 + t167) * t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164 * t151 + (t139 * t258 - t154 * t191) * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(4) * t194 - t69) * t154 + (qJD(4) * t91 + t165) * t151; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80, 0, 0, 0, 0, 0, 0, 0, 0, 0, t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t62, 0, -t61, t98, t16, t15, 0, 0, t18, -t295, t35, t180, -t34, 0, -pkin(4) * t26 - t175 + t181, -pkin(4) * t27 + t182 + t300, -t285 - t24 + (-t4 + t292) * t150 + (t179 + t199) * qJD(5), -t11 * pkin(4) + pkin(10) * t166, t18, t35, t295, 0, t34, t180, t105 * t66 + t119 * t26 - t175 + t187, t288 - t24 + (t2 + t292) * t150 + (t179 + t205) * qJD(5), -t105 * t67 - t119 * t27 + t188 - t300, pkin(10) * t167 + t17 * t105 + t5 * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, 0, -t142, 0, -t231, t139 * t142, 0, 0, -t89, -t87, -t110, t89, t108, 0, t127 + (t270 - t290) * t250 + (t150 * t208 - t117) * qJD(4) (t139 * t264 + t150 * t207) * qJD(5) + (t153 * t208 + t236) * qJD(4), t164, -pkin(4) * t231 + pkin(10) * t164, -t89, -t110, t87, 0, -t108, t89, t127 + (t119 * t250 - t69) * t153 - t296 * t150, t165 (-t69 + (t119 * t151 + t289) * qJD(5)) * t150 + t296 * t153, pkin(10) * t165 + t91 * t105 + t69 * t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, -t252, 0, 0, 0, 0, 0, 0, 0, 0, -t108, -t110, t106, -pkin(4) * t142 + t260, 0, 0, 0, 0, 0, 0, -t108, t106, t110, -t105 * t154 + t119 * t142 + t260; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, -0.2e1 * t120, 0, t129, 0, 0, t150 * t245, t153 * t245, 0, 0, t128, 0, 0.2e1 * t120, 0, 0, t129, -0.2e1 * t105 * t153 + 0.2e1 * t119 * t251, 0, -0.2e1 * t105 * t150 - 0.2e1 * t119 * t141, 0.2e1 * t119 * t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, 0, -t26, t61, t4, t3, 0, 0, 0, t27, 0, t61, t26, 0, t4 + 0.2e1 * t291, -pkin(5) * t27 - qJ(6) * t26 - qJD(6) * t66, 0.2e1 * t271 - t3 + 0.2e1 * t280, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107, 0, -t109, t142, t54, t53, 0, 0, 0, -t107, 0, t142, t109, 0, t54 + 0.2e1 * t240 (-pkin(5) * t252 - qJ(6) * t250) * t153 + (-qJ(6) * t252 + (pkin(5) * qJD(5) - qJD(6)) * t151) * t150 (-0.2e1 * qJD(6) - t230) * t154 + (0.2e1 * qJ(6) - t268) * t142 + t263, -pkin(5) * t43 + qJ(6) * t42 + qJD(6) * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t109, t107, 0, 0, 0, 0, 0, 0, 0, 0, -t109, 0, -t107, -t201 * t252 - t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141, 0, -t251, 0, -t238, t239, 0, 0, 0, t141, 0, 0, t251, 0, -t238, -t294, -t239, -t294 * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t293, qJ(6) * t293; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, t27, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, -t107, 0, t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141, 0, t238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t9;
