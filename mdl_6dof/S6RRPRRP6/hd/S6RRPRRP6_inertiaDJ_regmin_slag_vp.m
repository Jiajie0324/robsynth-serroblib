% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x30]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:15
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP6_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP6_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP6_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRPRRP6_inertiaDJ_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:14:10
% EndTime: 2019-03-09 12:14:23
% DurationCPUTime: 3.99s
% Computational Cost: add. (6436->358), mult. (17727->617), div. (0->0), fcn. (17523->10), ass. (0->179)
t120 = sin(qJ(4));
t122 = cos(qJ(5));
t119 = sin(qJ(5));
t146 = t122 * pkin(5) + t119 * qJ(6);
t224 = t146 * qJD(5) - t122 * qJD(6);
t230 = t224 * t120;
t229 = -0.4e1 * t120;
t118 = cos(pkin(6));
t123 = cos(qJ(4));
t115 = sin(pkin(11));
t116 = sin(pkin(6));
t117 = cos(pkin(11));
t121 = sin(qJ(2));
t124 = cos(qJ(2));
t80 = (t115 * t124 + t117 * t121) * t116;
t140 = t118 * t123 - t80 * t120;
t186 = qJD(5) * t119;
t175 = t140 * t186;
t69 = t118 * t120 + t80 * t123;
t191 = qJD(2) * t124;
t164 = t116 * t191;
t192 = qJD(2) * t121;
t165 = t116 * t192;
t78 = -t115 * t165 + t117 * t164;
t48 = t69 * qJD(4) + t78 * t120;
t132 = -t122 * t48 - t175;
t228 = pkin(10) * t132;
t110 = t116 ^ 2;
t227 = t110 * t192;
t199 = t116 * t121;
t221 = pkin(1) * t118;
t181 = t121 * t221;
t198 = t116 * t124;
t218 = pkin(8) + qJ(3);
t75 = t218 * t198 + t181;
t226 = -t75 * qJD(2) - qJD(3) * t199;
t111 = t119 ^ 2;
t113 = t122 ^ 2;
t155 = (t111 - t113) * qJD(5);
t219 = t120 * pkin(10);
t107 = t115 * pkin(2) + pkin(9);
t145 = pkin(5) * t119 - qJ(6) * t122;
t137 = t107 + t145;
t74 = t137 * t120;
t85 = t145 * qJD(5) - t119 * qJD(6);
t97 = -pkin(4) - t146;
t225 = qJD(4) * (-t123 * t97 + t219) - qJD(5) * t74 - t120 * t85;
t101 = t191 * t221;
t157 = t218 * t121;
t63 = t101 + (-qJD(2) * t157 + qJD(3) * t124) * t116;
t30 = t115 * t63 - t117 * t226;
t49 = t140 * qJD(4) + t78 * t123;
t18 = t48 * pkin(4) - t49 * pkin(10) + t30;
t70 = (pkin(1) * t124 + pkin(2)) * t118 - t116 * t157;
t51 = t115 * t70 + t117 * t75;
t40 = t118 * pkin(9) + t51;
t173 = -pkin(2) * t124 - pkin(1);
t79 = t115 * t199 - t117 * t198;
t56 = t79 * pkin(3) - t80 * pkin(9) + t173 * t116;
t215 = t120 * t56 + t123 * t40;
t24 = t79 * pkin(10) + t215;
t50 = -t115 * t75 + t117 * t70;
t39 = -t118 * pkin(3) - t50;
t27 = -pkin(4) * t140 - t69 * pkin(10) + t39;
t216 = t119 * t27 + t122 * t24;
t187 = qJD(4) * t123;
t189 = qJD(4) * t120;
t31 = t226 * t115 + t117 * t63;
t100 = pkin(2) * t165;
t77 = qJD(2) * t80;
t53 = t77 * pkin(3) - t78 * pkin(9) + t100;
t13 = -t120 * t53 - t123 * t31 - t56 * t187 + t40 * t189;
t9 = t77 * pkin(10) - t13;
t4 = -qJD(5) * t216 - t119 * t9 + t122 * t18;
t162 = t119 * t189;
t108 = -t117 * pkin(2) - pkin(3);
t151 = -t123 * pkin(4) - t219;
t92 = t108 + t151;
t200 = t107 * t123;
t94 = t122 * t200;
t211 = t119 * t92 + t94;
t220 = pkin(10) * t123;
t150 = pkin(4) * t120 - t220;
t95 = t150 * qJD(4);
t42 = -qJD(5) * t211 + t107 * t162 + t122 * t95;
t223 = 0.2e1 * qJD(6);
t222 = t48 * pkin(5);
t159 = t122 * t187;
t196 = t120 * t122;
t55 = t79 * t119 + t69 * t122;
t21 = qJD(5) * t55 + t49 * t119 - t77 * t122;
t54 = t69 * t119 - t79 * t122;
t217 = -t54 * t159 - t21 * t196;
t214 = -t140 * t159 + t48 * t196;
t109 = qJD(5) * t122;
t213 = t92 * t109 + t119 * t95;
t210 = t120 * t48;
t209 = t120 * t97;
t208 = t122 * t92;
t22 = t77 * t119 - t69 * t186 + (qJD(5) * t79 + t49) * t122;
t207 = t22 * t119;
t206 = t22 * t122;
t205 = t22 * t123;
t204 = t48 * qJ(6);
t203 = qJD(5) * t54;
t202 = t107 * t119;
t201 = t107 * t122;
t197 = t120 * t107;
t195 = t140 * qJD(6);
t112 = t120 ^ 2;
t193 = -t123 ^ 2 + t112;
t190 = qJD(4) * t119;
t188 = qJD(4) * t122;
t185 = qJD(5) * t120;
t184 = qJD(5) * t123;
t182 = -0.2e1 * pkin(4) * qJD(5);
t180 = 0.2e1 * qJD(4) * t108;
t179 = pkin(5) * t189;
t178 = pkin(10) * t186;
t177 = pkin(10) * t109;
t176 = t55 * t187;
t174 = t119 * t200;
t172 = t110 * t191;
t171 = t107 * t186;
t170 = t119 * t185;
t169 = t119 * t184;
t168 = t120 * t109;
t167 = t122 * t184;
t166 = t111 * t187;
t161 = t119 * t109;
t160 = t120 * t187;
t156 = -t120 * t40 + t123 * t56;
t154 = t193 * qJD(4);
t153 = t55 * t168;
t152 = t119 * t159;
t6 = -qJ(6) * t140 + t216;
t11 = -t119 * t24 + t122 * t27;
t7 = pkin(5) * t140 - t11;
t149 = t119 * t7 + t122 * t6;
t148 = -t119 * t6 + t122 * t7;
t61 = -t123 * qJ(6) + t211;
t62 = -t208 + (pkin(5) + t202) * t123;
t143 = t119 * t62 + t122 * t61;
t142 = -t119 * t61 + t122 * t62;
t14 = -t120 * t31 + t123 * t53 - t40 * t187 - t56 * t189;
t23 = -t79 * pkin(4) - t156;
t15 = t54 * pkin(5) - t55 * qJ(6) + t23;
t10 = -t77 * pkin(4) - t14;
t5 = t21 * pkin(5) - t22 * qJ(6) - t55 * qJD(6) + t10;
t139 = -t15 * t109 - t5 * t119;
t138 = -t5 * t122 + t15 * t186;
t136 = t120 * t77 + t79 * t187;
t135 = t10 * t119 + t23 * t109;
t134 = -t10 * t122 + t23 * t186;
t133 = -t109 * t140 + t119 * t48;
t3 = -t27 * t109 - t119 * t18 - t122 * t9 + t24 * t186;
t130 = t133 * pkin(10);
t87 = t120 * t188 + t169;
t1 = -t195 - t3 + t204;
t2 = -t222 - t4;
t127 = t148 * qJD(5) + t1 * t122 + t2 * t119;
t32 = (-qJD(6) - t171) * t123 + (qJ(6) - t201) * t189 + t213;
t33 = -t179 - t42;
t126 = t142 * qJD(5) + t33 * t119 + t32 * t122;
t125 = t140 * t168 - t123 * t21 + t54 * t189 + (t140 * t187 - t210) * t119;
t104 = t113 * t187;
t102 = pkin(10) * t167;
t98 = t113 * t160;
t89 = -t162 + t167;
t88 = t119 * t187 + t168;
t86 = -t159 + t170;
t83 = (-pkin(8) * t198 - t181) * qJD(2);
t82 = pkin(8) * t165 - t101;
t66 = -t174 + t208;
t58 = t123 * t77 - t79 * t189;
t57 = t137 * t187 + t230;
t43 = t55 * t189;
t41 = t87 * t107 - t213;
t8 = [0, 0, 0, 0.2e1 * t121 * t172, 0.2e1 * (-t121 ^ 2 + t124 ^ 2) * t110 * qJD(2), 0.2e1 * t118 * t164, -0.2e1 * t118 * t165, 0, -0.2e1 * pkin(1) * t227 + 0.2e1 * t83 * t118, -0.2e1 * pkin(1) * t172 + 0.2e1 * t82 * t118, 0.2e1 * t30 * t80 - 0.2e1 * t31 * t79 - 0.2e1 * t50 * t78 - 0.2e1 * t51 * t77, 0.2e1 * t173 * pkin(2) * t227 - 0.2e1 * t50 * t30 + 0.2e1 * t51 * t31, 0.2e1 * t69 * t49, 0.2e1 * t140 * t49 - 0.2e1 * t69 * t48, 0.2e1 * t49 * t79 + 0.2e1 * t69 * t77, 0.2e1 * t140 * t77 - 0.2e1 * t48 * t79, 0.2e1 * t79 * t77, 0.2e1 * t14 * t79 - 0.2e1 * t140 * t30 + 0.2e1 * t156 * t77 + 0.2e1 * t39 * t48, 0.2e1 * t13 * t79 - 0.2e1 * t215 * t77 + 0.2e1 * t30 * t69 + 0.2e1 * t39 * t49, 0.2e1 * t55 * t22, -0.2e1 * t55 * t21 - 0.2e1 * t22 * t54, -0.2e1 * t140 * t22 + 0.2e1 * t55 * t48, 0.2e1 * t140 * t21 - 0.2e1 * t54 * t48, -0.2e1 * t140 * t48, 0.2e1 * t10 * t54 + 0.2e1 * t11 * t48 - 0.2e1 * t140 * t4 + 0.2e1 * t23 * t21, 0.2e1 * t10 * t55 - 0.2e1 * t140 * t3 - 0.2e1 * t216 * t48 + 0.2e1 * t23 * t22, 0.2e1 * t140 * t2 + 0.2e1 * t15 * t21 - 0.2e1 * t7 * t48 + 0.2e1 * t5 * t54, -0.2e1 * t1 * t54 + 0.2e1 * t2 * t55 - 0.2e1 * t6 * t21 + 0.2e1 * t7 * t22, -0.2e1 * t1 * t140 - 0.2e1 * t15 * t22 + 0.2e1 * t6 * t48 - 0.2e1 * t5 * t55, 0.2e1 * t6 * t1 + 0.2e1 * t15 * t5 + 0.2e1 * t7 * t2; 0, 0, 0, 0, 0, t164, -t165, 0, t83, t82 (-t115 * t77 - t117 * t78) * pkin(2) (t115 * t31 - t117 * t30) * pkin(2), t49 * t120 + t69 * t187, -t210 + t49 * t123 + (-t120 * t69 + t123 * t140) * qJD(4), t136, t58, 0, -t77 * t197 + t108 * t48 - t30 * t123 + (t120 * t39 - t79 * t200) * qJD(4), -t77 * t200 + t108 * t49 + t30 * t120 + (t123 * t39 + t79 * t197) * qJD(4), t55 * t159 + (-t55 * t186 + t206) * t120, -t153 + (-t176 + (-t22 + t203) * t120) * t119 + t217, t140 * t170 - t205 + t214 + t43 (t140 * t190 + t21) * t123 + (-qJD(4) * t54 - t133) * t120, -t48 * t123 - t140 * t189, -t42 * t140 + t66 * t48 + (-t4 + (t107 * t54 + t119 * t23) * qJD(4)) * t123 + (qJD(4) * t11 + t107 * t21 + t135) * t120, -t41 * t140 - t211 * t48 + (-t3 + (t107 * t55 + t122 * t23) * qJD(4)) * t123 + (-qJD(4) * t216 + t107 * t22 - t134) * t120, t74 * t21 + t33 * t140 - t62 * t48 + t57 * t54 + (t15 * t190 + t2) * t123 + (-qJD(4) * t7 - t139) * t120, -t61 * t21 + t62 * t22 - t32 * t54 + t33 * t55 + t148 * t187 + (-qJD(5) * t149 - t1 * t119 + t122 * t2) * t120, -t74 * t22 - t32 * t140 + t61 * t48 - t57 * t55 + (-t15 * t188 - t1) * t123 + (qJD(4) * t6 + t138) * t120, t1 * t61 + t15 * t57 + t2 * t62 + t6 * t32 + t7 * t33 + t5 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t160, -0.2e1 * t154, 0, 0, 0, t120 * t180, t123 * t180, -0.2e1 * t112 * t161 + 0.2e1 * t98, 0.2e1 * t112 * t155 + t152 * t229, 0.2e1 * t120 * t169 + 0.2e1 * t193 * t188, -0.2e1 * t119 * t154 + 0.2e1 * t120 * t167, -0.2e1 * t160, 0.2e1 * t112 * t107 * t109 - 0.2e1 * t42 * t123 + 0.2e1 * (t66 + 0.2e1 * t174) * t189, -0.2e1 * t112 * t171 - 0.2e1 * t41 * t123 + 0.2e1 * (-t211 + 0.2e1 * t94) * t189, 0.2e1 * (t190 * t74 + t33) * t123 + 0.2e1 * (-qJD(4) * t62 + t109 * t74 + t57 * t119) * t120, 0.2e1 * t142 * t187 + 0.2e1 * (-qJD(5) * t143 - t119 * t32 + t122 * t33) * t120, 0.2e1 * (-t188 * t74 - t32) * t123 + 0.2e1 * (qJD(4) * t61 - t57 * t122 + t186 * t74) * t120, 0.2e1 * t61 * t32 + 0.2e1 * t62 * t33 + 0.2e1 * t74 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, 0, 0, 0, 0, 0, t58, -t136, 0, 0, 0, 0, 0, t125, t43 + (t140 * t188 - t22) * t123 + t132 * t120, t125, t153 + (t176 + (t22 + t203) * t120) * t119 + t217, t205 + (-qJD(4) * t55 + t175) * t120 + t214 (qJD(4) * t149 - t5) * t123 + (qJD(4) * t15 + t127) * t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(4) * t143 - t57) * t123 + (qJD(4) * t74 + t126) * t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t98 + 0.2e1 * (t111 - 0.1e1) * t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, -t48, t77, t14, t13, t55 * t109 + t207, -t119 * t21 + t206 + (-t119 * t55 - t122 * t54) * qJD(5), t133, -t132, 0, -pkin(4) * t21 - t130 + t134, -pkin(4) * t22 + t135 + t228, t97 * t21 + t85 * t54 - t130 + t138 (t207 - t122 * t21 + (t119 * t54 + t122 * t55) * qJD(5)) * pkin(10) + t127, -t97 * t22 - t85 * t55 + t139 - t228, pkin(10) * t127 + t15 * t85 + t5 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t187, -t189, 0, -t107 * t187, t107 * t189, -t120 * t155 + t152, t161 * t229 + t104 - t166, -t89, t87, 0, t102 + (-pkin(4) * t122 + t202) * t185 + (t119 * t151 - t94) * qJD(4) (t107 * t196 + t119 * t150) * qJD(5) + (t122 * t151 + t174) * qJD(4), t102 + (t185 * t97 - t57) * t122 - t225 * t119, t126 (-t57 + (t209 + t220) * qJD(5)) * t119 + t225 * t122, pkin(10) * t126 + t57 * t97 + t74 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, -t187, 0, 0, 0, 0, 0, -t87, -t89, -t87, t104 + t166, t89, -t123 * t85 + (t209 + (t111 + t113) * t220) * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t161, -0.2e1 * t155, 0, 0, 0, t119 * t182, t122 * t182, -0.2e1 * t85 * t122 + 0.2e1 * t186 * t97, 0, -0.2e1 * t109 * t97 - 0.2e1 * t85 * t119, 0.2e1 * t97 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22, -t21, t48, t4, t3, t4 + 0.2e1 * t222, -t22 * pkin(5) - t21 * qJ(6) - t54 * qJD(6), -0.2e1 * t195 - t3 + 0.2e1 * t204, -t2 * pkin(5) + t1 * qJ(6) + t6 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t86, -t88, t189, t42, t41, t42 + 0.2e1 * t179 (-pkin(5) * t187 - qJ(6) * t185) * t122 + (-qJ(6) * t187 + (pkin(5) * qJD(5) - qJD(6)) * t120) * t119 (-0.2e1 * qJD(6) - t171) * t123 + (0.2e1 * qJ(6) - t201) * t189 + t213, -t33 * pkin(5) + t32 * qJ(6) + t61 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t88, t86, -t88, 0, -t86, -t145 * t187 - t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, -t186, 0, -t177, t178, -t177, -t224, -t178, -t224 * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, qJ(6) * t223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t48, t22, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, -t86, 0, t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, 0, t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t8;
