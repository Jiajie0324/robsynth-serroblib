% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRRRR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 04:30
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRRRR9_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR9_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR9_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR9_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR9_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRR9_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 04:29:47
% EndTime: 2019-05-06 04:30:17
% DurationCPUTime: 30.96s
% Computational Cost: add. (312447->874), mult. (623687->1124), div. (0->0), fcn. (434572->10), ass. (0->567)
t1412 = sin(qJ(6));
t1414 = sin(qJ(4));
t1419 = cos(qJ(4));
t1420 = cos(qJ(3));
t1550 = qJD(1) * t1420;
t1372 = -t1419 * qJD(3) + t1414 * t1550;
t1374 = qJD(3) * t1414 + t1419 * t1550;
t1413 = sin(qJ(5));
t1418 = cos(qJ(5));
t1324 = t1418 * t1372 + t1374 * t1413;
t1326 = -t1372 * t1413 + t1374 * t1418;
t1417 = cos(qJ(6));
t1269 = t1417 * t1324 + t1326 * t1412;
t1271 = -t1324 * t1412 + t1326 * t1417;
t1200 = t1271 * t1269;
t1502 = qJD(3) * t1550;
t1415 = sin(qJ(3));
t1512 = t1415 * qJDD(1);
t1377 = -t1502 - t1512;
t1370 = qJDD(4) - t1377;
t1366 = qJDD(5) + t1370;
t1363 = qJDD(6) + t1366;
t1567 = -t1200 + t1363;
t1576 = t1412 * t1567;
t1279 = t1326 * t1324;
t1566 = -t1279 + t1366;
t1575 = t1413 * t1566;
t1334 = t1374 * t1372;
t1564 = -t1334 + t1370;
t1574 = t1414 * t1564;
t1573 = t1417 * t1567;
t1572 = t1418 * t1566;
t1571 = t1419 * t1564;
t1549 = qJD(2) * qJD(1);
t1407 = 0.2e1 * t1549;
t1416 = sin(qJ(1));
t1421 = cos(qJ(1));
t1390 = g(1) * t1421 + g(2) * t1416;
t1409 = qJDD(1) * qJ(2);
t1453 = t1390 - t1409;
t1403 = t1420 * qJDD(1);
t1404 = t1415 * qJD(1);
t1503 = qJD(3) * t1404;
t1378 = t1403 - t1503;
t1464 = -t1378 + t1503;
t1465 = -t1377 + t1502;
t1423 = qJD(1) ^ 2;
t1562 = pkin(7) + pkin(1);
t1569 = t1423 * t1562;
t1284 = pkin(3) * t1465 + pkin(8) * t1464 + t1407 - t1453 - t1569;
t1389 = g(1) * t1416 - t1421 * g(2);
t1466 = qJDD(2) - t1389;
t1438 = -qJ(2) * t1423 + t1466;
t1353 = -qJDD(1) * t1562 + t1438;
t1331 = t1420 * g(3) - t1415 * t1353;
t1422 = qJD(3) ^ 2;
t1555 = pkin(8) * t1420;
t1558 = pkin(3) * t1415;
t1449 = t1423 * (-t1555 + t1558);
t1303 = -t1422 * pkin(3) + qJDD(3) * pkin(8) - t1415 * t1449 - t1331;
t1225 = -t1419 * t1284 + t1303 * t1414;
t1226 = t1414 * t1284 + t1419 * t1303;
t1158 = -t1225 * t1419 + t1226 * t1414;
t1511 = pkin(3) * t1420 + pkin(2);
t1570 = t1158 * (pkin(8) * t1415 + t1511);
t1457 = -qJDD(3) * t1414 - t1378 * t1419;
t1320 = -qJD(4) * t1372 - t1457;
t1483 = t1419 * qJDD(3) - t1414 * t1378;
t1446 = qJD(4) * t1374 - t1483;
t1487 = t1320 * t1413 + t1418 * t1446;
t1233 = -qJD(5) * t1326 - t1487;
t1234 = -t1324 * qJD(5) + t1418 * t1320 - t1413 * t1446;
t1137 = -qJD(6) * t1269 + t1233 * t1412 + t1234 * t1417;
t1399 = t1404 + qJD(4);
t1392 = qJD(5) + t1399;
t1386 = qJD(6) + t1392;
t1251 = t1386 * t1269;
t1568 = t1137 - t1251;
t1159 = t1414 * t1225 + t1419 * t1226;
t1309 = t1392 * t1324;
t1565 = -t1309 + t1234;
t1195 = t1309 + t1234;
t1354 = t1399 * t1372;
t1295 = t1320 + t1354;
t1330 = t1415 * g(3) + t1420 * t1353;
t1282 = t1420 * t1330 - t1331 * t1415;
t1293 = (-qJD(4) + t1399) * t1374 + t1483;
t1229 = t1293 * t1414 - t1295 * t1419;
t1115 = -pkin(8) * t1229 - t1158;
t1563 = t1115 * t1415 - t1229 * t1511;
t1488 = -t1417 * t1233 + t1234 * t1412;
t1109 = (qJD(6) - t1386) * t1271 + t1488;
t1192 = (qJD(5) - t1392) * t1326 + t1487;
t1267 = t1269 ^ 2;
t1268 = t1271 ^ 2;
t1322 = t1324 ^ 2;
t1323 = t1326 ^ 2;
t1368 = t1372 ^ 2;
t1369 = t1374 ^ 2;
t1383 = t1386 ^ 2;
t1391 = t1392 ^ 2;
t1397 = t1399 ^ 2;
t1561 = pkin(2) * t1282;
t1426 = t1453 - 0.2e1 * t1549;
t1348 = t1426 + t1569;
t1560 = pkin(2) * t1348;
t1410 = t1415 ^ 2;
t1411 = t1420 ^ 2;
t1513 = t1410 + t1411;
t1380 = t1513 * qJDD(1);
t1559 = pkin(2) * t1380;
t1163 = pkin(4) * t1564 - pkin(9) * t1295 - t1225;
t1470 = pkin(4) * t1399 - pkin(9) * t1374;
t1169 = -t1368 * pkin(4) - pkin(9) * t1446 - t1399 * t1470 + t1226;
t1096 = -t1418 * t1163 + t1169 * t1413;
t1097 = t1413 * t1163 + t1418 * t1169;
t1038 = -t1096 * t1418 + t1097 * t1413;
t1557 = pkin(4) * t1038;
t1131 = -t1192 * t1413 - t1195 * t1418;
t1556 = pkin(4) * t1131;
t1554 = qJDD(1) * pkin(1);
t1065 = pkin(5) * t1566 - pkin(10) * t1195 - t1096;
t1469 = pkin(5) * t1392 - pkin(10) * t1326;
t1074 = -t1322 * pkin(5) + t1233 * pkin(10) - t1392 * t1469 + t1097;
t1012 = -t1417 * t1065 + t1074 * t1412;
t1013 = t1065 * t1412 + t1074 * t1417;
t970 = -t1012 * t1417 + t1013 * t1412;
t1553 = t1413 * t970;
t1552 = t1418 * t970;
t1551 = qJD(1) * qJD(3);
t1548 = t1038 * t1414;
t1547 = t1038 * t1419;
t1302 = qJDD(3) * pkin(3) + t1422 * pkin(8) - t1420 * t1449 + t1330;
t1207 = -pkin(4) * t1446 + t1368 * pkin(9) - t1374 * t1470 + t1302;
t1117 = t1233 * pkin(5) + t1322 * pkin(10) - t1326 * t1469 + t1207;
t1545 = t1117 * t1412;
t1544 = t1117 * t1417;
t1180 = t1200 + t1363;
t1543 = t1180 * t1412;
t1542 = t1180 * t1417;
t1541 = t1207 * t1413;
t1540 = t1207 * t1418;
t1255 = t1279 + t1366;
t1539 = t1255 * t1413;
t1538 = t1255 * t1418;
t1314 = t1334 + t1370;
t1537 = t1314 * t1414;
t1536 = t1314 * t1419;
t1534 = t1348 * t1415;
t1533 = t1380 * t1416;
t1532 = t1380 * t1421;
t1531 = t1386 * t1271;
t1530 = t1386 * t1412;
t1529 = t1386 * t1417;
t1398 = t1415 * t1423 * t1420;
t1387 = t1398 + qJDD(3);
t1528 = t1387 * t1415;
t1527 = t1387 * t1420;
t1388 = qJDD(3) - t1398;
t1526 = t1388 * t1415;
t1525 = t1388 * t1420;
t1524 = t1392 * t1326;
t1523 = t1392 * t1413;
t1522 = t1392 * t1418;
t1521 = t1399 * t1414;
t1520 = t1399 * t1419;
t1519 = t1410 * t1423;
t1518 = t1411 * t1423;
t1297 = t1414 * t1302;
t1298 = t1419 * t1302;
t1335 = t1420 * t1348;
t1515 = t1420 * t1115 + t1229 * t1558;
t1514 = pkin(3) * t1302 + pkin(8) * t1159;
t971 = t1012 * t1412 + t1417 * t1013;
t942 = t1413 * t971 + t1552;
t969 = pkin(5) * t970;
t1510 = pkin(4) * t942 + t969;
t1509 = t1415 * t1200;
t1508 = t1420 * t1200;
t1507 = t1415 * t1279;
t1506 = t1420 * t1279;
t1505 = t1415 * t1334;
t1504 = t1420 * t1334;
t1332 = -t1369 - t1397;
t1266 = -t1332 * t1414 - t1536;
t1296 = (qJD(4) + t1399) * t1372 + t1457;
t1501 = pkin(3) * t1296 + pkin(8) * t1266 - t1297;
t1321 = -t1397 - t1368;
t1258 = t1321 * t1419 - t1574;
t1355 = t1399 * t1374;
t1292 = -t1355 - t1446;
t1500 = pkin(3) * t1292 + pkin(8) * t1258 + t1298;
t1112 = t1137 + t1251;
t1047 = -t1109 * t1412 - t1112 * t1417;
t1045 = pkin(5) * t1047;
t1049 = -t1109 * t1417 + t1112 * t1412;
t997 = t1047 * t1418 + t1049 * t1413;
t1499 = pkin(4) * t997 + t1045;
t943 = t1418 * t971 - t1553;
t966 = pkin(5) * t1117 + pkin(10) * t971;
t920 = pkin(4) * t1117 + pkin(9) * t943 - pkin(10) * t1553 + t1418 * t966;
t924 = -pkin(9) * t942 - pkin(10) * t1552 - t1413 * t966;
t926 = t1414 * t943 + t1419 * t942;
t908 = -pkin(8) * t926 - t1414 * t920 + t1419 * t924;
t912 = -pkin(3) * t926 - t1510;
t1498 = -t1415 * t912 + t1420 * t908;
t1164 = -t1267 - t1268;
t945 = -pkin(5) * t1164 + pkin(10) * t1049 + t971;
t949 = -pkin(10) * t1047 - t970;
t999 = -t1047 * t1413 + t1049 * t1418;
t931 = -pkin(4) * t1164 + pkin(9) * t999 + t1413 * t949 + t1418 * t945;
t933 = -pkin(9) * t997 - t1413 * t945 + t1418 * t949;
t959 = t1414 * t999 + t1419 * t997;
t911 = -pkin(8) * t959 - t1414 * t931 + t1419 * t933;
t941 = -pkin(3) * t959 - t1499;
t1497 = -t1415 * t941 + t1420 * t911;
t1186 = -t1383 - t1267;
t1128 = t1186 * t1412 + t1573;
t1129 = t1186 * t1417 - t1576;
t1066 = t1128 * t1418 + t1129 * t1413;
t1067 = -t1128 * t1413 + t1129 * t1418;
t1009 = t1066 * t1419 + t1067 * t1414;
t1108 = (qJD(6) + t1386) * t1271 + t1488;
t1020 = -pkin(5) * t1108 + pkin(10) * t1129 + t1544;
t1061 = -pkin(10) * t1128 - t1545;
t968 = -pkin(4) * t1108 + pkin(9) * t1067 + t1020 * t1418 + t1061 * t1413;
t976 = -pkin(9) * t1066 - t1020 * t1413 + t1061 * t1418;
t936 = -pkin(8) * t1009 - t1414 * t968 + t1419 * t976;
t1463 = pkin(5) * t1128 - t1012;
t1439 = pkin(4) * t1066 + t1463;
t947 = -pkin(3) * t1009 - t1439;
t1496 = -t1415 * t947 + t1420 * t936;
t1242 = -t1268 - t1383;
t1150 = t1242 * t1417 - t1543;
t1151 = -t1242 * t1412 - t1542;
t1075 = t1150 * t1418 + t1151 * t1413;
t1076 = -t1150 * t1413 + t1151 * t1418;
t1022 = t1075 * t1419 + t1076 * t1414;
t1028 = -pkin(5) * t1568 + pkin(10) * t1151 - t1545;
t1073 = -pkin(10) * t1150 - t1544;
t974 = -pkin(4) * t1568 + pkin(9) * t1076 + t1028 * t1418 + t1073 * t1413;
t979 = -pkin(9) * t1075 - t1028 * t1413 + t1073 * t1418;
t940 = -pkin(8) * t1022 - t1414 * t974 + t1419 * t979;
t1445 = pkin(5) * t1150 - t1013;
t1424 = pkin(4) * t1075 + t1445;
t956 = -pkin(3) * t1022 - t1424;
t1495 = -t1415 * t956 + t1420 * t940;
t1039 = t1096 * t1413 + t1418 * t1097;
t1032 = pkin(4) * t1207 + pkin(9) * t1039;
t988 = t1039 * t1414 + t1547;
t948 = -pkin(8) * t988 - pkin(9) * t1547 - t1032 * t1414;
t972 = -pkin(3) * t988 - t1557;
t1494 = -t1415 * t972 + t1420 * t948;
t1133 = -t1192 * t1418 + t1195 * t1413;
t1070 = t1131 * t1419 + t1133 * t1414;
t1033 = -pkin(3) * t1070 - t1556;
t1236 = -t1322 - t1323;
t1015 = -pkin(4) * t1236 + pkin(9) * t1133 + t1039;
t1017 = -pkin(9) * t1131 - t1038;
t963 = -pkin(8) * t1070 - t1015 * t1414 + t1017 * t1419;
t1493 = -t1033 * t1415 + t1420 * t963;
t1264 = -t1391 - t1322;
t1178 = t1264 * t1418 - t1575;
t1191 = (qJD(5) + t1392) * t1326 + t1487;
t1086 = -pkin(4) * t1191 + pkin(9) * t1178 + t1540;
t1177 = t1264 * t1413 + t1572;
t1121 = t1177 * t1419 + t1178 * t1414;
t1135 = -pkin(9) * t1177 - t1541;
t1019 = -pkin(8) * t1121 - t1086 * t1414 + t1135 * t1419;
t1452 = pkin(4) * t1177 - t1096;
t1036 = -pkin(3) * t1121 - t1452;
t1492 = t1420 * t1019 - t1036 * t1415;
t1301 = -t1323 - t1391;
t1206 = -t1301 * t1413 - t1538;
t1090 = -pkin(4) * t1565 + pkin(9) * t1206 - t1541;
t1205 = t1301 * t1418 - t1539;
t1142 = t1205 * t1419 + t1206 * t1414;
t1144 = -pkin(9) * t1205 - t1540;
t1030 = -pkin(8) * t1142 - t1090 * t1414 + t1144 * t1419;
t1471 = pkin(4) * t1205 - t1097;
t1040 = -pkin(3) * t1142 - t1471;
t1491 = t1420 * t1030 - t1040 * t1415;
t1257 = t1321 * t1414 + t1571;
t1168 = -pkin(3) * t1257 + t1225;
t1210 = -pkin(8) * t1257 - t1297;
t1490 = -t1168 * t1415 + t1420 * t1210;
t1265 = t1332 * t1419 - t1537;
t1170 = -pkin(3) * t1265 + t1226;
t1213 = -pkin(8) * t1265 - t1298;
t1489 = -t1170 * t1415 + t1420 * t1213;
t1356 = pkin(1) * t1423 + t1426;
t1357 = -t1438 + t1554;
t1485 = -t1421 * t1356 - t1357 * t1416;
t1484 = -t1389 * t1416 - t1421 * t1390;
t927 = -t1414 * t942 + t1419 * t943;
t1482 = pkin(3) * t1117 + pkin(8) * t927 + t1414 * t924 + t1419 * t920;
t961 = -t1414 * t997 + t1419 * t999;
t1481 = -pkin(3) * t1164 + pkin(8) * t961 + t1414 * t933 + t1419 * t931;
t1010 = -t1066 * t1414 + t1067 * t1419;
t1480 = -pkin(3) * t1108 + pkin(8) * t1010 + t1414 * t976 + t1419 * t968;
t1023 = -t1075 * t1414 + t1076 * t1419;
t1479 = -pkin(3) * t1568 + pkin(8) * t1023 + t1414 * t979 + t1419 * t974;
t1478 = t1416 * t1398;
t1477 = t1421 * t1398;
t1072 = -t1131 * t1414 + t1133 * t1419;
t1476 = -pkin(3) * t1236 + pkin(8) * t1072 + t1419 * t1015 + t1414 * t1017;
t1122 = -t1177 * t1414 + t1178 * t1419;
t1475 = -pkin(3) * t1191 + pkin(8) * t1122 + t1419 * t1086 + t1414 * t1135;
t1143 = -t1205 * t1414 + t1206 * t1419;
t1474 = -pkin(3) * t1565 + pkin(8) * t1143 + t1419 * t1090 + t1414 * t1144;
t1231 = t1293 * t1419 + t1295 * t1414;
t1311 = t1368 + t1369;
t1473 = pkin(3) * t1311 + pkin(8) * t1231 + t1159;
t1138 = t1159 * t1415 + t1302 * t1420;
t1472 = -pkin(2) * t1138 - t1514;
t1381 = qJDD(1) * t1421 - t1416 * t1423;
t1468 = pkin(6) * t1381 + g(3) * t1416;
t1382 = qJDD(1) * t1416 + t1421 * t1423;
t1467 = -pkin(6) * t1382 + g(3) * t1421;
t1376 = 0.2e1 * t1502 + t1512;
t1462 = pkin(2) * t1376 - t1335;
t1379 = t1403 - 0.2e1 * t1503;
t1461 = pkin(2) * t1379 + t1534;
t1283 = -t1330 * t1415 - t1331 * t1420;
t1459 = t1356 * t1416 - t1357 * t1421;
t1458 = t1389 * t1421 - t1390 * t1416;
t1201 = t1258 * t1415 + t1292 * t1420;
t1456 = -pkin(2) * t1201 - t1500;
t1208 = t1266 * t1415 + t1296 * t1420;
t1455 = -pkin(2) * t1208 - t1501;
t1396 = -t1422 - t1518;
t1340 = t1396 * t1420 - t1528;
t1454 = -pkin(2) * t1340 - t1331;
t921 = t1117 * t1420 + t1415 * t927;
t1451 = -pkin(2) * t921 - t1482;
t950 = -t1164 * t1420 + t1415 * t961;
t1450 = -pkin(2) * t950 - t1481;
t990 = t1010 * t1415 - t1108 * t1420;
t1448 = -pkin(2) * t990 - t1480;
t1000 = t1023 * t1415 - t1420 * t1568;
t1447 = -pkin(2) * t1000 - t1479;
t989 = t1039 * t1419 - t1548;
t1444 = pkin(3) * t1207 + pkin(8) * t989 - pkin(9) * t1548 + t1419 * t1032;
t1050 = t1072 * t1415 - t1236 * t1420;
t1443 = -pkin(2) * t1050 - t1476;
t1081 = t1122 * t1415 - t1191 * t1420;
t1442 = -pkin(2) * t1081 - t1475;
t1087 = t1143 * t1415 - t1420 * t1565;
t1441 = -pkin(2) * t1087 - t1474;
t1175 = t1231 * t1415 + t1311 * t1420;
t1440 = -pkin(2) * t1175 - t1473;
t1394 = -t1422 - t1519;
t1338 = t1394 * t1415 + t1525;
t1437 = -pkin(2) * t1338 - t1330;
t1436 = pkin(2) * t926 - t1415 * t908 - t1420 * t912;
t1435 = pkin(2) * t959 - t1415 * t911 - t1420 * t941;
t1434 = pkin(2) * t988 - t1415 * t948 - t1420 * t972;
t1433 = pkin(2) * t1009 - t1415 * t936 - t1420 * t947;
t1432 = pkin(2) * t1022 - t1415 * t940 - t1420 * t956;
t1431 = pkin(2) * t1070 - t1033 * t1420 - t1415 * t963;
t1430 = pkin(2) * t1121 - t1019 * t1415 - t1036 * t1420;
t1429 = pkin(2) * t1142 - t1030 * t1415 - t1040 * t1420;
t1428 = pkin(2) * t1257 - t1168 * t1420 - t1210 * t1415;
t1427 = pkin(2) * t1265 - t1170 * t1420 - t1213 * t1415;
t981 = t1207 * t1420 + t1415 * t989;
t1425 = -pkin(2) * t981 - t1444;
t1395 = t1422 - t1518;
t1393 = -t1422 + t1519;
t1385 = (-t1410 + t1411) * t1423;
t1384 = t1513 * t1423;
t1371 = t1513 * t1551;
t1367 = t1466 - 0.2e1 * t1554;
t1364 = -t1390 + t1407 + 0.2e1 * t1409;
t1352 = -t1369 + t1397;
t1351 = t1368 - t1397;
t1350 = t1378 * t1415 + t1411 * t1551;
t1349 = t1377 * t1420 + t1410 * t1551;
t1345 = -t1396 * t1415 - t1527;
t1344 = -t1395 * t1415 + t1525;
t1343 = t1464 * t1420;
t1342 = t1394 * t1420 - t1526;
t1341 = t1393 * t1420 - t1528;
t1339 = t1395 * t1420 + t1526;
t1337 = t1393 * t1415 + t1527;
t1336 = t1465 * t1415;
t1333 = t1369 - t1368;
t1329 = -t1376 * t1420 - t1379 * t1415;
t1328 = -t1376 * t1415 + t1379 * t1420;
t1312 = pkin(1) * t1357 - qJ(2) * t1356;
t1307 = -t1323 + t1391;
t1306 = t1322 - t1391;
t1305 = (-t1372 * t1419 + t1374 * t1414) * t1399;
t1304 = (-t1372 * t1414 - t1374 * t1419) * t1399;
t1294 = t1320 - t1354;
t1291 = -t1355 + t1446;
t1288 = t1320 * t1419 - t1374 * t1521;
t1287 = t1320 * t1414 + t1374 * t1520;
t1286 = t1372 * t1520 + t1414 * t1446;
t1285 = -t1372 * t1521 + t1419 * t1446;
t1278 = t1305 * t1420 + t1370 * t1415;
t1277 = t1305 * t1415 - t1370 * t1420;
t1276 = t1323 - t1322;
t1275 = t1351 * t1419 - t1537;
t1274 = -t1352 * t1414 + t1571;
t1273 = t1351 * t1414 + t1536;
t1272 = t1352 * t1419 + t1574;
t1263 = pkin(2) * t1384 + t1283;
t1260 = -qJ(2) * t1345 - t1454;
t1259 = -qJ(2) * t1342 - t1437;
t1250 = -t1268 + t1383;
t1249 = t1267 - t1383;
t1248 = (-t1324 * t1418 + t1326 * t1413) * t1392;
t1247 = (-t1324 * t1413 - t1326 * t1418) * t1392;
t1246 = -t1342 * t1562 + t1462;
t1245 = -t1345 * t1562 + t1461;
t1244 = qJ(2) * t1379 - t1340 * t1562 - t1335;
t1243 = qJ(2) * t1376 - t1338 * t1562 - t1534;
t1241 = t1288 * t1420 + t1505;
t1240 = t1286 * t1420 - t1505;
t1239 = t1288 * t1415 - t1504;
t1238 = t1286 * t1415 + t1504;
t1237 = -qJ(2) * t1384 + t1380 * t1562 - t1282;
t1230 = t1292 * t1419 - t1294 * t1414;
t1228 = t1292 * t1414 + t1294 * t1419;
t1221 = t1275 * t1420 - t1291 * t1415;
t1220 = t1274 * t1420 + t1295 * t1415;
t1219 = t1275 * t1415 + t1291 * t1420;
t1218 = t1274 * t1415 - t1295 * t1420;
t1217 = t1306 * t1418 - t1539;
t1216 = -t1307 * t1413 + t1572;
t1215 = t1306 * t1413 + t1538;
t1214 = t1307 * t1418 + t1575;
t1212 = -qJ(2) * t1283 + t1561;
t1209 = t1266 * t1420 - t1296 * t1415;
t1202 = t1258 * t1420 - t1292 * t1415;
t1199 = t1268 - t1267;
t1198 = t1230 * t1420 + t1333 * t1415;
t1197 = t1230 * t1415 - t1333 * t1420;
t1190 = -t1283 * t1562 - t1560;
t1189 = -qJ(2) * t1348 - t1282 * t1562;
t1185 = t1234 * t1418 - t1326 * t1523;
t1184 = t1234 * t1413 + t1326 * t1522;
t1183 = -t1233 * t1413 + t1324 * t1522;
t1182 = t1233 * t1418 + t1324 * t1523;
t1176 = t1231 * t1420 - t1311 * t1415;
t1174 = (-t1269 * t1417 + t1271 * t1412) * t1386;
t1173 = (-t1269 * t1412 - t1271 * t1417) * t1386;
t1172 = -t1247 * t1414 + t1248 * t1419;
t1171 = t1247 * t1419 + t1248 * t1414;
t1166 = t1172 * t1420 + t1366 * t1415;
t1165 = t1172 * t1415 - t1366 * t1420;
t1156 = t1158 * t1558;
t1155 = t1249 * t1417 - t1543;
t1154 = -t1250 * t1412 + t1573;
t1153 = t1249 * t1412 + t1542;
t1152 = t1250 * t1417 + t1576;
t1148 = -t1215 * t1414 + t1217 * t1419;
t1147 = -t1214 * t1414 + t1216 * t1419;
t1146 = t1215 * t1419 + t1217 * t1414;
t1145 = t1214 * t1419 + t1216 * t1414;
t1139 = t1159 * t1420 - t1302 * t1415;
t1136 = -qJD(6) * t1271 - t1488;
t1132 = -t1191 * t1418 - t1413 * t1565;
t1130 = -t1191 * t1413 + t1418 * t1565;
t1126 = -t1184 * t1414 + t1185 * t1419;
t1125 = -t1182 * t1414 + t1183 * t1419;
t1124 = t1184 * t1419 + t1185 * t1414;
t1123 = t1182 * t1419 + t1183 * t1414;
t1119 = -t1173 * t1413 + t1174 * t1418;
t1118 = t1173 * t1418 + t1174 * t1413;
t1105 = t1137 * t1417 - t1271 * t1530;
t1104 = t1137 * t1412 + t1271 * t1529;
t1103 = -t1136 * t1412 + t1269 * t1529;
t1102 = t1136 * t1417 + t1269 * t1530;
t1101 = t1126 * t1420 + t1507;
t1100 = t1125 * t1420 - t1507;
t1099 = t1126 * t1415 - t1506;
t1098 = t1125 * t1415 + t1506;
t1095 = t1148 * t1420 - t1192 * t1415;
t1094 = t1147 * t1420 + t1195 * t1415;
t1093 = t1148 * t1415 + t1192 * t1420;
t1092 = t1147 * t1415 - t1195 * t1420;
t1088 = t1143 * t1420 + t1415 * t1565;
t1084 = -qJ(2) * t1209 - t1455;
t1083 = -qJ(2) * t1202 - t1456;
t1082 = t1122 * t1420 + t1191 * t1415;
t1080 = -t1153 * t1413 + t1155 * t1418;
t1079 = -t1152 * t1413 + t1154 * t1418;
t1078 = t1153 * t1418 + t1155 * t1413;
t1077 = t1152 * t1418 + t1154 * t1413;
t1071 = -t1130 * t1414 + t1132 * t1419;
t1069 = t1130 * t1419 + t1132 * t1414;
t1063 = -t1209 * t1562 + t1427;
t1062 = qJ(2) * t1265 - t1208 * t1562 + t1489;
t1060 = -t1118 * t1414 + t1119 * t1419;
t1059 = t1118 * t1419 + t1119 * t1414;
t1058 = t1071 * t1420 + t1276 * t1415;
t1057 = t1071 * t1415 - t1276 * t1420;
t1056 = -t1202 * t1562 + t1428;
t1055 = qJ(2) * t1257 - t1201 * t1562 + t1490;
t1054 = t1060 * t1420 + t1363 * t1415;
t1053 = t1060 * t1415 - t1363 * t1420;
t1052 = -qJ(2) * t1176 - t1440;
t1051 = t1072 * t1420 + t1236 * t1415;
t1048 = -t1108 * t1417 - t1412 * t1568;
t1046 = -t1108 * t1412 + t1417 * t1568;
t1044 = -t1104 * t1413 + t1105 * t1418;
t1043 = -t1102 * t1413 + t1103 * t1418;
t1042 = t1104 * t1418 + t1105 * t1413;
t1041 = t1102 * t1418 + t1103 * t1413;
t1037 = -qJ(2) * t1139 - t1472;
t1035 = -t1176 * t1562 - t1563;
t1034 = qJ(2) * t1229 - t1175 * t1562 + t1515;
t1027 = -t1078 * t1414 + t1080 * t1419;
t1026 = -t1077 * t1414 + t1079 * t1419;
t1025 = t1078 * t1419 + t1080 * t1414;
t1024 = t1077 * t1419 + t1079 * t1414;
t1007 = -t1139 * t1562 + t1570;
t1006 = t1156 + (qJ(2) - t1555) * t1158 - t1562 * t1138;
t1005 = t1027 * t1420 - t1109 * t1415;
t1004 = t1026 * t1420 + t1112 * t1415;
t1003 = t1027 * t1415 + t1109 * t1420;
t1002 = t1026 * t1415 - t1112 * t1420;
t1001 = t1023 * t1420 + t1415 * t1568;
t998 = -t1046 * t1413 + t1048 * t1418;
t996 = t1046 * t1418 + t1048 * t1413;
t995 = -t1042 * t1414 + t1044 * t1419;
t994 = -t1041 * t1414 + t1043 * t1419;
t993 = t1042 * t1419 + t1044 * t1414;
t992 = t1041 * t1419 + t1043 * t1414;
t991 = t1010 * t1420 + t1108 * t1415;
t986 = t1420 * t995 + t1509;
t985 = t1420 * t994 - t1509;
t984 = t1415 * t995 - t1508;
t983 = t1415 * t994 + t1508;
t982 = -t1207 * t1415 + t1420 * t989;
t980 = -qJ(2) * t1088 - t1441;
t977 = -qJ(2) * t1082 - t1442;
t965 = -t1088 * t1562 + t1429;
t964 = qJ(2) * t1142 - t1087 * t1562 + t1491;
t960 = -t1414 * t996 + t1419 * t998;
t958 = t1414 * t998 + t1419 * t996;
t955 = t1199 * t1415 + t1420 * t960;
t954 = -t1199 * t1420 + t1415 * t960;
t953 = -t1082 * t1562 + t1430;
t952 = qJ(2) * t1121 - t1081 * t1562 + t1492;
t951 = t1164 * t1415 + t1420 * t961;
t944 = -qJ(2) * t1051 - t1443;
t938 = -t1051 * t1562 + t1431;
t937 = qJ(2) * t1070 - t1050 * t1562 + t1493;
t934 = -qJ(2) * t982 - t1425;
t929 = -qJ(2) * t1001 - t1447;
t928 = -qJ(2) * t991 - t1448;
t922 = -t1117 * t1415 + t1420 * t927;
t918 = -t1562 * t982 + t1434;
t917 = qJ(2) * t988 - t1562 * t981 + t1494;
t916 = -t1001 * t1562 + t1432;
t915 = qJ(2) * t1022 - t1000 * t1562 + t1495;
t914 = -t1562 * t991 + t1433;
t913 = qJ(2) * t1009 - t1562 * t990 + t1496;
t909 = -qJ(2) * t951 - t1450;
t906 = -t1562 * t951 + t1435;
t905 = qJ(2) * t959 - t1562 * t950 + t1497;
t904 = -qJ(2) * t922 - t1451;
t903 = -t1562 * t922 + t1436;
t902 = qJ(2) * t926 - t1562 * t921 + t1498;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1381, 0, -t1382, 0, -t1468, -t1467, -t1458, -pkin(6) * t1458, 0, -t1381, t1382, 0, 0, 0, t1459, t1468, t1467, pkin(6) * t1459 + (-pkin(1) * t1416 + qJ(2) * t1421) * g(3), t1350 * t1416 + t1477, t1328 * t1416 + t1385 * t1421, t1339 * t1416 + t1403 * t1421, t1349 * t1416 - t1477, t1337 * t1416 - t1421 * t1512, qJDD(3) * t1421 - t1371 * t1416, t1421 * t1259 - t1416 * t1246 - pkin(6) * (-t1338 * t1421 + t1376 * t1416), t1421 * t1260 - t1416 * t1245 - pkin(6) * (-t1340 * t1421 + t1379 * t1416), -pkin(2) * t1532 + t1416 * t1263 - pkin(6) * (-t1384 * t1416 + t1532), t1421 * t1212 - t1416 * t1190 - pkin(6) * (-t1282 * t1421 - t1348 * t1416), t1239 * t1416 + t1287 * t1421, t1197 * t1416 + t1228 * t1421, t1218 * t1416 + t1272 * t1421, t1238 * t1416 - t1285 * t1421, t1219 * t1416 + t1273 * t1421, t1277 * t1416 + t1304 * t1421, t1421 * t1083 - t1416 * t1056 - pkin(6) * (-t1201 * t1421 + t1257 * t1416), t1421 * t1084 - t1416 * t1063 - pkin(6) * (-t1208 * t1421 + t1265 * t1416), t1421 * t1052 - t1416 * t1035 - pkin(6) * (-t1175 * t1421 + t1229 * t1416), t1421 * t1037 - t1416 * t1007 - pkin(6) * (-t1138 * t1421 + t1158 * t1416), t1099 * t1416 + t1124 * t1421, t1057 * t1416 + t1069 * t1421, t1092 * t1416 + t1145 * t1421, t1098 * t1416 + t1123 * t1421, t1093 * t1416 + t1146 * t1421, t1165 * t1416 + t1171 * t1421, t1421 * t977 - t1416 * t953 - pkin(6) * (-t1081 * t1421 + t1121 * t1416), t1421 * t980 - t1416 * t965 - pkin(6) * (-t1087 * t1421 + t1142 * t1416), t1421 * t944 - t1416 * t938 - pkin(6) * (-t1050 * t1421 + t1070 * t1416), t1421 * t934 - t1416 * t918 - pkin(6) * (t1416 * t988 - t1421 * t981), t1416 * t984 + t1421 * t993, t1416 * t954 + t1421 * t958, t1002 * t1416 + t1024 * t1421, t1416 * t983 + t1421 * t992, t1003 * t1416 + t1025 * t1421, t1053 * t1416 + t1059 * t1421, t1421 * t928 - t1416 * t914 - pkin(6) * (t1009 * t1416 - t1421 * t990), t1421 * t929 - t1416 * t916 - pkin(6) * (-t1000 * t1421 + t1022 * t1416), t1421 * t909 - t1416 * t906 - pkin(6) * (t1416 * t959 - t1421 * t950), t1421 * t904 - t1416 * t903 - pkin(6) * (t1416 * t926 - t1421 * t921); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1382, 0, t1381, 0, t1467, -t1468, t1484, pkin(6) * t1484, 0, -t1382, -t1381, 0, 0, 0, t1485, -t1467, t1468, pkin(6) * t1485 + (pkin(1) * t1421 + qJ(2) * t1416) * g(3), -t1350 * t1421 + t1478, -t1328 * t1421 + t1385 * t1416, -t1339 * t1421 + t1403 * t1416, -t1349 * t1421 - t1478, -t1337 * t1421 - t1416 * t1512, qJDD(3) * t1416 + t1371 * t1421, t1416 * t1259 + t1421 * t1246 + pkin(6) * (t1338 * t1416 + t1376 * t1421), t1416 * t1260 + t1421 * t1245 + pkin(6) * (t1340 * t1416 + t1379 * t1421), -pkin(2) * t1533 - t1421 * t1263 + pkin(6) * (-t1384 * t1421 - t1533), t1416 * t1212 + t1421 * t1190 + pkin(6) * (t1282 * t1416 - t1348 * t1421), -t1239 * t1421 + t1287 * t1416, -t1197 * t1421 + t1228 * t1416, -t1218 * t1421 + t1272 * t1416, -t1238 * t1421 - t1285 * t1416, -t1219 * t1421 + t1273 * t1416, -t1277 * t1421 + t1304 * t1416, t1416 * t1083 + t1421 * t1056 + pkin(6) * (t1201 * t1416 + t1257 * t1421), t1416 * t1084 + t1421 * t1063 + pkin(6) * (t1208 * t1416 + t1265 * t1421), t1416 * t1052 + t1421 * t1035 + pkin(6) * (t1175 * t1416 + t1229 * t1421), t1416 * t1037 + t1421 * t1007 + pkin(6) * (t1138 * t1416 + t1158 * t1421), -t1099 * t1421 + t1124 * t1416, -t1057 * t1421 + t1069 * t1416, -t1092 * t1421 + t1145 * t1416, -t1098 * t1421 + t1123 * t1416, -t1093 * t1421 + t1146 * t1416, -t1165 * t1421 + t1171 * t1416, t1416 * t977 + t1421 * t953 + pkin(6) * (t1081 * t1416 + t1121 * t1421), t1416 * t980 + t1421 * t965 + pkin(6) * (t1087 * t1416 + t1142 * t1421), t1416 * t944 + t1421 * t938 + pkin(6) * (t1050 * t1416 + t1070 * t1421), t1416 * t934 + t1421 * t918 + pkin(6) * (t1416 * t981 + t1421 * t988), t1416 * t993 - t1421 * t984, t1416 * t958 - t1421 * t954, -t1002 * t1421 + t1024 * t1416, t1416 * t992 - t1421 * t983, -t1003 * t1421 + t1025 * t1416, -t1053 * t1421 + t1059 * t1416, t1416 * t928 + t1421 * t914 + pkin(6) * (t1009 * t1421 + t1416 * t990), t1416 * t929 + t1421 * t916 + pkin(6) * (t1000 * t1416 + t1022 * t1421), t1416 * t909 + t1421 * t906 + pkin(6) * (t1416 * t950 + t1421 * t959), t1416 * t904 + t1421 * t903 + pkin(6) * (t1416 * t921 + t1421 * t926); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1389, t1390, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1367, t1364, t1312, -t1343, t1329, t1344, t1336, t1341, 0, t1243, t1244, t1237, t1189, t1241, t1198, t1220, t1240, t1221, t1278, t1055, t1062, t1034, t1006, t1101, t1058, t1094, t1100, t1095, t1166, t952, t964, t937, t917, t986, t955, t1004, t985, t1005, t1054, t913, t915, t905, t902; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1423, 0, 0, -g(3), -t1389, 0, 0, -qJDD(1), t1423, 0, 0, 0, -t1357, 0, g(3), qJ(2) * g(3), t1398, t1385, t1403, -t1398, -t1512, qJDD(3), t1259, t1260, -t1559, t1212, t1287, t1228, t1272, -t1285, t1273, t1304, t1083, t1084, t1052, t1037, t1124, t1069, t1145, t1123, t1146, t1171, t977, t980, t944, t934, t993, t958, t1024, t992, t1025, t1059, t928, t929, t909, t904; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1423, 0, qJDD(1), 0, g(3), 0, -t1390, 0, 0, -t1423, -qJDD(1), 0, 0, 0, -t1356, -g(3), 0, pkin(1) * g(3), -t1350, -t1328, -t1339, -t1349, -t1337, t1371, t1246, t1245, -t1263, t1190, -t1239, -t1197, -t1218, -t1238, -t1219, -t1277, t1056, t1063, t1035, t1007, -t1099, -t1057, -t1092, -t1098, -t1093, -t1165, t953, t965, t938, t918, -t984, -t954, -t1002, -t983, -t1003, -t1053, t914, t916, t906, t903; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1389, t1390, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1367, t1364, t1312, -t1343, t1329, t1344, t1336, t1341, 0, t1243, t1244, t1237, t1189, t1241, t1198, t1220, t1240, t1221, t1278, t1055, t1062, t1034, t1006, t1101, t1058, t1094, t1100, t1095, t1166, t952, t964, t937, t917, t986, t955, t1004, t985, t1005, t1054, t913, t915, t905, t902; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1357, -t1356, 0, -t1343, t1329, t1344, t1336, t1341, 0, -pkin(7) * t1338 - t1534, -pkin(7) * t1340 - t1335, pkin(7) * t1380 - t1282, -pkin(7) * t1282, t1241, t1198, t1220, t1240, t1221, t1278, -pkin(7) * t1201 + t1490, -pkin(7) * t1208 + t1489, -pkin(7) * t1175 + t1515, -pkin(7) * t1138 - t1158 * t1555 + t1156, t1101, t1058, t1094, t1100, t1095, t1166, -pkin(7) * t1081 + t1492, -pkin(7) * t1087 + t1491, -pkin(7) * t1050 + t1493, -pkin(7) * t981 + t1494, t986, t955, t1004, t985, t1005, t1054, -pkin(7) * t990 + t1496, -pkin(7) * t1000 + t1495, -pkin(7) * t950 + t1497, -pkin(7) * t921 + t1498; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1423, 0, 0, 0, t1357, 0, -g(3), 0, -t1398, -t1385, -t1403, t1398, t1512, -qJDD(3), t1437, t1454, t1559, -t1561, -t1287, -t1228, -t1272, t1285, -t1273, -t1304, t1456, t1455, t1440, t1472, -t1124, -t1069, -t1145, -t1123, -t1146, -t1171, t1442, t1441, t1443, t1425, -t993, -t958, -t1024, -t992, -t1025, -t1059, t1448, t1447, t1450, t1451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1423, qJDD(1), 0, 0, 0, t1356, g(3), 0, 0, t1350, t1328, t1339, t1349, t1337, -t1371, pkin(7) * t1342 - t1462, pkin(7) * t1345 - t1461, t1263, pkin(7) * t1283 + t1560, t1239, t1197, t1218, t1238, t1219, t1277, pkin(7) * t1202 - t1428, pkin(7) * t1209 - t1427, pkin(7) * t1176 + t1563, pkin(7) * t1139 - t1570, t1099, t1057, t1092, t1098, t1093, t1165, pkin(7) * t1082 - t1430, pkin(7) * t1088 - t1429, pkin(7) * t1051 - t1431, pkin(7) * t982 - t1434, t984, t954, t1002, t983, t1003, t1053, pkin(7) * t991 - t1433, pkin(7) * t1001 - t1432, pkin(7) * t951 - t1435, pkin(7) * t922 - t1436; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1378, -t1376, t1388, t1503, t1393, -t1503, 0, -t1348, -t1330, 0, t1288, t1230, t1274, t1286, t1275, t1305, t1210, t1213, t1115, -pkin(8) * t1158, t1126, t1071, t1147, t1125, t1148, t1172, t1019, t1030, t963, t948, t995, t960, t1026, t994, t1027, t1060, t936, t940, t911, t908; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1502, t1379, t1395, t1377, t1387, -t1502, t1348, 0, -t1331, 0, -t1334, -t1333, -t1295, t1334, t1291, -t1370, t1168, t1170, -pkin(3) * t1229, -pkin(3) * t1158, -t1279, -t1276, -t1195, t1279, t1192, -t1366, t1036, t1040, t1033, t972, -t1200, -t1199, -t1112, t1200, t1109, -t1363, t947, t956, t941, t912; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1398, t1385, t1403, -t1398, -t1512, qJDD(3), t1330, t1331, 0, 0, t1287, t1228, t1272, -t1285, t1273, t1304, t1500, t1501, t1473, t1514, t1124, t1069, t1145, t1123, t1146, t1171, t1475, t1474, t1476, t1444, t993, t958, t1024, t992, t1025, t1059, t1480, t1479, t1481, t1482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1320, t1292, t1564, t1354, t1351, -t1354, 0, -t1302, t1225, 0, t1185, t1132, t1216, t1183, t1217, t1248, t1135, t1144, t1017, -pkin(9) * t1038, t1044, t998, t1079, t1043, t1080, t1119, t976, t979, t933, t924; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1355, t1294, t1352, -t1446, t1314, -t1355, t1302, 0, t1226, 0, t1184, t1130, t1214, t1182, t1215, t1247, t1086, t1090, t1015, t1032, t1042, t996, t1077, t1041, t1078, t1118, t968, t974, t931, t920; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1334, t1333, t1295, -t1334, -t1291, t1370, -t1225, -t1226, 0, 0, t1279, t1276, t1195, -t1279, -t1192, t1366, t1452, t1471, t1556, t1557, t1200, t1199, t1112, -t1200, -t1109, t1363, t1439, t1424, t1499, t1510; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1234, -t1191, t1566, t1309, t1306, -t1309, 0, -t1207, t1096, 0, t1105, t1048, t1154, t1103, t1155, t1174, t1061, t1073, t949, -pkin(10) * t970; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1524, t1565, t1307, t1233, t1255, -t1524, t1207, 0, t1097, 0, t1104, t1046, t1152, t1102, t1153, t1173, t1020, t1028, t945, t966; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1279, t1276, t1195, -t1279, -t1192, t1366, -t1096, -t1097, 0, 0, t1200, t1199, t1112, -t1200, -t1109, t1363, t1463, t1445, t1045, t969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1137, -t1108, t1567, t1251, t1249, -t1251, 0, -t1117, t1012, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1531, t1568, t1250, t1136, t1180, -t1531, t1117, 0, t1013, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1200, t1199, t1112, -t1200, -t1109, t1363, -t1012, -t1013, 0, 0;];
m_new_reg  = t1;
