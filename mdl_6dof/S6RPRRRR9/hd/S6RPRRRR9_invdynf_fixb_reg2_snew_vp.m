% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRRRR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 04:30
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRRRR9_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR9_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR9_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR9_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR9_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRR9_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 04:30:17
% EndTime: 2019-05-06 04:30:22
% DurationCPUTime: 5.55s
% Computational Cost: add. (44377->300), mult. (88445->360), div. (0->0), fcn. (61325->10), ass. (0->208)
t1765 = sin(qJ(3));
t1754 = t1765 * qJD(1);
t1750 = t1754 + qJD(4);
t1747 = qJD(5) + t1750;
t1742 = qJD(6) + t1747;
t1809 = qJD(6) + t1742;
t1773 = qJD(1) ^ 2;
t1766 = sin(qJ(1));
t1771 = cos(qJ(1));
t1746 = -t1771 * g(1) - t1766 * g(2);
t1774 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1746;
t1801 = pkin(7) + pkin(1);
t1724 = t1801 * t1773 + t1774;
t1764 = sin(qJ(4));
t1769 = cos(qJ(4));
t1770 = cos(qJ(3));
t1800 = qJD(1) * t1770;
t1732 = -t1769 * qJD(3) + t1764 * t1800;
t1734 = qJD(3) * t1764 + t1769 * t1800;
t1763 = sin(qJ(5));
t1768 = cos(qJ(5));
t1713 = t1768 * t1732 + t1734 * t1763;
t1715 = -t1732 * t1763 + t1734 * t1768;
t1762 = sin(qJ(6));
t1767 = cos(qJ(6));
t1686 = t1767 * t1713 + t1715 * t1762;
t1808 = t1686 ^ 2;
t1688 = -t1713 * t1762 + t1715 * t1767;
t1807 = t1688 ^ 2;
t1712 = t1713 ^ 2;
t1806 = t1715 ^ 2;
t1731 = t1732 ^ 2;
t1805 = t1734 ^ 2;
t1804 = t1742 ^ 2;
t1803 = t1747 ^ 2;
t1802 = t1750 ^ 2;
t1799 = t1686 * t1688;
t1798 = t1713 * t1715;
t1797 = t1732 * t1734;
t1796 = t1747 * t1713;
t1795 = t1750 * t1732;
t1794 = qJD(4) - t1750;
t1793 = qJD(5) - t1747;
t1792 = qJD(6) - t1742;
t1751 = qJD(3) * t1800;
t1752 = t1765 * qJDD(1);
t1735 = t1752 + 0.2e1 * t1751;
t1789 = qJD(3) * t1754;
t1790 = t1770 * qJDD(1);
t1736 = -t1789 + t1790;
t1693 = (-t1736 + t1789) * pkin(8) + t1735 * pkin(3) - t1724;
t1745 = t1766 * g(1) - t1771 * g(2);
t1775 = -t1773 * qJ(2) + qJDD(2) - t1745;
t1725 = -qJDD(1) * t1801 + t1775;
t1717 = -t1770 * g(3) + t1765 * t1725;
t1772 = qJD(3) ^ 2;
t1776 = t1773 * (pkin(3) * t1765 - pkin(8) * t1770);
t1701 = -t1772 * pkin(3) + qJDD(3) * pkin(8) - t1765 * t1776 + t1717;
t1668 = t1769 * t1693 - t1764 * t1701;
t1787 = t1752 + t1751 + qJDD(4);
t1704 = t1787 - t1797;
t1778 = -t1764 * qJDD(3) - t1769 * t1736;
t1710 = -qJD(4) * t1732 - t1778;
t1646 = (-t1710 - t1795) * pkin(9) + t1704 * pkin(4) + t1668;
t1669 = t1764 * t1693 + t1769 * t1701;
t1784 = -t1769 * qJDD(3) + t1764 * t1736;
t1709 = -qJD(4) * t1734 - t1784;
t1782 = pkin(4) * t1750 - pkin(9) * t1734;
t1649 = -t1731 * pkin(4) + t1709 * pkin(9) - t1750 * t1782 + t1669;
t1624 = t1763 * t1646 + t1768 * t1649;
t1760 = t1765 ^ 2;
t1761 = t1770 ^ 2;
t1791 = t1760 + t1761;
t1788 = t1765 * t1770 * t1773;
t1623 = t1768 * t1646 - t1763 * t1649;
t1785 = -t1768 * t1709 + t1763 * t1710;
t1673 = -qJD(5) * t1715 - t1785;
t1779 = -t1763 * t1709 - t1768 * t1710;
t1674 = -qJD(5) * t1713 - t1779;
t1786 = t1767 * t1673 - t1762 * t1674;
t1783 = qJDD(5) + t1787;
t1781 = pkin(5) * t1747 - pkin(10) * t1715;
t1716 = t1765 * g(3) + t1770 * t1725;
t1780 = -t1762 * t1673 - t1767 * t1674;
t1777 = -qJDD(6) - t1783;
t1678 = t1783 - t1798;
t1700 = qJDD(3) * pkin(3) + t1772 * pkin(8) - t1770 * t1776 + t1716;
t1665 = t1709 * pkin(4) + t1731 * pkin(9) - t1734 * t1782 + t1700;
t1749 = -t1761 * t1773 - t1772;
t1748 = -t1760 * t1773 - t1772;
t1744 = -qJDD(3) - t1788;
t1743 = qJDD(3) - t1788;
t1741 = t1791 * t1773;
t1740 = qJDD(1) * t1766 + t1771 * t1773;
t1739 = qJDD(1) * t1771 - t1766 * t1773;
t1738 = t1791 * qJDD(1);
t1737 = -0.2e1 * t1789 + t1790;
t1728 = qJDD(1) * pkin(1) - t1775;
t1727 = t1773 * pkin(1) + t1774;
t1722 = t1744 * t1770 - t1749 * t1765;
t1721 = -t1743 * t1765 + t1748 * t1770;
t1720 = t1744 * t1765 + t1749 * t1770;
t1719 = t1743 * t1770 + t1748 * t1765;
t1718 = -t1802 - t1805;
t1711 = -t1802 - t1731;
t1705 = -t1787 - t1797;
t1703 = -t1731 - t1805;
t1699 = -t1803 - t1806;
t1697 = t1732 * t1794 + t1778;
t1696 = t1710 - t1795;
t1695 = -t1734 * t1794 - t1784;
t1694 = (qJD(4) + t1750) * t1734 + t1784;
t1692 = -t1716 * t1765 + t1717 * t1770;
t1691 = t1716 * t1770 + t1717 * t1765;
t1685 = t1705 * t1769 - t1718 * t1764;
t1684 = t1705 * t1764 + t1718 * t1769;
t1683 = -t1803 - t1712;
t1681 = -t1704 * t1764 + t1711 * t1769;
t1680 = t1704 * t1769 + t1711 * t1764;
t1679 = -t1783 - t1798;
t1676 = -t1804 - t1807;
t1675 = -t1712 - t1806;
t1671 = t1695 * t1769 - t1697 * t1764;
t1670 = t1695 * t1764 + t1697 * t1769;
t1667 = t1685 * t1770 + t1696 * t1765;
t1666 = t1685 * t1765 - t1696 * t1770;
t1664 = t1679 * t1768 - t1699 * t1763;
t1663 = t1679 * t1763 + t1699 * t1768;
t1662 = t1681 * t1770 + t1694 * t1765;
t1661 = t1681 * t1765 - t1694 * t1770;
t1660 = t1713 * t1793 + t1779;
t1659 = t1674 - t1796;
t1658 = -t1715 * t1793 - t1785;
t1657 = (qJD(5) + t1747) * t1715 + t1785;
t1656 = -t1804 - t1808;
t1655 = t1777 - t1799;
t1654 = -t1777 - t1799;
t1653 = -t1678 * t1763 + t1683 * t1768;
t1652 = t1678 * t1768 + t1683 * t1763;
t1651 = t1671 * t1770 + t1703 * t1765;
t1650 = t1671 * t1765 - t1703 * t1770;
t1647 = -t1807 - t1808;
t1643 = -t1668 * t1764 + t1669 * t1769;
t1642 = t1668 * t1769 + t1669 * t1764;
t1641 = t1655 * t1767 - t1676 * t1762;
t1640 = t1655 * t1762 + t1676 * t1767;
t1639 = -t1663 * t1764 + t1664 * t1769;
t1638 = t1663 * t1769 + t1664 * t1764;
t1637 = t1643 * t1770 - t1700 * t1765;
t1636 = t1643 * t1765 + t1700 * t1770;
t1635 = t1658 * t1768 - t1660 * t1763;
t1634 = t1658 * t1763 + t1660 * t1768;
t1633 = -t1654 * t1762 + t1656 * t1767;
t1632 = t1654 * t1767 + t1656 * t1762;
t1631 = -t1652 * t1764 + t1653 * t1769;
t1630 = t1652 * t1769 + t1653 * t1764;
t1629 = t1673 * pkin(5) + t1712 * pkin(10) - t1715 * t1781 + t1665;
t1628 = t1686 * t1792 + t1780;
t1627 = -t1686 * t1809 - t1780;
t1626 = -t1688 * t1792 + t1786;
t1625 = t1688 * t1809 - t1786;
t1622 = t1639 * t1770 + t1659 * t1765;
t1621 = t1639 * t1765 - t1659 * t1770;
t1620 = t1631 * t1770 + t1657 * t1765;
t1619 = t1631 * t1765 - t1657 * t1770;
t1618 = -t1640 * t1763 + t1641 * t1768;
t1617 = t1640 * t1768 + t1641 * t1763;
t1616 = -t1712 * pkin(5) + t1673 * pkin(10) - t1747 * t1781 + t1624;
t1615 = -t1634 * t1764 + t1635 * t1769;
t1614 = t1634 * t1769 + t1635 * t1764;
t1613 = -t1632 * t1763 + t1633 * t1768;
t1612 = t1632 * t1768 + t1633 * t1763;
t1611 = (-t1674 - t1796) * pkin(10) + t1678 * pkin(5) + t1623;
t1610 = t1615 * t1770 + t1675 * t1765;
t1609 = t1615 * t1765 - t1675 * t1770;
t1608 = t1626 * t1767 - t1628 * t1762;
t1607 = t1626 * t1762 + t1628 * t1767;
t1606 = -t1623 * t1763 + t1624 * t1768;
t1605 = t1623 * t1768 + t1624 * t1763;
t1604 = -t1617 * t1764 + t1618 * t1769;
t1603 = t1617 * t1769 + t1618 * t1764;
t1602 = t1611 * t1762 + t1616 * t1767;
t1601 = t1611 * t1767 - t1616 * t1762;
t1600 = -t1612 * t1764 + t1613 * t1769;
t1599 = t1612 * t1769 + t1613 * t1764;
t1598 = t1604 * t1770 + t1627 * t1765;
t1597 = t1604 * t1765 - t1627 * t1770;
t1596 = -t1607 * t1763 + t1608 * t1768;
t1595 = t1607 * t1768 + t1608 * t1763;
t1594 = t1600 * t1770 + t1625 * t1765;
t1593 = t1600 * t1765 - t1625 * t1770;
t1592 = -t1605 * t1764 + t1606 * t1769;
t1591 = t1605 * t1769 + t1606 * t1764;
t1590 = t1592 * t1770 - t1665 * t1765;
t1589 = t1592 * t1765 + t1665 * t1770;
t1588 = -t1601 * t1762 + t1602 * t1767;
t1587 = t1601 * t1767 + t1602 * t1762;
t1586 = -t1595 * t1764 + t1596 * t1769;
t1585 = t1595 * t1769 + t1596 * t1764;
t1584 = t1586 * t1770 + t1647 * t1765;
t1583 = t1586 * t1765 - t1647 * t1770;
t1582 = -t1587 * t1763 + t1588 * t1768;
t1581 = t1587 * t1768 + t1588 * t1763;
t1580 = -t1581 * t1764 + t1582 * t1769;
t1579 = t1581 * t1769 + t1582 * t1764;
t1578 = t1580 * t1770 - t1629 * t1765;
t1577 = t1580 * t1765 + t1629 * t1770;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1740, -t1739, 0, -t1745 * t1766 + t1746 * t1771, 0, 0, 0, 0, 0, 0, 0, t1740, t1739, -t1727 * t1771 - t1728 * t1766, 0, 0, 0, 0, 0, 0, t1719 * t1766 + t1735 * t1771, t1720 * t1766 + t1737 * t1771, -t1738 * t1766 - t1741 * t1771, t1691 * t1766 - t1724 * t1771, 0, 0, 0, 0, 0, 0, t1661 * t1766 + t1680 * t1771, t1666 * t1766 + t1684 * t1771, t1650 * t1766 + t1670 * t1771, t1636 * t1766 + t1642 * t1771, 0, 0, 0, 0, 0, 0, t1619 * t1766 + t1630 * t1771, t1621 * t1766 + t1638 * t1771, t1609 * t1766 + t1614 * t1771, t1589 * t1766 + t1591 * t1771, 0, 0, 0, 0, 0, 0, t1593 * t1766 + t1599 * t1771, t1597 * t1766 + t1603 * t1771, t1583 * t1766 + t1585 * t1771, t1577 * t1766 + t1579 * t1771; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1739, -t1740, 0, t1745 * t1771 + t1746 * t1766, 0, 0, 0, 0, 0, 0, 0, -t1739, t1740, -t1727 * t1766 + t1728 * t1771, 0, 0, 0, 0, 0, 0, -t1719 * t1771 + t1735 * t1766, -t1720 * t1771 + t1737 * t1766, t1738 * t1771 - t1741 * t1766, -t1691 * t1771 - t1724 * t1766, 0, 0, 0, 0, 0, 0, -t1661 * t1771 + t1680 * t1766, -t1666 * t1771 + t1684 * t1766, -t1650 * t1771 + t1670 * t1766, -t1636 * t1771 + t1642 * t1766, 0, 0, 0, 0, 0, 0, -t1619 * t1771 + t1630 * t1766, -t1621 * t1771 + t1638 * t1766, -t1609 * t1771 + t1614 * t1766, -t1589 * t1771 + t1591 * t1766, 0, 0, 0, 0, 0, 0, -t1593 * t1771 + t1599 * t1766, -t1597 * t1771 + t1603 * t1766, -t1583 * t1771 + t1585 * t1766, -t1577 * t1771 + t1579 * t1766; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1721, t1722, 0, t1692, 0, 0, 0, 0, 0, 0, t1662, t1667, t1651, t1637, 0, 0, 0, 0, 0, 0, t1620, t1622, t1610, t1590, 0, 0, 0, 0, 0, 0, t1594, t1598, t1584, t1578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1773, -qJDD(1), 0, t1746, 0, 0, 0, 0, 0, 0, 0, t1773, qJDD(1), -t1727, 0, 0, 0, 0, 0, 0, t1735, t1737, -t1741, -t1724, 0, 0, 0, 0, 0, 0, t1680, t1684, t1670, t1642, 0, 0, 0, 0, 0, 0, t1630, t1638, t1614, t1591, 0, 0, 0, 0, 0, 0, t1599, t1603, t1585, t1579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1773, 0, t1745, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1773, t1728, 0, 0, 0, 0, 0, 0, -t1719, -t1720, t1738, -t1691, 0, 0, 0, 0, 0, 0, -t1661, -t1666, -t1650, -t1636, 0, 0, 0, 0, 0, 0, -t1619, -t1621, -t1609, -t1589, 0, 0, 0, 0, 0, 0, -t1593, -t1597, -t1583, -t1577; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1721, t1722, 0, t1692, 0, 0, 0, 0, 0, 0, t1662, t1667, t1651, t1637, 0, 0, 0, 0, 0, 0, t1620, t1622, t1610, t1590, 0, 0, 0, 0, 0, 0, t1594, t1598, t1584, t1578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1721, t1722, 0, t1692, 0, 0, 0, 0, 0, 0, t1662, t1667, t1651, t1637, 0, 0, 0, 0, 0, 0, t1620, t1622, t1610, t1590, 0, 0, 0, 0, 0, 0, t1594, t1598, t1584, t1578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1773, -qJDD(1), t1727, 0, 0, 0, 0, 0, 0, -t1735, -t1737, t1741, t1724, 0, 0, 0, 0, 0, 0, -t1680, -t1684, -t1670, -t1642, 0, 0, 0, 0, 0, 0, -t1630, -t1638, -t1614, -t1591, 0, 0, 0, 0, 0, 0, -t1599, -t1603, -t1585, -t1579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1773, -t1728, 0, 0, 0, 0, 0, 0, t1719, t1720, -t1738, t1691, 0, 0, 0, 0, 0, 0, t1661, t1666, t1650, t1636, 0, 0, 0, 0, 0, 0, t1619, t1621, t1609, t1589, 0, 0, 0, 0, 0, 0, t1593, t1597, t1583, t1577; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1748, t1744, -t1752, t1717, 0, 0, 0, 0, 0, 0, t1681, t1685, t1671, t1643, 0, 0, 0, 0, 0, 0, t1631, t1639, t1615, t1592, 0, 0, 0, 0, 0, 0, t1600, t1604, t1586, t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1743, t1749, -t1790, t1716, 0, 0, 0, 0, 0, 0, -t1694, -t1696, -t1703, t1700, 0, 0, 0, 0, 0, 0, -t1657, -t1659, -t1675, t1665, 0, 0, 0, 0, 0, 0, -t1625, -t1627, -t1647, t1629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1735, t1737, -t1741, -t1724, 0, 0, 0, 0, 0, 0, t1680, t1684, t1670, t1642, 0, 0, 0, 0, 0, 0, t1630, t1638, t1614, t1591, 0, 0, 0, 0, 0, 0, t1599, t1603, t1585, t1579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1711, t1705, t1695, t1669, 0, 0, 0, 0, 0, 0, t1653, t1664, t1635, t1606, 0, 0, 0, 0, 0, 0, t1613, t1618, t1596, t1582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1704, t1718, t1697, t1668, 0, 0, 0, 0, 0, 0, t1652, t1663, t1634, t1605, 0, 0, 0, 0, 0, 0, t1612, t1617, t1595, t1581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1694, t1696, t1703, -t1700, 0, 0, 0, 0, 0, 0, t1657, t1659, t1675, -t1665, 0, 0, 0, 0, 0, 0, t1625, t1627, t1647, -t1629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1683, t1679, t1658, t1624, 0, 0, 0, 0, 0, 0, t1633, t1641, t1608, t1588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1678, t1699, t1660, t1623, 0, 0, 0, 0, 0, 0, t1632, t1640, t1607, t1587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1657, t1659, t1675, -t1665, 0, 0, 0, 0, 0, 0, t1625, t1627, t1647, -t1629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1656, t1655, t1626, t1602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1654, t1676, t1628, t1601; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1625, t1627, t1647, -t1629;];
f_new_reg  = t1;
