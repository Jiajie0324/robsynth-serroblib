% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRRRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x38]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 03:38
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRRRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 03:36:02
% EndTime: 2019-03-10 03:37:06
% DurationCPUTime: 51.42s
% Computational Cost: add. (32727->1065), mult. (65671->1283), div. (0->0), fcn. (79395->10), ass. (0->821)
t1209 = cos(qJ(3));
t1243 = pkin(7) + pkin(8);
t745 = sin(qJ(2));
t711 = t1243 * t745;
t747 = cos(qJ(2));
t713 = t1243 * t747;
t744 = sin(qJ(3));
t519 = t1209 * t711 + t744 * t713;
t697 = -t1209 * t745 - t744 * t747;
t1267 = t697 * pkin(9) - t519;
t743 = sin(qJ(4));
t1291 = t743 * t1267;
t1208 = cos(qJ(4));
t1097 = t744 * t711;
t699 = t1209 * t713;
t1256 = -t699 + t1097;
t696 = t1209 * t747 - t744 * t745;
t514 = -t696 * pkin(9) + t1256;
t1344 = t1208 * t514;
t1354 = -t1344 + t1291;
t742 = sin(qJ(5));
t1380 = t1354 * t742;
t1390 = t1380 / 0.2e1;
t1403 = 0.2e1 * t1390;
t746 = cos(qJ(5));
t1379 = t1354 * t746;
t1391 = -t1379 / 0.2e1;
t1402 = 0.2e1 * t1391;
t741 = sin(qJ(6));
t1114 = t741 * t746;
t1207 = cos(qJ(6));
t976 = t1207 * t742;
t841 = t976 + t1114;
t921 = t1208 * t696 + t743 * t697;
t1296 = t841 * t921;
t1197 = t746 * pkin(5);
t732 = -pkin(4) - t1197;
t1320 = t732 * t1296;
t1099 = t743 * t696;
t675 = t1208 * t697;
t1257 = -t675 + t1099;
t1242 = pkin(10) + pkin(11);
t710 = t1242 * t742;
t712 = t1242 * t746;
t518 = t1207 * t710 + t741 * t712;
t812 = t518 * t1257;
t1265 = t812 / 0.2e1 - t1320 / 0.2e1;
t1299 = t742 * t921;
t1376 = pkin(5) * t1299 + t1354;
t1115 = t741 * t742;
t975 = t1207 * t746;
t840 = t975 - t1115;
t1389 = t1376 * t840;
t965 = t1389 / 0.2e1;
t1401 = t1265 + t965;
t1297 = t840 * t921;
t1319 = t732 * t1297;
t842 = t1207 * t712 - t741 * t710;
t809 = t842 * t1257;
t1266 = t809 / 0.2e1 - t1319 / 0.2e1;
t1388 = t1376 * t841;
t964 = -t1388 / 0.2e1;
t1400 = t1266 + t964;
t1396 = -t1389 / 0.2e1;
t1399 = t1396 - t1265;
t1397 = t1388 / 0.2e1;
t1398 = t1397 - t1266;
t1211 = -t746 / 0.2e1;
t737 = pkin(4) * t1211;
t1290 = t746 * t1257;
t945 = -t1290 / 0.2e1;
t1395 = pkin(10) * t945 + t737 * t921 + t1403;
t948 = -t1299 / 0.2e1;
t1292 = t742 * t1257;
t950 = -t1292 / 0.2e1;
t1394 = pkin(4) * t948 + pkin(10) * t950 + t1402;
t476 = t1344 / 0.2e1;
t947 = -t1291 / 0.2e1;
t1381 = t947 + t476;
t1392 = 0.2e1 * t1381;
t1287 = t1208 * t1267;
t1346 = t743 * t514;
t1358 = t1287 + t1346;
t1377 = t746 * t1358;
t960 = -t1377 / 0.2e1;
t1298 = t746 * t921;
t1302 = t1257 * pkin(5);
t1378 = t742 * t1358;
t1375 = -pkin(11) * t1298 + t1302 - t1378;
t1387 = qJD(3) + qJD(4);
t1009 = qJD(2) + qJD(3);
t1331 = qJD(4) + t1009;
t348 = -t1257 * t975 + t1292 * t741;
t1202 = t921 * pkin(5);
t733 = -pkin(2) * t747 - pkin(1);
t643 = -t696 * pkin(3) + t733;
t890 = -pkin(4) * t921 - pkin(10) * t1257;
t782 = t643 + t890;
t301 = t746 * t782;
t167 = -t301 + t1380;
t151 = -pkin(11) * t1290 - t167;
t790 = t151 - t1202;
t168 = t742 * t782 + t1379;
t152 = -pkin(11) * t1292 + t168;
t980 = t1207 * t152;
t74 = t741 * t790 + t980;
t827 = pkin(5) * t1292 - t1358;
t1351 = -t74 * t1257 + t827 * t1297 - t1376 * t348;
t351 = t841 * t1257;
t1119 = t741 * t152;
t127 = t1207 * t790;
t73 = -t127 + t1119;
t1350 = -t73 * t1257 + t827 * t1296 + t1376 * t351;
t1167 = t1358 * t921;
t1371 = t1257 * t1354 - t1167;
t1386 = -t168 * t1257 + t1371 * t746;
t1385 = (t1371 + t1167) * t742 - t167 * t1257;
t1328 = -t1287 / 0.2e1;
t1352 = t1328 - t1346 / 0.2e1;
t1384 = 0.2e1 * t1352;
t1374 = qJD(2) * t1392;
t1373 = qJD(2) * t1384;
t1241 = -t1358 / 0.2e1;
t1370 = (t1241 + t1358 / 0.2e1) * t742;
t1098 = t743 * t744;
t906 = pkin(2) * t1209 + pkin(3);
t714 = t1208 * t906;
t670 = pkin(2) * t1098 - t714;
t660 = -pkin(4) + t670;
t631 = t660 - t1197;
t1229 = t631 / 0.2e1;
t1001 = t1208 * pkin(3);
t731 = -t1001 - pkin(4);
t708 = t731 - t1197;
t1218 = t708 / 0.2e1;
t1306 = -t921 / 0.2e1;
t1368 = -t1344 / 0.2e1;
t901 = t1287 / 0.2e1;
t173 = t1328 + t901;
t1365 = qJD(4) * t173;
t1362 = t173 * qJD(1);
t585 = t1257 ^ 2;
t1317 = -t921 ^ 2 + t585;
t1340 = t1317 * t746;
t1361 = qJD(1) * t1340;
t1341 = t1317 * t742;
t1360 = qJD(1) * t1341;
t1007 = qJD(5) + qJD(6);
t119 = t348 * t841 - t351 * t840;
t1092 = t1007 * t119;
t1308 = t1296 * t348 - t1297 * t351;
t1333 = t1308 * qJD(1);
t1359 = t1092 - t1333;
t1325 = -t1297 / 0.2e1;
t817 = t975 / 0.2e1 - t1115 / 0.2e1;
t797 = t817 * t921;
t1323 = t1325 + t797;
t1310 = -t1257 * t348 - t1297 * t921;
t1337 = qJD(1) * t1310;
t1357 = t1007 * t1323 + t1337;
t1326 = t1296 / 0.2e1;
t819 = t1114 / 0.2e1 + t976 / 0.2e1;
t800 = t819 * t921;
t1322 = t1326 - t800;
t1311 = -t1257 * t351 + t1296 * t921;
t1336 = qJD(1) * t1311;
t1356 = t1007 * t1322 + t1336;
t1 = t1092 + t1333 + t1331 * (-t841 * t1296 + t1297 * t840);
t1349 = -t351 / 0.2e1;
t1332 = t1317 * qJD(1);
t624 = t743 * pkin(3);
t730 = pkin(10) + t624;
t1195 = pkin(11) + t730;
t683 = t1195 * t742;
t684 = t1195 * t746;
t579 = t1207 * t684 - t741 * t683;
t1330 = t1218 * t348 + t1306 * t579;
t859 = t743 * t906;
t985 = t1208 * t744;
t671 = pkin(2) * t985 + t859;
t661 = pkin(10) + t671;
t1196 = pkin(11) + t661;
t615 = t1196 * t742;
t616 = t1196 * t746;
t414 = t1207 * t616 - t741 * t615;
t1329 = t1229 * t348 + t414 * t1306;
t943 = t1290 / 0.2e1;
t1327 = -t1296 / 0.2e1;
t1324 = t1297 / 0.2e1;
t994 = -t1302 / 0.2e1;
t1003 = pkin(11) * t1299;
t1011 = qJD(4) * t921;
t913 = t1009 * t921;
t1316 = t913 + t1011;
t1200 = t1257 * pkin(4);
t1201 = pkin(10) * t921;
t397 = t1200 - t1201;
t803 = t827 * t841;
t196 = t803 / 0.2e1;
t1204 = pkin(3) * t697;
t337 = -t1204 + t397;
t326 = t742 * t337;
t1089 = t1377 + t326;
t156 = -t1003 + t1089;
t1117 = t741 * t156;
t327 = t746 * t337;
t131 = t327 + t1375;
t983 = t1207 * t131;
t821 = -t1117 / 0.2e1 + t983 / 0.2e1;
t45 = t196 + t821 - t1330;
t739 = t745 * pkin(2);
t319 = t337 + t739;
t302 = t742 * t319;
t1088 = t1377 + t302;
t155 = -t1003 + t1088;
t1118 = t741 * t155;
t303 = t746 * t319;
t130 = t303 + t1375;
t984 = t1207 * t130;
t822 = -t1118 / 0.2e1 + t984 / 0.2e1;
t31 = t196 + t822 - t1329;
t1314 = t821 + t1330;
t1313 = t822 + t1329;
t922 = t1207 * t683 + t741 * t684;
t1283 = t922 * t1306 + t1349 * t708;
t923 = t1207 * t615 + t741 * t616;
t1284 = t923 * t1306 + t1349 * t631;
t1052 = qJD(1) * t1257;
t1289 = t921 * t1052;
t1245 = t742 ^ 2;
t740 = t746 ^ 2;
t919 = t1245 / 0.2e1 - t740 / 0.2e1;
t368 = t919 * t1257;
t361 = t368 * qJD(5);
t1312 = -t1289 * t740 - t361;
t1056 = qJD(1) * t348;
t1219 = t841 / 0.2e1;
t1220 = -t840 / 0.2e1;
t165 = -t1219 * t351 + t1220 * t348;
t1091 = t1007 * t165;
t1309 = t1056 * t1297 + t1091;
t1106 = t742 * t840;
t1210 = t746 / 0.2e1;
t1212 = t742 / 0.2e1;
t751 = (t348 * t1212 + (-t741 / 0.2e1 - t841 * t1210 - t1106 / 0.2e1) * t1257) * pkin(5) - t1358 * t1220;
t1215 = t732 / 0.2e1;
t1305 = t921 / 0.2e1;
t1304 = t1257 / 0.2e1;
t1082 = t670 * t817;
t678 = t841 * qJD(6);
t1295 = t841 * qJD(5) + t678;
t1053 = qJD(1) * t921;
t900 = -t675 / 0.2e1;
t1264 = t900 + t1099 / 0.2e1;
t1285 = t1264 * qJD(5);
t234 = -t1257 * t1053 + t1285;
t1258 = -t1289 + t1285;
t1288 = qJD(6) * t1264;
t958 = t1257 * t1219;
t1286 = t1264 * qJD(1);
t1104 = t742 * t746;
t924 = qJD(2) + t1387;
t1260 = t924 * t1104;
t254 = -qJD(1) * t368 + t1260;
t1121 = t741 * t131;
t978 = t1207 * t156;
t898 = -t978 / 0.2e1;
t823 = -t1121 / 0.2e1 + t898;
t1282 = t823 - t1283;
t1122 = t741 * t130;
t979 = t1207 * t155;
t899 = -t979 / 0.2e1;
t824 = -t1122 / 0.2e1 + t899;
t1281 = t824 - t1284;
t1280 = t1007 * t414;
t1279 = t1007 * t579;
t1278 = t1007 * t842;
t1277 = -0.2e1 * t1257;
t1005 = -t740 + t1245;
t1276 = t1005 * t924;
t1213 = -t742 / 0.2e1;
t995 = pkin(5) * t1213;
t1269 = -pkin(5) * t840 * t943 - t351 * t995;
t1268 = t958 * t1197 + t348 * t995;
t997 = qJD(3) * t624;
t996 = qJD(4) * t624;
t1263 = t1007 * t921;
t1262 = t1009 * t1257;
t1259 = t1288 + t1258;
t189 = t1288 + t234;
t1255 = t1009 * t519;
t1254 = t1007 * t518;
t1002 = t1207 / 0.2e1;
t896 = t1257 * t1002;
t1253 = pkin(5) * t896 + t1269;
t1252 = t1215 * t351 + t1305 * t518;
t1251 = t1215 * t348 + t1306 * t842;
t50 = t351 * t1056 + t165 * t924;
t970 = qJD(1) * t1104;
t1250 = t368 * t924 + t585 * t970;
t136 = -t348 ^ 2 + t351 ^ 2;
t9 = qJD(1) * t136 + t119 * t924;
t502 = t840 ^ 2 - t841 ^ 2;
t92 = qJD(1) * t119 + t502 * t924;
t120 = t840 * t841 * t924 + qJD(1) * t165;
t1248 = t1007 * t922;
t1247 = t1007 * t923;
t1244 = pkin(4) / 0.2e1;
t1231 = -t1257 / 0.2e1;
t1228 = -t660 / 0.2e1;
t1227 = -t661 / 0.2e1;
t1226 = t670 / 0.2e1;
t1225 = -t671 / 0.2e1;
t1224 = t671 / 0.2e1;
t665 = t675 / 0.2e1;
t990 = t1209 * t743;
t680 = (t990 + t985) * pkin(2);
t1223 = -t680 / 0.2e1;
t905 = t1209 * t1208;
t681 = (t905 - t1098) * pkin(2);
t1222 = -t681 / 0.2e1;
t902 = -t699 / 0.2e1;
t1217 = t730 / 0.2e1;
t1216 = -t731 / 0.2e1;
t1206 = pkin(2) * t744;
t1205 = pkin(3) * t921;
t1198 = t741 * pkin(5);
t2 = -(t984 - t1118) * t921 + t1350;
t1194 = t2 * qJD(1);
t3 = (t979 + t1122) * t921 + t1351;
t1193 = t3 * qJD(1);
t4 = -(t983 - t1117) * t921 + t1350;
t1192 = t4 * qJD(1);
t5 = (t978 + t1121) * t921 + t1351;
t1191 = t5 * qJD(1);
t385 = t742 * t397;
t1090 = -t1377 - t385;
t160 = -t1090 - t1003;
t1116 = t741 * t160;
t386 = t746 * t397;
t137 = t386 + t1375;
t982 = t1207 * t137;
t6 = -(t982 - t1116) * t921 + t1350;
t1190 = t6 * qJD(1);
t1120 = t741 * t137;
t977 = t1207 * t160;
t7 = (t977 + t1120) * t921 + t1351;
t1189 = t7 * qJD(1);
t15 = (t1202 + pkin(11) * t943 + t1390 - t301 / 0.2e1 + t151 / 0.2e1) * t741;
t1188 = qJD(1) * t15;
t1004 = pkin(5) * t1290;
t806 = t827 * t348;
t85 = -t741 * t151 - t980;
t36 = t1004 * t351 - t85 * t921 - t806;
t1187 = qJD(1) * t36;
t805 = t827 * t351;
t981 = t1207 * t151;
t86 = t981 - t1119;
t37 = -t1004 * t348 + t86 * t921 - t805;
t1186 = qJD(1) * t37;
t53 = -t73 * t921 - t805;
t1185 = qJD(1) * t53;
t54 = t74 * t921 - t806;
t1184 = qJD(1) * t54;
t959 = t921 * t1222;
t847 = t1304 * t680 - t959;
t759 = (t660 / 0.2e1 + t1216) * t921 + (t1227 + t1217) * t1257 + t847;
t75 = t1391 + t1379 / 0.2e1 + t759 * t742;
t1183 = qJD(1) * t75;
t932 = t1226 + t1228;
t781 = (t1227 + t1224) * t1257 - t932 * t921;
t858 = pkin(4) * t1305 + pkin(10) * t1304;
t760 = t781 + t858;
t79 = t742 * t760;
t1182 = qJD(1) * t79;
t936 = t1325 + t1324;
t99 = -(t1326 + t1327) * t841 - t936 * t840;
t1181 = qJD(1) * t99;
t1000 = t1207 * pkin(5);
t829 = -t127 / 0.2e1 + t1000 * t1305;
t17 = t981 / 0.2e1 + t829;
t1178 = t17 * qJD(1);
t1163 = t923 * t1257;
t1161 = t414 * t1257;
t1159 = t922 * t1257;
t1157 = t579 * t1257;
t59 = -t303 * t921 + t1385;
t1155 = t59 * qJD(1);
t60 = t1088 * t921 + t1386;
t1154 = t60 * qJD(1);
t61 = -t327 * t921 + t1385;
t1153 = t61 * qJD(1);
t62 = t1089 * t921 + t1386;
t1152 = t62 * qJD(1);
t1150 = t631 * t1296;
t1148 = t631 * t1297;
t1147 = t631 * t840;
t1146 = t631 * t841;
t65 = -t386 * t921 + (-t167 + t1380) * t1257;
t1145 = t65 * qJD(1);
t66 = (-t168 + t1379) * t1257 - (t1090 + t1377) * t921;
t1144 = t66 * qJD(1);
t1143 = t660 * t921;
t1142 = t661 * t1257;
t1141 = t680 * t746;
t1135 = t696 * t697;
t1133 = t708 * t1296;
t1131 = t708 * t1297;
t1130 = t708 * t840;
t1129 = t708 * t841;
t1124 = t732 * t840;
t1123 = t732 * t841;
t1107 = t742 * t681;
t1105 = t742 * t841;
t332 = t1007 * t502;
t561 = t1147 / 0.2e1;
t669 = pkin(5) * t1105;
t1083 = t561 + t669;
t415 = t1295 * t840;
t942 = t681 * t1211;
t1081 = t741 * t1107 / 0.2e1 + t1207 * t942;
t655 = t671 * qJD(4);
t672 = t680 * qJD(3);
t1080 = -t672 - t655;
t676 = t840 * qJD(6);
t1079 = qJD(5) * t840 + t676;
t106 = t1292 * t1358 - t167 * t921;
t1077 = qJD(1) * t106;
t107 = -t1290 * t1358 + t168 * t921;
t1076 = qJD(1) * t107;
t164 = t936 * t841;
t1068 = qJD(1) * t164;
t933 = t1306 + t1305;
t187 = t1005 * t933;
t1066 = qJD(1) * t187;
t436 = t643 * t1257;
t644 = t739 - t1204;
t230 = -t644 * t921 + t436;
t1063 = qJD(1) * t230;
t437 = t643 * t921;
t231 = t1257 * t644 + t437;
t1062 = qJD(1) * t231;
t250 = -t1204 * t921 - t436;
t1059 = qJD(1) * t250;
t251 = t1204 * t1257 - t437;
t1058 = qJD(1) * t251;
t347 = t933 * t1104;
t1057 = qJD(1) * t347;
t384 = t1005 * t585;
t1054 = qJD(1) * t384;
t614 = t902 + t699 / 0.2e1;
t1051 = qJD(1) * t614;
t1050 = qJD(1) * t643;
t1049 = qJD(1) * t733;
t1048 = qJD(1) * t747;
t1047 = qJD(2) * t840;
t1046 = qJD(2) * t841;
t1045 = qJD(2) * t742;
t1044 = qJD(2) * t745;
t1043 = qJD(2) * t746;
t1042 = qJD(2) * t747;
t1041 = qJD(3) * t708;
t1040 = qJD(3) * t731;
t1039 = qJD(3) * t733;
t1038 = qJD(4) * t1257;
t1037 = qJD(4) * t841;
t1036 = qJD(4) * t732;
t1035 = qJD(4) * t742;
t1034 = qJD(4) * t746;
t1033 = qJD(5) * t742;
t738 = qJD(5) * t746;
t208 = (t1219 + t819) * t921;
t204 = t208 * qJD(1);
t209 = t1327 - t800;
t205 = t209 * qJD(1);
t210 = (t1220 - t817) * t921;
t206 = t210 * qJD(1);
t211 = t1324 + t797;
t207 = t211 * qJD(1);
t935 = t1304 + t1231;
t263 = t935 * t840;
t1029 = t263 * qJD(1);
t265 = t935 * t841;
t1028 = t265 * qJD(1);
t369 = t935 * t742;
t1027 = t369 * qJD(1);
t1026 = t1299 * qJD(1);
t934 = 0.2e1 * t1306;
t372 = t934 * t742;
t363 = t372 * qJD(1);
t375 = t935 * t746;
t1025 = t375 * qJD(1);
t1024 = t1298 * qJD(1);
t379 = t934 * t746;
t366 = t379 * qJD(1);
t503 = t696 ^ 2 - t697 ^ 2;
t1023 = t503 * qJD(1);
t559 = -t696 * t739 - t697 * t733;
t1018 = t559 * qJD(1);
t560 = t696 * t733 - t697 * t739;
t1017 = t560 * qJD(1);
t583 = t665 + t900;
t1014 = t583 * qJD(1);
t723 = -t745 ^ 2 + t747 ^ 2;
t1010 = t723 * qJD(1);
t999 = pkin(1) * t745 * qJD(1);
t998 = pkin(1) * t1048;
t993 = -t624 / 0.2e1;
t804 = t827 * t840;
t195 = t804 / 0.2e1;
t992 = t195 + t1268;
t991 = t746 * t1208;
t973 = t921 * t1050;
t972 = t1257 * t1050;
t971 = t740 * t1052;
t969 = qJD(5) * t921 * t1257;
t968 = t696 * t1049;
t967 = t697 * t1049;
t724 = t742 * t738;
t966 = t745 * t1048;
t706 = t731 * t1212;
t955 = -t1120 / 0.2e1;
t951 = t351 * t1212;
t949 = t1299 / 0.2e1;
t944 = t1298 / 0.2e1;
t941 = -t302 / 0.2e1 + t960;
t940 = t1377 / 0.2e1 + t385 / 0.2e1;
t939 = t960 - t326 / 0.2e1;
t931 = t1215 + t1218;
t930 = t1209 * qJD(2);
t929 = t1209 * qJD(3);
t928 = t1208 * qJD(3);
t927 = t1208 * qJD(4);
t926 = t1207 * qJD(5);
t925 = t1207 * qJD(6);
t915 = t1009 * t841;
t912 = t1009 * t746;
t911 = -qJD(5) + t1053;
t910 = -t1001 / 0.2e1;
t617 = t1130 / 0.2e1;
t242 = t617 + t561 + t1081;
t641 = t1124 / 0.2e1;
t238 = t641 + t561 + t1082;
t909 = t1208 * t1115;
t907 = t1257 * t970;
t904 = t1208 * t1207;
t903 = -t991 / 0.2e1;
t897 = -t977 / 0.2e1;
t893 = t624 / 0.2e1 + t1224;
t892 = t1244 + t932;
t891 = t1387 * t624;
t888 = -0.2e1 * t907;
t887 = 0.2e1 * t907;
t885 = t1222 + t1216 + t1228;
t883 = qJD(6) - t911;
t880 = t921 * t907;
t874 = -t1142 + t1143;
t873 = -t1257 * t730 + t731 * t921;
t11 = t751 + t1281;
t439 = t669 + t1147;
t872 = -t11 * qJD(1) + t439 * qJD(2);
t845 = -t840 * t1211 - t1105 / 0.2e1;
t851 = t841 * t1241;
t750 = (t1257 * t845 + t896 - t951) * pkin(5) - t851;
t12 = t750 + t1313;
t668 = pkin(5) * t1106;
t438 = -t668 + t1146;
t871 = -t12 * qJD(1) + t438 * qJD(2);
t853 = t1223 + t893;
t458 = t853 * t746;
t761 = t730 * t1231 - t921 * t1216 + (t1208 * t1305 + t1304 * t743) * pkin(3);
t754 = t761 + t858;
t87 = t742 * t754;
t870 = qJD(1) * t87 - qJD(2) * t458;
t869 = t1257 * t911;
t868 = -t905 / 0.2e1;
t867 = -t904 / 0.2e1;
t169 = t476 + t1368;
t866 = -qJD(1) * t169 + qJD(2) * t680;
t802 = t1291 / 0.2e1;
t171 = t947 + t802;
t865 = -qJD(1) * t171 - qJD(2) * t624;
t172 = t1368 + t802 + t1381;
t864 = qJD(1) * t172 + qJD(2) * t671;
t860 = -t714 / 0.2e1 + t910;
t626 = pkin(2) * t868 - t860;
t863 = t626 * qJD(2) - t1362;
t862 = -qJD(2) * t670 - t1362;
t177 = t901 + t1346 / 0.2e1 + t1352;
t861 = -qJD(1) * t177 + qJD(2) * t681;
t857 = -t1201 / 0.2e1 + t1200 / 0.2e1;
t850 = -t1159 / 0.2e1 + t1133 / 0.2e1;
t849 = -t1157 / 0.2e1 + t1131 / 0.2e1;
t848 = t1228 * t1257 + t1306 * t661;
t846 = t1216 * t1257 - t1217 * t921;
t786 = -t803 / 0.2e1;
t28 = t786 + t1313;
t839 = qJD(1) * t28 - t1046 * t631;
t787 = -t804 / 0.2e1;
t29 = t787 + t1281;
t838 = qJD(1) * t29 - t1047 * t631;
t756 = t1396 - t1163 / 0.2e1 + t1150 / 0.2e1 - t351 * t1223 + t681 * t1326;
t33 = t965 + t756 - t850;
t837 = -qJD(1) * t33 + t1047 * t680;
t755 = t1397 - t1161 / 0.2e1 + t1148 / 0.2e1 + t348 * t1223 - t840 * t959;
t35 = t964 + t755 - t849;
t836 = -qJD(1) * t35 - t1046 * t680;
t753 = -t1225 * t351 + t1231 * t923 + t1396 + (-t1226 + t1229) * t1296;
t39 = t753 + t1401;
t835 = -qJD(1) * t39 + t1047 * t671;
t752 = t1225 * t348 + t1229 * t1297 + t1231 * t414 + t1325 * t670 + t1397;
t41 = t752 + t1400;
t834 = -qJD(1) * t41 - t1046 * t671;
t816 = t848 * t746;
t96 = -t303 / 0.2e1 - t816 + t1370;
t833 = -qJD(1) * t96 - t1045 * t660;
t771 = t742 * t848 + t960;
t94 = t771 - t941;
t832 = -qJD(1) * t94 - t1043 * t660;
t82 = t746 * t760;
t831 = -qJD(1) * t82 - t1045 * t671;
t78 = t1390 - t1380 / 0.2e1 + t759 * t746;
t830 = -qJD(1) * t78 - t1045 * t680;
t828 = t910 + t1244 + t1216;
t826 = t857 * t746;
t820 = -t1116 / 0.2e1 + t982 / 0.2e1;
t815 = t846 * t746;
t19 = t751 + t1282;
t227 = t681 * t817 + t1083 + t617;
t496 = t669 + t1130;
t808 = -t19 * qJD(1) + t227 * qJD(2) + t496 * qJD(3);
t20 = t750 + t1314;
t799 = t819 * t681;
t240 = -(t1218 + t1229) * t841 - t799;
t225 = t668 + t240;
t495 = -t668 + t1129;
t807 = -t20 * qJD(1) - t225 * qJD(2) + t495 * qJD(3);
t801 = t1316 * t1257;
t798 = t819 * t670;
t42 = t786 + t1314;
t794 = qJD(1) * t42 + qJD(2) * t240 - t1041 * t841;
t562 = -t1147 / 0.2e1;
t241 = -t1130 / 0.2e1 + t562 + t1081;
t43 = t787 + t1282;
t793 = qJD(1) * t43 + qJD(2) * t241 - t1041 * t840;
t770 = t742 * t846 + t960;
t102 = t770 - t939;
t447 = t885 * t746;
t792 = -qJD(1) * t102 + qJD(2) * t447 - t1040 * t746;
t104 = -t327 / 0.2e1 - t815 + t1370;
t446 = t885 * t742;
t791 = -qJD(1) * t104 + qJD(2) * t446 - t1040 * t742;
t356 = t853 * t840;
t749 = t1396 + t922 * t1231 + t1296 * t1218 - t351 * t993 - (-t741 * t991 - t742 * t904) * t1205 / 0.2e1;
t56 = t749 + t1401;
t785 = -qJD(1) * t56 + qJD(2) * t356 + t840 * t997;
t358 = t853 * t841;
t748 = t1397 + t579 * t1231 + t1297 * t1218 + t348 * t993 + (t746 * t904 - t909) * t1205 / 0.2e1;
t58 = t748 + t1400;
t784 = -qJD(1) * t58 - qJD(2) * t358 - t841 * t997;
t457 = t853 * t742;
t90 = t746 * t754;
t783 = -qJD(1) * t90 - qJD(2) * t457 - t742 * t997;
t236 = -(t1215 + t1229) * t841 + t798;
t221 = t668 + t236;
t758 = t820 + t1251;
t25 = -t851 + (-t951 + (t1002 + t845) * t1257) * pkin(5) + t758;
t764 = (t741 * t903 + t742 * t867) * pkin(3);
t401 = -t841 * t931 + t764;
t338 = t668 + t401;
t557 = -t668 + t1123;
t776 = t25 * qJD(1) + t221 * qJD(2) + t338 * qJD(3) - t557 * qJD(4);
t223 = t1083 + t641 - t1082;
t757 = t955 + t897 + t1252;
t24 = t757 + t751;
t763 = (t746 * t867 + t909 / 0.2e1) * pkin(3);
t402 = -t840 * t931 + t763;
t339 = -t669 + t402;
t558 = t669 + t1124;
t775 = t24 * qJD(1) - t223 * qJD(2) + t339 * qJD(3) - t558 * qJD(4);
t774 = t742 * t857 + t960;
t563 = t1146 / 0.2e1;
t618 = t1129 / 0.2e1;
t243 = t618 + t563 - t799;
t642 = t1123 / 0.2e1;
t239 = t642 + t563 + t798;
t108 = t774 + t940;
t453 = t892 * t746;
t625 = t828 * t746;
t769 = pkin(4) * t1034 - qJD(1) * t108 + qJD(2) * t453 + qJD(3) * t625;
t110 = -t386 / 0.2e1 - t826;
t452 = t892 * t742;
t623 = t828 * t742;
t768 = pkin(4) * t1035 - qJD(1) * t110 + qJD(2) * t452 + qJD(3) * t623;
t46 = t786 + t758;
t767 = t46 * qJD(1) + t236 * qJD(2) + t401 * qJD(3) - t1036 * t841;
t237 = -t1124 / 0.2e1 + t562 + t1082;
t47 = t787 + t757;
t766 = t47 * qJD(1) + t237 * qJD(2) + t402 * qJD(3) - t1036 * t840;
t765 = -t1142 / 0.2e1 + t1143 / 0.2e1 + t847;
t762 = t195 + t897 - t1252;
t403 = t641 + t617 + t763;
t404 = t642 + t618 + t764;
t49 = t196 + t820 - t1251;
t736 = pkin(4) * t1213;
t721 = t742 * t996;
t709 = t1005 * qJD(5);
t707 = t731 * t1210;
t673 = t681 * qJD(3);
t659 = t841 * t996;
t658 = t840 * t996;
t654 = t670 * qJD(4);
t649 = t742 * t672;
t640 = t742 * t655;
t630 = t660 * t1210;
t629 = t660 * t1212;
t628 = pkin(3) * t903 + t707 + t737;
t627 = t742 * t910 + t706 + t736;
t610 = qJD(1) * t1135;
t606 = t841 * t672;
t605 = t840 * t672;
t602 = (t868 + t1098) * pkin(2) + t860;
t601 = t993 - t859 / 0.2e1 + (-t985 - t990 / 0.2e1) * pkin(2);
t600 = t1009 * t697;
t599 = t1009 * t696;
t594 = t841 * t655;
t593 = t840 * t655;
t576 = t583 * qJD(4);
t521 = 0.2e1 * t902 + t1097;
t501 = t724 * t1277;
t459 = -t1141 / 0.2e1 - t893 * t746;
t456 = t1212 * t680 + t742 * t893;
t455 = t1210 * t670 + t630 + t737;
t454 = t1212 * t670 + t629 + t736;
t451 = -t1099 + 0.2e1 * t665;
t449 = t707 + t630 + t942;
t448 = t706 + t629 - t1107 / 0.2e1;
t396 = t888 - t1276;
t395 = t887 + t1276;
t380 = 0.2e1 * t943;
t378 = -t1298 / 0.2e1 + t944;
t373 = t949 + t948;
t357 = t1219 * t680 + t841 * t893;
t355 = t1220 * t680 - t840 * t893;
t346 = t742 * t944 + t746 * t949;
t343 = t738 + t366;
t342 = -t363 - t1033;
t341 = t669 + t403;
t340 = -t668 + t404;
t316 = t724 + t1057;
t315 = t724 - t1057;
t266 = 0.2e1 * t958;
t264 = t1257 * t840;
t229 = t1331 * t1264;
t228 = t669 + t242;
t226 = -t668 + t243;
t224 = t669 + t238;
t222 = -t668 + t239;
t219 = qJD(4) * t451 - t1262;
t188 = t1245 * t1306 + t1305 * t740 - t919 * t921;
t186 = -t205 - t1295;
t185 = t204 - t1295;
t184 = -t207 + t1079;
t183 = t206 + t1079;
t182 = -t709 - t1066;
t181 = -t709 + t1066;
t163 = 0.2e1 * t1297 * t1219;
t159 = (t1262 + t1038) * t921;
t138 = -qJD(4) * t347 + t1312;
t133 = t1068 + t415;
t132 = -t1068 + t415;
t122 = qJD(4) * t187 + t501 + 0.2e1 * t880;
t116 = -qJD(4) * t369 + qJD(5) * t379 - t1361;
t115 = -qJD(4) * t375 - qJD(5) * t372 + t1360;
t114 = qJD(4) * t346 - t361 + (t742 * t912 + t971) * t921;
t111 = -t1378 + t386 / 0.2e1 - t826;
t109 = t774 - t940;
t105 = -t1378 + t327 / 0.2e1 - t815;
t103 = t770 + t939;
t101 = qJD(4) * t1292 + qJD(5) * t378 + t1262 * t742 + t1361;
t100 = qJD(4) * t380 + qJD(5) * t373 + t1257 * t912 - t1360;
t97 = -t1378 + t303 / 0.2e1 - t816;
t95 = t771 + t941;
t91 = qJD(4) * t188 - t1005 * t913 + t501 - 0.2e1 * t880;
t89 = t746 * t761 + t1395;
t88 = t742 * t761 + t1394;
t84 = t332 - t1181;
t83 = t332 + t1181;
t81 = t746 * t781 + t1395;
t80 = t742 * t781 + t1394;
t77 = t730 * t945 + t731 * t944 + t746 * t765 + t1403;
t76 = t706 * t921 + t730 * t950 + t742 * t765 + t1402;
t72 = -qJD(4) * t210 + t1009 * t211 - t1053 * t351;
t71 = -qJD(4) * t208 + t1009 * t209 + t1053 * t348;
t70 = -qJD(4) * t265 - t1007 * t211 - t1337;
t69 = -qJD(4) * t263 - t1007 * t209 - t1336;
t68 = t1323 * t1331 - t351 * t883;
t67 = t1322 * t1331 + t348 * t883;
t64 = qJD(4) * t266 + t1257 * t915 + t1357;
t63 = qJD(4) * t264 + t1262 * t840 + t1356;
t57 = t748 + t1398;
t55 = t749 + t1399;
t52 = -qJD(4) * t164 + t1309;
t48 = t955 + t762;
t44 = t195 + t823 + t1283;
t40 = t752 + t1398;
t38 = t753 + t1399;
t34 = t1397 + t755 + t849;
t32 = t1396 + t756 + t850;
t30 = t195 + t824 + t1284;
t27 = (t994 - t137 / 0.2e1) * t741 + t762 + t1268;
t26 = t1000 * t1304 + t1269 + t49;
t23 = qJD(4) * t163 + (t915 - t1056) * t1297 + t1091;
t22 = t898 + (t994 - t131 / 0.2e1) * t741 + t992 + t1283;
t21 = t1253 + t45;
t18 = t1119 - t981 / 0.2e1 + t829;
t16 = t1198 * t921 + t85;
t14 = t899 + (t994 - t130 / 0.2e1) * t741 + t992 + t1284;
t13 = t1253 + t31;
t8 = qJD(4) * t99 + t1359;
t10 = [0, 0, 0, t745 * t1042, t723 * qJD(2), 0, 0, 0, -pkin(1) * t1044, -pkin(1) * t1042, -t1009 * t1135, t1009 * t503, 0, 0, 0, qJD(2) * t559 - t1039 * t697, qJD(2) * t560 + t1039 * t696, t801, -t1331 * t1317, 0, 0, 0, qJD(2) * t230 - qJD(3) * t250 + t1038 * t643, qJD(2) * t231 - qJD(3) * t251 + t1011 * t643, -t585 * t724 + t740 * t801, -0.2e1 * t1290 * t1316 * t742 + qJD(5) * t384, t1331 * t1340 + t742 * t969, -t1331 * t1341 + t746 * t969, -t159, qJD(2) * t59 + qJD(3) * t61 + qJD(4) * t65 + qJD(5) * t107, qJD(2) * t60 + qJD(3) * t62 + qJD(4) * t66 + qJD(5) * t106 (t1007 * t351 - t1297 * t1331) * t348, t1007 * t136 + t1308 * t1331, t1263 * t351 + t1310 * t1331, -t1263 * t348 + t1311 * t1331, -t159, qJD(2) * t2 + qJD(3) * t4 + qJD(4) * t6 + qJD(5) * t36 + qJD(6) * t54, qJD(2) * t3 + qJD(3) * t5 + qJD(4) * t7 + qJD(5) * t37 + qJD(6) * t53; 0, 0, 0, t966, t1010, t1042, -t1044, 0, -pkin(7) * t1042 - t999, pkin(7) * t1044 - t998, -t610, t1023, t599, t600, 0, qJD(2) * t1256 + t521 * qJD(3) + t1018, t1017 + t1255, t1289, -t1332, t1316, t219, 0, -qJD(2) * t1354 + t1387 * t1392 + t1063, -qJD(2) * t1358 + t1384 * t1387 + t1062, t114, t91, t101, t100, t234, t1155 + (t742 * t874 - t1379) * qJD(2) + t76 * qJD(3) + t80 * qJD(4) + t97 * qJD(5), t1154 + (t746 * t874 + t1380) * qJD(2) + t77 * qJD(3) + t81 * qJD(4) + t95 * qJD(5), t23, t1, t64, t63, t189, t1194 + (t1150 - t1163 - t1389) * qJD(2) + t32 * qJD(3) + t38 * qJD(4) + t13 * qJD(5) + t31 * qJD(6), t1193 + (t1148 - t1161 + t1388) * qJD(2) + t34 * qJD(3) + t40 * qJD(4) + t14 * qJD(5) + t30 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t610, t1023, t599, t600, 0, t521 * qJD(2) + qJD(3) * t1256 - t967, t968 + t1255, t1289, -t1332, t1316, t219, 0, -qJD(3) * t1354 + qJD(4) * t1392 - t1059 + t1374, -qJD(3) * t1358 + qJD(4) * t1384 - t1058 + t1373, t114, t91, t101, t100, t234, t1153 + t76 * qJD(2) + (t742 * t873 - t1379) * qJD(3) + t88 * qJD(4) + t105 * qJD(5), t1152 + t77 * qJD(2) + (t746 * t873 + t1380) * qJD(3) + t89 * qJD(4) + t103 * qJD(5), t23, t1, t64, t63, t189, t1192 + t32 * qJD(2) + (t1133 - t1159 - t1389) * qJD(3) + t55 * qJD(4) + t21 * qJD(5) + t45 * qJD(6), t1191 + t34 * qJD(2) + (t1131 - t1157 + t1388) * qJD(3) + t57 * qJD(4) + t22 * qJD(5) + t44 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1289, -t1332, t1316, t1009 * t451 - t1038, 0, qJD(3) * t1392 - qJD(4) * t1354 + t1374 + t972, qJD(3) * t1384 - qJD(4) * t1358 + t1373 + t973, -t361 - (-t1034 * t742 - t971) * t921 + t1009 * t346, t501 + t1009 * t188 - (qJD(4) * t1005 + t887) * t921, t1009 * t1292 + t1035 * t1257 + t1361, t1009 * t380 + t1034 * t1257 - t1360, t1258, t1145 + t80 * qJD(2) + t88 * qJD(3) + (t742 * t890 - t1379) * qJD(4) + t111 * qJD(5), t1144 + t81 * qJD(2) + t89 * qJD(3) + (t746 * t890 + t1380) * qJD(4) + t109 * qJD(5) (t1037 - t1056) * t1297 + t1009 * t163 + t1091, t1, t1009 * t266 + t1037 * t1257 + t1357, t1009 * t264 + t1038 * t840 + t1356, t1259, t1190 + t38 * qJD(2) + t55 * qJD(3) + (-t1389 - t812 + t1320) * qJD(4) + t26 * qJD(5) + t49 * qJD(6), t1189 + t40 * qJD(2) + t57 * qJD(3) + (t1388 - t809 + t1319) * qJD(4) + t27 * qJD(5) + t48 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1250, t1260 * t1277 + t1054, t1009 * t378 + t742 * t869, t1009 * t373 + t746 * t869, t229, qJD(2) * t97 + qJD(3) * t105 + qJD(4) * t111 - qJD(5) * t168 + t1076, qJD(2) * t95 + qJD(3) * t103 + qJD(4) * t109 + qJD(5) * t167 + t1077, t50, t9, t68, t67, t229, qJD(2) * t13 + qJD(3) * t21 + qJD(4) * t26 + qJD(5) * t85 + qJD(6) * t16 + t1187, qJD(2) * t14 + qJD(3) * t22 + qJD(4) * t27 - qJD(5) * t86 + qJD(6) * t18 + t1186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, t9, t68, t67, t229, qJD(2) * t31 + qJD(3) * t45 + qJD(4) * t49 + qJD(5) * t16 - qJD(6) * t74 + t1184, qJD(2) * t30 + qJD(3) * t44 + qJD(4) * t48 + qJD(5) * t18 + qJD(6) * t73 + t1185; 0, 0, 0, -t966, -t1010, 0, 0, 0, t999, t998, t610, -t1023, 0, 0, 0, qJD(3) * t614 - t1018, -t1017, -t1289, t1332, 0, -t576, 0, qJD(3) * t169 - qJD(4) * t172 - t1063, qJD(3) * t177 - t1062 + t1365, t138, t122, t116, t115, -t234, qJD(3) * t75 + qJD(4) * t79 + qJD(5) * t96 - t1155, qJD(3) * t78 + qJD(4) * t82 + qJD(5) * t94 - t1154, t52, t8, t70, t69, -t189, qJD(3) * t33 + qJD(4) * t39 - qJD(5) * t12 - qJD(6) * t28 - t1194, qJD(3) * t35 + qJD(4) * t41 - qJD(5) * t11 - qJD(6) * t29 - t1193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t1206, -pkin(2) * t929, 0, 0, 0, 0, 0, t1080, -t673 + t654, t724, -t709, 0, 0, 0, t1033 * t660 + t1080 * t746, t660 * t738 + t640 + t649, t415, t332, 0, 0, 0, qJD(5) * t438 + t631 * t678 - t593 - t605, qJD(5) * t439 + t631 * t676 + t594 + t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1009 * t1206 + t1051 (-t930 - t929) * pkin(2), 0, 0, 0, 0, 0, qJD(4) * t601 - t672 - t866, qJD(4) * t602 - t673 - t861, t724, -t709, 0, 0, 0, qJD(4) * t459 + qJD(5) * t448 - t1009 * t1141 + t1183, qJD(4) * t456 + qJD(5) * t449 + t649 - t830, t415, t332, 0, 0, 0, qJD(4) * t355 + qJD(5) * t226 + qJD(6) * t243 - t605 - t837, qJD(4) * t357 + qJD(5) * t228 + qJD(6) * t242 + t606 - t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1014, 0, qJD(3) * t601 - t655 - t864, qJD(3) * t602 + t654 - t862, t315, t181, -t1027, -t1025, 0, t1182 + qJD(3) * t459 + qJD(5) * t454 + (-qJD(2) - qJD(4)) * t746 * t671, qJD(3) * t456 + qJD(5) * t455 + t640 - t831, t132, t83, -t1028, -t1029, 0, qJD(3) * t355 + qJD(5) * t222 + qJD(6) * t239 - t593 - t835, qJD(3) * t357 + qJD(5) * t224 + qJD(6) * t238 + t594 - t834; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t396, t343, t342, -t1286, qJD(3) * t448 + qJD(4) * t454 - t661 * t738 - t833, qJD(3) * t449 + qJD(4) * t455 + t1033 * t661 - t832, t120, t92, t184, t186, -t1286, t226 * qJD(3) + t222 * qJD(4) - t1280 + t871, t228 * qJD(3) + t224 * qJD(4) + t1247 + t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, t92, t184, t186, -t1286, qJD(3) * t243 + qJD(4) * t239 - t1280 - t839, qJD(3) * t242 + qJD(4) * t238 + t1247 - t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t610, -t1023, 0, 0, 0, -qJD(2) * t614 + t967, -t968, -t1289, t1332, 0, -t576, 0, -qJD(2) * t169 - qJD(4) * t171 + t1059, -qJD(2) * t177 + t1058 + t1365, t138, t122, t116, t115, -t234, -qJD(2) * t75 + qJD(4) * t87 + qJD(5) * t104 - t1153, -qJD(2) * t78 + qJD(4) * t90 + qJD(5) * t102 - t1152, t52, t8, t70, t69, -t189, -qJD(2) * t33 + qJD(4) * t56 - qJD(5) * t20 - qJD(6) * t42 - t1192, -qJD(2) * t35 + qJD(4) * t58 - qJD(5) * t19 - qJD(6) * t43 - t1191; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t1206 - t1051, pkin(2) * t930, 0, 0, 0, 0, 0, t866 - t996, -qJD(4) * t626 + t861, t724, -t709, 0, 0, 0, -qJD(4) * t458 - qJD(5) * t446 + t1043 * t680 - t1183, qJD(4) * t457 - qJD(5) * t447 + t830, t415, t332, 0, 0, 0, -qJD(4) * t356 - qJD(5) * t225 - qJD(6) * t240 + t837, qJD(4) * t358 + qJD(5) * t227 - qJD(6) * t241 + t836; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t996, -pkin(3) * t927, t724, -t709, 0, 0, 0, t1033 * t731 - t746 * t996, t731 * t738 + t721, t415, t332, 0, 0, 0, qJD(5) * t495 + t678 * t708 - t658, qJD(5) * t496 + t676 * t708 + t659; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1014, 0, -t891 + t865 (-t928 - t927) * pkin(3) - t863, t315, t181, -t1027, -t1025, 0, qJD(5) * t627 - t746 * t891 + t870, qJD(5) * t628 + t721 - t783, t132, t83, -t1028, -t1029, 0, qJD(5) * t340 + qJD(6) * t404 - t658 - t785, qJD(5) * t341 + qJD(6) * t403 + t659 - t784; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t396, t343, t342, -t1286, qJD(4) * t627 - t730 * t738 - t791, qJD(4) * t628 + t1033 * t730 - t792, t120, t92, t184, t186, -t1286, t340 * qJD(4) - t1279 + t807, t341 * qJD(4) + t1248 + t808; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, t92, t184, t186, -t1286, qJD(4) * t404 - t1279 - t794, qJD(4) * t403 + t1248 - t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1289, t1332, 0, t1009 * t583, 0, qJD(2) * t172 + qJD(3) * t171 - t972, -t1009 * t173 - t973, t1009 * t347 + t1312, -t1009 * t187 - t888 * t921 + t501, -qJD(5) * t1298 + t1009 * t369 - t1361, qJD(5) * t1299 + t1009 * t375 + t1360, -t1258, -qJD(2) * t79 - qJD(3) * t87 + qJD(5) * t110 - t1145, -qJD(2) * t82 - qJD(3) * t90 + qJD(5) * t108 - t1144, t1009 * t164 + t1309, -t1009 * t99 + t1359, t1007 * t210 + t1009 * t265 - t1337, t1007 * t208 + t1009 * t263 - t1336, -t1259, -qJD(2) * t39 - qJD(3) * t56 - qJD(5) * t25 - qJD(6) * t46 - t1190, -qJD(2) * t41 - qJD(3) * t58 - qJD(5) * t24 - qJD(6) * t47 - t1189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, t864 + t997, qJD(3) * t626 + t862, t316, t182, t1027, t1025, 0, qJD(3) * t458 - qJD(5) * t452 + t1043 * t671 - t1182, -qJD(3) * t457 - qJD(5) * t453 + t831, t133, t84, t1028, t1029, 0, qJD(3) * t356 - qJD(5) * t221 - qJD(6) * t236 + t835, -qJD(3) * t358 + qJD(5) * t223 - qJD(6) * t237 + t834; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1014, 0, -t865 + t997, pkin(3) * t928 + t863, t316, t182, t1027, t1025, 0, -qJD(5) * t623 + t746 * t997 - t870, -qJD(5) * t625 + t783, t133, t84, t1028, t1029, 0, -qJD(5) * t338 - qJD(6) * t401 + t785, -qJD(5) * t339 - qJD(6) * t402 + t784; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t724, -t709, 0, 0, 0, -pkin(4) * t1033, -pkin(4) * t738, t415, t332, 0, 0, 0, qJD(5) * t557 + t678 * t732, qJD(5) * t558 + t676 * t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t396, t738 - t1024, t1026 - t1033, -t1286, -pkin(10) * t738 - t768, pkin(10) * t1033 - t769, t120, t92, t183, t185, -t1286, -t1278 - t776, -t775 + t1254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, t92, t183, t185, -t1286, -t1278 - t767, -t766 + t1254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1250, 0.2e1 * t1257 * t1260 - t1054, qJD(4) * t1298 - t1009 * t379 - t1289 * t742, -qJD(4) * t1299 + t1009 * t372 - t1289 * t746, t229, -qJD(2) * t96 - qJD(3) * t104 - qJD(4) * t110 - t1076, -qJD(2) * t94 - qJD(3) * t102 - qJD(4) * t108 - t1077, -t50, -t9, t72, t71, t229, qJD(2) * t12 + qJD(3) * t20 + qJD(4) * t25 + qJD(6) * t15 - t1187, qJD(2) * t11 + qJD(3) * t19 + qJD(4) * t24 + qJD(6) * t17 - t1186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, t395, -t366, t363, t1286, qJD(3) * t446 + qJD(4) * t452 + t833, qJD(3) * t447 + qJD(4) * t453 + t832, -t120, -t92, t207, t205, t1286, qJD(3) * t225 + qJD(4) * t221 - t871, -qJD(3) * t227 - qJD(4) * t223 - t872; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, t395, -t366, t363, t1286, qJD(4) * t623 + t791, qJD(4) * t625 + t792, -t120, -t92, t207, t205, t1286, qJD(4) * t338 - t807, qJD(4) * t339 - t808; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, t395, t1024, -t1026, t1286, t768, t769, -t120, -t92, -t206, -t204, t1286, t776, t775; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t1198, -pkin(5) * t925; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1007 * t1198 + t1188, t1178 + (-t926 - t925) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, -t9, t72, t71, t229, qJD(2) * t28 + qJD(3) * t42 + qJD(4) * t46 - qJD(5) * t15 - t1184, qJD(2) * t29 + qJD(3) * t43 + qJD(4) * t47 - qJD(5) * t17 - t1185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t120, -t92, t207, t205, t1286, qJD(3) * t240 + qJD(4) * t236 + t839, qJD(3) * t241 + qJD(4) * t237 + t838; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t120, -t92, t207, t205, t1286, qJD(4) * t401 + t794, qJD(4) * t402 + t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t120, -t92, -t206, -t204, t1286, t767, t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t1198 - t1188, pkin(5) * t926 - t1178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t10;
