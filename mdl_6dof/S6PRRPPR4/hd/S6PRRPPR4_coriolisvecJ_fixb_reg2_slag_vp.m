% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRPPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRPPR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPPR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:16:26
% EndTime: 2019-03-08 21:16:41
% DurationCPUTime: 5.29s
% Computational Cost: add. (4313->462), mult. (11131->629), div. (0->0), fcn. (8085->10), ass. (0->245)
t180 = sin(qJ(3));
t183 = cos(qJ(3));
t212 = pkin(3) * t180 - qJ(4) * t183;
t112 = t212 * qJD(3) - t180 * qJD(4);
t175 = sin(pkin(11));
t181 = sin(qJ(2));
t176 = sin(pkin(6));
t270 = qJD(1) * t176;
t177 = cos(pkin(11));
t184 = cos(qJ(2));
t279 = t177 * t184;
t341 = t175 * t112 - (t175 * t181 + t183 * t279) * t270;
t238 = t184 * t270;
t239 = t181 * t270;
t286 = t175 * t183;
t327 = t238 * t286 + (t112 - t239) * t177;
t266 = qJD(2) * t183;
t164 = qJD(6) + t266;
t257 = t177 * qJD(3);
t267 = qJD(2) * t180;
t125 = t175 * t267 - t257;
t244 = t177 * t267;
t265 = qJD(3) * t175;
t127 = t244 + t265;
t179 = sin(qJ(6));
t182 = cos(qJ(6));
t206 = t125 * t179 + t127 * t182;
t295 = t206 * t164;
t255 = qJD(2) * qJD(3);
t234 = t183 * t255;
t154 = t175 * t234;
t217 = t177 * t234;
t31 = qJD(6) * t206 - t182 * t154 + t179 * t217;
t340 = -t31 + t295;
t173 = t180 ^ 2;
t174 = t183 ^ 2;
t228 = qJD(2) * (t173 - 0.2e1 * t174);
t339 = (t125 * t180 + t175 * t228) * qJD(3);
t249 = -pkin(8) * t175 - pkin(4);
t280 = t177 * t183;
t254 = pkin(9) * t280;
t338 = (-t254 + (-pkin(5) + t249) * t180) * qJD(3) - t327;
t281 = t177 * t180;
t256 = t183 * qJD(5);
t264 = qJD(3) * t180;
t323 = qJ(5) * t264 - t256;
t337 = (-pkin(8) * t281 + pkin(9) * t286) * qJD(3) + t323 + t341;
t171 = t175 ^ 2;
t172 = t177 ^ 2;
t291 = t125 * t177;
t336 = ((t171 - t172) * qJD(3) - t127 * t175 - t291) * t266;
t263 = qJD(3) * t183;
t335 = (t175 * (t127 + 0.2e1 * t244) + t291) * t263;
t218 = qJD(2) * t238;
t178 = cos(pkin(6));
t269 = qJD(1) * t178;
t334 = qJD(3) * t269 + t218;
t285 = t176 * t181;
t117 = -t178 * t183 + t180 * t285;
t268 = qJD(2) * t176;
t246 = t181 * t268;
t245 = t184 * t268;
t219 = t183 * t245;
t82 = -qJD(3) * t117 + t219;
t49 = t175 * t246 + t177 * t82;
t118 = t178 * t180 + t183 * t285;
t81 = -t175 * t176 * t184 + t118 * t177;
t220 = t180 * t245;
t83 = qJD(3) * t118 + t220;
t332 = (qJD(3) * (t117 * t280 - t180 * t81) + t183 * t49) * qJD(2) + t83 * t127;
t331 = t206 ^ 2;
t207 = -t182 * t125 + t127 * t179;
t330 = t207 ^ 2;
t138 = qJD(2) * pkin(8) + t239;
t121 = t180 * t138;
t274 = t334 * t183;
t55 = (qJD(4) - t121) * qJD(3) + t274;
t75 = (t112 + t239) * qJD(2);
t18 = -t175 * t55 + t177 * t75;
t318 = pkin(4) + pkin(5);
t193 = (-t318 * t180 - t254) * qJD(2);
t12 = qJD(3) * t193 - t18;
t19 = t175 * t75 + t177 * t55;
t233 = t180 * t255;
t253 = qJ(5) * t233 + t19;
t13 = (pkin(9) * t265 - qJD(5)) * t266 + t253;
t293 = qJ(4) * t180;
t213 = -pkin(3) * t183 - t293;
t143 = -pkin(2) + t213;
t100 = qJD(2) * t143 - t238;
t236 = t180 * t269;
t99 = t183 * t138 + t236;
t93 = qJD(3) * qJ(4) + t99;
t35 = t100 * t177 - t175 * t93;
t27 = pkin(4) * t266 + qJD(5) - t35;
t16 = pkin(5) * t266 - pkin(9) * t127 + t27;
t36 = t175 * t100 + t177 * t93;
t28 = -qJ(5) * t266 + t36;
t20 = pkin(9) * t125 + t28;
t5 = t16 * t182 - t179 * t20;
t1 = t5 * qJD(6) + t179 * t12 + t182 * t13;
t329 = -t5 * t164 + t1;
t6 = t16 * t179 + t182 * t20;
t2 = -t6 * qJD(6) + t182 * t12 - t179 * t13;
t328 = t6 * t164 + t2;
t252 = pkin(8) * t264;
t225 = t177 * t252;
t305 = -t225 + t341;
t259 = qJD(6) * t182;
t260 = qJD(6) * t179;
t30 = -t125 * t259 + t127 * t260 - t179 * t154 - t182 * t217;
t303 = t164 * t207;
t326 = t30 - t303;
t123 = t127 ^ 2;
t324 = -t125 ^ 2 - t123;
t322 = -t175 * t259 + t177 * t260;
t60 = t138 * t263 + t334 * t180;
t224 = pkin(4) * t154 + t60;
t258 = t127 * qJD(5);
t292 = qJ(5) * t177;
t17 = -(pkin(5) * t175 - t292) * t234 - t224 + t258;
t162 = pkin(8) * t286;
t170 = t183 * pkin(4);
t314 = pkin(9) * t180;
t61 = t183 * pkin(5) + t162 + t170 + (-t143 - t314) * t177;
t102 = pkin(8) * t280 + t175 * t143;
t92 = -qJ(5) * t183 + t102;
t72 = t175 * t314 + t92;
t21 = -t179 * t72 + t182 * t61;
t317 = t21 * qJD(6) + t338 * t179 + t337 * t182;
t22 = t179 * t61 + t182 * t72;
t316 = t22 * qJD(6) + t337 * t179 - t338 * t182;
t282 = t177 * t179;
t287 = t175 * t182;
t130 = -t282 + t287;
t131 = t212 * qJD(2);
t98 = t183 * t269 - t121;
t50 = t177 * t131 - t175 * t98;
t29 = t193 - t50;
t247 = t175 * t266;
t51 = t175 * t131 + t177 * t98;
t40 = qJ(5) * t267 + t51;
t34 = pkin(9) * t247 + t40;
t310 = -pkin(9) + qJ(4);
t149 = t310 * t175;
t150 = t310 * t177;
t86 = t149 * t179 + t150 * t182;
t315 = qJD(4) * t130 - qJD(6) * t86 + t179 * t34 - t182 * t29;
t311 = t206 * t207;
t129 = t175 * t179 + t177 * t182;
t85 = t149 * t182 - t150 * t179;
t309 = -qJD(4) * t129 - qJD(6) * t85 + t179 * t29 + t182 * t34;
t308 = t323 + t305;
t307 = t249 * t264 - t327;
t226 = t175 * t252;
t306 = t226 + t327;
t304 = qJD(2) * pkin(2);
t191 = -qJ(5) * t217 + t224;
t23 = t191 - t258;
t301 = t23 * t175;
t300 = t23 * t177;
t299 = t60 * t117;
t298 = t60 * t175;
t297 = t60 * t177;
t296 = t60 * t180;
t289 = t164 * t183;
t186 = qJD(2) ^ 2;
t288 = t174 * t186;
t284 = t176 * t186;
t185 = qJD(3) ^ 2;
t278 = t185 * t180;
t277 = t185 * t183;
t276 = -t182 * t247 + t266 * t282 + t322;
t114 = t129 * qJD(6);
t275 = t129 * t266 + t114;
t271 = t173 - t174;
t262 = qJD(4) * t127;
t261 = qJD(5) * t175;
t251 = t175 * t288;
t250 = t181 * t284;
t248 = qJ(4) * t264;
t243 = t179 * t263;
t242 = t182 * t263;
t237 = qJD(5) * t281;
t232 = t175 * qJ(5) + pkin(3);
t231 = qJD(3) * pkin(3) - qJD(4);
t199 = -t318 * t175 + t292;
t230 = t236 - (qJD(2) * t199 - t138) * t183 + t261;
t211 = pkin(4) * t175 - t292;
t57 = t236 + (t211 * qJD(2) + t138) * t183;
t229 = t57 + t261;
t101 = t143 * t177 - t162;
t227 = t125 + t257;
t223 = t125 * t238;
t222 = t127 * t238;
t221 = t180 * t238;
t216 = t183 * t233;
t215 = -t127 * t266 + t154;
t80 = t118 * t175 + t176 * t279;
t25 = -t179 * t81 + t182 * t80;
t26 = t179 * t80 + t182 * t81;
t205 = qJD(2) * t227;
t204 = qJD(2) * (-t127 + t265);
t203 = pkin(8) + t211;
t202 = t231 + t98;
t201 = t125 * t175 * t263 + t171 * t216;
t197 = -pkin(8) + t199;
t195 = t205 * t286;
t194 = t127 * qJ(5) + t202;
t139 = -t238 - t304;
t192 = qJD(3) * (t139 + t238 - t304);
t48 = t175 * t82 - t177 * t246;
t190 = t83 * t125 + t117 * t154 + (t183 * t48 - t80 * t264) * qJD(2);
t59 = -t138 * t264 + t274;
t189 = t296 + t59 * t183 + (-t180 * t99 - t183 * t98) * qJD(3);
t188 = t48 * t127 - t49 * t125 + (-t175 * t81 + t177 * t80) * t234;
t161 = t180 * t186 * t183;
t153 = qJD(4) * t247;
t152 = -0.2e1 * t216;
t140 = -pkin(4) * t177 - t232;
t120 = t318 * t177 + t232;
t110 = t125 * t266;
t109 = qJD(4) * t291;
t108 = t129 * t180;
t107 = t179 * t281 - t180 * t287;
t106 = t203 * t180;
t94 = -t101 + t170;
t88 = t197 * t180;
t84 = t110 + t217;
t74 = t203 * t263 - t237;
t73 = (t127 * t177 + t172 * t267) * t263;
t70 = t204 * t280;
t63 = t177 * t288 + t180 * t204;
t62 = (t127 * t180 + t177 * t228) * qJD(3);
t58 = t197 * t263 + t237;
t54 = t114 * t180 - t175 * t242 + t177 * t243;
t53 = -t175 * t243 - t177 * t242 + t322 * t180;
t43 = -pkin(4) * t267 - t50;
t33 = pkin(4) * t125 - t194;
t24 = -t318 * t125 + t194;
t15 = -pkin(4) * t233 - t18;
t14 = -qJD(2) * t256 + t253;
t8 = t25 * qJD(6) + t48 * t179 + t49 * t182;
t7 = -t26 * qJD(6) - t49 * t179 + t48 * t182;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250, -t184 * t284, 0, 0, 0, 0, 0, 0, 0, 0, -t183 * t250 + (-t83 - t220) * qJD(3), t180 * t250 + (-t82 - t219) * qJD(3) (t180 * t83 + t183 * t82 + (t117 * t183 - t118 * t180) * qJD(3)) * qJD(2), t299 + t59 * t118 + t99 * t82 - t98 * t83 + (t139 - t238) * t246, 0, 0, 0, 0, 0, 0, t190, t332, t188, -t18 * t80 + t19 * t81 - t202 * t83 - t35 * t48 + t36 * t49 + t299, 0, 0, 0, 0, 0, 0, t190, t188, -t332, t117 * t23 + t14 * t81 + t15 * t80 + t27 * t48 + t28 * t49 + t33 * t83, 0, 0, 0, 0, 0, 0, -t117 * t31 + t164 * t7 - t207 * t83 - t233 * t25, t117 * t30 - t164 * t8 - t206 * t83 + t233 * t26, -t206 * t7 - t207 * t8 + t25 * t30 - t26 * t31, t1 * t26 - t117 * t17 + t2 * t25 - t24 * t83 + t5 * t7 + t6 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t216, -0.2e1 * t271 * t255, t277, t152, -t278, 0, -pkin(8) * t277 + t180 * t192, pkin(8) * t278 + t183 * t192 (-t173 - t174) * t218 + t189 ((t180 * t98 - t183 * t99) * t184 + (-t139 - t304) * t181) * t270 + t189 * pkin(8), t73, -t335, t62, t201, -t339, t152 (-t223 + t298 + (qJD(2) * t101 + t35) * qJD(3)) * t180 + (-t18 + (pkin(8) * t125 - t175 * t202) * qJD(3) + (t226 - t306) * qJD(2)) * t183 (-t222 + t297 + (-qJD(2) * t102 - t36) * qJD(3)) * t180 + (t19 + (pkin(8) * t127 - t177 * t202) * qJD(3) + (t225 + t305) * qJD(2)) * t183 (-t175 * t19 - t177 * t18) * t180 - t306 * t127 - t305 * t125 + (-t175 * t36 - t177 * t35 + (-t101 * t177 - t102 * t175) * qJD(2)) * t263, t202 * t221 + t18 * t101 + t19 * t102 + t305 * t36 + t306 * t35 + (-t202 * t263 + t296) * pkin(8), t73, t62, t335, t152, t339, t201, t74 * t125 + (-t223 + t301 + (-qJD(2) * t94 - t27) * qJD(3)) * t180 + (t33 * t265 + t15 + (t106 * t265 + t307) * qJD(2)) * t183 (-t14 * t175 + t15 * t177) * t180 + t307 * t127 - t308 * t125 + (-t175 * t28 + t177 * t27 + (-t175 * t92 + t177 * t94) * qJD(2)) * t263, -t127 * t74 + (t222 - t300 + (qJD(2) * t92 + t28) * qJD(3)) * t180 + (-t33 * t257 - t14 + (-t106 * t257 - t308) * qJD(2)) * t183, t23 * t106 + t14 * t92 + t15 * t94 + (t74 - t221) * t33 + t308 * t28 + t307 * t27, -t108 * t30 - t206 * t53, t107 * t30 - t108 * t31 - t206 * t54 + t207 * t53, -t53 * t164 - t30 * t183 + (-qJD(2) * t108 - t206) * t264, t107 * t31 + t207 * t54, -t54 * t164 - t31 * t183 + (qJD(2) * t107 + t207) * t264 (-t164 - t266) * t264, t107 * t17 + t183 * t2 + t24 * t54 + t31 * t88 + t58 * t207 - t316 * t164 + (t207 * t238 + (-qJD(2) * t21 - t5) * qJD(3)) * t180, -t1 * t183 + t108 * t17 - t24 * t53 - t30 * t88 + t58 * t206 - t317 * t164 + (t206 * t238 + (qJD(2) * t22 + t6) * qJD(3)) * t180, -t1 * t107 - t108 * t2 + t206 * t316 - t207 * t317 + t21 * t30 - t22 * t31 + t5 * t53 - t54 * t6, t1 * t22 + t17 * t88 + t2 * t21 + t317 * t6 - t316 * t5 + (t58 + t221) * t24; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t161, t271 * t186, 0, t161, 0, 0, qJD(3) * t99 - t139 * t267 - t60, -t139 * t266 + (t98 + t121) * qJD(3) - t274, 0, 0, t70, -t336, t63, -t195, t227 * t267 - t251, t161, -t99 * t125 - t297 + t153 + (-t180 * t35 + t183 * t50 + (qJD(3) * t213 + t183 * t202) * t175) * qJD(2), -t99 * t127 + t298 + (t180 * t36 - t183 * t51 + (-t248 + (-t231 + t202) * t183) * t177) * qJD(2), t51 * t125 + t50 * t127 - t109 + (t35 * t266 + t19) * t177 + (t36 * t266 - t18 + t262) * t175, -t60 * pkin(3) - t35 * t50 - t36 * t51 + t202 * t99 + (-t175 * t35 + t177 * t36) * qJD(4) + (-t18 * t175 + t19 * t177) * qJ(4), t70, t63, t336, t161, -t180 * t205 + t251, -t195, -t300 + t153 - t229 * t125 + (t180 * t27 - t183 * t43 + (-t183 * t33 + (t140 * t183 - t293) * qJD(3)) * t175) * qJD(2), t40 * t125 - t43 * t127 - t109 + (-t27 * t266 + t14) * t177 + (t28 * t266 + t15 + t262) * t175, -t301 + t229 * t127 + (-t180 * t28 + t183 * t40 + (t248 + (-qJD(3) * t140 - qJD(4) + t33) * t183) * t177) * qJD(2), t23 * t140 - t27 * t43 - t28 * t40 - t33 * t57 + (qJ(4) * t14 + qJD(4) * t28) * t177 + (qJ(4) * t15 + qJD(4) * t27 - qJD(5) * t33) * t175, -t30 * t130 - t206 * t275, t30 * t129 - t130 * t31 + t206 * t276 + t207 * t275, -t275 * t164 + (-qJD(3) * t130 + t206) * t267, t31 * t129 - t207 * t276, t276 * t164 + (qJD(3) * t129 - t207) * t267, t164 * t267, t120 * t31 + t129 * t17 + t230 * t207 - t276 * t24 + t315 * t164 + (-qJD(3) * t85 + t5) * t267, -t120 * t30 + t130 * t17 + t230 * t206 - t275 * t24 + t309 * t164 + (qJD(3) * t86 - t6) * t267, -t1 * t129 - t130 * t2 - t206 * t315 + t207 * t309 + t275 * t5 + t276 * t6 + t30 * t85 - t31 * t86, t1 * t86 + t17 * t120 + t2 * t85 + t230 * t24 - t309 * t6 + t315 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, t84, t324, t125 * t36 + t127 * t35 + t60, 0, 0, 0, 0, 0, 0, t215, t324, -t84, t28 * t125 + (-qJD(5) - t27) * t127 + t191, 0, 0, 0, 0, 0, 0, -t31 - t295, t30 + t303, t330 + t331, -t206 * t5 - t207 * t6 - t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125 * t127 - t233, -t110 + t217, -t123 - t288, t33 * t127 + (-pkin(4) * t264 + t183 * t28) * qJD(2) - t18, 0, 0, 0, 0, 0, 0, -t164 * t260 - t127 * t207 + (-t179 * t289 - t182 * t264) * qJD(2), -t164 * t259 - t127 * t206 + (t179 * t264 - t182 * t289) * qJD(2), t179 * t340 + t326 * t182, -t24 * t127 + t329 * t179 + t328 * t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, -t330 + t331, -t326, -t311, t340, -t233, -t206 * t24 + t328, t207 * t24 - t329, 0, 0;];
tauc_reg  = t3;
