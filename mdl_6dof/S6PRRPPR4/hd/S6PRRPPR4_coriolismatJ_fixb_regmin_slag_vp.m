% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x26]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPPR4_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR4_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR4_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPPR4_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:16:30
% EndTime: 2019-03-08 21:16:45
% DurationCPUTime: 7.15s
% Computational Cost: add. (3483->502), mult. (9184->734), div. (0->0), fcn. (9742->10), ass. (0->389)
t312 = cos(pkin(11));
t316 = cos(qJ(6));
t491 = t316 * t312;
t310 = sin(pkin(11));
t313 = sin(qJ(6));
t498 = t313 * t310;
t246 = t491 + t498;
t317 = cos(qJ(3));
t226 = t246 * t317;
t422 = -t226 / 0.2e1;
t492 = t316 * t310;
t497 = t313 * t312;
t248 = t492 - t497;
t510 = t248 * t317;
t586 = t510 / 0.2e1;
t306 = t310 ^ 2;
t307 = t312 ^ 2;
t287 = t307 + t306;
t261 = t287 * qJ(4);
t352 = t491 / 0.2e1 + t498 / 0.2e1;
t314 = sin(qJ(3));
t311 = sin(pkin(6));
t315 = sin(qJ(2));
t507 = t311 * t315;
t528 = cos(pkin(6));
t234 = t314 * t507 - t317 * t528;
t407 = t528 * t314;
t446 = t317 * t507;
t235 = t407 + t446;
t533 = t317 / 0.2e1;
t535 = t314 / 0.2e1;
t585 = t234 * t533 + t235 * t535;
t338 = t407 / 0.2e1 + t446 / 0.2e1;
t318 = cos(qJ(2));
t506 = t311 * t318;
t445 = t310 * t506;
t511 = t235 * t312;
t163 = -t445 + t511;
t522 = t163 * t312;
t501 = t312 * t318;
t444 = t311 * t501;
t512 = t235 * t310;
t162 = t444 + t512;
t523 = t162 * t310;
t559 = -t522 / 0.2e1 - t523 / 0.2e1;
t319 = t338 + t559;
t584 = -qJD(1) * t319 + t261 * qJD(3);
t341 = (t235 - t522 - t523) * t234;
t560 = t341 * qJD(1);
t583 = -qJD(4) * t319 - t560;
t322 = t338 - t559;
t582 = t322 * qJD(4) + t560;
t417 = t506 / 0.2e1;
t398 = t314 * t417;
t503 = t312 * t314;
t415 = t503 / 0.2e1;
t539 = -t310 / 0.2e1;
t430 = t163 * t539;
t336 = t162 * t415 + t314 * t430 + t398;
t280 = t312 * t507;
t201 = t317 * t445 - t280;
t202 = (t310 * t315 + t317 * t501) * t311;
t443 = t314 * t506;
t331 = t162 * t201 + t163 * t202 + t234 * t443;
t562 = t331 * qJD(1);
t581 = t336 * qJD(4) + t562;
t537 = t312 / 0.2e1;
t360 = t162 * t537 + t430;
t329 = (t417 - t360) * t314;
t580 = -qJD(4) * t329 - t562;
t490 = t316 * t314;
t496 = t313 * t314;
t222 = -t310 * t490 + t312 * t496;
t451 = t317 * qJD(2);
t406 = qJD(6) + t451;
t579 = t222 * t406;
t538 = t310 / 0.2e1;
t578 = t201 * t538 + t202 * t537;
t526 = qJ(4) * t314;
t396 = -pkin(3) * t317 - t526;
t263 = -pkin(2) + t396;
t508 = t310 * t317;
t296 = pkin(8) * t508;
t203 = t263 * t312 - t296;
t502 = t312 * t317;
t297 = pkin(8) * t502;
t204 = t310 * t263 + t297;
t356 = t203 * t539 + t204 * t537;
t530 = t317 * pkin(8);
t447 = t530 / 0.2e1;
t76 = t447 - t356;
t577 = -qJD(2) * t76 + t584;
t505 = t312 * qJ(5);
t531 = t310 * pkin(4);
t337 = (pkin(8) / 0.2e1 - t505 / 0.2e1 + t531 / 0.2e1) * t317;
t180 = -t317 * qJ(5) + t204;
t304 = t317 * pkin(4);
t181 = -t203 + t304;
t359 = t180 * t537 + t181 * t538;
t53 = t337 - t359;
t576 = -qJD(2) * t53 + t584;
t489 = t317 * qJ(4);
t279 = pkin(3) * t314 - t489;
t209 = -pkin(8) * t503 + t310 * t279;
t182 = t314 * qJ(5) + t209;
t408 = -pkin(8) + t505;
t364 = -t408 + t531;
t217 = t364 * t314;
t218 = t364 * t317;
t370 = t217 * t317 + t218 * t314;
t40 = -t180 * t314 + t182 * t317 + t312 * t370;
t400 = t310 * t417;
t362 = t400 + t163 / 0.2e1;
t424 = t511 / 0.2e1;
t37 = (t424 - t362) * t314;
t488 = t37 * qJD(1);
t575 = t40 * qJD(2) + t488;
t75 = t209 * t317 + (-t204 + 0.2e1 * t297) * t314;
t574 = -t75 * qJD(2) - t488;
t534 = -t317 / 0.2e1;
t429 = t163 * t534;
t320 = (-t202 / 0.2e1 + t162 * t533) * t312 + (-t201 / 0.2e1 + t429) * t310;
t572 = qJD(1) * t320;
t571 = qJD(1) * t329;
t418 = -t506 / 0.2e1;
t550 = t162 / 0.2e1;
t330 = (t312 * t418 - t512 / 0.2e1 + t550) * t314;
t570 = qJD(1) * t330;
t567 = t320 * qJD(2);
t566 = t320 * qJD(3);
t564 = t330 * qJD(2);
t563 = t330 * qJD(3);
t323 = t317 * t360 + t578;
t458 = t234 * qJD(3);
t558 = qJD(2) * t323 - t287 * t458;
t399 = t314 * t418;
t104 = t234 * t310;
t427 = -t104 / 0.2e1;
t536 = -t314 / 0.2e1;
t324 = t162 * t536 + t310 * t585 + t312 * t399 + t317 * t427;
t457 = t235 * qJD(3);
t557 = qJD(2) * t324 - t312 * t457;
t452 = t314 * qJD(2);
t556 = qJD(3) * t323 + (t201 * t312 - t202 * t310) * t452;
t308 = t314 ^ 2;
t555 = qJD(3) * t324 + (t201 * t317 + t308 * t445) * qJD(2);
t554 = qJD(2) * t329 + qJD(3) * t319;
t553 = qJD(2) * t336 + qJD(3) * t322;
t552 = qJD(2) * t331 + qJD(3) * t341;
t551 = pkin(4) + pkin(5);
t549 = -t163 / 0.2e1;
t421 = t226 / 0.2e1;
t548 = -t234 / 0.2e1;
t547 = t234 / 0.2e1;
t546 = -t235 / 0.2e1;
t545 = t235 / 0.2e1;
t544 = -t246 / 0.2e1;
t543 = -t248 / 0.2e1;
t542 = t248 / 0.2e1;
t541 = -t280 / 0.2e1;
t284 = t317 * t492;
t540 = t284 / 0.2e1;
t532 = pkin(8) * t310;
t529 = -pkin(9) + qJ(4);
t495 = t313 * t317;
t224 = t312 * t495 - t284;
t96 = t222 * t314 - t224 * t317;
t525 = qJD(2) * t96;
t225 = t246 * t314;
t97 = -t225 * t314 + t226 * t317;
t524 = qJD(2) * t97;
t521 = t180 * t317;
t519 = t201 * t313;
t518 = t201 * t316;
t517 = t202 * t313;
t516 = t202 * t316;
t509 = t310 * t314;
t504 = t312 * t279;
t442 = -pkin(4) - t532;
t128 = (-pkin(9) * t317 - t279) * t312 + (-pkin(5) + t442) * t314;
t500 = t313 * t128;
t149 = pkin(9) * t508 + t182;
t499 = t313 * t149;
t494 = t316 * t128;
t493 = t316 * t149;
t487 = t37 * qJD(2);
t486 = t37 * qJD(3);
t409 = t310 * qJ(5) + pkin(3);
t258 = -pkin(4) * t312 - t409;
t60 = pkin(4) * t536 + (pkin(8) * t536 + t217 / 0.2e1) * t310 + (-t279 / 0.2e1 + t489 / 0.2e1 + t258 * t535) * t312;
t484 = t60 * qJD(2);
t66 = -t222 * t226 - t224 * t225;
t483 = t66 * qJD(2);
t481 = t234 * t261;
t480 = t352 * t317;
t411 = -t495 / 0.2e1;
t414 = -t502 / 0.2e1;
t479 = t310 * t411 + t316 * t414;
t309 = t317 ^ 2;
t154 = t222 * t503 + t309 * t313;
t478 = qJD(2) * t154;
t155 = t225 * t503 + t309 * t316;
t477 = qJD(2) * t155;
t476 = qJD(2) * t225;
t475 = qJD(2) * t311;
t474 = qJD(3) * t246;
t473 = qJD(3) * t248;
t472 = qJD(3) * t310;
t471 = qJD(3) * t314;
t470 = qJD(3) * t317;
t469 = qJD(3) * t318;
t468 = qJD(4) * t317;
t467 = qJD(5) * t310;
t466 = qJD(5) * t312;
t465 = qJD(5) * t317;
t464 = qJD(6) * t246;
t463 = qJD(6) * t317;
t412 = -t497 / 0.2e1;
t114 = t540 + (t412 + t543) * t317;
t462 = t114 * qJD(2);
t115 = t540 + (t412 + t542) * t317;
t461 = t115 * qJD(2);
t116 = t421 + t480;
t460 = t116 * qJD(2);
t117 = t421 + t479;
t459 = t117 * qJD(2);
t216 = t225 * qJD(6);
t245 = t287 * t308;
t456 = t245 * qJD(2);
t240 = t248 * qJD(6);
t454 = t287 * qJD(3);
t293 = t309 - t308;
t453 = t293 * qJD(2);
t450 = pkin(8) * t509;
t449 = pkin(2) * t452;
t448 = pkin(2) * t451;
t441 = t222 * t451;
t440 = t225 * t451;
t439 = t312 * t452;
t437 = t312 * t472;
t436 = qJD(4) * t503;
t291 = t310 * t468;
t435 = t310 * t466;
t434 = t318 * t475;
t433 = t312 * t451;
t432 = t314 * t470;
t431 = t314 * t451;
t426 = t312 * t548;
t420 = t222 * t538;
t419 = t225 * t538;
t416 = -t503 / 0.2e1;
t236 = t312 * t551 + t409;
t405 = qJD(3) * t236 - qJD(4);
t404 = qJD(2) * t308 * t310 * t312;
t403 = t314 * t291;
t402 = t310 * t431;
t401 = t312 * t431;
t397 = -t216 - t440;
t343 = -t310 * t551 + t408;
t174 = t343 * t314;
t175 = t343 * t317;
t148 = pkin(9) * t509 + t180;
t332 = t317 * pkin(5) + t296 + t304 + (-pkin(9) * t314 - t263) * t312;
t58 = t313 * t148 - t316 * t332;
t5 = (t494 - t499) * t317 + t58 * t314 + t175 * t222 + t174 * t224;
t374 = t162 * t316 - t163 * t313;
t326 = t222 * t545 + t374 * t535;
t391 = t246 * t399;
t7 = t391 + (t586 + t224 / 0.2e1) * t234 + t326;
t395 = -t7 * qJD(1) + t5 * qJD(2);
t59 = t316 * t148 + t313 * t332;
t6 = (t493 + t500) * t317 - t59 * t314 - t175 * t225 - t174 * t226;
t373 = t162 * t313 + t163 * t316;
t325 = t225 * t545 + t373 * t536;
t390 = t248 * t399;
t8 = t390 + (t422 + t421) * t234 + t325;
t394 = -t8 * qJD(1) - t6 * qJD(2);
t340 = t578 * qJ(4);
t321 = t258 * t398 + t340;
t183 = t314 * t442 - t504;
t335 = -t162 * t183 / 0.2e1 + t182 * t549 + t217 * t546;
t1 = (-t218 / 0.2e1 + t359) * t234 + t321 + t335;
t19 = t180 * t182 + t181 * t183 + t217 * t218;
t393 = -t1 * qJD(1) + t19 * qJD(2);
t208 = t450 + t504;
t361 = t208 * t550 + t209 * t549;
t3 = (pkin(3) * t418 + pkin(8) * t546) * t314 + t340 - t76 * t234 + t361;
t44 = pkin(8) ^ 2 * t314 * t317 + t203 * t208 + t204 * t209;
t392 = -t3 * qJD(1) + t44 * qJD(2);
t389 = -t258 * t317 + t526;
t274 = t529 * t310;
t275 = t529 * t312;
t168 = t274 * t313 + t275 * t316;
t333 = t168 * t534 + t174 * t542 + t236 * t225 / 0.2e1;
t354 = -t499 / 0.2e1 + t494 / 0.2e1;
t11 = -t333 + t354;
t353 = t497 / 0.2e1 - t492 / 0.2e1;
t62 = (t542 + t353) * t234;
t388 = t62 * qJD(1) + t11 * qJD(2);
t167 = -t274 * t316 + t275 * t313;
t334 = t167 * t533 + t174 * t544 - t236 * t222 / 0.2e1;
t355 = -t500 / 0.2e1 - t493 / 0.2e1;
t12 = -t334 + t355;
t63 = (t544 + t352) * t234;
t387 = t63 * qJD(1) + t12 * qJD(2);
t327 = t225 * t547 + t373 * t533;
t357 = t518 / 0.2e1 - t517 / 0.2e1;
t15 = t327 + t357;
t26 = t174 * t225 - t317 * t59;
t386 = -qJD(1) * t15 + qJD(2) * t26;
t328 = t222 * t548 + t374 * t533;
t358 = -t519 / 0.2e1 - t516 / 0.2e1;
t16 = t328 + t358;
t25 = t174 * t222 - t317 * t58;
t385 = -qJD(1) * t16 - qJD(2) * t25;
t24 = -t181 * t502 - t183 * t503 + (t182 * t314 + t521) * t310;
t384 = -t24 * qJD(2) + t572;
t39 = (t203 * t317 + t208 * t314) * t312 + (t204 * t317 + t209 * t314) * t310;
t383 = t39 * qJD(2) - t572;
t74 = -t203 * t314 + (t208 - 0.2e1 * t450) * t317;
t382 = t74 * qJD(2) + t570;
t41 = -t181 * t314 + t183 * t317 + t310 * t370;
t381 = t41 * qJD(2) - t570;
t73 = t180 * t509 - t181 * t503;
t378 = -qJD(2) * t73 - t571;
t80 = (t203 * t312 + t204 * t310) * t314;
t377 = qJD(2) * t80 + t571;
t56 = t234 * t415 + t317 * t362 + t541;
t82 = t217 * t503 + t521;
t376 = -qJD(1) * t56 - qJD(2) * t82;
t43 = t222 * t246 - t248 * t225;
t78 = t222 ^ 2 - t225 ^ 2;
t375 = qJD(2) * t78 + qJD(3) * t43;
t372 = t182 * t312 + t183 * t310;
t371 = -t208 * t310 + t209 * t312;
t102 = t246 ^ 2 - t248 ^ 2;
t368 = qJD(2) * t43 + qJD(3) * t102;
t36 = t310 * t398 + (t549 + t424) * t314;
t367 = qJD(2) * (t202 * t317 + t308 * t444) + qJD(3) * t36;
t366 = qJD(2) * t222 + t474;
t365 = t473 + t476;
t363 = t312 * t411 + t540;
t72 = t222 * t543 + t225 * t544;
t351 = -qJD(3) * t72 + t222 * t476;
t350 = qJD(2) * t36 + t310 * t457;
t349 = -qJD(2) * t72 + t246 * t473;
t85 = t420 + (t246 * t537 + t316 / 0.2e1) * t314;
t348 = qJD(2) * t85 + t246 * t472;
t88 = t419 + (t248 * t537 - t313 / 0.2e1) * t314;
t347 = qJD(2) * t88 + t248 * t472;
t227 = (-0.1e1 / 0.2e1 + t306 / 0.2e1 - t307 / 0.2e1) * t314;
t346 = -qJD(2) * t227 + t437;
t244 = t439 + t472;
t264 = t307 * t308 + t309;
t342 = qJD(2) * t264 + t314 * t437;
t300 = -t471 / 0.2e1;
t276 = t287 * qJD(4);
t273 = t317 * t436;
t260 = t314 * t435;
t253 = t261 * qJD(4);
t243 = (t451 + qJD(6) / 0.2e1) * t314;
t237 = t245 * qJD(4);
t233 = qJD(3) * t306 + t310 * t439;
t228 = t306 * t536 + t307 * t535 + t536;
t220 = t244 * t317;
t219 = -t312 * t470 + t402;
t121 = -t510 / 0.2e1 + t363;
t120 = t586 + t363;
t119 = t422 + t480;
t118 = t422 + t479;
t87 = t419 + t248 * t415 + t496 / 0.2e1;
t86 = t420 + t246 * t415 - t490 / 0.2e1;
t77 = t447 + t356;
t71 = t72 * qJD(6);
t65 = (t353 + t543) * t234;
t64 = t234 * t352 + t246 * t547;
t61 = qJ(4) * t414 + t258 * t416 + t217 * t539 - t504 / 0.2e1 + (-t532 / 0.2e1 - pkin(4) / 0.2e1) * t314;
t57 = t234 * t416 + t317 * t400 + t429 + t541;
t54 = t337 + t359;
t42 = t43 * qJD(6);
t18 = -t327 + t357;
t17 = -t328 + t358;
t14 = t333 + t354;
t13 = t334 + t355;
t10 = -t325 + t390;
t9 = t224 * t548 - t510 * t547 - t326 + t391;
t4 = t204 * t426 + t203 * t104 / 0.2e1 + pkin(3) * t399 + t340 - t361 + t585 * pkin(8);
t2 = t180 * t426 + t181 * t427 + t218 * t547 + t321 - t335;
t20 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t552, 0, 0, 0, t552, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t315 * t475, -t434, 0, 0, 0, 0, 0 (-t314 * t469 - t315 * t451) * t311 (t315 * t452 - t317 * t469) * t311, t555, t367, t556 (pkin(8) * t308 * t506 - t201 * t203 + t202 * t204) * qJD(2) + t4 * qJD(3) + t581, t555, t556, -t367 (t202 * t180 + t201 * t181 + t217 * t443) * qJD(2) + t2 * qJD(3) + t57 * qJD(5) + t581, 0, 0, 0, 0, 0 ((-t517 + t518) * t317 - t222 * t443) * qJD(2) + t9 * qJD(3) + t18 * qJD(6) (-(t516 + t519) * t317 - t225 * t443) * qJD(2) + t10 * qJD(3) + t17 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t314 * t434 - t457, -t317 * t434 + t458, t557, t350, t558, t4 * qJD(2) + (-pkin(3) * t235 - t481) * qJD(3) + t582, t557, t558, -t350, t2 * qJD(2) + (t235 * t258 - t481) * qJD(3) - t104 * qJD(5) + t582, 0, 0, 0, 0, 0, qJD(2) * t9 + qJD(6) * t65 - t246 * t457, qJD(2) * t10 + qJD(6) * t64 - t248 * t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t553, 0, 0, 0, t553, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t57 - qJD(3) * t104, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t18 * qJD(2) + t65 * qJD(3) - qJD(6) * t373, t17 * qJD(2) + t64 * qJD(3) - qJD(6) * t374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t563, t486, t566, -qJD(3) * t3 + t580, -t563, t566, -t486, -qJD(3) * t1 - qJD(5) * t56 + t580, 0, 0, 0, 0, 0, -qJD(3) * t7 - qJD(6) * t15, -qJD(3) * t8 - qJD(6) * t16; 0, 0, 0, 0, t432, t293 * qJD(3), 0, 0, 0, -pkin(2) * t471, -pkin(2) * t470, -qJD(3) * t74 + t273, qJD(3) * t75 - t403, -qJD(3) * t39 + t237, qJD(3) * t44 - qJD(4) * t80, qJD(3) * t41 - t308 * t435 + t273, -qJD(3) * t24 + t465 * t509 + t237, -qJD(3) * t40 + qJD(5) * t264 + t403, qJD(3) * t19 - qJD(4) * t73 - qJD(5) * t82 (qJD(3) * t226 - qJD(6) * t222) * t225, qJD(3) * t66 + qJD(6) * t78, qJD(3) * t97 - t222 * t463, qJD(3) * t96 - t216 * t317, -t432, qJD(3) * t5 + qJD(5) * t154 + qJD(6) * t26 + t225 * t468, -qJD(3) * t6 + qJD(5) * t155 - qJD(6) * t25 - t222 * t468; 0, 0, 0, 0, t431, t453, t470, -t471, 0, -pkin(8) * t470 - t449, pkin(8) * t471 - t448 (t310 * t396 - t297) * qJD(3) + t291 - t382, t296 * qJD(3) + (qJD(3) * t396 + t468) * t312 - t574, qJD(3) * t371 - t383 (-pkin(3) * t530 + qJ(4) * t371) * qJD(3) + t77 * qJD(4) + t392 (-t218 * t312 - t310 * t389) * qJD(3) + t291 + t228 * qJD(5) + t381, qJD(3) * t372 + t384, -t218 * t472 + t260 + (qJD(3) * t389 - t468) * t312 - t575 (qJ(4) * t372 + t218 * t258) * qJD(3) + t54 * qJD(4) + t61 * qJD(5) + t393, t226 * t365 + t71, t483 + (-t224 * t248 - t226 * t246) * qJD(3) + t42, qJD(6) * t119 - t248 * t471 + t524, qJD(6) * t121 + t246 * t471 + t525, -t243 (t167 * t314 + t175 * t246 + t224 * t236) * qJD(3) + t120 * qJD(4) + t86 * qJD(5) + t14 * qJD(6) + t395 (t168 * t314 + t175 * t248 + t226 * t236) * qJD(3) + t118 * qJD(4) + t87 * qJD(5) + t13 * qJD(6) + t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220, -t219, t456, qJD(3) * t77 - t377, t220, t456, t219, qJD(3) * t54 + t378, 0, 0, 0, 0, 0, qJD(3) * t120 + t440, qJD(3) * t118 - t441; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t228 - t404, t402, t342, qJD(3) * t61 + t376, 0, 0, 0, 0, 0, qJD(3) * t86 + t478, qJD(3) * t87 + t477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t351, t375, t119 * qJD(3) - t579, qJD(3) * t121 + t397, t300, qJD(3) * t14 - qJD(6) * t59 + t386, qJD(3) * t13 + qJD(6) * t58 + t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t564, -t487, -t567, qJD(2) * t3 + t583, t564, -t567, t487, qJD(2) * t1 + t583, 0, 0, 0, 0, 0, qJD(2) * t7 - qJD(6) * t62, qJD(2) * t8 - qJD(6) * t63; 0, 0, 0, 0, -t431, -t453, 0, 0, 0, t449, t448, t382, t574, t383, -qJD(4) * t76 - t392, -qJD(5) * t227 - t381, -t312 * t465 - t384, t260 + t575, -qJD(4) * t53 - qJD(5) * t60 - t393, -t226 * t476 + t71, t42 - t483, -qJD(6) * t116 - t524, -qJD(6) * t115 - t525, t243, -qJD(4) * t114 + qJD(5) * t85 - qJD(6) * t11 - t395, -qJD(4) * t117 + qJD(5) * t88 - qJD(6) * t12 - t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t276, t253, t435, t276, t306 * qJD(5), -t258 * t467 + t253, -t246 * t240, t102 * qJD(6), 0, 0, 0, t236 * t240 + t246 * t467, -t236 * t464 + t248 * t467; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t454, t577, 0, t454, 0, t576, 0, 0, 0, 0, 0, -t462, -t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t346, -t433, t233, -t258 * t472 - t484, 0, 0, 0, 0, 0, t348, t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t349, t368, -t460 - t464, -t240 - t461, t452 / 0.2e1, -qJD(6) * t168 + t236 * t473 - t388, qJD(6) * t167 - t236 * t474 - t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t554, 0, 0, 0, t554, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401, t402, -t456, qJD(3) * t76 + t377, -t401, -t456, -t402, qJD(3) * t53 - t314 * t466 - t378, 0, 0, 0, 0, 0, qJD(3) * t114 + t397, t117 * qJD(3) + t579; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t454, -t577, 0, -t454, 0, -t467 - t576, 0, 0, 0, 0, 0, -t240 + t462, t459 + t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t244, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t365, t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56 * qJD(2), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t227 + t404, -t219, -t342, qJD(3) * t60 - t376 + t436, 0, 0, 0, 0, 0, -qJD(3) * t85 - t313 * t463 - t478, -qJD(3) * t88 - t316 * t463 - t477; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t346, t433, -t233, t484 + (qJD(3) * t258 + qJD(4)) * t310, 0, 0, 0, 0, 0, -t348, -t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t406 * t313, -t406 * t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t15 + qJD(3) * t62, qJD(2) * t16 + qJD(3) * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t351, -t375, qJD(3) * t116 + t441, qJD(3) * t115 + t440, t300, qJD(3) * t11 + qJD(4) * t225 + t313 * t465 - t386, qJD(3) * t12 - qJD(4) * t222 + t316 * t465 - t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t349, -t368, t460, t461, -t452 / 0.2e1, -t248 * t405 + t388, t246 * t405 + t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t365, -t366; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t313 * t451, t316 * t451; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t20;
