% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRPPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d6,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 21:17
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPPR4_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPPR4_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPPR4_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPPR4_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 21:16:34
% EndTime: 2019-03-08 21:16:54
% DurationCPUTime: 14.58s
% Computational Cost: add. (8867->693), mult. (21346->983), div. (0->0), fcn. (23110->10), ass. (0->513)
t499 = sin(pkin(11));
t495 = t499 ^ 2;
t501 = cos(pkin(11));
t496 = t501 ^ 2;
t473 = t496 + t495;
t445 = t473 * qJ(4);
t778 = cos(qJ(6));
t664 = t778 * t501;
t502 = sin(qJ(6));
t743 = t502 * t499;
t536 = t664 / 0.2e1 + t743 / 0.2e1;
t503 = sin(qJ(3));
t773 = cos(pkin(6));
t626 = t773 * t503;
t505 = cos(qJ(3));
t500 = sin(pkin(6));
t504 = sin(qJ(2));
t753 = t500 * t504;
t678 = t505 * t753;
t529 = t626 / 0.2e1 + t678 / 0.2e1;
t506 = cos(qJ(2));
t752 = t500 * t506;
t677 = t499 * t752;
t409 = t626 + t678;
t759 = t409 * t501;
t314 = -t677 + t759;
t768 = t314 * t501;
t746 = t501 * t506;
t676 = t500 * t746;
t760 = t409 * t499;
t313 = t676 + t760;
t769 = t313 * t499;
t821 = -t768 / 0.2e1 - t769 / 0.2e1;
t508 = t529 + t821;
t851 = -qJD(1) * t508 + t445 * qJD(3);
t408 = t503 * t753 - t505 * t773;
t533 = (t409 - t768 - t769) * t408;
t822 = t533 * qJD(1);
t850 = -qJD(4) * t508 - t822;
t511 = t529 - t821;
t849 = t511 * qJD(4) + t822;
t636 = t752 / 0.2e1;
t613 = t503 * t636;
t748 = t501 * t503;
t634 = t748 / 0.2e1;
t789 = -t499 / 0.2e1;
t648 = t314 * t789;
t526 = t313 * t634 + t503 * t648 + t613;
t675 = t503 * t752;
t337 = t408 * t675;
t465 = t501 * t753;
t364 = t505 * t677 - t465;
t365 = (t499 * t504 + t505 * t746) * t500;
t520 = t313 * t364 + t314 * t365 + t337;
t824 = t520 * qJD(1);
t848 = t526 * qJD(4) + t824;
t786 = t501 / 0.2e1;
t557 = t313 * t786 + t648;
t517 = (t636 - t557) * t503;
t847 = -qJD(4) * t517 - t824;
t663 = t778 * t503;
t741 = t502 * t503;
t392 = -t499 * t663 + t501 * t741;
t429 = t664 + t743;
t395 = t429 * t503;
t665 = t778 * t499;
t742 = t502 * t501;
t432 = t665 - t742;
t793 = -t432 / 0.2e1;
t795 = -t429 / 0.2e1;
t172 = t392 * t793 + t395 * t795;
t846 = t172 * qJD(6);
t716 = qJD(3) * t432;
t845 = -qJD(2) * t172 + t429 * t716;
t721 = qJD(2) * t395;
t844 = -qJD(3) * t172 + t392 * t721;
t719 = qJD(2) * t505;
t625 = qJD(6) + t719;
t843 = t392 * t625;
t788 = t499 / 0.2e1;
t842 = t364 * t788 + t365 * t786;
t497 = t503 ^ 2;
t498 = t505 ^ 2;
t480 = t498 - t497;
t776 = t499 * pkin(8);
t674 = -pkin(4) - t776;
t579 = pkin(3) * t501 - t674;
t774 = -pkin(9) + qJ(4);
t841 = (t503 * t774 + pkin(2)) * t501 + (pkin(5) + t579) * t505;
t771 = qJ(4) * t503;
t606 = -pkin(3) * t505 - t771;
t568 = -pkin(2) + t606;
t754 = t499 * t505;
t366 = -pkin(8) * t754 + t501 * t568;
t747 = t501 * t505;
t484 = pkin(8) * t747;
t367 = t499 * t568 + t484;
t555 = t366 * t789 + t367 * t786;
t775 = t505 * pkin(8);
t679 = t775 / 0.2e1;
t186 = t679 - t555;
t840 = -qJD(2) * t186 + t851;
t751 = t501 * qJ(5);
t608 = pkin(8) / 0.2e1 - t751 / 0.2e1;
t777 = t499 * pkin(4);
t528 = (t777 / 0.2e1 + t608) * t505;
t331 = -t505 * qJ(5) + t367;
t332 = -t501 * (-pkin(2) - t771) + t579 * t505;
t556 = t331 * t786 + t332 * t788;
t134 = t528 - t556;
t839 = -qJD(2) * t134 + t851;
t714 = qJD(3) * t503;
t655 = t501 * t714;
t428 = t480 * t499;
t692 = t428 * qJD(2);
t838 = t692 + t655;
t615 = t499 * t636;
t565 = t615 + t314 / 0.2e1;
t643 = t759 / 0.2e1;
t89 = (t643 - t565) * t503;
t734 = t89 * qJD(1);
t739 = t505 * qJ(4);
t464 = pkin(3) * t503 - t739;
t375 = -pkin(8) * t748 + t499 * t464;
t334 = t503 * qJ(5) + t375;
t627 = -pkin(8) + t751;
t567 = -t627 + t777;
t387 = t567 * t503;
t388 = t567 * t505;
t588 = t387 * t505 + t388 * t503;
t93 = -t331 * t503 + t334 * t505 + t501 * t588;
t837 = t93 * qJD(2) + t734;
t184 = t375 * t505 + (-t367 + 0.2e1 * t484) * t503;
t836 = -t184 * qJD(2) - t734;
t781 = -t505 / 0.2e1;
t647 = t314 * t781;
t780 = t505 / 0.2e1;
t509 = (t313 * t780 - t365 / 0.2e1) * t501 + (t647 - t364 / 0.2e1) * t499;
t834 = qJD(1) * t509;
t833 = qJD(1) * t517;
t637 = -t752 / 0.2e1;
t804 = t313 / 0.2e1;
t519 = (t501 * t637 - t760 / 0.2e1 + t804) * t503;
t832 = qJD(1) * t519;
t713 = qJD(3) * t505;
t829 = t509 * qJD(2);
t828 = t509 * qJD(3);
t826 = t519 * qJD(2);
t825 = t519 * qJD(3);
t514 = t505 * t557 + t842;
t695 = t408 * qJD(3);
t820 = qJD(2) * t514 - t473 * t695;
t761 = t408 * t499;
t379 = -t761 / 0.2e1;
t614 = t503 * t637;
t644 = t408 * t780;
t755 = t499 * t503;
t783 = -t503 / 0.2e1;
t796 = t409 / 0.2e1;
t516 = t313 * t783 + t505 * t379 + t499 * t644 + t501 * t614 + t755 * t796;
t694 = t409 * qJD(3);
t819 = qJD(2) * t516 - t501 * t694;
t687 = t503 * qJD(2);
t818 = qJD(3) * t514 + (t364 * t501 - t365 * t499) * t687;
t817 = qJD(3) * t516 + (t364 * t505 + t497 * t677) * qJD(2);
t816 = qJD(2) * t517 + qJD(3) * t508;
t815 = qJD(2) * t526 + qJD(3) * t511;
t814 = qJD(2) * t520 + qJD(3) * t533;
t813 = t392 ^ 2;
t812 = t395 ^ 2;
t811 = t429 ^ 2;
t810 = t432 ^ 2;
t809 = pkin(4) + pkin(5);
t173 = -t313 * t778 + t314 * t502;
t808 = -t173 / 0.2e1;
t174 = t313 * t502 + t314 * t778;
t807 = -t174 / 0.2e1;
t806 = t174 / 0.2e1;
t670 = t365 * t778;
t763 = t364 * t502;
t201 = t670 + t763;
t805 = -t201 / 0.2e1;
t803 = -t314 / 0.2e1;
t802 = -t392 / 0.2e1;
t801 = -t395 / 0.2e1;
t800 = t395 / 0.2e1;
t396 = t429 * t505;
t641 = t396 / 0.2e1;
t799 = -t408 / 0.2e1;
t798 = t408 / 0.2e1;
t797 = -t409 / 0.2e1;
t794 = t429 / 0.2e1;
t792 = t432 / 0.2e1;
t791 = -t465 / 0.2e1;
t469 = t505 * t665;
t790 = t469 / 0.2e1;
t787 = -t501 / 0.2e1;
t785 = -t502 / 0.2e1;
t784 = t502 / 0.2e1;
t782 = t503 / 0.2e1;
t757 = t432 * t395;
t758 = t429 * t392;
t67 = -t757 - t758;
t779 = t67 * qJD(4);
t770 = t173 * t505;
t459 = t774 * t501;
t629 = t774 * t499;
t318 = t459 * t502 - t629 * t778;
t767 = t318 * t505;
t671 = t364 * t778;
t762 = t365 * t502;
t200 = t671 - t762;
t32 = -t173 * t200 + t174 * t201 + t337;
t766 = t32 * qJD(1);
t224 = t408 * t432;
t225 = t408 * t429;
t33 = t173 * t224 - t174 * t225 + t408 * t409;
t765 = t33 * qJD(1);
t764 = t331 * t505;
t756 = t432 * t505;
t750 = t501 * t464;
t749 = t501 * t497;
t267 = (-pkin(9) * t505 - t464) * t501 + (-pkin(5) + t674) * t503;
t745 = t502 * t267;
t297 = pkin(9) * t754 + t334;
t744 = t502 * t297;
t740 = t502 * t505;
t733 = t89 * qJD(2);
t732 = t89 * qJD(3);
t730 = t408 * t445;
t729 = t536 * t505;
t669 = t505 * t778;
t611 = -t669 / 0.2e1;
t631 = -t740 / 0.2e1;
t728 = t499 * t631 + t501 * t611;
t394 = t501 * t740 - t469;
t684 = t778 / 0.2e1;
t610 = t429 * t684;
t640 = -t756 / 0.2e1;
t666 = t778 * t396;
t121 = t505 * t610 + t666 / 0.2e1 + (t640 + t394 / 0.2e1) * t502;
t727 = qJD(2) * t121;
t210 = -t392 * t669 + t395 * t740;
t726 = qJD(2) * t210;
t228 = t392 * t503 - t394 * t505;
t725 = qJD(2) * t228;
t229 = -t395 * t503 + t396 * t505;
t724 = qJD(2) * t229;
t305 = t392 * t748 + t498 * t502;
t723 = qJD(2) * t305;
t722 = qJD(2) * t392;
t720 = qJD(2) * t500;
t718 = (t495 - t496) * t713;
t717 = qJD(3) * t429;
t715 = qJD(3) * t499;
t712 = qJD(3) * t506;
t711 = qJD(4) * t505;
t710 = qJD(5) * t499;
t709 = qJD(5) * t501;
t708 = qJD(5) * t505;
t707 = qJD(6) * t429;
t706 = qJD(6) * t505;
t628 = t499 * qJ(5) + pkin(3);
t442 = -pkin(4) * t501 - t628;
t680 = pkin(8) * t783;
t151 = pkin(4) * t783 + (t680 + t387 / 0.2e1) * t499 + (-t464 / 0.2e1 + t739 / 0.2e1 + t442 * t782) * t501;
t705 = t151 * qJD(2);
t160 = -t392 * t396 - t394 * t395;
t704 = t160 * qJD(2);
t185 = t337 + (t409 * t505 - t753) * t752;
t702 = t185 * qJD(1);
t632 = -t742 / 0.2e1;
t253 = t790 + (t632 + t793) * t505;
t701 = t253 * qJD(2);
t254 = t790 + (t632 + t792) * t505;
t700 = t254 * qJD(2);
t255 = t641 + t729;
t699 = t255 * qJD(2);
t256 = t641 + t728;
t698 = t256 * qJD(2);
t306 = t395 * t748 + t498 * t778;
t697 = t306 * qJD(2);
t696 = t392 * qJD(4);
t386 = t395 * qJD(6);
t426 = t473 * t497;
t693 = t426 * qJD(2);
t691 = t428 * qJD(3);
t431 = t498 * t501 - t749;
t416 = t431 * qJD(2);
t418 = t432 * qJD(6);
t689 = t473 * qJD(3);
t688 = t480 * qJD(2);
t686 = pkin(8) * t755;
t685 = -t778 / 0.2e1;
t683 = pkin(2) * t687;
t682 = pkin(2) * t719;
t681 = pkin(8) * t713;
t668 = t778 * t267;
t157 = t668 - t744;
t673 = t157 * t778;
t672 = t200 * t778;
t667 = t778 * t297;
t661 = t392 * t719;
t660 = t395 * t719;
t659 = t501 * t687;
t656 = t501 * t715;
t654 = qJD(4) * t748;
t653 = t429 * t418;
t478 = t499 * t711;
t652 = t499 * t709;
t651 = t506 * t720;
t650 = t501 * t719;
t649 = t503 * t713;
t483 = t505 * t687;
t645 = t408 * t787;
t642 = -t396 / 0.2e1;
t639 = t392 * t788;
t638 = t395 * t788;
t635 = -t748 / 0.2e1;
t630 = qJD(6) * t778;
t410 = t501 * t809 + t628;
t624 = qJD(3) * t410 - qJD(4);
t623 = qJD(2) * t499 * t749;
t622 = t499 * t655;
t621 = t503 * t478;
t620 = t495 * t483;
t619 = t496 * t483;
t618 = t499 * t483;
t617 = t501 * t483;
t616 = t408 * t635;
t612 = qJD(2) * t669;
t607 = -t386 - t660;
t294 = pkin(9) * t755 + t331;
t149 = t294 * t502 - t778 * t841;
t150 = t778 * t294 + t502 * t841;
t158 = t667 + t745;
t12 = t149 * t396 - t150 * t394 - t157 * t395 - t158 * t392;
t512 = t173 * t641 - t224 * t801 - t225 * t802 + t394 * t807;
t559 = t200 * t793 + t201 * t795;
t8 = t512 - t559;
t605 = t8 * qJD(1) + t12 * qJD(2);
t546 = -t499 * t809 + t627;
t325 = t546 * t503;
t326 = t546 * t505;
t15 = -t149 * t157 + t150 * t158 + t325 * t326;
t507 = t157 * t808 + t158 * t806 + t224 * t149 / 0.2e1 - t225 * t150 / 0.2e1 + t326 * t799 + t325 * t797;
t319 = t459 * t778 + t502 * t629;
t515 = t200 * t318 / 0.2e1 + t319 * t805 + t410 * t613;
t2 = t507 + t515;
t604 = t2 * qJD(1) + t15 * qJD(2);
t603 = t505 * t622;
t602 = t499 * t617;
t601 = -t442 * t505 + t771;
t532 = t842 * qJ(4);
t510 = t442 * t613 + t532;
t335 = t503 * t674 - t750;
t523 = -t313 * t335 / 0.2e1 + t334 * t803 + t387 * t797;
t16 = (-t388 / 0.2e1 + t556) * t408 + t510 + t523;
t61 = t331 * t334 + t332 * t335 + t387 * t388;
t600 = -t16 * qJD(1) + t61 * qJD(2);
t30 = t174 * t611 + t616 - t672 / 0.2e1 + (-t770 / 0.2e1 + t805) * t502;
t40 = t149 * t740 + t150 * t669 - t325 * t748;
t599 = qJD(1) * t30 - qJD(2) * t40;
t34 = t149 * t503 + t157 * t505 + t325 * t394 + t326 * t392;
t525 = -t224 * t781 + t392 * t796 + t394 * t798;
t36 = (t429 * t637 + t808) * t503 + t525;
t598 = -t36 * qJD(1) + t34 * qJD(2);
t35 = -t150 * t503 + t158 * t505 - t325 * t396 - t326 * t395;
t524 = -t225 * t780 + t395 * t796 + t396 * t798;
t37 = (t432 * t637 + t807) * t503 + t524;
t597 = -t37 * qJD(1) - t35 * qJD(2);
t41 = -t149 * t395 + t150 * t392;
t563 = t173 * t801 + t392 * t806;
t46 = t613 - t563;
t596 = -qJD(1) * t46 + qJD(2) * t41;
t542 = t671 / 0.2e1 - t762 / 0.2e1;
t560 = t174 * t781 + t395 * t799;
t53 = t542 - t560;
t74 = -t150 * t505 + t325 * t395;
t595 = -qJD(1) * t53 + qJD(2) * t74;
t543 = -t763 / 0.2e1 - t670 / 0.2e1;
t561 = t770 / 0.2e1 + t392 * t798;
t54 = t543 - t561;
t73 = -t149 * t505 + t325 * t392;
t594 = t54 * qJD(1) + t73 * qJD(2);
t72 = -t332 * t747 - t335 * t748 + (t334 * t503 + t764) * t499;
t593 = -t72 * qJD(2) + t834;
t374 = t686 + t750;
t92 = (t366 * t505 + t374 * t503) * t501 + (t367 * t505 + t375 * t503) * t499;
t592 = t92 * qJD(2) - t834;
t94 = -t332 * t503 + t335 * t505 + t499 * t588;
t591 = t94 * qJD(2) - t832;
t590 = t334 * t501 + t335 * t499;
t589 = -t374 * t499 + t375 * t501;
t105 = pkin(8) ^ 2 * t503 * t505 + t366 * t374 + t367 * t375;
t558 = t374 * t804 + t375 * t803;
t25 = pkin(3) * t614 - t186 * t408 + t409 * t680 + t532 + t558;
t586 = -t25 * qJD(1) + t105 * qJD(2);
t537 = t742 / 0.2e1 - t665 / 0.2e1;
t153 = (t792 + t537) * t408;
t521 = t319 * t781 + t325 * t792 + t410 * t800;
t538 = -t744 / 0.2e1 + t668 / 0.2e1;
t42 = -t521 + t538;
t585 = t153 * qJD(1) + t42 * qJD(2);
t154 = (t795 + t536) * t408;
t522 = t767 / 0.2e1 + t325 * t795 + t410 * t802;
t539 = -t745 / 0.2e1 - t667 / 0.2e1;
t43 = -t522 + t539;
t584 = t154 * qJD(1) + t43 * qJD(2);
t183 = -t366 * t503 + (t374 - 0.2e1 * t686) * t505;
t583 = t183 * qJD(2) + t832;
t159 = -t812 - t813;
t582 = qJD(2) * t159 + qJD(3) * t67;
t195 = -t810 - t811;
t581 = qJD(2) * t67 + qJD(3) * t195;
t88 = t499 * t613 + (t803 + t643) * t503;
t580 = qJD(2) * (t365 * t505 + t497 * t676) + qJD(3) * t88;
t178 = t331 * t755 - t332 * t748;
t576 = -qJD(2) * t178 - t833;
t190 = (t366 * t501 + t367 * t499) * t503;
t575 = qJD(2) * t190 + t833;
t147 = t408 * t634 + t505 * t565 + t791;
t192 = t387 * t748 + t764;
t574 = -qJD(1) * t147 - qJD(2) * t192;
t100 = -t757 + t758;
t188 = -t812 + t813;
t573 = qJD(2) * t188 + qJD(3) * t100;
t237 = -t810 + t811;
t572 = qJD(2) * t100 + qJD(3) * t237;
t541 = t392 * t785 + t395 * t685;
t197 = t635 + t541;
t540 = t429 * t785 + t432 * t685;
t246 = t789 + t540;
t571 = qJD(2) * t197 + qJD(3) * t246;
t570 = t717 + t722;
t569 = t716 + t721;
t566 = t501 * t631 + t790;
t562 = t173 * t793 + t174 * t794;
t554 = qJD(2) * t88 + t499 * t694;
t202 = t639 + (t429 * t786 + t684) * t503;
t549 = qJD(2) * t202 + t429 * t715;
t205 = t638 + (t432 * t786 + t785) * t503;
t548 = qJD(2) * t205 + t432 * t715;
t397 = (-0.1e1 / 0.2e1 + t495 / 0.2e1 - t496 / 0.2e1) * t503;
t547 = -qJD(2) * t397 + t656;
t424 = t659 + t715;
t545 = t325 * t788 + t410 * t634;
t544 = -t224 * t685 - t225 * t785;
t447 = t496 * t497 + t498;
t535 = qJD(2) * t447 + t622;
t127 = -t318 * t432 + t319 * t429;
t513 = t149 * t792 + t150 * t795 + t318 * t800 + t319 * t802;
t518 = ((pkin(4) / 0.2e1 + pkin(5) / 0.2e1) * t499 + t608) * t505;
t23 = t518 + t513;
t48 = t529 - t562;
t530 = -qJD(1) * t48 - qJD(2) * t23 + qJD(3) * t127;
t28 = t319 * t611 - t673 / 0.2e1 + (-t767 / 0.2e1 - t158 / 0.2e1) * t502 + t545;
t82 = t379 + t544;
t527 = qJD(1) * t82 + qJD(2) * t28 + t410 * t715;
t489 = -t714 / 0.2e1;
t463 = t497 * pkin(8) * t752;
t460 = t473 * qJD(4);
t458 = t505 * t654;
t457 = t496 * t649;
t456 = t495 * t649;
t444 = t503 * t652;
t437 = t445 * qJD(4);
t423 = qJD(6) * t782 + t483;
t421 = -0.2e1 * t602;
t420 = 0.2e1 * t602;
t417 = t431 * qJD(3);
t411 = t426 * qJD(4);
t407 = qJD(3) * t495 + t499 * t659;
t398 = t495 * t783 + t496 * t782 + t783;
t390 = t424 * t505;
t389 = -t501 * t713 + t618;
t369 = (t496 * t687 + t656) * t505;
t368 = (t495 * t687 - t656) * t505;
t340 = t499 * t714 - t416;
t260 = t640 + t566;
t259 = t756 / 0.2e1 + t566;
t258 = t642 + t729;
t257 = t642 + t728;
t245 = t789 - t540;
t239 = 0.2e1 * t379;
t204 = t638 + t432 * t634 + t741 / 0.2e1;
t203 = t639 + t429 * t634 - t663 / 0.2e1;
t196 = t635 - t541;
t187 = t679 + t555;
t156 = (t537 + t793) * t408;
t155 = (t536 + t794) * t408;
t152 = t739 * t787 + t442 * t635 + t387 * t789 - t750 / 0.2e1 + (-t776 / 0.2e1 - pkin(4) / 0.2e1) * t503;
t148 = t505 * t615 + t616 + t647 + t791;
t135 = t528 + t556;
t120 = t394 * t785 - t666 / 0.2e1 + (t432 * t785 + t610) * t505;
t99 = t100 * qJD(6);
t81 = t379 - t544;
t56 = t542 + t560;
t55 = t543 + t561;
t49 = t529 + t562;
t47 = t613 + t563;
t45 = t521 + t538;
t44 = t522 + t539;
t39 = t174 * t782 + t432 * t614 - t524;
t38 = t173 * t782 + t429 * t614 - t525;
t29 = t616 + t201 * t784 + t672 / 0.2e1 + (t173 * t785 + t174 * t685) * t505;
t27 = t158 * t784 + t673 / 0.2e1 + (t318 * t785 + t319 * t685) * t505 + t545;
t26 = t367 * t645 + t366 * t761 / 0.2e1 + pkin(8) * t644 + (pkin(3) * t637 + pkin(8) * t796) * t503 + t532 - t558;
t24 = t518 - t513;
t17 = t331 * t645 + t332 * t379 + t388 * t798 + t510 - t523;
t7 = t512 + t559;
t1 = t507 - t515;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t185, 0, 0, 0, 0, 0, 0, 0, 0, 0, t814, 0, 0, 0, 0, 0, 0, 0, 0, 0, t814, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t32 + qJD(3) * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t504 * t720, -t651, 0, 0, 0, 0, 0, 0, 0, 0 (-t503 * t712 - t504 * t719) * t500 (t504 * t687 - t505 * t712) * t500 (t497 + t498) * t651, t702 + (t463 + (pkin(8) * t498 * t506 - pkin(2) * t504) * t500) * qJD(2), 0, 0, 0, 0, 0, 0, t817, t580, t818 (-t364 * t366 + t365 * t367 + t463) * qJD(2) + t26 * qJD(3) + t848, 0, 0, 0, 0, 0, 0, t817, t818, -t580 (t365 * t331 + t364 * t332 + t387 * t675) * qJD(2) + t17 * qJD(3) + t148 * qJD(5) + t848, 0, 0, 0, 0, 0, 0 (t200 * t505 - t392 * t675) * qJD(2) + t38 * qJD(3) + t56 * qJD(6) (-t201 * t505 - t395 * t675) * qJD(2) + t39 * qJD(3) + t55 * qJD(6) (-t200 * t395 - t201 * t392) * qJD(2) + t7 * qJD(3), t766 + (-t200 * t149 + t201 * t150 - t325 * t675) * qJD(2) + t1 * qJD(3) + t47 * qJD(4) + t29 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t503 * t651 - t694, -t505 * t651 + t695, 0, 0, 0, 0, 0, 0, 0, 0, t819, t554, t820, t26 * qJD(2) + (-pkin(3) * t409 - t730) * qJD(3) + t849, 0, 0, 0, 0, 0, 0, t819, t820, -t554, t17 * qJD(2) + (t409 * t442 - t730) * qJD(3) + t239 * qJD(5) + t849, 0, 0, 0, 0, 0, 0, qJD(2) * t38 + qJD(6) * t156 - t429 * t694, qJD(2) * t39 + qJD(6) * t155 - t432 * t694, t7 * qJD(2) + (t224 * t432 + t225 * t429) * qJD(3), t765 + t1 * qJD(2) + (t224 * t318 - t225 * t319 - t409 * t410) * qJD(3) + t49 * qJD(4) + t81 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t815, 0, 0, 0, 0, 0, 0, 0, 0, 0, t815, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t47 + qJD(3) * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t148 + qJD(3) * t239, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t29 + qJD(3) * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t56 + qJD(3) * t156 - qJD(6) * t174, qJD(2) * t55 + qJD(3) * t155 + qJD(6) * t173, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t702, 0, 0, 0, 0, 0, 0, -t825, t732, t828, -qJD(3) * t25 + t847, 0, 0, 0, 0, 0, 0, -t825, t828, -t732, -qJD(3) * t16 - qJD(5) * t147 + t847, 0, 0, 0, 0, 0, 0, -qJD(3) * t36 - qJD(6) * t53, -qJD(3) * t37 - qJD(6) * t54, qJD(3) * t8, qJD(3) * t2 - qJD(4) * t46 + qJD(5) * t30 - t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t649, t480 * qJD(3), 0, -t649, 0, 0, -pkin(2) * t714, -pkin(2) * t713, 0, 0, t457, -0.2e1 * t603, -t417, t456, t691, -t649, -qJD(3) * t183 + t458, qJD(3) * t184 - t621, -qJD(3) * t92 + t411, qJD(3) * t105 - qJD(4) * t190, t457, -t417, 0.2e1 * t603, -t649, -t691, t456, qJD(3) * t94 - t497 * t652 + t458, -qJD(3) * t72 + t708 * t755 + t411, -qJD(3) * t93 + qJD(5) * t447 + t621, qJD(3) * t61 - qJD(4) * t178 - qJD(5) * t192 (qJD(3) * t396 - qJD(6) * t392) * t395, qJD(3) * t160 + qJD(6) * t188, qJD(3) * t229 - t392 * t706 (qJD(3) * t394 + t386) * t392, qJD(3) * t228 - t386 * t505, -t649, qJD(3) * t34 + qJD(5) * t305 + qJD(6) * t74 + t395 * t711, -qJD(3) * t35 + qJD(5) * t306 - qJD(6) * t73 - t505 * t696, qJD(3) * t12 + qJD(4) * t159 - qJD(5) * t210, qJD(3) * t15 + qJD(4) * t41 - qJD(5) * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t483, t688, t713, -t483, -t714, 0, -t681 - t683, pkin(8) * t714 - t682, 0, 0, t369, t421 - t718, t340, t368, t838, -t483 (t499 * t606 - t484) * qJD(3) + t478 - t583, t499 * t681 + (qJD(3) * t606 + t711) * t501 - t836, qJD(3) * t589 - t592 (-pkin(3) * t775 + qJ(4) * t589) * qJD(3) + t187 * qJD(4) + t586, t369, t340, t420 + t718, -t483, -t838, t368 (-t388 * t501 - t499 * t601) * qJD(3) + t478 + t398 * qJD(5) + t591, qJD(3) * t590 + t593, -t388 * t715 + t444 + (qJD(3) * t601 - t711) * t501 - t837 (qJ(4) * t590 + t388 * t442) * qJD(3) + t135 * qJD(4) + t152 * qJD(5) + t600, t396 * t569 + t846, t704 + (-t394 * t432 - t396 * t429) * qJD(3) + t99, qJD(6) * t258 - t432 * t714 + t724, t394 * t570 - t846, qJD(6) * t260 + t429 * t714 + t725, -t423 (t318 * t503 + t326 * t429 + t394 * t410) * qJD(3) + t259 * qJD(4) + t203 * qJD(5) + t45 * qJD(6) + t598 (t319 * t503 + t326 * t432 + t396 * t410) * qJD(3) + t257 * qJD(4) + t204 * qJD(5) + t44 * qJD(6) + t597 (-t157 * t432 - t158 * t429 + t318 * t396 - t319 * t394) * qJD(3) + t120 * qJD(5) + t605 + t779 (-t157 * t318 + t158 * t319 + t326 * t410) * qJD(3) + t24 * qJD(4) + t27 * qJD(5) + t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t390, -t389, t693, qJD(3) * t187 - t575, 0, 0, 0, 0, 0, 0, t390, t693, t389, qJD(3) * t135 + t576, 0, 0, 0, 0, 0, 0, qJD(3) * t259 + t660, qJD(3) * t257 - t661, t582, qJD(3) * t24 + qJD(5) * t196 + t596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t398 - t623, t618, t535, qJD(3) * t152 + t574, 0, 0, 0, 0, 0, 0, qJD(3) * t203 + t723, qJD(3) * t204 + t697, qJD(3) * t120 - t726, qJD(3) * t27 + qJD(4) * t196 + t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t844, t573, t258 * qJD(3) - t843, t844, qJD(3) * t260 + t607, t489, qJD(3) * t45 - qJD(6) * t150 + t595, qJD(3) * t44 + qJD(6) * t149 - t594, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t826, -t733, -t829, qJD(2) * t25 + t850, 0, 0, 0, 0, 0, 0, t826, -t829, t733, qJD(2) * t16 + t850, 0, 0, 0, 0, 0, 0, qJD(2) * t36 - qJD(6) * t153, qJD(2) * t37 - qJD(6) * t154, -qJD(2) * t8, -qJD(2) * t2 - qJD(4) * t48 + qJD(5) * t82 - t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t483, -t688, 0, t483, 0, 0, t683, t682, 0, 0, -t619, t420, t416, -t620, -t692, t483, t583, t836, t592, -qJD(4) * t186 - t586, -t619, t416, t421, t483, t692, -t620, -qJD(5) * t397 - t591, -t501 * t708 - t593, t444 + t837, -qJD(4) * t134 - qJD(5) * t151 - t600, -t396 * t721 + t846, t99 - t704, -qJD(6) * t255 - t724, -t394 * t722 - t846, -qJD(6) * t254 - t725, t423, -qJD(4) * t253 + qJD(5) * t202 - qJD(6) * t42 - t598, -qJD(4) * t256 + qJD(5) * t205 - qJD(6) * t43 - t597, qJD(5) * t121 - t605 + t779, -qJD(4) * t23 + qJD(5) * t28 - t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t460, t437, 0, 0, 0, 0, 0, 0, t652, t460, t495 * qJD(5), -t442 * t710 + t437, -t653, t237 * qJD(6), 0, t653, 0, 0, t410 * t418 + t429 * t710, -t410 * t707 + t432 * t710, qJD(4) * t195, qJD(4) * t127 + t410 * t710; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t689, t840, 0, 0, 0, 0, 0, 0, 0, t689, 0, t839, 0, 0, 0, 0, 0, 0, -t701, -t698, t581, qJD(5) * t245 + t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t547, -t650, t407, -t442 * t715 - t705, 0, 0, 0, 0, 0, 0, t549, t548, t727, qJD(4) * t245 + t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t845, t572, -t699 - t707, t845, -t418 - t700, t687 / 0.2e1, -qJD(6) * t319 + t410 * t716 - t585, qJD(6) * t318 - t410 * t717 - t584, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t816, 0, 0, 0, 0, 0, 0, 0, 0, 0, t816, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t46 + qJD(3) * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t617, t618, -t693, qJD(3) * t186 + t575, 0, 0, 0, 0, 0, 0, -t617, -t693, -t618, qJD(3) * t134 - t503 * t709 - t576, 0, 0, 0, 0, 0, 0, qJD(3) * t253 + t607, t256 * qJD(3) + t843, -t582, qJD(3) * t23 + qJD(5) * t197 - t596; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t689, -t840, 0, 0, 0, 0, 0, 0, 0, -t689, 0, -t710 - t839, 0, 0, 0, 0, 0, 0, -t418 + t701, t698 + t707, -t581, qJD(5) * t246 - t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t424, 0, 0, 0, 0, 0, 0, 0, 0, 0, t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t569, t570, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t147, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t30 - qJD(3) * t82; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t397 + t623, -t389, -t535, qJD(3) * t151 - t574 + t654, 0, 0, 0, 0, 0, 0, -qJD(3) * t202 - t502 * t706 - t723, -t205 * qJD(3) - t505 * t630 - t697, -qJD(3) * t121 + t726, -qJD(3) * t28 - qJD(4) * t197 - t599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t547, t650, -t407, t705 + (qJD(3) * t442 + qJD(4)) * t499, 0, 0, 0, 0, 0, 0, -t549, -t548, -t727, -qJD(4) * t246 - t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t424, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t571; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t625 * t502, -t612 - t630, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t53 + qJD(3) * t153, qJD(2) * t54 + qJD(3) * t154, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t844, -t573, qJD(3) * t255 + t661, -t844, qJD(3) * t254 + t660, t489, qJD(3) * t42 + qJD(4) * t395 + t502 * t708 - t595, t43 * qJD(3) + qJD(5) * t669 + t594 - t696, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, -t572, t699, -t845, t700, -t687 / 0.2e1, -t432 * t624 + t585, t429 * t624 + t584, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t569, -t570, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t502 * t719, t612, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t3;
