% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6PRPRPR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d6,theta1,theta3]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 23:01
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6PRPRPR5_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRPR5_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRPR5_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPRPR5_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPRPR5_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPRPR5_invdynf_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 23:00:57
% EndTime: 2019-05-04 23:01:05
% DurationCPUTime: 9.08s
% Computational Cost: add. (21050->299), mult. (48019->411), div. (0->0), fcn. (36463->12), ass. (0->234)
t2185 = sin(qJ(4));
t2188 = cos(qJ(4));
t2180 = cos(pkin(11));
t2253 = qJD(2) * t2180;
t2177 = sin(pkin(11));
t2254 = qJD(2) * t2177;
t2147 = t2185 * t2254 - t2188 * t2253;
t2214 = t2177 * t2188 + t2180 * t2185;
t2149 = t2214 * qJD(2);
t2247 = t2149 * t2147;
t2112 = -qJDD(4) - t2247;
t2190 = qJD(4) ^ 2;
t2257 = t2149 ^ 2;
t2132 = t2190 + t2257;
t2088 = t2112 * t2185 - t2132 * t2188;
t2090 = t2112 * t2188 + t2132 * t2185;
t2058 = t2088 * t2180 + t2090 * t2177;
t2179 = sin(pkin(6));
t2182 = cos(pkin(6));
t2059 = t2088 * t2177 - t2090 * t2180;
t2186 = sin(qJ(2));
t2189 = cos(qJ(2));
t2252 = qJD(4) * t2147;
t2261 = t2214 * qJDD(2);
t2204 = t2261 - 0.2e1 * t2252;
t2218 = t2059 * t2186 + t2189 * t2204;
t2020 = t2179 * t2058 + t2182 * t2218;
t2041 = t2059 * t2189 - t2186 * t2204;
t2178 = sin(pkin(10));
t2181 = cos(pkin(10));
t2282 = t2020 * t2178 - t2041 * t2181;
t2281 = t2020 * t2181 + t2041 * t2178;
t2019 = -t2182 * t2058 + t2179 * t2218;
t2140 = t2147 ^ 2;
t2106 = -t2190 - t2140;
t2233 = qJDD(4) - t2247;
t2075 = t2106 * t2185 + t2188 * t2233;
t2078 = -t2106 * t2188 + t2185 * t2233;
t2048 = t2075 * t2177 + t2078 * t2180;
t2276 = t2048 * t2186;
t2275 = t2048 * t2189;
t2045 = t2075 * t2180 - t2078 * t2177;
t2274 = t2179 * t2045;
t2273 = t2182 * t2045;
t2203 = t2261 - t2252;
t2272 = -qJDD(6) - t2203;
t2171 = t2180 * qJDD(2);
t2239 = t2177 * qJDD(2);
t2141 = -t2188 * t2171 + t2185 * t2239;
t2248 = t2149 * qJD(4);
t2114 = t2141 + t2248;
t2129 = pkin(5) * t2149 - qJD(4) * pkin(9);
t2191 = qJD(2) ^ 2;
t2160 = -g(1) * t2181 - g(2) * t2178;
t2231 = g(1) * t2178 - g(2) * t2181;
t2255 = -g(3) + qJDD(1);
t2265 = t2179 * t2255 + t2182 * t2231;
t2230 = t2186 * t2160 - t2189 * t2265;
t2098 = -qJDD(2) * pkin(2) - t2191 * qJ(3) + qJDD(3) + t2230;
t2194 = t2180 ^ 2;
t2244 = t2194 * t2191;
t2192 = t2177 ^ 2;
t2245 = t2192 * t2191;
t2085 = -pkin(3) * t2171 + t2098 + (-t2244 - t2245) * pkin(8);
t2199 = t2114 * pkin(4) + t2085 + (-t2203 + t2252) * qJ(5);
t2237 = pkin(4) * qJD(4) - (2 * qJD(5));
t2271 = -t2140 * pkin(5) + t2114 * pkin(9) + t2149 * (-t2129 + t2237) + t2199;
t2104 = pkin(4) * t2147 - qJ(5) * t2149;
t2101 = t2189 * t2160 + t2186 * t2265;
t2099 = -pkin(2) * t2191 + qJDD(2) * qJ(3) + t2101;
t2130 = -t2179 * t2231 + t2182 * t2255;
t2241 = -0.2e1 * qJD(3) * t2254 + t2180 * t2130;
t2246 = t2180 * t2191;
t2068 = (pkin(3) * t2246 - pkin(8) * qJDD(2) - t2099) * t2177 + t2241;
t2074 = 0.2e1 * qJD(3) * t2253 + t2180 * t2099 + t2177 * t2130;
t2069 = -pkin(3) * t2244 + pkin(8) * t2171 + t2074;
t2038 = t2188 * t2068 - t2185 * t2069;
t2208 = -qJDD(4) * pkin(4) - t2190 * qJ(5) + qJDD(5) - t2038;
t2270 = pkin(5) * t2261 - qJDD(4) * pkin(9) + (pkin(9) * t2147 + t2104) * t2149 + t2208;
t2269 = t2185 * t2261;
t2262 = -t2140 - t2257;
t2268 = t2186 * t2262;
t2267 = t2188 * t2261;
t2266 = t2189 * t2262;
t2240 = t2192 + t2194;
t2157 = t2240 * t2191;
t2184 = sin(qJ(6));
t2187 = cos(qJ(6));
t2196 = -t2184 * t2271 + t2187 * t2270;
t2124 = qJD(4) * t2184 - t2187 * t2147;
t2260 = t2124 ^ 2;
t2126 = qJD(4) * t2187 + t2147 * t2184;
t2259 = t2126 ^ 2;
t2139 = qJD(6) + t2149;
t2258 = t2139 ^ 2;
t2256 = 2 * qJD(5);
t2249 = t2126 * t2124;
t2243 = qJD(6) - t2139;
t2242 = qJD(6) + t2139;
t2238 = -t2258 - t2259;
t2234 = -t2184 * qJDD(4) + t2187 * t2114;
t1999 = t2184 * t2270 + t2187 * t2271;
t1983 = t2184 * t1999 + t2187 * t2196;
t2039 = t2185 * t2068 + t2188 * t2069;
t2202 = -t2190 * pkin(4) + qJDD(4) * qJ(5) - t2147 * t2104 + t2039;
t2018 = -t2114 * pkin(5) - t2140 * pkin(9) + (t2256 + t2129) * qJD(4) + t2202;
t1977 = -t1983 * t2188 + t2018 * t2185;
t1978 = t1983 * t2185 + t2018 * t2188;
t1972 = -t1977 * t2177 + t1978 * t2180;
t1984 = t2187 * t1999 - t2184 * t2196;
t2229 = t1972 * t2186 - t1984 * t2189;
t2029 = qJD(4) * t2256 + t2202;
t2030 = t2149 * t2104 + t2208;
t2004 = t2029 * t2185 - t2030 * t2188;
t2005 = t2029 * t2188 + t2030 * t2185;
t1989 = -t2004 * t2177 + t2005 * t2180;
t2040 = t2149 * t2237 + t2199;
t2228 = t1989 * t2186 - t2040 * t2189;
t2008 = t2038 * t2188 + t2039 * t2185;
t2009 = -t2038 * t2185 + t2039 * t2188;
t1993 = -t2008 * t2177 + t2009 * t2180;
t2227 = t1993 * t2186 - t2085 * t2189;
t2065 = -t2126 * t2243 + t2234;
t2212 = -t2187 * qJDD(4) - t2184 * t2114;
t2205 = t2124 * t2243 + t2212;
t2031 = t2184 * t2065 + t2187 * t2205;
t2083 = -t2259 - t2260;
t2021 = -t2031 * t2188 + t2083 * t2185;
t2022 = t2031 * t2185 + t2083 * t2188;
t1998 = -t2021 * t2177 + t2022 * t2180;
t2032 = t2187 * t2065 - t2184 * t2205;
t2226 = t1998 * t2186 - t2032 * t2189;
t2084 = -t2258 - t2260;
t2200 = -t2249 - t2272;
t2049 = t2184 * t2084 + t2187 * t2200;
t2064 = t2126 * t2242 - t2234;
t2025 = -t2049 * t2188 + t2064 * t2185;
t2026 = t2049 * t2185 + t2064 * t2188;
t2001 = -t2025 * t2177 + t2026 * t2180;
t2050 = t2187 * t2084 - t2184 * t2200;
t2225 = t2001 * t2186 - t2050 * t2189;
t2071 = -t2249 + t2272;
t2055 = t2184 * t2071 + t2187 * t2238;
t2066 = -t2124 * t2242 - t2212;
t2027 = -t2055 * t2188 + t2066 * t2185;
t2028 = t2055 * t2185 + t2066 * t2188;
t2003 = -t2027 * t2177 + t2028 * t2180;
t2056 = t2187 * t2071 - t2184 * t2238;
t2224 = t2003 * t2186 - t2056 * t2189;
t2073 = -t2099 * t2177 + t2241;
t2044 = -t2073 * t2177 + t2074 * t2180;
t2223 = t2044 * t2186 - t2098 * t2189;
t2113 = t2141 + 0.2e1 * t2248;
t2222 = -t2113 * t2189 - t2276;
t2091 = t2114 + t2248;
t2221 = t2091 * t2189 + t2276;
t2092 = -t2114 + t2248;
t2079 = t2092 * t2185 - t2267;
t2081 = t2092 * t2188 + t2269;
t2053 = -t2079 * t2177 + t2081 * t2180;
t2220 = t2053 * t2186 - t2266;
t2080 = -t2141 * t2185 - t2267;
t2082 = -t2141 * t2188 + t2269;
t2054 = -t2080 * t2177 + t2082 * t2180;
t2219 = t2054 * t2186 - t2266;
t2216 = t2101 * t2186 - t2189 * t2230;
t2156 = t2240 * qJDD(2);
t2215 = t2156 * t2186 + t2157 * t2189;
t2213 = qJDD(2) * t2189 - t2186 * t2191;
t2159 = -qJDD(2) * t2186 - t2189 * t2191;
t2153 = t2177 * t2157;
t2210 = t2153 * t2186 - t2189 * t2239;
t2154 = t2180 * t2157;
t2209 = -t2154 * t2186 + t2171 * t2189;
t2163 = t2177 * t2246;
t2146 = t2213 * t2182;
t2145 = t2159 * t2182;
t2144 = t2213 * t2179;
t2143 = t2159 * t2179;
t2123 = -t2154 * t2189 - t2171 * t2186;
t2122 = t2153 * t2189 + t2186 * t2239;
t2121 = t2156 * t2189 - t2157 * t2186;
t2120 = t2209 * t2182;
t2119 = t2210 * t2182;
t2118 = t2209 * t2179;
t2117 = t2210 * t2179;
t2108 = t2215 * t2182;
t2107 = t2215 * t2179;
t2072 = t2101 * t2189 + t2186 * t2230;
t2063 = -t2179 * t2130 + t2182 * t2216;
t2062 = t2182 * t2130 + t2179 * t2216;
t2052 = t2080 * t2180 + t2082 * t2177;
t2051 = t2079 * t2180 + t2081 * t2177;
t2043 = t2073 * t2180 + t2074 * t2177;
t2037 = t2113 * t2186 - t2275;
t2036 = t2054 * t2189 + t2268;
t2035 = t2053 * t2189 + t2268;
t2034 = -t2091 * t2186 + t2275;
t2033 = t2044 * t2189 + t2098 * t2186;
t2017 = t2182 * t2222 - t2274;
t2016 = t2179 * t2222 + t2273;
t2015 = -t2179 * t2052 + t2182 * t2219;
t2014 = -t2179 * t2051 + t2182 * t2220;
t2013 = t2182 * t2052 + t2179 * t2219;
t2012 = t2182 * t2051 + t2179 * t2220;
t2011 = t2182 * t2221 + t2274;
t2010 = t2179 * t2221 - t2273;
t2007 = -t2179 * t2043 + t2182 * t2223;
t2006 = t2182 * t2043 + t2179 * t2223;
t2002 = t2027 * t2180 + t2028 * t2177;
t2000 = t2025 * t2180 + t2026 * t2177;
t1997 = t2021 * t2180 + t2022 * t2177;
t1995 = t2003 * t2189 + t2056 * t2186;
t1994 = t2001 * t2189 + t2050 * t2186;
t1992 = t2008 * t2180 + t2009 * t2177;
t1991 = t1993 * t2189 + t2085 * t2186;
t1990 = t1998 * t2189 + t2032 * t2186;
t1988 = t2004 * t2180 + t2005 * t2177;
t1987 = t1989 * t2189 + t2040 * t2186;
t1986 = -t2179 * t2002 + t2182 * t2224;
t1985 = t2182 * t2002 + t2179 * t2224;
t1982 = -t2179 * t2000 + t2182 * t2225;
t1981 = t2182 * t2000 + t2179 * t2225;
t1980 = -t2179 * t1997 + t2182 * t2226;
t1979 = t2182 * t1997 + t2179 * t2226;
t1976 = -t2179 * t1992 + t2182 * t2227;
t1975 = t2182 * t1992 + t2179 * t2227;
t1974 = -t2179 * t1988 + t2182 * t2228;
t1973 = t2182 * t1988 + t2179 * t2228;
t1971 = t1977 * t2180 + t1978 * t2177;
t1970 = t1972 * t2189 + t1984 * t2186;
t1969 = -t2179 * t1971 + t2182 * t2229;
t1968 = t2182 * t1971 + t2179 * t2229;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2181 * t2160 - t2178 * t2231, 0, 0, 0, 0, 0, 0, -t2146 * t2178 + t2159 * t2181, -t2145 * t2178 - t2181 * t2213, 0, -t2063 * t2178 + t2072 * t2181, 0, 0, 0, 0, 0, 0, -t2120 * t2178 + t2123 * t2181, -t2119 * t2178 + t2122 * t2181, -t2108 * t2178 + t2121 * t2181, -t2007 * t2178 + t2033 * t2181, 0, 0, 0, 0, 0, 0, -t2017 * t2178 + t2037 * t2181, t2282, -t2014 * t2178 + t2035 * t2181, -t1976 * t2178 + t1991 * t2181, 0, 0, 0, 0, 0, 0, -t2015 * t2178 + t2036 * t2181, -t2011 * t2178 + t2034 * t2181, -t2282, -t1974 * t2178 + t1987 * t2181, 0, 0, 0, 0, 0, 0, -t1982 * t2178 + t1994 * t2181, -t1986 * t2178 + t1995 * t2181, -t1980 * t2178 + t1990 * t2181, -t1969 * t2178 + t1970 * t2181; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2178 * t2160 + t2181 * t2231, 0, 0, 0, 0, 0, 0, t2146 * t2181 + t2159 * t2178, t2145 * t2181 - t2178 * t2213, 0, t2063 * t2181 + t2072 * t2178, 0, 0, 0, 0, 0, 0, t2120 * t2181 + t2123 * t2178, t2119 * t2181 + t2122 * t2178, t2108 * t2181 + t2121 * t2178, t2007 * t2181 + t2033 * t2178, 0, 0, 0, 0, 0, 0, t2017 * t2181 + t2037 * t2178, -t2281, t2014 * t2181 + t2035 * t2178, t1976 * t2181 + t1991 * t2178, 0, 0, 0, 0, 0, 0, t2015 * t2181 + t2036 * t2178, t2011 * t2181 + t2034 * t2178, t2281, t1974 * t2181 + t1987 * t2178, 0, 0, 0, 0, 0, 0, t1982 * t2181 + t1994 * t2178, t1986 * t2181 + t1995 * t2178, t1980 * t2181 + t1990 * t2178, t1969 * t2181 + t1970 * t2178; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2255, 0, 0, 0, 0, 0, 0, t2144, t2143, 0, t2062, 0, 0, 0, 0, 0, 0, t2118, t2117, t2107, t2006, 0, 0, 0, 0, 0, 0, t2016, -t2019, t2012, t1975, 0, 0, 0, 0, 0, 0, t2013, t2010, t2019, t1973, 0, 0, 0, 0, 0, 0, t1981, t1985, t1979, t1968; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2160, 0, 0, 0, 0, 0, 0, t2159, -t2213, 0, t2072, 0, 0, 0, 0, 0, 0, t2123, t2122, t2121, t2033, 0, 0, 0, 0, 0, 0, t2037, -t2041, t2035, t1991, 0, 0, 0, 0, 0, 0, t2036, t2034, t2041, t1987, 0, 0, 0, 0, 0, 0, t1994, t1995, t1990, t1970; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2231, 0, 0, 0, 0, 0, 0, t2146, t2145, 0, t2063, 0, 0, 0, 0, 0, 0, t2120, t2119, t2108, t2007, 0, 0, 0, 0, 0, 0, t2017, -t2020, t2014, t1976, 0, 0, 0, 0, 0, 0, t2015, t2011, t2020, t1974, 0, 0, 0, 0, 0, 0, t1982, t1986, t1980, t1969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2255, 0, 0, 0, 0, 0, 0, t2144, t2143, 0, t2062, 0, 0, 0, 0, 0, 0, t2118, t2117, t2107, t2006, 0, 0, 0, 0, 0, 0, t2016, -t2019, t2012, t1975, 0, 0, 0, 0, 0, 0, t2013, t2010, t2019, t1973, 0, 0, 0, 0, 0, 0, t1981, t1985, t1979, t1968; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2191, -qJDD(2), 0, t2101, 0, 0, 0, 0, 0, 0, -t2154, t2153, t2156, t2044, 0, 0, 0, 0, 0, 0, -t2048, -t2059, t2053, t1993, 0, 0, 0, 0, 0, 0, t2054, t2048, t2059, t1989, 0, 0, 0, 0, 0, 0, t2001, t2003, t1998, t1972; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t2191, 0, -t2230, 0, 0, 0, 0, 0, 0, t2171, -t2239, t2157, -t2098, 0, 0, 0, 0, 0, 0, -t2113, -t2204, -t2262, -t2085, 0, 0, 0, 0, 0, 0, -t2262, t2091, t2204, -t2040, 0, 0, 0, 0, 0, 0, -t2050, -t2056, -t2032, -t1984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2130, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2043, 0, 0, 0, 0, 0, 0, t2045, t2058, t2051, t1992, 0, 0, 0, 0, 0, 0, t2052, -t2045, -t2058, t1988, 0, 0, 0, 0, 0, 0, t2000, t2002, t1997, t1971; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2244, t2163, t2171, t2074, 0, 0, 0, 0, 0, 0, -t2078, t2090, t2081, t2009, 0, 0, 0, 0, 0, 0, t2082, t2078, -t2090, t2005, 0, 0, 0, 0, 0, 0, t2026, t2028, t2022, t1978; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2163, -t2245, -t2239, t2073, 0, 0, 0, 0, 0, 0, t2075, t2088, t2079, t2008, 0, 0, 0, 0, 0, 0, t2080, -t2075, -t2088, t2004, 0, 0, 0, 0, 0, 0, t2025, t2027, t2021, t1977; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2171, t2239, -t2157, t2098, 0, 0, 0, 0, 0, 0, t2113, t2204, t2262, t2085, 0, 0, 0, 0, 0, 0, t2262, -t2091, -t2204, t2040, 0, 0, 0, 0, 0, 0, t2050, t2056, t2032, t1984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2106, t2112, t2092, t2039, 0, 0, 0, 0, 0, 0, -t2141, -t2106, -t2112, t2029, 0, 0, 0, 0, 0, 0, t2064, t2066, t2083, t2018; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2233, -t2132, -t2261, t2038, 0, 0, 0, 0, 0, 0, -t2261, -t2233, t2132, -t2030, 0, 0, 0, 0, 0, 0, -t2049, -t2055, -t2031, -t1983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2113, t2204, t2262, t2085, 0, 0, 0, 0, 0, 0, t2262, -t2091, -t2204, t2040, 0, 0, 0, 0, 0, 0, t2050, t2056, t2032, t1984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2262, -t2091, -t2204, t2040, 0, 0, 0, 0, 0, 0, t2050, t2056, t2032, t1984; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2141, t2106, t2112, -t2029, 0, 0, 0, 0, 0, 0, -t2064, -t2066, -t2083, -t2018; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2261, t2233, -t2132, t2030, 0, 0, 0, 0, 0, 0, t2049, t2055, t2031, t1983; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2084, t2071, t2065, t1999; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2200, t2238, t2205, t2196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2064, t2066, t2083, t2018;];
f_new_reg  = t1;
