% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x25]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 20:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPRRP6_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPRRP6_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPRRP6_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6PRPRRP6_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 20:20:59
% EndTime: 2019-03-08 20:21:11
% DurationCPUTime: 6.18s
% Computational Cost: add. (3673->481), mult. (8486->659), div. (0->0), fcn. (8174->8), ass. (0->364)
t299 = sin(qJ(4));
t302 = cos(qJ(4));
t297 = sin(pkin(6));
t303 = cos(qJ(2));
t473 = t297 * t303;
t500 = cos(pkin(6));
t335 = t299 * t500 + t302 * t473;
t298 = sin(qJ(5));
t294 = t298 ^ 2;
t301 = cos(qJ(5));
t295 = t301 ^ 2;
t445 = t294 + t295;
t308 = t445 * t335;
t328 = t335 * t301;
t502 = t302 * pkin(9);
t373 = t299 * pkin(4) - t502;
t351 = qJ(3) + t373;
t224 = t301 * t351;
t304 = -pkin(2) - pkin(8);
t468 = t298 * t304;
t176 = t299 * t468 - t224;
t296 = t302 ^ 2;
t526 = t299 ^ 2;
t421 = t526 / 0.2e1;
t385 = t421 + t296 / 0.2e1;
t512 = -t298 / 0.2e1;
t208 = t298 * t385 + t512;
t324 = t335 * t302;
t318 = t324 / 0.2e1;
t395 = -t473 / 0.2e1;
t313 = t318 + t395;
t300 = sin(qJ(2));
t474 = t297 * t300;
t397 = -t474 / 0.2e1;
t466 = t300 * t301;
t416 = t297 * t466;
t214 = -t299 * t473 + t302 * t500;
t480 = t214 * t298;
t133 = -t416 + t480;
t525 = -t133 / 0.2e1;
t350 = t301 * t397 + t525;
t48 = t298 * t313 + t299 * t350;
t456 = t48 * qJD(1);
t540 = t208 * qJD(3) + t176 * qJD(5) - t456;
t423 = t302 * qJD(4);
t275 = t298 * t423;
t426 = t299 * qJD(5);
t280 = t301 * t426;
t285 = t296 * t301;
t513 = t285 / 0.2e1;
t209 = t513 + (t421 + 0.1e1 / 0.2e1) * t301;
t435 = t209 * qJD(2);
t539 = t435 + t275 + t280;
t279 = t301 * t423;
t409 = t298 * t426;
t207 = (0.1e1 / 0.2e1 + t385) * t298;
t437 = t207 * qJD(2);
t538 = t437 - t279 + t409;
t470 = t298 * t300;
t393 = -t470 / 0.2e1;
t417 = t297 * t470;
t479 = t214 * t301;
t134 = t417 + t479;
t522 = t134 / 0.2e1;
t349 = t297 * t393 + t522;
t306 = t299 * t349 - t301 * t313;
t454 = t306 * qJD(1);
t462 = t301 * t304;
t146 = t298 * (qJ(3) - t502) + (t298 * pkin(4) + qJ(6) + t462) * t299;
t469 = t298 * t302;
t282 = pkin(5) * t469;
t465 = t301 * qJ(6);
t190 = t282 + (-t304 - t465) * t302;
t463 = t301 * t302;
t67 = t146 * t299 - t190 * t463;
t537 = -t67 * qJD(2) - t454;
t398 = -t479 / 0.2e1;
t34 = (t398 + t349) * t302;
t458 = t34 * qJD(1);
t415 = t299 * t462;
t177 = t298 * t351 + t415;
t503 = t302 * pkin(4);
t250 = t299 * pkin(9) + t503;
t236 = t298 * t250;
t461 = t302 * t304;
t254 = t301 * t461;
t63 = t177 * t302 + (-t254 + t236) * t299;
t536 = -t63 * qJD(2) - t458;
t472 = t298 * qJ(6);
t504 = t301 * pkin(5);
t366 = t472 + t504;
t218 = t366 * t302;
t481 = t190 * t301;
t487 = t177 * t299;
t54 = -t487 + (t218 * t298 + t481) * t302;
t535 = -t54 * qJD(2) + t454;
t495 = t134 * t299;
t312 = -t495 / 0.2e1 + t301 * t318;
t396 = t474 / 0.2e1;
t377 = t299 * t396;
t49 = t298 * t377 + t301 * t395 - t312;
t329 = t335 * t298;
t320 = t329 / 0.2e1;
t511 = t298 / 0.2e1;
t83 = t335 * t511 + t320;
t501 = t83 * qJD(4) - t134 * qJD(5);
t534 = t49 * qJD(2) - t501;
t533 = -t207 * qJD(3) + t456;
t289 = t302 * qJ(6);
t153 = t254 + t236 + t289;
t249 = pkin(5) * t298 - t465;
t189 = (-t249 + t304) * t299;
t483 = t189 * t301;
t36 = (t146 - t483) * t302 + (t153 + t481) * t299;
t532 = t36 * qJD(2) + t458;
t317 = (-t480 / 0.2e1 - t350) * t302;
t531 = qJD(1) * t317;
t497 = qJD(2) * t306;
t530 = qJD(2) * t317;
t325 = t335 * t299;
t375 = t302 * t396;
t392 = t469 / 0.2e1;
t507 = -t302 / 0.2e1;
t316 = t133 * t507 + t214 * t392 + t299 * t320 + t301 * t375 + t325 * t512;
t434 = t214 * qJD(4);
t529 = qJD(2) * t316 + t83 * qJD(5) - t301 * t434;
t265 = t295 - t294;
t424 = t302 * qJD(2);
t410 = t298 * t424;
t379 = t301 * t410;
t337 = -t265 * qJD(4) + 0.2e1 * t379;
t459 = t303 * t301;
t180 = (t299 * t470 - t459) * t297;
t486 = t180 * t299;
t528 = qJD(4) * t316 + (-t296 * t417 - t486) * qJD(2);
t527 = -qJD(4) * t317 - qJD(5) * t306;
t524 = t133 / 0.2e1;
t523 = -t134 / 0.2e1;
t150 = -t224 + (-pkin(5) + t468) * t299;
t521 = t150 / 0.2e1;
t290 = t302 * pkin(5);
t414 = t298 * t461;
t464 = t301 * t250;
t156 = -t290 + t414 - t464;
t520 = t156 / 0.2e1;
t519 = -t180 / 0.2e1;
t518 = t190 / 0.2e1;
t517 = -t218 / 0.2e1;
t516 = t249 / 0.2e1;
t515 = -t250 / 0.2e1;
t514 = -t282 / 0.2e1;
t510 = -t299 / 0.2e1;
t509 = t299 / 0.2e1;
t508 = -t301 / 0.2e1;
t390 = t463 / 0.2e1;
t10 = t134 * t390 + t214 * t507 + t325 / 0.2e1 + t133 * t392 + t510 * t308;
t506 = t10 * qJD(4);
t505 = pkin(4) * t301;
t499 = qJD(2) * t34;
t498 = qJD(2) * t48;
t471 = t298 * t299;
t116 = t146 * t471;
t387 = t176 / 0.2e1 - t150 / 0.2e1;
t371 = t387 * t301;
t399 = t177 * t511;
t310 = (t399 - t371) * t299 - t116 / 0.2e1 + t218 * t507;
t346 = t472 / 0.2e1 + t504 / 0.2e1;
t12 = t310 - t346;
t496 = t12 * qJD(2);
t494 = t146 * t298;
t493 = t146 * t301;
t492 = t150 * t301;
t491 = t153 * t301;
t490 = t156 * t298;
t388 = t146 / 0.2e1 - t177 / 0.2e1;
t17 = (pkin(5) * t509 + t387) * t301 + (qJ(6) * t509 + t388) * t298;
t489 = t17 * qJD(2);
t488 = t176 * t299;
t460 = t303 * t298;
t181 = (t299 * t466 + t460) * t297;
t485 = t181 * t299;
t484 = t181 * t301;
t482 = t190 * t298;
t478 = t218 * t301;
t23 = t133 * t180 + t134 * t181 - t324 * t474;
t477 = t23 * qJD(1);
t238 = -pkin(4) - t366;
t476 = t238 * t302;
t24 = -t177 * t463 + (t493 + (t150 - t176) * t298) * t302;
t475 = t24 * qJD(2);
t467 = t299 * t301;
t55 = -t488 + (-t478 + t482) * t302;
t452 = t55 * qJD(2);
t97 = -t296 * t468 - t488;
t449 = t97 * qJD(2);
t210 = t301 * t421 + t508 + t513;
t198 = t210 * qJD(3);
t448 = -t177 * qJD(5) - t198;
t223 = t464 / 0.2e1;
t447 = t223 - t414 / 0.2e1;
t444 = qJD(2) * qJ(3);
t443 = qJD(2) * t297;
t442 = qJD(3) * t299;
t441 = qJD(4) * t298;
t440 = qJD(4) * t301;
t439 = qJD(5) * t298;
t438 = qJD(5) * t301;
t196 = t209 * qJD(3);
t233 = t445 * t302;
t433 = t233 * qJD(2);
t264 = -t296 + t526;
t234 = t264 * t298;
t432 = t234 * qJD(2);
t235 = t301 * t526 - t285;
t431 = t235 * qJD(2);
t430 = t264 * qJD(2);
t429 = t298 * qJD(6);
t428 = t299 * qJD(2);
t427 = t299 * qJD(4);
t288 = t299 * qJD(6);
t425 = t301 * qJD(6);
t422 = t302 * qJD(5);
t420 = -t254 / 0.2e1 - t289;
t419 = pkin(9) * t439;
t418 = pkin(9) * t438;
t413 = -t482 / 0.2e1 - t238 * t463 / 0.2e1 + pkin(9) * t467 / 0.2e1;
t412 = qJ(3) * t428;
t411 = qJ(3) * t424;
t408 = t298 * t422;
t407 = t301 * t422;
t263 = t300 * t443;
t406 = t303 * t443;
t405 = t298 * t438;
t404 = t298 * t442;
t273 = t298 * t440;
t403 = t298 * t425;
t402 = t302 * t429;
t401 = t299 * t423;
t400 = t299 * t424;
t394 = t471 / 0.2e1;
t391 = -t467 / 0.2e1;
t389 = t249 * t507;
t386 = t294 / 0.2e1 - t295 / 0.2e1;
t205 = (-0.1e1 / 0.2e1 + t386) * t302;
t384 = t205 * qJD(2) - t273;
t220 = t386 * t302;
t383 = t220 * qJD(2) - t273;
t244 = t298 * qJD(2) * t285;
t382 = t220 * qJD(4) + t244;
t272 = t298 * t428;
t381 = t207 * qJD(5) + t272;
t380 = t208 * qJD(5) - t272;
t281 = qJD(5) + t428;
t378 = t298 * t279;
t376 = t296 * t396;
t369 = 0.2e1 * t378;
t367 = pkin(4) * t392 + pkin(9) * t394;
t365 = t299 * t238 + t502;
t14 = -t146 * t176 + t150 * t177 + t190 * t218;
t327 = t335 * t218;
t347 = pkin(5) * t519 + t181 * qJ(6) / 0.2e1;
t3 = -t327 / 0.2e1 + t387 * t134 + t388 * t133 + t347;
t364 = -t3 * qJD(1) + t14 * qJD(2);
t19 = t376 + (t485 / 0.2e1 + t524) * t301 + (t486 / 0.2e1 + t523) * t298;
t64 = -t492 + t494;
t363 = -t19 * qJD(1) + t64 * qJD(2);
t21 = t150 * t467 + t153 * t469 - t156 * t463 - t116;
t92 = t133 * t391;
t26 = t92 - t484 / 0.2e1 + (t495 / 0.2e1 + t519) * t298;
t362 = t26 * qJD(1) - t21 * qJD(2);
t62 = -t176 * t302 + (t414 + t464) * t299;
t361 = t62 * qJD(2) - t531;
t37 = -t150 * t302 - t156 * t299 + (t189 * t302 - t190 * t299) * t298;
t360 = t37 * qJD(2) - t531;
t98 = -t296 * t462 - t487;
t359 = -t98 * qJD(2) + t454;
t22 = -t133 * t329 - t134 * t328 + t214 * t335;
t358 = t22 * qJD(1) + t10 * qJD(3);
t357 = qJD(4) * t34 + qJD(5) * t48;
t356 = t490 + t491;
t147 = t238 * t301 + t249 * t298;
t222 = -t236 / 0.2e1;
t311 = -pkin(9) * t471 / 0.2e1 + (t476 / 0.2e1 + t517) * t298 + (t389 - t190 / 0.2e1) * t301;
t39 = t222 + t311 + t420;
t355 = -t39 * qJD(2) + t147 * qJD(4);
t148 = -t238 * t298 + t249 * t301;
t246 = t304 * t392;
t259 = pkin(9) * t391;
t339 = t249 * t392 + t482 / 0.2e1 + t238 * t390 + t259;
t41 = -t290 + t246 + (t517 + t515) * t301 + t339;
t354 = -t41 * qJD(2) + t148 * qJD(4);
t353 = t281 * t302;
t348 = -t153 * qJ(6) / 0.2e1 + pkin(5) * t520;
t221 = t236 / 0.2e1;
t131 = t221 + t367;
t345 = pkin(4) * t440 - t131 * qJD(2);
t132 = t259 + (-t503 / 0.2e1 + t515) * t301;
t344 = pkin(4) * t441 - t132 * qJD(2);
t343 = t484 / 0.2e1 + t180 * t511;
t53 = t290 / 0.2e1 + t413 + t447;
t342 = -t53 * qJD(2) + t238 * t441;
t341 = t301 * t353;
t340 = t366 * qJD(5);
t232 = t265 * t296;
t338 = t232 * qJD(2) + t369;
t319 = -t328 / 0.2e1;
t305 = t133 * t520 + t153 * t522 + t214 * t518 + t335 * t189 / 0.2e1 - t329 * t521 + t146 * t319;
t314 = pkin(9) * t343 + t397 * t476;
t1 = -t305 + t314;
t13 = t146 * t153 + t150 * t156 + t190 * t189;
t8 = (t493 / 0.2e1 - t189 / 0.2e1 + t150 * t511) * t302 + (t491 / 0.2e1 + t518 + t490 / 0.2e1) * t299;
t336 = -t1 * qJD(1) + t13 * qJD(2) + t8 * qJD(3);
t165 = (-0.1e1 + t445) * t302 * t299;
t334 = t10 * qJD(1) + t8 * qJD(2) + t165 * qJD(3);
t33 = t298 * t375 + (t522 + t398) * t302;
t47 = t133 * t510 + t298 * t318 + t301 * t377 + t297 * t460 / 0.2e1;
t333 = qJD(2) * (t296 * t416 + t485) + qJD(4) * t33 + qJD(5) * t47;
t332 = t47 * qJD(2) - qJD(4) * t328 - t133 * qJD(5);
t330 = -t33 * qJD(2) + qJD(5) * t328 + t298 * t434;
t326 = t335 * t249;
t323 = -t340 + t425;
t243 = t295 * t296 + t526;
t322 = t243 * qJD(2) + t378 + t426;
t128 = t514 + (t465 / 0.2e1 + t516) * t302;
t307 = pkin(5) * t320 + qJ(6) * t319;
t15 = -t326 / 0.2e1 + t307;
t309 = (-t298 * t388 - t371) * pkin(9) + t190 * t516 + t218 * t238 / 0.2e1;
t6 = t309 + t348;
t315 = t238 * t249 * qJD(4) - t15 * qJD(1) + t6 * qJD(2) - t128 * qJD(3);
t283 = t423 / 0.2e1;
t278 = t301 * t428;
t277 = t301 * t442;
t276 = t299 * t425;
t274 = t298 * t427;
t245 = t301 * t402;
t242 = t281 * qJ(6);
t231 = t278 + t438;
t226 = (t428 + qJD(5) / 0.2e1) * t302;
t217 = -t274 + t407;
t216 = -t301 * t427 - t408;
t215 = t294 * qJD(4) + t379;
t213 = t220 * qJD(5);
t206 = t294 * t507 + t295 * t302 / 0.2e1 + t507;
t201 = t298 * t353;
t200 = (t410 - t440) * t299;
t142 = -t209 * qJD(5) - t278;
t141 = -t210 * qJD(5) + t278;
t129 = qJ(6) * t390 + t389 + t514;
t89 = t259 + t223 + (-t505 / 0.2e1 - t468) * t302;
t88 = -t254 + t222 + t367;
t52 = t246 - t464 / 0.2e1 - t290 / 0.2e1 + t413;
t51 = (t299 * t393 + t459 / 0.2e1) * t297 + t312;
t40 = -t478 / 0.2e1 + t290 + t339 + t447;
t38 = t221 + t311 - t420;
t25 = t134 * t394 + t343 + t92;
t20 = t133 * t508 + t134 * t511 + t299 * t343 + t376;
t18 = t176 * t508 - t494 / 0.2e1 + t399 + t492 / 0.2e1 + t346 * t299;
t16 = t326 / 0.2e1 + t307;
t11 = t310 + t346;
t7 = t8 * qJD(4);
t5 = t309 - t348;
t4 = t146 * t525 + t176 * t523 + t327 / 0.2e1 + t134 * t521 + t177 * t524 + t347;
t2 = t305 + t314;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23 * qJD(2) + t22 * qJD(4); 0, 0, -t263, -t406, t263, t406 ((-pkin(2) * t300 + qJ(3) * t303) * qJD(2) + t300 * qJD(3)) * t297, 0, 0, 0, 0, 0 (t300 * t423 + t303 * t428) * t297 (-t300 * t427 + t303 * t424) * t297, 0, 0, 0, 0, 0, t51 * qJD(5) + t528, -t333, -t49 * qJD(5) + t528, t25 * qJD(4) + (t180 * t301 - t181 * t298) * t424, t333, t477 + (-t190 * t302 * t474 + t181 * t146 + t180 * t150) * qJD(2) + t20 * qJD(3) + t2 * qJD(4) + t4 * qJD(5) + t49 * qJD(6); 0, 0, 0, 0, 0, 0, t263, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20 * qJD(2) + t506; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263 * t302 - t434, qJD(4) * t335 - t263 * t299, 0, 0, 0, 0, 0, t529, t330, t529, t25 * qJD(2) - qJD(4) * t308, -t330, t2 * qJD(2) + (-pkin(9) * t308 + t214 * t238) * qJD(4) + t16 * qJD(5) - t83 * qJD(6) + t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51 * qJD(2) + t501, -t332, -t534, 0, t332, t4 * qJD(2) + t16 * qJD(4) + (-t134 * pkin(5) - t133 * qJ(6)) * qJD(5) + t134 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t534; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t527, -t357, t527, qJD(4) * t26, t357, -t19 * qJD(3) - t1 * qJD(4) - t3 * qJD(5) + qJD(6) * t306 - t477; 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), -t401, t264 * qJD(4), 0, 0, 0, qJ(3) * t423 + t442, -qJ(3) * t427 + qJD(3) * t302, -t295 * t401 - t296 * t405, -t232 * qJD(5) + t299 * t369, -t235 * qJD(4) - t299 * t408, t234 * qJD(4) - t299 * t407, t401, t62 * qJD(4) + t98 * qJD(5) + t277, -t63 * qJD(4) - t97 * qJD(5) - t404, t37 * qJD(4) + t54 * qJD(5) - t296 * t403 + t277, -t233 * qJD(3) - t21 * qJD(4) - t24 * qJD(5) - t299 * t402, t36 * qJD(4) + t55 * qJD(5) + t243 * qJD(6) + t404, qJD(3) * t64 + t13 * qJD(4) + t14 * qJD(5) + qJD(6) * t67; 0, 0, 0, 0, 0, qJD(2), t444, 0, 0, 0, 0, 0, t428, t424, 0, 0, 0, 0, 0, t141, t380, t141, -t433, -t380, t11 * qJD(5) + t210 * qJD(6) + t363 + t7; 0, 0, 0, 0, 0, 0, 0, -t400, t430, -t427, -t423, 0, -t304 * t427 + t411, -t304 * t423 - t412, -t213 + (-t295 * t424 - t273) * t299, t299 * t337 - 0.2e1 * t302 * t405, t275 - t431, t279 + t432, t226 (t298 * t373 - t415) * qJD(4) + t89 * qJD(5) + t361 (-pkin(9) * t463 + (t468 + t505) * t299) * qJD(4) + t88 * qJD(5) + t536 (-t298 * t365 - t483) * qJD(4) + t40 * qJD(5) + t206 * qJD(6) + t360, qJD(4) * t356 + t18 * qJD(5) + t362 (-t189 * t298 + t301 * t365) * qJD(4) + t38 * qJD(5) + t245 + t532 (pkin(9) * t356 + t189 * t238) * qJD(4) + t5 * qJD(5) + t52 * qJD(6) + t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t382, -t338, -t201, -t341, t283, t89 * qJD(4) - t359 + t448, t88 * qJD(4) - t449 + t540, t40 * qJD(4) + t448 - t535, -t475 + t18 * qJD(4) + (-t289 * t301 + t282) * qJD(5) - t402, t38 * qJD(4) + t288 + t452 - t540, t11 * qJD(3) + t5 * qJD(4) + (-t177 * pkin(5) - t176 * qJ(6)) * qJD(5) + t146 * qJD(6) + t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t206 * qJD(4) - t244, -t201, t322, t52 * qJD(4) + t146 * qJD(5) + t198 - t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19 * qJD(2) + t506; 0, 0, 0, 0, 0, -qJD(2), -t444, 0, 0, 0, 0, 0, -t428, -t424, 0, 0, 0, 0, 0, t142, t381, t142, t433, -t381, t12 * qJD(5) + t209 * qJD(6) - t363 + t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427, -t423, 0, 0, 0, 0, 0, t216, -t217, t216, t233 * qJD(4), t217, t238 * t427 + t129 * qJD(5) + (pkin(9) * qJD(4) * t445 + t429) * t302 + t334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t539, t538, -t539, 0, -t538, t129 * qJD(4) - t299 * t340 + t276 + t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t530, t499, t530, -qJD(2) * t26, -t499, t1 * qJD(2) - t15 * qJD(5) - t358; 0, 0, 0, 0, 0, 0, 0, t400, -t430, 0, 0, 0, -t411, t412, t295 * t400 - t213, -0.2e1 * t298 * t341, t280 + t431, -t409 - t432, -t226, t132 * qJD(5) - t361, t131 * qJD(5) - t536, t41 * qJD(5) - t205 * qJD(6) - t360, -t17 * qJD(5) + t276 - t362, t39 * qJD(5) + t245 - t532, t6 * qJD(5) + qJD(6) * t53 - t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t128 * qJD(5) - t334; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, t265 * qJD(5), 0, 0, 0, -pkin(4) * t439, -pkin(4) * t438, -t148 * qJD(5) + t403, 0, -t147 * qJD(5) + t294 * qJD(6) (qJD(5) * t249 - t429) * t238; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t383, -t337, t231, -t272 - t439, -t424 / 0.2e1, -t344 - t418, -t345 + t419, -t354 - t418, t323 - t489, -t355 - t419, pkin(9) * t323 + t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t384, t231, t215, -t342 + t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t497, t498, t497, 0, -t498, t3 * qJD(2) + t15 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t382, t338, t200, t301 * t400 + t274, t283, -t132 * qJD(4) + t196 + t359, -t131 * qJD(4) + t449 + t533, -t41 * qJD(4) + t196 + t535, t17 * qJD(4) + t475, -t39 * qJD(4) + t288 - t452 - t533, qJ(6) * t288 - t12 * qJD(3) - t6 * qJD(4) - t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t435, -t437, t435, 0, t437, t128 * qJD(4) - t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t383, t337, -t278, t272, t424 / 0.2e1, t344, t345, t354, t489, t355, -t315; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t281, t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t497; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205 * qJD(4) + t244, t200, -t322, -qJ(6) * t426 - t53 * qJD(4) - t196 + t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t384, -t278, -t215, t342; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t281, -t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t9;
