% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR10_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR10_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR10_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR10_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:37:05
% EndTime: 2019-03-09 09:37:28
% DurationCPUTime: 11.94s
% Computational Cost: add. (7832->572), mult. (16329->740), div. (0->0), fcn. (17940->8), ass. (0->436)
t367 = sin(pkin(10));
t374 = cos(qJ(5));
t540 = t374 * t367;
t368 = cos(pkin(10));
t371 = sin(qJ(5));
t546 = t371 * t368;
t308 = t540 + t546;
t547 = t371 * t367;
t558 = t368 * t374;
t311 = -t547 + t558;
t370 = sin(qJ(6));
t373 = cos(qJ(6));
t150 = t370 * t308 - t373 * t311;
t670 = qJD(5) + qJD(6);
t666 = t670 * t150;
t372 = sin(qJ(2));
t332 = t372 * t558;
t545 = t371 * t372;
t274 = t367 * t545 - t332;
t268 = t373 * t274;
t277 = t308 * t372;
t551 = t370 * t277;
t625 = -t268 / 0.2e1 - t551 / 0.2e1;
t658 = t150 * t372;
t660 = -t658 / 0.2e1 + t625;
t672 = t660 * qJD(1);
t680 = -t672 + t666;
t659 = t658 / 0.2e1 + t625;
t679 = qJD(3) * t659;
t270 = t373 * t277;
t553 = t370 * t274;
t438 = -t553 / 0.2e1 + t270 / 0.2e1;
t293 = t373 * t308;
t549 = t370 * t311;
t632 = t293 + t549;
t650 = t632 * t372;
t661 = t650 / 0.2e1 + t438;
t678 = qJD(3) * t661;
t662 = -t650 / 0.2e1 + t438;
t677 = qJD(3) * t662;
t676 = qJD(6) * t659;
t675 = qJD(6) * t660;
t674 = qJD(6) * t661;
t673 = qJD(6) * t662;
t671 = t661 * qJD(1);
t375 = cos(qJ(2));
t557 = t368 * t375;
t333 = t374 * t557;
t275 = t375 * t547 - t333;
t269 = t373 * t275;
t278 = t308 * t375;
t550 = t370 * t278;
t446 = t269 + t550;
t510 = qJD(4) * t446;
t669 = qJD(3) * t660 - t510;
t369 = -pkin(2) - qJ(4);
t593 = -pkin(8) + t369;
t316 = t593 * t367;
t317 = t593 * t368;
t248 = t316 * t374 + t317 * t371;
t172 = -pkin(9) * t308 + t248;
t247 = t316 * t371 - t374 * t317;
t409 = -pkin(9) * t311 - t247;
t81 = t373 * t172 + t370 * t409;
t668 = t670 * t81;
t423 = -t370 * t172 + t373 * t409;
t667 = t670 * t423;
t515 = qJD(2) * t150;
t271 = t373 * t278;
t552 = t370 * t275;
t633 = -t271 + t552;
t641 = t633 * qJD(1);
t620 = -t641 + t515;
t639 = t446 ^ 2 - t633 ^ 2;
t665 = qJD(1) * t639;
t640 = -t150 ^ 2 + t632 ^ 2;
t663 = qJD(2) * t640;
t359 = t375 * pkin(7);
t360 = t375 * pkin(3);
t331 = t359 + t360;
t295 = pkin(4) * t557 + t331;
t220 = -pkin(5) * t275 + t295;
t657 = t220 * t446;
t656 = t220 * t633;
t516 = qJD(1) * t372;
t655 = t446 * t516;
t654 = t446 * t641;
t343 = t367 * pkin(4) + qJ(3);
t272 = pkin(5) * t308 + t343;
t609 = -t272 / 0.2e1;
t653 = t446 * t609;
t652 = t515 * t632;
t651 = t609 * t633;
t223 = t632 * qJD(5);
t503 = qJD(6) * t632;
t528 = -t223 - t503;
t301 = t311 * qJD(5);
t456 = -t547 / 0.2e1;
t605 = t311 / 0.2e1;
t384 = t332 / 0.2e1 + (t456 + t605) * t372;
t621 = t384 * qJD(1);
t649 = -t301 - t621;
t645 = qJD(2) * t632;
t644 = qJD(4) * t150;
t643 = qJD(4) * t632;
t455 = t545 / 0.2e1;
t601 = t372 / 0.2e1;
t207 = t367 * t455 - t332 / 0.2e1 + t311 * t601;
t642 = t207 * qJD(5);
t638 = qJD(1) * t446 - t645;
t634 = t268 + t551;
t486 = t311 * qJD(2);
t517 = qJD(1) * t278;
t630 = t486 - t517;
t400 = -t540 / 0.2e1 - t546 / 0.2e1;
t607 = t308 / 0.2e1;
t212 = (t607 + t400) * t375;
t629 = qJD(1) * t212 + t486;
t488 = t308 * qJD(2);
t628 = -qJD(1) * t275 + t488;
t604 = t333 / 0.2e1;
t606 = -t311 / 0.2e1;
t211 = t604 + (t456 + t606) * t375;
t627 = qJD(1) * t211 + t488;
t623 = qJD(5) * t384;
t622 = qJD(5) * t446;
t544 = t372 * qJ(3);
t429 = -t369 * t375 + t544;
t478 = t375 * qJD(3);
t507 = qJD(4) * t372;
t619 = qJD(2) * t429 - t478 + t507;
t596 = t372 * pkin(5);
t304 = -pkin(1) - t429;
t616 = pkin(3) + pkin(7);
t330 = t616 * t372;
t313 = t368 * t330;
t184 = t372 * pkin(4) + t313 + (pkin(8) * t375 - t304) * t367;
t312 = t367 * t330;
t242 = t368 * t304 + t312;
t193 = -pkin(8) * t557 + t242;
t84 = -t374 * t184 + t193 * t371;
t66 = pkin(9) * t278 - t84;
t62 = t66 + t596;
t53 = t373 * t62;
t618 = -t53 / 0.2e1;
t617 = -t62 / 0.2e1;
t615 = t633 / 0.2e1;
t614 = t220 / 0.2e1;
t613 = -t632 / 0.2e1;
t612 = t632 / 0.2e1;
t611 = t150 / 0.2e1;
t454 = -t271 / 0.2e1;
t608 = t278 / 0.2e1;
t453 = -t293 / 0.2e1;
t603 = -t343 / 0.2e1;
t602 = -t372 / 0.2e1;
t600 = t375 / 0.2e1;
t599 = pkin(5) * t278;
t598 = pkin(5) * t311;
t597 = pkin(8) * t372;
t595 = t375 * pkin(5);
t594 = qJD(5) / 0.2e1;
t18 = t150 * t615 + t611 * t633 + (-t612 + t613) * t446;
t25 = t150 * t633 - t446 * t632;
t592 = t18 * qJD(5) + t25 * qJD(6);
t43 = -t446 * t150 / 0.2e1 - t632 * t615;
t44 = -t446 * t611 + t613 * t633;
t591 = t43 * qJD(5) + t44 * qJD(6);
t590 = pkin(5) * qJD(5);
t589 = pkin(5) * qJD(6);
t294 = (-pkin(4) * t368 - t616) * t372;
t219 = t274 * pkin(5) + t294;
t85 = t184 * t371 + t193 * t374;
t67 = pkin(9) * t275 + t85;
t584 = t370 * t67;
t26 = -t53 + t584;
t329 = t372 * pkin(2) - qJ(3) * t375;
t305 = t372 * qJ(4) + t329;
t315 = t331 * t368;
t187 = t375 * pkin(4) + t315 + (-t305 - t597) * t367;
t169 = t374 * t187;
t246 = t368 * t305 + t331 * t367;
t203 = t368 * t597 + t246;
t548 = t371 * t203;
t447 = t169 - t548;
t65 = -t277 * pkin(9) + t447 + t595;
t582 = t373 * t65;
t168 = t371 * t187;
t189 = t374 * t203;
t527 = t189 + t168;
t68 = -pkin(9) * t274 + t527;
t583 = t370 * t68;
t1 = (t582 - t583) * t372 - t26 * t375 - t219 * t446 + t220 * t634;
t588 = t1 * qJD(1);
t580 = t373 * t67;
t27 = t370 * t62 + t580;
t445 = t270 - t553;
t579 = t373 * t68;
t586 = t370 * t65;
t2 = (t579 + t586) * t372 + t27 * t375 - t219 * t633 - t220 * t445;
t587 = t2 * qJD(1);
t585 = t370 * t66;
t581 = t373 * t66;
t28 = -t580 - t585;
t15 = t28 * t372 + t446 * t599 + t656;
t578 = qJD(1) * t15;
t29 = t581 - t584;
t16 = t29 * t372 + t599 * t633 - t657;
t577 = qJD(1) * t16;
t19 = -t26 * t372 - t657;
t576 = qJD(1) * t19;
t20 = -t27 * t372 + t656;
t575 = qJD(1) * t20;
t49 = -t295 * t275 - t372 * t84;
t574 = qJD(1) * t49;
t50 = -t278 * t295 - t372 * t85;
t573 = qJD(1) * t50;
t21 = t295 * t274 - t294 * t275 + t372 * t447 - t84 * t375;
t568 = t21 * qJD(1);
t22 = -t295 * t277 + t294 * t278 + t372 * t527 + t85 * t375;
t567 = t22 * qJD(1);
t245 = -t367 * t305 + t315;
t564 = t245 * t368;
t563 = t246 * t367;
t379 = t248 * t602 + t278 * t603 + t295 * t605;
t435 = t169 / 0.2e1 - t548 / 0.2e1;
t35 = -t379 + t435;
t562 = t35 * qJD(1);
t380 = t247 * t602 + t275 * t603 + t295 * t607;
t452 = -t168 / 0.2e1 - t189 / 0.2e1;
t36 = t380 + t452;
t561 = t36 * qJD(1);
t560 = t367 * t372;
t559 = t367 * t375;
t40 = t445 * t446 - t633 * t634;
t539 = t40 * qJD(1);
t241 = -t367 * t304 + t313;
t45 = t241 * t560 - t245 * t559 + (-t242 * t372 + t246 * t375) * t368;
t538 = t45 * qJD(1);
t46 = t241 * t245 + t242 * t246 - t330 * t331;
t537 = t46 * qJD(1);
t77 = t241 * t375 + t245 * t372 + (-t330 * t375 - t331 * t372) * t368;
t536 = t77 * qJD(1);
t78 = t246 * t372 - t331 * t560 + (t242 - t312) * t375;
t535 = t78 * qJD(1);
t82 = -t372 * t634 + t375 * t446;
t534 = t82 * qJD(1);
t83 = t372 * t445 + t375 * t633;
t533 = t83 * qJD(1);
t386 = t150 * t602;
t89 = t386 - t625;
t531 = t89 * qJD(1);
t90 = t386 + t625;
t530 = t90 * qJD(1);
t361 = t367 ^ 2;
t362 = t368 ^ 2;
t338 = t361 + t362;
t460 = t632 * t601;
t103 = -t460 + t438;
t526 = qJD(1) * t103;
t104 = -t460 - t438;
t525 = qJD(1) * t104;
t125 = (-t241 * t367 + t242 * t368) * t372;
t524 = qJD(1) * t125;
t126 = -t241 * t559 + t242 * t557;
t523 = qJD(1) * t126;
t167 = t454 + t271 / 0.2e1;
t522 = qJD(1) * t167;
t514 = qJD(2) * t272;
t513 = qJD(2) * t372;
t356 = qJD(2) * t375;
t365 = t372 ^ 2;
t512 = qJD(3) * t365;
t511 = qJD(4) * t633;
t509 = qJD(4) * t275;
t508 = qJD(4) * t278;
t506 = qJD(5) * t633;
t505 = qJD(5) * t372;
t502 = qJD(6) * t272;
t127 = t274 * t278 + t275 * t277;
t501 = t127 * qJD(1);
t182 = -t274 * t372 + t275 * t375;
t497 = t182 * qJD(1);
t183 = t277 * t372 - t278 * t375;
t496 = t183 * qJD(1);
t495 = t207 * qJD(1);
t214 = t308 * t602 + t368 * t455 + t540 * t601;
t492 = t214 * qJD(1);
t215 = (-t308 / 0.2e1 + t400) * t372;
t192 = t215 * qJD(1);
t432 = -pkin(2) * t375 - t544;
t320 = -pkin(1) + t432;
t249 = t320 * t375 + t329 * t372;
t491 = t249 * qJD(1);
t250 = -t320 * t372 + t329 * t375;
t490 = t250 * qJD(1);
t276 = t338 * t375 * t372;
t489 = t276 * qJD(1);
t298 = t308 * qJD(5);
t366 = t375 ^ 2;
t310 = t338 * t366;
t487 = t310 * qJD(1);
t449 = -t361 / 0.2e1 - t362 / 0.2e1;
t319 = -0.1e1 / 0.2e1 + t449;
t485 = t319 * qJD(2);
t484 = t338 * qJD(2);
t339 = t366 - t365;
t483 = t339 * qJD(1);
t482 = t365 * qJD(1);
t481 = t367 * qJD(2);
t480 = t368 * qJD(2);
t479 = t375 * qJD(1);
t477 = pkin(1) * t516;
t476 = pkin(1) * t479;
t475 = pkin(7) * t513;
t474 = -t599 / 0.2e1;
t473 = t598 / 0.2e1;
t472 = -t596 / 0.2e1;
t471 = -t583 / 0.2e1;
t470 = -t579 / 0.2e1;
t469 = t445 * t516;
t468 = t634 * t516;
t467 = t274 * t516;
t466 = t277 * t516;
t465 = t320 * t329 * qJD(1);
t464 = t320 * t516;
t463 = t367 * t482;
t462 = t368 * t482;
t340 = t372 * t479;
t450 = t359 / 0.2e1 + t360 / 0.2e1;
t448 = pkin(5) * t670;
t403 = -t564 / 0.2e1 - t563 / 0.2e1;
t110 = t403 + t450;
t363 = qJD(2) * qJ(3);
t444 = qJD(1) * t110 + t363;
t267 = t278 * t516;
t443 = qJD(2) * t384 - t267;
t442 = qJD(5) + t516;
t441 = -qJD(6) - t516;
t440 = qJD(2) * t343 + qJD(4);
t439 = (-pkin(7) / 0.2e1 - pkin(3) / 0.2e1) * t372;
t437 = t472 + t66 / 0.2e1;
t436 = t595 / 0.2e1 + t65 / 0.2e1;
t433 = -t269 / 0.2e1 - t550 / 0.2e1;
t377 = t220 * t612 + t423 * t601 + t653;
t408 = -t586 / 0.2e1 + t470;
t3 = (-t370 * t375 / 0.2e1 + t633 * t606 - t150 * t608) * pkin(5) + t377 + t408;
t70 = t150 * t598 + t272 * t632;
t431 = -t3 * qJD(1) - t70 * qJD(2);
t376 = t150 * t614 - t602 * t81 + t651;
t407 = t471 + t582 / 0.2e1;
t4 = (t373 * t600 - t446 * t606 + t608 * t632) * pkin(5) + t376 + t407;
t69 = t150 * t272 - t598 * t632;
t430 = -t4 * qJD(1) - t69 * qJD(2);
t13 = t437 * t373 + t618;
t428 = t13 * qJD(1);
t427 = qJD(2) * t18 + t665;
t426 = qJD(1) * t18 + t663;
t425 = qJD(2) * t25 + t665;
t424 = qJD(1) * t25 + t663;
t421 = t563 + t564;
t143 = t275 ^ 2 - t278 ^ 2;
t79 = -t275 * t308 + t311 * t278;
t419 = qJD(1) * t143 + qJD(2) * t79;
t188 = t308 ^ 2 - t311 ^ 2;
t418 = qJD(1) * t79 + qJD(2) * t188;
t387 = t150 * t375;
t93 = t387 / 0.2e1 + t433;
t417 = qJD(1) * t93 + t645;
t389 = t632 * t375;
t402 = t552 / 0.2e1 + t454;
t97 = t389 / 0.2e1 + t402;
t416 = qJD(1) * t97 - t515;
t404 = -t241 * t368 / 0.2e1 - t242 * t367 / 0.2e1;
t107 = t439 - t404;
t306 = t338 * t369;
t415 = -qJD(1) * t107 - qJD(2) * t306;
t138 = 0.2e1 * t454 + t552;
t413 = qJD(1) * t138 - t515;
t410 = qJD(6) * t446 + t622;
t382 = -t423 * t602 + t614 * t632 + t653;
t8 = t382 + t408;
t406 = qJD(1) * t8 + t514 * t632;
t381 = t220 * t611 + t601 * t81 + t651;
t7 = t381 + t407;
t405 = qJD(1) * t7 + t150 * t514;
t399 = -qJD(2) * t44 - t654;
t398 = qJD(2) * t43 + t654;
t397 = -qJD(1) * t44 - t652;
t396 = qJD(1) * t43 + t652;
t162 = t372 * t641;
t395 = qJD(2) * t90 - qJD(6) * t167 + t162;
t139 = t275 * t605 + t278 * t607;
t394 = -qJD(2) * t139 + t275 * t517;
t393 = -qJD(1) * t139 + t308 * t486;
t392 = t375 * t507 + t512;
t391 = qJD(2) * t207 - qJD(5) * t278 - t267;
t11 = (t617 + t437) * t370;
t231 = t453 + t293 / 0.2e1;
t385 = t11 * qJD(1) + t231 * qJD(3);
t383 = qJD(2) * t89 + qJD(6) * t138 + t162 + t506;
t378 = qJD(2) * t432 + t478;
t364 = qJ(3) * qJD(3);
t353 = pkin(7) * t356;
t348 = t356 / 0.2e1;
t347 = -t479 / 0.2e1;
t346 = t479 / 0.2e1;
t341 = t372 * t356;
t318 = 0.1e1 / 0.2e1 + t449;
t307 = t375 * t594 + t340;
t273 = t340 + (t594 + qJD(6) / 0.2e1) * t375;
t213 = -t278 / 0.2e1 + t400 * t375;
t210 = t311 * t600 + t375 * t456 + t604;
t191 = t215 * qJD(5);
t190 = t214 * qJD(5);
t152 = 0.2e1 * t453 - t549;
t146 = -t298 + t192;
t140 = -qJD(2) * t215 - t275 * t516;
t132 = t139 * qJD(5);
t109 = -t403 + t450;
t108 = t439 + t404;
t98 = -t389 / 0.2e1 + t402;
t92 = -t387 / 0.2e1 + t433;
t86 = t214 * qJD(2) + t275 * t442;
t76 = t79 * qJD(5);
t38 = t379 + t435;
t37 = -t380 + t452;
t34 = -qJD(2) * t104 - t655;
t23 = t103 * qJD(2) + (qJD(6) + t442) * t446;
t14 = t373 * t472 + t584 + t618 - t581 / 0.2e1;
t12 = -t580 - t585 / 0.2e1 + (t472 + t617) * t370;
t10 = -t381 + t407;
t9 = -t382 + t408;
t6 = -t150 * t474 - t370 * t436 + t473 * t633 - t377 + t470;
t5 = t373 * t436 - t446 * t473 + t474 * t632 - t376 + t471;
t17 = [0, 0, 0, t341, t339 * qJD(2), 0, 0, 0, -pkin(1) * t513, -pkin(1) * t356, 0, t250 * qJD(2) - t372 * t478, -qJD(2) * t249 + t512 (qJD(2) * t329 - qJD(3) * t372) * t320, t77 * qJD(2) + t367 * t392, -t78 * qJD(2) + t368 * t392, -qJD(2) * t45 + qJD(3) * t276 + qJD(4) * t310, qJD(2) * t46 - qJD(3) * t125 - qJD(4) * t126 (-qJD(2) * t277 - qJD(5) * t275) * t278, qJD(2) * t127 + qJD(5) * t143, qJD(2) * t183 + t275 * t505, qJD(2) * t182 + t278 * t505, t341, t21 * qJD(2) + t50 * qJD(5) + (qJD(3) * t277 + t508) * t372, -t22 * qJD(2) - t49 * qJD(5) + (-qJD(3) * t274 - t509) * t372 (qJD(2) * t445 + t410) * t633, qJD(2) * t40 + t639 * t670, t83 * qJD(2) + t372 * t410, t82 * qJD(2) + (-qJD(6) * t633 - t506) * t372, t341, t1 * qJD(2) + t15 * qJD(5) + t20 * qJD(6) + (qJD(3) * t445 - t511) * t372, -t2 * qJD(2) - t16 * qJD(5) - t19 * qJD(6) + (-qJD(3) * t634 - t510) * t372; 0, 0, 0, t340, t483, t356, -t513, 0, -t353 - t477, t475 - t476, t378, t353 + t490, -t475 - t491, pkin(7) * t378 + t465, -t330 * t481 - t368 * t619 + t536, -t330 * t480 + t367 * t619 - t535, -qJD(2) * t421 - t538, t537 + (-t330 * qJ(3) + t369 * t421) * qJD(2) + t109 * qJD(3) + t108 * qJD(4), t277 * t630 + t132, t501 + (-t274 * t311 - t277 * t308) * qJD(2) + t76, t375 * t486 + t190 + t496, -t375 * t488 + t497 - t642, t307, t568 + (-t247 * t375 + t343 * t274 + t294 * t308) * qJD(2) + t210 * qJD(3) - t384 * qJD(4) + t38 * qJD(5), -t567 + (-t248 * t375 + t343 * t277 + t294 * t311) * qJD(2) + t213 * qJD(3) - t215 * qJD(4) + t37 * qJD(5), -t445 * t620 + t591, t539 + (t150 * t634 - t445 * t632) * qJD(2) + t592, t103 * qJD(5) - t150 * t356 + t533 + t673, -t89 * qJD(5) - t356 * t632 + t534 + t676, t273, t588 + (t219 * t632 + t272 * t634 + t375 * t423) * qJD(2) + t92 * qJD(3) - t90 * qJD(4) + t5 * qJD(5) + t10 * qJD(6), -t587 + (-t150 * t219 + t272 * t445 - t375 * t81) * qJD(2) + t98 * qJD(3) - t104 * qJD(4) + t6 * qJD(5) + t9 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, -t340, t482, t353 - t464, t375 * t480 + t463, -t375 * t481 + t462, t489, qJD(2) * t109 - t524, 0, 0, 0, 0, 0, qJD(2) * t210 + t190 + t466, qJD(2) * t213 - t467 - t642, 0, 0, 0, 0, 0, qJD(2) * t92 + qJD(5) * t662 + t469 + t673, qJD(2) * t98 + qJD(5) * t659 - t468 + t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t367 * t479 - t480) * t372 (t368 * t479 + t481) * t372, t487, qJD(2) * t108 - t523, 0, 0, 0, 0, 0, -t443, t140, 0, 0, 0, 0, 0, -t395, t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t394, t419, t86, -t391, t348, qJD(2) * t38 + qJD(3) * t214 - qJD(5) * t85 + t573, qJD(2) * t37 - qJD(3) * t207 + qJD(5) * t84 - t574, t398, t427, t23, -t383, t348, qJD(2) * t5 + qJD(5) * t28 + qJD(6) * t12 + t578 + t677, qJD(2) * t6 - qJD(5) * t29 + qJD(6) * t14 - t577 + t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t399, t425, qJD(2) * t662 - t441 * t446 + t622, qJD(2) * t659 - t138 * qJD(5) + t441 * t633, t348, qJD(2) * t10 + qJD(4) * t167 + qJD(5) * t12 - qJD(6) * t27 + t575 + t677, qJD(2) * t9 + qJD(5) * t14 + qJD(6) * t26 - t576 + t679; 0, 0, 0, -t340, -t483, 0, 0, 0, t477, t476, 0, -t490, t491, -t465, -t536, t535, t538, qJD(3) * t110 - qJD(4) * t107 - t537, t277 * t517 + t132, t76 - t501, t191 - t496, -t497 - t623, -t307, qJD(3) * t211 - qJD(4) * t207 - qJD(5) * t35 - t568, qJD(3) * t212 - qJD(4) * t214 - qJD(5) * t36 + t567, -t445 * t641 + t591, -t539 + t592, qJD(5) * t104 - t533 - t674, -qJD(5) * t90 - t534 - t675, -t273, qJD(3) * t93 - qJD(4) * t89 - qJD(5) * t4 - qJD(6) * t7 - t588, qJD(3) * t97 - qJD(4) * t103 - qJD(5) * t3 - qJD(6) * t8 + t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t364, qJD(3) * t367, qJD(3) * t368, t338 * qJD(4), -qJD(4) * t306 + t364, -t308 * t301, t188 * qJD(5), 0, 0, 0, qJD(3) * t308 + t301 * t343, qJD(3) * t311 - t298 * t343, -t528 * t150, t670 * t640, 0, 0, 0, qJD(3) * t632 - qJD(5) * t69 - t150 * t502, -qJD(3) * t150 - qJD(5) * t70 - t502 * t632; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t363, t481, t480, 0, qJD(4) * t318 + t444, 0, 0, 0, 0, 0, t627, t629, 0, 0, 0, 0, 0, t417, t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t484, qJD(3) * t318 + t415, 0, 0, 0, 0, 0, -t495, -t492, 0, 0, 0, 0, 0, -t531, -t526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t393, t418, t146, t649, t347, -qJD(5) * t248 + t343 * t486 - t562, qJD(5) * t247 - t343 * t488 - t561, t396, t426, t525 + t528, -t530 + t666, t347, t430 - t668, t431 - t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t397, t424, -t671 + t528, t680, t347, -t405 - t668, -t406 - t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340, -t482, t464, -t463, -t462, -t489, -qJD(2) * t110 + t524, 0, 0, 0, 0, 0, -qJD(2) * t211 + t191 - t466, -qJD(2) * t212 + t467 - t623, 0, 0, 0, 0, 0, -qJD(2) * t93 - qJD(5) * t661 - t469 - t674, -qJD(2) * t97 - qJD(5) * t660 + t468 - t675; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t363, -t481, -t480, 0, qJD(4) * t319 - t444, 0, 0, 0, 0, 0, -t627, -t629, 0, 0, 0, 0, 0, -t417, -t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t485, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, t649, 0, 0, 0, 0, 0, qJD(6) * t152 - t223 - t671, t680; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152 * qJD(5) - t503 - t671, t680; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t367 * t340, -t368 * t340, -t487, qJD(2) * t107 + t523, 0, 0, 0, 0, 0, t391, t86, 0, 0, 0, 0, 0, t383, t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t484, -qJD(3) * t319 - t415, 0, 0, 0, 0, 0, t301 + t495, -t298 + t492, 0, 0, 0, 0, 0, t531 - t666, t526 + t528; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t485, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t630, -t628, 0, 0, 0, 0, 0, -t620, t638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t413, t638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t394, -t419, t140, t443, t348, qJD(2) * t35 - qJD(3) * t215 + t508 - t573, qJD(2) * t36 + qJD(3) * t384 - t509 + t574, -t398, -t427, t34, t395, t348, qJD(2) * t4 + qJD(6) * t11 - t511 - t578 + t678, qJD(2) * t3 + qJD(6) * t13 + t577 + t669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t393, -t418, -t192, t621, t346, -t311 * t440 + t562, t308 * t440 + t561, -t396, -t426, -t525, t530, t346, -t430 + t644, -t431 + t643; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t192, t621, 0, 0, 0, 0, 0, qJD(6) * t231 + t671, t672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t630, t628, 0, 0, 0, 0, 0, t620, -t638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t370 * t589, -t373 * t589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t522, 0, -t370 * t448 + t385, -t373 * t448 + t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399, -t425, qJD(2) * t661 - t655, qJD(2) * t660 + qJD(5) * t167 + t516 * t633, t348, qJD(2) * t7 - qJD(4) * t138 - qJD(5) * t11 - t575 + t678, qJD(2) * t8 - qJD(5) * t13 + t576 + t669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t397, -t424, t671, t672, t346, t405 + t644, t406 + t643; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t231 + t671, t672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t413, -t638; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t522, 0, t370 * t590 - t385, t373 * t590 - t428; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t17;
