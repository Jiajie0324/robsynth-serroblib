% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPPRR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d5,d6,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR10_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR10_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR10_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR10_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:37:09
% EndTime: 2019-03-09 09:37:46
% DurationCPUTime: 28.98s
% Computational Cost: add. (28207->837), mult. (52200->1056), div. (0->0), fcn. (56919->8), ass. (0->615)
t632 = sin(qJ(6));
t634 = cos(qJ(2));
t958 = -pkin(2) - qJ(4);
t816 = pkin(8) - t958;
t1005 = t634 * t816 + pkin(1);
t630 = sin(pkin(10));
t633 = sin(qJ(2));
t1001 = pkin(3) + pkin(7);
t631 = cos(pkin(10));
t1007 = t1001 * t631;
t914 = t630 * qJ(3);
t701 = t914 + t1007;
t639 = t1005 * t630 + (pkin(4) + t701) * t633;
t806 = t630 * t1001;
t898 = t633 * qJ(3);
t640 = t633 * t806 + (-t1005 - t898) * t631;
t969 = sin(qJ(5));
t971 = cos(qJ(5));
t249 = -t639 * t971 + t640 * t969;
t792 = t969 * t631;
t802 = t971 * t630;
t567 = t792 + t802;
t535 = t567 * t634;
t212 = t535 * pkin(9) - t249;
t961 = t633 * pkin(5);
t637 = t212 + t961;
t636 = t632 * t637;
t250 = t639 * t969 + t640 * t971;
t801 = t971 * t631;
t592 = t634 * t801;
t793 = t969 * t630;
t532 = t634 * t793 - t592;
t213 = t532 * pkin(9) + t250;
t970 = cos(qJ(6));
t798 = t970 * t213;
t119 = t798 + t636;
t908 = t632 * t212;
t122 = -t798 - t908;
t1084 = t119 + t122;
t1087 = qJD(5) + qJD(6);
t571 = t801 - t793;
t550 = t970 * t571;
t900 = t632 * t567;
t1019 = t550 - t900;
t853 = qJD(6) * t1019;
t858 = qJD(5) * t1019;
t1045 = t853 + t858;
t591 = t633 * t801;
t531 = t633 * t793 - t591;
t522 = t970 * t531;
t534 = t567 * t633;
t902 = t632 * t534;
t1011 = -t522 / 0.2e1 - t902 / 0.2e1;
t1042 = t1019 * t633;
t1058 = t1042 / 0.2e1 + t1011;
t1083 = qJD(1) * t1058;
t1086 = -t1045 - t1083;
t198 = t970 * t637;
t907 = t632 * t213;
t118 = -t198 + t907;
t799 = t970 * t212;
t123 = t799 - t907;
t1085 = t118 + t123;
t549 = t970 * t567;
t899 = t632 * t571;
t1020 = t549 + t899;
t1041 = t1020 * t633;
t795 = t970 * t534;
t904 = t632 * t531;
t753 = -t904 / 0.2e1 + t795 / 0.2e1;
t1060 = t1041 / 0.2e1 + t753;
t1082 = qJD(1) * t1060;
t523 = t970 * t532;
t901 = t632 * t535;
t761 = t523 + t901;
t932 = t761 ^ 2;
t524 = t970 * t535;
t903 = t632 * t532;
t1021 = -t524 + t903;
t933 = t1021 ^ 2;
t1067 = t932 - t933;
t1081 = qJD(1) * t1067;
t927 = t1020 ^ 2;
t928 = t1019 ^ 2;
t1068 = t927 - t928;
t1080 = qJD(2) * t1068;
t1059 = -t1042 / 0.2e1 + t1011;
t1079 = qJD(3) * t1059;
t1078 = qJD(3) * t1060;
t1061 = -t1041 / 0.2e1 + t753;
t1077 = qJD(3) * t1061;
t1076 = qJD(6) * t1058;
t1075 = qJD(6) * t1059;
t1074 = qJD(6) * t1060;
t1073 = qJD(6) * t1061;
t863 = qJD(4) * t761;
t1071 = qJD(3) * t1058 - t863;
t739 = t816 * t969;
t740 = t816 * t971;
t494 = -t630 * t739 + t631 * t740;
t400 = -t571 * pkin(9) - t494;
t495 = -t630 * t740 - t631 * t739;
t401 = -t567 * pkin(9) + t495;
t242 = t400 * t970 - t401 * t632;
t1070 = -t242 / 0.2e1;
t644 = t632 * t400;
t796 = t970 * t401;
t243 = t796 + t644;
t998 = -t243 / 0.2e1;
t974 = -t633 / 0.2e1;
t1069 = t243 * t974;
t954 = pkin(5) * qJD(5);
t1066 = (t1019 * t632 - t1020 * t970) * t954;
t1053 = t1019 / 0.2e1;
t1065 = t1053 * t761;
t1044 = qJD(1) * t761;
t870 = qJD(2) * t1020;
t1064 = t870 - t1044;
t1052 = -t1020 / 0.2e1;
t1062 = t1021 * t1052;
t973 = t633 / 0.2e1;
t605 = pkin(4) * t630 + qJ(3);
t528 = pkin(5) * t567 + t605;
t983 = -t528 / 0.2e1;
t1057 = t242 * t973 + t761 * t983;
t1056 = t1087 * t242;
t1054 = -t1019 / 0.2e1;
t654 = t1052 * t123 + t1054 * t1084;
t1051 = t1020 / 0.2e1;
t1050 = t1021 / 0.2e1;
t622 = t634 * pkin(7);
t623 = t634 * pkin(3);
t590 = t622 + t623;
t910 = t631 * t634;
t604 = pkin(4) * t910;
t552 = t604 + t590;
t966 = t532 * pkin(5);
t455 = t552 - t966;
t1049 = t455 * t761;
t871 = qJD(1) * t633;
t1048 = t761 * t871;
t876 = qJD(1) * t1021;
t790 = t761 * t876;
t458 = t1020 * qJD(5);
t854 = qJD(6) * t1020;
t895 = -t458 - t854;
t1022 = t522 + t902;
t691 = t795 - t904;
t894 = t622 / 0.2e1 + t623 / 0.2e1;
t803 = t604 / 0.2e1 + t894;
t1046 = t803 - t691 * t1070 - t1022 * t998 - t966 / 0.2e1;
t869 = qJD(2) * t1019;
t708 = t869 + t876;
t736 = t531 * t567 + t534 * t571;
t1043 = qJD(3) * t736;
t785 = t1020 * t869;
t1040 = t1021 * t455;
t388 = t1021 * t871;
t931 = t1021 * t1020;
t153 = -t761 * t1054 - t931 / 0.2e1;
t1039 = t153 * qJD(6);
t979 = t571 / 0.2e1;
t981 = t567 / 0.2e1;
t344 = t532 * t979 + t535 * t981;
t1038 = t344 * qJD(5);
t752 = t969 * t973;
t442 = t630 * t752 - t591 / 0.2e1 + t571 * t973;
t1037 = t442 * qJD(5);
t746 = -t793 / 0.2e1;
t1018 = t746 + t979;
t647 = t591 / 0.2e1 + t1018 * t633;
t1006 = t647 * qJD(1);
t559 = t571 * qJD(5);
t1036 = -t559 - t1006;
t1032 = qJD(4) * t1020;
t1031 = -qJD(1) * t153 + t785;
t825 = t571 * qJD(2);
t1030 = -qJD(1) * t344 + t567 * t825;
t1029 = -qJD(2) * t153 - t790;
t872 = qJD(1) * t535;
t1028 = -qJD(2) * t344 + t532 * t872;
t31 = t1022 * t119 - t118 * t691;
t769 = -t644 / 0.2e1;
t624 = t630 ^ 2;
t625 = t631 ^ 2;
t599 = t624 + t625;
t1016 = t825 - t872;
t660 = -t792 / 0.2e1 - t802 / 0.2e1;
t447 = (t981 + t660) * t634;
t1015 = qJD(1) * t447 + t825;
t828 = t567 * qJD(2);
t873 = qJD(1) * t532;
t1014 = t828 - t873;
t978 = t592 / 0.2e1;
t980 = -t571 / 0.2e1;
t446 = t978 + (t746 + t980) * t634;
t1013 = qJD(1) * t446 + t828;
t586 = pkin(2) * t633 - qJ(3) * t634;
t562 = qJ(4) * t633 + t586;
t493 = t562 * t631 + t590 * t630;
t921 = t493 * t630;
t574 = t590 * t631;
t492 = -t562 * t630 + t574;
t922 = t492 * t631;
t1012 = t921 + t922;
t866 = qJD(2) * t633;
t1009 = qJD(5) * t647;
t1008 = qJD(5) * t761;
t765 = t958 * t634;
t817 = t634 * qJD(3);
t860 = qJD(4) * t633;
t1004 = qJD(2) * t765 + t817 - t860;
t1003 = t535 ^ 2;
t563 = t567 ^ 2;
t1002 = t571 ^ 2;
t997 = t761 / 0.2e1;
t750 = -t524 / 0.2e1;
t982 = t535 / 0.2e1;
t749 = -t549 / 0.2e1;
t748 = t550 / 0.2e1;
t977 = -t605 / 0.2e1;
t976 = -t632 / 0.2e1;
t975 = t632 / 0.2e1;
t942 = t118 * t1020;
t776 = -t942 / 0.2e1;
t91 = t942 / 0.2e1;
t6 = t91 + t776;
t696 = 0.2e1 * t1053 * t1021;
t697 = (-t1051 + t1052) * t761;
t80 = t696 + t697;
t972 = qJD(4) * t80 + qJD(6) * t6;
t968 = pkin(8) * t633;
t967 = t531 * pkin(5);
t965 = t535 * pkin(5);
t964 = t571 * pkin(5);
t963 = t631 * pkin(4);
t962 = t632 * pkin(5);
t960 = t634 * pkin(5);
t959 = qJD(5) / 0.2e1;
t82 = t1062 + t931 / 0.2e1;
t956 = t82 * qJD(5);
t953 = qJD(1) * t6;
t952 = qJD(2) * t6;
t113 = -t1019 * t1021 - t1020 * t761;
t81 = -t696 + t697;
t951 = qJD(5) * t81 + qJD(6) * t113;
t150 = t1021 * t1054 + t1051 * t761;
t950 = t150 * qJD(4);
t915 = t571 * t535;
t917 = t567 * t532;
t345 = -t915 - t917;
t949 = t345 * qJD(4);
t343 = t917 / 0.2e1 + t915 / 0.2e1;
t948 = t343 * qJD(4);
t58 = t122 * t633 + t761 * t965 + t1040;
t947 = qJD(1) * t58;
t59 = t1021 * t965 + t123 * t633 - t1049;
t946 = qJD(1) * t59;
t83 = -t118 * t633 - t1049;
t944 = qJD(1) * t83;
t84 = -t119 * t633 + t1040;
t943 = qJD(1) * t84;
t416 = t634 * pkin(4) + t574 + (-t562 - t968) * t630;
t399 = t971 * t416;
t438 = t631 * t968 + t493;
t794 = t969 * t438;
t251 = -t794 + t399;
t211 = -pkin(9) * t534 + t251 + t960;
t800 = t970 * t211;
t398 = t969 * t416;
t418 = t971 * t438;
t252 = t418 + t398;
t214 = -pkin(9) * t531 + t252;
t906 = t632 * t214;
t120 = t800 - t906;
t797 = t970 * t214;
t909 = t632 * t211;
t121 = t797 + t909;
t12 = -t1021 * t120 + t121 * t761 - t31;
t941 = t12 * qJD(1);
t551 = (-t963 - t1001) * t633;
t454 = t551 + t967;
t16 = -t118 * t120 + t119 * t121 + t454 * t455;
t940 = t16 * qJD(1);
t17 = -t118 * t122 + t119 * t123 - t455 * t965;
t939 = t17 * qJD(1);
t23 = t1022 * t455 - t118 * t634 + t120 * t633 - t454 * t761;
t938 = t23 * qJD(1);
t24 = -t1021 * t454 + t119 * t634 + t121 * t633 - t455 * t691;
t937 = t24 * qJD(1);
t936 = t251 * t571;
t935 = t252 * t567;
t934 = t31 * qJD(1);
t929 = t1019 * t634;
t924 = t1020 * t634;
t124 = -t249 * t534 + t250 * t531;
t52 = t251 * t535 + t252 * t532 - t124;
t920 = t52 * qJD(1);
t919 = t531 * t495;
t918 = t534 * t494;
t57 = -t249 * t251 + t250 * t252 + t551 * t552;
t916 = t57 * qJD(1);
t913 = t630 * t633;
t912 = t630 * t634;
t911 = t631 * qJ(3);
t149 = t1021 * t1051 - t1065;
t897 = qJD(5) * t149 - t1039;
t151 = t1062 + t1065;
t896 = qJD(5) * t151 + t1039;
t628 = t633 ^ 2;
t629 = t634 ^ 2;
t601 = t629 - t628;
t140 = -t1021 * t691 + t1022 * t761;
t893 = qJD(1) * t140;
t187 = -t249 * t633 - t532 * t552;
t892 = qJD(1) * t187;
t188 = -t250 * t633 - t535 * t552;
t891 = qJD(1) * t188;
t775 = t1019 * t973;
t256 = t775 - t1011;
t888 = qJD(1) * t256;
t257 = t775 + t1011;
t887 = qJD(1) * t257;
t773 = t1020 * t973;
t270 = -t773 + t753;
t882 = qJD(1) * t270;
t271 = -t773 - t753;
t881 = qJD(1) * t271;
t744 = -pkin(1) + t765;
t488 = -t630 * t744 + t633 * t701;
t489 = t631 * t744 + (t806 - t911) * t633;
t314 = (-t488 * t630 + t489 * t631) * t633;
t880 = qJD(1) * t314;
t315 = -t488 * t912 + t489 * t910;
t879 = qJD(1) * t315;
t316 = t531 * t532 + t534 * t535;
t878 = qJD(1) * t316;
t868 = qJD(2) * t528;
t867 = qJD(2) * t605;
t620 = qJD(2) * t634;
t865 = qJD(3) * t628;
t864 = qJD(4) * t1021;
t862 = qJD(4) * t532;
t861 = qJD(4) * t535;
t859 = qJD(5) * t1021;
t857 = qJD(5) * t535;
t856 = qJD(5) * t633;
t467 = t748 - t550 / 0.2e1;
t855 = qJD(6) * t467;
t852 = qJD(6) * t528;
t109 = -t249 * t634 + t251 * t633 + t531 * t552 - t532 * t551;
t851 = t109 * qJD(1);
t110 = t250 * t634 + t252 * t633 - t534 * t552 + t535 * t551;
t850 = t110 * qJD(1);
t849 = t124 * qJD(1);
t648 = t495 * t974 + t535 * t977 + t552 * t979;
t702 = t399 / 0.2e1 - t794 / 0.2e1;
t135 = -t648 + t702;
t848 = t135 * qJD(1);
t649 = t494 * t974 + t532 * t977 + t552 * t981;
t767 = -t398 / 0.2e1 - t418 / 0.2e1;
t136 = t649 + t767;
t847 = t136 * qJD(1);
t143 = -t1021 * t1022 + t691 * t761;
t846 = t143 * qJD(1);
t154 = t488 * t913 - t492 * t912 + (-t489 * t633 + t493 * t634) * t631;
t845 = t154 * qJD(1);
t805 = t1001 * t633;
t155 = t488 * t492 + t489 * t493 - t590 * t805;
t844 = t155 * qJD(1);
t804 = t1001 * t634;
t236 = t488 * t634 + (t492 + (-t804 - t590) * t631) * t633;
t843 = t236 * qJD(1);
t237 = t489 * t634 - t590 * t913 + (-t630 * t804 + t493) * t633;
t842 = t237 * qJD(1);
t244 = -t1022 * t633 + t634 * t761;
t841 = t244 * qJD(1);
t245 = t1021 * t634 + t633 * t691;
t840 = t245 * qJD(1);
t317 = t531 * t535 + t532 * t534;
t839 = t317 * qJD(1);
t411 = -t531 * t633 + t532 * t634;
t838 = t411 * qJD(1);
t412 = t534 * t633 - t535 * t634;
t837 = t412 * qJD(1);
t836 = t442 * qJD(1);
t449 = t567 * t974 + t631 * t752 + t802 * t973;
t833 = t449 * qJD(1);
t450 = (-t567 / 0.2e1 + t660) * t633;
t427 = t450 * qJD(1);
t741 = -pkin(2) * t634 - t898;
t577 = -pkin(1) + t741;
t503 = t577 * t634 + t586 * t633;
t832 = t503 * qJD(1);
t504 = -t577 * t633 + t586 * t634;
t831 = t504 * qJD(1);
t533 = t599 * t634 * t633;
t830 = t533 * qJD(1);
t566 = t601 * t630;
t829 = t566 * qJD(1);
t556 = t567 * qJD(5);
t569 = t599 * t629;
t827 = t569 * qJD(1);
t570 = t601 * t631;
t826 = t570 * qJD(1);
t766 = -t624 / 0.2e1 - t625 / 0.2e1;
t576 = -0.1e1 / 0.2e1 + t766;
t824 = t576 * qJD(2);
t823 = t599 * qJD(2);
t822 = t601 * qJD(1);
t821 = t628 * qJD(1);
t820 = t630 * qJD(2);
t819 = t631 * qJD(2);
t818 = t634 * qJD(1);
t815 = -pkin(7) / 0.2e1 - pkin(3) / 0.2e1;
t814 = -t970 / 0.2e1;
t813 = t970 / 0.2e1;
t812 = pkin(1) * t871;
t811 = pkin(1) * t818;
t810 = pkin(7) * t866;
t809 = -t965 / 0.2e1;
t808 = t964 / 0.2e1;
t807 = -t961 / 0.2e1;
t791 = t691 * t871;
t789 = t1022 * t871;
t788 = t531 * t871;
t786 = t534 * t871;
t783 = t630 * t819;
t782 = t634 * t820;
t781 = t567 * t559;
t780 = t577 * t586 * qJD(1);
t779 = t577 * t871;
t778 = t630 * t821;
t777 = t631 * t821;
t603 = t633 * t620;
t602 = t633 * t818;
t764 = t970 * qJD(5);
t763 = t970 * qJD(6);
t762 = -0.2e1 * t630 * t910;
t692 = -t922 / 0.2e1 - t921 / 0.2e1;
t277 = t692 + t894;
t626 = qJD(2) * qJ(3);
t760 = qJD(1) * t277 + t626;
t521 = t535 * t871;
t759 = qJD(2) * t647 - t521;
t758 = qJD(5) + t871;
t757 = -qJD(6) - t871;
t756 = qJD(4) + t867;
t755 = t815 * t633;
t754 = t631 * t602;
t751 = -t797 / 0.2e1;
t747 = t634 * t813;
t745 = -t563 / 0.2e1 - t1002 / 0.2e1;
t742 = -t523 / 0.2e1 - t901 / 0.2e1;
t738 = qJD(1) * t82;
t13 = -t1021 * t1084 + t1085 * t761;
t737 = t13 * qJD(1) + t82 * qJD(3);
t102 = -t1019 * t242 - t1020 * t243;
t642 = t1021 * t1070 + t1052 * t119 + t1053 * t118 + t243 * t997;
t672 = (-t963 / 0.2e1 + t815) * t633;
t645 = t672 + t967 / 0.2e1;
t19 = -t642 + t645;
t735 = -qJD(1) * t19 + qJD(2) * t102;
t673 = -t198 / 0.2e1 + t970 * t807;
t49 = t799 / 0.2e1 + t673;
t734 = t49 * qJD(1);
t141 = t932 + t933;
t733 = qJD(1) * t141 + qJD(2) * t80;
t732 = qJD(2) * t81 + t1081;
t172 = t927 + t928;
t731 = qJD(1) * t80 + qJD(2) * t172;
t730 = qJD(1) * t81 + t1080;
t700 = t1051 * t121 + t1053 * t120;
t21 = t700 - t1046;
t729 = -qJD(1) * t21 + t868;
t215 = -t1019 * t528 - t1020 * t964;
t653 = t1021 * t983 + t1054 * t455 - t1069;
t667 = -t906 / 0.2e1 + t800 / 0.2e1;
t28 = (t1020 * t982 - t761 * t980 + t747) * pkin(5) + t653 + t667;
t728 = qJD(1) * t28 + qJD(2) * t215;
t216 = -t1019 * t964 + t1020 * t528;
t651 = t1051 * t455 + t1057;
t668 = -t909 / 0.2e1 + t751;
t27 = (t1019 * t982 + t1021 * t980 + t634 * t976) * pkin(5) + t651 + t668;
t727 = qJD(1) * t27 + qJD(2) * t216;
t248 = t494 * t571 - t495 * t567;
t641 = t249 * t980 + t250 * t981 + t494 * t982 - t495 * t532 / 0.2e1;
t67 = t672 + t641;
t726 = -qJD(1) * t67 + qJD(2) * t248;
t655 = t919 / 0.2e1 - t918 / 0.2e1 + t803;
t699 = -t936 / 0.2e1 - t935 / 0.2e1;
t72 = t655 + t699;
t725 = qJD(1) * t72 + t867;
t32 = t1021 * t118 + t119 * t761;
t724 = -qJD(1) * t32 - qJD(3) * t150;
t723 = qJD(2) * t113 + t1081;
t722 = qJD(1) * t113 + t1080;
t694 = -t1019 * t1053 + t1020 * t1052;
t169 = -0.1e1 / 0.2e1 + t694;
t721 = qJD(1) * t150 + qJD(2) * t169;
t670 = t1021 * t814 + t761 * t975;
t194 = (t982 + t670) * pkin(5);
t669 = t1019 * t814 - t1020 * t975;
t246 = (t980 + t669) * pkin(5);
t720 = qJD(1) * t194 + qJD(2) * t246;
t238 = t915 - t917;
t529 = t532 ^ 2;
t351 = t529 - t1003;
t719 = qJD(1) * t351 + qJD(2) * t238;
t417 = t563 - t1002;
t718 = qJD(1) * t238 + qJD(2) * t417;
t260 = -t929 / 0.2e1 + t742;
t717 = qJD(1) * t260 + t870;
t666 = t903 / 0.2e1 + t750;
t264 = t924 / 0.2e1 + t666;
t716 = qJD(1) * t264 + t869;
t693 = -t488 * t631 / 0.2e1 - t489 * t630 / 0.2e1;
t274 = t755 - t693;
t564 = t599 * t958;
t715 = -qJD(1) * t274 - qJD(2) * t564;
t341 = 0.2e1 * t750 + t903;
t363 = 0.2e1 * t748 - t900;
t713 = qJD(1) * t341 + qJD(2) * t363;
t350 = -0.1e1 / 0.2e1 + t745;
t712 = qJD(1) * t343 + qJD(2) * t350;
t428 = t529 + t1003;
t711 = qJD(1) * t428 + qJD(2) * t345;
t496 = t563 + t1002;
t710 = qJD(1) * t345 + qJD(2) * t496;
t397 = t750 + t524 / 0.2e1;
t709 = qJD(1) * t397 + qJD(2) * t467;
t125 = -t249 * t535 + t250 * t532;
t706 = -qJD(1) * t125 - qJD(3) * t343;
t705 = qJD(6) * t363 + t858;
t704 = -qJD(6) * t1021 - t859;
t703 = qJD(6) * t761 + t1008;
t650 = t1050 * t528 + t1053 * t455 + t1069;
t43 = -t650 + t667;
t690 = qJD(1) * t43 - t1019 * t868;
t652 = t1052 * t455 - t1057;
t44 = -t652 + t668;
t689 = qJD(1) * t44 + t1020 * t868;
t688 = qJD(2) * t149 - t1021 * t1044;
t687 = qJD(1) * t149 + t1019 * t870;
t686 = qJD(2) * t151 + t790;
t685 = qJD(1) * t151 - t785;
t676 = t634 * t860 + t865;
t675 = qJD(2) * t442 - t521 - t857;
t674 = qJD(2) * t257 - qJD(6) * t397 + t388;
t671 = t120 * t813 + t121 * t975;
t643 = t1070 * t1084 + t1085 * t998;
t1 = (t455 * t980 + t528 * t982 + t671) * pkin(5) + t643;
t53 = t528 * t964;
t664 = -t1 * qJD(1) + t53 * qJD(2);
t638 = t1021 * t998 + t1050 * t243 + t1052 * t118 - t1070 * t761 - t242 * t997 + t654;
t658 = (t1022 * t976 + t691 * t814) * pkin(5);
t3 = t658 - t638;
t663 = t3 * qJD(1);
t659 = (t1022 * t975 + t691 * t813) * pkin(5);
t9 = t776 + t659 + t654;
t662 = t9 * qJD(1);
t128 = t769 + t644 / 0.2e1;
t466 = t749 + t549 / 0.2e1;
t635 = -t636 / 0.2e1 + t632 * t807;
t47 = t908 / 0.2e1 + t635;
t661 = qJD(1) * t47 - qJD(2) * t128 + qJD(3) * t466;
t656 = qJD(2) * t256 + qJD(6) * t341 + t388 + t859;
t646 = qJD(2) * t741 + t817;
t627 = qJ(3) * qJD(3);
t617 = pkin(7) * t620;
t610 = t620 / 0.2e1;
t609 = -t818 / 0.2e1;
t608 = t818 / 0.2e1;
t600 = t634 * t819;
t587 = t601 * qJD(2);
t575 = 0.1e1 / 0.2e1 + t766;
t565 = t634 * t959 + t602;
t530 = t602 + (t959 + qJD(6) / 0.2e1) * t634;
t448 = -t535 / 0.2e1 + t660 * t634;
t445 = t1018 * t634 + t978;
t426 = t450 * qJD(5);
t425 = t449 * qJD(5);
t362 = 0.2e1 * t749 - t899;
t354 = -t556 + t427;
t349 = 0.1e1 / 0.2e1 + t745;
t346 = -qJD(2) * t450 - t532 * t871;
t276 = -t692 + t894;
t275 = t755 + t693;
t265 = -t924 / 0.2e1 + t666;
t259 = t929 / 0.2e1 + t742;
t253 = t449 * qJD(2) + t532 * t758;
t247 = pkin(5) * t669 + t808;
t234 = t238 * qJD(5);
t195 = pkin(5) * t670 + t809;
t168 = 0.1e1 / 0.2e1 + t694;
t138 = t648 + t702;
t137 = -t649 + t767;
t133 = -qJD(2) * t271 - t1048;
t131 = -t796 + 0.2e1 * t769;
t111 = t270 * qJD(2) + (qJD(6) + t758) * t761;
t78 = 0.2e1 * t1022 * t1052 + 0.2e1 * t1054 * t691;
t71 = t655 - t699;
t68 = t672 - t641;
t50 = t907 - t799 / 0.2e1 + t673;
t48 = -t798 - t908 / 0.2e1 + t635;
t46 = t650 + t667;
t45 = t652 + t668;
t30 = t1021 * t808 + t1019 * t809 + t751 + (-t960 / 0.2e1 - t211 / 0.2e1) * t632 - t651;
t29 = pkin(5) * t747 + t1020 * t809 - t761 * t808 - t653 + t667;
t22 = t700 + t1046;
t20 = t642 + t645;
t10 = t91 + t659 - t654;
t4 = t658 + t638;
t2 = pkin(5) * t671 + t455 * t808 + t528 * t809 - t643;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t603, t587, 0, -t603, 0, 0, -pkin(1) * t866, -pkin(1) * t620, 0, 0, 0, 0, 0, t603, t587, -t603, 0, qJD(2) * t504 - t633 * t817, -qJD(2) * t503 + t865 (qJD(2) * t586 - qJD(3) * t633) * t577, -t624 * t603, t762 * t866, -t566 * qJD(2), -t625 * t603, -t570 * qJD(2), t603, t236 * qJD(2) + t630 * t676, -t237 * qJD(2) + t631 * t676, -qJD(2) * t154 + qJD(3) * t533 + qJD(4) * t569, qJD(2) * t155 - qJD(3) * t314 - qJD(4) * t315 (-qJD(2) * t534 - qJD(5) * t532) * t535, qJD(2) * t317 + qJD(5) * t351, qJD(2) * t412 + t532 * t856 (-qJD(2) * t531 + t857) * t532, qJD(2) * t411 + t535 * t856, t603, qJD(2) * t109 + qJD(5) * t188 + (qJD(3) * t534 + t861) * t633, -qJD(2) * t110 - qJD(5) * t187 + (-qJD(3) * t531 - t862) * t633, qJD(2) * t52 + qJD(3) * t316 + qJD(4) * t428, qJD(2) * t57 + qJD(3) * t124 + qJD(4) * t125 (qJD(2) * t691 + t703) * t1021, qJD(2) * t143 + t1067 * t1087, t245 * qJD(2) + t633 * t703 -(qJD(2) * t1022 - t704) * t761, t244 * qJD(2) + t633 * t704, t603, qJD(2) * t23 + qJD(5) * t58 + qJD(6) * t84 + (qJD(3) * t691 - t864) * t633, -qJD(2) * t24 - qJD(5) * t59 - qJD(6) * t83 + (-qJD(3) * t1022 - t863) * t633, qJD(2) * t12 + qJD(3) * t140 + qJD(4) * t141 + qJD(5) * t13, qJD(2) * t16 + qJD(3) * t31 + qJD(4) * t32 + qJD(5) * t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t602, t822, t620, -t602, -t866, 0, -t617 - t812, t810 - t811, 0, 0, 0, -t620, t866, t602, t822, -t602, t646, t617 + t831, -t810 - t832, pkin(7) * t646 + t780 (-t624 * t818 + t783) * t633 (qJD(1) * t762 + (-t624 + t625) * qJD(2)) * t633, t600 - t829 (-t625 * t818 - t783) * t633, -t782 - t826, t602, t843 + (-t911 - t806) * t866 + t1004 * t631, -t842 + (t914 - t1007) * t866 - t1004 * t630, -qJD(2) * t1012 - t845, t844 + (-qJ(3) * t805 + t1012 * t958) * qJD(2) + t276 * qJD(3) + t275 * qJD(4), t1016 * t534 + t1038, t839 + (-t531 * t571 - t534 * t567) * qJD(2) + t234, t634 * t825 + t425 + t837, t1014 * t531 - t1038, -t634 * t828 - t1037 + t838, t565, t851 + (-t494 * t634 + t531 * t605 + t551 * t567) * qJD(2) + t445 * qJD(3) - t647 * qJD(4) + t138 * qJD(5), -t850 + (-t495 * t634 + t534 * t605 + t551 * t571) * qJD(2) + t448 * qJD(3) - t450 * qJD(4) + t137 * qJD(5), t920 + (t918 - t919 - t935 - t936) * qJD(2) - t1043 + t949, t916 + (-t251 * t494 + t252 * t495 + t551 * t605) * qJD(2) + t71 * qJD(3) + t68 * qJD(4), t691 * t708 + t896, t846 + (-t1019 * t1022 - t1020 * t691) * qJD(2) + t951, qJD(5) * t270 + t1019 * t620 + t1073 + t840, t1022 * t1064 + t897, -qJD(5) * t256 - t1020 * t620 + t1075 + t841, t530, t938 + (t1020 * t454 + t1022 * t528 + t242 * t634) * qJD(2) + t259 * qJD(3) - t257 * qJD(4) + t29 * qJD(5) + t46 * qJD(6), -t937 + (t1019 * t454 - t243 * t634 + t528 * t691) * qJD(2) + t265 * qJD(3) - t271 * qJD(4) + t30 * qJD(5) + t45 * qJD(6), t941 + (-t1019 * t120 - t1020 * t121 - t1022 * t243 - t242 * t691) * qJD(2) + t78 * qJD(3) + t4 * qJD(5) + t972, t940 + (t120 * t242 + t121 * t243 + t454 * t528) * qJD(2) + t22 * qJD(3) + t20 * qJD(4) + t2 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620, -t602, t821, t617 - t779, 0, 0, 0, 0, 0, 0, t600 + t778, t777 - t782, t830, qJD(2) * t276 - t880, 0, 0, 0, 0, 0, 0, qJD(2) * t445 + t425 + t786, qJD(2) * t448 - t1037 - t788, -qJD(2) * t736 + t878, qJD(2) * t71 + t1043 + t849 + t948, 0, 0, 0, 0, 0, 0, qJD(2) * t259 + qJD(5) * t1061 + t1073 + t791, qJD(2) * t265 + qJD(5) * t1059 + t1075 - t789, qJD(2) * t78 + t893 + t956, t934 + t22 * qJD(2) + (t1019 * t691 + t1020 * t1022) * qJD(3) + t10 * qJD(5) + t950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t630 * t818 - t819) * t633 (t631 * t818 + t820) * t633, t827, qJD(2) * t275 - t879, 0, 0, 0, 0, 0, 0, -t759, t346, t711, qJD(2) * t68 - t706, 0, 0, 0, 0, 0, 0, -t674, t133, t733, qJD(2) * t20 + qJD(5) * t195 - t724; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1028, t719, t253, t1028, -t675, t610, qJD(2) * t138 + qJD(3) * t449 - qJD(5) * t250 + t891, qJD(2) * t137 - qJD(3) * t442 + qJD(5) * t249 - t892, 0, 0, t686, t732, t111, t688, -t656, t610, qJD(2) * t29 + qJD(5) * t122 + qJD(6) * t48 + t1077 + t947, qJD(2) * t30 - qJD(5) * t123 + qJD(6) * t50 + t1079 - t946, t4 * qJD(2) + (-t1021 * t632 - t761 * t970) * t954 + t737, t939 + t2 * qJD(2) + t10 * qJD(3) + t195 * qJD(4) + (t122 * t970 + t123 * t632) * t954; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1029, t723, qJD(2) * t1061 - t757 * t761 + t1008, t1029, qJD(2) * t1059 - t341 * qJD(5) + t1021 * t757, t610, qJD(2) * t46 + qJD(4) * t397 + qJD(5) * t48 - qJD(6) * t119 + t1077 + t943, qJD(2) * t45 + qJD(5) * t50 + qJD(6) * t118 + t1079 - t944, t952, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t602, -t822, 0, t602, 0, 0, t812, t811, 0, 0, 0, 0, 0, -t602, -t822, t602, 0, -t831, t832, -t780, t624 * t602, 0.2e1 * t630 * t754, t829, t625 * t602, t826, -t602, -t843, t842, t845, qJD(3) * t277 - qJD(4) * t274 - t844, t534 * t872 + t1038, t234 - t839, t426 - t837, t531 * t873 - t1038, -t838 - t1009, -t565, qJD(3) * t446 - qJD(4) * t442 - qJD(5) * t135 - t851, qJD(3) * t447 - qJD(4) * t449 - qJD(5) * t136 + t850, -t920 + t949, qJD(3) * t72 - qJD(4) * t67 - t916, -t691 * t876 + t896, -t846 + t951, qJD(5) * t271 - t1074 - t840, t1022 * t1044 + t897, -qJD(5) * t257 - t1076 - t841, -t530, qJD(3) * t260 - qJD(4) * t256 - qJD(5) * t28 - qJD(6) * t43 - t938, qJD(3) * t264 - qJD(4) * t270 - qJD(5) * t27 - qJD(6) * t44 + t937, -qJD(5) * t3 - t941 + t972, -qJD(3) * t21 - qJD(4) * t19 - qJD(5) * t1 - t940; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t627, 0, 0, 0, 0, 0, 0, qJD(3) * t630, qJD(3) * t631, t599 * qJD(4), -qJD(4) * t564 + t627, -t781, t417 * qJD(5), 0, t781, 0, 0, qJD(3) * t567 + t559 * t605, qJD(3) * t571 - t556 * t605, qJD(4) * t496, qJD(3) * t605 + qJD(4) * t248, t895 * t1019, t1087 * t1068, 0, t1045 * t1020, 0, 0, qJD(3) * t1020 - qJD(5) * t215 + t1019 * t852, qJD(3) * t1019 - qJD(5) * t216 - t1020 * t852, qJD(4) * t172, qJD(3) * t528 + qJD(4) * t102 + qJD(5) * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t626, 0, 0, 0, 0, 0, 0, t820, t819, 0, qJD(4) * t575 + t760, 0, 0, 0, 0, 0, 0, t1013, t1015, 0, qJD(4) * t349 + t725, 0, 0, 0, 0, 0, 0, t717, t716, 0, qJD(4) * t168 + t729; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t823, qJD(3) * t575 + t715, 0, 0, 0, 0, 0, 0, -t836, -t833, t710, qJD(3) * t349 + t726, 0, 0, 0, 0, 0, 0, t855 - t888, -t882, t731, qJD(3) * t168 + qJD(5) * t247 + t735; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1030, t718, t354, t1030, t1036, t609, -qJD(5) * t495 + t605 * t825 - t848, qJD(5) * t494 - t605 * t828 - t847, 0, 0, t685, t730, t881 + t895, t687, -t705 - t887, t609, -qJD(5) * t243 + qJD(6) * t131 - t728, -t1056 - t727, -t663 - t1066, t247 * qJD(4) + (t242 * t632 - t243 * t970) * t954 + t664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1031, t722, -t1082 + t895, t1031, -qJD(5) * t363 - t1083 - t853, t609, qJD(4) * t467 + qJD(5) * t131 - qJD(6) * t243 - t690, -t1056 - t689, t953, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t602, -t821, t779, 0, 0, 0, 0, 0, 0, -t778, -t777, -t830, -qJD(2) * t277 + t880, 0, 0, 0, 0, 0, 0, -qJD(2) * t446 + t426 - t786, -qJD(2) * t447 - t1009 + t788, -t878, -qJD(2) * t72 - t849 + t948, 0, 0, 0, 0, 0, 0, -qJD(2) * t260 - qJD(5) * t1060 - t1074 - t791, -qJD(2) * t264 - qJD(5) * t1058 - t1076 + t789, -t893 + t956, qJD(2) * t21 - qJD(5) * t9 - t934 + t950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t626, 0, 0, 0, 0, 0, 0, -t820, -t819, 0, qJD(4) * t576 - t760, 0, 0, 0, 0, 0, 0, -t1013, -t1015, 0, qJD(4) * t350 - t725, 0, 0, 0, 0, 0, 0, -t717, -t716, 0, qJD(4) * t169 - t729; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t824, 0, 0, 0, 0, 0, 0, 0, 0, 0, t712, 0, 0, 0, 0, 0, 0, 0, 0, 0, t721; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, t1036, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6) * t362 - t1082 - t458, t1086, t738, -t662 + t1066; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t362 - t1082 - t854, t1086, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t630 * t602, -t754, -t827, qJD(2) * t274 + t879, 0, 0, 0, 0, 0, 0, t675, t253, -t711, qJD(2) * t67 + t706, 0, 0, 0, 0, 0, 0, t656, t111, -t733, qJD(2) * t19 - qJD(5) * t194 + t724; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t823, -qJD(3) * t576 - t715, 0, 0, 0, 0, 0, 0, t559 + t836, -t556 + t833, -t710, -qJD(3) * t350 - t726, 0, 0, 0, 0, 0, 0, t705 + t888, t882 + t895, -t731, -qJD(3) * t169 - qJD(5) * t246 - t735; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t824, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t712, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t721; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1016, -t1014, 0, 0, 0, 0, 0, 0, 0, 0, t708, -t1064, 0, -t720; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t713, -t1064, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1028, -t719, t346, -t1028, t759, t610, qJD(2) * t135 - qJD(3) * t450 + t861 - t891, qJD(2) * t136 + qJD(3) * t647 - t862 + t892, 0, 0, -t686, -t732, t133, -t688, t674, t610, qJD(2) * t28 + qJD(6) * t47 + t1078 - t864 - t947, qJD(2) * t27 + qJD(6) * t49 + t1071 + t946, qJD(2) * t3 - t737, qJD(2) * t1 + qJD(3) * t9 + qJD(4) * t194 - t939; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1030, -t718, -t427, -t1030, t1006, t608, -t571 * t756 + t848, t567 * t756 + t847, 0, 0, -t685, -t730, -t881, -t687, -t855 + t887, t608, -qJD(4) * t1019 - qJD(6) * t128 + t728, t727 + t1032, t663, qJD(4) * t246 - t664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t427, t1006, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6) * t466 + t1082, t1083, -t738, t662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1016, t1014, 0, 0, 0, 0, 0, 0, 0, 0, -t708, t1064, 0, t720; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6) * t962, -pkin(5) * t763, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t709, 0, -t1087 * t962 + t661 (-t764 - t763) * pkin(5) + t734, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1029, -t723, qJD(2) * t1060 - t1048, -t1029, qJD(2) * t1058 + qJD(5) * t397 + t388, t610, qJD(2) * t43 - qJD(4) * t341 - qJD(5) * t47 + t1078 - t943, qJD(2) * t44 - qJD(5) * t49 + t1071 + t944, -t952, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1031, -t722, t1082, -t1031, qJD(5) * t467 + t1083, t608, -qJD(4) * t363 + qJD(5) * t128 + t690, t689 + t1032, -t953, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t466 + t1082, t1083, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t713, t1064, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t709, 0, t632 * t954 - t661, pkin(5) * t764 - t734, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
