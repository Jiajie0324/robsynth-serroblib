% Calculate inertial parameters regressor of coriolis matrix for
% S6PPRRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d6,theta1,theta2]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:51
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PPRRPR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRPR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRPR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PPRRPR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:51:01
% EndTime: 2019-03-08 18:51:13
% DurationCPUTime: 7.74s
% Computational Cost: add. (6722->410), mult. (18851->640), div. (0->0), fcn. (22098->12), ass. (0->319)
t358 = cos(qJ(6));
t555 = t358 / 0.2e1;
t356 = sin(qJ(4));
t350 = t356 ^ 2;
t359 = cos(qJ(4));
t352 = t359 ^ 2;
t572 = t350 + t352;
t579 = pkin(9) * t572;
t360 = -pkin(4) - pkin(10);
t511 = t359 * t360;
t544 = qJ(5) * t356;
t295 = -pkin(3) - t544 + t511;
t355 = sin(qJ(6));
t566 = pkin(5) + pkin(9);
t574 = t566 * t356;
t250 = t295 * t355 - t358 * t574;
t251 = t358 * t295 + t355 * t574;
t124 = (t250 * t355 + t251 * t358) * t356;
t357 = sin(qJ(3));
t545 = sin(pkin(6));
t446 = sin(pkin(12)) * t545;
t552 = cos(qJ(3));
t354 = sin(pkin(7));
t421 = cos(pkin(12)) * t545;
t546 = cos(pkin(7));
t547 = cos(pkin(6));
t571 = t547 * t354 + t546 * t421;
t248 = t357 * t446 - t552 * t571;
t534 = t248 * t355;
t249 = t357 * t571 + t552 * t446;
t369 = -t354 * t421 + t546 * t547;
t188 = t249 * t356 - t359 * t369;
t536 = t188 * t358;
t102 = t534 - t536;
t533 = t248 * t358;
t412 = t188 * t355 + t533;
t558 = t355 / 0.2e1;
t368 = (t102 * t558 + t412 * t555) * t356;
t467 = t356 * t533;
t532 = t249 * t355;
t140 = -t467 - t532;
t520 = t355 * t356;
t531 = t249 * t358;
t141 = -t248 * t520 + t531;
t401 = t140 * t555 + t141 * t558;
t16 = t368 + t401;
t466 = t354 * t552;
t436 = t355 * t466;
t523 = t354 * t357;
t292 = t356 * t523 - t359 * t546;
t514 = t358 * t292;
t255 = t436 + t514;
t563 = -t255 / 0.2e1;
t464 = t358 * t552;
t435 = t354 * t464;
t388 = -t355 * t292 + t435;
t575 = -t388 / 0.2e1;
t364 = (t355 * t563 + t358 * t575) * t356;
t519 = t355 * t357;
t278 = (t356 * t464 - t519) * t354;
t465 = t356 * t552;
t517 = t357 * t358;
t279 = (t355 * t465 + t517) * t354;
t399 = t278 * t555 + t279 * t558;
t77 = t364 + t399;
t550 = t16 * qJD(1) + t77 * qJD(2);
t578 = -qJD(3) * t124 - t550;
t573 = t566 * t359;
t309 = t573 * t358;
t345 = pkin(4) * t356;
t543 = qJ(5) * t359;
t321 = t345 - t543;
t297 = pkin(10) * t356 + t321;
t521 = t355 * t297;
t252 = t309 - t521;
t513 = t358 * t297;
t525 = t573 * t355;
t253 = t513 + t525;
t512 = t358 * t359;
t518 = t355 * t359;
t52 = -t252 * t518 + t253 * t512 - t124;
t577 = t52 * qJD(3) - t550;
t429 = qJD(3) * t466;
t576 = t250 * t555 - t355 * t251 / 0.2e1;
t349 = t355 ^ 2;
t351 = t358 ^ 2;
t559 = t351 / 0.2e1;
t570 = t559 + t349 / 0.2e1;
t366 = t369 * t356;
t530 = t249 * t359;
t189 = t366 + t530;
t535 = t189 * t359;
t537 = t188 * t356;
t384 = (t249 - t535 - t537) * t248;
t569 = qJD(1) * t384;
t568 = qJD(3) * t384;
t567 = -t574 / 0.2e1 - t576;
t330 = t349 - t351;
t477 = t359 * qJD(3);
t461 = t358 * t477;
t386 = qJD(4) * t330 + 0.2e1 * t355 * t461;
t565 = -t102 / 0.2e1;
t564 = -t248 / 0.2e1;
t562 = t573 / 0.2e1;
t561 = -t349 / 0.2e1;
t557 = -t356 / 0.2e1;
t556 = t356 / 0.2e1;
t554 = -t359 / 0.2e1;
t553 = t359 / 0.2e1;
t542 = qJD(3) * t16;
t541 = qJD(3) * t77;
t17 = t368 - t401;
t539 = t17 * qJD(3);
t538 = t188 * qJ(5);
t149 = t248 * t359;
t529 = t252 * t358;
t528 = t253 * t355;
t527 = t255 * t358;
t526 = t292 * qJ(5);
t524 = t352 * t355;
t516 = t358 * t102;
t78 = t364 - t399;
t508 = t78 * qJD(3);
t506 = t248 * t579;
t505 = t466 * t579;
t504 = t349 + t351;
t331 = t352 - t350;
t420 = -pkin(4) * t359 - t544;
t313 = -pkin(3) + t420;
t258 = t313 * t359 + t321 * t356;
t502 = qJD(3) * t258;
t259 = -t313 * t356 + t321 * t359;
t501 = qJD(3) * t259;
t305 = t331 * t355;
t500 = qJD(3) * t305;
t307 = t331 * t358;
t499 = qJD(3) * t307;
t498 = qJD(3) * t356;
t497 = qJD(3) * t357;
t496 = qJD(3) * t358;
t495 = qJD(4) * t356;
t344 = qJD(4) * t359;
t494 = qJD(5) * t355;
t493 = qJD(5) * t356;
t492 = qJD(5) * t358;
t491 = qJD(5) * t359;
t490 = qJD(6) * t355;
t489 = qJD(6) * t356;
t488 = qJD(6) * t358;
t487 = qJD(6) * t360;
t101 = t251 * t359 - t573 * t520 + (t253 - t525) * t356;
t486 = t101 * qJD(3);
t485 = t248 * qJD(3);
t484 = t249 * qJD(3);
t288 = t504 * t359 * t356;
t483 = t288 * qJD(3);
t296 = (t559 + t561) * t359;
t482 = t296 * qJD(6);
t481 = t331 * qJD(3);
t480 = t350 * qJD(3);
t479 = t355 * qJD(4);
t478 = t358 * qJD(4);
t476 = t359 * qJD(6);
t475 = pkin(9) / 0.2e1 + pkin(5) / 0.2e1;
t474 = t552 / 0.2e1;
t473 = pkin(3) * t498;
t472 = pkin(3) * t477;
t471 = pkin(9) * t495;
t463 = t359 * t552;
t462 = t313 * t498;
t460 = t355 * t478;
t459 = t359 * t479;
t458 = t356 * t476;
t336 = t356 * t344;
t335 = t356 * t477;
t338 = t359 * t478;
t457 = t355 * t488;
t456 = -t543 / 0.2e1;
t455 = t534 / 0.2e1;
t454 = t523 / 0.2e1;
t452 = -t518 / 0.2e1;
t451 = t518 / 0.2e1;
t449 = -t512 / 0.2e1;
t448 = t561 - t351 / 0.2e1;
t447 = qJD(4) * t552;
t445 = t356 * t546;
t443 = t504 * t360;
t442 = qJD(4) * t504;
t440 = qJD(6) + t498;
t439 = t475 * t359;
t438 = t354 ^ 2 * t357 * t552;
t437 = t354 * t463;
t434 = t292 * t465;
t433 = t355 * t338;
t432 = t352 * t457;
t428 = -t466 / 0.2e1;
t427 = t466 / 0.2e1;
t426 = -t465 / 0.2e1;
t425 = t465 / 0.2e1;
t424 = t463 / 0.2e1;
t423 = -t249 / 0.2e1 + t535 / 0.2e1;
t422 = t455 + t565;
t11 = -t102 * t140 + t141 * t412 - t149 * t189;
t293 = t359 * t523 + t445;
t6 = t141 * t575 + t412 * t279 / 0.2e1 + t140 * t255 / 0.2e1 + t278 * t565 + (t189 * t427 + t293 * t564) * t359;
t419 = t11 * qJD(1) + t6 * qJD(2);
t391 = t412 * t355;
t12 = (-t188 + t391 - t516) * t189;
t377 = t388 * t355;
t7 = (t391 / 0.2e1 - t516 / 0.2e1 - t188 / 0.2e1) * t293 + (-t377 / 0.2e1 + t527 / 0.2e1 - t292 / 0.2e1) * t189;
t418 = t12 * qJD(1) + t7 * qJD(2);
t55 = (-t292 - t377 + t527) * t293;
t417 = t7 * qJD(1) + t55 * qJD(2);
t415 = t293 * t437;
t61 = t255 * t278 - t279 * t388 + t415;
t416 = t6 * qJD(1) + t61 * qJD(2);
t371 = t188 * t425 + t189 * t424;
t398 = t292 * t556 + t293 * t553;
t22 = t249 * t428 + t371 * t354 + (-t398 + t454) * t248;
t414 = t22 * qJD(2) + t569;
t23 = t398 * t248 + (t249 * t474 + t357 * t564 - t371) * t354;
t413 = -t23 * qJD(2) + t569;
t410 = t528 + t529;
t409 = t355 * t427;
t408 = qJ(5) * t424;
t183 = -t438 + (t293 * t463 + t434) * t354;
t407 = t22 * qJD(1) + t183 * qJD(2);
t184 = -t354 * t434 - t415 + t438;
t406 = -t23 * qJD(1) - t184 * qJD(2);
t147 = t248 * t356;
t405 = qJD(3) * t147 - qJD(4) * t189;
t404 = qJD(3) * t149 + qJD(4) * t188;
t403 = -t480 - t489;
t402 = t456 + t345 / 0.2e1;
t400 = -t529 / 0.2e1 - t528 / 0.2e1;
t397 = t360 * t557 + t456;
t396 = t440 * t518;
t383 = t297 / 0.2e1 + t397;
t238 = t383 * t355;
t395 = -qJ(5) * t478 - t238 * qJD(3);
t239 = t383 * t358;
t394 = qJ(5) * t479 - t239 * qJD(3);
t393 = -qJD(4) * t147 + t249 * t477;
t392 = qJD(4) * t149 + t356 * t484;
t267 = qJD(3) * t296 + t460;
t389 = t255 * t557 + t293 * t449;
t262 = -qJD(4) * t296 + t496 * t524;
t306 = t330 * t352;
t387 = -qJD(3) * t306 + 0.2e1 * t433;
t362 = t252 * t563 + t292 * t562 + t388 * t253 / 0.2e1;
t363 = t354 * t408 + t360 * t399;
t370 = t475 * t356 + t576;
t18 = t293 * t370 + t362 + t363;
t365 = t102 * t252 / 0.2e1 + t188 * t562 - t412 * t253 / 0.2e1;
t367 = t248 * t456 + t360 * t401;
t2 = t189 * t370 + t365 + t367;
t53 = -t250 * t252 + t251 * t253 - t573 * t574;
t385 = -t2 * qJD(1) - t18 * qJD(2) + t53 * qJD(3);
t100 = -t250 * t359 + (t252 - 0.2e1 * t309) * t356;
t154 = (t409 + t563 + t514 / 0.2e1) * t359;
t44 = (t536 / 0.2e1 - t422) * t359;
t382 = -t44 * qJD(1) - t154 * qJD(2) + t100 * qJD(3);
t114 = (-t523 / 0.2e1 + t398) * t355;
t197 = -t251 * t356 - t518 * t573;
t32 = (t537 / 0.2e1 + t423) * t355;
t381 = -qJD(1) * t32 - qJD(2) * t114 + qJD(3) * t197;
t373 = (-t517 / 0.2e1 + t355 * t426) * t354;
t115 = t373 - t389;
t196 = -t250 * t356 + t512 * t573;
t33 = t356 * t422 + t358 * t423;
t380 = -qJD(1) * t33 - qJD(2) * t115 - qJD(3) * t196;
t379 = -t292 * qJD(4) + t359 * t429;
t254 = t293 * qJD(4) + t356 * t429;
t378 = t445 / 0.2e1 + t359 * t454;
t372 = pkin(4) * t426 + t408;
t107 = (t321 * t474 + t372) * t354;
t30 = (-t321 / 0.2e1 + t402) * t248;
t376 = t313 * t321 * qJD(3) - t30 * qJD(1) - t107 * qJD(2);
t113 = t439 + t400;
t187 = t293 * t448 + t378;
t347 = qJD(4) * qJ(5);
t361 = t530 / 0.2e1 + t366 / 0.2e1;
t50 = t189 * t448 + t361;
t375 = qJD(1) * t50 + qJD(2) * t187 + qJD(3) * t113 + t347;
t374 = qJD(4) * t420 + t491;
t348 = qJ(5) * qJD(5);
t343 = pkin(9) * t344;
t340 = t344 / 0.2e1;
t337 = t356 * t496;
t334 = t355 * t498;
t322 = t331 * qJD(4);
t304 = -t337 - t488;
t303 = -t334 - t490;
t298 = t335 + t476 / 0.2e1;
t284 = t572 * t429;
t277 = (t356 * t447 + t357 * t477) * t354;
t276 = (t356 * t497 - t359 * t447) * t354;
t199 = -t525 - t513 / 0.2e1 + t397 * t358;
t198 = t309 - t521 / 0.2e1 + t397 * t355;
t186 = t293 * t570 + t378;
t157 = t354 * t358 * t424 + t292 * t451 + t388 * t553;
t156 = t255 * t553 + t292 * t449 + t359 * t409;
t144 = t572 * t485;
t117 = t388 * t556 + t293 * t452 + (-t519 / 0.2e1 + t358 * t425) * t354;
t116 = t373 + t389;
t112 = t439 - t400;
t108 = t321 * t428 + t354 * t372;
t49 = t189 * t570 + t361;
t47 = t188 * t451 + t248 * t449 + t412 * t554;
t46 = t102 * t554 + t188 * t449 + t248 * t452;
t35 = t412 * t557 + t189 * t452 - t532 / 0.2e1 - t467 / 0.2e1;
t34 = t102 * t556 + t189 * t449 - t531 / 0.2e1 + t356 * t455;
t31 = (t321 / 0.2e1 + t402) * t248;
t19 = t293 * t567 - t362 + t363;
t5 = qJD(3) * t23;
t4 = qJD(3) * t22;
t3 = t189 * t567 - t365 + t367;
t1 = qJD(3) * t6 + qJD(4) * t7;
t8 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t568, 0, 0, 0, 0, 0, 0, 0, 0, 0, t568, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t11 + qJD(4) * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t484, t485, 0, 0, 0, 0, 0, 0, 0, 0, -t393, t392, -t144 (-pkin(3) * t249 - t506) * qJD(3) + t414, 0, 0, 0, 0, 0, 0, -t144, t393, -t392 (t249 * t313 - t506) * qJD(3) + t31 * qJD(4) - t147 * qJD(5) + t413, 0, 0, 0, 0, 0, 0 (t140 * t356 - t352 * t533) * qJD(3) + t46 * qJD(4) + t35 * qJD(6) (-t141 * t356 + t248 * t524) * qJD(3) + t47 * qJD(4) + t34 * qJD(6), t17 * qJD(4) + (t140 * t355 - t141 * t358) * t477 (-t140 * t250 + t141 * t251 - t149 * t573) * qJD(3) + t3 * qJD(4) - t17 * qJD(5) + t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, t404, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, -t404, t31 * qJD(3) + (-pkin(4) * t189 - t538) * qJD(4) + t189 * qJD(5), 0, 0, 0, 0, 0, 0, qJD(3) * t46 - t188 * t479 + t189 * t488, qJD(3) * t47 - t188 * t478 - t189 * t490, -t189 * t442 + t539, t3 * qJD(3) + (t189 * t443 - t538) * qJD(4) + t49 * qJD(5) + t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t49 - t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35 * qJD(3) - qJD(6) * t412 + t189 * t478, qJD(3) * t34 + qJD(6) * t102 - t189 * t479, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t183, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t184, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t61 + qJD(4) * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t354 * t497, -t429, 0, 0, 0, 0, 0, 0, 0, 0, -t277, t276, t284 (-pkin(3) * t523 + t505) * qJD(3) + t407, 0, 0, 0, 0, 0, 0, t284, t277, -t276 (t313 * t523 + t505) * qJD(3) + t108 * qJD(4) + t354 * qJD(5) * t465 + t406, 0, 0, 0, 0, 0, 0 (t278 * t356 + t352 * t435) * qJD(3) + t156 * qJD(4) + t117 * qJD(6) (-t279 * t356 - t352 * t436) * qJD(3) + t157 * qJD(4) + t116 * qJD(6), t78 * qJD(4) + (t278 * t355 - t279 * t358) * t477 (-t278 * t250 + t279 * t251 + t437 * t573) * qJD(3) + t19 * qJD(4) - t78 * qJD(5) + t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t254, -t379, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t379, t108 * qJD(3) + (-pkin(4) * t293 - t526) * qJD(4) + t293 * qJD(5), 0, 0, 0, 0, 0, 0, qJD(3) * t156 - t292 * t479 + t293 * t488, qJD(3) * t157 - t292 * t478 - t293 * t490, -t293 * t442 + t508, t19 * qJD(3) + (t293 * t443 - t526) * qJD(4) + t186 * qJD(5) + t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t186 - t508; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t117 * qJD(3) + qJD(6) * t388 + t293 * t478, qJD(3) * t116 - qJD(6) * t255 - t293 * t479, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t414, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t30 - t413, 0, 0, 0, 0, 0, 0, -qJD(4) * t44 - qJD(6) * t32, -qJD(6) * t33, qJD(4) * t16, -qJD(4) * t2 - qJD(5) * t16 - t419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t407, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t107 - t406, 0, 0, 0, 0, 0, 0, -qJD(4) * t154 - qJD(6) * t114, -qJD(6) * t115, qJD(4) * t77, -qJD(4) * t18 - qJD(5) * t77 - t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t336, t322, 0, -t336, 0, 0, -pkin(3) * t495, -pkin(3) * t344, 0, 0, 0, 0, 0, t336, t322, -t336, 0, qJD(4) * t259 - t356 * t491, -qJD(4) * t258 + qJD(5) * t350 (qJD(4) * t321 - t493) * t313, -t336 * t349 + t432, -qJD(6) * t306 - 0.2e1 * t356 * t433, -qJD(4) * t305 - t358 * t458, -t336 * t351 - t432, -qJD(4) * t307 + t355 * t458, t336, qJD(4) * t100 + qJD(6) * t197 + t350 * t494, -qJD(4) * t101 - qJD(6) * t196 + t350 * t492, -qJD(4) * t52 + qJD(5) * t288, qJD(4) * t53 - qJD(5) * t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335, t481, t344, -t335, -t495, 0, -t343 - t473, t471 - t472, 0, 0, 0, -t344, t495, t335, t481, -t335, t374, t501 + t343, -t471 - t502, pkin(9) * t374 + t376, -t482 + (-t349 * t477 + t460) * t356, -t356 * t386 + 0.2e1 * t359 * t457, t338 - t500, t482 + (-t351 * t477 - t460) * t356, -t459 - t499, t298 (t358 * t511 + (-qJ(5) * t358 - t355 * t566) * t356) * qJD(4) + t358 * t491 + t198 * qJD(6) + t382, -t486 + (-t355 * t511 + (qJ(5) * t355 - t358 * t566) * t356) * qJD(4) - t355 * t491 + t199 * qJD(6), -qJD(4) * t410 - t577 (-qJ(5) * t574 + t360 * t410) * qJD(4) + t112 * qJD(5) + t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t344, -t335, t480, -t462 + t343, 0, 0, 0, 0, 0, 0, t355 * t480 + t338, t358 * t480 - t459, t483, qJD(4) * t112 + t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262, t387, -t440 * t512, -t262, t396, t340, qJD(4) * t198 - qJD(6) * t251 + t381, qJD(4) * t199 + qJD(6) * t250 + t380, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t30, 0, 0, 0, 0, 0, 0, t44 * qJD(3), 0, -t542, qJD(3) * t2 + qJD(5) * t50 - t418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t107, 0, 0, 0, 0, 0, 0, t154 * qJD(3), 0, -t541, qJD(3) * t18 + qJD(5) * t187 - t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t335, -t481, 0, t335, 0, 0, t473, t472, 0, 0, 0, 0, 0, -t335, -t481, t335, 0, -t501, t502, -t376, t335 * t349 - t482, 0.2e1 * t358 * t396, -t355 * t489 + t500, t335 * t351 + t482, -t356 * t488 + t499, -t298, qJD(6) * t238 - t382, qJD(6) * t239 + t486, t577, qJD(5) * t113 - t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t348, -t457, t330 * qJD(6), 0, t457, 0, 0, qJ(5) * t488 + t494, -qJ(5) * t490 + t492, 0, t348; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t347, 0, 0, 0, 0, 0, 0, t479, t478, 0, t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267, t386, t303, t267, t304, -t477 / 0.2e1, -t355 * t487 - t395, -t358 * t487 - t394, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t50 + t542; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t187 + t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t335, -t480, t462, 0, 0, 0, 0, 0, 0, t403 * t355, t403 * t358, -t483, -qJD(4) * t113 - t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4), -t347, 0, 0, 0, 0, 0, 0, -t479, -t478, 0, -t375; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t303, t304, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32 * qJD(3), t33 * qJD(3), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114 * qJD(3), t115 * qJD(3), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t262, -t387 (t461 + t479) * t356, t262 (-t355 * t477 + t478) * t356, t340, -qJD(4) * t238 + t355 * t493 - t381, -qJD(4) * t239 + t356 * t492 - t380, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, -t386, t334, -t267, t337, t477 / 0.2e1, t395, t394, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t334, t337, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t8;
