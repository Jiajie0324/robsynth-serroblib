% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PPRRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d6,theta1,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:51
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PPRRPR2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRPR2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRPR2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PPRRPR2_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:50:55
% EndTime: 2019-03-08 18:51:00
% DurationCPUTime: 2.04s
% Computational Cost: add. (1626->194), mult. (4901->354), div. (0->0), fcn. (5141->12), ass. (0->130)
t151 = pkin(4) + pkin(10);
t71 = sin(qJ(4));
t121 = t151 * t71;
t74 = cos(qJ(4));
t144 = qJ(5) * t74;
t158 = t121 - t144;
t68 = sin(pkin(7));
t75 = cos(qJ(3));
t147 = t68 * t75;
t142 = cos(pkin(6));
t110 = t68 * t142;
t67 = sin(pkin(12));
t69 = sin(pkin(6));
t72 = sin(qJ(3));
t140 = cos(pkin(12));
t141 = cos(pkin(7));
t97 = t141 * t140;
t78 = t72 * t110 + (t67 * t75 + t72 * t97) * t69;
t83 = -t140 * t68 * t69 + t141 * t142;
t21 = t71 * t83 + t74 * t78;
t138 = qJD(3) * t75;
t114 = t68 * t138;
t148 = t68 * t72;
t40 = -t141 * t74 + t148 * t71;
t30 = qJD(4) * t40 - t74 * t114;
t41 = t141 * t71 + t148 * t74;
t27 = -t75 * t110 + (t67 * t72 - t75 * t97) * t69;
t25 = t27 * qJD(3);
t77 = t78 * t71;
t9 = -qJD(4) * t77 + (qJD(4) * t83 - t25) * t74;
t149 = -t21 * t30 + t41 * t9;
t20 = -t74 * t83 + t77;
t139 = qJD(3) * t72;
t115 = t68 * t139;
t23 = t27 * t115;
t26 = t78 * qJD(3);
t31 = qJD(4) * t41 + t114 * t71;
t8 = qJD(4) * t21 - t25 * t71;
t157 = -t147 * t26 + t20 * t31 + t40 * t8 + t149 + t23;
t143 = t71 * qJ(5);
t156 = t151 * t74 + t143;
t66 = t74 ^ 2;
t108 = qJD(4) * (t71 ^ 2 - t66);
t70 = sin(qJ(6));
t63 = t70 ^ 2;
t73 = cos(qJ(6));
t65 = t73 ^ 2;
t146 = t63 - t65;
t107 = t146 * qJD(6);
t133 = qJD(5) * t74;
t150 = pkin(5) + pkin(9);
t55 = t150 * t74;
t155 = qJD(4) * t156 - qJD(6) * t55 - t133;
t19 = t27 * t26;
t6 = t21 * t9;
t154 = 0.2e1 * t20 * t8 + 0.2e1 * t19 + 0.2e1 * t6;
t22 = t41 * t30;
t153 = -0.2e1 * t138 * t68 ^ 2 * t72 + 0.2e1 * t31 * t40 - 0.2e1 * t22;
t152 = 0.2e1 * qJD(5);
t137 = qJD(4) * t70;
t136 = qJD(4) * t71;
t135 = qJD(4) * t73;
t60 = qJD(4) * t74;
t134 = qJD(4) * t75;
t132 = qJD(6) * t70;
t131 = qJD(6) * t73;
t130 = qJD(6) * t74;
t129 = qJD(6) * t151;
t128 = t71 * qJD(5);
t127 = qJ(5) * qJD(6);
t126 = -0.2e1 * pkin(3) * qJD(4);
t123 = pkin(9) * t136;
t122 = pkin(9) * t60;
t120 = t150 * t71;
t119 = t70 * t60;
t118 = t71 * t135;
t117 = t70 * t130;
t116 = t73 * t130;
t113 = t71 * t60;
t112 = t70 * t131;
t106 = t73 * t120;
t105 = t66 * t112;
t104 = t70 * t118;
t102 = -pkin(4) * t74 - t143;
t10 = t20 * t73 - t27 * t70;
t11 = t20 * t70 + t27 * t73;
t101 = -t10 * t70 + t11 * t73;
t45 = -pkin(3) - t156;
t28 = -t70 * t45 + t106;
t29 = t120 * t70 + t73 * t45;
t100 = -t28 * t70 + t29 * t73;
t32 = t147 * t70 + t40 * t73;
t93 = t147 * t73 - t40 * t70;
t99 = -t32 * t70 - t73 * t93;
t96 = t9 * qJ(5) + t21 * qJD(5);
t95 = -t30 * qJ(5) + t41 * qJD(5);
t92 = t131 * t21 + t70 * t9;
t91 = -t132 * t21 + t73 * t9;
t90 = t131 * t41 - t30 * t70;
t89 = -t132 * t41 - t30 * t73;
t50 = t150 * t136;
t86 = qJD(6) * t158 - t50;
t84 = qJD(4) * t102 + t133;
t2 = -qJD(6) * t11 - t26 * t70 + t73 * t8;
t3 = qJD(6) * t10 + t26 * t73 + t70 * t8;
t1 = qJD(6) * t101 + t2 * t73 + t3 * t70;
t82 = t71 * t8 + t74 * t9 + (t20 * t74 - t21 * t71) * qJD(4);
t15 = t45 * t132 - t73 * (qJD(4) * t158 - t128) - t150 * t119 - qJD(6) * t106;
t16 = -t45 * t131 + (-qJD(6) * t150 + qJD(5)) * t70 * t71 + (-t70 * t121 + (t70 * qJ(5) + t150 * t73) * t74) * qJD(4);
t4 = qJD(6) * t100 - t15 * t70 + t16 * t73;
t17 = qJD(6) * t32 + t115 * t73 + t31 * t70;
t18 = qJD(6) * t93 - t115 * t70 + t31 * t73;
t5 = qJD(6) * t99 + t17 * t70 + t18 * t73;
t81 = -t30 * t74 + t31 * t71 + (t40 * t74 - t41 * t71) * qJD(4);
t80 = t82 * pkin(9);
t79 = t81 * pkin(9);
t61 = qJ(5) * t152;
t57 = -0.2e1 * t113;
t56 = 0.2e1 * t113;
t52 = -pkin(3) + t102;
t48 = -0.2e1 * t108;
t43 = -t131 * t71 - t119;
t42 = -t132 * t71 + t60 * t73;
t39 = -t128 + (pkin(4) * t71 - t144) * qJD(4);
t37 = (t134 * t71 + t139 * t74) * t68;
t36 = (-t134 * t74 + t139 * t71) * t68;
t35 = -t107 * t74 - t104;
t14 = -t136 * t27 + t26 * t74;
t13 = t26 * t71 + t27 * t60;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t25 * t78 + 0.2e1 * t19, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, 0, 0, 0, 0, 0, 0, 0, 0, 0, t154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t10 * t2 + 0.2e1 * t11 * t3 + 0.2e1 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t148 * t25 + t23, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10 * t18 + t11 * t17 + t2 * t32 - t3 * t93 + t149; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t17 * t93 + 0.2e1 * t18 * t32 - 0.2e1 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t26, t25, 0, 0, 0, 0, 0, 0, 0, 0, -t14, t13, t82, -pkin(3) * t26 + t80, 0, 0, 0, 0, 0, 0, t82, t14, -t13, t26 * t52 + t27 * t39 + t80, 0, 0, 0, 0, 0, 0 (-t135 * t21 + t2) * t71 + (qJD(4) * t10 + t91) * t74 (t137 * t21 - t3) * t71 + (-qJD(4) * t11 - t92) * t74, t101 * t136 + (t2 * t70 - t3 * t73 + (t10 * t73 + t11 * t70) * qJD(6)) * t74, t10 * t16 - t11 * t15 + t2 * t28 - t21 * t50 + t29 * t3 + t55 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t115, -t114, 0, 0, 0, 0, 0, 0, 0, 0, -t37, t36, t81, -pkin(3) * t115 + t79, 0, 0, 0, 0, 0, 0, t81, t37, -t36 (t139 * t52 - t39 * t75) * t68 + t79, 0, 0, 0, 0, 0, 0 (-t135 * t41 + t18) * t71 + (qJD(4) * t32 + t89) * t74 (t137 * t41 - t17) * t71 + (qJD(4) * t93 - t90) * t74, t99 * t136 + (-t17 * t73 + t18 * t70 + (t32 * t73 - t70 * t93) * qJD(6)) * t74, t15 * t93 + t16 * t32 + t17 * t29 + t18 * t28 - t30 * t55 - t41 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t56, t48, 0, t57, 0, 0, t71 * t126, t74 * t126, 0, 0, 0, 0, 0, t56, t48, t57, 0, -0.2e1 * t136 * t52 + 0.2e1 * t39 * t74, -0.2e1 * t39 * t71 - 0.2e1 * t52 * t60, 0.2e1 * t52 * t39, -0.2e1 * t113 * t63 + 0.2e1 * t105, -0.4e1 * t104 * t74 - 0.2e1 * t107 * t66, 0.2e1 * t108 * t70 - 0.2e1 * t116 * t71, -0.2e1 * t113 * t65 - 0.2e1 * t105, 0.2e1 * t108 * t73 + 0.2e1 * t117 * t71, t56, 0.2e1 * (-t135 * t55 + t16) * t71 + 0.2e1 * (qJD(4) * t28 - t132 * t55 - t50 * t73) * t74, 0.2e1 * (t137 * t55 + t15) * t71 + 0.2e1 * (-qJD(4) * t29 - t131 * t55 + t50 * t70) * t74, 0.2e1 * t100 * t136 + 0.2e1 * (t15 * t73 + t16 * t70 + (t28 * t73 + t29 * t70) * qJD(6)) * t74, -0.2e1 * t15 * t29 + 0.2e1 * t16 * t28 - 0.2e1 * t50 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t8, -t9, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8, t9, -pkin(4) * t8 + t96, 0, 0, 0, 0, 0, 0, t92, t91, -t1, -t1 * t151 + t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t31, t30, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, -t30, -pkin(4) * t31 + t95, 0, 0, 0, 0, 0, 0, t90, t89, -t5, -t151 * t5 + t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, -t136, 0, -t122, t123, 0, 0, 0, -t60, t136, 0, 0, 0, t84, t122, -t123, t84 * pkin(9), -t35, 0.4e1 * t112 * t74 - t136 * t146, t42, t35, t43, 0, -t155 * t73 + t70 * t86, t155 * t70 + t73 * t86, -t4, -t50 * qJ(5) + t55 * qJD(5) - t151 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152, t61, -0.2e1 * t112, 0.2e1 * t107, 0, 0.2e1 * t112, 0, 0, 0.2e1 * qJD(5) * t70 + 0.2e1 * t127 * t73, 0.2e1 * qJD(5) * t73 - 0.2e1 * t127 * t70, 0, t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t31, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, 0, 0, t122, 0, 0, 0, 0, 0, 0, t42, t43, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, -t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t18, -t17, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t136 * t70 - t116, 0, t117 + t118, t60, t16, t15, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132, 0, -t131, 0, t70 * t129, t73 * t129, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t132, -t131, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t7;
