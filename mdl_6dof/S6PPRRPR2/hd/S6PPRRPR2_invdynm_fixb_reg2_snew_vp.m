% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PPRRPR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d6,theta1,theta2]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 20:19
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PPRRPR2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRPR2_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRPR2_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPRRPR2_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPRRPR2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PPRRPR2_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 20:18:37
% EndTime: 2019-05-04 20:19:38
% DurationCPUTime: 65.37s
% Computational Cost: add. (216350->937), mult. (407850->1345), div. (0->0), fcn. (310508->14), ass. (0->657)
t1558 = sin(qJ(4));
t1543 = t1558 ^ 2;
t1563 = qJD(3) ^ 2;
t1536 = t1543 * t1563;
t1774 = qJD(4) ^ 2;
t1524 = -t1536 - t1774;
t1561 = cos(qJ(4));
t1716 = t1561 * t1563;
t1530 = t1558 * t1716;
t1521 = qJDD(4) - t1530;
t1740 = t1521 * t1558;
t1468 = -t1524 * t1561 + t1740;
t1549 = sin(pkin(7));
t1553 = cos(pkin(7));
t1717 = t1561 * t1521;
t1476 = t1524 * t1558 + t1717;
t1754 = qJD(3) * t1561;
t1698 = qJD(4) * t1754;
t1707 = t1558 * qJDD(3);
t1510 = 0.2e1 * t1698 + t1707;
t1559 = sin(qJ(3));
t1562 = cos(qJ(3));
t1625 = t1476 * t1559 + t1510 * t1562;
t1366 = t1553 * t1468 + t1549 * t1625;
t1550 = sin(pkin(6));
t1554 = cos(pkin(6));
t1370 = -t1549 * t1468 + t1553 * t1625;
t1425 = t1476 * t1562 - t1510 * t1559;
t1547 = sin(pkin(12));
t1551 = cos(pkin(12));
t1639 = t1370 * t1551 + t1425 * t1547;
t1273 = -t1550 * t1366 + t1554 * t1639;
t1325 = t1370 * t1547 - t1425 * t1551;
t1548 = sin(pkin(11));
t1552 = cos(pkin(11));
t1864 = qJ(1) * (t1273 * t1552 - t1325 * t1548);
t1863 = qJ(1) * (t1273 * t1548 + t1325 * t1552);
t1269 = t1554 * t1366 + t1550 * t1639;
t1862 = qJ(2) * (t1269 * t1550 + t1273 * t1554);
t1861 = pkin(1) * t1269;
t1860 = pkin(1) * t1273;
t1772 = t1561 ^ 2;
t1539 = t1772 * t1563;
t1526 = -t1539 - t1774;
t1520 = qJDD(4) + t1530;
t1718 = t1561 * t1520;
t1464 = t1526 * t1558 + t1718;
t1741 = t1520 * t1558;
t1473 = -t1526 * t1561 + t1741;
t1721 = t1558 * qJD(3);
t1699 = qJD(4) * t1721;
t1706 = t1561 * qJDD(3);
t1512 = -0.2e1 * t1699 + t1706;
t1626 = t1473 * t1559 - t1512 * t1562;
t1365 = -t1553 * t1464 + t1549 * t1626;
t1369 = t1549 * t1464 + t1553 * t1626;
t1424 = t1473 * t1562 + t1512 * t1559;
t1640 = t1369 * t1551 + t1424 * t1547;
t1272 = -t1550 * t1365 + t1554 * t1640;
t1322 = t1369 * t1547 - t1424 * t1551;
t1859 = qJ(1) * (t1272 * t1552 - t1322 * t1548);
t1858 = qJ(1) * (t1272 * t1548 + t1322 * t1552);
t1268 = t1554 * t1365 + t1550 * t1640;
t1857 = qJ(2) * (t1268 * t1550 + t1272 * t1554);
t1523 = -t1536 + t1774;
t1467 = t1523 * t1561 + t1741;
t1475 = -t1523 * t1558 + t1718;
t1607 = t1475 * t1559 - t1562 * t1707;
t1384 = t1553 * t1467 + t1549 * t1607;
t1388 = -t1549 * t1467 + t1553 * t1607;
t1435 = t1475 * t1562 + t1559 * t1707;
t1635 = t1388 * t1551 + t1435 * t1547;
t1290 = -t1550 * t1384 + t1554 * t1635;
t1343 = t1388 * t1547 - t1435 * t1551;
t1854 = t1290 * t1548 + t1343 * t1552;
t1853 = t1290 * t1552 - t1343 * t1548;
t1851 = pkin(1) * t1268;
t1850 = pkin(1) * t1272;
t1525 = t1539 - t1774;
t1463 = t1525 * t1558 + t1717;
t1474 = -t1525 * t1561 + t1740;
t1608 = t1474 * t1559 + t1562 * t1706;
t1383 = -t1553 * t1463 + t1549 * t1608;
t1387 = t1549 * t1463 + t1553 * t1608;
t1434 = t1474 * t1562 - t1559 * t1706;
t1636 = t1387 * t1551 + t1434 * t1547;
t1289 = -t1550 * t1383 + t1554 * t1636;
t1340 = t1387 * t1547 - t1434 * t1551;
t1847 = t1289 * t1548 + t1340 * t1552;
t1846 = t1289 * t1552 - t1340 * t1548;
t1844 = qJ(2) * t1325;
t1286 = t1554 * t1384 + t1550 * t1635;
t1839 = pkin(8) * (t1366 * t1549 + t1370 * t1553);
t1838 = qJ(2) * t1322;
t1285 = t1554 * t1383 + t1550 * t1636;
t1833 = pkin(2) * t1366;
t1832 = pkin(2) * t1370;
t1831 = pkin(8) * (t1365 * t1549 + t1369 * t1553);
t1825 = pkin(2) * t1365;
t1824 = pkin(2) * t1369;
t1818 = pkin(8) * t1425;
t1813 = pkin(8) * t1424;
t1808 = pkin(3) * t1464;
t1807 = pkin(9) * t1464;
t1806 = pkin(9) * t1476;
t1519 = g(1) * t1552 + g(2) * t1548;
t1492 = t1547 * t1519;
t1544 = g(3) - qJDD(1);
t1689 = g(1) * t1548 - t1552 * g(2);
t1677 = t1554 * t1689;
t1578 = -t1550 * t1544 + t1677;
t1571 = t1551 * t1578 + t1492;
t1568 = t1551 * t1571;
t1620 = qJDD(3) * t1559 + t1562 * t1563;
t1486 = t1620 * t1549;
t1488 = t1620 * t1553;
t1515 = qJDD(3) * t1562 - t1559 * t1563;
t1623 = t1488 * t1551 + t1515 * t1547;
t1408 = -t1550 * t1486 + t1554 * t1623;
t1443 = t1488 * t1547 - t1515 * t1551;
t1801 = t1408 * t1548 + t1443 * t1552;
t1800 = t1408 * t1552 - t1443 * t1548;
t1799 = 2 * qJD(5);
t1798 = pkin(3) * t1468;
t1797 = pkin(9) * t1468;
t1796 = pkin(9) * t1473;
t1557 = sin(qJ(6));
t1560 = cos(qJ(6));
t1504 = qJD(4) * t1557 + t1560 * t1754;
t1506 = qJD(4) * t1560 - t1557 * t1754;
t1459 = t1506 * t1504;
t1511 = t1698 + t1707;
t1496 = qJDD(6) + t1511;
t1783 = -t1459 + t1496;
t1789 = t1557 * t1783;
t1788 = t1560 * t1783;
t1787 = t1511 + t1698;
t1705 = t1550 * t1689 - qJDD(2);
t1672 = t1554 * t1544 + t1705;
t1786 = -t1549 * t1672 + t1553 * t1571;
t1575 = t1547 * t1578;
t1429 = -t1551 * t1519 + t1575;
t1332 = t1562 * t1429 + t1559 * t1786;
t1327 = -t1563 * pkin(3) + qJDD(3) * pkin(9) + t1332;
t1756 = qJ(5) * t1558;
t1767 = pkin(4) * t1561;
t1679 = -t1756 - t1767;
t1687 = t1563 * t1679 + t1327;
t1381 = t1549 * t1571 + t1553 * t1672;
t1720 = t1558 * t1381;
t1576 = -pkin(4) * t1774 + t1561 * t1687 - t1720;
t1569 = qJD(4) * t1799 + t1576;
t1785 = t1569 + (qJDD(4) + t1521) * qJ(5) - pkin(4) * t1524;
t1612 = t1554 * t1672;
t1376 = t1561 * t1381;
t1681 = -qJDD(4) * pkin(4) - qJ(5) * t1774 + qJDD(5) + t1376;
t1240 = -qJDD(4) * pkin(10) + (t1511 - t1698) * pkin(5) + (-pkin(10) * t1716 + t1687) * t1558 + t1681;
t1331 = t1559 * t1429 - t1562 * t1786;
t1326 = -qJDD(3) * pkin(3) - t1563 * pkin(9) + t1331;
t1610 = t1699 - t1706;
t1574 = t1610 * pkin(4) - qJ(5) * t1787 + t1326;
t1714 = pkin(5) * t1721 - qJD(4) * pkin(10) + t1799;
t1770 = pkin(4) + pkin(10);
t1279 = (-pkin(5) * t1716 - pkin(10) * qJDD(3)) * t1561 + (qJD(4) * t1770 - t1714) * t1721 + t1574;
t1199 = -t1240 * t1560 + t1557 * t1279;
t1200 = t1240 * t1557 + t1279 * t1560;
t1784 = -t1560 * t1199 + t1557 * t1200;
t1263 = t1687 * t1558 + t1681;
t1782 = -pkin(4) * t1520 - qJ(5) * t1526 + t1263;
t1752 = qJDD(4) * qJ(5);
t1239 = -pkin(5) * t1610 - pkin(10) * t1539 + qJD(4) * t1714 + t1576 + t1752;
t1780 = qJ(5) * t1239 - t1770 * t1784;
t1684 = t1557 * qJDD(4) - t1560 * t1610;
t1531 = qJD(6) + t1721;
t1713 = qJD(6) - t1531;
t1415 = t1506 * t1713 + t1684;
t1570 = t1560 * qJDD(4) + t1557 * t1610;
t1418 = -t1504 * t1713 + t1570;
t1333 = -t1415 * t1557 - t1418 * t1560;
t1495 = t1504 ^ 2;
t1773 = t1506 ^ 2;
t1430 = -t1495 - t1773;
t1779 = qJ(5) * t1430 - t1333 * t1770 - t1784;
t1527 = t1531 ^ 2;
t1445 = -t1527 - t1495;
t1362 = t1557 * t1445 + t1788;
t1712 = qJD(6) + t1531;
t1414 = t1506 * t1712 + t1684;
t1723 = t1557 * t1239;
t1778 = qJ(5) * t1414 - t1362 * t1770 + t1723;
t1238 = t1560 * t1239;
t1697 = -t1527 - t1773;
t1432 = t1459 + t1496;
t1722 = t1557 * t1432;
t1372 = t1560 * t1697 - t1722;
t1440 = -t1504 * qJD(6) + t1570;
t1735 = t1531 * t1504;
t1417 = t1440 - t1735;
t1777 = qJ(5) * t1417 - t1372 * t1770 + t1238;
t1776 = -t1552 * t1519 - t1548 * t1689;
t1405 = t1554 * t1486 + t1550 * t1623;
t1775 = -t1548 * t1519 + t1552 * t1689;
t1771 = -2 * qJD(5);
t1766 = pkin(5) * t1784;
t1765 = pkin(5) * t1239;
t1764 = pkin(5) * t1333;
t1763 = pkin(8) * t1549;
t1762 = pkin(8) * t1553;
t1702 = t1543 + t1772;
t1514 = t1702 * qJDD(3);
t1517 = t1536 + t1539;
t1621 = t1514 * t1559 + t1517 * t1562;
t1446 = t1621 * t1549;
t1447 = t1621 * t1553;
t1454 = t1514 * t1562 - t1517 * t1559;
t1630 = t1447 * t1551 + t1454 * t1547;
t1347 = -t1550 * t1446 + t1554 * t1630;
t1394 = -t1447 * t1547 + t1454 * t1551;
t1761 = qJ(1) * (t1347 * t1552 + t1394 * t1548);
t1760 = qJ(2) * t1550;
t1759 = qJ(2) * t1554;
t1755 = qJD(3) * qJD(4);
t1280 = t1327 * t1558 + t1376;
t1281 = t1561 * t1327 - t1720;
t1211 = t1280 * t1561 - t1281 * t1558;
t1751 = t1211 * t1559;
t1750 = t1326 * t1558;
t1749 = t1326 * t1561;
t1748 = t1432 * t1560;
t1747 = t1506 * t1531;
t1746 = t1510 * t1558;
t1461 = t1512 * t1561;
t1734 = t1531 * t1557;
t1733 = t1531 * t1560;
t1731 = t1548 * t1544;
t1730 = t1550 * t1429;
t1728 = t1550 * t1551;
t1727 = t1552 * t1544;
t1726 = t1554 * t1429;
t1719 = t1559 * t1381;
t1715 = t1562 * t1381;
t1711 = pkin(1) * t1347 + t1394 * t1760;
t1710 = pkin(2) * t1447 + t1454 * t1763;
t1709 = pkin(3) * t1517 + pkin(9) * t1514;
t1708 = t1549 * qJDD(3);
t1703 = t1527 - t1773;
t1701 = t1558 * t1459;
t1700 = t1561 * t1459;
t1692 = t1547 * t1708;
t1346 = t1554 * t1446 + t1550 * t1630;
t1691 = -pkin(1) * t1346 + t1394 * t1759;
t1690 = -pkin(2) * t1446 + t1454 * t1762;
t1212 = t1280 * t1558 + t1561 * t1281;
t1683 = t1559 * t1530;
t1682 = t1562 * t1530;
t1260 = t1569 + t1752;
t1680 = -pkin(4) * t1263 + qJ(5) * t1260;
t1678 = pkin(4) * t1558 - qJ(5) * t1561;
t1676 = pkin(5) * t1414 + t1238;
t1675 = pkin(5) * t1417 - t1723;
t1674 = -pkin(8) * t1515 - t1719;
t1673 = -pkin(8) * t1620 + t1715;
t1120 = t1239 * t1558 - t1561 * t1784;
t1121 = t1239 * t1561 + t1558 * t1784;
t1136 = t1557 * t1199 + t1560 * t1200;
t1669 = t1121 * t1559 - t1136 * t1562;
t1073 = -t1549 * t1120 + t1553 * t1669;
t1099 = t1121 * t1562 + t1136 * t1559;
t1670 = t1073 * t1551 + t1099 * t1547;
t1203 = t1260 * t1558 - t1263 * t1561;
t1204 = t1260 * t1561 + t1263 * t1558;
t1300 = (pkin(4) * qJD(4) + t1771) * t1721 + t1574;
t1662 = t1204 * t1559 - t1300 * t1562;
t1125 = -t1549 * t1203 + t1553 * t1662;
t1170 = t1204 * t1562 + t1300 * t1559;
t1668 = t1125 * t1551 + t1170 * t1547;
t1250 = pkin(4) * t1517 + t1260;
t1252 = qJ(5) * t1517 + t1263;
t1189 = t1250 * t1561 + t1252 * t1558 + t1709;
t1192 = -t1250 * t1558 + t1252 * t1561;
t1507 = t1678 * qJDD(3);
t1664 = t1192 * t1559 + t1507 * t1562;
t1127 = -t1549 * t1189 + t1553 * t1664 + t1690;
t1611 = (-t1446 * t1549 - t1447 * t1553) * pkin(8);
t1177 = t1562 * t1192 - t1559 * t1507 + t1611;
t1667 = t1127 * t1551 + t1177 * t1547;
t1660 = t1212 * t1559 - t1326 * t1562;
t1134 = t1211 * t1549 + t1553 * t1660;
t1185 = t1212 * t1562 + t1326 * t1559;
t1666 = t1134 * t1551 + t1185 * t1547;
t1209 = t1212 + t1709;
t1138 = -t1209 * t1549 + t1553 * t1751 + t1690;
t1191 = t1562 * t1211 + t1611;
t1665 = t1138 * t1551 + t1191 * t1547;
t1303 = -t1333 * t1561 + t1430 * t1558;
t1304 = t1333 * t1558 + t1430 * t1561;
t1335 = -t1415 * t1560 + t1557 * t1418;
t1650 = t1304 * t1559 - t1335 * t1562;
t1202 = -t1549 * t1303 + t1553 * t1650;
t1230 = t1304 * t1562 + t1335 * t1559;
t1663 = t1202 * t1551 + t1230 * t1547;
t1565 = -t1504 * t1712 + t1570;
t1334 = -t1557 * t1414 + t1560 * t1565;
t1457 = -t1495 + t1773;
t1311 = -t1334 * t1561 + t1457 * t1558;
t1312 = t1334 * t1558 + t1457 * t1561;
t1336 = -t1414 * t1560 - t1557 * t1565;
t1649 = t1312 * t1559 - t1336 * t1562;
t1206 = -t1549 * t1311 + t1553 * t1649;
t1231 = t1312 * t1562 + t1336 * t1559;
t1661 = t1206 * t1551 + t1231 * t1547;
t1314 = -t1362 * t1561 + t1414 * t1558;
t1315 = t1362 * t1558 + t1414 * t1561;
t1363 = t1445 * t1560 - t1789;
t1648 = t1315 * t1559 - t1363 * t1562;
t1216 = -t1549 * t1314 + t1553 * t1648;
t1259 = t1315 * t1562 + t1363 * t1559;
t1659 = t1216 * t1551 + t1259 * t1547;
t1316 = -t1372 * t1561 + t1417 * t1558;
t1317 = t1372 * t1558 + t1417 * t1561;
t1373 = -t1557 * t1697 - t1748;
t1647 = t1317 * t1559 - t1373 * t1562;
t1218 = -t1549 * t1316 + t1553 * t1647;
t1264 = t1317 * t1562 + t1373 * t1559;
t1658 = t1218 * t1551 + t1264 * t1547;
t1482 = t1495 - t1527;
t1396 = t1482 * t1557 + t1748;
t1318 = -t1396 * t1561 - t1415 * t1558;
t1320 = t1396 * t1558 - t1415 * t1561;
t1398 = t1482 * t1560 - t1722;
t1646 = t1320 * t1559 - t1398 * t1562;
t1221 = -t1549 * t1318 + t1553 * t1646;
t1277 = t1320 * t1562 + t1398 * t1559;
t1657 = t1221 * t1551 + t1277 * t1547;
t1395 = t1560 * t1703 + t1789;
t1319 = -t1395 * t1561 + t1418 * t1558;
t1321 = t1395 * t1558 + t1418 * t1561;
t1397 = -t1557 * t1703 + t1788;
t1645 = t1321 * t1559 - t1397 * t1562;
t1222 = -t1549 * t1319 + t1553 * t1645;
t1278 = t1321 * t1562 + t1397 * t1559;
t1656 = t1222 * t1551 + t1278 * t1547;
t1244 = t1331 * t1562 - t1332 * t1559;
t1224 = -t1244 * t1553 + t1549 * t1381;
t1245 = t1331 * t1559 + t1332 * t1562;
t1655 = t1224 * t1551 + t1245 * t1547;
t1439 = -qJD(6) * t1506 - t1684;
t1401 = -t1439 * t1560 - t1504 * t1734;
t1350 = t1401 * t1561 - t1701;
t1352 = -t1401 * t1558 - t1700;
t1402 = t1439 * t1557 - t1504 * t1733;
t1644 = t1352 * t1559 + t1402 * t1562;
t1236 = -t1549 * t1350 + t1553 * t1644;
t1305 = t1352 * t1562 - t1402 * t1559;
t1654 = t1236 * t1551 + t1305 * t1547;
t1403 = t1440 * t1557 + t1506 * t1733;
t1351 = -t1403 * t1561 + t1701;
t1353 = t1403 * t1558 + t1700;
t1404 = t1440 * t1560 - t1506 * t1734;
t1643 = t1353 * t1559 - t1404 * t1562;
t1237 = -t1549 * t1351 + t1553 * t1643;
t1306 = t1353 * t1562 + t1404 * t1559;
t1653 = t1237 * t1551 + t1306 * t1547;
t1242 = t1245 * t1553;
t1652 = t1242 * t1551 + t1244 * t1547;
t1421 = (-t1504 * t1557 - t1506 * t1560) * t1531;
t1399 = -t1421 * t1561 + t1496 * t1558;
t1400 = t1421 * t1558 + t1496 * t1561;
t1422 = (-t1504 * t1560 + t1506 * t1557) * t1531;
t1631 = t1400 * t1559 - t1422 * t1562;
t1283 = -t1549 * t1399 + t1553 * t1631;
t1330 = t1400 * t1562 + t1422 * t1559;
t1651 = t1283 * t1551 + t1330 * t1547;
t1451 = t1510 * t1561 + t1512 * t1558;
t1452 = t1461 - t1746;
t1518 = t1536 - t1539;
t1629 = t1452 * t1559 - t1518 * t1562;
t1361 = -t1549 * t1451 + t1553 * t1629;
t1419 = t1452 * t1562 + t1518 * t1559;
t1642 = t1361 * t1551 + t1419 * t1547;
t1479 = t1558 * t1610 - t1755 * t1772;
t1604 = t1479 * t1559 - t1682;
t1392 = -t1549 * t1461 + t1553 * t1604;
t1437 = t1479 * t1562 + t1683;
t1633 = t1392 * t1551 + t1437 * t1547;
t1462 = t1787 * t1558;
t1480 = t1511 * t1561 - t1543 * t1755;
t1603 = t1480 * t1559 + t1682;
t1393 = -t1549 * t1462 + t1553 * t1603;
t1438 = t1480 * t1562 - t1683;
t1632 = t1393 * t1551 + t1438 * t1547;
t1499 = t1702 * t1755;
t1619 = -qJDD(4) * t1562 + t1499 * t1559;
t1456 = t1619 * t1553;
t1481 = qJDD(4) * t1559 + t1499 * t1562;
t1628 = t1456 * t1551 + t1481 * t1547;
t1489 = t1515 * t1553;
t1622 = t1489 * t1551 - t1547 * t1620;
t1618 = -pkin(5) * t1362 + t1199;
t1616 = t1547 * t1672;
t1614 = t1550 * t1672;
t1613 = t1551 * t1672;
t1605 = (-t1346 * t1550 - t1347 * t1554) * qJ(2);
t1602 = pkin(5) * t1430 - t1136;
t1601 = -pkin(5) * t1372 + t1200;
t1100 = -t1136 * t1770 + t1765;
t1104 = -qJ(5) * t1136 + t1766;
t1063 = -pkin(9) * t1120 - t1100 * t1558 + t1104 * t1561;
t1074 = -pkin(3) * t1120 - t1780;
t1600 = pkin(8) * t1099 + t1063 * t1559 + t1074 * t1562;
t1119 = -t1335 * t1770 + t1602;
t1251 = -qJ(5) * t1335 + t1764;
t1110 = -pkin(9) * t1303 - t1119 * t1558 + t1251 * t1561;
t1112 = -pkin(3) * t1303 - t1779;
t1599 = pkin(8) * t1230 + t1110 * t1559 + t1112 * t1562;
t1171 = -qJ(5) * t1363 - t1618;
t1195 = -t1363 * t1770 + t1676;
t1115 = -pkin(9) * t1314 + t1171 * t1561 - t1195 * t1558;
t1172 = -pkin(3) * t1314 - t1778;
t1598 = pkin(8) * t1259 + t1115 * t1559 + t1172 * t1562;
t1173 = -qJ(5) * t1373 - t1601;
t1198 = -t1373 * t1770 + t1675;
t1116 = -pkin(9) * t1316 + t1173 * t1561 - t1198 * t1558;
t1175 = -pkin(3) * t1316 - t1777;
t1597 = pkin(8) * t1264 + t1116 * t1559 + t1175 * t1562;
t1139 = -pkin(3) * t1203 - t1680;
t1150 = -pkin(9) * t1203 + t1300 * t1678;
t1596 = pkin(8) * t1170 + t1139 * t1562 + t1150 * t1559;
t1232 = -t1785 - t1798;
t1566 = t1721 * t1771 + t1574;
t1298 = -pkin(4) * t1699 + qJ(5) * t1510 - t1566;
t1258 = -pkin(4) * t1746 + t1298 * t1561 - t1797;
t1595 = t1232 * t1562 + t1258 * t1559 + t1818;
t1233 = -t1782 + t1808;
t1299 = (-t1512 + t1699) * pkin(4) + t1566;
t1257 = -qJ(5) * t1461 - t1299 * t1558 + t1807;
t1594 = t1233 * t1562 + t1257 * t1559 + t1813;
t1261 = t1280 - t1808;
t1309 = t1750 - t1807;
t1593 = t1261 * t1562 + t1309 * t1559 - t1813;
t1262 = t1281 + t1798;
t1310 = t1749 + t1797;
t1592 = t1262 * t1562 + t1310 * t1559 - t1818;
t1059 = -pkin(3) * t1136 + pkin(9) * t1121 + t1100 * t1561 + t1104 * t1558;
t1072 = t1553 * t1120 + t1549 * t1669;
t1040 = -pkin(2) * t1072 - t1549 * t1059 + t1553 * t1600;
t1045 = t1562 * t1063 - t1559 * t1074 + (-t1072 * t1549 - t1073 * t1553) * pkin(8);
t1062 = -t1073 * t1547 + t1099 * t1551;
t1591 = qJ(2) * t1062 + t1040 * t1551 + t1045 * t1547;
t1106 = -pkin(3) * t1335 + pkin(9) * t1304 + t1119 * t1561 + t1251 * t1558;
t1201 = t1553 * t1303 + t1549 * t1650;
t1061 = -pkin(2) * t1201 - t1549 * t1106 + t1553 * t1599;
t1067 = t1562 * t1110 - t1559 * t1112 + (-t1201 * t1549 - t1202 * t1553) * pkin(8);
t1153 = -t1202 * t1547 + t1230 * t1551;
t1590 = qJ(2) * t1153 + t1061 * t1551 + t1067 * t1547;
t1124 = t1553 * t1203 + t1549 * t1662;
t1130 = pkin(9) * t1204 + (-pkin(3) + t1679) * t1300;
t1065 = -pkin(2) * t1124 - t1549 * t1130 + t1553 * t1596;
t1066 = -t1559 * t1139 + t1562 * t1150 + (-t1124 * t1549 - t1125 * t1553) * pkin(8);
t1105 = -t1125 * t1547 + t1170 * t1551;
t1589 = qJ(2) * t1105 + t1065 * t1551 + t1066 * t1547;
t1113 = -pkin(3) * t1363 + pkin(9) * t1315 + t1171 * t1558 + t1195 * t1561;
t1215 = t1553 * t1314 + t1549 * t1648;
t1069 = -pkin(2) * t1215 - t1549 * t1113 + t1553 * t1598;
t1089 = t1562 * t1115 - t1559 * t1172 + (-t1215 * t1549 - t1216 * t1553) * pkin(8);
t1174 = -t1216 * t1547 + t1259 * t1551;
t1588 = qJ(2) * t1174 + t1069 * t1551 + t1089 * t1547;
t1114 = -pkin(3) * t1373 + pkin(9) * t1317 + t1173 * t1558 + t1198 * t1561;
t1217 = t1553 * t1316 + t1549 * t1647;
t1071 = -pkin(2) * t1217 - t1549 * t1114 + t1553 * t1597;
t1090 = t1562 * t1116 - t1559 * t1175 + (-t1217 * t1549 - t1218 * t1553) * pkin(8);
t1176 = -t1218 * t1547 + t1264 * t1551;
t1587 = qJ(2) * t1176 + t1071 * t1551 + t1090 * t1547;
t1133 = -t1211 * t1553 + t1549 * t1660;
t1186 = -pkin(3) * t1326 + pkin(9) * t1212;
t1577 = pkin(8) * t1185 - (-pkin(3) * t1562 - pkin(9) * t1559) * t1211;
t1081 = -pkin(2) * t1133 - t1549 * t1186 + t1553 * t1577;
t1088 = -(pkin(3) * t1559 - pkin(9) * t1562) * t1211 + (-t1133 * t1549 - t1134 * t1553) * pkin(8);
t1111 = -t1134 * t1547 + t1185 * t1551;
t1586 = qJ(2) * t1111 + t1081 * t1551 + t1088 * t1547;
t1247 = t1806 + t1558 * t1298 + (pkin(3) + t1767) * t1510;
t1147 = -t1549 * t1247 + t1553 * t1595 - t1833;
t1167 = -t1559 * t1232 + t1562 * t1258 - t1839;
t1585 = t1147 * t1551 + t1167 * t1547 - t1844;
t1246 = t1796 + t1561 * t1299 + (-pkin(3) - t1756) * t1512;
t1149 = -t1549 * t1246 + t1553 * t1594 - t1825;
t1168 = -t1559 * t1233 + t1562 * t1257 - t1831;
t1584 = t1149 * t1551 + t1168 * t1547 - t1838;
t1302 = pkin(3) * t1512 - t1749 - t1796;
t1165 = -t1549 * t1302 + t1553 * t1593 + t1825;
t1183 = -t1559 * t1261 + t1562 * t1309 + t1831;
t1583 = t1165 * t1551 + t1183 * t1547 + t1838;
t1301 = -pkin(3) * t1510 + t1750 - t1806;
t1166 = -t1549 * t1301 + t1553 * t1592 + t1833;
t1184 = -t1559 * t1262 + t1562 * t1310 + t1839;
t1582 = t1166 * t1551 + t1184 * t1547 + t1844;
t1223 = -t1244 * t1549 - t1553 * t1381;
t1169 = (-t1223 * t1549 - t1224 * t1553) * pkin(8);
t1178 = -t1224 * t1547 + t1245 * t1551;
t1179 = -pkin(2) * t1223 + t1245 * t1762;
t1581 = qJ(2) * t1178 + t1169 * t1547 + t1179 * t1551;
t1255 = pkin(2) * t1486 + t1549 * t1332 + t1553 * t1674;
t1338 = -t1715 + (t1486 * t1549 + t1488 * t1553) * pkin(8);
t1580 = qJ(2) * t1443 + t1255 * t1551 + t1338 * t1547;
t1487 = t1515 * t1549;
t1256 = -pkin(2) * t1487 + t1549 * t1331 + t1553 * t1673;
t1337 = -t1719 + (-t1487 * t1549 - t1489 * t1553) * pkin(8);
t1444 = -t1489 * t1547 - t1551 * t1620;
t1579 = qJ(2) * t1444 + t1256 * t1551 + t1337 * t1547;
t1564 = t1551 * t1429 - t1547 * t1571;
t1485 = (-t1549 * t1551 * t1554 - t1550 * t1553) * qJDD(3);
t1484 = (-t1549 * t1728 + t1553 * t1554) * qJDD(3);
t1455 = t1619 * t1549;
t1413 = -t1456 * t1547 + t1481 * t1551;
t1410 = -t1550 * t1487 + t1554 * t1622;
t1407 = t1554 * t1487 + t1550 * t1622;
t1391 = t1553 * t1462 + t1549 * t1603;
t1390 = t1553 * t1461 + t1549 * t1604;
t1380 = -t1550 * t1492 + (-t1550 * t1578 + t1612) * t1551;
t1379 = -t1547 * t1612 + t1730;
t1378 = t1705 * t1728 + t1554 * (t1551 * t1677 + t1492);
t1377 = -t1547 * t1614 - t1726;
t1360 = t1553 * t1451 + t1549 * t1629;
t1359 = -t1547 * t1492 + (t1429 - t1575) * t1551;
t1358 = -t1547 * t1429 - t1568;
t1357 = t1564 * t1554;
t1356 = t1564 * t1550;
t1355 = -t1550 * t1455 + t1554 * t1628;
t1354 = t1554 * t1455 + t1550 * t1628;
t1349 = -t1410 * t1548 + t1444 * t1552;
t1348 = t1410 * t1552 + t1444 * t1548;
t1345 = -t1393 * t1547 + t1438 * t1551;
t1344 = -t1392 * t1547 + t1437 * t1551;
t1329 = t1547 * t1726 + t1554 * t1568 + t1614;
t1328 = t1547 * t1730 + t1550 * t1568 - t1612;
t1313 = -t1361 * t1547 + t1419 * t1551;
t1308 = -t1355 * t1548 + t1413 * t1552;
t1307 = t1355 * t1552 + t1413 * t1548;
t1296 = qJ(1) * (-t1347 * t1548 + t1394 * t1552);
t1295 = -t1550 * t1391 + t1554 * t1632;
t1294 = -t1550 * t1390 + t1554 * t1633;
t1293 = t1554 * t1391 + t1550 * t1632;
t1292 = t1554 * t1390 + t1550 * t1633;
t1282 = t1553 * t1399 + t1549 * t1631;
t1266 = pkin(1) * t1329 + t1359 * t1760;
t1265 = -pkin(1) * t1328 + t1359 * t1759;
t1254 = pkin(2) * t1489 - t1553 * t1331 + t1549 * t1673;
t1253 = -pkin(2) * t1488 - t1553 * t1332 + t1549 * t1674;
t1249 = -t1550 * t1360 + t1554 * t1642;
t1248 = t1554 * t1360 + t1550 * t1642;
t1243 = (-t1328 * t1550 - t1329 * t1554) * qJ(2);
t1241 = t1245 * t1549;
t1235 = t1553 * t1351 + t1549 * t1643;
t1234 = t1553 * t1350 + t1549 * t1644;
t1229 = -t1295 * t1548 + t1345 * t1552;
t1228 = -t1294 * t1548 + t1344 * t1552;
t1227 = t1295 * t1552 + t1345 * t1548;
t1226 = t1294 * t1552 + t1344 * t1548;
t1225 = -t1283 * t1547 + t1330 * t1551;
t1220 = t1553 * t1319 + t1549 * t1645;
t1219 = t1553 * t1318 + t1549 * t1646;
t1214 = -t1249 * t1548 + t1313 * t1552;
t1213 = t1249 * t1552 + t1313 * t1548;
t1208 = -t1237 * t1547 + t1306 * t1551;
t1207 = -t1236 * t1547 + t1305 * t1551;
t1205 = t1553 * t1311 + t1549 * t1649;
t1194 = -t1547 * t1255 + t1551 * t1338 + (t1405 * t1550 + t1408 * t1554) * qJ(2);
t1193 = -t1547 * t1256 + t1551 * t1337 + (-t1407 * t1550 - t1410 * t1554) * qJ(2);
t1190 = -t1242 * t1547 + t1244 * t1551;
t1188 = -t1550 * t1282 + t1554 * t1651;
t1187 = t1554 * t1282 + t1550 * t1651;
t1182 = -t1222 * t1547 + t1278 * t1551;
t1181 = -t1221 * t1547 + t1277 * t1551;
t1180 = pkin(2) * t1224 + t1245 * t1763;
t1164 = t1553 * t1301 + t1549 * t1592 - t1832;
t1163 = t1553 * t1302 + t1549 * t1593 - t1824;
t1162 = pkin(1) * t1405 - t1550 * t1253 + t1554 * t1580;
t1161 = -pkin(1) * t1407 - t1550 * t1254 + t1554 * t1579;
t1160 = -pkin(1) * t1408 + t1554 * t1253 + t1550 * t1580;
t1159 = pkin(1) * t1410 + t1554 * t1254 + t1550 * t1579;
t1158 = -t1550 * t1235 + t1554 * t1653;
t1157 = -t1550 * t1234 + t1554 * t1654;
t1156 = t1554 * t1235 + t1550 * t1653;
t1155 = t1554 * t1234 + t1550 * t1654;
t1154 = -t1206 * t1547 + t1231 * t1551;
t1152 = -t1550 * t1241 + t1554 * t1652;
t1151 = t1554 * t1241 + t1550 * t1652;
t1148 = t1553 * t1246 + t1549 * t1594 + t1824;
t1146 = t1553 * t1247 + t1549 * t1595 + t1832;
t1145 = -t1550 * t1223 + t1554 * t1655;
t1144 = t1554 * t1223 + t1550 * t1655;
t1143 = -t1550 * t1220 + t1554 * t1656;
t1142 = -t1550 * t1219 + t1554 * t1657;
t1141 = t1554 * t1220 + t1550 * t1656;
t1140 = t1554 * t1219 + t1550 * t1657;
t1137 = t1209 * t1553 + t1549 * t1751 + t1710;
t1132 = -t1550 * t1217 + t1554 * t1658;
t1131 = t1554 * t1217 + t1550 * t1658;
t1129 = -t1550 * t1215 + t1554 * t1659;
t1128 = t1554 * t1215 + t1550 * t1659;
t1126 = t1553 * t1189 + t1549 * t1664 + t1710;
t1123 = -t1550 * t1205 + t1554 * t1661;
t1122 = t1554 * t1205 + t1550 * t1661;
t1118 = -t1550 * t1201 + t1554 * t1663;
t1117 = t1554 * t1201 + t1550 * t1663;
t1109 = -t1547 * t1138 + t1551 * t1191 + t1605;
t1108 = -t1547 * t1166 + t1551 * t1184 + t1862;
t1107 = -t1547 * t1165 + t1551 * t1183 + t1857;
t1103 = -t1547 * t1127 + t1551 * t1177 + t1605;
t1102 = -t1547 * t1149 + t1551 * t1168 - t1857;
t1101 = -t1547 * t1147 + t1551 * t1167 - t1862;
t1098 = -t1550 * t1164 + t1554 * t1582 + t1861;
t1097 = -t1550 * t1163 + t1554 * t1583 + t1851;
t1096 = t1554 * t1164 + t1550 * t1582 - t1860;
t1095 = t1554 * t1163 + t1550 * t1583 - t1850;
t1094 = -t1550 * t1133 + t1554 * t1666;
t1093 = t1554 * t1133 + t1550 * t1666;
t1092 = -t1550 * t1137 + t1554 * t1665 + t1691;
t1091 = t1554 * t1137 + t1550 * t1665 + t1711;
t1087 = -t1550 * t1148 + t1554 * t1584 - t1851;
t1086 = t1554 * t1148 + t1550 * t1584 + t1850;
t1085 = -t1550 * t1146 + t1554 * t1585 - t1861;
t1084 = t1554 * t1146 + t1550 * t1585 + t1860;
t1083 = -t1550 * t1124 + t1554 * t1668;
t1082 = t1554 * t1124 + t1550 * t1668;
t1080 = pkin(2) * t1134 + t1553 * t1186 + t1549 * t1577;
t1079 = -t1550 * t1126 + t1554 * t1667 + t1691;
t1078 = t1554 * t1126 + t1550 * t1667 + t1711;
t1077 = t1551 * t1169 - t1547 * t1179 + (-t1144 * t1550 - t1145 * t1554) * qJ(2);
t1076 = -pkin(1) * t1144 - t1550 * t1180 + t1554 * t1581;
t1075 = pkin(1) * t1145 + t1554 * t1180 + t1550 * t1581;
t1070 = pkin(2) * t1218 + t1553 * t1114 + t1549 * t1597;
t1068 = pkin(2) * t1216 + t1553 * t1113 + t1549 * t1598;
t1064 = pkin(2) * t1125 + t1553 * t1130 + t1549 * t1596;
t1060 = pkin(2) * t1202 + t1553 * t1106 + t1549 * t1599;
t1058 = -t1547 * t1071 + t1551 * t1090 + (-t1131 * t1550 - t1132 * t1554) * qJ(2);
t1057 = -t1547 * t1069 + t1551 * t1089 + (-t1128 * t1550 - t1129 * t1554) * qJ(2);
t1056 = -t1550 * t1072 + t1554 * t1670;
t1055 = t1554 * t1072 + t1550 * t1670;
t1054 = -t1547 * t1081 + t1551 * t1088 + (-t1093 * t1550 - t1094 * t1554) * qJ(2);
t1053 = -pkin(1) * t1131 - t1550 * t1070 + t1554 * t1587;
t1052 = pkin(1) * t1132 + t1554 * t1070 + t1550 * t1587;
t1051 = -t1547 * t1061 + t1551 * t1067 + (-t1117 * t1550 - t1118 * t1554) * qJ(2);
t1050 = -pkin(1) * t1128 - t1550 * t1068 + t1554 * t1588;
t1049 = pkin(1) * t1129 + t1554 * t1068 + t1550 * t1588;
t1048 = -pkin(1) * t1093 - t1550 * t1080 + t1554 * t1586;
t1047 = pkin(1) * t1094 + t1554 * t1080 + t1550 * t1586;
t1046 = -t1547 * t1065 + t1551 * t1066 + (-t1082 * t1550 - t1083 * t1554) * qJ(2);
t1044 = -pkin(1) * t1117 - t1550 * t1060 + t1554 * t1590;
t1043 = pkin(1) * t1118 + t1554 * t1060 + t1550 * t1590;
t1042 = -pkin(1) * t1082 - t1550 * t1064 + t1554 * t1589;
t1041 = pkin(1) * t1083 + t1554 * t1064 + t1550 * t1589;
t1039 = pkin(2) * t1073 + t1553 * t1059 + t1549 * t1600;
t1038 = -t1547 * t1040 + t1551 * t1045 + (-t1055 * t1550 - t1056 * t1554) * qJ(2);
t1037 = -pkin(1) * t1055 - t1550 * t1039 + t1554 * t1591;
t1036 = pkin(1) * t1056 + t1554 * t1039 + t1550 * t1591;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1731, -t1727, -t1775, -qJ(1) * t1775, 0, 0, 0, 0, 0, 0, -t1548 * t1380 - t1552 * t1616, -t1548 * t1379 - t1552 * t1613, -t1357 * t1548 + t1358 * t1552, t1552 * t1243 - t1548 * t1265 - qJ(1) * (t1329 * t1552 + t1359 * t1548), 0, 0, -t1801, 0, t1349, -t1485 * t1548 + t1552 * t1692, -qJ(1) * t1348 - t1161 * t1548 + t1193 * t1552, qJ(1) * t1800 - t1548 * t1162 + t1552 * t1194, -t1152 * t1548 + t1190 * t1552, t1552 * t1077 - t1548 * t1076 - qJ(1) * (t1145 * t1552 + t1178 * t1548), t1229, t1214, -t1854, t1228, t1847, t1308, -t1548 * t1097 + t1552 * t1107 + t1859, -t1548 * t1098 + t1552 * t1108 + t1864, -t1092 * t1548 + t1109 * t1552 - t1761, t1552 * t1054 - t1548 * t1048 - qJ(1) * (t1094 * t1552 + t1111 * t1548), t1308, t1854, -t1847, t1229, t1214, t1228, -t1079 * t1548 + t1103 * t1552 - t1761, -t1548 * t1087 + t1552 * t1102 - t1859, -t1548 * t1085 + t1552 * t1101 - t1864, t1552 * t1046 - t1548 * t1042 - qJ(1) * (t1083 * t1552 + t1105 * t1548), -t1158 * t1548 + t1208 * t1552, -t1123 * t1548 + t1154 * t1552, -t1143 * t1548 + t1182 * t1552, -t1157 * t1548 + t1207 * t1552, -t1142 * t1548 + t1181 * t1552, -t1188 * t1548 + t1225 * t1552, t1552 * t1057 - t1548 * t1050 - qJ(1) * (t1129 * t1552 + t1174 * t1548), t1552 * t1058 - t1548 * t1053 - qJ(1) * (t1132 * t1552 + t1176 * t1548), t1552 * t1051 - t1548 * t1044 - qJ(1) * (t1118 * t1552 + t1153 * t1548), t1552 * t1038 - t1548 * t1037 - qJ(1) * (t1056 * t1552 + t1062 * t1548); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1727, -t1731, t1776, qJ(1) * t1776, 0, 0, 0, 0, 0, 0, t1552 * t1380 - t1548 * t1616, t1552 * t1379 - t1548 * t1613, t1357 * t1552 + t1358 * t1548, t1548 * t1243 + t1552 * t1265 + qJ(1) * (-t1329 * t1548 + t1359 * t1552), 0, 0, t1800, 0, t1348, t1485 * t1552 + t1548 * t1692, qJ(1) * t1349 + t1161 * t1552 + t1193 * t1548, qJ(1) * t1801 + t1552 * t1162 + t1548 * t1194, t1152 * t1552 + t1190 * t1548, t1548 * t1077 + t1552 * t1076 + qJ(1) * (-t1145 * t1548 + t1178 * t1552), t1227, t1213, t1853, t1226, -t1846, t1307, t1552 * t1097 + t1548 * t1107 + t1858, t1552 * t1098 + t1548 * t1108 + t1863, t1092 * t1552 + t1109 * t1548 + t1296, t1548 * t1054 + t1552 * t1048 + qJ(1) * (-t1094 * t1548 + t1111 * t1552), t1307, -t1853, t1846, t1227, t1213, t1226, t1079 * t1552 + t1103 * t1548 + t1296, t1552 * t1087 + t1548 * t1102 - t1858, t1552 * t1085 + t1548 * t1101 - t1863, t1548 * t1046 + t1552 * t1042 + qJ(1) * (-t1083 * t1548 + t1105 * t1552), t1158 * t1552 + t1208 * t1548, t1123 * t1552 + t1154 * t1548, t1143 * t1552 + t1182 * t1548, t1157 * t1552 + t1207 * t1548, t1142 * t1552 + t1181 * t1548, t1188 * t1552 + t1225 * t1548, t1548 * t1057 + t1552 * t1050 + qJ(1) * (-t1129 * t1548 + t1174 * t1552), t1548 * t1058 + t1552 * t1053 + qJ(1) * (-t1132 * t1548 + t1176 * t1552), t1548 * t1051 + t1552 * t1044 + qJ(1) * (-t1118 * t1548 + t1153 * t1552), t1548 * t1038 + t1552 * t1037 + qJ(1) * (-t1056 * t1548 + t1062 * t1552); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1689, t1519, 0, 0, 0, 0, 0, 0, 0, 0, t1378, t1377, t1356, t1266, 0, 0, t1405, 0, t1407, t1484, t1159, t1160, t1151, t1075, t1293, t1248, t1286, t1292, -t1285, t1354, t1095, t1096, t1091, t1047, t1354, -t1286, t1285, t1293, t1248, t1292, t1078, t1086, t1084, t1041, t1156, t1122, t1141, t1155, t1140, t1187, t1049, t1052, t1043, t1036; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1544, -t1689, 0, 0, 0, 0, 0, 0, 0, -t1616, -t1613, t1358, t1243, 0, 0, -t1443, 0, t1444, t1692, t1193, t1194, t1190, t1077, t1345, t1313, -t1343, t1344, t1340, t1413, t1107, t1108, t1109, t1054, t1413, t1343, -t1340, t1345, t1313, t1344, t1103, t1102, t1101, t1046, t1208, t1154, t1182, t1207, t1181, t1225, t1057, t1058, t1051, t1038; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1544, 0, -t1519, 0, 0, 0, 0, 0, 0, 0, t1380, t1379, t1357, t1265, 0, 0, t1408, 0, t1410, t1485, t1161, t1162, t1152, t1076, t1295, t1249, t1290, t1294, -t1289, t1355, t1097, t1098, t1092, t1048, t1355, -t1290, t1289, t1295, t1249, t1294, t1079, t1087, t1085, t1042, t1158, t1123, t1143, t1157, t1142, t1188, t1050, t1053, t1044, t1037; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1689, t1519, 0, 0, 0, 0, 0, 0, 0, 0, t1378, t1377, t1356, t1266, 0, 0, t1405, 0, t1407, t1484, t1159, t1160, t1151, t1075, t1293, t1248, t1286, t1292, -t1285, t1354, t1095, t1096, t1091, t1047, t1354, -t1286, t1285, t1293, t1248, t1292, t1078, t1086, t1084, t1041, t1156, t1122, t1141, t1155, t1140, t1187, t1049, t1052, t1043, t1036; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1672, -t1571, 0, 0, 0, t1515, 0, -t1620, 0, t1337, t1338, t1244, t1169, t1438, t1419, t1435, t1437, -t1434, t1481, t1183, t1184, t1191, t1088, t1481, -t1435, t1434, t1438, t1419, t1437, t1177, t1168, t1167, t1066, t1306, t1231, t1278, t1305, t1277, t1330, t1089, t1090, t1067, t1045; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1672, 0, t1429, 0, 0, 0, t1488, 0, t1489, -t1708, t1256, t1255, t1242, t1179, t1393, t1361, t1388, t1392, -t1387, t1456, t1165, t1166, t1138, t1081, t1456, -t1388, t1387, t1393, t1361, t1392, t1127, t1149, t1147, t1065, t1237, t1206, t1222, t1236, t1221, t1283, t1069, t1071, t1061, t1040; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1571, -t1429, 0, 0, 0, 0, t1486, 0, t1487, t1553 * qJDD(3), t1254, t1253, t1241, t1180, t1391, t1360, t1384, t1390, -t1383, t1455, t1163, t1164, t1137, t1080, t1455, -t1384, t1383, t1391, t1360, t1390, t1126, t1148, t1146, t1064, t1235, t1205, t1220, t1234, t1219, t1282, t1068, t1070, t1060, t1039; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), 0, -t1563, 0, 0, -t1381, t1331, 0, t1480, t1452, t1475, t1479, -t1474, t1499, t1309, t1310, t1211, pkin(9) * t1211, t1499, -t1475, t1474, t1480, t1452, t1479, t1192, t1257, t1258, t1150, t1353, t1312, t1321, t1352, t1320, t1400, t1115, t1116, t1110, t1063; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1563, 0, qJDD(3), 0, t1381, 0, t1332, 0, t1530, -t1518, -t1707, -t1530, -t1706, -qJDD(4), t1261, t1262, 0, pkin(3) * t1211, -qJDD(4), t1707, t1706, t1530, -t1518, -t1530, t1507, t1233, t1232, t1139, -t1404, -t1336, -t1397, t1402, -t1398, -t1422, t1172, t1175, t1112, t1074; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t1331, -t1332, 0, 0, t1462, t1451, t1467, t1461, t1463, 0, t1302, t1301, t1209, t1186, 0, -t1467, -t1463, t1462, t1451, t1461, t1189, t1246, t1247, t1130, t1351, t1311, t1319, t1350, t1318, t1399, t1113, t1114, t1106, t1059; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1511, t1512, t1520, -t1698, t1525, t1698, 0, t1326, t1280, 0, t1698, -t1520, -t1525, t1511, t1512, -t1698, t1252, -qJ(5) * t1512, t1298, -qJ(5) * t1300, t1459, t1457, t1418, -t1459, -t1415, t1496, t1171, t1173, t1251, t1104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1699, t1510, t1523, -t1610, t1521, -t1699, -t1326, 0, t1281, 0, -t1699, -t1523, -t1521, t1699, t1510, -t1610, t1250, t1299, pkin(4) * t1510, -pkin(4) * t1300, -t1403, -t1334, -t1395, t1401, -t1396, -t1421, t1195, t1198, t1119, t1100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1530, t1518, t1707, t1530, t1706, qJDD(4), -t1280, -t1281, 0, 0, qJDD(4), -t1707, -t1706, -t1530, t1518, t1530, -t1507, t1782, t1785, t1680, t1404, t1336, t1397, -t1402, t1398, t1422, t1778, t1777, t1779, t1780; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(4), -t1707, -t1706, -t1530, t1518, t1530, 0, t1263, t1260, 0, t1404, t1336, t1397, -t1402, t1398, t1422, -pkin(10) * t1362 + t1723, -pkin(10) * t1372 + t1238, -pkin(10) * t1333 - t1784, -pkin(10) * t1784; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1698, t1520, t1525, -t1511, -t1512, t1698, -t1263, 0, t1300, 0, -t1459, -t1457, -t1418, t1459, t1415, -t1496, t1618, t1601, -t1764, -t1766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1699, t1523, t1521, -t1699, -t1510, t1610, -t1260, -t1300, 0, 0, t1403, t1334, t1395, -t1401, t1396, t1421, pkin(10) * t1363 - t1676, pkin(10) * t1373 - t1675, pkin(10) * t1335 - t1602, pkin(10) * t1136 - t1765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1440, -t1414, t1783, t1735, t1482, -t1735, 0, t1239, t1199, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1747, t1565, t1703, t1439, t1432, -t1747, -t1239, 0, t1200, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1459, t1457, t1418, -t1459, -t1415, t1496, -t1199, -t1200, 0, 0;];
m_new_reg  = t1;
