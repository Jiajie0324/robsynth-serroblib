% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRPP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x24]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPP1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPP1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:29:54
% EndTime: 2019-03-09 04:30:14
% DurationCPUTime: 10.38s
% Computational Cost: add. (10265->556), mult. (20715->745), div. (0->0), fcn. (20906->8), ass. (0->401)
t391 = cos(qJ(4));
t552 = t391 * qJ(5);
t345 = pkin(8) * t391 + t552;
t386 = sin(pkin(10));
t387 = cos(pkin(10));
t389 = sin(qJ(4));
t475 = (-qJ(5) - pkin(8)) * t389;
t257 = t345 * t386 - t387 * t475;
t390 = sin(qJ(3));
t553 = t390 * t391;
t555 = t389 * t390;
t299 = -t386 * t555 + t387 * t553;
t617 = t299 / 0.2e1;
t655 = t257 * t617;
t557 = t387 * t389;
t561 = t386 * t391;
t325 = t557 + t561;
t296 = t325 * t390;
t620 = -t296 / 0.2e1;
t392 = cos(qJ(3));
t554 = t389 * t392;
t350 = t386 * t554;
t550 = t391 * t392;
t486 = -t550 / 0.2e1;
t439 = t350 / 0.2e1 + t387 * t486;
t556 = t387 * t391;
t323 = t386 * t389 - t556;
t601 = -t392 / 0.2e1;
t485 = t323 * t601;
t217 = t485 + t439;
t515 = t392 * qJD(1);
t278 = t296 * t515;
t525 = t296 * qJD(4);
t654 = -qJD(3) * t217 + t278 - t525;
t328 = t387 * t345;
t467 = t386 * t475;
t644 = t328 + t467;
t653 = t620 * t644 + t655;
t319 = t325 ^ 2;
t645 = t323 ^ 2 + t319;
t652 = qJD(5) * t645;
t295 = t299 ^ 2;
t646 = t296 ^ 2 + t295;
t651 = qJD(5) * t646;
t452 = t296 * t323 + t299 * t325;
t650 = qJD(1) * t646 + qJD(3) * t452;
t649 = qJD(1) * t452 + qJD(3) * t645;
t369 = -cos(pkin(9)) * pkin(1) - pkin(2);
t466 = -pkin(3) * t392 - pkin(8) * t390;
t313 = t369 + t466;
t306 = t391 * t313;
t508 = t390 * t552;
t367 = sin(pkin(9)) * pkin(1) + pkin(7);
t567 = t367 * t389;
t187 = -t508 + t306 + (-pkin(4) - t567) * t392;
t181 = t386 * t187;
t347 = t392 * t367;
t507 = t391 * t347;
t211 = t507 + (-qJ(5) * t390 + t313) * t389;
t560 = t387 * t211;
t106 = t560 + t181;
t648 = t106 / 0.2e1;
t292 = t299 * qJD(4);
t603 = t387 / 0.2e1;
t605 = t386 / 0.2e1;
t546 = t550 * t605 + t554 * t603;
t298 = t325 * t392;
t618 = t298 / 0.2e1;
t460 = t618 + t546;
t528 = t460 * qJD(3);
t647 = -t292 - t528;
t621 = t296 / 0.2e1;
t643 = t621 * t644 + t653 - t655;
t364 = pkin(4) * t554;
t610 = t364 / 0.2e1;
t476 = t347 / 0.2e1 + t610;
t642 = t476 + t653;
t301 = t387 * t550 - t350;
t570 = t301 * qJ(6);
t599 = t298 * pkin(5);
t641 = -t570 / 0.2e1 + t599 / 0.2e1;
t435 = t296 * t298 + t299 * t301 - t390 * t392;
t639 = qJD(2) * t435;
t380 = t390 / 0.2e1;
t572 = t299 * t323;
t491 = t572 / 0.2e1;
t573 = t296 * t325;
t418 = t380 + t491 - t573 / 0.2e1;
t637 = qJD(3) * t418;
t636 = qJD(3) * t435;
t492 = t573 / 0.2e1;
t461 = -t572 / 0.2e1 + t492 + t380;
t634 = qJD(3) * t461;
t632 = qJD(5) * t418;
t453 = t257 * t325 - t323 * t644;
t631 = qJD(5) * t453;
t630 = t452 * qJD(5);
t629 = t461 * qJD(5);
t382 = t389 ^ 2;
t384 = t391 ^ 2;
t358 = t384 - t382;
t518 = t390 * qJD(1);
t504 = t391 * t518;
t628 = qJD(3) * t358 - 0.2e1 * t389 * t504;
t627 = -qJD(2) * t418 + qJD(3) * t453;
t510 = t389 * t347;
t246 = -t306 + t510;
t210 = -t246 - t508;
t565 = t386 * t210;
t108 = t560 + t565;
t625 = -t108 / 0.2e1;
t564 = t386 * t211;
t109 = t210 * t387 - t564;
t624 = t109 / 0.2e1;
t623 = t644 / 0.2e1;
t622 = -t257 / 0.2e1;
t619 = -t298 / 0.2e1;
t616 = t301 / 0.2e1;
t615 = -t323 / 0.2e1;
t614 = t323 / 0.2e1;
t613 = -t325 / 0.2e1;
t612 = t325 / 0.2e1;
t489 = t328 / 0.2e1;
t611 = -t350 / 0.2e1;
t365 = pkin(4) * t386 + qJ(6);
t609 = -t365 / 0.2e1;
t608 = t365 / 0.2e1;
t368 = -pkin(4) * t387 - pkin(5);
t607 = t368 / 0.2e1;
t606 = -t386 / 0.2e1;
t604 = -t387 / 0.2e1;
t602 = -t389 / 0.2e1;
t381 = -t390 / 0.2e1;
t600 = t392 / 0.2e1;
t598 = t299 * pkin(5);
t597 = t325 * pkin(5);
t596 = t389 * pkin(4);
t595 = t390 * pkin(3);
t594 = t390 * pkin(4);
t593 = t390 * pkin(5);
t592 = t392 * pkin(8);
t591 = pkin(4) * qJD(4);
t513 = pkin(4) * t553;
t574 = t296 * qJ(6);
t161 = t513 + t574 + t598;
t346 = t390 * t367;
t307 = pkin(4) * t555 + t346;
t150 = pkin(5) * t296 - qJ(6) * t299 + t307;
t582 = t150 * t299;
t41 = t108 * t392 + t161 * t296 + t582;
t590 = qJD(1) * t41;
t549 = t392 * qJ(6);
t100 = t106 - t549;
t105 = t187 * t387 - t564;
t101 = pkin(5) * t392 - t105;
t43 = -t100 * t296 + t101 * t299;
t589 = qJD(1) * t43;
t44 = -t105 * t299 - t106 * t296;
t588 = qJD(1) * t44;
t48 = t100 * t392 + t582;
t587 = qJD(1) * t48;
t585 = t108 * t257;
t584 = t109 * t644;
t481 = t624 + t101 / 0.2e1;
t483 = t100 / 0.2e1 + t625;
t12 = t161 * t601 - t296 * t483 + t299 * t481;
t583 = t12 * qJD(1);
t480 = t624 - t105 / 0.2e1;
t482 = t648 + t625;
t16 = -t296 * t482 + t299 * t480 + t486 * t594;
t581 = t16 * qJD(1);
t17 = (-t100 + t108) * t299 + (-t101 - t109) * t296;
t580 = t17 * qJD(1);
t348 = -t592 + t595;
t333 = t391 * t348;
t335 = t389 * t346;
t224 = -qJ(5) * t550 + t333 + t335 + t594;
t195 = t386 * t224;
t332 = t389 * t348;
t509 = t367 * t553;
t242 = -qJ(5) * t554 + t332 - t509;
t225 = t387 * t242;
t125 = t225 + t195;
t116 = t390 * qJ(6) + t125;
t559 = t387 * t224;
t563 = t386 * t242;
t124 = t559 - t563;
t117 = -t124 - t593;
t18 = -t100 * t298 + t101 * t301 - t116 * t296 + t117 * t299;
t579 = t18 * qJD(1);
t20 = -t105 * t301 - t106 * t298 - t124 * t299 - t125 * t296;
t578 = t20 * qJD(1);
t308 = t347 + t364;
t151 = t308 - t570 + t599;
t29 = -t100 * t390 + t116 * t392 + t150 * t301 + t151 * t299;
t575 = t29 * qJD(1);
t30 = -t101 * t390 + t117 * t392 + t150 * t298 + t151 * t296;
t571 = t30 * qJD(1);
t569 = t323 * qJ(6);
t568 = t365 * t296;
t566 = t368 * t299;
t562 = t386 * t296;
t558 = t387 * t299;
t383 = t390 ^ 2;
t551 = t391 * t383;
t227 = t569 + t596 + t597;
t548 = t392 * t227;
t42 = t109 * t392 - t150 * t296 + t161 * t299;
t547 = t42 * qJD(1);
t385 = t392 ^ 2;
t357 = t383 - t385;
t175 = -t246 * t392 - t383 * t567;
t545 = qJD(1) * t175;
t247 = t313 * t389 + t507;
t176 = -t247 * t392 - t367 * t551;
t544 = qJD(1) * t176;
t543 = qJD(1) * t299;
t542 = qJD(3) * t325;
t541 = qJD(3) * t389;
t540 = qJD(3) * t391;
t539 = qJD(4) * t323;
t538 = qJD(4) * t389;
t537 = qJD(4) * t391;
t536 = qJD(4) * t392;
t535 = qJD(5) * t299;
t534 = qJD(6) * t296;
t533 = qJD(6) * t392;
t120 = t246 * t390 + (-t335 + t333) * t392;
t532 = t120 * qJD(1);
t121 = t332 * t392 + (-t247 + t507) * t390;
t531 = t121 * qJD(1);
t488 = t556 / 0.2e1;
t216 = t611 + (t488 + t615) * t392;
t530 = t216 * qJD(1);
t529 = t217 * qJD(1);
t221 = (t612 - t561 / 0.2e1 - t557 / 0.2e1) * t392;
t527 = t221 * qJD(1);
t526 = t221 * qJD(3);
t524 = t296 * qJD(5);
t523 = t299 * qJD(6);
t522 = t325 * qJD(6);
t330 = t357 * t389;
t521 = t330 * qJD(1);
t331 = t385 * t391 - t551;
t520 = t331 * qJD(1);
t519 = t357 * qJD(1);
t517 = t390 * qJD(3);
t516 = t390 * qJD(4);
t514 = t392 * qJD(3);
t376 = t596 / 0.2e1;
t511 = t607 - pkin(5) / 0.2e1;
t375 = -pkin(4) * t391 - pkin(3);
t506 = t296 * t543;
t505 = t299 * t515;
t503 = t389 * t540;
t502 = t389 * t536;
t501 = t391 * t536;
t500 = t369 * t518;
t499 = t369 * t515;
t498 = t389 * t537;
t497 = t390 * t514;
t496 = t391 * t517;
t495 = t390 * t515;
t494 = -t584 / 0.2e1;
t487 = -t553 / 0.2e1;
t484 = qJ(6) / 0.2e1 + t608;
t479 = -t181 / 0.2e1 - t560 / 0.2e1;
t478 = t622 + t257 / 0.2e1;
t474 = t257 * t298 + t301 * t644;
t473 = t257 * t301 - t298 * t644;
t472 = qJD(3) * t216 - t278;
t353 = t513 / 0.2e1;
t362 = -qJD(4) + t515;
t470 = t389 * t496;
t465 = t560 / 0.2e1 + t565 / 0.2e1;
t397 = t296 * t478;
t427 = t298 * t609 + t301 * t607;
t7 = t323 * t481 + t325 * t483 + t397 + t427;
t464 = t7 * qJD(1);
t413 = (t298 * t606 + t301 * t604) * pkin(4);
t9 = t323 * t480 + t325 * t482 + t397 + t413;
t463 = t9 * qJD(1);
t11 = t100 * t616 + t101 * t618 + t116 * t617 + t117 * t621 + t150 * t380 + t151 * t601;
t13 = t100 * t116 + t101 * t117 + t150 * t151;
t459 = qJD(1) * t13 + qJD(2) * t11;
t14 = t100 * t109 + t101 * t108 + t150 * t161;
t458 = qJD(1) * t14 + qJD(2) * t12;
t15 = t105 * t619 + t106 * t616 + t124 * t620 + t125 * t617 + t307 * t380 + t308 * t601;
t28 = t105 * t124 + t106 * t125 + t307 * t308;
t457 = qJD(1) * t28 + qJD(2) * t15;
t25 = -t105 * t108 + t106 * t109 + t307 * t513;
t456 = t25 * qJD(1) + t16 * qJD(2);
t19 = (-t106 + t108) * t299 + (t105 - t109) * t296;
t455 = t19 * qJD(1);
t451 = (t298 * t325 - t301 * t323) * qJD(3);
t450 = qJD(1) * t11 + t639;
t449 = qJD(1) * t15 + t639;
t214 = t619 + t546;
t226 = pkin(5) * t323 - qJ(6) * t325 + t375;
t430 = t150 * t612 + t226 * t617;
t400 = t601 * t644 - t430;
t426 = t563 / 0.2e1 - t559 / 0.2e1;
t403 = -t593 / 0.2e1 + t426;
t39 = -t400 + t403;
t448 = t39 * qJD(1) + t214 * qJD(2);
t118 = t323 * t484 - t325 * t511 + t376;
t87 = t296 * t484 - t299 * t511 + t353;
t447 = qJD(1) * t87 + qJD(3) * t118;
t446 = t362 * t390;
t425 = -t562 / 0.2e1 - t558 / 0.2e1;
t156 = (t487 + t425) * pkin(4);
t424 = t323 * t606 + t325 * t604;
t186 = (t602 + t424) * pkin(4);
t441 = qJD(1) * t156 + qJD(3) * t186;
t440 = -qJD(1) * t296 - qJD(3) * t323;
t222 = t542 + t543;
t438 = t592 / 0.2e1 - t595 / 0.2e1;
t420 = t438 * t389;
t248 = t332 / 0.2e1 - t420;
t437 = pkin(3) * t540 - qJD(1) * t248;
t419 = t438 * t391;
t249 = -t333 / 0.2e1 + t419;
t436 = pkin(3) * t541 - qJD(1) * t249;
t434 = t100 * t615 + t101 * t612;
t433 = t105 * t613 + t106 * t615;
t432 = t116 * t608 + t117 * t607;
t431 = t124 * t603 + t125 * t605;
t429 = t492 + t491;
t428 = t298 * t607 + t301 * t608;
t423 = t391 * t446;
t137 = t381 + t429;
t422 = qJD(1) * t137 + t323 * t542;
t316 = (t382 / 0.2e1 - t384 / 0.2e1) * t390;
t421 = -qJD(1) * t316 + t503;
t417 = qJD(1) * t389 * t551 + qJD(3) * t316;
t329 = t358 * t383;
t416 = qJD(1) * t329 + 0.2e1 * t470;
t414 = (t298 * t604 + t301 * t605) * pkin(4);
t395 = t100 * t622 + t101 * t623 + t585 / 0.2e1 + t150 * t227 / 0.2e1 + t161 * t226 / 0.2e1;
t3 = t494 - t395 + t432;
t398 = t299 * t478;
t33 = t548 / 0.2e1 - t398 + t428;
t47 = t226 * t227;
t412 = -qJD(1) * t3 - qJD(2) * t33 + qJD(3) * t47;
t37 = t610 + t414 - t398;
t401 = t105 * t623 + t257 * t648 - t585 / 0.2e1;
t5 = t494 + (t307 * t602 + t375 * t487 + t431) * pkin(4) + t401;
t60 = t375 * t596;
t411 = -t5 * qJD(1) - t37 * qJD(2) + t60 * qJD(3);
t394 = t150 * t615 + t161 * t612 + t226 * t620 + t227 * t617 - t257 * t600;
t404 = t484 * t390 + t195 / 0.2e1 + t225 / 0.2e1;
t21 = t394 + t404;
t215 = t611 + (t488 + t614) * t392;
t92 = t226 * t323 - t227 * t325;
t410 = -qJD(1) * t21 - qJD(2) * t215 + qJD(3) * t92;
t393 = t161 * t614 + t227 * t621 + t600 * t644 + t430;
t23 = t390 * t511 + t393 + t426;
t91 = t226 * t325 + t227 * t323;
t409 = qJD(1) * t23 - qJD(2) * t221 + qJD(3) * t91;
t399 = t476 - t653;
t26 = t399 - t434 + t641;
t408 = -qJD(1) * t26 + t627;
t31 = t399 - t433;
t407 = -qJD(1) * t31 + t627;
t252 = t489 - t328 / 0.2e1;
t45 = t392 * t484 + t465 + t479;
t406 = qJD(1) * t45 - qJD(3) * t252 - qJD(4) * t365;
t269 = t385 + t295;
t402 = qJD(1) * t269 + t299 * t542 - t536;
t396 = t108 * t612 + t109 * t615 + (t617 - t299 / 0.2e1) * t644;
t370 = t517 / 0.2e1;
t361 = t389 * t517;
t322 = (t515 - qJD(4) / 0.2e1) * t390;
t311 = t316 * qJD(4);
t239 = t299 * t522;
t218 = t485 - t439;
t194 = t335 + t333 / 0.2e1 + t419;
t193 = t509 - t332 / 0.2e1 - t420;
t190 = 0.2e1 * t489 + t467;
t185 = pkin(4) * t424 + t376;
t160 = qJD(3) * t319 + t325 * t543;
t155 = pkin(4) * t425 + t353;
t140 = t381 - t429;
t119 = t323 * t609 + t325 * t607 + t376 + t569 / 0.2e1 + t597 / 0.2e1;
t88 = -t568 / 0.2e1 + t566 / 0.2e1 + t353 + t574 / 0.2e1 + t598 / 0.2e1;
t71 = t584 / 0.2e1;
t46 = t365 * t601 - t549 / 0.2e1 + t465 - t479;
t40 = t400 + t403;
t38 = -t364 / 0.2e1 + t414 + t643;
t34 = -t548 / 0.2e1 + t428 + t643;
t32 = t433 + t642;
t27 = t434 + t641 + t642;
t24 = t368 * t381 + t393 - t403;
t22 = -t394 + t404;
t10 = t105 * t614 + t106 * t613 + t396 + t413;
t8 = t100 * t613 + t101 * t615 + t396 + t427;
t6 = pkin(4) * t431 + t307 * t376 + t353 * t375 - t401 + t71;
t4 = t71 + t395 + t432;
t2 = qJD(3) * t15 + qJD(4) * t16;
t1 = qJD(3) * t11 + qJD(4) * t12;
t35 = [0, 0, 0, 0, t497, -t357 * qJD(3), 0, 0, 0, t369 * t517, t369 * t514, -t383 * t498 + t384 * t497, -qJD(4) * t329 - 0.2e1 * t392 * t470, -qJD(3) * t331 + t390 * t502, -qJD(3) * t330 + t390 * t501, -t497, -qJD(3) * t120 - qJD(4) * t176, qJD(3) * t121 + qJD(4) * t175, qJD(3) * t20 + qJD(4) * t19 + t651, qJD(3) * t28 + qJD(4) * t25 + qJD(5) * t44, t30 * qJD(3) + t41 * qJD(4) + (qJD(5) * t392 - t534) * t299, qJD(3) * t18 + qJD(4) * t17 + t296 * t533 + t651, -qJD(3) * t29 - qJD(4) * t42 + qJD(6) * t269 + t392 * t524, qJD(3) * t13 + qJD(4) * t14 + qJD(5) * t43 - qJD(6) * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, 0, 0, 0, t1; 0, 0, 0, 0, t495, -t519, t514, -t517, 0, -t367 * t514 + t500, t367 * t517 + t499, -t311 + (t384 * t518 + t503) * t392, -0.2e1 * t390 * t498 + t392 * t628, t361 - t520, t496 - t521, -t322, -t532 + (t389 * t466 - t507) * qJD(3) + t194 * qJD(4), t531 + (t391 * t466 + t510) * qJD(3) + t193 * qJD(4), t578 + (-t124 * t325 - t125 * t323 + t473) * qJD(3) + t10 * qJD(4) + t630 (-t124 * t257 + t125 * t644 + t308 * t375) * qJD(3) + t6 * qJD(4) + t32 * qJD(5) + t457, t571 + (t151 * t323 + t226 * t298 - t257 * t390) * qJD(3) + t24 * qJD(4) + t460 * qJD(5) + t140 * qJD(6), t579 + (-t116 * t323 + t117 * t325 + t473) * qJD(3) + t8 * qJD(4) + t630 - t217 * qJD(6), -t575 + (-t151 * t325 - t226 * t301 + t390 * t644) * qJD(3) + t22 * qJD(4) - t216 * qJD(5) + t239 (t116 * t644 + t117 * t257 + t151 * t226) * qJD(3) + t4 * qJD(4) + t27 * qJD(5) + t40 * qJD(6) + t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t417, -t416, t389 * t446, t423, t370, qJD(3) * t194 - qJD(4) * t247 - t544, qJD(3) * t193 + qJD(4) * t246 + t545, t10 * qJD(3) + (t296 * t387 - t299 * t386) * t591 + t455, t6 * qJD(3) + t155 * qJD(5) + (-t108 * t387 + t109 * t386) * t591 + t456, qJD(3) * t24 - qJD(4) * t108 + t590, t580 + t8 * qJD(3) + (-t296 * t368 - t299 * t365) * qJD(4) - t534, qJD(3) * t22 + qJD(4) * t109 - t533 - t547, t4 * qJD(3) + (t108 * t368 + t109 * t365) * qJD(4) + t88 * qJD(5) + t46 * qJD(6) + t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t650, qJD(3) * t32 + qJD(4) * t155 + t588, t505 + t528, t650, -t472, qJD(3) * t27 + qJD(4) * t88 + t589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t140 - t506, t654, t402, qJD(3) * t40 + qJD(4) * t46 - t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t636, 0, 0, 0, t636; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t517, -t514, 0, 0, 0, 0, 0, -t496 - t502, t361 - t501, t451 (t375 * t390 + t474) * qJD(3) + t38 * qJD(4) + t629 + t449, -qJD(4) * t460 + t323 * t517, t451, qJD(4) * t218 - t325 * t517 (t226 * t390 + t474) * qJD(3) + t34 * qJD(4) + t629 + t460 * qJD(6) + t450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389 * t514 - t391 * t516, t389 * t516 - t391 * t514, 0, t581 + t38 * qJD(3) + (-t558 - t562) * t591, t647, 0, qJD(3) * t218 - t525, t583 + t34 * qJD(3) + (t566 - t568) * qJD(4) + t523; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t634, 0, 0, 0, t634; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t647; 0, 0, 0, 0, -t495, t519, 0, 0, 0, -t500, -t499, -t384 * t495 - t311, 0.2e1 * t389 * t423, -t501 + t520, t502 + t521, t322, qJD(4) * t249 + t532, qJD(4) * t248 - t531, -qJD(4) * t9 - t578 + t630, -qJD(4) * t5 - qJD(5) * t31 - t457, qJD(4) * t23 + qJD(5) * t221 - qJD(6) * t137 - t571, -qJD(4) * t7 - qJD(6) * t216 - t579 + t630, -qJD(4) * t21 - qJD(5) * t217 + t239 + t575, -qJD(4) * t3 - qJD(5) * t26 - qJD(6) * t39 - t459; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t37 - t449 - t632, -t221 * qJD(4), 0, -qJD(4) * t215, -qJD(4) * t33 - qJD(6) * t214 - t450 - t632; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t498, t358 * qJD(4), 0, 0, 0, -pkin(3) * t538, -pkin(3) * t537, t652, qJD(4) * t60 + t631, qJD(4) * t91 - t323 * t522, t652, qJD(4) * t92 + qJD(6) * t319, qJD(4) * t47 - t226 * t522 + t631; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t421, t628, -t362 * t391, t362 * t389, -t518 / 0.2e1, -pkin(8) * t537 - t436, pkin(8) * t538 - t437 (t323 * t387 - t325 * t386) * t591 - t463, t185 * qJD(5) + (-t257 * t386 - t387 * t644) * t591 + t411, -qJD(4) * t644 + t409 (-t323 * t368 - t325 * t365) * qJD(4) - qJD(6) * t323 - t464, -qJD(4) * t257 + t410 (-t257 * t365 + t368 * t644) * qJD(4) + t119 * qJD(5) + t190 * qJD(6) + t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t649, qJD(4) * t185 + t407, t527, t649, -t529, qJD(4) * t119 + t408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t422, -t530 - t539, t160, qJD(4) * t190 - t226 * t542 - t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, t416 (-t389 * t518 + t540) * t392 (-t504 - t541) * t392, t370, -qJD(3) * t249 + t544, -qJD(3) * t248 - t545, qJD(3) * t9 - t455, qJD(3) * t5 + qJD(5) * t156 - t456, -qJD(3) * t23 - t535 - t590, qJD(3) * t7 - t580, qJD(3) * t21 - t524 - t533 + t547, qJD(3) * t3 - qJD(5) * t87 - qJD(6) * t45 - t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t37 - t581, t526, 0, qJD(3) * t215, qJD(3) * t33 - t583; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t421, -t628, t391 * t515, -t389 * t515, t518 / 0.2e1, t436, t437, t463, qJD(5) * t186 - t411, -qJD(5) * t325 - t409, t464, -qJD(5) * t323 - t410, -qJD(5) * t118 + qJD(6) * t252 - t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), t365 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441, -t222, 0, t440, -t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t362, -t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t650, qJD(3) * t31 - qJD(4) * t156 - t588, t292 - t505 - t526, -t650, -t654, qJD(3) * t26 + qJD(4) * t87 - t523 - t589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t637, 0, 0, 0, t637; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t649, -qJD(4) * t186 - t407, qJD(4) * t325 - t527, -t649, t529 + t539, qJD(4) * t118 - t408 - t522; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t441, t222, 0, -t440, t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t137 + t506, t472, -t402, qJD(3) * t39 + qJD(4) * t45 + t535 + t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422, t530, -t160, -t252 * qJD(4) + (qJD(3) * t226 + qJD(5)) * t325 + t448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t362, t406; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t35;
