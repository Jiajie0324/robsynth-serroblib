% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRRP3_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP3_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP3_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP3_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP3_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP3_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:11:15
% EndTime: 2019-03-09 00:11:34
% DurationCPUTime: 10.55s
% Computational Cost: add. (11112->698), mult. (25662->910), div. (0->0), fcn. (19735->14), ass. (0->319)
t285 = sin(qJ(3));
t288 = cos(qJ(3));
t331 = pkin(3) * t285 - pkin(9) * t288;
t222 = t331 * qJD(3);
t332 = pkin(3) * t288 + pkin(9) * t285;
t228 = -pkin(2) - t332;
t284 = sin(qJ(4));
t287 = cos(qJ(4));
t382 = qJD(4) * t287;
t384 = qJD(4) * t284;
t386 = qJD(3) * t287;
t281 = sin(pkin(6));
t394 = qJD(1) * t281;
t289 = cos(qJ(2));
t404 = t288 * t289;
t286 = sin(qJ(2));
t408 = t284 * t286;
t402 = t284 * t222 + t228 * t382 + (-t285 * t386 - t288 * t384) * pkin(8) - (t287 * t404 + t408) * t394;
t387 = qJD(3) * t285;
t454 = pkin(8) * t284;
t493 = t287 * t222 + t387 * t454 - (-t284 * t404 + t286 * t287) * t394;
t405 = t287 * t288;
t262 = pkin(8) * t405;
t323 = pkin(4) * t285 - pkin(10) * t405;
t492 = t323 * qJD(3) + (-t262 + (pkin(10) * t285 - t228) * t284) * qJD(4) + t493;
t385 = qJD(3) * t288;
t361 = t284 * t385;
t480 = t285 * t382 + t361;
t491 = pkin(10) * t480 - t402;
t224 = qJD(2) * pkin(8) + t286 * t394;
t205 = t285 * t224;
t282 = cos(pkin(6));
t393 = qJD(1) * t282;
t168 = t288 * t393 - t205;
t219 = t331 * qJD(2);
t114 = -t168 * t284 + t287 * t219;
t290 = -pkin(10) - pkin(9);
t367 = qJD(4) * t290;
t490 = -qJD(2) * t323 + t287 * t367 - t114;
t115 = t287 * t168 + t284 * t219;
t389 = qJD(2) * t288;
t362 = t284 * t389;
t489 = -pkin(10) * t362 - t284 * t367 + t115;
t391 = qJD(2) * t285;
t211 = -t284 * t391 + t386;
t388 = qJD(3) * t284;
t212 = t287 * t391 + t388;
t283 = sin(qJ(5));
t460 = cos(qJ(5));
t132 = -t460 * t211 + t212 * t283;
t130 = t132 ^ 2;
t318 = t283 * t211 + t212 * t460;
t463 = t318 ^ 2;
t488 = -t130 + t463;
t381 = qJD(5) * t283;
t487 = pkin(4) * t381;
t486 = pkin(4) * t460;
t260 = -qJD(4) + t389;
t246 = -qJD(5) + t260;
t423 = t132 * t246;
t383 = qJD(4) * t285;
t349 = qJD(2) * t383;
t377 = qJD(2) * qJD(3);
t351 = t288 * t377;
t374 = t285 * qJDD(2);
t478 = qJD(3) * qJD(4) + t351 + t374;
t124 = (-qJDD(3) + t349) * t284 - t478 * t287;
t337 = t284 * t478 + t287 * t349;
t310 = t287 * qJDD(3) - t337;
t355 = t460 * qJD(5);
t49 = t460 * t124 - t211 * t355 + t212 * t381 - t283 * t310;
t485 = -t49 - t423;
t484 = t132 * qJ(6);
t483 = t132 * t318;
t366 = t460 * t287;
t410 = t283 * t284;
t469 = qJD(4) + qJD(5);
t470 = t460 * qJD(4) + t355;
t399 = -t283 * t362 - t287 * t470 + t366 * t389 + t410 * t469;
t214 = t283 * t287 + t284 * t460;
t145 = t469 * t214;
t398 = -t214 * t389 + t145;
t378 = qJD(1) * qJD(2);
t353 = t289 * t378;
t427 = qJDD(2) * pkin(8);
t482 = t427 + (qJDD(1) * t286 + t353) * t281 + qJD(3) * t393;
t420 = t318 * t246;
t50 = qJD(5) * t318 - t283 * t124 - t460 * t310;
t481 = -t50 - t420;
t354 = t286 * t378;
t411 = t281 * t289;
t328 = -qJDD(1) * t411 + t281 * t354;
t109 = qJD(2) * t222 + qJDD(2) * t228 + t328;
t392 = qJD(1) * t285;
t169 = t224 * t288 + t282 * t392;
t158 = qJD(3) * pkin(9) + t169;
t365 = t289 * t394;
t171 = qJD(2) * t228 - t365;
t375 = qJDD(1) * t282;
t369 = -t285 * t375 - t288 * t482;
t90 = -t224 * t387 - t369;
t82 = qJDD(3) * pkin(9) + t90;
t315 = -t284 * t109 + t158 * t384 - t171 * t382 - t287 * t82;
t97 = -t158 * t284 + t287 * t171;
t479 = t97 * t260 - t315;
t429 = sin(pkin(11));
t342 = t429 * t289;
t430 = cos(pkin(11));
t345 = t430 * t286;
t188 = t282 * t345 + t342;
t347 = t281 * t430;
t146 = t188 * t285 + t288 * t347;
t343 = t429 * t286;
t344 = t430 * t289;
t190 = -t282 * t343 + t344;
t346 = t281 * t429;
t148 = t190 * t285 - t288 * t346;
t412 = t281 * t286;
t194 = -t282 * t288 + t285 * t412;
t312 = g(1) * t148 + g(2) * t146 + g(3) * t194;
t157 = -qJD(3) * pkin(3) - t168;
t116 = -pkin(4) * t211 + t157;
t147 = t188 * t288 - t285 * t347;
t149 = t190 * t288 + t285 * t346;
t187 = -t282 * t344 + t343;
t189 = t282 * t342 + t345;
t195 = t282 * t285 + t288 * t412;
t280 = qJ(4) + qJ(5);
t273 = sin(t280);
t274 = cos(t280);
t272 = t288 * qJDD(2);
t208 = t285 * t377 + qJDD(4) - t272;
t98 = t158 * t287 + t171 * t284;
t34 = -t98 * qJD(4) + t287 * t109 - t284 * t82;
t20 = pkin(4) * t208 + pkin(10) * t124 + t34;
t25 = pkin(10) * t310 - t315;
t72 = -pkin(10) * t212 + t97;
t62 = -pkin(4) * t260 + t72;
t73 = pkin(10) * t211 + t98;
t4 = t283 * t20 + t460 * t25 + t62 * t355 - t73 * t381;
t301 = -g(1) * (-t149 * t274 - t189 * t273) - g(2) * (-t147 * t274 - t187 * t273) - g(3) * (-t195 * t274 + t273 * t411) - t4;
t477 = t116 * t132 + t301;
t476 = g(3) * t281;
t210 = t287 * t228;
t406 = t285 * t287;
t139 = -pkin(10) * t406 + t210 + (-pkin(4) - t454) * t288;
t176 = t284 * t228 + t262;
t409 = t284 * t285;
t154 = -pkin(10) * t409 + t176;
t76 = t283 * t139 + t460 * t154;
t444 = -qJD(5) * t76 + t491 * t283 + t492 * t460;
t237 = t290 * t284;
t238 = t290 * t287;
t440 = t237 * t355 + t238 * t381 + t490 * t283 - t489 * t460;
t161 = t283 * t237 - t460 * t238;
t439 = -qJD(5) * t161 + t489 * t283 + t490 * t460;
t431 = t139 * t355 - t154 * t381 + t492 * t283 - t491 * t460;
t475 = t98 * t260 - t34;
t474 = qJ(6) * t318;
t333 = -t169 + (-t362 + t384) * pkin(4);
t203 = qJDD(5) + t208;
t339 = pkin(4) * t355;
t457 = pkin(4) * t283;
t472 = -t203 * t457 + t246 * t339;
t152 = -t195 * t284 - t287 * t411;
t471 = -g(1) * (-t149 * t284 + t189 * t287) - g(2) * (-t147 * t284 + t187 * t287) - g(3) * t152;
t186 = t203 * pkin(5);
t436 = t49 * qJ(6);
t468 = -t318 * qJD(6) + t186 + t436;
t467 = -g(3) * (-t195 * t273 - t274 * t411) - g(2) * (-t147 * t273 + t187 * t274) - g(1) * (-t149 * t273 + t189 * t274);
t348 = t460 * t20 - t283 * t25;
t69 = t460 * t73;
t40 = t283 * t62 + t69;
t5 = -qJD(5) * t40 + t348;
t293 = t5 + t467;
t466 = -t116 * t318 + t293;
t428 = qJDD(2) * pkin(2);
t173 = t328 - t428;
t291 = qJD(3) ^ 2;
t330 = g(1) * t189 + g(2) * t187;
t465 = -pkin(8) * t291 + t281 * (-g(3) * t289 + t354) - t173 + t330 + t428;
t341 = -pkin(5) * t132 - qJD(6);
t63 = t116 - t341;
t464 = -t63 * t318 + t467;
t458 = pkin(4) * t212;
t456 = pkin(4) * t284;
t455 = pkin(4) * t287;
t447 = g(3) * t286;
t226 = pkin(5) * t273 + t456;
t446 = pkin(8) + t226;
t372 = t283 * t409;
t182 = t285 * t366 - t372;
t335 = t460 * t385;
t84 = t145 * t285 + t283 * t361 - t287 * t335;
t445 = pkin(5) * t387 + t84 * qJ(6) - t182 * qJD(6) + t444;
t67 = t283 * t73;
t39 = t460 * t62 - t67;
t29 = t39 - t474;
t28 = -pkin(5) * t246 + t29;
t443 = -t29 + t28;
t213 = -t366 + t410;
t442 = -qJ(6) * t398 - qJD(6) * t213 + t440;
t441 = -pkin(5) * t391 + qJ(6) * t399 - t214 * qJD(6) + t439;
t42 = t460 * t72 - t67;
t438 = qJ(6) * t50;
t437 = qJD(2) * pkin(2);
t181 = t214 * t285;
t360 = t284 * t383;
t85 = t284 * t335 - t283 * t360 - qJD(5) * t372 + (t283 * t385 + t285 * t470) * t287;
t433 = -qJ(6) * t85 - qJD(6) * t181 + t431;
t432 = -t132 * t339 - t50 * t457;
t426 = qJDD(3) * pkin(3);
t425 = t124 * t284;
t419 = t211 * t260;
t418 = t211 * t284;
t417 = t212 * t211;
t416 = t212 * t260;
t415 = t212 * t287;
t414 = t273 * t288;
t413 = t274 * t288;
t407 = t284 * t288;
t403 = qJDD(1) - g(3);
t401 = -qJD(4) * t176 + t493;
t400 = pkin(5) * t398 + t333;
t223 = pkin(4) * t409 + t285 * pkin(8);
t278 = t285 ^ 2;
t279 = t288 ^ 2;
t396 = t278 - t279;
t395 = t278 + t279;
t390 = qJD(2) * t286;
t380 = qJD(6) * t132;
t292 = qJD(2) ^ 2;
t371 = t285 * t292 * t288;
t370 = t312 * t273;
t170 = pkin(4) * t480 + pkin(8) * t385;
t269 = pkin(3) + t455;
t368 = pkin(8) + t456;
t364 = t281 * t390;
t363 = qJD(2) * t411;
t358 = t246 * t391;
t357 = g(3) * (pkin(2) * t411 + pkin(8) * t412);
t350 = t289 * t377;
t227 = pkin(5) * t274 + t455;
t41 = -t283 * t72 - t69;
t75 = t460 * t139 - t154 * t283;
t160 = t460 * t237 + t238 * t283;
t338 = t224 * t385 + t285 * t482 - t288 * t375;
t336 = t285 * t365;
t334 = t285 * t351;
t329 = g(1) * t190 + g(2) * t188;
t327 = -t284 * t98 - t287 * t97;
t218 = pkin(3) + t227;
t276 = -qJ(6) + t290;
t326 = t218 * t288 - t276 * t285;
t325 = t269 * t288 - t285 * t290;
t324 = qJDD(2) * t289 - t286 * t292;
t59 = pkin(5) * t85 + t170;
t322 = t59 - t336;
t321 = t170 - t336;
t319 = -t195 * t287 + t284 * t411;
t78 = t152 * t460 + t283 * t319;
t79 = t283 * t152 - t319 * t460;
t317 = t208 * t284 - t260 * t382;
t316 = t208 * t287 + t260 * t384;
t83 = t338 - t426;
t314 = -g(1) * (t189 * t414 + t190 * t274) - g(2) * (t187 * t414 + t188 * t274) - (-t273 * t404 + t274 * t286) * t476;
t313 = -g(1) * (-t189 * t413 + t190 * t273) - g(2) * (-t187 * t413 + t188 * t273) - (t273 * t286 + t274 * t404) * t476;
t311 = g(1) * t149 + g(2) * t147 + g(3) * t195;
t308 = t312 - t83;
t307 = g(3) * t411 - t330;
t306 = -g(3) * t412 - t329;
t305 = -pkin(9) * t208 - t157 * t260;
t304 = t312 * t274;
t303 = t310 * t287;
t302 = t307 * t285;
t299 = -pkin(9) * qJD(4) * t260 - t308;
t225 = -t365 - t437;
t298 = -pkin(8) * qJDD(3) + (t225 + t365 - t437) * qJD(3);
t296 = t301 + t438;
t56 = -pkin(4) * t310 + t83;
t294 = t338 * t285 + t90 * t288 + (-t168 * t288 - t169 * t285) * qJD(3) - t329;
t23 = t50 * pkin(5) + qJDD(6) + t56;
t268 = pkin(5) + t486;
t184 = t189 * pkin(2);
t183 = t187 * pkin(2);
t179 = pkin(5) * t213 - t269;
t175 = -pkin(8) * t407 + t210;
t151 = qJD(3) * t195 + t285 * t363;
t150 = -qJD(3) * t194 + t288 * t363;
t142 = pkin(5) * t181 + t223;
t140 = -t203 * t288 - t246 * t387;
t118 = -qJ(6) * t213 + t161;
t117 = -qJ(6) * t214 + t160;
t106 = pkin(5) * t318 + t458;
t66 = qJD(4) * t152 + t150 * t287 + t284 * t364;
t65 = qJD(4) * t319 - t150 * t284 + t287 * t364;
t58 = -qJ(6) * t181 + t76;
t57 = -pkin(5) * t288 - qJ(6) * t182 + t75;
t46 = t132 * t391 - t203 * t213 + t246 * t398;
t45 = t203 * t214 + t246 * t399 - t318 * t391;
t32 = t42 - t474;
t31 = t41 + t484;
t30 = t40 - t484;
t22 = -qJD(5) * t79 - t283 * t66 + t460 * t65;
t21 = qJD(5) * t78 + t283 * t65 + t460 * t66;
t19 = t132 * t85 + t181 * t50;
t18 = -t182 * t49 - t318 * t84;
t15 = t132 * t398 + t213 * t50;
t14 = -t214 * t49 - t318 * t399;
t13 = -t132 * t387 - t181 * t203 + t246 * t85 + t288 * t50;
t12 = t182 * t203 + t246 * t84 + t288 * t49 + t318 * t387;
t9 = t132 * t84 + t181 * t49 - t182 * t50 - t318 * t85;
t8 = t132 * t399 + t213 * t49 - t214 * t50 - t318 * t398;
t7 = t132 * t151 + t194 * t50 + t203 * t78 - t22 * t246;
t6 = t151 * t318 - t194 * t49 - t203 * t79 + t21 * t246;
t3 = -t380 + t4 - t438;
t2 = t5 + t468;
t1 = -t132 * t21 - t22 * t318 + t49 * t78 - t50 * t79;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t403, 0, 0, 0, 0, 0, 0, t324 * t281 (-qJDD(2) * t286 - t289 * t292) * t281, 0, -g(3) + (t282 ^ 2 + (t286 ^ 2 + t289 ^ 2) * t281 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, -qJD(3) * t151 - qJDD(3) * t194 + (-t285 * t350 + t288 * t324) * t281, -qJD(3) * t150 - qJDD(3) * t195 + (-t285 * t324 - t288 * t350) * t281 (t194 * t285 + t195 * t288) * qJDD(2) + (t150 * t288 + t151 * t285 + (t194 * t288 - t195 * t285) * qJD(3)) * qJD(2), t150 * t169 - t151 * t168 + t194 * t338 + t195 * t90 - g(3) + (-t173 * t289 + t225 * t390) * t281, 0, 0, 0, 0, 0, 0, -t151 * t211 + t152 * t208 - t194 * t310 - t65 * t260, -t124 * t194 + t151 * t212 + t208 * t319 + t260 * t66, t152 * t124 + t66 * t211 - t65 * t212 - t310 * t319, t151 * t157 + t152 * t34 + t194 * t83 + t315 * t319 + t65 * t97 + t66 * t98 - g(3), 0, 0, 0, 0, 0, 0, t7, t6, t1, t116 * t151 + t194 * t56 + t21 * t40 + t22 * t39 + t4 * t79 + t5 * t78 - g(3), 0, 0, 0, 0, 0, 0, t7, t6, t1, t151 * t63 + t194 * t23 + t2 * t78 + t21 * t30 + t22 * t28 + t3 * t79 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t403 * t411 + t330, -t403 * t412 + t329, 0, 0, qJDD(2) * t278 + 0.2e1 * t334, 0.2e1 * t272 * t285 - 0.2e1 * t377 * t396, qJDD(3) * t285 + t288 * t291, qJDD(2) * t279 - 0.2e1 * t334, qJDD(3) * t288 - t285 * t291, 0, t298 * t285 + t288 * t465, -t285 * t465 + t298 * t288, t395 * t427 + (-t353 * t395 - t447) * t281 + t294, -t173 * pkin(2) + g(1) * t184 + g(2) * t183 - t357 + (-t225 * t286 + (t168 * t285 - t169 * t288) * t289) * t394 + t294 * pkin(8), -t124 * t406 + (t287 * t385 - t360) * t212 (t211 * t287 - t212 * t284) * t385 + (t303 + t425 + (-t415 - t418) * qJD(4)) * t285 (-t260 * t386 + t124) * t288 + (qJD(3) * t212 + t316) * t285, -t211 * t480 - t310 * t409 (t260 * t388 - t310) * t288 + (qJD(3) * t211 - t317) * t285, -t208 * t288 - t260 * t387, t175 * t208 - t401 * t260 + t306 * t284 + (-t34 + (-pkin(8) * t211 + t157 * t284) * qJD(3) - t307 * t287) * t288 + (-pkin(8) * t310 + t97 * qJD(3) + t157 * t382 + t211 * t365 + t83 * t284) * t285, -t176 * t208 + t402 * t260 + t306 * t287 + (-t315 + (pkin(8) * t212 + t157 * t287) * qJD(3) + t307 * t284) * t288 + (-pkin(8) * t124 - qJD(3) * t98 - t157 * t384 - t212 * t365 + t83 * t287) * t285, t176 * t310 + t175 * t124 - t401 * t212 + t402 * t211 + t327 * t385 + (t315 * t284 - t34 * t287 + (t284 * t97 - t287 * t98) * qJD(4) - t307) * t285, -t315 * t176 + t34 * t175 - g(1) * (-t189 * t332 - t184) - g(2) * (-t187 * t332 - t183) - t357 + t402 * t98 + t401 * t97 + (-g(3) * t332 - t157 * t392) * t411 + (t157 * t385 + t285 * t83 - t329) * pkin(8), t18, t9, t12, t19, t13, t140, t116 * t85 + t132 * t321 + t181 * t56 + t203 * t75 + t223 * t50 - t246 * t444 - t288 * t5 + t387 * t39 + t313, -t116 * t84 + t182 * t56 - t203 * t76 - t223 * t49 + t246 * t431 + t288 * t4 + t318 * t321 - t387 * t40 + t314, -t132 * t431 - t181 * t4 - t182 * t5 - t318 * t444 + t39 * t84 - t40 * t85 + t49 * t75 - t50 * t76 - t302, t4 * t76 + t5 * t75 + t56 * t223 + t116 * t170 - g(1) * (-t189 * t325 + t190 * t368 - t184) - g(2) * (-t187 * t325 + t188 * t368 - t183) - t357 + t431 * t40 + t444 * t39 + (-g(3) * pkin(4) * t408 + (-g(3) * t325 - t116 * t392) * t289) * t281, t18, t9, t12, t19, t13, t140, t132 * t322 + t142 * t50 + t181 * t23 - t2 * t288 + t203 * t57 - t246 * t445 + t28 * t387 + t63 * t85 + t313, -t142 * t49 + t182 * t23 - t203 * t58 + t246 * t433 + t288 * t3 - t30 * t387 + t318 * t322 - t63 * t84 + t314, -t132 * t433 - t181 * t3 - t182 * t2 + t28 * t84 - t30 * t85 - t318 * t445 + t49 * t57 - t50 * t58 - t302, t3 * t58 + t2 * t57 + t23 * t142 + t63 * t59 - g(1) * (-t189 * t326 + t190 * t446 - t184) - g(2) * (-t187 * t326 + t188 * t446 - t183) - t357 + t433 * t30 + t445 * t28 + (-t226 * t447 + (-g(3) * t326 - t392 * t63) * t289) * t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t371, t396 * t292, t374, t371, t272, qJDD(3), qJD(3) * t169 - t225 * t391 + t312 - t338, -t225 * t389 + (t168 + t205) * qJD(3) + t311 + t369, 0, 0, -t260 * t415 - t425 (-t124 - t419) * t287 + (t310 + t416) * t284 (-t212 * t285 + t260 * t405) * qJD(2) + t317, t260 * t418 + t303 (-t211 * t285 - t260 * t407) * qJD(2) + t316, t260 * t391, -pkin(3) * t337 + t114 * t260 - t97 * t391 + t169 * t211 + t305 * t284 + (-t299 + t426) * t287, pkin(3) * t124 - t115 * t260 - t169 * t212 + t284 * t299 + t287 * t305 + t391 * t98, t114 * t212 - t115 * t211 + ((qJD(4) * t212 + t310) * pkin(9) + t479) * t287 + ((-qJD(4) * t211 - t124) * pkin(9) + t475) * t284 - t311, -t97 * t114 - t98 * t115 - t157 * t169 + t308 * pkin(3) + (qJD(4) * t327 - t34 * t284 - t287 * t315 - t311) * pkin(9), t14, t8, t45, t15, t46, t358, t116 * t398 + t132 * t333 + t160 * t203 + t213 * t56 - t246 * t439 - t269 * t50 - t39 * t391 + t304, -t116 * t399 - t161 * t203 + t214 * t56 + t246 * t440 + t269 * t49 + t318 * t333 + t391 * t40 - t370, -t132 * t440 + t160 * t49 - t161 * t50 - t213 * t4 - t214 * t5 - t318 * t439 + t39 * t399 - t398 * t40 - t311, t4 * t161 + t5 * t160 - t56 * t269 - g(1) * (-t148 * t269 - t149 * t290) - g(2) * (-t146 * t269 - t147 * t290) - g(3) * (-t194 * t269 - t195 * t290) + t440 * t40 + t439 * t39 + t333 * t116, t14, t8, t45, t15, t46, t358, t117 * t203 + t132 * t400 + t179 * t50 + t213 * t23 - t246 * t441 - t28 * t391 + t398 * t63 + t304, -t118 * t203 - t179 * t49 + t214 * t23 + t246 * t442 + t30 * t391 + t318 * t400 - t399 * t63 - t370, t117 * t49 - t118 * t50 - t132 * t442 - t2 * t214 - t213 * t3 + t28 * t399 - t30 * t398 - t318 * t441 - t311, t3 * t118 + t2 * t117 + t23 * t179 - g(1) * (-t148 * t218 - t149 * t276) - g(2) * (-t146 * t218 - t147 * t276) - g(3) * (-t194 * t218 - t195 * t276) + t400 * t63 + t442 * t30 + t441 * t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t417, -t211 ^ 2 + t212 ^ 2, -t124 + t419, t417, t310 - t416, t208, -t157 * t212 + t471 - t475, -t157 * t211 - g(1) * (-t149 * t287 - t189 * t284) - g(2) * (-t147 * t287 - t187 * t284) - g(3) * t319 - t479, 0, 0, t483, t488, t485, -t483, t481, t203, t41 * t246 + (-t132 * t212 + t203 * t460 + t246 * t381) * pkin(4) + t466, -t246 * t42 - t318 * t458 + t472 + t477, t49 * t486 + t432 + (t40 + t41 + t487) * t318 + (t42 - t39) * t132, -t39 * t41 - t40 * t42 + (t4 * t283 + t5 * t460 - t116 * t212 + (-t39 * t283 + t40 * t460) * qJD(5) + t471) * pkin(4), t483, t488, t485, -t483, t481, t203, -t106 * t132 + t268 * t203 + t31 * t246 + (-t69 + (pkin(4) * t246 - t62) * t283) * qJD(5) + t348 + t464 + t468, -t106 * t318 + t132 * t63 - t246 * t32 + t296 + t380 + t472, t268 * t49 + t432 + (t30 + t31 + t487) * t318 + (t32 - t28) * t132, t2 * t268 - t30 * t32 - t28 * t31 - t63 * t106 - g(1) * (-t149 * t226 + t189 * t227) - g(2) * (-t147 * t226 + t187 * t227) - g(3) * (-t195 * t226 - t227 * t411) + (t3 * t283 + (-t28 * t283 + t30 * t460) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t483, t488, t485, -t483, t481, t203, -t40 * t246 + t466, -t246 * t39 + t477, 0, 0, t483, t488, t485, -t483, t481, t203, t436 - t30 * t246 + 0.2e1 * t186 + (t341 - t63) * t318 + t293, -pkin(5) * t463 - t246 * t29 + (qJD(6) + t63) * t132 + t296, pkin(5) * t49 - t132 * t443, t443 * t30 + (t2 + t464) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50 - t420, -t49 + t423, -t130 - t463, t30 * t132 + t28 * t318 + t23 - t312;];
tau_reg  = t10;
