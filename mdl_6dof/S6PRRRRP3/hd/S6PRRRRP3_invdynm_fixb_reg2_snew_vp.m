% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRRRRP3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 09:49
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRRRRP3_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP3_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP3_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP3_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP3_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP3_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 09:48:34
% EndTime: 2019-05-05 09:49:11
% DurationCPUTime: 39.27s
% Computational Cost: add. (307927->955), mult. (605741->1336), div. (0->0), fcn. (447575->12), ass. (0->673)
t1628 = sin(qJ(4));
t1632 = cos(qJ(4));
t1629 = sin(qJ(3));
t1787 = qJD(2) * t1629;
t1584 = -t1632 * qJD(3) + t1628 * t1787;
t1585 = qJD(3) * t1628 + t1632 * t1787;
t1627 = sin(qJ(5));
t1631 = cos(qJ(5));
t1537 = t1631 * t1584 + t1585 * t1627;
t1539 = -t1627 * t1584 + t1631 * t1585;
t1484 = t1539 * t1537;
t1611 = qJD(3) * t1787;
t1633 = cos(qJ(3));
t1742 = t1633 * qJDD(2);
t1588 = -t1611 + t1742;
t1581 = -qJDD(4) + t1588;
t1576 = -qJDD(5) + t1581;
t1825 = t1484 + t1576;
t1827 = pkin(5) * t1825;
t1621 = sin(pkin(11));
t1623 = cos(pkin(11));
t1595 = g(1) * t1623 + g(2) * t1621;
t1630 = sin(qJ(2));
t1634 = cos(qJ(2));
t1624 = cos(pkin(6));
t1622 = sin(pkin(6));
t1793 = g(3) - qJDD(1);
t1726 = t1622 * t1793;
t1727 = g(1) * t1621 - t1623 * g(2);
t1824 = t1624 * t1727 - t1726;
t1517 = -t1634 * t1595 + t1630 * t1824;
t1635 = qJD(2) ^ 2;
t1503 = -t1635 * pkin(2) + qJDD(2) * pkin(8) + t1517;
t1578 = t1622 * t1727;
t1715 = t1624 * t1793 + t1578;
t1558 = t1633 * t1715;
t1806 = pkin(3) * t1633;
t1720 = -pkin(9) * t1629 - t1806;
t1586 = t1720 * qJD(2);
t1814 = qJD(3) ^ 2;
t1429 = (qJD(2) * t1586 + t1503) * t1629 - qJDD(3) * pkin(3) - pkin(9) * t1814 + t1558;
t1786 = qJD(2) * t1633;
t1608 = -qJD(4) + t1786;
t1559 = -pkin(4) * t1608 - pkin(10) * t1585;
t1737 = qJD(3) * t1786;
t1743 = t1629 * qJDD(2);
t1672 = t1737 + t1743;
t1640 = t1632 * qJDD(3) - t1628 * t1672;
t1637 = t1585 * qJD(4) - t1640;
t1813 = t1584 ^ 2;
t1363 = t1637 * pkin(4) - t1813 * pkin(10) + t1585 * t1559 + t1429;
t1773 = t1825 * t1627;
t1772 = t1825 * t1631;
t1535 = t1537 ^ 2;
t1600 = -qJD(5) + t1608;
t1599 = t1600 ^ 2;
t1459 = -t1599 - t1535;
t1373 = t1459 * t1627 - t1772;
t1370 = pkin(4) * t1373;
t1641 = -t1628 * qJDD(3) - t1632 * t1672;
t1527 = -t1584 * qJD(4) - t1641;
t1419 = -t1537 * qJD(5) + t1631 * t1527 - t1627 * t1637;
t1465 = t1633 * t1503 - t1629 * t1715;
t1430 = -pkin(3) * t1814 + qJDD(3) * pkin(9) + t1586 * t1786 + t1465;
t1516 = -t1630 * t1595 - t1634 * t1824;
t1502 = -qJDD(2) * pkin(2) - t1635 * pkin(8) + t1516;
t1587 = 0.2e1 * t1737 + t1743;
t1719 = -t1588 + t1611;
t1445 = pkin(3) * t1719 - pkin(9) * t1587 + t1502;
t1360 = t1632 * t1430 + t1628 * t1445;
t1333 = -pkin(4) * t1813 - pkin(10) * t1637 + t1608 * t1559 + t1360;
t1359 = t1628 * t1430 - t1632 * t1445;
t1566 = t1584 * t1608;
t1493 = -t1566 + t1527;
t1765 = t1585 * t1584;
t1647 = -t1581 - t1765;
t1636 = t1647 * pkin(4) - pkin(10) * t1493 - t1359;
t1257 = t1627 * t1333 - t1631 * t1636;
t1510 = t1537 * t1600;
t1644 = -qJ(6) * t1510 + 0.2e1 * qJD(6) * t1539 + t1257 + t1827;
t1226 = qJ(6) * t1419 + t1644;
t1639 = -t1226 - t1827;
t1826 = t1370 + t1639;
t1724 = t1627 * t1527 + t1631 * t1637;
t1418 = -qJD(5) * t1539 - t1724;
t1504 = -pkin(5) * t1600 - qJ(6) * t1539;
t1279 = -t1418 * pkin(5) - t1535 * qJ(6) + t1539 * t1504 + qJDD(6) + t1363;
t1823 = t1621 * t1793;
t1822 = t1623 * t1793;
t1821 = t1628 * t1647;
t1669 = t1630 * t1715;
t1820 = t1632 * t1647;
t1668 = t1634 * t1715;
t1818 = t1510 + t1419;
t1383 = (qJD(5) + t1600) * t1539 + t1724;
t1816 = -t1623 * t1595 - t1621 * t1727;
t1815 = -t1621 * t1595 + t1623 * t1727;
t1536 = t1539 ^ 2;
t1580 = t1585 ^ 2;
t1606 = t1608 ^ 2;
t1386 = -t1510 + t1419;
t1319 = -t1383 * t1627 - t1386 * t1631;
t1321 = -t1383 * t1631 + t1386 * t1627;
t1250 = -t1319 * t1628 + t1321 * t1632;
t1425 = -t1535 - t1536;
t1231 = t1250 * t1629 - t1425 * t1633;
t1812 = pkin(2) * t1231;
t1374 = t1459 * t1631 + t1773;
t1311 = -t1373 * t1628 + t1374 * t1632;
t1382 = (qJD(5) - t1600) * t1539 + t1724;
t1262 = t1311 * t1629 - t1382 * t1633;
t1811 = pkin(2) * t1262;
t1497 = -t1536 - t1599;
t1449 = -t1484 + t1576;
t1775 = t1449 * t1627;
t1397 = t1497 * t1631 + t1775;
t1774 = t1449 * t1631;
t1398 = -t1497 * t1627 + t1774;
t1329 = -t1397 * t1628 + t1398 * t1632;
t1271 = t1329 * t1629 - t1633 * t1818;
t1810 = pkin(2) * t1271;
t1310 = t1373 * t1632 + t1374 * t1628;
t1809 = pkin(3) * t1310;
t1328 = t1397 * t1632 + t1398 * t1628;
t1808 = pkin(3) * t1328;
t1807 = pkin(3) * t1629;
t1258 = t1631 * t1333 + t1627 * t1636;
t1202 = -t1257 * t1631 + t1258 * t1627;
t1805 = pkin(4) * t1202;
t1804 = pkin(7) * t1622;
t1803 = pkin(7) * t1624;
t1802 = pkin(8) * t1231;
t1801 = pkin(8) * t1262;
t1800 = pkin(8) * t1271;
t1248 = t1319 * t1632 + t1321 * t1628;
t1799 = pkin(9) * t1248;
t1798 = pkin(9) * t1310;
t1797 = pkin(9) * t1328;
t1796 = pkin(10) * t1319;
t1795 = pkin(10) * t1373;
t1794 = pkin(10) * t1397;
t1232 = t1250 * t1633 + t1425 * t1629;
t1704 = t1232 * t1630 - t1248 * t1634;
t1154 = -t1622 * t1231 + t1624 * t1704;
t1179 = t1232 * t1634 + t1248 * t1630;
t1792 = qJ(1) * (t1154 * t1623 + t1179 * t1621);
t1263 = t1311 * t1633 + t1382 * t1629;
t1702 = t1263 * t1630 - t1310 * t1634;
t1185 = -t1622 * t1262 + t1624 * t1702;
t1227 = t1263 * t1634 + t1310 * t1630;
t1791 = qJ(1) * (t1185 * t1623 + t1227 * t1621);
t1272 = t1329 * t1633 + t1629 * t1818;
t1700 = t1272 * t1630 - t1328 * t1634;
t1193 = -t1622 * t1271 + t1624 * t1700;
t1235 = t1272 * t1634 + t1328 * t1630;
t1790 = qJ(1) * (t1193 * t1623 + t1235 * t1621);
t1788 = qJD(2) * qJD(3);
t1785 = qJD(6) * t1537;
t1783 = t1202 * t1628;
t1782 = t1202 * t1632;
t1781 = t1226 * t1627;
t1780 = t1226 * t1631;
t1779 = t1363 * t1627;
t1778 = t1363 * t1631;
t1777 = t1429 * t1628;
t1776 = t1429 * t1632;
t1771 = t1502 * t1629;
t1770 = t1502 * t1633;
t1513 = t1581 - t1765;
t1769 = t1513 * t1628;
t1768 = t1513 * t1632;
t1767 = t1539 * t1600;
t1548 = t1587 * t1629;
t1607 = t1629 * t1635 * t1633;
t1596 = -t1607 + qJDD(3);
t1764 = t1596 * t1629;
t1763 = t1596 * t1633;
t1597 = qJDD(3) + t1607;
t1762 = t1597 * t1629;
t1761 = t1600 * t1627;
t1760 = t1600 * t1631;
t1759 = t1608 * t1628;
t1758 = t1608 * t1632;
t1617 = t1629 ^ 2;
t1757 = t1617 * t1635;
t1754 = pkin(1) * t1154 + t1179 * t1804;
t1753 = pkin(1) * t1185 + t1227 * t1804;
t1752 = pkin(1) * t1193 + t1235 * t1804;
t1751 = -pkin(2) * t1248 + pkin(8) * t1232;
t1750 = -pkin(3) * t1425 + pkin(9) * t1250;
t1749 = -pkin(2) * t1310 + pkin(8) * t1263;
t1748 = -pkin(2) * t1328 + pkin(8) * t1272;
t1747 = -pkin(3) * t1382 + pkin(9) * t1311;
t1746 = -pkin(3) * t1818 + pkin(9) * t1329;
t1618 = t1633 ^ 2;
t1745 = t1617 + t1618;
t1744 = t1622 * qJDD(2);
t1741 = t1629 * t1484;
t1740 = t1633 * t1484;
t1739 = t1629 * t1765;
t1738 = t1633 * t1765;
t1396 = pkin(4) * t1397;
t1736 = t1396 - t1258;
t1153 = t1624 * t1231 + t1622 * t1704;
t1734 = -pkin(1) * t1153 + t1179 * t1803;
t1184 = t1624 * t1262 + t1622 * t1702;
t1733 = -pkin(1) * t1184 + t1227 * t1803;
t1192 = t1624 * t1271 + t1622 * t1700;
t1732 = -pkin(1) * t1192 + t1235 * t1803;
t1318 = pkin(4) * t1319;
t1218 = -pkin(3) * t1248 - t1318;
t1524 = -0.2e1 * t1785;
t1713 = t1535 * pkin(5) - t1418 * qJ(6) - t1600 * t1504 - t1258;
t1228 = t1524 - t1713;
t1172 = t1228 * t1627 - t1780;
t1223 = pkin(5) * t1226;
t1731 = pkin(4) * t1172 - t1223;
t1730 = -pkin(4) * t1425 + pkin(10) * t1321;
t1729 = -pkin(4) * t1382 + pkin(10) * t1374;
t1728 = -pkin(4) * t1818 + pkin(10) * t1398;
t1203 = t1257 * t1627 + t1631 * t1258;
t1294 = t1359 * t1628 + t1632 * t1360;
t1464 = t1503 * t1629 + t1558;
t1390 = t1464 * t1629 + t1633 * t1465;
t1723 = t1630 * t1607;
t1722 = t1634 * t1607;
t1721 = -pkin(3) * t1429 + pkin(9) * t1294;
t1718 = t1257 - t1370;
t1389 = t1464 * t1633 - t1465 * t1629;
t1590 = t1745 * qJDD(2);
t1615 = t1618 * t1635;
t1593 = t1615 + t1757;
t1543 = t1590 * t1634 - t1593 * t1630;
t1716 = pkin(7) * t1543 + t1389 * t1630;
t1210 = -pkin(5) * t1425 - qJ(6) * t1383 + t1228;
t1215 = (t1386 + t1419) * qJ(6) + t1644;
t1137 = t1210 * t1631 + t1215 * t1627 + t1730;
t1141 = -t1210 * t1627 + t1215 * t1631 - t1796;
t1107 = -t1137 * t1628 + t1141 * t1632 - t1799;
t1379 = pkin(5) * t1386;
t1204 = t1218 + t1379;
t1096 = t1107 * t1633 - t1204 * t1629 - t1802;
t1661 = t1137 * t1632 + t1141 * t1628 + t1750;
t1102 = -t1661 - t1812;
t1712 = t1096 * t1630 + t1102 * t1634;
t1174 = t1203 + t1730;
t1175 = -t1202 - t1796;
t1121 = -t1174 * t1628 + t1175 * t1632 - t1799;
t1108 = t1121 * t1633 - t1218 * t1629 - t1802;
t1660 = t1174 * t1632 + t1175 * t1628 + t1750;
t1113 = -t1660 - t1812;
t1711 = t1108 * t1630 + t1113 * t1634;
t1245 = -pkin(5) * t1382 + qJ(6) * t1459 - t1279;
t1211 = qJ(6) * t1773 + t1245 * t1631 + t1729;
t1220 = qJ(6) * t1772 - t1245 * t1627 - t1795;
t1144 = -t1211 * t1628 + t1220 * t1632 - t1798;
t1176 = -t1809 - t1826;
t1114 = t1144 * t1633 - t1176 * t1629 - t1801;
t1659 = t1211 * t1632 + t1220 * t1628 + t1747;
t1132 = -t1659 - t1811;
t1710 = t1114 * t1630 + t1132 * t1634;
t1269 = -qJ(6) * t1497 + t1279;
t1344 = -pkin(5) * t1818 + qJ(6) * t1449;
t1214 = t1269 * t1627 + t1344 * t1631 + t1728;
t1222 = t1269 * t1631 - t1344 * t1627 - t1794;
t1151 = -t1214 * t1628 + t1222 * t1632 - t1797;
t1676 = pkin(5) * t1497 + t1713;
t1664 = t1396 + t1676;
t1187 = t1524 - t1664 - t1808;
t1117 = t1151 * t1633 - t1187 * t1629 - t1800;
t1658 = t1214 * t1632 + t1222 * t1628 + t1746;
t1135 = -t1658 - t1810;
t1709 = t1117 * t1630 + t1135 * t1634;
t1173 = t1228 * t1631 + t1781;
t1128 = -t1172 * t1628 + t1173 * t1632;
t1119 = t1128 * t1633 + t1279 * t1629;
t1127 = t1172 * t1632 + t1173 * t1628;
t1708 = t1119 * t1630 - t1127 * t1634;
t1259 = t1729 - t1778;
t1301 = t1779 - t1795;
t1190 = -t1259 * t1628 + t1301 * t1632 - t1798;
t1208 = t1718 - t1809;
t1134 = t1190 * t1633 - t1208 * t1629 - t1801;
t1657 = t1259 * t1632 + t1301 * t1628 + t1747;
t1167 = -t1657 - t1811;
t1707 = t1134 * t1630 + t1167 * t1634;
t1266 = t1728 + t1779;
t1316 = t1778 - t1794;
t1207 = -t1266 * t1628 + t1316 * t1632 - t1797;
t1216 = -t1736 - t1808;
t1136 = t1207 * t1633 - t1216 * t1629 - t1800;
t1656 = t1266 * t1632 + t1316 * t1628 + t1746;
t1169 = -t1656 - t1810;
t1706 = t1136 * t1630 + t1169 * t1634;
t1146 = t1203 * t1632 - t1783;
t1139 = t1146 * t1633 + t1363 * t1629;
t1145 = t1203 * t1628 + t1782;
t1705 = t1139 * t1630 - t1145 * t1634;
t1320 = -t1382 * t1627 + t1631 * t1818;
t1322 = -t1382 * t1631 - t1627 * t1818;
t1251 = -t1320 * t1628 + t1322 * t1632;
t1478 = t1536 - t1535;
t1240 = t1251 * t1633 + t1478 * t1629;
t1249 = t1320 * t1632 + t1322 * t1628;
t1703 = t1240 * t1630 - t1249 * t1634;
t1265 = t1294 * t1633 + t1429 * t1629;
t1293 = -t1359 * t1632 + t1360 * t1628;
t1701 = t1265 * t1630 - t1293 * t1634;
t1508 = -t1536 + t1599;
t1401 = t1508 * t1631 - t1773;
t1403 = -t1508 * t1627 - t1772;
t1336 = -t1401 * t1628 + t1403 * t1632;
t1277 = t1336 * t1633 + t1386 * t1629;
t1334 = t1401 * t1632 + t1403 * t1628;
t1699 = t1277 * t1630 - t1334 * t1634;
t1507 = t1535 - t1599;
t1402 = t1507 * t1627 - t1774;
t1404 = t1507 * t1631 + t1775;
t1337 = -t1402 * t1628 + t1404 * t1632;
t1278 = t1337 * t1633 - t1383 * t1629;
t1335 = t1402 * t1632 + t1404 * t1628;
t1698 = t1278 * t1630 - t1335 * t1634;
t1375 = t1418 * t1631 - t1537 * t1761;
t1376 = -t1418 * t1627 - t1537 * t1760;
t1314 = -t1375 * t1628 + t1376 * t1632;
t1288 = t1314 * t1633 - t1741;
t1312 = t1375 * t1632 + t1376 * t1628;
t1697 = t1288 * t1630 - t1312 * t1634;
t1377 = t1419 * t1627 - t1539 * t1760;
t1378 = t1419 * t1631 + t1539 * t1761;
t1315 = -t1377 * t1628 + t1378 * t1632;
t1289 = t1315 * t1633 + t1741;
t1313 = t1377 * t1632 + t1378 * t1628;
t1696 = t1289 * t1630 - t1313 * t1634;
t1437 = (t1537 * t1627 + t1539 * t1631) * t1600;
t1438 = (t1537 * t1631 - t1539 * t1627) * t1600;
t1362 = -t1437 * t1628 + t1438 * t1632;
t1351 = t1362 * t1633 - t1576 * t1629;
t1361 = t1437 * t1632 + t1438 * t1628;
t1695 = t1351 * t1630 - t1361 * t1634;
t1491 = (-qJD(4) - t1608) * t1585 + t1640;
t1413 = t1491 * t1632 + t1493 * t1628;
t1512 = t1580 + t1813;
t1368 = t1413 * t1633 - t1512 * t1629;
t1411 = t1491 * t1628 - t1493 * t1632;
t1694 = t1368 * t1630 - t1411 * t1634;
t1693 = t1390 * t1630 - t1502 * t1634;
t1565 = t1585 * t1608;
t1490 = t1565 - t1637;
t1492 = t1566 + t1527;
t1412 = t1490 * t1632 - t1492 * t1628;
t1546 = t1580 - t1813;
t1392 = t1412 * t1633 + t1546 * t1629;
t1410 = t1490 * t1628 + t1492 * t1632;
t1692 = t1392 * t1630 - t1410 * t1634;
t1531 = -t1606 - t1813;
t1453 = t1531 * t1632 - t1821;
t1394 = t1453 * t1633 - t1490 * t1629;
t1452 = t1531 * t1628 + t1820;
t1691 = t1394 * t1630 - t1452 * t1634;
t1542 = -t1580 - t1606;
t1463 = -t1542 * t1628 + t1768;
t1494 = (qJD(4) - t1608) * t1584 + t1641;
t1400 = t1463 * t1633 - t1494 * t1629;
t1462 = t1542 * t1632 + t1769;
t1690 = t1400 * t1630 - t1462 * t1634;
t1564 = -t1580 + t1606;
t1476 = -t1564 * t1628 + t1820;
t1407 = t1476 * t1633 + t1493 * t1629;
t1474 = t1564 * t1632 + t1821;
t1689 = t1407 * t1630 - t1474 * t1634;
t1563 = -t1606 + t1813;
t1477 = t1563 * t1632 + t1769;
t1489 = t1565 + t1637;
t1408 = t1477 * t1633 - t1489 * t1629;
t1475 = t1563 * t1628 - t1768;
t1688 = t1408 * t1630 - t1475 * t1634;
t1486 = -t1584 * t1758 + t1628 * t1637;
t1433 = t1486 * t1633 - t1739;
t1485 = t1584 * t1759 + t1632 * t1637;
t1687 = t1433 * t1630 + t1485 * t1634;
t1488 = t1527 * t1632 + t1585 * t1759;
t1434 = t1488 * t1633 + t1739;
t1487 = t1527 * t1628 - t1585 * t1758;
t1686 = t1434 * t1630 - t1487 * t1634;
t1501 = (t1584 * t1632 - t1585 * t1628) * t1608;
t1481 = t1501 * t1633 - t1581 * t1629;
t1500 = (t1584 * t1628 + t1585 * t1632) * t1608;
t1685 = t1481 * t1630 - t1500 * t1634;
t1446 = t1634 * t1516 - t1630 * t1517;
t1447 = t1516 * t1630 + t1517 * t1634;
t1589 = -0.2e1 * t1611 + t1742;
t1541 = t1589 * t1633 - t1548;
t1594 = -t1615 + t1757;
t1684 = t1541 * t1630 - t1594 * t1634;
t1605 = -t1615 - t1814;
t1554 = t1605 * t1633 - t1762;
t1683 = t1554 * t1630 + t1589 * t1634;
t1603 = -t1757 - t1814;
t1556 = -t1603 * t1629 - t1763;
t1682 = t1556 * t1630 - t1587 * t1634;
t1678 = qJDD(2) * t1630 + t1634 * t1635;
t1570 = t1678 * t1624;
t1591 = qJDD(2) * t1634 - t1630 * t1635;
t1681 = t1570 * t1623 + t1591 * t1621;
t1680 = t1570 * t1621 - t1591 * t1623;
t1679 = t1590 * t1630 + t1593 * t1634;
t1582 = t1745 * t1788;
t1677 = -qJDD(3) * t1634 + t1582 * t1630;
t1675 = (-t1153 * t1622 - t1154 * t1624) * pkin(7);
t1674 = (-t1184 * t1622 - t1185 * t1624) * pkin(7);
t1673 = (-t1192 * t1622 - t1193 * t1624) * pkin(7);
t1604 = t1615 - t1814;
t1553 = t1604 * t1633 - t1764;
t1671 = t1553 * t1630 - t1634 * t1742;
t1583 = t1633 * t1597;
t1602 = -t1757 + t1814;
t1555 = -t1602 * t1629 + t1583;
t1670 = t1555 * t1630 - t1634 * t1743;
t1666 = pkin(3) * t1490 + pkin(9) * t1453 - t1776;
t1665 = pkin(3) * t1494 + pkin(9) * t1463 + t1777;
t1560 = -t1588 * t1629 - t1618 * t1788;
t1663 = t1560 * t1630 - t1722;
t1561 = -t1617 * t1788 + t1633 * t1672;
t1662 = t1561 * t1630 + t1722;
t1189 = -pkin(5) * t1279 + qJ(6) * t1228;
t1116 = -pkin(4) * t1279 + pkin(10) * t1173 + qJ(6) * t1781 + t1189 * t1631;
t1120 = -pkin(10) * t1172 + qJ(6) * t1780 - t1189 * t1627;
t1084 = -pkin(9) * t1127 - t1116 * t1628 + t1120 * t1632;
t1106 = -pkin(3) * t1127 - t1731;
t1118 = t1128 * t1629 - t1279 * t1633;
t1073 = -pkin(8) * t1118 + t1084 * t1633 - t1106 * t1629;
t1643 = -pkin(3) * t1279 + pkin(9) * t1128 + t1116 * t1632 + t1120 * t1628;
t1077 = -pkin(2) * t1118 - t1643;
t1100 = t1119 * t1634 + t1127 * t1630;
t1655 = pkin(7) * t1100 + t1073 * t1630 + t1077 * t1634;
t1186 = -pkin(4) * t1363 + pkin(10) * t1203;
t1111 = -pkin(9) * t1145 - pkin(10) * t1782 - t1186 * t1628;
t1126 = -pkin(3) * t1145 - t1805;
t1138 = t1146 * t1629 - t1363 * t1633;
t1087 = -pkin(8) * t1138 + t1111 * t1633 - t1126 * t1629;
t1642 = -pkin(3) * t1363 + pkin(9) * t1146 - pkin(10) * t1783 + t1186 * t1632;
t1095 = -pkin(2) * t1138 - t1642;
t1110 = t1139 * t1634 + t1145 * t1630;
t1654 = pkin(7) * t1110 + t1087 * t1630 + t1095 * t1634;
t1264 = t1294 * t1629 - t1429 * t1633;
t1188 = -pkin(8) * t1264 + (-pkin(9) * t1633 + t1807) * t1293;
t1217 = -pkin(2) * t1264 - t1721;
t1221 = t1265 * t1634 + t1293 * t1630;
t1653 = pkin(7) * t1221 + t1188 * t1630 + t1217 * t1634;
t1260 = -pkin(9) * t1411 - t1293;
t1367 = t1413 * t1629 + t1512 * t1633;
t1229 = -pkin(8) * t1367 + t1260 * t1633 + t1411 * t1807;
t1646 = pkin(3) * t1512 + pkin(9) * t1413 + t1294;
t1238 = -pkin(2) * t1367 - t1646;
t1325 = t1368 * t1634 + t1411 * t1630;
t1652 = pkin(7) * t1325 + t1229 * t1630 + t1238 * t1634;
t1332 = -pkin(3) * t1452 + t1359;
t1364 = -pkin(9) * t1452 + t1777;
t1393 = t1453 * t1629 + t1490 * t1633;
t1254 = -pkin(8) * t1393 - t1332 * t1629 + t1364 * t1633;
t1295 = -pkin(2) * t1393 - t1666;
t1346 = t1394 * t1634 + t1452 * t1630;
t1651 = pkin(7) * t1346 + t1254 * t1630 + t1295 * t1634;
t1342 = -pkin(3) * t1462 + t1360;
t1366 = -pkin(9) * t1462 + t1776;
t1399 = t1463 * t1629 + t1494 * t1633;
t1255 = -pkin(8) * t1399 - t1342 * t1629 + t1366 * t1633;
t1296 = -pkin(2) * t1399 - t1665;
t1347 = t1400 * t1634 + t1462 * t1630;
t1650 = pkin(7) * t1347 + t1255 * t1630 + t1296 * t1634;
t1550 = t1605 * t1629 + t1583;
t1426 = -pkin(2) * t1550 + t1464;
t1460 = -pkin(8) * t1550 + t1771;
t1505 = t1554 * t1634 - t1589 * t1630;
t1649 = pkin(7) * t1505 + t1426 * t1634 + t1460 * t1630;
t1552 = t1603 * t1633 - t1764;
t1427 = -pkin(2) * t1552 + t1465;
t1461 = -pkin(8) * t1552 + t1770;
t1506 = t1556 * t1634 + t1587 * t1630;
t1648 = pkin(7) * t1506 + t1427 * t1634 + t1461 * t1630;
t1352 = t1390 * t1634 + t1502 * t1630;
t1645 = pkin(7) * t1352 - (-pkin(2) * t1634 - pkin(8) * t1630) * t1389;
t1612 = t1624 * qJDD(2);
t1571 = t1591 * t1624;
t1569 = t1591 * t1622;
t1568 = t1678 * t1622;
t1562 = qJDD(3) * t1630 + t1582 * t1634;
t1551 = t1602 * t1633 + t1762;
t1549 = t1604 * t1629 + t1763;
t1547 = t1719 * t1633;
t1545 = t1677 * t1624;
t1544 = t1677 * t1622;
t1540 = t1587 * t1633 + t1589 * t1629;
t1534 = t1679 * t1624;
t1533 = t1679 * t1622;
t1530 = -t1571 * t1621 - t1623 * t1678;
t1529 = t1571 * t1623 - t1621 * t1678;
t1525 = 0.2e1 * t1785;
t1523 = t1561 * t1634 - t1723;
t1522 = t1560 * t1634 + t1723;
t1521 = t1555 * t1634 + t1630 * t1743;
t1520 = t1553 * t1634 + t1630 * t1742;
t1499 = t1541 * t1634 + t1594 * t1630;
t1483 = -t1668 + (t1568 * t1622 + t1570 * t1624) * pkin(7);
t1482 = -t1669 + (-t1569 * t1622 - t1571 * t1624) * pkin(7);
t1480 = t1501 * t1629 + t1581 * t1633;
t1473 = -t1622 * t1548 + t1624 * t1662;
t1472 = t1622 * t1547 + t1624 * t1663;
t1471 = t1624 * t1548 + t1622 * t1662;
t1470 = -t1624 * t1547 + t1622 * t1663;
t1469 = -t1622 * t1551 + t1624 * t1670;
t1468 = -t1622 * t1549 + t1624 * t1671;
t1467 = t1624 * t1551 + t1622 * t1670;
t1466 = t1624 * t1549 + t1622 * t1671;
t1457 = -t1622 * t1552 + t1624 * t1682;
t1456 = -t1622 * t1550 + t1624 * t1683;
t1455 = t1624 * t1552 + t1622 * t1682;
t1454 = t1624 * t1550 + t1622 * t1683;
t1444 = -t1622 * t1540 + t1624 * t1684;
t1443 = t1624 * t1540 + t1622 * t1684;
t1442 = pkin(2) * t1589 + pkin(8) * t1554 - t1770;
t1441 = -pkin(2) * t1587 + pkin(8) * t1556 + t1771;
t1436 = t1447 * t1624;
t1435 = t1447 * t1622;
t1432 = t1488 * t1629 - t1738;
t1431 = t1486 * t1629 + t1738;
t1423 = -pkin(1) * t1569 + t1622 * t1516 + t1624 * t1668 - t1678 * t1803;
t1422 = pkin(1) * t1568 + t1622 * t1517 - t1591 * t1803 - t1624 * t1669;
t1421 = pkin(1) * t1571 - t1624 * t1516 + (-pkin(7) * t1678 + t1668) * t1622;
t1420 = -pkin(1) * t1570 - t1624 * t1517 + (-pkin(7) * t1591 - t1669) * t1622;
t1415 = t1622 * t1578 + (t1726 - t1446) * t1624;
t1414 = -t1446 * t1622 - t1624 * t1715;
t1409 = t1481 * t1634 + t1500 * t1630;
t1406 = t1477 * t1629 + t1489 * t1633;
t1405 = t1476 * t1629 - t1493 * t1633;
t1391 = t1412 * t1629 - t1546 * t1633;
t1372 = t1434 * t1634 + t1487 * t1630;
t1371 = t1433 * t1634 - t1485 * t1630;
t1365 = pkin(2) * t1593 + pkin(8) * t1590 + t1390;
t1357 = -t1622 * t1480 + t1624 * t1685;
t1356 = t1624 * t1480 + t1622 * t1685;
t1355 = -pkin(2) * t1502 + pkin(8) * t1390;
t1354 = t1408 * t1634 + t1475 * t1630;
t1353 = t1407 * t1634 + t1474 * t1630;
t1350 = t1362 * t1629 + t1576 * t1633;
t1349 = pkin(1) * t1415 + t1447 * t1804;
t1348 = -pkin(1) * t1414 + t1447 * t1803;
t1345 = t1634 * t1389 + (-t1533 * t1622 - t1534 * t1624) * pkin(7);
t1343 = (-t1414 * t1622 - t1415 * t1624) * pkin(7);
t1341 = -t1622 * t1432 + t1624 * t1686;
t1340 = -t1622 * t1431 + t1624 * t1687;
t1339 = t1624 * t1432 + t1622 * t1686;
t1338 = t1624 * t1431 + t1622 * t1687;
t1330 = t1392 * t1634 + t1410 * t1630;
t1307 = -t1630 * t1427 + t1634 * t1461 + (-t1455 * t1622 - t1457 * t1624) * pkin(7);
t1306 = -t1630 * t1426 + t1634 * t1460 + (-t1454 * t1622 - t1456 * t1624) * pkin(7);
t1305 = -t1622 * t1406 + t1624 * t1688;
t1304 = -t1622 * t1405 + t1624 * t1689;
t1303 = t1624 * t1406 + t1622 * t1688;
t1302 = t1624 * t1405 + t1622 * t1689;
t1300 = -t1622 * t1399 + t1624 * t1690;
t1299 = t1624 * t1399 + t1622 * t1690;
t1298 = t1389 * t1622 + t1624 * t1693;
t1297 = -t1389 * t1624 + t1622 * t1693;
t1292 = -t1622 * t1393 + t1624 * t1691;
t1291 = t1624 * t1393 + t1622 * t1691;
t1290 = t1351 * t1634 + t1361 * t1630;
t1287 = t1315 * t1629 - t1740;
t1286 = t1314 * t1629 + t1740;
t1285 = -pkin(1) * t1455 - t1622 * t1441 + t1624 * t1648;
t1284 = -pkin(1) * t1454 - t1622 * t1442 + t1624 * t1649;
t1283 = pkin(1) * t1457 + t1624 * t1441 + t1622 * t1648;
t1282 = pkin(1) * t1456 + t1624 * t1442 + t1622 * t1649;
t1281 = -pkin(1) * t1533 - t1622 * t1365 + t1624 * t1716;
t1280 = pkin(1) * t1534 + t1624 * t1365 + t1622 * t1716;
t1276 = t1337 * t1629 + t1383 * t1633;
t1275 = t1336 * t1629 - t1386 * t1633;
t1274 = -t1622 * t1391 + t1624 * t1692;
t1273 = t1624 * t1391 + t1622 * t1692;
t1268 = -t1622 * t1367 + t1624 * t1694;
t1267 = t1624 * t1367 + t1622 * t1694;
t1253 = -t1622 * t1350 + t1624 * t1695;
t1252 = t1624 * t1350 + t1622 * t1695;
t1244 = -pkin(2) * t1462 + pkin(8) * t1400 + t1342 * t1633 + t1366 * t1629;
t1243 = -pkin(2) * t1452 + pkin(8) * t1394 + t1332 * t1633 + t1364 * t1629;
t1242 = t1278 * t1634 + t1335 * t1630;
t1241 = t1277 * t1634 + t1334 * t1630;
t1239 = t1251 * t1629 - t1478 * t1633;
t1237 = t1289 * t1634 + t1313 * t1630;
t1236 = t1288 * t1634 + t1312 * t1630;
t1219 = pkin(8) * t1368 + t1629 * t1260 + (-pkin(2) - t1806) * t1411;
t1213 = -t1253 * t1621 + t1290 * t1623;
t1212 = t1253 * t1623 + t1290 * t1621;
t1209 = -(pkin(2) * t1630 - pkin(8) * t1634) * t1389 + (-t1297 * t1622 - t1298 * t1624) * pkin(7);
t1206 = -pkin(1) * t1297 - t1622 * t1355 + t1624 * t1645;
t1205 = pkin(1) * t1298 + t1624 * t1355 + t1622 * t1645;
t1201 = -t1622 * t1276 + t1624 * t1698;
t1200 = -t1622 * t1275 + t1624 * t1699;
t1199 = t1624 * t1276 + t1622 * t1698;
t1198 = t1624 * t1275 + t1622 * t1699;
t1197 = -t1622 * t1287 + t1624 * t1696;
t1196 = -t1622 * t1286 + t1624 * t1697;
t1195 = t1624 * t1287 + t1622 * t1696;
t1194 = t1624 * t1286 + t1622 * t1697;
t1182 = t1240 * t1634 + t1249 * t1630;
t1181 = -t1622 * t1264 + t1624 * t1701;
t1180 = t1624 * t1264 + t1622 * t1701;
t1171 = pkin(8) * t1265 + (-pkin(2) + t1720) * t1293;
t1170 = t1634 * t1255 - t1630 * t1296 + (-t1299 * t1622 - t1300 * t1624) * pkin(7);
t1168 = t1634 * t1254 - t1630 * t1295 + (-t1291 * t1622 - t1292 * t1624) * pkin(7);
t1166 = -t1201 * t1621 + t1242 * t1623;
t1165 = -t1200 * t1621 + t1241 * t1623;
t1164 = t1201 * t1623 + t1242 * t1621;
t1163 = t1200 * t1623 + t1241 * t1621;
t1162 = -t1197 * t1621 + t1237 * t1623;
t1161 = -t1196 * t1621 + t1236 * t1623;
t1160 = t1197 * t1623 + t1237 * t1621;
t1159 = t1196 * t1623 + t1236 * t1621;
t1157 = qJ(1) * (-t1193 * t1621 + t1235 * t1623);
t1156 = -t1622 * t1239 + t1624 * t1703;
t1155 = t1624 * t1239 + t1622 * t1703;
t1149 = qJ(1) * (-t1185 * t1621 + t1227 * t1623);
t1148 = -pkin(1) * t1299 - t1622 * t1244 + t1624 * t1650;
t1147 = pkin(1) * t1300 + t1624 * t1244 + t1622 * t1650;
t1143 = -pkin(1) * t1291 - t1622 * t1243 + t1624 * t1651;
t1142 = pkin(1) * t1292 + t1624 * t1243 + t1622 * t1651;
t1140 = t1634 * t1229 - t1630 * t1238 + (-t1267 * t1622 - t1268 * t1624) * pkin(7);
t1133 = t1207 * t1629 + t1216 * t1633 + t1748;
t1131 = t1190 * t1629 + t1208 * t1633 + t1749;
t1130 = -pkin(1) * t1267 - t1622 * t1219 + t1624 * t1652;
t1129 = pkin(1) * t1268 + t1624 * t1219 + t1622 * t1652;
t1125 = -t1156 * t1621 + t1182 * t1623;
t1124 = t1156 * t1623 + t1182 * t1621;
t1122 = qJ(1) * (-t1154 * t1621 + t1179 * t1623);
t1115 = t1151 * t1629 + t1187 * t1633 + t1748;
t1112 = t1144 * t1629 + t1176 * t1633 + t1749;
t1109 = t1634 * t1188 - t1630 * t1217 + (-t1180 * t1622 - t1181 * t1624) * pkin(7);
t1105 = t1121 * t1629 + t1218 * t1633 + t1751;
t1104 = -pkin(1) * t1180 - t1622 * t1171 + t1624 * t1653;
t1103 = pkin(1) * t1181 + t1624 * t1171 + t1622 * t1653;
t1101 = t1634 * t1136 - t1630 * t1169 + t1673;
t1099 = -t1622 * t1138 + t1624 * t1705;
t1098 = t1624 * t1138 + t1622 * t1705;
t1097 = t1634 * t1134 - t1630 * t1167 + t1674;
t1094 = t1107 * t1629 + t1204 * t1633 + t1751;
t1093 = t1634 * t1117 - t1630 * t1135 + t1673;
t1092 = -t1622 * t1133 + t1624 * t1706 + t1732;
t1091 = t1624 * t1133 + t1622 * t1706 + t1752;
t1090 = t1634 * t1114 - t1630 * t1132 + t1674;
t1089 = -t1622 * t1131 + t1624 * t1707 + t1733;
t1088 = t1624 * t1131 + t1622 * t1707 + t1753;
t1086 = -t1622 * t1118 + t1624 * t1708;
t1085 = t1624 * t1118 + t1622 * t1708;
t1083 = -t1622 * t1115 + t1624 * t1709 + t1732;
t1082 = t1624 * t1115 + t1622 * t1709 + t1752;
t1081 = -pkin(2) * t1145 + pkin(8) * t1139 + t1111 * t1629 + t1126 * t1633;
t1080 = -t1622 * t1112 + t1624 * t1710 + t1733;
t1079 = t1624 * t1112 + t1622 * t1710 + t1753;
t1078 = t1634 * t1108 - t1630 * t1113 + t1675;
t1076 = t1634 * t1096 - t1630 * t1102 + t1675;
t1075 = -t1622 * t1105 + t1624 * t1711 + t1734;
t1074 = t1624 * t1105 + t1622 * t1711 + t1754;
t1072 = -pkin(2) * t1127 + pkin(8) * t1119 + t1084 * t1629 + t1106 * t1633;
t1071 = -t1622 * t1094 + t1624 * t1712 + t1734;
t1070 = t1624 * t1094 + t1622 * t1712 + t1754;
t1069 = t1634 * t1087 - t1630 * t1095 + (-t1098 * t1622 - t1099 * t1624) * pkin(7);
t1068 = -pkin(1) * t1098 - t1622 * t1081 + t1624 * t1654;
t1067 = pkin(1) * t1099 + t1624 * t1081 + t1622 * t1654;
t1066 = t1634 * t1073 - t1630 * t1077 + (-t1085 * t1622 - t1086 * t1624) * pkin(7);
t1065 = -pkin(1) * t1085 - t1622 * t1072 + t1624 * t1655;
t1064 = pkin(1) * t1086 + t1624 * t1072 + t1622 * t1655;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1823, -t1822, -t1815, -qJ(1) * t1815, 0, 0, -t1680, 0, t1530, t1621 * t1744, -qJ(1) * t1529 - t1423 * t1621 + t1482 * t1623, qJ(1) * t1681 - t1621 * t1422 + t1623 * t1483, -t1436 * t1621 + t1446 * t1623, t1623 * t1343 - t1621 * t1348 - qJ(1) * (t1415 * t1623 + t1447 * t1621), -t1473 * t1621 + t1523 * t1623, -t1444 * t1621 + t1499 * t1623, -t1469 * t1621 + t1521 * t1623, -t1472 * t1621 + t1522 * t1623, -t1468 * t1621 + t1520 * t1623, -t1545 * t1621 + t1562 * t1623, t1623 * t1306 - t1621 * t1284 - qJ(1) * (t1456 * t1623 + t1505 * t1621), t1623 * t1307 - t1621 * t1285 - qJ(1) * (t1457 * t1623 + t1506 * t1621), t1623 * t1345 - t1621 * t1281 - qJ(1) * (t1534 * t1623 + t1543 * t1621), t1623 * t1209 - t1621 * t1206 - qJ(1) * (t1298 * t1623 + t1352 * t1621), -t1341 * t1621 + t1372 * t1623, -t1274 * t1621 + t1330 * t1623, -t1304 * t1621 + t1353 * t1623, -t1340 * t1621 + t1371 * t1623, -t1305 * t1621 + t1354 * t1623, -t1357 * t1621 + t1409 * t1623, t1623 * t1168 - t1621 * t1143 - qJ(1) * (t1292 * t1623 + t1346 * t1621), t1623 * t1170 - t1621 * t1148 - qJ(1) * (t1300 * t1623 + t1347 * t1621), t1623 * t1140 - t1621 * t1130 - qJ(1) * (t1268 * t1623 + t1325 * t1621), t1623 * t1109 - t1621 * t1104 - qJ(1) * (t1181 * t1623 + t1221 * t1621), t1162, t1125, t1165, t1161, t1166, t1213, -t1089 * t1621 + t1097 * t1623 - t1791, -t1092 * t1621 + t1101 * t1623 - t1790, -t1075 * t1621 + t1078 * t1623 - t1792, t1623 * t1069 - t1621 * t1068 - qJ(1) * (t1099 * t1623 + t1110 * t1621), t1162, t1125, t1165, t1161, t1166, t1213, -t1080 * t1621 + t1090 * t1623 - t1791, -t1083 * t1621 + t1093 * t1623 - t1790, -t1071 * t1621 + t1076 * t1623 - t1792, t1623 * t1066 - t1621 * t1065 - qJ(1) * (t1086 * t1623 + t1100 * t1621); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1822, -t1823, t1816, qJ(1) * t1816, 0, 0, t1681, 0, t1529, -t1623 * t1744, qJ(1) * t1530 + t1423 * t1623 + t1482 * t1621, qJ(1) * t1680 + t1623 * t1422 + t1621 * t1483, t1436 * t1623 + t1446 * t1621, t1621 * t1343 + t1623 * t1348 + qJ(1) * (-t1415 * t1621 + t1447 * t1623), t1473 * t1623 + t1523 * t1621, t1444 * t1623 + t1499 * t1621, t1469 * t1623 + t1521 * t1621, t1472 * t1623 + t1522 * t1621, t1468 * t1623 + t1520 * t1621, t1545 * t1623 + t1562 * t1621, t1621 * t1306 + t1623 * t1284 + qJ(1) * (-t1456 * t1621 + t1505 * t1623), t1621 * t1307 + t1623 * t1285 + qJ(1) * (-t1457 * t1621 + t1506 * t1623), t1621 * t1345 + t1623 * t1281 + qJ(1) * (-t1534 * t1621 + t1543 * t1623), t1621 * t1209 + t1623 * t1206 + qJ(1) * (-t1298 * t1621 + t1352 * t1623), t1341 * t1623 + t1372 * t1621, t1274 * t1623 + t1330 * t1621, t1304 * t1623 + t1353 * t1621, t1340 * t1623 + t1371 * t1621, t1305 * t1623 + t1354 * t1621, t1357 * t1623 + t1409 * t1621, t1621 * t1168 + t1623 * t1143 + qJ(1) * (-t1292 * t1621 + t1346 * t1623), t1621 * t1170 + t1623 * t1148 + qJ(1) * (-t1300 * t1621 + t1347 * t1623), t1621 * t1140 + t1623 * t1130 + qJ(1) * (-t1268 * t1621 + t1325 * t1623), t1621 * t1109 + t1623 * t1104 + qJ(1) * (-t1181 * t1621 + t1221 * t1623), t1160, t1124, t1163, t1159, t1164, t1212, t1089 * t1623 + t1097 * t1621 + t1149, t1092 * t1623 + t1101 * t1621 + t1157, t1075 * t1623 + t1078 * t1621 + t1122, t1621 * t1069 + t1623 * t1068 + qJ(1) * (-t1099 * t1621 + t1110 * t1623), t1160, t1124, t1163, t1159, t1164, t1212, t1080 * t1623 + t1090 * t1621 + t1149, t1083 * t1623 + t1093 * t1621 + t1157, t1071 * t1623 + t1076 * t1621 + t1122, t1621 * t1066 + t1623 * t1065 + qJ(1) * (-t1086 * t1621 + t1100 * t1623); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1727, t1595, 0, 0, 0, 0, t1568, 0, t1569, t1612, t1421, t1420, t1435, t1349, t1471, t1443, t1467, t1470, t1466, t1544, t1282, t1283, t1280, t1205, t1339, t1273, t1302, t1338, t1303, t1356, t1142, t1147, t1129, t1103, t1195, t1155, t1198, t1194, t1199, t1252, t1088, t1091, t1074, t1067, t1195, t1155, t1198, t1194, t1199, t1252, t1079, t1082, t1070, t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1793, -t1727, 0, 0, 0, t1591, 0, -t1678, 0, t1482, t1483, t1446, t1343, t1523, t1499, t1521, t1522, t1520, t1562, t1306, t1307, t1345, t1209, t1372, t1330, t1353, t1371, t1354, t1409, t1168, t1170, t1140, t1109, t1237, t1182, t1241, t1236, t1242, t1290, t1097, t1101, t1078, t1069, t1237, t1182, t1241, t1236, t1242, t1290, t1090, t1093, t1076, t1066; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1793, 0, -t1595, 0, 0, 0, t1570, 0, t1571, -t1744, t1423, t1422, t1436, t1348, t1473, t1444, t1469, t1472, t1468, t1545, t1284, t1285, t1281, t1206, t1341, t1274, t1304, t1340, t1305, t1357, t1143, t1148, t1130, t1104, t1197, t1156, t1200, t1196, t1201, t1253, t1089, t1092, t1075, t1068, t1197, t1156, t1200, t1196, t1201, t1253, t1080, t1083, t1071, t1065; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1727, t1595, 0, 0, 0, 0, t1568, 0, t1569, t1612, t1421, t1420, t1435, t1349, t1471, t1443, t1467, t1470, t1466, t1544, t1282, t1283, t1280, t1205, t1339, t1273, t1302, t1338, t1303, t1356, t1142, t1147, t1129, t1103, t1195, t1155, t1198, t1194, t1199, t1252, t1088, t1091, t1074, t1067, t1195, t1155, t1198, t1194, t1199, t1252, t1079, t1082, t1070, t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t1635, 0, 0, -t1715, t1516, 0, t1561, t1541, t1555, t1560, t1553, t1582, t1460, t1461, t1389, pkin(8) * t1389, t1434, t1392, t1407, t1433, t1408, t1481, t1254, t1255, t1229, t1188, t1289, t1240, t1277, t1288, t1278, t1351, t1134, t1136, t1108, t1087, t1289, t1240, t1277, t1288, t1278, t1351, t1114, t1117, t1096, t1073; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1635, 0, qJDD(2), 0, t1715, 0, t1517, 0, t1607, -t1594, -t1743, -t1607, -t1742, -qJDD(3), t1426, t1427, 0, pkin(2) * t1389, -t1487, -t1410, -t1474, t1485, -t1475, -t1500, t1295, t1296, t1238, t1217, -t1313, -t1249, -t1334, -t1312, -t1335, -t1361, t1167, t1169, t1113, t1095, -t1313, -t1249, -t1334, -t1312, -t1335, -t1361, t1132, t1135, t1102, t1077; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1516, -t1517, 0, 0, t1548, t1540, t1551, -t1547, t1549, 0, t1442, t1441, t1365, t1355, t1432, t1391, t1405, t1431, t1406, t1480, t1243, t1244, t1219, t1171, t1287, t1239, t1275, t1286, t1276, t1350, t1131, t1133, t1105, t1081, t1287, t1239, t1275, t1286, t1276, t1350, t1112, t1115, t1094, t1072; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1672, t1589, t1597, -t1737, t1604, t1737, 0, t1502, t1464, 0, t1488, t1412, t1476, t1486, t1477, t1501, t1364, t1366, t1260, -pkin(9) * t1293, t1315, t1251, t1336, t1314, t1337, t1362, t1190, t1207, t1121, t1111, t1315, t1251, t1336, t1314, t1337, t1362, t1144, t1151, t1107, t1084; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1611, t1587, t1602, t1588, t1596, -t1611, -t1502, 0, t1465, 0, -t1765, -t1546, -t1493, t1765, t1489, t1581, t1332, t1342, -pkin(3) * t1411, -pkin(3) * t1293, -t1484, -t1478, -t1386, t1484, t1383, t1576, t1208, t1216, t1218, t1126, -t1484, -t1478, -t1386, t1484, t1383, t1576, t1176, t1187, t1204, t1106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1607, t1594, t1743, t1607, t1742, qJDD(3), -t1464, -t1465, 0, 0, t1487, t1410, t1474, -t1485, t1475, t1500, t1666, t1665, t1646, t1721, t1313, t1249, t1334, t1312, t1335, t1361, t1657, t1656, t1660, t1642, t1313, t1249, t1334, t1312, t1335, t1361, t1659, t1658, t1661, t1643; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1527, t1490, t1647, -t1566, t1563, t1566, 0, t1429, t1359, 0, t1378, t1322, t1403, t1376, t1404, t1438, t1301, t1316, t1175, -pkin(10) * t1202, t1378, t1322, t1403, t1376, t1404, t1438, t1220, t1222, t1141, t1120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1565, t1492, t1564, -t1637, -t1513, t1565, -t1429, 0, t1360, 0, t1377, t1320, t1401, t1375, t1402, t1437, t1259, t1266, t1174, t1186, t1377, t1320, t1401, t1375, t1402, t1437, t1211, t1214, t1137, t1116; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1765, t1546, t1493, -t1765, -t1489, -t1581, -t1359, -t1360, 0, 0, t1484, t1478, t1386, -t1484, -t1383, -t1576, -t1718, t1736, t1318, t1805, t1484, t1478, t1386, -t1484, -t1383, -t1576, t1826, t1525 + t1664, -t1379 + t1318, t1731; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1419, -t1382, -t1825, -t1510, t1507, t1510, 0, t1363, t1257, 0, t1419, -t1382, -t1825, -t1510, t1507, t1510, qJ(6) * t1825, t1269, t1215, qJ(6) * t1226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1767, t1818, t1508, t1418, -t1449, t1767, -t1363, 0, t1258, 0, -t1767, t1818, t1508, t1418, -t1449, t1767, t1245, t1344, t1210, t1189; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1484, t1478, t1386, -t1484, -t1383, -t1576, -t1257, -t1258, 0, 0, t1484, t1478, t1386, -t1484, -t1383, -t1576, t1639, t1525 + t1676, -t1379, -t1223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1419, -t1382, -t1825, -t1510, t1507, t1510, 0, t1279, t1226, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1767, t1818, t1508, t1418, -t1449, t1767, -t1279, 0, t1228, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1484, t1478, t1386, -t1484, -t1383, -t1576, -t1226, -t1228, 0, 0;];
m_new_reg  = t1;
