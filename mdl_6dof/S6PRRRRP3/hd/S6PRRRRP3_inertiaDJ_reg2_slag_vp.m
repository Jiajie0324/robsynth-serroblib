% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRRP3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP3_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:11:07
% EndTime: 2019-03-09 00:11:19
% DurationCPUTime: 4.55s
% Computational Cost: add. (4239->358), mult. (11240->622), div. (0->0), fcn. (10428->10), ass. (0->192)
t128 = sin(qJ(5));
t132 = cos(qJ(4));
t232 = -pkin(10) - pkin(9);
t239 = t232 * t132;
t242 = t128 * t239;
t130 = sin(qJ(3));
t129 = sin(qJ(4));
t133 = cos(qJ(3));
t208 = qJD(3) * t133;
t179 = t129 * t208;
t204 = qJD(4) * t132;
t241 = t130 * t204 + t179;
t126 = sin(pkin(6));
t134 = cos(qJ(2));
t219 = t126 * t134;
t127 = cos(pkin(6));
t131 = sin(qJ(2));
t220 = t126 * t131;
t83 = t127 * t130 + t133 * t220;
t156 = t129 * t219 - t83 * t132;
t214 = t156 * qJD(4);
t157 = t83 * t129 + t132 * t219;
t215 = t157 * qJD(4);
t230 = cos(qJ(5));
t175 = qJD(3) * t230;
t165 = t133 * t175;
t205 = qJD(4) * t130;
t185 = t129 * t205;
t217 = t129 * t130;
t189 = t128 * t217;
t173 = t230 * qJD(5);
t237 = t230 * qJD(4) + t173;
t42 = t129 * t165 - qJD(5) * t189 - t128 * t185 + (t128 * t208 + t237 * t130) * t132;
t93 = t128 * t132 + t230 * t129;
t80 = t93 * t130;
t240 = t42 * qJ(6) + t80 * qJD(6);
t218 = t128 * t129;
t238 = t232 * t218;
t122 = t129 ^ 2;
t124 = t132 ^ 2;
t213 = t122 - t124;
t172 = qJD(4) * t213;
t236 = qJD(4) + qJD(5);
t203 = qJD(4) * t133;
t184 = t129 * t203;
t209 = qJD(3) * t132;
t149 = t130 * t209 + t184;
t226 = t133 * pkin(3);
t164 = -pkin(9) * t130 - t226;
t159 = -pkin(2) + t164;
t153 = t132 * t159;
t163 = pkin(3) * t130 - pkin(9) * t133;
t155 = t163 * t129;
t47 = t149 * pkin(8) - qJD(3) * t155 - qJD(4) * t153;
t235 = t232 * t130 - pkin(2) - t226;
t211 = qJD(2) * t131;
t181 = t126 * t211;
t210 = qJD(2) * t134;
t180 = t126 * t210;
t82 = -t127 * t133 + t130 * t220;
t221 = qJD(3) * t82;
t65 = t133 * t180 - t221;
t151 = t129 * t181 + t65 * t132;
t234 = -t151 + t215;
t162 = qJD(4) * t219 - t65;
t233 = (-t162 * t132 + t215) * t132 + (-t129 * t162 + t214) * t129;
t152 = -t65 * t129 + t132 * t181;
t140 = t152 + t214;
t202 = qJD(5) * t128;
t10 = -t128 * t140 - t156 * t202 + t157 * t173 + t230 * t234;
t169 = pkin(4) * t173;
t229 = pkin(4) * t128;
t38 = -t128 * t157 - t156 * t230;
t231 = -t10 * t229 + t38 * t169;
t228 = t129 * pkin(8);
t121 = t130 * pkin(8);
t227 = t132 * pkin(3);
t66 = t83 * qJD(3) + t130 * t180;
t49 = t82 * t66;
t225 = -t80 * t169 - t42 * t229;
t64 = t236 * t93;
t186 = t230 * t132;
t92 = -t186 + t218;
t224 = -t92 * t169 - t64 * t229;
t187 = -pkin(4) - t228;
t142 = t235 * t132 + t187 * t133;
t56 = t128 * t142;
t216 = t132 * t133;
t111 = pkin(8) * t216;
t76 = t129 * t159 + t111;
t69 = -pkin(10) * t217 + t76;
t35 = t230 * t69 + t56;
t71 = -t230 * t239 + t238;
t222 = t66 * t130;
t97 = pkin(4) * t217 + t121;
t123 = t130 ^ 2;
t212 = -t133 ^ 2 + t123;
t120 = qJD(3) * t130;
t207 = qJD(3) * t134;
t206 = qJD(4) * t129;
t201 = -0.2e1 * pkin(2) * qJD(3);
t200 = -0.2e1 * pkin(3) * qJD(4);
t137 = (-t235 * t129 - t111) * qJD(4) + (t133 * t239 + (-t187 + t227) * t130) * qJD(3);
t139 = -pkin(10) * t241 - t47;
t57 = t230 * t142;
t199 = -qJD(5) * t57 - t128 * t137 - t230 * t139;
t198 = t133 * t228;
t197 = t230 * pkin(4);
t196 = pkin(4) * t206;
t195 = pkin(4) * t202;
t118 = pkin(8) * t208;
t193 = t82 * t206;
t37 = t128 * t156 - t157 * t230;
t192 = t37 * t202;
t81 = t130 * t186 - t189;
t191 = t81 * t202;
t190 = t93 * t202;
t74 = t241 * pkin(4) + t118;
t117 = -pkin(4) * t132 - pkin(3);
t182 = t132 * t203;
t178 = t129 * t204;
t177 = t130 * t208;
t176 = t132 * t208;
t34 = -t128 * t69 + t57;
t168 = t232 * t230;
t95 = t129 * t168;
t70 = t95 + t242;
t171 = t212 * qJD(3);
t170 = 0.2e1 * t177;
t167 = t130 * t176;
t166 = t123 * t178;
t75 = t153 - t198;
t161 = -t129 * t76 - t132 * t75;
t160 = qJD(4) * t168;
t158 = -t132 * t66 + t193;
t12 = t69 * t202 + t199;
t154 = -qJD(4) * t83 + t181;
t43 = -qJD(4) * t242 - qJD(5) * t95 - t129 * t160 - t202 * t239;
t150 = -t162 + t221;
t147 = t154 * t129;
t145 = t133 * t169 + (-pkin(4) * t120 + qJD(5) * t69) * t128 + t199;
t48 = -t76 * qJD(4) + (pkin(8) * t217 + t132 * t163) * qJD(3);
t144 = t161 * qJD(4) - t129 * t48 - t132 * t47;
t143 = t222 + t133 * t65 + (-t83 * t130 + t133 * t82) * qJD(3);
t44 = t132 * t160 + t173 * t239 - t236 * t238;
t138 = -t128 * t139 + t230 * t137;
t136 = -qJD(5) * t56 - t69 * t173 + t138;
t41 = t128 * t179 + t64 * t130 - t132 * t165;
t135 = t41 * qJ(6) - t81 * qJD(6) + t136;
t119 = pkin(5) * t120;
t6 = t119 + t135;
t116 = t197 + pkin(5);
t113 = -0.2e1 * t169;
t112 = -0.2e1 * t195;
t107 = -0.2e1 * t177;
t104 = t133 * t195;
t77 = pkin(5) * t92 + t117;
t72 = -t129 * t176 + t130 * t172;
t63 = -t237 * t132 + t236 * t218;
t61 = pkin(5) * t80 + t97;
t54 = pkin(5) * t64 + t196;
t53 = -qJ(6) * t92 + t71;
t52 = -qJ(6) * t93 + t70;
t51 = -0.2e1 * t93 * t63;
t50 = 0.2e1 * t92 * t64;
t46 = -t92 * t120 + t133 * t64;
t45 = t93 * t120 + t133 * t63;
t28 = -0.2e1 * t81 * t41;
t27 = 0.2e1 * t80 * t42;
t26 = pkin(5) * t42 + t74;
t25 = -qJ(6) * t80 + t35;
t24 = -0.2e1 * t80 * t120 + 0.2e1 * t133 * t42;
t23 = 0.2e1 * t81 * t120 + 0.2e1 * t133 * t41;
t22 = -t63 * t82 + t66 * t93;
t21 = t64 * t82 + t66 * t92;
t20 = 0.2e1 * t63 * t92 - 0.2e1 * t64 * t93;
t19 = -pkin(5) * t133 - qJ(6) * t81 + t34;
t18 = t63 * qJ(6) - t93 * qJD(6) + t44;
t17 = t64 * qJ(6) + t92 * qJD(6) + t43;
t16 = t42 * t92 + t64 * t80;
t15 = -t41 * t93 - t63 * t81;
t14 = 0.2e1 * t41 * t80 - 0.2e1 * t42 * t81;
t13 = -t35 * qJD(5) + t138;
t11 = -t38 * qJD(5) + t128 * t234 + t230 * t140;
t8 = t41 * t92 - t42 * t93 + t63 * t80 - t64 * t81;
t7 = t12 + t240;
t5 = -t11 * t133 + t37 * t120 + t42 * t82 + t66 * t80;
t4 = -t10 * t133 - t38 * t120 - t41 * t82 + t66 * t81;
t3 = -0.2e1 * t10 * t38 + 0.2e1 * t11 * t37 + 0.2e1 * t49;
t2 = t10 * t92 - t11 * t93 + t37 * t63 - t38 * t64;
t1 = t10 * t80 - t11 * t81 + t37 * t41 - t38 * t42;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t126 ^ 2 * t131 * t210 + 0.2e1 * t83 * t65 + 0.2e1 * t49, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t156 * t151 - 0.2e1 * t157 * t152 + 0.2e1 * t49, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t181, -t180, 0, 0, 0, 0, 0, 0, 0, 0 (-t130 * t207 - t133 * t211) * t126 (t130 * t211 - t133 * t207) * t126, t143, -pkin(2) * t181 + pkin(8) * t143, 0, 0, 0, 0, 0, 0, -t157 * t120 + (-t133 * t154 + t205 * t82) * t132 + (t133 * t150 + t222) * t129 (t132 * t150 + t147) * t133 + (qJD(3) * t156 - t158) * t130 (t157 * t208 + (-t132 * t154 + t214) * t130) * t132 + (t156 * t208 + (-t147 - t215) * t130) * t129, t151 * t76 + t156 * t47 + t152 * t75 - t157 * t48 + (t156 * t75 - t157 * t76) * qJD(4) + (t208 * t82 + t222) * pkin(8), 0, 0, 0, 0, 0, 0, t5, t4, t1, -t10 * t35 + t11 * t34 - t12 * t38 + t13 * t37 + t66 * t97 + t74 * t82, 0, 0, 0, 0, 0, 0, t5, t4, t1, -t10 * t25 + t11 * t19 + t26 * t82 + t37 * t6 - t38 * t7 + t61 * t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, -0.2e1 * t171, 0, t107, 0, 0, t130 * t201, t133 * t201, 0, 0, 0.2e1 * t124 * t177 - 0.2e1 * t166, 0.2e1 * t123 * t172 - 0.4e1 * t129 * t167, 0.2e1 * t130 * t184 + 0.2e1 * t209 * t212, 0.2e1 * t122 * t177 + 0.2e1 * t166, -0.2e1 * t129 * t171 + 0.2e1 * t130 * t182, t107, 0.2e1 * t75 * t120 - 0.2e1 * t133 * t48 + 0.2e1 * (t123 * t204 + t129 * t170) * pkin(8), -0.2e1 * t76 * t120 - 0.2e1 * t133 * t47 + 0.2e1 * (-t123 * t206 + 0.2e1 * t167) * pkin(8), 0.2e1 * t161 * t208 + 0.2e1 * (t129 * t47 - t132 * t48 + (t129 * t75 - t132 * t76) * qJD(4)) * t130, 0.2e1 * pkin(8) ^ 2 * t177 - 0.2e1 * t47 * t76 + 0.2e1 * t48 * t75, t28, t14, t23, t27, t24, t107, 0.2e1 * t120 * t34 - 0.2e1 * t13 * t133 + 0.2e1 * t42 * t97 + 0.2e1 * t74 * t80, -0.2e1 * t12 * t133 - 0.2e1 * t120 * t35 - 0.2e1 * t41 * t97 + 0.2e1 * t74 * t81, 0.2e1 * t12 * t80 - 0.2e1 * t13 * t81 + 0.2e1 * t34 * t41 - 0.2e1 * t35 * t42, -0.2e1 * t12 * t35 + 0.2e1 * t13 * t34 + 0.2e1 * t74 * t97, t28, t14, t23, t27, t24, t107, 0.2e1 * t120 * t19 - 0.2e1 * t133 * t6 + 0.2e1 * t26 * t80 + 0.2e1 * t42 * t61, -0.2e1 * t120 * t25 - 0.2e1 * t133 * t7 + 0.2e1 * t26 * t81 - 0.2e1 * t41 * t61, 0.2e1 * t19 * t41 - 0.2e1 * t25 * t42 - 0.2e1 * t6 * t81 + 0.2e1 * t7 * t80, 0.2e1 * t19 * t6 - 0.2e1 * t25 * t7 + 0.2e1 * t26 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t66, -t65, 0, 0, 0, 0, 0, 0, 0, 0, t158, t129 * t66 + t204 * t82, t233, -t66 * pkin(3) + t233 * pkin(9), 0, 0, 0, 0, 0, 0, t21, t22, t2, pkin(4) * t193 - t10 * t71 + t11 * t70 + t117 * t66 + t37 * t44 - t38 * t43, 0, 0, 0, 0, 0, 0, t21, t22, t2, -t10 * t53 + t11 * t52 - t17 * t38 + t18 * t37 + t54 * t82 + t66 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208, 0, -t120, 0, -t118, pkin(8) * t120, 0, 0, -t72, -0.4e1 * t130 * t178 - t208 * t213, t120 * t129 - t182, t72, t149, 0 (pkin(9) * t216 + (-t227 + t228) * t130) * qJD(4) + (t129 * t164 - t111) * qJD(3) (t121 * t132 + t155) * qJD(4) + (t132 * t164 + t198) * qJD(3), t144, -pkin(3) * t118 + pkin(9) * t144, t15, t8, t45, t16, t46, 0, t117 * t42 + t120 * t70 - t133 * t44 + t196 * t80 + t64 * t97 + t74 * t92, -t117 * t41 - t120 * t71 - t133 * t43 + t196 * t81 - t63 * t97 + t74 * t93, t12 * t92 - t13 * t93 + t34 * t63 - t35 * t64 + t41 * t70 - t42 * t71 + t43 * t80 - t44 * t81, t117 * t74 - t12 * t71 + t13 * t70 + t196 * t97 + t34 * t44 - t35 * t43, t15, t8, t45, t16, t46, 0, t120 * t52 - t133 * t18 + t26 * t92 + t42 * t77 + t54 * t80 + t61 * t64, -t120 * t53 - t133 * t17 + t26 * t93 - t41 * t77 + t54 * t81 - t61 * t63, t17 * t80 - t18 * t81 + t19 * t63 - t25 * t64 + t41 * t52 - t42 * t53 - t6 * t93 + t7 * t92, -t17 * t25 + t18 * t19 + t26 * t77 + t52 * t6 - t53 * t7 + t54 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t178, -0.2e1 * t172, 0, -0.2e1 * t178, 0, 0, t129 * t200, t132 * t200, 0, 0, t51, t20, 0, t50, 0, 0, 0.2e1 * t117 * t64 + 0.2e1 * t196 * t92, -0.2e1 * t117 * t63 + 0.2e1 * t196 * t93, 0.2e1 * t43 * t92 - 0.2e1 * t44 * t93 + 0.2e1 * t63 * t70 - 0.2e1 * t64 * t71, 0.2e1 * t117 * t196 - 0.2e1 * t43 * t71 + 0.2e1 * t44 * t70, t51, t20, 0, t50, 0, 0, 0.2e1 * t54 * t92 + 0.2e1 * t64 * t77, 0.2e1 * t54 * t93 - 0.2e1 * t63 * t77, 0.2e1 * t17 * t92 - 0.2e1 * t18 * t93 + 0.2e1 * t52 * t63 - 0.2e1 * t53 * t64, -0.2e1 * t17 * t53 + 0.2e1 * t18 * t52 + 0.2e1 * t54 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140, t234, 0, 0, 0, 0, 0, 0, 0, 0, t11, t10, 0 (t11 * t230 - t192) * pkin(4) + t231, 0, 0, 0, 0, 0, 0, t11, t10, 0, -pkin(4) * t192 + t11 * t116 + t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176 - t185, 0, -t241, t120, t48, t47, 0, 0, 0, 0, -t41, 0, -t42, t120, pkin(4) * t130 * t175 + t104 + t136, t145 (t230 * t41 + t191) * pkin(4) + t225 (t230 * t13 - t12 * t128 + (-t128 * t34 + t230 * t35) * qJD(5)) * pkin(4), 0, 0, -t41, 0, -t42, t120, t116 * t120 + t104 + t6, t145 + t240, pkin(4) * t191 + t116 * t41 + t225, t6 * t116 + (-t128 * t7 + (-t128 * t19 + t230 * t25) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, 0, -t206, 0, -pkin(9) * t204, pkin(9) * t206, 0, 0, 0, 0, -t63, 0, -t64, 0, t44, t43 (t230 * t63 + t190) * pkin(4) + t224 (t230 * t44 - t128 * t43 + (-t128 * t70 + t230 * t71) * qJD(5)) * pkin(4), 0, 0, -t63, 0, -t64, 0, t18, t17, pkin(4) * t190 + t116 * t63 + t224, t18 * t116 + (-t128 * t17 + (-t128 * t52 + t230 * t53) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, t113, 0, 0, 0, 0, 0, 0, 0, 0, t112, t113, 0, 0.2e1 * (t197 - t116) * t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, t10, 0, 0, 0, 0, 0, 0, 0, 0, t11, t10, 0, t11 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, 0, -t42, t120, t13, t12, 0, 0, 0, 0, -t41, 0, -t42, t120, 0.2e1 * t119 + t135, t7, t41 * pkin(5), t6 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t63, 0, -t64, 0, t44, t43, 0, 0, 0, 0, -t63, 0, -t64, 0, t18, t17, t63 * pkin(5), t18 * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195, -t169, 0, 0, 0, 0, 0, 0, 0, 0, -t195, -t169, 0, -pkin(5) * t195; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, -t41, 0, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, -t63, 0, t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t9;
