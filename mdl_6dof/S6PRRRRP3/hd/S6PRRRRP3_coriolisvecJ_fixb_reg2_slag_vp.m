% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRRP3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:11:07
% EndTime: 2019-03-09 00:11:24
% DurationCPUTime: 6.45s
% Computational Cost: add. (8817->527), mult. (22061->706), div. (0->0), fcn. (16372->10), ass. (0->252)
t227 = sin(qJ(3));
t230 = cos(qJ(3));
t248 = pkin(3) * t227 - pkin(9) * t230;
t185 = t248 * qJD(3);
t189 = -pkin(3) * t230 - pkin(9) * t227 - pkin(2);
t226 = sin(qJ(4));
t228 = sin(qJ(2));
t229 = cos(qJ(4));
t289 = qJD(4) * t229;
t291 = qJD(4) * t226;
t293 = qJD(3) * t229;
t223 = sin(pkin(6));
t300 = qJD(1) * t223;
t231 = cos(qJ(2));
t307 = t230 * t231;
t334 = t226 * t185 + t189 * t289 + (-t227 * t293 - t230 * t291) * pkin(8) - (t226 * t228 + t229 * t307) * t300;
t294 = qJD(3) * t227;
t350 = pkin(8) * t226;
t377 = t229 * t185 + t294 * t350 - (-t226 * t307 + t228 * t229) * t300;
t308 = t229 * t230;
t211 = pkin(8) * t308;
t244 = pkin(4) * t227 - pkin(10) * t308;
t376 = t244 * qJD(3) + (-t211 + (pkin(10) * t227 - t189) * t226) * qJD(4) + t377;
t269 = t227 * t289;
t292 = qJD(3) * t230;
t271 = t226 * t292;
t364 = t269 + t271;
t375 = pkin(10) * t364 - t334;
t296 = qJD(2) * t230;
t272 = t226 * t296;
t352 = -pkin(10) - pkin(9);
t279 = qJD(4) * t352;
t277 = t228 * t300;
t187 = qJD(2) * pkin(8) + t277;
t224 = cos(pkin(6));
t299 = qJD(1) * t224;
t145 = -t227 * t187 + t230 * t299;
t182 = t248 * qJD(2);
t99 = t229 * t145 + t226 * t182;
t374 = pkin(10) * t272 + t226 * t279 - t99;
t98 = -t145 * t226 + t229 * t182;
t373 = qJD(2) * t244 - t229 * t279 + t98;
t297 = qJD(2) * t227;
t175 = -t226 * t297 + t293;
t295 = qJD(3) * t226;
t176 = t229 * t297 + t295;
t225 = sin(qJ(5));
t351 = cos(qJ(5));
t113 = -t351 * t175 + t176 * t225;
t111 = t113 ^ 2;
t241 = t225 * t175 + t351 * t176;
t353 = t241 ^ 2;
t372 = -t111 + t353;
t288 = qJD(5) * t225;
t371 = pkin(4) * t288;
t370 = t351 * pkin(4);
t209 = -qJD(4) + t296;
t200 = -qJD(5) + t209;
t327 = t113 * t200;
t290 = qJD(4) * t227;
t264 = qJD(2) * t290;
t286 = qJD(2) * qJD(3);
t365 = qJD(3) * qJD(4) + t230 * t286;
t141 = t226 * t264 - t365 * t229;
t266 = t351 * qJD(5);
t280 = t365 * t226 + t229 * t264;
t54 = t351 * t141 - t175 * t266 + t176 * t288 + t225 * t280;
t369 = -t54 - t327;
t368 = t113 * qJ(6);
t367 = t113 * t241;
t278 = t351 * t229;
t312 = t225 * t226;
t355 = qJD(4) + qJD(5);
t356 = t351 * qJD(4) + t266;
t304 = -t225 * t272 - t356 * t229 + t278 * t296 + t355 * t312;
t178 = t225 * t229 + t351 * t226;
t123 = t355 * t178;
t303 = -t178 * t296 + t123;
t324 = t241 * t200;
t55 = qJD(5) * t241 - t225 * t141 + t351 * t280;
t366 = -t55 - t324;
t136 = -qJD(3) * pkin(3) - t145;
t101 = -pkin(4) * t175 + t136;
t215 = t227 * t286;
t298 = qJD(2) * t223;
t273 = t231 * t298;
t238 = qJD(1) * (qJD(3) * t224 + t273);
t106 = -t187 * t294 + t230 * t238;
t144 = (t185 + t277) * qJD(2);
t146 = t187 * t230 + t227 * t299;
t137 = qJD(3) * pkin(9) + t146;
t276 = t231 * t300;
t148 = qJD(2) * t189 - t276;
t89 = t137 * t229 + t148 * t226;
t45 = -qJD(4) * t89 - t106 * t226 + t229 * t144;
t29 = pkin(4) * t215 + pkin(10) * t141 + t45;
t44 = t229 * t106 - t137 * t291 + t226 * t144 + t148 * t289;
t34 = -pkin(10) * t280 + t44;
t88 = -t137 * t226 + t229 * t148;
t71 = -pkin(10) * t176 + t88;
t61 = -pkin(4) * t209 + t71;
t72 = pkin(10) * t175 + t89;
t262 = -t225 * t29 - t61 * t266 + t72 * t288 - t351 * t34;
t363 = t101 * t113 + t262;
t174 = t229 * t189;
t309 = t227 * t229;
t118 = -pkin(10) * t309 + t174 + (-pkin(4) - t350) * t230;
t151 = t226 * t189 + t211;
t311 = t226 * t227;
t128 = -pkin(10) * t311 + t151;
t347 = t118 * t266 - t128 * t288 + t376 * t225 - t375 * t351;
t75 = t225 * t118 + t351 * t128;
t346 = -t75 * qJD(5) + t375 * t225 + t376 * t351;
t194 = t352 * t226;
t195 = t352 * t229;
t140 = t225 * t194 - t351 * t195;
t342 = t140 * qJD(5) + t374 * t225 + t373 * t351;
t341 = -t194 * t266 - t195 * t288 + t373 * t225 - t374 * t351;
t261 = -pkin(5) * t113 - qJD(6);
t62 = t101 - t261;
t362 = t62 * t241;
t361 = t209 * t88 + t44;
t360 = t209 * t89 - t45;
t359 = qJ(6) * t241;
t250 = -t146 + (-t272 + t291) * pkin(4);
t208 = pkin(5) * t215;
t357 = -t241 * qJD(6) + t208;
t263 = -t225 * t34 + t351 * t29;
t68 = t351 * t72;
t31 = t225 * t61 + t68;
t5 = -qJD(5) * t31 + t263;
t354 = -t101 * t241 + t5;
t282 = t225 * t311;
t156 = t227 * t278 - t282;
t253 = t351 * t292;
t81 = t123 * t227 + t225 * t271 - t229 * t253;
t349 = pkin(5) * t294 + t81 * qJ(6) - t156 * qJD(6) + t346;
t155 = t178 * t227;
t270 = t226 * t290;
t82 = t226 * t253 - t225 * t270 - qJD(5) * t282 + (t225 * t292 + t356 * t227) * t229;
t348 = -qJ(6) * t82 - qJD(6) * t155 + t347;
t66 = t225 * t72;
t30 = t351 * t61 - t66;
t23 = t30 - t359;
t22 = -pkin(5) * t200 + t23;
t345 = t22 - t23;
t344 = pkin(5) * t297 - t304 * qJ(6) + t178 * qJD(6) + t342;
t177 = -t278 + t312;
t343 = t303 * qJ(6) + qJD(6) * t177 + t341;
t36 = t351 * t71 - t66;
t340 = qJD(2) * pkin(2);
t337 = t54 * qJ(6);
t259 = pkin(4) * t266;
t336 = -t225 * pkin(4) * t55 - t113 * t259;
t335 = t303 * pkin(5) + t250;
t333 = t151 * qJD(4) - t377;
t107 = t187 * t292 + t227 * t238;
t315 = t223 * t228;
t160 = -t224 * t230 + t227 * t315;
t332 = t107 * t160;
t331 = t107 * t226;
t330 = t107 * t227;
t329 = t107 * t229;
t323 = t136 * t226;
t322 = t136 * t229;
t321 = t141 * t226;
t320 = t175 * t209;
t319 = t176 * t175;
t318 = t176 * t209;
t317 = t209 * t226;
t316 = t209 * t229;
t314 = t223 * t231;
t233 = qJD(2) ^ 2;
t313 = t223 * t233;
t310 = t226 * t230;
t232 = qJD(3) ^ 2;
t306 = t232 * t227;
t305 = t232 * t230;
t186 = pkin(4) * t311 + t227 * pkin(8);
t221 = t227 ^ 2;
t222 = t230 ^ 2;
t301 = t221 - t222;
t283 = t228 * t313;
t281 = t227 * t233 * t230;
t147 = pkin(4) * t364 + pkin(8) * t292;
t218 = -pkin(4) * t229 - pkin(3);
t274 = t228 * t298;
t268 = t200 * t297;
t35 = -t225 * t71 - t68;
t74 = t351 * t118 - t128 * t225;
t139 = t351 * t194 + t195 * t225;
t258 = t113 * t276;
t257 = t241 * t276;
t256 = t227 * t276;
t255 = t227 * t273;
t254 = t230 * t273;
t252 = t225 * t215;
t251 = t230 * t215;
t249 = t280 * t229;
t188 = -t276 - t340;
t247 = -t188 - t276;
t246 = -t226 * t89 - t229 * t88;
t245 = qJD(2) * t221 - t209 * t230;
t243 = qJ(6) * t55 + t262;
t161 = t224 * t227 + t230 * t315;
t126 = -t161 * t226 - t229 * t314;
t242 = -t161 * t229 + t226 * t314;
t77 = t351 * t126 + t225 * t242;
t78 = t225 * t126 - t242 * t351;
t240 = qJD(2) * t247;
t3 = -qJD(6) * t113 - t243;
t237 = qJD(3) * (-t247 - t340);
t235 = t106 * t230 + t330 + (-t145 * t230 - t146 * t227) * qJD(3);
t234 = t5 + t337;
t80 = pkin(4) * t280 + t107;
t32 = t55 * pkin(5) + t80;
t217 = pkin(5) + t370;
t171 = t200 * t259;
t154 = pkin(5) * t177 + t218;
t150 = -pkin(8) * t310 + t174;
t149 = (-t200 - t296) * t294;
t125 = qJD(3) * t161 + t255;
t124 = -qJD(3) * t160 + t254;
t120 = pkin(5) * t155 + t186;
t103 = -qJ(6) * t177 + t140;
t102 = -qJ(6) * t178 + t139;
t95 = pkin(4) * t176 + pkin(5) * t241;
t65 = qJD(4) * t126 + t124 * t229 + t226 * t274;
t64 = qJD(4) * t242 - t124 * t226 + t229 * t274;
t58 = pkin(5) * t82 + t147;
t57 = -qJ(6) * t155 + t75;
t56 = -pkin(5) * t230 - qJ(6) * t156 + t74;
t47 = t303 * t200 + (-qJD(3) * t177 + t113) * t297;
t46 = t304 * t200 + (qJD(3) * t178 - t241) * t297;
t26 = t36 - t359;
t25 = t35 + t368;
t24 = t31 - t368;
t21 = t113 * t82 + t155 * t55;
t20 = -t156 * t54 - t241 * t81;
t17 = t113 * t303 + t177 * t55;
t16 = -t178 * t54 - t241 * t304;
t15 = -t78 * qJD(5) - t225 * t65 + t351 * t64;
t14 = t77 * qJD(5) + t225 * t64 + t351 * t65;
t13 = t200 * t82 + t230 * t55 + (-qJD(2) * t155 - t113) * t294;
t12 = t200 * t81 + t230 * t54 + (qJD(2) * t156 + t241) * t294;
t9 = t113 * t81 + t155 * t54 - t156 * t55 - t241 * t82;
t8 = t113 * t304 + t177 * t54 - t178 * t55 - t241 * t303;
t7 = t113 * t125 - t15 * t200 + t160 * t55 + t215 * t77;
t6 = t125 * t241 + t14 * t200 - t160 * t54 - t215 * t78;
t2 = t234 + t357;
t1 = -t113 * t14 - t15 * t241 + t54 * t77 - t55 * t78;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t283, -t231 * t313, 0, 0, 0, 0, 0, 0, 0, 0, -t230 * t283 + (-t125 - t255) * qJD(3), t227 * t283 + (-t124 - t254) * qJD(3) (t124 * t230 + t125 * t227 + (t160 * t230 - t161 * t227) * qJD(3)) * qJD(2), t106 * t161 + t332 + t124 * t146 - t125 * t145 + (t188 - t276) * t274, 0, 0, 0, 0, 0, 0, -t125 * t175 + t126 * t215 + t160 * t280 - t64 * t209, t125 * t176 - t141 * t160 + t209 * t65 + t215 * t242, t126 * t141 + t65 * t175 - t64 * t176 + t242 * t280, t125 * t136 + t126 * t45 - t242 * t44 + t64 * t88 + t65 * t89 + t332, 0, 0, 0, 0, 0, 0, t7, t6, t1, t101 * t125 + t14 * t31 + t15 * t30 + t160 * t80 - t262 * t78 + t5 * t77, 0, 0, 0, 0, 0, 0, t7, t6, t1, t125 * t62 + t14 * t24 + t15 * t22 + t160 * t32 + t2 * t77 + t3 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t251, -0.2e1 * t301 * t286, t305, -0.2e1 * t251, -t306, 0, -pkin(8) * t305 + t227 * t237, pkin(8) * t306 + t230 * t237 (-t221 - t222) * qJD(1) * t273 + t235 ((t145 * t227 - t146 * t230) * t231 + (-t188 - t340) * t228) * t300 + t235 * pkin(8), -t141 * t309 + (t229 * t292 - t270) * t176 (t175 * t229 - t176 * t226) * t292 + (-t249 + t321 + (-t175 * t226 - t176 * t229) * qJD(4)) * t227, t209 * t270 + t141 * t230 + (t176 * t227 + t229 * t245) * qJD(3), -t175 * t364 + t280 * t311, t209 * t269 + t280 * t230 + (t175 * t227 - t226 * t245) * qJD(3) (-t209 - t296) * t294, t333 * t209 + (-t45 + (-pkin(8) * t175 + t323) * qJD(3)) * t230 + (pkin(8) * t280 + t331 + t136 * t289 + t175 * t276 + (qJD(2) * t150 + t88) * qJD(3)) * t227, t334 * t209 + (t44 + (pkin(8) * t176 + t322) * qJD(3)) * t230 + (-t176 * t276 - t136 * t291 - pkin(8) * t141 + t329 + (-qJD(2) * t151 - t89) * qJD(3)) * t227, -t151 * t280 + t150 * t141 + t333 * t176 + t334 * t175 + t246 * t292 + (-t44 * t226 - t45 * t229 + (t226 * t88 - t229 * t89) * qJD(4)) * t227, -t136 * t256 + t150 * t45 + t151 * t44 + t334 * t89 - t333 * t88 + (t136 * t292 + t330) * pkin(8), t20, t9, t12, t21, t13, t149, t101 * t82 + t113 * t147 + t155 * t80 + t186 * t55 - t230 * t5 - t346 * t200 + (-t258 + (qJD(2) * t74 + t30) * qJD(3)) * t227, -t101 * t81 + t241 * t147 + t156 * t80 - t186 * t54 - t230 * t262 + t347 * t200 + (-t257 + (-qJD(2) * t75 - t31) * qJD(3)) * t227, -t113 * t347 + t155 * t262 - t156 * t5 - t241 * t346 + t30 * t81 - t31 * t82 + t54 * t74 - t55 * t75, t186 * t80 - t262 * t75 + t5 * t74 + t347 * t31 + t346 * t30 + (t147 - t256) * t101, t20, t9, t12, t21, t13, t149, t113 * t58 + t120 * t55 + t155 * t32 - t2 * t230 + t62 * t82 - t349 * t200 + (-t258 + (qJD(2) * t56 + t22) * qJD(3)) * t227, t241 * t58 - t120 * t54 + t156 * t32 + t230 * t3 - t62 * t81 + t348 * t200 + (-t257 + (-qJD(2) * t57 - t24) * qJD(3)) * t227, -t348 * t113 - t155 * t3 - t156 * t2 + t22 * t81 - t24 * t82 - t241 * t349 + t54 * t56 - t55 * t57, t120 * t32 + t2 * t56 + t3 * t57 + (t58 - t256) * t62 + t348 * t24 + t349 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t281, t301 * t233, 0, t281, 0, 0, t227 * t240, t230 * t240, 0, 0, -t176 * t316 - t321 (-t141 - t320) * t229 + (-t280 + t318) * t226, -t209 * t289 + (t209 * t308 + (-t176 + t295) * t227) * qJD(2), t175 * t317 - t249, t209 * t291 + (-t209 * t310 + (-t175 + t293) * t227) * qJD(2), t209 * t297, -pkin(3) * t280 - t329 + t98 * t209 + t146 * t175 + (pkin(9) * t316 + t323) * qJD(4) + (-t88 * t227 + (-pkin(9) * t294 - t136 * t230) * t226) * qJD(2), pkin(3) * t141 + t331 - t146 * t176 - t209 * t99 + (-pkin(9) * t317 + t322) * qJD(4) + (-t136 * t308 + (-pkin(9) * t293 + t89) * t227) * qJD(2), -t99 * t175 + t98 * t176 + ((qJD(4) * t176 - t280) * pkin(9) + t361) * t229 + ((-qJD(4) * t175 - t141) * pkin(9) + t360) * t226, -pkin(3) * t107 - t136 * t146 - t88 * t98 - t89 * t99 + (qJD(4) * t246 - t45 * t226 + t44 * t229) * pkin(9), t16, t8, t46, t17, t47, t268, t177 * t80 + t218 * t55 + t342 * t200 + t250 * t113 + t303 * t101 + (qJD(3) * t139 - t30) * t297, t178 * t80 - t218 * t54 - t341 * t200 + t250 * t241 - t304 * t101 + (-qJD(3) * t140 + t31) * t297, t113 * t341 + t139 * t54 - t140 * t55 + t177 * t262 - t178 * t5 + t241 * t342 + t30 * t304 - t303 * t31, t101 * t250 + t139 * t5 - t140 * t262 + t218 * t80 - t30 * t342 - t31 * t341, t16, t8, t46, t17, t47, t268, t154 * t55 + t177 * t32 + t303 * t62 + t344 * t200 + t335 * t113 + (qJD(3) * t102 - t22) * t297, -t154 * t54 + t178 * t32 - t304 * t62 - t343 * t200 + t335 * t241 + (-qJD(3) * t103 + t24) * t297, t102 * t54 - t103 * t55 + t113 * t343 - t177 * t3 - t178 * t2 + t22 * t304 - t24 * t303 + t241 * t344, t102 * t2 + t103 * t3 + t154 * t32 - t22 * t344 - t24 * t343 + t335 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319, -t175 ^ 2 + t176 ^ 2, -t141 + t320, t319, -t280 - t318, t215, -t136 * t176 - t360, -t136 * t175 - t361, 0, 0, t367, t372, t369, -t367, t366, t215, t35 * t200 + (-t113 * t176 + t200 * t288 + t351 * t215) * pkin(4) + t354, -t200 * t36 + t171 + (-t176 * t241 - t252) * pkin(4) + t363, t54 * t370 + t336 + (t31 + t35 + t371) * t241 + (t36 - t30) * t113, -t30 * t35 - t31 * t36 + (t351 * t5 - t101 * t176 - t225 * t262 + (-t225 * t30 + t351 * t31) * qJD(5)) * pkin(4), t367, t372, t369, -t367, t366, t215, t217 * t215 + t337 - t362 - t95 * t113 + t25 * t200 + (-t68 + (pkin(4) * t200 - t61) * t225) * qJD(5) + t263 + t357, -pkin(4) * t252 + t113 * t62 - t200 * t26 - t241 * t95 + t171 - t3, t217 * t54 + t336 + (t24 + t25 + t371) * t241 + (t26 - t22) * t113, t2 * t217 - t22 * t25 - t24 * t26 - t62 * t95 + (t225 * t3 + (-t22 * t225 + t351 * t24) * qJD(5)) * pkin(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t367, t372, t369, -t367, t366, t215, -t31 * t200 + t354, -t200 * t30 + t363, 0, 0, t367, t372, t369, -t367, t366, t215, -t24 * t200 + 0.2e1 * t208 + (t261 - t62) * t241 + t234, -pkin(5) * t353 - t200 * t23 + (qJD(6) + t62) * t113 + t243, pkin(5) * t54 - t113 * t345, t345 * t24 + (t2 - t362) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55 - t324, -t54 + t327, -t111 - t353, t24 * t113 + t22 * t241 + t32;];
tauc_reg  = t4;
