% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRRP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRRP3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:11:11
% EndTime: 2019-03-09 00:11:41
% DurationCPUTime: 17.71s
% Computational Cost: add. (11681->687), mult. (27229->992), div. (0->0), fcn. (29710->10), ass. (0->522)
t518 = cos(qJ(3));
t514 = sin(qJ(3));
t613 = -pkin(3) * t518 - pkin(9) * t514;
t465 = -pkin(2) + t613;
t517 = cos(qJ(4));
t442 = t517 * t465;
t724 = t514 * t517;
t618 = -pkin(10) * t724 + t442;
t513 = sin(qJ(4));
t775 = pkin(8) * t513;
t330 = (-pkin(4) - t775) * t518 + t618;
t516 = cos(qJ(5));
t308 = t516 * t330;
t715 = t517 * t518;
t678 = pkin(8) * t715;
t400 = t465 * t513 + t678;
t726 = t513 * t514;
t356 = -pkin(10) * t726 + t400;
t512 = sin(qJ(5));
t733 = t512 * t356;
t210 = -t308 + t733;
t717 = t516 * t517;
t422 = -t512 * t726 + t514 * t717;
t414 = t422 * qJ(6);
t153 = -t210 - t414;
t150 = -pkin(5) * t518 + t153;
t817 = pkin(9) + pkin(10);
t471 = t817 * t517;
t457 = t516 * t471;
t470 = t817 * t513;
t729 = t512 * t470;
t373 = t457 - t729;
t728 = t512 * t513;
t448 = -t717 + t728;
t280 = -qJ(6) * t448 + t373;
t853 = -t280 / 0.2e1;
t854 = t150 * t853;
t511 = sin(pkin(6));
t515 = sin(qJ(2));
t736 = t511 * t515;
t759 = cos(pkin(6));
t429 = t514 * t736 - t518 * t759;
t795 = -t429 / 0.2e1;
t519 = cos(qJ(2));
t735 = t511 * t519;
t662 = t517 * t735;
t633 = t759 * t514;
t665 = t518 * t736;
t430 = t633 + t665;
t741 = t430 * t513;
t353 = t662 + t741;
t664 = t513 * t735;
t740 = t430 * t517;
t354 = -t664 + t740;
t630 = t516 * t353 + t512 * t354;
t813 = -t630 / 0.2e1;
t797 = -t422 / 0.2e1;
t852 = t280 * t797;
t682 = qJD(4) + qJD(5);
t339 = t516 * t356;
t211 = t512 * t330 + t339;
t718 = t516 * t513;
t727 = t512 * t517;
t452 = t718 + t727;
t419 = t452 * t514;
t758 = qJ(6) * t419;
t154 = t211 - t758;
t725 = t513 * t518;
t681 = pkin(8) * t725;
t355 = t618 - t681;
t734 = t512 * t355;
t227 = -t339 - t734;
t167 = t227 + t758;
t851 = t154 + t167;
t714 = t518 * t519;
t722 = t515 * t517;
t395 = (-t513 * t714 + t722) * t511;
t720 = t516 * t395;
t723 = t515 * t513;
t396 = (t517 * t714 + t723) * t511;
t730 = t512 * t396;
t566 = -t730 / 0.2e1 + t720 / 0.2e1;
t742 = t429 * t422;
t651 = -t742 / 0.2e1;
t597 = t512 * t353 - t516 * t354;
t835 = t597 * t518;
t837 = t835 / 0.2e1 + t651 + t566;
t850 = qJD(1) * t837;
t719 = t516 * t396;
t731 = t512 * t395;
t567 = -t731 / 0.2e1 - t719 / 0.2e1;
t848 = t419 * t795 + t518 * t813;
t839 = t567 - t848;
t849 = qJD(1) * t839;
t565 = t727 / 0.2e1 + t718 / 0.2e1;
t790 = -t452 / 0.2e1;
t191 = (t790 + t565) * t429;
t847 = qJD(2) * t837 + t191 * qJD(3);
t641 = t717 / 0.2e1;
t564 = t641 - t728 / 0.2e1;
t791 = t448 / 0.2e1;
t192 = (t791 + t564) * t429;
t846 = qJD(2) * t839 + t192 * qJD(3);
t792 = -t448 / 0.2e1;
t193 = (t564 + t792) * t429;
t840 = t567 + t848;
t845 = qJD(2) * t840 + t193 * qJD(3) + t630 * t682;
t266 = t429 * t452;
t650 = t266 / 0.2e1;
t194 = t429 * t565 + t650;
t693 = qJD(5) * t597;
t300 = t742 / 0.2e1;
t838 = -t835 / 0.2e1 + t300 + t566;
t844 = qJD(2) * t838 + t194 * qJD(3) + qJD(4) * t597 + t693;
t811 = t597 / 0.2e1;
t843 = t150 * t811;
t810 = -t597 / 0.2e1;
t812 = t630 / 0.2e1;
t629 = t516 * t470 + t512 * t471;
t829 = -t452 * qJ(6) - t629;
t836 = t829 / 0.2e1;
t807 = -t829 / 0.2e1;
t635 = t836 + t807;
t831 = t635 * t154;
t830 = t635 * t597;
t691 = t191 * qJD(1);
t781 = pkin(4) * t517;
t503 = -pkin(3) - t781;
t702 = qJD(3) * t503;
t766 = t518 * pkin(9);
t768 = t514 * pkin(3);
t472 = -t766 + t768;
t458 = t517 * t472;
t494 = pkin(8) * t726;
t338 = t514 * pkin(4) - pkin(10) * t715 + t458 + t494;
t310 = t516 * t338;
t455 = t513 * t472;
t680 = pkin(8) * t724;
t360 = -pkin(10) * t725 + t455 - t680;
t732 = t512 * t360;
t610 = t310 / 0.2e1 - t732 / 0.2e1;
t737 = t503 * t422;
t541 = -t737 / 0.2e1 + t610;
t769 = t513 * pkin(4);
t661 = pkin(8) + t769;
t614 = t661 * t514;
t578 = -t614 / 0.2e1;
t748 = t373 * t518;
t86 = -t748 / 0.2e1 + t452 * t578 + t541;
t828 = qJD(2) * t86 - t452 * t702 + t691;
t290 = t448 * t769 + t452 * t503;
t669 = t769 / 0.2e1;
t782 = t518 / 0.2e1;
t531 = -t373 * t782 - t419 * t669;
t767 = t516 * pkin(4);
t668 = t767 / 0.2e1;
t674 = -t781 / 0.2e1;
t58 = (t448 * t674 + t661 * t790 + t668) * t514 + t531 + t541;
t827 = t58 * qJD(2) - t290 * qJD(3) + t691;
t826 = t154 * t790 + t852;
t798 = -t419 / 0.2e1;
t799 = t419 / 0.2e1;
t825 = t150 * t791 + t826 + (t798 + t799) * t829;
t507 = t513 ^ 2;
t509 = t517 ^ 2;
t487 = t509 - t507;
t684 = t514 * qJD(2);
t660 = t517 * t684;
t824 = qJD(3) * t487 - 0.2e1 * t513 * t660;
t690 = t192 * qJD(1);
t821 = t629 * t682 - t690;
t820 = t422 ^ 2;
t819 = t452 ^ 2;
t818 = -pkin(5) / 0.2e1;
t816 = -t150 / 0.2e1;
t475 = t512 * t725;
t424 = t516 * t715 - t475;
t631 = t310 - t732;
t152 = pkin(5) * t514 - qJ(6) * t424 + t631;
t815 = t152 / 0.2e1;
t814 = t154 / 0.2e1;
t252 = t720 - t730;
t809 = t252 / 0.2e1;
t802 = t280 / 0.2e1;
t801 = -t308 / 0.2e1;
t800 = -t330 / 0.2e1;
t643 = -t339 / 0.2e1;
t796 = t422 / 0.2e1;
t794 = t429 / 0.2e1;
t793 = t430 / 0.2e1;
t789 = t452 / 0.2e1;
t642 = -t457 / 0.2e1;
t788 = -t475 / 0.2e1;
t502 = pkin(5) + t767;
t787 = -t502 / 0.2e1;
t786 = t502 / 0.2e1;
t785 = -t514 / 0.2e1;
t784 = t516 / 0.2e1;
t783 = -t518 / 0.2e1;
t780 = pkin(5) * t419;
t779 = pkin(5) * t422;
t778 = pkin(5) * t424;
t777 = pkin(5) * t448;
t776 = pkin(5) * t452;
t774 = t167 * pkin(5);
t773 = t597 * pkin(5);
t772 = t280 * pkin(5);
t421 = t452 * t518;
t771 = t421 * pkin(5);
t770 = t512 * pkin(4);
t636 = t811 + t810;
t637 = t812 + t813;
t34 = t419 * t637 + t422 * t636;
t765 = t34 * qJD(4);
t38 = t448 * t637 + t452 * t636;
t764 = t38 * qJD(4);
t763 = pkin(4) * qJD(4);
t762 = pkin(4) * qJD(5);
t761 = pkin(5) * qJD(5);
t760 = pkin(5) * qJD(6);
t711 = t150 - t153;
t22 = t711 * t419;
t756 = qJD(2) * t22;
t749 = t629 * t518;
t253 = t719 + t731;
t663 = t514 * t735;
t41 = -t252 * t630 - t253 * t597 + t429 * t663;
t746 = t41 * qJD(1);
t745 = t419 * t448;
t267 = t429 * t448;
t42 = -t266 * t630 - t267 * t597 + t429 * t430;
t744 = t42 * qJD(1);
t739 = t452 * t422;
t738 = t503 * t419;
t721 = t516 * t355;
t508 = t514 ^ 2;
t716 = t517 * t508;
t667 = pkin(4) * t782;
t616 = t667 + t355 / 0.2e1;
t94 = t516 * t616 + t801;
t713 = t94 * qJD(2);
t141 = -t739 + t745;
t712 = t682 * t141;
t221 = -t419 * t789 + t422 * t792;
t710 = t682 * t221;
t309 = t512 * t338;
t350 = t516 * t360;
t708 = t350 + t309;
t492 = pkin(4) * t725;
t506 = t518 * pkin(8);
t459 = t506 + t492;
t510 = t518 ^ 2;
t488 = t510 - t508;
t707 = qJD(2) * t422;
t451 = t488 * t513;
t706 = qJD(2) * t451;
t454 = t510 * t517 - t716;
t705 = qJD(2) * t454;
t704 = qJD(2) * t511;
t703 = qJD(3) * t452;
t701 = qJD(3) * t513;
t700 = qJD(3) * t514;
t699 = qJD(3) * t517;
t698 = qJD(3) * t518;
t697 = qJD(3) * t519;
t696 = qJD(4) * t513;
t695 = qJD(4) * t517;
t694 = qJD(4) * t518;
t692 = qJD(5) * t503;
t195 = -t419 * t424 - t421 * t422;
t689 = t195 * qJD(2);
t268 = t419 * t514 - t421 * t518;
t688 = t268 * qJD(2);
t269 = -t422 * t514 + t424 * t518;
t687 = t269 * qJD(2);
t294 = (t790 - t565) * t518;
t284 = t294 * qJD(2);
t295 = t788 + (t641 + t792) * t518;
t285 = t295 * qJD(2);
t686 = t430 * qJD(3);
t685 = t488 * qJD(2);
t683 = t518 * qJD(2);
t679 = pkin(4) * t724;
t677 = pkin(2) * t684;
t676 = pkin(2) * t683;
t675 = t512 * t762;
t673 = t779 / 0.2e1;
t672 = t776 / 0.2e1;
t671 = -t770 / 0.2e1;
t670 = t770 / 0.2e1;
t666 = t787 + t818;
t659 = t513 * t699;
t658 = t514 * t699;
t657 = t513 * t694;
t656 = t517 * t694;
t655 = t519 * t704;
t654 = t513 * t695;
t653 = t514 * t698;
t652 = t514 * t683;
t649 = -t735 / 0.2e1;
t648 = t735 / 0.2e1;
t647 = t512 * t798;
t646 = t512 * t792;
t645 = -t724 / 0.2e1;
t644 = t724 / 0.2e1;
t640 = t516 * t782;
t639 = -t714 / 0.2e1;
t638 = t153 / 0.2e1 + t816;
t634 = -t309 / 0.2e1 - t350 / 0.2e1;
t632 = pkin(4) * t682;
t627 = t682 * t452;
t626 = t682 * t518;
t625 = pkin(4) * t644;
t624 = -qJD(4) + t683;
t622 = t513 * t658;
t620 = t514 * t648;
t619 = t517 * t649;
t617 = t668 + t787;
t615 = t683 - qJD(4) / 0.2e1;
t612 = t769 + t776;
t166 = -qJ(6) * t421 + t708;
t336 = t614 + t780;
t337 = t459 + t771;
t523 = t150 * t650 + t152 * t813 + t166 * t810 + t267 * t814 + t336 * t793 + t337 * t794;
t413 = t503 + t777;
t529 = t413 * t514 * t649 + t252 * t807 + t253 * t853;
t2 = t523 + t529;
t26 = t150 * t152 + t154 * t166 + t336 * t337;
t609 = t2 * qJD(1) + t26 * qJD(2);
t27 = -t154 * t711 + t336 * t779;
t7 = t638 * t597 + (t809 + t651) * pkin(5);
t608 = -qJD(1) * t7 + qJD(2) * t27;
t228 = t721 - t733;
t168 = t228 - t414;
t579 = t679 + t779;
t28 = t150 * t167 + t154 * t168 + t336 * t579;
t521 = t167 * t813 + t168 * t810 + t579 * t794 - t630 * t814 + t843;
t556 = t252 * t786 + t253 * t670;
t5 = -t521 + t556;
t607 = -t5 * qJD(1) + t28 * qJD(2);
t606 = -qJD(5) + t624;
t605 = t448 * t578 - t738 / 0.2e1 + t634;
t21 = -t150 * t424 - t152 * t422 - t154 * t421 - t166 * t419;
t527 = t266 * t797 + t267 * t798 + t421 * t811 + t424 * t812;
t568 = t252 * t790 + t253 * t792;
t24 = t527 - t568;
t604 = t24 * qJD(1) + t21 * qJD(2);
t25 = -t851 * t422 + (t150 - t168) * t419;
t603 = t34 * qJD(1) + t25 * qJD(2);
t45 = -t150 * t422 - t154 * t419;
t570 = -t597 * t798 + t630 * t796;
t62 = t620 - t570;
t602 = -qJD(1) * t62 + qJD(2) * t45;
t536 = t266 * t782 - t419 * t793 + t421 * t795;
t48 = (t448 * t648 + t812) * t514 + t536;
t55 = t210 * t514 - t459 * t419 - t421 * t614 + t518 * t631;
t601 = -t48 * qJD(1) - t55 * qJD(2);
t535 = t267 * t783 + t424 * t795 + t430 * t797;
t49 = (t452 * t648 + t810) * t514 + t535;
t56 = t708 * t518 + t459 * t422 + (t424 * t661 - t211) * t514;
t600 = -t49 * qJD(1) + t56 * qJD(2);
t524 = t153 * t792 + t825 - t826;
t14 = t778 / 0.2e1 + t524;
t599 = qJD(2) * t14;
t598 = qJD(2) * t34 + qJD(3) * t38;
t348 = t422 * t614;
t106 = t227 * t518 - t419 * t679 - t348;
t596 = qJD(2) * t106 + t850;
t107 = t228 * t518 + (-t419 * t661 + t422 * t781) * t514;
t595 = -qJD(2) * t107 + t849;
t131 = -t210 * t518 - t419 * t614;
t594 = -qJD(2) * t131 + t849;
t132 = -t211 * t518 - t348;
t593 = qJD(2) * t132 + t850;
t291 = -t448 * t503 + t452 * t769;
t532 = t629 * t782 + t769 * t797;
t563 = t738 / 0.2e1 + t634;
t57 = (t452 * t674 + t661 * t791 + t671) * t514 + t532 + t563;
t591 = -t57 * qJD(2) + t291 * qJD(3);
t359 = t642 + t457 / 0.2e1;
t92 = t643 + t339 / 0.2e1 + (t800 + t616) * t512;
t590 = t92 * qJD(2) + t359 * qJD(3);
t589 = t624 * t514;
t108 = (t513 * t648 + t354 / 0.2e1 - t740 / 0.2e1) * t514;
t242 = t455 * t518 + (-t400 + t678) * t514;
t588 = -t108 * qJD(1) + t242 * qJD(2);
t109 = (t619 + t353 / 0.2e1 - t741 / 0.2e1) * t514;
t399 = -t442 + t681;
t241 = t399 * t514 + (-t494 + t458) * t518;
t587 = -t109 * qJD(1) - t241 * qJD(2);
t538 = (t513 * t639 + t722 / 0.2e1) * t511;
t550 = t354 * t783 + t429 * t645;
t177 = t538 + t550;
t332 = -pkin(8) * t716 - t400 * t518;
t586 = qJD(1) * t177 + qJD(2) * t332;
t537 = (t517 * t639 - t723 / 0.2e1) * t511;
t551 = t353 * t783 + t726 * t795;
t178 = t537 - t551;
t331 = -t399 * t518 - t508 * t775;
t585 = qJD(1) * t178 - qJD(2) * t331;
t416 = t419 ^ 2;
t244 = t416 - t820;
t69 = qJD(2) * t244 + qJD(3) * t141;
t443 = t448 ^ 2;
t281 = t443 - t819;
t90 = qJD(2) * t141 + qJD(3) * t281;
t190 = t666 * t422 + (t647 + t645) * pkin(4);
t240 = t666 * t452 + (t646 - t513 / 0.2e1) * pkin(4);
t584 = qJD(2) * t190 + qJD(3) * t240;
t575 = t818 - t617;
t206 = t575 * t419;
t247 = t575 * t448;
t583 = qJD(2) * t206 + qJD(3) * t247;
t226 = t739 + t745;
t286 = t416 + t820;
t582 = qJD(2) * t286 + qJD(3) * t226;
t357 = t443 + t819;
t581 = qJD(2) * t226 + qJD(3) * t357;
t580 = t703 + t707;
t577 = t614 / 0.2e1;
t576 = t766 / 0.2e1 - t768 / 0.2e1;
t574 = t617 * t597;
t573 = t492 / 0.2e1 + t506 / 0.2e1 + t771 / 0.2e1;
t553 = t576 * t513;
t351 = t455 / 0.2e1 - t553;
t572 = pkin(3) * t699 - qJD(2) * t351;
t552 = t576 * t517;
t352 = -t458 / 0.2e1 + t552;
t571 = pkin(3) * t701 - qJD(2) * t352;
t569 = -t597 * t792 + t630 * t789;
t87 = t749 / 0.2e1 + t448 * t577 + t563;
t562 = qJD(2) * t87 + t448 * t702;
t560 = t517 * t589;
t123 = qJD(3) * t221 - t419 * t707;
t143 = -qJD(2) * t221 + t448 * t703;
t434 = (t507 / 0.2e1 - t509 / 0.2e1) * t514;
t559 = -qJD(2) * t434 + t659;
t558 = t452 * t577 + t737 / 0.2e1 + t610;
t557 = t152 * t786 + t166 * t670;
t555 = t266 * t786 + t267 * t670;
t554 = t421 * t671 + t424 * t787;
t547 = qJD(2) * t513 * t716 + qJD(3) * t434;
t450 = t487 * t508;
t546 = qJD(2) * t450 + 0.2e1 * t622;
t522 = -t280 * t813 + t612 * t794 - t630 * t802;
t15 = -t522 + t555;
t520 = t854 + t168 * t802 + t336 * t612 / 0.2e1 + t579 * t413 / 0.2e1 + t851 * t836;
t3 = -t520 + t557;
t54 = t413 * t612;
t544 = -t15 * qJD(1) - t3 * qJD(2) + t54 * qJD(3);
t61 = t413 * t776;
t9 = -t638 * t280 - t831 + (t336 * t790 + t413 * t797 + t815) * pkin(5);
t543 = -qJD(1) * t830 - qJD(2) * t9 + qJD(3) * t61;
t11 = (t814 + t167 / 0.2e1) * t452 + (t168 / 0.2e1 + t816) * t448 + (t802 + t853) * t422 + t635 * t419 + t554;
t542 = t38 * qJD(1) - t11 * qJD(2);
t112 = -t280 * t448 - t452 * t829;
t528 = t150 * t789 + t154 * t791 + t280 * t799 + t796 * t829;
t29 = t528 + t573;
t539 = t633 / 0.2e1 + t665 / 0.2e1;
t64 = t539 - t569;
t540 = -qJD(1) * t64 - qJD(2) * t29 + qJD(3) * t112;
t526 = (t154 * t784 + t512 * t638) * pkin(4) + t154 * t787;
t20 = -t774 / 0.2e1 + t526;
t425 = (-t502 + t767) * t770;
t525 = (t280 * t784 + t512 * t635) * pkin(4) + t280 * t787;
t44 = t772 / 0.2e1 + t525;
t53 = -t773 / 0.2e1 - t574;
t530 = -qJD(1) * t53 - qJD(2) * t20 - qJD(3) * t44 - qJD(4) * t425;
t499 = t700 / 0.2e1;
t498 = -t684 / 0.2e1;
t497 = t684 / 0.2e1;
t441 = t615 * t514;
t428 = t434 * qJD(4);
t415 = (-qJD(5) / 0.2e1 + t615) * t514;
t305 = t494 + t458 / 0.2e1 + t552;
t304 = t680 - t455 / 0.2e1 - t553;
t297 = t452 * t782 - t518 * t565;
t296 = t448 * t782 + t517 * t640 + t788;
t287 = t580 * pkin(5);
t283 = 0.2e1 * t642 + t729;
t275 = t429 * t517;
t273 = t429 * t513;
t246 = t777 / 0.2e1 - t617 * t448;
t239 = pkin(4) * t646 + t452 * t787 + t669 + t672;
t230 = qJD(3) * t294 - t422 * t683;
t229 = qJD(3) * t295 - t419 * t683;
t220 = t226 * qJD(6);
t208 = -t627 - t284;
t207 = -t448 * t682 - t285;
t205 = t780 / 0.2e1 - t617 * t419;
t189 = pkin(4) * t647 + t422 * t787 + t625 + t673;
t180 = t538 - t550;
t179 = t537 + t551;
t130 = t297 * qJD(3) + t422 * t606;
t129 = t296 * qJD(3) + t419 * t606;
t111 = t354 * t785 + t430 * t644 + t513 * t620;
t110 = t353 * t785 + t514 * t619 + t726 * t793;
t95 = pkin(4) * t640 + t733 + t801 - t721 / 0.2e1;
t93 = 0.2e1 * t643 - t734 / 0.2e1 + (t667 + t800) * t512;
t89 = t748 / 0.2e1 + t558;
t88 = -t749 / 0.2e1 + t605;
t65 = t539 + t569;
t63 = t620 + t570;
t60 = t452 * t625 + t514 * t671 - t532 + t605;
t59 = t448 * t625 + t514 * t668 - t531 + t558;
t52 = t773 / 0.2e1 - t574;
t51 = t452 * t620 - t597 * t785 - t535;
t50 = t448 * t620 + t630 * t785 - t536;
t43 = -t772 / 0.2e1 + t525;
t30 = -t528 + t573;
t23 = t527 + t568;
t19 = t774 / 0.2e1 + t526;
t18 = 0.2e1 * pkin(5) * t650 - t830;
t16 = t522 + t555;
t13 = -t778 / 0.2e1 + t524;
t12 = t167 * t790 + t168 * t792 + t554 + t825 - t852;
t10 = pkin(5) * t815 + t153 * t802 + t336 * t672 + t413 * t673 + t831 + t854;
t8 = t843 + t153 * t810 + (t300 + t809) * pkin(5);
t6 = t521 + t556;
t4 = t520 + t557;
t1 = t523 - t529;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t41 + qJD(3) * t42; 0, 0, -t515 * t704, -t655, 0, 0, 0, 0, 0 (-t514 * t697 - t515 * t683) * t511 (t515 * t684 - t518 * t697) * t511, 0, 0, 0, 0, 0 (-t395 * t518 + t508 * t664) * qJD(2) + t110 * qJD(3) + t180 * qJD(4) (t396 * t518 + t508 * t662) * qJD(2) + t111 * qJD(3) + t179 * qJD(4), 0, 0, 0, 0, 0 (-t252 * t518 + t419 * t663) * qJD(2) + t50 * qJD(3) + t682 * t838 (t253 * t518 + t422 * t663) * qJD(2) + t51 * qJD(3) + t682 * t840 (-t252 * t422 - t253 * t419) * qJD(2) + t23 * qJD(3) + t765, t746 + (t252 * t150 + t253 * t154 + t336 * t663) * qJD(2) + t1 * qJD(3) + t6 * qJD(4) + t8 * qJD(5) + t63 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t514 * t655 - t686, t429 * qJD(3) - t518 * t655, 0, 0, 0, 0, 0, qJD(2) * t110 + qJD(4) * t273 - t517 * t686, qJD(2) * t111 + qJD(4) * t275 + t513 * t686, 0, 0, 0, 0, 0, t50 * qJD(2) + t194 * t682 + t448 * t686, t51 * qJD(2) + t193 * t682 + t452 * t686, t23 * qJD(2) + (-t266 * t452 - t267 * t448) * qJD(3) + t764, t744 + t1 * qJD(2) + (t266 * t829 + t267 * t280 + t413 * t430) * qJD(3) + t16 * qJD(4) + t18 * qJD(5) + t65 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t180 + qJD(3) * t273 - qJD(4) * t354, qJD(2) * t179 + qJD(3) * t275 + qJD(4) * t353, 0, 0, 0, 0, 0, t844, t845, t598, t6 * qJD(2) + t16 * qJD(3) + (t502 * t597 - t630 * t770) * qJD(4) + t52 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t844, t845, 0, pkin(5) * t693 + qJD(2) * t8 + qJD(3) * t18 + qJD(4) * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t63 + qJD(3) * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t109 - qJD(4) * t177, -qJD(3) * t108 - qJD(4) * t178, 0, 0, 0, 0, 0, -qJD(3) * t48 - t682 * t837, -qJD(3) * t49 - t682 * t839, qJD(3) * t24 + t765, qJD(3) * t2 - qJD(4) * t5 - qJD(5) * t7 - qJD(6) * t62 - t746; 0, 0, 0, 0, t653, t488 * qJD(3), 0, 0, 0, -pkin(2) * t700, -pkin(2) * t698, -t508 * t654 + t509 * t653, -qJD(4) * t450 - 0.2e1 * t518 * t622, -qJD(3) * t454 + t514 * t657, qJD(3) * t451 + t514 * t656, -t653, -qJD(3) * t241 - qJD(4) * t332, qJD(3) * t242 + qJD(4) * t331 (qJD(3) * t424 - t419 * t682) * t422, t195 * qJD(3) + t244 * t682, -t269 * qJD(3) + t419 * t626, -t268 * qJD(3) + t422 * t626, -t653, -qJD(3) * t55 - qJD(4) * t106 - qJD(5) * t132, qJD(3) * t56 + qJD(4) * t107 + qJD(5) * t131, qJD(3) * t21 + qJD(4) * t25 + qJD(5) * t22 + qJD(6) * t286, qJD(3) * t26 + qJD(4) * t28 + qJD(5) * t27 + qJD(6) * t45; 0, 0, 0, 0, t652, t685, t698, -t700, 0, -pkin(8) * t698 - t677, pkin(8) * t700 - t676, -t428 + (t509 * t684 + t659) * t518, -0.2e1 * t514 * t654 + t518 * t824, t513 * t700 - t705, t658 + t706, -t441 (t513 * t613 - t678) * qJD(3) + t305 * qJD(4) + t587 (t517 * t613 + t681) * qJD(3) + t304 * qJD(4) + t588, t424 * t580 + t710, t689 + (-t421 * t452 - t424 * t448) * qJD(3) + t712, t296 * t682 + t452 * t700 - t687, t297 * t682 - t448 * t700 - t688, -t415 (t421 * t503 + t448 * t459 - t514 * t629) * qJD(3) + t59 * qJD(4) + t89 * qJD(5) + t601 (-t373 * t514 + t424 * t503 + t452 * t459) * qJD(3) + t60 * qJD(4) + t88 * qJD(5) + t600 (-t152 * t452 - t166 * t448 - t280 * t421 - t424 * t829) * qJD(3) + t12 * qJD(4) + t13 * qJD(5) + t220 + t604 (t152 * t829 + t166 * t280 + t337 * t413) * qJD(3) + t4 * qJD(4) + t10 * qJD(5) + t30 * qJD(6) + t609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t547, -t546, t513 * t589, t560, t499, qJD(3) * t305 - qJD(4) * t400 - t586, qJD(3) * t304 + qJD(4) * t399 - t585, t123, t69, t129, t130, t499, qJD(3) * t59 + qJD(4) * t227 + qJD(5) * t93 - t596, qJD(3) * t60 - qJD(4) * t228 + qJD(5) * t95 - t595, t12 * qJD(3) + (t502 * t419 - t422 * t770) * qJD(4) + t205 * qJD(5) + t603, t4 * qJD(3) + (t167 * t502 + t168 * t770) * qJD(4) + t19 * qJD(5) + t189 * qJD(6) + t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123, t69, t129, t130, t499, qJD(3) * t89 + qJD(4) * t93 - qJD(5) * t211 - t593, qJD(3) * t88 + qJD(4) * t95 + qJD(5) * t210 - t594, qJD(3) * t13 + qJD(4) * t205 + t419 * t761 + t756, qJD(3) * t10 + qJD(4) * t19 - t154 * t761 + t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t582, qJD(3) * t30 + qJD(4) * t189 + t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t109, qJD(2) * t108, 0, 0, 0, 0, 0, qJD(2) * t48 - t191 * t682, qJD(2) * t49 - t192 * t682, -qJD(2) * t24 + t764, -qJD(2) * t2 - qJD(4) * t15 - qJD(5) * t830 - qJD(6) * t64 - t744; 0, 0, 0, 0, -t652, -t685, 0, 0, 0, t677, t676, -t509 * t652 - t428, 0.2e1 * t513 * t560, -t656 + t705, t657 - t706, t441, qJD(4) * t352 - t587, qJD(4) * t351 - t588, -t424 * t707 + t710, -t689 + t712, -t295 * t682 + t687, -t294 * t682 + t688, t415, -qJD(4) * t58 - qJD(5) * t86 - t601, -qJD(4) * t57 - qJD(5) * t87 - t600, -qJD(4) * t11 + qJD(5) * t14 + t220 - t604, -qJD(4) * t3 - qJD(5) * t9 - qJD(6) * t29 - t609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t654, t487 * qJD(4), 0, 0, 0, -pkin(3) * t696, -pkin(3) * t695, -t448 * t627, t682 * t281, 0, 0, 0, qJD(4) * t290 + t452 * t692, qJD(4) * t291 - t448 * t692, qJD(6) * t357, qJD(4) * t54 + qJD(5) * t61 + qJD(6) * t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t559, t824, -t624 * t517, t624 * t513, t498, -pkin(9) * t695 - t571, pkin(9) * t696 - t572, -t143, t90, t207, t208, t498, -qJD(4) * t373 + t283 * qJD(5) - t827, t591 + t821 (t502 * t448 - t452 * t770) * qJD(4) + t246 * qJD(5) + t542 (-t280 * t502 + t770 * t829) * qJD(4) + t43 * qJD(5) + t239 * qJD(6) + t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t143, t90, t207, t208, t498, qJD(4) * t283 - qJD(5) * t373 - t828, -t562 + t821, qJD(4) * t246 + t448 * t761 + t599, qJD(4) * t43 - t280 * t761 + t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t581, qJD(4) * t239 + t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t177, qJD(2) * t178, 0, 0, 0, 0, 0, t847, t846, -t598, qJD(2) * t5 + qJD(3) * t15 + qJD(5) * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t547, t546 (-t513 * t684 + t699) * t518 (-t660 - t701) * t518, t499, -qJD(3) * t352 + t586, -qJD(3) * t351 + t585, -t123, -t69, t229, t230, t499, qJD(3) * t58 + qJD(5) * t92 + t596, qJD(3) * t57 + qJD(5) * t94 + t595, qJD(3) * t11 + qJD(5) * t206 - t603, qJD(3) * t3 + qJD(5) * t20 + qJD(6) * t190 - t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t559, -t824, t517 * t683, -t513 * t683, t497, t571, t572, t143, -t90, t285, t284, t497, qJD(5) * t359 + t827, t690 - t591, qJD(5) * t247 - t542, qJD(5) * t44 + qJD(6) * t240 - t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t675, -t516 * t762, 0, t425 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t512 * t632 + t590, -t516 * t632 + t713, t583, -pkin(5) * t675 - t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, t846, 0, qJD(2) * t7 + qJD(3) * t830 - qJD(4) * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, -t69, t229, t230, t499, qJD(3) * t86 - qJD(4) * t92 + t593, qJD(3) * t87 - qJD(4) * t94 + t594, -qJD(3) * t14 - qJD(4) * t206 - t756, qJD(3) * t9 - qJD(4) * t20 - t422 * t760 - t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, -t90, t285, t284, t497, -qJD(4) * t359 + t828, t690 + t562, -qJD(4) * t247 - t599, -qJD(4) * t44 - t452 * t760 - t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t512 * t763 - t590, t516 * t763 - t713, -t583, t530; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t62 + qJD(3) * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t582, qJD(3) * t29 - qJD(4) * t190 + t422 * t761 - t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t581, -qJD(4) * t240 + t452 * t761 - t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t584; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t17;
