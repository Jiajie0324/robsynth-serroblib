% Calculate vector of inverse dynamics joint torques for
% S6RRPRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta3]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPRPP2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP2_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP2_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPP2_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPP2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRPP2_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPRPP2_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPRPP2_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPRPP2_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:49:50
% EndTime: 2019-03-09 09:52:27
% DurationCPUTime: 148.02s
% Computational Cost: add. (43778->1560), mult. (64419->1866), div. (0->0), fcn. (60487->8), ass. (0->730)
t1464 = Icges(7,4) + Icges(6,5);
t1463 = Icges(3,3) + Icges(4,3);
t1368 = -Icges(6,1) - Icges(7,1);
t1355 = Icges(5,1) - t1368;
t1459 = Icges(7,2) + Icges(6,3);
t723 = qJ(2) + pkin(9);
t702 = sin(t723);
t703 = cos(t723);
t728 = sin(qJ(2));
t731 = cos(qJ(2));
t1437 = Icges(3,5) * t731 + Icges(4,5) * t703 - Icges(3,6) * t728 - Icges(4,6) * t702;
t1402 = Icges(6,4) + Icges(5,5) - Icges(7,5);
t1401 = Icges(5,6) - Icges(6,6) + Icges(7,6);
t732 = cos(qJ(1));
t1462 = t1463 * t732;
t730 = cos(qJ(4));
t1461 = t1464 * t730;
t727 = sin(qJ(4));
t1460 = (Icges(5,4) - t1464) * t727;
t729 = sin(qJ(1));
t1124 = t729 * t731;
t1127 = t728 * t729;
t1131 = t703 * t729;
t1135 = t702 * t729;
t1429 = -Icges(3,5) * t1124 - Icges(4,5) * t1131 + Icges(3,6) * t1127 + Icges(4,6) * t1135 + t1462;
t1438 = t1437 * t732 + t1463 * t729;
t1458 = -t1459 * t727 - t1461;
t1169 = Icges(4,6) * t732;
t457 = Icges(4,4) * t1131 - Icges(4,2) * t1135 - t1169;
t1170 = Icges(3,6) * t732;
t485 = Icges(3,4) * t1124 - Icges(3,2) * t1127 - t1170;
t1457 = t457 * t702 + t485 * t728;
t1354 = Icges(5,2) + t1459;
t1456 = Icges(6,2) + Icges(5,3) + Icges(7,3);
t1455 = t1401 * t727 - t1402 * t730;
t1454 = t1355 * t730 - t1460;
t1123 = t730 * t732;
t1128 = t727 * t729;
t562 = t1128 * t703 + t1123;
t1120 = t732 * t727;
t1125 = t729 * t730;
t563 = t1125 * t703 - t1120;
t259 = Icges(5,5) * t563 - Icges(5,6) * t562 + Icges(5,3) * t1135;
t265 = Icges(6,4) * t563 + Icges(6,2) * t1135 + Icges(6,6) * t562;
t1453 = t259 + t265;
t1188 = Icges(4,4) * t702;
t589 = Icges(4,1) * t703 - t1188;
t460 = Icges(4,5) * t729 + t589 * t732;
t1189 = Icges(3,4) * t728;
t625 = Icges(3,1) * t731 - t1189;
t488 = Icges(3,5) * t729 + t625 * t732;
t1452 = -t488 * t1124 - t460 * t1131;
t1447 = Icges(3,5) * t728 + Icges(4,5) * t702 + Icges(3,6) * t731 + Icges(4,6) * t703;
t1134 = t702 * t730;
t1451 = t1464 * t1134;
t1179 = Icges(4,5) * t732;
t643 = Icges(4,4) * t1135;
t459 = Icges(4,1) * t1131 - t1179 - t643;
t1180 = Icges(3,5) * t732;
t681 = Icges(3,4) * t1127;
t487 = Icges(3,1) * t1124 - t1180 - t681;
t1425 = -t459 * t703 - t487 * t731 + t1457;
t1185 = Icges(5,4) * t730;
t896 = -Icges(5,2) * t727 + t1185;
t1450 = -t1401 * t703 + t702 * t896;
t511 = Icges(6,5) * t563;
t257 = -Icges(6,6) * t1135 - Icges(6,3) * t562 - t511;
t517 = Icges(5,4) * t563;
t268 = -Icges(5,2) * t562 + Icges(5,6) * t1135 + t517;
t1449 = t257 + t268;
t510 = Icges(6,5) * t562;
t274 = Icges(6,1) * t563 + Icges(6,4) * t1135 + t510;
t516 = Icges(5,4) * t562;
t278 = -Icges(5,1) * t563 - Icges(5,5) * t1135 + t516;
t1448 = t274 - t278;
t586 = Icges(4,2) * t703 + t1188;
t685 = Icges(4,4) * t703;
t588 = Icges(4,1) * t702 + t685;
t622 = Icges(3,2) * t731 + t1189;
t714 = Icges(3,4) * t731;
t624 = Icges(3,1) * t728 + t714;
t1436 = t586 * t702 - t588 * t703 + t622 * t728 - t624 * t731;
t1446 = t1438 * t732 + t1452;
t1122 = t731 * t732;
t1129 = t703 * t732;
t1445 = -t487 * t1122 - t459 * t1129 + t1429 * t729;
t1361 = t488 * t1122 + t460 * t1129 + t1438 * t729;
t1409 = t1455 * t702 + t1456 * t703;
t1444 = -t1455 * t703 + t1456 * t702;
t1136 = t702 * t727;
t1400 = t1136 * t1459 - t1450 + t1451;
t1308 = (-t896 - t1458) * t703 - t1401 * t702;
t1382 = -t1402 * t703 + t1454 * t702;
t1307 = t1402 * t702 + t1454 * t703;
t1443 = (t1401 * t730 + t1402 * t727) * t702;
t1442 = (t1354 * t730 + t1460) * t702;
t1344 = -t1425 * t729 + t1429 * t732;
t897 = -Icges(4,2) * t702 + t685;
t458 = Icges(4,6) * t729 + t732 * t897;
t898 = -Icges(3,2) * t728 + t714;
t486 = Icges(3,6) * t729 + t732 * t898;
t1343 = -t1127 * t486 - t1135 * t458 - t1446;
t1126 = t728 * t732;
t1133 = t702 * t732;
t1342 = -t1126 * t485 - t1133 * t457 - t1445;
t1341 = -t1126 * t486 - t1133 * t458 + t1361;
t565 = t1123 * t703 + t1128;
t512 = Icges(6,5) * t565;
t564 = t1120 * t703 - t1125;
t258 = Icges(6,6) * t1133 + Icges(6,3) * t564 + t512;
t1187 = Icges(5,4) * t565;
t270 = -Icges(5,2) * t564 + Icges(5,6) * t1133 + t1187;
t1441 = t258 - t270;
t261 = Icges(5,5) * t565 - Icges(5,6) * t564 + Icges(5,3) * t1133;
t267 = Icges(6,4) * t565 + Icges(6,2) * t1133 + Icges(6,6) * t564;
t1440 = t261 + t267;
t1177 = Icges(6,5) * t564;
t276 = Icges(6,1) * t565 + Icges(6,4) * t1133 + t1177;
t518 = Icges(5,4) * t564;
t279 = Icges(5,1) * t565 + Icges(5,5) * t1133 - t518;
t1439 = t276 + t279;
t1435 = -t586 * t703 - t588 * t702 - t622 * t731 - t624 * t728;
t1323 = t1447 * t732;
t1322 = t1447 * t729;
t1434 = t458 * t702 + t486 * t728;
t1433 = t1453 * t1133;
t1432 = t1453 * t1135;
t1431 = t1448 * t563 - t1449 * t562 + t1432;
t1430 = -t1448 * t565 + t1449 * t564 - t1433;
t1367 = -t1436 * t729 - t1323;
t1366 = -t1436 * t732 + t1322;
t1340 = t457 * t703 + t459 * t702 + t485 * t731 + t487 * t728;
t1339 = t458 * t703 + t460 * t702 + t486 * t731 + t488 * t728;
t1427 = t1447 * qJD(2);
t1375 = t1135 * t1440 + t1439 * t563 + t1441 * t562;
t515 = Icges(7,4) * t565;
t264 = Icges(7,2) * t564 - Icges(7,6) * t1133 + t515;
t1183 = Icges(7,4) * t564;
t273 = Icges(7,1) * t565 - Icges(7,5) * t1133 + t1183;
t1115 = -t562 * t264 - t563 * t273;
t255 = Icges(7,5) * t565 + Icges(7,6) * t564 - Icges(7,3) * t1133;
t83 = -t1135 * t255 - t1115;
t1390 = t83 + t1375;
t1426 = t460 * t703 + t488 * t731 - t1434;
t1374 = t1133 * t1440 + t1439 * t565 + t1441 * t564;
t1113 = t564 * t264 + t565 * t273;
t89 = -t1133 * t255 + t1113;
t1389 = t89 + t1374;
t1373 = rSges(7,3) + qJ(6);
t1424 = t1373 * t703;
t1043 = qJD(4) * t729;
t1041 = qJD(4) * t732;
t991 = t703 * t1041;
t1046 = qJD(2) * t732;
t998 = t702 * t1046;
t236 = qJD(1) * t562 - t730 * t991 + (-t1043 + t998) * t727;
t1044 = qJD(4) * t703;
t663 = qJD(1) - t1044;
t855 = t663 * t727;
t961 = qJD(1) * t703 - qJD(4);
t237 = t732 * t855 + (-t729 * t961 - t998) * t730;
t1052 = qJD(1) * t729;
t1003 = t702 * t1052;
t996 = t703 * t1046;
t807 = -t996 + t1003;
t120 = Icges(7,5) * t237 - Icges(7,6) * t236 + Icges(7,3) * t807;
t124 = Icges(5,5) * t237 + Icges(5,6) * t236 - Icges(5,3) * t807;
t128 = Icges(6,4) * t237 - Icges(6,2) * t807 - Icges(6,6) * t236;
t1423 = -t120 + t124 + t128;
t1042 = qJD(4) * t730;
t1051 = qJD(1) * t732;
t1048 = qJD(2) * t729;
t999 = t702 * t1048;
t238 = t1042 * t1131 - t730 * t1052 + (t1051 * t703 - t1041 - t999) * t727;
t1047 = qJD(2) * t730;
t239 = t961 * t1123 + (-t1047 * t702 + t855) * t729;
t1394 = t702 * t1051;
t808 = t703 * t1048 + t1394;
t121 = Icges(7,5) * t239 + Icges(7,6) * t238 - Icges(7,3) * t808;
t125 = Icges(5,5) * t239 - Icges(5,6) * t238 + Icges(5,3) * t808;
t129 = Icges(6,4) * t239 + Icges(6,2) * t808 + Icges(6,6) * t238;
t1422 = -t121 + t125 + t129;
t122 = Icges(6,5) * t237 - Icges(6,6) * t807 - Icges(6,3) * t236;
t126 = Icges(7,4) * t237 - Icges(7,2) * t236 + Icges(7,6) * t807;
t130 = Icges(5,4) * t237 + Icges(5,2) * t236 - Icges(5,6) * t807;
t1421 = t122 + t126 - t130;
t123 = Icges(6,5) * t239 + Icges(6,6) * t808 + Icges(6,3) * t238;
t127 = Icges(7,4) * t239 + Icges(7,2) * t238 - Icges(7,6) * t808;
t131 = Icges(5,4) * t239 - Icges(5,2) * t238 + Icges(5,6) * t808;
t1420 = t123 + t127 - t131;
t132 = Icges(7,1) * t237 - Icges(7,4) * t236 + Icges(7,5) * t807;
t134 = Icges(6,1) * t237 - Icges(6,4) * t807 - Icges(6,5) * t236;
t136 = Icges(5,1) * t237 + Icges(5,4) * t236 - Icges(5,5) * t807;
t1419 = t132 + t134 + t136;
t133 = Icges(7,1) * t239 + Icges(7,4) * t238 - Icges(7,5) * t808;
t135 = Icges(6,1) * t239 + Icges(6,4) * t808 + Icges(6,5) * t238;
t137 = Icges(5,1) * t239 - Icges(5,4) * t238 + Icges(5,5) * t808;
t1418 = t133 + t135 + t137;
t1273 = -t1133 * t1409 + t1382 * t565 + t1400 * t564;
t1417 = qJD(2) * t1444 - qJD(4) * t1443;
t1416 = qJD(2) * t1308 + qJD(4) * t1442;
t1045 = qJD(4) * t702;
t501 = (-Icges(5,1) * t727 - t1185) * t702;
t1415 = qJD(4) * t501 + (t1368 * t727 + t1461) * t1045 + t1307 * qJD(2);
t254 = -Icges(7,5) * t563 - Icges(7,6) * t562 + Icges(7,3) * t1135;
t1414 = t254 + t1453;
t1413 = t255 - t1440;
t514 = Icges(7,4) * t563;
t263 = -Icges(7,2) * t562 + Icges(7,6) * t1135 - t514;
t1353 = t263 + t1449;
t1412 = t264 + t1441;
t513 = Icges(7,4) * t562;
t271 = Icges(7,1) * t563 - Icges(7,5) * t1135 + t513;
t1411 = t271 + t1448;
t1410 = t273 + t1439;
t1274 = t1135 * t1409 - t1382 * t563 - t1400 * t562;
t1408 = t1382 * t730 + t1400 * t727;
t567 = t897 * qJD(2);
t568 = t589 * qJD(2);
t596 = t898 * qJD(2);
t597 = t625 * qJD(2);
t1407 = qJD(1) * t1447 + t1435 * qJD(2) - t567 * t702 + t568 * t703 - t596 * t728 + t597 * t731;
t1406 = t1341 * t729 - t1342 * t732;
t1405 = t1343 * t729 - t1344 * t732;
t1404 = t1438 * qJD(1);
t1403 = t1436 * qJD(1) + qJD(2) * t1437;
t935 = t563 * rSges(5,1) - t562 * rSges(5,2);
t287 = rSges(5,3) * t1135 + t935;
t1218 = rSges(5,1) * t730;
t934 = -rSges(5,2) * t727 + t1218;
t444 = -rSges(5,3) * t703 + t702 * t934;
t581 = -t1043 * t702 + t1046;
t1399 = -t287 * t663 - t444 * t581;
t1398 = t732 ^ 2;
t1397 = t1366 * qJD(1);
t813 = qJD(2) * t586;
t247 = -t732 * t813 + (-t729 * t897 + t1169) * qJD(1);
t815 = qJD(2) * t588;
t249 = -t732 * t815 + (-t589 * t729 + t1179) * qJD(1);
t814 = qJD(2) * t622;
t328 = -t732 * t814 + (-t729 * t898 + t1170) * qJD(1);
t816 = qJD(2) * t624;
t330 = -t732 * t816 + (-t625 * t729 + t1180) * qJD(1);
t1396 = -qJD(2) * t1339 - t247 * t702 + t249 * t703 - t328 * t728 + t330 * t731 + t1404;
t248 = qJD(1) * t458 - t729 * t813;
t250 = qJD(1) * t460 - t729 * t815;
t329 = qJD(1) * t486 - t729 * t814;
t331 = qJD(1) * t488 - t729 * t816;
t1395 = qJD(1) * t1429 + qJD(2) * t1340 + t248 * t702 - t250 * t703 + t329 * t728 - t331 * t731;
t1393 = t1367 * qJD(1);
t1392 = qJD(1) * t1425 - t1427 * t729 + t1404;
t1391 = -t1427 * t732 + (-t1437 * t729 - t1426 + t1462) * qJD(1);
t1321 = t1133 * t1422 + t1353 * t236 + t1411 * t237 - t1414 * t807 + t1418 * t565 + t1420 * t564;
t1320 = t1133 * t1423 + t1410 * t237 - t1412 * t236 + t1413 * t807 + t1419 * t565 + t1421 * t564;
t1319 = t1135 * t1422 - t1353 * t238 + t1411 * t239 + t1414 * t808 + t1418 * t563 + t1420 * t562;
t1318 = t1135 * t1423 + t1410 * t239 + t1412 * t238 - t1413 * t808 + t1419 * t563 + t1421 * t562;
t1360 = t1133 * t1417 + t1382 * t237 - t1400 * t236 + t1409 * t807 + t1415 * t565 + t1416 * t564;
t1359 = t1135 * t1417 + t1382 * t239 + t1400 * t238 - t1409 * t808 + t1415 * t563 + t1416 * t562;
t877 = -t263 * t562 + t271 * t563;
t82 = t1135 * t254 + t877;
t1357 = t82 + t1431;
t1114 = t263 * t564 - t565 * t271;
t88 = t1133 * t254 - t1114;
t1356 = t88 - t1430;
t1346 = t703 * t254;
t876 = -t263 * t727 + t271 * t730;
t100 = t702 * t876 - t1346;
t1347 = t265 * t703;
t879 = -t257 * t727 + t274 * t730;
t102 = t702 * t879 - t1347;
t1348 = t259 * t703;
t874 = -t268 * t727 - t278 * t730;
t104 = t702 * t874 - t1348;
t1388 = t100 + t102 + t104;
t875 = t264 * t727 + t273 * t730;
t101 = t255 * t703 + t702 * t875;
t878 = t258 * t727 + t276 * t730;
t103 = -t267 * t703 + t702 * t878;
t873 = -t270 * t727 + t279 * t730;
t105 = -t261 * t703 + t702 * t873;
t1387 = t101 + t103 + t105;
t1272 = t1408 * t702 + t1409 * t703;
t1383 = t1458 * t702 + t1450;
t1381 = t1273 * t663 + t1430 * t581;
t580 = t1041 * t702 + t1048;
t1380 = (-t1408 + t1444) * t663 + (-t1409 * t729 + t874 + t876 + t879) * t581 + (t1409 * t732 - t873 - t875 - t878) * t580;
t1379 = t1274 * t663 + t1431 * t581;
t1349 = rSges(7,1) + pkin(5);
t1033 = qJD(1) * qJD(3);
t1228 = pkin(2) * t728;
t1034 = qJD(1) * qJD(2);
t607 = -qJDD(2) * t732 + t729 * t1034;
t1008 = qJDD(3) * t729 + t732 * t1033 + t607 * t1228;
t726 = -qJ(3) - pkin(7);
t695 = t732 * t726;
t720 = t731 * pkin(2);
t698 = t720 + pkin(1);
t1060 = -t729 * t698 - t695;
t721 = t732 * pkin(7);
t660 = pkin(1) * t729 - t721;
t453 = t660 + t1060;
t1084 = t453 - t660;
t462 = rSges(4,1) * t1131 - rSges(4,2) * t1135 - t732 * rSges(4,3);
t1010 = -t462 + t1084;
t1121 = t731 * qJD(2) ^ 2;
t1027 = pkin(2) * t1121;
t719 = t729 * pkin(7);
t661 = t732 * pkin(1) + t719;
t1333 = qJD(1) * t661;
t1030 = pkin(2) * t1127;
t1058 = qJD(2) * t1030 + qJD(3) * t732;
t1005 = t726 * t1052 + t1058;
t1220 = pkin(1) - t698;
t321 = (-t1220 * t732 - t719) * qJD(1) - t1005;
t1100 = -t321 - t1333;
t688 = t703 * rSges(4,1);
t1282 = -rSges(4,2) * t702 + t688;
t590 = rSges(4,1) * t702 + rSges(4,2) * t703;
t524 = t590 * t729;
t715 = t729 * rSges(4,3);
t252 = -qJD(2) * t524 + (t1282 * t732 + t715) * qJD(1);
t569 = t1282 * qJD(2);
t75 = t590 * t607 + (-qJD(2) * t569 - t1027) * t732 + t1010 * qJDD(1) + (-t252 + t1100) * qJD(1) + t1008;
t1378 = -g(1) + t75;
t1377 = qJD(2) * t1405 + t1393;
t1376 = qJD(2) * t1406 + t1397;
t1372 = qJD(2) * t1425 - t248 * t703 - t250 * t702 - t329 * t731 - t331 * t728;
t1371 = qJD(2) * t1426 + t247 * t703 + t249 * t702 + t328 * t731 + t330 * t728;
t1370 = t1403 * t729 + t1407 * t732;
t1369 = -t1403 * t732 + t1407 * t729;
t930 = rSges(7,1) * t730 + rSges(7,2) * t727;
t1338 = -pkin(5) * t1134 - t702 * t930 - t1424;
t1364 = t1429 + t1434;
t1363 = t562 * rSges(7,2) - t1135 * t1373;
t509 = t562 * qJ(5);
t358 = -t563 * pkin(4) - t509;
t849 = t358 + t1060;
t932 = t563 * rSges(6,1) + t562 * rSges(6,3);
t286 = rSges(6,2) * t1135 + t932;
t1315 = t1390 * t580 - t581 * t82 - t1379;
t1314 = t1389 * t580 - t581 * t88 + t1381;
t1358 = (qJD(2) * t1408 - t1417) * t703 + (t1415 * t730 + t1416 * t727 + (-t1382 * t727 + t1400 * t730) * qJD(4) - t1409 * qJD(2)) * t702;
t1351 = t1443 * t663 + (-t1401 * t563 - t1402 * t562) * t581 + (t1401 * t565 + t1402 * t564) * t580;
t1350 = -(t254 * t729 + t255 * t732) * t702 + t1113;
t1250 = (-t586 * t732 + t460) * t729 - (-Icges(4,2) * t1131 + t459 - t643) * t732;
t1251 = (-t622 * t732 + t488) * t729 - (-Icges(3,2) * t1124 + t487 - t681) * t732;
t792 = t485 * t732 - t486 * t729;
t793 = t457 * t732 - t458 * t729;
t1337 = -t1250 * t702 - t1251 * t728 + t793 * t703 + t792 * t731;
t1062 = t624 + t898;
t1063 = -t622 + t625;
t1068 = t588 + t897;
t1069 = -t586 + t589;
t1336 = (-t1062 * t728 + t1063 * t731 - t1068 * t702 + t1069 * t703) * qJD(1);
t1335 = t1392 * t1398 + (t1396 * t729 + (-t1391 + t1395) * t732) * t729;
t1334 = t1395 * t1398 + (t1391 * t729 + (-t1392 + t1396) * t732) * t729;
t1227 = pkin(3) * t702;
t593 = -pkin(8) * t703 + t1227;
t1001 = t728 * t1052;
t674 = pkin(2) * t1001;
t1070 = t593 * t1052 + t674;
t1296 = (pkin(4) * t730 + qJ(5) * t727) * t702;
t461 = t1296 * t1052;
t1130 = t703 * t730;
t1132 = t703 * t727;
t525 = pkin(4) * t1130 + qJ(5) * t1132;
t1039 = qJD(5) * t727;
t628 = t702 * t1039;
t664 = pkin(8) * t1131;
t555 = -pkin(3) * t1135 + t664;
t963 = -qJD(1) * t555 + t674;
t1328 = -t1043 * t1296 * t703 + t581 * t525 + t628 * t732 + t1070 + t461 - t963;
t1040 = qJD(5) * t562;
t363 = t565 * pkin(4) + qJ(5) * t564;
t669 = pkin(3) * t1129;
t558 = pkin(8) * t1133 + t669;
t964 = t732 * t698 - t726 * t729;
t454 = t964 - t661;
t955 = qJD(1) * t454 - t1058 + t1333;
t841 = qJD(1) * t558 - t593 * t1048 + t955;
t1327 = t1296 * t580 - t663 * t363 - t1040 - t841;
t1107 = t1349 * t563 + t1363;
t1032 = qJDD(4) * t702;
t606 = qJDD(2) * t729 + t732 * t1034;
t318 = -qJD(4) * t807 + t1032 * t732 + t606;
t319 = qJD(4) * t808 + t1032 * t729 + t607;
t561 = qJD(2) * t1045 - qJDD(4) * t703 + qJDD(1);
t1326 = t1273 * t561 + t1320 * t580 - t1321 * t581 + t1356 * t319 + t1360 * t663 + t1389 * t318;
t1325 = -t1274 * t561 + t1318 * t580 - t1319 * t581 + t1357 * t319 + t1359 * t663 + t1390 * t318;
t1324 = t1437 * qJD(1);
t26 = (qJD(2) * t876 + t121) * t703 + (qJD(2) * t254 + t127 * t727 + t133 * t730 + (-t263 * t730 - t271 * t727) * qJD(4)) * t702;
t28 = (qJD(2) * t879 - t129) * t703 + (qJD(2) * t265 + t123 * t727 + t135 * t730 + (-t257 * t730 - t274 * t727) * qJD(4)) * t702;
t30 = (qJD(2) * t874 - t125) * t703 + (qJD(2) * t259 - t131 * t727 + t137 * t730 + (-t268 * t730 + t278 * t727) * qJD(4)) * t702;
t1317 = t26 + t28 + t30;
t27 = (qJD(2) * t875 + t120) * t703 + (-qJD(2) * t255 + t126 * t727 + t132 * t730 + (t264 * t730 - t273 * t727) * qJD(4)) * t702;
t29 = (qJD(2) * t878 - t128) * t703 + (qJD(2) * t267 + t122 * t727 + t134 * t730 + (t258 * t730 - t276 * t727) * qJD(4)) * t702;
t31 = (qJD(2) * t873 - t124) * t703 + (qJD(2) * t261 - t130 * t727 + t136 * t730 + (-t270 * t730 - t279 * t727) * qJD(4)) * t702;
t1316 = t27 + t29 + t31;
t1313 = t1272 * t663 + t1387 * t580 - t1388 * t581;
t1312 = t1383 * t729;
t1311 = t1383 * t732;
t1310 = t1382 * t729;
t1309 = t1382 * t732;
t1306 = t1380 * t702;
t1305 = -t1409 * t663 - t1413 * t580 - t1414 * t581;
t1266 = t1387 * t732 + t1388 * t729;
t1304 = -t1387 * t729 + t1388 * t732;
t1265 = t1356 * t729 + t1389 * t732;
t1303 = -t1356 * t732 + t1389 * t729;
t1264 = t1357 * t729 + t1390 * t732;
t1302 = -t1357 * t732 + t1390 * t729;
t1286 = t564 * rSges(7,2) + t1349 * t565;
t1104 = -t1133 * t1373 + t1286;
t1037 = qJD(6) * t729;
t627 = t702 * t1037;
t1300 = -t1104 * t663 - t1338 * t580 + t1327 + t627;
t1299 = t1115 + (-t254 * t732 + t255 * t729) * t702;
t810 = -t590 - t1228;
t1297 = t732 * t810;
t931 = rSges(6,1) * t730 + rSges(6,3) * t727;
t821 = t931 * t702;
t690 = t703 * pkin(3);
t1288 = t702 * pkin(8) + t690;
t556 = t1288 * t729;
t833 = t1136 * t581 + t562 * t663;
t1295 = -t236 + t833;
t832 = t1136 * t580 - t564 * t663;
t1294 = t238 + t832;
t619 = pkin(8) * t996;
t809 = -t1052 * t703 - t998;
t322 = pkin(3) * t809 - pkin(8) * t1003 + t619;
t1293 = qJD(1) * t322 + qJDD(1) * t558;
t353 = -t562 * pkin(4) + qJ(5) * t563;
t354 = -t562 * rSges(7,1) + t563 * rSges(7,2);
t1292 = -t353 - t354;
t359 = -t564 * pkin(4) + qJ(5) * t565;
t360 = -t564 * rSges(7,1) + t565 * rSges(7,2);
t1291 = t359 + t360;
t609 = qJD(1) * t660;
t1290 = qJD(1) * t453 - t609;
t1289 = t1282 + t720;
t292 = t565 * rSges(6,1) + rSges(6,2) * t1133 + t564 * rSges(6,3);
t443 = -rSges(6,2) * t703 + t821;
t68 = t292 * t663 - t443 * t580 - t1327;
t1287 = rSges(7,2) * t1132 + t1130 * t1349;
t1283 = -rSges(7,2) * t238 + t627;
t1281 = -t236 * rSges(7,2) + t1373 * t1003 + t1349 * t237;
t936 = rSges(5,1) * t239 - rSges(5,2) * t238;
t143 = rSges(5,3) * t808 + t936;
t522 = (-rSges(5,1) * t727 - rSges(5,2) * t730) * t702;
t686 = t702 * rSges(5,3);
t242 = qJD(4) * t522 + (t703 * t934 + t686) * qJD(2);
t618 = pkin(3) * t999;
t323 = pkin(8) * t808 + qJD(1) * t669 - t618;
t1007 = -t323 + t1100;
t572 = t1288 * qJD(2);
t1006 = -t556 + t1084;
t778 = qJDD(1) * t1006 + t607 * t593 + t1008;
t739 = t1007 * qJD(1) + (-qJD(2) * t572 - t1027) * t732 + t778;
t32 = -t143 * t663 - t242 * t581 - t287 * t561 + t319 * t444 + t739;
t1020 = t237 * rSges(5,1) + t236 * rSges(5,2) + rSges(5,3) * t996;
t140 = -rSges(5,3) * t1003 + t1020;
t293 = t565 * rSges(5,1) - t564 * rSges(5,2) + rSges(5,3) * t1133;
t701 = pkin(7) * t1051;
t1067 = qJD(1) * (-pkin(1) * t1052 + t701) + qJDD(1) * t661;
t706 = qJD(3) * t729;
t995 = t728 * t1046;
t962 = pkin(2) * t995;
t853 = t706 - t962;
t320 = -t701 + (t1220 * t729 - t695) * qJD(1) + t853;
t905 = qJD(1) * t320 + qJDD(1) * t454 + t729 * t1033 + t1067;
t744 = (-t1121 * t729 - t606 * t728) * pkin(2) - qJDD(3) * t732 + t905;
t738 = -t1048 * t572 - t606 * t593 + t1293 + t744;
t33 = t140 * t663 - t242 * t580 + t293 * t561 - t318 * t444 + t738;
t1278 = t32 * t729 - t33 * t732;
t1223 = g(2) * t729;
t1277 = g(1) * t732 + t1223;
t1271 = -qJD(1) * t556 + t1290;
t1269 = (-t1382 + t1442) * t663 + (-t1354 * t563 + t1411 + t510 + t513 - t516) * t581 + (t1354 * t565 - t1177 - t1183 - t1410 + t518) * t580;
t1268 = (t1136 * t1368 + t1400 + t1451 + t501) * t663 + (t1355 * t562 + t1353 - t511 - t514 + t517) * t581 + (-t1355 * t564 - t1187 + t1412 + t512 + t515) * t580;
t1267 = t1351 * t702;
t1263 = t1272 * t561 + t1358 * t663;
t1225 = g(1) * t729;
t1262 = -g(2) * t732 + t1225;
t1255 = t702 * t1277;
t507 = qJD(5) * t564;
t146 = t237 * pkin(4) - qJ(5) * t236 + t507;
t1254 = qJD(5) * t238 + qJDD(5) * t562 + t663 * t146 + t561 * t363;
t1049 = qJD(2) * t703;
t805 = t1042 * t702 + t1049 * t727;
t806 = -t1045 * t727 + t1047 * t703;
t226 = pkin(4) * t806 + qJ(5) * t805 + t628;
t1253 = -qJD(5) * t236 + qJDD(5) * t564 + t1296 * t319 - t581 * t226;
t1246 = -m(6) - m(7);
t1245 = t318 / 0.2e1;
t1244 = t319 / 0.2e1;
t1242 = -t580 / 0.2e1;
t1241 = t580 / 0.2e1;
t1240 = -t581 / 0.2e1;
t1239 = t581 / 0.2e1;
t1238 = t606 / 0.2e1;
t1237 = t607 / 0.2e1;
t1236 = -t663 / 0.2e1;
t1235 = t663 / 0.2e1;
t1233 = t729 / 0.2e1;
t1232 = -t732 / 0.2e1;
t1231 = -rSges(6,1) - pkin(4);
t1230 = -rSges(6,2) - pkin(8);
t1229 = -rSges(5,3) - pkin(8);
t1226 = pkin(4) * t239;
t1219 = rSges(3,1) * t731;
t1215 = rSges(7,3) * t702;
t179 = t562 * t580 + t564 * t581;
t1015 = t363 + t1104;
t684 = qJD(6) * t703;
t1091 = t454 * t1046 - t453 * t1048;
t957 = t558 * t1046 + t556 * t1048 + t1091;
t845 = -t358 * t580 + t628 + t957;
t43 = t1015 * t581 + t1107 * t580 + t684 + t845;
t1213 = t179 * t43;
t1212 = t26 * t581;
t1211 = t27 * t580;
t1210 = t28 * t581;
t1209 = t29 * t580;
t1208 = t30 * t581;
t1207 = t31 * t580;
t1103 = t292 + t363;
t60 = t1103 * t581 + t286 * t580 + t845;
t1200 = t60 * t286;
t1106 = -t286 + t358;
t370 = t581 * t1296;
t975 = -t593 - t1228;
t908 = t975 * qJD(2);
t802 = t732 * t908 + t706;
t940 = t1006 * qJD(1);
t754 = t940 + t802;
t67 = t1106 * t663 - t443 * t581 - t370 + t507 + t754;
t1199 = t67 * t443;
t1198 = t68 * t729;
t687 = t702 * rSges(6,2);
t716 = t729 * rSges(3,3);
t95 = t293 * t663 - t444 * t580 + t841;
t1197 = t729 * t95;
t1161 = t100 * t319;
t1160 = t101 * t318;
t1159 = t102 * t319;
t1158 = t103 * t318;
t1157 = t104 * t319;
t1156 = t105 * t318;
t803 = qJD(2) * t1297 + t706;
t164 = qJD(1) * t1010 + t803;
t1153 = t164 * t590;
t632 = rSges(3,1) * t728 + rSges(3,2) * t731;
t1000 = t632 * t1046;
t1057 = rSges(3,2) * t1127 + t732 * rSges(3,3);
t547 = rSges(3,1) * t1124 - t1057;
t1071 = -t547 - t660;
t302 = qJD(1) * t1071 - t1000;
t1150 = t302 * t729;
t1149 = t302 * t732;
t548 = rSges(3,1) * t1122 - rSges(3,2) * t1126 + t716;
t303 = qJD(1) * t548 - t1048 * t632 + t1333;
t583 = t632 * t732;
t1148 = t303 * t583;
t1111 = t238 * qJ(5) + t1040;
t147 = t1111 + t1226;
t1119 = t147 * t1133 - t358 * t996;
t1038 = qJD(6) * t702;
t1118 = -rSges(7,3) * t996 + (-qJ(6) * t1049 - t1038) * t732 + t1281;
t1018 = t237 * rSges(6,1) + rSges(6,2) * t996 - t236 * rSges(6,3);
t139 = -rSges(6,2) * t1003 + t1018;
t1117 = t139 + t146;
t1116 = t1349 * t239 - t1373 * t808 - t1283;
t629 = qJD(5) * t1134;
t1112 = t580 * t353 + t629;
t241 = (-rSges(6,1) * t727 + rSges(6,3) * t730) * t1045 + (t703 * t931 + t687) * qJD(2);
t1109 = -t226 - t241;
t1108 = qJD(5) * t563 + t663 * t359;
t1050 = qJD(2) * t702;
t1102 = t363 * t1050 + t702 * t461;
t1101 = t1135 * t1296 - t358 * t703;
t355 = -t562 * rSges(6,1) + t563 * rSges(6,3);
t1099 = -t353 - t355;
t361 = -t564 * rSges(6,1) + t565 * rSges(6,3);
t1098 = t359 + t361;
t1097 = -pkin(5) * t806 + qJ(6) * t1050 - t684 - (-rSges(7,1) * t727 + rSges(7,2) * t730) * t1045 - (t703 * t930 - t1215) * qJD(2);
t1096 = t1338 * t729;
t1095 = t1338 * t732;
t1090 = -t729 * t453 + t732 * t454;
t1088 = -t443 - t1296;
t1087 = qJ(6) * t702 + t1215 - t1287;
t463 = rSges(4,1) * t1129 - rSges(4,2) * t1133 + t715;
t1083 = -t454 - t463;
t1082 = -t454 - t558;
t668 = pkin(8) * t1129;
t557 = -pkin(3) * t1133 + t668;
t1079 = t557 * t1046 + t555 * t1048;
t1076 = t507 + t706;
t636 = qJ(5) * t1134;
t519 = -pkin(4) * t1136 + t636;
t1075 = qJD(5) * t565 - t581 * t519;
t1025 = rSges(5,2) * t1136;
t1066 = rSges(5,3) * t1131 + t729 * t1025;
t1065 = rSges(5,3) * t1129 + t732 * t1025;
t1064 = rSges(4,2) * t1003 + rSges(4,3) * t1051;
t1059 = rSges(3,2) * t1001 + rSges(3,3) * t1051;
t1031 = -pkin(4) - t1349;
t1029 = pkin(2) * t1126;
t1028 = g(3) * t1136;
t1026 = rSges(5,1) * t1134;
t1022 = qJD(2) * t720;
t1021 = t146 + t1118;
t1017 = -t226 + t1097;
t1016 = t358 - t1107;
t1014 = t320 * t1046 + t321 * t1048 - t606 * t453;
t1013 = -t453 * t1051 + t732 * t320 + t729 * t321;
t1012 = -t363 + t1082;
t1011 = -t1296 + t1338;
t446 = rSges(6,1) * t1130 + rSges(6,3) * t1132 + t687;
t1004 = t720 + t1288;
t994 = t731 * t1046;
t630 = t703 * t1039;
t987 = -pkin(1) - t1219;
t984 = t1051 / 0.2e1;
t982 = -t1048 / 0.2e1;
t981 = t1048 / 0.2e1;
t980 = -t1046 / 0.2e1;
t979 = t1046 / 0.2e1;
t974 = t43 * t1107;
t777 = (t908 - t1038) * t732;
t52 = t1016 * t663 + t1338 * t581 + t1076 - t370 + t777 + t940;
t973 = t52 * t1338;
t972 = t68 * t1088;
t971 = t732 * t1373;
t969 = t728 * (-t729 ^ 2 - t1398);
t959 = t226 * t1135 + t1296 * t808 + t703 * t147;
t956 = t729 * t556 + t732 * t558 + t1090;
t954 = t618 + t1005;
t947 = t664 - t1030;
t946 = t668 - t1029;
t945 = -t444 + t975;
t944 = -t1296 + t975;
t943 = t1300 * t1011;
t942 = -t572 - t1022;
t933 = rSges(6,1) * t239 + rSges(6,3) * t238;
t142 = rSges(6,2) * t808 + t933;
t765 = t322 * t1046 + t323 * t1048 + t1082 * t607 + t606 * t556 + t1014;
t751 = qJD(2) * t630 + qJD(4) * t629 + qJDD(5) * t1136 + t580 * t147 - t318 * t358 + t765;
t8 = -t1103 * t319 + t1117 * t581 + t142 * t580 + t286 * t318 + t751;
t939 = t60 * t142 + t8 * t286;
t635 = rSges(2,1) * t732 - rSges(2,2) * t729;
t633 = rSges(2,1) * t729 + rSges(2,2) * t732;
t634 = -rSges(3,2) * t728 + t1219;
t928 = t1300 * t729 - t52 * t732;
t924 = -t67 * t732 - t1198;
t94 = t1399 + t754;
t909 = t732 * t94 + t1197;
t907 = t581 * t358;
t451 = t729 * t1296;
t906 = -t358 * t991 - t580 * t451 + t1079 + t630;
t904 = t1004 + t525;
t251 = rSges(4,1) * t809 - rSges(4,2) * t996 + t1064;
t880 = t251 * t732 + t252 * t729;
t872 = t287 * t732 - t293 * t729;
t871 = -t303 * t729 - t1149;
t333 = -rSges(3,2) * t994 + (-t1052 * t731 - t995) * rSges(3,1) + t1059;
t582 = t632 * t729;
t334 = -qJD(2) * t582 + (t634 * t732 + t716) * qJD(1);
t870 = t333 * t732 + t334 * t729;
t864 = t462 * t729 + t463 * t732;
t861 = t547 * t729 + t548 * t732;
t856 = -t443 + t944;
t854 = (-t1029 + t557) * qJD(1);
t447 = rSges(5,1) * t1130 - rSges(5,2) * t1132 + t686;
t852 = -t226 + t942;
t851 = -t242 + t942;
t850 = -t698 - t1288;
t848 = t964 + t558;
t847 = t1230 * t702 - t690;
t846 = t1229 * t702 - t690;
t844 = t663 * t358 + t1076 + t1271;
t843 = t556 * t1051 + t732 * t322 + t729 * t323 + t1013;
t842 = -t358 * t729 + t732 * t363 + t956;
t840 = t954 - t1111;
t822 = t944 + t1338;
t819 = -t1103 * t60 + t1199;
t818 = t1106 * t67 + t68 * t292;
t817 = -t241 + t852;
t804 = t852 + t1097;
t7 = -qJD(2) * t1038 + qJDD(6) * t703 - t1015 * t319 + t1021 * t581 + t1107 * t318 + t1116 * t580 + t751;
t795 = t1107 * t7 + t1116 * t43;
t788 = -t1015 * t43 - t973;
t787 = t1016 * t52 - t1104 * t1300;
t786 = -t1051 * t358 + t732 * t146 + t729 * t147 + t843;
t783 = t363 + t848;
t763 = -pkin(3) * t998 + t619 + t853;
t762 = -t1027 - qJDD(6) * t702 + (-t572 - t684) * qJD(2);
t452 = t732 * t1296;
t761 = t363 * t1045 - t663 * t452 - t628 * t729 + t854;
t77 = t287 * t580 + t293 * t581 + t957;
t752 = t77 * t872 + (t729 * t94 - t732 * t95) * t444;
t743 = (t972 + t1200) * t732 + t819 * t729;
t740 = (-t943 + t974) * t732 + t788 * t729;
t658 = rSges(6,2) * t1129;
t649 = rSges(6,2) * t1131;
t645 = rSges(7,2) * t1134;
t644 = rSges(6,3) * t1134;
t598 = t634 * qJD(2);
t526 = t590 * t732;
t521 = -rSges(6,1) * t1136 + t644;
t520 = -rSges(7,1) * t1136 + t645;
t396 = -t1026 * t732 + t1065;
t395 = -t732 * t821 + t658;
t393 = -t1026 * t729 + t1066;
t392 = -t729 * t821 + t649;
t362 = -rSges(5,1) * t564 - rSges(5,2) * t565;
t356 = -rSges(5,1) * t562 - rSges(5,2) * t563;
t298 = t358 * t1133;
t294 = t861 * qJD(2);
t165 = qJD(1) * t463 - t1048 * t590 + t955;
t158 = qJD(2) * t864 + t1091;
t145 = qJD(1) * t333 + qJDD(1) * t548 - t1048 * t598 - t606 * t632 + t1067;
t144 = -t598 * t1046 + t607 * t632 + t1071 * qJDD(1) + (-t334 - t1333) * qJD(1);
t76 = qJD(1) * t251 + qJDD(1) * t463 - t1048 * t569 - t590 * t606 + t744;
t13 = t140 * t581 + t143 * t580 + t287 * t318 - t293 * t319 + t765;
t12 = t1088 * t318 + t1109 * t580 + t663 * t139 + t561 * t292 + t1254 + t738;
t11 = -t581 * t241 + t319 * t443 + (-t147 - t142) * t663 + t1106 * t561 + t739 + t1253;
t10 = t1097 * t581 - t1338 * t319 + (-t147 - t1116) * t663 + t1016 * t561 + t762 * t732 + (t627 + t1007) * qJD(1) + t778 + t1253;
t9 = (-qJD(1) * t1038 - qJDD(3)) * t732 + t1118 * t663 + t975 * t606 + t1104 * t561 + t1017 * t580 + t1011 * t318 + t762 * t729 + t905 + t1254 + t1293;
t1 = [(t1339 + t1366) * t1238 + (t1340 + t1367) * t1237 + (t60 * t907 - (t358 * t60 + t972) * t581 - (-t1046 * t593 - t286 * t663 - t67 + t844 - t962) * t68 - t847 * t1225 + t67 * (t840 - t933 - t1226) + t68 * (t146 + t763 + t1018) + (t1049 * t1230 * t67 + t11 * t847) * t729 + ((-t698 + t847) * t1198 + (t67 * (t850 - t687) - t68 * t726) * t732) * qJD(1) + (-g(2) + t12) * (t783 + t292) + (-g(1) + t11) * (t849 - t932)) * m(6) + ((t1361 * t729 + ((t1438 + t1457) * t732 + t1343 + t1445 + t1452) * t732) * qJD(2) + t1397) * t979 + (m(2) * (t633 ^ 2 + t635 ^ 2) + Icges(2,3) - t1435) * qJDD(1) + (-qJD(2) * t1436 + t567 * t703 + t568 * t702 + t596 * t731 + t597 * t728) * qJD(1) + (-(-qJD(1) * t547 - t1000 - t302 - t609) * t303 + t303 * (t701 + t1059) + (t1150 * t632 - t1148) * qJD(2) + ((-pkin(1) - t634) * t1149 + (t302 * (-rSges(3,3) - pkin(7)) + t303 * t987) * t729) * qJD(1) + (-g(2) + t145) * (t548 + t661) + (-g(1) + t144) * (t729 * t987 + t1057 + t721)) * m(3) + t1273 * t1245 + t1360 * t1241 + (-t846 * t1225 + t94 * (-t936 + t954) + t95 * (t763 + t1020) + (t1049 * t1229 * t94 + t32 * t846) * t729 + ((-t698 + t846) * t1197 + (t94 * (t850 - t686) - t95 * t726) * t732) * qJD(1) - (t1271 + t1399 + t802 - t94) * t95 + (-g(2) + t33) * (t848 + t293) + (-g(1) + t32) * (-t935 + t1060)) * m(5) - t1274 * t1244 + (-g(1) * (-t1107 + t849 - t556) + (t1031 * t563 + t1060 - t1363 - t509 - t556) * t10 + t43 * t907 - (t358 * t43 - t943) * t581 - (t146 + t619 + t706 + t1281 + t850 * t1052 + (-t1038 + (-t1227 - t1228 - t1424) * qJD(2) - t726 * qJD(1)) * t732 + t1107 * t663 - t777 - t844) * t1300 + (-g(2) + t9) * (-t702 * t971 + t1286 + t783) + ((t1049 * t729 + t1394) * (-pkin(8) + t1373) + t840 + t1283 + t1031 * t239 + (-t698 - t690) * t1051 - t1300) * t52) * m(7) + (t164 * t1005 + t165 * (t706 + t1064) + (t1153 * t729 + t1297 * t165) * qJD(2) + ((-t164 * rSges(4,3) + t165 * (-t698 - t688)) * t729 + (t164 * (-t698 - t1282) - t165 * t726) * t732) * qJD(1) - (-qJD(1) * t462 + t1290 - t164 + t803) * t165 + (t76 - g(2)) * (t463 + t964) + t1378 * (-t462 + t1060)) * m(4) + t1211 / 0.2e1 - t1212 / 0.2e1 + (t1369 - t1372 + t1376) * t980 + (t1359 + t1314) * t1240 + (t1370 + t1371) * t981 + ((-t1350 + t877 + t89) * t581 + (t1353 * t564 - t1411 * t565 + t1299 + t1356 - t1375 - t1433) * t580 + t1315 + t1379) * t1242 + t1209 / 0.2e1 - t1210 / 0.2e1 + t1159 / 0.2e1 + t1160 / 0.2e1 + t1161 / 0.2e1 + (t1346 + t1347 + t1348 + (t1353 * t727 - t1411 * t730) * t702 + t1388) * t580 * t1236 + t1156 / 0.2e1 + t1207 / 0.2e1 - t1208 / 0.2e1 - m(2) * (-g(1) * t633 + g(2) * t635) + t1263 + (((t1364 * t732 + t1341 - t1361) * t732 + (t1364 * t729 + t1342 + t1446) * t729) * qJD(2) + t1377 - t1393) * t982 + t1157 / 0.2e1 + t1158 / 0.2e1 + ((t83 + t1114 + t1299) * t581 + (t1353 * t562 - t1411 * t563 + t1350 + t1357 + t1374 - t1432) * t580 + t1381) * t1239; (-g(1) * t946 - g(2) * t947 - g(3) * (t904 + t1287) - (-g(1) * t971 - t1223 * t1373) * t703 - (-g(3) * t1373 + t1277 * (-pkin(3) + (-rSges(7,2) - qJ(5)) * t727 + t1031 * t730)) * t702 + t1300 * (-t1037 * t703 + t761) - t43 * (t906 - t1038) + t1300 * t1095 * t663 - t43 * (-t452 + t1095) * t581 - (-t1300 * (-t525 + t1087) + t43 * t1096) * t580 - (t928 * t1288 + (t43 * t969 + t731 * t928) * pkin(2)) * qJD(2) - (t702 * t787 + t703 * t740) * qJD(4) + t7 * t842 + t43 * t786 + (t10 * t822 + t7 * t1104 + t43 * t1118 + (-t1300 * t822 + t974) * qJD(1)) * t732 + (t9 * t822 - t1300 * t804 + (-t973 + t43 * (t1012 - t1104)) * qJD(1) + t795) * t729 + (-(t451 - t1096) * t663 - t1087 * t581 + (t684 + t804) * t732 + t1328) * t52) * m(7) - (t1314 * t732 + t1315 * t729) * t1044 / 0.2e1 + (qJD(1) * t1369 + t1335 * qJD(2) + qJDD(1) * t1367 + t1343 * t606 + t1344 * t607 + t1325) * t1232 + (qJD(1) * t1370 + t1334 * qJD(2) + qJDD(1) * t1366 + t1341 * t606 + t1342 * t607 + t1326) * t1233 + (t94 * t1070 + t13 * t956 + t77 * t843 + (t32 * t945 + t94 * t851 + t13 * t293 + t77 * t140 + (t77 * t287 + t945 * t95) * qJD(1)) * t732 + (t33 * t945 + t95 * t851 + t13 * t287 + t77 * t143 + (t94 * t444 + t77 * (-t293 + t1082)) * qJD(1)) * t729 - g(1) * (t946 + t1065) - g(2) * (t947 + t1066) - g(3) * (t447 + t1004) - (-pkin(3) - t1218) * t1255 - t94 * (-t393 * t663 - t447 * t581 + t963) - t95 * (t396 * t663 - t447 * t580 + t854) - t77 * (t393 * t580 + t396 * t581 + t1079) - ((-t287 * t94 + t293 * t95) * t702 + t752 * t703) * qJD(4) - (-t909 * t1288 + (-t731 * t909 + t77 * t969) * pkin(2)) * qJD(2)) * m(5) - ((t1250 * t703 + t1251 * t731 + t793 * t702 + t792 * t728) * qJD(2) + (t1062 * t731 + t1063 * t728 + t1068 * t703 + t1069 * t702) * qJD(1)) * qJD(1) / 0.2e1 + (-g(3) * t1289 - t810 * t1223 + t164 * (-pkin(2) * t994 - t569 * t732) + (qJD(2) * t880 + t1083 * t607 + t462 * t606 + t1014) * (t864 + t1090) + t158 * (t880 + t1013) + (t158 * t462 + t165 * t810) * t1051 + (t76 * t810 + t165 * (-t1022 - t569) + (t1083 * t158 + t1153) * qJD(1)) * t729 - (t164 * t524 + t165 * (-t526 - t1029)) * qJD(1) - (t158 * pkin(2) * t969 + (-t1289 * t164 - t158 * t526) * t732 + (-t1289 * t165 - t158 * t524) * t729) * qJD(2) + t1378 * t1297) * m(4) + (t1314 + t1376) * t984 + (t1315 + t1377) * t1052 / 0.2e1 + (t1372 * t732 + t1371 * t729 + (t1339 * t732 + t1340 * t729) * qJD(1)) * qJD(1) / 0.2e1 + (qJD(1) * t1266 + t1316 * t729 - t1317 * t732) * t1235 + (qJD(1) * t1264 + t1318 * t729 - t1319 * t732) * t1240 + (qJD(1) * t1265 + t1320 * t729 - t1321 * t732) * t1241 - t1313 * t1045 / 0.2e1 + (t1339 * t729 - t1340 * t732) * qJDD(1) / 0.2e1 + t1302 * t1244 + t1303 * t1245 - t1304 * t561 / 0.2e1 + ((-t1046 * t1322 - t1324) * t732 + ((t1323 * t732 + t1337) * qJD(2) + t1336) * t729) * t979 + ((-t1048 * t1323 + t1324) * t729 + ((t1322 * t729 + t1337) * qJD(2) + t1336) * t732) * t982 + (t8 * t842 + t60 * t786 + (t11 * t856 + t8 * t292 + t60 * t139 + (t68 * t856 + t1200) * qJD(1)) * t732 + (t12 * t856 + t68 * t817 + (t1199 + t60 * (-t292 + t1012)) * qJD(1) + t939) * t729 - g(1) * (t658 + t946) - g(2) * (t649 + t947) - g(3) * (t904 + t446) - (-pkin(3) + t1231 * t730 + (-rSges(6,3) - qJ(5)) * t727) * t1255 - t68 * (t395 * t663 + t761 + (-t446 - t525) * t580) - t60 * (t392 * t580 + t906 + (t395 - t452) * t581) - (t924 * t1288 + (t60 * t969 + t731 * t924) * pkin(2)) * qJD(2) - (t702 * t818 + t703 * t743) * qJD(4) + (t817 * t732 + t446 * t581 - (-t392 + t451) * t663 + t1328) * t67) * m(6) + ((t1341 * t732 + t1342 * t729) * qJD(1) + t1334) * t981 + ((t1343 * t732 + t1344 * t729) * qJD(1) + t1335) * t980 + ((qJD(4) * t1266 - t1380) * t703 + ((t1307 * t730 + t1308 * t727 - t1409) * t663 + (t1310 * t730 - t1312 * t727 - t1414) * t581 + (-t1309 * t730 + t1311 * t727 - t1413) * t580 + t1272 * qJD(4)) * t702) * t1236 + ((qJD(2) * t870 + t547 * t606 - t548 * t607) * t861 + t294 * ((t547 * t732 - t548 * t729) * qJD(1) + t870) + t871 * t598 + (-t144 * t732 - t145 * t729 + (-t303 * t732 + t1150) * qJD(1)) * t632 + g(1) * t583 + g(2) * t582 - g(3) * t634 - (t302 * t582 - t1148) * qJD(1) - (t294 * (-t582 * t729 - t583 * t732) + t871 * t634) * qJD(2)) * m(3) + ((t1131 * t1356 + t1273 * t702) * qJD(4) + ((qJD(4) * t1389 + t1305) * t703 + t1306) * t732 + (t1307 * t565 + t1308 * t564) * t663 + (t1310 * t565 - t1312 * t564) * t581 + (-t1309 * t565 + t1311 * t564) * t580) * t1242 + t1405 * t1237 + t1406 * t1238 + ((t1129 * t1390 - t1274 * t702) * qJD(4) + ((qJD(4) * t1357 + t1305) * t703 + t1306) * t729 + (t1307 * t563 + t1308 * t562) * t663 + (t1310 * t563 - t1312 * t562) * t581 + (-t1309 * t563 + t1311 * t562) * t580) * t1239; (-m(4) + t1246) * t1262 + 0.2e1 * (t10 * t1233 + t1232 * t9) * m(7) + 0.2e1 * (t11 * t1233 + t12 * t1232) * m(6) + 0.2e1 * (t1232 * t76 + t1233 * t75) * m(4) + (-t1262 + t1278) * m(5); t1325 * t1135 / 0.2e1 + t1326 * t1133 / 0.2e1 + t1313 * t1050 / 0.2e1 + (t1265 * t702 - t1273 * t703) * t1245 + (t1264 * t702 + t1274 * t703) * t1244 + (t1266 * t702 - t1272 * t703) * t561 / 0.2e1 + (-t1267 * t732 + t1268 * t565 + t1269 * t564) * t1242 + ((qJD(2) * t1265 - t1360) * t703 + (-qJD(1) * t1303 + t1273 * qJD(2) + t1320 * t732 + t1321 * t729) * t702) * t1241 + ((qJD(2) * t1264 - t1359) * t703 + (-qJD(1) * t1302 - t1274 * qJD(2) + t1318 * t732 + t1319 * t729) * t702) * t1240 + (-t1267 * t729 + t1268 * t563 + t1269 * t562) * t1239 + (t1351 * t703 + (t1268 * t730 + t1269 * t727) * t702) * t1236 + ((qJD(2) * t1266 - t1358) * t703 + (qJD(1) * t1304 + t1272 * qJD(2) + t1316 * t732 + t1317 * t729) * t702) * t1235 - (t1160 + t1161 + t1211 - t1212 + t1158 + t1159 + t1209 - t1210 + t1156 + t1157 + t1207 - t1208 + t1263) * t703 / 0.2e1 + (-g(1) * (-pkin(5) * t564 + t1291) - g(2) * (-pkin(5) * t562 - t1292) - g(3) * (t636 + t645) - t1031 * t1028 - t52 * (t1292 * t663 - t520 * t581 + t1075) + t1300 * (t360 * t663 + t1108 + (-t519 - t520) * t580) - t43 * (t1291 * t581 + t354 * t580 + t1112) - (-t1300 * t832 + t52 * t833 - t1213) * pkin(5) + t10 * t1101 + t52 * t959 - t1300 * t1102 - t7 * t298 + t43 * t1119 + (qJD(2) * t740 + t10 * t1107 - t1015 * t9 + t1021 * t1300 + t1116 * t52) * t703 + (t787 * qJD(2) + (qJD(1) * t788 + t1011 * t9 - t1017 * t1300 + t795) * t732 + (-t10 * t1338 - t52 * t1097 - t7 * t1015 - t43 * t1021 + (t1016 * t43 + t1300 * t1338) * qJD(1)) * t729) * t702) * m(7) + (-g(1) * t1098 + g(2) * t1099 - g(3) * (t1136 * t1231 + t636 + t644) - t67 * (t1099 * t663 - t521 * t581 + t1075) - t68 * (t361 * t663 + (-t519 - t521) * t580 + t1108) - t60 * (t1098 * t581 + t355 * t580 + t1112) + t11 * t1101 + t67 * t959 + t68 * t1102 - t8 * t298 + t60 * t1119 + (qJD(2) * t743 + t11 * t286 - t1103 * t12 - t1117 * t68 + t67 * t142) * t703 + (t818 * qJD(2) + (qJD(1) * t819 + t1088 * t12 + t1109 * t68 + t939) * t732 + (t11 * t443 + t67 * t241 - t8 * t1103 - t60 * t1117 + (t1106 * t60 + t68 * t443) * qJD(1)) * t729) * t702) * m(6) + (-t94 * (-t356 * t663 - t522 * t581) - t95 * (t362 * t663 - t522 * t580) - t77 * (t356 * t580 + t362 * t581) + (qJD(2) * t752 - t95 * t140 + t94 * t143 + t32 * t287 - t33 * t293) * t703 + (t94 * (-qJD(2) * t287 + t242 * t729) + t95 * (qJD(2) * t293 - t242 * t732) + t13 * t872 + t77 * (-t1051 * t293 - t1052 * t287 - t140 * t729 + t143 * t732) + (qJD(1) * t909 + t1278) * t444) * t702 - g(1) * t362 - g(2) * t356 - g(3) * t522) * m(5) + (t702 * t984 + t703 * t981) * t1315 + (-t1003 / 0.2e1 + t703 * t979) * t1314; t1246 * (g(1) * t564 + g(2) * t562 + t1028) + (t10 * t564 + t1136 * t7 - t1294 * t1300 + t1295 * t52 + t43 * t805 + t562 * t9 - t1213) * m(7) + (t11 * t564 + t1136 * t8 + t12 * t562 + t1294 * t68 + t1295 * t67 + (-t179 + t805) * t60) * m(6); ((qJD(2) * t928 - t1300 * t580 + t52 * t581 - g(3) + t7) * t703 + (-t10 * t732 - t729 * t9 + (qJD(1) - t663) * (t1300 * t732 + t52 * t729) + (t580 * t729 + t581 * t732 - qJD(2)) * t43 + t1277) * t702) * m(7);];
tau  = t1;
