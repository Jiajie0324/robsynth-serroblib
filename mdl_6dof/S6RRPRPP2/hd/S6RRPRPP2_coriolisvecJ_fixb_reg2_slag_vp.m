% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:53
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRPP2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRPP2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:52:29
% EndTime: 2019-03-09 09:52:41
% DurationCPUTime: 4.70s
% Computational Cost: add. (6668->481), mult. (17002->560), div. (0->0), fcn. (12080->6), ass. (0->237)
t184 = cos(qJ(2));
t289 = cos(pkin(9));
t235 = t289 * t184;
t170 = qJD(1) * t235;
t180 = sin(pkin(9));
t182 = sin(qJ(2));
t257 = qJD(1) * t182;
t146 = t180 * t257 - t170;
t142 = qJD(4) + t146;
t181 = sin(qJ(4));
t183 = cos(qJ(4));
t162 = t180 * t184 + t289 * t182;
t259 = qJD(1) * t162;
t113 = t181 * qJD(2) + t183 * t259;
t283 = t113 * t142;
t251 = qJD(1) * qJD(2);
t238 = t182 * t251;
t169 = t180 * t238;
t201 = qJD(2) * t170 - t169;
t71 = qJD(4) * t113 + t181 * t201;
t348 = t71 - t283;
t280 = t113 * t181;
t252 = t183 * qJD(2);
t111 = t181 * t259 - t252;
t285 = t111 * t183;
t219 = t280 + t285;
t256 = qJD(4) * t181;
t215 = qJD(4) * t252 + t183 * t201 - t256 * t259;
t305 = t183 * t215;
t233 = t113 * t256 - t305;
t255 = qJD(4) * t183;
t295 = t111 * t255 + t181 * t71;
t5 = t146 * t219 + t233 + t295;
t229 = t142 * t181;
t347 = t295 - t113 * t229 + (t111 * t146 + t215) * t183;
t148 = t162 * qJD(2);
t136 = qJD(1) * t148;
t346 = t136 * qJ(5) + t142 * qJD(5);
t312 = -qJ(3) - pkin(7);
t237 = qJD(2) * t312;
t143 = t184 * qJD(3) + t182 * t237;
t127 = t143 * qJD(1);
t200 = -t182 * qJD(3) + t184 * t237;
t128 = t200 * qJD(1);
t69 = t289 * t127 + t180 * t128;
t171 = pkin(2) * t238;
t73 = t136 * pkin(3) - pkin(8) * t201 + t171;
t176 = -t184 * pkin(2) - pkin(1);
t258 = qJD(1) * t176;
t166 = qJD(3) + t258;
t74 = t146 * pkin(3) - pkin(8) * t259 + t166;
t167 = t312 * t182;
t164 = qJD(1) * t167;
t310 = qJD(2) * pkin(2);
t156 = t164 + t310;
t168 = t312 * t184;
t165 = qJD(1) * t168;
t236 = t289 * t165;
t95 = t180 * t156 - t236;
t89 = qJD(2) * pkin(8) + t95;
t211 = -t181 * t73 - t183 * t69 - t74 * t255 + t89 * t256;
t40 = -t181 * t89 + t183 * t74;
t195 = t40 * t142 + t211;
t234 = t181 * t69 - t183 * t73 + t89 * t255 + t74 * t256;
t41 = t181 * t74 + t183 * t89;
t301 = t41 * t142;
t345 = -t234 + t301;
t228 = t142 * t183;
t268 = t181 * t136;
t344 = t142 * t255 + t146 * t228 + t268;
t274 = t259 * t111;
t124 = t183 * t136;
t275 = t146 * t181;
t328 = t124 + (-t256 - t275) * t142;
t192 = t328 - t274;
t343 = t328 + t274;
t208 = -t180 * t182 + t235;
t151 = t208 * qJD(2);
t296 = t71 * t183;
t297 = t215 * t181;
t341 = ((t111 * t181 - t113 * t183) * qJD(4) - t296 - t297) * t162 - t219 * t151;
t340 = -0.2e1 * t251;
t339 = t71 * qJ(6) + t111 * qJD(6);
t97 = t180 * t164 - t236;
t338 = t181 * qJD(5) + t97;
t96 = t136 * t208;
t53 = t142 * t148 - t96;
t152 = t180 * t165;
t94 = t289 * t156 + t152;
t225 = qJD(2) * pkin(3) + t94;
t203 = t113 * qJ(5) + t225;
t317 = pkin(4) + pkin(5);
t29 = -t317 * t111 + qJD(6) + t203;
t335 = (qJD(6) + t29) * t113;
t334 = t317 * t183;
t262 = qJD(5) - t40;
t333 = 0.2e1 * t346;
t319 = t113 ^ 2;
t332 = -t142 ^ 2 - t319;
t331 = t148 * qJ(5) - qJD(5) * t208;
t320 = t111 ^ 2;
t329 = t319 - t320;
t282 = t113 * t259;
t27 = -t282 + t344;
t198 = t282 + t344;
t30 = t113 * qJ(6) + t40;
t263 = qJD(5) - t30;
t19 = -t317 * t142 + t263;
t7 = -t211 + t346;
t2 = t7 + t339;
t327 = t142 * t19 + t2;
t173 = t180 * pkin(2) + pkin(8);
t279 = t136 * t173;
t42 = t111 * pkin(4) - t203;
t326 = t142 * t42 - t279;
t244 = t162 * t256;
t271 = t151 * t183;
t209 = t244 - t271;
t325 = -t113 * t148 - t162 * t124 + t142 * t209 + t208 * t215;
t243 = t162 * t255;
t272 = t151 * t181;
t210 = t243 + t272;
t324 = t148 * t111 + t142 * t210 + t162 * t268 - t208 * t71;
t288 = qJ(5) * t183;
t322 = t317 * t181 - t288;
t318 = t259 ^ 2;
t316 = pkin(2) * t182;
t131 = t136 * pkin(4);
t315 = t183 * pkin(4);
t68 = t180 * t127 - t289 * t128;
t15 = t71 * pkin(4) - qJ(5) * t215 - t113 * qJD(5) + t68;
t8 = -t71 * pkin(5) - t15;
t314 = t8 * t181;
t313 = t8 * t183;
t247 = pkin(2) * t257;
t83 = pkin(3) * t259 + t146 * pkin(8) + t247;
t98 = t289 * t164 + t152;
t46 = t181 * t83 + t183 * t98;
t311 = qJ(5) * t71;
t309 = t15 * t181;
t308 = t15 * t183;
t307 = t173 * t215;
t134 = t142 * qJ(5);
t31 = t111 * qJ(6) + t41;
t23 = t134 + t31;
t304 = t23 * t142;
t34 = t134 + t41;
t303 = t34 * t142;
t105 = -t289 * t167 - t180 * t168;
t300 = t68 * t105;
t299 = t68 * t181;
t298 = t68 * t183;
t106 = t180 * t167 - t289 * t168;
t93 = -pkin(3) * t208 - t162 * pkin(8) + t176;
t52 = t183 * t106 + t181 * t93;
t293 = -t142 * t322 + t338;
t264 = qJ(6) - t173;
t36 = qJ(5) * t259 + t46;
t292 = qJ(6) * t275 - t183 * qJD(6) + t264 * t256 - t36;
t160 = t264 * t183;
t91 = t181 * t98;
t291 = -qJD(4) * t160 - t181 * qJD(6) - t91 - (qJ(6) * t146 - t83) * t183 + t317 * t259;
t223 = pkin(4) * t181 - t288;
t290 = t142 * t223 - t338;
t287 = t111 * qJ(5);
t286 = t111 * t173;
t284 = t113 * t111;
t281 = t113 * t173;
t278 = t142 * t111;
t276 = t142 * t259;
t273 = t259 * t146;
t270 = t162 * t181;
t269 = t181 * qJ(5);
t187 = qJD(1) ^ 2;
t267 = t184 * t187;
t186 = qJD(2) ^ 2;
t266 = t186 * t182;
t265 = t186 * t184;
t260 = t182 ^ 2 - t184 ^ 2;
t254 = qJD(5) * t183;
t81 = t289 * t143 + t180 * t200;
t250 = t106 * t255 + t181 * t81 + t93 * t256;
t248 = t182 * t310;
t84 = t148 * pkin(3) - t151 * pkin(8) + t248;
t249 = t181 * t84 + t183 * t81 + t93 * t255;
t43 = -qJ(5) * t208 + t52;
t246 = t182 * t267;
t242 = t173 * t256;
t239 = t173 * t255;
t45 = t183 * t83 - t91;
t100 = t181 * t106;
t51 = t183 * t93 - t100;
t231 = pkin(1) * t340;
t80 = t180 * t143 - t289 * t200;
t227 = 0.2e1 * t259;
t226 = t184 * t238;
t174 = -t289 * pkin(2) - pkin(3);
t9 = -t131 + t234;
t206 = -qJ(6) * t215 + t9;
t193 = -t136 * pkin(5) + t206;
t1 = -t113 * qJD(6) + t193;
t224 = -t1 + t304;
t33 = -t142 * pkin(4) + t262;
t222 = -t181 * t34 + t183 * t33;
t221 = -t181 * t41 - t183 * t40;
t18 = t183 * t84 - t250;
t217 = -qJ(6) * t151 - qJD(6) * t162;
t17 = -t106 * t256 + t249;
t207 = -t142 * t225 - t279;
t205 = t42 * t113 + t9;
t204 = t174 - t269;
t26 = t111 * t229 - t296;
t39 = t215 + t278;
t21 = t111 * t210 + t71 * t270;
t191 = -qJD(2) * t259 + t284;
t159 = t264 * t181;
t158 = t204 - t315;
t145 = t146 ^ 2;
t135 = -t204 + t334;
t56 = t113 * pkin(4) + t287;
t55 = t173 * t296;
t54 = t162 * t223 + t105;
t48 = -t162 * t322 - t105;
t47 = -t317 * t113 - t287;
t44 = pkin(4) * t208 - t51;
t37 = -pkin(4) * t259 - t45;
t35 = qJ(6) * t270 + t43;
t32 = t100 + (-qJ(6) * t162 - t93) * t183 + t317 * t208;
t25 = t113 * t228 + t297;
t22 = t223 * t151 + (-t254 + (t269 + t315) * qJD(4)) * t162 + t80;
t20 = -t113 * t209 + t162 * t305;
t16 = -t322 * t151 + (t254 + (-t269 - t334) * qJD(4)) * t162 - t80;
t14 = -t148 * pkin(4) - t18;
t13 = t17 + t331;
t6 = qJ(6) * t243 + (-qJD(4) * t106 - t217) * t181 + t249 + t331;
t4 = qJ(6) * t244 - t317 * t148 + (t217 - t84) * t183 + t250;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t226, t260 * t340, t265, -0.2e1 * t226, -t266, 0, -pkin(7) * t265 + t182 * t231, pkin(7) * t266 + t184 * t231, 0, 0, t151 * t259 + t162 * t201, -t162 * t136 - t151 * t146 - t148 * t259 + t201 * t208, t151 * qJD(2), t146 * t148 - t96, -t148 * qJD(2), 0, t176 * t136 + t166 * t148 + (-t80 + (-qJD(1) * t208 + t146) * t316) * qJD(2), t166 * t151 - t176 * t169 + (t170 * t176 + t227 * t316 - t81) * qJD(2), t105 * t201 - t106 * t136 - t81 * t146 - t95 * t148 - t94 * t151 + t68 * t162 + t208 * t69 + t259 * t80, t300 + t69 * t106 - t94 * t80 + t95 * t81 + (t166 + t258) * t248, t20, t341, -t325, t21, -t324, t53, -t225 * t272 + t105 * t71 + t80 * t111 + t234 * t208 + t51 * t136 + t18 * t142 + t40 * t148 + (-t225 * t255 + t299) * t162, -t225 * t271 + t105 * t215 - t211 * t208 + t80 * t113 - t52 * t136 - t17 * t142 - t41 * t148 + (t225 * t256 + t298) * t162, -t17 * t111 - t18 * t113 - t51 * t215 - t52 * t71 + t221 * t151 + (t211 * t181 + t234 * t183 + (t181 * t40 - t183 * t41) * qJD(4)) * t162, t41 * t17 + t40 * t18 - t211 * t52 - t225 * t80 - t234 * t51 + t300, t20, -t325, -t341, t53, t324, t21, t42 * t272 + t22 * t111 - t44 * t136 - t14 * t142 - t33 * t148 + t9 * t208 + t54 * t71 + (t255 * t42 + t309) * t162, -t13 * t111 + t14 * t113 - t43 * t71 + t44 * t215 + t222 * t151 + (-t7 * t181 + t9 * t183 + (-t181 * t33 - t183 * t34) * qJD(4)) * t162, -t42 * t271 - t22 * t113 + t13 * t142 + t43 * t136 + t34 * t148 - t7 * t208 - t54 * t215 + (t256 * t42 - t308) * t162, t34 * t13 + t33 * t14 + t15 * t54 + t42 * t22 + t7 * t43 + t9 * t44, t20, -t341, t325, t21, -t324, t53, -t29 * t272 + t1 * t208 - t16 * t111 - t32 * t136 - t4 * t142 - t19 * t148 - t48 * t71 + (-t255 * t29 - t314) * t162, t29 * t271 + t16 * t113 + t35 * t136 + t6 * t142 + t23 * t148 - t2 * t208 + t48 * t215 + (-t256 * t29 + t313) * t162, t6 * t111 - t4 * t113 - t32 * t215 + t35 * t71 + (t181 * t23 - t183 * t19) * t151 + (-t1 * t183 + t2 * t181 + (t181 * t19 + t183 * t23) * qJD(4)) * t162, t1 * t32 + t29 * t16 + t19 * t4 + t2 * t35 + t23 * t6 + t8 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t246, t260 * t187, 0, t246, 0, 0, t187 * pkin(1) * t182, pkin(1) * t267, 0, 0, t273, -t145 + t318, -t169 + (t170 + t146) * qJD(2), -t273, 0, 0, t97 * qJD(2) - t146 * t247 - t166 * t259 - t68, t98 * qJD(2) + t166 * t146 - t247 * t259 - t69 (t95 - t97) * t259 + (t98 - t94) * t146 + (-t180 * t136 - t289 * t201) * pkin(2), t94 * t97 - t95 * t98 + (-t166 * t257 + t180 * t69 - t289 * t68) * pkin(2), t25, -t5, t27, t26, t343, -t276, -t97 * t111 - t40 * t259 + t174 * t71 - t298 + (-t45 - t239) * t142 + t207 * t181, -t97 * t113 + t41 * t259 + t174 * t215 + t299 + (t46 + t242) * t142 + t207 * t183, t46 * t111 + t45 * t113 - t55 + (-t146 * t40 - t211 + (-t40 + t281) * qJD(4)) * t183 + (-t146 * t41 + t307 + t234 + (-t41 + t286) * qJD(4)) * t181, t68 * t174 - t40 * t45 - t41 * t46 + t225 * t97 + (qJD(4) * t221 + t181 * t234 - t183 * t211) * t173, t25, t27, t5, -t276, -t343, t26, t33 * t259 - t308 + t158 * t71 + (t37 - t239) * t142 + t290 * t111 + t326 * t181, t36 * t111 - t37 * t113 - t55 + (t146 * t33 + t7 + (t33 + t281) * qJD(4)) * t183 + (-t146 * t34 + t307 + t9 + (-t34 + t286) * qJD(4)) * t181, -t34 * t259 - t309 - t158 * t215 + (-t36 - t242) * t142 - t290 * t113 - t326 * t183, t15 * t158 - t33 * t37 - t34 * t36 + t290 * t42 + (qJD(4) * t222 + t9 * t181 + t7 * t183) * t173, t25, t5, -t27, t26, t343, -t276, -t293 * t111 - t135 * t71 + t159 * t136 - t291 * t142 + t19 * t259 - t229 * t29 + t313, t293 * t113 + t135 * t215 - t160 * t136 + t292 * t142 + t29 * t228 - t23 * t259 + t314, t292 * t111 - t291 * t113 + t159 * t215 - t160 * t71 + t224 * t181 - t327 * t183, -t1 * t159 + t8 * t135 - t2 * t160 + t291 * t19 + t292 * t23 + t293 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t227 * qJD(2), -t169 + (t170 - t146) * qJD(2), -t145 - t318, t95 * t146 + t259 * t94 + t171, 0, 0, 0, 0, 0, 0, t192, -t198, -t347, -t195 * t181 + t345 * t183 + t225 * t259, 0, 0, 0, 0, 0, 0, t192 (t280 - t285) * t146 + t233 - t295, t198, -t42 * t259 + (-t9 + t303) * t183 + (t142 * t33 + t7) * t181, 0, 0, 0, 0, 0, 0, t192, t198, t347, t327 * t181 + t224 * t183 + t259 * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t284, t329, t39, -t284, -t348, t136, t113 * t225 + t345, -t111 * t225 + t195, 0, 0, t284, t39, -t329, t136, t348, -t284, -t56 * t111 + t131 - t205 + t301, -pkin(4) * t215 - t311 + (t34 - t41) * t113 + (t33 - t262) * t111, -t42 * t111 + t56 * t113 - t195 + t333, -t9 * pkin(4) + t7 * qJ(5) + t262 * t34 - t33 * t41 - t42 * t56, t284, -t329, -t39, -t284, -t348, t136, t47 * t111 + t31 * t142 + (pkin(5) + t317) * t136 + t335 - t206, t29 * t111 - t47 * t113 - t30 * t142 - t211 + t333 + t339, t311 + t317 * t215 + (-t23 + t31) * t113 + (-t19 + t263) * t111, t2 * qJ(5) - t1 * t317 - t19 * t31 + t23 * t263 - t29 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t191, t39, t332, t205 - t303, 0, 0, 0, 0, 0, 0, t191, t332, -t39, t193 - t304 - t335; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t71 - t283, t215 - t278, -t319 - t320, -t23 * t111 + t19 * t113 + t8;];
tauc_reg  = t3;
