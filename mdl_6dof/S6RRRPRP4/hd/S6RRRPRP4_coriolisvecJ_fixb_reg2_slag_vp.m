% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRP4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 16:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRPRP4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 16:45:56
% EndTime: 2019-03-09 16:46:10
% DurationCPUTime: 5.51s
% Computational Cost: add. (9022->490), mult. (21574->571), div. (0->0), fcn. (14908->6), ass. (0->268)
t199 = sin(qJ(3));
t200 = sin(qJ(2));
t202 = cos(qJ(2));
t347 = cos(qJ(3));
t167 = t199 * t202 + t347 * t200;
t296 = qJD(1) * t167;
t369 = qJD(5) + t296;
t263 = t369 ^ 2;
t198 = sin(qJ(5));
t201 = cos(qJ(5));
t194 = qJD(2) + qJD(3);
t348 = -pkin(8) - pkin(7);
t173 = t348 * t200;
t169 = qJD(1) * t173;
t340 = qJD(2) * pkin(2);
t162 = t169 + t340;
t143 = t347 * t162;
t174 = t348 * t202;
t170 = qJD(1) * t174;
t307 = t199 * t170;
t122 = -t143 - t307;
t290 = qJD(4) + t122;
t342 = t296 * pkin(4);
t302 = t342 + t290;
t349 = pkin(3) + pkin(9);
t79 = -t349 * t194 + t302;
t279 = t347 * t202;
t253 = qJD(1) * t279;
t295 = qJD(1) * t200;
t278 = t199 * t295;
t153 = -t253 + t278;
t187 = -t202 * pkin(2) - pkin(1);
t172 = qJD(1) * t187;
t218 = -qJ(4) * t296 + t172;
t82 = t349 * t153 + t218;
t33 = t198 * t79 + t201 * t82;
t18 = qJ(6) * t369 + t33;
t266 = t369 * t18;
t130 = -t201 * t153 + t194 * t198;
t261 = t369 * t130;
t132 = t153 * t198 + t194 * t201;
t359 = t369 * t132;
t129 = t194 * t167;
t206 = t129 * qJD(1);
t306 = t199 * t200;
t248 = t194 * t306;
t298 = t194 * t253;
t118 = qJD(1) * t248 - t298;
t288 = qJD(1) * qJD(2);
t268 = t200 * t288;
t181 = pkin(2) * t268;
t373 = t194 * t296;
t56 = pkin(3) * t373 + t118 * qJ(4) - qJD(4) * t296 + t181;
t28 = pkin(9) * t206 + t56;
t292 = qJD(5) * t201;
t293 = qJD(5) * t198;
t281 = qJD(2) * t348;
t254 = qJD(1) * t281;
t163 = t200 * t254;
t164 = t202 * t254;
t269 = qJD(3) * t347;
t294 = qJD(3) * t199;
t72 = t162 * t294 + t199 * t163 - t347 * t164 - t170 * t269;
t53 = -pkin(4) * t118 + t72;
t5 = -t198 * t28 + t201 * t53 - t82 * t292 - t79 * t293;
t376 = t33 * t369 + t5;
t74 = -t153 * t292 + t194 * t293 - t198 * t206;
t75 = qJD(5) * t132 - t201 * t206;
t10 = t201 * (t75 + t359) - (t74 + t261) * t198;
t190 = t200 * t340;
t375 = 0.2e1 * t190;
t127 = t130 * t292;
t73 = t75 * t198;
t330 = -t127 - t73;
t372 = t198 * t359;
t115 = t201 * t118;
t370 = -t198 * t263 - t115;
t166 = -t279 + t306;
t335 = t201 * t74;
t368 = t166 * ((t130 * t201 + t132 * t198) * qJD(5) + t73 + t335) + (t130 * t198 - t132 * t201) * t129;
t367 = -0.2e1 * t288;
t257 = -t162 * t269 - t347 * t163 - t199 * t164 - t170 * t294;
t66 = -t194 * qJD(4) + t257;
t44 = -pkin(4) * t206 - t66;
t13 = t75 * pkin(5) + t74 * qJ(6) - t132 * qJD(6) + t44;
t192 = t194 * qJ(4);
t159 = t347 * t170;
t123 = t199 * t162 - t159;
t343 = t153 * pkin(4);
t98 = t123 - t343;
t87 = t192 + t98;
t49 = t130 * pkin(5) - t132 * qJ(6) + t87;
t366 = -t13 * t198 - t49 * t292;
t365 = t44 * t198 + t87 * t292;
t364 = -t13 * t201 + t49 * t293;
t362 = t75 - t359;
t270 = qJD(2) * t347;
t128 = t248 + (-t269 - t270) * t202;
t99 = t118 * t167;
t361 = -t128 * t296 - t99;
t358 = -t194 * t130 + t370;
t125 = t169 * t199 - t159;
t286 = pkin(2) * t294;
t357 = t125 - t286;
t280 = t347 * t169;
t126 = t280 + t307;
t258 = pkin(2) * t269;
t177 = t258 + qJD(4);
t299 = t126 - t177;
t231 = -pkin(5) * t201 - qJ(6) * t198 - pkin(4);
t356 = pkin(5) * t292 + qJ(6) * t293 - t201 * qJD(6) - t231 * t296 + qJD(4) - t307;
t355 = t198 * pkin(5) - qJ(6) * t201;
t321 = t129 * t201;
t227 = t166 * t293 - t321;
t353 = t166 * t115 - t128 * t130 + t167 * t75 + t227 * t369;
t232 = -t167 * qJ(4) + t187;
t100 = t349 * t166 + t232;
t134 = -t347 * t173 - t174 * t199;
t110 = pkin(4) * t167 + t134;
t327 = t201 * t100 + t198 * t110;
t226 = t128 * qJ(4) - t167 * qJD(4) + t190;
t43 = t349 * t129 + t226;
t135 = t199 * t173 - t347 * t174;
t233 = t348 * t270;
t255 = t199 * t281;
t84 = qJD(3) * t135 + t200 * t255 - t202 * t233;
t63 = -t128 * pkin(4) + t84;
t9 = -qJD(5) * t327 - t198 * t43 + t201 * t63;
t351 = t132 ^ 2;
t350 = t296 ^ 2;
t346 = pkin(2) * t199;
t345 = pkin(5) * t118;
t344 = pkin(5) * t153;
t4 = t198 * t53 + t201 * t28 + t79 * t292 - t82 * t293;
t341 = t198 * t4;
t3 = -t5 + t345;
t2 = t3 * t201;
t103 = t125 - t343;
t119 = pkin(3) * t296 + qJ(4) * t153;
t109 = pkin(2) * t295 + t119;
t149 = t296 * pkin(9);
t85 = t109 + t149;
t48 = t198 * t103 + t201 * t85;
t94 = t119 + t149;
t52 = t198 * t98 + t201 * t94;
t338 = t132 * t49;
t337 = t134 * t72;
t336 = t18 * t201;
t334 = t349 * t74;
t40 = t44 * t201;
t83 = -t173 * t269 - t174 * t294 - t200 * t233 - t202 * t255;
t333 = t83 * t194;
t332 = t84 * t194;
t308 = t198 * t349;
t331 = t127 * t349 + t75 * t308;
t329 = t258 - t280 + t356;
t328 = -t143 + t356;
t326 = qJ(6) * t118;
t324 = t123 * t194;
t322 = t129 * t198;
t320 = t132 * t130;
t318 = t369 * t153;
t317 = t153 * t129;
t316 = t153 * t296;
t314 = t296 * t198;
t313 = t296 * t201;
t312 = t194 * t128;
t311 = t194 * t129;
t310 = t194 * t132;
t309 = t194 * t153;
t113 = t198 * t118;
t205 = qJD(1) ^ 2;
t305 = t202 * t205;
t204 = qJD(2) ^ 2;
t304 = t204 * t200;
t303 = t204 * t202;
t32 = -t198 * t82 + t201 * t79;
t301 = qJD(6) - t32;
t300 = t342 - t299;
t297 = t200 ^ 2 - t202 ^ 2;
t291 = qJD(5) * t349;
t287 = t347 * pkin(2);
t186 = -t287 - pkin(3);
t182 = -pkin(9) + t186;
t259 = t198 * t286;
t285 = -t130 * t259 + t182 * t330;
t284 = t182 * t115;
t283 = t349 * t115;
t282 = t200 * t305;
t277 = t182 * t293;
t276 = t182 * t292;
t275 = t198 * t291;
t274 = t201 * t291;
t273 = t130 ^ 2 - t351;
t272 = -t153 ^ 2 + t350;
t1 = qJD(6) * t369 - t326 + t4;
t17 = -pkin(5) * t369 + t301;
t271 = -t17 * t296 - t1;
t267 = -t153 * t33 + t40;
t265 = t369 * t87;
t264 = pkin(1) * t367;
t29 = t32 * t293;
t256 = t32 * t314 + t29 - t341;
t252 = t202 * t268;
t51 = -t198 * t94 + t201 * t98;
t250 = t51 - t275;
t171 = qJ(4) + t355;
t246 = t17 * t201 - t18 * t198;
t245 = t17 * t198 + t336;
t244 = t198 * t33 + t201 * t32;
t243 = -t198 * t32 + t201 * t33;
t47 = t103 * t201 - t198 * t85;
t240 = -t153 * t17 + t49 * t313 - t366;
t239 = t153 * t32 + t87 * t313 + t365;
t58 = -t100 * t198 + t110 * t201;
t108 = -pkin(3) * t194 + t290;
t112 = -t192 - t123;
t237 = t108 * t153 - t112 * t296;
t236 = -t122 * t153 - t123 * t296;
t230 = t113 + (-t292 - t313) * t369;
t228 = t166 * t292 + t322;
t8 = -t100 * t293 + t110 * t292 + t198 * t63 + t201 * t43;
t225 = t153 * t18 + t49 * t314 + t364;
t106 = t153 * pkin(3) + t218;
t224 = t106 * t296 + t72;
t223 = -t172 * t296 - t72;
t222 = t172 * t153 + t257;
t221 = -t132 * t286 + t182 * t74;
t220 = -t106 * t153 - t66;
t219 = t118 * t166 + t128 * t153 - t129 * t296;
t216 = t201 * t286 - t277;
t27 = -t130 * t153 + t230;
t214 = t126 * t153 - t296 * t357;
t213 = -t134 * t118 + t83 * t153 + t72 * t167 + t296 * t84;
t89 = -t194 * t278 + t298 + t309;
t211 = qJD(5) * t245 + t1 * t198 - t2;
t210 = qJD(5) * t243 + t201 * t5 + t341;
t209 = -t75 * t201 * t166 + t130 * t227;
t208 = (-t130 * t296 + t74) * t201 + t372 + t330;
t183 = qJ(4) + t346;
t161 = t171 + t346;
t148 = t153 * qJ(6);
t120 = pkin(3) * t166 + t232;
t111 = -t166 * pkin(4) + t135;
t90 = t206 - t373;
t88 = t118 - t309;
t86 = pkin(5) * t132 + qJ(6) * t130;
t70 = t166 * t231 + t135;
t65 = pkin(3) * t129 + t226;
t62 = -pkin(4) * t129 - t83;
t57 = -t128 * t369 - t99;
t55 = -pkin(5) * t167 - t58;
t54 = qJ(6) * t167 + t327;
t50 = -t74 + t261;
t37 = -t51 + t344;
t36 = -t148 + t52;
t35 = -t47 + t344;
t34 = -t148 + t48;
t25 = t132 * t153 + t370;
t22 = t130 * t313 - t330;
t21 = t201 * t261 + t73;
t20 = -t335 - t372;
t16 = -t74 * t198 * t166 + t132 * t228;
t15 = (qJD(5) * t355 - qJD(6) * t198) * t166 + t231 * t129 - t83;
t14 = -t166 * t113 - t132 * t128 - t74 * t167 + t228 * t369;
t7 = t128 * pkin(5) - t9;
t6 = -qJ(6) * t128 + qJD(6) * t167 + t8;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t252, t297 * t367, t303, -0.2e1 * t252, -t304, 0, -pkin(7) * t303 + t200 * t264, pkin(7) * t304 + t202 * t264, 0, 0, t361, -t167 * t373 + t219, -t312, t166 * t373 + t317, -t311, 0, t172 * t129 + t153 * t190 + t166 * t181 + t187 * t206 - t332, -t187 * t118 - t172 * t128 + t296 * t375 + t333, -t122 * t128 - t123 * t129 - t135 * t373 + t166 * t257 + t213, t122 * t84 - t123 * t83 - t135 * t257 + t172 * t375 + t337, 0, t312, t311, t361, -t167 * t206 + t219, t166 * t206 + t317, -t108 * t128 + t112 * t129 - t135 * t206 + t66 * t166 + t213, -t106 * t129 - t120 * t373 - t65 * t153 - t56 * t166 + t332, t106 * t128 + t118 * t120 - t167 * t56 - t296 * t65 - t333, t106 * t65 + t108 * t84 + t112 * t83 + t120 * t56 - t135 * t66 + t337, t16, -t368, t14, t209, -t353, t57, -t87 * t321 + t111 * t75 - t118 * t58 - t128 * t32 + t130 * t62 + t369 * t9 + t167 * t5 + (t293 * t87 - t40) * t166, -t111 * t74 + t118 * t327 + t128 * t33 + t132 * t62 + t166 * t365 - t167 * t4 + t87 * t322 - t369 * t8, -t130 * t8 - t132 * t9 + t58 * t74 - t327 * t75 + t243 * t129 + (-qJD(5) * t244 - t198 * t5 + t201 * t4) * t166, t111 * t44 + t32 * t9 + t327 * t4 + t33 * t8 + t5 * t58 + t62 * t87, t16, t14, t368, t57, t353, t209, t118 * t55 + t128 * t17 + t130 * t15 + t166 * t364 - t167 * t3 - t49 * t321 - t369 * t7 + t70 * t75, -t130 * t6 + t132 * t7 - t54 * t75 - t55 * t74 + t245 * t129 + (qJD(5) * t246 + t1 * t201 + t198 * t3) * t166, t1 * t167 - t118 * t54 - t128 * t18 - t132 * t15 + t166 * t366 - t49 * t322 + t369 * t6 + t70 * t74, t1 * t54 + t13 * t70 + t15 * t49 + t17 * t7 + t18 * t6 + t3 * t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t282, t297 * t205, 0, t282, 0, 0, t205 * pkin(1) * t200, pkin(1) * t305, 0, 0, t316, t272, t89, -t316, 0, 0, t125 * t194 + (-t153 * t295 - t194 * t294) * pkin(2) + t223, t126 * t194 + (-t194 * t269 - t295 * t296) * pkin(2) + t222, t118 * t287 - t153 * t258 - t346 * t373 + t214 - t236, -t122 * t125 - t123 * t126 + (-t172 * t295 - t347 * t72 - t199 * t257 + (t122 * t199 + t347 * t123) * qJD(3)) * pkin(2), 0, t88, t90, t316, t272, -t316, -t186 * t118 - t177 * t153 - t183 * t206 + t214 + t237, t109 * t153 - t194 * t357 + t224, t109 * t296 - t194 * t299 + t220, -t106 * t109 - t108 * t357 + t112 * t299 - t183 * t66 + t186 * t72, t20, -t10, t25, t22, t27, t318, -t284 + t183 * t75 + t300 * t130 + (t216 - t47) * t369 + t239, -t183 * t74 + (t48 - t276) * t369 + t300 * t132 + (t118 * t182 - t286 * t369 - t265) * t198 + t267, t130 * t48 + (t47 + t277) * t132 + (t221 - t376) * t201 + t256 + t285, t182 * t210 + t183 * t44 + t244 * t286 + t300 * t87 - t32 * t47 - t33 * t48, t20, t25, t10, t318, -t27, t21, -t284 + t161 * t75 + t329 * t130 + (t216 + t35) * t369 + t240, t130 * t34 - t132 * t35 + t2 + (-t266 + t221) * t201 + ((t132 * t182 - t17) * qJD(5) + t271) * t198 + t285, -t182 * t113 + t161 * t74 - t329 * t132 + (t259 - t34 + t276) * t369 + t225, t13 * t161 - t17 * t35 - t18 * t34 + t211 * t182 - t246 * t286 + t329 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, t272, t89, -t316, 0, 0, t223 + t324, -t122 * t194 + t222, 0, 0, 0, t88, t90, t316, t272, -t316, pkin(3) * t118 - qJ(4) * t206 - qJD(4) * t153 + t236 + t237, t119 * t153 + t224 - t324, t119 * t296 + t194 * t290 + t220, -pkin(3) * t72 - qJ(4) * t66 - t106 * t119 - t108 * t123 - t112 * t290, t20, -t10, t25, t22, t27, t318, qJ(4) * t75 + t130 * t302 - t250 * t369 + t239 + t283, -qJ(4) * t74 + (t52 + t274) * t369 + t302 * t132 + (-t118 * t349 - t265) * t198 + t267, t130 * t52 + t250 * t132 + (-t376 - t334) * t201 + t256 + t331, qJ(4) * t44 - t210 * t349 + t302 * t87 - t32 * t51 - t33 * t52, t20, t25, t10, t318, -t27, t21, t283 + t171 * t75 + (t37 + t275) * t369 + t328 * t130 + t240, t130 * t36 - t132 * t37 + t2 + (-t266 - t334) * t201 + ((-t132 * t349 - t17) * qJD(5) + t271) * t198 + t331, t118 * t308 + t171 * t74 + (-t36 - t274) * t369 - t328 * t132 + t225, t13 * t171 - t17 * t37 - t18 * t36 - t211 * t349 + t328 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, -t316, -t194 ^ 2 - t350, t112 * t194 + t224, 0, 0, 0, 0, 0, 0, t358, -t201 * t263 + t113 - t310, t208, -t194 * t87 - t29 + (-t296 * t32 + t4) * t198 + t376 * t201, 0, 0, 0, 0, 0, 0, t358, t208, -t230 + t310, -t194 * t49 - t2 + t369 * t336 + (t17 * t369 + t1) * t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, -t273, t50, -t320, -t362, -t118, -t132 * t87 + t376, t130 * t87 + t32 * t369 - t4, 0, 0, t320, t50, t273, -t118, t362, -t320, -t130 * t86 - t338 - 0.2e1 * t345 + t376, pkin(5) * t74 - qJ(6) * t75 + (t18 - t33) * t132 + (t17 - t301) * t130, -0.2e1 * t326 - t130 * t49 + t132 * t86 + (0.2e1 * qJD(6) - t32) * t369 + t4, -pkin(5) * t3 + qJ(6) * t1 - t17 * t33 + t18 * t301 - t49 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118 + t320, t50, -t351 - t263, t3 + t338 - t266;];
tauc_reg  = t11;
