% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRPRR7_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR7_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR7_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRR7_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:34:11
% EndTime: 2019-03-08 22:34:25
% DurationCPUTime: 5.37s
% Computational Cost: add. (6395->492), mult. (14795->671), div. (0->0), fcn. (10170->10), ass. (0->254)
t178 = sin(qJ(3));
t261 = qJD(3) * t178;
t166 = pkin(3) * t261;
t182 = cos(qJ(3));
t213 = pkin(9) * t178 - qJ(4) * t182;
t258 = qJD(4) * t178;
t192 = qJD(3) * t213 - t258;
t100 = t166 + t192;
t292 = qJ(4) * t178;
t231 = -pkin(2) - t292;
t184 = -pkin(3) - pkin(9);
t328 = t182 * t184;
t120 = t231 + t328;
t259 = qJD(3) * t182;
t319 = pkin(4) + pkin(8);
t133 = t319 * t259;
t145 = t319 * t178;
t177 = sin(qJ(5));
t179 = sin(qJ(2));
t181 = cos(qJ(5));
t256 = qJD(5) * t181;
t257 = qJD(5) * t177;
t174 = sin(pkin(6));
t269 = qJD(1) * t174;
t183 = cos(qJ(2));
t279 = t177 * t183;
t312 = t181 * t100 - t120 * t257 + t177 * t133 + t145 * t256 - (t178 * t279 + t179 * t181) * t269;
t275 = t181 * t183;
t341 = -t100 * t177 + t181 * t133 - (-t177 * t179 + t178 * t275) * t269;
t129 = t177 * t145;
t280 = t177 * t178;
t207 = pkin(5) * t182 - pkin(10) * t280;
t230 = pkin(10) * t182 - t120;
t340 = t207 * qJD(3) + (t181 * t230 - t129) * qJD(5) + t341;
t255 = qJD(5) * t182;
t238 = t177 * t255;
t260 = qJD(3) * t181;
t196 = t178 * t260 + t238;
t339 = pkin(10) * t196 + t312;
t262 = qJD(3) * t177;
t263 = qJD(2) * t182;
t124 = t181 * t263 + t262;
t236 = t177 * t263;
t126 = -t236 + t260;
t176 = sin(qJ(6));
t180 = cos(qJ(6));
t212 = t124 * t176 - t180 * t126;
t65 = t180 * t124 + t126 * t176;
t316 = t65 * t212;
t127 = t176 * t181 + t177 * t180;
t199 = t178 * t127;
t326 = qJD(5) + qJD(6);
t75 = t326 * t127;
t294 = qJD(2) * t199 + t75;
t315 = pkin(10) - t184;
t265 = qJD(2) * t178;
t167 = pkin(3) * t265;
t105 = qJD(2) * t213 + t167;
t165 = pkin(4) * t263;
t245 = t179 * t269;
t135 = qJD(2) * pkin(8) + t245;
t175 = cos(pkin(6));
t268 = qJD(1) * t178;
t243 = t175 * t268;
t98 = t135 * t182 + t243;
t82 = t165 + t98;
t45 = -t105 * t177 + t181 * t82;
t338 = qJD(2) * t207 - t315 * t257 + t45;
t138 = t315 * t181;
t240 = t181 * t265;
t46 = t181 * t105 + t177 * t82;
t337 = pkin(10) * t240 + qJD(5) * t138 + t46;
t283 = t175 * t182;
t154 = qJD(1) * t283;
t97 = t135 * t178 - t154;
t336 = -qJD(4) - t97;
t335 = t212 ^ 2 - t65 ^ 2;
t160 = qJD(5) + t265;
t226 = pkin(4) * qJD(2) + t135;
t327 = qJD(4) - t154;
t272 = t226 * t178 + t327;
t63 = t184 * qJD(3) + t272;
t244 = t183 * t269;
t85 = qJD(2) * t120 - t244;
t33 = -t177 * t85 + t181 * t63;
t26 = -pkin(10) * t126 + t33;
t19 = pkin(5) * t160 + t26;
t34 = t177 * t63 + t181 * t85;
t27 = -pkin(10) * t124 + t34;
t301 = t180 * t27;
t11 = t176 * t19 + t301;
t266 = qJD(2) * t174;
t233 = qJD(1) * t266;
t218 = t183 * t233;
t209 = t178 * t218;
t51 = t209 + (t182 * t226 + t243) * qJD(3);
t252 = qJD(2) * qJD(3);
t232 = t178 * t252;
t271 = pkin(3) * t232 + t179 * t233;
t61 = qJD(2) * t192 + t271;
t15 = -qJD(5) * t34 - t177 * t61 + t181 * t51;
t163 = t182 * t252;
t149 = t177 * t232;
t94 = qJD(5) * t124 - t149;
t8 = pkin(5) * t163 + pkin(10) * t94 + t15;
t14 = t177 * t51 + t181 * t61 + t63 * t256 - t257 * t85;
t164 = qJD(3) * t256;
t191 = qJD(2) * t196 - t164;
t9 = pkin(10) * t191 + t14;
t2 = -qJD(6) * t11 - t176 * t9 + t180 * t8;
t92 = -qJD(3) * qJ(4) - t98;
t69 = t165 - t92;
t50 = pkin(5) * t124 + t69;
t334 = t50 * t212 + t2;
t152 = qJD(6) + t160;
t253 = qJD(6) * t180;
t254 = qJD(6) * t176;
t21 = t124 * t253 + t126 * t254 - t176 * t191 + t180 * t94;
t333 = t152 * t65 - t21;
t1 = t180 * (qJD(6) * t19 + t9) + t176 * t8 - t27 * t254;
t332 = t50 * t65 - t1;
t190 = qJD(6) * t212 + t176 * t94 + t180 * t191;
t331 = -t152 * t212 + t190;
t330 = -t160 * t33 + t14;
t329 = t160 * t34 + t15;
t91 = -qJD(3) * pkin(3) - t336;
t277 = t180 * t181;
t282 = t176 * t177;
t210 = -t277 + t282;
t106 = t210 * t182;
t73 = t181 * t120 + t129;
t172 = t178 ^ 2;
t173 = t182 ^ 2;
t270 = t172 - t173;
t325 = t21 * t210 + t212 * t294;
t295 = t176 * t257 + t177 * t254 - t180 * t240 + t265 * t282 - t277 * t326;
t324 = -t127 * t190 - t295 * t65;
t201 = -qJ(4) * t259 - t258;
t110 = t166 + t201;
t185 = qJD(3) ^ 2;
t74 = qJD(2) * t201 + t271;
t323 = qJD(2) * (-t110 + t245) - pkin(8) * t185 - t74;
t241 = t183 * t266;
t186 = qJD(2) ^ 2;
t284 = t174 * t186;
t249 = t179 * t284;
t200 = qJD(3) * t175 + t241;
t285 = t174 * t179;
t250 = t178 * t285;
t77 = -qJD(3) * t250 + t182 * t200;
t322 = qJD(3) * (t182 * t241 + t77) - t178 * t249;
t220 = t178 * t241;
t116 = t175 * t178 + t182 * t285;
t78 = qJD(3) * t116 + t220;
t321 = qJD(3) * (t78 + t220) + t182 * t249;
t304 = t176 * t27;
t10 = t180 * t19 - t304;
t320 = t1 * t127 - t10 * t294 - t11 * t295 - t2 * t210;
t130 = t181 * t145;
t52 = pkin(5) * t178 + t177 * t230 + t130;
t276 = t181 * t182;
t58 = -pkin(10) * t276 + t73;
t24 = -t176 * t58 + t180 * t52;
t318 = qJD(6) * t24 + t340 * t176 + t339 * t180;
t25 = t176 * t52 + t180 * t58;
t317 = -qJD(6) * t25 - t339 * t176 + t340 * t180;
t137 = t315 * t177;
t84 = -t137 * t180 - t138 * t176;
t314 = qJD(6) * t84 - t337 * t176 + t338 * t180;
t83 = t137 * t176 - t138 * t180;
t313 = -qJD(6) * t83 + t338 * t176 + t337 * t180;
t311 = -qJD(5) * t73 + t341;
t310 = qJD(2) * pkin(2);
t115 = t250 - t283;
t60 = t135 * t259 + t200 * t268;
t309 = t115 * t60;
t303 = t177 * t33;
t302 = t178 * t60;
t300 = t181 * t94;
t170 = qJD(3) * qJD(4);
t247 = -qJD(3) * t154 + t135 * t261 - t182 * t218;
t53 = -t170 + t247;
t47 = -pkin(4) * t232 - t53;
t299 = t47 * t177;
t298 = t47 * t181;
t297 = t69 * t178;
t296 = t94 * t177;
t246 = -pkin(5) * t181 - pkin(4);
t293 = pkin(5) * t256 - (qJD(2) * t246 - t135) * t178 + t327;
t291 = t124 * t181;
t290 = t126 * t124;
t289 = t126 * t182;
t288 = t160 * t178;
t287 = t160 * t184;
t286 = t164 * t177;
t281 = t177 * t124;
t278 = t178 * t181;
t274 = t185 * t178;
t273 = t185 * t182;
t146 = t319 * t182;
t139 = -pkin(3) * t182 + t231;
t267 = qJD(2) * t139;
t264 = qJD(2) * t179;
t251 = t124 * t278;
t248 = t160 * t278;
t242 = t174 * t264;
t239 = t160 * t256;
t237 = t181 * t255;
t227 = t295 * t152;
t225 = qJD(2) * t73 + t34;
t219 = t182 * t244;
t217 = -t294 * t152 - t210 * t163;
t136 = -t244 - t310;
t214 = -t136 - t244;
t202 = -t115 * t177 + t174 * t275;
t79 = t115 * t181 + t174 * t279;
t38 = t176 * t202 + t180 * t79;
t39 = t176 * t79 - t180 * t202;
t211 = -t126 * t181 + t281;
t208 = t160 * t177;
t204 = qJD(3) * t97 - t247;
t203 = t181 * t232 - t164;
t198 = (-t172 - t173) * t218;
t194 = qJD(3) * (-t214 - t310);
t99 = -t244 + t267;
t193 = qJD(3) * (-t244 - t99 - t267);
t189 = t302 - t182 * t53 + (t178 * t92 + t182 * t91) * qJD(3);
t188 = t302 - t182 * t247 + (-t178 * t98 + t182 * t97) * qJD(3);
t187 = (t178 * t78 + t182 * t77 + (t115 * t182 - t116 * t178) * qJD(3)) * qJD(2);
t162 = pkin(5) * t177 + qJ(4);
t157 = t178 * t186 * t182;
t151 = t181 * t163;
t150 = t178 * t163;
t144 = -0.2e1 * t150;
t143 = 0.2e1 * t150;
t141 = t270 * t186;
t132 = t319 * t261;
t131 = -qJ(4) * t263 + t167;
t117 = -0.2e1 * t270 * t252;
t114 = pkin(5) * t276 + t146;
t107 = t127 * t182;
t87 = t99 * t265;
t86 = -pkin(5) * t238 + (-pkin(8) + t246) * t261;
t72 = -t120 * t177 + t130;
t42 = t182 * t75 - t210 * t261;
t41 = qJD(3) * t199 + t106 * t326;
t32 = t164 * pkin(5) + (-pkin(4) * t261 - pkin(5) * t196) * qJD(2) - t53;
t31 = qJD(5) * t79 + t177 * t78 + t181 * t242;
t30 = qJD(5) * t202 - t177 * t242 + t181 * t78;
t13 = t180 * t26 - t304;
t12 = -t176 * t26 - t301;
t6 = -qJD(6) * t39 - t176 * t31 + t180 * t30;
t5 = qJD(6) * t38 + t176 * t30 + t180 * t31;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t249, -t183 * t284, 0, 0, 0, 0, 0, 0, 0, 0, -t321, -t322, t187, t309 - t116 * t247 + t77 * t98 + t78 * t97 + (t136 - t244) * t242, 0, 0, 0, 0, 0, 0, t187, t321, t322, t309 - t116 * t53 - t77 * t92 + t78 * t91 + (-t183 * t74 + t264 * t99) * t174, 0, 0, 0, 0, 0, 0, t116 * t164 + t77 * t124 + t30 * t160 + (-t116 * t196 + t259 * t79) * qJD(2), -t116 * t94 + t126 * t77 - t160 * t31 + t163 * t202, -t31 * t124 - t30 * t126 - t191 * t202 + t79 * t94, t116 * t47 - t14 * t202 + t15 * t79 + t30 * t33 + t31 * t34 + t69 * t77, 0, 0, 0, 0, 0, 0, -t116 * t190 + t152 * t6 + t163 * t38 + t65 * t77, -t116 * t21 - t152 * t5 - t163 * t39 - t212 * t77, t190 * t39 + t21 * t38 + t212 * t6 - t5 * t65, t1 * t39 + t10 * t6 + t11 * t5 + t116 * t32 + t2 * t38 + t50 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, t117, t273, t144, -t274, 0, -pkin(8) * t273 + t178 * t194, pkin(8) * t274 + t182 * t194, t198 + t188 ((-t178 * t97 - t182 * t98) * t183 + (-t136 - t310) * t179) * t269 + t188 * pkin(8), 0, -t273, t274, t143, t117, t144, t198 + t189, t178 * t193 - t182 * t323, t178 * t323 + t182 * t193, t110 * t99 + t139 * t74 + (-t179 * t99 + (-t178 * t91 + t182 * t92) * t183) * t269 + t189 * pkin(8), t182 * t296 + (t177 * t261 - t237) * t126, -t211 * t261 + (-t203 * t177 + t300 + (t291 + (t126 - t236) * t177) * qJD(5)) * t182, -t160 * t237 - t178 * t94 + (t289 + (-qJD(2) * t173 + t288) * t177) * qJD(3), -t124 * t196 - t191 * t276, t160 * t238 + (qJD(5) * t236 - t164) * t178 + (-t124 * t182 + (qJD(2) * t270 + t288) * t181) * qJD(3), t160 * t259 + t150, -t132 * t124 + t146 * t164 + (t15 + (-qJD(2) * t146 - t69) * t260) * t178 + t311 * t160 + (-t124 * t244 - t69 * t257 + t33 * qJD(3) + t298 + (qJD(3) * t72 - t146 * t257) * qJD(2)) * t182, -t126 * t132 - t146 * t94 + (t262 * t69 - t14) * t178 - t312 * t160 + (-qJD(3) * t225 - t126 * t244 - t256 * t69 - t299) * t182, -t73 * t164 + t72 * t94 - t311 * t126 - t312 * t124 + (t181 * t225 - t303) * t261 + (-t14 * t181 + t15 * t177 + (t177 * t225 + t181 * t33) * qJD(5)) * t182, t14 * t73 + t146 * t47 + t15 * t72 + (-t132 - t219) * t69 + t312 * t34 + t311 * t33, t107 * t21 - t212 * t41, -t106 * t21 - t107 * t190 - t212 * t42 - t41 * t65, t152 * t41 - t178 * t21 + (-qJD(2) * t107 - t212) * t259, t106 * t190 - t42 * t65, t152 * t42 + t178 * t190 + (qJD(2) * t106 - t65) * t259, t152 * t259 + t150, -t106 * t32 - t114 * t190 + t178 * t2 - t42 * t50 + t65 * t86 + t317 * t152 + (-t65 * t244 + (qJD(2) * t24 + t10) * qJD(3)) * t182, -t1 * t178 - t107 * t32 - t114 * t21 + t41 * t50 - t212 * t86 - t318 * t152 + (t212 * t244 + (-qJD(2) * t25 - t11) * qJD(3)) * t182, t1 * t106 - t10 * t41 + t107 * t2 + t11 * t42 + t190 * t25 + t21 * t24 + t212 * t317 - t318 * t65, t1 * t25 + t114 * t32 + t2 * t24 + (t86 - t219) * t50 + t318 * t11 + t317 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t157, t141, 0, t157, 0, 0, t214 * t265, -t136 * t263 - t204, 0, 0, 0, 0, 0, -t157, t141, t157, 0, t87 + (-t131 * t182 + t178 * t244) * qJD(2), 0.2e1 * t170 + (t131 * t178 + t182 * t99) * qJD(2) + t204, -pkin(3) * t60 - qJ(4) * t53 - t131 * t99 + t336 * t92 - t91 * t98, -t126 * t208 - t300, -t164 * t181 + t296 + t211 * qJD(5) + (t177 * t237 + (t281 + (-t126 + t260) * t181) * t178) * qJD(2), -t160 * t257 + t151 + (-t160 * t280 - t289) * qJD(2), t124 * t256 + t286 + (-t177 * t196 + t251) * qJD(2), -t239 + (-t248 + (t124 - t262) * t182) * qJD(2), -t160 * t263, qJ(4) * t164 - t45 * t160 + t299 + t272 * t124 + (-t177 * t287 + t69 * t181) * qJD(5) + ((-qJ(4) * t257 - t33) * t182 + (t297 + (-t292 + t328) * qJD(3)) * t181) * qJD(2), -qJ(4) * t94 + t160 * t46 + t298 + t272 * t126 + (-t177 * t69 - t181 * t287) * qJD(5) + (t182 * t34 + (-t184 * t259 - t297) * t177) * qJD(2), t46 * t124 + t45 * t126 + (-t34 * t265 + t184 * t94 - t15 + (-t124 * t184 - t34) * qJD(5)) * t181 + (t184 * t203 - t14 + t33 * t265 + (t33 + (t126 + t236) * t184) * qJD(5)) * t177, qJ(4) * t47 - t33 * t45 - t34 * t46 + t272 * t69 + (t14 * t177 + t15 * t181 + (t181 * t34 - t303) * qJD(5)) * t184, t325, t127 * t21 - t190 * t210 - t212 * t295 + t294 * t65, t212 * t263 + t217, t324, t227 + (-qJD(3) * t127 + t65) * t263, -t152 * t263, t127 * t32 - t162 * t190 + t293 * t65 - t295 * t50 - t314 * t152 + (qJD(3) * t83 - t10) * t263, -t210 * t32 - t162 * t21 - t293 * t212 - t294 * t50 + t313 * t152 + (-qJD(3) * t84 + t11) * t263, t190 * t84 + t21 * t83 - t212 * t314 + t313 * t65 - t320, t1 * t84 - t10 * t314 - t11 * t313 + t162 * t32 + t2 * t83 + t293 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, -t172 * t186 - t185, t209 + t87 + (t92 + t98) * qJD(3), 0, 0, 0, 0, 0, 0, -qJD(3) * t124 - t160 * t208 + t151, -t239 - qJD(3) * t126 + (-t177 * t259 - t248) * qJD(2), -t286 + t300 + (t126 * t177 - t291) * qJD(5) + (-t251 + (t238 + (t126 + t260) * t178) * t177) * qJD(2), -qJD(3) * t69 + t177 * t330 + t329 * t181, 0, 0, 0, 0, 0, 0, -qJD(3) * t65 + t217, t227 + (-t127 * t263 + t212) * qJD(3), -t324 - t325, -qJD(3) * t50 + t320; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t290, -t124 ^ 2 + t126 ^ 2, t149 + (-qJD(5) + t160) * t124, -t290, t126 * t160 + t191, t163, -t126 * t69 + t329, t124 * t69 - t330, 0, 0, -t316, t335, t333, t316, t331, t163, -t12 * t152 + (-t126 * t65 - t152 * t254 + t163 * t180) * pkin(5) + t334, t13 * t152 + (t126 * t212 - t152 * t253 - t163 * t176) * pkin(5) + t332, -t10 * t65 - t11 * t212 - t12 * t212 + t13 * t65 + (t176 * t190 + t180 * t21 + (-t176 * t212 - t180 * t65) * qJD(6)) * pkin(5), -t10 * t12 - t11 * t13 + (t1 * t176 - t126 * t50 + t180 * t2 + (-t10 * t176 + t11 * t180) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, t335, t333, t316, t331, t163, t11 * t152 + t334, t10 * t152 + t332, 0, 0;];
tauc_reg  = t3;
