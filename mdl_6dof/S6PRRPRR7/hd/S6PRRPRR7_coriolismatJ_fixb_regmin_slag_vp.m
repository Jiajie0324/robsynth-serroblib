% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRR7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRR7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:34:15
% EndTime: 2019-03-08 22:34:32
% DurationCPUTime: 7.41s
% Computational Cost: add. (3794->457), mult. (9159->682), div. (0->0), fcn. (9582->10), ass. (0->381)
t434 = qJD(5) + qJD(6);
t320 = sin(qJ(5));
t323 = cos(qJ(6));
t475 = t323 * t320;
t319 = sin(qJ(6));
t324 = cos(qJ(5));
t489 = t319 * t324;
t256 = t475 + t489;
t325 = cos(qJ(3));
t225 = t256 * t325;
t560 = -t225 / 0.2e1;
t321 = sin(qJ(3));
t318 = sin(pkin(6));
t322 = sin(qJ(2));
t498 = t318 * t322;
t513 = cos(pkin(6));
t237 = t321 * t513 + t325 * t498;
t559 = t237 / 0.2e1;
t524 = -t321 / 0.2e1;
t326 = cos(qJ(2));
t497 = t318 * t326;
t427 = t320 * t497;
t236 = t321 * t498 - t325 * t513;
t505 = t236 * t324;
t184 = t427 + t505;
t472 = t324 * t326;
t426 = t318 * t472;
t506 = t236 * t320;
t185 = t426 - t506;
t377 = t323 * t184 + t319 * t185;
t558 = -t377 / 0.2e1;
t474 = t323 * t324;
t490 = t319 * t320;
t255 = -t474 + t490;
t243 = t255 * qJD(6);
t412 = -t490 / 0.2e1;
t286 = t321 * t474;
t526 = t286 / 0.2e1;
t529 = -t255 / 0.2e1;
t342 = t526 + (t412 + t529) * t321;
t543 = t342 * qJD(2);
t557 = qJD(5) * t255 + t243 - t543;
t327 = -pkin(3) - pkin(9);
t553 = -pkin(10) + t327;
t266 = t553 * t320;
t267 = t553 * t324;
t187 = t266 * t323 + t267 * t319;
t556 = t434 * t187;
t483 = t322 * t320;
t213 = (t321 * t472 - t483) * t318;
t477 = t323 * t213;
t482 = t322 * t324;
t484 = t321 * t326;
t214 = (t320 * t484 + t482) * t318;
t491 = t319 * t214;
t366 = -t491 / 0.2e1 + t477 / 0.2e1;
t376 = t319 * t184 - t323 * t185;
t542 = t237 * t560 + t376 * t524;
t330 = t366 + t542;
t365 = t412 + t474 / 0.2e1;
t69 = (t365 + t529) * t237;
t555 = qJD(2) * t330 + qJD(3) * t69 - t376 * t434;
t476 = t323 * t214;
t492 = t319 * t213;
t367 = -t492 / 0.2e1 - t476 / 0.2e1;
t473 = t324 * t325;
t287 = t323 * t473;
t485 = t320 * t325;
t224 = t319 * t485 - t287;
t541 = t224 * t559 + t321 * t558;
t331 = t367 + t541;
t364 = t475 / 0.2e1 + t489 / 0.2e1;
t68 = (-t256 / 0.2e1 - t364) * t237;
t554 = qJD(2) * t331 + qJD(3) * t68 - t377 * t434;
t552 = t256 * t434;
t486 = t320 * t321;
t411 = -t486 / 0.2e1;
t528 = t255 / 0.2e1;
t339 = t319 * t411 + t321 * t528 + t526;
t551 = t339 * t434;
t550 = t342 * t434;
t521 = pkin(5) * t324;
t534 = pkin(4) + pkin(8);
t403 = t521 + t534;
t374 = t403 * t325;
t358 = -t374 / 0.2e1;
t522 = pkin(5) * t320;
t304 = qJ(4) + t522;
t500 = t304 * t224;
t549 = t256 * t358 + t500 / 0.2e1;
t499 = t304 * t225;
t548 = t255 * t358 - t499 / 0.2e1;
t313 = pkin(3) * t321;
t511 = qJ(4) * t325;
t281 = t313 - t511;
t247 = pkin(9) * t321 + t281;
t233 = t324 * t247;
t283 = t534 * t325;
t262 = t283 * t320;
t465 = t233 + t262;
t519 = pkin(10) * t321;
t135 = t324 * t519 + t465;
t493 = t319 * t135;
t413 = -t493 / 0.2e1;
t263 = t283 * t324;
t520 = pkin(5) * t325;
t119 = t520 + t263 + (-t247 - t519) * t320;
t481 = t323 * t119;
t368 = t413 + t481 / 0.2e1;
t337 = t499 / 0.2e1 + t368;
t357 = t374 / 0.2e1;
t507 = t187 * t321;
t416 = t507 / 0.2e1;
t15 = t255 * t357 + t337 + t416;
t452 = qJD(3) * t304;
t66 = (t528 + t365) * t237;
t471 = t66 * qJD(1);
t547 = qJD(2) * t15 + t255 * t452 + t471;
t136 = -t255 * t304 + t256 * t521;
t430 = t521 / 0.2e1;
t333 = t224 * t430 + t416;
t527 = t256 / 0.2e1;
t4 = (t323 * pkin(5) / 0.2e1 + t522 * t527 + t403 * t528) * t325 + t333 + t337;
t546 = qJD(2) * t4 - qJD(3) * t136 + t471;
t328 = t367 - t541;
t545 = qJD(1) * t328;
t329 = t366 - t542;
t544 = qJD(1) * t329;
t343 = t527 - t364;
t67 = t343 * t237;
t540 = qJD(2) * t328 + qJD(3) * t67;
t539 = qJD(2) * t329 + qJD(3) * t66;
t512 = qJ(4) * t321;
t388 = -t325 * t327 + t512;
t314 = t320 ^ 2;
t316 = t324 ^ 2;
t292 = t314 - t316;
t436 = t325 * qJD(2);
t423 = t324 * t436;
t345 = qJD(3) * t292 + 0.2e1 * t320 * t423;
t449 = qJD(4) * t325;
t536 = qJD(3) * t388 - t449;
t375 = t266 * t319 - t267 * t323;
t470 = t67 * qJD(1);
t535 = t375 * t434 - t470;
t245 = -pkin(2) - t388;
t282 = t534 * t321;
t261 = t324 * t282;
t175 = t245 * t320 - t261;
t133 = pkin(10) * t485 - t175;
t518 = t321 * pkin(5);
t116 = t133 + t518;
t104 = t323 * t116;
t533 = -t104 / 0.2e1;
t532 = -t116 / 0.2e1;
t531 = -t236 / 0.2e1;
t525 = t287 / 0.2e1;
t523 = t325 / 0.2e1;
t45 = -t224 * t256 - t225 * t255;
t517 = t434 * t45;
t89 = t224 * t529 + t225 * t527;
t516 = t434 * t89;
t515 = pkin(5) * qJD(5);
t514 = pkin(5) * qJD(6);
t429 = -t518 / 0.2e1;
t395 = t429 + t133 / 0.2e1;
t11 = (t532 + t395) * t319;
t510 = qJD(2) * t11;
t13 = t323 * t395 + t533;
t509 = qJD(2) * t13;
t508 = t375 * t321;
t502 = t255 * t325;
t501 = t256 * t304;
t496 = t319 * t119;
t495 = t319 * t133;
t487 = t320 * t282;
t176 = t245 * t324 + t487;
t134 = -pkin(10) * t473 + t176;
t494 = t319 * t134;
t488 = t320 * t247;
t480 = t323 * t133;
t479 = t323 * t134;
t478 = t323 * t135;
t223 = t319 * t486 - t286;
t226 = t256 * t321;
t70 = t223 * t225 + t224 * t226;
t469 = t70 * qJD(2);
t92 = -t236 * t318 * t484 + (-t237 * t325 + t498) * t497;
t468 = t92 * qJD(1);
t146 = t256 * t524 + t321 * t364;
t467 = t434 * t146;
t142 = (t527 + t364) * t321;
t466 = t434 * t142;
t315 = t321 ^ 2;
t317 = t325 ^ 2;
t293 = t317 - t315;
t107 = -t223 * t321 + t224 * t325;
t463 = qJD(2) * t107;
t108 = -t225 * t325 + t226 * t321;
t462 = qJD(2) * t108;
t461 = qJD(2) * t225;
t258 = t293 * t320;
t460 = qJD(2) * t258;
t260 = t293 * t324;
t459 = qJD(2) * t260;
t458 = qJD(2) * t321;
t457 = qJD(2) * t322;
t456 = qJD(2) * t324;
t455 = qJD(3) * qJ(4);
t454 = qJD(3) * t255;
t453 = qJD(3) * t256;
t451 = qJD(4) * t320;
t450 = qJD(4) * t324;
t448 = qJD(5) * t320;
t447 = qJD(5) * t321;
t446 = qJD(5) * t324;
t445 = qJD(5) * t327;
t126 = t142 * qJD(2);
t394 = -pkin(3) * t325 - t512;
t268 = -pkin(2) + t394;
t188 = t268 * t325 + t281 * t321;
t444 = t188 * qJD(2);
t189 = -t268 * t321 + t281 * t325;
t443 = t189 * qJD(2);
t442 = t293 * qJD(2);
t441 = t315 * qJD(2);
t440 = t320 * qJD(3);
t439 = t321 * qJD(3);
t438 = t321 * qJD(4);
t437 = t324 * qJD(3);
t311 = t325 * qJD(3);
t435 = t325 * qJD(5);
t433 = pkin(2) * t458;
t432 = pkin(2) * t436;
t431 = pkin(8) * t439;
t428 = t325 * t497;
t425 = t223 * t458;
t424 = t226 * t458;
t422 = t320 * t437;
t421 = t320 * t311;
t420 = t321 * t435;
t419 = t268 * t458;
t418 = qJD(2) * t497;
t298 = t321 * t311;
t297 = t321 * t436;
t300 = t324 * t311;
t417 = t320 * t446;
t415 = -t497 / 0.2e1;
t414 = t497 / 0.2e1;
t410 = -t485 / 0.2e1;
t409 = t485 / 0.2e1;
t408 = -t478 / 0.2e1;
t407 = -t473 / 0.2e1;
t406 = t472 / 0.2e1;
t405 = pkin(5) * t434;
t404 = qJD(2) * (t315 + t317);
t402 = t434 * t321;
t401 = qJD(5) + t458;
t400 = t320 * t300;
t398 = t320 * t414;
t397 = t318 * t406;
t396 = t520 / 0.2e1 + t119 / 0.2e1;
t235 = t403 * t321;
t48 = -t104 + t494;
t1 = (t481 - t493) * t321 + t235 * t224 + (t223 * t403 - t48) * t325;
t335 = t224 * t531 + t325 * t558;
t351 = t255 * t321;
t389 = t414 * t225;
t7 = t389 + (t351 / 0.2e1 - t223 / 0.2e1) * t237 + t335;
t393 = -qJD(1) * t7 + qJD(2) * t1;
t49 = t319 * t116 + t479;
t2 = (t478 + t496) * t321 + t49 * t325 - t235 * t225 - t226 * t374;
t334 = t225 * t531 + t376 * t523;
t390 = t415 * t502;
t8 = t390 + t334;
t392 = -qJD(1) * t8 - qJD(2) * t2;
t391 = qJD(6) + t401;
t50 = -t479 - t495;
t29 = t50 * t321 + (t224 * t522 - t225 * t403) * t325;
t387 = -qJD(2) * t29 + t544;
t34 = -t225 * t374 - t49 * t321;
t386 = -qJD(2) * t34 + t544;
t157 = t224 * t374;
t33 = -t321 * t48 - t157;
t385 = qJD(2) * t33 + t545;
t51 = t480 - t494;
t30 = -pkin(5) * t225 * t485 + t321 * t51 - t157;
t384 = qJD(2) * t30 + t545;
t41 = (-t175 - t261) * t325 - t488 * t321;
t77 = (t398 - t184 / 0.2e1 + t505 / 0.2e1) * t325;
t383 = -t77 * qJD(1) + t41 * qJD(2);
t42 = t465 * t321 - t283 * t486 + (t176 - t487) * t325;
t78 = (t397 - t185 / 0.2e1 - t506 / 0.2e1) * t325;
t382 = -t78 * qJD(1) - t42 * qJD(2);
t341 = (-t483 / 0.2e1 + t321 * t406) * t318;
t349 = t185 * t524 + t237 * t409;
t54 = t341 + t349;
t95 = -t176 * t321 - t283 * t485;
t381 = -qJD(1) * t54 + qJD(2) * t95;
t340 = (-t482 / 0.2e1 + t326 * t411) * t318;
t350 = t184 * t524 + t237 * t407;
t55 = t340 - t350;
t94 = -t175 * t321 + t283 * t473;
t380 = -qJD(1) * t55 - qJD(2) * t94;
t137 = -t255 * t521 - t501;
t332 = t225 * t430 + t375 * t524;
t369 = -t496 / 0.2e1 + t408;
t338 = -t500 / 0.2e1 + t369;
t3 = (-t319 * pkin(5) / 0.2e1 + t522 * t529 + t403 * t527) * t325 + t332 + t338;
t378 = -qJD(2) * t3 + qJD(3) * t137;
t93 = t224 ^ 2 - t225 ^ 2;
t19 = qJD(2) * t93 + qJD(3) * t45;
t121 = -t255 ^ 2 + t256 ^ 2;
t31 = qJD(2) * t45 + qJD(3) * t121;
t141 = t525 + (t412 + t528) * t325;
t373 = qJD(2) * t141 + t453;
t143 = t343 * t325;
t372 = qJD(2) * t143 - t454;
t371 = -t441 - t447;
t370 = t511 / 0.2e1 - t313 / 0.2e1;
t363 = t327 * t524 - t511 / 0.2e1;
t52 = (t281 / 0.2e1 + t370) * t497;
t362 = -t268 * t281 * qJD(2) + t52 * qJD(1);
t16 = -t508 / 0.2e1 + t256 * t357 + t338;
t360 = qJD(2) * t16 + t256 * t452;
t36 = -qJD(3) * t89 + t224 * t461;
t46 = qJD(2) * t89 + t255 * t453;
t359 = t401 * t485;
t154 = (t247 / 0.2e1 + t363) * t320;
t356 = -qJ(4) * t437 - qJD(2) * t154;
t344 = t363 * t324;
t155 = t233 / 0.2e1 + t344;
t355 = qJ(4) * t440 - qJD(2) * t155;
t246 = (t316 / 0.2e1 - t314 / 0.2e1) * t325;
t354 = qJD(2) * t246 + t422;
t348 = -qJD(3) * t236 + t325 * t418;
t183 = qJD(3) * t237 + t321 * t418;
t347 = t317 * t320 * t456 - qJD(3) * t246;
t259 = t292 * t317;
t346 = -qJD(2) * t259 + 0.2e1 * t400;
t336 = qJD(3) * t394 + t449;
t310 = pkin(8) * t311;
t308 = -t436 / 0.2e1;
t307 = t436 / 0.2e1;
t306 = t311 / 0.2e1;
t299 = t321 * t456;
t296 = t320 * t458;
t254 = -t299 - t446;
t253 = -t296 - t448;
t248 = t297 + t435 / 0.2e1;
t234 = t246 * qJD(5);
t220 = t297 + (qJD(5) / 0.2e1 + qJD(6) / 0.2e1) * t325;
t212 = (t322 * t436 + t326 * t439) * t318;
t211 = (-t311 * t326 + t321 * t457) * t318;
t144 = -t325 * t364 + t560;
t140 = t319 * t410 + t525 - t502 / 0.2e1;
t132 = t339 * qJD(4);
t129 = t146 * qJD(4);
t125 = t142 * qJD(4);
t123 = t342 * qJD(4);
t99 = -t262 - t233 / 0.2e1 + t344;
t98 = t263 - t488 / 0.2e1 + t363 * t320;
t91 = qJD(3) * t342 - t225 * t458;
t90 = qJD(3) * t142 - t224 * t458;
t82 = -t126 - t552;
t80 = t185 * t523 + t236 * t409 + t325 * t397;
t79 = t184 * t523 + t236 * t407 + t325 * t398;
t57 = t341 - t349;
t56 = t340 + t350;
t53 = t281 * t415 + t370 * t497;
t38 = qJD(3) * t339 + t225 * t391;
t37 = qJD(3) * t146 + t224 * t391;
t18 = -t507 / 0.2e1 + t368 + t548;
t17 = t508 / 0.2e1 + t369 + t549;
t14 = t323 * t429 + t494 + t533 - t480 / 0.2e1;
t12 = -t479 - t495 / 0.2e1 + (t429 + t532) * t319;
t10 = t390 - t334;
t9 = -t335 + t389 + (t223 - t351) * t559;
t6 = pkin(5) * t255 * t409 - t319 * t396 - t332 + t408 + t549;
t5 = pkin(5) * t256 * t410 + t323 * t396 - t333 + t413 + t548;
t20 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t318 * t457, -t418, 0, 0, 0, 0, 0, -t212, t211, t404 * t497, t212, -t211, -t468 + t53 * qJD(3) + (t268 * t457 + (pkin(8) * t404 + t438) * t326) * t318, 0, 0, 0, 0, 0 (t213 * t321 + t317 * t426) * qJD(2) + t79 * qJD(3) + t57 * qJD(5) (-t214 * t321 - t317 * t427) * qJD(2) + t80 * qJD(3) + t56 * qJD(5), 0, 0, 0, 0, 0 ((t477 - t491) * t321 - t224 * t428) * qJD(2) + t9 * qJD(3) + t434 * t330 (-(t476 + t492) * t321 - t225 * t428) * qJD(2) + t10 * qJD(3) + t434 * t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t183, -t348, 0, t183, t348, t53 * qJD(2) + (-pkin(3) * t237 - qJ(4) * t236) * qJD(3) + t237 * qJD(4), 0, 0, 0, 0, 0, qJD(2) * t79 - t236 * t440 + t237 * t446, qJD(2) * t80 - t236 * t437 - t237 * t448, 0, 0, 0, 0, 0, qJD(2) * t9 - t236 * t453 + t434 * t69, qJD(2) * t10 + t236 * t454 + t434 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t183, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t57 + qJD(5) * t185 + t237 * t437, qJD(2) * t56 - qJD(5) * t184 - t237 * t440, 0, 0, 0, 0, 0, t555, t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t555, t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t52 + t468, 0, 0, 0, 0, 0, -qJD(3) * t77 - qJD(5) * t54, -qJD(3) * t78 - qJD(5) * t55, 0, 0, 0, 0, 0, -qJD(3) * t7 - t329 * t434, -qJD(3) * t8 - t328 * t434; 0, 0, 0, 0, t298, t293 * qJD(3), 0, 0, 0, -pkin(2) * t439, -pkin(2) * t311, 0, qJD(3) * t189 - t325 * t438, -qJD(3) * t188 + qJD(4) * t315 (qJD(3) * t281 - t438) * t268, -t298 * t314 + t317 * t417, -qJD(5) * t259 - 0.2e1 * t321 * t400, -qJD(3) * t258 - t324 * t420, -qJD(3) * t260 + t320 * t420, t298, qJD(3) * t41 + qJD(5) * t95 + t315 * t451, -qJD(3) * t42 - qJD(5) * t94 + t315 * t450 (-qJD(3) * t226 - t224 * t434) * t225, qJD(3) * t70 + t434 * t93, qJD(3) * t108 + t224 * t402, qJD(3) * t107 + t225 * t402, t298, qJD(3) * t1 + qJD(5) * t29 + qJD(6) * t34 + t226 * t438, -qJD(3) * t2 - qJD(5) * t30 - qJD(6) * t33 - t223 * t438; 0, 0, 0, 0, t297, t442, t311, -t439, 0, -t310 - t433, t431 - t432, t336, t310 + t443, -t431 - t444, pkin(8) * t336 - t362, -t234 + (-t314 * t436 + t422) * t321, -t321 * t345 + 0.2e1 * t325 * t417, t300 - t460, -t421 - t459, t248, t98 * qJD(5) - t282 * t440 - t324 * t536 + t383, t99 * qJD(5) - t282 * t437 + t320 * t536 + t382 (-t454 - t461) * t226 + t516, t469 + (t223 * t255 - t226 * t256) * qJD(3) + t517, -t255 * t311 + t462 + t467, -t256 * t311 + t463 + t551, t220 (t223 * t304 - t235 * t256 - t325 * t375) * qJD(3) + t140 * qJD(4) + t5 * qJD(5) + t18 * qJD(6) + t393 (-t187 * t325 + t226 * t304 + t235 * t255) * qJD(3) + t144 * qJD(4) + t6 * qJD(5) + t17 * qJD(6) + t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, -t297, t441, t310 - t419, 0, 0, 0, 0, 0, t320 * t441 + t300, t324 * t441 - t421, 0, 0, 0, 0, 0, qJD(3) * t140 + t424 + t467, qJD(3) * t144 - t425 + t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t347, t346, -t401 * t473, t359, t306, qJD(3) * t98 - qJD(5) * t176 + t381, qJD(3) * t99 + qJD(5) * t175 + t380, -t36, t19, t37, t38, t306, qJD(3) * t5 + qJD(5) * t50 + qJD(6) * t12 + t129 - t387, qJD(3) * t6 - qJD(5) * t51 + qJD(6) * t14 + t132 - t384; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t36, t19, t37, t38, t306, qJD(3) * t18 + qJD(5) * t12 - qJD(6) * t49 + t129 - t386, qJD(3) * t17 + qJD(5) * t14 + qJD(6) * t48 + t132 - t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t52, 0, 0, 0, 0, 0, t77 * qJD(2), t78 * qJD(2), 0, 0, 0, 0, 0, qJD(2) * t7 - t434 * t66, qJD(2) * t8 - t434 * t67; 0, 0, 0, 0, -t297, -t442, 0, 0, 0, t433, t432, 0, -t443, t444, t362, t297 * t314 - t234, 0.2e1 * t324 * t359, -t320 * t447 + t460, -t321 * t446 + t459, -t248, qJD(5) * t154 - t383, qJD(5) * t155 - t382, t226 * t461 + t516, -t469 + t517, -t462 - t466, -t463 - t550, -t220, qJD(4) * t141 - qJD(5) * t4 - qJD(6) * t15 - t393, qJD(4) * t143 - qJD(5) * t3 - qJD(6) * t16 - t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), qJ(4) * qJD(4), -t417, t292 * qJD(5), 0, 0, 0, qJ(4) * t446 + t451, -qJ(4) * t448 + t450, t255 * t552, t434 * t121, 0, 0, 0, qJD(4) * t256 + qJD(5) * t136 - t243 * t304, -qJD(4) * t255 + qJD(5) * t137 - qJD(6) * t501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t455, 0, 0, 0, 0, 0, t440, t437, 0, 0, 0, 0, 0, t373, t372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t354, t345, t253, t254, t308, -t320 * t445 - t356, -t324 * t445 - t355, t46, t31, t82, t557, t308, -t546 - t556, t378 + t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, t31, t82, t557, t308, -t547 - t556, -t360 + t535; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, -t441, t419, 0, 0, 0, 0, 0, t371 * t320, t371 * t324, 0, 0, 0, 0, 0, -qJD(3) * t141 - t424 - t466, -qJD(3) * t143 + t425 - t550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), -t455, 0, 0, 0, 0, 0, -t440, -t437, 0, 0, 0, 0, 0, -t373, -t372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t253, t254, 0, 0, 0, 0, 0, t82, t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82, t557; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54 * qJD(2), t55 * qJD(2), 0, 0, 0, 0, 0, t539, t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t347, -t346 (t423 + t440) * t321 (-t320 * t436 + t437) * t321, t306, -qJD(3) * t154 + t320 * t438 - t381, -qJD(3) * t155 + t324 * t438 - t380, t36, -t19, t90, t91, t306, qJD(3) * t4 + qJD(6) * t11 + t125 + t387, qJD(3) * t3 + qJD(6) * t13 + t123 + t384; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, -t345, t296, t299, t307, t356, t355, -t46, -t31, t126, t543, t307, t546, -t378 + t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t296, t299, 0, 0, 0, 0, 0, t126, t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319 * t514, -t323 * t514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319 * t405 + t510, -t323 * t405 + t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t539, t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, -t19, t90, t91, t306, qJD(3) * t15 - qJD(5) * t11 + t125 + t386, qJD(3) * t16 - qJD(5) * t13 + t123 + t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46, -t31, t126, t543, t307, t547, t360 + t470; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t126, t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t319 * t515 - t510, t323 * t515 - t509; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t20;
