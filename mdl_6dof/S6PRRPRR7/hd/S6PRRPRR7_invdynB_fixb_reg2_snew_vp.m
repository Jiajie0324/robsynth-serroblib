% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PRRPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 06:06
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PRRPRR7_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR7_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR7_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR7_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR7_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRPRR7_invdynB_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 06:05:02
% EndTime: 2019-05-05 06:05:46
% DurationCPUTime: 39.10s
% Computational Cost: add. (119770->843), mult. (241394->1297), div. (0->0), fcn. (160615->12), ass. (0->611)
t831 = sin(qJ(3));
t819 = t831 ^ 2;
t838 = qJD(2) ^ 2;
t813 = t819 * t838;
t837 = qJD(3) ^ 2;
t799 = -t813 - t837;
t835 = cos(qJ(3));
t927 = t831 * t835 * t838;
t793 = qJDD(3) - t927;
t969 = t793 * t831;
t734 = -t799 * t835 + t969;
t824 = sin(pkin(6));
t826 = cos(pkin(6));
t948 = t835 * t793;
t742 = t799 * t831 + t948;
t938 = qJD(2) * qJD(3);
t810 = t835 * t938;
t935 = qJDD(2) * t831;
t782 = 0.2e1 * t810 + t935;
t832 = sin(qJ(2));
t836 = cos(qJ(2));
t875 = t742 * t832 + t782 * t836;
t629 = -t824 * t734 + t826 * t875;
t681 = t742 * t836 - t782 * t832;
t823 = sin(pkin(11));
t825 = cos(pkin(11));
t571 = t629 * t825 + t681 * t823;
t1044 = qJ(1) * t571;
t576 = t629 * t823 - t681 * t825;
t1043 = qJ(1) * t576;
t625 = t826 * t734 + t824 * t875;
t1042 = pkin(7) * (t625 * t824 + t629 * t826);
t820 = t835 ^ 2;
t815 = t820 * t838;
t801 = -t815 - t837;
t792 = qJDD(3) + t927;
t949 = t835 * t792;
t731 = t801 * t831 + t949;
t970 = t792 * t831;
t740 = -t801 * t835 + t970;
t921 = t831 * t938;
t933 = qJDD(2) * t835;
t784 = -0.2e1 * t921 + t933;
t876 = t740 * t832 - t784 * t836;
t628 = t824 * t731 + t826 * t876;
t680 = t740 * t836 + t784 * t832;
t570 = t628 * t825 + t680 * t823;
t1041 = qJ(1) * t570;
t573 = t628 * t823 - t680 * t825;
t1040 = qJ(1) * t573;
t1039 = pkin(1) * t625;
t1038 = pkin(1) * t629;
t624 = -t826 * t731 + t824 * t876;
t1037 = pkin(7) * (t624 * t824 + t628 * t826);
t798 = -t813 + t837;
t733 = t798 * t835 + t970;
t741 = -t798 * t831 + t949;
t932 = qJDD(2) * t836;
t863 = t741 * t832 - t831 * t932;
t642 = -t824 * t733 + t826 * t863;
t934 = qJDD(2) * t832;
t696 = t741 * t836 + t831 * t934;
t1036 = t642 * t823 - t696 * t825;
t1035 = t642 * t825 + t696 * t823;
t1033 = pkin(1) * t624;
t1032 = pkin(1) * t628;
t800 = t815 - t837;
t729 = t800 * t831 + t948;
t738 = -t800 * t835 + t969;
t864 = t738 * t832 + t835 * t932;
t641 = t824 * t729 + t826 * t864;
t695 = t738 * t836 - t832 * t933;
t1031 = t641 * t823 - t695 * t825;
t1030 = t641 * t825 + t695 * t823;
t1028 = pkin(7) * t681;
t1023 = t826 * t733 + t824 * t863;
t1022 = pkin(7) * t680;
t1017 = -t826 * t729 + t824 * t864;
t1016 = pkin(2) * t731;
t1015 = pkin(8) * t731;
t1014 = pkin(8) * t742;
t1009 = pkin(2) * t734;
t1008 = pkin(8) * t734;
t1007 = pkin(8) * t740;
t829 = sin(qJ(6));
t830 = sin(qJ(5));
t834 = cos(qJ(5));
t941 = qJD(2) * t835;
t776 = qJD(3) * t830 + t834 * t941;
t778 = qJD(3) * t834 - t830 * t941;
t833 = cos(qJ(6));
t712 = t833 * t776 + t778 * t829;
t714 = -t776 * t829 + t778 * t833;
t659 = t714 * t712;
t783 = t810 + t935;
t768 = qJDD(5) + t783;
t762 = qJDD(6) + t768;
t994 = -t659 + t762;
t1002 = t829 * t994;
t726 = t778 * t776;
t993 = -t726 + t768;
t1001 = t830 * t993;
t1000 = t833 * t994;
t999 = t834 * t993;
t998 = t783 + t810;
t919 = g(1) * t823 - t825 * g(2);
t946 = g(3) - qJDD(1);
t997 = -t824 * t946 + t826 * t919;
t996 = t823 * t946;
t995 = t825 * t946;
t861 = t921 - t933;
t701 = -t776 * qJD(5) + t834 * qJDD(3) + t830 * t861;
t942 = qJD(2) * t831;
t805 = qJD(5) + t942;
t976 = t776 * t805;
t868 = t701 + t976;
t791 = g(1) * t825 + g(2) * t823;
t724 = -t825 * t791 - t823 * t919;
t723 = -t823 * t791 + t825 * t919;
t691 = -t836 * t791 + t832 * t997;
t678 = -t838 * pkin(2) + qJDD(2) * pkin(8) + t691;
t752 = t824 * t919 + t826 * t946;
t637 = t831 * t678 + t835 * t752;
t984 = qJ(4) * t831;
t988 = pkin(3) * t835;
t909 = -t984 - t988;
t780 = t909 * qJD(2);
t867 = -qJDD(3) * pkin(3) - t837 * qJ(4) + t780 * t942 + qJDD(4) + t637;
t568 = -t792 * pkin(9) + (t783 - t810) * pkin(4) + t867;
t690 = -t832 * t791 - t836 * t997;
t677 = -qJDD(2) * pkin(2) - t838 * pkin(8) + t690;
t841 = t861 * pkin(3) - qJ(4) * t998 + t677;
t940 = pkin(4) * t942 - qJD(3) * pkin(9) + (2 * qJD(4));
t989 = pkin(3) + pkin(9);
t579 = -pkin(4) * t815 - pkin(9) * t933 + (qJD(3) * t989 - t940) * t942 + t841;
t499 = t830 * t568 + t834 * t579;
t917 = t834 * t568 - t830 * t579;
t427 = t834 * t499 - t830 * t917;
t426 = t830 * t499 + t834 * t917;
t954 = t831 * t752;
t992 = -(qJD(2) * t780 + t678) * t835 + t837 * pkin(3) + t954;
t710 = t712 ^ 2;
t711 = t714 ^ 2;
t767 = t776 ^ 2;
t991 = t778 ^ 2;
t797 = qJD(6) + t805;
t796 = t797 ^ 2;
t802 = t805 ^ 2;
t990 = -2 * qJD(4);
t987 = pkin(7) * t824;
t986 = pkin(7) * t826;
t943 = t819 + t820;
t786 = t943 * qJDD(2);
t789 = t813 + t815;
t872 = t786 * t832 + t789 * t836;
t709 = t872 * t826;
t720 = t786 * t836 - t789 * t832;
t648 = t709 * t825 + t720 * t823;
t985 = qJ(1) * t648;
t468 = pkin(5) * t993 - pkin(10) * t868 + t917;
t913 = t830 * qJDD(3) - t834 * t861;
t700 = -qJD(5) * t778 - t913;
t746 = pkin(5) * t805 - pkin(10) * t778;
t475 = -pkin(5) * t767 + pkin(10) * t700 - t746 * t805 + t499;
t405 = -t833 * t468 + t829 * t475;
t406 = t829 * t468 + t833 * t475;
t366 = -t833 * t405 + t829 * t406;
t983 = t366 * t834;
t638 = t835 * t678 - t954;
t542 = t637 * t835 - t638 * t831;
t982 = t542 * t832;
t619 = t659 + t762;
t981 = t619 * t829;
t980 = t619 * t833;
t979 = t677 * t831;
t978 = t677 * t835;
t689 = t726 + t768;
t977 = t689 * t834;
t975 = t782 * t831;
t727 = t784 * t835;
t968 = t797 * t829;
t967 = t797 * t833;
t962 = t805 * t830;
t961 = t805 * t834;
t840 = qJDD(3) * qJ(4) - t992;
t567 = -t861 * pkin(4) - pkin(9) * t815 + qJD(3) * t940 + t840;
t507 = -t700 * pkin(5) - t767 * pkin(10) + t778 * t746 + t567;
t959 = t829 * t507;
t958 = t830 * t366;
t956 = t830 * t567;
t955 = t830 * t689;
t953 = t832 * t752;
t952 = t833 * t507;
t950 = t834 * t567;
t947 = t836 * t752;
t945 = pkin(1) * t709 + t720 * t987;
t944 = pkin(2) * t789 + pkin(8) * t786;
t939 = qJD(6) + t797;
t937 = qJD(4) * qJD(3);
t936 = qJDD(2) * t824;
t931 = t831 * t659;
t930 = t835 * t659;
t929 = t831 * t726;
t928 = t835 * t726;
t926 = -t802 - t991;
t708 = t872 * t824;
t920 = -pkin(1) * t708 + t720 * t986;
t367 = t405 * t829 + t833 * t406;
t543 = t637 * t831 + t835 * t638;
t916 = -t833 * t700 + t829 * t701;
t912 = t832 * t927;
t911 = t836 * t927;
t908 = pkin(3) * t831 - qJ(4) * t835;
t787 = -t832 * t838 + t932;
t907 = -pkin(7) * t787 - t953;
t871 = t836 * t838 + t934;
t906 = -pkin(7) * t871 + t947;
t340 = t367 * t830 + t983;
t336 = t340 * t831 + t507 * t835;
t341 = t367 * t834 - t958;
t905 = t336 * t832 - t341 * t836;
t879 = t829 * t700 + t833 * t701;
t592 = -qJD(6) * t712 + t879;
t686 = t797 * t712;
t539 = t592 + t686;
t844 = (-qJD(6) + t797) * t714 - t916;
t485 = t539 * t829 + t833 * t844;
t891 = -t539 * t833 + t829 * t844;
t412 = t830 * t485 + t834 * t891;
t600 = -t710 - t711;
t398 = t412 * t831 + t600 * t835;
t414 = t485 * t834 - t830 * t891;
t904 = t398 * t832 - t414 * t836;
t535 = t714 * t939 + t916;
t538 = t592 - t686;
t484 = -t535 * t829 + t538 * t833;
t486 = -t535 * t833 - t538 * t829;
t413 = -t484 * t834 - t486 * t830;
t654 = -t710 + t711;
t404 = -t413 * t831 + t654 * t835;
t411 = t484 * t830 - t486 * t834;
t903 = t404 * t832 + t411 * t836;
t410 = t426 * t831 + t567 * t835;
t902 = t410 * t832 - t427 * t836;
t632 = -t796 - t710;
t530 = t632 * t833 - t1002;
t881 = t632 * t829 + t1000;
t476 = t830 * t530 + t834 * t881;
t433 = t476 * t831 + t535 * t835;
t477 = t530 * t834 - t830 * t881;
t901 = t433 * t832 - t477 * t836;
t672 = -t711 - t796;
t555 = -t672 * t829 - t980;
t882 = -t672 * t833 + t981;
t489 = t830 * t555 - t834 * t882;
t540 = -t712 * t939 + t879;
t441 = t489 * t831 + t540 * t835;
t490 = t555 * t834 + t830 * t882;
t900 = t441 * t832 - t490 * t836;
t683 = t710 - t796;
t560 = t683 * t829 + t980;
t562 = t683 * t833 - t981;
t495 = -t560 * t834 - t562 * t830;
t445 = -t495 * t831 + t835 * t844;
t493 = t560 * t830 - t562 * t834;
t899 = t445 * t832 + t493 * t836;
t684 = -t711 + t796;
t559 = t684 * t833 + t1002;
t561 = -t684 * t829 + t1000;
t494 = -t559 * t834 - t561 * t830;
t446 = -t494 * t831 + t539 * t835;
t492 = t559 * t830 - t561 * t834;
t898 = t446 * t832 + t492 * t836;
t591 = -qJD(6) * t714 - t916;
t531 = t591 * t833 + t712 * t968;
t532 = -t591 * t829 + t712 * t967;
t479 = -t531 * t834 - t532 * t830;
t455 = -t479 * t831 - t930;
t478 = t531 * t830 - t532 * t834;
t897 = t455 * t832 + t478 * t836;
t533 = t592 * t829 + t714 * t967;
t534 = t592 * t833 - t714 * t968;
t481 = -t533 * t834 - t534 * t830;
t456 = -t481 * t831 + t930;
t480 = t533 * t830 - t534 * t834;
t896 = t456 * t832 + t480 * t836;
t599 = t840 + 0.2e1 * t937;
t593 = pkin(3) * t789 + t599;
t594 = qJ(4) * t789 + t867;
t505 = -t593 * t831 + t594 * t835;
t779 = t908 * qJDD(2);
t895 = t505 * t832 + t779 * t836;
t610 = (-t712 * t829 - t714 * t833) * t797;
t611 = (-t712 * t833 + t714 * t829) * t797;
t521 = -t610 * t834 - t611 * t830;
t512 = -t521 * t831 + t762 * t835;
t520 = t610 * t830 - t611 * t834;
t894 = t512 * t832 + t520 * t836;
t517 = t599 * t835 + t831 * t867;
t608 = (pkin(3) * qJD(3) + t990) * t942 + t841;
t893 = t517 * t832 - t608 * t836;
t843 = (-qJD(5) + t805) * t778 - t913;
t581 = t830 * t843 - t834 * t868;
t687 = -t767 - t991;
t525 = t581 * t831 + t687 * t835;
t584 = t830 * t868 + t834 * t843;
t892 = t525 * t832 - t584 * t836;
t890 = t543 * t832 - t677 * t836;
t667 = (qJD(5) + t805) * t778 + t913;
t869 = t701 - t976;
t582 = t667 * t830 - t834 * t869;
t725 = -t767 + t991;
t545 = -t582 * t831 + t725 * t835;
t583 = t667 * t834 + t830 * t869;
t889 = t545 * t832 + t583 * t836;
t707 = -t802 - t767;
t621 = t830 * t707 + t999;
t553 = t621 * t831 + t667 * t835;
t622 = t707 * t834 - t1001;
t888 = t553 * t832 - t622 * t836;
t635 = t834 * t926 - t955;
t557 = t635 * t831 + t835 * t869;
t636 = -t830 * t926 - t977;
t887 = t557 * t832 - t636 * t836;
t750 = t767 - t802;
t652 = -t750 * t830 - t977;
t565 = -t652 * t831 + t835 * t843;
t651 = -t750 * t834 + t955;
t886 = t565 * t832 + t651 * t836;
t751 = t802 - t991;
t650 = -t751 * t834 - t1001;
t566 = -t831 * t650 + t835 * t868;
t653 = t751 * t830 - t999;
t885 = t566 * t832 + t653 * t836;
t660 = -t700 * t834 - t776 * t962;
t606 = -t660 * t831 - t928;
t662 = t700 * t830 - t776 * t961;
t884 = t606 * t832 + t662 * t836;
t663 = -t701 * t830 - t778 * t961;
t607 = -t663 * t831 + t928;
t661 = -t701 * t834 + t778 * t962;
t883 = t607 * t832 + t661 * t836;
t675 = (t776 * t830 + t778 * t834) * t805;
t656 = -t675 * t831 + t768 * t835;
t676 = (t776 * t834 - t778 * t830) * t805;
t880 = t656 * t832 + t676 * t836;
t616 = t690 * t836 - t691 * t832;
t617 = t690 * t832 + t691 * t836;
t719 = t727 - t975;
t790 = -t813 + t815;
t878 = t719 * t832 + t790 * t836;
t756 = t871 * t826;
t873 = t756 * t825 + t787 * t823;
t705 = t756 * t823 - t787 * t825;
t771 = t943 * t938;
t870 = -qJDD(3) * t836 + t771 * t832;
t866 = (-t708 * t824 - t709 * t826) * pkin(7);
t747 = -t820 * t938 + t831 * t861;
t860 = t747 * t832 - t911;
t748 = t783 * t835 - t819 * t938;
t859 = t748 * t832 + t911;
t361 = -pkin(5) * t507 + pkin(10) * t367;
t314 = pkin(4) * t507 + pkin(10) * t958 - t341 * t989 - t834 * t361;
t320 = pkin(4) * t340 + pkin(5) * t366 - qJ(4) * t341;
t335 = -t340 * t835 + t507 * t831;
t304 = -pkin(8) * t335 - t314 * t831 + t320 * t835;
t309 = -pkin(2) * t335 + pkin(10) * t983 - qJ(4) * t507 + t340 * t989 + t830 * t361;
t321 = t336 * t836 + t341 * t832;
t858 = pkin(7) * t321 + t304 * t832 + t309 * t836;
t358 = -pkin(5) * t600 + pkin(10) * t485 + t367;
t360 = -pkin(10) * t891 - t366;
t323 = pkin(4) * t600 - t834 * t358 - t830 * t360 - t414 * t989;
t363 = pkin(4) * t412 + pkin(5) * t891 - qJ(4) * t414;
t397 = -t412 * t835 + t600 * t831;
t319 = -pkin(8) * t397 - t323 * t831 + t363 * t835;
t322 = -pkin(2) * t397 - qJ(4) * t600 + t830 * t358 - t834 * t360 + t412 * t989;
t369 = t398 * t836 + t414 * t832;
t857 = pkin(7) * t369 + t319 * t832 + t322 * t836;
t425 = -pkin(5) * t535 + pkin(10) * t530 - t952;
t459 = -pkin(10) * t881 + t959;
t359 = pkin(4) * t535 - t834 * t425 - t830 * t459 - t477 * t989;
t364 = pkin(4) * t476 + pkin(5) * t881 - qJ(4) * t477 - t405;
t432 = -t476 * t835 + t535 * t831;
t326 = -pkin(8) * t432 - t359 * t831 + t364 * t835;
t342 = -pkin(2) * t432 - qJ(4) * t535 + t830 * t425 - t834 * t459 + t476 * t989;
t391 = t433 * t836 + t477 * t832;
t856 = pkin(7) * t391 + t326 * t832 + t342 * t836;
t430 = -pkin(5) * t540 + pkin(10) * t555 + t959;
t467 = pkin(10) * t882 + t952;
t362 = pkin(4) * t540 - t834 * t430 - t830 * t467 - t490 * t989;
t368 = pkin(4) * t489 - pkin(5) * t882 - qJ(4) * t490 - t406;
t440 = -t489 * t835 + t540 * t831;
t330 = -pkin(8) * t440 - t362 * t831 + t368 * t835;
t351 = -pkin(2) * t440 - qJ(4) * t540 + t830 * t430 - t834 * t467 + t489 * t989;
t399 = t441 * t836 + t490 * t832;
t855 = pkin(7) * t399 + t330 * t832 + t351 * t836;
t376 = pkin(4) * t567 - t427 * t989;
t384 = pkin(4) * t426 - qJ(4) * t427;
t409 = -t426 * t835 + t567 * t831;
t339 = -pkin(8) * t409 - t376 * t831 + t384 * t835;
t356 = -pkin(2) * t409 - qJ(4) * t567 + t426 * t989;
t375 = t410 * t836 + t427 * t832;
t854 = pkin(7) * t375 + t339 * t832 + t356 * t836;
t394 = pkin(4) * t687 - t584 * t989 - t427;
t502 = pkin(4) * t581 - qJ(4) * t584;
t524 = -t581 * t835 + t687 * t831;
t374 = -pkin(8) * t524 - t394 * t831 + t502 * t835;
t388 = -pkin(2) * t524 - qJ(4) * t687 + t581 * t989 + t426;
t488 = t525 * t836 + t584 * t832;
t853 = pkin(7) * t488 + t374 * t832 + t388 * t836;
t447 = pkin(4) * t621 - qJ(4) * t622 + t917;
t469 = pkin(4) * t667 - t622 * t989 + t950;
t552 = -t621 * t835 + t667 * t831;
t389 = -pkin(8) * t552 + t447 * t835 - t469 * t831;
t431 = -pkin(2) * t552 - qJ(4) * t667 + t621 * t989 - t956;
t504 = t553 * t836 + t622 * t832;
t852 = pkin(7) * t504 + t389 * t832 + t431 * t836;
t448 = pkin(4) * t635 - qJ(4) * t636 - t499;
t474 = pkin(4) * t869 - t636 * t989 - t956;
t556 = -t635 * t835 + t831 * t869;
t390 = -pkin(8) * t556 + t448 * t835 - t474 * t831;
t435 = -pkin(2) * t556 - qJ(4) * t869 + t635 * t989 - t950;
t506 = t557 * t836 + t636 * t832;
t851 = pkin(7) * t506 + t390 * t832 + t435 * t836;
t516 = t599 * t831 - t835 * t867;
t450 = -pkin(2) * t516 + pkin(3) * t867 - qJ(4) * t599;
t457 = -pkin(8) * t516 + t608 * t908;
t487 = t517 * t836 + t608 * t832;
t850 = pkin(7) * t487 + t450 * t836 + t457 * t832;
t839 = t942 * t990 + t841;
t596 = (-t784 + t921) * pkin(3) + t839;
t546 = -qJ(4) * t727 - t596 * t831 + t1015;
t549 = pkin(3) * t792 + qJ(4) * t801 + t1016 - t867;
t849 = t546 * t832 + t549 * t836 + t1022;
t595 = -pkin(3) * t921 + qJ(4) * t782 - t839;
t547 = -pkin(3) * t975 + t595 * t835 - t1008;
t548 = -t1009 + pkin(3) * t799 - 0.2e1 * t937 + (-qJDD(3) - t793) * qJ(4) + t992;
t848 = t547 * t832 + t548 * t836 + t1028;
t601 = t637 - t1016;
t633 = t979 - t1015;
t847 = t601 * t836 + t633 * t832 - t1022;
t602 = t638 + t1009;
t634 = t978 + t1008;
t846 = t602 * t836 + t634 * t832 - t1028;
t513 = t543 * t836 + t677 * t832;
t842 = pkin(7) * t513 - (-pkin(2) * t836 - pkin(8) * t832) * t542;
t757 = t787 * t826;
t755 = t787 * t824;
t754 = t871 * t824;
t749 = qJDD(3) * t832 + t771 * t836;
t728 = t998 * t831;
t722 = t870 * t826;
t721 = t870 * t824;
t718 = t782 * t835 + t784 * t831;
t706 = -t757 * t823 - t825 * t871;
t704 = t757 * t825 - t823 * t871;
t699 = t748 * t836 - t912;
t698 = t747 * t836 + t912;
t674 = t719 * t836 - t790 * t832;
t666 = -t722 * t823 + t749 * t825;
t665 = t722 * t825 + t749 * t823;
t658 = -t947 + (t754 * t824 + t756 * t826) * pkin(7);
t657 = -t953 + (-t755 * t824 - t757 * t826) * pkin(7);
t655 = t675 * t835 + t768 * t831;
t649 = -t709 * t823 + t720 * t825;
t647 = -t824 * t728 + t826 * t859;
t646 = -t824 * t727 + t826 * t860;
t645 = t826 * t728 + t824 * t859;
t644 = t826 * t727 + t824 * t860;
t639 = qJ(1) * t649;
t615 = -t824 * t718 + t826 * t878;
t614 = t826 * t718 + t824 * t878;
t613 = pkin(2) * t784 - t1007 - t978;
t612 = -pkin(2) * t782 - t1014 + t979;
t609 = t617 * t826;
t605 = t663 * t835 + t929;
t604 = t660 * t835 - t929;
t598 = -pkin(1) * t755 + t824 * t690 + t826 * t906;
t597 = pkin(1) * t754 + t824 * t691 + t826 * t907;
t590 = -t647 * t823 + t699 * t825;
t589 = -t646 * t823 + t698 * t825;
t588 = t647 * t825 + t699 * t823;
t587 = t646 * t825 + t698 * t823;
t586 = -t616 * t826 + t824 * t752;
t585 = -t616 * t824 - t826 * t752;
t580 = t656 * t836 - t676 * t832;
t564 = t835 * t650 + t831 * t868;
t563 = t652 * t835 + t831 * t843;
t551 = -t615 * t823 + t674 * t825;
t550 = t615 * t825 + t674 * t823;
t544 = t582 * t835 + t725 * t831;
t529 = t607 * t836 - t661 * t832;
t528 = t606 * t836 - t662 * t832;
t527 = t1014 + t831 * t595 + (pkin(2) + t988) * t782;
t526 = t1007 + t835 * t596 + (-pkin(2) - t984) * t784;
t522 = t543 + t944;
t519 = -t824 * t655 + t826 * t880;
t518 = -pkin(2) * t677 + pkin(8) * t543;
t515 = t566 * t836 - t653 * t832;
t514 = t565 * t836 - t651 * t832;
t511 = t521 * t835 + t762 * t831;
t510 = -pkin(1) * t585 + t617 * t986;
t509 = -t586 * t823 + t617 * t825;
t508 = t586 * t825 + t617 * t823;
t503 = t836 * t542 + t866;
t501 = (-t585 * t824 - t586 * t826) * pkin(7);
t500 = t593 * t835 + t594 * t831 + t944;
t497 = -t824 * t605 + t826 * t883;
t496 = -t824 * t604 + t826 * t884;
t491 = t545 * t836 - t583 * t832;
t482 = t836 * t505 - t832 * t779 + t866;
t473 = -t832 * t602 + t836 * t634 + t1042;
t472 = -t832 * t601 + t836 * t633 + t1037;
t471 = -t824 * t564 + t826 * t885;
t470 = -t824 * t563 + t826 * t886;
t465 = -t824 * t556 + t826 * t887;
t464 = t826 * t556 + t824 * t887;
t463 = t542 * t824 + t826 * t890;
t462 = -t542 * t826 + t824 * t890;
t461 = -t824 * t552 + t826 * t888;
t460 = t826 * t552 + t824 * t888;
t458 = t512 * t836 - t520 * t832;
t454 = t481 * t835 + t931;
t453 = t479 * t835 - t931;
t452 = -t824 * t612 + t826 * t846 + t1039;
t451 = -t824 * t613 + t826 * t847 + t1033;
t449 = -t522 * t824 + t826 * t982 + t920;
t444 = t494 * t835 + t539 * t831;
t443 = t495 * t835 + t831 * t844;
t442 = -t824 * t544 + t826 * t889;
t439 = -t824 * t524 + t826 * t892;
t438 = t826 * t524 + t824 * t892;
t437 = t836 * t546 - t832 * t549 - t1037;
t436 = t836 * t547 - t832 * t548 - t1042;
t434 = pkin(8) * t517 + (-pkin(2) + t909) * t608;
t429 = -t824 * t516 + t826 * t893;
t428 = t826 * t516 + t824 * t893;
t424 = -t824 * t500 + t826 * t895 + t920;
t423 = -t463 * t823 + t513 * t825;
t422 = t463 * t825 + t513 * t823;
t421 = -t465 * t823 + t506 * t825;
t420 = t465 * t825 + t506 * t823;
t419 = -t824 * t526 + t826 * t849 - t1033;
t418 = -t824 * t527 + t826 * t848 - t1039;
t417 = -t824 * t511 + t826 * t894;
t416 = -t461 * t823 + t504 * t825;
t415 = t461 * t825 + t504 * t823;
t408 = t446 * t836 - t492 * t832;
t407 = t445 * t836 - t493 * t832;
t403 = t413 * t835 + t654 * t831;
t401 = t456 * t836 - t480 * t832;
t400 = t455 * t836 - t478 * t832;
t396 = -t439 * t823 + t488 * t825;
t395 = t439 * t825 + t488 * t823;
t393 = -t429 * t823 + t487 * t825;
t392 = t429 * t825 + t487 * t823;
t387 = -pkin(2) * t636 + pkin(8) * t557 + t448 * t831 + t474 * t835;
t386 = -pkin(2) * t622 + pkin(8) * t553 + t447 * t831 + t469 * t835;
t385 = -(pkin(2) * t832 - pkin(8) * t836) * t542 + (-t462 * t824 - t463 * t826) * pkin(7);
t383 = -pkin(1) * t462 - t824 * t518 + t826 * t842;
t382 = -t824 * t444 + t826 * t898;
t381 = -t824 * t443 + t826 * t899;
t380 = -t824 * t454 + t826 * t896;
t379 = -t824 * t453 + t826 * t897;
t378 = -t824 * t440 + t826 * t900;
t377 = t826 * t440 + t824 * t900;
t373 = -t824 * t432 + t826 * t901;
t372 = t826 * t432 + t824 * t901;
t371 = -pkin(2) * t584 + pkin(8) * t525 + t394 * t835 + t502 * t831;
t370 = t404 * t836 - t411 * t832;
t357 = -t832 * t450 + t836 * t457 + (-t428 * t824 - t429 * t826) * pkin(7);
t355 = -t824 * t409 + t826 * t902;
t354 = t826 * t409 + t824 * t902;
t353 = -t378 * t823 + t399 * t825;
t352 = t378 * t825 + t399 * t823;
t350 = -t824 * t403 + t826 * t903;
t349 = t836 * t390 - t832 * t435 + (-t464 * t824 - t465 * t826) * pkin(7);
t348 = -t824 * t397 + t826 * t904;
t347 = t826 * t397 + t824 * t904;
t346 = -pkin(1) * t428 - t824 * t434 + t826 * t850;
t345 = -t373 * t823 + t391 * t825;
t344 = t373 * t825 + t391 * t823;
t343 = t836 * t389 - t832 * t431 + (-t460 * t824 - t461 * t826) * pkin(7);
t338 = -pkin(1) * t464 - t824 * t387 + t826 * t851;
t337 = -pkin(1) * t460 - t824 * t386 + t826 * t852;
t334 = -t355 * t823 + t375 * t825;
t333 = t355 * t825 + t375 * t823;
t332 = t836 * t374 - t832 * t388 + (-t438 * t824 - t439 * t826) * pkin(7);
t331 = -pkin(2) * t427 + pkin(8) * t410 + t376 * t835 + t384 * t831;
t329 = -t348 * t823 + t369 * t825;
t328 = t348 * t825 + t369 * t823;
t327 = -pkin(2) * t490 + pkin(8) * t441 + t362 * t835 + t368 * t831;
t325 = -pkin(2) * t477 + pkin(8) * t433 + t359 * t835 + t364 * t831;
t324 = -pkin(1) * t438 - t824 * t371 + t826 * t853;
t318 = t836 * t330 - t832 * t351 + (-t377 * t824 - t378 * t826) * pkin(7);
t317 = -pkin(2) * t414 + pkin(8) * t398 + t323 * t835 + t363 * t831;
t316 = t836 * t339 - t832 * t356 + (-t354 * t824 - t355 * t826) * pkin(7);
t315 = t836 * t326 - t832 * t342 + (-t372 * t824 - t373 * t826) * pkin(7);
t313 = -t824 * t335 + t826 * t905;
t312 = t826 * t335 + t824 * t905;
t311 = -pkin(1) * t377 - t824 * t327 + t826 * t855;
t310 = -pkin(1) * t354 - t824 * t331 + t826 * t854;
t308 = -pkin(1) * t372 - t824 * t325 + t826 * t856;
t307 = -t313 * t823 + t321 * t825;
t306 = t313 * t825 + t321 * t823;
t305 = t836 * t319 - t832 * t322 + (-t347 * t824 - t348 * t826) * pkin(7);
t303 = -pkin(2) * t341 + pkin(8) * t336 + t314 * t835 + t320 * t831;
t302 = -pkin(1) * t347 - t824 * t317 + t826 * t857;
t301 = t836 * t304 - t832 * t309 + (-t312 * t824 - t313 * t826) * pkin(7);
t300 = -pkin(1) * t312 - t824 * t303 + t826 * t858;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t724, 0, 0, 0, 0, 0, 0, t706, t705, 0, t509, 0, 0, 0, 0, 0, 0, t573, t576, t649, t423, 0, 0, 0, 0, 0, 0, t649, -t573, -t576, t393, 0, 0, 0, 0, 0, 0, t416, t421, t396, t334, 0, 0, 0, 0, 0, 0, t345, t353, t329, t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t723, 0, 0, 0, 0, 0, 0, t704, -t873, 0, t508, 0, 0, 0, 0, 0, 0, -t570, -t571, t648, t422, 0, 0, 0, 0, 0, 0, t648, t570, t571, t392, 0, 0, 0, 0, 0, 0, t415, t420, t395, t333, 0, 0, 0, 0, 0, 0, t344, t352, t328, t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t946, 0, 0, 0, 0, 0, 0, t755, -t754, 0, t585, 0, 0, 0, 0, 0, 0, -t624, -t625, t708, t462, 0, 0, 0, 0, 0, 0, t708, t624, t625, t428, 0, 0, 0, 0, 0, 0, t460, t464, t438, t354, 0, 0, 0, 0, 0, 0, t372, t377, t347, t312; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t996, -t995, -t723, -qJ(1) * t723, 0, 0, -t705, 0, t706, t823 * t936, -qJ(1) * t704 - t598 * t823 + t657 * t825, qJ(1) * t873 - t597 * t823 + t658 * t825, -t609 * t823 + t616 * t825, -qJ(1) * t508 + t501 * t825 - t510 * t823, t590, t551, -t1036, t589, t1031, t666, -t451 * t823 + t472 * t825 + t1041, -t452 * t823 + t473 * t825 + t1044, -t449 * t823 + t503 * t825 - t985, -qJ(1) * t422 - t383 * t823 + t385 * t825, t666, t1036, -t1031, t590, t551, t589, -t424 * t823 + t482 * t825 - t985, -t419 * t823 + t437 * t825 - t1041, -t418 * t823 + t436 * t825 - t1044, -qJ(1) * t392 - t346 * t823 + t357 * t825, -t497 * t823 + t529 * t825, -t442 * t823 + t491 * t825, -t471 * t823 + t515 * t825, -t496 * t823 + t528 * t825, -t470 * t823 + t514 * t825, -t519 * t823 + t580 * t825, -qJ(1) * t415 - t337 * t823 + t343 * t825, -qJ(1) * t420 - t338 * t823 + t349 * t825, -qJ(1) * t395 - t324 * t823 + t332 * t825, -qJ(1) * t333 - t310 * t823 + t316 * t825, -t380 * t823 + t401 * t825, -t350 * t823 + t370 * t825, -t382 * t823 + t408 * t825, -t379 * t823 + t400 * t825, -t381 * t823 + t407 * t825, -t417 * t823 + t458 * t825, -qJ(1) * t344 - t308 * t823 + t315 * t825, -qJ(1) * t352 - t311 * t823 + t318 * t825, -qJ(1) * t328 - t302 * t823 + t305 * t825, -qJ(1) * t306 - t300 * t823 + t301 * t825; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t995, -t996, t724, qJ(1) * t724, 0, 0, t873, 0, t704, -t825 * t936, qJ(1) * t706 + t598 * t825 + t657 * t823, qJ(1) * t705 + t597 * t825 + t658 * t823, t609 * t825 + t616 * t823, qJ(1) * t509 + t501 * t823 + t510 * t825, t588, t550, t1035, t587, -t1030, t665, t451 * t825 + t472 * t823 + t1040, t452 * t825 + t473 * t823 + t1043, t449 * t825 + t503 * t823 + t639, qJ(1) * t423 + t383 * t825 + t385 * t823, t665, -t1035, t1030, t588, t550, t587, t424 * t825 + t482 * t823 + t639, t419 * t825 + t437 * t823 - t1040, t418 * t825 + t436 * t823 - t1043, qJ(1) * t393 + t346 * t825 + t357 * t823, t497 * t825 + t529 * t823, t442 * t825 + t491 * t823, t471 * t825 + t515 * t823, t496 * t825 + t528 * t823, t470 * t825 + t514 * t823, t519 * t825 + t580 * t823, qJ(1) * t416 + t337 * t825 + t343 * t823, qJ(1) * t421 + t338 * t825 + t349 * t823, qJ(1) * t396 + t324 * t825 + t332 * t823, qJ(1) * t334 + t310 * t825 + t316 * t823, t380 * t825 + t401 * t823, t350 * t825 + t370 * t823, t382 * t825 + t408 * t823, t379 * t825 + t400 * t823, t381 * t825 + t407 * t823, t417 * t825 + t458 * t823, qJ(1) * t345 + t308 * t825 + t315 * t823, qJ(1) * t353 + t311 * t825 + t318 * t823, qJ(1) * t329 + t302 * t825 + t305 * t823, qJ(1) * t307 + t300 * t825 + t301 * t823; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t919, t791, 0, 0, 0, 0, t754, 0, t755, t826 * qJDD(2), pkin(1) * t757 - t826 * t690 + t824 * t906, -pkin(1) * t756 - t826 * t691 + t824 * t907, t617 * t824, pkin(1) * t586 + t617 * t987, t645, t614, t1023, t644, -t1017, t721, t826 * t613 + t824 * t847 - t1032, t826 * t612 + t824 * t846 - t1038, t522 * t826 + t824 * t982 + t945, pkin(1) * t463 + t826 * t518 + t824 * t842, t721, -t1023, t1017, t645, t614, t644, t826 * t500 + t824 * t895 + t945, t826 * t526 + t824 * t849 + t1032, t826 * t527 + t824 * t848 + t1038, pkin(1) * t429 + t826 * t434 + t824 * t850, t826 * t605 + t824 * t883, t826 * t544 + t824 * t889, t826 * t564 + t824 * t885, t826 * t604 + t824 * t884, t826 * t563 + t824 * t886, t826 * t655 + t824 * t880, pkin(1) * t461 + t826 * t386 + t824 * t852, pkin(1) * t465 + t826 * t387 + t824 * t851, pkin(1) * t439 + t826 * t371 + t824 * t853, pkin(1) * t355 + t826 * t331 + t824 * t854, t826 * t454 + t824 * t896, t826 * t403 + t824 * t903, t826 * t444 + t824 * t898, t826 * t453 + t824 * t897, t826 * t443 + t824 * t899, t826 * t511 + t824 * t894, pkin(1) * t373 + t826 * t325 + t824 * t856, pkin(1) * t378 + t826 * t327 + t824 * t855, pkin(1) * t348 + t826 * t317 + t824 * t857, pkin(1) * t313 + t826 * t303 + t824 * t858;];
tauB_reg  = t1;
