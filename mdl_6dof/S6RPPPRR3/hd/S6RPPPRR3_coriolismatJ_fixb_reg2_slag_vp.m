% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d5,d6,theta3,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPPRR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPPRR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPPRR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPPRR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:34:05
% EndTime: 2019-03-09 01:34:12
% DurationCPUTime: 5.50s
% Computational Cost: add. (8054->351), mult. (14214->496), div. (0->0), fcn. (15573->8), ass. (0->292)
t318 = sin(pkin(10));
t493 = cos(qJ(5));
t396 = t493 * t318;
t320 = cos(pkin(10));
t323 = sin(qJ(5));
t447 = t323 * t320;
t297 = t396 + t447;
t322 = sin(qJ(6));
t324 = cos(qJ(6));
t449 = t322 * t324;
t375 = 0.2e1 * t297 * t449;
t319 = sin(pkin(9));
t395 = t493 * t320;
t448 = t323 * t318;
t347 = t395 - t448;
t258 = t347 * t319;
t321 = cos(pkin(9));
t374 = -t324 * t258 + t322 * t321;
t506 = t374 / 0.2e1;
t362 = t374 * t324;
t452 = t322 * t258;
t235 = t324 * t321 + t452;
t453 = t322 * t235;
t505 = t347 * (-t362 / 0.2e1 + t453 / 0.2e1);
t187 = t322 * t347;
t169 = t187 * qJD(6);
t291 = t297 * qJD(5);
t282 = t324 * t291;
t504 = -t169 - t282;
t294 = t347 ^ 2;
t295 = t297 ^ 2;
t503 = -t295 - t294;
t399 = t295 - t294;
t314 = t318 ^ 2;
t315 = t320 ^ 2;
t304 = t314 + t315;
t502 = pkin(1) + pkin(2);
t343 = t321 * qJ(2) - t319 * t502 - qJ(4);
t223 = t304 * t343;
t501 = t235 / 0.2e1;
t500 = -t347 / 0.2e1;
t499 = -t297 / 0.2e1;
t498 = t297 / 0.2e1;
t317 = t324 ^ 2;
t497 = t317 / 0.2e1;
t495 = t319 / 0.2e1;
t494 = t324 / 0.2e1;
t492 = t347 * pkin(8);
t491 = t297 * pkin(5);
t458 = t258 * t347;
t206 = -t458 / 0.2e1;
t316 = t322 ^ 2;
t377 = t497 + t316 / 0.2e1;
t368 = -0.1e1 / 0.2e1 + t377;
t256 = t297 * t319;
t462 = t256 * t297;
t24 = -t368 * t462 + t206 + t505;
t490 = t24 * qJD(5);
t234 = -t491 + t492;
t454 = t322 * t234;
t335 = -pkin(7) + t343;
t255 = t335 * t320;
t332 = t335 * t318;
t133 = t323 * t255 + t332 * t493;
t467 = t133 * t324;
t93 = t454 - t467;
t484 = t93 * t322;
t445 = t324 * t234;
t468 = t133 * t322;
t92 = t445 + t468;
t485 = t92 * t324;
t344 = t319 * qJ(2) + t321 * t502 + pkin(3);
t283 = t320 * pkin(4) + t344;
t367 = pkin(5) * t347 + t297 * pkin(8);
t326 = t283 + t367;
t134 = t255 * t493 - t323 * t332;
t455 = t322 * t134;
t80 = -t324 * t326 + t455;
t446 = t324 * t134;
t81 = t322 * t326 + t446;
t8 = (-t484 - t485) * t297 - (t81 * t322 - t324 * t80) * t347;
t489 = t8 * qJD(1);
t488 = t80 * t322;
t487 = t81 * t324;
t486 = t92 * t322;
t483 = t93 * t324;
t202 = -t462 / 0.2e1;
t325 = t202 - t505;
t259 = t347 * t321;
t444 = t324 * t259;
t450 = t322 * t319;
t237 = t444 + t450;
t463 = t237 * t322;
t443 = t324 * t319;
t451 = t322 * t259;
t236 = t443 - t451;
t464 = t236 * t324;
t349 = -t464 / 0.2e1 - t463 / 0.2e1;
t33 = t325 + t349;
t482 = qJD(1) * t33;
t456 = t297 * t324;
t35 = -t133 * t456 - t347 * t81;
t481 = qJD(1) * t35;
t380 = -t456 / 0.2e1;
t330 = t258 * t380 + t374 * t499;
t257 = t321 * t297;
t460 = t257 * t322;
t43 = -t460 / 0.2e1 + t330;
t480 = qJD(1) * t43;
t469 = t133 * t297;
t57 = -t134 * t347 - t469;
t479 = qJD(1) * t57;
t348 = t237 * t494 - t236 * t322 / 0.2e1;
t381 = t257 * t500;
t60 = t297 * t348 + t381;
t478 = qJD(1) * t60;
t382 = t462 / 0.2e1;
t365 = t495 + t382;
t378 = -t444 / 0.2e1;
t465 = t235 * t347;
t69 = t378 - t465 / 0.2e1 - t365 * t322;
t477 = qJD(1) * t69;
t90 = (-t463 - t464) * t297;
t475 = qJD(1) * t90;
t190 = t322 * t297;
t97 = -t190 * t257 + t236 * t347;
t474 = qJD(1) * t97;
t98 = -t237 * t347 - t257 * t456;
t473 = qJD(1) * t98;
t56 = t202 + t382;
t472 = qJD(2) * t56;
t471 = qJD(3) * t56;
t470 = t133 * t257;
t398 = t491 / 0.2e1;
t333 = -t377 * t492 + t398;
t353 = -t485 / 0.2e1 - t484 / 0.2e1;
t21 = t333 + t353;
t466 = t21 * qJD(1);
t153 = t256 * t322;
t154 = t256 * t324;
t461 = t257 * t256;
t459 = t257 * t324;
t457 = t297 * t347;
t34 = t133 * t190 + t347 * t80;
t442 = t34 * qJD(1);
t350 = (t501 - t452 / 0.2e1) * t297;
t40 = t459 / 0.2e1 + t350;
t441 = t40 * qJD(1);
t329 = (t235 * t494 + t322 * t506) * t347;
t47 = -t329 - t348;
t440 = t47 * qJD(1);
t361 = t374 * t347;
t379 = -t451 / 0.2e1;
t68 = t379 - t361 / 0.2e1 + t365 * t324;
t439 = t68 * qJD(1);
t91 = t368 * t457;
t438 = t91 * qJD(1);
t437 = -t316 - t317;
t311 = t317 - t316;
t436 = qJ(2) * qJD(1);
t112 = t259 * t498 + t381;
t435 = qJD(1) * t112;
t115 = -t257 * t297 - t259 * t347;
t434 = qJD(1) * t115;
t148 = t399 * t322;
t433 = qJD(1) * t148;
t149 = t503 * t322;
t432 = qJD(1) * t149;
t150 = t399 * t324;
t431 = qJD(1) * t150;
t430 = qJD(1) * t223;
t429 = qJD(4) * t324;
t428 = qJD(5) * t322;
t427 = qJD(5) * t324;
t192 = t347 * t324;
t426 = qJD(6) * t192;
t425 = qJD(6) * t322;
t424 = qJD(6) * t324;
t106 = t458 / 0.2e1 + t365;
t423 = t106 * qJD(1);
t127 = t223 * t321 + t344 * t319;
t422 = t127 * qJD(1);
t421 = t399 * qJD(1);
t292 = t396 / 0.2e1 + t447 / 0.2e1;
t163 = (t499 - t292) * t321;
t420 = t163 * qJD(1);
t341 = -t395 / 0.2e1 + t448 / 0.2e1;
t164 = (t500 + t341) * t321;
t419 = t164 * qJD(1);
t185 = (-t316 / 0.2e1 + t497) * t297;
t418 = t185 * qJD(6);
t170 = t187 * qJD(1);
t417 = t187 * qJD(5);
t415 = t190 * qJD(1);
t414 = t192 * qJD(1);
t285 = t316 * t347;
t286 = t317 * t347;
t221 = t285 + t286;
t413 = t221 * qJD(1);
t224 = t503 * t324;
t412 = t224 * qJD(1);
t225 = (t319 ^ 2 + t321 ^ 2) * qJ(2);
t411 = t225 * qJD(1);
t410 = t503 * qJD(1);
t260 = (0.1e1 / 0.2e1 + t315 / 0.2e1 + t314 / 0.2e1) * t319;
t409 = t260 * qJD(1);
t408 = t292 * qJD(1);
t293 = t304 * t321;
t407 = t293 * qJD(1);
t406 = t347 * qJD(1);
t290 = t347 * qJD(5);
t405 = t297 * qJD(1);
t404 = t304 * qJD(1);
t403 = t319 * qJD(1);
t402 = t319 * qJD(2);
t401 = t321 * qJD(1);
t400 = t321 * qJD(2);
t394 = t347 * t403;
t393 = t297 * t403;
t392 = t322 * t291;
t391 = t322 * t427;
t390 = t297 * t425;
t389 = t297 * t424;
t388 = t347 * t405;
t387 = t347 * t291;
t386 = t318 * t403;
t385 = t320 * t403;
t384 = t322 * t424;
t383 = t324 * t405;
t376 = pkin(8) * t437;
t373 = qJD(5) * t437;
t371 = qJD(1) * t283 + qJD(4);
t370 = -qJD(6) - t406;
t369 = t295 * t384;
t366 = qJD(5) * t375;
t338 = t487 / 0.2e1 + t488 / 0.2e1 - t134 / 0.2e1;
t4 = (t483 / 0.2e1 - t486 / 0.2e1 + t133 / 0.2e1) * t297 + t338 * t347;
t7 = t133 * t134 - t80 * t92 + t81 * t93;
t364 = t7 * qJD(1) + t4 * qJD(3);
t363 = t483 - t486;
t12 = (t81 - t446) * t297 - (t93 + t467) * t347;
t360 = t12 * qJD(1);
t13 = -t236 * t80 + t237 * t81 + t470;
t359 = t13 * qJD(1) + t60 * qJD(3);
t14 = -t469 - (t487 + t488) * t347;
t358 = -qJD(1) * t14 + qJD(3) * t91;
t11 = (t80 - t455) * t297 - (-t92 + t468) * t347;
t357 = t11 * qJD(1);
t44 = t134 * t259 + t283 * t319 + t470;
t356 = t44 * qJD(1) + t112 * qJD(3);
t355 = t297 * t370;
t354 = -t492 / 0.2e1 + t398;
t342 = -t234 / 0.2e1 + t354;
t38 = t342 * t324;
t352 = pkin(5) * t428 - t38 * qJD(1);
t36 = t342 * t322;
t351 = pkin(5) * t427 + t36 * qJD(1);
t346 = t324 * t355;
t156 = -t185 * qJD(1) + t391;
t345 = -qJD(6) * t292 - t388;
t124 = qJD(1) * t295 * t449 + t185 * qJD(5);
t222 = t311 * t295;
t340 = -t222 * qJD(1) + t366;
t339 = qJD(1) * t375 + t311 * qJD(5);
t327 = -t133 * t258 / 0.2e1 + t92 * t501 + t93 * t506;
t328 = t348 * pkin(8) - t257 * pkin(5) / 0.2e1;
t2 = t256 * t338 + t327 + t328;
t48 = (t258 + t362 - t453) * t256;
t337 = -t2 * qJD(1) + t48 * qJD(2) + t24 * qJD(3);
t95 = (0.1e1 + t437) * t457;
t336 = t4 * qJD(1) + t24 * qJD(2) - t95 * qJD(3);
t284 = t292 * qJD(5);
t261 = t495 - t304 * t319 / 0.2e1;
t174 = t192 * qJD(5);
t166 = (-t292 + t498) * t321;
t165 = (t347 / 0.2e1 + t341) * t321;
t161 = -t170 - t425;
t107 = t206 + t202 + t495;
t71 = t361 / 0.2e1 + t256 * t380 + t379 + t443 / 0.2e1;
t70 = t465 / 0.2e1 + t322 * t382 + t378 - t450 / 0.2e1;
t50 = t56 * qJD(5);
t46 = -t329 + t348;
t42 = t460 / 0.2e1 + t330;
t41 = -t459 / 0.2e1 + t350;
t39 = t468 + t445 / 0.2e1 + t354 * t324;
t37 = t467 - t454 / 0.2e1 - t354 * t322;
t32 = t325 - t349;
t22 = t333 - t353;
t10 = qJD(2) * t112;
t3 = -t81 * t154 / 0.2e1 - t80 * t153 / 0.2e1 + t134 * t256 / 0.2e1 - t327 + t328;
t1 = qJD(2) * t60 - qJD(4) * t91 + qJD(5) * t4;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), 0, 0, 0, 0, 0, 0, t402, t400, 0, t225 * qJD(2), 0, 0, 0, 0, 0, 0, t320 * t402, -t318 * t402, -qJD(2) * t293 + qJD(4) * t304, qJD(2) * t127 - qJD(4) * t223, t387, -t399 * qJD(5), 0, -t387, 0, 0, -t283 * t291 + t347 * t402, -t283 * t290 - t297 * t402, qJD(2) * t115 - qJD(4) * t503, qJD(2) * t44 + qJD(4) * t57, t317 * t387 - t369, -t222 * qJD(6) - t347 * t366, qJD(5) * t150 + t347 * t390, t316 * t387 + t369, -t148 * qJD(5) + t347 * t389, -t387, qJD(2) * t97 - qJD(4) * t149 + qJD(5) * t11 + qJD(6) * t35, qJD(2) * t98 - qJD(4) * t224 + qJD(5) * t12 + qJD(6) * t34, -qJD(2) * t90 - qJD(5) * t8, qJD(2) * t13 + qJD(4) * t14 + qJD(5) * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t436, 0, 0, 0, 0, 0, 0, t403, t401, 0, t411, 0, 0, 0, 0, 0, 0, t385, -t386, -t407, t422 + t261 * qJD(4) + (-0.1e1 + t304) * t319 * t400, 0, 0, 0, 0, 0, 0, qJD(5) * t166 + t394, qJD(5) * t165 - t393, t434 (t258 * t259 - t319 * t321 + t461) * qJD(2) + t107 * qJD(4) + t356, 0, 0, 0, 0, 0, 0, qJD(5) * t41 + qJD(6) * t71 + t474, qJD(5) * t42 + qJD(6) * t70 + t473, qJD(5) * t46 - t475 (-t236 * t235 - t237 * t374 + t461) * qJD(2) + t32 * qJD(4) + t3 * qJD(5) + t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t404, qJD(2) * t261 - t430, 0, 0, 0, 0, 0, 0, 0, 0, -t410, qJD(2) * t107 + t479, 0, 0, 0, 0, 0, 0, -t432, -t412, 0, qJD(2) * t32 + qJD(5) * t22 - t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t388, -t421, -t290, -t388, t291, 0, qJD(2) * t166 - qJD(5) * t134 - t283 * t405, qJD(2) * t165 + qJD(5) * t133 - t283 * t406, 0, 0, -t418 - (-t317 * t405 + t391) * t347 (t285 - t286) * qJD(5) + (qJD(6) - t406) * t375, -t392 + t431, t418 - (-t316 * t405 - t391) * t347, -t282 - t433, t345, t41 * qJD(2) + (t322 * t367 - t446) * qJD(5) + t39 * qJD(6) + t357, t42 * qJD(2) + (t324 * t367 + t455) * qJD(5) + t37 * qJD(6) + t360, t46 * qJD(2) + qJD(5) * t363 - t489, t3 * qJD(2) + t22 * qJD(4) + (-t134 * pkin(5) + pkin(8) * t363) * qJD(5) + t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t124, t340, -t322 * t355, t124, -t346, -t284, qJD(2) * t71 + qJD(5) * t39 - qJD(6) * t81 + t481, qJD(2) * t70 + qJD(5) * t37 + qJD(6) * t80 + t442, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t436, 0, 0, 0, 0, 0, 0, -t403, -t401, 0, -t411, 0, 0, 0, 0, 0, 0, -t385, t386, t407, -qJD(4) * t260 - t422, 0, 0, 0, 0, 0, 0, -qJD(5) * t163 - t394, -qJD(5) * t164 + t393, -t434, -qJD(4) * t106 - t356, 0, 0, 0, 0, 0, 0, qJD(5) * t40 - qJD(6) * t68 - t474, qJD(5) * t43 - qJD(6) * t69 - t473, qJD(5) * t47 + t475, qJD(4) * t33 - qJD(5) * t2 - t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t48 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50 - t435, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t478 + t490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t423, 0, 0, 0, 0, 0, 0, 0, 0, 0, t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t258 - t420, qJD(5) * t256 - t419, 0, t471, 0, 0, 0, 0, 0, 0, t153 * qJD(6) - t258 * t427 + t441, qJD(6) * t154 + t258 * t428 + t480, t256 * t373 + t440 (-t258 * pkin(5) + t256 * t376) * qJD(5) + t337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153 * qJD(5) + qJD(6) * t374 - t439, qJD(5) * t154 + qJD(6) * t235 - t477, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50 + t435, 0, 0, 0, 0, 0, 0, 0, 0, 0, t478 + t490; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t95 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t291, -t290, 0, t472, 0, 0, 0, 0, 0, 0, t504, t392 - t426, -t347 * t373 (-t347 * t376 - t491) * qJD(5) + t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389 - t417, -t174 + t390, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t404, qJD(2) * t260 + t430, 0, 0, 0, 0, 0, 0, -t291, -t290, t410, qJD(2) * t106 - t479, 0, 0, 0, 0, 0, 0, t432 + t504, t190 * qJD(5) - t347 * t424 + t412, t221 * qJD(5), -qJD(2) * t33 - qJD(5) * t21 + t358; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t409, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t405, -t406, 0, 0, 0, 0, 0, 0, 0, 0, -t383, t415, t413, -t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, t370 * t324, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t388, t421, 0, t388, 0, 0, t163 * qJD(2) + t297 * t371, t164 * qJD(2) + t347 * t371, 0, 0, -t317 * t388 - t418, -0.2e1 * t322 * t346, t426 - t431, -t316 * t388 + t418, -t169 + t433, -t345, -t40 * qJD(2) + t38 * qJD(6) + t297 * t429 - t357, -qJD(2) * t43 - qJD(4) * t190 - qJD(6) * t36 - t360, -qJD(2) * t47 - qJD(4) * t221 + t489, qJD(2) * t2 + qJD(4) * t21 - t364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t420, t419, 0, -t471, 0, 0, 0, 0, 0, 0, -t441, -t480, -t440, -t337; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t472, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t336; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t405, t406, 0, 0, 0, 0, 0, 0, 0, 0, t383, -t415, -t413, t466; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t384, t311 * qJD(6), 0, -t384, 0, 0, -pkin(5) * t425, -pkin(5) * t424, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t156, t339, t414 + t424, -t156, t161, t408, -pkin(8) * t424 - t352, pkin(8) * t425 - t351, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124, -t340, -t322 * t388 - t174, -t124, -t347 * t383 + t417, -t284, qJD(2) * t68 + qJD(4) * t187 - qJD(5) * t38 - t481, t69 * qJD(2) + t36 * qJD(5) + t347 * t429 - t442, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t439, t477, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, t324 * t406, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, -t339, -t414, t156, t170, -t408, t352, t351, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t5;
