% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPPRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d5,d6,theta3,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPPRR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPPRR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPPRR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPPRR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:34:02
% EndTime: 2019-03-09 01:34:06
% DurationCPUTime: 2.00s
% Computational Cost: add. (2014->210), mult. (4187->319), div. (0->0), fcn. (4564->8), ass. (0->190)
t157 = sin(pkin(10));
t270 = cos(qJ(5));
t206 = t270 * t157;
t159 = cos(pkin(10));
t162 = sin(qJ(5));
t238 = t162 * t159;
t132 = t206 + t238;
t127 = t132 * qJD(5);
t163 = cos(qJ(6));
t123 = t163 * t127;
t161 = sin(qJ(6));
t205 = t270 * t159;
t239 = t162 * t157;
t174 = t205 - t239;
t68 = t161 * t174;
t52 = t68 * qJD(6);
t276 = -t52 - t123;
t130 = t132 ^ 2;
t275 = t174 ^ 2;
t209 = t130 - t275;
t153 = t157 ^ 2;
t154 = t159 ^ 2;
t139 = t153 + t154;
t155 = t161 ^ 2;
t156 = t163 ^ 2;
t146 = t156 - t155;
t240 = t161 * t163;
t189 = 0.2e1 * t132 * t240;
t166 = qJD(1) * t189 + qJD(5) * t146;
t268 = t132 * pkin(5);
t269 = t174 * pkin(8);
t86 = -t268 + t269;
t274 = -t86 / 0.2e1;
t273 = t132 / 0.2e1;
t158 = sin(pkin(9));
t271 = t158 / 0.2e1;
t160 = cos(pkin(9));
t164 = -pkin(1) - pkin(2);
t226 = t160 * qJ(2) + t158 * t164;
t134 = -qJ(4) + t226;
t267 = pkin(7) - t134;
t188 = -t158 * qJ(2) + t160 * t164;
t185 = pkin(3) - t188;
t124 = t159 * pkin(4) + t185;
t183 = pkin(5) * t174 + t132 * pkin(8);
t165 = t124 + t183;
t190 = t267 * t157;
t98 = t267 * t159;
t32 = t162 * t190 - t270 * t98;
t263 = t161 * t32;
t18 = -t163 * t165 + t263;
t31 = -t162 * t98 - t270 * t190;
t71 = t161 * t132;
t3 = t174 * t18 + t31 * t71;
t266 = qJD(1) * t3;
t262 = t163 * t32;
t19 = t161 * t165 + t262;
t246 = t132 * t163;
t4 = -t174 * t19 - t31 * t246;
t265 = qJD(1) * t4;
t73 = t174 * t163;
t1 = (t18 - t263) * t132 + t86 * t73;
t264 = t1 * qJD(1);
t2 = (t19 - t262) * t132 - t86 * t68;
t261 = t2 * qJD(1);
t101 = t174 * t158;
t243 = t161 * t101;
t87 = t160 * t163 + t243;
t260 = t87 * t174;
t237 = t163 * t101;
t88 = -t160 * t161 + t237;
t259 = t88 * t174;
t176 = (t87 / 0.2e1 - t243 / 0.2e1) * t132;
t100 = t160 * t132;
t248 = t100 * t163;
t9 = t248 / 0.2e1 + t176;
t258 = t9 * qJD(1);
t235 = t163 * t158;
t102 = t174 * t160;
t242 = t161 * t102;
t22 = (t235 - t242) * t174 - t100 * t71;
t257 = qJD(1) * t22;
t236 = t163 * t102;
t241 = t161 * t158;
t23 = -(t236 + t241) * t174 - t100 * t246;
t256 = qJD(1) * t23;
t34 = t209 * t161;
t255 = qJD(1) * t34;
t208 = t130 + t275;
t35 = t208 * t161;
t254 = qJD(1) * t35;
t36 = t209 * t163;
t253 = qJD(1) * t36;
t77 = t139 * t134;
t252 = qJD(1) * t77;
t251 = qJD(5) * t68;
t250 = qJD(6) * t73;
t249 = t100 * t161;
t175 = (t88 / 0.2e1 - t237 / 0.2e1) * t132;
t12 = -t249 / 0.2e1 + t175;
t247 = t12 * qJD(1);
t99 = t132 * t158;
t207 = t99 * t273;
t184 = t271 + t207;
t192 = -t242 / 0.2e1;
t14 = t192 + t259 / 0.2e1 + t184 * t163;
t245 = t14 * qJD(1);
t191 = -t236 / 0.2e1;
t15 = t191 - t260 / 0.2e1 - t184 * t161;
t244 = t15 * qJD(1);
t129 = t139 * t160;
t26 = t134 * t129 + t185 * t158;
t234 = t26 * qJD(1);
t233 = t209 * qJD(1);
t128 = t206 / 0.2e1 + t238 / 0.2e1;
t47 = (-t132 / 0.2e1 - t128) * t160;
t232 = t47 * qJD(1);
t167 = -t205 / 0.2e1 + t239 / 0.2e1;
t48 = (-t174 / 0.2e1 + t167) * t160;
t231 = t48 * qJD(1);
t53 = t68 * qJD(1);
t230 = t71 * qJD(1);
t229 = t73 * qJD(1);
t78 = t208 * t163;
t228 = t78 * qJD(1);
t79 = -t188 * t158 + t226 * t160;
t227 = t79 * qJD(1);
t225 = qJ(2) * qJD(1);
t224 = qJD(4) * t163;
t223 = qJD(5) * t161;
t222 = qJD(5) * t163;
t221 = qJD(6) * t161;
t220 = qJD(6) * t163;
t103 = (0.1e1 / 0.2e1 + t154 / 0.2e1 + t153 / 0.2e1) * t158;
t219 = t103 * qJD(1);
t218 = t128 * qJD(1);
t217 = t129 * qJD(1);
t216 = t174 * qJD(1);
t126 = t174 * qJD(5);
t215 = t132 * qJD(1);
t214 = t139 * qJD(1);
t213 = t158 * qJD(1);
t212 = t158 * qJD(2);
t211 = t160 * qJD(1);
t210 = t160 * qJD(2);
t204 = t174 * t213;
t203 = t132 * t213;
t202 = t161 * t127;
t201 = t161 * t222;
t200 = t132 * t221;
t199 = t132 * t220;
t198 = t174 * t215;
t197 = t174 * t127;
t196 = t157 * t213;
t195 = t159 * t213;
t194 = t161 * t220;
t193 = t163 * t215;
t187 = qJD(1) * t124 + qJD(4);
t186 = -qJD(6) - t216;
t182 = qJD(5) * t189;
t180 = t132 * t186;
t179 = -t269 / 0.2e1 + t268 / 0.2e1;
t170 = t274 + t179;
t7 = t170 * t163;
t178 = pkin(5) * t223 - qJD(1) * t7;
t5 = t170 * t161;
t177 = pkin(5) * t222 + qJD(1) * t5;
t66 = (-t155 / 0.2e1 + t156 / 0.2e1) * t132;
t173 = -qJD(1) * t66 + t201;
t172 = t163 * t180;
t171 = -qJD(6) * t128 - t198;
t169 = qJD(1) * t130 * t240 + qJD(5) * t66;
t76 = t146 * t130;
t168 = -qJD(1) * t76 + t182;
t125 = t128 * qJD(5);
t104 = t271 - t139 * t158 / 0.2e1;
t57 = t73 * qJD(5);
t51 = t66 * qJD(6);
t50 = (-t128 + t273) * t160;
t49 = (t174 / 0.2e1 + t167) * t160;
t45 = -t221 - t53;
t40 = t99 * t163;
t39 = t99 * t161;
t17 = -t259 / 0.2e1 - t99 * t246 / 0.2e1 + t192 + t235 / 0.2e1;
t16 = t260 / 0.2e1 + t161 * t207 + t191 - t241 / 0.2e1;
t11 = t249 / 0.2e1 + t175;
t10 = -t248 / 0.2e1 + t176;
t8 = t31 * t161 + (t86 / 0.2e1 + t179) * t163;
t6 = t31 * t163 + (-t179 + t274) * t161;
t13 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), t212, t210, t79 * qJD(2), t159 * t212, -t157 * t212, -qJD(2) * t129 + qJD(4) * t139, qJD(2) * t26 - qJD(4) * t77, t197, -t209 * qJD(5), 0, 0, 0, -t124 * t127 + t174 * t212, -t124 * t126 - t132 * t212, -t130 * t194 + t156 * t197, -qJD(6) * t76 - t174 * t182, qJD(5) * t36 + t174 * t200, -qJD(5) * t34 + t174 * t199, -t197, qJD(2) * t22 + qJD(4) * t35 + qJD(5) * t1 + qJD(6) * t4, qJD(2) * t23 + qJD(4) * t78 + qJD(5) * t2 + qJD(6) * t3; 0, 0, 0, 0, qJD(1), t225, t213, t211, t227, t195, -t196, -t217, t234 + t104 * qJD(4) + (-0.1e1 + t139) * t158 * t210, 0, 0, 0, 0, 0, qJD(5) * t50 + t204, qJD(5) * t49 - t203, 0, 0, 0, 0, 0, qJD(5) * t10 + qJD(6) * t17 + t257, qJD(5) * t11 + qJD(6) * t16 + t256; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, qJD(2) * t104 - t252, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t254, t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, -t233, -t126, t127, 0, qJD(2) * t50 - qJD(5) * t32 - t124 * t215, qJD(2) * t49 + qJD(5) * t31 - t124 * t216, -t51 - (-t156 * t215 + t201) * t174, qJD(6) * t189 - t166 * t174, -t202 + t253, -t123 - t255, t171, t264 + t10 * qJD(2) + (t161 * t183 - t262) * qJD(5) + t8 * qJD(6), t261 + t11 * qJD(2) + (t163 * t183 + t263) * qJD(5) + t6 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t169, t168, -t161 * t180, -t172, -t125, qJD(2) * t17 + qJD(5) * t8 - qJD(6) * t19 + t265, qJD(2) * t16 + qJD(5) * t6 + qJD(6) * t18 + t266; 0, 0, 0, 0, -qJD(1), -t225, -t213, -t211, -t227, -t195, t196, t217, -qJD(4) * t103 - t234, 0, 0, 0, 0, 0, -qJD(5) * t47 - t204, -qJD(5) * t48 + t203, 0, 0, 0, 0, 0, qJD(5) * t9 - qJD(6) * t14 - t257, qJD(5) * t12 - qJD(6) * t15 - t256; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t101 - t232, qJD(5) * t99 - t231, 0, 0, 0, 0, 0, qJD(6) * t39 - t101 * t222 + t258, qJD(6) * t40 + t101 * t223 + t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t39 - qJD(6) * t88 - t245, qJD(5) * t40 + qJD(6) * t87 - t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t127, -t126, 0, 0, 0, 0, 0, t276, t202 - t250; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199 - t251, -t57 + t200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, qJD(2) * t103 + t252, 0, 0, 0, 0, 0, -t127, -t126, 0, 0, 0, 0, 0, -t254 + t276, qJD(5) * t71 - t174 * t220 - t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, -t216, 0, 0, 0, 0, 0, -t193, t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t45, t186 * t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198, t233, 0, 0, 0, t47 * qJD(2) + t132 * t187, t48 * qJD(2) + t174 * t187, -t156 * t198 - t51, -0.2e1 * t161 * t172, t250 - t253, -t52 + t255, -t171, -qJD(2) * t9 + qJD(6) * t7 + t132 * t224 - t264, -qJD(2) * t12 - qJD(4) * t71 - qJD(6) * t5 - t261; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, t231, 0, 0, 0, 0, 0, -t258, -t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, t216, 0, 0, 0, 0, 0, t193, -t230; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t194, t146 * qJD(6), 0, 0, 0, -pkin(5) * t221, -pkin(5) * t220; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173, t166, t220 + t229, t45, t218, -pkin(8) * t220 - t178, pkin(8) * t221 - t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, -t168, -t161 * t198 - t57, -t174 * t193 + t251, -t125, qJD(2) * t14 + qJD(4) * t68 - qJD(5) * t7 - t265, qJD(2) * t15 + qJD(5) * t5 + t174 * t224 - t266; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245, t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, t163 * t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, -t166, -t229, t53, -t218, t178, t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t13;
