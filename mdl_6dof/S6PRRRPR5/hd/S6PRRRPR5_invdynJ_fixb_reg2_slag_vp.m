% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PRRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRPR5_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR5_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR5_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPR5_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPR5_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRPR5_invdynJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:28:26
% EndTime: 2019-03-08 23:29:03
% DurationCPUTime: 22.82s
% Computational Cost: add. (20723->849), mult. (52706->1182), div. (0->0), fcn. (44924->18), ass. (0->365)
t320 = sin(pkin(7));
t327 = sin(qJ(3));
t331 = cos(qJ(3));
t366 = t320 * (pkin(3) * t327 - pkin(10) * t331);
t321 = sin(pkin(6));
t328 = sin(qJ(2));
t464 = t321 * t328;
t415 = qJD(1) * t464;
t546 = qJD(3) * t366 - t320 * t415;
t322 = cos(pkin(7));
t332 = cos(qJ(2));
t455 = t331 * t332;
t460 = t327 * t328;
t363 = -t322 * t460 + t455;
t231 = t363 * t321;
t466 = t320 * t327;
t303 = pkin(9) * t466;
t461 = t322 * t331;
t263 = pkin(2) * t461 - t303;
t250 = qJD(3) * t263;
t447 = -qJD(1) * t231 + t250;
t462 = t322 * t327;
t465 = t320 * t331;
t264 = pkin(2) * t462 + pkin(9) * t465;
t241 = pkin(10) * t322 + t264;
t375 = -pkin(3) * t331 - pkin(10) * t327;
t242 = (-pkin(2) + t375) * t320;
t326 = sin(qJ(4));
t330 = cos(qJ(4));
t435 = qJD(4) * t330;
t436 = qJD(4) * t326;
t499 = -t241 * t436 + t242 * t435 + t326 * t546 + t447 * t330;
t163 = t330 * t241 + t326 * t242;
t453 = -t163 * qJD(4) - t447 * t326 + t330 * t546;
t439 = qJD(2) * t331;
t413 = t320 * t439;
t545 = qJD(4) - t413;
t437 = qJD(3) * t331;
t409 = t320 * t437;
t422 = t326 * t466;
t533 = qJD(4) * t422 - t330 * t409;
t199 = -t322 * t435 + t533;
t421 = t330 * t466;
t262 = t322 * t326 + t421;
t438 = qJD(3) * t327;
t410 = t320 * t438;
t544 = pkin(4) * t410 + qJ(5) * t199 - qJD(5) * t262 + t453;
t408 = t326 * t437;
t200 = qJD(4) * t262 + t320 * t408;
t261 = -t330 * t322 + t422;
t543 = qJ(5) * t200 + qJD(5) * t261 - t499;
t440 = qJD(2) * t320;
t266 = pkin(9) * t440 + t415;
t441 = qJD(1) * t332;
t280 = qJD(2) * pkin(2) + t321 * t441;
t323 = cos(pkin(6));
t442 = qJD(1) * t323;
t362 = t280 * t322 + t320 * t442;
t160 = -t327 * t266 + t331 * t362;
t248 = qJD(2) * t366;
t114 = -t160 * t326 + t330 * t248;
t516 = qJ(5) + pkin(10);
t403 = qJD(4) * t516;
t456 = t330 * t331;
t542 = -t326 * qJD(5) - t330 * t403 - (pkin(4) * t327 - qJ(5) * t456) * t440 - t114;
t115 = t330 * t160 + t326 * t248;
t386 = t326 * t413;
t541 = qJ(5) * t386 + t330 * qJD(5) - t326 * t403 - t115;
t319 = sin(pkin(13));
t467 = t319 * t326;
t497 = cos(pkin(13));
t359 = t330 * t497 - t467;
t448 = t545 * t359;
t458 = t328 * t331;
t459 = t327 * t332;
t365 = t322 * t458 + t459;
t230 = t365 * t321;
t251 = qJD(3) * t264;
t446 = -qJD(1) * t230 + t251;
t398 = t497 * t326;
t269 = t319 * t330 + t398;
t445 = t545 * t269;
t503 = t319 * t542 + t497 * t541;
t500 = t319 * t544 - t543 * t497;
t161 = t266 * t331 + t327 * t362;
t376 = -t161 + (-t386 + t436) * pkin(4);
t450 = pkin(4) * t200 + t446;
t302 = qJD(2) * t322 + qJD(3);
t414 = t327 * t440;
t229 = t302 * t326 + t330 * t414;
t142 = pkin(10) * t302 + t161;
t298 = t322 * t442;
t183 = t298 + (qJD(2) * t375 - t280) * t320;
t91 = -t142 * t326 + t330 * t183;
t74 = -qJ(5) * t229 + t91;
t63 = pkin(4) * t545 + t74;
t227 = -t302 * t330 + t326 * t414;
t92 = t142 * t330 + t183 * t326;
t75 = -qJ(5) * t227 + t92;
t69 = t497 * t75;
t35 = t319 * t63 + t69;
t31 = pkin(11) * t545 + t35;
t325 = sin(qJ(6));
t329 = cos(qJ(6));
t141 = -pkin(3) * t302 - t160;
t105 = pkin(4) * t227 + qJD(5) + t141;
t153 = t497 * t227 + t229 * t319;
t360 = -t319 * t227 + t229 * t497;
t46 = pkin(5) * t153 - pkin(11) * t360 + t105;
t12 = t31 * t329 + t325 * t46;
t382 = qJDD(2) * t322 + qJDD(3);
t428 = qJDD(2) * t327;
t140 = t302 * t436 + (qJD(2) * (t327 * t435 + t408) + t326 * t428) * t320 - t330 * t382;
t463 = t321 * t332;
t300 = qJDD(1) * t463;
t412 = qJD(2) * t464;
t381 = qJD(1) * t412;
t237 = qJDD(2) * pkin(2) + t300 - t381;
t429 = qJDD(1) * t323;
t405 = t320 * t429;
t519 = pkin(9) * t320;
t529 = qJDD(2) * t519 + (qJD(2) * t441 + qJDD(1) * t328) * t321 + t362 * qJD(3);
t367 = -t237 * t461 + t266 * t437 + t327 * t529 - t331 * t405;
t78 = -pkin(3) * t382 + t367;
t45 = t140 * pkin(4) + qJDD(5) + t78;
t139 = qJD(2) * t533 - qJDD(2) * t421 - t302 * t435 - t326 * t382;
t82 = -t139 * t319 + t497 * t140;
t83 = -t139 * t497 - t319 * t140;
t14 = t82 * pkin(5) - t83 * pkin(11) + t45;
t427 = qJDD(2) * t331;
t299 = t320 * t427;
t430 = qJD(2) * qJD(3);
t407 = t327 * t430;
t244 = t320 * t407 + qJDD(4) - t299;
t297 = t322 * t429;
t354 = t407 - t427;
t406 = t331 * t430;
t355 = t406 + t428;
t117 = t297 + (pkin(3) * t354 - pkin(10) * t355 - t237) * t320;
t87 = t237 * t462 - t266 * t438 + t327 * t405 + t331 * t529;
t77 = pkin(10) * t382 + t87;
t25 = -qJD(4) * t92 + t330 * t117 - t326 * t77;
t17 = pkin(4) * t244 + qJ(5) * t139 - qJD(5) * t229 + t25;
t356 = -t326 * t117 + t142 * t436 - t183 * t435 - t330 * t77;
t21 = -qJ(5) * t140 - qJD(5) * t227 - t356;
t6 = t319 * t17 + t497 * t21;
t4 = pkin(11) * t244 + t6;
t2 = -qJD(6) * t12 + t329 * t14 - t325 * t4;
t530 = qJD(6) + t153;
t540 = t12 * t530 + t2;
t370 = t31 * t325 - t329 * t46;
t1 = -t370 * qJD(6) + t325 * t14 + t329 * t4;
t539 = t370 * t530 + t1;
t538 = -pkin(11) * t410 - t500;
t537 = -pkin(11) * t414 + t503;
t536 = t445 * pkin(5) - pkin(11) * t448 + t376;
t125 = -t199 * t319 + t200 * t497;
t126 = -t199 * t497 - t319 * t200;
t535 = pkin(5) * t125 - pkin(11) * t126 + t450;
t534 = t153 * t360;
t532 = -t545 * t91 - t356;
t391 = t530 * t329;
t79 = qJDD(6) + t82;
t531 = -t325 * t79 - t391 * t530;
t504 = t319 * t541 - t497 * t542;
t528 = -t545 * t92 - t25;
t501 = t543 * t319 + t497 * t544;
t123 = t325 * t545 + t329 * t360;
t392 = t530 * t325;
t527 = t123 * t392;
t316 = qJ(4) + pkin(13);
t312 = sin(t316);
t496 = sin(pkin(12));
t396 = t496 * t332;
t498 = cos(pkin(12));
t400 = t498 * t328;
t257 = t323 * t400 + t396;
t397 = t496 * t328;
t399 = t498 * t332;
t341 = -t323 * t399 + t397;
t337 = t341 * t331;
t402 = t321 * t498;
t378 = t320 * t402;
t143 = t257 * t327 + t322 * t337 + t331 * t378;
t258 = -t323 * t397 + t399;
t342 = t323 * t396 + t400;
t339 = t342 * t331;
t401 = t321 * t496;
t377 = t320 * t401;
t145 = t258 * t327 + t322 * t339 - t331 * t377;
t524 = t322 * t455 - t460;
t195 = -t524 * t321 - t323 * t465;
t352 = g(1) * t145 + g(2) * t143 + g(3) * t195;
t525 = t352 * t312;
t192 = t195 * t329;
t256 = -t320 * t463 + t322 * t323;
t477 = t256 * t330;
t364 = t322 * t459 + t458;
t196 = t321 * t364 + t323 * t466;
t484 = t196 * t326;
t147 = t477 - t484;
t148 = t196 * t330 + t256 * t326;
t86 = t319 * t147 + t148 * t497;
t52 = -t325 * t86 + t192;
t373 = g(1) * t258 + g(2) * t257;
t162 = -t241 * t326 + t330 * t242;
t116 = -pkin(4) * t465 - qJ(5) * t262 + t162;
t127 = -qJ(5) * t261 + t163;
t60 = t319 * t116 + t497 * t127;
t56 = -pkin(11) * t465 + t60;
t184 = t261 * t497 + t262 * t319;
t185 = -t319 * t261 + t262 * t497;
t240 = t303 + (-pkin(2) * t331 - pkin(3)) * t322;
t187 = pkin(4) * t261 + t240;
t84 = pkin(5) * t184 - pkin(11) * t185 + t187;
t32 = -t325 * t56 + t329 * t84;
t522 = qJD(6) * t32 + t535 * t325 - t329 * t538;
t33 = t325 * t84 + t329 * t56;
t521 = -qJD(6) * t33 + t325 * t538 + t535 * t329;
t520 = pkin(4) * t326;
t311 = pkin(4) * t330 + pkin(3);
t188 = -pkin(5) * t359 - pkin(11) * t269 - t311;
t294 = t516 * t330;
t209 = t294 * t497 - t467 * t516;
t118 = t188 * t329 - t209 * t325;
t515 = qJD(6) * t118 + t325 * t536 + t329 * t537;
t119 = t188 * t325 + t209 * t329;
t514 = -qJD(6) * t119 - t325 * t537 + t329 * t536;
t513 = t319 * t75;
t433 = qJD(6) * t329;
t434 = qJD(6) * t325;
t41 = -t325 * t244 - t329 * t83 + t360 * t434 - t433 * t545;
t510 = t41 * t325;
t395 = -t329 * t244 + t325 * t83;
t42 = qJD(6) * t123 + t395;
t509 = t42 * t329;
t121 = t325 * t360 - t329 * t545;
t506 = -t121 * t433 - t325 * t42;
t505 = pkin(5) * t414 + t504;
t502 = -pkin(5) * t410 - t501;
t495 = t121 * t360;
t494 = t121 * t153;
t493 = t123 * t121;
t492 = t123 * t360;
t338 = t341 * t327;
t144 = t257 * t331 - t322 * t338 - t327 * t378;
t491 = t144 * t326;
t146 = t258 * t331 + (-t322 * t342 + t377) * t327;
t490 = t146 * t326;
t489 = t360 ^ 2;
t488 = t360 * t545;
t487 = t153 ^ 2;
t486 = t153 * t545;
t485 = t195 * t325;
t197 = t320 * t341 - t322 * t402;
t483 = t197 * t330;
t198 = t320 * t342 + t322 * t401;
t482 = t198 * t330;
t481 = t227 * t545;
t480 = t229 * t227;
t479 = t229 * t545;
t478 = t256 * t320;
t476 = t269 * t325;
t475 = t269 * t329;
t473 = t545 * t326;
t472 = t312 * t320;
t313 = cos(t316);
t471 = t313 * t320;
t470 = t313 * t325;
t469 = t313 * t329;
t314 = t320 ^ 2;
t333 = qJD(2) ^ 2;
t468 = t314 * t333;
t457 = t328 * t333;
t454 = qJDD(1) - g(3);
t452 = -t143 * t311 + t144 * t516;
t451 = -t145 * t311 + t146 * t516;
t449 = -t195 * t311 + t196 * t516;
t424 = t320 * t464;
t444 = pkin(2) * t463 + pkin(9) * t424;
t317 = t327 ^ 2;
t318 = t331 ^ 2;
t443 = t317 - t318;
t432 = qJD(3) - t302;
t423 = t325 * t465;
t170 = t257 * t461 - t338;
t171 = -t257 * t462 - t337;
t252 = t341 * pkin(2);
t419 = t170 * t516 + t171 * t311 - t252;
t172 = t258 * t461 - t327 * t342;
t173 = -t258 * t462 - t339;
t253 = t342 * pkin(2);
t418 = t172 * t516 + t173 * t311 - t253;
t5 = t497 * t17 - t319 * t21;
t394 = -t325 * t448 - t329 * t414;
t393 = t325 * t414 - t329 * t448;
t390 = t314 * t321 * t457;
t389 = t327 * t331 * t468;
t387 = t320 * t412;
t384 = t545 * t414;
t379 = t327 * t406;
t374 = -pkin(5) * t313 - pkin(11) * t312;
t369 = t230 * t516 + t231 * t311 + t424 * t520 + t444;
t53 = t329 * t86 + t485;
t368 = t329 * t79 + (-t153 * t325 - t434) * t530;
t149 = t185 * t325 + t329 * t465;
t34 = t497 * t63 - t513;
t30 = -pkin(5) * t545 - t34;
t309 = pkin(4) * t319 + pkin(11);
t361 = t30 * t530 - t309 * t79;
t59 = t116 * t497 - t319 * t127;
t131 = -t196 * t312 + t256 * t313;
t93 = -t144 * t312 + t197 * t313;
t95 = -t146 * t312 + t198 * t313;
t358 = -g(1) * t95 - g(2) * t93 - g(3) * t131;
t132 = t196 * t313 + t256 * t312;
t94 = t144 * t313 + t197 * t312;
t96 = t146 * t313 + t198 * t312;
t357 = -g(1) * t96 - g(2) * t94 - g(3) * t132;
t109 = t171 * t312 - t257 * t471;
t111 = t173 * t312 - t258 * t471;
t176 = t231 * t312 - t313 * t424;
t353 = g(1) * t111 + g(2) * t109 + g(3) * t176;
t351 = g(1) * t146 + g(2) * t144 + g(3) * t196;
t350 = g(1) * t172 + g(2) * t170 + g(3) * t230;
t349 = g(1) * t173 + g(2) * t171 + g(3) * t231;
t348 = t269 * t433 - t394;
t347 = -t269 * t434 - t393;
t344 = t352 - t78;
t343 = -g(3) * t464 - t373;
t340 = -pkin(10) * t244 + t141 * t545;
t3 = -pkin(5) * t244 - t5;
t336 = qJD(6) * t309 * t530 + t3 - t358;
t335 = -pkin(10) * qJD(4) * t545 + t344;
t334 = t373 * (pkin(9) + t520) * t320;
t310 = -pkin(4) * t497 - pkin(5);
t238 = pkin(4) * t477;
t217 = -t280 * t320 + t298;
t208 = t294 * t319 + t398 * t516;
t193 = -t237 * t320 + t297;
t190 = pkin(4) * t482;
t189 = pkin(4) * t483;
t177 = t231 * t313 + t312 * t424;
t169 = (-t244 * t331 + t438 * t545) * t320;
t150 = t185 * t329 - t423;
t134 = t323 * t409 + (t363 * qJD(2) + t524 * qJD(3)) * t321;
t133 = t323 * t410 + (qJD(2) * t365 + qJD(3) * t364) * t321;
t112 = t173 * t313 + t258 * t472;
t110 = t171 * t313 + t257 * t472;
t85 = -t147 * t497 + t148 * t319;
t71 = pkin(4) * t229 + pkin(5) * t360 + pkin(11) * t153;
t68 = qJD(4) * t147 + t134 * t330 + t326 * t387;
t67 = -qJD(4) * t148 - t134 * t326 + t330 * t387;
t66 = -qJD(6) * t423 + t126 * t325 + t185 * t433 - t329 * t410;
t65 = qJD(6) * t149 - t329 * t126 - t325 * t410;
t55 = pkin(5) * t465 - t59;
t39 = t497 * t74 - t513;
t38 = t319 * t74 + t69;
t37 = t319 * t67 + t497 * t68;
t36 = t319 * t68 - t497 * t67;
t19 = t325 * t71 + t329 * t39;
t18 = -t325 * t39 + t329 * t71;
t10 = -qJD(6) * t53 + t133 * t329 - t325 * t37;
t9 = t52 * qJD(6) + t133 * t325 + t329 * t37;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t454, 0, 0, 0, 0, 0, 0 (qJDD(2) * t332 - t457) * t321 (-qJDD(2) * t328 - t332 * t333) * t321, 0, -g(3) + (t323 ^ 2 + (t328 ^ 2 + t332 ^ 2) * t321 ^ 2) * qJDD(1), 0, 0, 0, 0, 0, 0, -t133 * t302 - t195 * t382 - t331 * t390 + t354 * t478, -t134 * t302 - t196 * t382 + t327 * t390 + t355 * t478 ((t195 * t327 + t196 * t331) * qJDD(2) + (t133 * t327 + t134 * t331 + (t195 * t331 - t196 * t327) * qJD(3)) * qJD(2)) * t320, -t133 * t160 + t134 * t161 + t193 * t256 + t195 * t367 + t196 * t87 + t217 * t387 - g(3), 0, 0, 0, 0, 0, 0, t133 * t227 + t140 * t195 + t147 * t244 + t545 * t67, t133 * t229 - t139 * t195 - t148 * t244 - t545 * t68, t139 * t147 - t140 * t148 - t227 * t68 - t229 * t67, t133 * t141 + t147 * t25 - t148 * t356 + t195 * t78 + t67 * t91 + t68 * t92 - g(3), 0, 0, 0, 0, 0, 0, t133 * t153 + t195 * t82 - t244 * t85 - t36 * t545, t133 * t360 + t195 * t83 - t244 * t86 - t37 * t545, -t153 * t37 + t36 * t360 - t82 * t86 + t83 * t85, t105 * t133 + t195 * t45 - t34 * t36 + t35 * t37 - t5 * t85 + t6 * t86 - g(3), 0, 0, 0, 0, 0, 0, t10 * t530 + t121 * t36 + t42 * t85 + t52 * t79, t123 * t36 - t41 * t85 - t53 * t79 - t530 * t9, -t10 * t123 - t121 * t9 + t41 * t52 - t42 * t53, t1 * t53 - t10 * t370 + t12 * t9 + t2 * t52 + t3 * t85 + t30 * t36 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), g(1) * t342 + g(2) * t341 - g(3) * t463 + t300, -t454 * t464 + t373, 0, 0 (qJDD(2) * t317 + 0.2e1 * t379) * t314, 0.2e1 * (t327 * t427 - t430 * t443) * t314 (t302 * t437 + t327 * qJDD(3) + (t406 + 0.2e1 * t428) * t322) * t320 (qJDD(2) * t318 - 0.2e1 * t379) * t314 (-t302 * t438 + t331 * qJDD(3) + (-t407 + 0.2e1 * t427) * t322) * t320, t382 * t322, t263 * t382 - t367 * t322 + (-t193 * t331 + t217 * t438) * t320 - t446 * t302 + (-pkin(2) * t354 + t331 * t381) * t314 - t349, -t264 * t382 - t87 * t322 + (t193 * t327 + t217 * t437) * t320 - t447 * t302 + (-pkin(2) * t355 - t327 * t381) * t314 + t350 ((-qJD(3) * t160 + qJDD(2) * t264 + t87) * t331 + (-qJD(3) * t161 - qJDD(2) * t263 + t367) * t327 + ((t447 - t250) * t331 + (t446 - t251) * t327) * qJD(2) + t343) * t320, t87 * t264 - t367 * t263 + g(1) * t253 + g(2) * t252 - g(3) * t444 + (-t193 * pkin(2) - pkin(9) * t373 - t217 * t415) * t320 + t447 * t161 - t446 * t160, -t139 * t262 - t199 * t229, t139 * t261 - t140 * t262 + t199 * t227 - t200 * t229, -t199 * t545 + t244 * t262 + (t139 * t331 + t229 * t438) * t320, t140 * t261 + t200 * t227, -t200 * t545 - t244 * t261 + (t140 * t331 - t227 * t438) * t320, t169, t240 * t140 + t141 * t200 + t162 * t244 + t78 * t261 - t349 * t330 + (-t25 * t331 + t326 * t343 + t438 * t91) * t320 + t453 * t545 + t446 * t227, -t240 * t139 - t141 * t199 - t163 * t244 + t78 * t262 + t349 * t326 + (t330 * t343 - t331 * t356 - t438 * t92) * t320 - t499 * t545 + t446 * t229, t139 * t162 - t140 * t163 + t199 * t91 - t200 * t92 - t227 * t499 - t229 * t453 - t25 * t262 + t261 * t356 - t350, -t356 * t163 + t25 * t162 + t78 * t240 - g(1) * (pkin(3) * t173 + pkin(10) * t172 + t258 * t519 - t253) - g(2) * (pkin(3) * t171 + pkin(10) * t170 + t257 * t519 - t252) - g(3) * (pkin(3) * t231 + pkin(10) * t230 + t444) + t499 * t92 + t453 * t91 + t446 * t141, t126 * t360 + t185 * t83, -t125 * t360 - t126 * t153 - t184 * t83 - t185 * t82, t126 * t545 + t185 * t244 + (-t331 * t83 + t360 * t438) * t320, t125 * t153 + t184 * t82, -t125 * t545 - t184 * t244 + (-t153 * t438 + t331 * t82) * t320, t169, -g(1) * t112 - g(2) * t110 - g(3) * t177 + t105 * t125 + t184 * t45 + t187 * t82 + t244 * t59 + (-t331 * t5 + t34 * t438) * t320 + t501 * t545 + t450 * t153, t105 * t126 + t185 * t45 + t187 * t83 - t244 * t60 + (t331 * t6 - t35 * t438) * t320 - t500 * t545 + t450 * t360 + t353, -t125 * t35 - t126 * t34 - t153 * t500 - t184 * t6 - t185 * t5 - t360 * t501 - t59 * t83 - t60 * t82 - t350, -g(1) * t418 - g(2) * t419 - g(3) * t369 + t105 * t450 + t45 * t187 + t34 * t501 + t35 * t500 + t5 * t59 + t6 * t60 - t334, -t123 * t65 - t150 * t41, t121 * t65 - t123 * t66 + t149 * t41 - t150 * t42, t123 * t125 + t150 * t79 - t184 * t41 - t530 * t65, t121 * t66 + t149 * t42, -t121 * t125 - t149 * t79 - t184 * t42 - t530 * t66, t125 * t530 + t184 * t79, t32 * t79 + t2 * t184 - t370 * t125 + t55 * t42 + t3 * t149 + t30 * t66 - g(1) * (t112 * t329 + t172 * t325) - g(2) * (t110 * t329 + t170 * t325) - g(3) * (t177 * t329 + t230 * t325) + t521 * t530 + t502 * t121, -t33 * t79 - t1 * t184 - t12 * t125 - t55 * t41 + t3 * t150 - t30 * t65 - g(1) * (-t112 * t325 + t172 * t329) - g(2) * (-t110 * t325 + t170 * t329) - g(3) * (-t177 * t325 + t230 * t329) - t522 * t530 + t502 * t123, -t1 * t149 - t12 * t66 - t121 * t522 - t521 * t123 - t150 * t2 + t32 * t41 - t33 * t42 - t370 * t65 - t353, t1 * t33 + t2 * t32 + t3 * t55 - g(1) * (pkin(5) * t112 + pkin(11) * t111 + t418) - g(2) * (pkin(5) * t110 + pkin(11) * t109 + t419) - g(3) * (pkin(5) * t177 + pkin(11) * t176 + t369) - t334 + t502 * t30 + t522 * t12 - t521 * t370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t389, t443 * t468 (t432 * t439 + t428) * t320, t389, -t414 * t432 + t299, t382, t161 * t302 - t217 * t414 + t352 - t367, t160 * t302 - t217 * t413 + t351 - t87, 0, 0, -t139 * t326 + t330 * t479 (-t139 - t481) * t330 + (-t140 - t479) * t326, t545 * t435 + t244 * t326 + (-t229 * t327 - t456 * t545) * t440, -t140 * t330 + t227 * t473, -t545 * t436 + t244 * t330 + (t227 * t327 + t331 * t473) * t440, -t384, -pkin(3) * t140 - t114 * t545 - t161 * t227 + t326 * t340 + t330 * t335 - t414 * t91, pkin(3) * t139 + t115 * t545 - t161 * t229 - t326 * t335 + t330 * t340 + t414 * t92, t114 * t229 + t115 * t227 + ((qJD(4) * t229 - t140) * pkin(10) + t532) * t330 + ((qJD(4) * t227 - t139) * pkin(10) + t528) * t326 - t351, -t91 * t114 - t92 * t115 - t141 * t161 + t344 * pkin(3) + (-t356 * t330 - t25 * t326 + (-t326 * t92 - t330 * t91) * qJD(4) - t351) * pkin(10), t83 * t269 + t360 * t448, -t153 * t448 - t269 * t82 + t359 * t83 - t360 * t445, t244 * t269 - t360 * t414 + t448 * t545, t153 * t445 - t359 * t82, t153 * t414 + t244 * t359 - t445 * t545, -t384, t105 * t445 + t153 * t376 - t208 * t244 - t311 * t82 + t313 * t352 - t34 * t414 - t359 * t45 - t504 * t545, t105 * t448 - t209 * t244 + t269 * t45 - t311 * t83 + t35 * t414 + t360 * t376 - t503 * t545 - t525, -t153 * t503 + t208 * t83 - t209 * t82 - t269 * t5 - t34 * t448 - t35 * t445 + t359 * t6 + t360 * t504 - t351, -g(1) * t451 - g(2) * t452 - g(3) * t449 + t105 * t376 - t5 * t208 + t6 * t209 - t45 * t311 - t34 * t504 + t35 * t503, t123 * t347 - t41 * t475, t394 * t123 + t393 * t121 + (t510 - t509 + (t121 * t325 - t123 * t329) * qJD(6)) * t269, t123 * t445 + t347 * t530 + t359 * t41 + t475 * t79, t121 * t348 + t42 * t476, -t121 * t445 - t348 * t530 + t359 * t42 - t476 * t79, -t359 * t79 + t445 * t530, t118 * t79 - t2 * t359 + t208 * t42 + t3 * t476 - g(1) * (-t145 * t469 + t146 * t325) - g(2) * (-t143 * t469 + t144 * t325) - g(3) * (-t195 * t469 + t196 * t325) + t514 * t530 + t505 * t121 - t445 * t370 + t348 * t30, -t119 * t79 + t1 * t359 - t208 * t41 + t3 * t475 - g(1) * (t145 * t470 + t146 * t329) - g(2) * (t143 * t470 + t144 * t329) - g(3) * (t195 * t470 + t196 * t329) - t515 * t530 + t505 * t123 - t445 * t12 + t347 * t30, t118 * t41 - t119 * t42 - t514 * t123 - t515 * t121 + t394 * t12 - t393 * t370 + t525 + (-t1 * t325 - t2 * t329 + (-t12 * t329 - t325 * t370) * qJD(6)) * t269, t1 * t119 + t2 * t118 + t3 * t208 - g(1) * (t145 * t374 + t451) - g(2) * (t143 * t374 + t452) - g(3) * (t195 * t374 + t449) + t505 * t30 + t515 * t12 - t514 * t370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, -t227 ^ 2 + t229 ^ 2, -t139 + t481, -t480, -t140 + t479, t244, -t141 * t229 - g(1) * (t482 - t490) - g(2) * (t483 - t491) - g(3) * t147 - t528, t141 * t227 - g(1) * (-t146 * t330 - t198 * t326) - g(2) * (-t144 * t330 - t197 * t326) + g(3) * t148 - t532, 0, 0, t534, -t487 + t489, t83 + t486, -t534, -t82 + t488, t244, -t105 * t360 + t38 * t545 + (-t153 * t229 + t244 * t497) * pkin(4) + t358 + t5, t105 * t153 + t545 * t39 + (-t229 * t360 - t244 * t319) * pkin(4) - t357 - t6 (-t319 * t82 - t497 * t83) * pkin(4) + (t35 - t38) * t360 + (t39 - t34) * t153, -g(1) * t190 - g(2) * t189 - g(3) * t238 + t34 * t38 - t35 * t39 + (-t105 * t229 + t6 * t319 + t326 * t351 + t497 * t5) * pkin(4), t123 * t391 - t510 (-t41 - t494) * t329 - t527 + t506, -t492 - t531, t121 * t392 - t509, t368 + t495, -t530 * t360, -t121 * t38 - t18 * t530 + t310 * t42 + t325 * t361 - t329 * t336 + t360 * t370, t12 * t360 - t123 * t38 + t19 * t530 - t310 * t41 + t325 * t336 + t329 * t361, t121 * t19 + t123 * t18 + (t370 * t153 - t309 * t42 + t1 + (t123 * t309 + t370) * qJD(6)) * t329 + (-t12 * t153 - t309 * t41 - t2 + (t121 * t309 - t12) * qJD(6)) * t325 + t357, t3 * t310 - t12 * t19 + t370 * t18 - t30 * t38 - g(1) * (-pkin(4) * t490 + pkin(5) * t95 + pkin(11) * t96 + t190) - g(2) * (-pkin(4) * t491 + pkin(5) * t93 + pkin(11) * t94 + t189) - g(3) * (-pkin(4) * t484 + pkin(5) * t131 + pkin(11) * t132 + t238) + (t1 * t329 - t2 * t325 + (-t12 * t325 + t329 * t370) * qJD(6)) * t309; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t82 + t488, t83 - t486, -t487 - t489, t153 * t35 + t34 * t360 - t352 + t45, 0, 0, 0, 0, 0, 0, t368 - t495, -t492 + t531 (t41 - t494) * t329 + t527 + t506, -t360 * t30 + t539 * t325 + t329 * t540 - t352; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t493, -t121 ^ 2 + t123 ^ 2, t121 * t530 - t41, -t493, -t395 + (-qJD(6) + t530) * t123, t79, -t30 * t123 - g(1) * (t145 * t329 - t325 * t96) - g(2) * (t143 * t329 - t325 * t94) - g(3) * (-t132 * t325 + t192) + t540, t30 * t121 - g(1) * (-t145 * t325 - t329 * t96) - g(2) * (-t143 * t325 - t329 * t94) - g(3) * (-t132 * t329 - t485) - t539, 0, 0;];
tau_reg  = t7;
