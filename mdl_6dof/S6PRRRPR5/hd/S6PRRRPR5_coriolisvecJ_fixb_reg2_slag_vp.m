% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRPR5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRPR5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:28:18
% EndTime: 2019-03-08 23:28:48
% DurationCPUTime: 13.66s
% Computational Cost: add. (16423->614), mult. (44642->882), div. (0->0), fcn. (36980->14), ass. (0->276)
t238 = sin(pkin(7));
t244 = sin(qJ(3));
t339 = t238 * t244;
t226 = pkin(9) * t339;
t240 = cos(pkin(7));
t248 = cos(qJ(3));
t335 = t240 * t248;
t199 = pkin(2) * t335 - t226;
t190 = qJD(3) * t199;
t249 = cos(qJ(2));
t330 = t248 * t249;
t245 = sin(qJ(2));
t334 = t244 * t245;
t265 = -t240 * t334 + t330;
t239 = sin(pkin(6));
t323 = qJD(1) * t239;
t325 = t265 * t323 - t190;
t272 = pkin(3) * t244 - pkin(10) * t248;
t264 = t272 * qJD(3);
t301 = t245 * t323;
t403 = (-t264 + t301) * t238;
t336 = t240 * t244;
t338 = t238 * t248;
t200 = pkin(2) * t336 + pkin(9) * t338;
t185 = pkin(10) * t240 + t200;
t273 = -pkin(3) * t248 - pkin(10) * t244;
t186 = (-pkin(2) + t273) * t238;
t243 = sin(qJ(4));
t247 = cos(qJ(4));
t134 = t247 * t185 + t243 * t186;
t362 = t134 * qJD(4) - t243 * t325 + t403 * t247;
t313 = qJD(4) * t247;
t314 = qJD(4) * t243;
t361 = t185 * t314 - t186 * t313 + t403 * t243 + t247 * t325;
t318 = qJD(2) * t248;
t299 = t238 * t318;
t219 = -qJD(4) + t299;
t304 = t243 * t339;
t277 = qJD(4) * t304;
t315 = qJD(3) * t248;
t296 = t238 * t315;
t160 = -t240 * t313 - t247 * t296 + t277;
t198 = t240 * t243 + t247 * t339;
t317 = qJD(3) * t244;
t297 = t238 * t317;
t402 = pkin(4) * t297 + qJ(5) * t160 - qJD(5) * t198 - t362;
t295 = t243 * t315;
t161 = qJD(4) * t198 + t238 * t295;
t197 = -t247 * t240 + t304;
t401 = qJ(5) * t161 + qJD(5) * t197 + t361;
t321 = qJD(2) * t238;
t202 = pkin(9) * t321 + t301;
t192 = t244 * t202;
t241 = cos(pkin(6));
t322 = qJD(1) * t241;
t376 = qJD(2) * pkin(2);
t212 = t249 * t323 + t376;
t344 = t212 * t240;
t263 = t238 * t322 + t344;
t131 = t248 * t263 - t192;
t188 = t272 * t321;
t102 = t247 * t131 + t243 * t188;
t280 = t243 * t299;
t382 = -qJ(5) - pkin(10);
t292 = qJD(4) * t382;
t400 = qJ(5) * t280 + qJD(5) * t247 + t243 * t292 - t102;
t101 = -t131 * t243 + t247 * t188;
t331 = t247 * t248;
t399 = -qJD(5) * t243 + t247 * t292 - (pkin(4) * t244 - qJ(5) * t331) * t321 - t101;
t237 = sin(pkin(13));
t360 = cos(pkin(13));
t291 = t360 * t243;
t204 = t237 * t247 + t291;
t328 = t219 * t204;
t340 = t237 * t243;
t260 = t247 * t360 - t340;
t327 = t219 * t260;
t191 = qJD(3) * t200;
t332 = t245 * t248;
t333 = t244 * t249;
t267 = t240 * t332 + t333;
t326 = t267 * t323 - t191;
t377 = t402 * t237 - t401 * t360;
t363 = t399 * t237 + t400 * t360;
t347 = t202 * t248;
t132 = t244 * t263 + t347;
t274 = -t132 + (-t280 + t314) * pkin(4);
t329 = pkin(4) * t161 - t326;
t242 = sin(qJ(6));
t246 = cos(qJ(6));
t319 = qJD(2) * t240;
t225 = qJD(3) + t319;
t300 = t244 * t321;
t177 = t225 * t243 + t247 * t300;
t119 = pkin(10) * t225 + t132;
t223 = t240 * t322;
t145 = t223 + (qJD(2) * t273 - t212) * t238;
t81 = -t119 * t243 + t247 * t145;
t71 = -qJ(5) * t177 + t81;
t62 = -pkin(4) * t219 + t71;
t175 = -t225 * t247 + t243 * t300;
t82 = t119 * t247 + t145 * t243;
t72 = -qJ(5) * t175 + t82;
t68 = t360 * t72;
t33 = t237 * t62 + t68;
t26 = -pkin(11) * t219 + t33;
t126 = t360 * t175 + t177 * t237;
t261 = -t237 * t175 + t177 * t360;
t118 = -pkin(3) * t225 - t131;
t96 = pkin(4) * t175 + qJD(5) + t118;
t42 = pkin(5) * t126 - pkin(11) * t261 + t96;
t12 = t242 * t42 + t246 * t26;
t151 = (t244 * t313 + t295) * t321 + t225 * t314;
t254 = t267 * qJD(2);
t279 = t241 * t297;
t98 = (t212 * t336 + t347) * qJD(3) + (t239 * t254 + t279) * qJD(1);
t79 = pkin(4) * t151 + t98;
t309 = qJD(2) * qJD(3);
t293 = t248 * t309;
t275 = t238 * t293;
t150 = qJD(2) * t277 - t225 * t313 - t247 * t275;
t94 = -t150 * t237 + t360 * t151;
t95 = -t150 * t360 - t237 * t151;
t31 = pkin(5) * t94 - pkin(11) * t95 + t79;
t222 = qJD(2) * t297;
t155 = (t264 + t301) * t321;
t253 = t265 * qJD(2);
t278 = t241 * t296;
t97 = (t212 * t335 - t192) * qJD(3) + (t239 * t253 + t278) * qJD(1);
t39 = -qJD(4) * t82 + t247 * t155 - t243 * t97;
t23 = pkin(4) * t222 + qJ(5) * t150 - qJD(5) * t177 + t39;
t38 = -t119 * t314 + t145 * t313 + t243 * t155 + t247 * t97;
t27 = -qJ(5) * t151 - qJD(5) * t175 + t38;
t8 = t237 * t23 + t360 * t27;
t6 = pkin(11) * t222 + t8;
t2 = -qJD(6) * t12 - t242 * t6 + t246 * t31;
t390 = qJD(6) + t126;
t398 = t12 * t390 + t2;
t270 = t242 * t26 - t246 * t42;
t1 = -qJD(6) * t270 + t242 * t31 + t246 * t6;
t397 = t270 * t390 + t1;
t396 = pkin(11) * t297 + t377;
t395 = -pkin(11) * t300 + t363;
t394 = t328 * pkin(5) - t327 * pkin(11) - t274;
t111 = -t160 * t237 + t161 * t360;
t112 = -t160 * t360 - t237 * t161;
t393 = pkin(5) * t111 - pkin(11) * t112 + t329;
t392 = t126 * t261;
t286 = t390 * t246;
t391 = -t242 * t94 - t286 * t390;
t378 = t401 * t237 + t402 * t360;
t364 = t400 * t237 - t399 * t360;
t389 = t219 * t81 + t38;
t388 = t219 * t82 - t39;
t109 = -t219 * t242 + t246 * t261;
t287 = t242 * t390;
t387 = t109 * t287;
t385 = t240 * t330 - t334;
t133 = -t185 * t243 + t247 * t186;
t103 = -pkin(4) * t338 - qJ(5) * t198 + t133;
t113 = -qJ(5) * t197 + t134;
t59 = t237 * t103 + t360 * t113;
t55 = -pkin(11) * t338 + t59;
t146 = t197 * t360 + t198 * t237;
t147 = -t237 * t197 + t198 * t360;
t184 = t226 + (-pkin(2) * t248 - pkin(3)) * t240;
t149 = pkin(4) * t197 + t184;
t75 = pkin(5) * t146 - pkin(11) * t147 + t149;
t29 = -t242 * t55 + t246 * t75;
t384 = qJD(6) * t29 + t393 * t242 + t396 * t246;
t30 = t242 * t75 + t246 * t55;
t383 = -qJD(6) * t30 - t396 * t242 + t393 * t246;
t233 = -pkin(4) * t247 - pkin(3);
t154 = -pkin(5) * t260 - pkin(11) * t204 + t233;
t220 = t382 * t247;
t165 = -t360 * t220 + t382 * t340;
t105 = t154 * t242 + t165 * t246;
t381 = qJD(6) * t105 + t395 * t242 + t394 * t246;
t104 = t154 * t246 - t165 * t242;
t380 = -qJD(6) * t104 + t394 * t242 - t395 * t246;
t379 = -pkin(5) * t297 - t378;
t375 = t146 * t94;
t157 = -t239 * t385 - t241 * t338;
t374 = t157 * t98;
t373 = t260 * t94;
t370 = t237 * t72;
t311 = qJD(6) * t246;
t312 = qJD(6) * t242;
t47 = t219 * t311 - t242 * t222 - t246 * t95 + t261 * t312;
t369 = t242 * t47;
t290 = -t246 * t222 + t242 * t95;
t48 = qJD(6) * t109 + t290;
t367 = t246 * t48;
t107 = t246 * t219 + t242 * t261;
t366 = -t107 * t311 - t242 * t48;
t365 = pkin(5) * t300 + t364;
t359 = t107 * t261;
t358 = t107 * t126;
t357 = t109 * t107;
t356 = t109 * t261;
t355 = t261 ^ 2;
t354 = t261 * t219;
t353 = t126 ^ 2;
t352 = t126 * t219;
t171 = -t212 * t238 + t223;
t351 = t171 * t238;
t350 = t175 * t219;
t349 = t177 * t175;
t348 = t177 * t219;
t346 = t204 * t242;
t345 = t204 * t246;
t343 = t219 * t243;
t342 = t219 * t247;
t234 = t238 ^ 2;
t250 = qJD(2) ^ 2;
t341 = t234 * t250;
t337 = t239 * t250;
t324 = t244 ^ 2 - t248 ^ 2;
t320 = qJD(2) * t239;
t316 = qJD(3) * t247;
t307 = t234 * t376;
t305 = t242 * t338;
t303 = t245 * t337;
t298 = t245 * t320;
t7 = t360 * t23 - t237 * t27;
t289 = t242 * t327 - t246 * t300;
t288 = t242 * t300 + t246 * t327;
t285 = t225 + t319;
t284 = t234 * t303;
t283 = t244 * t248 * t341;
t281 = t238 * t298;
t276 = t219 * t300;
t266 = t240 * t333 + t332;
t158 = t239 * t266 + t241 * t339;
t194 = -t238 * t239 * t249 + t240 * t241;
t120 = -t158 * t243 + t194 * t247;
t121 = t158 * t247 + t194 * t243;
t77 = t237 * t120 + t121 * t360;
t51 = t157 * t246 - t242 * t77;
t52 = t157 * t242 + t246 * t77;
t269 = t234 * t244 * t293;
t268 = t246 * t94 + (-t126 * t242 - t312) * t390;
t122 = t147 * t242 + t246 * t338;
t32 = t360 * t62 - t370;
t231 = pkin(4) * t237 + pkin(11);
t25 = t219 * pkin(5) - t32;
t262 = -t231 * t94 + t25 * t390;
t58 = t103 * t360 - t237 * t113;
t259 = t204 * t311 - t289;
t258 = -t204 * t312 - t288;
t256 = qJD(3) * (-t307 + t351);
t252 = qJD(1) * t240 * t298 + qJD(3) * t202;
t251 = -t171 * t321 - qJD(3) * t344 + (-qJD(3) * t238 * t241 - t249 * t320) * qJD(1);
t232 = -pkin(4) * t360 - pkin(5);
t164 = -t220 * t237 - t382 * t291;
t159 = (-t219 * t238 - t234 * t318) * t317;
t123 = t147 * t246 - t305;
t115 = t278 + (qJD(3) * t385 + t253) * t239;
t114 = t279 + (qJD(3) * t266 + t254) * t239;
t76 = -t120 * t360 + t121 * t237;
t70 = pkin(4) * t177 + pkin(5) * t261 + pkin(11) * t126;
t67 = qJD(4) * t120 + t115 * t247 + t243 * t281;
t66 = -qJD(4) * t121 - t115 * t243 + t247 * t281;
t65 = -qJD(6) * t305 + t112 * t242 + t147 * t311 - t246 * t297;
t64 = qJD(6) * t122 - t246 * t112 - t242 * t297;
t54 = pkin(5) * t338 - t58;
t37 = t360 * t71 - t370;
t36 = t237 * t71 + t68;
t35 = t237 * t66 + t360 * t67;
t34 = t237 * t67 - t360 * t66;
t14 = t242 * t70 + t246 * t37;
t13 = -t242 * t37 + t246 * t70;
t10 = -qJD(6) * t52 + t114 * t246 - t242 * t35;
t9 = qJD(6) * t51 + t114 * t242 + t246 * t35;
t5 = -pkin(5) * t222 - t7;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t303, -t249 * t337, 0, 0, 0, 0, 0, 0, 0, 0, -t114 * t225 + t194 * t222 - t248 * t284, -t115 * t225 + t194 * t275 + t244 * t284 (t114 * t244 + t115 * t248 + (t157 * t248 - t158 * t244) * qJD(3)) * t321, -t114 * t131 + t115 * t132 + t374 + t158 * t97 + (qJD(1) * t194 + t171) * t281, 0, 0, 0, 0, 0, 0, t114 * t175 + t120 * t222 + t151 * t157 - t219 * t66, t114 * t177 - t121 * t222 - t150 * t157 + t219 * t67, t120 * t150 - t121 * t151 - t175 * t67 - t177 * t66, t114 * t118 + t120 * t39 + t121 * t38 + t66 * t81 + t67 * t82 + t374, 0, 0, 0, 0, 0, 0, t114 * t126 + t157 * t94 + t219 * t34 - t222 * t76, t114 * t261 + t157 * t95 + t219 * t35 - t222 * t77, -t126 * t35 + t261 * t34 + t76 * t95 - t77 * t94, t114 * t96 + t157 * t79 - t32 * t34 + t33 * t35 - t7 * t76 + t77 * t8, 0, 0, 0, 0, 0, 0, t10 * t390 + t107 * t34 + t48 * t76 + t51 * t94, t109 * t34 - t390 * t9 - t47 * t76 - t52 * t94, -t10 * t109 - t107 * t9 + t47 * t51 - t48 * t52, t1 * t52 - t10 * t270 + t12 * t9 + t2 * t51 + t25 * t34 + t5 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t269, -0.2e1 * t324 * t234 * t309, t285 * t296, -0.2e1 * t269, -t285 * t297, 0, t225 * t326 - t240 * t98 + t244 * t256, t225 * t325 - t240 * t97 + t248 * t256 (t244 * t98 + t248 * t97 + (-t131 * t248 - t132 * t244) * qJD(3) + ((-t325 - t190) * t248 + (-t326 - t191) * t244) * qJD(2)) * t238, -t199 * t98 + t200 * t97 - t325 * t132 + t326 * t131 + (-t307 - t351) * t301, -t150 * t198 - t160 * t177, t150 * t197 - t151 * t198 + t160 * t175 - t161 * t177, t160 * t219 + (t150 * t248 + (qJD(2) * t198 + t177) * t317) * t238, t151 * t197 + t161 * t175, t161 * t219 + (t151 * t248 + (-qJD(2) * t197 - t175) * t317) * t238, t159, t118 * t161 + t151 * t184 + t197 * t98 + t362 * t219 - t326 * t175 + (-t248 * t39 + (qJD(2) * t133 + t81) * t317) * t238, -t118 * t160 - t150 * t184 + t198 * t98 - t361 * t219 - t326 * t177 + (t248 * t38 + (-qJD(2) * t134 - t82) * t317) * t238, t133 * t150 - t134 * t151 + t160 * t81 - t161 * t82 + t175 * t361 + t177 * t362 - t197 * t38 - t198 * t39, -t118 * t326 + t133 * t39 + t134 * t38 + t184 * t98 - t361 * t82 - t362 * t81, t112 * t261 + t147 * t95, -t111 * t261 - t112 * t126 - t146 * t95 - t147 * t94, -t112 * t219 + (-t248 * t95 + (qJD(2) * t147 + t261) * t317) * t238, t111 * t126 + t375, t111 * t219 + (t248 * t94 + (-qJD(2) * t146 - t126) * t317) * t238, t159, t111 * t96 + t146 * t79 + t149 * t94 - t378 * t219 + t329 * t126 + (-t248 * t7 + (qJD(2) * t58 + t32) * t317) * t238, t112 * t96 + t147 * t79 + t149 * t95 + t377 * t219 + t329 * t261 + (t248 * t8 + (-qJD(2) * t59 - t33) * t317) * t238, -t111 * t33 - t112 * t32 - t126 * t377 - t146 * t8 - t147 * t7 - t261 * t378 - t58 * t95 - t59 * t94, t149 * t79 + t32 * t378 + t329 * t96 + t33 * t377 + t58 * t7 + t59 * t8, -t109 * t64 - t123 * t47, t107 * t64 - t109 * t65 + t122 * t47 - t123 * t48, t109 * t111 + t123 * t94 - t146 * t47 - t390 * t64, t107 * t65 + t122 * t48, -t107 * t111 - t122 * t94 - t146 * t48 - t390 * t65, t111 * t390 + t375, t379 * t107 - t111 * t270 + t122 * t5 + t146 * t2 + t25 * t65 + t29 * t94 + t383 * t390 + t48 * t54, -t1 * t146 + t379 * t109 - t111 * t12 + t123 * t5 - t25 * t64 - t30 * t94 - t384 * t390 - t47 * t54, -t1 * t122 - t384 * t107 - t383 * t109 - t12 * t65 - t123 * t2 - t270 * t64 + t29 * t47 - t30 * t48, t1 * t30 + t384 * t12 + t2 * t29 + t379 * t25 - t270 * t383 + t5 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t283, t324 * t341 (qJD(3) - t225) * t299, t283, t225 * t300 - t222, 0, t132 * t225 + t244 * t251 - t248 * t252, t131 * t225 + t244 * t252 + t248 * t251, 0, 0, -t150 * t243 - t177 * t342 (-t150 + t350) * t247 + (-t151 + t348) * t243, -t219 * t313 + (t219 * t331 + (qJD(3) * t243 - t177) * t244) * t321, -t151 * t247 - t175 * t343, t219 * t314 + (-t248 * t343 + (t175 + t316) * t244) * t321, t276, -pkin(3) * t151 + t101 * t219 - t132 * t175 - t247 * t98 + (pkin(10) * t342 + t118 * t243) * qJD(4) + (-t244 * t81 + (-pkin(10) * t317 - t118 * t248) * t243) * t321, pkin(3) * t150 - t102 * t219 - t132 * t177 + t243 * t98 + (-pkin(10) * t343 + t118 * t247) * qJD(4) + (-t118 * t331 + (-pkin(10) * t316 + t82) * t244) * t321, t101 * t177 + t102 * t175 + ((qJD(4) * t177 - t151) * pkin(10) + t389) * t247 + ((qJD(4) * t175 - t150) * pkin(10) + t388) * t243, -pkin(3) * t98 - t101 * t81 - t102 * t82 - t118 * t132 + (-t243 * t39 + t247 * t38 + (-t243 * t82 - t247 * t81) * qJD(4)) * pkin(10), t204 * t95 - t261 * t327, t126 * t327 - t204 * t94 + t260 * t95 + t261 * t328, t327 * t219 + (qJD(3) * t204 - t261) * t300, -t126 * t328 - t373, -t328 * t219 + (qJD(3) * t260 + t126) * t300, t276, -t260 * t79 + t233 * t94 - t328 * t96 + t364 * t219 + t274 * t126 + (-qJD(3) * t164 - t32) * t300, t204 * t79 + t233 * t95 - t327 * t96 + t363 * t219 + t274 * t261 + (-qJD(3) * t165 + t33) * t300, -t126 * t363 + t164 * t95 - t165 * t94 - t204 * t7 + t260 * t8 + t261 * t364 + t32 * t327 + t328 * t33, -t164 * t7 + t165 * t8 + t233 * t79 + t274 * t96 - t32 * t364 + t33 * t363, t109 * t258 - t345 * t47, t289 * t109 + t288 * t107 + (t369 - t367 + (t107 * t242 - t109 * t246) * qJD(6)) * t204, -t109 * t328 + t258 * t390 + t260 * t47 + t345 * t94, t107 * t259 + t346 * t48, t107 * t328 - t259 * t390 + t260 * t48 - t346 * t94, -t328 * t390 - t373, t104 * t94 + t365 * t107 + t164 * t48 - t2 * t260 + t259 * t25 + t270 * t328 + t5 * t346 - t381 * t390, t1 * t260 - t105 * t94 + t109 * t365 + t12 * t328 - t164 * t47 + t25 * t258 + t345 * t5 + t380 * t390, t104 * t47 - t105 * t48 + t289 * t12 - t288 * t270 + t381 * t109 + t380 * t107 + (-t1 * t242 - t2 * t246 + (-t12 * t246 - t242 * t270) * qJD(6)) * t204, t1 * t105 + t104 * t2 - t380 * t12 + t164 * t5 + t365 * t25 + t270 * t381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t349, -t175 ^ 2 + t177 ^ 2, -t150 - t350, -t349, -t151 - t348, t222, -t118 * t177 - t388, t118 * t175 - t389, 0, 0, t392, -t353 + t355, t95 - t352, -t392, -t94 - t354, t222, -t96 * t261 - t36 * t219 + (-t126 * t177 + t222 * t360) * pkin(4) + t7, t126 * t96 - t219 * t37 + (-t177 * t261 - t222 * t237) * pkin(4) - t8 (-t237 * t94 - t360 * t95) * pkin(4) + (t33 - t36) * t261 + (t37 - t32) * t126, t32 * t36 - t33 * t37 + (-t177 * t96 + t237 * t8 + t360 * t7) * pkin(4), t109 * t286 - t369 (-t47 - t358) * t246 - t387 + t366, -t356 - t391, t107 * t287 - t367, t268 + t359, -t390 * t261, -t107 * t36 + t270 * t261 + t232 * t48 - t246 * t5 + (-t231 * t311 - t13) * t390 + t262 * t242, -t109 * t36 + t12 * t261 - t232 * t47 + t242 * t5 + (t231 * t312 + t14) * t390 + t262 * t246, t107 * t14 + t109 * t13 + (t270 * t126 - t231 * t48 + t1 + (t109 * t231 + t270) * qJD(6)) * t246 + (-t12 * t126 - t231 * t47 - t2 + (t107 * t231 - t12) * qJD(6)) * t242, t270 * t13 - t12 * t14 + t232 * t5 - t25 * t36 + (t1 * t246 - t2 * t242 + (-t12 * t242 + t246 * t270) * qJD(6)) * t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t94 - t354, t95 + t352, -t353 - t355, t126 * t33 + t261 * t32 + t79, 0, 0, 0, 0, 0, 0, t268 - t359, -t356 + t391 (t47 - t358) * t246 + t387 + t366, t397 * t242 + t398 * t246 - t261 * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t357, -t107 ^ 2 + t109 ^ 2, t107 * t390 - t47, -t357, -t290 + (-qJD(6) + t390) * t109, t94, -t109 * t25 + t398, t107 * t25 - t397, 0, 0;];
tauc_reg  = t3;
