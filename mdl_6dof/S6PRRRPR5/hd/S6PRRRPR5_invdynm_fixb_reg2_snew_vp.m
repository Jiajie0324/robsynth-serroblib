% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRRRPR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 08:09
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRRRPR5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR5_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR5_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPR5_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPR5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRPR5_invdynm_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 08:07:30
% EndTime: 2019-05-05 08:09:12
% DurationCPUTime: 107.66s
% Computational Cost: add. (1283712->1231), mult. (2736279->1960), div. (0->0), fcn. (2251890->16), ass. (0->885)
t2080 = sin(qJ(4));
t2085 = cos(qJ(3));
t2073 = sin(pkin(7));
t2081 = sin(qJ(3));
t2267 = t2073 * t2081;
t2247 = qJD(2) * t2267;
t2251 = qJDD(2) * t2073;
t2036 = -qJD(3) * t2247 + t2085 * t2251;
t2031 = -qJDD(4) + t2036;
t2084 = cos(qJ(4));
t2077 = cos(pkin(7));
t2295 = qJD(2) * t2077;
t2233 = qJD(3) + t2295;
t2028 = t2080 * t2233 + t2084 * t2247;
t2135 = t2080 * t2247 - t2084 * t2233;
t2104 = t2028 * t2135;
t2315 = -t2031 - t2104;
t2321 = t2080 * t2315;
t2320 = t2084 * t2315;
t2071 = sin(pkin(13));
t2075 = cos(pkin(13));
t1989 = t2028 * t2071 + t2075 * t2135;
t1991 = t2075 * t2028 - t2071 * t2135;
t1920 = t1991 * t1989;
t2309 = -t1920 - t2031;
t2319 = t2071 * t2309;
t2318 = t2075 * t2309;
t2079 = sin(qJ(6));
t2266 = t2073 * t2085;
t2246 = qJD(2) * t2266;
t2056 = -qJD(4) + t2246;
t2083 = cos(qJ(6));
t1960 = t1991 * t2079 + t2083 * t2056;
t1962 = t1991 * t2083 - t2056 * t2079;
t1885 = t1962 * t1960;
t2249 = t2081 * qJDD(2);
t2294 = qJD(2) * t2085;
t2035 = (qJD(3) * t2294 + t2249) * t2073;
t2061 = qJDD(2) * t2077 + qJDD(3);
t1975 = -qJD(4) * t2135 + t2084 * t2035 + t2080 * t2061;
t2148 = -t2080 * t2035 + t2084 * t2061;
t2106 = -t2028 * qJD(4) + t2148;
t2229 = t1975 * t2071 - t2075 * t2106;
t1900 = qJDD(6) + t2229;
t2310 = -t1885 + t1900;
t2317 = t2079 * t2310;
t2316 = t2083 * t2310;
t2082 = sin(qJ(2));
t2086 = cos(qJ(2));
t2078 = cos(pkin(6));
t2074 = sin(pkin(6));
t2297 = g(3) - qJDD(1);
t2236 = t2074 * t2297;
t2072 = sin(pkin(12));
t2076 = cos(pkin(12));
t2237 = g(1) * t2072 - t2076 * g(2);
t2100 = t2078 * t2237 - t2236;
t2253 = t2076 * g(1) + t2072 * g(2);
t2000 = -t2082 * t2253 - t2086 * t2100;
t2087 = qJD(2) ^ 2;
t2298 = pkin(9) * t2073;
t2095 = qJDD(2) * pkin(2) + t2087 * t2298 - t2000;
t2048 = t2074 * t2237;
t2221 = t2078 * t2297 + t2048;
t2314 = -t2073 * t2221 + t2077 * t2095;
t2278 = t1991 * t2056;
t1862 = t2229 - t2278;
t2134 = t2135 ^ 2;
t2228 = t2233 ^ 2;
t2001 = t2082 * t2100 - t2086 * t2253;
t1943 = t2000 * t2082 + t2001 * t2086;
t1932 = t1943 * t2074;
t2068 = t2073 ^ 2;
t2269 = t2068 * t2087;
t2220 = qJD(2) * t2233;
t2313 = t2068 * (-t2077 * t2087 + t2220);
t2312 = t2072 * t2297;
t2311 = t2076 * t2297;
t2137 = t2082 * t2221;
t2136 = t2086 * t2221;
t2293 = qJD(5) * t1989;
t1982 = -0.2e1 * t2293;
t1993 = -t2087 * pkin(2) + pkin(9) * t2251 + t2001;
t1887 = t2085 * t1993 + t2081 * t2314;
t2303 = pkin(3) * t2085;
t2224 = -pkin(10) * t2081 - t2303;
t2296 = qJD(2) * t2073;
t2034 = t2224 * t2296;
t2092 = t2061 * pkin(10) + t2034 * t2246 + t1887;
t2090 = -pkin(3) * t2228 + t2092;
t2142 = t2073 * t2220;
t2046 = t2081 * t2142;
t2013 = t2036 - t2046;
t1950 = t2073 * t2095 + t2077 * t2221;
t2047 = t2085 * t2142;
t2010 = t2047 + t2035;
t2093 = -pkin(10) * t2010 - t1950;
t2091 = -pkin(3) * t2013 + t2093;
t1793 = t2080 * t2091 + t2084 * t2090;
t2004 = -pkin(4) * t2056 - qJ(5) * t2028;
t1732 = -pkin(4) * t2134 + qJ(5) * t2106 + t2056 * t2004 + t1793;
t1792 = t2080 * t2090 - t2084 * t2091;
t2015 = t2135 * t2056;
t2308 = t2015 - t1975;
t2089 = pkin(4) * t2315 + qJ(5) * t2308 - t1792;
t2255 = t2075 * t1732 + t2071 * t2089;
t1639 = t1982 + t2255;
t1910 = pkin(5) * t1989 - pkin(11) * t1991;
t2030 = t2056 ^ 2;
t1622 = -pkin(5) * t2030 - pkin(11) * t2031 - t1910 * t1989 + t1639;
t2254 = t2314 * t2085;
t1869 = -t2061 * pkin(3) - t2228 * pkin(10) + (t2034 * t2296 + t1993) * t2081 - t2254;
t1796 = -t2106 * pkin(4) - t2134 * qJ(5) + t2004 * t2028 + qJDD(5) + t1869;
t1904 = t2075 * t1975 + t2071 * t2106;
t1971 = t1989 * t2056;
t1865 = t1971 + t1904;
t1690 = pkin(5) * t1862 - pkin(11) * t1865 + t1796;
t1564 = t1622 * t2079 - t2083 * t1690;
t1565 = t1622 * t2083 + t1690 * t2079;
t1513 = t2079 * t1564 + t2083 * t1565;
t1939 = t2015 + t1975;
t2307 = -t2072 * t2237 - t2076 * t2253;
t2306 = -t2072 * t2253 + t2076 * t2237;
t1956 = t1960 ^ 2;
t1957 = t1962 ^ 2;
t1986 = qJD(6) + t1989;
t1985 = t1986 ^ 2;
t1987 = t1989 ^ 2;
t1988 = t1991 ^ 2;
t2027 = t2028 ^ 2;
t2305 = 0.2e1 * qJD(5);
t2304 = pkin(3) * t2081;
t2232 = t1732 * t2071 - t2075 * t2089;
t1638 = t1991 * t2305 + t2232;
t1558 = -t1638 * t2075 + t1639 * t2071;
t2302 = pkin(4) * t1558;
t1863 = t2229 + t2278;
t1866 = -t1971 + t1904;
t1767 = -t1863 * t2071 - t1866 * t2075;
t2301 = pkin(4) * t1767;
t2300 = pkin(5) * t2071;
t2299 = pkin(8) * t2078;
t2292 = t1558 * t2080;
t2291 = t1558 * t2084;
t2290 = t1796 * t2071;
t2289 = t1796 * t2075;
t1814 = t1885 + t1900;
t2288 = t1814 * t2079;
t2287 = t1814 * t2083;
t2286 = t1869 * t2080;
t2285 = t1869 * t2084;
t1897 = -t1920 + t2031;
t2284 = t1897 * t2071;
t2283 = t1897 * t2075;
t1966 = t2031 - t2104;
t2282 = t1966 * t2080;
t2281 = t1966 * t2084;
t2280 = t1986 * t2079;
t2279 = t1986 * t2083;
t2069 = t2081 ^ 2;
t2070 = t2085 ^ 2;
t2252 = t2069 + t2070;
t2016 = t2233 * t2252 * t2296;
t2277 = t2016 * t2082;
t2276 = t2031 * t2081;
t2055 = t2081 * t2085 * t2269;
t2032 = -t2055 + t2061;
t2275 = t2032 * t2081;
t2274 = t2032 * t2085;
t2033 = t2055 + t2061;
t2273 = t2033 * t2081;
t2272 = t2033 * t2085;
t2271 = t2056 * t2071;
t2270 = t2056 * t2075;
t2268 = t2073 * t2061;
t2265 = t2073 * t2086;
t2264 = t2077 * t2081;
t1621 = t2031 * pkin(5) - t2030 * pkin(11) + (t2305 + t1910) * t1991 + t2232;
t1618 = t2079 * t1621;
t2263 = t2080 * t2028;
t1929 = -t2015 * t2084 - t2080 * t2106;
t2262 = t2081 * t1929;
t1931 = t1975 * t2084 + t2056 * t2263;
t2261 = t2081 * t1931;
t2260 = t2081 * t1950;
t1619 = t2083 * t1621;
t2259 = t2084 * t2028;
t2258 = t2085 * t1950;
t2256 = -pkin(5) * t1621 + pkin(11) * t1513;
t2250 = t2074 * qJDD(2);
t2248 = -pkin(5) * t2075 - pkin(4);
t2245 = t2071 * t1885;
t2244 = t2075 * t1885;
t2243 = t2081 * t1920;
t2242 = t2085 * t1920;
t2241 = t2069 * t2269;
t2240 = t2070 * t2269;
t1874 = -t1957 - t1985;
t1744 = -t1874 * t2079 - t2287;
t2166 = -t1904 * t2083 + t2031 * t2079;
t1790 = (qJD(6) + t1986) * t1960 + t2166;
t2239 = pkin(5) * t1790 + pkin(11) * t1744 + t1618;
t1853 = -t1985 - t1956;
t1738 = t1853 * t2083 - t2317;
t2230 = -t1904 * t2079 - t2083 * t2031;
t1838 = -qJD(6) * t1962 + t2230;
t1902 = t1962 * t1986;
t1787 = t1838 - t1902;
t2238 = pkin(5) * t1787 + pkin(11) * t1738 - t1619;
t1559 = t1638 * t2071 + t2075 * t1639;
t1699 = t1792 * t2080 + t2084 * t1793;
t1786 = (-qJD(6) + t1986) * t1962 + t2230;
t1839 = -qJD(6) * t1960 - t2166;
t1901 = t1986 * t1960;
t1789 = t1839 + t1901;
t1695 = t1786 * t2083 + t1789 * t2079;
t1844 = t1956 + t1957;
t2227 = pkin(5) * t1844 + pkin(11) * t1695 + t1513;
t1485 = t1513 * t2071 - t1621 * t2075;
t2226 = pkin(4) * t1485 + t2256;
t1951 = -t1988 - t2030;
t1845 = t1951 * t2075 + t2284;
t2225 = pkin(4) * t1845 - t2255;
t2024 = -t2241 - t2228;
t1992 = -t2024 * t2081 - t2274;
t2223 = pkin(9) * t1992 - t2260;
t2039 = -t2228 - t2240;
t1999 = t2039 * t2085 - t2273;
t2222 = pkin(9) * t1999 + t2258;
t1486 = t1513 * t2075 + t1621 * t2071;
t1439 = t1485 * t2084 + t1486 * t2080;
t1440 = -t1485 * t2080 + t1486 * t2084;
t1512 = -t1564 * t2083 + t1565 * t2079;
t2218 = t1440 * t2081 - t1512 * t2085;
t1409 = -t2073 * t1439 + t2077 * t2218;
t1427 = t1440 * t2085 + t1512 * t2081;
t2219 = t1409 * t2086 + t1427 * t2082;
t1505 = t1559 * t2080 + t2291;
t1506 = t1559 * t2084 - t2292;
t2215 = t1506 * t2081 - t1796 * t2085;
t1453 = -t2073 * t1505 + t2077 * t2215;
t1497 = t1506 * t2085 + t1796 * t2081;
t2217 = t1453 * t2086 + t1497 * t2082;
t1652 = t1695 * t2071 + t1844 * t2075;
t1653 = t1695 * t2075 - t1844 * t2071;
t1573 = t1652 * t2084 + t1653 * t2080;
t1574 = -t1652 * t2080 + t1653 * t2084;
t1693 = t1786 * t2079 - t1789 * t2083;
t2207 = t1574 * t2081 - t1693 * t2085;
t1500 = -t2073 * t1573 + t2077 * t2207;
t1540 = t1574 * t2085 + t1693 * t2081;
t2216 = t1500 * t2086 + t1540 * t2082;
t1788 = t1839 - t1901;
t1696 = t1787 * t2083 - t1788 * t2079;
t1884 = t1957 - t1956;
t1669 = t1696 * t2071 - t1884 * t2075;
t1670 = t1696 * t2075 + t1884 * t2071;
t1584 = t1669 * t2084 + t1670 * t2080;
t1585 = -t1669 * t2080 + t1670 * t2084;
t1694 = t1787 * t2079 + t1788 * t2083;
t2204 = t1585 * t2081 - t1694 * t2085;
t1508 = -t2073 * t1584 + t2077 * t2204;
t1544 = t1585 * t2085 + t1694 * t2081;
t2214 = t1508 * t2086 + t1544 * t2082;
t1671 = t1738 * t2071 + t1787 * t2075;
t1672 = t1738 * t2075 - t1787 * t2071;
t1593 = t1671 * t2084 + t1672 * t2080;
t1594 = -t1671 * t2080 + t1672 * t2084;
t1737 = t1853 * t2079 + t2316;
t2202 = t1594 * t2081 - t1737 * t2085;
t1517 = -t2073 * t1593 + t2077 * t2202;
t1556 = t1594 * t2085 + t1737 * t2081;
t2213 = t1517 * t2086 + t1556 * t2082;
t1673 = t1744 * t2071 + t1790 * t2075;
t1674 = t1744 * t2075 - t1790 * t2071;
t1595 = t1673 * t2084 + t1674 * t2080;
t1596 = -t1673 * t2080 + t1674 * t2084;
t1743 = t1874 * t2083 - t2288;
t2201 = t1596 * t2081 - t1743 * t2085;
t1521 = -t2073 * t1595 + t2077 * t2201;
t1557 = t1596 * t2085 + t1743 * t2081;
t2212 = t1521 * t2086 + t1557 * t2082;
t1896 = -t1957 + t1985;
t1758 = -t1896 * t2079 + t2316;
t1683 = t1758 * t2071 - t1789 * t2075;
t1685 = t1758 * t2075 + t1789 * t2071;
t1603 = t1683 * t2084 + t1685 * t2080;
t1605 = -t1683 * t2080 + t1685 * t2084;
t1756 = t1896 * t2083 + t2317;
t2199 = t1605 * t2081 - t1756 * t2085;
t1525 = -t2073 * t1603 + t2077 * t2199;
t1569 = t1605 * t2085 + t1756 * t2081;
t2211 = t1525 * t2086 + t1569 * t2082;
t1895 = t1956 - t1985;
t1759 = t1895 * t2083 - t2288;
t1785 = -t1838 - t1902;
t1684 = t1759 * t2071 + t1785 * t2075;
t1686 = t1759 * t2075 - t1785 * t2071;
t1604 = t1684 * t2084 + t1686 * t2080;
t1606 = -t1684 * t2080 + t1686 * t2084;
t1757 = t1895 * t2079 + t2287;
t2198 = t1606 * t2081 - t1757 * t2085;
t1526 = -t2073 * t1604 + t2077 * t2198;
t1570 = t1606 * t2085 + t1757 * t2081;
t2210 = t1526 * t2086 + t1570 * t2082;
t1780 = -t1838 * t2079 + t1960 * t2279;
t1724 = t1780 * t2071 + t2244;
t1726 = t1780 * t2075 - t2245;
t1640 = t1724 * t2084 + t1726 * t2080;
t1642 = -t1724 * t2080 + t1726 * t2084;
t1779 = -t2083 * t1838 - t1960 * t2280;
t2195 = t1642 * t2081 + t1779 * t2085;
t1550 = -t2073 * t1640 + t2077 * t2195;
t1616 = t1642 * t2085 - t1779 * t2081;
t2209 = t1550 * t2086 + t1616 * t2082;
t1782 = t1839 * t2083 - t1962 * t2280;
t1725 = t1782 * t2071 - t2244;
t1727 = t1782 * t2075 + t2245;
t1641 = t1725 * t2084 + t1727 * t2080;
t1643 = -t1725 * t2080 + t1727 * t2084;
t1781 = t1839 * t2079 + t1962 * t2279;
t2194 = t1643 * t2081 - t1781 * t2085;
t1551 = -t2073 * t1641 + t2077 * t2194;
t1617 = t1643 * t2085 + t1781 * t2081;
t2208 = t1551 * t2086 + t1617 * t2082;
t1823 = (-t1960 * t2083 + t1962 * t2079) * t1986;
t1765 = t1823 * t2071 - t1900 * t2075;
t1766 = t1823 * t2075 + t1900 * t2071;
t1675 = t1765 * t2084 + t1766 * t2080;
t1676 = -t1765 * t2080 + t1766 * t2084;
t1822 = (-t1960 * t2079 - t1962 * t2083) * t1986;
t2189 = t1676 * t2081 - t1822 * t2085;
t1576 = -t2073 * t1675 + t2077 * t2189;
t1634 = t1676 * t2085 + t1822 * t2081;
t2206 = t1576 * t2086 + t1634 * t2082;
t1769 = -t1863 * t2075 + t1866 * t2071;
t1678 = t1767 * t2084 + t1769 * t2080;
t1680 = -t1767 * t2080 + t1769 * t2084;
t1879 = -t1987 - t1988;
t2188 = t1680 * t2081 - t1879 * t2085;
t1583 = -t2073 * t1678 + t2077 * t2188;
t1651 = t1680 * t2085 + t1879 * t2081;
t2205 = t1583 * t2086 + t1651 * t2082;
t1768 = -t1862 * t2071 + t1865 * t2075;
t1770 = -t1862 * t2075 - t1865 * t2071;
t1679 = t1768 * t2084 + t1770 * t2080;
t1681 = -t1768 * t2080 + t1770 * t2084;
t1911 = t1988 - t1987;
t2187 = t1681 * t2081 - t1911 * t2085;
t1592 = -t2073 * t1679 + t2077 * t2187;
t1661 = t1681 * t2085 + t1911 * t2081;
t2203 = t1592 * t2086 + t1661 * t2082;
t1698 = -t1792 * t2084 + t1793 * t2080;
t2186 = t1699 * t2081 - t1869 * t2085;
t1600 = -t2073 * t1698 + t2077 * t2186;
t1663 = t1699 * t2085 + t1869 * t2081;
t2200 = t1600 * t2086 + t1663 * t2082;
t1907 = -t2030 - t1987;
t1826 = t1907 * t2071 + t2318;
t1827 = t1907 * t2075 - t2319;
t1718 = t1826 * t2084 + t1827 * t2080;
t1719 = -t1826 * t2080 + t1827 * t2084;
t2184 = t1719 * t2081 - t1862 * t2085;
t1624 = -t2073 * t1718 + t2077 * t2184;
t1692 = t1719 * t2085 + t1862 * t2081;
t2197 = t1624 * t2086 + t1692 * t2082;
t1846 = -t1951 * t2071 + t2283;
t1747 = t1845 * t2084 + t1846 * t2080;
t1748 = -t1845 * t2080 + t1846 * t2084;
t2181 = t1748 * t2081 - t1865 * t2085;
t1633 = -t2073 * t1747 + t2077 * t2181;
t1707 = t1748 * t2085 + t1865 * t2081;
t2196 = t1633 * t2086 + t1707 * t2082;
t1970 = -t1988 + t2030;
t1849 = t1970 * t2075 + t2319;
t1851 = -t1970 * t2071 + t2318;
t1752 = t1849 * t2084 + t1851 * t2080;
t1754 = -t1849 * t2080 + t1851 * t2084;
t2180 = t1754 * t2081 - t1866 * t2085;
t1646 = -t2073 * t1752 + t2077 * t2180;
t1709 = t1754 * t2085 + t1866 * t2081;
t2193 = t1646 * t2086 + t1709 * t2082;
t1969 = t1987 - t2030;
t1850 = t1969 * t2071 - t2283;
t1852 = t1969 * t2075 + t2284;
t1753 = t1850 * t2084 + t1852 * t2080;
t1755 = -t1850 * t2080 + t1852 * t2084;
t2179 = t1755 * t2081 + t1863 * t2085;
t1647 = -t2073 * t1753 + t2077 * t2179;
t1710 = t1755 * t2085 - t1863 * t2081;
t2192 = t1647 * t2086 + t1710 * t2082;
t1854 = -t1989 * t2271 - t2075 * t2229;
t1855 = -t1989 * t2270 + t2071 * t2229;
t1761 = t1854 * t2084 + t1855 * t2080;
t1763 = -t1854 * t2080 + t1855 * t2084;
t2141 = t1763 * t2081 + t2242;
t1656 = -t1761 * t2073 + t2077 * t2141;
t1720 = t1763 * t2085 - t2243;
t2191 = t1656 * t2086 + t1720 * t2082;
t1856 = t1904 * t2071 - t1991 * t2270;
t1857 = t1904 * t2075 + t1991 * t2271;
t1762 = t1856 * t2084 + t1857 * t2080;
t1764 = -t1856 * t2080 + t1857 * t2084;
t2140 = t1764 * t2081 - t2242;
t1657 = -t1762 * t2073 + t2077 * t2140;
t1721 = t1764 * t2085 + t2243;
t2190 = t1657 * t2086 + t1721 * t2082;
t1891 = (t1989 * t2071 + t1991 * t2075) * t2056;
t1892 = (t1989 * t2075 - t1991 * t2071) * t2056;
t1811 = t1891 * t2084 + t1892 * t2080;
t1812 = -t1891 * t2080 + t1892 * t2084;
t2019 = t2077 * t2085 * t2031;
t1712 = -t1811 * t2073 + t1812 * t2264 + t2019;
t1803 = t1812 * t2085 - t2276;
t2185 = t1712 * t2086 + t1803 * t2082;
t1938 = (-qJD(4) - t2056) * t2028 + t2148;
t1859 = t1938 * t2080 + t2084 * t2308;
t1861 = t1938 * t2084 - t2080 * t2308;
t1965 = t2134 + t2027;
t2170 = t1861 * t2081 + t1965 * t2085;
t1740 = -t1859 * t2073 + t2077 * t2170;
t1817 = t1861 * t2085 - t1965 * t2081;
t2183 = t1740 * t2086 + t1817 * t2082;
t2014 = t2028 * t2056;
t1937 = t2014 + t2106;
t1858 = t1937 * t2080 + t1939 * t2084;
t1860 = t1937 * t2084 - t1939 * t2080;
t1995 = t2027 - t2134;
t2171 = t1860 * t2081 - t1995 * t2085;
t1746 = -t1858 * t2073 + t2077 * t2171;
t1829 = t1860 * t2085 + t1995 * t2081;
t2182 = t1746 * t2086 + t1829 * t2082;
t1886 = t1993 * t2081 - t2254;
t2168 = -t1886 * t2085 + t1887 * t2081;
t1774 = t1950 * t2073 + t2077 * t2168;
t1809 = t1886 * t2081 + t1887 * t2085;
t2178 = t1774 * t2086 + t1809 * t2082;
t1980 = -t2030 - t2134;
t1893 = t1980 * t2080 + t2320;
t1894 = t1980 * t2084 - t2321;
t2167 = t1894 * t2081 + t1937 * t2085;
t1776 = -t1893 * t2073 + t2077 * t2167;
t1836 = t1894 * t2085 - t1937 * t2081;
t2177 = t1776 * t2086 + t1836 * t2082;
t1996 = -t2027 - t2030;
t1908 = t1996 * t2084 + t2282;
t1909 = -t1996 * t2080 + t2281;
t2165 = t1909 * t2081 - t1939 * t2085;
t1795 = -t1908 * t2073 + t2077 * t2165;
t1842 = t1909 * t2085 + t1939 * t2081;
t2176 = t1795 * t2086 + t1842 * t2082;
t2008 = -t2027 + t2030;
t1916 = t2008 * t2084 + t2321;
t1918 = -t2008 * t2080 + t2320;
t2164 = t1918 * t2081 + t2085 * t2308;
t1799 = -t1916 * t2073 + t2077 * t2164;
t1847 = t1918 * t2085 - t2081 * t2308;
t2175 = t1799 * t2086 + t1847 * t2082;
t2007 = t2134 - t2030;
t1917 = t2007 * t2080 - t2281;
t1919 = t2007 * t2084 + t2282;
t1936 = t2014 - t2106;
t2163 = t1919 * t2081 + t1936 * t2085;
t1800 = -t1917 * t2073 + t2077 * t2163;
t1848 = t1919 * t2085 - t1936 * t2081;
t2174 = t1800 * t2086 + t1848 * t2082;
t1928 = -t2015 * t2080 + t2084 * t2106;
t2098 = t2085 * t2104;
t2097 = t2077 * t2098;
t1820 = -t2073 * t1928 + t2077 * t2262 + t2097;
t2099 = t2081 * t2104;
t1882 = t2085 * t1929 - t2099;
t2173 = t1820 * t2086 + t1882 * t2082;
t1930 = t1975 * t2080 - t2056 * t2259;
t1821 = -t2073 * t1930 + t2077 * t2261 - t2097;
t1883 = t2085 * t1931 + t2099;
t2172 = t1821 * t2086 + t1883 * t2082;
t1954 = (t2080 * t2135 + t2259) * t2056;
t1955 = (t2084 * t2135 - t2263) * t2056;
t1873 = -t1954 * t2073 + t1955 * t2264 + t2019;
t1927 = t1955 * t2085 - t2276;
t2169 = t1873 * t2086 + t1927 * t2082;
t2045 = t2252 * t2269;
t2011 = -t2047 + t2035;
t2012 = t2036 + t2046;
t2153 = -t2011 * t2085 + t2012 * t2081;
t1925 = t2045 * t2073 + t2077 * t2153;
t1952 = t2011 * t2081 + t2012 * t2085;
t2162 = t1925 * t2086 + t1952 * t2082;
t2044 = (t2069 - t2070) * t2269;
t2154 = t2010 * t2085 + t2013 * t2081;
t1926 = -t2044 * t2073 + t2077 * t2154;
t1953 = -t2010 * t2081 + t2013 * t2085;
t2161 = t1926 * t2086 + t1953 * t2082;
t2009 = (t2249 + (0.2e1 * qJD(3) + t2295) * t2294) * t2073;
t2152 = t2024 * t2085 - t2275;
t1935 = -t2009 * t2073 + t2077 * t2152;
t2160 = t1935 * t2086 + t1992 * t2082;
t2037 = t2228 - t2241;
t2150 = t2037 * t2085 + t2273;
t1947 = -t2011 * t2073 + t2077 * t2150;
t1997 = -t2037 * t2081 + t2272;
t2159 = t1947 * t2086 + t1997 * t2082;
t2038 = -t2228 + t2240;
t2151 = t2038 * t2081 + t2274;
t1948 = -t2012 * t2073 + t2077 * t2151;
t1998 = t2038 * t2085 - t2275;
t2158 = t1948 * t2086 + t1998 * t2082;
t2149 = t2039 * t2081 + t2272;
t1949 = t2013 * t2073 + t2077 * t2149;
t2157 = t1949 * t2086 + t1999 * t2082;
t2096 = t2073 * t2269 + t2077 * t2142;
t1976 = (t2077 * t2036 - t2081 * t2096) * t2085;
t2002 = -t2081 * t2036 - t2070 * t2142;
t2156 = t1976 * t2086 + t2002 * t2082;
t1979 = (t2077 * t2035 + t2085 * t2096) * t2081;
t2003 = t2085 * t2035 - t2069 * t2142;
t2155 = t1979 * t2086 + t2003 * t2082;
t1942 = t2086 * t2000 - t2082 * t2001;
t2145 = qJDD(2) * t2082 + t2086 * t2087;
t2042 = t2145 * t2078;
t2052 = qJDD(2) * t2086 - t2082 * t2087;
t2147 = t2042 * t2076 + t2052 * t2072;
t2146 = t2042 * t2072 - t2052 * t2076;
t2144 = pkin(4) * t1673 + t2239;
t2143 = pkin(4) * t1671 + t2238;
t2139 = pkin(4) * t1652 + t2227;
t1422 = qJ(5) * t1486 + (-pkin(11) * t2071 + t2248) * t1512;
t1429 = -qJ(5) * t1485 + (-pkin(11) * t2075 + t2300) * t1512;
t1394 = -pkin(3) * t1512 + pkin(10) * t1440 + t1422 * t2084 + t1429 * t2080;
t1408 = t2077 * t1439 + t2073 * t2218;
t1395 = -pkin(10) * t1439 - t1422 * t2080 + t1429 * t2084;
t1418 = -pkin(3) * t1439 - t2226;
t2117 = pkin(9) * t1427 + t1395 * t2081 + t1418 * t2085;
t1374 = -pkin(2) * t1408 - t1394 * t2073 + t2077 * t2117;
t1382 = t1395 * t2085 - t1418 * t2081 + (-t1408 * t2073 - t1409 * t2077) * pkin(9);
t1396 = -t1409 * t2082 + t1427 * t2086;
t2133 = pkin(8) * t1396 + t1374 * t2086 + t1382 * t2082;
t1494 = -pkin(11) * t1693 - t1512;
t1462 = qJ(5) * t1653 + t1494 * t2071 + t1693 * t2248;
t1469 = -qJ(5) * t1652 + t1494 * t2075 + t1693 * t2300;
t1423 = -pkin(3) * t1693 + pkin(10) * t1574 + t1462 * t2084 + t1469 * t2080;
t1499 = t2077 * t1573 + t2073 * t2207;
t1426 = -pkin(10) * t1573 - t1462 * t2080 + t1469 * t2084;
t1457 = -pkin(3) * t1573 - t2139;
t2116 = pkin(9) * t1540 + t1426 * t2081 + t1457 * t2085;
t1393 = -pkin(2) * t1499 - t1423 * t2073 + t2077 * t2116;
t1405 = t1426 * t2085 - t1457 * t2081 + (-t1499 * t2073 - t1500 * t2077) * pkin(9);
t1459 = -t1500 * t2082 + t1540 * t2086;
t2132 = pkin(8) * t1459 + t1393 * t2086 + t1405 * t2082;
t1546 = -pkin(4) * t1796 + qJ(5) * t1559;
t1447 = -pkin(3) * t1796 + pkin(10) * t1506 - qJ(5) * t2292 + t1546 * t2084;
t1452 = t2077 * t1505 + t2073 * t2215;
t1454 = -pkin(10) * t1505 - qJ(5) * t2291 - t1546 * t2080;
t1468 = -pkin(3) * t1505 - t2302;
t2113 = pkin(9) * t1497 + t1454 * t2081 + t1468 * t2085;
t1398 = -pkin(2) * t1452 - t1447 * t2073 + t2077 * t2113;
t1404 = t1454 * t2085 - t1468 * t2081 + (-t1452 * t2073 - t1453 * t2077) * pkin(9);
t1428 = -t1453 * t2082 + t1497 * t2086;
t2131 = pkin(8) * t1428 + t1398 * t2086 + t1404 * t2082;
t1545 = -pkin(5) * t1737 + t1564;
t1586 = -pkin(11) * t1737 + t1618;
t1480 = -pkin(4) * t1737 + qJ(5) * t1672 + t1545 * t2075 + t1586 * t2071;
t1488 = -qJ(5) * t1671 - t1545 * t2071 + t1586 * t2075;
t1430 = -pkin(3) * t1737 + pkin(10) * t1594 + t1480 * t2084 + t1488 * t2080;
t1516 = t2077 * t1593 + t2073 * t2202;
t1432 = -pkin(10) * t1593 - t1480 * t2080 + t1488 * t2084;
t1496 = -pkin(3) * t1593 - t2143;
t2115 = pkin(9) * t1556 + t1432 * t2081 + t1496 * t2085;
t1400 = -pkin(2) * t1516 - t1430 * t2073 + t2077 * t2115;
t1410 = t1432 * t2085 - t1496 * t2081 + (-t1516 * t2073 - t1517 * t2077) * pkin(9);
t1476 = -t1517 * t2082 + t1556 * t2086;
t2130 = pkin(8) * t1476 + t1400 * t2086 + t1410 * t2082;
t1547 = -pkin(5) * t1743 + t1565;
t1588 = -pkin(11) * t1743 + t1619;
t1483 = -pkin(4) * t1743 + qJ(5) * t1674 + t1547 * t2075 + t1588 * t2071;
t1489 = -qJ(5) * t1673 - t1547 * t2071 + t1588 * t2075;
t1431 = -pkin(3) * t1743 + pkin(10) * t1596 + t1483 * t2084 + t1489 * t2080;
t1520 = t2077 * t1595 + t2073 * t2201;
t1433 = -pkin(10) * t1595 - t1483 * t2080 + t1489 * t2084;
t1498 = -pkin(3) * t1595 - t2144;
t2114 = pkin(9) * t1557 + t1433 * t2081 + t1498 * t2085;
t1403 = -pkin(2) * t1520 - t1431 * t2073 + t2077 * t2114;
t1413 = t1433 * t2085 - t1498 * t2081 + (-t1520 * t2073 - t1521 * t2077) * pkin(9);
t1478 = -t1521 * t2082 + t1557 * t2086;
t2129 = pkin(8) * t1478 + t1403 * t2086 + t1413 * t2082;
t1539 = -pkin(4) * t1879 + qJ(5) * t1769 + t1559;
t1543 = -qJ(5) * t1767 - t1558;
t1475 = -pkin(3) * t1879 + pkin(10) * t1680 + t1539 * t2084 + t1543 * t2080;
t1582 = t2077 * t1678 + t2073 * t2188;
t1477 = -pkin(10) * t1678 - t1539 * t2080 + t1543 * t2084;
t1628 = -pkin(3) * t1678 - t2301;
t2112 = pkin(9) * t1651 + t1477 * t2081 + t1628 * t2085;
t1425 = -pkin(2) * t1582 - t1475 * t2073 + t2077 * t2112;
t1438 = t1477 * t2085 - t1628 * t2081 + (-t1582 * t2073 - t1583 * t2077) * pkin(9);
t1534 = -t1583 * t2082 + t1651 * t2086;
t2128 = pkin(8) * t1534 + t1425 * t2086 + t1438 * t2082;
t1677 = -pkin(4) * t1862 + qJ(5) * t1827 - t2289;
t1713 = -qJ(5) * t1826 + t2290;
t1560 = -pkin(3) * t1862 + pkin(10) * t1719 + t1677 * t2084 + t1713 * t2080;
t1623 = t2077 * t1718 + t2073 * t2184;
t1572 = -pkin(10) * t1718 - t1677 * t2080 + t1713 * t2084;
t2102 = pkin(4) * t1826 - t1638;
t1579 = -pkin(3) * t1718 - t2102;
t2111 = pkin(9) * t1692 + t1572 * t2081 + t1579 * t2085;
t1456 = -pkin(2) * t1623 - t1560 * t2073 + t2077 * t2111;
t1474 = t1572 * t2085 - t1579 * t2081 + (-t1623 * t2073 - t1624 * t2077) * pkin(9);
t1568 = -t1624 * t2082 + t1692 * t2086;
t2127 = pkin(8) * t1568 + t1456 * t2086 + t1474 * t2082;
t1688 = -pkin(4) * t1865 + qJ(5) * t1846 + t2290;
t1715 = -qJ(5) * t1845 + t2289;
t1571 = -pkin(3) * t1865 + pkin(10) * t1748 + t1688 * t2084 + t1715 * t2080;
t1632 = t2077 * t1747 + t2073 * t2181;
t1587 = -pkin(10) * t1747 - t1688 * t2080 + t1715 * t2084;
t1590 = -pkin(3) * t1747 + t1982 - t2225;
t2110 = pkin(9) * t1707 + t1587 * t2081 + t1590 * t2085;
t1461 = -pkin(2) * t1632 - t1571 * t2073 + t2077 * t2110;
t1479 = t1587 * t2085 - t1590 * t2081 + (-t1632 * t2073 - t1633 * t2077) * pkin(9);
t1589 = -t1633 * t2082 + t1707 * t2086;
t2126 = pkin(8) * t1589 + t1461 * t2086 + t1479 * t2082;
t1599 = t2077 * t1698 + t2073 * t2186;
t1664 = -pkin(3) * t1869 + pkin(10) * t1699;
t2101 = pkin(9) * t1663 + t1698 * t2224;
t1493 = -pkin(2) * t1599 - t1664 * t2073 + t2077 * t2101;
t1495 = (-pkin(10) * t2085 + t2304) * t1698 + (-t1599 * t2073 - t1600 * t2077) * pkin(9);
t1542 = -t1600 * t2082 + t1663 * t2086;
t2125 = pkin(8) * t1542 + t1493 * t2086 + t1495 * t2082;
t1650 = pkin(3) * t1965 + pkin(10) * t1861 + t1699;
t1739 = t1859 * t2077 + t2073 * t2170;
t1662 = -pkin(10) * t1859 - t1698;
t2105 = pkin(9) * t1817 + t1662 * t2081 - t1859 * t2303;
t1531 = -pkin(2) * t1739 - t1650 * t2073 + t2077 * t2105;
t1561 = t1859 * t2304 + t1662 * t2085 + (-t1739 * t2073 - t1740 * t2077) * pkin(9);
t1687 = -t1740 * t2082 + t1817 * t2086;
t2124 = pkin(8) * t1687 + t1531 * t2086 + t1561 * t2082;
t1751 = pkin(3) * t1937 + pkin(10) * t1894 - t2285;
t1775 = t1893 * t2077 + t2073 * t2167;
t1733 = t2080 * t2092 - t2084 * t2093 + (t2013 * t2084 - t2080 * t2228 - t1893) * pkin(3);
t1801 = -pkin(10) * t1893 + t2286;
t2109 = pkin(9) * t1836 + t1733 * t2085 + t1801 * t2081;
t1578 = -pkin(2) * t1775 - t1751 * t2073 + t2077 * t2109;
t1602 = -t1733 * t2081 + t1801 * t2085 + (-t1775 * t2073 - t1776 * t2077) * pkin(9);
t1708 = -t1776 * t2082 + t1836 * t2086;
t2123 = pkin(8) * t1708 + t1578 * t2086 + t1602 * t2082;
t1760 = -pkin(3) * t1939 + pkin(10) * t1909 + t2286;
t1794 = t1908 * t2077 + t2073 * t2165;
t1741 = -pkin(3) * t1908 + t1793;
t1802 = -pkin(10) * t1908 + t2285;
t2108 = pkin(9) * t1842 + t1741 * t2085 + t1802 * t2081;
t1581 = -pkin(2) * t1794 - t1760 * t2073 + t2077 * t2108;
t1611 = -t1741 * t2081 + t1802 * t2085 + (-t1794 * t2073 - t1795 * t2077) * pkin(9);
t1714 = -t1795 * t2082 + t1842 * t2086;
t2122 = pkin(8) * t1714 + t1581 * t2086 + t1611 * t2082;
t1773 = -t1950 * t2077 + t2073 * t2168;
t1682 = (-t1773 * t2073 - t1774 * t2077) * pkin(9);
t1704 = -t1774 * t2082 + t1809 * t2086;
t1705 = pkin(9) * t1809 * t2077 - pkin(2) * t1773;
t2121 = pkin(8) * t1704 + t1682 * t2082 + t1705 * t2086;
t1923 = -t2045 * t2077 + t2073 * t2153;
t1728 = (-t1923 * t2073 - t1925 * t2077) * pkin(9) - t2168;
t2107 = pkin(9) * t1952 + t1809;
t1735 = -pkin(2) * t1923 + t2077 * t2107;
t1870 = -t1925 * t2082 + t1952 * t2086;
t2120 = pkin(8) * t1870 + t1728 * t2082 + t1735 * t2086;
t1934 = t2009 * t2077 + t2073 * t2152;
t1772 = -pkin(2) * t1934 + t1887 * t2073 + t2077 * t2223;
t1810 = -t2258 + (-t1934 * t2073 - t1935 * t2077) * pkin(9);
t1881 = -t1935 * t2082 + t1992 * t2086;
t2119 = pkin(8) * t1881 + t1772 * t2086 + t1810 * t2082;
t1946 = -t2013 * t2077 + t2073 * t2149;
t1778 = -pkin(2) * t1946 + t1886 * t2073 + t2077 * t2222;
t1816 = -t2260 + (-t1946 * t2073 - t1949 * t2077) * pkin(9);
t1890 = -t1949 * t2082 + t1999 * t2086;
t2118 = pkin(8) * t1890 + t1778 * t2086 + t1816 * t2082;
t2062 = t2078 * qJDD(2);
t2043 = t2052 * t2078;
t2041 = t2052 * t2074;
t2040 = t2145 * t2074;
t2018 = t2031 * t2266;
t2006 = -t2043 * t2072 - t2076 * t2145;
t2005 = t2043 * t2076 - t2072 * t2145;
t1994 = t2016 * t2086 + t2082 * t2268;
t1978 = (t2073 * t2035 + t2085 * t2313) * t2081;
t1977 = (t2073 * t2036 - t2081 * t2313) * t2085;
t1964 = -t2136 + (t2040 * t2074 + t2042 * t2078) * pkin(8);
t1963 = -t2137 + (-t2041 * t2074 - t2043 * t2078) * pkin(8);
t1959 = t2078 * t2277 + (-t2074 * t2077 - t2078 * t2265) * t2061;
t1958 = t2074 * t2277 + (-t2074 * t2265 + t2077 * t2078) * t2061;
t1945 = t2012 * t2077 + t2073 * t2151;
t1944 = t2011 * t2077 + t2073 * t2150;
t1933 = t1943 * t2078;
t1924 = t2044 * t2077 + t2073 * t2154;
t1922 = -t1979 * t2082 + t2003 * t2086;
t1921 = -t1976 * t2082 + t2002 * t2086;
t1915 = -pkin(1) * t2041 + t2074 * t2000 + t2078 * t2136 - t2145 * t2299;
t1914 = pkin(1) * t2040 + t2074 * t2001 - t2052 * t2299 - t2078 * t2137;
t1913 = pkin(1) * t2043 - t2078 * t2000 + (-pkin(8) * t2145 + t2136) * t2074;
t1912 = -pkin(1) * t2042 - t2078 * t2001 + (-pkin(8) * t2052 - t2137) * t2074;
t1906 = t2074 * t2048 + (t2236 - t1942) * t2078;
t1905 = -t1942 * t2074 - t2078 * t2221;
t1889 = -t1948 * t2082 + t1998 * t2086;
t1888 = -t1947 * t2082 + t1997 * t2086;
t1878 = -t1978 * t2074 + t2078 * t2155;
t1877 = -t1977 * t2074 + t2078 * t2156;
t1876 = t1978 * t2078 + t2074 * t2155;
t1875 = t1977 * t2078 + t2074 * t2156;
t1872 = t1954 * t2077 + t1955 * t2267 + t2018;
t1871 = -t1926 * t2082 + t1953 * t2086;
t1841 = pkin(1) * t1906 + pkin(8) * t1932;
t1840 = -pkin(1) * t1905 + t1943 * t2299;
t1835 = -t1946 * t2074 + t2078 * t2157;
t1834 = -t1945 * t2074 + t2078 * t2158;
t1833 = -t1944 * t2074 + t2078 * t2159;
t1832 = t1946 * t2078 + t2074 * t2157;
t1831 = t1945 * t2078 + t2074 * t2158;
t1830 = t1944 * t2078 + t2074 * t2159;
t1828 = (-t1905 * t2074 - t1906 * t2078) * pkin(8);
t1825 = -t1934 * t2074 + t2078 * t2160;
t1824 = t1934 * t2078 + t2074 * t2160;
t1819 = t2077 * t1930 + (-t2098 + t2261) * t2073;
t1818 = t2077 * t1928 + (t2098 + t2262) * t2073;
t1808 = -t1873 * t2082 + t1927 * t2086;
t1807 = -t1924 * t2074 + t2078 * t2161;
t1806 = -t1923 * t2074 + t2078 * t2162;
t1805 = t1924 * t2078 + t2074 * t2161;
t1804 = t1923 * t2078 + t2074 * t2162;
t1798 = t1917 * t2077 + t2073 * t2163;
t1797 = t1916 * t2077 + t2073 * t2164;
t1777 = pkin(2) * t1949 - t1886 * t2077 + t2073 * t2222;
t1771 = pkin(2) * t1935 - t1887 * t2077 + t2073 * t2223;
t1750 = -t1821 * t2082 + t1883 * t2086;
t1749 = -t1820 * t2082 + t1882 * t2086;
t1745 = t1858 * t2077 + t2073 * t2171;
t1734 = pkin(2) * t1925 + t2073 * t2107;
t1730 = -t1872 * t2074 + t2078 * t2169;
t1729 = t1872 * t2078 + t2074 * t2169;
t1717 = -t1800 * t2082 + t1848 * t2086;
t1716 = -t1799 * t2082 + t1847 * t2086;
t1711 = t1811 * t2077 + t1812 * t2267 + t2018;
t1706 = pkin(2) * t1774 + t1809 * t2298;
t1703 = -t1819 * t2074 + t2078 * t2172;
t1702 = -t2074 * t1818 + t2078 * t2173;
t1701 = t1819 * t2078 + t2074 * t2172;
t1700 = t1818 * t2078 + t2074 * t2173;
t1697 = -t1746 * t2082 + t1829 * t2086;
t1668 = -t2074 * t1798 + t2078 * t2174;
t1667 = -t2074 * t1797 + t2078 * t2175;
t1666 = t2078 * t1798 + t2074 * t2174;
t1665 = t2078 * t1797 + t2074 * t2175;
t1660 = -t1712 * t2082 + t1803 * t2086;
t1659 = -t2074 * t1794 + t2078 * t2176;
t1658 = t2078 * t1794 + t2074 * t2176;
t1655 = t1762 * t2077 + t2073 * t2140;
t1654 = t1761 * t2077 + t2073 * t2141;
t1649 = -t2074 * t1775 + t2078 * t2177;
t1648 = t2078 * t1775 + t2074 * t2177;
t1645 = t2077 * t1753 + t2073 * t2179;
t1644 = t2077 * t1752 + t2073 * t2180;
t1636 = -t2074 * t1773 + t2078 * t2178;
t1635 = t2078 * t1773 + t2074 * t2178;
t1631 = -t1778 * t2082 + t1816 * t2086 + (-t1832 * t2074 - t1835 * t2078) * pkin(8);
t1630 = -t2074 * t1745 + t2078 * t2182;
t1629 = t2078 * t1745 + t2074 * t2182;
t1627 = -t1772 * t2082 + t1810 * t2086 + (-t1824 * t2074 - t1825 * t2078) * pkin(8);
t1626 = -t2074 * t1739 + t2078 * t2183;
t1625 = t2078 * t1739 + t2074 * t2183;
t1615 = -pkin(1) * t1832 - t1777 * t2074 + t2078 * t2118;
t1614 = pkin(1) * t1835 + t1777 * t2078 + t2074 * t2118;
t1613 = -t1657 * t2082 + t1721 * t2086;
t1612 = -t1656 * t2082 + t1720 * t2086;
t1610 = -pkin(1) * t1824 - t1771 * t2074 + t2078 * t2119;
t1609 = pkin(1) * t1825 + t1771 * t2078 + t2074 * t2119;
t1608 = -t2074 * t1711 + t2078 * t2185;
t1607 = t2078 * t1711 + t2074 * t2185;
t1601 = t1728 * t2086 - t1735 * t2082 + (-t1804 * t2074 - t1806 * t2078) * pkin(8);
t1598 = -t1647 * t2082 + t1710 * t2086;
t1597 = -t1646 * t2082 + t1709 * t2086;
t1591 = t2077 * t1679 + t2073 * t2187;
t1580 = pkin(2) * t1795 + t1760 * t2077 + t2073 * t2108;
t1577 = pkin(2) * t1776 + t1751 * t2077 + t2073 * t2109;
t1575 = t2077 * t1675 + t2073 * t2189;
t1567 = -pkin(1) * t1804 - t1734 * t2074 + t2078 * t2120;
t1566 = pkin(1) * t1806 + t1734 * t2078 + t2074 * t2120;
t1555 = -t2074 * t1655 + t2078 * t2190;
t1554 = -t2074 * t1654 + t2078 * t2191;
t1553 = t2078 * t1655 + t2074 * t2190;
t1552 = t2078 * t1654 + t2074 * t2191;
t1549 = t2077 * t1641 + t2073 * t2194;
t1548 = t2077 * t1640 + t2073 * t2195;
t1541 = -t1592 * t2082 + t1661 * t2086;
t1538 = -t2074 * t1645 + t2078 * t2192;
t1537 = -t2074 * t1644 + t2078 * t2193;
t1536 = t2078 * t1645 + t2074 * t2192;
t1535 = t2078 * t1644 + t2074 * t2193;
t1533 = -t2074 * t1632 + t2078 * t2196;
t1532 = t2078 * t1632 + t2074 * t2196;
t1530 = pkin(2) * t1740 + t1650 * t2077 + t2073 * t2105;
t1529 = -t1576 * t2082 + t1634 * t2086;
t1528 = -t2074 * t1623 + t2078 * t2197;
t1527 = t2078 * t1623 + t2074 * t2197;
t1524 = t2077 * t1604 + t2073 * t2198;
t1523 = t2077 * t1603 + t2073 * t2199;
t1522 = t1682 * t2086 - t1705 * t2082 + (-t1635 * t2074 - t1636 * t2078) * pkin(8);
t1519 = -t1551 * t2082 + t1617 * t2086;
t1518 = -t1550 * t2082 + t1616 * t2086;
t1515 = -pkin(1) * t1635 - t1706 * t2074 + t2078 * t2121;
t1514 = pkin(1) * t1636 + t1706 * t2078 + t2074 * t2121;
t1510 = -t2074 * t1599 + t2078 * t2200;
t1509 = t2078 * t1599 + t2074 * t2200;
t1507 = t2077 * t1584 + t2073 * t2204;
t1504 = -t2074 * t1591 + t2078 * t2203;
t1503 = t2078 * t1591 + t2074 * t2203;
t1502 = -t2074 * t1582 + t2078 * t2205;
t1501 = t2078 * t1582 + t2074 * t2205;
t1492 = pkin(2) * t1600 + t1664 * t2077 + t2073 * t2101;
t1491 = -t2074 * t1575 + t2078 * t2206;
t1490 = t2078 * t1575 + t2074 * t2206;
t1487 = -t1581 * t2082 + t1611 * t2086 + (-t1658 * t2074 - t1659 * t2078) * pkin(8);
t1484 = -t1578 * t2082 + t1602 * t2086 + (-t1648 * t2074 - t1649 * t2078) * pkin(8);
t1482 = -t1526 * t2082 + t1570 * t2086;
t1481 = -t1525 * t2082 + t1569 * t2086;
t1473 = -t2074 * t1549 + t2078 * t2208;
t1472 = -t2074 * t1548 + t2078 * t2209;
t1471 = t2078 * t1549 + t2074 * t2208;
t1470 = t2078 * t1548 + t2074 * t2209;
t1467 = -pkin(1) * t1658 - t1580 * t2074 + t2078 * t2122;
t1466 = pkin(1) * t1659 + t1580 * t2078 + t2074 * t2122;
t1465 = -t1508 * t2082 + t1544 * t2086;
t1464 = -pkin(1) * t1648 - t1577 * t2074 + t2078 * t2123;
t1463 = pkin(1) * t1649 + t1577 * t2078 + t2074 * t2123;
t1460 = pkin(2) * t1633 + t1571 * t2077 + t2073 * t2110;
t1458 = -t1531 * t2082 + t1561 * t2086 + (-t1625 * t2074 - t1626 * t2078) * pkin(8);
t1455 = pkin(2) * t1624 + t1560 * t2077 + t2073 * t2111;
t1451 = -t2074 * t1524 + t2078 * t2210;
t1450 = -t2074 * t1523 + t2078 * t2211;
t1449 = t2078 * t1524 + t2074 * t2210;
t1448 = t2078 * t1523 + t2074 * t2211;
t1446 = -pkin(1) * t1625 - t1530 * t2074 + t2078 * t2124;
t1445 = pkin(1) * t1626 + t1530 * t2078 + t2074 * t2124;
t1444 = -t2074 * t1520 + t2078 * t2212;
t1443 = t2078 * t1520 + t2074 * t2212;
t1442 = -t2074 * t1516 + t2078 * t2213;
t1441 = t2078 * t1516 + t2074 * t2213;
t1437 = -t2074 * t1507 + t2078 * t2214;
t1436 = t2078 * t1507 + t2074 * t2214;
t1435 = -t2074 * t1499 + t2078 * t2216;
t1434 = t2078 * t1499 + t2074 * t2216;
t1424 = pkin(2) * t1583 + t1475 * t2077 + t2073 * t2112;
t1421 = -t1493 * t2082 + t1495 * t2086 + (-t1509 * t2074 - t1510 * t2078) * pkin(8);
t1420 = -t1461 * t2082 + t1479 * t2086 + (-t1532 * t2074 - t1533 * t2078) * pkin(8);
t1419 = -t1456 * t2082 + t1474 * t2086 + (-t1527 * t2074 - t1528 * t2078) * pkin(8);
t1417 = -pkin(1) * t1509 - t1492 * t2074 + t2078 * t2125;
t1416 = pkin(1) * t1510 + t1492 * t2078 + t2074 * t2125;
t1415 = -t2074 * t1452 + t2078 * t2217;
t1414 = t2078 * t1452 + t2074 * t2217;
t1412 = -pkin(1) * t1532 - t1460 * t2074 + t2078 * t2126;
t1411 = pkin(1) * t1533 + t1460 * t2078 + t2074 * t2126;
t1407 = -pkin(1) * t1527 - t1455 * t2074 + t2078 * t2127;
t1406 = pkin(1) * t1528 + t1455 * t2078 + t2074 * t2127;
t1402 = pkin(2) * t1521 + t1431 * t2077 + t2073 * t2114;
t1401 = -t1425 * t2082 + t1438 * t2086 + (-t1501 * t2074 - t1502 * t2078) * pkin(8);
t1399 = pkin(2) * t1517 + t1430 * t2077 + t2073 * t2115;
t1397 = pkin(2) * t1453 + t1447 * t2077 + t2073 * t2113;
t1392 = pkin(2) * t1500 + t1423 * t2077 + t2073 * t2116;
t1391 = -pkin(1) * t1501 - t1424 * t2074 + t2078 * t2128;
t1390 = pkin(1) * t1502 + t1424 * t2078 + t2074 * t2128;
t1389 = -t2074 * t1408 + t2078 * t2219;
t1388 = t2078 * t1408 + t2074 * t2219;
t1387 = -t1403 * t2082 + t1413 * t2086 + (-t1443 * t2074 - t1444 * t2078) * pkin(8);
t1386 = -t1400 * t2082 + t1410 * t2086 + (-t1441 * t2074 - t1442 * t2078) * pkin(8);
t1385 = -t1393 * t2082 + t1405 * t2086 + (-t1434 * t2074 - t1435 * t2078) * pkin(8);
t1384 = -pkin(1) * t1443 - t1402 * t2074 + t2078 * t2129;
t1383 = pkin(1) * t1444 + t1402 * t2078 + t2074 * t2129;
t1381 = -pkin(1) * t1441 - t1399 * t2074 + t2078 * t2130;
t1380 = pkin(1) * t1442 + t1399 * t2078 + t2074 * t2130;
t1379 = -t1398 * t2082 + t1404 * t2086 + (-t1414 * t2074 - t1415 * t2078) * pkin(8);
t1378 = -pkin(1) * t1434 - t1392 * t2074 + t2078 * t2132;
t1377 = pkin(1) * t1435 + t1392 * t2078 + t2074 * t2132;
t1376 = -pkin(1) * t1414 - t1397 * t2074 + t2078 * t2131;
t1375 = pkin(1) * t1415 + t1397 * t2078 + t2074 * t2131;
t1373 = pkin(2) * t1409 + t1394 * t2077 + t2073 * t2117;
t1372 = -t1374 * t2082 + t1382 * t2086 + (-t1388 * t2074 - t1389 * t2078) * pkin(8);
t1371 = -pkin(1) * t1388 - t1373 * t2074 + t2078 * t2133;
t1370 = pkin(1) * t1389 + t1373 * t2078 + t2074 * t2133;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t2312, -t2311, -t2306, -qJ(1) * t2306, 0, 0, -t2146, 0, t2006, t2072 * t2250, -qJ(1) * t2005 - t1915 * t2072 + t1963 * t2076, qJ(1) * t2147 - t2072 * t1914 + t2076 * t1964, -t1933 * t2072 + t1942 * t2076, t2076 * t1828 - t2072 * t1840 - qJ(1) * (t1906 * t2076 + t1943 * t2072), -t1878 * t2072 + t1922 * t2076, -t1807 * t2072 + t1871 * t2076, -t1833 * t2072 + t1888 * t2076, -t1877 * t2072 + t1921 * t2076, -t1834 * t2072 + t1889 * t2076, -t1959 * t2072 + t1994 * t2076, t2076 * t1631 - t2072 * t1615 - qJ(1) * (t1835 * t2076 + t1890 * t2072), t2076 * t1627 - t2072 * t1610 - qJ(1) * (t1825 * t2076 + t1881 * t2072), t2076 * t1601 - t2072 * t1567 - qJ(1) * (t1806 * t2076 + t1870 * t2072), t2076 * t1522 - t2072 * t1515 - qJ(1) * (t1636 * t2076 + t1704 * t2072), -t1703 * t2072 + t1750 * t2076, -t1630 * t2072 + t1697 * t2076, -t1667 * t2072 + t1716 * t2076, -t1702 * t2072 + t1749 * t2076, -t1668 * t2072 + t1717 * t2076, -t1730 * t2072 + t1808 * t2076, t2076 * t1484 - t2072 * t1464 - qJ(1) * (t1649 * t2076 + t1708 * t2072), t2076 * t1487 - t2072 * t1467 - qJ(1) * (t1659 * t2076 + t1714 * t2072), t2076 * t1458 - t2072 * t1446 - qJ(1) * (t1626 * t2076 + t1687 * t2072), t2076 * t1421 - t2072 * t1417 - qJ(1) * (t1510 * t2076 + t1542 * t2072), -t1555 * t2072 + t1613 * t2076, -t1504 * t2072 + t1541 * t2076, -t1537 * t2072 + t1597 * t2076, -t1554 * t2072 + t1612 * t2076, -t1538 * t2072 + t1598 * t2076, -t1608 * t2072 + t1660 * t2076, t2076 * t1419 - t2072 * t1407 - qJ(1) * (t1528 * t2076 + t1568 * t2072), t2076 * t1420 - t2072 * t1412 - qJ(1) * (t1533 * t2076 + t1589 * t2072), t2076 * t1401 - t2072 * t1391 - qJ(1) * (t1502 * t2076 + t1534 * t2072), t2076 * t1379 - t2072 * t1376 - qJ(1) * (t1415 * t2076 + t1428 * t2072), -t1473 * t2072 + t1519 * t2076, -t1437 * t2072 + t1465 * t2076, -t1450 * t2072 + t1481 * t2076, -t1472 * t2072 + t1518 * t2076, -t1451 * t2072 + t1482 * t2076, -t1491 * t2072 + t1529 * t2076, t2076 * t1386 - t2072 * t1381 - qJ(1) * (t1442 * t2076 + t1476 * t2072), t2076 * t1387 - t2072 * t1384 - qJ(1) * (t1444 * t2076 + t1478 * t2072), t2076 * t1385 - t2072 * t1378 - qJ(1) * (t1435 * t2076 + t1459 * t2072), t2076 * t1372 - t2072 * t1371 - qJ(1) * (t1389 * t2076 + t1396 * t2072); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t2311, -t2312, t2307, qJ(1) * t2307, 0, 0, t2147, 0, t2005, -t2076 * t2250, qJ(1) * t2006 + t1915 * t2076 + t1963 * t2072, qJ(1) * t2146 + t2076 * t1914 + t2072 * t1964, t1933 * t2076 + t1942 * t2072, t2072 * t1828 + t2076 * t1840 + qJ(1) * (-t1906 * t2072 + t1943 * t2076), t1878 * t2076 + t1922 * t2072, t1807 * t2076 + t1871 * t2072, t1833 * t2076 + t1888 * t2072, t1877 * t2076 + t1921 * t2072, t1834 * t2076 + t1889 * t2072, t1959 * t2076 + t1994 * t2072, t2072 * t1631 + t2076 * t1615 + qJ(1) * (-t1835 * t2072 + t1890 * t2076), t2072 * t1627 + t2076 * t1610 + qJ(1) * (-t1825 * t2072 + t1881 * t2076), t2072 * t1601 + t2076 * t1567 + qJ(1) * (-t1806 * t2072 + t1870 * t2076), t2072 * t1522 + t2076 * t1515 + qJ(1) * (-t1636 * t2072 + t1704 * t2076), t1703 * t2076 + t1750 * t2072, t1630 * t2076 + t1697 * t2072, t1667 * t2076 + t1716 * t2072, t1702 * t2076 + t1749 * t2072, t1668 * t2076 + t1717 * t2072, t1730 * t2076 + t1808 * t2072, t2072 * t1484 + t2076 * t1464 + qJ(1) * (-t1649 * t2072 + t1708 * t2076), t2072 * t1487 + t2076 * t1467 + qJ(1) * (-t1659 * t2072 + t1714 * t2076), t2072 * t1458 + t2076 * t1446 + qJ(1) * (-t1626 * t2072 + t1687 * t2076), t2072 * t1421 + t2076 * t1417 + qJ(1) * (-t1510 * t2072 + t1542 * t2076), t1555 * t2076 + t1613 * t2072, t1504 * t2076 + t1541 * t2072, t1537 * t2076 + t1597 * t2072, t1554 * t2076 + t1612 * t2072, t1538 * t2076 + t1598 * t2072, t1608 * t2076 + t1660 * t2072, t2072 * t1419 + t2076 * t1407 + qJ(1) * (-t1528 * t2072 + t1568 * t2076), t2072 * t1420 + t2076 * t1412 + qJ(1) * (-t1533 * t2072 + t1589 * t2076), t2072 * t1401 + t2076 * t1391 + qJ(1) * (-t1502 * t2072 + t1534 * t2076), t2072 * t1379 + t2076 * t1376 + qJ(1) * (-t1415 * t2072 + t1428 * t2076), t1473 * t2076 + t1519 * t2072, t1437 * t2076 + t1465 * t2072, t1450 * t2076 + t1481 * t2072, t1472 * t2076 + t1518 * t2072, t1451 * t2076 + t1482 * t2072, t1491 * t2076 + t1529 * t2072, t2072 * t1386 + t2076 * t1381 + qJ(1) * (-t1442 * t2072 + t1476 * t2076), t2072 * t1387 + t2076 * t1384 + qJ(1) * (-t1444 * t2072 + t1478 * t2076), t2072 * t1385 + t2076 * t1378 + qJ(1) * (-t1435 * t2072 + t1459 * t2076), t2072 * t1372 + t2076 * t1371 + qJ(1) * (-t1389 * t2072 + t1396 * t2076); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t2237, t2253, 0, 0, 0, 0, t2040, 0, t2041, t2062, t1913, t1912, t1932, t1841, t1876, t1805, t1830, t1875, t1831, t1958, t1614, t1609, t1566, t1514, t1701, t1629, t1665, t1700, t1666, t1729, t1463, t1466, t1445, t1416, t1553, t1503, t1535, t1552, t1536, t1607, t1406, t1411, t1390, t1375, t1471, t1436, t1448, t1470, t1449, t1490, t1380, t1383, t1377, t1370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2297, -t2237, 0, 0, 0, t2052, 0, -t2145, 0, t1963, t1964, t1942, t1828, t1922, t1871, t1888, t1921, t1889, t1994, t1631, t1627, t1601, t1522, t1750, t1697, t1716, t1749, t1717, t1808, t1484, t1487, t1458, t1421, t1613, t1541, t1597, t1612, t1598, t1660, t1419, t1420, t1401, t1379, t1519, t1465, t1481, t1518, t1482, t1529, t1386, t1387, t1385, t1372; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2297, 0, -t2253, 0, 0, 0, t2042, 0, t2043, -t2250, t1915, t1914, t1933, t1840, t1878, t1807, t1833, t1877, t1834, t1959, t1615, t1610, t1567, t1515, t1703, t1630, t1667, t1702, t1668, t1730, t1464, t1467, t1446, t1417, t1555, t1504, t1537, t1554, t1538, t1608, t1407, t1412, t1391, t1376, t1473, t1437, t1450, t1472, t1451, t1491, t1381, t1384, t1378, t1371; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2237, t2253, 0, 0, 0, 0, t2040, 0, t2041, t2062, t1913, t1912, t1932, t1841, t1876, t1805, t1830, t1875, t1831, t1958, t1614, t1609, t1566, t1514, t1701, t1629, t1665, t1700, t1666, t1729, t1463, t1466, t1445, t1416, t1553, t1503, t1535, t1552, t1536, t1607, t1406, t1411, t1390, t1375, t1471, t1436, t1448, t1470, t1449, t1490, t1380, t1383, t1377, t1370; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t2087, 0, 0, -t2221, t2000, 0, t2003, t1953, t1997, t2002, t1998, t2016, t1816, t1810, t1728, t1682, t1883, t1829, t1847, t1882, t1848, t1927, t1602, t1611, t1561, t1495, t1721, t1661, t1709, t1720, t1710, t1803, t1474, t1479, t1438, t1404, t1617, t1544, t1569, t1616, t1570, t1634, t1410, t1413, t1405, t1382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2087, 0, qJDD(2), 0, t2221, 0, t2001, 0, t1979, t1926, t1947, t1976, t1948, -t2268, t1778, t1772, t1735, t1705, t1821, t1746, t1799, t1820, t1800, t1873, t1578, t1581, t1531, t1493, t1657, t1592, t1646, t1656, t1647, t1712, t1456, t1461, t1425, t1398, t1551, t1508, t1525, t1550, t1526, t1576, t1400, t1403, t1393, t1374; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t2000, -t2001, 0, 0, t1978, t1924, t1944, t1977, t1945, t2077 * t2061, t1777, t1771, t1734, t1706, t1819, t1745, t1797, t1818, t1798, t1872, t1577, t1580, t1530, t1492, t1655, t1591, t1644, t1654, t1645, t1711, t1455, t1460, t1424, t1397, t1549, t1507, t1523, t1548, t1524, t1575, t1399, t1402, t1392, t1373; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2035, t2013, t2033, -t2047, t2038, t2047, 0, -t1950, t1886, 0, t1931, t1860, t1918, t1929, t1919, t1955, t1801, t1802, t1662, -pkin(10) * t1698, t1764, t1681, t1754, t1763, t1755, t1812, t1572, t1587, t1477, t1454, t1643, t1585, t1605, t1642, t1606, t1676, t1432, t1433, t1426, t1395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2046, t2010, t2037, t2036, t2032, -t2046, t1950, 0, t1887, 0, -t2104, -t1995, t2308, t2104, t1936, t2031, t1733, t1741, -pkin(3) * t1859, -pkin(3) * t1698, -t1920, -t1911, -t1866, t1920, t1863, t2031, t1579, t1590, t1628, t1468, -t1781, -t1694, -t1756, t1779, -t1757, -t1822, t1496, t1498, t1457, t1418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2055, t2044, t2011, t2055, t2012, t2061, -t1886, -t1887, 0, 0, t1930, t1858, t1916, t1928, t1917, t1954, t1751, t1760, t1650, t1664, t1762, t1679, t1752, t1761, t1753, t1811, t1560, t1571, t1475, t1447, t1641, t1584, t1603, t1640, t1604, t1675, t1430, t1431, t1423, t1394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1975, t1937, t2315, -t2015, t2007, t2015, 0, t1869, t1792, 0, t1857, t1770, t1851, t1855, t1852, t1892, t1713, t1715, t1543, -qJ(5) * t1558, t1727, t1670, t1685, t1726, t1686, t1766, t1488, t1489, t1469, t1429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2014, t1939, t2008, t2106, -t1966, t2014, -t1869, 0, t1793, 0, t1856, t1768, t1849, t1854, t1850, t1891, t1677, t1688, t1539, t1546, t1725, t1669, t1683, t1724, t1684, t1765, t1480, t1483, t1462, t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2104, t1995, -t2308, -t2104, -t1936, -t2031, -t1792, -t1793, 0, 0, t1920, t1911, t1866, -t1920, -t1863, -t2031, t2102, t2225 + 0.2e1 * t2293, t2301, t2302, t1781, t1694, t1756, -t1779, t1757, t1822, t2143, t2144, t2139, t2226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1904, -t1862, t2309, -t1971, t1969, t1971, 0, t1796, t1638, 0, t1782, t1696, t1758, t1780, t1759, t1823, t1586, t1588, t1494, -pkin(11) * t1512; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2278, t1865, t1970, -t2229, -t1897, t2278, -t1796, 0, t1639, 0, -t1885, -t1884, -t1789, t1885, t1785, -t1900, t1545, t1547, -pkin(5) * t1693, -pkin(5) * t1512; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1920, t1911, t1866, -t1920, -t1863, -t2031, -t1638, -t1639, 0, 0, t1781, t1694, t1756, -t1779, t1757, t1822, t2238, t2239, t2227, t2256; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1839, t1787, t2310, t1901, t1895, -t1901, 0, t1621, t1564, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1902, t1788, t1896, t1838, t1814, -t1902, -t1621, 0, t1565, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1885, t1884, t1789, -t1885, -t1785, t1900, -t1564, -t1565, 0, 0;];
m_new_reg  = t1;
