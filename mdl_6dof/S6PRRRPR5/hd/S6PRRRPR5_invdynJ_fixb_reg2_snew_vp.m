% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6PRRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 08:09
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6PRRRPR5_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR5_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR5_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRPR5_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRPR5_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRPR5_invdynJ_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 08:05:41
% EndTime: 2019-05-05 08:06:05
% DurationCPUTime: 12.01s
% Computational Cost: add. (79130->584), mult. (168635->912), div. (0->0), fcn. (138768->16), ass. (0->395)
t318 = sin(qJ(6));
t316 = cos(pkin(7));
t308 = qJD(2) * t316 + qJD(3);
t319 = sin(qJ(4));
t323 = cos(qJ(4));
t320 = sin(qJ(3));
t313 = sin(pkin(7));
t392 = qJD(2) * t313;
t376 = t320 * t392;
t283 = t308 * t323 - t319 * t376;
t284 = t308 * t319 + t323 * t376;
t312 = sin(pkin(13));
t315 = cos(pkin(13));
t257 = t312 * t283 + t315 * t284;
t324 = cos(qJ(3));
t391 = qJD(2) * t324;
t375 = t313 * t391;
t303 = -qJD(4) + t375;
t322 = cos(qJ(6));
t233 = t257 * t318 + t322 * t303;
t235 = t257 * t322 - t303 * t318;
t193 = t235 * t233;
t384 = qJDD(2) * t320;
t290 = (qJD(3) * t391 + t384) * t313;
t369 = qJDD(2) * t316 + qJDD(3);
t341 = -t323 * t290 - t319 * t369;
t246 = t283 * qJD(4) - t341;
t370 = t319 * t290 - t323 * t369;
t348 = -qJD(4) * t284 - t370;
t371 = t246 * t312 - t315 * t348;
t205 = qJDD(6) + t371;
t437 = -t193 + t205;
t446 = t318 * t437;
t445 = t322 * t437;
t321 = sin(qJ(2));
t325 = cos(qJ(2));
t314 = sin(pkin(6));
t395 = -g(3) + qJDD(1);
t317 = cos(pkin(6));
t421 = sin(pkin(12));
t422 = cos(pkin(12));
t345 = g(1) * t421 - g(2) * t422;
t440 = t317 * t345;
t335 = t314 * t395 + t440;
t346 = -g(1) * t422 - g(2) * t421;
t263 = -t321 * t346 + t325 * t335;
t326 = qJD(2) ^ 2;
t427 = pkin(9) * t313;
t333 = qJDD(2) * pkin(2) + t326 * t427 + t263;
t336 = -t314 * t345 + t317 * t395;
t444 = t313 * t336 + t316 * t333;
t407 = t257 * t303;
t181 = t371 - t407;
t309 = t313 ^ 2;
t443 = t309 * (qJD(2) * t308 - t316 * t326);
t385 = qJDD(2) * t313;
t291 = -qJD(3) * t376 + t324 * t385;
t349 = -qJDD(4) + t291;
t255 = -t315 * t283 + t284 * t312;
t408 = t257 * t255;
t343 = -t349 - t408;
t442 = t312 * t343;
t441 = t315 * t343;
t406 = t283 * t284;
t342 = -t349 + t406;
t439 = t319 * t342;
t438 = t323 * t342;
t208 = t315 * t246 + t312 * t348;
t242 = t255 * t303;
t184 = t242 + t208;
t272 = t283 * t303;
t224 = t272 + t246;
t296 = t308 * t375;
t436 = t290 + t296;
t295 = t308 * t376;
t271 = t291 - t295;
t252 = qJD(6) + t255;
t372 = t318 * t208 + t322 * t349;
t141 = (qJD(6) - t252) * t235 + t372;
t220 = (qJD(4) + t303) * t284 + t370;
t264 = t321 * t335 + t325 * t346;
t259 = -t326 * pkin(2) + pkin(9) * t385 + t264;
t195 = t324 * t259 + t320 * t444;
t231 = t233 ^ 2;
t232 = t235 ^ 2;
t251 = t252 ^ 2;
t253 = t255 ^ 2;
t254 = t257 ^ 2;
t435 = t283 ^ 2;
t282 = t284 ^ 2;
t434 = t303 ^ 2;
t433 = t308 ^ 2;
t432 = 2 * qJD(5);
t430 = pkin(3) * t324;
t367 = -pkin(10) * t320 - t430;
t289 = t367 * t392;
t329 = t369 * pkin(10) + t289 * t375 + t195;
t328 = -pkin(3) * t433 + t329;
t227 = t313 * t333 - t316 * t336;
t331 = -pkin(10) * t436 - t227;
t330 = -pkin(3) * t271 + t331;
t149 = t319 * t330 + t323 * t328;
t265 = -pkin(4) * t303 - qJ(5) * t284;
t111 = -pkin(4) * t435 + qJ(5) * t348 + t303 * t265 + t149;
t148 = t319 * t328 - t323 * t330;
t327 = pkin(4) * t342 - qJ(5) * t224 - t148;
t374 = t111 * t312 - t315 * t327;
t64 = t257 * t432 + t374;
t390 = qJD(5) * t255;
t249 = -0.2e1 * t390;
t394 = t315 * t111 + t312 * t327;
t65 = t249 + t394;
t39 = t312 * t65 - t315 * t64;
t431 = pkin(4) * t39;
t182 = t371 + t407;
t185 = -t242 + t208;
t131 = -t182 * t312 - t185 * t315;
t429 = pkin(4) * t131;
t428 = pkin(5) * t312;
t212 = pkin(5) * t255 - pkin(11) * t257;
t59 = t349 * pkin(5) - t434 * pkin(11) + (t432 + t212) * t257 + t374;
t426 = t318 * t59;
t425 = t319 * t39;
t424 = t322 * t59;
t423 = t323 * t39;
t393 = t444 * t324;
t188 = -t369 * pkin(3) - t433 * pkin(10) + (t289 * t392 + t259) * t320 - t393;
t151 = -t348 * pkin(4) - t435 * qJ(5) + t265 * t284 + qJDD(5) + t188;
t420 = t151 * t312;
t419 = t151 * t315;
t155 = t193 + t205;
t418 = t155 * t318;
t417 = t155 * t322;
t416 = t188 * t319;
t415 = t188 * t323;
t202 = t349 - t408;
t414 = t202 * t312;
t413 = t202 * t315;
t237 = t349 + t406;
t412 = t237 * t319;
t411 = t237 * t323;
t410 = t252 * t318;
t409 = t252 * t322;
t405 = t303 * t312;
t404 = t303 * t315;
t403 = t303 * t319;
t402 = t303 * t323;
t401 = t309 * t326;
t400 = t313 * t320;
t399 = t313 * t324;
t302 = t320 * t324 * t401;
t288 = t302 + t369;
t398 = t320 * t288;
t287 = -t302 + t369;
t396 = t324 * t287;
t389 = -qJD(4) + t303;
t386 = qJD(6) + t252;
t383 = t312 * t193;
t382 = t315 * t193;
t310 = t320 ^ 2;
t381 = t310 * t401;
t311 = t324 ^ 2;
t380 = t311 * t401;
t379 = t324 * t408;
t378 = t324 * t406;
t377 = -pkin(5) * t315 - pkin(4);
t40 = t312 * t64 + t315 * t65;
t60 = -pkin(5) * t434 - pkin(11) * t349 - t255 * t212 + t65;
t91 = pkin(5) * t181 - pkin(11) * t184 + t151;
t43 = t318 * t60 - t322 * t91;
t44 = t318 * t91 + t322 * t60;
t28 = t318 * t43 + t322 * t44;
t98 = t148 * t319 + t323 * t149;
t228 = -t254 - t434;
t167 = t228 * t315 + t414;
t368 = pkin(4) * t167 - t394;
t18 = t28 * t312 - t315 * t59;
t19 = t28 * t315 + t312 * t59;
t10 = -t18 * t319 + t19 * t323;
t27 = t318 * t44 - t322 * t43;
t366 = t10 * t320 - t27 * t324;
t166 = t231 + t232;
t337 = -t322 * t208 + t318 * t349;
t164 = -t233 * qJD(6) - t337;
t206 = t252 * t233;
t145 = t206 + t164;
t95 = -t141 * t322 + t145 * t318;
t70 = t166 * t315 + t312 * t95;
t71 = -t166 * t312 + t315 * t95;
t47 = -t319 * t70 + t323 * t71;
t93 = -t141 * t318 - t145 * t322;
t365 = t320 * t47 - t324 * t93;
t173 = -t251 - t231;
t112 = t173 * t318 + t445;
t113 = t173 * t322 - t446;
t143 = -t235 * t386 - t372;
t76 = t113 * t312 + t143 * t315;
t77 = t113 * t315 - t143 * t312;
t53 = -t319 * t76 + t323 * t77;
t364 = -t112 * t324 + t320 * t53;
t189 = -t232 - t251;
t115 = t189 * t322 - t418;
t116 = -t189 * t318 - t417;
t146 = t233 * t386 + t337;
t78 = t116 * t312 + t146 * t315;
t79 = t116 * t315 - t146 * t312;
t55 = -t319 * t78 + t323 * t79;
t363 = -t115 * t324 + t320 * t55;
t26 = t323 * t40 - t425;
t362 = -t151 * t324 + t26 * t320;
t361 = -t188 * t324 + t320 * t98;
t190 = -t253 - t254;
t133 = -t182 * t315 + t185 * t312;
t84 = -t131 * t319 + t133 * t323;
t360 = -t190 * t324 + t320 * t84;
t209 = -t434 - t253;
t160 = t209 * t312 + t441;
t161 = t209 * t315 - t442;
t103 = -t160 * t319 + t161 * t323;
t359 = t103 * t320 - t181 * t324;
t168 = -t228 * t312 + t413;
t118 = -t167 * t319 + t168 * t323;
t358 = t118 * t320 - t184 * t324;
t97 = -t148 * t323 + t149 * t319;
t180 = -t220 * t323 + t224 * t319;
t236 = t282 + t435;
t357 = t180 * t320 + t236 * t324;
t194 = t259 * t320 - t393;
t356 = -t194 * t324 + t195 * t320;
t152 = t194 * t320 + t195 * t324;
t247 = -t434 - t435;
t199 = t247 * t323 - t439;
t221 = t284 * t389 - t370;
t355 = t199 * t320 + t221 * t324;
t261 = -t282 - t434;
t211 = -t261 * t319 + t411;
t225 = t283 * t389 + t341;
t354 = t211 * t320 + t225 * t324;
t269 = -t296 + t290;
t270 = t291 + t295;
t353 = -t269 * t324 + t270 * t320;
t279 = -t381 - t433;
t352 = t279 * t324 - t287 * t320;
t292 = -t380 - t433;
t351 = t288 * t324 + t292 * t320;
t347 = pkin(4) * t18 - pkin(5) * t59 + pkin(11) * t28;
t344 = pkin(4) * t160 - t64;
t340 = pkin(4) * t76 + pkin(5) * t143 + pkin(11) * t113 - t424;
t339 = pkin(4) * t78 + pkin(5) * t146 + pkin(11) * t116 + t426;
t338 = pkin(4) * t70 + pkin(5) * t166 + pkin(11) * t95 + t28;
t294 = (-t310 - t311) * t401;
t293 = (t310 - t311) * t401;
t274 = t349 * t399;
t268 = (t384 + (qJD(3) + t308) * t391) * t313;
t267 = -t282 + t434;
t266 = -t434 + t435;
t262 = t292 * t324 - t398;
t260 = t282 - t435;
t258 = -t279 * t320 - t396;
t241 = -t254 + t434;
t240 = t253 - t434;
t230 = (-t283 * t319 + t284 * t323) * t303;
t229 = t269 * t320 + t270 * t324;
t226 = t313 * t271 + t316 * t351;
t223 = -t272 + t246;
t219 = -t313 * t268 + t316 * t352;
t218 = t246 * t319 - t284 * t402;
t217 = t283 * t403 + t323 * t348;
t216 = -t313 * t294 + t316 * t353;
t215 = t266 * t319 - t411;
t214 = t267 * t323 + t439;
t213 = t254 - t253;
t210 = t261 * t323 + t412;
t201 = -t232 + t251;
t200 = t231 - t251;
t198 = t247 * t319 + t438;
t197 = (t255 * t315 - t257 * t312) * t303;
t196 = (t255 * t312 + t257 * t315) * t303;
t192 = t232 - t231;
t179 = -t220 * t319 - t224 * t323;
t178 = t221 * t319 + t223 * t323;
t177 = t208 * t315 + t257 * t405;
t176 = t208 * t312 - t257 * t404;
t175 = -t255 * t404 + t312 * t371;
t174 = -t255 * t405 - t315 * t371;
t172 = t240 * t315 + t414;
t171 = -t241 * t312 + t441;
t170 = t240 * t312 - t413;
t169 = t241 * t315 + t442;
t165 = t211 * t324 - t225 * t320;
t163 = -qJD(6) * t235 - t372;
t162 = t199 * t324 - t221 * t320;
t159 = (-t233 * t322 + t235 * t318) * t252;
t158 = (-t233 * t318 - t235 * t322) * t252;
t157 = t180 * t324 - t236 * t320;
t153 = t196 * t323 + t197 * t319;
t150 = -t313 * t210 + t316 * t354;
t144 = -t206 + t164;
t140 = t164 * t322 - t235 * t410;
t139 = t164 * t318 + t235 * t409;
t138 = -t163 * t318 + t233 * t409;
t137 = -t163 * t322 - t233 * t410;
t136 = -t313 * t198 + t316 * t355;
t135 = t313 * t227 + t316 * t356;
t134 = -t181 * t315 - t184 * t312;
t132 = -t181 * t312 + t184 * t315;
t130 = t159 * t315 + t205 * t312;
t129 = t159 * t312 - t205 * t315;
t128 = t176 * t323 + t177 * t319;
t127 = t174 * t323 + t175 * t319;
t126 = pkin(3) * t225 + pkin(10) * t211 + t416;
t125 = t200 * t322 - t418;
t124 = -t201 * t318 + t445;
t123 = t200 * t318 + t417;
t122 = t201 * t322 + t446;
t121 = t170 * t323 + t172 * t319;
t120 = t169 * t323 + t171 * t319;
t119 = pkin(3) * t221 + pkin(10) * t199 - t415;
t117 = t167 * t323 + t168 * t319;
t114 = -t313 * t179 + t316 * t357;
t109 = t140 * t315 + t383;
t108 = t138 * t315 - t383;
t107 = t140 * t312 - t382;
t106 = t138 * t312 + t382;
t102 = t160 * t323 + t161 * t319;
t101 = -qJ(5) * t167 + t419;
t100 = -qJ(5) * t160 + t420;
t99 = t118 * t324 + t184 * t320;
t96 = t143 * t322 - t144 * t318;
t94 = t143 * t318 + t144 * t322;
t92 = t103 * t324 + t181 * t320;
t89 = -pkin(4) * t184 + qJ(5) * t168 + t420;
t88 = t125 * t315 - t141 * t312;
t87 = t124 * t315 + t145 * t312;
t86 = t125 * t312 + t141 * t315;
t85 = t124 * t312 - t145 * t315;
t83 = t132 * t323 + t134 * t319;
t82 = t131 * t323 + t133 * t319;
t81 = -pkin(4) * t181 + qJ(5) * t161 - t419;
t80 = t129 * t323 + t130 * t319;
t75 = t192 * t312 + t315 * t96;
t74 = -t192 * t315 + t312 * t96;
t73 = -pkin(3) * t188 + pkin(10) * t98;
t72 = t188 * t320 + t324 * t98;
t69 = t190 * t320 + t324 * t84;
t68 = pkin(3) * t236 + pkin(10) * t180 + t98;
t67 = t107 * t323 + t109 * t319;
t66 = t106 * t323 + t108 * t319;
t62 = -t313 * t117 + t316 * t358;
t61 = -t313 * t102 + t316 * t359;
t58 = t319 * t88 + t323 * t86;
t57 = t319 * t87 + t323 * t85;
t56 = -t313 * t97 + t316 * t361;
t54 = t319 * t79 + t323 * t78;
t52 = t319 * t77 + t323 * t76;
t51 = -pkin(11) * t115 + t424;
t50 = -pkin(11) * t112 + t426;
t49 = t319 * t75 + t323 * t74;
t48 = -t313 * t82 + t316 * t360;
t46 = t319 * t71 + t323 * t70;
t45 = -pkin(3) * t184 + pkin(10) * t118 + t101 * t319 + t323 * t89;
t41 = -pkin(3) * t181 + pkin(10) * t103 + t100 * t319 + t323 * t81;
t38 = t115 * t320 + t324 * t55;
t37 = t112 * t320 + t324 * t53;
t36 = -pkin(5) * t115 + t44;
t35 = -pkin(4) * t151 + qJ(5) * t40;
t34 = -pkin(5) * t112 + t43;
t33 = -qJ(5) * t131 - t39;
t32 = t320 * t93 + t324 * t47;
t31 = -pkin(4) * t190 + qJ(5) * t133 + t40;
t30 = -t313 * t54 + t316 * t363;
t29 = -t313 * t52 + t316 * t364;
t25 = t319 * t40 + t423;
t24 = -t313 * t46 + t316 * t365;
t23 = t151 * t320 + t26 * t324;
t22 = -pkin(11) * t93 - t27;
t21 = -qJ(5) * t78 - t312 * t36 + t315 * t51;
t20 = -qJ(5) * t76 - t312 * t34 + t315 * t50;
t17 = -pkin(4) * t115 + qJ(5) * t79 + t312 * t51 + t315 * t36;
t16 = -pkin(4) * t112 + qJ(5) * t77 + t312 * t50 + t315 * t34;
t15 = -pkin(3) * t190 + pkin(10) * t84 + t31 * t323 + t319 * t33;
t14 = -qJ(5) * t70 + t22 * t315 + t428 * t93;
t13 = qJ(5) * t71 + t312 * t22 + t377 * t93;
t12 = -t313 * t25 + t316 * t362;
t11 = -pkin(3) * t151 + pkin(10) * t26 - qJ(5) * t425 + t323 * t35;
t9 = t18 * t323 + t19 * t319;
t8 = -pkin(3) * t115 + pkin(10) * t55 + t17 * t323 + t21 * t319;
t7 = -pkin(3) * t112 + pkin(10) * t53 + t16 * t323 + t20 * t319;
t6 = -qJ(5) * t18 + (-pkin(11) * t315 + t428) * t27;
t5 = t10 * t324 + t27 * t320;
t4 = -pkin(3) * t93 + pkin(10) * t47 + t13 * t323 + t14 * t319;
t3 = qJ(5) * t19 + (-pkin(11) * t312 + t377) * t27;
t2 = -t313 * t9 + t316 * t366;
t1 = -pkin(3) * t27 + pkin(10) * t10 + t3 * t323 + t319 * t6;
t42 = [0, 0, 0, 0, 0, 0, 0, 0, 0, t395, 0, 0, 0, 0, 0, 0, (qJDD(2) * t325 - t321 * t326) * t314, (-qJDD(2) * t321 - t325 * t326) * t314, 0, t317 ^ 2 * t395 + (t325 * t263 + t321 * t264 - t440) * t314, 0, 0, 0, 0, 0, 0, t317 * (-t316 * t271 + t313 * t351) + (t226 * t325 + t262 * t321) * t314, t317 * (t316 * t268 + t313 * t352) + (t219 * t325 + t258 * t321) * t314, t317 * (t316 * t294 + t313 * t353) + (t216 * t325 + t229 * t321) * t314, t317 * (-t316 * t227 + t313 * t356) + (t135 * t325 + t152 * t321) * t314, 0, 0, 0, 0, 0, 0, t317 * (t316 * t198 + t313 * t355) + (t136 * t325 + t162 * t321) * t314, t317 * (t316 * t210 + t313 * t354) + (t150 * t325 + t165 * t321) * t314, t317 * (t316 * t179 + t313 * t357) + (t114 * t325 + t157 * t321) * t314, t317 * (t313 * t361 + t316 * t97) + (t321 * t72 + t325 * t56) * t314, 0, 0, 0, 0, 0, 0, t317 * (t316 * t102 + t313 * t359) + (t321 * t92 + t325 * t61) * t314, t317 * (t316 * t117 + t313 * t358) + (t321 * t99 + t325 * t62) * t314, t317 * (t313 * t360 + t316 * t82) + (t321 * t69 + t325 * t48) * t314, t317 * (t316 * t25 + t313 * t362) + (t12 * t325 + t23 * t321) * t314, 0, 0, 0, 0, 0, 0, t317 * (t313 * t364 + t316 * t52) + (t29 * t325 + t321 * t37) * t314, t317 * (t313 * t363 + t316 * t54) + (t30 * t325 + t321 * t38) * t314, t317 * (t313 * t365 + t316 * t46) + (t24 * t325 + t32 * t321) * t314, t317 * (t313 * t366 + t316 * t9) + (t2 * t325 + t321 * t5) * t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), t263, -t264, 0, 0, (t290 * t313 + t324 * t443) * t320, t316 * t293 + (t320 * t271 + t324 * t436) * t313, t316 * t269 + (t398 + t324 * (-t381 + t433)) * t313, (t291 * t313 - t320 * t443) * t324, t316 * t270 + (t320 * (t380 - t433) + t396) * t313, t316 * t369, pkin(2) * t226 - t194 * t316 + (pkin(9) * t262 + t227 * t324) * t313, pkin(2) * t219 - t195 * t316 + (pkin(9) * t258 - t227 * t320) * t313, pkin(2) * t216 + (pkin(9) * t229 + t152) * t313, pkin(2) * t135 + t152 * t427, t316 * t218 + (t320 * (t246 * t323 + t284 * t403) + t378) * t313, t316 * t178 + (t320 * (t221 * t323 - t223 * t319) - t324 * t260) * t313, t316 * t214 + (t320 * (-t267 * t319 + t438) - t324 * t224) * t313, t316 * t217 + (t320 * (t283 * t402 - t319 * t348) - t378) * t313, t316 * t215 + (t320 * (t266 * t323 + t412) + t324 * t220) * t313, t316 * t230 + t274 + (-t283 * t323 - t284 * t319) * t303 * t400, (-pkin(10) * t198 + t416) * t400 + (t319 * t329 - t323 * t331 + (t271 * t323 - t319 * t433 - t198) * pkin(3)) * t399 + t316 * t119 + pkin(2) * t136 + t162 * t427, pkin(2) * t150 + t316 * t126 + (t320 * (-pkin(10) * t210 + t415) + t324 * (-pkin(3) * t210 + t149) + pkin(9) * t165) * t313, pkin(2) * t114 + t316 * t68 + (t320 * (-pkin(10) * t179 - t97) - t179 * t430 + pkin(9) * t157) * t313, pkin(2) * t56 + t316 * t73 + (pkin(9) * t72 + t367 * t97) * t313, t316 * t128 + (t320 * (-t176 * t319 + t177 * t323) - t379) * t313, t316 * t83 + (t320 * (-t132 * t319 + t134 * t323) - t324 * t213) * t313, t316 * t120 + (t320 * (-t169 * t319 + t171 * t323) - t324 * t185) * t313, t316 * t127 + (t320 * (-t174 * t319 + t175 * t323) + t379) * t313, t316 * t121 + (t320 * (-t170 * t319 + t172 * t323) + t324 * t182) * t313, (-t196 * t319 + t197 * t323) * t400 + t274 + t316 * t153, pkin(2) * t61 + t316 * t41 + (t320 * (-pkin(10) * t102 + t100 * t323 - t319 * t81) + t324 * (-pkin(3) * t102 - t344) + pkin(9) * t92) * t313, pkin(2) * t62 + t316 * t45 + (t320 * (-pkin(10) * t117 + t101 * t323 - t319 * t89) + t324 * (-pkin(3) * t117 + t249 - t368) + pkin(9) * t99) * t313, pkin(2) * t48 + t316 * t15 + (t320 * (-pkin(10) * t82 - t31 * t319 + t323 * t33) + t324 * (-pkin(3) * t82 - t429) + pkin(9) * t69) * t313, pkin(2) * t12 + t316 * t11 + (t320 * (-pkin(10) * t25 - qJ(5) * t423 - t319 * t35) + t324 * (-pkin(3) * t25 - t431) + pkin(9) * t23) * t313, t316 * t67 + (t320 * (-t107 * t319 + t109 * t323) - t324 * t139) * t313, t316 * t49 + (t320 * (-t319 * t74 + t323 * t75) - t324 * t94) * t313, t316 * t57 + (t320 * (-t319 * t85 + t323 * t87) - t324 * t122) * t313, t316 * t66 + (t320 * (-t106 * t319 + t108 * t323) + t324 * t137) * t313, t316 * t58 + (t320 * (-t319 * t86 + t323 * t88) - t324 * t123) * t313, t316 * t80 + (t320 * (-t129 * t319 + t130 * t323) - t324 * t158) * t313, pkin(2) * t29 + t316 * t7 + (t320 * (-pkin(10) * t52 - t16 * t319 + t20 * t323) + t324 * (-pkin(3) * t52 - t340) + pkin(9) * t37) * t313, pkin(2) * t30 + t316 * t8 + (t320 * (-pkin(10) * t54 - t17 * t319 + t21 * t323) + t324 * (-pkin(3) * t54 - t339) + pkin(9) * t38) * t313, pkin(2) * t24 + t316 * t4 + (t320 * (-pkin(10) * t46 - t13 * t319 + t14 * t323) + t324 * (-pkin(3) * t46 - t338) + pkin(9) * t32) * t313, pkin(2) * t2 + t316 * t1 + (t320 * (-pkin(10) * t9 - t3 * t319 + t323 * t6) + t324 * (-pkin(3) * t9 - t347) + pkin(9) * t5) * t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302, t293, t269, t302, t270, t369, -t194, -t195, 0, 0, t218, t178, t214, t217, t215, t230, t119, t126, t68, t73, t128, t83, t120, t127, t121, t153, t41, t45, t15, t11, t67, t49, t57, t66, t58, t80, t7, t8, t4, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t406, t260, t224, t406, -t220, -t349, -t148, -t149, 0, 0, t408, t213, t185, -t408, -t182, -t349, t344, t368 + 0.2e1 * t390, t429, t431, t139, t94, t122, -t137, t123, t158, t340, t339, t338, t347; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t181, t184, t190, t151, 0, 0, 0, 0, 0, 0, t112, t115, t93, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, t192, t145, -t193, -t141, t205, -t43, -t44, 0, 0;];
tauJ_reg  = t42;
