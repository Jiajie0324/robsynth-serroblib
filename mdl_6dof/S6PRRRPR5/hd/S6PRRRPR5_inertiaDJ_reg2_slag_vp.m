% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRPR5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRPR5_inertiaDJ_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:28:19
% EndTime: 2019-03-08 23:28:36
% DurationCPUTime: 6.65s
% Computational Cost: add. (8458->465), mult. (24053->854), div. (0->0), fcn. (24558->14), ass. (0->203)
t126 = cos(qJ(3));
t117 = sin(pkin(7));
t223 = qJD(3) * t117;
t204 = t126 * t223;
t235 = cos(pkin(7));
t258 = qJD(4) * t235 + t204;
t122 = sin(qJ(3));
t222 = qJD(3) * t122;
t106 = t117 * t222;
t116 = sin(pkin(13));
t191 = pkin(4) * t106;
t121 = sin(qJ(4));
t125 = cos(qJ(4));
t230 = t117 * t122;
t205 = qJD(4) * t230;
t69 = t121 * t205 - t258 * t125;
t86 = t121 * t235 + t125 * t230;
t255 = t69 * qJ(5) - t86 * qJD(5);
t199 = t122 * t235;
t229 = t117 * t126;
t88 = pkin(2) * t199 + pkin(9) * t229;
t143 = t235 * pkin(10) + t88;
t139 = qJD(4) * t143;
t157 = (-pkin(3) * t126 - pkin(10) * t122 - pkin(2)) * t117;
t149 = qJD(4) * t157;
t135 = -t121 * t149 - t125 * t139;
t198 = t126 * t235;
t189 = pkin(2) * t198;
t148 = pkin(9) * t230 - t189;
t145 = t148 * qJD(3);
t248 = pkin(10) * t126;
t156 = (pkin(3) * t122 - t248) * t223;
t34 = t121 * t145 + t125 * t156 + t135;
t130 = t191 + t34 + t255;
t163 = t121 * t230 - t125 * t235;
t211 = t258 * t121 + t125 * t205;
t33 = (t145 - t149) * t125 + (t139 - t156) * t121;
t133 = t211 * qJ(5) + t163 * qJD(5) + t33;
t234 = cos(pkin(13));
t132 = t234 * t133;
t129 = t116 * t130 - t132;
t61 = t116 * t86 + t234 * t163;
t62 = -t116 * t163 + t234 * t86;
t79 = -t235 * pkin(3) + t148;
t64 = pkin(4) * t163 + t79;
t137 = t61 * pkin(5) - t62 * pkin(11) + t64;
t257 = -pkin(11) * t106 - qJD(6) * t137 - t129;
t123 = sin(qJ(2));
t127 = cos(qJ(2));
t197 = t127 * t235;
t256 = -t122 * t123 + t126 * t197;
t120 = sin(qJ(6));
t114 = t120 ^ 2;
t124 = cos(qJ(6));
t115 = t124 ^ 2;
t225 = t114 - t115;
t192 = qJD(6) * t225;
t243 = -qJ(5) - pkin(10);
t200 = qJD(4) * t243;
t151 = t121 * qJD(5) - t125 * t200;
t82 = t125 * qJD(5) + t121 * t200;
t138 = -t116 * t151 + t234 * t82;
t112 = -pkin(4) * t125 - pkin(3);
t195 = t234 * t125;
t231 = t116 * t121;
t90 = -t195 + t231;
t196 = t234 * t121;
t91 = t116 * t125 + t196;
t155 = -pkin(5) * t90 + pkin(11) * t91 - t112;
t147 = t124 * t155;
t221 = qJD(4) * t121;
t212 = pkin(4) * t221;
t84 = t91 * qJD(4);
t85 = qJD(4) * t195 - t116 * t221;
t150 = pkin(5) * t84 - pkin(11) * t85 + t212;
t218 = qJD(6) * t120;
t101 = t243 * t125;
t71 = -t234 * t101 + t243 * t231;
t14 = qJD(6) * t147 - t120 * t150 - t124 * t138 + t71 * t218;
t39 = -t120 * t155 + t124 * t71;
t15 = -qJD(6) * t39 - t120 * t138 + t124 * t150;
t38 = -t120 * t71 - t147;
t254 = t14 * t120 - t15 * t124 + (t120 * t38 - t124 * t39) * qJD(6);
t118 = sin(pkin(6));
t119 = cos(pkin(6));
t152 = t122 * t197 + t123 * t126;
t68 = t118 * t152 + t119 * t230;
t83 = -t118 * t127 * t117 + t119 * t235;
t50 = -t121 * t68 + t125 * t83;
t51 = t121 * t83 + t125 * t68;
t31 = t116 * t50 + t234 * t51;
t67 = -t118 * t256 - t119 * t229;
t16 = -t120 * t31 + t124 * t67;
t17 = t120 * t67 + t124 * t31;
t224 = qJD(2) * t118;
t203 = t123 * t224;
t187 = t117 * t203;
t47 = t119 * t204 + (t256 * qJD(3) + (-t123 * t199 + t126 * t127) * qJD(2)) * t118;
t27 = -qJD(4) * t51 - t47 * t121 + t125 * t187;
t28 = qJD(4) * t50 + t121 * t187 + t47 * t125;
t159 = t116 * t27 + t234 * t28;
t217 = qJD(6) * t124;
t46 = t119 * t106 + (t152 * qJD(3) + (t122 * t127 + t123 * t198) * qJD(2)) * t118;
t3 = -t46 * t120 - t124 * t159 - t67 * t217 + t31 * t218;
t4 = -qJD(6) * t17 - t120 * t159 + t46 * t124;
t253 = t3 * t120 - t4 * t124 + (t120 * t16 - t124 * t17) * qJD(6);
t146 = t116 * t211 + t234 * t69;
t42 = -t116 * t69 + t234 * t211;
t81 = qJD(3) * t88;
t54 = t211 * pkin(4) + t81;
t134 = t42 * pkin(5) + pkin(11) * t146 + t54;
t55 = -t121 * t143 + t125 * t157;
t37 = -pkin(4) * t229 - t86 * qJ(5) + t55;
t56 = t121 * t157 + t125 * t143;
t43 = -qJ(5) * t163 + t56;
t22 = t116 * t37 + t234 * t43;
t20 = -pkin(11) * t229 + t22;
t1 = -t120 * t134 + t257 * t124 + t20 * t218;
t10 = t120 * t137 + t124 * t20;
t2 = t257 * t120 + t124 * t134 - t20 * t217;
t9 = -t120 * t20 + t124 * t137;
t252 = -t1 * t120 + t2 * t124 + (t10 * t124 - t120 * t9) * qJD(6);
t251 = 0.2e1 * t117;
t250 = 0.2e1 * qJD(3);
t249 = pkin(10) * t117;
t12 = t116 * t28 - t234 * t27;
t30 = t116 * t51 - t234 * t50;
t247 = t30 * t12;
t35 = t67 * t46;
t246 = t67 * t81;
t59 = t116 * t82 + t234 * t151;
t70 = -t101 * t116 - t243 * t196;
t245 = t70 * t59;
t244 = t91 * t85;
t207 = t120 * t229;
t26 = -qJD(6) * t207 - t124 * t106 - t120 * t146 + t62 * t217;
t52 = t120 * t62 + t124 * t229;
t242 = -t120 * t26 - t52 * t217;
t25 = qJD(6) * t52 - t120 * t106 + t124 * t146;
t241 = t120 * t25;
t240 = t120 * t52;
t239 = t124 * t26;
t53 = t124 * t62 - t207;
t238 = t124 * t53;
t236 = t69 * t121;
t110 = pkin(4) * t116 + pkin(11);
t233 = t110 * t120;
t232 = t110 * t124;
t228 = t120 * t124;
t220 = qJD(4) * t125;
t219 = qJD(4) * t126;
t216 = 0.2e1 * t61 * t42;
t215 = 0.2e1 * t90 * t84;
t214 = -0.2e1 * pkin(3) * qJD(4);
t111 = -t234 * pkin(4) - pkin(5);
t213 = 0.2e1 * qJD(6) * t111;
t210 = t67 * t221;
t209 = t91 * t218;
t208 = t91 * t217;
t113 = t117 ^ 2;
t206 = t113 * t222;
t202 = t120 * t217;
t201 = t121 * t220;
t194 = -0.4e1 * t91 * t228;
t89 = t91 ^ 2;
t190 = t89 * t202;
t188 = t113 * t203;
t186 = t126 * t206;
t185 = t211 * t125;
t21 = -t116 * t43 + t234 * t37;
t19 = pkin(5) * t229 - t21;
t131 = -t116 * t133 - t234 * t130;
t6 = -pkin(5) * t106 + t131;
t183 = t19 * t85 + t6 * t91;
t182 = t235 * t223;
t181 = -t1 * t124 - t2 * t120;
t179 = t12 * t70 + t30 * t59;
t178 = t12 * t91 + t30 * t85;
t176 = t42 * t90 + t61 * t84;
t175 = t91 * t42 + t85 * t61;
t174 = t59 * t91 + t70 * t85;
t173 = t84 * t91 + t85 * t90;
t171 = -t10 * t120 - t124 * t9;
t170 = -t110 * t84 + t111 * t85;
t169 = t110 * t90 - t111 * t91;
t167 = -t120 * t17 - t124 * t16;
t165 = -t120 * t39 - t124 * t38;
t162 = -t124 * t25 - t53 * t218;
t161 = t120 * t42 + t61 * t217;
t160 = t120 * t84 + t90 * t217;
t158 = t163 * t121;
t154 = t121 * t219 + t125 * t222;
t153 = t121 * t222 - t125 * t219;
t144 = qJD(6) * t167 - t4 * t120 - t3 * t124;
t142 = qJD(6) * t165 - t15 * t120 - t14 * t124;
t141 = -t27 * t121 + t28 * t125 + (-t121 * t51 - t125 * t50) * qJD(4);
t140 = -t34 * t121 - t33 * t125 + (-t56 * t121 - t55 * t125) * qJD(4);
t94 = -0.2e1 * t186;
t63 = t124 * t84 - t90 * t218;
t45 = t91 * t192 - t85 * t228;
t32 = t124 * t42 - t61 * t218;
t8 = -t132 + (t135 + (-t121 * t189 + (-t125 * t248 + (pkin(3) * t125 + pkin(9) * t121 + pkin(4)) * t122) * t117) * qJD(3) + t255) * t116;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t83 * t187 + 0.2e1 * t47 * t68 + 0.2e1 * t35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t27 * t50 + 0.2e1 * t28 * t51 + 0.2e1 * t35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t159 * t31 + 0.2e1 * t247 + 0.2e1 * t35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t16 * t4 - 0.2e1 * t17 * t3 + 0.2e1 * t247; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t203, -t127 * t224, 0, 0, 0, 0, 0, 0, 0, 0, t83 * t106 - t126 * t188 - t46 * t235, t122 * t188 + t83 * t204 - t47 * t235 (t122 * t46 + t126 * t47 + (-t122 * t68 + t126 * t67) * qJD(3)) * t117, -pkin(2) * t188 - t145 * t68 + t148 * t46 + t47 * t88 + t246, 0, 0, 0, 0, 0, 0, t46 * t163 + t67 * t211 + (-t126 * t27 + t50 * t222) * t117, t46 * t86 - t67 * t69 + (t126 * t28 - t51 * t222) * t117, -t28 * t163 - t51 * t211 - t27 * t86 + t50 * t69, t27 * t55 + t28 * t56 - t33 * t51 + t34 * t50 + t46 * t79 + t246, 0, 0, 0, 0, 0, 0, t67 * t42 + t46 * t61 + (t12 * t126 - t222 * t30) * t117, t46 * t62 - t67 * t146 + (t126 * t159 - t222 * t31) * t117, t12 * t62 - t146 * t30 - t159 * t61 - t31 * t42, -t12 * t21 + t131 * t30 + t159 * t22 + t31 * t8 + t46 * t64 + t67 * t54, 0, 0, 0, 0, 0, 0, t12 * t52 + t16 * t42 + t26 * t30 + t4 * t61, t12 * t53 - t17 * t42 - t25 * t30 + t3 * t61, t16 * t25 - t17 * t26 + t3 * t52 - t4 * t53, -t1 * t17 - t10 * t3 + t12 * t19 + t16 * t2 + t30 * t6 + t4 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t186 (-t122 ^ 2 + t126 ^ 2) * t113 * t250, 0.2e1 * t126 * t182, t94, -0.2e1 * t122 * t182, 0, -0.2e1 * pkin(2) * t206 - 0.2e1 * t81 * t235 (-t113 * pkin(2) * t126 + t148 * t235) * t250, -0.2e1 * t88 * t106 - 0.2e1 * t145 * t229 + 0.2e1 * t148 * t204 + 0.2e1 * t81 * t230, -0.2e1 * t145 * t88 + 0.2e1 * t148 * t81, -0.2e1 * t86 * t69, 0.2e1 * t69 * t163 - 0.2e1 * t86 * t211 (t126 * t69 + t86 * t222) * t251, 0.2e1 * t163 * t211 (t211 * t126 - t163 * t222) * t251, t94, 0.2e1 * t81 * t163 + 0.2e1 * t79 * t211 + 0.2e1 * (-t126 * t34 + t55 * t222) * t117, -0.2e1 * t79 * t69 + 0.2e1 * t81 * t86 + 0.2e1 * (-t126 * t33 - t56 * t222) * t117, 0.2e1 * t33 * t163 - 0.2e1 * t56 * t211 - 0.2e1 * t34 * t86 + 0.2e1 * t55 * t69, -0.2e1 * t33 * t56 + 0.2e1 * t34 * t55 + 0.2e1 * t79 * t81, -0.2e1 * t62 * t146, 0.2e1 * t146 * t61 - 0.2e1 * t62 * t42 (t126 * t146 + t62 * t222) * t251, t216 (t126 * t42 - t222 * t61) * t251, t94, 0.2e1 * t64 * t42 + 0.2e1 * t54 * t61 + 0.2e1 * (t126 * t131 + t21 * t222) * t117, 0.2e1 * t54 * t62 - 0.2e1 * t64 * t146 + 0.2e1 * (t126 * t8 - t22 * t222) * t117, 0.2e1 * t131 * t62 + 0.2e1 * t146 * t21 - 0.2e1 * t22 * t42 - 0.2e1 * t8 * t61, -0.2e1 * t131 * t21 + 0.2e1 * t22 * t8 + 0.2e1 * t54 * t64, -0.2e1 * t53 * t25, 0.2e1 * t25 * t52 - 0.2e1 * t26 * t53, -0.2e1 * t25 * t61 + 0.2e1 * t42 * t53, 0.2e1 * t52 * t26, -0.2e1 * t26 * t61 - 0.2e1 * t42 * t52, t216, 0.2e1 * t19 * t26 + 0.2e1 * t2 * t61 + 0.2e1 * t42 * t9 + 0.2e1 * t52 * t6, 0.2e1 * t1 * t61 - 0.2e1 * t10 * t42 - 0.2e1 * t19 * t25 + 0.2e1 * t53 * t6, 0.2e1 * t1 * t52 - 0.2e1 * t10 * t26 - 0.2e1 * t2 * t53 + 0.2e1 * t25 * t9, -0.2e1 * t1 * t10 + 0.2e1 * t19 * t6 + 0.2e1 * t2 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46, -t47, 0, 0, 0, 0, 0, 0, 0, 0, -t125 * t46 + t210, t121 * t46 + t67 * t220, t141, -t46 * pkin(3) + pkin(10) * t141, 0, 0, 0, 0, 0, 0, t46 * t90 + t67 * t84, t46 * t91 + t67 * t85, -t159 * t90 - t31 * t84 + t178, pkin(4) * t210 + t46 * t112 + t138 * t31 + t159 * t71 + t179, 0, 0, 0, 0, 0, 0, t120 * t178 + t16 * t84 + t208 * t30 + t4 * t90, t124 * t178 - t17 * t84 - t209 * t30 + t3 * t90, t167 * t85 + t253 * t91, -t14 * t17 + t15 * t16 - t3 * t39 + t38 * t4 + t179; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t204, 0, -t106, 0, -t81, t145, 0, 0, t86 * t220 - t236, -t121 * t211 - t69 * t125 + (-t86 * t121 - t125 * t163) * qJD(4), t153 * t117, qJD(4) * t158 - t185, t154 * t117, 0, -pkin(3) * t211 - t81 * t125 - t153 * t249 + t79 * t221, pkin(3) * t69 + t121 * t81 - t154 * t249 + t79 * t220 (-t236 - t185 + (t86 * t125 + t158) * qJD(4)) * pkin(10) + t140, -t81 * pkin(3) + pkin(10) * t140, -t146 * t91 + t62 * t85, t146 * t90 - t62 * t84 - t175 (-t126 * t85 + t222 * t91) * t117, t176 (t126 * t84 - t222 * t90) * t117, 0, t61 * t212 + t112 * t42 + t54 * t90 + t64 * t84 + (t126 * t59 - t222 * t70) * t117, t62 * t212 - t112 * t146 + t54 * t91 + t64 * t85 + (t126 * t138 - t222 * t71) * t117, t131 * t91 - t138 * t61 - t146 * t70 - t21 * t85 - t22 * t84 - t71 * t42 + t59 * t62 - t8 * t90, t54 * t112 + t131 * t70 + t138 * t22 - t21 * t59 + t212 * t64 + t8 * t71, -t53 * t209 + (-t25 * t91 + t53 * t85) * t124 (-t120 * t53 - t124 * t52) * t85 + (t241 - t239 + (-t238 + t240) * qJD(6)) * t91, t124 * t175 - t209 * t61 - t25 * t90 + t53 * t84, t52 * t208 + (t26 * t91 + t52 * t85) * t120, -t120 * t175 - t208 * t61 - t26 * t90 - t52 * t84, t176, t120 * t183 + t15 * t61 + t19 * t208 + t2 * t90 + t26 * t70 + t38 * t42 + t52 * t59 + t84 * t9, t1 * t90 - t10 * t84 + t124 * t183 + t14 * t61 - t19 * t209 - t25 * t70 - t39 * t42 + t53 * t59, t14 * t52 - t15 * t53 + t171 * t85 + t25 * t38 - t252 * t91 - t26 * t39, -t1 * t39 - t10 * t14 + t15 * t9 + t19 * t59 + t2 * t38 + t6 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t201, 0.2e1 * (-t121 ^ 2 + t125 ^ 2) * qJD(4), 0, -0.2e1 * t201, 0, 0, t121 * t214, t125 * t214, 0, 0, 0.2e1 * t244, -0.2e1 * t173, 0, t215, 0, 0, 0.2e1 * t112 * t84 + 0.2e1 * t212 * t90, 0.2e1 * t112 * t85 + 0.2e1 * t212 * t91, -0.2e1 * t138 * t90 - 0.2e1 * t71 * t84 + 0.2e1 * t174, 0.2e1 * t112 * t212 + 0.2e1 * t138 * t71 + 0.2e1 * t245, 0.2e1 * t115 * t244 - 0.2e1 * t190, 0.2e1 * t192 * t89 + t194 * t85, 0.2e1 * t124 * t173 - 0.2e1 * t209 * t90, 0.2e1 * t114 * t244 + 0.2e1 * t190, -0.2e1 * t120 * t173 - 0.2e1 * t208 * t90, t215, 0.2e1 * t120 * t174 + 0.2e1 * t15 * t90 + 0.2e1 * t208 * t70 + 0.2e1 * t38 * t84, 0.2e1 * t124 * t174 + 0.2e1 * t14 * t90 - 0.2e1 * t209 * t70 - 0.2e1 * t39 * t84, 0.2e1 * t165 * t85 + 0.2e1 * t254 * t91, -0.2e1 * t14 * t39 + 0.2e1 * t15 * t38 + 0.2e1 * t245; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, -t28, 0, 0, 0, 0, 0, 0, 0, 0, -t12, -t159, 0 (t159 * t116 - t12 * t234) * pkin(4), 0, 0, 0, 0, 0, 0, -t12 * t124 + t218 * t30, t12 * t120 + t217 * t30, t144, t110 * t144 + t12 * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t69, 0, -t211, t106, t34, t33, 0, 0, 0, 0, -t146, 0, -t42, t106, t234 * t191 - t131, -t116 * t191 - t129 (-t116 * t42 + t234 * t146) * pkin(4) (t116 * t8 - t131 * t234) * pkin(4), t217 * t53 - t241, t162 + t242, t161, t218 * t52 - t239, t32, 0, -t42 * t233 + t111 * t26 - t6 * t124 + (t120 * t19 - t61 * t232) * qJD(6), -t42 * t232 - t111 * t25 + t6 * t120 + (t124 * t19 + t233 * t61) * qJD(6) (-t239 - t241) * t110 + ((t238 + t240) * t110 + t171) * qJD(6) + t181, t6 * t111 + (qJD(6) * t171 + t181) * t110; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220, 0, -t221, 0, -pkin(10) * t220, pkin(10) * t221, 0, 0, 0, 0, t85, 0, -t84, 0, -t59, -t138 (-t116 * t84 - t234 * t85) * pkin(4) (t138 * t116 - t59 * t234) * pkin(4), -t45, qJD(6) * t194 - t225 * t85, t160, t45, t63, 0, -t124 * t59 + t170 * t120 + (t120 * t70 - t124 * t169) * qJD(6), t120 * t59 + t170 * t124 + (t120 * t169 + t124 * t70) * qJD(6), t142, t110 * t142 + t59 * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t202, -0.2e1 * t192, 0, -0.2e1 * t202, 0, 0, t120 * t213, t124 * t213, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t46, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t253; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, -t146, 0, t54, 0, 0, 0, 0, 0, 0, t32, -t161, -t162 + t242, t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t84, t85, 0, t212, 0, 0, 0, 0, 0, 0, t63, -t160 (-t114 - t115) * t85, -t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, t3, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t25, 0, -t26, t42, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t124 * t85 - t209, 0, -t120 * t85 - t208, t84, t15, t14, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, 0, -t218, 0, -t110 * t217, t110 * t218, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t218, -t217, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
