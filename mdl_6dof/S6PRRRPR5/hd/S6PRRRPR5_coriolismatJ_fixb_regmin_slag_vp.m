% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d6,theta1,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 23:30
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRPR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRPR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRPR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PRRRPR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 23:28:23
% EndTime: 2019-03-08 23:29:10
% DurationCPUTime: 27.85s
% Computational Cost: add. (19095->909), mult. (50688->1348), div. (0->0), fcn. (59491->14), ass. (0->654)
t624 = cos(pkin(7));
t626 = sin(qJ(4));
t630 = cos(qJ(4));
t622 = sin(pkin(7));
t627 = sin(qJ(3));
t917 = t622 * t627;
t558 = -t624 * t630 + t626 * t917;
t560 = t624 * t626 + t630 * t917;
t621 = sin(pkin(13));
t957 = cos(pkin(13));
t438 = t558 * t957 + t560 * t621;
t629 = cos(qJ(6));
t1011 = t629 * t438;
t1017 = t1011 / 0.2e1;
t1018 = -t1011 / 0.2e1;
t1019 = t1017 + t1018;
t1020 = qJD(6) * t1019;
t960 = -qJ(5) - pkin(10);
t595 = t960 * t630;
t779 = t957 * t626;
t494 = -t595 * t621 - t779 * t960;
t1013 = t494 / 0.2e1;
t1014 = -t494 / 0.2e1;
t782 = t1013 + t1014;
t623 = sin(pkin(6));
t958 = cos(pkin(6));
t780 = t622 * t958;
t766 = t627 * t780;
t628 = sin(qJ(2));
t631 = cos(qJ(3));
t899 = t628 * t631;
t632 = cos(qJ(2));
t900 = t627 * t632;
t482 = t766 + (t624 * t900 + t899) * t623;
t557 = -t622 * t623 * t632 + t624 * t958;
t388 = t482 * t626 - t557 * t630;
t389 = t482 * t630 + t557 * t626;
t239 = t388 * t957 + t389 * t621;
t1016 = t239 / 0.2e1;
t1015 = t438 / 0.2e1;
t537 = t957 * t560;
t920 = t621 * t558;
t1009 = t537 - t920;
t1012 = t1009 / 0.2e1;
t625 = sin(qJ(6));
t284 = t625 * t1009;
t919 = t621 * t626;
t673 = -t595 * t957 + t919 * t960;
t1010 = -t673 / 0.2e1;
t699 = -t388 * t621 + t389 * t957;
t1002 = t699 / 0.2e1;
t938 = t673 * t625;
t937 = t673 * t629;
t778 = t957 * t630;
t567 = -t778 + t919;
t783 = 0.2e1 * t1015;
t763 = t783 * t567;
t565 = t567 ^ 2;
t918 = t621 * t630;
t570 = t779 + t918;
t566 = t570 ^ 2;
t1008 = -t566 - t565;
t616 = t625 ^ 2;
t618 = t629 ^ 2;
t604 = t618 - t616;
t1007 = qJD(4) * t604;
t862 = qJD(3) * t629;
t822 = t625 * t862;
t768 = t570 * t822;
t1006 = 0.2e1 * t768 - t1007;
t916 = t622 * t631;
t606 = pkin(9) * t916;
t607 = t624 * t627 * pkin(2);
t563 = t606 + t607;
t534 = pkin(10) * t624 + t563;
t765 = -pkin(3) * t631 - pkin(10) * t627;
t535 = (-pkin(2) + t765) * t622;
t408 = t534 * t626 - t535 * t630;
t349 = -qJ(5) * t560 - t408;
t319 = -pkin(4) * t916 + t349;
t409 = t534 * t630 + t535 * t626;
t350 = -qJ(5) * t558 + t409;
t921 = t621 * t350;
t196 = t319 * t957 - t921;
t1005 = -t196 / 0.2e1;
t347 = t957 * t350;
t197 = t319 * t621 + t347;
t1004 = t197 / 0.2e1;
t203 = t349 * t957 - t921;
t1003 = t203 / 0.2e1;
t1001 = -t239 / 0.2e1;
t998 = -t699 / 0.2e1;
t390 = t629 * t916 + t284;
t997 = t390 / 0.2e1;
t392 = t1009 * t629 - t625 * t916;
t996 = t392 / 0.2e1;
t995 = -t1009 / 0.2e1;
t993 = -t438 / 0.2e1;
t989 = t482 / 0.2e1;
t508 = t570 * t916;
t982 = -t508 / 0.2e1;
t562 = (pkin(3) * t627 - pkin(10) * t631) * t622;
t546 = t630 * t562;
t981 = t546 / 0.2e1;
t980 = -t558 / 0.2e1;
t979 = t560 / 0.2e1;
t978 = -t567 / 0.2e1;
t977 = t567 / 0.2e1;
t976 = -t570 / 0.2e1;
t975 = t570 / 0.2e1;
t611 = pkin(4) * t621 + pkin(11);
t974 = t611 / 0.2e1;
t612 = -pkin(4) * t957 - pkin(5);
t973 = -t612 / 0.2e1;
t972 = t612 / 0.2e1;
t613 = -pkin(4) * t630 - pkin(3);
t971 = -t613 / 0.2e1;
t970 = -t621 / 0.2e1;
t969 = t621 / 0.2e1;
t968 = -t625 / 0.2e1;
t967 = t625 / 0.2e1;
t966 = -t626 / 0.2e1;
t965 = -t629 / 0.2e1;
t964 = t629 / 0.2e1;
t963 = pkin(2) * t631;
t962 = t560 * pkin(4);
t961 = t626 * pkin(4);
t959 = pkin(4) * qJD(4);
t901 = t627 * t628;
t832 = t623 * t901;
t884 = t632 * t631;
t481 = -t623 * t624 * t884 - t631 * t780 + t832;
t172 = -t481 * t629 + t625 * t699;
t956 = t172 * t567;
t173 = t481 * t625 + t629 * t699;
t955 = t173 * t567;
t202 = t349 * t621 + t347;
t954 = t202 * t625;
t953 = t202 * t629;
t952 = t239 * t570;
t915 = t623 * t628;
t833 = t626 * t915;
t773 = t622 * t833;
t829 = t624 * t901;
t521 = (-t829 + t884) * t623;
t931 = t521 * t630;
t446 = t773 + t931;
t831 = t630 * t915;
t772 = t622 * t831;
t932 = t521 * t626;
t698 = t772 - t932;
t295 = t446 * t621 - t698 * t957;
t951 = t295 * t625;
t950 = t295 * t629;
t316 = t570 * t481;
t949 = t316 * t625;
t948 = t316 * t629;
t947 = t392 * t1009;
t946 = t392 * t625;
t945 = t392 * t629;
t944 = t1009 * t390;
t943 = t438 * t570;
t834 = t626 * t916;
t509 = -t621 * t834 + t778 * t916;
t886 = t629 * t509;
t445 = t625 * t917 + t886;
t942 = t445 * t625;
t941 = t481 * t560;
t330 = t481 * t626;
t940 = t482 * t625;
t939 = t482 * t629;
t830 = t624 * t899;
t520 = (t830 + t900) * t623;
t936 = t520 * t625;
t935 = t520 * t626;
t934 = t520 * t629;
t933 = t520 * t630;
t561 = pkin(9) * t917 - t624 * t963;
t533 = -pkin(3) * t624 + t561;
t930 = t533 * t630;
t929 = t567 * t570;
t927 = t570 * t390;
t926 = t570 * t629;
t296 = t446 * t957 + t621 * t698;
t58 = t239 * t295 + t296 * t699 + t481 * t520;
t925 = t58 * qJD(1);
t317 = t567 * t481;
t59 = -t239 * t316 + t317 * t699 + t481 * t482;
t924 = t59 * qJD(1);
t615 = t622 ^ 2;
t620 = t631 ^ 2;
t923 = t615 * t620;
t922 = t615 * t627;
t914 = t625 * t203;
t902 = t626 * t561;
t777 = t546 + t902;
t885 = t630 * t631;
t387 = (pkin(4) * t627 - qJ(5) * t885) * t622 + t777;
t544 = t626 * t562;
t545 = t630 * t561;
t881 = t544 - t545;
t404 = -qJ(5) * t834 + t881;
t260 = t387 * t621 + t404 * t957;
t237 = pkin(11) * t917 + t260;
t913 = t625 * t237;
t266 = pkin(5) * t1009 + pkin(11) * t438 + t962;
t912 = t625 * t266;
t911 = t625 * t296;
t594 = pkin(4) * t834;
t506 = t594 + t563;
t314 = pkin(5) * t508 - pkin(11) * t509 + t506;
t910 = t625 * t314;
t909 = t625 * t317;
t908 = t625 * t390;
t907 = t625 * t438;
t470 = pkin(5) * t570 + pkin(11) * t567 + t961;
t906 = t625 * t470;
t905 = t494 * t625;
t904 = t625 * t508;
t903 = t625 * t509;
t465 = t625 * t570;
t898 = t629 * t203;
t897 = t629 * t237;
t896 = t629 * t266;
t895 = t629 * t296;
t894 = t629 * t314;
t893 = t629 * t317;
t892 = t629 * t390;
t889 = t629 * t470;
t888 = t494 * t629;
t887 = t629 * t508;
t702 = t892 / 0.2e1 + t946 / 0.2e1;
t665 = t1011 * t465 + t567 * t702;
t599 = t629 * t917;
t444 = -t599 + t903;
t706 = t444 * t968 + t445 * t964;
t74 = t665 - t706;
t883 = t74 * qJD(2);
t771 = t623 * t830;
t791 = t900 / 0.2e1;
t880 = t771 / 0.2e1 + t623 * t791;
t879 = -t771 / 0.2e1 - t623 * t900 / 0.2e1;
t605 = -t626 ^ 2 + t630 ^ 2;
t836 = t438 * t907;
t119 = -t836 - t944;
t878 = qJD(2) * t119;
t120 = -t836 + t944;
t877 = qJD(2) * t120;
t835 = t438 * t1011;
t121 = -t835 + t947;
t876 = qJD(2) * t121;
t122 = t835 + t947;
t875 = qJD(2) * t122;
t874 = qJD(2) * t392;
t873 = qJD(2) * t438;
t474 = -t558 * t917 + t626 * t923;
t872 = qJD(2) * t474;
t475 = -t560 * t917 + t630 * t923;
t871 = qJD(2) * t475;
t564 = t779 / 0.2e1 + t918 / 0.2e1;
t505 = t564 * t916;
t870 = qJD(2) * t505;
t869 = qJD(2) * t560;
t868 = qJD(2) * t623;
t867 = qJD(2) * t624;
t866 = qJD(2) * t631;
t865 = qJD(3) * t567;
t864 = qJD(3) * t570;
t863 = qJD(3) * t626;
t861 = qJD(3) * t630;
t860 = qJD(3) * t631;
t859 = qJD(4) * t625;
t858 = qJD(4) * t626;
t857 = qJD(4) * t629;
t856 = qJD(4) * t630;
t855 = qJD(5) * t629;
t854 = qJD(6) * t438;
t853 = qJD(6) * t625;
t852 = qJD(6) * t629;
t134 = -t892 - t946;
t115 = t134 * t438;
t851 = t115 * qJD(2);
t116 = -t390 * t445 - t392 * t444;
t850 = t116 * qJD(2);
t811 = t392 * t978;
t676 = -t438 * t618 * t975 + t629 * t811;
t136 = -t942 / 0.2e1 + t676;
t849 = t136 * qJD(2);
t802 = -t917 / 0.2e1;
t812 = t390 * t978;
t145 = t812 - t886 / 0.2e1 + (-t943 / 0.2e1 + t802) * t625;
t848 = t145 * qJD(2);
t697 = t1018 * t570 + t811;
t758 = t599 / 0.2e1 - t903 / 0.2e1;
t146 = t697 - t758;
t847 = t146 * qJD(2);
t168 = -t390 * t508 - t438 * t444;
t846 = t168 * qJD(2);
t169 = t392 * t508 + t438 * t445;
t845 = t169 * qJD(2);
t289 = 0.2e1 * t1018;
t844 = t289 * qJD(2);
t359 = -t558 * t630 - t560 * t626;
t397 = t359 * t916;
t843 = t397 * qJD(2);
t842 = t505 * qJD(6);
t569 = (-t627 ^ 2 + t620) * t615;
t841 = t569 * qJD(2);
t840 = t622 * qJD(4);
t839 = t566 - t565;
t838 = t962 / 0.2e1;
t837 = t961 / 0.2e1;
t828 = -t957 / 0.2e1;
t827 = t622 * t866;
t826 = t567 * t864;
t825 = t618 * t864;
t824 = t570 * t862;
t823 = t622 * t860;
t821 = t631 * t840;
t820 = t625 * t857;
t819 = t567 * t852;
t818 = qJD(4) * t929;
t817 = t615 * t866;
t816 = qJD(3) * t917;
t815 = t625 * t852;
t555 = t570 * t857;
t180 = pkin(5) * t916 - t196;
t814 = t180 * t967;
t813 = t180 * t964;
t810 = t392 * t975;
t809 = t1009 * t975;
t808 = t481 * t980;
t807 = t941 / 0.2e1;
t806 = t926 / 0.2e1;
t805 = t438 * t974;
t804 = t390 * t973;
t803 = t392 * t972;
t801 = t917 / 0.2e1;
t800 = -t916 / 0.2e1;
t799 = t916 / 0.2e1;
t798 = -t913 / 0.2e1;
t797 = -t909 / 0.2e1;
t796 = t907 / 0.2e1;
t795 = -t904 / 0.2e1;
t794 = t904 / 0.2e1;
t793 = -t465 / 0.2e1;
t792 = t465 / 0.2e1;
t790 = -t897 / 0.2e1;
t789 = -t893 / 0.2e1;
t786 = -t887 / 0.2e1;
t785 = t180 / 0.2e1 + t1003;
t784 = t1016 + t1001;
t781 = -t544 / 0.2e1 + t545 / 0.2e1;
t776 = qJD(3) + t867;
t775 = -qJD(6) - t873;
t774 = -qJD(6) - t865;
t770 = t860 * t922;
t769 = t627 * t817;
t767 = t630 * t827;
t764 = t784 * t567;
t762 = 0.2e1 * t625 * t555;
t760 = t314 / 0.2e1 + t180 * t976;
t759 = t989 - t952 / 0.2e1;
t757 = t805 + t266 / 0.2e1;
t756 = t594 / 0.2e1 + t606 / 0.2e1 + t607 / 0.2e1;
t755 = -qJD(4) + t827;
t708 = -t1016 * t438 - t239 * t993;
t638 = t172 * t995 + t625 * t708 + t699 * t997;
t27 = t950 / 0.2e1 + t638;
t741 = t896 - t914;
t181 = -pkin(11) * t916 + t197;
t450 = pkin(4) * t558 + t533;
t643 = pkin(5) * t438 - pkin(11) * t1009 + t450;
t75 = t181 * t625 - t629 * t643;
t9 = -t1009 * t75 - t180 * t907 + t202 * t390 + t438 * t741;
t754 = t27 * qJD(1) + t9 * qJD(2);
t41 = -t196 * t202 + t197 * t203 + t450 * t962;
t647 = t1001 * t202 + t1002 * t196 + t1016 * t197 + t203 * t998;
t687 = t295 * t828 + t296 * t969;
t7 = (-t941 / 0.2e1 + t687) * pkin(4) + t647;
t753 = -t7 * qJD(1) + t41 * qJD(2);
t259 = t387 * t957 - t404 * t621;
t42 = t196 * t259 + t197 * t260 + t450 * t506;
t635 = t259 * t1001 + t260 * t1002 - t316 * t1005 + t317 * t1004 + t481 * t506 / 0.2e1 + t450 * t989;
t664 = t1010 * t296 + t1014 * t295 + t520 * t971;
t6 = t635 + t664;
t752 = qJD(1) * t6 + qJD(2) * t42;
t742 = t898 + t912;
t76 = t181 * t629 + t625 * t643;
t10 = -t1009 * t76 - t1011 * t180 + t202 * t392 - t438 * t742;
t637 = t173 * t995 + t629 * t708 + t699 * t996;
t30 = -t951 / 0.2e1 + t637;
t751 = t30 * qJD(1) + t10 * qJD(2);
t109 = t894 - t913;
t236 = -pkin(5) * t917 - t259;
t15 = t109 * t438 + t180 * t444 + t236 * t390 - t508 * t75;
t248 = -t909 + t939;
t651 = t1015 * t248 + t1016 * t444 + t172 * t982 - t316 * t997;
t739 = -t911 + t934;
t652 = t295 * t793 + t739 * t978;
t22 = t651 + t652;
t750 = qJD(1) * t22 + qJD(2) * t15;
t110 = t897 + t910;
t16 = -t110 * t438 + t180 * t445 + t236 * t392 - t508 * t76;
t249 = t893 + t940;
t650 = t1016 * t445 + t173 * t982 + t249 * t993 - t316 * t996;
t740 = t895 + t936;
t653 = t295 * t806 + t740 * t978;
t24 = t650 - t653;
t749 = qJD(1) * t24 + qJD(2) * t16;
t31 = (t196 - t203) * t438 + (-t197 + t202) * t1009;
t40 = t708 + (t1012 + t995) * t699;
t748 = t40 * qJD(1) + t31 * qJD(2);
t645 = -t1012 * t316 + t1016 * t509 + t317 * t993 + t699 * t982;
t707 = t295 * t975 + t296 * t978;
t33 = t645 - t707;
t38 = -t1009 * t259 - t196 * t509 - t197 * t508 - t260 * t438;
t747 = qJD(1) * t33 + qJD(2) * t38;
t45 = -t180 * t390 + t438 * t75;
t705 = -t936 / 0.2e1 - t895 / 0.2e1;
t712 = t1001 * t390 + t1015 * t172;
t52 = t705 - t712;
t746 = qJD(1) * t52 - qJD(2) * t45;
t46 = t180 * t392 - t438 * t76;
t704 = t934 / 0.2e1 - t911 / 0.2e1;
t711 = t173 * t993 + t239 * t996;
t51 = t704 - t711;
t745 = qJD(1) * t51 - qJD(2) * t46;
t64 = -t1009 * t196 - t197 * t438;
t710 = t1015 * t699 + t239 * t995;
t65 = t710 + t880;
t744 = qJD(1) * t65 - qJD(2) * t64;
t44 = (t998 + t1002) * t570 + t764;
t743 = qJD(2) * t40 + qJD(3) * t44;
t738 = -t1009 * t611 - t438 * t612;
t737 = -t567 * t612 - t570 * t611;
t405 = t839 * t625;
t716 = t625 * t763;
t659 = t1009 * t793 + t716 - t927 / 0.2e1;
t78 = t786 + t659;
t736 = -qJD(2) * t78 + qJD(3) * t405;
t406 = t1008 * t625;
t660 = t1009 * t792 + t716 + t927 / 0.2e1;
t80 = t786 + t660;
t735 = qJD(2) * t80 - qJD(3) * t406;
t407 = t839 * t629;
t640 = (t809 - t763) * t629 + t810;
t82 = t795 + t640;
t734 = -qJD(2) * t82 - qJD(3) * t407;
t473 = t1008 * t629;
t639 = (t809 + t763) * t629 + t810;
t84 = t794 + t639;
t733 = qJD(2) * t84 - qJD(3) * t473;
t732 = t774 * t629;
t695 = t388 * t802 + t558 * t989;
t103 = t933 / 0.2e1 + t695;
t164 = t408 * t917 - t533 * t834 - t558 * t563 + t777 * t916;
t731 = t103 * qJD(1) - t164 * qJD(2);
t694 = t389 * t802 + t482 * t979;
t106 = -t935 / 0.2e1 + t694;
t165 = t563 * t560 + (-t409 * t627 + (t881 + t930) * t631) * t622;
t730 = t106 * qJD(1) + t165 * qJD(2);
t182 = t807 + t932 / 0.2e1 + (t389 * t631 / 0.2e1 - t831 / 0.2e1) * t622;
t279 = -t409 * t916 - t533 * t560;
t729 = -qJD(1) * t182 + qJD(2) * t279;
t184 = t808 + t931 / 0.2e1 + (-t388 * t631 / 0.2e1 + t833 / 0.2e1) * t622;
t280 = -t408 * t916 - t533 * t558;
t728 = -qJD(1) * t184 - qJD(2) * t280;
t693 = t557 * t802 + t624 * t989;
t302 = t693 + t879;
t498 = -pkin(2) * t922 - t563 * t624;
t727 = qJD(1) * t302 - qJD(2) * t498;
t674 = (-t884 / 0.2e1 + t829 / 0.2e1) * t623;
t696 = -t481 * t624 / 0.2e1 + t557 * t800;
t303 = t674 + t696;
t497 = -t561 * t624 + t615 * t963;
t726 = qJD(1) * t303 + qJD(2) * t497;
t102 = 0.2e1 * t1012 * t570 + t763;
t152 = t1009 ^ 2 + t438 ^ 2;
t725 = qJD(2) * t152 + qJD(3) * t102;
t724 = qJD(2) * t102 - qJD(3) * t1008;
t685 = t1009 * t828 - t438 * t969;
t262 = (-t560 / 0.2e1 + t685) * pkin(4);
t684 = t567 * t970 + t570 * t828;
t424 = (t966 + t684) * pkin(4);
t723 = qJD(2) * t262 + qJD(3) * t424;
t722 = qJD(2) * t284 + qJD(3) * t465;
t285 = t783 * t625;
t462 = t625 * t567;
t221 = qJD(2) * t285 + qJD(3) * t462;
t288 = 0.2e1 * t1017;
t467 = t629 * t567;
t721 = -qJD(2) * t288 - qJD(3) * t467;
t398 = t558 ^ 2 - t560 ^ 2;
t720 = qJD(2) * t398 + qJD(3) * t359;
t719 = qJD(2) * t359 + qJD(3) * t605;
t430 = -t920 / 0.2e1 + t537 / 0.2e1;
t718 = qJD(2) * t430 + qJD(3) * t564;
t717 = t863 + t869;
t715 = t622 * t765;
t689 = pkin(10) * t630 * t800 + pkin(3) * t979;
t273 = t981 + (t561 / 0.2e1 - t533 / 0.2e1) * t626 + t689;
t714 = pkin(3) * t863 + qJD(2) * t273;
t656 = pkin(3) * t980 - t930 / 0.2e1 + t626 * pkin(10) * t799;
t274 = t656 + t781;
t713 = pkin(3) * t861 + qJD(2) * t274;
t709 = t952 / 0.2e1 + t699 * t978;
t703 = t567 * t974 + t570 * t973;
t436 = t558 * t966 + t630 * t979;
t701 = -qJD(3) * t436 + t558 * t869;
t700 = qJD(2) * t436 + t626 * t861;
t690 = pkin(5) * t567 - pkin(11) * t570 + t613;
t334 = -t629 * t690 + t938;
t634 = t334 * t1012 + t390 * t1010 + t741 * t978 + (t889 + t905) * t993 + t567 * t814 + t494 * t796;
t657 = t236 * t965 + t444 * t972 + t611 * t795;
t1 = (t75 / 0.2e1 - t954 / 0.2e1) * t570 + t634 + t657;
t675 = t699 * t975 + t764;
t642 = t172 * t976 + t625 * t675;
t34 = -t948 / 0.2e1 + t642;
t91 = (-t334 + t938) * t570 + t889 * t567;
t692 = t34 * qJD(1) - t1 * qJD(2) + t91 * qJD(3);
t335 = t625 * t690 + t937;
t633 = t335 * t1012 + t392 * t1010 + t742 * t977 + (-t888 + t906) * t1015 + t567 * t813 + t494 * t1017;
t658 = t236 * t967 + t445 * t972 + t611 * t786;
t2 = (t76 / 0.2e1 - t953 / 0.2e1) * t570 + t633 + t658;
t641 = t173 * t976 + t629 * t675;
t37 = t949 / 0.2e1 + t641;
t92 = (-t335 + t937) * t570 - t906 * t567;
t691 = t37 * qJD(1) - t2 * qJD(2) + t92 * qJD(3);
t688 = t260 * t969 + t259 * t957 / 0.2e1;
t686 = -t316 * t828 + t317 * t969;
t683 = t470 / 0.2e1 + t703;
t649 = t196 * t673 / 0.2e1 + t197 * t1013 + t202 * t1014 + t203 * t1010;
t11 = (t450 * t966 + t560 * t971 + t688) * pkin(4) + t649;
t235 = t613 * t961;
t646 = t782 * t699;
t25 = (-t330 / 0.2e1 + t686) * pkin(4) + t646;
t682 = -t25 * qJD(1) - t11 * qJD(2) + t235 * qJD(3);
t644 = t1009 * t1010 + t1012 * t673;
t672 = (t508 * t970 + t509 * t828) * pkin(4);
t13 = (t1004 - t202 / 0.2e1) * t570 + (t1003 + t1005) * t567 + t672 + t644;
t681 = t44 * qJD(1) - t13 * qJD(2);
t666 = t1014 * t392 + t1015 * t335 + t76 * t977;
t17 = t629 * t760 + t666 + t798;
t223 = -t335 * t567 + t494 * t926;
t60 = t797 + t955 / 0.2e1 + t759 * t629;
t680 = qJD(1) * t60 + qJD(2) * t17 - qJD(3) * t223;
t667 = t1013 * t390 + t334 * t993 + t75 * t978;
t18 = -t625 * t760 + t667 + t790;
t222 = t334 * t567 - t465 * t494;
t61 = t789 - t956 / 0.2e1 - t759 * t625;
t679 = -qJD(1) * t61 - qJD(2) * t18 + qJD(3) * t222;
t297 = t494 * t570 - t567 * t673;
t648 = t1009 * t1014 - t1010 * t438 + t196 * t975 + t197 * t977;
t55 = t648 + t756;
t636 = (t899 / 0.2e1 + t624 * t791) * t623 + t766 / 0.2e1;
t67 = t636 - t709;
t678 = -qJD(1) * t67 - qJD(2) * t55 + qJD(3) * t297;
t108 = (-t908 + t945) * t570;
t153 = t390 ^ 2 - t392 ^ 2;
t677 = qJD(2) * t153 - qJD(3) * t108 + qJD(4) * t134;
t201 = t702 * t570;
t247 = -t908 / 0.2e1 + t945 / 0.2e1;
t671 = qJD(3) * t201 - qJD(4) * t247 + t390 * t874;
t461 = (t616 / 0.2e1 - t618 / 0.2e1) * t570;
t670 = qJD(2) * t247 - qJD(3) * t461 + t820;
t261 = t1009 * t977 + t943 / 0.2e1;
t669 = qJD(3) * t261 + qJD(6) * t430 + t1009 * t873;
t668 = qJD(2) * t261 + qJD(6) * t564 + t826;
t472 = t604 * t566;
t663 = qJD(2) * t108 + qJD(3) * t472 + t762;
t662 = -qJD(2) * t134 + t1006;
t661 = qJD(2) * t201 + qJD(4) * t461 + t566 * t822;
t186 = t625 * t683 + t629 * t782;
t47 = t625 * t757 + t629 * t785 + t804;
t94 = t784 * t629;
t655 = qJD(1) * t94 - qJD(2) * t47 - qJD(3) * t186 - t612 * t857;
t188 = t625 * t782 - t629 * t683;
t49 = t625 * t785 - t629 * t757 + t803;
t93 = t784 * t625;
t654 = qJD(1) * t93 - qJD(2) * t49 - qJD(3) * t188 - t612 * t859;
t597 = qJD(3) * t801;
t556 = t564 * qJD(4);
t538 = (t817 - t840 / 0.2e1) * t627;
t522 = -0.2e1 * t570 * t815;
t489 = t887 / 0.2e1;
t448 = t462 * qJD(6);
t447 = t461 * qJD(6);
t426 = t436 * qJD(4);
t423 = pkin(4) * t684 + t837;
t422 = t1009 * t857;
t356 = t359 * qJD(4);
t351 = (qJD(2) * t1009 + t864) * t629;
t332 = t481 * t630;
t318 = qJD(3) * t505 + qJD(4) * t430;
t305 = -t693 + t879;
t304 = t674 - t696;
t286 = t438 * t968 + t796;
t278 = t286 * qJD(6);
t277 = t285 * qJD(6);
t276 = t533 * t626 / 0.2e1 + t902 / 0.2e1 + t981 - t689;
t275 = -t656 + t781;
t263 = pkin(4) * t685 + t838;
t252 = t261 * qJD(4);
t244 = t247 * qJD(6);
t212 = -t221 - t853;
t198 = t201 * qJD(6);
t189 = t494 * t967 + t905 / 0.2e1 + t889 / 0.2e1 - t703 * t629;
t187 = t494 * t964 + t888 / 0.2e1 - t906 / 0.2e1 + t703 * t625;
t185 = t808 + t388 * t800 - t931 / 0.2e1 - t773 / 0.2e1;
t183 = t389 * t799 + t807 - t932 / 0.2e1 + t772 / 0.2e1;
t147 = t697 + t758;
t144 = t438 * t793 + t812 + t886 / 0.2e1 + t625 * t801;
t135 = t942 / 0.2e1 + t676;
t125 = t134 * qJD(6);
t107 = t108 * qJD(6);
t105 = t935 / 0.2e1 + t694;
t104 = -t933 / 0.2e1 + t695;
t99 = t102 * qJD(5);
t96 = (t964 - t965) * t239;
t95 = (t967 - t968) * t239;
t83 = t795 + t639;
t81 = t794 + t640;
t79 = t489 + t660;
t77 = t489 + t659;
t73 = t665 + t706;
t68 = t636 + t709;
t66 = -t710 + t880;
t63 = -t955 / 0.2e1 + t239 * t806 + t797 + t939 / 0.2e1;
t62 = t956 / 0.2e1 + t239 * t793 + t789 - t940 / 0.2e1;
t56 = -t648 + t756;
t54 = t704 + t711;
t53 = t705 + t712;
t50 = t611 * t1018 + t803 + t814 - t914 / 0.2e1 + t896 / 0.2e1;
t48 = t625 * t805 + t804 + t813 - t898 / 0.2e1 - t912 / 0.2e1;
t43 = t44 * qJD(4);
t39 = t40 * qJD(4);
t36 = -t949 / 0.2e1 + t641;
t35 = t948 / 0.2e1 + t642;
t32 = t645 + t707;
t29 = t951 / 0.2e1 + t637;
t28 = -t950 / 0.2e1 + t638;
t26 = pkin(4) * t686 + t481 * t837 - t646;
t23 = t650 + t653;
t21 = t651 - t652;
t20 = t180 * t806 + t798 + t894 / 0.2e1 - t666;
t19 = t180 * t793 + t790 - t910 / 0.2e1 - t667;
t14 = t196 * t977 + t197 * t976 + t202 * t975 + t203 * t978 - t644 + t672;
t12 = pkin(4) * t688 + t450 * t837 + t613 * t838 - t649;
t8 = -t647 + (t687 + t807) * pkin(4);
t5 = t635 - t664;
t4 = t202 * t806 + t76 * t976 - t633 + t658;
t3 = t202 * t792 + t75 * t976 - t634 + t657;
t57 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t58 + qJD(3) * t59, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t628 * t868, -t632 * t868, 0, 0, 0, 0, 0 (-t615 * t623 * t899 - t520 * t624) * qJD(2) + t305 * qJD(3) (-t521 * t624 + t615 * t832) * qJD(2) + t304 * qJD(3), 0, 0, 0, 0, 0 (t520 * t558 - t698 * t916) * qJD(2) + t104 * qJD(3) + t183 * qJD(4) (t446 * t916 + t520 * t560) * qJD(2) + t105 * qJD(3) + t185 * qJD(4) (t1009 * t295 - t296 * t438) * qJD(2) + t32 * qJD(3) + t39, t925 + (-t196 * t295 + t197 * t296 + t450 * t520) * qJD(2) + t5 * qJD(3) + t8 * qJD(4) + t66 * qJD(5), 0, 0, 0, 0, 0 (t295 * t390 + t438 * t739) * qJD(2) + t21 * qJD(3) + t28 * qJD(4) + t54 * qJD(6) (t295 * t392 - t438 * t740) * qJD(2) + t23 * qJD(3) + t29 * qJD(4) + t53 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t305 - qJD(3) * t482, qJD(2) * t304 + qJD(3) * t481, 0, 0, 0, 0, 0, qJD(2) * t104 + qJD(4) * t330 - t482 * t861, qJD(2) * t105 + qJD(4) * t332 + t482 * t863, t32 * qJD(2) + (-t316 * t570 - t317 * t567) * qJD(3) + t43, t924 + t5 * qJD(2) + (-t316 * t494 + t317 * t673 + t482 * t613) * qJD(3) + t26 * qJD(4) + t68 * qJD(5), 0, 0, 0, 0, 0, t21 * qJD(2) + (t248 * t567 - t316 * t465) * qJD(3) + t35 * qJD(4) + t63 * qJD(6), t23 * qJD(2) + (-t249 * t567 - t316 * t926) * qJD(3) + t36 * qJD(4) + t62 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t183 + qJD(3) * t330 - qJD(4) * t389, qJD(2) * t185 + qJD(3) * t332 + qJD(4) * t388, t743, t8 * qJD(2) + t26 * qJD(3) + (-t239 * t621 - t699 * t957) * t959, 0, 0, 0, 0, 0, qJD(2) * t28 + qJD(3) * t35 + qJD(6) * t95 - t699 * t857, qJD(2) * t29 + qJD(3) * t36 + qJD(6) * t96 + t699 * t859; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t66 + qJD(3) * t68, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t54 + qJD(3) * t63 + qJD(4) * t95 - qJD(6) * t173, qJD(2) * t53 + qJD(3) * t62 + qJD(4) * t96 + qJD(6) * t172; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302 * qJD(3), -t303 * qJD(3), 0, 0, 0, 0, 0, qJD(3) * t103 + qJD(4) * t182, qJD(3) * t106 + qJD(4) * t184, qJD(3) * t33 + t39, qJD(3) * t6 - qJD(4) * t7 - qJD(5) * t65 - t925, 0, 0, 0, 0, 0, qJD(3) * t22 + qJD(4) * t27 - qJD(6) * t51, qJD(3) * t24 + qJD(4) * t30 - qJD(6) * t52; 0, 0, 0, 0, t770, t569 * qJD(3), t624 * t823, -t624 * t816, 0, t498 * qJD(3), -t497 * qJD(3) (-qJD(4) * t558 + t630 * t823) * t560, qJD(3) * t397 + qJD(4) * t398, -qJD(3) * t475 + t558 * t821, qJD(3) * t474 + t560 * t821, -t770, -qJD(3) * t164 - qJD(4) * t279, qJD(3) * t165 + qJD(4) * t280, qJD(3) * t38 + qJD(4) * t31 + qJD(5) * t152, qJD(3) * t42 + qJD(4) * t41 + qJD(5) * t64 (qJD(3) * t445 - qJD(6) * t390 - t438 * t857) * t392, qJD(3) * t116 - qJD(4) * t115 + qJD(6) * t153, qJD(3) * t169 + qJD(4) * t121 - t390 * t854, qJD(3) * t168 - qJD(4) * t120 - t392 * t854 (qJD(3) * t508 + qJD(4) * t1009) * t438, qJD(3) * t15 + qJD(4) * t9 - qJD(5) * t119 + qJD(6) * t46, qJD(3) * t16 + qJD(4) * t10 + qJD(5) * t122 + qJD(6) * t45; 0, 0, 0, 0, t769, t841, t776 * t916, -t776 * t917, 0, -qJD(3) * t563 - t727, qJD(3) * t561 - t726, t622 * t717 * t885 + t426, t605 * t823 + t356 + t843, t626 * t816 - t871, t630 * t816 + t872, -t538 (-t563 * t630 + t626 * t715) * qJD(3) + t276 * qJD(4) + t731 (t563 * t626 + t630 * t715) * qJD(3) + t275 * qJD(4) + t730 (-t259 * t570 - t260 * t567 + t494 * t509 - t508 * t673) * qJD(3) + t14 * qJD(4) + t99 + t747 (-t259 * t494 + t260 * t673 + t506 * t613) * qJD(3) + t12 * qJD(4) + t56 * qJD(5) + t752, t135 * qJD(4) - t198 + (t824 + t874) * t445, t850 + t73 * qJD(4) - t107 + (-t444 * t629 - t942) * t864, t845 + (t445 * t567 + t570 * t887) * qJD(3) + t81 * qJD(4) + t144 * qJD(6), t846 + (-t444 * t567 - t465 * t508) * qJD(3) + t77 * qJD(4) + t147 * qJD(6), t842 + t252 + (t865 + t873) * t508 (t109 * t567 + t236 * t465 - t334 * t508 + t444 * t494) * qJD(3) + t3 * qJD(4) + t79 * qJD(5) + t20 * qJD(6) + t750 (-t110 * t567 + t236 * t926 - t335 * t508 + t445 * t494) * qJD(3) + t4 * qJD(4) + t83 * qJD(5) + t19 * qJD(6) + t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t701, t720, t755 * t558, t755 * t560, t597, qJD(3) * t276 - qJD(4) * t409 - t729, qJD(3) * t275 + qJD(4) * t408 - t728, t14 * qJD(3) + (-t1009 * t621 + t438 * t957) * t959 + t748, t12 * qJD(3) + (-t202 * t957 + t203 * t621) * t959 + t263 * qJD(5) + t753, t135 * qJD(3) + t244 - (t859 + t874) * t1011, t73 * qJD(3) - t1007 * t438 + t125 - t851, qJD(3) * t81 + t1009 * t859 + t1020 + t876, qJD(3) * t77 + t278 + t422 - t877, t669, t3 * qJD(3) + (t625 * t738 - t953) * qJD(4) + t50 * qJD(6) + t754, t4 * qJD(3) + (t629 * t738 + t954) * qJD(4) + t48 * qJD(6) + t751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t725, qJD(3) * t56 + qJD(4) * t263 - t744, 0, 0, 0, 0, 0, qJD(3) * t79 + t278 - t878, qJD(3) * t83 + t1020 + t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t671, t677, t144 * qJD(3) + qJD(4) * t1019 + t390 * t775, t147 * qJD(3) + t286 * qJD(4) + t392 * t775, t318, qJD(3) * t20 + qJD(4) * t50 + qJD(5) * t286 - qJD(6) * t76 - t745, qJD(3) * t19 + qJD(4) * t48 + qJD(5) * t1019 + qJD(6) * t75 - t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, t302 * qJD(2), t303 * qJD(2), 0, 0, 0, 0, 0, -qJD(2) * t103, -qJD(2) * t106, -qJD(2) * t33 + t43, -qJD(2) * t6 - qJD(4) * t25 - qJD(5) * t67 - t924, 0, 0, 0, 0, 0, -qJD(2) * t22 + qJD(4) * t34 - qJD(6) * t60, -qJD(2) * t24 + qJD(4) * t37 - qJD(6) * t61; 0, 0, 0, 0, -t769, -t841, -t624 * t827, t867 * t917, 0, t727, t726, -t560 * t767 + t426, t356 - t843, -t630 * t821 + t871, t626 * t821 - t872, t538, -qJD(4) * t273 - t731, -qJD(4) * t274 - t730, -qJD(4) * t13 - t747 + t99, -qJD(4) * t11 - qJD(5) * t55 - t752, qJD(4) * t136 - t445 * t874 - t198, qJD(4) * t74 - t107 - t850, qJD(4) * t82 + qJD(6) * t145 - t845, qJD(4) * t78 + qJD(6) * t146 - t846, -t508 * t873 + t252 - t842, -qJD(4) * t1 + qJD(5) * t80 - qJD(6) * t17 - t750, -qJD(4) * t2 + qJD(5) * t84 - qJD(6) * t18 - t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t626 * t856, t605 * qJD(4), 0, 0, 0, -pkin(3) * t858, -pkin(3) * t856, -qJD(5) * t1008, qJD(4) * t235 + qJD(5) * t297, -t566 * t815 - t618 * t818, -qJD(6) * t472 + t567 * t762, qJD(4) * t407 - t853 * t929, -qJD(4) * t405 - t570 * t819, t818, qJD(4) * t91 - qJD(5) * t406 + qJD(6) * t223, qJD(4) * t92 - qJD(5) * t473 + qJD(6) * t222; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t700, t719, -t755 * t630, t755 * t626, qJD(2) * t802, -pkin(10) * t856 - t714, pkin(10) * t858 - t713 (t567 * t957 - t570 * t621) * t959 + t681 (-t494 * t621 - t673 * t957) * t959 + t423 * qJD(5) + t682, t849 - t447 + (-t820 - t825) * t567, t1006 * t567 + t522 + t883, t570 * t859 - t734, t555 - t736, t668 (t625 * t737 - t937) * qJD(4) + t189 * qJD(6) + t692 (t629 * t737 + t938) * qJD(4) + t187 * qJD(6) + t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t724, qJD(4) * t423 + t678, 0, 0, 0, 0, 0, t735, t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t661, -t663, t465 * t774 + t848, t570 * t732 + t847, t556 - t870, qJD(4) * t189 - qJD(6) * t335 - t680, qJD(4) * t187 + qJD(6) * t334 + t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t182, -qJD(2) * t184, -t743, qJD(2) * t7 + qJD(3) * t25, 0, 0, 0, 0, 0, -qJD(2) * t27 - qJD(3) * t34 - qJD(6) * t93, -qJD(2) * t30 - qJD(3) * t37 - qJD(6) * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t701, -t720 (-qJD(2) * t558 + t861) * t916, -t717 * t916, t597, qJD(3) * t273 + t729, qJD(3) * t274 + t728, qJD(3) * t13 - t748, qJD(3) * t11 + qJD(5) * t262 - t753, -qJD(3) * t136 + t1011 * t874 + t244, -qJD(3) * t74 + t125 + t851, -qJD(3) * t82 + qJD(6) * t288 - t876, -qJD(3) * t78 - t277 + t877, -t669, qJD(3) * t1 + qJD(6) * t49 - t1009 * t855 - t754, qJD(3) * t2 + qJD(5) * t284 + qJD(6) * t47 - t751; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t700, -t719, t767, -t626 * t827, qJD(2) * t801, t714, t713, -t681, qJD(5) * t424 - t682, t567 * t825 - t447 - t849, -0.2e1 * t567 * t768 + t522 - t883, qJD(6) * t467 + t734, -t448 + t736, -t668, qJD(6) * t188 - t570 * t855 - t692, qJD(5) * t465 + qJD(6) * t186 - t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t815, t604 * qJD(6), 0, 0, 0, t612 * t853, t612 * t852; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t723, 0, 0, 0, 0, 0, -t351, t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t670, -t662, -t721 + t852, t212, -t718, -t611 * t852 - t654, t611 * t853 - t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t65 + qJD(3) * t67, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t725, qJD(3) * t55 - qJD(4) * t262 + t744, 0, 0, 0, 0, 0, -qJD(3) * t80 - t277 + t422 + t878, -qJD(3) * t84 - qJD(4) * t284 + qJD(6) * t289 - t875; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t724, -qJD(4) * t424 - t678, 0, 0, 0, 0, 0, -t448 + t555 - t735, -qJD(4) * t465 - t733 - t819; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t723, 0, 0, 0, 0, 0, t351, -t722; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212, t732 + t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t51 + qJD(3) * t60 + qJD(4) * t93, qJD(2) * t52 + qJD(3) * t61 + qJD(4) * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t671, -t677, -qJD(3) * t145 - qJD(4) * t288 + t390 * t873, -qJD(3) * t146 + qJD(4) * t285 + t392 * t873, t318, qJD(3) * t17 - qJD(4) * t49 + qJD(5) * t285 + t745, qJD(3) * t18 - qJD(4) * t47 - qJD(5) * t289 + t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t661, t663, -qJD(4) * t467 + t625 * t826 - t848, qJD(4) * t462 + t567 * t824 - t847, t556 + t870, -qJD(4) * t188 + qJD(5) * t462 + t680, -qJD(4) * t186 + t567 * t855 - t679; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t670, t662, t721, t221, t718, t654, t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t221, t567 * t862 - t844; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t57;
