% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:03
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:02:46
% EndTime: 2019-03-09 05:03:05
% DurationCPUTime: 12.61s
% Computational Cost: add. (9871->511), mult. (21059->705), div. (0->0), fcn. (22636->10), ass. (0->411)
t698 = qJD(4) + qJD(6);
t412 = cos(qJ(3));
t630 = t412 / 0.2e1;
t408 = sin(qJ(4));
t622 = -qJ(5) - pkin(8);
t365 = t622 * t408;
t411 = cos(qJ(4));
t366 = t622 * t411;
t404 = sin(pkin(11));
t405 = cos(pkin(11));
t292 = t404 * t365 - t405 * t366;
t348 = -t404 * t408 + t405 * t411;
t233 = -pkin(9) * t348 - t292;
t407 = sin(qJ(6));
t410 = cos(qJ(6));
t349 = t404 * t411 + t405 * t408;
t667 = t405 * t365 + t404 * t366;
t680 = -pkin(9) * t349 + t667;
t699 = t410 * t233 - t407 * t680;
t704 = t630 * t699;
t468 = t407 * t233 + t410 * t680;
t409 = sin(qJ(3));
t579 = t409 * t411;
t581 = t408 * t409;
t326 = -t404 * t579 - t405 * t581;
t328 = -t404 * t581 + t405 * t579;
t487 = -t410 * t326 + t407 * t328;
t631 = -t412 / 0.2e1;
t397 = -pkin(4) * t411 - pkin(3);
t317 = -pkin(5) * t348 + t397;
t646 = -t317 / 0.2e1;
t703 = -t468 * t631 + t487 * t646;
t702 = t698 * t699;
t701 = t698 * t468;
t391 = -cos(pkin(10)) * pkin(1) - pkin(2);
t479 = -pkin(3) * t412 - t409 * pkin(8);
t342 = t391 + t479;
t334 = t411 * t342;
t515 = qJ(5) * t579;
t390 = sin(pkin(10)) * pkin(1) + pkin(7);
t595 = t390 * t408;
t232 = -t515 + t334 + (-pkin(4) - t595) * t412;
t369 = t412 * t390;
t514 = t411 * t369;
t285 = t408 * t342 + t514;
t262 = -qJ(5) * t581 + t285;
t593 = t405 * t262;
t117 = t404 * t232 + t593;
t517 = t408 * t369;
t284 = -t334 + t517;
t261 = -t284 - t515;
t134 = -t261 * t404 - t593;
t670 = t117 + t134;
t237 = t404 * t262;
t135 = t405 * t261 - t237;
t116 = t405 * t232 - t237;
t656 = -t116 / 0.2e1;
t697 = -t656 - t135 / 0.2e1;
t644 = t326 / 0.2e1;
t696 = t292 * t644;
t659 = t487 * qJD(6);
t676 = t487 * qJD(4);
t456 = t676 + t659;
t314 = t410 * t328;
t584 = t407 * t326;
t668 = t314 + t584;
t674 = t487 ^ 2 - t668 ^ 2;
t691 = qJD(1) * t674;
t272 = -t410 * t348 + t407 * t349;
t467 = t348 * t407 + t410 * t349;
t675 = t272 ^ 2 - t467 ^ 2;
t690 = qJD(3) * t675;
t689 = -t667 / 0.2e1;
t367 = t409 * t390;
t337 = pkin(4) * t581 + t367;
t264 = -pkin(5) * t326 + t337;
t688 = t264 * t487;
t687 = t264 * t668;
t554 = qJD(3) * t467;
t686 = t272 * t554;
t523 = t412 * qJD(1);
t685 = t487 * t523;
t555 = qJD(1) * t668;
t684 = t487 * t555;
t682 = t668 * t523;
t564 = t698 * t272;
t563 = t328 * t689 + t696;
t639 = -t349 / 0.2e1;
t640 = t348 / 0.2e1;
t681 = -t116 * t639 - t117 * t640 - t563;
t459 = t554 + t555;
t327 = t349 * t412;
t313 = t410 * t327;
t570 = t411 * t412;
t580 = t408 * t412;
t330 = -t404 * t580 + t405 * t570;
t582 = t407 * t330;
t478 = -t313 / 0.2e1 - t582 / 0.2e1;
t496 = t467 * t631;
t122 = t496 - t478;
t679 = qJD(3) * t122;
t678 = qJD(5) * t272;
t677 = qJD(5) * t487;
t600 = t467 * t412;
t426 = t600 / 0.2e1 + t478;
t673 = qJD(4) * t122 - qJD(6) * t426;
t464 = qJD(1) * t487 + qJD(3) * t272;
t671 = -t467 / 0.2e1;
t497 = t314 / 0.2e1;
t220 = t497 - t314 / 0.2e1;
t196 = t220 * qJD(6);
t425 = t496 + t478;
t664 = qJD(3) * t425;
t666 = t682 - t664 + t196;
t171 = 0.2e1 * t497 + t584;
t217 = t668 * qJD(4);
t566 = -t171 * qJD(6) - t217;
t665 = t682 + t566 - t679;
t663 = qJD(3) * t426;
t427 = -t600 / 0.2e1 + t478;
t662 = qJD(3) * t427;
t661 = qJD(5) * t467;
t572 = t410 * t330;
t583 = t407 * t327;
t444 = t583 / 0.2e1 - t572 / 0.2e1;
t400 = t408 ^ 2;
t402 = t411 ^ 2;
t381 = t402 - t400;
t526 = t409 * qJD(1);
t511 = t411 * t526;
t658 = qJD(3) * t381 - 0.2e1 * t408 * t511;
t457 = t698 * t467;
t657 = qJD(4) * t425 + qJD(6) * t427;
t655 = t117 / 0.2e1;
t654 = t668 / 0.2e1;
t652 = -t272 / 0.2e1;
t651 = t272 / 0.2e1;
t649 = t467 / 0.2e1;
t625 = t408 * pkin(4);
t320 = pkin(5) * t349 + t625;
t645 = -t320 / 0.2e1;
t642 = t328 / 0.2e1;
t641 = -t348 / 0.2e1;
t388 = pkin(4) * t580;
t638 = t388 / 0.2e1;
t637 = t404 / 0.2e1;
t636 = -t405 / 0.2e1;
t635 = t405 / 0.2e1;
t634 = -t408 / 0.2e1;
t633 = -t409 / 0.2e1;
t632 = t409 / 0.2e1;
t629 = pkin(4) * t404;
t628 = pkin(9) * t326;
t626 = t328 * pkin(9);
t624 = t409 * pkin(3);
t623 = t412 * pkin(8);
t30 = 0.2e1 * t668 * t671 + (t651 - t652) * t487;
t40 = t272 * t487 - t467 * t668;
t621 = t30 * qJD(4) + t40 * qJD(6);
t58 = -t272 * t654 - t487 * t649;
t59 = t487 * t671 + t652 * t668;
t620 = t58 * qJD(4) + t59 * qJD(6);
t619 = pkin(4) * qJD(4);
t75 = -pkin(5) * t412 + t116 - t626;
t618 = t407 * t75;
t86 = t117 + t628;
t617 = t407 * t86;
t92 = t134 - t628;
t616 = t407 * t92;
t93 = t135 - t626;
t615 = t407 * t93;
t614 = t410 * t75;
t613 = t410 * t86;
t612 = t410 * t92;
t611 = t410 * t93;
t229 = t572 - t583;
t338 = t369 + t388;
t265 = pkin(5) * t327 + t338;
t43 = t613 + t618;
t370 = -t623 + t624;
t360 = t411 * t370;
t362 = t408 * t367;
t266 = t409 * pkin(4) - qJ(5) * t570 + t360 + t362;
t359 = t408 * t370;
t516 = t390 * t579;
t283 = -qJ(5) * t580 + t359 - t516;
t158 = t404 * t266 + t405 * t283;
t107 = -pkin(9) * t327 + t158;
t577 = t410 * t107;
t157 = t405 * t266 - t283 * t404;
t100 = pkin(5) * t409 - pkin(9) * t330 + t157;
t590 = t407 * t100;
t7 = (t577 + t590) * t412 - t43 * t409 + t265 * t668 + t264 * t229;
t610 = t7 * qJD(1);
t44 = t612 - t615;
t521 = pkin(4) * t579;
t455 = pkin(5) * t328 + t521;
t25 = t44 * t412 - t455 * t487 - t687;
t609 = qJD(1) * t25;
t45 = t611 + t616;
t26 = t45 * t412 + t455 * t668 - t688;
t608 = qJD(1) * t26;
t42 = -t614 + t617;
t33 = -t412 * t42 - t688;
t607 = qJD(1) * t33;
t34 = -t412 * t43 - t687;
t606 = qJD(1) * t34;
t46 = -t116 * t328 + t117 * t326;
t605 = qJD(1) * t46;
t495 = t655 + t134 / 0.2e1;
t498 = -t579 / 0.2e1;
t21 = pkin(4) * t412 * t498 + t326 * t495 - t328 * t697;
t603 = t21 * qJD(1);
t22 = -t670 * t328 + (-t116 + t135) * t326;
t602 = t22 * qJD(1);
t23 = -t116 * t330 - t117 * t327 - t157 * t328 + t158 * t326;
t601 = t23 * qJD(1);
t513 = pkin(4) * t405 + pkin(5);
t335 = t407 * t629 - t410 * t513;
t597 = t335 * t412;
t336 = t407 * t513 + t410 * t629;
t596 = t336 * t412;
t594 = t404 * t326;
t592 = t405 * t328;
t589 = t407 * t107;
t578 = t410 * t100;
t401 = t409 ^ 2;
t571 = t411 * t401;
t226 = t313 + t582;
t54 = -t226 * t668 - t229 * t487;
t569 = t54 * qJD(1);
t500 = t272 * t631;
t127 = t500 - t444;
t499 = t272 * t630;
t130 = -t499 - t444;
t568 = -t130 * qJD(4) - t127 * qJD(6);
t128 = t500 + t444;
t131 = -t499 + t444;
t567 = -t131 * qJD(4) - t128 * qJD(6);
t218 = t668 * qJD(6);
t565 = -t171 * qJD(4) - t218;
t403 = t412 ^ 2;
t382 = t403 - t401;
t108 = -t226 * t412 + t409 * t487;
t561 = qJD(1) * t108;
t109 = t229 * t412 - t409 * t668;
t560 = qJD(1) * t109;
t559 = qJD(1) * t130;
t558 = qJD(1) * t131;
t207 = -t284 * t412 - t401 * t595;
t557 = qJD(1) * t207;
t208 = -t285 * t412 - t390 * t571;
t556 = qJD(1) * t208;
t553 = qJD(3) * t317;
t552 = qJD(3) * t408;
t551 = qJD(3) * t411;
t550 = qJD(4) * t408;
t549 = qJD(4) * t411;
t548 = qJD(4) * t412;
t547 = qJD(5) * t412;
t545 = qJD(6) * t317;
t544 = t122 * qJD(1);
t543 = t425 * qJD(1);
t542 = t427 * qJD(1);
t541 = t127 * qJD(1);
t540 = t127 * qJD(3);
t539 = t128 * qJD(3);
t538 = t130 * qJD(3);
t537 = t131 * qJD(3);
t154 = t284 * t409 + (-t362 + t360) * t412;
t536 = t154 * qJD(1);
t155 = t359 * t412 + (-t285 + t514) * t409;
t535 = t155 * qJD(1);
t532 = t220 * qJD(1);
t357 = t382 * t408;
t529 = t357 * qJD(1);
t358 = t403 * t411 - t571;
t528 = t358 * qJD(1);
t527 = t382 * qJD(1);
t525 = t409 * qJD(3);
t524 = t409 * qJD(4);
t522 = t412 * qJD(3);
t520 = t625 / 0.2e1;
t519 = t92 / 0.2e1 + t86 / 0.2e1;
t518 = -t93 / 0.2e1 + t75 / 0.2e1;
t510 = t272 * t525;
t509 = t408 * t551;
t508 = t408 * t548;
t507 = t411 * t548;
t506 = t391 * t526;
t505 = t391 * t523;
t504 = t408 * t549;
t503 = t409 * t522;
t502 = t409 * t523;
t501 = t411 * t525;
t491 = t689 + t667 / 0.2e1;
t489 = t369 / 0.2e1 + t638;
t484 = t521 / 0.2e1;
t483 = -qJD(4) + t523;
t482 = t408 * t501;
t480 = t523 - qJD(4) / 0.2e1;
t6 = (t578 - t589) * t412 + t42 * t409 - t265 * t487 - t264 * t226;
t477 = t6 * qJD(1);
t431 = (-t327 * t637 + t330 * t636) * pkin(4);
t4 = t326 * t491 + t348 * t697 + t349 * t495 + t431;
t476 = t4 * qJD(1);
t16 = t157 * t644 + t158 * t642 + t327 * t656 + t330 * t655 + t337 * t632 + t338 * t631;
t28 = t116 * t157 + t117 * t158 + t337 * t338;
t475 = t28 * qJD(1) + t16 * qJD(2);
t27 = t116 * t134 + t117 * t135 + t337 * t521;
t474 = t27 * qJD(1) + t21 * qJD(2);
t473 = qJD(3) * t30 + t691;
t472 = qJD(1) * t30 + t690;
t471 = qJD(3) * t40 + t691;
t470 = qJD(1) * t40 + t690;
t139 = -t326 * t327 + t328 * t330 - t409 * t412;
t466 = t16 * qJD(1) + t139 * qJD(2);
t465 = t483 * t409;
t463 = qJD(1) * t171 + t554;
t178 = t348 * t326 + t328 * t349;
t245 = t326 ^ 2 + t328 ^ 2;
t462 = qJD(1) * t245 + qJD(3) * t178;
t288 = t348 ^ 2 + t349 ^ 2;
t461 = qJD(1) * t178 + qJD(3) * t288;
t448 = t594 / 0.2e1 - t592 / 0.2e1;
t182 = (t498 + t448) * pkin(4);
t447 = t348 * t637 + t349 * t636;
t231 = (t634 + t447) * pkin(4);
t460 = qJD(1) * t182 + qJD(3) * t231;
t454 = t623 / 0.2e1 - t624 / 0.2e1;
t437 = t454 * t408;
t286 = t359 / 0.2e1 - t437;
t453 = pkin(3) * t551 - qJD(1) * t286;
t436 = t454 * t411;
t287 = -t360 / 0.2e1 + t436;
t452 = pkin(3) * t552 - qJD(1) * t287;
t450 = t157 * t635 + t158 * t637;
t449 = t328 * t641 + t349 * t644;
t446 = -t590 / 0.2e1 - t577 / 0.2e1;
t445 = -t589 / 0.2e1 + t578 / 0.2e1;
t443 = -qJD(3) * t59 + t684;
t442 = qJD(3) * t58 - t684;
t441 = -qJD(1) * t59 + t686;
t440 = qJD(1) * t58 - t686;
t439 = t411 * t465;
t343 = (t400 / 0.2e1 - t402 / 0.2e1) * t409;
t438 = -qJD(1) * t343 + t509;
t435 = qJD(1) * t408 * t571 + qJD(3) * t343;
t356 = t381 * t401;
t434 = qJD(1) * t356 + 0.2e1 * t482;
t432 = (-t327 * t635 + t330 * t637) * pkin(4);
t415 = t697 * t292 + t670 * t689;
t2 = (t337 * t634 + t397 * t498 + t450) * pkin(4) + t415;
t37 = t491 * t328 + t432 + t638;
t65 = t397 * t625;
t430 = -t2 * qJD(1) - t37 * qJD(2) + t65 * qJD(3);
t76 = t272 * t320 + t317 * t467;
t414 = t264 * t671 + t455 * t652 + t487 * t645 + t646 * t668 + t704;
t418 = t335 * t633 + t445;
t8 = t414 + t418;
t429 = -t8 * qJD(1) + qJD(2) * t122 + t76 * qJD(3);
t77 = -t272 * t317 + t320 * t467;
t413 = t264 * t651 + t455 * t671 + t645 * t668 - t703;
t417 = t336 * t633 + t446;
t9 = t413 + t417;
t428 = -t9 * qJD(1) - t131 * qJD(2) + t77 * qJD(3);
t13 = t597 / 0.2e1 + t518 * t410 - t519 * t407;
t424 = qJD(1) * t13 - qJD(4) * t335;
t138 = t292 * t348 - t349 * t667;
t165 = t632 + t449;
t31 = t489 + t681;
t423 = -qJD(1) * t31 - qJD(2) * t165 + qJD(3) * t138;
t419 = t264 * t649 + t317 * t654 - t704;
t17 = -t419 + t445;
t422 = qJD(1) * t17 + qJD(2) * t426 - t467 * t553;
t420 = t264 * t652 + t703;
t18 = -t420 + t446;
t421 = qJD(1) * t18 + qJD(2) * t128 + t272 * t553;
t12 = -t596 / 0.2e1 + t519 * t410 + t518 * t407;
t416 = qJD(1) * t12 + qJD(2) * t220 + qJD(4) * t336;
t395 = -t526 / 0.2e1;
t394 = t526 / 0.2e1;
t393 = t525 / 0.2e1;
t385 = t408 * t525;
t347 = t480 * t409;
t340 = t343 * qJD(4);
t325 = (-qJD(6) / 0.2e1 + t480) * t409;
t322 = t336 * qJD(6);
t321 = t335 * qJD(6);
t260 = t467 * t525;
t242 = t362 + t360 / 0.2e1 + t436;
t241 = t516 - t359 / 0.2e1 - t437;
t230 = pkin(4) * t447 + t520;
t195 = t220 * qJD(4);
t181 = pkin(4) * t448 + t484;
t169 = t178 * qJD(5);
t166 = t632 - t449;
t52 = t538 - t685;
t38 = t667 * t642 - t696 - t388 / 0.2e1 + t432 + t563;
t36 = t483 * t487 - t537 - t659;
t32 = t489 - t681;
t20 = t419 + t445;
t19 = t420 + t446;
t15 = t596 / 0.2e1 - t613 / 0.2e1 - t618 / 0.2e1 - t615 / 0.2e1 + t612 / 0.2e1;
t14 = -t597 / 0.2e1 + t617 / 0.2e1 - t614 / 0.2e1 - t611 / 0.2e1 - t616 / 0.2e1;
t11 = -t413 + t417;
t10 = -t414 + t418;
t5 = t116 * t641 + t135 * t640 + t326 * t689 + t670 * t639 + t667 * t644 + t431;
t3 = pkin(4) * t450 + t337 * t520 + t397 * t484 - t415;
t1 = qJD(3) * t16 + qJD(4) * t21;
t24 = [0, 0, 0, 0, t503, t382 * qJD(3), 0, 0, 0, t391 * t525, t391 * t522, -t401 * t504 + t402 * t503, -t356 * qJD(4) - 0.2e1 * t412 * t482, -t358 * qJD(3) + t409 * t508, t357 * qJD(3) + t409 * t507, -t503, -qJD(3) * t154 - qJD(4) * t208, qJD(3) * t155 + qJD(4) * t207, qJD(3) * t23 + qJD(4) * t22 + qJD(5) * t245, qJD(3) * t28 + qJD(4) * t27 + qJD(5) * t46 (qJD(3) * t229 - t456) * t668, qJD(3) * t54 + t674 * t698, -t109 * qJD(3) + t412 * t456, -t108 * qJD(3) + (t218 + t217) * t412, -t503, -t6 * qJD(3) - t25 * qJD(4) - t34 * qJD(6) + t547 * t668, t7 * qJD(3) + t26 * qJD(4) + t33 * qJD(6) - t487 * t547; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, t502, t527, t522, -t525, 0, -t390 * t522 + t506, t390 * t525 + t505, -t340 + (t402 * t526 + t509) * t412, -0.2e1 * t409 * t504 + t658 * t412, t385 - t528, t501 + t529, -t347, -t536 + (t408 * t479 - t514) * qJD(3) + t242 * qJD(4), t535 + (t411 * t479 + t517) * qJD(3) + t241 * qJD(4), t601 + (-t157 * t349 + t158 * t348 - t292 * t327 - t330 * t667) * qJD(3) + t5 * qJD(4) + t169 (t157 * t667 + t158 * t292 + t338 * t397) * qJD(3) + t3 * qJD(4) + t32 * qJD(5) + t475, t229 * t459 + t620, t569 + (-t226 * t467 - t229 * t272) * qJD(3) + t621, t260 - t560 + t567, -t510 - t561 - t673, -t325 (t226 * t317 + t265 * t272 + t409 * t468) * qJD(3) + t10 * qJD(4) - t425 * qJD(5) + t20 * qJD(6) - t477, t610 + (t229 * t317 + t265 * t467 + t409 * t699) * qJD(3) + t11 * qJD(4) + t130 * qJD(5) + t19 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t435, -t434, t408 * t465, t439, t393, qJD(3) * t242 - qJD(4) * t285 - t556, qJD(3) * t241 + qJD(4) * t284 + t557, t602 + t5 * qJD(3) + (-t326 * t405 - t328 * t404) * t619, t3 * qJD(3) + t181 * qJD(5) + (t134 * t405 + t135 * t404) * t619 + t474, t442, t473, t36, t665, t393, qJD(3) * t10 + qJD(4) * t44 + qJD(6) * t15 - t609, qJD(3) * t11 - qJD(4) * t45 + qJD(6) * t14 + t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t462, qJD(3) * t32 + qJD(4) * t181 + t605, 0, 0, 0, 0, 0, t666, t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t443, t471, -t539 - t676 + (-qJD(6) + t523) * t487, t682 + t565 + t663, t393, qJD(3) * t20 + qJD(4) * t15 + qJD(5) * t220 - qJD(6) * t43 - t606, qJD(3) * t19 + qJD(4) * t14 + qJD(6) * t42 + t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139 * qJD(3), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t525, -t522, 0, 0, 0, 0, 0, -t501 - t508, t385 - t507 (t327 * t349 + t330 * t348) * qJD(3) (t292 * t330 - t327 * t667 + t397 * t409) * qJD(3) + t38 * qJD(4) + t166 * qJD(5) + t466, 0, 0, 0, 0, 0, t510 + t657, t260 + t568; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t408 * t522 - t411 * t524, t408 * t524 - t411 * t522, 0, t603 + t38 * qJD(3) + (-t592 + t594) * t619, 0, 0, 0, 0, 0, t566 + t664, -t538 + t456; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166 * qJD(3), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t565 + t662, -t540 + t456; 0, 0, 0, 0, -t502, -t527, 0, 0, 0, -t506, -t505, -t402 * t502 - t340, 0.2e1 * t408 * t439, -t507 + t528, t508 - t529, t347, qJD(4) * t287 + t536, qJD(4) * t286 - t535, -qJD(4) * t4 + t169 - t601, -qJD(4) * t2 - qJD(5) * t31 - t475, -t229 * t555 + t620, -t569 + t621, t560 + t568, t561 - t657, t325, -qJD(4) * t8 - qJD(5) * t122 - qJD(6) * t17 + t477, -qJD(4) * t9 + qJD(5) * t131 - qJD(6) * t18 - t610; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t37 - qJD(5) * t165 - t466, 0, 0, 0, 0, 0, t673, t567; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t504, t381 * qJD(4), 0, 0, 0, -pkin(3) * t550, -pkin(3) * t549, qJD(5) * t288, qJD(4) * t65 + qJD(5) * t138, -t564 * t467, t698 * t675, 0, 0, 0, qJD(4) * t76 + t467 * t545, qJD(4) * t77 - t272 * t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t438, t658, -t483 * t411, t483 * t408, t395, -pkin(8) * t549 - t452, pkin(8) * t550 - t453 (-t348 * t405 - t349 * t404) * t619 - t476, t230 * qJD(5) + (-t292 * t405 + t404 * t667) * t619 + t430, t440, t472, -t559 - t564, -t457 - t543, t395, t429 + t702, t428 - t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t461, qJD(4) * t230 + t423, 0, 0, 0, 0, 0, -t544, t558; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t441, t470, -t541 - t564, -t457 - t542, t395, -t422 + t702, -t421 - t701; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t435, t434 (-t408 * t526 + t551) * t412 (-t511 - t552) * t412, t393, -qJD(3) * t287 + t556, -qJD(3) * t286 - t557, qJD(3) * t4 - t602, qJD(3) * t2 + qJD(5) * t182 - t474, -t442, -t473, t52, -t666, t393, qJD(3) * t8 - qJD(5) * t668 - qJD(6) * t12 + t609, qJD(3) * t9 - qJD(6) * t13 - t608 + t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t37 - t603, 0, 0, 0, 0, 0, -t196 - t679, t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t438, -t658, t411 * t523, -t408 * t523, t394, t452, t453, t476, qJD(5) * t231 - t430, -t440, -t472, t559, t543, t394, -t429 - t661, -t428 + t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322, t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t460, 0, 0, 0, 0, 0, -t459, t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t532, 0, -t322 - t416, t321 - t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t462, qJD(3) * t31 - qJD(4) * t182 - t605, 0, 0, 0, 0, 0, -t665, t36; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t165 * qJD(3), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t461, -qJD(4) * t231 - t423, 0, 0, 0, 0, 0, t457 + t544, -t558 - t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t460, 0, 0, 0, 0, 0, t459, -t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t463, -t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t443, -t471, t540 - t685, t195 - t682 + t662, t393, qJD(3) * t17 + qJD(4) * t12 - qJD(5) * t171 + t606, qJD(3) * t18 + qJD(4) * t13 - t607 + t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t195 + t663, t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t441, -t470, t541, t542, t394, t422 - t661, t421 + t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t532, 0, t416, t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t463, t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t24;
