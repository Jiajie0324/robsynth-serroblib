% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:03
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:02:41
% EndTime: 2019-03-09 05:03:19
% DurationCPUTime: 30.15s
% Computational Cost: add. (28322->892), mult. (57590->1171), div. (0->0), fcn. (62154->10), ass. (0->674)
t1134 = qJD(4) + qJD(6);
t1050 = cos(qJ(6));
t689 = sin(pkin(11));
t692 = sin(qJ(3));
t1032 = cos(pkin(11));
t693 = cos(qJ(4));
t836 = t1032 * t693;
t691 = sin(qJ(4));
t974 = t691 * t692;
t601 = -t689 * t974 + t692 * t836;
t1046 = t601 * pkin(9);
t1039 = t692 * pkin(8);
t694 = cos(qJ(3));
t1038 = t694 * pkin(3);
t674 = -cos(pkin(10)) * pkin(1) - pkin(2);
t748 = t674 - t1038;
t719 = -t748 + t1039;
t673 = sin(pkin(10)) * pkin(1) + pkin(7);
t652 = t694 * t673;
t886 = t693 * t652;
t528 = -t691 * t719 + t886;
t704 = -qJ(5) * t974 + t528;
t1103 = t689 * t704;
t1036 = -qJ(5) - pkin(8);
t708 = (t1036 * t692 + t748) * t693;
t991 = t673 * t691;
t701 = (-pkin(4) - t991) * t694 + t708;
t272 = t1032 * t701 - t1103;
t697 = -t694 * pkin(5) - t1046 + t272;
t205 = t1050 * t697;
t837 = t1032 * t691;
t988 = t689 * t693;
t630 = t837 + t988;
t598 = t630 * t692;
t1049 = pkin(9) * t598;
t1091 = t1032 * t704;
t273 = t689 * t701 + t1091;
t224 = t273 - t1049;
t690 = sin(qJ(6));
t987 = t690 * t224;
t127 = -t205 + t987;
t888 = t691 * t652;
t479 = t708 - t888;
t292 = t1032 * t479 - t1103;
t231 = t292 - t1046;
t881 = t1050 * t231;
t291 = -t479 * t689 - t1091;
t230 = t291 + t1049;
t986 = t690 * t230;
t136 = t881 + t986;
t1133 = t127 + t136;
t578 = t1050 * t601;
t979 = t690 * t598;
t1100 = t578 - t979;
t1013 = t1100 ^ 2;
t834 = t1050 * t598 + t690 * t601;
t1015 = t834 ^ 2;
t1127 = -t1013 + t1015;
t1132 = qJD(1) * t1127;
t628 = t689 * t691 - t836;
t504 = t1050 * t628 + t690 * t630;
t1008 = t504 ^ 2;
t616 = t1050 * t630;
t976 = t690 * t628;
t1099 = t616 - t976;
t1009 = t1099 ^ 2;
t1128 = t1008 - t1009;
t1131 = qJD(3) * t1128;
t696 = t690 * t697;
t883 = t1050 * t224;
t128 = t883 + t696;
t882 = t1050 * t230;
t985 = t690 * t231;
t135 = t882 - t985;
t1130 = t128 + t135;
t1125 = -t504 / 0.2e1;
t650 = t692 * t673;
t613 = pkin(4) * t974 + t650;
t489 = pkin(5) * t598 + t613;
t1129 = t1125 * t489;
t1090 = t834 * qJD(6);
t1111 = t834 * qJD(4);
t776 = t1111 + t1090;
t682 = -pkin(4) * t693 - pkin(3);
t587 = pkin(5) * t628 + t682;
t1072 = t587 / 0.2e1;
t1122 = t1099 / 0.2e1;
t1126 = t1072 * t1100 + t1122 * t489;
t1070 = -t598 / 0.2e1;
t1124 = -t601 / 0.2e1;
t1081 = -t834 / 0.2e1;
t1010 = t1100 * t504;
t1123 = t1010 / 0.2e1;
t1076 = -t1099 / 0.2e1;
t1080 = t1100 / 0.2e1;
t1121 = t489 * t834;
t1007 = t504 * t834;
t934 = qJD(3) * t1099;
t869 = t504 * t934;
t891 = t694 * qJD(1);
t1120 = t834 * t891;
t940 = qJD(1) * t1100;
t873 = t834 * t940;
t961 = t1134 * t504;
t1062 = -t630 / 0.2e1;
t1064 = -t628 / 0.2e1;
t817 = t1036 * t1032;
t775 = t691 * t817;
t534 = t1036 * t988 + t775;
t840 = t689 * t1036;
t632 = t691 * t840;
t633 = t1036 * t836;
t536 = -t633 + t632;
t960 = t1070 * t536 + t1124 * t534;
t1119 = -t1062 * t272 - t1064 * t273 - t960;
t1044 = t630 * pkin(9);
t706 = t534 - t1044;
t429 = t1050 * t706;
t839 = -pkin(9) * t628 + t632;
t444 = -t633 + t839;
t980 = t690 * t444;
t257 = -t429 + t980;
t705 = t690 * t706;
t876 = t1050 * t444;
t259 = t876 + t705;
t966 = t1080 * t257 + t1081 * t259;
t1118 = -t1122 * t127 - t1125 * t128 - t966;
t782 = t934 + t940;
t935 = qJD(3) * t504;
t941 = qJD(1) * t834;
t788 = t935 + t941;
t600 = t630 * t694;
t577 = t1050 * t600;
t973 = t691 * t694;
t655 = t689 * t973;
t603 = t694 * t836 - t655;
t977 = t690 * t603;
t814 = -t577 / 0.2e1 - t977 / 0.2e1;
t1053 = -t694 / 0.2e1;
t847 = t1099 * t1053;
t279 = t847 - t814;
t1117 = qJD(3) * t279;
t1116 = qJD(5) * t504;
t1115 = qJD(5) * t834;
t1114 = t1100 * t489;
t1113 = t1100 * t891;
t165 = t1076 * t834 + t1100 * t1125;
t1112 = t165 * qJD(6);
t1011 = t1100 * t1099;
t1108 = -qJD(1) * t165 + t869;
t1107 = -qJD(3) * t165 + t873;
t1006 = t1099 * t694;
t731 = t1006 / 0.2e1 + t814;
t1106 = qJD(4) * t279 - qJD(6) * t731;
t1105 = 0.2e1 * t691;
t1104 = -t257 / 0.2e1;
t1102 = t273 + t291;
t634 = t693 * t817;
t533 = -t632 + t634;
t1101 = t533 + t536;
t1058 = t689 / 0.2e1;
t884 = t1032 / 0.2e1;
t819 = t694 * t884;
t849 = t630 * t1053;
t969 = t693 * t694;
t483 = t1058 * t969 + t691 * t819 + t849;
t570 = t601 * t891;
t590 = t601 * qJD(4);
t1098 = qJD(3) * t483 - t570 + t590;
t730 = t847 + t814;
t1095 = qJD(3) * t730;
t823 = t578 / 0.2e1;
t426 = t823 - t578 / 0.2e1;
t400 = t426 * qJD(6);
t1097 = t1113 - t1095 + t400;
t349 = 0.2e1 * t823 - t979;
t423 = t1100 * qJD(4);
t963 = -t349 * qJD(6) - t423;
t1096 = t1113 + t963 - t1117;
t1094 = qJD(3) * t731;
t732 = -t1006 / 0.2e1 + t814;
t1093 = qJD(3) * t732;
t875 = t1050 * t603;
t978 = t690 * t600;
t741 = t978 / 0.2e1 - t875 / 0.2e1;
t1089 = qJD(4) * t730 + qJD(6) * t732;
t596 = t598 ^ 2;
t1088 = t601 ^ 2;
t1087 = t630 ^ 2;
t1086 = t128 / 0.2e1;
t442 = t634 - t839;
t878 = t1050 * t442;
t535 = t693 * t840 + t775;
t443 = t535 - t1044;
t981 = t690 * t443;
t256 = t878 - t981;
t1085 = -t256 / 0.2e1;
t1084 = -t272 / 0.2e1;
t1083 = t273 / 0.2e1;
t1082 = -t429 / 0.2e1;
t1047 = t601 * pkin(5);
t970 = t693 * t692;
t889 = pkin(4) * t970;
t532 = t889 + t1047;
t1074 = t532 / 0.2e1;
t1073 = -t534 / 0.2e1;
t1042 = t691 * pkin(4);
t1045 = t630 * pkin(5);
t591 = t1042 + t1045;
t1071 = t591 / 0.2e1;
t1068 = t601 / 0.2e1;
t1043 = t689 * pkin(4);
t874 = t1032 * pkin(4);
t820 = t874 + pkin(5);
t611 = t1043 * t690 - t1050 * t820;
t1067 = -t611 / 0.2e1;
t1066 = t611 / 0.2e1;
t612 = t1043 * t1050 + t690 * t820;
t1065 = -t612 / 0.2e1;
t822 = t616 / 0.2e1;
t1063 = t628 / 0.2e1;
t671 = pkin(4) * t973;
t1061 = t671 / 0.2e1;
t1060 = -t682 / 0.2e1;
t1059 = -t689 / 0.2e1;
t1057 = -t691 / 0.2e1;
t1056 = -t692 / 0.2e1;
t1055 = t692 / 0.2e1;
t1054 = -t693 / 0.2e1;
t1052 = t694 / 0.2e1;
t852 = t1100 * t1122;
t855 = t834 * t1125;
t77 = t1007 / 0.2e1 - t855 + t1011 / 0.2e1 + t852;
t1051 = t77 * qJD(5);
t1048 = t600 * pkin(5);
t1041 = t692 * pkin(3);
t1040 = t692 * pkin(4);
t1037 = t694 * pkin(8);
t763 = -t1007 / 0.2e1 + t852;
t765 = -t855 - t1011 / 0.2e1;
t76 = t763 + t765;
t1035 = t76 * qJD(4);
t1034 = pkin(4) * qJD(4);
t124 = -t1011 + t1007;
t78 = -t763 + t765;
t1033 = t78 * qJD(4) + t124 * qJD(6);
t58 = t135 * t694 - t532 * t834 - t1114;
t1031 = qJD(1) * t58;
t59 = t1100 * t532 + t136 * t694 - t1121;
t1030 = qJD(1) * t59;
t81 = -t127 * t694 - t1121;
t1029 = qJD(1) * t81;
t82 = -t128 * t694 - t1114;
t1028 = qJD(1) * t82;
t1027 = qJD(3) * t76;
t1026 = t127 * t1100;
t1025 = t128 * t834;
t14 = -t1130 * t1100 - t1133 * t834;
t1024 = t14 * qJD(1);
t653 = -t1037 + t1041;
t639 = t693 * t653;
t641 = t691 * t650;
t542 = t641 + t639;
t491 = -qJ(5) * t969 + t1040 + t542;
t454 = t1032 * t491;
t638 = t691 * t653;
t887 = t673 * t970;
t543 = t638 - t887;
t521 = -qJ(5) * t973 + t543;
t989 = t689 * t521;
t325 = t454 - t989;
t239 = pkin(5) * t692 - pkin(9) * t603 + t325;
t880 = t1050 * t239;
t453 = t689 * t491;
t497 = t1032 * t521;
t326 = t497 + t453;
t247 = -pkin(9) * t600 + t326;
t983 = t690 * t247;
t140 = t880 - t983;
t879 = t1050 * t247;
t984 = t690 * t239;
t141 = t879 + t984;
t433 = t577 + t977;
t436 = t875 - t978;
t15 = -t1100 * t140 + t127 * t436 - t128 * t433 - t141 * t834;
t1023 = t15 * qJD(1);
t614 = t652 + t671;
t490 = t614 + t1048;
t32 = t1100 * t490 - t128 * t692 + t141 * t694 + t489 * t436;
t1022 = t32 * qJD(1);
t1020 = t1100 * t611;
t1018 = t834 * t1099;
t1017 = t433 * t1099;
t1014 = t834 * t612;
t527 = t693 * t719 + t888;
t1005 = t527 * t694;
t1004 = t528 * t694;
t845 = t292 / 0.2e1 + t1084;
t846 = t1083 + t291 / 0.2e1;
t848 = -t970 / 0.2e1;
t53 = pkin(4) * t694 * t848 - t598 * t846 + t601 * t845;
t1003 = t53 * qJD(1);
t1000 = t542 * t692;
t999 = t543 * t692;
t55 = -t272 * t603 - t273 * t600 - t325 * t601 - t326 * t598;
t998 = t55 * qJD(1);
t997 = t598 * t628;
t996 = t598 * t689;
t995 = t600 * t630;
t994 = t601 * t628;
t993 = t630 * t598;
t992 = t630 * t601;
t685 = t691 ^ 2;
t990 = t685 * t694;
t982 = t690 * t442;
t975 = t691 * t598;
t679 = t692 * t694;
t686 = t692 ^ 2;
t971 = t693 * t686;
t303 = t1018 / 0.2e1;
t162 = t1123 + t303;
t968 = t162 * qJD(4) - t1112;
t313 = -t1010 / 0.2e1;
t163 = -t1122 * t834 + t313;
t967 = t163 * qJD(4) + t1112;
t854 = t504 * t1053;
t284 = t854 - t741;
t853 = t504 * t1052;
t287 = -t853 - t741;
t965 = -t287 * qJD(4) - t284 * qJD(6);
t285 = t854 + t741;
t288 = -t853 + t741;
t964 = -t288 * qJD(4) - t285 * qJD(6);
t424 = t1100 * qJD(6);
t962 = -t349 * qJD(4) - t424;
t687 = t693 ^ 2;
t664 = t687 - t685;
t688 = t694 ^ 2;
t665 = t688 - t686;
t137 = -t272 * t601 - t273 * t598;
t958 = qJD(1) * t137;
t170 = t291 * t694 - t598 * t889 - t613 * t601;
t955 = qJD(1) * t170;
t171 = t292 * t694 - t613 * t598 + t601 * t889;
t954 = qJD(1) * t171;
t248 = -t433 * t694 + t692 * t834;
t952 = qJD(1) * t248;
t249 = -t1100 * t692 + t436 * t694;
t951 = qJD(1) * t249;
t949 = qJD(1) * t279;
t948 = qJD(1) * t730;
t947 = qJD(1) * t732;
t946 = qJD(1) * t284;
t945 = qJD(1) * t287;
t944 = qJD(1) * t288;
t411 = -t686 * t991 - t1005;
t943 = qJD(1) * t411;
t412 = -t673 * t971 - t1004;
t942 = qJD(1) * t412;
t437 = t692 * t598 - t600 * t694;
t939 = qJD(1) * t437;
t438 = -t601 * t692 + t603 * t694;
t938 = qJD(1) * t438;
t937 = qJD(1) * t598;
t936 = qJD(1) * t601;
t933 = qJD(3) * t587;
t932 = qJD(3) * t630;
t931 = qJD(3) * t691;
t930 = qJD(3) * t693;
t929 = qJD(4) * t1099;
t928 = qJD(4) * t630;
t927 = qJD(4) * t691;
t926 = qJD(4) * t693;
t925 = qJD(4) * t694;
t924 = qJD(5) * t694;
t500 = t822 - t616 / 0.2e1;
t923 = qJD(6) * t500;
t921 = qJD(6) * t1099;
t920 = qJD(6) * t587;
t120 = -t273 * t692 + t326 * t694 + t614 * t601 + t613 * t603;
t919 = t120 * qJD(1);
t154 = -t1100 * t433 - t436 * t834;
t918 = t154 * qJD(1);
t191 = (t1000 - t1005) * t693 + (t999 + t1004) * t691;
t917 = t191 * qJD(1);
t916 = t284 * qJD(3);
t915 = t285 * qJD(3);
t914 = t287 * qJD(3);
t913 = t288 * qJD(3);
t322 = t527 * t692 + (t542 - 0.2e1 * t641) * t694;
t912 = t322 * qJD(1);
t323 = t543 * t694 + (-t528 + 0.2e1 * t886) * t692;
t911 = t323 * qJD(1);
t328 = -t603 * t598 - t601 * t600;
t910 = t328 * qJD(1);
t905 = t483 * qJD(1);
t733 = -t988 / 0.2e1 - t837 / 0.2e1;
t485 = (t1062 + t733) * t694;
t904 = t485 * qJD(1);
t486 = t628 * t1053 + t693 * t819 - t655 / 0.2e1;
t903 = t486 * qJD(1);
t902 = t486 * qJD(3);
t487 = t655 / 0.2e1 + (t1064 - t836 / 0.2e1) * t694;
t901 = t487 * qJD(1);
t900 = t487 * qJD(3);
t899 = t598 * qJD(4);
t622 = (t685 / 0.2e1 - t687 / 0.2e1) * t692;
t898 = t622 * qJD(4);
t621 = t628 * qJD(4);
t636 = t665 * t691;
t897 = t636 * qJD(1);
t637 = t688 * t693 - t971;
t896 = t637 * qJD(1);
t895 = t665 * qJD(1);
t894 = t692 * qJD(1);
t893 = t692 * qJD(3);
t892 = t692 * qJD(4);
t890 = t694 * qJD(3);
t683 = t1042 / 0.2e1;
t885 = -t1032 / 0.2e1;
t877 = t1050 * t443;
t871 = t598 * t936;
t870 = t693 * t894;
t868 = t504 * t893;
t867 = t628 * t932;
t866 = t628 * t893;
t865 = t691 * t930;
t864 = t691 * t925;
t863 = t693 * t925;
t862 = t630 * t621;
t861 = t674 * t894;
t860 = t674 * t891;
t859 = t691 * t926;
t858 = t692 * t890;
t857 = t692 * t891;
t856 = t693 * t893;
t851 = t994 / 0.2e1;
t850 = -t993 / 0.2e1;
t844 = -t453 / 0.2e1 - t497 / 0.2e1;
t843 = t535 / 0.2e1 + t1073;
t842 = t536 / 0.2e1 + t533 / 0.2e1;
t841 = t652 / 0.2e1 + t1061;
t838 = t1032 * t601;
t835 = (t685 + t687) * t694;
t830 = qJD(3) * t485 - t570;
t660 = t889 / 0.2e1;
t829 = t660 + t1047 / 0.2e1;
t828 = t683 + t1045 / 0.2e1;
t827 = -qJD(4) + t891;
t826 = t691 * t856;
t825 = t686 * t859;
t824 = -t881 / 0.2e1;
t821 = t891 - qJD(4) / 0.2e1;
t818 = -t1038 - t1039;
t816 = t205 / 0.2e1 + t611 * t1052;
t815 = t454 / 0.2e1 - t989 / 0.2e1;
t10 = t141 * t1080 + t436 * t1086 + t140 * t1081 + t127 * t433 / 0.2e1 + t490 * t1053 + t489 * t1055;
t21 = -t127 * t140 + t128 * t141 + t489 * t490;
t813 = t21 * qJD(1) + t10 * qJD(2);
t11 = t136 * t1080 - t1025 / 0.2e1 + t135 * t1081 + t1026 / 0.2e1 + t532 * t1053;
t20 = -t127 * t135 + t128 * t136 + t489 * t532;
t812 = t20 * qJD(1) + t11 * qJD(2);
t46 = t1053 * t614 + t1055 * t613 + t1068 * t326 + t1070 * t325 + t1083 * t603 + t1084 * t600;
t61 = t272 * t325 + t273 * t326 + t613 * t614;
t811 = t61 * qJD(1) + t46 * qJD(2);
t60 = t272 * t291 + t273 * t292 + t613 * t889;
t810 = t60 * qJD(1) + t53 * qJD(2);
t809 = -t542 * t691 + t543 * t693;
t143 = t1100 * t436 + t433 * t834 - t679;
t808 = t10 * qJD(1) + t143 * qJD(2);
t807 = t11 * qJD(1);
t31 = t127 * t692 + t140 * t694 - t489 * t433 - t490 * t834;
t806 = t31 * qJD(1);
t39 = -t1025 + t1026;
t805 = qJD(1) * t39;
t54 = -t1102 * t601 + (t272 - t292) * t598;
t804 = t54 * qJD(1);
t296 = t598 * t600 + t601 * t603 - t679;
t803 = t46 * qJD(1) + t296 * qJD(2);
t150 = t1013 + t1015;
t802 = qJD(1) * t150 + qJD(3) * t77;
t801 = qJD(3) * t78 + t1132;
t155 = -t1101 * t630 + (t534 - t535) * t628;
t720 = (t1059 * t600 + t603 * t885) * pkin(4);
t29 = t598 * t843 + t601 * t842 + t628 * t845 + t630 * t846 + t720;
t800 = t29 * qJD(1) - t155 * qJD(3);
t173 = t1008 + t1009;
t799 = qJD(1) * t77 + qJD(3) * t173;
t798 = qJD(1) * t78 + t1131;
t797 = t827 * t692;
t119 = -t272 * t692 + t325 * t694 - t614 * t598 - t613 * t600;
t796 = t119 * qJD(1);
t166 = (t999 / 0.2e1 + t1004 / 0.2e1) * t693 + (-t1000 / 0.2e1 + t1005 / 0.2e1) * t691 + (t686 / 0.2e1 - t688 / 0.2e1) * t673;
t197 = t673 ^ 2 * t679 - t527 * t542 + t528 * t543;
t795 = t197 * qJD(1) + t166 * qJD(2);
t555 = t692 * t835 - t679;
t794 = -t166 * qJD(1) - t555 * qJD(2);
t793 = qJD(3) * t124 + t1132;
t792 = qJD(1) * t124 + t1131;
t767 = -t1020 / 0.2e1 + t1014 / 0.2e1;
t167 = t767 + t829;
t764 = -t1065 * t504 + t1067 * t1099;
t195 = t764 + t828;
t791 = qJD(1) * t167 + qJD(3) * t195;
t240 = -t992 + t997;
t377 = t596 - t1088;
t790 = qJD(1) * t377 + qJD(3) * t240;
t624 = t628 ^ 2;
t441 = t624 - t1087;
t789 = qJD(1) * t240 + qJD(3) * t441;
t388 = 0.2e1 * t822 - t976;
t787 = qJD(1) * t349 + qJD(3) * t388;
t358 = t992 + t997;
t457 = t596 + t1088;
t786 = qJD(1) * t457 + qJD(3) * t358;
t531 = t624 + t1087;
t785 = qJD(1) * t358 + qJD(3) * t531;
t735 = -t996 / 0.2e1 - t838 / 0.2e1;
t379 = (t848 + t735) * pkin(4);
t734 = t1059 * t628 + t630 * t885;
t440 = (t1057 + t734) * pkin(4);
t784 = qJD(1) * t379 + qJD(3) * t440;
t783 = qJD(1) * t426 + qJD(3) * t500;
t780 = -qJD(3) * t628 - t937;
t779 = t932 + t936;
t778 = qJD(6) * t388 + t929;
t777 = t424 + t423;
t774 = t1037 / 0.2e1 - t1041 / 0.2e1;
t773 = t1048 / 0.2e1 + t841;
t747 = t774 * t691;
t529 = t638 / 0.2e1 - t747;
t772 = pkin(3) * t930 - qJD(1) * t529;
t746 = t774 * t693;
t530 = -t639 / 0.2e1 + t746;
t771 = pkin(3) * t931 - qJD(1) * t530;
t769 = t1065 * t141 + t1066 * t140;
t766 = t1065 * t436 + t1067 * t433;
t762 = t1065 * t433 + t1066 * t436;
t761 = t693 * t797;
t760 = qJD(3) * t162 + t1100 * t941;
t759 = qJD(1) * t162 + t1099 * t935;
t758 = qJD(3) * t163 - t873;
t757 = qJD(1) * t163 - t869;
t510 = t993 / 0.2e1;
t350 = t851 + t510;
t752 = -qJD(3) * t350 - t871;
t751 = qJD(1) * t350 + t867;
t511 = -t994 / 0.2e1;
t351 = t850 + t511;
t750 = qJD(3) * t351 - t871;
t749 = -qJD(1) * t351 + t867;
t552 = -qJD(1) * t622 + t865;
t745 = -t985 / 0.2e1 + t882 / 0.2e1;
t744 = -t984 / 0.2e1 - t879 / 0.2e1;
t743 = -t983 / 0.2e1 + t880 / 0.2e1;
t742 = -t981 / 0.2e1 + t878 / 0.2e1;
t537 = qJD(1) * t691 * t971 + qJD(3) * t622;
t635 = t664 * t686;
t740 = qJD(1) * t635 + 0.2e1 * t826;
t739 = -qJD(3) * t664 + t1105 * t870;
t258 = t877 + t982;
t709 = t1053 * t591 + t1080 * t258 + t1081 * t256 + t966;
t26 = t709 + t766;
t700 = t127 * t1085 + t258 * t1086 + t135 * t1104 + t136 * t259 / 0.2e1 + t489 * t1071 + t532 * t1072;
t3 = t700 + t769;
t56 = -t256 * t257 + t258 * t259 + t587 * t591;
t738 = t3 * qJD(1) + t26 * qJD(2) + t56 * qJD(3);
t698 = t258 * t1081 + t834 * t1104 + (t1085 - t259 / 0.2e1) * t1100 + t1130 * t1076 + t1133 * t1125;
t4 = -t698 + t762;
t41 = (-t257 - t258) * t504 + (-t256 - t259) * t1099;
t737 = -t4 * qJD(1) + t76 * qJD(2) + t41 * qJD(3);
t736 = t1058 * t326 + t325 * t884;
t112 = t1099 * t257 - t259 * t504;
t156 = t1055 + t1123 - t1018 / 0.2e1;
t23 = t773 + t1118;
t729 = qJD(1) * t23 + qJD(2) * t156 - qJD(3) * t112;
t721 = (t1058 * t603 + t600 * t885) * pkin(4);
t121 = t598 * t842 - t601 * t843 + t1061 + t721;
t199 = t1042 * t682 + t533 * t534 + t535 * t536;
t707 = t533 * t1084 - t273 * t535 / 0.2e1 + t291 * t1073 - t292 * t536 / 0.2e1;
t27 = (t1057 * t613 + t682 * t848 + t736) * pkin(4) + t707;
t728 = -t27 * qJD(1) - t121 * qJD(2) + t199 * qJD(3);
t210 = t1099 * t587 + t504 * t591;
t703 = t1053 * t256 + t1071 * t834 + t1074 * t504 + t1126;
t712 = t1056 * t611 + t743;
t33 = -t703 + t712;
t727 = -qJD(1) * t33 + qJD(2) * t279 + qJD(3) * t210;
t211 = t1099 * t591 - t504 * t587;
t702 = t1052 * t258 + t1071 * t1100 - t1072 * t834 + t1074 * t1099 + t1129;
t711 = t1056 * t612 + t744;
t34 = -t702 + t711;
t726 = -qJD(1) * t34 - qJD(2) * t288 + qJD(3) * t211;
t295 = -t534 * t630 - t536 * t628;
t340 = t1055 + t851 + t850;
t79 = t841 + t1119;
t725 = -qJD(1) * t79 - qJD(2) * t340 + qJD(3) * t295;
t145 = t1082 + t877 / 0.2e1 + (t444 / 0.2e1 + t442 / 0.2e1) * t690;
t43 = t824 + (-t230 / 0.2e1 - t224 / 0.2e1) * t690 + t816;
t724 = qJD(1) * t43 - qJD(3) * t145 - qJD(4) * t611;
t713 = t1053 * t535 - t1060 * t598 + t1063 * t613;
t131 = (t601 * t1057 + (t1054 * t630 + t1059) * t692) * pkin(4) + t713 + t844;
t474 = t1042 * t630 - t628 * t682;
t723 = -qJD(1) * t131 - qJD(2) * t487 + qJD(3) * t474;
t714 = t1052 * t533 + t1060 * t601 + t1062 * t613;
t132 = (-t975 / 0.2e1 + (t1054 * t628 + t884) * t692) * pkin(4) + t714 + t815;
t473 = t1042 * t628 + t630 * t682;
t484 = (t630 / 0.2e1 + t733) * t694;
t722 = -qJD(1) * t132 - qJD(2) * t484 + qJD(3) * t473;
t715 = t1052 * t259 + t1126;
t48 = -t715 + t743;
t718 = qJD(1) * t48 + qJD(2) * t731 - t1099 * t933;
t716 = t1053 * t257 + t1081 * t587 + t1129;
t49 = -t716 + t744;
t717 = qJD(1) * t49 + qJD(2) * t285 + t504 * t933;
t699 = t705 / 0.2e1 + t876 / 0.2e1;
t144 = t699 + t742;
t695 = t612 * t1052 - t696 / 0.2e1 - t883 / 0.2e1;
t42 = -t695 + t745;
t710 = qJD(1) * t42 + qJD(2) * t426 + qJD(3) * t144 + qJD(4) * t612;
t680 = t687 * t694;
t678 = -t894 / 0.2e1;
t677 = t894 / 0.2e1;
t676 = t893 / 0.2e1;
t668 = t691 * t893;
t627 = t821 * t692;
t610 = t630 * t893;
t597 = (-qJD(6) / 0.2e1 + t821) * t692;
t593 = t612 * qJD(6);
t592 = t611 * qJD(6);
t520 = t603 * t628;
t488 = t694 * t733 + t849;
t472 = t1099 * t893;
t456 = t486 * qJD(4);
t455 = t487 * qJD(4);
t452 = t641 + t639 / 0.2e1 + t746;
t451 = t887 - t638 / 0.2e1 - t747;
t439 = pkin(4) * t734 + t683;
t399 = t426 * qJD(4);
t378 = pkin(4) * t735 + t660;
t375 = -t598 * t891 + t902;
t347 = t358 * qJD(5);
t346 = t351 * qJD(4);
t345 = t350 * qJD(4);
t341 = t511 + t510 + t1055;
t321 = t436 * t504;
t278 = t598 * t827 - t900;
t238 = t240 * qJD(4);
t196 = -t764 + t828;
t168 = -t767 + t829;
t157 = t313 + t303 + t1055;
t148 = t914 - t1120;
t147 = -t699 + t742;
t146 = t980 / 0.2e1 + t1082 - t877 / 0.2e1 - t982 / 0.2e1;
t134 = t1040 * t1059 + t601 * t683 + t630 * t660 - t713 + t844;
t133 = pkin(4) * t975 / 0.2e1 + t628 * t660 + t874 * t1055 - t714 + t815;
t125 = qJD(3) * t166;
t122 = t535 * t1068 + t533 * t1070 - t671 / 0.2e1 + t721 + t960;
t111 = t827 * t834 - t1090 - t913;
t80 = t841 - t1119;
t51 = t715 + t743;
t50 = t716 + t744;
t45 = t695 + t745;
t44 = t987 / 0.2e1 + t824 - t986 / 0.2e1 - t816;
t36 = t702 + t711;
t35 = t703 + t712;
t30 = t1102 * t1062 + t272 * t1063 + t292 * t1064 + t535 * t1070 - t598 * t1073 + t1101 * t1124 + t720;
t28 = pkin(4) * t736 + t613 * t683 + t660 * t682 - t707;
t25 = t709 - t766;
t24 = t773 - t1118;
t19 = qJD(3) * t46 + qJD(4) * t53;
t5 = t698 + t762;
t2 = t700 - t769;
t1 = qJD(3) * t10 + qJD(4) * t11;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t858, t665 * qJD(3), 0, -t858, 0, 0, t674 * t893, t674 * t890, 0, 0, t687 * t858 - t825, -t635 * qJD(4) - 0.2e1 * t694 * t826, -t637 * qJD(3) + t692 * t864, t685 * t858 + t825, t636 * qJD(3) + t692 * t863, -t858, -qJD(3) * t322 - qJD(4) * t412, qJD(3) * t323 + qJD(4) * t411, -qJD(3) * t191, qJD(3) * t197 (qJD(3) * t603 - t899) * t601, qJD(3) * t328 + qJD(4) * t377, -t438 * qJD(3) + t694 * t899 (qJD(3) * t600 + t590) * t598, -t437 * qJD(3) + t590 * t694, -t858, -t119 * qJD(3) - t170 * qJD(4) + t601 * t924, t120 * qJD(3) + t171 * qJD(4) - t598 * t924, qJD(3) * t55 + qJD(4) * t54 + qJD(5) * t457, qJD(3) * t61 + qJD(4) * t60 + qJD(5) * t137 (qJD(3) * t436 - t776) * t1100, qJD(3) * t154 + t1127 * t1134, -t249 * qJD(3) + t694 * t776 (qJD(3) * t433 + t777) * t834, -t248 * qJD(3) + t694 * t777, -t858, -t31 * qJD(3) - t58 * qJD(4) - t82 * qJD(6) + t1100 * t924, t32 * qJD(3) + t59 * qJD(4) + t81 * qJD(6) - t834 * t924, qJD(3) * t15 + qJD(4) * t14 + qJD(5) * t150, qJD(3) * t21 + qJD(4) * t20 + qJD(5) * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t857, t895, t890, -t857, -t893, 0, -t673 * t890 + t861, t673 * t893 + t860, 0, 0, -t898 + (t687 * t894 + t865) * t694 (t680 - t990) * qJD(3) + (-qJD(4) - t891) * t970 * t1105, t668 - t896, t898 + (t685 * t894 - t865) * t694, t856 + t897, -t627, -t912 + (t691 * t818 - t886) * qJD(3) + t452 * qJD(4), t911 + (t693 * t818 + t888) * qJD(3) + t451 * qJD(4), qJD(3) * t809 - t917 (-pkin(3) * t652 + pkin(8) * t809) * qJD(3) + t795, t603 * t779 + t346, t910 + (-t520 - t995) * qJD(3) + t238, -t455 + t610 - t938, -t600 * t780 + t345, -qJD(4) * t483 - t866 - t939, -t627 (t534 * t692 + t600 * t682 + t614 * t628) * qJD(3) + t133 * qJD(4) - t485 * qJD(5) - t796, t919 + (-t536 * t692 + t603 * t682 + t614 * t630) * qJD(3) + t134 * qJD(4) + t486 * qJD(5), t998 + (-t325 * t630 - t326 * t628 - t534 * t603 - t536 * t600) * qJD(3) + t30 * qJD(4) + t347 (t325 * t534 + t326 * t536 + t614 * t682) * qJD(3) + t28 * qJD(4) + t80 * qJD(5) + t811, t436 * t782 + t967, t918 + (-t321 - t1017) * qJD(3) + t1033, t472 - t951 + t964, t433 * t788 + t968, -t1106 - t868 - t952, -t597 (-t257 * t692 + t433 * t587 + t490 * t504) * qJD(3) + t35 * qJD(4) - t730 * qJD(5) + t51 * qJD(6) - t806, t1022 + (t1099 * t490 - t259 * t692 + t436 * t587) * qJD(3) + t36 * qJD(4) + t287 * qJD(5) + t50 * qJD(6), t1023 + (-t1099 * t140 - t141 * t504 + t257 * t436 - t259 * t433) * qJD(3) + t5 * qJD(4) + t1051 (-t140 * t257 + t141 * t259 + t490 * t587) * qJD(3) + t2 * qJD(4) + t24 * qJD(5) + t813; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t537, -t740, t691 * t797, t537, t761, t676, qJD(3) * t452 - qJD(4) * t528 - t942, qJD(3) * t451 + qJD(4) * t527 + t943, 0, 0, t750, t790, t278, -t752, -t1098, t676, qJD(3) * t133 + qJD(4) * t291 - t955, qJD(3) * t134 - qJD(4) * t292 + t954, t30 * qJD(3) + (t1032 * t598 - t601 * t689) * t1034 + t804, t28 * qJD(3) + (t1032 * t291 + t292 * t689) * t1034 + t378 * qJD(5) + t810, t758, t801, t111, t760, t1096, t676, qJD(3) * t35 + qJD(4) * t135 + qJD(6) * t45 - t1031, qJD(3) * t36 - qJD(4) * t136 + qJD(6) * t44 + t1030, t1024 + t5 * qJD(3) + (-t1100 * t612 - t611 * t834) * qJD(4), t2 * qJD(3) + (-t135 * t611 + t136 * t612) * qJD(4) + t168 * qJD(5) + t812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t830, t375, t786, qJD(3) * t80 + qJD(4) * t378 + t958, 0, 0, 0, 0, 0, 0, t1097, t148, t802, qJD(3) * t24 + qJD(4) * t168 + t805; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1107, t793, -t915 - t1111 + (-qJD(6) + t891) * t834, t1107, t1113 + t962 + t1094, t676, qJD(3) * t51 + qJD(4) * t45 + qJD(5) * t426 - qJD(6) * t128 - t1028, qJD(3) * t50 + qJD(4) * t44 + qJD(6) * t127 + t1029, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t555 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t296, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t893, -t890, 0, 0, 0, 0, 0, 0, 0, 0, -t856 - t864, t668 - t863 (t680 + t990) * qJD(3) (pkin(8) * t835 - t1041) * qJD(3) - t794, 0, 0, 0, 0, 0, 0, qJD(4) * t488 + t866, t610 - t456 (-t520 + t995) * qJD(3) (-t534 * t600 + t536 * t603 + t682 * t692) * qJD(3) + t122 * qJD(4) + t341 * qJD(5) + t803, 0, 0, 0, 0, 0, 0, t1089 + t868, t472 + t965 (-t321 + t1017) * qJD(3) + t1035 (t257 * t433 + t259 * t436 + t587 * t692) * qJD(3) + t25 * qJD(4) + t157 * qJD(5) + t808; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t691 * t890 - t693 * t892, t691 * t892 - t693 * t890, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t488 - t590, t899 - t902, 0, t1003 + t122 * qJD(3) + (-t838 - t996) * t1034, 0, 0, 0, 0, 0, 0, t963 + t1095, -t914 + t776, t1027, t25 * qJD(3) + (-t1014 + t1020) * qJD(4) + t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t341, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t962 + t1093, -t916 + t776, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t857, -t895, 0, t857, 0, 0, -t861, -t860, 0, 0, -t687 * t857 - t898, t761 * t1105, -t863 + t896, -t685 * t857 + t898, t864 - t897, t627, qJD(4) * t530 + t912, qJD(4) * t529 - t911, t917, -t795, -t603 * t936 + t346, t238 - t910, -t456 + t938, -t600 * t937 + t345, -qJD(4) * t485 + t939, t627, -qJD(4) * t132 - qJD(5) * t483 + t796, -qJD(4) * t131 + qJD(5) * t487 - t919, -qJD(4) * t29 + t347 - t998, -qJD(4) * t27 - qJD(5) * t79 - t811, -t436 * t940 + t967, -t918 + t1033, t951 + t965, -t433 * t941 + t968, -t1089 + t952, t597, -qJD(4) * t33 - qJD(5) * t279 - qJD(6) * t48 + t806, -qJD(4) * t34 + qJD(5) * t288 - qJD(6) * t49 - t1022, -qJD(4) * t4 - t1023 + t1051, qJD(4) * t3 - qJD(5) * t23 - t813; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t794, 0, 0, 0, 0, 0, 0, -qJD(4) * t484, -t455, 0, -qJD(4) * t121 - qJD(5) * t340 - t803, 0, 0, 0, 0, 0, 0, t1106, t964, t1035, qJD(4) * t26 - qJD(5) * t156 - t808; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t859, t664 * qJD(4), 0, -t859, 0, 0, -pkin(3) * t927, -pkin(3) * t926, 0, 0, -t862, t441 * qJD(4), 0, t862, 0, 0, t473 * qJD(4), t474 * qJD(4), qJD(4) * t155 + qJD(5) * t531, qJD(4) * t199 + qJD(5) * t295, -t961 * t1099, t1134 * t1128, 0 (t921 + t929) * t504, 0, 0, qJD(4) * t210 + t1099 * t920, qJD(4) * t211 - t504 * t920, qJD(4) * t41 + qJD(5) * t173, qJD(4) * t56 + qJD(5) * t112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t552, -t739, -t827 * t693, -t552, t827 * t691, t678, -pkin(8) * t926 - t771, pkin(8) * t927 - t772, 0, 0, -t749, t789, -t621 - t903, t751, -t904 - t928, t678, qJD(4) * t533 + t722, -qJD(4) * t535 + t723 (t1032 * t628 - t630 * t689) * t1034 - t800 (t1032 * t533 + t535 * t689) * t1034 + t439 * qJD(5) + t728, t757, t798, -t945 - t961, t759, -t778 - t948, t678, qJD(4) * t256 + qJD(6) * t147 + t727, -qJD(4) * t258 + qJD(6) * t146 + t726 (-t1099 * t612 - t504 * t611) * qJD(4) + t737 (-t256 * t611 + t258 * t612) * qJD(4) + t196 * qJD(5) + t738; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t905, t901, t785, qJD(4) * t439 + t725, 0, 0, 0, 0, 0, 0, t923 - t949, t944, t799, qJD(4) * t196 - t729; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1108, t792, -t946 - t961, t1108, -qJD(4) * t388 - t921 - t947, t678, qJD(4) * t147 + qJD(5) * t500 - qJD(6) * t259 - t718, qJD(4) * t146 + qJD(6) * t257 - t717, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t537, t740 (-t691 * t894 + t930) * t694, -t537 (-t870 - t931) * t694, t676, -qJD(3) * t530 + t942, -qJD(3) * t529 - t943, 0, 0, -t750, -t790, t375, t752, t830, t676, qJD(3) * t132 - qJD(5) * t601 + t955, qJD(3) * t131 + qJD(5) * t598 - t954, qJD(3) * t29 - t804, qJD(3) * t27 + qJD(5) * t379 - t810, -t758, -t801, t148, -t760, -t1097, t676, qJD(3) * t33 - qJD(5) * t1100 - qJD(6) * t42 + t1031, qJD(3) * t34 - qJD(6) * t43 - t1030 + t1115, qJD(3) * t4 - t1024, -qJD(3) * t3 - qJD(5) * t167 - t812; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t484, t900, 0, qJD(3) * t121 - t1003, 0, 0, 0, 0, 0, 0, -t400 - t1117, t913, -t1027, -qJD(3) * t26 - t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t552, t739, t693 * t891, t552, -t691 * t891, t677, t771, t772, 0, 0, t749, -t789, t903, -t751, t904, t677, -qJD(5) * t630 - t722, qJD(5) * t628 - t723, t800, qJD(5) * t440 - t728, -t757, -t798, t945, -t759, -t923 + t948, t677, -qJD(5) * t1099 - qJD(6) * t144 - t727, qJD(6) * t145 + t1116 - t726, -t737, -qJD(5) * t195 - t738; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t593, t592, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t779, -t780, 0, t784, 0, 0, 0, 0, 0, 0, -t782, t788, 0, -t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t783, 0, -t593 - t710, t592 - t724, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1098, t278, -t786, qJD(3) * t79 - qJD(4) * t379 - t958, 0, 0, 0, 0, 0, 0, -t1096, t111, -t802, qJD(3) * t23 + qJD(4) * t167 - t805; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t340, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t905 + t928, -t621 - t901, -t785, -qJD(4) * t440 - t725, 0, 0, 0, 0, 0, 0, t778 + t949, -t944 - t961, -t799, qJD(4) * t195 + t729; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t779, t780, 0, -t784, 0, 0, 0, 0, 0, 0, t782, -t788, 0, t791; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t787, -t788, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1107, -t793, t916 - t1120, -t1107, t399 - t1113 + t1093, t676, qJD(3) * t48 + qJD(4) * t42 - qJD(5) * t349 + t1028, qJD(3) * t49 + qJD(4) * t43 - t1029 + t1115, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t399 + t1094, t915, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1108, -t792, t946, -t1108, qJD(4) * t500 + t947, t677, qJD(4) * t144 - qJD(5) * t388 + t718, -qJD(4) * t145 + t1116 + t717, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t783, 0, t710, t724, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t787, t788, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t6;
