% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:03
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPR2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:02:34
% EndTime: 2019-03-09 05:02:53
% DurationCPUTime: 8.38s
% Computational Cost: add. (11064->503), mult. (26031->683), div. (0->0), fcn. (18010->10), ass. (0->248)
t242 = sin(qJ(6));
t243 = sin(qJ(4));
t245 = cos(qJ(4));
t302 = t245 * qJD(3);
t244 = sin(qJ(3));
t312 = qJD(1) * t244;
t207 = t243 * t312 - t302;
t310 = qJD(3) * t243;
t209 = t245 * t312 + t310;
t238 = sin(pkin(11));
t240 = cos(pkin(11));
t280 = t207 * t240 + t209 * t238;
t367 = cos(qJ(6));
t262 = t367 * t280;
t268 = -t207 * t238 + t209 * t240;
t303 = qJD(6) * t242;
t298 = qJD(3) * qJD(4);
t305 = qJD(4) * t244;
t291 = t243 * t305;
t246 = cos(qJ(3));
t292 = t246 * t302;
t377 = t291 - t292;
t147 = qJD(1) * t377 - t245 * t298;
t304 = qJD(4) * t245;
t290 = t244 * t304;
t308 = qJD(3) * t246;
t293 = t243 * t308;
t256 = t290 + t293;
t148 = qJD(1) * t256 + t243 * t298;
t91 = -t147 * t238 + t148 * t240;
t92 = -t147 * t240 - t148 * t238;
t24 = qJD(6) * t262 + t242 * t91 + t268 * t303 - t367 * t92;
t311 = qJD(1) * t246;
t225 = -qJD(4) + t311;
t221 = -qJD(6) + t225;
t71 = t242 * t268 + t262;
t353 = t221 * t71;
t390 = -t24 - t353;
t364 = t71 ^ 2;
t381 = -t242 * t280 + t268 * t367;
t365 = t381 ^ 2;
t389 = -t364 + t365;
t363 = t71 * t381;
t299 = qJD(1) * qJD(3);
t231 = t244 * t299;
t228 = sin(pkin(10)) * pkin(1) + pkin(7);
t215 = t228 * qJD(1);
t176 = qJD(2) * t244 + t215 * t246;
t155 = qJD(3) * pkin(8) + t176;
t230 = -cos(pkin(10)) * pkin(1) - pkin(2);
t198 = -pkin(3) * t246 - pkin(8) * t244 + t230;
t161 = t198 * qJD(1);
t103 = t155 * t245 + t161 * t243;
t370 = t246 * qJD(2) - t215 * t244;
t158 = t370 * qJD(3);
t273 = pkin(3) * t244 - pkin(8) * t246;
t212 = t273 * qJD(3);
t197 = qJD(1) * t212;
t55 = -qJD(4) * t103 - t243 * t158 + t197 * t245;
t38 = pkin(4) * t231 + t147 * qJ(5) - t209 * qJD(5) + t55;
t306 = qJD(4) * t243;
t54 = -t155 * t306 + t158 * t245 + t161 * t304 + t197 * t243;
t44 = -qJ(5) * t148 - qJD(5) * t207 + t54;
t13 = t238 * t38 + t240 * t44;
t11 = -pkin(9) * t91 + t13;
t102 = -t155 * t243 + t161 * t245;
t82 = -qJ(5) * t209 + t102;
t75 = -pkin(4) * t225 + t82;
t83 = -qJ(5) * t207 + t103;
t78 = t238 * t83;
t36 = t240 * t75 - t78;
t376 = pkin(9) * t268;
t26 = -pkin(5) * t225 + t36 - t376;
t287 = qJD(6) * t367;
t352 = t240 * t83;
t37 = t238 * t75 + t352;
t383 = pkin(9) * t280;
t30 = t37 - t383;
t12 = -t238 * t44 + t240 * t38;
t8 = pkin(5) * t231 - pkin(9) * t92 + t12;
t254 = -t11 * t367 - t242 * t8 - t26 * t287 + t30 * t303;
t154 = -qJD(3) * pkin(3) - t370;
t126 = t207 * pkin(4) + qJD(5) + t154;
t76 = pkin(5) * t280 + t126;
t388 = t71 * t76 + t254;
t211 = t273 * qJD(1);
t124 = t211 * t245 - t243 * t370;
t324 = t245 * t246;
t264 = pkin(4) * t244 - qJ(5) * t324;
t362 = -qJ(5) - pkin(8);
t283 = qJD(4) * t362;
t387 = -qJD(1) * t264 - t243 * qJD(5) + t245 * t283 - t124;
t125 = t211 * t243 + t245 * t370;
t295 = t243 * t311;
t301 = t245 * qJD(5);
t386 = -qJ(5) * t295 - t243 * t283 + t125 - t301;
t25 = qJD(6) * t381 + t242 * t92 + t367 * t91;
t350 = t381 * t221;
t385 = -t25 - t350;
t202 = t238 * t245 + t240 * t243;
t191 = t202 * qJD(4);
t372 = t246 * t202;
t316 = -qJD(1) * t372 + t191;
t201 = t238 * t243 - t240 * t245;
t192 = t201 * qJD(4);
t378 = t201 * t311 - t192;
t6 = t242 * t26 + t30 * t367;
t2 = -qJD(6) * t6 - t242 * t11 + t367 * t8;
t384 = -t381 * t76 + t2;
t348 = t238 * t386 + t240 * t387;
t347 = t238 * t387 - t240 * t386;
t382 = t280 * t268;
t380 = pkin(5) * t312 + pkin(9) * t378 - t348;
t379 = pkin(9) * t316 - t347;
t375 = t103 * t225 - t55;
t374 = t102 * t225 + t54;
t274 = -t176 + (-t295 + t306) * pkin(4);
t210 = t228 * t324;
t136 = t198 * t243 + t210;
t236 = t244 ^ 2;
t267 = qJD(1) * t236 - t225 * t246;
t369 = -t225 * t291 - t267 * t302;
t309 = qJD(3) * t244;
t368 = t246 * t91 - t280 * t309;
t366 = pkin(4) * t238;
t217 = t362 * t243;
t218 = t362 * t245;
t140 = t217 * t240 + t218 * t238;
t118 = -pkin(9) * t202 + t140;
t141 = t217 * t238 - t218 * t240;
t119 = -pkin(9) * t201 + t141;
t58 = t118 * t242 + t119 * t367;
t361 = t58 * qJD(6) - t242 * t379 + t367 * t380;
t57 = t118 * t367 - t119 * t242;
t360 = -t57 * qJD(6) + t242 * t380 + t367 * t379;
t229 = pkin(4) * t240 + pkin(5);
t184 = t229 * t242 + t366 * t367;
t42 = -t238 * t82 - t352;
t31 = t42 + t383;
t43 = t240 * t82 - t78;
t32 = t43 - t376;
t359 = -qJD(6) * t184 + t242 * t32 - t31 * t367;
t173 = t202 * t244;
t174 = t201 * t244;
t113 = -t173 * t242 - t174 * t367;
t114 = t191 * t244 + t238 * t293 - t240 * t292;
t255 = t201 * t305;
t250 = -qJD(3) * t372 + t255;
t40 = t114 * t367 + t173 * t287 - t174 * t303 - t242 * t250;
t358 = -t113 * t25 + t40 * t71;
t112 = t173 * t367 - t174 * t242;
t41 = qJD(6) * t113 - t114 * t242 - t250 * t367;
t357 = -t112 * t231 + t221 * t41;
t328 = t228 * t243;
t314 = t212 * t245 + t309 * t328;
t56 = -t244 * t301 + t264 * qJD(3) + (-t210 + (qJ(5) * t244 - t198) * t243) * qJD(4) + t314;
t317 = t198 * t304 + t212 * t243;
t325 = t244 * t245;
t62 = (-qJ(5) * qJD(4) - qJD(3) * t228) * t325 + (-qJD(5) * t244 + (-qJ(5) * qJD(3) - qJD(4) * t228) * t246) * t243 + t317;
t28 = t238 * t56 + t240 * t62;
t356 = t114 * t280 + t174 * t91;
t355 = t201 * t287 + t202 * t303 + t242 * t316 - t367 * t378;
t131 = -t201 * t242 + t202 * t367;
t354 = t131 * qJD(6) + t242 * t378 + t316 * t367;
t183 = t229 * t367 - t242 * t366;
t349 = -qJD(6) * t183 + t242 * t31 + t32 * t367;
t344 = t126 * t244;
t343 = t268 * t225;
t342 = t280 * t225;
t341 = t268 ^ 2;
t340 = t154 * t243;
t339 = t154 * t245;
t159 = qJD(2) * t309 + t215 * t308;
t338 = t159 * t243;
t337 = t159 * t244;
t336 = t159 * t245;
t335 = t207 * t225;
t333 = t207 * t244;
t332 = t209 * t207;
t331 = t209 * t225;
t330 = t225 * t243;
t329 = t225 * t245;
t327 = t243 * t244;
t326 = t243 * t246;
t323 = t246 * t148;
t247 = qJD(3) ^ 2;
t322 = t247 * t244;
t321 = t247 * t246;
t320 = pkin(5) * t316 + t274;
t319 = -t173 * t231 - t225 * t250;
t181 = t245 * t198;
t115 = -qJ(5) * t325 + t181 + (-pkin(4) - t328) * t246;
t123 = -qJ(5) * t327 + t136;
t61 = t115 * t238 + t123 * t240;
t318 = -t148 * t325 - t207 * t292;
t187 = pkin(4) * t327 + t228 * t244;
t313 = -t246 ^ 2 + t236;
t216 = qJD(1) * t230;
t307 = qJD(4) * t207;
t248 = qJD(1) ^ 2;
t296 = t244 * t248 * t246;
t138 = pkin(4) * t256 + t228 * t308;
t234 = -pkin(4) * t245 - pkin(3);
t294 = t209 * t308;
t289 = t225 * t304;
t288 = t225 * t312;
t27 = -t238 * t62 + t240 * t56;
t285 = t24 * t246 + t309 * t381;
t282 = -t246 * t92 + t268 * t309;
t60 = t115 * t240 - t123 * t238;
t281 = t147 * t246 + t209 * t309;
t279 = -t147 + t307;
t277 = t244 * t289;
t276 = t209 * t290;
t275 = t246 * t231;
t105 = pkin(4) * t148 + t159;
t272 = -t112 * t24 + t381 * t41;
t271 = t280 ^ 2;
t270 = -t102 * t245 - t103 * t243;
t269 = t102 * t243 - t103 * t245;
t265 = 0.2e1 * qJD(3) * t216;
t47 = -pkin(5) * t246 + pkin(9) * t174 + t60;
t48 = -pkin(9) * t173 + t61;
t19 = -t242 * t48 + t367 * t47;
t20 = t242 * t47 + t367 * t48;
t263 = t246 * t25 - t309 * t71;
t51 = pkin(5) * t91 + t105;
t259 = t267 * t243;
t258 = -t113 * t231 - t221 * t40;
t257 = -t114 * t225 + t174 * t231;
t253 = qJD(4) * t270 - t55 * t243 + t54 * t245;
t252 = t158 * t246 + t337 + (-t176 * t244 - t246 * t370) * qJD(3);
t249 = t92 * t173 - t250 * t268;
t162 = pkin(5) * t201 + t234;
t160 = (-t225 - t311) * t309;
t135 = -t228 * t326 + t181;
t130 = t201 * t367 + t202 * t242;
t127 = pkin(5) * t173 + t187;
t97 = pkin(4) * t209 + pkin(5) * t268;
t85 = -qJD(4) * t136 + t314;
t84 = (-t244 * t302 - t246 * t306) * t228 + t317;
t77 = -pkin(5) * t250 + t138;
t18 = pkin(9) * t250 + t28;
t17 = pkin(5) * t309 + pkin(9) * t114 + t27;
t5 = -t242 * t30 + t26 * t367;
t4 = -qJD(6) * t20 + t17 * t367 - t242 * t18;
t3 = qJD(6) * t19 + t17 * t242 + t18 * t367;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t275, -0.2e1 * t313 * t299, t321, -0.2e1 * t275, -t322, 0, -t228 * t321 + t244 * t265, t228 * t322 + t246 * t265, t252, t252 * t228, -t147 * t325 - t209 * t377, -t276 + (-t294 + (t147 + t307) * t244) * t243 + t318, t281 - t369, t148 * t327 + t207 * t256, t277 + t323 + (-t259 - t333) * qJD(3), t160, -t85 * t225 + (-t55 + (t207 * t228 + t340) * qJD(3)) * t246 + (t154 * t304 + t148 * t228 + t338 + (qJD(1) * t135 + t102) * qJD(3)) * t244, t84 * t225 + (t54 + (t209 * t228 + t339) * qJD(3)) * t246 + (-t154 * t306 - t147 * t228 + t336 + (-qJD(1) * t136 - t103) * qJD(3)) * t244, t135 * t147 - t136 * t148 - t84 * t207 - t85 * t209 + t270 * t308 + (qJD(4) * t269 - t243 * t54 - t245 * t55) * t244, t102 * t85 + t103 * t84 + t55 * t135 + t54 * t136 + (t154 * t308 + t337) * t228, -t114 * t268 - t174 * t92, -t249 + t356, -t257 + t282, t91 * t173 - t250 * t280, t319 + t368, t160, -t27 * t225 - t12 * t246 + t138 * t280 + t187 * t91 + t105 * t173 - t192 * t344 + (t126 * t372 + (qJD(1) * t60 + t36) * t244) * qJD(3), -t105 * t174 - t126 * t114 + t13 * t246 + t138 * t268 + t187 * t92 + t28 * t225 + (-qJD(1) * t61 - t37) * t309, t36 * t114 + t12 * t174 - t13 * t173 + t250 * t37 - t268 * t27 - t28 * t280 - t60 * t92 - t61 * t91, t105 * t187 + t12 * t60 + t126 * t138 + t13 * t61 + t27 * t36 + t28 * t37, -t113 * t24 - t381 * t40, -t272 + t358, -t258 + t285, t112 * t25 + t41 * t71, t263 + t357 (-t221 - t311) * t309, t51 * t112 + t127 * t25 - t2 * t246 - t4 * t221 + t76 * t41 + t77 * t71 + (qJD(1) * t19 + t5) * t309, -t254 * t246 + t51 * t113 - t127 * t24 + t3 * t221 - t76 * t40 + t77 * t381 + (-qJD(1) * t20 - t6) * t309, t112 * t254 - t113 * t2 + t19 * t24 - t20 * t25 - t3 * t71 - t381 * t4 + t40 * t5 - t41 * t6, t127 * t51 + t19 * t2 - t20 * t254 + t3 * t6 + t4 * t5 + t76 * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322, -t321, 0, t158 * t244 - t159 * t246 + (t176 * t246 - t244 * t370) * qJD(3), 0, 0, 0, 0, 0, 0, t277 - t323 + (-t259 + t333) * qJD(3), t281 + t369, t276 + (t244 * t279 + t294) * t243 + t318 (-qJD(3) * t269 - t159) * t246 + (qJD(3) * t154 + t253) * t244, 0, 0, 0, 0, 0, 0, t319 - t368, t257 + t282, t249 + t356, -t105 * t246 - t37 * t114 - t12 * t173 - t13 * t174 + t36 * t255 + (-t36 * t372 + t344) * qJD(3), 0, 0, 0, 0, 0, 0, -t263 + t357, t258 + t285, t272 + t358, -t112 * t2 - t113 * t254 - t246 * t51 + t309 * t76 - t40 * t6 - t41 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t296, t313 * t248, 0, t296, 0, 0, qJD(3) * t176 - t216 * t312 - t159, -t216 * t311, 0, 0, -t147 * t243 - t209 * t329 (-t147 + t335) * t245 + (-t148 + t331) * t243, -t289 + (t225 * t324 + (-t209 + t310) * t244) * qJD(1), -t148 * t245 - t207 * t330, t225 * t306 + (-t225 * t326 + (t207 + t302) * t244) * qJD(1), t288, -pkin(3) * t148 + t124 * t225 - t336 - t176 * t207 + (pkin(8) * t329 + t340) * qJD(4) + (-t102 * t244 + (-pkin(8) * t309 - t154 * t246) * t243) * qJD(1), pkin(3) * t147 - t125 * t225 + t338 - t176 * t209 + (-pkin(8) * t330 + t339) * qJD(4) + (-t154 * t324 + (-pkin(8) * t302 + t103) * t244) * qJD(1), t124 * t209 + t125 * t207 + ((qJD(4) * t209 - t148) * pkin(8) + t374) * t245 + (pkin(8) * t279 + t375) * t243, -t159 * pkin(3) + pkin(8) * t253 - t102 * t124 - t103 * t125 - t154 * t176, t92 * t202 + t268 * t378, -t92 * t201 - t202 * t91 - t268 * t316 - t280 * t378, -t378 * t225 + (qJD(3) * t202 - t268) * t312, t91 * t201 + t280 * t316, t316 * t225 + (-qJD(3) * t201 + t280) * t312, t288, t234 * t91 + t105 * t201 - t348 * t225 + t316 * t126 + (qJD(3) * t140 - t36) * t312 + t274 * t280, t105 * t202 + t234 * t92 + t347 * t225 + t274 * t268 + t378 * t126 + (-qJD(3) * t141 + t37) * t312, -t12 * t202 - t13 * t201 - t140 * t92 - t141 * t91 - t268 * t348 - t280 * t347 - t316 * t37 - t36 * t378, t105 * t234 + t12 * t140 + t126 * t274 + t13 * t141 + t347 * t37 + t348 * t36, -t24 * t131 - t355 * t381, t24 * t130 - t131 * t25 - t354 * t381 + t355 * t71, t355 * t221 + (qJD(3) * t131 - t381) * t312, t25 * t130 + t354 * t71, t354 * t221 + (-qJD(3) * t130 + t71) * t312, t221 * t312, t51 * t130 + t162 * t25 + t354 * t76 + t320 * t71 + t361 * t221 + (qJD(3) * t57 - t5) * t312, t51 * t131 - t162 * t24 - t355 * t76 + t320 * t381 - t360 * t221 + (-qJD(3) * t58 + t6) * t312, t130 * t254 - t2 * t131 + t57 * t24 - t58 * t25 - t354 * t6 + t355 * t5 + t360 * t71 + t361 * t381, t51 * t162 + t2 * t57 - t254 * t58 + t320 * t76 - t360 * t6 - t361 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t332, -t207 ^ 2 + t209 ^ 2, -t147 - t335, -t332, -t148 - t331, t231, -t154 * t209 - t375, t154 * t207 - t374, 0, 0, t382, -t271 + t341, t92 - t342, -t382, -t91 - t343, t231, -t126 * t268 + t42 * t225 + (-t209 * t280 + t231 * t240) * pkin(4) + t12, t126 * t280 - t43 * t225 + (-t209 * t268 - t231 * t238) * pkin(4) - t13 (-t238 * t91 - t240 * t92) * pkin(4) + (t37 + t42) * t268 + (t43 - t36) * t280, -t36 * t42 - t37 * t43 + (t12 * t240 - t126 * t209 + t13 * t238) * pkin(4), t363, t389, t390, -t363, t385, t231, t183 * t231 - t221 * t359 - t97 * t71 + t384, -t184 * t231 - t221 * t349 - t381 * t97 + t388, t183 * t24 - t184 * t25 + (-t359 + t6) * t381 + (t349 - t5) * t71, t2 * t183 - t184 * t254 - t349 * t6 + t359 * t5 - t76 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91 - t343, t92 + t342, -t271 - t341, t268 * t36 + t280 * t37 + t105, 0, 0, 0, 0, 0, 0, t25 - t350, -t24 + t353, -t364 - t365, t381 * t5 + t6 * t71 + t51; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t363, t389, t390, -t363, t385, t231, -t221 * t6 + t384, -t221 * t5 + t388, 0, 0;];
tauc_reg  = t1;
