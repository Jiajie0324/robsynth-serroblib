% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRRPR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 22:08
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRRPR2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR2_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR2_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR2_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR2_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 22:07:32
% EndTime: 2019-05-05 22:08:15
% DurationCPUTime: 44.96s
% Computational Cost: add. (464964->958), mult. (943989->1363), div. (0->0), fcn. (660132->12), ass. (0->655)
t1707 = cos(qJ(3));
t1812 = qJD(1) * t1707;
t1680 = -qJD(4) + t1812;
t1824 = t1680 ^ 2;
t1702 = sin(qJ(4));
t1706 = cos(qJ(4));
t1703 = sin(qJ(3));
t1813 = qJD(1) * t1703;
t1649 = -t1706 * qJD(3) + t1702 * t1813;
t1650 = qJD(3) * t1702 + t1706 * t1813;
t1695 = sin(pkin(11));
t1697 = cos(pkin(11));
t1597 = t1649 * t1697 + t1650 * t1695;
t1826 = t1597 ^ 2;
t1510 = -t1824 - t1826;
t1598 = -t1649 * t1695 + t1650 * t1697;
t1535 = t1598 * t1597;
t1685 = qJD(3) * t1813;
t1770 = t1707 * qJDD(1);
t1657 = -t1685 + t1770;
t1644 = -qJDD(4) + t1657;
t1831 = -t1535 - t1644;
t1843 = t1697 * t1831;
t1422 = t1510 * t1695 + t1843;
t1704 = sin(qJ(1));
t1708 = cos(qJ(1));
t1670 = g(1) * t1708 + g(2) * t1704;
t1709 = qJD(1) ^ 2;
t1652 = -pkin(1) * t1709 - t1670;
t1696 = sin(pkin(10));
t1698 = cos(pkin(10));
t1669 = g(1) * t1704 - t1708 * g(2);
t1730 = qJDD(1) * pkin(1) + t1669;
t1599 = t1696 * t1652 - t1698 * t1730;
t1577 = -qJDD(1) * pkin(2) - t1709 * pkin(7) + t1599;
t1736 = -t1657 + t1685;
t1686 = qJD(3) * t1812;
t1771 = t1703 * qJDD(1);
t1656 = t1686 + t1771;
t1737 = t1656 + t1686;
t1507 = pkin(3) * t1736 - pkin(8) * t1737 + t1577;
t1600 = t1698 * t1652 + t1696 * t1730;
t1578 = -t1709 * pkin(2) + qJDD(1) * pkin(7) + t1600;
t1817 = g(3) - qJDD(2);
t1554 = t1707 * t1578 - t1703 * t1817;
t1822 = pkin(3) * t1707;
t1739 = -pkin(8) * t1703 - t1822;
t1654 = t1739 * qJD(1);
t1827 = qJD(3) ^ 2;
t1527 = -pkin(3) * t1827 + qJDD(3) * pkin(8) + t1654 * t1812 + t1554;
t1433 = -t1706 * t1507 + t1702 * t1527;
t1731 = -t1702 * qJDD(3) - t1706 * t1656;
t1593 = -qJD(4) * t1649 - t1731;
t1632 = t1649 * t1680;
t1546 = t1593 - t1632;
t1790 = t1650 * t1649;
t1722 = -t1644 - t1790;
t1379 = t1722 * pkin(4) - qJ(5) * t1546 - t1433;
t1434 = t1702 * t1507 + t1706 * t1527;
t1621 = -pkin(4) * t1680 - qJ(5) * t1650;
t1733 = -t1650 * qJD(4) + qJDD(3) * t1706 - t1702 * t1656;
t1825 = t1649 ^ 2;
t1392 = -pkin(4) * t1825 + qJ(5) * t1733 + t1680 * t1621 + t1434;
t1734 = -0.2e1 * qJD(5) * t1598 + t1697 * t1379 - t1695 * t1392;
t1849 = pkin(4) * t1422 + t1734;
t1756 = t1599 * t1696 + t1698 * t1600;
t1524 = t1599 * t1698 - t1600 * t1696;
t1797 = t1524 * t1704;
t1848 = t1708 * t1756 + t1797;
t1796 = t1524 * t1708;
t1847 = -t1704 * t1756 + t1796;
t1660 = qJDD(1) * t1696 + t1698 * t1709;
t1661 = qJDD(1) * t1698 - t1696 * t1709;
t1603 = -t1660 * t1704 + t1708 * t1661;
t1630 = -qJ(2) * t1660 + t1698 * t1817;
t1828 = -qJ(2) * t1661 - t1696 * t1817;
t1846 = -pkin(6) * t1603 - t1630 * t1704 + t1708 * t1828;
t1829 = t1708 * t1660 + t1661 * t1704;
t1845 = -pkin(6) * t1829 + t1630 * t1708 + t1704 * t1828;
t1844 = t1695 * t1831;
t1701 = sin(qJ(6));
t1705 = cos(qJ(6));
t1518 = t1705 * t1597 + t1598 * t1701;
t1520 = -t1597 * t1701 + t1598 * t1705;
t1442 = t1520 * t1518;
t1637 = -qJDD(6) + t1644;
t1833 = -t1442 - t1637;
t1842 = t1701 * t1833;
t1841 = t1705 * t1833;
t1837 = t1702 * t1722;
t1835 = t1706 * t1722;
t1508 = t1697 * t1593 + t1695 * t1733;
t1757 = t1593 * t1695 - t1697 * t1733;
t1391 = -t1518 * qJD(6) + t1705 * t1508 - t1701 * t1757;
t1672 = -qJD(6) + t1680;
t1494 = t1518 * t1672;
t1832 = t1494 + t1391;
t1684 = t1707 * t1817;
t1552 = t1578 * t1703 + t1684;
t1483 = t1703 * t1552 + t1707 * t1554;
t1570 = t1597 * t1680;
t1475 = -t1570 + t1508;
t1830 = t1570 + t1508;
t1513 = t1518 ^ 2;
t1514 = t1520 ^ 2;
t1596 = t1598 ^ 2;
t1643 = t1650 ^ 2;
t1671 = t1672 ^ 2;
t1823 = pkin(3) * t1703;
t1811 = qJD(5) * t1597;
t1589 = -0.2e1 * t1811;
t1774 = t1695 * t1379 + t1697 * t1392;
t1294 = t1589 + t1774;
t1225 = t1294 * t1695 + t1697 * t1734;
t1821 = pkin(4) * t1225;
t1781 = t1680 * t1598;
t1728 = -t1757 - t1781;
t1385 = -t1475 * t1697 + t1695 * t1728;
t1820 = pkin(4) * t1385;
t1814 = qJD(1) * qJD(3);
t1253 = pkin(5) * t1831 - pkin(9) * t1475 + t1734;
t1563 = -pkin(5) * t1680 - pkin(9) * t1598;
t1261 = -pkin(5) * t1826 - pkin(9) * t1757 + t1680 * t1563 + t1294;
t1191 = -t1705 * t1253 + t1261 * t1701;
t1192 = t1253 * t1701 + t1261 * t1705;
t1143 = -t1191 * t1705 + t1192 * t1701;
t1809 = t1143 * t1695;
t1808 = t1143 * t1697;
t1807 = t1225 * t1702;
t1806 = t1225 * t1706;
t1526 = t1684 - qJDD(3) * pkin(3) - t1827 * pkin(8) + (qJD(1) * t1654 + t1578) * t1703;
t1427 = -t1733 * pkin(4) - t1825 * qJ(5) + t1650 * t1621 + qJDD(5) + t1526;
t1329 = pkin(5) * t1757 - pkin(9) * t1826 + t1598 * t1563 + t1427;
t1805 = t1329 * t1701;
t1804 = t1329 * t1705;
t1424 = -t1442 + t1637;
t1803 = t1424 * t1701;
t1802 = t1424 * t1705;
t1801 = t1427 * t1695;
t1800 = t1427 * t1697;
t1502 = -t1535 + t1644;
t1799 = t1502 * t1695;
t1798 = t1502 * t1697;
t1795 = t1526 * t1702;
t1794 = t1526 * t1706;
t1573 = t1644 - t1790;
t1793 = t1573 * t1702;
t1792 = t1573 * t1706;
t1791 = t1644 * t1703;
t1679 = t1707 * t1709 * t1703;
t1667 = -t1679 + qJDD(3);
t1787 = t1667 * t1703;
t1786 = t1667 * t1707;
t1668 = qJDD(3) + t1679;
t1785 = t1668 * t1703;
t1784 = t1672 * t1520;
t1783 = t1672 * t1701;
t1782 = t1672 * t1705;
t1780 = t1680 * t1650;
t1779 = t1680 * t1695;
t1778 = t1680 * t1697;
t1777 = t1680 * t1702;
t1776 = t1680 * t1706;
t1691 = t1703 ^ 2;
t1775 = t1691 * t1709;
t1566 = t1703 * t1577;
t1567 = t1707 * t1577;
t1773 = -pkin(2) * t1577 + pkin(7) * t1483;
t1692 = t1707 ^ 2;
t1772 = t1691 + t1692;
t1769 = t1703 * t1442;
t1768 = t1707 * t1442;
t1767 = t1703 * t1535;
t1766 = t1707 * t1535;
t1765 = t1703 * t1790;
t1764 = t1707 * t1790;
t1675 = -t1775 - t1827;
t1620 = -t1675 * t1703 - t1786;
t1655 = 0.2e1 * t1686 + t1771;
t1763 = -pkin(2) * t1655 + pkin(7) * t1620 + t1566;
t1689 = t1692 * t1709;
t1677 = -t1689 - t1827;
t1618 = t1677 * t1707 - t1785;
t1658 = -0.2e1 * t1685 + t1770;
t1762 = pkin(2) * t1658 + pkin(7) * t1618 - t1567;
t1144 = t1191 * t1701 + t1705 * t1192;
t1106 = t1144 * t1695 + t1808;
t1142 = pkin(5) * t1143;
t1761 = pkin(4) * t1106 + t1142;
t1352 = -t1494 + t1391;
t1758 = t1701 * t1508 + t1705 * t1757;
t1721 = (-qJD(6) - t1672) * t1520 - t1758;
t1277 = -t1352 * t1705 + t1701 * t1721;
t1279 = t1352 * t1701 + t1705 * t1721;
t1212 = t1277 * t1697 + t1279 * t1695;
t1275 = pkin(5) * t1277;
t1760 = pkin(4) * t1212 + t1275;
t1226 = t1697 * t1294 - t1695 * t1734;
t1356 = t1433 * t1702 + t1706 * t1434;
t1755 = -t1669 * t1704 - t1708 * t1670;
t1754 = t1696 * t1679;
t1753 = t1698 * t1679;
t1107 = t1144 * t1697 - t1809;
t1136 = -pkin(5) * t1329 + pkin(9) * t1144;
t1085 = -pkin(4) * t1329 - pkin(9) * t1809 + qJ(5) * t1107 + t1136 * t1697;
t1089 = -pkin(9) * t1808 - qJ(5) * t1106 - t1136 * t1695;
t1092 = t1106 * t1706 + t1107 * t1702;
t1066 = -pkin(8) * t1092 - t1085 * t1702 + t1089 * t1706;
t1078 = -pkin(3) * t1092 - t1761;
t1093 = -t1106 * t1702 + t1107 * t1706;
t1088 = t1093 * t1707 + t1329 * t1703;
t1752 = -pkin(2) * t1092 + pkin(7) * t1088 + t1703 * t1066 + t1707 * t1078;
t1398 = -t1513 - t1514;
t1126 = -pkin(5) * t1398 + pkin(9) * t1279 + t1144;
t1130 = -pkin(9) * t1277 - t1143;
t1214 = -t1277 * t1695 + t1279 * t1697;
t1098 = -pkin(4) * t1398 + qJ(5) * t1214 + t1126 * t1697 + t1130 * t1695;
t1099 = -qJ(5) * t1212 - t1126 * t1695 + t1130 * t1697;
t1158 = t1212 * t1706 + t1214 * t1702;
t1080 = -pkin(8) * t1158 - t1098 * t1702 + t1099 * t1706;
t1120 = -pkin(3) * t1158 - t1760;
t1160 = -t1212 * t1702 + t1214 * t1706;
t1147 = t1160 * t1707 + t1398 * t1703;
t1751 = -pkin(2) * t1158 + pkin(7) * t1147 + t1703 * t1080 + t1707 * t1120;
t1431 = -t1671 - t1513;
t1347 = t1431 * t1705 - t1842;
t1348 = (qJD(6) - t1672) * t1520 + t1758;
t1241 = -pkin(5) * t1348 + pkin(9) * t1347 - t1804;
t1346 = t1431 * t1701 + t1841;
t1264 = -pkin(9) * t1346 + t1805;
t1274 = -t1346 * t1695 + t1347 * t1697;
t1154 = -pkin(4) * t1348 + qJ(5) * t1274 + t1241 * t1697 + t1264 * t1695;
t1273 = t1346 * t1697 + t1347 * t1695;
t1170 = -qJ(5) * t1273 - t1241 * t1695 + t1264 * t1697;
t1208 = t1273 * t1706 + t1274 * t1702;
t1104 = -pkin(8) * t1208 - t1154 * t1702 + t1170 * t1706;
t1735 = pkin(5) * t1346 - t1191;
t1726 = pkin(4) * t1273 + t1735;
t1128 = -pkin(3) * t1208 - t1726;
t1209 = -t1273 * t1702 + t1274 * t1706;
t1184 = t1209 * t1707 + t1348 * t1703;
t1750 = -pkin(2) * t1208 + pkin(7) * t1184 + t1703 * t1104 + t1707 * t1128;
t1489 = -t1514 - t1671;
t1372 = -t1489 * t1701 + t1802;
t1244 = -pkin(5) * t1832 + pkin(9) * t1372 + t1805;
t1371 = t1489 * t1705 + t1803;
t1281 = -pkin(9) * t1371 + t1804;
t1296 = -t1371 * t1695 + t1372 * t1697;
t1164 = -pkin(4) * t1832 + qJ(5) * t1296 + t1244 * t1697 + t1281 * t1695;
t1295 = t1371 * t1697 + t1372 * t1695;
t1177 = -qJ(5) * t1295 - t1244 * t1695 + t1281 * t1697;
t1230 = t1295 * t1706 + t1296 * t1702;
t1109 = -pkin(8) * t1230 - t1164 * t1702 + t1177 * t1706;
t1729 = pkin(5) * t1371 - t1192;
t1719 = pkin(4) * t1295 + t1729;
t1133 = -pkin(3) * t1230 - t1719;
t1231 = -t1295 * t1702 + t1296 * t1706;
t1198 = t1231 * t1707 + t1703 * t1832;
t1749 = -pkin(2) * t1230 + pkin(7) * t1198 + t1703 * t1109 + t1707 * t1133;
t1175 = t1226 * t1702 + t1806;
t1216 = -pkin(4) * t1427 + qJ(5) * t1226;
t1124 = -pkin(8) * t1175 - qJ(5) * t1806 - t1216 * t1702;
t1138 = -pkin(3) * t1175 - t1821;
t1176 = t1226 * t1706 - t1807;
t1173 = t1176 * t1707 + t1427 * t1703;
t1748 = -pkin(2) * t1175 + pkin(7) * t1173 + t1703 * t1124 + t1707 * t1138;
t1387 = t1475 * t1695 + t1697 * t1728;
t1484 = -t1596 - t1826;
t1195 = -pkin(4) * t1484 + qJ(5) * t1387 + t1226;
t1210 = -qJ(5) * t1385 - t1225;
t1304 = t1385 * t1706 + t1387 * t1702;
t1135 = -pkin(8) * t1304 - t1195 * t1702 + t1210 * t1706;
t1251 = -pkin(3) * t1304 - t1820;
t1306 = -t1385 * t1702 + t1387 * t1706;
t1284 = t1306 * t1707 + t1484 * t1703;
t1747 = -pkin(2) * t1304 + pkin(7) * t1284 + t1703 * t1135 + t1707 * t1251;
t1423 = t1510 * t1697 - t1844;
t1470 = t1757 - t1781;
t1311 = -pkin(4) * t1470 + qJ(5) * t1423 - t1800;
t1334 = t1422 * t1706 + t1423 * t1702;
t1340 = -qJ(5) * t1422 + t1801;
t1221 = -pkin(8) * t1334 - t1311 * t1702 + t1340 * t1706;
t1238 = -pkin(3) * t1334 - t1849;
t1335 = -t1422 * t1702 + t1423 * t1706;
t1310 = t1335 * t1707 + t1470 * t1703;
t1746 = -pkin(2) * t1334 + pkin(7) * t1310 + t1703 * t1221 + t1707 * t1238;
t1550 = -t1596 - t1824;
t1451 = -t1550 * t1695 + t1798;
t1314 = -pkin(4) * t1830 + qJ(5) * t1451 + t1801;
t1449 = t1550 * t1697 + t1799;
t1357 = -qJ(5) * t1449 + t1800;
t1362 = t1449 * t1706 + t1451 * t1702;
t1240 = -pkin(8) * t1362 - t1314 * t1702 + t1357 * t1706;
t1741 = pkin(4) * t1449 - t1774;
t1243 = -pkin(3) * t1362 + t1589 - t1741;
t1363 = -t1449 * t1702 + t1451 * t1706;
t1317 = t1363 * t1707 + t1703 * t1830;
t1745 = -pkin(2) * t1362 + pkin(7) * t1317 + t1703 * t1240 + t1707 * t1243;
t1595 = -t1824 - t1825;
t1500 = t1595 * t1702 + t1835;
t1393 = -pkin(3) * t1500 + t1433;
t1432 = -pkin(8) * t1500 + t1795;
t1501 = t1595 * t1706 - t1837;
t1543 = t1733 + t1780;
t1445 = t1501 * t1707 - t1543 * t1703;
t1744 = -pkin(2) * t1500 + pkin(7) * t1445 + t1707 * t1393 + t1703 * t1432;
t1607 = -t1643 - t1824;
t1511 = t1607 * t1706 + t1793;
t1395 = -pkin(3) * t1511 + t1434;
t1438 = -pkin(8) * t1511 + t1794;
t1512 = -t1607 * t1702 + t1792;
t1547 = (qJD(4) - t1680) * t1649 + t1731;
t1452 = t1512 * t1707 - t1547 * t1703;
t1743 = -pkin(2) * t1511 + pkin(7) * t1452 + t1707 * t1395 + t1703 * t1438;
t1662 = t1772 * qJDD(1);
t1665 = t1689 + t1775;
t1742 = pkin(2) * t1665 + pkin(7) * t1662 + t1483;
t1740 = -pkin(3) * t1526 + pkin(8) * t1356;
t1664 = qJDD(1) * t1708 - t1704 * t1709;
t1738 = -pkin(6) * t1664 - g(3) * t1704;
t1355 = -t1433 * t1706 + t1434 * t1702;
t1482 = t1552 * t1707 - t1554 * t1703;
t1732 = t1669 * t1708 - t1670 * t1704;
t1723 = t1733 - t1780;
t1477 = -t1546 * t1706 + t1702 * t1723;
t1313 = -pkin(8) * t1477 - t1355;
t1479 = t1546 * t1702 + t1706 * t1723;
t1571 = t1643 + t1825;
t1417 = t1479 * t1707 - t1571 * t1703;
t1727 = pkin(7) * t1417 + t1703 * t1313 + (-pkin(2) - t1822) * t1477;
t1725 = pkin(3) * t1543 + pkin(8) * t1501 - t1794;
t1724 = pkin(3) * t1547 + pkin(8) * t1512 + t1795;
t1720 = pkin(3) * t1571 + pkin(8) * t1479 + t1356;
t1320 = t1356 * t1707 + t1526 * t1703;
t1718 = pkin(7) * t1320 + (-pkin(2) + t1739) * t1355;
t1717 = -pkin(3) * t1329 + pkin(8) * t1093 + t1085 * t1706 + t1089 * t1702;
t1716 = -pkin(3) * t1398 + pkin(8) * t1160 + t1098 * t1706 + t1099 * t1702;
t1715 = -pkin(3) * t1348 + pkin(8) * t1209 + t1154 * t1706 + t1170 * t1702;
t1714 = -pkin(3) * t1832 + pkin(8) * t1231 + t1164 * t1706 + t1177 * t1702;
t1713 = -pkin(3) * t1484 + pkin(8) * t1306 + t1195 * t1706 + t1210 * t1702;
t1712 = -pkin(3) * t1470 + pkin(8) * t1335 + t1311 * t1706 + t1340 * t1702;
t1711 = -pkin(3) * t1830 + pkin(8) * t1363 + t1314 * t1706 + t1357 * t1702;
t1710 = -pkin(3) * t1427 + pkin(8) * t1176 - qJ(5) * t1807 + t1216 * t1706;
t1676 = t1689 - t1827;
t1674 = -t1775 + t1827;
t1666 = -t1689 + t1775;
t1663 = qJDD(1) * t1704 + t1708 * t1709;
t1648 = t1707 * t1668;
t1647 = t1772 * t1814;
t1634 = t1707 * t1644;
t1633 = -pkin(6) * t1663 + g(3) * t1708;
t1627 = -t1643 + t1824;
t1626 = -t1824 + t1825;
t1625 = t1656 * t1707 - t1691 * t1814;
t1624 = -t1657 * t1703 - t1692 * t1814;
t1623 = qJDD(3) * t1696 + t1647 * t1698;
t1622 = -qJDD(3) * t1698 + t1647 * t1696;
t1619 = -t1674 * t1703 + t1648;
t1617 = t1676 * t1707 - t1787;
t1616 = t1675 * t1707 - t1787;
t1615 = t1674 * t1707 + t1785;
t1614 = t1677 * t1703 + t1648;
t1613 = t1676 * t1703 + t1786;
t1612 = t1737 * t1703;
t1611 = t1736 * t1707;
t1608 = t1643 - t1825;
t1606 = t1662 * t1698 - t1665 * t1696;
t1605 = t1662 * t1696 + t1665 * t1698;
t1602 = -t1655 * t1703 + t1658 * t1707;
t1601 = t1655 * t1707 + t1658 * t1703;
t1588 = t1625 * t1698 - t1754;
t1587 = t1624 * t1698 + t1754;
t1586 = t1625 * t1696 + t1753;
t1585 = t1624 * t1696 - t1753;
t1584 = t1619 * t1698 + t1696 * t1771;
t1583 = t1617 * t1698 + t1696 * t1770;
t1582 = t1619 * t1696 - t1698 * t1771;
t1581 = t1617 * t1696 - t1698 * t1770;
t1565 = -t1596 + t1824;
t1564 = -t1824 + t1826;
t1562 = t1620 * t1698 + t1655 * t1696;
t1561 = t1618 * t1698 - t1658 * t1696;
t1560 = t1620 * t1696 - t1655 * t1698;
t1559 = t1618 * t1696 + t1658 * t1698;
t1558 = -pkin(1) * t1660 - t1600;
t1557 = pkin(1) * t1661 - t1599;
t1556 = (t1649 * t1706 - t1650 * t1702) * t1680;
t1555 = (t1649 * t1702 + t1650 * t1706) * t1680;
t1553 = t1602 * t1698 + t1666 * t1696;
t1551 = t1602 * t1696 - t1666 * t1698;
t1545 = t1593 + t1632;
t1541 = t1593 * t1706 + t1650 * t1777;
t1540 = t1593 * t1702 - t1650 * t1776;
t1539 = -t1649 * t1776 - t1702 * t1733;
t1538 = t1649 * t1777 - t1706 * t1733;
t1537 = t1556 * t1707 - t1791;
t1536 = t1556 * t1703 + t1634;
t1534 = -pkin(7) * t1616 + t1567;
t1533 = t1626 * t1706 + t1793;
t1532 = -t1627 * t1702 + t1835;
t1531 = -pkin(7) * t1614 + t1566;
t1530 = t1626 * t1702 - t1792;
t1529 = t1627 * t1706 + t1837;
t1528 = t1596 - t1826;
t1521 = pkin(1) * t1524;
t1516 = -pkin(2) * t1616 + t1554;
t1515 = -pkin(2) * t1614 + t1552;
t1506 = pkin(1) * t1817 + qJ(2) * t1756;
t1493 = -t1514 + t1671;
t1492 = t1513 - t1671;
t1491 = (t1597 * t1697 - t1598 * t1695) * t1680;
t1490 = (t1597 * t1695 + t1598 * t1697) * t1680;
t1488 = t1541 * t1707 + t1765;
t1487 = t1539 * t1707 - t1765;
t1486 = t1541 * t1703 - t1764;
t1485 = t1539 * t1703 + t1764;
t1478 = t1543 * t1706 - t1545 * t1702;
t1476 = t1543 * t1702 + t1545 * t1706;
t1468 = t1537 * t1698 + t1555 * t1696;
t1467 = t1537 * t1696 - t1555 * t1698;
t1466 = t1508 * t1697 + t1598 * t1779;
t1465 = t1508 * t1695 - t1598 * t1778;
t1464 = -t1597 * t1778 + t1695 * t1757;
t1463 = -t1597 * t1779 - t1697 * t1757;
t1462 = pkin(1) * t1559 + t1762;
t1461 = pkin(1) * t1560 + t1763;
t1460 = t1533 * t1707 + t1703 * t1723;
t1459 = t1532 * t1707 + t1546 * t1703;
t1458 = t1564 * t1697 + t1799;
t1457 = -t1565 * t1695 + t1843;
t1456 = t1533 * t1703 - t1707 * t1723;
t1455 = t1532 * t1703 - t1546 * t1707;
t1454 = t1564 * t1695 - t1798;
t1453 = t1565 * t1697 + t1844;
t1450 = t1512 * t1703 + t1547 * t1707;
t1447 = -qJ(2) * t1605 + t1482 * t1698;
t1446 = qJ(2) * t1606 + t1482 * t1696;
t1444 = t1501 * t1703 + t1543 * t1707;
t1441 = t1514 - t1513;
t1440 = t1483 * t1698 + t1577 * t1696;
t1439 = t1483 * t1696 - t1577 * t1698;
t1437 = t1478 * t1707 + t1608 * t1703;
t1436 = t1478 * t1703 - t1608 * t1707;
t1430 = pkin(1) * t1605 + t1742;
t1421 = t1488 * t1698 + t1540 * t1696;
t1420 = t1487 * t1698 - t1538 * t1696;
t1419 = t1488 * t1696 - t1540 * t1698;
t1418 = t1487 * t1696 + t1538 * t1698;
t1416 = t1479 * t1703 + t1571 * t1707;
t1414 = (t1518 * t1705 - t1520 * t1701) * t1672;
t1413 = (t1518 * t1701 + t1520 * t1705) * t1672;
t1412 = -t1490 * t1702 + t1491 * t1706;
t1411 = t1490 * t1706 + t1491 * t1702;
t1410 = -qJ(2) * t1560 - t1516 * t1696 + t1534 * t1698;
t1409 = -qJ(2) * t1559 - t1515 * t1696 + t1531 * t1698;
t1408 = t1412 * t1707 - t1791;
t1407 = t1412 * t1703 + t1634;
t1406 = t1460 * t1698 + t1530 * t1696;
t1405 = t1459 * t1698 + t1529 * t1696;
t1404 = t1460 * t1696 - t1530 * t1698;
t1403 = t1459 * t1696 - t1529 * t1698;
t1402 = t1452 * t1698 + t1511 * t1696;
t1401 = t1452 * t1696 - t1511 * t1698;
t1400 = -pkin(1) * t1616 + qJ(2) * t1562 + t1516 * t1698 + t1534 * t1696;
t1399 = -pkin(1) * t1614 + qJ(2) * t1561 + t1515 * t1698 + t1531 * t1696;
t1397 = t1445 * t1698 + t1500 * t1696;
t1396 = t1445 * t1696 - t1500 * t1698;
t1390 = -qJD(6) * t1520 - t1758;
t1386 = -t1470 * t1697 - t1695 * t1830;
t1384 = -t1470 * t1695 + t1697 * t1830;
t1383 = t1492 * t1705 + t1803;
t1382 = -t1493 * t1701 + t1841;
t1381 = t1492 * t1701 - t1802;
t1380 = t1493 * t1705 + t1842;
t1378 = -t1465 * t1702 + t1466 * t1706;
t1377 = -t1463 * t1702 + t1464 * t1706;
t1376 = t1465 * t1706 + t1466 * t1702;
t1375 = t1463 * t1706 + t1464 * t1702;
t1369 = -t1454 * t1702 + t1458 * t1706;
t1368 = -t1453 * t1702 + t1457 * t1706;
t1367 = t1454 * t1706 + t1458 * t1702;
t1366 = t1453 * t1706 + t1457 * t1702;
t1365 = t1437 * t1698 + t1476 * t1696;
t1364 = t1437 * t1696 - t1476 * t1698;
t1360 = t1417 * t1698 + t1477 * t1696;
t1359 = t1417 * t1696 - t1477 * t1698;
t1358 = pkin(1) * t1439 + t1773;
t1345 = t1391 * t1705 + t1520 * t1783;
t1344 = t1391 * t1701 - t1520 * t1782;
t1343 = -t1390 * t1701 - t1518 * t1782;
t1342 = t1390 * t1705 - t1518 * t1783;
t1339 = t1378 * t1707 + t1767;
t1338 = t1377 * t1707 - t1767;
t1337 = t1378 * t1703 - t1766;
t1336 = t1377 * t1703 + t1766;
t1332 = -pkin(2) * t1450 - t1724;
t1331 = -t1413 * t1695 + t1414 * t1697;
t1330 = t1413 * t1697 + t1414 * t1695;
t1328 = -pkin(2) * t1444 - t1725;
t1327 = -qJ(2) * t1439 - (pkin(2) * t1696 - pkin(7) * t1698) * t1482;
t1326 = t1369 * t1707 + t1703 * t1728;
t1325 = t1368 * t1707 + t1475 * t1703;
t1324 = t1369 * t1703 - t1707 * t1728;
t1323 = t1368 * t1703 - t1475 * t1707;
t1322 = t1408 * t1698 + t1411 * t1696;
t1321 = t1408 * t1696 - t1411 * t1698;
t1319 = t1356 * t1703 - t1526 * t1707;
t1316 = t1363 * t1703 - t1707 * t1830;
t1309 = t1335 * t1703 - t1470 * t1707;
t1307 = qJ(2) * t1440 - (-pkin(2) * t1698 - pkin(7) * t1696 - pkin(1)) * t1482;
t1305 = -t1384 * t1702 + t1386 * t1706;
t1303 = t1384 * t1706 + t1386 * t1702;
t1301 = -t1381 * t1695 + t1383 * t1697;
t1300 = -t1380 * t1695 + t1382 * t1697;
t1299 = t1381 * t1697 + t1383 * t1695;
t1298 = t1380 * t1697 + t1382 * t1695;
t1297 = -pkin(7) * t1450 - t1395 * t1703 + t1438 * t1707;
t1291 = -pkin(7) * t1444 - t1393 * t1703 + t1432 * t1707;
t1290 = t1305 * t1707 + t1528 * t1703;
t1289 = t1305 * t1703 - t1528 * t1707;
t1288 = t1339 * t1698 + t1376 * t1696;
t1287 = t1338 * t1698 + t1375 * t1696;
t1286 = t1339 * t1696 - t1376 * t1698;
t1285 = t1338 * t1696 - t1375 * t1698;
t1283 = t1306 * t1703 - t1484 * t1707;
t1280 = -pkin(2) * t1416 - t1720;
t1278 = -t1348 * t1705 - t1701 * t1832;
t1276 = -t1348 * t1701 + t1705 * t1832;
t1272 = -t1344 * t1695 + t1345 * t1697;
t1271 = -t1342 * t1695 + t1343 * t1697;
t1270 = t1344 * t1697 + t1345 * t1695;
t1269 = t1342 * t1697 + t1343 * t1695;
t1268 = t1326 * t1698 + t1367 * t1696;
t1267 = t1325 * t1698 + t1366 * t1696;
t1266 = t1326 * t1696 - t1367 * t1698;
t1265 = t1325 * t1696 - t1366 * t1698;
t1263 = t1317 * t1698 + t1362 * t1696;
t1262 = t1317 * t1696 - t1362 * t1698;
t1260 = -t1330 * t1702 + t1331 * t1706;
t1259 = t1330 * t1706 + t1331 * t1702;
t1258 = t1320 * t1698 + t1355 * t1696;
t1257 = t1320 * t1696 - t1355 * t1698;
t1256 = t1260 * t1707 - t1637 * t1703;
t1255 = t1260 * t1703 + t1637 * t1707;
t1254 = -pkin(7) * t1416 + t1313 * t1707 + t1477 * t1823;
t1249 = -pkin(2) * t1319 - t1740;
t1248 = t1310 * t1698 + t1334 * t1696;
t1247 = t1310 * t1696 - t1334 * t1698;
t1246 = pkin(1) * t1401 + t1743;
t1245 = pkin(1) * t1396 + t1744;
t1237 = -t1299 * t1702 + t1301 * t1706;
t1236 = -t1298 * t1702 + t1300 * t1706;
t1235 = t1299 * t1706 + t1301 * t1702;
t1234 = t1298 * t1706 + t1300 * t1702;
t1232 = -pkin(7) * t1319 + (-pkin(8) * t1707 + t1823) * t1355;
t1228 = t1290 * t1698 + t1303 * t1696;
t1227 = t1290 * t1696 - t1303 * t1698;
t1224 = -qJ(2) * t1401 + t1297 * t1698 - t1332 * t1696;
t1223 = t1284 * t1698 + t1304 * t1696;
t1222 = t1284 * t1696 - t1304 * t1698;
t1219 = pkin(1) * t1359 + t1727;
t1218 = -qJ(2) * t1396 + t1291 * t1698 - t1328 * t1696;
t1217 = -pkin(1) * t1450 + qJ(2) * t1402 + t1297 * t1696 + t1332 * t1698;
t1215 = -pkin(1) * t1444 + qJ(2) * t1397 + t1291 * t1696 + t1328 * t1698;
t1213 = -t1276 * t1695 + t1278 * t1697;
t1211 = t1276 * t1697 + t1278 * t1695;
t1206 = -t1270 * t1702 + t1272 * t1706;
t1205 = -t1269 * t1702 + t1271 * t1706;
t1204 = t1270 * t1706 + t1272 * t1702;
t1203 = t1269 * t1706 + t1271 * t1702;
t1202 = t1237 * t1707 + t1703 * t1721;
t1201 = t1236 * t1707 + t1352 * t1703;
t1200 = t1237 * t1703 - t1707 * t1721;
t1199 = t1236 * t1703 - t1352 * t1707;
t1197 = t1231 * t1703 - t1707 * t1832;
t1194 = t1256 * t1698 + t1259 * t1696;
t1193 = t1256 * t1696 - t1259 * t1698;
t1189 = t1206 * t1707 + t1769;
t1188 = t1205 * t1707 - t1769;
t1187 = t1206 * t1703 - t1768;
t1186 = t1205 * t1703 + t1768;
t1185 = -pkin(2) * t1316 - t1711;
t1183 = t1209 * t1703 - t1348 * t1707;
t1181 = -qJ(2) * t1359 + t1254 * t1698 - t1280 * t1696;
t1180 = -pkin(2) * t1309 - t1712;
t1179 = -pkin(1) * t1416 + qJ(2) * t1360 + t1254 * t1696 + t1280 * t1698;
t1178 = pkin(1) * t1257 + t1718;
t1172 = t1176 * t1703 - t1427 * t1707;
t1169 = -pkin(7) * t1316 + t1240 * t1707 - t1243 * t1703;
t1168 = t1202 * t1698 + t1235 * t1696;
t1167 = t1201 * t1698 + t1234 * t1696;
t1166 = t1202 * t1696 - t1235 * t1698;
t1165 = t1201 * t1696 - t1234 * t1698;
t1163 = t1198 * t1698 + t1230 * t1696;
t1162 = t1198 * t1696 - t1230 * t1698;
t1161 = -qJ(2) * t1257 + t1232 * t1698 - t1249 * t1696;
t1159 = -t1211 * t1702 + t1213 * t1706;
t1157 = t1211 * t1706 + t1213 * t1702;
t1155 = -pkin(7) * t1309 + t1221 * t1707 - t1238 * t1703;
t1153 = t1159 * t1707 + t1441 * t1703;
t1152 = t1159 * t1703 - t1441 * t1707;
t1151 = t1189 * t1698 + t1204 * t1696;
t1150 = t1188 * t1698 + t1203 * t1696;
t1149 = t1189 * t1696 - t1204 * t1698;
t1148 = t1188 * t1696 - t1203 * t1698;
t1146 = t1160 * t1703 - t1398 * t1707;
t1141 = -pkin(1) * t1319 + qJ(2) * t1258 + t1232 * t1696 + t1249 * t1698;
t1140 = t1184 * t1698 + t1208 * t1696;
t1139 = t1184 * t1696 - t1208 * t1698;
t1131 = pkin(1) * t1262 + t1745;
t1129 = pkin(1) * t1247 + t1746;
t1125 = -pkin(2) * t1283 - t1713;
t1122 = t1173 * t1698 + t1175 * t1696;
t1121 = t1173 * t1696 - t1175 * t1698;
t1118 = -pkin(7) * t1283 + t1135 * t1707 - t1251 * t1703;
t1117 = -qJ(2) * t1262 + t1169 * t1698 - t1185 * t1696;
t1116 = -pkin(1) * t1316 + qJ(2) * t1263 + t1169 * t1696 + t1185 * t1698;
t1115 = -qJ(2) * t1247 + t1155 * t1698 - t1180 * t1696;
t1114 = t1153 * t1698 + t1157 * t1696;
t1113 = t1153 * t1696 - t1157 * t1698;
t1112 = t1147 * t1698 + t1158 * t1696;
t1111 = t1147 * t1696 - t1158 * t1698;
t1110 = -pkin(1) * t1309 + qJ(2) * t1248 + t1155 * t1696 + t1180 * t1698;
t1105 = pkin(1) * t1222 + t1747;
t1102 = -pkin(2) * t1172 - t1710;
t1101 = -pkin(2) * t1197 - t1714;
t1100 = -pkin(2) * t1183 - t1715;
t1097 = -qJ(2) * t1222 + t1118 * t1698 - t1125 * t1696;
t1096 = -pkin(7) * t1172 + t1124 * t1707 - t1138 * t1703;
t1095 = -pkin(7) * t1197 + t1109 * t1707 - t1133 * t1703;
t1094 = -pkin(1) * t1283 + qJ(2) * t1223 + t1118 * t1696 + t1125 * t1698;
t1090 = -pkin(7) * t1183 + t1104 * t1707 - t1128 * t1703;
t1087 = t1093 * t1703 - t1329 * t1707;
t1084 = pkin(1) * t1162 + t1749;
t1083 = pkin(1) * t1139 + t1750;
t1082 = pkin(1) * t1121 + t1748;
t1081 = -qJ(2) * t1162 + t1095 * t1698 - t1101 * t1696;
t1076 = -pkin(1) * t1197 + qJ(2) * t1163 + t1095 * t1696 + t1101 * t1698;
t1075 = -qJ(2) * t1121 + t1096 * t1698 - t1102 * t1696;
t1074 = -qJ(2) * t1139 + t1090 * t1698 - t1100 * t1696;
t1073 = -pkin(2) * t1146 - t1716;
t1072 = t1088 * t1698 + t1092 * t1696;
t1071 = t1088 * t1696 - t1092 * t1698;
t1070 = -pkin(1) * t1172 + qJ(2) * t1122 + t1096 * t1696 + t1102 * t1698;
t1069 = -pkin(1) * t1183 + qJ(2) * t1140 + t1090 * t1696 + t1100 * t1698;
t1068 = -pkin(7) * t1146 + t1080 * t1707 - t1120 * t1703;
t1067 = pkin(1) * t1111 + t1751;
t1064 = -pkin(2) * t1087 - t1717;
t1063 = -qJ(2) * t1111 + t1068 * t1698 - t1073 * t1696;
t1062 = -pkin(1) * t1146 + qJ(2) * t1112 + t1068 * t1696 + t1073 * t1698;
t1061 = -pkin(7) * t1087 + t1066 * t1707 - t1078 * t1703;
t1060 = pkin(1) * t1071 + t1752;
t1059 = -qJ(2) * t1071 + t1061 * t1698 - t1064 * t1696;
t1058 = -pkin(1) * t1087 + qJ(2) * t1072 + t1061 * t1696 + t1064 * t1698;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1664, 0, -t1663, 0, t1738, -t1633, -t1732, -pkin(6) * t1732, 0, 0, t1603, 0, -t1829, 0, t1846, -t1845, t1847, pkin(6) * t1847 + qJ(2) * t1796 - t1704 * t1506, -t1586 * t1704 + t1588 * t1708, -t1551 * t1704 + t1553 * t1708, -t1582 * t1704 + t1584 * t1708, -t1585 * t1704 + t1587 * t1708, -t1581 * t1704 + t1583 * t1708, -t1622 * t1704 + t1623 * t1708, t1708 * t1409 - t1704 * t1399 - pkin(6) * (t1559 * t1708 + t1561 * t1704), t1708 * t1410 - t1704 * t1400 - pkin(6) * (t1560 * t1708 + t1562 * t1704), t1708 * t1447 - t1704 * t1446 - pkin(6) * (t1605 * t1708 + t1606 * t1704), t1708 * t1327 - t1704 * t1307 - pkin(6) * (t1439 * t1708 + t1440 * t1704), -t1419 * t1704 + t1421 * t1708, -t1364 * t1704 + t1365 * t1708, -t1403 * t1704 + t1405 * t1708, -t1418 * t1704 + t1420 * t1708, -t1404 * t1704 + t1406 * t1708, -t1467 * t1704 + t1468 * t1708, t1708 * t1218 - t1704 * t1215 - pkin(6) * (t1396 * t1708 + t1397 * t1704), t1708 * t1224 - t1704 * t1217 - pkin(6) * (t1401 * t1708 + t1402 * t1704), t1708 * t1181 - t1704 * t1179 - pkin(6) * (t1359 * t1708 + t1360 * t1704), t1708 * t1161 - t1704 * t1141 - pkin(6) * (t1257 * t1708 + t1258 * t1704), -t1286 * t1704 + t1288 * t1708, -t1227 * t1704 + t1228 * t1708, -t1265 * t1704 + t1267 * t1708, -t1285 * t1704 + t1287 * t1708, -t1266 * t1704 + t1268 * t1708, -t1321 * t1704 + t1322 * t1708, t1708 * t1115 - t1704 * t1110 - pkin(6) * (t1247 * t1708 + t1248 * t1704), t1708 * t1117 - t1704 * t1116 - pkin(6) * (t1262 * t1708 + t1263 * t1704), t1708 * t1097 - t1704 * t1094 - pkin(6) * (t1222 * t1708 + t1223 * t1704), t1708 * t1075 - t1704 * t1070 - pkin(6) * (t1121 * t1708 + t1122 * t1704), -t1149 * t1704 + t1151 * t1708, -t1113 * t1704 + t1114 * t1708, -t1165 * t1704 + t1167 * t1708, -t1148 * t1704 + t1150 * t1708, -t1166 * t1704 + t1168 * t1708, -t1193 * t1704 + t1194 * t1708, t1708 * t1074 - t1704 * t1069 - pkin(6) * (t1139 * t1708 + t1140 * t1704), t1708 * t1081 - t1704 * t1076 - pkin(6) * (t1162 * t1708 + t1163 * t1704), t1708 * t1063 - t1704 * t1062 - pkin(6) * (t1111 * t1708 + t1112 * t1704), t1708 * t1059 - t1704 * t1058 - pkin(6) * (t1071 * t1708 + t1072 * t1704); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1663, 0, t1664, 0, t1633, t1738, t1755, pkin(6) * t1755, 0, 0, t1829, 0, t1603, 0, t1845, t1846, t1848, pkin(6) * t1848 + qJ(2) * t1797 + t1708 * t1506, t1586 * t1708 + t1588 * t1704, t1551 * t1708 + t1553 * t1704, t1582 * t1708 + t1584 * t1704, t1585 * t1708 + t1587 * t1704, t1581 * t1708 + t1583 * t1704, t1622 * t1708 + t1623 * t1704, t1704 * t1409 + t1708 * t1399 + pkin(6) * (-t1559 * t1704 + t1561 * t1708), t1704 * t1410 + t1708 * t1400 + pkin(6) * (-t1560 * t1704 + t1562 * t1708), t1704 * t1447 + t1708 * t1446 + pkin(6) * (-t1605 * t1704 + t1606 * t1708), t1704 * t1327 + t1708 * t1307 + pkin(6) * (-t1439 * t1704 + t1440 * t1708), t1419 * t1708 + t1421 * t1704, t1364 * t1708 + t1365 * t1704, t1403 * t1708 + t1405 * t1704, t1418 * t1708 + t1420 * t1704, t1404 * t1708 + t1406 * t1704, t1467 * t1708 + t1468 * t1704, t1704 * t1218 + t1708 * t1215 + pkin(6) * (-t1396 * t1704 + t1397 * t1708), t1704 * t1224 + t1708 * t1217 + pkin(6) * (-t1401 * t1704 + t1402 * t1708), t1704 * t1181 + t1708 * t1179 + pkin(6) * (-t1359 * t1704 + t1360 * t1708), t1704 * t1161 + t1708 * t1141 + pkin(6) * (-t1257 * t1704 + t1258 * t1708), t1286 * t1708 + t1288 * t1704, t1227 * t1708 + t1228 * t1704, t1265 * t1708 + t1267 * t1704, t1285 * t1708 + t1287 * t1704, t1266 * t1708 + t1268 * t1704, t1321 * t1708 + t1322 * t1704, t1704 * t1115 + t1708 * t1110 + pkin(6) * (-t1247 * t1704 + t1248 * t1708), t1704 * t1117 + t1708 * t1116 + pkin(6) * (-t1262 * t1704 + t1263 * t1708), t1704 * t1097 + t1708 * t1094 + pkin(6) * (-t1222 * t1704 + t1223 * t1708), t1704 * t1075 + t1708 * t1070 + pkin(6) * (-t1121 * t1704 + t1122 * t1708), t1149 * t1708 + t1151 * t1704, t1113 * t1708 + t1114 * t1704, t1165 * t1708 + t1167 * t1704, t1148 * t1708 + t1150 * t1704, t1166 * t1708 + t1168 * t1704, t1193 * t1708 + t1194 * t1704, t1704 * t1074 + t1708 * t1069 + pkin(6) * (-t1139 * t1704 + t1140 * t1708), t1704 * t1081 + t1708 * t1076 + pkin(6) * (-t1162 * t1704 + t1163 * t1708), t1704 * t1063 + t1708 * t1062 + pkin(6) * (-t1111 * t1704 + t1112 * t1708), t1704 * t1059 + t1708 * t1058 + pkin(6) * (-t1071 * t1704 + t1072 * t1708); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1669, t1670, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1557, t1558, 0, -t1521, t1612, t1601, t1615, -t1611, t1613, 0, t1462, t1461, t1430, t1358, t1486, t1436, t1455, t1485, t1456, t1536, t1245, t1246, t1219, t1178, t1337, t1289, t1323, t1336, t1324, t1407, t1129, t1131, t1105, t1082, t1187, t1152, t1199, t1186, t1200, t1255, t1083, t1084, t1067, t1060; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1709, 0, 0, -g(3), -t1669, 0, 0, 0, t1661, 0, -t1660, 0, t1828, -t1630, t1524, qJ(2) * t1524, t1588, t1553, t1584, t1587, t1583, t1623, t1409, t1410, t1447, t1327, t1421, t1365, t1405, t1420, t1406, t1468, t1218, t1224, t1181, t1161, t1288, t1228, t1267, t1287, t1268, t1322, t1115, t1117, t1097, t1075, t1151, t1114, t1167, t1150, t1168, t1194, t1074, t1081, t1063, t1059; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1709, 0, qJDD(1), 0, g(3), 0, -t1670, 0, 0, 0, t1660, 0, t1661, 0, t1630, t1828, t1756, t1506, t1586, t1551, t1582, t1585, t1581, t1622, t1399, t1400, t1446, t1307, t1419, t1364, t1403, t1418, t1404, t1467, t1215, t1217, t1179, t1141, t1286, t1227, t1265, t1285, t1266, t1321, t1110, t1116, t1094, t1070, t1149, t1113, t1165, t1148, t1166, t1193, t1069, t1076, t1062, t1058; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1669, t1670, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1557, t1558, 0, -t1521, t1612, t1601, t1615, -t1611, t1613, 0, t1462, t1461, t1430, t1358, t1486, t1436, t1455, t1485, t1456, t1536, t1245, t1246, t1219, t1178, t1337, t1289, t1323, t1336, t1324, t1407, t1129, t1131, t1105, t1082, t1187, t1152, t1199, t1186, t1200, t1255, t1083, t1084, t1067, t1060; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1709, 0, 0, -t1817, t1599, 0, t1625, t1602, t1619, t1624, t1617, t1647, t1531, t1534, t1482, pkin(7) * t1482, t1488, t1437, t1459, t1487, t1460, t1537, t1291, t1297, t1254, t1232, t1339, t1290, t1325, t1338, t1326, t1408, t1155, t1169, t1118, t1096, t1189, t1153, t1201, t1188, t1202, t1256, t1090, t1095, t1068, t1061; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1709, 0, qJDD(1), 0, t1817, 0, t1600, 0, t1679, -t1666, -t1771, -t1679, -t1770, -qJDD(3), t1515, t1516, 0, pkin(2) * t1482, -t1540, -t1476, -t1529, t1538, -t1530, -t1555, t1328, t1332, t1280, t1249, -t1376, -t1303, -t1366, -t1375, -t1367, -t1411, t1180, t1185, t1125, t1102, -t1204, -t1157, -t1234, -t1203, -t1235, -t1259, t1100, t1101, t1073, t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1599, -t1600, 0, 0, t1612, t1601, t1615, -t1611, t1613, 0, t1762, t1763, t1742, t1773, t1486, t1436, t1455, t1485, t1456, t1536, t1744, t1743, t1727, t1718, t1337, t1289, t1323, t1336, t1324, t1407, t1746, t1745, t1747, t1748, t1187, t1152, t1199, t1186, t1200, t1255, t1750, t1749, t1751, t1752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1656, t1658, t1668, -t1686, t1676, t1686, 0, t1577, t1552, 0, t1541, t1478, t1532, t1539, t1533, t1556, t1432, t1438, t1313, -pkin(8) * t1355, t1378, t1305, t1368, t1377, t1369, t1412, t1221, t1240, t1135, t1124, t1206, t1159, t1236, t1205, t1237, t1260, t1104, t1109, t1080, t1066; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1685, t1655, t1674, t1657, t1667, -t1685, -t1577, 0, t1554, 0, -t1790, -t1608, -t1546, t1790, -t1723, t1644, t1393, t1395, -pkin(3) * t1477, -pkin(3) * t1355, -t1535, -t1528, -t1475, t1535, -t1728, t1644, t1238, t1243, t1251, t1138, -t1442, -t1441, -t1352, t1442, -t1721, t1637, t1128, t1133, t1120, t1078; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1679, t1666, t1771, t1679, t1770, qJDD(3), -t1552, -t1554, 0, 0, t1540, t1476, t1529, -t1538, t1530, t1555, t1725, t1724, t1720, t1740, t1376, t1303, t1366, t1375, t1367, t1411, t1712, t1711, t1713, t1710, t1204, t1157, t1234, t1203, t1235, t1259, t1715, t1714, t1716, t1717; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1593, t1543, t1722, -t1632, t1626, t1632, 0, t1526, t1433, 0, t1466, t1386, t1457, t1464, t1458, t1491, t1340, t1357, t1210, -qJ(5) * t1225, t1272, t1213, t1300, t1271, t1301, t1331, t1170, t1177, t1099, t1089; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1780, t1545, t1627, t1733, -t1573, t1780, -t1526, 0, t1434, 0, t1465, t1384, t1453, t1463, t1454, t1490, t1311, t1314, t1195, t1216, t1270, t1211, t1298, t1269, t1299, t1330, t1154, t1164, t1098, t1085; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1790, t1608, t1546, -t1790, t1723, -t1644, -t1433, -t1434, 0, 0, t1535, t1528, t1475, -t1535, t1728, -t1644, t1849, t1741 + 0.2e1 * t1811, t1820, t1821, t1442, t1441, t1352, -t1442, t1721, -t1637, t1726, t1719, t1760, t1761; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1508, -t1470, t1831, -t1570, t1564, t1570, 0, t1427, -t1734, 0, t1345, t1278, t1382, t1343, t1383, t1414, t1264, t1281, t1130, -pkin(9) * t1143; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1781, t1830, t1565, -t1757, -t1502, t1781, -t1427, 0, t1294, 0, t1344, t1276, t1380, t1342, t1381, t1413, t1241, t1244, t1126, t1136; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1535, t1528, t1475, -t1535, t1728, -t1644, t1734, -t1294, 0, 0, t1442, t1441, t1352, -t1442, t1721, -t1637, t1735, t1729, t1275, t1142; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1391, -t1348, t1833, -t1494, t1492, t1494, 0, t1329, t1191, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1784, t1832, t1493, t1390, -t1424, t1784, -t1329, 0, t1192, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1442, t1441, t1352, -t1442, t1721, -t1637, -t1191, -t1192, 0, 0;];
m_new_reg  = t1;
