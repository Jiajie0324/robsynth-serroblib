% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRPRRR14V3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRPRRR14V3_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-12 15:12
% Revision: b693519ea345eb34ae9622239e7f1167217e9d53 (2019-04-09)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRPRRR14V3_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(1,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14V3_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14V3_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'S6RRPRRR14V3_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [1x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRPRRR14V3_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-04-12 15:10:19
% EndTime: 2019-04-12 15:10:40
% DurationCPUTime: 6.55s
% Computational Cost: add. (2878->481), mult. (7458->684), div. (0->0), fcn. (5669->8), ass. (0->194)
t326 = sin(qJ(4));
t327 = sin(qJ(2));
t330 = cos(qJ(4));
t418 = qJD(4) * t330;
t390 = t327 * t418;
t331 = cos(qJ(2));
t427 = qJD(2) * t331;
t343 = t326 * t427 + t390;
t406 = qJD(2) * qJD(4);
t283 = qJD(1) * t343 + t326 * t406;
t487 = t283 * qJ(3);
t325 = sin(qJ(5));
t329 = cos(qJ(5));
t437 = t330 * t331;
t288 = (t325 * t327 + t329 * t437) * qJD(1);
t365 = t329 * t418 - t288;
t415 = qJD(5) * t325;
t486 = -t326 * t415 + t365;
t320 = t330 * qJD(2);
t430 = qJD(1) * t327;
t478 = -t326 * t430 + t320;
t485 = t478 * qJD(3);
t421 = qJD(4) * t326;
t391 = t327 * t421;
t369 = qJD(1) * t391;
t409 = t331 * qJD(1);
t425 = qJD(3) * t326;
t475 = qJ(3) * t330;
t484 = qJ(3) * t369 - ((qJD(4) + t409) * t475 + t425) * qJD(2);
t297 = qJD(5) - t478;
t328 = cos(qJ(6));
t396 = t330 * t430;
t429 = qJD(2) * t326;
t299 = t396 + t429;
t317 = -qJD(4) + t409;
t357 = t317 * t325;
t281 = t299 * t329 - t357;
t324 = sin(qJ(6));
t462 = t281 * t324;
t255 = -t328 * t297 + t462;
t301 = t329 * t317;
t455 = t299 * t325;
t279 = t301 + t455;
t272 = qJD(6) + t279;
t483 = t255 * t272;
t482 = t279 * t317;
t322 = t327 ^ 2;
t453 = t317 * t331;
t360 = qJD(1) * t322 - t453;
t481 = t326 * t360;
t407 = qJD(1) * qJD(2);
t384 = t331 * t407;
t282 = -t369 + (t384 + t406) * t330;
t457 = t478 * t317;
t480 = t282 - t457;
t456 = t299 * t317;
t479 = t283 - t456;
t385 = t327 * t407;
t413 = qJD(5) * t329;
t399 = t329 * t282 - t317 * t413 + t325 * t385;
t252 = -t299 * t415 + t399;
t410 = qJD(6) * t328;
t400 = t328 * t252 + t324 * t283 + t297 * t410;
t411 = qJD(6) * t324;
t245 = -t281 * t411 + t400;
t474 = t245 * t325;
t379 = t252 * t324 - t328 * t283;
t257 = t281 * t328 + t297 * t324;
t412 = qJD(6) * t257;
t246 = t379 + t412;
t473 = t246 * t325;
t472 = t252 * t325;
t471 = t257 * t478;
t265 = t485 - t487;
t470 = t265 * t325;
t469 = t265 * t329;
t266 = qJD(3) * t396 - t484;
t468 = t266 * t325;
t467 = t266 * t329;
t466 = t272 * t324;
t465 = t279 * t297;
t464 = t279 * t299;
t463 = t281 * t299;
t461 = t282 * t326;
t460 = t283 * t325;
t459 = t283 * t330;
t458 = t297 * t325;
t454 = t299 * t330;
t378 = -t282 * t325 + t329 * t385;
t253 = qJD(5) * t281 - t378;
t452 = t324 * t253;
t451 = t324 * t329;
t450 = t325 * t326;
t449 = t325 * t330;
t448 = t326 * t327;
t447 = t326 * t328;
t446 = t326 * t329;
t445 = t327 * t330;
t332 = qJD(2) ^ 2;
t444 = t327 * t332;
t443 = t328 * t253;
t442 = t328 * t329;
t441 = t328 * t330;
t440 = t329 * t253;
t278 = t329 * t283;
t439 = t329 * t330;
t438 = t329 * t331;
t419 = qJD(4) * t329;
t371 = -qJD(6) + t419;
t372 = -qJD(6) * t329 + qJD(4);
t414 = qJD(5) * t328;
t386 = t325 * t414;
t397 = t326 * t409;
t436 = t371 * t441 + (t324 * t372 - t386) * t326 - t288 * t328 - t324 * t397;
t420 = qJD(4) * t328;
t435 = t328 * t397 - t330 * t411 + (t329 * t410 - t420) * t326 + t486 * t324;
t434 = t458 * t478 + t278;
t433 = -t331 ^ 2 + t322;
t432 = MDP(27) * t297;
t431 = MDP(29) * t257;
t428 = qJD(2) * t327;
t426 = qJD(3) * t322;
t424 = qJD(3) * t327;
t423 = qJD(3) * t331;
t422 = qJD(4) * t325;
t417 = qJD(5) * t255;
t416 = qJD(5) * t257;
t408 = qJD(4) + t317;
t405 = qJD(3) * qJD(2);
t404 = 0.2e1 * t405;
t403 = t326 * t453;
t402 = t317 * t437;
t333 = qJD(1) ^ 2;
t401 = t327 * t331 * t333;
t394 = t327 * t427;
t393 = t317 * t421;
t392 = t317 * t418;
t389 = t297 * t415;
t388 = t324 * t415;
t382 = MDP(19) * t430;
t296 = t478 * qJ(3);
t359 = t329 * qJD(3) - t296 * t325;
t249 = qJD(5) * t359 + t469;
t380 = -t249 * t324 + t328 * t266;
t376 = qJD(2) * t433;
t375 = t297 * t329;
t374 = qJD(3) * t408;
t370 = qJ(3) * t392;
t287 = -t329 * t430 + t409 * t449;
t366 = -t325 * t418 + t287;
t267 = -t328 * t299 + t451 * t478;
t364 = t324 * t413 - t267;
t268 = t299 * t324 + t442 * t478;
t363 = t328 * t413 - t268;
t362 = t249 * t328 + t266 * t324;
t285 = qJD(3) * t325 + t296 * t329;
t292 = t299 * qJ(3);
t259 = t285 * t328 + t292 * t324;
t361 = t285 * t324 - t292 * t328;
t358 = t297 * t317;
t356 = t317 * t281;
t354 = -qJD(3) * t297 + qJD(4) * t292;
t353 = t279 * t330 + t297 * t450;
t352 = t281 * t330 + t297 * t446;
t294 = -t325 * t331 + t327 * t439;
t274 = t294 * t328 + t324 * t448;
t295 = -t324 * t330 + t326 * t442;
t291 = t324 * t446 + t441;
t351 = t292 * t327 - t326 * t423;
t350 = t296 * t327 - t330 * t423;
t349 = -t297 * t413 - t460;
t348 = t389 - t278;
t347 = -t272 * t410 - t452;
t346 = -t272 * t411 + t443;
t344 = -t372 + t409;
t342 = t326 * t413 - t366;
t341 = -t325 * t411 + t363;
t340 = t272 * (-qJD(6) - t301);
t339 = -t347 - t417;
t338 = -qJ(3) * t393 + t330 * t374;
t337 = -t257 * t450 + t272 * t295;
t336 = -t255 * t450 + t272 * t291;
t334 = qJ(3) ^ 2;
t293 = t325 * t445 + t438;
t273 = t294 * t324 - t327 * t447;
t264 = (-qJD(5) + t320) * t438 + (-t326 * t419 + (-qJD(5) * t330 + qJD(2)) * t325) * t327;
t263 = -t325 * t391 - t331 * t415 - t329 * t428 + (t325 * t427 + t327 * t413) * t330;
t254 = t257 * t415;
t250 = qJD(5) * t285 + t470;
t248 = (qJD(6) * t448 + t264) * t328 + (-qJD(6) * t294 + t343) * t324;
t247 = qJD(6) * t274 + t264 * t324 - t328 * t343;
t244 = -qJD(6) * t259 + t380;
t243 = -qJD(6) * t361 + t362;
t1 = [(t266 * t331 + t338 * t327 + (-t360 * t475 - t351) * qJD(2)) * MDP(20) + (t245 * t293 + t248 * t272 + t253 * t274 + t257 * t263) * MDP(31) + (t253 * t293 + t263 * t272) * MDP(33) + (-t246 * t293 - t247 * t272 - t253 * t273 - t255 * t263) * MDP(32) + (-t252 * t293 - t253 * t294 - t263 * t281 - t264 * t279) * MDP(23) + (t252 * t294 + t264 * t281) * MDP(22) + (-t245 * t273 - t246 * t274 - t247 * t257 - t248 * t255) * MDP(30) + (t245 * t274 + t248 * t257) * MDP(29) + (t317 * t391 - t282 * t331 + (t299 * t327 + t330 * t360) * qJD(2)) * MDP(17) + (-t253 * t448 - t263 * t297 - t279 * t343 - t283 * t293) * MDP(25) + (t283 * t448 + t297 * t343) * MDP(26) + (t252 * t448 + t264 * t297 + t281 * t343 + t283 * t294) * MDP(24) + (-qJ(3) * t444 + t331 * t404) * MDP(12) + (t282 * t445 + (t320 * t331 - t391) * t299) * MDP(15) - MDP(7) * t444 + (t264 * t292 + t266 * t294 + (qJ(3) * t352 - t285 * t326) * t427 + (-t285 * t418 - t249 * t326 + t352 * qJD(3) + ((t297 * t419 + t252) * t330 + (-qJD(4) * t281 - t348) * t326) * qJ(3)) * t327) * MDP(28) + 0.2e1 * ((qJ(3) * t426 + t334 * t394) * MDP(14) + (-qJ(3) * t376 + t327 * t423) * MDP(11) - MDP(5) * t376) * qJD(1) + (t244 * t293 - t359 * t247 + t250 * t273 - t361 * t263 + t336 * t424 + (t336 * t427 + ((-t255 * t422 + t371 * t466 + t443) * t330 + ((-t388 - t420) * t272 - t473 + t339 * t329) * t326) * t327) * qJ(3)) * MDP(34) + (-t243 * t293 - t359 * t248 + t250 * t274 - t259 * t263 + t337 * t424 + (t337 * t427 + ((t272 * t328 * t371 - t257 * t422 - t452) * t330 + (-(-qJD(4) * t324 + t386) * t272 - t474 + (t346 - t416) * t329) * t326) * t327) * qJ(3)) * MDP(35) + (t263 * t292 + t266 * t293 + (qJ(3) * t353 + t326 * t359) * t427 + (t359 * t418 - t250 * t326 + t353 * qJD(3) + ((t297 * t422 + t253) * t330 + (-qJD(4) * t279 - t349) * t326) * qJ(3)) * t327) * MDP(27) + ((-t299 * t326 + t330 * t478) * t427 + (-t461 - t459 + (-t326 * t478 - t454) * qJD(4)) * t327) * MDP(16) + (t317 * t390 + t283 * t331 + (t327 * t478 - t481) * qJD(2)) * MDP(18) + (t265 * t331 + (-t408 * t425 - t370) * t327 + (qJ(3) * t481 - t350) * qJD(2)) * MDP(21) + t332 * t331 * MDP(6) + (-t317 - t409) * MDP(19) * t428 + 0.2e1 * t327 * MDP(4) * t384 + (0.4e1 * qJ(3) * t394 + 0.2e1 * t426) * qJD(1) * MDP(13); (-t326 * t479 + t330 * t480) * MDP(16) + (t279 * t288 + t281 * t287 + (-t279 * t329 - t281 * t325) * t418 + (-t472 - t440 + (t279 * t325 - t281 * t329) * qJD(5)) * t326) * MDP(23) + (((-t320 * t327 + t403) * qJ(3) + t350) * qJD(1) + t338) * MDP(21) + 0.2e1 * (-qJ(3) * t401 + t405) * MDP(13) + (qJ(3) * t404 - t334 * t401) * MDP(14) - MDP(4) * t401 + (MDP(11) * qJ(3) + MDP(5)) * t333 * t433 + (-t246 * t450 - t253 * t291 - t255 * t342 - t272 * t435) * MDP(32) + (t253 * t450 + t272 * t342) * MDP(33) + (t245 * t450 + t253 * t295 + t257 * t342 + t272 * t436) * MDP(31) + (t245 * t295 + t257 * t436) * MDP(29) + (-t245 * t291 - t246 * t295 - t255 * t436 - t257 * t435) * MDP(30) + (t370 + t326 * t374 + ((-t326 * t428 - t402) * qJ(3) + t351) * qJD(1)) * MDP(20) + (-t392 + (t402 + (-t299 + t429) * t327) * qJD(1)) * MDP(17) + (-t288 * t292 + (t249 + t354 * t329 + (-t356 + t348) * qJ(3)) * t330 + (-t292 * t415 + qJD(3) * t281 + t467 + t317 * t285 + (-t297 * t301 + t252) * qJ(3)) * t326) * MDP(28) + (-t317 * t454 + t461) * MDP(15) + t317 * t382 + (t244 * t450 + t250 * t291 - t435 * t359 - t342 * t361 + ((-t324 * t439 + t447) * t272 + t255 * t449) * qJD(3) + ((t255 * t357 + t324 * t340 + t443) * t326 + (t473 + (t417 - t452) * t329 + (-t328 * t344 + t388) * t272) * t330) * qJ(3)) * MDP(34) + (-t287 * t292 + (t250 + t354 * t325 + (t349 - t482) * qJ(3)) * t330 + (t292 * t413 + qJD(3) * t279 + t468 - t317 * t359 + (-t325 * t358 + t253) * qJ(3)) * t326) * MDP(27) + (-t243 * t450 + t250 * t295 - t436 * t359 - t342 * t259 + (-(t324 * t326 + t328 * t439) * t272 + t257 * t449) * qJD(3) + ((t257 * t357 + t328 * t340 - t452) * t326 + (t474 + (t416 - t443) * t329 + (t324 * t344 + t386) * t272) * t330) * qJ(3)) * MDP(35) + (t393 + (-t403 + (-t478 + t320) * t327) * qJD(1)) * MDP(18) + (t253 * t330 + t366 * t297 + (t349 + t482) * t326) * MDP(25) + (-t252 * t330 + t365 * t297 + (-t356 - t348) * t326) * MDP(24) + (-t326 * t358 - t459) * MDP(26) + (t252 * t446 + t281 * t486) * MDP(22); -MDP(11) * t401 + t479 * MDP(20) + t480 * MDP(21) + (t434 - t464) * MDP(27) - MDP(28) * t463 + t267 * t272 * MDP(34) + (t268 * t272 + t254) * MDP(35) + ((-qJD(5) * t466 - t246) * MDP(34) + (-t272 * t414 - t245) * MDP(35) - t297 ^ 2 * MDP(28)) * t329 + (-qJD(5) * t432 - t283 * MDP(28) + (-t255 * t478 - t339) * MDP(34) + (-t346 - t471) * MDP(35)) * t325 + (MDP(14) * qJ(3) + MDP(13)) * (-t322 * t333 - t332); -t299 * t478 * MDP(15) + (t299 ^ 2 - t478 ^ 2) * MDP(16) + (t282 + t457) * MDP(17) + (-t283 - t456) * MDP(18) + qJD(2) * t382 + (-t296 * t317 + (-t299 - t396) * qJD(3) + t484) * MDP(20) + (t292 * t317 - 0.2e1 * t485 + t487) * MDP(21) + (t281 * t375 + t472) * MDP(22) + ((t252 - t465) * t329 + (-t281 * t297 - t253) * t325) * MDP(23) + (t297 * t375 + t460 - t463) * MDP(24) + (-t389 + t434 + t464) * MDP(25) - t297 * t299 * MDP(26) + (-t279 * t296 - t299 * t359 - t467) * MDP(27) + (-t281 * t296 + t285 * t299 + t468) * MDP(28) + (t257 * t341 + t328 * t474) * MDP(29) + (t255 * t268 + t257 * t267 + (-t255 * t328 - t257 * t324) * t413 + (-t245 * t324 - t246 * t328 + (t255 * t324 - t257 * t328) * qJD(6)) * t325) * MDP(30) + (-t245 * t329 + t254 + (t443 - t471) * t325 + t341 * t272) * MDP(31) + (t246 * t329 - t364 * t272 + (-t255 * t297 + t347) * t325) * MDP(32) + (t272 * t458 - t440) * MDP(33) + (-t244 * t329 - (t292 * t451 + t296 * t328) * t272 - t364 * t359 + (t250 * t324 + t292 * t255 - t297 * t361 - t359 * t410) * t325) * MDP(34) + (t243 * t329 + (-t292 * t442 + t296 * t324) * t272 - t363 * t359 + (t250 * t328 + t292 * t257 - t259 * t297 + t359 * t411) * t325) * MDP(35); -t279 ^ 2 * MDP(23) + (t399 + t465) * MDP(24) + t378 * MDP(25) + t283 * MDP(26) - MDP(27) * t470 + (t279 * t292 + t297 * t359 - t469) * MDP(28) + (-MDP(34) * t255 - MDP(35) * t257 + t432) * t285 + (-MDP(24) * t455 - MDP(25) * t281 - MDP(27) * t285 - MDP(28) * t359) * qJD(5) + (MDP(22) * t279 + MDP(23) * t281 + MDP(25) * t297 - MDP(27) * t292 - MDP(31) * t257 + MDP(32) * t255 - MDP(33) * t272 + MDP(34) * t361 + MDP(35) * t259) * t281 + (t245 * MDP(29) + (-t257 * t279 - t246 - t412) * MDP(30) + t253 * MDP(31) + t250 * MDP(35) - t272 ^ 2 * MDP(32)) * t324 + ((t245 - t483) * MDP(30) + t253 * MDP(32) - t250 * MDP(34) + (MDP(31) * t272 + t431) * t272) * t328; t255 * t431 + (-t255 ^ 2 + t257 ^ 2) * MDP(30) + (t400 + t483) * MDP(31) + (t257 * t272 - t379) * MDP(32) + t253 * MDP(33) + (t257 * t359 + t259 * t272 + t380) * MDP(34) + (-t255 * t359 - t272 * t361 - t362) * MDP(35) + (-MDP(31) * t462 - MDP(32) * t257 - MDP(34) * t259 + MDP(35) * t361) * qJD(6);];
tauc  = t1;
