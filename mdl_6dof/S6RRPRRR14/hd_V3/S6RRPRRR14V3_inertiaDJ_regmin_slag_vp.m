% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPRRR14V3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-12 15:12
% Revision: b693519ea345eb34ae9622239e7f1167217e9d53 (2019-04-09)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR14V3_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(1,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14V3_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14V3_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'S6RRPRRR14V3_inertiaDJ_regmin_slag_vp: pkin has to be [1x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-04-12 15:10:06
% EndTime: 2019-04-12 15:10:22
% DurationCPUTime: 4.15s
% Computational Cost: add. (1128->301), mult. (4234->597), div. (0->0), fcn. (3911->8), ass. (0->190)
t62 = sin(qJ(5));
t177 = qJD(5) * t62;
t65 = cos(qJ(6));
t148 = t65 * t177;
t61 = sin(qJ(6));
t63 = sin(qJ(4));
t66 = cos(qJ(5));
t171 = qJD(6) * t66;
t97 = -qJD(4) + t171;
t223 = (t97 * t61 + t148) * t63;
t68 = cos(qJ(2));
t179 = qJD(4) * t68;
t67 = cos(qJ(4));
t151 = t67 * t179;
t64 = sin(qJ(2));
t56 = t64 ^ 2;
t215 = qJD(2) * (-t68 ^ 2 + t56);
t222 = -t64 * t151 + t215 * t63;
t154 = t63 * t179;
t221 = t64 * t154 + t215 * t67;
t220 = -0.4e1 * t64;
t54 = t62 ^ 2;
t174 = qJD(6) * t61;
t52 = qJD(4) * t67;
t74 = -t63 * t174 + t65 * t52;
t219 = t74 * t54;
t176 = qJD(5) * t66;
t146 = t64 * t176;
t50 = t68 * qJD(2);
t78 = t62 * t50 + t146;
t218 = t78 * t67;
t55 = t63 ^ 2;
t59 = t67 ^ 2;
t187 = t55 + t59;
t217 = qJ(3) * qJD(5) * t187;
t167 = qJ(3) * qJD(4);
t184 = qJD(3) * t63;
t216 = -t67 * t167 - t184;
t188 = t55 - t59;
t214 = qJD(4) * t188;
t58 = t66 ^ 2;
t189 = t54 - t58;
t213 = qJD(5) * t189;
t57 = t65 ^ 2;
t190 = t61 ^ 2 - t57;
t119 = t190 * qJD(6);
t152 = t64 * t52;
t31 = t63 * t50 + t152;
t12 = t63 * t146 + t31 * t62;
t106 = t65 * t152;
t159 = t65 * t50;
t173 = qJD(6) * t64;
t212 = t63 * (-t61 * t173 + t159) + t106;
t198 = t62 * t65;
t194 = t64 * t67;
t163 = t62 * t194;
t191 = t66 * t68;
t33 = t163 + t191;
t145 = t65 * t176;
t71 = -t62 * t174 + t145;
t181 = qJD(4) * t64;
t155 = t63 * t181;
t168 = t64 * qJD(2);
t9 = -t62 * t155 - t66 * t168 - t68 * t177 + t218;
t210 = -t9 * t198 - t33 * t71;
t209 = 0.2e1 * t55;
t208 = -0.4e1 * t62;
t207 = 0.2e1 * qJD(3);
t180 = qJD(4) * t66;
t130 = t63 * t180;
t175 = qJD(5) * t67;
t10 = (qJD(2) * t67 - qJD(5)) * t191 + (-t130 + (qJD(2) - t175) * t62) * t64;
t192 = t66 * t67;
t162 = t64 * t192;
t34 = -t62 * t68 + t162;
t4 = (t63 * t173 + t10) * t65 + (-qJD(6) * t34 + t31) * t61;
t206 = t4 * t61;
t96 = -qJD(6) + t180;
t89 = t96 * t67;
t7 = t65 * t89 - t223;
t205 = t61 * t7;
t204 = t66 * t9;
t203 = t9 * t67;
t202 = t10 * t62;
t201 = t10 * t67;
t200 = t55 * t56;
t199 = t62 * t63;
t197 = t63 * t64;
t196 = t63 * t65;
t195 = t63 * t66;
t193 = t65 * t67;
t185 = qJ(3) * t67;
t183 = qJD(3) * t67;
t182 = qJD(3) * t68;
t51 = qJD(4) * t63;
t14 = -t64 * t196 + t34 * t61;
t178 = qJD(5) * t14;
t172 = qJD(6) * t65;
t170 = qJD(6) * t67;
t169 = t56 * qJD(3);
t164 = t62 * t197;
t32 = t61 * t195 + t193;
t161 = t32 * t50;
t35 = t65 * t195 - t61 * t67;
t160 = t35 * t50;
t158 = t67 * t50;
t157 = t54 * t183;
t156 = t64 * t184;
t153 = t66 * t52;
t150 = qJD(5) * t33 * t61;
t149 = t63 * t177;
t147 = t62 * t175;
t144 = t66 * t175;
t143 = t61 * t171;
t142 = t61 * t170;
t141 = t63 * t172;
t140 = t65 * t171;
t139 = t65 * t170;
t138 = t61 * t172;
t137 = t62 * t176;
t136 = t62 * t183;
t135 = t62 * t184;
t134 = t66 * t184;
t133 = t63 * t52;
t132 = t64 * t50;
t131 = t64 * t182;
t129 = t66 * t183;
t128 = t67 * t182;
t127 = qJ(3) * t168;
t15 = t61 * t197 + t34 * t65;
t125 = t15 * t177 - t4 * t66;
t124 = t64 * t188;
t122 = qJD(3) * t187;
t115 = t50 * t209;
t114 = 0.2e1 * t137;
t113 = 0.2e1 * t133;
t112 = t54 * t156;
t109 = t55 * t137;
t108 = t63 * t137;
t107 = t64 * t135;
t104 = t64 * t141;
t103 = t63 * t148;
t102 = t61 * t145;
t101 = t63 * t145;
t100 = t62 * t153;
t99 = t63 * t158;
t98 = t56 * t133;
t95 = t68 * t127;
t94 = t67 * t114;
t93 = t64 * t101;
t92 = -t14 * t65 - t15 * t61;
t91 = -t32 * t65 - t35 * t61;
t90 = -t33 * t66 - t34 * t62;
t36 = -0.2e1 * t61 * t108;
t88 = t14 * t67 - t32 * t197;
t87 = t15 * t67 - t35 * t197;
t86 = -t61 * t192 + t196;
t72 = t61 * t52 + t141;
t73 = t65 * t51 + t142;
t8 = -t61 * t149 + t66 * t72 - t73;
t85 = -t32 * t177 + t66 * t8;
t84 = t33 * t172 + t61 * t9;
t83 = t35 * t64;
t82 = t32 * t64;
t30 = -t155 + t158;
t81 = t67 * t168 + t154;
t80 = t63 * t168 - t151;
t79 = -t64 * t177 + t66 * t50;
t76 = -t149 + t153;
t27 = t130 + t147;
t28 = t63 * t176 + t62 * t52;
t75 = t62 * t51 - t144;
t70 = -t54 * t72 + t36;
t13 = t66 * t152 + t79 * t63;
t26 = t143 + t148;
t25 = t61 * t177 - t140;
t24 = -t62 * t172 - t61 * t176;
t22 = (t65 * t192 + t61 * t63) * qJ(3);
t21 = t86 * qJ(3);
t20 = t35 * t177;
t19 = qJ(3) * t83;
t18 = qJ(3) * t82;
t17 = t214 * t64 - t99;
t16 = t213 * t63 - t100;
t6 = t86 * qJD(3) + (-t97 * t193 + (t96 * t63 + t147) * t61) * qJ(3);
t5 = -t65 * t129 + t216 * t61 + (t66 * t142 + t27 * t65 - t141) * qJ(3);
t3 = t15 * qJD(6) + t10 * t61 - t63 * t159 - t106;
t2 = qJD(3) * t82 + (t161 + (t97 * t196 + (t89 - t149) * t61) * t64) * qJ(3);
t1 = -qJD(3) * t83 + (-t160 + (-t96 * t193 + t223) * t64) * qJ(3);
t11 = [0, 0, 0, 0.2e1 * t132, -0.2e1 * t215, 0, 0, 0, 0, 0, -0.2e1 * qJ(3) * t215 + 0.2e1 * t131, 0, 0.4e1 * t95 + 0.2e1 * t169, 0.2e1 * (t95 + t169) * qJ(3), 0.2e1 * t132 * t59 - 0.2e1 * t98, 0.2e1 * t214 * t56 + t99 * t220, 0.2e1 * t221, -0.2e1 * t222, -0.2e1 * t132, -0.2e1 * t221 * qJ(3) + 0.2e1 * t64 * t128, 0.2e1 * t222 * qJ(3) - 0.2e1 * t63 * t131, 0.2e1 * t34 * t10, -0.2e1 * t10 * t33 - 0.2e1 * t34 * t9, 0.2e1 * t10 * t197 + 0.2e1 * t31 * t34, -0.2e1 * t9 * t197 - 0.2e1 * t31 * t33, 0.2e1 * t132 * t55 + 0.2e1 * t98, 0.2e1 * (t33 * t194 + t62 * t200) * qJD(3) + 0.2e1 * (t33 * t158 + (t113 * t62 + t176 * t55) * t56 + (t115 * t62 - t33 * t51 + t203) * t64) * qJ(3), 0.2e1 * (t34 * t194 + t66 * t200) * qJD(3) + 0.2e1 * (t34 * t158 + (t113 * t66 - t177 * t55) * t56 + (t115 * t66 - t34 * t51 + t201) * t64) * qJ(3), 0.2e1 * t15 * t4, -0.2e1 * t14 * t4 - 0.2e1 * t15 * t3, 0.2e1 * t15 * t9 + 0.2e1 * t33 * t4, -0.2e1 * t14 * t9 - 0.2e1 * t3 * t33, 0.2e1 * t33 * t9, -0.2e1 * t14 * t107 + 0.2e1 * t18 * t9 + 0.2e1 * t2 * t33 + 0.2e1 * (-t12 * t14 - t164 * t3) * qJ(3), -0.2e1 * t15 * t107 - 0.2e1 * t1 * t33 + 0.2e1 * t19 * t9 + 0.2e1 * (-t12 * t15 - t164 * t4) * qJ(3); 0, 0, 0, 0, 0, t50, -t168, 0, 0, 0, 0, -t127 + t182, 0, 0, -t17, t133 * t220 - t188 * t50, t80, t81, 0, -qJ(3) * t80 + t182 * t63, -qJ(3) * t81 + t128, t10 * t195 + t34 * t76, t90 * t52 + (-t202 - t204 + (t33 * t62 - t34 * t66) * qJD(5)) * t63, -t201 + t79 * t55 + (t34 + 0.2e1 * t162) * t51, t203 - t78 * t55 + (-t33 - 0.2e1 * t163) * t51, t17 (t33 - t163) * t184 + ((t9 - t218) * t63 + (t124 * t62 + t33 * t67) * qJD(4)) * qJ(3) (t34 - t162) * t184 + ((-t67 * t79 + t10) * t63 + (t124 * t66 + t34 * t67) * qJD(4)) * qJ(3), t15 * t7 + t35 * t4, -t14 * t7 - t15 * t8 - t3 * t35 - t32 * t4, t15 * t28 + t199 * t4 + t7 * t33 + t35 * t9, -t14 * t28 - t199 * t3 - t32 * t9 - t8 * t33, t199 * t9 + t28 * t33, t21 * t9 + t6 * t33 + (qJ(3) * t88 + t18 * t63) * t176 + (t18 * t52 + t2 * t63 + t88 * qJD(3) + ((-t181 * t32 + t3) * t67 + (-qJD(4) * t14 - t64 * t8 - t161) * t63) * qJ(3)) * t62, -t22 * t9 + t5 * t33 + (qJ(3) * t87 + t19 * t63) * t176 + (t19 * t52 - t1 * t63 + t87 * qJD(3) + ((-t181 * t35 + t4) * t67 + (-qJD(4) * t15 - t64 * t7 - t160) * t63) * qJ(3)) * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, qJ(3) * t207, t113, -0.2e1 * t214, 0, 0, 0, 0, 0, 0.2e1 * t133 * t58 - 0.2e1 * t109, -0.4e1 * t100 * t63 + t209 * t213, 0.2e1 * t147 * t63 + 0.2e1 * t214 * t66, 0.2e1 * t144 * t63 - 0.2e1 * t214 * t62, -0.2e1 * t133, 0.2e1 * t122 * t62 + 0.2e1 * t66 * t217, 0.2e1 * t122 * t66 - 0.2e1 * t62 * t217, 0.2e1 * t35 * t7, -0.2e1 * t32 * t7 - 0.2e1 * t35 * t8, 0.2e1 * t199 * t7 + 0.2e1 * t28 * t35, -0.2e1 * t199 * t8 - 0.2e1 * t28 * t32, 0.2e1 * t133 * t54 + 0.2e1 * t109, 0.2e1 * (t185 * t32 + t21 * t63) * t176 + 0.2e1 * ((-t167 * t32 + t6) * t63 + (qJ(3) * t8 + qJD(3) * t32 + qJD(4) * t21) * t67) * t62, 0.2e1 * (t185 * t35 - t22 * t63) * t176 + 0.2e1 * ((-t167 * t35 + t5) * t63 + (qJ(3) * t7 + qJD(3) * t35 - qJD(4) * t22) * t67) * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, 0, 0, 0, 0, 0, 0, t31, t30, 0, 0, 0, 0, 0, t13, -t12, 0, 0, 0, 0, 0 (-t3 - t150) * t66 + (-t84 + t178) * t62, t125 + t210; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t51, t52, 0, 0, 0, 0, 0, t27, -t75, 0, 0, 0, 0, 0, t70 - t85, t20 + (-t7 - 0.2e1 * t103) * t66 - t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30, -t31, t168, -qJ(3) * t30 - t183 * t64, qJ(3) * t31 + t156, t176 * t34 + t202, qJD(5) * t90 + t10 * t66 - t62 * t9, t12, t13, 0, -t64 * t129 + (-t158 * t66 + t27 * t64) * qJ(3), t64 * t136 + (t144 * t64 + t30 * t62) * qJ(3), t15 * t71 + t4 * t198, t92 * t176 + (-t3 * t65 - t206 + (t14 * t61 - t15 * t65) * qJD(6)) * t62, t125 - t210 (t3 - t150) * t66 + (-t84 - t178) * t62, t177 * t33 - t204, -t61 * t112 + t18 * t177 - t2 * t66 + (t64 * t36 + (-t31 * t61 - t104) * t54) * qJ(3), -t65 * t112 + t19 * t177 + t1 * t66 + (-t212 * t54 - 0.2e1 * t62 * t93) * qJ(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, -t51, 0, t216, t167 * t63 - t183, -t16, -t189 * t52 - 0.4e1 * t108, t75, t27, 0, -qJ(3) * t76 - t134, qJ(3) * t28 + t135, t7 * t198 + t35 * t71, t91 * t176 + (-t205 - t65 * t8 + (t32 * t61 - t35 * t65) * qJD(6)) * t62, t20 + (-t7 + 0.2e1 * t103) * t66 + t219, t70 + t85, t16, t61 * t157 + t21 * t177 - t6 * t66 + (t61 * t94 + (-t51 * t61 + t139) * t54) * qJ(3), t65 * t157 - t22 * t177 - t5 * t66 + (-t54 * t73 + t65 * t94) * qJ(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, -0.2e1 * t213, 0, 0, 0, 0, 0, 0.2e1 * t137 * t57 - 0.2e1 * t138 * t54, t102 * t208 + 0.2e1 * t54 * t119, 0.2e1 * t143 * t62 + 0.2e1 * t213 * t65, 0.2e1 * t140 * t62 - 0.2e1 * t213 * t61, -0.2e1 * t137, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10, -t9, t31, qJ(3) * t12 + t107, qJ(3) * t13 + t134 * t64, t15 * t172 + t206, qJD(6) * t92 - t61 * t3 + t4 * t65, t84, -t174 * t33 + t65 * t9, 0, t65 * t107 + (t212 * t62 + t93) * qJ(3), -t61 * t107 + (-t104 * t62 - t12 * t61) * qJ(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t76, -t28, t51, qJ(3) * t75 - t136, qJ(3) * t27 - t129, t172 * t35 + t205, qJD(6) * t91 - t61 * t8 + t7 * t65, t141 * t62 + t28 * t61, t62 * t74 + t101, 0, -t65 * t136 + (-t144 * t65 + t62 * t73) * qJ(3), t61 * t136 + (t139 * t62 - t61 * t75) * qJ(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, -t176, 0, 0, 0, 0, 0, -t26, t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t176, -t177, 0, 0, 0, -t119 * t62 + t102, t138 * t208 - t176 * t190, t25, t26, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t138, -0.2e1 * t119, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4, -t3, t9, t2, -t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t7, -t8, t28, t6, t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t24, -t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t24, t177, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, -t174, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t11;
