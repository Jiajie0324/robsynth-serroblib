% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRR14V3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-12 15:12
% Revision: b693519ea345eb34ae9622239e7f1167217e9d53 (2019-04-09)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR14V3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(1,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14V3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14V3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'S6RRPRRR14V3_inertiaDJ_reg2_slag_vp: pkin has to be [1x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-04-12 15:10:06
% EndTime: 2019-04-12 15:10:33
% DurationCPUTime: 7.21s
% Computational Cost: add. (1743->410), mult. (6822->789), div. (0->0), fcn. (6072->8), ass. (0->248)
t102 = cos(qJ(4));
t103 = cos(qJ(2));
t245 = qJD(4) * t103;
t190 = t102 * t245;
t99 = sin(qJ(2));
t91 = t99 ^ 2;
t300 = qJD(2) * (-t103 ^ 2 + t91);
t98 = sin(qJ(4));
t308 = -t99 * t190 + t300 * t98;
t214 = t98 * t245;
t307 = t102 * t300 + t99 * t214;
t306 = -0.4e1 * t99;
t85 = t103 * qJD(2);
t198 = t99 * t85;
t305 = 0.4e1 * qJ(3) * t198;
t87 = qJD(4) * t102;
t41 = t98 * t85 + t99 * t87;
t96 = sin(qJ(6));
t304 = t41 * t96;
t90 = t98 ^ 2;
t94 = t102 ^ 2;
t273 = t90 + t94;
t303 = qJ(3) * t273;
t101 = cos(qJ(5));
t244 = qJD(5) * t101;
t209 = t99 * t244;
t97 = sin(qJ(5));
t121 = t97 * t85 + t209;
t302 = t102 * t121;
t199 = t98 * t87;
t161 = t91 * t199;
t301 = t90 * t198 + t161;
t274 = t90 - t94;
t299 = qJD(4) * t274;
t89 = t97 ^ 2;
t93 = t101 ^ 2;
t276 = t89 - t93;
t298 = qJD(5) * t276;
t88 = t96 ^ 2;
t100 = cos(qJ(6));
t92 = t100 ^ 2;
t178 = qJD(6) * (t88 - t92);
t16 = t98 * t209 + t41 * t97;
t202 = t97 * t244;
t158 = t98 * t202;
t253 = qJD(6) * t98;
t227 = t96 * t253;
t297 = -t100 * (t89 * t87 + 0.2e1 * t158) + t89 * t227;
t254 = qJD(6) * t96;
t228 = t97 * t254;
t259 = qJD(4) * t99;
t233 = t98 * t259;
t106 = -t97 * t233 + t302;
t242 = qJD(5) * t103;
t84 = t99 * qJD(2);
t12 = -t101 * t84 - t97 * t242 + t106;
t264 = t102 * t99;
t236 = t97 * t264;
t251 = t101 * t103;
t43 = t236 + t251;
t288 = -t97 * t12 - t43 * t244;
t296 = -t100 * t288 - t43 * t228;
t246 = qJD(4) * t101;
t153 = -qJD(6) + t246;
t257 = qJD(5) * t97;
t230 = t98 * t257;
t295 = t153 * t102 - t230;
t263 = t12 * t101;
t252 = t101 * t102;
t225 = t99 * t252;
t44 = -t103 * t97 + t225;
t267 = t101 * t44;
t286 = t43 * t97;
t243 = qJD(5) * t102;
t208 = t97 * t243;
t157 = t99 * t208;
t216 = t98 * t246;
t13 = -t157 - t99 * t216 - t101 * t242 + (t102 * t251 + t97 * t99) * qJD(2);
t287 = t13 * t97;
t294 = qJD(5) * (t267 + t286) - t263 + t287;
t293 = 0.2e1 * t91;
t292 = -0.4e1 * t97;
t291 = 2 * qJD(3);
t269 = t100 * t98;
t18 = -t99 * t269 + t44 * t96;
t189 = t100 * t244;
t270 = t100 * t97;
t280 = t98 * t99;
t19 = t100 * t44 + t96 * t280;
t4 = qJD(6) * t19 - t100 * t41 + t13 * t96;
t290 = -t18 * t189 - t4 * t270;
t241 = qJD(6) * t100;
t206 = t98 * t241;
t117 = t96 * t87 + t206;
t204 = t102 * t254;
t86 = qJD(4) * t98;
t11 = -t100 * t86 + t101 * t117 - t96 * t230 - t204;
t266 = t101 * t98;
t42 = t100 * t102 + t96 * t266;
t289 = -t11 * t270 - t42 * t189;
t285 = t44 * t97;
t284 = t90 * t91;
t283 = t96 * t97;
t282 = t96 * t98;
t281 = t97 * t98;
t104 = qJ(3) ^ 2;
t248 = qJD(3) * t102;
t217 = t99 * t248;
t271 = qJ(3) * t98;
t135 = t217 * t271;
t234 = t89 * t259;
t279 = t90 * t104 * t234 - 0.2e1 * t89 * t135;
t151 = t104 * t198;
t250 = qJ(3) * qJD(3);
t221 = t94 * t250;
t278 = t94 * t151 + t91 * t221;
t275 = t89 + t93;
t268 = t101 * t43;
t265 = t102 * t98;
t262 = qJ(3) * t102;
t261 = qJD(3) * t98;
t260 = qJD(3) * t99;
t258 = qJD(5) * t18;
t256 = qJD(6) * t18;
t255 = qJD(6) * t42;
t249 = qJ(3) * qJD(4);
t247 = qJD(3) * t103;
t240 = qJD(6) * t101;
t239 = 0.2e1 * t43 * t12;
t238 = t97 * t280;
t81 = t90 * t250;
t168 = t91 * t81;
t237 = (t161 * t104 + t151 * t90 + t168) * t89;
t235 = t98 * t260;
t232 = qJD(5) * t43 * t96;
t231 = t96 * t257;
t229 = t99 * t257;
t226 = t99 * t253;
t224 = t96 * t86;
t223 = t96 * t261;
t222 = t97 * t261;
t220 = t42 * t85;
t45 = t100 * t266 - t96 * t102;
t219 = t45 * t85;
t213 = t100 * t257;
t212 = t19 * t244;
t211 = t45 * t244;
t210 = t88 * t244;
t207 = t97 * t241;
t205 = t96 * t240;
t203 = t96 * t241;
t201 = t97 * t248;
t200 = t101 * t261;
t197 = t99 * t247;
t196 = t98 * t275;
t195 = t99 * t274;
t194 = qJ(3) * t87;
t193 = t102 * t85;
t192 = t100 * t248;
t191 = t101 * t87;
t188 = t101 * t243;
t187 = t100 * t240;
t186 = t101 * t248;
t185 = t102 * t247;
t5 = -t44 * t254 + t304 + (t13 + t226) * t100;
t184 = -t5 * t101 + t19 * t257;
t10 = -t100 * t191 + t98 * t213 - t224 + t255;
t183 = t10 * t101 + t45 * t257;
t181 = qJD(4) * t275;
t175 = t273 * qJD(3);
t174 = t86 * t293;
t69 = -0.2e1 * t202;
t173 = 0.2e1 * t202;
t71 = 0.2e1 * t198;
t170 = t96 * t226;
t169 = t99 * t222;
t166 = t100 * t235;
t165 = t89 * t199;
t163 = t90 * t202;
t162 = t89 * t203;
t160 = t19 * t207;
t159 = t45 * t207;
t155 = t99 * t206;
t154 = -qJD(4) + t240;
t149 = t96 * t189;
t148 = t97 * t191;
t147 = t98 * t193;
t146 = 0.2e1 * t175;
t145 = t102 * t181;
t144 = -0.2e1 * t158;
t143 = (0.1e1 - t275) * t265;
t115 = t42 * t99;
t25 = qJ(3) * t115;
t114 = t45 * t99;
t26 = qJ(3) * t114;
t142 = -t100 * t26 - t25 * t96;
t141 = -t100 * t25 + t26 * t96;
t126 = -t96 * t252 + t269;
t31 = t126 * qJ(3);
t32 = (t100 * t252 + t282) * qJ(3);
t140 = t100 * t32 - t31 * t96;
t139 = -t100 * t31 - t32 * t96;
t136 = t268 - t285;
t134 = t154 * t98;
t49 = t96 * t144;
t133 = t102 * t18 - t42 * t280;
t132 = t102 * t19 - t45 * t280;
t131 = t101 * t11 - t42 * t257;
t130 = t43 * t257 - t263;
t128 = t101 * t13 - t44 * t257;
t127 = t12 * t96 + t43 * t241;
t125 = t98 * t249 - t248;
t124 = qJD(4) * t136;
t123 = t98 * t84 - t190;
t122 = t102 * t84 + t214;
t40 = t193 - t233;
t120 = t101 * t85 - t229;
t119 = t97 * t86 - t188;
t38 = t98 * t244 + t97 * t87;
t37 = t208 + t216;
t118 = t191 - t230;
t116 = t96 * t244 + t207;
t112 = t91 * t250 + t151;
t111 = -t117 * t89 + t49;
t1 = -qJD(3) * t114 + (-t219 + (-t100 * t295 + t96 * t134) * t99) * qJ(3);
t2 = qJD(3) * t115 + (t220 + (t100 * t134 + t295 * t96) * t99) * qJ(3);
t110 = t141 * qJD(6) + t1 * t100 - t2 * t96;
t6 = -t100 * t186 - t96 * t194 - t223 + (t100 * t37 + t101 * t204 - t206) * qJ(3);
t7 = t126 * qJD(3) + (t153 * t282 + (-t154 * t100 + t231) * t102) * qJ(3);
t109 = t139 * qJD(6) - t6 * t100 - t7 * t96;
t108 = t12 * t281 + t38 * t43;
t107 = qJ(3) * t41 + t235;
t17 = t101 * t41 - t98 * t229;
t75 = t92 * t244;
t72 = -0.2e1 * t198;
t70 = -0.2e1 * t199;
t65 = t89 * t221;
t60 = t92 * t202;
t54 = t88 * t202;
t36 = t205 + t213;
t35 = -t187 + t231;
t33 = -t189 + t228;
t24 = 0.2e1 * t301;
t23 = 0.2e1 * t163 + 0.2e1 * t165;
t22 = t299 * t99 - t147;
t21 = t298 * t98 - t148;
t20 = t97 * t178 - t149;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, -0.2e1 * t300, 0, t72, 0, 0, 0, 0, 0, 0, t71, 0, 0.2e1 * t300, 0, 0, t72, -0.2e1 * qJ(3) * t300 + 0.2e1 * t197, 0, t91 * t291 + t305, 0.2e1 * t112, 0.2e1 * t94 * t198 - 0.2e1 * t161, t147 * t306 + t293 * t299, 0.2e1 * t307, t24, -0.2e1 * t308, t72, -0.2e1 * qJ(3) * t307 + 0.2e1 * t99 * t185, 0.2e1 * qJ(3) * t308 - 0.2e1 * t98 * t197, t91 * t146 + t273 * t305, 0.2e1 * t112 * t90 + 0.2e1 * t278, 0.2e1 * t44 * t13, -0.2e1 * t12 * t44 - 0.2e1 * t13 * t43, 0.2e1 * t13 * t280 + 0.2e1 * t41 * t44, t239, -0.2e1 * t12 * t280 - 0.2e1 * t41 * t43, t24, 0.2e1 * (t43 * t264 + t97 * t284) * qJD(3) + 0.2e1 * (-t43 * t233 + (t91 * t244 + t71 * t97) * t90 + (t12 * t99 + t174 * t97 + t43 * t85) * t102) * qJ(3), 0.2e1 * (t101 * t284 + t44 * t264) * qJD(3) + 0.2e1 * (-t44 * t233 + (t101 * t71 - t91 * t257) * t90 + (t101 * t174 + t13 * t99 + t44 * t85) * t102) * qJ(3), 0.2e1 * t136 * t235 + 0.2e1 * (t124 * t264 + (t136 * t85 - t294 * t99) * t98) * qJ(3), 0.2e1 * t93 * t168 + 0.2e1 * (t301 * t93 - t161) * t104 + 0.2e1 * t237 + 0.2e1 * t278, 0.2e1 * t19 * t5, -0.2e1 * t18 * t5 - 0.2e1 * t19 * t4, 0.2e1 * t12 * t19 + 0.2e1 * t43 * t5, 0.2e1 * t18 * t4, -0.2e1 * t12 * t18 - 0.2e1 * t4 * t43, t239, -0.2e1 * t18 * t169 + 0.2e1 * t25 * t12 + 0.2e1 * t2 * t43 + 0.2e1 * (-t16 * t18 - t238 * t4) * qJ(3), -0.2e1 * t19 * t169 - 0.2e1 * t1 * t43 + 0.2e1 * t26 * t12 + 0.2e1 * (-t16 * t19 - t238 * t5) * qJ(3), -0.2e1 * t1 * t18 - 0.2e1 * t19 * t2 - 0.2e1 * t25 * t5 + 0.2e1 * t26 * t4, 0.2e1 * t104 * t163 * t91 - 0.2e1 * t1 * t26 + 0.2e1 * t2 * t25 + 0.2e1 * t237; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, 0, -t84, 0, 0, 0, 0, 0, 0, t85, 0, 0, t84, 0, 0, -qJ(3) * t84 + t247, 0, 0, -t22, t199 * t306 - t274 * t85, t123, t22, t122, 0, -qJ(3) * t123 + t98 * t247, -qJ(3) * t122 + t185, 0, 0, -t44 * t230 + (t13 * t98 + t44 * t87) * t101 (-t268 - t285) * t87 + (-t263 - t287 + (-t267 + t286) * qJD(5)) * t98, -t13 * t102 + t120 * t90 + (t44 + 0.2e1 * t225) * t86, t108, t12 * t102 - t121 * t90 + (-t43 - 0.2e1 * t236) * t86, t22 (t43 - t236) * t261 + ((t12 - t302) * t98 + (t102 * t43 + t195 * t97) * qJD(4)) * qJ(3) (t44 - t225) * t261 + ((-t102 * t120 + t13) * t98 + (t101 * t195 + t102 * t44) * qJD(4)) * qJ(3), -t136 * t248 + (t102 * t294 + t98 * t124) * qJ(3) (-0.2e1 * t93 + 0.2e1) * t135 + (t143 * t85 + (t274 * t93 - t89 * t94 - t274) * t259) * t104 + t279, -t10 * t19 + t45 * t5, t10 * t18 - t11 * t19 - t4 * t45 - t42 * t5, -t10 * t43 + t45 * t12 + t19 * t38 + t5 * t281, t11 * t18 + t4 * t42, -t11 * t43 - t42 * t12 - t18 * t38 - t4 * t281, t108, t12 * t31 + t43 * t7 + (qJ(3) * t133 + t25 * t98) * t244 + (t25 * t87 + t2 * t98 + t133 * qJD(3) + ((-t259 * t42 + t4) * t102 + (-qJD(4) * t18 - t11 * t99 - t220) * t98) * qJ(3)) * t97, -t12 * t32 + t43 * t6 + (qJ(3) * t132 + t26 * t98) * t244 + (t26 * t87 - t1 * t98 + t132 * qJD(3) + ((-t259 * t45 + t5) * t102 + (-qJD(4) * t19 + t10 * t99 - t219) * t98) * qJ(3)) * t97, -t1 * t42 + t10 * t25 + t11 * t26 + t18 * t6 - t19 * t7 - t2 * t45 - t31 * t5 - t32 * t4, t1 * t32 + t2 * t31 + t25 * t7 + t26 * t6 + (-t94 * t234 + (t69 * t99 - t85 * t89) * t265) * t104 + t279; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, 0.2e1 * t250, 0.2e1 * t199, -0.2e1 * t299, 0, t70, 0, 0, 0, 0, t146, 0.2e1 * t81 + 0.2e1 * t221, 0.2e1 * t199 * t93 - 0.2e1 * t163, -0.4e1 * t148 * t98 + 0.2e1 * t298 * t90, 0.2e1 * t101 * t299 + 0.2e1 * t208 * t98, t23, 0.2e1 * t188 * t98 - 0.2e1 * t299 * t97, t70, 0.2e1 * t97 * t175 + 0.2e1 * t244 * t303, 0.2e1 * t101 * t175 - 0.2e1 * t257 * t303, 0, 0.2e1 * qJD(4) * t104 * t143 + 0.2e1 * t221 * t93 + 0.2e1 * t65 + 0.2e1 * t81, -0.2e1 * t45 * t10, 0.2e1 * t10 * t42 - 0.2e1 * t11 * t45, -0.2e1 * t10 * t281 + 0.2e1 * t38 * t45, 0.2e1 * t42 * t11, -0.2e1 * t11 * t281 - 0.2e1 * t38 * t42, t23, 0.2e1 * (t262 * t42 + t31 * t98) * t244 + 0.2e1 * ((-t249 * t42 + t7) * t98 + (qJ(3) * t11 + qJD(3) * t42 + qJD(4) * t31) * t102) * t97, 0.2e1 * (t262 * t45 - t32 * t98) * t244 + 0.2e1 * ((-t249 * t45 + t6) * t98 + (-qJ(3) * t10 + qJD(3) * t45 - qJD(4) * t32) * t102) * t97, 0.2e1 * t10 * t31 - 0.2e1 * t11 * t32 + 0.2e1 * t42 * t6 - 0.2e1 * t45 * t7, 0.2e1 * t31 * t7 - 0.2e1 * t32 * t6 + 0.2e1 * t65 + 0.2e1 * (t202 * t94 - t165) * t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85, 0, 0, 0, 0, 0, 0, 0, 0, t41, t40, 0, 0, 0, 0, 0, 0, 0, 0, t17, -t16, -t128 + t288, 0, 0, 0, 0, 0, 0, 0 (-t4 - t232) * t101 + (-t127 + t258) * t97, t184 - t296, t160 + (t212 + (t5 + t256) * t97) * t96 + t290 (-t271 * t276 * t99 + t101 * t142) * qJD(5) + (t101 * t107 + t110) * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86, t87, 0, 0, 0, 0, 0, 0, 0, 0, t37, -t119, -t145, 0, 0, 0, 0, 0, 0, 0, t111 - t131, t183 + t297, t159 + (t211 + (-t10 + t255) * t97) * t96 + t289 (t101 * t140 + t262 * t276) * qJD(5) + (t101 * t125 + t109) * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t54 + 0.2e1 * t60 - 0.2e1 * t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, 0, -t41, t84, -qJ(3) * t40 - t217, t107, 0, 0, t44 * t244 + t287, t128 + t288, t16, t130, t17, 0, -t99 * t186 + (-t101 * t40 + t157) * qJ(3), qJ(3) * t106 + t201 * t99, -t196 * t260 + (-t145 * t99 - t196 * t85) * qJ(3), 0, -t19 * t228 + (t5 * t97 + t212) * t100, -t160 + (-t212 + (-t5 + t256) * t97) * t96 + t290, t184 + t296, t116 * t18 + t4 * t283 (t4 - t232) * t101 + (-t127 - t258) * t97, t130, -t89 * t99 * t223 + t25 * t257 - t2 * t101 + (t99 * t49 + (-t155 - t304) * t89) * qJ(3), -t89 * t166 + t26 * t257 + t1 * t101 + (t89 * t170 + (t144 * t99 - t41 * t89) * t100) * qJ(3), t141 * t244 + (-qJD(6) * t142 - t1 * t96 - t100 * t2) * t97, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, 0, -t86, 0, -t194 - t261, t125, 0, 0, -t21, -t276 * t87 - 0.4e1 * t158, t119, t21, t37, 0, -qJ(3) * t118 - t200, qJ(3) * t38 + t222, -t181 * t271 + t275 * t248, 0, -t45 * t228 + (-t10 * t97 + t211) * t100, -t159 + (-t211 + (t10 + t255) * t97) * t96 + t289, t183 - t297, t11 * t283 + t116 * t42, t111 + t131, t21, t89 * t96 * t248 + t31 * t257 - t7 * t101 + (-t89 * t224 + (t173 * t96 + t241 * t89) * t102) * qJ(3), t89 * t192 - t32 * t257 - t6 * t101 + (-t89 * t204 + (t102 * t173 - t86 * t89) * t100) * qJ(3), t139 * t244 + (-qJD(6) * t140 - t100 * t7 + t6 * t96) * t97, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t173, -0.2e1 * t298, 0, t69, 0, 0, 0, 0, 0, 0, 0.2e1 * t60 - 0.2e1 * t162, t149 * t292 + 0.2e1 * t178 * t89, 0.2e1 * t100 * t298 + 0.2e1 * t205 * t97, 0.2e1 * t54 + 0.2e1 * t162, 0.2e1 * t187 * t97 - 0.2e1 * t298 * t96, t69, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, 0, -t12, t41, qJ(3) * t16 + t169, qJ(3) * t17 + t200 * t99, 0, 0, t19 * t241 + t5 * t96, t5 * t100 - t96 * t4 + (-t100 * t18 - t19 * t96) * qJD(6), t127, -t100 * t4 + t18 * t254, t100 * t12 - t254 * t43, 0, t97 * t166 + (t100 * t16 - t170 * t97) * qJ(3), -t96 * t169 + (-t155 * t97 - t16 * t96) * qJ(3), t110, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t118, 0, -t38, t86, qJ(3) * t119 - t201, qJ(3) * t37 - t186, 0, 0, -t10 * t96 + t241 * t45, -t10 * t100 - t96 * t11 + (-t100 * t42 - t45 * t96) * qJD(6), t206 * t97 + t38 * t96, -t100 * t11 + t254 * t42, t100 * t38 - t227 * t97, 0, -t97 * t192 + (t100 * t119 + t204 * t97) * qJ(3), t96 * t201 + (t102 * t116 - t224 * t97) * qJ(3), t109, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t257, -t244, 0, 0, 0, 0, 0, 0, 0, 0, -t36, t35, t75 + t210, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, 0, -t257, 0, 0, 0, 0, 0, -t20, t203 * t292 - t210 + t75, t35, t20, t36, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t203, -0.2e1 * t178, 0, -0.2e1 * t203, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5, 0, -t4, t12, t2, -t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t10, 0, -t11, t38, t7, t6, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t116, t33, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t33, 0, -t116, t257, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t241, 0, -t254, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
