% Calculate vector of inverse dynamics joint torques for
% S6RRPRRR14V3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRPRRR14V3_convert_par2_MPV_fixb.m
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational Coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-12 15:12
% Revision: b693519ea345eb34ae9622239e7f1167217e9d53 (2019-04-09)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPRRR14V3_invdynJ_fixb_mdp_slag_vp(qJ, qJD, qJDD, g, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(1,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14V3_invdynJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14V3_invdynJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR14V3_invdynJ_fixb_mdp_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR14V3_invdynJ_fixb_mdp_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'S6RRPRRR14V3_invdynJ_fixb_mdp_slag_vp: pkin has to be [1x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRPRRR14V3_invdynJ_fixb_mdp_slag_vp: MDP has to be [35x1] (double)'); 

%% Symbolic Calculation
% From invdyn_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-04-12 15:10:38
% EndTime: 2019-04-12 15:10:59
% DurationCPUTime: 12.45s
% Computational Cost: add. (3649->605), mult. (8643->839), div. (0->0), fcn. (6853->10), ass. (0->231)
t416 = sin(qJ(4));
t417 = sin(qJ(2));
t513 = qJDD(1) * t417;
t422 = cos(qJ(2));
t518 = t422 * qJD(1);
t433 = qJD(2) * (qJD(4) + t518) + t513;
t421 = cos(qJ(4));
t531 = qJD(4) * t417;
t493 = qJD(1) * t531;
t598 = (-qJDD(2) + t493) * t421;
t607 = t433 * t416 + t598;
t611 = t607 * qJ(3);
t405 = t416 * qJDD(2);
t480 = t416 * t493;
t610 = (t421 * t433 + t405 - t480) * qJ(3);
t609 = 0.2e1 * t417;
t512 = t422 * qJDD(1);
t516 = qJD(1) * qJD(2);
t412 = t417 ^ 2;
t540 = -t422 ^ 2 + t412;
t605 = t512 * t609 - 0.2e1 * t540 * t516;
t398 = -qJD(4) + t518;
t418 = sin(qJ(1));
t423 = cos(qJ(1));
t478 = g(1) * t423 + g(2) * t418;
t586 = g(3) * t422;
t435 = -t417 * t478 + t586;
t604 = qJ(3) * t398 ^ 2 + qJDD(3) + t435;
t415 = sin(qJ(5));
t420 = cos(qJ(5));
t546 = t421 * t422;
t375 = t415 * t417 + t420 * t546;
t362 = t375 * qJD(1);
t528 = qJD(4) * t421;
t473 = t420 * t528 - t362;
t525 = qJD(5) * t415;
t603 = -t416 * t525 + t473;
t410 = t421 * qJD(2);
t538 = qJD(1) * t417;
t593 = -t416 * t538 + t410;
t602 = t593 * qJD(3);
t494 = t422 * t516;
t601 = qJD(2) * qJD(4) + t494 + t513;
t544 = t423 * t416;
t372 = t418 * t546 - t544;
t557 = t417 * t418;
t349 = t372 * t420 + t415 * t557;
t552 = t418 * t422;
t371 = t416 * t552 + t421 * t423;
t414 = sin(qJ(6));
t419 = cos(qJ(6));
t600 = t349 * t414 - t371 * t419;
t599 = t349 * t419 + t371 * t414;
t378 = qJD(5) - t593;
t537 = qJD(2) * t416;
t381 = t421 * t538 + t537;
t463 = t398 * t415;
t355 = t381 * t420 - t463;
t576 = t355 * t414;
t324 = -t419 * t378 + t576;
t383 = t420 * t398;
t569 = t381 * t415;
t353 = t383 + t569;
t345 = qJD(6) + t353;
t597 = t324 * t345;
t596 = t353 * t398;
t588 = g(2) * t423;
t477 = g(1) * t418 - t588;
t595 = t417 * t477;
t535 = qJD(2) * t422;
t444 = t416 * t535 + t417 * t528;
t587 = g(3) * t417;
t591 = t422 * t478 + t587;
t379 = t417 * t516 + qJDD(4) - t512;
t585 = qJ(3) * t379;
t590 = qJD(3) * (qJD(4) + t398) - t585;
t481 = t421 * t601 + t405;
t338 = -t480 + t481;
t523 = qJD(5) * t420;
t504 = t420 * t338 + t415 * t379 - t398 * t523;
t316 = -t381 * t525 + t504;
t584 = t316 * t415;
t326 = t355 * t419 + t378 * t414;
t583 = t326 * t593;
t337 = qJDD(5) + t607;
t582 = t337 * t415;
t581 = t338 * t416;
t580 = t345 * t414;
t579 = t353 * t378;
t578 = t353 * t381;
t577 = t355 * t381;
t573 = t372 * t415;
t572 = t378 * t415;
t571 = t593 * t398;
t570 = t381 * t398;
t568 = t398 * t421;
t487 = -t338 * t415 + t420 * t379;
t317 = qJD(5) * t355 - t487;
t315 = qJDD(6) + t317;
t567 = t414 * t315;
t566 = t414 * t420;
t520 = qJD(6) * t419;
t505 = t419 * t316 + t414 * t337 + t378 * t520;
t521 = qJD(6) * t414;
t308 = -t355 * t521 + t505;
t565 = t415 * t308;
t489 = t316 * t414 - t419 * t337;
t522 = qJD(6) * t326;
t309 = t489 + t522;
t564 = t415 * t309;
t563 = t415 * t416;
t562 = t415 * t421;
t561 = t416 * t417;
t560 = t416 * t419;
t559 = t416 * t420;
t558 = t416 * t422;
t556 = t417 * t421;
t555 = t417 * t423;
t425 = qJD(1) ^ 2;
t554 = t417 * t425;
t553 = t418 * t420;
t551 = t419 * t315;
t550 = t419 * t420;
t549 = t419 * t421;
t335 = t420 * t337;
t548 = t420 * t421;
t547 = t420 * t422;
t545 = t422 * t423;
t529 = qJD(4) * t420;
t482 = -qJD(6) + t529;
t483 = -qJD(6) * t420 + qJD(4);
t524 = qJD(5) * t419;
t495 = t415 * t524;
t502 = t416 * t518;
t543 = t482 * t549 + (t414 * t483 - t495) * t416 - t362 * t419 - t414 * t502;
t530 = qJD(4) * t419;
t542 = t419 * t502 - t421 * t521 + (t420 * t520 - t530) * t416 + t603 * t414;
t541 = t572 * t593 + t335;
t539 = MDP(29) * t326;
t536 = qJD(2) * t417;
t534 = qJD(3) * t417;
t533 = qJD(4) * t398;
t532 = qJD(4) * t415;
t527 = qJD(5) * t324;
t526 = qJD(5) * t326;
t519 = t378 * MDP(27);
t515 = qJD(1) * qJD(3);
t511 = MDP(12) * qJDD(1);
t510 = 0.2e1 * t515;
t509 = 0.2e1 * qJD(3) * qJD(2);
t508 = t414 * t561;
t507 = t417 * t560;
t506 = t422 * t554;
t500 = t416 * t531;
t498 = t378 * t525;
t497 = t414 * t525;
t491 = t540 * t425;
t319 = t602 - t611;
t458 = qJDD(3) * t415 + t319 * t420;
t374 = t593 * qJ(3);
t465 = t420 * qJD(3) - t374 * t415;
t312 = qJD(5) * t465 + t458;
t320 = qJD(3) * t381 + t610;
t490 = -t414 * t312 + t419 * t320;
t488 = -t420 * qJDD(3) + t319 * t415;
t424 = qJD(2) ^ 2;
t486 = -t412 * t425 - t424;
t485 = t378 * t420;
t479 = -g(1) * t555 - g(2) * t557 + t586;
t361 = -t420 * t538 + t518 * t562;
t474 = -t415 * t528 + t361;
t340 = -t419 * t381 + t566 * t593;
t472 = t414 * t523 - t340;
t341 = t381 * t414 + t550 * t593;
t471 = t419 * t523 - t341;
t469 = -qJ(3) * t533 + qJDD(3);
t467 = t419 * t312 + t414 * t320;
t357 = qJD(3) * t415 + t374 * t420;
t368 = t381 * qJ(3);
t328 = t357 * t419 + t368 * t414;
t466 = t357 * t414 - t368 * t419;
t464 = t378 * t398;
t462 = t398 * t355;
t460 = -qJD(3) * t378 + qJD(4) * t368;
t459 = qJDD(2) * t422 - t417 * t424;
t457 = -qJDD(3) - t479;
t455 = t353 * t421 + t378 * t563;
t454 = t355 * t421 + t378 * t559;
t370 = -t415 * t422 + t417 * t548;
t347 = t370 * t419 + t508;
t373 = -t414 * t421 + t416 * t550;
t367 = t414 * t559 + t549;
t453 = t379 * t416 - t398 * t528;
t452 = t379 * t421 + t416 * t533;
t451 = -t378 * t523 - t582;
t450 = t498 - t335;
t449 = -t345 * t520 - t567;
t448 = -t345 * t521 + t551;
t446 = -t483 + t518;
t377 = t416 * t418 + t421 * t545;
t351 = -t377 * t415 + t420 * t555;
t369 = t415 * t556 + t547;
t445 = g(1) * t351 + g(2) * (t417 * t553 - t573) - g(3) * t369;
t443 = qJDD(1) * t412 + t494 * t609;
t376 = -t418 * t421 + t422 * t544;
t442 = g(1) * t376 + g(2) * t371 + g(3) * t561;
t313 = qJD(5) * t357 + t488;
t441 = t313 + t445;
t440 = t416 * t523 - t474;
t439 = -t415 * t521 + t471;
t438 = t345 * (-qJD(6) - t383);
t437 = -t320 + t442;
t432 = -t449 - t527;
t428 = -t326 * t563 + t345 * t373;
t427 = -t324 * t563 + t345 * t367;
t426 = qJ(3) ^ 2;
t400 = g(1) * t552;
t359 = t370 * t423;
t358 = t370 * t418;
t352 = t377 * t420 + t415 * t555;
t346 = t370 * t414 - t507;
t332 = (-qJD(5) + t410) * t547 + (-t416 * t529 + (-qJD(5) * t421 + qJD(2)) * t415) * t417;
t331 = -t415 * t500 - t422 * t525 - t420 * t536 + (t415 * t535 + t417 * t523) * t421;
t323 = t352 * t419 + t376 * t414;
t322 = -t352 * t414 + t376 * t419;
t321 = t326 * t525;
t311 = (qJD(6) * t561 + t332) * t419 + (-qJD(6) * t370 + t444) * t414;
t310 = qJD(6) * t347 + t332 * t414 - t419 * t444;
t307 = -qJD(6) * t328 + t490;
t306 = -qJD(6) * t466 + t467;
t1 = [-MDP(10) * t595 + (t443 * t426 + (t412 * t510 + t595) * qJ(3)) * MDP(14) + (g(1) * t372 - g(2) * t377 + (t320 + (qJ(3) * t568 + qJD(3) * t416) * qJD(2)) * t422 + (-qJD(2) * t368 + t469 * t416 + t421 * t590) * t417) * MDP(20) + (-g(1) * t371 + g(2) * t376 + (t319 + (-qJ(3) * t398 * t416 + qJD(3) * t421) * qJD(2)) * t422 + (-qJD(2) * t374 - t416 * t590 + t469 * t421) * t417) * MDP(21) + ((-t381 * t416 + t421 * t593) * t535 + (-t581 - t607 * t421 + (-t381 * t421 - t416 * t593) * qJD(4)) * t417) * MDP(16) + ((t398 * t537 + t607) * t422 + (qJD(2) * t593 - t453) * t417) * MDP(18) + (-t316 * t369 - t317 * t370 - t331 * t355 - t332 * t353) * MDP(23) + (t316 * t370 + t332 * t355) * MDP(22) + (t315 * t369 + t331 * t345) * MDP(33) + (-t309 * t369 - t310 * t345 - t315 * t346 - t324 * t331) * MDP(32) + (t308 * t369 + t311 * t345 + t315 * t347 + t326 * t331) * MDP(31) + (-t308 * t346 - t309 * t347 - t310 * t326 - t311 * t324) * MDP(30) + (t308 * t347 + t311 * t326) * MDP(29) + t477 * MDP(2) + t478 * MDP(3) + (t307 * t369 - t466 * t331 + t313 * t346 - t465 * t310 + g(1) * t599 - g(2) * t323 + t427 * t534 + (t427 * t535 + ((-t324 * t532 + t482 * t580 + t551) * t421 + ((-t497 - t530) * t345 - t564 + t432 * t420) * t416) * t417) * qJ(3)) * MDP(34) + (-t306 * t369 - t328 * t331 + t313 * t347 - t465 * t311 - g(1) * t600 - g(2) * t322 + t428 * t534 + (t428 * t535 + ((t345 * t419 * t482 - t326 * t532 - t567) * t421 + (-(-qJD(4) * t414 + t495) * t345 - t565 + (t448 - t526) * t420) * t416) * t417) * qJ(3)) * MDP(35) + t443 * MDP(4) + (g(1) * t349 - g(2) * t352 + t320 * t369 + t331 * t368 + (qJ(3) * t455 + t416 * t465) * t535 + (t465 * t528 - t313 * t416 + t455 * qJD(3) + ((t378 * t532 + t317) * t421 + (-qJD(4) * t353 - t451) * t416) * qJ(3)) * t417) * MDP(27) + (-g(1) * t573 - g(2) * t351 + t320 * t370 + t368 * t332 + (qJ(3) * t454 - t357 * t416) * t535 + (g(1) * t553 - t357 * t528 - t312 * t416 + t454 * qJD(3) + ((t378 * t529 + t316) * t421 + (-qJD(4) * t355 - t450) * t416) * qJ(3)) * t417) * MDP(28) + (-t317 * t561 - t331 * t378 - t337 * t369 - t353 * t444) * MDP(25) + (t337 * t561 + t378 * t444) * MDP(26) + (t316 * t561 + t332 * t378 + t337 * t370 + t355 * t444) * MDP(24) + (t400 + (t417 * t510 - t588) * t422 + qJ(3) * t605) * MDP(11) + (t338 * t556 + (t410 * t422 - t500) * t381) * MDP(15) + (-g(2) * t545 + t400) * MDP(9) + (-t379 * t422 - t398 * t536) * MDP(19) + ((-t398 * t410 - t338) * t422 + (qJD(2) * t381 + t452) * t417) * MDP(17) + MDP(5) * t605 + t459 * MDP(7) + (qJDD(2) * t417 + t422 * t424) * MDP(6) + qJDD(1) * MDP(1) + (qJ(3) * t459 + qJDD(3) * t417 + t422 * t509 - t478) * MDP(12) + (0.2e1 * (qJ(3) * qJDD(1) + t515) * t412 + (0.4e1 * qJ(3) * t494 + t477) * t417) * MDP(13); (t317 * t421 + t474 * t378 + (t451 + t596) * t416) * MDP(25) + t591 * MDP(10) + ((t338 - t571) * t421 + (-t607 + t570) * t416) * MDP(16) + (-t368 * t362 - t591 * t420 + (t312 + t460 * t420 + t435 * t415 + (-t462 + t450) * qJ(3)) * t421 + (-t368 * t525 + qJD(3) * t355 + t320 * t420 + t398 * t357 + (-t378 * t383 + t316) * qJ(3)) * t416) * MDP(28) + ((qJDD(2) - t506) * t426 + (-t591 + t509) * qJ(3)) * MDP(14) - MDP(4) * t506 + (-t316 * t421 + t473 * t378 + (-t462 - t450) * t416) * MDP(24) + (-t337 * t421 - t416 * t464) * MDP(26) + (-t587 + 0.2e1 * qJ(3) * qJDD(2) + t509 + (-0.2e1 * qJ(3) * t554 - t478) * t422) * MDP(13) + (t353 * t362 + t355 * t361 + (-t353 * t420 - t355 * t415) * t528 + (-t584 - t317 * t420 + (t353 * t415 - t355 * t420) * qJD(5)) * t416) * MDP(23) + t398 * MDP(19) * t538 + qJ(3) * t422 * t511 + ((-t398 * t558 - t417 * t593) * qJD(1) + t452) * MDP(18) + (-t381 * t568 + t581) * MDP(15) + (g(1) * t359 + g(2) * t358 - g(3) * t375 - t361 * t368 + (t313 + t460 * t415 + (t451 - t596) * qJ(3)) * t421 + (t368 * t523 + qJD(3) * t353 + t320 * t415 - t398 * t465 + (-t415 * t464 + t317) * qJ(3)) * t416) * MDP(27) + (-t306 * t563 + t313 * t373 - g(1) * (t359 * t414 - t423 * t507) - g(2) * (t358 * t414 - t418 * t507) - g(3) * (-t375 * t414 + t419 * t558) - t543 * t465 - t440 * t328 + (-(t414 * t416 + t419 * t548) * t345 + t326 * t562) * qJD(3) + ((t326 * t463 + t419 * t438 - t567) * t416 + (t565 + (t526 - t551) * t420 + (t414 * t446 + t495) * t345) * t421) * qJ(3)) * MDP(35) + (t307 * t563 + t313 * t367 - g(1) * (-t359 * t419 - t423 * t508) - g(2) * (-t358 * t419 - t418 * t508) - g(3) * (t375 * t419 + t414 * t558) - t542 * t465 - t440 * t466 + ((-t414 * t548 + t560) * t345 + t324 * t562) * qJD(3) + ((t324 * t463 + t414 * t438 + t551) * t416 + (t564 + (t527 - t567) * t420 + (-t419 * t446 + t497) * t345) * t421) * qJ(3)) * MDP(34) + (-t309 * t563 - t315 * t367 - t324 * t440 - t345 * t542) * MDP(32) + (t308 * t563 + t315 * t373 + t326 * t440 + t345 * t543) * MDP(31) + (t315 * t563 + t345 * t440) * MDP(33) + (t308 * t373 + t326 * t543) * MDP(29) + (-t308 * t367 - t309 * t373 - t324 * t543 - t326 * t542) * MDP(30) + ((-t381 * t417 + t398 * t546) * qJD(1) + t453) * MDP(17) + (qJ(3) * t491 + t457) * MDP(11) - t479 * MDP(9) + MDP(7) * t512 + MDP(6) * t513 + MDP(5) * t491 + qJDD(2) * MDP(8) + (t316 * t559 + t355 * t603) * MDP(22) + (t374 * t538 + t416 * t604 - t585 * t421) * MDP(21) + (t368 * t538 - t585 * t416 - t421 * t604) * MDP(20); (-qJDD(2) - t506) * MDP(11) + t417 * t511 + t486 * MDP(13) + (qJ(3) * t486 - t457) * MDP(14) + (t598 - t570) * MDP(20) + (t481 - t571) * MDP(21) + (t541 - t578) * MDP(27) - MDP(28) * t577 + t340 * t345 * MDP(34) + (t341 * t345 + t321) * MDP(35) + (MDP(20) * t601 - MDP(21) * t493) * t416 + ((-qJD(5) * t580 - t309) * MDP(34) + (-t345 * t524 - t308) * MDP(35) - t378 ^ 2 * MDP(28)) * t420 + (-qJD(5) * t519 - t337 * MDP(28) + (-t324 * t593 - t432) * MDP(34) + (-t448 - t583) * MDP(35)) * t415; -t593 ^ 2 * MDP(16) + (t338 + t571) * MDP(17) + (-t607 - t570) * MDP(18) + t379 * MDP(19) + (-t374 * t398 + t442 - t610) * MDP(20) + (g(1) * t377 + g(2) * t372 + g(3) * t556 + t368 * t398 - 0.2e1 * t602 + t611) * MDP(21) + (t355 * t485 + t584) * MDP(22) + ((t316 - t579) * t420 + (-t355 * t378 - t317) * t415) * MDP(23) + (t378 * t485 - t577 + t582) * MDP(24) + (-t498 + t541 + t578) * MDP(25) + (-t353 * t374 + t420 * t437) * MDP(27) + (-t355 * t374 - t415 * t437) * MDP(28) + (t326 * t439 + t419 * t565) * MDP(29) + (t324 * t341 + t326 * t340 + (-t324 * t419 - t326 * t414) * t523 + (-t308 * t414 - t309 * t419 + (t324 * t414 - t326 * t419) * qJD(6)) * t415) * MDP(30) + (-t308 * t420 + t321 + (t551 - t583) * t415 + t439 * t345) * MDP(31) + (t309 * t420 - t472 * t345 + (-t324 * t378 + t449) * t415) * MDP(32) + (-t420 * t315 + t345 * t572) * MDP(33) + (-t307 * t420 - (t368 * t566 + t374 * t419) * t345 - g(1) * (-t376 * t550 + t377 * t414) - g(2) * (-t371 * t550 + t372 * t414) + t373 * t587 - t472 * t465 + (t313 * t414 + t368 * t324 - t378 * t466 - t465 * t520) * t415) * MDP(34) + (t306 * t420 + (-t368 * t550 + t374 * t414) * t345 - g(1) * (t376 * t566 + t377 * t419) - g(2) * (t371 * t566 + t372 * t419) - t367 * t587 - t471 * t465 + (t313 * t419 + t368 * t326 - t328 * t378 + t465 * t521) * t415) * MDP(35) + (-MDP(15) * t593 + MDP(16) * t381 - 0.2e1 * MDP(20) * qJD(3) - t378 * MDP(26) - MDP(27) * t465 + MDP(28) * t357) * t381; -t353 ^ 2 * MDP(23) + (t504 + t579) * MDP(24) + t487 * MDP(25) + t337 * MDP(26) + (-t445 - t488) * MDP(27) + (g(1) * t352 + g(2) * t349 + g(3) * t370 + t353 * t368 + t378 * t465 - t458) * MDP(28) + (-t324 * MDP(34) - t326 * MDP(35) + t519) * t357 + (-MDP(24) * t569 - MDP(25) * t355 - MDP(27) * t357 - MDP(28) * t465) * qJD(5) + (MDP(22) * t353 + MDP(23) * t355 + MDP(25) * t378 - MDP(27) * t368 - MDP(31) * t326 + MDP(32) * t324 - MDP(33) * t345 + MDP(34) * t466 + MDP(35) * t328) * t355 + (t308 * MDP(29) + (-t326 * t353 - t309 - t522) * MDP(30) + t315 * MDP(31) + t441 * MDP(35) - t345 ^ 2 * MDP(32)) * t414 + ((t308 - t597) * MDP(30) + t315 * MDP(32) - t441 * MDP(34) + (MDP(31) * t345 + t539) * t345) * t419; t324 * t539 + (-t324 ^ 2 + t326 ^ 2) * MDP(30) + (t505 + t597) * MDP(31) + (t326 * t345 - t489) * MDP(32) + t315 * MDP(33) + (-g(1) * t322 + g(2) * t600 + g(3) * t346 + t465 * t326 + t328 * t345 + t490) * MDP(34) + (g(1) * t323 + g(2) * t599 + g(3) * t347 - t465 * t324 - t466 * t345 - t467) * MDP(35) + (-MDP(31) * t576 - MDP(32) * t326 - MDP(34) * t328 + MDP(35) * t466) * qJD(6);];
tau  = t1;
