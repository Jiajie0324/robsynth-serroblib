% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-09 12:53
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPRRR14_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR14_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR14_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_invdynf_fixb_reg2_snew_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-09 12:12:25
% EndTime: 2019-05-09 12:13:27
% DurationCPUTime: 62.70s
% Computational Cost: add. (899870->450), mult. (2443546->745), div. (0->0), fcn. (2118875->18), ass. (0->404)
t3444 = sin(qJ(2));
t3436 = sin(pkin(6));
t3449 = cos(qJ(2));
t3527 = t3436 * t3449;
t3519 = qJD(1) * t3527;
t3521 = qJDD(1) * t3436;
t3407 = qJD(2) * t3519 + t3444 * t3521;
t3528 = t3436 * t3444;
t3520 = qJD(1) * t3528;
t3408 = -qJD(2) * t3520 + t3449 * t3521;
t3440 = cos(pkin(6));
t3426 = t3440 * qJDD(1) + qJDD(2);
t3437 = cos(pkin(14));
t3433 = sin(pkin(14));
t3439 = cos(pkin(7));
t3531 = t3433 * t3439;
t3435 = sin(pkin(7));
t3532 = t3433 * t3435;
t3370 = t3437 * t3407 + t3408 * t3531 + t3426 * t3532;
t3434 = sin(pkin(8));
t3438 = cos(pkin(8));
t3427 = qJD(1) * t3440 + qJD(2);
t3512 = t3439 * t3519;
t3391 = (t3427 * t3435 + t3512) * qJ(3);
t3445 = sin(qJ(1));
t3450 = cos(qJ(1));
t3422 = -g(1) * t3450 - g(2) * t3445;
t3451 = qJD(1) ^ 2;
t3404 = -pkin(1) * t3451 + pkin(10) * t3521 + t3422;
t3421 = t3445 * g(1) - g(2) * t3450;
t3403 = pkin(10) * t3436 * t3451 + qJDD(1) * pkin(1) + t3421;
t3534 = t3403 * t3440;
t3514 = -t3444 * t3404 + t3449 * t3534;
t3545 = qJD(1) * t3436;
t3548 = qJ(3) * t3435;
t3546 = qJD(1) * (-pkin(2) * t3449 - t3444 * t3548) * t3545;
t3547 = qJ(3) * t3439;
t3324 = -t3407 * t3547 + t3426 * pkin(2) + t3427 * t3391 + (-g(3) * t3449 - t3444 * t3546) * t3436 + t3514;
t3400 = pkin(2) * t3427 - t3520 * t3547;
t3522 = t3449 * t3404 + t3444 * t3534;
t3325 = -t3427 * t3400 + (-g(3) * t3444 + t3449 * t3546) * t3436 + (t3408 * t3439 + t3426 * t3435) * qJ(3) + t3522;
t3549 = t3440 * g(3);
t3329 = -t3407 * t3548 - t3408 * pkin(2) - t3549 + (-t3403 + (-t3391 * t3449 + t3400 * t3444) * qJD(1)) * t3436;
t3382 = t3427 * t3532 + (t3437 * t3444 + t3449 * t3531) * t3545;
t3526 = t3437 * t3439;
t3529 = t3435 * t3437;
t3552 = -2 * qJD(3);
t3284 = t3324 * t3526 - t3325 * t3433 + t3329 * t3529 + t3382 * t3552;
t3380 = -t3427 * t3529 + t3433 * t3520 - t3437 * t3512;
t3551 = pkin(11) * t3434;
t3355 = pkin(3) * t3380 - t3382 * t3551;
t3397 = -t3439 * t3427 + t3435 * t3519;
t3463 = -t3380 * t3438 - t3397 * t3434;
t3361 = t3463 * pkin(11);
t3384 = -t3408 * t3435 + t3439 * t3426;
t3455 = pkin(3) * t3384 - t3355 * t3382 - t3361 * t3397 + t3284;
t3309 = -t3324 * t3435 + t3439 * t3329 + qJDD(3);
t3550 = pkin(11) * t3438;
t3364 = -pkin(3) * t3397 - t3382 * t3550;
t3369 = -t3407 * t3433 + t3408 * t3526 + t3426 * t3529;
t3456 = -pkin(3) * t3369 + t3361 * t3380 + t3364 * t3382 + t3309;
t3568 = t3438 * (-t3370 * t3550 + t3455) + t3434 * (-t3370 * t3551 + t3456);
t3567 = t3369 * t3438 + t3384 * t3434;
t3443 = sin(qJ(4));
t3448 = cos(qJ(4));
t3342 = t3448 * t3382 + t3443 * t3463;
t3362 = -t3380 * t3434 + t3397 * t3438 - qJD(4);
t3442 = sin(qJ(5));
t3447 = cos(qJ(5));
t3316 = t3342 * t3442 + t3447 * t3362;
t3315 = qJD(6) + t3316;
t3566 = qJD(6) + t3315;
t3318 = t3342 * t3447 - t3362 * t3442;
t3525 = t3438 * t3448;
t3530 = t3434 * t3448;
t3340 = t3380 * t3525 + t3382 * t3443 + t3397 * t3530;
t3339 = qJD(5) + t3340;
t3441 = sin(qJ(6));
t3446 = cos(qJ(6));
t3301 = t3318 * t3441 - t3446 * t3339;
t3565 = t3301 ^ 2;
t3303 = t3318 * t3446 + t3339 * t3441;
t3564 = t3303 ^ 2;
t3563 = t3315 ^ 2;
t3562 = t3316 ^ 2;
t3561 = t3318 ^ 2;
t3560 = t3339 ^ 2;
t3559 = t3340 ^ 2;
t3558 = t3342 ^ 2;
t3557 = t3362 ^ 2;
t3556 = t3380 ^ 2;
t3555 = t3382 ^ 2;
t3554 = t3397 ^ 2;
t3553 = t3427 ^ 2;
t3544 = t3301 * t3303;
t3543 = t3316 * t3318;
t3542 = t3340 * t3342;
t3541 = t3340 * t3362;
t3540 = t3342 * t3362;
t3538 = t3380 * t3382;
t3537 = t3380 * t3397;
t3536 = t3382 * t3397;
t3533 = t3436 ^ 2 * t3451;
t3524 = qJD(5) - t3339;
t3523 = qJD(6) - t3315;
t3285 = t3324 * t3531 + t3437 * t3325 + t3329 * t3532 + t3380 * t3552;
t3269 = pkin(11) * t3567 - t3380 * t3355 + t3397 * t3364 + t3285;
t3222 = t3448 * t3269 + t3443 * t3568;
t3312 = pkin(4) * t3340 - pkin(12) * t3342;
t3348 = -t3369 * t3434 + t3438 * t3384 + qJDD(4);
t3215 = -pkin(4) * t3557 + pkin(12) * t3348 - t3312 * t3340 + t3222;
t3237 = -t3434 * t3455 + t3438 * t3456;
t3511 = -t3342 * qJD(4) + t3369 * t3525 - t3443 * t3370 + t3384 * t3530;
t3286 = -t3511 - t3540;
t3308 = -t3340 * qJD(4) + t3448 * t3370 + t3443 * t3567;
t3516 = -t3308 - t3541;
t3452 = pkin(4) * t3286 + pkin(12) * t3516 + t3237;
t3186 = t3447 * t3215 + t3442 * t3452;
t3185 = -t3215 * t3442 + t3447 * t3452;
t3468 = -t3447 * t3308 - t3442 * t3348;
t3278 = -qJD(5) * t3316 - t3468;
t3459 = qJDD(5) - t3511;
t3518 = -t3441 * t3278 + t3446 * t3459;
t3517 = t3339 * t3316 - t3278;
t3515 = t3442 * t3308 - t3447 * t3348;
t3513 = t3427 * t3519;
t3510 = t3443 * t3269 - t3448 * t3568;
t3291 = pkin(5) * t3316 - pkin(13) * t3318;
t3177 = -pkin(5) * t3560 + pkin(13) * t3459 - t3316 * t3291 + t3186;
t3214 = -t3348 * pkin(4) - t3557 * pkin(12) + t3342 * t3312 + t3510;
t3259 = (qJD(5) + t3339) * t3318 + t3515;
t3188 = pkin(5) * t3259 + pkin(13) * t3517 + t3214;
t3155 = -t3177 * t3441 + t3188 * t3446;
t3156 = t3177 * t3446 + t3188 * t3441;
t3141 = -t3155 * t3441 + t3156 * t3446;
t3176 = -pkin(5) * t3459 - pkin(13) * t3560 + t3291 * t3318 - t3185;
t3127 = t3141 * t3442 - t3176 * t3447;
t3128 = t3141 * t3447 + t3176 * t3442;
t3140 = t3155 * t3446 + t3156 * t3441;
t3505 = t3128 * t3443 - t3140 * t3448;
t3108 = t3438 * t3127 + t3434 * t3505;
t3109 = -t3434 * t3127 + t3438 * t3505;
t3117 = t3128 * t3448 + t3140 * t3443;
t3508 = t3109 * t3437 + t3117 * t3433;
t3101 = -t3435 * t3108 + t3439 * t3508;
t3104 = -t3109 * t3433 + t3117 * t3437;
t3509 = t3101 * t3449 + t3104 * t3444;
t3158 = t3185 * t3447 + t3186 * t3442;
t3159 = -t3185 * t3442 + t3186 * t3447;
t3498 = t3159 * t3443 - t3214 * t3448;
t3134 = t3438 * t3158 + t3434 * t3498;
t3135 = -t3434 * t3158 + t3438 * t3498;
t3150 = t3159 * t3448 + t3214 * t3443;
t3502 = t3135 * t3437 + t3150 * t3433;
t3115 = -t3435 * t3134 + t3439 * t3502;
t3122 = -t3135 * t3433 + t3150 * t3437;
t3507 = t3115 * t3449 + t3122 * t3444;
t3233 = -t3303 * t3523 + t3518;
t3457 = -t3446 * t3278 - t3441 * t3459;
t3235 = t3301 * t3523 + t3457;
t3204 = t3233 * t3446 - t3235 * t3441;
t3256 = -t3564 - t3565;
t3191 = t3204 * t3442 - t3256 * t3447;
t3192 = t3204 * t3447 + t3256 * t3442;
t3203 = t3233 * t3441 + t3235 * t3446;
t3492 = t3192 * t3443 - t3203 * t3448;
t3151 = t3438 * t3191 + t3434 * t3492;
t3152 = -t3434 * t3191 + t3438 * t3492;
t3170 = t3192 * t3448 + t3203 * t3443;
t3500 = t3152 * t3437 + t3170 * t3433;
t3124 = -t3435 * t3151 + t3439 * t3500;
t3142 = -t3152 * t3433 + t3170 * t3437;
t3506 = t3124 * t3449 + t3142 * t3444;
t3458 = -qJD(5) * t3318 - qJDD(6) - t3515;
t3242 = -t3458 - t3544;
t3265 = -t3563 - t3565;
t3225 = -t3242 * t3441 + t3265 * t3446;
t3232 = t3303 * t3566 - t3518;
t3195 = t3225 * t3442 - t3232 * t3447;
t3196 = t3225 * t3447 + t3232 * t3442;
t3224 = t3242 * t3446 + t3265 * t3441;
t3490 = t3196 * t3443 - t3224 * t3448;
t3160 = t3438 * t3195 + t3434 * t3490;
t3161 = -t3434 * t3195 + t3438 * t3490;
t3181 = t3196 * t3448 + t3224 * t3443;
t3497 = t3161 * t3437 + t3181 * t3433;
t3131 = -t3435 * t3160 + t3439 * t3497;
t3146 = -t3161 * t3433 + t3181 * t3437;
t3504 = t3131 * t3449 + t3146 * t3444;
t3243 = t3458 - t3544;
t3270 = -t3563 - t3564;
t3228 = t3243 * t3446 - t3270 * t3441;
t3234 = -t3301 * t3566 - t3457;
t3197 = t3228 * t3442 - t3234 * t3447;
t3198 = t3228 * t3447 + t3234 * t3442;
t3227 = t3243 * t3441 + t3270 * t3446;
t3489 = t3198 * t3443 - t3227 * t3448;
t3164 = t3438 * t3197 + t3434 * t3489;
t3165 = -t3434 * t3197 + t3438 * t3489;
t3182 = t3198 * t3448 + t3227 * t3443;
t3496 = t3165 * t3437 + t3182 * t3433;
t3133 = -t3435 * t3164 + t3439 * t3496;
t3147 = -t3165 * t3433 + t3182 * t3437;
t3503 = t3133 * t3449 + t3147 * t3444;
t3483 = t3222 * t3443 - t3448 * t3510;
t3178 = t3438 * t3237 + t3434 * t3483;
t3179 = -t3434 * t3237 + t3438 * t3483;
t3190 = t3222 * t3448 + t3443 * t3510;
t3493 = t3179 * t3437 + t3190 * t3433;
t3145 = -t3435 * t3178 + t3439 * t3493;
t3157 = -t3179 * t3433 + t3190 * t3437;
t3501 = t3145 * t3449 + t3157 * t3444;
t3260 = -t3318 * t3524 - t3515;
t3262 = t3316 * t3524 + t3468;
t3229 = t3260 * t3442 + t3262 * t3447;
t3230 = t3260 * t3447 - t3262 * t3442;
t3279 = -t3561 - t3562;
t3482 = t3230 * t3443 - t3279 * t3448;
t3193 = t3438 * t3229 + t3434 * t3482;
t3194 = -t3434 * t3229 + t3438 * t3482;
t3216 = t3230 * t3448 + t3279 * t3443;
t3491 = t3194 * t3437 + t3216 * t3433;
t3154 = -t3435 * t3193 + t3439 * t3491;
t3175 = -t3194 * t3433 + t3216 * t3437;
t3499 = t3154 * t3449 + t3175 * t3444;
t3271 = t3459 - t3543;
t3283 = -t3560 - t3562;
t3244 = t3271 * t3447 + t3283 * t3442;
t3245 = -t3271 * t3442 + t3283 * t3447;
t3479 = t3245 * t3443 - t3259 * t3448;
t3205 = t3438 * t3244 + t3434 * t3479;
t3206 = -t3434 * t3244 + t3438 * t3479;
t3223 = t3245 * t3448 + t3259 * t3443;
t3487 = t3206 * t3437 + t3223 * t3433;
t3167 = -t3435 * t3205 + t3439 * t3487;
t3183 = -t3206 * t3433 + t3223 * t3437;
t3495 = t3167 * t3449 + t3183 * t3444;
t3272 = -t3459 - t3543;
t3290 = -t3560 - t3561;
t3248 = t3272 * t3442 + t3290 * t3447;
t3249 = t3272 * t3447 - t3290 * t3442;
t3477 = t3249 * t3443 + t3448 * t3517;
t3207 = t3438 * t3248 + t3434 * t3477;
t3208 = -t3434 * t3248 + t3438 * t3477;
t3226 = t3249 * t3448 - t3443 * t3517;
t3486 = t3208 * t3437 + t3226 * t3433;
t3169 = -t3435 * t3207 + t3439 * t3486;
t3184 = -t3208 * t3433 + t3226 * t3437;
t3494 = t3169 * t3449 + t3184 * t3444;
t3296 = -t3558 - t3559;
t3287 = t3511 - t3540;
t3289 = -t3308 + t3541;
t3474 = t3287 * t3443 + t3289 * t3448;
t3238 = t3438 * t3296 + t3434 * t3474;
t3239 = -t3434 * t3296 + t3438 * t3474;
t3255 = t3287 * t3448 - t3289 * t3443;
t3481 = t3239 * t3437 + t3255 * t3433;
t3200 = -t3435 * t3238 + t3439 * t3481;
t3219 = -t3239 * t3433 + t3255 * t3437;
t3488 = t3200 * t3449 + t3219 * t3444;
t3298 = t3348 - t3542;
t3305 = -t3557 - t3559;
t3470 = t3298 * t3448 + t3305 * t3443;
t3246 = t3438 * t3286 + t3434 * t3470;
t3247 = -t3434 * t3286 + t3438 * t3470;
t3273 = -t3298 * t3443 + t3305 * t3448;
t3478 = t3247 * t3437 + t3273 * t3433;
t3210 = -t3435 * t3246 + t3439 * t3478;
t3231 = -t3247 * t3433 + t3273 * t3437;
t3485 = t3210 * t3449 + t3231 * t3444;
t3297 = -t3348 - t3542;
t3310 = -t3557 - t3558;
t3471 = t3297 * t3443 + t3310 * t3448;
t3250 = t3434 * t3471 - t3438 * t3516;
t3251 = t3434 * t3516 + t3438 * t3471;
t3277 = t3297 * t3448 - t3310 * t3443;
t3476 = t3251 * t3437 + t3277 * t3433;
t3212 = -t3435 * t3250 + t3439 * t3476;
t3236 = -t3251 * t3433 + t3277 * t3437;
t3484 = t3212 * t3449 + t3236 * t3444;
t3475 = t3284 * t3437 + t3285 * t3433;
t3241 = -t3435 * t3309 + t3439 * t3475;
t3254 = -t3284 * t3433 + t3285 * t3437;
t3480 = t3241 * t3449 + t3254 * t3444;
t3336 = -t3555 - t3556;
t3331 = t3369 - t3536;
t3333 = -t3370 + t3537;
t3467 = t3331 * t3433 + t3333 * t3437;
t3293 = -t3435 * t3336 + t3439 * t3467;
t3311 = t3331 * t3437 - t3333 * t3433;
t3473 = t3293 * t3449 + t3311 * t3444;
t3330 = -t3369 - t3536;
t3345 = t3384 - t3538;
t3349 = -t3554 - t3556;
t3465 = t3345 * t3437 + t3349 * t3433;
t3295 = -t3435 * t3330 + t3439 * t3465;
t3313 = -t3345 * t3433 + t3349 * t3437;
t3472 = t3295 * t3449 + t3313 * t3444;
t3332 = t3370 + t3537;
t3344 = -t3384 - t3538;
t3354 = -t3554 - t3555;
t3466 = t3344 * t3433 + t3354 * t3437;
t3300 = -t3435 * t3332 + t3439 * t3466;
t3314 = t3344 * t3437 - t3354 * t3433;
t3469 = t3300 * t3449 + t3314 * t3444;
t3371 = -g(3) * t3527 + t3514;
t3372 = -g(3) * t3528 + t3522;
t3464 = t3371 * t3449 + t3372 * t3444;
t3386 = t3513 - t3407;
t3411 = t3427 * t3520;
t3387 = t3408 + t3411;
t3462 = t3386 * t3449 + t3387 * t3444;
t3431 = t3444 ^ 2;
t3396 = -t3431 * t3533 - t3553;
t3420 = t3449 * t3444 * t3533;
t3406 = t3420 - t3426;
t3461 = t3396 * t3449 + t3406 * t3444;
t3405 = t3420 + t3426;
t3432 = t3449 ^ 2;
t3409 = -t3432 * t3533 - t3553;
t3460 = t3405 * t3449 + t3409 * t3444;
t3419 = -qJDD(1) * t3445 - t3450 * t3451;
t3418 = qJDD(1) * t3450 - t3445 * t3451;
t3410 = (-t3431 - t3432) * t3533;
t3390 = -t3436 * t3403 - t3549;
t3388 = -t3408 + t3411;
t3385 = t3513 + t3407;
t3377 = -t3405 * t3444 + t3409 * t3449;
t3373 = -t3396 * t3444 + t3406 * t3449;
t3359 = -t3386 * t3444 + t3387 * t3449;
t3357 = -t3436 * t3388 + t3440 * t3460;
t3356 = t3440 * t3388 + t3436 * t3460;
t3353 = -t3436 * t3385 + t3440 * t3461;
t3352 = t3440 * t3385 + t3436 * t3461;
t3351 = -t3436 * t3410 + t3440 * t3462;
t3350 = t3440 * t3410 + t3436 * t3462;
t3343 = -t3371 * t3444 + t3372 * t3449;
t3322 = -t3436 * t3390 + t3440 * t3464;
t3321 = t3440 * t3390 + t3436 * t3464;
t3299 = t3439 * t3332 + t3435 * t3466;
t3294 = t3439 * t3330 + t3435 * t3465;
t3292 = t3439 * t3336 + t3435 * t3467;
t3281 = -t3300 * t3444 + t3314 * t3449;
t3280 = -t3295 * t3444 + t3313 * t3449;
t3274 = -t3293 * t3444 + t3311 * t3449;
t3264 = -t3436 * t3299 + t3440 * t3469;
t3263 = t3440 * t3299 + t3436 * t3469;
t3258 = -t3436 * t3294 + t3440 * t3472;
t3257 = t3440 * t3294 + t3436 * t3472;
t3253 = -t3436 * t3292 + t3440 * t3473;
t3252 = t3440 * t3292 + t3436 * t3473;
t3240 = t3439 * t3309 + t3435 * t3475;
t3220 = -t3241 * t3444 + t3254 * t3449;
t3211 = t3439 * t3250 + t3435 * t3476;
t3209 = t3439 * t3246 + t3435 * t3478;
t3202 = -t3436 * t3240 + t3440 * t3480;
t3201 = t3440 * t3240 + t3436 * t3480;
t3199 = t3439 * t3238 + t3435 * t3481;
t3189 = -t3212 * t3444 + t3236 * t3449;
t3187 = -t3210 * t3444 + t3231 * t3449;
t3180 = -t3200 * t3444 + t3219 * t3449;
t3174 = -t3436 * t3211 + t3440 * t3484;
t3173 = t3440 * t3211 + t3436 * t3484;
t3172 = -t3436 * t3209 + t3440 * t3485;
t3171 = t3440 * t3209 + t3436 * t3485;
t3168 = t3439 * t3207 + t3435 * t3486;
t3166 = t3439 * t3205 + t3435 * t3487;
t3163 = -t3436 * t3199 + t3440 * t3488;
t3162 = t3440 * t3199 + t3436 * t3488;
t3153 = t3439 * t3193 + t3435 * t3491;
t3149 = -t3169 * t3444 + t3184 * t3449;
t3148 = -t3167 * t3444 + t3183 * t3449;
t3144 = t3439 * t3178 + t3435 * t3493;
t3143 = -t3154 * t3444 + t3175 * t3449;
t3139 = -t3436 * t3168 + t3440 * t3494;
t3138 = t3440 * t3168 + t3436 * t3494;
t3137 = -t3436 * t3166 + t3440 * t3495;
t3136 = t3440 * t3166 + t3436 * t3495;
t3132 = t3439 * t3164 + t3435 * t3496;
t3130 = t3439 * t3160 + t3435 * t3497;
t3129 = -t3145 * t3444 + t3157 * t3449;
t3126 = -t3436 * t3153 + t3440 * t3499;
t3125 = t3440 * t3153 + t3436 * t3499;
t3123 = t3439 * t3151 + t3435 * t3500;
t3121 = -t3133 * t3444 + t3147 * t3449;
t3120 = -t3131 * t3444 + t3146 * t3449;
t3119 = -t3436 * t3144 + t3440 * t3501;
t3118 = t3440 * t3144 + t3436 * t3501;
t3116 = -t3124 * t3444 + t3142 * t3449;
t3114 = t3439 * t3134 + t3435 * t3502;
t3113 = -t3436 * t3132 + t3440 * t3503;
t3112 = t3440 * t3132 + t3436 * t3503;
t3111 = -t3436 * t3130 + t3440 * t3504;
t3110 = t3440 * t3130 + t3436 * t3504;
t3107 = -t3436 * t3123 + t3440 * t3506;
t3106 = t3440 * t3123 + t3436 * t3506;
t3105 = -t3115 * t3444 + t3122 * t3449;
t3103 = -t3436 * t3114 + t3440 * t3507;
t3102 = t3440 * t3114 + t3436 * t3507;
t3100 = t3439 * t3108 + t3435 * t3508;
t3099 = -t3101 * t3444 + t3104 * t3449;
t3098 = -t3436 * t3100 + t3440 * t3509;
t3097 = t3440 * t3100 + t3436 * t3509;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t3419, -t3418, 0, -t3421 * t3445 + t3422 * t3450, 0, 0, 0, 0, 0, 0, -t3357 * t3445 + t3377 * t3450, -t3353 * t3445 + t3373 * t3450, -t3351 * t3445 + t3359 * t3450, -t3322 * t3445 + t3343 * t3450, 0, 0, 0, 0, 0, 0, -t3258 * t3445 + t3280 * t3450, -t3264 * t3445 + t3281 * t3450, -t3253 * t3445 + t3274 * t3450, -t3202 * t3445 + t3220 * t3450, 0, 0, 0, 0, 0, 0, -t3172 * t3445 + t3187 * t3450, -t3174 * t3445 + t3189 * t3450, -t3163 * t3445 + t3180 * t3450, -t3119 * t3445 + t3129 * t3450, 0, 0, 0, 0, 0, 0, -t3137 * t3445 + t3148 * t3450, -t3139 * t3445 + t3149 * t3450, -t3126 * t3445 + t3143 * t3450, -t3103 * t3445 + t3105 * t3450, 0, 0, 0, 0, 0, 0, -t3111 * t3445 + t3120 * t3450, -t3113 * t3445 + t3121 * t3450, -t3107 * t3445 + t3116 * t3450, -t3098 * t3445 + t3099 * t3450; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t3418, t3419, 0, t3421 * t3450 + t3422 * t3445, 0, 0, 0, 0, 0, 0, t3357 * t3450 + t3377 * t3445, t3353 * t3450 + t3373 * t3445, t3351 * t3450 + t3359 * t3445, t3322 * t3450 + t3343 * t3445, 0, 0, 0, 0, 0, 0, t3258 * t3450 + t3280 * t3445, t3264 * t3450 + t3281 * t3445, t3253 * t3450 + t3274 * t3445, t3202 * t3450 + t3220 * t3445, 0, 0, 0, 0, 0, 0, t3172 * t3450 + t3187 * t3445, t3174 * t3450 + t3189 * t3445, t3163 * t3450 + t3180 * t3445, t3119 * t3450 + t3129 * t3445, 0, 0, 0, 0, 0, 0, t3137 * t3450 + t3148 * t3445, t3139 * t3450 + t3149 * t3445, t3126 * t3450 + t3143 * t3445, t3103 * t3450 + t3105 * t3445, 0, 0, 0, 0, 0, 0, t3111 * t3450 + t3120 * t3445, t3113 * t3450 + t3121 * t3445, t3107 * t3450 + t3116 * t3445, t3098 * t3450 + t3099 * t3445; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t3356, t3352, t3350, t3321, 0, 0, 0, 0, 0, 0, t3257, t3263, t3252, t3201, 0, 0, 0, 0, 0, 0, t3171, t3173, t3162, t3118, 0, 0, 0, 0, 0, 0, t3136, t3138, t3125, t3102, 0, 0, 0, 0, 0, 0, t3110, t3112, t3106, t3097; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t3451, -qJDD(1), 0, t3422, 0, 0, 0, 0, 0, 0, t3377, t3373, t3359, t3343, 0, 0, 0, 0, 0, 0, t3280, t3281, t3274, t3220, 0, 0, 0, 0, 0, 0, t3187, t3189, t3180, t3129, 0, 0, 0, 0, 0, 0, t3148, t3149, t3143, t3105, 0, 0, 0, 0, 0, 0, t3120, t3121, t3116, t3099; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t3451, 0, t3421, 0, 0, 0, 0, 0, 0, t3357, t3353, t3351, t3322, 0, 0, 0, 0, 0, 0, t3258, t3264, t3253, t3202, 0, 0, 0, 0, 0, 0, t3172, t3174, t3163, t3119, 0, 0, 0, 0, 0, 0, t3137, t3139, t3126, t3103, 0, 0, 0, 0, 0, 0, t3111, t3113, t3107, t3098; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t3356, t3352, t3350, t3321, 0, 0, 0, 0, 0, 0, t3257, t3263, t3252, t3201, 0, 0, 0, 0, 0, 0, t3171, t3173, t3162, t3118, 0, 0, 0, 0, 0, 0, t3136, t3138, t3125, t3102, 0, 0, 0, 0, 0, 0, t3110, t3112, t3106, t3097; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3409, t3406, t3387, t3372, 0, 0, 0, 0, 0, 0, t3313, t3314, t3311, t3254, 0, 0, 0, 0, 0, 0, t3231, t3236, t3219, t3157, 0, 0, 0, 0, 0, 0, t3183, t3184, t3175, t3122, 0, 0, 0, 0, 0, 0, t3146, t3147, t3142, t3104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3405, t3396, t3386, t3371, 0, 0, 0, 0, 0, 0, t3295, t3300, t3293, t3241, 0, 0, 0, 0, 0, 0, t3210, t3212, t3200, t3145, 0, 0, 0, 0, 0, 0, t3167, t3169, t3154, t3115, 0, 0, 0, 0, 0, 0, t3131, t3133, t3124, t3101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3388, t3385, t3410, t3390, 0, 0, 0, 0, 0, 0, t3294, t3299, t3292, t3240, 0, 0, 0, 0, 0, 0, t3209, t3211, t3199, t3144, 0, 0, 0, 0, 0, 0, t3166, t3168, t3153, t3114, 0, 0, 0, 0, 0, 0, t3130, t3132, t3123, t3100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3349, t3344, t3331, t3285, 0, 0, 0, 0, 0, 0, t3273, t3277, t3255, t3190, 0, 0, 0, 0, 0, 0, t3223, t3226, t3216, t3150, 0, 0, 0, 0, 0, 0, t3181, t3182, t3170, t3117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3345, t3354, t3333, t3284, 0, 0, 0, 0, 0, 0, t3247, t3251, t3239, t3179, 0, 0, 0, 0, 0, 0, t3206, t3208, t3194, t3135, 0, 0, 0, 0, 0, 0, t3161, t3165, t3152, t3109; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3330, t3332, t3336, t3309, 0, 0, 0, 0, 0, 0, t3246, t3250, t3238, t3178, 0, 0, 0, 0, 0, 0, t3205, t3207, t3193, t3134, 0, 0, 0, 0, 0, 0, t3160, t3164, t3151, t3108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3305, t3297, t3287, t3222, 0, 0, 0, 0, 0, 0, t3245, t3249, t3230, t3159, 0, 0, 0, 0, 0, 0, t3196, t3198, t3192, t3128; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3298, t3310, t3289, -t3510, 0, 0, 0, 0, 0, 0, -t3259, t3517, -t3279, -t3214, 0, 0, 0, 0, 0, 0, -t3224, -t3227, -t3203, -t3140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3286, -t3516, t3296, t3237, 0, 0, 0, 0, 0, 0, t3244, t3248, t3229, t3158, 0, 0, 0, 0, 0, 0, t3195, t3197, t3191, t3127; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3283, t3272, t3260, t3186, 0, 0, 0, 0, 0, 0, t3225, t3228, t3204, t3141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3271, t3290, t3262, t3185, 0, 0, 0, 0, 0, 0, -t3232, -t3234, -t3256, -t3176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3259, -t3517, t3279, t3214, 0, 0, 0, 0, 0, 0, t3224, t3227, t3203, t3140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3265, t3243, t3233, t3156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3242, t3270, t3235, t3155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3232, t3234, t3256, t3176;];
f_new_reg  = t1;
