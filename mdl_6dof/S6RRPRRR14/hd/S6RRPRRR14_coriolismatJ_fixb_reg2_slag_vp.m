% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRR14_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:08:52
% EndTime: 2019-03-09 15:13:08
% DurationCPUTime: 230.61s
% Computational Cost: add. (294315->2678), mult. (847948->3664), div. (0->0), fcn. (982084->16), ass. (0->1625)
t1835 = sin(qJ(5));
t1829 = sin(pkin(8));
t1831 = sin(pkin(6));
t1832 = cos(pkin(14));
t1828 = sin(pkin(14));
t1837 = sin(qJ(2));
t1833 = cos(pkin(7));
t1840 = cos(qJ(2));
t2516 = t1833 * t1840;
t2054 = -t1828 * t1837 + t1832 * t2516;
t1830 = sin(pkin(7));
t2746 = cos(pkin(6));
t2310 = t2746 * t1830;
t1891 = t1831 * t2054 + t1832 * t2310;
t2520 = t1831 * t1840;
t2238 = t1830 * t2520 - t1833 * t2746;
t2745 = cos(pkin(8));
t1972 = t1891 * t1829 + t2238 * t2745;
t1936 = t1972 * t1835;
t1836 = sin(qJ(4));
t1877 = t1891 * t2745;
t2050 = t1829 * t2238;
t1853 = t1877 - t2050;
t2517 = t1832 * t1837;
t2387 = t1831 * t2517;
t1746 = t1831 * t2516 + t2310;
t2539 = t1746 * t1828;
t1892 = t2387 + t2539;
t2845 = cos(qJ(4));
t1878 = t1892 * t2845;
t1389 = t1836 * t1853 + t1878;
t1839 = cos(qJ(5));
t2574 = t1389 * t1839;
t1156 = -t1936 + t2574;
t1154 = t1389 * t1835 + t1839 * t1972;
t2767 = -t1835 / 0.2e1;
t2372 = t1154 * t2767;
t2760 = t1839 / 0.2e1;
t2090 = t1156 * t2760 + t2372;
t2523 = t1830 * t1832;
t2239 = t1829 * t2523 - t1833 * t2745;
t2048 = t1835 * t2239;
t2313 = t1836 * t2745;
t2425 = t2845 * t1828;
t2526 = t1829 * t1836;
t1671 = t1833 * t2526 + (t1832 * t2313 + t2425) * t1830;
t2462 = t1839 * t1671;
t1552 = -t2048 + t2462;
t2806 = t1552 / 0.2e1;
t1550 = t1671 * t1835 + t1839 * t2239;
t2807 = t1550 / 0.2e1;
t2091 = t1154 * t2806 + t1156 * t2807;
t2591 = t1154 * qJD(1);
t2927 = qJD(2) * t2091 - qJD(4) * t2090 + t1156 * t2591;
t2358 = t1550 * t2767;
t2080 = t1552 * t2760 + t2358;
t2560 = t1550 * qJD(2);
t2926 = qJD(1) * t2091 - qJD(4) * t2080 + t1552 * t2560;
t1387 = t1892 * t1836 - t1853 * t2845;
t2315 = t1830 * t2745;
t2261 = t1832 * t2315;
t2436 = t1829 * t2845;
t2529 = t1828 * t1830;
t1669 = -t1833 * t2436 + t1836 * t2529 - t2261 * t2845;
t2799 = -t1669 / 0.2e1;
t2808 = -t1550 / 0.2e1;
t2082 = t1154 * t2799 + t1387 * t2808;
t2011 = t2082 * t1835;
t2521 = t1831 * t1837;
t2152 = t2315 * t2521;
t1784 = t1833 * t2387;
t1803 = t1828 * t2520;
t2458 = t1803 + t1784;
t2302 = t2458 * t1829;
t1624 = -t2302 - t2152;
t1605 = t1624 * t1839;
t2240 = t2458 * t2745;
t2390 = t1830 * t2521;
t2275 = t1829 * t2390;
t1950 = -t2240 + t2275;
t2388 = t1828 * t2521;
t1783 = t1833 * t2388;
t2386 = t1832 * t2520;
t1724 = -t1783 + t2386;
t2437 = t1724 * t2845;
t1492 = t1836 * t1950 + t2437;
t2564 = t1492 * t1835;
t1282 = t1605 + t2564;
t2584 = t1282 * t1839;
t2367 = -t2584 / 0.2e1;
t1920 = t2367 + t2011;
t2916 = t2090 * qJD(5);
t2925 = t1920 * qJD(2) - t2916;
t1919 = t2584 / 0.2e1 + t2011;
t2924 = -t1919 * qJD(2) - t2916;
t2897 = t1919 * qJD(1);
t2918 = t2080 * qJD(5);
t2923 = -t2897 - t2918;
t2922 = t2897 - t2918;
t1838 = cos(qJ(6));
t2478 = t1838 * t1552;
t1834 = sin(qJ(6));
t2505 = t1834 * t1669;
t1393 = t2478 + t2505;
t2816 = t1393 / 0.2e1;
t2476 = t1838 * t1669;
t2507 = t1834 * t1552;
t1391 = -t2476 + t2507;
t2818 = t1391 / 0.2e1;
t2514 = t1834 * t1156;
t2576 = t1387 * t1838;
t903 = t2514 - t2576;
t2484 = t1838 * t1156;
t2509 = t1834 * t1387;
t905 = t2484 + t2509;
t475 = t2816 * t903 + t2818 * t905;
t2921 = t475 * qJD(6);
t2630 = t905 * t1838;
t2680 = t1834 * t903;
t579 = -t2630 / 0.2e1 + t2680 / 0.2e1;
t2920 = t579 * qJD(6);
t2508 = t1834 * t1391;
t2571 = t1393 * t1838;
t1036 = -t2508 / 0.2e1 + t2571 / 0.2e1;
t2919 = t1036 * qJD(6);
t2796 = t1671 / 0.2e1;
t2798 = t1669 / 0.2e1;
t2086 = t1387 * t2796 + t1389 * t2798;
t2917 = t2086 * qJD(4);
t2915 = t2091 * qJD(5);
t2312 = t1837 * t2746;
t2293 = pkin(1) * t2312;
t1760 = pkin(10) * t2520 + t2293;
t1874 = qJ(3) * t1746 + t1760;
t1888 = pkin(11) * t1892;
t2137 = t2238 * pkin(3);
t2316 = qJ(3) * t1833 + pkin(10);
t2251 = t1831 * t2316;
t2311 = t1840 * t2746;
t2292 = pkin(1) * t2311;
t1699 = -t1837 * t2251 + t2292;
t2445 = t2746 * pkin(2);
t1889 = t2445 + t1699;
t2439 = -pkin(2) * t1840 - pkin(1);
t2522 = t1830 * t1837;
t2006 = (-qJ(3) * t2522 + t2439) * t1831;
t2887 = t1830 * t2006 + t1833 * t1889;
t1846 = -t1828 * t1874 + t1832 * t2887 - t2745 * t1888 - t2137;
t1887 = t1891 * pkin(3);
t1848 = -t1829 * t1888 - t1830 * t1889 + t1833 * t2006 - t1887;
t2914 = t1829 * t1848 + t2745 * t1846;
t2257 = (pkin(2) * t1832 + pkin(3)) * t1833;
t2438 = -pkin(3) * t1832 - pkin(2);
t2444 = t2745 * pkin(11);
t2527 = t1829 * t1830;
t2530 = t1828 * t1829;
t2913 = t2745 * (t2257 + (-t2444 - qJ(3)) * t2529) + (-pkin(11) * t2530 + t2438) * t2527;
t1824 = t1834 ^ 2;
t1826 = t1838 ^ 2;
t1762 = (t1824 / 0.2e1 - t1826 / 0.2e1) * t1835;
t2572 = t1393 * t1834;
t2363 = -t2572 / 0.2e1;
t2479 = t1838 * t1391;
t2055 = -t2479 / 0.2e1 + t2363;
t2009 = t2055 * t1835;
t2669 = t1838 * t903;
t2420 = t2669 / 0.2e1;
t2631 = t905 * t1834;
t2131 = t2420 + t2631 / 0.2e1;
t2021 = t2131 * t1835;
t1825 = t1835 ^ 2;
t2472 = t1838 * t1825;
t2912 = t1834 * qJD(4) * t2472 + qJD(1) * t2021 - qJD(2) * t2009 + t1762 * qJD(5);
t2911 = qJD(4) * t1920 + (t2560 + t2591) * t1282 + t2915;
t2910 = qJD(4) * t1919 - t1282 * t2591 + t2915;
t1681 = t2845 * t2240;
t1761 = t2845 * t2275;
t2544 = t1724 * t1836;
t1491 = t1681 - t1761 + t2544;
t2551 = t1669 * qJD(2);
t2577 = t1387 * qJD(1);
t2909 = t2917 + (t2551 + t2577) * t1491;
t2908 = -t1491 * t2577 + t2917;
t2550 = t1669 * t1671;
t2907 = qJD(1) * t2086 + qJD(2) * t2550;
t2906 = qJD(2) * t2086 + t1389 * t2577;
t2694 = qJD(1) * t905;
t2905 = qJD(2) * t475 + qJD(4) * t2021 + qJD(5) * t579 + t903 * t2694;
t2619 = qJD(2) * t1393;
t2904 = qJD(1) * t475 - qJD(4) * t2009 - qJD(5) * t1036 + t1391 * t2619;
t2470 = t1839 * qJD(4);
t1815 = t1835 * t2470;
t2096 = qJD(1) * t2090 + qJD(2) * t2080 + t1815;
t2498 = t1834 * t1838;
t1814 = qJD(5) * t2498;
t2903 = qJD(1) * t579 - qJD(2) * t1036 + t1762 * qJD(4) - t1814;
t2902 = t2239 / 0.2e1;
t2901 = pkin(11) * t1853;
t2049 = t1830 * t2238;
t2898 = t1835 * (t2577 / 0.2e1 + t2551 / 0.2e1);
t2894 = t2009 * qJD(6);
t2893 = t2021 * qJD(6);
t1821 = t1830 ^ 2;
t2888 = -t1833 ^ 2 - t1821;
t2007 = t2292 + t2445;
t2452 = pkin(10) * t2521;
t1925 = t2007 - t2452;
t2150 = -t1831 * pkin(1) - pkin(2) * t2520;
t2391 = t1828 * t2516;
t2519 = t1832 * t1833;
t803 = t2745 * (-t1830 * t1925 + t1833 * t2150 - t1887) + (-(-t1828 * t2310 + (t2517 * t2888 - t2391) * t1831) * qJ(3) + t1760 * t1828 - t1925 * t2519 - t2150 * t2523 + t2137) * t1829;
t1259 = t1838 * t1550;
t2324 = -t1259 / 0.2e1;
t2570 = t1393 * t1839;
t2886 = t1835 * t2324 + t2570 / 0.2e1;
t756 = t1838 * t1154;
t2327 = -t756 / 0.2e1;
t2267 = t1835 * t2327;
t2629 = t905 * t1839;
t2885 = t2267 + t2629 / 0.2e1;
t2500 = t1834 * t1835;
t2339 = -t2500 / 0.2e1;
t2573 = t1391 * t1839;
t2884 = t1550 * t2339 + t2573 / 0.2e1;
t2632 = t903 * t1839;
t2883 = t1154 * t2339 + t2632 / 0.2e1;
t1277 = t2564 / 0.2e1 + t1605 / 0.2e1;
t2878 = t2914 * t1836;
t2528 = t1828 * t1833;
t1750 = pkin(2) * t2528 + qJ(3) * t2523;
t1876 = (t1829 * t1833 + t2261) * pkin(11) + t1750;
t1325 = t1836 * t2913 + t2845 * t1876;
t2870 = t1154 ^ 2;
t2869 = t1387 ^ 2;
t2868 = t1550 ^ 2;
t2867 = t1669 ^ 2;
t2866 = -pkin(5) / 0.2e1;
t2865 = pkin(13) / 0.2e1;
t2254 = t1154 * pkin(5) - t1156 * pkin(13);
t1845 = t1828 * t2887 + t1832 * t1874 + t2901;
t633 = t1836 * t1845 - t2845 * t2914;
t589 = pkin(4) * t1972 + t633;
t1842 = t2254 + t589;
t2749 = t1387 * pkin(13);
t2256 = t1387 * pkin(4) - t1389 * pkin(12);
t1841 = t2845 * t1845 + t2878;
t590 = -pkin(12) * t1972 + t1841;
t368 = t1839 * t590 + (t2256 + t803) * t1835;
t324 = t368 + t2749;
t195 = t1834 * t1842 + t1838 * t324;
t2864 = t195 / 0.2e1;
t367 = t1835 * t590 - t1839 * (-t1829 * t1846 + t1848 * t2745 + t2256);
t2863 = -t367 / 0.2e1;
t2862 = -t368 / 0.2e1;
t2861 = t368 / 0.2e1;
t1324 = t1836 * t1876 - t2845 * t2913;
t1229 = pkin(4) * t2239 + t1324;
t2253 = t1550 * pkin(5) - t1552 * pkin(13);
t1849 = t1229 + t2253;
t2748 = t1669 * pkin(13);
t1230 = -pkin(12) * t2239 + t1325;
t1749 = pkin(2) * t2519 - qJ(3) * t2529;
t2255 = t1669 * pkin(4) - t1671 * pkin(12);
t2759 = pkin(2) * t1830;
t925 = t1839 * t1230 + t1835 * (-t1829 * (t1833 * pkin(3) + t1749) + t2745 * (-pkin(3) * t2523 - t2759) + t2255);
t815 = t925 + t2748;
t581 = t1834 * t1849 + t1838 * t815;
t2860 = t581 / 0.2e1;
t2859 = t633 / 0.2e1;
t1883 = t1830 * t2439 + (-qJ(3) * t1821 - t1833 * t2316) * t1837;
t1967 = t1833 * t2007;
t1971 = qJ(3) * t2310 + t2293;
t2250 = t1840 * t2316;
t1338 = t1832 * t1971 + t1828 * t1967 + (t1828 * t1883 + t1832 * t2250) * t1831;
t634 = t2845 * (t1338 + t2901) + t2878;
t2858 = -t634 / 0.2e1;
t1525 = -t1829 * t2257 + (qJ(3) * t2530 + t2438 * t2745) * t1830;
t924 = t1230 * t1835 - t1839 * (t1525 + t2255);
t814 = -pkin(5) * t1669 + t924;
t2857 = -t814 / 0.2e1;
t2856 = t814 / 0.2e1;
t2249 = t2888 * t2521;
t1587 = t1832 * t2249 - t2539;
t2279 = t2745 * t2845;
t1570 = t1587 * t2279;
t1588 = t1746 * t1832 + t1828 * t2249;
t2487 = t1836 * t1588;
t1362 = -t1570 + t2487;
t2480 = t1838 * t1362;
t2492 = t1835 * t1587;
t2382 = t1829 * t2492;
t2306 = t2745 * t1587;
t2260 = t1836 * t2306;
t2429 = t2845 * t1588;
t1363 = t2429 + t2260;
t2467 = t1839 * t1363;
t1168 = -t2382 + t2467;
t2513 = t1834 * t1168;
t899 = t2480 - t2513;
t2855 = t899 / 0.2e1;
t2483 = t1838 * t1168;
t2510 = t1834 * t1362;
t900 = t2483 + t2510;
t2854 = -t900 / 0.2e1;
t2853 = -t903 / 0.2e1;
t2852 = t903 / 0.2e1;
t2851 = -t905 / 0.2e1;
t2850 = t905 / 0.2e1;
t2849 = -t924 / 0.2e1;
t2848 = -t925 / 0.2e1;
t2847 = t925 / 0.2e1;
t2754 = pkin(12) * t1669;
t1497 = pkin(4) * t1671 + t2754;
t2465 = t1839 * t1497;
t2495 = t1835 * t1324;
t1094 = t2465 + t2495;
t989 = -pkin(5) * t1671 - t1094;
t2846 = -t989 / 0.2e1;
t2844 = -qJD(6) / 0.2e1;
t2843 = qJD(6) / 0.2e1;
t1020 = t1839 * t1387;
t1371 = t1389 * t1838;
t1013 = -t1020 * t1834 - t1371;
t2842 = -t1013 / 0.2e1;
t2841 = t1013 / 0.2e1;
t2575 = t1389 * t1834;
t1014 = -t1020 * t1838 + t2575;
t2840 = -t1014 / 0.2e1;
t1476 = t1491 * t1838;
t2555 = t1624 * t1835;
t2563 = t1492 * t1839;
t1283 = -t2555 + t2563;
t2583 = t1283 * t1834;
t1062 = -t1476 + t2583;
t2839 = -t1062 / 0.2e1;
t2838 = t1062 / 0.2e1;
t2565 = t1491 * t1834;
t2581 = t1283 * t1838;
t1063 = t2565 + t2581;
t2837 = -t1063 / 0.2e1;
t2836 = t1063 / 0.2e1;
t2835 = -t1154 / 0.2e1;
t2834 = t1154 / 0.2e1;
t2833 = t1156 / 0.2e1;
t2463 = t1839 * t1587;
t2494 = t1835 * t1363;
t1167 = t1829 * t2463 + t2494;
t2832 = -t1167 / 0.2e1;
t2831 = t1229 / 0.2e1;
t2830 = -t1282 / 0.2e1;
t2829 = t1282 / 0.2e1;
t2828 = t1283 / 0.2e1;
t2827 = t1324 / 0.2e1;
t2826 = -t1325 / 0.2e1;
t2825 = t1325 / 0.2e1;
t2824 = -t1362 / 0.2e1;
t2823 = t1362 / 0.2e1;
t2822 = -t1387 / 0.2e1;
t2821 = t1387 / 0.2e1;
t2820 = -t1389 / 0.2e1;
t2819 = -t1391 / 0.2e1;
t2817 = -t1393 / 0.2e1;
t1486 = t1839 * t1669;
t1655 = t1838 * t1671;
t1474 = -t1486 * t1834 - t1655;
t2815 = -t1474 / 0.2e1;
t2814 = t1474 / 0.2e1;
t2504 = t1834 * t1671;
t1475 = -t1486 * t1838 + t2504;
t2813 = -t1475 / 0.2e1;
t2812 = t1475 / 0.2e1;
t2165 = t1828 * t2279;
t2518 = t1832 * t1836;
t1723 = (t2165 + t2518) * t1830;
t2475 = t1838 * t1723;
t2393 = t1828 * t2527;
t2274 = t1835 * t2393;
t2424 = t2845 * t1832;
t1725 = (-t1828 * t2313 + t2424) * t1830;
t2461 = t1839 * t1725;
t1630 = t2274 + t2461;
t2506 = t1834 * t1630;
t1495 = t2475 - t2506;
t2811 = t1495 / 0.2e1;
t2477 = t1838 * t1630;
t2503 = t1834 * t1723;
t1496 = t2477 + t2503;
t2810 = -t1496 / 0.2e1;
t2809 = t1525 / 0.2e1;
t2805 = t1570 / 0.2e1;
t2804 = -t1588 / 0.2e1;
t1785 = t1839 * t2393;
t2491 = t1835 * t1725;
t1629 = -t1785 + t2491;
t2803 = -t1629 / 0.2e1;
t2802 = t1629 / 0.2e1;
t2801 = -t1630 / 0.2e1;
t2800 = t1655 / 0.2e1;
t2797 = -t1671 / 0.2e1;
t2289 = t1838 * t2436;
t1758 = t1835 * t2745 + t1839 * t2526;
t2502 = t1834 * t1758;
t1679 = t2289 + t2502;
t2795 = -t1679 / 0.2e1;
t2794 = t1679 / 0.2e1;
t2290 = t1834 * t2436;
t2474 = t1838 * t1758;
t1680 = -t2290 + t2474;
t2793 = -t1680 / 0.2e1;
t2792 = t1680 / 0.2e1;
t2791 = -t1723 / 0.2e1;
t2790 = t1723 / 0.2e1;
t2789 = t1725 / 0.2e1;
t1745 = (-qJ(3) * t1830 * t1840 + pkin(2) * t1837) * t1831;
t1726 = t1833 * t1745;
t2788 = t1726 / 0.2e1;
t2434 = t1839 * t2845;
t2486 = t1836 * t1838;
t1731 = (-t1834 * t2434 + t2486) * t1829;
t2787 = -t1731 / 0.2e1;
t2786 = t1731 / 0.2e1;
t2499 = t1834 * t1836;
t1732 = (t1838 * t2434 + t2499) * t1829;
t2785 = -t1732 / 0.2e1;
t2784 = t1732 / 0.2e1;
t2252 = -pkin(5) * t1839 - pkin(13) * t1835;
t2168 = -pkin(4) + t2252;
t2497 = t1834 * t1839;
t2454 = pkin(12) * t2497;
t1733 = -t1838 * t2168 + t2454;
t2783 = -t1733 / 0.2e1;
t2782 = t1733 / 0.2e1;
t2471 = t1838 * t1839;
t2451 = pkin(12) * t2471;
t1734 = t1834 * t2168 + t2451;
t2781 = -t1734 / 0.2e1;
t2780 = t1734 / 0.2e1;
t1817 = pkin(12) * t2500;
t2750 = pkin(13) * t1839;
t2756 = pkin(5) * t1835;
t1805 = -t2750 + t2756;
t2473 = t1838 * t1805;
t1742 = t1817 + t2473;
t2779 = -t1742 / 0.2e1;
t2778 = t1742 / 0.2e1;
t2489 = t1835 * t1838;
t2453 = pkin(12) * t2489;
t2501 = t1834 * t1805;
t1743 = -t2453 + t2501;
t2777 = t1743 / 0.2e1;
t2490 = t1835 * t1836;
t1757 = t1829 * t2490 - t1839 * t2745;
t2776 = -t1757 / 0.2e1;
t2775 = t1757 / 0.2e1;
t2774 = -t1758 / 0.2e1;
t2773 = t1758 / 0.2e1;
t2772 = t1828 / 0.2e1;
t2771 = -t1832 / 0.2e1;
t2770 = -t1833 / 0.2e1;
t2769 = -t1834 / 0.2e1;
t2768 = t1834 / 0.2e1;
t2766 = t1835 / 0.2e1;
t2765 = -t1836 / 0.2e1;
t2764 = t1836 / 0.2e1;
t2763 = -t1838 / 0.2e1;
t2762 = t1838 / 0.2e1;
t2761 = -t1839 / 0.2e1;
t2758 = pkin(4) * t1156;
t2757 = pkin(4) * t1552;
t2755 = pkin(12) * t1387;
t2753 = pkin(12) * t1835;
t2752 = pkin(13) * t1154;
t2751 = pkin(13) * t1550;
t2747 = t1839 * pkin(12);
t194 = t1834 * t324 - t1838 * t1842;
t323 = -pkin(5) * t1387 + t367;
t92 = t1154 * t194 - t323 * t903;
t2744 = qJD(1) * t92;
t93 = -t1154 * t195 + t323 * t905;
t2743 = qJD(1) * t93;
t1700 = -t1840 * t2251 - t2293;
t1407 = t1832 * t1699 + t1700 * t2528 + t1745 * t2529;
t1222 = pkin(11) * t1950 + t1407;
t1217 = t1836 * t1222;
t2524 = t1830 * t1700;
t1565 = t1726 - t2524;
t1341 = -t1724 * t1829 * pkin(11) + pkin(3) * t2458 + t1565;
t1406 = -t1828 * t1699 + t1700 * t2519 + t1745 * t2523;
t1228 = pkin(3) * t2390 - t1724 * t2444 + t1406;
t2166 = t1228 * t2279;
t721 = t1341 * t2436 - t1217 + t2166;
t681 = t1624 * pkin(4) - t721;
t513 = t1282 * pkin(5) - t1283 * pkin(13) + t681;
t2671 = t1838 * t513;
t1216 = t1228 * t2313;
t1218 = t2845 * t1222;
t1310 = t1341 * t2526;
t722 = t1218 + t1216 + t1310;
t682 = -pkin(12) * t1624 + t722;
t677 = t1839 * t682;
t951 = -t1228 * t1829 + t2745 * t1341;
t720 = pkin(4) * t1491 - pkin(12) * t1492 + t951;
t717 = t1835 * t720;
t440 = t677 + t717;
t407 = pkin(13) * t1491 + t440;
t2685 = t1834 * t407;
t232 = t2671 - t2685;
t2674 = t1838 * t407;
t2682 = t1834 * t513;
t233 = t2674 + t2682;
t2666 = t1839 * t720;
t2676 = t1835 * t682;
t439 = t2666 - t2676;
t406 = -pkin(5) * t1491 - t439;
t31 = -t194 * t232 + t195 * t233 + t323 * t406;
t2742 = t31 * qJD(1);
t767 = pkin(5) * t1156 + t2752;
t2670 = t1838 * t767;
t2686 = t1834 * t367;
t276 = t2670 + t2686;
t2675 = t1838 * t367;
t2681 = t1834 * t767;
t277 = -t2675 + t2681;
t33 = -t194 * t276 + t195 * t277 + t323 * t368;
t2741 = t33 * qJD(1);
t1017 = t1835 * t1387;
t496 = -pkin(5) * t1017 + pkin(13) * t1020 + t1841;
t2672 = t1838 * t496;
t1038 = pkin(4) * t1389 + t2755;
t1025 = t1835 * t1038;
t632 = t1839 * t633;
t495 = -t632 + t1025;
t456 = pkin(13) * t1389 + t495;
t2684 = t1834 * t456;
t259 = t2672 - t2684;
t2673 = t1838 * t456;
t2683 = t1834 * t496;
t260 = t2673 + t2683;
t2469 = t1839 * t1038;
t2677 = t1835 * t633;
t494 = t2469 + t2677;
t455 = -pkin(5) * t1389 - t494;
t34 = -t194 * t259 + t195 * t260 + t323 * t455;
t2740 = t34 * qJD(1);
t40 = -t1062 * t195 + t1063 * t194 - t232 * t905 - t233 * t903;
t2739 = t40 * qJD(1);
t41 = -t1013 * t195 + t1014 * t194 - t259 * t905 - t260 * t903;
t2738 = t41 * qJD(1);
t42 = -t276 * t905 - t277 * t903 + (t195 * t1834 - t194 * t1838) * t1154;
t2737 = t42 * qJD(1);
t2662 = t323 * t1834;
t51 = -t1156 * t194 + t368 * t903 + (t276 - t2662) * t1154;
t2736 = t51 * qJD(1);
t2661 = t323 * t1838;
t52 = -t1156 * t195 + t368 * t905 + (-t277 - t2661) * t1154;
t2735 = t52 * qJD(1);
t53 = t1062 * t323 + t1154 * t232 - t1282 * t194 + t406 * t903;
t2734 = t53 * qJD(1);
t54 = t1063 * t323 - t1154 * t233 - t1282 * t195 + t406 * t905;
t2733 = t54 * qJD(1);
t55 = t1013 * t323 + t1017 * t194 + t1154 * t259 + t455 * t903;
t2732 = t55 * qJD(1);
t56 = t1014 * t323 + t1017 * t195 - t1154 * t260 + t455 * t905;
t2731 = t56 * qJD(1);
t65 = t1167 * t323 - t194 * t899 + t195 * t900;
t2730 = t65 * qJD(1);
t81 = -t367 * t439 + t368 * t440 + t589 * t681;
t2729 = t81 * qJD(1);
t84 = -t367 * t494 + t368 * t495 + t589 * t634;
t2728 = t84 * qJD(1);
t85 = -t1154 * t440 - t1156 * t439 - t1282 * t368 + t1283 * t367;
t2727 = t85 * qJD(1);
t91 = -t1154 * t495 - t1156 * t494 + (t368 * t1835 - t367 * t1839) * t1387;
t2726 = t91 * qJD(1);
t98 = t1154 * t681 + t1282 * t589 + t1387 * t439 - t1491 * t367;
t2725 = t98 * qJD(1);
t99 = t1156 * t681 + t1283 * t589 - t1387 * t440 - t1491 * t368;
t2724 = t99 * qJD(1);
t201 = -t1154 * t589 + t1387 * t367;
t2723 = qJD(1) * t201;
t202 = t1156 * t589 - t1387 * t368;
t2722 = qJD(1) * t202;
t345 = -t899 * t905 - t900 * t903;
t2721 = qJD(1) * t345;
t382 = -t803 * t1387 - t1972 * t633;
t2720 = qJD(1) * t382;
t383 = t803 * t1389 + t1972 * t634;
t2719 = qJD(1) * t383;
t410 = t1154 * t899 + t1167 * t903;
t2718 = qJD(1) * t410;
t411 = -t1154 * t900 + t1167 * t905;
t2717 = qJD(1) * t411;
t2119 = t1013 * t2818 + t2814 * t903;
t2338 = t2500 / 0.2e1;
t2271 = t1062 * t2338;
t412 = t2271 - t2119;
t2716 = qJD(1) * t412;
t2118 = t1014 * t2816 + t2812 * t905;
t2328 = t2489 / 0.2e1;
t2270 = t1063 * t2328;
t413 = t2270 - t2118;
t2715 = qJD(1) * t413;
t2105 = t1154 * t2818 + t2807 * t903;
t2017 = t2105 * t1834;
t2593 = t1062 * t1838;
t443 = t2593 / 0.2e1 - t2017;
t2714 = qJD(1) * t443;
t2117 = t1154 * t2816 + t2807 * t905;
t2016 = t2117 * t1838;
t2592 = t1063 * t1834;
t2375 = -t2592 / 0.2e1;
t445 = t2375 - t2016;
t2713 = qJD(1) * t445;
t2088 = -t2581 / 0.2e1 - t2565 / 0.2e1;
t452 = t2088 - t2105;
t2712 = qJD(1) * t452;
t2247 = t1476 / 0.2e1 - t2583 / 0.2e1;
t453 = -t2117 - t2247;
t2711 = qJD(1) * t453;
t457 = t903 * t1156 - t1834 * t2870;
t2710 = qJD(1) * t457;
t458 = t1156 * t905 - t1838 * t2870;
t2709 = qJD(1) * t458;
t520 = -t1154 * t1168 + t1156 * t1167;
t2708 = qJD(1) * t520;
t594 = t1154 * t1362 - t1167 * t1387;
t2707 = qJD(1) * t594;
t595 = t1156 * t1362 - t1168 * t1387;
t2706 = qJD(1) * t595;
t2081 = t1156 * t2798 + t1387 * t2806;
t2010 = t2081 * t1839;
t2582 = t1283 * t1835;
t627 = -t2582 / 0.2e1 - t2010;
t2704 = qJD(1) * t627;
t635 = t2081 - t1277;
t2703 = qJD(1) * t635;
t2085 = t2563 / 0.2e1 - t2555 / 0.2e1;
t636 = -t2082 + t2085;
t2702 = qJD(1) * t636;
t641 = t1154 * t1389 - t1835 * t2869;
t2701 = qJD(1) * t641;
t642 = t1156 * t1389 - t1839 * t2869;
t2700 = qJD(1) * t642;
t695 = t1362 * t1389 - t1363 * t1387;
t2699 = qJD(1) * t695;
t2558 = t1587 * t1829;
t786 = -t1362 * t1972 + t1387 * t2558;
t2698 = qJD(1) * t786;
t787 = -t1363 * t1972 + t1389 * t2558;
t2697 = qJD(1) * t787;
t1337 = -t1828 * t1971 + t1832 * t1967 + (-t1828 * t2250 + t1832 * t1883) * t1831;
t790 = t1337 * t1587 + t1338 * t1588;
t2696 = qJD(1) * t790;
t2695 = qJD(1) * t903;
t752 = t1834 * t1154;
t2693 = qJD(5) * t752;
t2692 = qJD(5) * t756;
t2649 = t589 * t1835;
t100 = t1154 * t634 - t1389 * t367 + (t494 - t2649) * t1387;
t2691 = t100 * qJD(1);
t2648 = t589 * t1839;
t101 = t1156 * t634 - t1389 * t368 + (-t495 - t2648) * t1387;
t2690 = t101 * qJD(1);
t106 = t1167 * t367 + t1168 * t368 + t1362 * t589;
t2689 = t106 * qJD(1);
t139 = -t633 * t721 + t634 * t722 + t803 * t951;
t2688 = t139 * qJD(1);
t169 = -t1387 * t722 - t1389 * t721 - t1491 * t634 + t1492 * t633;
t2687 = t169 * qJD(1);
t2679 = t1834 * t924;
t1311 = t1839 * t1324;
t1490 = t1835 * t1497;
t1095 = -t1311 + t1490;
t990 = pkin(13) * t1671 + t1095;
t2678 = t1834 * t990;
t2668 = t1838 * t924;
t2667 = t1838 * t990;
t209 = t951 * t1387 + t803 * t1491 + t633 * t1624 - t1972 * t721;
t2665 = t209 * qJD(1);
t210 = t951 * t1389 + t803 * t1492 + t634 * t1624 + t1972 * t722;
t2664 = t210 * qJD(1);
t242 = t1362 * t633 + t1363 * t634 - t2558 * t803;
t2663 = t242 * qJD(1);
t379 = -t1013 * t905 - t1014 * t903;
t2660 = t379 * qJD(1);
t384 = -t1062 * t905 - t1063 * t903;
t2659 = t384 * qJD(1);
t2658 = t406 * t1838;
t2192 = t2631 + t2669;
t408 = t2192 * t1154;
t2657 = t408 * qJD(1);
t2656 = t455 * t1834;
t2655 = t455 * t1838;
t466 = -t1062 * t1154 - t1282 * t903;
t2654 = t466 * qJD(1);
t467 = t1063 * t1154 + t1282 * t905;
t2653 = t467 * qJD(1);
t468 = -t1013 * t1154 + t1017 * t903;
t2652 = t468 * qJD(1);
t469 = t1014 * t1154 - t1017 * t905;
t2651 = t469 * qJD(1);
t553 = -t1154 * t1283 - t1156 * t1282;
t2650 = t553 * qJD(1);
t2468 = t1839 * t1154;
t2590 = t1156 * t1835;
t2156 = t2468 + t2590;
t593 = t2156 * t1387;
t2647 = t593 * qJD(1);
t1532 = -t1830 * t2007 + (pkin(10) * t2522 + t1833 * t2439) * t1831;
t608 = t1337 * t1406 + t1338 * t1407 + t1532 * t1565;
t2646 = t608 * qJD(1);
t612 = -t1337 * t1724 - t1338 * t2458 - t1406 * t1892 + t1407 * t1891;
t2645 = t612 * qJD(1);
t648 = -t1154 * t1491 - t1282 * t1387;
t2643 = t648 * qJD(1);
t649 = t1156 * t1491 + t1283 * t1387;
t2642 = t649 * qJD(1);
t710 = t1337 * t2390 - t1406 * t2238 + t1532 * t2458 - t1565 * t1891;
t2641 = t710 * qJD(1);
t711 = -t1338 * t2390 + t1407 * t2238 + t1532 * t1724 + t1565 * t1892;
t2640 = t711 * qJD(1);
t744 = -t1387 * t1492 - t1389 * t1491;
t2639 = t744 * qJD(1);
t2638 = t814 * t1834;
t2637 = t814 * t1838;
t1858 = t1972 * t2798 + t2239 * t2821;
t845 = -t2437 / 0.2e1 + (t2240 / 0.2e1 - t2275 / 0.2e1) * t1836 + t1858;
t2636 = t845 * qJD(1);
t1481 = t2544 / 0.2e1 + t1681 / 0.2e1 - t1761 / 0.2e1;
t1857 = t1389 * t2902 + t1972 * t2796;
t846 = t1857 + t1481;
t2635 = t846 * qJD(1);
t2634 = t899 * t1839;
t2633 = t900 * t1839;
t910 = t1624 * t1387 + t1491 * t1972;
t2628 = t910 * qJD(1);
t911 = -t1624 * t1389 - t1492 * t1972;
t2627 = t911 * qJD(1);
t2626 = t989 * t1834;
t2625 = t989 * t1838;
t2624 = qJD(1) * t1156;
t2623 = qJD(1) * t1277;
t2622 = qJD(1) * t1389;
t2621 = qJD(1) * t1481;
t2620 = qJD(2) * t1391;
t2618 = qJD(2) * t1552;
t2617 = qJD(2) * t1833;
t2616 = qJD(3) * t1829;
t2615 = qJD(4) * t1017;
t2614 = qJD(4) * t1020;
t1483 = t1835 * t1669;
t2613 = qJD(4) * t1483;
t2612 = qJD(4) * t1486;
t1827 = t1839 ^ 2;
t1811 = t1827 - t1825;
t2611 = qJD(4) * t1811;
t1255 = t1834 * t1550;
t2610 = qJD(5) * t1255;
t2609 = qJD(5) * t1259;
t2608 = qJD(5) * t1387;
t2607 = qJD(5) * t1481;
t2606 = qJD(5) * t1669;
t1810 = t1826 - t1824;
t2605 = qJD(5) * t1810;
t2604 = qJD(5) * t1834;
t2603 = qJD(5) * t1835;
t2602 = qJD(5) * t1838;
t2601 = qJD(5) * t1839;
t2600 = qJD(6) * t1154;
t2599 = qJD(6) * t1277;
t2598 = qJD(6) * t1550;
t2597 = qJD(6) * t1834;
t2596 = qJD(6) * t1838;
t2595 = t1013 * t1838;
t2594 = t1014 * t1834;
t2589 = t1167 * t1757;
t2588 = t1167 * t1834;
t2587 = t1167 * t1838;
t2586 = t1229 * t1835;
t2585 = t1229 * t1839;
t2053 = t2391 + t2517;
t2303 = t2458 * t1828;
t2314 = t1832 * t2746;
t1304 = (t1724 * t2314 - t2303 * t2746) * t1830 + (t1724 * t2054 - t2053 * t2458) * t1831;
t2580 = t1304 * qJD(1);
t2579 = t1362 * t1835;
t2578 = t1362 * t1839;
t1421 = -t1724 * t2238 + t1892 * t2390;
t2569 = t1421 * qJD(1);
t1884 = t1830 * t1891;
t1422 = t1884 * t2521 + t2238 * t2458;
t2568 = t1422 * qJD(1);
t2567 = t1474 * t1838;
t2566 = t1475 * t1834;
t2562 = t1495 * t1839;
t2561 = t1496 * t1839;
t2559 = t1552 * t1835;
t1616 = -t2302 / 0.2e1 - t2152 / 0.2e1;
t2557 = t1616 * qJD(1);
t2556 = t1616 * qJD(4);
t2554 = t1629 * t1757;
t2553 = t1629 * t1834;
t2552 = t1629 * t1838;
t2549 = t1679 * t1839;
t1759 = -t2292 + t2452;
t1822 = t1831 ^ 2;
t2531 = t1822 * t1840;
t1693 = pkin(1) * t2531 - t1759 * t2746;
t2548 = t1693 * qJD(1);
t1694 = -t1822 * pkin(1) * t1837 - t1760 * t2746;
t2547 = t1694 * qJD(1);
t2546 = t1723 * t1835;
t2545 = t1723 * t1839;
t2543 = t1731 * t1834;
t2542 = t1732 * t1838;
t2541 = t1733 * t1839;
t2540 = t1734 * t1839;
t2538 = t1757 * t1387;
t2537 = t1757 * t1669;
t1613 = t1757 * t1834;
t1614 = t1757 * t1838;
t2536 = t1758 * t1387;
t2533 = t1762 * qJD(6);
t1774 = (-t1837 ^ 2 + t1840 ^ 2) * t1822;
t2532 = t1774 * qJD(1);
t2525 = t1830 * qJD(2);
t1100 = -pkin(5) * t1483 + pkin(13) * t1486 + t1325;
t2515 = t1834 * t1100;
t2512 = t1834 * t1282;
t1284 = pkin(5) * t1552 + t2751;
t2511 = t1834 * t1284;
t2496 = t1835 * qJD(4);
t2493 = t1835 * t1491;
t2488 = t1835 * t1839;
t2485 = t1838 * t1100;
t2482 = t1838 * t1282;
t2481 = t1838 * t1284;
t2466 = t1839 * t1491;
t2464 = t1839 * t1550;
t1549 = t2462 / 0.2e1 - t2048 / 0.2e1;
t2331 = -t1483 / 0.2e1;
t2459 = qJD(4) * t2331 + t1549 * qJD(5);
t2457 = t2845 / 0.2e1;
t2456 = pkin(5) * t2852;
t2455 = pkin(5) * t2851;
t2450 = pkin(5) * t2818;
t2449 = pkin(5) * t2817;
t2448 = t2753 / 0.2e1;
t2447 = t2747 / 0.2e1;
t2446 = -t2745 / 0.2e1;
t2442 = t323 / 0.2e1 + t2863;
t2441 = -t677 / 0.2e1 - t717 / 0.2e1;
t2440 = t2856 + t2849;
t2435 = t1835 * t2845;
t2433 = t2845 * t1154;
t2432 = t2845 * t1156;
t2431 = t2845 * t1362;
t2430 = t2845 * t1550;
t2428 = t2845 * t1723;
t2427 = t2845 * t1825;
t2426 = t2845 * t1827;
t2423 = t903 * t2591;
t2422 = t905 * t2591;
t2421 = -t2673 / 0.2e1;
t2419 = -t2667 / 0.2e1;
t2418 = t406 * t2768;
t2417 = -t2648 / 0.2e1;
t2415 = t905 * t2766;
t2413 = -t1025 / 0.2e1 + t632 / 0.2e1;
t2410 = t1156 * t2577;
t2406 = t1391 * t2560;
t2405 = t1393 * t2560;
t2403 = t1552 * t2551;
t2401 = t1834 * t2496;
t2400 = qJD(4) * t2489;
t2399 = qJD(6) * t2497;
t2398 = qJD(6) * t2471;
t2397 = t1154 * t2577;
t2396 = t1550 * t2551;
t2395 = qJD(4) * t2550;
t2394 = t1837 * t2531;
t2392 = t1830 * t2528;
t2389 = t1830 * t2519;
t2385 = qJD(6) * t2498;
t2384 = t1834 * t2489;
t2383 = qJD(5) * t2488;
t2381 = t1838 * t2468;
t2380 = t1838 * t2464;
t2379 = -t2595 / 0.2e1;
t2378 = t2594 / 0.2e1;
t2377 = -t2593 / 0.2e1;
t2376 = t1062 * t2760;
t2374 = t2592 / 0.2e1;
t2373 = t1063 * t2761;
t2371 = -t2588 / 0.2e1;
t2370 = t1167 * t2766;
t2369 = -t2587 / 0.2e1;
t2368 = -t2585 / 0.2e1;
t2366 = t2582 / 0.2e1;
t2365 = t2576 / 0.2e1;
t2362 = t1393 * t2766;
t2360 = -t2567 / 0.2e1;
t2359 = t2566 / 0.2e1;
t2357 = -t2558 / 0.2e1;
t2356 = t1588 * t2770;
t2355 = -t2553 / 0.2e1;
t2354 = t1629 * t2766;
t2353 = -t2552 / 0.2e1;
t2352 = t1680 * t2761;
t2351 = -t1613 / 0.2e1;
t2350 = -t1614 / 0.2e1;
t2349 = t1758 * t2766;
t2348 = t1824 * t2767;
t2347 = t1826 * t2767;
t2346 = -t2529 / 0.2e1;
t2345 = t2529 / 0.2e1;
t2344 = t2526 / 0.2e1;
t2343 = t752 / 0.2e1;
t2342 = -t2512 / 0.2e1;
t2341 = -t2509 / 0.2e1;
t2340 = t1255 / 0.2e1;
t2337 = -t2497 / 0.2e1;
t2336 = t2497 / 0.2e1;
t2335 = t1282 * t2767;
t2334 = -t1017 / 0.2e1;
t2333 = t1017 / 0.2e1;
t2332 = -t2493 / 0.2e1;
t2330 = t1483 / 0.2e1;
t2329 = -t2489 / 0.2e1;
t2326 = -t2482 / 0.2e1;
t2325 = t2482 / 0.2e1;
t2323 = t2476 / 0.2e1;
t2322 = t2471 / 0.2e1;
t2321 = -t1020 / 0.2e1;
t2320 = -t2466 / 0.2e1;
t2319 = -t1486 / 0.2e1;
t2318 = t1311 / 0.2e1 - t1490 / 0.2e1;
t2317 = -t1803 / 0.2e1 - t1784 / 0.2e1;
t2309 = t2745 * t1389;
t2308 = t2745 * t1491;
t2307 = t2745 * t1492;
t2301 = (-t1824 - t1826) * t1757;
t2300 = -qJD(5) - t2577;
t2299 = -qJD(6) - t2591;
t2298 = -qJD(5) - t2551;
t2297 = -qJD(6) - t2560;
t2296 = -qJD(6) + t2470;
t2295 = pkin(13) * t2338;
t2294 = pkin(13) * t2328;
t2291 = qJD(4) * t2436;
t2288 = t1757 * t2435;
t2287 = -t2436 / 0.2e1;
t2286 = t2436 / 0.2e1;
t2285 = -t2435 / 0.2e1;
t2284 = t2435 / 0.2e1;
t2283 = -t2434 / 0.2e1;
t2282 = -t2433 / 0.2e1;
t2281 = t2432 / 0.2e1;
t2280 = -t2430 / 0.2e1;
t2278 = t1835 * t1814;
t2277 = t1825 * t2385;
t2276 = qJD(2) * t2394;
t2273 = qJD(4) * t2384;
t2272 = t951 * t2745 / 0.2e1;
t2265 = t2752 / 0.2e1 + t767 / 0.2e1;
t2264 = t1831 * t2312;
t2263 = t1831 * t2311;
t2259 = t2313 / 0.2e1;
t2258 = t2751 / 0.2e1 + t1284 / 0.2e1;
t2248 = 0.2e1 * t2273;
t2246 = t1785 / 0.2e1 - t2491 / 0.2e1;
t2245 = -t1216 / 0.2e1 - t1218 / 0.2e1 - t1310 / 0.2e1;
t580 = t1834 * t815 - t1838 * t1849;
t713 = t2481 + t2679;
t714 = t2511 - t2668;
t1872 = -t194 * t713 / 0.2e1 + t714 * t2864 - t276 * t580 / 0.2e1 + t277 * t2860 + t323 * t2847 + t368 * t2856;
t2128 = t232 * t2769 + t233 * t2762;
t1945 = pkin(13) * t2128 + t2866 * t406;
t1 = -t1872 + t1945;
t125 = -t580 * t713 + t581 * t714 + t814 * t925;
t2244 = -t1 * qJD(1) + t125 * qJD(2);
t696 = t2485 - t2678;
t697 = t2515 + t2667;
t129 = -t580 * t696 + t581 * t697 + t814 * t989;
t1873 = t194 * t696 / 0.2e1 - t195 * t697 / 0.2e1 + t259 * t580 / 0.2e1 - t260 * t581 / 0.2e1 + t323 * t2846 + t455 * t2857;
t1963 = t232 * t2783 + t233 * t2780 + t2448 * t406;
t3 = t1873 + t1963;
t2243 = -t3 * qJD(1) + t129 * qJD(2);
t140 = -t1391 * t697 - t1393 * t696 - t1474 * t581 + t1475 * t580;
t1852 = t194 * t2813 + t195 * t2814 + t259 * t2816 + t260 * t2818 + t2840 * t580 + t2841 * t581 + t2850 * t696 + t2852 * t697;
t1886 = (t232 * t2763 + t233 * t2769) * t1835 + t1063 * t2782 + t1062 * t2781;
t5 = t1852 + t1886;
t2242 = -t5 * qJD(1) + t140 * qJD(2);
t142 = -t1391 * t714 - t1393 * t713 + (t581 * t1834 - t580 * t1838) * t1550;
t1917 = t276 * t2816 + t277 * t2818 + t2850 * t713 + t2852 * t714;
t2129 = t195 * t2808 + t2835 * t581;
t2130 = t194 * t2807 + t2834 * t580;
t7 = (pkin(13) * t2839 + t233 / 0.2e1 + t2130) * t1838 + (pkin(13) * t2836 - t232 / 0.2e1 + t2129) * t1834 + t1917;
t2241 = -t7 * qJD(1) + t142 * qJD(2);
t2237 = qJD(1) * t2746 + qJD(2);
t1869 = t194 * t2811 + t195 * t2810 + t2803 * t323 + t2832 * t814 + t2854 * t581 + t2855 * t580;
t1975 = t232 * t2795 + t233 * t2792 + t2775 * t406;
t13 = t1869 + t1975;
t219 = -t1495 * t580 + t1496 * t581 + t1629 * t814;
t2236 = -t13 * qJD(1) + t219 * qJD(2);
t1865 = t259 * t2808 + t2815 * t323 + t2819 * t455 + t2835 * t696 + t2842 * t814 + t2846 * t903;
t2112 = t1282 * t2783 + t232 * t2761;
t2140 = pkin(12) * t2838 + t2418;
t17 = (t194 * t2799 + t2822 * t580 + t2140) * t1835 + t1865 + t2112;
t205 = t1391 * t989 + t1474 * t814 + t1483 * t580 + t1550 * t696;
t2235 = -t17 * qJD(1) + t205 * qJD(2);
t1864 = t260 * t2807 + t2813 * t323 + t2817 * t455 + t2834 * t697 + t2840 * t814 + t2846 * t905;
t2109 = t1282 * t2781 + t233 * t2760;
t2139 = pkin(12) * t2836 + t2658 / 0.2e1;
t18 = (t195 * t2799 + t2822 * t581 + t2139) * t1835 + t1864 + t2109;
t206 = t1393 * t989 + t1475 * t814 + t1483 * t581 - t1550 * t697;
t2234 = -t18 * qJD(1) + t206 * qJD(2);
t203 = t1391 * t925 - t1552 * t580 + (t713 - t2638) * t1550;
t1867 = t194 * t2806 + t276 * t2808 + t2819 * t368 + t2833 * t580 + t2835 * t713 + t2848 * t903;
t1982 = pkin(13) * t2830 + t2807 * t323 + t2834 * t814;
t2144 = pkin(5) * t2839 - t2658 / 0.2e1;
t27 = t1834 * t1982 + t1867 + t2144;
t2233 = -t27 * qJD(1) + t203 * qJD(2);
t204 = t1393 * t925 - t1552 * t581 + (-t714 - t2637) * t1550;
t1866 = t195 * t2806 + t277 * t2807 + t2817 * t368 + t2833 * t581 + t2834 * t714 + t2848 * t905;
t2143 = pkin(5) * t2837 + t2418;
t28 = t1838 * t1982 + t1866 + t2143;
t2232 = -t28 * qJD(1) + t204 * qJD(2);
t328 = -t1094 * t924 + t1095 * t925 + t1229 * t1325;
t1868 = t1094 * t2863 + t1095 * t2861 + t2825 * t589 + t2831 * t634 + t2847 * t495 + t2849 * t494;
t2124 = t2760 * t440 + t2767 * t439;
t1943 = t2124 * pkin(12) - t681 * pkin(4) / 0.2e1;
t43 = -t1868 + t1943;
t2231 = -t43 * qJD(1) + t328 * qJD(2);
t350 = -t1094 * t1552 - t1095 * t1550 + (t925 * t1835 - t924 * t1839) * t1669;
t1907 = t1094 * t2833 + t1095 * t2834 + t2806 * t494 + t2807 * t495;
t2125 = t2799 * t368 + t2822 * t925;
t2126 = t2798 * t367 + t2821 * t924;
t49 = (pkin(12) * t2830 + t440 / 0.2e1 + t2126) * t1839 + (pkin(12) * t2828 - t439 / 0.2e1 + t2125) * t1835 + t1907;
t2230 = -t49 * qJD(1) + t350 * qJD(2);
t373 = -t1391 * t814 + t1550 * t580;
t1916 = t2818 * t323 + t2852 * t814 - t2130;
t2133 = -t2682 / 0.2e1 - t2674 / 0.2e1;
t58 = t1916 + t2133;
t2229 = qJD(1) * t58 - qJD(2) * t373;
t374 = t1393 * t814 - t1550 * t581;
t1915 = t2817 * t323 + t2851 * t814 - t2129;
t2135 = -t2685 / 0.2e1 + t2671 / 0.2e1;
t57 = t1915 + t2135;
t2228 = qJD(1) * t57 - qJD(2) * t374;
t420 = t1325 * t1550 - t1671 * t924 + (t1094 - t2586) * t1669;
t1911 = t1154 * t2825 + t2797 * t367 + t2807 * t634 + t2820 * t924;
t1977 = t1229 * t2822 + t589 * t2799 + pkin(12) * t1491 / 0.2e1;
t2148 = pkin(4) * t2829 + t2760 * t681;
t77 = t1094 * t2821 + t1835 * t1977 + t2798 * t494 + t1911 + t2148;
t2227 = t77 * qJD(1) + t420 * qJD(2);
t421 = t1325 * t1552 - t1671 * t925 + (-t1095 - t2585) * t1669;
t1910 = t1156 * t2825 + t2797 * t368 + t2806 * t634 + t2820 * t925;
t2147 = pkin(4) * t2828 + t2767 * t681;
t79 = t1095 * t2822 + t1839 * t1977 + t2799 * t495 + t1910 + t2147;
t2226 = t79 * qJD(1) + t421 * qJD(2);
t459 = t1229 * t1723 + t1629 * t924 + t1630 * t925;
t1862 = t1167 * t924 / 0.2e1 + t1168 * t2847 + t1229 * t2823 + t367 * t2802 + t1630 * t2861 + t589 * t2790;
t1926 = t2287 * t681 + t2773 * t440 + t2776 * t439;
t63 = -t1862 + t1926;
t2225 = -t63 * qJD(1) + t459 * qJD(2);
t1912 = t1156 * t2831 + t2806 * t589 + t2125;
t2132 = -t2676 / 0.2e1 + t2666 / 0.2e1;
t102 = -t1912 + t2132;
t629 = t1229 * t1552 - t1669 * t925;
t2224 = qJD(1) * t102 - qJD(2) * t629;
t1913 = t1154 * t2831 + t2807 * t589 - t2126;
t103 = t1913 + t2441;
t628 = -t1229 * t1550 + t1669 * t924;
t2223 = qJD(1) * t103 - qJD(2) * t628;
t1904 = t1324 * t2824 + t1363 * t2826 + t1725 * t2858 + t2791 * t633;
t2042 = t2457 * t721 + t2764 * t722;
t113 = t2272 + (t1587 * t2809 + t2346 * t803 + t2042) * t1829 + t1904;
t761 = t1324 * t1723 + t1325 * t1725 + t1525 * t2393;
t2222 = -t113 * qJD(1) + t761 * qJD(2);
t1914 = t1495 * t2851 + t2810 * t903 + t2817 * t899 + t2819 * t900;
t2077 = t1062 * t2793 + t1063 * t2794;
t199 = -t1914 + t2077;
t762 = -t1391 * t1496 - t1393 * t1495;
t2221 = qJD(1) * t199 - qJD(2) * t762;
t1908 = t1013 * t2817 + t1014 * t2819 + t2813 * t903 + t2815 * t905;
t2013 = (t2377 + t2375) * t1835;
t207 = t2013 - t1908;
t743 = -t1391 * t1475 - t1393 * t1474;
t2220 = -t207 * qJD(1) + t743 * qJD(2);
t1903 = t1013 * t2793 + t1014 * t2794 + t2785 * t903 + t2787 * t905;
t2020 = (t2763 * t899 + t2769 * t900) * t1835;
t211 = t2020 - t1903;
t1896 = t1391 * t2785 + t1393 * t2787 + t1474 * t2793 + t1475 * t2794;
t2012 = (t1495 * t2763 + t1496 * t2769) * t1835;
t525 = t2012 - t1896;
t2219 = -t211 * qJD(1) - t525 * qJD(2);
t214 = (t2837 + t2105) * t1838 + (t2838 + t2117) * t1834;
t2155 = t2479 + t2572;
t782 = t2155 * t1550;
t2218 = t214 * qJD(1) + t782 * qJD(2);
t1850 = t1525 * t2820 + t1972 * t2826 + t2239 * t2858 + t2797 * t803;
t1894 = -t1217 / 0.2e1 + t1341 * t2286 + t2166 / 0.2e1;
t234 = t1850 + t1894;
t979 = t1325 * t2239 + t1525 * t1671;
t2217 = qJD(1) * t234 - qJD(2) * t979;
t1851 = t1387 * t2809 + t1972 * t2827 + t2239 * t2859 + t2798 * t803;
t235 = t1851 + t2245;
t978 = -t1324 * t2239 - t1525 * t1669;
t2216 = qJD(1) * t235 - qJD(2) * t978;
t2107 = t1154 * t2792 + t2776 * t905;
t2116 = t1154 * t2794 + t2776 * t903;
t240 = (t2854 - t2116) * t1838 + (t2855 + t2107) * t1834;
t2061 = t1393 * t2776 + t1550 * t2792;
t2075 = t1391 * t2776 + t1550 * t2794;
t554 = (t2810 - t2075) * t1838 + (t2811 + t2061) * t1834;
t2215 = t240 * qJD(1) + t554 * qJD(2);
t1906 = t1154 * t2811 + t1167 * t2818 + t2802 * t903 + t2807 * t899;
t2076 = t1062 * t2775 + t1282 * t2795;
t249 = -t1906 + t2076;
t928 = t1391 * t1629 + t1495 * t1550;
t2214 = qJD(1) * t249 - qJD(2) * t928;
t1905 = t1154 * t2810 + t1167 * t2816 + t2802 * t905 + t2808 * t900;
t2072 = t1063 * t2775 + t1282 * t2793;
t251 = -t1905 + t2072;
t929 = t1393 * t1629 - t1496 * t1550;
t2213 = -qJD(1) * t251 + qJD(2) * t929;
t2094 = t1013 * t2807 + t1154 * t2814;
t280 = t2376 + (t1387 * t2819 + t2799 * t903 + t2342) * t1835 + t2094;
t926 = t1391 * t1483 - t1474 * t1550;
t2212 = -t280 * qJD(1) + t926 * qJD(2);
t2093 = t1014 * t2808 + t1154 * t2813;
t281 = t2373 + (t1387 * t2816 + t2798 * t905 + t2325) * t1835 + t2093;
t927 = -t1393 * t1483 + t1475 * t1550;
t2211 = -t281 * qJD(1) + t927 * qJD(2);
t2004 = t1387 * t2794 + t2286 * t903;
t2070 = t1013 * t2775 + t1154 * t2786;
t293 = t2634 / 0.2e1 + (t2371 + t2004) * t1835 + t2070;
t2002 = t1391 * t2286 + t1669 * t2794;
t2069 = t1474 * t2775 + t1550 * t2786;
t643 = t2562 / 0.2e1 + (t2355 + t2002) * t1835 + t2069;
t2210 = t293 * qJD(1) + t643 * qJD(2);
t2003 = t1387 * t2792 + t2286 * t905;
t2068 = t1014 * t2775 + t1154 * t2785;
t296 = -t2633 / 0.2e1 + (t2369 + t2003) * t1835 + t2068;
t2001 = t1393 * t2286 + t1669 * t2792;
t2067 = t1475 * t2775 + t1550 * t2785;
t646 = -t2561 / 0.2e1 + (t2353 + t2001) * t1835 + t2067;
t2209 = t296 * qJD(1) + t646 * qJD(2);
t1957 = t1154 * t1255 + t1156 * t2819 + t1552 * t2853;
t310 = t2326 + t1957;
t897 = t1391 * t1552 - t1834 * t2868;
t2208 = -qJD(1) * t310 + qJD(2) * t897;
t1959 = -t1154 * t1259 + t1156 * t2816 + t2806 * t905;
t312 = t2342 + t1959;
t898 = t1393 * t1552 - t1838 * t2868;
t2207 = -qJD(1) * t312 - qJD(2) * t898;
t1105 = t1154 * t2384;
t322 = t1105 + (-t2632 / 0.2e1 + t2840) * t1838 + (-t2629 / 0.2e1 + t2841) * t1834;
t1504 = t1550 * t2384;
t669 = t1504 + (-t2573 / 0.2e1 + t2813) * t1838 + (-t2570 / 0.2e1 + t2814) * t1834;
t2206 = t322 * qJD(1) + t669 * qJD(2);
t2115 = t1156 * t2795 + t2773 * t903;
t369 = t2587 / 0.2e1 + t2115;
t2074 = t1391 * t2773 + t1552 * t2795;
t698 = t2552 / 0.2e1 + t2074;
t2205 = -qJD(1) * t369 - qJD(2) * t698;
t2114 = t1156 * t2793 + t2773 * t905;
t372 = t2371 + t2114;
t2071 = t1393 * t2773 + t1552 * t2793;
t701 = t2355 + t2071;
t2204 = -qJD(1) * t372 - qJD(2) * t701;
t1997 = t2536 / 0.2e1 + t1829 * t2281;
t2000 = -t2538 / 0.2e1 + t1829 * t2282;
t386 = (-t1168 / 0.2e1 + t2000) * t1839 + (t2832 + t1997) * t1835;
t1995 = t1552 * t2286 + t1669 * t2773;
t1998 = -t2537 / 0.2e1 + t1829 * t2280;
t779 = (t2801 + t1998) * t1839 + (t2803 + t1995) * t1835;
t2203 = t386 * qJD(1) + t779 * qJD(2);
t2059 = -t2513 / 0.2e1 + t2480 / 0.2e1;
t462 = t2059 + t2107;
t2057 = -t2506 / 0.2e1 + t2475 / 0.2e1;
t887 = t2057 + t2061;
t2202 = qJD(1) * t462 + qJD(2) * t887;
t2058 = -t2510 / 0.2e1 - t2483 / 0.2e1;
t463 = t2058 - t2116;
t2056 = -t2503 / 0.2e1 - t2477 / 0.2e1;
t889 = t2056 - t2075;
t2201 = qJD(1) * t463 + qJD(2) * t889;
t1994 = t1154 * t2348 + t2336 * t903;
t510 = t2595 / 0.2e1 + t1994;
t1990 = t1391 * t2336 + t1550 * t2348;
t939 = t2567 / 0.2e1 + t1990;
t2200 = qJD(1) * t510 + qJD(2) * t939;
t1993 = t1154 * t2347 + t2322 * t905;
t512 = -t2594 / 0.2e1 + t1993;
t1989 = t1393 * t2322 + t1550 * t2347;
t941 = -t2566 / 0.2e1 + t1989;
t2199 = qJD(1) * t512 + qJD(2) * t941;
t515 = (t2852 + t2365) * t1839 + (t2372 + t2820) * t1834;
t946 = (t2818 + t2323) * t1839 + (t2358 + t2797) * t1834;
t2198 = -qJD(1) * t515 - qJD(2) * t946;
t516 = t2267 - t1371 / 0.2e1 + (t2850 + t2341) * t1839;
t947 = t2800 + t1550 * t2328 + (t2505 / 0.2e1 + t2817) * t1839;
t2197 = -qJD(1) * t516 + qJD(2) * t947;
t2036 = t1154 * t2344 + t1389 * t2776;
t522 = t2578 / 0.2e1 + t2036;
t2035 = t1550 * t2344 + t1671 * t2776;
t968 = t2545 / 0.2e1 + t2035;
t2196 = -t522 * qJD(1) - t968 * qJD(2);
t705 = t1387 * t1669 - t1389 * t1671;
t813 = -t1389 ^ 2 + t2869;
t2195 = qJD(1) * t813 + qJD(2) * t705;
t2194 = -t1834 * t276 + t1838 * t277;
t2193 = -t1834 * t713 + t1838 * t714;
t2191 = -t1835 * t494 + t1839 * t495;
t2190 = t1829 * t2284;
t2189 = t1839 * t2286;
t2188 = t1834 * t2286;
t2187 = t1838 * t2287;
t1068 = -t1550 * t1630 + t1552 * t1629;
t1900 = t1154 * t2801 + t1156 * t2802 + t1167 * t2806 + t1168 * t2808;
t2062 = t1282 * t2774 + t1283 * t2775;
t330 = -t1900 + t2062;
t2186 = -qJD(1) * t330 + qJD(2) * t1068;
t2154 = t2464 + t2559;
t1085 = t2154 * t1669;
t378 = (-t1283 / 0.2e1 - t2082) * t1839 + (t2829 + t2081) * t1835;
t2185 = t378 * qJD(1) + t1085 * qJD(2);
t1170 = t1550 * t1671 - t1835 * t2867;
t1954 = t1154 * t2797 + t1387 * t1483 + t1389 * t2808;
t489 = t2320 + t1954;
t2184 = -qJD(1) * t489 + qJD(2) * t1170;
t1171 = t1552 * t1671 - t1839 * t2867;
t1956 = t1156 * t2796 - t1387 * t1486 + t1389 * t2806;
t491 = t2332 + t1956;
t2183 = -qJD(1) * t491 - qJD(2) * t1171;
t1176 = t2537 / 0.2e1 + t2461 / 0.2e1 + (t2430 / 0.2e1 + t1835 * t2345) * t1829;
t650 = t2538 / 0.2e1 + t2467 / 0.2e1 + (t2433 / 0.2e1 - t2492 / 0.2e1) * t1829;
t2182 = -t650 * qJD(1) - t1176 * qJD(2);
t1178 = -t1995 - t2246;
t652 = -t2536 / 0.2e1 + t2494 / 0.2e1 + (-t2432 / 0.2e1 + t2463 / 0.2e1) * t1829;
t2181 = -t652 * qJD(1) - t1178 * qJD(2);
t1181 = t1550 * t1723 - t1629 * t1669;
t1899 = t1154 * t2790 + t1167 * t2799 + t1362 * t2807 + t1387 * t2803;
t1999 = t1282 * t2287 + t1491 * t2776;
t388 = -t1899 + t1999;
t2180 = qJD(1) * t388 - qJD(2) * t1181;
t1182 = t1552 * t1723 - t1630 * t1669;
t1898 = t1156 * t2790 + t1168 * t2799 + t1362 * t2806 + t1387 * t2801;
t1996 = t1283 * t2287 + t1491 * t2774;
t389 = -t1898 + t1996;
t2179 = qJD(1) * t389 - qJD(2) * t1182;
t2033 = t1552 * t2344 + t1671 * t2774;
t1188 = -t2546 / 0.2e1 + t2033;
t2034 = t1156 * t2344 + t1389 * t2774;
t707 = -t2579 / 0.2e1 + t2034;
t2178 = -t707 * qJD(1) - t1188 * qJD(2);
t2177 = -qJD(1) * t752 - qJD(2) * t1255;
t2176 = qJD(1) * t756 + qJD(2) * t1259;
t1309 = -t1669 * t1725 + t1671 * t1723;
t1897 = t1362 * t2797 + t1363 * t2798 + t1387 * t2789 + t1389 * t2791;
t1984 = (-t2845 * t1492 / 0.2e1 + t1491 * t2765) * t1829;
t497 = t1984 + t1897;
t2175 = -qJD(1) * t497 + qJD(2) * t1309;
t1390 = -t1671 ^ 2 + t2867;
t2174 = qJD(1) * t705 + qJD(2) * t1390;
t1895 = t1671 * t2446 - t2239 * t2526 / 0.2e1;
t1928 = (-t2518 / 0.2e1 - t2165 / 0.2e1) * t1830;
t1413 = t1928 + t1895;
t1938 = t1829 * t1972;
t888 = t2805 - t2309 / 0.2e1 + (t2804 - t1938 / 0.2e1) * t1836;
t2173 = qJD(1) * t888 + qJD(2) * t1413;
t1890 = t1669 * t2446 + t2239 * t2286;
t1927 = (-t2424 / 0.2e1 + t1828 * t2259) * t1830;
t1414 = t1927 - t1890;
t1863 = t1387 * t2446 + t1972 * t2286;
t1966 = -t2429 / 0.2e1 - t2260 / 0.2e1;
t890 = -t1863 + t1966;
t2172 = t890 * qJD(1) + t1414 * qJD(2);
t1419 = t1669 * t2393 + t1723 * t2239;
t1860 = t1972 * t2790 + t2239 * t2823;
t2032 = t1387 * t2345 + t1587 * t2799;
t597 = -t2308 / 0.2e1 + (t1624 * t2457 + t2032) * t1829 + t1860;
t2171 = -qJD(1) * t597 - qJD(2) * t1419;
t1420 = t1671 * t2393 + t1725 * t2239;
t1859 = t1363 * t2902 + t1972 * t2789;
t2031 = t1389 * t2345 + t1587 * t2797;
t599 = -t2307 / 0.2e1 + (t1624 * t2765 + t2031) * t1829 + t1859;
t2170 = -qJD(1) * t599 - qJD(2) * t1420;
t1584 = t1749 * t2529 - t1750 * t2523;
t2079 = -t1587 * t1749 / 0.2e1 + t1750 * t2804;
t689 = t2788 + (-t1700 / 0.2e1 + t1338 * t2771 + t1337 * t2772) * t1830 + t2079;
t2169 = qJD(1) * t689 + qJD(2) * t1584;
t2167 = t2296 * t1835;
t2164 = qJD(1) * t1017 + qJD(2) * t1483;
t2163 = -qJD(1) * t1020 - qJD(2) * t1486;
t1076 = t1884 * t2771 + t2523 * t2804 + (t1587 - t1892) * t2345;
t1169 = (-t1587 * t1828 * t2746 + t1588 * t2314) * t1830 + (-t1587 * t2053 + t1588 * t2054) * t1831;
t2162 = qJD(1) * t1169 - qJD(2) * t1076;
t1763 = (t1828 ^ 2 + t1832 ^ 2) * t1821;
t2161 = qJD(1) * t1076 - qJD(2) * t1763;
t1380 = t1878 / 0.2e1 + (t1877 / 0.2e1 - t2050 / 0.2e1) * t1836;
t1658 = t1833 * t2344 + (t2425 / 0.2e1 + t1832 * t2259) * t1830;
t2160 = qJD(1) * t1380 + qJD(2) * t1658;
t2159 = t2470 - t2591;
t2158 = t2470 - t2560;
t2157 = -t1094 * t1835 + t1095 * t1839;
t2153 = -t1742 * t1834 + t1743 * t1838;
t2151 = t2750 / 0.2e1 - t2756 / 0.2e1;
t2149 = pkin(12) * t2851 - t2661 / 0.2e1;
t2146 = pkin(5) * t2842 - t2655 / 0.2e1;
t2145 = pkin(5) * t2840 + t2656 / 0.2e1;
t2142 = pkin(5) * t2815 - t2625 / 0.2e1;
t2141 = pkin(5) * t2813 + t2626 / 0.2e1;
t2138 = pkin(12) * t2817 - t2637 / 0.2e1;
t2136 = t2777 * t903 + t2778 * t905;
t2134 = -t2684 / 0.2e1 + t2672 / 0.2e1;
t2127 = t259 * t2769 + t260 * t2762;
t2123 = t2774 * t495 + t2775 * t494;
t2122 = t2762 * t697 + t2769 * t696;
t2121 = t2781 * t900 + t2782 * t899;
t2120 = t2762 * t900 + t2769 * t899;
t2113 = t1154 * t2782 + t194 * t2761;
t2111 = t1550 * t2782 + t2761 * t580;
t2110 = t1154 * t2780 + t195 * t2761;
t2108 = t1550 * t2780 + t2761 * t581;
t2106 = -t2678 / 0.2e1 + t2485 / 0.2e1;
t2092 = t1094 * t2775 + t1095 * t2774;
t2089 = t1168 * t2760 + t2370;
t2084 = t1495 * t2782 + t1496 * t2781;
t2083 = t1495 * t2769 + t1496 * t2762;
t2078 = t1630 * t2760 + t2354;
t2073 = t1679 * t2762 + t1680 * t2769;
t2066 = -t2542 / 0.2e1 + t2543 / 0.2e1;
t2065 = t1154 * t2777 + t1156 * t2780;
t2064 = t1550 * t2777 + t1552 * t2780;
t2063 = t1391 * t2777 + t1393 * t2778;
t2060 = t1757 * t2761 + t2349;
t2052 = qJD(4) * t2239;
t2051 = t1588 * t2238;
t2047 = t2239 * qJD(2);
t2046 = t2238 * qJD(1);
t2043 = (qJD(2) * t1491 + t1389 * qJD(4)) * t1387;
t2041 = t2749 / 0.2e1 + pkin(12) * t2834 + t2862;
t2040 = t2748 / 0.2e1 + pkin(12) * t2807 + t2848;
t2039 = -t1805 / 0.2e1 + t2151;
t2038 = -t2549 / 0.2e1 + t1757 * t2339;
t2037 = t1757 * t2329 + t2352;
t2026 = t2049 / 0.2e1;
t1384 = t2356 + t1783 / 0.2e1 + (t2026 - t2520 / 0.2e1) * t1832;
t2030 = -qJD(1) * t1384 + qJD(2) * t2389;
t1918 = t1587 * t2770 - t2049 * t2772;
t1385 = t1918 - t2317;
t2029 = qJD(1) * t1385 + qJD(2) * t2392;
t2028 = t1587 * t2046;
t2027 = qJD(1) * t2051;
t1881 = t2775 * t989 + t2784 * t581 + t2787 * t580 + t2792 * t697 + t2795 * t696;
t116 = (pkin(12) * t2803 + t2286 * t814) * t1835 + t1881 + t2084;
t1223 = -t1679 * t1731 + t1680 * t1732 + t1829 * t2288;
t1882 = t194 * t2787 + t195 * t2784 + t259 * t2795 + t260 * t2792 + t2775 * t455;
t26 = (pkin(12) * t2832 + t2286 * t323) * t1835 + t1882 + t2121;
t2025 = t26 * qJD(1) + t116 * qJD(2) + t1223 * qJD(3);
t1934 = pkin(5) * t2803 + pkin(13) * t2083;
t1973 = t2774 * t814 + t2793 * t714 + t2794 * t713;
t117 = (t2762 * t581 + t2768 * t580 + t2848) * t1757 + t1934 + t1973;
t1219 = (-t1679 * t1834 - t1680 * t1838 + t1758) * t1757;
t1940 = pkin(5) * t2832 + pkin(13) * t2120;
t1974 = t276 * t2794 + t277 * t2793 + t2774 * t323;
t23 = (t194 * t2768 + t195 * t2762 + t2862) * t1757 + t1940 + t1974;
t2024 = -t23 * qJD(1) - t117 * qJD(2) + t1219 * qJD(3);
t1543 = (t1758 * t2434 - t1836 * t2436 + t2288) * t1829;
t1933 = pkin(4) * t2791 + pkin(12) * t2078;
t289 = (t1229 * t2765 + t1325 * t2457 + t2283 * t925 + t2285 * t924) * t1829 + t1933 + t2092;
t1935 = pkin(4) * t2824 + pkin(12) * t2089;
t74 = (t2283 * t368 + t2285 * t367 + t2457 * t634 + t2765 * t589) * t1829 + t1935 + t2123;
t2023 = -t74 * qJD(1) - t289 * qJD(2) + t1543 * qJD(3);
t502 = t1154 * t1550 - t1552 * t1156;
t617 = -t1156 ^ 2 + t2870;
t2022 = qJD(1) * t617 + qJD(2) * t502 - qJD(4) * t2156;
t1781 = t1811 * t1834;
t393 = -t1834 * t2468 + (-t2514 / 0.2e1 + t2853 + t2365) * t1835;
t770 = -t1834 * t2464 + (-t2507 / 0.2e1 + t2819 + t2323) * t1835;
t2019 = qJD(1) * t393 + qJD(2) * t770 + qJD(4) * t1781;
t1782 = t1827 * t1838 - t2472;
t394 = -t2381 + (t2341 - t2484 / 0.2e1 + t2851) * t1835;
t768 = -t2380 + (-t2505 / 0.2e1 - t2478 / 0.2e1 + t2817) * t1835;
t2018 = -qJD(1) * t394 - qJD(2) * t768 - qJD(4) * t1782;
t1104 = -t1552 ^ 2 + t2868;
t2015 = qJD(1) * t502 + qJD(2) * t1104 - qJD(4) * t2154;
t2014 = -qJD(1) * t2156 - qJD(2) * t2154 + t2611;
t2008 = (qJD(5) * t1552 - t2613) * t1550;
t2005 = t2047 - qJD(4);
t245 = t2758 / 0.2e1 + (t1038 / 0.2e1 + t2755 / 0.2e1) * t1839 + (t2859 - t589 / 0.2e1) * t1835;
t685 = t2757 / 0.2e1 + (t1497 / 0.2e1 + t2754 / 0.2e1) * t1839 + (t2827 - t1229 / 0.2e1) * t1835;
t1992 = pkin(4) * t2496 + qJD(1) * t245 + qJD(2) * t685;
t1965 = pkin(4) * t2835 + pkin(12) * t2334 + t2417;
t246 = t1965 + t2413;
t1964 = pkin(4) * t2808 + pkin(12) * t2331 + t2368;
t686 = t1964 + t2318;
t1991 = pkin(4) * t2470 + qJD(1) * t246 + qJD(2) * t686;
t1145 = t2574 / 0.2e1 - t1936 / 0.2e1;
t1988 = t1145 * qJD(1) + t1549 * qJD(2) + t2496 / 0.2e1;
t1987 = t2049 * t2521;
t1979 = qJD(5) * t1380 + t2906;
t1978 = qJD(5) * t1658 + t2907;
t1970 = t1154 * t2779 + t1156 * t2782 + t194 * t2766;
t1969 = t1550 * t2779 + t1552 * t2782 + t2766 * t580;
t1968 = qJD(6) * t2767 + t2096;
t1398 = pkin(12) ^ 2 * t2488 - t1733 * t1742 + t1734 * t1743;
t1870 = (t1733 * t2769 + t1734 * t2763 + t2447) * t1757 + t1679 * t2779 + t1680 * t2777;
t827 = (pkin(5) * t2286 + pkin(12) * t2773) * t1835 + t2066 * pkin(13) + t1870;
t1855 = t194 * t2779 + t195 * t2777 + t2447 * t323 + t2448 * t368 + t276 * t2783 + t277 * t2780;
t1944 = pkin(13) * t2127 + t2866 * t455;
t9 = -t1855 + t1944;
t1854 = t2447 * t814 + t2448 * t925 + t2777 * t581 + t2779 * t580 + t2780 * t714 + t2783 * t713;
t1942 = pkin(5) * t2846 + pkin(13) * t2122;
t94 = -t1854 + t1942;
t1962 = -t9 * qJD(1) - t94 * qJD(2) + t827 * qJD(3) + t1398 * qJD(4);
t1961 = (t1834 * t2283 + t2486 / 0.2e1) * t1829;
t1960 = (t1838 * t2283 - t2499 / 0.2e1) * t1829;
t1958 = t2448 * t903 - t2113;
t1955 = t1391 * t2448 - t2111;
t1238 = (t2549 / 0.2e1 + t2785) * t1838 + (t2352 + t2786) * t1834;
t1317 = (t1742 * t1835 - t2541) * t1838 + (t1743 * t1835 + t2540) * t1834;
t15 = (pkin(13) * t2842 + t260 / 0.2e1 + t276 * t2766 + t2113) * t1838 + (t1014 * t2865 - t259 / 0.2e1 + t277 * t2766 - t2110) * t1834 + t2136;
t96 = (pkin(13) * t2815 + t697 / 0.2e1 + t713 * t2766 + t2111) * t1838 + (pkin(13) * t2812 - t696 / 0.2e1 + t714 * t2766 - t2108) * t1834 + t2063;
t1953 = -t15 * qJD(1) - t96 * qJD(2) + t1238 * qJD(3) - t1317 * qJD(4);
t339 = t1391 * t903 - t1393 * t905;
t423 = (t2630 - t2680) * t1835;
t438 = t903 ^ 2 - t905 ^ 2;
t1952 = qJD(1) * t438 + qJD(2) * t339 - qJD(4) * t423 - qJD(5) * t2192;
t788 = (-t2508 + t2571) * t1835;
t830 = t1391 ^ 2 - t1393 ^ 2;
t1951 = qJD(1) * t339 + qJD(2) * t830 - qJD(4) * t788 - qJD(5) * t2155;
t1291 = (t2188 + t2792 - t2474 / 0.2e1) * t1835;
t144 = (-t714 / 0.2e1 + t2138) * t1839 + (t1838 * t2040 + t2860) * t1835 + t2064 + t2141;
t1548 = t1743 * t1839 + (-t1734 + 0.2e1 * t2451) * t1835;
t46 = (-t277 / 0.2e1 + t2149) * t1839 + (t1838 * t2041 + t2864) * t1835 + t2065 + t2145;
t1949 = -t46 * qJD(1) - t144 * qJD(2) - t1291 * qJD(3) + t1548 * qJD(4);
t1292 = (t2187 + t2794 - t2502 / 0.2e1) * t1835;
t143 = (t713 / 0.2e1 + pkin(12) * t2819) * t1839 + (t1835 * t2040 + t2761 * t814) * t1834 + t1969 + t2142;
t1547 = t1733 * t1835 + (t1742 - 0.2e1 * t1817) * t1839;
t45 = (t276 / 0.2e1 + pkin(12) * t2853) * t1839 + (t1835 * t2041 + t2761 * t323) * t1834 + t1970 + t2146;
t1948 = -t45 * qJD(1) - t143 * qJD(2) - t1292 * qJD(3) - t1547 * qJD(4);
t1436 = t1961 + t2037;
t1668 = -pkin(12) * t2472 - t2540;
t263 = t1835 * t2138 + t2106 + t2108;
t70 = t1835 * t2149 + t2110 + t2134;
t1947 = qJD(1) * t70 + qJD(2) * t263 + qJD(3) * t1436 + qJD(4) * t1668;
t1437 = t1960 - t2038;
t1667 = -pkin(12) * t1825 * t1834 - t2541;
t264 = t2419 + (-t1100 / 0.2e1 + t814 * t2766) * t1834 + t1955;
t71 = t2421 + (-t496 / 0.2e1 + t323 * t2766) * t1834 + t1958;
t1946 = qJD(1) * t71 + qJD(2) * t264 + qJD(3) * t1437 - qJD(4) * t1667;
t1941 = (qJD(2) * t1282 + qJD(5) * t1156 - t2615) * t1154;
t1939 = qJD(4) * t1972;
t1937 = t1972 * qJD(1);
t107 = t1834 * t2265 + t1838 * t2442 + t2456;
t1677 = t2039 * t1834;
t416 = t1834 * t2258 + t1838 * t2440 + t2450;
t1932 = pkin(5) * t2602 - qJD(1) * t107 - qJD(2) * t416 + qJD(4) * t1677;
t109 = t1834 * t2442 - t1838 * t2265 + t2455;
t1678 = t2039 * t1838;
t418 = t1834 * t2440 - t1838 * t2258 + t2449;
t1931 = pkin(5) * t2604 - qJD(1) * t109 - qJD(2) * t418 - qJD(4) * t1678;
t1924 = qJD(6) * t1145 + t2927;
t1921 = qJD(6) * t1549 + t2926;
t1909 = t1937 - qJD(4);
t1780 = t1810 * t1825;
t1902 = qJD(1) * t423 + qJD(2) * t788 + qJD(4) * t1780 + 0.2e1 * t2278;
t1901 = qJD(1) * t2192 + qJD(2) * t2155 + t2248 - t2605;
t1885 = t1724 * t1892;
t1875 = t2458 * t1891;
t1871 = qJD(1) * t1875;
t1819 = t2603 / 0.2e1;
t1800 = t1829 * pkin(12) * t2427;
t1797 = qJD(1) * t2394;
t1788 = -0.2e1 * qJD(6) * t2384;
t1652 = t1658 * qJD(4);
t1651 = t1817 + t2473 / 0.2e1 + t2151 * t1838;
t1650 = t2453 - t2501 / 0.2e1 - t2151 * t1834;
t1604 = t1616 * qJD(2);
t1439 = t1961 - t2037;
t1438 = t1960 + t2038;
t1416 = t1928 - t1895;
t1415 = t1927 + t1890;
t1386 = -t1918 - t2317;
t1383 = t1832 * t2026 + t2356 + t2386 / 0.2e1 - t1783 / 0.2e1;
t1294 = t1680 * t2767 + t1758 * t2328 + t1835 * t2188;
t1293 = t1679 * t2767 + t1758 * t2338 + t1835 * t2187;
t1239 = t1839 * t2073 - t2066;
t1187 = t2546 / 0.2e1 + t2033;
t1179 = -t1995 + t2246;
t1177 = -t2461 / 0.2e1 - t2274 / 0.2e1 - t1998;
t1101 = qJD(2) * t1481 + qJD(4) * t1380;
t1086 = t2154 * qJD(5);
t1071 = t1076 * qJD(3);
t969 = -t2545 / 0.2e1 + t2035;
t948 = t1669 * t2336 + t2800 + t2886;
t945 = t1838 * t2319 + t2504 / 0.2e1 + t2884;
t940 = t2359 + t1989;
t938 = t2360 + t1990;
t894 = t2057 - t2061;
t893 = t2056 + t2075;
t892 = t2309 / 0.2e1 - t1938 * t2765 - t2487 / 0.2e1 + t2805;
t891 = t1863 + t1966;
t847 = t1857 - t1481;
t844 = t2437 / 0.2e1 + t1858 + t1950 * t2764;
t826 = pkin(12) * t2349 + t2542 * t2865 - pkin(13) * t2543 / 0.2e1 + t1829 * pkin(5) * t2285 + t1870;
t802 = t2155 * qJD(6);
t783 = t788 * qJD(6);
t778 = (t1552 * t2284 + t1839 * t2280) * t1829 + t2060 * t1669 + t2078;
t771 = t1552 * t2328 + t1834 * t2331 + t2362 + t2380;
t769 = t1391 * t2767 + t1669 * t2329 + (-t2464 - t2559 / 0.2e1) * t1834;
t712 = t1277 * qJD(2) + qJD(4) * t2334 + t1145 * qJD(5);
t706 = t2579 / 0.2e1 + t2034;
t702 = t705 * qJD(4);
t700 = t2553 / 0.2e1 + t2071;
t699 = t2353 + t2074;
t690 = t1338 * t2523 / 0.2e1 + t1337 * t2346 - t2524 / 0.2e1 + t2788 - t2079;
t688 = -t2757 / 0.2e1 + t2586 / 0.2e1 + pkin(12) * t2319 + t2495 / 0.2e1 + t2465 / 0.2e1;
t687 = -t1964 + t2318;
t668 = t1474 * t2769 + t1475 * t2762 + t1839 * t2055 + t1504;
t653 = -t2494 / 0.2e1 + t1839 * t2357 - t1997;
t651 = -t2467 / 0.2e1 + t2382 / 0.2e1 - t2000;
t645 = t2561 / 0.2e1 + t1629 * t2328 + t2001 * t1835 + t2067;
t644 = -t2562 / 0.2e1 + t1629 * t2338 + t2002 * t1835 + t2069;
t638 = -t2081 - t1277;
t637 = t2082 + t2085;
t626 = t2366 - t2010;
t610 = t2156 * qJD(5);
t598 = t2307 / 0.2e1 + t1624 * t2344 + t2031 * t1829 + t1859;
t596 = t2308 / 0.2e1 + t1624 * t2287 + t2032 * t1829 + t1860;
t555 = (t2363 + t2479 / 0.2e1) * t1757 - t2073 * t1550 + t2083;
t526 = t2012 + t1896;
t523 = -t2578 / 0.2e1 + t2036;
t517 = t1387 * t2336 + t1371 / 0.2e1 + t2885;
t514 = t1838 * t2321 + t2575 / 0.2e1 + t2883;
t511 = t2378 + t1993;
t509 = t2379 + t1994;
t501 = t502 * qJD(5);
t498 = t1984 - t1897;
t490 = t2493 / 0.2e1 + t1956;
t488 = t2466 / 0.2e1 + t1954;
t465 = t2059 - t2107;
t464 = t2058 + t2116;
t454 = -t2117 + t2247;
t451 = -t2088 - t2105;
t444 = t2374 - t2016;
t442 = t2377 - t2017;
t426 = t2192 * qJD(6);
t422 = t423 * qJD(6);
t419 = pkin(13) * t2324 + t2449 + t2638 / 0.2e1 + t2679 / 0.2e1 + t2481 / 0.2e1;
t417 = pkin(13) * t2340 + t2450 + t2637 / 0.2e1 + t2668 / 0.2e1 - t2511 / 0.2e1;
t415 = t2270 + t2118;
t414 = t2271 + t2119;
t395 = t1156 * t2328 + t1834 * t2334 + t2381 + t2415;
t392 = t903 * t2767 + t1387 * t2329 + (-t2468 - t2590 / 0.2e1) * t1834;
t391 = t1898 + t1996;
t390 = t1899 + t1999;
t385 = (t1835 * t2281 + t1839 * t2282) * t1829 + t2060 * t1387 + t2089;
t377 = t2335 + t1283 * t2760 + (t2468 / 0.2e1 + t2590 / 0.2e1) * t1669 + (t2559 / 0.2e1 + t2464 / 0.2e1) * t1387;
t371 = t2588 / 0.2e1 + t2114;
t370 = t2369 + t2115;
t338 = t339 * qJD(6);
t331 = t1900 + t2062;
t321 = t1013 * t2769 + t1014 * t2762 - t1839 * t2131 + t1105;
t311 = t2512 / 0.2e1 + t1959;
t309 = t2325 + t1957;
t295 = t2633 / 0.2e1 + t1167 * t2328 + t2003 * t1835 + t2068;
t294 = -t2634 / 0.2e1 + t1167 * t2338 + t2004 * t1835 + t2070;
t290 = t1229 * t2344 + t1325 * t2287 + t2189 * t925 + t2190 * t924 + t1933 - t2092;
t283 = t1393 * t2334 + t1835 * t2325 + t2331 * t905 - t2093 + t2373;
t282 = t1391 * t2333 + t1834 * t2335 + t2330 * t903 - t2094 + t2376;
t266 = pkin(12) * t2362 + t2328 * t814 + t2106 - t2108;
t265 = t814 * t2339 + t2419 - t2515 / 0.2e1 - t1955;
t252 = t1905 + t2072;
t250 = t1906 + t2076;
t248 = -t2758 / 0.2e1 + t2649 / 0.2e1 + pkin(12) * t2321 + t2677 / 0.2e1 + t2469 / 0.2e1;
t247 = -t1965 + t2413;
t241 = (-t2631 / 0.2e1 + t2420) * t1757 - t2073 * t1154 + t2120;
t237 = -t1850 + t1894;
t236 = -t1851 + t2245;
t213 = t1062 * t2769 + t1063 * t2762 - t1154 * t2055 + t1550 * t2131;
t212 = t2020 + t1903;
t208 = t2013 + t1908;
t200 = t1914 + t2077;
t146 = pkin(12) * t2886 + t1669 * t2294 + t2322 * t814 + t2328 * t925 + t2760 * t714 + t2767 * t581 - t2064 + t2141;
t145 = pkin(12) * t2884 + t1669 * t2295 + t2336 * t814 + t2338 * t925 + t2761 * t713 - t1969 + t2142;
t118 = t2350 * t581 + t2351 * t580 + t2775 * t925 + t1934 - t1973;
t115 = pkin(12) * t2354 + t2190 * t814 + t1881 - t2084;
t114 = t1525 * t2357 - t1904 + t2272 + (t2345 * t803 + t2042) * t1829;
t110 = pkin(13) * t2327 + t2455 + t2662 / 0.2e1 + t2686 / 0.2e1 + t2670 / 0.2e1;
t108 = pkin(13) * t2343 + t2456 + t2661 / 0.2e1 + t2675 / 0.2e1 - t2681 / 0.2e1;
t105 = t1912 + t2132;
t104 = -t1913 + t2441;
t97 = t1733 * t2324 + t713 * t2329 + t580 * t2322 + t1734 * t2340 + t714 * t2339 + t581 * t2337 + (t2359 + t2360) * pkin(13) - t2063 + t2122;
t95 = t1854 + t1942;
t80 = pkin(12) * t2320 + (t2417 - t495 / 0.2e1) * t1669 + (t2368 - t1095 / 0.2e1) * t1387 + t1910 - t2147;
t78 = pkin(12) * t2332 + (-t2649 / 0.2e1 + t494 / 0.2e1) * t1669 + (-t2586 / 0.2e1 + t1094 / 0.2e1) * t1387 + t1911 - t2148;
t75 = t2189 * t368 + t2190 * t367 + t2287 * t634 + t2344 * t589 + t1935 - t2123;
t73 = pkin(12) * t2415 + t2328 * t323 - t2110 + t2134;
t72 = t323 * t2339 + t2421 - t2683 / 0.2e1 - t1958;
t64 = t1862 + t1926;
t60 = -t1915 + t2135;
t59 = -t1916 + t2133;
t50 = t925 * t2333 + t368 * t2330 + t924 * t2321 + t367 * t2319 + (t2367 + t2366) * pkin(12) - t1907 + t2124;
t48 = pkin(12) * t2885 + t1387 * t2294 + t195 * t2767 + t2322 * t323 + t2328 * t368 + t2760 * t277 - t2065 + t2145;
t47 = pkin(12) * t2883 + t1387 * t2295 + t2336 * t323 + t2338 * t368 + t276 * t2761 - t1970 + t2146;
t44 = t1868 + t1943;
t30 = pkin(13) * t2326 + t2324 * t323 + t2327 * t814 - t1866 + t2143;
t29 = t752 * t2857 - t323 * t1255 / 0.2e1 + pkin(13) * t2342 - t1867 + t2144;
t25 = pkin(12) * t2370 + t2190 * t323 + t1882 - t2121;
t24 = t194 * t2351 + t195 * t2350 + t2775 * t368 + t1940 - t1974;
t20 = t1835 * t2139 + t195 * t2330 + t2333 * t581 - t1864 + t2109;
t19 = t1835 * t2140 + t194 * t2330 + t2333 * t580 - t1865 + t2112;
t16 = t1733 * t2327 + t276 * t2329 + t194 * t2322 + t1734 * t2343 + t277 * t2339 + t195 * t2337 + (t2378 + t2379) * pkin(13) + t2127 - t2136;
t14 = -t1869 + t1975;
t10 = t1855 + t1944;
t8 = t580 * t2327 + t194 * t2324 + t581 * t2343 + t195 * t2340 + (t2374 + t2377) * pkin(13) - t1917 + t2128;
t6 = -t1852 + t1886;
t4 = -t1873 + t1963;
t2 = t1872 + t1945;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2276, t1774 * qJD(2), qJD(2) * t2263, -t2276, -qJD(2) * t2264, 0, t1694 * qJD(2), -t1693 * qJD(2), 0, 0, qJD(2) * t1885, t1304 * qJD(2), t1421 * qJD(2), -qJD(2) * t1875, t1422 * qJD(2), -qJD(2) * t1987, -qJD(3) * t1587 * t2238 + t710 * qJD(2), t711 * qJD(2) + qJD(3) * t2051, qJD(2) * t612 + qJD(3) * t1169, qJD(2) * t608 + qJD(3) * t790 (qJD(2) * t1492 - t1387 * qJD(4)) * t1389, qJD(2) * t744 + qJD(4) * t813, t911 * qJD(2) + t1387 * t1939, t2043, t910 * qJD(2) + t1389 * t1939, t1972 * t1624 * qJD(2), qJD(2) * t209 - qJD(3) * t786 + qJD(4) * t383, qJD(2) * t210 - qJD(3) * t787 + qJD(4) * t382, qJD(2) * t169 + qJD(3) * t695, qJD(2) * t139 + qJD(3) * t242 (qJD(2) * t1283 - qJD(5) * t1154 - t2614) * t1156, qJD(2) * t553 + qJD(4) * t593 + qJD(5) * t617, qJD(2) * t649 + qJD(4) * t642 - t1154 * t2608, t1941, qJD(2) * t648 - qJD(4) * t641 - t1156 * t2608, t2043, qJD(2) * t98 + qJD(3) * t594 + qJD(4) * t100 + qJD(5) * t202, qJD(2) * t99 + qJD(3) * t595 + qJD(4) * t101 + qJD(5) * t201, qJD(2) * t85 + qJD(3) * t520 + qJD(4) * t91, qJD(2) * t81 + qJD(3) * t106 + qJD(4) * t84 (qJD(2) * t1063 + qJD(4) * t1014 - qJD(6) * t903 - t2692) * t905, qJD(2) * t384 + qJD(4) * t379 + qJD(5) * t408 + qJD(6) * t438, qJD(2) * t467 + qJD(4) * t469 + qJD(5) * t458 - t2600 * t903 (qJD(2) * t1062 + qJD(4) * t1013 + qJD(6) * t905 - t2693) * t903, qJD(2) * t466 + qJD(4) * t468 - qJD(5) * t457 - t2600 * t905, t1941, qJD(2) * t53 + qJD(3) * t410 + qJD(4) * t55 + qJD(5) * t51 + qJD(6) * t93, qJD(2) * t54 + qJD(3) * t411 + qJD(4) * t56 + qJD(5) * t52 + qJD(6) * t92, qJD(2) * t40 + qJD(3) * t345 + qJD(4) * t41 + qJD(5) * t42, qJD(2) * t31 + qJD(3) * t65 + qJD(4) * t34 + qJD(5) * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1797, t2532, t2237 * t2520, -t1797, -t2237 * t2521, 0, -qJD(2) * t1760 + t2547, qJD(2) * t1759 - t2548, 0, 0 (qJD(1) * t2387 + (qJD(1) * t1746 + t2525) * t1828) * t1724, t2580 + (t1832 * t1724 - t2303) * t2525, t2569 + (t1724 * t1833 + t1821 * t2388) * qJD(2), -qJD(2) * t2458 * t2523 - t1871, t2568 + (t1821 * t2387 - t1833 * t2458) * qJD(2) (-t2046 + t2617) * t2390, t1406 * t2617 + t2641 + t1386 * qJD(3) + (-pkin(2) * t2458 - t1565 * t1832 + t1749 * t2521) * t2525, -t1407 * t2617 + t2640 + t1383 * qJD(3) + (-pkin(2) * t1724 + t1565 * t1828 - t1750 * t2521) * t2525, t2645 + (-t1749 * t1724 - t1750 * t2458 + (-t1406 * t1828 + t1407 * t1832) * t1830) * qJD(2) - t1071, t2646 + (t1406 * t1749 + t1407 * t1750 - t1565 * t2759) * qJD(2) + t690 * qJD(3), -t2917 + (qJD(2) * t1671 + t2622) * t1492, t2639 + (-t1491 * t1671 - t1492 * t1669) * qJD(2) + t702, t2627 + (-t1492 * t2239 - t1624 * t1671) * qJD(2) + t844 * qJD(4), t2909, t2628 + (t1491 * t2239 + t1624 * t1669) * qJD(2) + t847 * qJD(4), -t2556 + (t1937 + t2047) * t1624, t2665 + (t1324 * t1624 + t1525 * t1491 + t951 * t1669 - t2239 * t721) * qJD(2) + t596 * qJD(3) + t237 * qJD(4), t2664 + (t1325 * t1624 + t1525 * t1492 + t951 * t1671 + t2239 * t722) * qJD(2) + t598 * qJD(3) + t236 * qJD(4), t2687 + (t1324 * t1492 - t1325 * t1491 - t1669 * t722 - t1671 * t721) * qJD(2) + t498 * qJD(3), t2688 + (-t1324 * t721 + t1325 * t722 + t1525 * t951) * qJD(2) + t114 * qJD(3), qJD(4) * t626 - t2915 + (t2618 + t2624) * t1283, t2650 + (-t1282 * t1552 - t1283 * t1550) * qJD(2) + t377 * qJD(4) + t501, t2642 + (t1283 * t1669 + t1491 * t1552) * qJD(2) + t490 * qJD(4) + t637 * qJD(5), t2911, t2643 + (-t1282 * t1669 - t1491 * t1550) * qJD(2) + t488 * qJD(4) + t638 * qJD(5), t2607 + t2909, t2725 + (t1229 * t1282 - t1491 * t924 + t1550 * t681 + t1669 * t439) * qJD(2) + t390 * qJD(3) + t78 * qJD(4) + t105 * qJD(5), t2724 + (t1229 * t1283 - t1491 * t925 + t1552 * t681 - t1669 * t440) * qJD(2) + t391 * qJD(3) + t80 * qJD(4) + t104 * qJD(5), t2727 + (-t1282 * t925 + t1283 * t924 - t1550 * t440 - t1552 * t439) * qJD(2) + t331 * qJD(3) + t50 * qJD(4), t2729 + (t1229 * t681 - t439 * t924 + t440 * t925) * qJD(2) + t64 * qJD(3) + t44 * qJD(4), qJD(4) * t415 + qJD(5) * t444 - t2921 + (t2619 + t2694) * t1063, t2659 + (-t1062 * t1393 - t1063 * t1391) * qJD(2) + t208 * qJD(4) + t213 * qJD(5) + t338, t2653 + (t1063 * t1550 + t1282 * t1393) * qJD(2) + t283 * qJD(4) + t311 * qJD(5) + t451 * qJD(6), qJD(4) * t414 + qJD(5) * t442 + t2921 + (t2620 + t2695) * t1062, t2654 + (-t1062 * t1550 - t1282 * t1391) * qJD(2) + t282 * qJD(4) + t309 * qJD(5) + t454 * qJD(6), t2599 + t2911, t2734 + (t1062 * t814 - t1282 * t580 + t1391 * t406 + t1550 * t232) * qJD(2) + t250 * qJD(3) + t19 * qJD(4) + t29 * qJD(5) + t60 * qJD(6), t2733 + (t1063 * t814 - t1282 * t581 + t1393 * t406 - t1550 * t233) * qJD(2) + t252 * qJD(3) + t20 * qJD(4) + t30 * qJD(5) + t59 * qJD(6), t2739 + (-t1062 * t581 + t1063 * t580 - t1391 * t233 - t1393 * t232) * qJD(2) + t200 * qJD(3) + t6 * qJD(4) + t8 * qJD(5), t2742 + (-t232 * t580 + t233 * t581 + t406 * t814) * qJD(2) + t14 * qJD(3) + t4 * qJD(4) + t2 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1386 * qJD(2) - t2028, t1383 * qJD(2) + t2027, t2162, qJD(2) * t690 + t2696, 0, 0, 0, 0, 0, 0, qJD(2) * t596 + qJD(4) * t892 - t2698, qJD(2) * t598 + qJD(4) * t891 - t2697, qJD(2) * t498 + t2699, t2663 + t114 * qJD(2) + (t1363 * t1836 - t2306 - t2431) * t2616, 0, 0, 0, 0, 0, 0, qJD(2) * t390 + qJD(4) * t523 + qJD(5) * t653 + t2707, qJD(2) * t391 + qJD(4) * t706 + qJD(5) * t651 + t2706, qJD(2) * t331 + qJD(4) * t385 + t2708, t2689 + t64 * qJD(2) + (t1168 * t1758 - t1829 * t2431 + t2589) * qJD(3) + t75 * qJD(4), 0, 0, 0, 0, 0, 0, qJD(2) * t250 + qJD(4) * t294 + qJD(5) * t370 + qJD(6) * t465 + t2718, qJD(2) * t252 + qJD(4) * t295 + qJD(5) * t371 + qJD(6) * t464 + t2717, qJD(2) * t200 + qJD(4) * t212 + qJD(5) * t241 + t2721, t2730 + t14 * qJD(2) + (-t1679 * t899 + t1680 * t900 + t2589) * qJD(3) + t25 * qJD(4) + t24 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2906, t2195, t844 * qJD(2) + t1387 * t1909, t2906, t847 * qJD(2) + t1389 * t1909, -t1604, qJD(2) * t237 + qJD(3) * t892 - qJD(4) * t634 + t2719, qJD(2) * t236 + qJD(3) * t891 + qJD(4) * t633 + t2720, 0, 0, qJD(2) * t626 + t2916 + (-t2496 - t2624) * t1020, t377 * qJD(2) - t1387 * t2611 + t2647 - t610, qJD(2) * t490 + t1389 * t2496 + t2700, t1017 * t2159 + t2925, qJD(2) * t488 + t1389 * t2470 - t2701, t1979, t2691 + t78 * qJD(2) + t523 * qJD(3) + (t1835 * t2256 - t1839 * t634) * qJD(4) + t248 * qJD(5), t2690 + t80 * qJD(2) + t706 * qJD(3) + (t1835 * t634 + t1839 * t2256) * qJD(4) + t247 * qJD(5), t50 * qJD(2) + t385 * qJD(3) + qJD(4) * t2191 + t2726, t2728 + t44 * qJD(2) + t75 * qJD(3) + (-pkin(4) * t634 + pkin(12) * t2191) * qJD(4), qJD(2) * t415 + qJD(5) * t511 - t2893 + (t2400 + t2694) * t1014, t2660 + t208 * qJD(2) + t321 * qJD(5) - t422 + (-t2594 - t2595) * t2496, t2651 + t283 * qJD(2) + (-t1014 * t1839 - t1387 * t2472) * qJD(4) + t395 * qJD(5) + t514 * qJD(6), qJD(2) * t414 + qJD(5) * t509 + t2893 + (t2401 + t2695) * t1013, t2652 + t282 * qJD(2) + (t1013 * t1839 + t1825 * t2509) * qJD(4) + t392 * qJD(5) + t517 * qJD(6) (t2844 + t2159) * t1017 + t2925, -t259 * t2470 + t2732 + t19 * qJD(2) + t294 * qJD(3) + t47 * qJD(5) + t73 * qJD(6) + (pkin(12) * t1013 + t1387 * t1733 + t2656) * t2496, t260 * t2470 + t2731 + t20 * qJD(2) + t295 * qJD(3) + t48 * qJD(5) + t72 * qJD(6) + (pkin(12) * t1014 + t1387 * t1734 + t2655) * t2496, t2738 + t6 * qJD(2) + t212 * qJD(3) + (-t1013 * t1734 + t1014 * t1733 + (-t1834 * t260 - t1838 * t259) * t1835) * qJD(4) + t16 * qJD(5), t2740 + t4 * qJD(2) + t25 * qJD(3) + (-t1733 * t259 + t1734 * t260 + t2753 * t455) * qJD(4) + t10 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2927, t2022, qJD(2) * t637 + t1154 * t2300, t2927, qJD(2) * t638 + t1156 * t2300, t1101, qJD(2) * t105 + qJD(3) * t653 + qJD(4) * t248 - qJD(5) * t368 + t2722, qJD(2) * t104 + qJD(3) * t651 + qJD(4) * t247 + qJD(5) * t367 + t2723, 0, 0, qJD(2) * t444 + qJD(4) * t511 - t2920 + (-t2604 - t2694) * t756, t213 * qJD(2) + t321 * qJD(4) - t1154 * t2605 + t2657 - t426, qJD(2) * t311 + qJD(4) * t395 + qJD(5) * t2514 + t2709, qJD(2) * t442 + qJD(4) * t509 + t2920 + (t2602 - t2695) * t752, qJD(2) * t309 + qJD(4) * t392 + qJD(5) * t2484 - t2710, t1924, t2736 + t29 * qJD(2) + t370 * qJD(3) + t47 * qJD(4) + (t1834 * t2254 - t368 * t1838) * qJD(5) + t110 * qJD(6), t2735 + t30 * qJD(2) + t371 * qJD(3) + t48 * qJD(4) + (t368 * t1834 + t1838 * t2254) * qJD(5) + t108 * qJD(6), t8 * qJD(2) + t241 * qJD(3) + t16 * qJD(4) + qJD(5) * t2194 + t2737, t2741 + t2 * qJD(2) + t24 * qJD(3) + t10 * qJD(4) + (-pkin(5) * t368 + pkin(13) * t2194) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2905, t1952, qJD(2) * t451 + qJD(4) * t514 + t2299 * t903, t2905, qJD(2) * t454 + qJD(4) * t517 + t2299 * t905, t712, qJD(2) * t60 + qJD(3) * t465 + qJD(4) * t73 + qJD(5) * t110 - qJD(6) * t195 + t2743, qJD(2) * t59 + qJD(3) * t464 + qJD(4) * t72 + qJD(5) * t108 + qJD(6) * t194 + t2744, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1797, -t2532, -qJD(1) * t2263, t1797, qJD(1) * t2264, 0, -t2547, t2548, 0, 0, -qJD(1) * t1885, -t2580, -t2569, t1871, -t2568, qJD(1) * t1987, -qJD(3) * t1385 - t2641, qJD(3) * t1384 - t2640, -t1071 - t2645, -qJD(3) * t689 - t2646, -t1492 * t2622 - t2917, t702 - t2639, qJD(4) * t845 - t2627, t2908, qJD(4) * t846 - t2628, -t1624 * t1937 + t2556, qJD(3) * t597 - qJD(4) * t234 - t2665, qJD(3) * t599 - qJD(4) * t235 - t2664, -qJD(3) * t497 - t2687, -qJD(3) * t113 - t2688, qJD(4) * t627 - t1283 * t2624 - t2915, qJD(4) * t378 - t2650 + t501, qJD(4) * t491 - qJD(5) * t636 - t2642, t2910, qJD(4) * t489 - qJD(5) * t635 - t2643, -t2607 + t2908, -qJD(3) * t388 + qJD(4) * t77 - qJD(5) * t102 - t2725, -qJD(3) * t389 + qJD(4) * t79 - qJD(5) * t103 - t2724, -qJD(3) * t330 - qJD(4) * t49 - t2727, -qJD(3) * t63 - qJD(4) * t43 - t2729, -qJD(4) * t413 + qJD(5) * t445 - t1063 * t2694 - t2921, -qJD(4) * t207 + qJD(5) * t214 - t2659 + t338, -qJD(4) * t281 + qJD(5) * t312 + qJD(6) * t452 - t2653, -qJD(4) * t412 + qJD(5) * t443 - t1062 * t2695 + t2921, -qJD(4) * t280 + qJD(5) * t310 + qJD(6) * t453 - t2654, -t2599 + t2910, -qJD(3) * t249 - qJD(4) * t17 - qJD(5) * t27 - qJD(6) * t57 - t2734, -qJD(3) * t251 - qJD(4) * t18 - qJD(5) * t28 - qJD(6) * t58 - t2733, -qJD(3) * t199 - qJD(4) * t5 - qJD(5) * t7 - t2739, -qJD(3) * t13 - qJD(4) * t3 - qJD(5) * t1 - t2742; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t2392, -qJD(3) * t2389, t1763 * qJD(3), -t1584 * qJD(3), -t2395, t1390 * qJD(4), t1669 * t2052, t2395, t1671 * t2052, 0, qJD(3) * t1419 + qJD(4) * t979, qJD(3) * t1420 + qJD(4) * t978, qJD(3) * t1309, qJD(3) * t761 (-qJD(5) * t1550 - t2612) * t1552, qJD(4) * t1085 + qJD(5) * t1104, qJD(4) * t1171 - t1550 * t2606, t2008, -qJD(4) * t1170 - t1552 * t2606, t2395, qJD(3) * t1181 + qJD(4) * t420 + qJD(5) * t629, qJD(3) * t1182 + qJD(4) * t421 + qJD(5) * t628, qJD(3) * t1068 + qJD(4) * t350, qJD(3) * t459 + qJD(4) * t328 (qJD(4) * t1475 - qJD(6) * t1391 - t2609) * t1393, qJD(4) * t743 + qJD(5) * t782 + qJD(6) * t830, qJD(4) * t927 + qJD(5) * t898 - t1391 * t2598 (qJD(4) * t1474 + qJD(6) * t1393 - t2610) * t1391, qJD(4) * t926 - qJD(5) * t897 - t1393 * t2598, t2008, qJD(3) * t928 + qJD(4) * t205 + qJD(5) * t203 + qJD(6) * t374, qJD(3) * t929 + qJD(4) * t206 + qJD(5) * t204 + qJD(6) * t373, qJD(3) * t762 + qJD(4) * t140 + qJD(5) * t142, qJD(3) * t219 + qJD(4) * t129 + qJD(5) * t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2029, -t2030, -t2161, -t2169, 0, 0, 0, 0, 0, 0, qJD(4) * t1416 - t2171, qJD(4) * t1415 - t2170, t2175 (t1725 * t1836 + t1828 * t2315 - t2428) * t2616 + t2222, 0, 0, 0, 0, 0, 0, qJD(4) * t969 + qJD(5) * t1179 - t2180, qJD(4) * t1187 + qJD(5) * t1177 - t2179, qJD(4) * t778 + t2186 (t1630 * t1758 - t1829 * t2428 + t2554) * qJD(3) + t290 * qJD(4) + t2225, 0, 0, 0, 0, 0, 0, qJD(4) * t644 + qJD(5) * t699 + qJD(6) * t894 - t2214, qJD(4) * t645 + qJD(5) * t700 + qJD(6) * t893 + t2213, qJD(4) * t526 + qJD(5) * t555 - t2221 (-t1495 * t1679 + t1496 * t1680 + t2554) * qJD(3) + t115 * qJD(4) + t118 * qJD(5) + t2236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2907, t2174, t1669 * t2005 + t2636, t2907, t1671 * t2005 + t2635, t2557, qJD(3) * t1416 - qJD(4) * t1325 - t2217, qJD(3) * t1415 + qJD(4) * t1324 - t2216, 0, 0, t2704 + t2918 + (-t2496 - t2618) * t1486, -t1669 * t2611 - t1086 + t2185, t1671 * t2496 - t2183, t1483 * t2158 + t2922, qJD(4) * t2462 - t2184, t1978, t969 * qJD(3) + (-t1325 * t1839 + t1835 * t2255) * qJD(4) + t688 * qJD(5) + t2227, t1187 * qJD(3) + (t1325 * t1835 + t1839 * t2255) * qJD(4) + t687 * qJD(5) + t2226, t778 * qJD(3) + qJD(4) * t2157 + t2230, t290 * qJD(3) + (-pkin(4) * t1325 + pkin(12) * t2157) * qJD(4) + t2231, -t2715 + qJD(5) * t940 + t2894 + (t2400 + t2619) * t1475, t668 * qJD(5) - t783 + (-t2566 - t2567) * t2496 + t2220 (-t1475 * t1839 - t1669 * t2472) * qJD(4) + t771 * qJD(5) + t945 * qJD(6) + t2211, -t2716 + qJD(5) * t938 - t2894 + (t2401 + t2620) * t1474 (t1474 * t1839 + t1825 * t2505) * qJD(4) + t769 * qJD(5) + t948 * qJD(6) + t2212 (t2844 + t2158) * t1483 + t2922, -t696 * t2470 + t644 * qJD(3) + t145 * qJD(5) + t266 * qJD(6) + (pkin(12) * t1474 + t1669 * t1733 + t2626) * t2496 + t2235, t697 * t2470 + t645 * qJD(3) + t146 * qJD(5) + t265 * qJD(6) + (pkin(12) * t1475 + t1669 * t1734 + t2625) * t2496 + t2234, t526 * qJD(3) + (-t1474 * t1734 + t1475 * t1733 + (-t1834 * t697 - t1838 * t696) * t1835) * qJD(4) + t97 * qJD(5) + t2242, t115 * qJD(3) + (-t1733 * t696 + t1734 * t697 + t2753 * t989) * qJD(4) + t95 * qJD(5) + t2243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2926, t2015, t1550 * t2298 - t2702, t2926, t1552 * t2298 - t2703, t1652 - t2621, qJD(3) * t1179 + qJD(4) * t688 - qJD(5) * t925 - t2224, qJD(3) * t1177 + qJD(4) * t687 + qJD(5) * t924 - t2223, 0, 0, t2713 + qJD(4) * t940 + t2919 + (-t2604 - t2619) * t1259, t668 * qJD(4) - t1550 * t2605 + t2218 - t802, qJD(4) * t771 + qJD(5) * t2507 - t2207, t2714 + qJD(4) * t938 - t2919 + (t2602 - t2620) * t1255, qJD(4) * t769 + qJD(5) * t2478 - t2208, t1921, t699 * qJD(3) + t145 * qJD(4) + (t1834 * t2253 - t925 * t1838) * qJD(5) + t419 * qJD(6) + t2233, t700 * qJD(3) + t146 * qJD(4) + (t925 * t1834 + t1838 * t2253) * qJD(5) + t417 * qJD(6) + t2232, t555 * qJD(3) + t97 * qJD(4) + qJD(5) * t2193 + t2241, t118 * qJD(3) + t95 * qJD(4) + (-pkin(5) * t925 + pkin(13) * t2193) * qJD(5) + t2244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2904, t1951, qJD(4) * t945 + t1391 * t2297 + t2712, t2904, qJD(4) * t948 + t1393 * t2297 + t2711, t2459 - t2623, qJD(3) * t894 + qJD(4) * t266 + qJD(5) * t419 - qJD(6) * t581 - t2228, qJD(3) * t893 + qJD(4) * t265 + qJD(5) * t417 + qJD(6) * t580 - t2229, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1385 * qJD(2) + t2028, -t1384 * qJD(2) - t2027, -t2162, qJD(2) * t689 - t2696, 0, 0, 0, 0, 0, 0, -qJD(2) * t597 - qJD(4) * t888 + t2698, -qJD(2) * t599 - qJD(4) * t890 + t2697, qJD(2) * t497 - t2699, qJD(2) * t113 - t2663, 0, 0, 0, 0, 0, 0, qJD(2) * t388 + qJD(4) * t522 + qJD(5) * t652 - t2707, qJD(2) * t389 + qJD(4) * t707 + qJD(5) * t650 - t2706, qJD(2) * t330 + qJD(4) * t386 - t2708, qJD(2) * t63 - qJD(4) * t74 - t2689, 0, 0, 0, 0, 0, 0, qJD(2) * t249 + qJD(4) * t293 + qJD(5) * t369 - qJD(6) * t462 - t2718, qJD(2) * t251 + qJD(4) * t296 + qJD(5) * t372 - qJD(6) * t463 - t2717, qJD(2) * t199 - qJD(4) * t211 + qJD(5) * t240 - t2721, qJD(2) * t13 + qJD(4) * t26 - qJD(5) * t23 - t2730; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2029, t2030, t2161, t2169, 0, 0, 0, 0, 0, 0, -qJD(4) * t1413 + t2171, -qJD(4) * t1414 + t2170, -t2175, -t2222, 0, 0, 0, 0, 0, 0, qJD(4) * t968 + qJD(5) * t1178 + t2180, qJD(4) * t1188 + qJD(5) * t1176 + t2179, qJD(4) * t779 - t2186, -qJD(4) * t289 - t2225, 0, 0, 0, 0, 0, 0, qJD(4) * t643 + qJD(5) * t698 - qJD(6) * t887 + t2214, qJD(4) * t646 + qJD(5) * t701 - qJD(6) * t889 - t2213, -qJD(4) * t525 + qJD(5) * t554 + t2221, qJD(4) * t116 - qJD(5) * t117 - t2236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1543, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1223 + qJD(5) * t1219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t2526 - t2173, -t2291 - t2172, 0, 0, 0, 0, 0, 0, 0, 0 (-qJD(5) * t2435 - t1836 * t2470) * t1829 - t2196 (qJD(4) * t2490 - qJD(5) * t2434) * t1829 - t2178 (t2427 + t2426) * t1829 * qJD(4) + t2203 (t1800 + (-pkin(4) * t1836 + pkin(12) * t2426) * t1829) * qJD(4) + t2023, 0, 0, 0, 0, 0, 0 (-t1731 * t1839 + t1825 * t2290) * qJD(4) + t1293 * qJD(5) + t1439 * qJD(6) + t2210 (t1732 * t1839 + t1825 * t2289) * qJD(4) + t1294 * qJD(5) + t1438 * qJD(6) + t2209, t1239 * qJD(5) + (-t1731 * t1838 - t1732 * t1834) * t2496 + t2219 (-t1731 * t1733 + t1732 * t1734 + t1800) * qJD(4) + t826 * qJD(5) + t2025; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1758 * qJD(5) - t1835 * t2291 - t2181, t1757 * qJD(5) - t1839 * t2291 - t2182, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1293 - qJD(5) * t2474 + qJD(6) * t1613 - t2205, qJD(4) * t1294 + qJD(5) * t2502 + qJD(6) * t1614 - t2204, t1239 * qJD(4) + qJD(5) * t2301 + t2215, t826 * qJD(4) + (-pkin(5) * t1758 + pkin(13) * t2301) * qJD(5) + t2024; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1439 + qJD(5) * t1613 - qJD(6) * t1680 - t2202, qJD(4) * t1438 + qJD(5) * t1614 + qJD(6) * t1679 - t2201, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2906, -t2195, -t845 * qJD(2) - t1387 * t1937, -t2906, -t846 * qJD(2) - t1389 * t1937, -t1604, qJD(2) * t234 + qJD(3) * t888 - t2719, qJD(2) * t235 + qJD(3) * t890 - t2720, 0, 0, -qJD(2) * t627 + t1839 * t2410 + t2916, -qJD(2) * t378 - t2647 - t610, -qJD(2) * t491 + qJD(5) * t1020 - t2700, t1835 * t2397 + t2924, -qJD(2) * t489 - qJD(5) * t1017 + t2701, -t1979, -qJD(2) * t77 - qJD(3) * t522 - qJD(5) * t245 - t2691, -qJD(2) * t79 - qJD(3) * t707 - qJD(5) * t246 - t2690, qJD(2) * t49 - qJD(3) * t386 - t2726, qJD(2) * t43 + qJD(3) * t74 - t2728, qJD(2) * t413 + qJD(5) * t512 - t1014 * t2694 - t2893, qJD(2) * t207 + qJD(5) * t322 - t2660 - t422, qJD(2) * t281 - qJD(5) * t394 + qJD(6) * t515 - t2651, qJD(2) * t412 + qJD(5) * t510 - t1013 * t2695 + t2893, qJD(2) * t280 + qJD(5) * t393 + qJD(6) * t516 - t2652 (t2591 + t2843) * t1017 + t2924, qJD(2) * t17 - qJD(3) * t293 - qJD(5) * t45 - qJD(6) * t70 - t2732, qJD(2) * t18 - qJD(3) * t296 - qJD(5) * t46 - qJD(6) * t71 - t2731, qJD(2) * t5 + qJD(3) * t211 - qJD(5) * t15 - t2738, qJD(2) * t3 - qJD(3) * t26 - qJD(5) * t9 - t2740; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2907, -t2174, -t1669 * t2047 - t2636, -t2907, -t1671 * t2047 - t2635, -t2557, qJD(3) * t1413 + t2217, qJD(3) * t1414 + t2216, 0, 0, t1839 * t2403 - t2704 + t2918, -t1086 - t2185, qJD(5) * t1486 + t2183, t1835 * t2396 + t2923, -qJD(5) * t1483 + t2184, -t1978, -qJD(3) * t968 - qJD(5) * t685 - t2227, -qJD(3) * t1188 - qJD(5) * t686 - t2226, -qJD(3) * t779 - t2230, qJD(3) * t289 - t2231, qJD(5) * t941 - t1475 * t2619 + t2715 + t2894, qJD(5) * t669 - t2220 - t783, -qJD(5) * t768 + qJD(6) * t946 - t2211, qJD(5) * t939 - t1474 * t2620 + t2716 - t2894, qJD(5) * t770 - qJD(6) * t947 - t2212 (t2560 + t2843) * t1483 + t2923, -qJD(3) * t643 - qJD(5) * t143 - qJD(6) * t263 - t2235, -qJD(3) * t646 - qJD(5) * t144 - qJD(6) * t264 - t2234, qJD(3) * t525 - qJD(5) * t96 - t2242, -qJD(3) * t116 - qJD(5) * t94 - t2243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2173, t2172, 0, 0, 0, 0, 0, 0, 0, 0, t2196, t2178, -t2203, -t2023, 0, 0, 0, 0, 0, 0, -qJD(5) * t1292 - qJD(6) * t1436 - t2210, -qJD(5) * t1291 - qJD(6) * t1437 - t2209, qJD(5) * t1238 - t2219, qJD(5) * t827 - t2025; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2383, t1811 * qJD(5), 0, -t2383, 0, 0, -pkin(4) * t2603, -pkin(4) * t2601, 0, 0, t1826 * t2383 - t2277, -qJD(6) * t1780 - 0.2e1 * t1839 * t2278, -qJD(5) * t1782 + t1835 * t2399, t1824 * t2383 + t2277, qJD(5) * t1781 + t1835 * t2398, -t2383, -qJD(5) * t1547 - qJD(6) * t1668, qJD(5) * t1548 + qJD(6) * t1667, -qJD(5) * t1317, qJD(5) * t1398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2096, t2014, -t2163 + t2601, -t2096, -t2164 - t2603, -t2160, -pkin(12) * t2601 - t1992, pkin(12) * t2603 - t1991, 0, 0, -t2533 + (t1826 * t2496 + t1814) * t1839 + t2199, t1788 + (-0.2e1 * t2273 + t2605) * t1839 + t2206, qJD(5) * t2500 + t2018, t2533 + (t1824 * t2496 - t1814) * t1839 + t2200, qJD(5) * t2489 + t2019, -t1968 (t1834 * t2252 - t2451) * qJD(5) + t1651 * qJD(6) + t1948 (t1838 * t2252 + t2454) * qJD(5) + t1650 * qJD(6) + t1949, qJD(5) * t2153 + t1953 (-pkin(5) * t2747 + pkin(13) * t2153) * qJD(5) + t1962; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2912, -t1902, t1834 * t2167 - t2198, t2912, t1838 * t2167 - t2197, t1819 + t2898, qJD(5) * t1651 - qJD(6) * t1734 - t1947, qJD(5) * t1650 + qJD(6) * t1733 - t1946, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2927, -t2022, qJD(2) * t636 + t2397 - t2614, -t2927, qJD(2) * t635 + t2410 + t2615, t1101, qJD(2) * t102 - qJD(3) * t652 + qJD(4) * t245 - t2722, qJD(2) * t103 - qJD(3) * t650 + qJD(4) * t246 - t2723, 0, 0, -qJD(2) * t445 - qJD(4) * t512 + t1838 * t2422 - t2920, -qJD(2) * t214 - qJD(4) * t322 - t2657 - t426, -qJD(2) * t312 + qJD(4) * t394 + qJD(6) * t756 - t2709, -qJD(2) * t443 - qJD(4) * t510 + t1834 * t2423 + t2920, -qJD(2) * t310 - qJD(4) * t393 - qJD(6) * t752 + t2710, -t1924, qJD(2) * t27 - qJD(3) * t369 + qJD(4) * t45 + qJD(6) * t109 - t2736, qJD(2) * t28 - qJD(3) * t372 + qJD(4) * t46 + qJD(6) * t107 - t2735, qJD(2) * t7 - qJD(3) * t240 + qJD(4) * t15 - t2737, qJD(2) * t1 + qJD(3) * t23 + qJD(4) * t9 - t2741; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2926, -t2015, t2396 - t2612 + t2702, -t2926, t2403 + t2613 + t2703, t1652 + t2621, -qJD(3) * t1178 + qJD(4) * t685 + t2224, -qJD(3) * t1176 + qJD(4) * t686 + t2223, 0, 0, -qJD(4) * t941 + t1838 * t2405 - t2713 + t2919, -qJD(4) * t669 - t2218 - t802, qJD(4) * t768 + qJD(6) * t1259 + t2207, -qJD(4) * t939 + t1834 * t2406 - t2714 - t2919, -qJD(4) * t770 - qJD(6) * t1255 + t2208, -t1921, -qJD(3) * t698 + qJD(4) * t143 + qJD(6) * t418 - t2233, -qJD(3) * t701 + qJD(4) * t144 + qJD(6) * t416 - t2232, -qJD(3) * t554 + qJD(4) * t96 - t2241, qJD(3) * t117 + qJD(4) * t94 - t2244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2181, t2182, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1292 + t2205, qJD(4) * t1291 + t2204, -qJD(4) * t1238 - t2215, -qJD(4) * t827 - t2024; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2096, -t2014, t2163, t2096, t2164, t2160, t1992, t1991, 0, 0, -t1815 * t1826 - t2199 - t2533, t1839 * t2248 + t1788 - t2206, -t2018 - t2398, -t1815 * t1824 - t2200 + t2533, -t2019 + t2399, t1968, qJD(6) * t1678 - t1948, -qJD(6) * t1677 - t1949, -t1953, -t1962; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2385, t1810 * qJD(6), 0, -t2385, 0, 0, -pkin(5) * t2597, -pkin(5) * t2596, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2903, -t1901, -t1838 * t2296 + t2176, t2903, t1834 * t2296 + t2177, -t1988, -pkin(13) * t2596 - t1931, pkin(13) * t2597 - t1932, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2905, -t1952, -qJD(2) * t452 - qJD(4) * t515 + t2423 - t2692, -t2905, -qJD(2) * t453 - qJD(4) * t516 + t2422 + t2693, t712, qJD(2) * t57 + qJD(3) * t462 + qJD(4) * t70 - qJD(5) * t109 - t2743, qJD(2) * t58 + qJD(3) * t463 + qJD(4) * t71 - qJD(5) * t107 - t2744, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2904, -t1951, -qJD(4) * t946 + t2406 - t2609 - t2712, -t2904, qJD(4) * t947 + t2405 + t2610 - t2711, t2459 + t2623, qJD(3) * t887 + qJD(4) * t263 - qJD(5) * t418 + t2228, qJD(3) * t889 + qJD(4) * t264 - qJD(5) * t416 + t2229, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1436 + t2202, qJD(4) * t1437 + t2201, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2912, t1902 (-t2401 + t2602) * t1839 + t2198, -t2912 (-t2400 - t2604) * t1839 + t2197, t1819 - t2898, -qJD(5) * t1678 + t1947, qJD(5) * t1677 + t1946, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2903, t1901, t1838 * t2470 - t2176, -t2903, -t1834 * t2470 - t2177, t1988, t1931, t1932, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t11;
