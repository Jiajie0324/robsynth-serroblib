% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox (ehem. IRT-Maple-Toolbox)
% Datum: 2018-12-10 18:39
% Revision: bb42a8b95257d9bc83910d26e849f5825122f662 (2018-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRR14_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2018-12-10 18:32:49
% EndTime: 2018-12-10 18:38:19
% DurationCPUTime: 260.41s
% Computational Cost: add. (294315->2675), mult. (847948->3671), div. (0->0), fcn. (982084->16), ass. (0->1634)
t1838 = sin(qJ(5));
t1832 = sin(pkin(8));
t1834 = sin(pkin(6));
t1835 = cos(pkin(14));
t1831 = sin(pkin(14));
t1840 = sin(qJ(2));
t1836 = cos(pkin(7));
t1843 = cos(qJ(2));
t2526 = t1836 * t1843;
t2057 = -t1831 * t1840 + t1835 * t2526;
t1833 = sin(pkin(7));
t2753 = cos(pkin(6));
t2308 = t2753 * t1833;
t1898 = t1834 * t2057 + t1835 * t2308;
t2530 = t1834 * t1843;
t2238 = t1833 * t2530 - t1836 * t2753;
t2752 = cos(pkin(8));
t1974 = t1832 * t1898 + t2238 * t2752;
t1942 = t1838 * t1974;
t1839 = sin(qJ(4));
t1878 = t1898 * t2752;
t2053 = t1832 * t2238;
t1856 = t1878 - t2053;
t2527 = t1835 * t1840;
t2385 = t1834 * t2527;
t1750 = t1834 * t2526 + t2308;
t2551 = t1750 * t1831;
t1896 = t2385 + t2551;
t2856 = cos(qJ(4));
t1880 = t2856 * t1896;
t1389 = t1839 * t1856 + t1880;
t1842 = cos(qJ(5));
t2474 = t1842 * t1389;
t1157 = -t1942 + t2474;
t1155 = t1389 * t1838 + t1842 * t1974;
t2600 = t1155 * t1838;
t2766 = t1842 / 0.2e1;
t2059 = t1157 * t2766 - t2600 / 0.2e1;
t2533 = t1833 * t1835;
t2239 = t1832 * t2533 - t1836 * t2752;
t2052 = t1838 * t2239;
t2311 = t1839 * t2752;
t2429 = t2856 * t1831;
t2536 = t1832 * t1839;
t1673 = t1836 * t2536 + (t1835 * t2311 + t2429) * t1833;
t2467 = t1842 * t1673;
t1554 = -t2052 + t2467;
t2812 = t1554 / 0.2e1;
t1552 = t1673 * t1838 + t1842 * t2239;
t2814 = t1552 / 0.2e1;
t2092 = t1155 * t2812 + t1157 * t2814;
t2601 = t1155 * qJD(1);
t2935 = qJD(2) * t2092 - qJD(4) * t2059 + t1157 * t2601;
t2572 = t1552 * t1838;
t2058 = t1554 * t2766 - t2572 / 0.2e1;
t2573 = t1552 * qJD(2);
t2934 = qJD(1) * t2092 - qJD(4) * t2058 + t1554 * t2573;
t1387 = t1839 * t1896 - t1856 * t2856;
t2313 = t1833 * t2752;
t2260 = t1835 * t2313;
t2440 = t1832 * t2856;
t2541 = t1831 * t1833;
t1671 = -t1836 * t2440 + t1839 * t2541 - t2260 * t2856;
t2802 = t1671 / 0.2e1;
t2085 = t1155 * t2802 + t1387 * t2814;
t2013 = t2085 * t1838;
t2531 = t1834 * t1840;
t1788 = t2313 * t2531;
t2539 = t1831 * t1843;
t1726 = (t1836 * t2527 + t2539) * t1834;
t2538 = t1832 * t1726;
t1626 = -t1788 - t2538;
t1607 = t1842 * t1626;
t2387 = t1833 * t2531;
t2274 = t1832 * t2387;
t2303 = t2752 * t1726;
t1989 = t2274 - t2303;
t2389 = t1831 * t2531;
t1790 = t1836 * t2389;
t1728 = t1835 * t2530 - t1790;
t2432 = t2856 * t1728;
t1493 = t1839 * t1989 + t2432;
t2501 = t1838 * t1493;
t1282 = t1607 + t2501;
t2589 = t1282 * t1842;
t2366 = -t2589 / 0.2e1;
t1925 = t2366 - t2013;
t2925 = t2059 * qJD(5);
t2933 = t1925 * qJD(2) - t2925;
t1924 = t2589 / 0.2e1 - t2013;
t2932 = -t1924 * qJD(2) - t2925;
t2904 = t1924 * qJD(1);
t2926 = t2058 * qJD(5);
t2931 = -t2904 - t2926;
t2930 = t2904 - t2926;
t1837 = sin(qJ(6));
t2515 = t1837 * t1671;
t1841 = cos(qJ(6));
t2568 = t1554 * t1841;
t1393 = t2515 + t2568;
t2823 = t1393 / 0.2e1;
t2484 = t1841 * t1671;
t2570 = t1554 * t1837;
t1391 = -t2484 + t2570;
t2825 = t1391 / 0.2e1;
t2486 = t1841 * t1387;
t2598 = t1157 * t1837;
t902 = -t2486 + t2598;
t2520 = t1837 * t1387;
t2596 = t1157 * t1841;
t904 = t2520 + t2596;
t475 = t2823 * t902 + t2825 * t904;
t2929 = t475 * qJD(6);
t2636 = t904 * t1841;
t2687 = t1837 * t902;
t579 = -t2636 / 0.2e1 + t2687 / 0.2e1;
t2928 = t579 * qJD(6);
t2518 = t1837 * t1391;
t2581 = t1393 * t1841;
t1036 = -t2518 / 0.2e1 + t2581 / 0.2e1;
t2927 = t1036 * qJD(6);
t2800 = t1673 / 0.2e1;
t2089 = t1387 * t2800 + t1389 * t2802;
t2924 = t2089 * qJD(4);
t2923 = t2092 * qJD(5);
t2310 = t1840 * t2753;
t2292 = pkin(1) * t2310;
t1764 = pkin(10) * t2530 + t2292;
t1876 = qJ(3) * t1750 + t1764;
t1893 = pkin(11) * t1896;
t2140 = t2238 * pkin(3);
t2315 = qJ(3) * t1836 + pkin(10);
t2250 = t1834 * t2315;
t2309 = t1843 * t2753;
t2291 = pkin(1) * t2309;
t1701 = -t1840 * t2250 + t2291;
t2448 = t2753 * pkin(2);
t1894 = t2448 + t1701;
t2442 = -pkin(2) * t1843 - pkin(1);
t2532 = t1833 * t1840;
t2009 = (-qJ(3) * t2532 + t2442) * t1834;
t2894 = t1833 * t2009 + t1836 * t1894;
t1849 = -t1831 * t1876 + t1835 * t2894 - t1893 * t2752 - t2140;
t1892 = t1898 * pkin(3);
t1851 = -t1832 * t1893 - t1833 * t1894 + t1836 * t2009 - t1892;
t2922 = t1832 * t1851 + t2752 * t1849;
t2256 = (pkin(2) * t1835 + pkin(3)) * t1836;
t2441 = -pkin(3) * t1835 - pkin(2);
t2447 = t2752 * pkin(11);
t2537 = t1832 * t1833;
t2542 = t1831 * t1832;
t2921 = t2752 * (t2256 + (-t2447 - qJ(3)) * t2541) + (-pkin(11) * t2542 + t2441) * t2537;
t1827 = t1837 ^ 2;
t1829 = t1841 ^ 2;
t1766 = (t1827 / 0.2e1 - t1829 / 0.2e1) * t1838;
t1828 = t1838 ^ 2;
t2583 = t1391 * t1841;
t2362 = t2583 / 0.2e1;
t2582 = t1393 * t1837;
t2088 = t2582 / 0.2e1 + t2362;
t2015 = t2088 * t1838;
t2638 = t902 * t1841;
t2416 = t2638 / 0.2e1;
t2637 = t904 * t1837;
t2123 = t2416 + t2637 / 0.2e1;
t2023 = t2123 * t1838;
t2508 = t1837 * t1841;
t2920 = t1828 * qJD(4) * t2508 + qJD(1) * t2023 + qJD(2) * t2015 + t1766 * qJD(5);
t2919 = qJD(4) * t1925 + (t2573 + t2601) * t1282 + t2923;
t2918 = qJD(4) * t1924 - t1282 * t2601 + t2923;
t2278 = t2752 * t2856;
t1683 = t1726 * t2278;
t1765 = t2856 * t2274;
t2493 = t1839 * t1728;
t1492 = t1683 - t1765 + t2493;
t2561 = t1671 * qJD(2);
t2584 = t1387 * qJD(1);
t2917 = t2924 + (t2561 + t2584) * t1492;
t2916 = -t1492 * t2584 + t2924;
t2560 = t1671 * t1673;
t2915 = qJD(1) * t2089 + qJD(2) * t2560;
t2914 = qJD(2) * t2089 + t1389 * t2584;
t2701 = qJD(1) * t904;
t2913 = qJD(2) * t475 + qJD(4) * t2023 + qJD(5) * t579 + t902 * t2701;
t2626 = qJD(2) * t1393;
t2912 = qJD(1) * t475 + qJD(4) * t2015 - qJD(5) * t1036 + t1391 * t2626;
t2479 = t1842 * qJD(4);
t1818 = t1838 * t2479;
t2097 = qJD(1) * t2059 + qJD(2) * t2058 + t1818;
t1817 = qJD(5) * t2508;
t2911 = qJD(1) * t579 - qJD(2) * t1036 + t1766 * qJD(4) - t1817;
t2910 = t1831 / 0.2e1;
t2909 = t2239 / 0.2e1;
t2908 = pkin(11) * t1856;
t2049 = t1833 * t2238;
t2905 = t1838 * (t2584 / 0.2e1 + t2561 / 0.2e1);
t2901 = t2015 * qJD(6);
t2900 = t2023 * qJD(6);
t1824 = t1833 ^ 2;
t2895 = -t1836 ^ 2 - t1824;
t2010 = t2291 + t2448;
t2458 = pkin(10) * t2531;
t1930 = t2010 - t2458;
t2153 = -t1834 * pkin(1) - pkin(2) * t2530;
t2388 = t1831 * t2526;
t2529 = t1835 * t1836;
t802 = t2752 * (-t1833 * t1930 + t1836 * t2153 - t1892) + (-(-t1831 * t2308 + (t2527 * t2895 - t2388) * t1834) * qJ(3) + t1764 * t1831 - t1930 * t2529 - t2153 * t2533 + t2140) * t1832;
t2473 = t1842 * t1391;
t2322 = t2473 / 0.2e1;
t2510 = t1837 * t1838;
t2336 = -t2510 / 0.2e1;
t2893 = t1552 * t2336 + t2322;
t2673 = t1842 * t902;
t2892 = t1155 * t2336 + t2673 / 0.2e1;
t2251 = -pkin(5) * t1842 - pkin(13) * t1838;
t2168 = -pkin(4) + t2251;
t2507 = t1837 * t1842;
t2460 = pkin(12) * t2507;
t1737 = -t1841 * t2168 + t2460;
t2480 = t1841 * t1842;
t2457 = pkin(12) * t2480;
t1738 = t1837 * t2168 + t2457;
t2769 = -t1841 / 0.2e1;
t2773 = t1837 / 0.2e1;
t2891 = t1737 * t2769 + t1738 * t2773;
t1277 = t2501 / 0.2e1 + t1607 / 0.2e1;
t2886 = t2922 * t1839;
t1482 = t2493 / 0.2e1 + t1683 / 0.2e1 - t1765 / 0.2e1;
t2540 = t1831 * t1836;
t1754 = pkin(2) * t2540 + qJ(3) * t2533;
t1877 = (t1832 * t1836 + t2260) * pkin(11) + t1754;
t1325 = t1839 * t2921 + t2856 * t1877;
t2878 = t1155 ^ 2;
t2877 = t1387 ^ 2;
t2876 = t1552 ^ 2;
t2875 = t1671 ^ 2;
t2874 = -pkin(5) / 0.2e1;
t2253 = t1155 * pkin(5) - t1157 * pkin(13);
t1848 = t1831 * t2894 + t1835 * t1876 + t2908;
t633 = t1839 * t1848 - t2856 * t2922;
t589 = pkin(4) * t1974 + t633;
t1845 = t2253 + t589;
t2756 = t1387 * pkin(13);
t2255 = t1387 * pkin(4) - t1389 * pkin(12);
t1844 = t1848 * t2856 + t2886;
t590 = -pkin(12) * t1974 + t1844;
t368 = t1842 * t590 + (t2255 + t802) * t1838;
t324 = t368 + t2756;
t195 = t1837 * t1845 + t1841 * t324;
t2873 = -t195 / 0.2e1;
t367 = t1838 * t590 - t1842 * (-t1832 * t1849 + t1851 * t2752 + t2255);
t2682 = t1841 * t367;
t2759 = pkin(13) * t1155;
t766 = pkin(5) * t1157 + t2759;
t2688 = t1837 * t766;
t277 = -t2682 + t2688;
t2872 = t277 / 0.2e1;
t2871 = t368 / 0.2e1;
t1324 = t1839 * t1877 - t2856 * t2921;
t1229 = pkin(4) * t2239 + t1324;
t2252 = t1552 * pkin(5) - t1554 * pkin(13);
t1852 = t1229 + t2252;
t2755 = t1671 * pkin(13);
t1230 = -pkin(12) * t2239 + t1325;
t1753 = pkin(2) * t2529 - qJ(3) * t2541;
t2254 = t1671 * pkin(4) - t1673 * pkin(12);
t2765 = pkin(2) * t1833;
t927 = t1842 * t1230 + t1838 * (-t1832 * (t1836 * pkin(3) + t1753) + t2752 * (-pkin(3) * t2533 - t2765) + t2254);
t814 = t927 + t2755;
t581 = t1837 * t1852 + t1841 * t814;
t2870 = -t581 / 0.2e1;
t1887 = t1833 * t2442 + (-qJ(3) * t1824 - t1836 * t2315) * t1840;
t1969 = t1836 * t2010;
t1973 = qJ(3) * t2308 + t2292;
t2249 = t1843 * t2315;
t1338 = t1835 * t1973 + t1831 * t1969 + (t1831 * t1887 + t1835 * t2249) * t1834;
t634 = t2856 * (t1338 + t2908) + t2886;
t2869 = -t634 / 0.2e1;
t2758 = pkin(13) * t1552;
t1284 = pkin(5) * t1554 + t2758;
t2522 = t1837 * t1284;
t1526 = -t1832 * t2256 + (qJ(3) * t2542 + t2441 * t2752) * t1833;
t926 = t1230 * t1838 - t1842 * (t1526 + t2254);
t2676 = t1841 * t926;
t713 = t2522 - t2676;
t2868 = t713 / 0.2e1;
t813 = -pkin(5) * t1671 + t926;
t2867 = -t813 / 0.2e1;
t2248 = t2895 * t2531;
t1589 = t1835 * t2248 - t2551;
t1572 = t1589 * t2278;
t1590 = t1750 * t1835 + t1831 * t2248;
t2494 = t1839 * t1590;
t1362 = -t1572 + t2494;
t2487 = t1841 * t1362;
t2500 = t1838 * t1589;
t2381 = t1832 * t2500;
t2304 = t2752 * t1589;
t2259 = t1839 * t2304;
t2434 = t2856 * t1590;
t1363 = t2434 + t2259;
t2475 = t1842 * t1363;
t1169 = -t2381 + t2475;
t2524 = t1837 * t1169;
t898 = t2487 - t2524;
t2866 = t898 / 0.2e1;
t2490 = t1841 * t1169;
t2521 = t1837 * t1362;
t899 = t2490 + t2521;
t2865 = -t899 / 0.2e1;
t2864 = -t902 / 0.2e1;
t2863 = t902 / 0.2e1;
t2862 = -t904 / 0.2e1;
t2861 = t904 / 0.2e1;
t2860 = t926 / 0.2e1;
t2859 = -t927 / 0.2e1;
t2858 = t927 / 0.2e1;
t2761 = pkin(12) * t1671;
t1498 = pkin(4) * t1673 + t2761;
t2469 = t1842 * t1498;
t2505 = t1838 * t1324;
t1094 = t2469 + t2505;
t989 = -pkin(5) * t1673 - t1094;
t2857 = -t989 / 0.2e1;
t2855 = pkin(5) * t902;
t2854 = -qJD(6) / 0.2e1;
t2853 = qJD(6) / 0.2e1;
t1019 = t1842 * t1387;
t1371 = t1841 * t1389;
t1013 = -t1019 * t1837 - t1371;
t2852 = -t1013 / 0.2e1;
t2851 = t1013 / 0.2e1;
t2519 = t1837 * t1389;
t1014 = -t1019 * t1841 + t2519;
t2850 = -t1014 / 0.2e1;
t2849 = t1014 / 0.2e1;
t1477 = t1841 * t1492;
t2470 = t1842 * t1493;
t2499 = t1838 * t1626;
t1283 = t2470 - t2499;
t2523 = t1837 * t1283;
t1062 = -t1477 + t2523;
t2848 = -t1062 / 0.2e1;
t2847 = t1062 / 0.2e1;
t2489 = t1841 * t1283;
t2517 = t1837 * t1492;
t1063 = t2489 + t2517;
t2846 = -t1063 / 0.2e1;
t2845 = t1063 / 0.2e1;
t2844 = -t1155 / 0.2e1;
t2843 = t1155 / 0.2e1;
t2842 = -t1157 / 0.2e1;
t2841 = t1157 / 0.2e1;
t2468 = t1842 * t1589;
t2504 = t1838 * t1363;
t1168 = t1832 * t2468 + t2504;
t2840 = -t1168 / 0.2e1;
t2839 = t1229 / 0.2e1;
t2838 = -t1282 / 0.2e1;
t2837 = t1282 / 0.2e1;
t2836 = t1283 / 0.2e1;
t2835 = -t1325 / 0.2e1;
t2834 = t1325 / 0.2e1;
t2833 = -t1362 / 0.2e1;
t2832 = t1362 / 0.2e1;
t2831 = t1371 / 0.2e1;
t2830 = -t1387 / 0.2e1;
t2829 = t1387 / 0.2e1;
t2828 = -t1389 / 0.2e1;
t2827 = t1389 / 0.2e1;
t2826 = -t1391 / 0.2e1;
t2824 = -t1393 / 0.2e1;
t1486 = t1842 * t1671;
t1657 = t1841 * t1673;
t1475 = -t1486 * t1837 - t1657;
t2822 = -t1475 / 0.2e1;
t2821 = t1475 / 0.2e1;
t2514 = t1837 * t1673;
t1476 = -t1486 * t1841 + t2514;
t2820 = -t1476 / 0.2e1;
t2819 = t1476 / 0.2e1;
t2165 = t1831 * t2278;
t2528 = t1835 * t1839;
t1727 = (t2165 + t2528) * t1833;
t2483 = t1841 * t1727;
t2391 = t1831 * t2537;
t2273 = t1838 * t2391;
t2428 = t2856 * t1835;
t1729 = (-t1831 * t2311 + t2428) * t1833;
t2466 = t1842 * t1729;
t1632 = t2273 + t2466;
t2516 = t1837 * t1632;
t1496 = t2483 - t2516;
t2818 = t1496 / 0.2e1;
t2485 = t1841 * t1632;
t2513 = t1837 * t1727;
t1497 = t2485 + t2513;
t2817 = -t1497 / 0.2e1;
t2816 = -t1526 / 0.2e1;
t2815 = -t1552 / 0.2e1;
t2813 = -t1554 / 0.2e1;
t2811 = t1572 / 0.2e1;
t2810 = -t1589 / 0.2e1;
t2809 = t1589 / 0.2e1;
t2808 = -t1590 / 0.2e1;
t1787 = t1842 * t2391;
t2498 = t1838 * t1729;
t1631 = -t1787 + t2498;
t2807 = -t1631 / 0.2e1;
t2806 = t1631 / 0.2e1;
t2805 = -t1632 / 0.2e1;
t2804 = t1657 / 0.2e1;
t2803 = -t1671 / 0.2e1;
t2801 = -t1673 / 0.2e1;
t2288 = t1841 * t2440;
t1762 = t1838 * t2752 + t1842 * t2536;
t2512 = t1837 * t1762;
t1681 = t2288 + t2512;
t2799 = -t1681 / 0.2e1;
t2798 = t1681 / 0.2e1;
t2289 = t1837 * t2440;
t2482 = t1841 * t1762;
t1682 = -t2289 + t2482;
t2797 = -t1682 / 0.2e1;
t2796 = t1682 / 0.2e1;
t2795 = -t1727 / 0.2e1;
t2794 = t1727 / 0.2e1;
t2793 = t1729 / 0.2e1;
t1749 = (-qJ(3) * t1833 * t1843 + pkin(2) * t1840) * t1834;
t1730 = t1836 * t1749;
t2792 = t1730 / 0.2e1;
t2438 = t1842 * t2856;
t2492 = t1839 * t1841;
t1735 = (-t1837 * t2438 + t2492) * t1832;
t2791 = -t1735 / 0.2e1;
t2790 = t1735 / 0.2e1;
t2509 = t1837 * t1839;
t1736 = (t1841 * t2438 + t2509) * t1832;
t2789 = -t1736 / 0.2e1;
t2788 = t1736 / 0.2e1;
t2787 = -t1737 / 0.2e1;
t2786 = t1737 / 0.2e1;
t2785 = -t1738 / 0.2e1;
t2784 = t1738 / 0.2e1;
t1820 = pkin(12) * t2510;
t2757 = pkin(13) * t1842;
t2763 = pkin(5) * t1838;
t1808 = -t2757 + t2763;
t2481 = t1841 * t1808;
t1746 = t1820 + t2481;
t2783 = -t1746 / 0.2e1;
t2782 = t1746 / 0.2e1;
t2496 = t1838 * t1841;
t2459 = pkin(12) * t2496;
t2511 = t1837 * t1808;
t1747 = -t2459 + t2511;
t2781 = -t1747 / 0.2e1;
t2780 = t1747 / 0.2e1;
t2497 = t1838 * t1839;
t1761 = t1832 * t2497 - t1842 * t2752;
t2779 = -t1761 / 0.2e1;
t2778 = t1761 / 0.2e1;
t2777 = -t1762 / 0.2e1;
t2776 = t1762 / 0.2e1;
t2775 = -t1835 / 0.2e1;
t2774 = -t1837 / 0.2e1;
t2772 = -t1838 / 0.2e1;
t2771 = t1838 / 0.2e1;
t2770 = -t1839 / 0.2e1;
t2768 = t1841 / 0.2e1;
t2767 = -t1842 / 0.2e1;
t2764 = pkin(5) * t1391;
t2762 = pkin(12) * t1387;
t2760 = pkin(12) * t1838;
t2754 = t1842 * pkin(12);
t194 = t1837 * t324 - t1841 * t1845;
t323 = -pkin(5) * t1387 + t367;
t92 = t1155 * t194 - t323 * t902;
t2751 = qJD(1) * t92;
t93 = -t1155 * t195 + t323 * t904;
t2750 = qJD(1) * t93;
t1702 = -t1843 * t2250 - t2292;
t1408 = t1835 * t1701 + t1702 * t2540 + t1749 * t2541;
t1222 = pkin(11) * t1989 + t1408;
t1217 = t1839 * t1222;
t2534 = t1833 * t1702;
t1567 = t1730 - t2534;
t1341 = -pkin(11) * t1728 * t1832 + pkin(3) * t1726 + t1567;
t1407 = -t1831 * t1701 + t1702 * t2529 + t1749 * t2533;
t1228 = pkin(3) * t2387 - t1728 * t2447 + t1407;
t2166 = t1228 * t2278;
t720 = t1341 * t2440 - t1217 + t2166;
t680 = t1626 * pkin(4) - t720;
t513 = t1282 * pkin(5) - t1283 * pkin(13) + t680;
t2678 = t1841 * t513;
t1216 = t1228 * t2311;
t1218 = t2856 * t1222;
t1310 = t1341 * t2536;
t721 = t1218 + t1216 + t1310;
t681 = -pkin(12) * t1626 + t721;
t676 = t1842 * t681;
t951 = -t1228 * t1832 + t2752 * t1341;
t719 = pkin(4) * t1492 - pkin(12) * t1493 + t951;
t716 = t1838 * t719;
t440 = t676 + t716;
t407 = pkin(13) * t1492 + t440;
t2692 = t1837 * t407;
t232 = t2678 - t2692;
t2681 = t1841 * t407;
t2689 = t1837 * t513;
t233 = t2681 + t2689;
t2674 = t1842 * t719;
t2683 = t1838 * t681;
t439 = t2674 - t2683;
t406 = -pkin(5) * t1492 - t439;
t31 = -t194 * t232 + t195 * t233 + t323 * t406;
t2749 = t31 * qJD(1);
t2677 = t1841 * t766;
t2693 = t1837 * t367;
t276 = t2677 + t2693;
t33 = -t194 * t276 + t195 * t277 + t323 * t368;
t2748 = t33 * qJD(1);
t1017 = t1387 * t1838;
t496 = -pkin(5) * t1017 + pkin(13) * t1019 + t1844;
t2679 = t1841 * t496;
t1038 = pkin(4) * t1389 + t2762;
t1025 = t1838 * t1038;
t632 = t1842 * t633;
t495 = -t632 + t1025;
t456 = pkin(13) * t1389 + t495;
t2691 = t1837 * t456;
t259 = t2679 - t2691;
t2680 = t1841 * t456;
t2690 = t1837 * t496;
t260 = t2680 + t2690;
t2478 = t1842 * t1038;
t2684 = t1838 * t633;
t494 = t2478 + t2684;
t455 = -pkin(5) * t1389 - t494;
t34 = -t194 * t259 + t195 * t260 + t323 * t455;
t2747 = t34 * qJD(1);
t40 = -t1062 * t195 + t1063 * t194 - t232 * t904 - t233 * t902;
t2746 = t40 * qJD(1);
t41 = -t1013 * t195 + t1014 * t194 - t259 * t904 - t260 * t902;
t2745 = t41 * qJD(1);
t42 = -t276 * t904 - t277 * t902 + (t195 * t1837 - t194 * t1841) * t1155;
t2744 = t42 * qJD(1);
t2668 = t323 * t1837;
t51 = -t1157 * t194 + t368 * t902 + (t276 - t2668) * t1155;
t2743 = t51 * qJD(1);
t2667 = t323 * t1841;
t52 = -t1157 * t195 + t368 * t904 + (-t277 - t2667) * t1155;
t2742 = t52 * qJD(1);
t53 = t1063 * t323 - t1155 * t233 - t1282 * t195 + t406 * t904;
t2741 = t53 * qJD(1);
t54 = t1062 * t323 + t1155 * t232 - t1282 * t194 + t406 * t902;
t2740 = t54 * qJD(1);
t55 = t1014 * t323 + t1017 * t195 - t1155 * t260 + t455 * t904;
t2739 = t55 * qJD(1);
t56 = t1013 * t323 + t1017 * t194 + t1155 * t259 + t455 * t902;
t2738 = t56 * qJD(1);
t65 = t1168 * t323 - t194 * t898 + t195 * t899;
t2737 = t65 * qJD(1);
t81 = -t367 * t439 + t368 * t440 + t589 * t680;
t2736 = t81 * qJD(1);
t84 = -t367 * t494 + t368 * t495 + t589 * t634;
t2735 = t84 * qJD(1);
t85 = -t1155 * t440 - t1157 * t439 - t1282 * t368 + t1283 * t367;
t2734 = t85 * qJD(1);
t91 = -t1155 * t495 - t1157 * t494 + (t368 * t1838 - t367 * t1842) * t1387;
t2733 = t91 * qJD(1);
t98 = t1157 * t680 + t1283 * t589 - t1387 * t440 - t1492 * t368;
t2732 = t98 * qJD(1);
t99 = t1155 * t680 + t1282 * t589 + t1387 * t439 - t1492 * t367;
t2731 = t99 * qJD(1);
t201 = -t1155 * t589 + t1387 * t367;
t2730 = qJD(1) * t201;
t202 = t1157 * t589 - t1387 * t368;
t2729 = qJD(1) * t202;
t345 = -t898 * t904 - t899 * t902;
t2728 = qJD(1) * t345;
t382 = -t802 * t1387 - t1974 * t633;
t2727 = qJD(1) * t382;
t383 = t802 * t1389 + t1974 * t634;
t2726 = qJD(1) * t383;
t410 = t1155 * t898 + t1168 * t902;
t2725 = qJD(1) * t410;
t411 = -t1155 * t899 + t1168 * t904;
t2724 = qJD(1) * t411;
t2122 = t1013 * t2825 + t2821 * t902;
t2335 = t2510 / 0.2e1;
t2270 = t1062 * t2335;
t412 = t2270 - t2122;
t2723 = qJD(1) * t412;
t2121 = t1014 * t2823 + t2819 * t904;
t2327 = t2496 / 0.2e1;
t2269 = t1063 * t2327;
t413 = t2269 - t2121;
t2722 = qJD(1) * t413;
t2120 = t1155 * t2825 + t2814 * t902;
t2020 = t2120 * t1837;
t2603 = t1062 * t1841;
t443 = t2603 / 0.2e1 - t2020;
t2721 = qJD(1) * t443;
t2119 = t1155 * t2823 + t2814 * t904;
t2019 = t2119 * t1841;
t2602 = t1063 * t1837;
t2377 = -t2602 / 0.2e1;
t445 = t2377 - t2019;
t2720 = qJD(1) * t445;
t2246 = t1477 / 0.2e1 - t2523 / 0.2e1;
t451 = t2119 + t2246;
t2719 = qJD(1) * t451;
t2063 = t2517 / 0.2e1 + t2489 / 0.2e1;
t452 = t2063 + t2120;
t2718 = qJD(1) * t452;
t457 = -t1157 * t902 + t1837 * t2878;
t2717 = qJD(1) * t457;
t458 = t1157 * t904 - t1841 * t2878;
t2716 = qJD(1) * t458;
t520 = -t1155 * t1169 + t1157 * t1168;
t2715 = qJD(1) * t520;
t594 = t1155 * t1362 - t1168 * t1387;
t2714 = qJD(1) * t594;
t595 = t1157 * t1362 - t1169 * t1387;
t2713 = qJD(1) * t595;
t2084 = t1157 * t2803 + t1387 * t2813;
t2012 = t2084 * t1842;
t2588 = t1283 * t1838;
t627 = -t2588 / 0.2e1 + t2012;
t2711 = qJD(1) * t627;
t635 = -t2084 - t1277;
t2710 = qJD(1) * t635;
t2060 = -t2499 / 0.2e1 + t2470 / 0.2e1;
t636 = t2060 + t2085;
t2709 = qJD(1) * t636;
t641 = t1155 * t1389 - t1838 * t2877;
t2708 = qJD(1) * t641;
t642 = t1157 * t1389 - t1842 * t2877;
t2707 = qJD(1) * t642;
t694 = t1362 * t1389 - t1363 * t1387;
t2706 = qJD(1) * t694;
t2567 = t1589 * t1832;
t785 = -t1362 * t1974 + t1387 * t2567;
t2705 = qJD(1) * t785;
t786 = -t1363 * t1974 + t1389 * t2567;
t2704 = qJD(1) * t786;
t1337 = -t1831 * t1973 + t1835 * t1969 + (-t1831 * t2249 + t1835 * t1887) * t1834;
t789 = t1337 * t1589 + t1338 * t1590;
t2703 = qJD(1) * t789;
t2702 = qJD(1) * t902;
t751 = t1155 * t1837;
t2700 = qJD(5) * t751;
t752 = t1155 * t1841;
t2699 = qJD(5) * t752;
t2654 = t589 * t1842;
t100 = t1157 * t634 - t1389 * t368 + (-t495 - t2654) * t1387;
t2698 = t100 * qJD(1);
t2655 = t589 * t1838;
t101 = t1155 * t634 - t1389 * t367 + (t494 - t2655) * t1387;
t2697 = t101 * qJD(1);
t106 = t1168 * t367 + t1169 * t368 + t1362 * t589;
t2696 = t106 * qJD(1);
t139 = -t633 * t720 + t634 * t721 + t802 * t951;
t2695 = t139 * qJD(1);
t169 = -t1387 * t721 - t1389 * t720 - t1492 * t634 + t1493 * t633;
t2694 = t169 * qJD(1);
t2686 = t1837 * t926;
t1311 = t1842 * t1324;
t1491 = t1838 * t1498;
t1095 = -t1311 + t1491;
t990 = pkin(13) * t1673 + t1095;
t2685 = t1837 * t990;
t2675 = t1841 * t990;
t2672 = t1842 * t904;
t209 = t951 * t1387 + t802 * t1492 + t633 * t1626 - t1974 * t720;
t2671 = t209 * qJD(1);
t210 = t951 * t1389 + t802 * t1493 + t634 * t1626 + t1974 * t721;
t2670 = t210 * qJD(1);
t242 = t1362 * t633 + t1363 * t634 - t2567 * t802;
t2669 = t242 * qJD(1);
t379 = -t1013 * t904 - t1014 * t902;
t2666 = t379 * qJD(1);
t384 = -t1062 * t904 - t1063 * t902;
t2665 = t384 * qJD(1);
t2664 = t406 * t1841;
t2192 = t2637 + t2638;
t408 = t2192 * t1155;
t2663 = t408 * qJD(1);
t2662 = t455 * t1837;
t2661 = t455 * t1841;
t466 = -t1062 * t1155 - t1282 * t902;
t2660 = t466 * qJD(1);
t467 = t1063 * t1155 + t1282 * t904;
t2659 = t467 * qJD(1);
t468 = -t1013 * t1155 + t1017 * t902;
t2658 = t468 * qJD(1);
t469 = t1014 * t1155 - t1017 * t904;
t2657 = t469 * qJD(1);
t553 = -t1155 * t1283 - t1157 * t1282;
t2656 = t553 * qJD(1);
t593 = -t1017 * t1157 - t1019 * t1155;
t2653 = t593 * qJD(1);
t1533 = -t1833 * t2010 + (pkin(10) * t2532 + t1836 * t2442) * t1834;
t608 = t1337 * t1407 + t1338 * t1408 + t1533 * t1567;
t2652 = t608 * qJD(1);
t612 = -t1337 * t1728 - t1338 * t1726 - t1407 * t1896 + t1408 * t1898;
t2651 = t612 * qJD(1);
t648 = t1157 * t1492 + t1283 * t1387;
t2649 = t648 * qJD(1);
t649 = -t1155 * t1492 - t1282 * t1387;
t2648 = t649 * qJD(1);
t709 = t1337 * t2387 - t1407 * t2238 + t1533 * t1726 - t1567 * t1898;
t2647 = t709 * qJD(1);
t710 = -t1338 * t2387 + t1408 * t2238 + t1533 * t1728 + t1567 * t1896;
t2646 = t710 * qJD(1);
t743 = -t1387 * t1493 - t1389 * t1492;
t2645 = t743 * qJD(1);
t2644 = t813 * t1837;
t2643 = t813 * t1841;
t1860 = t1974 * t2801 + t2239 * t2828;
t843 = t1860 - t1482;
t2642 = t843 * qJD(1);
t1861 = t1974 * t2802 + t2239 * t2829;
t1879 = (-t2303 / 0.2e1 + t2274 / 0.2e1) * t1839 + t2432 / 0.2e1;
t844 = -t1861 + t1879;
t2641 = t844 * qJD(1);
t2640 = t898 * t1842;
t2639 = t899 * t1842;
t909 = t1626 * t1387 + t1492 * t1974;
t2635 = t909 * qJD(1);
t910 = -t1626 * t1389 - t1493 * t1974;
t2634 = t910 * qJD(1);
t2633 = t989 * t1837;
t2632 = t989 * t1841;
t2631 = qJD(1) * t1157;
t2630 = qJD(1) * t1277;
t2629 = qJD(1) * t1389;
t2628 = qJD(1) * t1482;
t2627 = qJD(2) * t1391;
t2625 = qJD(2) * t1554;
t2624 = qJD(2) * t1836;
t2623 = qJD(3) * t1832;
t2622 = qJD(4) * t1019;
t2621 = qJD(4) * t1486;
t1830 = t1842 ^ 2;
t1813 = t1828 - t1830;
t2302 = qJD(4) * t1813;
t1255 = t1552 * t1837;
t2620 = qJD(5) * t1255;
t1256 = t1552 * t1841;
t2619 = qJD(5) * t1256;
t2618 = qJD(5) * t1387;
t2617 = qJD(5) * t1482;
t2616 = qJD(5) * t1671;
t1814 = t1829 - t1827;
t2615 = qJD(5) * t1814;
t2614 = qJD(5) * t1837;
t2613 = qJD(5) * t1838;
t2612 = qJD(5) * t1841;
t2611 = qJD(5) * t1842;
t2610 = qJD(6) * t1155;
t2609 = qJD(6) * t1277;
t2608 = qJD(6) * t1552;
t2607 = qJD(6) * t1837;
t2606 = qJD(6) * t1841;
t2605 = t1013 * t1841;
t2604 = t1014 * t1837;
t2599 = t1155 * t1842;
t2597 = t1157 * t1838;
t2595 = t1168 * t1761;
t2594 = t1168 * t1837;
t2593 = t1168 * t1841;
t2592 = t1229 * t1838;
t2591 = t1229 * t1842;
t2590 = t1282 * t1841;
t2056 = t2388 + t2527;
t2312 = t1835 * t2753;
t2314 = t1831 * t2753;
t1304 = (-t1726 * t2314 + t1728 * t2312) * t1833 + (-t1726 * t2056 + t1728 * t2057) * t1834;
t2587 = t1304 * qJD(1);
t2586 = t1362 * t1838;
t2585 = t1362 * t1842;
t1422 = -t1728 * t2238 + t1896 * t2387;
t2580 = t1422 * qJD(1);
t1888 = t1833 * t1898;
t1423 = t1726 * t2238 + t1888 * t2531;
t2579 = t1423 * qJD(1);
t2578 = t1475 * t1841;
t2577 = t1476 * t1837;
t2576 = t1492 * t1838;
t2575 = t1496 * t1842;
t2574 = t1497 * t1842;
t2571 = t1552 * t1842;
t2569 = t1554 * t1838;
t1618 = -t2538 / 0.2e1 - t1788 / 0.2e1;
t2566 = t1618 * qJD(1);
t2565 = t1618 * qJD(4);
t2564 = t1631 * t1761;
t2563 = t1631 * t1837;
t2562 = t1631 * t1841;
t1484 = t1671 * t1838;
t2559 = t1681 * t1842;
t1763 = -t2291 + t2458;
t1825 = t1834 ^ 2;
t2544 = t1825 * t1843;
t1695 = pkin(1) * t2544 - t1763 * t2753;
t2558 = t1695 * qJD(1);
t1696 = -t1825 * pkin(1) * t1840 - t1764 * t2753;
t2557 = t1696 * qJD(1);
t2556 = t1727 * t1838;
t2555 = t1727 * t1842;
t2554 = t1736 * t1841;
t2553 = t1737 * t1842;
t2552 = t1738 * t1842;
t2550 = t1761 * t1387;
t2549 = t1761 * t1671;
t1615 = t1761 * t1837;
t1616 = t1761 * t1841;
t2546 = t1766 * qJD(6);
t1778 = (-t1840 ^ 2 + t1843 ^ 2) * t1825;
t2545 = t1778 * qJD(1);
t2543 = t1828 * t1837;
t2535 = t1833 * qJD(2);
t1100 = -pkin(5) * t1484 + pkin(13) * t1486 + t1325;
t2525 = t1837 * t1100;
t2506 = t1838 * qJD(4);
t2503 = t1838 * t1391;
t2502 = t1838 * t1393;
t2495 = t1838 * t1842;
t2491 = t1841 * t1100;
t2488 = t1841 * t1284;
t2477 = t1842 * t1062;
t2476 = t1842 * t1063;
t2472 = t1842 * t1393;
t2471 = t1842 * t1492;
t1551 = t2467 / 0.2e1 - t2052 / 0.2e1;
t2332 = -t2506 / 0.2e1;
t2464 = t1551 * qJD(5) + t1671 * t2332;
t2463 = t2856 / 0.2e1;
t2462 = pkin(5) * t2862;
t2461 = pkin(12) * t2864;
t2456 = pkin(4) * t2842;
t2455 = pkin(4) * t2813;
t2454 = pkin(5) * t2824;
t2453 = pkin(12) * t2826;
t2452 = t2760 / 0.2e1;
t2451 = pkin(13) * t2774;
t2450 = t2754 / 0.2e1;
t2449 = -t2752 / 0.2e1;
t2445 = t367 / 0.2e1 - t323 / 0.2e1;
t2444 = -t676 / 0.2e1 - t716 / 0.2e1;
t2443 = t2860 + t2867;
t2439 = t1838 * t2856;
t2437 = t2856 * t1155;
t2436 = t2856 * t1362;
t2435 = t2856 * t1552;
t2433 = t2856 * t1727;
t2431 = t2856 * t1828;
t2430 = t2856 * t1830;
t2427 = t902 * t2601;
t2426 = t904 * t2601;
t2425 = t902 * t2772;
t2424 = t904 * t2771;
t2422 = -t2668 / 0.2e1;
t2421 = -t2667 / 0.2e1;
t2420 = t406 * t2773;
t2419 = -t2654 / 0.2e1;
t2418 = -t2644 / 0.2e1;
t2417 = -t2643 / 0.2e1;
t2415 = -t1025 / 0.2e1 + t632 / 0.2e1;
t2412 = t1157 * t2584;
t2408 = t1391 * t2573;
t2407 = t1393 * t2573;
t2405 = t1552 * t2561;
t2404 = t1554 * t2561;
t2402 = t1837 * t2506;
t2401 = qJD(4) * t2496;
t2400 = qJD(6) * t2507;
t2399 = qJD(6) * t2480;
t2398 = t1155 * t2584;
t2397 = t1155 * t2507;
t2396 = t1155 * t2480;
t2395 = t1552 * t2507;
t2394 = t1552 * t2480;
t2393 = qJD(4) * t2560;
t2392 = t1840 * t2544;
t2390 = t1833 * t2540;
t2386 = t1833 * t2529;
t2384 = qJD(6) * t2508;
t2383 = t1837 * t2496;
t2382 = qJD(5) * t2495;
t2380 = -t2605 / 0.2e1;
t2379 = t2604 / 0.2e1;
t2378 = -t2603 / 0.2e1;
t2376 = t2602 / 0.2e1;
t2375 = t751 / 0.2e1;
t2374 = -t752 / 0.2e1;
t2373 = -t2594 / 0.2e1;
t2372 = t1168 * t2771;
t2371 = -t2593 / 0.2e1;
t2370 = -t2591 / 0.2e1;
t2369 = t1282 * t2773;
t2368 = -t2590 / 0.2e1;
t2367 = t2590 / 0.2e1;
t2365 = t2588 / 0.2e1;
t2364 = -t1017 / 0.2e1;
t2363 = t1017 / 0.2e1;
t2361 = -t2578 / 0.2e1;
t2360 = t2577 / 0.2e1;
t2359 = -t2576 / 0.2e1;
t2358 = t1255 / 0.2e1;
t2357 = -t1256 / 0.2e1;
t2356 = t1836 * t2808;
t2355 = -t2563 / 0.2e1;
t2354 = t1631 * t2771;
t2353 = -t2562 / 0.2e1;
t2352 = -t1484 / 0.2e1;
t2351 = t1484 / 0.2e1;
t2350 = t1682 * t2767;
t2347 = -t1615 / 0.2e1;
t2346 = -t1616 / 0.2e1;
t2345 = t1387 * t2776;
t2344 = t1762 * t2771;
t2343 = t1827 * t2772;
t2342 = t1829 * t2772;
t2341 = -t2541 / 0.2e1;
t2340 = t2541 / 0.2e1;
t2339 = t2536 / 0.2e1;
t2338 = t2530 / 0.2e1;
t2337 = t2527 / 0.2e1;
t2334 = -t2507 / 0.2e1;
t2333 = t2507 / 0.2e1;
t2331 = -t2504 / 0.2e1;
t2330 = -t2503 / 0.2e1;
t2329 = t2502 / 0.2e1;
t2328 = -t2496 / 0.2e1;
t2326 = -t2486 / 0.2e1;
t2325 = -t2484 / 0.2e1;
t2324 = t2480 / 0.2e1;
t2323 = -t1019 / 0.2e1;
t2321 = t2472 / 0.2e1;
t2320 = -t2471 / 0.2e1;
t2319 = -t2468 / 0.2e1;
t2318 = -t1486 / 0.2e1;
t2317 = t1311 / 0.2e1 - t1491 / 0.2e1;
t2307 = t2752 * t1389;
t2306 = t2752 * t1492;
t2305 = t2752 * t1493;
t2300 = (-t1827 - t1829) * t1761;
t2299 = -qJD(5) - t2584;
t2298 = -qJD(6) - t2601;
t2297 = -qJD(5) - t2561;
t2296 = -qJD(6) - t2573;
t2295 = -qJD(6) + t2479;
t2294 = pkin(13) * t2335;
t2293 = pkin(13) * t2327;
t2290 = qJD(4) * t2440;
t2287 = t1761 * t2439;
t2286 = -t2440 / 0.2e1;
t2285 = t2440 / 0.2e1;
t2284 = -t2439 / 0.2e1;
t2283 = t2439 / 0.2e1;
t2282 = -t2438 / 0.2e1;
t2281 = -t2437 / 0.2e1;
t2280 = t1157 * t2463;
t2279 = -t2435 / 0.2e1;
t2277 = t1838 * t1817;
t2276 = t1828 * t2384;
t2275 = qJD(2) * t2392;
t2272 = qJD(4) * t2383;
t2271 = t951 * t2752 / 0.2e1;
t2266 = -t766 / 0.2e1 - t2759 / 0.2e1;
t2265 = pkin(12) * t2844 + t2871;
t2264 = pkin(12) * t2815 + t2858;
t2262 = t1834 * t2310;
t2261 = t1834 * t2309;
t2258 = t2311 / 0.2e1;
t2257 = -t1284 / 0.2e1 - t2758 / 0.2e1;
t2247 = 0.2e1 * t2272;
t2245 = t1787 / 0.2e1 - t2498 / 0.2e1;
t2244 = -t1216 / 0.2e1 - t1218 / 0.2e1 - t1310 / 0.2e1;
t580 = t1837 * t814 - t1841 * t1852;
t712 = t2488 + t2686;
t1874 = -t194 * t712 / 0.2e1 + t195 * t2868 - t276 * t580 / 0.2e1 + t581 * t2872 + t323 * t2858 + t813 * t2871;
t2132 = t232 * t2774 + t233 * t2768;
t1950 = pkin(13) * t2132 + t2874 * t406;
t1 = -t1874 + t1950;
t125 = -t580 * t712 + t581 * t713 + t813 * t927;
t2243 = -t1 * qJD(1) + t125 * qJD(2);
t695 = t2491 - t2685;
t696 = t2525 + t2675;
t129 = -t580 * t695 + t581 * t696 + t813 * t989;
t1875 = t194 * t695 / 0.2e1 + t696 * t2873 + t259 * t580 / 0.2e1 + t260 * t2870 + t323 * t2857 + t455 * t2867;
t1965 = t232 * t2787 + t233 * t2784 + t2452 * t406;
t3 = t1875 + t1965;
t2242 = -t3 * qJD(1) + t129 * qJD(2);
t140 = -t1391 * t696 - t1393 * t695 - t1475 * t581 + t1476 * t580;
t1855 = t194 * t2820 + t195 * t2821 + t259 * t2823 + t260 * t2825 + t2850 * t580 + t2851 * t581 + t2861 * t695 + t2863 * t696;
t1891 = (t232 * t2769 + t233 * t2774) * t1838 + t1063 * t2786 + t1062 * t2785;
t5 = t1855 + t1891;
t2241 = -t5 * qJD(1) + t140 * qJD(2);
t142 = -t1391 * t713 - t1393 * t712 + (t581 * t1837 - t580 * t1841) * t1552;
t1923 = t276 * t2823 + t277 * t2825 + t2861 * t712 + t2863 * t713;
t2133 = t195 * t2815 + t2844 * t581;
t2134 = t194 * t2814 + t2843 * t580;
t7 = (pkin(13) * t2848 + t233 / 0.2e1 + t2134) * t1841 + (pkin(13) * t2845 - t232 / 0.2e1 + t2133) * t1837 + t1923;
t2240 = -t7 * qJD(1) + t142 * qJD(2);
t2237 = qJD(1) * t2753 + qJD(2);
t1872 = t194 * t2818 + t195 * t2817 + t2807 * t323 + t2840 * t813 + t2865 * t581 + t2866 * t580;
t1977 = t232 * t2799 + t233 * t2796 + t2778 * t406;
t13 = t1872 + t1977;
t219 = -t1496 * t580 + t1497 * t581 + t1631 * t813;
t2236 = -t13 * qJD(1) + t219 * qJD(2);
t1868 = t260 * t2814 + t2820 * t323 + t2824 * t455 + t2843 * t696 + t2850 * t813 + t2857 * t904;
t2109 = t1282 * t2785 + t233 * t2766;
t2142 = pkin(12) * t2845 + t2664 / 0.2e1;
t17 = (t195 * t2803 + t2830 * t581 + t2142) * t1838 + t1868 + t2109;
t205 = t1393 * t989 + t1476 * t813 + t1484 * t581 - t1552 * t696;
t2235 = -t17 * qJD(1) + t205 * qJD(2);
t1869 = t259 * t2815 + t2822 * t323 + t2826 * t455 + t2844 * t695 + t2852 * t813 + t2857 * t902;
t2112 = t1282 * t2787 + t232 * t2767;
t2143 = pkin(12) * t2847 + t2420;
t19 = (t194 * t2803 + t2830 * t580 + t2143) * t1838 + t1869 + t2112;
t206 = t1391 * t989 + t1475 * t813 + t1484 * t580 + t1552 * t695;
t2234 = -t19 * qJD(1) + t206 * qJD(2);
t203 = t1391 * t927 - t1554 * t580 + (t712 - t2644) * t1552;
t1870 = t194 * t2812 + t276 * t2815 + t2826 * t368 + t2841 * t580 + t2844 * t712 + t2859 * t902;
t1984 = pkin(13) * t2837 + t2815 * t323 + t2844 * t813;
t2147 = pkin(5) * t2848 - t2664 / 0.2e1;
t27 = -t1837 * t1984 + t1870 + t2147;
t2233 = -t27 * qJD(1) + t203 * qJD(2);
t204 = t1393 * t927 - t1554 * t581 + (-t713 - t2643) * t1552;
t1920 = t195 * t2813 + t2823 * t368 + t2842 * t581 + t2858 * t904;
t2146 = pkin(5) * t2846 + t2420;
t29 = t1841 * t1984 + t277 * t2815 + t2844 * t713 + t1920 - t2146;
t2232 = t29 * qJD(1) + t204 * qJD(2);
t328 = -t1094 * t926 + t1095 * t927 + t1229 * t1325;
t1871 = -t367 * t1094 / 0.2e1 + t1095 * t2871 - t494 * t926 / 0.2e1 + t495 * t2858 + t589 * t2834 + t634 * t2839;
t2128 = t2766 * t440 + t2772 * t439;
t1948 = t2128 * pkin(12) - t680 * pkin(4) / 0.2e1;
t43 = -t1871 + t1948;
t2231 = -t43 * qJD(1) + t328 * qJD(2);
t350 = -t1094 * t1554 - t1095 * t1552 + (t927 * t1838 - t926 * t1842) * t1671;
t1912 = t1094 * t2841 + t1095 * t2843 + t2812 * t494 + t2814 * t495;
t2129 = t2803 * t368 + t2830 * t927;
t2130 = t2802 * t367 + t2829 * t926;
t49 = (pkin(12) * t2838 + t440 / 0.2e1 + t2130) * t1842 + (pkin(12) * t2836 - t439 / 0.2e1 + t2129) * t1838 + t1912;
t2230 = -t49 * qJD(1) + t350 * qJD(2);
t373 = -t1391 * t813 + t1552 * t580;
t1922 = t2825 * t323 + t2863 * t813 - t2134;
t2136 = -t2689 / 0.2e1 - t2681 / 0.2e1;
t58 = t1922 + t2136;
t2229 = qJD(1) * t58 - qJD(2) * t373;
t374 = t1393 * t813 - t1552 * t581;
t1921 = t2824 * t323 + t2862 * t813 - t2133;
t2138 = -t2692 / 0.2e1 + t2678 / 0.2e1;
t57 = t1921 + t2138;
t2228 = qJD(1) * t57 - qJD(2) * t374;
t420 = t1325 * t1554 - t1673 * t927 + (-t1095 - t2591) * t1671;
t1915 = t1157 * t2834 + t2801 * t368 + t2812 * t634 + t2828 * t927;
t1979 = t1229 * t2830 + t589 * t2803 + pkin(12) * t1492 / 0.2e1;
t2150 = pkin(4) * t2836 + t2772 * t680;
t78 = t1095 * t2830 + t1842 * t1979 + t2803 * t495 + t1915 + t2150;
t2227 = t78 * qJD(1) + t420 * qJD(2);
t421 = t1325 * t1552 - t1673 * t926 + (t1094 - t2592) * t1671;
t1865 = t1094 * t2830 + t1155 * t2835 + t2800 * t367 + t2803 * t494 + t2815 * t634 + t2827 * t926;
t2151 = pkin(4) * t2838 + t2767 * t680;
t77 = -t1838 * t1979 + t1865 + t2151;
t2226 = -t77 * qJD(1) + t421 * qJD(2);
t459 = t1229 * t1727 + t1631 * t926 + t1632 * t927;
t1866 = t1168 * t2860 + t1169 * t2858 + t1229 * t2832 + t1632 * t2871 + t2794 * t589 + t2806 * t367;
t1931 = t2286 * t680 + t2776 * t440 + t2779 * t439;
t63 = -t1866 + t1931;
t2225 = -t63 * qJD(1) + t459 * qJD(2);
t1916 = t1229 * t2842 + t2813 * t589 - t2129;
t2135 = -t2683 / 0.2e1 + t2674 / 0.2e1;
t102 = t1916 + t2135;
t629 = t1229 * t1554 - t1671 * t927;
t2224 = qJD(1) * t102 - qJD(2) * t629;
t1917 = t1155 * t2839 + t2814 * t589 - t2130;
t103 = t1917 + t2444;
t628 = -t1229 * t1552 + t1671 * t926;
t2223 = qJD(1) * t103 - qJD(2) * t628;
t1909 = t1324 * t2833 + t1363 * t2835 + t1729 * t2869 + t2795 * t633;
t2045 = t721 * t1839 / 0.2e1 + t720 * t2463;
t113 = t2271 + (t1526 * t2809 + t2341 * t802 + t2045) * t1832 + t1909;
t760 = t1324 * t1727 + t1325 * t1729 + t1526 * t2391;
t2222 = -t113 * qJD(1) + t760 * qJD(2);
t1919 = t1496 * t2862 + t2817 * t902 + t2824 * t898 + t2826 * t899;
t2081 = t1062 * t2797 + t1063 * t2798;
t199 = -t1919 + t2081;
t761 = -t1391 * t1497 - t1393 * t1496;
t2221 = qJD(1) * t199 - qJD(2) * t761;
t1913 = t1013 * t2824 + t1014 * t2826 + t2820 * t902 + t2822 * t904;
t2016 = (t2378 + t2377) * t1838;
t207 = t2016 - t1913;
t742 = -t1391 * t1476 - t1393 * t1475;
t2220 = -t207 * qJD(1) + t742 * qJD(2);
t1908 = t1013 * t2797 + t1014 * t2798 + t2789 * t902 + t2791 * t904;
t2024 = (t2769 * t898 + t2774 * t899) * t1838;
t211 = t2024 - t1908;
t1901 = t1391 * t2789 + t1393 * t2791 + t1475 * t2797 + t1476 * t2798;
t2014 = (t1496 * t2769 + t1497 * t2774) * t1838;
t525 = t2014 - t1901;
t2219 = -t211 * qJD(1) - t525 * qJD(2);
t214 = (t2846 + t2120) * t1841 + (t2847 + t2119) * t1837;
t2156 = t2582 + t2583;
t781 = t2156 * t1552;
t2218 = t214 * qJD(1) + t781 * qJD(2);
t1853 = t1389 * t2816 + t1974 * t2835 + t2239 * t2869 + t2801 * t802;
t1899 = -t1217 / 0.2e1 + t1341 * t2285 + t2166 / 0.2e1;
t234 = t1853 + t1899;
t979 = t1325 * t2239 + t1526 * t1673;
t2217 = qJD(1) * t234 - qJD(2) * t979;
t1854 = t1324 * t1974 / 0.2e1 + t1526 * t2829 + t633 * t2909 + t802 * t2802;
t235 = t1854 + t2244;
t978 = -t1324 * t2239 - t1526 * t1671;
t2216 = qJD(1) * t235 - qJD(2) * t978;
t2107 = t1155 * t2796 + t2779 * t904;
t2116 = t1155 * t2798 + t2779 * t902;
t240 = (t2865 - t2116) * t1841 + (t2866 + t2107) * t1837;
t2067 = t1393 * t2779 + t1552 * t2796;
t2079 = t1391 * t2779 + t1552 * t2798;
t554 = (t2817 - t2079) * t1841 + (t2818 + t2067) * t1837;
t2215 = t240 * qJD(1) + t554 * qJD(2);
t1910 = t1155 * t2817 + t1168 * t2823 + t2806 * t904 + t2815 * t899;
t2076 = t1063 * t2778 + t1282 * t2797;
t249 = -t1910 + t2076;
t929 = t1393 * t1631 - t1497 * t1552;
t2214 = -qJD(1) * t249 + qJD(2) * t929;
t1911 = t1155 * t2818 + t1168 * t2825 + t2806 * t902 + t2814 * t898;
t2080 = t1062 * t2778 + t1282 * t2799;
t250 = -t1911 + t2080;
t928 = t1391 * t1631 + t1496 * t1552;
t2213 = qJD(1) * t250 - qJD(2) * t928;
t2094 = t1013 * t2815 + t1155 * t2822;
t2118 = t1387 * t2825 + t2802 * t902;
t280 = -t2477 / 0.2e1 + (t2369 + t2118) * t1838 + t2094;
t924 = -t1475 * t1552 + t1671 * t2503;
t2212 = t280 * qJD(1) + t924 * qJD(2);
t2093 = t1014 * t2814 + t1155 * t2819;
t2117 = t1387 * t2824 + t2803 * t904;
t282 = t2476 / 0.2e1 + (t2368 + t2117) * t1838 + t2093;
t925 = t1476 * t1552 - t1671 * t2502;
t2211 = t282 * qJD(1) + t925 * qJD(2);
t2006 = t1387 * t2796 + t2285 * t904;
t2071 = t1014 * t2778 + t1155 * t2789;
t294 = -t2639 / 0.2e1 + (t2371 + t2006) * t1838 + t2071;
t1996 = t1393 * t2285 + t1671 * t2796;
t2070 = t1476 * t2778 + t1552 * t2789;
t644 = -t2574 / 0.2e1 + (t2353 + t1996) * t1838 + t2070;
t2210 = t294 * qJD(1) + t644 * qJD(2);
t2007 = t1387 * t2798 + t2285 * t902;
t2074 = t1013 * t2778 + t1155 * t2790;
t295 = t2640 / 0.2e1 + (t2373 + t2007) * t1838 + t2074;
t2005 = t1391 * t2285 + t1671 * t2798;
t2073 = t1475 * t2778 + t1552 * t2790;
t645 = t2575 / 0.2e1 + (t2355 + t2005) * t1838 + t2073;
t2209 = t295 * qJD(1) + t645 * qJD(2);
t1960 = t1155 * t1256 + t1157 * t2824 + t2813 * t904;
t309 = t2369 + t1960;
t897 = t1393 * t1554 - t1841 * t2876;
t2208 = qJD(1) * t309 - qJD(2) * t897;
t1961 = -t1155 * t1255 + t1157 * t2825 + t2812 * t902;
t310 = t2367 + t1961;
t896 = -t1391 * t1554 + t1837 * t2876;
t2207 = qJD(1) * t310 - qJD(2) * t896;
t1105 = t1155 * t2383;
t322 = t1105 + (-t2673 / 0.2e1 + t2850) * t1841 + (-t2672 / 0.2e1 + t2851) * t1837;
t1505 = t1552 * t2383;
t668 = t1505 + (-t2473 / 0.2e1 + t2820) * t1841 + (-t2472 / 0.2e1 + t2821) * t1837;
t2206 = t322 * qJD(1) + t668 * qJD(2);
t2115 = t1157 * t2799 + t2776 * t902;
t369 = t2593 / 0.2e1 + t2115;
t2078 = t1391 * t2776 + t1554 * t2799;
t697 = t2562 / 0.2e1 + t2078;
t2205 = -qJD(1) * t369 - qJD(2) * t697;
t2114 = t1157 * t2797 + t2776 * t904;
t372 = t2373 + t2114;
t2075 = t1393 * t2776 + t1554 * t2797;
t700 = t2355 + t2075;
t2204 = -qJD(1) * t372 - qJD(2) * t700;
t2001 = t1832 * t2280 + t2345;
t2004 = -t2550 / 0.2e1 + t1832 * t2281;
t385 = (-t1169 / 0.2e1 + t2004) * t1842 + (t2840 + t2001) * t1838;
t1999 = t1554 * t2285 + t1671 * t2776;
t2002 = -t2549 / 0.2e1 + t1832 * t2279;
t777 = (t2805 + t2002) * t1842 + (t2807 + t1999) * t1838;
t2203 = t385 * qJD(1) + t777 * qJD(2);
t2065 = -t2524 / 0.2e1 + t2487 / 0.2e1;
t462 = t2065 + t2107;
t2062 = -t2516 / 0.2e1 + t2483 / 0.2e1;
t886 = t2062 + t2067;
t2202 = qJD(1) * t462 + qJD(2) * t886;
t2064 = -t2521 / 0.2e1 - t2490 / 0.2e1;
t463 = t2064 - t2116;
t2061 = -t2513 / 0.2e1 - t2485 / 0.2e1;
t888 = t2061 - t2079;
t2201 = qJD(1) * t463 + qJD(2) * t888;
t1998 = t1155 * t2343 + t2333 * t902;
t510 = t2605 / 0.2e1 + t1998;
t1993 = t1552 * t2343 + t1837 * t2322;
t939 = t2578 / 0.2e1 + t1993;
t2200 = qJD(1) * t510 + qJD(2) * t939;
t1997 = t1155 * t2342 + t2324 * t904;
t512 = -t2604 / 0.2e1 + t1997;
t1992 = t1552 * t2342 + t1841 * t2321;
t941 = -t2577 / 0.2e1 + t1992;
t2199 = qJD(1) * t512 + qJD(2) * t941;
t514 = t2831 + t1155 * t2327 + (t2520 / 0.2e1 + t2862) * t1842;
t945 = t2804 + t1552 * t2327 + (t2515 / 0.2e1 + t2824) * t1842;
t2198 = -qJD(1) * t514 - qJD(2) * t945;
t515 = (t2326 + t2864) * t1842 + (t2827 + t2600 / 0.2e1) * t1837;
t946 = (t2325 + t2826) * t1842 + (t2800 + t2572 / 0.2e1) * t1837;
t2197 = -qJD(1) * t515 - qJD(2) * t946;
t2039 = t1155 * t2339 + t1389 * t2779;
t522 = t2585 / 0.2e1 + t2039;
t2038 = t1552 * t2339 + t1673 * t2779;
t968 = t2555 / 0.2e1 + t2038;
t2196 = -t522 * qJD(1) - t968 * qJD(2);
t704 = t1387 * t1671 - t1389 * t1673;
t812 = -t1389 ^ 2 + t2877;
t2195 = qJD(1) * t812 + qJD(2) * t704;
t2194 = -t1837 * t276 + t1841 * t277;
t2193 = -t1837 * t712 + t1841 * t713;
t2191 = -t1838 * t494 + t1842 * t495;
t2190 = t1832 * t2283;
t2189 = t1842 * t2285;
t2188 = t1837 * t2285;
t2187 = t1841 * t2286;
t1068 = -t1552 * t1632 + t1554 * t1631;
t1905 = t1155 * t2805 + t1157 * t2806 + t1168 * t2812 + t1169 * t2815;
t2068 = t1282 * t2777 + t1283 * t2778;
t330 = -t1905 + t2068;
t2186 = qJD(1) * t330 - qJD(2) * t1068;
t1085 = -t1484 * t1554 - t1486 * t1552;
t378 = (-t1283 / 0.2e1 + t2085) * t1842 + (t2837 - t2084) * t1838;
t2185 = t378 * qJD(1) - t1085 * qJD(2);
t1171 = t1552 * t1673 - t1838 * t2875;
t1958 = t1155 * t2801 + t1387 * t1484 + t1389 * t2815;
t489 = t2320 + t1958;
t2184 = -qJD(1) * t489 + qJD(2) * t1171;
t1172 = t1554 * t1673 - t1842 * t2875;
t1959 = t1157 * t2800 - t1387 * t1486 + t1389 * t2812;
t491 = t2359 + t1959;
t2183 = -qJD(1) * t491 - qJD(2) * t1172;
t1177 = t2549 / 0.2e1 + t2466 / 0.2e1 + (t2435 / 0.2e1 + t1838 * t2340) * t1832;
t650 = t2550 / 0.2e1 + t2475 / 0.2e1 + (t2437 / 0.2e1 - t2500 / 0.2e1) * t1832;
t2182 = -t650 * qJD(1) - t1177 * qJD(2);
t1179 = t1999 + t2245;
t652 = t2331 + t2345 + (t2319 + t2280) * t1832;
t2181 = t652 * qJD(1) + t1179 * qJD(2);
t1181 = t1554 * t1727 - t1632 * t1671;
t1903 = t1157 * t2794 + t1169 * t2803 + t1362 * t2812 + t1387 * t2805;
t2000 = t1283 * t2286 + t1492 * t2777;
t388 = -t1903 + t2000;
t2180 = qJD(1) * t388 - qJD(2) * t1181;
t1182 = t1552 * t1727 - t1631 * t1671;
t1904 = t1155 * t2794 + t1168 * t2803 + t1362 * t2814 + t1387 * t2807;
t2003 = t1282 * t2286 + t1492 * t2779;
t389 = -t1904 + t2003;
t2179 = qJD(1) * t389 - qJD(2) * t1182;
t2036 = t1554 * t2339 + t1673 * t2777;
t1188 = -t2556 / 0.2e1 + t2036;
t2037 = t1157 * t2339 + t1389 * t2777;
t706 = -t2586 / 0.2e1 + t2037;
t2178 = -t706 * qJD(1) - t1188 * qJD(2);
t2177 = -qJD(1) * t751 - qJD(2) * t1255;
t2176 = qJD(1) * t752 + qJD(2) * t1256;
t1309 = -t1671 * t1729 + t1673 * t1727;
t1902 = t1362 * t2801 + t1363 * t2802 + t1387 * t2793 + t1389 * t2795;
t1986 = (-t2856 * t1493 / 0.2e1 + t1492 * t2770) * t1832;
t497 = t1986 + t1902;
t2175 = -qJD(1) * t497 + qJD(2) * t1309;
t1390 = -t1673 ^ 2 + t2875;
t2174 = qJD(1) * t704 + qJD(2) * t1390;
t1900 = t1673 * t2449 - t2239 * t2536 / 0.2e1;
t1933 = (-t2528 / 0.2e1 - t2165 / 0.2e1) * t1833;
t1414 = t1933 + t1900;
t1943 = t1832 * t1974;
t887 = t2811 - t2307 / 0.2e1 + (t2808 - t1943 / 0.2e1) * t1839;
t2173 = qJD(1) * t887 + qJD(2) * t1414;
t1895 = t1671 * t2449 + t2239 * t2285;
t1932 = (-t2428 / 0.2e1 + t1831 * t2258) * t1833;
t1415 = t1932 - t1895;
t1867 = t1387 * t2449 + t1974 * t2285;
t1968 = -t2434 / 0.2e1 - t2259 / 0.2e1;
t889 = -t1867 + t1968;
t2172 = t889 * qJD(1) + t1415 * qJD(2);
t1420 = t1671 * t2391 + t1727 * t2239;
t1863 = t1974 * t2794 + t2239 * t2832;
t2035 = t1387 * t2340 + t1589 * t2803;
t597 = -t2306 / 0.2e1 + (t1626 * t2463 + t2035) * t1832 + t1863;
t2171 = -qJD(1) * t597 - qJD(2) * t1420;
t1421 = t1673 * t2391 + t1729 * t2239;
t1862 = t1363 * t2909 + t1974 * t2793;
t2034 = t1389 * t2340 + t1589 * t2801;
t599 = -t2305 / 0.2e1 + (t1626 * t2770 + t2034) * t1832 + t1862;
t2170 = -qJD(1) * t599 - qJD(2) * t1421;
t1586 = t1753 * t2541 - t1754 * t2533;
t2083 = t1753 * t2810 + t1754 * t2808;
t688 = t2792 + (-t1702 / 0.2e1 + t1338 * t2775 + t1337 * t2910) * t1833 + t2083;
t2169 = qJD(1) * t688 + qJD(2) * t1586;
t2167 = t2295 * t1838;
t2164 = qJD(1) * t1017 + qJD(2) * t1484;
t2163 = -qJD(1) * t1019 - qJD(2) * t1486;
t1076 = t1888 * t2775 + t2533 * t2808 + (t1589 - t1896) * t2340;
t1170 = (-t1589 * t2314 + t1590 * t2312) * t1833 + (-t1589 * t2056 + t1590 * t2057) * t1834;
t2162 = qJD(1) * t1170 - qJD(2) * t1076;
t1767 = (t1831 ^ 2 + t1835 ^ 2) * t1824;
t2161 = qJD(1) * t1076 - qJD(2) * t1767;
t1380 = t1880 / 0.2e1 + (t1878 / 0.2e1 - t2053 / 0.2e1) * t1839;
t1660 = t1836 * t2339 + (t2429 / 0.2e1 + t1835 * t2258) * t1833;
t2160 = qJD(1) * t1380 + qJD(2) * t1660;
t2159 = t2479 - t2601;
t2158 = t2479 - t2573;
t2157 = -t1094 * t1838 + t1095 * t1842;
t2155 = -t1746 * t1837 + t1747 * t1841;
t2154 = t2763 / 0.2e1 - t2757 / 0.2e1;
t2152 = pkin(12) * t2862 + t2421;
t2149 = pkin(5) * t2852 - t2661 / 0.2e1;
t2148 = pkin(5) * t2849 - t2662 / 0.2e1;
t2145 = pkin(5) * t2822 - t2632 / 0.2e1;
t2144 = pkin(5) * t2819 - t2633 / 0.2e1;
t2141 = pkin(12) * t2824 + t2417;
t2139 = t2780 * t902 + t2782 * t904;
t2137 = -t2691 / 0.2e1 + t2679 / 0.2e1;
t2131 = t259 * t2774 + t260 * t2768;
t2127 = t2777 * t495 + t2778 * t494;
t2126 = t2768 * t696 + t2774 * t695;
t2125 = t2785 * t899 + t2786 * t898;
t2124 = t2768 * t899 + t2774 * t898;
t2113 = t1155 * t2786 + t194 * t2767;
t2111 = t1552 * t2786 + t2767 * t580;
t2110 = t1155 * t2784 + t195 * t2767;
t2108 = t1552 * t2784 + t2767 * t581;
t2106 = -t2685 / 0.2e1 + t2491 / 0.2e1;
t2095 = t1094 * t2778 + t1095 * t2777;
t2091 = t1169 * t2766 + t2372;
t2087 = t1496 * t2786 + t1497 * t2785;
t2086 = t1496 * t2774 + t1497 * t2768;
t2082 = t1632 * t2766 + t2354;
t2077 = t1681 * t2768 + t1682 * t2774;
t2072 = t1735 * t2773 - t2554 / 0.2e1;
t2069 = t1391 * t2780 + t1393 * t2782;
t2066 = t1761 * t2767 + t2344;
t2055 = qJD(4) * t2239;
t2054 = t1590 * t2238;
t2051 = t2239 * qJD(2);
t2050 = t2238 * qJD(1);
t2046 = (qJD(2) * t1492 + t1389 * qJD(4)) * t1387;
t2044 = t2756 / 0.2e1 - t2265;
t2043 = t2755 / 0.2e1 - t2264;
t2042 = t1808 / 0.2e1 + t2154;
t2041 = -t2559 / 0.2e1 + t1761 * t2336;
t2040 = t1761 * t2328 + t2350;
t1383 = (t1834 * t2337 + t2810) * t1836 + (t2338 - t2049 / 0.2e1) * t1831;
t2033 = qJD(1) * t1383 + qJD(2) * t2390;
t2029 = t2049 / 0.2e1;
t1385 = t2356 + t1790 / 0.2e1 + (t2029 - t2530 / 0.2e1) * t1835;
t2032 = -qJD(1) * t1385 + qJD(2) * t2386;
t2031 = t1589 * t2050;
t2030 = qJD(1) * t2054;
t1885 = t2778 * t989 + t2788 * t581 + t2791 * t580 + t2796 * t696 + t2799 * t695;
t116 = (pkin(12) * t2807 + t2285 * t813) * t1838 + t1885 + t2087;
t1223 = -t1681 * t1735 + t1682 * t1736 + t1832 * t2287;
t1886 = t194 * t2791 + t195 * t2788 + t259 * t2799 + t260 * t2796 + t2778 * t455;
t26 = (pkin(12) * t2840 + t2285 * t323) * t1838 + t1886 + t2125;
t2028 = t26 * qJD(1) + t116 * qJD(2) + t1223 * qJD(3);
t1939 = pkin(5) * t2807 + pkin(13) * t2086;
t1975 = t2777 * t813 + t2797 * t713 + t2798 * t712;
t117 = (t2768 * t581 + t2773 * t580 + t2859) * t1761 + t1939 + t1975;
t1219 = (-t1681 * t1837 - t1682 * t1841 + t1762) * t1761;
t1945 = pkin(5) * t2840 + pkin(13) * t2124;
t1976 = t276 * t2798 + t277 * t2797 + t2777 * t323;
t23 = (t195 * t2768 + t194 * t2773 - t368 / 0.2e1) * t1761 + t1945 + t1976;
t2027 = -t23 * qJD(1) - t117 * qJD(2) + t1219 * qJD(3);
t1544 = (t1762 * t2438 - t1839 * t2440 + t2287) * t1832;
t1938 = pkin(4) * t2795 + pkin(12) * t2082;
t289 = (t1229 * t2770 + t1325 * t2463 + t2282 * t927 + t2284 * t926) * t1832 + t1938 + t2095;
t1940 = pkin(4) * t2833 + pkin(12) * t2091;
t74 = (t2282 * t368 + t2284 * t367 + t2463 * t634 + t2770 * t589) * t1832 + t1940 + t2127;
t2026 = -t74 * qJD(1) - t289 * qJD(2) + t1544 * qJD(3);
t502 = t1155 * t1552 - t1157 * t1554;
t611 = t2597 + t2599;
t617 = -t1157 ^ 2 + t2878;
t2025 = qJD(1) * t617 + qJD(2) * t502 - qJD(4) * t611;
t1785 = -t1830 * t1837 + t2543;
t393 = t2397 + (t2326 + t2863 + t2598 / 0.2e1) * t1838;
t768 = t2395 + (t2325 + t2825 + t2570 / 0.2e1) * t1838;
t2022 = -qJD(1) * t393 - qJD(2) * t768 - qJD(4) * t1785;
t1786 = t1813 * t1841;
t392 = -t2396 + (-t2520 / 0.2e1 + t2862 - t2596 / 0.2e1) * t1838;
t767 = -t2394 + (-t2515 / 0.2e1 + t2824 - t2568 / 0.2e1) * t1838;
t2021 = -qJD(1) * t392 - qJD(2) * t767 + qJD(4) * t1786;
t1093 = t2569 + t2571;
t1104 = -t1554 ^ 2 + t2876;
t2018 = qJD(1) * t502 + qJD(2) * t1104 - qJD(4) * t1093;
t2017 = qJD(1) * t611 + qJD(2) * t1093 + t2302;
t2011 = (qJD(5) * t1554 - t1671 * t2506) * t1552;
t2008 = t2051 - qJD(4);
t245 = t2456 + (-t2762 / 0.2e1 - t1038 / 0.2e1) * t1842 + (t589 / 0.2e1 - t633 / 0.2e1) * t1838;
t684 = t2455 + (-t2761 / 0.2e1 - t1498 / 0.2e1) * t1842 + (t2839 - t1324 / 0.2e1) * t1838;
t1995 = pkin(4) * t2506 - qJD(1) * t245 - qJD(2) * t684;
t1967 = pkin(4) * t2844 + pkin(12) * t2364 + t2419;
t247 = t1967 + t2415;
t1966 = pkin(4) * t2815 + pkin(12) * t2352 + t2370;
t686 = t1966 + t2317;
t1994 = pkin(4) * t2479 + qJD(1) * t247 + qJD(2) * t686;
t1146 = t2474 / 0.2e1 - t1942 / 0.2e1;
t1991 = t1146 * qJD(1) + t1551 * qJD(2) + t2506 / 0.2e1;
t1990 = t2049 * t2531;
t1981 = qJD(5) * t1380 + t2914;
t1980 = qJD(5) * t1660 + t2915;
t1972 = t1155 * t2783 + t1157 * t2786 + t194 * t2771;
t1971 = t1552 * t2783 + t1554 * t2786 + t2771 * t580;
t1970 = qJD(6) * t2772 + t2097;
t1399 = pkin(12) ^ 2 * t2495 - t1737 * t1746 + t1738 * t1747;
t1873 = (t1737 * t2774 + t1738 * t2769 + t2450) * t1761 + t1681 * t2783 + t1682 * t2780;
t826 = (pkin(5) * t2285 + pkin(12) * t2776) * t1838 + t2072 * pkin(13) + t1873;
t1858 = t194 * t2783 + t195 * t2780 + t2450 * t323 + t2452 * t368 + t276 * t2787 + t277 * t2784;
t1949 = pkin(13) * t2131 + t2874 * t455;
t9 = -t1858 + t1949;
t1857 = t2450 * t813 + t2452 * t927 + t2780 * t581 + t2783 * t580 + t2784 * t713 + t2787 * t712;
t1947 = pkin(5) * t2857 + pkin(13) * t2126;
t94 = -t1857 + t1947;
t1964 = -t9 * qJD(1) - t94 * qJD(2) + t826 * qJD(3) + t1399 * qJD(4);
t1963 = (t1837 * t2282 + t2492 / 0.2e1) * t1832;
t1962 = (t1841 * t2282 - t2509 / 0.2e1) * t1832;
t1238 = (t2559 / 0.2e1 + t2789) * t1841 + (t2350 + t2790) * t1837;
t1317 = (t1746 * t1838 - t2553) * t1841 + (t1747 * t1838 + t2552) * t1837;
t15 = (pkin(13) * t2852 + t260 / 0.2e1 + t276 * t2771 + t2113) * t1841 + (pkin(13) * t2849 - t259 / 0.2e1 + t277 * t2771 - t2110) * t1837 + t2139;
t96 = (pkin(13) * t2822 + t696 / 0.2e1 + t712 * t2771 + t2111) * t1841 + (pkin(13) * t2819 - t695 / 0.2e1 + t713 * t2771 - t2108) * t1837 + t2069;
t1957 = -t15 * qJD(1) - t96 * qJD(2) + t1238 * qJD(3) - t1317 * qJD(4);
t339 = t1391 * t902 - t1393 * t904;
t423 = (t2636 - t2687) * t1838;
t438 = t902 ^ 2 - t904 ^ 2;
t1956 = qJD(1) * t438 + qJD(2) * t339 - qJD(4) * t423 - qJD(5) * t2192;
t787 = (-t2518 + t2581) * t1838;
t829 = t1391 ^ 2 - t1393 ^ 2;
t1955 = qJD(1) * t339 + qJD(2) * t829 - qJD(4) * t787 - qJD(5) * t2156;
t1291 = (t2188 - t2482 / 0.2e1 + t2796) * t1838;
t1882 = (t2868 - t2141) * t1842 + t1554 * t2785 + t1552 * t2781;
t144 = (-t1841 * t2043 + t2870) * t1838 + t1882 + t2144;
t1549 = t1747 * t1842 + (-t1738 + 0.2e1 * t2457) * t1838;
t1883 = (t2872 - t2152) * t1842 + t1157 * t2785 + t1155 * t2781;
t46 = (-t1841 * t2044 + t2873) * t1838 + t1883 + t2148;
t1954 = t46 * qJD(1) + t144 * qJD(2) - t1291 * qJD(3) + t1549 * qJD(4);
t1292 = (t2187 + t2798 - t2512 / 0.2e1) * t1838;
t143 = (t712 / 0.2e1 + t2453) * t1842 + (t1838 * t2043 + t2767 * t813) * t1837 + t1971 + t2145;
t1550 = t1737 * t1838 + (t1746 - 0.2e1 * t1820) * t1842;
t45 = (t276 / 0.2e1 + t2461) * t1842 + (t1838 * t2044 + t2767 * t323) * t1837 + t1972 + t2149;
t1953 = -t45 * qJD(1) - t143 * qJD(2) - t1292 * qJD(3) - t1550 * qJD(4);
t1437 = t1963 + t2040;
t1670 = -t1828 * pkin(12) * t1841 - t2552;
t265 = t1838 * t2141 + t2106 + t2108;
t72 = t1838 * t2152 + t2110 + t2137;
t1952 = qJD(1) * t72 + qJD(2) * t265 + qJD(3) * t1437 + qJD(4) * t1670;
t1438 = t1962 - t2041;
t1669 = pkin(12) * t2543 + t2553;
t263 = pkin(12) * t2330 + t2675 / 0.2e1 + (t1100 / 0.2e1 + t813 * t2772) * t1837 + t2111;
t70 = pkin(12) * t2425 + t2680 / 0.2e1 + (t496 / 0.2e1 + t323 * t2772) * t1837 + t2113;
t1951 = -qJD(1) * t70 - qJD(2) * t263 + qJD(3) * t1438 + qJD(4) * t1669;
t1946 = (qJD(2) * t1282 + qJD(5) * t1157 - t1387 * t2506) * t1155;
t1944 = qJD(4) * t1974;
t1941 = t1974 * qJD(1);
t107 = -t1837 * t2445 + t1841 * t2266 + t2462;
t1680 = t2042 * t1841;
t416 = -t1837 * t2443 + t1841 * t2257 + t2454;
t1937 = pkin(5) * t2614 - qJD(1) * t107 - qJD(2) * t416 + qJD(4) * t1680;
t109 = -t2855 / 0.2e1 + t2445 * t1841 + t2266 * t1837;
t1679 = t2042 * t1837;
t418 = -t2764 / 0.2e1 + t2443 * t1841 + t2257 * t1837;
t1936 = pkin(5) * t2612 + qJD(1) * t109 + qJD(2) * t418 - qJD(4) * t1679;
t1929 = qJD(6) * t1146 + t2935;
t1926 = qJD(6) * t1551 + t2934;
t1918 = qJD(1) * t1750 + t2535;
t1914 = t1941 - qJD(4);
t1784 = t1814 * t1828;
t1907 = qJD(1) * t423 + qJD(2) * t787 + qJD(4) * t1784 + 0.2e1 * t2277;
t1906 = qJD(1) * t2192 + qJD(2) * t2156 + t2247 - t2615;
t1890 = t1726 * t1898;
t1889 = t1728 * t1896;
t1822 = t2613 / 0.2e1;
t1804 = t1832 * pkin(12) * t2431;
t1801 = qJD(1) * t2392;
t1792 = -0.2e1 * qJD(6) * t2383;
t1654 = t1660 * qJD(4);
t1653 = t1820 + t2481 / 0.2e1 - t2154 * t1841;
t1652 = t2459 - t2511 / 0.2e1 + t2154 * t1837;
t1606 = t1618 * qJD(2);
t1440 = t1963 - t2040;
t1439 = t1962 + t2041;
t1417 = t1933 - t1900;
t1416 = t1932 + t1895;
t1386 = t2049 * t2910 + t1836 * t2809 + (t2539 / 0.2e1 + t1836 * t2337) * t1834;
t1384 = t2356 - t1790 / 0.2e1 + (t2029 + t2338) * t1835;
t1294 = t1682 * t2772 + t1762 * t2327 + t1838 * t2188;
t1293 = t1681 * t2772 + t1762 * t2335 + t1838 * t2187;
t1239 = t1842 * t2077 - t2072;
t1187 = t2556 / 0.2e1 + t2036;
t1180 = -t1999 + t2245;
t1178 = -t2466 / 0.2e1 - t2273 / 0.2e1 - t2002;
t1101 = qJD(2) * t1482 + qJD(4) * t1380;
t1086 = t1093 * qJD(5);
t1071 = t1076 * qJD(3);
t969 = -t2555 / 0.2e1 + t2038;
t948 = t1552 * t2328 + t1671 * t2333 + t2321 + t2804;
t947 = t1841 * t2318 + t2514 / 0.2e1 + t2893;
t940 = t2360 + t1992;
t938 = t2361 + t1993;
t893 = t2062 - t2067;
t892 = t2061 + t2079;
t891 = t2307 / 0.2e1 - t1943 * t2770 - t2494 / 0.2e1 + t2811;
t890 = t1867 + t1968;
t846 = -t1860 - t1482;
t845 = t1861 + t1879;
t825 = pkin(12) * t2344 + pkin(13) * t2554 / 0.2e1 + t1735 * t2451 + t1832 * pkin(5) * t2284 + t1873;
t801 = t2156 * qJD(6);
t782 = t787 * qJD(6);
t778 = (t1554 * t2283 + t1842 * t2279) * t1832 + t2066 * t1671 + t2082;
t770 = t1554 * t2327 + t1671 * t2336 + t2329 + t2394;
t769 = t1554 * t2336 + t1838 * t2325 + t2330 - t2395;
t711 = t1277 * qJD(2) + t1146 * qJD(5) + t1387 * t2332;
t705 = t2586 / 0.2e1 + t2037;
t701 = t704 * qJD(4);
t699 = t2563 / 0.2e1 + t2075;
t698 = t2353 + t2078;
t689 = t1338 * t2533 / 0.2e1 + t1337 * t2341 - t2534 / 0.2e1 + t2792 - t2083;
t687 = -t1966 + t2317;
t685 = pkin(12) * t2318 + t2455 + t2592 / 0.2e1 + t2505 / 0.2e1 + t2469 / 0.2e1;
t667 = t1475 * t2774 + t1476 * t2768 - t1842 * t2088 + t1505;
t653 = t1832 * t2319 - t2001 + t2331;
t651 = -t2475 / 0.2e1 + t2381 / 0.2e1 - t2004;
t646 = -t2575 / 0.2e1 + t1631 * t2335 + t2005 * t1838 + t2073;
t643 = t1631 * t2327 + t2574 / 0.2e1 + t1996 * t1838 + t2070;
t638 = t2084 - t1277;
t637 = t2060 - t2085;
t626 = t2365 + t2012;
t610 = t611 * qJD(5);
t598 = t2305 / 0.2e1 + t1626 * t2339 + t2034 * t1832 + t1862;
t596 = t2306 / 0.2e1 + t1626 * t2286 + t2035 * t1832 + t1863;
t555 = (-t2582 / 0.2e1 + t2362) * t1761 - t2077 * t1552 + t2086;
t526 = t2014 + t1901;
t523 = -t2585 / 0.2e1 + t2039;
t517 = t2672 / 0.2e1 + t1155 * t2328 + t1387 * t2333 + t2831;
t516 = t1841 * t2323 + t2519 / 0.2e1 + t2892;
t511 = t2379 + t1997;
t509 = t2380 + t1998;
t501 = t502 * qJD(5);
t498 = t1986 - t1902;
t490 = t2576 / 0.2e1 + t1959;
t488 = t2471 / 0.2e1 + t1958;
t465 = t2065 - t2107;
t464 = t2064 + t2116;
t454 = -t2119 + t2246;
t453 = t2063 - t2120;
t444 = t2376 - t2019;
t442 = t2378 - t2020;
t426 = t2192 * qJD(6);
t422 = t423 * qJD(6);
t419 = t2764 / 0.2e1 + t2643 / 0.2e1 + pkin(13) * t2358 + t2676 / 0.2e1 - t2522 / 0.2e1;
t417 = pkin(13) * t2357 + t2454 + t2644 / 0.2e1 + t2686 / 0.2e1 + t2488 / 0.2e1;
t415 = t2269 + t2121;
t414 = t2270 + t2122;
t395 = t1157 * t2327 + t1387 * t2336 + t2396 + t2424;
t394 = t1157 * t2336 + t1838 * t2326 - t2397 + t2425;
t391 = t1904 + t2003;
t390 = t1903 + t2000;
t386 = (t1838 * t2280 + t1842 * t2281) * t1832 + t2066 * t1387 + t2091;
t377 = t1283 * t2766 + t1282 * t2772 + (t2597 / 0.2e1 + t2599 / 0.2e1) * t1671 + (t2571 / 0.2e1 + t2569 / 0.2e1) * t1387;
t371 = t2594 / 0.2e1 + t2114;
t370 = t2371 + t2115;
t338 = t339 * qJD(6);
t331 = t1905 + t2068;
t321 = t1013 * t2774 + t1014 * t2768 - t1842 * t2123 + t1105;
t312 = t2369 - t1960;
t311 = t2367 - t1961;
t296 = -t2640 / 0.2e1 + t1168 * t2335 + t2007 * t1838 + t2074;
t293 = t1168 * t2327 + t2639 / 0.2e1 + t2006 * t1838 + t2071;
t290 = t1229 * t2339 + t1325 * t2286 + t2189 * t927 + t2190 * t926 + t1938 - t2095;
t283 = -t2476 / 0.2e1 + t1282 * t2327 + t2117 * t1838 + t2093;
t281 = t2477 / 0.2e1 + t1282 * t2336 + t2118 * t1838 + t2094;
t266 = pkin(12) * t2329 + t2327 * t813 + t2106 - t2108;
t264 = -t2675 / 0.2e1 - t2525 / 0.2e1 + (t2453 + t2418) * t1838 + t2111;
t252 = t1910 + t2076;
t251 = t1911 + t2080;
t248 = -t1967 + t2415;
t246 = pkin(12) * t2323 + t2456 + t2655 / 0.2e1 + t2684 / 0.2e1 + t2478 / 0.2e1;
t241 = (-t2637 / 0.2e1 + t2416) * t1761 - t2077 * t1155 + t2124;
t237 = -t1853 + t1899;
t236 = -t1854 + t2244;
t213 = t1062 * t2774 + t1063 * t2768 + t1155 * t2088 + t1552 * t2123;
t212 = t2024 + t1908;
t208 = t2016 + t1913;
t200 = t1919 + t2081;
t146 = pkin(12) * t2893 + t1671 * t2294 + t2333 * t813 + t2335 * t927 + t2767 * t712 - t1971 + t2145;
t145 = t1671 * t2293 + (t1841 * t2264 + t2870) * t1838 + t1882 - t2144;
t118 = t2346 * t581 + t2347 * t580 + t2778 * t927 + t1939 - t1975;
t115 = pkin(12) * t2354 + t2190 * t813 + t1885 - t2087;
t114 = t2567 * t2816 - t1909 + t2271 + (t2340 * t802 + t2045) * t1832;
t110 = t2855 / 0.2e1 + t2667 / 0.2e1 + pkin(13) * t2375 + t2682 / 0.2e1 - t2688 / 0.2e1;
t108 = pkin(13) * t2374 + t2462 + t2668 / 0.2e1 + t2693 / 0.2e1 + t2677 / 0.2e1;
t105 = -t1916 + t2135;
t104 = -t1917 + t2444;
t97 = t712 * t2328 + t580 * t2324 + t713 * t2336 + t581 * t2334 + (t2360 + t2361) * pkin(13) - t2069 + t2126 + t2891 * t1552;
t95 = t1857 + t1947;
t80 = pkin(12) * t2359 + t1229 * t2364 + t2352 * t589 - t1865 + t2151;
t79 = pkin(12) * t2320 + (t2419 - t495 / 0.2e1) * t1671 + (t2370 - t1095 / 0.2e1) * t1387 + t1915 - t2150;
t75 = t2189 * t368 + t2190 * t367 + t2286 * t634 + t2339 * t589 + t1940 - t2127;
t73 = pkin(12) * t2424 + t2327 * t323 - t2110 + t2137;
t71 = -t2680 / 0.2e1 - t2690 / 0.2e1 + (t2461 + t2422) * t1838 + t2113;
t64 = t1866 + t1931;
t60 = -t1921 + t2138;
t59 = -t1922 + t2136;
t50 = t926 * t2323 + t367 * t2318 + t927 * t2363 + t368 * t2351 + (t2365 + t2366) * pkin(12) - t1912 + t2128;
t48 = pkin(12) * t2892 + t1387 * t2294 + t2333 * t323 + t2335 * t368 + t276 * t2767 - t1972 + t2149;
t47 = t1387 * t2293 + (t1841 * t2265 + t2873) * t1838 + t1883 - t2148;
t44 = t1871 + t1948;
t30 = pkin(13) * t2368 + (t2421 - t277 / 0.2e1) * t1552 + (t2417 - t713 / 0.2e1) * t1155 + t1920 + t2146;
t28 = t1155 * t2418 + t1282 * t2451 + t1552 * t2422 - t1870 + t2147;
t25 = pkin(12) * t2372 + t2190 * t323 + t1886 - t2125;
t24 = t194 * t2347 + t195 * t2346 + t2778 * t368 + t1945 - t1976;
t20 = t1838 * t2143 + t194 * t2351 + t2363 * t580 - t1869 + t2112;
t18 = t1838 * t2142 + t195 * t2351 + t2363 * t581 - t1868 + t2109;
t16 = t276 * t2328 + t194 * t2324 + t277 * t2336 + t195 * t2334 + (t2379 + t2380) * pkin(13) + t2131 - t2139 + t2891 * t1155;
t14 = -t1872 + t1977;
t10 = t1858 + t1949;
t8 = t580 * t2374 + t194 * t2357 + t581 * t2375 + t195 * t2358 + (t2376 + t2378) * pkin(13) - t1923 + t2132;
t6 = -t1855 + t1891;
t4 = -t1875 + t1965;
t2 = t1874 + t1950;
t11 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2275, t1778 * qJD(2), qJD(2) * t2261, -t2275, -qJD(2) * t2262, 0, t1696 * qJD(2), -t1695 * qJD(2), 0, 0, qJD(2) * t1889, t1304 * qJD(2), t1422 * qJD(2), -qJD(2) * t1890, t1423 * qJD(2), -qJD(2) * t1990, -qJD(3) * t1589 * t2238 + t709 * qJD(2), t710 * qJD(2) + qJD(3) * t2054, qJD(2) * t612 + qJD(3) * t1170, qJD(2) * t608 + qJD(3) * t789 (qJD(2) * t1493 - t1387 * qJD(4)) * t1389, qJD(2) * t743 + qJD(4) * t812, t910 * qJD(2) + t1387 * t1944, t2046, t909 * qJD(2) + t1389 * t1944, t1974 * t1626 * qJD(2), qJD(2) * t209 - qJD(3) * t785 + qJD(4) * t383, qJD(2) * t210 - qJD(3) * t786 + qJD(4) * t382, qJD(2) * t169 + qJD(3) * t694, qJD(2) * t139 + qJD(3) * t242 (qJD(2) * t1283 - qJD(5) * t1155 - t2622) * t1157, qJD(2) * t553 - qJD(4) * t593 + qJD(5) * t617, qJD(2) * t648 + qJD(4) * t642 - t1155 * t2618, t1946, qJD(2) * t649 - qJD(4) * t641 - t1157 * t2618, t2046, qJD(2) * t99 + qJD(3) * t594 + qJD(4) * t101 + qJD(5) * t202, qJD(2) * t98 + qJD(3) * t595 + qJD(4) * t100 + qJD(5) * t201, qJD(2) * t85 + qJD(3) * t520 + qJD(4) * t91, qJD(2) * t81 + qJD(3) * t106 + qJD(4) * t84 (qJD(2) * t1063 + qJD(4) * t1014 - qJD(6) * t902 - t2699) * t904, qJD(2) * t384 + qJD(4) * t379 + qJD(5) * t408 + qJD(6) * t438, qJD(2) * t467 + qJD(4) * t469 + qJD(5) * t458 - t2610 * t902 (qJD(2) * t1062 + qJD(4) * t1013 + qJD(6) * t904 - t2700) * t902, qJD(2) * t466 + qJD(4) * t468 + qJD(5) * t457 - t2610 * t904, t1946, qJD(2) * t54 + qJD(3) * t410 + qJD(4) * t56 + qJD(5) * t51 + qJD(6) * t93, qJD(2) * t53 + qJD(3) * t411 + qJD(4) * t55 + qJD(5) * t52 + qJD(6) * t92, qJD(2) * t40 + qJD(3) * t345 + qJD(4) * t41 + qJD(5) * t42, qJD(2) * t31 + qJD(3) * t65 + qJD(4) * t34 + qJD(5) * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1801, t2545, t2237 * t2530, -t1801, -t2237 * t2531, 0, -qJD(2) * t1764 + t2557, qJD(2) * t1763 - t2558, 0, 0 (qJD(1) * t2385 + t1831 * t1918) * t1728, t2587 + (-t1726 * t1831 + t1728 * t1835) * t2535, t2580 + (t1728 * t1836 + t1824 * t2389) * qJD(2) (qJD(1) * t2389 - t1835 * t1918) * t1726, t2579 + (-t1726 * t1836 + t1824 * t2385) * qJD(2) (-t2050 + t2624) * t2387, t1407 * t2624 + t2647 + t1386 * qJD(3) + (-pkin(2) * t1726 - t1567 * t1835 + t1753 * t2531) * t2535, -t1408 * t2624 + t2646 + t1384 * qJD(3) + (-pkin(2) * t1728 + t1567 * t1831 - t1754 * t2531) * t2535, t2651 + (-t1726 * t1754 - t1728 * t1753 + (-t1407 * t1831 + t1408 * t1835) * t1833) * qJD(2) - t1071, t2652 + (t1407 * t1753 + t1408 * t1754 - t1567 * t2765) * qJD(2) + t689 * qJD(3), -t2924 + (qJD(2) * t1673 + t2629) * t1493, t2645 + (-t1492 * t1673 - t1493 * t1671) * qJD(2) + t701, t2634 + (-t1493 * t2239 - t1626 * t1673) * qJD(2) + t845 * qJD(4), t2917, t2635 + (t1492 * t2239 + t1626 * t1671) * qJD(2) + t846 * qJD(4), -t2565 + (t1941 + t2051) * t1626, t2671 + (t1324 * t1626 + t1526 * t1492 + t951 * t1671 - t2239 * t720) * qJD(2) + t596 * qJD(3) + t237 * qJD(4), t2670 + (t1325 * t1626 + t1526 * t1493 + t951 * t1673 + t2239 * t721) * qJD(2) + t598 * qJD(3) + t236 * qJD(4), t2694 + (t1324 * t1493 - t1325 * t1492 - t1671 * t721 - t1673 * t720) * qJD(2) + t498 * qJD(3), t2695 + (-t1324 * t720 + t1325 * t721 + t1526 * t951) * qJD(2) + t114 * qJD(3), qJD(4) * t626 - t2923 + (t2625 + t2631) * t1283, t2656 + (-t1282 * t1554 - t1283 * t1552) * qJD(2) + t377 * qJD(4) + t501, t2649 + (t1283 * t1671 + t1492 * t1554) * qJD(2) + t490 * qJD(4) + t637 * qJD(5), t2919, t2648 + (-t1282 * t1671 - t1492 * t1552) * qJD(2) + t488 * qJD(4) + t638 * qJD(5), t2617 + t2917, t2731 + (t1229 * t1282 - t1492 * t926 + t1552 * t680 + t1671 * t439) * qJD(2) + t391 * qJD(3) + t80 * qJD(4) + t105 * qJD(5), t2732 + (t1229 * t1283 - t1492 * t927 + t1554 * t680 - t1671 * t440) * qJD(2) + t390 * qJD(3) + t79 * qJD(4) + t104 * qJD(5), t2734 + (-t1282 * t927 + t1283 * t926 - t1552 * t440 - t1554 * t439) * qJD(2) + t331 * qJD(3) + t50 * qJD(4), t2736 + (t1229 * t680 - t439 * t926 + t440 * t927) * qJD(2) + t64 * qJD(3) + t44 * qJD(4), qJD(4) * t415 + qJD(5) * t444 - t2929 + (t2626 + t2701) * t1063, t2665 + (-t1062 * t1393 - t1063 * t1391) * qJD(2) + t208 * qJD(4) + t213 * qJD(5) + t338, t2659 + (t1063 * t1552 + t1282 * t1393) * qJD(2) + t283 * qJD(4) + t312 * qJD(5) + t453 * qJD(6), qJD(4) * t414 + qJD(5) * t442 + t2929 + (t2627 + t2702) * t1062, t2660 + (-t1062 * t1552 - t1282 * t1391) * qJD(2) + t281 * qJD(4) + t311 * qJD(5) + t454 * qJD(6), t2609 + t2919, t2740 + (t1062 * t813 - t1282 * t580 + t1391 * t406 + t1552 * t232) * qJD(2) + t251 * qJD(3) + t20 * qJD(4) + t28 * qJD(5) + t60 * qJD(6), t2741 + (t1063 * t813 - t1282 * t581 + t1393 * t406 - t1552 * t233) * qJD(2) + t252 * qJD(3) + t18 * qJD(4) + t30 * qJD(5) + t59 * qJD(6), t2746 + (-t1062 * t581 + t1063 * t580 - t1391 * t233 - t1393 * t232) * qJD(2) + t200 * qJD(3) + t6 * qJD(4) + t8 * qJD(5), t2749 + (-t232 * t580 + t233 * t581 + t406 * t813) * qJD(2) + t14 * qJD(3) + t4 * qJD(4) + t2 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1386 * qJD(2) - t2031, t1384 * qJD(2) + t2030, t2162, qJD(2) * t689 + t2703, 0, 0, 0, 0, 0, 0, qJD(2) * t596 + qJD(4) * t891 - t2705, qJD(2) * t598 + qJD(4) * t890 - t2704, qJD(2) * t498 + t2706, t2669 + t114 * qJD(2) + (t1363 * t1839 - t2304 - t2436) * t2623, 0, 0, 0, 0, 0, 0, qJD(2) * t391 + qJD(4) * t523 + qJD(5) * t653 + t2714, qJD(2) * t390 + qJD(4) * t705 + qJD(5) * t651 + t2713, qJD(2) * t331 + qJD(4) * t386 + t2715, t2696 + t64 * qJD(2) + (t1169 * t1762 - t1832 * t2436 + t2595) * qJD(3) + t75 * qJD(4), 0, 0, 0, 0, 0, 0, qJD(2) * t251 + qJD(4) * t296 + qJD(5) * t370 + qJD(6) * t465 + t2725, qJD(2) * t252 + qJD(4) * t293 + qJD(5) * t371 + qJD(6) * t464 + t2724, qJD(2) * t200 + qJD(4) * t212 + qJD(5) * t241 + t2728, t2737 + t14 * qJD(2) + (-t1681 * t898 + t1682 * t899 + t2595) * qJD(3) + t25 * qJD(4) + t24 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2914, t2195, t845 * qJD(2) + t1387 * t1914, t2914, t846 * qJD(2) + t1389 * t1914, -t1606, qJD(2) * t237 + qJD(3) * t891 - qJD(4) * t634 + t2726, qJD(2) * t236 + qJD(3) * t890 + qJD(4) * t633 + t2727, 0, 0, qJD(2) * t626 + t2925 + (-t2506 - t2631) * t1019, t377 * qJD(2) + t1387 * t2302 - t2653 - t610, qJD(2) * t490 + t1389 * t2506 + t2707, t1017 * t2159 + t2933, qJD(2) * t488 + qJD(4) * t2474 - t2708, t1981, t2697 + t80 * qJD(2) + t523 * qJD(3) + (t1838 * t2255 - t1842 * t634) * qJD(4) + t246 * qJD(5), t2698 + t79 * qJD(2) + t705 * qJD(3) + (t1838 * t634 + t1842 * t2255) * qJD(4) + t248 * qJD(5), t50 * qJD(2) + t386 * qJD(3) + qJD(4) * t2191 + t2733, t2735 + t44 * qJD(2) + t75 * qJD(3) + (-pkin(4) * t634 + pkin(12) * t2191) * qJD(4), qJD(2) * t415 + qJD(5) * t511 - t2900 + (t2401 + t2701) * t1014, t2666 + t208 * qJD(2) + t321 * qJD(5) - t422 + (-t2604 - t2605) * t2506, t2657 + t283 * qJD(2) + (-t1014 * t1842 - t1828 * t2486) * qJD(4) + t395 * qJD(5) + t516 * qJD(6), qJD(2) * t414 + qJD(5) * t509 + t2900 + (t2402 + t2702) * t1013, t2658 + t281 * qJD(2) + (t1013 * t1842 + t1828 * t2520) * qJD(4) + t394 * qJD(5) + t517 * qJD(6) (t2854 + t2159) * t1017 + t2933, -t259 * t2479 + t2738 + t20 * qJD(2) + t296 * qJD(3) + t48 * qJD(5) + t73 * qJD(6) + (pkin(12) * t1013 + t1387 * t1737 + t2662) * t2506, t260 * t2479 + t2739 + t18 * qJD(2) + t293 * qJD(3) + t47 * qJD(5) + t71 * qJD(6) + (pkin(12) * t1014 + t1387 * t1738 + t2661) * t2506, t2745 + t6 * qJD(2) + t212 * qJD(3) + (-t1013 * t1738 + t1014 * t1737 + (-t1837 * t260 - t1841 * t259) * t1838) * qJD(4) + t16 * qJD(5), t2747 + t4 * qJD(2) + t25 * qJD(3) + (-t1737 * t259 + t1738 * t260 + t2760 * t455) * qJD(4) + t10 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2935, t2025, qJD(2) * t637 + t1155 * t2299, t2935, qJD(2) * t638 + t1157 * t2299, t1101, qJD(2) * t105 + qJD(3) * t653 + qJD(4) * t246 - qJD(5) * t368 + t2729, qJD(2) * t104 + qJD(3) * t651 + qJD(4) * t248 + qJD(5) * t367 + t2730, 0, 0, qJD(2) * t444 + qJD(4) * t511 - t2928 + (-t2614 - t2701) * t752, t213 * qJD(2) + t321 * qJD(4) - t1155 * t2615 + t2663 - t426, qJD(2) * t312 + qJD(4) * t395 + qJD(5) * t2598 + t2716, qJD(2) * t442 + qJD(4) * t509 + t2928 + (t2612 - t2702) * t751, qJD(2) * t311 + qJD(4) * t394 + qJD(5) * t2596 + t2717, t1929, t2743 + t28 * qJD(2) + t370 * qJD(3) + t48 * qJD(4) + (t1837 * t2253 - t1841 * t368) * qJD(5) + t108 * qJD(6), t2742 + t30 * qJD(2) + t371 * qJD(3) + t47 * qJD(4) + (t1837 * t368 + t1841 * t2253) * qJD(5) + t110 * qJD(6), t8 * qJD(2) + t241 * qJD(3) + t16 * qJD(4) + qJD(5) * t2194 + t2744, t2748 + t2 * qJD(2) + t24 * qJD(3) + t10 * qJD(4) + (-pkin(5) * t368 + pkin(13) * t2194) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2913, t1956, qJD(2) * t453 + qJD(4) * t516 + t2298 * t902, t2913, qJD(2) * t454 + qJD(4) * t517 + t2298 * t904, t711, qJD(2) * t60 + qJD(3) * t465 + qJD(4) * t73 + qJD(5) * t108 - qJD(6) * t195 + t2750, qJD(2) * t59 + qJD(3) * t464 + qJD(4) * t71 + qJD(5) * t110 + qJD(6) * t194 + t2751, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1801, -t2545, -qJD(1) * t2261, t1801, qJD(1) * t2262, 0, -t2557, t2558, 0, 0, -qJD(1) * t1889, -t2587, -t2580, qJD(1) * t1890, -t2579, qJD(1) * t1990, -qJD(3) * t1383 - t2647, qJD(3) * t1385 - t2646, -t1071 - t2651, -qJD(3) * t688 - t2652, -t1493 * t2629 - t2924, t701 - t2645, -qJD(4) * t844 - t2634, t2916, -qJD(4) * t843 - t2635, -t1626 * t1941 + t2565, qJD(3) * t597 - qJD(4) * t234 - t2671, qJD(3) * t599 - qJD(4) * t235 - t2670, -qJD(3) * t497 - t2694, -qJD(3) * t113 - t2695, qJD(4) * t627 - t1283 * t2631 - t2923, qJD(4) * t378 - t2656 + t501, qJD(4) * t491 - qJD(5) * t636 - t2649, t2918, qJD(4) * t489 - qJD(5) * t635 - t2648, -t2617 + t2916, -qJD(3) * t389 - qJD(4) * t77 - qJD(5) * t102 - t2731, -qJD(3) * t388 + qJD(4) * t78 - qJD(5) * t103 - t2732, -qJD(3) * t330 - qJD(4) * t49 - t2734, -qJD(3) * t63 - qJD(4) * t43 - t2736, -qJD(4) * t413 + qJD(5) * t445 - t1063 * t2701 - t2929, -qJD(4) * t207 + qJD(5) * t214 - t2665 + t338, qJD(4) * t282 - qJD(5) * t309 - qJD(6) * t452 - t2659, -qJD(4) * t412 + qJD(5) * t443 - t1062 * t2702 + t2929, qJD(4) * t280 - qJD(5) * t310 - qJD(6) * t451 - t2660, -t2609 + t2918, -qJD(3) * t250 - qJD(4) * t19 - qJD(5) * t27 - qJD(6) * t57 - t2740, -qJD(3) * t249 - qJD(4) * t17 + qJD(5) * t29 - qJD(6) * t58 - t2741, -qJD(3) * t199 - qJD(4) * t5 - qJD(5) * t7 - t2746, -qJD(3) * t13 - qJD(4) * t3 - qJD(5) * t1 - t2749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t2390, -qJD(3) * t2386, t1767 * qJD(3), -t1586 * qJD(3), -t2393, t1390 * qJD(4), t1671 * t2055, t2393, t1673 * t2055, 0, qJD(3) * t1420 + qJD(4) * t979, qJD(3) * t1421 + qJD(4) * t978, qJD(3) * t1309, qJD(3) * t760 (-qJD(5) * t1552 - t2621) * t1554, -qJD(4) * t1085 + qJD(5) * t1104, qJD(4) * t1172 - t1552 * t2616, t2011, -qJD(4) * t1171 - t1554 * t2616, t2393, qJD(3) * t1182 + qJD(4) * t421 + qJD(5) * t629, qJD(3) * t1181 + qJD(4) * t420 + qJD(5) * t628, qJD(3) * t1068 + qJD(4) * t350, qJD(3) * t459 + qJD(4) * t328 (qJD(4) * t1476 - qJD(6) * t1391 - t2619) * t1393, qJD(4) * t742 + qJD(5) * t781 + qJD(6) * t829, qJD(4) * t925 + qJD(5) * t897 - t1391 * t2608 (qJD(4) * t1475 + qJD(6) * t1393 - t2620) * t1391, qJD(4) * t924 + qJD(5) * t896 - t1393 * t2608, t2011, qJD(3) * t928 + qJD(4) * t206 + qJD(5) * t203 + qJD(6) * t374, qJD(3) * t929 + qJD(4) * t205 + qJD(5) * t204 + qJD(6) * t373, qJD(3) * t761 + qJD(4) * t140 + qJD(5) * t142, qJD(3) * t219 + qJD(4) * t129 + qJD(5) * t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2033, -t2032, -t2161, -t2169, 0, 0, 0, 0, 0, 0, qJD(4) * t1417 - t2171, qJD(4) * t1416 - t2170, t2175 (t1729 * t1839 + t1831 * t2313 - t2433) * t2623 + t2222, 0, 0, 0, 0, 0, 0, qJD(4) * t969 + qJD(5) * t1180 - t2179, qJD(4) * t1187 + qJD(5) * t1178 - t2180, qJD(4) * t778 - t2186 (t1632 * t1762 - t1832 * t2433 + t2564) * qJD(3) + t290 * qJD(4) + t2225, 0, 0, 0, 0, 0, 0, qJD(4) * t646 + qJD(5) * t698 + qJD(6) * t893 - t2213, qJD(4) * t643 + qJD(5) * t699 + qJD(6) * t892 + t2214, qJD(4) * t526 + qJD(5) * t555 - t2221 (-t1496 * t1681 + t1497 * t1682 + t2564) * qJD(3) + t115 * qJD(4) + t118 * qJD(5) + t2236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2915, t2174, t1671 * t2008 - t2641, t2915, t1673 * t2008 - t2642, t2566, qJD(3) * t1417 - qJD(4) * t1325 - t2217, qJD(3) * t1416 + qJD(4) * t1324 - t2216, 0, 0, t2711 + t2926 + (-t2506 - t2625) * t1486, t1671 * t2302 - t1086 + t2185, t1673 * t2506 - t2183, t1484 * t2158 + t2930, qJD(4) * t2467 - t2184, t1980, t969 * qJD(3) + (-t1325 * t1842 + t1838 * t2254) * qJD(4) + t685 * qJD(5) + t2226, t1187 * qJD(3) + (t1325 * t1838 + t1842 * t2254) * qJD(4) + t687 * qJD(5) + t2227, t778 * qJD(3) + qJD(4) * t2157 + t2230, t290 * qJD(3) + (-pkin(4) * t1325 + pkin(12) * t2157) * qJD(4) + t2231, -t2722 + qJD(5) * t940 - t2901 + (t2401 + t2626) * t1476, t667 * qJD(5) - t782 + (-t2577 - t2578) * t2506 + t2220 (-t1476 * t1842 - t1828 * t2484) * qJD(4) + t770 * qJD(5) + t947 * qJD(6) + t2211, -t2723 + qJD(5) * t938 + t2901 + (t2402 + t2627) * t1475 (t1475 * t1842 + t1828 * t2515) * qJD(4) + t769 * qJD(5) + t948 * qJD(6) + t2212 (t2854 + t2158) * t1484 + t2930, -t695 * t2479 + t646 * qJD(3) + t146 * qJD(5) + t266 * qJD(6) + (pkin(12) * t1475 + t1671 * t1737 + t2633) * t2506 + t2234, t696 * t2479 + t643 * qJD(3) + t145 * qJD(5) + t264 * qJD(6) + (pkin(12) * t1476 + t1671 * t1738 + t2632) * t2506 + t2235, t526 * qJD(3) + (-t1475 * t1738 + t1476 * t1737 + (-t1837 * t696 - t1841 * t695) * t1838) * qJD(4) + t97 * qJD(5) + t2241, t115 * qJD(3) + (-t1737 * t695 + t1738 * t696 + t2760 * t989) * qJD(4) + t95 * qJD(5) + t2242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2934, t2018, t1552 * t2297 - t2709, t2934, t1554 * t2297 - t2710, t1654 - t2628, qJD(3) * t1180 + qJD(4) * t685 - qJD(5) * t927 - t2224, qJD(3) * t1178 + qJD(4) * t687 + qJD(5) * t926 - t2223, 0, 0, t2720 + qJD(4) * t940 + t2927 + (-t2614 - t2626) * t1256, t667 * qJD(4) - t1552 * t2615 + t2218 - t801, qJD(4) * t770 + qJD(5) * t2570 - t2208, t2721 + qJD(4) * t938 - t2927 + (t2612 - t2627) * t1255, qJD(4) * t769 + qJD(5) * t2568 - t2207, t1926, t698 * qJD(3) + t146 * qJD(4) + (t1837 * t2252 - t1841 * t927) * qJD(5) + t417 * qJD(6) + t2233, t699 * qJD(3) + t145 * qJD(4) + (t1837 * t927 + t1841 * t2252) * qJD(5) + t419 * qJD(6) + t2232, t555 * qJD(3) + t97 * qJD(4) + qJD(5) * t2193 + t2240, t118 * qJD(3) + t95 * qJD(4) + (-pkin(5) * t927 + pkin(13) * t2193) * qJD(5) + t2243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2912, t1955, qJD(4) * t947 + t1391 * t2296 - t2718, t2912, qJD(4) * t948 + t1393 * t2296 - t2719, t2464 - t2630, qJD(3) * t893 + qJD(4) * t266 + qJD(5) * t417 - qJD(6) * t581 - t2228, qJD(3) * t892 + qJD(4) * t264 + qJD(5) * t419 + qJD(6) * t580 - t2229, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1383 * qJD(2) + t2031, -t1385 * qJD(2) - t2030, -t2162, qJD(2) * t688 - t2703, 0, 0, 0, 0, 0, 0, -qJD(2) * t597 - qJD(4) * t887 + t2705, -qJD(2) * t599 - qJD(4) * t889 + t2704, qJD(2) * t497 - t2706, qJD(2) * t113 - t2669, 0, 0, 0, 0, 0, 0, qJD(2) * t389 + qJD(4) * t522 - qJD(5) * t652 - t2714, qJD(2) * t388 + qJD(4) * t706 + qJD(5) * t650 - t2713, qJD(2) * t330 + qJD(4) * t385 - t2715, qJD(2) * t63 - qJD(4) * t74 - t2696, 0, 0, 0, 0, 0, 0, qJD(2) * t250 + qJD(4) * t295 + qJD(5) * t369 - qJD(6) * t462 - t2725, qJD(2) * t249 + qJD(4) * t294 + qJD(5) * t372 - qJD(6) * t463 - t2724, qJD(2) * t199 - qJD(4) * t211 + qJD(5) * t240 - t2728, qJD(2) * t13 + qJD(4) * t26 - qJD(5) * t23 - t2737; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2033, t2032, t2161, t2169, 0, 0, 0, 0, 0, 0, -qJD(4) * t1414 + t2171, -qJD(4) * t1415 + t2170, -t2175, -t2222, 0, 0, 0, 0, 0, 0, qJD(4) * t968 - qJD(5) * t1179 + t2179, qJD(4) * t1188 + qJD(5) * t1177 + t2180, qJD(4) * t777 + t2186, -qJD(4) * t289 - t2225, 0, 0, 0, 0, 0, 0, qJD(4) * t645 + qJD(5) * t697 - qJD(6) * t886 + t2213, qJD(4) * t644 + qJD(5) * t700 - qJD(6) * t888 - t2214, -qJD(4) * t525 + qJD(5) * t554 + t2221, qJD(4) * t116 - qJD(5) * t117 - t2236; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1544, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1223 + qJD(5) * t1219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t2536 - t2173, -t2290 - t2172, 0, 0, 0, 0, 0, 0, 0, 0 (-qJD(5) * t2439 - t1839 * t2479) * t1832 - t2196 (qJD(4) * t2497 - qJD(5) * t2438) * t1832 - t2178 (t2431 + t2430) * t1832 * qJD(4) + t2203 (t1804 + (-pkin(4) * t1839 + pkin(12) * t2430) * t1832) * qJD(4) + t2026, 0, 0, 0, 0, 0, 0 (-t1735 * t1842 + t1828 * t2289) * qJD(4) + t1293 * qJD(5) + t1440 * qJD(6) + t2209 (t1736 * t1842 + t1828 * t2288) * qJD(4) + t1294 * qJD(5) + t1439 * qJD(6) + t2210, t1239 * qJD(5) + (-t1735 * t1841 - t1736 * t1837) * t2506 + t2219 (-t1735 * t1737 + t1736 * t1738 + t1804) * qJD(4) + t825 * qJD(5) + t2028; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1762 * qJD(5) - t1838 * t2290 - t2181, t1761 * qJD(5) - t1842 * t2290 - t2182, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1293 - qJD(5) * t2482 + qJD(6) * t1615 - t2205, qJD(4) * t1294 + qJD(5) * t2512 + qJD(6) * t1616 - t2204, t1239 * qJD(4) + qJD(5) * t2300 + t2215, t825 * qJD(4) + (-pkin(5) * t1762 + pkin(13) * t2300) * qJD(5) + t2027; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1440 + qJD(5) * t1615 - qJD(6) * t1682 - t2202, qJD(4) * t1439 + qJD(5) * t1616 + qJD(6) * t1681 - t2201, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2914, -t2195, t844 * qJD(2) - t1387 * t1941, -t2914, t843 * qJD(2) - t1389 * t1941, -t1606, qJD(2) * t234 + qJD(3) * t887 - t2726, qJD(2) * t235 + qJD(3) * t889 - t2727, 0, 0, -qJD(2) * t627 + t1842 * t2412 + t2925, -qJD(2) * t378 + t2653 - t610, -qJD(2) * t491 + qJD(5) * t1019 - t2707, t1838 * t2398 + t2932, -qJD(2) * t489 - qJD(5) * t1017 + t2708, -t1981, qJD(2) * t77 - qJD(3) * t522 + qJD(5) * t245 - t2697, -qJD(2) * t78 - qJD(3) * t706 - qJD(5) * t247 - t2698, qJD(2) * t49 - qJD(3) * t385 - t2733, qJD(2) * t43 + qJD(3) * t74 - t2735, qJD(2) * t413 + qJD(5) * t512 - t1014 * t2701 - t2900, qJD(2) * t207 + qJD(5) * t322 - t2666 - t422, -qJD(2) * t282 - qJD(5) * t392 - qJD(6) * t515 - t2657, qJD(2) * t412 + qJD(5) * t510 - t1013 * t2702 + t2900, -qJD(2) * t280 - qJD(5) * t393 - qJD(6) * t514 - t2658 (t2601 + t2853) * t1017 + t2932, qJD(2) * t19 - qJD(3) * t295 - qJD(5) * t45 - qJD(6) * t72 - t2738, qJD(2) * t17 - qJD(3) * t294 + qJD(5) * t46 + qJD(6) * t70 - t2739, qJD(2) * t5 + qJD(3) * t211 - qJD(5) * t15 - t2745, qJD(2) * t3 - qJD(3) * t26 - qJD(5) * t9 - t2747; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2915, -t2174, -t1671 * t2051 + t2641, -t2915, -t1673 * t2051 + t2642, -t2566, qJD(3) * t1414 + t2217, qJD(3) * t1415 + t2216, 0, 0, t1842 * t2404 - t2711 + t2926, -t1086 - t2185, qJD(5) * t1486 + t2183, t1838 * t2405 + t2931, -qJD(5) * t1484 + t2184, -t1980, -qJD(3) * t968 + qJD(5) * t684 - t2226, -qJD(3) * t1188 - qJD(5) * t686 - t2227, -qJD(3) * t777 - t2230, qJD(3) * t289 - t2231, qJD(5) * t941 - t1476 * t2626 + t2722 - t2901, qJD(5) * t668 - t2220 - t782, -qJD(5) * t767 - qJD(6) * t946 - t2211, qJD(5) * t939 - t1475 * t2627 + t2723 + t2901, -qJD(5) * t768 - qJD(6) * t945 - t2212 (t2573 + t2853) * t1484 + t2931, -qJD(3) * t645 - qJD(5) * t143 - qJD(6) * t265 - t2234, -qJD(3) * t644 + qJD(5) * t144 + qJD(6) * t263 - t2235, qJD(3) * t525 - qJD(5) * t96 - t2241, -qJD(3) * t116 - qJD(5) * t94 - t2242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2173, t2172, 0, 0, 0, 0, 0, 0, 0, 0, t2196, t2178, -t2203, -t2026, 0, 0, 0, 0, 0, 0, -qJD(5) * t1292 - qJD(6) * t1437 - t2209, -qJD(5) * t1291 - qJD(6) * t1438 - t2210, qJD(5) * t1238 - t2219, qJD(5) * t826 - t2028; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2382, -t1813 * qJD(5), 0, -t2382, 0, 0, -pkin(4) * t2613, -pkin(4) * t2611, 0, 0, t1829 * t2382 - t2276, -qJD(6) * t1784 - 0.2e1 * t1842 * t2277, qJD(5) * t1786 + t1838 * t2400, t1827 * t2382 + t2276, -qJD(5) * t1785 + t1838 * t2399, -t2382, -qJD(5) * t1550 - qJD(6) * t1670, qJD(5) * t1549 - qJD(6) * t1669, -qJD(5) * t1317, qJD(5) * t1399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2097, -t2017, -t2163 + t2611, -t2097, -t2164 - t2613, -t2160, -pkin(12) * t2611 - t1995, pkin(12) * t2613 - t1994, 0, 0, -t2546 + (t1829 * t2506 + t1817) * t1842 + t2199, t1792 + (-0.2e1 * t2272 + t2615) * t1842 + t2206, qJD(5) * t2510 + t2021, t2546 + (t1827 * t2506 - t1817) * t1842 + t2200, qJD(5) * t2496 + t2022, -t1970 (t1837 * t2251 - t2457) * qJD(5) + t1653 * qJD(6) + t1953 (t1841 * t2251 + t2460) * qJD(5) + t1652 * qJD(6) + t1954, qJD(5) * t2155 + t1957 (-pkin(5) * t2754 + pkin(13) * t2155) * qJD(5) + t1964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2920, -t1907, t1837 * t2167 + t2197, t2920, t1841 * t2167 + t2198, t1822 + t2905, qJD(5) * t1653 - qJD(6) * t1738 - t1952, qJD(5) * t1652 + qJD(6) * t1737 - t1951, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2935, -t2025, qJD(2) * t636 + t2398 - t2622, -t2935, qJD(2) * t635 + qJD(4) * t1017 + t2412, t1101, qJD(2) * t102 + qJD(3) * t652 - qJD(4) * t245 - t2729, qJD(2) * t103 - qJD(3) * t650 + qJD(4) * t247 - t2730, 0, 0, -qJD(2) * t445 - qJD(4) * t512 + t1841 * t2426 - t2928, -qJD(2) * t214 - qJD(4) * t322 - t2663 - t426, qJD(2) * t309 + qJD(4) * t392 + qJD(6) * t752 - t2716, -qJD(2) * t443 - qJD(4) * t510 + t1837 * t2427 + t2928, qJD(2) * t310 + qJD(4) * t393 - qJD(6) * t751 - t2717, -t1929, qJD(2) * t27 - qJD(3) * t369 + qJD(4) * t45 + qJD(6) * t107 - t2743, -qJD(2) * t29 - qJD(3) * t372 - qJD(4) * t46 - qJD(6) * t109 - t2742, qJD(2) * t7 - qJD(3) * t240 + qJD(4) * t15 - t2744, qJD(2) * t1 + qJD(3) * t23 + qJD(4) * t9 - t2748; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2934, -t2018, t2405 - t2621 + t2709, -t2934, qJD(4) * t1484 + t2404 + t2710, t1654 + t2628, qJD(3) * t1179 - qJD(4) * t684 + t2224, -qJD(3) * t1177 + qJD(4) * t686 + t2223, 0, 0, -qJD(4) * t941 + t1841 * t2407 - t2720 + t2927, -qJD(4) * t668 - t2218 - t801, qJD(4) * t767 + qJD(6) * t1256 + t2208, -qJD(4) * t939 + t1837 * t2408 - t2721 - t2927, qJD(4) * t768 - qJD(6) * t1255 + t2207, -t1926, -qJD(3) * t697 + qJD(4) * t143 + qJD(6) * t416 - t2233, -qJD(3) * t700 - qJD(4) * t144 - qJD(6) * t418 - t2232, -qJD(3) * t554 + qJD(4) * t96 - t2240, qJD(3) * t117 + qJD(4) * t94 - t2243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2181, t2182, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1292 + t2205, qJD(4) * t1291 + t2204, -qJD(4) * t1238 - t2215, -qJD(4) * t826 - t2027; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2097, t2017, t2163, t2097, t2164, t2160, t1995, t1994, 0, 0, -t1818 * t1829 - t2199 - t2546, t1842 * t2247 + t1792 - t2206, -t2021 - t2399, -t1818 * t1827 - t2200 + t2546, -t2022 + t2400, t1970, -qJD(6) * t1680 - t1953, qJD(6) * t1679 - t1954, -t1957, -t1964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2384, t1814 * qJD(6), 0, -t2384, 0, 0, -pkin(5) * t2607, -pkin(5) * t2606, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2911, -t1906, -t1841 * t2295 + t2176, t2911, t1837 * t2295 + t2177, -t1991, -pkin(13) * t2606 - t1937, pkin(13) * t2607 - t1936, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2913, -t1956, qJD(2) * t452 + qJD(4) * t515 + t2427 - t2699, -t2913, qJD(2) * t451 + qJD(4) * t514 + t2426 + t2700, t711, qJD(2) * t57 + qJD(3) * t462 + qJD(4) * t72 - qJD(5) * t107 - t2750, qJD(2) * t58 + qJD(3) * t463 - qJD(4) * t70 + qJD(5) * t109 - t2751, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2912, -t1955, qJD(4) * t946 + t2408 - t2619 + t2718, -t2912, qJD(4) * t945 + t2407 + t2620 + t2719, t2464 + t2630, qJD(3) * t886 + qJD(4) * t265 - qJD(5) * t416 + t2228, qJD(3) * t888 - qJD(4) * t263 + qJD(5) * t418 + t2229, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1437 + t2202, qJD(4) * t1438 + t2201, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2920, t1907 (-t2402 + t2612) * t1842 - t2197, -t2920 (-t2401 - t2614) * t1842 - t2198, t1822 - t2905, qJD(5) * t1680 + t1952, -qJD(5) * t1679 + t1951, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2911, t1906, t1841 * t2479 - t2176, -t2911, -t1837 * t2479 - t2177, t1991, t1937, t1936, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t11;
