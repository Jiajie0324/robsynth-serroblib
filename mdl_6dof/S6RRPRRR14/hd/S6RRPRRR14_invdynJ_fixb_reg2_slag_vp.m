% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox (ehem. IRT-Maple-Toolbox)
% Datum: 2018-12-10 18:39
% Revision: bb42a8b95257d9bc83910d26e849f5825122f662 (2018-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR14_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR14_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR14_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_invdynJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2018-12-10 18:32:52
% EndTime: 2018-12-10 18:35:04
% DurationCPUTime: 62.90s
% Computational Cost: add. (114458->1241), mult. (327772->1734), div. (0->0), fcn. (284745->30), ass. (0->562)
t531 = sin(pkin(6));
t532 = cos(pkin(7));
t539 = cos(qJ(2));
t839 = cos(pkin(14));
t738 = t839 * t539;
t536 = sin(qJ(2));
t837 = sin(pkin(14));
t745 = t536 * t837;
t611 = t531 * (-t532 * t745 + t738);
t442 = qJD(1) * t611;
t535 = sin(qJ(4));
t734 = t837 * t539;
t739 = t839 * t536;
t612 = t531 * (t532 * t739 + t734);
t440 = qJD(1) * t612;
t530 = sin(pkin(7));
t838 = sin(pkin(8));
t751 = t530 * t838;
t816 = t531 * t536;
t672 = t751 * t816;
t840 = cos(pkin(8));
t604 = qJD(1) * t672 - t440 * t840;
t857 = cos(qJ(4));
t707 = t838 * t857;
t665 = qJD(4) * t707;
t689 = t840 * t839;
t660 = t530 * t689;
t750 = t530 * t837;
t865 = t535 * t750 - t857 * t660;
t805 = -qJD(4) * t865 - t442 * t857 + t532 * t665 - t535 * t604;
t736 = t838 * t532;
t416 = t535 * t736 + (t535 * t689 + t837 * t857) * t530;
t641 = t857 * t672;
t708 = t840 * t857;
t804 = qJD(1) * t641 + t416 * qJD(4) - t440 * t708 - t442 * t535;
t841 = cos(pkin(6));
t774 = pkin(1) * t841;
t515 = t539 * t774;
t506 = qJD(1) * t515;
t835 = qJ(3) * t532;
t758 = -pkin(10) - t835;
t690 = t536 * t758;
t661 = t531 * t690;
t424 = qJD(1) * t661 + t506;
t514 = t536 * t774;
t815 = t531 * t539;
t605 = t758 * t815 - t514;
t425 = t605 * qJD(1);
t836 = qJ(3) * t530;
t659 = pkin(2) * t536 - t539 * t836;
t798 = qJD(1) * t531;
t458 = t659 * t798;
t748 = t532 * t837;
t280 = t839 * t424 + t425 * t748 + t458 * t750;
t225 = pkin(11) * t604 + t280;
t749 = t532 * t839;
t752 = t530 * t839;
t279 = -t424 * t837 + t425 * t749 + t458 * t752;
t767 = t536 * t798;
t717 = t530 * t767;
t773 = pkin(11) * t840;
t227 = pkin(3) * t717 - t442 * t773 + t279;
t342 = -t530 * t425 + t532 * t458;
t772 = pkin(11) * t838;
t266 = t440 * pkin(3) - t442 * t772 + t342;
t473 = pkin(2) * t748 + qJ(3) * t752;
t407 = (t660 + t736) * pkin(11) + t473;
t510 = pkin(2) * t749;
t688 = t840 * t837;
t735 = t837 * qJ(3);
t420 = t532 * pkin(3) + t510 + (-pkin(11) * t688 - t735) * t530;
t687 = t838 * t837;
t450 = (-pkin(3) * t839 - pkin(11) * t687 - pkin(2)) * t530;
t270 = -t535 * t407 + t420 * t708 + t450 * t707;
t746 = t535 * t838;
t747 = t535 * t840;
t796 = qJD(3) * t530;
t870 = t857 * t225 + t227 * t747 + t266 * t746 - (-t535 * t688 + t839 * t857) * t796 - t270 * qJD(4);
t630 = t227 * t838 - t840 * t266 + t687 * t796;
t782 = pkin(6) + qJ(2);
t520 = cos(t782) / 0.2e1;
t783 = pkin(6) - qJ(2);
t733 = cos(t783);
t668 = t733 / 0.2e1 + t520;
t856 = sin(qJ(1));
t858 = cos(qJ(1));
t454 = t536 * t856 - t668 * t858;
t730 = sin(t782);
t699 = t730 / 0.2e1;
t731 = sin(t783);
t623 = t699 - t731 / 0.2e1;
t768 = t856 * t539;
t592 = t623 * t858 + t768;
t778 = pkin(7) + pkin(14);
t685 = sin(t778) / 0.2e1;
t779 = pkin(7) - pkin(14);
t721 = sin(t779);
t618 = t685 + t721 / 0.2e1;
t603 = t531 * t618;
t686 = cos(t779) / 0.2e1;
t722 = cos(t778);
t619 = t686 + t722 / 0.2e1;
t859 = t454 * t619 + t592 * t837 + t603 * t858;
t771 = t531 * t858;
t886 = -t454 * t530 + t532 * t771;
t252 = t859 * t838 - t840 * t886;
t534 = sin(qJ(5));
t538 = cos(qJ(5));
t483 = t685 - t721 / 0.2e1;
t484 = t686 - t722 / 0.2e1;
t304 = -t454 * t483 - t484 * t771 + t592 * t839;
t780 = pkin(8) + qJ(4);
t698 = sin(t780) / 0.2e1;
t781 = pkin(8) - qJ(4);
t729 = sin(t781);
t488 = t698 - t729 / 0.2e1;
t701 = cos(t780) / 0.2e1;
t732 = cos(t781);
t489 = t701 - t732 / 0.2e1;
t549 = t304 * t857 - t488 * t859 + t489 * t886;
t114 = t252 * t534 + t538 * t549;
t621 = t698 + t729 / 0.2e1;
t624 = t732 / 0.2e1 + t701;
t162 = t304 * t535 + t621 * t886 + t624 * t859;
t533 = sin(qJ(6));
t537 = cos(qJ(6));
t904 = t114 * t533 - t162 * t537;
t903 = t114 * t537 + t162 * t533;
t753 = t530 * t840;
t673 = t753 * t816;
t369 = -qJD(1) * t673 - t440 * t838;
t902 = pkin(12) * t369 - t870;
t901 = t804 * pkin(4) - pkin(12) * t805 + t630;
t271 = t857 * t407 + (t840 * t420 + t838 * t450) * t535;
t869 = -t535 * t225 + t227 * t708 + t266 * t707 + (t535 * t839 + t688 * t857) * t796 + t271 * qJD(4);
t467 = -t532 * t840 + t751 * t839;
t791 = qJD(5) * t538;
t792 = qJD(5) * t534;
t809 = t369 * t534 - t416 * t792 - t467 * t791 + t538 * t805;
t346 = t416 * t538 - t467 * t534;
t808 = qJD(5) * t346 - t538 * t369 + t534 * t805;
t115 = t252 * t538 - t534 * t549;
t333 = -t420 * t838 + t840 * t450;
t415 = -t532 * t707 + t865;
t241 = t415 * pkin(4) - t416 * pkin(12) + t333;
t255 = -pkin(12) * t467 + t271;
t878 = t241 * t791 - t255 * t792 + t901 * t534 + t538 * t902;
t874 = -t369 * pkin(4) + t869;
t727 = t841 * qJD(1);
t676 = t727 + qJD(2);
t653 = t676 * t530;
t766 = t539 * t798;
t453 = t532 * t766 + t653;
t860 = t767 * (-t530 ^ 2 - t532 ^ 2);
t348 = -t837 * t453 + t839 * t860;
t349 = t839 * t453 + t837 * t860;
t262 = t348 * t747 + t349 * t857;
t895 = -t262 + t665;
t634 = t676 * t839;
t706 = t837 * t798;
t494 = t536 * t706;
t712 = t531 * t749;
t670 = qJD(1) * t712;
t635 = -t539 * t670 + t494;
t586 = -t530 * t634 + t635;
t496 = t530 * t766;
t632 = -t532 * t676 + t496;
t898 = t840 * t586 + t838 * t632;
t625 = t532 * t734 + t739;
t610 = t625 * t531;
t620 = t837 * t653;
t574 = qJD(1) * t610 + t620;
t263 = t535 * t574 + t857 * t898;
t566 = qJD(5) + t263;
t897 = -pkin(13) * t804 - t878;
t896 = pkin(5) * t808 - pkin(13) * t809 + t874;
t526 = t531 ^ 2;
t894 = 0.2e1 * t526;
t664 = qJD(2) * t706;
t797 = qJD(2) * t536;
t887 = -t531 * t745 + t539 * t712;
t614 = qJDD(1) * t887 - t539 * t664 - t670 * t797;
t723 = t841 * qJDD(1);
t669 = t723 + qJDD(2);
t631 = t839 * t669;
t578 = -t530 * t631 - t614;
t785 = qJDD(1) * t539;
t759 = t531 * t785;
t493 = t530 * t759;
t628 = t532 * t669 - t493;
t787 = qJD(1) * qJD(2);
t761 = t536 * t787;
t714 = t531 * t761;
t596 = t530 * t714 + t628;
t269 = -t578 * t838 - t596 * t840 - qJDD(4);
t680 = qJD(2) * t758;
t814 = t532 * t539;
t615 = qJD(3) * t814 + t536 * t680;
t694 = qJD(2) * t727;
t674 = pkin(1) * t694;
t713 = pkin(1) * t723;
t775 = pkin(10) * t759 + t536 * t713 + t539 * t674;
t277 = (qJ(3) * t669 + qJD(3) * t676) * t530 + (qJD(1) * t615 + t785 * t835) * t531 + t775;
t505 = t539 * t713;
t638 = -t536 * t674 + t505;
t795 = qJD(3) * t536;
t764 = t532 * t795;
t301 = t669 * pkin(2) + (qJDD(1) * t690 + (t539 * t680 - t764) * qJD(1)) * t531 + t638;
t601 = qJD(2) * t659 - t530 * t795;
t655 = -pkin(2) * t539 - t536 * t836 - pkin(1);
t330 = (qJD(1) * t601 + qJDD(1) * t655) * t531;
t143 = t839 * t277 + t301 * t748 + t330 * t750;
t890 = t578 * t840 - t596 * t838;
t110 = -pkin(11) * t890 + t143;
t142 = -t277 * t837 + t301 * t749 + t330 * t752;
t606 = t532 * t536 * t664 - t669 * t750;
t608 = t625 * qJDD(1);
t705 = qJD(2) * t738;
t884 = -(qJD(1) * t705 + t608) * t531 + t606;
t559 = pkin(11) * t884;
t111 = pkin(3) * t596 + t559 * t840 + t142;
t220 = -t530 * t301 + t532 * t330 + qJDD(3);
t135 = pkin(3) * t578 + t559 * t838 + t220;
t801 = pkin(10) * t815 + t514;
t464 = t801 * qJD(1);
t373 = qJ(3) * t453 + t464;
t616 = pkin(2) * t841 + t661;
t385 = qJD(2) * pkin(2) + qJD(1) * t616 + t506;
t451 = t655 * t531;
t437 = qJD(1) * t451;
t251 = t839 * t373 + t385 * t748 + t437 * t750;
t179 = -pkin(11) * t898 + t251;
t250 = -t373 * t837 + t385 * t749 + t437 * t752;
t572 = pkin(11) * t574;
t183 = -pkin(3) * t632 - t572 * t840 + t250;
t313 = -t530 * t385 + t532 * t437 + qJD(3);
t218 = pkin(3) * t586 - t572 * t838 + t313;
t702 = qJD(4) * t746;
t704 = qJD(4) * t747;
t763 = qJD(4) * t857;
t30 = -t535 * t110 + t111 * t708 + t135 * t707 - t179 * t763 - t183 * t704 - t218 * t702;
t22 = pkin(4) * t269 - t30;
t129 = qJD(4) * t263 + t535 * t890 + t857 * t884;
t569 = t857 * t574;
t265 = -t535 * t898 + t569;
t597 = -t838 * t586 + t632 * t840 - qJD(4);
t594 = qJD(5) * t597;
t72 = t265 * t792 + t534 * t269 + (t129 + t594) * t538;
t726 = -t534 * t129 + t538 * t269;
t182 = t538 * t265 - t534 * t597;
t793 = qJD(5) * t182;
t73 = t726 + t793;
t10 = pkin(5) * t73 + pkin(13) * t72 + t22;
t556 = -t535 * t884 + t857 * t890;
t794 = qJD(4) * t535;
t130 = qJD(4) * t569 - t794 * t898 + t556;
t542 = qJDD(5) + t130;
t666 = qJD(4) * t708;
t626 = -t857 * t110 - t111 * t747 - t135 * t746 + t179 * t794 - t183 * t666 - t218 * t665;
t21 = -pkin(12) * t269 - t626;
t67 = -t111 * t838 + t840 * t135;
t37 = t130 * pkin(4) + t129 * pkin(12) + t67;
t80 = t857 * t179 + (t183 * t840 + t218 * t838) * t535;
t69 = -pkin(12) * t597 + t80;
t112 = -t183 * t838 + t840 * t218;
t75 = t263 * pkin(4) - t265 * pkin(12) + t112;
t658 = -t538 * t21 - t534 * t37 + t69 * t792 - t75 * t791;
t5 = pkin(13) * t542 - t658;
t41 = t534 * t75 + t538 * t69;
t34 = pkin(13) * t566 + t41;
t180 = t265 * t534 + t538 * t597;
t79 = -t535 * t179 + t183 * t708 + t218 * t707;
t68 = pkin(4) * t597 - t79;
t49 = t180 * pkin(5) - t182 * pkin(13) + t68;
t683 = t34 * t533 - t49 * t537;
t1 = -t683 * qJD(6) + t533 * t10 + t537 * t5;
t178 = qJD(6) + t180;
t893 = t683 * t178 + t1;
t868 = t534 * t241 + t538 * t255;
t877 = -qJD(5) * t868 - t534 * t902 + t901 * t538;
t892 = qJD(6) * t566 - t72;
t474 = t534 * t746 - t538 * t840;
t755 = t348 * t838;
t803 = -qJD(5) * t474 + t534 * t755 + t538 * t895;
t769 = t858 * t539;
t593 = -t623 * t856 + t769;
t633 = t856 * t668;
t599 = t536 * t858 + t633;
t551 = t593 * t837 + t599 * t619 - t603 * t856;
t770 = t531 * t856;
t889 = t599 * t530 + t532 * t770;
t891 = t551 * t838 + t840 * t889;
t40 = -t534 * t69 + t538 * t75;
t888 = -t40 * t566 - t658;
t261 = -t348 * t708 + t349 * t535;
t861 = t702 - t261;
t157 = pkin(4) * t265 + pkin(12) * t263;
t62 = t534 * t157 + t538 * t79;
t885 = pkin(12) * t792 + pkin(13) * t265 + t62;
t883 = -pkin(12) * qJD(6) * t538 - t80 + t566 * (pkin(5) * t534 - pkin(13) * t538);
t16 = t34 * t537 + t49 * t533;
t2 = -qJD(6) * t16 + t537 * t10 - t533 * t5;
t880 = -t16 * t178 - t2;
t137 = pkin(13) * t415 + t868;
t254 = t467 * pkin(4) - t270;
t345 = t416 * t534 + t538 * t467;
t154 = t345 * pkin(5) - t346 * pkin(13) + t254;
t81 = -t137 * t533 + t154 * t537;
t879 = qJD(6) * t81 + t896 * t533 - t537 * t897;
t82 = t137 * t537 + t154 * t533;
t853 = -qJD(6) * t82 + t533 * t897 + t896 * t537;
t851 = -pkin(5) * t804 - t877;
t875 = t41 * t566;
t873 = t180 * t566;
t872 = t182 * t566;
t540 = qJD(1) ^ 2;
t817 = t526 * t540;
t871 = t538 * t542;
t744 = t538 * t838;
t475 = t534 * t840 + t535 * t744;
t802 = qJD(5) * t475 - t348 * t744 + t534 * t895;
t564 = qJD(5) * t566;
t867 = -t542 * t534 - t538 * t564;
t866 = qJD(4) * t265 + qJDD(5) + t556;
t441 = qJD(2) * t612;
t864 = qJD(2) * t672 - t840 * t441;
t862 = (qJDD(2) + 0.2e1 * t723) * t531;
t466 = t801 * qJD(2);
t370 = -qJD(2) * t673 - t441 * t838;
t507 = qJD(2) * t515;
t743 = t841 * t530;
t351 = qJD(3) * t743 + t531 * t615 + t507;
t378 = qJD(2) * t605 - t531 * t764;
t412 = t601 * t531;
t231 = t839 * t351 + t378 * t748 + t412 * t750;
t187 = pkin(11) * t864 + t231;
t230 = -t351 * t837 + t378 * t749 + t412 * t752;
t443 = qJD(2) * t611;
t765 = t531 * t797;
t716 = t530 * t765;
t193 = pkin(3) * t716 - t443 * t773 + t230;
t410 = (t531 * t814 + t743) * qJ(3) + t801;
t422 = t515 + t616;
t273 = t839 * t410 + t422 * t748 + t451 * t750;
t662 = t839 * t743;
t413 = -t662 - t887;
t742 = t841 * t532;
t468 = t530 * t815 - t742;
t637 = -t413 * t840 - t468 * t838;
t215 = pkin(11) * t637 + t273;
t272 = -t410 * t837 + t422 * t749 + t451 * t752;
t414 = t743 * t837 + t610;
t219 = -t468 * pkin(3) - t414 * t773 + t272;
t308 = -t530 * t378 + t532 * t412;
t234 = t441 * pkin(3) - t443 * t772 + t308;
t339 = -t530 * t422 + t532 * t451;
t240 = t413 * pkin(3) - t414 * t772 + t339;
t50 = t857 * t187 + t193 * t747 - t215 * t794 + t219 * t666 + t234 * t746 + t240 * t665;
t45 = -pkin(12) * t370 + t50;
t120 = -t193 * t838 + t840 * t234;
t196 = t413 * t666 + t414 * t794 - t857 * t443 + t468 * t665 - t535 * t864;
t286 = t414 * t857 + t535 * t637;
t197 = -qJD(2) * t641 + qJD(4) * t286 + t441 * t708 + t535 * t443;
t66 = t197 * pkin(4) + t196 * pkin(12) + t120;
t344 = -t413 * t838 + t468 * t840;
t94 = t857 * t215 + t219 * t747 + t240 * t746;
t87 = -pkin(12) * t344 + t94;
t134 = -t219 * t838 + t840 * t240;
t285 = t413 * t708 + t414 * t535 + t468 * t707;
t90 = t285 * pkin(4) - t286 * pkin(12) + t134;
t852 = t534 * t90 + t538 * t87;
t14 = -qJD(5) * t852 - t45 * t534 + t538 * t66;
t855 = pkin(10) * t531;
t790 = qJD(6) * t533;
t38 = t182 * t790 - t533 * t542 - t537 * t892;
t848 = t38 * t533;
t789 = qJD(6) * t537;
t39 = t182 * t789 + t533 * t892 - t537 * t542;
t847 = t39 * t537;
t71 = qJDD(6) + t73;
t846 = t533 * t71;
t845 = t537 * t71;
t844 = t68 * t263;
t499 = -pkin(5) * t538 - pkin(13) * t534 - pkin(4);
t843 = t499 * t789 + t533 * t883 - t537 * t885;
t842 = -t499 * t790 + t533 * t885 + t537 * t883;
t121 = t182 * t533 - t537 * t566;
t834 = t121 * t178;
t833 = t121 * t533;
t123 = t537 * t182 + t533 * t566;
t832 = t123 * t121;
t831 = t162 * t534;
t830 = t162 * t538;
t307 = -t483 * t599 + t484 * t770 + t593 * t839;
t167 = t307 * t535 + t551 * t624 - t621 * t889;
t829 = t167 * t534;
t828 = t167 * t538;
t827 = t178 * t123;
t826 = t180 * t182;
t490 = t520 - t733 / 0.2e1;
t700 = t731 / 0.2e1;
t622 = t699 + t700;
t343 = t483 * t622 + t484 * t841 - t490 * t839;
t554 = t490 * t837 + t618 * t841 + t619 * t622;
t595 = t530 * t622 - t742;
t203 = t343 * t535 - t554 * t624 + t595 * t621;
t825 = t203 * t534;
t824 = t203 * t538;
t823 = t263 * t265;
t667 = t700 - t730 / 0.2e1;
t455 = t667 * t858 - t768;
t821 = t455 * t530;
t456 = -t667 * t856 - t769;
t820 = t456 * t530;
t819 = t489 * t530;
t818 = t490 * t530;
t813 = t533 * t538;
t812 = t537 * t538;
t811 = t346 * t790 - t415 * t789 - t533 * t804 - t537 * t809;
t288 = t346 * t537 + t415 * t533;
t810 = qJD(6) * t288 + t533 * t809 - t537 * t804;
t431 = -t533 * t475 - t537 * t707;
t807 = qJD(6) * t431 + t533 * t861 + t537 * t803;
t627 = -t537 * t475 + t533 * t707;
t806 = qJD(6) * t627 - t533 * t803 + t537 * t861;
t800 = t858 * pkin(1) + pkin(10) * t770;
t528 = t536 ^ 2;
t529 = t539 ^ 2;
t799 = t528 - t529;
t786 = qJDD(1) * t536;
t777 = g(1) * t858;
t776 = t539 * t817;
t762 = pkin(1) * t894;
t760 = t539 * t787;
t757 = -t534 * t21 + t538 * t37;
t728 = qJD(3) * t837;
t725 = t534 * t566;
t724 = t178 * t537;
t720 = t536 * t776;
t715 = t536 * t760;
t709 = -pkin(1) * t856 + pkin(10) * t771;
t703 = t531 * t540 * t841;
t544 = t307 * t857 - t488 * t551 - t489 * t889;
t117 = t534 * t544 - t538 * t891;
t696 = g(1) * t115 + g(2) * t117;
t695 = -g(1) * t162 + g(2) * t167;
t151 = -t263 * t813 - t537 * t265;
t693 = -t533 * t791 + t151;
t152 = -t263 * t812 + t265 * t533;
t692 = t537 * t791 - t152;
t684 = -t16 * t533 + t537 * t683;
t43 = pkin(13) * t285 + t852;
t216 = t286 * t534 + t538 * t344;
t217 = t286 * t538 - t344 * t534;
t93 = -t535 * t215 + t219 * t708 + t240 * t707;
t86 = t344 * pkin(4) - t93;
t58 = t216 * pkin(5) - t217 * pkin(13) + t86;
t18 = t43 * t537 + t533 * t58;
t17 = -t43 * t533 + t537 * t58;
t47 = -t534 * t87 + t538 * t90;
t61 = t157 * t538 - t534 * t79;
t145 = t217 * t537 + t285 * t533;
t149 = t241 * t538 - t255 * t534;
t675 = 0.2e1 * t727 + qJD(2);
t13 = t538 * t45 + t534 * t66 + t90 * t791 - t792 * t87;
t33 = -pkin(5) * t566 - t40;
t657 = -pkin(13) * t71 + t178 * t33;
t654 = -t760 - t786;
t652 = g(2) * t856 + t777;
t299 = -t554 * t838 - t595 * t840;
t548 = t343 * t857 + t488 * t554 + t489 * t595;
t651 = g(1) * t117 - g(2) * t115 - g(3) * (t299 * t538 - t534 * t548);
t118 = t534 * t891 + t538 * t544;
t147 = t299 * t534 + t538 * t548;
t650 = -g(1) * t118 - g(2) * t114 - g(3) * t147;
t334 = t454 * t837 + t455 * t619;
t335 = -t454 * t839 + t455 * t483;
t199 = t334 * t488 + t335 * t857 + t455 * t819;
t289 = -t334 * t838 - t455 * t753;
t138 = t199 * t534 - t289 * t538;
t336 = t456 * t619 + t599 * t837;
t337 = t456 * t483 - t599 * t839;
t201 = t336 * t488 + t337 * t857 + t456 * t819;
t290 = -t336 * t838 - t456 * t753;
t140 = t201 * t534 - t290 * t538;
t374 = t490 * t619 - t622 * t837;
t375 = t490 * t483 + t622 * t839;
t246 = t374 * t488 + t375 * t857 + t489 * t818;
t329 = -t374 * t838 - t490 * t753;
t175 = t246 * t534 - t329 * t538;
t649 = -g(1) * t140 - g(2) * t138 - g(3) * t175;
t648 = g(1) * t167 + g(2) * t162 + g(3) * t203;
t647 = g(1) * t544 + g(2) * t549 + g(3) * t548;
t609 = t530 * t621;
t198 = -t334 * t624 + t335 * t535 + t455 * t609;
t200 = -t336 * t624 + t337 * t535 + t456 * t609;
t245 = -t374 * t624 + t375 * t535 + t490 * t609;
t646 = -g(1) * t200 - g(2) * t198 - g(3) * t245;
t645 = g(1) * t456 + g(2) * t455 + g(3) * t490;
t613 = t69 * t791 + t75 * t792 - t757;
t6 = -pkin(5) * t542 + t613;
t640 = -t6 + t651;
t629 = pkin(10) * t714 - t775;
t617 = -t592 * pkin(2) + qJ(3) * t886 + t709;
t607 = pkin(13) * qJD(6) * t178 - t640;
t51 = -t535 * t187 + t193 * t708 - t215 * t763 - t219 * t704 + t234 * t707 - t240 * t702;
t446 = t454 * pkin(2);
t591 = t335 * pkin(3) + pkin(11) * t289 - qJ(3) * t821 - t446;
t448 = t599 * pkin(2);
t590 = t337 * pkin(3) + pkin(11) * t290 - qJ(3) * t820 - t448;
t482 = t622 * pkin(2);
t589 = t375 * pkin(3) + pkin(11) * t329 - qJ(3) * t818 + t482;
t588 = -pkin(3) * t304 - pkin(11) * t252 + t617;
t46 = t370 * pkin(4) - t51;
t584 = t530 * t586;
t583 = t593 * pkin(2) + qJ(3) * t889 + t800;
t582 = t199 * pkin(4) + t198 * pkin(12) + t591;
t581 = t201 * pkin(4) + t200 * pkin(12) + t590;
t580 = t246 * pkin(4) + t245 * pkin(12) + t589;
t579 = -pkin(4) * t549 - pkin(12) * t162 + t588;
t576 = t530 * t578;
t575 = t625 * t798 + t620;
t568 = t530 * t574 * t816;
t565 = t263 * t566;
t558 = t530 * t884;
t552 = -g(1) * t889 + g(2) * t886 + g(3) * t595;
t546 = t307 * pkin(3) + pkin(11) * t891 + t583;
t543 = pkin(4) * t544 + t167 * pkin(12) + t546;
t476 = -pkin(10) * t816 + t515;
t472 = -t530 * t735 + t510;
t465 = -pkin(10) * t765 + t507;
t463 = -pkin(10) * t767 + t506;
t460 = pkin(12) * t812 + t499 * t533;
t459 = -pkin(12) * t813 + t499 * t537;
t389 = t654 * t855 + t638;
t287 = t346 * t533 - t537 * t415;
t202 = t203 * pkin(4);
t176 = t246 * t538 + t329 * t534;
t160 = t167 * pkin(4);
t158 = t162 * pkin(4);
t144 = t217 * t533 - t537 * t285;
t141 = t201 * t538 + t290 * t534;
t139 = t199 * t538 + t289 * t534;
t136 = -pkin(5) * t415 - t149;
t105 = qJD(5) * t217 - t196 * t534 + t538 * t370;
t104 = t538 * t196 + t286 * t792 + t344 * t791 + t534 * t370;
t103 = pkin(5) * t182 + pkin(13) * t180;
t77 = t118 * t537 + t167 * t533;
t76 = -t118 * t533 + t167 * t537;
t60 = qJD(6) * t145 - t104 * t533 - t537 * t197;
t59 = t537 * t104 - t533 * t197 + t217 * t790 - t285 * t789;
t54 = -pkin(5) * t265 - t61;
t42 = -pkin(5) * t285 - t47;
t28 = t103 * t533 + t40 * t537;
t27 = t103 * t537 - t40 * t533;
t19 = t105 * pkin(5) + t104 * pkin(13) + t46;
t12 = -pkin(5) * t197 - t14;
t11 = pkin(13) * t197 + t13;
t8 = -qJD(5) * t41 + t757;
t4 = -qJD(6) * t18 - t11 * t533 + t19 * t537;
t3 = qJD(6) * t17 + t11 * t537 + t19 * t533;
t7 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t856 - g(2) * t858, t652, 0, 0 (qJDD(1) * t528 + 0.2e1 * t715) * t526 (t536 * t785 - t787 * t799) * t894, qJD(2) * t675 * t815 + t536 * t862 (qJDD(1) * t529 - 0.2e1 * t715) * t526, t539 * t862 - t675 * t765, t669 * t841, -t466 * t676 + t476 * t669 + t389 * t841 + g(1) * t592 - g(2) * t593 + (-t761 + t785) * t762, -g(1) * t454 + g(2) * t599 - t465 * t676 + t629 * t841 + t654 * t762 - t669 * t801 ((-t463 * qJD(2) + qJDD(1) * t801 - t629 + (-qJD(2) * t476 + t465) * qJD(1)) * t539 + (-t464 * qJD(2) - qJDD(1) * t476 - t389) * t536 - t652) * t531, t526 * qJDD(1) * pkin(1) ^ 2 - g(1) * t709 - g(2) * t800 + t389 * t476 - t463 * t466 + t464 * t465 - t629 * t801, -t606 * t414 + t443 * t620 + (t414 * t608 + (t414 * t705 + t443 * t625) * qJD(1)) * t531, t413 * t884 - t414 * t578 - t441 * t574 - t443 * t586, qJD(2) * t568 + t414 * t596 - t443 * t632 + t468 * t884, t413 * t578 + t441 * t586, -t413 * t596 + t441 * t632 + t468 * t578 - t584 * t765, -t468 * t596 - t632 * t716, g(1) * t304 - g(2) * t307 - t142 * t468 + t220 * t413 - t230 * t632 + t250 * t716 + t272 * t596 + t308 * t586 + t313 * t441 + t339 * t578, -g(1) * t859 + g(2) * t551 + t143 * t468 + t220 * t414 + t231 * t632 - t251 * t716 - t273 * t596 + t308 * t574 + t313 * t443 - t339 * t884, -g(1) * t886 - g(2) * t889 - t142 * t414 - t143 * t413 - t230 * t575 - t231 * t586 - t250 * t443 - t251 * t441 + t272 * t884 - t273 * t578, -g(1) * t617 - g(2) * t583 + t142 * t272 + t143 * t273 + t220 * t339 + t250 * t230 + t251 * t231 + t313 * t308, -t129 * t286 - t196 * t265, t129 * t285 - t130 * t286 + t196 * t263 - t197 * t265, t344 * t129 + t196 * t597 - t370 * t265 - t269 * t286, t130 * t285 + t197 * t263, t344 * t130 + t197 * t597 + t370 * t263 + t269 * t285, t269 * t344 + t370 * t597, g(1) * t549 - g(2) * t544 + t112 * t197 + t120 * t263 + t134 * t130 - t93 * t269 + t67 * t285 - t30 * t344 - t79 * t370 - t51 * t597, -t112 * t196 + t120 * t265 - t134 * t129 + t94 * t269 + t67 * t286 - t344 * t626 + t80 * t370 + t50 * t597 + t695, g(1) * t252 - g(2) * t891 + t93 * t129 - t94 * t130 + t79 * t196 - t80 * t197 - t50 * t263 - t51 * t265 + t285 * t626 - t30 * t286, -g(1) * t588 - g(2) * t546 + t112 * t120 + t67 * t134 + t30 * t93 + t80 * t50 + t79 * t51 - t626 * t94, -t104 * t182 - t217 * t72, t104 * t180 - t105 * t182 + t216 * t72 - t217 * t73, -t104 * t566 + t197 * t182 + t217 * t542 - t285 * t72, t105 * t180 + t216 * t73, -t105 * t566 - t180 * t197 - t216 * t542 - t73 * t285, t197 * t566 + t285 * t866, g(1) * t114 - g(2) * t118 + t68 * t105 + t14 * t566 + t46 * t180 + t40 * t197 + t22 * t216 + t8 * t285 + t47 * t542 + t86 * t73, -t68 * t104 - t13 * t566 + t46 * t182 - t41 * t197 + t22 * t217 + t285 * t658 - t542 * t852 - t86 * t72 + t696, t104 * t40 - t105 * t41 - t13 * t180 - t14 * t182 + t216 * t658 - t217 * t8 + t47 * t72 - t73 * t852 - t695, -g(1) * t579 - g(2) * t543 + t41 * t13 + t40 * t14 + t22 * t86 + t68 * t46 + t8 * t47 - t658 * t852, -t123 * t59 - t145 * t38, t121 * t59 - t123 * t60 + t144 * t38 - t145 * t39, t105 * t123 + t145 * t71 - t178 * t59 - t216 * t38, t121 * t60 + t144 * t39, -t105 * t121 - t144 * t71 - t178 * t60 - t216 * t39, t105 * t178 + t216 * t71, g(1) * t903 - g(2) * t77 - t683 * t105 + t12 * t121 + t6 * t144 + t17 * t71 + t4 * t178 + t2 * t216 + t33 * t60 + t42 * t39, -g(1) * t904 - g(2) * t76 - t1 * t216 - t16 * t105 + t12 * t123 + t6 * t145 - t3 * t178 - t18 * t71 - t33 * t59 - t42 * t38, -t1 * t144 - t121 * t3 - t123 * t4 - t145 * t2 - t16 * t60 + t17 * t38 - t18 * t39 - t59 * t683 - t696, t1 * t18 + t16 * t3 + t2 * t17 - t683 * t4 + t6 * t42 + t33 * t12 - g(1) * (-pkin(5) * t114 + t115 * pkin(13) + t579) - g(2) * (t118 * pkin(5) + t117 * pkin(13) + t543); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t720, t799 * t817, t531 * t786 - t539 * t703, t720, t536 * t703 + t759, t669, -t760 * t855 + t505 + t464 * t676 + g(1) * t633 + g(2) * t454 - g(3) * t622 + (-qJDD(1) * t855 + t777 + (-t694 + t817) * pkin(1)) * t536, pkin(1) * t776 + t463 * t676 + t629 - t645, 0, 0, -t442 * t574 - t558 * t837, t440 * t574 + t442 * t586 - t558 * t839 - t576 * t837, -qJD(1) * t568 + t442 * t632 - t532 * t884 + t596 * t750, -t440 * t586 - t576 * t839, -t493 * t752 - t440 * t496 - (qJD(1) * t662 - t494) * t717 + (t440 * t676 + (-t536 * t738 * t817 + 0.2e1 * t631) * t530 + t614) * t532, t628 * t532 - (t532 * t727 - t496) * t717, t472 * t628 + t142 * t532 - t342 * t635 - t313 * t440 + t279 * t632 - g(1) * t337 - g(2) * t335 - g(3) * t375 + (-t220 * t839 + t632 * t728 + t342 * t634 + (qJD(2) * t472 - t250) * t767 - t578 * pkin(2)) * t530, pkin(2) * t558 - g(1) * t336 - g(2) * t334 - g(3) * t374 - t143 * t532 + t220 * t750 + t251 * t717 - t313 * t442 - t342 * t574 - t473 * t596 + (qJD(3) * t752 - t280) * t632, -t839 * qJD(3) * t584 + g(1) * t820 + g(2) * t821 + g(3) * t818 - t142 * t750 + t143 * t752 + t250 * t442 + t251 * t440 + t280 * t586 + t472 * t884 - t473 * t578 + (t530 * t728 + t279) * t575, g(1) * t448 + g(2) * t446 - g(3) * t482 + t142 * t472 + t143 * t473 - t250 * t279 - t251 * t280 - t313 * t342 + (-t220 * pkin(2) + (-t250 * t837 + t251 * t839) * qJD(3) + t645 * qJ(3)) * t530, -t129 * t416 + t265 * t805, t129 * t415 - t130 * t416 - t263 * t805 - t265 * t804, t467 * t129 + t369 * t265 - t269 * t416 - t597 * t805, t130 * t415 + t263 * t804, t467 * t130 - t369 * t263 + t269 * t415 + t597 * t804, t269 * t467 - t369 * t597, -g(1) * t201 - g(2) * t199 - g(3) * t246 + t804 * t112 + t333 * t130 + t630 * t263 - t270 * t269 - t30 * t467 + t79 * t369 + t67 * t415 + t597 * t869, t805 * t112 - t333 * t129 + t630 * t265 + t271 * t269 - t80 * t369 + t67 * t416 - t467 * t626 - t597 * t870 - t646, -g(1) * t290 - g(2) * t289 - g(3) * t329 + t129 * t270 - t130 * t271 + t263 * t870 + t265 * t869 - t30 * t416 + t415 * t626 - t805 * t79 - t804 * t80, -g(1) * t590 - g(2) * t591 - g(3) * t589 + t112 * t630 + t30 * t270 - t271 * t626 + t67 * t333 - t79 * t869 - t80 * t870, t182 * t809 - t346 * t72, -t180 * t809 - t182 * t808 + t345 * t72 - t346 * t73, t182 * t804 + t346 * t542 - t415 * t72 + t566 * t809, t180 * t808 + t345 * t73, -t180 * t804 - t345 * t542 - t73 * t415 - t566 * t808, t415 * t866 + t566 * t804, -g(1) * t141 - g(2) * t139 - g(3) * t176 + t149 * t542 + t180 * t874 + t22 * t345 + t254 * t73 + t40 * t804 + t8 * t415 + t566 * t877 + t68 * t808, t182 * t874 + t22 * t346 - t254 * t72 - t41 * t804 + t415 * t658 - t542 * t868 - t566 * t878 + t68 * t809 - t649, t149 * t72 - t180 * t878 - t182 * t877 + t345 * t658 - t346 * t8 - t809 * t40 - t808 * t41 - t73 * t868 + t646, -g(1) * t581 - g(2) * t582 - g(3) * t580 + t8 * t149 + t22 * t254 + t40 * t877 + t41 * t878 - t658 * t868 + t68 * t874, -t123 * t811 - t288 * t38, t121 * t811 - t123 * t810 + t287 * t38 - t288 * t39, t123 * t808 - t178 * t811 + t288 * t71 - t345 * t38, t121 * t810 + t287 * t39, -t121 * t808 - t178 * t810 - t287 * t71 - t345 * t39, t178 * t808 + t345 * t71, t81 * t71 + t2 * t345 + t136 * t39 + t6 * t287 - g(1) * (t141 * t537 + t200 * t533) - g(2) * (t139 * t537 + t198 * t533) - g(3) * (t176 * t537 + t245 * t533) + t810 * t33 + t853 * t178 - t808 * t683 + t851 * t121, -t136 * t38 + t6 * t288 - t82 * t71 - t1 * t345 - g(1) * (-t141 * t533 + t200 * t537) - g(2) * (-t139 * t533 + t198 * t537) - g(3) * (-t176 * t533 + t245 * t537) - t811 * t33 - t879 * t178 - t808 * t16 + t851 * t123, -t1 * t287 - t121 * t879 - t123 * t853 - t16 * t810 - t2 * t288 + t38 * t81 - t39 * t82 - t683 * t811 + t649, t1 * t82 + t2 * t81 + t6 * t136 - g(1) * (t141 * pkin(5) + t140 * pkin(13) + t581) - g(2) * (t139 * pkin(5) + t138 * pkin(13) + t582) - g(3) * (t176 * pkin(5) + t175 * pkin(13) + t580) + t851 * t33 + t879 * t16 - t853 * t683; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t348 * t632 + t578, -t349 * t632 - t884, t348 * t575 + t349 * t586, -t250 * t348 - t251 * t349 + t220 + t552, 0, 0, 0, 0, 0, 0, t840 * t130 + t263 * t755 - t269 * t707 + t597 * t861, -t840 * t129 + t265 * t755 + t269 * t746 + t597 * t895, t129 * t707 - t130 * t746 - t261 * t265 + t262 * t263 + (-t263 * t707 + t265 * t746) * qJD(4), -t626 * t746 + t30 * t707 + t67 * t840 - t80 * t262 + t79 * t261 + t112 * t755 + (t707 * t80 - t746 * t79) * qJD(4) + t552, 0, 0, 0, 0, 0, 0, t180 * t861 - t474 * t542 - t566 * t802 - t707 * t73, t182 * t861 - t475 * t542 - t566 * t803 + t707 * t72, -t180 * t803 + t182 * t802 - t474 * t72 - t475 * t73, -t22 * t707 - t802 * t40 + t803 * t41 - t8 * t474 - t475 * t658 + t68 * t861 + t552, 0, 0, 0, 0, 0, 0, t121 * t802 + t178 * t806 + t39 * t474 + t431 * t71, t123 * t802 - t178 * t807 - t38 * t474 + t627 * t71, -t121 * t807 - t123 * t806 + t38 * t431 + t39 * t627, -t1 * t627 + t16 * t807 + t2 * t431 + t33 * t802 + t6 * t474 - t683 * t806 + t552; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t823, -t263 ^ 2 + t265 ^ 2, -t263 * t597 - t129, -t823, -t265 * t597 - t130, -t269, -t112 * t265 - t597 * t80 + t30 + t648, t112 * t263 - t597 * t79 + t626 + t647, 0, 0, -t534 * t72 + t538 * t872 (-t72 - t873) * t538 + (-t73 - t872) * t534, -t265 * t182 + t538 * t565 - t867, t180 * t725 - t538 * t73, t180 * t265 + t871 + (-t564 - t565) * t534, -t566 * t265, -pkin(4) * t73 + pkin(12) * t867 + g(1) * t828 + g(2) * t830 + g(3) * t824 - t80 * t180 - t22 * t538 - t40 * t265 + t534 * t844 - t566 * t61 + t68 * t792, pkin(4) * t72 - g(1) * t829 - g(2) * t831 - g(3) * t825 - t80 * t182 + t22 * t534 + t41 * t265 + t538 * t844 + t566 * t62 + t68 * t791 + (t566 * t792 - t871) * pkin(12), t180 * t62 + t182 * t61 + ((-t73 + t793) * pkin(12) + t888) * t538 + (-t8 - t875 + (qJD(5) * t180 - t72) * pkin(12)) * t534 - t647, -t22 * pkin(4) + g(1) * t160 + g(2) * t158 + g(3) * t202 - t40 * t61 - t41 * t62 - t68 * t80 + (-t8 * t534 - t658 * t538 + (-t40 * t538 - t41 * t534) * qJD(5) - t647) * pkin(12), -t38 * t534 * t537 + (-t534 * t790 + t692) * t123, t121 * t152 + t123 * t151 + (-t121 * t537 - t123 * t533) * t791 + (t848 - t847 + (-t123 * t537 + t833) * qJD(6)) * t534, t38 * t538 + t692 * t178 + (t123 * t566 - t178 * t790 + t845) * t534, t39 * t533 * t534 + (t534 * t789 - t693) * t121, t39 * t538 + t693 * t178 + (-t121 * t566 - t178 * t789 - t846) * t534, t178 * t725 - t538 * t71, -t54 * t121 - t33 * t151 + t459 * t71 + t842 * t178 - t647 * t533 + (-t2 + (pkin(12) * t121 + t33 * t533) * qJD(5) + t648 * t537) * t538 + (pkin(12) * t39 + t33 * t789 + t6 * t533 - t566 * t683) * t534, -t54 * t123 - t33 * t152 - t460 * t71 - t843 * t178 - t647 * t537 + (t1 + (pkin(12) * t123 + t33 * t537) * qJD(5) - t648 * t533) * t538 + (-pkin(12) * t38 - t16 * t566 - t33 * t790 + t6 * t537) * t534, -t683 * t152 + t151 * t16 + t38 * t459 - t39 * t460 - t842 * t123 - t843 * t121 + t684 * t791 + (-t1 * t533 - t2 * t537 + (-t16 * t537 - t533 * t683) * qJD(6) + t648) * t534, t1 * t460 + t2 * t459 - t33 * t54 - g(1) * (-pkin(5) * t828 - pkin(13) * t829 - t160) - g(2) * (-pkin(5) * t830 - pkin(13) * t831 - t158) - g(3) * (-pkin(5) * t824 - pkin(13) * t825 - t202) + t843 * t16 - t842 * t683 + (t33 * t791 + t534 * t6 - t647) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t826, -t180 ^ 2 + t182 ^ 2, -t72 + t873, -t826, -t265 * t791 + t534 * t594 - t726 + t872, t542, -t68 * t182 - t613 + t651 + t875, t68 * t180 - t650 - t888, 0, 0, t123 * t724 - t848 (-t38 - t834) * t537 + (-t39 - t827) * t533, -t123 * t182 + t178 * t724 + t846, t178 * t833 - t847, -t178 ^ 2 * t533 + t121 * t182 + t845, -t178 * t182, -pkin(5) * t39 - t121 * t41 - t178 * t27 + t182 * t683 + t533 * t657 - t537 * t607, pkin(5) * t38 - t123 * t41 + t16 * t182 + t178 * t28 + t533 * t607 + t537 * t657, t121 * t28 + t123 * t27 + ((qJD(6) * t123 - t39) * pkin(13) + t893) * t537 + ((qJD(6) * t121 - t38) * pkin(13) + t880) * t533 + t650, t683 * t27 - t16 * t28 - t33 * t41 + t640 * pkin(5) + (qJD(6) * t684 + t1 * t537 - t2 * t533 + t650) * pkin(13); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t832, -t121 ^ 2 + t123 ^ 2, -t38 + t834, -t832, -t39 + t827, t71, -t33 * t123 - g(1) * t76 + g(2) * t904 - g(3) * (-t147 * t533 + t203 * t537) - t880, t33 * t121 + g(1) * t77 + g(2) * t903 - g(3) * (-t147 * t537 - t203 * t533) - t893, 0, 0;];
tau_reg  = t7;
