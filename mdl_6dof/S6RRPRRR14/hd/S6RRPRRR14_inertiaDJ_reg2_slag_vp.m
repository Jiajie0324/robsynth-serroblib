% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox (ehem. IRT-Maple-Toolbox)
% Datum: 2019-01-03 10:26
% Revision: 5fdbc45bcf2cc60deefd7ac2d71d743ed41bf7e4 (2018-12-21)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR14_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_inertiaDJ_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-01-03 10:20:44
% EndTime: 2019-01-03 10:22:00
% DurationCPUTime: 28.69s
% Computational Cost: add. (51783->800), mult. (159823->1464), div. (0->0), fcn. (171223->16), ass. (0->329)
t132 = sin(pkin(8));
t135 = cos(pkin(14));
t400 = cos(pkin(7));
t333 = t135 * t400;
t322 = pkin(2) * t333;
t246 = pkin(3) * t400 + t322;
t399 = cos(pkin(8));
t353 = t399 * pkin(11);
t131 = sin(pkin(14));
t133 = sin(pkin(7));
t396 = t131 * t133;
t212 = (-t353 - qJ(3)) * t396 + t246;
t359 = -pkin(3) * t135 - pkin(2);
t397 = t131 * t132;
t255 = (-pkin(11) * t397 + t359) * t133;
t448 = t132 * t255 + t212 * t399;
t332 = t135 * t399;
t336 = t132 * t400;
t447 = t133 * t332 + t336;
t420 = sin(qJ(4));
t421 = cos(qJ(4));
t262 = t420 * t396 - t447 * t421;
t422 = t133 * (t421 * t131 + t420 * t332) + t420 * t336;
t444 = t422 * qJD(4);
t134 = sin(pkin(6));
t138 = sin(qJ(2));
t331 = t138 * t400;
t310 = t134 * t331;
t286 = qJD(2) * t310;
t114 = t131 * t286;
t141 = cos(qJ(2));
t384 = qJD(2) * t141;
t342 = t134 * t384;
t283 = t135 * t342 - t114;
t388 = t131 * t342 + t135 * t286;
t293 = t388 * t399;
t385 = qJD(2) * t138;
t343 = t134 * t385;
t319 = t133 * t343;
t426 = t132 * t319 - t293;
t329 = t141 * t400;
t257 = -t131 * t138 + t135 * t329;
t401 = cos(pkin(6));
t334 = t135 * t401;
t218 = t133 * t334 + t134 * t257;
t208 = t218 * t399;
t306 = t134 * t329;
t335 = t133 * t401;
t244 = t306 + t335;
t391 = t135 * t138;
t361 = t134 * t391;
t219 = t131 * t244 + t361;
t392 = t134 * t141;
t122 = t133 * t392;
t263 = -t400 * t401 + t122;
t254 = t132 * t263;
t69 = t219 * t421 + (t208 - t254) * t420;
t48 = qJD(4) * t69 + t283 * t420 - t421 * t426;
t209 = t219 * t420;
t243 = t421 * t263;
t68 = t132 * t243 - t421 * t208 + t209;
t446 = t262 * t48 + t444 * t68;
t137 = sin(qJ(5));
t140 = cos(qJ(5));
t216 = pkin(11) * t219;
t256 = t263 * pkin(3);
t265 = t134 * (-qJ(3) * t400 - pkin(10));
t358 = pkin(1) * t401;
t323 = t141 * t358;
t223 = t138 * t265 + t323;
t354 = t401 * pkin(2);
t213 = t354 + t223;
t360 = -pkin(2) * t141 - pkin(1);
t394 = t133 * t138;
t250 = (-qJ(3) * t394 + t360) * t134;
t179 = t133 * t250 + t400 * t213;
t324 = t138 * t358;
t252 = -pkin(10) * t392 - t324;
t203 = qJ(3) * t244 - t252;
t62 = -t131 * t203 + t135 * t179;
t163 = t216 * t399 + t256 - t62;
t160 = t163 * t399;
t156 = t420 * t160;
t63 = t131 * t179 + t135 * t203;
t164 = pkin(11) * t208 + t63;
t215 = t218 * pkin(3);
t176 = -t133 * t213 + t250 * t400 - t215;
t235 = t218 * t132 + t263 * t399;
t227 = t235 * pkin(12);
t239 = pkin(10) * t394 + t360 * t400;
t247 = t323 + t354;
t125 = t133 ^ 2;
t303 = t400 ^ 2 + t125;
t307 = t131 * t329;
t309 = t131 * t335;
t311 = t68 * pkin(4) - t69 * pkin(12);
t393 = t134 * t138;
t366 = pkin(10) * t393;
t230 = t247 - t366;
t284 = -t134 * pkin(1) - pkin(2) * t392;
t443 = t131 * t252 + (t133 * t284 + t400 * t230) * t135 - t256;
t15 = -(t137 * (pkin(11) * (-t132 * t209 - t243) + t420 * ((-pkin(3) * t334 - t247) * t133 + (-pkin(3) * t257 + t239) * t134)) + (-(t309 + (t303 * t391 + t307) * t134) * qJ(3) + t443) * t140) * t132 + t140 * (t176 * t399 + t311) - t137 * (t421 * t164 - t156 - t227);
t356 = t132 * t420;
t109 = t137 * t399 + t140 * t356;
t330 = t140 * t399;
t355 = t137 * t420;
t108 = t132 * t355 - t330;
t339 = qJD(4) * t421;
t312 = t140 * t339;
t211 = -qJD(5) * t108 + t132 * t312;
t376 = qJD(5) * t140;
t314 = t132 * t339;
t380 = qJD(5) * t109;
t94 = t137 * t314 + t380;
t268 = t108 * t376 + t94 * t137;
t378 = qJD(5) * t137;
t445 = -t109 * t378 + t211 * t140 + t268;
t175 = -t262 * pkin(4) + pkin(12) * t422 + t132 * t212 - t255 * t399;
t383 = qJD(3) * t133;
t351 = t131 * t383;
t285 = t399 * t351;
t382 = qJD(3) * t135;
t350 = t133 * t382;
t395 = t133 * t135;
t107 = pkin(2) * t131 * t400 + qJ(3) * t395;
t202 = t447 * pkin(11) + t107;
t425 = t420 * t202 - t448 * t421;
t55 = qJD(4) * t425 + t420 * t285 - t421 * t350;
t440 = qJD(5) * t175 + t55;
t162 = -pkin(11) * t254 + t164;
t173 = -t132 * t216 + t176;
t171 = t132 * t173;
t31 = -t420 * t162 + (-t160 + t171) * t421;
t27 = pkin(4) * t235 - t31;
t51 = t137 * t69 + t140 * t235;
t52 = -t137 * t235 + t69 * t140;
t146 = t51 * pkin(5) - t52 * pkin(13) + t27;
t32 = t421 * t162 + t420 * t171 - t156;
t148 = -t227 + t32;
t270 = t138 * t303;
t194 = -t309 + (-t135 * t270 - t307) * t134;
t187 = t194 * qJD(3);
t217 = pkin(2) * t310 - t133 * t252;
t251 = -t323 + t366;
t398 = qJ(3) * t132;
t36 = pkin(3) * t293 - t132 * t187 + (-t132 * (t131 * t251 + t252 * t333 + (pkin(2) * t361 + pkin(3) * t393) * t133) + t399 * t217 - (-t135 * t141 * t303 + t131 * t331) * t134 * t398) * qJD(2);
t49 = -qJD(4) * t68 + t283 * t421 + t420 * t426;
t435 = -t48 * pkin(4) + t49 * pkin(12) + qJD(5) * t148 - t36;
t152 = t132 * t163 + t173 * t399 + t311;
t183 = qJD(2) * t223 + qJD(3) * t244;
t431 = (-qJD(3) * t310 + (t141 * t265 - t324) * qJD(2)) * t400 + t133 * t134 * (-t138 * t383 + (-qJ(3) * t133 * t141 + pkin(2) * t138) * qJD(2));
t161 = pkin(11) * t426 + t131 * t431 + t135 * t183;
t419 = pkin(11) * t132;
t433 = (pkin(3) * t319 - t131 * t183 + t135 * t431 - t283 * t353) * t399 + t132 * (t114 * t419 + t388 * pkin(3) + (t133 * t324 + (pkin(2) * t331 + (pkin(10) * t133 - t135 * t419) * t141) * t134) * qJD(2));
t17 = -t31 * qJD(4) - t421 * t161 - t420 * t433;
t253 = -t388 * t132 - t319 * t399;
t436 = pkin(12) * t253 - qJD(5) * t152 + t17;
t5 = t435 * t137 + t436 * t140;
t437 = -t48 * pkin(13) - qJD(6) * t146 + t5;
t264 = t132 * t395 - t399 * t400;
t59 = pkin(4) * t264 + t425;
t199 = t137 * t422;
t78 = t140 * t264 + t199;
t79 = -t137 * t264 + t140 * t422;
t167 = t78 * pkin(5) - t79 * pkin(13) + t59;
t61 = t421 * t202 + t448 * t420;
t172 = -pkin(12) * t264 + t61;
t315 = t132 * t351;
t89 = t262 * qJD(4);
t432 = -pkin(4) * t444 - t89 * pkin(12) + qJD(5) * t172 - t315;
t29 = t432 * t137 + t440 * t140;
t434 = -pkin(13) * t444 - qJD(6) * t167 + t29;
t240 = qJD(5) * t264 + t89;
t88 = qJD(5) * t199;
t423 = t140 * t240 + t88;
t428 = -qJD(6) * t262 + t423;
t249 = qJD(5) * t262;
t427 = t137 * t444 + t140 * t249;
t389 = t79 * qJD(5);
t67 = -t137 * t89 + t389;
t277 = -t140 * t67 + t78 * t378;
t136 = sin(qJ(6));
t127 = t136 ^ 2;
t139 = cos(qJ(6));
t129 = t139 ^ 2;
t387 = t127 - t129;
t328 = qJD(6) * t387;
t418 = pkin(12) * t137;
t417 = pkin(12) * t140;
t16 = t137 * t152 + t140 * t148;
t43 = -t137 * t175 + t140 * t172;
t416 = t108 * t94;
t34 = -t69 * t378 - t253 * t137 + (-qJD(5) * t235 + t49) * t140;
t375 = qJD(6) * t136;
t21 = t136 * t48 - t52 * t375 + (qJD(6) * t68 + t34) * t139;
t415 = t136 * t21;
t40 = t136 * t52 - t68 * t139;
t414 = t136 * t40;
t45 = -t136 * t444 + t139 * t428 + t375 * t79;
t413 = t136 * t45;
t70 = t136 * t79 - t139 * t262;
t412 = t136 * t70;
t411 = t137 * t34;
t41 = t136 * t68 + t139 * t52;
t20 = qJD(6) * t41 + t136 * t34 - t48 * t139;
t410 = t139 * t20;
t409 = t139 * t21;
t408 = t139 * t41;
t407 = t139 * t45;
t374 = qJD(6) * t139;
t46 = -t136 * t428 - t139 * t444 + t374 * t79;
t406 = t139 * t46;
t71 = t136 * t262 + t139 * t79;
t405 = t139 * t71;
t33 = qJD(5) * t52 + t49 * t137 + t140 * t253;
t404 = t140 * t33;
t390 = t139 * t140;
t128 = t137 ^ 2;
t386 = -t140 ^ 2 + t128;
t379 = qJD(5) * t136;
t377 = qJD(5) * t139;
t373 = qJD(6) * t140;
t372 = 0.2e1 * t51 * t33;
t371 = 0.2e1 * t68 * t48;
t370 = 0.2e1 * t78 * t67;
t369 = -0.2e1 * pkin(4) * qJD(5);
t368 = -0.2e1 * pkin(5) * qJD(6);
t367 = t136 * t417;
t365 = pkin(12) * t390;
t364 = pkin(12) * t378;
t363 = pkin(12) * t376;
t357 = t132 * t421;
t126 = t134 ^ 2;
t352 = t126 * t384;
t349 = t139 * t376;
t348 = t136 * t373;
t347 = t137 * t374;
t346 = t139 * t373;
t341 = t136 * t374;
t340 = t137 * t376;
t338 = qJD(4) * t420;
t337 = qJD(5) * t421;
t327 = t386 * qJD(5);
t326 = 0.2e1 * t340;
t325 = t136 * t357;
t320 = t125 * t343;
t318 = t139 * t340;
t317 = t128 * t341;
t316 = t138 * t352;
t313 = t132 * t338;
t304 = qJD(2) * t134 * t401;
t302 = -pkin(5) * t140 - pkin(13) * t137;
t301 = pkin(5) * t137 - pkin(13) * t140;
t13 = pkin(13) * t68 + t16;
t7 = -t136 * t13 + t139 * t146;
t8 = t139 * t13 + t136 * t146;
t300 = -t136 * t8 - t139 * t7;
t299 = t33 * t78 + t51 * t67;
t39 = pkin(13) * t262 + t43;
t22 = -t136 * t39 + t139 * t167;
t23 = t136 * t167 + t139 * t39;
t298 = -t136 * t23 - t139 * t22;
t297 = -t136 * t41 - t139 * t40;
t296 = -t136 * t71 - t139 * t70;
t259 = t136 * t109 + t139 * t357;
t96 = t139 * t109 - t325;
t295 = -t136 * t96 + t139 * t259;
t30 = t440 * t137 - t432 * t140;
t294 = -t30 * t137 - t29 * t140;
t291 = -0.2e1 * t400 * t383;
t288 = pkin(4) - t302;
t261 = t139 * t288;
t100 = -t261 - t367;
t101 = -t136 * t288 + t365;
t290 = -t100 * t139 - t101 * t136;
t12 = -t68 * pkin(5) - t15;
t6 = t436 * t137 - t435 * t140;
t4 = -t48 * pkin(5) - t6;
t282 = t12 * t374 + t136 * t4;
t281 = t12 * t375 - t139 * t4;
t280 = t378 * t51 - t404;
t279 = t137 * t48 + t376 * t68;
t278 = -t140 * t48 + t378 * t68;
t26 = -pkin(5) * t444 - t30;
t42 = -t137 * t172 - t140 * t175;
t38 = -pkin(5) * t262 - t42;
t276 = t136 * t26 + t374 * t38;
t275 = -t139 * t26 + t375 * t38;
t274 = t136 * t33 + t374 * t51;
t273 = -t139 * t33 + t375 * t51;
t272 = t136 * t67 + t374 * t78;
t271 = -t139 * t67 + t375 * t78;
t269 = t301 * t136;
t267 = t108 * t374 + t136 * t94;
t266 = t108 * t375 - t139 * t94;
t258 = t137 * t377 + t348;
t18 = -t32 * qJD(4) - t420 * t161 + t421 * t433;
t14 = pkin(4) * t253 - t18;
t143 = t33 * pkin(5) - t34 * pkin(13) + t14;
t1 = t13 * t375 - t136 * t143 + t437 * t139;
t2 = -t13 * t374 + t437 * t136 + t139 * t143;
t232 = qJD(6) * t300 - t1 * t139 - t136 * t2;
t231 = -t137 * t6 - t140 * t5 + (-t137 * t16 - t140 * t15) * qJD(5);
t56 = qJD(4) * t61 + t421 * t285 + t420 * t350;
t154 = t67 * pkin(5) + pkin(13) * t423 + t56;
t10 = -t136 * t154 + t434 * t139 + t375 * t39;
t11 = t434 * t136 + t139 * t154 - t374 * t39;
t229 = qJD(6) * t298 - t10 * t139 - t11 * t136;
t73 = qJD(6) * t259 - t136 * t313 - t139 * t211;
t74 = qJD(6) * t325 - t109 * t374 - t136 * t211 + t139 * t313;
t228 = qJD(6) * t295 - t136 * t74 - t139 * t73;
t80 = pkin(12) * t258 - qJD(5) * t269 + qJD(6) * t261;
t81 = -t101 * qJD(6) + (t136 * t418 + t139 * t301) * qJD(5);
t226 = qJD(6) * t290 - t136 * t81 - t139 * t80;
t214 = t133 * t218;
t193 = -0.2e1 * t444;
t182 = t400 * (-qJ(3) * t306 + t252) + t133 * (pkin(2) * t393 - qJ(3) * t122);
t123 = -0.2e1 * t340;
t106 = -qJ(3) * t396 + t322;
t104 = t252 * qJD(2);
t103 = t251 * qJD(2);
t98 = -t136 * t349 + t137 * t328;
t76 = -t133 * t247 + t134 * t239;
t75 = -t132 * t246 + (qJ(3) * t397 + t359 * t399) * t133;
t72 = t217 * qJD(2);
t54 = (-t131 * t134 * t270 + t135 * t244) * qJD(3) + (t131 * t182 + t135 * t223) * qJD(2);
t53 = t187 + (-t131 * t223 + t135 * t182) * qJD(2);
t37 = -t132 * t443 + t399 * (-t133 * t230 + t284 * t400 - t215) - t194 * t398;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t316, 0.2e1 * (-t138 ^ 2 + t141 ^ 2) * t126 * qJD(2), 0.2e1 * t141 * t304, -0.2e1 * t316, -0.2e1 * t138 * t304, 0, -0.2e1 * pkin(1) * t126 * t385 + 0.2e1 * t104 * t401, -0.2e1 * pkin(1) * t352 + 0.2e1 * t103 * t401, 0.2e1 * (-t103 * t141 - t104 * t138 + (t138 * t252 + t141 * t251) * qJD(2)) * t134, 0.2e1 * t103 * t252 - 0.2e1 * t104 * t251, 0.2e1 * t219 * t283, 0.2e1 * t218 * t283 - 0.2e1 * t219 * t388, 0.2e1 * t219 * t319 - 0.2e1 * t263 * t283, -0.2e1 * t218 * t388, 0.2e1 * t214 * t343 + 0.2e1 * t263 * t388, -0.2e1 * t263 * t319, -0.2e1 * t218 * t72 - 0.2e1 * t53 * t263 + 0.2e1 * t62 * t319 + 0.2e1 * t76 * t388, 0.2e1 * t219 * t72 + 0.2e1 * t263 * t54 + 0.2e1 * t283 * t76 - 0.2e1 * t319 * t63, 0.2e1 * t218 * t54 - 0.2e1 * t219 * t53 - 0.2e1 * t283 * t62 - 0.2e1 * t388 * t63, 0.2e1 * t53 * t62 + 0.2e1 * t54 * t63 + 0.2e1 * t72 * t76, 0.2e1 * t69 * t49, -0.2e1 * t48 * t69 - 0.2e1 * t49 * t68, -0.2e1 * t235 * t49 - 0.2e1 * t253 * t69, t371, 0.2e1 * t235 * t48 + 0.2e1 * t253 * t68, 0.2e1 * t235 * t253, -0.2e1 * t18 * t235 - 0.2e1 * t253 * t31 + 0.2e1 * t36 * t68 + 0.2e1 * t37 * t48, -0.2e1 * t17 * t235 + 0.2e1 * t253 * t32 + 0.2e1 * t36 * t69 + 0.2e1 * t37 * t49, 0.2e1 * t17 * t68 - 0.2e1 * t18 * t69 - 0.2e1 * t31 * t49 - 0.2e1 * t32 * t48, -0.2e1 * t17 * t32 + 0.2e1 * t18 * t31 + 0.2e1 * t36 * t37, 0.2e1 * t52 * t34, -0.2e1 * t33 * t52 - 0.2e1 * t34 * t51, 0.2e1 * t34 * t68 + 0.2e1 * t48 * t52, t372, -0.2e1 * t33 * t68 - 0.2e1 * t48 * t51, t371, 0.2e1 * t14 * t51 + 0.2e1 * t15 * t48 + 0.2e1 * t27 * t33 + 0.2e1 * t6 * t68, 0.2e1 * t14 * t52 - 0.2e1 * t16 * t48 + 0.2e1 * t27 * t34 + 0.2e1 * t5 * t68, -0.2e1 * t15 * t34 - 0.2e1 * t16 * t33 + 0.2e1 * t5 * t51 - 0.2e1 * t52 * t6, 0.2e1 * t14 * t27 + 0.2e1 * t15 * t6 - 0.2e1 * t16 * t5, 0.2e1 * t41 * t21, -0.2e1 * t20 * t41 - 0.2e1 * t21 * t40, 0.2e1 * t21 * t51 + 0.2e1 * t33 * t41, 0.2e1 * t40 * t20, -0.2e1 * t20 * t51 - 0.2e1 * t33 * t40, t372, 0.2e1 * t12 * t20 + 0.2e1 * t2 * t51 + 0.2e1 * t33 * t7 + 0.2e1 * t4 * t40, 0.2e1 * t1 * t51 + 0.2e1 * t12 * t21 - 0.2e1 * t33 * t8 + 0.2e1 * t4 * t41, 0.2e1 * t1 * t40 - 0.2e1 * t2 * t41 - 0.2e1 * t20 * t8 - 0.2e1 * t21 * t7, -0.2e1 * t1 * t8 + 0.2e1 * t12 * t4 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342, 0, -t343, 0, t104, t103, 0, 0, t283 * t396 (-t131 * t388 + t135 * t283) * t133, t131 * t320 + t283 * t400, -t388 * t395, t135 * t320 - t388 * t400, t133 * t286, t53 * t400 + (qJD(3) * t131 * t263 - pkin(2) * t388 + t106 * t343 - t72 * t135) * t133, -t54 * t400 + (-pkin(2) * t283 - t107 * t343 + t72 * t131 + t263 * t382) * t133, -t106 * t283 - t107 * t388 + t214 * t382 + t219 * t351 + t395 * t54 - t396 * t53, t106 * t53 + t107 * t54 + (-pkin(2) * t72 + (-t131 * t62 + t135 * t63) * qJD(3)) * t133, t422 * t49 - t69 * t89, -t262 * t49 - t422 * t48 - t444 * t69 + t68 * t89, t235 * t89 - t253 * t422 - t264 * t49, t446, t235 * t444 + t253 * t262 + t264 * t48, t253 * t264, -t18 * t264 + t235 * t56 + t253 * t425 + t262 * t36 + t315 * t68 + t37 * t444 + t75 * t48, -t17 * t264 - t235 * t55 + t253 * t61 + t315 * t69 + t36 * t422 - t37 * t89 + t75 * t49, t17 * t262 - t18 * t422 + t31 * t89 - t32 * t444 + t425 * t49 - t61 * t48 + t55 * t68 + t56 * t69, -t17 * t61 - t18 * t425 - t31 * t56 + t315 * t37 - t32 * t55 + t36 * t75, t34 * t79 - t423 * t52, -t79 * t33 - t34 * t78 + t423 * t51 - t52 * t67, t262 * t34 - t423 * t68 + t444 * t52 + t79 * t48, t299, -t262 * t33 - t444 * t51 - t78 * t48 - t67 * t68, t446, t14 * t78 + t15 * t444 + t262 * t6 + t27 * t67 + t30 * t68 + t59 * t33 + t42 * t48 + t56 * t51, t14 * t79 - t16 * t444 + t262 * t5 - t27 * t423 + t29 * t68 + t59 * t34 - t43 * t48 + t56 * t52, t15 * t423 - t16 * t67 + t29 * t51 - t30 * t52 - t43 * t33 - t42 * t34 + t5 * t78 - t6 * t79, t14 * t59 + t15 * t30 - t16 * t29 + t27 * t56 + t42 * t6 - t43 * t5, t21 * t71 - t41 * t45, -t20 * t71 - t21 * t70 + t40 * t45 - t41 * t46, t21 * t78 + t33 * t71 + t41 * t67 - t45 * t51, t20 * t70 + t40 * t46, -t20 * t78 - t33 * t70 - t40 * t67 - t46 * t51, t299, t11 * t51 + t12 * t46 + t2 * t78 + t20 * t38 + t22 * t33 + t26 * t40 + t4 * t70 + t67 * t7, t1 * t78 + t10 * t51 - t12 * t45 + t21 * t38 - t23 * t33 + t26 * t41 + t4 * t71 - t67 * t8, t1 * t70 + t10 * t40 - t11 * t41 - t2 * t71 - t20 * t23 - t21 * t22 + t45 * t7 - t46 * t8, -t1 * t23 - t10 * t8 + t11 * t7 + t12 * t26 + t2 * t22 + t38 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131 * t291, t135 * t291, 0.2e1 * (t131 ^ 2 + t135 ^ 2) * t125 * qJD(3), 0.2e1 * (-t106 * t131 + t107 * t135) * t383, -0.2e1 * t422 * t89, 0.2e1 * t262 * t89 - 0.2e1 * t422 * t444, 0.2e1 * t264 * t89, -t262 * t193, -t264 * t193, 0, 0.2e1 * t262 * t315 + 0.2e1 * t264 * t56 + 0.2e1 * t444 * t75, -0.2e1 * t264 * t55 + 0.2e1 * t315 * t422 - 0.2e1 * t75 * t89, 0.2e1 * t262 * t55 + 0.2e1 * t422 * t56 - 0.2e1 * t425 * t89 - 0.2e1 * t444 * t61, 0.2e1 * t315 * t75 + 0.2e1 * t425 * t56 - 0.2e1 * t55 * t61, -0.2e1 * t79 * t423, 0.2e1 * t423 * t78 - 0.2e1 * t79 * t67, -0.2e1 * t262 * t423 + 0.2e1 * t444 * t79, t370, -0.2e1 * t262 * t67 - 0.2e1 * t444 * t78, 0.2e1 * t262 * t444, 0.2e1 * t262 * t30 + 0.2e1 * t42 * t444 + 0.2e1 * t56 * t78 + 0.2e1 * t59 * t67, 0.2e1 * t262 * t29 - 0.2e1 * t423 * t59 - 0.2e1 * t43 * t444 + 0.2e1 * t56 * t79, 0.2e1 * t29 * t78 - 0.2e1 * t30 * t79 + 0.2e1 * t42 * t423 - 0.2e1 * t43 * t67, -0.2e1 * t29 * t43 + 0.2e1 * t30 * t42 + 0.2e1 * t56 * t59, -0.2e1 * t71 * t45, 0.2e1 * t45 * t70 - 0.2e1 * t46 * t71, -0.2e1 * t45 * t78 + 0.2e1 * t67 * t71, 0.2e1 * t70 * t46, -0.2e1 * t46 * t78 - 0.2e1 * t67 * t70, t370, 0.2e1 * t11 * t78 + 0.2e1 * t22 * t67 + 0.2e1 * t26 * t70 + 0.2e1 * t38 * t46, 0.2e1 * t10 * t78 - 0.2e1 * t23 * t67 + 0.2e1 * t26 * t71 - 0.2e1 * t38 * t45, 0.2e1 * t10 * t70 - 0.2e1 * t11 * t71 + 0.2e1 * t22 * t45 - 0.2e1 * t23 * t46, -0.2e1 * t10 * t23 + 0.2e1 * t11 * t22 + 0.2e1 * t26 * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t388, t283, 0, t72, 0, 0, 0, 0, 0, 0, t399 * t48 + (t235 * t338 - t421 * t253) * t132, t399 * t49 + (t235 * t339 + t420 * t253) * t132 (-t420 * t48 - t421 * t49 + (t420 * t69 - t421 * t68) * qJD(4)) * t132, t36 * t399 + (-t420 * t17 + t421 * t18 + (-t420 * t31 + t421 * t32) * qJD(4)) * t132, 0, 0, 0, 0, 0, 0, -t108 * t48 - t94 * t68 + (-t421 * t33 + t51 * t338) * t132, -t109 * t48 - t211 * t68 + t313 * t52 - t34 * t357, t108 * t34 - t109 * t33 - t211 * t51 + t94 * t52, -t6 * t108 - t5 * t109 - t14 * t357 - t15 * t94 + t16 * t211 + t27 * t313, 0, 0, 0, 0, 0, 0, t108 * t20 - t259 * t33 + t40 * t94 + t51 * t74, t108 * t21 - t33 * t96 + t41 * t94 + t51 * t73, -t20 * t96 + t21 * t259 + t40 * t73 - t41 * t74, -t1 * t96 + t108 * t4 + t12 * t94 - t2 * t259 + t7 * t74 - t73 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t264 * t356 + t399 * t422) * qJD(4), t264 * t314 - t399 * t89, -t262 * t314 + t357 * t89 (t285 - t420 * t55 - t421 * t56 + (t420 * t425 + t421 * t61) * qJD(4)) * t132, 0, 0, 0, 0, 0, 0, -t108 * t444 - t262 * t94 + t313 * t78 - t357 * t67, -t109 * t444 - t211 * t262 + t313 * t79 + t357 * t423, -t108 * t423 - t109 * t67 - t211 * t78 + t94 * t79, -t30 * t108 - t29 * t109 + t211 * t43 + t313 * t59 - t357 * t56 - t42 * t94, 0, 0, 0, 0, 0, 0, t108 * t46 - t259 * t67 + t70 * t94 + t74 * t78, -t108 * t45 - t67 * t96 + t71 * t94 + t73 * t78, -t259 * t45 - t46 * t96 + t70 * t73 - t71 * t74, -t10 * t96 + t108 * t26 - t11 * t259 + t22 * t74 - t23 * t73 + t38 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t330 * t380 + 0.2e1 * t416 + 0.2e1 * (t109 * (-qJD(5) * t355 + t312) - t421 * t313) * t132, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t259 * t74 - 0.2e1 * t73 * t96 + 0.2e1 * t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, 0, -t48, -t253, t18, t17, 0, 0, t376 * t52 + t411, -t137 * t33 + t140 * t34 + (-t137 * t52 - t140 * t51) * qJD(5), t279, t280, -t278, 0, -pkin(4) * t33 - pkin(12) * t279 - t14 * t140 + t27 * t378, -pkin(4) * t34 + pkin(12) * t278 + t137 * t14 + t27 * t376 (t411 - t404 + (t137 * t51 + t140 * t52) * qJD(5)) * pkin(12) + t231, -pkin(4) * t14 + pkin(12) * t231, t41 * t349 + (-t375 * t41 + t409) * t137, t297 * t376 + (-t415 - t410 + (-t408 + t414) * qJD(6)) * t137 (t377 * t51 - t21) * t140 + (qJD(5) * t41 - t273) * t137, t40 * t347 + (t137 * t20 + t376 * t40) * t136 (-t379 * t51 + t20) * t140 + (-qJD(5) * t40 - t274) * t137, t280, t100 * t33 + t51 * t81 + (-t2 + (pkin(12) * t40 + t12 * t136) * qJD(5)) * t140 + (pkin(12) * t20 + qJD(5) * t7 + t282) * t137, -t101 * t33 + t51 * t80 + (-t1 + (pkin(12) * t41 + t12 * t139) * qJD(5)) * t140 + (pkin(12) * t21 - qJD(5) * t8 - t281) * t137, -t100 * t21 - t101 * t20 + t40 * t80 - t41 * t81 + t300 * t376 + (t1 * t136 - t139 * t2 + (t136 * t7 - t139 * t8) * qJD(6)) * t137, -t1 * t101 + t100 * t2 + t7 * t81 - t8 * t80 + (t12 * t376 + t137 * t4) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t89, 0, -t444, 0, -t56, t55, 0, 0, -t88 * t137 + (-t137 * t240 + t389) * t140, -t137 * t67 - t140 * t423 - t376 * t78 - t378 * t79, t427, t277, -t137 * t249 + t140 * t444, 0, -pkin(4) * t67 - pkin(12) * t427 - t56 * t140 + t378 * t59, pkin(4) * t423 + t56 * t137 + t262 * t364 + t376 * t59 - t417 * t444, pkin(12) * t277 + t363 * t79 - t376 * t42 - t378 * t43 - t418 * t423 + t294, -pkin(4) * t56 + ((-t43 * t137 - t42 * t140) * qJD(5) + t294) * pkin(12), t71 * t349 + (-t375 * t71 - t407) * t137, t296 * t376 + (t413 - t406 + (-t405 + t412) * qJD(6)) * t137 (t377 * t78 + t45) * t140 + (qJD(5) * t71 - t271) * t137, t70 * t347 + (t137 * t46 + t376 * t70) * t136 (-t379 * t78 + t46) * t140 + (-qJD(5) * t70 - t272) * t137, t277, t100 * t67 + t78 * t81 + (-t11 + (pkin(12) * t70 + t136 * t38) * qJD(5)) * t140 + (pkin(12) * t46 + qJD(5) * t22 + t276) * t137, -t101 * t67 + t78 * t80 + (-t10 + (pkin(12) * t71 + t139 * t38) * qJD(5)) * t140 + (-pkin(12) * t45 - qJD(5) * t23 - t275) * t137, t100 * t45 - t101 * t46 + t70 * t80 - t71 * t81 + t298 * t376 + (t10 * t136 - t11 * t139 + (t136 * t22 - t139 * t23) * qJD(6)) * t137, -t10 * t101 + t100 * t11 + t22 * t81 - t23 * t80 + (t137 * t26 + t376 * t38) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313, -t314, 0, 0, 0, 0, 0, 0, 0, 0 (-t137 * t337 - t140 * t338) * t132 (t137 * t338 - t140 * t337) * t132, t445, -pkin(4) * t313 + t445 * pkin(12), 0, 0, 0, 0, 0, 0 (t108 * t379 - t74) * t140 + (-qJD(5) * t259 + t267) * t137 (t108 * t377 - t73) * t140 + (-qJD(5) * t96 - t266) * t137, t295 * t376 + (t136 * t73 - t139 * t74 + (-t136 * t259 - t139 * t96) * qJD(6)) * t137, pkin(12) * t268 + t100 * t74 - t101 * t73 - t259 * t81 - t80 * t96; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t326, -0.2e1 * t327, 0, t123, 0, 0, t137 * t369, t140 * t369, 0, 0, 0.2e1 * t129 * t340 - 0.2e1 * t317, 0.2e1 * t128 * t328 - 0.4e1 * t136 * t318, 0.2e1 * t137 * t348 + 0.2e1 * t377 * t386, 0.2e1 * t127 * t340 + 0.2e1 * t317, -0.2e1 * t136 * t327 + 0.2e1 * t137 * t346, t123, 0.2e1 * t100 * t378 - 0.2e1 * t140 * t81 + 0.2e1 * (t128 * t374 + t136 * t326) * pkin(12), -0.2e1 * t101 * t378 - 0.2e1 * t140 * t80 + 0.2e1 * (-t128 * t375 + 0.2e1 * t318) * pkin(12), 0.2e1 * t290 * t376 + 0.2e1 * (t136 * t80 - t139 * t81 + (t100 * t136 - t101 * t139) * qJD(6)) * t137, 0.2e1 * pkin(12) ^ 2 * t340 + 0.2e1 * t100 * t81 - 0.2e1 * t101 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t34, 0, -t33, t48, t6, t5, 0, 0, t374 * t41 + t415, qJD(6) * t297 - t136 * t20 + t409, t274, t375 * t40 - t410, -t273, 0, -pkin(5) * t20 - pkin(13) * t274 + t281, -pkin(5) * t21 + pkin(13) * t273 + t282 (t415 - t410 + (t408 + t414) * qJD(6)) * pkin(13) + t232, -pkin(5) * t4 + pkin(13) * t232; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t423, 0, -t67, t444, t30, t29, 0, 0, t374 * t71 - t413, qJD(6) * t296 - t136 * t46 - t407, t272, t375 * t70 - t406, -t271, 0, -pkin(5) * t46 - pkin(13) * t272 + t275, pkin(5) * t45 + pkin(13) * t271 + t276 (-t413 - t406 + (t405 + t412) * qJD(6)) * pkin(13) + t229, -pkin(5) * t26 + pkin(13) * t229; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t94, -t211, 0, 0, 0, 0, 0, 0, 0, 0, t266, t267, t228, -pkin(5) * t94 + pkin(13) * t228; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t376, 0, -t378, 0, -t363, t364, 0, 0, -t98, -0.4e1 * t137 * t341 - t376 * t387, t136 * t378 - t346, t98, t258, 0 (pkin(13) * t390 + (-pkin(5) * t139 + pkin(12) * t136) * t137) * qJD(6) + (t136 * t302 - t365) * qJD(5) (t139 * t418 + t269) * qJD(6) + (t139 * t302 + t367) * qJD(5), t226, -pkin(5) * t363 + pkin(13) * t226; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t341, -0.2e1 * t328, 0, -0.2e1 * t341, 0, 0, t136 * t368, t139 * t368, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, 0, -t20, t33, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t45, 0, -t46, t67, t11, t10, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t73, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t137 * t375 + t349, 0, -t136 * t376 - t347, t378, t81, t80, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t374, 0, -t375, 0, -pkin(13) * t374, pkin(13) * t375, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
