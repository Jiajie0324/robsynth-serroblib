% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox (ehem. IRT-Maple-Toolbox)
% Datum: 2018-12-10 18:39
% Revision: bb42a8b95257d9bc83910d26e849f5825122f662 (2018-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR14_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_inertiaDJ_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2018-12-10 18:32:46
% EndTime: 2018-12-10 18:34:09
% DurationCPUTime: 32.29s
% Computational Cost: add. (51783->815), mult. (159823->1475), div. (0->0), fcn. (171223->16), ass. (0->344)
t130 = sin(pkin(8));
t133 = cos(pkin(14));
t414 = cos(pkin(7));
t348 = t133 * t414;
t336 = pkin(2) * t348;
t262 = pkin(3) * t414 + t336;
t413 = cos(pkin(8));
t367 = t413 * pkin(11);
t129 = sin(pkin(14));
t131 = sin(pkin(7));
t410 = t129 * t131;
t225 = (-t367 - qJ(3)) * t410 + t262;
t373 = -pkin(3) * t133 - pkin(2);
t411 = t129 * t130;
t270 = (-pkin(11) * t411 + t373) * t131;
t466 = t130 * t270 + t225 * t413;
t343 = t414 * t130;
t347 = t133 * t413;
t465 = t131 * t347 + t343;
t132 = sin(pkin(6));
t135 = sin(qJ(5));
t138 = cos(qJ(5));
t139 = cos(qJ(2));
t344 = t139 * t414;
t321 = t132 * t344;
t415 = cos(pkin(6));
t350 = t131 * t415;
t260 = t321 + t350;
t136 = sin(qJ(2));
t405 = t133 * t136;
t375 = t132 * t405;
t231 = t129 * t260 + t375;
t229 = pkin(11) * t231;
t406 = t132 * t139;
t120 = t131 * t406;
t278 = -t414 * t415 + t120;
t271 = t278 * pkin(3);
t280 = t132 * (-qJ(3) * t414 - pkin(10));
t372 = pkin(1) * t415;
t337 = t139 * t372;
t237 = t136 * t280 + t337;
t368 = t415 * pkin(2);
t226 = t368 + t237;
t374 = -pkin(2) * t139 - pkin(1);
t408 = t131 * t136;
t266 = t132 * (-qJ(3) * t408 + t374);
t185 = t131 * t266 + t414 * t226;
t338 = t136 * t372;
t268 = -pkin(10) * t406 - t338;
t216 = qJ(3) * t260 - t268;
t61 = -t129 * t216 + t133 * t185;
t162 = t413 * t229 + t271 - t61;
t159 = t162 * t413;
t433 = sin(qJ(4));
t155 = t433 * t159;
t272 = -t129 * t136 + t133 * t344;
t349 = t133 * t415;
t233 = t131 * t349 + t132 * t272;
t221 = t233 * t413;
t62 = t129 * t185 + t133 * t216;
t164 = pkin(11) * t221 + t62;
t228 = t233 * pkin(3);
t180 = -t131 * t226 + t266 * t414 - t228;
t434 = cos(qJ(4));
t182 = t433 * t221 + t434 * t231;
t222 = t433 * t231;
t258 = t434 * t278;
t211 = t130 * t258 - t434 * t221 + t222;
t202 = t211 * pkin(4);
t88 = t130 * t233;
t251 = t278 * t413 + t88;
t241 = t251 * pkin(12);
t254 = pkin(10) * t408 + t374 * t414;
t259 = t278 * t433;
t263 = t337 + t368;
t123 = t131 ^ 2;
t318 = t414 ^ 2 + t123;
t322 = t129 * t344;
t325 = t129 * t350;
t407 = t132 * t136;
t381 = pkin(10) * t407;
t245 = t263 - t381;
t297 = -t132 * pkin(1) - pkin(2) * t406;
t460 = t129 * t268 + (t131 * t297 + t414 * t245) * t133 - t271;
t15 = -t130 * (t135 * (pkin(11) * (-t130 * t222 - t258) + t433 * ((-pkin(3) * t349 - t263) * t131 + (-pkin(3) * t272 + t254) * t132)) + (-pkin(12) * t259 - (t325 + (t318 * t405 + t322) * t132) * qJ(3) + t460) * t138) + t138 * (-pkin(12) * t182 + t180 * t413 + t202) - t135 * (t164 * t434 - t155 - t241);
t201 = qJD(4) * t211;
t346 = t136 * t414;
t323 = t132 * t346;
t299 = qJD(2) * t323;
t112 = t129 * t299;
t398 = qJD(2) * t139;
t356 = t132 * t398;
t296 = t133 * t356 - t112;
t402 = t129 * t356 + t133 * t299;
t305 = t402 * t413;
t399 = qJD(2) * t136;
t357 = t132 * t399;
t333 = t131 * t357;
t441 = t130 * t333 - t305;
t49 = -t434 * t296 - t433 * t441 + t201;
t236 = qJD(5) * t251 + t49;
t464 = t135 * t236;
t252 = t130 * t259;
t179 = -t252 + t182;
t269 = -t130 * t402 - t333 * t413;
t463 = qJD(5) * t179 + t269;
t370 = t130 * t433;
t107 = t135 * t413 + t138 * t370;
t345 = t138 * t413;
t369 = t135 * t433;
t106 = t130 * t369 - t345;
t353 = qJD(4) * t434;
t326 = t138 * t353;
t224 = -qJD(5) * t106 + t130 * t326;
t390 = qJD(5) * t138;
t328 = t130 * t353;
t394 = qJD(5) * t107;
t92 = t135 * t328 + t394;
t283 = t106 * t390 + t92 * t135;
t392 = qJD(5) * t135;
t462 = -t107 * t392 + t224 * t138 + t283;
t300 = t433 * t343;
t436 = t131 * (t129 * t434 + t347 * t433) + t300;
t461 = t436 * qJD(4);
t277 = t433 * t410 - t465 * t434;
t175 = -pkin(4) * t277 + pkin(12) * t436 + t130 * t225 - t270 * t413;
t397 = qJD(3) * t131;
t365 = t129 * t397;
t298 = t413 * t365;
t396 = qJD(3) * t133;
t364 = t131 * t396;
t409 = t131 * t133;
t105 = pkin(2) * t129 * t414 + qJ(3) * t409;
t215 = t465 * pkin(11) + t105;
t439 = t433 * t215 - t466 * t434;
t54 = qJD(4) * t439 + t433 * t298 - t434 * t364;
t458 = qJD(5) * t175 + t54;
t250 = t296 * t433 - t434 * t441;
t176 = qJD(4) * t182 + t250;
t173 = -qJD(4) * t252 + t176;
t455 = t173 * t277;
t432 = pkin(11) * t130;
t161 = -t278 * t432 + t164;
t172 = -t130 * t229 + t180;
t170 = t130 * t172;
t31 = -t433 * t161 + (-t159 + t170) * t434;
t27 = pkin(4) * t251 - t31;
t50 = t135 * t179 + t138 * t251;
t51 = -t135 * t251 + t138 * t179;
t145 = t50 * pkin(5) - t51 * pkin(13) + t27;
t32 = t434 * t161 + t433 * t170 - t155;
t147 = -t241 + t32;
t191 = qJD(2) * t237 + qJD(3) * t260;
t446 = (-qJD(3) * t323 + (t139 * t280 - t338) * qJD(2)) * t414 + t131 * t132 * (-t136 * t397 + (-qJ(3) * t131 * t139 + pkin(2) * t136) * qJD(2));
t154 = -pkin(3) * t333 + t129 * t191 - t133 * t446 + t296 * t367;
t184 = t112 * t432 + t402 * pkin(3) + (t131 * t338 + (pkin(2) * t346 + (pkin(10) * t131 - t133 * t432) * t139) * t132) * qJD(2);
t452 = -pkin(4) * t173 - t49 * pkin(12) + qJD(5) * t147 - t130 * t154 - t184 * t413;
t149 = -pkin(12) * t179 + t130 * t162 + t172 * t413 + t202;
t160 = pkin(11) * t441 + t129 * t446 + t133 * t191;
t450 = -t130 * t184 + t154 * t413;
t17 = -qJD(4) * t31 - t434 * t160 + t433 * t450;
t453 = pkin(12) * t269 - qJD(5) * t149 + t17;
t5 = t135 * t452 + t138 * t453;
t454 = -pkin(13) * t173 - qJD(6) * t145 + t5;
t312 = t413 * t414;
t279 = t130 * t409 - t312;
t58 = pkin(4) * t279 + t439;
t212 = t135 * t436;
t76 = t138 * t279 + t212;
t77 = -t135 * t279 + t138 * t436;
t166 = t76 * pkin(5) - t77 * pkin(13) + t58;
t60 = t434 * t215 + t466 * t433;
t171 = -pkin(12) * t279 + t60;
t329 = t130 * t365;
t87 = t277 * qJD(4);
t449 = -pkin(4) * t461 - t87 * pkin(12) + qJD(5) * t171 - t329;
t29 = t449 * t135 + t138 * t458;
t451 = -pkin(13) * t461 - qJD(6) * t166 + t29;
t178 = qJD(4) * t179;
t448 = t178 + t250;
t247 = t463 * t135;
t435 = t138 * t236 + t247;
t447 = -qJD(6) * t211 + t435;
t255 = qJD(5) * t279 + t87;
t86 = qJD(5) * t212;
t437 = t138 * t255 + t86;
t443 = -qJD(6) * t277 + t437;
t265 = qJD(5) * t277;
t442 = t135 * t461 + t138 * t265;
t403 = t77 * qJD(5);
t67 = -t135 * t87 + t403;
t292 = -t138 * t67 + t76 * t392;
t34 = t138 * t463 - t464;
t293 = -t138 * t34 + t50 * t392;
t134 = sin(qJ(6));
t125 = t134 ^ 2;
t137 = cos(qJ(6));
t127 = t137 ^ 2;
t401 = t125 - t127;
t342 = qJD(6) * t401;
t440 = 0.2e1 * t211 * t173;
t431 = pkin(12) * t135;
t430 = pkin(12) * t138;
t16 = t135 * t149 + t138 * t147;
t43 = -t135 * t175 + t138 * t171;
t429 = t106 * t92;
t389 = qJD(6) * t134;
t20 = -t134 * t173 + t137 * t447 + t51 * t389;
t428 = t134 * t20;
t40 = t134 * t51 - t137 * t211;
t427 = t134 * t40;
t45 = -t134 * t461 + t137 * t443 + t77 * t389;
t426 = t134 * t45;
t68 = t134 * t77 - t137 * t277;
t425 = t134 * t68;
t424 = t137 * t20;
t388 = qJD(6) * t137;
t21 = -t134 * t447 - t137 * t173 + t51 * t388;
t423 = t137 * t21;
t41 = t134 * t211 + t137 * t51;
t422 = t137 * t41;
t421 = t137 * t45;
t46 = -t134 * t443 - t137 * t461 + t77 * t388;
t420 = t137 * t46;
t69 = t134 * t277 + t137 * t77;
t419 = t137 * t69;
t412 = qJ(3) * t130;
t404 = t137 * t138;
t126 = t135 ^ 2;
t400 = -t138 ^ 2 + t126;
t393 = qJD(5) * t134;
t391 = qJD(5) * t137;
t387 = qJD(6) * t138;
t386 = 0.2e1 * t50 * t34;
t385 = 0.2e1 * t76 * t67;
t384 = -0.2e1 * pkin(4) * qJD(5);
t383 = -0.2e1 * pkin(5) * qJD(6);
t382 = t134 * t430;
t380 = pkin(12) * t404;
t379 = pkin(12) * t392;
t378 = pkin(12) * t390;
t371 = t130 * t434;
t124 = t132 ^ 2;
t366 = t124 * t398;
t363 = t137 * t390;
t362 = t134 * t387;
t361 = t135 * t388;
t360 = t137 * t387;
t355 = t134 * t388;
t354 = t135 * t390;
t352 = qJD(4) * t433;
t351 = qJD(5) * t434;
t341 = t400 * qJD(5);
t340 = 0.2e1 * t354;
t339 = t134 * t371;
t334 = t123 * t357;
t332 = t137 * t354;
t331 = t126 * t355;
t330 = t136 * t366;
t327 = t130 * t352;
t319 = qJD(2) * t132 * t415;
t317 = -pkin(5) * t138 - pkin(13) * t135;
t316 = pkin(5) * t135 - pkin(13) * t138;
t13 = pkin(13) * t211 + t16;
t7 = -t134 * t13 + t137 * t145;
t8 = t137 * t13 + t134 * t145;
t315 = -t134 * t8 - t137 * t7;
t6 = t135 * t453 - t138 * t452;
t314 = -t6 * t135 - t5 * t138;
t313 = t34 * t76 + t50 * t67;
t39 = pkin(13) * t277 + t43;
t22 = -t134 * t39 + t137 * t166;
t23 = t134 * t166 + t137 * t39;
t311 = -t134 * t23 - t137 * t22;
t310 = -t134 * t41 - t137 * t40;
t309 = -t134 * t69 - t137 * t68;
t274 = t134 * t107 + t137 * t371;
t94 = t137 * t107 - t339;
t308 = -t134 * t94 + t137 * t274;
t301 = pkin(4) - t317;
t276 = t137 * t301;
t98 = -t276 - t382;
t99 = -t134 * t301 + t380;
t307 = -t134 * t99 - t137 * t98;
t30 = t135 * t458 - t449 * t138;
t306 = -t30 * t135 - t29 * t138;
t303 = -0.2e1 * t414 * t397;
t12 = -t211 * pkin(5) - t15;
t4 = -pkin(5) * t173 - t6;
t295 = t12 * t388 + t134 * t4;
t294 = t12 * t389 - t137 * t4;
t26 = -pkin(5) * t461 - t30;
t42 = -t135 * t171 - t138 * t175;
t38 = -pkin(5) * t277 - t42;
t291 = t134 * t26 + t38 * t388;
t290 = -t137 * t26 + t38 * t389;
t289 = t134 * t34 + t388 * t50;
t288 = -t137 * t34 + t389 * t50;
t287 = t134 * t67 + t388 * t76;
t286 = -t137 * t67 + t389 * t76;
t285 = t136 * t318;
t284 = t316 * t134;
t282 = t106 * t388 + t134 * t92;
t281 = t106 * t389 - t137 * t92;
t273 = t135 * t391 + t362;
t267 = -t337 + t381;
t18 = -qJD(4) * t32 - t433 * t160 - t434 * t450;
t14 = pkin(4) * t269 - t18;
t141 = t34 * pkin(5) + pkin(13) * t435 + t14;
t1 = t13 * t389 - t134 * t141 + t137 * t454;
t2 = -t13 * t388 + t134 * t454 + t137 * t141;
t246 = qJD(6) * t315 - t1 * t137 - t134 * t2;
t55 = qJD(4) * t60 + t434 * t298 + t433 * t364;
t152 = t67 * pkin(5) + pkin(13) * t437 + t55;
t10 = -t134 * t152 + t137 * t451 + t39 * t389;
t11 = t134 * t451 + t137 * t152 - t39 * t388;
t244 = qJD(6) * t311 - t10 * t137 - t11 * t134;
t71 = qJD(6) * t274 - t134 * t327 - t137 * t224;
t72 = qJD(6) * t339 - t107 * t388 - t134 * t224 + t137 * t327;
t243 = qJD(6) * t308 - t134 * t72 - t137 * t71;
t78 = pkin(12) * t273 - qJD(5) * t284 + qJD(6) * t276;
t79 = -t99 * qJD(6) + (t134 * t431 + t137 * t316) * qJD(5);
t242 = qJD(6) * t307 - t134 * t79 - t137 * t78;
t230 = pkin(2) * t323 - t131 * t268;
t227 = t131 * t233;
t207 = -t325 + (-t133 * t285 - t322) * t132;
t206 = -0.2e1 * t461;
t200 = qJD(5) * t211;
t196 = t207 * qJD(3);
t193 = t138 * t200;
t188 = t414 * (-qJ(3) * t321 + t268) + t131 * (pkin(2) * t407 - qJ(3) * t120);
t121 = -0.2e1 * t354;
t104 = -qJ(3) * t410 + t336;
t102 = t268 * qJD(2);
t101 = t267 * qJD(2);
t96 = -t134 * t363 + t135 * t342;
t74 = -t131 * t263 + t132 * t254;
t73 = -t130 * t262 + (qJ(3) * t411 + t373 * t413) * t131;
t70 = t230 * qJD(2);
t53 = (-t129 * t132 * t285 + t133 * t260) * qJD(3) + (t129 * t188 + t133 * t237) * qJD(2);
t52 = t196 + (-t129 * t237 + t133 * t188) * qJD(2);
t37 = -t130 * t460 + t413 * (-t131 * t245 + t297 * t414 - t228) - t207 * t412;
t36 = pkin(3) * t305 - t130 * t196 + (-t130 * (t129 * t267 + t268 * t348 + (pkin(2) * t375 + pkin(3) * t407) * t131) + t413 * t230 - (-t133 * t139 * t318 + t129 * t346) * t132 * t412) * qJD(2);
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t330, 0.2e1 * (-t136 ^ 2 + t139 ^ 2) * t124 * qJD(2), 0.2e1 * t139 * t319, -0.2e1 * t330, -0.2e1 * t136 * t319, 0, -0.2e1 * pkin(1) * t124 * t399 + 0.2e1 * t102 * t415, -0.2e1 * pkin(1) * t366 + 0.2e1 * t101 * t415, 0.2e1 * (-t101 * t139 - t102 * t136 + (t136 * t268 + t139 * t267) * qJD(2)) * t132, 0.2e1 * t101 * t268 - 0.2e1 * t102 * t267, 0.2e1 * t231 * t296, -0.2e1 * t231 * t402 + 0.2e1 * t233 * t296, 0.2e1 * t231 * t333 - 0.2e1 * t278 * t296, -0.2e1 * t233 * t402, 0.2e1 * t227 * t357 + 0.2e1 * t278 * t402, -0.2e1 * t278 * t333, -0.2e1 * t233 * t70 - 0.2e1 * t52 * t278 + 0.2e1 * t61 * t333 + 0.2e1 * t74 * t402, 0.2e1 * t231 * t70 + 0.2e1 * t278 * t53 + 0.2e1 * t296 * t74 - 0.2e1 * t333 * t62, -0.2e1 * t231 * t52 + 0.2e1 * t233 * t53 - 0.2e1 * t296 * t61 - 0.2e1 * t402 * t62, 0.2e1 * t52 * t61 + 0.2e1 * t53 * t62 + 0.2e1 * t70 * t74, -0.2e1 * t179 * t49, -0.2e1 * t173 * t179 + 0.2e1 * t211 * t49, -0.2e1 * t179 * t269 + 0.2e1 * t251 * t49, t440, 0.2e1 * t173 * t251 + 0.2e1 * t211 * t269, 0.2e1 * t251 * t269, 0.2e1 * t173 * t37 - 0.2e1 * t18 * t251 + 0.2e1 * t211 * t36 - 0.2e1 * t269 * t31, -0.2e1 * t17 * t251 + 0.2e1 * t179 * t36 + 0.2e1 * t269 * t32 - 0.2e1 * t37 * t49, 0.2e1 * t17 * t211 - 0.2e1 * t173 * t32 - 0.2e1 * t179 * t18 + 0.2e1 * t31 * t49, -0.2e1 * t17 * t32 + 0.2e1 * t18 * t31 + 0.2e1 * t36 * t37, -0.2e1 * t51 * t435, -0.2e1 * t34 * t51 + 0.2e1 * t435 * t50, -0.2e1 * t211 * t435 + 0.2e1 * t448 * t51, t386, -0.2e1 * t211 * t34 - 0.2e1 * t448 * t50, t440, 0.2e1 * t14 * t50 + 0.2e1 * t15 * t173 + 0.2e1 * t211 * t6 + 0.2e1 * t27 * t34, 0.2e1 * t14 * t51 - 0.2e1 * t16 * t173 + 0.2e1 * t211 * t5 - 0.2e1 * t27 * t435, 0.2e1 * t15 * t435 - 0.2e1 * t16 * t34 + 0.2e1 * t5 * t50 - 0.2e1 * t6 * t51, 0.2e1 * t14 * t27 + 0.2e1 * t15 * t6 - 0.2e1 * t16 * t5, -0.2e1 * t41 * t20, 0.2e1 * t20 * t40 - 0.2e1 * t21 * t41, -0.2e1 * t20 * t50 + 0.2e1 * t34 * t41, 0.2e1 * t40 * t21, -0.2e1 * t21 * t50 - 0.2e1 * t34 * t40, t386, 0.2e1 * t12 * t21 + 0.2e1 * t2 * t50 + 0.2e1 * t34 * t7 + 0.2e1 * t4 * t40, 0.2e1 * t1 * t50 - 0.2e1 * t12 * t20 - 0.2e1 * t34 * t8 + 0.2e1 * t4 * t41, 0.2e1 * t1 * t40 - 0.2e1 * t2 * t41 + 0.2e1 * t20 * t7 - 0.2e1 * t21 * t8, -0.2e1 * t1 * t8 + 0.2e1 * t12 * t4 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, 0, -t357, 0, t102, t101, 0, 0, t296 * t410 (-t129 * t402 + t133 * t296) * t131, t129 * t334 + t296 * t414, -t402 * t409, t133 * t334 - t402 * t414, t131 * t299, t52 * t414 + (qJD(3) * t129 * t278 - pkin(2) * t402 + t104 * t357 - t70 * t133) * t131, -t53 * t414 + (-pkin(2) * t296 - t105 * t357 + t70 * t129 + t278 * t396) * t131, -t104 * t296 - t105 * t402 + t227 * t396 + t231 * t365 + t409 * t53 - t410 * t52, t104 * t52 + t105 * t53 + (-pkin(2) * t70 + (-t129 * t61 + t133 * t62) * qJD(3)) * t131, -t179 * t87 - t436 * t49, t211 * t87 + t277 * t49 + (-t173 - t178) * t436, t251 * t87 - t269 * t436 + t279 * t49, t201 * t436 + t455, t173 * t279 + t251 * t461 + t269 * t277, t269 * t279, t173 * t73 - t18 * t279 + t211 * t329 + t251 * t55 + t269 * t439 + t277 * t36 + t37 * t461, -t17 * t279 + t179 * t329 - t251 * t54 + t269 * t60 + t36 * t436 - t37 * t87 - t73 * t49, t17 * t277 - t173 * t60 + t179 * t55 - t18 * t436 + t211 * t54 + t31 * t87 - t32 * t461 - t439 * t49, -t17 * t60 - t18 * t439 - t31 * t55 - t32 * t54 + t329 * t37 + t36 * t73, -t247 * t77 - t51 * t86 + (-t236 * t77 - t255 * t51) * t138, -t34 * t77 + t435 * t76 + t437 * t50 - t67 * t51, t173 * t77 - t211 * t437 - t277 * t435 + t461 * t51, t313, -t173 * t76 - t211 * t67 - t277 * t34 - t461 * t50, t211 * t461 + t455, t14 * t76 + t15 * t461 + t173 * t42 + t211 * t30 + t27 * t67 + t277 * t6 + t58 * t34 + t55 * t50, t14 * t77 - t16 * t461 - t173 * t43 + t211 * t29 - t27 * t437 + t277 * t5 - t435 * t58 + t55 * t51, t15 * t437 - t16 * t67 + t29 * t50 - t30 * t51 - t43 * t34 + t42 * t435 + t5 * t76 - t6 * t77, t14 * t58 + t15 * t30 - t16 * t29 + t27 * t55 + t42 * t6 - t43 * t5, -t20 * t69 - t41 * t45, t20 * t68 - t21 * t69 + t40 * t45 - t41 * t46, -t20 * t76 + t34 * t69 + t41 * t67 - t45 * t50, t21 * t68 + t40 * t46, -t21 * t76 - t34 * t68 - t40 * t67 - t46 * t50, t313, t11 * t50 + t12 * t46 + t2 * t76 + t21 * t38 + t22 * t34 + t26 * t40 + t4 * t68 + t67 * t7, t1 * t76 + t10 * t50 - t12 * t45 - t20 * t38 - t23 * t34 + t26 * t41 + t4 * t69 - t67 * t8, t1 * t68 + t10 * t40 - t11 * t41 - t2 * t69 + t20 * t22 - t21 * t23 + t45 * t7 - t46 * t8, -t1 * t23 - t10 * t8 + t11 * t7 + t12 * t26 + t2 * t22 + t38 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129 * t303, t133 * t303, 0.2e1 * (t129 ^ 2 + t133 ^ 2) * t123 * qJD(3), 0.2e1 * (-t104 * t129 + t105 * t133) * t397, -0.2e1 * t436 * t87, 0.2e1 * t277 * t87 - 0.2e1 * t436 * t461, 0.2e1 * t279 * t87, -t277 * t206, -t279 * t206, 0, 0.2e1 * t277 * t329 + 0.2e1 * t279 * t55 + 0.2e1 * t461 * t73, -0.2e1 * t279 * t54 + 0.2e1 * t329 * t436 - 0.2e1 * t73 * t87, 0.2e1 * t277 * t54 + 0.2e1 * t436 * t55 - 0.2e1 * t439 * t87 - 0.2e1 * t461 * t60, 0.2e1 * t329 * t73 + 0.2e1 * t439 * t55 - 0.2e1 * t54 * t60, -0.2e1 * t77 * t437, 0.2e1 * t437 * t76 - 0.2e1 * t67 * t77, -0.2e1 * t277 * t437 + 0.2e1 * t461 * t77, t385, -0.2e1 * t277 * t67 - 0.2e1 * t461 * t76, 0.2e1 * t277 * t461, 0.2e1 * t277 * t30 + 0.2e1 * t42 * t461 + 0.2e1 * t55 * t76 + 0.2e1 * t58 * t67, 0.2e1 * t277 * t29 - 0.2e1 * t43 * t461 - 0.2e1 * t437 * t58 + 0.2e1 * t55 * t77, 0.2e1 * t29 * t76 - 0.2e1 * t30 * t77 + 0.2e1 * t42 * t437 - 0.2e1 * t43 * t67, -0.2e1 * t29 * t43 + 0.2e1 * t30 * t42 + 0.2e1 * t55 * t58, -0.2e1 * t69 * t45, 0.2e1 * t45 * t68 - 0.2e1 * t46 * t69, -0.2e1 * t45 * t76 + 0.2e1 * t67 * t69, 0.2e1 * t68 * t46, -0.2e1 * t46 * t76 - 0.2e1 * t67 * t68, t385, 0.2e1 * t11 * t76 + 0.2e1 * t22 * t67 + 0.2e1 * t26 * t68 + 0.2e1 * t38 * t46, 0.2e1 * t10 * t76 - 0.2e1 * t23 * t67 + 0.2e1 * t26 * t69 - 0.2e1 * t38 * t45, 0.2e1 * t10 * t68 - 0.2e1 * t11 * t69 + 0.2e1 * t22 * t45 - 0.2e1 * t23 * t46, -0.2e1 * t10 * t23 + 0.2e1 * t11 * t22 + 0.2e1 * t26 * t38; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402, t296, 0, t70, 0, 0, 0, 0, 0, 0, t413 * (qJD(4) * t300 * t415 + t176) - (t312 * t415 - t88) * t327 - t269 * t371, -t413 * t49 + (t251 * t353 + t269 * t433) * t130, -t173 * t370 + t179 * t327 + (-t201 + t49) * t371, t36 * t413 + (-t433 * t17 + t434 * t18 + (-t31 * t433 + t32 * t434) * qJD(4)) * t130, 0, 0, 0, 0, 0, 0, -t106 * t173 - t211 * t92 + t327 * t50 - t34 * t371, -t107 * t173 - t211 * t224 + t327 * t51 + t371 * t435, -t106 * t435 - t107 * t34 - t224 * t50 + t92 * t51, -t6 * t106 - t5 * t107 - t14 * t371 - t15 * t92 + t16 * t224 + t27 * t327, 0, 0, 0, 0, 0, 0, t106 * t21 - t274 * t34 + t40 * t92 + t50 * t72, -t106 * t20 - t34 * t94 + t41 * t92 + t50 * t71, -t20 * t274 - t21 * t94 + t40 * t71 - t41 * t72, -t1 * t94 + t106 * t4 + t12 * t92 - t2 * t274 + t7 * t72 - t71 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t279 * t370 + t413 * t436) * qJD(4), t279 * t328 - t413 * t87, -t277 * t328 + t371 * t87 (t298 - t433 * t54 - t434 * t55 + (t433 * t439 + t434 * t60) * qJD(4)) * t130, 0, 0, 0, 0, 0, 0, -t106 * t461 - t277 * t92 + t327 * t76 - t371 * t67, -t107 * t461 - t224 * t277 + t327 * t77 + t371 * t437, -t106 * t437 - t107 * t67 - t224 * t76 + t92 * t77, -t30 * t106 - t29 * t107 + t224 * t43 + t327 * t58 - t371 * t55 - t42 * t92, 0, 0, 0, 0, 0, 0, t106 * t46 - t274 * t67 + t68 * t92 + t72 * t76, -t106 * t45 - t67 * t94 + t69 * t92 + t71 * t76, -t274 * t45 - t46 * t94 + t68 * t71 - t69 * t72, -t10 * t94 + t106 * t26 - t11 * t274 + t22 * t72 - t23 * t71 + t38 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t345 * t394 + 0.2e1 * t429 + 0.2e1 * (t107 * (-qJD(5) * t369 + t326) - t434 * t327) * t130, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t274 * t72 - 0.2e1 * t71 * t94 + 0.2e1 * t429; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t49, 0, -t173, -t269, t18, t17, 0, 0, -t247 * t135 + (t51 * qJD(5) - t464) * t138, -t34 * t135 - t138 * t435 - t390 * t50 - t392 * t51, t135 * t448 + t193, t293, -t135 * t200 + t138 * t448, 0, -pkin(4) * t34 - pkin(12) * t193 - t14 * t138 - t173 * t431 + t27 * t392, pkin(4) * t435 + t14 * t135 - t173 * t430 + t211 * t379 + t27 * t390, pkin(12) * t293 - t15 * t390 - t16 * t392 + t378 * t51 - t431 * t435 + t314, -pkin(4) * t14 + ((-t16 * t135 - t15 * t138) * qJD(5) + t314) * pkin(12), t41 * t363 + (-t389 * t41 - t424) * t135, t310 * t390 + (t428 - t423 + (-t422 + t427) * qJD(6)) * t135 (t391 * t50 + t20) * t138 + (qJD(5) * t41 - t288) * t135, t40 * t361 + (t135 * t21 + t390 * t40) * t134 (-t393 * t50 + t21) * t138 + (-qJD(5) * t40 - t289) * t135, t293, t34 * t98 + t50 * t79 + (-t2 + (pkin(12) * t40 + t12 * t134) * qJD(5)) * t138 + (pkin(12) * t21 + qJD(5) * t7 + t295) * t135, -t34 * t99 + t50 * t78 + (-t1 + (pkin(12) * t41 + t12 * t137) * qJD(5)) * t138 + (-pkin(12) * t20 - qJD(5) * t8 - t294) * t135, t20 * t98 - t21 * t99 + t40 * t78 - t41 * t79 + t315 * t390 + (t1 * t134 - t137 * t2 + (t134 * t7 - t137 * t8) * qJD(6)) * t135, -t1 * t99 + t2 * t98 + t7 * t79 - t78 * t8 + (t12 * t390 + t135 * t4) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t87, 0, -t461, 0, -t55, t54, 0, 0, -t86 * t135 + (-t135 * t255 + t403) * t138, -t67 * t135 - t138 * t437 - t390 * t76 - t392 * t77, t442, t292, -t135 * t265 + t138 * t461, 0, -pkin(4) * t67 - pkin(12) * t442 - t55 * t138 + t58 * t392, pkin(4) * t437 + t55 * t135 + t277 * t379 + t390 * t58 - t430 * t461, pkin(12) * t292 + t378 * t77 - t390 * t42 - t392 * t43 - t431 * t437 + t306, -pkin(4) * t55 + ((-t43 * t135 - t42 * t138) * qJD(5) + t306) * pkin(12), t69 * t363 + (-t389 * t69 - t421) * t135, t309 * t390 + (t426 - t420 + (-t419 + t425) * qJD(6)) * t135 (t391 * t76 + t45) * t138 + (qJD(5) * t69 - t286) * t135, t68 * t361 + (t135 * t46 + t390 * t68) * t134 (-t393 * t76 + t46) * t138 + (-qJD(5) * t68 - t287) * t135, t292, t67 * t98 + t76 * t79 + (-t11 + (pkin(12) * t68 + t134 * t38) * qJD(5)) * t138 + (pkin(12) * t46 + qJD(5) * t22 + t291) * t135, -t67 * t99 + t76 * t78 + (-t10 + (pkin(12) * t69 + t137 * t38) * qJD(5)) * t138 + (-pkin(12) * t45 - qJD(5) * t23 - t290) * t135, t45 * t98 - t46 * t99 + t68 * t78 - t69 * t79 + t311 * t390 + (t10 * t134 - t11 * t137 + (t134 * t22 - t137 * t23) * qJD(6)) * t135, -t10 * t99 + t11 * t98 + t22 * t79 - t23 * t78 + (t135 * t26 + t38 * t390) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t327, -t328, 0, 0, 0, 0, 0, 0, 0, 0 (-t135 * t351 - t138 * t352) * t130 (t135 * t352 - t138 * t351) * t130, t462, -pkin(4) * t327 + pkin(12) * t462, 0, 0, 0, 0, 0, 0 (t106 * t393 - t72) * t138 + (-qJD(5) * t274 + t282) * t135 (t106 * t391 - t71) * t138 + (-qJD(5) * t94 - t281) * t135, t308 * t390 + (t134 * t71 - t137 * t72 + (-t134 * t274 - t137 * t94) * qJD(6)) * t135, pkin(12) * t283 - t274 * t79 - t71 * t99 + t72 * t98 - t78 * t94; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t340, -0.2e1 * t341, 0, t121, 0, 0, t135 * t384, t138 * t384, 0, 0, 0.2e1 * t127 * t354 - 0.2e1 * t331, 0.2e1 * t126 * t342 - 0.4e1 * t134 * t332, 0.2e1 * t135 * t362 + 0.2e1 * t391 * t400, 0.2e1 * t125 * t354 + 0.2e1 * t331, -0.2e1 * t134 * t341 + 0.2e1 * t135 * t360, t121, 0.2e1 * t98 * t392 - 0.2e1 * t138 * t79 + 0.2e1 * (t126 * t388 + t134 * t340) * pkin(12), -0.2e1 * t99 * t392 - 0.2e1 * t138 * t78 + 0.2e1 * (-t126 * t389 + 0.2e1 * t332) * pkin(12), 0.2e1 * t307 * t390 + 0.2e1 * (t134 * t78 - t137 * t79 + (t134 * t98 - t137 * t99) * qJD(6)) * t135, 0.2e1 * pkin(12) ^ 2 * t354 - 0.2e1 * t78 * t99 + 0.2e1 * t79 * t98; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t435, 0, -t34, t173, t6, t5, 0, 0, t388 * t41 - t428, qJD(6) * t310 - t134 * t21 - t424, t289, t389 * t40 - t423, -t288, 0, -pkin(5) * t21 - pkin(13) * t289 + t294, pkin(5) * t20 + pkin(13) * t288 + t295 (-t428 - t423 + (t422 + t427) * qJD(6)) * pkin(13) + t246, -pkin(5) * t4 + pkin(13) * t246; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t437, 0, -t67, t461, t30, t29, 0, 0, t388 * t69 - t426, qJD(6) * t309 - t134 * t46 - t421, t287, t389 * t68 - t420, -t286, 0, -pkin(5) * t46 - pkin(13) * t287 + t290, pkin(5) * t45 + pkin(13) * t286 + t291 (-t426 - t420 + (t419 + t425) * qJD(6)) * pkin(13) + t244, -pkin(5) * t26 + pkin(13) * t244; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92, -t224, 0, 0, 0, 0, 0, 0, 0, 0, t281, t282, t243, -pkin(5) * t92 + pkin(13) * t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t390, 0, -t392, 0, -t378, t379, 0, 0, -t96, -0.4e1 * t135 * t355 - t390 * t401, t134 * t392 - t360, t96, t273, 0 (pkin(13) * t404 + (-pkin(5) * t137 + pkin(12) * t134) * t135) * qJD(6) + (t134 * t317 - t380) * qJD(5) (t137 * t431 + t284) * qJD(6) + (t137 * t317 + t382) * qJD(5), t242, -pkin(5) * t378 + pkin(13) * t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t355, -0.2e1 * t342, 0, -0.2e1 * t355, 0, 0, t134 * t383, t137 * t383, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t20, 0, -t21, t34, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t45, 0, -t46, t67, t11, t10, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, t71, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135 * t389 + t363, 0, -t134 * t390 - t361, t392, t79, t78, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t388, 0, -t389, 0, -pkin(13) * t388, pkin(13) * t389, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
