% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
% MDP [35x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRPRRR14_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox (ehem. IRT-Maple-Toolbox)
% Datum: 2018-12-10 18:39
% Revision: bb42a8b95257d9bc83910d26e849f5825122f662 (2018-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function tauc = S6RRPRRR14_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1),zeros(35,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [14x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [35 1]), ...
  'S6RRPRRR14_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [35x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2018-12-10 18:33:31
% EndTime: 2018-12-10 18:34:29
% DurationCPUTime: 26.23s
% Computational Cost: add. (38758->820), mult. (122657->1166), div. (0->0), fcn. (107760->16), ass. (0->343)
t1073 = cos(qJ(4));
t887 = sin(pkin(8));
t1011 = t887 * t1073;
t886 = sin(pkin(14));
t888 = sin(pkin(7));
t890 = cos(pkin(8));
t891 = cos(pkin(7));
t894 = sin(qJ(4));
t1069 = cos(pkin(14));
t970 = t1073 * t1069;
t1087 = t891 * t1011 + (-t886 * t894 + t890 * t970) * t888;
t895 = sin(qJ(2));
t1048 = t891 * t895;
t889 = sin(pkin(6));
t898 = cos(qJ(2));
t992 = t1069 * t898;
t918 = t889 * (-t1048 * t886 + t992);
t841 = qJD(1) * t918;
t996 = t895 * t1069;
t917 = t889 * (t886 * t898 + t891 * t996);
t839 = qJD(1) * t917;
t1029 = qJD(1) * t889;
t1007 = t895 * t1029;
t977 = t888 * t1007;
t924 = -t839 * t890 + t887 * t977;
t1033 = t1087 * qJD(4) - t1073 * t841 - t894 * t924;
t1010 = t890 * t1073;
t1008 = t1073 * t886;
t1054 = t887 * t894;
t993 = t1069 * t894;
t817 = t891 * t1054 + (t890 * t993 + t1008) * t888;
t1051 = t889 * t895;
t940 = t888 * t1011 * t1051;
t932 = qJD(1) * t940;
t1032 = t817 * qJD(4) - t1010 * t839 - t841 * t894 + t932;
t1027 = qJD(3) * t888;
t1058 = t886 * t887;
t1071 = pkin(11) * t890;
t1070 = cos(pkin(6));
t1012 = pkin(1) * t1070;
t978 = t898 * t1012;
t875 = qJD(1) * t978;
t999 = -qJ(3) * t891 - pkin(10);
t959 = t999 * t895;
t942 = t889 * t959;
t825 = qJD(1) * t942 + t875;
t1050 = t889 * t898;
t979 = t895 * t1012;
t909 = t1050 * t999 - t979;
t826 = t909 * qJD(1);
t1068 = qJ(3) * t888;
t941 = pkin(2) * t895 - t1068 * t898;
t848 = t941 * t1029;
t997 = t891 * t1069;
t998 = t888 * t1069;
t733 = -t825 * t886 + t826 * t997 + t848 * t998;
t696 = pkin(3) * t977 - t1071 * t841 + t733;
t1072 = pkin(11) * t887;
t755 = -t826 * t888 + t891 * t848;
t729 = pkin(3) * t839 - t1072 * t841 + t755;
t943 = t1027 * t1058 + t696 * t887 - t890 * t729;
t989 = t1070 * qJD(1);
t949 = t989 + qJD(2);
t925 = t949 * t1069;
t869 = t886 * t1007;
t1052 = t889 * t891;
t946 = t992 * t1052;
t926 = qJD(1) * t946 - t869;
t902 = -t888 * t925 - t926;
t1006 = t898 * t1029;
t922 = t888 * t1006 - t891 * t949;
t900 = -t887 * t922 - t890 * t902;
t1049 = t890 * t894;
t1056 = t886 * t891;
t1057 = t886 * t888;
t734 = t826 * t1056 + t848 * t1057 + t1069 * t825;
t694 = pkin(11) * t924 + t734;
t857 = pkin(2) * t1056 + qJ(3) * t998;
t806 = (t887 * t891 + t890 * t998) * pkin(11) + t857;
t879 = pkin(2) * t997;
t820 = pkin(3) * t891 + t879 + (-qJ(3) - t1071) * t1057;
t844 = (-pkin(3) * t1069 - pkin(11) * t1058 - pkin(2)) * t888;
t910 = t1010 * t820 + t1011 * t844 - t894 * t806;
t1095 = -t696 * t1049 - t729 * t1054 - t1073 * t694 + (-t1049 * t886 + t970) * t1027 + t910 * qJD(4);
t779 = -t839 * t887 - t890 * t977;
t1094 = -pkin(12) * t779 - t1095;
t1091 = -t1032 * pkin(4) + pkin(12) * t1033 - t943;
t933 = t949 * t888;
t847 = t1006 * t891 + t933;
t1059 = t886 * t847;
t1082 = -t888 ^ 2 - t891 ^ 2;
t760 = t1082 * t1007 * t1069 - t1059;
t761 = t1069 * t847 + t1082 * t869;
t724 = t1049 * t760 + t1073 * t761;
t1002 = qJD(4) * t1073;
t974 = t887 * t1002;
t1093 = t724 - t974;
t795 = t1073 * t806;
t1090 = (t1008 * t890 + t993) * t1027 + (t795 + (t820 * t890 + t844 * t887) * t894) * qJD(4) + t1010 * t696 + t1011 * t729 - t894 * t694;
t853 = t887 * t998 - t890 * t891;
t893 = sin(qJ(5));
t897 = cos(qJ(5));
t758 = t817 * t893 + t897 * t853;
t1035 = -qJD(5) * t758 + t1033 * t897 + t779 * t893;
t759 = t817 * t897 - t853 * t893;
t1034 = qJD(5) * t759 + t1033 * t893 - t897 * t779;
t1089 = t900 * t1073;
t1018 = qJD(1) * qJD(2);
t1000 = t889 * t1018;
t972 = t895 * t1000;
t950 = t888 * t972;
t969 = t1069 * t1029;
t944 = qJD(2) * t969;
t971 = t898 * t1000;
t1031 = t944 * t1048 + t886 * t971;
t990 = t1031 * t890;
t1088 = t887 * t950 - t990;
t788 = t895 * t969 + t1059;
t726 = t788 * t894 - t1089;
t725 = qJD(5) + t726;
t728 = t1073 * t788 + t894 * t900;
t1078 = t887 * t902 - t890 * t922 + qJD(4);
t750 = t897 * t1078;
t655 = t728 * t893 - t750;
t653 = qJD(6) + t655;
t882 = t889 ^ 2;
t1086 = -0.2e1 * t882 * t1018;
t927 = pkin(10) * t1050 + t979;
t1047 = t891 * t898;
t995 = t1070 * t888;
t928 = t1047 * t889 + t995;
t811 = qJ(3) * t928 + t927;
t913 = pkin(2) * t1070 + t942;
t823 = t978 + t913;
t845 = (-pkin(2) * t898 - t1068 * t895 - pkin(1)) * t889;
t731 = t823 * t1056 + t845 * t1057 + t1069 * t811;
t814 = t1051 * t886 - t1069 * t995 - t946;
t994 = t1070 * t891;
t929 = t1050 * t888 - t994;
t919 = t887 * t929;
t906 = -t890 * t814 - t919;
t679 = pkin(11) * t906 + t731;
t730 = -t886 * t811 + t823 * t997 + t845 * t998;
t815 = t886 * t928 + t889 * t996;
t683 = -pkin(3) * t929 - t1071 * t815 + t730;
t753 = -t823 * t888 + t891 * t845;
t709 = pkin(3) * t814 - t1072 * t815 + t753;
t1015 = t683 * t1049 + t709 * t1054 + t1073 * t679;
t757 = -t814 * t887 + t890 * t929;
t599 = -pkin(12) * t757 + t1015;
t621 = -t683 * t887 + t890 * t709;
t737 = t1010 * t814 + t1073 * t919 + t894 * t815;
t738 = t1073 * t815 + t894 * t906;
t602 = pkin(4) * t737 - pkin(12) * t738 + t621;
t1085 = t897 * t599 + t893 * t602;
t858 = t1054 * t893 - t890 * t897;
t1084 = -t760 * t887 * t893 + qJD(5) * t858 + t1093 * t897;
t1037 = -t779 * pkin(4) + t1090;
t751 = -t820 * t887 + t890 * t844;
t710 = -pkin(4) * t1087 - pkin(12) * t817 + t751;
t1013 = t820 * t1049 + t844 * t1054 + t795;
t717 = -pkin(12) * t853 + t1013;
t1036 = t893 * t710 + t897 * t717;
t1053 = t887 * t897;
t859 = t1053 * t894 + t890 * t893;
t1083 = qJD(5) * t859 - t1053 * t760 - t1093 * t893;
t1081 = MDP(5) * (t895 ^ 2 - t898 ^ 2);
t1080 = qJD(3) * t922;
t768 = -t1031 * t887 - t890 * t950;
t1079 = t768 * MDP(19);
t1025 = qJD(4) * t894;
t1004 = t887 * t1025;
t723 = -t1010 * t760 + t894 * t761;
t963 = -t723 + t1004;
t1021 = qJD(5) * t897;
t1023 = qJD(5) * t893;
t1077 = -t710 * t1021 + t1023 * t717 + t1091 * t893 + t1094 * t897;
t784 = qJ(3) * t847 + qJD(1) * t927;
t789 = qJD(2) * pkin(2) + qJD(1) * t913 + t875;
t836 = qJD(1) * t845;
t715 = t789 * t1056 + t836 * t1057 + t1069 * t784;
t654 = pkin(11) * t900 + t715;
t714 = -t886 * t784 + t789 * t997 + t836 * t998;
t658 = -pkin(3) * t922 - t1071 * t788 + t714;
t749 = -t888 * t789 + t891 * t836 + qJD(3);
t682 = pkin(3) * t902 - t1072 * t788 + t749;
t594 = t658 * t1049 + t682 * t1054 + t1073 * t654;
t589 = pkin(12) * t1078 + t594;
t615 = -t658 * t887 + t890 * t682;
t591 = pkin(4) * t726 - pkin(12) * t728 + t615;
t560 = t589 * t897 + t591 * t893;
t964 = qJD(2) * t989;
t947 = pkin(1) * t964;
t872 = t898 * t947;
t907 = (qJD(2) * t959 + qJD(3) * t1047) * t889;
t756 = qJD(1) * t907 + qJD(3) * t933 + t872;
t1026 = qJD(3) * t895;
t785 = qJD(2) * t909 - t1026 * t1052;
t774 = t785 * qJD(1);
t813 = (qJD(2) * t941 - t1026 * t888) * t889;
t801 = qJD(1) * t813;
t687 = t774 * t1056 + t801 * t1057 + t1069 * t756;
t643 = pkin(11) * t1088 + t687;
t686 = -t756 * t886 + t774 * t997 + t801 * t998;
t833 = -t972 * t1056 + t898 * t944;
t646 = pkin(3) * t950 - t1071 * t833 + t686;
t741 = -t888 * t774 + t891 * t801;
t689 = pkin(3) * t1031 - t1072 * t833 + t741;
t973 = t890 * t1002;
t921 = t1025 * t654 - t646 * t1049 - t689 * t1054 - t1073 * t643 - t658 * t973 - t682 * t974;
t562 = -pkin(12) * t768 - t921;
t614 = -t646 * t887 + t890 * t689;
t644 = qJD(4) * t1089 - t1025 * t788 + t1073 * t833 + t1088 * t894;
t645 = -qJD(2) * t932 + qJD(4) * t728 + t1073 * t990 + t894 * t833;
t584 = pkin(4) * t645 - pkin(12) * t644 + t614;
t549 = -qJD(5) * t560 - t562 * t893 + t897 * t584;
t547 = -pkin(5) * t645 - t549;
t657 = t1078 * t893 + t897 * t728;
t1075 = t653 * (pkin(5) * t657 + pkin(13) * t653) + t547;
t840 = qJD(2) * t917;
t1028 = qJD(2) * t895;
t1005 = t889 * t1028;
t976 = t888 * t1005;
t780 = -t840 * t887 - t890 * t976;
t876 = qJD(2) * t978;
t767 = qJD(3) * t995 + t876 + t907;
t700 = t785 * t1056 + t813 * t1057 + t1069 * t767;
t923 = -t840 * t890 + t887 * t976;
t662 = pkin(11) * t923 + t700;
t699 = -t767 * t886 + t785 * t997 + t813 * t998;
t842 = qJD(2) * t918;
t666 = pkin(3) * t976 - t1071 * t842 + t699;
t744 = -t785 * t888 + t891 * t813;
t703 = pkin(3) * t840 - t1072 * t842 + t744;
t920 = -t1025 * t679 + t666 * t1049 + t703 * t1054 + t1073 * t662 + t683 * t973 + t709 * t974;
t569 = -pkin(12) * t780 + t920;
t617 = -t666 * t887 + t890 * t703;
t667 = -qJD(4) * t737 + t1073 * t842 + t894 * t923;
t668 = -qJD(2) * t940 + qJD(4) * t738 + t1010 * t840 + t894 * t842;
t587 = pkin(4) * t668 - pkin(12) * t667 + t617;
t1074 = -qJD(5) * t1085 - t569 * t893 + t587 * t897;
t899 = qJD(1) ^ 2;
t896 = cos(qJ(6));
t1019 = qJD(6) * t896;
t607 = qJD(5) * t750 - t1023 * t728 + t897 * t644 - t893 * t768;
t892 = sin(qJ(6));
t1016 = t725 * t1019 + t896 * t607 + t892 * t645;
t1020 = qJD(6) * t892;
t572 = -t1020 * t657 + t1016;
t1067 = t572 * t892;
t1062 = t657 * t892;
t618 = -t896 * t725 + t1062;
t1066 = t618 * t653;
t620 = t657 * t896 + t725 * t892;
t1065 = t620 * t653;
t1064 = t655 * t725;
t1063 = t657 * t725;
t1061 = t726 * t897;
t1060 = t882 * t899;
t985 = t893 * t644 + t897 * t768;
t608 = qJD(5) * t657 + t985;
t1046 = t892 * t608;
t1045 = t896 * t608;
t1044 = t594 - t725 * (pkin(5) * t893 - pkin(13) * t897);
t593 = t1010 * t658 + t1011 * t682 - t894 * t654;
t633 = pkin(4) * t728 + pkin(12) * t726;
t1043 = t897 * t593 + t893 * t633;
t1041 = -t1032 * pkin(5) + t1036 * qJD(5) + t1091 * t897 - t1094 * t893;
t739 = t1087 * t896 + t759 * t892;
t1039 = -qJD(6) * t739 + t1032 * t892 + t1035 * t896;
t740 = -t1087 * t892 + t759 * t896;
t1038 = qJD(6) * t740 - t1032 * t896 + t1035 * t892;
t1024 = qJD(5) * t892;
t1022 = qJD(5) * t896;
t1017 = pkin(1) * t1060;
t1003 = t890 * t1025;
t548 = t591 * t1021 - t1023 * t589 + t897 * t562 + t893 * t584;
t546 = pkin(13) * t645 + t548;
t565 = -t654 * t1002 - t658 * t1003 - t682 * t1004 + t646 * t1010 + t689 * t1011 - t894 * t643;
t563 = pkin(4) * t768 - t565;
t555 = pkin(5) * t608 - pkin(13) * t607 + t563;
t988 = -t546 * t892 + t896 * t555;
t986 = t607 * t892 - t896 * t645;
t984 = t725 * t897;
t983 = t653 * t896;
t871 = -pkin(5) * t897 - pkin(13) * t893 - pkin(4);
t982 = pkin(13) * t728 - qJD(6) * t871 + t1043;
t981 = t882 * t895 * t898 * MDP(4);
t968 = t889 * t899 * t1070;
t967 = pkin(1) * t1086;
t628 = -t1061 * t896 + t728 * t892;
t962 = t1021 * t896 - t628;
t716 = t853 * pkin(4) - t910;
t630 = t758 * pkin(5) - t759 * pkin(13) + t716;
t961 = -pkin(13) * t1032 - qJD(6) * t630 + t1077;
t623 = -pkin(13) * t1087 + t1036;
t960 = -pkin(5) * t1034 + pkin(13) * t1035 + qJD(6) * t623 - t1037;
t958 = t546 * t896 + t555 * t892;
t558 = pkin(13) * t725 + t560;
t588 = -pkin(4) * t1078 - t593;
t571 = t655 * pkin(5) - t657 * pkin(13) + t588;
t553 = t558 * t896 + t571 * t892;
t957 = t558 * t892 - t571 * t896;
t567 = pkin(13) * t737 + t1085;
t912 = t1010 * t683 + t1011 * t709 - t894 * t679;
t598 = t757 * pkin(4) - t912;
t680 = t738 * t893 + t897 * t757;
t681 = t738 * t897 - t757 * t893;
t578 = t680 * pkin(5) - t681 * pkin(13) + t598;
t956 = t567 * t896 + t578 * t892;
t955 = -t567 * t892 + t578 * t896;
t559 = -t589 * t893 + t591 * t897;
t952 = -t599 * t893 + t602 * t897;
t625 = t681 * t896 + t737 * t892;
t624 = t681 * t892 - t896 * t737;
t951 = t710 * t897 - t717 * t893;
t938 = -t1019 * t653 - t1046;
t937 = -t1020 * t653 + t1045;
t936 = -pkin(12) * t645 + t588 * t725;
t935 = t602 * t1021 - t1023 * t599 + t897 * t569 + t893 * t587;
t931 = -t1011 * t896 - t892 * t859;
t930 = t1011 * t892 - t896 * t859;
t557 = -pkin(5) * t725 - t559;
t916 = -pkin(13) * t608 + (t557 + t559) * t653;
t904 = -t679 * t1002 - t683 * t1003 - t709 * t1004 + t1010 * t666 + t1011 * t703 - t894 * t662;
t903 = t949 * t927;
t570 = t780 * pkin(4) - t904;
t856 = -qJ(3) * t1057 + t879;
t627 = -t1061 * t892 - t896 * t728;
t622 = pkin(5) * t1087 - t951;
t613 = qJD(5) * t681 + t667 * t893 + t897 * t780;
t612 = -qJD(5) * t680 + t667 * t897 - t780 * t893;
t580 = qJD(6) * t625 + t612 * t892 - t896 * t668;
t579 = -qJD(6) * t624 + t612 * t896 + t668 * t892;
t576 = -pkin(5) * t728 + t593 * t893 - t633 * t897;
t573 = qJD(6) * t620 + t986;
t566 = -pkin(5) * t737 - t952;
t556 = t613 * pkin(5) - t612 * pkin(13) + t570;
t551 = -pkin(5) * t668 - t1074;
t550 = pkin(13) * t668 + t935;
t545 = -qJD(6) * t553 + t988;
t544 = -qJD(6) * t957 + t958;
t1 = [((-qJD(6) * t956 - t550 * t892 + t556 * t896) * t653 + t955 * t608 + t545 * t680 - t957 * t613 + t551 * t618 + t566 * t573 + t547 * t624 + t557 * t580) * MDP(34) + (-t1085 * t645 - t548 * t737 - t560 * t668 + t563 * t681 + t570 * t657 + t588 * t612 + t598 * t607 - t725 * t935) * MDP(28) + (-t1078 * t668 + t757 * t645 + t780 * t726 + t768 * t737) * MDP(18) + (-t1078 * t780 + t768 * t757) * MDP(19) + (t1078 * t667 - t757 * t644 - t780 * t728 - t768 * t738) * MDP(17) + (t1015 * t768 - t1078 * t920 + t594 * t780 + t614 * t738 + t615 * t667 + t617 * t728 + t621 * t644 - t757 * t921) * MDP(21) + (t1078 * t904 - t565 * t757 - t593 * t780 + t614 * t737 + t615 * t668 + t617 * t726 + t621 * t645 - t768 * t912) * MDP(20) + (t551 * t620 + t566 * t572 + t547 * t625 + t557 * t579 - (qJD(6) * t955 + t550 * t896 + t556 * t892) * t653 - t956 * t608 - t544 * t680 - t553 * t613) * MDP(35) + (MDP(6) * qJD(2) * t1050 - MDP(7) * t1005) * (0.2e1 * t989 + qJD(2)) + (-qJD(2) * t903 + t895 * t967 - t927 * t964) * MDP(9) + (t1074 * t725 + t549 * t737 + t559 * t668 + t563 * t680 + t570 * t655 + t588 * t613 + t598 * t608 + t952 * t645) * MDP(27) + (-(-pkin(10) * t1005 + t876) * t949 - (-pkin(10) * t972 + t872) * t1070 + t898 * t967) * MDP(10) + (-t1031 * t731 - t686 * t815 - t687 * t814 - t699 * t788 - t700 * t902 - t714 * t842 - t715 * t840 - t730 * t833) * MDP(13) + (t744 * t788 + t753 * t833 + t741 * t815 + t749 * t842 + t700 * t922 - t687 * t994 + (t687 * t898 + (-qJD(1) * t731 - t715) * t1028) * t889 * t888) * MDP(12) + (-t744 * t926 + t753 * t1031 + t741 * t814 + t749 * t840 - t699 * t922 + t686 * t994 + (-t744 * t925 + (-t686 * t898 + (qJD(1) * t730 + t714) * t1028) * t889) * t888) * MDP(11) + 0.2e1 * t981 * t1018 + (t686 * t730 + t687 * t731 + t699 * t714 + t700 * t715 + t741 * t753 + t744 * t749) * MDP(14) + (-t644 * t737 - t645 * t738 - t667 * t726 - t668 * t728) * MDP(16) + (t644 * t738 + t667 * t728) * MDP(15) + (t645 * t737 + t668 * t725) * MDP(26) + (-t608 * t737 - t613 * t725 - t645 * t680 - t655 * t668) * MDP(25) + (t607 * t737 + t612 * t725 + t645 * t681 + t657 * t668) * MDP(24) + t1081 * t1086 + (t572 * t625 + t579 * t620) * MDP(29) + (-t572 * t624 - t573 * t625 - t579 * t618 - t580 * t620) * MDP(30) + (t608 * t680 + t613 * t653) * MDP(33) + (-t573 * t680 - t580 * t653 - t608 * t624 - t613 * t618) * MDP(32) + (t572 * t680 + t579 * t653 + t608 * t625 + t613 * t620) * MDP(31) + (t607 * t681 + t612 * t657) * MDP(22) + (-t607 * t680 - t608 * t681 - t612 * t655 - t613 * t657) * MDP(23); (-t856 * t833 - t857 * t1031 + t733 * t788 + t714 * t841 - t734 * t926 + t715 * t839 + (t1069 * t687 - t686 * t886 - t734 * t925) * t888 + (t886 * t788 + (t1069 * t933 + t926) * t1069) * t1027) * MDP(13) + ((-t623 * t892 + t630 * t896) * t608 + t545 * t758 + t622 * t573 + t547 * t739 + (t892 * t961 - t896 * t960) * t653 + t1041 * t618 + t1038 * t557 - t1034 * t957) * MDP(34) + (t1013 * t768 + t1033 * t615 - t594 * t779 + t614 * t817 + t751 * t644 + t728 * t943 - t853 * t921) * MDP(21) + (-t1087 * t768 + t853 * t645 - t779 * t726) * MDP(18) + (t1032 * t615 - t1087 * t614 - t565 * t853 + t593 * t779 + t751 * t645 + t726 * t943 - t768 * t910) * MDP(20) + (-t1032 * t560 + t1035 * t588 - t1036 * t645 + t1037 * t657 + t1077 * t725 + t1087 * t548 + t563 * t759 + t716 * t607) * MDP(28) + (-t1032 * t655 - t1034 * t725 + t1087 * t608 - t645 * t758) * MDP(25) + (t1032 * t657 + t1035 * t725 - t1087 * t607 + t645 * t759) * MDP(24) + (t1032 * t725 - t1087 * t645) * MDP(26) + (-t1032 * t728 - t1033 * t726 + t1087 * t644 - t645 * t817) * MDP(16) - (-t1033 * MDP(17) + t1032 * MDP(18) - t779 * MDP(19) + t1090 * MDP(20) + MDP(21) * t1095) * t1078 + (t951 * t645 - t549 * t1087 + t716 * t608 + t563 * t758 + ((-qJD(5) * t717 - t1091) * t897 + (-qJD(5) * t710 + t1094) * t893) * t725 + t1037 * t655 + t1034 * t588 + t1032 * t559) * MDP(27) + (-t853 * t644 + t779 * t728 - t768 * t817) * MDP(17) + (-pkin(10) * t971 + qJD(1) * t903) * MDP(9) + (-t687 * t891 - t755 * t788 - t749 * t841 - t734 * t922 + (-pkin(2) * t833 + t741 * t886 + t1069 * t1080 + (-qJD(2) * t857 + t715) * t1007) * t888) * MDP(12) + (t686 * t891 + t755 * t926 - t749 * t839 + t733 * t922 + (-pkin(2) * t1031 - t741 * t1069 + t886 * t1080 + t755 * t925 + (qJD(2) * t856 - t714) * t1007) * t888) * MDP(11) + (MDP(7) * t968 + (t1017 - t947) * MDP(9)) * t895 + (t686 * t856 + t687 * t857 - t714 * t733 - t715 * t734 - t749 * t755 + (-pkin(2) * t741 + (t1069 * t715 - t714 * t886) * qJD(3)) * t888) * MDP(14) + (-t1034 * t618 - t1038 * t653 - t573 * t758 - t608 * t739) * MDP(32) + (t1039 * t620 + t572 * t740) * MDP(29) + (t1034 * t620 + t1039 * t653 + t572 * t758 + t608 * t740) * MDP(31) + (-t1038 * t620 - t1039 * t618 - t572 * t739 - t573 * t740) * MDP(30) + (t622 * t572 + t547 * t740 - (t623 * t896 + t630 * t892) * t608 - t544 * t758 + (t892 * t960 + t896 * t961) * t653 + t1041 * t620 + t1039 * t557 - t1034 * t553) * MDP(35) + (t1035 * t657 + t607 * t759) * MDP(22) + (-t1034 * t657 - t1035 * t655 - t607 * t758 - t608 * t759) * MDP(23) + (t1033 * t728 + t644 * t817) * MDP(15) + (t1034 * t653 + t608 * t758) * MDP(33) + (-t872 + (-pkin(10) * t1007 + t875) * t989 + t898 * t1017 + t875 * qJD(2)) * MDP(10) + t853 * t1079 + t1060 * t1081 - t898 * MDP(6) * t968 - t899 * t981; (t760 * t922 + t1031) * MDP(11) + (-t761 * t922 + t833) * MDP(12) + (t760 * t788 + t761 * t902) * MDP(13) + (-t714 * t760 - t715 * t761 + t741) * MDP(14) + (t890 * t645 + t723 * t1078 + (-t1025 * t1078 - t1073 * t768 + t760 * t726) * t887) * MDP(20) + (t890 * t644 + t724 * t1078 + (-t1002 * t1078 + t760 * t728 + t894 * t768) * t887) * MDP(21) + (-t608 * t1011 - t1083 * t725 - t858 * t645 + t963 * t655) * MDP(27) + (-t607 * t1011 + t1084 * t725 - t859 * t645 + t963 * t657) * MDP(28) + (t858 * t573 + t931 * t608 + (t930 * qJD(6) + t1084 * t892 + t896 * t963) * t653 + t1083 * t618) * MDP(34) + (t858 * t572 + t930 * t608 + (-t931 * qJD(6) + t1084 * t896 - t892 * t963) * t653 + t1083 * t620) * MDP(35); -t726 ^ 2 * MDP(16) + (t1078 * t726 + t644) * MDP(17) - t645 * MDP(18) - t1079 + (t1078 * t594 + t565) * MDP(20) + (t1078 * t593 + t615 * t726 + t921) * MDP(21) + (t607 * t893 + t657 * t984) * MDP(22) + ((t607 - t1064) * t897 + (-t608 - t1063) * t893) * MDP(23) + (t645 * t893 + t725 * t984) * MDP(24) + (-t725 ^ 2 * t893 + t645 * t897) * MDP(25) + (-pkin(4) * t608 - t594 * t655 + (-t563 + (-pkin(12) * qJD(5) - t633) * t725) * t897 + (t593 * t725 + t936) * t893) * MDP(27) + (-pkin(4) * t607 + t563 * t893 - t594 * t657 + (pkin(12) * t1023 + t1043) * t725 + t936 * t897) * MDP(28) + (t572 * t893 * t896 + (-t1020 * t893 + t962) * t620) * MDP(29) + (t618 * t628 + t620 * t627 + (-t618 * t896 - t620 * t892) * t1021 + (-t1067 - t573 * t896 + (t618 * t892 - t620 * t896) * qJD(6)) * t893) * MDP(30) + (-t572 * t897 + t962 * t653 + (t620 * t725 + t937) * t893) * MDP(31) + (t573 * t897 + (-t1021 * t892 + t627) * t653 + (-t618 * t725 + t938) * t893) * MDP(32) + (t653 * t725 * t893 - t608 * t897) * MDP(33) + (t871 * t1045 - t557 * t627 - t576 * t618 + (-t1044 * t896 + t892 * t982) * t653 + (t557 * t1024 - t545 + (qJD(5) * t618 + t938) * pkin(12)) * t897 + (t557 * t1019 + t547 * t892 - t725 * t957 + (t1024 * t653 + t573) * pkin(12)) * t893) * MDP(34) + (-t871 * t1046 - t557 * t628 - t576 * t620 + (t1044 * t892 + t896 * t982) * t653 + (t557 * t1022 + t544 + (qJD(5) * t620 - t937) * pkin(12)) * t897 + (-t557 * t1020 + t547 * t896 - t725 * t553 + (t1022 * t653 + t572) * pkin(12)) * t893) * MDP(35) + (t726 * MDP(15) + MDP(16) * t728 + MDP(18) * t1078 - t615 * MDP(20) - t657 * MDP(24) + t655 * MDP(25) - t725 * MDP(26) - t559 * MDP(27) + t560 * MDP(28)) * t728; -t655 ^ 2 * MDP(23) + (t607 + t1064) * MDP(24) + (t1063 - t985) * MDP(25) + t645 * MDP(26) + (t560 * t725 + t549) * MDP(27) + (t559 * t725 + t588 * t655 - t548) * MDP(28) + (t620 * t983 + t1067) * MDP(29) + ((t572 - t1066) * t896 + (-t573 - t1065) * t892) * MDP(30) + (t653 * t983 + t1046) * MDP(31) + (-t653 ^ 2 * t892 + t1045) * MDP(32) + (-pkin(5) * t573 - t1075 * t896 - t560 * t618 + t916 * t892) * MDP(34) + (-pkin(5) * t572 + t1075 * t892 - t560 * t620 + t916 * t896) * MDP(35) + (MDP(22) * t655 + MDP(23) * t657 - MDP(25) * qJD(5) - MDP(27) * t588 - MDP(31) * t620 + MDP(32) * t618 - MDP(33) * t653 + MDP(34) * t957 + MDP(35) * t553) * t657; t620 * t618 * MDP(29) + (-t618 ^ 2 + t620 ^ 2) * MDP(30) + (t1016 + t1066) * MDP(31) + (-t986 + t1065) * MDP(32) + t608 * MDP(33) + (t553 * t653 - t557 * t620 + t988) * MDP(34) + (t557 * t618 - t653 * t957 - t958) * MDP(35) + (-MDP(31) * t1062 - MDP(32) * t620 - MDP(34) * t553 + MDP(35) * t957) * qJD(6);];
tauc  = t1;
