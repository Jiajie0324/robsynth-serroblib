% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox (ehem. IRT-Maple-Toolbox)
% Datum: 2018-12-10 18:39
% Revision: bb42a8b95257d9bc83910d26e849f5825122f662 (2018-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR14_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR14_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR14_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_invdynJ_fixb_regmin_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2018-12-10 18:32:42
% EndTime: 2018-12-10 18:34:03
% DurationCPUTime: 29.40s
% Computational Cost: add. (50677->928), mult. (143809->1337), div. (0->0), fcn. (127167->30), ass. (0->444)
t444 = sin(qJ(2));
t445 = sin(qJ(1));
t450 = cos(qJ(1));
t596 = pkin(6) + qJ(2);
t542 = cos(t596) / 0.2e1;
t597 = pkin(6) - qJ(2);
t563 = cos(t597);
t478 = t563 / 0.2e1 + t542;
t365 = t444 * t445 - t450 * t478;
t540 = sin(t596) / 0.2e1;
t561 = sin(t597);
t394 = t540 - t561 / 0.2e1;
t449 = cos(qJ(2));
t366 = t394 * t450 + t445 * t449;
t428 = pkin(7) - pkin(14);
t419 = cos(t428) / 0.2e1;
t427 = pkin(7) + pkin(14);
t426 = cos(t427);
t387 = t419 + t426 / 0.2e1;
t434 = sin(pkin(14));
t437 = sin(pkin(6));
t418 = sin(t427) / 0.2e1;
t425 = sin(t428);
t593 = t418 + t425 / 0.2e1;
t553 = t437 * t593;
t249 = t365 * t387 + t366 * t434 + t450 * t553;
t386 = t418 - t425 / 0.2e1;
t388 = t419 - t426 / 0.2e1;
t438 = cos(pkin(14));
t631 = t437 * t450;
t250 = t365 * t386 - t366 * t438 + t388 * t631;
t436 = sin(pkin(7));
t440 = cos(pkin(7));
t323 = -t365 * t436 + t440 * t631;
t443 = sin(qJ(4));
t594 = pkin(8) + qJ(4);
t539 = sin(t594) / 0.2e1;
t595 = pkin(8) - qJ(4);
t560 = sin(t595);
t476 = t539 + t560 / 0.2e1;
t541 = cos(t594) / 0.2e1;
t562 = cos(t595);
t477 = t562 / 0.2e1 + t541;
t124 = -t249 * t477 + t250 * t443 - t323 * t476;
t441 = sin(qJ(6));
t446 = cos(qJ(6));
t392 = t539 - t560 / 0.2e1;
t395 = t541 - t562 / 0.2e1;
t448 = cos(qJ(4));
t125 = t249 * t392 + t250 * t448 - t323 * t395;
t435 = sin(pkin(8));
t439 = cos(pkin(8));
t206 = -t249 * t435 + t323 * t439;
t442 = sin(qJ(5));
t447 = cos(qJ(5));
t84 = t125 * t447 + t206 * t442;
t707 = -t124 * t446 + t441 * t84;
t706 = t124 * t441 + t446 * t84;
t626 = t440 * t444;
t489 = (-t434 * t626 + t438 * t449) * t437;
t358 = qJD(1) * t489;
t490 = (t434 * t449 + t438 * t626) * t437;
t356 = qJD(1) * t490;
t613 = qJD(1) * t437;
t583 = t444 * t613;
t552 = t436 * t583;
t526 = t435 * t552;
t485 = -t356 * t439 + t526;
t627 = t439 * t448;
t637 = t435 * t448;
t690 = t436 * (-t434 * t443 + t438 * t627) + t440 * t637;
t617 = t690 * qJD(4) - t358 * t448 - t443 * t485;
t628 = t439 * t443;
t639 = t435 * t443;
t336 = t440 * t639 + (t434 * t448 + t438 * t628) * t436;
t616 = t336 * qJD(4) - t356 * t627 - t358 * t443 + t448 * t526;
t655 = cos(pkin(6));
t584 = pkin(1) * t655;
t417 = t449 * t584;
t409 = qJD(1) * t417;
t653 = qJ(3) * t440;
t570 = -pkin(10) - t653;
t534 = t444 * t570;
t511 = t437 * t534;
t343 = qJD(1) * t511 + t409;
t416 = t444 * t584;
t632 = t437 * t449;
t465 = t570 * t632 - t416;
t344 = t465 * qJD(1);
t654 = qJ(3) * t436;
t510 = pkin(2) * t444 - t449 * t654;
t371 = t510 * t613;
t630 = t438 * t440;
t636 = t436 * t438;
t230 = -t343 * t434 + t344 * t630 + t371 * t636;
t671 = pkin(11) * t439;
t183 = pkin(3) * t552 - t358 * t671 + t230;
t277 = -t344 * t436 + t440 * t371;
t672 = pkin(11) * t435;
t221 = pkin(3) * t356 - t358 * t672 + t277;
t611 = qJD(3) * t436;
t580 = t434 * t611;
t513 = -t439 * t221 + (t183 + t580) * t435;
t641 = t434 * t440;
t642 = t434 * t436;
t231 = t438 * t343 + t344 * t641 + t371 * t642;
t181 = pkin(11) * t485 + t231;
t378 = pkin(2) * t641 + qJ(3) * t636;
t635 = t436 * t439;
t327 = (t435 * t440 + t438 * t635) * pkin(11) + t378;
t414 = pkin(2) * t630;
t339 = pkin(3) * t440 + t414 + (-qJ(3) - t671) * t642;
t361 = (-pkin(3) * t438 - t434 * t672 - pkin(2)) * t436;
t519 = t339 * t439 + t361 * t435;
t688 = -t443 * t327 + t519 * t448;
t703 = (-t434 * t628 + t438 * t448) * t611 + t688 * qJD(4) - t448 * t181 - t183 * t628 - t221 * t639;
t559 = t655 * qJD(1);
t517 = t559 + qJD(2);
t582 = t449 * t613;
t482 = t436 * t582 - t440 * t517;
t364 = t436 * t517 + t440 * t582;
t646 = t364 * t438;
t687 = t434 * t583 - t646;
t693 = t435 * t482 + t439 * t687;
t702 = t125 * t442 - t206 * t447;
t430 = t437 ^ 2;
t701 = 0.2e1 * t430;
t297 = -t356 * t435 - t439 * t552;
t699 = pkin(12) * t297 + t703;
t698 = -t616 * pkin(4) + t617 * pkin(12) - t513;
t700 = pkin(1) * t701;
t315 = t448 * t327;
t695 = (t434 * t627 + t438 * t443) * t611 + (t443 * t519 + t315) * qJD(4) - t443 * t181 + (t183 * t439 + t221 * t435) * t448;
t514 = (-t436 ^ 2 - t440 ^ 2) * t583;
t647 = t364 * t434;
t282 = t438 * t514 - t647;
t283 = t434 * t514 + t646;
t216 = t282 * t628 + t283 * t448;
t607 = qJD(4) * t448;
t577 = t435 * t607;
t694 = t216 - t577;
t374 = t435 * t636 - t439 * t440;
t280 = t336 * t442 + t447 * t374;
t619 = -qJD(5) * t280 + t297 * t442 + t617 * t447;
t281 = t336 * t447 - t374 * t442;
t618 = qJD(5) * t281 - t447 * t297 + t617 * t442;
t599 = qJDD(1) * t444;
t572 = t437 * t599;
t600 = qJD(1) * qJD(2);
t574 = t449 * t600;
t692 = t437 * t574 + t572;
t307 = t438 * t583 + t647;
t218 = t307 * t443 + t448 * t693;
t217 = qJD(5) + t218;
t220 = t448 * t307 - t443 * t693;
t460 = -t435 * t687 + t439 * t482 - qJD(4);
t258 = t447 * t460;
t140 = t220 * t442 + t258;
t138 = qJD(6) + t140;
t555 = t655 * qJDD(1);
t412 = t555 + qJDD(2);
t573 = t444 * t600;
t548 = t437 * t573;
t518 = t440 * t548;
t625 = t440 * t449;
t629 = t438 * t444;
t266 = t412 * t642 - t434 * t518 + (t438 * t574 + (t434 * t625 + t629) * qJDD(1)) * t437;
t691 = -t693 * qJD(4) + t266;
t658 = -pkin(4) * t297 + t695;
t270 = -t339 * t435 + t439 * t361;
t197 = -pkin(4) * t690 - pkin(12) * t336 + t270;
t586 = t339 * t628 + t361 * t639 + t315;
t209 = -pkin(12) * t374 + t586;
t620 = t442 * t197 + t447 * t209;
t689 = t230 + t580;
t368 = -t450 * t444 - t445 * t478;
t633 = t437 * t445;
t509 = -t368 * t436 + t440 * t633;
t685 = -g(1) * t323 - g(2) * t509;
t603 = qJD(5) * t447;
t605 = qJD(5) * t442;
t684 = -t197 * t603 + t209 * t605 + t442 * t698 - t447 * t699;
t566 = t436 * t655;
t491 = t437 * t625 + t566;
t370 = t394 * t445 - t449 * t450;
t681 = g(1) * t370 - g(2) * t366;
t598 = t449 * qJDD(1);
t571 = t437 * t598;
t265 = (-t412 * t436 - t440 * t571 + t518) * t438 + t692 * t434;
t558 = -t412 * t440 + t436 * t571;
t475 = t436 * t548 - t558;
t224 = -t265 * t435 - t439 * t475 - qJDD(4);
t549 = qJD(2) * t584;
t515 = qJD(1) * t549;
t546 = pkin(1) * t555;
t487 = -t444 * t515 + t449 * t546;
t527 = qJD(2) * t570;
t609 = qJD(3) * t444;
t579 = t440 * t609;
t247 = t412 * pkin(2) + (qJDD(1) * t534 + (t449 * t527 - t579) * qJD(1)) * t437 + t487;
t463 = qJD(2) * t510 - t436 * t609;
t505 = -pkin(2) * t449 - t444 * t654 - pkin(1);
t269 = (qJD(1) * t463 + qJDD(1) * t505) * t437;
t176 = -t436 * t247 + t440 * t269 + qJDD(3);
t102 = pkin(3) * t265 - t266 * t672 + t176;
t486 = pkin(10) * t632 + t416;
t300 = qJ(3) * t364 + qJD(1) * t486;
t473 = pkin(2) * t655 + t511;
t308 = qJD(2) * pkin(2) + qJD(1) * t473 + t409;
t362 = t505 * t437;
t353 = qJD(1) * t362;
t204 = t438 * t300 + t308 * t641 + t353 * t642;
t139 = -pkin(11) * t693 + t204;
t203 = -t434 * t300 + t308 * t630 + t353 * t636;
t143 = -pkin(3) * t482 - t307 * t671 + t203;
t257 = -t436 * t308 + t440 * t353 + qJD(3);
t174 = pkin(3) * t687 - t307 * t672 + t257;
t575 = t439 * t607;
t608 = qJD(4) * t443;
t472 = qJD(3) * t625 + t444 * t527;
t585 = pkin(10) * t571 + t444 * t546 + t449 * t515;
t228 = (t412 * qJ(3) + qJD(3) * t517) * t436 + (qJD(1) * t472 + t598 * t653) * t437 + t585;
t108 = t438 * t228 + t247 * t641 + t269 * t642;
t467 = t475 * t435;
t79 = (-t265 * t439 + t467) * pkin(11) + t108;
t107 = -t434 * t228 + t247 * t630 + t269 * t636;
t80 = pkin(3) * t475 - t266 * t671 + t107;
t483 = -t102 * t639 + t139 * t608 - t143 * t575 - t174 * t577 - t448 * t79 - t80 * t628;
t15 = -pkin(12) * t224 - t483;
t45 = t439 * t102 - t435 * t80;
t96 = -t265 * t628 - t307 * t608 + t443 * t467 + t448 * t691;
t97 = t265 * t627 + t307 * t607 + t443 * t691 - t448 * t467;
t23 = pkin(4) * t97 - pkin(12) * t96 + t45;
t58 = t448 * t139 + t143 * t628 + t174 * t639;
t47 = -pkin(12) * t460 + t58;
t81 = -t143 * t435 + t439 * t174;
t53 = pkin(4) * t218 - pkin(12) * t220 + t81;
t27 = t442 * t53 + t447 * t47;
t6 = -qJD(5) * t27 - t15 * t442 + t447 * t23;
t50 = -qJD(5) * t258 - t220 * t605 - t442 * t224 + t447 * t96;
t142 = t447 * t220 - t442 * t460;
t91 = t142 * t446 + t217 * t441;
t95 = qJDD(5) + t97;
t25 = qJD(6) * t91 + t441 * t50 - t446 * t95;
t57 = -t443 * t139 + (t143 * t439 + t174 * t435) * t448;
t4 = -pkin(5) * t95 - t6;
t393 = t540 + t561 / 0.2e1;
t396 = t542 - t563 / 0.2e1;
t464 = t393 * t387 + t396 * t434 + t593 * t655;
t565 = t655 * t440;
t506 = t393 * t436 - t565;
t245 = -t435 * t464 - t439 * t506;
t278 = t393 * t386 + t388 * t655 - t396 * t438;
t452 = t278 * t448 + t392 * t464 + t395 * t506;
t468 = -t368 * t387 - t370 * t434 - t445 * t553;
t207 = t435 * t468 + t439 * t509;
t251 = t368 * t386 - t370 * t438 + t388 * t633;
t453 = t251 * t448 - t392 * t468 - t395 * t509;
t85 = t207 * t447 - t442 * t453;
t504 = g(1) * t85 + g(2) * t702 + g(3) * (t245 * t447 - t442 * t452);
t680 = t138 * (pkin(5) * t142 + pkin(13) * t138) + t4 + t504;
t402 = -pkin(5) * t447 - pkin(13) * t442 - pkin(4);
t51 = qJD(5) * t142 + t447 * t224 + t442 * t96;
t49 = qJDD(6) + t51;
t679 = t138 * (-t58 + t217 * (pkin(5) * t442 - pkin(13) * t447)) + t402 * t49;
t330 = qJ(3) * t491 + t486;
t341 = t417 + t473;
t226 = t438 * t330 + t341 * t641 + t362 * t642;
t634 = t437 * t444;
t333 = t434 * t634 - t438 * t491;
t492 = t436 * t632 - t565;
t479 = t435 * t492;
t462 = -t439 * t333 - t479;
t171 = pkin(11) * t462 + t226;
t225 = -t434 * t330 + t341 * t630 + t362 * t636;
t334 = t434 * t491 + t437 * t629;
t175 = -pkin(3) * t492 - t334 * t671 + t225;
t275 = -t341 * t436 + t440 * t362;
t196 = pkin(3) * t333 - t334 * t672 + t275;
t678 = -t443 * t171 + (t175 * t439 + t196 * t435) * t448;
t410 = t449 * t549;
t285 = qJD(3) * t566 + t437 * t472 + t410;
t305 = qJD(2) * t465 - t437 * t579;
t332 = t463 * t437;
t187 = t438 * t285 + t305 * t641 + t332 * t642;
t357 = qJD(2) * t490;
t612 = qJD(2) * t437;
t581 = t444 * t612;
t551 = t436 * t581;
t525 = t435 * t551;
t484 = -t357 * t439 + t525;
t147 = pkin(11) * t484 + t187;
t186 = -t285 * t434 + t305 * t630 + t332 * t636;
t359 = qJD(2) * t489;
t151 = pkin(3) * t551 - t359 * t671 + t186;
t252 = -t305 * t436 + t440 * t332;
t190 = pkin(3) * t357 - t359 * t672 + t252;
t576 = t439 * t608;
t578 = t435 * t608;
t675 = (t151 * t439 + t190 * t435) * t448 - t443 * t147 - t171 * t607 - t175 * t576 - t196 * t578;
t298 = -t357 * t435 - t439 * t551;
t480 = t448 * t147 + t151 * t628 - t171 * t608 + t175 * t575 + t190 * t639 + t196 * t577;
t31 = -pkin(12) * t298 + t480;
t624 = t443 * t334;
t152 = t448 * t359 + t484 * t443 + (t448 * t462 - t624) * qJD(4);
t235 = t448 * t334 + t443 * t462;
t153 = qJD(4) * t235 + t357 * t627 + t443 * t359 - t448 * t525;
t88 = -t151 * t435 + t439 * t190;
t44 = pkin(4) * t153 - pkin(12) * t152 + t88;
t279 = -t333 * t435 + t439 * t492;
t588 = t448 * t171 + t175 * t628 + t196 * t639;
t63 = -pkin(12) * t279 + t588;
t101 = -t175 * t435 + t439 * t196;
t234 = t333 * t627 + t448 * t479 + t624;
t66 = pkin(4) * t234 - pkin(12) * t235 + t101;
t529 = t442 * t66 + t447 * t63;
t674 = -qJD(5) * t529 - t31 * t442 + t44 * t447;
t5 = t447 * t15 + t442 * t23 - t47 * t605 + t53 * t603;
t3 = pkin(13) * t95 + t5;
t20 = pkin(13) * t217 + t27;
t46 = pkin(4) * t460 - t57;
t33 = t140 * pkin(5) - t142 * pkin(13) + t46;
t533 = t20 * t441 - t33 * t446;
t18 = t102 * t637 - t139 * t607 - t143 * t576 - t174 * t578 - t443 * t79 + t80 * t627;
t16 = pkin(4) * t224 - t18;
t8 = pkin(5) * t51 - pkin(13) * t50 + t16;
t1 = -t533 * qJD(6) + t446 * t3 + t441 * t8;
t451 = qJD(1) ^ 2;
t667 = -pkin(5) * t616 + t620 * qJD(5) + t699 * t442 + t698 * t447;
t665 = pkin(12) * qJD(5);
t89 = t142 * t441 - t446 * t217;
t664 = t138 * t89;
t663 = t138 * t91;
t601 = qJD(6) * t446;
t602 = qJD(6) * t441;
t24 = -t142 * t602 + t217 * t601 + t441 * t95 + t446 * t50;
t662 = t24 * t441;
t660 = t441 * t49;
t659 = t446 * t49;
t120 = pkin(4) * t220 + pkin(12) * t218;
t656 = t442 * t120 + t447 * t57;
t652 = t140 * t217;
t651 = t142 * t217;
t650 = t218 * t447;
t645 = t395 * t436;
t644 = t396 * t436;
t643 = t430 * t451;
t638 = t435 * t447;
t236 = t281 * t441 + t446 * t690;
t623 = -qJD(6) * t236 + t441 * t616 + t446 * t619;
t237 = t281 * t446 - t441 * t690;
t622 = qJD(6) * t237 + t441 * t619 - t446 * t616;
t379 = -t439 * t447 + t442 * t639;
t621 = -t282 * t435 * t442 + qJD(5) * t379 + t447 * t694;
t380 = t439 * t442 + t443 * t638;
t615 = qJD(5) * t380 - t282 * t638 - t442 * t694;
t432 = t444 ^ 2;
t614 = -t449 ^ 2 + t432;
t610 = qJD(3) * t438;
t606 = qJD(5) * t441;
t604 = qJD(5) * t446;
t592 = t449 * t643;
t557 = t217 * t447;
t556 = t138 * t446;
t104 = -pkin(13) * t690 + t620;
t545 = -pkin(5) * t618 + pkin(13) * t619 + qJD(6) * t104 - t658;
t208 = pkin(4) * t374 - t688;
t117 = pkin(5) * t280 - pkin(13) * t281 + t208;
t544 = -pkin(13) * t616 - qJD(6) * t117 + t684;
t543 = t437 * t451 * t655;
t215 = -t282 * t627 + t283 * t443;
t536 = -t215 + t578;
t115 = t220 * t441 - t446 * t650;
t535 = t446 * t603 - t115;
t12 = t20 * t446 + t33 * t441;
t29 = pkin(13) * t234 + t529;
t172 = t235 * t442 + t447 * t279;
t173 = t235 * t447 - t279 * t442;
t62 = pkin(4) * t279 - t678;
t38 = pkin(5) * t172 - pkin(13) * t173 + t62;
t532 = t29 * t446 + t38 * t441;
t531 = -t29 * t441 + t38 * t446;
t26 = -t442 * t47 + t447 * t53;
t528 = -t442 * t63 + t447 * t66;
t110 = t173 * t446 + t234 * t441;
t109 = t173 * t441 - t446 * t234;
t520 = t197 * t447 - t209 * t442;
t516 = 0.2e1 * t559 + qJD(2);
t512 = qJD(6) * t637 + t621;
t508 = t447 * t31 + t442 * t44 + t66 * t603 - t605 * t63;
t507 = -pkin(12) * t95 + t217 * t46;
t502 = -t574 - t599;
t500 = t437 * (t555 + t412);
t126 = t251 * t443 + t468 * t477 - t476 * t509;
t158 = t278 * t443 - t464 * t477 + t476 * t506;
t499 = g(1) * t126 - g(2) * t124 + g(3) * t158;
t498 = -g(1) * t453 + g(2) * t125 - g(3) * t452;
t497 = -g(1) * t368 + g(2) * t365 - g(3) * t393;
t496 = g(3) * t396 + t681;
t493 = -qJD(6) * t380 + t536;
t488 = -t16 + t499;
t19 = -pkin(5) * t217 - t26;
t481 = -pkin(13) * t49 + (t19 + t26) * t138;
t2 = -qJD(6) * t12 - t441 * t3 + t446 * t8;
t471 = pkin(12) * qJD(6) * t138 - t499;
t469 = t436 * t476;
t461 = (pkin(13) * t220 - qJD(6) * t402 + t656) * t138 + t498;
t32 = pkin(4) * t298 - t675;
t459 = t517 * t486;
t377 = -qJ(3) * t642 + t414;
t302 = t386 * t396 + t393 * t438;
t301 = t387 * t396 - t393 * t434;
t274 = t368 * t438 + t370 * t386;
t273 = -t368 * t434 + t370 * t387;
t272 = -t365 * t438 - t366 * t386;
t271 = t365 * t434 - t366 * t387;
t268 = -t301 * t435 - t396 * t635;
t239 = -t273 * t435 - t370 * t635;
t238 = -t271 * t435 + t366 * t635;
t199 = t301 * t392 + t302 * t448 + t395 * t644;
t198 = -t301 * t477 + t302 * t443 + t396 * t469;
t157 = t273 * t392 + t274 * t448 + t370 * t645;
t156 = -t273 * t477 + t274 * t443 + t370 * t469;
t155 = t271 * t392 + t272 * t448 - t366 * t645;
t154 = -t271 * t477 + t272 * t443 - t366 * t469;
t134 = t199 * t447 + t268 * t442;
t114 = -t446 * t220 - t441 * t650;
t112 = t245 * t442 + t447 * t452;
t106 = t157 * t447 + t239 * t442;
t105 = t155 * t447 + t238 * t442;
t103 = pkin(5) * t690 - t520;
t86 = t207 * t442 + t447 * t453;
t74 = qJD(5) * t173 + t152 * t442 + t447 * t298;
t73 = -qJD(5) * t172 + t152 * t447 - t298 * t442;
t55 = t126 * t441 + t446 * t86;
t54 = t126 * t446 - t441 * t86;
t40 = qJD(6) * t110 - t446 * t153 + t441 * t73;
t39 = -qJD(6) * t109 + t153 * t441 + t446 * t73;
t36 = -pkin(5) * t220 - t120 * t447 + t442 * t57;
t28 = -pkin(5) * t234 - t528;
t13 = pkin(5) * t74 - pkin(13) * t73 + t32;
t10 = -pkin(5) * t153 - t674;
t9 = pkin(13) * t153 + t508;
t7 = [qJDD(1), g(1) * t445 - g(2) * t450, g(1) * t450 + g(2) * t445 (qJDD(1) * t432 + 0.2e1 * t449 * t573) * t430 (t444 * t598 - t600 * t614) * t701, t449 * t516 * t612 + t444 * t500, t449 * t500 - t516 * t581, t412 * t655, -qJD(2) * t459 + (-pkin(10) * t634 + t417) * t412 + (pkin(10) * t437 * t502 + t487) * t655 + g(1) * t366 + g(2) * t370 + (t598 - t573) * t700 -(-pkin(10) * t581 + t410) * t517 - t486 * t412 - (-pkin(10) * t548 + t585) * t655 - g(1) * t365 - g(2) * t368 + t502 * t700, -g(1) * t250 - g(2) * t251 - t107 * t492 + t176 * t333 - t186 * t482 + t203 * t551 + t225 * t475 + t252 * t687 + t257 * t357 + t275 * t265, -g(1) * t249 + g(2) * t468 + t108 * t492 + t176 * t334 + t187 * t482 - t204 * t551 - t226 * t475 + t252 * t307 + t257 * t359 + t275 * t266, -t107 * t334 - t108 * t333 - t186 * t307 - t187 * t687 - t203 * t359 - t204 * t357 - t225 * t266 - t226 * t265 + t685, t108 * t226 + t204 * t187 + t107 * t225 + t203 * t186 + t176 * t275 + t257 * t252 - g(1) * (-pkin(1) * t445 - pkin(2) * t366 + pkin(10) * t631) - g(2) * (pkin(1) * t450 - pkin(2) * t370 + pkin(10) * t633) + t685 * qJ(3), t152 * t220 + t235 * t96, -t152 * t218 - t153 * t220 - t234 * t96 - t235 * t97, -t152 * t460 - t298 * t220 - t224 * t235 - t279 * t96, t153 * t460 + t298 * t218 + t224 * t234 + t279 * t97, t224 * t279 + t298 * t460, -g(1) * t125 - g(2) * t453 + t101 * t97 + t81 * t153 - t18 * t279 + t88 * t218 - t224 * t678 + t45 * t234 - t57 * t298 - t460 * t675, g(1) * t124 + g(2) * t126 + t101 * t96 + t81 * t152 + t88 * t220 + t224 * t588 + t45 * t235 - t279 * t483 + t58 * t298 + t460 * t480, t142 * t73 + t173 * t50, -t140 * t73 - t142 * t74 - t172 * t50 - t173 * t51, t142 * t153 + t173 * t95 + t217 * t73 + t234 * t50, -t140 * t153 - t172 * t95 - t217 * t74 - t234 * t51, t153 * t217 + t234 * t95, -g(1) * t84 - g(2) * t86 + t32 * t140 + t26 * t153 + t16 * t172 + t217 * t674 + t6 * t234 + t46 * t74 + t62 * t51 + t528 * t95, g(1) * t702 - g(2) * t85 + t32 * t142 - t27 * t153 + t16 * t173 - t508 * t217 - t5 * t234 + t46 * t73 + t62 * t50 - t529 * t95, t110 * t24 + t39 * t91, -t109 * t24 - t110 * t25 - t39 * t89 - t40 * t91, t110 * t49 + t138 * t39 + t172 * t24 + t74 * t91, -t109 * t49 - t138 * t40 - t172 * t25 - t74 * t89, t138 * t74 + t172 * t49 (-qJD(6) * t532 + t13 * t446 - t441 * t9) * t138 + t531 * t49 + t2 * t172 - t533 * t74 + t10 * t89 + t28 * t25 + t4 * t109 + t19 * t40 - g(1) * t706 - g(2) * t55, t10 * t91 + t28 * t24 + t4 * t110 + t19 * t39 - (qJD(6) * t531 + t13 * t441 + t446 * t9) * t138 - t532 * t49 - t1 * t172 - t12 * t74 + g(1) * t707 - g(2) * t54; 0, 0, 0, -t444 * t592, t614 * t643, -t449 * t543 + t572, t444 * t543 + t571, t412, pkin(1) * t444 * t643 - pkin(10) * t692 + qJD(1) * t459 + t487 + t497 (-pkin(10) * t583 + t409) * t559 + pkin(1) * t592 + t409 * qJD(2) - t496 - t585, -t436 * pkin(2) * t265 - g(1) * t274 - g(2) * t272 - g(3) * t302 + t107 * t440 - t176 * t636 - t203 * t552 - t257 * t356 - t277 * t687 + t377 * t475 + t482 * t689, t378 * t558 - t108 * t440 - t277 * t307 - t257 * t358 - t231 * t482 - g(1) * t273 - g(2) * t271 - g(3) * t301 + (-pkin(2) * t266 + t176 * t434 + t482 * t610 + (-qJD(2) * t378 + t204) * t583) * t436, g(3) * t644 - t107 * t642 + t108 * t636 + t203 * t358 + t204 * t356 + t231 * t687 - t378 * t265 - t377 * t266 + t689 * t307 + (-t610 * t687 + t681) * t436, t107 * t377 + t108 * t378 - t203 * t230 - t204 * t231 - t257 * t277 + t497 * pkin(2) + (-t176 * pkin(2) + (-t203 * t434 + t204 * t438) * qJD(3) + t496 * qJ(3)) * t436, t220 * t617 + t336 * t96, -t218 * t617 - t220 * t616 - t336 * t97 + t690 * t96, t297 * t220 - t224 * t336 - t374 * t96 - t460 * t617, -t297 * t218 - t224 * t690 + t374 * t97 + t460 * t616, t224 * t374 - t297 * t460, -g(1) * t157 - g(2) * t155 - g(3) * t199 - t18 * t374 + t513 * t218 - t688 * t224 + t270 * t97 + t57 * t297 - t45 * t690 + t460 * t695 + t616 * t81, g(1) * t156 + g(2) * t154 + g(3) * t198 + t220 * t513 + t224 * t586 + t270 * t96 - t58 * t297 + t45 * t336 - t483 * t374 + t460 * t703 + t617 * t81, t142 * t619 + t281 * t50, -t140 * t619 - t142 * t618 - t280 * t50 - t281 * t51, t142 * t616 + t217 * t619 + t281 * t95 - t50 * t690, -t140 * t616 - t217 * t618 - t280 * t95 + t51 * t690, t217 * t616 - t690 * t95, t520 * t95 - t6 * t690 + t208 * t51 + t16 * t280 - g(1) * t106 - g(2) * t105 - g(3) * t134 + t618 * t46 + t616 * t26 + ((-qJD(5) * t209 - t698) * t447 + (-qJD(5) * t197 - t699) * t442) * t217 + t658 * t140, t208 * t50 + t16 * t281 - t620 * t95 + t5 * t690 - g(1) * (-t157 * t442 + t239 * t447) - g(2) * (-t155 * t442 + t238 * t447) - g(3) * (-t199 * t442 + t268 * t447) + t619 * t46 - t616 * t27 + t684 * t217 + t658 * t142, t237 * t24 + t623 * t91, -t236 * t24 - t237 * t25 - t622 * t91 - t623 * t89, t138 * t623 + t237 * t49 + t24 * t280 + t618 * t91, -t138 * t622 - t236 * t49 - t25 * t280 - t618 * t89, t138 * t618 + t280 * t49 (-t104 * t441 + t117 * t446) * t49 + t2 * t280 + t103 * t25 + t4 * t236 - g(1) * (t106 * t446 + t156 * t441) - g(2) * (t105 * t446 + t154 * t441) - g(3) * (t134 * t446 + t198 * t441) + t667 * t89 + t622 * t19 + (t441 * t544 - t446 * t545) * t138 - t618 * t533, t103 * t24 + t4 * t237 - (t104 * t446 + t117 * t441) * t49 - t1 * t280 - g(1) * (-t106 * t441 + t156 * t446) - g(2) * (-t105 * t441 + t154 * t446) - g(3) * (-t134 * t441 + t198 * t446) + t667 * t91 + t623 * t19 + (t441 * t545 + t446 * t544) * t138 - t618 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t282 * t482 + t265, -t283 * t482 + t266, t282 * t307 + t283 * t687, -g(1) * t509 + g(2) * t323 + g(3) * t506 - t203 * t282 - t204 * t283 + t176, 0, 0, 0, 0, 0, t439 * t97 - t215 * t460 + (t282 * t218 - t448 * t224 + t460 * t608) * t435, t439 * t96 - t216 * t460 + (t282 * t220 + t443 * t224 + t460 * t607) * t435, 0, 0, 0, 0, 0, t140 * t536 - t217 * t615 - t379 * t95 - t51 * t637, t142 * t536 + t217 * t621 - t380 * t95 - t50 * t637, 0, 0, 0, 0, 0 (-t380 * t441 - t446 * t637) * t49 + t379 * t25 + t615 * t89 + (t441 * t512 + t446 * t493) * t138, t379 * t24 - (t380 * t446 - t441 * t637) * t49 + t615 * t91 + (-t441 * t493 + t446 * t512) * t138; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t218 * t220, -t218 ^ 2 + t220 ^ 2, -t218 * t460 + t96, -t220 * t460 - t97, -t224, -t81 * t220 - t460 * t58 + t18 + t499, t81 * t218 - t460 * t57 + t483 - t498, t142 * t557 + t442 * t50 (t50 - t652) * t447 + (-t51 - t651) * t442, -t142 * t220 + t217 * t557 + t442 * t95, -t217 ^ 2 * t442 + t140 * t220 + t447 * t95, -t217 * t220, -pkin(4) * t51 - t58 * t140 - t26 * t220 + (t57 * t217 + t507) * t442 + ((-t120 - t665) * t217 + t488) * t447, -pkin(4) * t50 - t58 * t142 + t656 * t217 + t27 * t220 + t507 * t447 + (t217 * t665 - t488) * t442, t24 * t442 * t446 + (-t442 * t602 + t535) * t91, t114 * t91 + t115 * t89 + (-t441 * t91 - t446 * t89) * t603 + (-t662 - t25 * t446 + (t441 * t89 - t446 * t91) * qJD(6)) * t442, -t24 * t447 + t535 * t138 + (-t138 * t602 + t217 * t91 + t659) * t442, t25 * t447 + (-t441 * t603 + t114) * t138 + (-t138 * t601 - t217 * t89 - t660) * t442, t138 * t217 * t442 - t447 * t49, -t19 * t114 - t36 * t89 + t679 * t446 + t461 * t441 + (t19 * t606 - t2 + (qJD(5) * t89 - t660) * pkin(12) - t471 * t446) * t447 + (t19 * t601 + t4 * t441 - t217 * t533 + (t138 * t606 + t25) * pkin(12)) * t442, -t19 * t115 - t36 * t91 - t679 * t441 + t461 * t446 + (t19 * t604 + t1 + (qJD(5) * t91 - t659) * pkin(12) + t471 * t441) * t447 + (-t19 * t602 + t4 * t446 - t217 * t12 + (t138 * t604 + t24) * pkin(12)) * t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t140 * t142, -t140 ^ 2 + t142 ^ 2, t50 + t652, -t51 + t651, t95, -t142 * t46 + t217 * t27 - t504 + t6, g(1) * t86 - g(2) * t84 + g(3) * t112 + t140 * t46 + t217 * t26 - t5, t556 * t91 + t662 (t24 - t664) * t446 + (-t25 - t663) * t441, t138 * t556 - t142 * t91 + t660, -t138 ^ 2 * t441 + t142 * t89 + t659, -t138 * t142, -pkin(5) * t25 + t142 * t533 - t27 * t89 + t481 * t441 - t446 * t680, -pkin(5) * t24 + t12 * t142 - t27 * t91 + t441 * t680 + t481 * t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91 * t89, -t89 ^ 2 + t91 ^ 2, t24 + t664, -t25 + t663, t49, t12 * t138 - t19 * t91 - g(1) * t54 - g(2) * t707 - g(3) * (-t112 * t441 + t158 * t446) + t2, t19 * t89 - t533 * t138 + g(1) * t55 - g(2) * t706 - g(3) * (-t112 * t446 - t158 * t441) - t1;];
tau_reg  = t7;
