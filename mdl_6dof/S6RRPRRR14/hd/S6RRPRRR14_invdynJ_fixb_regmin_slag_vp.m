% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRRR14_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR14_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR14_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_invdynJ_fixb_regmin_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:08:45
% EndTime: 2019-03-09 15:09:45
% DurationCPUTime: 27.64s
% Computational Cost: add. (47197->898), mult. (142649->1301), div. (0->0), fcn. (127167->18), ass. (0->411)
t411 = sin(qJ(2));
t412 = sin(qJ(1));
t415 = cos(qJ(2));
t416 = cos(qJ(1));
t608 = cos(pkin(6));
t527 = t416 * t608;
t364 = t411 * t527 + t412 * t415;
t401 = sin(pkin(14));
t405 = cos(pkin(14));
t363 = t411 * t412 - t415 * t527;
t403 = sin(pkin(7));
t407 = cos(pkin(7));
t404 = sin(pkin(6));
t584 = t404 * t416;
t480 = t363 * t407 + t403 * t584;
t265 = -t364 * t405 + t401 * t480;
t410 = sin(qJ(4));
t627 = cos(qJ(4));
t333 = -t363 * t403 + t407 * t584;
t402 = sin(pkin(8));
t406 = cos(pkin(8));
t629 = t364 * t401 + t405 * t480;
t636 = t333 * t402 + t406 * t629;
t162 = t265 * t627 + t410 * t636;
t226 = -t333 * t406 + t402 * t629;
t409 = sin(qJ(5));
t414 = cos(qJ(5));
t107 = t162 * t414 - t226 * t409;
t408 = sin(qJ(6));
t664 = t107 * t408;
t413 = cos(qJ(6));
t663 = t107 * t413;
t580 = t407 * t411;
t352 = (-t401 * t580 + t405 * t415) * t404;
t345 = qJD(1) * t352;
t646 = (t401 * t415 + t405 * t580) * t404;
t342 = qJD(1) * t646;
t570 = qJD(1) * t404;
t545 = t411 * t570;
t516 = t403 * t545;
t452 = -t342 * t406 + t402 * t516;
t546 = t627 * t405;
t549 = t402 * t627;
t647 = t403 * (-t401 * t410 + t406 * t546) + t407 * t549;
t573 = t647 * qJD(4) - t345 * t627 - t410 * t452;
t547 = t627 * t401;
t581 = t406 * t410;
t591 = t402 * t410;
t321 = t407 * t591 + (t405 * t581 + t547) * t403;
t519 = t403 * t549;
t587 = t404 * t411;
t481 = t519 * t587;
t548 = t406 * t627;
t572 = qJD(1) * t481 + t321 * qJD(4) - t342 * t548 - t345 * t410;
t662 = t162 * t409 + t226 * t414;
t528 = t415 * t608;
t394 = pkin(1) * t528;
t386 = qJD(1) * t394;
t606 = qJ(3) * t407;
t533 = -pkin(10) - t606;
t499 = t411 * t533;
t483 = t404 * t499;
t328 = qJD(1) * t483 + t386;
t529 = t411 * t608;
t393 = pkin(1) * t529;
t585 = t404 * t415;
t433 = t533 * t585 - t393;
t329 = t433 * qJD(1);
t607 = qJ(3) * t403;
t482 = pkin(2) * t411 - t415 * t607;
t353 = t482 * t570;
t583 = t405 * t407;
t589 = t403 * t405;
t218 = -t328 * t401 + t329 * t583 + t353 * t589;
t624 = pkin(11) * t406;
t171 = pkin(3) * t516 - t345 * t624 + t218;
t259 = -t329 * t403 + t407 * t353;
t625 = pkin(11) * t402;
t209 = pkin(3) * t342 - t345 * t625 + t259;
t568 = qJD(3) * t403;
t542 = t401 * t568;
t484 = -t406 * t209 + (t171 + t542) * t402;
t594 = t401 * t407;
t595 = t401 * t403;
t219 = t405 * t328 + t329 * t594 + t353 * t595;
t169 = pkin(11) * t452 + t219;
t360 = pkin(2) * t594 + qJ(3) * t589;
t588 = t403 * t406;
t313 = (t402 * t407 + t405 * t588) * pkin(11) + t360;
t391 = pkin(2) * t583;
t324 = pkin(3) * t407 + t391 + (-qJ(3) - t624) * t595;
t347 = (-pkin(3) * t405 - t401 * t625 - pkin(2)) * t403;
t438 = -t410 * t313 + t324 * t548 + t347 * t549;
t659 = (-t401 * t581 + t546) * t568 + t438 * qJD(4) - t627 * t169 - t171 * t581 - t209 * t591;
t524 = t608 * qJD(1);
t488 = t524 + qJD(2);
t544 = t415 * t570;
t450 = t403 * t544 - t407 * t488;
t350 = t403 * t488 + t407 * t544;
t599 = t350 * t405;
t641 = t401 * t545 - t599;
t655 = -t402 * t450 - t406 * t641;
t397 = t404 ^ 2;
t658 = 0.2e1 * t397;
t280 = -t342 * t402 - t406 * t516;
t653 = pkin(12) * t280 + t659;
t652 = -t572 * pkin(4) + pkin(12) * t573 - t484;
t657 = t265 * t410;
t485 = (-t403 ^ 2 - t407 ^ 2) * t545;
t600 = t350 * t401;
t267 = t405 * t485 - t600;
t268 = t401 * t485 + t599;
t203 = t267 * t581 + t268 * t627;
t538 = qJD(4) * t627;
t512 = t402 * t538;
t656 = t203 - t512;
t526 = t608 * t403;
t579 = t407 * t415;
t426 = t404 * (-t401 * t411 + t405 * t579) + t405 * t526;
t462 = t403 * t585 - t407 * t608;
t638 = -t462 * t402 + t426 * t406;
t654 = pkin(1) * t658;
t301 = t627 * t313;
t650 = (t405 * t410 + t406 * t547) * t568 + (t301 + (t324 * t406 + t347 * t402) * t410) * qJD(4) - t410 * t169 + t171 * t548 + t209 * t549;
t356 = t402 * t589 - t406 * t407;
t261 = t321 * t409 + t414 * t356;
t575 = -qJD(5) * t261 + t280 * t409 + t573 * t414;
t262 = t321 * t414 - t356 * t409;
t574 = qJD(5) * t262 - t414 * t280 + t573 * t409;
t649 = t655 * t627;
t557 = qJDD(1) * t411;
t535 = t404 * t557;
t558 = qJD(1) * qJD(2);
t536 = t415 * t558;
t648 = t404 * t536 + t535;
t292 = t405 * t545 + t600;
t205 = t292 * t410 - t649;
t204 = qJD(5) + t205;
t640 = t655 * t410;
t207 = t292 * t627 + t640;
t427 = -t402 * t641 + t406 * t450 - qJD(4);
t240 = t414 * t427;
t129 = t207 * t409 + t240;
t125 = qJD(6) + t129;
t611 = -t280 * pkin(4) + t650;
t361 = -t406 * t414 + t409 * t591;
t645 = -t267 * t402 * t409 + qJD(5) * t361 + t414 * t656;
t254 = -t324 * t402 + t406 * t347;
t185 = -pkin(4) * t647 - pkin(12) * t321 + t254;
t551 = t324 * t581 + t347 * t591 + t301;
t192 = -pkin(12) * t356 + t551;
t576 = t409 * t185 + t414 * t192;
t202 = -t267 * t548 + t410 * t268;
t565 = qJD(4) * t410;
t540 = t402 * t565;
t644 = t202 - t540;
t643 = t218 + t542;
t590 = t402 * t414;
t362 = t406 * t409 + t410 * t590;
t642 = qJD(5) * t362 - t267 * t590 - t409 * t656;
t639 = t638 * t627;
t366 = -t412 * t529 + t415 * t416;
t365 = -t416 * t411 - t412 * t528;
t586 = t404 * t412;
t478 = t365 * t407 + t403 * t586;
t436 = t366 * t401 - t405 * t478;
t479 = -t365 * t403 + t407 * t586;
t637 = -t479 * t402 + t436 * t406;
t635 = -g(1) * t333 - g(2) * t479;
t561 = qJD(5) * t414;
t563 = qJD(5) * t409;
t634 = -t185 * t561 + t192 * t563 + t409 * t652 - t414 * t653;
t632 = g(1) * t366 + g(2) * t364;
t520 = t608 * qJDD(1);
t389 = t520 + qJDD(2);
t537 = t411 * t558;
t510 = t404 * t537;
t489 = t407 * t510;
t556 = qJDD(1) * t415;
t534 = t404 * t556;
t250 = (-t389 * t403 - t407 * t534 + t489) * t405 + t648 * t401;
t523 = -t389 * t407 + t403 * t534;
t445 = t403 * t510 - t523;
t212 = -t250 * t402 - t406 * t445 - qJDD(4);
t453 = pkin(10) * t585 + t393;
t287 = qJ(3) * t350 + qJD(1) * t453;
t443 = pkin(2) * t608 + t483;
t294 = qJD(2) * pkin(2) + qJD(1) * t443 + t386;
t473 = -pkin(2) * t415 - t411 * t607 - pkin(1);
t348 = t473 * t404;
t339 = qJD(1) * t348;
t190 = t405 * t287 + t294 * t594 + t339 * t595;
t128 = pkin(11) * t655 + t190;
t189 = -t401 * t287 + t294 * t583 + t339 * t589;
t132 = -pkin(3) * t450 - t292 * t624 + t189;
t239 = -t403 * t294 + t407 * t339 + qJD(3);
t156 = pkin(3) * t641 - t292 * t625 + t239;
t511 = t406 * t538;
t492 = qJD(2) * t533;
t442 = qJD(3) * t579 + t411 * t492;
t513 = pkin(1) * qJD(2) * t608;
t486 = qJD(1) * t513;
t507 = pkin(1) * t520;
t550 = pkin(10) * t534 + t411 * t507 + t415 * t486;
t216 = (t389 * qJ(3) + qJD(3) * t488) * t403 + (qJD(1) * t442 + t556 * t606) * t404 + t550;
t454 = -t411 * t486 + t415 * t507;
t566 = qJD(3) * t411;
t541 = t407 * t566;
t233 = t389 * pkin(2) + (qJDD(1) * t499 + (t415 * t492 - t541) * qJD(1)) * t404 + t454;
t431 = qJD(2) * t482 - t403 * t566;
t253 = (qJD(1) * t431 + qJDD(1) * t473) * t404;
t101 = t405 * t216 + t233 * t594 + t253 * t595;
t435 = t445 * t402;
t79 = (-t250 * t406 + t435) * pkin(11) + t101;
t100 = -t401 * t216 + t233 * t583 + t253 * t589;
t582 = t405 * t411;
t251 = t389 * t595 - t401 * t489 + (t405 * t536 + (t401 * t579 + t582) * qJDD(1)) * t404;
t80 = pkin(3) * t445 - t251 * t624 + t100;
t158 = -t403 * t233 + t407 * t253 + qJDD(3);
t97 = pkin(3) * t250 - t251 * t625 + t158;
t451 = t128 * t565 - t132 * t511 - t156 * t512 - t80 * t581 - t97 * t591 - t627 * t79;
t15 = -pkin(12) * t212 - t451;
t45 = -t402 * t80 + t406 * t97;
t91 = qJD(4) * t649 - t250 * t581 + t627 * t251 - t292 * t565 + t410 * t435;
t92 = qJD(4) * t640 + t250 * t548 + t410 * t251 + t292 * t538 - t627 * t435;
t23 = pkin(4) * t92 - pkin(12) * t91 + t45;
t56 = t627 * t128 + t132 * t581 + t156 * t591;
t47 = -pkin(12) * t427 + t56;
t81 = -t132 * t402 + t406 * t156;
t53 = pkin(4) * t205 - pkin(12) * t207 + t81;
t27 = t409 * t53 + t414 * t47;
t6 = -qJD(5) * t27 - t15 * t409 + t414 * t23;
t50 = -qJD(5) * t240 - t207 * t563 - t409 * t212 + t414 * t91;
t131 = t414 * t207 - t409 * t427;
t86 = t131 * t413 + t204 * t408;
t90 = qJDD(5) + t92;
t25 = qJD(6) * t86 + t408 * t50 - t413 * t90;
t4 = -pkin(5) * t90 - t6;
t266 = t366 * t405 + t401 * t478;
t164 = t266 * t627 - t410 * t637;
t228 = t402 * t436 + t406 * t479;
t108 = -t164 * t409 + t228 * t414;
t463 = t404 * t579 + t526;
t319 = t401 * t463 + t404 * t582;
t223 = t319 * t627 + t410 * t638;
t260 = t402 * t426 + t406 * t462;
t154 = t223 * t409 + t260 * t414;
t469 = g(1) * t108 + g(2) * t662 - g(3) * t154;
t631 = t125 * (pkin(5) * t131 + pkin(13) * t125) + t4 + t469;
t378 = -pkin(5) * t414 - pkin(13) * t409 - pkin(4);
t51 = qJD(5) * t131 + t414 * t212 + t409 * t91;
t49 = qJDD(6) + t51;
t630 = t125 * (-t56 + t204 * (pkin(5) * t409 - pkin(13) * t414)) + t378 * t49;
t343 = qJD(2) * t646;
t569 = qJD(2) * t404;
t543 = t411 * t569;
t515 = t403 * t543;
t281 = -t343 * t402 - t406 * t515;
t387 = t415 * t513;
t270 = qJD(3) * t526 + t404 * t442 + t387;
t290 = qJD(2) * t433 - t404 * t541;
t318 = t431 * t404;
t175 = t405 * t270 + t290 * t594 + t318 * t595;
t491 = t402 * t515;
t136 = (-t343 * t406 + t491) * pkin(11) + t175;
t174 = -t270 * t401 + t290 * t583 + t318 * t589;
t344 = qJD(2) * t352;
t140 = pkin(3) * t515 - t344 * t624 + t174;
t316 = qJ(3) * t463 + t453;
t326 = t394 + t443;
t214 = t405 * t316 + t326 * t594 + t348 * t595;
t153 = pkin(11) * t638 + t214;
t213 = -t401 * t316 + t326 * t583 + t348 * t589;
t157 = -pkin(3) * t462 - t319 * t624 + t213;
t234 = -t290 * t403 + t407 * t318;
t178 = pkin(3) * t343 - t344 * t625 + t234;
t255 = -t403 * t326 + t407 * t348;
t184 = -pkin(3) * t426 - t319 * t625 + t255;
t448 = t627 * t136 + t140 * t581 - t153 * t565 + t157 * t511 + t178 * t591 + t184 * t512;
t31 = -pkin(12) * t281 + t448;
t141 = -qJD(2) * t481 + t319 * t538 + t343 * t548 + t344 * t410 + t565 * t638;
t142 = qJD(4) * t639 - t319 * t565 - t343 * t581 + t344 * t627 + t410 * t491;
t83 = -t140 * t402 + t406 * t178;
t44 = pkin(4) * t141 - pkin(12) * t142 + t83;
t553 = t627 * t153 + t157 * t581 + t184 * t591;
t61 = -pkin(12) * t260 + t553;
t222 = t319 * t410 - t639;
t96 = -t157 * t402 + t406 * t184;
t64 = pkin(4) * t222 - pkin(12) * t223 + t96;
t494 = t409 * t64 + t414 * t61;
t628 = -qJD(5) * t494 - t31 * t409 + t414 * t44;
t5 = t414 * t15 + t409 * t23 - t47 * t563 + t53 * t561;
t3 = pkin(13) * t90 + t5;
t20 = pkin(13) * t204 + t27;
t55 = -t410 * t128 + t132 * t548 + t156 * t549;
t46 = pkin(4) * t427 - t55;
t33 = t129 * pkin(5) - t131 * pkin(13) + t46;
t498 = t20 * t408 - t33 * t413;
t539 = t406 * t565;
t18 = -t128 * t538 - t132 * t539 - t156 * t540 - t410 * t79 + t80 * t548 + t97 * t549;
t16 = pkin(4) * t212 - t18;
t8 = pkin(5) * t51 - pkin(13) * t50 + t16;
t1 = -t498 * qJD(6) + t413 * t3 + t408 * t8;
t417 = qJD(1) ^ 2;
t620 = -pkin(5) * t572 + t576 * qJD(5) + t653 * t409 + t652 * t414;
t618 = pkin(12) * qJD(5);
t84 = t131 * t408 - t413 * t204;
t617 = t125 * t84;
t616 = t125 * t86;
t559 = qJD(6) * t413;
t560 = qJD(6) * t408;
t24 = -t131 * t560 + t204 * t559 + t408 * t90 + t413 * t50;
t615 = t24 * t408;
t613 = t408 * t49;
t612 = t413 * t49;
t116 = pkin(4) * t207 + pkin(12) * t205;
t609 = t409 * t116 + t414 * t55;
t605 = t129 * t204;
t604 = t131 * t204;
t603 = t205 * t414;
t596 = t397 * t417;
t592 = t402 * t403;
t224 = t262 * t408 + t413 * t647;
t578 = -qJD(6) * t224 + t408 * t572 + t413 * t575;
t225 = t262 * t413 - t408 * t647;
t577 = qJD(6) * t225 + t408 * t575 - t413 * t572;
t399 = t411 ^ 2;
t571 = -t415 ^ 2 + t399;
t567 = qJD(3) * t405;
t564 = qJD(5) * t408;
t562 = qJD(5) * t413;
t555 = t415 * t596;
t554 = t403 * t587;
t522 = t204 * t414;
t521 = t125 * t413;
t99 = -pkin(13) * t647 + t576;
t508 = -pkin(5) * t574 + pkin(13) * t575 + qJD(6) * t99 - t611;
t191 = t356 * pkin(4) - t438;
t113 = t261 * pkin(5) - t262 * pkin(13) + t191;
t505 = -pkin(13) * t572 - qJD(6) * t113 + t634;
t504 = t404 * t417 * t608;
t111 = t207 * t408 - t413 * t603;
t500 = t413 * t561 - t111;
t12 = t20 * t413 + t33 * t408;
t29 = pkin(13) * t222 + t494;
t155 = t223 * t414 - t260 * t409;
t440 = -t410 * t153 + t157 * t548 + t184 * t549;
t60 = t260 * pkin(4) - t440;
t38 = t154 * pkin(5) - t155 * pkin(13) + t60;
t497 = t29 * t413 + t38 * t408;
t496 = -t29 * t408 + t38 * t413;
t26 = -t409 * t47 + t414 * t53;
t493 = -t409 * t61 + t414 * t64;
t103 = t155 * t413 + t222 * t408;
t102 = t155 * t408 - t222 * t413;
t490 = t185 * t414 - t192 * t409;
t487 = 0.2e1 * t524 + qJD(2);
t475 = t414 * t31 + t409 * t44 + t64 * t561 - t563 * t61;
t474 = -pkin(12) * t90 + t204 * t46;
t472 = -t536 - t557;
t470 = t404 * (t520 + t389);
t159 = t627 * t636 - t657;
t163 = t266 * t410 + t627 * t637;
t468 = g(1) * t163 + g(2) * t159 + g(3) * t222;
t467 = -g(1) * t164 + g(2) * t162 - g(3) * t223;
t466 = -t408 * t362 - t413 * t549;
t465 = -t413 * t362 + t408 * t549;
t457 = -t16 + t468;
t456 = -g(1) * t365 + g(2) * t363 - g(3) * t585;
t455 = g(3) * t587 + t632;
t19 = -pkin(5) * t204 - t26;
t449 = -pkin(13) * t49 + (t19 + t26) * t125;
t2 = -qJD(6) * t12 - t408 * t3 + t413 * t8;
t441 = pkin(12) * qJD(6) * t125 - t468;
t428 = (pkin(13) * t207 - qJD(6) * t378 + t609) * t125 + t467;
t425 = -t410 * t136 + t140 * t548 - t153 * t538 - t157 * t539 + t178 * t549 - t184 * t540;
t424 = t488 * t453;
t32 = t281 * pkin(4) - t425;
t359 = -qJ(3) * t595 + t391;
t293 = t402 * t646 + t406 * t554;
t286 = t365 * t405 - t366 * t594;
t285 = -t365 * t401 - t366 * t583;
t284 = -t363 * t405 - t364 * t594;
t283 = t363 * t401 - t364 * t583;
t249 = -t285 * t402 + t366 * t588;
t248 = -t283 * t402 + t364 * t588;
t245 = t352 * t627 + (t402 * t554 - t406 * t646) * t410;
t244 = t352 * t410 + t548 * t646 - t481;
t208 = t245 * t414 + t293 * t409;
t200 = t286 * t627 + (t285 * t406 + t366 * t592) * t410;
t199 = -t285 * t548 + t286 * t410 - t366 * t519;
t198 = t284 * t627 + (t283 * t406 + t364 * t592) * t410;
t197 = -t283 * t548 + t284 * t410 - t364 * t519;
t161 = -t333 * t549 - t548 * t629 + t657;
t127 = t200 * t414 + t249 * t409;
t126 = t198 * t414 + t248 * t409;
t110 = -t413 * t207 - t408 * t603;
t109 = t164 * t414 + t228 * t409;
t98 = pkin(5) * t647 - t490;
t74 = -qJD(5) * t154 + t142 * t414 - t281 * t409;
t73 = qJD(5) * t155 + t142 * t409 + t281 * t414;
t71 = t109 * t413 + t163 * t408;
t70 = -t109 * t408 + t163 * t413;
t40 = -qJD(6) * t102 + t141 * t408 + t413 * t74;
t39 = qJD(6) * t103 - t141 * t413 + t408 * t74;
t36 = -pkin(5) * t207 - t116 * t414 + t409 * t55;
t28 = -pkin(5) * t222 - t493;
t13 = t73 * pkin(5) - t74 * pkin(13) + t32;
t10 = -pkin(5) * t141 - t628;
t9 = pkin(13) * t141 + t475;
t7 = [qJDD(1), g(1) * t412 - g(2) * t416, g(1) * t416 + g(2) * t412 (qJDD(1) * t399 + 0.2e1 * t411 * t536) * t397 (t411 * t556 - t558 * t571) * t658, t415 * t487 * t569 + t411 * t470, t415 * t470 - t487 * t543, t389 * t608, -qJD(2) * t424 + (-pkin(10) * t587 + t394) * t389 + (pkin(10) * t404 * t472 + t454) * t608 + g(1) * t364 - g(2) * t366 + (t556 - t537) * t654 -(-pkin(10) * t543 + t387) * t488 - t453 * t389 - (-pkin(10) * t510 + t550) * t608 - g(1) * t363 - g(2) * t365 + t472 * t654, -g(1) * t265 - g(2) * t266 - t100 * t462 - t158 * t426 - t174 * t450 + t189 * t515 + t213 * t445 + t234 * t641 + t239 * t343 + t255 * t250, -g(1) * t629 + g(2) * t436 + t101 * t462 + t158 * t319 + t175 * t450 - t190 * t515 - t214 * t445 + t234 * t292 + t239 * t344 + t255 * t251, -t100 * t319 + t101 * t426 - t174 * t292 - t175 * t641 - t189 * t344 - t190 * t343 - t213 * t251 - t214 * t250 + t635, t101 * t214 + t190 * t175 + t100 * t213 + t189 * t174 + t158 * t255 + t239 * t234 - g(1) * (-pkin(1) * t412 - pkin(2) * t364 + pkin(10) * t584) - g(2) * (pkin(1) * t416 + pkin(2) * t366 + pkin(10) * t586) + t635 * qJ(3), t142 * t207 + t223 * t91, -t141 * t207 - t142 * t205 - t222 * t91 - t223 * t92, -t142 * t427 - t281 * t207 - t212 * t223 - t260 * t91, t141 * t427 + t281 * t205 + t212 * t222 + t260 * t92, t212 * t260 + t281 * t427, -g(1) * t162 - g(2) * t164 + t81 * t141 - t18 * t260 + t83 * t205 - t212 * t440 + t45 * t222 - t55 * t281 - t425 * t427 + t96 * t92, g(1) * t161 + g(2) * t163 + t81 * t142 + t83 * t207 + t212 * t553 + t45 * t223 - t260 * t451 + t56 * t281 + t427 * t448 + t96 * t91, t131 * t74 + t155 * t50, -t129 * t74 - t131 * t73 - t154 * t50 - t155 * t51, t131 * t141 + t155 * t90 + t204 * t74 + t222 * t50, -t129 * t141 - t154 * t90 - t204 * t73 - t222 * t51, t141 * t204 + t222 * t90, -g(1) * t107 - g(2) * t109 + t32 * t129 + t26 * t141 + t16 * t154 + t204 * t628 + t6 * t222 + t46 * t73 + t493 * t90 + t60 * t51, g(1) * t662 - g(2) * t108 + t32 * t131 - t27 * t141 + t16 * t155 - t475 * t204 - t5 * t222 + t46 * t74 - t494 * t90 + t60 * t50, t103 * t24 + t40 * t86, -t102 * t24 - t103 * t25 - t39 * t86 - t40 * t84, t103 * t49 + t125 * t40 + t154 * t24 + t73 * t86, -t102 * t49 - t125 * t39 - t154 * t25 - t73 * t84, t125 * t73 + t154 * t49 (-qJD(6) * t497 + t13 * t413 - t408 * t9) * t125 + t496 * t49 + t2 * t154 - t498 * t73 + t10 * t84 + t28 * t25 + t4 * t102 + t19 * t39 - g(1) * (t161 * t408 + t663) - g(2) * t71 -(qJD(6) * t496 + t13 * t408 + t413 * t9) * t125 - t497 * t49 - t1 * t154 - t12 * t73 + t10 * t86 + t28 * t24 + t4 * t103 + t19 * t40 - g(1) * (t161 * t413 - t664) - g(2) * t70; 0, 0, 0, -t411 * t555, t571 * t596, -t415 * t504 + t535, t411 * t504 + t534, t389, pkin(1) * t411 * t596 - pkin(10) * t648 + qJD(1) * t424 + t454 + t456 (-pkin(10) * t545 + t386) * t524 + pkin(1) * t555 + t386 * qJD(2) + t455 - t550, -t403 * pkin(2) * t250 - g(1) * t286 - g(2) * t284 - g(3) * t352 + t100 * t407 - t158 * t589 - t189 * t516 - t239 * t342 - t259 * t641 + t359 * t445 + t450 * t643, t360 * t523 - t101 * t407 - t259 * t292 - t239 * t345 - t219 * t450 - g(1) * t285 - g(2) * t283 + g(3) * t646 + (-pkin(2) * t251 + t158 * t401 + t450 * t567 + (-qJD(2) * t360 + t190) * t545) * t403, -g(3) * t554 - t100 * t595 + t101 * t589 + t189 * t345 + t190 * t342 + t219 * t641 - t360 * t250 - t359 * t251 + t643 * t292 + (-t567 * t641 - t632) * t403, t100 * t359 + t101 * t360 - t189 * t218 - t190 * t219 - t239 * t259 + t456 * pkin(2) + (-t158 * pkin(2) + (-t189 * t401 + t190 * t405) * qJD(3) - t455 * qJ(3)) * t403, t207 * t573 + t321 * t91, -t205 * t573 - t207 * t572 - t321 * t92 + t647 * t91, t280 * t207 - t212 * t321 - t356 * t91 - t427 * t573, -t280 * t205 - t212 * t647 + t356 * t92 + t427 * t572, t212 * t356 - t280 * t427, -g(1) * t200 - g(2) * t198 - g(3) * t245 - t18 * t356 + t205 * t484 - t212 * t438 + t254 * t92 + t55 * t280 + t427 * t650 - t45 * t647 + t572 * t81, g(1) * t199 + g(2) * t197 + g(3) * t244 + t207 * t484 + t212 * t551 + t254 * t91 - t56 * t280 + t45 * t321 - t451 * t356 + t659 * t427 + t573 * t81, t131 * t575 + t262 * t50, -t129 * t575 - t131 * t574 - t261 * t50 - t262 * t51, t131 * t572 + t204 * t575 + t262 * t90 - t50 * t647, -t129 * t572 - t204 * t574 - t261 * t90 + t51 * t647, t204 * t572 - t647 * t90, t191 * t51 + t16 * t261 + t490 * t90 - t6 * t647 - g(1) * t127 - g(2) * t126 - g(3) * t208 + t574 * t46 + t572 * t26 + ((-qJD(5) * t192 - t652) * t414 + (-qJD(5) * t185 - t653) * t409) * t204 + t611 * t129, t191 * t50 + t16 * t262 - t576 * t90 + t5 * t647 - g(1) * (-t200 * t409 + t249 * t414) - g(2) * (-t198 * t409 + t248 * t414) - g(3) * (-t245 * t409 + t293 * t414) + t575 * t46 - t572 * t27 + t634 * t204 + t611 * t131, t225 * t24 + t578 * t86, -t224 * t24 - t225 * t25 - t577 * t86 - t578 * t84, t125 * t578 + t225 * t49 + t24 * t261 + t574 * t86, -t125 * t577 - t224 * t49 - t25 * t261 - t574 * t84, t125 * t574 + t261 * t49 (t113 * t413 - t408 * t99) * t49 + t2 * t261 + t98 * t25 + t4 * t224 - g(1) * (t127 * t413 + t199 * t408) - g(2) * (t126 * t413 + t197 * t408) - g(3) * (t208 * t413 + t244 * t408) + t620 * t84 + t577 * t19 + (t408 * t505 - t413 * t508) * t125 - t574 * t498 -(t113 * t408 + t413 * t99) * t49 - t1 * t261 + t98 * t24 + t4 * t225 - g(1) * (-t127 * t408 + t199 * t413) - g(2) * (-t126 * t408 + t197 * t413) - g(3) * (-t208 * t408 + t244 * t413) + t620 * t86 + t578 * t19 + (t408 * t508 + t413 * t505) * t125 - t574 * t12; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267 * t450 + t250, -t268 * t450 + t251, t267 * t292 + t268 * t641, -g(1) * t479 + g(2) * t333 + g(3) * t462 - t189 * t267 - t190 * t268 + t158, 0, 0, 0, 0, 0, t406 * t92 - t202 * t427 + (t267 * t205 - t212 * t627 + t427 * t565) * t402, t406 * t91 - t203 * t427 + (t267 * t207 + t410 * t212 + t427 * t538) * t402, 0, 0, 0, 0, 0, -t129 * t644 - t204 * t642 - t361 * t90 - t51 * t549, -t131 * t644 + t204 * t645 - t362 * t90 - t50 * t549, 0, 0, 0, 0, 0, t361 * t25 + t466 * t49 + t642 * t84 + (qJD(6) * t465 + t408 * t645 - t413 * t644) * t125, t361 * t24 + t465 * t49 + t642 * t86 + (-qJD(6) * t466 + t408 * t644 + t413 * t645) * t125; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t205 * t207, -t205 ^ 2 + t207 ^ 2, -t205 * t427 + t91, -t207 * t427 - t92, -t212, -t81 * t207 - t427 * t56 + t18 + t468, t81 * t205 - t427 * t55 + t451 - t467, t131 * t522 + t409 * t50 (t50 - t605) * t414 + (-t51 - t604) * t409, -t131 * t207 + t204 * t522 + t409 * t90, -t204 ^ 2 * t409 + t129 * t207 + t414 * t90, -t204 * t207, -pkin(4) * t51 - t56 * t129 - t26 * t207 + (t55 * t204 + t474) * t409 + ((-t116 - t618) * t204 + t457) * t414, -pkin(4) * t50 - t56 * t131 + t609 * t204 + t27 * t207 + t474 * t414 + (t204 * t618 - t457) * t409, t24 * t409 * t413 + (-t409 * t560 + t500) * t86, t110 * t86 + t111 * t84 + (-t408 * t86 - t413 * t84) * t561 + (-t615 - t25 * t413 + (t408 * t84 - t413 * t86) * qJD(6)) * t409, -t24 * t414 + t500 * t125 + (-t125 * t560 + t204 * t86 + t612) * t409, t25 * t414 + (-t408 * t561 + t110) * t125 + (-t125 * t559 - t204 * t84 - t613) * t409, t125 * t204 * t409 - t414 * t49, -t19 * t110 - t36 * t84 + t630 * t413 + t428 * t408 + (t19 * t564 - t2 + (qJD(5) * t84 - t613) * pkin(12) - t441 * t413) * t414 + (t19 * t559 + t4 * t408 - t204 * t498 + (t125 * t564 + t25) * pkin(12)) * t409, -t19 * t111 - t36 * t86 - t630 * t408 + t428 * t413 + (t19 * t562 + t1 + (qJD(5) * t86 - t612) * pkin(12) + t441 * t408) * t414 + (-t19 * t560 + t4 * t413 - t204 * t12 + (t125 * t562 + t24) * pkin(12)) * t409; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t131 * t129, -t129 ^ 2 + t131 ^ 2, t50 + t605, -t51 + t604, t90, -t131 * t46 + t204 * t27 - t469 + t6, g(1) * t109 - g(2) * t107 + g(3) * t155 + t129 * t46 + t204 * t26 - t5, t521 * t86 + t615 (t24 - t617) * t413 + (-t25 - t616) * t408, t125 * t521 - t131 * t86 + t613, -t125 ^ 2 * t408 + t131 * t84 + t612, -t125 * t131, -pkin(5) * t25 + t131 * t498 - t27 * t84 + t449 * t408 - t413 * t631, -pkin(5) * t24 + t12 * t131 - t27 * t86 + t408 * t631 + t449 * t413; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t86 * t84, -t84 ^ 2 + t86 ^ 2, t24 + t617, -t25 + t616, t49, t12 * t125 - t19 * t86 - g(1) * t70 - g(2) * (t159 * t413 + t664) + g(3) * t102 + t2, -t498 * t125 + t19 * t84 + g(1) * t71 - g(2) * (-t159 * t408 + t663) + g(3) * t103 - t1;];
tau_reg  = t7;
