% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-09 12:53
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRPRRR14_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR14_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR14_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_invdynB_fixb_reg2_snew_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-09 11:53:36
% EndTime: 2019-05-09 12:02:23
% DurationCPUTime: 417.08s
% Computational Cost: add. (5373947->1426), mult. (14590154->2418), div. (0->0), fcn. (12646481->18), ass. (0->1050)
t1602 = cos(qJ(2));
t1585 = t1602 ^ 2;
t1589 = sin(pkin(6));
t1583 = t1589 ^ 2;
t1930 = qJD(1) ^ 2;
t1869 = t1583 * t1930;
t1842 = t1585 * t1869;
t1590 = cos(pkin(14));
t1588 = sin(pkin(7));
t1592 = cos(pkin(7));
t1597 = sin(qJ(2));
t1863 = t1589 * t1597;
t1845 = qJD(1) * t1863;
t1576 = qJD(2) * t1845;
t1851 = qJDD(1) * t1602;
t1819 = t1589 * t1851 - t1576;
t1593 = cos(pkin(6));
t1829 = qJDD(1) * t1593 + qJDD(2);
t1634 = t1829 * t1588 + t1819 * t1592;
t1630 = t1590 * t1634;
t1594 = sin(qJ(6));
t1912 = qJD(1) * t1593;
t1578 = qJD(2) + t1912;
t1586 = sin(pkin(14));
t1862 = t1589 * t1602;
t1844 = qJD(1) * t1862;
t1828 = t1592 * t1844;
t1868 = t1586 * t1588;
t1535 = t1578 * t1868 + t1586 * t1828 + t1590 * t1845;
t1596 = sin(qJ(4));
t1601 = cos(qJ(4));
t1675 = t1578 * t1588 + t1828;
t1534 = -t1586 * t1845 + t1590 * t1675;
t1827 = t1588 * t1844;
t1871 = t1578 * t1592;
t1552 = -t1827 + t1871;
t1587 = sin(pkin(8));
t1591 = cos(pkin(8));
t1712 = t1534 * t1591 + t1552 * t1587;
t1489 = t1535 * t1601 + t1596 * t1712;
t1514 = -t1587 * t1534 + t1552 * t1591 + qJD(4);
t1595 = sin(qJ(5));
t1600 = cos(qJ(5));
t1456 = t1489 * t1600 + t1514 * t1595;
t1859 = t1591 * t1601;
t1866 = t1587 * t1601;
t1487 = -t1534 * t1859 + t1535 * t1596 - t1552 * t1866;
t1484 = qJD(5) + t1487;
t1599 = cos(qJ(6));
t1408 = t1456 * t1594 - t1599 * t1484;
t1410 = t1456 * t1599 + t1484 * t1594;
t1348 = t1410 * t1408;
t1852 = qJDD(1) * t1597;
t1911 = qJD(1) * t1602;
t1694 = qJD(2) * t1911 + t1852;
t1645 = t1694 * t1589;
t1519 = -t1586 * t1645 + t1630;
t1631 = t1586 * t1634;
t1623 = t1590 * t1645 + t1631;
t1644 = -t1588 * t1819 + t1592 * t1829;
t1638 = t1587 * t1644;
t1860 = t1591 * t1596;
t1428 = -t1487 * qJD(4) + t1519 * t1860 + t1596 * t1638 + t1601 * t1623;
t1497 = -t1519 * t1587 + t1591 * t1644 + qJDD(4);
t1833 = t1456 * qJD(5) + t1595 * t1428 - t1600 * t1497;
t1826 = qJDD(6) + t1833;
t1939 = -t1348 + t1826;
t1951 = t1594 * t1939;
t1454 = t1489 * t1595 - t1600 * t1514;
t1388 = t1456 * t1454;
t1619 = t1489 * qJD(4) - t1519 * t1859 + t1596 * t1623 - t1601 * t1638;
t1427 = qJDD(5) + t1619;
t1938 = -t1388 + t1427;
t1950 = t1595 * t1938;
t1949 = t1599 * t1939;
t1948 = t1600 * t1938;
t1579 = g(3) * t1863;
t1598 = sin(qJ(1));
t1603 = cos(qJ(1));
t1575 = g(1) * t1603 + t1598 * g(2);
t1853 = qJDD(1) * t1589;
t1646 = pkin(10) * t1853 - t1575;
t1574 = g(1) * t1598 - t1603 * g(2);
t1700 = qJDD(1) * pkin(1) + t1574;
t1681 = t1593 * t1700;
t1915 = qJ(3) * t1588;
t1926 = pkin(2) * t1602;
t1699 = -t1597 * t1915 - t1926;
t1858 = t1593 * t1597;
t1870 = t1578 * t1597;
t1914 = qJ(3) * t1592;
t1577 = t1578 ^ 2;
t1927 = pkin(2) * t1577;
t1610 = t1602 * t1646 + t1597 * t1681 - t1579 - t1927 + t1634 * qJ(3) + (-pkin(1) * t1911 + (t1870 * t1914 + (pkin(10) * t1858 + t1699 * t1862) * qJD(1)) * t1589) * qJD(1);
t1639 = t1644 * pkin(3);
t1920 = pkin(11) * t1587;
t1702 = -pkin(3) * t1534 - t1535 * t1920;
t1910 = qJD(3) * t1535;
t1933 = t1552 * t1712 - t1623 * t1591;
t1811 = t1829 * pkin(2);
t1918 = t1930 * pkin(1);
t1620 = -t1597 * (-t1575 - t1918) + t1602 * t1681 + t1577 * t1915 + t1811;
t1676 = t1597 * t1699;
t1832 = -pkin(10) - t1914;
t1921 = pkin(10) * t1593;
t1849 = t1602 * t1921;
t1916 = t1602 * g(3);
t1612 = (-t1916 + t1832 * t1852 + ((-t1589 * t1676 + t1849) * qJD(1) + (-qJD(2) + t1578) * t1602 * t1914) * qJD(1)) * t1589 + t1620;
t1917 = t1593 * g(3);
t1825 = t1576 * pkin(2) - t1917;
t1584 = t1597 ^ 2;
t1854 = t1584 + t1585;
t1856 = qJD(2) + t1578;
t1864 = t1588 * t1602;
t1913 = qJD(1) * t1589;
t1615 = ((-pkin(1) + t1699) * qJDD(1) + (pkin(2) * t1870 - pkin(10) * t1913 + (-t1592 * t1854 * t1913 - t1856 * t1864) * qJ(3)) * qJD(1) - t1574) * t1589 + t1825;
t1935 = t1588 * t1615 + t1592 * t1612;
t1607 = pkin(11) * t1933 - t1535 * t1702 - t1586 * t1610 + t1590 * t1935 + t1639 - 0.2e1 * t1910;
t1919 = pkin(11) * t1591;
t1701 = pkin(3) * t1552 - t1535 * t1919;
t1609 = -pkin(11) * t1534 * t1712 - t1519 * pkin(3) + t1535 * t1701 - t1588 * t1612 + t1592 * t1615 - t1623 * t1920 + qJDD(3);
t1947 = t1587 * t1609 + t1591 * t1607;
t1893 = t1456 * t1484;
t1946 = t1833 + t1893;
t1847 = qJ(3) * t1864;
t1647 = -t1583 * t1847 + t1589 * t1921;
t1704 = t1592 * (t1583 * t1926 + pkin(1));
t1865 = t1588 * t1590;
t1867 = t1586 * t1592;
t1872 = t1578 * t1589;
t1945 = -qJD(1) * (qJD(1) * (t1586 * t1647 - t1590 * t1704) - (pkin(2) * t1865 - qJ(3) * t1867) * t1872) - t1586 * t1681;
t1944 = t1583 * t1597;
t1883 = t1534 * t1535;
t1635 = t1644 + t1883;
t1943 = t1586 * t1635;
t1942 = t1590 * t1635;
t1890 = t1487 * t1489;
t1654 = t1497 - t1890;
t1941 = t1596 * t1654;
t1940 = t1601 * t1654;
t1358 = -t1454 * qJD(5) + t1600 * t1428 + t1595 * t1497;
t1418 = t1484 * t1454;
t1326 = -t1418 + t1358;
t1459 = t1514 * t1487;
t1937 = -t1459 + t1428;
t1518 = t1552 * t1534;
t1936 = t1518 + t1623;
t1884 = t1514 * t1596;
t1934 = t1487 * t1884 - t1601 * t1619;
t1885 = t1514 * t1489;
t1379 = t1619 + t1885;
t1877 = t1552 * t1590;
t1932 = t1535 * t1877 + t1586 * t1623;
t1922 = pkin(10) * t1589;
t1640 = t1922 * t1930 + t1700;
t1546 = t1589 * t1640 + t1917;
t1636 = t1593 * t1640;
t1613 = t1592 * (-g(3) * t1862 + t1602 * t1636 + t1811) + t1588 * (-pkin(2) * t1819 - t1546);
t1451 = qJD(6) + t1454;
t1368 = t1451 * t1408;
t1834 = t1408 * qJD(6) - t1599 * t1358 - t1594 * t1427;
t1251 = t1834 + t1368;
t1830 = t1358 * t1594 - t1599 * t1427;
t1246 = (qJD(6) - t1451) * t1410 + t1830;
t1628 = (-t1588 ^ 2 * qJ(3) + t1592 * t1832) * t1853 + t1592 * t1575;
t1406 = t1408 ^ 2;
t1407 = t1410 ^ 2;
t1450 = t1451 ^ 2;
t1452 = t1454 ^ 2;
t1453 = t1456 ^ 2;
t1929 = t1484 ^ 2;
t1485 = t1487 ^ 2;
t1486 = t1489 ^ 2;
t1928 = t1514 ^ 2;
t1532 = t1534 ^ 2;
t1533 = t1535 ^ 2;
t1551 = t1552 ^ 2;
t1925 = pkin(4) * t1596;
t1924 = pkin(4) * t1601;
t1923 = pkin(5) * t1595;
t1850 = 0.2e1 * qJD(3) * t1534;
t1336 = pkin(11) * t1638 + t1519 * t1919 + t1534 * t1702 - t1552 * t1701 + t1586 * t1935 + t1590 * t1610 + t1850;
t1213 = t1601 * t1336 + t1596 * t1947;
t1437 = pkin(4) * t1487 - pkin(12) * t1489;
t1192 = -pkin(4) * t1928 + t1497 * pkin(12) - t1487 * t1437 + t1213;
t1350 = t1591 * t1609;
t1605 = pkin(4) * t1379 - pkin(12) * t1937 - t1587 * t1607 + t1350;
t1118 = t1192 * t1595 - t1600 * t1605;
t1386 = pkin(5) * t1454 - pkin(13) * t1456;
t1093 = -t1427 * pkin(5) - pkin(13) * t1929 + t1386 * t1456 + t1118;
t1909 = t1093 * t1594;
t1908 = t1093 * t1599;
t1212 = t1336 * t1596 - t1601 * t1947;
t1191 = -t1497 * pkin(4) - t1928 * pkin(12) + t1437 * t1489 + t1212;
t1907 = t1191 * t1595;
t1906 = t1191 * t1600;
t1616 = t1592 * (-qJD(2) * t1828 + t1578 * t1675) + t1588 * (-qJD(2) * t1827 - t1675 * t1844);
t1637 = t1646 - t1918;
t1633 = t1602 * t1637 - t1579;
t1627 = -pkin(2) * t1842 + t1633 - t1927;
t1624 = t1586 * t1627 + 0.2e1 * t1910;
t1267 = -t1350 + t1933 * t1920 + (pkin(3) * t1883 - t1624 + t1639 - t1631 * qJ(3) + t1945 * t1597 + t1533 * t1920 + (t1616 * qJ(3) + t1597 * t1628 + t1613) * t1590) * t1587;
t1905 = t1267 * t1596;
t1904 = t1267 * t1601;
t1281 = t1348 + t1826;
t1903 = t1281 * t1594;
t1902 = t1281 * t1599;
t1343 = t1388 + t1427;
t1901 = t1343 * t1595;
t1900 = t1343 * t1600;
t1399 = -t1497 - t1890;
t1899 = t1399 * t1596;
t1898 = t1399 * t1601;
t1429 = t1588 * t1620 - t1592 * t1825 - qJDD(3) + (t1588 * (-pkin(10) * t1852 - t1916) - t1592 * (-pkin(2) * t1851 - t1700) + ((t1588 * t1849 + (-t1588 * t1676 - t1592 * (-t1854 * t1914 - pkin(10))) * t1589) * qJD(1) + (-pkin(2) * t1597 + 0.2e1 * t1847) * t1871) * qJD(1)) * t1589;
t1897 = t1429 * t1586;
t1896 = t1429 * t1590;
t1895 = t1451 * t1594;
t1894 = t1451 * t1599;
t1892 = t1484 * t1595;
t1891 = t1484 * t1600;
t1889 = t1487 * t1587;
t1888 = t1487 * t1591;
t1491 = -t1644 + t1883;
t1887 = t1491 * t1586;
t1886 = t1491 * t1590;
t1882 = t1535 * t1588;
t1881 = t1535 * t1592;
t1880 = t1546 * t1597;
t1879 = t1546 * t1602;
t1878 = t1552 * t1535;
t1857 = t1597 * t1930;
t1835 = t1602 * t1857;
t1573 = t1583 * t1835;
t1553 = t1573 + t1829;
t1876 = t1553 * t1597;
t1875 = t1553 * t1602;
t1554 = -t1573 + t1829;
t1874 = t1554 * t1597;
t1873 = t1554 * t1602;
t1861 = t1590 * t1592;
t1119 = t1600 * t1192 + t1595 * t1605;
t1094 = -pkin(5) * t1929 + pkin(13) * t1427 - t1386 * t1454 + t1119;
t1130 = pkin(5) * t1946 - t1326 * pkin(13) + t1191;
t1036 = t1599 * t1094 + t1594 * t1130;
t1848 = -pkin(5) * t1600 - pkin(4);
t1846 = qJD(1) * t1872;
t1843 = t1584 * t1869;
t1841 = t1595 * t1348;
t1840 = t1600 * t1348;
t1839 = t1596 * t1388;
t1838 = t1601 * t1388;
t1831 = -t1578 + t1912;
t1035 = t1094 * t1594 - t1599 * t1130;
t1044 = t1118 * t1595 + t1600 * t1119;
t1548 = -t1574 * t1598 - t1603 * t1575;
t1572 = qJDD(1) * t1603 - t1598 * t1930;
t1824 = -pkin(9) * t1572 - g(3) * t1598;
t1550 = -t1843 - t1577;
t1524 = -t1550 * t1597 - t1873;
t1823 = pkin(10) * t1524 - t1880;
t1558 = -t1577 - t1842;
t1530 = t1558 * t1602 - t1876;
t1822 = pkin(10) * t1530 + t1879;
t1420 = -t1928 - t1485;
t1345 = t1420 * t1601 - t1941;
t1821 = pkin(11) * t1345 + t1904;
t1433 = -t1486 - t1928;
t1353 = -t1433 * t1596 + t1898;
t1820 = pkin(11) * t1353 - t1905;
t973 = t1035 * t1594 + t1036 * t1599;
t947 = t1093 * t1595 + t1600 * t973;
t972 = -t1035 * t1599 + t1036 * t1594;
t1817 = t1596 * t947 - t1601 * t972;
t946 = -t1093 * t1600 + t1595 * t973;
t882 = -t1587 * t946 + t1591 * t1817;
t915 = t1596 * t972 + t1601 * t947;
t1818 = t1586 * t915 + t1590 * t882;
t881 = t1587 * t1817 + t1591 * t946;
t850 = -t1588 * t881 + t1592 * t1818;
t860 = -t1586 * t882 + t1590 * t915;
t1816 = t1597 * t860 + t1602 * t850;
t1012 = t1044 * t1601 + t1191 * t1596;
t1043 = -t1118 * t1600 + t1119 * t1595;
t1797 = t1044 * t1596 - t1191 * t1601;
t962 = -t1043 * t1587 + t1591 * t1797;
t1805 = t1012 * t1586 + t1590 * t962;
t961 = t1043 * t1591 + t1587 * t1797;
t901 = -t1588 * t961 + t1592 * t1805;
t929 = t1012 * t1590 - t1586 * t962;
t1815 = t1597 * t929 + t1602 * t901;
t1250 = -t1368 + t1834;
t1173 = -t1246 * t1599 - t1250 * t1594;
t1314 = t1406 + t1407;
t1133 = t1173 * t1595 + t1314 * t1600;
t1134 = t1173 * t1600 - t1314 * t1595;
t1171 = -t1246 * t1594 + t1250 * t1599;
t1782 = t1134 * t1596 - t1171 * t1601;
t1022 = t1133 * t1591 + t1587 * t1782;
t1023 = -t1133 * t1587 + t1591 * t1782;
t1066 = t1134 * t1601 + t1171 * t1596;
t1801 = t1023 * t1590 + t1066 * t1586;
t937 = -t1022 * t1588 + t1592 * t1801;
t979 = -t1023 * t1586 + t1066 * t1590;
t1814 = t1597 * t979 + t1602 * t937;
t1247 = (-qJD(6) - t1451) * t1410 - t1830;
t1172 = t1247 * t1599 + t1251 * t1594;
t1346 = -t1407 + t1406;
t1144 = t1172 * t1595 + t1346 * t1600;
t1145 = t1172 * t1600 - t1346 * t1595;
t1170 = -t1247 * t1594 + t1251 * t1599;
t1779 = t1145 * t1596 + t1170 * t1601;
t1029 = t1144 * t1591 + t1587 * t1779;
t1030 = -t1144 * t1587 + t1591 * t1779;
t1073 = t1145 * t1601 - t1170 * t1596;
t1800 = t1030 * t1590 + t1073 * t1586;
t939 = -t1029 * t1588 + t1592 * t1800;
t984 = -t1030 * t1586 + t1073 * t1590;
t1813 = t1597 * t984 + t1602 * t939;
t1332 = -t1450 - t1406;
t1222 = t1332 * t1599 - t1951;
t1153 = t1222 * t1595 + t1247 * t1600;
t1154 = t1222 * t1600 - t1247 * t1595;
t1221 = t1332 * t1594 + t1949;
t1776 = t1154 * t1596 - t1221 * t1601;
t1047 = t1153 * t1591 + t1587 * t1776;
t1048 = -t1153 * t1587 + t1591 * t1776;
t1098 = t1154 * t1601 + t1221 * t1596;
t1795 = t1048 * t1590 + t1098 * t1586;
t955 = -t1047 * t1588 + t1592 * t1795;
t998 = -t1048 * t1586 + t1098 * t1590;
t1812 = t1597 * t998 + t1602 * t955;
t1498 = -t1551 - t1532;
t1441 = t1498 * t1590 - t1943;
t1810 = qJ(3) * t1441 + t1896;
t1504 = -t1533 - t1551;
t1447 = -t1504 * t1586 + t1886;
t1809 = qJ(3) * t1447 - t1897;
t1341 = -t1407 - t1450;
t1225 = -t1341 * t1594 - t1902;
t1156 = t1225 * t1595 + t1251 * t1600;
t1157 = t1225 * t1600 - t1251 * t1595;
t1224 = t1341 * t1599 - t1903;
t1775 = t1157 * t1596 - t1224 * t1601;
t1052 = -t1156 * t1587 + t1591 * t1775;
t1105 = t1157 * t1601 + t1224 * t1596;
t1004 = -t1052 * t1586 + t1105 * t1590;
t1051 = t1156 * t1591 + t1587 * t1775;
t1794 = t1052 * t1590 + t1105 * t1586;
t960 = -t1051 * t1588 + t1592 * t1794;
t1808 = t1004 * t1597 + t1602 * t960;
t1367 = -t1407 + t1450;
t1239 = -t1367 * t1594 + t1949;
t1166 = t1239 * t1595 + t1250 * t1600;
t1168 = t1239 * t1600 - t1250 * t1595;
t1237 = -t1367 * t1599 - t1951;
t1773 = t1168 * t1596 + t1237 * t1601;
t1058 = -t1166 * t1587 + t1591 * t1773;
t1114 = t1168 * t1601 - t1237 * t1596;
t1007 = -t1058 * t1586 + t1114 * t1590;
t1056 = t1166 * t1591 + t1587 * t1773;
t1793 = t1058 * t1590 + t1114 * t1586;
t967 = -t1056 * t1588 + t1592 * t1793;
t1807 = t1007 * t1597 + t1602 * t967;
t1366 = t1406 - t1450;
t1240 = t1366 * t1599 - t1903;
t1167 = t1240 * t1595 + t1246 * t1600;
t1169 = t1240 * t1600 - t1246 * t1595;
t1238 = -t1366 * t1594 - t1902;
t1772 = t1169 * t1596 + t1238 * t1601;
t1059 = -t1167 * t1587 + t1591 * t1772;
t1115 = t1169 * t1601 - t1238 * t1596;
t1008 = -t1059 * t1586 + t1115 * t1590;
t1057 = t1167 * t1591 + t1587 * t1772;
t1792 = t1059 * t1590 + t1115 * t1586;
t968 = -t1057 * t1588 + t1592 * t1792;
t1806 = t1008 * t1597 + t1602 * t968;
t1285 = -qJD(6) * t1410 - t1830;
t1243 = -t1285 * t1594 + t1408 * t1894;
t1203 = t1243 * t1595 + t1840;
t1205 = t1243 * t1600 - t1841;
t1242 = -t1285 * t1599 - t1408 * t1895;
t1762 = t1205 * t1596 + t1242 * t1601;
t1087 = -t1203 * t1587 + t1591 * t1762;
t1142 = t1205 * t1601 - t1242 * t1596;
t1038 = -t1087 * t1586 + t1142 * t1590;
t1085 = t1203 * t1591 + t1587 * t1762;
t1787 = t1087 * t1590 + t1142 * t1586;
t991 = -t1085 * t1588 + t1592 * t1787;
t1804 = t1038 * t1597 + t1602 * t991;
t1245 = -t1410 * t1895 - t1599 * t1834;
t1204 = t1245 * t1595 - t1840;
t1206 = t1245 * t1600 + t1841;
t1244 = -t1410 * t1894 + t1594 * t1834;
t1761 = t1206 * t1596 + t1244 * t1601;
t1088 = -t1204 * t1587 + t1591 * t1761;
t1143 = t1206 * t1601 - t1244 * t1596;
t1039 = -t1088 * t1586 + t1143 * t1590;
t1086 = t1204 * t1591 + t1587 * t1761;
t1786 = t1088 * t1590 + t1143 * t1586;
t992 = -t1086 * t1588 + t1592 * t1786;
t1803 = t1039 * t1597 + t1602 * t992;
t1760 = -t1212 * t1601 + t1213 * t1596;
t1096 = t1267 * t1587 + t1591 * t1760;
t1132 = t1212 * t1596 + t1213 * t1601;
t1040 = -t1096 * t1586 + t1132 * t1590;
t1095 = -t1267 * t1591 + t1587 * t1760;
t1785 = t1096 * t1590 + t1132 * t1586;
t997 = -t1095 * t1588 + t1592 * t1785;
t1802 = t1040 * t1597 + t1602 * t997;
t1298 = (-t1408 * t1599 + t1410 * t1594) * t1451;
t1255 = t1298 * t1595 - t1600 * t1826;
t1256 = t1298 * t1600 + t1595 * t1826;
t1297 = (t1408 * t1594 + t1410 * t1599) * t1451;
t1753 = t1256 * t1596 + t1297 * t1601;
t1135 = t1255 * t1591 + t1587 * t1753;
t1136 = -t1255 * t1587 + t1591 * t1753;
t1193 = t1256 * t1601 - t1297 * t1596;
t1781 = t1136 * t1590 + t1193 * t1586;
t1032 = -t1135 * t1588 + t1592 * t1781;
t1077 = -t1136 * t1586 + t1193 * t1590;
t1799 = t1032 * t1602 + t1077 * t1597;
t1325 = -t1833 + t1893;
t1327 = -t1418 - t1358;
t1233 = t1325 * t1595 + t1327 * t1600;
t1235 = t1325 * t1600 - t1327 * t1595;
t1359 = t1452 + t1453;
t1754 = t1235 * t1596 + t1359 * t1601;
t1138 = t1233 * t1591 + t1587 * t1754;
t1139 = -t1233 * t1587 + t1591 * t1754;
t1200 = t1235 * t1601 - t1359 * t1596;
t1780 = t1139 * t1590 + t1200 * t1586;
t1034 = -t1138 * t1588 + t1592 * t1780;
t1082 = -t1139 * t1586 + t1200 * t1590;
t1798 = t1034 * t1602 + t1082 * t1597;
t1232 = t1326 * t1600 - t1595 * t1946;
t1234 = -t1326 * t1595 - t1600 * t1946;
t1387 = -t1453 + t1452;
t1755 = t1234 * t1596 + t1387 * t1601;
t1149 = t1232 * t1591 + t1587 * t1755;
t1150 = -t1232 * t1587 + t1591 * t1755;
t1218 = t1234 * t1601 - t1387 * t1596;
t1777 = t1150 * t1590 + t1218 * t1586;
t1046 = -t1149 * t1588 + t1592 * t1777;
t1091 = -t1150 * t1586 + t1218 * t1590;
t1796 = t1046 * t1602 + t1091 * t1597;
t1369 = -t1929 - t1452;
t1289 = t1369 * t1595 + t1948;
t1290 = t1369 * t1600 - t1950;
t1747 = t1290 * t1596 - t1601 * t1946;
t1176 = t1289 * t1591 + t1587 * t1747;
t1177 = -t1289 * t1587 + t1591 * t1747;
t1220 = t1290 * t1601 + t1596 * t1946;
t1770 = t1177 * t1590 + t1220 * t1586;
t1061 = -t1176 * t1588 + t1592 * t1770;
t1110 = -t1177 * t1586 + t1220 * t1590;
t1791 = t1061 * t1602 + t1110 * t1597;
t1385 = -t1453 - t1929;
t1293 = t1385 * t1600 - t1901;
t1294 = -t1385 * t1595 - t1900;
t1745 = t1294 * t1596 - t1326 * t1601;
t1180 = t1293 * t1591 + t1587 * t1745;
t1181 = -t1293 * t1587 + t1591 * t1745;
t1223 = t1294 * t1601 + t1326 * t1596;
t1769 = t1181 * t1590 + t1223 * t1586;
t1063 = -t1180 * t1588 + t1592 * t1769;
t1116 = -t1181 * t1586 + t1223 * t1590;
t1790 = t1063 * t1602 + t1116 * t1597;
t1416 = -t1453 + t1929;
t1306 = t1416 * t1600 + t1950;
t1308 = -t1416 * t1595 + t1948;
t1741 = t1308 * t1596 + t1327 * t1601;
t1184 = t1306 * t1591 + t1587 * t1741;
t1186 = -t1306 * t1587 + t1591 * t1741;
t1230 = t1308 * t1601 - t1327 * t1596;
t1767 = t1186 * t1590 + t1230 * t1586;
t1069 = -t1184 * t1588 + t1592 * t1767;
t1124 = -t1186 * t1586 + t1230 * t1590;
t1789 = t1069 * t1602 + t1124 * t1597;
t1415 = t1452 - t1929;
t1307 = t1415 * t1595 + t1900;
t1309 = t1415 * t1600 - t1901;
t1740 = t1309 * t1596 - t1325 * t1601;
t1185 = t1307 * t1591 + t1587 * t1740;
t1187 = -t1307 * t1587 + t1591 * t1740;
t1231 = t1309 * t1601 + t1325 * t1596;
t1766 = t1187 * t1590 + t1231 * t1586;
t1070 = -t1185 * t1588 + t1592 * t1766;
t1125 = -t1187 * t1586 + t1231 * t1590;
t1788 = t1070 * t1602 + t1125 * t1597;
t1319 = t1454 * t1892 - t1600 * t1833;
t1320 = t1454 * t1891 + t1595 * t1833;
t1697 = t1320 * t1596 + t1838;
t1214 = t1319 * t1591 + t1587 * t1697;
t1216 = -t1319 * t1587 + t1591 * t1697;
t1276 = t1320 * t1601 - t1839;
t1759 = t1216 * t1590 + t1276 * t1586;
t1101 = -t1214 * t1588 + t1592 * t1759;
t1162 = -t1216 * t1586 + t1276 * t1590;
t1784 = t1101 * t1602 + t1162 * t1597;
t1321 = t1358 * t1595 + t1456 * t1891;
t1322 = t1358 * t1600 - t1456 * t1892;
t1696 = t1322 * t1596 - t1838;
t1215 = t1321 * t1591 + t1587 * t1696;
t1217 = -t1321 * t1587 + t1591 * t1696;
t1277 = t1322 * t1601 + t1839;
t1758 = t1217 * t1590 + t1277 * t1586;
t1102 = -t1215 * t1588 + t1592 * t1758;
t1163 = -t1217 * t1586 + t1277 * t1590;
t1783 = t1102 * t1602 + t1163 * t1597;
t1351 = (-t1454 * t1595 - t1456 * t1600) * t1484;
t1352 = (-t1454 * t1600 + t1456 * t1595) * t1484;
t1737 = t1352 * t1596 - t1427 * t1601;
t1259 = t1351 * t1591 + t1587 * t1737;
t1260 = -t1351 * t1587 + t1591 * t1737;
t1318 = t1352 * t1601 + t1427 * t1596;
t1752 = t1260 * t1590 + t1318 * t1586;
t1148 = -t1259 * t1588 + t1592 * t1752;
t1199 = -t1260 * t1586 + t1318 * t1590;
t1778 = t1148 * t1602 + t1199 * t1597;
t1396 = -t1485 - t1486;
t1384 = t1459 + t1428;
t1617 = -t1619 + t1885;
t1733 = -t1384 * t1601 + t1596 * t1617;
t1274 = t1396 * t1591 + t1587 * t1733;
t1275 = -t1396 * t1587 + t1591 * t1733;
t1313 = t1384 * t1596 + t1601 * t1617;
t1750 = t1275 * t1590 + t1313 * t1586;
t1161 = -t1274 * t1588 + t1592 * t1750;
t1207 = -t1275 * t1586 + t1313 * t1590;
t1774 = t1161 * t1602 + t1207 * t1597;
t1438 = t1486 - t1485;
t1734 = -t1379 * t1596 + t1601 * t1937;
t1287 = t1438 * t1591 + t1587 * t1734;
t1288 = -t1438 * t1587 + t1591 * t1734;
t1312 = -t1379 * t1601 - t1596 * t1937;
t1748 = t1288 * t1590 + t1312 * t1586;
t1175 = -t1287 * t1588 + t1592 * t1748;
t1219 = -t1288 * t1586 + t1312 * t1590;
t1771 = t1175 * t1602 + t1219 * t1597;
t1726 = t1420 * t1596 + t1940;
t1291 = t1379 * t1591 + t1587 * t1726;
t1292 = -t1379 * t1587 + t1591 * t1726;
t1746 = t1292 * t1590 + t1345 * t1586;
t1183 = -t1291 * t1588 + t1592 * t1746;
t1236 = -t1292 * t1586 + t1345 * t1590;
t1768 = t1183 * t1602 + t1236 * t1597;
t1729 = t1433 * t1601 + t1899;
t1295 = t1587 * t1729 + t1591 * t1937;
t1296 = -t1587 * t1937 + t1591 * t1729;
t1744 = t1296 * t1590 + t1353 * t1586;
t1189 = -t1295 * t1588 + t1592 * t1744;
t1252 = -t1296 * t1586 + t1353 * t1590;
t1765 = t1189 * t1602 + t1252 * t1597;
t1458 = -t1486 + t1928;
t1727 = t1458 * t1601 + t1941;
t1301 = t1384 * t1591 + t1587 * t1727;
t1303 = -t1384 * t1587 + t1591 * t1727;
t1364 = -t1458 * t1596 + t1940;
t1743 = t1303 * t1590 + t1364 * t1586;
t1196 = -t1301 * t1588 + t1592 * t1743;
t1261 = -t1303 * t1586 + t1364 * t1590;
t1764 = t1196 * t1602 + t1261 * t1597;
t1457 = t1485 - t1928;
t1728 = t1457 * t1596 - t1898;
t1302 = t1587 * t1728 + t1591 * t1617;
t1304 = -t1587 * t1617 + t1591 * t1728;
t1365 = t1457 * t1601 + t1899;
t1742 = t1304 * t1590 + t1365 * t1586;
t1197 = -t1302 * t1588 + t1592 * t1742;
t1262 = -t1304 * t1586 + t1365 * t1590;
t1763 = t1197 * t1602 + t1262 * t1597;
t1337 = -t1489 * t1888 + t1587 * t1934;
t1338 = t1489 * t1889 + t1591 * t1934;
t1375 = t1459 * t1601 + t1596 * t1619;
t1739 = t1338 * t1590 + t1375 * t1586;
t1228 = -t1337 * t1588 + t1592 * t1739;
t1283 = -t1338 * t1586 + t1375 * t1590;
t1757 = t1228 * t1602 + t1283 * t1597;
t1339 = t1428 * t1587 * t1596 + (t1514 * t1866 + t1888) * t1489;
t1340 = t1428 * t1860 + (t1514 * t1859 - t1889) * t1489;
t1376 = t1428 * t1601 - t1489 * t1884;
t1738 = t1340 * t1590 + t1376 * t1586;
t1229 = -t1339 * t1588 + t1592 * t1738;
t1284 = -t1340 * t1586 + t1376 * t1590;
t1756 = t1229 * t1602 + t1284 * t1597;
t1693 = t1514 * (-t1487 * t1596 - t1489 * t1601);
t1372 = t1497 * t1591 + t1587 * t1693;
t1373 = -t1497 * t1587 + t1591 * t1693;
t1389 = (-t1487 * t1601 + t1489 * t1596) * t1514;
t1736 = t1373 * t1590 + t1389 * t1586;
t1269 = -t1372 * t1588 + t1592 * t1736;
t1331 = -t1373 * t1586 + t1389 * t1590;
t1751 = t1269 * t1602 + t1331 * t1597;
t1377 = -t1613 * t1590 + (-t1590 * t1616 + t1631) * qJ(3) + (-t1628 * t1590 - t1945) * t1597 + t1624;
t1378 = t1590 * t1627 + t1850 + t1613 * t1586 + (t1586 * t1616 + t1630) * qJ(3) + (t1590 * t1681 + t1628 * t1586 + ((t1586 * t1704 + t1590 * t1647) * qJD(1) + (pkin(2) * t1868 + qJ(3) * t1861) * t1872) * qJD(1)) * t1597;
t1735 = -t1377 * t1590 + t1378 * t1586;
t1279 = t1429 * t1588 + t1592 * t1735;
t1311 = t1377 * t1586 + t1378 * t1590;
t1749 = t1279 * t1602 + t1311 * t1597;
t1483 = -t1532 - t1533;
t1480 = -t1518 + t1623;
t1632 = t1519 + t1878;
t1718 = -t1480 * t1590 + t1586 * t1632;
t1391 = -t1483 * t1588 + t1592 * t1718;
t1435 = t1480 * t1586 + t1590 * t1632;
t1732 = t1391 * t1602 + t1435 * t1597;
t1475 = -t1519 + t1878;
t1714 = t1498 * t1586 + t1942;
t1395 = -t1475 * t1588 + t1592 * t1714;
t1731 = t1395 * t1602 + t1441 * t1597;
t1509 = t1533 - t1532;
t1719 = -t1475 * t1586 + t1590 * t1936;
t1398 = -t1509 * t1588 + t1592 * t1719;
t1434 = -t1475 * t1590 - t1586 * t1936;
t1730 = t1398 * t1602 + t1434 * t1597;
t1717 = t1504 * t1590 + t1887;
t1403 = -t1588 * t1936 + t1592 * t1717;
t1725 = t1403 * t1602 + t1447 * t1597;
t1517 = -t1533 + t1551;
t1715 = t1517 * t1590 + t1943;
t1413 = -t1480 * t1588 + t1592 * t1715;
t1460 = -t1517 * t1586 + t1942;
t1724 = t1413 * t1602 + t1460 * t1597;
t1516 = t1532 - t1551;
t1716 = t1516 * t1586 - t1886;
t1414 = -t1588 * t1632 + t1592 * t1716;
t1461 = t1516 * t1590 + t1887;
t1723 = t1414 * t1602 + t1461 * t1597;
t1443 = t1519 * t1861 + (-t1552 * t1867 - t1882) * t1534;
t1473 = -t1519 * t1586 - t1534 * t1877;
t1722 = t1443 * t1602 + t1473 * t1597;
t1445 = t1534 * t1882 + t1592 * t1932;
t1474 = t1590 ^ 2 * t1645 + (t1630 - t1878) * t1586;
t1721 = t1445 * t1602 + t1474 * t1597;
t1692 = t1552 * (t1534 * t1586 - t1535 * t1590);
t1465 = -t1588 * t1644 + t1592 * t1692;
t1472 = (t1534 * t1590 + t1535 * t1586) * t1552;
t1720 = t1465 * t1602 + t1472 * t1597;
t1522 = t1597 * t1637 + (t1589 * g(3) - t1636) * t1602;
t1523 = t1597 * t1636 + t1633;
t1713 = -t1522 * t1602 + t1523 * t1597;
t1490 = t1522 * t1597 + t1523 * t1602;
t1562 = t1578 * t1844;
t1540 = t1562 + t1645;
t1561 = t1578 * t1845;
t1543 = -t1561 + t1819;
t1711 = t1540 * t1602 + t1543 * t1597;
t1541 = -t1562 + t1645;
t1542 = t1561 + t1819;
t1710 = -t1541 * t1602 + t1542 * t1597;
t1709 = t1550 * t1602 - t1874;
t1556 = t1577 - t1843;
t1708 = t1556 * t1602 + t1876;
t1707 = t1558 * t1597 + t1875;
t1557 = -t1577 + t1842;
t1706 = t1557 * t1597 + t1873;
t1547 = t1574 * t1603 - t1598 * t1575;
t1705 = t1589 * t1829;
t885 = -pkin(12) * t946 + (-pkin(13) * t1600 + t1923) * t972;
t908 = -pkin(4) * t946 + pkin(5) * t1093 - pkin(13) * t973;
t1682 = pkin(11) * t915 + t1596 * t885 + t1601 * t908;
t870 = pkin(12) * t947 + (-pkin(13) * t1595 + t1848) * t972;
t831 = -pkin(3) * t881 - t1587 * t870 + t1591 * t1682;
t836 = -t1596 * t908 + t1601 * t885 + (-t1587 * t881 - t1591 * t882) * pkin(11);
t1670 = qJ(3) * t860 + t1586 * t836 + t1590 * t831;
t830 = pkin(3) * t882 + t1587 * t1682 + t1591 * t870;
t849 = t1588 * t1818 + t1592 * t881;
t814 = -pkin(2) * t849 - t1588 * t830 + t1592 * t1670;
t817 = -t1586 * t831 + t1590 * t836 + (-t1588 * t849 - t1592 * t850) * qJ(3);
t833 = -t1597 * t850 + t1602 * t860;
t1689 = pkin(10) * t833 + t1597 * t817 + t1602 * t814;
t956 = -pkin(13) * t1171 - t972;
t935 = -pkin(12) * t1133 + t1171 * t1923 + t1600 * t956;
t940 = -pkin(4) * t1133 - pkin(5) * t1314 - pkin(13) * t1173 - t973;
t1677 = pkin(11) * t1066 + t1596 * t935 + t1601 * t940;
t930 = pkin(12) * t1134 + t1171 * t1848 + t1595 * t956;
t862 = -pkin(3) * t1022 - t1587 * t930 + t1591 * t1677;
t872 = -t1596 * t940 + t1601 * t935 + (-t1022 * t1587 - t1023 * t1591) * pkin(11);
t1669 = qJ(3) * t979 + t1586 * t872 + t1590 * t862;
t861 = pkin(3) * t1023 + t1587 * t1677 + t1591 * t930;
t936 = t1022 * t1592 + t1588 * t1801;
t829 = -pkin(2) * t936 - t1588 * t861 + t1592 * t1669;
t837 = -t1586 * t862 + t1590 * t872 + (-t1588 * t936 - t1592 * t937) * qJ(3);
t912 = -t1597 * t937 + t1602 * t979;
t1688 = pkin(10) * t912 + t1597 * t837 + t1602 * t829;
t1013 = -pkin(4) * t1191 + pkin(12) * t1044;
t1641 = pkin(11) * t1012 + (-pkin(12) * t1596 - t1924) * t1043;
t889 = -pkin(3) * t961 - t1013 * t1587 + t1591 * t1641;
t892 = (-pkin(12) * t1601 + t1925) * t1043 + (-t1587 * t961 - t1591 * t962) * pkin(11);
t1667 = qJ(3) * t929 + t1586 * t892 + t1590 * t889;
t888 = pkin(3) * t962 + t1013 * t1591 + t1587 * t1641;
t900 = t1588 * t1805 + t1592 * t961;
t835 = -pkin(2) * t900 - t1588 * t888 + t1592 * t1667;
t840 = -t1586 * t889 + t1590 * t892 + (-t1588 * t900 - t1592 * t901) * qJ(3);
t869 = -t1597 * t901 + t1602 * t929;
t1687 = pkin(10) * t869 + t1597 * t840 + t1602 * t835;
t1009 = -pkin(4) * t1153 - pkin(5) * t1247 - pkin(13) * t1222 + t1908;
t1014 = -pkin(5) * t1221 + t1035;
t1064 = -pkin(13) * t1221 + t1909;
t957 = -pkin(12) * t1153 - t1014 * t1595 + t1064 * t1600;
t1672 = pkin(11) * t1098 + t1009 * t1601 + t1596 * t957;
t948 = -pkin(4) * t1221 + pkin(12) * t1154 + t1014 * t1600 + t1064 * t1595;
t876 = -pkin(3) * t1047 - t1587 * t948 + t1591 * t1672;
t906 = -t1009 * t1596 + t1601 * t957 + (-t1047 * t1587 - t1048 * t1591) * pkin(11);
t1668 = qJ(3) * t998 + t1586 * t906 + t1590 * t876;
t875 = pkin(3) * t1048 + t1587 * t1672 + t1591 * t948;
t954 = t1047 * t1592 + t1588 * t1795;
t839 = -pkin(2) * t954 - t1588 * t875 + t1592 * t1668;
t852 = -t1586 * t876 + t1590 * t906 + (-t1588 * t954 - t1592 * t955) * qJ(3);
t923 = -t1597 * t955 + t1602 * t998;
t1686 = pkin(10) * t923 + t1597 * t852 + t1602 * t839;
t1011 = -pkin(4) * t1156 - pkin(5) * t1251 - pkin(13) * t1225 - t1909;
t1017 = -pkin(5) * t1224 + t1036;
t1065 = -pkin(13) * t1224 + t1908;
t958 = -pkin(12) * t1156 - t1017 * t1595 + t1065 * t1600;
t1671 = pkin(11) * t1105 + t1011 * t1601 + t1596 * t958;
t953 = -pkin(4) * t1224 + pkin(12) * t1157 + t1017 * t1600 + t1065 * t1595;
t879 = -pkin(3) * t1051 - t1587 * t953 + t1591 * t1671;
t907 = -t1011 * t1596 + t1601 * t958 + (-t1051 * t1587 - t1052 * t1591) * pkin(11);
t1658 = qJ(3) * t1004 + t1586 * t907 + t1590 * t879;
t878 = pkin(3) * t1052 + t1587 * t1671 + t1591 * t953;
t959 = t1051 * t1592 + t1588 * t1794;
t842 = -pkin(2) * t959 - t1588 * t878 + t1592 * t1658;
t853 = -t1586 * t879 + t1590 * t907 + (-t1588 * t959 - t1592 * t960) * qJ(3);
t924 = t1004 * t1602 - t1597 * t960;
t1685 = pkin(10) * t924 + t1597 * t853 + t1602 * t842;
t1033 = t1138 * t1592 + t1588 * t1780;
t1016 = pkin(4) * t1359 + pkin(12) * t1235 + t1044;
t1024 = -pkin(12) * t1233 - t1043;
t1643 = pkin(11) * t1200 + t1024 * t1596 - t1233 * t1924;
t934 = -pkin(3) * t1138 - t1016 * t1587 + t1591 * t1643;
t969 = t1233 * t1925 + t1024 * t1601 + (-t1138 * t1587 - t1139 * t1591) * pkin(11);
t1657 = qJ(3) * t1082 + t1586 * t969 + t1590 * t934;
t933 = pkin(3) * t1139 + t1016 * t1591 + t1587 * t1643;
t866 = -pkin(2) * t1033 - t1588 * t933 + t1592 * t1657;
t880 = -t1586 * t934 + t1590 * t969 + (-t1033 * t1588 - t1034 * t1592) * qJ(3);
t988 = -t1034 * t1597 + t1082 * t1602;
t1684 = pkin(10) * t988 + t1597 * t880 + t1602 * t866;
t1042 = pkin(3) * t1096 + t1132 * t1920;
t1025 = (-t1095 * t1587 - t1096 * t1591) * pkin(11);
t1041 = -pkin(3) * t1095 + t1132 * t1919;
t1652 = qJ(3) * t1040 + t1025 * t1586 + t1041 * t1590;
t996 = t1095 * t1592 + t1588 * t1785;
t905 = -pkin(2) * t996 - t1042 * t1588 + t1592 * t1652;
t910 = t1025 * t1590 - t1041 * t1586 + (-t1588 * t996 - t1592 * t997) * qJ(3);
t950 = t1040 * t1602 - t1597 * t997;
t1683 = pkin(10) * t950 + t1597 * t910 + t1602 * t905;
t1006 = -t1061 * t1597 + t1110 * t1602;
t1060 = t1176 * t1592 + t1588 * t1770;
t1123 = -pkin(4) * t1946 + pkin(12) * t1290 - t1906;
t1089 = -pkin(4) * t1289 + t1118;
t1151 = -pkin(12) * t1289 + t1907;
t1661 = pkin(11) * t1220 + t1089 * t1601 + t1151 * t1596;
t976 = -pkin(3) * t1176 - t1123 * t1587 + t1591 * t1661;
t993 = -t1089 * t1596 + t1151 * t1601 + (-t1176 * t1587 - t1177 * t1591) * pkin(11);
t1656 = qJ(3) * t1110 + t1586 * t993 + t1590 * t976;
t975 = pkin(3) * t1177 + t1123 * t1591 + t1587 * t1661;
t884 = -pkin(2) * t1060 - t1588 * t975 + t1592 * t1656;
t909 = -t1586 * t976 + t1590 * t993 + (-t1060 * t1588 - t1061 * t1592) * qJ(3);
t1680 = pkin(10) * t1006 + t1597 * t909 + t1602 * t884;
t1010 = -t1063 * t1597 + t1116 * t1602;
t1062 = t1180 * t1592 + t1588 * t1769;
t1126 = -pkin(4) * t1326 + pkin(12) * t1294 + t1907;
t1090 = -pkin(4) * t1293 + t1119;
t1152 = -pkin(12) * t1293 + t1906;
t1660 = pkin(11) * t1223 + t1090 * t1601 + t1152 * t1596;
t981 = -pkin(3) * t1180 - t1126 * t1587 + t1591 * t1660;
t995 = -t1090 * t1596 + t1152 * t1601 + (-t1180 * t1587 - t1181 * t1591) * pkin(11);
t1655 = qJ(3) * t1116 + t1586 * t995 + t1590 * t981;
t980 = pkin(3) * t1181 + t1126 * t1591 + t1587 * t1660;
t887 = -pkin(2) * t1062 - t1588 * t980 + t1592 * t1655;
t911 = -t1586 * t981 + t1590 * t995 + (-t1062 * t1588 - t1063 * t1592) * qJ(3);
t1679 = pkin(10) * t1010 + t1597 * t911 + t1602 * t887;
t1097 = -t1161 * t1597 + t1207 * t1602;
t1659 = pkin(11) * t1313 + t1132;
t1078 = pkin(3) * t1275 + t1587 * t1659;
t1160 = t1274 * t1592 + t1588 * t1750;
t1076 = (-t1274 * t1587 - t1275 * t1591) * pkin(11) - t1760;
t1079 = -pkin(3) * t1274 + t1591 * t1659;
t1651 = qJ(3) * t1207 + t1076 * t1586 + t1079 * t1590;
t952 = -pkin(2) * t1160 - t1078 * t1588 + t1592 * t1651;
t974 = t1076 * t1590 - t1079 * t1586 + (-t1160 * t1588 - t1161 * t1592) * qJ(3);
t1678 = pkin(10) * t1097 + t1597 * t974 + t1602 * t952;
t1108 = -pkin(3) * t1291 + t1212 * t1587 + t1591 * t1821;
t1155 = -t1905 + (-t1291 * t1587 - t1292 * t1591) * pkin(11);
t1182 = t1291 * t1592 + t1588 * t1746;
t1003 = -t1108 * t1586 + t1155 * t1590 + (-t1182 * t1588 - t1183 * t1592) * qJ(3);
t1127 = -t1183 * t1597 + t1236 * t1602;
t1107 = pkin(3) * t1292 - t1212 * t1591 + t1587 * t1821;
t1650 = qJ(3) * t1236 + t1108 * t1590 + t1155 * t1586;
t983 = -pkin(2) * t1182 - t1107 * t1588 + t1592 * t1650;
t1674 = pkin(10) * t1127 + t1003 * t1597 + t1602 * t983;
t1112 = -pkin(3) * t1295 + t1213 * t1587 + t1591 * t1820;
t1159 = -t1904 + (-t1295 * t1587 - t1296 * t1591) * pkin(11);
t1188 = t1295 * t1592 + t1588 * t1744;
t1005 = -t1112 * t1586 + t1159 * t1590 + (-t1188 * t1588 - t1189 * t1592) * qJ(3);
t1131 = -t1189 * t1597 + t1252 * t1602;
t1111 = pkin(3) * t1296 - t1213 * t1591 + t1587 * t1820;
t1649 = qJ(3) * t1252 + t1112 * t1590 + t1159 * t1586;
t986 = -pkin(2) * t1188 - t1111 * t1588 + t1592 * t1649;
t1673 = pkin(10) * t1131 + t1005 * t1597 + t1602 * t986;
t1278 = -t1429 * t1592 + t1588 * t1735;
t1198 = (-t1278 * t1588 - t1279 * t1592) * qJ(3);
t1209 = -t1279 * t1597 + t1311 * t1602;
t1210 = -pkin(2) * t1278 + t1311 * t1914;
t1666 = pkin(10) * t1209 + t1198 * t1597 + t1210 * t1602;
t1390 = t1483 * t1592 + t1588 * t1718;
t1241 = (-t1390 * t1588 - t1391 * t1592) * qJ(3) - t1735;
t1648 = qJ(3) * t1435 + t1311;
t1258 = -pkin(2) * t1390 + t1592 * t1648;
t1347 = -t1391 * t1597 + t1435 * t1602;
t1665 = pkin(10) * t1347 + t1241 * t1597 + t1258 * t1602;
t1394 = t1475 * t1592 + t1588 * t1714;
t1271 = -pkin(2) * t1394 + t1377 * t1588 + t1592 * t1810;
t1305 = -t1897 + (-t1394 * t1588 - t1395 * t1592) * qJ(3);
t1360 = -t1395 * t1597 + t1441 * t1602;
t1664 = pkin(10) * t1360 + t1271 * t1602 + t1305 * t1597;
t1402 = t1588 * t1717 + t1592 * t1936;
t1273 = -pkin(2) * t1402 + t1378 * t1588 + t1592 * t1809;
t1310 = -t1896 + (-t1402 * t1588 - t1403 * t1592) * qJ(3);
t1363 = -t1403 * t1597 + t1447 * t1602;
t1663 = pkin(10) * t1363 + t1273 * t1602 + t1310 * t1597;
t1511 = t1541 * t1597 + t1542 * t1602;
t1662 = pkin(10) * t1511 + t1490;
t1539 = (t1856 * t1911 + t1852) * t1589;
t1582 = t1589 * t1583;
t1571 = t1598 * qJDD(1) + t1603 * t1930;
t1560 = t1854 * t1869;
t1559 = (t1584 - t1585) * t1869;
t1555 = -pkin(9) * t1571 + g(3) * t1603;
t1544 = t1854 * t1846;
t1538 = (-t1584 * t1578 * qJD(1) + t1602 * t1694) * t1589;
t1537 = -t1585 * t1846 - t1597 * t1819;
t1529 = t1557 * t1602 - t1874;
t1528 = -t1556 * t1597 + t1875;
t1521 = t1539 * t1858 + t1582 * t1835;
t1520 = (-t1582 * t1857 + (-t1576 + (-qJD(1) * t1870 + t1851) * t1589) * t1593) * t1602;
t1512 = -t1540 * t1597 + t1543 * t1602;
t1508 = t1543 * t1589 + t1593 * t1707;
t1507 = -t1542 * t1589 + t1593 * t1706;
t1506 = -t1541 * t1589 + t1593 * t1708;
t1505 = -t1543 * t1593 + t1589 * t1707;
t1503 = -t1539 * t1589 + t1593 * t1709;
t1502 = t1539 * t1593 + t1589 * t1709;
t1501 = -t1559 * t1589 + t1593 * t1711;
t1500 = t1560 * t1589 + t1593 * t1710;
t1499 = -t1560 * t1593 + t1589 * t1710;
t1471 = -t1598 * t1508 + t1530 * t1603;
t1470 = t1508 * t1603 + t1598 * t1530;
t1469 = -t1598 * t1503 + t1524 * t1603;
t1468 = t1503 * t1603 + t1598 * t1524;
t1467 = t1546 * t1589 + t1593 * t1713;
t1466 = -t1546 * t1593 + t1589 * t1713;
t1464 = t1588 * t1692 + t1592 * t1644;
t1463 = -t1598 * t1500 + t1511 * t1603;
t1462 = t1500 * t1603 + t1598 * t1511;
t1446 = -t1880 + (-t1505 * t1589 - t1508 * t1593) * pkin(10);
t1444 = -t1534 * t1881 + t1588 * t1932;
t1442 = t1519 * t1865 + (-t1552 * t1868 + t1881) * t1534;
t1440 = -t1879 + (-t1502 * t1589 - t1503 * t1593) * pkin(10);
t1439 = -pkin(1) * t1505 + t1522 * t1589 + t1593 * t1822;
t1436 = -pkin(1) * t1502 + t1523 * t1589 + t1593 * t1823;
t1432 = -pkin(1) * t1466 + t1490 * t1921;
t1431 = -t1598 * t1467 + t1490 * t1603;
t1430 = t1467 * t1603 + t1598 * t1490;
t1421 = -pkin(1) * t1499 + t1593 * t1662;
t1419 = -t1465 * t1597 + t1472 * t1602;
t1417 = (-t1466 * t1589 - t1467 * t1593) * pkin(10);
t1412 = t1588 * t1716 + t1592 * t1632;
t1411 = t1480 * t1592 + t1588 * t1715;
t1405 = (-t1499 * t1589 - t1500 * t1593) * pkin(10) - t1713;
t1397 = t1509 * t1592 + t1588 * t1719;
t1393 = -t1445 * t1597 + t1474 * t1602;
t1392 = -t1443 * t1597 + t1473 * t1602;
t1374 = -t1464 * t1589 + t1593 * t1720;
t1371 = -t1414 * t1597 + t1461 * t1602;
t1370 = -t1413 * t1597 + t1460 * t1602;
t1362 = -t1444 * t1589 + t1593 * t1721;
t1361 = -t1442 * t1589 + t1593 * t1722;
t1354 = -t1398 * t1597 + t1434 * t1602;
t1334 = -t1412 * t1589 + t1593 * t1723;
t1333 = -t1411 * t1589 + t1593 * t1724;
t1330 = -t1402 * t1589 + t1593 * t1725;
t1329 = t1402 * t1593 + t1589 * t1725;
t1317 = -t1394 * t1589 + t1593 * t1731;
t1316 = t1394 * t1593 + t1589 * t1731;
t1315 = -t1397 * t1589 + t1593 * t1730;
t1300 = -t1390 * t1589 + t1593 * t1732;
t1299 = t1390 * t1593 + t1589 * t1732;
t1272 = pkin(2) * t1403 - t1378 * t1592 + t1588 * t1809;
t1270 = pkin(2) * t1395 - t1377 * t1592 + t1588 * t1810;
t1268 = t1372 * t1592 + t1588 * t1736;
t1266 = -t1598 * t1330 + t1363 * t1603;
t1265 = t1330 * t1603 + t1598 * t1363;
t1264 = -t1598 * t1317 + t1360 * t1603;
t1263 = t1317 * t1603 + t1598 * t1360;
t1257 = pkin(2) * t1391 + t1588 * t1648;
t1254 = -t1598 * t1300 + t1347 * t1603;
t1253 = t1300 * t1603 + t1598 * t1347;
t1227 = t1339 * t1592 + t1588 * t1738;
t1226 = t1337 * t1592 + t1588 * t1739;
t1211 = pkin(2) * t1279 + t1311 * t1915;
t1208 = -t1269 * t1597 + t1331 * t1602;
t1195 = t1302 * t1592 + t1588 * t1742;
t1194 = t1301 * t1592 + t1588 * t1743;
t1179 = -t1229 * t1597 + t1284 * t1602;
t1178 = -t1228 * t1597 + t1283 * t1602;
t1174 = t1287 * t1592 + t1588 * t1748;
t1165 = -t1278 * t1589 + t1593 * t1749;
t1164 = t1278 * t1593 + t1589 * t1749;
t1158 = -t1268 * t1589 + t1593 * t1751;
t1147 = t1259 * t1592 + t1588 * t1752;
t1146 = -t1273 * t1597 + t1310 * t1602 + (-t1329 * t1589 - t1330 * t1593) * pkin(10);
t1141 = -t1197 * t1597 + t1262 * t1602;
t1140 = -t1196 * t1597 + t1261 * t1602;
t1137 = -t1271 * t1597 + t1305 * t1602 + (-t1316 * t1589 - t1317 * t1593) * pkin(10);
t1122 = -pkin(1) * t1329 - t1272 * t1589 + t1593 * t1663;
t1121 = -t1227 * t1589 + t1593 * t1756;
t1120 = -t1226 * t1589 + t1593 * t1757;
t1113 = -pkin(1) * t1316 - t1270 * t1589 + t1593 * t1664;
t1109 = t1241 * t1602 - t1258 * t1597 + (-t1299 * t1589 - t1300 * t1593) * pkin(10);
t1106 = -t1175 * t1597 + t1219 * t1602;
t1104 = -t1598 * t1165 + t1209 * t1603;
t1103 = t1165 * t1603 + t1598 * t1209;
t1100 = t1215 * t1592 + t1588 * t1758;
t1099 = t1214 * t1592 + t1588 * t1759;
t1084 = -t1148 * t1597 + t1199 * t1602;
t1083 = -pkin(1) * t1299 - t1257 * t1589 + t1593 * t1665;
t1081 = -t1195 * t1589 + t1593 * t1763;
t1080 = -t1194 * t1589 + t1593 * t1764;
t1075 = -t1188 * t1589 + t1593 * t1765;
t1074 = t1188 * t1593 + t1589 * t1765;
t1072 = -t1182 * t1589 + t1593 * t1768;
t1071 = t1182 * t1593 + t1589 * t1768;
t1068 = t1185 * t1592 + t1588 * t1766;
t1067 = t1184 * t1592 + t1588 * t1767;
t1055 = -t1174 * t1589 + t1593 * t1771;
t1054 = -t1102 * t1597 + t1163 * t1602;
t1053 = -t1101 * t1597 + t1162 * t1602;
t1050 = -t1160 * t1589 + t1593 * t1774;
t1049 = t1160 * t1593 + t1589 * t1774;
t1045 = t1149 * t1592 + t1588 * t1777;
t1037 = -t1147 * t1589 + t1593 * t1778;
t1031 = t1135 * t1592 + t1588 * t1781;
t1028 = -t1598 * t1075 + t1131 * t1603;
t1027 = t1075 * t1603 + t1598 * t1131;
t1026 = t1198 * t1602 - t1210 * t1597 + (-t1164 * t1589 - t1165 * t1593) * pkin(10);
t1021 = -t1598 * t1072 + t1127 * t1603;
t1020 = t1072 * t1603 + t1598 * t1127;
t1019 = -t1070 * t1597 + t1125 * t1602;
t1018 = -t1069 * t1597 + t1124 * t1602;
t1015 = -pkin(1) * t1164 - t1211 * t1589 + t1593 * t1666;
t1002 = -t1100 * t1589 + t1593 * t1783;
t1001 = -t1099 * t1589 + t1593 * t1784;
t1000 = -t1598 * t1050 + t1097 * t1603;
t999 = t1050 * t1603 + t1598 * t1097;
t994 = -t1046 * t1597 + t1091 * t1602;
t990 = t1086 * t1592 + t1588 * t1786;
t989 = t1085 * t1592 + t1588 * t1787;
t987 = -t1032 * t1597 + t1077 * t1602;
t985 = pkin(2) * t1189 + t1111 * t1592 + t1588 * t1649;
t982 = pkin(2) * t1183 + t1107 * t1592 + t1588 * t1650;
t978 = -t1068 * t1589 + t1593 * t1788;
t977 = -t1067 * t1589 + t1593 * t1789;
t971 = -t1062 * t1589 + t1593 * t1790;
t970 = t1062 * t1593 + t1589 * t1790;
t966 = t1057 * t1592 + t1588 * t1792;
t965 = t1056 * t1592 + t1588 * t1793;
t964 = -t1060 * t1589 + t1593 * t1791;
t963 = t1060 * t1593 + t1589 * t1791;
t951 = pkin(2) * t1161 + t1078 * t1592 + t1588 * t1651;
t949 = -t1045 * t1589 + t1593 * t1796;
t945 = t1039 * t1602 - t1597 * t992;
t944 = t1038 * t1602 - t1597 * t991;
t943 = -t1033 * t1589 + t1593 * t1798;
t942 = t1033 * t1593 + t1589 * t1798;
t941 = -t1031 * t1589 + t1593 * t1799;
t938 = t1029 * t1592 + t1588 * t1800;
t932 = t1010 * t1603 - t1598 * t971;
t931 = t1598 * t1010 + t1603 * t971;
t928 = t1008 * t1602 - t1597 * t968;
t927 = t1007 * t1602 - t1597 * t967;
t926 = t1006 * t1603 - t1598 * t964;
t925 = t1598 * t1006 + t1603 * t964;
t922 = -t1589 * t996 + t1593 * t1802;
t921 = t1589 * t1802 + t1593 * t996;
t920 = -t1589 * t990 + t1593 * t1803;
t919 = -t1589 * t989 + t1593 * t1804;
t918 = -t1598 * t943 + t1603 * t988;
t917 = t1598 * t988 + t1603 * t943;
t916 = t1005 * t1602 - t1597 * t986 + (-t1074 * t1589 - t1075 * t1593) * pkin(10);
t914 = t1003 * t1602 - t1597 * t983 + (-t1071 * t1589 - t1072 * t1593) * pkin(10);
t913 = -t1597 * t939 + t1602 * t984;
t904 = pkin(2) * t997 + t1042 * t1592 + t1588 * t1652;
t903 = -t1589 * t966 + t1593 * t1806;
t902 = -t1589 * t965 + t1593 * t1807;
t899 = -t1589 * t959 + t1593 * t1808;
t898 = t1589 * t1808 + t1593 * t959;
t897 = -pkin(1) * t1074 - t1589 * t985 + t1593 * t1673;
t896 = -t1589 * t954 + t1593 * t1812;
t895 = t1589 * t1812 + t1593 * t954;
t894 = -pkin(1) * t1071 - t1589 * t982 + t1593 * t1674;
t893 = -t1597 * t952 + t1602 * t974 + (-t1049 * t1589 - t1050 * t1593) * pkin(10);
t891 = -t1598 * t922 + t1603 * t950;
t890 = t1598 * t950 + t1603 * t922;
t886 = pkin(2) * t1063 + t1588 * t1655 + t1592 * t980;
t883 = pkin(2) * t1061 + t1588 * t1656 + t1592 * t975;
t877 = -t1589 * t938 + t1593 * t1813;
t874 = -t1589 * t936 + t1593 * t1814;
t873 = t1589 * t1814 + t1593 * t936;
t871 = -pkin(1) * t1049 - t1589 * t951 + t1593 * t1678;
t868 = -t1598 * t899 + t1603 * t924;
t867 = t1598 * t924 + t1603 * t899;
t865 = pkin(2) * t1034 + t1588 * t1657 + t1592 * t933;
t864 = -t1598 * t896 + t1603 * t923;
t863 = t1598 * t923 + t1603 * t896;
t859 = -t1598 * t874 + t1603 * t912;
t858 = t1598 * t912 + t1603 * t874;
t857 = -t1589 * t900 + t1593 * t1815;
t856 = t1589 * t1815 + t1593 * t900;
t855 = -t1597 * t887 + t1602 * t911 + (-t1589 * t970 - t1593 * t971) * pkin(10);
t854 = -t1597 * t884 + t1602 * t909 + (-t1589 * t963 - t1593 * t964) * pkin(10);
t851 = -t1597 * t905 + t1602 * t910 + (-t1589 * t921 - t1593 * t922) * pkin(10);
t848 = -pkin(1) * t970 - t1589 * t886 + t1593 * t1679;
t847 = -pkin(1) * t963 - t1589 * t883 + t1593 * t1680;
t846 = -t1597 * t866 + t1602 * t880 + (-t1589 * t942 - t1593 * t943) * pkin(10);
t845 = -pkin(1) * t921 - t1589 * t904 + t1593 * t1683;
t844 = -t1598 * t857 + t1603 * t869;
t843 = t1598 * t869 + t1603 * t857;
t841 = pkin(2) * t960 + t1588 * t1658 + t1592 * t878;
t838 = pkin(2) * t955 + t1588 * t1668 + t1592 * t875;
t834 = pkin(2) * t901 + t1588 * t1667 + t1592 * t888;
t832 = -pkin(1) * t942 - t1589 * t865 + t1593 * t1684;
t828 = pkin(2) * t937 + t1588 * t1669 + t1592 * t861;
t827 = -t1589 * t849 + t1593 * t1816;
t826 = t1589 * t1816 + t1593 * t849;
t825 = -t1597 * t842 + t1602 * t853 + (-t1589 * t898 - t1593 * t899) * pkin(10);
t824 = -t1597 * t839 + t1602 * t852 + (-t1589 * t895 - t1593 * t896) * pkin(10);
t823 = -pkin(1) * t898 - t1589 * t841 + t1593 * t1685;
t822 = -pkin(1) * t895 - t1589 * t838 + t1593 * t1686;
t821 = -t1597 * t829 + t1602 * t837 + (-t1589 * t873 - t1593 * t874) * pkin(10);
t820 = -t1598 * t827 + t1603 * t833;
t819 = t1598 * t833 + t1603 * t827;
t818 = -t1597 * t835 + t1602 * t840 + (-t1589 * t856 - t1593 * t857) * pkin(10);
t816 = -pkin(1) * t856 - t1589 * t834 + t1593 * t1687;
t815 = -pkin(1) * t873 - t1589 * t828 + t1593 * t1688;
t813 = pkin(2) * t850 + t1588 * t1670 + t1592 * t830;
t812 = -t1597 * t814 + t1602 * t817 + (-t1589 * t826 - t1593 * t827) * pkin(10);
t811 = -pkin(1) * t826 - t1589 * t813 + t1593 * t1689;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1571, -t1572, 0, t1548, 0, 0, 0, 0, 0, 0, t1471, t1469, t1463, t1431, 0, 0, 0, 0, 0, 0, t1264, t1266, t1254, t1104, 0, 0, 0, 0, 0, 0, t1021, t1028, t1000, t891, 0, 0, 0, 0, 0, 0, t926, t932, t918, t844, 0, 0, 0, 0, 0, 0, t864, t868, t859, t820; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1572, -t1571, 0, t1547, 0, 0, 0, 0, 0, 0, t1470, t1468, t1462, t1430, 0, 0, 0, 0, 0, 0, t1263, t1265, t1253, t1103, 0, 0, 0, 0, 0, 0, t1020, t1027, t999, t890, 0, 0, 0, 0, 0, 0, t925, t931, t917, t843, 0, 0, 0, 0, 0, 0, t863, t867, t858, t819; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1505, t1502, t1499, t1466, 0, 0, 0, 0, 0, 0, t1316, t1329, t1299, t1164, 0, 0, 0, 0, 0, 0, t1071, t1074, t1049, t921, 0, 0, 0, 0, 0, 0, t963, t970, t942, t856, 0, 0, 0, 0, 0, 0, t895, t898, t873, t826; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1572, 0, -t1571, 0, t1824, -t1555, -t1547, -pkin(9) * t1547, -t1598 * t1521 + t1538 * t1603, -t1598 * t1501 + t1512 * t1603, -t1598 * t1506 + t1528 * t1603, -t1598 * t1520 + t1537 * t1603, -t1598 * t1507 + t1529 * t1603, t1603 * t1544 + t1598 * t1705, -pkin(9) * t1470 - t1598 * t1439 + t1446 * t1603, -pkin(9) * t1468 - t1598 * t1436 + t1440 * t1603, -pkin(9) * t1462 + t1405 * t1603 - t1598 * t1421, -pkin(9) * t1430 + t1417 * t1603 - t1598 * t1432, -t1598 * t1362 + t1393 * t1603, -t1598 * t1315 + t1354 * t1603, -t1598 * t1333 + t1370 * t1603, -t1598 * t1361 + t1392 * t1603, -t1598 * t1334 + t1371 * t1603, -t1598 * t1374 + t1419 * t1603, -pkin(9) * t1263 - t1598 * t1113 + t1137 * t1603, -pkin(9) * t1265 - t1598 * t1122 + t1146 * t1603, -pkin(9) * t1253 - t1598 * t1083 + t1109 * t1603, -pkin(9) * t1103 - t1598 * t1015 + t1026 * t1603, -t1598 * t1121 + t1179 * t1603, -t1598 * t1055 + t1106 * t1603, -t1598 * t1080 + t1140 * t1603, -t1598 * t1120 + t1178 * t1603, -t1598 * t1081 + t1141 * t1603, -t1598 * t1158 + t1208 * t1603, -pkin(9) * t1020 - t1598 * t894 + t1603 * t914, -pkin(9) * t1027 - t1598 * t897 + t1603 * t916, -pkin(9) * t999 - t1598 * t871 + t1603 * t893, -pkin(9) * t890 - t1598 * t845 + t1603 * t851, -t1598 * t1002 + t1054 * t1603, -t1598 * t949 + t1603 * t994, t1018 * t1603 - t1598 * t977, -t1598 * t1001 + t1053 * t1603, t1019 * t1603 - t1598 * t978, -t1598 * t1037 + t1084 * t1603, -pkin(9) * t925 - t1598 * t847 + t1603 * t854, -pkin(9) * t931 - t1598 * t848 + t1603 * t855, -pkin(9) * t917 - t1598 * t832 + t1603 * t846, -pkin(9) * t843 - t1598 * t816 + t1603 * t818, -t1598 * t920 + t1603 * t945, -t1598 * t877 + t1603 * t913, -t1598 * t902 + t1603 * t927, -t1598 * t919 + t1603 * t944, -t1598 * t903 + t1603 * t928, -t1598 * t941 + t1603 * t987, -pkin(9) * t863 - t1598 * t822 + t1603 * t824, -pkin(9) * t867 - t1598 * t823 + t1603 * t825, -pkin(9) * t858 - t1598 * t815 + t1603 * t821, -pkin(9) * t819 - t1598 * t811 + t1603 * t812; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1571, 0, t1572, 0, t1555, t1824, t1548, pkin(9) * t1548, t1521 * t1603 + t1598 * t1538, t1501 * t1603 + t1598 * t1512, t1506 * t1603 + t1598 * t1528, t1520 * t1603 + t1598 * t1537, t1507 * t1603 + t1598 * t1529, t1598 * t1544 - t1603 * t1705, pkin(9) * t1471 + t1439 * t1603 + t1598 * t1446, pkin(9) * t1469 + t1436 * t1603 + t1598 * t1440, pkin(9) * t1463 + t1598 * t1405 + t1421 * t1603, pkin(9) * t1431 + t1598 * t1417 + t1432 * t1603, t1362 * t1603 + t1598 * t1393, t1315 * t1603 + t1598 * t1354, t1333 * t1603 + t1598 * t1370, t1361 * t1603 + t1598 * t1392, t1334 * t1603 + t1598 * t1371, t1374 * t1603 + t1598 * t1419, pkin(9) * t1264 + t1113 * t1603 + t1598 * t1137, pkin(9) * t1266 + t1122 * t1603 + t1598 * t1146, pkin(9) * t1254 + t1083 * t1603 + t1598 * t1109, pkin(9) * t1104 + t1015 * t1603 + t1598 * t1026, t1121 * t1603 + t1598 * t1179, t1055 * t1603 + t1598 * t1106, t1080 * t1603 + t1598 * t1140, t1120 * t1603 + t1598 * t1178, t1081 * t1603 + t1598 * t1141, t1158 * t1603 + t1598 * t1208, pkin(9) * t1021 + t1598 * t914 + t1603 * t894, pkin(9) * t1028 + t1598 * t916 + t1603 * t897, pkin(9) * t1000 + t1598 * t893 + t1603 * t871, pkin(9) * t891 + t1598 * t851 + t1603 * t845, t1002 * t1603 + t1598 * t1054, t1598 * t994 + t1603 * t949, t1598 * t1018 + t1603 * t977, t1001 * t1603 + t1598 * t1053, t1598 * t1019 + t1603 * t978, t1037 * t1603 + t1598 * t1084, pkin(9) * t926 + t1598 * t854 + t1603 * t847, pkin(9) * t932 + t1598 * t855 + t1603 * t848, pkin(9) * t918 + t1598 * t846 + t1603 * t832, pkin(9) * t844 + t1598 * t818 + t1603 * t816, t1598 * t945 + t1603 * t920, t1598 * t913 + t1603 * t877, t1598 * t927 + t1603 * t902, t1598 * t944 + t1603 * t919, t1598 * t928 + t1603 * t903, t1598 * t987 + t1603 * t941, pkin(9) * t864 + t1598 * t824 + t1603 * t822, pkin(9) * t868 + t1598 * t825 + t1603 * t823, pkin(9) * t859 + t1598 * t821 + t1603 * t815, pkin(9) * t820 + t1598 * t812 + t1603 * t811; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1574, t1575, 0, 0, (t1852 + (qJD(2) - t1831) * t1911) * t1944, t1559 * t1593 + t1589 * t1711, t1541 * t1593 + t1589 * t1708, (qJD(1) * t1831 * t1944 + t1589 * t1819) * t1602, t1542 * t1593 + t1589 * t1706, t1593 * t1829, pkin(1) * t1508 - t1522 * t1593 + t1589 * t1822, pkin(1) * t1503 - t1523 * t1593 + t1589 * t1823, pkin(1) * t1500 + t1589 * t1662, pkin(1) * t1467 + t1490 * t1922, t1444 * t1593 + t1589 * t1721, t1397 * t1593 + t1589 * t1730, t1411 * t1593 + t1589 * t1724, t1442 * t1593 + t1589 * t1722, t1412 * t1593 + t1589 * t1723, t1464 * t1593 + t1589 * t1720, pkin(1) * t1317 + t1270 * t1593 + t1589 * t1664, pkin(1) * t1330 + t1272 * t1593 + t1589 * t1663, pkin(1) * t1300 + t1257 * t1593 + t1589 * t1665, pkin(1) * t1165 + t1211 * t1593 + t1589 * t1666, t1227 * t1593 + t1589 * t1756, t1174 * t1593 + t1589 * t1771, t1194 * t1593 + t1589 * t1764, t1226 * t1593 + t1589 * t1757, t1195 * t1593 + t1589 * t1763, t1268 * t1593 + t1589 * t1751, pkin(1) * t1072 + t1589 * t1674 + t1593 * t982, pkin(1) * t1075 + t1589 * t1673 + t1593 * t985, pkin(1) * t1050 + t1589 * t1678 + t1593 * t951, pkin(1) * t922 + t1589 * t1683 + t1593 * t904, t1100 * t1593 + t1589 * t1783, t1045 * t1593 + t1589 * t1796, t1067 * t1593 + t1589 * t1789, t1099 * t1593 + t1589 * t1784, t1068 * t1593 + t1589 * t1788, t1147 * t1593 + t1589 * t1778, pkin(1) * t964 + t1589 * t1680 + t1593 * t883, pkin(1) * t971 + t1589 * t1679 + t1593 * t886, pkin(1) * t943 + t1589 * t1684 + t1593 * t865, pkin(1) * t857 + t1589 * t1687 + t1593 * t834, t1589 * t1803 + t1593 * t990, t1589 * t1813 + t1593 * t938, t1589 * t1807 + t1593 * t965, t1589 * t1804 + t1593 * t989, t1589 * t1806 + t1593 * t966, t1031 * t1593 + t1589 * t1799, pkin(1) * t896 + t1589 * t1686 + t1593 * t838, pkin(1) * t899 + t1589 * t1685 + t1593 * t841, pkin(1) * t874 + t1589 * t1688 + t1593 * t828, pkin(1) * t827 + t1589 * t1689 + t1593 * t813;];
tauB_reg  = t1;
