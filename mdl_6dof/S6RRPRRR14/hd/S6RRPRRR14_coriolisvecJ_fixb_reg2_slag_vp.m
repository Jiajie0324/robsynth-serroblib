% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRR14
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox (ehem. IRT-Maple-Toolbox)
% Datum: 2018-12-10 18:39
% Revision: bb42a8b95257d9bc83910d26e849f5825122f662 (2018-12-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRR14_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR14_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR14_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6RRPRRR14_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2018-12-10 18:32:36
% EndTime: 2018-12-10 18:34:04
% DurationCPUTime: 32.60s
% Computational Cost: add. (89611->917), mult. (282356->1321), div. (0->0), fcn. (243954->16), ass. (0->394)
t414 = sin(pkin(6));
t415 = cos(pkin(7));
t421 = cos(qJ(2));
t593 = cos(pkin(14));
t516 = t593 * t421;
t419 = sin(qJ(2));
t591 = sin(pkin(14));
t523 = t419 * t591;
t436 = t414 * (-t415 * t523 + t516);
t350 = qJD(1) * t436;
t418 = sin(qJ(4));
t511 = t591 * t421;
t517 = t593 * t419;
t437 = t414 * (t415 * t517 + t511);
t348 = qJD(1) * t437;
t413 = sin(pkin(7));
t592 = sin(pkin(8));
t529 = t413 * t592;
t580 = t414 * t419;
t477 = t529 * t580;
t594 = cos(pkin(8));
t433 = qJD(1) * t477 - t348 * t594;
t615 = cos(qJ(4));
t500 = t592 * t615;
t474 = qJD(4) * t500;
t490 = t594 * t593;
t469 = t413 * t490;
t528 = t413 * t591;
t618 = t418 * t528 - t615 * t469;
t569 = t618 * qJD(4) + t350 * t615 - t415 * t474 + t418 * t433;
t514 = t592 * t415;
t321 = t418 * t514 + (t418 * t490 + t591 * t615) * t413;
t453 = t615 * t477;
t442 = qJD(1) * t453;
t501 = t594 * t615;
t568 = t321 * qJD(4) - t348 * t501 - t350 * t418 + t442;
t595 = cos(pkin(6));
t546 = pkin(1) * t595;
t405 = t421 * t546;
t398 = qJD(1) * t405;
t533 = -qJ(3) * t415 - pkin(10);
t491 = t419 * t533;
t470 = t414 * t491;
t331 = qJD(1) * t470 + t398;
t404 = t419 * t546;
t579 = t414 * t421;
t434 = t533 * t579 - t404;
t332 = t434 * qJD(1);
t590 = qJ(3) * t413;
t466 = pkin(2) * t419 - t421 * t590;
t562 = qJD(1) * t414;
t359 = t466 * t562;
t526 = t415 * t591;
t228 = t593 * t331 + t332 * t526 + t359 * t528;
t185 = pkin(11) * t433 + t228;
t527 = t415 * t593;
t530 = t413 * t593;
t227 = -t331 * t591 + t332 * t527 + t359 * t530;
t541 = t419 * t562;
t504 = t413 * t541;
t487 = pkin(3) * t504;
t545 = pkin(11) * t594;
t187 = -t350 * t545 + t227 + t487;
t253 = -t413 * t332 + t415 * t359;
t544 = pkin(11) * t592;
t219 = t348 * pkin(3) - t350 * t544 + t253;
t378 = pkin(2) * t526 + qJ(3) * t530;
t310 = (t469 + t514) * pkin(11) + t378;
t402 = pkin(2) * t527;
t489 = t594 * t591;
t513 = t591 * qJ(3);
t326 = t415 * pkin(3) + t402 + (-pkin(11) * t489 - t513) * t413;
t488 = t592 * t591;
t354 = (-pkin(3) * t593 - pkin(11) * t488 - pkin(2)) * t413;
t220 = -t418 * t310 + t326 * t501 + t354 * t500;
t524 = t418 * t592;
t525 = t418 * t594;
t560 = qJD(3) * t413;
t600 = -t615 * t185 - t187 * t525 - t219 * t524 + (-t418 * t489 + t593 * t615) * t560 + t220 * qJD(4);
t443 = t187 * t592 - t594 * t219 + t488 * t560;
t478 = t413 * t594 * t580;
t459 = qJD(1) * t478;
t279 = -t348 * t592 - t459;
t636 = pkin(12) * t279 + t600;
t635 = t568 * pkin(4) + pkin(12) * t569 + t443;
t221 = t615 * t310 + (t594 * t326 + t592 * t354) * t418;
t598 = -t418 * t185 + t187 * t501 + t219 * t500 + (t418 * t593 + t489 * t615) * t560 + t221 * qJD(4);
t509 = t595 * qJD(1);
t480 = t509 + qJD(2);
t457 = t480 * t413;
t540 = t421 * t562;
t357 = t415 * t540 + t457;
t408 = t413 ^ 2;
t410 = t415 ^ 2;
t258 = -t591 * t357 + (-t408 - t410) * t541 * t593;
t512 = t591 * t408;
t259 = t593 * t357 + (-t410 * t591 - t512) * t541;
t215 = t258 * t525 + t259 * t615;
t633 = -t215 + t474;
t372 = -t415 * t594 + t529 * t593;
t417 = sin(qJ(5));
t420 = cos(qJ(5));
t555 = qJD(5) * t420;
t556 = qJD(5) * t417;
t571 = -t279 * t417 + t321 * t556 + t372 * t555 + t420 * t569;
t257 = t321 * t420 - t372 * t417;
t570 = qJD(5) * t257 - t420 * t279 - t417 * t569;
t446 = t480 * t593;
t581 = t414 * t415;
t476 = t516 * t581;
t499 = t591 * t562;
t447 = qJD(1) * t476 - t419 * t499;
t426 = -t413 * t446 - t447;
t393 = t413 * t540;
t444 = -t415 * t480 + t393;
t634 = t594 * t426 + t592 * t444;
t435 = (t415 * t511 + t517) * t414;
t291 = qJD(1) * t435 + t457 * t591;
t628 = t634 * t615;
t216 = t291 * t418 + t628;
t471 = qJD(5) + t216;
t247 = -t326 * t592 + t594 * t354;
t320 = -t415 * t500 + t618;
t201 = t320 * pkin(4) - t321 * pkin(12) + t247;
t208 = -pkin(12) * t372 + t221;
t608 = t201 * t555 - t208 * t556 + t635 * t417 + t636 * t420;
t599 = -t279 * pkin(4) + t598;
t632 = -pkin(13) * t568 - t608;
t631 = -pkin(5) * t570 - pkin(13) * t571 - t599;
t472 = qJD(2) * t499;
t553 = qJD(1) * qJD(2);
t534 = t414 * t553;
t473 = t593 * t534;
t578 = t415 * t419;
t565 = t421 * t472 + t473 * t578;
t440 = -qJD(2) * t459 - t592 * t565;
t395 = qJD(2) * t398;
t577 = t415 * t421;
t431 = (qJD(2) * t491 + qJD(3) * t577) * t414;
t254 = qJD(1) * t431 + qJD(3) * t457 + t395;
t559 = qJD(3) * t419;
t285 = qJD(2) * t434 - t559 * t581;
t274 = t285 * qJD(1);
t317 = (qJD(2) * t466 - t413 * t559) * t414;
t305 = qJD(1) * t317;
t178 = t593 * t254 + t274 * t526 + t305 * t528;
t458 = qJD(2) * t477;
t484 = t565 * t594;
t626 = qJD(1) * t458 - t484;
t135 = pkin(11) * t626 + t178;
t177 = -t254 * t591 + t274 * t527 + t305 * t530;
t342 = t421 * t473 - t472 * t578;
t138 = qJD(2) * t487 - t342 * t545 + t177;
t564 = pkin(10) * t579 + t404;
t367 = t564 * qJD(1);
t284 = qJ(3) * t357 + t367;
t438 = pkin(2) * t595 + t470;
t292 = qJD(2) * pkin(2) + qJD(1) * t438 + t398;
t355 = (-pkin(2) * t421 - t419 * t590 - pkin(1)) * t414;
t345 = qJD(1) * t355;
t206 = t593 * t284 + t292 * t526 + t345 * t528;
t144 = -pkin(11) * t634 + t206;
t205 = -t284 * t591 + t292 * t527 + t345 * t530;
t148 = -pkin(3) * t444 - t291 * t545 + t205;
t243 = -t413 * t292 + t415 * t345 + qJD(3);
t173 = pkin(3) * t426 - t291 * t544 + t243;
t235 = -t413 * t274 + t415 * t305;
t180 = pkin(3) * t565 - t342 * t544 + t235;
t496 = qJD(4) * t524;
t498 = qJD(4) * t525;
t538 = qJD(4) * t615;
t463 = t418 * t135 - t138 * t501 + t144 * t538 + t148 * t498 + t173 * t496 - t180 * t500;
t34 = pkin(4) * t440 + t463;
t454 = t471 * qJD(5);
t630 = pkin(12) * t454 + t34;
t73 = t615 * t144 + (t148 * t594 + t173 * t592) * t418;
t629 = t73 - t471 * (pkin(5) * t417 - pkin(13) * t420);
t379 = t417 * t524 - t420 * t594;
t531 = t258 * t592;
t567 = -qJD(5) * t379 + t417 * t531 + t420 * t633;
t429 = t592 * t426 - t444 * t594;
t428 = -qJD(4) - t429;
t68 = -pkin(12) * t428 + t73;
t103 = -t148 * t592 + t594 * t173;
t218 = t615 * t291 - t418 * t634;
t70 = t216 * pkin(4) - t218 * pkin(12) + t103;
t30 = -t417 * t68 + t420 * t70;
t475 = qJD(4) * t501;
t558 = qJD(4) * t418;
t441 = -t615 * t135 - t138 * t525 + t144 * t558 - t148 * t475 - t173 * t474 - t180 * t524;
t33 = -pkin(12) * t440 - t441;
t102 = -t138 * t592 + t594 * t180;
t136 = qJD(4) * t628 + t291 * t558 - t615 * t342 - t418 * t626;
t493 = -qJD(2) * t442 + t418 * t342 + t615 * t484;
t137 = qJD(4) * t218 + t493;
t63 = t137 * pkin(4) + t136 * pkin(12) + t102;
t461 = -t420 * t33 - t417 * t63 - t70 * t555 + t556 * t68;
t627 = -t30 * t471 - t461;
t214 = -t258 * t501 + t259 * t418;
t462 = t496 - t214;
t409 = t414 ^ 2;
t535 = t409 * t553;
t625 = -0.2e1 * t535;
t31 = t417 * t70 + t420 * t68;
t29 = pkin(13) * t471 + t31;
t416 = sin(qJ(6));
t246 = t420 * t428;
t145 = t218 * t417 + t246;
t147 = t420 * t218 - t417 * t428;
t72 = -t418 * t144 + t148 * t501 + t173 * t500;
t67 = pkin(4) * t428 - t72;
t44 = t145 * pkin(5) - t147 * pkin(13) + t67;
t614 = cos(qJ(6));
t14 = t29 * t614 + t416 * t44;
t143 = qJD(6) + t145;
t92 = qJD(5) * t246 + t420 * t136 + t218 * t556 + t417 * t440;
t508 = -t417 * t136 + t420 * t440;
t557 = qJD(5) * t147;
t93 = t508 + t557;
t16 = t93 * pkin(5) + t92 * pkin(13) + t34;
t5 = pkin(13) * t137 - t461;
t2 = -qJD(6) * t14 + t614 * t16 - t416 * t5;
t623 = -t14 * t143 - t2;
t619 = t417 * t201 + t420 * t208;
t607 = -qJD(5) * t619 - t636 * t417 + t635 * t420;
t621 = t145 * t471;
t620 = t147 * t471;
t522 = t420 * t592;
t380 = t417 * t594 + t418 * t522;
t566 = qJD(5) * t380 - t258 * t522 + t417 * t633;
t349 = qJD(2) * t437;
t617 = -t594 * t349 + t458;
t616 = qJD(3) * t444;
t532 = t417 * t33 - t420 * t63;
t8 = -qJD(5) * t31 - t532;
t280 = -qJD(2) * t478 - t349 * t592;
t399 = qJD(2) * t405;
t521 = t595 * t413;
t265 = qJD(3) * t521 + t399 + t431;
t191 = t593 * t265 + t285 * t526 + t317 * t528;
t152 = t617 * pkin(11) + t191;
t190 = -t265 * t591 + t285 * t527 + t317 * t530;
t351 = qJD(2) * t436;
t561 = qJD(2) * t414;
t539 = t419 * t561;
t503 = t413 * t539;
t158 = pkin(3) * t503 - t351 * t545 + t190;
t315 = (t414 * t577 + t521) * qJ(3) + t564;
t329 = t405 + t438;
t223 = t593 * t315 + t329 * t526 + t355 * t528;
t318 = t414 * t523 - t521 * t593 - t476;
t520 = t595 * t415;
t373 = t413 * t579 - t520;
t449 = -t318 * t594 - t373 * t592;
t170 = pkin(11) * t449 + t223;
t222 = -t315 * t591 + t329 * t527 + t355 * t530;
t319 = t521 * t591 + t435;
t174 = -t373 * pkin(3) - t319 * t545 + t222;
t238 = -t413 * t285 + t415 * t317;
t194 = t349 * pkin(3) - t351 * t544 + t238;
t250 = -t413 * t329 + t415 * t355;
t200 = t318 * pkin(3) - t319 * t544 + t250;
t47 = t615 * t152 + t158 * t525 - t170 * t558 + t174 * t475 + t194 * t524 + t200 * t474;
t40 = -pkin(12) * t280 + t47;
t255 = -t318 * t592 + t373 * t594;
t87 = t615 * t170 + t174 * t525 + t200 * t524;
t80 = -pkin(12) * t255 + t87;
t111 = -t174 * t592 + t594 * t200;
t231 = t318 * t501 + t319 * t418 + t373 * t500;
t232 = t319 * t615 + t418 * t449;
t83 = t231 * pkin(4) - t232 * pkin(12) + t111;
t609 = t417 * t83 + t420 * t80;
t105 = -t158 * t592 + t594 * t194;
t159 = t318 * t475 + t319 * t558 - t615 * t351 + t373 * t474 - t617 * t418;
t160 = -qJD(2) * t453 + qJD(4) * t232 + t349 * t501 + t418 * t351;
t66 = t160 * pkin(4) + t159 * pkin(12) + t105;
t12 = -qJD(5) * t609 - t40 * t417 + t420 * t66;
t108 = t147 * t614 + t416 * t471;
t46 = qJD(6) * t108 - t614 * t137 - t416 * t92;
t464 = t416 * t29 - t44 * t614;
t1 = -qJD(6) * t464 + t416 * t16 + t5 * t614;
t422 = qJD(1) ^ 2;
t6 = -pkin(5) * t137 - t8;
t613 = t6 * t416;
t113 = pkin(13) * t320 + t619;
t207 = t372 * pkin(4) - t220;
t256 = t321 * t417 + t420 * t372;
t122 = t256 * pkin(5) - t257 * pkin(13) + t207;
t75 = t113 * t614 + t416 * t122;
t612 = qJD(6) * t75 - t416 * t632 + t631 * t614;
t74 = -t416 * t113 + t122 * t614;
t611 = -qJD(6) * t74 + t631 * t416 + t614 * t632;
t610 = -pkin(5) * t568 - t607;
t171 = t232 * t417 + t420 * t255;
t605 = t171 * t93;
t604 = t256 * t93;
t603 = t420 * t93;
t445 = t614 * t471;
t554 = qJD(6) * t416;
t45 = -qJD(6) * t445 - t416 * t137 + t147 * t554 + t614 * t92;
t602 = t45 * t416;
t601 = t93 * t416;
t394 = -pkin(5) * t420 - pkin(13) * t417 - pkin(4);
t125 = pkin(4) * t218 + pkin(12) * t216;
t59 = t417 * t125 + t420 * t72;
t52 = pkin(13) * t218 + t59;
t536 = qJD(6) * t614;
t597 = -t416 * t52 + t394 * t554 - (t416 * t556 - t420 * t536) * pkin(12) + t629 * t614;
t537 = qJD(5) * t614;
t596 = t614 * t52 - t394 * t536 - (-t417 * t537 - t420 * t554) * pkin(12) + t629 * t416;
t106 = t147 * t416 - t445;
t589 = t106 * t416;
t588 = t108 * t106;
t587 = t137 * t231;
t586 = t137 * t320;
t585 = t143 * t108;
t584 = t145 * t147;
t583 = t216 * t218;
t582 = t409 * t422;
t576 = t416 * t420;
t439 = -t380 * t614 + t416 * t500;
t575 = -qJD(6) * t439 + t416 * t567 - t462 * t614;
t338 = -t416 * t380 - t500 * t614;
t574 = -qJD(6) * t338 - t416 * t462 - t567 * t614;
t573 = t257 * t554 - t320 * t536 - t416 * t568 + t571 * t614;
t234 = t257 * t614 + t416 * t320;
t572 = qJD(6) * t234 - t416 * t571 - t568 * t614;
t563 = t419 ^ 2 - t421 ^ 2;
t552 = t1 * t614;
t551 = t6 * t614;
t550 = t45 * t614;
t549 = t46 * t614;
t548 = t93 * t614;
t547 = t421 * t582;
t543 = t420 * t614;
t507 = t471 * t417;
t506 = pkin(10) * t534;
t505 = t419 * t547;
t497 = t414 * t422 * t595;
t495 = pkin(1) * t625;
t119 = -t216 * t576 - t218 * t614;
t492 = -t416 * t555 + t119;
t42 = -t417 * t80 + t420 * t83;
t58 = t125 * t420 - t417 * t72;
t117 = t201 * t420 - t208 * t417;
t172 = t232 * t420 - t255 * t417;
t481 = t419 * t421 * t535;
t479 = 0.2e1 * t509 + qJD(2);
t120 = -t216 * t543 + t416 * t218;
t467 = t420 * t537 - t120;
t38 = pkin(13) * t231 + t609;
t86 = -t418 * t170 + t174 * t501 + t200 * t500;
t79 = t255 * pkin(4) - t86;
t55 = t171 * pkin(5) - t172 * pkin(13) + t79;
t17 = -t416 * t38 + t55 * t614;
t465 = -t14 * t416 + t464 * t614;
t18 = t38 * t614 + t416 * t55;
t11 = t420 * t40 + t417 * t66 + t83 * t555 - t556 * t80;
t115 = t172 * t614 + t416 * t231;
t460 = -pkin(12) * t137 + t471 * t67;
t362 = -t419 * t506 + t395;
t455 = t143 * t554 - t548;
t452 = t145 * t614 + t536;
t369 = t564 * qJD(2);
t427 = t216 * t471 + t454;
t48 = -t418 * t152 + t158 * t501 - t170 * t538 - t174 * t498 + t194 * t500 - t200 * t496;
t41 = t280 * pkin(4) - t48;
t425 = t413 * t414 * t426;
t381 = -pkin(10) * t580 + t405;
t377 = -t413 * t513 + t402;
t368 = -pkin(10) * t539 + t399;
t366 = -pkin(10) * t541 + t398;
t363 = qJD(1) * t369;
t361 = pkin(12) * t543 + t416 * t394;
t360 = -pkin(12) * t576 + t394 * t614;
t233 = t257 * t416 - t320 * t614;
t114 = t172 * t416 - t231 * t614;
t112 = -pkin(5) * t320 - t117;
t101 = qJD(5) * t172 - t159 * t417 + t420 * t280;
t100 = t420 * t159 + t232 * t556 + t255 * t555 + t417 * t280;
t99 = pkin(5) * t147 + pkin(13) * t145;
t57 = qJD(6) * t115 - t416 * t100 - t160 * t614;
t56 = t100 * t614 - t416 * t160 + t172 * t554 - t231 * t536;
t51 = -pkin(5) * t218 - t58;
t37 = -pkin(5) * t231 - t42;
t28 = -pkin(5) * t471 - t30;
t25 = t30 * t614 + t416 * t99;
t24 = -t416 * t30 + t614 * t99;
t19 = t101 * pkin(5) + t100 * pkin(13) + t41;
t10 = -pkin(5) * t160 - t12;
t9 = pkin(13) * t160 + t11;
t4 = -qJD(6) * t18 + t19 * t614 - t416 * t9;
t3 = qJD(6) * t17 + t416 * t19 + t614 * t9;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t481, t563 * t625, t479 * t421 * t561, -0.2e1 * t481, -t479 * t539, 0, -t363 * t595 - t369 * t480 + t419 * t495, -t362 * t595 - t368 * t480 + t421 * t495 (t362 * t421 + t363 * t419 + (-t366 * t421 - t367 * t419) * qJD(2) + (t368 * t421 + t369 * t419 + (-t381 * t421 - t419 * t564) * qJD(2)) * qJD(1)) * t414, t362 * t564 - t363 * t381 - t366 * t369 + t367 * t368, t291 * t351 + t319 * t342, -t349 * t291 - t318 * t342 - t319 * t565 - t351 * t426, -t373 * t342 - t444 * t351 + (qJD(1) * t319 + t291) * t503, t318 * t565 + t349 * t426, t349 * t444 + t565 * t373 + (-t318 * t413 * t534 - qJD(2) * t425) * t419 (t415 * qJD(2) - t393 + (t520 - t373) * qJD(1)) * t503, -t238 * t447 + t250 * t565 + t235 * t318 + t243 * t349 - t190 * t444 - t177 * t373 + (-t238 * t446 + (qJD(1) * t222 + t205) * t539) * t413, t238 * t291 + t250 * t342 + t235 * t319 + t243 * t351 + t191 * t444 + t178 * t373 + (-qJD(1) * t223 - t206) * t503, -t177 * t319 - t178 * t318 - t190 * t291 - t191 * t426 - t205 * t351 - t206 * t349 - t222 * t342 - t223 * t565, t177 * t222 + t178 * t223 + t190 * t205 + t191 * t206 + t235 * t250 + t238 * t243, -t136 * t232 - t159 * t218, t136 * t231 - t137 * t232 + t159 * t216 - t160 * t218, t255 * t136 + t159 * t428 - t280 * t218 - t232 * t440, t160 * t216 + t587, t255 * t137 + t160 * t428 + t280 * t216 + t231 * t440, t255 * t440 + t280 * t428, t102 * t231 + t103 * t160 + t105 * t216 + t111 * t137 + t255 * t463 - t72 * t280 - t428 * t48 - t440 * t86, t102 * t232 - t103 * t159 + t105 * t218 - t111 * t136 - t255 * t441 + t73 * t280 + t428 * t47 + t440 * t87, t136 * t86 - t137 * t87 + t159 * t72 - t160 * t73 - t216 * t47 - t218 * t48 + t231 * t441 + t232 * t463, t102 * t111 + t103 * t105 - t441 * t87 - t463 * t86 + t47 * t73 + t48 * t72, -t100 * t147 - t172 * t92, t100 * t145 - t101 * t147 + t171 * t92 - t172 * t93, -t100 * t471 + t137 * t172 + t160 * t147 - t231 * t92, t101 * t145 + t605, -t101 * t471 - t171 * t137 - t145 * t160 - t93 * t231, t160 * t471 + t587, t67 * t101 + t12 * t471 + t42 * t137 + t41 * t145 + t30 * t160 + t34 * t171 + t8 * t231 + t79 * t93, -t67 * t100 - t11 * t471 - t137 * t609 + t41 * t147 - t31 * t160 + t34 * t172 + t231 * t461 - t79 * t92, t100 * t30 - t101 * t31 - t11 * t145 - t12 * t147 + t171 * t461 - t172 * t8 + t42 * t92 - t609 * t93, t11 * t31 + t12 * t30 + t34 * t79 + t41 * t67 + t42 * t8 - t461 * t609, -t108 * t56 - t115 * t45, t106 * t56 - t108 * t57 + t114 * t45 - t115 * t46, t101 * t108 + t115 * t93 - t143 * t56 - t171 * t45, t106 * t57 + t114 * t46, -t101 * t106 - t114 * t93 - t143 * t57 - t171 * t46, t101 * t143 + t605, t10 * t106 - t101 * t464 + t114 * t6 + t143 * t4 + t17 * t93 + t171 * t2 + t28 * t57 + t37 * t46, -t1 * t171 + t10 * t108 - t101 * t14 + t115 * t6 - t143 * t3 - t18 * t93 - t28 * t56 - t37 * t45, -t1 * t114 - t106 * t3 - t108 * t4 - t115 * t2 - t14 * t57 + t17 * t45 - t18 * t46 - t464 * t56, t1 * t18 + t10 * t28 + t14 * t3 + t17 * t2 + t37 * t6 - t4 * t464; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t505, t563 * t582, -t421 * t497, t505, t419 * t497, 0, -t421 * t506 + t367 * t480 + (-qJD(2) * t509 + t582) * t419 * pkin(1), pkin(1) * t547 + t366 * t480 - t362, 0, 0, -t291 * t350 + t342 * t528, t348 * t291 - t447 * t350 + (t342 * t593 - t350 * t446 - t565 * t591) * t413, t415 * t342 + t444 * t350 + (qJD(2) * t512 - t291 * t413) * t541, -t348 * t426 - t530 * t565, -t565 * t415 - t348 * t444 + (qJD(1) * t425 + t408 * t473) * t419 -(t415 * t509 - t393) * t504, t177 * t415 + t253 * t447 - t243 * t348 + t227 * t444 + (-pkin(2) * t565 - t235 * t593 + t591 * t616 + t253 * t446 + (qJD(2) * t377 - t205) * t541) * t413, -t178 * t415 - t253 * t291 - t243 * t350 - t228 * t444 + (-pkin(2) * t342 + t235 * t591 + t593 * t616 + (-qJD(2) * t378 + t206) * t541) * t413, -t377 * t342 - t378 * t565 + t227 * t291 + t205 * t350 - t228 * t447 + t206 * t348 + (-t177 * t591 + t178 * t593 - t228 * t446) * t413 + (t291 * t591 + (t457 * t593 + t447) * t593) * t560, t177 * t377 + t178 * t378 - t205 * t227 - t206 * t228 - t243 * t253 + (-pkin(2) * t235 + (-t205 * t591 + t206 * t593) * qJD(3)) * t413, -t136 * t321 - t218 * t569, t136 * t320 - t137 * t321 + t216 * t569 - t218 * t568, t372 * t136 + t279 * t218 - t321 * t440 + t569 * t428, t216 * t568 + t586, t372 * t137 - t279 * t216 + t320 * t440 + t568 * t428, -t279 * t428 + t372 * t440, t102 * t320 + t103 * t568 + t247 * t137 + t216 * t443 - t220 * t440 + t72 * t279 + t372 * t463 + t598 * t428, t102 * t321 - t103 * t569 - t247 * t136 + t218 * t443 + t221 * t440 - t73 * t279 - t372 * t441 + t600 * t428, t136 * t220 - t137 * t221 - t216 * t600 + t218 * t598 + t320 * t441 + t321 * t463 - t568 * t73 + t569 * t72, t102 * t247 + t103 * t443 - t220 * t463 - t221 * t441 - t598 * t72 + t600 * t73, -t147 * t571 - t257 * t92, t145 * t571 - t147 * t570 + t256 * t92 - t257 * t93, t137 * t257 + t147 * t568 - t320 * t92 - t571 * t471, t145 * t570 + t604, -t256 * t137 - t145 * t568 - t93 * t320 - t471 * t570, t471 * t568 + t586, t117 * t137 + t145 * t599 + t207 * t93 + t34 * t256 + t30 * t568 + t8 * t320 + t607 * t471 + t570 * t67, -t137 * t619 + t147 * t599 - t207 * t92 + t34 * t257 - t31 * t568 + t320 * t461 - t471 * t608 - t571 * t67, t117 * t92 - t145 * t608 - t147 * t607 + t256 * t461 - t257 * t8 + t30 * t571 - t31 * t570 - t619 * t93, t117 * t8 + t207 * t34 + t30 * t607 + t31 * t608 - t461 * t619 + t599 * t67, -t108 * t573 - t234 * t45, t106 * t573 - t108 * t572 + t233 * t45 - t234 * t46, t108 * t570 - t143 * t573 + t234 * t93 - t256 * t45, t106 * t572 + t233 * t46, -t106 * t570 - t143 * t572 - t233 * t93 - t256 * t46, t143 * t570 + t604, t106 * t610 + t112 * t46 - t143 * t612 + t2 * t256 + t233 * t6 + t28 * t572 - t464 * t570 + t74 * t93, -t1 * t256 + t108 * t610 - t112 * t45 - t14 * t570 + t143 * t611 + t234 * t6 - t28 * t573 - t75 * t93, -t1 * t233 + t106 * t611 + t108 * t612 - t14 * t572 - t2 * t234 + t45 * t74 - t46 * t75 - t464 * t573, t1 * t75 + t112 * t6 - t14 * t611 + t2 * t74 + t28 * t610 + t464 * t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258 * t444 + t565, -t259 * t444 + t342, t258 * t291 + t259 * t426, -t205 * t258 - t206 * t259 + t235, 0, 0, 0, 0, 0, 0, t137 * t594 + t216 * t531 + t428 * t462 - t440 * t500, -t136 * t594 + t218 * t531 + t428 * t633 + t440 * t524, t136 * t500 - t137 * t524 - t214 * t218 + t215 * t216 + (-t216 * t500 + t218 * t524) * qJD(4), -t463 * t500 + t103 * t531 - t441 * t524 + t102 * t594 + t72 * t214 - t73 * t215 + (t500 * t73 - t524 * t72) * qJD(4), 0, 0, 0, 0, 0, 0, -t379 * t137 + t145 * t462 - t471 * t566 - t500 * t93, -t380 * t137 + t147 * t462 - t471 * t567 + t500 * t92, -t145 * t567 + t147 * t566 - t379 * t92 - t380 * t93, -t30 * t566 + t31 * t567 - t34 * t500 - t8 * t379 - t380 * t461 + t462 * t67, 0, 0, 0, 0, 0, 0, t106 * t566 - t143 * t575 + t338 * t93 + t379 * t46, t108 * t566 + t143 * t574 - t379 * t45 + t439 * t93, t106 * t574 + t108 * t575 + t338 * t45 + t439 * t46, -t1 * t439 - t14 * t574 + t2 * t338 + t28 * t566 + t379 * t6 + t464 * t575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t583, -t216 ^ 2 + t218 ^ 2, -t216 * t428 - t136, -t583, t429 * t218 - t493, -t440, -t103 * t218 - t428 * t73 - t463, t103 * t216 - t428 * t72 + t441, 0, 0, -t417 * t92 + t420 * t620 (-t92 - t621) * t420 + (-t93 - t620) * t417, t137 * t417 - t218 * t147 + t420 * t427, t145 * t507 - t603, t420 * t137 + t145 * t218 - t417 * t427, -t471 * t218, -pkin(4) * t93 - t73 * t145 - t30 * t218 + t460 * t417 - t420 * t630 - t58 * t471, pkin(4) * t92 - t73 * t147 + t31 * t218 + t417 * t630 + t460 * t420 + t59 * t471, t145 * t59 + t147 * t58 + ((-t93 + t557) * pkin(12) + t627) * t420 + (-t8 - t471 * t31 + (qJD(5) * t145 - t92) * pkin(12)) * t417, -pkin(4) * t34 - t30 * t58 - t31 * t59 - t67 * t73 + (-t417 * t8 - t420 * t461 + (-t30 * t420 - t31 * t417) * qJD(5)) * pkin(12), -t417 * t550 + (-t417 * t554 + t467) * t108, t120 * t106 + t108 * t119 + (-t106 * t614 - t108 * t416) * t555 + (-t549 + t602 + (-t108 * t614 + t589) * qJD(6)) * t417, t420 * t45 + t467 * t143 + (t108 * t471 - t455) * t417, t46 * t416 * t417 + (t417 * t536 - t492) * t106, t420 * t46 + t492 * t143 + (-t106 * t471 - t143 * t536 - t601) * t417, t143 * t507 - t603, -t51 * t106 - t28 * t119 + t360 * t93 - t597 * t143 + (-t2 + (pkin(12) * t106 + t28 * t416) * qJD(5)) * t420 + (pkin(12) * t46 + t28 * t536 - t464 * t471 + t613) * t417, -t51 * t108 - t28 * t120 - t361 * t93 + t596 * t143 + (t1 + (pkin(12) * t108 + t28 * t614) * qJD(5)) * t420 + (-pkin(12) * t45 - t14 * t471 - t28 * t554 + t551) * t417, t14 * t119 - t464 * t120 + t360 * t45 - t361 * t46 + t597 * t108 + t596 * t106 + t465 * t555 + (-t614 * t2 - t1 * t416 + (-t14 * t614 - t416 * t464) * qJD(6)) * t417, t1 * t361 + t2 * t360 - t28 * t51 - t596 * t14 + t597 * t464 + (t28 * t555 + t417 * t6) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t584, -t145 ^ 2 + t147 ^ 2, -t92 + t621, -t584, t147 * t216 - t508, t137, -t67 * t147 + t216 * t31 - t532, t67 * t145 - t627, 0, 0, t108 * t452 - t602, -t550 - t452 * t106 + (-t46 - t585) * t416, -t147 * t108 + t143 * t452 + t601, t143 * t589 - t549, -t143 ^ 2 * t416 + t147 * t106 + t548, -t143 * t147, -t551 - pkin(5) * t46 - t31 * t106 + t464 * t147 + (-pkin(13) * t536 - t24) * t143 + (-pkin(13) * t93 + t143 * t28) * t416, pkin(5) * t45 + pkin(13) * t455 - t31 * t108 + t14 * t147 + t25 * t143 + t28 * t452 + t613, t552 + t25 * t106 + t24 * t108 + t452 * t464 + (t108 * t536 - t549) * pkin(13) + ((qJD(6) * t106 - t45) * pkin(13) + t623) * t416, -t6 * pkin(5) + t464 * t24 - t14 * t25 - t28 * t31 + (qJD(6) * t465 - t2 * t416 + t552) * pkin(13); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t588, -t106 ^ 2 + t108 ^ 2, t106 * t143 - t45, -t588, -t46 + t585, t93, -t28 * t108 - t623, t28 * t106 - t143 * t464 - t1, 0, 0;];
tauc_reg  = t7;
