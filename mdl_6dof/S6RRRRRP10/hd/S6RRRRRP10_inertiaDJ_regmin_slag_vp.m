% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x35]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 02:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRP10_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP10_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP10_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP10_inertiaDJ_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 02:27:26
% EndTime: 2019-03-10 02:27:48
% DurationCPUTime: 7.65s
% Computational Cost: add. (10130->530), mult. (26618->883), div. (0->0), fcn. (25601->10), ass. (0->232)
t165 = sin(qJ(3));
t164 = sin(qJ(4));
t168 = cos(qJ(3));
t266 = qJD(3) * t168;
t243 = t164 * t266;
t167 = cos(qJ(4));
t263 = qJD(4) * t167;
t307 = t165 * t263 + t243;
t306 = -0.4e1 * t165;
t204 = -pkin(3) * t168 - pkin(10) * t165;
t126 = -pkin(2) + t204;
t278 = t167 * t168;
t145 = pkin(9) * t278;
t100 = t126 * t164 + t145;
t285 = cos(pkin(6));
t222 = t285 * t165;
t162 = sin(pkin(6));
t166 = sin(qJ(2));
t284 = t162 * t166;
t183 = t168 * t284 + t222;
t180 = t183 * qJD(4);
t272 = qJD(2) * t166;
t233 = t162 * t272;
t305 = -t180 + t233;
t296 = cos(qJ(5));
t225 = t296 * qJD(5);
t304 = qJD(4) * t296 + t225;
t264 = qJD(4) * t164;
t237 = t165 * t264;
t240 = t167 * t266;
t303 = -t237 + t240;
t221 = t285 * t168;
t112 = t165 * t284 - t221;
t181 = t183 * qJD(3);
t169 = cos(qJ(2));
t270 = qJD(2) * t169;
t232 = t162 * t270;
t84 = t165 * t232 + t181;
t302 = t112 * t264 - t167 * t84;
t160 = t167 ^ 2;
t274 = t164 ^ 2 - t160;
t215 = t274 * qJD(4);
t301 = qJD(4) + qJD(5);
t262 = qJD(4) * t168;
t236 = t164 * t262;
t267 = qJD(3) * t167;
t185 = t165 * t267 + t236;
t203 = pkin(3) * t165 - pkin(10) * t168;
t190 = t203 * qJD(3);
t69 = pkin(9) * t185 - t126 * t263 - t164 * t190;
t261 = qJD(4) * t169;
t186 = t164 * t261 + t167 * t272;
t210 = t168 * t232;
t269 = qJD(3) * t112;
t174 = t210 - t269;
t286 = -t164 * t174 - t167 * t180;
t300 = -t162 * t186 - t286;
t163 = sin(qJ(5));
t121 = t167 * t126;
t279 = t165 * t167;
t292 = pkin(9) * t164;
t78 = -pkin(11) * t279 + t121 + (-pkin(4) - t292) * t168;
t280 = t164 * t165;
t86 = -pkin(11) * t280 + t100;
t289 = t163 * t78 + t296 * t86;
t155 = qJD(3) * t165;
t244 = t164 * t155;
t275 = pkin(9) * t244 + t167 * t190;
t294 = pkin(4) * t165;
t49 = (-pkin(11) * t278 + t294) * qJD(3) + (-t145 + (pkin(11) * t165 - t126) * t164) * qJD(4) + t275;
t55 = -pkin(11) * t307 - t69;
t23 = -qJD(5) * t289 - t163 * t55 + t296 * t49;
t219 = qJD(2) * t285;
t207 = t166 * t219;
t173 = pkin(1) * t207 + t84 * pkin(3) + pkin(8) * t232 - pkin(10) * t174;
t248 = pkin(1) * t285;
t283 = t162 * t169;
t182 = pkin(8) * t283 + t166 * t248;
t103 = pkin(9) * t285 + t182;
t104 = (-pkin(2) * t169 - pkin(9) * t166 - pkin(1)) * t162;
t107 = (pkin(2) * t166 - pkin(9) * t169) * t162 * qJD(2);
t206 = t169 * t219;
t108 = -pkin(1) * t206 + pkin(8) * t233;
t36 = t103 * t155 - t104 * t266 - t107 * t165 + t108 * t168;
t34 = pkin(10) * t233 - t36;
t102 = -pkin(2) * t285 + pkin(8) * t284 - t169 * t248;
t64 = pkin(3) * t112 - pkin(10) * t183 + t102;
t288 = t103 * t168 + t104 * t165;
t66 = -pkin(10) * t283 + t288;
t15 = -t164 * t173 - t167 * t34 - t263 * t64 + t264 * t66;
t10 = -pkin(11) * t300 - t15;
t229 = t167 * t261;
t172 = -t162 * t229 + t164 * t305 + t167 * t174;
t223 = -t164 * t34 + t167 * t173;
t8 = t84 * pkin(4) - pkin(11) * t172 - t263 * t66 - t264 * t64 + t223;
t228 = t163 * t10 - t296 * t8;
t295 = pkin(4) * t112;
t31 = -t164 * t66 + t167 * t64;
t85 = -t164 * t283 + t167 * t183;
t28 = -pkin(11) * t85 + t295 + t31;
t277 = t164 * t183 + t167 * t283;
t32 = t164 * t64 + t167 * t66;
t30 = -pkin(11) * t277 + t32;
t29 = t296 * t30;
t290 = t163 * t28 + t29;
t4 = -qJD(5) * t290 - t228;
t299 = t166 ^ 2;
t161 = t168 ^ 2;
t298 = 0.2e1 * t162;
t170 = 2 * qJD(6);
t297 = -pkin(11) - pkin(10);
t81 = t84 * pkin(5);
t293 = pkin(9) * t162;
t291 = pkin(9) * t168;
t282 = t163 * t164;
t281 = t163 * t167;
t125 = pkin(4) * t280 + pkin(9) * t165;
t159 = t165 ^ 2;
t273 = t159 - t161;
t271 = qJD(2) * t168;
t268 = qJD(3) * t166;
t265 = qJD(3) * t169;
t260 = qJD(5) * t163;
t259 = qJD(6) * t168;
t258 = t102 * qJD(3);
t257 = -0.2e1 * pkin(2) * qJD(3);
t256 = -0.2e1 * pkin(3) * qJD(4);
t255 = t164 * t291;
t254 = t296 * pkin(4);
t253 = pkin(4) * t264;
t252 = pkin(5) * t155;
t251 = pkin(4) * t260;
t250 = t163 * t280;
t249 = t85 * t266;
t154 = pkin(9) * t266;
t95 = pkin(4) * t307 + t154;
t152 = -pkin(4) * t167 - pkin(3);
t247 = t297 * qJD(4);
t246 = t296 * t167;
t157 = t162 ^ 2;
t245 = t157 * t270;
t242 = t165 * t268;
t241 = t165 * t265;
t239 = t112 * t266;
t234 = t167 * t262;
t231 = t164 * t263;
t230 = t165 * t266;
t227 = qJD(3) * t296;
t220 = -t103 * t165 + t104 * t168;
t218 = t163 * t277;
t217 = qJD(4) * t277;
t216 = t277 * qJD(3);
t214 = t273 * qJD(3);
t213 = 0.2e1 * t230;
t212 = t297 * t296;
t211 = t166 * t245;
t209 = t164 * t240;
t208 = t168 * t227;
t65 = pkin(3) * t283 - t220;
t205 = qJD(3) * t221;
t202 = t296 * t277;
t130 = t297 * t167;
t198 = qJD(4) * t212;
t199 = t164 * t212;
t59 = -qJD(5) * t199 - t130 * t260 - t164 * t198 - t247 * t281;
t88 = -t130 * t296 + t282 * t297;
t201 = -t112 * t59 + t84 * t88;
t60 = -t130 * t225 - t167 * t198 + (qJD(5) * t297 + t247) * t282;
t87 = -t130 * t163 - t199;
t200 = -t112 * t60 - t84 * t87;
t37 = -t103 * t266 - t104 * t155 + t168 * t107 + t108 * t165;
t197 = t167 * t205;
t3 = -t10 * t296 - t163 * t8 - t225 * t28 + t260 * t30;
t13 = -t163 * t30 + t28 * t296;
t50 = -t163 * t86 + t296 * t78;
t194 = t155 * t88 + t168 * t59;
t193 = -t155 * t87 + t168 * t60;
t35 = -pkin(3) * t233 - t37;
t192 = t35 * t164 + t263 * t65;
t191 = t112 * t263 + t164 * t84;
t22 = -t163 * t49 - t225 * t78 + t260 * t86 - t296 * t55;
t123 = t164 * t296 + t281;
t149 = qJ(6) * t155;
t189 = t149 - t22;
t188 = t168 * t270 - t242;
t187 = t165 * t272 - t168 * t265;
t106 = t112 * qJD(6);
t80 = t84 * qJ(6);
t1 = t106 - t3 + t80;
t39 = pkin(4) * t277 + t65;
t177 = t168 * t251 + t23;
t176 = t164 * t272 + t167 * t188;
t175 = (-t29 + (-t28 - t295) * t163) * qJD(5) - t228;
t83 = t301 * t123;
t24 = -t286 * pkin(4) + (-pkin(3) * t272 - pkin(4) * t186) * t162 - t37;
t171 = t165 * t172;
t153 = pkin(4) * t225;
t151 = -t254 - pkin(5);
t148 = pkin(4) * t163 + qJ(6);
t146 = -0.2e1 * t251;
t139 = t153 + qJD(6);
t138 = -0.2e1 * t230;
t122 = -t246 + t282;
t111 = t165 * t246 - t250;
t110 = t123 * t165;
t109 = t182 * qJD(2);
t99 = t121 - t255;
t82 = -t167 * t304 + t282 * t301;
t74 = pkin(5) * t122 - qJ(6) * t123 + t152;
t71 = 0.2e1 * t112 * t84;
t70 = -qJD(4) * t100 + t275;
t68 = pkin(5) * t110 - qJ(6) * t111 + t125;
t67 = t112 * t155 - t168 * t84;
t57 = t164 * t208 - t163 * t237 - qJD(5) * t250 + (t163 * t266 + t165 * t304) * t167;
t56 = t163 * t243 + t165 * t83 - t167 * t208;
t54 = t296 * t85 - t218;
t53 = t163 * t85 + t202;
t48 = pkin(5) * t168 - t50;
t47 = -qJ(6) * t168 + t289;
t38 = pkin(5) * t83 + qJ(6) * t82 - qJD(6) * t123 + t253;
t26 = pkin(5) * t57 + qJ(6) * t56 - qJD(6) * t111 + t95;
t21 = -t23 - t252;
t20 = pkin(5) * t53 - qJ(6) * t54 + t39;
t19 = t189 - t259;
t18 = -qJD(5) * t218 + t163 * t172 + t225 * t85 + t296 * t300;
t17 = qJD(5) * t202 + t163 * t300 - t172 * t296 + t260 * t85;
t16 = -qJD(4) * t32 + t223;
t12 = -pkin(5) * t112 - t13;
t11 = qJ(6) * t112 + t290;
t5 = t18 * pkin(5) + t17 * qJ(6) - t54 * qJD(6) + t24;
t2 = -t4 - t81;
t6 = [0, 0, 0, 0.2e1 * t211, 0.2e1 * (t169 ^ 2 - t299) * t157 * qJD(2), t206 * t298, -0.2e1 * t162 * t207, 0, -0.2e1 * pkin(1) * t157 * t272 - 0.2e1 * t109 * t285, -0.2e1 * pkin(1) * t245 + 0.2e1 * t108 * t285, 0.2e1 * t183 * t174, -0.2e1 * t112 * t174 - 0.2e1 * t183 * t84 (t165 * t207 - t169 * t205 + (-t169 * t188 + t271 * t299) * t162) * t298 (-t112 * t272 + t169 * t84) * t298, -0.2e1 * t211, 0.2e1 * t102 * t84 + 0.2e1 * t109 * t112 + 0.2e1 * (-t169 * t37 + t220 * t272) * t162, 0.2e1 * t102 * t174 + 0.2e1 * t109 * t183 - 0.2e1 * t233 * t288 - 0.2e1 * t283 * t36, 0.2e1 * t85 * t172, -0.2e1 * (-t222 * t264 + t197) * t277 + 0.2e1 * t85 * t286 + 0.2e1 * (-(-t166 * t236 + t176 - t229) * t277 + t85 * t186) * t162, 0.2e1 * t112 * t172 + 0.2e1 * t85 * t84, -0.2e1 * t112 * t300 - 0.2e1 * t277 * t84, t71, 0.2e1 * t16 * t112 + 0.2e1 * t277 * t35 + 0.2e1 * t300 * t65 + 0.2e1 * t31 * t84, 0.2e1 * t15 * t112 + 0.2e1 * t172 * t65 - 0.2e1 * t32 * t84 + 0.2e1 * t35 * t85, -0.2e1 * t54 * t17, 0.2e1 * t17 * t53 - 0.2e1 * t18 * t54, -0.2e1 * t112 * t17 + 0.2e1 * t54 * t84, -0.2e1 * t112 * t18 - 0.2e1 * t53 * t84, t71, 0.2e1 * t112 * t4 + 0.2e1 * t13 * t84 + 0.2e1 * t18 * t39 + 0.2e1 * t24 * t53, 0.2e1 * t112 * t3 - 0.2e1 * t17 * t39 + 0.2e1 * t24 * t54 - 0.2e1 * t290 * t84, -0.2e1 * t112 * t2 - 0.2e1 * t12 * t84 + 0.2e1 * t18 * t20 + 0.2e1 * t5 * t53, -0.2e1 * t1 * t53 - 0.2e1 * t11 * t18 - 0.2e1 * t12 * t17 + 0.2e1 * t2 * t54, 0.2e1 * t1 * t112 + 0.2e1 * t11 * t84 + 0.2e1 * t17 * t20 - 0.2e1 * t5 * t54, 0.2e1 * t1 * t11 + 0.2e1 * t12 * t2 + 0.2e1 * t20 * t5; 0, 0, 0, 0, 0, t232, -t233, 0, -t109, t108, 0.2e1 * t165 * t205 + (t161 * t268 + t165 * t188) * t162, t168 * t174 - t239 + (-t181 - t84) * t165, t187 * t162 (t166 * t271 + t241) * t162, 0, -pkin(2) * t84 - t109 * t168 + t165 * t258 - t187 * t293, -pkin(2) * t174 + t109 * t165 + t168 * t258 - t233 * t291 - t241 * t293, -t85 * t237 + (t249 + (t205 + t210 + (-t242 - t261) * t162) * t279 + t305 * t280) * t167, -t164 * t171 - t216 * t278 + t217 * t280 - t279 * t300 - t307 * t85, -t112 * t237 + t155 * t85 + t167 * t239 - t168 * t172 + t279 * t84 (-t164 * t269 + t300) * t168 + (-t216 - t191) * t165, t67, t70 * t112 + t99 * t84 + (-t16 + (pkin(9) * t277 + t65 * t164) * qJD(3)) * t168 + (pkin(9) * t300 + t31 * qJD(3) + t192) * t165, -t100 * t84 + t69 * t112 - t15 * t168 - t155 * t32 + t279 * t35 + t303 * t65 + (t171 + t249) * pkin(9), -t111 * t17 - t54 * t56, t110 * t17 - t111 * t18 + t53 * t56 - t54 * t57, t111 * t84 - t112 * t56 + t155 * t54 + t168 * t17, -t110 * t84 - t112 * t57 - t155 * t53 + t168 * t18, t67, t110 * t24 + t112 * t23 + t125 * t18 + t13 * t155 - t168 * t4 + t39 * t57 + t50 * t84 + t53 * t95, t111 * t24 + t112 * t22 - t125 * t17 - t155 * t290 - t168 * t3 - t289 * t84 - t39 * t56 + t54 * t95, t110 * t5 - t112 * t21 - t12 * t155 + t168 * t2 + t18 * t68 + t20 * t57 + t26 * t53 - t48 * t84, -t1 * t110 - t11 * t57 + t111 * t2 - t12 * t56 - t17 * t48 - t18 * t47 - t19 * t53 + t21 * t54, -t1 * t168 + t11 * t155 - t111 * t5 + t112 * t19 + t17 * t68 + t20 * t56 - t26 * t54 + t47 * t84, t1 * t47 + t11 * t19 + t12 * t21 + t2 * t48 + t20 * t26 + t5 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, -0.2e1 * t214, 0, 0, 0, t165 * t257, t168 * t257, -0.2e1 * t159 * t231 + 0.2e1 * t160 * t230, 0.2e1 * t159 * t215 + t209 * t306, 0.2e1 * t165 * t236 + 0.2e1 * t267 * t273, -0.2e1 * t164 * t214 + 0.2e1 * t165 * t234, t138, 0.2e1 * t99 * t155 - 0.2e1 * t168 * t70 + 0.2e1 * (t159 * t263 + t164 * t213) * pkin(9), -0.2e1 * t100 * t155 - 0.2e1 * t168 * t69 + 0.2e1 * (-t159 * t264 + t167 * t213) * pkin(9), -0.2e1 * t111 * t56, 0.2e1 * t110 * t56 - 0.2e1 * t111 * t57, 0.2e1 * t111 * t155 + 0.2e1 * t168 * t56, -0.2e1 * t110 * t155 + 0.2e1 * t168 * t57, t138, 0.2e1 * t110 * t95 + 0.2e1 * t125 * t57 + 0.2e1 * t155 * t50 - 0.2e1 * t168 * t23, 0.2e1 * t111 * t95 - 0.2e1 * t125 * t56 - 0.2e1 * t155 * t289 - 0.2e1 * t168 * t22, 0.2e1 * t110 * t26 - 0.2e1 * t155 * t48 + 0.2e1 * t168 * t21 + 0.2e1 * t57 * t68, -0.2e1 * t110 * t19 + 0.2e1 * t111 * t21 - 0.2e1 * t47 * t57 - 0.2e1 * t48 * t56, -0.2e1 * t111 * t26 + 0.2e1 * t155 * t47 - 0.2e1 * t168 * t19 + 0.2e1 * t56 * t68, 0.2e1 * t19 * t47 + 0.2e1 * t21 * t48 + 0.2e1 * t26 * t68; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, -t84, t233, t37, t36 (t162 * t176 + t197) * t164 + (-t164 * t277 + t85 * t167) * qJD(4), -t164 * t300 - t264 * t85 + (t172 - t217) * t167, t191, -t302, 0, -pkin(3) * t300 - pkin(10) * t191 - t35 * t167 + t264 * t65, -pkin(3) * t172 + pkin(10) * t302 + t192, -t123 * t17 - t54 * t82, t122 * t17 - t123 * t18 + t53 * t82 - t54 * t83, -t112 * t82 + t123 * t84, -t112 * t83 - t122 * t84, 0, t122 * t24 + t152 * t18 + t253 * t53 + t39 * t83 + t200, t123 * t24 - t152 * t17 + t253 * t54 - t39 * t82 - t201, t122 * t5 + t18 * t74 + t20 * t83 + t38 * t53 + t200, -t1 * t122 - t11 * t83 - t12 * t82 + t123 * t2 - t17 * t87 - t18 * t88 + t53 * t59 + t54 * t60, -t123 * t5 + t17 * t74 + t20 * t82 - t38 * t54 + t201, t1 * t88 - t11 * t59 + t12 * t60 + t2 * t87 + t20 * t38 + t5 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, -t155, 0, -t154, pkin(9) * t155, -t165 * t215 + t209, t231 * t306 - t266 * t274, -t234 + t244, t185, 0 (pkin(10) * t278 + (-pkin(3) * t167 + t292) * t165) * qJD(4) + (t164 * t204 - t145) * qJD(3) (pkin(9) * t279 + t164 * t203) * qJD(4) + (t167 * t204 + t255) * qJD(3), -t111 * t82 - t123 * t56, t110 * t82 - t111 * t83 + t122 * t56 - t123 * t57, t123 * t155 + t168 * t82, -t122 * t155 + t168 * t83, 0, t110 * t253 + t122 * t95 + t125 * t83 + t152 * t57 + t193, t111 * t253 + t123 * t95 - t125 * t82 - t152 * t56 - t194, t110 * t38 + t122 * t26 + t57 * t74 + t68 * t83 + t193, t110 * t59 + t111 * t60 - t122 * t19 + t123 * t21 - t47 * t83 - t48 * t82 - t56 * t87 - t57 * t88, -t111 * t38 - t123 * t26 + t56 * t74 + t68 * t82 + t194, t19 * t88 + t21 * t87 + t26 * t74 + t38 * t68 - t47 * t59 + t48 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t231, -0.2e1 * t215, 0, 0, 0, t164 * t256, t167 * t256, -0.2e1 * t123 * t82, 0.2e1 * t122 * t82 - 0.2e1 * t123 * t83, 0, 0, 0, 0.2e1 * t122 * t253 + 0.2e1 * t152 * t83, 0.2e1 * t123 * t253 - 0.2e1 * t152 * t82, 0.2e1 * t122 * t38 + 0.2e1 * t74 * t83, 0.2e1 * t122 * t59 + 0.2e1 * t123 * t60 - 0.2e1 * t82 * t87 - 0.2e1 * t83 * t88, -0.2e1 * t123 * t38 + 0.2e1 * t74 * t82, 0.2e1 * t38 * t74 - 0.2e1 * t59 * t88 + 0.2e1 * t60 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t172, -t300, t84, t16, t15, 0, 0, -t17, -t18, t84, t254 * t84 + t175 (-t112 * t225 - t163 * t84) * pkin(4) + t3, -t151 * t84 + t175 + t81, -t139 * t53 - t148 * t18 - t151 * t17 + t251 * t54, t112 * t139 + t148 * t84 + t1, t1 * t148 + t11 * t139 + t12 * t251 + t151 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t303, -t307, t155, t70, t69, 0, 0, -t56, -t57, t155, t227 * t294 + t177 (-t155 * t163 + t168 * t225) * pkin(4) + t22 (pkin(5) - t151) * t155 + t177, -t110 * t139 + t111 * t251 - t148 * t57 - t151 * t56, t148 * t155 + (-qJD(6) - t139) * t168 + t189, t139 * t47 + t148 * t19 + t151 * t21 + t251 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t263, -t264, 0, -pkin(10) * t263, pkin(10) * t264, 0, 0, -t82, -t83, 0, -t60, t59, -t60, -t122 * t139 + t123 * t251 - t148 * t83 - t151 * t82, -t59, t139 * t88 - t148 * t59 + t151 * t60 + t251 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, -0.2e1 * t153, t146, 0, 0.2e1 * t139, 0.2e1 * t139 * t148 + 0.2e1 * t151 * t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t17, -t18, t84, t4, t3, t4 + 0.2e1 * t81, pkin(5) * t17 - qJ(6) * t18 - qJD(6) * t53, 0.2e1 * t106 - t3 + 0.2e1 * t80, -pkin(5) * t2 + qJ(6) * t1 + qJD(6) * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t56, -t57, t155, t23, t22, t23 + 0.2e1 * t252, pkin(5) * t56 - qJ(6) * t57 - qJD(6) * t110, 0.2e1 * t149 - t22 - 0.2e1 * t259, -pkin(5) * t21 + qJ(6) * t19 + qJD(6) * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, -t83, 0, -t60, t59, -t60, pkin(5) * t82 - qJ(6) * t83 - qJD(6) * t122, -t59, -pkin(5) * t60 - qJ(6) * t59 + qJD(6) * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t251, -t153, -t251, 0, t170 + t153, -pkin(5) * t251 + qJ(6) * t139 + qJD(6) * t148; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t170, qJ(6) * t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t84, -t17, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t155, -t56, 0, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t82, 0, t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
