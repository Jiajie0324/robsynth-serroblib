% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRRRP10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 06:39
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRRRP10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP10_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP10_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP10_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP10_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 06:36:41
% EndTime: 2019-05-08 06:38:51
% DurationCPUTime: 135.88s
% Computational Cost: add. (768941->1113), mult. (1636959->1547), div. (0->0), fcn. (1328052->12), ass. (0->779)
t2336 = sin(qJ(3));
t2341 = cos(qJ(3));
t2333 = cos(pkin(6));
t2545 = qJD(1) * t2333;
t2473 = qJD(2) + t2545;
t2332 = sin(pkin(6));
t2337 = sin(qJ(2));
t2498 = t2332 * t2337;
t2486 = qJD(1) * t2498;
t2298 = t2336 * t2473 + t2341 * t2486;
t2342 = cos(qJ(2));
t2497 = t2332 * t2342;
t2321 = qJD(1) * t2497 - qJD(3);
t2335 = sin(qJ(4));
t2340 = cos(qJ(4));
t2269 = t2298 * t2335 + t2340 * t2321;
t2270 = t2298 * t2340 - t2321 * t2335;
t2334 = sin(qJ(5));
t2339 = cos(qJ(5));
t2223 = -t2269 * t2334 + t2270 * t2339;
t2220 = t2223 ^ 2;
t2296 = t2336 * t2486 - t2341 * t2473;
t2293 = qJD(4) + t2296;
t2290 = qJD(5) + t2293;
t2557 = t2290 ^ 2;
t2132 = t2557 + t2220;
t2543 = qJD(1) * t2342;
t2487 = qJD(2) * t2543;
t2490 = qJDD(1) * t2337;
t2399 = t2487 + t2490;
t2377 = t2399 * t2332;
t2468 = qJDD(1) * t2333 + qJDD(2);
t2358 = -t2336 * t2377 + t2341 * t2468;
t2354 = t2298 * qJD(3) - t2358;
t2249 = qJDD(4) + t2354;
t2248 = qJDD(5) + t2249;
t2221 = t2339 * t2269 + t2270 * t2334;
t2519 = t2223 * t2221;
t2572 = t2248 + t2519;
t2528 = t2572 * t2334;
t2022 = t2132 * t2339 + t2528;
t2527 = t2572 * t2339;
t2042 = t2132 * t2334 - t2527;
t1960 = t2022 * t2335 + t2042 * t2340;
t2405 = t2336 * t2468;
t2507 = t2296 * qJD(3);
t2373 = t2405 - t2507;
t2378 = t2341 * t2399;
t2489 = qJDD(1) * t2342;
t2544 = qJD(1) * t2337;
t2398 = qJD(2) * t2544 - t2489;
t2515 = t2269 * qJD(4);
t2173 = t2340 * t2373 + t2335 * qJDD(3) - t2515 + (t2335 * t2398 + t2340 * t2378) * t2332;
t2514 = t2270 * qJD(4);
t2345 = t2335 * t2373 - t2340 * qJDD(3) + t2514 - (-t2335 * t2378 + t2340 * t2398) * t2332;
t2058 = -t2221 * qJD(5) + t2339 * t2173 - t2334 * t2345;
t2520 = t2221 * t2290;
t2575 = t2058 - t2520;
t1885 = t1960 * t2336 - t2341 * t2575;
t1887 = t1960 * t2341 + t2336 * t2575;
t1945 = t2022 * t2340 - t2042 * t2335;
t2440 = t1887 * t2337 + t1945 * t2342;
t1783 = -t1885 * t2332 + t2333 * t2440;
t1841 = t1887 * t2342 - t1945 * t2337;
t2338 = sin(qJ(1));
t2343 = cos(qJ(1));
t2723 = pkin(7) * (t1783 * t2343 + t2338 * t1841);
t2722 = pkin(7) * (t2338 * t1783 - t1841 * t2343);
t1781 = t1885 * t2333 + t2332 * t2440;
t2721 = pkin(8) * (t1781 * t2332 + t1783 * t2333);
t2720 = pkin(1) * t1781;
t2719 = pkin(1) * t1783;
t2471 = -t2173 * t2334 - t2339 * t2345;
t2057 = qJD(5) * t2223 - t2471;
t2185 = t2290 * t2223;
t2576 = t2057 + t2185;
t1938 = -t2576 * t2334 + t2339 * t2575;
t2531 = t2575 * t2334;
t1942 = -t2576 * t2339 - t2531;
t1854 = -t1938 * t2335 + t1942 * t2340;
t2559 = t2221 ^ 2;
t2574 = t2220 - t2559;
t1838 = t1854 * t2336 - t2341 * t2574;
t1840 = t1854 * t2341 + t2336 * t2574;
t1850 = t1938 * t2340 + t1942 * t2335;
t2444 = t1840 * t2337 - t1850 * t2342;
t1750 = -t1838 * t2332 + t2333 * t2444;
t1769 = t1840 * t2342 + t1850 * t2337;
t2718 = t2338 * t1750 - t1769 * t2343;
t2717 = t1750 * t2343 + t2338 * t1769;
t2181 = t2559 - t2557;
t2049 = t2181 * t2334 + t2527;
t2053 = t2181 * t2339 - t2528;
t1968 = t2049 * t2335 - t2053 * t2340;
t2012 = t2057 - t2185;
t1894 = t1968 * t2336 - t2012 * t2341;
t1898 = t1968 * t2341 + t2012 * t2336;
t1965 = t2049 * t2340 + t2053 * t2335;
t2436 = t1898 * t2337 + t1965 * t2342;
t1801 = -t1894 * t2332 + t2333 * t2436;
t1845 = t1898 * t2342 - t1965 * t2337;
t2714 = t2338 * t1801 - t1845 * t2343;
t2713 = t1801 * t2343 + t2338 * t1845;
t2711 = pkin(8) * t1841;
t1797 = t1894 * t2333 + t2332 * t2436;
t1748 = t1838 * t2333 + t2332 * t2444;
t2704 = pkin(2) * t1885;
t2703 = pkin(9) * t1885;
t2696 = -pkin(2) * t1945 - pkin(9) * t1887;
t2182 = t2220 - t2557;
t2570 = -t2519 + t2248;
t2526 = t2570 * t2334;
t2615 = -t2339 * t2182 + t2526;
t2099 = t2339 * t2570;
t2616 = t2182 * t2334 + t2099;
t2629 = t2335 * t2616 + t2340 * t2615;
t2569 = t2520 + t2058;
t2628 = -t2335 * t2615 + t2340 * t2616;
t2651 = t2336 * t2569 + t2341 * t2628;
t2666 = t2337 * t2629 + t2342 * t2651;
t2655 = t2336 * t2628 - t2341 * t2569;
t2667 = t2337 * t2651 - t2342 * t2629;
t2678 = -t2332 * t2655 + t2333 * t2667;
t2695 = -t2338 * t2678 + t2343 * t2666;
t2694 = t2338 * t2666 + t2343 * t2678;
t2568 = -t2557 - t2559;
t2586 = t2339 * t2568 - t2526;
t2589 = t2334 * t2568 + t2099;
t2610 = -t2335 * t2589 + t2340 * t2586;
t2631 = t2336 * t2610 - t2341 * t2576;
t2609 = t2335 * t2586 + t2340 * t2589;
t2630 = t2336 * t2576 + t2341 * t2610;
t2654 = t2337 * t2630 - t2342 * t2609;
t2668 = -t2332 * t2631 + t2333 * t2654;
t2693 = pkin(1) * t2668;
t2669 = t2332 * t2654 + t2333 * t2631;
t2692 = pkin(1) * t2669;
t2690 = pkin(3) * t1945;
t2689 = pkin(10) * t1945;
t2680 = pkin(3) * t2575 - pkin(10) * t1960;
t2679 = t2332 * t2667 + t2333 * t2655;
t2650 = t2337 * t2609 + t2342 * t2630;
t2677 = pkin(7) * (-t2338 * t2668 + t2343 * t2650);
t2676 = pkin(7) * (t2338 * t2650 + t2343 * t2668);
t2675 = (-t2332 * t2669 - t2333 * t2668) * pkin(8);
t2674 = pkin(8) * t2650;
t2665 = pkin(2) * t2631;
t2664 = pkin(4) * t2022;
t2663 = pkin(9) * t2631;
t2662 = pkin(11) * t2022;
t2661 = pkin(11) * t2042;
t2656 = -pkin(2) * t2609 + pkin(9) * t2630;
t2397 = (-t2221 * t2334 - t2223 * t2339) * t2290;
t2511 = t2290 * t2334;
t2179 = t2223 * t2511;
t2510 = t2290 * t2339;
t2483 = t2221 * t2510;
t2455 = t2179 - t2483;
t2566 = t2335 * t2455 + t2340 * t2397;
t2565 = -t2335 * t2397 + t2340 * t2455;
t2584 = t2248 * t2336 + t2341 * t2565;
t2612 = t2337 * t2566 + t2342 * t2584;
t2588 = -t2341 * t2248 + t2336 * t2565;
t2614 = t2337 * t2584 - t2342 * t2566;
t2632 = -t2332 * t2588 + t2333 * t2614;
t2653 = -t2338 * t2632 + t2343 * t2612;
t2402 = t2057 * t2334 + t2483;
t2456 = -t2339 * t2057 + t2221 * t2511;
t2563 = t2335 * t2402 + t2340 * t2456;
t2485 = t2336 * t2519;
t2564 = -t2335 * t2456 + t2340 * t2402;
t2585 = t2341 * t2564 - t2485;
t2611 = t2337 * t2563 + t2342 * t2585;
t2484 = t2341 * t2519;
t2587 = t2336 * t2564 + t2484;
t2613 = t2337 * t2585 - t2342 * t2563;
t2633 = -t2332 * t2587 + t2333 * t2613;
t2652 = -t2338 * t2633 + t2343 * t2611;
t2649 = t2338 * t2612 + t2343 * t2632;
t2648 = t2338 * t2611 + t2343 * t2633;
t2646 = pkin(3) * t2609;
t2645 = pkin(10) * t2609;
t2636 = -pkin(3) * t2576 + pkin(10) * t2610;
t2635 = t2332 * t2613 + t2333 * t2587;
t2634 = t2332 * t2614 + t2333 * t2588;
t2088 = -t2559 - t2220;
t2627 = pkin(3) * t2088;
t2626 = pkin(4) * t2088;
t2625 = pkin(4) * t2589;
t2624 = pkin(11) * t2586;
t2623 = pkin(11) * t2589;
t2622 = t2088 * t2336;
t2621 = t2088 * t2341;
t2606 = qJ(6) * t2575;
t2329 = t2332 ^ 2;
t2560 = qJD(1) ^ 2;
t2499 = t2329 * t2560;
t2231 = t2270 * t2269;
t2573 = -t2231 + t2249;
t2605 = t2335 * t2573;
t2598 = t2340 * t2573;
t2281 = t2321 * t2298;
t2591 = t2354 - t2281;
t2235 = (t2296 * t2341 - t2298 * t2336) * t2321;
t2376 = t2398 * t2332;
t2368 = qJDD(3) + t2376;
t2590 = t2337 * t2235 - t2342 * t2368;
t2004 = t2058 * t2334 + t2223 * t2510;
t2005 = t2058 * t2339 - t2179;
t1929 = t2004 * t2340 + t2005 * t2335;
t1932 = -t2004 * t2335 + t2005 * t2340;
t2457 = t2341 * t1932 + t2485;
t2458 = t2336 * t1932 - t2484;
t2495 = t2333 * t2342;
t2496 = t2333 * t2337;
t2561 = -t1929 * t2495 - t2332 * t2458 + t2457 * t2496;
t2567 = t1929 * t2337 + t2342 * t2457;
t2583 = t2338 * t2567 + t2343 * t2561;
t2582 = -t2338 * t2561 + t2343 * t2567;
t2467 = t2473 ^ 2;
t2581 = 0.2e1 * qJD(2);
t2580 = t2329 * t2337;
t2320 = t2337 * t2342 * t2499;
t2506 = t2298 * t2296;
t2356 = t2368 - t2506;
t2579 = t2336 * t2356;
t2578 = t2341 * t2356;
t2280 = t2296 * t2321;
t2352 = -t2341 * t2377 - t2405;
t2349 = -t2352 - t2507;
t2213 = t2280 + t2349;
t2571 = -t2468 * pkin(2) - t2467 * pkin(9);
t2245 = t2293 * t2270;
t2347 = -t2335 * t2349 + t2340 * t2368 - t2514;
t2141 = t2347 + t2245;
t2244 = t2293 * t2269;
t2348 = t2335 * t2368 + t2340 * t2349 - t2515;
t2144 = -t2348 + t2244;
t2562 = -t1929 * t2497 + t2333 * t2458 + t2457 * t2498;
t2558 = t2269 ^ 2;
t2268 = t2270 ^ 2;
t2291 = t2293 ^ 2;
t2294 = t2296 ^ 2;
t2295 = t2298 ^ 2;
t2556 = t2321 ^ 2;
t2555 = pkin(2) * t2337;
t2554 = pkin(2) * t2342;
t2553 = pkin(3) * t2336;
t2323 = g(1) * t2343 + t2338 * g(2);
t2549 = pkin(8) * t2332;
t2300 = -pkin(1) * t2560 + qJDD(1) * t2549 - t2323;
t2462 = -pkin(9) * t2337 - t2554;
t2546 = qJD(1) * t2332;
t2303 = t2462 * t2546;
t2322 = g(1) * t2338 - t2343 * g(2);
t2371 = qJDD(1) * pkin(1) + t2549 * t2560 + t2322;
t2359 = t2333 * t2371;
t2355 = -g(3) * t2498 + t2337 * t2359;
t2202 = t2468 * pkin(9) - t2467 * pkin(2) + (t2303 * t2546 + t2300) * t2342 + t2355;
t2461 = -pkin(9) * t2342 + t2555;
t2548 = t2333 * g(3);
t2346 = -t2548 + ((-pkin(1) + t2462) * qJDD(1) + ((t2333 * t2461 - t2549) * qJD(1) + t2461 * t2581) * qJD(1) - t2322) * t2332;
t2127 = t2341 * t2202 + t2336 * t2346;
t2260 = pkin(3) * t2296 - pkin(10) * t2298;
t2074 = -pkin(3) * t2556 + pkin(10) * t2368 - t2296 * t2260 + t2127;
t2470 = t2337 * t2300 - t2342 * t2359;
t2256 = g(3) * t2497 + t2470;
t2476 = t2303 * t2544;
t2079 = pkin(3) * t2591 - t2213 * pkin(10) + t2332 * t2476 + t2256 + t2571;
t1977 = t2074 * t2335 - t2340 * t2079;
t1935 = (-t2173 - t2244) * pkin(11) + t2573 * pkin(4) - t1977;
t1978 = t2340 * t2074 + t2335 * t2079;
t2237 = pkin(4) * t2293 - pkin(11) * t2270;
t1951 = -pkin(4) * t2558 - pkin(11) * t2345 - t2293 * t2237 + t1978;
t1858 = -t2339 * t1935 + t1951 * t2334;
t1859 = t2334 * t1935 + t2339 * t1951;
t1776 = -t1858 * t2339 + t1859 * t2334;
t2552 = pkin(4) * t1776;
t2006 = t2339 * t2569;
t2014 = (-qJD(5) + t2290) * t2223 + t2471;
t1939 = t2014 * t2334 - t2006;
t2551 = pkin(4) * t1939;
t2550 = pkin(5) * t2339;
t2547 = qJ(6) * t2339;
t2542 = qJD(6) * t2290;
t2541 = t1776 * t2335;
t2540 = t1776 * t2340;
t2126 = t2202 * t2336 - t2341 * t2346;
t2073 = -t2368 * pkin(3) - t2556 * pkin(10) + t2260 * t2298 + t2126;
t1979 = t2345 * pkin(4) - t2558 * pkin(11) + t2237 * t2270 + t2073;
t2538 = t1979 * t2334;
t2537 = t1979 * t2339;
t2532 = t2569 * t2334;
t2530 = t2073 * t2335;
t2529 = t2073 * t2340;
t2163 = t2231 + t2249;
t2525 = t2163 * t2335;
t2524 = t2163 * t2340;
t2201 = (t2342 * g(3) + t2476) * t2332 + t2470 + t2571;
t2522 = t2201 * t2336;
t2521 = t2201 * t2341;
t2240 = -t2368 - t2506;
t2518 = t2240 * t2336;
t2517 = t2240 * t2341;
t2283 = t2332 * t2371 + t2548;
t2513 = t2283 * t2337;
t2512 = t2283 * t2342;
t2509 = t2293 * t2335;
t2508 = t2293 * t2340;
t2301 = t2320 + t2468;
t2505 = t2301 * t2337;
t2504 = t2301 * t2342;
t2302 = -t2320 + t2468;
t2503 = t2302 * t2337;
t2502 = t2302 * t2342;
t2501 = t2321 * t2336;
t2500 = t2321 * t2341;
t2284 = 0.2e1 * t2542;
t2151 = pkin(5) * t2221 - qJ(6) * t2223;
t2450 = -pkin(5) * t2557 + t2248 * qJ(6) - t2221 * t2151 + t1859;
t1822 = t2284 + t2450;
t1824 = -t2248 * pkin(5) - qJ(6) * t2557 + t2151 * t2223 + qJDD(6) + t1858;
t2493 = -pkin(5) * t1824 + qJ(6) * t1822;
t2492 = -pkin(5) * t2569 - qJ(6) * t2012;
t2330 = t2337 ^ 2;
t2331 = t2342 ^ 2;
t2491 = t2330 + t2331;
t2488 = -pkin(3) * t2341 - pkin(2);
t2482 = t2336 * t2231;
t2481 = t2341 * t2231;
t2480 = t2337 * t2506;
t2479 = t2342 * t2506;
t2478 = t2330 * t2499;
t2477 = t2331 * t2499;
t2474 = -qJ(6) * t2334 - pkin(4);
t2472 = t2581 + t2545;
t1777 = t1858 * t2334 + t2339 * t1859;
t1890 = t1977 * t2335 + t2340 * t1978;
t2031 = t2126 * t2336 + t2341 * t2127;
t2469 = -t2322 * t2338 - t2343 * t2323;
t2466 = t2332 * t2320;
t1759 = t1822 * t2334 - t1824 * t2339;
t2465 = pkin(4) * t1759 + t2493;
t2464 = -t1859 - t2664;
t1937 = -t2012 * t2334 - t2006;
t2463 = pkin(4) * t1937 + t2492;
t2460 = -pkin(3) * t2073 + pkin(10) * t1890;
t2319 = qJDD(1) * t2343 - t2338 * t2560;
t2459 = -pkin(7) * t2319 - g(3) * t2338;
t2292 = -t2478 - t2467;
t2259 = -t2292 * t2337 - t2502;
t2454 = pkin(8) * t2259 - t2513;
t2307 = -t2467 - t2477;
t2266 = t2307 * t2342 - t2505;
t2453 = pkin(8) * t2266 + t2512;
t2452 = qJD(1) * t2473;
t2451 = t2487 * t2580;
t1760 = t1822 * t2339 + t1824 * t2334;
t1726 = -t1759 * t2335 + t1760 * t2340;
t2351 = t2057 * pkin(5) + t1979 - t2606;
t1861 = (pkin(5) * t2290 - 0.2e1 * qJD(6)) * t2223 + t2351;
t1718 = t1726 * t2341 + t1861 * t2336;
t1725 = t1759 * t2340 + t1760 * t2335;
t2449 = t1718 * t2337 - t1725 * t2342;
t1736 = t1777 * t2340 - t2541;
t1730 = t1736 * t2341 + t1979 * t2336;
t1735 = t1777 * t2335 + t2540;
t2448 = t1730 * t2337 - t1735 * t2342;
t1941 = -t2012 * t2339 + t2532;
t1853 = -t1937 * t2335 + t1941 * t2340;
t1827 = t1853 * t2341 + t2622;
t1849 = t1937 * t2340 + t1941 * t2335;
t2447 = t1827 * t2337 - t1849 * t2342;
t1943 = t2014 * t2339 + t2532;
t1855 = -t1939 * t2335 + t1943 * t2340;
t1828 = t1855 * t2341 + t2622;
t1851 = t1939 * t2340 + t1943 * t2335;
t2446 = t1828 * t2337 - t1851 * t2342;
t1868 = t1890 * t2341 + t2073 * t2336;
t1889 = -t1977 * t2340 + t1978 * t2335;
t2443 = t1868 * t2337 - t1889 * t2342;
t2143 = t2244 + t2348;
t2039 = t2141 * t2340 + t2143 * t2335;
t2174 = t2268 + t2558;
t1991 = t2039 * t2341 - t2174 * t2336;
t2037 = t2141 * t2335 - t2143 * t2340;
t2430 = t1991 * t2337 - t2037 * t2342;
t2140 = -t2245 + t2347;
t2038 = t2140 * t2340 + t2144 * t2335;
t2230 = t2268 - t2558;
t1995 = t2038 * t2341 + t2230 * t2336;
t2036 = t2140 * t2335 - t2144 * t2340;
t2429 = t1995 * t2337 - t2036 * t2342;
t2193 = -t2291 - t2558;
t2095 = t2193 * t2340 - t2605;
t2021 = t2095 * t2341 - t2140 * t2336;
t2094 = t2193 * t2335 + t2598;
t2428 = t2021 * t2337 - t2094 * t2342;
t2217 = -t2268 - t2291;
t2103 = -t2217 * t2335 - t2524;
t2029 = t2103 * t2341 - t2144 * t2336;
t2102 = t2217 * t2340 - t2525;
t2427 = t2029 * t2337 - t2102 * t2342;
t2426 = t2031 * t2337 - t2201 * t2342;
t2239 = -t2268 + t2291;
t2123 = -t2239 * t2335 + t2598;
t2034 = t2123 * t2341 + t2143 * t2336;
t2121 = t2239 * t2340 + t2605;
t2425 = t2034 * t2337 - t2121 * t2342;
t2238 = -t2291 + t2558;
t2124 = t2238 * t2340 - t2525;
t2035 = t2124 * t2341 + t2141 * t2336;
t2122 = t2238 * t2335 + t2524;
t2424 = t2035 * t2337 - t2122 * t2342;
t2136 = t2269 * t2508 + t2335 * t2345;
t2082 = t2136 * t2341 - t2482;
t2135 = -t2269 * t2509 + t2340 * t2345;
t2423 = t2082 * t2337 + t2135 * t2342;
t2138 = t2173 * t2340 - t2270 * t2509;
t2083 = t2138 * t2341 + t2482;
t2137 = t2173 * t2335 + t2270 * t2508;
t2422 = t2083 * t2337 - t2137 * t2342;
t2030 = -t2126 * t2341 + t2127 * t2336;
t2168 = (-t2269 * t2340 + t2270 * t2335) * t2293;
t2134 = t2168 * t2341 + t2249 * t2336;
t2167 = (-t2269 * t2335 - t2270 * t2340) * t2293;
t2421 = t2134 * t2337 - t2167 * t2342;
t2147 = -t2213 * t2336 - t2341 * t2591;
t2261 = t2295 - t2294;
t2420 = t2147 * t2337 - t2261 * t2342;
t2212 = (-qJD(3) - t2321) * t2298 + t2358;
t2214 = -t2280 + t2349;
t2148 = t2212 * t2341 + t2214 * t2336;
t2236 = t2294 + t2295;
t2419 = t2148 * t2337 + t2236 * t2342;
t2255 = -t2556 - t2294;
t2171 = t2255 * t2341 - t2579;
t2418 = t2171 * t2337 - t2342 * t2591;
t2262 = -t2295 - t2556;
t2178 = -t2262 * t2336 + t2517;
t2215 = (qJD(3) - t2321) * t2296 + t2352;
t2417 = t2178 * t2337 + t2215 * t2342;
t2274 = -t2295 + t2556;
t2191 = -t2274 * t2336 + t2578;
t2416 = t2191 * t2337 - t2214 * t2342;
t2273 = t2294 - t2556;
t2192 = t2273 * t2341 + t2518;
t2210 = t2281 + t2354;
t2415 = t2192 * t2337 + t2210 * t2342;
t2257 = t2342 * t2300 + t2355;
t2414 = -t2256 * t2342 + t2257 * t2337;
t2175 = t2256 * t2337 + t2257 * t2342;
t2403 = t2332 * t2452;
t2311 = t2342 * t2403;
t2276 = t2311 + t2377;
t2310 = t2337 * t2403;
t2279 = -t2310 - t2376;
t2413 = t2276 * t2342 + t2279 * t2337;
t2277 = -t2311 + t2377;
t2278 = t2310 - t2376;
t2412 = -t2277 * t2342 + t2278 * t2337;
t2411 = t2292 * t2342 - t2503;
t2305 = t2467 - t2478;
t2410 = t2305 * t2342 + t2505;
t2409 = t2307 * t2337 + t2504;
t2306 = -t2467 + t2477;
t2408 = t2306 * t2337 + t2502;
t2407 = t2322 * t2343 - t2338 * t2323;
t2406 = t2332 * t2468;
t2404 = -t1858 + t2625;
t2205 = -t2296 * t2500 + t2336 * t2354;
t2401 = t2205 * t2337 + t2479;
t2207 = t2298 * t2501 + t2341 * t2349;
t2400 = t2207 * t2337 - t2479;
t2396 = pkin(3) * t2140 + pkin(10) * t2095 - t2529;
t2395 = pkin(3) * t2144 + pkin(10) * t2103 + t2530;
t2394 = pkin(5) * t2132 + qJ(6) * t2572 + t2450;
t1721 = pkin(11) * t1760 + (t2474 - t2550) * t1861;
t1732 = -pkin(11) * t1759 + (pkin(5) * t2334 - t2547) * t1861;
t1691 = -pkin(10) * t1725 - t1721 * t2335 + t1732 * t2340;
t1703 = -pkin(3) * t1725 - t2465;
t1717 = t1726 * t2336 - t1861 * t2341;
t1673 = -pkin(9) * t1717 + t1691 * t2341 - t1703 * t2336;
t2367 = -pkin(3) * t1861 + pkin(10) * t1726 + t1721 * t2340 + t1732 * t2335;
t1681 = -pkin(2) * t1717 - t2367;
t1700 = t1718 * t2342 + t1725 * t2337;
t2393 = pkin(8) * t1700 + t1673 * t2337 + t1681 * t2342;
t1763 = -pkin(4) * t1979 + pkin(11) * t1777;
t1708 = -pkin(10) * t1735 - pkin(11) * t2540 - t1763 * t2335;
t1716 = -pkin(3) * t1735 - t2552;
t1729 = t1736 * t2336 - t1979 * t2341;
t1682 = -pkin(9) * t1729 + t1708 * t2341 - t1716 * t2336;
t2360 = -pkin(3) * t1979 + pkin(10) * t1736 - pkin(11) * t2541 + t1763 * t2340;
t1692 = -pkin(2) * t1729 - t2360;
t1707 = t1730 * t2342 + t1735 * t2337;
t2392 = pkin(8) * t1707 + t1682 * t2337 + t1692 * t2342;
t1814 = -pkin(5) * t2088 + t1822;
t1815 = -qJ(6) * t2088 + t1824;
t1746 = pkin(11) * t1941 + t1814 * t2339 + t1815 * t2334 - t2626;
t1751 = -pkin(11) * t1937 - t1814 * t2334 + t1815 * t2339;
t1709 = -pkin(10) * t1849 - t1746 * t2335 + t1751 * t2340;
t1770 = -pkin(3) * t1849 - t2463;
t1825 = t1853 * t2336 - t2621;
t1697 = -pkin(9) * t1825 + t1709 * t2341 - t1770 * t2336;
t2366 = pkin(10) * t1853 + t1746 * t2340 + t1751 * t2335 - t2627;
t1705 = -pkin(2) * t1825 - t2366;
t1764 = t1827 * t2342 + t1849 * t2337;
t2391 = pkin(8) * t1764 + t1697 * t2337 + t1705 * t2342;
t1757 = pkin(11) * t1943 + t1777 - t2626;
t1758 = -pkin(11) * t1939 - t1776;
t1715 = -pkin(10) * t1851 - t1757 * t2335 + t1758 * t2340;
t1810 = -pkin(3) * t1851 - t2551;
t1826 = t1855 * t2336 - t2621;
t1704 = -pkin(9) * t1826 + t1715 * t2341 - t1810 * t2336;
t2365 = pkin(10) * t1855 + t1757 * t2340 + t1758 * t2335 - t2627;
t1710 = -pkin(2) * t1826 - t2365;
t1765 = t1828 * t2342 + t1851 * t2337;
t2390 = pkin(8) * t1765 + t1704 * t2337 + t1710 * t2342;
t2350 = 0.2e1 * qJD(6) * t2223 - t2351;
t1835 = -pkin(5) * t2185 + t2350 + t2606;
t1778 = -t2661 + t1835 * t2334 + (pkin(4) + t2550) * t2575;
t1804 = -pkin(5) * t2531 + t1835 * t2339 - t2662;
t1734 = -t1778 * t2335 + t1804 * t2340 - t2689;
t2370 = t2394 + t2664;
t1767 = -t2370 - 0.2e1 * t2542 - t2690;
t1713 = t1734 * t2341 - t1767 * t2336 + t2703;
t2364 = t1778 * t2340 + t1804 * t2335 + t2680;
t1722 = -t2364 + t2704;
t2389 = t1713 * t2337 + t1722 * t2342 - t2711;
t1836 = (-t2576 - t2185) * pkin(5) + t2350;
t1780 = t1836 * t2339 + t2474 * t2576 + t2624;
t1806 = -t1836 * t2334 - t2547 * t2576 - t2623;
t1739 = -t1780 * t2335 + t1806 * t2340 - t2645;
t2357 = pkin(5) * t2570 + qJ(6) * t2568 - t1824;
t2353 = t2357 + t2625;
t1771 = -t2353 - t2646;
t1714 = t1739 * t2341 - t1771 * t2336 - t2663;
t2363 = t1780 * t2340 + t1806 * t2335 + t2636;
t1724 = -t2363 - t2665;
t2388 = t1714 * t2337 + t1724 * t2342 + t2674;
t1871 = -pkin(4) * t2576 - t2537 + t2624;
t1917 = t2538 - t2623;
t1779 = -t1871 * t2335 + t1917 * t2340 - t2645;
t1794 = -t2404 - t2646;
t1728 = t1779 * t2341 - t1794 * t2336 - t2663;
t2362 = t1871 * t2340 + t1917 * t2335 + t2636;
t1754 = -t2362 - t2665;
t2387 = t1728 * t2337 + t1754 * t2342 + t2674;
t1876 = -pkin(4) * t2575 + t2538 + t2661;
t1920 = t2537 + t2662;
t1793 = -t1876 * t2335 + t1920 * t2340 + t2689;
t1805 = -t2464 + t2690;
t1733 = t1793 * t2341 - t1805 * t2336 - t2703;
t2361 = t1876 * t2340 + t1920 * t2335 - t2680;
t1756 = -t2361 - t2704;
t2386 = t1733 * t2337 + t1756 * t2342 + t2711;
t1867 = t1890 * t2336 - t2073 * t2341;
t1766 = -pkin(9) * t1867 + (-pkin(10) * t2341 + t2553) * t1889;
t1803 = -pkin(2) * t1867 - t2460;
t1812 = t1868 * t2342 + t1889 * t2337;
t2385 = pkin(8) * t1812 + t1766 * t2337 + t1803 * t2342;
t1862 = -pkin(10) * t2037 - t1889;
t1990 = t2039 * t2336 + t2174 * t2341;
t1813 = -pkin(9) * t1990 + t1862 * t2341 + t2037 * t2553;
t2374 = pkin(3) * t2174 + pkin(10) * t2039 + t1890;
t1818 = -pkin(2) * t1990 - t2374;
t1944 = t1991 * t2342 + t2037 * t2337;
t2384 = pkin(8) * t1944 + t1813 * t2337 + t1818 * t2342;
t1952 = -pkin(3) * t2094 + t1977;
t1980 = -pkin(10) * t2094 + t2530;
t2020 = t2095 * t2336 + t2140 * t2341;
t1847 = -pkin(9) * t2020 - t1952 * t2336 + t1980 * t2341;
t1891 = -pkin(2) * t2020 - t2396;
t1970 = t2021 * t2342 + t2094 * t2337;
t2383 = pkin(8) * t1970 + t1847 * t2337 + t1891 * t2342;
t1953 = -pkin(3) * t2102 + t1978;
t1983 = -pkin(10) * t2102 + t2529;
t2028 = t2103 * t2336 + t2144 * t2341;
t1856 = -pkin(9) * t2028 - t1953 * t2336 + t1983 * t2341;
t1900 = -pkin(2) * t2028 - t2395;
t1972 = t2029 * t2342 + t2102 * t2337;
t2382 = pkin(8) * t1972 + t1856 * t2337 + t1900 * t2342;
t2170 = t2255 * t2336 + t2578;
t2062 = -pkin(2) * t2170 + t2126;
t2109 = -pkin(9) * t2170 + t2522;
t2117 = t2171 * t2342 + t2337 * t2591;
t2381 = pkin(8) * t2117 + t2062 * t2342 + t2109 * t2337;
t2177 = t2262 * t2341 + t2518;
t2065 = -pkin(2) * t2177 + t2127;
t2118 = -pkin(9) * t2177 + t2521;
t2119 = t2178 * t2342 - t2215 * t2337;
t2380 = pkin(8) * t2119 + t2065 * t2342 + t2118 * t2337;
t2232 = t2277 * t2337 + t2278 * t2342;
t2379 = pkin(8) * t2232 + t2175;
t2146 = t2212 * t2336 - t2214 * t2341;
t1975 = -pkin(9) * t2146 - t2030;
t2087 = t2148 * t2342 - t2236 * t2337;
t2375 = pkin(8) * t2087 + t1975 * t2337 - t2146 * t2554;
t1988 = t2031 * t2342 + t2201 * t2337;
t2372 = pkin(8) * t1988 + t2030 * t2462;
t2275 = (t2472 * t2543 + t2490) * t2332;
t2318 = t2338 * qJDD(1) + t2343 * t2560;
t2315 = t2333 * t2468;
t2309 = t2491 * t2499;
t2308 = (t2330 - t2331) * t2499;
t2304 = -pkin(7) * t2318 + g(3) * t2343;
t2282 = t2473 * t2491 * t2546;
t2272 = (-t2330 * t2452 + t2342 * t2399) * t2332;
t2271 = (-t2331 * t2452 + t2337 * t2398) * t2332;
t2265 = t2306 * t2342 - t2503;
t2264 = -t2305 * t2337 + t2504;
t2254 = t2275 * t2496 + t2466;
t2253 = t2399 * t2580 + t2451;
t2252 = -t2329 * t2342 * t2398 - t2451;
t2251 = -t2466 + (-t2472 * t2544 + t2489) * t2332 * t2495;
t2234 = (t2296 * t2336 + t2298 * t2341) * t2321;
t2233 = -t2276 * t2337 + t2279 * t2342;
t2229 = t2279 * t2332 + t2333 * t2409;
t2228 = -t2278 * t2332 + t2333 * t2408;
t2227 = -t2277 * t2332 + t2333 * t2410;
t2226 = -t2279 * t2333 + t2332 * t2409;
t2225 = t2278 * t2333 + t2332 * t2408;
t2224 = t2277 * t2333 + t2332 * t2410;
t2209 = -t2275 * t2332 + t2333 * t2411;
t2208 = t2275 * t2333 + t2332 * t2411;
t2206 = -t2298 * t2500 + t2336 * t2349;
t2204 = -t2296 * t2501 - t2341 * t2354;
t2203 = t2342 * t2235 + t2337 * t2368;
t2200 = -t2308 * t2332 + t2333 * t2413;
t2199 = t2309 * t2332 + t2333 * t2412;
t2198 = t2308 * t2333 + t2332 * t2413;
t2197 = -t2309 * t2333 + t2332 * t2412;
t2190 = t2273 * t2336 - t2517;
t2189 = t2274 * t2341 + t2579;
t2160 = t2207 * t2342 + t2480;
t2159 = t2205 * t2342 - t2480;
t2158 = t2283 * t2332 + t2333 * t2414;
t2157 = -t2283 * t2333 + t2332 * t2414;
t2150 = -t2332 * t2234 + t2333 * t2590;
t2149 = t2333 * t2234 + t2332 * t2590;
t2145 = t2213 * t2341 - t2336 * t2591;
t2133 = t2168 * t2336 - t2249 * t2341;
t2129 = t2192 * t2342 - t2210 * t2337;
t2128 = t2191 * t2342 + t2214 * t2337;
t2120 = -t2513 + (-t2226 * t2332 - t2229 * t2333) * pkin(8);
t2116 = -t2512 + (-t2208 * t2332 - t2209 * t2333) * pkin(8);
t2115 = -pkin(1) * t2226 + t2256 * t2332 + t2333 * t2453;
t2114 = pkin(1) * t2229 - t2256 * t2333 + t2332 * t2453;
t2098 = t2147 * t2342 + t2261 * t2337;
t2097 = -pkin(1) * t2208 + t2257 * t2332 + t2333 * t2454;
t2096 = pkin(1) * t2209 - t2257 * t2333 + t2332 * t2454;
t2093 = -t2206 * t2332 + t2333 * t2400;
t2092 = -t2204 * t2332 + t2333 * t2401;
t2091 = t2206 * t2333 + t2332 * t2400;
t2090 = t2204 * t2333 + t2332 * t2401;
t2085 = pkin(1) * t2158 + t2175 * t2549;
t2084 = pkin(8) * t2175 * t2333 - pkin(1) * t2157;
t2081 = t2138 * t2336 - t2481;
t2080 = t2136 * t2336 + t2481;
t2076 = -pkin(1) * t2197 + t2333 * t2379;
t2075 = pkin(1) * t2199 + t2332 * t2379;
t2072 = pkin(2) * t2215 + pkin(9) * t2178 + t2522;
t2070 = -t2190 * t2332 + t2333 * t2415;
t2069 = -t2189 * t2332 + t2333 * t2416;
t2068 = t2190 * t2333 + t2332 * t2415;
t2067 = t2189 * t2333 + t2332 * t2416;
t2066 = (-t2157 * t2332 - t2158 * t2333) * pkin(8);
t2064 = -pkin(2) * t2591 + pkin(9) * t2171 - t2521;
t2063 = (-t2197 * t2332 - t2199 * t2333) * pkin(8) - t2414;
t2061 = -t2177 * t2332 + t2333 * t2417;
t2060 = t2177 * t2333 + t2332 * t2417;
t2059 = t2134 * t2342 + t2167 * t2337;
t2045 = -t2170 * t2332 + t2333 * t2418;
t2044 = t2170 * t2333 + t2332 * t2418;
t2033 = t2124 * t2336 - t2141 * t2341;
t2032 = t2123 * t2336 - t2143 * t2341;
t2027 = -t2145 * t2332 + t2333 * t2420;
t2026 = t2145 * t2333 + t2332 * t2420;
t2010 = -t2146 * t2332 + t2333 * t2419;
t2009 = t2146 * t2333 + t2332 * t2419;
t1994 = t2038 * t2336 - t2230 * t2341;
t1993 = t2083 * t2342 + t2137 * t2337;
t1992 = t2082 * t2342 - t2135 * t2337;
t1989 = -pkin(2) * t2201 + pkin(9) * t2031;
t1982 = -t2133 * t2332 + t2333 * t2421;
t1981 = t2133 * t2333 + t2332 * t2421;
t1974 = t2035 * t2342 + t2122 * t2337;
t1973 = t2034 * t2342 + t2121 * t2337;
t1971 = pkin(2) * t2236 + pkin(9) * t2148 + t2031;
t1957 = -t2081 * t2332 + t2333 * t2422;
t1956 = -t2080 * t2332 + t2333 * t2423;
t1955 = t2081 * t2333 + t2332 * t2422;
t1954 = t2080 * t2333 + t2332 * t2423;
t1949 = t1995 * t2342 + t2036 * t2337;
t1922 = -t2030 * t2332 + t2333 * t2426;
t1921 = t2030 * t2333 + t2332 * t2426;
t1916 = -t2033 * t2332 + t2333 * t2424;
t1915 = -t2032 * t2332 + t2333 * t2425;
t1914 = t2033 * t2333 + t2332 * t2424;
t1913 = t2032 * t2333 + t2332 * t2425;
t1912 = -t2028 * t2332 + t2333 * t2427;
t1911 = t2028 * t2333 + t2332 * t2427;
t1902 = -t2020 * t2332 + t2333 * t2428;
t1901 = t2020 * t2333 + t2332 * t2428;
t1884 = -t2065 * t2337 + t2118 * t2342 + (-t2060 * t2332 - t2061 * t2333) * pkin(8);
t1883 = -t2062 * t2337 + t2109 * t2342 + (-t2044 * t2332 - t2045 * t2333) * pkin(8);
t1882 = -t1994 * t2332 + t2333 * t2429;
t1881 = t1994 * t2333 + t2332 * t2429;
t1875 = -pkin(1) * t2060 - t2072 * t2332 + t2333 * t2380;
t1874 = pkin(1) * t2061 + t2072 * t2333 + t2332 * t2380;
t1873 = -t1990 * t2332 + t2333 * t2430;
t1872 = t1990 * t2333 + t2332 * t2430;
t1870 = -pkin(1) * t2044 - t2064 * t2332 + t2333 * t2381;
t1869 = pkin(1) * t2045 + t2064 * t2333 + t2332 * t2381;
t1860 = t2146 * t2555 + t1975 * t2342 + (-t2009 * t2332 - t2010 * t2333) * pkin(8);
t1834 = -pkin(2) * t2102 + pkin(9) * t2029 + t1953 * t2341 + t1983 * t2336;
t1829 = -pkin(2) * t2094 + pkin(9) * t2021 + t1952 * t2341 + t1980 * t2336;
t1820 = -pkin(1) * t2009 - t1971 * t2332 + t2333 * t2375;
t1819 = pkin(1) * t2010 + t1971 * t2333 + t2332 * t2375;
t1811 = t2461 * t2030 + (-t1921 * t2332 - t1922 * t2333) * pkin(8);
t1809 = -pkin(1) * t1921 - t1989 * t2332 + t2333 * t2372;
t1808 = pkin(1) * t1922 + t1989 * t2333 + t2332 * t2372;
t1807 = pkin(9) * t1991 + t1862 * t2336 + t2037 * t2488;
t1762 = -t1867 * t2332 + t2333 * t2443;
t1761 = t1867 * t2333 + t2332 * t2443;
t1755 = pkin(9) * t1868 + (-pkin(10) * t2336 + t2488) * t1889;
t1753 = t1856 * t2342 - t1900 * t2337 + (-t1911 * t2332 - t1912 * t2333) * pkin(8);
t1752 = t1847 * t2342 - t1891 * t2337 + (-t1901 * t2332 - t1902 * t2333) * pkin(8);
t1745 = -t1826 * t2332 + t2333 * t2446;
t1744 = -t1825 * t2332 + t2333 * t2447;
t1743 = t1826 * t2333 + t2332 * t2446;
t1742 = t1825 * t2333 + t2332 * t2447;
t1741 = -pkin(1) * t1911 - t1834 * t2332 + t2333 * t2382;
t1740 = pkin(1) * t1912 + t1834 * t2333 + t2332 * t2382;
t1738 = -pkin(1) * t1901 - t1829 * t2332 + t2333 * t2383;
t1737 = pkin(1) * t1902 + t1829 * t2333 + t2332 * t2383;
t1731 = t1813 * t2342 - t1818 * t2337 + (-t1872 * t2332 - t1873 * t2333) * pkin(8);
t1727 = t1793 * t2336 + t1805 * t2341 - t2696;
t1723 = t1779 * t2336 + t1794 * t2341 + t2656;
t1720 = -pkin(1) * t1872 - t1807 * t2332 + t2333 * t2384;
t1719 = pkin(1) * t1873 + t1807 * t2333 + t2332 * t2384;
t1712 = t1739 * t2336 + t1771 * t2341 + t2656;
t1711 = t1734 * t2336 + t1767 * t2341 + t2696;
t1706 = t1766 * t2342 - t1803 * t2337 + (-t1761 * t2332 - t1762 * t2333) * pkin(8);
t1702 = -pkin(2) * t1851 + pkin(9) * t1828 + t1715 * t2336 + t1810 * t2341;
t1701 = t1733 * t2342 - t1756 * t2337 - t2721;
t1699 = -pkin(1) * t1761 - t1755 * t2332 + t2333 * t2385;
t1698 = pkin(1) * t1762 + t1755 * t2333 + t2332 * t2385;
t1696 = t1728 * t2342 - t1754 * t2337 + t2675;
t1695 = -pkin(2) * t1849 + pkin(9) * t1827 + t1709 * t2336 + t1770 * t2341;
t1694 = -t1729 * t2332 + t2333 * t2448;
t1693 = t1729 * t2333 + t2332 * t2448;
t1690 = -t1727 * t2332 + t2333 * t2386 - t2720;
t1689 = t1727 * t2333 + t2332 * t2386 + t2719;
t1688 = t1714 * t2342 - t1724 * t2337 + t2675;
t1687 = -t1723 * t2332 + t2333 * t2387 - t2692;
t1686 = t1723 * t2333 + t2332 * t2387 + t2693;
t1685 = t1713 * t2342 - t1722 * t2337 + t2721;
t1684 = -t1717 * t2332 + t2333 * t2449;
t1683 = t1717 * t2333 + t2332 * t2449;
t1680 = -t1712 * t2332 + t2333 * t2388 - t2692;
t1679 = t1712 * t2333 + t2332 * t2388 + t2693;
t1678 = -pkin(2) * t1735 + pkin(9) * t1730 + t1708 * t2336 + t1716 * t2341;
t1677 = -t1711 * t2332 + t2333 * t2389 + t2720;
t1676 = t1711 * t2333 + t2332 * t2389 - t2719;
t1675 = t1704 * t2342 - t1710 * t2337 + (-t1743 * t2332 - t1745 * t2333) * pkin(8);
t1674 = t1697 * t2342 - t1705 * t2337 + (-t1742 * t2332 - t1744 * t2333) * pkin(8);
t1672 = -pkin(1) * t1743 - t1702 * t2332 + t2333 * t2390;
t1671 = pkin(1) * t1745 + t1702 * t2333 + t2332 * t2390;
t1670 = -pkin(2) * t1725 + pkin(9) * t1718 + t1691 * t2336 + t1703 * t2341;
t1669 = -pkin(1) * t1742 - t1695 * t2332 + t2333 * t2391;
t1668 = pkin(1) * t1744 + t1695 * t2333 + t2332 * t2391;
t1667 = t1682 * t2342 - t1692 * t2337 + (-t1693 * t2332 - t1694 * t2333) * pkin(8);
t1666 = -pkin(1) * t1693 - t1678 * t2332 + t2333 * t2392;
t1665 = pkin(1) * t1694 + t1678 * t2333 + t2332 * t2392;
t1664 = t1673 * t2342 - t1681 * t2337 + (-t1683 * t2332 - t1684 * t2333) * pkin(8);
t1663 = -pkin(1) * t1683 - t1670 * t2332 + t2333 * t2393;
t1662 = pkin(1) * t1684 + t1670 * t2333 + t2332 * t2393;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2319, 0, -t2318, 0, t2459, -t2304, -t2407, -pkin(7) * t2407, -t2338 * t2254 + t2272 * t2343, -t2338 * t2200 + t2233 * t2343, -t2338 * t2227 + t2264 * t2343, -t2338 * t2251 + t2271 * t2343, -t2338 * t2228 + t2265 * t2343, t2343 * t2282 + t2338 * t2406, t2343 * t2120 - t2338 * t2115 - pkin(7) * (t2229 * t2343 + t2338 * t2266), t2343 * t2116 - t2338 * t2097 - pkin(7) * (t2209 * t2343 + t2338 * t2259), t2343 * t2063 - t2338 * t2076 - pkin(7) * (t2199 * t2343 + t2338 * t2232), t2343 * t2066 - t2338 * t2084 - pkin(7) * (t2158 * t2343 + t2338 * t2175), -t2338 * t2093 + t2160 * t2343, -t2338 * t2027 + t2098 * t2343, -t2338 * t2069 + t2128 * t2343, -t2338 * t2092 + t2159 * t2343, -t2338 * t2070 + t2129 * t2343, -t2338 * t2150 + t2203 * t2343, t2343 * t1883 - t2338 * t1870 - pkin(7) * (t2045 * t2343 + t2338 * t2117), t2343 * t1884 - t2338 * t1875 - pkin(7) * (t2061 * t2343 + t2338 * t2119), t2343 * t1860 - t2338 * t1820 - pkin(7) * (t2010 * t2343 + t2338 * t2087), t2343 * t1811 - t2338 * t1809 - pkin(7) * (t1922 * t2343 + t2338 * t1988), -t2338 * t1957 + t1993 * t2343, -t2338 * t1882 + t1949 * t2343, -t2338 * t1915 + t1973 * t2343, -t2338 * t1956 + t1992 * t2343, -t2338 * t1916 + t1974 * t2343, -t2338 * t1982 + t2059 * t2343, t2343 * t1752 - t2338 * t1738 - pkin(7) * (t1902 * t2343 + t2338 * t1970), t2343 * t1753 - t2338 * t1741 - pkin(7) * (t1912 * t2343 + t2338 * t1972), t2343 * t1731 - t2338 * t1720 - pkin(7) * (t1873 * t2343 + t2338 * t1944), t2343 * t1706 - t2338 * t1699 - pkin(7) * (t1762 * t2343 + t2338 * t1812), t2582, -t2718, t2695, t2652, t2714, t2653, -t2338 * t1687 + t2343 * t1696 - t2676, -t2338 * t1690 + t2343 * t1701 - t2723, t2343 * t1675 - t2338 * t1672 - pkin(7) * (t1745 * t2343 + t2338 * t1765), t2343 * t1667 - t2338 * t1666 - pkin(7) * (t1694 * t2343 + t2338 * t1707), t2582, t2695, t2718, t2653, -t2714, t2652, -t2338 * t1680 + t2343 * t1688 - t2676, t2343 * t1674 - t2338 * t1669 - pkin(7) * (t1744 * t2343 + t2338 * t1764), -t2338 * t1677 + t2343 * t1685 + t2723, t2343 * t1664 - t2338 * t1663 - pkin(7) * (t1684 * t2343 + t2338 * t1700); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2318, 0, t2319, 0, t2304, t2459, t2469, pkin(7) * t2469, t2254 * t2343 + t2338 * t2272, t2200 * t2343 + t2338 * t2233, t2227 * t2343 + t2338 * t2264, t2251 * t2343 + t2338 * t2271, t2228 * t2343 + t2338 * t2265, t2338 * t2282 - t2343 * t2406, t2338 * t2120 + t2343 * t2115 + pkin(7) * (-t2338 * t2229 + t2266 * t2343), t2338 * t2116 + t2343 * t2097 + pkin(7) * (-t2338 * t2209 + t2259 * t2343), t2338 * t2063 + t2343 * t2076 + pkin(7) * (-t2338 * t2199 + t2232 * t2343), t2338 * t2066 + t2343 * t2084 + pkin(7) * (-t2338 * t2158 + t2175 * t2343), t2093 * t2343 + t2338 * t2160, t2027 * t2343 + t2338 * t2098, t2069 * t2343 + t2338 * t2128, t2092 * t2343 + t2338 * t2159, t2070 * t2343 + t2338 * t2129, t2150 * t2343 + t2338 * t2203, t2338 * t1883 + t2343 * t1870 + pkin(7) * (-t2338 * t2045 + t2117 * t2343), t2338 * t1884 + t2343 * t1875 + pkin(7) * (-t2338 * t2061 + t2119 * t2343), t2338 * t1860 + t2343 * t1820 + pkin(7) * (-t2338 * t2010 + t2087 * t2343), t2338 * t1811 + t2343 * t1809 + pkin(7) * (-t2338 * t1922 + t1988 * t2343), t1957 * t2343 + t2338 * t1993, t1882 * t2343 + t2338 * t1949, t1915 * t2343 + t2338 * t1973, t1956 * t2343 + t2338 * t1992, t1916 * t2343 + t2338 * t1974, t1982 * t2343 + t2338 * t2059, t2338 * t1752 + t2343 * t1738 + pkin(7) * (-t2338 * t1902 + t1970 * t2343), t2338 * t1753 + t2343 * t1741 + pkin(7) * (-t2338 * t1912 + t1972 * t2343), t2338 * t1731 + t2343 * t1720 + pkin(7) * (-t2338 * t1873 + t1944 * t2343), t2338 * t1706 + t2343 * t1699 + pkin(7) * (-t2338 * t1762 + t1812 * t2343), t2583, t2717, t2694, t2648, -t2713, t2649, t2343 * t1687 + t2338 * t1696 + t2677, t2343 * t1690 + t2338 * t1701 - t2722, t2338 * t1675 + t2343 * t1672 + pkin(7) * (-t2338 * t1745 + t1765 * t2343), t2338 * t1667 + t2343 * t1666 + pkin(7) * (-t2338 * t1694 + t1707 * t2343), t2583, t2694, -t2717, t2649, t2713, t2648, t2343 * t1680 + t2338 * t1688 + t2677, t2338 * t1674 + t2343 * t1669 + pkin(7) * (-t2338 * t1744 + t1764 * t2343), t2343 * t1677 + t2338 * t1685 + t2722, t2338 * t1664 + t2343 * t1663 + pkin(7) * (-t2338 * t1684 + t1700 * t2343); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2322, t2323, 0, 0, t2253, t2198, t2224, t2252, t2225, t2315, t2114, t2096, t2075, t2085, t2091, t2026, t2067, t2090, t2068, t2149, t1869, t1874, t1819, t1808, t1955, t1881, t1913, t1954, t1914, t1981, t1737, t1740, t1719, t1698, t2562, t1748, t2679, t2635, -t1797, t2634, t1686, t1689, t1671, t1665, t2562, t2679, -t1748, t2634, t1797, t2635, t1679, t1668, t1676, t1662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2560, 0, 0, -g(3), -t2322, 0, t2272, t2233, t2264, t2271, t2265, t2282, t2120, t2116, t2063, t2066, t2160, t2098, t2128, t2159, t2129, t2203, t1883, t1884, t1860, t1811, t1993, t1949, t1973, t1992, t1974, t2059, t1752, t1753, t1731, t1706, t2567, t1769, t2666, t2611, -t1845, t2612, t1696, t1701, t1675, t1667, t2567, t2666, -t1769, t2612, t1845, t2611, t1688, t1674, t1685, t1664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2560, 0, qJDD(1), 0, g(3), 0, -t2323, 0, t2254, t2200, t2227, t2251, t2228, -t2406, t2115, t2097, t2076, t2084, t2093, t2027, t2069, t2092, t2070, t2150, t1870, t1875, t1820, t1809, t1957, t1882, t1915, t1956, t1916, t1982, t1738, t1741, t1720, t1699, t2561, t1750, t2678, t2633, -t1801, t2632, t1687, t1690, t1672, t1666, t2561, t2678, -t1750, t2632, t1801, t2633, t1680, t1669, t1677, t1663; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2322, t2323, 0, 0, t2253, t2198, t2224, t2252, t2225, t2315, t2114, t2096, t2075, t2085, t2091, t2026, t2067, t2090, t2068, t2149, t1869, t1874, t1819, t1808, t1955, t1881, t1913, t1954, t1914, t1981, t1737, t1740, t1719, t1698, t2562, t1748, t2679, t2635, -t1797, t2634, t1686, t1689, t1671, t1665, t2562, t2679, -t1748, t2634, t1797, t2635, t1679, t1668, t1676, t1662; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2377, t2279, t2301, -t2311, t2306, t2311, 0, -t2283, t2256, 0, t2207, t2147, t2191, t2205, t2192, t2235, t2109, t2118, t1975, -pkin(9) * t2030, t2083, t1995, t2034, t2082, t2035, t2134, t1847, t1856, t1813, t1766, t2457, t1840, t2651, t2585, -t1898, t2584, t1728, t1733, t1704, t1682, t2457, t2651, -t1840, t2584, t1898, t2585, t1714, t1697, t1713, t1673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2310, t2276, t2305, -t2376, t2302, -t2310, t2283, 0, t2257, 0, -t2506, -t2261, -t2214, t2506, t2210, -t2368, t2062, t2065, -pkin(2) * t2146, -pkin(2) * t2030, -t2137, -t2036, -t2121, t2135, -t2122, -t2167, t1891, t1900, t1818, t1803, -t1929, -t1850, -t2629, -t2563, -t1965, -t2566, t1754, t1756, t1710, t1692, -t1929, -t2629, t1850, -t2566, t1965, -t2563, t1724, t1705, t1722, t1681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2320, t2308, t2277, t2320, t2278, t2468, -t2256, -t2257, 0, 0, t2206, t2145, t2189, t2204, t2190, t2234, t2064, t2072, t1971, t1989, t2081, t1994, t2032, t2080, t2033, t2133, t1829, t1834, t1807, t1755, t2458, t1838, t2655, t2587, -t1894, t2588, t1723, t1727, t1702, t1678, t2458, t2655, -t1838, t2588, t1894, t2587, t1712, t1695, t1711, t1670; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2349, -t2591, t2356, -t2280, t2273, t2280, 0, t2201, t2126, 0, t2138, t2038, t2123, t2136, t2124, t2168, t1980, t1983, t1862, -pkin(10) * t1889, t1932, t1854, t2628, t2564, -t1968, t2565, t1779, t1793, t1715, t1708, t1932, t2628, -t1854, t2565, t1968, t2564, t1739, t1709, t1734, t1691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2281, t2213, t2274, -t2354, -t2240, t2281, -t2201, 0, t2127, 0, -t2231, -t2230, -t2143, t2231, -t2141, -t2249, t1952, t1953, -pkin(3) * t2037, -pkin(3) * t1889, -t2519, -t2574, -t2569, t2519, t2012, -t2248, t1794, t1805, t1810, t1716, -t2519, -t2569, t2574, -t2248, -t2012, t2519, t1771, t1770, t1767, t1703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2506, t2261, t2214, -t2506, -t2210, t2368, -t2126, -t2127, 0, 0, t2137, t2036, t2121, -t2135, t2122, t2167, t2396, t2395, t2374, t2460, t1929, t1850, t2629, t2563, t1965, t2566, t2362, t2361, t2365, t2360, t1929, t2629, -t1850, t2566, -t1965, t2563, t2363, t2366, t2364, t2367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2173, t2140, t2573, t2244, t2238, -t2244, 0, t2073, t1977, 0, t2005, t1942, t2616, t2402, t2053, t2455, t1917, t1920, t1758, -pkin(11) * t1776, t2005, t2616, -t1942, t2455, -t2053, t2402, t1806, t1751, t1804, t1732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2245, -t2144, t2239, -t2345, t2163, -t2245, -t2073, 0, t1978, 0, t2004, t1938, t2615, t2456, t2049, t2397, t1871, t1876, t1757, t1763, t2004, t2615, -t1938, t2397, -t2049, t2456, t1780, t1746, t1778, t1721; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2231, t2230, t2143, -t2231, t2141, t2249, -t1977, -t1978, 0, 0, t2519, t2574, t2569, -t2519, -t2012, t2248, t2404, t2464, t2551, t2552, t2519, t2569, -t2574, t2248, t2012, -t2519, t2353, t2463, t2284 + t2370, t2465; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2058, -t2576, t2570, t2520, t2181, -t2520, 0, t1979, t1858, 0, t2058, t2570, t2576, -t2520, -t2181, t2520, -qJ(6) * t2576, t1815, t1835, -qJ(6) * t1861; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2185, t2575, -t2182, -t2057, t2572, -t2185, -t1979, 0, t1859, 0, t2185, -t2182, -t2575, -t2185, -t2572, -t2057, t1836, t1814, pkin(5) * t2575, -pkin(5) * t1861; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2519, t2574, t2569, -t2519, -t2012, t2248, -t1858, -t1859, 0, 0, t2519, t2569, -t2574, t2248, t2012, -t2519, t2357, t2492, t2284 + t2394, t2493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2058, t2570, t2576, -t2520, -t2181, t2520, 0, t1824, -t1861, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2519, t2569, -t2574, t2248, t2012, -t2519, -t1824, 0, t1822, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2185, t2182, t2575, t2185, t2572, t2057, t1861, -t1822, 0, 0;];
m_new_reg  = t1;
