% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 02:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRP10_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP10_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP10_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRP10_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRP10_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP10_invdynJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 02:27:32
% EndTime: 2019-03-10 02:28:15
% DurationCPUTime: 21.30s
% Computational Cost: add. (22471->802), mult. (53688->1065), div. (0->0), fcn. (43244->14), ass. (0->356)
t330 = cos(qJ(2));
t323 = sin(pkin(6));
t469 = qJD(1) * t323;
t440 = t330 * t469;
t282 = -qJD(3) + t440;
t325 = sin(qJ(4));
t328 = cos(qJ(4));
t329 = cos(qJ(3));
t409 = t329 * t440;
t327 = sin(qJ(2));
t441 = t327 * t469;
t218 = t325 * t409 - t328 * t441;
t464 = qJD(3) * t329;
t585 = -t325 * t464 + t218;
t295 = pkin(8) * t440;
t511 = cos(pkin(6));
t418 = t511 * qJD(1);
t408 = pkin(1) * t418;
t247 = t327 * t408 + t295;
t326 = sin(qJ(3));
t588 = t247 + t282 * (pkin(3) * t326 - pkin(10) * t329);
t461 = qJD(4) * t328;
t584 = -t326 * t461 + t585;
t391 = t418 + qJD(2);
t354 = qJD(3) * t391;
t414 = t511 * qJDD(1);
t387 = t414 + qJDD(2);
t467 = qJD(2) * t330;
t438 = t326 * t467;
t458 = qJDD(1) * t327;
t129 = t323 * (qJD(1) * (t327 * t464 + t438) + t326 * t458) + t326 * t354 - t329 * t387;
t122 = qJDD(4) + t129;
t118 = qJDD(5) + t122;
t536 = cos(qJ(5));
t428 = t536 * qJD(5);
t587 = t328 * (t536 * qJD(4) + t428);
t466 = qJD(3) * t326;
t533 = pkin(9) * t325;
t586 = -t588 * t328 + t466 * t533;
t244 = -pkin(8) * t441 + t330 * t408;
t399 = pkin(2) * t327 - pkin(9) * t330;
t245 = t399 * t469;
t474 = t329 * t244 + t326 * t245;
t148 = pkin(10) * t441 + t474;
t275 = -pkin(3) * t329 - pkin(10) * t326 - pkin(2);
t462 = qJD(4) * t325;
t583 = -t275 * t461 - (-t328 * t466 - t329 * t462) * pkin(9) + t328 * t148 + t588 * t325;
t485 = t329 * t330;
t219 = (t325 * t327 + t328 * t485) * t469;
t559 = t328 * t464 - t219;
t545 = -t326 * t462 + t559;
t486 = t328 * t329;
t309 = pkin(9) * t486;
t410 = t326 * t440;
t582 = -pkin(4) * t410 + pkin(11) * t219 + t148 * t325 + (pkin(4) * t326 - pkin(11) * t486) * qJD(3) + (-t309 + (pkin(11) * t326 - t275) * t325) * qJD(4) + t586;
t581 = -pkin(11) * t584 + t583;
t331 = -pkin(11) - pkin(10);
t444 = qJD(4) * t331;
t205 = pkin(9) * t391 + t247;
t389 = -pkin(2) * t330 - pkin(9) * t327 - pkin(1);
t242 = t389 * t323;
t220 = qJD(1) * t242;
t127 = -t326 * t205 + t220 * t329;
t226 = t326 * t441 - t329 * t391;
t228 = t326 * t391 + t329 * t441;
t160 = pkin(3) * t228 + pkin(10) * t226;
t483 = t328 * t127 + t325 * t160;
t507 = t226 * t325;
t580 = pkin(11) * t507 - t325 * t444 + t483;
t155 = t328 * t160;
t506 = t226 * t328;
t579 = -pkin(4) * t228 - pkin(11) * t506 + t127 * t325 + t328 * t444 - t155;
t496 = t323 * t327;
t253 = t326 * t511 + t329 * t496;
t495 = t323 * t330;
t375 = -t253 * t328 + t325 * t495;
t578 = pkin(11) * t375;
t172 = -t325 * t228 - t282 * t328;
t173 = t228 * t328 - t282 * t325;
t324 = sin(qJ(5));
t370 = t324 * t172 + t536 * t173;
t108 = pkin(3) * t282 - t127;
t80 = -pkin(4) * t172 + t108;
t86 = -t536 * t172 + t173 * t324;
t35 = pkin(5) * t86 - qJ(6) * t370 + t80;
t577 = t35 * t86;
t576 = t80 * t86;
t523 = t370 * t86;
t265 = t324 * t328 + t536 * t325;
t548 = qJD(4) + qJD(5);
t186 = t548 * t265;
t407 = t536 * t464;
t482 = t186 * t326 + t536 * t219 - t324 * t585 - t328 * t407;
t460 = qJD(5) * t324;
t490 = t325 * t326;
t481 = -t536 * t218 + t324 * t545 + t325 * t407 + t326 * t587 - t460 * t490;
t388 = qJD(2) * t408;
t403 = pkin(1) * t414;
t423 = t323 * t458;
t412 = -pkin(8) * t423 - qJD(2) * t295 - t327 * t388 + t330 * t403;
t159 = -pkin(2) * t387 - t412;
t537 = cos(qJ(1));
t402 = t511 * t537;
t535 = sin(qJ(1));
t254 = t535 * t327 - t330 * t402;
t401 = t511 * t535;
t256 = t537 * t327 + t330 * t401;
t549 = g(1) * t256 + g(2) * t254;
t351 = -g(3) * t495 + t549;
t575 = t159 - t351;
t494 = t324 * t325;
t367 = t536 * t328 - t494;
t477 = t367 * t226 - t494 * t548 + t587;
t476 = t265 * t226 + t186;
t229 = t326 * t244;
t147 = -pkin(3) * t441 - t245 * t329 + t229;
t574 = pkin(9) * t464 - t147;
t257 = -t327 * t401 + t537 * t330;
t442 = t323 * t535;
t197 = t257 * t326 - t329 * t442;
t252 = t326 * t496 - t329 * t511;
t255 = t327 * t402 + t535 * t330;
t443 = t323 * t537;
t415 = -t255 * t326 - t329 * t443;
t356 = g(1) * t197 - g(2) * t415 + g(3) * t252;
t221 = qJD(4) + t226;
t463 = qJD(4) * t221;
t572 = pkin(10) * t463 - t356;
t550 = t466 - t410;
t457 = qJDD(1) * t330;
t300 = t323 * t457;
t459 = qJD(1) * qJD(2);
t426 = t327 * t459;
t406 = t323 * t426;
t243 = qJDD(3) - t300 + t406;
t339 = t326 * t387 + t329 * t354;
t421 = t329 * t458;
t436 = t329 * t467;
t465 = qJD(3) * t327;
t336 = (t421 + (-t326 * t465 + t436) * qJD(1)) * t323 + t339;
t571 = t325 * t243 + t328 * t336;
t538 = t370 ^ 2;
t570 = -t86 ^ 2 + t538;
t214 = qJD(5) + t221;
t335 = qJD(4) * t172 + t571;
t448 = t228 * t461 - t282 * t462 + t325 * t336;
t386 = t243 * t328 - t448;
t28 = -t172 * t428 + t173 * t460 - t324 * t386 - t536 * t335;
t17 = t214 * t86 - t28;
t57 = pkin(5) * t370 + qJ(6) * t86;
t194 = t255 * t329 - t326 * t443;
t322 = qJ(4) + qJ(5);
t316 = sin(t322);
t317 = cos(t322);
t137 = t194 * t316 - t254 * t317;
t138 = t194 * t317 + t254 * t316;
t569 = t194 * t325 - t254 * t328;
t568 = t194 * t328 + t254 * t325;
t567 = t221 ^ 2;
t319 = t323 ^ 2;
t566 = 0.2e1 * t319;
t446 = pkin(4) * t325 + pkin(9);
t128 = t329 * t205 + t326 * t220;
t405 = -t128 + (t462 + t507) * pkin(4);
t493 = t325 * t122;
t114 = t118 * qJ(6);
t206 = t214 * qJD(6);
t563 = t114 + t206;
t283 = t331 * t325;
t284 = t331 * t328;
t368 = t536 * t283 + t324 * t284;
t562 = -t368 * qJD(5) - t324 * t579 + t536 * t580;
t210 = t324 * t283 - t536 * t284;
t561 = -t210 * qJD(5) + t324 * t580 + t536 * t579;
t445 = pkin(1) * t511;
t384 = -pkin(8) * t496 + t330 * t445;
t240 = -pkin(2) * t511 - t384;
t144 = t252 * pkin(3) - t253 * pkin(10) + t240;
t472 = pkin(8) * t495 + t327 * t445;
t241 = pkin(9) * t511 + t472;
t475 = t329 * t241 + t326 * t242;
t146 = -pkin(10) * t495 + t475;
t480 = t325 * t144 + t328 * t146;
t263 = t328 * t275;
t488 = t326 * t328;
t182 = -pkin(11) * t488 + t263 + (-pkin(4) - t533) * t329;
t471 = t325 * t275 + t309;
t201 = -pkin(11) * t490 + t471;
t560 = t324 * t182 + t536 * t201;
t558 = -pkin(4) * t584 + t574;
t557 = -t173 * t462 + t335 * t328;
t556 = -t182 * t428 + t201 * t460 - t324 * t582 + t581 * t536;
t555 = (qJDD(2) + 0.2e1 * t414) * t323;
t554 = t409 - t464;
t551 = -t243 * t329 - t282 * t466;
t115 = t118 * pkin(5);
t547 = t115 - qJDD(6);
t198 = t257 * t329 + t326 * t442;
t149 = -t198 * t325 + t256 * t328;
t191 = t253 * t325 + t328 * t495;
t546 = -g(1) * t149 + g(2) * t569 + g(3) * t191;
t29 = t172 * t460 + t173 * t428 + t324 * t335 - t536 * t386;
t544 = t214 * t370 - t29;
t141 = t198 * t316 - t256 * t317;
t179 = t253 * t316 + t317 * t495;
t204 = -pkin(2) * t391 - t244;
t103 = t226 * pkin(3) - t228 * pkin(10) + t204;
t109 = -pkin(10) * t282 + t128;
t447 = pkin(8) * t300 + t327 * t403 + t330 * t388;
t350 = -pkin(8) * t406 + t447;
t158 = pkin(9) * t387 + t350;
t373 = t399 * qJD(2);
t165 = (qJD(1) * t373 + qJDD(1) * t389) * t323;
t361 = t329 * t158 + t326 * t165 - t205 * t466 + t220 * t464;
t54 = pkin(10) * t243 + t361;
t63 = t129 * pkin(3) - pkin(10) * t336 + t159;
t420 = -t325 * t54 + t328 * t63;
t11 = t122 * pkin(4) - pkin(11) * t335 - t103 * t462 - t109 * t461 + t420;
t366 = -t103 * t461 + t109 * t462 - t325 * t63 - t328 * t54;
t14 = pkin(11) * t386 - t366;
t68 = t328 * t103 - t109 * t325;
t51 = -pkin(11) * t173 + t68;
t45 = pkin(4) * t221 + t51;
t69 = t325 * t103 + t328 * t109;
t52 = pkin(11) * t172 + t69;
t4 = t536 * t11 - t324 * t14 - t52 * t428 - t45 * t460;
t348 = g(1) * t141 + g(2) * t137 + g(3) * t179 + t4;
t342 = t35 * t370 - t348 - t547;
t543 = -t80 * t370 + t348;
t542 = -t210 * t118 - t356 * t316;
t190 = -qJD(3) * t252 + t323 * t436;
t468 = qJD(2) * t327;
t439 = t323 * t468;
t102 = -qJD(4) * t191 + t190 * t328 + t325 * t439;
t189 = qJD(3) * t253 + t323 * t438;
t246 = t323 * t373;
t248 = t384 * qJD(2);
t360 = -t241 * t466 + t242 * t464 + t326 * t246 + t329 * t248;
t82 = pkin(10) * t439 + t360;
t249 = t472 * qJD(2);
t95 = t189 * pkin(3) - t190 * pkin(10) + t249;
t419 = -t325 * t82 + t328 * t95;
t21 = pkin(4) * t189 - pkin(11) * t102 - qJD(4) * t480 + t419;
t437 = t328 * t468;
t509 = t190 * t325;
t353 = t323 * t437 - t509;
t454 = t144 * t461 + t325 * t95 + t328 * t82;
t492 = t325 * t146;
t27 = t353 * pkin(11) + (-t492 + t578) * qJD(4) + t454;
t417 = t328 * t144 - t492;
t65 = pkin(4) * t252 + t417 + t578;
t70 = -pkin(11) * t191 + t480;
t377 = t324 * t65 + t536 * t70;
t540 = -qJD(5) * t377 + t536 * t21 - t324 * t27;
t539 = -qJD(5) * t560 + t581 * t324 + t536 * t582;
t332 = qJD(1) ^ 2;
t525 = g(3) * t323;
t524 = t243 * pkin(3);
t522 = t550 * qJ(6) - qJD(6) * t329 - t556;
t521 = -t550 * pkin(5) - t539;
t251 = t367 * t326;
t520 = t481 * pkin(5) + t482 * qJ(6) - qJD(6) * t251 + t558;
t517 = t476 * pkin(5) - t477 * qJ(6) - qJD(6) * t265 + t405;
t451 = t536 * t52;
t23 = t324 * t45 + t451;
t516 = t214 * t23;
t515 = t324 * t52;
t514 = -qJ(6) * t228 - t562;
t513 = t228 * pkin(5) - t561;
t25 = t536 * t51 - t515;
t512 = pkin(4) * t428 + qJD(6) - t25;
t510 = t173 * t221;
t505 = t228 * t282;
t363 = t282 * t326;
t499 = t316 * t329;
t498 = t317 * t329;
t497 = t319 * t332;
t489 = t325 * t329;
t487 = t328 * t122;
t22 = t536 * t45 - t515;
t484 = qJD(6) - t22;
t269 = pkin(4) * t490 + t326 * pkin(9);
t320 = t327 ^ 2;
t470 = -t330 ^ 2 + t320;
t450 = t330 * t497;
t449 = t316 * t495;
t314 = pkin(4) * t328 + pkin(3);
t427 = pkin(1) * t566;
t425 = t330 * t459;
t424 = qJD(1) * t465;
t3 = t324 * t11 + t536 * t14 + t45 * t428 - t52 * t460;
t416 = -t326 * t241 + t242 * t329;
t413 = -t326 * t158 + t329 * t165 - t205 * t464 - t220 * t466;
t24 = t324 * t51 + t451;
t404 = pkin(4) * t460 - t24;
t400 = t323 * t332 * t511;
t397 = -g(1) * t137 + g(2) * t141;
t142 = t198 * t317 + t256 * t316;
t396 = g(1) * t138 - g(2) * t142;
t395 = g(1) * t415 + g(2) * t197;
t394 = -g(1) * t257 - g(2) * t255;
t145 = pkin(3) * t495 - t416;
t390 = 0.2e1 * t418 + qJD(2);
t385 = -t241 * t464 - t242 * t466 + t329 * t246 - t326 * t248;
t381 = -t324 * t70 + t536 * t65;
t55 = -t413 - t524;
t376 = t108 * t461 + t55 * t325;
t374 = t324 * t21 + t536 * t27 + t65 * t428 - t460 * t70;
t372 = t536 * t182 - t324 * t201;
t112 = -t324 * t191 - t375 * t536;
t362 = t425 + t458;
t161 = -t254 * t499 - t255 * t317;
t163 = -t256 * t499 - t257 * t317;
t211 = -t317 * t496 + t329 * t449;
t358 = -g(1) * t163 - g(2) * t161 - g(3) * t211;
t162 = -t254 * t498 + t255 * t316;
t164 = -t256 * t498 + t257 * t316;
t212 = (t316 * t327 + t317 * t485) * t323;
t357 = -g(1) * t164 - g(2) * t162 - g(3) * t212;
t355 = g(1) * t198 + g(2) * t194 + g(3) * t253;
t91 = pkin(4) * t191 + t145;
t180 = t253 * t317 - t449;
t347 = g(1) * t142 + g(2) * t138 + g(3) * t180 - t3;
t16 = -qJD(4) * t69 + t420;
t345 = t118 * t368 + t317 * t356;
t343 = t214 * t22 + t347;
t34 = -pkin(4) * t386 + t55;
t340 = qJD(4) * t375 + t353;
t338 = -g(1) * (-t141 * pkin(5) + qJ(6) * t142) - g(2) * (-t137 * pkin(5) + qJ(6) * t138) - g(3) * (-t179 * pkin(5) + qJ(6) * t180);
t56 = -(-t253 * t461 - t509) * pkin(4) + (-pkin(3) * t468 - (t330 * t462 + t437) * pkin(4)) * t323 - t385;
t334 = t326 * t335;
t313 = -t536 * pkin(4) - pkin(5);
t311 = pkin(4) * t324 + qJ(6);
t250 = t265 * t326;
t176 = -pkin(5) * t367 - qJ(6) * t265 - t314;
t151 = pkin(5) * t250 - qJ(6) * t251 + t269;
t150 = t198 * t328 + t256 * t325;
t111 = t536 * t191 - t324 * t375;
t106 = t329 * pkin(5) - t372;
t105 = -qJ(6) * t329 + t560;
t83 = -pkin(3) * t439 - t385;
t46 = pkin(4) * t173 + t57;
t43 = pkin(5) * t111 - qJ(6) * t112 + t91;
t39 = t112 * qJD(5) + t324 * t102 - t536 * t340;
t38 = -t536 * t102 + t191 * t428 - t324 * t340 - t375 * t460;
t31 = -t252 * pkin(5) - t381;
t30 = qJ(6) * t252 + t377;
t19 = t214 * qJ(6) + t23;
t18 = -t214 * pkin(5) + t484;
t10 = t39 * pkin(5) + t38 * qJ(6) - t112 * qJD(6) + t56;
t7 = t29 * pkin(5) + t28 * qJ(6) - qJD(6) * t370 + t34;
t6 = -t189 * pkin(5) - t540;
t5 = qJ(6) * t189 + qJD(6) * t252 + t374;
t2 = -t4 - t547;
t1 = t3 + t563;
t8 = [qJDD(1), g(1) * t535 - g(2) * t537, g(1) * t537 + g(2) * t535 (qJDD(1) * t320 + 0.2e1 * t327 * t425) * t319 (t327 * t457 - t459 * t470) * t566, t323 * t390 * t467 + t327 * t555, t330 * t555 - t390 * t439, t387 * t511, -t249 * t391 + t384 * t387 + t412 * t511 + g(1) * t255 - g(2) * t257 + (-t426 + t457) * t427, -g(1) * t254 + g(2) * t256 - t248 * t391 - t350 * t511 - t362 * t427 - t387 * t472, t228 * t190 + t253 * t336, -t253 * t129 - t228 * t189 - t190 * t226 - t252 * t336, -t190 * t282 + t253 * t243 + (-t339 * t330 + t228 * t468 - (-t326 * t424 + t329 * t425 + t421) * t495) * t323, t189 * t282 - t252 * t243 + (t129 * t330 - t226 * t468) * t323 (-t243 * t330 - t282 * t468) * t323, -t385 * t282 + t416 * t243 + t249 * t226 + t240 * t129 + t159 * t252 + t204 * t189 + g(1) * t194 - g(2) * t198 + (t127 * t468 - t330 * t413) * t323, -t128 * t439 + t159 * t253 + t204 * t190 + t249 * t228 + t240 * t336 - t243 * t475 + t282 * t360 + t361 * t495 + t395, t173 * t102 - t335 * t375, t102 * t172 - t375 * t386 - t571 * t191 + t173 * t353 + (-t172 * t191 + t173 * t375) * qJD(4), t102 * t221 - t122 * t375 + t173 * t189 + t252 * t335, -t191 * t122 + t172 * t189 + t221 * t340 + t252 * t386, t122 * t252 + t189 * t221, t419 * t221 + t417 * t122 + t16 * t252 + t68 * t189 - t83 * t172 - t145 * t386 + t55 * t191 - t108 * t353 + g(1) * t568 - g(2) * t150 + (-t108 * t375 - t221 * t480) * qJD(4) -(-t146 * t462 + t454) * t221 - t480 * t122 + t366 * t252 - t69 * t189 + t83 * t173 + t145 * t335 - t55 * t375 + t108 * t102 - g(1) * t569 - g(2) * t149, -t112 * t28 - t370 * t38, t111 * t28 - t112 * t29 - t370 * t39 + t38 * t86, t112 * t118 + t189 * t370 - t214 * t38 - t252 * t28, -t111 * t118 - t189 * t86 - t214 * t39 - t252 * t29, t118 * t252 + t189 * t214, t34 * t111 + t381 * t118 + t22 * t189 + t214 * t540 + t4 * t252 + t91 * t29 + t80 * t39 + t56 * t86 + t396, t34 * t112 - t118 * t377 - t23 * t189 - t214 * t374 - t3 * t252 - t91 * t28 + t370 * t56 - t80 * t38 + t397, t10 * t86 + t111 * t7 - t118 * t31 - t18 * t189 - t2 * t252 - t214 * t6 + t29 * t43 + t35 * t39 + t396, -t1 * t111 + t112 * t2 - t18 * t38 - t19 * t39 - t28 * t31 - t29 * t30 + t370 * t6 - t5 * t86 - t395, t1 * t252 - t10 * t370 - t112 * t7 + t118 * t30 + t189 * t19 + t214 * t5 + t28 * t43 + t35 * t38 - t397, t1 * t30 + t19 * t5 + t7 * t43 + t35 * t10 + t2 * t31 + t18 * t6 - g(1) * (-t535 * pkin(1) - t255 * pkin(2) - pkin(5) * t138 + pkin(8) * t443 - qJ(6) * t137 - t194 * t314 - t446 * t254 - t331 * t415) - g(2) * (t537 * pkin(1) + t257 * pkin(2) + t142 * pkin(5) + pkin(8) * t442 + t141 * qJ(6) - t197 * t331 + t198 * t314 + t446 * t256); 0, 0, 0, -t327 * t450, t470 * t497, -t330 * t400 + t423, t327 * t400 + t300, t387, pkin(1) * t327 * t497 + t247 * t391 + t351 + t412, pkin(1) * t450 + t244 * t391 + (pkin(8) * t459 + g(3)) * t496 - t394 - t447 (-t323 * t424 + t387) * t326 ^ 2 + ((t323 * t362 + t354) * t326 - t505) * t329, -t326 * t129 + t226 * t554 - t228 * t550 + t329 * t336, -t282 * t464 + t243 * t326 + (-t228 * t327 + t282 * t485) * t469 (t226 * t327 - t330 * t363) * t469 - t551, t282 * t441, -t127 * t441 - pkin(2) * t129 - t247 * t226 - t229 * t282 + (-pkin(9) * t243 - t204 * t282) * t326 + ((pkin(9) * qJD(3) + t245) * t282 - t575) * t329, -pkin(2) * t336 + t551 * pkin(9) + t128 * t441 - t554 * t204 - t247 * t228 - t282 * t474 + t575 * t326, t173 * t559 + t326 * t557, t545 * t172 + t173 * t584 - t325 * t334 + t386 * t488, t173 * t550 + t221 * t545 + t326 * t487 - t329 * t335, -t386 * t329 + t585 * t221 + (-t172 * t282 - t221 * t461 - t493) * t326, -t122 * t329 - t221 * t363, -t108 * t218 + t263 * t122 + t147 * t172 + t586 * t221 + (-g(3) * t496 + (-qJD(4) * t275 + t148) * t221 + t394) * t325 + (t108 * t325 * qJD(3) - t16 + (-qJD(3) * t172 - t493) * pkin(9) + (-pkin(9) * t463 + t351) * t328) * t329 + (-pkin(9) * t386 - t282 * t68 + t376) * t326, -t471 * t122 - t366 * t329 + pkin(9) * t334 + t55 * t488 - g(1) * (t256 * t489 + t257 * t328) - g(2) * (t254 * t489 + t255 * t328) - (-t325 * t485 + t327 * t328) * t525 - t550 * t69 + t583 * t221 + t574 * t173 + t545 * t108, -t251 * t28 - t370 * t482, t250 * t28 - t251 * t29 - t370 * t481 + t482 * t86, t118 * t251 - t214 * t482 + t28 * t329 - t363 * t370, -t118 * t250 - t214 * t481 + t29 * t329 + t363 * t86, -t118 * t329 - t214 * t363, t372 * t118 + t539 * t214 + t550 * t22 + t34 * t250 + t269 * t29 - t4 * t329 + t481 * t80 + t558 * t86 + t357, -t118 * t560 + t214 * t556 + t23 * t363 + t34 * t251 - t269 * t28 + t3 * t329 + t370 * t558 - t482 * t80 - t358, -t106 * t118 + t151 * t29 + t18 * t363 + t2 * t329 - t214 * t521 + t250 * t7 + t35 * t481 + t520 * t86 + t357, -t1 * t250 - t105 * t29 - t106 * t28 - t18 * t482 - t19 * t481 + t2 * t251 + t326 * t351 + t370 * t521 - t522 * t86, -t1 * t329 + t105 * t118 + t151 * t28 - t19 * t363 + t214 * t522 - t251 * t7 + t35 * t482 - t370 * t520 + t358, t1 * t105 + t7 * t151 + t2 * t106 - g(1) * (pkin(5) * t164 + qJ(6) * t163 + t446 * t257) - g(2) * (pkin(5) * t162 + qJ(6) * t161 + t446 * t255) - g(3) * (pkin(5) * t212 + qJ(6) * t211) + t520 * t35 + t522 * t19 + t521 * t18 - t327 * t446 * t525 + (-t330 * t525 + t549) * (t314 * t329 - t326 * t331 + pkin(2)); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228 * t226, -t226 ^ 2 + t228 ^ 2, -t226 * t282 + t336, -t129 - t505, t243, -t128 * t282 - t204 * t228 + t356 + t413, -t127 * t282 + t204 * t226 + t355 - t361 (-qJD(4) * t228 + t243) * t325 ^ 2 + ((-qJD(4) * t282 + t336) * t325 + t510) * t328, -t173 * t507 + t325 * t386 + (t461 + t506) * t172 + t557, -t173 * t228 + t567 * t328 + t493, -t172 * t228 - t567 * t325 + t487, -t221 * t228, -pkin(3) * t448 - t68 * t228 + t128 * t172 - pkin(10) * t493 + (-t55 + t524 - t572) * t328 + (-t155 + (t108 + t127) * t325) * t221, -pkin(3) * t335 - pkin(10) * t487 + t108 * t506 - t128 * t173 + t221 * t483 + t69 * t228 + t572 * t325 + t376, -t265 * t28 + t370 * t477, -t265 * t29 - t28 * t367 - t370 * t476 - t477 * t86, t118 * t265 + t214 * t477 - t228 * t370, t118 * t367 - t214 * t476 + t228 * t86, -t214 * t228, t561 * t214 - t22 * t228 - t314 * t29 - t34 * t367 + t405 * t86 + t476 * t80 + t345, t562 * t214 + t23 * t228 + t34 * t265 + t314 * t28 + t405 * t370 + t477 * t80 + t542, t176 * t29 + t18 * t228 - t214 * t513 + t35 * t476 - t367 * t7 + t517 * t86 + t345, t1 * t367 + t18 * t477 - t19 * t476 + t2 * t265 - t210 * t29 + t28 * t368 + t370 * t513 - t514 * t86 - t355, t176 * t28 - t19 * t228 + t214 * t514 - t265 * t7 - t35 * t477 - t370 * t517 - t542, t1 * t210 + t7 * t176 + t18 * t513 + t19 * t514 - t2 * t368 + t331 * t355 + t35 * t517 + t356 * (pkin(5) * t317 + qJ(6) * t316 + t314); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173 * t172, -t172 ^ 2 + t173 ^ 2, -t172 * t221 + t335, t386 + t510, t122, -t108 * t173 + t69 * t221 + t16 + t546, g(1) * t150 + g(2) * t568 - g(3) * t375 - t108 * t172 + t68 * t221 + t366, t523, t570, t17, t544, t118, t24 * t214 + (t536 * t118 - t173 * t86 - t214 * t460) * pkin(4) + t543, t25 * t214 + t576 + (-t118 * t324 - t173 * t370 - t214 * t428) * pkin(4) + t347, -t118 * t313 - t214 * t404 - t46 * t86 - t342, -t28 * t313 - t29 * t311 + (t19 + t404) * t370 + (t18 - t512) * t86, t118 * t311 + t214 * t512 + t370 * t46 - t347 + t563 - t577, t1 * t311 + t2 * t313 - t35 * t46 - t18 * t24 + t512 * t19 + (t18 * t460 + t546) * pkin(4) + t338; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t523, t570, t17, t544, t118, t516 + t543, t343 + t576, -t57 * t86 + t115 - t342 + t516, pkin(5) * t28 - qJ(6) * t29 + (t19 - t23) * t370 + (t18 - t484) * t86, t370 * t57 + 0.2e1 * t114 + 0.2e1 * t206 - t343 - t577, -t2 * pkin(5) + t1 * qJ(6) - t18 * t23 + t19 * t484 - t35 * t57 + t338; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t523 - t118, t17, -t214 ^ 2 - t538, -t19 * t214 + t342;];
tau_reg  = t8;
