% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRRP10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 02:31
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRP10_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRP10_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRP10_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRRP10_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 02:27:27
% EndTime: 2019-03-10 02:28:06
% DurationCPUTime: 16.91s
% Computational Cost: add. (28103->783), mult. (71956->1021), div. (0->0), fcn. (56489->10), ass. (0->320)
t319 = sin(qJ(2));
t466 = cos(pkin(6));
t411 = pkin(1) * t466;
t302 = t319 * t411;
t318 = sin(qJ(3));
t321 = cos(qJ(3));
t370 = pkin(3) * t318 - pkin(10) * t321;
t315 = sin(pkin(6));
t322 = cos(qJ(2));
t447 = t315 * t322;
t521 = (t302 + (pkin(8) + t370) * t447) * qJD(1) - t370 * qJD(3);
t317 = sin(qJ(4));
t320 = cos(qJ(4));
t425 = qJD(1) * t322;
t406 = t315 * t425;
t381 = t321 * t406;
t426 = qJD(1) * t315;
t407 = t319 * t426;
t227 = t317 * t381 - t320 * t407;
t422 = qJD(3) * t321;
t519 = -t317 * t422 + t227;
t420 = qJD(4) * t320;
t518 = -t318 * t420 + t519;
t441 = t318 * t320;
t384 = t322 * t411;
t256 = -pkin(8) * t407 + qJD(1) * t384;
t351 = t315 * (pkin(2) * t319 - pkin(9) * t322);
t257 = qJD(1) * t351;
t185 = t321 * t256 + t318 * t257;
t172 = pkin(10) * t407 + t185;
t423 = qJD(3) * t318;
t415 = pkin(9) * t423;
t520 = t521 * t320 + (-t172 - t415) * t317;
t284 = -pkin(3) * t321 - pkin(10) * t318 - pkin(2);
t421 = qJD(4) * t317;
t431 = -t320 * t172 + t284 * t420 + (-t320 * t423 - t321 * t421) * pkin(9) - t521 * t317;
t438 = t321 * t322;
t228 = (t317 * t319 + t320 * t438) * t426;
t368 = t320 * t422 - t228;
t517 = -t318 * t421 + t368;
t439 = t320 * t321;
t304 = pkin(9) * t439;
t382 = t318 * t406;
t516 = pkin(4) * t382 - pkin(11) * t228 - (pkin(4) * t318 - pkin(11) * t439) * qJD(3) - (-t304 + (pkin(11) * t318 - t284) * t317) * qJD(4) + t520;
t515 = pkin(11) * t518 + t431;
t390 = t466 * qJD(1);
t356 = t390 + qJD(2);
t383 = t318 * t407;
t239 = -t321 * t356 + t383;
t234 = qJD(4) + t239;
t223 = qJD(5) + t234;
t241 = t318 * t356 + t321 * t407;
t288 = -qJD(3) + t406;
t190 = -t317 * t241 - t288 * t320;
t191 = t241 * t320 - t288 * t317;
t316 = sin(qJ(5));
t486 = cos(qJ(5));
t347 = t316 * t190 + t191 * t486;
t424 = qJD(2) * t319;
t405 = t315 * t424;
t376 = qJD(1) * t405;
t417 = qJD(1) * qJD(2);
t393 = t322 * t417;
t375 = t315 * t393;
t491 = qJD(3) * t383 - t321 * (qJD(3) * t356 + t375);
t116 = t241 * t421 + t288 * t420 - t317 * t376 + t320 * t491;
t334 = -t241 * t420 + t288 * t421 + t317 * t491 + t320 * t376;
t51 = qJD(5) * t347 - t316 * t116 - t486 * t334;
t512 = -t223 * t347 + t51;
t448 = t315 * t319;
t265 = t318 * t466 + t321 * t448;
t349 = -t265 * t320 + t317 * t447;
t514 = pkin(11) * t349;
t121 = -t486 * t190 + t191 * t316;
t428 = pkin(8) * t447 + t302;
t254 = t466 * pkin(9) + t428;
t215 = qJD(2) * pkin(9) + qJD(1) * t254;
t255 = (-pkin(2) * t322 - pkin(9) * t319 - pkin(1)) * t315;
t233 = qJD(1) * t255;
t159 = -t318 * t215 + t233 * t321;
t143 = pkin(3) * t288 - t159;
t100 = -pkin(4) * t190 + t143;
t48 = pkin(5) * t121 - qJ(6) * t347 + t100;
t513 = t121 * t48;
t511 = t100 * t121;
t510 = t121 * t347;
t445 = t316 * t320;
t276 = t317 * t486 + t445;
t495 = qJD(4) + qJD(5);
t204 = t495 * t276;
t378 = t486 * t422;
t435 = t204 * t318 + t228 * t486 - t519 * t316 - t320 * t378;
t395 = t486 * qJD(5);
t396 = t486 * qJD(4);
t442 = t317 * t318;
t413 = t316 * t442;
t434 = t317 * t378 - qJD(5) * t413 + (t396 + t395) * t441 - t227 * t486 + t517 * t316;
t509 = t276 * t239 + t204;
t408 = t486 * t320;
t446 = t316 * t317;
t275 = -t408 + t446;
t377 = t320 * t396;
t432 = t275 * t239 - t320 * t395 + t446 * t495 - t377;
t507 = t382 - t423;
t488 = t347 ^ 2;
t397 = t121 ^ 2 - t488;
t419 = qJD(5) * t316;
t50 = t486 * t116 - t190 * t395 + t191 * t419 - t316 * t334;
t505 = t121 * t223 - t50;
t75 = pkin(5) * t347 + qJ(6) * t121;
t418 = t241 * qJD(3);
t195 = t318 * t375 + t418;
t262 = t276 * t318;
t343 = t288 * t318;
t504 = t121 * t343 - t195 * t262 - t223 * t434 + t321 * t51;
t312 = t315 ^ 2;
t503 = -0.2e1 * t312 * t417;
t274 = t320 * t284;
t200 = -pkin(11) * t441 + t274 + (-pkin(9) * t317 - pkin(4)) * t321;
t249 = t317 * t284 + t304;
t211 = -pkin(11) * t442 + t249;
t481 = -t200 * t395 + t211 * t419 + t316 * t516 - t515 * t486;
t487 = -pkin(11) - pkin(10);
t289 = t487 * t317;
t290 = t487 * t320;
t221 = t316 * t289 - t290 * t486;
t410 = qJD(4) * t487;
t278 = t317 * t410;
t178 = pkin(3) * t241 + pkin(10) * t239;
t98 = -t159 * t317 + t320 * t178;
t81 = pkin(11) * t239 * t320 + pkin(4) * t241 + t98;
t451 = t239 * t317;
t99 = t320 * t159 + t317 * t178;
t89 = pkin(11) * t451 + t99;
t468 = qJD(5) * t221 - t377 * t487 + t486 * t81 + (t278 - t89) * t316;
t363 = pkin(8) * t375;
t369 = qJD(2) * t390;
t112 = pkin(1) * t319 * t369 + t195 * pkin(3) + pkin(10) * t491 + t363;
t214 = -pkin(2) * t356 - t256;
t138 = t239 * pkin(3) - t241 * pkin(10) + t214;
t160 = t215 * t321 + t233 * t318;
t144 = -pkin(10) * t288 + t160;
t258 = qJD(2) * t351;
t250 = qJD(1) * t258;
t269 = -pkin(8) * t448 + t384;
t260 = t269 * qJD(2);
t251 = qJD(1) * t260;
t101 = -t215 * t423 + t233 * t422 + t318 * t250 + t321 * t251;
t94 = pkin(10) * t376 + t101;
t34 = t317 * t112 + t138 * t420 - t144 * t421 + t320 * t94;
t83 = t320 * t138 - t144 * t317;
t501 = -t234 * t83 + t34;
t84 = t138 * t317 + t144 * t320;
t35 = -qJD(4) * t84 + t320 * t112 - t317 * t94;
t500 = -t84 * t234 - t35;
t373 = -t160 + (t421 + t451) * pkin(4);
t184 = -t318 * t256 + t257 * t321;
t171 = -pkin(3) * t407 - t184;
t436 = -t518 * pkin(4) + pkin(9) * t422 - t171;
t253 = -pkin(2) * t466 - t269;
t264 = t318 * t448 - t321 * t466;
t167 = t264 * pkin(3) - t265 * pkin(10) + t253;
t180 = t321 * t254 + t318 * t255;
t169 = -pkin(10) * t447 + t180;
t97 = t317 * t167 + t320 * t169;
t497 = t316 * t200 + t486 * t211;
t496 = t381 - t422;
t193 = t195 * pkin(5);
t18 = t195 * pkin(4) + t116 * pkin(11) + t35;
t21 = pkin(11) * t334 + t34;
t72 = -pkin(11) * t191 + t83;
t62 = pkin(4) * t234 + t72;
t73 = pkin(11) * t190 + t84;
t391 = -t486 * t18 + t316 * t21 + t73 * t395 + t62 * t419;
t2 = -t193 + t391;
t339 = t347 * t48 + t2;
t494 = -t100 * t347 - t391;
t493 = t241 * t121 - t195 * t275 - t223 * t509;
t403 = t320 * t424;
t404 = qJD(2) * t447;
t207 = -qJD(3) * t264 + t321 * t404;
t454 = t207 * t317;
t338 = t315 * t403 - t454;
t325 = qJD(4) * t349 + t338;
t350 = t265 * t317 + t320 * t447;
t137 = -qJD(4) * t350 + t207 * t320 + t317 * t405;
t206 = qJD(3) * t265 + t318 * t404;
t117 = -t254 * t423 + t255 * t422 + t318 * t258 + t321 * t260;
t106 = pkin(10) * t405 + t117;
t261 = t428 * qJD(2);
t130 = t206 * pkin(3) - t207 * pkin(10) + t261;
t46 = -qJD(4) * t97 - t317 * t106 + t320 * t130;
t25 = t206 * pkin(4) - t137 * pkin(11) + t46;
t412 = t320 * t106 + t317 * t130 + t167 * t420;
t444 = t317 * t169;
t33 = t338 * pkin(11) + (-t444 + t514) * qJD(4) + t412;
t96 = t320 * t167 - t444;
t80 = pkin(4) * t264 + t514 + t96;
t85 = -pkin(11) * t350 + t97;
t479 = t316 * t80 + t486 * t85;
t8 = -qJD(5) * t479 + t25 * t486 - t316 * t33;
t482 = qJD(5) * t497 + t515 * t316 + t486 * t516;
t490 = t121 * t432 + t50 * t275 - t276 * t51 - t347 * t509;
t263 = t318 * t408 - t413;
t489 = t121 * t435 + t50 * t262 - t263 * t51 - t347 * t434;
t323 = qJD(1) ^ 2;
t485 = pkin(9) * t321;
t311 = t318 * pkin(9);
t484 = qJ(6) * t507 + qJD(6) * t321 + t481;
t483 = -pkin(5) * t507 - t482;
t480 = -t434 * pkin(5) - t435 * qJ(6) + qJD(6) * t263 - t436;
t43 = t316 * t81 + t486 * t89;
t414 = t486 * t73;
t27 = t316 * t62 + t414;
t478 = t223 * t27;
t476 = t316 * t73;
t385 = t215 * t422 + t233 * t423 - t321 * t250 + t318 * t251;
t95 = -pkin(3) * t376 + t385;
t474 = t95 * t317;
t473 = t95 * t320;
t472 = pkin(5) * t509 + qJ(6) * t432 - qJD(6) * t276 + t373;
t345 = t289 * t486 + t316 * t290;
t155 = qJD(5) * t345 + t278 * t486 + t410 * t445;
t38 = qJ(6) * t241 + t43;
t471 = t155 - t38;
t470 = t155 - t43;
t469 = t241 * pkin(5) + t468;
t31 = t486 * t72 - t476;
t467 = pkin(4) * t395 + qJD(6) - t31;
t465 = t116 * t317;
t460 = t190 * t234;
t459 = t191 * t190;
t458 = t191 * t234;
t457 = t195 * t345;
t456 = t195 * t221;
t170 = t195 * t264;
t455 = t195 * t321;
t452 = t223 * t241;
t450 = t241 * t239;
t449 = t312 * t323;
t443 = t317 * t195;
t440 = t320 * t195;
t26 = t486 * t62 - t476;
t437 = qJD(6) - t26;
t430 = -qJD(4) * t249 - t520;
t280 = pkin(4) * t442 + t311;
t427 = t319 ^ 2 - t322 ^ 2;
t309 = -pkin(4) * t320 - pkin(3);
t401 = t288 * t423;
t398 = t321 * t418;
t392 = -t316 * t18 - t486 * t21 - t62 * t395 + t73 * t419;
t179 = -t318 * t254 + t321 * t255;
t388 = t234 * t317;
t387 = t234 * t320;
t386 = t319 * t322 * t449;
t380 = t241 * t406;
t379 = -t155 * t121 - t221 * t51 + t345 * t50;
t30 = t316 * t72 + t414;
t374 = pkin(4) * t419 - t30;
t372 = t315 * t323 * t466;
t371 = pkin(1) * t503;
t168 = pkin(3) * t447 - t179;
t335 = t486 * t350;
t148 = -t316 * t349 + t335;
t149 = -t316 * t350 - t349 * t486;
t56 = qJD(5) * t149 + t316 * t137 - t325 * t486;
t367 = t121 * t56 + t148 * t51;
t364 = -t317 * t84 - t320 * t83;
t361 = t101 * t321 + t318 * t385;
t358 = t312 * t319 * t393;
t355 = 0.2e1 * t390 + qJD(2);
t192 = t195 * qJ(6);
t216 = t223 * qJD(6);
t1 = t192 + t216 - t392;
t118 = -t254 * t422 - t255 * t423 + t321 * t258 - t318 * t260;
t354 = t223 * t26 + t392;
t40 = -t316 * t85 + t486 * t80;
t7 = t316 * t25 + t486 * t33 + t80 * t395 - t419 * t85;
t145 = t200 * t486 - t316 * t211;
t342 = -pkin(10) * t195 + t143 * t234;
t341 = t121 * t434 + t51 * t262;
t340 = t121 * t509 + t51 * t275;
t333 = pkin(1) * (-t369 + t449);
t55 = qJD(5) * t335 - t137 * t486 - t316 * t325 - t349 * t419;
t332 = t121 * t55 + t148 * t50 - t149 * t51 - t347 * t56;
t331 = t121 * t206 + t148 * t195 + t223 * t56 + t264 * t51;
t330 = t334 * t320;
t126 = pkin(4) * t350 + t168;
t64 = -pkin(4) * t334 + t95;
t74 = -(-t265 * t420 - t454) * pkin(4) + (-pkin(3) * t424 - (t322 * t421 + t403) * pkin(4)) * t315 - t118;
t308 = -pkin(4) * t486 - pkin(5);
t306 = pkin(4) * t316 + qJ(6);
t259 = t428 * qJD(1);
t252 = qJD(1) * t261;
t248 = -t317 * t485 + t274;
t197 = pkin(5) * t275 - qJ(6) * t276 + t309;
t173 = pkin(5) * t262 - qJ(6) * t263 + t280;
t141 = t321 * pkin(5) - t145;
t140 = -qJ(6) * t321 + t497;
t107 = -pkin(3) * t405 - t118;
t104 = -t223 * t343 - t455;
t103 = t206 * t223 + t170;
t63 = pkin(4) * t191 + t75;
t60 = t148 * pkin(5) - t149 * qJ(6) + t126;
t47 = t276 * t195 - t223 * t432 - t241 * t347;
t45 = -t169 * t421 + t412;
t37 = -t264 * pkin(5) - t40;
t36 = qJ(6) * t264 + t479;
t23 = t223 * qJ(6) + t27;
t22 = -t223 * pkin(5) + t437;
t15 = -t50 * t276 - t347 * t432;
t14 = -t50 * t263 - t347 * t435;
t13 = -t149 * t50 - t347 * t55;
t12 = t263 * t195 - t223 * t435 + t50 * t321 - t343 * t347;
t11 = t56 * pkin(5) + t55 * qJ(6) - t149 * qJD(6) + t74;
t10 = t149 * t195 + t206 * t347 - t223 * t55 - t264 * t50;
t9 = t51 * pkin(5) + t50 * qJ(6) - qJD(6) * t347 + t64;
t6 = -t206 * pkin(5) - t8;
t5 = qJ(6) * t206 + qJD(6) * t264 + t7;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t358, t427 * t503, t355 * t404, -0.2e1 * t358, -t355 * t405, 0, -t252 * t466 - t261 * t356 + t319 * t371, -t251 * t466 - t260 * t356 + t322 * t371 (t251 * t322 + t252 * t319 + (-t256 * t322 - t259 * t319) * qJD(2) + (t260 * t322 + t261 * t319 + (-t269 * t322 - t319 * t428) * qJD(2)) * qJD(1)) * t315, t251 * t428 - t252 * t269 - t256 * t261 + t259 * t260, t241 * t207 - t265 * t491, -t265 * t195 - t241 * t206 - t207 * t239 + t264 * t491, -t207 * t288 + t241 * t405 + t265 * t376 + t447 * t491, t206 * t239 + t170, t206 * t288 + (t195 * t322 + (-qJD(1) * t264 - t239) * t424) * t315 (-t288 * t315 - t312 * t425) * t424, -t118 * t288 + t253 * t195 + t214 * t206 + t261 * t239 + t252 * t264 + (t385 * t322 + (qJD(1) * t179 + t159) * t424) * t315, t101 * t447 + t117 * t288 - t160 * t405 - t180 * t376 + t214 * t207 + t261 * t241 + t252 * t265 - t253 * t491, -t101 * t264 - t117 * t239 - t118 * t241 - t159 * t207 - t160 * t206 + t179 * t491 - t180 * t195 + t265 * t385, t101 * t180 + t117 * t160 + t118 * t159 - t179 * t385 + t214 * t261 + t252 * t253, t116 * t349 + t137 * t191, t116 * t350 + t137 * t190 + t191 * t325 - t334 * t349, -t116 * t264 + t137 * t234 + t191 * t206 - t195 * t349, t190 * t325 - t334 * t350, t190 * t206 - t195 * t350 + t234 * t325 + t264 * t334, t206 * t234 + t170, -t107 * t190 - t143 * t325 - t168 * t334 + t96 * t195 + t83 * t206 + t46 * t234 + t35 * t264 + t95 * t350, t107 * t191 - t116 * t168 + t137 * t143 - t195 * t97 - t206 * t84 - t234 * t45 - t264 * t34 - t349 * t95, t96 * t116 - t83 * t137 + t45 * t190 - t46 * t191 + t325 * t84 + t334 * t97 - t34 * t350 + t349 * t35, t107 * t143 + t168 * t95 + t34 * t97 + t35 * t96 + t45 * t84 + t46 * t83, t13, t332, t10, t367, -t331, t103, t100 * t56 + t121 * t74 + t126 * t51 + t148 * t64 + t195 * t40 + t206 * t26 + t223 * t8 - t264 * t391, -t100 * t55 - t126 * t50 + t149 * t64 - t195 * t479 - t206 * t27 - t223 * t7 + t264 * t392 + t347 * t74, -t121 * t7 + t148 * t392 + t149 * t391 + t26 * t55 - t27 * t56 - t347 * t8 + t40 * t50 - t479 * t51, t100 * t74 + t126 * t64 + t26 * t8 + t27 * t7 - t391 * t40 - t392 * t479, t13, t10, -t332, t103, t331, t367, t11 * t121 + t148 * t9 - t195 * t37 - t2 * t264 - t206 * t22 - t223 * t6 + t48 * t56 + t51 * t60, -t1 * t148 - t121 * t5 + t149 * t2 - t22 * t55 - t23 * t56 + t347 * t6 - t36 * t51 - t37 * t50, t1 * t264 - t11 * t347 - t149 * t9 + t195 * t36 + t206 * t23 + t223 * t5 + t48 * t55 + t50 * t60, t1 * t36 + t11 * t48 + t2 * t37 + t22 * t6 + t23 * t5 + t60 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, t427 * t449, -t322 * t372, t386, t319 * t372, 0, t259 * t356 + t319 * t333 - t363, pkin(8) * t376 + t256 * t356 + t322 * t333, 0, 0, -t318 * t491 - t321 * t380 + t398, -t321 * t491 + t496 * t239 + (-t195 + t380 - t418) * t318, -t288 * t422 + (t288 * t438 + (t318 * qJD(2) - t241) * t319) * t426, -t239 * t343 - t455, t401 + (-t322 * t343 + (qJD(2) * t321 + t239) * t319) * t426, t288 * t407, -pkin(2) * t195 + t184 * t288 - t239 * t259 - t252 * t321 + (t214 * t318 + t288 * t485) * qJD(3) + (-t159 * t319 + (-pkin(9) * t424 - t214 * t322) * t318) * t426, pkin(2) * t491 - pkin(9) * t401 + t160 * t407 - t185 * t288 - t214 * t496 - t259 * t241 + t252 * t318 - t376 * t485, t184 * t241 - t491 * t311 + t361 + (t185 + t415) * t239 + t507 * t160 + t496 * t159 + (t398 - t455) * pkin(9), -t252 * pkin(2) - t159 * t184 - t160 * t185 - t214 * t259 + ((-t159 * t321 - t160 * t318) * qJD(3) + t361) * pkin(9), -t116 * t441 + t517 * t191, -t228 * t190 + t191 * t227 + (t190 * t320 - t191 * t317) * t422 + (t330 + t465 + (-t190 * t317 - t191 * t320) * qJD(4)) * t318, t116 * t321 + t368 * t234 + (-t191 * t288 - t234 * t421 + t440) * t318, t518 * t190 - t334 * t442, -t334 * t321 + t519 * t234 + (-t190 * t288 - t234 * t420 - t443) * t318, -t234 * t343 - t455, -t143 * t227 + t171 * t190 + t248 * t195 + t430 * t234 + (-t35 + (-pkin(9) * t190 + t143 * t317) * qJD(3)) * t321 + (-pkin(9) * t334 + t143 * t420 - t288 * t83 + t474) * t318, -t143 * t228 - t171 * t191 - t195 * t249 - t431 * t234 + (t34 + (pkin(9) * t191 + t143 * t320) * qJD(3)) * t321 + (-pkin(9) * t116 - t143 * t421 + t288 * t84 + t473) * t318, t249 * t334 + t248 * t116 + t84 * t227 + t83 * t228 - t430 * t191 + t431 * t190 + t364 * t422 + (-t34 * t317 - t35 * t320 + (t317 * t83 - t320 * t84) * qJD(4)) * t318, -t143 * t171 + t248 * t35 + t249 * t34 + t431 * t84 + t430 * t83 + (t143 * t422 + t318 * t95) * pkin(9), t14, t489, t12, t341, t504, t104, t100 * t434 + t121 * t436 + t145 * t195 - t223 * t482 - t26 * t343 + t262 * t64 + t280 * t51 + t321 * t391, -t100 * t435 - t195 * t497 + t223 * t481 + t263 * t64 + t27 * t343 - t280 * t50 - t321 * t392 + t347 * t436, t121 * t481 + t145 * t50 + t26 * t435 + t262 * t392 + t263 * t391 - t27 * t434 + t347 * t482 - t497 * t51, t100 * t436 - t145 * t391 - t26 * t482 - t27 * t481 + t64 * t280 - t392 * t497, t14, t12, -t489, t104, -t504, t341, -t121 * t480 - t141 * t195 + t173 * t51 + t2 * t321 + t22 * t343 + t223 * t483 + t262 * t9 + t434 * t48, -t1 * t262 + t121 * t484 - t140 * t51 - t141 * t50 + t2 * t263 - t22 * t435 - t23 * t434 - t347 * t483, -t1 * t321 + t140 * t195 + t173 * t50 - t223 * t484 - t23 * t343 - t263 * t9 + t347 * t480 + t435 * t48, t1 * t140 + t2 * t141 + t173 * t9 - t22 * t483 - t23 * t484 - t48 * t480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t450, -t239 ^ 2 + t241 ^ 2, -t239 * t288 - t491, -t450, -t241 * t288 - t195, t376, -t160 * t288 - t214 * t241 - t385, -t159 * t288 + t214 * t239 - t101, 0, 0, t191 * t387 - t465 (-t116 + t460) * t320 + (t334 - t458) * t317, -t191 * t241 + t234 * t387 + t443, -t190 * t388 + t330, -t190 * t241 - t234 * t388 + t440, -t234 * t241, pkin(3) * t334 - t473 - t83 * t241 + t160 * t190 + (-pkin(10) * t420 - t98) * t234 + t342 * t317, pkin(3) * t116 - t160 * t191 + t84 * t241 + t474 + (pkin(10) * t421 + t99) * t234 + t342 * t320, -t99 * t190 + t98 * t191 + ((qJD(4) * t191 + t334) * pkin(10) + t501) * t320 + ((-qJD(4) * t190 - t116) * pkin(10) + t500) * t317, -t95 * pkin(3) - t143 * t160 - t83 * t98 - t84 * t99 + (qJD(4) * t364 - t35 * t317 + t34 * t320) * pkin(10), t15, t490, t47, t340, t493, -t452, t100 * t509 + t121 * t373 - t223 * t468 - t241 * t26 + t275 * t64 + t309 * t51 + t457, -t100 * t432 - t223 * t470 + t241 * t27 + t276 * t64 - t309 * t50 + t347 * t373 - t456, t121 * t43 + t26 * t432 - t27 * t509 + t275 * t392 + t276 * t391 + t347 * t468 + t379, t100 * t373 - t221 * t392 - t26 * t468 + t27 * t470 + t64 * t309 - t345 * t391, t15, t47, -t490, -t452, -t493, t340, t121 * t472 + t197 * t51 + t22 * t241 - t223 * t469 + t275 * t9 + t48 * t509 + t457, -t1 * t275 + t121 * t38 + t2 * t276 - t22 * t432 - t23 * t509 + t347 * t469 + t379, t197 * t50 + t223 * t471 - t23 * t241 - t276 * t9 - t347 * t472 + t432 * t48 + t456, t1 * t221 + t197 * t9 - t2 * t345 + t22 * t469 + t23 * t471 + t472 * t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t459, -t190 ^ 2 + t191 ^ 2, -t116 - t460, t459, t334 + t458, t195, -t143 * t191 - t500, -t143 * t190 - t501, 0, 0, t510, -t397, t505, -t510, -t512, t195, t30 * t223 + (-t121 * t191 + t195 * t486 - t223 * t419) * pkin(4) + t494, t511 + t31 * t223 + (-t191 * t347 - t195 * t316 - t223 * t395) * pkin(4) + t392, t27 * t347 + t31 * t121 - t26 * t121 - t30 * t347 + (t486 * t50 - t316 * t51 + (-t121 * t486 + t316 * t347) * qJD(5)) * pkin(4), t26 * t30 - t27 * t31 + (-t486 * t391 - t100 * t191 - t392 * t316 + (-t26 * t316 + t27 * t486) * qJD(5)) * pkin(4), t510, t505, t397, t195, t512, -t510, -t121 * t63 - t195 * t308 - t223 * t374 - t339, -t306 * t51 - t308 * t50 + (t23 + t374) * t347 + (-t467 + t22) * t121, t195 * t306 + t223 * t467 + t347 * t63 + t1 - t513, t1 * t306 + t2 * t308 + t22 * t374 + t23 * t467 - t48 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t510, -t397, t505, -t510, -t512, t195, t478 + t494, t354 + t511, 0, 0, t510, t505, t397, t195, t512, -t510, -t121 * t75 + t193 - t339 + t478, pkin(5) * t50 - qJ(6) * t51 + (t23 - t27) * t347 + (t22 - t437) * t121, t347 * t75 + 0.2e1 * t192 + 0.2e1 * t216 - t354 - t513, -pkin(5) * t2 + qJ(6) * t1 - t22 * t27 + t23 * t437 - t48 * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t195 + t510, t505, -t223 ^ 2 - t488, -t223 * t23 + t339;];
tauc_reg  = t3;
