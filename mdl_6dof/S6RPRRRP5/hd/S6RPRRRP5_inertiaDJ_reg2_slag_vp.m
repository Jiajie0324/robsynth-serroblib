% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRP5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP5_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:12:25
% EndTime: 2019-03-09 06:12:35
% DurationCPUTime: 3.32s
% Computational Cost: add. (6908->247), mult. (14905->412), div. (0->0), fcn. (15556->8), ass. (0->156)
t110 = sin(qJ(5));
t106 = t110 ^ 2;
t111 = cos(qJ(5));
t107 = t111 ^ 2;
t206 = t106 + t107;
t193 = cos(qJ(4));
t153 = qJD(4) * t193;
t149 = pkin(3) * t153;
t205 = t206 * t149;
t203 = (t106 - t107) * qJD(5);
t108 = sin(pkin(10));
t109 = cos(pkin(10));
t192 = sin(qJ(3));
t154 = qJD(3) * t192;
t194 = cos(qJ(3));
t155 = qJD(3) * t194;
t180 = t108 * t155 + t109 * t154;
t204 = 0.2e1 * t180;
t202 = qJD(3) + qJD(4);
t127 = t192 * t108 - t194 * t109;
t119 = t193 * t127;
t126 = -t194 * t108 - t192 * t109;
t191 = sin(qJ(4));
t55 = -t126 * t191 + t119;
t118 = t191 * t127;
t56 = -t126 * t193 - t118;
t98 = -t109 * pkin(2) - pkin(1);
t60 = pkin(3) * t127 + t98;
t115 = -t55 * pkin(4) + t56 * pkin(9) - t60;
t114 = t111 * t115;
t187 = pkin(7) + qJ(2);
t87 = t187 * t108;
t88 = t187 * t109;
t57 = -t192 * t88 - t194 * t87;
t50 = pkin(8) * t126 + t57;
t58 = -t192 * t87 + t194 * t88;
t51 = -pkin(8) * t127 + t58;
t39 = t191 * t50 + t193 * t51;
t18 = -t110 * t39 - t114;
t185 = -t110 * t115 + t111 * t39;
t102 = qJD(5) * t110;
t121 = t127 * qJD(3);
t156 = qJD(2) * t192;
t157 = qJD(2) * t194;
t112 = pkin(8) * t121 - t108 * t157 - t109 * t156 + t154 * t87 - t155 * t88;
t152 = qJD(4) * t191;
t47 = t108 * t156 - t109 * t157 + t154 * t88 + t87 * t155;
t46 = -pkin(8) * t180 - t47;
t12 = -t191 * t112 + t51 * t152 - t50 * t153 - t193 * t46;
t164 = t180 * pkin(3);
t43 = t202 * t119 - t126 * t152 + t191 * t180;
t44 = -t202 * t118 - t126 * t153 + t193 * t180;
t124 = t44 * pkin(4) + t43 * pkin(9) + t164;
t5 = qJD(5) * t114 + t102 * t39 - t110 * t124 + t111 * t12;
t6 = -qJD(5) * t185 + t110 * t12 + t111 * t124;
t201 = qJD(5) * (t110 * t18 - t111 * t185) + t5 * t110 - t6 * t111;
t14 = t55 * qJ(6) + t185;
t15 = -t55 * pkin(5) - t18;
t173 = t55 * qJD(6);
t176 = t44 * qJ(6);
t3 = t173 - t5 + t176;
t195 = t44 * pkin(5);
t4 = -t195 - t6;
t200 = t3 * t110 - t4 * t111 + (t110 * t15 + t111 * t14) * qJD(5);
t199 = -0.2e1 * t203;
t198 = 0.2e1 * qJD(6);
t197 = pkin(9) * t44;
t196 = pkin(9) * t55;
t13 = t39 * qJD(4) - t193 * t112 + t191 * t46;
t38 = t191 * t51 - t193 * t50;
t190 = t38 * t13;
t99 = t191 * pkin(3) + pkin(9);
t189 = t44 * t99;
t188 = t55 * t99;
t103 = qJD(5) * t111;
t34 = t38 * t103;
t186 = t13 * t110 + t34;
t148 = pkin(3) * t152;
t71 = -pkin(5) * t102 + qJ(6) * t103 + t110 * qJD(6);
t59 = t148 - t71;
t184 = -t59 + t71;
t183 = t205 * t99;
t182 = t205 * pkin(9);
t170 = t193 * pkin(3);
t100 = -t170 - pkin(4);
t181 = t100 * t103 + t110 * t148;
t179 = pkin(3) * qJD(4);
t178 = t106 * t43;
t41 = t107 * t43;
t177 = t111 * t43;
t23 = (pkin(5) * t110 - qJ(6) * t111) * t56 + t38;
t175 = qJD(5) * t23;
t171 = qJ(6) * qJD(5);
t32 = 0.2e1 * t55 * t44;
t169 = pkin(4) * t102;
t168 = pkin(4) * t103;
t167 = pkin(9) * t102;
t166 = pkin(9) * t103;
t165 = t110 * t177;
t163 = t191 * t38;
t162 = t56 * t102;
t161 = t56 * t103;
t22 = t23 * t102;
t33 = t38 * t102;
t160 = t110 * t193;
t159 = t111 * t193;
t158 = t110 * t103;
t150 = pkin(5) * qJD(5) - qJD(6);
t54 = t56 ^ 2;
t147 = t54 * t158;
t146 = 0.2e1 * (t108 ^ 2 + t109 ^ 2) * qJD(2);
t123 = qJ(6) * t43 + t150 * t56;
t132 = -pkin(5) * t43 + t171 * t56;
t7 = t110 * t132 + t111 * t123 + t13;
t145 = t23 * t43 - t56 * t7;
t142 = t13 * t56 - t38 * t43;
t141 = t43 * t55 - t56 * t44;
t140 = t100 * t56 - t188;
t139 = -t111 * pkin(5) - t110 * qJ(6);
t137 = t110 * t14 - t111 * t15;
t136 = t110 * t185 + t111 * t18;
t86 = -pkin(4) + t139;
t131 = t162 + t177;
t30 = t103 * t55 + t110 * t44;
t28 = t102 * t55 - t111 * t44;
t130 = t100 * t102 - t111 * t148;
t129 = -t43 * t86 - t56 * t71 - t197;
t128 = -t7 + (t56 * t86 - t196) * qJD(5);
t75 = -t170 + t86;
t125 = -t7 + (t56 * t75 - t188) * qJD(5);
t122 = (t191 * t56 - t193 * t55) * qJD(4);
t120 = -0.2e1 * t121;
t70 = qJD(5) * t139 + t111 * qJD(6);
t1 = -qJD(5) * t137 + t4 * t110 + t3 * t111;
t2 = -qJD(5) * t136 - t6 * t110 - t5 * t111;
t117 = -t149 * t55 - t43 * t75 + t56 * t59 - t189;
t116 = pkin(3) * t122 - t100 * t43 - t189;
t94 = -0.2e1 * t158;
t93 = 0.2e1 * t158;
t73 = t86 * t102;
t69 = t206 * t193 * t179;
t67 = t75 * t102;
t63 = t103 * t99 + t110 * t149;
t62 = t102 * t99 - t111 * t149;
t61 = 0.2e1 * t69;
t48 = t126 * qJD(2) - t58 * qJD(3);
t31 = -t110 * t43 + t161;
t27 = -0.2e1 * t41 * t56 - 0.2e1 * t147;
t26 = -0.2e1 * t178 * t56 + 0.2e1 * t147;
t25 = t41 + t178;
t24 = t56 * t203 + t165;
t17 = 0.2e1 * t165 * t56 + t54 * t203;
t16 = 0.4e1 * t158 * t56 - t178 + t41;
t9 = -t110 * t141 + t161 * t55;
t8 = -0.2e1 * t111 * t141 - 0.2e1 * t162 * t55;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, qJ(2) * t146, -t126 * t120, 0.2e1 * qJD(3) * t127 ^ 2 + 0.2e1 * t126 * t180, 0, t127 * t204, 0, 0, t98 * t204, t98 * t120, -0.2e1 * t180 * t58 + 0.2e1 * t48 * t126 + 0.2e1 * (qJD(3) * t57 + t47) * t127, -0.2e1 * t58 * t47 + 0.2e1 * t57 * t48, -0.2e1 * t56 * t43, 0.2e1 * t141, 0, t32, 0, 0, 0.2e1 * t164 * t55 + 0.2e1 * t60 * t44, 0.2e1 * t164 * t56 - 0.2e1 * t60 * t43, 0.2e1 * t12 * t55 - 0.2e1 * t39 * t44 + 0.2e1 * t142, -0.2e1 * t39 * t12 + 0.2e1 * t164 * t60 + 0.2e1 * t190, t27, 0.2e1 * t17, t8, t26, -0.2e1 * t9, t32, 0.2e1 * t110 * t142 + 0.2e1 * t18 * t44 + 0.2e1 * t34 * t56 + 0.2e1 * t6 * t55, 0.2e1 * t111 * t142 - 0.2e1 * t185 * t44 - 0.2e1 * t33 * t56 + 0.2e1 * t5 * t55, 0.2e1 * t136 * t43 + 0.2e1 * t201 * t56, 0.2e1 * t18 * t6 - 0.2e1 * t185 * t5 + 0.2e1 * t190, t27, t8, -0.2e1 * t17, t32, 0.2e1 * t9, t26, -0.2e1 * t110 * t145 - 0.2e1 * t15 * t44 + 0.2e1 * t161 * t23 - 0.2e1 * t4 * t55, 0.2e1 * t137 * t43 - 0.2e1 * t200 * t56, 0.2e1 * t111 * t145 + 0.2e1 * t14 * t44 + 0.2e1 * t22 * t56 + 0.2e1 * t3 * t55, 0.2e1 * t14 * t3 + 0.2e1 * t15 * t4 + 0.2e1 * t23 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t180, -t121, 0, 0, 0, 0, 0, 0, 0, 0, t44, -t43, 0, t164, 0, 0, 0, 0, 0, 0, -t28, -t30, t25, -t201, 0, 0, 0, 0, 0, 0, -t28, t25, t30, t200; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t121, 0, -t180, 0, t48, t47, 0, 0, 0, 0, -t43, 0, -t44, 0, -t13, t12 (-t191 * t44 + t193 * t43 + t122) * pkin(3) (-t191 * t12 - t193 * t13 + (t193 * t39 + t163) * qJD(4)) * pkin(3), -t24, -t16, t30, t24, -t28, 0, t33 + (qJD(5) * t140 - t13) * t111 + t116 * t110, -t102 * t140 + t111 * t116 + t186, t2, t13 * t100 + (t159 * t185 - t160 * t18 + t163) * t179 + t2 * t99, -t24, t30, t16, 0, t28, t24, t110 * t117 + t111 * t125 + t22, t1, t125 * t110 + (-t117 - t175) * t111, t23 * t59 + t7 * t75 + (t14 * t159 + t15 * t160) * t179 + t1 * t99; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t148, -0.2e1 * t149, 0, 0, t93, t199, 0, t94, 0, 0, 0.2e1 * t130, 0.2e1 * t181, t61, 0.2e1 * t100 * t148 + 0.2e1 * t183, t93, 0, -t199, 0, 0, t94, -0.2e1 * t59 * t111 + 0.2e1 * t67, t61, -0.2e1 * t103 * t75 - 0.2e1 * t59 * t110, 0.2e1 * t75 * t59 + 0.2e1 * t183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, 0, -t44, 0, -t13, t12, 0, 0, -t24, -t16, t30, t24, -t28, 0, t33 + (pkin(4) * t43 - t197) * t110 + (-t13 + (-pkin(4) * t56 - t196) * qJD(5)) * t111, pkin(4) * t131 + pkin(9) * t28 + t186, t2, -t13 * pkin(4) + pkin(9) * t2, -t24, t30, t16, 0, t28, t24, t110 * t129 + t111 * t128 + t22, t1, t128 * t110 + (-t129 - t175) * t111, pkin(9) * t1 - t23 * t71 + t7 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t148, -t149, 0, 0, t93, t199, 0, t94, 0, 0, t130 - t169, -t168 + t181, t69, -pkin(4) * t148 + t182, t93, 0, -t199, 0, 0, t94, t184 * t111 + t67 + t73, t69, t184 * t110 + (-t75 - t86) * t103, t59 * t86 - t75 * t71 + t182; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, t199, 0, t94, 0, 0, -0.2e1 * t169, -0.2e1 * t168, 0, 0, t93, 0, -t199, 0, 0, t94, 0.2e1 * t71 * t111 + 0.2e1 * t73, 0, -0.2e1 * t103 * t86 + 0.2e1 * t71 * t110, -0.2e1 * t86 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t131, 0, -t31, t44, t6, t5, 0, 0, 0, -t131, 0, t44, t31, 0, t6 + 0.2e1 * t195, t110 * t123 - t111 * t132, 0.2e1 * t173 - t5 + 0.2e1 * t176, -t4 * pkin(5) + t3 * qJ(6) + t14 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t102, -t103, 0, 0, 0, 0, 0, 0, 0, 0, -t102, 0, t103, t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, -t102, 0, -t63, t62, 0, 0, 0, t103, 0, 0, t102, 0, -t63, t70, -t62 (-pkin(5) * t149 - t171 * t99) * t110 + (qJ(6) * t149 - t150 * t99) * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, -t102, 0, -t166, t167, 0, 0, 0, t103, 0, 0, t102, 0, -t166, t70, -t167, t70 * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t198, qJ(6) * t198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, -t131, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t103, 0, t166; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t10;
