% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRP5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:12:30
% EndTime: 2019-03-09 06:12:44
% DurationCPUTime: 6.72s
% Computational Cost: add. (14372->500), mult. (38014->606), div. (0->0), fcn. (29892->8), ass. (0->253)
t189 = cos(qJ(5));
t273 = qJD(5) * t189;
t185 = sin(pkin(10));
t186 = cos(pkin(10));
t328 = sin(qJ(3));
t330 = cos(qJ(3));
t211 = -t330 * t185 - t328 * t186;
t158 = t211 * qJD(1);
t188 = sin(qJ(4));
t262 = t328 * t185;
t212 = -t330 * t186 + t262;
t157 = t212 * qJD(1);
t329 = cos(qJ(4));
t338 = t329 * t157;
t132 = t158 * t188 - t338;
t360 = t132 * t189;
t375 = t273 - t360;
t187 = sin(qJ(5));
t215 = t188 * t157 + t329 * t158;
t270 = qJD(3) + qJD(4);
t119 = t187 * t270 - t189 * t215;
t294 = t119 * t187;
t240 = t189 * t270;
t117 = -t187 * t215 - t240;
t298 = t117 * t189;
t223 = t294 + t298;
t255 = qJD(3) * t330;
t235 = qJD(1) * t255;
t175 = t186 * t235;
t254 = qJD(3) * t328;
t234 = qJD(1) * t254;
t150 = t185 * t234 - t175;
t276 = qJD(4) * t188;
t279 = t185 * t235 + t186 * t234;
t206 = t329 * t150 - t158 * t276 + t188 * t279;
t253 = qJD(4) * t329;
t193 = t157 * t253 + t206;
t65 = qJD(5) * t119 - t187 * t193;
t305 = -t117 * t273 - t187 * t65;
t274 = qJD(5) * t187;
t64 = -qJD(5) * t240 + t189 * t193 - t215 * t274;
t307 = t119 * t274 + t189 * t64;
t370 = t132 * t223 + t305 - t307;
t325 = pkin(7) + qJ(2);
t170 = t325 * t185;
t166 = qJD(1) * t170;
t171 = t325 * t186;
t167 = qJD(1) * t171;
t213 = t328 * t166 - t330 * t167;
t116 = -t157 * pkin(8) - t213;
t113 = t329 * t116;
t263 = t328 * t167;
t136 = -t330 * t166 - t263;
t115 = t158 * pkin(8) + t136;
t114 = qJD(3) * pkin(3) + t115;
t76 = t188 * t114 + t113;
t70 = pkin(9) * t270 + t76;
t179 = -t186 * pkin(2) - pkin(1);
t168 = qJD(1) * t179 + qJD(2);
t138 = t157 * pkin(3) + t168;
t77 = -pkin(4) * t132 + pkin(9) * t215 + t138;
t34 = t187 * t77 + t189 * t70;
t354 = qJD(5) - t132;
t22 = qJ(6) * t354 + t34;
t374 = t22 * t354;
t339 = t132 * t270;
t373 = -t193 - t339;
t245 = t188 * t150 - t329 * t279;
t355 = qJD(4) * t215;
t92 = -t245 - t355;
t89 = t187 * t92;
t304 = t273 * t354 + t89;
t219 = -t354 * t360 + t304;
t295 = t119 * t215;
t372 = t219 + t295;
t91 = t189 * t92;
t301 = -t274 * t354 + t91;
t361 = t132 * t187;
t268 = t354 * t361 + t301;
t291 = t215 * t117;
t221 = t268 - t291;
t289 = t132 ^ 2;
t290 = t215 ^ 2;
t369 = -t289 + t290;
t33 = -t187 * t70 + t189 * t77;
t280 = qJD(6) - t33;
t21 = -pkin(5) * t354 + t280;
t309 = t92 * qJ(6);
t202 = t211 * qJD(2);
t198 = qJD(1) * t202;
t111 = qJD(3) * t213 + t198;
t100 = t150 * pkin(8) + t111;
t256 = qJD(2) * t328;
t257 = qJD(2) * t330;
t357 = -t185 * t256 + t186 * t257;
t209 = t357 * qJD(1) - t166 * t255;
t110 = -t167 * t254 + t209;
t99 = -pkin(8) * t279 + t110;
t194 = -t188 * t100 - t114 * t253 + t116 * t276 - t329 * t99;
t252 = t279 * pkin(3);
t50 = t92 * pkin(4) + pkin(9) * t193 + t252;
t7 = t187 * t50 - t189 * t194 + t77 * t273 - t274 * t70;
t2 = qJD(6) * t354 + t309 + t7;
t248 = -t187 * t194 - t189 * t50 + t70 * t273 + t77 * t274;
t331 = pkin(5) * t92;
t4 = t248 - t331;
t346 = t4 * t187 + t2 * t189;
t368 = t21 * t375 + t346;
t218 = t34 * t354 - t248;
t63 = t65 * t189;
t367 = -t63 + (t274 - t361) * t117;
t61 = t64 * t187;
t366 = t119 * t375 - t61;
t365 = pkin(5) * t215;
t364 = t132 * t33;
t363 = qJ(6) * t215;
t362 = t354 * t215;
t284 = t132 * t215;
t358 = t138 * t215;
t272 = t215 * qJD(3);
t356 = -t272 + t245;
t96 = t329 * t100;
t250 = t188 * t99 - t96;
t27 = qJD(4) * t76 + t250;
t11 = t65 * pkin(5) + t64 * qJ(6) - t119 * qJD(6) + t27;
t112 = t188 * t116;
t75 = t329 * t114 - t112;
t69 = -pkin(4) * t270 - t75;
t42 = t117 * pkin(5) - t119 * qJ(6) + t69;
t251 = -t11 * t189 + t42 * t274;
t353 = -t21 * t215 + t251;
t321 = t11 * t187;
t352 = t22 * t215 - t321;
t249 = -t27 * t189 + t69 * t274;
t351 = t33 * t215 + t249;
t324 = t27 * t187 + t69 * t273;
t350 = -t34 * t215 + t324;
t349 = -t138 * t132 + t194;
t231 = pkin(5) * t187 - qJ(6) * t189;
t348 = pkin(5) * t274 - qJ(6) * t273 - qJD(6) * t187 - t132 * t231;
t205 = t188 * t212;
t135 = -t211 * t329 - t205;
t299 = t117 * t187;
t199 = t329 * t212;
t203 = qJD(3) * t211;
t97 = -t188 * t203 + t270 * t199 - t211 * t276;
t347 = (qJD(5) * (-t119 * t189 + t299) - t63 + t61) * t135 + t223 * t97;
t95 = -pkin(4) * t215 - pkin(9) * t132;
t345 = -t4 + t374;
t344 = -t33 * t354 + t7;
t342 = -t119 * t354 + t65;
t78 = t188 * t115 + t113;
t236 = pkin(3) * t276 - t78;
t134 = -t188 * t211 + t199;
t312 = t187 * t97;
t217 = t135 * t273 - t312;
t283 = t135 * t187;
t204 = qJD(3) * t212;
t98 = -qJD(4) * t205 - t188 * t204 - t329 * t203 - t211 * t253;
t337 = t98 * t117 + t134 * t65 + t217 * t354 + t283 * t92;
t139 = -t330 * t170 - t328 * t171;
t126 = pkin(8) * t211 + t139;
t140 = -t328 * t170 + t330 * t171;
t127 = -pkin(8) * t212 + t140;
t87 = t188 * t126 + t329 * t127;
t143 = pkin(3) * t212 + t179;
t88 = t134 * pkin(4) - t135 * pkin(9) + t143;
t323 = t187 * t88 + t189 * t87;
t121 = -t170 * t255 - t171 * t254 + t357;
t102 = pkin(8) * t203 + t121;
t191 = pkin(8) * t204 + t170 * t254 - t171 * t255 - t185 * t257 - t186 * t256;
t37 = t329 * t102 + t126 * t253 - t127 * t276 + t188 * t191;
t200 = pkin(3) * t203;
t55 = t98 * pkin(4) + t97 * pkin(9) - t200;
t13 = -qJD(5) * t323 - t187 * t37 + t189 * t55;
t335 = t119 ^ 2;
t334 = t354 ^ 2;
t333 = t158 ^ 2;
t332 = qJD(3) ^ 2;
t327 = pkin(3) * t158;
t86 = -t329 * t126 + t188 * t127;
t326 = t27 * t86;
t5 = t7 * t189;
t46 = t187 * t95 + t189 * t75;
t79 = t329 * t115 - t112;
t82 = -t327 + t95;
t44 = t187 * t82 + t189 * t79;
t322 = pkin(3) * qJD(4);
t319 = t119 * t42;
t315 = t134 * t92;
t180 = pkin(3) * t188 + pkin(9);
t314 = t180 * t92;
t311 = t189 * t97;
t239 = pkin(3) * t253;
t224 = t189 * t239;
t308 = -t117 * t224 - t180 * t63;
t303 = t236 + t348;
t302 = t348 - t76;
t300 = t117 * t180;
t297 = t119 * t117;
t282 = t135 * t189;
t281 = t158 * t157;
t278 = t185 ^ 2 + t186 ^ 2;
t277 = qJD(3) * t158;
t267 = t329 * pkin(3);
t265 = t187 * t329;
t264 = t189 * t329;
t261 = t180 * t274;
t260 = t180 * t273;
t258 = t117 ^ 2 - t335;
t246 = t278 * qJD(1) ^ 2;
t243 = t354 * t187;
t238 = qJD(1) * t262;
t233 = (qJD(5) * t117 - t64) * pkin(9);
t232 = t189 * pkin(5) + t187 * qJ(6);
t230 = -t132 * t69 - t314;
t229 = t187 * t22 - t189 * t21;
t228 = t187 * t34 + t189 * t33;
t45 = -t187 * t75 + t189 * t95;
t43 = -t187 * t79 + t189 * t82;
t52 = -t187 * t87 + t189 * t88;
t220 = 0.2e1 * t278 * qJD(2) * qJD(1);
t169 = -pkin(4) - t232;
t216 = -t135 * t274 - t311;
t12 = t187 * t55 + t189 * t37 + t88 * t273 - t274 * t87;
t214 = t304 * pkin(9);
t210 = t119 * t239 - t180 * t64;
t201 = -t187 * t239 - t260;
t197 = t117 * t217 + t283 * t65;
t196 = -qJD(5) * t229 + t346;
t195 = -qJD(5) * t228 + t187 * t248 + t5;
t38 = qJD(4) * t87 + t188 * t102 - t329 * t191;
t181 = -t267 - pkin(4);
t161 = -t267 + t169;
t154 = t157 ^ 2;
t122 = -qJD(3) * t140 + t202;
t80 = pkin(5) * t119 + qJ(6) * t117;
t58 = pkin(9) * t63;
t56 = t135 * t231 + t86;
t40 = -pkin(5) * t134 - t52;
t39 = qJ(6) * t134 + t323;
t35 = t117 * t354 - t64;
t32 = t354 * t98 + t315;
t31 = -t45 + t365;
t30 = t46 - t363;
t29 = -t43 + t365;
t28 = t44 - t363;
t15 = t119 * t216 - t282 * t64;
t14 = -t231 * t97 + (qJD(5) * t232 - qJD(6) * t189) * t135 + t38;
t10 = t119 * t98 - t64 * t134 + t216 * t354 + t282 * t92;
t9 = -t98 * pkin(5) - t13;
t6 = qJ(6) * t98 + qJD(6) * t134 + t12;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220, qJ(2) * t220, t150 * t211 + t158 * t204, t150 * t212 + t157 * t204 - t158 * t203 + t211 * t279, -t212 * t332, -t157 * t203 + t212 * t279, t211 * t332, 0, t179 * t279 + (-t168 * t211 + t122) * qJD(3), -t121 * qJD(3) - t179 * t150 - t168 * t204, t111 * t211 - t121 * t157 + t122 * t158 - t213 * t203 + t139 * t150 - t140 * t279 + (qJD(3) * t136 - t110) * t212, t110 * t140 + t111 * t139 - t121 * t213 + t122 * t136, -t135 * t193 + t215 * t97, -t132 * t97 + t134 * t193 - t135 * t92 + t215 * t98, -t97 * t270, -t132 * t98 + t315, -t98 * t270, 0, t132 * t200 + t134 * t252 + t138 * t98 + t143 * t92 - t270 * t38, t135 * t252 - t138 * t97 - t143 * t193 + t200 * t215 - t270 * t37, t132 * t37 + t134 * t194 + t27 * t135 - t193 * t86 - t215 * t38 + t75 * t97 - t76 * t98 - t87 * t92, -t138 * t200 + t143 * t252 - t194 * t87 + t76 * t37 - t75 * t38 + t326, t15, t347, t10, t197, -t337, t32, t38 * t117 + t13 * t354 - t134 * t248 + t135 * t324 - t312 * t69 + t33 * t98 + t52 * t92 + t86 * t65, t38 * t119 - t12 * t354 - t7 * t134 - t249 * t135 - t69 * t311 - t323 * t92 - t34 * t98 - t86 * t64, -t12 * t117 - t13 * t119 + t52 * t64 - t323 * t65 + t228 * t97 + (-t7 * t187 + t248 * t189 + (t187 * t33 - t189 * t34) * qJD(5)) * t135, t12 * t34 + t13 * t33 - t248 * t52 + t323 * t7 + t38 * t69 + t326, t15, t10, -t347, t32, t337, t197, -t42 * t312 + t14 * t117 - t9 * t354 - t4 * t134 - t21 * t98 - t40 * t92 + t56 * t65 + (t273 * t42 + t321) * t135, -t6 * t117 + t9 * t119 - t39 * t65 - t40 * t64 + t229 * t97 + (-t2 * t187 + t4 * t189 + (-t187 * t21 - t189 * t22) * qJD(5)) * t135, -t14 * t119 + t2 * t134 + t251 * t135 + t22 * t98 + t42 * t311 + t354 * t6 + t39 * t92 + t56 * t64, t11 * t56 + t14 * t42 + t2 * t39 + t21 * t9 + t22 * t6 + t4 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t246, -qJ(2) * t246, 0, 0, 0, 0, 0, 0, -t277 + t279, t175 + (-t238 - t157) * qJD(3), -t154 - t333, -t136 * t158 - t157 * t213, 0, 0, 0, 0, 0, 0, -t245 - t272 - 0.2e1 * t355, -t193 + t339, -t289 - t290, -t76 * t132 - t215 * t75 + t252, 0, 0, 0, 0, 0, 0, t268 + t291, -t189 * t334 + t295 - t89 (t117 * t132 + t64) * t189 + t119 * t243 + t305, t344 * t187 + t189 * t218 + t69 * t215, 0, 0, 0, 0, 0, 0, -t187 * t334 + t291 + t91 (-t294 + t298) * t132 + t305 + t307, t219 - t295, t42 * t215 + t345 * t189 + (t21 * t354 + t2) * t187; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t281, -t154 + t333, t175 + (-t238 + t157) * qJD(3), t281, -t277 - t279, 0, t168 * t158 + t198, t168 * t157 + (t263 + t136) * qJD(3) - t209, 0, 0, t284, t369, t373, -t284, t356, 0, -t116 * t253 + t96 - t132 * t327 + t358 + t78 * t270 + (-qJD(4) * t114 - t270 * t322 - t99) * t188, t79 * t270 + (-t158 * t215 - t253 * t270) * pkin(3) + t349, -t76 * t215 - t79 * t132 + t75 * t132 + t78 * t215 + (-t188 * t92 + t329 * t206 + (-t188 * t215 + (t132 + t338) * t329) * qJD(4)) * pkin(3), t75 * t78 - t76 * t79 + (-t329 * t27 + t138 * t158 - t188 * t194 + (-t188 * t75 + t329 * t76) * qJD(4)) * pkin(3), t366, t370, t372, t117 * t243 - t63, t221, t362, t181 * t65 + t230 * t187 + t236 * t117 + (-t43 + t201) * t354 + t351, -t181 * t64 + t230 * t189 + t236 * t119 + (-t224 + t44 + t261) * t354 + t350, t44 * t117 + t43 * t119 + t5 + (t364 + (t119 * t180 - t33) * qJD(5)) * t189 + (t132 * t34 + t248 + (-t34 + t300) * qJD(5) + t210) * t187 + t308, t27 * t181 - t33 * t43 - t34 * t44 - t69 * t78 + (t188 * t69 + t264 * t34 - t265 * t33) * t322 + t195 * t180, t366, t372, -t370, t362, -t221, t367, t161 * t65 + (-t132 * t42 - t314) * t187 + t303 * t117 + (t29 + t201) * t354 + t353, t28 * t117 + (-t29 + t260) * t119 + (t132 * t22 + (-t22 + t300) * qJD(5) + t210) * t187 + t308 + t368, -t303 * t119 + t161 * t64 + t314 * t189 + (-t28 - t261 + (t239 - t42) * t189) * t354 + t352, t11 * t161 - t21 * t29 - t22 * t28 + t303 * t42 + (t21 * t265 + t22 * t264) * t322 + t196 * t180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t284, t369, t373, -t284, t356, 0, t76 * qJD(3) - t250 + t358, t270 * t75 + t349, 0, 0, t366, t370, t372, t299 * t354 - t63, t221, t362, -pkin(4) * t65 - t76 * t117 - t354 * t45 - t361 * t69 - t214 + t351, pkin(4) * t64 - t301 * pkin(9) - t76 * t119 + t354 * t46 - t360 * t69 + t350, t46 * t117 + t45 * t119 + t5 - t58 + (t364 + (pkin(9) * t119 - t33) * qJD(5)) * t189 + (-t218 + t233) * t187, -t27 * pkin(4) + pkin(9) * t195 - t33 * t45 - t34 * t46 - t69 * t76, t366, t372, -t370, t362, -t221, t367, t117 * t302 + t169 * t65 + t31 * t354 - t361 * t42 - t214 + t353, t30 * t117 - t58 + (pkin(9) * t273 - t31) * t119 + (t233 - t374) * t187 + t368, t169 * t64 + (-pkin(9) * t274 - t30) * t354 - t302 * t119 + (pkin(9) * t92 - t354 * t42) * t189 + t352, pkin(9) * t196 + t11 * t169 - t21 * t31 - t22 * t30 + t302 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, -t258, t35, -t297, -t342, t92, -t119 * t69 + t218, t117 * t69 - t344, 0, 0, t297, t35, t258, t92, t342, -t297, -t117 * t80 + t218 - t319 + 0.2e1 * t331, pkin(5) * t64 - t65 * qJ(6) + (t22 - t34) * t119 + (t21 - t280) * t117, 0.2e1 * t309 - t42 * t117 + t80 * t119 + (0.2e1 * qJD(6) - t33) * t354 + t7, -t4 * pkin(5) + t2 * qJ(6) - t21 * t34 + t22 * t280 - t42 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297 - t92, t35, -t334 - t335, t319 - t345;];
tauc_reg  = t1;
