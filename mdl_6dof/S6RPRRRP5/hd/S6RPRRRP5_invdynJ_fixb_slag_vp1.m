% Calculate vector of inverse dynamics joint torques for
% S6RPRRRP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,theta2]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:13
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RPRRRP5_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRP5_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRP5_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRP5_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRP5_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRRP5_invdynJ_fixb_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRRRP5_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRRRP5_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRRRP5_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:10:46
% EndTime: 2019-03-09 06:12:23
% DurationCPUTime: 84.41s
% Computational Cost: add. (59928->1375), mult. (58713->1734), div. (0->0), fcn. (54709->10), ass. (0->674)
t1221 = Icges(6,1) + Icges(7,1);
t1235 = Icges(7,4) + Icges(6,5);
t1234 = Icges(6,6) - Icges(7,6);
t672 = sin(qJ(5));
t1265 = (Icges(6,4) - Icges(7,5)) * t672;
t1220 = Icges(6,2) + Icges(7,3);
t674 = cos(qJ(5));
t1264 = -t1234 * t672 + t1235 * t674;
t1263 = t1221 * t674 - t1265;
t1261 = Icges(7,2) + Icges(6,3);
t665 = pkin(10) + qJ(3);
t643 = qJ(4) + t665;
t623 = sin(t643);
t624 = cos(t643);
t1066 = Icges(6,4) * t674;
t815 = -Icges(6,2) * t672 + t1066;
t1262 = -t1234 * t624 + t623 * t815;
t1019 = t623 * t672;
t1017 = t623 * t674;
t571 = Icges(7,5) * t1017;
t1233 = Icges(7,3) * t1019 - t1262 + t571;
t1226 = -t1235 * t624 + t1263 * t623;
t1059 = Icges(7,5) * t674;
t809 = Icges(7,3) * t672 + t1059;
t1260 = (t809 - t815) * t624;
t1259 = t1264 * t624;
t1258 = t1263 * t624;
t1257 = t1220 * t674 + t1265;
t1256 = -t1234 * t674 - t1235 * t672;
t673 = sin(qJ(1));
t938 = qJD(5) * t673;
t892 = t624 * t938;
t944 = qJD(1) * t673;
t1255 = -t892 + t944;
t675 = cos(qJ(1));
t1016 = t623 * t675;
t1228 = -t1261 * t624 + t1264 * t623;
t1001 = t673 * t674;
t999 = t675 * t672;
t519 = t624 * t999 - t1001;
t1000 = t674 * t675;
t1002 = t672 * t673;
t520 = t1000 * t624 + t1002;
t1154 = t1016 * t1228 + t1226 * t520 + t1233 * t519;
t271 = Icges(6,5) * t520 - Icges(6,6) * t519 + Icges(6,3) * t1016;
t274 = Icges(7,4) * t520 + Icges(7,2) * t1016 + Icges(7,6) * t519;
t1229 = t271 + t274;
t1061 = Icges(7,5) * t519;
t280 = Icges(7,1) * t520 + Icges(7,4) * t1016 + t1061;
t489 = Icges(6,4) * t519;
t283 = Icges(6,1) * t520 + Icges(6,5) * t1016 - t489;
t1242 = t280 + t283;
t486 = Icges(7,5) * t520;
t268 = Icges(7,6) * t1016 + Icges(7,3) * t519 + t486;
t1068 = Icges(6,4) * t520;
t277 = -Icges(6,2) * t519 + Icges(6,6) * t1016 + t1068;
t1244 = t268 - t277;
t1193 = t1016 * t1229 + t1242 * t520 + t1244 * t519;
t1018 = t623 * t673;
t517 = t1002 * t624 + t1000;
t518 = t1001 * t624 - t999;
t269 = Icges(6,5) * t518 - Icges(6,6) * t517 + Icges(6,3) * t1018;
t272 = Icges(7,4) * t518 + Icges(7,2) * t1018 + Icges(7,6) * t517;
t1191 = t269 + t272;
t485 = Icges(7,5) * t518;
t267 = -Icges(7,6) * t1018 - Icges(7,3) * t517 - t485;
t488 = Icges(6,4) * t518;
t275 = -Icges(6,2) * t517 + Icges(6,6) * t1018 + t488;
t1192 = t267 + t275;
t484 = Icges(7,5) * t517;
t278 = Icges(7,1) * t518 + Icges(7,4) * t1018 + t484;
t487 = Icges(6,4) * t517;
t282 = -Icges(6,1) * t518 - Icges(6,5) * t1018 + t487;
t1243 = t278 - t282;
t1194 = t1016 * t1191 - t1192 * t519 + t1243 * t520;
t645 = qJD(3) * t673;
t593 = qJD(4) * t673 + t645;
t936 = qJD(5) * t675;
t479 = t623 * t936 + t593;
t666 = qJD(3) + qJD(4);
t594 = t666 * t675;
t480 = -t623 * t938 + t594;
t940 = qJD(5) * t624;
t587 = qJD(1) - t940;
t1202 = t1154 * t587 + t1193 * t479 - t1194 * t480;
t1155 = t1018 * t1228 + t1226 * t518 + t1233 * t517;
t1195 = t1018 * t1229 + t1242 * t518 + t1244 * t517;
t1196 = t1018 * t1191 - t1192 * t517 + t1243 * t518;
t1203 = t1155 * t587 + t1195 * t479 - t1196 * t480;
t613 = t624 * pkin(4);
t1148 = pkin(9) * t623 + t613;
t1013 = t624 * t673;
t588 = pkin(9) * t1013;
t926 = pkin(4) * t1018;
t475 = t588 - t926;
t535 = pkin(4) * t623 - pkin(9) * t624;
t1254 = qJD(1) * t475 + t1148 * t594 + t535 * t944;
t891 = t624 * t936;
t917 = t623 * t999;
t249 = qJD(1) * t517 + t666 * t917 - t672 * t938 - t674 * t891;
t773 = t587 * t672;
t852 = qJD(1) * t624 - qJD(5);
t919 = t623 * t594;
t250 = t675 * t773 + (-t673 * t852 - t919) * t674;
t897 = t623 * t944;
t915 = t624 * t594;
t732 = -t897 + t915;
t139 = Icges(7,5) * t250 + Icges(7,6) * t732 - Icges(7,3) * t249;
t145 = Icges(6,4) * t250 + Icges(6,2) * t249 + Icges(6,6) * t732;
t1253 = t139 - t145;
t918 = t623 * t1002;
t937 = qJD(5) * t674;
t943 = qJD(1) * t675;
t251 = -t666 * t918 - t672 * t936 - t674 * t944 + (t672 * t943 + t673 * t937) * t624;
t1004 = t666 * t674;
t252 = t852 * t1000 + (-t1004 * t623 + t773) * t673;
t1005 = t666 * t673;
t733 = t1005 * t624 + t623 * t943;
t140 = Icges(7,5) * t252 + Icges(7,6) * t733 + Icges(7,3) * t251;
t146 = Icges(6,4) * t252 - Icges(6,2) * t251 + Icges(6,6) * t733;
t1252 = t140 - t146;
t141 = Icges(6,5) * t250 + Icges(6,6) * t249 + Icges(6,3) * t732;
t143 = Icges(7,4) * t250 + Icges(7,2) * t732 - Icges(7,6) * t249;
t1251 = t141 + t143;
t142 = Icges(6,5) * t252 - Icges(6,6) * t251 + Icges(6,3) * t733;
t144 = Icges(7,4) * t252 + Icges(7,2) * t733 + Icges(7,6) * t251;
t1250 = t142 + t144;
t147 = Icges(7,1) * t250 + Icges(7,4) * t732 - Icges(7,5) * t249;
t149 = Icges(6,1) * t250 + Icges(6,4) * t249 + Icges(6,5) * t732;
t1249 = t147 + t149;
t148 = Icges(7,1) * t252 + Icges(7,4) * t733 + Icges(7,5) * t251;
t150 = Icges(6,1) * t252 - Icges(6,4) * t251 + Icges(6,5) * t733;
t1248 = t148 + t150;
t1247 = t1260 * t666 + (qJD(5) * t1257 - t1234 * t666) * t623;
t1246 = t1259 * t666 + (qJD(5) * t1256 + t1261 * t666) * t623;
t819 = -Icges(6,1) * t672 - t1066;
t1245 = t1258 * t666 + (t1235 * t666 + (-Icges(7,1) * t672 + t1059 + t819) * qJD(5)) * t623;
t1241 = t1226 * t674 + t1233 * t672;
t1012 = t624 * t674;
t1014 = t624 * t672;
t1197 = rSges(7,3) + qJ(6);
t1211 = rSges(7,1) + pkin(5);
t610 = t623 * rSges(7,2);
t1151 = -t1012 * t1211 - t1014 * t1197 - t610;
t826 = rSges(7,1) * t674 + rSges(7,3) * t672;
t1225 = (-pkin(5) * t674 - qJ(6) * t672 - t826) * t623;
t578 = rSges(7,2) * t1013;
t1185 = t1225 * t673 + t578;
t935 = qJD(6) * t672;
t563 = t623 * t935;
t979 = -rSges(7,2) * t624 - t1225;
t1240 = -t1151 * t480 + t1185 * t587 + t1255 * t979 + t563 * t675 + t1254;
t482 = qJD(6) * t517;
t1011 = t624 * t675;
t592 = pkin(4) * t1011;
t478 = pkin(9) * t1016 + t592;
t639 = cos(t665);
t622 = pkin(3) * t639;
t670 = cos(pkin(10));
t625 = pkin(2) * t670 + pkin(1);
t555 = t622 + t625;
t538 = t675 * t555;
t602 = t675 * t625;
t671 = -pkin(7) - qJ(2);
t664 = -pkin(8) + t671;
t949 = -t664 + t671;
t353 = t673 * t949 + t538 - t602;
t648 = t673 * qJ(2);
t597 = pkin(1) * t675 + t648;
t856 = -t671 * t673 + t602;
t433 = t856 - t597;
t973 = t433 + t597;
t905 = t353 + t973;
t638 = sin(t665);
t1010 = t638 * t673;
t927 = pkin(3) * t1010;
t573 = qJD(3) * t927;
t647 = qJD(2) * t675;
t957 = t573 + t647;
t715 = (t478 + t905) * qJD(1) - t593 * t535 - t957;
t992 = rSges(7,2) * t1016 + t1197 * t519 + t1211 * t520;
t1166 = t479 * t979 - t587 * t992 - t482 - t715;
t928 = -qJDD(3) - qJDD(4);
t929 = qJDD(5) * t623;
t939 = qJD(5) * t666;
t941 = qJD(5) * t623;
t931 = qJD(1) * qJD(3);
t628 = t673 * t931;
t930 = qJD(1) * qJD(4);
t952 = t673 * t930 + t628;
t225 = (t624 * t939 + t929) * t673 + (qJD(1) * t941 + t928) * t675 + t952;
t455 = -qJDD(5) * t624 + t623 * t939 + qJDD(1);
t550 = t666 * t926;
t292 = pkin(9) * t733 + qJD(1) * t592 - t550;
t452 = t1148 * t666;
t454 = t675 * t928 + t952;
t1006 = t639 * qJD(3) ^ 2;
t1095 = pkin(3) * t638;
t560 = -qJDD(3) * t675 + t628;
t932 = qJD(1) * qJD(2);
t951 = qJDD(2) * t673 + t675 * t932;
t730 = -pkin(3) * t1006 * t675 + t1095 * t560 + t951;
t476 = t1148 * t673;
t1003 = t671 * t675;
t965 = -t555 * t673 - t675 * t664;
t352 = t625 * t673 + t1003 + t965;
t650 = t675 * qJ(2);
t1089 = pkin(1) - t625;
t748 = t1089 * t673 - t1003;
t432 = -t650 + t748;
t595 = pkin(1) * t673 - t650;
t974 = t432 - t595;
t906 = t352 + t974;
t847 = -t476 + t906;
t607 = t664 * t944;
t614 = t671 * t944;
t960 = t555 - t625;
t262 = t943 * t960 - t573 - t607 + t614;
t525 = qJD(1) * t597 - t647;
t980 = t614 - (-t1089 * t675 - t648) * qJD(1) - t525;
t909 = -t262 + t980;
t686 = t454 * t535 + (-t292 + t909) * qJD(1) + t847 * qJDD(1) - t594 * t452 + t730;
t1152 = -t1197 * t517 - t1211 * t518;
t994 = rSges(7,2) * t1018 - t1152;
t1015 = t624 * t666;
t916 = t666 * t1014;
t731 = t623 * t937 + t916;
t996 = t826 * t1015 + (rSges(7,2) * t666 + (-rSges(7,1) * t672 + rSges(7,3) * t674) * qJD(5)) * t623 + t563 + t731 * qJ(6) + (t1004 * t624 - t672 * t941) * pkin(5);
t1218 = -t1197 * t251 - t1211 * t252 - t482;
t997 = rSges(7,2) * t733 - t1218;
t25 = -qJD(6) * t249 + qJDD(6) * t519 + t225 * t979 - t455 * t994 - t480 * t996 - t587 * t997 + t686;
t1239 = (-qJD(1) * t1166 + t25) * t675;
t483 = qJD(6) * t519;
t1238 = -t587 * t994 + t483;
t1237 = -g(1) + t25;
t420 = t594 * t535;
t646 = qJD(2) * t673;
t942 = qJD(3) * t675;
t894 = t638 * t942;
t853 = pkin(3) * t894;
t772 = t646 - t853;
t698 = qJD(1) * t847 - t420 + t772;
t86 = -t480 * t979 + t1238 + t698;
t1236 = t675 * t86;
t831 = rSges(6,1) * t518 - rSges(6,2) * t517;
t288 = -rSges(6,3) * t1018 - t831;
t1086 = rSges(6,1) * t674;
t830 = -rSges(6,2) * t672 + t1086;
t405 = -rSges(6,3) * t624 + t623 * t830;
t1232 = t288 * t587 - t405 * t480;
t1209 = t1016 * t1250 + t1191 * t732 + t1192 * t249 + t1243 * t250 + t1248 * t520 + t1252 * t519;
t1208 = t1016 * t1251 + t1229 * t732 + t1242 * t250 - t1244 * t249 + t1249 * t520 + t1253 * t519;
t1207 = t1018 * t1250 + t1191 * t733 - t1192 * t251 + t1243 * t252 + t1248 * t518 + t1252 * t517;
t1206 = t1018 * t1251 + t1229 * t733 + t1242 * t252 + t1244 * t251 + t1249 * t518 + t1253 * t517;
t1200 = t1016 * t1246 + t1226 * t250 + t1228 * t732 - t1233 * t249 + t1245 * t520 + t1247 * t519;
t1199 = t1018 * t1246 + t1226 * t252 + t1228 * t733 + t1233 * t251 + t1245 * t518 + t1247 * t517;
t790 = -t267 * t672 + t278 * t674;
t122 = -t272 * t624 + t623 * t790;
t788 = -t275 * t672 - t282 * t674;
t124 = -t269 * t624 + t623 * t788;
t1231 = t122 + t124;
t789 = t268 * t672 + t280 * t674;
t123 = -t274 * t624 + t623 * t789;
t787 = -t277 * t672 + t283 * t674;
t125 = -t271 * t624 + t623 * t787;
t1230 = t123 + t125;
t1153 = -t1228 * t624 + t1241 * t623;
t1227 = -t623 * t809 + t1262;
t1223 = (t1261 * t623 - t1241 + t1259) * t587 + (t1228 * t673 + t788 + t790) * t480 + (-t1228 * t675 - t787 - t789) * t479;
t969 = -t1017 * t1197 + t1019 * t1211;
t1222 = (t1241 * t666 - t1246) * t624 + (t1245 * t674 + t1247 * t672 + t1228 * t666 + (-t1226 * t672 + t1233 * t674) * qJD(5)) * t623;
t1219 = rSges(7,2) * t915 - t1197 * t249 + t1211 * t250 + t483;
t1217 = (-t1234 * t518 - t1235 * t517) * t480 + (t1234 * t520 + t1235 * t519) * t479 - t1256 * t587 * t623;
t559 = qJDD(3) * t673 + t675 * t931;
t453 = qJDD(4) * t673 + t675 * t930 + t559;
t224 = qJD(5) * t732 + t675 * t929 + t453;
t1213 = t1154 * t455 + t1193 * t224 + t1194 * t225 + t1200 * t587 + t1208 * t479 - t1209 * t480;
t1212 = t1155 * t455 + t1195 * t224 + t1196 * t225 + t1199 * t587 + t1206 * t479 - t1207 * t480;
t551 = pkin(9) * t915;
t734 = -t624 * t944 - t919;
t291 = pkin(4) * t734 - pkin(9) * t897 + t551;
t261 = -t853 + (-t673 * t960 + t675 * t949) * qJD(1);
t632 = qJ(2) * t943;
t950 = t632 + t646;
t765 = -qJDD(2) * t675 + qJD(1) * (-pkin(1) * t944 + t950) + qJDD(1) * t597 + t673 * t932;
t723 = qJD(1) * (qJD(1) * t748 - t632) + qJDD(1) * t433 + t765;
t688 = qJD(1) * t261 + qJDD(1) * t353 + (-t1006 * t673 - t559 * t638) * pkin(3) + t723;
t684 = qJD(1) * t291 + qJDD(1) * t478 - t452 * t593 - t453 * t535 + t688;
t998 = -rSges(7,2) * t897 + t1219;
t24 = qJD(6) * t251 + qJDD(6) * t517 - t224 * t979 + t455 * t992 - t479 * t996 + t587 * t998 + t684;
t1210 = -g(2) + t24;
t39 = (t666 * t790 - t144) * t624 + (t140 * t672 + t148 * t674 + t272 * t666 + (-t267 * t674 - t278 * t672) * qJD(5)) * t623;
t41 = (t666 * t788 - t142) * t624 + (-t146 * t672 + t150 * t674 + t269 * t666 + (-t275 * t674 + t282 * t672) * qJD(5)) * t623;
t1205 = t39 + t41;
t40 = (t666 * t789 - t143) * t624 + (t139 * t672 + t147 * t674 + t274 * t666 + (t268 * t674 - t280 * t672) * qJD(5)) * t623;
t42 = (t666 * t787 - t141) * t624 + (-t145 * t672 + t149 * t674 + t271 * t666 + (-t277 * t674 - t283 * t672) * qJD(5)) * t623;
t1204 = t40 + t42;
t1201 = t1153 * t587 + t1230 * t479 - t1231 * t480;
t1198 = rSges(4,2) * t638;
t1189 = t1227 * t673;
t1188 = t1227 * t675;
t1187 = t1226 * t673;
t1186 = t1226 * t675;
t585 = rSges(7,2) * t1011;
t1184 = t1225 * t675 + t585;
t1183 = -t1234 * t623 + t1260;
t1182 = t1235 * t623 + t1258;
t1054 = Icges(5,6) * t675;
t424 = Icges(5,4) * t1013 - Icges(5,2) * t1018 - t1054;
t608 = Icges(5,4) * t624;
t531 = Icges(5,1) * t623 + t608;
t1181 = -t531 * t673 - t424;
t816 = -Icges(5,2) * t623 + t608;
t425 = Icges(5,6) * t673 + t675 * t816;
t1180 = -t531 * t675 - t425;
t1069 = Icges(5,4) * t623;
t532 = Icges(5,1) * t624 - t1069;
t427 = Icges(5,5) * t673 + t532 * t675;
t529 = Icges(5,2) * t624 + t1069;
t1179 = -t529 * t675 + t427;
t1178 = -t529 + t532;
t1177 = t531 + t816;
t1132 = g(1) * t675 + g(2) * t673;
t1123 = t623 * t1132;
t989 = -t352 * t645 + t353 * t942;
t768 = t476 * t593 + t478 * t594 + t989;
t73 = t479 * t994 + t480 * t992 + t563 + t768;
t591 = pkin(9) * t1011;
t477 = -pkin(4) * t1016 + t591;
t858 = qJD(1) * t477 - t1148 * t593;
t863 = t475 * t593 + t477 * t594;
t872 = t1166 * t979;
t873 = t86 * t994;
t874 = t73 * t992;
t1176 = -t73 * (t1184 * t480 + t1185 * t479 + t624 * t935 + t891 * t994 + t863) + t1166 * (t1151 * t479 + t1184 * t587 - t563 * t673 + t941 * t992 + t858) - (-t623 * t873 + (-t673 * t874 + t675 * t872) * t624) * qJD(5) - (-t1197 * t672 - t1211 * t674 - pkin(4)) * t1123;
t290 = rSges(6,1) * t520 - rSges(6,2) * t519 + rSges(6,3) * t1016;
t103 = t290 * t587 - t405 * t479 + t715;
t924 = rSges(6,1) * t1017;
t962 = rSges(6,2) * t918 + rSges(6,3) * t1013;
t370 = -t673 * t924 + t962;
t961 = rSges(6,2) * t917 + rSges(6,3) * t1011;
t372 = -t675 * t924 + t961;
t609 = t623 * rSges(6,3);
t407 = rSges(6,1) * t1012 - rSges(6,2) * t1014 + t609;
t97 = -t288 * t479 + t290 * t480 + t768;
t1175 = -t103 * (t290 * t941 + t372 * t587 - t405 * t891 - t407 * t479 + t858) - t97 * (-t288 * t891 - t290 * t892 + t370 * t479 + t372 * t480 + t863) - (-pkin(4) - t1086) * t1123;
t1174 = t1223 * t623;
t1173 = -t1191 * t480 + t1228 * t587 + t1229 * t479;
t1144 = t1230 * t675 + t1231 * t673;
t1172 = -t1230 * t673 + t1231 * t675;
t1143 = t1193 * t675 + t1194 * t673;
t1171 = -t1193 * t673 + t1194 * t675;
t1142 = t1195 * t675 + t1196 * t673;
t1170 = -t1195 * t673 + t1196 * t675;
t1169 = t1255 * t405 - t288 * t941 + t370 * t587 + t407 * t480 + t1254;
t832 = rSges(6,1) * t252 - rSges(6,2) * t251;
t155 = rSges(6,3) * t733 + t832;
t829 = -rSges(6,1) * t672 - rSges(6,2) * t674;
t209 = t830 * t1015 + (rSges(6,3) * t666 + qJD(5) * t829) * t623;
t37 = -t155 * t587 - t209 * t480 + t225 * t405 + t288 * t455 + t686;
t1168 = (qJD(1) * t103 + t37) * t675;
t1167 = -t73 * t994 - t872;
t611 = t624 * rSges(5,1);
t1137 = -rSges(5,2) * t623 + t611;
t429 = rSges(5,1) * t1013 - rSges(5,2) * t1018 - rSges(5,3) * t675;
t657 = t673 * rSges(5,3);
t430 = rSges(5,1) * t1011 - rSges(5,2) * t1016 + t657;
t128 = t429 * t593 + t430 * t594 + t989;
t533 = rSges(5,1) * t623 + rSges(5,2) * t624;
t1022 = t533 * t594;
t851 = -t429 + t906;
t131 = qJD(1) * t851 - t1022 + t772;
t132 = -t533 * t593 + (t430 + t905) * qJD(1) - t957;
t472 = t533 * t673;
t474 = t533 * t675;
t1165 = -t131 * (qJD(1) * t472 - t1137 * t594) - t128 * (-t472 * t593 - t474 * t594) - t132 * (-qJD(1) * t474 - t1137 * t593);
t562 = qJD(1) * t595;
t1150 = qJD(1) * t432 - t562;
t1147 = (t1257 * t623 - t1226) * t587 + (-t1220 * t518 + t1243 + t484 - t487) * t480 + (t1220 * t520 - t1061 - t1242 + t489) * t479;
t1146 = (-Icges(7,1) * t1019 + t819 * t623 + t1233 + t571) * t587 + (t1221 * t517 + t1192 - t485 + t488) * t480 + (-t1221 * t519 - t1068 + t1244 + t486) * t479;
t1145 = t1217 * t623;
t621 = Icges(4,4) * t639;
t817 = -Icges(4,2) * t638 + t621;
t544 = Icges(4,1) * t638 + t621;
t1134 = t1153 * t455 + t1222 * t587;
t912 = rSges(6,1) * t250 + rSges(6,2) * t249 + rSges(6,3) * t915;
t153 = -rSges(6,3) * t897 + t912;
t38 = t153 * t587 - t209 * t479 - t224 * t405 + t290 * t455 + t684;
t1133 = t37 * t673 - t38 * t675;
t669 = sin(pkin(10));
t1085 = rSges(3,2) * t669;
t1088 = rSges(3,1) * t670;
t507 = t673 * rSges(3,3) + (-t1085 + t1088) * t675;
t1094 = g(1) * t673;
t1131 = -g(2) * t675 + t1094;
t527 = Icges(5,5) * t623 + Icges(5,6) * t624;
t1023 = t527 * t675;
t1028 = t425 * t623;
t1050 = Icges(5,3) * t675;
t528 = Icges(5,5) * t624 - Icges(5,6) * t623;
t1129 = -t666 * t1023 + (-t427 * t624 - t528 * t673 + t1028 + t1050) * qJD(1);
t1024 = t527 * t673;
t1063 = Icges(5,5) * t675;
t572 = Icges(5,4) * t1018;
t426 = Icges(5,1) * t1013 - t1063 - t572;
t782 = t424 * t623 - t426 * t624;
t423 = Icges(5,3) * t673 + t528 * t675;
t947 = qJD(1) * t423;
t1128 = qJD(1) * t782 - t1024 * t666 + t947;
t1051 = Icges(4,3) * t675;
t541 = Icges(4,5) * t639 - Icges(4,6) * t638;
t540 = Icges(4,5) * t638 + Icges(4,6) * t639;
t737 = qJD(3) * t540;
t439 = Icges(4,6) * t673 + t675 * t817;
t1025 = t439 * t638;
t1070 = Icges(4,4) * t638;
t545 = Icges(4,1) * t639 - t1070;
t441 = Icges(4,5) * t673 + t545 * t675;
t779 = -t441 * t639 + t1025;
t1127 = -t675 * t737 + (-t541 * t673 + t1051 + t779) * qJD(1);
t1008 = t639 * t673;
t1055 = Icges(4,6) * t675;
t438 = Icges(4,4) * t1008 - Icges(4,2) * t1010 - t1055;
t1026 = t438 * t638;
t1064 = Icges(4,5) * t675;
t601 = Icges(4,4) * t1010;
t440 = Icges(4,1) * t1008 - t1064 - t601;
t780 = -t440 * t639 + t1026;
t437 = Icges(4,3) * t673 + t541 * t675;
t946 = qJD(1) * t437;
t1126 = qJD(1) * t780 - t673 * t737 + t946;
t777 = t529 * t623 - t531 * t624;
t1125 = qJD(1) * t777 + t528 * t666;
t542 = Icges(4,2) * t639 + t1070;
t775 = t542 * t638 - t544 * t639;
t1124 = t775 * qJD(1) + qJD(3) * t541;
t436 = Icges(4,5) * t1008 - Icges(4,6) * t1010 - t1051;
t176 = -t436 * t675 - t673 * t780;
t1122 = t673 * (-t542 * t675 + t441) - t675 * (-Icges(4,2) * t1008 + t440 - t601);
t1119 = qJD(1) * t1177 + t593 * t1179 - t594 * (-Icges(5,2) * t1013 + t426 - t572);
t1118 = t224 / 0.2e1;
t1117 = t225 / 0.2e1;
t1116 = t453 / 0.2e1;
t1115 = t454 / 0.2e1;
t1113 = -t479 / 0.2e1;
t1112 = t479 / 0.2e1;
t1111 = -t480 / 0.2e1;
t1110 = t480 / 0.2e1;
t1109 = t559 / 0.2e1;
t1108 = t560 / 0.2e1;
t1107 = -t587 / 0.2e1;
t1106 = t587 / 0.2e1;
t1105 = -t593 / 0.2e1;
t1104 = t593 / 0.2e1;
t1103 = -t594 / 0.2e1;
t1102 = t594 / 0.2e1;
t1100 = t673 / 0.2e1;
t1099 = -t675 / 0.2e1;
t1097 = -rSges(7,2) - pkin(9);
t1096 = -rSges(6,3) - pkin(9);
t1091 = -qJD(1) / 0.2e1;
t1090 = qJD(1) / 0.2e1;
t1087 = rSges(4,1) * t639;
t1084 = rSges(4,2) * t639;
t1080 = t39 * t480;
t1079 = t40 * t479;
t1078 = t41 * t480;
t1077 = t42 * t479;
t658 = t673 * rSges(4,3);
t1076 = t673 * t1166;
t1075 = qJDD(1) / 0.2e1;
t1047 = qJD(1) * t73;
t1045 = qJD(1) * t97;
t1044 = t103 * t673;
t1039 = t122 * t225;
t1038 = t123 * t224;
t1037 = t124 * t225;
t1036 = t125 * t224;
t1035 = t131 * t673;
t546 = rSges(4,1) * t638 + t1084;
t834 = -t546 * t942 + t646;
t955 = rSges(4,2) * t1010 + rSges(4,3) * t675;
t446 = rSges(4,1) * t1008 - t955;
t901 = -t446 + t974;
t182 = qJD(1) * t901 + t834;
t1032 = t182 * t673;
t1007 = t639 * t675;
t1009 = t638 * t675;
t447 = rSges(4,1) * t1007 - rSges(4,2) * t1009 + t658;
t183 = -t546 * t645 - t647 + (t447 + t973) * qJD(1);
t515 = t546 * t675;
t1031 = t183 * t515;
t422 = Icges(5,5) * t1013 - Icges(5,6) * t1018 - t1050;
t1029 = t422 * t675;
t1021 = t540 * t673;
t1020 = t540 * t675;
t995 = -t209 - t452;
t991 = -t290 - t478;
t988 = -t352 * t673 + t353 * t675;
t987 = t1197 * t518 - t1211 * t517;
t986 = t1197 * t520 - t1211 * t519;
t985 = -t1011 * t426 - t422 * t673;
t984 = t1011 * t427 + t423 * t673;
t982 = -t1007 * t440 - t436 * t673;
t981 = t1007 * t441 + t437 * t673;
t977 = t429 * t673 + t430 * t675;
t972 = t476 * t673 + t478 * t675;
t411 = t507 + t597;
t964 = -t542 + t545;
t963 = t544 + t817;
t959 = rSges(5,2) * t897 + rSges(5,3) * t943;
t958 = rSges(4,3) * t943 + t1198 * t944;
t925 = t673 * t1088;
t615 = t673 * t1085;
t953 = rSges(3,3) * t675 + t615;
t506 = t925 - t953;
t956 = -t595 - t506;
t954 = rSges(3,3) * t943 + qJD(1) * t615;
t945 = qJD(1) * t541;
t185 = -t673 * t777 - t1023;
t934 = t185 * qJD(1);
t210 = -t673 * t775 - t1020;
t933 = t210 * qJD(1);
t920 = qJD(3) * t622;
t914 = -t452 - t996;
t247 = rSges(5,1) * t734 - rSges(5,2) * t915 + t959;
t248 = -t666 * t472 + (t1137 * t675 + t657) * qJD(1);
t913 = t247 * t675 + t248 * t673 + t429 * t943;
t910 = t261 * t675 + t262 * t673 - t352 * t943;
t908 = t291 * t675 + t292 * t673 + t476 * t943;
t907 = -t478 - t992;
t900 = t607 + t957;
t899 = t1097 * t623;
t898 = t1096 * t623;
t895 = t638 * t943;
t886 = t1015 / 0.2e1;
t885 = -pkin(1) - t1088;
t883 = t944 / 0.2e1;
t882 = t943 / 0.2e1;
t881 = -t645 / 0.2e1;
t880 = t645 / 0.2e1;
t879 = -t942 / 0.2e1;
t878 = t942 / 0.2e1;
t735 = -t533 - t1095;
t875 = -t535 - t1095;
t871 = -t625 - t1087;
t870 = (-t673 ^ 2 - t675 ^ 2) * t638;
t869 = (-t673 * t816 + t1054) * qJD(1) + t1179 * t666;
t868 = qJD(1) * t425 - t1005 * t529 + t426 * t666;
t867 = (-t532 * t673 + t1063) * qJD(1) + t1180 * t666;
t866 = qJD(1) * t427 + t1181 * t666;
t373 = t427 * t1013;
t865 = t423 * t675 - t373;
t382 = t441 * t1008;
t864 = t437 * t675 - t382;
t862 = -t422 + t1028;
t861 = -t436 + t1025;
t860 = t1177 * t666;
t859 = t1178 * t666;
t857 = -t664 * t673 + t538;
t849 = -t288 * t673 + t290 * t675 + t972;
t848 = t550 + t900;
t840 = t588 - t927;
t839 = -pkin(3) * t1009 + t591;
t838 = -t405 + t875;
t449 = t1137 * t666;
t837 = -t449 - t920;
t836 = -t452 - t920;
t598 = rSges(2,1) * t675 - rSges(2,2) * t673;
t596 = rSges(2,1) * t673 + rSges(2,2) * t675;
t547 = t1087 - t1198;
t229 = t439 * t639 + t441 * t638;
t738 = qJD(3) * t542;
t298 = -t675 * t738 + (-t673 * t817 + t1055) * qJD(1);
t739 = qJD(3) * t544;
t300 = -t675 * t739 + (-t545 * t673 + t1064) * qJD(1);
t691 = -qJD(3) * t229 - t298 * t638 + t300 * t639 + t946;
t228 = t438 * t639 + t440 * t638;
t299 = qJD(1) * t439 - t673 * t738;
t301 = qJD(1) * t441 - t673 * t739;
t692 = qJD(1) * t436 - qJD(3) * t228 - t299 * t638 + t301 * t639;
t824 = t673 * (t1127 * t673 + t675 * t691) - t675 * (t1126 * t673 + t675 * t692);
t823 = t673 * (-t1127 * t675 + t673 * t691) - t675 * (-t1126 * t675 + t673 * t692);
t102 = t1232 + t698;
t807 = t102 * t675 + t1044;
t794 = -t131 * t675 - t132 * t673;
t177 = -t1010 * t439 - t864;
t793 = -t176 * t675 + t177 * t673;
t178 = -t1009 * t438 - t982;
t179 = -t1009 * t439 + t981;
t792 = -t178 * t675 + t179 * t673;
t791 = -t182 * t675 - t183 * t673;
t786 = -t288 * t675 - t290 * t673;
t303 = -t942 * t1084 + (-t639 * t944 - t894) * rSges(4,1) + t958;
t514 = t546 * t673;
t304 = -qJD(3) * t514 + (t547 * t675 + t658) * qJD(1);
t785 = t303 * t675 + t304 * t673;
t199 = t424 * t624 + t426 * t623;
t778 = t446 * t673 + t447 * t675;
t776 = t542 * t639 + t544 * t638;
t774 = t875 - t979;
t771 = -t209 + t836;
t770 = -t555 - t1148;
t769 = t261 * t942 + t262 * t645 - t352 * t559 - t353 * t560;
t766 = t857 + t478;
t764 = t899 - t613;
t763 = t898 - t613;
t762 = t153 * t675 + t155 * t673 - t288 * t943 + t908;
t761 = t673 * t994 + t675 * t992 + t972;
t747 = t836 - t996;
t740 = t782 * t673;
t736 = t1148 - t1151;
t729 = t407 + t1148;
t724 = qJD(1) * t528 - t1023 * t593 + t1024 * t594;
t722 = t86 * t979 - t874;
t721 = t438 * t675 - t439 * t673;
t719 = qJD(1) * t352 + t1150 + t772;
t718 = t673 * t997 + t675 * t998 + t943 * t994 + t908;
t708 = (-t638 * t963 + t639 * t964) * qJD(1);
t707 = -pkin(4) * t919 + t551 + t772;
t704 = -qJD(1) * t476 - t420 + t719;
t699 = qJD(1) * t1178 + t1180 * t593 - t1181 * t594;
t697 = t291 * t594 + t292 * t593 + t453 * t476 - t454 * t478 + t769;
t695 = qJD(1) * t422 - t623 * t868 + t624 * t866;
t694 = -t623 * t869 + t624 * t867 + t947;
t693 = qJD(1) * t527 - t623 * t860 + t624 * t859;
t523 = t817 * qJD(3);
t524 = t545 * qJD(3);
t690 = qJD(1) * t540 - qJD(3) * t776 - t523 * t638 + t524 * t639;
t687 = -t1122 * t638 + t639 * t721;
t681 = -t1119 * t623 + t624 * t699;
t106 = t1125 * t673 + t675 * t693;
t107 = -t1125 * t675 + t673 * t693;
t118 = t623 * t866 + t624 * t868;
t119 = t623 * t867 + t624 * t869;
t169 = -t740 - t1029;
t170 = -t1018 * t425 - t865;
t171 = -t1016 * t424 - t985;
t172 = -t1016 * t425 + t984;
t186 = -t675 * t777 + t1024;
t200 = t425 * t624 + t427 * t623;
t80 = t1128 * t673 + t675 * t695;
t81 = t1129 * t673 + t675 * t694;
t82 = -t1128 * t675 + t673 * t695;
t83 = -t1129 * t675 + t673 * t694;
t95 = -t169 * t594 + t170 * t593 + t934;
t184 = t186 * qJD(1);
t96 = -t171 * t594 + t172 * t593 + t184;
t679 = (t1119 * t624 + t623 * t699) * t1091 + (qJD(1) * t1143 + t1208 * t673 - t1209 * t675) * t1112 - t1170 * t225 / 0.2e1 - t1201 * t941 / 0.2e1 + (t96 + t1202) * t882 + (t95 + t1203) * t883 + (qJD(1) * t1144 + t1204 * t673 - t1205 * t675) * t1106 + (qJD(1) * t1142 + t1206 * t673 - t1207 * t675) * t1111 + ((t1013 * t1194 + t1154 * t623) * qJD(5) + ((qJD(5) * t1193 + t1173) * t624 + t1174) * t675 + (t1182 * t520 + t1183 * t519) * t587 + (t1187 * t520 - t1189 * t519) * t480 + (-t1186 * t520 + t1188 * t519) * t479) * t1113 + ((t1011 * t1195 + t1155 * t623) * qJD(5) + ((qJD(5) * t1196 + t1173) * t624 + t1174) * t673 + (t1182 * t518 + t1183 * t517) * t587 + (t1187 * t518 - t1189 * t517) * t480 + (-t1186 * t518 + t1188 * t517) * t479) * t1110 + (-t118 * t675 + t119 * t673 + (t199 * t673 + t200 * t675) * qJD(1)) * t1090 + (-t199 * t675 + t200 * t673) * t1075 + (qJD(1) * t107 + qJDD(1) * t185 + t169 * t454 + t170 * t453 + t593 * t83 - t594 * t82 + t1212) * t1099 + (qJD(1) * t106 + qJDD(1) * t186 + t171 * t454 + t172 * t453 + t593 * t81 - t594 * t80 + t1213) * t1100 + (t673 * t681 - t675 * t724) * t1102 + (t673 * t83 - t675 * t82 + (t169 * t673 + t170 * t675) * qJD(1)) * t1103 + (t673 * t81 - t675 * t80 + (t171 * t673 + t172 * t675) * qJD(1)) * t1104 + (t673 * t724 + t675 * t681) * t1105 + (-t169 * t675 + t170 * t673) * t1115 + (-t171 * t675 + t172 * t673) * t1116 + ((qJD(5) * t1144 - t1223) * t624 + ((t1182 * t674 + t1183 * t672 + t1228) * t587 + (t1187 * t674 - t1189 * t672 - t1191) * t480 + (-t1186 * t674 + t1188 * t672 + t1229) * t479 + t1153 * qJD(5)) * t623) * t1107 - t1171 * t224 / 0.2e1 - t1172 * t455 / 0.2e1 - (t1202 * t675 + t1203 * t673) * t940 / 0.2e1;
t526 = t547 * qJD(3);
t470 = t829 * t623;
t355 = qJD(1) * t411 - t647;
t354 = qJD(1) * t956 + t646;
t343 = -rSges(6,1) * t519 - rSges(6,2) * t520;
t338 = -rSges(6,1) * t517 - rSges(6,2) * t518;
t253 = t778 * qJD(3);
t211 = -t675 * t775 + t1021;
t201 = t211 * qJD(1);
t181 = qJDD(1) * t507 + qJD(1) * (-qJD(1) * t925 + t954) + t765;
t180 = t956 * qJDD(1) + (-qJD(1) * t507 - t525) * qJD(1) + t951;
t127 = -qJD(3) * t779 + t298 * t639 + t300 * t638;
t126 = -qJD(3) * t780 + t299 * t639 + t301 * t638;
t121 = -t1124 * t675 + t673 * t690;
t120 = t1124 * t673 + t675 * t690;
t109 = qJD(1) * t303 + qJDD(1) * t447 - t526 * t645 - t546 * t559 + t723;
t108 = -t526 * t942 + t546 * t560 + t901 * qJDD(1) + (-t304 + t980) * qJD(1) + t951;
t101 = qJD(3) * t792 + t201;
t100 = qJD(3) * t793 + t933;
t79 = qJD(1) * t247 + qJDD(1) * t430 - t449 * t593 - t453 * t533 + t688;
t78 = -t449 * t594 + t454 * t533 + t851 * qJDD(1) + (-t248 + t909) * qJD(1) + t730;
t70 = t247 * t594 + t248 * t593 + t429 * t453 - t430 * t454 + t769;
t28 = t153 * t480 + t155 * t479 - t224 * t288 - t225 * t290 + t697;
t19 = qJD(6) * t731 + qJDD(6) * t1019 + t224 * t994 - t225 * t992 + t479 * t997 + t480 * t998 + t697;
t1 = [(-(-qJD(1) * t446 + t1150 - t182 + t834) * t183 + t182 * (t614 + t647) + t183 * (t646 + t958) + (t1032 * t546 - t1031) * qJD(3) + ((-rSges(4,3) * t182 + t183 * t871) * t673 + (t182 * (-t547 - t625) - t183 * t671) * t675) * qJD(1) + (t109 - g(2)) * (t447 + t856) + (t108 - g(1)) * (t673 * t871 - t1003 + t955)) * m(4) + (-(-qJD(1) * t506 - t354 - t562 + t646) * t355 + t354 * t647 + t355 * (t950 + t954) + (t354 * (t885 + t1085) * t675 + (t354 * (-rSges(3,3) - qJ(2)) + t355 * t885) * t673) * qJD(1) + (t181 - g(2)) * t411 + (t180 - g(1)) * (t673 * t885 + t650 + t953)) * m(3) + (-t933 + ((t675 * t861 + t179 - t981) * t675 + (t673 * t861 + t178 + t864) * t673) * qJD(3) + t100) * t881 + (-qJD(3) * t775 + t523 * t639 + t524 * t638 + t623 * t859 + t624 * t860) * qJD(1) + (-t872 * t480 - t764 * t1094 + t86 * (t848 + t1218) + (t25 * t899 + (t1097 * t666 * t86 - pkin(4) * t25) * t624) * t673 + (-(-t555 + t764) * t1076 + (t770 - t610) * t1236) * qJD(1) + t1210 * (t766 + t992) + t1237 * (t965 + t1152) + (t664 * t943 - t1219 + t1238 + t704 - t707 - t86) * t1166) * m(7) + (t126 + t121 + t101) * t879 + (t776 + m(2) * (t596 ^ 2 + t598 ^ 2) + Icges(3,2) * t670 ^ 2 + (Icges(3,1) * t669 + 0.2e1 * Icges(3,4) * t670) * t669 + t529 * t624 + t531 * t623 + Icges(2,3)) * qJDD(1) + (t210 + t228) * t1108 + t1202 * t1110 + (-t934 + (t172 - t740 - t984) * t594 + (t673 * t862 + t171 - t373) * t593 + ((t423 + t782) * t593 + t862 * t594) * t675 + t95) * t1105 + (t201 + ((t177 - t382 + (t437 + t1026) * t675 + t982) * t675 + t981 * t673) * qJD(3)) * t878 + t1039 / 0.2e1 + t1037 / 0.2e1 + t1038 / 0.2e1 + (-(-t102 + t1232 + t704) * t103 + t102 * (-t832 + t848) + t103 * (t707 + t912) + (t37 * t898 + (t102 * t1096 * t666 - pkin(4) * t37) * t624) * t673 + ((-t555 + t763) * t1044 + (t102 * (t770 - t609) - t103 * t664) * t675) * qJD(1) - t763 * t1094 + (t38 - g(2)) * (t766 + t290) + (t37 - g(1)) * (-t831 + t965)) * m(6) + (-(-qJD(1) * t429 - t1022 - t131 + t719) * t132 + t131 * t900 + t132 * (t772 + t959) + (t1035 * t533 - t132 * t474) * t666 + ((-t131 * rSges(5,3) + t132 * (-t555 - t611)) * t673 + (t131 * (-t555 - t1137) - t132 * t664) * t675) * qJD(1) + (t79 - g(2)) * (t430 + t857) + (t78 - g(1)) * (-t429 + t965)) * m(5) + (t1191 * t624 + (t1192 * t672 - t1243 * t674) * t623 + t1231) * t479 * t1107 + (t185 + t199) * t1115 + (t186 + t200) * t1116 + (t107 + t118 + t96) * t1103 + t1036 / 0.2e1 + (t127 + t120) * t880 + t1134 + t1200 * t1112 + (t1199 + t1202) * t1111 + t1155 * t1117 + t1077 / 0.2e1 + (t184 + (t170 + (t424 * t675 + t425 * t673) * t623 + t865 + t985) * t594 + (-t426 * t1013 + t1029 + t169 + (t424 * t673 - t425 * t675) * t623 + t984) * t593) * t1102 + t1154 * t1118 + (t106 + t119) * t1104 - t1078 / 0.2e1 + t1079 / 0.2e1 - t1080 / 0.2e1 + (t211 + t229) * t1109 - m(2) * (-g(1) * t596 + g(2) * t598); (-m(3) - m(4) - m(5) - m(7)) * t1131 + 0.2e1 * (t1099 * t24 + t1100 * t25) * m(7) + 0.2e1 * (t1099 * t79 + t1100 * t78) * m(5) + 0.2e1 * (t108 * t1100 + t109 * t1099) * m(4) + 0.2e1 * (t1099 * t181 + t1100 * t180) * m(3) + (-t1131 + t1133) * m(6); ((t638 * t964 + t639 * t963) * qJD(1) + (t1122 * t639 + t721 * t638) * qJD(3)) * t1091 + ((-t1021 * t942 - t945) * t675 + (t708 + (t1020 * t675 + t687) * qJD(3)) * t673) * t878 + ((-t1020 * t645 + t945) * t673 + (t708 + (t1021 * t673 + t687) * qJD(3)) * t675) * t881 + ((t176 * t673 + t177 * t675) * qJD(1) + t823) * t879 + (-t126 * t675 + t127 * t673 + (t228 * t673 + t229 * t675) * qJD(1)) * t1090 + (-t228 * t675 + t229 * t673) * t1075 + t679 + (qJD(1) * t121 + qJD(3) * t823 + qJDD(1) * t210 + t176 * t560 + t177 * t559) * t1099 + (qJD(1) * t120 + qJD(3) * t824 + qJDD(1) * t211 + t178 * t560 + t179 * t559) * t1100 + t793 * t1108 + t792 * t1109 + ((t178 * t673 + t179 * t675) * qJD(1) + t824) * t880 + t101 * t882 + t100 * t883 + (t19 * (t761 + t988) + t73 * (t718 + t910) + t774 * t1239 + (t24 * t774 - t1166 * t747 + (-t353 + t907) * t1047) * t673 - g(1) * (t585 + t839) - g(2) * (t578 + t840) - g(3) * (t622 + t736) - (t1166 * t895 + ((t1076 - t1236) * t639 + t73 * t870) * qJD(3)) * pkin(3) + t1176 + (t675 * t747 + t1240) * t86) * m(7) + (t28 * (t849 + t988) + t97 * (t762 + t910) + t838 * t1168 + (t38 * t838 + t103 * t771 + (-t353 + t991) * t1045) * t673 - (-t103 * t895 + (-t639 * t807 + t870 * t97) * qJD(3)) * pkin(3) - g(1) * (t839 + t961) - g(2) * (t840 + t962) - g(3) * (t622 + t729) + (t675 * t771 + t1169) * t102 + t1175) * m(6) + (t70 * (t977 + t988) + t128 * (t910 + t913) + (t131 * t837 + (qJD(1) * t132 + t78) * t735) * t675 + (t79 * t735 + t132 * t837 + (t131 * t533 + t128 * (-t353 - t430)) * qJD(1)) * t673 - g(3) * (t1137 + t622) - t1132 * t735 - (-t132 * t895 + (t128 * t870 + t639 * t794) * qJD(3)) * pkin(3) + t1165) * m(5) + (g(1) * t515 + g(2) * t514 - g(3) * t547 - (t182 * t514 - t1031) * qJD(1) - (t253 * (-t514 * t673 - t515 * t675) + t791 * t547) * qJD(3) + (qJD(3) * t785 + t446 * t559 - t447 * t560) * t778 + t253 * ((t446 * t675 - t447 * t673) * qJD(1) + t785) + t791 * t526 + (-t108 * t675 - t109 * t673 + (-t183 * t675 + t1032) * qJD(1)) * t546) * m(4); t679 + (t19 * t761 + t73 * t718 + (t1047 * t907 - t1166 * t914) * t673 - g(1) * (t585 + t591) - g(2) * (t578 + t588) - g(3) * t736 + (t24 * t673 + t1239) * (-t535 - t979) + (t675 * t914 + t1240) * t86 + t1176) * m(7) + (t28 * t849 + t97 * t762 + (t103 * t995 + t1045 * t991) * t673 - g(1) * (t591 + t961) - g(2) * (t588 + t962) - g(3) * t729 + (t38 * t673 + t1168) * (-t405 - t535) + (t675 * t995 + t1169) * t102 + t1175) * m(6) + (t70 * t977 + t128 * (-t430 * t944 + t913) + t794 * t449 + (-t79 * t673 - t78 * t675 + (-t132 * t675 + t1035) * qJD(1)) * t533 + g(1) * t474 + g(2) * t472 - g(3) * t1137 + t1165) * m(5); t1201 * t623 * t666 / 0.2e1 + t1212 * t1018 / 0.2e1 + t1213 * t1016 / 0.2e1 + (t1143 * t623 - t1154 * t624) * t1118 + (t1142 * t623 - t1155 * t624) * t1117 + (t1144 * t623 - t1153 * t624) * t455 / 0.2e1 + (-t1145 * t675 + t1146 * t520 + t1147 * t519) * t1113 + ((t1143 * t666 - t1200) * t624 + (qJD(1) * t1171 + t1154 * t666 + t1208 * t675 + t1209 * t673) * t623) * t1112 + ((t1142 * t666 - t1199) * t624 + (qJD(1) * t1170 + t1155 * t666 + t1206 * t675 + t1207 * t673) * t623) * t1111 + (-t1145 * t673 + t1146 * t518 + t1147 * t517) * t1110 + (t1217 * t624 + (t1146 * t674 + t1147 * t672) * t623) * t1107 + ((t1144 * t666 - t1222) * t624 + (qJD(1) * t1172 + t1153 * t666 + t1204 * t675 + t1205 * t673) * t623) * t1106 - (t1038 + t1039 + t1079 - t1080 + t1036 + t1037 + t1077 - t1078 + t1134) * t624 / 0.2e1 + (-g(1) * t986 - g(2) * t987 + g(3) * t969 + (t25 * t994 + t86 * t997 - t24 * t992 + t1166 * t998 + (-t1167 * t675 + t673 * t722) * t666) * t624 + ((-t1166 * t992 - t873) * t666 + (qJD(1) * t722 + t1166 * t996 + t19 * t994 - t24 * t979 + t73 * t997) * t675 + (qJD(1) * t1167 - t19 * t992 + t25 * t979 - t73 * t998 + t86 * t996) * t673) * t623 - (t1017 * t73 - t1166 * t518 + t520 * t86) * qJD(6) - (-t1166 * t986 - t86 * t987) * t587 - (t73 * t986 + t86 * t969) * t480 - (-t1166 * t969 + t73 * t987) * t479) * m(7) + (-t102 * (-t338 * t587 - t470 * t480) - t103 * (t343 * t587 - t470 * t479) - t97 * (t338 * t479 + t343 * t480) - g(1) * t343 - g(2) * t338 - g(3) * t470 + (t102 * t155 - t103 * t153 - t37 * t288 - t38 * t290 + (t97 * t786 + (t102 * t673 - t103 * t675) * t405) * t666) * t624 + (t102 * (t209 * t673 + t288 * t666) + t103 * (-t209 * t675 + t290 * t666) + t28 * t786 + t97 * (-t153 * t673 + t155 * t675 + t288 * t944 - t290 * t943) + (qJD(1) * t807 + t1133) * t405) * t623) * m(6) + t1202 * (t675 * t886 - t897 / 0.2e1) + t1203 * (t623 * t882 + t673 * t886); (t73 * t916 - t249 * t86 - t251 * t1166 + (t19 * t672 + t73 * t937) * t623 + (-t1166 * t479 + t480 * t86 - g(3)) * t1019 + (t1166 * t587 - t480 * t73 + t1237) * t519 + (-t479 * t73 + t587 * t86 + t1210) * t517) * m(7);];
tau  = t1;
