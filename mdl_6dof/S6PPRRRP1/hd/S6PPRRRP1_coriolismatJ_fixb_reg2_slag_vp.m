% Calculate inertial parameters regressor of coriolis matrix for
% S6PPRRRP1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,theta1,theta2]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PPRRRP1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRP1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRP1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PPRRRP1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:54:32
% EndTime: 2019-03-08 18:54:47
% DurationCPUTime: 12.32s
% Computational Cost: add. (10745->562), mult. (30782->855), div. (0->0), fcn. (35856->12), ass. (0->467)
t574 = sin(pkin(7));
t575 = sin(qJ(5));
t579 = cos(qJ(4));
t844 = cos(qJ(3));
t684 = t579 * t844;
t577 = sin(qJ(3));
t578 = cos(qJ(5));
t764 = t577 * t578;
t456 = (-t575 * t684 + t764) * t574;
t767 = t575 * t577;
t457 = (t578 * t684 + t767) * t574;
t846 = t578 / 0.2e1;
t849 = -t575 / 0.2e1;
t872 = t456 * t849 + t457 * t846;
t887 = pkin(10) * t872;
t576 = sin(qJ(4));
t635 = -pkin(4) * t579 - pkin(10) * t576;
t621 = -pkin(3) + t635;
t759 = t578 * t579;
t698 = pkin(9) * t759;
t459 = t575 * t621 + t698;
t837 = t579 * pkin(10);
t841 = t576 * pkin(4);
t535 = -t837 + t841;
t517 = t575 * t535;
t765 = t576 * t578;
t699 = pkin(9) * t765;
t472 = t517 - t699;
t305 = t472 * t579 + (-t459 + 0.2e1 * t698) * t576;
t686 = t574 * t844;
t638 = t686 / 0.2e1;
t625 = t575 * t638;
t811 = cos(pkin(7));
t654 = t576 * t811;
t771 = t574 * t577;
t688 = t579 * t771;
t492 = t654 + t688;
t761 = t578 * t492;
t649 = t575 * t686;
t409 = -t649 + t761;
t859 = t409 / 0.2e1;
t183 = (t625 + t859 - t761 / 0.2e1) * t576;
t810 = sin(pkin(6));
t655 = sin(pkin(12)) * t810;
t629 = cos(pkin(12)) * t810;
t812 = cos(pkin(6));
t875 = t574 * t812 + t629 * t811;
t401 = t577 * t655 - t844 * t875;
t797 = t401 * t575;
t586 = -t574 * t629 + t811 * t812;
t584 = t586 * t576;
t402 = t577 * t875 + t655 * t844;
t792 = t402 * t579;
t308 = t584 + t792;
t799 = t308 * t578;
t213 = t797 + t799;
t868 = -t213 / 0.2e1;
t632 = t797 / 0.2e1 + t868;
t67 = (-t799 / 0.2e1 - t632) * t576;
t821 = qJD(1) * t67 + qJD(2) * t183;
t886 = t305 * qJD(3) - t821;
t502 = t578 * t621;
t766 = t575 * t579;
t700 = pkin(9) * t766;
t458 = -t502 + t700;
t518 = t578 * t535;
t768 = t575 * t576;
t559 = pkin(9) * t768;
t471 = t559 + t518;
t304 = t458 * t576 + (t471 - 0.2e1 * t559) * t579;
t648 = t578 * t686;
t769 = t575 * t492;
t408 = t648 + t769;
t639 = -t686 / 0.2e1;
t624 = t578 * t639;
t184 = (t624 + t408 / 0.2e1 - t769 / 0.2e1) * t576;
t795 = t401 * t578;
t670 = t795 / 0.2e1;
t800 = t308 * t575;
t212 = -t795 + t800;
t869 = t212 / 0.2e1;
t631 = t670 + t869;
t68 = (-t800 / 0.2e1 + t631) * t576;
t820 = qJD(1) * t68 + qJD(2) * t184;
t885 = -t304 * qJD(3) - t820;
t411 = -qJ(6) * t768 + t459;
t758 = t579 * qJ(6);
t413 = -t575 * t758 + t472;
t842 = t575 * pkin(5);
t687 = pkin(9) + t842;
t521 = t687 * t579;
t779 = t521 * t578;
t520 = t687 * t576;
t780 = t520 * t578;
t211 = (t413 + t780) * t579 + (-t411 + t779) * t576;
t884 = t211 * qJD(3) - t821;
t783 = t459 * t579;
t784 = t458 * t579;
t192 = (t471 * t576 - t784) * t578 + (t472 * t576 + t783) * t575;
t845 = -t579 / 0.2e1;
t669 = t409 * t845;
t790 = t408 * t579;
t856 = t456 / 0.2e1;
t157 = (t790 / 0.2e1 - t457 / 0.2e1) * t578 + (t669 + t856) * t575;
t794 = t402 * t575;
t257 = -t401 * t759 + t794;
t806 = t213 * t579;
t808 = t212 * t579;
t793 = t402 * t578;
t256 = t401 * t766 + t793;
t867 = t256 / 0.2e1;
t62 = (t808 / 0.2e1 - t257 / 0.2e1) * t578 + (-t806 / 0.2e1 + t867) * t575;
t825 = qJD(1) * t62 + qJD(2) * t157;
t883 = qJD(3) * t192 - t825;
t763 = t578 * qJ(6);
t634 = -t576 * t763 + t502;
t398 = (-pkin(9) * t575 - pkin(5)) * t579 + t634;
t840 = t576 * pkin(5);
t403 = -t578 * t758 + t471 + t840;
t187 = -t398 * t576 + t403 * t579 - t520 * t766 - t521 * t768;
t882 = -t187 * qJD(3) - t820;
t570 = t576 ^ 2;
t760 = t578 * t570;
t400 = -pkin(9) * t760 - t783;
t636 = -t684 / 0.2e1;
t590 = (t575 * t636 + t764 / 0.2e1) * t574;
t491 = t576 * t771 - t579 * t811;
t663 = -t765 / 0.2e1;
t642 = t491 * t663;
t601 = t669 + t642;
t239 = t590 + t601;
t307 = t402 * t576 - t579 * t586;
t801 = t307 * t576;
t633 = t402 / 0.2e1 - t801 / 0.2e1;
t87 = t578 * t633 + t579 * t632;
t817 = qJD(1) * t87 + qJD(2) * t239;
t881 = qJD(3) * t400 + t817;
t410 = -t634 + t700;
t571 = t578 ^ 2;
t306 = pkin(5) * t570 * t571 - t410 * t579 - t520 * t768;
t589 = (t578 * t636 - t767 / 0.2e1) * t574;
t666 = -t768 / 0.2e1;
t602 = -t790 / 0.2e1 + t491 * t666;
t240 = t589 - t602;
t88 = -t575 * t633 + t579 * t631;
t816 = qJD(1) * t88 + qJD(2) * t240;
t880 = qJD(3) * t306 - t816;
t689 = t575 * t760;
t690 = t520 * t765;
t788 = t411 * t579;
t299 = -pkin(5) * t689 - t690 - t788;
t879 = qJD(3) * t299 + t817;
t772 = t570 * t575;
t399 = -pkin(9) * t772 - t784;
t878 = -qJD(3) * t399 + t816;
t124 = (t398 * t579 + t403 * t576) * t578 + (t413 * t576 + t788) * t575;
t877 = -t124 * qJD(3) + t825;
t876 = t410 + t398;
t685 = t576 * t844;
t647 = t491 * t685;
t137 = -t408 * t456 + t409 * t457 + t574 * t647;
t860 = -t408 / 0.2e1;
t870 = -t212 / 0.2e1;
t22 = t257 * t859 + t213 * t457 / 0.2e1 + t256 * t860 + t456 * t870 + (-t401 * t491 / 0.2e1 + t307 * t638) * t576;
t827 = qJD(1) * t22 + qJD(2) * t137;
t789 = t409 * t578;
t791 = t408 * t575;
t131 = (t492 - t789 - t791) * t491;
t608 = t791 / 0.2e1 + t789 / 0.2e1;
t807 = t213 * t578;
t809 = t212 * t575;
t611 = t809 / 0.2e1 + t807 / 0.2e1;
t855 = t492 / 0.2e1;
t865 = t308 / 0.2e1;
t27 = (t865 - t611) * t491 + (t855 - t608) * t307;
t829 = qJD(1) * t27 + qJD(2) * t131;
t48 = (t308 - t807 - t809) * t307;
t833 = qJD(1) * t48 + qJD(2) * t27;
t796 = t401 * t576;
t45 = -t212 * t256 + t213 * t257 - t307 * t796;
t835 = qJD(1) * t45 + qJD(2) * t22;
t569 = t575 ^ 2;
t658 = t569 / 0.2e1 - t571 / 0.2e1;
t864 = -t398 / 0.2e1;
t874 = -t410 / 0.2e1 + t864;
t550 = t571 + t569;
t873 = t550 * qJD(4);
t551 = t571 - t569;
t706 = t576 * qJD(3);
t681 = t578 * t706;
t871 = qJD(4) * t551 - 0.2e1 * t575 * t681;
t863 = t398 / 0.2e1;
t862 = t401 / 0.2e1;
t861 = t403 / 0.2e1;
t857 = t413 / 0.2e1;
t854 = t520 / 0.2e1;
t836 = pkin(10) + qJ(6);
t529 = t836 * t575;
t853 = t529 / 0.2e1;
t530 = t836 * t578;
t852 = -t530 / 0.2e1;
t848 = -t576 / 0.2e1;
t847 = -t578 / 0.2e1;
t843 = pkin(9) * t401;
t839 = t576 * pkin(9);
t838 = t579 * pkin(9);
t160 = t307 * t575;
t798 = t398 * t578;
t339 = t491 * t575;
t781 = t520 * t575;
t778 = t529 * t576;
t777 = t529 * t579;
t776 = t530 * t576;
t775 = t530 * t579;
t566 = -pkin(5) * t578 - pkin(4);
t774 = t566 * t575;
t773 = t566 * t578;
t770 = t575 * t458;
t762 = t578 * t459;
t572 = t579 ^ 2;
t552 = t572 - t570;
t659 = t410 / 0.2e1 + t863;
t693 = pkin(5) * t845;
t117 = (t693 + t659) * t578;
t745 = qJD(3) * t117;
t127 = t876 * t768;
t744 = qJD(3) * t127;
t739 = qJD(3) * t574;
t738 = qJD(4) * t575;
t737 = qJD(4) * t578;
t736 = qJD(5) * t213;
t735 = qJD(5) * t409;
t734 = qJD(5) * t411;
t733 = qJD(5) * t530;
t732 = qJD(5) * t575;
t568 = qJD(5) * t578;
t731 = qJD(5) * t579;
t730 = qJD(6) * t575;
t729 = qJD(6) * t578;
t728 = qJD(6) * t579;
t714 = t401 * qJD(3);
t713 = t492 * qJD(4);
t496 = t658 * t576;
t712 = t496 * qJD(5);
t513 = t550 * t570;
t711 = t513 * qJD(3);
t515 = t552 * t575;
t710 = t515 * qJD(3);
t516 = t572 * t578 - t760;
t709 = t516 * qJD(3);
t707 = t552 * qJD(3);
t705 = t576 * qJD(4);
t704 = t579 * qJD(3);
t703 = t579 * qJD(4);
t500 = t518 / 0.2e1;
t702 = t500 + t559 / 0.2e1;
t701 = t578 * t842;
t697 = pkin(3) * t704;
t696 = pkin(5) * t732;
t695 = pkin(5) * t568;
t694 = t839 / 0.2e1;
t692 = -t838 / 0.2e1;
t691 = t838 / 0.2e1;
t683 = t844 * t570;
t682 = t844 * t572;
t680 = t575 * t737;
t679 = t578 * t705;
t678 = t575 * t731;
t677 = t578 * t731;
t676 = t576 * t729;
t555 = t575 * t568;
t675 = t575 * t704;
t674 = t575 * t728;
t673 = t576 * t703;
t672 = t576 * t704;
t671 = t578 * t728;
t371 = t796 / 0.2e1;
t668 = -t781 / 0.2e1;
t667 = t566 * t576 / 0.2e1;
t665 = t768 / 0.2e1;
t664 = t766 / 0.2e1;
t662 = t765 / 0.2e1;
t661 = -t759 / 0.2e1;
t660 = t758 / 0.2e1;
t657 = pkin(10) * t550;
t656 = qJD(4) * t844;
t651 = pkin(5) * t662;
t650 = -qJD(5) + t704;
t646 = t575 * t679;
t645 = t570 * t555;
t643 = t307 * t662;
t641 = -t576 * t701 + t777 / 0.2e1;
t640 = qJD(3) * t686;
t637 = t685 / 0.2e1;
t630 = -t776 / 0.2e1 + t864;
t71 = (t491 * t848 + t492 * t845) * t401 + (t684 * t865 + t307 * t637 - t402 * t844 / 0.2e1 + t577 * t862) * t574;
t80 = (-t308 * t579 + t402 - t801) * t401;
t628 = qJD(1) * t80 + qJD(2) * t71;
t627 = -t471 * t575 + t472 * t578;
t423 = t529 * t575 + t530 * t578;
t626 = t576 * t639;
t298 = (t492 * t684 - t577 * t686 + t647) * t574;
t623 = t71 * qJD(1) + t298 * qJD(2);
t324 = pkin(5) * t774;
t600 = t566 * t663 + t668;
t95 = t659 * t530 + (t861 + t600) * pkin(5);
t622 = -qJD(3) * t95 + qJD(4) * t324;
t620 = t650 * t576;
t216 = t668 + (-t763 / 0.2e1 + t852) * t579 + (-t773 / 0.2e1 + (0.1e1 - t658) * pkin(5)) * t576 + t702;
t485 = t701 - t774;
t619 = -qJD(3) * t216 - qJD(4) * t485;
t499 = -t517 / 0.2e1;
t230 = t499 + (t694 - t520 / 0.2e1) * t578 + (t660 + t667) * t575 + t641;
t497 = t569 * pkin(5) + t773;
t618 = -qJD(3) * t230 + qJD(4) * t497;
t617 = t837 / 0.2e1 - t841 / 0.2e1;
t370 = -t796 / 0.2e1;
t260 = t371 + t370;
t616 = pkin(3) * t706 - qJD(1) * t260;
t605 = t617 * t575;
t406 = t517 / 0.2e1 - t605;
t615 = pkin(4) * t737 - qJD(3) * t406;
t604 = t617 * t578;
t407 = -t518 / 0.2e1 + t604;
t614 = pkin(4) * t738 - qJD(3) * t407;
t613 = (t411 / 0.2e1 + t778 / 0.2e1) * t578;
t612 = t471 * t869 + t472 * t868;
t610 = t212 * t846 + t213 * t849;
t609 = t256 * t849 + t257 * t846;
t607 = t408 * t846 + t409 * t849;
t476 = t578 * t620;
t434 = -qJD(3) * t496 + t680;
t511 = t681 + t738;
t509 = t575 * t706 - t737;
t416 = qJD(3) * t689 + qJD(4) * t496;
t514 = t551 * t570;
t430 = qJD(3) * t514 + 0.2e1 * t646;
t599 = t609 * pkin(10);
t123 = t398 * t403 + t411 * t413 + t520 * t521;
t595 = t411 * t847 + t575 * t863 + t521 / 0.2e1;
t581 = t213 * t857 + t307 * t595 + t308 * t854 + t403 * t870;
t588 = t256 * t853 + t257 * t852 + t401 * t667;
t4 = t581 + t588;
t580 = t403 * t860 + t409 * t857 + t491 * t595 + t492 * t854;
t585 = t456 * t853 + t457 * t852 + t566 * t626;
t60 = t580 + t585;
t598 = qJD(1) * t4 + qJD(2) * t60 + qJD(3) * t123;
t215 = pkin(9) ^ 2 * t576 * t579 - t458 * t471 + t459 * t472;
t591 = t762 / 0.2e1 + t770 / 0.2e1 + t692;
t6 = pkin(4) * t371 - t308 * t839 / 0.2e1 + t599 + t591 * t307 + t612;
t583 = t471 * t860 + t472 * t859 - t491 * t591;
t74 = (pkin(4) * t638 + pkin(9) * t855) * t576 - t887 + t583;
t597 = -t6 * qJD(1) + t74 * qJD(2) + t215 * qJD(3);
t596 = t610 * t576;
t11 = t659 * t213 + (t307 * t663 + t867) * pkin(5);
t128 = pkin(5) * t690 - t411 * t876;
t75 = t659 * t409 + (t856 + t642) * pkin(5);
t594 = -qJD(1) * t11 - qJD(2) * t75 + qJD(3) * t128;
t226 = (t638 - t607) * t576;
t258 = (t411 * t575 + t798) * t576;
t82 = t371 + t596;
t593 = qJD(1) * t82 - qJD(2) * t226 - qJD(3) * t258;
t592 = t654 / 0.2e1 + t688 / 0.2e1;
t182 = t692 + t613 + (t693 + t630) * t575;
t224 = t592 - t608;
t582 = t792 / 0.2e1 + t584 / 0.2e1;
t78 = t582 - t611;
t587 = -qJD(1) * t78 - qJD(2) * t224 + qJD(3) * t182 + qJD(4) * t423;
t564 = -t706 / 0.2e1;
t563 = t706 / 0.2e1;
t562 = t705 / 0.2e1;
t556 = t578 * t704;
t533 = t551 * qJD(5);
t528 = t574 * pkin(9) * t683;
t512 = -t556 + t568;
t510 = t650 * t575;
t501 = (t704 - qJD(5) / 0.2e1) * t576;
t493 = t511 * pkin(5);
t475 = t511 * t579;
t474 = t509 * t579;
t473 = t575 * t620;
t461 = t571 * t673 - t645;
t460 = t569 * t673 + t645;
t449 = t575 * t705 - t709;
t448 = -t677 + t709;
t447 = t678 - t710;
t446 = t679 + t710;
t432 = -qJD(4) * t516 + t576 * t678;
t431 = qJD(4) * t515 + t576 * t677;
t426 = 0.2e1 * t575 * t476;
t415 = -t571 * t672 - t712;
t414 = -t569 * t672 + t712;
t412 = -qJD(5) * t514 - 0.2e1 * t579 * t646;
t378 = t570 * t843;
t377 = t559 + t500 + t604;
t376 = t499 - t605 + t699;
t361 = -t712 + (t571 * t706 + t680) * t579;
t360 = t712 + (t569 * t706 - t680) * t579;
t356 = -0.2e1 * t555 * t576 + t579 * t871;
t340 = t491 * t578;
t263 = t401 * t579;
t261 = 0.2e1 * t371;
t242 = t590 - t601;
t241 = t589 + t602;
t231 = t566 * t666 + t780 / 0.2e1 + pkin(9) * t662 + t499 + t575 * t660 - t641;
t227 = t408 * t662 + t409 * t666 + t574 * t637;
t225 = t592 + t608;
t217 = t775 / 0.2e1 + qJ(6) * t661 - t600 + t702 + (0.1e1 + t658) * t840;
t186 = t409 * t848 + t492 * t662 + t576 * t625;
t185 = t408 * t848 + t492 * t665 + t576 * t624;
t181 = pkin(5) * t664 + t575 * t630 + t613 + t691;
t162 = t307 * t578;
t156 = t579 * t607 + t872;
t150 = qJD(3) * t240;
t149 = qJD(3) * t239;
t122 = qJD(3) * t242 + qJD(4) * t339 - t735;
t121 = qJD(3) * t241 + qJD(4) * t340 + qJD(5) * t408;
t120 = qJD(3) * t184;
t119 = qJD(3) * t183;
t118 = t410 * t847 - t798 / 0.2e1 + pkin(5) * t661;
t116 = qJD(3) * t186 + qJD(5) * t340 + t575 * t713;
t115 = qJD(3) * t185 + qJD(5) * t339 - t578 * t713;
t114 = qJD(3) * t157;
t113 = -qJD(4) * t183 - qJD(5) * t240;
t112 = -qJD(4) * t184 - qJD(5) * t239;
t110 = qJD(4) * t157;
t105 = pkin(5) * t339;
t96 = t566 * t651 + t876 * t852 + (t781 / 0.2e1 + t861) * pkin(5);
t93 = t156 * qJD(3) - t491 * t873;
t92 = (t457 * t579 + t570 * t648) * qJD(3) + t186 * qJD(4) + t241 * qJD(5);
t91 = (-t456 * t579 + t570 * t649) * qJD(3) + t185 * qJD(4) + t242 * qJD(5);
t90 = t806 / 0.2e1 + t643 + t401 * t664 + t793 / 0.2e1;
t89 = -t808 / 0.2e1 + t307 * t666 + t579 * t670 - t794 / 0.2e1;
t81 = t370 + t596;
t79 = t582 + t611;
t77 = t156 * qJD(4) + (-t456 * t578 - t457 * t575) * t706;
t76 = pkin(5) * t856 + t409 * t874 + t491 * t651;
t73 = pkin(4) * t626 + t492 * t694 + t583 + t887;
t70 = t213 * t848 + t308 * t662 + t401 * t666;
t69 = t212 * t848 + t308 * t665 + t401 * t662;
t61 = t579 * t610 + t609;
t59 = t580 - t585;
t56 = qJD(3) * t88;
t55 = qJD(3) * t87;
t53 = qJD(3) * t137 + qJD(4) * t131;
t42 = qJD(3) * t68;
t41 = qJD(3) * t67;
t40 = qJD(3) * t90 + qJD(4) * t160 - t736;
t39 = qJD(3) * t89 + qJD(4) * t162 + qJD(5) * t212;
t31 = qJD(3) * t70 + qJD(5) * t162 + t308 * t738;
t30 = qJD(3) * t69 + qJD(5) * t160 - t308 * t737;
t29 = pkin(5) * t160;
t21 = qJD(3) * t62;
t16 = -qJD(4) * t67 - qJD(5) * t88;
t15 = -qJD(4) * t68 - qJD(5) * t87;
t14 = qJD(4) * t62;
t13 = qJD(3) * t71;
t12 = t874 * t213 + (t643 + t867) * pkin(5);
t10 = t61 * qJD(3) - t307 * t873;
t9 = (t257 * t579 - t401 * t760) * qJD(3) + t70 * qJD(4) + t89 * qJD(5);
t8 = (-t256 * t579 - t401 * t772) * qJD(3) + t69 * qJD(4) + t90 * qJD(5);
t7 = t307 * t691 + (pkin(4) * t862 + pkin(9) * t865) * t576 + t599 - t612 - (t762 + t770) * t307 / 0.2e1;
t5 = t61 * qJD(4) + (-t256 * t578 - t257 * t575) * t706;
t3 = t581 - t588;
t2 = qJD(3) * t45 + qJD(4) * t48;
t1 = qJD(3) * t22 + qJD(4) * t27;
t17 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t80, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402 * qJD(3), t714, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t261 - t402 * t704, qJD(4) * t263 + t402 * t706 (-t570 - t572) * t714 (-pkin(3) * t402 - t572 * t843 - t378) * qJD(3) + t628, 0, 0, 0, 0, 0, 0, t8, t9, t5 (-t256 * t458 + t257 * t459 - t378) * qJD(3) + t7 * qJD(4) + t835, 0, 0, 0, 0, 0, 0, t8, t9, t5 (t256 * t398 + t257 * t411 - t520 * t796) * qJD(3) + t3 * qJD(4) + t12 * qJD(5) + t81 * qJD(6) + t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t261 - qJD(4) * t308, qJD(3) * t263 + qJD(4) * t307, 0, 0, 0, 0, 0, 0, 0, 0, t30, t31, t10, t7 * qJD(3) + (-t308 * pkin(4) - t307 * t657) * qJD(4) + t833, 0, 0, 0, 0, 0, 0, t30, t31, t10, t3 * qJD(3) + (-t307 * t423 + t308 * t566) * qJD(4) + t29 * qJD(5) + t79 * qJD(6) + t833; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, t39, 0, 0, 0, 0, 0, 0, 0, 0, t40, t39, 0, -pkin(5) * t736 + qJD(3) * t12 + qJD(4) * t29; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t81 + qJD(4) * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t13, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t298, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53, 0, 0, 0, 0, 0, 0, 0, 0, 0, t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t577 * t739, -t640, 0, 0, 0, 0, 0, 0, 0, 0 (-t576 * t656 - t577 * t704) * t574 (t577 * t706 - t579 * t656) * t574 (t683 + t682) * t739 (t528 + (-pkin(3) * t577 + pkin(9) * t682) * t574) * qJD(3) + t623, 0, 0, 0, 0, 0, 0, t91, t92, t77 (-t456 * t458 + t457 * t459 + t528) * qJD(3) + t73 * qJD(4) + t827, 0, 0, 0, 0, 0, 0, t91, t92, t77 (t520 * t574 * t685 + t398 * t456 + t411 * t457) * qJD(3) + t59 * qJD(4) + t76 * qJD(5) + t227 * qJD(6) + t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t576 * t640 - t713, qJD(4) * t491 - t579 * t640, 0, 0, 0, 0, 0, 0, 0, 0, t115, t116, t93, t73 * qJD(3) + (-t492 * pkin(4) - t491 * t657) * qJD(4) + t829, 0, 0, 0, 0, 0, 0, t115, t116, t93, t59 * qJD(3) + (-t423 * t491 + t492 * t566) * qJD(4) + t105 * qJD(5) + t225 * qJD(6) + t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t122, t121, 0, 0, 0, 0, 0, 0, 0, 0, t122, t121, 0, -pkin(5) * t735 + qJD(3) * t76 + qJD(4) * t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t227 + qJD(4) * t225; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t260 * qJD(4), 0, 0, -t628, 0, 0, 0, 0, 0, 0, t15, t16, t14, -qJD(4) * t6 - t835, 0, 0, 0, 0, 0, 0, t15, t16, t14, qJD(4) * t4 - qJD(5) * t11 + qJD(6) * t82 - t835; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t623, 0, 0, 0, 0, 0, 0, t112, t113, t110, qJD(4) * t74 - t827, 0, 0, 0, 0, 0, 0, t112, t113, t110, qJD(4) * t60 - qJD(5) * t75 - qJD(6) * t226 - t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t673, t552 * qJD(4), 0, -t673, 0, 0, -pkin(3) * t705, -pkin(3) * t703, 0, 0, t461, t412, t432, t460, t431, -t673, -qJD(4) * t304 - qJD(5) * t400, qJD(4) * t305 + qJD(5) * t399, -qJD(4) * t192, qJD(4) * t215, t461, t412, t432, t460, t431, -t673, -qJD(4) * t187 - qJD(5) * t299 + t576 * t671, qJD(4) * t211 + qJD(5) * t306 - t576 * t674, -qJD(4) * t124 + qJD(5) * t127 + qJD(6) * t513, qJD(4) * t123 + qJD(5) * t128 - qJD(6) * t258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t672, t707, t703, -t672, -t705, 0, -pkin(9) * t703 - t616, pkin(9) * t705 - t697, 0, 0, t361, t356, t449, t360, t446, -t501 (t575 * t635 - t698) * qJD(4) + t377 * qJD(5) + t885 (t578 * t635 + t700) * qJD(4) + t376 * qJD(5) + t886, qJD(4) * t627 - t883 (-pkin(4) * t838 + pkin(10) * t627) * qJD(4) + t597, t361, t356, t449, t360, t446, -t501 (t566 * t766 - t778 - t779) * qJD(4) + t217 * qJD(5) + t674 + t882 (t521 * t575 + t566 * t759 - t776) * qJD(4) + t231 * qJD(5) + t671 + t884 ((t413 + t777) * t578 + (-t403 - t775) * t575) * qJD(4) + t118 * qJD(5) + t877 (-t403 * t529 + t413 * t530 + t521 * t566) * qJD(4) + t96 * qJD(5) + t181 * qJD(6) + t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t416, -t430, t473, t416, t476, t562, qJD(4) * t377 - qJD(5) * t459 - t881, qJD(4) * t376 + qJD(5) * t458 - t878, 0, 0, -t416, -t430, t473, t416, t476, t562, qJD(4) * t217 - t734 - t879, qJD(4) * t231 + qJD(5) * t410 + t880, qJD(4) * t118 + t576 * t696 + t744, -pkin(5) * t734 + qJD(4) * t96 + t594; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t475, -t474, t711, qJD(4) * t181 + t593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, t41, -t21, qJD(3) * t6 - t833, 0, 0, 0, 0, 0, 0, t42, t41, -t21, -qJD(3) * t4 - qJD(6) * t78 - t833; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, t119, -t114, -qJD(3) * t74 - t829, 0, 0, 0, 0, 0, 0, t120, t119, -t114, -qJD(3) * t60 - qJD(6) * t224 - t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t672, -t707, 0, t672, 0, 0, t616, t697, 0, 0, t415, t426, t448, t414, t447, t501, qJD(5) * t407 - t885, qJD(5) * t406 - t886, t883, -t597, t415, t426, t448, t414, t447, t501, -qJD(5) * t216 - t882, -qJD(5) * t230 - t884, -qJD(5) * t117 - t877, -qJD(5) * t95 + qJD(6) * t182 - t598; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t555, t533, 0, -t555, 0, 0, -pkin(4) * t732, -pkin(4) * t568, 0, 0, t555, t533, 0, -t555, 0, 0, -t485 * qJD(5), t497 * qJD(5), qJD(6) * t550, qJD(5) * t324 + qJD(6) * t423; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t434, t871, t512, -t434, t510, t564, -pkin(10) * t568 - t614, pkin(10) * t732 - t615, 0, 0, t434, t871, t512, -t434, t510, t564, t619 - t733, qJD(5) * t529 + t618, -t695 - t745, -pkin(5) * t733 + t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t873, t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, t56, 0, 0, 0, 0, 0, 0, 0, 0, t55, t56, 0, qJD(3) * t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149, t150, 0, 0, 0, 0, 0, 0, 0, 0, t149, t150, 0, qJD(3) * t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t416, t430, -t474, -t416, -t475, t562, -qJD(4) * t407 + t881, -qJD(4) * t406 + t878, 0, 0, t416, t430, -t474, -t416, -t475, t562, qJD(4) * t216 - t676 + t879, qJD(4) * t230 + t576 * t730 - t880, qJD(4) * t117 - t744, -pkin(5) * t676 + qJD(4) * t95 - t594; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t434, -t871, t556, t434, -t675, t563, t614, t615, 0, 0, -t434, -t871, t556, t434, -t675, t563, -t619 - t730, -t618 - t729, t745, -pkin(5) * t730 - t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t511, t509, 0, -t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t82 + qJD(4) * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t226 + qJD(4) * t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t476, t473, -t711, -qJD(4) * t182 + t576 * t695 - t593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t732, t568, -t873, -t587 + t696; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t511, -t509, 0, t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t17;
