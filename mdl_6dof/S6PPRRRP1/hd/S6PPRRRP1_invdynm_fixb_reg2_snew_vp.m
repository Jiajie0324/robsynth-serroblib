% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PPRRRP1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d4,d5,theta1,theta2]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 20:30
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PPRRRP1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRP1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRP1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPRRRP1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPRRRP1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PPRRRP1_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 20:29:43
% EndTime: 2019-05-04 20:30:19
% DurationCPUTime: 37.87s
% Computational Cost: add. (294992->907), mult. (544225->1348), div. (0->0), fcn. (435695->14), ass. (0->657)
t1503 = sin(qJ(5));
t1506 = cos(qJ(5));
t1504 = sin(qJ(4));
t1683 = qJD(3) * t1504;
t1453 = -t1506 * qJD(4) + t1503 * t1683;
t1455 = t1503 * qJD(4) + t1506 * t1683;
t1412 = t1455 * t1453;
t1479 = qJD(4) * t1683;
t1507 = cos(qJ(4));
t1482 = t1507 * qJDD(3);
t1636 = t1482 - t1479;
t1450 = -qJDD(5) + t1636;
t1712 = t1412 + t1450;
t1717 = pkin(5) * t1712;
t1494 = sin(pkin(11));
t1498 = cos(pkin(11));
t1466 = g(1) * t1498 + g(2) * t1494;
t1497 = cos(pkin(12));
t1493 = sin(pkin(12));
t1465 = g(1) * t1494 - t1498 * g(2);
t1490 = g(3) - qJDD(1);
t1496 = sin(pkin(6));
t1500 = cos(pkin(6));
t1553 = t1465 * t1500 - t1490 * t1496;
t1540 = t1493 * t1553;
t1382 = -t1497 * t1466 + t1540;
t1445 = t1493 * t1466;
t1519 = t1497 * t1553 + t1445;
t1515 = t1497 * t1519;
t1317 = -t1493 * t1382 - t1515;
t1505 = sin(qJ(3));
t1508 = cos(qJ(3));
t1424 = t1496 * t1465 + t1490 * t1500 - qJDD(2);
t1495 = sin(pkin(7));
t1499 = cos(pkin(7));
t1711 = -t1495 * t1424 + t1499 * t1519;
t1293 = t1508 * t1382 + t1505 * t1711;
t1509 = qJD(3) ^ 2;
t1286 = -t1509 * pkin(3) + qJDD(3) * pkin(9) + t1293;
t1339 = t1499 * t1424 + t1495 * t1519;
t1334 = t1507 * t1339;
t1700 = pkin(4) * t1507;
t1616 = -pkin(10) * t1504 - t1700;
t1456 = t1616 * qJD(3);
t1708 = qJD(4) ^ 2;
t1231 = (qJD(3) * t1456 + t1286) * t1504 - qJDD(4) * pkin(4) - pkin(10) * t1708 + t1334;
t1552 = qJDD(3) * t1505 + t1508 * t1509;
t1435 = t1552 * t1495;
t1437 = t1552 * t1499;
t1461 = qJDD(3) * t1508 - t1505 * t1509;
t1557 = t1437 * t1497 + t1461 * t1493;
t1362 = -t1496 * t1435 + t1500 * t1557;
t1397 = t1437 * t1493 - t1461 * t1497;
t1716 = t1362 * t1494 + t1397 * t1498;
t1715 = t1362 * t1498 - t1397 * t1494;
t1459 = t1482 - 0.2e1 * t1479;
t1413 = t1459 * t1507;
t1672 = t1712 * t1503;
t1671 = t1712 * t1506;
t1682 = qJD(3) * t1507;
t1480 = qJD(4) * t1682;
t1633 = t1504 * qJDD(3);
t1458 = t1480 + t1633;
t1620 = -t1506 * qJDD(4) + t1503 * t1458;
t1394 = -qJD(5) * t1455 - t1620;
t1476 = -qJD(5) + t1682;
t1423 = -pkin(5) * t1476 - qJ(6) * t1455;
t1448 = t1453 ^ 2;
t1203 = -t1394 * pkin(5) - t1448 * qJ(6) + t1455 * t1423 + qJDD(6) + t1231;
t1395 = -qJD(5) * t1453 + qJDD(4) * t1503 + t1458 * t1506;
t1432 = t1453 * t1476;
t1710 = t1395 + t1432;
t1369 = (qJD(5) + t1476) * t1455 + t1620;
t1359 = t1500 * t1435 + t1496 * t1557;
t1449 = t1455 ^ 2;
t1473 = t1476 ^ 2;
t1373 = t1395 - t1432;
t1297 = -t1369 * t1506 + t1373 * t1503;
t1383 = -t1448 - t1449;
t1263 = t1297 * t1504 - t1383 * t1507;
t1707 = pkin(3) * t1263;
t1399 = -t1473 - t1448;
t1324 = t1399 * t1506 + t1672;
t1368 = (qJD(5) - t1476) * t1455 + t1620;
t1273 = t1324 * t1504 - t1368 * t1507;
t1706 = pkin(3) * t1273;
t1406 = -t1449 - t1473;
t1384 = -t1412 + t1450;
t1673 = t1384 * t1506;
t1332 = -t1406 * t1503 + t1673;
t1276 = t1332 * t1504 - t1507 * t1710;
t1705 = pkin(3) * t1276;
t1295 = -t1369 * t1503 - t1373 * t1506;
t1704 = pkin(4) * t1295;
t1323 = t1399 * t1503 - t1671;
t1703 = pkin(4) * t1323;
t1674 = t1384 * t1503;
t1331 = t1406 * t1506 + t1674;
t1702 = pkin(4) * t1331;
t1701 = pkin(4) * t1504;
t1246 = t1507 * t1286 - t1504 * t1339;
t1232 = -pkin(4) * t1708 + qJDD(4) * pkin(10) + t1456 * t1682 + t1246;
t1292 = t1505 * t1382 - t1508 * t1711;
t1285 = -qJDD(3) * pkin(3) - t1509 * pkin(9) + t1292;
t1615 = t1458 + t1480;
t1510 = -pkin(4) * t1459 - pkin(10) * t1615 + t1285;
t1187 = t1503 * t1232 - t1506 * t1510;
t1516 = -qJ(6) * t1432 + 0.2e1 * qJD(6) * t1455 + t1187 + t1717;
t1165 = qJ(6) * t1395 + t1516;
t1699 = pkin(5) * t1165;
t1698 = pkin(5) * t1373;
t1697 = pkin(8) * t1495;
t1696 = pkin(8) * t1499;
t1695 = pkin(9) * t1263;
t1694 = pkin(9) * t1273;
t1693 = pkin(9) * t1276;
t1692 = pkin(10) * t1295;
t1691 = pkin(10) * t1323;
t1690 = pkin(10) * t1331;
t1264 = t1297 * t1507 + t1383 * t1504;
t1578 = t1264 * t1505 - t1295 * t1508;
t1175 = t1499 * t1263 + t1495 * t1578;
t1176 = -t1495 * t1263 + t1499 * t1578;
t1208 = t1264 * t1508 + t1295 * t1505;
t1590 = t1176 * t1497 + t1208 * t1493;
t1081 = -t1496 * t1175 + t1500 * t1590;
t1124 = -t1176 * t1493 + t1208 * t1497;
t1689 = qJ(1) * (t1081 * t1498 + t1124 * t1494);
t1274 = t1324 * t1507 + t1368 * t1504;
t1576 = t1274 * t1505 - t1323 * t1508;
t1190 = t1499 * t1273 + t1495 * t1576;
t1191 = -t1495 * t1273 + t1499 * t1576;
t1227 = t1274 * t1508 + t1323 * t1505;
t1587 = t1191 * t1497 + t1227 * t1493;
t1095 = -t1496 * t1190 + t1500 * t1587;
t1144 = -t1191 * t1493 + t1227 * t1497;
t1688 = qJ(1) * (t1095 * t1498 + t1144 * t1494);
t1277 = t1332 * t1507 + t1504 * t1710;
t1575 = t1277 * t1505 - t1331 * t1508;
t1193 = t1499 * t1276 + t1495 * t1575;
t1194 = -t1495 * t1276 + t1499 * t1575;
t1235 = t1277 * t1508 + t1331 * t1505;
t1586 = t1194 * t1497 + t1235 * t1493;
t1101 = -t1496 * t1193 + t1500 * t1586;
t1149 = -t1194 * t1493 + t1235 * t1497;
t1687 = qJ(1) * (t1101 * t1498 + t1149 * t1494);
t1686 = qJ(2) * t1496;
t1685 = qJ(2) * t1500;
t1684 = qJD(3) * qJD(4);
t1681 = qJD(6) * t1453;
t1680 = t1165 * t1503;
t1679 = t1165 * t1506;
t1678 = t1231 * t1503;
t1677 = t1231 * t1506;
t1676 = t1285 * t1504;
t1675 = t1285 * t1507;
t1670 = t1455 * t1476;
t1474 = t1504 * t1509 * t1507;
t1467 = qJDD(4) + t1474;
t1669 = t1467 * t1504;
t1468 = qJDD(4) - t1474;
t1668 = t1468 * t1504;
t1667 = t1468 * t1507;
t1666 = t1476 * t1503;
t1665 = t1476 * t1506;
t1488 = t1504 ^ 2;
t1664 = t1488 * t1509;
t1662 = t1493 * t1424;
t1661 = t1494 * t1490;
t1659 = t1495 * t1497;
t1658 = t1496 * t1382;
t1657 = t1496 * t1424;
t1655 = t1497 * t1424;
t1654 = t1498 * t1490;
t1653 = t1500 * t1424;
t1651 = t1505 * t1339;
t1650 = t1508 * t1339;
t1648 = pkin(1) * t1081 + t1124 * t1686;
t1647 = pkin(1) * t1095 + t1144 * t1686;
t1646 = pkin(1) * t1101 + t1149 * t1686;
t1645 = pkin(2) * t1176 + t1208 * t1697;
t1644 = pkin(2) * t1191 + t1227 * t1697;
t1643 = pkin(2) * t1194 + t1235 * t1697;
t1188 = t1506 * t1232 + t1503 * t1510;
t1642 = -pkin(3) * t1295 + pkin(9) * t1264;
t1641 = -pkin(3) * t1323 + pkin(9) * t1274;
t1640 = -pkin(3) * t1331 + pkin(9) * t1277;
t1639 = -pkin(4) * t1383 + pkin(10) * t1297;
t1638 = pkin(4) * t1368 - pkin(10) * t1324;
t1637 = pkin(4) * t1710 - pkin(10) * t1332;
t1489 = t1507 ^ 2;
t1635 = t1488 + t1489;
t1634 = t1495 * qJDD(3);
t1632 = t1504 * t1412;
t1631 = t1507 * t1412;
t1629 = t1493 * t1634;
t1080 = t1500 * t1175 + t1496 * t1590;
t1628 = -pkin(1) * t1080 + t1124 * t1685;
t1094 = t1500 * t1190 + t1496 * t1587;
t1627 = -pkin(1) * t1094 + t1144 * t1685;
t1100 = t1500 * t1193 + t1496 * t1586;
t1626 = -pkin(1) * t1100 + t1149 * t1685;
t1625 = -pkin(2) * t1175 + t1208 * t1696;
t1624 = -pkin(2) * t1190 + t1227 * t1696;
t1623 = -pkin(2) * t1193 + t1235 * t1696;
t1119 = t1187 * t1503 + t1506 * t1188;
t1245 = t1286 * t1504 + t1334;
t1184 = t1245 * t1504 + t1507 * t1246;
t1621 = -t1465 * t1494 - t1498 * t1466;
t1619 = t1505 * t1474;
t1618 = t1508 * t1474;
t1617 = -pkin(4) * t1231 + pkin(10) * t1119;
t1614 = -t1638 - t1677;
t1613 = -t1637 + t1678;
t1183 = t1245 * t1507 - t1246 * t1504;
t1460 = t1635 * qJDD(3);
t1486 = t1489 * t1509;
t1463 = t1486 + t1664;
t1407 = t1460 * t1508 - t1463 * t1505;
t1612 = pkin(8) * t1407 + t1183 * t1505;
t1611 = -pkin(8) * t1461 - t1651;
t1610 = -pkin(8) * t1552 + t1650;
t1608 = t1448 * pkin(5) - t1394 * qJ(6) - t1476 * t1423 - t1188;
t1439 = -0.2e1 * t1681;
t1168 = t1439 - t1608;
t1148 = -pkin(5) * t1383 - qJ(6) * t1369 + t1168;
t1153 = (t1373 + t1395) * qJ(6) + t1516;
t1077 = -t1148 * t1503 + t1153 * t1506 - t1692;
t1257 = t1698 - t1704;
t1055 = t1077 * t1504 + t1257 * t1507 + t1642;
t1061 = t1077 * t1507 - t1257 * t1504 - t1695;
t1537 = t1148 * t1506 + t1153 * t1503 + t1639;
t1066 = -t1537 - t1707;
t1599 = t1061 * t1505 + t1066 * t1508;
t1007 = -t1495 * t1055 + t1499 * t1599 + t1625;
t1548 = (-t1175 * t1495 - t1176 * t1499) * pkin(8);
t1014 = t1508 * t1061 - t1505 * t1066 + t1548;
t1607 = t1007 * t1497 + t1014 * t1493;
t1118 = -t1187 * t1506 + t1188 * t1503;
t1108 = -t1118 - t1692;
t1075 = t1108 * t1504 - t1295 * t1700 + t1642;
t1082 = t1108 * t1507 + t1295 * t1701 - t1695;
t1549 = t1119 + t1639;
t1089 = -t1549 - t1707;
t1595 = t1082 * t1505 + t1089 * t1508;
t1011 = -t1495 * t1075 + t1499 * t1595 + t1625;
t1023 = t1508 * t1082 - t1505 * t1089 + t1548;
t1606 = t1011 * t1497 + t1023 * t1493;
t1511 = -t1165 - t1717;
t1141 = -t1511 - t1703;
t1185 = -pkin(5) * t1368 + qJ(6) * t1399 - t1203;
t1160 = qJ(6) * t1671 - t1185 * t1503 - t1691;
t1071 = t1141 * t1507 + t1160 * t1504 + t1641;
t1076 = -t1141 * t1504 + t1160 * t1507 - t1694;
t1521 = qJ(6) * t1672 + t1185 * t1506 - t1638;
t1125 = -t1521 - t1706;
t1597 = t1076 * t1505 + t1125 * t1508;
t1013 = -t1495 * t1071 + t1499 * t1597 + t1624;
t1547 = (-t1190 * t1495 - t1191 * t1499) * pkin(8);
t1033 = t1508 * t1076 - t1505 * t1125 + t1547;
t1605 = t1013 * t1497 + t1033 * t1493;
t1529 = pkin(5) * t1406 + t1608;
t1145 = t1439 - t1529 - t1702;
t1199 = -qJ(6) * t1406 + t1203;
t1308 = -pkin(5) * t1710 + qJ(6) * t1384;
t1163 = t1199 * t1506 - t1308 * t1503 - t1690;
t1072 = t1145 * t1507 + t1163 * t1504 + t1640;
t1078 = -t1145 * t1504 + t1163 * t1507 - t1693;
t1536 = t1199 * t1503 + t1308 * t1506 - t1637;
t1127 = -t1536 - t1705;
t1596 = t1078 * t1505 + t1127 * t1508;
t1017 = -t1495 * t1072 + t1499 * t1596 + t1623;
t1546 = (-t1193 * t1495 - t1194 * t1499) * pkin(8);
t1035 = t1508 * t1078 - t1505 * t1127 + t1546;
t1604 = t1017 * t1497 + t1035 * t1493;
t1097 = t1168 * t1506 + t1680;
t1073 = t1097 * t1504 - t1203 * t1507;
t1074 = t1097 * t1507 + t1203 * t1504;
t1096 = t1168 * t1503 - t1679;
t1598 = t1074 * t1505 - t1096 * t1508;
t1019 = -t1495 * t1073 + t1499 * t1598;
t1041 = t1074 * t1508 + t1096 * t1505;
t1603 = t1019 * t1497 + t1041 * t1493;
t1172 = t1187 - t1703;
t1204 = t1678 - t1691;
t1092 = t1172 * t1507 + t1204 * t1504 + t1641;
t1104 = -t1172 * t1504 + t1204 * t1507 - t1694;
t1164 = -t1614 - t1706;
t1592 = t1104 * t1505 + t1164 * t1508;
t1025 = -t1495 * t1092 + t1499 * t1592 + t1624;
t1047 = t1508 * t1104 - t1505 * t1164 + t1547;
t1602 = t1025 * t1497 + t1047 * t1493;
t1173 = t1188 - t1702;
t1205 = t1677 - t1690;
t1098 = t1173 * t1507 + t1205 * t1504 + t1640;
t1107 = -t1173 * t1504 + t1205 * t1507 - t1693;
t1167 = -t1613 - t1705;
t1591 = t1107 * t1505 + t1167 * t1508;
t1028 = -t1495 * t1098 + t1499 * t1591 + t1623;
t1048 = t1508 * t1107 - t1505 * t1167 + t1546;
t1601 = t1028 * t1497 + t1048 * t1493;
t1090 = t1119 * t1504 - t1231 * t1507;
t1091 = t1119 * t1507 + t1231 * t1504;
t1594 = t1091 * t1505 - t1118 * t1508;
t1032 = -t1495 * t1090 + t1499 * t1594;
t1054 = t1091 * t1508 + t1118 * t1505;
t1600 = t1032 * t1497 + t1054 * t1493;
t1588 = t1184 * t1505 - t1285 * t1508;
t1103 = t1183 * t1495 + t1499 * t1588;
t1158 = t1184 * t1508 + t1285 * t1505;
t1593 = t1103 * t1497 + t1158 * t1493;
t1296 = -t1368 * t1506 - t1503 * t1710;
t1410 = t1449 - t1448;
t1269 = t1296 * t1504 - t1410 * t1507;
t1270 = t1296 * t1507 + t1410 * t1504;
t1294 = -t1368 * t1503 + t1506 * t1710;
t1577 = t1270 * t1505 - t1294 * t1508;
t1178 = -t1495 * t1269 + t1499 * t1577;
t1209 = t1270 * t1508 + t1294 * t1505;
t1589 = t1178 * t1497 + t1209 * t1493;
t1429 = -t1449 + t1473;
t1351 = -t1429 * t1503 - t1671;
t1278 = t1351 * t1504 - t1373 * t1507;
t1280 = t1351 * t1507 + t1373 * t1504;
t1349 = t1429 * t1506 - t1672;
t1574 = t1280 * t1505 - t1349 * t1508;
t1197 = -t1495 * t1278 + t1499 * t1574;
t1243 = t1280 * t1508 + t1349 * t1505;
t1585 = t1197 * t1497 + t1243 * t1493;
t1428 = t1448 - t1473;
t1352 = t1428 * t1506 + t1674;
t1279 = t1352 * t1504 + t1369 * t1507;
t1281 = t1352 * t1507 - t1369 * t1504;
t1350 = t1428 * t1503 - t1673;
t1573 = t1281 * t1505 - t1350 * t1508;
t1198 = -t1495 * t1279 + t1499 * t1573;
t1244 = t1281 * t1508 + t1350 * t1505;
t1584 = t1198 * t1497 + t1244 * t1493;
t1217 = t1292 * t1508 - t1293 * t1505;
t1201 = -t1217 * t1499 + t1495 * t1339;
t1218 = t1292 * t1505 + t1293 * t1508;
t1583 = t1201 * t1497 + t1218 * t1493;
t1356 = -t1394 * t1503 - t1453 * t1665;
t1309 = t1356 * t1504 + t1631;
t1311 = t1356 * t1507 - t1632;
t1355 = -t1506 * t1394 + t1453 * t1666;
t1572 = t1311 * t1505 + t1355 * t1508;
t1212 = -t1495 * t1309 + t1499 * t1572;
t1265 = t1311 * t1508 - t1355 * t1505;
t1582 = t1212 * t1497 + t1265 * t1493;
t1358 = t1395 * t1506 + t1455 * t1666;
t1310 = t1358 * t1504 - t1631;
t1312 = t1358 * t1507 + t1632;
t1357 = t1395 * t1503 - t1455 * t1665;
t1571 = t1312 * t1505 - t1357 * t1508;
t1213 = -t1495 * t1310 + t1499 * t1571;
t1266 = t1312 * t1508 + t1357 * t1505;
t1581 = t1213 * t1497 + t1266 * t1493;
t1215 = t1218 * t1499;
t1580 = t1215 * t1497 + t1217 * t1493;
t1377 = (t1453 * t1506 - t1455 * t1503) * t1476;
t1353 = t1377 * t1504 + t1450 * t1507;
t1354 = t1377 * t1507 - t1450 * t1504;
t1376 = (t1453 * t1503 + t1455 * t1506) * t1476;
t1563 = t1354 * t1505 - t1376 * t1508;
t1248 = -t1495 * t1353 + t1499 * t1563;
t1289 = t1354 * t1508 + t1376 * t1505;
t1579 = t1248 * t1497 + t1289 * t1493;
t1457 = 0.2e1 * t1480 + t1633;
t1403 = t1457 * t1507 + t1459 * t1504;
t1404 = -t1457 * t1504 + t1413;
t1464 = -t1486 + t1664;
t1561 = t1404 * t1505 - t1464 * t1508;
t1320 = -t1495 * t1403 + t1499 * t1561;
t1374 = t1404 * t1508 + t1464 * t1505;
t1570 = t1320 * t1497 + t1374 * t1493;
t1452 = t1507 * t1467;
t1472 = -t1486 - t1708;
t1416 = t1472 * t1504 + t1452;
t1420 = t1472 * t1507 - t1669;
t1559 = t1420 * t1505 + t1459 * t1508;
t1327 = -t1495 * t1416 + t1499 * t1559;
t1379 = t1420 * t1508 - t1459 * t1505;
t1569 = t1327 * t1497 + t1379 * t1493;
t1470 = -t1664 - t1708;
t1418 = t1470 * t1507 - t1668;
t1422 = -t1470 * t1504 - t1667;
t1558 = t1422 * t1505 - t1457 * t1508;
t1328 = -t1495 * t1418 + t1499 * t1558;
t1380 = t1422 * t1508 + t1457 * t1505;
t1568 = t1328 * t1497 + t1380 * t1493;
t1471 = t1486 - t1708;
t1415 = t1471 * t1504 + t1667;
t1419 = t1471 * t1507 - t1668;
t1545 = t1419 * t1505 - t1482 * t1508;
t1342 = -t1495 * t1415 + t1499 * t1545;
t1390 = t1419 * t1508 + t1482 * t1505;
t1567 = t1342 * t1497 + t1390 * t1493;
t1469 = -t1664 + t1708;
t1417 = t1469 * t1507 + t1669;
t1421 = -t1469 * t1504 + t1452;
t1544 = t1421 * t1505 - t1508 * t1633;
t1343 = -t1495 * t1417 + t1499 * t1544;
t1391 = t1421 * t1508 + t1505 * t1633;
t1566 = t1343 * t1497 + t1391 * t1493;
t1425 = -t1489 * t1684 - t1504 * t1636;
t1539 = t1425 * t1505 - t1618;
t1346 = -t1495 * t1413 + t1499 * t1539;
t1392 = t1425 * t1508 + t1619;
t1565 = t1346 * t1497 + t1392 * t1493;
t1414 = t1615 * t1504;
t1426 = t1458 * t1507 - t1488 * t1684;
t1538 = t1426 * t1505 + t1618;
t1347 = -t1495 * t1414 + t1499 * t1538;
t1393 = t1426 * t1508 - t1619;
t1564 = t1347 * t1497 + t1393 * t1493;
t1555 = t1460 * t1505 + t1463 * t1508;
t1401 = t1555 * t1499;
t1562 = t1401 * t1497 + t1407 * t1493;
t1451 = t1635 * t1684;
t1551 = -qJDD(4) * t1508 + t1451 * t1505;
t1409 = t1551 * t1499;
t1427 = qJDD(4) * t1505 + t1451 * t1508;
t1560 = t1409 * t1497 + t1427 * t1493;
t1438 = t1461 * t1499;
t1556 = t1438 * t1497 - t1493 * t1552;
t1554 = t1465 * t1498 - t1466 * t1494;
t1543 = (-t1080 * t1496 - t1081 * t1500) * qJ(2);
t1542 = (-t1094 * t1496 - t1095 * t1500) * qJ(2);
t1541 = (-t1100 * t1496 - t1101 * t1500) * qJ(2);
t1117 = -pkin(5) * t1203 + qJ(6) * t1168;
t1042 = -pkin(10) * t1096 + qJ(6) * t1679 - t1117 * t1503;
t1064 = -pkin(4) * t1096 + t1699;
t1008 = -pkin(9) * t1073 + t1042 * t1507 - t1064 * t1504;
t1513 = -pkin(4) * t1203 + pkin(10) * t1097 + qJ(6) * t1680 + t1117 * t1506;
t1015 = -pkin(3) * t1073 - t1513;
t1535 = pkin(8) * t1041 + t1008 * t1505 + t1015 * t1508;
t1036 = -pkin(9) * t1090 + (-pkin(10) * t1507 + t1701) * t1118;
t1049 = -pkin(3) * t1090 - t1617;
t1534 = pkin(8) * t1054 + t1036 * t1505 + t1049 * t1508;
t1228 = -pkin(3) * t1416 + t1245;
t1267 = -pkin(9) * t1416 + t1676;
t1533 = pkin(8) * t1379 + t1228 * t1508 + t1267 * t1505;
t1229 = -pkin(3) * t1418 + t1246;
t1268 = -pkin(9) * t1418 + t1675;
t1532 = pkin(8) * t1380 + t1229 * t1508 + t1268 * t1505;
t1005 = -t1019 * t1493 + t1041 * t1497;
t1004 = -pkin(3) * t1096 + pkin(9) * t1074 + t1042 * t1504 + t1064 * t1507;
t1018 = t1499 * t1073 + t1495 * t1598;
t974 = -pkin(2) * t1018 - t1495 * t1004 + t1499 * t1535;
t977 = t1508 * t1008 - t1505 * t1015 + (-t1018 * t1495 - t1019 * t1499) * pkin(8);
t1531 = qJ(2) * t1005 + t1493 * t977 + t1497 * t974;
t1009 = -t1032 * t1493 + t1054 * t1497;
t1020 = pkin(9) * t1091 + (-pkin(3) + t1616) * t1118;
t1031 = t1499 * t1090 + t1495 * t1594;
t981 = -pkin(2) * t1031 - t1495 * t1020 + t1499 * t1534;
t990 = t1508 * t1036 - t1505 * t1049 + (-t1031 * t1495 - t1032 * t1499) * pkin(8);
t1530 = qJ(2) * t1009 + t1493 * t990 + t1497 * t981;
t1102 = -t1183 * t1499 + t1495 * t1588;
t1159 = -pkin(3) * t1285 + pkin(9) * t1184;
t1518 = pkin(8) * t1158 - (-pkin(3) * t1508 - pkin(9) * t1505) * t1183;
t1030 = -pkin(2) * t1102 - t1495 * t1159 + t1499 * t1518;
t1034 = -(pkin(3) * t1505 - pkin(9) * t1508) * t1183 + (-t1102 * t1495 - t1103 * t1499) * pkin(8);
t1065 = -t1103 * t1493 + t1158 * t1497;
t1528 = qJ(2) * t1065 + t1030 * t1497 + t1034 * t1493;
t1181 = pkin(3) * t1463 + pkin(9) * t1460 + t1184;
t1400 = t1555 * t1495;
t1106 = -pkin(2) * t1400 - t1495 * t1181 + t1499 * t1612;
t1169 = t1508 * t1183 + (-t1400 * t1495 - t1401 * t1499) * pkin(8);
t1348 = -t1401 * t1493 + t1407 * t1497;
t1527 = qJ(2) * t1348 + t1106 * t1497 + t1169 * t1493;
t1261 = pkin(3) * t1459 + pkin(9) * t1420 - t1675;
t1325 = t1499 * t1416 + t1495 * t1559;
t1138 = -pkin(2) * t1325 - t1495 * t1261 + t1499 * t1533;
t1156 = -t1505 * t1228 + t1508 * t1267 + (-t1325 * t1495 - t1327 * t1499) * pkin(8);
t1283 = -t1327 * t1493 + t1379 * t1497;
t1526 = qJ(2) * t1283 + t1138 * t1497 + t1156 * t1493;
t1260 = -pkin(3) * t1457 + pkin(9) * t1422 + t1676;
t1326 = t1499 * t1418 + t1495 * t1558;
t1139 = -pkin(2) * t1326 - t1495 * t1260 + t1499 * t1532;
t1157 = -t1505 * t1229 + t1508 * t1268 + (-t1326 * t1495 - t1328 * t1499) * pkin(8);
t1284 = -t1328 * t1493 + t1380 * t1497;
t1525 = qJ(2) * t1284 + t1139 * t1497 + t1157 * t1493;
t1200 = -t1217 * t1495 - t1499 * t1339;
t1140 = (-t1200 * t1495 - t1201 * t1499) * pkin(8);
t1150 = -t1201 * t1493 + t1218 * t1497;
t1151 = -pkin(2) * t1200 + t1218 * t1696;
t1524 = qJ(2) * t1150 + t1140 * t1493 + t1151 * t1497;
t1225 = pkin(2) * t1435 + t1495 * t1293 + t1499 * t1611;
t1299 = -t1650 + (t1435 * t1495 + t1437 * t1499) * pkin(8);
t1523 = qJ(2) * t1397 + t1225 * t1497 + t1299 * t1493;
t1436 = t1461 * t1495;
t1226 = -pkin(2) * t1436 + t1495 * t1292 + t1499 * t1610;
t1298 = -t1651 + (-t1436 * t1495 - t1438 * t1499) * pkin(8);
t1398 = -t1438 * t1493 - t1497 * t1552;
t1522 = qJ(2) * t1398 + t1226 * t1497 + t1298 * t1493;
t1512 = t1497 * t1382 - t1493 * t1519;
t1434 = (-t1496 * t1499 - t1500 * t1659) * qJDD(3);
t1433 = (-t1496 * t1659 + t1499 * t1500) * qJDD(3);
t1408 = t1551 * t1495;
t1365 = -t1409 * t1493 + t1427 * t1497;
t1364 = -t1496 * t1436 + t1500 * t1556;
t1361 = t1500 * t1436 + t1496 * t1556;
t1345 = t1499 * t1414 + t1495 * t1538;
t1344 = t1499 * t1413 + t1495 * t1539;
t1341 = t1499 * t1417 + t1495 * t1544;
t1340 = t1499 * t1415 + t1495 * t1545;
t1338 = -t1496 * t1445 + (-t1496 * t1553 + t1653) * t1497;
t1337 = -t1493 * t1653 + t1658;
t1336 = t1500 * t1445 + (t1500 * t1553 + t1657) * t1497;
t1335 = -t1382 * t1500 - t1493 * t1657;
t1319 = t1499 * t1403 + t1495 * t1561;
t1318 = -t1493 * t1445 + (t1382 - t1540) * t1497;
t1316 = t1512 * t1500;
t1315 = t1512 * t1496;
t1314 = -t1496 * t1408 + t1500 * t1560;
t1313 = t1500 * t1408 + t1496 * t1560;
t1307 = -t1364 * t1494 + t1398 * t1498;
t1306 = t1364 * t1498 + t1398 * t1494;
t1305 = -t1496 * t1400 + t1500 * t1562;
t1304 = t1500 * t1400 + t1496 * t1562;
t1303 = -t1347 * t1493 + t1393 * t1497;
t1302 = -t1346 * t1493 + t1392 * t1497;
t1301 = -t1343 * t1493 + t1391 * t1497;
t1300 = -t1342 * t1493 + t1390 * t1497;
t1288 = -t1317 * t1500 + t1657;
t1287 = t1493 * t1658 + t1496 * t1515 - t1653;
t1272 = -t1320 * t1493 + t1374 * t1497;
t1256 = -t1496 * t1345 + t1500 * t1564;
t1255 = -t1496 * t1344 + t1500 * t1565;
t1254 = t1500 * t1345 + t1496 * t1564;
t1253 = t1500 * t1344 + t1496 * t1565;
t1252 = -t1496 * t1341 + t1500 * t1566;
t1251 = -t1496 * t1340 + t1500 * t1567;
t1250 = t1500 * t1341 + t1496 * t1566;
t1249 = t1500 * t1340 + t1496 * t1567;
t1247 = t1499 * t1353 + t1495 * t1563;
t1241 = -t1496 * t1326 + t1500 * t1568;
t1240 = -t1496 * t1325 + t1500 * t1569;
t1239 = t1500 * t1326 + t1496 * t1568;
t1238 = t1500 * t1325 + t1496 * t1569;
t1237 = pkin(1) * t1288 + t1318 * t1686;
t1236 = -pkin(1) * t1287 + t1318 * t1685;
t1224 = pkin(2) * t1438 - t1499 * t1292 + t1495 * t1610;
t1223 = -pkin(2) * t1437 - t1499 * t1293 + t1495 * t1611;
t1220 = -t1496 * t1319 + t1500 * t1570;
t1219 = t1500 * t1319 + t1496 * t1570;
t1216 = (-t1287 * t1496 - t1288 * t1500) * qJ(2);
t1214 = t1218 * t1495;
t1211 = t1499 * t1310 + t1495 * t1571;
t1210 = t1499 * t1309 + t1495 * t1572;
t1202 = -t1248 * t1493 + t1289 * t1497;
t1196 = t1499 * t1279 + t1495 * t1573;
t1195 = t1499 * t1278 + t1495 * t1574;
t1180 = -t1213 * t1493 + t1266 * t1497;
t1179 = -t1212 * t1493 + t1265 * t1497;
t1177 = t1499 * t1269 + t1495 * t1577;
t1171 = -t1493 * t1225 + t1497 * t1299 + (t1359 * t1496 + t1362 * t1500) * qJ(2);
t1170 = -t1493 * t1226 + t1497 * t1298 + (-t1361 * t1496 - t1364 * t1500) * qJ(2);
t1166 = -t1215 * t1493 + t1217 * t1497;
t1162 = -t1496 * t1247 + t1500 * t1579;
t1161 = t1500 * t1247 + t1496 * t1579;
t1155 = -t1198 * t1493 + t1244 * t1497;
t1154 = -t1197 * t1493 + t1243 * t1497;
t1152 = pkin(2) * t1201 + t1218 * t1697;
t1137 = pkin(2) * t1328 + t1499 * t1260 + t1495 * t1532;
t1136 = pkin(2) * t1327 + t1499 * t1261 + t1495 * t1533;
t1135 = pkin(1) * t1359 - t1496 * t1223 + t1500 * t1523;
t1134 = -pkin(1) * t1361 - t1496 * t1224 + t1500 * t1522;
t1133 = -pkin(1) * t1362 + t1500 * t1223 + t1496 * t1523;
t1132 = pkin(1) * t1364 + t1500 * t1224 + t1496 * t1522;
t1131 = -t1496 * t1211 + t1500 * t1581;
t1130 = -t1496 * t1210 + t1500 * t1582;
t1129 = t1500 * t1211 + t1496 * t1581;
t1128 = t1500 * t1210 + t1496 * t1582;
t1126 = -t1178 * t1493 + t1209 * t1497;
t1123 = -t1496 * t1214 + t1500 * t1580;
t1122 = t1500 * t1214 + t1496 * t1580;
t1116 = -t1162 * t1494 + t1202 * t1498;
t1115 = t1162 * t1498 + t1202 * t1494;
t1114 = -t1496 * t1200 + t1500 * t1583;
t1113 = t1500 * t1200 + t1496 * t1583;
t1112 = -t1496 * t1196 + t1500 * t1584;
t1111 = -t1496 * t1195 + t1500 * t1585;
t1110 = t1500 * t1196 + t1496 * t1584;
t1109 = t1500 * t1195 + t1496 * t1585;
t1105 = pkin(2) * t1401 + t1499 * t1181 + t1495 * t1612;
t1088 = -t1131 * t1494 + t1180 * t1498;
t1087 = -t1130 * t1494 + t1179 * t1498;
t1086 = t1131 * t1498 + t1180 * t1494;
t1085 = t1130 * t1498 + t1179 * t1494;
t1084 = -t1496 * t1177 + t1500 * t1589;
t1083 = t1500 * t1177 + t1496 * t1589;
t1070 = -t1112 * t1494 + t1155 * t1498;
t1069 = -t1111 * t1494 + t1154 * t1498;
t1068 = t1112 * t1498 + t1155 * t1494;
t1067 = t1111 * t1498 + t1154 * t1494;
t1062 = qJ(1) * (-t1101 * t1494 + t1149 * t1498);
t1059 = qJ(1) * (-t1095 * t1494 + t1144 * t1498);
t1058 = -t1493 * t1106 + t1497 * t1169 + (-t1304 * t1496 - t1305 * t1500) * qJ(2);
t1057 = -t1493 * t1139 + t1497 * t1157 + (-t1239 * t1496 - t1241 * t1500) * qJ(2);
t1056 = -t1493 * t1138 + t1497 * t1156 + (-t1238 * t1496 - t1240 * t1500) * qJ(2);
t1053 = -t1084 * t1494 + t1126 * t1498;
t1052 = t1084 * t1498 + t1126 * t1494;
t1050 = qJ(1) * (-t1081 * t1494 + t1124 * t1498);
t1046 = -pkin(1) * t1239 - t1496 * t1137 + t1500 * t1525;
t1045 = -pkin(1) * t1238 - t1496 * t1136 + t1500 * t1526;
t1044 = pkin(1) * t1241 + t1500 * t1137 + t1496 * t1525;
t1043 = pkin(1) * t1240 + t1500 * t1136 + t1496 * t1526;
t1040 = -t1496 * t1102 + t1500 * t1593;
t1039 = t1500 * t1102 + t1496 * t1593;
t1038 = -pkin(1) * t1304 - t1496 * t1105 + t1500 * t1527;
t1037 = pkin(1) * t1305 + t1500 * t1105 + t1496 * t1527;
t1029 = pkin(2) * t1103 + t1499 * t1159 + t1495 * t1518;
t1027 = t1499 * t1098 + t1495 * t1591 + t1643;
t1026 = t1497 * t1140 - t1493 * t1151 + (-t1113 * t1496 - t1114 * t1500) * qJ(2);
t1024 = t1499 * t1092 + t1495 * t1592 + t1644;
t1022 = -pkin(1) * t1113 - t1496 * t1152 + t1500 * t1524;
t1021 = pkin(1) * t1114 + t1500 * t1152 + t1496 * t1524;
t1016 = t1499 * t1072 + t1495 * t1596 + t1643;
t1012 = t1499 * t1071 + t1495 * t1597 + t1644;
t1010 = t1499 * t1075 + t1495 * t1595 + t1645;
t1006 = t1499 * t1055 + t1495 * t1599 + t1645;
t1003 = -t1493 * t1028 + t1497 * t1048 + t1541;
t1002 = -t1493 * t1025 + t1497 * t1047 + t1542;
t1001 = -t1496 * t1031 + t1500 * t1600;
t1000 = t1500 * t1031 + t1496 * t1600;
t999 = -t1493 * t1017 + t1497 * t1035 + t1541;
t998 = -t1493 * t1013 + t1497 * t1033 + t1542;
t997 = -t1496 * t1018 + t1500 * t1603;
t996 = t1500 * t1018 + t1496 * t1603;
t995 = -t1496 * t1027 + t1500 * t1601 + t1626;
t994 = t1500 * t1027 + t1496 * t1601 + t1646;
t993 = -t1496 * t1024 + t1500 * t1602 + t1627;
t992 = t1500 * t1024 + t1496 * t1602 + t1647;
t991 = -t1493 * t1011 + t1497 * t1023 + t1543;
t989 = -t1493 * t1030 + t1497 * t1034 + (-t1039 * t1496 - t1040 * t1500) * qJ(2);
t988 = -t1496 * t1016 + t1500 * t1604 + t1626;
t987 = t1500 * t1016 + t1496 * t1604 + t1646;
t986 = -t1493 * t1007 + t1497 * t1014 + t1543;
t985 = -pkin(1) * t1039 - t1496 * t1029 + t1500 * t1528;
t984 = pkin(1) * t1040 + t1500 * t1029 + t1496 * t1528;
t983 = -t1496 * t1012 + t1500 * t1605 + t1627;
t982 = t1500 * t1012 + t1496 * t1605 + t1647;
t980 = pkin(2) * t1032 + t1499 * t1020 + t1495 * t1534;
t979 = -t1496 * t1010 + t1500 * t1606 + t1628;
t978 = t1500 * t1010 + t1496 * t1606 + t1648;
t976 = -t1496 * t1006 + t1500 * t1607 + t1628;
t975 = t1500 * t1006 + t1496 * t1607 + t1648;
t973 = pkin(2) * t1019 + t1499 * t1004 + t1495 * t1535;
t972 = -t1493 * t981 + t1497 * t990 + (-t1000 * t1496 - t1001 * t1500) * qJ(2);
t971 = -pkin(1) * t1000 - t1496 * t980 + t1500 * t1530;
t970 = pkin(1) * t1001 + t1496 * t1530 + t1500 * t980;
t969 = -t1493 * t974 + t1497 * t977 + (-t1496 * t996 - t1500 * t997) * qJ(2);
t968 = -pkin(1) * t996 - t1496 * t973 + t1500 * t1531;
t967 = pkin(1) * t997 + t1496 * t1531 + t1500 * t973;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1661, -t1654, -t1554, -qJ(1) * t1554, 0, 0, 0, 0, 0, 0, -t1338 * t1494 - t1498 * t1662, -t1337 * t1494 - t1498 * t1655, -t1316 * t1494 + t1317 * t1498, t1498 * t1216 - t1494 * t1236 - qJ(1) * (t1288 * t1498 + t1318 * t1494), 0, 0, -t1716, 0, t1307, -t1434 * t1494 + t1498 * t1629, -qJ(1) * t1306 - t1134 * t1494 + t1170 * t1498, qJ(1) * t1715 - t1494 * t1135 + t1498 * t1171, -t1123 * t1494 + t1166 * t1498, t1498 * t1026 - t1494 * t1022 - qJ(1) * (t1114 * t1498 + t1150 * t1494), -t1256 * t1494 + t1303 * t1498, -t1220 * t1494 + t1272 * t1498, -t1252 * t1494 + t1301 * t1498, -t1255 * t1494 + t1302 * t1498, -t1251 * t1494 + t1300 * t1498, -t1314 * t1494 + t1365 * t1498, t1498 * t1056 - t1494 * t1045 - qJ(1) * (t1240 * t1498 + t1283 * t1494), t1498 * t1057 - t1494 * t1046 - qJ(1) * (t1241 * t1498 + t1284 * t1494), t1498 * t1058 - t1494 * t1038 - qJ(1) * (t1305 * t1498 + t1348 * t1494), t1498 * t989 - t1494 * t985 - qJ(1) * (t1040 * t1498 + t1065 * t1494), t1088, t1053, t1069, t1087, t1070, t1116, t1002 * t1498 - t1494 * t993 - t1688, t1003 * t1498 - t1494 * t995 - t1687, -t1494 * t979 + t1498 * t991 - t1689, t1498 * t972 - t1494 * t971 - qJ(1) * (t1001 * t1498 + t1009 * t1494), t1088, t1053, t1069, t1087, t1070, t1116, -t1494 * t983 + t1498 * t998 - t1688, -t1494 * t988 + t1498 * t999 - t1687, -t1494 * t976 + t1498 * t986 - t1689, t1498 * t969 - t1494 * t968 - qJ(1) * (t1005 * t1494 + t1498 * t997); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1654, -t1661, t1621, qJ(1) * t1621, 0, 0, 0, 0, 0, 0, t1338 * t1498 - t1494 * t1662, t1337 * t1498 - t1494 * t1655, t1316 * t1498 + t1317 * t1494, t1494 * t1216 + t1498 * t1236 + qJ(1) * (-t1288 * t1494 + t1318 * t1498), 0, 0, t1715, 0, t1306, t1434 * t1498 + t1494 * t1629, qJ(1) * t1307 + t1134 * t1498 + t1170 * t1494, qJ(1) * t1716 + t1498 * t1135 + t1494 * t1171, t1123 * t1498 + t1166 * t1494, t1494 * t1026 + t1498 * t1022 + qJ(1) * (-t1114 * t1494 + t1150 * t1498), t1256 * t1498 + t1303 * t1494, t1220 * t1498 + t1272 * t1494, t1252 * t1498 + t1301 * t1494, t1255 * t1498 + t1302 * t1494, t1251 * t1498 + t1300 * t1494, t1314 * t1498 + t1365 * t1494, t1494 * t1056 + t1498 * t1045 + qJ(1) * (-t1240 * t1494 + t1283 * t1498), t1494 * t1057 + t1498 * t1046 + qJ(1) * (-t1241 * t1494 + t1284 * t1498), t1494 * t1058 + t1498 * t1038 + qJ(1) * (-t1305 * t1494 + t1348 * t1498), t1494 * t989 + t1498 * t985 + qJ(1) * (-t1040 * t1494 + t1065 * t1498), t1086, t1052, t1067, t1085, t1068, t1115, t1002 * t1494 + t1498 * t993 + t1059, t1003 * t1494 + t1498 * t995 + t1062, t1494 * t991 + t1498 * t979 + t1050, t1494 * t972 + t1498 * t971 + qJ(1) * (-t1001 * t1494 + t1009 * t1498), t1086, t1052, t1067, t1085, t1068, t1115, t1494 * t998 + t1498 * t983 + t1059, t1494 * t999 + t1498 * t988 + t1062, t1494 * t986 + t1498 * t976 + t1050, t1494 * t969 + t1498 * t968 + qJ(1) * (t1005 * t1498 - t1494 * t997); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1465, t1466, 0, 0, 0, 0, 0, 0, 0, 0, t1336, t1335, t1315, t1237, 0, 0, t1359, 0, t1361, t1433, t1132, t1133, t1122, t1021, t1254, t1219, t1250, t1253, t1249, t1313, t1043, t1044, t1037, t984, t1129, t1083, t1109, t1128, t1110, t1161, t992, t994, t978, t970, t1129, t1083, t1109, t1128, t1110, t1161, t982, t987, t975, t967; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1490, -t1465, 0, 0, 0, 0, 0, 0, 0, -t1662, -t1655, t1317, t1216, 0, 0, -t1397, 0, t1398, t1629, t1170, t1171, t1166, t1026, t1303, t1272, t1301, t1302, t1300, t1365, t1056, t1057, t1058, t989, t1180, t1126, t1154, t1179, t1155, t1202, t1002, t1003, t991, t972, t1180, t1126, t1154, t1179, t1155, t1202, t998, t999, t986, t969; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1490, 0, -t1466, 0, 0, 0, 0, 0, 0, 0, t1338, t1337, t1316, t1236, 0, 0, t1362, 0, t1364, t1434, t1134, t1135, t1123, t1022, t1256, t1220, t1252, t1255, t1251, t1314, t1045, t1046, t1038, t985, t1131, t1084, t1111, t1130, t1112, t1162, t993, t995, t979, t971, t1131, t1084, t1111, t1130, t1112, t1162, t983, t988, t976, t968; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1465, t1466, 0, 0, 0, 0, 0, 0, 0, 0, t1336, t1335, t1315, t1237, 0, 0, t1359, 0, t1361, t1433, t1132, t1133, t1122, t1021, t1254, t1219, t1250, t1253, t1249, t1313, t1043, t1044, t1037, t984, t1129, t1083, t1109, t1128, t1110, t1161, t992, t994, t978, t970, t1129, t1083, t1109, t1128, t1110, t1161, t982, t987, t975, t967; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1424, -t1519, 0, 0, 0, t1461, 0, -t1552, 0, t1298, t1299, t1217, t1140, t1393, t1374, t1391, t1392, t1390, t1427, t1156, t1157, t1169, t1034, t1266, t1209, t1243, t1265, t1244, t1289, t1047, t1048, t1023, t990, t1266, t1209, t1243, t1265, t1244, t1289, t1033, t1035, t1014, t977; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1424, 0, t1382, 0, 0, 0, t1437, 0, t1438, -t1634, t1226, t1225, t1215, t1151, t1347, t1320, t1343, t1346, t1342, t1409, t1138, t1139, t1106, t1030, t1213, t1178, t1197, t1212, t1198, t1248, t1025, t1028, t1011, t981, t1213, t1178, t1197, t1212, t1198, t1248, t1013, t1017, t1007, t974; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1519, -t1382, 0, 0, 0, 0, t1435, 0, t1436, t1499 * qJDD(3), t1224, t1223, t1214, t1152, t1345, t1319, t1341, t1344, t1340, t1408, t1136, t1137, t1105, t1029, t1211, t1177, t1195, t1210, t1196, t1247, t1024, t1027, t1010, t980, t1211, t1177, t1195, t1210, t1196, t1247, t1012, t1016, t1006, t973; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), 0, -t1509, 0, 0, -t1339, t1292, 0, t1426, t1404, t1421, t1425, t1419, t1451, t1267, t1268, t1183, pkin(9) * t1183, t1312, t1270, t1280, t1311, t1281, t1354, t1104, t1107, t1082, t1036, t1312, t1270, t1280, t1311, t1281, t1354, t1076, t1078, t1061, t1008; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1509, 0, qJDD(3), 0, t1339, 0, t1293, 0, t1474, -t1464, -t1633, -t1474, -t1482, -qJDD(4), t1228, t1229, 0, pkin(3) * t1183, -t1357, -t1294, -t1349, t1355, -t1350, -t1376, t1164, t1167, t1089, t1049, -t1357, -t1294, -t1349, t1355, -t1350, -t1376, t1125, t1127, t1066, t1015; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t1292, -t1293, 0, 0, t1414, t1403, t1417, t1413, t1415, 0, t1261, t1260, t1181, t1159, t1310, t1269, t1278, t1309, t1279, t1353, t1092, t1098, t1075, t1020, t1310, t1269, t1278, t1309, t1279, t1353, t1071, t1072, t1055, t1004; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1458, t1459, t1467, -t1480, t1471, t1480, 0, t1285, t1245, 0, t1358, t1296, t1351, t1356, t1352, t1377, t1204, t1205, t1108, -pkin(10) * t1118, t1358, t1296, t1351, t1356, t1352, t1377, t1160, t1163, t1077, t1042; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1479, t1457, t1469, t1636, t1468, -t1479, -t1285, 0, t1246, 0, -t1412, -t1410, -t1373, t1412, t1369, t1450, t1172, t1173, -t1704, -pkin(4) * t1118, -t1412, -t1410, -t1373, t1412, t1369, t1450, t1141, t1145, t1257, t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1474, t1464, t1633, t1474, t1482, qJDD(4), -t1245, -t1246, 0, 0, t1357, t1294, t1349, -t1355, t1350, t1376, t1614, t1613, t1549, t1617, t1357, t1294, t1349, -t1355, t1350, t1376, t1521, t1536, t1537, t1513; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1395, -t1368, -t1712, -t1432, t1428, t1432, 0, t1231, t1187, 0, t1395, -t1368, -t1712, -t1432, t1428, t1432, qJ(6) * t1712, t1199, t1153, qJ(6) * t1165; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1670, t1710, t1429, t1394, -t1384, t1670, -t1231, 0, t1188, 0, -t1670, t1710, t1429, t1394, -t1384, t1670, t1185, t1308, t1148, t1117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1412, t1410, t1373, -t1412, -t1369, -t1450, -t1187, -t1188, 0, 0, t1412, t1410, t1373, -t1412, -t1369, -t1450, t1511, t1529 + 0.2e1 * t1681, -t1698, -t1699; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1395, -t1368, -t1712, -t1432, t1428, t1432, 0, t1203, t1165, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1670, t1710, t1429, t1394, -t1384, t1670, -t1203, 0, t1168, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1412, t1410, t1373, -t1412, -t1369, -t1450, -t1165, -t1168, 0, 0;];
m_new_reg  = t1;
