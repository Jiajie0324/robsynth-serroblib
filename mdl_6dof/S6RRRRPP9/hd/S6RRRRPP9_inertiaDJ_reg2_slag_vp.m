% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRRRPP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:51
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRPP9_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP9_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP9_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPP9_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:49:47
% EndTime: 2019-03-09 21:50:09
% DurationCPUTime: 8.08s
% Computational Cost: add. (7034->547), mult. (19225->892), div. (0->0), fcn. (17672->8), ass. (0->252)
t169 = sin(qJ(3));
t158 = qJD(3) * t169;
t168 = sin(qJ(4));
t171 = cos(qJ(4));
t172 = cos(qJ(3));
t275 = qJD(4) * t172;
t251 = t171 * t275;
t104 = -t168 * t158 + t251;
t157 = qJD(4) * t171;
t252 = t169 * t157;
t278 = qJD(3) * t172;
t103 = t168 * t278 + t252;
t297 = cos(pkin(6));
t244 = t297 * t169;
t166 = sin(pkin(6));
t170 = sin(qJ(2));
t295 = t166 * t170;
t194 = t172 * t295 + t244;
t173 = cos(qJ(2));
t294 = t166 * t173;
t65 = t168 * t194 + t171 * t294;
t66 = -t168 * t294 + t171 * t194;
t218 = t168 * t66 + t171 * t65;
t282 = qJD(2) * t170;
t250 = t166 * t282;
t319 = qJD(4) * t194 - t250;
t281 = qJD(2) * t173;
t249 = t166 * t281;
t262 = t169 * t295;
t64 = -qJD(3) * t262 + (t297 * qJD(3) + t249) * t172;
t322 = -qJD(4) * t294 + t64;
t36 = -t168 * t319 + t171 * t322;
t302 = t36 * t168;
t35 = t168 * t322 + t171 * t319;
t303 = t35 * t171;
t304 = t171 * t66;
t306 = t168 * t65;
t175 = t169 * ((-t304 + t306) * qJD(4) - t302 - t303) - t218 * t278;
t293 = t168 * qJ(5);
t308 = pkin(4) + qJ(6);
t212 = -t308 * t171 - t293;
t199 = 0.2e1 * t35 * t66 + 0.2e1 * t36 * t65;
t100 = -t297 * t172 + t262;
t156 = qJD(4) * t168;
t188 = t194 * qJD(3);
t63 = t169 * t249 + t188;
t49 = t100 * t156 - t171 * t63;
t325 = pkin(10) * t49;
t50 = t100 * t157 + t168 * t63;
t324 = pkin(10) * t50;
t61 = t63 * qJ(5);
t96 = t100 * qJD(5);
t323 = t61 + t96;
t155 = qJD(5) * t171;
t225 = -pkin(4) * t171 - t293;
t320 = t225 * qJD(4) + t155;
t162 = t168 ^ 2;
t164 = t171 ^ 2;
t286 = t162 - t164;
t123 = t286 * qJD(4);
t253 = t168 * t275;
t279 = qJD(3) * t171;
t102 = t169 * t279 + t253;
t310 = pkin(10) * t169;
t232 = -pkin(3) * t172 - t310;
t124 = -pkin(2) + t232;
t309 = pkin(10) * t172;
t231 = pkin(3) * t169 - t309;
t202 = qJD(3) * t231;
t288 = t124 * t157 + t168 * t202;
t54 = pkin(9) * t102 - t288;
t118 = -pkin(3) + t225;
t153 = pkin(9) * t278;
t276 = qJD(4) * t169;
t254 = t168 * t276;
t239 = pkin(4) * t103 + qJ(5) * t254 + t153;
t260 = qJ(5) * t278;
t53 = (-qJD(5) * t169 - t260) * t171 + t239;
t318 = qJD(4) * (t118 * t169 + t309) - t53;
t301 = t36 * t171;
t316 = qJD(4) * t218 + t168 * t35 - t301;
t315 = (-qJD(3) * t66 + t49) * t169 - (t100 * t279 - t36) * t172;
t280 = qJD(3) * t168;
t10 = (qJD(3) * t65 + t50) * t169 + (t100 * t280 - t35) * t172;
t163 = t169 ^ 2;
t285 = -t172 ^ 2 + t163;
t241 = t285 * qJD(3);
t69 = -0.2e1 * t168 * t241 + 0.2e1 * t169 * t251;
t314 = 0.2e1 * t166;
t313 = pkin(5) + pkin(10);
t312 = pkin(4) * t63;
t311 = pkin(9) * t166;
t261 = pkin(1) * t297;
t107 = -pkin(8) * t295 + t173 * t261;
t92 = -t297 * pkin(2) - t107;
t46 = t100 * pkin(3) - pkin(10) * t194 + t92;
t108 = pkin(8) * t294 + t170 * t261;
t93 = t297 * pkin(9) + t108;
t94 = (-pkin(2) * t173 - pkin(9) * t170 - pkin(1)) * t166;
t57 = t169 * t94 + t172 * t93;
t48 = -pkin(10) * t294 + t57;
t21 = t168 * t46 + t171 * t48;
t296 = qJ(5) * t171;
t213 = qJ(6) * t168 - t296;
t273 = qJD(6) * t168;
t38 = t213 * t278 + (t273 + (qJ(6) * qJD(4) - qJD(5)) * t171) * t169 + t239;
t307 = t168 * t38;
t305 = t171 * t38;
t300 = t63 * t172;
t299 = t64 * t169;
t98 = t108 * qJD(2);
t298 = t98 * t172;
t292 = t168 * t169;
t291 = t168 * t172;
t290 = t169 * t171;
t289 = t171 * t172;
t287 = pkin(4) * t292 + t169 * pkin(9);
t148 = pkin(9) * t289;
t90 = t168 * t124 + t148;
t284 = qJ(5) * qJD(5);
t283 = qJD(2) * t166;
t277 = qJD(3) * t173;
t274 = qJD(6) * t100;
t272 = qJD(6) * t172;
t271 = t168 * qJD(5);
t270 = t172 * qJD(5);
t25 = 0.2e1 * t65 * t35;
t26 = 0.2e1 * t66 * t36;
t269 = -0.2e1 * pkin(2) * qJD(3);
t268 = -0.2e1 * pkin(3) * qJD(4);
t58 = 0.2e1 * t100 * t63;
t242 = qJD(2) * t297;
t234 = t173 * t242;
t97 = -pkin(1) * t234 + pkin(8) * t250;
t267 = -t94 * t158 + t169 * t97 - t93 * t278;
t266 = pkin(5) * t289;
t147 = pkin(9) * t291;
t265 = 0.2e1 * t308;
t264 = pkin(4) * t158;
t263 = pkin(10) * t156;
t161 = t166 ^ 2;
t259 = t161 * t281;
t257 = qJ(5) * t158;
t109 = -pkin(3) + t212;
t256 = t109 * t157;
t247 = t168 * t157;
t246 = t169 * t278;
t245 = t171 * t278;
t20 = -t168 * t48 + t171 * t46;
t56 = -t169 * t93 + t172 * t94;
t177 = t63 * pkin(3) - t64 * pkin(10) + t98;
t233 = pkin(2) * t170 - pkin(9) * t173;
t197 = t233 * t283;
t30 = t93 * t158 - t169 * t197 + t172 * t97 - t94 * t278;
t187 = pkin(10) * t250 - t30;
t243 = t46 * t156 + t48 * t157 + t168 * t187 - t171 * t177;
t89 = t124 * t171 - t147;
t240 = 0.2e1 * t246;
t238 = pkin(9) * t104 + t124 * t156 - t171 * t202;
t237 = t163 * t247;
t236 = t170 * t259;
t235 = t168 * t245;
t18 = -qJ(5) * t100 - t21;
t47 = pkin(3) * t294 - t56;
t75 = qJ(5) * t172 - t90;
t227 = t100 * t35 + t63 * t65;
t226 = t100 * t36 + t63 * t66;
t11 = t66 * pkin(5) - t308 * t100 - t20;
t12 = -pkin(5) * t65 - t18;
t223 = t11 * t171 - t12 * t168;
t19 = -pkin(4) * t100 - t20;
t222 = t168 * t18 + t171 * t19;
t221 = -t168 * t21 - t171 * t20;
t160 = t172 * pkin(4);
t77 = t160 - t89;
t216 = t168 * t75 + t171 * t77;
t215 = -t168 * t90 - t171 * t89;
t214 = -qJ(5) * t35 - qJD(5) * t65;
t211 = -t171 * qJD(6) - t271;
t210 = -pkin(5) * t36 - t243;
t198 = -t66 * qJ(5) + t47;
t17 = t308 * t65 + t198;
t29 = (-t170 * pkin(3) - t172 * t233) * t283 - t267;
t176 = -t36 * qJ(5) - t66 * qJD(5) + t29;
t3 = t65 * qJD(6) + t308 * t35 + t176;
t209 = t17 * t157 + t168 * t3;
t208 = t17 * t156 - t171 * t3;
t22 = pkin(4) * t65 + t198;
t8 = t35 * pkin(4) + t176;
t207 = -t22 * t157 - t8 * t168;
t206 = -t22 * t156 + t8 * t171;
t205 = t47 * t157 + t29 * t168;
t204 = t47 * t156 - t29 * t171;
t23 = t65 * t156 - t303;
t24 = t66 * t157 + t302;
t51 = t100 * t158 - t300;
t151 = pkin(4) * t156;
t70 = qJD(4) * t213 + t151 + t211;
t203 = t109 * t156 - t171 * t70;
t6 = t48 * t156 - t46 * t157 - t168 * t177 - t171 * t187;
t71 = t169 * t213 + t287;
t201 = -qJD(4) * t71 - t109 * t278;
t196 = t169 * t277 + t172 * t282;
t195 = t169 * t282 - t172 * t277;
t4 = t6 - t323;
t193 = -pkin(5) * t35 - t6;
t192 = -pkin(5) * t254 + t238;
t5 = t243 - t312;
t186 = t222 * qJD(4) + t5 * t168 - t4 * t171;
t185 = t221 * qJD(4) + t168 * t243 - t6 * t171;
t31 = t172 * t197 + t267;
t183 = -t31 * t169 - t30 * t172 + (-t57 * t169 - t56 * t172) * qJD(3);
t43 = -t257 + t54 + t270;
t52 = t238 - t264;
t182 = qJD(4) * t216 + t52 * t168 - t43 * t171;
t181 = qJD(4) * t215 + t168 * t238 - t54 * t171;
t95 = -qJ(5) * t290 + t287;
t99 = -qJ(5) * t157 + t151 - t271;
t180 = -qJD(4) * t95 - t169 * t99 + (-t118 * t172 + t310) * qJD(3);
t13 = t65 * t252 + (t169 * t35 + t65 * t278) * t168;
t14 = t66 * t245 + (-t66 * t156 + t301) * t169;
t179 = (t302 - t303 + (t304 + t306) * qJD(4)) * pkin(10);
t178 = 0.2e1 * t257 - 0.2e1 * t270 - t54;
t174 = 0.2e1 * qJD(5);
t152 = pkin(10) * t157;
t137 = -0.2e1 * t246;
t136 = -0.2e1 * t247;
t135 = 0.2e1 * t247;
t127 = t313 * t171;
t126 = t313 * t168;
t116 = -0.2e1 * t236;
t115 = pkin(5) * t157 + t152;
t114 = t313 * t156;
t113 = -0.2e1 * t123;
t101 = -t245 + t254;
t82 = 0.2e1 * t164 * t246 - 0.2e1 * t237;
t81 = 0.2e1 * t162 * t246 + 0.2e1 * t237;
t76 = t276 * t286 - t235;
t73 = t169 * t253 + t285 * t279;
t72 = 0.4e1 * t169 * t247 + t278 * t286;
t68 = 0.2e1 * t73;
t67 = t123 * t163 - 0.2e1 * t169 * t235;
t62 = 0.2e1 * t67;
t60 = -pkin(5) * t292 - t75;
t59 = t172 * qJ(6) + t147 + t160 + (pkin(5) * t169 - t124) * t171;
t37 = -t270 + (-pkin(5) * t290 - t147) * qJD(4) + (-pkin(5) * t291 + (-pkin(9) * t171 + qJ(5)) * t169) * qJD(3) + t288;
t34 = t272 + (-t308 * t169 + t266) * qJD(3) + t192;
t16 = 0.2e1 * t227;
t15 = 0.2e1 * t226;
t2 = t193 + t323;
t1 = -t308 * t63 - t210 - t274;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t236, 0.2e1 * (-t170 ^ 2 + t173 ^ 2) * t161 * qJD(2), t234 * t314, t116, -0.2e1 * t242 * t295, 0, -0.2e1 * t161 * pkin(1) * t282 - 0.2e1 * t98 * t297, -0.2e1 * pkin(1) * t259 + 0.2e1 * t97 * t297 (t170 * t98 - t173 * t97 + (-t107 * t173 - t108 * t170) * qJD(2)) * t314, -0.2e1 * t107 * t98 - 0.2e1 * t108 * t97, 0.2e1 * t194 * t64, -0.2e1 * t64 * t100 - 0.2e1 * t194 * t63, 0.2e1 * t194 * t250 - 0.2e1 * t64 * t294, t58 (-t100 * t282 + t173 * t63) * t314, t116, 0.2e1 * t98 * t100 + 0.2e1 * t92 * t63 + 0.2e1 * (-t173 * t31 + t56 * t282) * t166, 0.2e1 * t98 * t244 + 0.2e1 * t92 * t64 + 0.2e1 * (-t30 * t173 + (-qJD(2) * t57 + t298) * t170) * t166, 0.2e1 * t30 * t100 - 0.2e1 * t194 * t31 - 0.2e1 * t56 * t64 - 0.2e1 * t57 * t63, -0.2e1 * t30 * t57 + 0.2e1 * t31 * t56 + 0.2e1 * t92 * t98, t26, -t199, t15, t25, -0.2e1 * t227, t58, -0.2e1 * t100 * t243 + 0.2e1 * t20 * t63 + 0.2e1 * t29 * t65 + 0.2e1 * t35 * t47, 0.2e1 * t100 * t6 - 0.2e1 * t21 * t63 + 0.2e1 * t29 * t66 + 0.2e1 * t36 * t47, -0.2e1 * t20 * t36 - 0.2e1 * t21 * t35 + 0.2e1 * t243 * t66 + 0.2e1 * t6 * t65, -0.2e1 * t20 * t243 - 0.2e1 * t21 * t6 + 0.2e1 * t29 * t47, t58, -0.2e1 * t226, t16, t26, -t199, t25, 0.2e1 * t18 * t35 + 0.2e1 * t19 * t36 + 0.2e1 * t4 * t65 + 0.2e1 * t5 * t66, 0.2e1 * t100 * t5 + 0.2e1 * t19 * t63 - 0.2e1 * t22 * t35 - 0.2e1 * t65 * t8, -0.2e1 * t100 * t4 - 0.2e1 * t18 * t63 - 0.2e1 * t22 * t36 - 0.2e1 * t66 * t8, 0.2e1 * t18 * t4 + 0.2e1 * t19 * t5 + 0.2e1 * t22 * t8, t58, t16, t15, t25, t199, t26, 0.2e1 * t1 * t66 + 0.2e1 * t11 * t36 - 0.2e1 * t12 * t35 - 0.2e1 * t2 * t65, 0.2e1 * t100 * t2 + 0.2e1 * t12 * t63 - 0.2e1 * t17 * t36 - 0.2e1 * t3 * t66, -0.2e1 * t1 * t100 - 0.2e1 * t11 * t63 + 0.2e1 * t17 * t35 + 0.2e1 * t3 * t65, 0.2e1 * t1 * t11 + 0.2e1 * t12 * t2 + 0.2e1 * t17 * t3; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t249, 0, -t250, 0, -t98, t97, 0, 0, t172 * t188 + t299, -t169 * t63 + t64 * t172 + (-t172 * t100 - t169 * t194) * qJD(3), t195 * t166, t51, t196 * t166, 0, -pkin(2) * t63 + t92 * t158 - t195 * t311 - t298, -pkin(2) * t64 + t98 * t169 - t196 * t311 + t92 * t278 (t299 - t300 + (t100 * t169 + t172 * t194) * qJD(3)) * pkin(9) + t183, -t98 * pkin(2) + pkin(9) * t183, t14, t175, -t315, t13, -t10, t51, -t100 * t238 + t63 * t89 + (t243 + (pkin(9) * t65 + t168 * t47) * qJD(3)) * t172 + (pkin(9) * t35 + qJD(3) * t20 + t205) * t169, t100 * t54 - t63 * t90 + (-t6 + (pkin(9) * t66 + t171 * t47) * qJD(3)) * t172 + (pkin(9) * t36 - qJD(3) * t21 - t204) * t169, -t35 * t90 - t36 * t89 + t54 * t65 + t238 * t66 + t221 * t278 + (t168 * t6 + t171 * t243 + (t168 * t20 - t171 * t21) * qJD(4)) * t169, -t20 * t238 - t21 * t54 - t6 * t90 - t243 * t89 + (t169 * t29 + t278 * t47) * pkin(9), t51, t315, t10, t14, t175, t13, t35 * t75 + t36 * t77 + t43 * t65 + t52 * t66 + t222 * t278 + (t168 * t4 + t171 * t5 + (-t168 * t19 + t171 * t18) * qJD(4)) * t169, t100 * t52 - t35 * t95 - t53 * t65 + t63 * t77 + (-t22 * t280 - t5) * t172 + (qJD(3) * t19 + t207) * t169, -t100 * t43 - t36 * t95 - t53 * t66 - t63 * t75 + (-t22 * t279 + t4) * t172 + (-qJD(3) * t18 - t206) * t169, t18 * t43 + t19 * t52 + t22 * t53 + t4 * t75 + t5 * t77 + t8 * t95, t51, t10, -t315, t13, -t175, t14, t34 * t66 - t35 * t60 + t36 * t59 - t37 * t65 + t223 * t278 + (t1 * t171 - t168 * t2 + (-t11 * t168 - t12 * t171) * qJD(4)) * t169, t100 * t37 - t36 * t71 - t38 * t66 + t60 * t63 + (-t17 * t279 - t2) * t172 + (qJD(3) * t12 + t208) * t169, -t100 * t34 + t35 * t71 + t38 * t65 - t59 * t63 + (t17 * t280 + t1) * t172 + (-qJD(3) * t11 + t209) * t169, t1 * t59 + t11 * t34 + t12 * t37 + t17 * t38 + t2 * t60 + t3 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t240, -0.2e1 * t241, 0, t137, 0, 0, t169 * t269, t172 * t269, 0, 0, t82, t62, t68, t81, t69, t137, 0.2e1 * t89 * t158 + 0.2e1 * t238 * t172 + 0.2e1 * (t157 * t163 + t168 * t240) * pkin(9), -0.2e1 * t90 * t158 - 0.2e1 * t54 * t172 + 0.2e1 * (-t156 * t163 + t171 * t240) * pkin(9), 0.2e1 * t215 * t278 + 0.2e1 * (t168 * t54 + t171 * t238 + (t168 * t89 - t171 * t90) * qJD(4)) * t169, 0.2e1 * pkin(9) ^ 2 * t246 - 0.2e1 * t238 * t89 - 0.2e1 * t54 * t90, t137, -0.2e1 * t73, -t69, t82, t62, t81, 0.2e1 * t216 * t278 + 0.2e1 * (t168 * t43 + t171 * t52 + (-t168 * t77 + t171 * t75) * qJD(4)) * t169, 0.2e1 * (-t280 * t95 - t52) * t172 + 0.2e1 * (qJD(3) * t77 - t157 * t95 - t168 * t53) * t169, 0.2e1 * (-t279 * t95 + t43) * t172 + 0.2e1 * (-qJD(3) * t75 + t156 * t95 - t171 * t53) * t169, 0.2e1 * t43 * t75 + 0.2e1 * t52 * t77 + 0.2e1 * t53 * t95, t137, -t69, t68, t81, -0.2e1 * t67, t82, 0.2e1 * (-t168 * t60 + t171 * t59) * t278 + 0.2e1 * (-t168 * t37 + t171 * t34 + (-t168 * t59 - t171 * t60) * qJD(4)) * t169, 0.2e1 * (-t279 * t71 - t37) * t172 + 0.2e1 * (qJD(3) * t60 + t156 * t71 - t305) * t169, 0.2e1 * (t280 * t71 + t34) * t172 + 0.2e1 * (-qJD(3) * t59 + t157 * t71 + t307) * t169, 0.2e1 * t34 * t59 + 0.2e1 * t37 * t60 + 0.2e1 * t38 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t64, 0, -t63, t250, t31, t30, 0, 0, t24, -t316, t50, t23, -t49, 0, -pkin(3) * t35 + t204 - t324, -pkin(3) * t36 + t205 + t325, t179 + t185, -t29 * pkin(3) + pkin(10) * t185, 0, -t50, t49, t24, -t316, t23, t179 + t186, -t118 * t35 - t99 * t65 + t206 + t324, -t118 * t36 - t99 * t66 + t207 - t325, pkin(10) * t186 + t8 * t118 + t22 * t99, 0, t49, t50, t23, t316, t24, qJD(4) * t223 + t1 * t168 + t114 * t65 + t115 * t66 + t126 * t36 - t127 * t35 + t171 * t2, -t100 * t114 - t109 * t36 + t127 * t63 - t66 * t70 - t209, -t100 * t115 + t109 * t35 - t126 * t63 + t65 * t70 + t208, t1 * t126 + t109 * t3 + t11 * t115 - t114 * t12 + t127 * t2 + t17 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, 0, -t158, 0, -t153, pkin(9) * t158, 0, 0, -t76, -t72, -t104, t76, t102, 0 (pkin(10) * t289 + (-pkin(3) * t171 + pkin(9) * t168) * t169) * qJD(4) + (t168 * t232 - t148) * qJD(3) (pkin(9) * t290 + t168 * t231) * qJD(4) + (t171 * t232 + t147) * qJD(3), t181, -pkin(3) * t153 + pkin(10) * t181, 0, t104, -t102, -t76, -t72, t76, t182, t180 * t168 - t171 * t318, t168 * t318 + t180 * t171, pkin(10) * t182 + t53 * t118 + t95 * t99, 0, -t102, -t104, t76, t72, -t76 (t126 * t278 + t115 * t169 + t37 + (-t127 * t169 + t59) * qJD(4)) * t171 + (-t127 * t278 + t114 * t169 + t34 + (-t126 * t169 - t60) * qJD(4)) * t168, t114 * t172 - t307 + t201 * t171 + (qJD(3) * t127 + t203) * t169, t115 * t172 - t305 + (-qJD(3) * t126 + t256) * t169 + (t169 * t70 - t201) * t168, t109 * t38 - t114 * t60 + t115 * t59 + t126 * t34 + t127 * t37 + t70 * t71; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, t113, 0, t136, 0, 0, t168 * t268, t171 * t268, 0, 0, 0, 0, 0, t135, t113, t136, 0, -0.2e1 * t118 * t156 + 0.2e1 * t171 * t99, -0.2e1 * t118 * t157 - 0.2e1 * t168 * t99, 0.2e1 * t118 * t99, 0, 0, 0, t136, 0.2e1 * t123, t135, -0.2e1 * t114 * t171 + 0.2e1 * t115 * t168 + 0.2e1 * (t126 * t171 - t127 * t168) * qJD(4), -0.2e1 * t168 * t70 - 0.2e1 * t256, 0.2e1 * t203, 0.2e1 * t109 * t70 - 0.2e1 * t114 * t127 + 0.2e1 * t115 * t126; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, -t35, t63, -t243, t6, 0, 0, t63, -t36, t35, 0, 0, 0, -pkin(4) * t36 + t214, t243 - 0.2e1 * t312, -t4 + t323, -pkin(4) * t5 - qJ(5) * t4 - qJD(5) * t18, t63, t35, t36, 0, 0, 0, -qJD(6) * t66 - t308 * t36 + t214, t193 + 0.2e1 * t61 + 0.2e1 * t96, t265 * t63 + t210 + 0.2e1 * t274, qJ(5) * t2 + qJD(5) * t12 - qJD(6) * t11 - t1 * t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, 0, -t103, t158, -t238, t54, 0, 0, t158, t101, t103, 0, 0, 0 (-pkin(4) * t278 - qJ(5) * t276) * t171 + (-t260 + (pkin(4) * qJD(4) - qJD(5)) * t169) * t168, t238 - 0.2e1 * t264, t178, -pkin(4) * t52 - qJ(5) * t43 - qJD(5) * t75, t158, t103, -t101, 0, 0, 0, t212 * t278 + ((t168 * t308 - t296) * qJD(4) + t211) * t169, -pkin(5) * t103 + t178, -0.2e1 * t272 + (t169 * t265 - t266) * qJD(3) - t192, qJ(5) * t37 + qJD(5) * t60 - qJD(6) * t59 - t308 * t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, 0, -t156, 0, -t152, t263, 0, 0, 0, -t157, t156, 0, 0, 0, t320, t152, -t263, t320 * pkin(10), 0, t156, t157, 0, 0, 0, qJD(4) * t212 + t155 - t273, -t114, -t115, -qJ(5) * t114 + qJD(5) * t127 - qJD(6) * t126 - t115 * t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t174, 0.2e1 * t284, 0, 0, 0, 0, 0, 0, 0, t174, 0.2e1 * qJD(6), 0.2e1 * qJD(6) * t308 + 0.2e1 * t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, t63, 0, t5, 0, 0, 0, 0, 0, 0, t36, 0, -t63, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t101, t158, 0, t52, 0, 0, 0, 0, 0, 0, -t101, 0, -t158, t34; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, 0, 0, t152, 0, 0, 0, 0, 0, 0, t157, 0, 0, t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, t63, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t103, t158, 0, t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t156, 0, 0, -t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t7;
