% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRPP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:51
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPP9_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP9_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP9_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPP9_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPP9_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPP9_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:49:56
% EndTime: 2019-03-09 21:50:26
% DurationCPUTime: 16.84s
% Computational Cost: add. (17821->931), mult. (43925->1115), div. (0->0), fcn. (34702->10), ass. (0->396)
t325 = sin(pkin(6));
t328 = sin(qJ(3));
t329 = sin(qJ(2));
t331 = cos(qJ(3));
t536 = cos(pkin(6));
t453 = t536 * qJD(1);
t399 = t453 + qJD(2);
t377 = qJD(3) * t399;
t444 = t536 * qJDD(1);
t394 = t444 + qJDD(2);
t332 = cos(qJ(2));
t497 = qJD(2) * t332;
t467 = t328 * t497;
t489 = qJDD(1) * t329;
t494 = qJD(3) * t331;
t112 = t325 * (qJD(1) * (t329 * t494 + t467) + t328 * t489) + t328 * t377 - t331 * t394;
t106 = qJDD(4) + t112;
t499 = qJD(1) * t325;
t470 = t329 * t499;
t215 = t328 * t399 + t331 * t470;
t327 = sin(qJ(4));
t330 = cos(qJ(4));
t304 = t332 * t499;
t410 = t304 - qJD(3);
t159 = t215 * t327 + t330 * t410;
t161 = t330 * t215 - t327 * t410;
t529 = t159 * t161;
t606 = t106 - t529;
t474 = pkin(1) * t536;
t312 = t329 * t474;
t423 = pkin(3) * t328 - pkin(10) * t331;
t515 = t325 * t332;
t605 = (t312 + (pkin(8) + t423) * t515) * qJD(1) - t423 * qJD(3);
t510 = t330 * t332;
t217 = (t327 * t329 + t331 * t510) * t325;
t202 = qJD(1) * t217;
t492 = qJD(4) * t327;
t464 = t328 * t492;
t604 = t202 + t464;
t516 = t325 * t329;
t585 = -pkin(8) * t516 + t332 * t474;
t233 = -pkin(2) * t536 - t585;
t191 = -qJD(2) * pkin(2) + qJD(1) * t233;
t434 = t328 * t470;
t213 = -t331 * t399 + t434;
t339 = t213 * pkin(3) - t215 * pkin(10) + t191;
t490 = qJD(1) * qJD(2);
t459 = t329 * t490;
t430 = t325 * t459;
t488 = qJDD(1) * t332;
t303 = t325 * t488;
t486 = qJDD(3) - t303;
t376 = t430 + t486;
t395 = pkin(1) * qJD(2) * t453;
t429 = pkin(1) * t444;
t476 = pkin(8) * t303 + t329 * t429 + t332 * t395;
t163 = -pkin(8) * t430 + t476;
t139 = pkin(9) * t394 + t163;
t424 = pkin(2) * t329 - pkin(9) * t332;
t391 = t424 * qJD(2);
t397 = -pkin(2) * t332 - pkin(9) * t329 - pkin(1);
t146 = (qJD(1) * t391 + qJDD(1) * t397) * t325;
t503 = pkin(8) * t515 + t312;
t234 = t536 * pkin(9) + t503;
t192 = qJD(2) * pkin(9) + qJD(1) * t234;
t203 = t397 * t499;
t496 = qJD(3) * t328;
t383 = -t331 * t139 - t328 * t146 + t192 * t496 - t203 * t494;
t603 = -pkin(10) * t376 - qJD(4) * t339 + t383;
t242 = t585 * qJD(1);
t243 = t424 * t499;
t149 = t331 * t242 + t328 * t243;
t126 = pkin(10) * t470 + t149;
t564 = pkin(3) * t331;
t280 = -pkin(10) * t328 - pkin(2) - t564;
t491 = qJD(4) * t330;
t602 = -t330 * t126 + t280 * t491 - t327 * t605;
t558 = pkin(4) + qJ(6);
t461 = t558 * t106;
t458 = t332 * t490;
t384 = t458 + t489;
t343 = t325 * t384 + t377;
t366 = qJD(3) * t434 - t328 * t394;
t584 = t343 * t331 - t366;
t601 = -qJD(4) * t410 + t584;
t246 = t585 * qJD(2);
t205 = qJD(4) + t213;
t111 = t331 * t192 + t328 * t203;
t99 = -pkin(10) * t410 + t111;
t52 = t327 * t99 - t330 * t339;
t393 = pkin(5) * t161 + t52;
t508 = qJD(5) + t393;
t566 = cos(qJ(1));
t427 = t536 * t566;
t565 = sin(qJ(1));
t257 = t329 * t427 + t332 * t565;
t473 = t325 * t566;
t183 = t257 * t331 - t328 * t473;
t256 = t329 * t565 - t332 * t427;
t127 = t183 * t327 - t256 * t330;
t128 = t183 * t330 + t256 * t327;
t432 = t331 * t304;
t201 = t327 * t432 - t330 * t470;
t212 = t330 * t376;
t493 = qJD(4) * t161;
t65 = t327 * t584 - t212 + t493;
t548 = t330 * t65;
t64 = t215 * t492 - t327 * t376 - t330 * t601;
t549 = t327 * t64;
t334 = t328 * (qJD(4) * (t159 * t327 - t161 * t330) - t548 + t549) - (t159 * t330 + t161 * t327) * t494 + t159 * t202 + t161 * t201;
t466 = t327 * t494;
t415 = -t201 + t466;
t531 = t106 * t327;
t600 = -t415 * t205 + t328 * (t159 * t410 - t205 * t491 - t531) + t331 * t65;
t414 = t330 * t494 - t202;
t530 = t106 * t330;
t599 = -t414 * t205 + t328 * (t161 * t410 + t205 * t492 - t530) - t331 * t64;
t446 = t161 * t205;
t528 = t159 * t205;
t598 = (t65 + t446) * t327 + (t64 + t528) * t330;
t322 = t325 ^ 2;
t597 = 0.2e1 * t322;
t495 = qJD(3) * t330;
t596 = pkin(9) * (t328 * t495 + t331 * t492);
t595 = pkin(9) * t376;
t433 = t328 * t304;
t594 = -qJ(5) * t433 - qJD(5) * t331 + t602;
t511 = t330 * t331;
t315 = pkin(9) * t511;
t593 = qJD(4) * t315 - t327 * t126 + t280 * t492 + t330 * t605;
t590 = t215 * t410;
t102 = t106 * qJ(5);
t197 = t205 * qJD(5);
t589 = -t102 - t197;
t485 = pkin(9) * t496;
t588 = t149 + t485;
t157 = t159 ^ 2;
t158 = t161 ^ 2;
t462 = -t158 + t157;
t204 = t205 ^ 2;
t587 = -t158 - t204;
t254 = t328 * t516 - t331 * t536;
t468 = t325 * t497;
t179 = -qJD(3) * t254 + t331 * t468;
t586 = -qJD(4) * t515 + t179;
t583 = (qJDD(2) + 0.2e1 * t444) * t325;
t582 = t432 - t494;
t581 = t433 - t496;
t148 = -t328 * t242 + t243 * t331;
t125 = -pkin(3) * t470 - t148;
t318 = pkin(9) * t494;
t463 = t328 * t491;
t580 = -t125 + t318 + (t463 + t466) * pkin(4) + t604 * qJ(5);
t524 = t213 * t327;
t579 = -qJD(5) * t327 - t111 + (t492 + t524) * pkin(4);
t247 = t503 * qJD(2);
t578 = -pkin(5) * t65 + qJDD(6);
t570 = 0.2e1 * t102;
t333 = qJD(1) ^ 2;
t569 = pkin(5) + pkin(10);
t568 = pkin(5) * t64;
t563 = pkin(4) * t106;
t562 = pkin(10) * t106;
t426 = t536 * t565;
t259 = -t329 * t426 + t332 * t566;
t472 = t325 * t565;
t186 = t259 * t328 - t331 * t472;
t561 = pkin(10) * t186;
t560 = t159 * pkin(5);
t449 = -t257 * t328 - t331 * t473;
t559 = t449 * pkin(10);
t319 = t328 * pkin(9);
t475 = -pkin(9) * t327 - pkin(4);
t557 = t558 * t433 + qJD(6) * t331 + (-qJ(6) + t475) * t496 + t593 + (t511 * qJD(3) - t604) * pkin(5);
t513 = t327 * t331;
t314 = pkin(9) * t513;
t512 = t328 * t330;
t556 = pkin(5) * t201 + (-pkin(5) * t512 - t314) * qJD(4) + (-pkin(5) * t513 + (-pkin(9) * t330 + qJ(5)) * t328) * qJD(3) + t594;
t533 = qJ(5) * t330;
t406 = -qJ(6) * t327 + t533;
t555 = -t558 * t201 - t406 * t494 + (qJD(6) * t327 + (qJ(6) * qJD(4) - qJD(5)) * t330) * t328 + t580;
t554 = qJ(5) * t65;
t25 = -t205 * t558 + t508;
t553 = t205 * t25;
t53 = t327 * t339 + t330 * t99;
t43 = -t205 * qJ(5) - t53;
t552 = t205 * t43;
t551 = t205 * t52;
t550 = t205 * t53;
t545 = -qJ(5) * t496 - t594 + t596;
t544 = pkin(4) * t433 + t475 * t496 + t593;
t543 = -pkin(4) * t201 + (-qJ(5) * t494 - qJD(5) * t328) * t330 + t580;
t542 = -t596 + t602;
t541 = t327 * t485 - t593;
t540 = -qJD(6) * t330 - t205 * t406 + t579;
t539 = -qJ(5) * t491 - t213 * t533 + t579;
t110 = -t328 * t192 + t331 * t203;
t143 = pkin(3) * t215 + pkin(10) * t213;
t72 = t330 * t110 + t327 * t143;
t58 = -qJ(5) * t215 - t72;
t538 = -pkin(5) * t524 - t569 * t492 + t58;
t100 = t327 * t110;
t287 = t569 * t330;
t537 = qJD(4) * t287 - t100 - (-pkin(5) * t213 - t143) * t330 + t558 * t215;
t535 = qJ(5) * t159;
t534 = qJ(5) * t327;
t255 = t328 * t536 + t331 * t516;
t180 = t255 * t327 + t325 * t510;
t532 = qJ(6) * t180;
t527 = t449 * t330;
t526 = t186 * t330;
t525 = t205 * t215;
t523 = t215 * t213;
t522 = t254 * t330;
t520 = t256 * t328;
t258 = t329 * t566 + t332 * t426;
t518 = t258 * t328;
t517 = t322 * t333;
t514 = t327 * t328;
t509 = t331 * t112;
t507 = qJD(5) + t52;
t33 = t53 - t560;
t506 = -qJD(6) - t33;
t248 = t254 * pkin(3);
t117 = -t255 * pkin(10) + t233 + t248;
t504 = pkin(2) * t515 + pkin(9) * t516;
t235 = -pkin(1) * t325 - t504;
t145 = t331 * t234 + t328 * t235;
t119 = -pkin(10) * t515 + t145;
t69 = t327 * t117 + t330 * t119;
t502 = pkin(4) * t514 + t319;
t225 = t327 * t280 + t315;
t501 = t566 * pkin(1) + pkin(8) * t472;
t323 = t329 ^ 2;
t324 = t332 ^ 2;
t500 = t323 - t324;
t498 = qJD(2) * t329;
t308 = pkin(3) * t515;
t484 = t332 * t517;
t483 = t328 * t515;
t482 = t327 * t515;
t173 = t449 * pkin(3);
t481 = pkin(4) * t527 + t449 * t534 + t173;
t175 = t186 * pkin(3);
t480 = -pkin(4) * t526 - t186 * t534 - t175;
t479 = -pkin(4) * t522 - t254 * t534 - t248;
t249 = t256 * pkin(2);
t478 = -pkin(10) * t520 - t256 * t564 - t249;
t251 = t258 * pkin(2);
t477 = -pkin(10) * t518 - t258 * t564 - t251;
t469 = t325 * t498;
t460 = pkin(1) * t597;
t457 = t325 * t489;
t455 = -pkin(3) - t534;
t438 = t329 * t395 - t332 * t429 + (t325 * t458 + t457) * pkin(8);
t140 = -pkin(2) * t394 + t438;
t46 = t112 * pkin(3) - pkin(10) * t584 + t140;
t454 = -t327 * t46 + t330 * t603 + t99 * t492;
t7 = t327 * t603 + t330 * t46 - t99 * t491;
t452 = -t127 * pkin(4) + qJ(5) * t128;
t187 = t259 * t331 + t328 * t472;
t131 = t187 * t327 - t258 * t330;
t132 = t187 * t330 + t258 * t327;
t451 = -t131 * pkin(4) + qJ(5) * t132;
t181 = t255 * t330 - t482;
t450 = -t180 * pkin(4) + qJ(5) * t181;
t71 = t143 * t330 - t100;
t68 = t117 * t330 - t327 * t119;
t144 = -t328 * t234 + t235 * t331;
t224 = t280 * t330 - t314;
t448 = t332 * t410;
t447 = t205 * t330;
t445 = t205 * t327;
t442 = qJD(3) * t410;
t440 = t329 * t484;
t439 = t328 * t139 - t331 * t146 + t192 * t494 + t203 * t496;
t437 = pkin(10) * t483 + t331 * t308 + t504;
t431 = t329 * t458;
t428 = -pkin(1) * t565 + pkin(8) * t473;
t425 = t325 * t333 * t536;
t422 = -g(1) * t127 + g(2) * t131;
t421 = g(1) * t128 - g(2) * t132;
t420 = g(1) * t449 + g(2) * t186;
t419 = -g(1) * t256 + g(2) * t258;
t418 = g(1) * t259 + g(2) * t257;
t60 = -qJ(5) * t254 - t69;
t195 = qJ(5) * t331 - t225;
t118 = -t144 + t308;
t416 = -qJDD(5) + t7;
t412 = (qJD(4) * t159 - t64) * pkin(10);
t411 = (-t65 + t493) * pkin(10);
t92 = t255 * t491 + t327 * t586 - t330 * t469;
t24 = t159 * t92 + t180 * t65;
t93 = -t255 * t492 + t327 * t469 + t330 * t586;
t23 = t161 * t93 - t181 * t64;
t42 = -pkin(4) * t205 + t507;
t409 = t327 * t43 + t330 * t42;
t408 = -t327 * t53 + t330 * t52;
t405 = -t159 * t215 - t530;
t404 = t161 * t215 - t531;
t398 = 0.2e1 * t453 + qJD(2);
t396 = t259 * pkin(2) + pkin(9) * t258 + t501;
t244 = t325 * t391;
t83 = -t234 * t496 + t235 * t494 + t328 * t244 + t331 * t246;
t79 = pkin(10) * t469 + t83;
t178 = qJD(3) * t255 + t325 * t467;
t88 = t178 * pkin(3) - t179 * pkin(10) + t247;
t19 = -t117 * t492 - t119 * t491 - t327 * t79 + t330 * t88;
t4 = t454 + t589;
t84 = -t234 * t494 - t235 * t496 + t244 * t331 - t328 * t246;
t388 = t187 * pkin(3) + t396;
t387 = t328 * t410;
t98 = pkin(3) * t410 - t110;
t386 = t205 * t98 - t562;
t357 = -t161 * qJ(5) + t98;
t51 = t159 * pkin(4) + t357;
t385 = -t205 * t51 + t562;
t18 = t117 * t491 - t119 * t492 + t327 * t88 + t330 * t79;
t382 = g(1) * t566 + g(2) * t565;
t152 = -t256 * t513 - t257 * t330;
t154 = -t258 * t513 - t259 * t330;
t216 = -t330 * t516 + t331 * t482;
t381 = g(1) * t154 + g(2) * t152 + g(3) * t216;
t153 = -t256 * t511 + t257 * t327;
t155 = -t258 * t511 + t259 * t327;
t380 = -g(1) * t155 - g(2) * t153 - g(3) * t217;
t379 = g(1) * t186 - g(2) * t449 + g(3) * t254;
t378 = -g(1) * t187 - g(2) * t183 - g(3) * t255;
t41 = -pkin(3) * t376 + t439;
t340 = t64 * qJ(5) - t161 * qJD(5) + t41;
t3 = t159 * qJD(6) + t558 * t65 + t340;
t373 = -t3 + t379;
t372 = t217 * pkin(4) + qJ(5) * t216 + t437;
t26 = t330 * t446 - t549;
t27 = t159 * t445 - t548;
t371 = -t257 * pkin(2) - t256 * pkin(9) + t428;
t370 = g(1) * t258 + g(2) * t256 - g(3) * t515;
t70 = t118 - t450;
t365 = -pkin(3) * t183 + t371;
t364 = t153 * pkin(4) + pkin(9) * t257 + qJ(5) * t152 + t478;
t363 = t155 * pkin(4) + pkin(9) * t259 + qJ(5) * t154 + t477;
t362 = t64 - t528;
t361 = t328 * t439 - t331 * t383 - t418;
t359 = t159 * t93 + t161 * t92 - t180 * t64 + t181 * t65;
t358 = t132 * pkin(4) + qJ(5) * t131 + t388;
t12 = t106 * t180 + t159 * t178 + t205 * t92 + t254 * t65;
t11 = t106 * t181 + t161 * t178 + t205 * t93 - t254 * t64;
t80 = -pkin(3) * t469 - t84;
t356 = pkin(10) * qJD(4) * t205 - t379;
t355 = g(1) * t131 + g(2) * t127 + g(3) * t180 + t7;
t354 = g(1) * t132 + g(2) * t128 + g(3) * t181 + t454;
t8 = t65 * pkin(4) + t340;
t352 = t356 + t8;
t351 = t356 + t41;
t350 = -qJDD(5) + t355;
t16 = -qJ(5) * t178 - qJD(5) * t254 - t18;
t349 = -pkin(4) * t128 - qJ(5) * t127 + t365;
t21 = t65 * t514 + (t415 + t463) * t159;
t20 = -t64 * t512 + (t414 - t464) * t161;
t348 = t161 * t51 - t350;
t346 = -qJ(5) * t93 - qJD(5) * t181 + t80;
t31 = t159 * t558 + t357;
t345 = t161 * t31 - t350 - t568;
t344 = -t159 * t31 - t354 + t578;
t35 = t215 * t491 + t327 * t601 - t212 - t446;
t320 = t331 * pkin(4);
t286 = t569 * t327;
t275 = -pkin(4) * t330 + t455;
t263 = -t330 * t558 + t455;
t245 = t503 * qJD(1);
t236 = -qJ(5) * t512 + t502;
t196 = -t224 + t320;
t193 = -t328 * t406 + t502;
t170 = -pkin(5) * t514 - t195;
t165 = qJ(6) * t331 + t314 + t320 + (pkin(5) * t328 - t280) * t330;
t86 = pkin(4) * t161 + t535;
t67 = t161 * t558 + t535;
t66 = -t106 * t331 - t205 * t387;
t63 = t106 * t254 + t178 * t205;
t61 = -pkin(4) * t254 - t68;
t59 = -pkin(4) * t215 - t71;
t55 = t70 + t532;
t47 = -pkin(5) * t180 - t60;
t39 = pkin(5) * t181 - t254 * t558 - t68;
t30 = t204 * t330 - t404;
t29 = t205 * t445 + t405;
t28 = qJD(6) - t43 - t560;
t22 = pkin(4) * t92 + t346;
t17 = -pkin(4) * t178 - t19;
t15 = qJD(6) * t180 + t558 * t92 + t346;
t10 = -pkin(5) * t92 - t16;
t9 = pkin(5) * t93 - qJD(6) * t254 - t178 * t558 - t19;
t5 = -t416 - t563;
t2 = -t4 + t578;
t1 = -qJD(6) * t205 - t416 - t461 - t568;
t6 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t565 - g(2) * t566, t382, 0, 0 (qJDD(1) * t323 + 0.2e1 * t431) * t322 (t329 * t488 - t490 * t500) * t597, t329 * t583 + t398 * t468 (qJDD(1) * t324 - 0.2e1 * t431) * t322, t332 * t583 - t398 * t469, t394 * t536, -t247 * t399 + t585 * t394 - t438 * t536 + g(1) * t257 - g(2) * t259 + (-t459 + t488) * t460, -t163 * t536 - t246 * t399 - t384 * t460 - t394 * t503 + t419 ((-t242 * qJD(2) + qJDD(1) * t503 + t163) * t332 + (-qJD(2) * t245 - qJDD(1) * t585 + t438) * t329 - t382) * t325, t322 * qJDD(1) * pkin(1) ^ 2 - g(1) * t428 - g(2) * t501 + t163 * t503 - t242 * t247 + t245 * t246 - t438 * t585, t215 * t179 + t255 * t584, -t255 * t112 - t215 * t178 - t179 * t213 - t254 * t584, -t179 * t410 + t255 * t486 + ((qJD(1) * t255 + t215) * t498 - t584 * t332) * t325, t112 * t254 + t178 * t213, t178 * t410 - t254 * t486 + (t112 * t332 + (-qJD(1) * t254 - t213) * t498) * t325 (-t486 * t332 + (-t304 - t410) * t498) * t325, -t84 * t410 + t144 * t486 + t247 * t213 + t233 * t112 + t140 * t254 + t191 * t178 + g(1) * t183 - g(2) * t187 + (t439 * t332 + (qJD(1) * t144 + t110) * t498) * t325, -t111 * t469 + t140 * t255 - t145 * t376 + t191 * t179 + t247 * t215 + t233 * t584 - t383 * t515 + t410 * t83 + t420, -t110 * t179 - t111 * t178 - t145 * t112 - t144 * t584 - t83 * t213 - t84 * t215 + t254 * t383 + t255 * t439 - t419, -g(1) * t371 - g(2) * t396 + t110 * t84 + t111 * t83 + t140 * t233 - t144 * t439 - t145 * t383 + t191 * t247, t23, -t359, t11, t24, -t12, t63, t106 * t68 + t118 * t65 + t159 * t80 - t178 * t52 + t180 * t41 + t19 * t205 + t254 * t7 + t92 * t98 + t421, -t106 * t69 - t118 * t64 + t161 * t80 - t178 * t53 - t18 * t205 + t181 * t41 + t254 * t454 + t93 * t98 + t422, -t159 * t18 - t161 * t19 + t180 * t454 - t181 * t7 + t52 * t93 - t53 * t92 + t64 * t68 - t65 * t69 - t420, -t454 * t69 + t53 * t18 + t7 * t68 - t52 * t19 + t41 * t118 + t98 * t80 - g(1) * (t365 + t559) - g(2) * (t388 + t561) t63, -t11, t12, t23, -t359, t24, t159 * t16 + t161 * t17 + t180 * t4 + t181 * t5 + t42 * t93 + t43 * t92 + t60 * t65 - t61 * t64 - t420, t106 * t61 - t159 * t22 + t17 * t205 + t178 * t42 - t180 * t8 + t254 * t5 - t51 * t92 - t65 * t70 - t421, -t106 * t60 - t16 * t205 - t161 * t22 - t178 * t43 - t181 * t8 - t254 * t4 - t51 * t93 + t64 * t70 - t422, t8 * t70 + t51 * t22 + t4 * t60 + t43 * t16 + t5 * t61 + t42 * t17 - g(1) * (t349 + t559) - g(2) * (t358 + t561) t63, t12, t11, t24, t359, t23, t1 * t181 - t10 * t159 + t161 * t9 - t180 * t2 + t25 * t93 - t28 * t92 - t39 * t64 - t47 * t65 - t420, t10 * t205 + t106 * t47 - t15 * t161 + t178 * t28 - t181 * t3 + t2 * t254 - t31 * t93 + t55 * t64 - t422, -t1 * t254 - t106 * t39 + t15 * t159 - t178 * t25 + t180 * t3 - t205 * t9 + t31 * t92 + t55 * t65 + t421, t3 * t55 + t31 * t15 + t1 * t39 + t25 * t9 + t2 * t47 + t28 * t10 - g(1) * (-qJ(6) * t128 + t449 * t569 + t349) - g(2) * (qJ(6) * t132 + t186 * t569 + t358); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t440, t500 * t517, -t332 * t425 + t457, t440, t329 * t425 + t303, t394, pkin(1) * t329 * t517 + t245 * t399 + t370 - t438, pkin(1) * t484 + t242 * t399 + (pkin(8) * t490 + g(3)) * t516 + t418 - t476, 0, 0, -t366 * t328 + (t328 * t343 - t590) * t331, -t328 * t112 + t213 * t582 + t215 * t581 + t331 * t584, -t331 * t442 + t328 * t486 + (t331 * t448 + (qJD(2) * t328 - t215) * t329) * t499, -t213 * t387 - t509, t328 * t442 + t331 * t486 + (-t328 * t448 + (qJD(2) * t331 + t213) * t329) * t499, t410 * t470, -pkin(2) * t112 + t148 * t410 - t110 * t470 - t245 * t213 + (-t191 * t410 - t595) * t328 + (pkin(9) * t442 - t140 + t370) * t331, -pkin(2) * t584 - g(1) * t518 - g(2) * t520 + g(3) * t483 + t111 * t470 + t140 * t328 - t191 * t582 - t245 * t215 - t331 * t595 - t410 * t588, -pkin(9) * t509 - g(3) * t516 + t584 * t319 + t361 + (t148 + t318) * t215 + t588 * t213 + t581 * t111 + t582 * t110, -t140 * pkin(2) - t111 * t149 - t110 * t148 - t191 * t245 + g(1) * t251 + g(2) * t249 - g(3) * t504 + ((-t110 * t331 - t111 * t328) * qJD(3) + t361) * pkin(9), t20, t334, -t599, t21, t600, t66, t106 * t224 - t125 * t159 - t201 * t98 + t541 * t205 + (-t7 + (pkin(9) * t159 + t327 * t98) * qJD(3)) * t331 + (pkin(9) * t65 + t327 * t41 + t410 * t52 + t491 * t98) * t328 + t380, -t106 * t225 - t125 * t161 - t202 * t98 - t542 * t205 + (-t454 + (pkin(9) * t161 + t330 * t98) * qJD(3)) * t331 + (-pkin(9) * t64 + t330 * t41 + t410 * t53 - t492 * t98) * t328 + t381, t201 * t53 - t202 * t52 + t224 * t64 - t225 * t65 - t541 * t161 - t542 * t159 + t408 * t494 + (t327 * t454 - t330 * t7 + (-t327 * t52 - t330 * t53) * qJD(4) + t370) * t328, -t454 * t225 + t7 * t224 - t98 * t125 - g(1) * t477 - g(2) * t478 - g(3) * t437 + t542 * t53 - t541 * t52 + (t328 * t41 + t494 * t98 - t418) * pkin(9), t66, t599, -t600, t20, t334, t21, t195 * t65 - t196 * t64 - t201 * t43 - t202 * t42 + t544 * t161 + t545 * t159 + t409 * t494 + (t327 * t4 + t330 * t5 + (-t327 * t42 + t330 * t43) * qJD(4) + t370) * t328, t106 * t196 + t201 * t51 - t236 * t65 + (-qJD(3) * t327 * t51 - t5) * t331 + t544 * t205 - t543 * t159 + (-t327 * t8 - t410 * t42 - t491 * t51) * t328 - t380, -t106 * t195 + t202 * t51 + t236 * t64 + (-t495 * t51 + t4) * t331 - t545 * t205 - t543 * t161 + (-t330 * t8 + t410 * t43 + t492 * t51) * t328 - t381, -g(1) * t363 - g(2) * t364 - g(3) * t372 + t4 * t195 + t5 * t196 + t8 * t236 + t42 * t544 + t43 * t545 + t51 * t543, t66, -t600, -t599, t21, -t334, t20, -t165 * t64 - t170 * t65 + t201 * t28 - t202 * t25 + t557 * t161 - t556 * t159 + (t25 * t330 - t28 * t327) * t494 + (t1 * t330 - t2 * t327 + (-t25 * t327 - t28 * t330) * qJD(4) + t370) * t328, t106 * t170 + t193 * t64 - t2 * t331 - t414 * t31 + t556 * t205 - t555 * t161 + (-t28 * t410 - t3 * t330 + t31 * t492) * t328 - t381, t1 * t331 - t106 * t165 + t193 * t65 + t415 * t31 - t557 * t205 + t555 * t159 + (t25 * t410 + t3 * t327 + t31 * t491) * t328 + t380, t3 * t193 + t1 * t165 + t2 * t170 - g(1) * (-pkin(5) * t518 + qJ(6) * t155 + t363) - g(2) * (-pkin(5) * t520 + qJ(6) * t153 + t364) - g(3) * (pkin(5) * t483 + qJ(6) * t217 + t372) + t555 * t31 + t556 * t28 + t557 * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t523, -t213 ^ 2 + t215 ^ 2, -t213 * t410 + t584, -t523, -t112 - t590, t376, -t111 * t410 - t191 * t215 + t379 - t439, -t110 * t410 + t191 * t213 - t378 + t383, 0, 0, t26, -t598, t30, t27, -t204 * t327 - t405, -t525, -pkin(3) * t65 - t111 * t159 - t205 * t71 + t215 * t52 + t327 * t386 - t330 * t351, pkin(3) * t64 - t111 * t161 + t205 * t72 + t215 * t53 + t327 * t351 + t330 * t386, t159 * t72 + t161 * t71 + (t411 - t454 + t551) * t330 + (t412 - t7 - t550) * t327 + t378, -t41 * pkin(3) + g(1) * t175 - g(2) * t173 + g(3) * t248 - t98 * t111 + t52 * t71 - t53 * t72 + (qJD(4) * t408 - t7 * t327 - t330 * t454 + t378) * pkin(10), -t525, -t205 * t447 + t404, t29, t26, -t598, t27, -t159 * t58 - t161 * t59 + (t205 * t42 - t4 + t411) * t330 + (t412 + t5 + t552) * t327 + t378, -t159 * t539 - t205 * t59 - t215 * t42 - t275 * t65 + t327 * t385 + t330 * t352, -t161 * t539 + t205 * t58 + t215 * t43 + t275 * t64 - t327 * t352 + t330 * t385, t8 * t275 - t43 * t58 - t42 * t59 - g(1) * t480 - g(2) * t481 - g(3) * t479 + t539 * t51 + (qJD(4) * t409 + t5 * t327 - t4 * t330 + t378) * pkin(10), -t525, t29, t30, t27, t598, t26, -t286 * t64 - t287 * t65 + t537 * t161 - t538 * t159 + (t2 + t553) * t330 + (-t205 * t28 + t1) * t327 + t378, t106 * t287 - t161 * t540 + t205 * t538 - t215 * t28 + t263 * t64 - t31 * t447 + t327 * t373, -t106 * t286 + t159 * t540 - t205 * t537 + t215 * t25 + t263 * t65 + t31 * t445 + t330 * t373, t3 * t263 + t1 * t286 + t2 * t287 - g(1) * (-qJ(6) * t526 + t187 * t569 + t480) - g(2) * (qJ(6) * t527 + t183 * t569 + t481) - g(3) * (-qJ(6) * t522 + t255 * t569 + t479) + t540 * t31 + t538 * t28 + t537 * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t529, -t462, -t362, -t529, -t35, t106, -t161 * t98 + t355 + t550, t159 * t98 + t354 - t551, 0, 0, t106, t362, t35, t529, -t462, -t529, pkin(4) * t64 - t554 + (-t43 - t53) * t161 + (t42 - t507) * t159, t159 * t86 + t348 - t550 - 0.2e1 * t563, -t159 * t51 + t161 * t86 + t205 * t507 + t197 - t354 + t570, -t5 * pkin(4) - g(1) * t451 - g(2) * t452 - g(3) * t450 - t4 * qJ(5) - t42 * t53 - t43 * t507 - t51 * t86, t106, t35, -t362, -t529, t462, t529, -t554 + t558 * t64 + (t28 + t506) * t161 + (t25 - t508) * t159, t161 * t67 + t205 * t393 + 0.2e1 * t197 + t344 + t570, -t159 * t67 + (0.2e1 * qJD(6) + t33) * t205 + 0.2e1 * t461 - t345, -t1 * t558 + t2 * qJ(5) - t31 * t67 - g(1) * (-qJ(6) * t131 + t451) - g(2) * (-qJ(6) * t127 + t452) - g(3) * (t450 - t532) + t508 * t28 + t506 * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t362, t606, t587, t348 + t552 - t563, 0, 0, 0, 0, 0, 0, -t362, t587, -t606 (-qJD(6) - t28) * t205 - t461 + t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t35, t106 + t529, -t157 - t204, t344 + t553 - t589;];
tau_reg  = t6;
