% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRPP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:51
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPP9_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP9_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP9_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPP9_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:49:47
% EndTime: 2019-03-09 21:50:15
% DurationCPUTime: 11.11s
% Computational Cost: add. (14079->714), mult. (37067->885), div. (0->0), fcn. (28180->8), ass. (0->303)
t250 = sin(qJ(2));
t390 = cos(pkin(6));
t347 = pkin(1) * t390;
t234 = t250 * t347;
t249 = sin(qJ(3));
t252 = cos(qJ(3));
t311 = pkin(3) * t249 - pkin(10) * t252;
t246 = sin(pkin(6));
t253 = cos(qJ(2));
t379 = t246 * t253;
t458 = -(t234 + (pkin(8) + t311) * t379) * qJD(1) + t311 * qJD(3);
t248 = sin(qJ(4));
t364 = qJD(1) * t246;
t251 = cos(qJ(4));
t372 = t251 * t253;
t161 = (t248 * t250 + t252 * t372) * t364;
t355 = qJD(4) * t248;
t340 = t249 * t355;
t457 = t161 + t340;
t380 = t246 * t250;
t436 = -pkin(8) * t380 + t253 * t347;
t188 = -pkin(2) * t390 - t436;
t150 = -qJD(2) * pkin(2) + qJD(1) * t188;
t331 = t390 * qJD(1);
t289 = t331 + qJD(2);
t363 = qJD(1) * t250;
t345 = t246 * t363;
t318 = t249 * t345;
t173 = -t252 * t289 + t318;
t175 = t249 * t289 + t252 * t345;
t257 = t173 * pkin(3) - t175 * pkin(10) + t150;
t367 = pkin(8) * t379 + t234;
t189 = t390 * pkin(9) + t367;
t151 = qJD(2) * pkin(9) + qJD(1) * t189;
t190 = (-pkin(2) * t253 - pkin(9) * t250 - pkin(1)) * t246;
t166 = qJD(1) * t190;
t283 = t246 * (pkin(2) * t250 - pkin(9) * t253);
t194 = qJD(2) * t283;
t184 = qJD(1) * t194;
t196 = t436 * qJD(2);
t185 = qJD(1) * t196;
t356 = qJD(3) * t252;
t358 = qJD(3) * t249;
t276 = t151 * t358 - t166 * t356 - t249 * t184 - t252 * t185;
t361 = qJD(2) * t250;
t344 = t246 * t361;
t315 = qJD(1) * t344;
t456 = pkin(10) * t315 + qJD(4) * t257 - t276;
t192 = t436 * qJD(1);
t193 = qJD(1) * t283;
t128 = t252 * t192 + t249 * t193;
t118 = pkin(10) * t345 + t128;
t222 = -pkin(3) * t252 - pkin(10) * t249 - pkin(2);
t354 = qJD(4) * t251;
t455 = -t251 * t118 + t222 * t354 + t458 * t248;
t352 = qJD(1) * qJD(2);
t335 = t253 * t352;
t314 = t246 * t335;
t290 = t249 * t314;
t139 = qJD(3) * t175 + t290;
t418 = pkin(4) + qJ(6);
t454 = t139 * t418;
t168 = qJD(4) + t173;
t298 = pkin(8) * t314;
t309 = qJD(2) * t331;
t427 = qJD(3) * t318 - t252 * (qJD(3) * t289 + t314);
t80 = pkin(1) * t250 * t309 + t139 * pkin(3) + pkin(10) * t427 + t298;
t108 = t252 * t151 + t249 * t166;
t362 = qJD(1) * t253;
t230 = t246 * t362;
t303 = t230 - qJD(3);
t99 = -pkin(10) * t303 + t108;
t332 = t456 * t248 - t251 * t80 + t99 * t354;
t44 = t248 * t257 + t251 * t99;
t284 = t168 * t44 - t332;
t333 = -t248 * t80 - t456 * t251 + t99 * t355;
t43 = t248 * t99 - t251 * t257;
t453 = t168 * t43 - t333;
t452 = qJD(4) * t303 + t427;
t135 = t251 * t175 - t248 * t303;
t287 = t135 * pkin(5) + t43;
t371 = qJD(5) + t287;
t133 = t175 * t248 + t251 * t303;
t316 = t252 * t230;
t160 = t248 * t316 - t251 * t345;
t82 = t175 * t354 - t452 * t248 - t251 * t315;
t400 = t82 * t251;
t81 = t175 * t355 - t248 * t315 + t452 * t251;
t401 = t81 * t248;
t255 = t249 * (qJD(4) * (t133 * t248 - t135 * t251) - t400 + t401) - (t133 * t251 + t135 * t248) * t356 + t133 * t161 + t160 * t135;
t342 = t248 * t356;
t308 = -t160 + t342;
t378 = t248 * t139;
t451 = -t308 * t168 + t249 * (t133 * t303 - t168 * t354 - t378) + t252 * t82;
t307 = t251 * t356 - t161;
t374 = t251 * t139;
t450 = -t307 * t168 + t249 * (t135 * t303 + t168 * t355 - t374) - t252 * t81;
t326 = t135 * t168;
t327 = t133 * t168;
t449 = (t82 + t326) * t248 + (t81 + t327) * t251;
t243 = t246 ^ 2;
t448 = -0.2e1 * t243 * t352;
t357 = qJD(3) * t251;
t447 = pkin(9) * (t249 * t357 + t252 * t355);
t37 = -t168 * qJ(5) - t44;
t423 = pkin(4) * t139;
t7 = t332 - t423;
t446 = t168 * t37 + t7;
t317 = t249 * t230;
t445 = qJ(5) * t317 + t252 * qJD(5) - t455;
t373 = t251 * t252;
t237 = pkin(9) * t373;
t444 = -qJD(4) * t237 + t248 * t118 - t222 * t355 + t458 * t251;
t351 = pkin(9) * t358;
t441 = t128 + t351;
t131 = t133 ^ 2;
t132 = t135 ^ 2;
t337 = -t132 + t131;
t167 = t168 ^ 2;
t440 = -t132 - t167;
t137 = t139 * qJ(5);
t156 = t168 * qJD(5);
t439 = t137 + t156;
t387 = t133 * t135;
t438 = t139 - t387;
t199 = t249 * t380 - t252 * t390;
t343 = qJD(2) * t379;
t144 = -qJD(3) * t199 + t252 * t343;
t437 = -qJD(4) * t379 + t144;
t435 = t316 - t356;
t434 = t317 - t358;
t127 = -t249 * t192 + t252 * t193;
t117 = -pkin(3) * t345 - t127;
t339 = t249 * t354;
t433 = -t117 + pkin(9) * t356 + (t339 + t342) * pkin(4) + t457 * qJ(5);
t383 = t173 * t248;
t432 = -t248 * qJD(5) - t108 + (t355 + t383) * pkin(4);
t254 = qJD(1) ^ 2;
t424 = pkin(5) + pkin(10);
t422 = pkin(10) * t139;
t421 = t133 * pkin(5);
t68 = -t151 * t356 - t166 * t358 + t252 * t184 - t249 * t185;
t58 = -pkin(3) * t315 - t68;
t261 = qJ(5) * t81 - qJD(5) * t135 + t58;
t3 = qJD(6) * t133 + t418 * t82 + t261;
t420 = t248 * t3;
t241 = t249 * pkin(9);
t419 = t251 * t3;
t348 = -pkin(9) * t248 - pkin(4);
t417 = -t418 * t317 - t252 * qJD(6) - (-qJ(6) + t348) * t358 + t444 + (-t373 * qJD(3) + t457) * pkin(5);
t376 = t248 * t252;
t236 = pkin(9) * t376;
t375 = t249 * t251;
t416 = -pkin(5) * t160 - (-pkin(5) * t375 - t236) * qJD(4) - (-pkin(5) * t376 + (-pkin(9) * t251 + qJ(5)) * t249) * qJD(3) + t445;
t389 = qJ(5) * t251;
t297 = -qJ(6) * t248 + t389;
t415 = t418 * t160 + t297 * t356 - (qJD(6) * t248 + (qJ(6) * qJD(4) - qJD(5)) * t251) * t249 - t433;
t414 = qJ(5) * t82;
t12 = pkin(4) * t82 + t261;
t413 = t12 * t248;
t412 = t12 * t251;
t107 = -t249 * t151 + t252 * t166;
t98 = pkin(3) * t303 - t107;
t265 = -t135 * qJ(5) + t98;
t29 = t133 * t418 + t265;
t411 = t135 * t29;
t42 = t133 * pkin(4) + t265;
t410 = t135 * t42;
t23 = -t168 * t418 + t371;
t409 = t168 * t23;
t403 = t58 * t248;
t402 = t58 * t251;
t399 = -qJ(5) * t358 + t445 + t447;
t398 = pkin(4) * t317 + t348 * t358 - t444;
t397 = -pkin(4) * t160 + (-qJ(5) * t356 - qJD(5) * t249) * t251 + t433;
t396 = -t447 + t455;
t395 = t248 * t351 + t444;
t394 = -t251 * qJD(6) - t168 * t297 + t432;
t393 = -qJ(5) * t354 - t173 * t389 + t432;
t123 = pkin(3) * t175 + pkin(10) * t173;
t63 = t251 * t107 + t248 * t123;
t49 = -qJ(5) * t175 - t63;
t392 = -pkin(5) * t383 - t424 * t355 + t49;
t100 = t248 * t107;
t224 = t424 * t251;
t391 = qJD(4) * t224 - t100 - (-pkin(5) * t173 - t123) * t251 + t418 * t175;
t388 = t133 * qJ(5);
t386 = t139 * t199;
t385 = t139 * t252;
t384 = t168 * t175;
t382 = t175 * t173;
t381 = t243 * t254;
t377 = t248 * t249;
t370 = qJD(5) + t43;
t31 = t44 - t421;
t369 = -qJD(6) - t31;
t200 = t249 * t390 + t252 * t380;
t113 = t199 * pkin(3) - t200 * pkin(10) + t188;
t125 = t252 * t189 + t249 * t190;
t115 = -pkin(10) * t379 + t125;
t60 = t248 * t113 + t251 * t115;
t366 = pkin(4) * t377 + t241;
t183 = t248 * t222 + t237;
t365 = t250 ^ 2 - t253 ^ 2;
t359 = qJD(3) * t248;
t353 = t150 * qJD(3);
t350 = pkin(10) * t355;
t349 = pkin(10) * t354;
t338 = t175 * t356;
t334 = -t248 * qJ(5) - pkin(3);
t62 = t251 * t123 - t100;
t59 = t251 * t113 - t248 * t115;
t124 = -t249 * t189 + t252 * t190;
t182 = t222 * t251 - t236;
t330 = t168 * t248;
t329 = t168 * t251;
t328 = t253 * t303;
t325 = t303 * t246;
t323 = qJD(3) * t303;
t321 = t250 * t253 * t381;
t313 = t246 * t254 * t390;
t312 = pkin(1) * t448;
t51 = -qJ(5) * t199 - t60;
t154 = qJ(5) * t252 - t183;
t114 = pkin(3) * t379 - t124;
t305 = (qJD(4) * t133 - t81) * pkin(10);
t304 = (qJD(4) * t135 - t82) * pkin(10);
t145 = t200 * t248 + t246 * t372;
t92 = t200 * t354 + t248 * t437 - t251 * t344;
t25 = t133 * t92 + t145 * t82;
t146 = t200 * t251 - t248 * t379;
t93 = -t200 * t355 + t248 * t344 + t251 * t437;
t24 = t135 * t93 - t146 * t81;
t36 = -pkin(4) * t168 + t370;
t302 = t248 * t37 + t251 * t36;
t301 = -t248 * t44 + t251 * t43;
t299 = -t68 * t249 - t252 * t276;
t293 = -t175 * t133 - t374;
t292 = -t135 * t175 + t378;
t291 = t243 * t250 * t335;
t288 = 0.2e1 * t331 + qJD(2);
t83 = -t189 * t358 + t190 * t356 + t249 * t194 + t252 * t196;
t74 = pkin(10) * t344 + t83;
t143 = qJD(3) * t200 + t249 * t343;
t197 = t367 * qJD(2);
t88 = t143 * pkin(3) - t144 * pkin(10) + t197;
t19 = -t113 * t355 - t115 * t354 - t248 * t74 + t251 * t88;
t5 = t333 - t439;
t84 = -t189 * t356 - t190 * t358 + t194 * t252 - t249 * t196;
t286 = -t81 * pkin(5) + t332;
t285 = -pkin(5) * t82 - t333;
t279 = t303 * t249;
t278 = t168 * t98 - t422;
t277 = -t168 * t42 + t422;
t18 = t113 * t354 - t115 * t355 + t248 * t88 + t251 * t74;
t275 = -t146 * qJ(5) + t114;
t27 = t251 * t326 - t401;
t28 = t248 * t327 - t400;
t271 = -t133 * t29 + t285;
t269 = pkin(1) * (-t309 + t381);
t268 = t81 - t327;
t267 = t286 - t454;
t266 = t133 * t93 + t135 * t92 - t145 * t81 + t146 * t82;
t14 = t133 * t143 + t139 * t145 + t168 * t92 + t199 * t82;
t13 = t135 * t143 + t139 * t146 + t168 * t93 - t199 * t81;
t75 = -pkin(3) * t344 - t84;
t11 = -qJ(5) * t143 - qJD(5) * t199 - t18;
t21 = -t81 * t375 + (t307 - t340) * t135;
t22 = t82 * t377 + (t308 + t339) * t133;
t260 = -qJ(5) * t93 - qJD(5) * t146 + t75;
t41 = t82 - t326;
t242 = t252 * pkin(4);
t223 = t424 * t248;
t217 = -pkin(4) * t251 + t334;
t204 = -t251 * t418 + t334;
t195 = t367 * qJD(1);
t191 = -qJ(5) * t375 + t366;
t186 = qJD(1) * t197;
t155 = -t182 + t242;
t152 = -t249 * t297 + t366;
t140 = -pkin(5) * t377 - t154;
t138 = t252 * qJ(6) + t236 + t242 + (pkin(5) * t249 - t222) * t251;
t86 = pkin(4) * t135 + t388;
t73 = -t168 * t279 - t385;
t69 = t143 * t168 + t386;
t61 = pkin(4) * t145 + t275;
t54 = t135 * t418 + t388;
t52 = -pkin(4) * t199 - t59;
t50 = -t175 * pkin(4) - t62;
t46 = t145 * t418 + t275;
t38 = -pkin(5) * t145 - t51;
t35 = t167 * t251 + t292;
t34 = t168 * t330 + t293;
t33 = t146 * pkin(5) - t199 * t418 - t59;
t26 = qJD(6) - t37 - t421;
t20 = pkin(4) * t92 + t260;
t17 = -pkin(4) * t143 - t19;
t8 = qJD(6) * t145 + t418 * t92 + t260;
t6 = -pkin(5) * t92 - t11;
t4 = t93 * pkin(5) - t199 * qJD(6) - t143 * t418 - t19;
t2 = t285 + t439;
t1 = -t168 * qJD(6) + t267;
t9 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t291, t365 * t448, t288 * t343, -0.2e1 * t291, -t288 * t344, 0, -t186 * t390 - t197 * t289 + t250 * t312, -t185 * t390 - t196 * t289 + t253 * t312 (t185 * t253 + t186 * t250 + (-t192 * t253 - t195 * t250) * qJD(2) + (t196 * t253 + t197 * t250 + (-t250 * t367 - t253 * t436) * qJD(2)) * qJD(1)) * t246, t185 * t367 - t186 * t436 - t192 * t197 + t195 * t196, t175 * t144 - t200 * t427, -t200 * t139 - t175 * t143 - t144 * t173 + t199 * t427, -t144 * t303 + t175 * t344 + t200 * t315 + t379 * t427, t143 * t173 + t386, t143 * t303 + (t139 * t253 + (-qJD(1) * t199 - t173) * t361) * t246 (-t243 * t362 - t325) * t361, -t84 * t303 + t197 * t173 + t188 * t139 + t186 * t199 + t150 * t143 + (-t68 * t253 + (qJD(1) * t124 + t107) * t361) * t246, -t108 * t344 - t125 * t315 + t150 * t144 + t197 * t175 + t186 * t200 - t188 * t427 - t276 * t379 + t303 * t83, -t107 * t144 - t108 * t143 + t124 * t427 - t125 * t139 - t83 * t173 - t84 * t175 + t199 * t276 - t68 * t200, t107 * t84 + t108 * t83 + t124 * t68 - t125 * t276 + t150 * t197 + t186 * t188, t24, -t266, t13, t25, -t14, t69, t114 * t82 + t133 * t75 + t139 * t59 - t143 * t43 + t145 * t58 + t168 * t19 - t199 * t332 + t92 * t98, -t114 * t81 + t135 * t75 - t139 * t60 - t143 * t44 + t146 * t58 - t168 * t18 + t199 * t333 + t93 * t98, -t133 * t18 - t135 * t19 + t145 * t333 + t146 * t332 + t43 * t93 - t44 * t92 + t59 * t81 - t60 * t82, t114 * t58 + t18 * t44 - t19 * t43 - t332 * t59 - t333 * t60 + t75 * t98, t69, -t13, t14, t24, -t266, t25, t11 * t133 + t135 * t17 + t145 * t5 + t146 * t7 + t36 * t93 + t37 * t92 + t51 * t82 - t52 * t81, -t12 * t145 - t133 * t20 + t139 * t52 + t143 * t36 + t168 * t17 + t199 * t7 - t42 * t92 - t61 * t82, -t11 * t168 - t12 * t146 - t135 * t20 - t139 * t51 - t143 * t37 - t199 * t5 - t42 * t93 + t61 * t81, t11 * t37 + t12 * t61 + t17 * t36 + t20 * t42 + t5 * t51 + t52 * t7, t69, t14, t13, t25, t266, t24, t1 * t146 - t133 * t6 + t135 * t4 - t145 * t2 + t23 * t93 - t26 * t92 - t33 * t81 - t38 * t82, -t135 * t8 + t139 * t38 + t143 * t26 - t146 * t3 + t168 * t6 + t199 * t2 - t29 * t93 + t46 * t81, -t1 * t199 + t133 * t8 - t139 * t33 - t143 * t23 + t145 * t3 - t168 * t4 + t29 * t92 + t46 * t82, t1 * t33 + t2 * t38 + t23 * t4 + t26 * t6 + t29 * t8 + t3 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t321, t365 * t381, -t253 * t313, t321, t250 * t313, 0, t195 * t289 + t250 * t269 - t298, pkin(8) * t315 + t192 * t289 + t253 * t269, 0, 0, -t175 * t316 - t249 * t427 + t338, -t249 * t139 + t173 * t435 + t175 * t434 - t252 * t427, -t252 * t323 + (t252 * t328 + (qJD(2) * t249 - t175) * t250) * t364, -t173 * t279 - t385, t249 * t323 + (-t249 * t328 + (qJD(2) * t252 + t173) * t250) * t364, t325 * t363, -pkin(2) * t139 + t249 * t353 + t127 * t303 - t195 * t173 + (pkin(9) * t323 - t186) * t252 + (-t107 * t250 + (-pkin(9) * t361 - t150 * t253) * t249) * t364, pkin(2) * t427 + t108 * t345 - t150 * t316 - t195 * t175 + t186 * t249 - t441 * t303 + (-pkin(9) * t315 + t353) * t252, t127 * t175 - t241 * t427 + t299 + t441 * t173 + t434 * t108 + t435 * t107 + (t338 - t385) * pkin(9), -t186 * pkin(2) - t107 * t127 - t108 * t128 - t150 * t195 + ((-t107 * t252 - t108 * t249) * qJD(3) + t299) * pkin(9), t21, t255, -t450, t22, t451, t73, -t117 * t133 + t139 * t182 - t160 * t98 + t395 * t168 + (t332 + (pkin(9) * t133 + t248 * t98) * qJD(3)) * t252 + (pkin(9) * t82 + t303 * t43 + t354 * t98 + t403) * t249, -t117 * t135 - t139 * t183 - t161 * t98 - t396 * t168 + (-t333 + (pkin(9) * t135 + t251 * t98) * qJD(3)) * t252 + (-pkin(9) * t81 + t303 * t44 - t355 * t98 + t402) * t249, t160 * t44 - t161 * t43 + t182 * t81 - t183 * t82 - t395 * t135 - t396 * t133 + t301 * t356 + (t332 * t251 + t248 * t333 + (-t248 * t43 - t251 * t44) * qJD(4)) * t249, -t332 * t182 - t98 * t117 - t333 * t183 + t396 * t44 - t395 * t43 + (t249 * t58 + t356 * t98) * pkin(9), t73, t450, -t451, t21, t255, t22, t154 * t82 - t155 * t81 - t160 * t37 - t161 * t36 + t398 * t135 + t399 * t133 + t302 * t356 + (t248 * t5 + t251 * t7 + (-t248 * t36 + t251 * t37) * qJD(4)) * t249, t139 * t155 + t160 * t42 - t191 * t82 + (-t359 * t42 - t7) * t252 + t398 * t168 - t397 * t133 + (-t303 * t36 - t354 * t42 - t413) * t249, -t139 * t154 + t161 * t42 + t191 * t81 + (-t357 * t42 + t5) * t252 - t399 * t168 - t397 * t135 + (t303 * t37 + t355 * t42 - t412) * t249, t12 * t191 + t5 * t154 + t7 * t155 + t36 * t398 + t37 * t399 + t397 * t42, t73, -t451, -t450, t22, -t255, t21, -t138 * t81 - t140 * t82 + t160 * t26 - t161 * t23 - t417 * t135 + t416 * t133 + (t23 * t251 - t248 * t26) * t356 + (t1 * t251 - t2 * t248 + (-t23 * t248 - t251 * t26) * qJD(4)) * t249, t139 * t140 + t152 * t81 + t161 * t29 + (-t29 * t357 - t2) * t252 - t416 * t168 + t415 * t135 + (-t26 * t303 + t29 * t355 - t419) * t249, -t138 * t139 + t152 * t82 - t160 * t29 + (t29 * t359 + t1) * t252 + t417 * t168 - t415 * t133 + (t23 * t303 + t29 * t354 + t420) * t249, t1 * t138 + t2 * t140 + t3 * t152 - t23 * t417 - t26 * t416 - t29 * t415; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t382, -t173 ^ 2 + t175 ^ 2, -t173 * t303 - t427, -t382, -t175 * t230 - t290, t315, -t108 * t303 - t150 * t175 + t68, -t107 * t303 + t150 * t173 + t276, 0, 0, t27, -t449, t35, t28, -t167 * t248 - t293, -t384, -pkin(3) * t82 - t108 * t133 + t43 * t175 - t402 + (-t62 - t349) * t168 + t278 * t248, pkin(3) * t81 - t108 * t135 + t44 * t175 + t403 + (t63 + t350) * t168 + t278 * t251, t133 * t63 + t135 * t62 + (t304 + t453) * t251 + (t305 - t284) * t248, -t58 * pkin(3) - t98 * t108 + t43 * t62 - t44 * t63 + (qJD(4) * t301 + t248 * t332 - t251 * t333) * pkin(10), -t384, -t168 * t329 - t292, t34, t27, -t449, t28, -t133 * t49 - t135 * t50 + (t168 * t36 + t304 - t5) * t251 + (t305 + t446) * t248, t412 - t175 * t36 - t217 * t82 + (-t50 + t349) * t168 - t393 * t133 + t277 * t248, -t413 + t175 * t37 + t217 * t81 + (t49 - t350) * t168 - t393 * t135 + t277 * t251, t12 * t217 - t36 * t50 - t37 * t49 + t393 * t42 + (qJD(4) * t302 + t7 * t248 - t5 * t251) * pkin(10), -t384, t34, t35, t28, t449, t27, -t223 * t81 - t224 * t82 + t391 * t135 - t392 * t133 + (t2 + t409) * t251 + (-t168 * t26 + t1) * t248, -t135 * t394 + t139 * t224 + t168 * t392 - t175 * t26 + t204 * t81 - t29 * t329 - t420, t133 * t394 - t139 * t223 - t168 * t391 + t175 * t23 + t204 * t82 + t29 * t330 - t419, t1 * t223 + t2 * t224 + t3 * t204 + t23 * t391 + t26 * t392 + t29 * t394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t387, -t337, -t268, -t387, -t41, t139, -t135 * t98 + t284, t133 * t98 - t453, 0, 0, t139, t268, t41, t387, -t337, -t387, pkin(4) * t81 - t414 + (-t37 - t44) * t135 + (t36 - t370) * t133, t133 * t86 - t284 + t410 - 0.2e1 * t423, -t133 * t42 + t135 * t86 + t168 * t370 + t137 - t5, -t7 * pkin(4) - t5 * qJ(5) - t36 * t44 - t37 * t370 - t42 * t86, t139, t41, -t268, -t387, t337, t387, -t414 + t418 * t81 + (t26 + t369) * t135 + (t23 - t371) * t133, t135 * t54 + t168 * t287 + 0.2e1 * t137 + 0.2e1 * t156 + t271, -t133 * t54 - t411 + (0.2e1 * qJD(6) + t31) * t168 + 0.2e1 * t454 - t286, t2 * qJ(5) - t1 * t418 + t23 * t369 + t26 * t371 - t29 * t54; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t268, t438, t440, t410 + t446, 0, 0, 0, 0, 0, 0, -t268, t440, -t438, t411 + (-qJD(6) - t26) * t168 + t267; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, t139 + t387, -t131 - t167, t271 + t409 + t439;];
tauc_reg  = t9;
