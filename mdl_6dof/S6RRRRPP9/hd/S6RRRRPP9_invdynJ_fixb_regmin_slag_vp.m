% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRPP9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4]';
% 
% Output:
% tau_reg [6x32]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:51
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPP9_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP9_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP9_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPP9_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPP9_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRRRPP9_invdynJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:49:52
% EndTime: 2019-03-09 21:50:24
% DurationCPUTime: 15.41s
% Computational Cost: add. (13881->800), mult. (33792->998), div. (0->0), fcn. (26718->10), ass. (0->334)
t299 = cos(qJ(2));
t292 = sin(pkin(6));
t439 = qJD(1) * t292;
t271 = t299 * t439;
t355 = t271 - qJD(3);
t295 = sin(qJ(3));
t298 = cos(qJ(3));
t475 = cos(pkin(6));
t389 = t475 * qJD(1);
t350 = t389 + qJD(2);
t296 = sin(qJ(2));
t409 = t296 * t439;
t184 = t295 * t350 + t298 * t409;
t294 = sin(qJ(4));
t297 = cos(qJ(4));
t383 = t297 * t355;
t128 = t184 * t294 + t383;
t130 = t297 * t184 - t294 * t355;
t469 = t130 * t128;
t331 = qJD(3) * t350;
t381 = t475 * qJDD(1);
t346 = t381 + qJDD(2);
t429 = t295 * qJD(2);
t407 = t299 * t429;
t427 = qJDD(1) * t296;
t433 = qJD(3) * t298;
t88 = t292 * (qJD(1) * (t296 * t433 + t407) + t295 * t427) + t295 * t331 - t298 * t346;
t82 = qJDD(4) + t88;
t528 = t82 - t469;
t372 = pkin(1) * t389;
t212 = pkin(8) * t271 + t296 * t372;
t527 = t212 + t355 * (pkin(3) * t295 - pkin(10) * t298);
t209 = -pkin(8) * t409 + t299 * t372;
t365 = pkin(2) * t296 - pkin(9) * t299;
t210 = t365 * t439;
t447 = t298 * t209 + t295 * t210;
t102 = pkin(10) * t409 + t447;
t525 = -pkin(3) * t298 - pkin(2);
t244 = -pkin(10) * t295 + t525;
t453 = t297 * t298;
t282 = pkin(9) * t453;
t431 = qJD(4) * t294;
t514 = qJD(4) * t282 - t294 * t102 + t244 * t431 + t297 * t527;
t452 = t297 * t299;
t186 = (t294 * t296 + t298 * t452) * t292;
t171 = qJD(1) * t186;
t402 = t295 * t431;
t526 = t171 + t402;
t473 = qJ(5) * t294;
t524 = pkin(3) + t473;
t497 = pkin(4) + qJ(6);
t410 = t497 * t82;
t430 = qJD(4) * t297;
t522 = t297 * t102 - t244 * t430 + t527 * t294;
t435 = qJD(3) * t295;
t182 = t295 * t409 - t298 * t350;
t174 = qJD(4) + t182;
t160 = -pkin(2) * t350 - t209;
t71 = t182 * pkin(3) - t184 * pkin(10) + t160;
t161 = pkin(9) * t350 + t212;
t348 = -pkin(2) * t299 - pkin(9) * t296 - pkin(1);
t172 = t348 * t439;
t87 = t298 * t161 + t295 * t172;
t75 = -pkin(10) * t355 + t87;
t35 = t294 * t75 - t297 * t71;
t345 = pkin(5) * t130 + t35;
t451 = qJD(5) + t345;
t501 = cos(qJ(1));
t368 = t475 * t501;
t500 = sin(qJ(1));
t224 = t296 * t368 + t299 * t500;
t412 = t292 * t501;
t151 = t224 * t298 - t295 * t412;
t223 = t296 * t500 - t299 * t368;
t103 = t151 * t294 - t223 * t297;
t104 = t151 * t297 + t223 * t294;
t289 = t292 ^ 2;
t521 = 0.2e1 * t289;
t166 = t174 * qJD(5);
t78 = t82 * qJ(5);
t520 = -t166 - t78;
t374 = t295 * t271;
t519 = qJ(5) * t374 + qJD(5) * t298 + t522;
t518 = t355 * t184;
t127 = t130 ^ 2;
t173 = t174 ^ 2;
t517 = -t127 - t173;
t458 = t292 * t296;
t221 = t295 * t458 - t298 * t475;
t437 = qJD(2) * t299;
t406 = t298 * t437;
t147 = -qJD(3) * t221 + t292 * t406;
t457 = t292 * t299;
t516 = -qJD(4) * t457 + t147;
t413 = pkin(1) * t475;
t343 = -pkin(8) * t458 + t299 * t413;
t330 = t295 * t346;
t426 = qJDD(1) * t298;
t303 = t298 * t331 + (t296 * t426 + (-t296 * t435 + t406) * qJD(1)) * t292 + t330;
t428 = qJD(1) * qJD(2);
t400 = t296 * t428;
t371 = t292 * t400;
t425 = qJDD(1) * t299;
t270 = t292 * t425;
t423 = qJDD(3) - t270;
t329 = t371 + t423;
t432 = qJD(4) * t130;
t47 = t294 * t303 - t297 * t329 + t432;
t515 = (qJDD(2) + 0.2e1 * t381) * t292;
t373 = t298 * t271;
t513 = t373 - t433;
t187 = t295 * t209;
t101 = -pkin(3) * t409 - t210 * t298 + t187;
t405 = t294 * t433;
t512 = -t101 + pkin(9) * t433 + (t295 * t430 + t405) * pkin(4) + t526 * qJ(5);
t465 = t182 * t294;
t511 = -qJD(5) * t294 - t87 + (t431 + t465) * pkin(4);
t510 = -pkin(5) * t47 + qJDD(6);
t508 = 0.2e1 * t78;
t507 = t128 ^ 2;
t300 = qJD(1) ^ 2;
t506 = pkin(5) + pkin(10);
t505 = pkin(4) * t82;
t46 = qJD(4) * t383 + t184 * t431 - t294 * t329 - t297 * t303;
t504 = pkin(5) * t46;
t502 = pkin(10) * t82;
t498 = pkin(5) * t128;
t414 = -pkin(9) * t294 - pkin(4);
t496 = t497 * t374 + qJD(6) * t298 + (-qJ(6) + t414) * t435 + t514 + (qJD(3) * t453 - t526) * pkin(5);
t170 = t294 * t373 - t297 * t409;
t455 = t294 * t298;
t281 = pkin(9) * t455;
t454 = t295 * t297;
t495 = pkin(5) * t170 + (-pkin(5) * t454 - t281) * qJD(4) + (-pkin(5) * t455 + (-pkin(9) * t297 + qJ(5)) * t295) * qJD(3) - t519;
t36 = t294 * t71 + t297 * t75;
t472 = qJ(5) * t297;
t352 = -qJ(6) * t294 + t472;
t494 = -t497 * t170 - t352 * t433 + (qJD(6) * t294 + (qJ(6) * qJD(4) - qJD(5)) * t297) * t295 + t512;
t434 = qJD(3) * t297;
t493 = -qJ(5) * t435 + (t295 * t434 + t298 * t431) * pkin(9) + t519;
t200 = -pkin(2) * t475 - t343;
t215 = t221 * pkin(3);
t222 = t295 * t475 + t298 * t458;
t93 = -t222 * pkin(10) + t200 + t215;
t443 = pkin(8) * t457 + t296 * t413;
t201 = pkin(9) * t475 + t443;
t444 = -pkin(2) * t457 - pkin(9) * t458;
t202 = -pkin(1) * t292 + t444;
t448 = t298 * t201 + t295 * t202;
t95 = -pkin(10) * t457 + t448;
t492 = t294 * t93 + t297 * t95;
t491 = pkin(10) * qJD(4);
t490 = qJ(5) * t47;
t15 = -t174 * t497 + t451;
t489 = t15 * t174;
t28 = -qJ(5) * t174 - t36;
t488 = t174 * t28;
t487 = t174 * t36;
t486 = t294 * t46;
t485 = t294 * t82;
t484 = t297 * t82;
t483 = pkin(4) * t374 + t414 * t435 + t514;
t482 = -pkin(4) * t170 + (-qJ(5) * t433 - qJD(5) * t295) * t297 + t512;
t481 = -qJD(6) * t297 - t174 * t352 + t511;
t480 = -qJ(5) * t430 - t182 * t472 + t511;
t117 = pkin(3) * t184 + pkin(10) * t182;
t86 = -t295 * t161 + t298 * t172;
t477 = t294 * t117 + t297 * t86;
t41 = -qJ(5) * t184 - t477;
t479 = -pkin(5) * t465 - t506 * t431 + t41;
t251 = t506 * t297;
t76 = t294 * t86;
t478 = qJD(4) * t251 - t76 - (-pkin(5) * t182 - t117) * t297 + t497 * t184;
t474 = qJ(5) * t128;
t148 = t222 * t294 + t292 * t452;
t471 = qJ(6) * t148;
t470 = t128 * t174;
t468 = t130 * t174;
t386 = -t224 * t295 - t298 * t412;
t467 = t386 * t297;
t367 = t475 * t500;
t226 = -t296 * t367 + t299 * t501;
t411 = t292 * t500;
t154 = t226 * t295 - t298 * t411;
t466 = t154 * t297;
t384 = t174 * t297;
t464 = t221 * t297;
t462 = t223 * t295;
t225 = t296 * t501 + t299 * t367;
t460 = t225 * t295;
t459 = t289 * t300;
t456 = t294 * t295;
t450 = qJD(5) + t35;
t19 = t36 - t498;
t449 = -qJD(6) - t19;
t442 = pkin(4) * t456 + t295 * pkin(9);
t441 = t294 * t244 + t282;
t290 = t296 ^ 2;
t440 = -t299 ^ 2 + t290;
t438 = qJD(2) * t296;
t436 = qJD(3) * t294;
t275 = pkin(3) * t457;
t422 = t299 * t459;
t421 = t295 * t457;
t420 = t294 * t457;
t419 = pkin(4) * t467 + t386 * t524;
t418 = -pkin(4) * t466 - t154 * t524;
t416 = -pkin(4) * t464 - t221 * t473 - t215;
t347 = qJD(2) * t372;
t369 = pkin(1) * t381;
t415 = pkin(8) * t270 + t296 * t369 + t299 * t347;
t408 = t292 * t438;
t403 = t174 * t431;
t401 = pkin(1) * t521;
t399 = t299 * t428;
t398 = t292 * t427;
t395 = -t294 * t95 + t297 * t93;
t324 = -pkin(8) * t371 + t415;
t115 = pkin(9) * t346 + t324;
t341 = t365 * qJD(2);
t118 = (qJD(1) * t341 + qJDD(1) * t348) * t292;
t337 = -t298 * t115 - t295 * t118 + t161 * t435 - t172 * t433;
t25 = pkin(10) * t329 - t337;
t370 = t292 * t399;
t377 = t296 * t347 - t299 * t369 + (t370 + t398) * pkin(8);
t116 = -pkin(2) * t346 + t377;
t31 = t88 * pkin(3) - pkin(10) * t303 + t116;
t394 = -t297 * t25 - t294 * t31 - t71 * t430 + t75 * t431;
t393 = t294 * t25 - t297 * t31 + t75 * t430 + t71 * t431;
t392 = -t103 * pkin(4) + qJ(5) * t104;
t155 = t226 * t298 + t295 * t411;
t107 = t155 * t294 - t225 * t297;
t108 = t155 * t297 + t225 * t294;
t391 = -t107 * pkin(4) + qJ(5) * t108;
t149 = t222 * t297 - t420;
t388 = -t148 * pkin(4) + qJ(5) * t149;
t387 = -t295 * t201 + t202 * t298;
t385 = t244 * t297 - t281;
t382 = t299 * t355;
t379 = qJD(3) * t355;
t378 = t295 * t115 - t298 * t118 + t161 * t433 + t172 * t435;
t43 = -qJ(5) * t221 - t492;
t366 = t292 * t300 * t475;
t363 = -g(1) * t103 + g(2) * t107;
t362 = g(1) * t104 - g(2) * t108;
t361 = g(1) * t386 + g(2) * t154;
t164 = qJ(5) * t298 - t441;
t94 = t275 - t387;
t359 = -qJDD(5) - t393;
t358 = -t170 + t405;
t357 = t297 * t433 - t171;
t27 = -pkin(4) * t174 + t450;
t354 = t27 * t297 + t28 * t294;
t211 = t292 * t341;
t213 = t343 * qJD(2);
t336 = -t201 * t435 + t202 * t433 + t295 * t211 + t298 * t213;
t56 = pkin(10) * t408 + t336;
t146 = qJD(3) * t222 + t292 * t407;
t214 = t443 * qJD(2);
t61 = t146 * pkin(3) - t147 * pkin(10) + t214;
t353 = -t294 * t56 + t297 * t61 - t95 * t430 - t93 * t431;
t349 = 0.2e1 * t389 + qJD(2);
t4 = t394 + t520;
t344 = -t201 * t433 - t202 * t435 + t211 * t298 - t295 * t213;
t342 = t294 * t61 + t297 * t56 + t93 * t430 - t431 * t95;
t74 = pkin(3) * t355 - t86;
t340 = t174 * t74 - t502;
t319 = -t130 * qJ(5) + t74;
t34 = t128 * pkin(4) + t319;
t339 = -t174 * t34 + t502;
t338 = t399 + t427;
t122 = -t223 * t455 - t224 * t297;
t124 = -t225 * t455 - t226 * t297;
t185 = -t297 * t458 + t298 * t420;
t335 = g(1) * t124 + g(2) * t122 + g(3) * t185;
t123 = -t223 * t453 + t224 * t294;
t125 = -t225 * t453 + t226 * t294;
t334 = -g(1) * t125 - g(2) * t123 - g(3) * t186;
t333 = g(1) * t154 - g(2) * t386 + g(3) * t221;
t332 = -g(1) * t155 - g(2) * t151 - g(3) * t222;
t26 = -pkin(3) * t329 + t378;
t305 = t46 * qJ(5) - t130 * qJD(5) + t26;
t3 = t128 * qJD(6) + t47 * t497 + t305;
t327 = -t3 + t333;
t326 = t186 * pkin(4) + pkin(10) * t421 + qJ(5) * t185 + t298 * t275 - t444;
t325 = g(1) * t225 + g(2) * t223 - g(3) * t457;
t49 = -t388 + t94;
t323 = t123 * pkin(4) + pkin(9) * t224 - pkin(10) * t462 + qJ(5) * t122 + t223 * t525;
t322 = t125 * pkin(4) + pkin(9) * t226 - pkin(10) * t460 + qJ(5) * t124 + t225 * t525;
t20 = -t46 + t470;
t320 = t501 * pkin(1) + t226 * pkin(2) + t155 * pkin(3) + t108 * pkin(4) + pkin(8) * t411 + pkin(9) * t225 + qJ(5) * t107;
t57 = -pkin(3) * t408 - t344;
t318 = t174 * t491 - t333;
t317 = g(1) * t107 + g(2) * t103 + g(3) * t148 - t393;
t316 = g(1) * t108 + g(2) * t104 + g(3) * t149 + t394;
t8 = t47 * pkin(4) + t305;
t314 = t318 + t8;
t12 = -qJ(5) * t146 - qJD(5) * t221 - t342;
t313 = -qJDD(5) + t317;
t312 = -pkin(1) * t500 - t224 * pkin(2) - pkin(3) * t151 - pkin(4) * t104 + pkin(8) * t412 - t223 * pkin(9) - qJ(5) * t103;
t311 = t130 * t34 - t313;
t67 = -t222 * t431 + t294 * t408 + t297 * t516;
t309 = -qJ(5) * t67 - qJD(5) * t149 + t57;
t17 = t128 * t497 + t319;
t308 = t130 * t17 - t313 - t504;
t307 = -t128 * t17 - t316 + t510;
t301 = t468 - t47;
t287 = t298 * pkin(4);
t250 = t506 * t294;
t239 = -pkin(4) * t297 - t524;
t228 = -t297 * t497 - t524;
t203 = -qJ(5) * t454 + t442;
t165 = t287 - t385;
t162 = -t295 * t352 + t442;
t137 = -pkin(5) * t456 - t164;
t132 = qJ(6) * t298 + t281 + t287 + (pkin(5) * t295 - t244) * t297;
t66 = t222 * t430 + t294 * t516 - t297 * t408;
t59 = pkin(4) * t130 + t474;
t48 = t130 * t497 + t474;
t44 = -pkin(4) * t221 - t395;
t42 = -pkin(4) * t184 - t117 * t297 + t76;
t38 = t49 + t471;
t32 = -pkin(5) * t148 - t43;
t24 = pkin(5) * t149 - t221 * t497 - t395;
t16 = qJD(6) - t28 - t498;
t14 = pkin(4) * t66 + t309;
t13 = -pkin(4) * t146 - t353;
t11 = qJD(6) * t148 + t497 * t66 + t309;
t10 = -pkin(5) * t66 - t12;
t9 = pkin(5) * t67 - qJD(6) * t221 - t146 * t497 - t353;
t5 = -t359 - t505;
t2 = -t4 + t510;
t1 = -qJD(6) * t174 - t359 - t410 - t504;
t6 = [qJDD(1), g(1) * t500 - g(2) * t501, g(1) * t501 + g(2) * t500 (qJDD(1) * t290 + 0.2e1 * t296 * t399) * t289 (t296 * t425 - t428 * t440) * t521, t292 * t349 * t437 + t296 * t515, t299 * t515 - t349 * t408, t346 * t475, -t214 * t350 + t343 * t346 - t377 * t475 + g(1) * t224 - g(2) * t226 + (-t400 + t425) * t401, -g(1) * t223 + g(2) * t225 - t213 * t350 - t324 * t475 - t338 * t401 - t346 * t443, t184 * t147 + t222 * t303, -t184 * t146 - t147 * t182 - t221 * t303 - t222 * t88, -t147 * t355 + t222 * t423 + ((-t330 + (-t331 - t370) * t298) * t299 + (-(-qJD(1) * t435 + t426) * t457 + (qJD(1) * t222 + t184) * qJD(2)) * t296) * t292, t146 * t355 - t221 * t423 + (t88 * t299 + (-qJD(1) * t221 - t182) * t438) * t292 (-t423 * t299 + (-t271 - t355) * t438) * t292, g(1) * t151 - g(2) * t155 + t116 * t221 + t160 * t146 + t214 * t182 + t200 * t88 + t329 * t387 - t344 * t355 + t378 * t457 + t408 * t86, t116 * t222 + t160 * t147 + t214 * t184 + t200 * t303 - t329 * t448 + t336 * t355 - t337 * t457 - t408 * t87 + t361, t130 * t67 - t149 * t46, -t128 * t67 - t130 * t66 + t148 * t46 - t149 * t47, t130 * t146 + t149 * t82 + t174 * t67 - t221 * t46, -t128 * t146 - t148 * t82 - t174 * t66 - t221 * t47, t146 * t174 + t221 * t82, t57 * t128 - t35 * t146 + t26 * t148 + t174 * t353 - t221 * t393 + t395 * t82 + t94 * t47 + t74 * t66 + t362, t57 * t130 - t36 * t146 + t26 * t149 - t174 * t342 + t221 * t394 - t94 * t46 - t492 * t82 + t74 * t67 + t363, t12 * t128 + t13 * t130 + t148 * t4 + t149 * t5 + t27 * t67 + t28 * t66 + t43 * t47 - t44 * t46 - t361, -t128 * t14 + t13 * t174 + t146 * t27 - t148 * t8 + t221 * t5 - t34 * t66 + t44 * t82 - t47 * t49 - t362, -t12 * t174 - t130 * t14 - t146 * t28 - t149 * t8 - t221 * t4 - t34 * t67 - t43 * t82 + t46 * t49 - t363, t8 * t49 + t34 * t14 + t4 * t43 + t28 * t12 + t5 * t44 + t27 * t13 - g(1) * (pkin(10) * t386 + t312) - g(2) * (pkin(10) * t154 + t320) t1 * t149 - t10 * t128 + t130 * t9 - t148 * t2 + t15 * t67 - t16 * t66 - t24 * t46 - t32 * t47 - t361, t10 * t174 - t11 * t130 + t146 * t16 - t149 * t3 - t17 * t67 + t2 * t221 + t32 * t82 + t38 * t46 - t363, -t1 * t221 + t11 * t128 - t146 * t15 + t148 * t3 + t17 * t66 - t174 * t9 - t24 * t82 + t38 * t47 + t362, t3 * t38 + t17 * t11 + t1 * t24 + t15 * t9 + t2 * t32 + t16 * t10 - g(1) * (-qJ(6) * t104 + t386 * t506 + t312) - g(2) * (qJ(6) * t108 + t154 * t506 + t320); 0, 0, 0, -t296 * t422, t440 * t459, -t299 * t366 + t398, t296 * t366 + t270, t346, pkin(1) * t296 * t459 + t212 * t350 + t325 - t377, pkin(1) * t422 + t209 * t350 + g(1) * t226 + g(2) * t224 + (pkin(8) * t428 + g(3)) * t458 - t415 (-qJD(3) * t409 + t346) * t295 ^ 2 + ((t292 * t338 + t331) * t295 - t518) * t298, -t295 * t88 + t298 * t303 + (t374 - t435) * t184 + t513 * t182, -t298 * t379 + t295 * t423 + (t298 * t382 + (-t184 + t429) * t296) * t439, t295 * t379 + t298 * t423 + (-t295 * t382 + (qJD(2) * t298 + t182) * t296) * t439, t355 * t409, -pkin(2) * t88 - t187 * t355 - t86 * t409 - t212 * t182 + (-pkin(9) * t329 - t160 * t355) * t295 + (pkin(9) * t379 + t210 * t355 - t116 + t325) * t298, -pkin(2) * t303 - g(1) * t460 - g(2) * t462 + g(3) * t421 + t116 * t295 - t212 * t184 - t355 * t447 + t409 * t87 - t513 * t160 + (-t298 * t329 - t355 * t435) * pkin(9), -t46 * t454 + (t357 - t402) * t130, t128 * t171 + t130 * t170 + (-t128 * t297 - t130 * t294) * t433 + (t486 - t297 * t47 + (t128 * t294 - t130 * t297) * qJD(4)) * t295, t298 * t46 + t357 * t174 + (-t130 * t355 - t403 + t484) * t295, t298 * t47 - t358 * t174 + (t128 * t355 - t174 * t430 - t485) * t295, -t174 * t295 * t355 - t298 * t82, t385 * t82 - t101 * t128 - t74 * t170 - t514 * t174 + (t393 + (pkin(9) * t128 + t294 * t74) * qJD(3)) * t298 + (t74 * t430 + t26 * t294 + t355 * t35 + (t174 * t436 + t47) * pkin(9)) * t295 + t334, -t441 * t82 - t101 * t130 - t74 * t171 + t522 * t174 + (t74 * t434 - t394 + (qJD(3) * t130 + t403) * pkin(9)) * t298 + (-t74 * t431 + t26 * t297 + t355 * t36 + (t174 * t434 - t46) * pkin(9)) * t295 + t335, t164 * t47 - t165 * t46 - t170 * t28 - t171 * t27 + t483 * t130 + t493 * t128 + t354 * t433 + (t294 * t4 + t297 * t5 + (-t27 * t294 + t28 * t297) * qJD(4) + t325) * t295, t165 * t82 + t170 * t34 - t203 * t47 + (-t34 * t436 - t5) * t298 + t483 * t174 - t482 * t128 + (-t27 * t355 - t294 * t8 - t34 * t430) * t295 - t334, -t164 * t82 + t171 * t34 + t203 * t46 + (-t34 * t434 + t4) * t298 - t493 * t174 - t482 * t130 + (t28 * t355 - t297 * t8 + t34 * t431) * t295 - t335, -g(1) * t322 - g(2) * t323 - g(3) * t326 + t4 * t164 + t5 * t165 + t8 * t203 + t27 * t483 + t28 * t493 + t34 * t482, -t132 * t46 - t137 * t47 - t15 * t171 + t16 * t170 + t496 * t130 - t495 * t128 + (t15 * t297 - t16 * t294) * t433 + (t1 * t297 - t2 * t294 + (-t15 * t294 - t16 * t297) * qJD(4) + t325) * t295, t137 * t82 + t162 * t46 - t2 * t298 + t495 * t174 - t357 * t17 - t494 * t130 + (-t16 * t355 + t17 * t431 - t297 * t3) * t295 - t335, t1 * t298 - t132 * t82 + t162 * t47 - t496 * t174 + t358 * t17 + t494 * t128 + (t15 * t355 + t17 * t430 + t294 * t3) * t295 + t334, t3 * t162 + t1 * t132 + t2 * t137 - g(1) * (-pkin(5) * t460 + qJ(6) * t125 + t322) - g(2) * (-pkin(5) * t462 + qJ(6) * t123 + t323) - g(3) * (pkin(5) * t421 + qJ(6) * t186 + t326) + t494 * t17 + t495 * t16 + t496 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t184 * t182, -t182 ^ 2 + t184 ^ 2, -t182 * t355 + t303, -t88 - t518, t329, -t160 * t184 - t355 * t87 + t333 - t378, t160 * t182 - t355 * t86 - t332 + t337, t130 * t384 - t486 (-t46 - t470) * t297 + (-t47 - t468) * t294, -t130 * t184 + t174 * t384 + t485, t128 * t184 - t173 * t294 + t484, -t174 * t184, -pkin(3) * t47 - t87 * t128 + t76 * t174 + t35 * t184 + t340 * t294 + (-t26 + (-t117 - t491) * t174 + t333) * t297, pkin(3) * t46 + t477 * t174 + t36 * t184 - t87 * t130 + t340 * t297 + (t26 + t318) * t294, -t128 * t41 - t130 * t42 + (-t4 + t174 * t27 + (-t47 + t432) * pkin(10)) * t297 + (t5 + t488 + (qJD(4) * t128 - t46) * pkin(10)) * t294 + t332, -t128 * t480 - t174 * t42 - t184 * t27 - t239 * t47 + t294 * t339 + t297 * t314, -t130 * t480 + t174 * t41 + t184 * t28 + t239 * t46 - t294 * t314 + t297 * t339, t8 * t239 - t28 * t41 - t27 * t42 - g(1) * t418 - g(2) * t419 - g(3) * t416 + t480 * t34 + (qJD(4) * t354 + t5 * t294 - t4 * t297 + t332) * pkin(10), -t250 * t46 - t251 * t47 + t478 * t130 - t479 * t128 + (t2 + t489) * t297 + (-t16 * t174 + t1) * t294 + t332, -t130 * t481 - t16 * t184 - t17 * t384 + t174 * t479 + t228 * t46 + t251 * t82 + t294 * t327, t128 * t481 + t15 * t184 + t228 * t47 - t250 * t82 + t297 * t327 + (t17 * t294 - t478) * t174, t3 * t228 + t1 * t250 + t2 * t251 - g(1) * (-qJ(6) * t466 + t155 * t506 + t418) - g(2) * (qJ(6) * t467 + t151 * t506 + t419) - g(3) * (-qJ(6) * t464 + t222 * t506 + t416) + t481 * t17 + t479 * t16 + t478 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t469, t127 - t507, t20, t301, t82, -t130 * t74 + t317 + t487, t128 * t74 - t174 * t35 + t316, pkin(4) * t46 - t490 + (-t28 - t36) * t130 + (t27 - t450) * t128, t128 * t59 + t311 - t487 - 0.2e1 * t505, -t128 * t34 + t130 * t59 + t174 * t450 + t166 - t316 + t508, -t5 * pkin(4) - g(1) * t391 - g(2) * t392 - g(3) * t388 - t4 * qJ(5) - t27 * t36 - t28 * t450 - t34 * t59, -t490 + t497 * t46 + (t16 + t449) * t130 + (t15 - t451) * t128, t130 * t48 + t174 * t345 + 0.2e1 * t166 + t307 + t508, -t128 * t48 + (0.2e1 * qJD(6) + t19) * t174 + 0.2e1 * t410 - t308, -t1 * t497 + t2 * qJ(5) - t17 * t48 - g(1) * (-qJ(6) * t107 + t391) - g(2) * (-qJ(6) * t103 + t392) - g(3) * (t388 - t471) + t451 * t16 + t449 * t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, t528, t517, t311 + t488 - t505, t20, t517, -t528, -t410 + (-qJD(6) - t16) * t174 + t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t301, t82 + t469, -t173 - t507, t307 + t489 - t520;];
tau_reg  = t6;
