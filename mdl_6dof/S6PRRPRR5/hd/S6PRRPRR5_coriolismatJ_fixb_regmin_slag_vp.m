% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 22:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRPRR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 22:20:51
% EndTime: 2019-03-08 22:21:21
% DurationCPUTime: 16.57s
% Computational Cost: add. (8471->609), mult. (21235->895), div. (0->0), fcn. (24431->12), ass. (0->469)
t438 = sin(pkin(12));
t446 = cos(qJ(5));
t636 = t446 * t438;
t440 = cos(pkin(12));
t442 = sin(qJ(5));
t651 = t442 * t440;
t395 = t636 + t651;
t443 = sin(qJ(3));
t374 = t395 * t443;
t635 = t446 * t440;
t652 = t442 * t438;
t727 = t635 - t652;
t377 = t727 * t443;
t441 = sin(qJ(6));
t445 = cos(qJ(6));
t247 = t445 * t374 + t441 * t377;
t675 = t438 * t443;
t400 = pkin(4) * t675 + t443 * pkin(8);
t309 = pkin(5) * t374 + t400;
t696 = pkin(9) + qJ(4);
t410 = t696 * t438;
t411 = t696 * t440;
t323 = -t410 * t442 + t411 * t446;
t261 = pkin(10) * t727 + t323;
t322 = t446 * t410 + t411 * t442;
t508 = -pkin(10) * t395 - t322;
t527 = -t441 * t261 + t445 * t508;
t447 = cos(qJ(3));
t702 = -t447 / 0.2e1;
t427 = -pkin(4) * t440 - pkin(3);
t370 = -pkin(5) * t727 + t427;
t717 = -t370 / 0.2e1;
t294 = t441 * t395 - t445 * t727;
t721 = -t294 / 0.2e1;
t456 = -t247 * t717 - t309 * t721 + t527 * t702;
t376 = t395 * t447;
t412 = pkin(3) * t443 - qJ(4) * t447;
t423 = pkin(8) * t675;
t371 = t440 * t412 + t423;
t670 = t440 * t447;
t306 = pkin(4) * t443 - pkin(9) * t670 + t371;
t286 = t442 * t306;
t671 = t440 * t443;
t372 = -pkin(8) * t671 + t438 * t412;
t674 = t438 * t447;
t319 = -pkin(9) * t674 + t372;
t311 = t446 * t319;
t629 = t311 + t286;
t131 = -pkin(10) * t376 + t629;
t647 = t445 * t131;
t565 = -t647 / 0.2e1;
t378 = t727 * t447;
t287 = t446 * t306;
t655 = t442 * t319;
t557 = t287 - t655;
t698 = t443 * pkin(5);
t128 = -pkin(10) * t378 + t557 + t698;
t669 = t441 * t128;
t501 = -t669 / 0.2e1 + t565;
t8 = t456 + t501;
t439 = sin(pkin(6));
t444 = sin(qJ(2));
t673 = t439 * t444;
t691 = cos(pkin(6));
t385 = t443 * t673 - t447 * t691;
t715 = -t385 / 0.2e1;
t701 = t447 / 0.2e1;
t762 = qJD(5) + qJD(6);
t448 = cos(qJ(2));
t634 = t447 * t448;
t360 = (t438 * t444 + t440 * t634) * t439;
t637 = t446 * t360;
t359 = (-t438 * t634 + t440 * t444) * t439;
t654 = t442 * t359;
t224 = t637 + t654;
t645 = t445 * t224;
t638 = t446 * t359;
t653 = t442 * t360;
t223 = t638 - t653;
t665 = t441 * t223;
t499 = -t665 / 0.2e1 - t645 / 0.2e1;
t672 = t439 * t448;
t581 = t438 * t672;
t560 = t691 * t443;
t582 = t447 * t673;
t386 = t560 + t582;
t680 = t386 * t440;
t317 = -t581 + t680;
t580 = t440 * t672;
t506 = -t386 * t438 - t580;
t187 = t317 * t442 - t446 * t506;
t188 = t446 * t317 + t442 * t506;
t42 = t445 * t187 + t441 * t188;
t772 = t247 * t715 + t42 * t702;
t754 = t499 - t772;
t777 = qJD(1) * t754;
t245 = t385 * t727;
t643 = t445 * t245;
t244 = t385 * t395;
t663 = t441 * t244;
t497 = -t663 / 0.2e1 + t643 / 0.2e1;
t745 = t385 * t294;
t756 = t745 / 0.2e1 + t497;
t776 = qJD(1) * t756;
t644 = t445 * t244;
t662 = t441 * t245;
t496 = t662 / 0.2e1 + t644 / 0.2e1;
t524 = -t445 * t395 - t441 * t727;
t744 = t385 * t524;
t758 = t744 / 0.2e1 + t496;
t775 = qJD(1) * t758;
t646 = t445 * t223;
t664 = t441 * t224;
t498 = -t664 / 0.2e1 + t646 / 0.2e1;
t43 = t441 * t187 - t445 * t188;
t365 = t445 * t377;
t658 = t441 * t374;
t728 = t365 - t658;
t773 = t43 * t701 + t715 * t728;
t761 = t498 + t773;
t774 = qJD(1) * t761;
t127 = t445 * t261 + t441 * t508;
t720 = t524 / 0.2e1;
t771 = t127 * t701 - t309 * t720;
t770 = t762 * t127;
t769 = t762 * t527;
t768 = qJD(2) * t754 + qJD(3) * t756;
t767 = qJD(2) * t761 + qJD(3) * t758;
t755 = t499 + t772;
t757 = -t745 / 0.2e1 + t497;
t766 = qJD(2) * t755 + qJD(3) * t757 + t762 * t42;
t759 = -t744 / 0.2e1 + t496;
t760 = t498 - t773;
t765 = qJD(2) * t760 + qJD(3) * t759 + t762 * t43;
t735 = t247 ^ 2 - t728 ^ 2;
t764 = qJD(2) * t735;
t734 = t294 ^ 2 - t524 ^ 2;
t763 = qJD(3) * t734;
t753 = t247 * t294;
t752 = t247 * t309;
t589 = t447 * qJD(2);
t751 = t247 * t589;
t620 = qJD(2) * t728;
t750 = t247 * t620;
t749 = t247 * t720;
t615 = qJD(3) * t524;
t748 = t294 * t615;
t747 = t309 * t728;
t231 = t728 * t589;
t630 = t762 * t294;
t741 = -t615 + t620;
t545 = -pkin(3) * t447 - qJ(4) * t443;
t405 = -pkin(2) + t545;
t389 = t440 * t405;
t361 = -pkin(8) * t674 + t389;
t424 = pkin(8) * t670;
t362 = t438 * t405 + t424;
t705 = -t440 / 0.2e1;
t502 = t362 * t705 + t361 * t438 / 0.2e1;
t434 = t447 * pkin(8);
t707 = t434 / 0.2e1;
t202 = t707 + t502;
t740 = qJD(4) * t247;
t739 = qJD(4) * t294;
t738 = qJD(4) * t524;
t737 = qJD(5) * t247;
t736 = qJD(6) * t247;
t723 = t762 * t524;
t732 = -qJD(2) * t247 - qJD(3) * t294;
t731 = t427 / 0.2e1;
t492 = t635 / 0.2e1 - t652 / 0.2e1;
t639 = t445 * t378;
t657 = t441 * t376;
t628 = -t657 / 0.2e1 + t639 / 0.2e1;
t722 = t728 / 0.2e1;
t564 = t365 / 0.2e1;
t716 = -t377 / 0.2e1;
t714 = t385 / 0.2e1;
t713 = -t386 / 0.2e1;
t712 = t386 / 0.2e1;
t711 = t727 / 0.2e1;
t710 = -t395 / 0.2e1;
t709 = t395 / 0.2e1;
t708 = t400 / 0.2e1;
t706 = -t438 / 0.2e1;
t704 = -t443 / 0.2e1;
t703 = t443 / 0.2e1;
t700 = pkin(5) * t377;
t699 = pkin(5) * t395;
t697 = t447 * pkin(5);
t22 = t753 / 0.2e1 + t728 * t720 - t247 * t721 + t524 * t722;
t37 = t524 * t728 + t753;
t695 = t22 * qJD(5) + t37 * qJD(6);
t60 = -t294 * t722 + t749;
t61 = t721 * t728 + t749;
t694 = t60 * qJD(5) + t61 * qJD(6);
t693 = pkin(5) * qJD(5);
t692 = pkin(5) * qJD(6);
t690 = t294 * t447;
t689 = t524 * t447;
t688 = t317 * t440;
t302 = -pkin(9) * t671 + t389 + (-pkin(8) * t438 - pkin(4)) * t447;
t318 = -pkin(9) * t675 + t362;
t173 = -t446 * t302 + t318 * t442;
t129 = -pkin(10) * t377 - t173;
t668 = t441 * t129;
t174 = t302 * t442 + t318 * t446;
t130 = -pkin(10) * t374 + t174;
t667 = t441 * t130;
t666 = t441 * t131;
t656 = t441 * t378;
t650 = t445 * t128;
t649 = t445 * t129;
t648 = t445 * t130;
t364 = t445 * t376;
t249 = t364 + t656;
t252 = t639 - t657;
t57 = -t247 * t252 - t249 * t728;
t633 = t57 * qJD(2);
t478 = t506 * t438;
t88 = (t386 + t478 - t688) * t385;
t632 = t88 * qJD(1);
t579 = t443 * t672;
t89 = t317 * t360 + t359 * t506 + t385 * t579;
t631 = t89 * qJD(1);
t401 = pkin(4) * t674 + t434;
t418 = t438 ^ 2 + t440 ^ 2;
t114 = t247 * t443 - t249 * t447;
t627 = qJD(2) * t114;
t115 = t252 * t447 - t443 * t728;
t626 = qJD(2) * t115;
t546 = -t364 / 0.2e1 - t656 / 0.2e1;
t137 = t689 / 0.2e1 + t546;
t625 = qJD(2) * t137;
t138 = -t690 / 0.2e1 + t628;
t624 = qJD(2) * t138;
t574 = t294 * t701;
t140 = -t574 + t628;
t623 = qJD(2) * t140;
t141 = -t574 - t628;
t622 = qJD(2) * t141;
t243 = t564 - t365 / 0.2e1;
t621 = qJD(2) * t243;
t253 = t374 * t443 - t376 * t447;
t619 = qJD(2) * t253;
t254 = -t377 * t443 + t378 * t447;
t618 = qJD(2) * t254;
t617 = qJD(2) * t377;
t616 = qJD(2) * t439;
t614 = qJD(3) * t370;
t613 = qJD(3) * t395;
t612 = qJD(3) * t427;
t611 = qJD(4) * t447;
t610 = qJD(5) * t728;
t609 = qJD(5) * t395;
t608 = qJD(5) * t447;
t606 = qJD(6) * t370;
t476 = t524 * t701;
t135 = t476 - t546;
t605 = t135 * qJD(2);
t136 = t476 + t546;
t604 = t136 * qJD(2);
t163 = -t374 * t378 - t376 * t377;
t603 = t163 * qJD(2);
t200 = -t361 * t443 + (t371 - 0.2e1 * t423) * t447;
t602 = t200 * qJD(2);
t493 = t651 / 0.2e1 + t636 / 0.2e1;
t475 = t710 + t493;
t268 = t475 * t447;
t599 = t268 * qJD(2);
t269 = (t710 - t493) * t447;
t598 = t269 * qJD(2);
t270 = t447 * t492 - t702 * t727;
t597 = t270 * qJD(2);
t474 = -t727 / 0.2e1 + t492;
t271 = t474 * t447;
t596 = t271 * qJD(2);
t595 = t386 * qJD(3);
t437 = t443 ^ 2;
t392 = t418 * t437;
t594 = t392 * qJD(2);
t387 = t727 * qJD(5);
t593 = t418 * qJD(3);
t420 = t447 ^ 2 - t437;
t592 = t420 * qJD(2);
t591 = t443 * qJD(2);
t590 = t443 * qJD(3);
t588 = t447 * qJD(3);
t587 = pkin(2) * t591;
t586 = pkin(2) * t589;
t585 = pkin(8) * t588;
t584 = t700 / 0.2e1;
t583 = t699 / 0.2e1;
t578 = t443 * t611;
t577 = t448 * t616;
t576 = t443 * t588;
t575 = t443 * t589;
t573 = t317 * t704;
t570 = t386 * t703;
t569 = -t672 / 0.2e1;
t568 = t672 / 0.2e1;
t567 = -t666 / 0.2e1;
t561 = -t286 / 0.2e1 - t311 / 0.2e1;
t559 = pkin(5) * t762;
t558 = t418 * t385;
t358 = t377 * t589;
t556 = qJD(3) * t269 - t358;
t555 = -qJD(5) + t589;
t554 = -qJD(6) + t589;
t553 = qJD(4) + t612;
t552 = t443 * t569;
t551 = t443 * t568;
t550 = t698 / 0.2e1 + t128 / 0.2e1;
t123 = t129 - t697;
t549 = t697 / 0.2e1 - t123 / 0.2e1;
t548 = t589 - qJD(5) / 0.2e1;
t547 = t287 / 0.2e1 - t655 / 0.2e1;
t450 = t249 * t714 + t247 * t712 + t42 * t704 + (t644 + t662) * t702;
t542 = t294 * t551;
t11 = t542 - t450;
t310 = pkin(5) * t376 + t401;
t47 = -t445 * t123 + t667;
t5 = (t650 - t666) * t447 + t47 * t443 - t310 * t247 - t309 * t249;
t544 = -t11 * qJD(1) - t5 * qJD(2);
t449 = t252 * t714 + t728 * t712 + t43 * t703 + (-t643 + t663) * t701;
t541 = t524 * t551;
t12 = -t541 - t449;
t48 = t441 * t123 + t648;
t6 = (t647 + t669) * t447 - t48 * t443 + t310 * t728 + t309 * t252;
t543 = -t12 * qJD(1) + t6 * qJD(2);
t53 = -t648 - t668;
t19 = -t247 * t700 + t447 * t53 - t747;
t540 = qJD(2) * t19 + t774;
t54 = t649 - t667;
t20 = t447 * t54 + t700 * t728 - t752;
t539 = -qJD(2) * t20 + t777;
t34 = -t447 * t48 - t747;
t538 = qJD(2) * t34 + t774;
t33 = -t447 * t47 - t752;
t537 = -qJD(2) * t33 + t777;
t465 = t244 * t701 - t374 * t712 + t376 * t715;
t38 = (-t727 * t568 + t187 / 0.2e1) * t443 + t465;
t44 = t173 * t443 - t401 * t374 - t400 * t376 + t447 * t557;
t536 = -t38 * qJD(1) - t44 * qJD(2);
t464 = -t245 * t702 + t377 * t713 + t378 * t715;
t39 = (t395 * t568 + t188 / 0.2e1) * t443 + t464;
t45 = -t174 * t443 + t401 * t377 + t400 * t378 + t447 * t629;
t535 = -t39 * qJD(1) + t45 * qJD(2);
t495 = -t654 / 0.2e1 - t637 / 0.2e1;
t505 = t187 * t702 - t374 * t714;
t63 = t495 - t505;
t99 = -t173 * t447 - t374 * t400;
t534 = qJD(1) * t63 - qJD(2) * t99;
t469 = t506 * t705;
t459 = t317 * t706 + t469;
t457 = t459 * t447;
t503 = t360 * t440 / 0.2e1 + t359 * t706;
t91 = t457 - t503;
t96 = (t361 * t447 + t371 * t443) * t440 + (t362 * t447 + t372 * t443) * t438;
t533 = -t91 * qJD(1) + t96 * qJD(2);
t507 = t129 / 0.2e1 + t549;
t15 = t507 * t441;
t532 = qJD(2) * t15;
t17 = t507 * t445;
t531 = qJD(2) * t17;
t530 = qJD(3) * t22 + t764;
t529 = qJD(2) * t22 + t763;
t528 = qJD(3) * t37 + t764;
t525 = -t371 * t438 + t372 * t440;
t100 = -t174 * t447 - t400 * t377;
t494 = -t653 / 0.2e1 + t638 / 0.2e1;
t504 = t188 * t701 + t377 * t714;
t62 = t494 - t504;
t523 = qJD(1) * t62 + qJD(2) * t100;
t116 = pkin(8) ^ 2 * t443 * t447 + t361 * t371 + t362 * t372;
t460 = -t317 * t372 / 0.2e1 - t506 * t371 / 0.2e1;
t477 = t503 * qJ(4);
t31 = (pkin(3) * t569 + pkin(8) * t713) * t443 + t477 + (-t434 / 0.2e1 - t502) * t385 + t460;
t522 = -t31 * qJD(1) + t116 * qJD(2);
t159 = t475 * t385;
t462 = t323 * t701 + t377 * t731 + t395 * t708;
t66 = -t462 + t547;
t521 = t159 * qJD(1) + t66 * qJD(2);
t160 = t474 * t385;
t463 = t322 * t701 + t374 * t731 - t708 * t727;
t67 = t463 + t561;
t520 = t160 * qJD(1) + t67 * qJD(2);
t201 = t372 * t447 + (-t362 + 0.2e1 * t424) * t443;
t92 = (t438 * t568 + t317 / 0.2e1 - t680 / 0.2e1) * t443;
t519 = t92 * qJD(1) - t201 * qJD(2);
t518 = qJD(2) * t37 + t763;
t143 = (t568 - t459) * t443;
t205 = (t361 * t440 + t362 * t438) * t443;
t517 = qJD(1) * t143 + qJD(2) * t205;
t105 = -t374 * t727 - t395 * t377;
t204 = t374 ^ 2 - t377 ^ 2;
t516 = qJD(2) * t204 + qJD(3) * t105;
t262 = -t395 ^ 2 + t727 ^ 2;
t515 = qJD(2) * t105 + qJD(3) * t262;
t181 = 0.2e1 * t564 - t658;
t513 = qJD(2) * t181 - t615;
t511 = -qJD(2) * t374 + qJD(3) * t727;
t510 = t613 + t617;
t509 = t736 + t737;
t500 = t567 + t650 / 0.2e1;
t491 = -qJD(3) * t61 + t750;
t490 = qJD(3) * t60 - t750;
t489 = -qJD(2) * t61 - t748;
t488 = qJD(2) * t60 + t748;
t186 = -t374 * t709 + t377 * t711;
t487 = qJD(3) * t186 - t374 * t617;
t486 = -qJD(2) * t186 - t613 * t727;
t485 = qJD(3) * t268 + qJD(5) * t377 - t358;
t484 = qJD(3) * t136 - qJD(6) * t243 - t231;
t1 = (t441 * t704 - t524 * t716 + t710 * t728) * pkin(5) + t8;
t98 = t294 * t370 + t524 * t699;
t480 = -t1 * qJD(2) - t98 * qJD(3) - t776;
t451 = t717 * t728 - t771;
t2 = (t247 * t710 + t294 * t716 + t445 * t703) * pkin(5) + t451 + t500;
t97 = -t294 * t699 + t370 * t524;
t479 = -t2 * qJD(2) - t97 * qJD(3) - t775;
t458 = t688 / 0.2e1 - t478 / 0.2e1;
t472 = t560 / 0.2e1 + t582 / 0.2e1;
t132 = -t458 + t472;
t403 = t418 * qJ(4);
t473 = qJD(1) * t132 + qJD(2) * t202 - qJD(3) * t403;
t471 = qJD(2) * t8 + t294 * t614 + t776;
t466 = t370 * t722 + t771;
t7 = -t466 + t500;
t470 = qJD(2) * t7 + t524 * t614 + t775;
t468 = qJD(3) * t135 + qJD(6) * t181 - t231 + t610;
t461 = qJD(3) * t545 + t611;
t431 = -t591 / 0.2e1;
t430 = t591 / 0.2e1;
t429 = t590 / 0.2e1;
t390 = t548 * t443;
t373 = (-qJD(6) / 0.2e1 + t548) * t443;
t203 = t707 - t502;
t189 = qJD(3) * t270 - t374 * t589;
t175 = t186 * qJD(5);
t162 = (t493 + t709) * t385;
t161 = (t492 + t711) * t385;
t144 = t438 * t573 + t443 * t469 + t551;
t142 = -t689 / 0.2e1 + t546;
t139 = t690 / 0.2e1 + t628;
t134 = t271 * qJD(3) + t374 * t555;
t133 = t458 + t472;
t104 = t105 * qJD(5);
t95 = t438 * t551 + t440 * t570 + t573;
t94 = t438 * t570 + t440 * t552 + t506 * t703;
t90 = t457 + t503;
t69 = t462 + t547;
t68 = -t463 + t561;
t65 = t494 + t504;
t64 = t495 + t505;
t55 = qJD(3) * t140 - t751;
t41 = t188 * t704 + t395 * t551 - t464;
t40 = t187 * t704 - t551 * t727 - t465;
t35 = -t141 * qJD(3) + t247 * t555 - t736;
t32 = pkin(3) * t552 + pkin(8) * t570 + t202 * t385 - t460 + t477;
t18 = t667 - t649 / 0.2e1 + t549 * t445;
t16 = -t648 - t668 / 0.2e1 + t549 * t441;
t14 = -t541 + t449;
t13 = t542 + t450;
t10 = t466 + t500;
t9 = -t456 + t501;
t4 = -t441 * t550 - t524 * t584 + t583 * t728 - t456 + t565;
t3 = t247 * t583 + t294 * t584 + t445 * t550 - t451 + t567;
t21 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t89 + qJD(3) * t88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -t444 * t616, -t577, 0, 0, 0, 0, 0 (-t444 * t589 - t448 * t590) * t439 (t444 * t591 - t448 * t588) * t439 (-t359 * t447 + t437 * t581) * qJD(2) + t94 * qJD(3) (t360 * t447 + t437 * t580) * qJD(2) + t95 * qJD(3), t90 * qJD(3) + (-t359 * t440 - t360 * t438) * t591, t631 + (pkin(8) * t437 * t672 + t359 * t361 + t360 * t362) * qJD(2) + t32 * qJD(3) + t144 * qJD(4), 0, 0, 0, 0, 0 (-t223 * t447 + t374 * t579) * qJD(2) + t40 * qJD(3) + t65 * qJD(5) (t224 * t447 + t377 * t579) * qJD(2) + t41 * qJD(3) + t64 * qJD(5), 0, 0, 0, 0, 0 (-(t646 - t664) * t447 + t247 * t579) * qJD(2) + t13 * qJD(3) + t762 * t760 ((t645 + t665) * t447 + t728 * t579) * qJD(2) + t14 * qJD(3) + t762 * t755; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t443 * t577 - t595, t385 * qJD(3) - t447 * t577, qJD(2) * t94 - t440 * t595, qJD(2) * t95 + t438 * t595, t90 * qJD(2) - qJD(3) * t558, t632 + t32 * qJD(2) + (-t386 * pkin(3) - qJ(4) * t558) * qJD(3) + t133 * qJD(4), 0, 0, 0, 0, 0, qJD(2) * t40 + qJD(5) * t162 - t595 * t727, qJD(2) * t41 + qJD(5) * t161 + t395 * t595, 0, 0, 0, 0, 0, qJD(2) * t13 + t294 * t595 + t759 * t762, qJD(2) * t14 - t524 * t595 + t757 * t762; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t144 + qJD(3) * t133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t65 + qJD(3) * t162 - qJD(5) * t188, qJD(2) * t64 + qJD(3) * t161 + qJD(5) * t187, 0, 0, 0, 0, 0, t765, t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t765, t766; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t92 * qJD(3), t91 * qJD(3), -qJD(3) * t31 - qJD(4) * t143 - t631, 0, 0, 0, 0, 0, -qJD(3) * t38 - qJD(5) * t62, -qJD(3) * t39 - qJD(5) * t63, 0, 0, 0, 0, 0, -qJD(3) * t11 - t761 * t762, -qJD(3) * t12 - t754 * t762; 0, 0, 0, 0, t576, t420 * qJD(3), 0, 0, 0, -pkin(2) * t590, -pkin(2) * t588, -qJD(3) * t200 + t440 * t578, qJD(3) * t201 - t438 * t578, -qJD(3) * t96 + qJD(4) * t392, qJD(3) * t116 - qJD(4) * t205 (qJD(3) * t378 - qJD(5) * t374) * t377, qJD(3) * t163 + qJD(5) * t204, -qJD(3) * t254 + t374 * t608, -qJD(3) * t253 + t377 * t608, -t576, -qJD(3) * t44 - qJD(5) * t100 + t377 * t611, qJD(3) * t45 + qJD(5) * t99 - t374 * t611 (qJD(3) * t252 - t509) * t728, qJD(3) * t57 + t735 * t762, -t115 * qJD(3) + t447 * t509, -t114 * qJD(3) + (qJD(6) * t728 + t610) * t447, -t576, -qJD(3) * t5 - qJD(5) * t19 - qJD(6) * t34 + t611 * t728, qJD(3) * t6 + qJD(5) * t20 + qJD(6) * t33 - t247 * t611; 0, 0, 0, 0, t575, t592, t588, -t590, 0, -t585 - t587, pkin(8) * t590 - t586, -t424 * qJD(3) + t438 * t461 - t602, t438 * t585 + t440 * t461 - t519, qJD(3) * t525 - t533 (-pkin(3) * t434 + qJ(4) * t525) * qJD(3) + t203 * qJD(4) + t522, t378 * t510 + t175, t603 + (-t376 * t395 + t378 * t727) * qJD(3) + t104, qJD(5) * t271 + t395 * t590 - t618, -qJD(5) * t268 + t590 * t727 - t619, -t390 (-t322 * t443 + t376 * t427 - t401 * t727) * qJD(3) - t269 * qJD(4) + t69 * qJD(5) + t536 (-t323 * t443 + t378 * t427 + t395 * t401) * qJD(3) + t270 * qJD(4) + t68 * qJD(5) + t535, t252 * t741 + t694, t633 + (t249 * t524 - t252 * t294) * qJD(3) + t695, -qJD(5) * t141 + qJD(6) * t139 - t524 * t590 - t626, -qJD(5) * t135 + qJD(6) * t142 - t294 * t590 - t627, -t373 (t249 * t370 + t294 * t310 + t443 * t527) * qJD(3) - t136 * qJD(4) + t3 * qJD(5) + t10 * qJD(6) + t544 (-t127 * t443 + t252 * t370 - t310 * t524) * qJD(3) + t140 * qJD(4) + t4 * qJD(5) + t9 * qJD(6) + t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(3) * t438 + t440 * t591) * t447 (qJD(3) * t440 - t438 * t591) * t447, t594, qJD(3) * t203 - t517, 0, 0, 0, 0, 0, -t556, t189, 0, 0, 0, 0, 0, -t484, t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t487, t516, t134, -t485, t429, qJD(3) * t69 - qJD(5) * t174 - t523, qJD(3) * t68 + qJD(5) * t173 - t534, t490, t530, t35, -t468, t429, qJD(3) * t3 + qJD(5) * t53 + qJD(6) * t16 - t540, qJD(3) * t4 - qJD(5) * t54 + qJD(6) * t18 - t539; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t491, t528, t139 * qJD(3) + t247 * t554 - t737, t142 * qJD(3) - t181 * qJD(5) + t554 * t728, t429, qJD(3) * t10 + qJD(4) * t243 + qJD(5) * t16 - qJD(6) * t48 - t538, qJD(3) * t9 + qJD(5) * t18 + qJD(6) * t47 - t537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t92 * qJD(2), -t91 * qJD(2), qJD(2) * t31 - qJD(4) * t132 - t632, 0, 0, 0, 0, 0, qJD(2) * t38 - qJD(5) * t159, qJD(2) * t39 - qJD(5) * t160, 0, 0, 0, 0, 0, qJD(2) * t11 - t758 * t762, qJD(2) * t12 - t756 * t762; 0, 0, 0, 0, -t575, -t592, 0, 0, 0, t587, t586, t602, t519, t533, -qJD(4) * t202 - t522, -t378 * t617 + t175, t104 - t603, -qJD(5) * t270 + t618, -qJD(5) * t269 + t619, t390, -qJD(4) * t268 - qJD(5) * t66 - t536, -qJD(4) * t271 - qJD(5) * t67 - t535, -t252 * t620 + t694, -t633 + t695, -qJD(5) * t140 - qJD(6) * t138 + t626, -qJD(5) * t136 - qJD(6) * t137 + t627, t373, -qJD(4) * t135 - qJD(5) * t2 - qJD(6) * t7 - t544, qJD(4) * t141 - qJD(5) * t1 - qJD(6) * t8 - t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418 * qJD(4), t403 * qJD(4), t395 * t387, t262 * qJD(5), 0, 0, 0, t427 * t609, t427 * t387, t630 * t524, t762 * t734, 0, 0, 0, -qJD(5) * t97 - t524 * t606, -qJD(5) * t98 - t294 * t606; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t593, -t473, 0, 0, 0, 0, 0, -t599, -t596, 0, 0, 0, 0, 0, -t605, t622; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t486, t515, t387 - t597, -t598 - t609, t431, -qJD(5) * t323 + t395 * t612 - t521, qJD(5) * t322 + t612 * t727 - t520, t488, t529, -t623 - t630, -t604 + t723, t431, t479 - t770, t480 - t769; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t489, t518, -t624 - t630, -t625 + t723, t431, -t470 - t770, -t471 - t769; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t143 + qJD(3) * t132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t440 * t575, t438 * t575, -t594, qJD(3) * t202 + t517, 0, 0, 0, 0, 0, t485, t134, 0, 0, 0, 0, 0, t468, t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t593, t473, 0, 0, 0, 0, 0, t599 + t609, t387 + t596, 0, 0, 0, 0, 0, t605 - t723, -t622 - t630; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t510, t511, 0, 0, 0, 0, 0, t741, t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t513, t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t62 + qJD(3) * t159, qJD(2) * t63 + qJD(3) * t160, 0, 0, 0, 0, 0, t767, t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487, -t516, t189, t556, t429, qJD(3) * t66 - qJD(4) * t377 + t523, qJD(3) * t67 + qJD(4) * t374 + t534, -t490, -t530, t55, t484, t429, qJD(3) * t2 - qJD(4) * t728 + qJD(6) * t15 + t540, qJD(3) * t1 + qJD(6) * t17 + t539 + t740; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t486, -t515, t597, t598, t430, -t395 * t553 + t521, -t553 * t727 + t520, -t488, -t529, t623, t604, t430, -t479 + t738, -t480 + t739; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t510, -t511, 0, 0, 0, 0, 0, -t741, -t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t441 * t692, -t445 * t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t621, 0, -t441 * t559 + t532, -t445 * t559 + t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t767, t768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t491, -t528, qJD(3) * t138 - t751, qJD(3) * t137 + qJD(5) * t243 - t231, t429, qJD(3) * t7 - qJD(4) * t181 - qJD(5) * t15 + t538, qJD(3) * t8 - qJD(5) * t17 + t537 + t740; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t489, -t518, t624, t625, t430, t470 + t738, t471 + t739; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t513, -t732; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t621, 0, t441 * t693 - t532, t445 * t693 - t531; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t21;
