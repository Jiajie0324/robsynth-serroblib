% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6PRRPRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d5,d6,theta1,theta4]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 05:29
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6PRRPRR5_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRPRR5_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRPRR5_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRPRR5_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRPRR5_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRPRR5_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 05:26:55
% EndTime: 2019-05-05 05:27:45
% DurationCPUTime: 45.04s
% Computational Cost: add. (402049->1016), mult. (845912->1653), div. (0->0), fcn. (633737->14), ass. (0->724)
t1088 = g(3) - qJDD(1);
t981 = sin(pkin(6));
t1068 = t981 * t1088;
t980 = sin(pkin(11));
t983 = cos(pkin(11));
t1069 = g(1) * t980 - t983 * g(2);
t984 = cos(pkin(6));
t1137 = t984 * t1069 - t1068;
t953 = g(1) * t983 + g(2) * t980;
t989 = sin(qJ(2));
t993 = cos(qJ(2));
t871 = -t1137 * t993 - t953 * t989;
t875 = t1137 * t989 - t993 * t953;
t803 = t871 * t989 + t875 * t993;
t1136 = t803 * t981;
t986 = sin(qJ(6));
t988 = sin(qJ(3));
t1086 = qJD(2) * t988;
t979 = sin(pkin(12));
t982 = cos(pkin(12));
t936 = -t982 * qJD(3) + t1086 * t979;
t937 = qJD(3) * t979 + t1086 * t982;
t987 = sin(qJ(5));
t991 = cos(qJ(5));
t887 = t991 * t936 + t937 * t987;
t889 = -t936 * t987 + t937 * t991;
t990 = cos(qJ(6));
t823 = t990 * t887 + t889 * t986;
t825 = -t887 * t986 + t889 * t990;
t1105 = t823 * t825;
t992 = cos(qJ(3));
t1078 = qJDD(2) * t992;
t1082 = qJD(2) * qJD(3);
t969 = t988 * t1082;
t946 = -t969 + t1078;
t940 = -qJDD(5) + t946;
t934 = -qJDD(6) + t940;
t995 = -t934 - t1105;
t1135 = t986 * t995;
t1100 = t887 * t889;
t998 = -t940 - t1100;
t1134 = t987 * t998;
t1133 = t990 * t995;
t1132 = t991 * t998;
t1085 = qJD(2) * t992;
t966 = -qJD(5) + t1085;
t958 = -qJD(6) + t966;
t804 = t823 * t958;
t1070 = t992 * t1082;
t1080 = qJDD(2) * t988;
t945 = t1070 + t1080;
t1020 = qJDD(3) * t982 - t945 * t979;
t917 = qJDD(3) * t979 + t945 * t982;
t1066 = -t991 * t1020 + t917 * t987;
t798 = -qJD(5) * t889 - t1066;
t799 = -t887 * qJD(5) + t1020 * t987 + t991 * t917;
t997 = qJD(6) * t823 - t798 * t986 - t799 * t990;
t1131 = t804 - t997;
t865 = t887 * t966;
t760 = t865 - t799;
t1130 = t865 + t799;
t922 = t936 * t1085;
t870 = -t917 + t922;
t1099 = t936 * t937;
t1017 = -t946 - t1099;
t1129 = t1017 * t979;
t1128 = t1017 * t982;
t1127 = t980 * t1088;
t1126 = t983 * t1088;
t938 = t981 * t1069;
t1059 = t1088 * t984 + t938;
t1016 = t989 * t1059;
t1015 = t993 * t1059;
t923 = t937 * t1085;
t867 = t1020 - t923;
t899 = -t1069 * t980 - t983 * t953;
t756 = (qJD(5) + t966) * t889 + t1066;
t1067 = -t990 * t798 + t799 * t986;
t654 = (qJD(6) + t958) * t825 + t1067;
t898 = t1069 * t983 - t980 * t953;
t821 = t823 ^ 2;
t822 = t825 ^ 2;
t1125 = t887 ^ 2;
t882 = t889 ^ 2;
t1124 = t936 ^ 2;
t935 = t937 ^ 2;
t957 = t958 ^ 2;
t964 = t966 ^ 2;
t1123 = qJD(3) ^ 2;
t1122 = pkin(3) * t988;
t1121 = pkin(3) * t992;
t1120 = pkin(7) * t984;
t994 = qJD(2) ^ 2;
t855 = -t994 * pkin(2) + qJDD(2) * pkin(8) + t875;
t829 = -t988 * t1059 + t992 * t855;
t1062 = -qJ(4) * t988 - t1121;
t943 = t1062 * qJD(2);
t781 = -pkin(3) * t1123 + qJDD(3) * qJ(4) + t1085 * t943 + t829;
t1060 = t945 + t1070;
t854 = -qJDD(2) * pkin(2) - t994 * pkin(8) + t871;
t797 = -t1060 * qJ(4) + (-t946 + t969) * pkin(3) + t854;
t712 = 0.2e1 * qJD(4) * t937 + t781 * t979 - t982 * t797;
t671 = t1017 * pkin(4) + pkin(9) * t870 - t712;
t713 = -0.2e1 * qJD(4) * t936 + t982 * t781 + t979 * t797;
t918 = -pkin(4) * t1085 - pkin(9) * t937;
t685 = -pkin(4) * t1124 + pkin(9) * t1020 + t1085 * t918 + t713;
t598 = -t991 * t671 + t685 * t987;
t556 = t998 * pkin(5) + pkin(10) * t760 - t598;
t599 = t987 * t671 + t991 * t685;
t856 = -pkin(5) * t966 - pkin(10) * t889;
t560 = -pkin(5) * t1125 + pkin(10) * t798 + t856 * t966 + t599;
t497 = -t990 * t556 + t560 * t986;
t498 = t986 * t556 + t990 * t560;
t444 = -t497 * t990 + t498 * t986;
t1119 = t444 * t987;
t1118 = t444 * t991;
t530 = -t598 * t991 + t599 * t987;
t1117 = t530 * t979;
t1116 = t530 * t982;
t912 = t992 * t1059;
t780 = qJDD(4) + t912 - t1123 * qJ(4) - qJDD(3) * pkin(3) + (qJD(2) * t943 + t855) * t988;
t725 = -t1020 * pkin(4) - t1124 * pkin(9) + t918 * t937 + t780;
t633 = -t798 * pkin(5) - pkin(10) * t1125 + t856 * t889 + t725;
t1115 = t633 * t986;
t1114 = t633 * t990;
t1113 = t725 * t987;
t1112 = t725 * t991;
t727 = t934 - t1105;
t1111 = t727 * t986;
t1110 = t727 * t990;
t1109 = t780 * t979;
t1108 = t780 * t982;
t806 = t940 - t1100;
t1107 = t806 * t987;
t1106 = t806 * t991;
t1104 = t854 * t988;
t1103 = t854 * t992;
t872 = t946 - t1099;
t1102 = t872 * t979;
t1101 = t872 * t982;
t1098 = t946 * t988;
t965 = t988 * t994 * t992;
t954 = -t965 + qJDD(3);
t1097 = t954 * t988;
t1096 = t954 * t992;
t955 = qJDD(3) + t965;
t1095 = t955 * t988;
t1094 = t958 * t986;
t1093 = t958 * t990;
t1092 = t966 * t987;
t1091 = t966 * t991;
t975 = t988 ^ 2;
t1090 = t975 * t994;
t976 = t992 ^ 2;
t1087 = t975 + t976;
t1081 = qJDD(2) * t981;
t1079 = qJDD(2) * t989;
t1077 = qJDD(2) * t993;
t1076 = t988 * t1105;
t1075 = t992 * t1105;
t1074 = t988 * t1100;
t1073 = t992 * t1100;
t1072 = t988 * t1099;
t1071 = t992 * t1099;
t445 = t497 * t986 + t990 * t498;
t531 = t598 * t987 + t991 * t599;
t828 = t855 * t988 + t912;
t735 = t828 * t988 + t992 * t829;
t1065 = t989 * t965;
t1064 = t993 * t965;
t734 = t828 * t992 - t829 * t988;
t948 = t1087 * qJDD(2);
t972 = t976 * t994;
t951 = t972 + t1090;
t896 = t948 * t993 - t951 * t989;
t1061 = pkin(7) * t896 + t734 * t989;
t415 = t445 * t987 + t1118;
t416 = t445 * t991 - t1119;
t388 = -t415 * t979 + t416 * t982;
t385 = t388 * t992 + t633 * t988;
t387 = t415 * t982 + t416 * t979;
t1058 = t385 * t989 - t387 * t993;
t658 = t804 + t997;
t572 = -t654 * t986 + t658 * t990;
t574 = -t654 * t990 - t658 * t986;
t515 = t572 * t991 + t574 * t987;
t517 = -t572 * t987 + t574 * t991;
t458 = -t515 * t979 + t517 * t982;
t701 = -t821 - t822;
t449 = t458 * t992 + t701 * t988;
t456 = t515 * t982 + t517 * t979;
t1057 = t449 * t989 - t456 * t993;
t653 = (qJD(6) - t958) * t825 + t1067;
t573 = t1131 * t990 - t653 * t986;
t575 = -t1131 * t986 - t653 * t990;
t516 = t573 * t991 + t575 * t987;
t518 = -t573 * t987 + t575 * t991;
t459 = -t516 * t979 + t518 * t982;
t736 = -t822 + t821;
t453 = t459 * t992 - t736 * t988;
t457 = -t516 * t982 - t518 * t979;
t1056 = t453 * t989 + t457 * t993;
t473 = t531 * t982 - t1117;
t468 = t473 * t992 + t725 * t988;
t472 = t531 * t979 + t1116;
t1055 = t468 * t989 - t472 * t993;
t732 = -t957 - t821;
t661 = t732 * t986 + t1133;
t662 = t732 * t990 - t1135;
t578 = t661 * t991 + t662 * t987;
t579 = -t661 * t987 + t662 * t991;
t521 = -t578 * t979 + t579 * t982;
t489 = t521 * t992 + t653 * t988;
t520 = t578 * t982 + t579 * t979;
t1054 = t489 * t989 - t520 * t993;
t696 = -qJD(6) * t825 - t1067;
t646 = -t1094 * t823 + t696 * t990;
t647 = -t1093 * t823 - t696 * t986;
t566 = t646 * t991 + t647 * t987;
t568 = -t646 * t987 + t647 * t991;
t508 = -t566 * t979 + t568 * t982;
t494 = t508 * t992 - t1076;
t506 = -t566 * t982 - t568 * t979;
t1053 = t494 * t989 + t506 * t993;
t648 = -t1093 * t825 - t986 * t997;
t649 = t1094 * t825 - t990 * t997;
t567 = t648 * t991 + t649 * t987;
t569 = -t648 * t987 + t649 * t991;
t509 = -t567 * t979 + t569 * t982;
t495 = t509 * t992 + t1076;
t507 = -t567 * t982 - t569 * t979;
t1052 = t495 * t989 + t507 * t993;
t782 = -t822 - t957;
t686 = t782 * t990 + t1111;
t687 = -t782 * t986 + t1110;
t600 = t686 * t991 + t687 * t987;
t601 = -t686 * t987 + t687 * t991;
t536 = -t600 * t979 + t601 * t982;
t505 = t1131 * t988 + t536 * t992;
t535 = t600 * t982 + t601 * t979;
t1051 = t505 * t989 - t535 * t993;
t801 = -t822 + t957;
t692 = t801 * t990 + t1135;
t694 = -t801 * t986 + t1133;
t608 = t692 * t991 + t694 * t987;
t610 = -t692 * t987 + t694 * t991;
t541 = -t608 * t979 + t610 * t982;
t512 = t541 * t992 - t658 * t988;
t539 = -t608 * t982 - t610 * t979;
t1050 = t512 * t989 + t539 * t993;
t800 = t821 - t957;
t693 = t800 * t986 - t1110;
t695 = t800 * t990 + t1111;
t609 = t693 * t991 + t695 * t987;
t611 = -t693 * t987 + t695 * t991;
t542 = -t609 * t979 + t611 * t982;
t513 = t542 * t992 - t654 * t988;
t540 = -t609 * t982 - t611 * t979;
t1049 = t513 * t989 + t540 * t993;
t723 = (t823 * t986 + t825 * t990) * t958;
t724 = (t823 * t990 - t825 * t986) * t958;
t636 = t723 * t991 + t724 * t987;
t637 = -t723 * t987 + t724 * t991;
t563 = -t636 * t979 + t637 * t982;
t559 = t563 * t992 - t934 * t988;
t562 = -t636 * t982 - t637 * t979;
t1048 = t559 * t989 + t562 * t993;
t689 = -t756 * t987 + t760 * t991;
t691 = -t756 * t991 - t760 * t987;
t605 = -t689 * t979 + t691 * t982;
t774 = -t882 - t1125;
t582 = t605 * t992 + t774 * t988;
t603 = t689 * t982 + t691 * t979;
t1047 = t582 * t989 - t603 * t993;
t755 = (qJD(5) - t966) * t889 + t1066;
t688 = t1130 * t991 - t755 * t987;
t690 = -t1130 * t987 - t755 * t991;
t604 = -t688 * t979 + t690 * t982;
t830 = -t882 + t1125;
t590 = t604 * t992 - t830 * t988;
t602 = -t688 * t982 - t690 * t979;
t1046 = t590 * t989 + t602 * t993;
t622 = t712 * t979 + t713 * t982;
t607 = t622 * t992 + t780 * t988;
t621 = -t712 * t982 + t713 * t979;
t1045 = t607 * t989 - t621 * t993;
t819 = -t964 - t1125;
t730 = t819 * t987 + t1132;
t731 = t819 * t991 - t1134;
t660 = -t730 * t979 + t731 * t982;
t616 = t660 * t992 + t755 * t988;
t659 = t730 * t982 + t731 * t979;
t1044 = t616 * t989 - t659 * t993;
t847 = -t882 - t964;
t737 = t847 * t991 + t1107;
t738 = -t847 * t987 + t1106;
t674 = -t737 * t979 + t738 * t982;
t620 = t1130 * t988 + t674 * t992;
t673 = t737 * t982 + t738 * t979;
t1043 = t620 * t989 - t673 * t993;
t860 = -t882 + t964;
t747 = t860 * t991 + t1134;
t749 = -t860 * t987 + t1132;
t683 = -t747 * t979 + t749 * t982;
t626 = t683 * t992 - t760 * t988;
t681 = -t747 * t982 - t749 * t979;
t1042 = t626 * t989 + t681 * t993;
t859 = -t964 + t1125;
t748 = t859 * t987 - t1106;
t750 = t859 * t991 + t1107;
t684 = -t748 * t979 + t750 * t982;
t627 = t684 * t992 - t756 * t988;
t682 = -t748 * t982 - t750 * t979;
t1041 = t627 * t989 + t682 * t993;
t743 = -t1092 * t887 + t798 * t991;
t744 = -t1091 * t887 - t798 * t987;
t677 = -t743 * t979 + t744 * t982;
t641 = t677 * t992 - t1074;
t675 = -t743 * t982 - t744 * t979;
t1040 = t641 * t989 + t675 * t993;
t745 = -t1091 * t889 + t799 * t987;
t746 = t1092 * t889 + t799 * t991;
t678 = -t745 * t979 + t746 * t982;
t642 = t678 * t992 + t1074;
t676 = -t745 * t982 - t746 * t979;
t1039 = t642 * t989 + t676 * t993;
t787 = (t887 * t987 + t889 * t991) * t966;
t788 = (t887 * t991 - t889 * t987) * t966;
t719 = -t787 * t979 + t788 * t982;
t710 = t719 * t992 - t940 * t988;
t718 = -t787 * t982 - t788 * t979;
t1038 = t710 * t989 + t718 * t993;
t1037 = t735 * t989 - t854 * t993;
t795 = t867 * t982 - t870 * t979;
t863 = t935 + t1124;
t740 = t795 * t992 - t863 * t988;
t793 = t867 * t979 + t870 * t982;
t1036 = t740 * t989 - t793 * t993;
t892 = -t972 - t1124;
t814 = t892 * t982 - t1129;
t868 = t1020 + t923;
t762 = t814 * t992 - t868 * t988;
t813 = t892 * t979 + t1128;
t1035 = t762 * t989 - t813 * t993;
t869 = t917 + t922;
t796 = t868 * t982 - t869 * t979;
t895 = -t935 + t1124;
t764 = t796 * t992 - t895 * t988;
t794 = -t868 * t979 - t869 * t982;
t1034 = t764 * t989 + t794 * t993;
t921 = -t935 - t972;
t840 = -t921 * t979 + t1101;
t770 = t840 * t992 + t869 * t988;
t837 = t921 * t982 + t1102;
t1033 = t770 * t989 - t837 * t993;
t920 = -t935 + t972;
t841 = -t920 * t979 + t1128;
t771 = t841 * t992 - t870 * t988;
t838 = -t920 * t982 - t1129;
t1032 = t771 * t989 + t838 * t993;
t919 = -t972 + t1124;
t842 = t919 * t982 + t1102;
t772 = t842 * t992 + t867 * t988;
t839 = -t919 * t979 + t1101;
t1031 = t772 * t989 + t839 * t993;
t851 = -t1020 * t979 - t922 * t982;
t811 = t851 * t992 - t1072;
t850 = -t1020 * t982 + t922 * t979;
t1030 = t811 * t989 + t850 * t993;
t853 = t917 * t982 + t923 * t979;
t812 = t853 * t992 + t1072;
t852 = -t917 * t979 + t923 * t982;
t1029 = t812 * t989 + t852 * t993;
t862 = (t936 * t982 - t937 * t979) * t1085;
t846 = t862 * t992 - t1098;
t861 = (-t936 * t979 - t937 * t982) * t1085;
t1028 = t846 * t989 + t861 * t993;
t802 = t993 * t871 - t989 * t875;
t944 = 0.2e1 * t1070 + t1080;
t947 = -0.2e1 * t969 + t1078;
t894 = -t944 * t988 + t947 * t992;
t952 = t972 - t1090;
t1027 = t894 * t989 + t952 * t993;
t963 = -t972 - t1123;
t908 = t963 * t992 - t1095;
t1026 = t908 * t989 + t947 * t993;
t961 = -t1090 - t1123;
t910 = -t961 * t988 - t1096;
t1025 = t910 * t989 - t944 * t993;
t1022 = t993 * t994 + t1079;
t927 = t1022 * t984;
t949 = -t989 * t994 + t1077;
t1024 = t927 * t983 + t949 * t980;
t885 = t927 * t980 - t949 * t983;
t1023 = t948 * t989 + t951 * t993;
t941 = t1087 * t1082;
t1021 = -qJDD(3) * t993 + t941 * t989;
t962 = t972 - t1123;
t907 = t962 * t992 - t1097;
t1019 = -t1077 * t992 + t907 * t989;
t942 = t992 * t955;
t960 = -t1090 + t1123;
t909 = -t960 * t988 + t942;
t1018 = -t1077 * t988 + t909 * t989;
t914 = -t1082 * t976 - t1098;
t1014 = t914 * t989 - t1064;
t915 = -t1082 * t975 + t945 * t992;
t1013 = t915 * t989 + t1064;
t439 = -pkin(5) * t633 + pkin(10) * t445;
t381 = -pkin(4) * t633 + pkin(9) * t416 - pkin(10) * t1119 + t439 * t991;
t386 = -pkin(9) * t415 - pkin(10) * t1118 - t439 * t987;
t364 = -qJ(4) * t387 - t381 * t979 + t386 * t982;
t375 = -pkin(3) * t387 - pkin(4) * t415 - pkin(5) * t444;
t384 = t388 * t988 - t633 * t992;
t357 = -pkin(8) * t384 + t364 * t992 - t375 * t988;
t361 = -pkin(2) * t384 + pkin(3) * t633 - qJ(4) * t388 - t381 * t982 - t386 * t979;
t373 = t385 * t993 + t387 * t989;
t1012 = pkin(7) * t373 + t357 * t989 + t361 * t993;
t433 = -pkin(5) * t701 + pkin(10) * t574 + t445;
t437 = -pkin(10) * t572 - t444;
t396 = -pkin(4) * t701 + pkin(9) * t517 + t433 * t991 + t437 * t987;
t397 = -pkin(9) * t515 - t433 * t987 + t437 * t991;
t376 = -qJ(4) * t456 - t396 * t979 + t397 * t982;
t423 = -pkin(3) * t456 - pkin(4) * t515 - pkin(5) * t572;
t448 = t458 * t988 - t701 * t992;
t371 = -pkin(8) * t448 + t376 * t992 - t423 * t988;
t374 = -pkin(2) * t448 + pkin(3) * t701 - qJ(4) * t458 - t396 * t982 - t397 * t979;
t418 = t449 * t993 + t456 * t989;
t1011 = pkin(7) * t418 + t371 * t989 + t374 * t993;
t544 = -pkin(5) * t653 + pkin(10) * t662 - t1114;
t565 = -pkin(10) * t661 + t1115;
t455 = -pkin(4) * t653 + pkin(9) * t579 + t544 * t991 + t565 * t987;
t469 = -pkin(9) * t578 - t544 * t987 + t565 * t991;
t411 = -qJ(4) * t520 - t455 * t979 + t469 * t982;
t434 = -pkin(3) * t520 - pkin(4) * t578 - pkin(5) * t661 + t497;
t488 = t521 * t988 - t653 * t992;
t389 = -pkin(8) * t488 + t411 * t992 - t434 * t988;
t401 = -pkin(2) * t488 + pkin(3) * t653 - qJ(4) * t521 - t455 * t982 - t469 * t979;
t442 = t489 * t993 + t520 * t989;
t1010 = pkin(7) * t442 + t389 * t989 + t401 * t993;
t549 = -pkin(5) * t1131 + pkin(10) * t687 + t1115;
t580 = -pkin(10) * t686 + t1114;
t463 = -pkin(4) * t1131 + pkin(9) * t601 + t549 * t991 + t580 * t987;
t477 = -pkin(9) * t600 - t549 * t987 + t580 * t991;
t417 = -qJ(4) * t535 - t463 * t979 + t477 * t982;
t440 = -pkin(3) * t535 - pkin(4) * t600 - pkin(5) * t686 + t498;
t504 = -t1131 * t992 + t536 * t988;
t393 = -pkin(8) * t504 + t417 * t992 - t440 * t988;
t405 = -pkin(2) * t504 + pkin(3) * t1131 - qJ(4) * t536 - t463 * t982 - t477 * t979;
t462 = t505 * t993 + t535 * t989;
t1009 = pkin(7) * t462 + t393 * t989 + t405 * t993;
t522 = -pkin(4) * t725 + pkin(9) * t531;
t427 = -pkin(9) * t1116 - qJ(4) * t472 - t522 * t979;
t441 = -pkin(3) * t472 - pkin(4) * t530;
t467 = t473 * t988 - t725 * t992;
t394 = -pkin(8) * t467 + t427 * t992 - t441 * t988;
t406 = -pkin(2) * t467 + pkin(3) * t725 + pkin(9) * t1117 - qJ(4) * t473 - t522 * t982;
t426 = t468 * t993 + t472 * t989;
t1008 = pkin(7) * t426 + t394 * t989 + t406 * t993;
t500 = -pkin(4) * t774 + pkin(9) * t691 + t531;
t514 = -pkin(9) * t689 - t530;
t438 = -qJ(4) * t603 - t500 * t979 + t514 * t982;
t553 = -pkin(3) * t603 - pkin(4) * t689;
t581 = t605 * t988 - t774 * t992;
t422 = -pkin(8) * t581 + t438 * t992 - t553 * t988;
t430 = -pkin(2) * t581 + pkin(3) * t774 - qJ(4) * t605 - t500 * t982 - t514 * t979;
t525 = t582 * t993 + t603 * t989;
t1007 = pkin(7) * t525 + t422 * t989 + t430 * t993;
t617 = -pkin(4) * t755 + pkin(9) * t731 - t1112;
t652 = -pkin(9) * t730 + t1113;
t526 = -qJ(4) * t659 - t617 * t979 + t652 * t982;
t537 = -pkin(3) * t659 - pkin(4) * t730 + t598;
t615 = t660 * t988 - t755 * t992;
t461 = -pkin(8) * t615 + t526 * t992 - t537 * t988;
t486 = -pkin(2) * t615 + pkin(3) * t755 - qJ(4) * t660 - t617 * t982 - t652 * t979;
t552 = t616 * t993 + t659 * t989;
t1006 = pkin(7) * t552 + t461 * t989 + t486 * t993;
t618 = -pkin(4) * t1130 + pkin(9) * t738 + t1113;
t664 = -pkin(9) * t737 + t1112;
t543 = -qJ(4) * t673 - t618 * t979 + t664 * t982;
t548 = -pkin(3) * t673 - pkin(4) * t737 + t599;
t619 = -t1130 * t992 + t674 * t988;
t464 = -pkin(8) * t619 + t543 * t992 - t548 * t988;
t491 = -pkin(2) * t619 + pkin(3) * t1130 - qJ(4) * t674 - t618 * t982 - t664 * t979;
t564 = t620 * t993 + t673 * t989;
t1005 = pkin(7) * t564 + t464 * t989 + t491 * t993;
t606 = t622 * t988 - t780 * t992;
t519 = -pkin(8) * t606 + (-qJ(4) * t992 + t1122) * t621;
t545 = -pkin(2) * t606 + pkin(3) * t780 - qJ(4) * t622;
t550 = t607 * t993 + t621 * t989;
t1004 = pkin(7) * t550 + t519 * t989 + t545 * t993;
t612 = -qJ(4) * t793 - t621;
t739 = t795 * t988 + t863 * t992;
t561 = -pkin(8) * t739 + t1122 * t793 + t612 * t992;
t570 = -pkin(2) * t739 - pkin(3) * t863 - qJ(4) * t795 - t622;
t700 = t740 * t993 + t793 * t989;
t1003 = pkin(7) * t700 + t561 * t989 + t570 * t993;
t672 = -pkin(3) * t813 + t712;
t720 = -qJ(4) * t813 + t1109;
t761 = t814 * t988 + t868 * t992;
t591 = -pkin(8) * t761 - t672 * t988 + t720 * t992;
t638 = -pkin(2) * t761 - pkin(3) * t868 - qJ(4) * t814 + t1108;
t705 = t762 * t993 + t813 * t989;
t1002 = pkin(7) * t705 + t591 * t989 + t638 * t993;
t679 = -pkin(3) * t837 + t713;
t726 = -qJ(4) * t837 + t1108;
t767 = t840 * t988 - t869 * t992;
t597 = -pkin(8) * t767 - t679 * t988 + t726 * t992;
t663 = -pkin(2) * t767 + pkin(3) * t869 - qJ(4) * t840 - t1109;
t715 = t770 * t993 + t837 * t989;
t1001 = pkin(7) * t715 + t597 * t989 + t663 * t993;
t904 = t963 * t988 + t942;
t778 = -pkin(2) * t904 + t828;
t826 = -pkin(8) * t904 + t1104;
t857 = t908 * t993 - t947 * t989;
t1000 = pkin(7) * t857 + t778 * t993 + t826 * t989;
t906 = t961 * t992 - t1097;
t779 = -pkin(2) * t906 + t829;
t827 = -pkin(8) * t906 + t1103;
t858 = t910 * t993 + t944 * t989;
t999 = pkin(7) * t858 + t779 * t993 + t827 * t989;
t711 = t735 * t993 + t854 * t989;
t996 = pkin(7) * t711 - (-pkin(2) * t993 - pkin(8) * t989) * t734;
t932 = t992 * t946;
t928 = t949 * t984;
t926 = t949 * t981;
t925 = t1022 * t981;
t916 = qJDD(3) * t989 + t941 * t993;
t905 = t960 * t992 + t1095;
t903 = t962 * t988 + t1096;
t902 = t1060 * t988;
t901 = -t1070 * t988 + t932;
t897 = t1021 * t984;
t893 = t944 * t992 + t947 * t988;
t891 = t1023 * t984;
t890 = t1023 * t981;
t886 = -t1022 * t983 - t928 * t980;
t884 = -t1022 * t980 + t928 * t983;
t880 = t915 * t993 - t1065;
t879 = t914 * t993 + t1065;
t878 = t1079 * t988 + t909 * t993;
t877 = t1078 * t989 + t907 * t993;
t849 = t894 * t993 - t952 * t989;
t845 = t862 * t988 + t932;
t844 = -t1015 + (t925 * t981 + t927 * t984) * pkin(7);
t843 = -t1016 + (-t926 * t981 - t928 * t984) * pkin(7);
t836 = -t891 * t980 + t896 * t983;
t835 = t891 * t983 + t896 * t980;
t834 = t1013 * t984 - t902 * t981;
t833 = t1014 * t984 - t901 * t981;
t832 = t1018 * t984 - t905 * t981;
t831 = t1019 * t984 - t903 * t981;
t818 = t1025 * t984 - t906 * t981;
t817 = t1026 * t984 - t904 * t981;
t816 = t1025 * t981 + t906 * t984;
t815 = t1026 * t981 + t904 * t984;
t810 = t853 * t988 - t1071;
t809 = t851 * t988 + t1071;
t791 = t1027 * t984 - t893 * t981;
t790 = pkin(2) * t947 + pkin(8) * t908 - t1103;
t789 = -pkin(2) * t944 + pkin(8) * t910 + t1104;
t783 = t803 * t984;
t776 = -pkin(1) * t926 + t1015 * t984 - t1022 * t1120 + t981 * t871;
t775 = pkin(1) * t925 - t1016 * t984 - t1120 * t949 + t981 * t875;
t773 = t846 * t993 - t861 * t989;
t769 = t842 * t988 - t867 * t992;
t768 = t841 * t988 + t870 * t992;
t766 = t981 * t938 + (t1068 - t802) * t984;
t765 = -t1059 * t984 - t802 * t981;
t763 = t796 * t988 + t895 * t992;
t754 = -t818 * t980 + t858 * t983;
t753 = -t817 * t980 + t857 * t983;
t752 = t818 * t983 + t858 * t980;
t751 = t817 * t983 + t857 * t980;
t742 = t812 * t993 - t852 * t989;
t741 = t811 * t993 - t850 * t989;
t722 = pkin(2) * t951 + pkin(8) * t948 + t735;
t721 = t1028 * t984 - t845 * t981;
t717 = t772 * t993 - t839 * t989;
t716 = t771 * t993 - t838 * t989;
t714 = -pkin(2) * t854 + pkin(8) * t735;
t709 = t719 * t988 + t940 * t992;
t708 = -pkin(1) * t765 + t1120 * t803;
t707 = -t766 * t980 + t803 * t983;
t706 = t766 * t983 + t803 * t980;
t704 = t764 * t993 - t794 * t989;
t703 = t1029 * t984 - t810 * t981;
t702 = t1030 * t984 - t809 * t981;
t699 = t734 * t993 + (-t890 * t981 - t891 * t984) * pkin(7);
t698 = (-t765 * t981 - t766 * t984) * pkin(7);
t668 = t1031 * t984 - t769 * t981;
t667 = t1032 * t984 - t768 * t981;
t666 = t1033 * t984 - t767 * t981;
t665 = t1033 * t981 + t767 * t984;
t651 = -t779 * t989 + t827 * t993 + (-t816 * t981 - t818 * t984) * pkin(7);
t650 = -t778 * t989 + t826 * t993 + (-t815 * t981 - t817 * t984) * pkin(7);
t645 = t1034 * t984 - t763 * t981;
t644 = t1035 * t984 - t761 * t981;
t643 = t1035 * t981 + t761 * t984;
t640 = t678 * t988 - t1073;
t639 = t677 * t988 + t1073;
t635 = t1037 * t984 + t734 * t981;
t634 = t1037 * t981 - t734 * t984;
t632 = t1036 * t984 - t739 * t981;
t631 = t1036 * t981 + t739 * t984;
t630 = t710 * t993 - t718 * t989;
t629 = -pkin(1) * t816 - t789 * t981 + t984 * t999;
t628 = -pkin(1) * t815 + t1000 * t984 - t790 * t981;
t625 = t684 * t988 + t756 * t992;
t624 = t683 * t988 + t760 * t992;
t623 = -pkin(1) * t890 + t1061 * t984 - t722 * t981;
t614 = -t666 * t980 + t715 * t983;
t613 = t666 * t983 + t715 * t980;
t595 = -t644 * t980 + t705 * t983;
t594 = t644 * t983 + t705 * t980;
t593 = -t635 * t980 + t711 * t983;
t592 = t635 * t983 + t711 * t980;
t589 = t604 * t988 + t830 * t992;
t588 = -t632 * t980 + t700 * t983;
t587 = t632 * t983 + t700 * t980;
t586 = t1038 * t984 - t709 * t981;
t585 = t642 * t993 - t676 * t989;
t584 = t641 * t993 - t675 * t989;
t583 = -pkin(2) * t837 + pkin(8) * t770 + t679 * t992 + t726 * t988;
t577 = t627 * t993 - t682 * t989;
t576 = t626 * t993 - t681 * t989;
t571 = -pkin(2) * t813 + pkin(8) * t762 + t672 * t992 + t720 * t988;
t558 = t563 * t988 + t934 * t992;
t551 = pkin(8) * t740 + t612 * t988 + (-pkin(2) - t1121) * t793;
t547 = t1039 * t984 - t640 * t981;
t546 = t1040 * t984 - t639 * t981;
t538 = -(pkin(2) * t989 - pkin(8) * t993) * t734 + (-t634 * t981 - t635 * t984) * pkin(7);
t534 = t1041 * t984 - t625 * t981;
t533 = t1042 * t984 - t624 * t981;
t532 = -pkin(1) * t634 - t714 * t981 + t984 * t996;
t529 = t1043 * t984 - t619 * t981;
t528 = t1043 * t981 + t619 * t984;
t527 = t590 * t993 - t602 * t989;
t524 = t1044 * t984 - t615 * t981;
t523 = t1044 * t981 + t615 * t984;
t511 = t542 * t988 + t654 * t992;
t510 = t541 * t988 + t658 * t992;
t503 = t559 * t993 - t562 * t989;
t502 = t1045 * t984 - t606 * t981;
t501 = t1045 * t981 + t606 * t984;
t499 = t597 * t993 - t663 * t989 + (-t665 * t981 - t666 * t984) * pkin(7);
t493 = t509 * t988 - t1075;
t492 = t508 * t988 + t1075;
t490 = t591 * t993 - t638 * t989 + (-t643 * t981 - t644 * t984) * pkin(7);
t487 = t1046 * t984 - t589 * t981;
t485 = pkin(8) * t607 + (-pkin(2) + t1062) * t621;
t484 = t1047 * t984 - t581 * t981;
t483 = t1047 * t981 + t581 * t984;
t482 = -t529 * t980 + t564 * t983;
t481 = t529 * t983 + t564 * t980;
t480 = -pkin(1) * t665 + t1001 * t984 - t583 * t981;
t479 = -t524 * t980 + t552 * t983;
t478 = t524 * t983 + t552 * t980;
t476 = t561 * t993 - t570 * t989 + (-t631 * t981 - t632 * t984) * pkin(7);
t475 = t1048 * t984 - t558 * t981;
t474 = -pkin(1) * t643 + t1002 * t984 - t571 * t981;
t471 = -t502 * t980 + t550 * t983;
t470 = t502 * t983 + t550 * t980;
t466 = t513 * t993 - t540 * t989;
t465 = t512 * t993 - t539 * t989;
t460 = -pkin(2) * t673 + pkin(8) * t620 + t543 * t988 + t548 * t992;
t454 = -pkin(1) * t631 + t1003 * t984 - t551 * t981;
t452 = t459 * t988 + t736 * t992;
t451 = t495 * t993 - t507 * t989;
t450 = t494 * t993 - t506 * t989;
t447 = -t484 * t980 + t525 * t983;
t446 = t484 * t983 + t525 * t980;
t443 = -pkin(2) * t659 + pkin(8) * t616 + t526 * t988 + t537 * t992;
t436 = t1049 * t984 - t511 * t981;
t435 = t1050 * t984 - t510 * t981;
t432 = t1051 * t984 - t504 * t981;
t431 = t1051 * t981 + t504 * t984;
t429 = t1052 * t984 - t493 * t981;
t428 = t1053 * t984 - t492 * t981;
t425 = t1054 * t984 - t488 * t981;
t424 = t1054 * t981 + t488 * t984;
t421 = t519 * t993 - t545 * t989 + (-t501 * t981 - t502 * t984) * pkin(7);
t420 = -pkin(2) * t603 + pkin(8) * t582 + t438 * t988 + t553 * t992;
t419 = t453 * t993 - t457 * t989;
t414 = t464 * t993 - t491 * t989 + (-t528 * t981 - t529 * t984) * pkin(7);
t413 = -t432 * t980 + t462 * t983;
t412 = t432 * t983 + t462 * t980;
t410 = -pkin(1) * t501 + t1004 * t984 - t485 * t981;
t409 = t461 * t993 - t486 * t989 + (-t523 * t981 - t524 * t984) * pkin(7);
t408 = t1055 * t984 - t467 * t981;
t407 = t1055 * t981 + t467 * t984;
t404 = -t425 * t980 + t442 * t983;
t403 = t425 * t983 + t442 * t980;
t402 = t1056 * t984 - t452 * t981;
t400 = -pkin(1) * t528 + t1005 * t984 - t460 * t981;
t399 = t1057 * t984 - t448 * t981;
t398 = t1057 * t981 + t448 * t984;
t395 = -pkin(1) * t523 + t1006 * t984 - t443 * t981;
t392 = -pkin(2) * t535 + pkin(8) * t505 + t417 * t988 + t440 * t992;
t391 = -t408 * t980 + t426 * t983;
t390 = t408 * t983 + t426 * t980;
t383 = t422 * t993 - t430 * t989 + (-t483 * t981 - t484 * t984) * pkin(7);
t382 = -pkin(2) * t472 + pkin(8) * t468 + t427 * t988 + t441 * t992;
t380 = -pkin(2) * t520 + pkin(8) * t489 + t411 * t988 + t434 * t992;
t379 = -t399 * t980 + t418 * t983;
t378 = t399 * t983 + t418 * t980;
t377 = -pkin(1) * t483 + t1007 * t984 - t420 * t981;
t372 = t393 * t993 - t405 * t989 + (-t431 * t981 - t432 * t984) * pkin(7);
t370 = t389 * t993 - t401 * t989 + (-t424 * t981 - t425 * t984) * pkin(7);
t369 = -pkin(2) * t456 + pkin(8) * t449 + t376 * t988 + t423 * t992;
t368 = t394 * t993 - t406 * t989 + (-t407 * t981 - t408 * t984) * pkin(7);
t367 = -pkin(1) * t431 + t1009 * t984 - t392 * t981;
t366 = t1058 * t984 - t384 * t981;
t365 = t1058 * t981 + t384 * t984;
t363 = -pkin(1) * t424 + t1010 * t984 - t380 * t981;
t362 = -pkin(1) * t407 + t1008 * t984 - t382 * t981;
t360 = -t366 * t980 + t373 * t983;
t359 = t366 * t983 + t373 * t980;
t358 = t371 * t993 - t374 * t989 + (-t398 * t981 - t399 * t984) * pkin(7);
t356 = -pkin(2) * t387 + pkin(8) * t385 + t364 * t988 + t375 * t992;
t355 = -pkin(1) * t398 + t1011 * t984 - t369 * t981;
t354 = t357 * t993 - t361 * t989 + (-t365 * t981 - t366 * t984) * pkin(7);
t353 = -pkin(1) * t365 + t1012 * t984 - t356 * t981;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t899, 0, 0, 0, 0, 0, 0, t886, t885, 0, t707, 0, 0, 0, 0, 0, 0, t753, t754, t836, t593, 0, 0, 0, 0, 0, 0, t595, t614, t588, t471, 0, 0, 0, 0, 0, 0, t479, t482, t447, t391, 0, 0, 0, 0, 0, 0, t404, t413, t379, t360; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t898, 0, 0, 0, 0, 0, 0, t884, -t1024, 0, t706, 0, 0, 0, 0, 0, 0, t751, t752, t835, t592, 0, 0, 0, 0, 0, 0, t594, t613, t587, t470, 0, 0, 0, 0, 0, 0, t478, t481, t446, t390, 0, 0, 0, 0, 0, 0, t403, t412, t378, t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1088, 0, 0, 0, 0, 0, 0, t926, -t925, 0, t765, 0, 0, 0, 0, 0, 0, t815, t816, t890, t634, 0, 0, 0, 0, 0, 0, t643, t665, t631, t501, 0, 0, 0, 0, 0, 0, t523, t528, t483, t407, 0, 0, 0, 0, 0, 0, t424, t431, t398, t365; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1127, -t1126, -t898, -qJ(1) * t898, 0, 0, -t885, 0, t886, t980 * t1081, -qJ(1) * t884 - t776 * t980 + t843 * t983, qJ(1) * t1024 - t775 * t980 + t844 * t983, -t783 * t980 + t802 * t983, -qJ(1) * t706 + t698 * t983 - t708 * t980, -t834 * t980 + t880 * t983, -t791 * t980 + t849 * t983, -t832 * t980 + t878 * t983, -t833 * t980 + t879 * t983, -t831 * t980 + t877 * t983, -t897 * t980 + t916 * t983, -qJ(1) * t751 - t628 * t980 + t650 * t983, -qJ(1) * t752 - t629 * t980 + t651 * t983, -qJ(1) * t835 - t623 * t980 + t699 * t983, -qJ(1) * t592 - t532 * t980 + t538 * t983, -t703 * t980 + t742 * t983, -t645 * t980 + t704 * t983, -t667 * t980 + t716 * t983, -t702 * t980 + t741 * t983, -t668 * t980 + t717 * t983, -t721 * t980 + t773 * t983, -qJ(1) * t594 - t474 * t980 + t490 * t983, -qJ(1) * t613 - t480 * t980 + t499 * t983, -qJ(1) * t587 - t454 * t980 + t476 * t983, -qJ(1) * t470 - t410 * t980 + t421 * t983, -t547 * t980 + t585 * t983, -t487 * t980 + t527 * t983, -t533 * t980 + t576 * t983, -t546 * t980 + t584 * t983, -t534 * t980 + t577 * t983, -t586 * t980 + t630 * t983, -qJ(1) * t478 - t395 * t980 + t409 * t983, -qJ(1) * t481 - t400 * t980 + t414 * t983, -qJ(1) * t446 - t377 * t980 + t383 * t983, -qJ(1) * t390 - t362 * t980 + t368 * t983, -t429 * t980 + t451 * t983, -t402 * t980 + t419 * t983, -t435 * t980 + t465 * t983, -t428 * t980 + t450 * t983, -t436 * t980 + t466 * t983, -t475 * t980 + t503 * t983, -qJ(1) * t403 - t363 * t980 + t370 * t983, -qJ(1) * t412 - t367 * t980 + t372 * t983, -qJ(1) * t378 - t355 * t980 + t358 * t983, -qJ(1) * t359 - t353 * t980 + t354 * t983; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1126, -t1127, t899, qJ(1) * t899, 0, 0, t1024, 0, t884, -t983 * t1081, qJ(1) * t886 + t776 * t983 + t843 * t980, qJ(1) * t885 + t775 * t983 + t844 * t980, t783 * t983 + t802 * t980, qJ(1) * t707 + t698 * t980 + t708 * t983, t834 * t983 + t880 * t980, t791 * t983 + t849 * t980, t832 * t983 + t878 * t980, t833 * t983 + t879 * t980, t831 * t983 + t877 * t980, t897 * t983 + t916 * t980, qJ(1) * t753 + t628 * t983 + t650 * t980, qJ(1) * t754 + t629 * t983 + t651 * t980, qJ(1) * t836 + t623 * t983 + t699 * t980, qJ(1) * t593 + t532 * t983 + t538 * t980, t703 * t983 + t742 * t980, t645 * t983 + t704 * t980, t667 * t983 + t716 * t980, t702 * t983 + t741 * t980, t668 * t983 + t717 * t980, t721 * t983 + t773 * t980, qJ(1) * t595 + t474 * t983 + t490 * t980, qJ(1) * t614 + t480 * t983 + t499 * t980, qJ(1) * t588 + t454 * t983 + t476 * t980, qJ(1) * t471 + t410 * t983 + t421 * t980, t547 * t983 + t585 * t980, t487 * t983 + t527 * t980, t533 * t983 + t576 * t980, t546 * t983 + t584 * t980, t534 * t983 + t577 * t980, t586 * t983 + t630 * t980, qJ(1) * t479 + t395 * t983 + t409 * t980, qJ(1) * t482 + t400 * t983 + t414 * t980, qJ(1) * t447 + t377 * t983 + t383 * t980, qJ(1) * t391 + t362 * t983 + t368 * t980, t429 * t983 + t451 * t980, t402 * t983 + t419 * t980, t435 * t983 + t465 * t980, t428 * t983 + t450 * t980, t436 * t983 + t466 * t980, t475 * t983 + t503 * t980, qJ(1) * t404 + t363 * t983 + t370 * t980, qJ(1) * t413 + t367 * t983 + t372 * t980, qJ(1) * t379 + t355 * t983 + t358 * t980, qJ(1) * t360 + t353 * t983 + t354 * t980; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1069, t953, 0, 0, 0, 0, t925, 0, t926, t984 * qJDD(2), pkin(1) * t928 - t984 * t871 + (-pkin(7) * t1022 + t1015) * t981, -pkin(1) * t927 - t984 * t875 + (-pkin(7) * t949 - t1016) * t981, t1136, pkin(1) * t766 + pkin(7) * t1136, t1013 * t981 + t902 * t984, t1027 * t981 + t893 * t984, t1018 * t981 + t905 * t984, t1014 * t981 + t901 * t984, t1019 * t981 + t903 * t984, t1021 * t981, pkin(1) * t817 + t1000 * t981 + t790 * t984, pkin(1) * t818 + t789 * t984 + t981 * t999, pkin(1) * t891 + t1061 * t981 + t722 * t984, pkin(1) * t635 + t714 * t984 + t981 * t996, t1029 * t981 + t810 * t984, t1034 * t981 + t763 * t984, t1032 * t981 + t768 * t984, t1030 * t981 + t809 * t984, t1031 * t981 + t769 * t984, t1028 * t981 + t845 * t984, pkin(1) * t644 + t1002 * t981 + t571 * t984, pkin(1) * t666 + t1001 * t981 + t583 * t984, pkin(1) * t632 + t1003 * t981 + t551 * t984, pkin(1) * t502 + t1004 * t981 + t485 * t984, t1039 * t981 + t640 * t984, t1046 * t981 + t589 * t984, t1042 * t981 + t624 * t984, t1040 * t981 + t639 * t984, t1041 * t981 + t625 * t984, t1038 * t981 + t709 * t984, pkin(1) * t524 + t1006 * t981 + t443 * t984, pkin(1) * t529 + t1005 * t981 + t460 * t984, pkin(1) * t484 + t1007 * t981 + t420 * t984, pkin(1) * t408 + t1008 * t981 + t382 * t984, t1052 * t981 + t493 * t984, t1056 * t981 + t452 * t984, t1050 * t981 + t510 * t984, t1053 * t981 + t492 * t984, t1049 * t981 + t511 * t984, t1048 * t981 + t558 * t984, pkin(1) * t425 + t1010 * t981 + t380 * t984, pkin(1) * t432 + t1009 * t981 + t392 * t984, pkin(1) * t399 + t1011 * t981 + t369 * t984, pkin(1) * t366 + t1012 * t981 + t356 * t984;];
tauB_reg  = t1;
