% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRPRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRPRP8_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP8_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP8_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP8_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:26:05
% EndTime: 2019-03-09 03:26:14
% DurationCPUTime: 3.29s
% Computational Cost: add. (5595->399), mult. (12083->500), div. (0->0), fcn. (8095->6), ass. (0->200)
t137 = sin(qJ(5));
t139 = cos(qJ(5));
t203 = qJD(5) * t139;
t204 = qJD(5) * t137;
t136 = sin(pkin(9));
t141 = -pkin(1) - pkin(7);
t117 = t141 * qJD(1) + qJD(2);
t140 = cos(qJ(3));
t199 = t140 * qJD(4);
t138 = sin(qJ(3));
t206 = qJD(3) * t138;
t158 = qJ(4) * t206 - t199;
t146 = qJD(1) * t158 - t117 * t206;
t225 = cos(pkin(9));
t201 = t138 * qJD(4);
t205 = qJD(3) * t140;
t76 = t117 * t205 + (-qJ(4) * t205 - t201) * qJD(1);
t190 = t225 * t76;
t37 = t136 * t146 + t190;
t132 = qJD(1) * qJD(2);
t198 = qJD(1) * qJD(3);
t188 = t140 * t198;
t110 = pkin(3) * t188 + t132;
t184 = qJD(3) * t225;
t176 = qJD(1) * t184;
t211 = t136 * t188 + t138 * t176;
t116 = t140 * t176;
t208 = qJD(1) * t138;
t191 = t136 * t208;
t91 = qJD(3) * t191 - t116;
t44 = -t91 * pkin(4) + t211 * pkin(8) + t110;
t94 = (-qJ(4) * qJD(1) + t117) * t138;
t189 = t225 * t94;
t207 = qJD(1) * t140;
t95 = -qJ(4) * t207 + t140 * t117;
t90 = qJD(3) * pkin(3) + t95;
t54 = t136 * t90 + t189;
t48 = qJD(3) * pkin(8) + t54;
t186 = t225 * t140;
t102 = qJD(1) * t186 - t191;
t111 = pkin(3) * t208 + qJD(1) * qJ(2) + qJD(4);
t157 = -t136 * t140 - t225 * t138;
t99 = t157 * qJD(1);
t55 = -pkin(4) * t99 - pkin(8) * t102 + t111;
t185 = t137 * t37 - t139 * t44 + t48 * t203 + t55 * t204;
t20 = t137 * t55 + t139 * t48;
t259 = qJD(5) - t99;
t249 = t20 * t259;
t268 = -t185 + t249;
t187 = t259 ^ 2;
t16 = qJ(6) * t259 + t20;
t267 = t16 * t259;
t200 = t139 * qJD(3);
t77 = t102 * t137 - t200;
t266 = t259 * t77;
t19 = -t137 * t48 + t139 * t55;
t3 = t137 * t44 + t139 * t37 + t55 * t203 - t48 * t204;
t265 = -t19 * t259 + t3;
t104 = t157 * qJD(3);
t218 = t136 * t138;
t108 = t186 - t218;
t79 = qJD(3) * t137 + t102 * t139;
t50 = t79 * qJD(5) - t137 * t211;
t230 = t50 * t139;
t49 = -qJD(5) * t200 + t102 * t204 + t139 * t211;
t231 = t49 * t137;
t233 = t139 * t79;
t264 = (qJD(5) * (t137 * t77 - t233) - t230 + t231) * t108 - (t137 * t79 + t139 * t77) * t104;
t181 = -qJD(5) * t157 + qJD(1);
t219 = t157 * t139;
t101 = t136 * t206 - t140 * t184;
t223 = t101 * t139;
t263 = -t104 * t79 + t108 * t49 - t91 * t219 + (t137 * t181 + t223) * t259;
t83 = t137 * t91;
t160 = t203 * t259 - t83;
t85 = t139 * t91;
t262 = -t204 * t259 - t85;
t261 = -t259 * t79 + t50;
t87 = t136 * t94;
t53 = t225 * t90 - t87;
t47 = -qJD(3) * pkin(4) - t53;
t21 = t77 * pkin(5) - t79 * qJ(6) + t47;
t123 = pkin(3) * t136 + pkin(8);
t235 = t123 * t91;
t258 = t21 * t259 + t235;
t221 = t104 * t137;
t257 = -t101 * t77 + t108 * t160 - t157 * t50 + t221 * t259;
t256 = t102 * t104 - t108 * t211;
t125 = t138 * pkin(3) + qJ(2);
t69 = -pkin(4) * t157 - pkin(8) * t108 + t125;
t214 = qJ(4) - t141;
t112 = t214 * t138;
t113 = t214 * t140;
t73 = -t225 * t112 - t136 * t113;
t242 = t137 * t69 + t139 * t73;
t153 = t214 * t206 - t199;
t92 = -qJD(3) * t113 - t201;
t58 = t136 * t153 + t225 * t92;
t118 = pkin(3) * t205 + qJD(2);
t63 = -pkin(4) * t101 - pkin(8) * t104 + t118;
t10 = -qJD(5) * t242 - t137 * t58 + t139 * t63;
t253 = t79 ^ 2;
t252 = t102 ^ 2;
t251 = 0.2e1 * t132;
t250 = pkin(5) * t91;
t36 = t136 * t76 - t225 * t146;
t72 = -t136 * t112 + t225 * t113;
t248 = t36 * t72;
t247 = t77 * t99;
t246 = t79 * t77;
t174 = pkin(5) * t137 - qJ(6) * t139;
t61 = t136 * t95 + t189;
t244 = t137 * qJD(6) - t174 * t259 + t61;
t243 = -t137 * t50 - t77 * t203;
t62 = t225 * t95 - t87;
t196 = pkin(3) * t207;
t64 = pkin(4) * t102 - pkin(8) * t99 + t196;
t23 = t137 * t64 + t139 * t62;
t241 = t102 * t77;
t240 = t102 * t99;
t239 = t157 * t91;
t238 = t123 * t49;
t237 = t123 * t77;
t236 = t123 * t79;
t234 = t137 * t99;
t232 = t36 * t108;
t229 = t79 * t101;
t228 = t79 * t102;
t227 = t91 * qJ(6);
t226 = t259 * t102;
t224 = qJD(3) * t99;
t220 = t104 * t139;
t142 = qJD(3) ^ 2;
t217 = t142 * t138;
t216 = t142 * t140;
t143 = qJD(1) ^ 2;
t215 = t143 * qJ(2);
t212 = qJD(6) - t19;
t210 = t138 ^ 2 - t140 ^ 2;
t209 = -t142 - t143;
t202 = t101 * qJD(3);
t197 = 0.2e1 * qJD(1);
t195 = t77 ^ 2 - t253;
t194 = qJD(5) * t123 * t259;
t192 = t140 * t143 * t138;
t74 = t79 * t204;
t57 = t136 * t92 - t225 * t153;
t183 = t137 * t259;
t180 = -t79 * t234 + t74;
t179 = t138 * t188;
t7 = pkin(5) * t50 + qJ(6) * t49 - qJD(6) * t79 + t36;
t178 = -t7 - t194;
t124 = -t225 * pkin(3) - pkin(4);
t177 = t36 + t194;
t175 = t139 * pkin(5) + t137 * qJ(6);
t173 = t99 * t101 + t239;
t14 = -pkin(5) * t259 + t212;
t172 = t137 * t16 - t139 * t14;
t171 = -t137 * t14 - t139 * t16;
t170 = t137 * t20 + t139 * t19;
t169 = t137 * t19 - t139 * t20;
t22 = -t137 * t62 + t139 * t64;
t28 = -t137 * t73 + t139 * t69;
t163 = -t139 * t259 * t99 + t160;
t162 = t234 * t259 + t262;
t161 = t21 * t79 + t185;
t9 = t137 * t63 + t139 * t58 + t69 * t203 - t73 * t204;
t159 = t259 * t47 + t235;
t156 = (t49 + t247) * t139 + t243;
t155 = t77 * t183 - t230;
t154 = -t162 - t241;
t150 = t54 * t101 - t53 * t104 + t157 * t37 + t232;
t149 = -t243 * t108 + t77 * t221;
t1 = qJD(6) * t259 - t227 + t3;
t2 = t185 + t250;
t148 = -qJD(5) * t172 + t1 * t139 + t2 * t137;
t147 = -qJD(5) * t170 + t137 * t185 + t3 * t139;
t145 = -t157 * t83 - t108 * t50 - t104 * t77 + (t101 * t137 - t181 * t139) * t259;
t144 = t50 * t219 + t77 * t223 + t181 * t233 + (qJD(1) * t77 - t229 - (qJD(5) * t77 - t49) * t157) * t137;
t129 = qJ(2) * t251;
t105 = -t175 + t124;
t98 = t99 ^ 2;
t93 = t104 * qJD(3);
t42 = pkin(5) * t79 + qJ(6) * t77;
t38 = t123 * t230;
t32 = t108 * t174 + t72;
t30 = -t101 * t259 + t239;
t26 = pkin(5) * t157 - t28;
t25 = -qJ(6) * t157 + t242;
t24 = -t49 + t266;
t18 = -pkin(5) * t102 - t22;
t17 = qJ(6) * t102 + t23;
t15 = t163 - t228;
t13 = t233 * t259 - t231;
t12 = t174 * t104 + (qJD(5) * t175 - qJD(6) * t139) * t108 + t57;
t11 = t79 * t220 + (-t139 * t49 - t74) * t108;
t8 = t101 * pkin(5) - t10;
t6 = -qJ(6) * t101 - qJD(6) * t157 + t9;
t5 = t262 * t108 + t157 * t49 + t220 * t259 - t229;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t251, t129, -0.2e1 * t179, 0.2e1 * t210 * t198, -t217, 0.2e1 * t179, -t216, 0, -t141 * t217 + (qJ(2) * t205 + qJD(2) * t138) * t197, -t141 * t216 + (-qJ(2) * t206 + qJD(2) * t140) * t197, 0, t129, t256, t102 * t101 + t104 * t99 + t108 * t91 - t157 * t211, t93, t173, t202, 0, -qJD(3) * t57 - t101 * t111 - t110 * t157 - t118 * t99 - t125 * t91, -t58 * qJD(3) + t118 * t102 + t111 * t104 + t110 * t108 - t125 * t211, t57 * t102 - t72 * t211 + t58 * t99 + t73 * t91 + t150, t110 * t125 + t111 * t118 + t37 * t73 - t53 * t57 + t54 * t58 + t248, t11, t264, t5, t149, -t257, t30, t47 * t221 + t10 * t259 - t19 * t101 + t185 * t157 - t28 * t91 + t72 * t50 + t57 * t77 + (t36 * t137 + t203 * t47) * t108, t47 * t220 + t20 * t101 + t3 * t157 + t242 * t91 - t72 * t49 + t57 * t79 - t9 * t259 + (t36 * t139 - t204 * t47) * t108, -t10 * t79 + t28 * t49 - t242 * t50 - t9 * t77 - t170 * t104 + (qJD(5) * t169 - t3 * t137 + t139 * t185) * t108, t10 * t19 - t185 * t28 + t20 * t9 + t242 * t3 + t47 * t57 + t248, t11, t5, -t264, t30, t257, t149, t21 * t221 + t14 * t101 + t2 * t157 + t12 * t77 + t26 * t91 + t32 * t50 - t8 * t259 + (t137 * t7 + t203 * t21) * t108, -t25 * t50 - t26 * t49 - t6 * t77 + t8 * t79 - t172 * t104 + (qJD(5) * t171 - t1 * t137 + t2 * t139) * t108, -t21 * t220 - t1 * t157 - t16 * t101 - t12 * t79 - t25 * t91 + t32 * t49 + t6 * t259 + (-t139 * t7 + t204 * t21) * t108, t1 * t25 + t12 * t21 + t14 * t8 + t16 * t6 + t2 * t26 + t32 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t143, -t215, 0, 0, 0, 0, 0, 0, t209 * t138, t209 * t140, 0, -t215, 0, 0, 0, 0, 0, 0, qJD(1) * t99 + t93, -qJD(1) * t102 + t202, -t173 - t256, -qJD(1) * t111 - t150, 0, 0, 0, 0, 0, 0, t145, t263, t144, -qJD(1) * t170 + t101 * t169 - t47 * t104 - t147 * t157 - t232, 0, 0, 0, 0, 0, 0, t145, t144, -t263, -qJD(1) * t172 + t101 * t171 - t21 * t104 - t7 * t108 - t148 * t157; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, -t210 * t143, 0, -t192, 0, 0, -t140 * t215, t138 * t215, 0, 0, -t240, -t98 + t252, -t211 - t224, t240, -t116 + (t102 + t191) * qJD(3), 0, qJD(3) * t61 - t102 * t111 + t99 * t196 - t36, -t190 - t111 * t99 + (t117 * t218 + t62) * qJD(3) + (-t140 * pkin(3) * t102 - t136 * t158) * qJD(1) -(t62 - t53) * t99 + (t54 - t61) * t102 + (t136 * t91 + t225 * t211) * pkin(3), t53 * t61 - t54 * t62 + (-t111 * t207 + t136 * t37 - t225 * t36) * pkin(3), t13 (-t49 + t247) * t139 - t180 + t243, t15, t155, -t154, -t226, -t19 * t102 + t124 * t50 + t137 * t159 - t139 * t177 - t22 * t259 - t61 * t77, t20 * t102 - t124 * t49 + t137 * t177 + t139 * t159 + t23 * t259 - t61 * t79, t22 * t79 + t23 * t77 - t38 + (t19 * t99 + t3 + (-t19 + t236) * qJD(5)) * t139 + (-t238 + t20 * t99 + t185 + (-t20 + t237) * qJD(5)) * t137, t123 * t147 + t36 * t124 - t19 * t22 - t20 * t23 - t47 * t61, t13, t15, t74 + (-t79 * t99 + t50) * t137 + (t49 + t266) * t139, -t226, t154, t155, t102 * t14 + t105 * t50 + t258 * t137 + t178 * t139 + t18 * t259 - t244 * t77, t17 * t77 - t18 * t79 - t38 + (-t14 * t99 + t1 + (t14 + t236) * qJD(5)) * t139 + (-t238 + t16 * t99 + t2 + (-t16 + t237) * qJD(5)) * t137, -t102 * t16 + t105 * t49 + t178 * t137 - t258 * t139 - t17 * t259 + t244 * t79, t7 * t105 + t148 * t123 - t14 * t18 - t16 * t17 - t244 * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116 + (t102 - t191) * qJD(3), -t211 + t224, -t98 - t252, t102 * t53 - t54 * t99 + t110, 0, 0, 0, 0, 0, 0, t162 - t241, -t139 * t187 - t228 + t83, t183 * t79 + t156, -t47 * t102 + t265 * t137 + t268 * t139, 0, 0, 0, 0, 0, 0, -t137 * t187 - t241 - t85, t156 + t180, t163 + t228, -t21 * t102 + (-t2 + t267) * t139 + (t14 * t259 + t1) * t137; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246, -t195, t24, -t246, -t261, -t91, -t47 * t79 + t268, t47 * t77 - t265, 0, 0, t246, t24, t195, -t91, t261, -t246, -t42 * t77 - t161 + t249 - 0.2e1 * t250, pkin(5) * t49 - t50 * qJ(6) + (t16 - t20) * t79 + (t14 - t212) * t77, -0.2e1 * t227 - t21 * t77 + t42 * t79 + (0.2e1 * qJD(6) - t19) * t259 + t3, -t2 * pkin(5) + t1 * qJ(6) - t14 * t20 + t16 * t212 - t21 * t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91 + t246, t24, -t253 - t187, t161 + t250 - t267;];
tauc_reg  = t4;
