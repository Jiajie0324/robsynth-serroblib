% Calculate vector of inverse dynamics joint torques for
% S6RPRPRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RPRPRP8_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP8_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP8_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRPRP8_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRPRP8_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP8_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRPRP8_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRPRP8_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRPRP8_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:24:26
% EndTime: 2019-03-09 03:26:03
% DurationCPUTime: 88.32s
% Computational Cost: add. (28897->1238), mult. (43601->1521), div. (0->0), fcn. (40247->8), ass. (0->595)
t1127 = Icges(6,1) + Icges(7,1);
t1094 = Icges(7,4) + Icges(6,5);
t1093 = Icges(6,6) - Icges(7,6);
t554 = sin(qJ(5));
t1161 = (Icges(6,4) - Icges(7,5)) * t554;
t1160 = Icges(4,3) + Icges(5,3);
t550 = qJ(3) + pkin(9);
t525 = sin(t550);
t526 = cos(t550);
t555 = sin(qJ(3));
t558 = cos(qJ(3));
t1156 = Icges(4,5) * t555 + Icges(5,5) * t525 + Icges(4,6) * t558 + Icges(5,6) * t526;
t557 = cos(qJ(5));
t1159 = t1127 * t557 - t1161;
t1126 = Icges(6,2) + Icges(7,3);
t1158 = Icges(7,2) + Icges(6,3);
t1157 = -t1093 * t554 + t1094 * t557;
t898 = Icges(6,4) * t557;
t665 = -Icges(6,2) * t554 + t898;
t1155 = -t1093 * t525 - t526 * t665;
t870 = t526 * t557;
t477 = Icges(7,5) * t870;
t872 = t526 * t554;
t1125 = Icges(7,3) * t872 + t1155 + t477;
t1108 = t1094 * t525 + t1159 * t526;
t556 = sin(qJ(1));
t559 = cos(qJ(1));
t1150 = t1156 * t556 + t1160 * t559;
t902 = Icges(5,4) * t525;
t666 = Icges(5,2) * t526 + t902;
t310 = -Icges(5,6) * t556 + t559 * t666;
t901 = Icges(5,4) * t526;
t670 = Icges(5,1) * t525 + t901;
t312 = -Icges(5,5) * t556 + t559 * t670;
t904 = Icges(4,4) * t555;
t667 = Icges(4,2) * t558 + t904;
t333 = -Icges(4,6) * t556 + t559 * t667;
t903 = Icges(4,4) * t558;
t671 = Icges(4,1) * t555 + t903;
t335 = -Icges(4,5) * t556 + t559 * t671;
t1104 = t310 * t526 + t312 * t525 + t333 * t558 + t335 * t555;
t1154 = t1104 * t559;
t865 = t556 * t557;
t868 = t554 * t559;
t400 = t525 * t868 + t865;
t863 = t559 * t557;
t866 = t556 * t554;
t401 = t525 * t863 - t866;
t869 = t526 * t559;
t185 = -Icges(6,5) * t401 + Icges(6,6) * t400 + Icges(6,3) * t869;
t188 = -Icges(7,4) * t401 + Icges(7,2) * t869 - Icges(7,6) * t400;
t1002 = t185 + t188;
t399 = t525 * t865 + t868;
t871 = t526 * t556;
t398 = t525 * t866 - t863;
t893 = Icges(7,5) * t398;
t192 = Icges(7,1) * t399 - Icges(7,4) * t871 + t893;
t353 = Icges(6,4) * t398;
t195 = Icges(6,1) * t399 - Icges(6,5) * t871 - t353;
t1134 = t192 + t195;
t350 = Icges(7,5) * t399;
t180 = -Icges(7,6) * t871 + Icges(7,3) * t398 + t350;
t900 = Icges(6,4) * t399;
t189 = -Icges(6,2) * t398 - Icges(6,6) * t871 + t900;
t1136 = t180 - t189;
t1119 = t1134 * t399 + t1136 * t398;
t351 = Icges(7,5) * t400;
t194 = -Icges(7,1) * t401 + Icges(7,4) * t869 - t351;
t354 = Icges(6,4) * t400;
t196 = Icges(6,1) * t401 - Icges(6,5) * t869 - t354;
t1000 = -t196 + t194;
t352 = Icges(7,5) * t401;
t181 = -Icges(7,6) * t869 + Icges(7,3) * t400 + t352;
t355 = Icges(6,4) * t401;
t191 = Icges(6,2) * t400 + Icges(6,6) * t869 - t355;
t1001 = -t191 - t181;
t1122 = t1000 * t401 + t1001 * t400;
t183 = Icges(6,5) * t399 - Icges(6,6) * t398 - Icges(6,3) * t871;
t186 = Icges(7,4) * t399 - Icges(7,2) * t871 + Icges(7,6) * t398;
t1135 = t183 + t186;
t1153 = (-t1002 * t559 - t1135 * t556) * t526 + t1119 + t1122;
t1124 = t1157 * t526 + t1158 * t525;
t1005 = -t1108 * t401 + t1124 * t869 - t1125 * t400;
t1060 = -t1134 * t401 + t1135 * t869 - t1136 * t400;
t787 = qJD(5) * t556;
t790 = qJD(3) * t559;
t417 = -t526 * t787 + t790;
t789 = qJD(5) * t525;
t489 = qJD(1) + t789;
t1152 = -t1005 * t489 - t1060 * t417;
t891 = Icges(7,5) * t557;
t660 = Icges(7,3) * t554 + t891;
t1042 = -t1093 * t526 + (-t660 + t665) * t525;
t1151 = -t1157 * t525 + t1158 * t526;
t1041 = t1094 * t526 - t1159 * t525;
t997 = t1156 * t559 - t1160 * t556;
t1149 = (t1126 * t557 + t1161) * t526;
t1148 = (-t1093 * t557 - t1094 * t554) * t526;
t1147 = Icges(4,5) * t558 + Icges(5,5) * t526 - Icges(4,6) * t555 - Icges(5,6) * t525;
t309 = Icges(5,6) * t559 + t556 * t666;
t478 = Icges(5,4) * t871;
t874 = t525 * t556;
t895 = Icges(5,5) * t559;
t311 = Icges(5,1) * t874 + t478 + t895;
t332 = Icges(4,6) * t559 + t556 * t667;
t864 = t556 * t558;
t507 = Icges(4,4) * t864;
t867 = t555 * t556;
t896 = Icges(4,5) * t559;
t334 = Icges(4,1) * t867 + t507 + t896;
t1131 = t309 * t526 + t311 * t525 + t332 * t558 + t334 * t555;
t1115 = t1000 * t399 + t1001 * t398 - t1002 * t871;
t998 = t1150 * t556;
t423 = -Icges(5,2) * t525 + t901;
t425 = Icges(5,1) * t526 - t902;
t464 = -Icges(4,2) * t555 + t903;
t466 = Icges(4,1) * t558 - t904;
t1132 = t423 * t526 + t425 * t525 + t464 * t558 + t466 * t555;
t1130 = -t1108 * t557 - t1125 * t554;
t1074 = rSges(7,1) + pkin(5);
t785 = qJD(5) * t559;
t741 = t525 * t785;
t796 = qJD(1) * t559;
t715 = qJD(1) * t525 + qJD(5);
t738 = t526 * t790;
t988 = t715 * t556 - t738;
t166 = (-t741 - t796) * t557 + t988 * t554;
t167 = t489 * t868 + t557 * t988;
t746 = t525 * t790;
t797 = qJD(1) * t556;
t602 = -t526 * t797 - t746;
t87 = Icges(7,5) * t167 + Icges(7,6) * t602 + Icges(7,3) * t166;
t93 = Icges(6,4) * t167 - Icges(6,2) * t166 + Icges(6,6) * t602;
t1145 = t87 - t93;
t628 = t715 * t559;
t792 = qJD(3) * t556;
t737 = t526 * t792;
t168 = t489 * t865 + (t628 + t737) * t554;
t791 = qJD(3) * t557;
t169 = t557 * t628 + (-t489 * t554 + t526 * t791) * t556;
t747 = t525 * t792;
t751 = t526 * t796;
t603 = t747 - t751;
t88 = Icges(7,5) * t169 + Icges(7,6) * t603 + Icges(7,3) * t168;
t94 = Icges(6,4) * t169 - Icges(6,2) * t168 + Icges(6,6) * t603;
t1144 = t88 - t94;
t89 = Icges(6,5) * t167 - Icges(6,6) * t166 + Icges(6,3) * t602;
t91 = Icges(7,4) * t167 + Icges(7,2) * t602 + Icges(7,6) * t166;
t1143 = t89 + t91;
t90 = Icges(6,5) * t169 - Icges(6,6) * t168 + Icges(6,3) * t603;
t92 = Icges(7,4) * t169 + Icges(7,2) * t603 + Icges(7,6) * t168;
t1142 = t90 + t92;
t95 = Icges(7,1) * t167 + Icges(7,4) * t602 + Icges(7,5) * t166;
t97 = Icges(6,1) * t167 - Icges(6,4) * t166 + Icges(6,5) * t602;
t1141 = t95 + t97;
t96 = Icges(7,1) * t169 + Icges(7,4) * t603 + Icges(7,5) * t168;
t98 = Icges(6,1) * t169 - Icges(6,4) * t168 + Icges(6,5) * t603;
t1140 = t96 + t98;
t1054 = rSges(7,3) + qJ(6);
t1052 = t1150 * t559 + t309 * t871 + t311 * t874 + t332 * t864 + t334 * t867;
t1003 = -t310 * t871 - t312 * t874 - t333 * t864 - t335 * t867 - t559 * t997;
t1051 = -t1131 * t559 + t998;
t1050 = -t556 * t997 + t1154;
t1048 = t310 * t525 - t312 * t526 + t333 * t555 - t335 * t558;
t1139 = qJD(3) * t1042 + t1149 * qJD(5);
t1138 = qJD(3) * t1151 + qJD(5) * t1148;
t345 = (-Icges(6,1) * t554 - t898) * t526;
t788 = qJD(5) * t526;
t1137 = (-Icges(7,1) * t554 + t891) * t788 + qJD(5) * t345 + t1041 * qJD(3);
t1040 = t1147 * t556;
t1133 = t423 * t525 - t425 * t526 + t464 * t555 - t466 * t558;
t1036 = t309 * t525 - t311 * t526 + t332 * t555 - t334 * t558;
t1028 = t1147 * t559;
t820 = t401 * rSges(6,1) - t400 * rSges(6,2);
t203 = rSges(6,3) * t869 - t820;
t1128 = t203 * t489;
t1006 = t1108 * t399 - t1124 * t871 + t1125 * t398;
t1049 = t1132 * t556 + t1028;
t1047 = t1132 * t559 - t1040;
t740 = t526 * t785;
t416 = t740 + t792;
t649 = t191 * t554 + t196 * t557;
t651 = t189 * t554 - t195 * t557;
t652 = -t181 * t554 + t194 * t557;
t654 = t180 * t554 + t192 * t557;
t1123 = (t1130 + t1151) * t489 + (t1124 * t556 + t651 - t654) * t417 + (-t1124 * t559 + t649 - t652) * t416;
t1121 = t997 * qJD(1);
t1120 = t1150 * qJD(1);
t349 = qJD(6) * t398;
t1098 = t1054 * t400 + t1074 * t401;
t848 = rSges(7,2) * t869 - t1098;
t1118 = -t489 * t848 + t349;
t1117 = t559 ^ 2;
t779 = qJD(1) * qJD(3);
t445 = qJDD(3) * t556 + t559 * t779;
t778 = qJDD(5) * t526;
t215 = qJD(5) * t602 + t559 * t778 + t445;
t396 = qJD(3) * t788 + qJDD(5) * t525 + qJDD(1);
t491 = pkin(4) * t874;
t760 = -pkin(4) * t738 + pkin(8) * t602;
t217 = qJD(1) * t491 + t760;
t514 = t526 * pkin(8);
t938 = pkin(4) * t525;
t429 = t514 - t938;
t408 = t429 * qJD(3);
t430 = pkin(4) * t526 + pkin(8) * t525;
t510 = pkin(3) * t867;
t560 = qJD(3) ^ 2;
t780 = qJD(1) * qJD(2);
t808 = qJDD(2) * t556 + t559 * t780;
t935 = pkin(7) * qJD(1) ^ 2;
t633 = -t559 * t935 + t808;
t939 = pkin(3) * t558;
t604 = qJDD(4) * t559 + t445 * t939 + t633;
t493 = pkin(8) * t869;
t873 = t525 * t559;
t384 = pkin(4) * t873 - t493;
t553 = -qJ(4) - pkin(7);
t930 = pkin(7) + t553;
t940 = pkin(3) * t555;
t394 = t556 * t930 + t559 * t940;
t537 = t559 * qJ(2);
t469 = pkin(1) * t556 - t537;
t937 = pkin(7) * t556;
t720 = -t469 - t937;
t703 = t394 + t720;
t630 = t384 + t703;
t505 = t553 * t796;
t532 = qJD(4) * t556;
t742 = t558 * t790;
t805 = -pkin(3) * t742 + t532;
t936 = pkin(7) * t559;
t252 = -t505 + (t510 - t936) * qJD(1) + t805;
t473 = t559 * pkin(1) + t556 * qJ(2);
t535 = qJD(2) * t559;
t405 = qJD(1) * t473 - t535;
t699 = -t252 - t405 - t532;
t562 = t445 * t430 + t408 * t792 + t630 * qJDD(1) + (-t217 + t699) * qJD(1) - t560 * t510 + t604;
t691 = rSges(7,1) * t557 + rSges(7,3) * t554;
t299 = rSges(7,2) * t525 + t526 * t691;
t690 = pkin(5) * t557 + qJ(6) * t554;
t835 = t690 * t526 + t299;
t784 = qJD(6) * t554;
t467 = t526 * t784;
t786 = qJD(5) * t557;
t794 = qJD(3) * t525;
t601 = t526 * t786 - t554 * t794;
t513 = t526 * rSges(7,2);
t993 = -t691 * t525 + t513;
t859 = t467 + t601 * qJ(6) + (-t525 * t791 - t554 * t788) * pkin(5) + (-rSges(7,1) * t554 + rSges(7,3) * t557) * t788 + t993 * qJD(3);
t348 = t400 * qJD(6);
t1008 = -t1054 * t166 - t1074 * t167 + t348;
t907 = rSges(7,2) * t602 - t1008;
t7 = qJD(6) * t168 + qJDD(6) * t398 + t215 * t835 - t396 * t848 + t416 * t859 - t489 * t907 + t562;
t1116 = t7 - g(1);
t1073 = t1134 * t167 + t1135 * t602 + t1136 * t166 - t1140 * t401 + t1142 * t869 - t1144 * t400;
t1072 = t1000 * t167 + t1001 * t166 + t1002 * t602 - t1141 * t401 + t1143 * t869 - t1145 * t400;
t1071 = t1134 * t169 + t1135 * t603 + t1136 * t168 + t1140 * t399 - t1142 * t871 + t1144 * t398;
t1070 = t1000 * t169 + t1001 * t168 + t1002 * t603 + t1141 * t399 - t1143 * t871 + t1145 * t398;
t1020 = t1108 * t167 + t1124 * t602 + t1125 * t166 - t1137 * t401 + t1138 * t869 - t1139 * t400;
t1019 = t1108 * t169 + t1124 * t603 + t1125 * t168 + t1137 * t399 - t1138 * t871 + t1139 * t398;
t1062 = -t1135 * t871 + t1119;
t1114 = t1002 * t869 - t1122;
t75 = t186 * t525 + t526 * t654;
t77 = t183 * t525 - t526 * t651;
t1113 = t75 + t77;
t76 = t188 * t525 + t526 * t652;
t78 = t185 * t525 - t526 * t649;
t1112 = t76 + t78;
t551 = t556 ^ 2;
t1111 = t939 * (-t551 - t1117);
t1004 = t1124 * t525 - t1130 * t526;
t1109 = t526 * t660 + t1155;
t1107 = t1132 * qJD(1) - qJD(3) * t1156;
t1106 = qJD(1) * t1131 + qJD(3) * t1040 + t1121;
t1105 = -qJD(1) * t1104 - qJD(3) * t1028 + t1120;
t1103 = t1050 * t556 + t1051 * t559;
t1102 = t1003 * t556 + t1052 * t559;
t175 = qJD(1) * t310 + t423 * t792;
t346 = t425 * t556;
t177 = qJD(1) * t312 + qJD(3) * t346;
t222 = qJD(1) * t333 + t464 * t792;
t414 = t466 * t556;
t224 = qJD(1) * t335 + qJD(3) * t414;
t1101 = qJD(3) * t1036 - t175 * t526 - t177 * t525 - t222 * t558 - t224 * t555 + t1120;
t403 = t666 * qJD(3);
t404 = t670 * qJD(3);
t433 = t667 * qJD(3);
t434 = t671 * qJD(3);
t1100 = qJD(1) * t1147 + t1133 * qJD(3) + t403 * t526 + t404 * t525 + t433 * t558 + t434 * t555;
t343 = t423 * t559;
t174 = qJD(1) * t309 - qJD(3) * t343;
t347 = t425 * t559;
t176 = -qJD(3) * t347 + (t556 * t670 + t895) * qJD(1);
t413 = t464 * t559;
t221 = qJD(1) * t332 - qJD(3) * t413;
t415 = t466 * t559;
t223 = -qJD(3) * t415 + (t556 * t671 + t896) * qJD(1);
t1099 = qJD(3) * t1048 + t174 * t526 + t176 * t525 + t221 * t558 + t223 * t555 + t1121;
t824 = t1054 * t870 - t1074 * t872;
t1097 = (t1127 * t398 - t1136 - t350 + t900) * t417 + (-t1127 * t400 - t1001 + t352 - t355) * t416 + (Icges(7,1) * t872 - t1125 - t345 - t477) * t489;
t1096 = (-t1126 * t399 + t1134 - t353 + t893) * t417 + (t1126 * t401 + t1000 - t351 + t354) * t416 + (t1108 - t1149) * t489;
t1095 = (t1137 * t557 + t1139 * t554 + (-t1108 * t554 + t1125 * t557) * qJD(5) + t1124 * qJD(3)) * t526 + (qJD(3) * t1130 + t1138) * t525;
t1091 = t1049 * qJD(1);
t1088 = t1047 * qJD(1);
t813 = t464 + t671;
t814 = -t667 + t466;
t815 = t423 + t670;
t816 = -t666 + t425;
t1080 = (-t525 * t815 + t526 * t816 - t555 * t813 + t558 * t814) * qJD(1);
t1079 = t1006 * t489 + t1115 * t416;
t1078 = t1123 * t526;
t530 = qJDD(3) * t559;
t216 = -qJD(1) * t740 + t530 + (-t778 + (-qJD(1) + t789) * qJD(3)) * t556;
t1076 = t1005 * t396 + t1020 * t489 + t1060 * t216 + t1072 * t416 + t1073 * t417 + t1114 * t215;
t1075 = t1006 * t396 + t1019 * t489 + t1062 * t216 + t1070 * t416 + t1071 * t417 + t1115 * t215;
t17 = (-qJD(3) * t654 + t92) * t525 + (qJD(3) * t186 + t554 * t88 + t557 * t96 + (t180 * t557 - t192 * t554) * qJD(5)) * t526;
t19 = (qJD(3) * t651 + t90) * t525 + (qJD(3) * t183 - t554 * t94 + t557 * t98 + (-t189 * t557 - t195 * t554) * qJD(5)) * t526;
t1069 = t17 + t19;
t18 = (-qJD(3) * t652 + t91) * t525 + (qJD(3) * t188 + t554 * t87 + t557 * t95 + (-t181 * t557 - t194 * t554) * qJD(5)) * t526;
t20 = (qJD(3) * t649 + t89) * t525 + (qJD(3) * t185 - t554 * t93 + t557 * t97 + (-t191 * t557 + t196 * t554) * qJD(5)) * t526;
t1068 = t18 + t20;
t1067 = t1062 * t417 + t1079;
t1066 = t1114 * t416 - t1152;
t1065 = t1004 * t489 + t1112 * t416 + t1113 * t417;
t1064 = qJD(3) * t1102 + t1091;
t1063 = qJD(3) * t1103 - t1088;
t1058 = t1100 * t559 + t1107 * t556;
t1057 = -t1100 * t556 + t1107 * t559;
t1056 = -qJD(3) * t1131 - t175 * t525 + t177 * t526 - t222 * t555 + t224 * t558;
t1055 = qJD(3) * t1104 - t174 * t525 + t176 * t526 - t221 * t555 + t223 * t558;
t929 = rSges(5,1) * t526;
t428 = -rSges(5,2) * t525 + t929;
t1053 = t428 * t556;
t1046 = t1109 * t556;
t1045 = t1109 * t559;
t1044 = t1108 * t556;
t1043 = t1108 * t559;
t1038 = t467 - t859;
t1037 = -t1002 * t416 - t1124 * t489 - t1135 * t417;
t986 = -t1112 * t559 + t1113 * t556;
t1035 = t1112 * t556 + t1113 * t559;
t985 = t1060 * t556 - t1114 * t559;
t1034 = t1060 * t559 + t1114 * t556;
t984 = t1062 * t556 - t1115 * t559;
t1033 = t1062 * t559 + t1115 * t556;
t1032 = t1106 * t1117 + (t1099 * t556 + (-t1101 + t1105) * t559) * t556;
t1031 = t1101 * t1117 + (t1105 * t556 + (-t1099 + t1106) * t559) * t556;
t697 = rSges(5,1) * t525 + rSges(5,2) * t526;
t607 = t697 + t940;
t1030 = t525 * t796 + t737;
t1029 = t1156 * qJD(1);
t407 = t697 * qJD(3);
t320 = t394 * t790;
t382 = -pkin(8) * t871 + t491;
t395 = -t559 * t930 + t510;
t819 = -t382 - t395;
t606 = -t384 * t790 + t792 * t819 - t320;
t999 = t1054 * t398 + t1074 * t399;
t850 = -rSges(7,2) * t871 + t999;
t37 = -t416 * t850 + t417 * t848 + t467 + t606;
t1025 = -t417 * t835 + t850 * t489 - t348;
t719 = t473 + t936;
t702 = t395 + t719;
t631 = t382 + t702;
t756 = -t535 + t805;
t711 = -t430 * t790 + t756;
t573 = t631 * qJD(1) + t711;
t46 = t573 + t1025;
t718 = t46 * t835;
t1026 = -t37 * t848 + t718;
t584 = t556 * (t335 + t413) - t559 * (-Icges(4,2) * t867 + t334 + t507);
t585 = t556 * (t333 - t415) - t559 * (t332 - t414);
t586 = t556 * (t312 + t343) - t559 * (-Icges(5,2) * t874 + t311 + t478);
t587 = t556 * (t310 - t347) - t559 * (t309 - t346);
t1024 = -t587 * t525 + t586 * t526 - t585 * t555 + t584 * t558;
t249 = t559 * t252;
t383 = pkin(4) * t871 + pkin(8) * t874;
t385 = t430 * t559;
t1023 = t385 * t790 + t559 * t217 + t249 - (-t383 * t556 + t1111) * qJD(3);
t761 = pkin(4) * t1030 + pkin(8) * t747;
t218 = -pkin(8) * t751 + t761;
t446 = -t556 * t779 + t530;
t750 = t555 * t796;
t533 = qJD(4) * t559;
t743 = t558 * t792;
t810 = pkin(3) * t743 + t533;
t713 = pkin(3) * t750 + t553 * t797 + t810;
t772 = pkin(7) * t797;
t251 = t713 + t772;
t534 = qJD(2) * t556;
t807 = qJ(2) * t796 + t534;
t764 = qJD(1) * (-pkin(1) * t797 + t807) + qJDD(1) * t473 + t556 * t780;
t605 = qJDD(1) * t936 - t556 * t935 + t764;
t776 = t560 * t940;
t572 = qJDD(1) * t395 + qJDD(4) * t556 + t559 * t776 + t605 + (t251 + t533) * qJD(1);
t722 = -t430 - t939;
t563 = (-qJD(3) * t408 - qJDD(2)) * t559 + t722 * t446 + t572 + qJDD(1) * t382 + qJD(1) * t218;
t1007 = rSges(7,2) * t747 + t1054 * t168 + t1074 * t169 + t349;
t862 = -rSges(7,2) * t751 + t1007;
t6 = qJD(6) * t166 - qJDD(6) * t400 - t216 * t835 + t396 * t850 - t417 * t859 + t489 * t862 + t563;
t1022 = t6 - g(2);
t1021 = t559 * t7;
t388 = t430 * t792;
t757 = t534 + t810;
t574 = qJD(1) * t630 + t388 + t757;
t45 = t416 * t835 + t1118 + t574;
t1017 = t45 * t835;
t548 = t559 * rSges(4,3);
t375 = rSges(4,1) * t867 + rSges(4,2) * t864 + t548;
t996 = t375 + t719;
t474 = -rSges(3,2) * t559 + t556 * rSges(3,3);
t989 = t1148 * t489 + (-t1093 * t399 - t1094 * t398) * t417 + (t1093 * t401 + t1094 * t400) * t416;
t979 = t1004 * t396 + t1095 * t489;
t472 = rSges(4,1) * t558 - rSges(4,2) * t555;
t419 = t472 * t559;
t698 = rSges(4,1) * t555 + rSges(4,2) * t558;
t225 = -qJD(3) * t419 + (t556 * t698 + t548) * qJD(1);
t435 = t698 * qJD(3);
t376 = -t556 * rSges(4,3) + t559 * t698;
t704 = t376 + t720;
t79 = -t435 * t792 + t445 * t472 + (-t225 - t405) * qJD(1) + t704 * qJDD(1) + t633;
t749 = t558 * t796;
t758 = rSges(4,2) * t749 + (t743 + t750) * rSges(4,1);
t793 = qJD(3) * t555;
t226 = (-rSges(4,2) * t793 - rSges(4,3) * qJD(1)) * t556 + t758;
t80 = qJD(1) * t226 + qJDD(1) * t375 - t446 * t472 + (qJD(3) * t435 - qJDD(2)) * t559 + t605;
t978 = t79 * t556 - t80 * t559;
t933 = g(2) * t559;
t976 = g(1) * t556 - t933;
t845 = t252 * t790 - t446 * t394;
t588 = t217 * t790 - t446 * t384 + t445 * t819 + t845;
t846 = -t218 - t251;
t716 = t846 * t556;
t739 = t525 * t784;
t5 = (qJD(6) * t786 + qJDD(6) * t554) * t526 + t907 * t417 - t862 * t416 + t848 * t216 - t850 * t215 + (t716 - t739) * qJD(3) + t588;
t967 = t37 * t907 + t5 * t848;
t547 = t559 * rSges(5,3);
t748 = t428 * t790;
t178 = -t748 + (t556 * t697 + t547) * qJD(1);
t762 = rSges(5,1) * t1030 + rSges(5,2) * t751;
t179 = (-rSges(5,2) * t794 - rSges(5,3) * qJD(1)) * t556 + t762;
t966 = t178 * t559 + (-t179 - t251) * t556;
t962 = -pkin(1) - pkin(7);
t961 = t215 / 0.2e1;
t960 = t216 / 0.2e1;
t959 = t396 / 0.2e1;
t958 = -t416 / 0.2e1;
t957 = t416 / 0.2e1;
t956 = -t417 / 0.2e1;
t955 = t417 / 0.2e1;
t953 = t445 / 0.2e1;
t952 = t446 / 0.2e1;
t951 = -t489 / 0.2e1;
t950 = t489 / 0.2e1;
t948 = t556 / 0.2e1;
t947 = -t559 / 0.2e1;
t944 = rSges(3,2) - pkin(1);
t943 = -rSges(7,2) - pkin(8);
t942 = -rSges(5,3) - pkin(1);
t941 = -rSges(6,3) - pkin(8);
t934 = g(1) * t559;
t928 = rSges(6,1) * t557;
t926 = rSges(6,2) * t554;
t924 = rSges(3,3) * t559;
t923 = rSges(6,3) * t525;
t922 = t17 * t417;
t921 = t18 * t416;
t920 = t19 * t417;
t919 = t20 * t416;
t313 = rSges(5,1) * t874 + rSges(5,2) * t871 + t547;
t723 = -t428 - t939;
t795 = qJD(3) * t407;
t48 = qJD(1) * t179 + qJDD(1) * t313 + t723 * t446 + (-qJDD(2) + t795) * t559 + t572;
t916 = t48 * t559;
t512 = t526 * rSges(6,3);
t694 = -t926 + t928;
t300 = t526 * t694 + t923;
t822 = t399 * rSges(6,1) - t398 * rSges(6,2);
t199 = -rSges(6,3) * t871 + t822;
t62 = t199 * t489 - t300 * t417 + t573;
t915 = t62 * t300;
t914 = t75 * t216;
t913 = t76 * t215;
t912 = t77 * t216;
t911 = t78 * t215;
t386 = t428 * t792;
t544 = t556 * rSges(5,3);
t314 = t559 * t697 - t544;
t632 = t314 + t703;
t118 = qJD(1) * t632 + t386 + t757;
t883 = t118 * t559;
t426 = t472 * t792;
t150 = qJD(1) * t704 + t426 + t534;
t882 = t150 * t559;
t876 = t429 * t559;
t844 = t1054 * t399 - t1074 * t398;
t843 = -t1054 * t401 + t1074 * t400;
t770 = t526 * t865;
t771 = t526 * t866;
t842 = rSges(7,2) * t874 + t1054 * t771 + t1074 * t770;
t841 = -t299 * t559 - t690 * t869;
t836 = -t690 * t525 + t993;
t830 = -t313 - t395;
t323 = t559 * t394;
t829 = -t559 * t384 - t323;
t818 = t384 + t394;
t511 = pkin(3) * t864;
t817 = t556 * t430 + t511;
t470 = rSges(3,2) * t556 + t924;
t812 = -t469 + t470;
t393 = t473 + t474;
t811 = t525 * t926 + t512;
t744 = t555 * t790;
t809 = pkin(3) * t744 + qJD(1) * t511;
t806 = rSges(3,2) * t797 + rSges(3,3) * t796;
t449 = qJD(1) * t469;
t804 = t534 - t449;
t781 = -m(5) - m(6) - m(7);
t777 = -rSges(4,3) + t962;
t773 = pkin(3) * t793;
t768 = t169 * rSges(6,1) - t168 * rSges(6,2) + rSges(6,3) * t747;
t767 = -t199 + t819;
t766 = qJD(1) * t383 + t809;
t503 = pkin(3) * t749;
t765 = t556 * t408 + t430 * t796 + t503;
t763 = t430 * t797 + t809;
t759 = t511 + t383;
t755 = t526 * t943;
t754 = t526 * t941;
t745 = t555 * t792;
t733 = -pkin(4) - t928;
t732 = t7 * t835;
t731 = -t797 / 0.2e1;
t728 = -t792 / 0.2e1;
t727 = t792 / 0.2e1;
t726 = -t790 / 0.2e1;
t725 = t790 / 0.2e1;
t721 = t514 - t940;
t714 = t819 - t850;
t712 = t505 - t756;
t357 = rSges(5,1) * t871 - rSges(5,2) * t874;
t701 = t938 + t940;
t700 = qJD(1) * t385 + t429 * t792 + t503;
t475 = rSges(2,1) * t559 - rSges(2,2) * t556;
t471 = rSges(2,1) * t556 + rSges(2,2) * t559;
t696 = rSges(6,1) * t167 - rSges(6,2) * t166;
t100 = rSges(6,3) * t602 + t696;
t360 = (-rSges(6,1) * t554 - rSges(6,2) * t557) * t526;
t171 = qJD(5) * t360 + (-t525 * t694 + t512) * qJD(3);
t21 = -t100 * t489 + t171 * t416 - t203 * t396 + t215 * t300 + t562;
t102 = -rSges(6,3) * t751 + t768;
t22 = t102 * t489 - t171 * t417 + t199 * t396 - t216 * t300 + t563;
t689 = t21 * t559 + t22 * t556;
t672 = qJD(1) * t394 - t449 + t757;
t151 = qJD(1) * t996 - t472 * t790 - t535;
t655 = t150 * t556 - t151 * t559;
t648 = t199 * t559 + t203 * t556;
t647 = t225 * t559 - t226 * t556;
t638 = -t375 * t556 - t376 * t559;
t627 = -t553 * t559 + t473 + t510;
t626 = t713 + t807;
t266 = rSges(6,1) * t770 - rSges(6,2) * t771 + rSges(6,3) * t874;
t614 = t491 + t627;
t613 = -t314 * t559 + t556 * t830;
t612 = t553 * t556 - t469 - t493;
t611 = qJD(1) * t384 + t388 + t672;
t610 = t712 - t760;
t609 = t701 - t513;
t608 = t701 - t512;
t590 = -t45 * t848 + t46 * t850;
t589 = t37 * t850 - t1017;
t577 = -t1054 * t554 - t1074 * t557 - pkin(4);
t576 = t626 + t761;
t55 = -t199 * t416 + t203 * t417 + t606;
t61 = t300 * t416 - t1128 + t574;
t567 = t55 * t648 + (-t556 * t62 - t559 * t61) * t300;
t566 = -t1026 * t556 + t589 * t559;
t486 = rSges(5,2) * t873;
t444 = t526 * rSges(6,2) * t868;
t418 = t472 * t556;
t362 = -rSges(5,1) * t869 + t486;
t298 = -t525 * t928 + t811;
t280 = qJD(1) * t393 - t535;
t279 = qJD(1) * t812 + t534;
t268 = t444 + (-rSges(6,1) * t870 - t923) * t559;
t246 = rSges(6,1) * t400 + rSges(6,2) * t401;
t242 = -rSges(6,1) * t398 - rSges(6,2) * t399;
t204 = t638 * qJD(3);
t130 = qJD(1) * t806 + qJDD(1) * t474 - qJDD(2) * t559 + t764;
t129 = t812 * qJDD(1) + (-qJD(1) * t474 - t405) * qJD(1) + t808;
t119 = -t748 + (t313 + t702) * qJD(1) + t756;
t47 = t428 * t445 + (-t776 - t795) * t556 + t632 * qJDD(1) + (-t178 + t699) * qJD(1) + t604;
t8 = qJD(3) * t716 + t100 * t417 - t102 * t416 - t199 * t215 + t203 * t216 + t588;
t1 = [(t1056 + t1057) * t725 + (t1055 + t1058 + t1064) * t727 - t1047 * t445 / 0.2e1 + t919 / 0.2e1 + (t1020 + t1067) * t957 + t1005 * t961 + t1006 * t960 + t1019 * t955 + t920 / 0.2e1 + t921 / 0.2e1 + t979 + t1048 * t953 + (-t1036 + t1049) * t952 + t912 / 0.2e1 + t913 / 0.2e1 + (-t718 * t416 + (-t934 + t1021) * t609 + (t1007 - t1118 + t576 - t611) * t46 + (rSges(7,2) * t794 * t559 + t1008 + t1025 + t610 + t711) * t45 + t1022 * (t556 * t755 + t614 + t999) + (t45 * t631 + t46 * t937 + (-t45 * pkin(1) + t46 * t755) * t559 + (t45 * (-qJ(2) - t609) - t46 * pkin(1)) * t556) * qJD(1) + t1116 * (t612 + t1098)) * m(7) + t911 / 0.2e1 + t922 / 0.2e1 + (-t608 * t934 + t61 * (t610 - t696) + t62 * (t576 + t768) + (rSges(6,3) * t61 * t794 + t21 * t608) * t559 + ((-t61 * pkin(1) + t62 * t754) * t559 + (t61 * (-qJ(2) - t608) - t62 * pkin(1)) * t556) * qJD(1) - (-t61 + t611 - t772 - t1128) * t62 - t915 * t416 + (-g(2) + t22) * (t556 * t754 + t614 + t822) + (-g(1) + t21) * (t612 + t820)) * m(6) + ((-t1000 * t557 - t1001 * t554) * t526 - t1002 * t525 + t1112) * t417 * t951 + (t150 * (rSges(4,1) * t742 - rSges(4,2) * t744 + t535) + t151 * (-rSges(4,2) * t745 + t758 + t807) + (t777 * t882 + (t150 * (-qJ(2) - t698) + t151 * t777) * t556) * qJD(1) - (-t150 + t426 + (t376 - t937) * qJD(1) + t804) * t151 + (t80 - g(2)) * t996 + (t79 - g(1)) * (t556 * t962 + t376 + t537)) * m(4) + (t118 * (rSges(5,1) * t738 - rSges(5,2) * t746 + t712) + t119 * (-rSges(5,2) * t747 + t626 + t762) + (t942 * t883 + (t118 * (-qJ(2) - t607) + t119 * t942) * t556) * qJD(1) - (-t118 + t386 + (t314 - t937) * qJD(1) + t672) * t119 + (t48 - g(2)) * (t627 + t313) + (-g(1) + t47) * (t537 - t544 + (-pkin(1) + t553) * t556 + t607 * t559)) * m(5) + t914 / 0.2e1 + (-qJD(3) * t1132 + t403 * t525 - t404 * t526 + t433 * t555 - t434 * t558) * qJD(1) + (m(2) * (t471 ^ 2 + t475 ^ 2) + Icges(2,3) + Icges(3,1) - t1133) * qJDD(1) + ((t1114 + t1153) * t417 + t1079) * t958 + ((-t1062 + t1153) * t416 + t1066 + t1152) * t956 + ((t997 * t551 + ((t1131 + t997) * t559 - t998 + t1003) * t559) * qJD(3) + t1063 + t1088) * t726 + (((t998 + t1003 - t1051) * t556 + (-t1154 + (-t1131 + t997) * t556 + t1050 + t1052) * t559) * qJD(3) + t1091) * t728 - m(2) * (-g(1) * t471 + g(2) * t475) + (t279 * t535 + t280 * (t806 + t807) + (t279 * t944 * t559 + (t279 * (-rSges(3,3) - qJ(2)) - t280 * pkin(1)) * t556) * qJD(1) - (qJD(1) * t470 - t279 + t804) * t280 + (t130 - g(2)) * t393 + (t129 - g(1)) * (t556 * t944 + t537 + t924)) * m(3); (-m(3) + t781) * t976 + 0.2e1 * (t6 * t947 + t7 * t948) * m(7) + 0.2e1 * (t21 * t948 + t22 * t947) * m(6) + 0.2e1 * (t47 * t948 - t916 / 0.2e1) * m(5) + 0.2e1 * (t129 * t948 + t130 * t947) * m(3) + (-t976 + t978) * m(4); -t1065 * t788 / 0.2e1 + (t1063 + t1066) * t796 / 0.2e1 + t1066 * t741 / 0.2e1 + (t1064 + t1067) * t731 + ((qJD(3) * t647 - t375 * t445 - t376 * t446) * t638 + t204 * ((-t375 * t559 + t376 * t556) * qJD(1) + t647) - t655 * t435 + ((t151 * t556 + t882) * qJD(1) + t978) * t472 - (t150 * t419 + t151 * t418) * qJD(1) - (t204 * (-t418 * t556 - t419 * t559) - t655 * t698) * qJD(3) - g(1) * t418 + g(2) * t419 + g(3) * t698) * m(4) - t1067 * t525 * t787 / 0.2e1 + (-t61 * (-t268 * t489 + t298 * t416 + t700) - t62 * (t266 * t489 - t298 * t417 + t766) - (-t510 * t61 - t62 * t876) * qJD(3) - ((t199 * t62 - t203 * t61) * t526 + t567 * t525) * qJD(5) - g(1) * (t266 + t759) - g(2) * t444 - g(3) * (t525 * t733 + t721 + t811) - (t525 * t941 + t526 * t733 - t939) * t933 + t21 * t817 + t61 * t765 + t62 * t763 + t8 * t829 + (t22 * (-t300 + t722) + t62 * (-t171 - t408) + t8 * t203 + t61 * t300 * qJD(1)) * t559 + (t21 * t300 + t61 * (t171 - t773) + t8 * t767 + t915 * qJD(1)) * t556 + (t266 * t416 - t268 * t417 + (qJD(1) * t767 + t100) * t559 + (-t102 + t846 + (-t203 + t818) * qJD(1)) * t556 + t1023) * t55) * m(6) + (t7 * t817 + t5 * t829 + (t6 * (t722 - t835) + t1017 * qJD(1) + t967) * t559 + (t718 * qJD(1) + t5 * t714 + t732) * t556 - (t525 * t566 + t526 * t590) * qJD(5) - g(1) * (t759 + t842) - (t525 * t943 + t526 * t577 - t939) * t933 - (t525 * t577 + t513 + t721) * g(3) + (qJD(3) * t510 - t836 * t416 + t841 * t489 - t700 + t765 + (-t773 - t1038) * t556) * t45 + (t714 * t796 + (t846 - t862 + (t818 - t848) * qJD(1)) * t556 + t739 - t841 * t417 + t842 * t416 + t1023) * t37 + (t876 * qJD(3) + t836 * t417 - t842 * t489 + t763 - t766 + (-t408 + t1038) * t559) * t46) * m(7) + (-qJD(1) * t986 + t1068 * t556 + t1069 * t559) * t950 + (-qJD(1) * t984 + t1070 * t556 + t1071 * t559) * t955 + ((t1005 * t526 + t1060 * t874) * qJD(5) + ((-qJD(5) * t1114 + t1037) * t525 + t1078) * t559 + (-t1041 * t401 - t1042 * t400) * t489 + (-t1044 * t401 - t1046 * t400) * t417 + (t1043 * t401 + t1045 * t400) * t416) * t958 + ((t1006 * t526 - t1115 * t873) * qJD(5) + ((qJD(5) * t1062 - t1037) * t525 - t1078) * t556 + (t1041 * t399 + t1042 * t398) * t489 + (t1044 * t399 + t1046 * t398) * t417 + (-t1043 * t399 - t1045 * t398) * t416) * t956 + (qJD(1) * t1057 + qJD(3) * t1032 + qJDD(1) * t1049 + t1003 * t445 + t1052 * t446 + t1075) * t559 / 0.2e1 + (qJD(1) * t1058 + qJD(3) * t1031 - qJDD(1) * t1047 + t1050 * t445 + t1051 * t446 + t1076) * t948 + (t1056 * t559 + t1055 * t556 + (t1036 * t556 + t1048 * t559) * qJD(1)) * qJD(1) / 0.2e1 + ((t1050 * t559 - t1051 * t556) * qJD(1) + t1031) * t727 + ((t1003 * t559 - t1052 * t556) * qJD(1) + t1032) * t725 + (-t1036 * t559 + t1048 * t556) * qJDD(1) / 0.2e1 + (-qJD(1) * t985 + t1072 * t556 + t1073 * t559) * t957 - ((t525 * t586 + t526 * t587 + t555 * t584 + t558 * t585) * qJD(3) + (-t525 * t816 - t526 * t815 - t555 * t814 - t558 * t813) * qJD(1)) * qJD(1) / 0.2e1 + ((-t1028 * t792 - t1029) * t556 + ((t1040 * t556 + t1024) * qJD(3) - t1080) * t559) * t728 + ((t1040 * t790 - t1029) * t559 + ((-t1028 * t559 - t1024) * qJD(3) + t1080) * t556) * t726 + t1033 * t960 + t1034 * t961 + t1035 * t959 + (((t1041 * t557 + t1042 * t554 + t1124) * t489 + (t1044 * t557 + t1046 * t554 + t1135) * t417 + (-t1043 * t557 - t1045 * t554 + t1002) * t416 + t1004 * qJD(5)) * t526 + (qJD(5) * t986 + t1123) * t525) * t951 + (-g(1) * (t357 + t511) - g(2) * (t486 + (-t929 - t939) * t559) + g(3) * t607 + t47 * (t511 + t1053) + t723 * t916 + (qJD(3) * t966 - t314 * t446 + t830 * t445 + t845) * (-t323 + t613) + t883 * t428 * qJD(1) + (-t357 + t1053) * qJD(1) * t119 + (t249 + t966 + (t830 * t559 + (t314 + t394) * t556) * qJD(1) - (-t357 * t556 + t362 * t559 + t1111) * qJD(3)) * (qJD(3) * t613 - t320) + (-pkin(3) * t745 + qJD(1) * t362 + (qJD(3) * t607 - t407) * t556) * t118) * m(5) + t1102 * t952 + t1103 * t953; t781 * (g(2) * t556 + t934) + m(5) * (t47 * t559 + t48 * t556) + m(6) * t689 + m(7) * (t556 * t6 + t1021); (t1005 * t525 - t526 * t985) * t961 + (t1006 * t525 - t526 * t984) * t960 + (t1004 * t525 - t526 * t986) * t959 + (t1096 * t400 + t1097 * t401 + t989 * t869) * t958 + ((-qJD(1) * t1034 + t1005 * qJD(3) + t1072 * t559 - t1073 * t556) * t526 + (qJD(3) * t985 + t1020) * t525) * t957 + (-t1096 * t398 - t1097 * t399 - t871 * t989) * t956 + ((-qJD(1) * t1033 + t1006 * qJD(3) + t1070 * t559 - t1071 * t556) * t526 + (qJD(3) * t984 + t1019) * t525) * t955 + ((-t1096 * t554 - t1097 * t557) * t526 + t989 * t525) * t951 + ((-qJD(1) * t1035 + t1004 * qJD(3) + t1068 * t559 - t1069 * t556) * t526 + (qJD(3) * t986 + t1095) * t525) * t950 + (t913 + t914 + t921 + t922 + t911 + t912 + t919 + t920 + t979) * t525 / 0.2e1 - t1075 * t871 / 0.2e1 + t1076 * t869 / 0.2e1 + t1065 * qJD(3) * t526 / 0.2e1 + (-g(1) * t844 - g(2) * t843 - g(3) * t824 + (qJD(3) * t566 - t45 * t907 + t46 * t862 + t6 * t850 - t7 * t848) * t525 + (t590 * qJD(3) + (qJD(1) * t1026 - t37 * t862 + t45 * t859 - t5 * t850 + t732) * t559 + (qJD(1) * t589 + t46 * t859 + t6 * t835 - t967) * t556) * t526 - (t37 * t870 + t399 * t45 - t401 * t46) * qJD(6) - (-t45 * t843 + t46 * t844) * t489 - (t37 * t843 - t46 * t824) * t417 - (-t37 * t844 + t45 * t824) * t416) * m(7) + ((qJD(3) * t567 - t61 * t100 + t62 * t102 + t22 * t199 - t21 * t203) * t525 + (t61 * (-qJD(3) * t203 + t171 * t559) + t62 * (qJD(3) * t199 + t171 * t556) - t8 * t648 + t55 * (-t100 * t556 - t102 * t559 + t199 * t797 - t203 * t796) + ((-t556 * t61 + t559 * t62) * qJD(1) + t689) * t300) * t526 - t61 * (-t246 * t489 + t360 * t416) - t62 * (t242 * t489 - t360 * t417) - t55 * (-t242 * t416 + t246 * t417) - g(1) * t242 - g(2) * t246 - g(3) * t360) * m(6) + t1067 * (t525 * t727 - t751 / 0.2e1) + t1066 * (t525 * t726 + t526 * t731); (t166 * t46 + t168 * t45 + (-t45 * t489 - t1022) * t400 + (-t416 * t45 + t417 * t46 - g(3) + t5) * t872 + (-t46 * t489 + t1116) * t398 + (t398 * t416 + t400 * t417 + t601) * t37) * m(7);];
tau  = t1;
