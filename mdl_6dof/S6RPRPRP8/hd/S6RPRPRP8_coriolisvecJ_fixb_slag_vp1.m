% Calculate vector of centrifugal and Coriolis load on the joints for
% S6RPRPRP8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d5,theta4]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 03:26
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RPRPRP8_coriolisvecJ_fixb_slag_vp1(qJ, qJD, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPRP8_coriolisvecJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPRP8_coriolisvecJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRPRP8_coriolisvecJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRPRP8_coriolisvecJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRPRP8_coriolisvecJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRPRP8_coriolisvecJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 03:24:26
% EndTime: 2019-03-09 03:25:49
% DurationCPUTime: 74.20s
% Computational Cost: add. (27481->1118), mult. (41984->1426), div. (0->0), fcn. (38808->8), ass. (0->558)
t1045 = Icges(6,1) + Icges(7,1);
t1016 = Icges(7,4) + Icges(6,5);
t1015 = Icges(6,6) - Icges(7,6);
t500 = sin(qJ(5));
t1081 = (Icges(6,4) - Icges(7,5)) * t500;
t503 = cos(qJ(5));
t1080 = t1045 * t503 - t1081;
t1044 = Icges(6,2) + Icges(7,3);
t1079 = Icges(7,2) + Icges(6,3);
t1078 = Icges(4,3) + Icges(5,3);
t1077 = -t1015 * t500 + t1016 * t503;
t496 = qJ(3) + pkin(9);
t476 = sin(t496);
t477 = cos(t496);
t501 = sin(qJ(3));
t504 = cos(qJ(3));
t1075 = Icges(4,5) * t501 + Icges(5,5) * t476 + Icges(4,6) * t504 + Icges(5,6) * t477;
t835 = Icges(6,4) * t503;
t608 = -Icges(6,2) * t500 + t835;
t1076 = -t1015 * t476 - t477 * t608;
t806 = t477 * t503;
t443 = Icges(7,5) * t806;
t808 = t477 * t500;
t1039 = Icges(7,3) * t808 + t1076 + t443;
t1026 = t1016 * t476 + t1080 * t477;
t502 = sin(qJ(1));
t800 = t502 * t503;
t505 = cos(qJ(1));
t804 = t500 * t505;
t376 = t476 * t800 + t804;
t807 = t477 * t502;
t798 = t505 * t503;
t801 = t502 * t500;
t375 = t476 * t801 - t798;
t830 = Icges(7,5) * t375;
t188 = Icges(7,1) * t376 - Icges(7,4) * t807 + t830;
t344 = Icges(6,4) * t375;
t191 = Icges(6,1) * t376 - Icges(6,5) * t807 - t344;
t1049 = t188 + t191;
t341 = Icges(7,5) * t376;
t176 = -Icges(7,6) * t807 + Icges(7,3) * t375 + t341;
t837 = Icges(6,4) * t376;
t185 = -Icges(6,2) * t375 - Icges(6,6) * t807 + t837;
t1051 = t176 - t185;
t1034 = t1049 * t376 + t1051 * t375;
t377 = t476 * t804 + t800;
t378 = t476 * t798 - t801;
t342 = Icges(7,5) * t377;
t805 = t477 * t505;
t190 = -Icges(7,1) * t378 + Icges(7,4) * t805 - t342;
t345 = Icges(6,4) * t377;
t192 = Icges(6,1) * t378 - Icges(6,5) * t805 - t345;
t918 = -t192 + t190;
t343 = Icges(7,5) * t378;
t177 = -Icges(7,6) * t805 + Icges(7,3) * t377 + t343;
t346 = Icges(6,4) * t378;
t187 = Icges(6,2) * t377 + Icges(6,6) * t805 - t346;
t919 = -t187 - t177;
t1035 = t919 * t377 + t918 * t378;
t179 = Icges(6,5) * t376 - Icges(6,6) * t375 - Icges(6,3) * t807;
t182 = Icges(7,4) * t376 - Icges(7,2) * t807 + Icges(7,6) * t375;
t1050 = t179 + t182;
t181 = -Icges(6,5) * t378 + Icges(6,6) * t377 + Icges(6,3) * t805;
t184 = -Icges(7,4) * t378 + Icges(7,2) * t805 - Icges(7,6) * t377;
t920 = t181 + t184;
t1074 = t1035 + (-t1050 * t502 - t505 * t920) * t477 + t1034;
t728 = qJD(5) * t502;
t730 = qJD(3) * t505;
t393 = -t477 * t728 + t730;
t447 = qJD(5) * t476 + qJD(1);
t1038 = t1077 * t477 + t1079 * t476;
t924 = -t1026 * t378 + t1038 * t805 - t1039 * t377;
t971 = -t1049 * t378 + t1050 * t805 - t1051 * t377;
t1073 = -t393 * t971 - t924 * t447;
t828 = Icges(7,5) * t503;
t603 = Icges(7,3) * t500 + t828;
t956 = -t1015 * t477 + (-t603 + t608) * t476;
t1071 = -t1077 * t476 + t1079 * t477;
t955 = t1016 * t477 - t1080 * t476;
t1061 = t1075 * t502 + t1078 * t505;
t1070 = (t1044 * t503 + t1081) * t477;
t1069 = (-t1015 * t503 - t1016 * t500) * t477;
t1068 = Icges(4,5) * t504 + Icges(5,5) * t477 - Icges(4,6) * t501 - Icges(5,6) * t476;
t839 = Icges(5,4) * t476;
t609 = Icges(5,2) * t477 + t839;
t301 = -Icges(5,6) * t502 + t505 * t609;
t838 = Icges(5,4) * t477;
t613 = Icges(5,1) * t476 + t838;
t303 = -Icges(5,5) * t502 + t505 * t613;
t841 = Icges(4,4) * t501;
t610 = Icges(4,2) * t504 + t841;
t324 = -Icges(4,6) * t502 + t505 * t610;
t840 = Icges(4,4) * t504;
t614 = Icges(4,1) * t501 + t840;
t326 = -Icges(4,5) * t502 + t505 * t614;
t1023 = t301 * t477 + t303 * t476 + t324 * t504 + t326 * t501;
t1067 = t1023 * t505;
t1033 = t375 * t919 + t376 * t918 - t807 * t920;
t915 = t1075 * t505 - t1078 * t502;
t399 = -Icges(5,2) * t476 + t838;
t401 = Icges(5,1) * t477 - t839;
t430 = -Icges(4,2) * t501 + t840;
t432 = Icges(4,1) * t504 - t841;
t1048 = t399 * t477 + t401 * t476 + t430 * t504 + t432 * t501;
t300 = Icges(5,6) * t505 + t502 * t609;
t444 = Icges(5,4) * t807;
t810 = t476 * t502;
t832 = Icges(5,5) * t505;
t302 = Icges(5,1) * t810 + t444 + t832;
t323 = Icges(4,6) * t505 + t502 * t610;
t799 = t502 * t504;
t463 = Icges(4,4) * t799;
t803 = t501 * t502;
t833 = Icges(4,5) * t505;
t325 = Icges(4,1) * t803 + t463 + t833;
t908 = t300 * t477 + t302 * t476 + t323 * t504 + t325 * t501;
t1047 = -t1026 * t503 - t1039 * t500;
t727 = qJD(5) * t505;
t686 = t476 * t727;
t735 = qJD(1) * t505;
t661 = qJD(1) * t476 + qJD(5);
t689 = t477 * t730;
t909 = t661 * t502 - t689;
t162 = (-t686 - t735) * t503 + t909 * t500;
t163 = t447 * t804 + t503 * t909;
t736 = qJD(1) * t502;
t553 = -t476 * t730 - t477 * t736;
t85 = Icges(7,5) * t163 + Icges(7,6) * t553 + Icges(7,3) * t162;
t91 = Icges(6,4) * t163 - Icges(6,2) * t162 + Icges(6,6) * t553;
t1060 = t85 - t91;
t578 = t661 * t505;
t732 = qJD(3) * t502;
t690 = t477 * t732;
t164 = t447 * t800 + (t578 + t690) * t500;
t731 = qJD(3) * t503;
t165 = t503 * t578 + (-t447 * t500 + t477 * t731) * t502;
t692 = t476 * t732;
t697 = t477 * t735;
t554 = t692 - t697;
t86 = Icges(7,5) * t165 + Icges(7,6) * t554 + Icges(7,3) * t164;
t92 = Icges(6,4) * t165 - Icges(6,2) * t164 + Icges(6,6) * t554;
t1059 = t86 - t92;
t87 = Icges(6,5) * t163 - Icges(6,6) * t162 + Icges(6,3) * t553;
t89 = Icges(7,4) * t163 + Icges(7,2) * t553 + Icges(7,6) * t162;
t1058 = t87 + t89;
t88 = Icges(6,5) * t165 - Icges(6,6) * t164 + Icges(6,3) * t554;
t90 = Icges(7,4) * t165 + Icges(7,2) * t554 + Icges(7,6) * t164;
t1057 = t88 + t90;
t93 = Icges(7,1) * t163 + Icges(7,4) * t553 + Icges(7,5) * t162;
t95 = Icges(6,1) * t163 - Icges(6,4) * t162 + Icges(6,5) * t553;
t1056 = t93 + t95;
t94 = Icges(7,1) * t165 + Icges(7,4) * t554 + Icges(7,5) * t164;
t96 = Icges(6,1) * t165 - Icges(6,4) * t164 + Icges(6,5) * t554;
t1055 = t94 + t96;
t1054 = qJD(3) * t956 + qJD(5) * t1070;
t1053 = qJD(3) * t1071 + qJD(5) * t1069;
t336 = (-Icges(6,1) * t500 - t835) * t477;
t729 = qJD(5) * t477;
t1052 = (-Icges(7,1) * t500 + t828) * t729 + qJD(5) * t336 + t955 * qJD(3);
t916 = t1061 * t502;
t954 = t1068 * t502;
t944 = t1068 * t505;
t925 = t1026 * t376 - t1038 * t807 + t1039 * t375;
t1043 = t1061 * t505 + t300 * t807 + t302 * t810 + t323 * t799 + t325 * t803;
t922 = -t301 * t807 - t303 * t810 - t324 * t799 - t326 * t803 - t505 * t915;
t1042 = -t505 * t908 + t916;
t1012 = -t502 * t915 + t1067;
t1041 = t1048 * t502 + t944;
t962 = t301 * t476 - t303 * t477 + t324 * t501 - t326 * t504;
t1040 = t1048 * t505 - t954;
t483 = t505 * qJ(2);
t437 = pkin(1) * t502 - t483;
t480 = qJD(2) * t502;
t747 = qJ(2) * t735 + t480;
t1037 = qJD(1) * t437 + t747;
t392 = t477 * t727 + t732;
t596 = t187 * t500 + t192 * t503;
t598 = t185 * t500 - t191 * t503;
t599 = -t177 * t500 + t190 * t503;
t601 = t176 * t500 + t188 * t503;
t1036 = (t1047 + t1071) * t447 + (t1038 * t502 + t598 - t601) * t393 + (-t1038 * t505 + t596 - t599) * t392;
t952 = t300 * t476 - t302 * t477 + t323 * t501 - t325 * t504;
t985 = rSges(7,1) + pkin(5);
t984 = t1049 * t163 + t1050 * t553 + t1051 * t162 - t1055 * t378 + t1057 * t805 - t1059 * t377;
t983 = -t1056 * t378 + t1058 * t805 - t1060 * t377 + t919 * t162 + t918 * t163 + t920 * t553;
t982 = t1049 * t165 + t1050 * t554 + t1051 * t164 + t1055 * t376 - t1057 * t807 + t1059 * t375;
t981 = t1056 * t376 - t1058 * t807 + t1060 * t375 + t919 * t164 + t918 * t165 + t920 * t554;
t939 = t1026 * t163 + t1038 * t553 + t1039 * t162 - t1052 * t378 + t1053 * t805 - t1054 * t377;
t938 = t1026 * t165 + t1038 * t554 + t1039 * t164 + t1052 * t376 - t1053 * t807 + t1054 * t375;
t973 = -t1050 * t807 + t1034;
t1032 = t805 * t920 - t1035;
t75 = t182 * t476 + t477 * t601;
t77 = t179 * t476 - t477 * t598;
t1031 = t75 + t77;
t76 = t184 * t476 + t477 * t599;
t78 = t181 * t476 - t477 * t596;
t1030 = t76 + t78;
t965 = rSges(7,3) + qJ(6);
t497 = t502 ^ 2;
t872 = pkin(3) * t504;
t1029 = t872 * (-t505 ^ 2 - t497);
t923 = t1038 * t476 - t1047 * t477;
t1027 = t477 * t603 + t1076;
t1025 = t1048 * qJD(1) - qJD(3) * t1075;
t499 = -qJ(4) - pkin(7);
t864 = pkin(7) + t499;
t873 = pkin(3) * t501;
t372 = t502 * t864 + t505 * t873;
t696 = t501 * t735;
t479 = qJD(4) * t505;
t687 = t504 * t732;
t749 = pkin(3) * t687 + t479;
t657 = pkin(3) * t696 + t499 * t736 + t749;
t704 = t480 + t749;
t1024 = -qJD(1) * t372 + t1037 + t657 - t704;
t1022 = t915 * qJD(1);
t1021 = t1061 * qJD(1);
t380 = t609 * qJD(3);
t381 = t613 * qJD(3);
t409 = t610 * qJD(3);
t410 = t614 * qJD(3);
t1020 = t380 * t477 + t381 * t476 + t409 * t504 + t410 * t501 + (t399 * t476 - t401 * t477 + t430 * t501 - t432 * t504) * qJD(3) + t1068 * qJD(1);
t1019 = (Icges(7,1) * t808 - t1039 - t336 - t443) * t447 + t392 * (-t1045 * t377 + t343 - t346 - t919) + t393 * (t1045 * t375 - t1051 - t341 + t837);
t1018 = (t1044 * t378 - t342 + t345 + t918) * t392 + (t1026 - t1070) * t447 + t393 * (-t1044 * t376 + t1049 - t344 + t830);
t1017 = (t1052 * t503 + t1054 * t500 + (-t1026 * t500 + t1039 * t503) * qJD(5) + t1038 * qJD(3)) * t477 + (qJD(3) * t1047 + t1053) * t476;
t1010 = t1041 * qJD(1);
t449 = pkin(8) * t805;
t809 = t476 * t505;
t364 = pkin(4) * t809 - t449;
t406 = pkin(4) * t477 + pkin(8) * t476;
t368 = t406 * t732;
t947 = t476 * t735 + t690;
t707 = pkin(4) * t947 + pkin(8) * t692;
t1009 = -qJD(1) * t364 + t1024 - t368 + t707;
t1008 = qJD(1) * t908 + qJD(3) * t954 + t1022;
t1007 = -qJD(1) * t1023 - qJD(3) * t944 + t1021;
t1006 = (t1012 * t502 + t1042 * t505) * qJD(3);
t1005 = (t1043 * t505 + t502 * t922) * qJD(3);
t1004 = t1040 * qJD(1);
t1003 = -t480 + t1037;
t171 = qJD(1) * t301 + t399 * t732;
t337 = t401 * t502;
t173 = qJD(1) * t303 + qJD(3) * t337;
t214 = qJD(1) * t324 + t430 * t732;
t390 = t432 * t502;
t216 = qJD(1) * t326 + qJD(3) * t390;
t995 = qJD(3) * t952 - t171 * t477 - t173 * t476 - t214 * t504 - t216 * t501 + t1021;
t334 = t399 * t505;
t170 = qJD(1) * t300 - qJD(3) * t334;
t338 = t401 * t505;
t172 = -qJD(3) * t338 + (t502 * t613 + t832) * qJD(1);
t389 = t430 * t505;
t213 = qJD(1) * t323 - qJD(3) * t389;
t391 = t432 * t505;
t215 = -qJD(3) * t391 + (t502 * t614 + t833) * qJD(1);
t994 = qJD(3) * t962 + t170 * t477 + t172 * t476 + t213 * t504 + t215 * t501 + t1022;
t993 = t1033 * t392 + t925 * t447;
t750 = t430 + t614;
t751 = -t610 + t432;
t752 = t399 + t613;
t753 = -t609 + t401;
t992 = (t476 * t752 - t477 * t753 + t501 * t750 - t504 * t751) * qJD(1);
t340 = qJD(6) * t375;
t961 = t965 * t377 + t378 * t985;
t784 = rSges(7,2) * t805 - t961;
t991 = -t447 * t784 + t340;
t990 = t1036 * t477;
t988 = 0.2e1 * qJD(3);
t721 = qJD(3) * qJD(5);
t678 = t476 * t721;
t269 = -qJD(1) * t392 + t502 * t678;
t270 = qJD(1) * t393 - t505 * t678;
t677 = t477 * t721;
t987 = t1032 * t270 + t269 * t971 + t392 * t983 + t393 * t984 + t447 * t939 + t677 * t924;
t986 = t1033 * t270 + t269 * t973 + t392 * t981 + t393 * t982 + t447 * t938 + t677 * t925;
t466 = pkin(3) * t803;
t17 = (-qJD(3) * t601 + t90) * t476 + (qJD(3) * t182 + t500 * t86 + t503 * t94 + (t176 * t503 - t188 * t500) * qJD(5)) * t477;
t19 = (qJD(3) * t598 + t88) * t476 + (qJD(3) * t179 - t500 * t92 + t503 * t96 + (-t185 * t503 - t191 * t500) * qJD(5)) * t477;
t980 = t17 + t19;
t18 = (-qJD(3) * t599 + t89) * t476 + (qJD(3) * t184 + t500 * t85 + t503 * t93 + (-t177 * t503 - t190 * t500) * qJD(5)) * t477;
t20 = (qJD(3) * t596 + t87) * t476 + (qJD(3) * t181 - t500 * t91 + t503 * t95 + (-t187 * t503 + t192 * t500) * qJD(5)) * t477;
t979 = t18 + t20;
t978 = t393 * t973 + t993;
t977 = t1032 * t392 - t1073;
t976 = t1030 * t392 + t1031 * t393 + t447 * t923;
t975 = t1005 + t1010;
t974 = -t1004 + t1006;
t969 = t1020 * t505 + t1025 * t502;
t968 = -t1020 * t502 + t1025 * t505;
t967 = -qJD(3) * t908 - t171 * t476 + t173 * t477 - t214 * t501 + t216 * t504;
t966 = qJD(3) * t1023 - t170 * t476 + t172 * t477 - t213 * t501 + t215 * t504;
t634 = rSges(6,1) * t378 - rSges(6,2) * t377;
t199 = rSges(6,3) * t805 - t634;
t964 = t199 * t447;
t404 = rSges(5,1) * t477 - rSges(5,2) * t476;
t348 = t404 * t502;
t960 = t1027 * t502;
t959 = t1027 * t505;
t958 = t1026 * t502;
t957 = t1026 * t505;
t630 = rSges(7,1) * t503 + rSges(7,3) * t500;
t290 = rSges(7,2) * t476 + t477 * t630;
t629 = pkin(5) * t503 + qJ(6) * t500;
t771 = t629 * t477 + t290;
t953 = -t1038 * t447 - t1050 * t393 - t392 * t920;
t907 = -t1030 * t505 + t1031 * t502;
t951 = t1030 * t502 + t1031 * t505;
t906 = -t1032 * t505 + t502 * t971;
t950 = t1032 * t502 + t505 * t971;
t905 = -t1033 * t505 + t502 * t973;
t949 = t1033 * t502 + t505 * t973;
t636 = rSges(5,1) * t476 + rSges(5,2) * t477;
t556 = t636 + t873;
t726 = qJD(6) * t500;
t435 = t477 * t726;
t311 = t372 * t730;
t448 = pkin(4) * t810;
t362 = -pkin(8) * t807 + t448;
t373 = -t505 * t864 + t466;
t756 = -t362 - t373;
t555 = -t364 * t730 + t732 * t756 - t311;
t917 = t965 * t375 + t376 * t985;
t786 = -rSges(7,2) * t807 + t917;
t37 = -t392 * t786 + t393 * t784 + t435 + t555;
t441 = t505 * pkin(1) + t502 * qJ(2);
t869 = pkin(7) * t505;
t666 = t441 + t869;
t646 = t373 + t666;
t580 = t362 + t646;
t481 = qJD(2) * t505;
t478 = qJD(4) * t502;
t716 = pkin(3) * t730;
t745 = -t504 * t716 + t478;
t702 = -t481 + t745;
t655 = -t406 * t730 + t702;
t523 = qJD(1) * t580 + t655;
t339 = t377 * qJD(6);
t942 = -t393 * t771 + t786 * t447 - t339;
t46 = t523 + t942;
t665 = t46 * t771;
t948 = -t37 * t784 + t665;
t946 = t1075 * qJD(1);
t861 = rSges(7,2) * t477;
t288 = -t476 * t630 + t861;
t350 = (-rSges(7,1) * t500 + rSges(7,3) * t503) * t477;
t685 = t503 * t729;
t734 = qJD(3) * t476;
t552 = -t500 * t734 + t685;
t795 = t435 + t552 * qJ(6) + (-t476 * t731 - t500 * t729) * pkin(5) + qJD(3) * t288 + qJD(5) * t350;
t945 = t795 - t435;
t384 = t636 * qJD(3);
t534 = t502 * (t326 + t389) - t505 * (-Icges(4,2) * t803 + t325 + t463);
t535 = t502 * (t324 - t391) - t505 * (t323 - t390);
t537 = t502 * (t303 + t334) - t505 * (-Icges(5,2) * t810 + t302 + t444);
t538 = t502 * (t301 - t338) - t505 * (t300 - t337);
t941 = -t538 * t476 + t537 * t477 - t535 * t501 + t534 * t504;
t706 = -pkin(4) * t689 + pkin(8) * t553;
t209 = qJD(1) * t448 + t706;
t461 = t499 * t735;
t246 = -t461 + (t466 - t869) * qJD(1) + t745;
t243 = t505 * t246;
t365 = t406 * t505;
t802 = t502 * t406;
t940 = t365 * t730 + t505 * t209 + t243 - (-t802 * t502 + t1029) * qJD(3);
t870 = pkin(7) * t502;
t667 = -t437 - t870;
t647 = t372 + t667;
t524 = t368 + (t364 + t647) * qJD(1) + t704;
t45 = t392 * t771 + t524 + t991;
t936 = t45 * t771;
t927 = -t965 * t162 - t163 * t985 + t339;
t926 = rSges(7,2) * t692 + t965 * t164 + t165 * t985 + t340;
t708 = rSges(5,1) * t947 + rSges(5,2) * t697;
t175 = (-rSges(5,2) * t734 - rSges(5,3) * qJD(1)) * t502 + t708;
t715 = pkin(7) * t736;
t245 = t657 + t715;
t921 = -t175 - t245;
t663 = -rSges(3,2) * t505 + t502 * rSges(3,3);
t914 = t441 + t663;
t910 = t1069 * t447 + (-t1015 * t376 - t1016 * t375) * t393 + (t1015 * t378 + t1016 * t377) * t392;
t900 = t1017 * t447 + t677 * t923;
t633 = rSges(6,1) * t503 - rSges(6,2) * t500;
t291 = rSges(6,3) * t476 + t477 * t633;
t755 = t364 + t372;
t210 = -pkin(8) * t697 + t707;
t781 = -t210 - t245;
t512 = t781 * t502 + (t502 * t755 + t505 * t756) * qJD(1);
t684 = t476 * t726;
t221 = t246 * t730;
t783 = t209 * t730 + t221;
t844 = -rSges(7,2) * t697 + t926;
t845 = rSges(7,2) * t553 - t927;
t5 = qJD(6) * t685 + t845 * t393 - t844 * t392 - t786 * t270 + t784 * t269 + (t512 - t684) * qJD(3) + t783;
t891 = t37 * t845 + t5 * t784;
t887 = t269 / 0.2e1;
t886 = t270 / 0.2e1;
t885 = -t392 / 0.2e1;
t884 = t392 / 0.2e1;
t883 = -t393 / 0.2e1;
t882 = t393 / 0.2e1;
t881 = -t447 / 0.2e1;
t880 = t447 / 0.2e1;
t878 = t502 / 0.2e1;
t877 = -t505 / 0.2e1;
t875 = rSges(3,2) - pkin(1);
t874 = -rSges(5,3) - pkin(1);
t871 = pkin(4) * t476;
t868 = pkin(7) * qJD(1) ^ 2;
t865 = -pkin(1) + t499;
t860 = rSges(3,3) * t505;
t858 = rSges(6,3) * t477;
t857 = t17 * t393;
t856 = t18 * t392;
t855 = t19 * t393;
t854 = t20 * t392;
t494 = t505 * rSges(4,3);
t493 = t505 * rSges(5,3);
t758 = t376 * rSges(6,1) - t375 * rSges(6,2);
t195 = -rSges(6,3) * t807 + t758;
t60 = t195 * t447 - t291 * t393 + t523;
t851 = t60 * t291;
t366 = t404 * t732;
t723 = qJD(1) * qJD(2);
t757 = qJD(1) * (-pkin(1) * t736 + t747) + t502 * t723;
t582 = -t502 * t868 + t757;
t718 = qJD(1) * t872;
t660 = qJD(3) * t718;
t506 = qJD(3) ^ 2;
t719 = t506 * t873;
t526 = t502 * t660 + t505 * t719 + t582 + (t245 + t479) * qJD(1);
t71 = t384 * t730 + (t175 + t366) * qJD(1) + t526;
t850 = t71 * t505;
t849 = t75 * t269;
t848 = t76 * t270;
t847 = t77 * t269;
t846 = t78 * t270;
t695 = t504 * t735;
t705 = rSges(4,2) * t695 + (t687 + t696) * rSges(4,1);
t733 = qJD(3) * t501;
t220 = (-rSges(4,2) * t733 - rSges(4,3) * qJD(1)) * t502 + t705;
t440 = rSges(4,1) * t504 - rSges(4,2) * t501;
t402 = t440 * t732;
t637 = rSges(4,1) * t501 + rSges(4,2) * t504;
t411 = t637 * qJD(3);
t109 = t411 * t730 + (t220 + t402) * qJD(1) + t582;
t821 = t109 * t505;
t395 = t440 * t505;
t219 = -qJD(3) * t395 + (t502 * t637 + t494) * qJD(1);
t382 = qJD(1) * t441 - t481;
t470 = t505 * t723;
t648 = -t505 * t868 + t470;
t693 = t440 * t730;
t110 = -t411 * t732 + (-t219 - t382 + t693) * qJD(1) + t648;
t820 = t110 * t502;
t490 = t502 * rSges(5,3);
t305 = t505 * t636 - t490;
t117 = t366 + (t305 + t647) * qJD(1) + t704;
t819 = t117 * t505;
t491 = t502 * rSges(4,3);
t359 = t505 * t637 - t491;
t146 = t402 + t480 + (t359 + t667) * qJD(1);
t818 = t146 * t505;
t405 = pkin(8) * t477 - t871;
t385 = t405 * qJD(3);
t814 = t385 * t505;
t812 = t405 * t505;
t780 = -t375 * t985 + t376 * t965;
t779 = t377 * t985 - t378 * t965;
t778 = t771 * t502;
t777 = -t290 * t505 - t629 * t805;
t772 = -t629 * t476 + t288;
t304 = rSges(5,1) * t810 + rSges(5,2) * t807 + t493;
t766 = -t304 - t373;
t314 = t505 * t372;
t765 = -t505 * t364 - t314;
t760 = (-pkin(5) * t500 + qJ(6) * t503) * t477 + t350;
t467 = pkin(3) * t799;
t754 = t802 + t467;
t748 = t501 * t716 + t502 * t718;
t746 = rSges(3,2) * t736 + rSges(3,3) * t735;
t743 = t483 - t449;
t722 = qJD(1) * qJD(3);
t720 = -rSges(4,3) - pkin(1) - pkin(7);
t717 = pkin(3) * t733;
t713 = t165 * rSges(6,1) - t164 * rSges(6,2) + rSges(6,3) * t692;
t712 = -t195 + t756;
t711 = qJD(1) * t802 + t748;
t459 = pkin(3) * t695;
t710 = t502 * t385 + t406 * t735 + t459;
t709 = t406 * t736 + t748;
t358 = rSges(4,1) * t803 + rSges(4,2) * t799 + t494;
t703 = t466 + t441;
t701 = t477 * (-rSges(7,2) - pkin(8));
t700 = t477 * (-rSges(6,3) - pkin(8));
t694 = t404 * t730;
t688 = t501 * t732;
t581 = t505 * t660 + t648;
t639 = -t246 - t382 - t478;
t679 = t406 * t722;
t511 = t385 * t732 + t505 * t679 + (-t209 + t639) * qJD(1) - t506 * t466 + t581;
t7 = qJD(6) * t164 + t270 * t771 + t392 * t795 - t447 * t845 - t677 * t784 + t511;
t680 = t7 * t771;
t676 = -t736 / 0.2e1;
t674 = qJD(3) * t477 / 0.2e1;
t673 = -t732 / 0.2e1;
t672 = t732 / 0.2e1;
t671 = -t730 / 0.2e1;
t670 = t730 / 0.2e1;
t668 = -t406 - t872;
t659 = t756 - t786;
t658 = t448 + t703;
t656 = t461 - t702;
t642 = qJD(5) * t674;
t641 = t871 + t873;
t640 = qJD(1) * t365 + t405 * t732 + t459;
t635 = rSges(6,1) * t163 - rSges(6,2) * t162;
t100 = -rSges(6,3) * t697 + t713;
t289 = -t476 * t633 + t858;
t351 = (-rSges(6,1) * t500 - rSges(6,2) * t503) * t477;
t167 = qJD(3) * t289 + qJD(5) * t351;
t525 = qJD(1) * t210 + t502 * t679 + t526;
t25 = t100 * t447 - t167 * t393 - t269 * t291 + (t195 * t729 - t814) * qJD(3) + t525;
t98 = rSges(6,3) * t553 + t635;
t26 = t167 * t392 - t199 * t677 + t270 * t291 - t447 * t98 + t511;
t628 = t25 * t502 + t26 * t505;
t147 = -t693 - t481 + (t358 + t666) * qJD(1);
t602 = t146 * t502 - t147 * t505;
t595 = t195 * t505 + t199 * t502;
t353 = t404 * t505;
t565 = -t305 * t505 + t502 * t766;
t200 = (-t358 * t502 - t359 * t505) * qJD(3);
t559 = t656 - t706;
t558 = t641 - t861;
t557 = t641 - t858;
t551 = -t314 + t565;
t540 = -t45 * t784 + t46 * t786;
t539 = t37 * t786 - t936;
t53 = -t195 * t392 + t199 * t393 + t555;
t59 = t291 * t392 + t524 - t964;
t513 = t53 * t595 + (-t502 * t60 - t505 * t59) * t291;
t510 = -t502 * t948 + t539 * t505;
t438 = rSges(3,2) * t502 + t860;
t394 = t440 * t502;
t272 = qJD(1) * t914 - t481;
t271 = t480 + (-t437 + t438) * qJD(1);
t262 = t291 * t505;
t260 = t291 * t502;
t240 = rSges(6,1) * t377 + rSges(6,2) * t378;
t236 = -rSges(6,1) * t375 - rSges(6,2) * t376;
t218 = t470 + (-qJD(1) * t663 - t382) * qJD(1);
t217 = qJD(1) * t746 + t757;
t174 = -qJD(3) * t353 + (t502 * t636 + t493) * qJD(1);
t118 = -t694 + (t304 + t646) * qJD(1) + t702;
t114 = qJD(3) * t565 - t311;
t72 = (-qJD(3) * t384 - t719) * t502 + (-t174 + t639 + t694) * qJD(1) + t581;
t16 = qJD(3) * t512 - t100 * t392 - t195 * t270 + t199 * t269 + t393 * t98 + t783;
t6 = qJD(6) * t162 + t844 * t447 - t795 * t393 - t771 * t269 + (t729 * t786 - t814) * qJD(3) + t525;
t1 = [t938 * t882 + (t966 + t969 + t975) * t672 + (t939 + t978) * t884 + (t967 + t968) * t670 + (-t851 * t392 + t26 * (t634 + t743) + t59 * (t559 - t635) + t25 * (t658 + t758) + (rSges(6,3) * t59 * t734 - t25 * t499 + t26 * t557) * t505 + (t25 * t700 + t26 * t865) * t502 + (t59 + t715 + t964 + t713 + t1009) * t60) * m(6) + (-t665 * t392 + t7 * (t743 + t961) + t6 * (t658 + t917) + (-t6 * t499 + t558 * t7) * t505 + (t6 * t701 + t7 * t865) * t502 + (t926 - t991 + t1009) * t46 + (rSges(7,2) * t734 * t505 + t559 + t655 + t927 + t942) * t45) * m(7) + (t218 * (t502 * t875 + t483 + t860) + t271 * t481 + t217 * t914 + (t271 + t746 + t1003) * t272) * m(3) + (t110 * (-t491 + t667) + t146 * t481 + t109 * (t358 + t441) + (qJD(3) * t146 * t440 + t109 * pkin(7) + t110 * t637) * t505 + (-rSges(4,2) * t688 + t1003 + t146 - t402 + t705) * t147) * m(4) + ((-t500 * t919 - t503 * t918) * t477 - t920 * t476 + t1030) * t393 * t881 + (t962 * t670 + ((-t59 * pkin(1) + t60 * t700) * t505 + (t59 * (-qJ(2) - t557) - t60 * pkin(1)) * t502) * m(6) + (t45 * t580 + t46 * t870 + (-t45 * pkin(1) + t46 * t701) * t505 + (t45 * (-qJ(2) - t558) - t46 * pkin(1)) * t502) * m(7) + t380 * t476 - t381 * t477 + t409 * t501 - t410 * t504 - t1048 * qJD(3) + (-t438 * t272 + t271 * t875 * t505 + (t271 * (-rSges(3,3) - qJ(2)) - t272 * pkin(1)) * t502) * m(3) + (-(t359 - t870) * t147 + t720 * t818 + (t146 * (-qJ(2) - t637) + t147 * t720) * t502) * m(4) + (-(t305 - t870) * t118 + t874 * t819 + (t117 * (-qJ(2) - t556) + t118 * t874) * t502) * m(5)) * qJD(1) + t924 * t886 + t925 * t887 + (((t916 + t922 - t1042) * t502 + (-t1067 + (-t908 + t915) * t502 + t1012 + t1043) * t505) * qJD(3) + t1010) * t673 + ((t915 * t497 + ((t908 + t915) * t505 - t916 + t922) * t505) * qJD(3) + t974 + t1004) * t671 - ((-t952 + t1041) * t502 + t1040 * t505) * t722 / 0.2e1 + t857 / 0.2e1 + t855 / 0.2e1 + t856 / 0.2e1 + t854 / 0.2e1 + t900 + ((t1032 + t1074) * t393 + t993) * t885 + ((-t973 + t1074) * t392 + t977 + t1073) * t883 + t849 / 0.2e1 + t846 / 0.2e1 + t847 / 0.2e1 + t848 / 0.2e1 + (t72 * (t499 * t502 - t437 - t490) + t117 * t656 + t71 * (t703 + t304) + (qJD(3) * t117 * t404 - t71 * t499 + t556 * t72) * t505 + (-rSges(5,2) * t692 + t1024 + t117 - t366 + t708) * t118) * m(5); 0.2e1 * (t6 * t877 + t7 * t878) * m(7) + 0.2e1 * (t25 * t877 + t26 * t878) * m(6) + 0.2e1 * (t72 * t878 - t850 / 0.2e1) * m(5) + 0.2e1 * (-t821 / 0.2e1 + t820 / 0.2e1) * m(4) + 0.2e1 * (t217 * t877 + t218 * t878) * m(3); t949 * t887 + t950 * t886 + ((t477 * t924 + t810 * t971) * qJD(5) + ((-qJD(5) * t1032 + t953) * t476 + t990) * t505 + (-t377 * t956 - t378 * t955) * t447 + (-t377 * t960 - t378 * t958) * t393 + (t377 * t959 + t378 * t957) * t392) * t885 + (-qJD(1) * t906 + t502 * t983 + t505 * t984) * t884 + ((-t1033 * t809 + t477 * t925) * qJD(5) + ((qJD(5) * t973 - t953) * t476 - t990) * t502 + (t375 * t956 + t376 * t955) * t447 + (t375 * t960 + t376 * t958) * t393 + (-t375 * t959 - t376 * t957) * t392) * t883 + (-qJD(1) * t905 + t502 * t981 + t505 * t982) * t882 + (((t500 * t956 + t503 * t955 + t1038) * t447 + (t500 * t960 + t503 * t958 + t1050) * t393 + (-t500 * t959 - t503 * t957 + t920) * t392 + t923 * qJD(5)) * t477 + (qJD(5) * t907 + t1036) * t476) * t881 + (-qJD(1) * t907 + t502 * t979 + t505 * t980) * t880 - ((t476 * t537 + t477 * t538 + t501 * t534 + t504 * t535) * qJD(3) + (-t476 * t753 - t477 * t752 - t501 * t751 - t504 * t750) * qJD(1)) * qJD(1) / 0.2e1 + (t967 * t505 + t966 * t502 + (t502 * t952 + t505 * t962) * qJD(1)) * qJD(1) / 0.2e1 + ((-t732 * t944 - t946) * t502 + ((t502 * t954 + t941) * qJD(3) + t992) * t505) * t673 + ((t730 * t954 - t946) * t505 + ((-t505 * t944 - t941) * qJD(3) - t992) * t502) * t671 - t976 * t729 / 0.2e1 - t978 * t476 * t728 / 0.2e1 + t977 * t686 / 0.2e1 + t951 * t642 + (-(t476 * t510 + t477 * t540) * qJD(5) + t7 * t754 + t5 * t765 + (t6 * (t668 - t771) + t936 * qJD(1) + t891) * t505 + (t665 * qJD(1) + t5 * t659 + t680) * t502 + (qJD(3) * t466 - t772 * t392 + t777 * t447 - t640 + t710 + (-t717 + t945) * t502) * t45 + (t684 - t777 * t393 + t778 * t392 + t659 * t735 + (t781 - t844 + (t755 - t784) * qJD(1)) * t502 + t940) * t37 + (t812 * qJD(3) + t772 * t393 - t778 * t447 + t709 - t711 + (-t385 - t945) * t505) * t46) * m(7) + (-t59 * (t262 * t447 + t289 * t392 + t640) - t60 * (t260 * t447 - t289 * t393 + t711) - (-t466 * t59 - t60 * t812) * qJD(3) - ((t195 * t60 - t199 * t59) * t477 + t513 * t476) * qJD(5) + t26 * t754 + t59 * t710 + t60 * t709 + t16 * t765 + (t25 * (-t291 + t668) + t60 * (-t167 - t385) + t16 * t199 + t59 * t291 * qJD(1)) * t505 + (t26 * t291 + t59 * (t167 - t717) + t16 * t712 + t851 * qJD(1)) * t502 + (t260 * t392 + t262 * t393 + (qJD(1) * t712 + t98) * t505 + (-t100 + t781 + (-t199 + t755) * qJD(1)) * t502 + t940) * t53) * m(6) + (t72 * (t467 + t348) + (-t404 - t872) * t850 + (t174 * t730 + t732 * t921 + t221) * t551 + t114 * (t174 * t505 + t502 * t921 + t243) + (t819 * t404 + (qJD(3) * t551 + t114) * (t766 * t505 + (t305 + t372) * t502)) * qJD(1) - (-t348 * t502 - t353 * t505 + t1029) * t114 * qJD(3) + (-pkin(3) * t688 - qJD(1) * t353 + (qJD(3) * t556 - t384) * t502) * t117) * m(5) + (-(t146 * t395 + t147 * t394) * qJD(1) - (t200 * (-t394 * t502 - t395 * t505) - t602 * t637) * qJD(3) + 0.2e1 * t200 * (t219 * t505 - t220 * t502 + (-t358 * t505 + t359 * t502) * qJD(1)) - t602 * t411 + (-t821 + t820 + (t147 * t502 + t818) * qJD(1)) * t440) * m(4) + (t969 * qJD(1) + t987 + ((t1012 * qJD(1) + t995 * t505) * t505 + (t1007 * t502 - t1042 * qJD(1) + (-t994 + t1008) * t505) * t502) * t988) * t878 + (t968 * qJD(1) + t986 + ((t922 * qJD(1) + t1008 * t505) * t505 + (t994 * t502 - t1043 * qJD(1) + (-t995 + t1007) * t505) * t502) * t988) * t505 / 0.2e1 + (t975 + t978 + t1005) * t676 + (t974 + t977 + t1006) * t735 / 0.2e1; m(5) * (t502 * t71 + t505 * t72) + m(6) * t628 + m(7) * (t502 * t6 + t505 * t7); (t476 * t925 - t477 * t905) * t887 + (t476 * t924 - t477 * t906) * t886 + (t1018 * t377 + t1019 * t378 + t910 * t805) * t885 + ((-qJD(1) * t950 + t924 * qJD(3) - t502 * t984 + t505 * t983) * t477 + (qJD(3) * t906 + t939) * t476) * t884 + (-t1018 * t375 - t1019 * t376 - t807 * t910) * t883 + ((-qJD(1) * t949 + t925 * qJD(3) - t502 * t982 + t505 * t981) * t477 + (qJD(3) * t905 + t938) * t476) * t882 + ((-t1018 * t500 - t1019 * t503) * t477 + t910 * t476) * t881 + ((-qJD(1) * t951 + t923 * qJD(3) - t502 * t980 + t505 * t979) * t477 + (qJD(3) * t907 + t1017) * t476) * t880 + (t848 + t849 + t856 + t857 + t846 + t847 + t854 + t855 + t900) * t476 / 0.2e1 - t986 * t807 / 0.2e1 + t987 * t805 / 0.2e1 + t976 * t674 + (t476 * t923 - t477 * t907) * t642 + ((qJD(3) * t510 - t45 * t845 + t46 * t844 + t6 * t786 - t7 * t784) * t476 + (t540 * qJD(3) + (qJD(1) * t948 - t37 * t844 + t45 * t795 - t5 * t786 + t680) * t505 + (qJD(1) * t539 + t46 * t795 + t6 * t771 - t891) * t502) * t477 - (t37 * t806 + t376 * t45 - t378 * t46) * qJD(6) - (-t45 * t779 + t46 * t780) * t447 - (t37 * t779 - t46 * t760) * t393 - (-t37 * t780 + t45 * t760) * t392) * m(7) + ((qJD(3) * t513 + t60 * t100 + t25 * t195 - t26 * t199 - t59 * t98) * t476 + (t59 * (-qJD(3) * t199 + t167 * t505) + t60 * (qJD(3) * t195 + t167 * t502) - t16 * t595 + t53 * (-t100 * t505 + t195 * t736 - t199 * t735 - t502 * t98) + ((-t502 * t59 + t505 * t60) * qJD(1) + t628) * t291) * t477 - t59 * (-t240 * t447 + t351 * t392) - t60 * (t236 * t447 - t351 * t393) - t53 * (-t236 * t392 + t240 * t393)) * m(6) + t977 * (t476 * t671 + t477 * t676) + t978 * (t476 * t672 - t697 / 0.2e1); (t375 * t7 - t377 * t6 + t5 * t808 + (-t375 * t447 + t393 * t808 + t162) * t46 + (-t377 * t447 - t392 * t808 + t164) * t45 + (t375 * t392 + t377 * t393 + t552) * t37) * m(7);];
tauc  = t1(:);
