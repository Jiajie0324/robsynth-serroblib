% Calculate minimal parameter regressor of Coriolis joint torque vector for
% S6RRPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% MDP [33x1]
%   Minimal dynamic parameter vector (fixed base model)
%   see S6RRPRRR5_convert_par2_MPV_fixb.m
% 
% Output:
% tauc [6x1]
%   joint torques required to compensate Coriolis and centrifugal load

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc = S6RRPRRR5_coriolisvecJ_fixb_mdp_slag_vp(qJ, qJD, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1),zeros(33,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR5_coriolisvecJ_fixb_mdp_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR5_coriolisvecJ_fixb_mdp_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR5_coriolisvecJ_fixb_mdp_slag_vp: pkin has to be [12x1] (double)');
assert(isreal(MDP) && all(size(MDP) == [33 1]), ...
  'S6RRPRRR5_coriolisvecJ_fixb_mdp_slag_vp: MDP has to be [33x1] (double)'); 

%% Symbolic Calculation
% From coriolisvec_joint_fixb_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:47:09
% EndTime: 2019-03-09 13:47:29
% DurationCPUTime: 12.17s
% Computational Cost: add. (12405->638), mult. (36703->862), div. (0->0), fcn. (30460->12), ass. (0->271)
t645 = sin(pkin(12));
t651 = sin(qJ(2));
t646 = sin(pkin(6));
t738 = qJD(1) * t646;
t722 = t651 * t738;
t647 = cos(pkin(12));
t655 = cos(qJ(2));
t760 = t647 * t655;
t726 = t646 * t760;
t600 = qJD(1) * t726 - t645 * t722;
t597 = qJD(4) - t600;
t679 = t645 * t655 + t647 * t651;
t603 = t679 * t738;
t649 = sin(qJ(5));
t653 = cos(qJ(5));
t654 = cos(qJ(4));
t556 = t600 * t649 * t654 - t653 * t603;
t733 = qJD(4) * t654;
t803 = -t649 * t733 + t556;
t755 = t653 * t654;
t557 = t600 * t755 + t603 * t649;
t650 = sin(qJ(4));
t732 = qJD(5) * t649;
t664 = -t650 * t732 + t653 * t733 - t557;
t783 = cos(pkin(6));
t724 = pkin(1) * t783;
t697 = t655 * t724;
t635 = qJD(1) * t697;
t784 = pkin(8) + qJ(3);
t715 = t784 * t651;
t696 = t646 * t715;
t588 = -qJD(1) * t696 + t635;
t698 = t651 * t724;
t762 = t646 * t655;
t598 = t762 * t784 + t698;
t589 = t598 * qJD(1);
t761 = t647 * t589;
t536 = t588 * t645 + t761;
t804 = t536 - t597 * (pkin(4) * t650 - pkin(10) * t654);
t663 = pkin(2) * t783 - t696;
t570 = qJD(2) * pkin(2) + qJD(1) * t663 + t635;
t515 = t645 * t570 + t761;
t712 = t783 * qJD(1);
t678 = t712 + qJD(2);
t504 = pkin(9) * t678 + t515;
t692 = (-pkin(2) * t655 - pkin(1)) * t646;
t674 = qJD(1) * t692;
t613 = qJD(3) + t674;
t532 = -pkin(3) * t600 - pkin(9) * t603 + t613;
t459 = -t650 * t504 + t532 * t654;
t447 = -pkin(4) * t597 - t459;
t660 = -t654 * t603 - t650 * t678;
t521 = -t653 * t597 - t649 * t660;
t437 = pkin(5) * t521 + t447;
t652 = cos(qJ(6));
t523 = t597 * t649 - t653 * t660;
t648 = sin(qJ(6));
t771 = t523 * t648;
t471 = t652 * t521 + t771;
t802 = t437 * t471;
t680 = t521 * t648 - t652 * t523;
t801 = t437 * t680;
t627 = t654 * t678;
t567 = t603 * t650 - t627;
t565 = qJD(5) + t567;
t562 = qJD(6) + t565;
t800 = t471 * t562;
t799 = t562 * t680;
t730 = qJD(6) * t648;
t756 = t650 * t653;
t758 = t649 * t650;
t786 = qJD(5) + qJD(6);
t748 = -t730 * t758 + (t756 * t786 - t803) * t652 + t664 * t648;
t731 = qJD(5) * t653;
t798 = t650 * t731 - t803;
t797 = t567 + t786;
t728 = qJD(1) * qJD(2);
t713 = t646 * t728;
t694 = t655 * t713;
t695 = t651 * t713;
t596 = -t645 * t695 + t647 * t694;
t520 = -qJD(4) * t660 + t650 * t596;
t618 = t648 * t649 - t652 * t653;
t609 = t618 * t650;
t619 = t648 * t653 + t649 * t652;
t608 = t619 * t650;
t749 = t556 * t648 - t557 * t652 - t608 * t786 - t618 * t733;
t796 = t520 * t609 - t562 * t749;
t795 = t520 * MDP(31) + (-t471 ^ 2 + t680 ^ 2) * MDP(28) - t471 * MDP(27) * t680;
t642 = t646 ^ 2;
t794 = -0.2e1 * t642 * t728;
t737 = qJD(2) * t646;
t721 = t651 * t737;
t793 = pkin(2) * t721;
t792 = MDP(5) * (t651 ^ 2 - t655 ^ 2);
t791 = MDP(6) * t655;
t763 = t646 * t651;
t605 = t645 * t763 - t726;
t587 = t697 + t663;
t548 = t645 * t587 + t647 * t598;
t535 = pkin(9) * t783 + t548;
t606 = t679 * t646;
t555 = pkin(3) * t605 - pkin(9) * t606 + t692;
t751 = t654 * t535 + t650 * t555;
t469 = pkin(10) * t605 + t751;
t547 = t647 * t587 - t645 * t598;
t534 = -pkin(3) * t783 - t547;
t580 = t606 * t654 + t650 * t783;
t671 = -t606 * t650 + t654 * t783;
t478 = -pkin(4) * t671 - t580 * pkin(10) + t534;
t752 = t653 * t469 + t649 * t478;
t638 = pkin(2) * t645 + pkin(9);
t735 = qJD(4) * t650;
t720 = t638 * t735;
t789 = t649 * t720 - t653 * t804;
t574 = t645 * t589;
t537 = t588 * t647 - t574;
t551 = pkin(2) * t722 + pkin(3) * t603 - pkin(9) * t600;
t750 = t654 * t537 + t650 * t551;
t462 = pkin(10) * t603 + t750;
t639 = -pkin(2) * t647 - pkin(3);
t616 = -pkin(4) * t654 - pkin(10) * t650 + t639;
t787 = t653 * t462 - t616 * t731 + t649 * t804;
t519 = qJD(4) * t627 + t654 * t596 - t603 * t735;
t601 = qJD(2) * t606;
t595 = qJD(1) * t601;
t453 = qJD(5) * t523 + t519 * t649 - t653 * t595;
t452 = t653 * t519 + t649 * t595 + t597 * t731 + t660 * t732;
t709 = t452 * t648 + t652 * t453;
t415 = -qJD(6) * t680 + t709;
t656 = qJD(1) ^ 2;
t785 = pkin(10) + pkin(11);
t460 = t654 * t504 + t650 * t532;
t448 = pkin(10) * t597 + t460;
t514 = t647 * t570 - t574;
t503 = -pkin(3) * t678 - t514;
t456 = t567 * pkin(4) + pkin(10) * t660 + t503;
t426 = -t448 * t649 + t653 * t456;
t421 = -pkin(11) * t523 + t426;
t416 = pkin(5) * t565 + t421;
t782 = t416 * t652;
t427 = t448 * t653 + t456 * t649;
t422 = -pkin(11) * t521 + t427;
t781 = t422 * t652;
t687 = qJD(2) * t712;
t676 = pkin(1) * t687;
t629 = t655 * t676;
t661 = (-qJD(2) * t715 + qJD(3) * t655) * t646;
t561 = qJD(1) * t661 + t629;
t572 = -qJD(2) * t598 - qJD(3) * t763;
t657 = qJD(1) * t572;
t491 = t647 * t561 + t645 * t657;
t628 = pkin(2) * t695;
t533 = pkin(3) * t595 - pkin(9) * t596 + t628;
t699 = t650 * t491 + t504 * t733 + t532 * t735 - t654 * t533;
t429 = -pkin(4) * t595 + t699;
t780 = t429 * t649;
t779 = t429 * t653;
t778 = t452 * t649;
t776 = t520 * t653;
t775 = t520 * t654;
t774 = t521 * t565;
t773 = t523 * t565;
t772 = t523 * t600;
t702 = t565 * t653;
t770 = t567 * t597;
t769 = t567 * t603;
t768 = t567 * t649;
t767 = t660 * t597;
t766 = t660 * t603;
t704 = t597 * t650;
t765 = t600 * t650;
t764 = t642 * t656;
t759 = t649 * t520;
t508 = -pkin(4) * t660 + pkin(10) * t567;
t754 = t653 * t459 + t649 * t508;
t747 = t654 * t595 + t597 * t765;
t746 = t797 * t618;
t745 = t797 * t619;
t530 = t650 * t537;
t461 = -pkin(4) * t603 - t551 * t654 + t530;
t744 = pkin(5) * t798 + t638 * t733 - t461;
t621 = t638 * t755;
t741 = t649 * t616 + t621;
t736 = qJD(4) * t649;
t734 = qJD(4) * t653;
t729 = qJD(6) * t652;
t727 = pkin(1) * t764;
t725 = t652 * t452 - t648 * t453 - t521 * t729;
t723 = qJD(5) * t785;
t717 = t565 * t732;
t670 = t654 * t491 - t504 * t735 + t532 * t733 + t650 * t533;
t428 = pkin(10) * t595 + t670;
t490 = t561 * t645 - t647 * t657;
t440 = pkin(4) * t520 - pkin(10) * t519 + t490;
t410 = -qJD(5) * t427 - t428 * t649 + t653 * t440;
t405 = pkin(5) * t520 - pkin(11) * t452 + t410;
t409 = t653 * t428 + t649 * t440 - t448 * t732 + t456 * t731;
t406 = -pkin(11) * t453 + t409;
t711 = t652 * t405 - t648 * t406;
t420 = t422 * t730;
t710 = t648 * t405 - t420;
t708 = -t469 * t649 + t653 * t478;
t706 = -t650 * t535 + t555 * t654;
t636 = qJD(2) * t697;
t571 = t636 + t661;
t506 = t571 * t645 - t647 * t572;
t703 = t597 * t654;
t701 = qJD(6) * t416 + t406;
t700 = t642 * t651 * t655 * MDP(4);
t693 = -t460 + (t732 + t768) * pkin(5);
t691 = t646 * t656 * t783;
t690 = pkin(1) * t794;
t688 = -t608 * t520 - t562 * t748;
t566 = -pkin(11) * t758 + t741;
t686 = pkin(5) * t765 - pkin(11) * t557 + qJD(6) * t566 - t462 * t649 - (pkin(5) * t650 - pkin(11) * t755) * qJD(4) - (-t621 + (pkin(11) * t650 - t616) * t649) * qJD(5) - t789;
t611 = t653 * t616;
t560 = -pkin(11) * t756 + t611 + (-t638 * t649 - pkin(5)) * t654;
t685 = -qJD(6) * t560 - (-t650 * t734 - t654 * t732) * t638 + t787 + t798 * pkin(11);
t501 = t653 * t508;
t634 = t785 * t653;
t684 = -pkin(5) * t660 + qJD(6) * t634 - t459 * t649 + t501 + (pkin(11) * t567 + t723) * t653;
t633 = t785 * t649;
t683 = pkin(11) * t768 + qJD(6) * t633 + t649 * t723 + t754;
t412 = t416 * t648 + t781;
t554 = t580 * t653 + t605 * t649;
t423 = -pkin(5) * t671 - pkin(11) * t554 + t708;
t553 = t580 * t649 - t605 * t653;
t430 = -pkin(11) * t553 + t752;
t682 = t423 * t652 - t430 * t648;
t681 = t423 * t648 + t430 * t652;
t479 = t652 * t553 + t554 * t648;
t480 = -t553 * t648 + t554 * t652;
t507 = t571 * t647 + t572 * t645;
t602 = (-t645 * t651 + t760) * t737;
t552 = pkin(3) * t601 - pkin(9) * t602 + t793;
t675 = -t650 * t507 - t535 * t733 + t552 * t654 - t555 * t735;
t468 = -pkin(4) * t605 - t706;
t673 = -t565 * t731 - t759;
t672 = -pkin(10) * t520 + t447 * t565;
t669 = t654 * t507 - t535 * t735 + t650 * t552 + t555 * t733;
t434 = pkin(10) * t601 + t669;
t545 = qJD(4) * t580 + t602 * t650;
t546 = qJD(4) * t671 + t602 * t654;
t445 = pkin(4) * t545 - pkin(10) * t546 + t506;
t668 = t653 * t434 + t649 * t445 - t469 * t732 + t478 * t731;
t414 = -t523 * t730 + t725;
t667 = t503 * t597 - t638 * t595;
t435 = -pkin(4) * t601 - t675;
t665 = -pkin(8) * t762 - t698;
t662 = qJD(4) * t521 + t673;
t659 = -qJD(5) * t752 - t434 * t649 + t653 * t445;
t403 = -qJD(6) * t412 + t711;
t658 = t678 * t665;
t641 = -pkin(5) * t653 - pkin(4);
t612 = (pkin(5) * t649 + t638) * t650;
t509 = t523 * t735;
t487 = t520 * t671;
t467 = -qJD(5) * t553 + t546 * t653 + t601 * t649;
t466 = qJD(5) * t554 + t546 * t649 - t601 * t653;
t465 = t680 * t735;
t442 = pkin(5) * t553 + t468;
t419 = qJD(6) * t480 + t652 * t466 + t467 * t648;
t418 = -qJD(6) * t479 - t466 * t648 + t467 * t652;
t417 = pkin(5) * t466 + t435;
t413 = pkin(5) * t453 + t429;
t411 = -t422 * t648 + t782;
t408 = -pkin(11) * t466 + t668;
t407 = pkin(5) * t545 - pkin(11) * t467 + t659;
t402 = t701 * t652 + t710;
t1 = [t792 * t794 + (-MDP(7) * t721 + t737 * t791) * (0.2e1 * t712 + qJD(2)) + (t414 * t480 - t418 * t680) * MDP(27) + (-t414 * t479 - t415 * t480 - t418 * t471 + t419 * t680) * MDP(28) + (-t460 * t601 + t490 * t580 + t503 * t546 - t506 * t660 + t534 * t519 - t595 * t751 - t597 * t669 - t605 * t670) * MDP(19) + (t519 * t580 - t546 * t660) * MDP(13) + (t519 * t605 + t546 * t597 + t580 * t595 - t601 * t660) * MDP(15) + (t409 * t671 - t427 * t545 + t429 * t554 + t435 * t523 + t447 * t467 + t468 * t452 - t520 * t752 - t565 * t668) * MDP(26) + (t459 * t601 - t490 * t671 + t503 * t545 + t506 * t567 + t534 * t520 + t595 * t706 + t597 * t675 - t605 * t699) * MDP(18) + (-t410 * t671 + t426 * t545 + t429 * t553 + t435 * t521 + t447 * t466 + t468 * t453 + t520 * t708 + t565 * t659) * MDP(25) + ((-qJD(6) * t681 + t407 * t652 - t408 * t648) * t562 + t682 * t520 - t403 * t671 + t411 * t545 + t417 * t471 + t442 * t415 + t413 * t479 + t437 * t419) * MDP(32) + (t415 * t671 - t419 * t562 - t471 * t545 - t479 * t520) * MDP(30) + (t453 * t671 - t466 * t565 - t520 * t553 - t521 * t545) * MDP(23) + (-t452 * t671 + t467 * t565 + t520 * t554 + t523 * t545) * MDP(22) + (-t520 * t605 - t545 * t597 - t567 * t601 + t595 * t671) * MDP(16) + (-(qJD(6) * t682 + t407 * t648 + t408 * t652) * t562 - t681 * t520 + t402 * t671 - t412 * t545 - t417 * t680 + t442 * t414 + t413 * t480 + t437 * t418) * MDP(33) + (-t414 * t671 + t418 * t562 + t480 * t520 - t545 * t680) * MDP(29) + (t519 * t671 - t520 * t580 + t545 * t660 - t546 * t567) * MDP(14) + (t545 * t562 - t487) * MDP(31) + (t545 * t565 - t487) * MDP(24) + (t655 * t690 - (-pkin(8) * t721 + t636) * t678 - (-pkin(8) * t695 + t629) * t783) * MDP(10) + 0.2e1 * t700 * t728 + (-t490 * t547 + t491 * t548 - t514 * t506 + t515 * t507 + (t613 + t674) * t793) * MDP(12) + (qJD(2) * t658 + t651 * t690 + t665 * t687) * MDP(9) + (t452 * t554 + t467 * t523) * MDP(20) + (-t452 * t553 - t453 * t554 - t466 * t523 - t467 * t521) * MDP(21) + (t595 * t605 + t597 * t601) * MDP(17) + (t490 * t606 - t491 * t605 + t506 * t603 + t507 * t600 - t514 * t602 - t515 * t601 - t547 * t596 - t548 * t595) * MDP(11); t764 * t792 + ((t515 - t536) * t603 + (t514 - t537) * t600 + (-t595 * t645 - t596 * t647) * pkin(2)) * MDP(11) + (-t459 * t603 - t490 * t654 + t639 * t520 - t536 * t567 + (t530 + (-qJD(4) * t638 - t551) * t654) * t597 + t667 * t650) * MDP(18) + ((t519 - t770) * t654 + (-t520 + t767) * t650) * MDP(14) + (-t597 * t735 + t747 + t769) * MDP(16) + (-t414 * t608 + t415 * t609 - t471 * t749 + t680 * t748) * MDP(28) + (-t414 * t609 - t680 * t749) * MDP(27) + (t460 * t603 + t490 * t650 + t639 * t519 + t536 * t660 + (t720 + t750) * t597 + t667 * t654) * MDP(19) + (t519 * t650 - t660 * t703) * MDP(13) + (t415 * t654 - t471 * t704 + t688) * MDP(30) + (-(t560 * t648 + t566 * t652) * t520 + t402 * t654 + t612 * t414 - t413 * t609 + (t648 * t686 + t652 * t685) * t562 - t744 * t680 + t749 * t437 - t412 * t704) * MDP(33) + (-pkin(8) * t694 - qJD(1) * t658) * MDP(9) + (MDP(7) * t691 + (-t676 + t727) * MDP(9)) * t651 + (t521 * t557 + t523 * t556 + (-t521 * t653 - t523 * t649) * t733 + (-t778 - t453 * t653 + (t521 * t649 - t523 * t653) * qJD(5)) * t650) * MDP(21) + (t565 * t704 - t775) * MDP(24) + (t562 * t704 - t775) * MDP(31) + (-t452 * t654 + t509 + (-t772 + t776) * t650 + t664 * t565) * MDP(22) + (t595 * t650 + t597 * t703 + t766) * MDP(15) + (t452 * t756 + t523 * t664) * MDP(20) + ((t560 * t652 - t566 * t648) * t520 - t403 * t654 + t612 * t415 + t413 * t608 + (t648 * t685 - t652 * t686) * t562 + t744 * t471 + t748 * t437 + t411 * t704) * MDP(32) + (-t629 + t655 * t727 + (-pkin(8) * t722 + t635) * t712 + t635 * qJD(2)) * MDP(10) + (t514 * t536 - t515 * t537 + (-t490 * t647 + t491 * t645 - t613 * t722) * pkin(2)) * MDP(12) - t597 * t603 * MDP(17) + (-t414 * t654 + t680 * t765 - t465 - t796) * MDP(29) - t656 * t700 - t691 * t791 + (-t447 * t556 - t461 * t521 + t611 * t520 + ((-qJD(5) * t616 + t462) * t649 + t789) * t565 + (t447 * t736 + t638 * t662 - t410) * t654 + (t426 * t597 + t447 * t731 + t638 * t453 + t780) * t650) * MDP(25) + (-t741 * t520 - t461 * t523 - t447 * t557 + t787 * t565 + (t638 * t717 + t409 + (t447 * t653 + t523 * t638) * qJD(4)) * t654 + (-t447 * t732 + t427 * t600 + t779 + t638 * t452 + (t638 * t702 - t427) * qJD(4)) * t650) * MDP(26) + (t453 * t654 + t803 * t565 + (-t521 * t597 + t673) * t650) * MDP(23); (-t600 ^ 2 - t603 ^ 2) * MDP(11) + (t514 * t603 - t515 * t600 + t628) * MDP(12) + (t747 - t769) * MDP(18) + MDP(19) * t766 + t556 * t565 * MDP(25) + (t557 * t565 + t509) * MDP(26) + t688 * MDP(32) + (-t465 + t796) * MDP(33) + ((-t565 * t736 - t453) * MDP(25) + (-t565 * t734 - t452) * MDP(26) - t415 * MDP(32) - t414 * MDP(33) - t597 ^ 2 * MDP(19)) * t654 + (-t595 * MDP(19) + (-t521 * t600 + t662) * MDP(25) + (t717 - t772 - t776) * MDP(26) + t680 * t600 * MDP(33) + (-MDP(18) * qJD(4) + MDP(32) * t471) * t597) * t650; -t567 ^ 2 * MDP(14) + (t519 + t770) * MDP(15) + (-t520 - t767) * MDP(16) + t595 * MDP(17) + (t460 * t597 - t699) * MDP(18) + (t459 * t597 + t503 * t567 - t670) * MDP(19) + (t523 * t702 + t778) * MDP(20) + ((t452 - t774) * t653 + (-t453 - t773) * t649) * MDP(21) + (t565 * t702 + t759) * MDP(22) + (-t565 ^ 2 * t649 + t776) * MDP(23) + (-pkin(4) * t453 - t779 - t460 * t521 + (-pkin(10) * t731 - t501) * t565 + (t459 * t565 + t672) * t649) * MDP(25) + (-pkin(4) * t452 + t780 - t460 * t523 + (pkin(10) * t732 + t754) * t565 + t672 * t653) * MDP(26) + (t414 * t619 + t680 * t746) * MDP(27) + (-t414 * t618 - t415 * t619 + t471 * t746 + t680 * t745) * MDP(28) + (t520 * t619 - t562 * t746) * MDP(29) + (-t520 * t618 - t562 * t745) * MDP(30) + ((-t633 * t652 - t634 * t648) * t520 + t641 * t415 + t413 * t618 + (t648 * t683 - t652 * t684) * t562 + t693 * t471 + t745 * t437) * MDP(32) + (-(-t633 * t648 + t634 * t652) * t520 + t641 * t414 + t413 * t619 + (t648 * t684 + t652 * t683) * t562 - t693 * t680 - t746 * t437) * MDP(33) - (MDP(13) * t567 - MDP(14) * t660 - t503 * MDP(18) - MDP(22) * t523 + t521 * MDP(23) - t565 * MDP(24) - t426 * MDP(25) + t427 * MDP(26) + MDP(29) * t680 + t471 * MDP(30) - t562 * MDP(31) - t411 * MDP(32) + t412 * MDP(33)) * t660; t523 * t521 * MDP(20) + (-t521 ^ 2 + t523 ^ 2) * MDP(21) + (t452 + t774) * MDP(22) + (-t453 + t773) * MDP(23) + t520 * MDP(24) + (t427 * t565 - t447 * t523 + t410) * MDP(25) + (t426 * t565 + t447 * t521 - t409) * MDP(26) + (t414 + t800) * MDP(29) + (-t415 - t799) * MDP(30) + (-(-t421 * t648 - t781) * t562 + t801 + (-t471 * t523 + t520 * t652 - t562 * t730) * pkin(5) + t403) * MDP(32) + (t802 + t420 + (-t422 * t562 - t405) * t648 + (t421 * t562 - t701) * t652 + (-t520 * t648 + t523 * t680 - t562 * t729) * pkin(5)) * MDP(33) + t795; (t725 + t800) * MDP(29) + (-t709 - t799) * MDP(30) + (t412 * t562 + t711 + t801) * MDP(32) + (-t652 * t406 + t411 * t562 - t710 + t802) * MDP(33) + (-MDP(29) * t771 + MDP(30) * t680 - MDP(32) * t412 - MDP(33) * t782) * qJD(6) + t795;];
tauc  = t1;
