% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 21:30
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPRRR5_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR5_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR5_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRR5_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRR5_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR5_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 21:26:42
% EndTime: 2019-05-06 21:27:19
% DurationCPUTime: 20.15s
% Computational Cost: add. (183329->772), mult. (480727->1159), div. (0->0), fcn. (389768->14), ass. (0->458)
t388 = sin(pkin(12));
t390 = cos(pkin(12));
t389 = sin(pkin(6));
t399 = cos(qJ(2));
t452 = qJD(1) * t399;
t432 = t389 * t452;
t395 = sin(qJ(2));
t453 = qJD(1) * t395;
t433 = t389 * t453;
t357 = t388 * t433 - t390 * t432;
t359 = t388 * t432 + t390 * t433;
t329 = t359 * t357;
t391 = cos(pkin(6));
t382 = t391 * qJDD(1) + qJDD(2);
t513 = -t329 + t382;
t525 = t388 * t513;
t524 = t390 * t513;
t392 = sin(qJ(6));
t454 = qJD(1) * t391;
t383 = qJD(2) + t454;
t394 = sin(qJ(4));
t398 = cos(qJ(4));
t340 = t359 * t398 + t383 * t394;
t353 = qJD(4) + t357;
t393 = sin(qJ(5));
t397 = cos(qJ(5));
t315 = t340 * t393 - t397 * t353;
t316 = t340 * t397 + t353 * t393;
t396 = cos(qJ(6));
t272 = t396 * t315 + t316 * t392;
t274 = -t315 * t392 + t316 * t396;
t228 = t274 * t272;
t444 = qJDD(1) * t399;
t412 = (-qJD(2) * t453 + t444) * t389;
t445 = qJDD(1) * t389;
t456 = qJD(2) * t432 + t395 * t445;
t330 = t388 * t412 + t390 * t456;
t426 = t330 * t394 - t398 * t382;
t298 = -qJD(4) * t340 - t426;
t297 = qJDD(5) - t298;
t293 = qJDD(6) + t297;
t517 = -t228 + t293;
t523 = t392 * t517;
t276 = t316 * t315;
t515 = -t276 + t297;
t522 = t393 * t515;
t338 = t359 * t394 - t398 * t383;
t304 = t340 * t338;
t406 = t388 * t456 - t390 * t412;
t404 = qJDD(4) + t406;
t514 = -t304 + t404;
t521 = t394 * t514;
t520 = t396 * t517;
t519 = t397 * t515;
t518 = t398 * t514;
t420 = -t330 * t398 - t382 * t394;
t299 = -qJD(4) * t338 - t420;
t242 = -t315 * qJD(5) + t397 * t299 + t393 * t404;
t402 = t316 * qJD(5) + t393 * t299 - t397 * t404;
t169 = -t272 * qJD(6) + t396 * t242 - t392 * t402;
t335 = qJD(5) + t338;
t332 = qJD(6) + t335;
t254 = t332 * t272;
t516 = -t254 + t169;
t292 = t335 * t315;
t218 = -t292 + t242;
t219 = t292 + t242;
t319 = t353 * t338;
t264 = t299 - t319;
t346 = t383 * t357;
t512 = -t346 + t330;
t468 = t383 * t359;
t305 = t406 + t468;
t500 = sin(qJ(1));
t501 = cos(qJ(1));
t418 = g(1) * t501 + g(2) * t500;
t505 = qJD(1) ^ 2;
t362 = -pkin(1) * t505 + pkin(8) * t445 - t418;
t464 = t389 * t395;
t384 = g(3) * t464;
t417 = g(1) * t500 - g(2) * t501;
t449 = t389 * t505;
t407 = qJDD(1) * pkin(1) + pkin(8) * t449 + t417;
t405 = t391 * t407;
t386 = t389 ^ 2;
t450 = t386 * t505;
t429 = t399 * t450;
t455 = qJD(1) * t389;
t507 = t383 ^ 2;
t289 = -t507 * pkin(2) - t384 + (t405 + (-qJD(2) + t383) * qJ(3) * t455) * t395 + (-pkin(2) * t429 + qJ(3) * t445 + t362) * t399;
t425 = -t395 * t362 + t399 * t405;
t466 = t383 * t389;
t401 = -t456 * qJ(3) + t382 * pkin(2) + (-t389 * g(3) + (pkin(2) * t386 * t453 + qJ(3) * t466) * qJD(1)) * t399 + t425;
t231 = -0.2e1 * qJD(3) * t357 + t390 * t289 + t388 * t401;
t463 = t389 * t399;
t320 = g(3) * t463 - t425;
t321 = t399 * t362 + t395 * t405 - t384;
t511 = t395 * t320 + t399 * t321;
t506 = t399 ^ 2;
t431 = t506 * t450;
t510 = qJ(3) * t431 - qJDD(3);
t428 = t242 * t392 + t396 * t402;
t139 = t274 * (qJD(6) - t332) + t428;
t261 = (qJD(4) - t353) * t340 + t426;
t270 = t272 ^ 2;
t271 = t274 ^ 2;
t509 = t315 ^ 2;
t314 = t316 ^ 2;
t331 = t332 ^ 2;
t333 = t335 ^ 2;
t336 = t338 ^ 2;
t337 = t340 ^ 2;
t508 = t353 ^ 2;
t355 = t357 ^ 2;
t356 = t359 ^ 2;
t387 = t395 ^ 2;
t504 = 0.2e1 * qJD(3);
t326 = pkin(3) * t357 - pkin(9) * t359;
t209 = -pkin(3) * t507 + pkin(9) * t382 - t326 * t357 + t231;
t494 = t391 * g(3);
t347 = t389 * t407 + t494;
t400 = (pkin(2) * t383 - qJ(3) * t433) * t433 - pkin(2) * t412 - t347 - t512 * pkin(9) + t305 * pkin(3) - t510;
t172 = t398 * t209 + t394 * t400;
t302 = pkin(4) * t338 - pkin(10) * t340;
t146 = -pkin(4) * t508 + pkin(10) * t404 - t338 * t302 + t172;
t427 = t289 * t388 - t390 * t401;
t208 = -t382 * pkin(3) - t507 * pkin(9) + (t504 + t326) * t359 + t427;
t161 = -t264 * pkin(10) + (t340 * t353 - t298) * pkin(4) + t208;
t107 = t146 * t393 - t397 * t161;
t77 = pkin(5) * t515 - pkin(11) * t219 - t107;
t108 = t397 * t146 + t393 * t161;
t288 = pkin(5) * t335 - pkin(11) * t316;
t83 = -pkin(5) * t509 - pkin(11) * t402 - t335 * t288 + t108;
t45 = t392 * t83 - t396 * t77;
t46 = t392 * t77 + t396 * t83;
t27 = t392 * t46 - t396 * t45;
t503 = pkin(5) * t27;
t142 = t254 + t169;
t96 = -t139 * t392 - t142 * t396;
t502 = pkin(5) * t96;
t230 = t359 * t504 + t427;
t179 = -t230 * t390 + t231 * t388;
t499 = pkin(2) * t179;
t310 = t346 + t330;
t403 = -t406 + t468;
t267 = -t310 * t390 + t388 * t403;
t498 = pkin(2) * t267;
t497 = pkin(3) * t388;
t496 = pkin(4) * t394;
t495 = pkin(8) * t389;
t493 = t27 * t393;
t492 = t27 * t397;
t171 = t209 * t394 - t398 * t400;
t145 = -t404 * pkin(4) - t508 * pkin(10) + t302 * t340 + t171;
t111 = pkin(5) * t402 - pkin(11) * t509 + t288 * t316 + t145;
t491 = t111 * t392;
t490 = t111 * t396;
t489 = t145 * t393;
t488 = t145 * t397;
t195 = t228 + t293;
t487 = t195 * t392;
t486 = t195 * t396;
t485 = t208 * t394;
t484 = t208 * t398;
t235 = t276 + t297;
t483 = t235 * t393;
t482 = t235 * t397;
t280 = t304 + t404;
t481 = t280 * t394;
t480 = t280 * t398;
t301 = t494 + ((t399 * pkin(2) + pkin(1)) * qJDD(1) + ((qJ(3) * t387 + pkin(8)) * t455 + (-qJD(2) - t383) * t395 * pkin(2)) * qJD(1) + t417) * t389 + t510;
t479 = t301 * t388;
t478 = t301 * t390;
t324 = t329 + t382;
t477 = t324 * t388;
t476 = t324 * t390;
t475 = t332 * t392;
t474 = t332 * t396;
t473 = t335 * t316;
t472 = t335 * t393;
t471 = t335 * t397;
t470 = t353 * t394;
t469 = t353 * t398;
t467 = t383 * t388;
t465 = t383 * t390;
t462 = t395 * t179;
t376 = t395 * t429;
t363 = t376 + t382;
t460 = t395 * t363;
t364 = -t376 + t382;
t458 = t399 * t364;
t447 = qJD(4) + t353;
t443 = t394 * t228;
t442 = t398 * t228;
t441 = t394 * t276;
t440 = t398 * t276;
t439 = t388 * t304;
t438 = t390 * t304;
t437 = t391 * t329;
t369 = t383 * t432;
t436 = t369 + t456;
t435 = -pkin(3) * t390 - pkin(2);
t434 = -pkin(4) * t398 - pkin(3);
t430 = t387 * t450;
t28 = t392 * t45 + t396 * t46;
t66 = t107 * t393 + t397 * t108;
t116 = t171 * t394 + t398 * t172;
t180 = t230 * t388 + t390 * t231;
t424 = -t383 + t454;
t422 = -pkin(4) * t145 + pkin(10) * t66;
t65 = -t107 * t397 + t108 * t393;
t115 = -t171 * t398 + t172 * t394;
t214 = -t331 - t270;
t153 = t214 * t392 + t520;
t419 = pkin(5) * t153 - t45;
t256 = -t333 - t509;
t189 = t256 * t397 - t522;
t216 = -t402 - t473;
t416 = pkin(4) * t216 + pkin(10) * t189 - t488;
t269 = -t314 - t333;
t193 = -t269 * t393 - t482;
t415 = -pkin(4) * t218 + pkin(10) * t193 + t489;
t239 = -t271 - t331;
t166 = t239 * t396 - t487;
t414 = pkin(5) * t166 - t46;
t215 = t402 - t473;
t165 = -t215 * t397 + t219 * t393;
t247 = t314 + t509;
t413 = pkin(4) * t247 + pkin(10) * t165 + t66;
t187 = -t270 - t271;
t98 = -t139 * t396 + t142 * t392;
t21 = -pkin(5) * t187 + pkin(11) * t98 + t28;
t23 = -pkin(11) * t96 - t27;
t63 = -t393 * t96 + t397 * t98;
t411 = -pkin(4) * t187 + pkin(10) * t63 + t21 * t397 + t23 * t393;
t154 = t214 * t396 - t523;
t105 = -t153 * t393 + t154 * t397;
t138 = (qJD(6) + t332) * t274 + t428;
t67 = -pkin(5) * t138 + pkin(11) * t154 - t490;
t78 = -pkin(11) * t153 + t491;
t410 = -pkin(4) * t138 + pkin(10) * t105 + t393 * t78 + t397 * t67;
t167 = -t239 * t392 - t486;
t110 = -t166 * t393 + t167 * t397;
t68 = -pkin(5) * t516 + pkin(11) * t167 + t491;
t88 = -pkin(11) * t166 + t490;
t409 = -pkin(4) * t516 + pkin(10) * t110 + t393 * t88 + t397 * t68;
t18 = t28 * t397 - t493;
t25 = -pkin(5) * t111 + pkin(11) * t28;
t408 = -pkin(4) * t111 + pkin(10) * t18 - pkin(11) * t493 + t25 * t397;
t370 = t391 * t382;
t368 = t383 * t433;
t366 = (t387 - t506) * t450;
t365 = -t507 - t431;
t354 = -t507 - t430;
t345 = -t356 + t507;
t344 = t355 - t507;
t343 = -t368 + t412;
t342 = t368 + t412;
t341 = -t369 + t456;
t334 = -t356 - t507;
t328 = t356 - t355;
t322 = -t507 - t355;
t318 = -t337 + t508;
t317 = t336 - t508;
t313 = -t355 - t356;
t303 = t337 - t336;
t300 = -t337 - t508;
t296 = -t508 - t336;
t295 = -t334 * t388 - t476;
t294 = t334 * t390 - t477;
t291 = -t314 + t333;
t290 = -t333 + t509;
t287 = t336 + t337;
t283 = t322 * t390 - t525;
t282 = t322 * t388 + t524;
t278 = (-t338 * t398 + t340 * t394) * t353;
t277 = (-t338 * t394 - t340 * t398) * t353;
t275 = t314 - t509;
t268 = t310 * t388 + t390 * t403;
t266 = t338 * t447 + t420;
t265 = t299 + t319;
t262 = -t340 * t447 - t426;
t260 = t299 * t398 - t340 * t470;
t259 = t299 * t394 + t340 * t469;
t258 = -t298 * t394 + t338 * t469;
t257 = t298 * t398 + t338 * t470;
t253 = -t271 + t331;
t252 = t270 - t331;
t251 = t317 * t398 - t481;
t250 = -t318 * t394 + t518;
t249 = t317 * t394 + t480;
t248 = t318 * t398 + t521;
t246 = -t300 * t394 - t480;
t245 = t300 * t398 - t481;
t244 = (-t315 * t397 + t316 * t393) * t335;
t243 = (-t315 * t393 - t316 * t397) * t335;
t238 = t296 * t398 - t521;
t237 = t296 * t394 + t518;
t227 = t271 - t270;
t226 = -t261 * t398 + t265 * t394;
t225 = t262 * t398 - t264 * t394;
t224 = -t261 * t394 - t265 * t398;
t223 = t262 * t394 + t264 * t398;
t222 = t244 * t398 + t297 * t394;
t221 = t244 * t394 - t297 * t398;
t213 = t242 * t397 - t316 * t472;
t212 = t242 * t393 + t316 * t471;
t211 = t315 * t471 + t393 * t402;
t210 = -t315 * t472 + t397 * t402;
t206 = t290 * t397 - t483;
t205 = -t291 * t393 + t519;
t204 = t290 * t393 + t482;
t203 = t291 * t397 + t522;
t202 = pkin(2) * t294 - t231;
t201 = pkin(2) * t282 - t230;
t200 = (-t272 * t396 + t274 * t392) * t332;
t199 = (-t272 * t392 - t274 * t396) * t332;
t198 = t246 * t390 - t266 * t388;
t197 = t246 * t388 + t266 * t390;
t192 = t269 * t397 - t483;
t191 = t238 * t390 - t262 * t388;
t190 = t238 * t388 + t262 * t390;
t188 = t256 * t393 + t519;
t186 = t226 * t390 - t287 * t388;
t185 = t226 * t388 + t287 * t390;
t184 = t213 * t398 + t441;
t183 = t211 * t398 - t441;
t182 = t213 * t394 - t440;
t181 = t211 * t394 + t440;
t178 = -pkin(9) * t245 + t484;
t177 = -pkin(9) * t237 + t485;
t176 = t252 * t396 - t487;
t175 = -t253 * t392 + t520;
t174 = t252 * t392 + t486;
t173 = t253 * t396 + t523;
t168 = -qJD(6) * t274 - t428;
t164 = t216 * t397 - t218 * t393;
t163 = -t215 * t393 - t219 * t397;
t162 = t216 * t393 + t218 * t397;
t158 = t206 * t398 - t215 * t394;
t157 = t205 * t398 + t219 * t394;
t156 = t206 * t394 + t215 * t398;
t155 = t205 * t394 - t219 * t398;
t152 = t193 * t398 + t218 * t394;
t151 = t193 * t394 - t218 * t398;
t150 = -t199 * t393 + t200 * t397;
t149 = t199 * t397 + t200 * t393;
t148 = t189 * t398 - t216 * t394;
t147 = t189 * t394 + t216 * t398;
t137 = t169 * t396 - t274 * t475;
t136 = t169 * t392 + t274 * t474;
t135 = -t168 * t392 + t272 * t474;
t134 = t168 * t396 + t272 * t475;
t133 = -pkin(3) * t245 + t172;
t132 = t164 * t398 + t275 * t394;
t131 = t164 * t394 - t275 * t398;
t130 = -pkin(3) * t237 + t171;
t129 = t150 * t398 + t293 * t394;
t128 = t150 * t394 - t293 * t398;
t127 = t165 * t398 - t247 * t394;
t126 = t165 * t394 + t247 * t398;
t125 = pkin(2) * t197 + pkin(3) * t266 + pkin(9) * t246 + t485;
t124 = t152 * t390 + t192 * t388;
t123 = t152 * t388 - t192 * t390;
t122 = pkin(2) * t190 + pkin(3) * t262 + pkin(9) * t238 - t484;
t121 = -pkin(10) * t192 + t488;
t120 = -t174 * t393 + t176 * t397;
t119 = -t173 * t393 + t175 * t397;
t118 = t174 * t397 + t176 * t393;
t117 = t173 * t397 + t175 * t393;
t114 = t148 * t390 + t188 * t388;
t113 = t148 * t388 - t188 * t390;
t112 = -pkin(10) * t188 + t489;
t109 = t166 * t397 + t167 * t393;
t104 = t153 * t397 + t154 * t393;
t103 = -pkin(9) * t224 - t115;
t102 = t116 * t390 + t208 * t388;
t101 = t116 * t388 - t208 * t390;
t100 = t127 * t390 + t163 * t388;
t99 = t127 * t388 - t163 * t390;
t97 = -t138 * t396 - t392 * t516;
t95 = -t138 * t392 + t396 * t516;
t94 = -t136 * t393 + t137 * t397;
t93 = -t134 * t393 + t135 * t397;
t92 = t136 * t397 + t137 * t393;
t91 = t134 * t397 + t135 * t393;
t90 = -pkin(4) * t192 + t108;
t89 = -pkin(4) * t188 + t107;
t87 = t398 * t94 + t443;
t86 = t398 * t93 - t443;
t85 = t394 * t94 - t442;
t84 = t394 * t93 + t442;
t82 = t120 * t398 - t139 * t394;
t81 = t119 * t398 + t142 * t394;
t80 = t120 * t394 + t139 * t398;
t79 = t119 * t394 - t142 * t398;
t75 = t110 * t398 + t394 * t516;
t74 = t110 * t394 - t398 * t516;
t73 = pkin(2) * t185 + pkin(3) * t287 + pkin(9) * t226 + t116;
t72 = -pkin(3) * t151 - t415;
t71 = t105 * t398 + t138 * t394;
t70 = t105 * t394 - t138 * t398;
t69 = -pkin(3) * t147 - t416;
t64 = pkin(2) * t101 - pkin(3) * t208 + pkin(9) * t116;
t62 = -t393 * t95 + t397 * t97;
t61 = t393 * t98 + t397 * t96;
t60 = t393 * t97 + t397 * t95;
t59 = t109 * t388 + t390 * t75;
t58 = -t109 * t390 + t388 * t75;
t57 = t227 * t394 + t398 * t62;
t56 = -t227 * t398 + t394 * t62;
t55 = -pkin(10) * t163 - t65;
t54 = t187 * t394 + t398 * t63;
t53 = -t187 * t398 + t394 * t63;
t52 = t145 * t394 + t398 * t66;
t51 = -t145 * t398 + t394 * t66;
t50 = t104 * t388 + t390 * t71;
t49 = -t104 * t390 + t388 * t71;
t48 = -pkin(9) * t151 + t121 * t398 - t394 * t90;
t47 = -pkin(9) * t147 + t112 * t398 - t394 * t89;
t43 = -pkin(3) * t126 - t413;
t42 = -pkin(4) * t61 - t502;
t41 = -pkin(9) * t126 + t163 * t496 + t398 * t55;
t40 = pkin(2) * t123 - pkin(3) * t192 + pkin(9) * t152 + t121 * t394 + t398 * t90;
t39 = pkin(2) * t113 - pkin(3) * t188 + pkin(9) * t148 + t112 * t394 + t398 * t89;
t38 = -pkin(10) * t109 - t393 * t68 + t397 * t88;
t37 = -pkin(4) * t109 - t414;
t36 = -pkin(4) * t104 - t419;
t35 = -pkin(10) * t104 - t393 * t67 + t397 * t78;
t34 = t388 * t65 + t390 * t52;
t33 = t388 * t52 - t390 * t65;
t32 = t388 * t61 + t390 * t54;
t31 = t388 * t54 - t390 * t61;
t30 = pkin(2) * t99 + pkin(9) * t127 + t163 * t434 + t394 * t55;
t29 = -pkin(3) * t51 - t422;
t26 = -pkin(3) * t74 - t409;
t24 = -pkin(3) * t70 - t410;
t22 = -pkin(9) * t51 + (-pkin(10) * t398 + t496) * t65;
t20 = -pkin(9) * t74 - t37 * t394 + t38 * t398;
t19 = -pkin(9) * t70 + t35 * t398 - t36 * t394;
t17 = t28 * t393 + t492;
t16 = t111 * t394 + t18 * t398;
t15 = -t111 * t398 + t18 * t394;
t14 = pkin(2) * t58 - pkin(3) * t109 + pkin(9) * t75 + t37 * t398 + t38 * t394;
t13 = pkin(2) * t33 + pkin(9) * t52 + (-pkin(10) * t394 + t434) * t65;
t12 = pkin(2) * t49 - pkin(3) * t104 + pkin(9) * t71 + t35 * t394 + t36 * t398;
t11 = -pkin(10) * t61 - t21 * t393 + t23 * t397;
t10 = -pkin(4) * t17 - t503;
t9 = -pkin(3) * t53 - t411;
t8 = -pkin(9) * t53 + t11 * t398 - t394 * t42;
t7 = -pkin(10) * t17 - pkin(11) * t492 - t25 * t393;
t6 = t16 * t390 + t17 * t388;
t5 = t16 * t388 - t17 * t390;
t4 = pkin(2) * t31 - pkin(3) * t61 + pkin(9) * t54 + t11 * t394 + t398 * t42;
t3 = -pkin(3) * t15 - t408;
t2 = -pkin(9) * t15 - t10 * t394 + t398 * t7;
t1 = pkin(2) * t5 - pkin(3) * t17 + pkin(9) * t16 + t10 * t398 + t394 * t7;
t44 = [0, 0, 0, 0, 0, qJDD(1), t417, t418, 0, 0, (-t386 * t424 * t452 + t389 * t456) * t395, t391 * t366 + (t395 * t343 + t399 * t436) * t389, t391 * t341 + (t460 + t399 * (t507 - t430)) * t389, (t444 + (-qJD(2) + t424) * t453) * t386 * t399, t391 * t342 + (t395 * (-t507 + t431) + t458) * t389, t370, (-t320 + pkin(1) * (t363 * t399 + t365 * t395)) * t391 + (t399 * t347 + pkin(1) * t343 + pkin(8) * (t365 * t399 - t460)) * t389, -t347 * t464 - t391 * t321 + pkin(1) * (-t389 * t436 + (t354 * t399 - t364 * t395) * t391) + (-t395 * t354 - t458) * t495, pkin(1) * ((-t341 * t399 + t342 * t395) * t391 - (-t387 - t506) * t386 * t449) + (t395 * t341 + t342 * t399) * t495 + t511 * t389, pkin(1) * (t389 * t347 + (-t320 * t399 + t321 * t395) * t391) + t511 * t495, t437 + (t395 * (t330 * t390 - t359 * t467) + t399 * (t330 * t388 + t359 * t465)) * t389, t391 * t328 + (t395 * (-t305 * t390 - t388 * t512) + t399 * (-t305 * t388 + t390 * t512)) * t389, t391 * t310 + (t395 * (-t345 * t388 + t524) + t399 * (t345 * t390 + t525)) * t389, (t357 * t465 + t388 * t406) * t464 + (t357 * t467 - t390 * t406) * t463 - t437, t391 * t403 + (t395 * (t344 * t390 - t477) + t399 * (t344 * t388 + t476)) * t389, t370 + (t395 * (-t357 * t390 + t359 * t388) + t399 * (-t357 * t388 - t359 * t390)) * t466, (t201 + pkin(1) * (t282 * t399 + t283 * t395)) * t391 + (t395 * (-qJ(3) * t282 - t479) + t399 * (-pkin(2) * t305 + qJ(3) * t283 + t478) - pkin(1) * t305 + pkin(8) * (-t395 * t282 + t283 * t399)) * t389, (t202 + pkin(1) * (t294 * t399 + t295 * t395)) * t391 + (t395 * (-qJ(3) * t294 - t478) + t399 * (-pkin(2) * t512 + qJ(3) * t295 - t479) - pkin(1) * t512 + pkin(8) * (-t395 * t294 + t295 * t399)) * t389, (t498 + pkin(1) * (t267 * t399 + t268 * t395)) * t391 + (t395 * (-qJ(3) * t267 - t179) + t399 * (-pkin(2) * t313 + qJ(3) * t268 + t180) - pkin(1) * t313 + pkin(8) * (-t395 * t267 + t268 * t399)) * t389, (t499 + pkin(1) * (t179 * t399 + t180 * t395)) * t391 + (-qJ(3) * t462 + t399 * (pkin(2) * t301 + qJ(3) * t180) + pkin(1) * t301 + pkin(8) * (t180 * t399 - t462)) * t389, t391 * t259 + (t395 * (t260 * t390 + t439) + t399 * (t260 * t388 - t438)) * t389, t391 * t223 + (t395 * (t225 * t390 + t303 * t388) + t399 * (t225 * t388 - t303 * t390)) * t389, t391 * t248 + (t395 * (t250 * t390 + t265 * t388) + t399 * (t250 * t388 - t265 * t390)) * t389, t391 * t257 + (t395 * (t258 * t390 - t439) + t399 * (t258 * t388 + t438)) * t389, t391 * t249 + (t395 * (t251 * t390 - t261 * t388) + t399 * (t251 * t388 + t261 * t390)) * t389, (t390 * t278 + t388 * t404) * t464 + (t388 * t278 - t390 * t404) * t463 + t391 * t277, (t122 + pkin(1) * (t190 * t399 + t191 * t395)) * t391 + (t395 * (-qJ(3) * t190 - t130 * t388 + t177 * t390) + t399 * (-pkin(2) * t237 + qJ(3) * t191 + t130 * t390 + t177 * t388) - pkin(1) * t237 + pkin(8) * (-t395 * t190 + t191 * t399)) * t389, (t125 + pkin(1) * (t197 * t399 + t198 * t395)) * t391 + (t395 * (-qJ(3) * t197 - t133 * t388 + t178 * t390) + t399 * (-pkin(2) * t245 + qJ(3) * t198 + t133 * t390 + t178 * t388) - pkin(1) * t245 + pkin(8) * (-t395 * t197 + t198 * t399)) * t389, (t73 + pkin(1) * (t185 * t399 + t186 * t395)) * t391 + (t395 * (-qJ(3) * t185 + t103 * t390) + t399 * (qJ(3) * t186 + t103 * t388) + pkin(8) * (-t395 * t185 + t186 * t399) + (t395 * t497 + t399 * t435 - pkin(1)) * t224) * t389, (t64 + pkin(1) * (t101 * t399 + t102 * t395)) * t391 + ((t395 * (-pkin(9) * t390 + t497) + t399 * (-pkin(9) * t388 + t435) - pkin(1)) * t115 + (pkin(8) + qJ(3)) * (-t395 * t101 + t102 * t399)) * t389, t391 * t182 + (t395 * (t184 * t390 + t212 * t388) + t399 * (t184 * t388 - t212 * t390)) * t389, t391 * t131 + (t395 * (t132 * t390 + t162 * t388) + t399 * (t132 * t388 - t162 * t390)) * t389, t391 * t155 + (t395 * (t157 * t390 + t203 * t388) + t399 * (t157 * t388 - t203 * t390)) * t389, t391 * t181 + (t395 * (t183 * t390 - t210 * t388) + t399 * (t183 * t388 + t210 * t390)) * t389, t391 * t156 + (t395 * (t158 * t390 + t204 * t388) + t399 * (t158 * t388 - t204 * t390)) * t389, t391 * t221 + (t395 * (t222 * t390 + t243 * t388) + t399 * (t222 * t388 - t243 * t390)) * t389, (t39 + pkin(1) * (t113 * t399 + t114 * t395)) * t391 + (t395 * (-qJ(3) * t113 - t388 * t69 + t390 * t47) + t399 * (-pkin(2) * t147 + qJ(3) * t114 + t388 * t47 + t390 * t69) - pkin(1) * t147 + pkin(8) * (-t395 * t113 + t114 * t399)) * t389, (t40 + pkin(1) * (t123 * t399 + t124 * t395)) * t391 + (t395 * (-qJ(3) * t123 - t388 * t72 + t390 * t48) + t399 * (-pkin(2) * t151 + qJ(3) * t124 + t388 * t48 + t390 * t72) - pkin(1) * t151 + pkin(8) * (-t395 * t123 + t124 * t399)) * t389, (t30 + pkin(1) * (t100 * t395 + t399 * t99)) * t391 + (t395 * (-qJ(3) * t99 - t388 * t43 + t390 * t41) + t399 * (-pkin(2) * t126 + qJ(3) * t100 + t388 * t41 + t390 * t43) - pkin(1) * t126 + pkin(8) * (t100 * t399 - t395 * t99)) * t389, (t13 + pkin(1) * (t33 * t399 + t34 * t395)) * t391 + (t395 * (-qJ(3) * t33 + t22 * t390 - t29 * t388) + t399 * (-pkin(2) * t51 + qJ(3) * t34 + t22 * t388 + t29 * t390) - pkin(1) * t51 + pkin(8) * (-t395 * t33 + t34 * t399)) * t389, t391 * t85 + (t395 * (t388 * t92 + t390 * t87) + t399 * (t388 * t87 - t390 * t92)) * t389, t391 * t56 + (t395 * (t388 * t60 + t390 * t57) + t399 * (t388 * t57 - t390 * t60)) * t389, t391 * t79 + (t395 * (t117 * t388 + t390 * t81) + t399 * (-t117 * t390 + t388 * t81)) * t389, t391 * t84 + (t395 * (t388 * t91 + t390 * t86) + t399 * (t388 * t86 - t390 * t91)) * t389, t391 * t80 + (t395 * (t118 * t388 + t390 * t82) + t399 * (-t118 * t390 + t388 * t82)) * t389, t391 * t128 + (t395 * (t129 * t390 + t149 * t388) + t399 * (t129 * t388 - t149 * t390)) * t389, (t12 + pkin(1) * (t395 * t50 + t399 * t49)) * t391 + (t395 * (-qJ(3) * t49 + t19 * t390 - t24 * t388) + t399 * (-pkin(2) * t70 + qJ(3) * t50 + t19 * t388 + t24 * t390) - pkin(1) * t70 + pkin(8) * (-t395 * t49 + t399 * t50)) * t389, (t14 + pkin(1) * (t395 * t59 + t399 * t58)) * t391 + (t395 * (-qJ(3) * t58 + t20 * t390 - t26 * t388) + t399 * (-pkin(2) * t74 + qJ(3) * t59 + t20 * t388 + t26 * t390) - pkin(1) * t74 + pkin(8) * (-t395 * t58 + t399 * t59)) * t389, (t4 + pkin(1) * (t31 * t399 + t32 * t395)) * t391 + (t395 * (-qJ(3) * t31 - t388 * t9 + t390 * t8) + t399 * (-pkin(2) * t53 + qJ(3) * t32 + t388 * t8 + t390 * t9) - pkin(1) * t53 + pkin(8) * (-t395 * t31 + t32 * t399)) * t389, (t1 + pkin(1) * (t395 * t6 + t399 * t5)) * t391 + (t395 * (-qJ(3) * t5 + t2 * t390 - t3 * t388) + t399 * (-pkin(2) * t15 + qJ(3) * t6 + t2 * t388 + t3 * t390) - pkin(1) * t15 + pkin(8) * (-t395 * t5 + t399 * t6)) * t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t376, t366, t341, t376, t342, t382, -t320, -t321, 0, 0, t329, t328, t310, -t329, t403, t382, t201, t202, t498, t499, t259, t223, t248, t257, t249, t277, t122, t125, t73, t64, t182, t131, t155, t181, t156, t221, t39, t40, t30, t13, t85, t56, t79, t84, t80, t128, t12, t14, t4, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t305, t512, t313, -t301, 0, 0, 0, 0, 0, 0, t237, t245, t224, t115, 0, 0, 0, 0, 0, 0, t147, t151, t126, t51, 0, 0, 0, 0, 0, 0, t70, t74, t53, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t304, t303, t265, -t304, -t261, t404, -t171, -t172, 0, 0, t212, t162, t203, -t210, t204, t243, t416, t415, t413, t422, t92, t60, t117, t91, t118, t149, t410, t409, t411, t408; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t276, t275, t219, -t276, -t215, t297, -t107, -t108, 0, 0, t228, t227, t142, -t228, -t139, t293, t419, t414, t502, t503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, t227, t142, -t228, -t139, t293, -t45, -t46, 0, 0;];
tauJ_reg  = t44;
