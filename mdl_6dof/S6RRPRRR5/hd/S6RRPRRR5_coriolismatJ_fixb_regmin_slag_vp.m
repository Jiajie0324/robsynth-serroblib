% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x33]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:46:52
% EndTime: 2019-03-09 13:48:15
% DurationCPUTime: 57.35s
% Computational Cost: add. (31392->1203), mult. (81996->1599), div. (0->0), fcn. (94418->12), ass. (0->916)
t817 = cos(qJ(4));
t1069 = t817 * qJD(2);
t809 = sin(pkin(12));
t818 = cos(qJ(2));
t1230 = t809 * t818;
t810 = sin(pkin(6));
t1303 = cos(pkin(12));
t814 = sin(qJ(2));
t986 = t1303 * t814;
t727 = (-t986 - t1230) * t810;
t812 = sin(qJ(5));
t1247 = t727 * t812;
t1228 = t810 * t818;
t1229 = t810 * t814;
t725 = -t1228 * t1303 + t1229 * t809;
t517 = t817 * t725;
t816 = cos(qJ(5));
t513 = -t517 * t816 - t1247;
t815 = cos(qJ(6));
t1202 = t815 * t513;
t712 = t727 * t816;
t512 = -t517 * t812 + t712;
t811 = sin(qJ(6));
t1222 = t811 * t512;
t1174 = t1222 / 0.2e1 - t1202 / 0.2e1;
t1245 = t727 * t817;
t1304 = cos(pkin(6));
t813 = sin(qJ(4));
t988 = t1304 * t813;
t654 = t988 - t1245;
t468 = t654 * t812 - t725 * t816;
t1250 = t725 * t812;
t1257 = t654 * t816;
t470 = t1250 + t1257;
t310 = t815 * t468 + t811 * t470;
t1410 = t310 * t817;
t1418 = -t1410 / 0.2e1;
t1246 = t727 * t813;
t652 = -t1304 * t817 - t1246;
t1197 = t815 * t812;
t1215 = t811 * t816;
t928 = t1197 + t1215;
t730 = t928 * t813;
t1244 = t730 * t652;
t499 = t1244 / 0.2e1;
t1421 = t1418 + t499 - t1174;
t1433 = qJD(1) * t1421 - t730 * t1069;
t1196 = t815 * t816;
t1216 = t811 * t812;
t754 = -t1196 + t1216;
t1342 = -t754 / 0.2e1;
t880 = -t1196 / 0.2e1 + t1216 / 0.2e1;
t1375 = t1342 + t880;
t609 = t1375 * t817;
t1079 = t609 * qJD(4);
t1068 = qJD(5) + qJD(6);
t1372 = t1068 * t730;
t1432 = -t1079 - t1372 - t1433;
t858 = t1342 - t880;
t608 = t858 * t817;
t1081 = t608 * qJD(4);
t498 = -t1244 / 0.2e1;
t1422 = t1418 + t498 + t1174;
t1427 = qJD(1) * t1422;
t1431 = -t1081 + t1372 - t1427;
t1430 = t1079 + t1427;
t1429 = t1081 + t1433;
t1417 = t1410 / 0.2e1;
t1420 = t1417 + t499 + t1174;
t1426 = qJD(3) * t1420;
t1425 = qJD(3) * t1422;
t1419 = t1417 + t498 - t1174;
t327 = t1375 * t652;
t1424 = qJD(2) * t1419 + t327 * qJD(4);
t1141 = qJD(1) * t652;
t326 = t858 * t652;
t1423 = qJD(2) * t1421 - t326 * qJD(4) + t1141 * t310;
t1326 = -t817 / 0.2e1;
t1325 = t817 / 0.2e1;
t803 = -pkin(5) * t816 - pkin(4);
t1336 = -t803 / 0.2e1;
t1335 = t803 / 0.2e1;
t1340 = t928 / 0.2e1;
t1223 = t811 * t468;
t447 = t815 * t470;
t1374 = t447 - t1223;
t1402 = t817 * t1374;
t1024 = -t1402 / 0.2e1;
t1023 = t1402 / 0.2e1;
t1409 = t928 * t817;
t1349 = -t1409 / 0.2e1;
t1140 = qJD(1) * t654;
t1331 = -t813 / 0.2e1;
t1020 = t652 * t1331;
t893 = t1325 * t654 + t1020;
t876 = -t893 * qJD(2) + t652 * t1140;
t1397 = -t1374 ^ 2 + t310 ^ 2;
t1416 = qJD(1) * t1397;
t1211 = t812 * t813;
t733 = t1196 * t813 - t1211 * t811;
t356 = t730 * t754 - t733 * t928;
t555 = t754 ^ 2 - t928 ^ 2;
t1180 = t356 * qJD(2) + t555 * qJD(4);
t78 = -t1374 * t928 + t754 * t310;
t1415 = qJD(1) * t78 + t1180;
t1362 = t310 / 0.2e1;
t991 = 0.2e1 * t1362;
t1361 = t1374 / 0.2e1;
t992 = 0.2e1 * t1361;
t62 = t754 * t991 - t928 * t992;
t1414 = qJD(1) * t62 + t1180;
t471 = t730 ^ 2 - t733 ^ 2;
t1181 = t471 * qJD(2) + t356 * qJD(4);
t76 = -t1374 * t733 + t730 * t310;
t1413 = qJD(1) * t76 + t1181;
t60 = t730 * t991 - t733 * t992;
t1412 = qJD(1) * t60 + t1181;
t1363 = pkin(10) + pkin(11);
t771 = t1363 * t812;
t772 = t1363 * t816;
t679 = -t811 * t771 + t815 * t772;
t1323 = pkin(5) * t812;
t794 = pkin(2) * t809 + pkin(9);
t989 = t794 + t1323;
t740 = t989 * t813;
t1399 = t1325 * t679 + t1335 * t733 + t1340 * t740;
t981 = t815 * t771 + t811 * t772;
t1398 = t1326 * t981 + t730 * t1336 + t1342 * t740;
t1354 = t652 / 0.2e1;
t1353 = t654 / 0.2e1;
t1315 = pkin(8) + qJ(3);
t1042 = pkin(1) * t1304;
t791 = t818 * t1042;
t701 = -t1229 * t1315 + t791;
t662 = pkin(2) * t1304 + t701;
t964 = t814 * t1042;
t702 = t1228 * t1315 + t964;
t987 = t1303 * t702;
t454 = t809 * t662 + t987;
t426 = pkin(9) * t1304 + t454;
t1043 = -pkin(2) * t818 - pkin(1);
t475 = t725 * pkin(3) + t727 * pkin(9) + t1043 * t810;
t301 = t426 * t813 - t817 * t475;
t239 = -pkin(4) * t725 + t301;
t178 = pkin(5) * t468 + t239;
t1411 = t178 * t310;
t1408 = qJD(5) * t310;
t1407 = qJD(6) * t310;
t1147 = qJD(1) * t1374;
t1406 = t1147 * t310;
t1405 = t1336 * t310;
t1344 = -t740 / 0.2e1;
t1404 = t1344 * t310;
t1403 = t1374 * t178;
t1136 = qJD(2) * t733;
t416 = -t1340 * t730 + t1342 * t733;
t1401 = t416 * qJD(4) - t730 * t1136;
t1131 = qJD(4) * t928;
t1400 = t416 * qJD(2) - t754 * t1131;
t640 = -t1245 / 0.2e1 + t988 / 0.2e1;
t1369 = t640 * qJD(5) + t876;
t1210 = t812 * t817;
t1207 = t813 * t816;
t1052 = t794 * t1207;
t1317 = t817 * pkin(10);
t1319 = t813 * pkin(4);
t773 = -t1317 + t1319;
t760 = t812 * t773;
t948 = t760 - t1052;
t637 = -pkin(11) * t1210 + t948;
t1217 = t811 * t637;
t1014 = -t1217 / 0.2e1;
t762 = t816 * t773;
t764 = t794 * t1211;
t1166 = t764 + t762;
t1193 = t816 * t817;
t1318 = t813 * pkin(5);
t605 = -pkin(11) * t1193 + t1166 + t1318;
t1199 = t815 * t605;
t882 = t1014 + t1199 / 0.2e1;
t206 = t882 - t1399;
t1198 = t815 * t637;
t1002 = -t1198 / 0.2e1;
t1218 = t811 * t605;
t883 = -t1218 / 0.2e1 + t1002;
t207 = t883 - t1398;
t881 = t1215 / 0.2e1 + t1197 / 0.2e1;
t859 = t1340 + t881;
t325 = t859 * t652;
t1395 = t325 * qJD(4) + t1141 * t1374;
t1394 = t1068 * t679;
t724 = t725 ^ 2;
t1393 = t724 * t817;
t804 = t810 ^ 2;
t1392 = t804 * t814;
t1341 = t754 / 0.2e1;
t1391 = (t1341 * t725 + t1362) * t813;
t1389 = (t301 / 0.2e1 - t239 / 0.2e1) * t812;
t997 = -t517 / 0.2e1;
t1386 = t816 * t997 - t1247 / 0.2e1;
t996 = t517 / 0.2e1;
t1385 = t816 * t996 + t1247 / 0.2e1;
t805 = t812 ^ 2;
t807 = t816 ^ 2;
t785 = t807 - t805;
t1384 = qJD(4) * t785;
t1093 = t893 * qJD(1);
t1383 = t893 * qJD(4);
t607 = (t1340 - t881) * t817;
t1082 = t607 * qJD(3);
t1130 = qJD(4) * t803;
t1285 = t178 * t928;
t286 = t816 * t301;
t424 = pkin(4) * t654 + pkin(10) * t652;
t414 = t812 * t424;
t1183 = t286 - t414;
t394 = t812 * t652;
t166 = pkin(11) * t394 - t1183;
t1224 = t811 * t166;
t1015 = -t1224 / 0.2e1;
t1321 = t654 * pkin(5);
t398 = t816 * t652;
t1213 = t812 * t301;
t415 = t816 * t424;
t983 = t415 + t1213;
t150 = pkin(11) * t398 + t1321 + t983;
t1204 = t815 * t150;
t884 = t1015 + t1204 / 0.2e1;
t835 = -t1285 / 0.2e1 + t884;
t1255 = t679 * t652;
t891 = -t1255 / 0.2e1 + t1374 * t1335;
t35 = t835 - t891;
t1382 = qJD(1) * t35 + qJD(2) * t206 - t1130 * t928 + t1082;
t1328 = -t816 / 0.2e1;
t1329 = t815 / 0.2e1;
t1332 = t812 / 0.2e1;
t174 = (-t730 * t1332 + (t1328 * t754 + t1329) * t813) * pkin(5) + t206;
t1333 = -t812 / 0.2e1;
t827 = t1374 * t1336 + t1255 / 0.2e1;
t28 = (t1329 * t654 + t1333 * t310 + t1342 * t470) * pkin(5) + t827 + t835;
t600 = t1323 * t754 + t803 * t928;
t1381 = t28 * qJD(1) + t174 * qJD(2) - t600 * qJD(4) + t1082;
t1350 = -t730 / 0.2e1;
t1026 = t1374 * t1350;
t1347 = t733 / 0.2e1;
t119 = -t1347 * t310 + t1026;
t1380 = qJD(1) * t119 + t1401;
t1348 = -t733 / 0.2e1;
t118 = t1348 * t310 + t1026;
t1379 = qJD(1) * t118 + t1401;
t1025 = t1374 * t1342;
t147 = -t1340 * t310 + t1025;
t1378 = qJD(1) * t147 + t1400;
t1339 = -t928 / 0.2e1;
t146 = t1339 * t310 + t1025;
t1377 = qJD(1) * t146 + t1400;
t1070 = t813 * qJD(5);
t797 = -t1070 / 0.2e1;
t1376 = t1093 + t797;
t796 = t1070 / 0.2e1;
t1373 = t796 - t1093;
t1370 = -qJD(6) * t640 - t1369;
t890 = t1353 * t730 + t1354 * t1409;
t1080 = t609 * qJD(3);
t1368 = t1068 * t981 - t1080;
t1367 = t652 ^ 2;
t1366 = -pkin(5) / 0.2e1;
t1322 = t652 * pkin(5);
t1320 = t725 * pkin(10);
t302 = t426 * t817 + t475 * t813;
t240 = t302 + t1320;
t673 = t809 * t702;
t453 = t1303 * t662 - t673;
t425 = -pkin(3) * t1304 - t453;
t950 = t652 * pkin(4) - t654 * pkin(10);
t821 = t425 + t950;
t140 = t240 * t812 - t816 * t821;
t93 = -pkin(11) * t470 - t140;
t83 = t93 + t1322;
t82 = t815 * t83;
t1365 = -t82 / 0.2e1;
t1364 = -t83 / 0.2e1;
t1360 = t415 / 0.2e1;
t1003 = -t447 / 0.2e1;
t1359 = -t470 / 0.2e1;
t1358 = -t513 / 0.2e1;
t1065 = pkin(11) * t1207;
t795 = -pkin(2) * t1303 - pkin(3);
t949 = -t817 * pkin(4) - t813 * pkin(10);
t745 = t949 + t795;
t735 = t816 * t745;
t548 = -t1065 + t735 + (-t794 * t812 - pkin(5)) * t817;
t530 = t815 * t548;
t1357 = -t530 / 0.2e1;
t1356 = -t548 / 0.2e1;
t1355 = -t652 / 0.2e1;
t1352 = -t725 / 0.2e1;
t1351 = t725 / 0.2e1;
t734 = t754 * t817;
t1346 = t734 / 0.2e1;
t1345 = -t734 / 0.2e1;
t741 = t989 * t817;
t1343 = -t741 / 0.2e1;
t1338 = t760 / 0.2e1;
t1337 = -t794 / 0.2e1;
t1334 = -t811 / 0.2e1;
t1330 = t813 / 0.2e1;
t1327 = t816 / 0.2e1;
t1324 = pkin(5) * t470;
t1316 = -qJD(6) / 0.2e1;
t1314 = t60 * qJD(5) + t76 * qJD(6);
t1313 = t62 * qJD(5) + t78 * qJD(6);
t1312 = pkin(2) * qJD(2);
t1311 = pkin(5) * qJD(5);
t1310 = pkin(5) * qJD(6);
t1309 = t811 * t93;
t141 = t816 * t240 + t812 * t821;
t94 = -t468 * pkin(11) + t141;
t1308 = t811 * t94;
t1307 = t815 * t93;
t1306 = t815 * t94;
t1066 = pkin(2) * t1229;
t495 = -pkin(3) * t727 + pkin(9) * t725 + t1066;
t1189 = t817 * t495;
t478 = t1303 * t701 - t673;
t466 = t813 * t478;
t982 = -t466 + t1189;
t274 = pkin(4) * t727 - t982;
t194 = pkin(5) * t512 + t274;
t1221 = t811 * t513;
t491 = t815 * t512;
t343 = t491 + t1221;
t49 = -t82 + t1308;
t514 = t813 * t725;
t467 = t817 * t478;
t490 = t813 * t495;
t1176 = t467 + t490;
t275 = -pkin(10) * t727 + t1176;
t1214 = t812 * t275;
t477 = t809 * t701 + t987;
t349 = -t725 * t773 + t477;
t346 = t816 * t349;
t160 = t346 - t1214;
t105 = -pkin(5) * t514 - pkin(11) * t513 + t160;
t1206 = t815 * t105;
t270 = t816 * t275;
t345 = t812 * t349;
t161 = t270 + t345;
t111 = -pkin(11) * t512 + t161;
t1226 = t811 * t111;
t57 = t1206 - t1226;
t9 = t178 * t343 + t194 * t310 + t49 * t514 + t57 * t652;
t1305 = t9 * qJD(1);
t55 = -t1306 - t1309;
t21 = t1324 * t310 + t55 * t652 + t1403;
t1302 = qJD(1) * t21;
t56 = t1307 - t1308;
t22 = t1324 * t1374 - t56 * t652 - t1411;
t1301 = qJD(1) * t22;
t31 = t49 * t652 - t1411;
t1300 = qJD(1) * t31;
t50 = t811 * t83 + t1306;
t32 = -t50 * t652 + t1403;
t1299 = qJD(1) * t32;
t63 = t140 * t652 - t239 * t468;
t1296 = qJD(1) * t63;
t64 = -t141 * t652 + t239 * t470;
t1295 = qJD(1) * t64;
t385 = t754 * t652;
t1273 = t385 * t817;
t833 = (t725 * t1339 - t1374 / 0.2e1) * t813 + t1273 / 0.2e1;
t889 = t1345 * t652 + t1347 * t654;
t98 = t833 + t889;
t1292 = qJD(1) * t98;
t344 = t1202 - t1222;
t1205 = t815 * t111;
t1227 = t811 * t105;
t58 = t1205 + t1227;
t10 = t1374 * t194 + t178 * t344 + t50 * t514 - t58 * t652;
t1291 = t10 * qJD(1);
t214 = -pkin(5) * t394 + t302;
t384 = t928 * t652;
t935 = t1204 - t1224;
t11 = -t178 * t384 + t214 * t310 - t49 * t654 + t652 * t935;
t1290 = t11 * qJD(1);
t1203 = t815 * t166;
t1225 = t811 * t150;
t934 = t1203 + t1225;
t12 = t1374 * t214 + t178 * t385 - t50 * t654 - t652 * t934;
t1289 = t12 * qJD(1);
t1288 = t178 * t730;
t1287 = t178 * t733;
t1286 = t178 * t754;
t1284 = t239 * t816;
t1283 = t274 * t812;
t1282 = t274 * t816;
t33 = t140 * t514 + t160 * t652 + t239 * t512 + t274 * t468;
t1278 = t33 * qJD(1);
t34 = t141 * t514 - t161 * t652 + t239 * t513 + t274 * t470;
t1277 = t34 * qJD(1);
t1276 = t343 * t652;
t1275 = t344 * t652;
t1274 = t344 * t928;
t39 = -t140 * t654 + t302 * t468 + (t415 + (-t239 + t301) * t812) * t652;
t1272 = t39 * qJD(1);
t40 = -t141 * t654 + t302 * t470 + (t1183 - t1284) * t652;
t1271 = t40 * qJD(1);
t1270 = t425 * t813;
t1269 = t425 * t817;
t1268 = t468 * t817;
t1267 = t470 * t928;
t1266 = t470 * t812;
t1265 = t470 * t816;
t1264 = t470 * t817;
t1263 = t512 * t652;
t1262 = t513 * t652;
t1261 = t513 * t812;
t1050 = t794 * t1193;
t645 = t745 * t812 + t1050;
t1260 = t645 * t654;
t1259 = t654 * t727;
t1258 = t654 * t813;
t68 = -t1374 * t343 - t310 * t344;
t1253 = t68 * qJD(1);
t69 = t301 * t727 + t477 * t652 + (t982 - t1270) * t725;
t1252 = t69 * qJD(1);
t70 = t302 * t727 + t477 * t654 + (-t1176 - t1269) * t725;
t1251 = t70 * qJD(1);
t1249 = t724 * t813;
t1248 = t727 * t652;
t1242 = t730 * t740;
t1240 = t733 * t652;
t79 = t1374 * t384 - t310 * t385;
t1236 = t79 * qJD(1);
t1235 = t794 * t468;
t1232 = t804 * t818;
t806 = t813 ^ 2;
t1231 = t806 * t812;
t1053 = t794 * t1210;
t644 = -t735 + t1053;
t580 = -t644 - t1065;
t1220 = t811 * t580;
t581 = -pkin(11) * t1211 + t645;
t1219 = t811 * t581;
t1212 = t812 * t468;
t1209 = t813 * t468;
t1208 = t813 * t730;
t1201 = t815 * t580;
t1200 = t815 * t581;
t1195 = t816 * t468;
t1194 = t816 * t806;
t1191 = t817 * t343;
t1190 = t817 * t384;
t1188 = t817 * t512;
t1187 = t817 * t652;
t896 = t1345 * t1374 + t1347 * t385;
t86 = -t1274 / 0.2e1 + t896;
t1186 = t86 * qJD(1);
t1185 = t119 * qJD(5) + t118 * qJD(6);
t1184 = t147 * qJD(5) + t146 * qJD(6);
t1182 = t1068 * t356;
t1177 = t1068 * t416;
t1172 = t607 * qJD(4);
t606 = t859 * t817;
t710 = t733 * t1069;
t1171 = -t606 * qJD(4) - t710;
t1169 = t1068 * t609;
t1168 = t1068 * t608;
t1167 = t1068 * t733;
t808 = t817 ^ 2;
t786 = t808 - t806;
t1055 = t725 * t1208;
t107 = t1055 - t1191;
t1165 = qJD(1) * t107;
t1018 = t1240 / 0.2e1;
t944 = -t491 / 0.2e1 - t1221 / 0.2e1;
t860 = t1023 + t944;
t120 = t1018 + t860;
t1164 = qJD(1) * t120;
t861 = t1024 + t944;
t121 = t1018 + t861;
t1163 = qJD(1) * t121;
t862 = t1018 + t944;
t122 = t1023 + t862;
t1162 = qJD(1) * t122;
t123 = t1024 + t862;
t1161 = qJD(1) * t123;
t1059 = t310 * t514;
t136 = -t1059 - t1276;
t1156 = qJD(1) * t136;
t1058 = t1374 * t514;
t139 = -t1058 - t1275;
t1155 = qJD(1) * t139;
t162 = t301 * t725 - t425 * t652;
t1154 = qJD(1) * t162;
t163 = -t302 * t725 + t425 * t654;
t1153 = qJD(1) * t163;
t1057 = t468 * t514;
t210 = -t1057 - t1263;
t1152 = qJD(1) * t210;
t1056 = t470 * t514;
t213 = -t1056 - t1262;
t1151 = qJD(1) * t213;
t217 = t453 * t727 - t454 * t725;
t1150 = qJD(1) * t217;
t224 = -t1367 * t812 + t468 * t654;
t1149 = qJD(1) * t224;
t225 = -t1367 * t816 + t470 * t654;
t1148 = qJD(1) * t225;
t357 = t1248 - t1249;
t1146 = qJD(1) * t357;
t358 = -t1248 - t1249;
t1145 = qJD(1) * t358;
t359 = -t1259 - t1393;
t1144 = qJD(1) * t359;
t383 = -t1259 + t1393;
t1143 = qJD(1) * t383;
t1142 = qJD(1) * t470;
t1139 = qJD(1) * t725;
t1138 = qJD(1) * t817;
t1137 = qJD(2) * t725;
t1135 = qJD(3) * t817;
t1134 = qJD(4) * t652;
t1133 = qJD(4) * t654;
t1132 = qJD(4) * t725;
t1129 = qJD(4) * t812;
t1128 = qJD(4) * t813;
t1127 = qJD(4) * t816;
t1126 = qJD(4) * t817;
t1125 = qJD(5) * t652;
t1124 = qJD(5) * t812;
t1123 = qJD(5) * t816;
t1122 = qJD(5) * t817;
t1121 = qJD(6) * t803;
t106 = -(-t454 + t477) * t727 + (t453 - t478) * t725;
t1120 = t106 * qJD(1);
t137 = t1059 - t1276;
t1119 = t137 * qJD(1);
t138 = -t1058 + t1275;
t1118 = t138 * qJD(1);
t1021 = -t1264 / 0.2e1;
t560 = t398 * t1211;
t145 = t560 + (-t1268 / 0.2e1 + t1358) * t816 + (t1021 + t512 / 0.2e1) * t812;
t1117 = t145 * qJD(1);
t151 = -t310 * t654 + t384 * t652;
t1116 = t151 * qJD(1);
t152 = t1374 * t654 + t385 * t652;
t1115 = t152 * qJD(1);
t157 = pkin(2) * t1043 * t1392 - t453 * t477 + t454 * t478;
t1114 = t157 * qJD(1);
t177 = -t468 * t513 - t470 * t512;
t1113 = t177 * qJD(1);
t1007 = -t1207 / 0.2e1;
t668 = t725 * t1007;
t1011 = t1210 / 0.2e1;
t998 = -t1187 / 0.2e1;
t864 = (t998 - t1258 / 0.2e1) * t812;
t825 = t652 * t1011 + t864 + t1209 / 0.2e1;
t185 = t668 + t825;
t1112 = t185 * qJD(1);
t933 = t1195 + t1266;
t198 = t933 * t652;
t1111 = t198 * qJD(1);
t211 = t1057 - t1263;
t1110 = t211 * qJD(1);
t212 = -t1056 + t1262;
t1109 = t212 * qJD(1);
t1000 = t1193 / 0.2e1;
t852 = t1000 * t470 + t1020 * t807;
t219 = -t1261 / 0.2e1 + t852;
t1108 = t219 * qJD(1);
t336 = t344 * t817;
t554 = t733 * t514;
t228 = t554 - t336;
t1107 = t228 * qJD(1);
t1022 = t1268 / 0.2e1;
t1013 = -t1211 / 0.2e1;
t960 = t652 * t1013;
t870 = t1022 + t960;
t232 = t870 + t1385;
t1106 = t232 * qJD(1);
t1012 = t1211 / 0.2e1;
t869 = t1012 * t652 + t1022;
t233 = t869 + t1386;
t1105 = t233 * qJD(1);
t1001 = -t398 / 0.2e1;
t959 = t813 * t1001;
t907 = t712 / 0.2e1 + t959;
t1019 = -t1250 / 0.2e1;
t945 = t1359 + t1019;
t235 = t817 * t945 + t907;
t1104 = t235 * qJD(1);
t237 = (t470 / 0.2e1 + t1019) * t817 + t907;
t1103 = t237 * qJD(1);
t684 = t725 * t1231;
t273 = t684 - t1188;
t1102 = t273 * qJD(1);
t304 = (t1257 / 0.2e1 + t945) * t813;
t1101 = t304 * qJD(1);
t308 = t1003 + t447 / 0.2e1;
t1100 = t308 * qJD(1);
t930 = t1187 + t1258;
t340 = t930 * t725;
t1099 = t340 * qJD(1);
t492 = t513 * t817;
t685 = t725 * t1194;
t376 = t685 - t492;
t1096 = t376 * qJD(1);
t1095 = t394 * qJD(1);
t1094 = t398 * qJD(1);
t868 = t809 * t1352 + t1303 * t727 / 0.2e1;
t458 = (-t1229 / 0.2e1 + t868) * pkin(2);
t1089 = t458 * qJD(1);
t1087 = t514 * qJD(1);
t1086 = t517 * qJD(1);
t1085 = t1246 * qJD(1);
t553 = t727 ^ 2 + t724;
t1084 = t553 * qJD(1);
t856 = -pkin(8) * t1228 - t964;
t665 = pkin(1) * t1392 - t1304 * t856;
t1077 = t665 * qJD(1);
t744 = pkin(8) * t1229 - t791;
t666 = pkin(1) * t1232 - t1304 * t744;
t1076 = t666 * qJD(1);
t717 = (t986 / 0.2e1 + t1230 / 0.2e1) * t810;
t1075 = t717 * qJD(1);
t753 = (-t814 ^ 2 + t818 ^ 2) * t804;
t1072 = t753 * qJD(1);
t1071 = t813 * qJD(2);
t1067 = pkin(5) * t1207;
t1064 = t1324 / 0.2e1;
t1063 = t730 * t1366;
t1062 = t1323 / 0.2e1;
t1061 = -t1322 / 0.2e1;
t1060 = pkin(5) * t1325;
t1054 = t814 * t1232;
t1051 = t816 * t1187;
t1040 = t652 * t1139;
t476 = t813 * t1040;
t1049 = t725 * t796 - t1383 + t476;
t1045 = t725 * t797 - t1383 - t476;
t1041 = t470 * t1141;
t1039 = t816 * t1071;
t1038 = t812 * t1127;
t1037 = t754 * t1128;
t1036 = t813 * t1127;
t1035 = t812 * t1122;
t1034 = t816 * t1122;
t1033 = t725 * t1138;
t1032 = t727 * t1138;
t789 = t812 * t1128;
t1031 = t812 * t1123;
t1030 = t813 * t1126;
t790 = t813 * t1069;
t1029 = t239 * t1332;
t442 = t470 * t1330;
t1017 = t794 * t1325;
t1016 = -t1226 / 0.2e1;
t1010 = -t1209 / 0.2e1;
t1009 = -t514 / 0.2e1;
t1008 = t514 / 0.2e1;
t1006 = t1207 / 0.2e1;
t1005 = -t1205 / 0.2e1;
t1004 = -t1203 / 0.2e1;
t999 = t1190 / 0.2e1;
t995 = -t270 / 0.2e1 - t345 / 0.2e1;
t994 = t286 / 0.2e1 - t414 / 0.2e1;
t990 = -t467 / 0.2e1 - t490 / 0.2e1;
t985 = pkin(5) * t1068;
t984 = t1304 * qJD(1);
t976 = t790 + t1093;
t974 = t1068 * t928;
t973 = t1068 * t817;
t972 = pkin(5) * t1006;
t971 = -qJD(4) - t1139;
t970 = qJD(5) + t1141;
t969 = -qJD(6) - t1141;
t968 = -qJD(5) + t1069;
t865 = t881 * t817;
t611 = t1349 - t865;
t967 = t611 * qJD(4) - t1167;
t610 = t1409 / 0.2e1 - t865;
t966 = t610 * qJD(4) - t1167 + t710;
t963 = t816 * t789;
t962 = qJD(1) * t1054;
t961 = t812 * t1039;
t669 = t725 * t1006;
t958 = t1316 * t813 + t790;
t957 = t1061 + t93 / 0.2e1;
t956 = t1321 / 0.2e1 + t150 / 0.2e1;
t955 = t1320 / 0.2e1 - t302 / 0.2e1;
t954 = t1318 / 0.2e1 + t605 / 0.2e1;
t953 = t1060 + t580 / 0.2e1;
t952 = t810 * t984;
t951 = qJD(2) * t810 * t1304;
t947 = 0.2e1 * t961;
t946 = t346 / 0.2e1 - t1214 / 0.2e1;
t941 = t1009 * t812 + t442;
t370 = t811 * t548 + t1200;
t931 = t1198 + t1218;
t159 = -t370 * t813 + t741 * t733 - t740 * t734 + t817 * t931;
t819 = t1326 * t934 + t1343 * t1374 + t1344 * t385 + t1346 * t178 + t1348 * t214 + t1353 * t370 + t1354 * t931;
t897 = t1335 * t344 + t1340 * t194;
t2 = (t679 * t1351 + t50 / 0.2e1) * t813 + t819 + t897;
t938 = -t2 * qJD(1) + t159 * qJD(2);
t372 = -t1200 - t1220;
t613 = t740 * t733;
t229 = -t1067 * t730 + t372 * t817 - t613;
t886 = t1016 + t1206 / 0.2e1;
t837 = -t1287 / 0.2e1 + t886;
t841 = t1325 * t55 + t1344 * t1374 + t1355 * t372;
t6 = (t470 * t1350 + (t1328 * t310 + t1352 * t815) * t813) * pkin(5) + t837 + t841;
t937 = qJD(1) * t6 + qJD(2) * t229;
t373 = t1201 - t1219;
t230 = t1067 * t733 + t373 * t817 - t1242;
t887 = -t1227 / 0.2e1 + t1005;
t838 = t1288 / 0.2e1 + t887;
t840 = t1326 * t56 + t1354 * t373 - t1404;
t5 = (t470 * t1348 + (t1328 * t1374 + t1351 * t811) * t813) * pkin(5) + t838 + t840;
t936 = qJD(1) * t5 - qJD(2) * t230;
t932 = t1199 - t1217;
t929 = -t725 * t795 + t727 * t794;
t927 = t984 + qJD(2);
t842 = t1325 * t50 + t1355 * t370 + t1361 * t740;
t13 = t837 - t842;
t289 = -t370 * t817 - t613;
t926 = qJD(1) * t13 + qJD(2) * t289;
t369 = -t530 + t1219;
t843 = t1326 * t49 + t1354 * t369 + t1404;
t14 = t838 - t843;
t288 = -t369 * t817 - t1242;
t925 = qJD(1) * t14 - qJD(2) * t288;
t17 = (t1364 + t957) * t811;
t199 = (t1356 + t953) * t811;
t924 = t17 * qJD(1) + t199 * qJD(2);
t19 = t815 * t957 + t1365;
t201 = t815 * t953 + t1357;
t923 = t19 * qJD(1) + t201 * qJD(2);
t863 = t1166 * t1355 + t1353 * t644;
t904 = -pkin(4) * t512 / 0.2e1 - t1282 / 0.2e1;
t23 = (t1360 - t1235 / 0.2e1 + t1389) * t817 + (t140 / 0.2e1 + (t1354 * t794 + t955) * t812) * t813 + t863 + t904;
t374 = t644 * t813 + (-t764 + t762) * t817;
t922 = -t23 * qJD(1) - t374 * qJD(2);
t888 = t470 * t1337 - t1284 / 0.2e1;
t903 = pkin(4) * t1358 + t1283 / 0.2e1;
t24 = t652 * t1338 + t1260 / 0.2e1 + (t888 + t994) * t817 + (t141 / 0.2e1 + t955 * t816) * t813 + t903;
t375 = t760 * t817 + (-t645 + t1050) * t813;
t921 = -t24 * qJD(1) + t375 * qJD(2);
t95 = -t1190 / 0.2e1 - t1391 + t890;
t920 = t95 * qJD(1);
t382 = -t1409 * t733 + t730 * t734;
t824 = t1346 * t310 - t1348 * t384 + t1349 * t1374 + t1350 * t385;
t895 = t1340 * t343 + t1341 * t344;
t52 = t824 + t895;
t919 = t52 * qJD(1) + t382 * qJD(2);
t899 = t1326 * t141 + t1354 * t645;
t41 = t813 * t888 + t899 + t946;
t521 = -t1194 * t794 - t645 * t817;
t918 = qJD(1) * t41 + qJD(2) * t521;
t900 = t1325 * t140 + t1355 * t644;
t42 = (t1235 / 0.2e1 + t1029) * t813 + t900 + t995;
t520 = -t1231 * t794 - t644 * t817;
t917 = qJD(1) * t42 - qJD(2) * t520;
t534 = -t1409 * t817 + t1208;
t96 = t890 + t999 + t1391;
t916 = t96 * qJD(1) + t534 * qJD(2);
t535 = -t733 * t813 - t734 * t817;
t97 = t833 - t889;
t915 = qJD(1) * t97 + qJD(2) * t535;
t914 = t968 * t813;
t913 = pkin(5) * t1008 - t105 / 0.2e1;
t826 = t812 * t998 + t1010 + t864;
t184 = t669 + t826;
t758 = t786 * t812;
t912 = qJD(1) * t184 + qJD(2) * t758;
t187 = -t1051 + (-t1257 / 0.2e1 + t945) * t813;
t759 = t808 * t816 - t1194;
t911 = -qJD(1) * t187 - qJD(2) * t759;
t215 = t325 * qJD(1) - t606 * qJD(2);
t216 = -t326 * qJD(1) + t608 * qJD(2);
t363 = -t654 ^ 2 + t1367;
t910 = qJD(1) * t363 - qJD(2) * t930;
t909 = -qJD(1) * t930 + qJD(2) * t786;
t908 = -t1407 - t1408;
t906 = t1317 / 0.2e1 - t1319 / 0.2e1;
t504 = -t1240 / 0.2e1;
t905 = t504 + t944;
t558 = t640 * qJD(1) + t1071 / 0.2e1;
t902 = -t1008 * t928 + t1374 * t1330 - t1273 / 0.2e1;
t901 = t812 * t996 - t712 / 0.2e1 + t959;
t898 = t1335 * t343 + t1341 * t194;
t894 = t1270 / 0.2e1 + t795 * t1353;
t892 = t1354 * t981 + t1405;
t885 = -t1225 / 0.2e1 + t1004;
t879 = -t1195 / 0.2e1 - t1266 / 0.2e1;
t829 = t1269 / 0.2e1 + t795 * t1355 + t794 * t1008;
t153 = t829 - t990;
t878 = -qJD(1) * t153 - t1069 * t795;
t155 = t466 / 0.2e1 + (t725 * t1337 - t495 / 0.2e1) * t817 + t894;
t877 = -qJD(1) * t155 - t1071 * t795;
t875 = -qJD(4) * t717 + t1139 * t727;
t873 = pkin(4) * t1359 + pkin(10) * t1001;
t872 = t906 * t812;
t871 = t906 * t816;
t867 = qJD(2) * t60 + qJD(4) * t62 + t1416;
t866 = qJD(2) * t76 + qJD(4) * t78 + t1416;
t820 = t1325 * t935 + t1343 * t310 - t1344 * t384 + t1349 * t178 + t1350 * t214 + t1353 * t369 + t1355 * t932;
t1 = (t981 * t1351 + t49 / 0.2e1) * t813 + t820 + t898;
t158 = -t1409 * t740 + t369 * t813 - t741 * t730 + t817 * t932;
t857 = -t1 * qJD(1) - t158 * qJD(2);
t173 = (t733 * t1333 + (-t1327 * t928 + t1334) * t813) * pkin(5) + t207;
t836 = t1286 / 0.2e1 + t885;
t839 = t1355 * t981 - t1405;
t27 = (t654 * t1334 + t1374 * t1333 - t1267 / 0.2e1) * pkin(5) + t836 + t839;
t601 = t1323 * t928 - t754 * t803;
t855 = -t27 * qJD(1) - t173 * qJD(2) + t601 * qJD(4);
t190 = (-t1212 + t1265) * t813;
t205 = t468 ^ 2 - t470 ^ 2;
t853 = qJD(1) * t205 - qJD(2) * t190 - qJD(4) * t933;
t655 = t1338 - t872;
t834 = pkin(4) * t468 / 0.2e1 + t1284 / 0.2e1 + pkin(10) * t394 / 0.2e1;
t71 = t834 - t994;
t851 = pkin(4) * t1127 - qJD(1) * t71 - qJD(2) * t655;
t656 = -t762 / 0.2e1 + t871;
t73 = -t415 / 0.2e1 - t1389 + t873;
t850 = pkin(4) * t1129 - qJD(1) * t73 - qJD(2) * t656;
t36 = t836 - t892;
t848 = qJD(1) * t36 + qJD(2) * t207 + t1130 * t754;
t847 = -qJD(2) * t118 - qJD(4) * t146 + t1406;
t846 = qJD(2) * t119 + qJD(4) * t147 - t1406;
t287 = t879 * t813;
t307 = -t1212 / 0.2e1 + t1265 / 0.2e1;
t845 = -qJD(2) * t287 - qJD(4) * t307 + t1142 * t468;
t746 = (t805 / 0.2e1 - t807 / 0.2e1) * t813;
t844 = qJD(1) * t307 - qJD(2) * t746 + t1038;
t757 = t785 * t806;
t832 = qJD(1) * t190 + qJD(2) * t757 + 0.2e1 * t963;
t831 = qJD(1) * t933 - t1384 + t947;
t830 = qJD(2) * t1194 * t812 - qJD(1) * t287 + qJD(4) * t746;
t828 = t1009 * t754 + t1330 * t310 + t999;
t798 = t1128 / 0.2e1;
t765 = -0.2e1 * t813 * t1031;
t742 = t746 * qJD(5);
t739 = t928 * t1128;
t700 = t717 * qJD(2);
t697 = t727 * t1069;
t642 = qJD(1) * t1008 + t798;
t641 = qJD(1) * t1009 + t798;
t550 = t764 + t762 / 0.2e1 + t871;
t549 = t1052 - t760 / 0.2e1 - t872;
t509 = t514 * qJD(4);
t472 = -t1087 - t1128;
t457 = t1066 / 0.2e1 + t868 * pkin(2);
t450 = qJD(2) * t1009 + t640 * qJD(4);
t347 = t930 * qJD(4);
t329 = (-t1071 * t725 + t1133) * t652;
t328 = (t1339 + t881) * t652;
t320 = t328 * qJD(4);
t305 = t1007 * t654 + t941;
t303 = t307 * qJD(5);
t278 = t287 * qJD(5);
t238 = t1264 / 0.2e1 + t901;
t236 = t1021 + t901;
t234 = t869 + t1385;
t231 = t870 + t1386;
t218 = t1261 / 0.2e1 + t852;
t209 = t882 + t1399;
t208 = t883 + t1398;
t202 = t815 * t1060 + t1219 + t1357 - t1201 / 0.2e1;
t200 = -t1200 - t1220 / 0.2e1 + (t1060 + t1356) * t811;
t196 = 0.2e1 * t1003 + t1223;
t193 = t933 * qJD(5);
t192 = -t974 - t215;
t191 = -t1068 * t754 - t216;
t189 = t190 * qJD(5);
t188 = t1006 * t654 + t1051 + t941;
t186 = t669 + t825;
t183 = t668 + t826;
t176 = -pkin(5) * t928 * t1007 + t733 * t1062 - t954 * t811 + t1002 + t1398;
t175 = -t812 * t1063 + t754 * t972 + t954 * t815 + t1014 + t1399;
t172 = t1285 / 0.2e1;
t171 = -t1286 / 0.2e1;
t169 = t1287 / 0.2e1;
t167 = -t1288 / 0.2e1;
t156 = t794 * t997 - t466 / 0.2e1 + t1189 / 0.2e1 + t894;
t154 = t829 + t990;
t144 = t1327 * t513 + t1333 * t512 + t817 * t879 + t560;
t135 = t1023 + t905;
t134 = t1024 + t905;
t133 = t504 + t860;
t132 = t504 + t861;
t102 = -t889 + t902;
t101 = t889 + t902;
t100 = -t828 - t890;
t99 = t828 - t890;
t85 = t1274 / 0.2e1 + t896;
t74 = t1029 + t1213 / 0.2e1 + t1360 + t873;
t72 = t834 + t994;
t51 = t824 - t895;
t44 = t1006 * t239 + t442 * t794 - t899 + t946;
t43 = t1010 * t794 + t1013 * t239 - t900 + t995;
t38 = t172 + t884 + t891;
t37 = t171 + t885 + t892;
t30 = t1062 * t1374 - t1267 * t1366 - t811 * t956 + t1004 + t171 - t839;
t29 = t1062 * t310 + t1064 * t754 + t815 * t956 + t1015 + t172 - t827;
t26 = t948 * t1355 - t1260 / 0.2e1 + t1183 * t1326 + t141 * t1331 + t470 * t1017 + t794 * t959 + t302 * t1006 + t239 * t1000 + pkin(10) * t669 + t903;
t25 = pkin(10) * t1008 * t812 + t1011 * t239 + t1012 * t302 + t1017 * t468 + t1326 * t983 + t1331 * t140 + t794 * t960 - t863 + t904;
t20 = t815 * t1061 + t1308 + t1365 - t1307 / 0.2e1;
t18 = -t1306 - t1309 / 0.2e1 + (t1061 + t1364) * t811;
t16 = t169 + t842 + t886;
t15 = t167 + t843 + t887;
t8 = t1064 * t733 + t1374 * t972 + t811 * t913 + t1005 + t167 - t840;
t7 = -t1063 * t470 + t310 * t972 - t815 * t913 + t1016 + t169 - t841;
t4 = t1008 * t679 + t1331 * t50 - t819 + t897;
t3 = t1008 * t981 + t1331 * t49 - t820 + t898;
t45 = [0, 0, 0, qJD(2) * t1054, t753 * qJD(2), t818 * t951, -t814 * t951, 0, -t665 * qJD(2), -t666 * qJD(2), qJD(2) * t106 + qJD(3) * t553, qJD(2) * t157 + qJD(3) * t217 (-t1069 * t725 - t1134) * t654, qJD(2) * t340 + qJD(4) * t363, qJD(2) * t359 - t1132 * t652, -qJD(2) * t358 - t1132 * t654, -t727 * t1137, qJD(2) * t69 - qJD(3) * t357 + qJD(4) * t163, qJD(2) * t70 + qJD(3) * t383 + qJD(4) * t162 (qJD(2) * t513 - qJD(5) * t468 - t1127 * t652) * t470, qJD(2) * t177 + qJD(4) * t198 + qJD(5) * t205, qJD(2) * t212 + qJD(4) * t225 - t1125 * t468, qJD(2) * t211 - qJD(4) * t224 - t1125 * t470, t329, qJD(2) * t33 + qJD(3) * t210 + qJD(4) * t39 + qJD(5) * t64, qJD(2) * t34 + qJD(3) * t213 + qJD(4) * t40 + qJD(5) * t63 (qJD(2) * t344 + qJD(4) * t385 + t908) * t1374, qJD(2) * t68 + qJD(4) * t79 + t1068 * t1397, t138 * qJD(2) + t152 * qJD(4) + t652 * t908, -t1068 * t1374 * t652 + t137 * qJD(2) + t151 * qJD(4), t329, qJD(2) * t9 + qJD(3) * t136 + qJD(4) * t11 + qJD(5) * t21 + qJD(6) * t32, qJD(2) * t10 + qJD(3) * t139 + qJD(4) * t12 + qJD(5) * t22 + qJD(6) * t31; 0, 0, 0, t962, t1072, t927 * t1228, -t927 * t1229, 0, qJD(2) * t856 - t1077, qJD(2) * t744 - t1076, t1120 + (t1303 * t725 + t727 * t809) * t1312, t1114 + (-t1303 * t477 + t478 * t809) * t1312 + t457 * qJD(3), t1383 + (-t1071 - t1140) * t517, -t1137 * t786 + t1099 - t347, -t1071 * t727 + t1144, -t697 - t1145, -t875, t1252 + (-t477 * t817 + t813 * t929) * qJD(2) + t156 * qJD(4), t1251 + (t477 * t813 + t817 * t929) * qJD(2) + t154 * qJD(4), t218 * qJD(4) + t278 + (t1039 + t1142) * t513, t1113 + t144 * qJD(4) - t189 + (-t512 * t816 - t1261) * t1071, t1109 + (-t685 - t492) * qJD(2) + t188 * qJD(4) + t231 * qJD(5), t1110 + (t684 + t1188) * qJD(2) + t183 * qJD(4) + t238 * qJD(5), t725 * t790 + t1045, -t160 * t1069 + t1278 + t25 * qJD(4) + t44 * qJD(5) + (t512 * t794 + t644 * t725 + t1283) * t1071, t161 * t1069 + t1277 + t26 * qJD(4) + t43 * qJD(5) + (t513 * t794 + t645 * t725 + t1282) * t1071, t85 * qJD(4) + (t1136 + t1147) * t344 + t1185, t1253 + (-t343 * t733 - t344 * t730) * qJD(2) + t51 * qJD(4) + t1314, t1118 + (-t554 - t336) * qJD(2) + t101 * qJD(4) + t1068 * t1419, t1119 + (t1055 + t1191) * qJD(2) + t100 * qJD(4) + t133 * qJD(5) + t135 * qJD(6) (t1069 + t1316) * t514 + t1045, t1305 + (t194 * t730 + t343 * t740 + t369 * t514 - t57 * t817) * qJD(2) + t3 * qJD(4) + t7 * qJD(5) + t16 * qJD(6), t1291 + (t194 * t733 + t344 * t740 + t370 * t514 + t58 * t817) * qJD(2) + t4 * qJD(4) + t8 * qJD(5) + t15 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1084, qJD(2) * t457 + t1150, 0, 0, 0, 0, 0, -t1146, t1143, 0, 0, 0, 0, 0, qJD(4) * t186 + qJD(5) * t236 + t1152, qJD(4) * t305 + qJD(5) * t234 + t1151, 0, 0, 0, 0, 0, qJD(4) * t99 + qJD(5) * t132 + qJD(6) * t134 + t1156, qJD(4) * t102 + t1068 * t1420 + t1155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t876, t910, t971 * t652, t971 * t654, t700, qJD(2) * t156 - qJD(4) * t302 + t1153, qJD(2) * t154 + qJD(4) * t301 + t1154, t218 * qJD(2) + t303 + (-t1129 - t1142) * t398, t144 * qJD(2) - t1134 * t785 + t1111 - t193, qJD(2) * t188 + t1129 * t654 + t1148, qJD(2) * t183 + t1127 * t654 - t1149, t1369, t1272 + t25 * qJD(2) + t186 * qJD(3) + (-t302 * t816 + t812 * t950) * qJD(4) + t74 * qJD(5), t1271 + t26 * qJD(2) + t305 * qJD(3) + (t302 * t812 + t816 * t950) * qJD(4) + t72 * qJD(5), t85 * qJD(2) + (t1131 + t1147) * t385 + t1184, t1236 + t51 * qJD(2) + (t384 * t928 - t385 * t754) * qJD(4) + t1313, t101 * qJD(2) + t1068 * t327 + t1131 * t654 + t1115, t100 * qJD(2) + t1068 * t328 - t1133 * t754 + t1116, -t1370, t1290 + t3 * qJD(2) + t99 * qJD(3) + (t214 * t754 - t384 * t803 - t654 * t981) * qJD(4) + t29 * qJD(5) + t38 * qJD(6), t1289 + t4 * qJD(2) + t102 * qJD(3) + (t214 * t928 + t385 * t803 - t654 * t679) * qJD(4) + t30 * qJD(5) + t37 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t845, t853, t231 * qJD(2) - t468 * t970, t238 * qJD(2) - t470 * t970, t450, qJD(2) * t44 + qJD(3) * t236 + qJD(4) * t74 - qJD(5) * t141 + t1295, qJD(2) * t43 + qJD(3) * t234 + qJD(4) * t72 + qJD(5) * t140 + t1296, t846, t867, -t310 * t970 - t1407 + t1424, t133 * qJD(2) + t196 * qJD(6) - t1374 * t970 + t320, t450, qJD(2) * t7 + qJD(3) * t132 + qJD(4) * t29 + qJD(5) * t55 + qJD(6) * t18 + t1302, qJD(2) * t8 + qJD(4) * t30 - qJD(5) * t56 + qJD(6) * t20 + t1301 + t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t847, t866, t310 * t969 - t1408 + t1424, t135 * qJD(2) + t196 * qJD(5) + t1374 * t969 + t320, t450, qJD(2) * t16 + qJD(3) * t134 + qJD(4) * t38 + qJD(5) * t18 - qJD(6) * t50 + t1299, qJD(2) * t15 + qJD(4) * t37 + qJD(5) * t20 + qJD(6) * t49 + t1300 + t1426; 0, 0, 0, -t962, -t1072, -t818 * t952, t814 * t952, 0, t1077, t1076, -t1120, qJD(3) * t458 - t1114, t1033 * t654 + t1383, -t347 - t1099, qJD(4) * t517 - t1144, -t509 + t1145, t875, qJD(4) * t155 + t1135 * t727 - t1252, -qJD(3) * t1246 + qJD(4) * t153 - t1251, qJD(4) * t219 - t1142 * t513 + t278, qJD(4) * t145 - t1113 - t189, -qJD(4) * t187 + qJD(5) * t232 - t1109, qJD(4) * t184 + qJD(5) * t237 - t1110, t1049, -qJD(3) * t273 - qJD(4) * t23 - qJD(5) * t41 - t1278, -qJD(3) * t376 - qJD(4) * t24 - qJD(5) * t42 - t1277, qJD(4) * t86 - t1147 * t344 + t1185, qJD(4) * t52 - t1253 + t1314, -qJD(4) * t97 - t1068 * t1421 - t1118, -qJD(4) * t96 - qJD(5) * t121 - qJD(6) * t123 - t1119, qJD(6) * t1008 + t1049, -qJD(3) * t107 - qJD(4) * t1 - qJD(5) * t6 - qJD(6) * t13 - t1305, -qJD(3) * t228 - qJD(4) * t2 - qJD(5) * t5 - qJD(6) * t14 - t1291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1030, t786 * qJD(4), 0, 0, 0, t795 * t1128, t795 * t1126, t1030 * t807 - t1031 * t806, -qJD(5) * t757 - 0.2e1 * t817 * t963, -qJD(4) * t759 + t1035 * t813, qJD(4) * t758 + t1034 * t813, -t1030, -qJD(4) * t374 - qJD(5) * t521, qJD(4) * t375 + qJD(5) * t520 (-qJD(4) * t734 - t1372) * t733, qJD(4) * t382 + t1068 * t471, -t535 * qJD(4) + t730 * t973, -t534 * qJD(4) + t733 * t973, -t1030, -qJD(4) * t158 - qJD(5) * t229 - qJD(6) * t289, qJD(4) * t159 + qJD(5) * t230 + qJD(6) * t288; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1089, 0, 0, 0, 0, 0, t1032, -t1085, 0, 0, 0, 0, 0, -t1102, -t1096, 0, 0, 0, 0, 0, -t1165, -t1107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t976, t909, t1086 + t1126, t472, -t1075, -t1126 * t794 - t877, t1128 * t794 - t878, t1108 - t742 + (t1071 * t807 + t1038) * t817, t1117 + t765 + (-0.2e1 * t961 + t1384) * t817, t789 + t911, t912 + t1036, -t790 + t1373 (t812 * t949 - t1050) * qJD(4) + t550 * qJD(5) + t922 (t816 * t949 + t1053) * qJD(4) + t549 * qJD(5) + t921, t1186 - (t1131 + t1136) * t734 + t1177 (-t1409 * t928 + t734 * t754) * qJD(4) + t919 + t1182, t739 - t915 - t1169, t1068 * t610 - t1037 - t916, -t958 + t1373 (t1409 * t803 + t741 * t754 - t813 * t981) * qJD(4) + t175 * qJD(5) + t209 * qJD(6) + t857 (-t679 * t813 - t734 * t803 + t741 * t928) * qJD(4) + t176 * qJD(5) + t208 * qJD(6) + t938; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t830, -t832, t812 * t914 + t1106, t816 * t914 + t1103, t642, qJD(4) * t550 - qJD(5) * t645 - t918, qJD(4) * t549 + qJD(5) * t644 - t917, t1380, t1412, t1432, t966 - t1163, t642, qJD(4) * t175 + qJD(5) * t372 + qJD(6) * t200 - t937, qJD(4) * t176 - qJD(5) * t373 + qJD(6) * t202 - t936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1379, t1413, t1432, t966 - t1161, t642, qJD(4) * t209 + qJD(5) * t200 - qJD(6) * t370 - t926, qJD(4) * t208 + qJD(5) * t202 + qJD(6) * t369 - t925; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1084, -qJD(2) * t458 - t1150, 0, 0, 0, 0, 0, -t509 - t697 + t1146, qJD(2) * t1246 - t1126 * t725 - t1143, 0, 0, 0, 0, 0, qJD(2) * t273 + qJD(4) * t185 + qJD(5) * t235 - t1152, qJD(2) * t376 - qJD(4) * t304 + qJD(5) * t233 - t1151, 0, 0, 0, 0, 0, qJD(2) * t107 - qJD(4) * t95 - qJD(5) * t120 - qJD(6) * t122 - t1156, qJD(2) * t228 - qJD(4) * t98 - t1068 * t1422 - t1155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1089, 0, 0, 0, 0, 0, -t1032, t1085, 0, 0, 0, 0, 0, t1102, t1096, 0, 0, 0, 0, 0, t1165, t1107; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t472, t971 * t817, 0, 0, 0, 0, 0, -t1035 - t1036 + t1112, -t1034 + t789 - t1101, 0, 0, 0, 0, 0, t1068 * t611 + t1037 - t920, -t1168 + t739 - t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1070 * t816 - t1126 * t812 + t1104, t1070 * t812 - t1126 * t816 + t1105, 0, 0, 0, 0, 0, t967 - t1164, t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t967 - t1162, t1431; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t876, -t910, -qJD(2) * t517 + t1040, qJD(2) * t514 + t1139 * t654, t700, -qJD(2) * t155 + qJD(3) * t514 - t1153, -qJD(2) * t153 + t1135 * t725 - t1154, -qJD(2) * t219 + t1041 * t816 + t303, -qJD(2) * t145 - t1111 - t193, qJD(2) * t187 + qJD(5) * t398 - t1148, -qJD(2) * t184 - qJD(5) * t394 + t1149, -t1369, qJD(2) * t23 - qJD(3) * t185 + qJD(5) * t73 - t1272, qJD(2) * t24 + qJD(3) * t304 + qJD(5) * t71 - t1271, -qJD(2) * t86 - t1147 * t385 + t1184, -qJD(2) * t52 - t1236 + t1313, qJD(2) * t97 + t1068 * t326 - t1115, qJD(2) * t96 - t1068 * t325 - t1116, t1370, qJD(2) * t1 + qJD(3) * t95 - qJD(5) * t28 - qJD(6) * t35 - t1290, qJD(2) * t2 + qJD(3) * t98 - qJD(5) * t27 - qJD(6) * t36 - t1289; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t976, -t909, -t1086, t1087, t1075, t877, t878, -t790 * t807 - t1108 - t742, t817 * t947 - t1117 + t765, -t911 - t1034, -t912 + t1035, t790 + t1376, qJD(5) * t656 - t922, qJD(5) * t655 - t921, t1136 * t734 + t1177 - t1186, -t919 + t1182, t915 - t1168, t1068 * t606 + t916, t958 + t1376, -qJD(5) * t174 - qJD(6) * t206 - t857, -qJD(5) * t173 - qJD(6) * t207 - t938; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1087, t1033, 0, 0, 0, 0, 0, -t1112, t1101, 0, 0, 0, 0, 0, -t1068 * t607 + t920, -t1169 + t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1031, t785 * qJD(5), 0, 0, 0, -pkin(4) * t1124, -pkin(4) * t1123, -t754 * t974, t1068 * t555, 0, 0, 0, qJD(5) * t600 + t1121 * t928, qJD(5) * t601 - t1121 * t754; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t844, -t831, -t816 * t968 + t1094, t812 * t968 - t1095, -t558, -pkin(10) * t1123 - t850, pkin(10) * t1124 - t851, t1378, t1414, t191, t192, -t558, -t1381 - t1394, t1368 + t855; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1377, t1415, t191, t192, -t558, -t1382 - t1394, t1368 - t848; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t845, -t853, -qJD(2) * t232 - qJD(4) * t398 + t1141 * t468, -qJD(2) * t237 + qJD(4) * t394 + t1041, t450, qJD(2) * t41 - qJD(3) * t235 - qJD(4) * t73 - t1295, qJD(2) * t42 - qJD(3) * t233 - qJD(4) * t71 - t1296, -t846, -t867, t1423, qJD(2) * t121 + qJD(6) * t308 + t1395, t450, qJD(2) * t6 + qJD(3) * t120 + qJD(4) * t28 + qJD(6) * t17 - t1302, qJD(2) * t5 + qJD(4) * t27 + qJD(6) * t19 - t1301 + t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t830, t832, -t1106 + (-t1071 * t812 + t1127) * t817, -t1103 + (-t1039 - t1129) * t817, t641, -qJD(4) * t656 + t918, -qJD(4) * t655 + t917, -t1380, -t1412, t1429, t1163 + t1171, t641, qJD(4) * t174 + qJD(6) * t199 + t937, qJD(4) * t173 + qJD(6) * t201 + t936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1104, -t1105, 0, 0, 0, 0, 0, t1164 + t1172, t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t844, t831, t1069 * t816 - t1094, -t1069 * t812 + t1095, t558, t850, t851, -t1378, -t1414, t216, t215, t558, t1381, t1080 - t855; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t811 * t1310, -t815 * t1310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1100, 0, -t811 * t985 + t924, -t815 * t985 + t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847, -t866, t1423, qJD(2) * t123 - qJD(5) * t308 + t1395, t450, qJD(2) * t13 + qJD(3) * t122 + qJD(4) * t35 - qJD(5) * t17 - t1299, qJD(2) * t14 + qJD(4) * t36 - qJD(5) * t19 - t1300 + t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1379, -t1413, t1429, t1161 + t1171, t641, qJD(4) * t206 - qJD(5) * t199 + t926, qJD(4) * t207 - qJD(5) * t201 + t925; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1162 + t1172, t1430; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1377, -t1415, t216, t215, t558, t1382, t1080 + t848; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1100, 0, t1311 * t811 - t924, t1311 * t815 - t923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t45;
