% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauc_reg [6x33]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRR5_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR5_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR5_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR5_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:46:48
% EndTime: 2019-03-09 13:47:09
% DurationCPUTime: 7.90s
% Computational Cost: add. (12311->529), mult. (36595->739), div. (0->0), fcn. (30460->12), ass. (0->269)
t243 = sin(pkin(12));
t249 = sin(qJ(2));
t244 = sin(pkin(6));
t335 = qJD(1) * t244;
t322 = t249 * t335;
t245 = cos(pkin(12));
t253 = cos(qJ(2));
t349 = t245 * t253;
t325 = t244 * t349;
t198 = qJD(1) * t325 - t243 * t322;
t195 = qJD(4) - t198;
t280 = t243 * t253 + t245 * t249;
t201 = t280 * t335;
t247 = sin(qJ(5));
t251 = cos(qJ(5));
t252 = cos(qJ(4));
t154 = t198 * t247 * t252 - t251 * t201;
t332 = qJD(4) * t252;
t400 = -t247 * t332 + t154;
t342 = t251 * t252;
t155 = t198 * t342 + t201 * t247;
t248 = sin(qJ(4));
t331 = qJD(5) * t247;
t262 = -t248 * t331 + t251 * t332 - t155;
t365 = cos(pkin(6));
t324 = pkin(1) * t365;
t298 = t253 * t324;
t233 = qJD(1) * t298;
t380 = pkin(8) + qJ(3);
t315 = t380 * t249;
t296 = t244 * t315;
t186 = -qJD(1) * t296 + t233;
t299 = t249 * t324;
t351 = t244 * t253;
t196 = t351 * t380 + t299;
t187 = t196 * qJD(1);
t350 = t245 * t187;
t134 = t186 * t243 + t350;
t401 = -t134 + t195 * (pkin(4) * t248 - pkin(10) * t252);
t308 = t365 * qJD(1);
t279 = t308 + qJD(2);
t259 = -t252 * t201 - t248 * t279;
t119 = -t251 * t195 - t247 * t259;
t261 = pkin(2) * t365 - t296;
t168 = qJD(2) * pkin(2) + qJD(1) * t261 + t233;
t114 = t243 * t168 + t350;
t103 = pkin(9) * t279 + t114;
t291 = (-pkin(2) * t253 - pkin(1)) * t244;
t275 = qJD(1) * t291;
t211 = qJD(3) + t275;
t130 = -pkin(3) * t198 - pkin(9) * t201 + t211;
t58 = -t248 * t103 + t130 * t252;
t46 = -pkin(4) * t195 - t58;
t36 = pkin(5) * t119 + t46;
t121 = t195 * t247 - t251 * t259;
t246 = sin(qJ(6));
t250 = cos(qJ(6));
t70 = t250 * t119 + t121 * t246;
t399 = t36 * t70;
t281 = t119 * t246 - t250 * t121;
t398 = t281 * t70;
t329 = qJD(6) * t246;
t344 = t248 * t251;
t347 = t247 * t248;
t383 = qJD(5) + qJD(6);
t369 = -t329 * t347 + (t344 * t383 - t400) * t250 + t262 * t246;
t330 = qJD(5) * t251;
t397 = t248 * t330 - t400;
t225 = t252 * t279;
t165 = t201 * t248 - t225;
t396 = t165 + t383;
t333 = qJD(4) * t248;
t354 = t198 * t248;
t395 = -t333 + t354;
t394 = t281 ^ 2 - t70 ^ 2;
t163 = qJD(5) + t165;
t59 = t252 * t103 + t248 * t130;
t47 = pkin(10) * t195 + t59;
t172 = t243 * t187;
t113 = t245 * t168 - t172;
t102 = -pkin(3) * t279 - t113;
t55 = t165 * pkin(4) + pkin(10) * t259 + t102;
t25 = -t247 * t47 + t251 * t55;
t20 = -pkin(11) * t121 + t25;
t15 = pkin(5) * t163 + t20;
t26 = t247 * t55 + t251 * t47;
t21 = -pkin(11) * t119 + t26;
t375 = t21 * t250;
t11 = t15 * t246 + t375;
t327 = qJD(1) * qJD(2);
t313 = t244 * t327;
t294 = t253 * t313;
t295 = t249 * t313;
t194 = -t243 * t295 + t245 * t294;
t118 = -qJD(4) * t259 + t248 * t194;
t117 = qJD(4) * t225 + t252 * t194 - t201 * t333;
t204 = t280 * t244;
t199 = qJD(2) * t204;
t193 = qJD(1) * t199;
t51 = t251 * t117 + t247 * t193 + t195 * t330 + t259 * t331;
t226 = pkin(2) * t295;
t131 = pkin(3) * t193 - pkin(9) * t194 + t226;
t284 = qJD(2) * t308;
t277 = pkin(1) * t284;
t227 = t253 * t277;
t260 = (-qJD(2) * t315 + qJD(3) * t253) * t244;
t159 = qJD(1) * t260 + t227;
t352 = t244 * t249;
t170 = -qJD(2) * t196 - qJD(3) * t352;
t255 = qJD(1) * t170;
t90 = t245 * t159 + t243 * t255;
t268 = -t103 * t333 + t130 * t332 + t248 * t131 + t252 * t90;
t27 = pkin(10) * t193 + t268;
t89 = t159 * t243 - t245 * t255;
t39 = pkin(4) * t118 - pkin(10) * t117 + t89;
t9 = -qJD(5) * t26 - t247 * t27 + t251 * t39;
t4 = pkin(5) * t118 - pkin(11) * t51 + t9;
t52 = qJD(5) * t121 + t117 * t247 - t251 * t193;
t8 = t247 * t39 + t251 * t27 + t55 * t330 - t331 * t47;
t5 = -pkin(11) * t52 + t8;
t2 = -qJD(6) * t11 - t246 * t5 + t250 * t4;
t393 = t36 * t281 + t2;
t328 = qJD(6) * t250;
t13 = -t119 * t328 - t121 * t329 - t246 * t52 + t250 * t51;
t160 = qJD(6) + t163;
t392 = t160 * t70 + t13;
t257 = qJD(6) * t281 - t246 * t51 - t250 * t52;
t304 = t195 * t248;
t391 = -t252 * t257 - t304 * t70;
t390 = -t160 * t281 + t257;
t334 = qJD(2) * t244;
t321 = t249 * t334;
t389 = pkin(2) * t321;
t236 = pkin(2) * t243 + pkin(9);
t320 = t236 * t333;
t388 = t247 * t320 + t251 * t401;
t387 = t119 * t195;
t217 = t246 * t251 + t247 * t250;
t206 = t217 * t248;
t386 = t262 * t163;
t237 = -pkin(2) * t245 - pkin(3);
t214 = -pkin(4) * t252 - pkin(10) * t248 + t237;
t135 = t186 * t245 - t172;
t149 = pkin(2) * t322 + pkin(3) * t201 - pkin(9) * t198;
t340 = t252 * t135 + t248 * t149;
t61 = pkin(10) * t201 + t340;
t384 = -t214 * t330 - t247 * t401 + t251 * t61;
t216 = t246 * t247 - t250 * t251;
t207 = t216 * t248;
t370 = t154 * t246 - t155 * t250 - t206 * t383 - t216 * t332;
t382 = t118 * t207 - t160 * t370;
t19 = t21 * t329;
t312 = qJD(6) * t15 + t5;
t1 = t246 * t4 + t312 * t250 - t19;
t254 = qJD(1) ^ 2;
t381 = pkin(10) + pkin(11);
t107 = -pkin(4) * t259 + pkin(10) * t165;
t379 = t247 * t107 + t251 * t58;
t203 = t243 * t352 - t325;
t185 = t298 + t261;
t146 = t243 * t185 + t245 * t196;
t133 = pkin(9) * t365 + t146;
t153 = pkin(3) * t203 - pkin(9) * t204 + t291;
t341 = t252 * t133 + t248 * t153;
t68 = pkin(10) * t203 + t341;
t145 = t245 * t185 - t243 * t196;
t132 = -pkin(3) * t365 - t145;
t178 = t204 * t252 + t248 * t365;
t269 = -t204 * t248 + t252 * t365;
t77 = -pkin(4) * t269 - t178 * pkin(10) + t132;
t377 = t247 * t77 + t251 * t68;
t374 = t247 * t51;
t373 = t252 * t52;
t301 = t103 * t332 + t130 * t333 - t252 * t131 + t248 * t90;
t28 = -pkin(4) * t193 + t301;
t372 = t28 * t247;
t371 = t28 * t251;
t368 = t396 * t216;
t367 = t396 * t217;
t128 = t248 * t135;
t60 = -pkin(4) * t201 - t149 * t252 + t128;
t366 = pkin(5) * t397 + t236 * t332 - t60;
t363 = t118 * t252;
t362 = t119 * t163;
t361 = t121 * t163;
t360 = t121 * t198;
t302 = t163 * t251;
t359 = t165 * t195;
t358 = t165 * t201;
t357 = t165 * t247;
t356 = t259 * t195;
t355 = t259 * t201;
t240 = t244 ^ 2;
t353 = t240 * t254;
t348 = t247 * t118;
t346 = t248 * t193;
t343 = t251 * t118;
t219 = t236 * t342;
t337 = t247 * t214 + t219;
t336 = t249 ^ 2 - t253 ^ 2;
t326 = t253 * t353;
t323 = qJD(5) * t381;
t314 = t240 * t327;
t310 = -t247 * t68 + t251 * t77;
t309 = t121 * t333 - t252 * t51;
t306 = -t248 * t133 + t153 * t252;
t234 = qJD(2) * t298;
t169 = t234 + t260;
t105 = t169 * t243 - t245 * t170;
t303 = t195 * t252;
t300 = 0.2e1 * t314;
t297 = -t206 * t118 - t160 * t369;
t293 = -t59 + (t331 + t357) * pkin(5);
t164 = -pkin(11) * t347 + t337;
t292 = pkin(5) * t354 - pkin(11) * t155 + qJD(6) * t164 - t247 * t61 - (pkin(5) * t248 - pkin(11) * t342) * qJD(4) - (-t219 + (pkin(11) * t248 - t214) * t247) * qJD(5) - t388;
t290 = t244 * t254 * t365;
t289 = -0.2e1 * pkin(1) * t314;
t209 = t251 * t214;
t158 = -pkin(11) * t344 + t209 + (-t236 * t247 - pkin(5)) * t252;
t287 = -qJD(6) * t158 - (-t251 * t333 - t252 * t331) * t236 + t384 + t397 * pkin(11);
t231 = t381 * t247;
t286 = pkin(11) * t357 + qJD(6) * t231 + t247 * t323 + t379;
t100 = t251 * t107;
t232 = t381 * t251;
t285 = -pkin(5) * t259 + qJD(6) * t232 - t247 * t58 + t100 + (pkin(11) * t165 + t323) * t251;
t152 = t178 * t251 + t203 * t247;
t22 = -pkin(5) * t269 - pkin(11) * t152 + t310;
t151 = t178 * t247 - t203 * t251;
t29 = -pkin(11) * t151 + t377;
t283 = t22 * t250 - t246 * t29;
t282 = t22 * t246 + t250 * t29;
t78 = t250 * t151 + t152 * t246;
t79 = -t151 * t246 + t152 * t250;
t278 = 0.2e1 * t308 + qJD(2);
t106 = t169 * t245 + t170 * t243;
t200 = (-t243 * t249 + t349) * t334;
t150 = pkin(3) * t199 - pkin(9) * t200 + t389;
t276 = -t248 * t106 - t133 * t332 + t150 * t252 - t153 * t333;
t274 = t252 * t193 + t195 * t395;
t67 = -pkin(4) * t203 - t306;
t266 = t252 * t106 - t133 * t333 + t248 * t150 + t153 * t332;
t33 = pkin(10) * t199 + t266;
t143 = qJD(4) * t178 + t200 * t248;
t144 = qJD(4) * t269 + t200 * t252;
t44 = pkin(4) * t143 - pkin(10) * t144 + t105;
t273 = t247 * t44 + t251 * t33 + t77 * t330 - t331 * t68;
t272 = t400 * t163;
t271 = -t163 * t330 - t348;
t270 = -pkin(10) * t118 + t163 * t46;
t267 = -t13 * t252 + t281 * t395;
t265 = t102 * t195 - t236 * t193;
t34 = -pkin(4) * t199 - t276;
t263 = -pkin(8) * t351 - t299;
t258 = -qJD(5) * t377 - t247 * t33 + t251 * t44;
t256 = t279 * t263;
t239 = -pkin(5) * t251 - pkin(4);
t210 = (pkin(5) * t247 + t236) * t248;
t86 = t118 * t269;
t66 = -qJD(5) * t151 + t144 * t251 + t199 * t247;
t65 = qJD(5) * t152 + t144 * t247 - t199 * t251;
t41 = pkin(5) * t151 + t67;
t18 = qJD(6) * t79 + t246 * t66 + t250 * t65;
t17 = -qJD(6) * t78 - t246 * t65 + t250 * t66;
t16 = pkin(5) * t65 + t34;
t12 = pkin(5) * t52 + t28;
t10 = t15 * t250 - t21 * t246;
t7 = -pkin(11) * t65 + t273;
t6 = pkin(5) * t143 - pkin(11) * t66 + t258;
t3 = [0, 0, 0, t249 * t253 * t300, -t336 * t300, t278 * t253 * t334, -t278 * t321, 0, qJD(2) * t256 + t249 * t289 + t263 * t284, t253 * t289 - (-pkin(8) * t321 + t234) * t279 - (-pkin(8) * t295 + t227) * t365, t105 * t201 + t106 * t198 - t113 * t200 - t114 * t199 - t145 * t194 - t146 * t193 - t203 * t90 + t204 * t89, -t113 * t105 + t114 * t106 - t89 * t145 + t90 * t146 + (t211 + t275) * t389, t117 * t178 - t144 * t259, t117 * t269 - t118 * t178 + t143 * t259 - t144 * t165, t117 * t203 + t144 * t195 + t178 * t193 - t199 * t259, -t118 * t203 - t143 * t195 - t165 * t199 + t193 * t269, t193 * t203 + t195 * t199, t102 * t143 + t105 * t165 + t132 * t118 + t193 * t306 + t195 * t276 + t58 * t199 - t203 * t301 - t269 * t89, t102 * t144 - t105 * t259 + t132 * t117 + t89 * t178 - t193 * t341 - t195 * t266 - t59 * t199 - t203 * t268, t121 * t66 + t152 * t51, -t119 * t66 - t121 * t65 - t151 * t51 - t152 * t52, t118 * t152 + t121 * t143 + t163 * t66 - t269 * t51, -t118 * t151 - t119 * t143 - t163 * t65 + t269 * t52, t143 * t163 - t86, t118 * t310 + t34 * t119 + t25 * t143 + t28 * t151 + t163 * t258 - t269 * t9 + t46 * t65 + t67 * t52, -t118 * t377 + t34 * t121 - t26 * t143 + t28 * t152 - t163 * t273 + t269 * t8 + t46 * t66 + t67 * t51, t13 * t79 - t17 * t281, -t13 * t78 - t17 * t70 + t18 * t281 + t257 * t79, t118 * t79 - t13 * t269 - t143 * t281 + t160 * t17, -t118 * t78 - t143 * t70 - t160 * t18 - t257 * t269, t143 * t160 - t86 (-qJD(6) * t282 - t246 * t7 + t250 * t6) * t160 + t283 * t118 - t2 * t269 + t10 * t143 + t16 * t70 - t41 * t257 + t12 * t78 + t36 * t18 -(qJD(6) * t283 + t246 * t6 + t250 * t7) * t160 - t282 * t118 + t1 * t269 - t11 * t143 - t16 * t281 + t41 * t13 + t12 * t79 + t36 * t17; 0, 0, 0, -t249 * t326, t336 * t353, -t253 * t290, t249 * t290, 0, -pkin(8) * t294 - qJD(1) * t256 + (pkin(1) * t353 - t277) * t249, -t227 + pkin(1) * t326 + (-pkin(8) * t322 + t233) * t308 + t233 * qJD(2) (t114 - t134) * t201 + (t113 - t135) * t198 + (-t193 * t243 - t194 * t245) * pkin(2), t113 * t134 - t114 * t135 + (-t211 * t322 + t243 * t90 - t245 * t89) * pkin(2), t117 * t248 - t259 * t303 (t117 - t359) * t252 + (-t118 + t356) * t248, t195 * t303 + t346 + t355, t274 + t358, -t195 * t201, t237 * t118 - t134 * t165 - t58 * t201 - t89 * t252 + (t128 + (-qJD(4) * t236 - t149) * t252) * t195 + t265 * t248, t237 * t117 + t134 * t259 + t59 * t201 + t89 * t248 + (t320 + t340) * t195 + t265 * t252, t121 * t262 + t344 * t51, t119 * t155 + t121 * t154 + (-t119 * t251 - t121 * t247) * t332 + (-t374 - t251 * t52 + (t119 * t247 - t121 * t251) * qJD(5)) * t248 (t343 - t360) * t248 + t386 + t309, t373 + t272 + (t271 - t387) * t248, t163 * t304 - t363, t209 * t118 - t60 * t119 - t46 * t154 + ((-qJD(5) * t214 + t61) * t247 + t388) * t163 + (t46 * t247 * qJD(4) - t9 + (qJD(4) * t119 + t271) * t236) * t252 + (t195 * t25 + t236 * t52 + t330 * t46 + t372) * t248, -t337 * t118 - t60 * t121 - t46 * t155 + t384 * t163 + (t236 * t163 * t331 + t8 + (t121 * t236 + t251 * t46) * qJD(4)) * t252 + (-t46 * t331 + t26 * t198 + t236 * t51 + t371 + (t236 * t302 - t26) * qJD(4)) * t248, -t13 * t207 - t281 * t370, -t13 * t206 - t207 * t257 + t281 * t369 - t370 * t70, t267 - t382, t297 + t391, t160 * t304 - t363 (t158 * t250 - t164 * t246) * t118 - t2 * t252 - t210 * t257 + t12 * t206 + t366 * t70 + t369 * t36 + (t246 * t287 - t250 * t292) * t160 + t10 * t304 -(t158 * t246 + t164 * t250) * t118 + t1 * t252 + t210 * t13 - t12 * t207 - t366 * t281 + t370 * t36 + (t246 * t292 + t250 * t287) * t160 - t11 * t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t198 ^ 2 - t201 ^ 2, t113 * t201 - t114 * t198 + t226, 0, 0, 0, 0, 0, t274 - t358, -t195 ^ 2 * t252 - t346 + t355, 0, 0, 0, 0, 0, -t373 + t272 + (t271 + t387) * t248 (-t343 - t360) * t248 - t386 + t309, 0, 0, 0, 0, 0, t297 - t391, t267 + t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259 * t165, -t165 ^ 2 + t259 ^ 2, t117 + t359, -t118 - t356, t193, t102 * t259 + t195 * t59 - t301, t102 * t165 + t195 * t58 - t268, t121 * t302 + t374 (t51 - t362) * t251 + (-t52 - t361) * t247, t121 * t259 + t163 * t302 + t348, -t163 ^ 2 * t247 - t119 * t259 + t343, t163 * t259, -pkin(4) * t52 - t59 * t119 + t25 * t259 - t371 + (-pkin(10) * t330 - t100) * t163 + (t58 * t163 + t270) * t247, -pkin(4) * t51 - t59 * t121 - t26 * t259 + t372 + (pkin(10) * t331 + t379) * t163 + t270 * t251, t13 * t217 + t281 * t368, -t13 * t216 + t217 * t257 + t281 * t367 + t368 * t70, t118 * t217 - t160 * t368 - t259 * t281, -t118 * t216 - t160 * t367 - t259 * t70, t160 * t259 (-t231 * t250 - t232 * t246) * t118 - t239 * t257 + t12 * t216 + t10 * t259 + t293 * t70 + t367 * t36 + (t246 * t286 - t250 * t285) * t160 -(-t231 * t246 + t232 * t250) * t118 + t239 * t13 + t12 * t217 - t11 * t259 - t293 * t281 - t368 * t36 + (t246 * t285 + t250 * t286) * t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t121 * t119, -t119 ^ 2 + t121 ^ 2, t51 + t362, t361 - t52, t118, -t121 * t46 + t163 * t26 + t9, t119 * t46 + t163 * t25 - t8, -t398, t394, t392, t390, t118 -(-t20 * t246 - t375) * t160 + (t118 * t250 - t121 * t70 - t160 * t329) * pkin(5) + t393, t399 + t19 + (-t160 * t21 - t4) * t246 + (t160 * t20 - t312) * t250 + (-t118 * t246 + t121 * t281 - t160 * t328) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t398, t394, t392, t390, t118, t11 * t160 + t393, t10 * t160 - t1 + t399;];
tauc_reg  = t3;
