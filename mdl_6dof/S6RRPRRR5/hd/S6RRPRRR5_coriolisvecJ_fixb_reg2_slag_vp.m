% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d5,d6,theta3]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 13:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRR5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRRR5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:46:48
% EndTime: 2019-03-09 13:47:24
% DurationCPUTime: 16.46s
% Computational Cost: add. (30369->710), mult. (88864->963), div. (0->0), fcn. (72156->12), ass. (0->312)
t306 = sin(pkin(6));
t313 = cos(qJ(2));
t412 = t306 * t313;
t431 = cos(pkin(12));
t352 = t431 * t412;
t280 = qJD(1) * t352;
t305 = sin(pkin(12));
t310 = sin(qJ(2));
t413 = t306 * t310;
t382 = qJD(1) * t413;
t244 = t305 * t382 - t280;
t240 = qJD(4) + t244;
t432 = cos(pkin(6));
t384 = pkin(1) * t432;
t296 = t313 * t384;
t290 = qJD(1) * t296;
t450 = pkin(8) + qJ(3);
t374 = t310 * t450;
t355 = t306 * t374;
t229 = -qJD(1) * t355 + t290;
t295 = t310 * t384;
t455 = t412 * t450 + t295;
t230 = t455 * qJD(1);
t367 = t431 * t230;
t171 = t229 * t305 + t367;
t309 = sin(qJ(4));
t312 = cos(qJ(4));
t489 = t171 - t240 * (pkin(4) * t309 - pkin(10) * t312);
t463 = (t305 * t313 + t310 * t431) * t306;
t248 = qJD(1) * t463;
t311 = cos(qJ(5));
t308 = sin(qJ(5));
t408 = t308 * t312;
t194 = -t244 * t408 - t311 * t248;
t393 = qJD(4) * t312;
t486 = -t308 * t393 + t194;
t451 = cos(qJ(6));
t372 = t451 * qJD(6);
t488 = (t451 * qJD(5) + t372) * t311;
t391 = qJD(5) * t311;
t487 = -t309 * t391 + t486;
t405 = t311 * t312;
t195 = -t244 * t405 + t248 * t308;
t392 = qJD(5) * t308;
t478 = t309 * t392 - t311 * t393 + t195;
t299 = -pkin(2) * t431 - pkin(3);
t269 = -t312 * pkin(4) - t309 * pkin(10) + t299;
t298 = pkin(2) * t305 + pkin(9);
t394 = qJD(4) * t309;
t216 = t305 * t230;
t172 = t229 * t431 - t216;
t360 = pkin(2) * t382;
t189 = pkin(3) * t248 + pkin(9) * t244 + t360;
t106 = t312 * t172 + t309 * t189;
t87 = pkin(10) * t248 + t106;
t437 = -t311 * t87 + t269 * t391 + (-t311 * t394 - t312 * t392) * t298 - t489 * t308;
t380 = t298 * t394;
t485 = t489 * t311 + (-t380 - t87) * t308;
t365 = t432 * qJD(1);
t343 = t365 + qJD(2);
t320 = -t312 * t248 - t309 * t343;
t155 = -t240 * t311 - t308 * t320;
t157 = t240 * t308 - t311 * t320;
t307 = sin(qJ(6));
t338 = -t307 * t155 + t157 * t451;
t98 = t451 * t155 + t157 * t307;
t447 = t98 * t338;
t275 = t298 * t405;
t416 = t244 * t309;
t484 = -pkin(5) * t416 - pkin(11) * t195 - (pkin(5) * t309 - pkin(11) * t405) * qJD(4) - (-t275 + (pkin(11) * t309 - t269) * t308) * qJD(5) + t485;
t483 = t487 * pkin(11) + t437;
t452 = -pkin(11) - pkin(10);
t383 = qJD(5) * t452;
t208 = t248 * t309 - t312 * t343;
t421 = t208 * t308;
t140 = -pkin(4) * t320 + pkin(10) * t208;
t323 = pkin(2) * t432 - t355;
t211 = qJD(2) * pkin(2) + qJD(1) * t323 + t290;
t150 = t305 * t211 + t367;
t136 = pkin(9) * t343 + t150;
t273 = (-pkin(2) * t313 - pkin(1)) * t306;
t396 = qJD(1) * t273;
t264 = qJD(3) + t396;
t165 = pkin(3) * t244 - pkin(9) * t248 + t264;
t84 = -t309 * t136 + t165 * t312;
t61 = t308 * t140 + t311 * t84;
t482 = -pkin(11) * t421 + t308 * t383 - t61;
t60 = t311 * t140 - t308 * t84;
t481 = pkin(5) * t320 - t60 + (-pkin(11) * t208 + t383) * t311;
t315 = -t455 * qJD(2) - qJD(3) * t413;
t480 = t315 * t305;
t362 = t240 * t309;
t479 = t320 * t362;
t356 = t451 * t393;
t390 = qJD(6) * t307;
t409 = t308 * t309;
t404 = t194 * t451 + t478 * t307 - t308 * t356 - t309 * t488 + t390 * t409;
t272 = t307 * t311 + t308 * t451;
t460 = qJD(5) + qJD(6);
t220 = t460 * t272;
t403 = t195 * t451 + t220 * t309 - t486 * t307 - t311 * t356;
t477 = t394 + t416;
t247 = qJD(2) * t463;
t476 = t338 ^ 2 - t98 ^ 2;
t206 = qJD(5) + t208;
t203 = qJD(6) + t206;
t395 = qJD(2) * t306;
t381 = t310 * t395;
t354 = qJD(1) * t381;
t239 = qJD(2) * t280 - t305 * t354;
t153 = t248 * t394 - t312 * (qJD(4) * t343 + t239);
t238 = qJD(1) * t247;
t341 = t308 * t153 + t238 * t311 - t240 * t392 + t320 * t391;
t78 = t311 * t153 - t308 * t238 - t240 * t391 - t320 * t392;
t26 = t155 * t372 + t157 * t390 - t307 * t341 + t451 * t78;
t475 = t203 * t98 - t26;
t85 = t136 * t312 + t165 * t309;
t73 = pkin(10) * t240 + t85;
t149 = t211 * t431 - t216;
t135 = -pkin(3) * t343 - t149;
t81 = t208 * pkin(4) + pkin(10) * t320 + t135;
t38 = -t308 * t73 + t311 * t81;
t33 = -pkin(11) * t157 + t38;
t28 = pkin(5) * t206 + t33;
t39 = t308 * t81 + t311 * t73;
t34 = -pkin(11) * t155 + t39;
t283 = qJD(2) * t290;
t321 = (-qJD(2) * t374 + qJD(3) * t313) * t306;
t201 = qJD(1) * t321 + t283;
t122 = qJD(1) * t480 + t201 * t431;
t282 = pkin(2) * t354;
t166 = pkin(3) * t238 - pkin(9) * t239 + t282;
t45 = t312 * t122 - t136 * t394 + t165 * t393 + t309 * t166;
t40 = pkin(10) * t238 + t45;
t205 = t431 * t315;
t121 = -qJD(1) * t205 + t305 * t201;
t154 = -qJD(4) * t320 + t309 * t239;
t64 = pkin(4) * t154 + pkin(10) * t153 + t121;
t11 = -t39 * qJD(5) - t308 * t40 + t311 * t64;
t6 = pkin(5) * t154 + pkin(11) * t78 + t11;
t10 = t308 * t64 + t311 * t40 + t81 * t391 - t392 * t73;
t7 = pkin(11) * t341 + t10;
t318 = -t28 * t372 - t307 * t6 + t34 * t390 - t451 * t7;
t72 = -pkin(4) * t240 - t84;
t59 = pkin(5) * t155 + t72;
t474 = t59 * t98 + t318;
t27 = qJD(6) * t338 - t307 * t78 - t451 * t341;
t473 = t27 * t312 - t362 * t98;
t302 = t306 ^ 2;
t388 = qJD(1) * qJD(2);
t471 = -0.2e1 * t302 * t388;
t470 = -t206 * t38 + t10;
t469 = -t206 * t39 - t11;
t468 = -t240 * t84 + t45;
t46 = -t309 * t122 - t136 * t393 - t165 * t394 + t312 * t166;
t467 = t240 * t85 + t46;
t228 = t296 + t323;
t398 = pkin(8) * t412 + t295;
t242 = qJ(3) * t412 + t398;
t185 = t228 * t431 - t305 * t242;
t167 = -pkin(3) * t432 - t185;
t222 = t309 * t432 + t312 * t463;
t334 = -t309 * t463 + t312 * t432;
t107 = -pkin(4) * t334 - t222 * pkin(10) + t167;
t186 = t305 * t228 + t431 * t242;
t168 = pkin(9) * t432 + t186;
t252 = t305 * t413 - t352;
t193 = pkin(3) * t252 - pkin(9) * t463 + t273;
t109 = t312 * t168 + t309 * t193;
t96 = pkin(10) * t252 + t109;
t51 = t308 * t107 + t311 * t96;
t466 = t155 * t240;
t465 = t244 * t343;
t464 = t478 * t206;
t462 = t341 * t312;
t215 = t308 * t269 + t275;
t386 = t451 * t34;
t13 = t307 * t28 + t386;
t2 = -qJD(6) * t13 - t307 * t7 + t451 * t6;
t459 = -t59 * t338 + t2;
t458 = t157 * t487 + t78 * t409;
t457 = t203 * t338 - t27;
t411 = t307 * t308;
t337 = t311 * t451 - t411;
t260 = t337 * t309;
t456 = t154 * t260 - t203 * t403;
t259 = t272 * t309;
t454 = -t259 * t26 - t338 * t404;
t453 = t248 ^ 2;
t314 = qJD(1) ^ 2;
t262 = t311 * t269;
t406 = t309 * t311;
t198 = -pkin(11) * t406 + t262 + (-t298 * t308 - pkin(5)) * t312;
t207 = -pkin(11) * t409 + t215;
t124 = t307 * t198 + t207 * t451;
t449 = qJD(6) * t124 + t483 * t307 + t484 * t451;
t123 = t198 * t451 - t307 * t207;
t448 = -qJD(6) * t123 + t484 * t307 - t483 * t451;
t440 = t307 * t34;
t41 = -t238 * pkin(4) - t46;
t439 = t41 * t308;
t438 = t41 * t311;
t436 = -t215 * qJD(5) - t485;
t288 = t452 * t308;
t289 = t452 * t311;
t234 = t288 * t451 + t307 * t289;
t435 = qJD(6) * t234 + t481 * t307 + t482 * t451;
t235 = t307 * t288 - t289 * t451;
t434 = -qJD(6) * t235 - t482 * t307 + t481 * t451;
t379 = t298 * t393;
t105 = -t309 * t172 + t189 * t312;
t86 = -pkin(4) * t248 - t105;
t433 = -pkin(5) * t487 + t379 - t86;
t118 = t154 * t334;
t429 = t154 * t311;
t428 = t154 * t312;
t427 = t155 * t206;
t426 = t157 * t155;
t425 = t157 * t206;
t424 = t157 * t244;
t423 = t208 * t244;
t422 = t208 * t248;
t420 = t320 * t208;
t419 = t320 * t248;
t418 = t238 * t252;
t417 = t238 * t309;
t415 = t248 * t244;
t414 = t302 * t314;
t410 = t308 * t154;
t402 = -t272 * t208 - t220;
t401 = -t337 * t208 + t460 * t411 - t488;
t400 = -t309 * t154 - t208 * t393;
t397 = t310 ^ 2 - t313 ^ 2;
t389 = t248 * qJD(2);
t385 = t313 * t414;
t370 = t313 * t388;
t368 = t248 * t432;
t50 = t311 * t107 - t308 * t96;
t366 = t157 * t394 + t312 * t78;
t108 = -t309 * t168 + t193 * t312;
t291 = qJD(2) * t296;
t212 = t291 + t321;
t138 = t212 * t305 - t205;
t364 = t206 * t311;
t361 = t240 * t312;
t359 = pkin(2) * t381;
t358 = t310 * t385;
t357 = -t260 * t27 + t403 * t98;
t353 = -t85 + (t392 + t421) * pkin(5);
t351 = t306 * t314 * t432;
t350 = pkin(1) * t471;
t348 = -t259 * t154 + t404 * t203;
t346 = -t39 * t308 - t38 * t311;
t345 = t308 * t38 - t311 * t39;
t192 = t222 * t311 + t252 * t308;
t191 = t222 * t308 - t252 * t311;
t344 = t302 * t310 * t370;
t342 = 0.2e1 * t365 + qJD(2);
t139 = t212 * t431 + t480;
t246 = -qJD(2) * t352 + t305 * t381;
t190 = pkin(3) * t247 + pkin(9) * t246 + t359;
t56 = -t309 * t139 - t168 * t393 + t190 * t312 - t193 * t394;
t340 = t312 * t238 - t240 * t477;
t95 = -pkin(4) * t252 - t108;
t35 = -pkin(5) * t334 - pkin(11) * t192 + t50;
t42 = -pkin(11) * t191 + t51;
t18 = -t307 * t42 + t35 * t451;
t19 = t307 * t35 + t42 * t451;
t339 = t486 * t206;
t111 = -t307 * t191 + t192 * t451;
t336 = -t206 * t391 - t410;
t55 = t312 * t139 - t168 * t394 + t309 * t190 + t193 * t393;
t48 = pkin(10) * t247 + t55;
t183 = qJD(4) * t222 - t246 * t309;
t184 = qJD(4) * t334 - t246 * t312;
t70 = pkin(4) * t183 - pkin(10) * t184 + t138;
t16 = t107 * t391 + t308 * t70 + t311 * t48 - t392 * t96;
t335 = -pkin(10) * t154 + t206 * t72;
t250 = -pkin(8) * t354 + t283;
t332 = t135 * t240 - t298 * t238;
t331 = t26 * t312 + t338 * t477;
t330 = t341 * t311;
t49 = -pkin(4) * t247 - t56;
t322 = t155 * t478 + t309 * t330;
t258 = t398 * qJD(2);
t17 = -t51 * qJD(5) - t308 * t48 + t311 * t70;
t316 = qJD(5) * t346 + t10 * t311 - t11 * t308;
t301 = -t311 * pkin(5) - pkin(4);
t267 = -pkin(8) * t413 + t296;
t263 = (pkin(5) * t308 + t298) * t309;
t257 = -pkin(8) * t381 + t291;
t256 = t398 * qJD(1);
t255 = -pkin(8) * t382 + t290;
t251 = qJD(1) * t258;
t241 = t244 ^ 2;
t214 = -t298 * t408 + t262;
t110 = t191 * t451 + t192 * t307;
t94 = -qJD(5) * t191 + t184 * t311 + t247 * t308;
t93 = qJD(5) * t192 + t184 * t308 - t247 * t311;
t67 = pkin(5) * t191 + t95;
t31 = qJD(6) * t111 + t307 * t94 + t451 * t93;
t30 = t191 * t372 + t192 * t390 + t307 * t93 - t451 * t94;
t29 = pkin(5) * t93 + t49;
t24 = -pkin(5) * t341 + t41;
t15 = t33 * t451 - t440;
t14 = -t307 * t33 - t386;
t12 = t28 * t451 - t440;
t9 = -pkin(11) * t93 + t16;
t8 = pkin(5) * t183 - pkin(11) * t94 + t17;
t4 = -qJD(6) * t19 - t307 * t9 + t451 * t8;
t3 = qJD(6) * t18 + t307 * t8 + t451 * t9;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t344, t397 * t471, t342 * t313 * t395, -0.2e1 * t344, -t342 * t381, 0, -t251 * t432 - t258 * t343 + t310 * t350, -t250 * t432 - t257 * t343 + t313 * t350 (t250 * t313 + t251 * t310 + (-t255 * t313 - t256 * t310) * qJD(2) + (t257 * t313 + t258 * t310 + (-t267 * t313 - t310 * t398) * qJD(2)) * qJD(1)) * t306, t250 * t398 - t251 * t267 - t255 * t258 + t256 * t257, t239 * t463 - t246 * t248, -t238 * t463 - t239 * t252 + t244 * t246 - t247 * t248, t239 * t432 - t246 * t343, t244 * t247 + t418, -t238 * t432 - t247 * t343, 0, -t138 * t343 - t121 * t432 + t273 * t238 + t264 * t247 + (qJD(1) * t252 + t244) * t359, -t122 * t432 - t139 * t343 + t273 * t239 - t264 * t246 + 0.2e1 * t248 * t359, t121 * t463 - t122 * t252 + t138 * t248 - t139 * t244 + t149 * t246 - t150 * t247 - t185 * t239 - t186 * t238, -t121 * t185 + t122 * t186 - t138 * t149 + t139 * t150 + (t264 + t396) * t359, -t153 * t222 - t184 * t320, -t153 * t334 - t154 * t222 + t183 * t320 - t184 * t208, -t153 * t252 + t184 * t240 + t222 * t238 - t247 * t320, t183 * t208 - t118, -t154 * t252 - t183 * t240 - t208 * t247 + t238 * t334, t240 * t247 + t418, t108 * t238 - t121 * t334 + t135 * t183 + t138 * t208 + t154 * t167 + t240 * t56 + t247 * t84 + t252 * t46, -t109 * t238 + t121 * t222 + t135 * t184 - t138 * t320 - t153 * t167 - t240 * t55 - t247 * t85 - t252 * t45, t108 * t153 - t109 * t154 - t183 * t85 - t184 * t84 - t208 * t55 - t222 * t46 + t320 * t56 + t334 * t45, t108 * t46 + t109 * t45 + t121 * t167 + t135 * t138 + t55 * t85 + t56 * t84, t157 * t94 - t192 * t78, -t94 * t155 - t157 * t93 + t78 * t191 + t192 * t341, t154 * t192 + t157 * t183 + t206 * t94 + t334 * t78, t155 * t93 - t191 * t341, -t191 * t154 - t155 * t183 - t93 * t206 - t334 * t341, t183 * t206 - t118, -t11 * t334 + t50 * t154 + t49 * t155 + t17 * t206 + t38 * t183 + t41 * t191 - t341 * t95 + t72 * t93, t10 * t334 - t154 * t51 + t157 * t49 - t16 * t206 - t183 * t39 + t192 * t41 + t72 * t94 - t78 * t95, -t10 * t191 - t11 * t192 - t16 * t155 - t17 * t157 + t341 * t51 - t38 * t94 - t39 * t93 + t50 * t78, t10 * t51 + t11 * t50 + t16 * t39 + t17 * t38 + t41 * t95 + t49 * t72, -t111 * t26 - t30 * t338, t110 * t26 - t111 * t27 + t30 * t98 - t31 * t338, t111 * t154 + t183 * t338 - t203 * t30 + t26 * t334, t110 * t27 + t31 * t98, -t110 * t154 - t183 * t98 - t203 * t31 + t27 * t334, t183 * t203 - t118, t110 * t24 + t12 * t183 + t154 * t18 - t2 * t334 + t203 * t4 + t27 * t67 + t29 * t98 + t31 * t59, t111 * t24 - t13 * t183 - t154 * t19 - t203 * t3 - t26 * t67 + t29 * t338 - t30 * t59 - t318 * t334, t110 * t318 - t111 * t2 + t12 * t30 - t13 * t31 + t18 * t26 - t19 * t27 - t3 * t98 - t338 * t4, t12 * t4 + t13 * t3 + t18 * t2 - t19 * t318 + t24 * t67 + t29 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t358, t397 * t414, -t313 * t351, t358, t310 * t351, 0, -t306 * pkin(8) * t370 + t256 * t343 + (-qJD(2) * t365 + t414) * t310 * pkin(1), pkin(1) * t385 + t255 * t343 - t250, 0, 0, t415, -t241 + t453, t239 + t465, -t415, t389 + (t368 - t247) * qJD(1), 0, t171 * t343 - t244 * t360 - t264 * t248 - t121, t172 * t343 + t264 * t244 - t248 * t360 - t122 (t150 - t171) * t248 + (-t149 + t172) * t244 + (-t238 * t305 - t239 * t431) * pkin(2), t149 * t171 - t150 * t172 + (-t121 * t431 + t122 * t305 - t264 * t382) * pkin(2), -t153 * t309 - t320 * t361 (-t153 - t423) * t312 + t479 + t400, t240 * t361 + t417 + t419, t208 * t362 - t428, t340 + t422, -t240 * t248, -t121 * t312 + t154 * t299 - t171 * t208 - t248 * t84 + (-t105 - t379) * t240 + t332 * t309, t121 * t309 - t153 * t299 + t171 * t320 + t248 * t85 + (t106 + t380) * t240 + t332 * t312, -t105 * t320 + t106 * t208 + (-t154 * t298 - t244 * t84 + t45 + (-t298 * t320 - t84) * qJD(4)) * t312 + (-t153 * t298 - t244 * t85 - t46 + (t208 * t298 - t85) * qJD(4)) * t309, -t105 * t84 - t106 * t85 + t121 * t299 - t135 * t171 + (-t309 * t46 + t312 * t45 + (-t309 * t85 - t312 * t84) * qJD(4)) * t298, -t157 * t478 - t406 * t78, t322 + t458 (t424 + t429) * t309 - t464 + t366, -t155 * t487 - t341 * t409, -t462 + t339 + (t336 - t466) * t309, t206 * t362 - t428, t214 * t154 - t86 * t155 - t72 * t194 + t436 * t206 + (-t11 + (t155 * t298 + t72 * t308) * qJD(4)) * t312 + (t240 * t38 - t298 * t341 + t391 * t72 + t439) * t309, -t154 * t215 - t157 * t86 - t195 * t72 - t437 * t206 + (t10 + (t157 * t298 + t311 * t72) * qJD(4)) * t312 + (-t240 * t39 - t298 * t78 - t392 * t72 + t438) * t309, t215 * t341 + t214 * t78 + t39 * t194 + t38 * t195 - t436 * t157 - t437 * t155 + t346 * t393 + (qJD(5) * t345 - t10 * t308 - t11 * t311) * t309, t10 * t215 + t11 * t214 - t72 * t86 + t437 * t39 + t436 * t38 + (t41 * t309 + t393 * t72) * t298, -t26 * t260 - t338 * t403, t357 - t454, t331 + t456, t259 * t27 - t404 * t98, t348 + t473, t203 * t362 - t428, t12 * t362 + t123 * t154 - t2 * t312 - t203 * t449 + t24 * t259 + t263 * t27 - t404 * t59 + t433 * t98, -t124 * t154 - t13 * t362 + t203 * t448 + t24 * t260 - t26 * t263 - t312 * t318 + t338 * t433 - t403 * t59, t12 * t403 + t123 * t26 - t124 * t27 + t13 * t404 - t2 * t260 + t259 * t318 + t338 * t449 + t448 * t98, -t12 * t449 + t123 * t2 - t124 * t318 - t13 * t448 + t24 * t263 + t433 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t389 + (t368 + t247) * qJD(1), t239 - t465, -t241 - t453, t149 * t248 + t150 * t244 + t282, 0, 0, 0, 0, 0, 0, t340 - t422, -t240 ^ 2 * t312 - t417 + t419 (t153 - t423) * t312 - t479 + t400, -t135 * t248 + t468 * t309 + t467 * t312, 0, 0, 0, 0, 0, 0, t462 + t339 + (t336 + t466) * t309 (t424 - t429) * t309 + t464 + t366, t322 - t458, t194 * t38 - t195 * t39 + (-qJD(4) * t345 - t41) * t312 + (t240 * t72 + t316) * t309, 0, 0, 0, 0, 0, 0, t348 - t473, t331 - t456, t357 + t454, t12 * t404 - t13 * t403 - t2 * t259 - t24 * t312 - t260 * t318 + t362 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t420, -t208 ^ 2 + t320 ^ 2, t208 * t240 - t153, t420, -t240 * t320 - t154, t238, t135 * t320 + t467, t135 * t208 - t468, 0, 0, t157 * t364 - t308 * t78 (-t78 - t427) * t311 + (t341 - t425) * t308, t157 * t320 + t206 * t364 + t410, t308 * t427 + t330, -t206 ^ 2 * t308 - t155 * t320 + t429, t206 * t320, pkin(4) * t341 - t438 + t38 * t320 - t85 * t155 + (-pkin(10) * t391 - t60) * t206 + t335 * t308, pkin(4) * t78 - t157 * t85 - t320 * t39 + t439 + (pkin(10) * t392 + t61) * t206 + t335 * t311, t61 * t155 + t60 * t157 + ((t157 * qJD(5) + t341) * pkin(10) + t470) * t311 + ((t155 * qJD(5) - t78) * pkin(10) + t469) * t308, -pkin(4) * t41 + pkin(10) * t316 - t38 * t60 - t39 * t61 - t72 * t85, -t26 * t272 - t338 * t401, -t26 * t337 - t27 * t272 + t338 * t402 + t401 * t98, t154 * t272 - t203 * t401 + t320 * t338, -t27 * t337 - t402 * t98, t154 * t337 + t203 * t402 - t320 * t98, t203 * t320, t12 * t320 + t154 * t234 + t203 * t434 - t24 * t337 + t27 * t301 + t353 * t98 - t402 * t59, -t13 * t320 - t154 * t235 - t203 * t435 + t24 * t272 - t26 * t301 + t338 * t353 - t401 * t59, t12 * t401 + t13 * t402 - t2 * t272 + t234 * t26 - t235 * t27 - t318 * t337 - t338 * t434 - t435 * t98, t12 * t434 + t13 * t435 + t2 * t234 - t235 * t318 + t24 * t301 + t353 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t426, -t155 ^ 2 + t157 ^ 2, -t78 + t427, -t426, t341 + t425, t154, -t157 * t72 - t469, t155 * t72 - t470, 0, 0, t447, t476, t475, -t447, t457, t154, -t14 * t203 + (t154 * t451 - t157 * t98 - t203 * t390) * pkin(5) + t459, t15 * t203 + (-t154 * t307 - t157 * t338 - t203 * t372) * pkin(5) + t474, -t12 * t98 + t14 * t338 + t13 * t338 + t15 * t98 + (t451 * t26 - t27 * t307 + (t307 * t338 - t451 * t98) * qJD(6)) * pkin(5), -t12 * t14 - t13 * t15 + (t451 * t2 - t318 * t307 - t157 * t59 + (-t12 * t307 + t13 * t451) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t447, t476, t475, -t447, t457, t154, t13 * t203 + t459, t12 * t203 + t474, 0, 0;];
tauc_reg  = t1;
