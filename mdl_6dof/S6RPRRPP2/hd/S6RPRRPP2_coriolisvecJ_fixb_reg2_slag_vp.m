% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPP2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:33:21
% EndTime: 2019-03-09 04:33:33
% DurationCPUTime: 4.14s
% Computational Cost: add. (3706->433), mult. (8600->513), div. (0->0), fcn. (5145->6), ass. (0->221)
t149 = sin(qJ(4));
t150 = sin(qJ(3));
t247 = qJD(1) * t150;
t214 = t149 * t247;
t151 = cos(qJ(4));
t238 = t151 * qJD(3);
t112 = t214 - t238;
t244 = qJD(4) * t149;
t218 = t150 * t244;
t152 = cos(qJ(3));
t220 = t152 * t238;
t257 = t150 * t151;
t243 = qJD(4) * t151;
t217 = t150 * t243;
t241 = t149 * qJD(3);
t221 = t152 * t241;
t167 = t217 + t221;
t233 = qJD(3) * qJD(4);
t69 = qJD(1) * t167 + t149 * t233;
t285 = t112 * t220 + t69 * t257;
t322 = -t112 * t218 + t285;
t114 = t151 * t247 + t241;
t236 = t152 * qJD(1);
t134 = -qJD(4) + t236;
t261 = t114 * t134;
t316 = t69 - t261;
t264 = t112 * t134;
t234 = qJD(1) * qJD(3);
t213 = t151 * t234;
t68 = qJD(4) * t214 - t151 * t233 - t152 * t213;
t317 = t68 - t264;
t4 = t316 * t149 + t317 * t151;
t321 = t69 + t261;
t145 = t150 ^ 2;
t319 = -t134 * t220 + t145 * t213;
t259 = t149 * t150;
t84 = t114 * t217;
t232 = t114 * t221 - t68 * t259 + t84;
t3 = t232 + t322;
t208 = qJD(4) * t112 - t68;
t245 = qJD(3) * t152;
t318 = t285 - (t114 * t245 + t150 * t208) * t149 - t84;
t138 = t150 * t234;
t293 = pkin(4) + pkin(5);
t315 = t293 * t138;
t314 = qJ(5) * t138 - t134 * qJD(5);
t313 = -t134 * t218 - t319;
t198 = pkin(3) * t150 - pkin(8) * t152;
t119 = t198 * qJD(3);
t101 = qJD(1) * t119;
t136 = sin(pkin(9)) * pkin(1) + pkin(7);
t121 = t136 * qJD(1);
t239 = t150 * qJD(2);
t88 = t152 * t121 + t239;
t76 = qJD(3) * pkin(8) + t88;
t307 = t152 * qJD(2) - t150 * t121;
t77 = t307 * qJD(3);
t137 = -cos(pkin(9)) * pkin(1) - pkin(2);
t102 = -t152 * pkin(3) - t150 * pkin(8) + t137;
t80 = t102 * qJD(1);
t209 = -t151 * t101 + t149 * t77 + t76 * t243 + t80 * t244;
t36 = t149 * t80 + t151 * t76;
t177 = -t134 * t36 - t209;
t216 = t134 * t243;
t256 = t151 * t152;
t31 = ((-t114 + t241) * t150 + t134 * t256) * qJD(1) - t216;
t130 = t134 * qJ(5);
t29 = -t130 + t36;
t205 = pkin(4) * t138;
t7 = -t205 + t209;
t311 = t134 * t29 + t7;
t310 = t69 * qJ(6) + t112 * qJD(6);
t78 = t88 * qJD(3);
t12 = t69 * pkin(4) + t68 * qJ(5) - t114 * qJD(5) + t78;
t200 = qJD(3) * pkin(3) + t307;
t171 = t114 * qJ(5) + t200;
t21 = -t293 * t112 + qJD(6) + t171;
t308 = (qJD(6) + t21) * t114;
t35 = -t149 * t76 + t151 * t80;
t252 = qJD(5) - t35;
t306 = 0.2e1 * t314;
t294 = t114 ^ 2;
t305 = -t134 ^ 2 - t294;
t246 = qJD(3) * t150;
t304 = qJ(5) * t246 - t152 * qJD(5);
t58 = t152 * t68;
t283 = t114 * t246 + t58;
t303 = t283 + t313;
t302 = -t283 + t313;
t301 = -t149 * qJD(5) - t239;
t295 = t112 ^ 2;
t300 = t294 - t295;
t260 = t149 * qJ(5);
t297 = -t293 * t151 - t260;
t219 = t134 * t244;
t258 = t149 * t152;
t263 = t112 * t150;
t296 = qJD(1) * (t134 * t258 - t263) - t151 * t138 - t219;
t292 = pkin(8) * t114;
t291 = pkin(8) * t134;
t290 = pkin(8) - qJ(6);
t125 = t290 * t151;
t118 = t198 * qJD(1);
t45 = t151 * t118 - t149 * t307;
t289 = (-qJ(6) * t256 - t293 * t150) * qJD(1) - t45 - qJD(4) * t125 + t149 * qJD(6);
t237 = t151 * qJD(6);
t46 = t149 * t118 + t151 * t307;
t40 = qJ(5) * t247 + t46;
t288 = qJ(6) * t149 * t236 + t290 * t244 + t237 + t40;
t266 = qJ(5) * t151;
t176 = -t293 * t149 + t266;
t287 = (qJD(1) * t176 - t121) * t152 - qJD(4) * t176 + t301;
t194 = pkin(4) * t149 - t266;
t286 = (t194 * qJD(1) + t121) * t152 - t194 * qJD(4) - t301;
t282 = t102 * t243 + t149 * t119;
t281 = qJ(5) * t69;
t34 = pkin(4) * t112 - t171;
t280 = t114 * t34;
t279 = t12 * t149;
t278 = t12 * t151;
t275 = t149 * t200;
t25 = qJ(6) * t112 + t36;
t15 = -t130 + t25;
t274 = t15 * t134;
t273 = t151 * t200;
t272 = t152 * t69;
t271 = t69 * t151;
t270 = t78 * t149;
t269 = t78 * t150;
t268 = t78 * t151;
t117 = t136 * t256;
t267 = qJD(4) * t117 + t102 * t244;
t52 = t149 * t102 + t117;
t265 = t112 * qJ(5);
t262 = t114 * t112;
t154 = qJD(3) ^ 2;
t255 = t154 * t150;
t254 = t154 * t152;
t24 = t114 * qJ(6) + t35;
t253 = qJD(5) - t24;
t107 = t150 * t216;
t250 = t134 * t221 + t107;
t249 = -t152 ^ 2 + t145;
t122 = qJD(1) * t137;
t248 = qJD(1) * t145;
t242 = qJD(5) * t151;
t231 = t149 * t291;
t230 = t151 * t291;
t228 = pkin(8) * t246;
t227 = pkin(8) * t238;
t155 = qJD(1) ^ 2;
t224 = t150 * t155 * t152;
t223 = t149 * t248;
t215 = t134 * t247;
t211 = -t136 * t149 - pkin(4);
t93 = t112 * t246;
t210 = t93 - t272;
t116 = t136 * t258;
t51 = t151 * t102 - t116;
t207 = -t138 + t262;
t201 = t152 * t138;
t48 = -t152 * qJ(5) + t52;
t199 = -t151 * t119 + t267;
t196 = t208 * pkin(8);
t195 = t151 * pkin(4) + t260;
t14 = t293 * t134 + t253;
t193 = t14 * t151 - t149 * t15;
t192 = t14 * t149 + t15 * t151;
t28 = pkin(4) * t134 + t252;
t191 = -t149 * t29 + t151 * t28;
t190 = t149 * t28 + t151 * t29;
t189 = -t149 * t36 - t151 * t35;
t188 = t149 * t35 - t151 * t36;
t187 = -t134 * t152 + t248;
t185 = 0.2e1 * qJD(3) * t122;
t5 = -t69 * pkin(5) - t12;
t181 = -t5 * t149 - t21 * t243;
t180 = t5 * t151 - t21 * t244;
t179 = t136 + t194;
t178 = t68 * qJ(6) + t209;
t174 = -t149 * t101 - t151 * t77 - t80 * t243 + t76 * t244;
t79 = (-t134 - t236) * t246;
t173 = t187 * t149;
t172 = -qJD(3) * t223 + t250;
t170 = -t136 + t176;
t169 = t107 + t272;
t6 = -t174 + t314;
t164 = -t134 * t35 + t174;
t23 = -t149 * t264 - t271;
t163 = t68 + t264;
t26 = (-t150 * t238 - t152 * t244) * t136 + t282;
t162 = t191 * qJD(4) + t7 * t149 + t6 * t151;
t161 = t178 - t315;
t160 = t189 * qJD(4) + t149 * t209 - t151 * t174;
t159 = t269 + t77 * t152 + (-t150 * t88 - t152 * t307) * qJD(3);
t18 = t112 * t167 + t69 * t259;
t144 = t152 * pkin(4);
t124 = t290 * t149;
t120 = -pkin(3) - t195;
t103 = pkin(3) - t297;
t70 = t179 * t150;
t57 = pkin(8) * t271;
t56 = t114 * pkin(4) + t265;
t50 = t170 * t150;
t49 = t144 - t51;
t43 = qJ(6) * t259 + t48;
t42 = -pkin(4) * t247 - t45;
t39 = -t293 * t114 - t265;
t37 = t152 * pkin(5) + t116 + t144 + (-qJ(6) * t150 - t102) * t151;
t32 = (t195 * qJD(4) - t242) * t150 + t179 * t245;
t27 = t150 * t136 * t241 - t199;
t22 = -t68 * t149 - t151 * t261;
t20 = t211 * t246 + t199;
t19 = (t297 * qJD(4) + t242) * t150 + t170 * t245;
t17 = -t68 * t257 + (-t218 + t220) * t114;
t16 = t26 + t304;
t9 = (qJ(6) * qJD(4) - qJD(3) * t136) * t257 + (qJD(6) * t150 + (qJ(6) * qJD(3) - qJD(4) * t136) * t152) * t149 + t282 + t304;
t8 = (-qJ(6) * t245 - t119) * t151 + (qJ(6) * t244 - t237 + (-pkin(5) + t211) * qJD(3)) * t150 + t267;
t2 = -t114 * qJD(6) + t161;
t1 = t6 + t310;
t10 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t201, -0.2e1 * t249 * t234, t254, -0.2e1 * t201, -t255, 0, -t136 * t254 + t150 * t185, t136 * t255 + t152 * t185, t159, t159 * t136, t17, -t3, -t302, t18 (-t173 - t263) * qJD(3) + t169, t79, -t27 * t134 + (t209 + (t112 * t136 - t275) * qJD(3)) * t152 + (-t200 * t243 + t136 * t69 + t270 + (qJD(1) * t51 + t35) * qJD(3)) * t150, t26 * t134 + (-t174 + (t114 * t136 - t273) * qJD(3)) * t152 + (t200 * t244 - t136 * t68 + t268 + (-qJD(1) * t52 - t36) * qJD(3)) * t150, -t26 * t112 - t27 * t114 + t51 * t68 - t52 * t69 + t189 * t245 + (qJD(4) * t188 + t149 * t174 + t151 * t209) * t150, -t174 * t52 - t209 * t51 + t36 * t26 + t35 * t27 + (-t200 * t245 + t269) * t136, t17, -t302, t3, t79, t187 * t241 - t169 + t93, t18, t32 * t112 + t20 * t134 + t70 * t69 + (t241 * t34 + t7) * t152 + (t34 * t243 + t279 + (-qJD(1) * t49 - t28) * qJD(3)) * t150, -t16 * t112 + t20 * t114 - t48 * t69 - t49 * t68 + t191 * t245 + (-qJD(4) * t190 - t149 * t6 + t151 * t7) * t150, -t32 * t114 - t16 * t134 + t70 * t68 + (-t238 * t34 - t6) * t152 + (t34 * t244 - t278 + (qJD(1) * t48 + t29) * qJD(3)) * t150, t12 * t70 + t16 * t29 + t20 * t28 + t32 * t34 + t48 * t6 + t49 * t7, t17, t3, t302, t18, t172 - t210, t79, -t19 * t112 + t8 * t134 - t50 * t69 + (-t21 * t241 + t2) * t152 + ((-qJD(1) * t37 - t14) * qJD(3) + t181) * t150, t19 * t114 - t9 * t134 - t50 * t68 + (t21 * t238 - t1) * t152 + ((qJD(1) * t43 + t15) * qJD(3) + t180) * t150, t9 * t112 - t8 * t114 + t37 * t68 + t43 * t69 - t193 * t245 + (qJD(4) * t192 + t1 * t149 - t151 * t2) * t150, t1 * t43 + t14 * t8 + t15 * t9 + t19 * t21 + t2 * t37 + t5 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t255, -t254, 0, t77 * t150 - t78 * t152 + (-t150 * t307 + t152 * t88) * qJD(3), 0, 0, 0, 0, 0, 0, -qJD(3) * t173 + t107 + t210, t303, -t318 (-qJD(3) * t188 - t78) * t152 + (-qJD(3) * t200 + t160) * t150, 0, 0, 0, 0, 0, 0, t172 + t210, t232 - t322, -t58 + (-qJD(3) * t114 + t219) * t150 + t319 (qJD(3) * t190 - t12) * t152 + (qJD(3) * t34 + t162) * t150, 0, 0, 0, 0, 0, 0, -t272 + (-t223 + t263) * qJD(3) + t250, -t303, t318 (qJD(3) * t192 + t5) * t152 + (-qJD(3) * t21 + qJD(4) * t193 + t1 * t151 + t2 * t149) * t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t224, t249 * t155, 0, t224, 0, 0, -t122 * t247, -t122 * t236, 0, 0, t22, -t4, t31, t23, -t296, t215, -pkin(3) * t69 - t88 * t112 + t45 * t134 - t268 + (t230 - t275) * qJD(4) + (-t150 * t35 + (t152 * t200 - t228) * t149) * qJD(1), pkin(3) * t68 - t88 * t114 - t46 * t134 + t270 + (-t231 - t273) * qJD(4) + (t200 * t256 + (t36 - t227) * t150) * qJD(1), t46 * t112 + t45 * t114 - t57 + (t35 * t236 - t174 + (-t35 + t292) * qJD(4)) * t151 + (t196 - t177) * t149, -t78 * pkin(3) + pkin(8) * t160 + t200 * t88 - t35 * t45 - t36 * t46, t22, t31, t4, t215, t296, t23, -t278 + t120 * t69 - t42 * t134 - t286 * t112 + (t149 * t34 + t230) * qJD(4) + (t150 * t28 + (-t152 * t34 - t228) * t149) * qJD(1), t40 * t112 - t42 * t114 - t57 + (-t28 * t236 + t6 + (t28 + t292) * qJD(4)) * t151 + (t196 + t311) * t149, -t279 + t120 * t68 + t40 * t134 + t286 * t114 + (-t151 * t34 + t231) * qJD(4) + (t34 * t256 + (-t29 + t227) * t150) * qJD(1), t162 * pkin(8) + t12 * t120 - t28 * t42 - t286 * t34 - t29 * t40, t22, t4, -t31, t23, -t296, t215, -t103 * t69 - t289 * t134 + t287 * t112 + (t21 * t258 + (-qJD(3) * t124 + t14) * t150) * qJD(1) + t180, -t103 * t68 + t288 * t134 - t287 * t114 + (-t21 * t256 + (qJD(3) * t125 - t15) * t150) * qJD(1) - t181, t124 * t68 + t125 * t69 + t289 * t114 - t288 * t112 + (t134 * t14 - t1) * t151 + (-t2 - t274) * t149, t1 * t125 + t5 * t103 + t2 * t124 - t14 * t289 - t15 * t288 - t21 * t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262, t300, -t163, -t262, -t321, t138, t114 * t200 + t177, -t112 * t200 + t164, 0, 0, t262, -t163, -t300, t138, t321, -t262, -t112 * t56 + t177 + 0.2e1 * t205 - t280, pkin(4) * t68 - t281 + (t29 - t36) * t114 + (t28 - t252) * t112, -t112 * t34 + t114 * t56 - t164 + t306, -t7 * pkin(4) + t6 * qJ(5) + t252 * t29 - t28 * t36 - t34 * t56, t262, -t300, t163, -t262, -t321, t138, t39 * t112 - t25 * t134 - t178 + t308 + 0.2e1 * t315, t112 * t21 - t114 * t39 + t134 * t24 - t174 + t306 + t310, t281 - t293 * t68 + (-t15 + t25) * t114 + (-t14 + t253) * t112, t1 * qJ(5) - t14 * t25 + t15 * t253 - t2 * t293 - t21 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t207, -t163, t305, t280 + t311, 0, 0, 0, 0, 0, 0, t207, t305, t163, t161 + t274 - t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t316, -t317, -t294 - t295, -t15 * t112 + t14 * t114 + t5;];
tauc_reg  = t10;
