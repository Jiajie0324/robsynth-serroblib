% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRPP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:34
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRPP2_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP2_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP2_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPP2_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPP2_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP2_invdynJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:33:29
% EndTime: 2019-03-09 04:33:41
% DurationCPUTime: 6.67s
% Computational Cost: add. (5123->572), mult. (10426->645), div. (0->0), fcn. (6559->10), ass. (0->274)
t210 = cos(qJ(4));
t207 = sin(qJ(4));
t331 = qJD(3) * t207;
t208 = sin(qJ(3));
t333 = qJD(1) * t208;
t134 = t210 * t333 + t331;
t211 = cos(qJ(3));
t332 = qJD(1) * t211;
t173 = -qJD(4) + t332;
t355 = t134 * t173;
t317 = t208 * qJDD(1);
t327 = qJD(4) * t208;
t407 = qJD(1) * t327 - qJDD(3);
t64 = (qJD(3) * (qJD(4) + t332) + t317) * t207 + t407 * t210;
t417 = t64 - t355;
t416 = t64 + t355;
t322 = t210 * qJD(3);
t132 = t207 * t333 - t322;
t298 = t207 * t327;
t300 = t211 * t322;
t346 = t208 * t210;
t375 = t132 * t300 + t64 * t346;
t415 = -t132 * t298 + t375;
t357 = t132 * t173;
t319 = qJD(1) * qJD(3);
t294 = t211 * t319;
t63 = -qJD(4) * t322 + (-t294 - t317) * t210 + t407 * t207;
t411 = t63 - t357;
t6 = t417 * t207 + t210 * t411;
t329 = qJD(3) * t211;
t301 = t207 * t329;
t348 = t207 * t208;
t326 = qJD(4) * t210;
t297 = t208 * t326;
t93 = t134 * t297;
t316 = t134 * t301 - t63 * t348 + t93;
t4 = t316 + t415;
t193 = t211 * qJDD(1);
t128 = t208 * t319 + qJDD(4) - t193;
t345 = t210 * t128;
t361 = -t173 * t300 + t208 * t345;
t242 = t173 * t298 + t361;
t330 = qJD(3) * t208;
t53 = t211 * t63;
t365 = t134 * t330 + t53;
t413 = t242 - t365;
t11 = t242 + t365;
t286 = qJD(4) * t132 - t63;
t412 = t375 - (t134 * t329 + t208 * t286) * t207 - t93;
t287 = t132 * t330 - t211 * t64;
t409 = t128 * qJ(5) - t173 * qJD(5);
t205 = sin(pkin(9));
t180 = pkin(1) * t205 + pkin(7);
t147 = t180 * qJDD(1);
t408 = qJD(2) * qJD(3) + t147;
t201 = qJ(1) + pkin(9);
t188 = cos(t201);
t351 = t188 * t208;
t187 = sin(t201);
t353 = t187 * t208;
t401 = g(1) * t351 + g(2) * t353;
t349 = t207 * qJ(5);
t386 = pkin(4) + pkin(5);
t250 = -t210 * t386 - t349;
t119 = pkin(3) - t250;
t405 = t64 * qJ(6) + t132 * qJD(6);
t360 = pkin(1) * qJDD(1);
t149 = t180 * qJD(1);
t323 = t208 * qJD(2);
t104 = t211 * t149 + t323;
t84 = qJD(3) * pkin(8) + t104;
t196 = t208 * pkin(8);
t198 = t211 * pkin(3);
t304 = -pkin(2) - t198;
t258 = t304 - t196;
t206 = cos(pkin(9));
t385 = pkin(1) * t206;
t234 = t258 - t385;
t89 = t234 * qJD(1);
t36 = -t207 * t84 + t210 * t89;
t342 = qJD(5) - t36;
t296 = t173 * t326;
t98 = t128 * t348;
t314 = t173 * t301 + t208 * t296 - t98;
t403 = t314 + t287;
t402 = 0.2e1 * t409;
t387 = t134 ^ 2;
t400 = -t173 ^ 2 - t387;
t399 = qJ(5) * t330 - t211 * qJD(5);
t398 = t207 * qJD(5) + t323;
t397 = g(1) * t188 + g(2) * t187;
t388 = t132 ^ 2;
t396 = t387 - t388;
t115 = t128 * pkin(4);
t395 = t115 - qJDD(5);
t236 = t297 + t301;
t394 = -t173 * t236 + t98;
t131 = t208 * t149;
t103 = t211 * qJD(2) - t131;
t274 = qJD(3) * pkin(3) + t103;
t238 = t134 * qJ(5) + t274;
t35 = pkin(4) * t132 - t238;
t382 = pkin(8) * t128;
t393 = t173 * t35 + t382;
t328 = qJD(4) * t207;
t307 = -t208 * qJDD(2) - t211 * t408;
t54 = -t149 * t330 - t307;
t48 = qJDD(3) * pkin(8) + t54;
t273 = pkin(3) * t208 - pkin(8) * t211;
t139 = t273 * qJD(3);
t65 = qJD(1) * t139 + qJDD(1) * t234;
t288 = t207 * t48 - t210 * t65 + t84 * t326 + t89 * t328;
t347 = t207 * t211;
t94 = t187 * t347 + t188 * t210;
t96 = -t187 * t210 + t188 * t347;
t230 = g(1) * t96 + g(2) * t94 + g(3) * t348 - t288;
t228 = t230 + t395;
t23 = -t132 * t386 + qJD(6) + t238;
t371 = qJ(6) * t63;
t392 = (qJD(6) + t23) * t134 + t228 - t371;
t299 = t173 * t328;
t390 = qJD(1) * (-t132 * t208 + t173 * t347) - t299 - t345;
t247 = -t207 * t128 + t296;
t344 = t210 * t211;
t28 = qJD(1) * (-t134 * t208 + t173 * t344) - t247;
t384 = pkin(4) * t207;
t383 = pkin(5) * t128;
t381 = pkin(8) * t134;
t380 = g(1) * t187;
t377 = g(3) * t211;
t376 = pkin(8) - qJ(6);
t313 = t386 * t207;
t359 = qJ(5) * t210;
t251 = -t313 + t359;
t373 = qJD(4) * t251 - (qJD(1) * t251 - t149) * t211 + t398;
t372 = qJ(5) * t64;
t166 = t173 * qJ(5);
t37 = t207 * t89 + t210 * t84;
t25 = qJ(6) * t132 + t37;
t19 = -t166 + t25;
t370 = t173 * t19;
t30 = -t166 + t37;
t369 = t173 * t30;
t368 = t173 * t37;
t366 = t64 * t210;
t321 = t210 * qJD(6);
t138 = t273 * qJD(1);
t62 = t210 * t103 + t207 * t138;
t42 = qJ(5) * t333 + t62;
t364 = -qJ(6) * t207 * t332 - t328 * t376 - t321 - t42;
t266 = -t359 + t384;
t363 = qJD(4) * t266 - (qJD(1) * t266 + t149) * t211 - t398;
t153 = t376 * t210;
t312 = t386 * t208;
t61 = -t207 * t103 + t210 * t138;
t362 = qJD(4) * t153 - t207 * qJD(6) - (-qJ(6) * t344 - t312) * qJD(1) + t61;
t358 = t132 * qJ(5);
t356 = t134 * t132;
t354 = t180 * t207;
t352 = t187 * t211;
t350 = t188 * t211;
t24 = t134 * qJ(6) + t36;
t343 = qJD(5) - t24;
t181 = -pkin(2) - t385;
t335 = t198 + t196;
t118 = t181 - t335;
t137 = t180 * t344;
t340 = qJD(4) * t137 + t118 * t328;
t339 = t118 * t326 + t207 * t139;
t71 = t207 * t118 + t137;
t338 = t401 * t207;
t337 = t401 * t210;
t336 = g(1) * t353 - g(2) * t351;
t202 = t208 ^ 2;
t203 = t211 ^ 2;
t334 = t202 - t203;
t150 = qJD(1) * t181;
t325 = qJD(5) * t210;
t148 = qJDD(1) * t181;
t311 = t23 * t328;
t310 = t23 * t326;
t215 = qJD(1) ^ 2;
t309 = t208 * t215 * t211;
t306 = g(1) * t350 + g(2) * t352 + g(3) * t208;
t212 = cos(qJ(1));
t305 = t212 * pkin(1) + t188 * pkin(2) + t187 * pkin(7);
t283 = -t211 * qJDD(2) + t149 * t329 + t208 * t408;
t49 = -qJDD(3) * pkin(3) + t283;
t10 = t64 * pkin(4) + t63 * qJ(5) - t134 * qJD(5) + t49;
t3 = -pkin(5) * t64 + qJDD(6) - t10;
t303 = t3 - t377;
t295 = t173 * t333;
t209 = sin(qJ(1));
t292 = -t209 * pkin(1) + t188 * pkin(7);
t291 = -pkin(4) - t354;
t95 = t187 * t344 - t188 * t207;
t290 = -t94 * pkin(4) + qJ(5) * t95;
t97 = t187 * t207 + t188 * t344;
t289 = -t96 * pkin(4) + qJ(5) * t97;
t136 = t180 * t347;
t70 = t118 * t210 - t136;
t285 = -pkin(8) * t366 - t306;
t282 = pkin(4) * t344 + qJ(5) * t347 + t335;
t277 = t208 * t294;
t276 = g(1) * t94 - g(2) * t96;
t275 = g(1) * t95 - g(2) * t97;
t271 = -g(2) * t188 + t380;
t270 = g(1) * t209 - g(2) * t212;
t67 = -qJ(5) * t211 + t71;
t269 = -t210 * t139 + t340;
t268 = t286 * pkin(8);
t267 = pkin(4) * t210 + t349;
t16 = t173 * t386 + t343;
t265 = t16 * t210 - t19 * t207;
t264 = t16 * t207 + t19 * t210;
t29 = pkin(4) * t173 + t342;
t263 = -t207 * t30 + t210 * t29;
t262 = t207 * t29 + t210 * t30;
t261 = -t207 * t37 - t210 * t36;
t260 = t207 * t36 - t210 * t37;
t259 = pkin(3) * t350 + pkin(8) * t351 + t305;
t254 = pkin(3) + t267;
t7 = t288 - t395;
t253 = pkin(8) * qJD(4) * t173 - t377;
t8 = t207 * t65 + t210 * t48 + t89 * t326 - t328 * t84;
t73 = -t128 * t211 - t173 * t330;
t214 = qJD(3) ^ 2;
t245 = t180 * t214 + 0.2e1 * t148;
t244 = -t10 + t253;
t243 = t253 - t49;
t241 = -t95 * pkin(4) - t94 * qJ(5) + t292;
t235 = t258 * t380;
t233 = t173 * t274 - t382;
t5 = t8 + t409;
t232 = t97 * pkin(4) + qJ(5) * t96 + t259;
t231 = -t128 + t356;
t229 = 0.2e1 * qJD(3) * t150 - qJDD(3) * t180;
t18 = -t207 * t357 - t366;
t227 = t63 + t357;
t26 = (-t208 * t322 - t211 * t328) * t180 + t339;
t226 = qJD(4) * t263 + t7 * t207 + t5 * t210;
t225 = qJD(4) * t261 + t207 * t288 + t8 * t210;
t224 = t283 * t208 + t54 * t211 + (-t103 * t211 - t104 * t208) * qJD(3);
t15 = t132 * t236 + t348 * t64;
t222 = t134 * t35 - t228;
t221 = g(1) * t97 + g(2) * t95 + g(3) * t346 - t8;
t219 = -t173 * t36 + t221;
t197 = t211 * pkin(4);
t171 = qJ(5) * t346;
t156 = pkin(8) * t350;
t154 = pkin(8) * t352;
t152 = t376 * t207;
t146 = qJDD(3) * t211 - t208 * t214;
t145 = qJDD(3) * t208 + t211 * t214;
t78 = -t171 + (t180 + t384) * t208;
t72 = pkin(4) * t134 + t358;
t69 = t171 + (-t180 - t313) * t208;
t68 = t197 - t70;
t50 = qJ(6) * t348 + t67;
t44 = -pkin(4) * t333 - t61;
t41 = -t134 * t386 - t358;
t38 = t211 * pkin(5) + t136 + t197 + (-qJ(6) * t208 - t118) * t210;
t33 = (qJD(4) * t267 - t325) * t208 + (t180 + t266) * t329;
t27 = t330 * t354 - t269;
t22 = t291 * t330 + t269;
t21 = (qJD(4) * t250 + t325) * t208 + (-t180 + t251) * t329;
t20 = t26 + t399;
t17 = -t63 * t207 - t210 * t355;
t14 = -t63 * t346 + (-t298 + t300) * t134;
t13 = (qJ(6) * qJD(4) - qJD(3) * t180) * t346 + (qJD(6) * t208 + (qJ(6) * qJD(3) - qJD(4) * t180) * t211) * t207 + t339 + t399;
t12 = (-qJ(6) * t329 - t139) * t210 + (qJ(6) * t328 - t321 + (-pkin(5) + t291) * qJD(3)) * t208 + t340;
t2 = t5 + t405;
t1 = -qJD(6) * t134 + t371 - t383 + t7;
t9 = [0, 0, 0, 0, 0, qJDD(1), t270, g(1) * t212 + g(2) * t209, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0.2e1 * t206 * t360 + t271, -0.2e1 * t205 * t360 + t397, 0 (t270 + (t205 ^ 2 + t206 ^ 2) * t360) * pkin(1), qJDD(1) * t202 + 0.2e1 * t277, 0.2e1 * t193 * t208 - 0.2e1 * t319 * t334, t145, qJDD(1) * t203 - 0.2e1 * t277, t146, 0, t229 * t208 + (-t245 + t271) * t211, t208 * t245 + t211 * t229 - t336 (t202 + t203) * t147 + t224 - t397, t148 * t181 - g(1) * (-t187 * pkin(2) + t292) - g(2) * t305 + t224 * t180, t14, -t4, t11, t15 (t173 * t331 + t64) * t211 + (-qJD(3) * t132 + t247) * t208, t73, t70 * t128 - t27 * t173 + (t288 + (t132 * t180 - t207 * t274) * qJD(3)) * t211 + (qJD(3) * t36 + t180 * t64 + t207 * t49 - t274 * t326) * t208 + t275, -t71 * t128 + t26 * t173 + (t8 + (t134 * t180 - t210 * t274) * qJD(3)) * t211 + (-qJD(3) * t37 - t180 * t63 + t210 * t49 + t274 * t328) * t208 - t276, -t132 * t26 - t134 * t27 + t63 * t70 - t64 * t71 + t261 * t329 + (qJD(4) * t260 - t207 * t8 + t210 * t288) * t208 + t336, t8 * t71 + t37 * t26 - t288 * t70 + t36 * t27 - g(1) * t292 - g(2) * t259 - t235 + (t208 * t49 - t274 * t329) * t180, t14, t11, t4, t73, t287 + t394, t15, -t128 * t68 + t132 * t33 + t173 * t22 + t64 * t78 + (t331 * t35 + t7) * t211 + (-qJD(3) * t29 + t10 * t207 + t326 * t35) * t208 + t275, -t132 * t20 + t134 * t22 - t63 * t68 - t64 * t67 + t263 * t329 + (-qJD(4) * t262 - t207 * t5 + t210 * t7) * t208 + t336, t128 * t67 - t134 * t33 - t173 * t20 + t63 * t78 + (-t322 * t35 - t5) * t211 + (qJD(3) * t30 - t10 * t210 + t328 * t35) * t208 + t276, -g(1) * t241 - g(2) * t232 + t10 * t78 + t30 * t20 + t29 * t22 + t35 * t33 + t5 * t67 + t7 * t68 - t235, t14, t4, -t11, t15, -t287 + t314, t73, t12 * t173 - t128 * t38 - t132 * t21 - t64 * t69 + (-t23 * t331 + t1) * t211 + (-qJD(3) * t16 - t207 * t3 - t310) * t208 + t275, t128 * t50 - t13 * t173 + t134 * t21 - t63 * t69 + (t23 * t322 - t2) * t211 + (qJD(3) * t19 + t210 * t3 - t311) * t208 + t276, -t12 * t134 + t13 * t132 + t38 * t63 + t50 * t64 - t265 * t329 + (qJD(4) * t264 - t1 * t210 + t2 * t207) * t208 - t336, t2 * t50 + t19 * t13 + t1 * t38 + t16 * t12 + t3 * t69 + t23 * t21 - g(1) * (-t95 * pkin(5) + t241) - g(2) * (pkin(5) * t97 - qJ(6) * t351 + t232) - (-t208 * t376 + t304) * t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2) - g(3), 0, 0, 0, 0, 0, 0, t146, -t145, 0, t54 * t208 - t283 * t211 - g(3) + (-t103 * t208 + t104 * t211) * qJD(3), 0, 0, 0, 0, 0, 0, t287 - t394, -t413, -t412, -g(3) + (-qJD(3) * t260 - t49) * t211 + (-qJD(3) * t274 + t225) * t208, 0, 0, 0, 0, 0, 0, t403, t316 - t415, -t53 + (-qJD(3) * t134 + t299) * t208 + t361, -g(3) + (qJD(3) * t262 - t10) * t211 + (qJD(3) * t35 + t226) * t208, 0, 0, 0, 0, 0, 0, t403, t413, t412, -g(3) + (qJD(3) * t264 + t3) * t211 + (-qJD(3) * t23 + qJD(4) * t265 + t1 * t207 + t2 * t210) * t208; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, t334 * t215, t317, t309, t193, qJDD(3), qJD(3) * t104 - t150 * t333 - t283 - t377 + t401, -t150 * t332 + (t103 + t131) * qJD(3) + t306 + t307, 0, 0, t17, -t6, t28, t18, -t390, t295, -pkin(3) * t64 - t104 * t132 + t173 * t61 + t207 * t233 + t210 * t243 - t333 * t36 + t337, pkin(3) * t63 - t104 * t134 - t173 * t62 - t207 * t243 + t210 * t233 + t333 * t37 - t338, t132 * t62 + t134 * t61 + (t36 * t332 + t8 + (-t36 + t381) * qJD(4)) * t210 + (t268 + t288 + t368) * t207 + t285, -t49 * pkin(3) - t37 * t62 - t36 * t61 + t274 * t104 - g(1) * (-pkin(3) * t351 + t156) - g(2) * (-pkin(3) * t353 + t154) - g(3) * t335 + t225 * pkin(8), t17, t28, t6, t295, t390, t18, t363 * t132 - t173 * t44 - t393 * t207 + t244 * t210 - t254 * t64 + t29 * t333 + t337, t132 * t42 - t134 * t44 + (-t29 * t332 + t5 + (t29 + t381) * qJD(4)) * t210 + (t268 + t7 + t369) * t207 + t285, -t363 * t134 + t173 * t42 + t244 * t207 + t393 * t210 - t254 * t63 - t30 * t333 + t338, t226 * pkin(8) - g(1) * t156 - g(2) * t154 - g(3) * t282 - t29 * t44 - t30 * t42 + t363 * t35 + (t208 * t397 - t10) * t254, t17, t6, -t28, t18, -t390, t295, -t311 - t119 * t64 - t128 * t152 + t303 * t210 + t362 * t173 - t373 * t132 + (t16 * t208 + t23 * t347) * qJD(1) + t337, t310 - t119 * t63 + t128 * t153 + t303 * t207 - t364 * t173 + t373 * t134 + (-t19 * t208 - t23 * t344) * qJD(1) + t338, t152 * t63 + t153 * t64 - t362 * t134 + t364 * t132 + (t16 * t173 - t2) * t210 + (-t1 - t370) * t207 + t306, t2 * t153 + t1 * t152 + t3 * t119 - g(1) * (-qJ(6) * t350 + t156) - g(2) * (-qJ(6) * t352 + t154) - g(3) * (pkin(5) * t344 + t282) + t373 * t23 + t364 * t19 + t362 * t16 + (g(3) * qJ(6) + t397 * t119) * t208; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t356, t396, -t227, -t356, -t416, t128, t134 * t274 + t230 - t368, -t132 * t274 + t219, 0, 0, t356, -t227, -t396, t128, t416, -t356, -t132 * t72 + t115 - t222 - t368, pkin(4) * t63 - t372 + (t30 - t37) * t134 + (t29 - t342) * t132, -t132 * t35 + t134 * t72 - t219 + t402, t5 * qJ(5) - t7 * pkin(4) - t35 * t72 - t29 * t37 - g(1) * t289 - g(2) * t290 - g(3) * (-pkin(4) * t348 + t171) + t342 * t30, t356, -t396, t227, -t356, -t416, t128 (pkin(5) + t386) * t128 + t132 * t41 - t173 * t25 + t392, t132 * t23 - t134 * t41 + t173 * t24 - t221 + t402 + t405, t372 - t386 * t63 + (-t19 + t25) * t134 + (-t16 + t343) * t132, t2 * qJ(5) - t1 * t386 - t16 * t25 - t23 * t41 - g(1) * (-pkin(5) * t96 + t289) - g(2) * (-pkin(5) * t94 + t290) - g(3) * (-t207 * t312 + t171) + t343 * t19; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t231, -t227, t400, t222 + t369, 0, 0, 0, 0, 0, 0, t231, t400, t227, t370 - t383 - t392; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t417, -t411, -t387 - t388, -t132 * t19 + t134 * t16 + t303 + t401;];
tau_reg  = t9;
