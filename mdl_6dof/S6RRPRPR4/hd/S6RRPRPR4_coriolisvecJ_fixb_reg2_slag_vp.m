% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRPR4_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR4_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR4_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR4_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:26:18
% EndTime: 2019-03-09 10:26:44
% DurationCPUTime: 11.34s
% Computational Cost: add. (23445->622), mult. (70090->836), div. (0->0), fcn. (57069->12), ass. (0->280)
t264 = sin(pkin(6));
t271 = cos(qJ(2));
t342 = t264 * t271;
t368 = cos(pkin(11));
t297 = t368 * t342;
t242 = qJD(1) * t297;
t263 = sin(pkin(11));
t268 = sin(qJ(2));
t333 = qJD(1) * t264;
t320 = t268 * t333;
t215 = t263 * t320 - t242;
t210 = qJD(4) + t215;
t267 = sin(qJ(4));
t270 = cos(qJ(4));
t256 = pkin(2) * t263 + pkin(9);
t340 = qJ(5) + t256;
t310 = qJD(4) * t340;
t351 = t215 * t267;
t265 = cos(pkin(6));
t387 = pkin(1) * t268;
t251 = t265 * t387;
t386 = pkin(8) + qJ(3);
t390 = t342 * t386 + t251;
t199 = t390 * qJD(1);
t187 = t263 * t199;
t252 = t265 * t271 * pkin(1);
t247 = qJD(1) * t252;
t318 = t386 * t268;
t300 = t264 * t318;
t198 = -qJD(1) * t300 + t247;
t144 = t198 * t368 - t187;
t285 = t263 * t271 + t268 * t368;
t219 = t285 * t333;
t304 = pkin(2) * t320;
t159 = pkin(3) * t219 + pkin(9) * t215 + t304;
t92 = t270 * t144 + t267 * t159;
t413 = -qJ(5) * t351 + t270 * qJD(5) - t267 * t310 - t92;
t91 = -t144 * t267 + t270 * t159;
t412 = -pkin(4) * t219 - t267 * qJD(5) - t91 + (-qJ(5) * t215 - t310) * t270;
t330 = qJD(4) * t267;
t411 = t330 + t351;
t262 = sin(pkin(12));
t367 = cos(pkin(12));
t237 = t262 * t270 + t267 * t367;
t403 = t210 * t237;
t283 = -t262 * t267 + t270 * t367;
t410 = t210 * t283;
t369 = t412 * t262 + t367 * t413;
t315 = t368 * t199;
t143 = t198 * t263 + t315;
t296 = pkin(4) * t411 - t143;
t266 = sin(qJ(6));
t269 = cos(qJ(6));
t332 = qJD(1) * t265;
t249 = qJD(2) + t332;
t290 = -t219 * t270 - t249 * t267;
t182 = t249 * pkin(2) + t198;
t128 = t263 * t182 + t315;
t122 = pkin(9) * t249 + t128;
t238 = (-pkin(2) * t271 - pkin(1)) * t264;
t334 = qJD(1) * t238;
t230 = qJD(3) + t334;
t139 = t215 * pkin(3) - t219 * pkin(9) + t230;
t81 = -t122 * t267 + t270 * t139;
t66 = qJ(5) * t290 + t81;
t61 = pkin(4) * t210 + t66;
t179 = t219 * t267 - t249 * t270;
t82 = t122 * t270 + t139 * t267;
t67 = -qJ(5) * t179 + t82;
t64 = t367 * t67;
t31 = t262 * t61 + t64;
t27 = pkin(10) * t210 + t31;
t117 = t367 * t179 - t262 * t290;
t284 = -t262 * t179 - t290 * t367;
t127 = t182 * t368 - t187;
t121 = -t249 * pkin(3) - t127;
t97 = t179 * pkin(4) + qJD(5) + t121;
t54 = t117 * pkin(5) - pkin(10) * t284 + t97;
t14 = t266 * t54 + t269 * t27;
t245 = qJD(2) * t247;
t276 = (-qJD(2) * t318 + qJD(3) * t271) * t264;
t172 = qJD(1) * t276 + t245;
t343 = t264 * t268;
t184 = -qJD(2) * t390 - qJD(3) * t343;
t173 = t184 * qJD(1);
t108 = t172 * t263 - t368 * t173;
t331 = qJD(2) * t264;
t319 = t268 * t331;
t299 = qJD(1) * t319;
t277 = qJD(2) * t242 - t263 * t299;
t131 = -qJD(4) * t290 + t267 * t277;
t76 = pkin(4) * t131 + t108;
t329 = qJD(4) * t270;
t130 = t219 * t330 - t249 * t329 - t270 * t277;
t85 = -t130 * t262 + t367 * t131;
t86 = -t130 * t367 - t262 * t131;
t24 = pkin(5) * t85 - pkin(10) * t86 + t76;
t224 = t285 * t264;
t218 = qJD(2) * t224;
t208 = qJD(1) * t218;
t109 = t172 * t368 + t263 * t173;
t244 = pkin(2) * t299;
t140 = t208 * pkin(3) - pkin(9) * t277 + t244;
t48 = -qJD(4) * t82 - t267 * t109 + t270 * t140;
t25 = t208 * pkin(4) + t130 * qJ(5) + qJD(5) * t290 + t48;
t47 = t270 * t109 - t122 * t330 + t139 * t329 + t267 * t140;
t29 = -qJ(5) * t131 - qJD(5) * t179 + t47;
t8 = t262 * t25 + t367 * t29;
t6 = pkin(10) * t208 + t8;
t2 = -qJD(6) * t14 + t269 * t24 - t266 * t6;
t401 = qJD(6) + t117;
t409 = t14 * t401 + t2;
t291 = t266 * t27 - t269 * t54;
t1 = -qJD(6) * t291 + t266 * t24 + t269 * t6;
t408 = t291 * t401 + t1;
t407 = -pkin(10) * t219 + t369;
t406 = -pkin(5) * t403 + t410 * pkin(10) - t296;
t405 = t117 * t284;
t404 = t219 * t266 - t269 * t410;
t306 = t401 * t269;
t402 = -t266 * t85 - t306 * t401;
t259 = t264 ^ 2;
t324 = qJD(1) * qJD(2);
t400 = -0.2e1 * t259 * t324;
t370 = t262 * t413 - t412 * t367;
t399 = -t210 * t81 + t47;
t398 = t82 * t210 + t48;
t101 = t210 * t266 + t269 * t284;
t307 = t401 * t266;
t397 = t101 * t307;
t309 = t210 * t267;
t395 = t290 * t309;
t312 = -t269 * t219 - t266 * t410;
t327 = qJD(6) * t269;
t280 = t237 * t327 - t312;
t394 = t280 * t101;
t197 = t265 * pkin(2) + t252 - t300;
t336 = pkin(8) * t342 + t251;
t212 = qJ(3) * t342 + t336;
t154 = t263 * t197 + t368 * t212;
t142 = pkin(9) * t265 + t154;
t223 = t263 * t343 - t297;
t161 = t223 * pkin(3) - t224 * pkin(9) + t238;
t94 = t270 * t142 + t267 * t161;
t314 = -t269 * t208 + t266 * t86;
t53 = qJD(6) * t101 + t314;
t99 = -t269 * t210 + t266 * t284;
t393 = -t283 * t53 + t403 * t99;
t328 = qJD(6) * t266;
t279 = t237 * t328 + t404;
t345 = t237 * t269;
t392 = -t279 * t401 + t85 * t345;
t391 = t237 * t208 + t210 * t410;
t389 = -t283 * t86 + t284 * t403;
t388 = t219 ^ 2;
t258 = -pkin(2) * t368 - pkin(3);
t243 = -t270 * pkin(4) + t258;
t171 = -pkin(5) * t283 - t237 * pkin(10) + t243;
t235 = t340 * t270;
t313 = t340 * t267;
t178 = t235 * t367 - t262 * t313;
t114 = t171 * t266 + t178 * t269;
t385 = qJD(6) * t114 + t266 * t407 + t406 * t269;
t113 = t171 * t269 - t178 * t266;
t384 = -qJD(6) * t113 + t406 * t266 - t269 * t407;
t190 = t224 * t267 - t265 * t270;
t217 = -qJD(2) * t297 + t263 * t319;
t152 = -qJD(4) * t190 - t217 * t270;
t191 = t224 * t270 + t265 * t267;
t248 = qJD(2) * t252;
t183 = t248 + t276;
t124 = t183 * t368 + t263 * t184;
t303 = pkin(2) * t319;
t160 = pkin(3) * t218 + pkin(9) * t217 + t303;
t56 = -qJD(4) * t94 - t267 * t124 + t270 * t160;
t36 = t218 * pkin(4) - t152 * qJ(5) - t191 * qJD(5) + t56;
t151 = qJD(4) * t191 - t217 * t267;
t55 = t270 * t124 - t142 * t330 + t267 * t160 + t161 * t329;
t42 = -qJ(5) * t151 - qJD(5) * t190 + t55;
t12 = t262 * t36 + t367 * t42;
t383 = -t266 * t53 - t99 * t327;
t93 = -t142 * t267 + t270 * t161;
t72 = pkin(4) * t223 - qJ(5) * t191 + t93;
t79 = -qJ(5) * t190 + t94;
t44 = t262 * t72 + t367 * t79;
t382 = t101 * t99;
t381 = t284 * t99;
t380 = t117 * t99;
t132 = t190 * t367 + t262 * t191;
t379 = t132 * t85;
t376 = t262 * t67;
t373 = t85 * t283;
t371 = t219 * pkin(5) + t370;
t366 = qJD(6) * t99;
t365 = t101 * t284;
t364 = t284 ^ 2;
t363 = t284 * t210;
t362 = t117 ^ 2;
t361 = t117 * t219;
t360 = t117 * t210;
t359 = t284 * t219;
t358 = t179 * t215;
t357 = t179 * t219;
t356 = t290 * t179;
t355 = t290 * t219;
t354 = t208 * t223;
t353 = t210 * t219;
t352 = t215 * t249;
t350 = t219 * t215;
t349 = t219 * t249;
t346 = t237 * t266;
t344 = t259 * qJD(1) ^ 2;
t341 = t267 * t208;
t339 = -t267 * t131 - t179 * t329;
t335 = t268 ^ 2 - t271 ^ 2;
t326 = qJD(2) - t249;
t321 = t271 * t344;
t316 = t271 * t324;
t7 = t367 * t25 - t262 * t29;
t123 = t183 * t263 - t368 * t184;
t308 = t210 * t270;
t305 = t249 + t332;
t302 = t268 * t321;
t301 = -t53 * t345 + t404 * t99;
t52 = -t266 * t208 - t210 * t327 - t269 * t86 + t284 * t328;
t298 = t101 * t403 + t52 * t283;
t295 = -t117 * t410 - t237 * t85;
t294 = pkin(1) * t400;
t293 = t283 * t208 - t210 * t403;
t39 = pkin(10) * t223 + t44;
t153 = t197 * t368 - t263 * t212;
t141 = -t265 * pkin(3) - t153;
t105 = t190 * pkin(4) + t141;
t133 = -t262 * t190 + t191 * t367;
t59 = t132 * pkin(5) - t133 * pkin(10) + t105;
t16 = t266 * t59 + t269 * t39;
t15 = -t266 * t39 + t269 * t59;
t104 = t133 * t269 + t223 * t266;
t289 = t259 * t268 * t316;
t288 = t269 * t85 + (-t117 * t266 - t328) * t401;
t287 = t270 * t208 - t210 * t411;
t87 = pkin(4) * t151 + t123;
t11 = -t262 * t42 + t36 * t367;
t30 = t367 * t61 - t376;
t43 = -t262 * t79 + t367 * t72;
t255 = pkin(4) * t262 + pkin(10);
t26 = -t210 * pkin(5) - t30;
t286 = -t255 * t85 + t26 * t401;
t221 = -pkin(8) * t299 + t245;
t281 = t121 * t210 - t208 * t256;
t229 = t336 * qJD(2);
t274 = t1 * t269 - t2 * t266 + (-t14 * t266 + t269 * t291) * qJD(6);
t273 = -t280 * t401 - t346 * t85;
t257 = -pkin(4) * t367 - pkin(5);
t233 = -pkin(8) * t343 + t252;
t228 = -pkin(8) * t319 + t248;
t227 = t336 * qJD(1);
t226 = -pkin(8) * t320 + t247;
t222 = qJD(1) * t229;
t211 = t215 ^ 2;
t177 = t262 * t235 + t313 * t367;
t106 = t210 * t218 + t354;
t103 = t133 * t266 - t223 * t269;
t96 = -t262 * t151 + t152 * t367;
t95 = t151 * t367 + t262 * t152;
t63 = -pkin(4) * t290 + pkin(5) * t284 + pkin(10) * t117;
t58 = qJD(6) * t104 - t218 * t269 + t266 * t96;
t57 = t133 * t328 - t218 * t266 - t223 * t327 - t269 * t96;
t38 = -t223 * pkin(5) - t43;
t34 = t367 * t66 - t376;
t33 = t262 * t66 + t64;
t32 = pkin(5) * t95 - pkin(10) * t96 + t87;
t18 = t266 * t63 + t269 * t34;
t17 = -t266 * t34 + t269 * t63;
t10 = pkin(10) * t218 + t12;
t9 = -t218 * pkin(5) - t11;
t5 = -pkin(5) * t208 - t7;
t4 = -qJD(6) * t16 - t266 * t10 + t269 * t32;
t3 = qJD(6) * t15 + t269 * t10 + t266 * t32;
t13 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t289, t335 * t400, t305 * t271 * t331, -0.2e1 * t289, -t305 * t319, 0, -t222 * t265 - t229 * t249 + t268 * t294, -t221 * t265 - t228 * t249 + t271 * t294 (t221 * t271 + t222 * t268 + (-t226 * t271 - t227 * t268) * qJD(2) + (t228 * t271 + t229 * t268 + (-t233 * t271 - t268 * t336) * qJD(2)) * qJD(1)) * t264, t221 * t336 - t222 * t233 - t226 * t229 + t227 * t228, -t219 * t217 + t224 * t277, -t224 * t208 + t217 * t215 - t219 * t218 - t223 * t277, -t217 * t249 + t265 * t277, t215 * t218 + t354, -t208 * t265 - t218 * t249, 0, -t108 * t265 - t123 * t249 + t238 * t208 + t230 * t218 + (qJD(1) * t223 + t215) * t303, -t124 * t249 - t109 * t265 + t238 * t277 - t230 * t217 + (qJD(1) * t224 + t219) * t303, t108 * t224 - t109 * t223 + t123 * t219 - t124 * t215 + t127 * t217 - t128 * t218 - t153 * t277 - t154 * t208, -t108 * t153 + t109 * t154 - t127 * t123 + t128 * t124 + (t230 + t334) * t303, -t130 * t191 - t152 * t290, t130 * t190 - t131 * t191 + t151 * t290 - t152 * t179, -t130 * t223 + t152 * t210 + t191 * t208 - t218 * t290, t131 * t190 + t151 * t179, -t131 * t223 - t151 * t210 - t179 * t218 - t190 * t208, t106, t108 * t190 + t121 * t151 + t123 * t179 + t131 * t141 + t208 * t93 + t210 * t56 + t218 * t81 + t223 * t48, t108 * t191 + t121 * t152 - t123 * t290 - t130 * t141 - t208 * t94 - t210 * t55 - t218 * t82 - t223 * t47, t130 * t93 - t131 * t94 - t151 * t82 - t152 * t81 - t179 * t55 - t190 * t47 - t191 * t48 + t290 * t56, t108 * t141 + t121 * t123 + t47 * t94 + t48 * t93 + t55 * t82 + t56 * t81, t133 * t86 + t284 * t96, -t117 * t96 - t132 * t86 - t133 * t85 - t284 * t95, t133 * t208 + t210 * t96 + t218 * t284 + t223 * t86, t117 * t95 + t379, -t117 * t218 - t132 * t208 - t210 * t95 - t223 * t85, t106, t105 * t85 + t11 * t210 + t117 * t87 + t132 * t76 + t208 * t43 + t218 * t30 + t223 * t7 + t95 * t97, t105 * t86 - t12 * t210 + t133 * t76 - t208 * t44 - t218 * t31 - t223 * t8 + t284 * t87 + t96 * t97, -t11 * t284 - t117 * t12 - t132 * t8 - t133 * t7 - t30 * t96 - t31 * t95 - t43 * t86 - t44 * t85, t105 * t76 + t11 * t30 + t12 * t31 + t43 * t7 + t44 * t8 + t87 * t97, -t101 * t57 - t104 * t52, -t101 * t58 + t103 * t52 - t104 * t53 + t57 * t99, t101 * t95 + t104 * t85 - t132 * t52 - t401 * t57, t103 * t53 + t58 * t99, -t103 * t85 - t132 * t53 - t401 * t58 - t95 * t99, t401 * t95 + t379, t103 * t5 + t132 * t2 + t15 * t85 + t26 * t58 - t291 * t95 + t38 * t53 + t4 * t401 + t9 * t99, -t1 * t132 + t101 * t9 + t104 * t5 - t14 * t95 - t16 * t85 - t26 * t57 - t3 * t401 - t38 * t52, -t1 * t103 - t101 * t4 - t104 * t2 - t14 * t58 + t15 * t52 - t16 * t53 - t291 * t57 - t3 * t99, t1 * t16 + t14 * t3 + t15 * t2 + t26 * t9 - t291 * t4 + t38 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t302, t335 * t344, t326 * t271 * t333, t302, -t326 * t320, 0, -t264 * pkin(8) * t316 + t227 * t249 + (-t265 * t324 + t344) * t387, pkin(1) * t321 + t226 * t249 - t221, 0, 0, t350, -t211 + t388, t277 + t352, -t350, -qJD(2) * t219 + t349, 0, t143 * t249 - t215 * t304 - t219 * t230 - t108, t144 * t249 + t230 * t215 - t219 * t304 - t109 (t128 - t143) * t219 + (t144 - t127) * t215 + (-t263 * t208 - t277 * t368) * pkin(2), t127 * t143 - t128 * t144 + (-t108 * t368 + t109 * t263 - t230 * t320) * pkin(2), -t130 * t267 - t290 * t308 (-t130 - t358) * t270 + t395 + t339, t210 * t308 + t341 + t355, -t131 * t270 + t179 * t309, t287 + t357, -t353, -t108 * t270 + t258 * t131 - t143 * t179 - t81 * t219 + (-t256 * t329 - t91) * t210 + t281 * t267, t108 * t267 - t258 * t130 + t143 * t290 + t82 * t219 + (t256 * t330 + t92) * t210 + t281 * t270, t92 * t179 - t91 * t290 + (-t131 * t256 - t215 * t81 + t47 + (-t256 * t290 - t81) * qJD(4)) * t270 + (-t130 * t256 - t215 * t82 - t48 + (t179 * t256 - t82) * qJD(4)) * t267, t108 * t258 - t121 * t143 - t81 * t91 - t82 * t92 + (-t48 * t267 + t47 * t270 + (-t267 * t82 - t270 * t81) * qJD(4)) * t256, t86 * t237 + t284 * t410, t295 - t389, -t359 + t391, t117 * t403 - t373, t293 + t361, -t353, t117 * t296 - t177 * t208 - t210 * t370 - t30 * t219 + t243 * t85 - t283 * t76 + t403 * t97, -t178 * t208 - t210 * t369 + t31 * t219 + t76 * t237 + t243 * t86 + t284 * t296 + t410 * t97, -t117 * t369 + t177 * t86 - t178 * t85 - t7 * t237 + t283 * t8 + t284 * t370 - t30 * t410 - t31 * t403, -t7 * t177 + t8 * t178 + t76 * t243 + t296 * t97 - t30 * t370 + t31 * t369, -t101 * t279 - t345 * t52 (t52 + t366) * t346 - t394 + t301, t298 + t392, t280 * t99 + t346 * t53, t273 - t393, t401 * t403 - t373, t113 * t85 + t177 * t53 - t2 * t283 + t26 * t280 - t291 * t403 + t346 * t5 + t371 * t99 - t385 * t401, t1 * t283 + t101 * t371 - t114 * t85 - t14 * t403 - t177 * t52 - t26 * t279 + t345 * t5 + t384 * t401, t113 * t52 - t114 * t53 + t384 * t99 + t312 * t14 - t404 * t291 + t385 * t101 + (-t1 * t266 - t2 * t269 + (-t14 * t269 - t266 * t291) * qJD(6)) * t237, t1 * t114 + t2 * t113 - t14 * t384 + t5 * t177 + t26 * t371 + t291 * t385; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t208 + t349, t277 - t352, -t211 - t388, t127 * t219 + t128 * t215 + t244, 0, 0, 0, 0, 0, 0, t287 - t357, -t210 ^ 2 * t270 - t341 + t355 (t130 - t358) * t270 - t395 + t339, -t121 * t219 + t267 * t399 + t270 * t398, 0, 0, 0, 0, 0, 0, t293 - t361, -t359 - t391, t295 + t389, -t97 * t219 + t8 * t237 + t283 * t7 - t30 * t403 + t31 * t410, 0, 0, 0, 0, 0, 0, t273 + t393, t298 - t392 (-t52 + t366) * t346 + t394 + t301, -t14 * t404 + t237 * t274 + t26 * t403 - t283 * t5 - t291 * t312; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t356, -t179 ^ 2 + t290 ^ 2, t179 * t210 - t130, t356, -t210 * t290 - t131, t208, t121 * t290 + t398, t121 * t179 - t399, 0, 0, t405, -t362 + t364, t86 + t360, -t405, -t85 + t363, t208, -t97 * t284 + t33 * t210 + (t117 * t290 + t208 * t367) * pkin(4) + t7, t97 * t117 + t34 * t210 + (-t208 * t262 + t284 * t290) * pkin(4) - t8 (-t262 * t85 - t367 * t86) * pkin(4) + (t31 - t33) * t284 + (t34 - t30) * t117, t30 * t33 - t31 * t34 + (t262 * t8 + t290 * t97 + t367 * t7) * pkin(4), t101 * t306 - t52 * t266 (-t52 - t380) * t269 - t397 + t383, -t365 - t402, -t53 * t269 + t307 * t99, t288 + t381, -t401 * t284, t291 * t284 + t257 * t53 - t5 * t269 - t33 * t99 + (-t255 * t327 - t17) * t401 + t286 * t266, -t33 * t101 + t14 * t284 - t257 * t52 + t5 * t266 + (t255 * t328 + t18) * t401 + t286 * t269, t17 * t101 + t18 * t99 + (t117 * t291 - t255 * t53 + t1 + (t101 * t255 + t291) * qJD(6)) * t269 + (-t117 * t14 - t255 * t52 - t2 + (t255 * t99 - t14) * qJD(6)) * t266, -t14 * t18 + t17 * t291 + t255 * t274 + t5 * t257 - t26 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t85 + t363, t86 - t360, -t362 - t364, t117 * t31 + t284 * t30 + t76, 0, 0, 0, 0, 0, 0, t288 - t381, -t365 + t402 (t52 - t380) * t269 + t397 + t383, -t26 * t284 + t408 * t266 + t409 * t269; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t382, t101 ^ 2 - t99 ^ 2, t401 * t99 - t52, -t382, -t314 + (-qJD(6) + t401) * t101, t85, -t26 * t101 + t409, t26 * t99 - t408, 0, 0;];
tauc_reg  = t13;
