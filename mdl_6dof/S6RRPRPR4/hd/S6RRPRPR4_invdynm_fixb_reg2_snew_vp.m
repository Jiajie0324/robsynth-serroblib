% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRPRPR4
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 13:41
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRPRPR4_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR4_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR4_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR4_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR4_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR4_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 13:39:50
% EndTime: 2019-05-06 13:41:26
% DurationCPUTime: 102.26s
% Computational Cost: add. (1147666->1193), mult. (3060632->1832), div. (0->0), fcn. (2474620->14), ass. (0->858)
t2177 = sin(pkin(12));
t2178 = sin(pkin(11));
t2181 = cos(pkin(11));
t2179 = sin(pkin(6));
t2189 = cos(qJ(2));
t2381 = qJD(1) * t2189;
t2326 = t2179 * t2381;
t2185 = sin(qJ(2));
t2345 = t2179 * t2185;
t2327 = qJD(1) * t2345;
t2139 = t2178 * t2326 + t2181 * t2327;
t2182 = cos(pkin(6));
t2169 = qJD(1) * t2182 + qJD(2);
t2184 = sin(qJ(4));
t2188 = cos(qJ(4));
t2114 = -t2184 * t2139 + t2169 * t2188;
t2115 = t2139 * t2188 + t2169 * t2184;
t2180 = cos(pkin(12));
t2058 = -t2180 * t2114 + t2115 * t2177;
t2060 = t2177 * t2114 + t2180 * t2115;
t1986 = t2060 * t2058;
t2333 = qJDD(1) * t2185;
t2145 = (qJD(2) * t2381 + t2333) * t2179;
t2334 = qJDD(1) * t2179;
t2146 = -qJD(2) * t2327 + t2189 * t2334;
t2303 = t2145 * t2178 - t2181 * t2146;
t2100 = qJDD(4) + t2303;
t2398 = -t1986 + t2100;
t2410 = t2177 * t2398;
t2409 = t2180 * t2398;
t2183 = sin(qJ(6));
t2137 = t2178 * t2327 - t2181 * t2326;
t2133 = qJD(4) + t2137;
t2187 = cos(qJ(6));
t2017 = t2060 * t2183 - t2187 * t2133;
t2019 = t2060 * t2187 + t2133 * t2183;
t1942 = t2019 * t2017;
t2102 = t2181 * t2145 + t2178 * t2146;
t2332 = t2182 * qJDD(1) + qJDD(2);
t2035 = -t2115 * qJD(4) - t2184 * t2102 + t2188 * t2332;
t2227 = -t2188 * t2102 - t2184 * t2332;
t2036 = t2114 * qJD(4) - t2227;
t2305 = -t2180 * t2035 + t2036 * t2177;
t1960 = qJDD(6) + t2305;
t2399 = -t1942 + t1960;
t2408 = t2183 * t2399;
t2066 = t2114 * t2115;
t2397 = t2066 + t2100;
t2407 = t2184 * t2397;
t2406 = t2187 * t2399;
t2405 = t2188 * t2397;
t2349 = t2169 * t2139;
t2404 = t2303 + t2349;
t2360 = t2133 * t2060;
t1906 = t2305 + t2360;
t2174 = t2179 ^ 2;
t2191 = qJD(1) ^ 2;
t2343 = t2182 * t2191;
t2382 = qJD(1) * t2169;
t2403 = t2174 * (-t2343 + t2382);
t2354 = t2139 * t2137;
t2286 = t2332 - t2354;
t2402 = t2178 * t2286;
t2401 = t2181 * t2286;
t2154 = t2169 * t2327;
t2121 = t2146 - t2154;
t2400 = t2182 * t2121;
t2380 = qJD(5) * t2058;
t2044 = -0.2e1 * t2380;
t2186 = sin(qJ(1));
t2190 = cos(qJ(1));
t2164 = g(1) * t2186 - t2190 * g(2);
t2233 = qJDD(1) * pkin(1) + t2164;
t2341 = t2185 * t2191;
t2317 = t2174 * t2341;
t2201 = (t2182 * t2233 + pkin(2) * t2317 + (pkin(8) * t2343 + qJ(3) * t2382 - g(3)) * t2179) * t2189;
t2200 = t2178 * t2201;
t2384 = pkin(8) * t2179;
t2208 = t2191 * t2384 + t2233;
t2205 = t2182 * t2208;
t2165 = g(1) * t2190 + g(2) * t2186;
t2206 = -pkin(1) * t2191 + pkin(8) * t2334 - t2165;
t2087 = -g(3) * t2345 + t2185 * t2205 + t2189 * t2206;
t2228 = pkin(2) * t2169 - qJ(3) * t2327;
t2176 = t2189 ^ 2;
t2346 = t2174 * t2191;
t2318 = t2176 * t2346;
t2021 = -pkin(2) * t2318 + t2146 * qJ(3) - t2169 * t2228 + t2087;
t2204 = t2185 * t2206;
t2203 = pkin(2) * t2332 - t2145 * qJ(3) - t2204;
t2395 = t2181 * t2021 + t2178 * t2203;
t2195 = t2200 + t2395;
t2310 = t2332 * pkin(9);
t2095 = pkin(3) * t2137 - pkin(9) * t2139;
t2392 = 2 * qJD(3);
t2339 = t2392 + t2095;
t2153 = t2169 ^ 2;
t2383 = t2153 * pkin(3);
t2194 = -t2137 * t2339 + t2195 + t2310 - t2383;
t2126 = t2182 * g(3) + t2179 * t2208;
t2054 = t2146 * pkin(2) + qJ(3) * t2318 - t2228 * t2327 - qJDD(3) + t2126;
t2125 = t2169 * t2137;
t2396 = -t2125 + t2102;
t2394 = -pkin(9) * t2396 - t2054;
t2197 = pkin(3) * t2404 + t2394;
t1819 = t2184 * t2197 + t2188 * t2194;
t2078 = pkin(4) * t2133 - qJ(5) * t2115;
t2393 = t2114 ^ 2;
t1770 = -pkin(4) * t2393 + qJ(5) * t2035 - t2078 * t2133 + t1819;
t2081 = t2133 * t2114;
t1993 = -t2081 + t2036;
t2196 = t2188 * t2197;
t2193 = pkin(4) * t2397 - qJ(5) * t1993 - t2184 * t2194 + t2196;
t2337 = t2180 * t1770 + t2177 * t2193;
t1668 = t2044 + t2337;
t1980 = pkin(5) * t2058 - pkin(10) * t2060;
t2096 = t2133 ^ 2;
t1657 = -pkin(5) * t2096 + pkin(10) * t2100 - t1980 * t2058 + t1668;
t2306 = t2178 * t2021 - t2181 * (t2201 + t2203);
t1882 = -t2332 * pkin(3) - t2153 * pkin(9) + t2139 * t2339 + t2306;
t1821 = -t2035 * pkin(4) - t2393 * qJ(5) + t2115 * t2078 + qJDD(5) + t1882;
t1963 = t2035 * t2177 + t2036 * t2180;
t2024 = t2133 * t2058;
t1909 = t1963 - t2024;
t1717 = pkin(5) * t1906 - pkin(10) * t1909 + t1821;
t1599 = t1657 * t2183 - t2187 * t1717;
t1600 = t1657 * t2187 + t1717 * t2183;
t1551 = t2183 * t1599 + t2187 * t1600;
t2331 = -0.2e1 * qJD(3) * t2137;
t2198 = -t2137 * t2095 + t2310 + t2331 + t2395;
t2199 = t2184 * t2200;
t1818 = t2184 * (t2198 - t2383) - t2196 + t2199;
t1720 = t2184 * t1818 + t2188 * t1819;
t2155 = t2169 * t2326;
t2118 = t2155 + t2145;
t2015 = t2017 ^ 2;
t2016 = t2019 ^ 2;
t2055 = qJD(6) + t2058;
t2053 = t2055 ^ 2;
t2056 = t2058 ^ 2;
t2057 = t2060 ^ 2;
t2112 = t2115 ^ 2;
t2135 = t2137 ^ 2;
t2136 = t2139 ^ 2;
t2391 = 0.2e1 * qJD(5);
t2390 = pkin(2) * t2179;
t2389 = pkin(2) * t2182;
t2388 = pkin(3) * t2178;
t2309 = t2177 * t1770 - t2180 * t2193;
t1667 = t2060 * t2391 + t2309;
t1590 = -t1667 * t2180 + t1668 * t2177;
t2387 = pkin(4) * t1590;
t1910 = t1963 + t2024;
t2232 = -t2305 + t2360;
t1810 = -t1910 * t2180 + t2177 * t2232;
t2386 = pkin(4) * t1810;
t2385 = pkin(5) * t2177;
t2379 = t1590 * t2184;
t2378 = t1590 * t2188;
t2377 = t1821 * t2177;
t2376 = t1821 * t2180;
t1926 = t2139 * t2392 + t2306;
t1927 = t2195 + t2331;
t1836 = -t1926 * t2181 + t1927 * t2178;
t2375 = t1836 * t2185;
t2374 = t1836 * t2189;
t1849 = t1942 + t1960;
t2373 = t1849 * t2183;
t2372 = t1849 * t2187;
t1956 = t1986 + t2100;
t2371 = t1956 * t2177;
t2370 = t1956 * t2180;
t2008 = -t2066 + t2100;
t2369 = t2008 * t2184;
t2368 = t2008 * t2188;
t2367 = t2054 * t2178;
t2366 = t2054 * t2181;
t2365 = t2055 * t2183;
t2364 = t2055 * t2187;
t2091 = -t2332 - t2354;
t2363 = t2091 * t2178;
t2362 = t2091 * t2181;
t2361 = t2100 * t2178;
t2359 = t2133 * t2115;
t2358 = t2133 * t2177;
t2357 = t2133 * t2180;
t2356 = t2133 * t2184;
t2355 = t2133 * t2188;
t2163 = t2189 * t2317;
t2143 = t2163 + t2332;
t2353 = t2143 * t2185;
t2352 = t2143 * t2189;
t2144 = -t2163 + t2332;
t2351 = t2144 * t2185;
t2350 = t2144 * t2189;
t2348 = t2169 * t2178;
t2347 = t2169 * t2181;
t1656 = -t2100 * pkin(5) - t2096 * pkin(10) + (t2391 + t1980) * t2060 + t2309;
t1653 = t2183 * t1656;
t1877 = t2184 * t1882;
t2342 = t2185 * t2126;
t1654 = t2187 * t1656;
t1878 = t2188 * t1882;
t2340 = t2189 * t2126;
t2338 = -pkin(5) * t1656 + pkin(10) * t1551;
t2336 = -pkin(3) * t1882 + pkin(9) * t1720;
t2175 = t2185 ^ 2;
t2335 = t2175 + t2176;
t2330 = -pkin(3) * t2181 - pkin(2);
t2329 = -pkin(5) * t2180 - pkin(4);
t2328 = t2179 * t2382;
t2325 = t2177 * t1942;
t2324 = t2180 * t1942;
t2323 = t2178 * t1986;
t2322 = t2181 * t1986;
t2321 = t2178 * t2066;
t2320 = t2181 * t2066;
t2319 = t2175 * t2346;
t2316 = t2179 * t2354;
t2315 = t2182 * t2354;
t1916 = -t2016 - t2053;
t1788 = -t1916 * t2183 - t2372;
t2254 = -t2187 * t1963 - t2183 * t2100;
t1834 = (qJD(6) + t2055) * t2017 + t2254;
t2314 = pkin(5) * t1834 + pkin(10) * t1788 + t1653;
t1905 = -t2053 - t2015;
t1781 = t1905 * t2187 - t2408;
t2307 = -t2183 * t1963 + t2187 * t2100;
t1866 = -qJD(6) * t2019 + t2307;
t1967 = t2055 * t2019;
t1830 = t1866 - t1967;
t2313 = pkin(5) * t1830 + pkin(10) * t1781 - t1654;
t2043 = -t2112 - t2096;
t1954 = -t2043 * t2184 - t2368;
t1994 = (-qJD(4) - t2133) * t2114 + t2227;
t2312 = pkin(3) * t1994 + pkin(9) * t1954 + t1877;
t2029 = -t2096 - t2393;
t1941 = t2029 * t2188 - t2407;
t1990 = t2035 - t2359;
t2311 = pkin(3) * t1990 + pkin(9) * t1941 - t1878;
t1591 = t1667 * t2177 + t2180 * t1668;
t1837 = t1926 * t2178 + t2181 * t1927;
t2302 = -t2164 * t2186 - t2190 * t2165;
t2301 = t2179 * t2332;
t1520 = t1551 * t2180 + t1656 * t2177;
t1550 = -t1599 * t2187 + t1600 * t2183;
t1468 = qJ(5) * t1520 + (-pkin(10) * t2177 + t2329) * t1550;
t1519 = t1551 * t2177 - t1656 * t2180;
t1482 = -qJ(5) * t1519 + (-pkin(10) * t2180 + t2385) * t1550;
t1492 = -t1519 * t2184 + t1520 * t2188;
t2300 = -pkin(3) * t1550 + pkin(9) * t1492 + t2188 * t1468 + t2184 * t1482;
t1831 = (-qJD(6) + t2055) * t2019 + t2307;
t1867 = -qJD(6) * t2017 - t2254;
t1966 = t2055 * t2017;
t1833 = t1867 + t1966;
t1726 = t1831 * t2183 - t1833 * t2187;
t1532 = -pkin(10) * t1726 - t1550;
t1728 = t1831 * t2187 + t1833 * t2183;
t1883 = t2015 + t2016;
t1684 = t1728 * t2180 - t1883 * t2177;
t1500 = qJ(5) * t1684 + t2177 * t1532 + t1726 * t2329;
t1683 = t1728 * t2177 + t1883 * t2180;
t1507 = -qJ(5) * t1683 + t1532 * t2180 + t1726 * t2385;
t1615 = -t1683 * t2184 + t1684 * t2188;
t2299 = -pkin(3) * t1726 + pkin(9) * t1615 + t2188 * t1500 + t2184 * t1507;
t1780 = t1905 * t2183 + t2406;
t1583 = -pkin(5) * t1780 + t1599;
t1618 = -pkin(10) * t1780 + t1653;
t1696 = t1781 * t2180 - t1830 * t2177;
t1516 = -pkin(4) * t1780 + qJ(5) * t1696 + t1583 * t2180 + t1618 * t2177;
t1695 = t1781 * t2177 + t1830 * t2180;
t1527 = -qJ(5) * t1695 - t1583 * t2177 + t1618 * t2180;
t1627 = -t1695 * t2184 + t1696 * t2188;
t2298 = -pkin(3) * t1780 + pkin(9) * t1627 + t2188 * t1516 + t2184 * t1527;
t1787 = t1916 * t2187 - t2373;
t1584 = -pkin(5) * t1787 + t1600;
t1620 = -pkin(10) * t1787 + t1654;
t1700 = t1788 * t2180 - t1834 * t2177;
t1518 = -pkin(4) * t1787 + qJ(5) * t1700 + t1584 * t2180 + t1620 * t2177;
t1699 = t1788 * t2177 + t1834 * t2180;
t1529 = -qJ(5) * t1699 - t1584 * t2177 + t1620 * t2180;
t1635 = -t1699 * t2184 + t1700 * t2188;
t2297 = -pkin(3) * t1787 + pkin(9) * t1635 + t2188 * t1518 + t2184 * t1529;
t1812 = t1910 * t2177 + t2180 * t2232;
t1929 = -t2056 - t2057;
t1567 = -pkin(4) * t1929 + qJ(5) * t1812 + t1591;
t1576 = -qJ(5) * t1810 - t1590;
t1705 = -t1810 * t2184 + t1812 * t2188;
t2296 = -pkin(3) * t1929 + pkin(9) * t1705 + t2188 * t1567 + t2184 * t1576;
t2295 = pkin(5) * t1883 + pkin(10) * t1728 + t1551;
t1975 = -t2096 - t2056;
t1854 = t1975 * t2180 - t2410;
t1698 = -pkin(4) * t1906 + qJ(5) * t1854 - t2376;
t1853 = t1975 * t2177 + t2409;
t1744 = -qJ(5) * t1853 + t2377;
t1763 = -t1853 * t2184 + t1854 * t2188;
t2294 = -pkin(3) * t1906 + pkin(9) * t1763 + t2188 * t1698 + t2184 * t1744;
t2004 = -t2057 - t2096;
t1876 = -t2004 * t2177 - t2370;
t1707 = -pkin(4) * t1909 + qJ(5) * t1876 + t2377;
t1875 = t2004 * t2180 - t2371;
t1752 = -qJ(5) * t1875 + t2376;
t1791 = -t1875 * t2184 + t1876 * t2188;
t2293 = -pkin(3) * t1909 + pkin(9) * t1791 + t2188 * t1707 + t2184 * t1752;
t2207 = t2035 + t2359;
t1892 = t1993 * t2184 + t2188 * t2207;
t2020 = t2112 + t2393;
t2292 = pkin(3) * t2020 + pkin(9) * t1892 + t1720;
t2291 = pkin(4) * t1519 + t2338;
t2290 = pkin(4) * t1875 - t2337;
t2162 = qJDD(1) * t2190 - t2186 * t2191;
t2289 = -pkin(7) * t2162 - g(3) * t2186;
t2134 = -t2153 - t2319;
t2092 = -t2134 * t2185 - t2350;
t2288 = pkin(8) * t2092 - t2342;
t2150 = -t2318 - t2153;
t2105 = t2150 * t2189 - t2353;
t2287 = pkin(8) * t2105 + t2340;
t1472 = t1492 * t2178 - t1550 * t2181;
t1473 = t1492 * t2181 + t1550 * t2178;
t2284 = t1472 * t2189 + t1473 * t2185;
t1542 = t1591 * t2188 - t2379;
t1533 = t1542 * t2178 - t1821 * t2181;
t1534 = t1542 * t2181 + t1821 * t2178;
t2283 = t1533 * t2189 + t1534 * t2185;
t1581 = t1615 * t2178 - t1726 * t2181;
t1582 = t1615 * t2181 + t1726 * t2178;
t2282 = t1581 * t2189 + t1582 * t2185;
t1832 = t1867 - t1966;
t1727 = t1830 * t2187 - t1832 * t2183;
t1939 = t2016 - t2015;
t1691 = t1727 * t2177 - t1939 * t2180;
t1692 = t1727 * t2180 + t1939 * t2177;
t1624 = -t1691 * t2184 + t1692 * t2188;
t1725 = t1830 * t2183 + t1832 * t2187;
t1585 = t1624 * t2178 - t1725 * t2181;
t1586 = t1624 * t2181 + t1725 * t2178;
t2281 = t1585 * t2189 + t1586 * t2185;
t1592 = t1627 * t2178 - t1780 * t2181;
t1593 = t1627 * t2181 + t1780 * t2178;
t2280 = t1592 * t2189 + t1593 * t2185;
t1595 = t1635 * t2178 - t1787 * t2181;
t1596 = t1635 * t2181 + t1787 * t2178;
t2279 = t1595 * t2189 + t1596 * t2185;
t1965 = -t2016 + t2053;
t1807 = -t1965 * t2183 + t2406;
t1712 = t1807 * t2177 - t1833 * t2180;
t1714 = t1807 * t2180 + t1833 * t2177;
t1638 = -t1712 * t2184 + t1714 * t2188;
t1805 = t1965 * t2187 + t2408;
t1605 = t1638 * t2178 - t1805 * t2181;
t1607 = t1638 * t2181 + t1805 * t2178;
t2278 = t1605 * t2189 + t1607 * t2185;
t1964 = t2015 - t2053;
t1808 = t1964 * t2187 - t2373;
t1829 = -t1866 - t1967;
t1713 = t1808 * t2177 + t1829 * t2180;
t1715 = t1808 * t2180 - t1829 * t2177;
t1639 = -t1713 * t2184 + t1715 * t2188;
t1806 = t1964 * t2183 + t2372;
t1606 = t1639 * t2178 - t1806 * t2181;
t1608 = t1639 * t2181 + t1806 * t2178;
t2277 = t1606 * t2189 + t1608 * t2185;
t1823 = -t1866 * t2183 + t2017 * t2364;
t1771 = t1823 * t2177 + t2324;
t1773 = t1823 * t2180 - t2325;
t1676 = -t1771 * t2184 + t1773 * t2188;
t1822 = -t2187 * t1866 - t2017 * t2365;
t1649 = t1676 * t2178 + t1822 * t2181;
t1651 = t1676 * t2181 - t1822 * t2178;
t2276 = t1649 * t2189 + t1651 * t2185;
t1825 = t1867 * t2187 - t2019 * t2365;
t1772 = t1825 * t2177 - t2324;
t1774 = t1825 * t2180 + t2325;
t1677 = -t1772 * t2184 + t1774 * t2188;
t1824 = t1867 * t2183 + t2019 * t2364;
t1650 = t1677 * t2178 - t1824 * t2181;
t1652 = t1677 * t2181 + t1824 * t2178;
t2275 = t1650 * t2189 + t1652 * t2185;
t1856 = (-t2017 * t2187 + t2019 * t2183) * t2055;
t1813 = t1856 * t2177 - t1960 * t2180;
t1814 = t1856 * t2180 + t1960 * t2177;
t1711 = -t1813 * t2184 + t1814 * t2188;
t1855 = (-t2017 * t2183 - t2019 * t2187) * t2055;
t1670 = t1711 * t2178 - t1855 * t2181;
t1671 = t1711 * t2181 + t1855 * t2178;
t2274 = t1670 * t2189 + t1671 * t2185;
t1678 = t1720 * t2178 - t1882 * t2181;
t1679 = t1720 * t2181 + t1882 * t2178;
t2273 = t1678 * t2189 + t1679 * t2185;
t1680 = t1705 * t2178 - t1929 * t2181;
t1681 = t1705 * t2181 + t1929 * t2178;
t2272 = t1680 * t2189 + t1681 * t2185;
t1809 = -t1906 * t2177 + t1909 * t2180;
t1811 = -t1906 * t2180 - t1909 * t2177;
t1704 = -t1809 * t2184 + t1811 * t2188;
t1981 = t2057 - t2056;
t1687 = t1704 * t2178 - t1981 * t2181;
t1688 = t1704 * t2181 + t1981 * t2178;
t2271 = t1687 * t2189 + t1688 * t2185;
t1730 = t1763 * t2178 - t1906 * t2181;
t1731 = t1763 * t2181 + t1906 * t2178;
t2270 = t1730 * t2189 + t1731 * t2185;
t1740 = t1791 * t2178 - t1909 * t2181;
t1741 = t1791 * t2181 + t1909 * t2178;
t2269 = t1740 * t2189 + t1741 * t2185;
t2023 = -t2057 + t2096;
t1885 = t2023 * t2180 + t2410;
t1887 = -t2023 * t2177 + t2409;
t1799 = -t1885 * t2184 + t1887 * t2188;
t1747 = t1799 * t2178 - t1910 * t2181;
t1749 = t1799 * t2181 + t1910 * t2178;
t2268 = t1747 * t2189 + t1749 * t2185;
t2022 = t2056 - t2096;
t1886 = t2022 * t2177 + t2370;
t1888 = t2022 * t2180 - t2371;
t1800 = -t1886 * t2184 + t1888 * t2188;
t1748 = t1800 * t2178 - t2181 * t2232;
t1750 = t1800 * t2181 + t2178 * t2232;
t2267 = t1748 * t2189 + t1750 * t2185;
t1898 = t2058 * t2358 - t2180 * t2305;
t1899 = t2058 * t2357 + t2177 * t2305;
t1803 = -t1898 * t2184 + t1899 * t2188;
t1766 = t1803 * t2178 + t2322;
t1768 = t1803 * t2181 - t2323;
t2266 = t1766 * t2189 + t1768 * t2185;
t1900 = t1963 * t2177 + t2060 * t2357;
t1901 = t1963 * t2180 - t2060 * t2358;
t1804 = -t1900 * t2184 + t1901 * t2188;
t1767 = t1804 * t2178 - t2322;
t1769 = t1804 * t2181 + t2323;
t2265 = t1767 * t2189 + t1769 * t2185;
t1719 = -t1818 * t2188 + t1819 * t2184;
t2264 = t1837 * t2185 + t2374;
t1950 = (-t2058 * t2177 - t2060 * t2180) * t2133;
t1951 = (-t2058 * t2180 + t2060 * t2177) * t2133;
t1847 = -t1950 * t2184 + t1951 * t2188;
t2093 = t2181 * t2100;
t1842 = t1847 * t2178 - t2093;
t1843 = t1847 * t2181 + t2361;
t2263 = t1842 * t2189 + t1843 * t2185;
t1844 = t1892 * t2178 + t2020 * t2181;
t1845 = t1892 * t2181 - t2020 * t2178;
t2262 = t1844 * t2189 + t1845 * t2185;
t1992 = t2081 + t2036;
t1891 = t1990 * t2188 - t1992 * t2184;
t2065 = t2112 - t2393;
t1851 = t1891 * t2178 - t2065 * t2181;
t1852 = t1891 * t2181 + t2065 * t2178;
t2261 = t1851 * t2189 + t1852 * t2185;
t1859 = t1941 * t2178 + t1990 * t2181;
t1860 = t1941 * t2181 - t1990 * t2178;
t2260 = t1859 * t2189 + t1860 * t2185;
t1861 = t1954 * t2178 + t1994 * t2181;
t1862 = t1954 * t2181 - t1994 * t2178;
t2259 = t1861 * t2189 + t1862 * t2185;
t2080 = -t2112 + t2096;
t1972 = -t2080 * t2184 + t2405;
t1870 = t1972 * t2178 - t1993 * t2181;
t1872 = t1972 * t2181 + t1993 * t2178;
t2258 = t1870 * t2189 + t1872 * t2185;
t2079 = -t2096 + t2393;
t1973 = t2079 * t2188 - t2369;
t1871 = t1973 * t2178 - t2181 * t2207;
t1873 = t1973 * t2181 + t2178 * t2207;
t2257 = t1871 * t2189 + t1873 * t2185;
t1983 = -t2035 * t2184 - t2114 * t2355;
t1930 = t1983 * t2178 - t2320;
t1932 = t1983 * t2181 + t2321;
t2256 = t1930 * t2189 + t1932 * t2185;
t1985 = t2036 * t2188 - t2115 * t2356;
t1931 = t1985 * t2178 + t2320;
t1933 = t1985 * t2181 - t2321;
t2255 = t1931 * t2189 + t1933 * t2185;
t2006 = (t2114 * t2188 + t2115 * t2184) * t2133;
t1976 = t2006 * t2178 - t2093;
t1977 = t2006 * t2181 + t2361;
t2253 = t1976 * t2189 + t1977 * t2185;
t1997 = -t2178 * t2404 + t2181 * t2396;
t1999 = -t2178 * t2396 - t2181 * t2404;
t2252 = t1997 * t2189 + t1999 * t2185;
t2071 = t2125 + t2102;
t2231 = -t2303 + t2349;
t1998 = -t2071 * t2181 + t2178 * t2231;
t2000 = t2071 * t2178 + t2181 * t2231;
t2251 = t1998 * t2189 + t2000 * t2185;
t2088 = -t2153 - t2135;
t2011 = t2088 * t2178 + t2401;
t2012 = t2088 * t2181 - t2402;
t2250 = t2011 * t2189 + t2012 * t2185;
t2110 = -t2136 - t2153;
t2027 = t2110 * t2181 + t2363;
t2028 = -t2110 * t2178 + t2362;
t2249 = t2027 * t2189 + t2028 * t2185;
t2123 = -t2136 + t2153;
t2037 = t2123 * t2181 + t2402;
t2039 = -t2123 * t2178 + t2401;
t2248 = t2037 * t2189 + t2039 * t2185;
t2122 = t2135 - t2153;
t2038 = t2122 * t2178 - t2362;
t2040 = t2122 * t2181 + t2363;
t2247 = t2038 * t2189 + t2040 * t2185;
t2061 = t2137 * t2348 - t2181 * t2303;
t2062 = t2137 * t2347 + t2178 * t2303;
t2246 = t2061 * t2189 + t2062 * t2185;
t2063 = t2102 * t2178 + t2139 * t2347;
t2064 = t2102 * t2181 - t2139 * t2348;
t2245 = t2063 * t2189 + t2064 * t2185;
t2076 = (-t2137 * t2178 - t2139 * t2181) * t2169;
t2077 = (-t2137 * t2181 + t2139 * t2178) * t2169;
t2244 = t2076 * t2189 + t2077 * t2185;
t2086 = t2204 + (t2179 * g(3) - t2205) * t2189;
t2243 = -t2189 * t2086 + t2185 * t2087;
t2010 = t2086 * t2185 + t2087 * t2189;
t2242 = t2118 * t2189 + t2121 * t2185;
t2119 = -t2155 + t2145;
t2120 = t2146 + t2154;
t2241 = -t2119 * t2189 + t2120 * t2185;
t2240 = t2134 * t2189 - t2351;
t2148 = -t2319 + t2153;
t2239 = t2148 * t2189 + t2353;
t2238 = t2150 * t2185 + t2352;
t2149 = t2318 - t2153;
t2237 = t2149 * t2185 + t2350;
t2236 = t2164 * t2190 - t2165 * t2186;
t2235 = pkin(4) * t1699 + t2314;
t2234 = pkin(4) * t1695 + t2313;
t2230 = pkin(4) * t1683 + t2295;
t1580 = -pkin(4) * t1821 + qJ(5) * t1591;
t2229 = -pkin(3) * t1821 + pkin(9) * t1542 - qJ(5) * t2379 + t2188 * t1580;
t1491 = t1519 * t2188 + t1520 * t2184;
t1450 = -pkin(9) * t1491 - t1468 * t2184 + t1482 * t2188;
t1460 = -pkin(3) * t1491 - t2291;
t1435 = -pkin(2) * t1491 + qJ(3) * t1473 + t1450 * t2178 + t1460 * t2181;
t1440 = -qJ(3) * t1472 + t1450 * t2181 - t1460 * t2178;
t1453 = -t1472 * t2185 + t1473 * t2189;
t2226 = pkin(8) * t1453 + t1435 * t2189 + t1440 * t2185;
t1614 = t1683 * t2188 + t1684 * t2184;
t1471 = -pkin(9) * t1614 - t1500 * t2184 + t1507 * t2188;
t1497 = -pkin(3) * t1614 - t2230;
t1456 = -pkin(2) * t1614 + qJ(3) * t1582 + t1471 * t2178 + t1497 * t2181;
t1457 = -qJ(3) * t1581 + t1471 * t2181 - t1497 * t2178;
t1525 = -t1581 * t2185 + t1582 * t2189;
t2225 = pkin(8) * t1525 + t1456 * t2189 + t1457 * t2185;
t1541 = t1591 * t2184 + t2378;
t1494 = -pkin(9) * t1541 - qJ(5) * t2378 - t1580 * t2184;
t1503 = -pkin(3) * t1541 - t2387;
t1458 = -pkin(2) * t1541 + qJ(3) * t1534 + t1494 * t2178 + t1503 * t2181;
t1462 = -qJ(3) * t1533 + t1494 * t2181 - t1503 * t2178;
t1493 = -t1533 * t2185 + t1534 * t2189;
t2224 = pkin(8) * t1493 + t1458 * t2189 + t1462 * t2185;
t1626 = t1695 * t2188 + t1696 * t2184;
t1484 = -pkin(9) * t1626 - t1516 * t2184 + t1527 * t2188;
t1536 = -pkin(3) * t1626 - t2234;
t1461 = -pkin(2) * t1626 + qJ(3) * t1593 + t1484 * t2178 + t1536 * t2181;
t1464 = -qJ(3) * t1592 + t1484 * t2181 - t1536 * t2178;
t1543 = -t1592 * t2185 + t1593 * t2189;
t2223 = pkin(8) * t1543 + t1461 * t2189 + t1464 * t2185;
t1634 = t1699 * t2188 + t1700 * t2184;
t1486 = -pkin(9) * t1634 - t1518 * t2184 + t1529 * t2188;
t1538 = -pkin(3) * t1634 - t2235;
t1463 = -pkin(2) * t1634 + qJ(3) * t1596 + t1486 * t2178 + t1538 * t2181;
t1465 = -qJ(3) * t1595 + t1486 * t2181 - t1538 * t2178;
t1547 = -t1595 * t2185 + t1596 * t2189;
t2222 = pkin(8) * t1547 + t1463 * t2189 + t1465 * t2185;
t1703 = t1810 * t2188 + t1812 * t2184;
t1508 = -pkin(9) * t1703 - t1567 * t2184 + t1576 * t2188;
t1664 = -pkin(3) * t1703 - t2386;
t1495 = -pkin(2) * t1703 + qJ(3) * t1681 + t1508 * t2178 + t1664 * t2181;
t1496 = -qJ(3) * t1680 + t1508 * t2181 - t1664 * t2178;
t1611 = -t1680 * t2185 + t1681 * t2189;
t2221 = pkin(8) * t1611 + t1495 * t2189 + t1496 * t2185;
t1762 = t1853 * t2188 + t1854 * t2184;
t1602 = -pkin(9) * t1762 - t1698 * t2184 + t1744 * t2188;
t2209 = pkin(4) * t1853 - t1667;
t1612 = -pkin(3) * t1762 - t2209;
t1530 = -pkin(2) * t1762 + qJ(3) * t1731 + t1602 * t2178 + t1612 * t2181;
t1539 = -qJ(3) * t1730 + t1602 * t2181 - t1612 * t2178;
t1643 = -t1730 * t2185 + t1731 * t2189;
t2220 = pkin(8) * t1643 + t1530 * t2189 + t1539 * t2185;
t1790 = t1875 * t2188 + t1876 * t2184;
t1616 = -pkin(9) * t1790 - t1707 * t2184 + t1752 * t2188;
t1619 = -pkin(3) * t1790 + t2044 - t2290;
t1535 = -pkin(2) * t1790 + qJ(3) * t1741 + t1616 * t2178 + t1619 * t2181;
t1546 = -qJ(3) * t1740 + t1616 * t2181 - t1619 * t2178;
t1659 = -t1740 * t2185 + t1741 * t2189;
t2219 = pkin(8) * t1659 + t1535 * t2189 + t1546 * t2185;
t1562 = qJ(3) * t1679 + (-pkin(9) * t2178 + t2330) * t1719;
t1587 = -qJ(3) * t1678 + (-pkin(9) * t2181 + t2388) * t1719;
t1609 = -t1678 * t2185 + t1679 * t2189;
t2218 = pkin(8) * t1609 + t1562 * t2189 + t1587 * t2185;
t1890 = -t1993 * t2188 + t2184 * t2207;
t1682 = -pkin(9) * t1890 - t1719;
t1632 = qJ(3) * t1845 + t2178 * t1682 + t1890 * t2330;
t1642 = -qJ(3) * t1844 + t1682 * t2181 + t1890 * t2388;
t1757 = -t1844 * t2185 + t1845 * t2189;
t2217 = pkin(8) * t1757 + t1632 * t2189 + t1642 * t2185;
t1940 = t2029 * t2184 + t2405;
t1765 = t2184 * t2198 - t2188 * t2394 + t2199 + (-t2153 * t2184 - t2188 * t2404 - t1940) * pkin(3);
t1826 = -pkin(9) * t1940 + t1877;
t1660 = -pkin(2) * t1940 + qJ(3) * t1860 + t1765 * t2181 + t1826 * t2178;
t1665 = -qJ(3) * t1859 - t1765 * t2178 + t1826 * t2181;
t1776 = -t1859 * t2185 + t1860 * t2189;
t2216 = pkin(8) * t1776 + t1660 * t2189 + t1665 * t2185;
t1953 = t2043 * t2188 - t2369;
t1775 = -pkin(3) * t1953 + t1819;
t1835 = -pkin(9) * t1953 + t1878;
t1661 = -pkin(2) * t1953 + qJ(3) * t1862 + t1775 * t2181 + t1835 * t2178;
t1669 = -qJ(3) * t1861 - t1775 * t2178 + t1835 * t2181;
t1777 = -t1861 * t2185 + t1862 * t2189;
t2215 = pkin(8) * t1777 + t1661 * t2189 + t1669 * t2185;
t2075 = -t2135 - t2136;
t1782 = -pkin(2) * t2075 + qJ(3) * t2000 + t1837;
t1796 = -qJ(3) * t1998 - t1836;
t1897 = -t1998 * t2185 + t2000 * t2189;
t2214 = pkin(8) * t1897 + t1782 * t2189 + t1796 * t2185;
t1917 = -pkin(2) * t2404 + qJ(3) * t2012 + t2366;
t1937 = -t2011 * t2185 + t2012 * t2189;
t1961 = -qJ(3) * t2011 - t2367;
t2213 = pkin(8) * t1937 + t1917 * t2189 + t1961 * t2185;
t1924 = -pkin(2) * t2396 + qJ(3) * t2028 - t2367;
t1959 = -t2027 * t2185 + t2028 * t2189;
t1974 = -qJ(3) * t2027 - t2366;
t2212 = pkin(8) * t1959 + t1924 * t2189 + t1974 * t2185;
t2073 = t2119 * t2185 + t2120 * t2189;
t2211 = pkin(8) * t2073 + t2010;
t1737 = t1837 * t2189 - t2375;
t1815 = pkin(2) * t2054 + qJ(3) * t1837;
t2210 = pkin(8) * t1737 - qJ(3) * t2375 + t1815 * t2189;
t2173 = t2179 * t2174;
t2161 = qJDD(1) * t2186 + t2190 * t2191;
t2157 = t2182 * t2332;
t2152 = t2335 * t2346;
t2151 = (t2175 - t2176) * t2346;
t2147 = -pkin(7) * t2161 + g(3) * t2190;
t2124 = t2335 * t2328;
t2117 = (t2333 + (qJD(2) + t2169) * t2381) * t2179;
t2116 = t2145 * t2189 - t2175 * t2328;
t2113 = -t2146 * t2185 - t2176 * t2328;
t2104 = t2149 * t2189 - t2351;
t2103 = -t2148 * t2185 + t2352;
t2099 = t2136 - t2135;
t2085 = (t2173 * t2189 * t2191 + t2118 * t2182) * t2185;
t2084 = (t2145 * t2179 + t2189 * t2403) * t2185;
t2083 = (t2146 * t2179 - t2185 * t2403) * t2189;
t2082 = (-t2173 * t2341 + t2400) * t2189;
t2074 = -t2118 * t2185 + t2121 * t2189;
t2052 = t2179 * t2121 + t2182 * t2238;
t2051 = -t2179 * t2120 + t2182 * t2237;
t2050 = -t2179 * t2119 + t2182 * t2239;
t2049 = t2179 * t2238 - t2400;
t2048 = t2182 * t2120 + t2179 * t2237;
t2047 = t2182 * t2119 + t2179 * t2239;
t2042 = -t2179 * t2117 + t2182 * t2240;
t2041 = t2182 * t2117 + t2179 * t2240;
t2034 = -t2179 * t2151 + t2182 * t2242;
t2033 = t2179 * t2152 + t2182 * t2241;
t2032 = t2182 * t2151 + t2179 * t2242;
t2031 = -t2182 * t2152 + t2179 * t2241;
t2005 = (t2114 * t2184 - t2115 * t2188) * t2133;
t2003 = -t2076 * t2185 + t2077 * t2189;
t2002 = t2179 * t2126 + t2182 * t2243;
t2001 = -t2182 * t2126 + t2179 * t2243;
t1996 = t2182 * t2244 - t2301;
t1995 = t2179 * t2244 + t2157;
t1984 = t2036 * t2184 + t2115 * t2355;
t1982 = t2035 * t2188 - t2114 * t2356;
t1979 = -t2063 * t2185 + t2064 * t2189;
t1978 = -t2061 * t2185 + t2062 * t2189;
t1971 = t2079 * t2184 + t2368;
t1970 = t2080 * t2188 + t2407;
t1969 = -t2038 * t2185 + t2040 * t2189;
t1968 = -t2037 * t2185 + t2039 * t2189;
t1958 = -t2342 + (-t2049 * t2179 - t2052 * t2182) * pkin(8);
t1949 = -t2340 + (-t2041 * t2179 - t2042 * t2182) * pkin(8);
t1948 = t2182 * t2245 - t2316;
t1947 = t2182 * t2246 + t2316;
t1946 = t2179 * t2245 + t2315;
t1945 = t2179 * t2246 - t2315;
t1944 = -pkin(1) * t2049 + t2179 * t2086 + t2182 * t2287;
t1943 = pkin(1) * t2052 - t2182 * t2086 + t2179 * t2287;
t1936 = -pkin(1) * t2041 + t2179 * t2087 + t2182 * t2288;
t1935 = pkin(1) * t2042 - t2182 * t2087 + t2179 * t2288;
t1923 = -t2179 * t2231 + t2182 * t2247;
t1922 = -t2179 * t2071 + t2182 * t2248;
t1921 = t2179 * t2247 + t2182 * t2231;
t1920 = t2182 * t2071 + t2179 * t2248;
t1919 = pkin(1) * t2002 + t2010 * t2384;
t1918 = pkin(8) * t2010 * t2182 - pkin(1) * t2001;
t1915 = -t2179 * t2396 + t2182 * t2249;
t1914 = t2179 * t2249 + t2182 * t2396;
t1913 = -pkin(1) * t2031 + t2182 * t2211;
t1912 = pkin(1) * t2033 + t2179 * t2211;
t1902 = (-t2001 * t2179 - t2002 * t2182) * pkin(8);
t1896 = -t1997 * t2185 + t1999 * t2189;
t1895 = -t2179 * t2404 + t2182 * t2250;
t1894 = t2179 * t2250 + t2182 * t2404;
t1893 = (-t2031 * t2179 - t2033 * t2182) * pkin(8) - t2243;
t1889 = t1990 * t2184 + t1992 * t2188;
t1874 = pkin(2) * t2027 - t1927;
t1869 = pkin(2) * t2011 - t1926;
t1868 = -t1976 * t2185 + t1977 * t2189;
t1864 = -t2179 * t2099 + t2182 * t2252;
t1863 = t2182 * t2099 + t2179 * t2252;
t1858 = -t2179 * t2075 + t2182 * t2251;
t1857 = t2182 * t2075 + t2179 * t2251;
t1846 = t1950 * t2188 + t1951 * t2184;
t1841 = -t1931 * t2185 + t1933 * t2189;
t1840 = -t1930 * t2185 + t1932 * t2189;
t1839 = -t2179 * t2005 + t2182 * t2253;
t1838 = t2182 * t2005 + t2179 * t2253;
t1802 = t1900 * t2188 + t1901 * t2184;
t1801 = t1898 * t2188 + t1899 * t2184;
t1798 = t1886 * t2188 + t1888 * t2184;
t1797 = t1885 * t2188 + t1887 * t2184;
t1795 = -t2179 * t1984 + t2182 * t2255;
t1794 = -t2179 * t1982 + t2182 * t2256;
t1793 = t2182 * t1984 + t2179 * t2255;
t1792 = t2182 * t1982 + t2179 * t2256;
t1786 = -t1871 * t2185 + t1873 * t2189;
t1785 = -t1870 * t2185 + t1872 * t2189;
t1760 = -t1851 * t2185 + t1852 * t2189;
t1756 = -t2179 * t1971 + t2182 * t2257;
t1755 = -t2179 * t1970 + t2182 * t2258;
t1754 = t2182 * t1971 + t2179 * t2257;
t1753 = t2182 * t1970 + t2179 * t2258;
t1746 = -t2179 * t1953 + t2182 * t2259;
t1745 = t2182 * t1953 + t2179 * t2259;
t1742 = -t1842 * t2185 + t1843 * t2189;
t1739 = -t2179 * t1940 + t2182 * t2260;
t1738 = t2182 * t1940 + t2179 * t2260;
t1736 = -t2185 * t1924 + t2189 * t1974 + (-t1914 * t2179 - t1915 * t2182) * pkin(8);
t1735 = pkin(2) * t1861 + t2312;
t1734 = t2179 * t2054 + t2182 * t2264;
t1733 = -t2182 * t2054 + t2179 * t2264;
t1732 = pkin(2) * t1859 + t2311;
t1729 = -t2185 * t1917 + t2189 * t1961 + (-t1894 * t2179 - t1895 * t2182) * pkin(8);
t1722 = -t2179 * t1889 + t2182 * t2261;
t1721 = t2182 * t1889 + t2179 * t2261;
t1710 = t1813 * t2188 + t1814 * t2184;
t1709 = -t2179 * t1890 + t2182 * t2262;
t1708 = t2182 * t1890 + t2179 * t2262;
t1702 = t1809 * t2188 + t1811 * t2184;
t1694 = -pkin(1) * t1914 - t2179 * t1874 + t2182 * t2212;
t1693 = pkin(1) * t1915 + t2182 * t1874 + t2179 * t2212;
t1690 = -pkin(1) * t1894 - t2179 * t1869 + t2182 * t2213;
t1689 = pkin(1) * t1895 + t2182 * t1869 + t2179 * t2213;
t1686 = -t2179 * t1846 + t2182 * t2263;
t1685 = t2182 * t1846 + t2179 * t2263;
t1675 = t1772 * t2188 + t1774 * t2184;
t1674 = t1771 * t2188 + t1773 * t2184;
t1673 = -t1767 * t2185 + t1769 * t2189;
t1672 = -t1766 * t2185 + t1768 * t2189;
t1663 = -t1748 * t2185 + t1750 * t2189;
t1662 = -t1747 * t2185 + t1749 * t2189;
t1658 = pkin(2) * t1844 + t2292;
t1648 = -t2185 * t1782 + t2189 * t1796 + (-t1857 * t2179 - t1858 * t2182) * pkin(8);
t1647 = -t2179 * t1802 + t2182 * t2265;
t1646 = -t2179 * t1801 + t2182 * t2266;
t1645 = t2182 * t1802 + t2179 * t2265;
t1644 = t2182 * t1801 + t2179 * t2266;
t1641 = -pkin(1) * t1857 - t1998 * t2390 + t2182 * t2214;
t1640 = pkin(1) * t1858 + t1998 * t2389 + t2179 * t2214;
t1637 = t1713 * t2188 + t1715 * t2184;
t1636 = t1712 * t2188 + t1714 * t2184;
t1631 = -t2179 * t1798 + t2182 * t2267;
t1630 = -t2179 * t1797 + t2182 * t2268;
t1629 = t2182 * t1798 + t2179 * t2267;
t1628 = t2182 * t1797 + t2179 * t2268;
t1623 = t1691 * t2188 + t1692 * t2184;
t1622 = -t2179 * t1790 + t2182 * t2269;
t1621 = t2182 * t1790 + t2179 * t2269;
t1617 = -t1687 * t2185 + t1688 * t2189;
t1610 = pkin(2) * t1678 + t2336;
t1604 = -t2179 * t1762 + t2182 * t2270;
t1603 = t2182 * t1762 + t2179 * t2270;
t1601 = -t1670 * t2185 + t1671 * t2189;
t1594 = -qJ(3) * t2374 - t2185 * t1815 + (-t1733 * t2179 - t1734 * t2182) * pkin(8);
t1589 = -pkin(1) * t1733 - t1836 * t2390 + t2182 * t2210;
t1588 = pkin(1) * t1734 + t1836 * t2389 + t2179 * t2210;
t1578 = -t2179 * t1702 + t2182 * t2271;
t1577 = t2182 * t1702 + t2179 * t2271;
t1574 = pkin(2) * t1740 + t2293;
t1573 = -t2179 * t1719 + t2182 * t2273;
t1572 = t2182 * t1719 + t2179 * t2273;
t1571 = -t2179 * t1703 + t2182 * t2272;
t1570 = t2182 * t1703 + t2179 * t2272;
t1569 = -t1650 * t2185 + t1652 * t2189;
t1568 = -t1649 * t2185 + t1651 * t2189;
t1565 = -t2179 * t1710 + t2182 * t2274;
t1564 = t2182 * t1710 + t2179 * t2274;
t1563 = pkin(2) * t1730 + t2294;
t1561 = -t2185 * t1661 + t2189 * t1669 + (-t1745 * t2179 - t1746 * t2182) * pkin(8);
t1560 = -t2185 * t1660 + t2189 * t1665 + (-t1738 * t2179 - t1739 * t2182) * pkin(8);
t1559 = -t2179 * t1675 + t2182 * t2275;
t1558 = -t2179 * t1674 + t2182 * t2276;
t1557 = t2182 * t1675 + t2179 * t2275;
t1556 = t2182 * t1674 + t2179 * t2276;
t1555 = -t1606 * t2185 + t1608 * t2189;
t1554 = -t1605 * t2185 + t1607 * t2189;
t1553 = -pkin(1) * t1745 - t2179 * t1735 + t2182 * t2215;
t1552 = pkin(1) * t1746 + t2182 * t1735 + t2179 * t2215;
t1545 = -pkin(1) * t1738 - t2179 * t1732 + t2182 * t2216;
t1544 = pkin(1) * t1739 + t2182 * t1732 + t2179 * t2216;
t1537 = -t2185 * t1632 + t2189 * t1642 + (-t1708 * t2179 - t1709 * t2182) * pkin(8);
t1531 = -t1585 * t2185 + t1586 * t2189;
t1524 = -t2179 * t1637 + t2182 * t2277;
t1523 = -t2179 * t1636 + t2182 * t2278;
t1522 = t2182 * t1637 + t2179 * t2277;
t1521 = t2182 * t1636 + t2179 * t2278;
t1514 = -pkin(1) * t1708 - t2179 * t1658 + t2182 * t2217;
t1513 = pkin(1) * t1709 + t2182 * t1658 + t2179 * t2217;
t1512 = -t2179 * t1634 + t2182 * t2279;
t1511 = t2182 * t1634 + t2179 * t2279;
t1510 = -t2179 * t1626 + t2182 * t2280;
t1509 = t2182 * t1626 + t2179 * t2280;
t1505 = -t2179 * t1623 + t2182 * t2281;
t1504 = t2182 * t1623 + t2179 * t2281;
t1502 = -t2179 * t1614 + t2182 * t2282;
t1501 = t2182 * t1614 + t2179 * t2282;
t1498 = pkin(2) * t1680 + t2296;
t1489 = -t2185 * t1562 + t2189 * t1587 + (-t1572 * t2179 - t1573 * t2182) * pkin(8);
t1488 = -pkin(1) * t1572 - t2179 * t1610 + t2182 * t2218;
t1487 = pkin(1) * t1573 + t2182 * t1610 + t2179 * t2218;
t1485 = -t2185 * t1535 + t2189 * t1546 + (-t1621 * t2179 - t1622 * t2182) * pkin(8);
t1483 = -t2185 * t1530 + t2189 * t1539 + (-t1603 * t2179 - t1604 * t2182) * pkin(8);
t1480 = -t2179 * t1541 + t2182 * t2283;
t1479 = t2182 * t1541 + t2179 * t2283;
t1478 = pkin(2) * t1533 + t2229;
t1477 = -pkin(1) * t1621 - t2179 * t1574 + t2182 * t2219;
t1476 = pkin(1) * t1622 + t2182 * t1574 + t2179 * t2219;
t1475 = pkin(2) * t1595 + t2297;
t1474 = pkin(2) * t1592 + t2298;
t1470 = -pkin(1) * t1603 - t2179 * t1563 + t2182 * t2220;
t1469 = pkin(1) * t1604 + t2182 * t1563 + t2179 * t2220;
t1466 = pkin(2) * t1581 + t2299;
t1459 = -t2185 * t1495 + t2189 * t1496 + (-t1570 * t2179 - t1571 * t2182) * pkin(8);
t1455 = -pkin(1) * t1570 - t2179 * t1498 + t2182 * t2221;
t1454 = pkin(1) * t1571 + t2182 * t1498 + t2179 * t2221;
t1452 = -t2179 * t1491 + t2182 * t2284;
t1451 = t2182 * t1491 + t2179 * t2284;
t1449 = -t2185 * t1463 + t2189 * t1465 + (-t1511 * t2179 - t1512 * t2182) * pkin(8);
t1448 = -t2185 * t1461 + t2189 * t1464 + (-t1509 * t2179 - t1510 * t2182) * pkin(8);
t1447 = pkin(2) * t1472 + t2300;
t1446 = -pkin(1) * t1511 - t2179 * t1475 + t2182 * t2222;
t1445 = pkin(1) * t1512 + t2182 * t1475 + t2179 * t2222;
t1444 = -pkin(1) * t1509 - t2179 * t1474 + t2182 * t2223;
t1443 = pkin(1) * t1510 + t2182 * t1474 + t2179 * t2223;
t1442 = -t2185 * t1456 + t2189 * t1457 + (-t1501 * t2179 - t1502 * t2182) * pkin(8);
t1441 = -t2185 * t1458 + t2189 * t1462 + (-t1479 * t2179 - t1480 * t2182) * pkin(8);
t1439 = -pkin(1) * t1479 - t2179 * t1478 + t2182 * t2224;
t1438 = pkin(1) * t1480 + t2182 * t1478 + t2179 * t2224;
t1437 = -pkin(1) * t1501 - t2179 * t1466 + t2182 * t2225;
t1436 = pkin(1) * t1502 + t2182 * t1466 + t2179 * t2225;
t1434 = -t2185 * t1435 + t2189 * t1440 + (-t1451 * t2179 - t1452 * t2182) * pkin(8);
t1433 = -pkin(1) * t1451 - t2179 * t1447 + t2182 * t2226;
t1432 = pkin(1) * t1452 + t2182 * t1447 + t2179 * t2226;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2162, 0, -t2161, 0, t2289, -t2147, -t2236, -pkin(7) * t2236, -t2085 * t2186 + t2116 * t2190, -t2034 * t2186 + t2074 * t2190, -t2050 * t2186 + t2103 * t2190, -t2082 * t2186 + t2113 * t2190, -t2051 * t2186 + t2104 * t2190, t2190 * t2124 + t2186 * t2301, t2190 * t1958 - t2186 * t1944 - pkin(7) * (t2052 * t2190 + t2105 * t2186), t2190 * t1949 - t2186 * t1936 - pkin(7) * (t2042 * t2190 + t2092 * t2186), t2190 * t1893 - t2186 * t1913 - pkin(7) * (t2033 * t2190 + t2073 * t2186), t2190 * t1902 - t2186 * t1918 - pkin(7) * (t2002 * t2190 + t2010 * t2186), -t1948 * t2186 + t1979 * t2190, -t1864 * t2186 + t1896 * t2190, -t1922 * t2186 + t1968 * t2190, -t1947 * t2186 + t1978 * t2190, -t1923 * t2186 + t1969 * t2190, -t1996 * t2186 + t2003 * t2190, t2190 * t1729 - t2186 * t1690 - pkin(7) * (t1895 * t2190 + t1937 * t2186), t2190 * t1736 - t2186 * t1694 - pkin(7) * (t1915 * t2190 + t1959 * t2186), t2190 * t1648 - t2186 * t1641 - pkin(7) * (t1858 * t2190 + t1897 * t2186), t2190 * t1594 - t2186 * t1589 - pkin(7) * (t1734 * t2190 + t1737 * t2186), -t1795 * t2186 + t1841 * t2190, -t1722 * t2186 + t1760 * t2190, -t1755 * t2186 + t1785 * t2190, -t1794 * t2186 + t1840 * t2190, -t1756 * t2186 + t1786 * t2190, -t1839 * t2186 + t1868 * t2190, t2190 * t1560 - t2186 * t1545 - pkin(7) * (t1739 * t2190 + t1776 * t2186), t2190 * t1561 - t2186 * t1553 - pkin(7) * (t1746 * t2190 + t1777 * t2186), t2190 * t1537 - t2186 * t1514 - pkin(7) * (t1709 * t2190 + t1757 * t2186), t2190 * t1489 - t2186 * t1488 - pkin(7) * (t1573 * t2190 + t1609 * t2186), -t1647 * t2186 + t1673 * t2190, -t1578 * t2186 + t1617 * t2190, -t1630 * t2186 + t1662 * t2190, -t1646 * t2186 + t1672 * t2190, -t1631 * t2186 + t1663 * t2190, -t1686 * t2186 + t1742 * t2190, t2190 * t1483 - t2186 * t1470 - pkin(7) * (t1604 * t2190 + t1643 * t2186), t2190 * t1485 - t2186 * t1477 - pkin(7) * (t1622 * t2190 + t1659 * t2186), t2190 * t1459 - t2186 * t1455 - pkin(7) * (t1571 * t2190 + t1611 * t2186), t2190 * t1441 - t2186 * t1439 - pkin(7) * (t1480 * t2190 + t1493 * t2186), -t1559 * t2186 + t1569 * t2190, -t1505 * t2186 + t1531 * t2190, -t1523 * t2186 + t1554 * t2190, -t1558 * t2186 + t1568 * t2190, -t1524 * t2186 + t1555 * t2190, -t1565 * t2186 + t1601 * t2190, t2190 * t1448 - t2186 * t1444 - pkin(7) * (t1510 * t2190 + t1543 * t2186), t2190 * t1449 - t2186 * t1446 - pkin(7) * (t1512 * t2190 + t1547 * t2186), t2190 * t1442 - t2186 * t1437 - pkin(7) * (t1502 * t2190 + t1525 * t2186), t2190 * t1434 - t2186 * t1433 - pkin(7) * (t1452 * t2190 + t1453 * t2186); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2161, 0, t2162, 0, t2147, t2289, t2302, pkin(7) * t2302, t2085 * t2190 + t2116 * t2186, t2034 * t2190 + t2074 * t2186, t2050 * t2190 + t2103 * t2186, t2082 * t2190 + t2113 * t2186, t2051 * t2190 + t2104 * t2186, t2186 * t2124 - t2190 * t2301, t2186 * t1958 + t2190 * t1944 + pkin(7) * (-t2052 * t2186 + t2105 * t2190), t2186 * t1949 + t2190 * t1936 + pkin(7) * (-t2042 * t2186 + t2092 * t2190), t2186 * t1893 + t2190 * t1913 + pkin(7) * (-t2033 * t2186 + t2073 * t2190), t2186 * t1902 + t2190 * t1918 + pkin(7) * (-t2002 * t2186 + t2010 * t2190), t1948 * t2190 + t1979 * t2186, t1864 * t2190 + t1896 * t2186, t1922 * t2190 + t1968 * t2186, t1947 * t2190 + t1978 * t2186, t1923 * t2190 + t1969 * t2186, t1996 * t2190 + t2003 * t2186, t2186 * t1729 + t2190 * t1690 + pkin(7) * (-t1895 * t2186 + t1937 * t2190), t2186 * t1736 + t2190 * t1694 + pkin(7) * (-t1915 * t2186 + t1959 * t2190), t2186 * t1648 + t2190 * t1641 + pkin(7) * (-t1858 * t2186 + t1897 * t2190), t2186 * t1594 + t2190 * t1589 + pkin(7) * (-t1734 * t2186 + t1737 * t2190), t1795 * t2190 + t1841 * t2186, t1722 * t2190 + t1760 * t2186, t1755 * t2190 + t1785 * t2186, t1794 * t2190 + t1840 * t2186, t1756 * t2190 + t1786 * t2186, t1839 * t2190 + t1868 * t2186, t2186 * t1560 + t2190 * t1545 + pkin(7) * (-t1739 * t2186 + t1776 * t2190), t2186 * t1561 + t2190 * t1553 + pkin(7) * (-t1746 * t2186 + t1777 * t2190), t2186 * t1537 + t2190 * t1514 + pkin(7) * (-t1709 * t2186 + t1757 * t2190), t2186 * t1489 + t2190 * t1488 + pkin(7) * (-t1573 * t2186 + t1609 * t2190), t1647 * t2190 + t1673 * t2186, t1578 * t2190 + t1617 * t2186, t1630 * t2190 + t1662 * t2186, t1646 * t2190 + t1672 * t2186, t1631 * t2190 + t1663 * t2186, t1686 * t2190 + t1742 * t2186, t2186 * t1483 + t2190 * t1470 + pkin(7) * (-t1604 * t2186 + t1643 * t2190), t2186 * t1485 + t2190 * t1477 + pkin(7) * (-t1622 * t2186 + t1659 * t2190), t2186 * t1459 + t2190 * t1455 + pkin(7) * (-t1571 * t2186 + t1611 * t2190), t2186 * t1441 + t2190 * t1439 + pkin(7) * (-t1480 * t2186 + t1493 * t2190), t1559 * t2190 + t1569 * t2186, t1505 * t2190 + t1531 * t2186, t1523 * t2190 + t1554 * t2186, t1558 * t2190 + t1568 * t2186, t1524 * t2190 + t1555 * t2186, t1565 * t2190 + t1601 * t2186, t2186 * t1448 + t2190 * t1444 + pkin(7) * (-t1510 * t2186 + t1543 * t2190), t2186 * t1449 + t2190 * t1446 + pkin(7) * (-t1512 * t2186 + t1547 * t2190), t2186 * t1442 + t2190 * t1437 + pkin(7) * (-t1502 * t2186 + t1525 * t2190), t2186 * t1434 + t2190 * t1433 + pkin(7) * (-t1452 * t2186 + t1453 * t2190); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2164, t2165, 0, 0, t2084, t2032, t2047, t2083, t2048, t2157, t1943, t1935, t1912, t1919, t1946, t1863, t1920, t1945, t1921, t1995, t1689, t1693, t1640, t1588, t1793, t1721, t1753, t1792, t1754, t1838, t1544, t1552, t1513, t1487, t1645, t1577, t1628, t1644, t1629, t1685, t1469, t1476, t1454, t1438, t1557, t1504, t1521, t1556, t1522, t1564, t1443, t1445, t1436, t1432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2191, 0, 0, -g(3), -t2164, 0, t2116, t2074, t2103, t2113, t2104, t2124, t1958, t1949, t1893, t1902, t1979, t1896, t1968, t1978, t1969, t2003, t1729, t1736, t1648, t1594, t1841, t1760, t1785, t1840, t1786, t1868, t1560, t1561, t1537, t1489, t1673, t1617, t1662, t1672, t1663, t1742, t1483, t1485, t1459, t1441, t1569, t1531, t1554, t1568, t1555, t1601, t1448, t1449, t1442, t1434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2191, 0, qJDD(1), 0, g(3), 0, -t2165, 0, t2085, t2034, t2050, t2082, t2051, -t2301, t1944, t1936, t1913, t1918, t1948, t1864, t1922, t1947, t1923, t1996, t1690, t1694, t1641, t1589, t1795, t1722, t1755, t1794, t1756, t1839, t1545, t1553, t1514, t1488, t1647, t1578, t1630, t1646, t1631, t1686, t1470, t1477, t1455, t1439, t1559, t1505, t1523, t1558, t1524, t1565, t1444, t1446, t1437, t1433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2164, t2165, 0, 0, t2084, t2032, t2047, t2083, t2048, t2157, t1943, t1935, t1912, t1919, t1946, t1863, t1920, t1945, t1921, t1995, t1689, t1693, t1640, t1588, t1793, t1721, t1753, t1792, t1754, t1838, t1544, t1552, t1513, t1487, t1645, t1577, t1628, t1644, t1629, t1685, t1469, t1476, t1454, t1438, t1557, t1504, t1521, t1556, t1522, t1564, t1443, t1445, t1436, t1432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2145, t2121, t2143, -t2155, t2149, t2155, 0, -t2126, t2086, 0, t2064, t1999, t2039, t2062, t2040, t2077, t1961, t1974, t1796, -qJ(3) * t1836, t1933, t1852, t1872, t1932, t1873, t1977, t1665, t1669, t1642, t1587, t1769, t1688, t1749, t1768, t1750, t1843, t1539, t1546, t1496, t1462, t1652, t1586, t1607, t1651, t1608, t1671, t1464, t1465, t1457, t1440; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2154, t2118, t2148, t2146, t2144, -t2154, t2126, 0, t2087, 0, t2063, t1997, t2037, t2061, t2038, t2076, t1917, t1924, t1782, t1815, t1931, t1851, t1870, t1930, t1871, t1976, t1660, t1661, t1632, t1562, t1767, t1687, t1747, t1766, t1748, t1842, t1530, t1535, t1495, t1458, t1650, t1585, t1605, t1649, t1606, t1670, t1461, t1463, t1456, t1435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2163, t2151, t2119, t2163, t2120, t2332, -t2086, -t2087, 0, 0, t2354, t2099, t2071, -t2354, t2231, t2332, t1869, t1874, pkin(2) * t1998, pkin(2) * t1836, t1984, t1889, t1970, t1982, t1971, t2005, t1732, t1735, t1658, t1610, t1802, t1702, t1797, t1801, t1798, t1846, t1563, t1574, t1498, t1478, t1675, t1623, t1636, t1674, t1637, t1710, t1474, t1475, t1466, t1447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2102, -t2404, t2286, t2125, t2122, -t2125, 0, -t2054, t1926, 0, t1985, t1891, t1972, t1983, t1973, t2006, t1826, t1835, t1682, -pkin(9) * t1719, t1804, t1704, t1799, t1803, t1800, t1847, t1602, t1616, t1508, t1494, t1677, t1624, t1638, t1676, t1639, t1711, t1484, t1486, t1471, t1450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2349, t2396, t2123, -t2303, -t2091, -t2349, t2054, 0, t1927, 0, t2066, -t2065, -t1993, -t2066, -t2207, -t2100, t1765, t1775, -pkin(3) * t1890, -pkin(3) * t1719, -t1986, -t1981, -t1910, t1986, -t2232, -t2100, t1612, t1619, t1664, t1503, -t1824, -t1725, -t1805, t1822, -t1806, -t1855, t1536, t1538, t1497, t1460; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2354, t2099, t2071, -t2354, t2231, t2332, -t1926, -t1927, 0, 0, t1984, t1889, t1970, t1982, t1971, t2005, t2311, t2312, t2292, t2336, t1802, t1702, t1797, t1801, t1798, t1846, t2294, t2293, t2296, t2229, t1675, t1623, t1636, t1674, t1637, t1710, t2298, t2297, t2299, t2300; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2036, t1990, t2397, -t2081, t2079, t2081, 0, t1882, t1818, 0, t1901, t1811, t1887, t1899, t1888, t1951, t1744, t1752, t1576, -qJ(5) * t1590, t1774, t1692, t1714, t1773, t1715, t1814, t1527, t1529, t1507, t1482; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2359, t1992, t2080, t2035, t2008, -t2359, -t1882, 0, t1819, 0, t1900, t1809, t1885, t1898, t1886, t1950, t1698, t1707, t1567, t1580, t1772, t1691, t1712, t1771, t1713, t1813, t1516, t1518, t1500, t1468; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2066, t2065, t1993, t2066, t2207, t2100, -t1818, -t1819, 0, 0, t1986, t1981, t1910, -t1986, t2232, t2100, t2209, t2290 + 0.2e1 * t2380, t2386, t2387, t1824, t1725, t1805, -t1822, t1806, t1855, t2234, t2235, t2230, t2291; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1963, -t1906, t2398, t2024, t2022, -t2024, 0, t1821, t1667, 0, t1825, t1727, t1807, t1823, t1808, t1856, t1618, t1620, t1532, -pkin(10) * t1550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2360, t1909, t2023, -t2305, t1956, -t2360, -t1821, 0, t1668, 0, -t1942, -t1939, -t1833, t1942, t1829, -t1960, t1583, t1584, -pkin(5) * t1726, -pkin(5) * t1550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1986, t1981, t1910, -t1986, t2232, t2100, -t1667, -t1668, 0, 0, t1824, t1725, t1805, -t1822, t1806, t1855, t2313, t2314, t2295, t2338; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1867, t1830, t2399, t1966, t1964, -t1966, 0, t1656, t1599, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1967, t1832, t1965, t1866, t1849, -t1967, -t1656, 0, t1600, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1942, t1939, t1833, -t1942, -t1829, t1960, -t1599, -t1600, 0, 0;];
m_new_reg  = t1;
