% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRPRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x28]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR4_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR4_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR4_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR4_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:26:17
% EndTime: 2019-03-09 10:26:24
% DurationCPUTime: 2.17s
% Computational Cost: add. (5366->273), mult. (14964->525), div. (0->0), fcn. (15165->12), ass. (0->157)
t121 = sin(pkin(6));
t116 = t121 ^ 2;
t126 = sin(qJ(2));
t165 = qJD(2) * t126;
t195 = t116 * t165;
t119 = sin(pkin(12));
t125 = sin(qJ(4));
t128 = cos(qJ(4));
t175 = cos(pkin(12));
t103 = t119 * t128 + t175 * t125;
t127 = cos(qJ(6));
t124 = sin(qJ(6));
t161 = qJD(6) * t124;
t123 = cos(pkin(6));
t120 = sin(pkin(11));
t122 = cos(pkin(11));
t129 = cos(qJ(2));
t94 = (t120 * t129 + t122 * t126) * t121;
t81 = t123 * t125 + t128 * t94;
t164 = qJD(2) * t129;
t151 = t121 * t164;
t152 = t121 * t165;
t91 = -t120 * t152 + t122 * t151;
t53 = t81 * qJD(4) + t91 * t125;
t138 = t123 * t128 - t125 * t94;
t54 = t138 * qJD(4) + t91 * t128;
t33 = t119 * t54 + t175 * t53;
t44 = t119 * t81 - t175 * t138;
t133 = -t127 * t33 + t44 * t161;
t147 = t175 * t128;
t163 = qJD(4) * t125;
t99 = qJD(4) * t147 - t119 * t163;
t177 = t127 * t99;
t194 = -t103 * t133 + t44 * t177;
t192 = pkin(1) * t123;
t159 = t126 * t192;
t169 = t121 * t129;
t189 = pkin(8) + qJ(3);
t87 = t189 * t169 + t159;
t193 = 0.2e1 * qJD(6);
t149 = t189 * t126;
t82 = (pkin(1) * t129 + pkin(2)) * t123 - t121 * t149;
t56 = t120 * t82 + t122 * t87;
t48 = pkin(9) * t123 + t56;
t155 = -pkin(2) * t129 - pkin(1);
t170 = t121 * t126;
t93 = t120 * t170 - t122 * t169;
t61 = t93 * pkin(3) - t94 * pkin(9) + t155 * t121;
t187 = t125 * t61 + t128 * t48;
t108 = t164 * t192;
t75 = t108 + (-qJD(2) * t149 + qJD(3) * t129) * t121;
t76 = -t87 * qJD(2) - qJD(3) * t170;
t43 = t120 * t76 + t122 * t75;
t107 = pkin(2) * t152;
t90 = qJD(2) * t94;
t59 = pkin(3) * t90 - pkin(9) * t91 + t107;
t19 = -t187 * qJD(4) - t125 * t43 + t128 * t59;
t11 = pkin(4) * t90 - qJ(5) * t54 - qJD(5) * t81 + t19;
t162 = qJD(4) * t128;
t18 = -t125 * t59 - t128 * t43 - t61 * t162 + t48 * t163;
t15 = -t53 * qJ(5) + t138 * qJD(5) - t18;
t5 = t175 * t11 - t119 * t15;
t4 = -t90 * pkin(5) - t5;
t191 = t124 * t4;
t190 = t127 * t4;
t6 = t119 * t11 + t175 * t15;
t102 = t119 * t125 - t147;
t34 = -t119 * t53 + t175 * t54;
t45 = t119 * t138 + t175 * t81;
t36 = t124 * t45 - t93 * t127;
t21 = -t36 * qJD(6) + t90 * t124 + t127 * t34;
t37 = t124 * t93 + t127 * t45;
t98 = t103 * qJD(4);
t188 = t21 * t102 + t37 * t98;
t148 = -t125 * t48 + t128 * t61;
t29 = pkin(4) * t93 - qJ(5) * t81 + t148;
t31 = t138 * qJ(5) + t187;
t17 = t119 * t29 + t175 * t31;
t178 = t127 * t98;
t186 = t102 * t177 + t103 * t178;
t185 = t102 * t98;
t184 = t103 * t99;
t183 = t124 * t21;
t112 = pkin(2) * t120 + pkin(9);
t167 = qJ(5) + t112;
t144 = qJD(4) * t167;
t132 = -t125 * qJD(5) - t128 * t144;
t89 = t128 * qJD(5) - t125 * t144;
t62 = t119 * t89 - t175 * t132;
t182 = t124 * t62;
t181 = t124 * t98;
t180 = t124 * t99;
t179 = t127 * t62;
t176 = t21 * t127;
t111 = pkin(4) * t119 + pkin(10);
t174 = t111 * t124;
t173 = t111 * t127;
t172 = t112 * t125;
t171 = t112 * t128;
t168 = t124 * t127;
t118 = t127 ^ 2;
t166 = t124 ^ 2 - t118;
t160 = qJD(6) * t127;
t157 = 0.2e1 * t162;
t113 = -t175 * pkin(4) - pkin(5);
t156 = t113 * t193;
t115 = pkin(4) * t163;
t114 = -pkin(2) * t122 - pkin(3);
t154 = t116 * t164;
t153 = t103 * t161;
t150 = t124 * t160;
t42 = t120 * t75 - t122 * t76;
t55 = -t120 * t87 + t122 * t82;
t146 = t167 * t125;
t145 = -0.4e1 * t103 * t168;
t143 = t166 * qJD(6);
t142 = pkin(10) * t90 + t6;
t22 = qJD(6) * t37 + t124 * t34 - t90 * t127;
t141 = -t102 * t22 - t36 * t98;
t140 = -t111 * t98 + t113 * t99;
t14 = pkin(10) * t93 + t17;
t47 = -t123 * pkin(3) - t55;
t38 = -t138 * pkin(4) + t47;
t24 = t44 * pkin(5) - t45 * pkin(10) + t38;
t8 = t124 * t24 + t127 * t14;
t139 = -t124 * t37 - t127 * t36;
t105 = -pkin(4) * t128 + t114;
t67 = pkin(5) * t102 - pkin(10) * t103 + t105;
t100 = t167 * t128;
t74 = t175 * t100 - t119 * t146;
t40 = t124 * t67 + t127 * t74;
t137 = t102 * t111 - t103 * t113;
t136 = pkin(5) * t98 - pkin(10) * t99 + t115;
t32 = pkin(4) * t53 + t42;
t135 = t125 * t90 + t93 * t162;
t134 = t124 * t33 + t44 * t160;
t70 = t102 * t160 + t181;
t71 = -t103 * t160 - t180;
t16 = -t119 * t31 + t175 * t29;
t131 = pkin(5) * t33 - pkin(10) * t34 + t32;
t130 = -t134 * t103 - t44 * t180;
t101 = t103 ^ 2;
t97 = (-pkin(8) * t169 - t159) * qJD(2);
t96 = pkin(8) * t152 - t108;
t73 = t100 * t119 + t175 * t146;
t69 = t153 - t177;
t68 = t102 * t161 - t178;
t64 = t128 * t90 - t93 * t163;
t63 = t119 * t132 + t175 * t89;
t39 = -t124 * t74 + t127 * t67;
t27 = -t40 * qJD(6) - t124 * t63 + t127 * t136;
t26 = -t124 * t136 - t127 * t63 - t67 * t160 + t74 * t161;
t13 = -t93 * pkin(5) - t16;
t7 = -t124 * t14 + t127 * t24;
t2 = -t8 * qJD(6) - t124 * t142 + t127 * t131;
t1 = -t124 * t131 - t127 * t142 + t14 * t161 - t24 * t160;
t3 = [0, 0, 0, 0.2e1 * t126 * t154, 0.2e1 * (-t126 ^ 2 + t129 ^ 2) * t116 * qJD(2), 0.2e1 * t123 * t151, -0.2e1 * t123 * t152, 0, -0.2e1 * pkin(1) * t195 + 0.2e1 * t123 * t97, -0.2e1 * pkin(1) * t154 + 0.2e1 * t96 * t123, 0.2e1 * t42 * t94 - 0.2e1 * t43 * t93 - 0.2e1 * t55 * t91 - 0.2e1 * t56 * t90, 0.2e1 * t155 * pkin(2) * t195 - 0.2e1 * t55 * t42 + 0.2e1 * t56 * t43, 0.2e1 * t81 * t54, 0.2e1 * t54 * t138 - 0.2e1 * t81 * t53, 0.2e1 * t54 * t93 + 0.2e1 * t81 * t90, 0.2e1 * t138 * t90 - 0.2e1 * t53 * t93, 0.2e1 * t93 * t90, -0.2e1 * t42 * t138 + 0.2e1 * t148 * t90 + 0.2e1 * t19 * t93 + 0.2e1 * t47 * t53, 0.2e1 * t18 * t93 - 0.2e1 * t187 * t90 + 0.2e1 * t42 * t81 + 0.2e1 * t47 * t54, -0.2e1 * t16 * t34 - 0.2e1 * t17 * t33 - 0.2e1 * t44 * t6 - 0.2e1 * t45 * t5, 0.2e1 * t16 * t5 + 0.2e1 * t17 * t6 + 0.2e1 * t32 * t38, 0.2e1 * t37 * t21, -0.2e1 * t21 * t36 - 0.2e1 * t22 * t37, 0.2e1 * t21 * t44 + 0.2e1 * t33 * t37, -0.2e1 * t22 * t44 - 0.2e1 * t33 * t36, 0.2e1 * t44 * t33, 0.2e1 * t13 * t22 + 0.2e1 * t2 * t44 + 0.2e1 * t33 * t7 + 0.2e1 * t36 * t4, 0.2e1 * t1 * t44 + 0.2e1 * t13 * t21 - 0.2e1 * t33 * t8 + 0.2e1 * t37 * t4; 0, 0, 0, 0, 0, t151, -t152, 0, t97, t96 (-t120 * t90 - t122 * t91) * pkin(2) (t120 * t43 - t122 * t42) * pkin(2), t125 * t54 + t81 * t162, -t125 * t53 + t54 * t128 + (-t81 * t125 + t128 * t138) * qJD(4), t135, t64, 0, -t90 * t172 + t114 * t53 - t128 * t42 + (t125 * t47 - t93 * t171) * qJD(4), -t90 * t171 + t114 * t54 + t125 * t42 + (t128 * t47 + t93 * t172) * qJD(4), -t102 * t6 - t103 * t5 - t16 * t99 - t17 * t98 - t33 * t74 + t34 * t73 - t44 * t63 + t45 * t62, t105 * t32 + t115 * t38 - t16 * t62 + t17 * t63 - t5 * t73 + t6 * t74, t37 * t177 + (-t161 * t37 + t176) * t103, t139 * t99 + (-t183 - t127 * t22 + (t124 * t36 - t127 * t37) * qJD(6)) * t103, t188 + t194, t130 + t141, t102 * t33 + t44 * t98, t13 * t180 + t102 * t2 + t22 * t73 + t27 * t44 + t33 * t39 + t36 * t62 + t7 * t98 + (t13 * t160 + t191) * t103, t13 * t177 + t1 * t102 + t21 * t73 + t26 * t44 - t33 * t40 + t37 * t62 - t8 * t98 + (-t13 * t161 + t190) * t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125 * t157, 0.2e1 * (-t125 ^ 2 + t128 ^ 2) * qJD(4), 0, 0, 0, 0.2e1 * t114 * t163, t114 * t157, -0.2e1 * t102 * t63 + 0.2e1 * t103 * t62 + 0.2e1 * t73 * t99 - 0.2e1 * t74 * t98, 0.2e1 * t105 * t115 + 0.2e1 * t62 * t73 + 0.2e1 * t63 * t74, -0.2e1 * t101 * t150 + 0.2e1 * t118 * t184, t101 * t166 * t193 + t145 * t99, -0.2e1 * t102 * t153 + 0.2e1 * t186, 0.2e1 * t102 * t71 - 0.2e1 * t103 * t181, 0.2e1 * t185, 0.2e1 * t73 * t180 + 0.2e1 * t102 * t27 + 0.2e1 * t39 * t98 + 0.2e1 * (t160 * t73 + t182) * t103, 0.2e1 * t73 * t177 + 0.2e1 * t102 * t26 - 0.2e1 * t40 * t98 + 0.2e1 * (-t161 * t73 + t179) * t103; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107, 0, 0, 0, 0, 0, t64, -t135, t102 * t34 - t103 * t33 - t44 * t99 + t45 * t98, -t102 * t5 + t103 * t6 - t16 * t98 + t17 * t99, 0, 0, 0, 0, 0, t130 - t141, t188 - t194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t102 * t62 + t103 * t63 + t73 * t98 + t74 * t99, 0, 0, 0, 0, 0, 0 (-t102 * t99 - t103 * t98) * t127 + t186; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t184 + 0.2e1 * t185, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, -t53, t90, t19, t18 (-t119 * t33 - t175 * t34) * pkin(4) (t119 * t6 + t175 * t5) * pkin(4), t160 * t37 + t183, qJD(6) * t139 - t124 * t22 + t176, t134, -t133, 0, -t33 * t174 + t113 * t22 - t190 + (t124 * t13 - t44 * t173) * qJD(6), -t33 * t173 + t113 * t21 + t191 + (t127 * t13 + t44 * t174) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t163, 0, -t112 * t162, t112 * t163 (-t119 * t98 - t175 * t99) * pkin(4) (t119 * t63 - t175 * t62) * pkin(4), -t103 * t143 + t168 * t99, qJD(6) * t145 - t166 * t99, t70, -t68, 0, -t179 + t140 * t124 + (t124 * t73 - t127 * t137) * qJD(6), t182 + t140 * t127 + (t124 * t137 + t127 * t73) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t163, -t162, 0 (t119 * t99 - t175 * t98) * pkin(4), 0, 0, 0, 0, 0, t68, t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t150, -0.2e1 * t143, 0, 0, 0, t124 * t156, t127 * t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t32, 0, 0, 0, 0, 0, -t133, -t134; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, 0, 0, 0, 0, 0, -t68, -t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t21, -t22, t33, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t69, t71, t98, t27, t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t71, t69; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t160, -t161, 0, -t111 * t160, t111 * t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t161, -t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
