% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d4,d6,theta3,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 10:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR4_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR4_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR4_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRPRPR4_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 10:26:18
% EndTime: 2019-03-09 10:26:33
% DurationCPUTime: 6.08s
% Computational Cost: add. (12212->403), mult. (33257->753), div. (0->0), fcn. (33800->12), ass. (0->218)
t123 = sin(pkin(6));
t129 = cos(qJ(2));
t249 = cos(pkin(11));
t206 = t129 * t249;
t192 = t123 * t206;
t126 = sin(qJ(2));
t239 = t123 * t126;
t247 = sin(pkin(11));
t193 = t247 * t239;
t96 = t193 - t192;
t282 = 0.2e1 * t96;
t250 = cos(pkin(6));
t215 = pkin(1) * t250;
t197 = t129 * t215;
t266 = pkin(8) + qJ(3);
t207 = t123 * t266;
t161 = -t126 * t207 + t197;
t230 = qJD(3) * t123;
t145 = qJD(2) * t161 + t129 * t230;
t198 = t126 * t215;
t146 = -t126 * t230 + (-t129 * t207 - t198) * qJD(2);
t136 = t145 * t249 + t146 * t247;
t238 = t123 * t129;
t169 = t126 * t249 + t129 * t247;
t278 = t123 * t169;
t142 = -t123 * pkin(1) - pkin(2) * t238 + t96 * pkin(3) - pkin(9) * t278;
t281 = -qJD(4) * t142 - t136;
t149 = pkin(2) * t250 + t161;
t162 = t266 * t238 + t198;
t59 = t149 * t247 + t162 * t249;
t139 = pkin(9) * t250 + t59;
t158 = qJD(2) * t278;
t109 = qJD(2) * t193;
t171 = qJD(2) * t192 - t109;
t232 = qJD(2) * t126;
t210 = t123 * t232;
t199 = pkin(2) * t210;
t280 = -pkin(3) * t158 + pkin(9) * t171 + qJD(4) * t139 - t199;
t279 = t250 * qJD(4) + t171;
t125 = sin(qJ(4));
t128 = cos(qJ(4));
t147 = -t125 * t278 + t128 * t250;
t58 = t149 * t249 - t162 * t247;
t51 = -pkin(3) * t250 - t58;
t41 = -pkin(4) * t147 + t51;
t122 = sin(pkin(12));
t248 = cos(pkin(12));
t84 = t125 * t250 + t128 * t278;
t48 = t122 * t84 - t147 * t248;
t49 = t122 * t147 + t248 * t84;
t135 = t48 * pkin(5) - t49 * pkin(10) + t41;
t160 = qJD(2) * t169;
t157 = t123 * t160;
t155 = pkin(4) * t157;
t16 = t281 * t125 - t280 * t128;
t159 = qJD(4) * t278;
t57 = -t125 * t159 + t279 * t128;
t131 = -t57 * qJ(5) - t84 * qJD(5) + t155 + t16;
t15 = t280 * t125 + t281 * t128;
t220 = t279 * t125 + t128 * t159;
t133 = qJ(5) * t220 - qJD(5) * t147 + t15;
t6 = t122 * t131 - t133 * t248;
t277 = -pkin(10) * t157 - qJD(6) * t135 - t6;
t144 = qJD(4) * t147;
t276 = -t125 * t144 - t220 * t128;
t124 = sin(qJ(6));
t120 = t124 ^ 2;
t127 = cos(qJ(6));
t121 = t127 ^ 2;
t200 = qJD(6) * (t120 - t121);
t107 = t122 * t128 + t125 * t248;
t100 = t107 * qJD(4);
t205 = t248 * t128;
t106 = t122 * t125 - t205;
t165 = -t122 * t220 + t248 * t57;
t275 = -t49 * t100 - t106 * t165;
t227 = qJD(6) * t124;
t35 = t122 * t57 + t220 * t248;
t172 = -t127 * t35 + t227 * t48;
t229 = qJD(4) * t125;
t101 = qJD(4) * t205 - t122 * t229;
t244 = t101 * t127;
t274 = -t107 * t172 + t48 * t244;
t118 = -pkin(2) * t249 - pkin(3);
t110 = -t128 * pkin(4) + t118;
t156 = -t106 * pkin(5) + t107 * pkin(10) - t110;
t150 = t127 * t156;
t116 = pkin(2) * t247 + pkin(9);
t235 = qJ(5) + t116;
t104 = t235 * t128;
t204 = t235 * t125;
t75 = t104 * t248 - t122 * t204;
t42 = -t124 * t75 - t150;
t43 = -t124 * t156 + t127 * t75;
t180 = t124 * t42 - t127 * t43;
t201 = qJD(4) * t235;
t170 = qJD(5) * t125 + t128 * t201;
t93 = qJD(5) * t128 - t125 * t201;
t148 = -t122 * t170 + t248 * t93;
t219 = pkin(4) * t229;
t166 = pkin(5) * t100 - pkin(10) * t101 + t219;
t24 = qJD(6) * t150 - t124 * t166 - t127 * t148 + t227 * t75;
t25 = -qJD(6) * t43 - t124 * t148 + t127 * t166;
t273 = qJD(6) * t180 + t124 * t24 - t127 * t25;
t33 = -t125 * t139 + t128 * t142;
t27 = t96 * pkin(4) - t84 * qJ(5) + t33;
t34 = t125 * t142 + t128 * t139;
t29 = qJ(5) * t147 + t34;
t14 = t122 * t27 + t248 * t29;
t12 = pkin(10) * t96 + t14;
t46 = t145 * t247 - t249 * t146;
t31 = pkin(4) * t220 + t46;
t137 = t35 * pkin(5) - pkin(10) * t165 + t31;
t1 = t12 * t227 - t124 * t137 + t277 * t127;
t7 = -t124 * t12 + t127 * t135;
t8 = t127 * t12 + t124 * t135;
t187 = t124 * t7 - t127 * t8;
t226 = qJD(6) * t127;
t2 = -t12 * t226 + t277 * t124 + t127 * t137;
t272 = qJD(6) * t187 + t1 * t124 - t127 * t2;
t119 = t123 ^ 2;
t271 = 0.2e1 * qJD(4);
t270 = pkin(4) * t122;
t132 = -t122 * t133 - t248 * t131;
t4 = -pkin(5) * t157 + t132;
t269 = t124 * t4;
t268 = t127 * t4;
t63 = t122 * t93 + t170 * t248;
t74 = t104 * t122 + t204 * t248;
t267 = t74 * t63;
t40 = t124 * t96 + t127 * t49;
t21 = qJD(6) * t40 + t124 * t165 - t127 * t157;
t254 = t127 * t21;
t39 = t124 * t49 - t96 * t127;
t265 = -t107 * t254 - t39 * t244;
t264 = -t124 * t21 - t39 * t226;
t263 = -t101 * t48 - t107 * t35;
t20 = -t124 * t157 - t127 * t165 - t226 * t96 + t227 * t49;
t262 = t40 * t100 - t20 * t106;
t261 = -t125 * t220 + t128 * t144;
t236 = t127 * t100;
t260 = t106 * t244 + t107 * t236;
t83 = t107 * t100;
t178 = -t101 * t106 - t83;
t259 = t101 * t96;
t258 = t124 * t20;
t257 = t124 * t39;
t256 = t124 * t63;
t255 = t125 * t57;
t253 = t127 * t40;
t252 = t127 * t63;
t246 = t101 * t120;
t245 = t101 * t124;
t243 = t106 * t100;
t242 = t107 * t101;
t115 = pkin(10) + t270;
t241 = t115 * t124;
t240 = t115 * t127;
t94 = t121 * t101;
t237 = t124 * t127;
t233 = qJD(2) * t123;
t231 = qJD(2) * t129;
t228 = qJD(4) * t128;
t225 = 0.2e1 * t48 * t35;
t224 = 0.2e1 * t250;
t223 = 0.2e1 * t243;
t222 = t118 * t271;
t117 = -pkin(4) * t248 - pkin(5);
t221 = 0.2e1 * qJD(6) * t117;
t218 = t40 * t245;
t216 = t96 * t228;
t214 = t119 * t231;
t213 = t116 * t229;
t212 = t116 * t228;
t211 = t107 * t227;
t209 = t124 * t226;
t208 = t125 * t228;
t202 = -0.4e1 * t107 * t237;
t105 = t107 ^ 2;
t196 = t105 * t209;
t195 = t126 * t214;
t191 = t250 * t233;
t190 = -t1 * t127 - t124 * t2;
t188 = -t124 * t8 - t127 * t7;
t186 = -t100 * t39 - t106 * t21;
t185 = t100 * t48 + t106 * t35;
t184 = t74 * t100 + t63 * t106;
t182 = t253 + t257;
t181 = -t124 * t43 - t127 * t42;
t179 = -t16 * t125 - t15 * t128;
t177 = -t100 * t115 + t101 * t117;
t176 = t106 * t115 - t107 * t117;
t175 = t128 * t57 - t229 * t84;
t174 = -t127 * t20 - t227 * t40;
t173 = t124 * t35 + t226 * t48;
t13 = -t122 * t29 + t248 * t27;
t71 = t100 * t124 + t106 * t226;
t72 = -t107 * t226 - t245;
t168 = -pkin(8) * t238 - t198;
t167 = pkin(8) * t239 - t197;
t154 = qJD(6) * t188 + t190;
t153 = -t107 * t173 - t245 * t48;
t152 = t125 * t157;
t151 = qJD(6) * t181 - t124 * t25 - t127 * t24;
t108 = (-t129 * pkin(2) - pkin(1)) * t123;
t99 = t168 * qJD(2);
t98 = t167 * qJD(2);
t79 = t107 * t94;
t78 = t120 * t242;
t70 = t211 - t244;
t69 = t106 * t227 - t236;
t68 = -t94 - t246;
t67 = t157 * t282;
t64 = t128 * t157 - t229 * t96;
t55 = -t101 * t237 + t107 * t200;
t47 = -t100 * t96 - t106 * t157;
t11 = -t96 * pkin(5) - t13;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t195, 0.2e1 * (-t126 ^ 2 + t129 ^ 2) * t119 * qJD(2), 0.2e1 * t129 * t191, -0.2e1 * t195, -0.2e1 * t126 * t191, 0, -0.2e1 * pkin(1) * t119 * t232 + 0.2e1 * t250 * t99, -0.2e1 * pkin(1) * t214 + 0.2e1 * t250 * t98, 0.2e1 * (-t126 * t99 - t129 * t98 + (t126 * t168 + t129 * t167) * qJD(2)) * t123, -0.2e1 * t167 * t99 + 0.2e1 * t168 * t98, 0.2e1 * t171 * t278, 0.2e1 * t109 * t96 + 0.2e1 * (-t169 * t278 - t206 * t96) * t233, t171 * t224, t158 * t282, -t158 * t224, 0, 0.2e1 * t108 * t157 + 0.2e1 * t199 * t96 - 0.2e1 * t250 * t46, 0.2e1 * pkin(2) * t119 * t126 * t160 + 0.2e1 * t108 * t171 - 0.2e1 * t136 * t250, -0.2e1 * t136 * t96 - 0.2e1 * t158 * t59 - 0.2e1 * t171 * t58 + 0.2e1 * t278 * t46, 0.2e1 * t108 * t199 + 0.2e1 * t136 * t59 - 0.2e1 * t58 * t46, 0.2e1 * t84 * t57, 0.2e1 * t147 * t57 - 0.2e1 * t220 * t84, 0.2e1 * t157 * t84 + 0.2e1 * t57 * t96, -0.2e1 * t147 * t220, 0.2e1 * t147 * t157 - 0.2e1 * t220 * t96, t67, -0.2e1 * t147 * t46 + 0.2e1 * t157 * t33 + 0.2e1 * t16 * t96 + 0.2e1 * t220 * t51, 0.2e1 * t15 * t96 - 0.2e1 * t158 * t34 + 0.2e1 * t46 * t84 + 0.2e1 * t51 * t57, -0.2e1 * t147 * t15 - 0.2e1 * t16 * t84 - 0.2e1 * t220 * t34 - 0.2e1 * t33 * t57, -0.2e1 * t15 * t34 + 0.2e1 * t16 * t33 + 0.2e1 * t46 * t51, 0.2e1 * t49 * t165, -0.2e1 * t165 * t48 - 0.2e1 * t49 * t35, 0.2e1 * t157 * t49 + 0.2e1 * t165 * t96, t225, -0.2e1 * t157 * t48 - 0.2e1 * t35 * t96, t67, 0.2e1 * t13 * t157 - 0.2e1 * t132 * t96 + 0.2e1 * t31 * t48 + 0.2e1 * t41 * t35, -0.2e1 * t14 * t158 + 0.2e1 * t165 * t41 + 0.2e1 * t31 * t49 - 0.2e1 * t6 * t96, -0.2e1 * t13 * t165 + 0.2e1 * t132 * t49 - 0.2e1 * t14 * t35 - 0.2e1 * t6 * t48, -0.2e1 * t13 * t132 + 0.2e1 * t14 * t6 + 0.2e1 * t31 * t41, -0.2e1 * t40 * t20, 0.2e1 * t20 * t39 - 0.2e1 * t21 * t40, -0.2e1 * t20 * t48 + 0.2e1 * t35 * t40, 0.2e1 * t39 * t21, -0.2e1 * t21 * t48 - 0.2e1 * t35 * t39, t225, 0.2e1 * t11 * t21 + 0.2e1 * t2 * t48 + 0.2e1 * t35 * t7 + 0.2e1 * t39 * t4, 0.2e1 * t1 * t48 - 0.2e1 * t11 * t20 - 0.2e1 * t35 * t8 + 0.2e1 * t4 * t40, 0.2e1 * t1 * t39 - 0.2e1 * t2 * t40 + 0.2e1 * t20 * t7 - 0.2e1 * t21 * t8, -0.2e1 * t1 * t8 + 0.2e1 * t11 * t4 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t123 * t231, 0, -t210, 0, t99, t98, 0, 0, 0, 0, t171, 0, -t158, 0, -t46, -t136 (t249 * t109 + (-t129 * t249 ^ 2 - t169 * t247) * t233) * pkin(2) (t136 * t247 - t249 * t46) * pkin(2), t228 * t84 + t255, t175 + t261, t152 + t216, t276, t64, 0, -t116 * t152 + t118 * t220 - t46 * t128 - t212 * t96 + t229 * t51, -t116 * t128 * t158 + t118 * t57 + t46 * t125 + t213 * t96 + t228 * t51, t212 * t84 - t228 * t33 - t229 * t34 + t179 + (t255 + t276) * t116, t118 * t46 + ((-t34 * t125 - t33 * t128) * qJD(4) + t179) * t116, t49 * t101 + t107 * t165, t263 + t275, t107 * t157 + t259, t185, t47, 0, t41 * t100 + t31 * t106 + t110 * t35 - t157 * t74 + t219 * t48 - t63 * t96, t41 * t101 + t31 * t107 + t110 * t165 - t148 * t96 - t158 * t75 + t219 * t49, -t14 * t100 - t13 * t101 - t6 * t106 + t107 * t132 - t148 * t48 + t165 * t74 - t75 * t35 + t63 * t49, t31 * t110 - t13 * t63 + t132 * t74 + t14 * t148 + t219 * t41 + t6 * t75, t107 * t174 + t244 * t40, -t218 + (t258 + (-t253 + t257) * qJD(6)) * t107 + t265, t262 + t274, -t264 * t107 + t39 * t245, t153 + t186, t185, t11 * t245 + t100 * t7 + t106 * t2 + t21 * t74 + t25 * t48 + t35 * t42 + t39 * t63 + (t11 * t226 + t269) * t107, t11 * t244 + t1 * t106 - t100 * t8 - t20 * t74 + t24 * t48 - t35 * t43 + t40 * t63 + (-t11 * t227 + t268) * t107, t188 * t101 + t107 * t272 + t20 * t42 - t21 * t43 + t24 * t39 - t25 * t40, -t1 * t43 + t11 * t63 + t2 * t42 - t24 * t8 + t25 * t7 + t4 * t74; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t208 (-t125 ^ 2 + t128 ^ 2) * t271, 0, -0.2e1 * t208, 0, 0, t125 * t222, t128 * t222, 0, 0, 0.2e1 * t242, 0.2e1 * t178, 0, t223, 0, 0, 0.2e1 * t100 * t110 + 0.2e1 * t106 * t219, 0.2e1 * t101 * t110 + 0.2e1 * t107 * t219, -0.2e1 * t75 * t100 + 0.2e1 * t74 * t101 - 0.2e1 * t106 * t148 + 0.2e1 * t63 * t107, 0.2e1 * t110 * t219 + 0.2e1 * t148 * t75 + 0.2e1 * t267, 0.2e1 * t79 - 0.2e1 * t196, t101 * t202 + 0.2e1 * t105 * t200, -0.2e1 * t106 * t211 + 0.2e1 * t260, 0.2e1 * t78 + 0.2e1 * t196, 0.2e1 * t106 * t72 - 0.2e1 * t124 * t83, t223, 0.2e1 * t74 * t245 + 0.2e1 * t100 * t42 + 0.2e1 * t106 * t25 + 0.2e1 * (t226 * t74 + t256) * t107, 0.2e1 * t74 * t244 - 0.2e1 * t100 * t43 + 0.2e1 * t106 * t24 + 0.2e1 * (-t227 * t74 + t252) * t107, 0.2e1 * t181 * t101 + 0.2e1 * t107 * t273, -0.2e1 * t24 * t43 + 0.2e1 * t25 * t42 + 0.2e1 * t267; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157, t171, 0, t199, 0, 0, 0, 0, 0, 0, t64, -t125 * t158 - t216, -t175 + t261, -t125 * t15 + t128 * t16 + (-t125 * t33 + t128 * t34) * qJD(4), 0, 0, 0, 0, 0, 0, t47, -t107 * t158 - t259, t263 - t275, -t100 * t13 + t101 * t14 + t106 * t132 + t107 * t6, 0, 0, 0, 0, 0, 0, t153 - t186, t262 - t274, t218 + (qJD(6) * t182 - t258) * t107 + t265, t100 * t11 - t101 * t187 + t106 * t4 + t107 * t154; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t75 * t101 + t107 * t148 + t184, 0, 0, 0, 0, 0, 0, 0, t127 * t178 + t260, 0, -t101 * t180 + t107 * t151 + t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t242 + 0.2e1 * t243, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t78 + 0.2e1 * t79 + 0.2e1 * t243; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t57, 0, -t220, t157, t16, t15, 0, 0, 0, 0, t165, 0, -t35, t157, t155 * t248 - t132, -t158 * t270 - t6 (-t122 * t35 - t165 * t248) * pkin(4) (t122 * t6 - t132 * t248) * pkin(4), t226 * t40 - t258, t174 + t264, t173, t227 * t39 - t254, -t172, 0, -t35 * t241 + t117 * t21 - t268 + (t11 * t124 - t240 * t48) * qJD(6), -t35 * t240 - t117 * t20 + t269 + (t11 * t127 + t241 * t48) * qJD(6) (-t254 - t258) * t115 + (t115 * t182 + t188) * qJD(6) + t190, t115 * t154 + t117 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t228, 0, -t229, 0, -t212, t213, 0, 0, 0, 0, t101, 0, -t100, 0, -t63, -t148 (-t100 * t122 - t101 * t248) * pkin(4) (t122 * t148 - t248 * t63) * pkin(4), -t55, qJD(6) * t202 - t246 + t94, t71, t55, -t69, 0, -t252 + t177 * t124 + (t124 * t74 - t127 * t176) * qJD(6), t256 + t177 * t127 + (t124 * t176 + t127 * t74) * qJD(6), t151, t115 * t151 + t117 * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t229, -t228, 0, 0, 0, 0, 0, 0, 0, 0, -t100, -t101, 0 (-t100 * t248 + t101 * t122) * pkin(4), 0, 0, 0, 0, 0, 0, t69, t71, -t68, t100 * t117 + (t120 + t121) * t115 * t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t209, -0.2e1 * t200, 0, -0.2e1 * t209, 0, 0, t124 * t221, t127 * t221, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t35, t165, 0, t31, 0, 0, 0, 0, 0, 0, -t172, -t173, -t174 + t264, -t272; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, t101, 0, t219, 0, 0, 0, 0, 0, 0, -t69, -t71, t68, -t273; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t20, 0, -t21, t35, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, 0, t72, t100, t25, t24, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t72, t70, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t226, 0, -t227, 0, -t115 * t226, t115 * t227, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t227, -t226, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
