% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6RRRRPR10
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6]';
% 
% Output:
% tau_reg [6x35]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 23:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPR10_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR10_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR10_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR10_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR10_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPR10_invdynJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 23:08:36
% EndTime: 2019-03-09 23:09:03
% DurationCPUTime: 12.70s
% Computational Cost: add. (14312->689), mult. (34676->919), div. (0->0), fcn. (28026->14), ass. (0->343)
t273 = cos(qJ(2));
t267 = sin(pkin(6));
t470 = sin(qJ(3));
t409 = t267 * t470;
t369 = qJD(1) * t409;
t337 = t273 * t369;
t399 = qJD(3) * t470;
t520 = t337 - t399;
t274 = -pkin(10) - pkin(9);
t472 = cos(qJ(3));
t233 = t274 * t472;
t270 = sin(qJ(2));
t453 = cos(pkin(6));
t388 = t453 * qJD(1);
t372 = pkin(1) * t388;
t427 = qJD(1) * t267;
t404 = t270 * t427;
t198 = -pkin(8) * t404 + t273 * t372;
t354 = pkin(2) * t270 - pkin(9) * t273;
t199 = t354 * t427;
t343 = -t198 * t470 + t472 * t199;
t407 = t273 * t472;
t522 = (pkin(3) * t270 - pkin(10) * t407) * t427 + t343 - t233 * qJD(3);
t232 = t274 * t470;
t430 = t472 * t198 + t470 * t199;
t521 = pkin(10) * t337 + t232 * qJD(3) - t430;
t269 = sin(qJ(4));
t410 = t267 * t472;
t370 = qJD(1) * t410;
t334 = t273 * t370;
t471 = cos(qJ(4));
t373 = t471 * t472;
t483 = qJD(3) + qJD(4);
t433 = t334 * t471 - t483 * t373 + (qJD(4) * t470 - t520) * t269;
t332 = t388 + qJD(2);
t306 = t472 * t332;
t180 = -t270 * t369 + t306;
t181 = t270 * t370 + t470 * t332;
t124 = -t471 * t180 + t181 * t269;
t268 = sin(qJ(6));
t380 = t453 * qJDD(1);
t328 = t380 + qJDD(2);
t283 = qJD(3) * t306 + t328 * t470;
t367 = qJD(2) * t407;
t300 = -t270 * t399 + t367;
t408 = t270 * t472;
t499 = qJD(1) * t300 + qJDD(1) * t408;
t279 = t267 * t499 + t283;
t406 = t273 * t470;
t376 = t267 * t406;
t336 = qJD(2) * t376;
t377 = t270 * t409;
t517 = qJD(3) * t181;
t289 = qJD(1) * t336 + qJDD(1) * t377 - t328 * t472 + t517;
t398 = qJD(4) * t471;
t425 = qJD(4) * t269;
t51 = -t180 * t398 + t181 * t425 + t269 * t289 - t471 * t279;
t48 = -qJDD(6) + t51;
t319 = t269 * t180 + t181 * t471;
t485 = qJD(6) + t319;
t272 = cos(qJ(6));
t508 = t485 * t272;
t310 = t268 * t48 - t485 * t508;
t403 = t273 * t427;
t231 = -qJD(3) + t403;
t221 = -qJD(4) + t231;
t96 = -t272 * t124 - t221 * t268;
t519 = -t124 * t96 + t310;
t509 = t485 * t268;
t322 = -t272 * t48 - t485 * t509;
t98 = t124 * t268 - t221 * t272;
t518 = t124 * t98 + t322;
t418 = qJDD(1) * t273;
t247 = t267 * t418;
t420 = qJD(1) * qJD(2);
t396 = t270 * t420;
t365 = t267 * t396;
t196 = qJDD(3) - t247 + t365;
t189 = qJDD(4) + t196;
t423 = qJD(6) * t272;
t424 = qJD(6) * t268;
t52 = qJD(4) * t319 + t269 * t279 + t471 * t289;
t22 = t124 * t423 + t272 * t189 + t221 * t424 + t268 * t52;
t21 = t22 * t272;
t516 = -t509 * t98 + t21;
t389 = t189 * t268 - t272 * t52;
t23 = qJD(6) * t98 + t389;
t511 = t485 * t96;
t515 = -t508 * t98 + (-t22 + t511) * t268 - t272 * t23;
t468 = pkin(5) * t124;
t242 = pkin(8) * t403;
t201 = t270 * t372 + t242;
t165 = pkin(9) * t332 + t201;
t330 = -pkin(2) * t273 - pkin(9) * t270 - pkin(1);
t195 = t330 * t267;
t175 = qJD(1) * t195;
t110 = -t165 * t470 + t472 * t175;
t90 = -t181 * pkin(10) + t110;
t82 = -t231 * pkin(3) + t90;
t311 = -t165 * t472 - t175 * t470;
t91 = t180 * pkin(10) - t311;
t89 = t471 * t91;
t43 = t269 * t82 + t89;
t40 = qJ(5) * t221 - t43;
t26 = -t40 - t468;
t512 = t26 * t485;
t452 = qJ(5) * t124;
t451 = t319 * t124;
t510 = t485 * t124;
t459 = t269 * t91;
t42 = -t471 * t82 + t459;
t436 = -qJD(5) - t42;
t507 = t232 * t398 + t233 * t425 - t269 * t522 + t521 * t471;
t215 = t269 * t472 + t470 * t471;
t157 = t483 * t215;
t166 = t215 * t403;
t432 = t157 - t166;
t327 = -pkin(3) * t520 - t201;
t476 = t319 ^ 2;
t506 = -t124 ^ 2 + t476;
t495 = pkin(5) * t319;
t435 = t495 - t436;
t475 = pkin(4) + pkin(11);
t24 = t221 * t475 + t435;
t164 = -pkin(2) * t332 - t198;
t129 = -t180 * pkin(3) + t164;
t282 = -qJ(5) * t319 + t129;
t37 = t124 * t475 + t282;
t15 = t24 * t268 + t272 * t37;
t371 = pkin(1) * qJD(2) * t453;
t329 = qJD(1) * t371;
t362 = pkin(1) * t380;
t412 = pkin(8) * t247 + t270 * t362 + t273 * t329;
t303 = -pkin(8) * t365 + t412;
t134 = pkin(9) * t328 + t303;
t320 = t354 * qJD(2);
t136 = (qJD(1) * t320 + qJDD(1) * t330) * t267;
t347 = -t134 * t470 + t472 * t136;
t400 = qJD(3) * t472;
t29 = t196 * pkin(3) - pkin(10) * t279 - t165 * t400 - t175 * t399 + t347;
t309 = t472 * t134 + t470 * t136 - t165 * t399 + t175 * t400;
t36 = -pkin(10) * t289 + t309;
t391 = -t269 * t29 - t471 * t36 - t82 * t398 + t91 * t425;
t179 = t189 * qJ(5);
t491 = qJD(5) * t221 - t179;
t9 = t391 + t491;
t7 = -pkin(5) * t52 - t9;
t505 = -t15 * t124 + t7 * t272;
t14 = t24 * t272 - t268 * t37;
t504 = t14 * t124 + t26 * t423 + t7 * t268;
t302 = -t124 * t221 - t51;
t271 = sin(qJ(1));
t473 = cos(qJ(1));
t358 = t453 * t473;
t206 = t270 * t358 + t271 * t273;
t266 = qJ(3) + qJ(4);
t261 = sin(t266);
t262 = cos(t266);
t411 = t267 * t473;
t148 = t206 * t262 - t261 * t411;
t393 = t270 * t453;
t208 = -t271 * t393 + t273 * t473;
t440 = t267 * t271;
t152 = t208 * t262 + t261 * t440;
t441 = t267 * t270;
t192 = t261 * t453 + t262 * t441;
t314 = -g(1) * t152 - g(2) * t148 - g(3) * t192;
t297 = -t314 + t391;
t59 = t124 * pkin(4) + t282;
t503 = -t124 * t59 - t297 - t491;
t502 = t124 * t129 + t297;
t147 = t206 * t261 + t262 * t411;
t205 = t270 * t271 - t273 * t358;
t501 = t147 * t268 + t205 * t272;
t500 = t147 * t272 - t205 * t268;
t263 = t267 ^ 2;
t497 = 0.2e1 * t263;
t496 = pkin(4) * t319;
t494 = t26 * t319;
t457 = qJ(5) * t404 - t507;
t55 = t471 * t90 - t459;
t455 = -pkin(3) * t398 - qJD(5) + t55;
t54 = t269 * t90 + t89;
t363 = pkin(3) * t425 - t54;
t493 = t319 * t475;
t170 = t269 * t232 - t233 * t471;
t492 = qJD(4) * t170 + t521 * t269 + t471 * t522;
t392 = t273 * t453;
t324 = pkin(1) * t392 - pkin(8) * t441;
t490 = qJ(5) * t433 - qJD(5) * t215 + t327;
t489 = (qJDD(2) + 0.2e1 * t380) * t267;
t488 = -t334 + t400;
t487 = -t472 * t196 - t231 * t399;
t207 = t270 * t473 + t271 * t392;
t486 = g(1) * t207 + g(2) * t205;
t484 = t485 - qJD(6);
t419 = qJDD(1) * t270;
t394 = t267 * t419;
t378 = pkin(8) * t394 + qJD(2) * t242 + t270 * t329 - t273 * t362;
t135 = -pkin(2) * t328 + t378;
t482 = t135 - t486;
t151 = t208 * t261 - t262 * t440;
t191 = t261 * t441 - t262 * t453;
t390 = -t269 * t36 + t471 * t29 - t91 * t398 - t82 * t425;
t298 = g(1) * t151 + g(2) * t147 + g(3) * t191 + t390;
t288 = t319 * t59 + qJDD(5) - t298;
t258 = -pkin(3) * t471 - pkin(4);
t255 = -pkin(11) + t258;
t481 = t485 * (t363 + t468) - t255 * t48;
t480 = -t129 * t319 + t298;
t479 = -t221 * t319 - t52;
t439 = t267 * t273;
t307 = g(3) * t439 - t486;
t478 = -t170 * t189 + t307 * t261;
t169 = -t232 * t471 - t269 * t233;
t477 = -t169 * t189 - t307 * t262;
t357 = t453 * t472;
t299 = t377 - t357;
t429 = pkin(1) * t393 + pkin(8) * t439;
t194 = pkin(9) * t453 + t429;
t431 = t472 * t194 + t470 * t195;
t103 = -pkin(10) * t299 + t431;
t286 = -qJD(3) * t299 + t267 * t367;
t200 = t267 * t320;
t202 = t324 * qJD(2);
t346 = t472 * t200 - t202 * t470;
t426 = qJD(2) * t270;
t402 = t267 * t426;
t65 = pkin(3) * t402 - pkin(10) * t286 - t194 * t400 - t195 * t399 + t346;
t204 = t267 * t408 + t453 * t470;
t285 = qJD(3) * t204 + t336;
t308 = -t194 * t399 + t195 * t400 + t470 * t200 + t472 * t202;
t69 = -pkin(10) * t285 + t308;
t344 = -t194 * t470 + t472 * t195;
t95 = -pkin(3) * t439 - t204 * pkin(10) + t344;
t317 = t103 * t425 - t269 * t65 - t95 * t398 - t471 * t69;
t16 = -t267 * (qJ(5) * t426 - qJD(5) * t273) + t317;
t276 = qJD(1) ^ 2;
t469 = pkin(4) * t189;
t465 = g(3) * t267;
t464 = -pkin(5) * t432 - t457;
t463 = pkin(4) * t432 + t490;
t462 = t221 * t43;
t458 = t471 * t103 + t269 * t95;
t456 = pkin(4) * t404 + t492;
t454 = -t455 + t495;
t214 = t269 * t470 - t373;
t446 = t214 * t268;
t445 = t214 * t272;
t444 = t261 * t268;
t443 = t261 * t272;
t442 = t263 * t276;
t438 = t268 * t273;
t437 = t272 * t273;
t401 = qJD(2) * t439;
t203 = pkin(8) * t401 + t270 * t371;
t264 = t270 ^ 2;
t428 = -t273 ^ 2 + t264;
t415 = t273 * t442;
t414 = t267 * t438;
t413 = t267 * t437;
t397 = pkin(1) * t497;
t395 = t273 * t420;
t387 = -t147 * pkin(4) + t148 * qJ(5);
t386 = -t151 * pkin(4) + t152 * qJ(5);
t385 = -t191 * pkin(4) + t192 * qJ(5);
t379 = t475 * t441;
t259 = pkin(3) * t472 + pkin(2);
t374 = t473 * t470;
t315 = -t215 * qJ(5) - t259;
t130 = t214 * t475 + t315;
t360 = pkin(5) * t433 - qJD(1) * t379 + qJD(6) * t130 - t492;
t139 = t215 * pkin(5) + t169;
t359 = -qJD(6) * t139 - t432 * t475 - t490;
t356 = t267 * t276 * t453;
t355 = -t269 * t103 + t471 * t95;
t353 = g(1) * t147 - g(2) * t151;
t352 = -g(1) * t148 + g(2) * t152;
t351 = -g(1) * t205 + g(2) * t207;
t350 = g(1) * t208 + g(2) * t206;
t342 = qJDD(5) - t390;
t4 = -pkin(5) * t51 - t189 * t475 + t342;
t76 = pkin(3) * t289 + t135;
t280 = t51 * qJ(5) - qJD(5) * t319 + t76;
t8 = t475 * t52 + t280;
t349 = t268 * t4 + t272 * t8;
t345 = t206 * t472 - t267 * t374;
t341 = pkin(3) * t181 + t452;
t340 = (t43 - t468) * t485 - t475 * t48;
t295 = t269 * t299;
t142 = t204 * t471 - t295;
t61 = pkin(4) * t439 - t355;
t38 = t142 * pkin(5) + pkin(11) * t439 + t61;
t292 = t471 * t299;
t141 = t204 * t269 + t292;
t193 = -pkin(2) * t453 - t324;
t296 = t299 * pkin(3);
t143 = t296 + t193;
t281 = -t142 * qJ(5) + t143;
t57 = t141 * t475 + t281;
t339 = -t268 * t57 + t272 * t38;
t338 = t268 * t38 + t272 * t57;
t331 = 0.2e1 * t388 + qJD(2);
t60 = qJ(5) * t439 - t458;
t321 = t103 * t398 + t269 * t69 + t95 * t425 - t471 * t65;
t119 = t141 * t272 + t414;
t137 = -t272 * t166 + t268 * t404;
t313 = -t157 * t272 + t214 * t424 - t137;
t138 = t166 * t268 + t272 * t404;
t312 = t157 * t268 + t214 * t423 - t138;
t160 = -t208 * t470 + t271 * t410;
t304 = -t196 * t470 + t231 * t400;
t301 = t206 * t470 + t410 * t473;
t2 = -qJD(6) * t15 - t268 * t8 + t272 * t4;
t291 = (-qJD(6) * t255 + t341 + t493) * t485 + t314;
t290 = (qJD(6) * t475 + t452 + t493) * t485 + t314;
t287 = qJD(3) * t311 + t347;
t131 = pkin(3) * t285 + t203;
t74 = qJD(4) * t292 + t204 * t425 + t269 * t285 - t286 * t471;
t75 = -qJD(4) * t295 + t204 * t398 + t269 * t286 + t285 * t471;
t19 = t75 * pkin(4) + t74 * qJ(5) - t142 * qJD(5) + t131;
t256 = pkin(3) * t269 + qJ(5);
t161 = t208 * t472 + t271 * t409;
t144 = t214 * pkin(4) + t315;
t140 = -t214 * pkin(5) + t170;
t120 = t141 * t268 - t413;
t115 = t151 * t268 + t207 * t272;
t114 = t151 * t272 - t207 * t268;
t77 = t452 + t496;
t70 = t141 * pkin(4) + t281;
t66 = t341 + t496;
t50 = qJD(6) * t119 + t268 * t75 + t272 * t402;
t49 = -qJD(6) * t413 - t272 * t75 + (qJD(6) * t141 + t402) * t268;
t41 = -pkin(5) * t141 - t60;
t39 = pkin(4) * t221 - t436;
t18 = -pkin(4) * t402 + t321;
t17 = t75 * pkin(11) + t19;
t13 = t52 * pkin(4) + t280;
t12 = -pkin(5) * t75 - t16;
t11 = -t74 * pkin(5) - qJD(2) * t379 + t321;
t10 = t342 - t469;
t1 = t14 * qJD(6) + t349;
t3 = [qJDD(1), g(1) * t271 - g(2) * t473, g(1) * t473 + g(2) * t271 (qJDD(1) * t264 + 0.2e1 * t270 * t395) * t263 (t270 * t418 - t420 * t428) * t497, t270 * t489 + t331 * t401, t273 * t489 - t331 * t402, t328 * t453, -t203 * t332 + t324 * t328 - t378 * t453 + g(1) * t206 - g(2) * t208 + (-t396 + t418) * t397, -t202 * t332 - t429 * t328 - t303 * t453 + (-t395 - t419) * t397 + t351, t283 * t204 + t357 * t517 + (t181 * t300 + t204 * t499) * t267, t180 * t286 - t181 * t285 - t204 * t289 - t279 * t299, t181 * t402 + t204 * t196 - t231 * t286 - t279 * t439, t180 * t402 - t196 * t299 + t231 * t285 + t289 * t439 (-t196 * t273 - t231 * t426) * t267 -(-qJD(3) * t431 + t346) * t231 + t344 * t196 - t287 * t439 + t110 * t402 - t203 * t180 + t193 * t289 + t135 * t299 + t164 * t285 + g(1) * t345 - g(2) * t161, -g(1) * t301 - g(2) * t160 + t135 * t204 + t164 * t286 + t203 * t181 + t193 * t279 - t196 * t431 + t231 * t308 + t309 * t439 + t311 * t402, -t142 * t51 - t319 * t74, t124 * t74 + t141 * t51 - t142 * t52 - t319 * t75, t142 * t189 + t221 * t74 + (t273 * t51 + t319 * t426) * t267, -t141 * t189 + t221 * t75 + (-t124 * t426 + t273 * t52) * t267 (-t189 * t273 - t221 * t426) * t267, t321 * t221 + t355 * t189 + t131 * t124 + t143 * t52 + t76 * t141 + t129 * t75 + (-t273 * t390 - t42 * t426) * t267 - t352, -t317 * t221 - t458 * t189 + t131 * t319 - t143 * t51 + t76 * t142 - t129 * t74 + (-t273 * t391 - t426 * t43) * t267 - t353, t10 * t142 + t124 * t16 + t141 * t9 + t18 * t319 - t39 * t74 + t40 * t75 - t51 * t61 + t52 * t60 - t351, -t124 * t19 - t13 * t141 - t18 * t221 + t189 * t61 - t52 * t70 - t59 * t75 + (-t10 * t273 + t39 * t426) * t267 + t352, -t319 * t19 - t13 * t142 + t16 * t221 - t189 * t60 + t51 * t70 + t59 * t74 + (t273 * t9 - t40 * t426) * t267 + t353, t13 * t70 + t59 * t19 + t9 * t60 + t40 * t16 + t10 * t61 + t39 * t18 - g(1) * (-t271 * pkin(1) - t148 * pkin(4) - t147 * qJ(5) + t205 * t274 - t206 * t259 + (pkin(3) * t374 + pkin(8) * t473) * t267) - g(2) * (t473 * pkin(1) + t152 * pkin(4) + t151 * qJ(5) - t207 * t274 + t208 * t259 + (pkin(3) * t470 + pkin(8)) * t440) t120 * t22 + t50 * t98, t119 * t22 - t120 * t23 - t49 * t98 - t50 * t96, -t120 * t48 + t142 * t22 + t485 * t50 - t74 * t98, -t119 * t48 - t142 * t23 - t485 * t49 + t74 * t96, -t142 * t48 - t485 * t74 (-qJD(6) * t338 + t11 * t272 - t17 * t268) * t485 - t339 * t48 + t2 * t142 - t14 * t74 + t12 * t96 + t41 * t23 - t7 * t119 + t26 * t49 + g(1) * t501 - g(2) * t115 -(qJD(6) * t339 + t11 * t268 + t17 * t272) * t485 + t338 * t48 - t1 * t142 + t15 * t74 + t12 * t98 + t41 * t22 + t7 * t120 + t26 * t50 + g(1) * t500 - g(2) * t114; 0, 0, 0, -t270 * t415, t428 * t442, -t273 * t356 + t394, t270 * t356 + t247, t328, pkin(1) * t270 * t442 + t201 * t332 - t307 - t378, pkin(1) * t415 + t198 * t332 + (pkin(8) * t420 + g(3)) * t441 + t350 - t412, t181 * t488 + t279 * t470, t488 * t180 + t181 * t520 + t279 * t472 - t470 * t289 (-t181 * t270 + t231 * t407) * t427 - t304 (-t180 * t270 - t231 * t406) * t427 - t487, t231 * t404, -pkin(2) * t289 + t164 * t399 + t343 * t231 + t201 * t180 + t304 * pkin(9) + (-g(3) * t407 + (-t110 * t270 - t164 * t406) * qJD(1)) * t267 - t482 * t472, -pkin(2) * t279 + pkin(9) * t487 + g(3) * t376 + t164 * t488 - t201 * t181 - t231 * t430 - t311 * t404 + t470 * t482, -t215 * t51 - t319 * t433, t124 * t433 + t214 * t51 - t215 * t52 - t319 * t432, t189 * t215 + t221 * t433 - t319 * t404, t124 * t404 - t189 * t214 + t221 * t432, t221 * t404, t327 * t124 + t432 * t129 + t76 * t214 + t221 * t492 - t259 * t52 + t42 * t404 + t477, -t433 * t129 + t76 * t215 + t221 * t507 + t259 * t51 + t327 * t319 + t43 * t404 + t478, -g(3) * t441 + t10 * t215 + t124 * t457 - t169 * t51 - t170 * t52 + t214 * t9 + t319 * t456 - t39 * t433 + t40 * t432 - t350, -t124 * t463 - t13 * t214 - t144 * t52 - t221 * t456 - t39 * t404 - t432 * t59 - t477, -t13 * t215 + t144 * t51 + t221 * t457 - t319 * t463 + t40 * t404 + t433 * t59 - t478, t10 * t169 + t13 * t144 - t9 * t170 + t456 * t39 + t457 * t40 + t463 * t59 + (t270 * t465 + t350) * t274 + (-t273 * t465 + t486) * (pkin(4) * t262 + qJ(5) * t261 + t259) t22 * t446 + t312 * t98, t137 * t98 + t138 * t96 + (-t268 * t96 + t272 * t98) * t157 + (t21 - t23 * t268 + (-t268 * t98 - t272 * t96) * qJD(6)) * t214, t215 * t22 + t312 * t485 - t433 * t98 - t446 * t48, -t215 * t23 - t313 * t485 + t433 * t96 - t445 * t48, -t215 * t48 - t433 * t485 -(-t130 * t268 + t139 * t272) * t48 + t2 * t215 + t140 * t23 - t7 * t445 - g(1) * (-t207 * t444 + t208 * t272) - g(2) * (-t205 * t444 + t206 * t272) + t464 * t96 - (t261 * t438 + t270 * t272) * t465 - t433 * t14 + (t268 * t359 - t272 * t360) * t485 + t313 * t26 (t130 * t272 + t139 * t268) * t48 - t1 * t215 + t140 * t22 + t7 * t446 - g(1) * (-t207 * t443 - t208 * t268) - g(2) * (-t205 * t443 - t206 * t268) + t464 * t98 - (t261 * t437 - t268 * t270) * t465 + t433 * t15 + (t268 * t360 + t272 * t359) * t485 + t312 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t181 * t180, -t180 ^ 2 + t181 ^ 2, t180 * t231 + t279, -t181 * t231 - t289, t196, -g(1) * t160 + g(2) * t301 + g(3) * t299 - t164 * t181 + t231 * t311 + t287, g(1) * t161 + g(2) * t345 + g(3) * t204 - t110 * t231 - t164 * t180 - t309, t451, t506, t302, t479, t189, -t54 * t221 + (-t124 * t181 + t189 * t471 + t221 * t425) * pkin(3) + t480, -t55 * t221 + (-t181 * t319 - t189 * t269 + t221 * t398) * pkin(3) + t502, -t256 * t52 - t258 * t51 + (t363 - t40) * t319 + (t455 + t39) * t124, t124 * t66 - t363 * t221 + (-pkin(4) + t258) * t189 + t288, t189 * t256 + t221 * t455 + t319 * t66 + t503, -t9 * t256 + t10 * t258 - t59 * t66 - g(1) * (pkin(3) * t160 + t386) - g(2) * (-pkin(3) * t301 + t387) - g(3) * (-t296 + t385) + t455 * t40 + t363 * t39, t516, t515, t518, t519, t510, t256 * t23 + t454 * t96 + (t481 + t494) * t272 + t291 * t268 + t504, t256 * t22 + t454 * t98 + t291 * t272 + (-t481 - t512) * t268 + t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, t506, t302, t479, t189, -t462 + t480, t221 * t42 + t502, pkin(4) * t51 - qJ(5) * t52 + (-t40 - t43) * t319 + (t39 + t436) * t124, t124 * t77 + t288 + t462 - 0.2e1 * t469, t221 * t436 + t319 * t77 + t179 + t503, -t10 * pkin(4) - g(1) * t386 - g(2) * t387 - g(3) * t385 - t9 * qJ(5) - t39 * t43 + t40 * t436 - t59 * t77, t516, t515, t518, t519, t510, qJ(5) * t23 + t435 * t96 + (-t340 + t494) * t272 + t290 * t268 + t504, qJ(5) * t22 + t435 * t98 + (t340 - t512) * t268 + t290 * t272 + t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t302, t189 - t451, -t221 ^ 2 - t476, -t221 * t40 + t288 - t469, 0, 0, 0, 0, 0, t221 * t96 + t322, t221 * t98 + t310; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t98 * t96, -t96 ^ 2 + t98 ^ 2, t22 + t511, t484 * t98 - t389, -t48, t15 * t485 - t26 * t98 - g(1) * t114 - g(2) * t500 - g(3) * (t191 * t272 + t414) + t2, t26 * t96 + g(1) * t115 + g(2) * t501 - g(3) * (-t191 * t268 + t413) - t349 + t484 * t14;];
tau_reg  = t3;
