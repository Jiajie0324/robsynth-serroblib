% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRRRPR10
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 23:04
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRRRPR10_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR10_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR10_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR10_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR10_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPR10_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 23:01:55
% EndTime: 2019-05-07 23:03:42
% DurationCPUTime: 113.85s
% Computational Cost: add. (604046->1113), mult. (1299851->1568), div. (0->0), fcn. (1057195->12), ass. (0->778)
t2150 = sin(pkin(6));
t2160 = cos(qJ(2));
t2323 = t2150 * t2160;
t2137 = qJD(1) * t2323 - qJD(3);
t2129 = -qJD(4) + t2137;
t2128 = t2129 ^ 2;
t2154 = sin(qJ(3));
t2159 = cos(qJ(3));
t2151 = cos(pkin(6));
t2357 = qJD(1) * t2151;
t2293 = qJD(2) + t2357;
t2155 = sin(qJ(2));
t2324 = t2150 * t2155;
t2305 = qJD(1) * t2324;
t2108 = t2154 * t2293 + t2159 * t2305;
t2153 = sin(qJ(4));
t2158 = cos(qJ(4));
t2213 = t2154 * t2305 - t2159 * t2293;
t2078 = t2158 * t2108 - t2153 * t2213;
t2373 = t2078 ^ 2;
t2035 = t2373 + t2128;
t2076 = t2108 * t2153 + t2158 * t2213;
t2004 = t2078 * t2076;
t2308 = qJDD(1) * t2150;
t2115 = -qJD(2) * t2305 + t2160 * t2308;
t2110 = -qJDD(3) + t2115;
t2109 = -qJDD(4) + t2110;
t2390 = -t2004 + t2109;
t2407 = t2390 * t2153;
t1935 = t2035 * t2158 - t2407;
t2406 = t2390 * t2158;
t1936 = t2035 * t2153 + t2406;
t1829 = t1935 * t2159 - t1936 * t2154;
t1830 = t1935 * t2154 + t1936 * t2159;
t2307 = qJDD(1) * t2155;
t2356 = qJD(1) * t2160;
t2217 = qJD(2) * t2356 + t2307;
t2191 = t2217 * t2150;
t2287 = qJDD(1) * t2151 + qJDD(2);
t2060 = -qJD(3) * t2213 + t2154 * t2287 + t2159 * t2191;
t2170 = -t2154 * t2191 + t2159 * t2287;
t2168 = -t2108 * qJD(3) + t2170;
t1966 = -t2076 * qJD(4) + t2158 * t2060 + t2153 * t2168;
t2055 = t2076 * t2129;
t2388 = t2055 + t1966;
t2253 = t1830 * t2155 - t2160 * t2388;
t1711 = t2150 * t1829 + t2151 * t2253;
t1769 = t1830 * t2160 + t2155 * t2388;
t2156 = sin(qJ(1));
t2161 = cos(qJ(1));
t2484 = pkin(7) * (t1711 * t2161 + t1769 * t2156);
t2483 = pkin(7) * (t1711 * t2156 - t1769 * t2161);
t1709 = -t2151 * t1829 + t2150 * t2253;
t2482 = pkin(8) * (t1709 * t2150 + t1711 * t2151);
t2385 = -t2373 + t2128;
t2181 = t2109 + t2004;
t2395 = t2153 * t2181;
t1943 = t2158 * t2385 - t2395;
t2393 = t2158 * t2181;
t1947 = -t2153 * t2385 - t2393;
t1843 = t1943 * t2159 + t1947 * t2154;
t1846 = t1943 * t2154 - t1947 * t2159;
t2389 = -t2055 + t1966;
t2250 = t1846 * t2155 + t2160 * t2389;
t1721 = t2150 * t1843 + t2151 * t2250;
t1771 = t1846 * t2160 - t2155 * t2389;
t2481 = t1721 * t2156 - t1771 * t2161;
t2480 = t1721 * t2161 + t1771 * t2156;
t2479 = pkin(1) * t1709;
t2478 = pkin(1) * t1711;
t1717 = -t2151 * t1843 + t2150 * t2250;
t2472 = pkin(8) * t1769;
t2073 = t2076 ^ 2;
t1994 = -t2128 - t2073;
t1895 = t1994 * t2153 - t2393;
t1897 = t1994 * t2158 + t2395;
t1794 = t1895 * t2159 + t1897 * t2154;
t2467 = pkin(2) * t1794;
t2466 = pkin(2) * t1829;
t2465 = pkin(9) * t1794;
t1797 = t1895 * t2154 - t1897 * t2159;
t2464 = pkin(9) * t1797;
t2463 = pkin(9) * t1829;
t2462 = t1797 * t2155;
t2461 = t1797 * t2160;
t2047 = t2128 - t2073;
t1944 = t2047 * t2153 + t2406;
t1948 = t2047 * t2158 - t2407;
t1849 = t1944 * t2154 - t1948 * t2159;
t2460 = t1849 * t2155;
t2459 = t1849 * t2160;
t2458 = t2150 * t1794;
t1844 = t1944 * t2159 + t1948 * t2154;
t2456 = t2150 * t1844;
t2455 = t2151 * t1794;
t2453 = t2151 * t1844;
t2452 = pkin(2) * t2388 - pkin(9) * t1830;
t2451 = pkin(3) * t1895;
t2450 = pkin(3) * t1935;
t2449 = pkin(10) * t1895;
t2448 = pkin(10) * t1897;
t2447 = pkin(10) * t1935;
t2446 = pkin(10) * t1936;
t2372 = -2 * qJD(5);
t2302 = t2155 * t2004;
t2327 = t2129 * t2153;
t2278 = t2158 * t1966 + t2078 * t2327;
t2326 = t2129 * t2158;
t2280 = t2153 * t1966 - t2078 * t2326;
t2376 = -t2154 * t2280 + t2159 * t2278;
t2402 = t2160 * t2376 + t2302;
t2375 = t2154 * t2278 + t2159 * t2280;
t2301 = t2160 * t2004;
t2404 = t2155 * t2376 - t2301;
t2430 = -t2150 * t2375 + t2151 * t2404;
t2445 = -t2156 * t2430 + t2161 * t2402;
t2290 = t2153 * t2060 - t2158 * t2168;
t2218 = qJD(4) * t2078 + t2290;
t2174 = -t2076 * t2326 + t2153 * t2218;
t2279 = -t2076 * t2327 - t2158 * t2218;
t2380 = -t2154 * t2279 + t2159 * t2174;
t2401 = t2160 * t2380 - t2302;
t2379 = t2154 * t2174 + t2159 * t2279;
t2403 = t2155 * t2380 + t2301;
t2431 = -t2150 * t2379 + t2151 * t2403;
t2444 = -t2156 * t2431 + t2161 * t2401;
t2443 = t2156 * t2402 + t2161 * t2430;
t2442 = t2156 * t2401 + t2161 * t2431;
t2441 = qJ(5) * t2388;
t2188 = t2108 * t2213;
t2405 = -t2110 - t2188;
t2440 = t2154 * t2405;
t2437 = t2159 * t2405;
t2369 = pkin(2) * t2160;
t2282 = -pkin(9) * t2155 - t2369;
t2358 = qJD(1) * t2150;
t2114 = t2282 * t2358;
t2286 = t2293 ^ 2;
t2140 = g(1) * t2161 + g(2) * t2156;
t2162 = qJD(1) ^ 2;
t2111 = -pkin(1) * t2162 + pkin(8) * t2308 - t2140;
t2139 = t2156 * g(1) - t2161 * g(2);
t2361 = pkin(8) * t2150;
t2185 = qJDD(1) * pkin(1) + t2162 * t2361 + t2139;
t2179 = t2151 * t2185;
t2289 = t2155 * t2111 - t2160 * t2179;
t2012 = (qJD(1) * t2114 * t2155 + g(3) * t2160) * t2150 - t2287 * pkin(2) - t2286 * pkin(9) + t2289;
t2088 = -pkin(3) * t2137 - pkin(10) * t2108;
t2211 = t2213 ^ 2;
t1912 = -t2168 * pkin(3) - t2211 * pkin(10) + t2108 * t2088 + t2012;
t2166 = t2218 * pkin(4) + t1912 - t2441;
t2434 = t2078 * t2372 + t2166;
t2433 = t2150 * t2403 + t2151 * t2379;
t2432 = t2150 * t2404 + t2151 * t2375;
t2322 = t2151 * t2155;
t2214 = (t2076 * t2153 + t2078 * t2158) * t2129;
t2215 = (t2076 * t2158 - t2078 * t2153) * t2129;
t2377 = -t2154 * t2214 + t2159 * t2215;
t2378 = t2154 * t2215 + t2159 * t2214;
t2398 = t2151 * t2160 * t2109 - t2150 * t2378 + t2322 * t2377;
t2400 = -t2109 * t2155 + t2160 * t2377;
t2429 = t2156 * t2400 + t2161 * t2398;
t2428 = -t2156 * t2398 + t2161 * t2400;
t2387 = -t2073 - t2373;
t2427 = pkin(2) * t2387;
t2426 = pkin(3) * t2387;
t2152 = sin(qJ(6));
t1963 = qJDD(6) + t1966;
t2157 = cos(qJ(6));
t2042 = -t2157 * t2076 - t2129 * t2152;
t2044 = t2076 * t2152 - t2129 * t2157;
t1974 = t2044 * t2042;
t2391 = -t1974 + t1963;
t2421 = t2152 * t2391;
t2419 = t2153 * t2388;
t2418 = t2153 * t2389;
t2384 = t2373 - t2073;
t2417 = t2155 * t2384;
t2416 = t2155 * t2387;
t2414 = t2157 * t2391;
t2412 = t2158 * t2388;
t2411 = t2158 * t2389;
t2410 = t2160 * t2384;
t2409 = t2160 * t2387;
t2399 = t2109 * t2323 + t2151 * t2378 + t2324 * t2377;
t2147 = t2150 ^ 2;
t2396 = t2147 * t2155;
t2173 = -g(3) * t2324 + t2155 * t2179;
t2013 = t2287 * pkin(9) - t2286 * pkin(2) + (t2114 * t2358 + t2111) * t2160 + t2173;
t2272 = t2293 * qJD(1);
t2223 = t2155 * t2272;
t2359 = t2151 * g(3);
t2381 = (0.2e1 * qJD(2) + t2357) * t2356 + t2307;
t2014 = -t2115 * pkin(2) - t2359 + (pkin(2) * t2223 - pkin(9) * t2381 - t2185) * t2150;
t1938 = t2154 * t2013 - t2159 * t2014;
t2096 = t2213 * t2137;
t2386 = t2096 - t2060;
t1856 = pkin(3) * t2405 + pkin(10) * t2386 - t1938;
t1939 = t2159 * t2013 + t2154 * t2014;
t1862 = -pkin(3) * t2211 + pkin(10) * t2168 + t2137 * t2088 + t1939;
t1765 = -t2158 * t1856 + t2153 * t1862;
t1997 = pkin(4) * t2076 - qJ(5) * t2078;
t1748 = t2109 * pkin(4) - t2128 * qJ(5) + t2078 * t1997 + qJDD(5) + t1765;
t1683 = pkin(5) * t2389 + pkin(11) * t2181 + t1748;
t2046 = pkin(5) * t2078 + pkin(11) * t2129;
t2295 = -pkin(4) * t2129 + t2372;
t1696 = t2166 + t2290 * pkin(11) + (pkin(11) * qJD(4) - t2046 + t2295) * t2078 - t2073 * pkin(5);
t1623 = -t1683 * t2157 + t2152 * t1696;
t1624 = t1683 * t2152 + t1696 * t2157;
t1581 = -t2157 * t1623 + t1624 * t2152;
t2025 = t2096 + t2060;
t2291 = t2152 * t2109 + t2157 * t2218;
t2072 = qJD(6) + t2078;
t2313 = qJD(6) - t2072;
t1851 = t2044 * t2313 - t2291;
t2041 = t2042 ^ 2;
t2374 = t2044 ^ 2;
t2070 = t2072 ^ 2;
t2107 = t2108 ^ 2;
t2132 = t2137 ^ 2;
t2371 = -pkin(4) - pkin(11);
t2370 = pkin(2) * t2155;
t1766 = t2153 * t1856 + t2158 * t1862;
t1679 = -t1765 * t2158 + t1766 * t2153;
t2368 = pkin(3) * t1679;
t2056 = t2129 * t2078;
t1915 = t2056 + t2218;
t1812 = -t1915 * t2153 - t2411;
t2367 = pkin(3) * t1812;
t2366 = pkin(4) * t2153;
t2365 = pkin(4) * t2158;
t2364 = pkin(5) * t1581;
t2176 = -t2128 * pkin(4) - t2109 * qJ(5) - t2076 * t1997 + t1766;
t1691 = -t2218 * pkin(5) - t2073 * pkin(11) + (t2372 - t2046) * t2129 + t2176;
t2363 = pkin(5) * t1691;
t2177 = -t2157 * t2109 + t2152 * t2218;
t1853 = -t2042 * t2313 + t2177;
t1757 = -t1851 * t2152 - t1853 * t2157;
t2362 = pkin(5) * t1757;
t2360 = pkin(11) * t1581;
t2353 = t1679 * t2154;
t2352 = t1679 * t2159;
t1874 = t1974 + t1963;
t2351 = t1874 * t2157;
t2350 = t1912 * t2153;
t2349 = t1912 * t2158;
t1916 = -t2056 + t2218;
t2348 = t1916 * t2158;
t2341 = t2012 * t2154;
t2340 = t2012 * t2159;
t2052 = t2110 - t2188;
t2339 = t2052 * t2154;
t2338 = t2052 * t2159;
t2337 = t2072 * t2042;
t2336 = t2072 * t2044;
t2335 = t2072 * t2152;
t2334 = t2072 * t2157;
t2298 = t2155 * t2160 * t2162;
t2136 = t2147 * t2298;
t2112 = -t2136 + t2287;
t2331 = t2112 * t2155;
t2330 = t2112 * t2160;
t2113 = t2136 + t2287;
t2329 = t2113 * t2155;
t2328 = t2113 * t2160;
t2325 = t2147 * t2162;
t2321 = t2152 * t1691;
t2320 = t2152 * t1874;
t2319 = t2154 * t2108;
t2017 = -t2096 * t2159 - t2154 * t2168;
t2318 = t2155 * t2017;
t2019 = t2060 * t2159 + t2137 * t2319;
t2317 = t2155 * t2019;
t2099 = t2150 * t2185 + t2359;
t2316 = t2155 * t2099;
t1689 = t2157 * t1691;
t2315 = t2159 * t2108;
t2314 = t2160 * t2099;
t2312 = qJD(6) + t2072;
t1744 = t2129 * t2372 + t2176;
t2311 = -pkin(4) * t1748 + qJ(5) * t1744;
t1914 = (qJD(4) + t2129) * t2078 + t2290;
t2310 = -pkin(4) * t2389 - qJ(5) * t1914;
t2148 = t2155 ^ 2;
t2149 = t2160 ^ 2;
t2309 = t2148 + t2149;
t2306 = t2070 - t2374;
t2304 = t2153 * t1974;
t2303 = t2158 * t1974;
t2300 = t2148 * t2325;
t2299 = t2149 * t2325;
t2297 = -t2070 - t2374;
t2296 = qJ(5) * t2153 + pkin(3);
t1798 = t2157 * t2297 - t2320;
t2294 = -pkin(11) * t1798 + t1689;
t1680 = t1765 * t2153 + t2158 * t1766;
t1833 = t1938 * t2154 + t2159 * t1939;
t2288 = -t2139 * t2156 - t2161 * t2140;
t1654 = t1744 * t2153 - t1748 * t2158;
t2285 = pkin(3) * t1654 + t2311;
t1809 = -t1914 * t2153 - t2411;
t2284 = pkin(3) * t1809 + t2310;
t2283 = -pkin(4) * t1581 + qJ(5) * t1691 - t2360;
t2134 = qJDD(1) * t2161 - t2156 * t2162;
t2281 = -pkin(7) * t2134 - g(3) * t2156;
t1850 = t2044 * t2312 - t2291;
t2277 = pkin(5) * t1850 + t1689;
t1883 = -t2042 * qJD(6) + t2177;
t1854 = t1883 - t2337;
t2276 = pkin(5) * t1854 - t2321;
t2104 = -t2300 - t2286;
t2080 = -t2104 * t2155 - t2330;
t2275 = pkin(8) * t2080 - t2316;
t2119 = -t2286 - t2299;
t2085 = t2119 * t2160 - t2329;
t2274 = pkin(8) * t2085 + t2314;
t1950 = -t2070 - t2041;
t1791 = t2152 * t1950 + t2414;
t2273 = -pkin(11) * t1791 + t2321;
t1567 = -t1581 * t2158 + t1691 * t2153;
t1568 = t1581 * t2153 + t1691 * t2158;
t1537 = -t1567 * t2154 + t1568 * t2159;
t1582 = t2152 * t1623 + t2157 * t1624;
t2271 = t1537 * t2155 - t1582 * t2160;
t1655 = t1744 * t2158 + t1748 * t2153;
t1600 = -t1654 * t2154 + t1655 * t2159;
t1760 = t2078 * t2295 + t2166;
t2270 = t1600 * t2155 - t1760 * t2160;
t1610 = t1680 * t2159 - t2353;
t2269 = t1610 * t2155 - t1912 * t2160;
t1931 = -t2041 - t2374;
t1725 = -t1757 * t2158 + t1931 * t2153;
t1726 = t1757 * t2153 + t1931 * t2158;
t1641 = -t1725 * t2154 + t1726 * t2159;
t1759 = -t1851 * t2157 + t2152 * t1853;
t2268 = t1641 * t2155 - t1759 * t2160;
t2171 = -t2042 * t2312 + t2177;
t1756 = -t2152 * t1850 + t2157 * t2171;
t1973 = -t2041 + t2374;
t1737 = -t1756 * t2158 + t1973 * t2153;
t1738 = t1756 * t2153 + t1973 * t2158;
t1647 = -t1737 * t2154 + t1738 * t2159;
t1758 = -t1850 * t2157 - t2152 * t2171;
t2267 = t1647 * t2155 - t1758 * t2160;
t1741 = -t1791 * t2158 + t1850 * t2153;
t1742 = t1791 * t2153 + t1850 * t2158;
t1651 = -t1741 * t2154 + t1742 * t2159;
t1792 = t1950 * t2157 - t2421;
t2266 = t1651 * t2155 - t1792 * t2160;
t1745 = -t1798 * t2158 + t1854 * t2153;
t1746 = t1798 * t2153 + t1854 * t2158;
t1653 = -t1745 * t2154 + t1746 * t2159;
t1799 = -t2152 * t2297 - t2351;
t2265 = t1653 * t2155 - t1799 * t2160;
t1984 = t2041 - t2070;
t1821 = t1984 * t2152 + t2351;
t1751 = -t1821 * t2158 - t1851 * t2153;
t1753 = t1821 * t2153 - t1851 * t2158;
t1663 = -t1751 * t2154 + t1753 * t2159;
t1823 = t1984 * t2157 - t2320;
t2264 = t1663 * t2155 - t1823 * t2160;
t1820 = t2157 * t2306 + t2421;
t1752 = -t1820 * t2158 + t1853 * t2153;
t1754 = t1820 * t2153 + t1853 * t2158;
t1664 = -t1752 * t2154 + t1754 * t2159;
t1822 = -t2152 * t2306 + t2414;
t2263 = t1664 * t2155 - t1822 * t2160;
t1882 = -qJD(6) * t2044 + t2291;
t1834 = -t1882 * t2157 - t2042 * t2335;
t1784 = t1834 * t2158 - t2304;
t1786 = -t1834 * t2153 - t2303;
t1707 = -t1784 * t2154 + t1786 * t2159;
t1835 = t1882 * t2152 - t2042 * t2334;
t2262 = t1707 * t2155 + t1835 * t2160;
t1836 = t1883 * t2152 + t2044 * t2334;
t1785 = -t1836 * t2158 + t2304;
t1787 = t1836 * t2153 + t2303;
t1708 = -t1785 * t2154 + t1787 * t2159;
t1837 = t1883 * t2157 - t2044 * t2335;
t2261 = t1708 * t2155 - t1837 * t2160;
t1813 = -t1914 * t2158 + t2418;
t1733 = -t1809 * t2154 + t1813 * t2159;
t2260 = t1733 * t2155 - t2409;
t1913 = (qJD(4) - t2129) * t2078 + t2290;
t1810 = -t1913 * t2153 + t2412;
t1814 = -t1913 * t2158 - t2419;
t1734 = -t1810 * t2154 + t1814 * t2159;
t2259 = t1734 * t2155 - t2410;
t1811 = -t1916 * t2153 + t2412;
t1815 = -t2348 - t2419;
t1735 = -t1811 * t2154 + t1815 * t2159;
t2258 = t1735 * t2155 - t2410;
t1816 = -t1915 * t2158 + t2418;
t1736 = -t1812 * t2154 + t1816 * t2159;
t2257 = t1736 * t2155 - t2409;
t1893 = (-t2042 * t2152 - t2044 * t2157) * t2072;
t1824 = -t1893 * t2158 + t1963 * t2153;
t1825 = t1893 * t2153 + t1963 * t2158;
t1750 = -t1824 * t2154 + t1825 * t2159;
t1894 = (-t2042 * t2157 + t2044 * t2152) * t2072;
t2256 = t1750 * t2155 - t1894 * t2160;
t2255 = -t1913 * t2160 - t2462;
t2254 = t1916 * t2160 + t2462;
t2251 = t1833 * t2155 - t2012 * t2160;
t2248 = -t1915 * t2160 - t2460;
t2247 = t1914 * t2160 + t2460;
t1832 = -t1938 * t2159 + t1939 * t2154;
t2097 = t2137 * t2108;
t2023 = t2097 + t2168;
t1953 = t2023 * t2159 - t2025 * t2154;
t2081 = t2107 - t2211;
t2246 = t1953 * t2155 - t2081 * t2160;
t2024 = (-qJD(3) - t2137) * t2108 + t2170;
t1954 = t2024 * t2159 - t2154 * t2386;
t2045 = t2211 + t2107;
t2245 = t1954 * t2155 + t2045 * t2160;
t2065 = -t2132 - t2211;
t1981 = t2065 * t2159 - t2440;
t2244 = t1981 * t2155 + t2023 * t2160;
t2082 = -t2107 - t2132;
t1996 = -t2082 * t2154 + t2338;
t2243 = t1996 * t2155 - t2025 * t2160;
t2090 = -t2107 + t2132;
t2000 = -t2090 * t2154 + t2437;
t2242 = t2000 * t2155 + t2160 * t2386;
t2089 = t2211 - t2132;
t2001 = t2089 * t2159 + t2339;
t2022 = t2097 - t2168;
t2241 = t2001 * t2155 + t2022 * t2160;
t2040 = (t2159 * t2213 - t2319) * t2137;
t2240 = t2040 * t2155 + t2110 * t2160;
t2066 = g(3) * t2323 + t2289;
t2067 = t2160 * t2111 + t2173;
t2239 = -t2160 * t2066 + t2155 * t2067;
t1993 = t2066 * t2155 + t2067 * t2160;
t2224 = t2150 * t2272;
t2123 = t2160 * t2224;
t2092 = t2123 + t2191;
t2122 = t2150 * t2223;
t2095 = t2115 - t2122;
t2238 = t2092 * t2160 + t2095 * t2155;
t2093 = -t2123 + t2191;
t2094 = t2115 + t2122;
t2237 = -t2093 * t2160 + t2094 * t2155;
t2236 = t2104 * t2160 - t2331;
t2118 = -t2286 + t2299;
t2235 = t2118 * t2155 + t2330;
t2117 = t2286 - t2300;
t2234 = t2117 * t2160 + t2329;
t2233 = t2119 * t2155 + t2328;
t2232 = t2139 * t2161 - t2140 * t2156;
t2231 = -pkin(4) * t1798 + qJ(5) * t1854 + t2294;
t2230 = t2150 * t2287;
t2227 = -t1765 + t2451;
t2226 = -pkin(5) * t1791 + t1623;
t2225 = -pkin(11) * t1757 - t1581;
t2216 = pkin(3) * t1567 + t2283;
t2212 = -pkin(4) * t1791 + qJ(5) * t1850 + t2273;
t2210 = -t1766 - t2450;
t2209 = pkin(5) * t1931 - t1582;
t2208 = -pkin(5) * t1798 + t1624;
t1544 = t1582 * t2371 + t2363;
t1548 = -qJ(5) * t1582 + t2364;
t1514 = -pkin(3) * t1582 + pkin(10) * t1568 + t1544 * t2158 + t1548 * t2153;
t1520 = -pkin(10) * t1567 - t1544 * t2153 + t1548 * t2158;
t1536 = t1567 * t2159 + t1568 * t2154;
t1503 = -pkin(9) * t1536 - t1514 * t2154 + t1520 * t2159;
t1519 = -pkin(2) * t1536 - t2216;
t1529 = t1537 * t2160 + t1582 * t2155;
t2207 = pkin(8) * t1529 + t1503 * t2155 + t1519 * t2160;
t1561 = t1759 * t2371 + t2209;
t1667 = -qJ(5) * t1759 + t2362;
t1546 = -pkin(3) * t1759 + pkin(10) * t1726 + t1561 * t2158 + t1667 * t2153;
t1549 = -pkin(10) * t1725 - t1561 * t2153 + t1667 * t2158;
t1640 = t1725 * t2159 + t1726 * t2154;
t1525 = -pkin(9) * t1640 - t1546 * t2154 + t1549 * t2159;
t2190 = -pkin(4) * t1757 + qJ(5) * t1931 + t2225;
t2180 = pkin(3) * t1725 + t2190;
t1547 = -pkin(2) * t1640 - t2180;
t1606 = t1641 * t2160 + t1759 * t2155;
t2206 = pkin(8) * t1606 + t1525 * t2155 + t1547 * t2160;
t1602 = -qJ(5) * t1792 - t2226;
t1614 = t1792 * t2371 + t2277;
t1554 = -pkin(3) * t1792 + pkin(10) * t1742 + t1602 * t2153 + t1614 * t2158;
t1559 = -pkin(10) * t1741 + t1602 * t2158 - t1614 * t2153;
t1650 = t1741 * t2159 + t1742 * t2154;
t1531 = -pkin(9) * t1650 - t1554 * t2154 + t1559 * t2159;
t2184 = pkin(3) * t1741 + t2212;
t1573 = -pkin(2) * t1650 - t2184;
t1625 = t1651 * t2160 + t1792 * t2155;
t2205 = pkin(8) * t1625 + t1531 * t2155 + t1573 * t2160;
t1603 = -qJ(5) * t1799 - t2208;
t1619 = t1799 * t2371 + t2276;
t1555 = -pkin(3) * t1799 + pkin(10) * t1746 + t1603 * t2153 + t1619 * t2158;
t1560 = -pkin(10) * t1745 + t1603 * t2158 - t1619 * t2153;
t1652 = t1745 * t2159 + t1746 * t2154;
t1532 = -pkin(9) * t1652 - t1555 * t2154 + t1560 * t2159;
t2192 = pkin(3) * t1745 + t2231;
t1574 = -pkin(2) * t1652 - t2192;
t1626 = t1653 * t2160 + t1799 * t2155;
t2204 = pkin(8) * t1626 + t1532 * t2155 + t1574 * t2160;
t1591 = pkin(10) * t1655 + (-t2296 - t2365) * t1760;
t1599 = t1654 * t2159 + t1655 * t2154;
t1604 = -pkin(10) * t1654 + (-qJ(5) * t2158 + t2366) * t1760;
t1541 = -pkin(9) * t1599 - t1591 * t2154 + t1604 * t2159;
t1556 = -pkin(2) * t1599 - t2285;
t1585 = t1600 * t2160 + t1760 * t2155;
t2203 = pkin(8) * t1585 + t1541 * t2155 + t1556 * t2160;
t1715 = -pkin(4) * t2387 + t1744;
t1716 = -qJ(5) * t2387 + t1748;
t1611 = pkin(10) * t1813 + t1715 * t2158 + t1716 * t2153 - t2426;
t1620 = -pkin(10) * t1809 - t1715 * t2153 + t1716 * t2158;
t1729 = t1809 * t2159 + t1813 * t2154;
t1565 = -pkin(9) * t1729 - t1611 * t2154 + t1620 * t2159;
t1645 = -pkin(2) * t1729 - t2284;
t1693 = t1733 * t2160 + t2416;
t2202 = pkin(8) * t1693 + t1565 * t2155 + t1645 * t2160;
t1609 = t1680 * t2154 + t2352;
t1666 = -pkin(3) * t1912 + pkin(10) * t1680;
t1571 = -pkin(9) * t1609 - pkin(10) * t2352 - t1666 * t2154;
t1586 = -pkin(2) * t1609 - t2368;
t1605 = t1610 * t2160 + t1912 * t2155;
t2201 = pkin(8) * t1605 + t1571 * t2155 + t1586 * t2160;
t1639 = pkin(10) * t1816 + t1680 - t2426;
t1648 = -pkin(10) * t1812 - t1679;
t1732 = t1812 * t2159 + t1816 * t2154;
t1577 = -pkin(9) * t1732 - t1639 * t2154 + t1648 * t2159;
t1675 = -pkin(2) * t1732 - t2367;
t1694 = t1736 * t2160 + t2416;
t2200 = pkin(8) * t1694 + t1577 * t2155 + t1675 * t2160;
t1728 = (t1916 - t2056) * pkin(4) + t2434;
t1658 = t2158 * t1728 + t1916 * t2296 - t2448;
t1671 = qJ(5) * t2348 - t1728 * t2153 + t2449;
t1598 = -t1658 * t2154 + t1671 * t2159 + t2465;
t2175 = pkin(4) * t2181 - qJ(5) * t1994 + t1748;
t2172 = t2175 - t2451;
t1649 = -t2172 + t2467;
t1762 = -t1916 * t2155 + t2461;
t2199 = pkin(8) * t1762 + t1598 * t2155 + t1649 * t2160;
t1727 = pkin(4) * t2056 - t2434 + t2441;
t1665 = -t2446 + t2153 * t1727 + (pkin(3) + t2365) * t2388;
t1674 = t1727 * t2158 - t2366 * t2388 - t2447;
t1601 = -t1665 * t2154 + t1674 * t2159 - t2463;
t2169 = pkin(4) * t2035 - qJ(5) * t2390 + t1744;
t2167 = t2169 + t2450;
t1657 = -t2167 - t2466;
t2198 = t1601 * t2155 + t1657 * t2160 - t2472;
t1763 = -pkin(3) * t1913 - t2349 + t2448;
t1808 = t2350 - t2449;
t1659 = -t1763 * t2154 + t1808 * t2159 - t2465;
t1676 = -t2227 - t2467;
t1761 = t1913 * t2155 - t2461;
t2197 = pkin(8) * t1761 + t1659 * t2155 + t1676 * t2160;
t1767 = -pkin(3) * t2388 + t2350 + t2446;
t1819 = t2349 + t2447;
t1668 = -t1767 * t2154 + t1819 * t2159 + t2463;
t1681 = -t2210 + t2466;
t2196 = t1668 * t2155 + t1681 * t2160 + t2472;
t1980 = t2065 * t2154 + t2437;
t1861 = -pkin(2) * t1980 + t1938;
t1923 = -pkin(9) * t1980 + t2341;
t1927 = t1981 * t2160 - t2023 * t2155;
t2195 = pkin(8) * t1927 + t1861 * t2160 + t1923 * t2155;
t1995 = t2082 * t2159 + t2339;
t1865 = -pkin(2) * t1995 + t1939;
t1928 = -pkin(9) * t1995 + t2340;
t1930 = t1996 * t2160 + t2025 * t2155;
t2194 = pkin(8) * t1930 + t1865 * t2160 + t1928 * t2155;
t2037 = t2093 * t2155 + t2094 * t2160;
t2193 = pkin(8) * t2037 + t1993;
t1952 = t2024 * t2154 + t2159 * t2386;
t1779 = -pkin(9) * t1952 - t1832;
t1888 = t1954 * t2160 - t2045 * t2155;
t2189 = pkin(8) * t1888 + t1779 * t2155 - t1952 * t2369;
t2187 = -t2151 * t2162 + t2272;
t1788 = t1833 * t2160 + t2012 * t2155;
t2186 = pkin(8) * t1788 + t1832 * t2282;
t2183 = t2155 * t2188;
t2182 = t2160 * t2188;
t2178 = t2151 * t2182;
t2091 = t2381 * t2150;
t2146 = t2150 * t2147;
t2133 = qJDD(1) * t2156 + t2161 * t2162;
t2131 = t2151 * t2287;
t2121 = t2309 * t2325;
t2120 = (t2148 - t2149) * t2325;
t2116 = -pkin(7) * t2133 + g(3) * t2161;
t2098 = t2293 * t2309 * t2358;
t2087 = (-t2148 * t2272 + t2160 * t2217) * t2150;
t2086 = -t2155 * t2115 - t2149 * t2224;
t2084 = t2118 * t2160 - t2331;
t2083 = -t2117 * t2155 + t2328;
t2064 = t2091 * t2322 + t2146 * t2298;
t2063 = (t2160 * t2187 + t2217) * t2396;
t2062 = (t2150 * t2115 - t2187 * t2396) * t2160;
t2061 = (t2151 * t2115 + (-t2146 * t2162 - t2151 * t2224) * t2155) * t2160;
t2039 = (t2154 * t2213 + t2315) * t2137;
t2038 = -t2092 * t2155 + t2095 * t2160;
t2033 = t2150 * t2095 + t2151 * t2233;
t2032 = -t2150 * t2094 + t2151 * t2235;
t2031 = -t2150 * t2093 + t2151 * t2234;
t2030 = -t2151 * t2095 + t2150 * t2233;
t2029 = t2151 * t2094 + t2150 * t2235;
t2028 = t2151 * t2093 + t2150 * t2234;
t2021 = -t2150 * t2091 + t2151 * t2236;
t2020 = t2151 * t2091 + t2150 * t2236;
t2018 = t2060 * t2154 - t2137 * t2315;
t2016 = -t2096 * t2154 + t2159 * t2168;
t2015 = t2040 * t2160 - t2110 * t2155;
t2011 = -t2150 * t2120 + t2151 * t2238;
t2010 = t2150 * t2121 + t2151 * t2237;
t2009 = t2151 * t2120 + t2150 * t2238;
t2008 = -t2151 * t2121 + t2150 * t2237;
t1999 = t2089 * t2154 - t2338;
t1998 = t2090 * t2159 + t2440;
t1972 = t2160 * t2019 + t2183;
t1971 = t2160 * t2017 - t2183;
t1970 = t2150 * t2099 + t2151 * t2239;
t1969 = -t2151 * t2099 + t2150 * t2239;
t1957 = -t2150 * t2039 + t2151 * t2240;
t1956 = t2151 * t2039 + t2150 * t2240;
t1951 = t2023 * t2154 + t2025 * t2159;
t1941 = t2001 * t2160 - t2022 * t2155;
t1940 = t2000 * t2160 - t2155 * t2386;
t1932 = -t2316 + (-t2030 * t2150 - t2033 * t2151) * pkin(8);
t1926 = -t2314 + (-t2020 * t2150 - t2021 * t2151) * pkin(8);
t1925 = -pkin(1) * t2030 + t2150 * t2066 + t2151 * t2274;
t1924 = pkin(1) * t2033 - t2151 * t2066 + t2150 * t2274;
t1910 = t1953 * t2160 + t2081 * t2155;
t1908 = -pkin(1) * t2020 + t2150 * t2067 + t2151 * t2275;
t1907 = pkin(1) * t2021 - t2151 * t2067 + t2150 * t2275;
t1892 = -t2150 * t2018 + t2151 * t2317 - t2178;
t1891 = -t2150 * t2016 + t2151 * t2318 + t2178;
t1890 = t2151 * t2018 + (-t2182 + t2317) * t2150;
t1889 = t2151 * t2016 + (t2182 + t2318) * t2150;
t1881 = pkin(1) * t1970 + t1993 * t2361;
t1880 = pkin(8) * t1993 * t2151 - pkin(1) * t1969;
t1877 = -pkin(1) * t2008 + t2151 * t2193;
t1876 = pkin(1) * t2010 + t2150 * t2193;
t1875 = -pkin(2) * t2025 + pkin(9) * t1996 + t2341;
t1872 = -t2150 * t1999 + t2151 * t2241;
t1871 = -t2150 * t1998 + t2151 * t2242;
t1870 = t2151 * t1999 + t2150 * t2241;
t1869 = t2151 * t1998 + t2150 * t2242;
t1868 = (-t1969 * t2150 - t1970 * t2151) * pkin(8);
t1864 = pkin(2) * t2023 + pkin(9) * t1981 - t2340;
t1863 = (-t2008 * t2150 - t2010 * t2151) * pkin(8) - t2239;
t1860 = -t2150 * t1995 + t2151 * t2243;
t1859 = t2151 * t1995 + t2150 * t2243;
t1858 = -t2150 * t1980 + t2151 * t2244;
t1857 = t2151 * t1980 + t2150 * t2244;
t1827 = -t2150 * t1951 + t2151 * t2246;
t1826 = t2151 * t1951 + t2150 * t2246;
t1818 = -t2150 * t1952 + t2151 * t2245;
t1817 = t2151 * t1952 + t2150 * t2245;
t1790 = -pkin(2) * t2012 + pkin(9) * t1833;
t1774 = -t1914 * t2155 + t2459;
t1773 = t1915 * t2155 - t2459;
t1768 = pkin(2) * t2045 + pkin(9) * t1954 + t1833;
t1749 = t1824 * t2159 + t1825 * t2154;
t1740 = -t2150 * t1832 + t2151 * t2251;
t1739 = t2151 * t1832 + t2150 * t2251;
t1731 = t1811 * t2159 + t1815 * t2154;
t1730 = t1810 * t2159 + t1814 * t2154;
t1724 = t2151 * t2247 + t2456;
t1723 = t2151 * t2248 - t2456;
t1720 = t2150 * t2247 - t2453;
t1719 = t2150 * t2248 + t2453;
t1714 = t1735 * t2160 + t2417;
t1713 = t1734 * t2160 + t2417;
t1706 = t1785 * t2159 + t1787 * t2154;
t1705 = t1784 * t2159 + t1786 * t2154;
t1692 = t1750 * t2160 + t1894 * t2155;
t1688 = -t2155 * t1865 + t2160 * t1928 + (-t1859 * t2150 - t1860 * t2151) * pkin(8);
t1687 = t2151 * t2254 + t2458;
t1686 = t2151 * t2255 - t2458;
t1685 = t2150 * t2254 - t2455;
t1684 = t2150 * t2255 + t2455;
t1682 = -t2155 * t1861 + t2160 * t1923 + (-t1857 * t2150 - t1858 * t2151) * pkin(8);
t1678 = -pkin(1) * t1859 - t2150 * t1875 + t2151 * t2194;
t1677 = pkin(1) * t1860 + t2151 * t1875 + t2150 * t2194;
t1673 = -pkin(1) * t1857 - t2150 * t1864 + t2151 * t2195;
t1672 = pkin(1) * t1858 + t2151 * t1864 + t2150 * t2195;
t1670 = t1708 * t2160 + t1837 * t2155;
t1669 = t1707 * t2160 - t1835 * t2155;
t1662 = t1752 * t2159 + t1754 * t2154;
t1661 = t1751 * t2159 + t1753 * t2154;
t1660 = t1952 * t2370 + t2160 * t1779 + (-t1817 * t2150 - t1818 * t2151) * pkin(8);
t1656 = t1767 * t2159 + t1819 * t2154 - t2452;
t1646 = t1737 * t2159 + t1738 * t2154;
t1644 = -pkin(2) * t1913 + t1763 * t2159 + t1808 * t2154 - t2464;
t1643 = -t2150 * t1749 + t2151 * t2256;
t1642 = t2151 * t1749 + t2150 * t2256;
t1638 = -t2150 * t1731 + t2151 * t2258;
t1637 = -t2150 * t1730 + t2151 * t2259;
t1636 = t2151 * t1731 + t2150 * t2258;
t1635 = t2151 * t1730 + t2150 * t2259;
t1634 = -t2150 * t1732 + t2151 * t2257;
t1633 = -t2150 * t1729 + t2151 * t2260;
t1632 = t2151 * t1732 + t2150 * t2257;
t1631 = t2151 * t1729 + t2150 * t2260;
t1630 = t1664 * t2160 + t1822 * t2155;
t1629 = t1663 * t2160 + t1823 * t2155;
t1628 = -pkin(1) * t1817 - t2150 * t1768 + t2151 * t2189;
t1627 = pkin(1) * t1818 + t2151 * t1768 + t2150 * t2189;
t1618 = -t2150 * t1706 + t2151 * t2261;
t1617 = -t2150 * t1705 + t2151 * t2262;
t1616 = t2151 * t1706 + t2150 * t2261;
t1615 = t2151 * t1705 + t2150 * t2262;
t1613 = t1647 * t2160 + t1758 * t2155;
t1612 = (-pkin(9) * t2160 + t2370) * t1832 + (-t1739 * t2150 - t1740 * t2151) * pkin(8);
t1608 = -pkin(1) * t1739 - t2150 * t1790 + t2151 * t2186;
t1607 = pkin(1) * t1740 + t2151 * t1790 + t2150 * t2186;
t1597 = t1665 * t2159 + t1674 * t2154 + t2452;
t1596 = -t2150 * t1662 + t2151 * t2263;
t1595 = -t2150 * t1661 + t2151 * t2264;
t1594 = t2151 * t1662 + t2150 * t2263;
t1593 = t2151 * t1661 + t2150 * t2264;
t1592 = pkin(2) * t1916 + t1658 * t2159 + t1671 * t2154 + t2464;
t1590 = -t2150 * t1652 + t2151 * t2265;
t1589 = t2151 * t1652 + t2150 * t2265;
t1588 = -t2150 * t1650 + t2151 * t2266;
t1587 = t2151 * t1650 + t2150 * t2266;
t1584 = -t2150 * t1646 + t2151 * t2267;
t1583 = t2151 * t1646 + t2150 * t2267;
t1579 = -t2150 * t1640 + t2151 * t2268;
t1578 = t2151 * t1640 + t2150 * t2268;
t1576 = pkin(9) * t1736 + t1639 * t2159 + t1648 * t2154 - t2427;
t1575 = t2160 * t1668 - t2155 * t1681 - t2482;
t1572 = t2160 * t1659 - t2155 * t1676 + (-t1684 * t2150 - t1686 * t2151) * pkin(8);
t1570 = -t2150 * t1609 + t2151 * t2269;
t1569 = t2151 * t1609 + t2150 * t2269;
t1566 = -pkin(2) * t1912 + pkin(9) * t1610 - pkin(10) * t2353 + t1666 * t2159;
t1564 = -t2150 * t1656 + t2151 * t2196 - t2479;
t1563 = t2151 * t1656 + t2150 * t2196 + t2478;
t1562 = pkin(9) * t1733 + t1611 * t2159 + t1620 * t2154 - t2427;
t1558 = -pkin(1) * t1684 - t2150 * t1644 + t2151 * t2197;
t1557 = pkin(1) * t1686 + t2151 * t1644 + t2150 * t2197;
t1553 = t2160 * t1601 - t2155 * t1657 + t2482;
t1552 = -t2150 * t1599 + t2151 * t2270;
t1551 = t2151 * t1599 + t2150 * t2270;
t1550 = t2160 * t1598 - t2155 * t1649 + (-t1685 * t2150 - t1687 * t2151) * pkin(8);
t1545 = t2160 * t1577 - t2155 * t1675 + (-t1632 * t2150 - t1634 * t2151) * pkin(8);
t1543 = -t2150 * t1597 + t2151 * t2198 + t2479;
t1542 = t2151 * t1597 + t2150 * t2198 - t2478;
t1540 = -pkin(1) * t1685 - t2150 * t1592 + t2151 * t2199;
t1539 = pkin(1) * t1687 + t2151 * t1592 + t2150 * t2199;
t1538 = -pkin(2) * t1760 + pkin(9) * t1600 + t1591 * t2159 + t1604 * t2154;
t1535 = t2160 * t1565 - t2155 * t1645 + (-t1631 * t2150 - t1633 * t2151) * pkin(8);
t1534 = -pkin(1) * t1632 - t2150 * t1576 + t2151 * t2200;
t1533 = pkin(1) * t1634 + t2151 * t1576 + t2150 * t2200;
t1530 = -pkin(2) * t1799 + pkin(9) * t1653 + t1555 * t2159 + t1560 * t2154;
t1528 = -pkin(2) * t1792 + pkin(9) * t1651 + t1554 * t2159 + t1559 * t2154;
t1527 = -pkin(1) * t1631 - t2150 * t1562 + t2151 * t2202;
t1526 = pkin(1) * t1633 + t2151 * t1562 + t2150 * t2202;
t1524 = t2160 * t1571 - t2155 * t1586 + (-t1569 * t2150 - t1570 * t2151) * pkin(8);
t1523 = -pkin(2) * t1759 + pkin(9) * t1641 + t1546 * t2159 + t1549 * t2154;
t1522 = -pkin(1) * t1569 - t2150 * t1566 + t2151 * t2201;
t1521 = pkin(1) * t1570 + t2151 * t1566 + t2150 * t2201;
t1518 = -t2150 * t1536 + t2151 * t2271;
t1517 = t2151 * t1536 + t2150 * t2271;
t1516 = t2160 * t1532 - t2155 * t1574 + (-t1589 * t2150 - t1590 * t2151) * pkin(8);
t1515 = t2160 * t1531 - t2155 * t1573 + (-t1587 * t2150 - t1588 * t2151) * pkin(8);
t1513 = t2160 * t1541 - t2155 * t1556 + (-t1551 * t2150 - t1552 * t2151) * pkin(8);
t1512 = t2160 * t1525 - t2155 * t1547 + (-t1578 * t2150 - t1579 * t2151) * pkin(8);
t1511 = -pkin(1) * t1551 - t2150 * t1538 + t2151 * t2203;
t1510 = pkin(1) * t1552 + t2151 * t1538 + t2150 * t2203;
t1509 = -pkin(1) * t1589 - t2150 * t1530 + t2151 * t2204;
t1508 = pkin(1) * t1590 + t2151 * t1530 + t2150 * t2204;
t1507 = -pkin(1) * t1587 - t2150 * t1528 + t2151 * t2205;
t1506 = pkin(1) * t1588 + t2151 * t1528 + t2150 * t2205;
t1505 = -pkin(1) * t1578 - t2150 * t1523 + t2151 * t2206;
t1504 = pkin(1) * t1579 + t2151 * t1523 + t2150 * t2206;
t1502 = -pkin(2) * t1582 + pkin(9) * t1537 + t1514 * t2159 + t1520 * t2154;
t1501 = t2160 * t1503 - t2155 * t1519 + (-t1517 * t2150 - t1518 * t2151) * pkin(8);
t1500 = -pkin(1) * t1517 - t2150 * t1502 + t2151 * t2207;
t1499 = pkin(1) * t1518 + t2151 * t1502 + t2150 * t2207;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t2134, 0, -t2133, 0, t2281, -t2116, -t2232, -pkin(7) * t2232, -t2064 * t2156 + t2087 * t2161, -t2011 * t2156 + t2038 * t2161, -t2031 * t2156 + t2083 * t2161, -t2061 * t2156 + t2086 * t2161, -t2032 * t2156 + t2084 * t2161, t2161 * t2098 + t2156 * t2230, t2161 * t1932 - t2156 * t1925 - pkin(7) * (t2033 * t2161 + t2085 * t2156), t2161 * t1926 - t2156 * t1908 - pkin(7) * (t2021 * t2161 + t2080 * t2156), t2161 * t1863 - t2156 * t1877 - pkin(7) * (t2010 * t2161 + t2037 * t2156), t2161 * t1868 - t2156 * t1880 - pkin(7) * (t1970 * t2161 + t1993 * t2156), -t1892 * t2156 + t1972 * t2161, -t1827 * t2156 + t1910 * t2161, -t1871 * t2156 + t1940 * t2161, -t1891 * t2156 + t1971 * t2161, -t1872 * t2156 + t1941 * t2161, -t1957 * t2156 + t2015 * t2161, t2161 * t1682 - t2156 * t1673 - pkin(7) * (t1858 * t2161 + t1927 * t2156), t2161 * t1688 - t2156 * t1678 - pkin(7) * (t1860 * t2161 + t1930 * t2156), t2161 * t1660 - t2156 * t1628 - pkin(7) * (t1818 * t2161 + t1888 * t2156), t2161 * t1612 - t2156 * t1608 - pkin(7) * (t1740 * t2161 + t1788 * t2156), t2445, -t1637 * t2156 + t1713 * t2161, t2481, t2444, -t1724 * t2156 + t1774 * t2161, t2428, t2161 * t1572 - t2156 * t1558 - pkin(7) * (t1686 * t2161 + t1761 * t2156), -t2156 * t1564 + t2161 * t1575 - t2484, t2161 * t1545 - t2156 * t1534 - pkin(7) * (t1634 * t2161 + t1694 * t2156), t2161 * t1524 - t2156 * t1522 - pkin(7) * (t1570 * t2161 + t1605 * t2156), t2428, -t2481, -t1723 * t2156 + t1773 * t2161, t2445, -t1638 * t2156 + t1714 * t2161, t2444, t2161 * t1535 - t2156 * t1527 - pkin(7) * (t1633 * t2161 + t1693 * t2156), t2161 * t1550 - t2156 * t1540 - pkin(7) * (t1687 * t2161 + t1762 * t2156), -t2156 * t1543 + t2161 * t1553 + t2484, t2161 * t1513 - t2156 * t1511 - pkin(7) * (t1552 * t2161 + t1585 * t2156), -t1618 * t2156 + t1670 * t2161, -t1584 * t2156 + t1613 * t2161, -t1596 * t2156 + t1630 * t2161, -t1617 * t2156 + t1669 * t2161, -t1595 * t2156 + t1629 * t2161, -t1643 * t2156 + t1692 * t2161, t2161 * t1515 - t2156 * t1507 - pkin(7) * (t1588 * t2161 + t1625 * t2156), t2161 * t1516 - t2156 * t1509 - pkin(7) * (t1590 * t2161 + t1626 * t2156), t2161 * t1512 - t2156 * t1505 - pkin(7) * (t1579 * t2161 + t1606 * t2156), t2161 * t1501 - t2156 * t1500 - pkin(7) * (t1518 * t2161 + t1529 * t2156); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t2133, 0, t2134, 0, t2116, t2281, t2288, pkin(7) * t2288, t2064 * t2161 + t2087 * t2156, t2011 * t2161 + t2038 * t2156, t2031 * t2161 + t2083 * t2156, t2061 * t2161 + t2086 * t2156, t2032 * t2161 + t2084 * t2156, t2156 * t2098 - t2161 * t2230, t2156 * t1932 + t2161 * t1925 + pkin(7) * (-t2033 * t2156 + t2085 * t2161), t2156 * t1926 + t2161 * t1908 + pkin(7) * (-t2021 * t2156 + t2080 * t2161), t2156 * t1863 + t2161 * t1877 + pkin(7) * (-t2010 * t2156 + t2037 * t2161), t2156 * t1868 + t2161 * t1880 + pkin(7) * (-t1970 * t2156 + t1993 * t2161), t1892 * t2161 + t1972 * t2156, t1827 * t2161 + t1910 * t2156, t1871 * t2161 + t1940 * t2156, t1891 * t2161 + t1971 * t2156, t1872 * t2161 + t1941 * t2156, t1957 * t2161 + t2015 * t2156, t2156 * t1682 + t2161 * t1673 + pkin(7) * (-t1858 * t2156 + t1927 * t2161), t2156 * t1688 + t2161 * t1678 + pkin(7) * (-t1860 * t2156 + t1930 * t2161), t2156 * t1660 + t2161 * t1628 + pkin(7) * (-t1818 * t2156 + t1888 * t2161), t2156 * t1612 + t2161 * t1608 + pkin(7) * (-t1740 * t2156 + t1788 * t2161), t2443, t1637 * t2161 + t1713 * t2156, -t2480, t2442, t1724 * t2161 + t1774 * t2156, t2429, t2156 * t1572 + t2161 * t1558 + pkin(7) * (-t1686 * t2156 + t1761 * t2161), t2161 * t1564 + t2156 * t1575 - t2483, t2156 * t1545 + t2161 * t1534 + pkin(7) * (-t1634 * t2156 + t1694 * t2161), t2156 * t1524 + t2161 * t1522 + pkin(7) * (-t1570 * t2156 + t1605 * t2161), t2429, t2480, t1723 * t2161 + t1773 * t2156, t2443, t1638 * t2161 + t1714 * t2156, t2442, t2156 * t1535 + t2161 * t1527 + pkin(7) * (-t1633 * t2156 + t1693 * t2161), t2156 * t1550 + t2161 * t1540 + pkin(7) * (-t1687 * t2156 + t1762 * t2161), t2161 * t1543 + t2156 * t1553 + t2483, t2156 * t1513 + t2161 * t1511 + pkin(7) * (-t1552 * t2156 + t1585 * t2161), t1618 * t2161 + t1670 * t2156, t1584 * t2161 + t1613 * t2156, t1596 * t2161 + t1630 * t2156, t1617 * t2161 + t1669 * t2156, t1595 * t2161 + t1629 * t2156, t1643 * t2161 + t1692 * t2156, t2156 * t1515 + t2161 * t1507 + pkin(7) * (-t1588 * t2156 + t1625 * t2161), t2156 * t1516 + t2161 * t1509 + pkin(7) * (-t1590 * t2156 + t1626 * t2161), t2156 * t1512 + t2161 * t1505 + pkin(7) * (-t1579 * t2156 + t1606 * t2161), t2156 * t1501 + t2161 * t1500 + pkin(7) * (-t1518 * t2156 + t1529 * t2161); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2139, t2140, 0, 0, t2063, t2009, t2028, t2062, t2029, t2131, t1924, t1907, t1876, t1881, t1890, t1826, t1869, t1889, t1870, t1956, t1672, t1677, t1627, t1607, t2432, t1635, -t1717, t2433, t1720, t2399, t1557, t1563, t1533, t1521, t2399, t1717, t1719, t2432, t1636, t2433, t1526, t1539, t1542, t1510, t1616, t1583, t1594, t1615, t1593, t1642, t1506, t1508, t1504, t1499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t2162, 0, 0, -g(3), -t2139, 0, t2087, t2038, t2083, t2086, t2084, t2098, t1932, t1926, t1863, t1868, t1972, t1910, t1940, t1971, t1941, t2015, t1682, t1688, t1660, t1612, t2402, t1713, -t1771, t2401, t1774, t2400, t1572, t1575, t1545, t1524, t2400, t1771, t1773, t2402, t1714, t2401, t1535, t1550, t1553, t1513, t1670, t1613, t1630, t1669, t1629, t1692, t1515, t1516, t1512, t1501; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2162, 0, qJDD(1), 0, g(3), 0, -t2140, 0, t2064, t2011, t2031, t2061, t2032, -t2230, t1925, t1908, t1877, t1880, t1892, t1827, t1871, t1891, t1872, t1957, t1673, t1678, t1628, t1608, t2430, t1637, -t1721, t2431, t1724, t2398, t1558, t1564, t1534, t1522, t2398, t1721, t1723, t2430, t1638, t2431, t1527, t1540, t1543, t1511, t1618, t1584, t1596, t1617, t1595, t1643, t1507, t1509, t1505, t1500; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t2139, t2140, 0, 0, t2063, t2009, t2028, t2062, t2029, t2131, t1924, t1907, t1876, t1881, t1890, t1826, t1869, t1889, t1870, t1956, t1672, t1677, t1627, t1607, t2432, t1635, -t1717, t2433, t1720, t2399, t1557, t1563, t1533, t1521, t2399, t1717, t1719, t2432, t1636, t2433, t1526, t1539, t1542, t1510, t1616, t1583, t1594, t1615, t1593, t1642, t1506, t1508, t1504, t1499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2191, t2095, t2113, -t2123, t2118, t2123, 0, -t2099, t2066, 0, t2019, t1953, t2000, t2017, t2001, t2040, t1923, t1928, t1779, -pkin(9) * t1832, t2376, t1734, -t1846, t2380, t1849, t2377, t1659, t1668, t1577, t1571, t2377, t1846, -t1849, t2376, t1735, t2380, t1565, t1598, t1601, t1541, t1708, t1647, t1664, t1707, t1663, t1750, t1531, t1532, t1525, t1503; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2122, t2092, t2117, t2115, t2112, -t2122, t2099, 0, t2067, 0, -t2188, -t2081, t2386, t2188, t2022, t2110, t1861, t1865, -pkin(2) * t1952, -pkin(2) * t1832, -t2004, -t2384, -t2389, t2004, t1914, t2109, t1676, t1681, t1675, t1586, t2109, t2389, -t1915, -t2004, -t2384, t2004, t1645, t1649, t1657, t1556, -t1837, -t1758, -t1822, t1835, -t1823, -t1894, t1573, t1574, t1547, t1519; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2136, t2120, t2093, t2136, t2094, t2287, -t2066, -t2067, 0, 0, t2018, t1951, t1998, t2016, t1999, t2039, t1864, t1875, t1768, t1790, t2375, t1730, t1843, t2379, -t1844, t2378, t1644, t1656, t1576, t1566, t2378, -t1843, t1844, t2375, t1731, t2379, t1562, t1592, t1597, t1538, t1706, t1646, t1662, t1705, t1661, t1749, t1528, t1530, t1523, t1502; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2060, t2023, t2405, -t2096, t2089, t2096, 0, t2012, t1938, 0, t2278, t1814, t1947, t2174, -t1948, t2215, t1808, t1819, t1648, -pkin(10) * t1679, t2215, -t1947, t1948, t2278, t1815, t2174, t1620, t1671, t1674, t1604, t1787, t1738, t1754, t1786, t1753, t1825, t1559, t1560, t1549, t1520; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2097, t2025, t2090, t2168, -t2052, t2097, -t2012, 0, t1939, 0, t2280, t1810, t1943, t2279, -t1944, t2214, t1763, t1767, t1639, t1666, t2214, -t1943, t1944, t2280, t1811, t2279, t1611, t1658, t1665, t1591, t1785, t1737, t1752, t1784, t1751, t1824, t1554, t1555, t1546, t1514; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2188, t2081, -t2386, -t2188, -t2022, -t2110, -t1938, -t1939, 0, 0, t2004, t2384, t2389, -t2004, -t1914, -t2109, t2227, t2210, t2367, t2368, -t2109, -t2389, t1915, t2004, t2384, -t2004, t2284, t2172, t2167, t2285, t1837, t1758, t1822, -t1835, t1823, t1894, t2184, t2192, t2180, t2216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1966, -t1913, -t2181, -t2055, -t2047, t2055, 0, t1912, t1765, 0, t2055, t2181, t2047, t1966, -t1916, -t2055, t1716, qJ(5) * t1916, t1727, -qJ(5) * t1760, t1974, t1973, t1853, -t1974, -t1851, t1963, t1602, t1603, t1667, t1548; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2056, t2388, t2385, -t2218, -t2390, t2056, -t1912, 0, t1766, 0, t2056, -t2385, t2390, -t2056, t2388, -t2218, t1715, t1728, pkin(4) * t2388, -pkin(4) * t1760, -t1836, -t1756, -t1820, t1834, -t1821, -t1893, t1614, t1619, t1561, t1544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2004, t2384, t2389, -t2004, -t1914, -t2109, -t1765, -t1766, 0, 0, -t2109, -t2389, t1915, t2004, t2384, -t2004, t2310, t2175, t2169, t2311, t1837, t1758, t1822, -t1835, t1823, t1894, t2212, t2231, t2190, t2283; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2109, -t2389, t1915, t2004, t2384, -t2004, 0, t1748, t1744, 0, t1837, t1758, t1822, -t1835, t1823, t1894, t2273, t2294, t2225, -t2360; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2055, -t2181, -t2047, -t1966, t1916, t2055, -t1748, 0, t1760, 0, -t1974, -t1973, -t1853, t1974, t1851, -t1963, t2226, t2208, -t2362, -t2364; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2056, t2385, -t2390, t2056, -t2388, t2218, -t1744, -t1760, 0, 0, t1836, t1756, t1820, -t1834, t1821, t1893, pkin(11) * t1792 - t2277, pkin(11) * t1799 - t2276, pkin(11) * t1759 - t2209, pkin(11) * t1582 - t2363; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1883, -t1850, t2391, t2337, t1984, -t2337, 0, t1691, t1623, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2336, t2171, t2306, t1882, t1874, -t2336, -t1691, 0, t1624, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1974, t1973, t1853, -t1974, -t1851, t1963, -t1623, -t1624, 0, 0;];
m_new_reg  = t1;
