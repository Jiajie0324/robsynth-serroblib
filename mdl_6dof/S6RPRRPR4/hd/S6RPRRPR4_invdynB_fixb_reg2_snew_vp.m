% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RPRRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 22:31
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RPRRPR4_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR4_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR4_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR4_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR4_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR4_invdynB_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 22:29:30
% EndTime: 2019-05-05 22:30:12
% DurationCPUTime: 42.90s
% Computational Cost: add. (376644->916), mult. (921060->1424), div. (0->0), fcn. (741816->12), ass. (0->633)
t1088 = sin(pkin(11));
t1091 = cos(pkin(10));
t1098 = cos(qJ(3));
t1089 = sin(pkin(10));
t1094 = sin(qJ(3));
t1141 = t1089 * t1094;
t1060 = (t1091 * t1098 - t1141) * qJD(1);
t1116 = t1089 * t1098 + t1091 * t1094;
t1061 = t1116 * qJD(1);
t1093 = sin(qJ(4));
t1097 = cos(qJ(4));
t1021 = t1060 * t1093 + t1061 * t1097;
t1137 = qJDD(1) * t1091;
t1058 = qJDD(1) * t1141 - t1098 * t1137;
t1148 = t1061 * qJD(3);
t1030 = -t1058 - t1148;
t1151 = t1060 * qJD(3);
t1198 = t1116 * qJDD(1);
t1032 = t1198 + t1151;
t1120 = -t1097 * t1030 + t1093 * t1032;
t946 = qJD(4) * t1021 + t1120;
t1087 = qJD(3) + qJD(4);
t1090 = cos(pkin(11));
t1001 = t1021 * t1088 - t1090 * t1087;
t1003 = t1021 * t1090 + t1087 * t1088;
t955 = t1003 * t1001;
t1203 = t946 - t955;
t1213 = t1088 * t1203;
t1212 = t1090 * t1203;
t1092 = sin(qJ(6));
t1112 = qJDD(6) + t946;
t1096 = cos(qJ(6));
t950 = t1096 * t1001 + t1003 * t1092;
t952 = -t1001 * t1092 + t1003 * t1096;
t880 = t952 * t950;
t1202 = t1112 - t880;
t1211 = t1092 * t1202;
t1134 = qJDD(3) + qJDD(4);
t1019 = -t1097 * t1060 + t1061 * t1093;
t975 = t1021 * t1019;
t1201 = -t975 + t1134;
t1210 = t1093 * t1201;
t1035 = t1060 * t1061;
t1197 = qJDD(3) + t1035;
t1209 = t1094 * t1197;
t1208 = t1096 * t1202;
t1207 = t1097 * t1201;
t1206 = t1098 * t1197;
t1101 = qJD(1) ^ 2;
t1095 = sin(qJ(1));
t1099 = cos(qJ(1));
t1071 = t1095 * g(1) - t1099 * g(2);
t1117 = -qJDD(2) + t1071;
t1188 = pkin(2) * t1091;
t1131 = pkin(1) + t1188;
t1085 = t1089 ^ 2;
t1086 = t1091 ^ 2;
t1138 = t1085 + t1086;
t1025 = t1131 * qJDD(1) + (pkin(7) * t1138 + qJ(2)) * t1101 + t1117;
t1056 = t1060 ^ 2;
t1119 = qJD(3) * pkin(3) - pkin(8) * t1061;
t938 = t1030 * pkin(3) + t1056 * pkin(8) - t1061 * t1119 + t1025;
t1011 = t1087 * t1019;
t1111 = qJD(4) * t1019 - t1030 * t1093 - t1032 * t1097;
t1205 = t1111 + t1011;
t936 = t1088 * t1111 + t1090 * t1134;
t937 = t1088 * t1134 - t1090 * t1111;
t817 = -qJD(6) * t950 + t1092 * t936 + t1096 * t937;
t1015 = qJD(6) + t1019;
t919 = t1015 * t950;
t1204 = t817 - t919;
t967 = t1019 * t1001;
t875 = -t937 - t967;
t874 = t967 - t937;
t1199 = (pkin(7) + qJ(2)) * qJDD(1);
t1121 = t1092 * t937 - t1096 * t936;
t788 = (qJD(6) - t1015) * t952 + t1121;
t1194 = t1101 * t1138;
t907 = (qJD(4) - t1087) * t1021 + t1120;
t948 = t950 ^ 2;
t949 = t952 ^ 2;
t1192 = t1001 ^ 2;
t1000 = t1003 ^ 2;
t1014 = t1015 ^ 2;
t1191 = t1019 ^ 2;
t1018 = t1021 ^ 2;
t1057 = t1061 ^ 2;
t1190 = t1087 ^ 2;
t1187 = pkin(4) * t1093;
t1184 = t1089 * g(3);
t1183 = t1091 * g(3);
t1182 = qJDD(1) * pkin(1);
t1082 = t1086 * t1101;
t1072 = t1099 * g(1) + t1095 * g(2);
t1113 = -0.2e1 * qJD(2) * qJD(1) + t1072;
t1110 = -t1101 * pkin(1) - t1113;
t1106 = -pkin(2) * t1082 - t1184 + (t1110 + t1199) * t1091;
t1107 = -t1183 + (t1101 * t1131 + t1113 - t1199) * t1089;
t1104 = -t1094 * t1106 + t1098 * t1107 + (-t1032 + t1151) * pkin(8) + t1197 * pkin(3);
t958 = t1094 * t1107 + t1098 * t1106;
t899 = -t1056 * pkin(3) + t1030 * pkin(8) - qJD(3) * t1119 + t958;
t822 = t1093 * t1104 + t1097 * t899;
t972 = pkin(4) * t1019 - qJ(5) * t1021;
t795 = -pkin(4) * t1190 + qJ(5) * t1134 - t1019 * t972 + t822;
t803 = t1205 * qJ(5) + (t1021 * t1087 + t946) * pkin(4) - t938;
t725 = 0.2e1 * qJD(5) * t1003 + t1088 * t795 - t1090 * t803;
t678 = pkin(5) * t1203 + pkin(9) * t875 - t725;
t726 = -0.2e1 * qJD(5) * t1001 + t1088 * t803 + t1090 * t795;
t961 = pkin(5) * t1019 - pkin(9) * t1003;
t690 = -pkin(5) * t1192 + pkin(9) * t936 - t1019 * t961 + t726;
t626 = t1092 * t678 + t1096 * t690;
t625 = t1092 * t690 - t1096 * t678;
t580 = t1092 * t626 - t1096 * t625;
t1181 = t1088 * t580;
t821 = t1093 * t899 - t1097 * t1104;
t794 = -t1134 * pkin(4) - t1190 * qJ(5) + t1021 * t972 + qJDD(5) + t821;
t1180 = t1088 * t794;
t877 = t946 + t955;
t1179 = t1088 * t877;
t1109 = qJDD(1) * qJ(2) + t1110;
t1108 = qJDD(1) * pkin(7) + t1109;
t1105 = (-t1094 * g(3) - t1098 * (t1101 * t1188 - t1108)) * t1089 + (t1098 * g(3) + t1094 * t1108) * t1091;
t1123 = t1094 * t1082;
t957 = -pkin(2) * t1123 + t1105;
t885 = t1094 * t958 - t1098 * t957;
t1178 = t1089 * t885;
t1177 = t1090 * t580;
t1176 = t1090 * t794;
t1175 = t1090 * t877;
t1174 = t1091 * t885;
t738 = -t936 * pkin(5) - pkin(9) * t1192 + t1003 * t961 + t794;
t1173 = t1092 * t738;
t833 = t1112 + t880;
t1172 = t1092 * t833;
t1171 = t1093 * t938;
t1170 = t1093 * t946;
t970 = t975 + t1134;
t1169 = t1093 * t970;
t744 = t1093 * t822 - t1097 * t821;
t1168 = t1094 * t744;
t1167 = t1096 * t738;
t1166 = t1096 * t833;
t1165 = t1097 * t938;
t1164 = t1097 * t970;
t1163 = t1098 * t744;
t1162 = t1003 * t1019;
t1161 = t1015 * t1092;
t1160 = t1015 * t1096;
t1159 = t1019 * t1088;
t1158 = t1019 * t1090;
t1157 = t1025 * t1094;
t1156 = t1025 * t1098;
t1027 = qJDD(3) - t1035;
t1155 = t1027 * t1094;
t1154 = t1027 * t1098;
t1054 = t1101 * qJ(2) + t1117 + t1182;
t1153 = t1054 * t1095;
t1152 = t1054 * t1099;
t1150 = t1060 * t1094;
t1149 = t1060 * t1098;
t1147 = t1061 * t1094;
t1146 = t1061 * t1098;
t1145 = t1085 * t1101;
t1144 = t1087 * t1093;
t1143 = t1087 * t1097;
t1142 = t1089 * t1091;
t1136 = qJDD(1) * t1095;
t1135 = qJDD(1) * t1099;
t1133 = t1093 * t880;
t1132 = t1097 * t880;
t1130 = -pkin(4) * t1097 - pkin(3);
t1129 = t1093 * t955;
t1128 = t1097 * t955;
t1127 = t1095 * t975;
t1126 = t1099 * t975;
t1125 = t1095 * t1035;
t1124 = t1099 * t1035;
t1122 = t1054 + t1182;
t581 = t1092 * t625 + t1096 * t626;
t745 = t1093 * t821 + t1097 * t822;
t886 = t1094 * t957 + t1098 * t958;
t1036 = t1089 * t1109 + t1183;
t1037 = t1091 * t1109 - t1184;
t984 = t1036 * t1089 + t1091 * t1037;
t1045 = -t1071 * t1095 - t1099 * t1072;
t1070 = -t1095 * t1101 + t1135;
t1118 = -pkin(6) * t1070 - g(3) * t1095;
t657 = t1088 * t726 - t1090 * t725;
t658 = t1088 * t725 + t1090 * t726;
t983 = t1036 * t1091 - t1037 * t1089;
t1044 = t1071 * t1099 - t1072 * t1095;
t1069 = t1099 * t1101 + t1136;
t872 = t936 + t1162;
t1063 = t1091 * t1194;
t1041 = -t1063 * t1095 + t1091 * t1135;
t1115 = t1063 * t1099 + t1091 * t1136;
t1100 = qJD(3) ^ 2;
t1081 = t1086 * qJDD(1);
t1080 = t1085 * qJDD(1);
t1068 = t1082 - t1145;
t1067 = t1082 + t1145;
t1066 = t1081 - t1080;
t1065 = t1081 + t1080;
t1062 = t1089 * t1194;
t1055 = -pkin(6) * t1069 + g(3) * t1099;
t1050 = -t1057 - t1100;
t1049 = -t1057 + t1100;
t1048 = t1056 - t1100;
t1047 = t1070 * t1142;
t1046 = t1069 * t1142;
t1042 = t1062 * t1099 + t1089 * t1136;
t1040 = t1062 * t1095 - t1089 * t1135;
t1039 = t1065 * t1099 - t1067 * t1095;
t1038 = t1065 * t1095 + t1067 * t1099;
t1034 = -t1057 + t1056;
t1031 = t1198 + 0.2e1 * t1151;
t1029 = t1058 + 0.2e1 * t1148;
t1024 = -t1100 - t1056;
t1013 = (t1147 + t1149) * qJD(3);
t1012 = (-t1146 + t1150) * qJD(3);
t1009 = -t1018 + t1190;
t1008 = t1191 - t1190;
t1006 = -t1018 - t1190;
t1004 = -t1056 - t1057;
t994 = -qJD(3) * t1147 + t1032 * t1098;
t993 = qJD(3) * t1146 + t1032 * t1094;
t992 = -qJD(3) * t1149 - t1030 * t1094;
t991 = -qJD(3) * t1150 + t1030 * t1098;
t990 = -t1050 * t1094 - t1154;
t989 = -t1049 * t1094 + t1206;
t988 = t1048 * t1098 - t1155;
t987 = t1050 * t1098 - t1155;
t986 = t1049 * t1098 + t1209;
t985 = t1048 * t1094 + t1154;
t981 = -t1029 * t1098 - t1031 * t1094;
t980 = -t1058 * t1098 + t1094 * t1198;
t979 = -t1029 * t1094 + t1031 * t1098;
t978 = -t1058 * t1094 - t1098 * t1198;
t977 = t1024 * t1098 - t1209;
t976 = t1024 * t1094 + t1206;
t973 = t1191 - t1018;
t968 = -t1191 - t1190;
t966 = -t1000 + t1191;
t965 = -t1191 + t1192;
t964 = -t1012 * t1089 + t1013 * t1091;
t963 = (-t1019 * t1097 + t1021 * t1093) * t1087;
t962 = (-t1019 * t1093 - t1021 * t1097) * t1087;
t960 = t1099 * t984 - t1153;
t959 = t1095 * t984 + t1152;
t954 = -pkin(7) * t987 - t1156;
t953 = -t1000 + t1192;
t945 = -pkin(7) * t976 - t1157;
t943 = -t1191 - t1018;
t942 = t1097 * t946;
t940 = -t1089 * t993 + t1091 * t994;
t939 = -t1089 * t991 + t1091 * t992;
t934 = -t1000 - t1191;
t933 = -t1089 * t987 + t1091 * t990;
t932 = -t1089 * t986 + t1091 * t989;
t931 = -t1089 * t985 + t1091 * t988;
t930 = t1089 * t990 + t1091 * t987;
t928 = t1008 * t1097 - t1169;
t927 = -t1009 * t1093 + t1207;
t926 = t1008 * t1093 + t1164;
t925 = t1009 * t1097 + t1210;
t924 = -pkin(2) * t1031 + pkin(7) * t990 - t1157;
t923 = -t1006 * t1093 - t1164;
t922 = t1006 * t1097 - t1169;
t921 = -t1191 - t1192;
t918 = -t949 + t1014;
t917 = t948 - t1014;
t916 = -pkin(2) * t1029 + pkin(7) * t977 + t1156;
t915 = t1000 + t1192;
t914 = -t1089 * t979 + t1091 * t981;
t913 = -t1089 * t978 + t1091 * t980;
t912 = t1089 * t980 + t1091 * t978;
t911 = -t1011 + t1111;
t906 = (qJD(4) + t1087) * t1021 + t1120;
t905 = -t1089 * t976 + t1091 * t977;
t904 = t1089 * t977 + t1091 * t976;
t903 = -t1021 * t1144 - t1097 * t1111;
t902 = t1021 * t1143 - t1093 * t1111;
t901 = t1019 * t1143 + t1170;
t900 = t1019 * t1144 - t942;
t898 = t1031 * t1095 + t1099 * t933;
t897 = -t1031 * t1099 + t1095 * t933;
t896 = t1097 * t968 - t1210;
t895 = t1093 * t968 + t1207;
t893 = (-t1001 * t1090 + t1003 * t1088) * t1019;
t892 = (t1001 * t1088 + t1003 * t1090) * t1019;
t889 = -t949 - t1014;
t888 = -t1094 * t962 + t1098 * t963;
t887 = t1094 * t963 + t1098 * t962;
t884 = t1029 * t1095 + t1099 * t905;
t883 = -t1029 * t1099 + t1095 * t905;
t882 = t1004 * t1095 + t1099 * t913;
t881 = -t1004 * t1099 + t1095 * t913;
t879 = -t949 + t948;
t871 = t936 - t1162;
t869 = -t1003 * t1159 + t1090 * t937;
t868 = -t1003 * t1158 - t1088 * t937;
t867 = t1001 * t1158 - t1088 * t936;
t866 = -t1001 * t1159 - t1090 * t936;
t865 = pkin(2) * t1025 + pkin(7) * t886;
t864 = -pkin(1) * t912 - pkin(2) * t978;
t863 = -t1014 - t948;
t862 = -pkin(8) * t922 - t1165;
t861 = -pkin(7) * t978 - t885;
t860 = -t1094 * t926 + t1098 * t928;
t859 = -t1094 * t925 + t1098 * t927;
t858 = t1094 * t928 + t1098 * t926;
t857 = t1094 * t927 + t1098 * t925;
t856 = -t1094 * t922 + t1098 * t923;
t855 = t1094 * t923 + t1098 * t922;
t854 = -pkin(1) * t930 - pkin(2) * t987 + t958;
t853 = (t1092 * t952 - t1096 * t950) * t1015;
t852 = (-t1092 * t950 - t1096 * t952) * t1015;
t851 = -pkin(8) * t895 - t1171;
t850 = t1097 * t893 + t1170;
t849 = t1093 * t893 - t942;
t848 = t1090 * t965 - t1179;
t847 = -t1088 * t966 + t1212;
t846 = -t1088 * t965 - t1175;
t845 = -t1090 * t966 - t1213;
t844 = -pkin(2) * t1004 + pkin(7) * t980 + t886;
t843 = -t948 - t949;
t842 = -t1093 * t911 - t1097 * t907;
t841 = t1093 * t1205 - t1097 * t906;
t840 = -t1093 * t907 + t1097 * t911;
t839 = -t1093 * t906 - t1097 * t1205;
t838 = t1097 * t869 + t1129;
t837 = t1097 * t867 - t1129;
t836 = t1093 * t869 - t1128;
t835 = t1093 * t867 + t1128;
t831 = -pkin(1) * t904 + (-t976 - t1123) * pkin(2) + t1105;
t830 = -t1094 * t902 + t1098 * t903;
t829 = -t1094 * t900 + t1098 * t901;
t828 = t1094 * t903 + t1098 * t902;
t827 = t1094 * t901 + t1098 * t900;
t826 = -t1094 * t895 + t1098 * t896;
t825 = t1094 * t896 + t1098 * t895;
t824 = -t1088 * t934 - t1175;
t823 = t1090 * t934 - t1179;
t819 = t1090 * t921 - t1213;
t818 = t1088 * t921 + t1212;
t816 = -qJD(6) * t952 - t1121;
t815 = -qJ(2) * t930 - t1089 * t924 + t1091 * t954;
t814 = -t1089 * t887 + t1091 * t888;
t813 = t1091 * t886 - t1178;
t812 = t1089 * t886 + t1174;
t811 = pkin(3) * t1205 + pkin(8) * t923 - t1171;
t810 = -qJ(2) * t904 - t1089 * t916 + t1091 * t945;
t809 = -t1025 * t1095 + t1099 * t813;
t808 = t1025 * t1099 + t1095 * t813;
t807 = -t1088 * t875 + t1090 * t872;
t806 = t1088 * t874 + t1090 * t871;
t805 = t1088 * t872 + t1090 * t875;
t804 = -t1088 * t871 + t1090 * t874;
t800 = -pkin(3) * t906 + pkin(8) * t896 + t1165;
t799 = t1096 * t917 - t1172;
t798 = -t1092 * t918 + t1208;
t797 = t1092 * t917 + t1166;
t796 = t1096 * t918 + t1211;
t792 = -t817 - t919;
t787 = (qJD(6) + t1015) * t952 + t1121;
t786 = t1096 * t817 - t1161 * t952;
t785 = t1092 * t817 + t1160 * t952;
t784 = -t1092 * t816 + t1160 * t950;
t783 = t1096 * t816 + t1161 * t950;
t782 = -t1092 * t889 - t1166;
t781 = t1096 * t889 - t1172;
t780 = t1093 * t872 + t1097 * t848;
t779 = -t1093 * t875 + t1097 * t847;
t778 = t1093 * t848 - t1097 * t872;
t777 = t1093 * t847 + t1097 * t875;
t776 = -t1093 * t953 + t1097 * t806;
t775 = t1093 * t806 + t1097 * t953;
t774 = -t1089 * t858 + t1091 * t860;
t773 = -t1089 * t857 + t1091 * t859;
t772 = -t1089 * t855 + t1091 * t856;
t771 = t1089 * t856 + t1091 * t855;
t770 = -t1093 * t874 + t1097 * t824;
t769 = t1093 * t824 + t1097 * t874;
t768 = -t1093 * t871 + t1097 * t819;
t767 = t1093 * t819 + t1097 * t871;
t766 = t1096 * t863 - t1211;
t765 = t1092 * t863 + t1208;
t764 = -pkin(1) * t812 - pkin(2) * t885;
t763 = -t1093 * t915 + t1097 * t807;
t762 = t1093 * t807 + t1097 * t915;
t761 = -t1088 * t852 + t1090 * t853;
t760 = -t1088 * t853 - t1090 * t852;
t759 = -t1094 * t849 + t1098 * t850;
t758 = t1094 * t850 + t1098 * t849;
t757 = -t1094 * t840 + t1098 * t842;
t756 = -t1094 * t839 + t1098 * t841;
t755 = t1094 * t842 + t1098 * t840;
t754 = t1094 * t841 + t1098 * t839;
t753 = -t1094 * t836 + t1098 * t838;
t752 = -t1094 * t835 + t1098 * t837;
t751 = t1094 * t838 + t1098 * t836;
t750 = t1094 * t837 + t1098 * t835;
t749 = -t1089 * t828 + t1091 * t830;
t748 = -t1089 * t827 + t1091 * t829;
t747 = -t1089 * t825 + t1091 * t826;
t746 = t1089 * t826 + t1091 * t825;
t743 = -t1095 * t1205 + t1099 * t772;
t742 = t1095 * t772 + t1099 * t1205;
t741 = t1093 * t1112 + t1097 * t761;
t740 = t1093 * t761 - t1097 * t1112;
t739 = -qJ(2) * t912 - t1089 * t844 + t1091 * t861;
t737 = -pkin(7) * t1174 - qJ(2) * t812 - t1089 * t865;
t736 = -qJ(5) * t823 + t1176;
t735 = pkin(3) * t938 + pkin(8) * t745;
t734 = -qJ(5) * t818 + t1180;
t733 = t1095 * t906 + t1099 * t747;
t732 = t1095 * t747 - t1099 * t906;
t731 = -pkin(7) * t855 - t1094 * t811 + t1098 * t862;
t730 = -t1088 * t797 + t1090 * t799;
t729 = -t1088 * t796 + t1090 * t798;
t728 = -t1088 * t799 - t1090 * t797;
t727 = -t1088 * t798 - t1090 * t796;
t724 = -t1092 * t792 - t1096 * t788;
t723 = -t1092 * t1204 - t1096 * t787;
t722 = -t1092 * t788 + t1096 * t792;
t721 = -t1092 * t787 + t1096 * t1204;
t720 = -pkin(8) * t840 - t744;
t719 = -t1088 * t785 + t1090 * t786;
t718 = -t1088 * t783 + t1090 * t784;
t717 = -t1088 * t786 - t1090 * t785;
t716 = -t1088 * t784 - t1090 * t783;
t715 = -t1088 * t781 + t1090 * t782;
t714 = t1088 * t782 + t1090 * t781;
t713 = -t1094 * t778 + t1098 * t780;
t712 = -t1094 * t777 + t1098 * t779;
t711 = t1094 * t780 + t1098 * t778;
t710 = t1094 * t779 + t1098 * t777;
t709 = -t1094 * t775 + t1098 * t776;
t708 = t1094 * t776 + t1098 * t775;
t707 = -pkin(7) * t825 - t1094 * t800 + t1098 * t851;
t706 = pkin(2) * t1205 + pkin(7) * t856 + t1094 * t862 + t1098 * t811;
t705 = -t1094 * t769 + t1098 * t770;
t704 = t1094 * t770 + t1098 * t769;
t703 = -pkin(3) * t943 + pkin(8) * t842 + t745;
t702 = -t1094 * t767 + t1098 * t768;
t701 = t1094 * t768 + t1098 * t767;
t700 = -t1088 * t765 + t1090 * t766;
t699 = t1088 * t766 + t1090 * t765;
t698 = -t1094 * t762 + t1098 * t763;
t697 = t1094 * t763 + t1098 * t762;
t696 = -t1089 * t758 + t1091 * t759;
t695 = t1097 * t719 + t1133;
t694 = t1097 * t718 - t1133;
t693 = t1093 * t719 - t1132;
t692 = t1093 * t718 + t1132;
t691 = -pkin(2) * t906 + pkin(7) * t826 + t1094 * t851 + t1098 * t800;
t688 = -t1089 * t755 + t1091 * t757;
t687 = -t1089 * t754 + t1091 * t756;
t686 = t1089 * t757 + t1091 * t755;
t685 = -t1089 * t751 + t1091 * t753;
t684 = -t1089 * t750 + t1091 * t752;
t683 = -pkin(1) * t771 - pkin(2) * t855 - pkin(3) * t922 + t822;
t682 = -pkin(9) * t781 + t1167;
t681 = -pkin(4) * t823 + t726;
t680 = -pkin(4) * t818 + t725;
t679 = -pkin(9) * t765 + t1173;
t675 = t1095 * t943 + t1099 * t688;
t674 = t1095 * t688 - t1099 * t943;
t673 = t1098 * t745 - t1168;
t672 = t1094 * t745 + t1163;
t671 = -t1094 * t740 + t1098 * t741;
t670 = t1094 * t741 + t1098 * t740;
t669 = -t1093 * t788 + t1097 * t730;
t668 = -t1093 * t792 + t1097 * t729;
t667 = t1093 * t730 + t1097 * t788;
t666 = t1093 * t729 + t1097 * t792;
t665 = t1093 * t1204 + t1097 * t715;
t664 = t1093 * t715 - t1097 * t1204;
t663 = -pkin(1) * t746 - pkin(2) * t825 - pkin(3) * t895 + t821;
t662 = t1093 * t787 + t1097 * t700;
t661 = t1093 * t700 - t1097 * t787;
t660 = -pkin(5) * t1204 + pkin(9) * t782 + t1173;
t659 = -pkin(5) * t787 + pkin(9) * t766 - t1167;
t656 = -t1088 * t722 + t1090 * t724;
t655 = -t1088 * t721 + t1090 * t723;
t654 = t1088 * t724 + t1090 * t722;
t653 = -t1088 * t723 - t1090 * t721;
t652 = -t1089 * t711 + t1091 * t713;
t651 = -t1089 * t710 + t1091 * t712;
t650 = -t1089 * t708 + t1091 * t709;
t649 = -pkin(1) * t686 - pkin(2) * t755 - pkin(3) * t840;
t648 = -t1093 * t879 + t1097 * t655;
t647 = t1093 * t655 + t1097 * t879;
t646 = -t1089 * t704 + t1091 * t705;
t645 = t1089 * t705 + t1091 * t704;
t644 = -t1089 * t701 + t1091 * t702;
t643 = t1089 * t702 + t1091 * t701;
t642 = -t1089 * t697 + t1091 * t698;
t641 = t1089 * t698 + t1091 * t697;
t640 = t1093 * t843 + t1097 * t656;
t639 = t1093 * t656 - t1097 * t843;
t638 = -qJ(5) * t805 - t657;
t637 = t1093 * t794 + t1097 * t658;
t636 = t1093 * t658 - t1097 * t794;
t635 = -t1094 * t693 + t1098 * t695;
t634 = -t1094 * t692 + t1098 * t694;
t633 = t1094 * t695 + t1098 * t693;
t632 = t1094 * t694 + t1098 * t692;
t631 = t1095 * t823 + t1099 * t646;
t630 = t1095 * t646 - t1099 * t823;
t629 = -qJ(2) * t771 - t1089 * t706 + t1091 * t731;
t628 = t1095 * t818 + t1099 * t644;
t627 = t1095 * t644 - t1099 * t818;
t623 = -pkin(8) * t769 - t1093 * t681 + t1097 * t736;
t622 = -pkin(8) * t767 - t1093 * t680 + t1097 * t734;
t621 = t1095 * t805 + t1099 * t642;
t620 = t1095 * t642 - t1099 * t805;
t619 = -pkin(7) * t755 - t1094 * t703 + t1098 * t720;
t618 = -t1089 * t672 + t1091 * t673;
t617 = t1089 * t673 + t1091 * t672;
t616 = -t1089 * t670 + t1091 * t671;
t615 = -pkin(2) * t943 + pkin(7) * t757 + t1094 * t720 + t1098 * t703;
t614 = -t1094 * t667 + t1098 * t669;
t613 = -t1094 * t666 + t1098 * t668;
t612 = t1094 * t669 + t1098 * t667;
t611 = t1094 * t668 + t1098 * t666;
t610 = -pkin(7) * t672 - pkin(8) * t1163 - t1094 * t735;
t609 = -t1095 * t938 + t1099 * t618;
t608 = t1095 * t618 + t1099 * t938;
t607 = -qJ(2) * t746 - t1089 * t691 + t1091 * t707;
t606 = -pkin(4) * t654 - pkin(5) * t722;
t605 = -pkin(3) * t823 + pkin(8) * t770 + t1093 * t736 + t1097 * t681;
t604 = -t1094 * t664 + t1098 * t665;
t603 = t1094 * t665 + t1098 * t664;
t602 = pkin(2) * t938 + pkin(7) * t673 - pkin(8) * t1168 + t1098 * t735;
t601 = -pkin(3) * t818 + pkin(8) * t768 + t1093 * t734 + t1097 * t680;
t600 = -t1094 * t661 + t1098 * t662;
t599 = t1094 * t662 + t1098 * t661;
t598 = -pkin(8) * t762 + t1097 * t638 + t1187 * t805;
t597 = pkin(8) * t763 + t1093 * t638 + t1130 * t805;
t596 = -qJ(5) * t714 - t1088 * t660 + t1090 * t682;
t595 = -pkin(4) * t714 - pkin(5) * t781 + t626;
t594 = -pkin(4) * t699 - pkin(5) * t765 + t625;
t593 = -qJ(5) * t699 - t1088 * t659 + t1090 * t679;
t592 = -t1094 * t647 + t1098 * t648;
t591 = t1094 * t648 + t1098 * t647;
t590 = -t1094 * t639 + t1098 * t640;
t589 = t1094 * t640 + t1098 * t639;
t588 = -t1094 * t636 + t1098 * t637;
t587 = t1094 * t637 + t1098 * t636;
t586 = -t1089 * t633 + t1091 * t635;
t585 = -t1089 * t632 + t1091 * t634;
t584 = -pkin(1) * t617 - pkin(2) * t672 - pkin(3) * t744;
t583 = -pkin(1) * t645 - pkin(2) * t704 - pkin(3) * t769 - pkin(4) * t874 - qJ(5) * t824 - t1180;
t582 = -pkin(1) * t643 - pkin(2) * t701 - pkin(3) * t767 - pkin(4) * t871 - qJ(5) * t819 + t1176;
t579 = -t1089 * t612 + t1091 * t614;
t578 = -t1089 * t611 + t1091 * t613;
t577 = -pkin(5) * t738 + pkin(9) * t581;
t576 = -t1089 * t603 + t1091 * t604;
t575 = t1089 * t604 + t1091 * t603;
t574 = -pkin(8) * t636 + (-qJ(5) * t1097 + t1187) * t657;
t573 = -pkin(9) * t722 - t580;
t572 = -pkin(1) * t641 - pkin(2) * t697 - pkin(3) * t762 - pkin(4) * t915 - qJ(5) * t807 - t658;
t571 = -pkin(5) * t843 + pkin(9) * t724 + t581;
t570 = -t1089 * t599 + t1091 * t600;
t569 = t1089 * t600 + t1091 * t599;
t568 = -pkin(7) * t704 - t1094 * t605 + t1098 * t623;
t567 = -pkin(7) * t701 - t1094 * t601 + t1098 * t622;
t566 = -qJ(2) * t686 - t1089 * t615 + t1091 * t619;
t565 = t1095 * t714 + t1099 * t576;
t564 = t1095 * t576 - t1099 * t714;
t563 = -pkin(2) * t823 + pkin(7) * t705 + t1094 * t623 + t1098 * t605;
t562 = -pkin(2) * t818 + pkin(7) * t702 + t1094 * t622 + t1098 * t601;
t561 = t1095 * t699 + t1099 * t570;
t560 = t1095 * t570 - t1099 * t699;
t559 = pkin(8) * t637 + (-qJ(5) * t1093 + t1130) * t657;
t558 = -pkin(7) * t697 - t1094 * t597 + t1098 * t598;
t557 = -pkin(2) * t805 + pkin(7) * t698 + t1094 * t598 + t1098 * t597;
t556 = -qJ(2) * t617 - t1089 * t602 + t1091 * t610;
t555 = -t1089 * t591 + t1091 * t592;
t554 = -t1089 * t589 + t1091 * t590;
t553 = t1089 * t590 + t1091 * t589;
t552 = -t1089 * t587 + t1091 * t588;
t551 = t1089 * t588 + t1091 * t587;
t550 = -pkin(8) * t664 - t1093 * t595 + t1097 * t596;
t549 = -pkin(8) * t661 - t1093 * t594 + t1097 * t593;
t548 = t1090 * t581 - t1181;
t547 = t1088 * t581 + t1177;
t546 = -pkin(3) * t714 + pkin(8) * t665 + t1093 * t596 + t1097 * t595;
t545 = t1095 * t654 + t1099 * t554;
t544 = t1095 * t554 - t1099 * t654;
t543 = t1093 * t738 + t1097 * t548;
t542 = t1093 * t548 - t1097 * t738;
t541 = -pkin(3) * t699 + pkin(8) * t662 + t1093 * t593 + t1097 * t594;
t540 = t1095 * t657 + t1099 * t552;
t539 = t1095 * t552 - t1099 * t657;
t538 = -qJ(5) * t654 - t1088 * t571 + t1090 * t573;
t537 = -pkin(1) * t575 - pkin(2) * t603 - pkin(3) * t664 + pkin(4) * t1204 - qJ(5) * t715 - t1088 * t682 - t1090 * t660;
t536 = -pkin(4) * t547 - pkin(5) * t580;
t535 = -qJ(2) * t645 - t1089 * t563 + t1091 * t568;
t534 = -qJ(2) * t643 - t1089 * t562 + t1091 * t567;
t533 = -pkin(1) * t569 - pkin(2) * t599 - pkin(3) * t661 + pkin(4) * t787 - qJ(5) * t700 - t1088 * t679 - t1090 * t659;
t532 = -pkin(1) * t551 - pkin(2) * t587 - pkin(3) * t636 + pkin(4) * t794 - qJ(5) * t658;
t531 = -pkin(7) * t587 - t1094 * t559 + t1098 * t574;
t530 = -qJ(2) * t641 - t1089 * t557 + t1091 * t558;
t529 = -pkin(8) * t639 - t1093 * t606 + t1097 * t538;
t528 = -pkin(2) * t657 + pkin(7) * t588 + t1094 * t574 + t1098 * t559;
t527 = -pkin(9) * t1177 - qJ(5) * t547 - t1088 * t577;
t526 = -pkin(3) * t654 + pkin(8) * t640 + t1093 * t538 + t1097 * t606;
t525 = -t1094 * t542 + t1098 * t543;
t524 = t1094 * t543 + t1098 * t542;
t523 = -pkin(7) * t603 - t1094 * t546 + t1098 * t550;
t522 = -pkin(2) * t714 + pkin(7) * t604 + t1094 * t550 + t1098 * t546;
t521 = -pkin(7) * t599 - t1094 * t541 + t1098 * t549;
t520 = -pkin(2) * t699 + pkin(7) * t600 + t1094 * t549 + t1098 * t541;
t519 = -pkin(1) * t553 - pkin(2) * t589 - pkin(3) * t639 + pkin(4) * t843 - qJ(5) * t656 - t1088 * t573 - t1090 * t571;
t518 = -t1089 * t524 + t1091 * t525;
t517 = t1089 * t525 + t1091 * t524;
t516 = -pkin(7) * t589 - t1094 * t526 + t1098 * t529;
t515 = -pkin(2) * t654 + pkin(7) * t590 + t1094 * t529 + t1098 * t526;
t514 = -pkin(8) * t542 - t1093 * t536 + t1097 * t527;
t513 = -qJ(2) * t551 - t1089 * t528 + t1091 * t531;
t512 = -qJ(2) * t575 - t1089 * t522 + t1091 * t523;
t511 = t1095 * t547 + t1099 * t518;
t510 = t1095 * t518 - t1099 * t547;
t509 = -qJ(2) * t569 - t1089 * t520 + t1091 * t521;
t508 = -pkin(3) * t547 + pkin(8) * t543 + t1093 * t527 + t1097 * t536;
t507 = -pkin(1) * t517 - pkin(2) * t524 - pkin(3) * t542 + pkin(4) * t738 + pkin(9) * t1181 - qJ(5) * t548 - t1090 * t577;
t506 = -qJ(2) * t553 - t1089 * t515 + t1091 * t516;
t505 = -pkin(7) * t524 - t1094 * t508 + t1098 * t514;
t504 = -pkin(2) * t547 + pkin(7) * t525 + t1094 * t514 + t1098 * t508;
t503 = -qJ(2) * t517 - t1089 * t504 + t1091 * t505;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1069, -t1070, 0, t1045, 0, 0, 0, 0, 0, 0, -t1115, t1042, t1039, t960, 0, 0, 0, 0, 0, 0, t884, t898, t882, t809, 0, 0, 0, 0, 0, 0, t733, t743, t675, t609, 0, 0, 0, 0, 0, 0, t628, t631, t621, t540, 0, 0, 0, 0, 0, 0, t561, t565, t545, t511; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1070, -t1069, 0, t1044, 0, 0, 0, 0, 0, 0, t1041, t1040, t1038, t959, 0, 0, 0, 0, 0, 0, t883, t897, t881, t808, 0, 0, 0, 0, 0, 0, t732, t742, t674, t608, 0, 0, 0, 0, 0, 0, t627, t630, t620, t539, 0, 0, 0, 0, 0, 0, t560, t564, t544, t510; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t983, 0, 0, 0, 0, 0, 0, t904, t930, t912, t812, 0, 0, 0, 0, 0, 0, t746, t771, t686, t617, 0, 0, 0, 0, 0, 0, t643, t645, t641, t551, 0, 0, 0, 0, 0, 0, t569, t575, t553, t517; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1070, 0, -t1069, 0, t1118, -t1055, -t1044, -pkin(6) * t1044, t1047, t1066 * t1099 - t1068 * t1095, t1042, -t1047, t1115, 0, -pkin(6) * t1041 - t1036 * t1095 - t1089 * t1152, -pkin(6) * t1040 - t1037 * t1095 - t1091 * t1152, -pkin(6) * t1038 + t1099 * t983, -pkin(6) * t959 - (pkin(1) * t1095 - qJ(2) * t1099) * t983, t1099 * t940 - t1125, -t1034 * t1095 + t1099 * t914, t1095 * t1198 + t1099 * t932, t1099 * t939 + t1125, -t1058 * t1095 + t1099 * t931, qJDD(3) * t1095 + t1099 * t964, -pkin(6) * t883 - t1095 * t831 + t1099 * t810, -pkin(6) * t897 - t1095 * t854 + t1099 * t815, -pkin(6) * t881 - t1095 * t864 + t1099 * t739, -pkin(6) * t808 - t1095 * t764 + t1099 * t737, t1099 * t749 + t1127, -t1095 * t973 + t1099 * t687, -t1095 * t911 + t1099 * t773, t1099 * t748 - t1127, -t1095 * t907 + t1099 * t774, t1095 * t1134 + t1099 * t814, -pkin(6) * t732 - t1095 * t663 + t1099 * t607, -pkin(6) * t742 - t1095 * t683 + t1099 * t629, -pkin(6) * t674 - t1095 * t649 + t1099 * t566, -pkin(6) * t608 - t1095 * t584 + t1099 * t556, -t1095 * t868 + t1099 * t685, -t1095 * t804 + t1099 * t650, -t1095 * t845 + t1099 * t651, -t1095 * t866 + t1099 * t684, -t1095 * t846 + t1099 * t652, -t1095 * t892 + t1099 * t696, -pkin(6) * t627 - t1095 * t582 + t1099 * t534, -pkin(6) * t630 - t1095 * t583 + t1099 * t535, -pkin(6) * t620 - t1095 * t572 + t1099 * t530, -pkin(6) * t539 - t1095 * t532 + t1099 * t513, -t1095 * t717 + t1099 * t586, -t1095 * t653 + t1099 * t555, -t1095 * t727 + t1099 * t578, -t1095 * t716 + t1099 * t585, -t1095 * t728 + t1099 * t579, -t1095 * t760 + t1099 * t616, -pkin(6) * t560 - t1095 * t533 + t1099 * t509, -pkin(6) * t564 - t1095 * t537 + t1099 * t512, -pkin(6) * t544 - t1095 * t519 + t1099 * t506, -pkin(6) * t510 - t1095 * t507 + t1099 * t503; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1069, 0, t1070, 0, t1055, t1118, t1045, pkin(6) * t1045, t1046, t1066 * t1095 + t1068 * t1099, t1040, -t1046, -t1041, 0, -pkin(6) * t1115 + t1036 * t1099 - t1089 * t1153, pkin(6) * t1042 + t1037 * t1099 - t1091 * t1153, pkin(6) * t1039 + t1095 * t983, pkin(6) * t960 - (-pkin(1) * t1099 - qJ(2) * t1095) * t983, t1095 * t940 + t1124, t1034 * t1099 + t1095 * t914, t1095 * t932 - t1099 * t1198, t1095 * t939 - t1124, t1058 * t1099 + t1095 * t931, -qJDD(3) * t1099 + t1095 * t964, pkin(6) * t884 + t1095 * t810 + t1099 * t831, pkin(6) * t898 + t1095 * t815 + t1099 * t854, pkin(6) * t882 + t1095 * t739 + t1099 * t864, pkin(6) * t809 + t1095 * t737 + t1099 * t764, t1095 * t749 - t1126, t1095 * t687 + t1099 * t973, t1095 * t773 + t1099 * t911, t1095 * t748 + t1126, t1095 * t774 + t1099 * t907, t1095 * t814 - t1099 * t1134, pkin(6) * t733 + t1095 * t607 + t1099 * t663, pkin(6) * t743 + t1095 * t629 + t1099 * t683, pkin(6) * t675 + t1095 * t566 + t1099 * t649, pkin(6) * t609 + t1095 * t556 + t1099 * t584, t1095 * t685 + t1099 * t868, t1095 * t650 + t1099 * t804, t1095 * t651 + t1099 * t845, t1095 * t684 + t1099 * t866, t1095 * t652 + t1099 * t846, t1095 * t696 + t1099 * t892, pkin(6) * t628 + t1095 * t534 + t1099 * t582, pkin(6) * t631 + t1095 * t535 + t1099 * t583, pkin(6) * t621 + t1095 * t530 + t1099 * t572, pkin(6) * t540 + t1095 * t513 + t1099 * t532, t1095 * t586 + t1099 * t717, t1095 * t555 + t1099 * t653, t1095 * t578 + t1099 * t727, t1095 * t585 + t1099 * t716, t1095 * t579 + t1099 * t728, t1095 * t616 + t1099 * t760, pkin(6) * t561 + t1095 * t509 + t1099 * t533, pkin(6) * t565 + t1095 * t512 + t1099 * t537, pkin(6) * t545 + t1095 * t506 + t1099 * t519, pkin(6) * t511 + t1095 * t503 + t1099 * t507; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1071, t1072, 0, 0, t1080, 0.2e1 * t1089 * t1137, 0, t1081, 0, 0, -qJ(2) * t1063 + t1091 * t1122, qJ(2) * t1062 - t1089 * t1122, pkin(1) * t1067 + qJ(2) * t1065 + t984, pkin(1) * t1054 + qJ(2) * t984, t1089 * t994 + t1091 * t993, t1089 * t981 + t1091 * t979, t1089 * t989 + t1091 * t986, t1089 * t992 + t1091 * t991, t1089 * t988 + t1091 * t985, t1012 * t1091 + t1013 * t1089, -pkin(1) * t1029 + qJ(2) * t905 + t1089 * t945 + t1091 * t916, -pkin(1) * t1031 + qJ(2) * t933 + t1089 * t954 + t1091 * t924, -pkin(1) * t1004 + qJ(2) * t913 + t1089 * t861 + t1091 * t844, pkin(1) * t1025 - pkin(7) * t1178 + qJ(2) * t813 + t1091 * t865, t1089 * t830 + t1091 * t828, t1089 * t756 + t1091 * t754, t1089 * t859 + t1091 * t857, t1089 * t829 + t1091 * t827, t1089 * t860 + t1091 * t858, t1089 * t888 + t1091 * t887, -pkin(1) * t906 + qJ(2) * t747 + t1089 * t707 + t1091 * t691, pkin(1) * t1205 + qJ(2) * t772 + t1089 * t731 + t1091 * t706, -pkin(1) * t943 + qJ(2) * t688 + t1089 * t619 + t1091 * t615, pkin(1) * t938 + qJ(2) * t618 + t1089 * t610 + t1091 * t602, t1089 * t753 + t1091 * t751, t1089 * t709 + t1091 * t708, t1089 * t712 + t1091 * t710, t1089 * t752 + t1091 * t750, t1089 * t713 + t1091 * t711, t1089 * t759 + t1091 * t758, -pkin(1) * t818 + qJ(2) * t644 + t1089 * t567 + t1091 * t562, -pkin(1) * t823 + qJ(2) * t646 + t1089 * t568 + t1091 * t563, -pkin(1) * t805 + qJ(2) * t642 + t1089 * t558 + t1091 * t557, -pkin(1) * t657 + qJ(2) * t552 + t1089 * t531 + t1091 * t528, t1089 * t635 + t1091 * t633, t1089 * t592 + t1091 * t591, t1089 * t613 + t1091 * t611, t1089 * t634 + t1091 * t632, t1089 * t614 + t1091 * t612, t1089 * t671 + t1091 * t670, -pkin(1) * t699 + qJ(2) * t570 + t1089 * t521 + t1091 * t520, -pkin(1) * t714 + qJ(2) * t576 + t1089 * t523 + t1091 * t522, -pkin(1) * t654 + qJ(2) * t554 + t1089 * t516 + t1091 * t515, -pkin(1) * t547 + qJ(2) * t518 + t1089 * t505 + t1091 * t504;];
tauB_reg  = t1;
