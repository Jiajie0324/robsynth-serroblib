% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RPRRPR4
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:11
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RPRRPR4_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR4_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR4_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR4_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR4_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR4_invdynJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:10:24
% EndTime: 2019-03-09 05:10:45
% DurationCPUTime: 11.84s
% Computational Cost: add. (21600->635), mult. (53240->791), div. (0->0), fcn. (43013->18), ass. (0->321)
t292 = sin(pkin(10));
t450 = sin(qJ(3));
t372 = qJD(3) * t450;
t352 = qJD(1) * t372;
t294 = cos(pkin(10));
t453 = cos(qJ(3));
t367 = qJDD(1) * t453;
t373 = qJD(3) * t453;
t479 = qJD(1) * t373 + qJDD(1) * t450;
t380 = t292 * t367 + t294 * t479;
t185 = t292 * t352 - t380;
t298 = sin(qJ(4));
t381 = -t292 * t479 - t294 * t352;
t318 = -t294 * t367 - t381;
t377 = t450 * t292;
t322 = -t294 * t453 + t377;
t216 = t322 * qJD(1);
t321 = -t292 * t453 - t294 * t450;
t217 = t321 * qJD(1);
t452 = cos(qJ(4));
t329 = t298 * t216 + t217 * t452;
t304 = qJD(4) * t329 + t298 * t185 - t452 * t318;
t100 = qJDD(6) - t304;
t178 = -t452 * t216 + t217 * t298;
t174 = qJD(6) - t178;
t291 = sin(pkin(11));
t293 = cos(pkin(11));
t297 = sin(qJ(6));
t451 = cos(qJ(6));
t231 = t291 * t451 + t297 * t293;
t379 = t451 * t293;
t328 = -t297 * t291 + t379;
t390 = qJD(6) * t297;
t461 = qJD(6) * t379 - t291 * t390;
t395 = t328 * t178 - t461;
t514 = -t231 * t100 + t174 * t395;
t290 = qJD(3) + qJD(4);
t160 = t290 * t291 - t293 * t329;
t170 = t291 * t329;
t465 = t290 * t293 + t170;
t116 = t160 * t451 + t297 * t465;
t330 = t451 * t465;
t284 = qJDD(3) + qJDD(4);
t371 = qJD(4) * t452;
t391 = qJD(4) * t298;
t325 = -t452 * t185 - t216 * t371 + t217 * t391 - t298 * t318;
t85 = -t284 * t293 + t291 * t325;
t86 = t284 * t291 + t293 * t325;
t34 = -qJD(6) * t330 + t160 * t390 + t297 * t85 - t451 * t86;
t220 = t231 * qJD(6);
t396 = t231 * t178 - t220;
t513 = t116 * t396 - t328 * t34;
t117 = -t297 * t160 + t330;
t512 = t117 ^ 2;
t510 = t117 * t174;
t508 = t116 ^ 2;
t368 = t297 * t86 + t451 * t85;
t35 = qJD(6) * t116 + t368;
t354 = -t117 * t395 - t231 * t35;
t507 = t354 + t513;
t486 = t178 * t291;
t506 = pkin(5) * t486;
t505 = pkin(9) * t486;
t504 = t178 * t465;
t429 = qJDD(1) * pkin(1);
t299 = sin(qJ(1));
t300 = cos(qJ(1));
t462 = -g(1) * t299 + g(2) * t300;
t335 = -qJDD(2) + t429 - t462;
t420 = t329 * t290;
t503 = t304 - t420;
t414 = t178 * t290;
t502 = t325 - t414;
t350 = t100 * t328 + t174 * t396;
t427 = t117 * t329;
t501 = t350 + t427;
t421 = t329 ^ 2;
t490 = t178 ^ 2;
t500 = -t490 + t421;
t485 = t178 * t293;
t499 = -pkin(5) * t329 - pkin(9) * t485;
t78 = t86 * t291;
t498 = -t160 * t485 + t78;
t441 = pkin(7) + qJ(2);
t254 = t441 * t294;
t236 = qJD(1) * t254;
t387 = qJD(1) * qJD(2);
t458 = qJDD(1) * t441 + t387;
t204 = t458 * t292;
t205 = t458 * t294;
t252 = t441 * t292;
t235 = qJD(1) * t252;
t383 = -t450 * t204 + t453 * t205 - t235 * t373;
t137 = -t236 * t372 + t383;
t102 = -pkin(8) * t318 + t137;
t378 = t450 * t236;
t188 = -t453 * t235 - t378;
t162 = t217 * pkin(8) + t188;
t158 = qJD(3) * pkin(3) + t162;
t323 = t235 * t450 - t236 * t453;
t163 = -t216 * pkin(8) - t323;
t346 = -t453 * t204 - t205 * t450;
t138 = qJD(3) * t323 + t346;
t98 = qJDD(3) * pkin(3) + t185 * pkin(8) + t138;
t41 = -t298 * t102 - t158 * t391 - t163 * t371 + t452 * t98;
t39 = -pkin(4) * t284 + qJDD(5) - t41;
t454 = pkin(5) * t85;
t27 = t39 + t454;
t289 = pkin(10) + qJ(3);
t281 = qJ(4) + t289;
t271 = cos(t281);
t288 = pkin(11) + qJ(6);
t279 = cos(t288);
t157 = t452 * t163;
t111 = t298 * t158 + t157;
t105 = t290 * qJ(5) + t111;
t274 = t294 * pkin(2) + pkin(1);
t241 = -qJD(1) * t274 + qJD(2);
t190 = t216 * pkin(3) + t241;
t112 = -pkin(4) * t178 + qJ(5) * t329 + t190;
t55 = -t105 * t291 + t293 * t112;
t44 = -pkin(5) * t178 - pkin(9) * t160 + t55;
t56 = t293 * t105 + t291 * t112;
t48 = pkin(9) * t465 + t56;
t333 = t297 * t48 - t44 * t451;
t443 = g(3) * t279;
t270 = sin(t281);
t407 = t270 * t300;
t408 = t270 * t299;
t480 = g(1) * t407 + g(2) * t408;
t156 = t298 * t163;
t110 = t158 * t452 - t156;
t101 = -t290 * pkin(4) + qJD(5) - t110;
t72 = -pkin(5) * t465 + t101;
t497 = -t27 * t328 - t271 * t443 + t279 * t480 - t329 * t333 - t396 * t72;
t16 = t297 * t44 + t451 * t48;
t277 = sin(t288);
t348 = g(1) * t300 + g(2) * t299;
t332 = t270 * t348;
t444 = g(3) * t277;
t496 = -t16 * t329 + t27 * t231 + t271 * t444 - t277 * t332 - t395 * t72;
t495 = t117 * t396 - t328 * t35;
t494 = -t116 * t395 - t34 * t231;
t425 = t116 * t329;
t492 = t425 - t514;
t361 = -t452 * t102 - t158 * t371 + t163 * t391 - t298 * t98;
t37 = qJ(5) * t284 + qJD(5) * t290 - t361;
t164 = qJDD(2) - t381 * pkin(3) + (-pkin(1) + (-pkin(3) * t453 - pkin(2)) * t294) * qJDD(1);
t45 = -pkin(4) * t304 - qJ(5) * t325 + qJD(5) * t329 + t164;
t11 = -t291 * t37 + t293 * t45;
t8 = -pkin(5) * t304 - pkin(9) * t86 + t11;
t12 = t291 * t45 + t293 * t37;
t9 = -pkin(9) * t85 + t12;
t3 = -qJD(6) * t333 + t297 * t8 + t451 * t9;
t403 = t271 * t300;
t404 = t271 * t299;
t382 = g(1) * t403 + g(2) * t404 + g(3) * t270;
t4 = -qJD(6) * t16 - t297 * t9 + t451 * t8;
t491 = t16 * t396 - t4 * t231 + t3 * t328 - t333 * t395 - t382;
t488 = t55 * t178;
t423 = t160 * t329;
t487 = t174 * t329;
t484 = t178 * t329;
t467 = t329 * t465;
t478 = t178 * t56 - t11;
t76 = t85 * t293;
t476 = t291 * t504 - t76;
t406 = t271 * t291;
t475 = -t56 * t329 + g(3) * t406 + (-t332 + t39) * t291;
t474 = t480 * t293 + t55 * t329;
t473 = -t190 * t178 + t361 + t382;
t340 = t293 * t465;
t422 = t160 * t291;
t316 = t340 - t422;
t75 = t291 * t85;
t79 = t86 * t293;
t472 = -t178 * t316 - t75 + t79;
t267 = g(3) * t271;
t459 = t267 - t480;
t471 = t190 * t329 + t41 - t459;
t135 = -pkin(4) * t329 - qJ(5) * t178;
t94 = t291 * t304;
t468 = -t178 * t485 + t94;
t118 = t162 * t298 + t157;
t466 = -pkin(3) * t391 + t118;
t442 = t293 * pkin(5);
t273 = pkin(4) + t442;
t295 = -pkin(9) - qJ(5);
t464 = -t270 * t295 + t271 * t273;
t463 = t271 * pkin(4) + t270 * qJ(5);
t460 = qJ(2) * qJDD(1);
t456 = t217 ^ 2;
t455 = qJD(3) ^ 2;
t278 = sin(t289);
t449 = pkin(3) * t278;
t280 = cos(t289);
t268 = pkin(3) * t280;
t238 = t268 + t274;
t221 = t300 * t238;
t446 = g(2) * t221;
t282 = t293 * pkin(9);
t374 = qJD(2) * t450;
t375 = qJD(2) * t453;
t167 = -t252 * t373 - t254 * t372 - t292 * t374 + t294 * t375;
t312 = qJD(3) * t321;
t147 = pkin(8) * t312 + t167;
t192 = -t453 * t252 - t254 * t450;
t171 = pkin(8) * t321 + t192;
t194 = -t450 * t252 + t453 * t254;
t172 = -pkin(8) * t322 + t194;
t313 = qJD(3) * t322;
t303 = pkin(8) * t313 + t252 * t372 - t254 * t373 - t292 * t375 - t294 * t374;
t59 = t147 * t452 + t171 * t371 - t172 * t391 + t298 * t303;
t308 = t452 * t322;
t142 = t290 * t308 - t298 * t312 - t321 * t391;
t315 = t298 * t322;
t143 = -qJD(4) * t315 - t298 * t313 - t312 * t452 - t321 * t371;
t187 = -t321 * t452 - t315;
t309 = pkin(3) * t312;
t65 = t143 * pkin(4) + t142 * qJ(5) - t187 * qJD(5) - t309;
t29 = t291 * t65 + t293 * t59;
t10 = t12 * t293;
t95 = t293 * t304;
t436 = -t178 * t486 - t95;
t272 = pkin(3) * t298 + qJ(5);
t224 = (-pkin(9) - t272) * t291;
t225 = t272 * t293 + t282;
t183 = t224 * t451 - t297 * t225;
t262 = pkin(3) * t371 + qJD(5);
t119 = t162 * t452 - t156;
t122 = -pkin(3) * t217 + t135;
t61 = -t119 * t291 + t293 * t122;
t47 = t499 + t61;
t62 = t293 * t119 + t291 * t122;
t51 = t62 - t505;
t435 = qJD(6) * t183 + t262 * t328 - t297 * t47 - t451 * t51;
t184 = t297 * t224 + t225 * t451;
t434 = -qJD(6) * t184 - t231 * t262 + t297 * t51 - t451 * t47;
t251 = t295 * t291;
t253 = qJ(5) * t293 + t282;
t191 = t251 * t451 - t297 * t253;
t66 = -t110 * t291 + t293 * t135;
t49 = t499 + t66;
t67 = t293 * t110 + t291 * t135;
t54 = t67 - t505;
t432 = qJD(5) * t328 + qJD(6) * t191 - t297 * t49 - t451 * t54;
t193 = t297 * t251 + t253 * t451;
t431 = -qJD(5) * t231 - qJD(6) * t193 + t297 * t54 - t451 * t49;
t428 = t111 * t290;
t426 = t116 * t117;
t424 = t142 * t291;
t411 = t187 * t291;
t410 = t217 * t216;
t405 = t271 * t293;
t402 = t277 * t299;
t401 = t277 * t300;
t400 = t279 * t299;
t399 = t279 * t300;
t186 = -t298 * t321 + t308;
t202 = pkin(3) * t322 - t274;
t126 = t186 * pkin(4) - t187 * qJ(5) + t202;
t132 = t298 * t171 + t172 * t452;
t69 = t291 * t126 + t293 * t132;
t286 = t292 ^ 2;
t287 = t294 ^ 2;
t392 = t286 + t287;
t389 = t217 * qJD(3);
t388 = -qJD(5) + t101;
t386 = t294 * qJDD(1);
t285 = -pkin(8) - t441;
t370 = pkin(5) * t291 - t285;
t28 = -t291 * t59 + t293 * t65;
t365 = t392 * qJD(1) ^ 2;
t68 = t293 * t126 - t132 * t291;
t131 = -t452 * t171 + t172 * t298;
t360 = t10 - t382;
t359 = 0.2e1 * t392;
t275 = -pkin(3) * t452 - pkin(4);
t357 = qJD(1) * t377;
t356 = -t466 - t506;
t355 = -g(1) * t408 + g(2) * t407;
t349 = -pkin(4) * t270 - t449;
t344 = -t11 * t293 - t12 * t291;
t343 = -t11 * t291 + t10;
t342 = t291 * t55 - t293 * t56;
t339 = t142 * t178 - t187 * t304;
t338 = -t143 * t178 - t186 * t304;
t336 = t270 * t273 + t271 * t295;
t50 = pkin(5) * t186 - t187 * t282 + t68;
t58 = -pkin(9) * t411 + t69;
t25 = -t297 * t58 + t451 * t50;
t26 = t297 * t50 + t451 * t58;
t240 = -qJDD(1) * t274 + qJDD(2);
t319 = t304 * t272 + (-t101 + t262) * t178;
t317 = t335 + t429;
t314 = -g(3) * t280 + t278 * t348;
t310 = -t101 * t142 + t187 * t39 - t348;
t307 = t39 + t459;
t305 = t359 * t387 - t348;
t60 = qJD(4) * t132 + t298 * t147 - t452 * t303;
t245 = t275 - t442;
t243 = qJ(5) * t403;
t242 = qJ(5) * t404;
t213 = t216 ^ 2;
t198 = t271 * t399 + t402;
t197 = -t271 * t401 + t400;
t196 = -t271 * t400 + t401;
t195 = t271 * t402 + t399;
t168 = qJD(2) * t321 - qJD(3) * t194;
t141 = t328 * t187;
t140 = t231 * t187;
t84 = pkin(5) * t411 + t131;
t73 = t111 + t506;
t53 = -t142 * t231 + t187 * t461;
t52 = t142 * t328 + t187 * t220;
t46 = -pkin(5) * t424 + t60;
t22 = pkin(9) * t424 + t29;
t17 = pkin(5) * t143 + t142 * t282 + t28;
t6 = -qJD(6) * t26 + t17 * t451 - t297 * t22;
t5 = qJD(6) * t25 + t297 * t17 + t22 * t451;
t1 = [0, 0, 0, 0, 0, qJDD(1), -t462, t348, 0, 0, t286 * qJDD(1), 0.2e1 * t292 * t386, 0, t287 * qJDD(1), 0, 0, t317 * t294, -t317 * t292, t359 * t460 + t305, pkin(1) * t335 + (t392 * t460 + t305) * qJ(2), t185 * t321 + t217 * t313, t185 * t322 + t216 * t313 - t217 * t312 + t318 * t321, -qJDD(3) * t321 - t322 * t455, -t216 * t312 + t318 * t322, -qJDD(3) * t322 + t321 * t455, 0, t192 * qJDD(3) + t240 * t322 - t274 * t318 - t462 * t280 + (-t241 * t321 + t168) * qJD(3), -t167 * qJD(3) - t194 * qJDD(3) + t274 * t185 - t240 * t321 - t241 * t313 + t278 * t462, t138 * t321 - t167 * t216 + t168 * t217 + t192 * t185 - t323 * t312 - t194 * t318 - t348 + (t188 * qJD(3) - t137) * t322, t137 * t194 - t323 * t167 + t138 * t192 + t188 * t168 - t240 * t274 - g(1) * (-t274 * t299 + t300 * t441) - g(2) * (t274 * t300 + t299 * t441) t142 * t329 + t187 * t325, t143 * t329 - t186 * t325 - t339, -t142 * t290 + t187 * t284, t338, -t143 * t290 - t186 * t284, 0, g(1) * t404 - g(2) * t403 - t131 * t284 + t190 * t143 + t164 * t186 + t178 * t309 - t202 * t304 - t60 * t290, -t132 * t284 - t190 * t142 + t164 * t187 + t202 * t325 - t59 * t290 + t309 * t329 + t355, t110 * t142 - t111 * t143 + t131 * t325 + t132 * t304 + t178 * t59 + t186 * t361 - t187 * t41 - t329 * t60 - t348, -t361 * t132 + t111 * t59 - t41 * t131 - t110 * t60 + t164 * t202 - t190 * t309 - g(1) * (-t299 * t238 - t300 * t285) - g(2) * (-t299 * t285 + t221) (-t142 * t160 + t187 * t86) * t293 (-t78 - t76) * t187 - t316 * t142, t160 * t143 + t86 * t186 + t293 * t339 (t142 * t465 + t85 * t187) * t291, t143 * t465 - t85 * t186 - t291 * t339, t338, t11 * t186 + t131 * t85 + t55 * t143 - t178 * t28 + t291 * t310 - t304 * t68 - t405 * t462 - t465 * t60, -t12 * t186 + t131 * t86 - t56 * t143 + t60 * t160 + t178 * t29 + t293 * t310 + t304 * t69 + t406 * t462, t29 * t465 - t69 * t85 - t28 * t160 - t68 * t86 + t344 * t187 + (t291 * t56 + t293 * t55) * t142 - t355, -t446 + t101 * t60 + t11 * t68 + t12 * t69 + t39 * t131 + t55 * t28 + t56 * t29 + (g(1) * t285 - g(2) * t463) * t300 + (-g(1) * (-t238 - t463) + g(2) * t285) * t299, -t116 * t52 - t141 * t34, -t116 * t53 - t117 * t52 + t140 * t34 - t141 * t35, t100 * t141 + t116 * t143 - t174 * t52 - t186 * t34, -t117 * t53 + t140 * t35, -t100 * t140 + t117 * t143 - t174 * t53 - t186 * t35, t100 * t186 + t143 * t174, -g(1) * t196 - g(2) * t198 + t100 * t25 - t117 * t46 + t140 * t27 - t143 * t333 + t174 * t6 + t186 * t4 + t35 * t84 + t53 * t72, -g(1) * t195 - g(2) * t197 - t100 * t26 + t116 * t46 + t141 * t27 - t143 * t16 - t174 * t5 - t186 * t3 - t34 * t84 - t52 * t72, -t116 * t6 + t117 * t5 - t140 * t3 - t141 * t4 - t16 * t53 + t25 * t34 - t26 * t35 - t333 * t52 - t355, -t446 - t333 * t6 + t16 * t5 + t4 * t25 + t3 * t26 + t27 * t84 + t72 * t46 + (-g(1) * t370 - g(2) * t464) * t300 + (-g(1) * (-t238 - t464) - g(2) * t370) * t299; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, t292 * qJDD(1), -t365, -qJ(2) * t365 - t335, 0, 0, 0, 0, 0, 0, t318 - t389 (-t357 - t216) * qJD(3) + t380, -t213 - t456, -t188 * t217 - t216 * t323 + t240 + t462, 0, 0, 0, 0, 0, 0, -t304 - t420, t325 + t414, -t490 - t421, -t110 * t329 - t111 * t178 + t164 + t462, 0, 0, 0, 0, 0, 0, t436 - t467, t423 + t468, -t79 - t75 + (-t340 - t422) * t178, t101 * t329 + t178 * t342 - t344 + t462, 0, 0, 0, 0, 0, 0, t350 - t427, t425 + t514, t354 - t513, -t16 * t395 + t3 * t231 + t328 * t4 + t329 * t72 - t333 * t396 + t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t410, -t213 + t456 (-t357 + t216) * qJD(3) + t380, t410, -t318 - t389, qJDD(3), t241 * t217 + t314 + t346, g(3) * t278 + t241 * t216 + t348 * t280 + (t378 + t188) * qJD(3) - t383, 0, 0, t484, t500, t502, -t484, t503, t284, t118 * t290 + (-t178 * t217 + t284 * t452 - t290 * t391) * pkin(3) + t471, t119 * t290 + (-t217 * t329 - t284 * t298 - t290 * t371) * pkin(3) + t473, t110 * t178 - t111 * t329 + t118 * t329 - t119 * t178 + (-t452 * t325 + t304 * t298 + (t178 * t452 - t298 * t329) * qJD(4)) * pkin(3), t110 * t118 - t111 * t119 + (t452 * t41 + t190 * t217 - t298 * t361 + (-t110 * t298 + t111 * t452) * qJD(4) + t314) * pkin(3), t498, t472, t423 - t468, t476, t436 + t467, -t484, -g(3) * t405 + t178 * t61 + t275 * t85 + t291 * t319 - t39 * t293 + t465 * t466 + t474, -t160 * t466 - t178 * t62 + t275 * t86 + t293 * t319 + t475, t61 * t160 - t62 * t170 + (t262 * t465 - t272 * t85 - t62 * t290 + t488) * t293 + (t160 * t262 + t272 * t86 + t478) * t291 + t360, t39 * t275 - t56 * t62 - t55 * t61 - g(1) * (t300 * t349 + t243) - g(2) * (t299 * t349 + t242) - g(3) * (t268 + t463) + t343 * t272 - t342 * t262 - t466 * t101, t494, t507, t492, t495, t501, t487, t183 * t100 - t117 * t356 + t174 * t434 + t245 * t35 + t497, -t184 * t100 + t116 * t356 - t174 * t435 - t245 * t34 + t496, -t116 * t434 + t117 * t435 + t183 * t34 - t184 * t35 + t491, t3 * t184 + t4 * t183 + t27 * t245 - g(3) * (t268 + t464) + t356 * t72 + t435 * t16 - t434 * t333 + t348 * (t336 + t449); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t484, t500, t502, -t484, t503, t284, t428 + t471, t110 * t290 + t473, 0, 0, t498, t472, t293 * t490 + t423 - t94, t476, -t291 * t490 + t467 - t95, -t484, qJ(5) * t94 - pkin(4) * t85 + t111 * t170 + (-t39 + t428 - t267) * t293 - (t291 * t388 - t66) * t178 + t474, qJ(5) * t95 - pkin(4) * t86 - t111 * t160 - (t293 * t388 + t67) * t178 + t475, t66 * t160 - t67 * t170 + (-qJ(5) * t85 + qJD(5) * t465 - t67 * t290 + t488) * t293 + (qJ(5) * t86 + qJD(5) * t160 + t478) * t291 + t360, -t39 * pkin(4) - t56 * t67 - t55 * t66 - t101 * t111 - g(1) * (-pkin(4) * t407 + t243) - g(2) * (-pkin(4) * t408 + t242) - g(3) * t463 - t342 * qJD(5) + t343 * qJ(5), t494, t507, t492, t495, t501, t487, t191 * t100 + t117 * t73 + t174 * t431 - t273 * t35 + t497, -t193 * t100 - t73 * t116 - t174 * t432 + t273 * t34 + t496, -t116 * t431 + t117 * t432 + t191 * t34 - t193 * t35 + t491, -g(3) * t464 + t16 * t432 + t4 * t191 + t3 * t193 - t27 * t273 - t333 * t431 + t336 * t348 - t72 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t160 * t178 + t85, t86 - t504, -t160 ^ 2 - t465 ^ 2, t160 * t55 - t465 * t56 + t307, 0, 0, 0, 0, 0, 0, t116 * t174 + t35, -t34 + t510, -t508 - t512, -t116 * t333 - t117 * t16 + t307 + t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, t508 - t512, -t34 - t510, t426, -t368 + (-qJD(6) + t174) * t116, t100, -g(1) * t197 + g(2) * t195 - t72 * t116 + t16 * t174 + t270 * t444 + t4, g(1) * t198 - g(2) * t196 - t117 * t72 - t174 * t333 + t270 * t443 - t3, 0, 0;];
tau_reg  = t1;
