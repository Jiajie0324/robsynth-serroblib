% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6PRPPRR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d5,d6,theta1,theta3]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 21:53
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6PRPPRR2_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPPRR2_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPPRR2_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRPPRR2_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRPPRR2_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPPRR2_invdynf_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 21:53:39
% EndTime: 2019-05-04 21:53:43
% DurationCPUTime: 3.64s
% Computational Cost: add. (12079->240), mult. (22164->335), div. (0->0), fcn. (16112->12), ass. (0->189)
t1581 = sin(pkin(10));
t1584 = cos(pkin(10));
t1560 = g(1) * t1581 - g(2) * t1584;
t1577 = -g(3) + qJDD(1);
t1582 = sin(pkin(6));
t1585 = cos(pkin(6));
t1641 = t1560 * t1585 + t1577 * t1582;
t1580 = sin(pkin(11));
t1583 = cos(pkin(11));
t1595 = qJD(2) ^ 2;
t1554 = qJDD(2) * t1583 - t1580 * t1595;
t1555 = qJDD(2) * t1580 + t1583 * t1595;
t1590 = sin(qJ(2));
t1593 = cos(qJ(2));
t1524 = t1554 * t1593 - t1555 * t1590;
t1526 = t1554 * t1590 + t1555 * t1593;
t1633 = t1526 * t1585;
t1640 = t1524 * t1584 - t1581 * t1633;
t1639 = t1524 * t1581 + t1584 * t1633;
t1635 = t1524 * t1585;
t1638 = t1526 * t1584 + t1581 * t1635;
t1637 = t1526 * t1581 - t1584 * t1635;
t1636 = t1524 * t1582;
t1634 = t1526 * t1582;
t1589 = sin(qJ(5));
t1625 = qJD(2) * t1589;
t1568 = qJD(6) + t1625;
t1632 = qJD(6) + t1568;
t1588 = sin(qJ(6));
t1591 = cos(qJ(6));
t1592 = cos(qJ(5));
t1624 = qJD(2) * t1592;
t1547 = -t1591 * qJD(5) + t1588 * t1624;
t1631 = t1547 ^ 2;
t1549 = qJD(5) * t1588 + t1591 * t1624;
t1630 = t1549 ^ 2;
t1629 = t1568 ^ 2;
t1628 = 2 * qJD(4);
t1627 = pkin(5) * t1589;
t1626 = t1595 * pkin(8);
t1623 = t1547 * t1549;
t1538 = -t1560 * t1582 + t1585 * t1577;
t1537 = qJDD(3) + t1538;
t1620 = t1582 * t1537;
t1619 = qJD(6) - t1568;
t1561 = -g(1) * t1584 - g(2) * t1581;
t1513 = -t1561 * t1590 + t1593 * t1641;
t1508 = qJDD(2) * pkin(2) + t1513;
t1514 = t1593 * t1561 + t1590 * t1641;
t1509 = -pkin(2) * t1595 + t1514;
t1488 = t1580 * t1508 + t1583 * t1509;
t1487 = t1583 * t1508 - t1509 * t1580;
t1484 = -qJDD(2) * pkin(3) - t1595 * qJ(4) + qJDD(4) - t1487;
t1596 = -qJDD(2) * pkin(8) + t1484;
t1471 = t1592 * t1537 + t1589 * t1596;
t1575 = t1589 ^ 2;
t1576 = t1592 ^ 2;
t1618 = t1575 + t1576;
t1617 = t1589 * qJDD(2);
t1616 = t1592 * qJDD(2);
t1615 = qJD(5) * t1625;
t1614 = qJD(5) * t1624;
t1613 = t1589 * t1592 * t1595;
t1612 = -t1595 * pkin(3) + t1488;
t1470 = -t1537 * t1589 + t1592 * t1596;
t1552 = -t1615 + t1616;
t1611 = t1591 * qJDD(5) - t1588 * t1552;
t1550 = (-pkin(9) * t1592 + t1627) * qJD(2);
t1594 = qJD(5) ^ 2;
t1464 = -pkin(5) * t1594 + qJDD(5) * pkin(9) - t1550 * t1625 + t1471;
t1465 = -t1626 - t1552 * pkin(9) + (qJ(4) + t1627) * qJDD(2) + (t1628 + (0.2e1 * pkin(5) * t1592 + pkin(9) * t1589) * qJD(5)) * qJD(2) + t1612;
t1447 = -t1464 * t1588 + t1465 * t1591;
t1448 = t1464 * t1591 + t1465 * t1588;
t1433 = -t1447 * t1588 + t1448 * t1591;
t1463 = -qJDD(5) * pkin(5) - t1594 * pkin(9) + t1550 * t1624 - t1470;
t1425 = t1433 * t1589 - t1463 * t1592;
t1432 = t1447 * t1591 + t1448 * t1588;
t1421 = -t1425 * t1583 + t1432 * t1580;
t1422 = t1425 * t1580 + t1432 * t1583;
t1610 = t1421 * t1593 + t1422 * t1590;
t1451 = t1470 * t1592 + t1471 * t1589;
t1483 = qJDD(2) * qJ(4) + qJD(2) * t1628 + t1612;
t1482 = t1483 - t1626;
t1445 = -t1451 * t1583 + t1482 * t1580;
t1446 = t1451 * t1580 + t1482 * t1583;
t1609 = t1445 * t1593 + t1446 * t1590;
t1498 = -t1549 * t1619 + t1611;
t1598 = -t1588 * qJDD(5) - t1591 * t1552;
t1500 = t1547 * t1619 + t1598;
t1477 = t1498 * t1591 - t1500 * t1588;
t1510 = -t1630 - t1631;
t1461 = t1477 * t1589 - t1510 * t1592;
t1476 = t1498 * t1588 + t1500 * t1591;
t1449 = -t1461 * t1583 + t1476 * t1580;
t1450 = t1461 * t1580 + t1476 * t1583;
t1608 = t1449 * t1593 + t1450 * t1590;
t1597 = -qJDD(6) - t1614 - t1617;
t1511 = -t1597 - t1623;
t1523 = -t1629 - t1631;
t1491 = -t1511 * t1588 + t1523 * t1591;
t1497 = t1549 * t1632 - t1611;
t1466 = t1491 * t1589 - t1497 * t1592;
t1490 = t1511 * t1591 + t1523 * t1588;
t1453 = -t1466 * t1583 + t1490 * t1580;
t1454 = t1466 * t1580 + t1490 * t1583;
t1607 = t1453 * t1593 + t1454 * t1590;
t1512 = t1597 - t1623;
t1530 = -t1629 - t1630;
t1493 = t1512 * t1591 - t1530 * t1588;
t1499 = -t1547 * t1632 - t1598;
t1468 = t1493 * t1589 - t1499 * t1592;
t1492 = t1512 * t1588 + t1530 * t1591;
t1455 = -t1468 * t1583 + t1492 * t1580;
t1456 = t1468 * t1580 + t1492 * t1583;
t1606 = t1455 * t1593 + t1456 * t1590;
t1457 = t1483 * t1580 - t1484 * t1583;
t1458 = t1483 * t1583 + t1484 * t1580;
t1605 = t1457 * t1593 + t1458 * t1590;
t1459 = t1487 * t1583 + t1488 * t1580;
t1460 = -t1487 * t1580 + t1488 * t1583;
t1604 = t1459 * t1593 + t1460 * t1590;
t1562 = qJDD(5) - t1613;
t1566 = -t1575 * t1595 - t1594;
t1533 = t1562 * t1592 + t1566 * t1589;
t1551 = 0.2e1 * t1614 + t1617;
t1504 = -t1533 * t1583 + t1551 * t1580;
t1506 = t1533 * t1580 + t1551 * t1583;
t1603 = t1504 * t1593 + t1506 * t1590;
t1563 = -qJDD(5) - t1613;
t1567 = -t1576 * t1595 - t1594;
t1534 = t1563 * t1589 + t1567 * t1592;
t1553 = -0.2e1 * t1615 + t1616;
t1505 = -t1534 * t1583 + t1553 * t1580;
t1507 = t1534 * t1580 + t1553 * t1583;
t1602 = t1505 * t1593 + t1507 * t1590;
t1601 = t1513 * t1593 + t1514 * t1590;
t1556 = t1618 * qJDD(2);
t1559 = t1618 * t1595;
t1528 = t1556 * t1583 - t1559 * t1580;
t1529 = -t1556 * t1580 - t1559 * t1583;
t1600 = t1528 * t1593 + t1529 * t1590;
t1599 = qJDD(2) * t1593 - t1590 * t1595;
t1558 = -qJDD(2) * t1590 - t1593 * t1595;
t1543 = t1599 * t1585;
t1542 = t1558 * t1585;
t1541 = t1599 * t1582;
t1540 = t1558 * t1582;
t1536 = t1563 * t1592 - t1567 * t1589;
t1535 = -t1562 * t1589 + t1566 * t1592;
t1531 = t1585 * t1537;
t1496 = -t1528 * t1590 + t1529 * t1593;
t1495 = t1600 * t1585;
t1494 = t1600 * t1582;
t1489 = -t1513 * t1590 + t1514 * t1593;
t1486 = -t1505 * t1590 + t1507 * t1593;
t1485 = -t1504 * t1590 + t1506 * t1593;
t1479 = -t1582 * t1538 + t1585 * t1601;
t1478 = t1585 * t1538 + t1582 * t1601;
t1475 = -t1582 * t1536 + t1585 * t1602;
t1474 = -t1582 * t1535 + t1585 * t1603;
t1473 = t1585 * t1536 + t1582 * t1602;
t1472 = t1585 * t1535 + t1582 * t1603;
t1469 = t1493 * t1592 + t1499 * t1589;
t1467 = t1491 * t1592 + t1497 * t1589;
t1462 = t1477 * t1592 + t1510 * t1589;
t1452 = -t1470 * t1589 + t1471 * t1592;
t1444 = -t1459 * t1590 + t1460 * t1593;
t1443 = t1585 * t1604 - t1620;
t1442 = t1582 * t1604 + t1531;
t1441 = -t1457 * t1590 + t1458 * t1593;
t1440 = -t1455 * t1590 + t1456 * t1593;
t1439 = t1585 * t1605 - t1620;
t1438 = t1582 * t1605 + t1531;
t1437 = -t1453 * t1590 + t1454 * t1593;
t1436 = -t1449 * t1590 + t1450 * t1593;
t1435 = -t1582 * t1469 + t1585 * t1606;
t1434 = t1585 * t1469 + t1582 * t1606;
t1431 = -t1582 * t1467 + t1585 * t1607;
t1430 = t1585 * t1467 + t1582 * t1607;
t1429 = -t1582 * t1462 + t1585 * t1608;
t1428 = t1585 * t1462 + t1582 * t1608;
t1427 = -t1445 * t1590 + t1446 * t1593;
t1426 = t1433 * t1592 + t1463 * t1589;
t1424 = -t1582 * t1452 + t1585 * t1609;
t1423 = t1585 * t1452 + t1582 * t1609;
t1420 = -t1421 * t1590 + t1422 * t1593;
t1419 = -t1582 * t1426 + t1585 * t1610;
t1418 = t1585 * t1426 + t1582 * t1610;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1560 * t1581 + t1561 * t1584, 0, 0, 0, 0, 0, 0, -t1543 * t1581 + t1558 * t1584, -t1542 * t1581 - t1584 * t1599, 0, -t1479 * t1581 + t1489 * t1584, 0, 0, 0, 0, 0, 0, -t1638, -t1640, 0, -t1443 * t1581 + t1444 * t1584, 0, 0, 0, 0, 0, 0, 0, t1638, t1640, -t1439 * t1581 + t1441 * t1584, 0, 0, 0, 0, 0, 0, -t1474 * t1581 + t1485 * t1584, -t1475 * t1581 + t1486 * t1584, -t1495 * t1581 + t1496 * t1584, -t1424 * t1581 + t1427 * t1584, 0, 0, 0, 0, 0, 0, -t1431 * t1581 + t1437 * t1584, -t1435 * t1581 + t1440 * t1584, -t1429 * t1581 + t1436 * t1584, -t1419 * t1581 + t1420 * t1584; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1560 * t1584 + t1561 * t1581, 0, 0, 0, 0, 0, 0, t1543 * t1584 + t1558 * t1581, t1542 * t1584 - t1581 * t1599, 0, t1479 * t1584 + t1489 * t1581, 0, 0, 0, 0, 0, 0, -t1637, -t1639, 0, t1443 * t1584 + t1444 * t1581, 0, 0, 0, 0, 0, 0, 0, t1637, t1639, t1439 * t1584 + t1441 * t1581, 0, 0, 0, 0, 0, 0, t1474 * t1584 + t1485 * t1581, t1475 * t1584 + t1486 * t1581, t1495 * t1584 + t1496 * t1581, t1424 * t1584 + t1427 * t1581, 0, 0, 0, 0, 0, 0, t1431 * t1584 + t1437 * t1581, t1435 * t1584 + t1440 * t1581, t1429 * t1584 + t1436 * t1581, t1419 * t1584 + t1420 * t1581; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t1577, 0, 0, 0, 0, 0, 0, t1541, t1540, 0, t1478, 0, 0, 0, 0, 0, 0, t1636, -t1634, 0, t1442, 0, 0, 0, 0, 0, 0, 0, -t1636, t1634, t1438, 0, 0, 0, 0, 0, 0, t1472, t1473, t1494, t1423, 0, 0, 0, 0, 0, 0, t1430, t1434, t1428, t1418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1561, 0, 0, 0, 0, 0, 0, t1558, -t1599, 0, t1489, 0, 0, 0, 0, 0, 0, -t1526, -t1524, 0, t1444, 0, 0, 0, 0, 0, 0, 0, t1526, t1524, t1441, 0, 0, 0, 0, 0, 0, t1485, t1486, t1496, t1427, 0, 0, 0, 0, 0, 0, t1437, t1440, t1436, t1420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1560, 0, 0, 0, 0, 0, 0, t1543, t1542, 0, t1479, 0, 0, 0, 0, 0, 0, t1635, -t1633, 0, t1443, 0, 0, 0, 0, 0, 0, 0, -t1635, t1633, t1439, 0, 0, 0, 0, 0, 0, t1474, t1475, t1495, t1424, 0, 0, 0, 0, 0, 0, t1431, t1435, t1429, t1419; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1577, 0, 0, 0, 0, 0, 0, t1541, t1540, 0, t1478, 0, 0, 0, 0, 0, 0, t1636, -t1634, 0, t1442, 0, 0, 0, 0, 0, 0, 0, -t1636, t1634, t1438, 0, 0, 0, 0, 0, 0, t1472, t1473, t1494, t1423, 0, 0, 0, 0, 0, 0, t1430, t1434, t1428, t1418; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1595, -qJDD(2), 0, t1514, 0, 0, 0, 0, 0, 0, -t1555, -t1554, 0, t1460, 0, 0, 0, 0, 0, 0, 0, t1555, t1554, t1458, 0, 0, 0, 0, 0, 0, t1506, t1507, t1529, t1446, 0, 0, 0, 0, 0, 0, t1454, t1456, t1450, t1422; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1595, 0, t1513, 0, 0, 0, 0, 0, 0, t1554, -t1555, 0, t1459, 0, 0, 0, 0, 0, 0, 0, -t1554, t1555, t1457, 0, 0, 0, 0, 0, 0, t1504, t1505, t1528, t1445, 0, 0, 0, 0, 0, 0, t1453, t1455, t1449, t1421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1538, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, 0, 0, 0, 0, 0, 0, t1535, t1536, 0, t1452, 0, 0, 0, 0, 0, 0, t1467, t1469, t1462, t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1595, -qJDD(2), 0, t1488, 0, 0, 0, 0, 0, 0, 0, t1595, qJDD(2), t1483, 0, 0, 0, 0, 0, 0, t1551, t1553, -t1559, t1482, 0, 0, 0, 0, 0, 0, t1490, t1492, t1476, t1432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1595, 0, t1487, 0, 0, 0, 0, 0, 0, 0, -qJDD(2), t1595, -t1484, 0, 0, 0, 0, 0, 0, -t1533, -t1534, t1556, -t1451, 0, 0, 0, 0, 0, 0, -t1466, -t1468, -t1461, -t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, 0, 0, 0, 0, 0, 0, t1535, t1536, 0, t1452, 0, 0, 0, 0, 0, 0, t1467, t1469, t1462, t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, 0, 0, 0, 0, 0, 0, t1535, t1536, 0, t1452, 0, 0, 0, 0, 0, 0, t1467, t1469, t1462, t1426; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1595, -qJDD(2), -t1483, 0, 0, 0, 0, 0, 0, -t1551, -t1553, t1559, -t1482, 0, 0, 0, 0, 0, 0, -t1490, -t1492, -t1476, -t1432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t1595, t1484, 0, 0, 0, 0, 0, 0, t1533, t1534, -t1556, t1451, 0, 0, 0, 0, 0, 0, t1466, t1468, t1461, t1425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1566, t1563, -t1617, t1471, 0, 0, 0, 0, 0, 0, t1491, t1493, t1477, t1433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1562, t1567, -t1616, t1470, 0, 0, 0, 0, 0, 0, -t1497, -t1499, -t1510, -t1463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1551, t1553, -t1559, t1482, 0, 0, 0, 0, 0, 0, t1490, t1492, t1476, t1432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1523, t1512, t1498, t1448; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1511, t1530, t1500, t1447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1497, t1499, t1510, t1463;];
f_new_reg  = t1;
