% Calculate minimal parameter regressor of coriolis matrix for
% S6PRPPRR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d5,d6,theta1,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x22]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:20
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRPPRR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRPPRR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRPPRR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRPPRR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:20:03
% EndTime: 2019-03-08 19:20:06
% DurationCPUTime: 1.24s
% Computational Cost: add. (838->164), mult. (2366->273), div. (0->0), fcn. (2480->10), ass. (0->138)
t101 = sin(qJ(6));
t184 = 0.2e1 * t101;
t104 = cos(qJ(6));
t105 = cos(qJ(5));
t163 = t104 * t105;
t129 = t163 * t184;
t95 = t101 ^ 2;
t97 = t104 ^ 2;
t76 = t97 - t95;
t108 = qJD(2) * t129 - t76 * qJD(5);
t102 = sin(qJ(5));
t96 = t102 ^ 2;
t183 = t96 / 0.2e1;
t182 = -t102 / 0.2e1;
t181 = -t105 / 0.2e1;
t180 = cos(qJ(2));
t179 = t102 * pkin(9);
t178 = t105 * pkin(5);
t152 = qJD(5) * t105;
t85 = t101 * t152;
t150 = qJD(6) * t104;
t88 = t102 * t150;
t177 = t88 + t85;
t98 = t105 ^ 2;
t75 = t96 - t98;
t70 = t178 + t179;
t176 = t101 * t70;
t175 = t104 * t70;
t174 = t104 * t96;
t168 = sin(pkin(6));
t169 = cos(pkin(11));
t122 = t169 * t168;
t103 = sin(qJ(2));
t130 = t103 * t168;
t99 = sin(pkin(11));
t50 = -t180 * t122 + t99 * t130;
t173 = t50 * t101;
t172 = t50 * t104;
t165 = t101 * t105;
t128 = -t169 * pkin(2) - pkin(3);
t89 = -pkin(8) + t128;
t144 = t89 * t165;
t126 = t102 * pkin(5) - t105 * pkin(9);
t90 = t99 * pkin(2) + qJ(4);
t106 = t126 + t90;
t166 = t101 * t102;
t37 = -t104 * t106 + t89 * t166;
t9 = -t37 * t105 + (t144 + t175) * t102;
t171 = t9 * qJD(2);
t170 = t98 * t101;
t92 = t98 * t104;
t143 = t89 * t163;
t164 = t102 * t104;
t145 = t89 * t164;
t38 = t101 * t106 + t145;
t10 = t38 * t105 + (-t143 + t176) * t102;
t167 = t10 * qJD(2);
t146 = 0.1e1 / 0.2e1 + t183;
t53 = (-t98 / 0.2e1 - t146) * t101;
t162 = t53 * qJD(2);
t54 = t92 / 0.2e1 + t146 * t104;
t161 = t54 * qJD(2);
t67 = t75 * t101;
t160 = t67 * qJD(2);
t68 = -t92 + t174;
t159 = t68 * qJD(2);
t158 = t75 * qJD(2);
t157 = t90 * qJD(2);
t156 = qJD(4) * t102;
t155 = qJD(5) * t101;
t154 = qJD(5) * t102;
t153 = qJD(5) * t104;
t151 = qJD(6) * t101;
t149 = t102 * qJD(2);
t148 = t105 * qJD(2);
t147 = t105 * qJD(6);
t142 = t90 * t149;
t141 = t90 * t148;
t127 = t168 * t180;
t51 = t103 * t122 + t99 * t127;
t140 = t51 * t182;
t139 = t101 * t147;
t138 = t104 * t147;
t137 = t101 * t150;
t136 = t101 * t153;
t135 = t104 * t152;
t134 = t102 * t152;
t133 = t102 * t148;
t132 = -t165 / 0.2e1;
t131 = t163 / 0.2e1;
t87 = t102 * t151;
t125 = t87 - t135;
t123 = qJD(5) * t129;
t100 = cos(pkin(6));
t40 = t100 * t105 + t50 * t102;
t121 = t51 * t101 + t40 * t104;
t120 = t40 * t101 - t51 * t104;
t21 = -t37 * t102 - t89 * t170;
t39 = t100 * t102 - t50 * t105;
t107 = t50 / 0.2e1 + t40 * t182 + t39 * t105 / 0.2e1;
t6 = t107 * t101;
t119 = t6 * qJD(1) + t21 * qJD(2);
t22 = -t38 * t102 - t89 * t92;
t5 = t107 * t104;
t118 = -t5 * qJD(1) - t22 * qJD(2);
t117 = (-qJD(6) - t149) * t105;
t116 = t179 / 0.2e1 + t178 / 0.2e1;
t111 = t70 / 0.2e1 + t116;
t42 = t111 * t104;
t115 = pkin(5) * t155 + t42 * qJD(2);
t41 = t111 * t101;
t114 = pkin(5) * t153 - t41 * qJD(2);
t61 = (t95 / 0.2e1 - t97 / 0.2e1) * t105;
t113 = -t61 * qJD(2) + t136;
t112 = t104 * t117;
t110 = t101 * qJD(2) * t92 + t61 * qJD(5);
t66 = t76 * t98;
t109 = t66 * qJD(2) + t123;
t91 = t152 / 0.2e1;
t86 = t104 * t149;
t84 = t101 * t154;
t83 = t101 * t149;
t64 = (t149 + qJD(6) / 0.2e1) * t105;
t60 = t84 - t138;
t59 = t102 * t153 + t139;
t58 = t61 * qJD(6);
t56 = -t174 / 0.2e1 - t92 / 0.2e1 + t104 / 0.2e1;
t55 = t170 / 0.2e1 + (t183 - 0.1e1 / 0.2e1) * t101;
t49 = t51 * qJD(2);
t24 = -t144 + t175 / 0.2e1 - t116 * t104;
t23 = -t143 - t176 / 0.2e1 + t116 * t101;
t16 = t39 * t104;
t14 = t39 * t101;
t8 = t121 * t182 + t39 * t131 + t101 * t140 - t172 / 0.2e1;
t7 = t120 * t102 / 0.2e1 + t39 * t132 + t104 * t140 + t173 / 0.2e1;
t4 = t121 * t181 + t40 * t131 + t51 * t132;
t3 = t120 * t181 + t40 * t165 / 0.2e1 + t51 * t131;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, -qJD(2) * t130, -qJD(2) * t127 (-t169 * t51 - t50 * t99) * qJD(2) * pkin(2), t49, -t50 * qJD(2) (t51 * t128 - t50 * t90) * qJD(2) + t51 * qJD(4), 0, 0, 0, 0, 0, -t50 * t149 + t51 * t152, -t50 * t148 - t51 * t154, 0, 0, 0, 0, 0 ((-t51 * t166 - t172) * t102 - t51 * t170) * qJD(2) + t3 * qJD(5) + t8 * qJD(6) (-(t51 * t164 - t173) * t102 - t51 * t92) * qJD(2) + t4 * qJD(5) + t7 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, t49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40 * qJD(5) + t51 * t148, t39 * qJD(5) - t51 * t149, 0, 0, 0, 0, 0, t3 * qJD(2) + t14 * qJD(6) - t40 * t153, t4 * qJD(2) + t16 * qJD(6) + t40 * t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t8 * qJD(2) + t14 * qJD(5) - qJD(6) * t121, t7 * qJD(2) + t16 * qJD(5) + qJD(6) * t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5 * qJD(6), -t6 * qJD(6); 0, 0, 0, 0, 0, 0, qJD(4), t90 * qJD(4), -t134, t75 * qJD(5), 0, 0, 0, t90 * t152 + t156, qJD(4) * t105 - t90 * t154, -t97 * t134 - t98 * t137, -t66 * qJD(6) + t102 * t123, -t68 * qJD(5) - t102 * t139, t67 * qJD(5) - t102 * t138, t134, t9 * qJD(5) + t22 * qJD(6) + t104 * t156, -t10 * qJD(5) - t21 * qJD(6) - t101 * t156; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, qJD(2), t157, 0, 0, 0, 0, 0, t149, t148, 0, 0, 0, 0, 0, t56 * qJD(6) + t86, t55 * qJD(6) - t83; 0, 0, 0, 0, 0, 0, 0, 0, -t133, t158, -t154, -t152, 0, -t89 * t154 + t141, -t89 * t152 - t142, -t58 + (-t97 * t148 - t136) * t102, t108 * t102 - 0.2e1 * t105 * t137, t85 - t159, t135 + t160, t64, t171 + (t126 * t101 - t145) * qJD(5) + t24 * qJD(6), -t167 + (-pkin(9) * t163 + (pkin(5) * t104 + t101 * t89) * t102) * qJD(5) + t23 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t110, -t109, t101 * t117, t112, t91, t56 * qJD(4) + t24 * qJD(5) - t38 * qJD(6) - t118, t55 * qJD(4) + t23 * qJD(5) + t37 * qJD(6) - t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t152, t154, 0, 0, 0, 0, 0, t125, t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, -qJD(2), -t157, 0, 0, 0, 0, 0, -t149, -t148, 0, 0, 0, 0, 0, -t54 * qJD(6) - t86, -t53 * qJD(6) + t83; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t154, -t152, 0, 0, 0, 0, 0, -t59, t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t161 - t177, t125 - t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, t133, -t158, 0, 0, 0, -t141, t142, t97 * t133 - t58, t112 * t184, t88 + t159, -t87 - t160, -t64, -t42 * qJD(6) - t171, t41 * qJD(6) + t167; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t137, t76 * qJD(6), 0, 0, 0, -pkin(5) * t151, -pkin(5) * t150; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113, -t108, t86 + t150, -t83 - t151, -t148 / 0.2e1, -pkin(9) * t150 - t115, pkin(9) * t151 - t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t5 * qJD(2), t6 * qJD(2); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t110, t109 (t101 * t148 - t153) * t102, t104 * t133 + t84, t91, t54 * qJD(4) + t42 * qJD(5) + t118, t53 * qJD(4) - t41 * qJD(5) + t119; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t161, t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, t108, -t86, t83, t148 / 0.2e1, t115, t114; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t1;
