% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6PPRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d3,d4,d5,d6,theta1,theta2]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PPRRRR3_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRR3_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRR3_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPRRRR3_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPRRRR3_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PPRRRR3_invdynJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:11:48
% EndTime: 2019-03-08 19:12:12
% DurationCPUTime: 14.47s
% Computational Cost: add. (17356->745), mult. (46419->1080), div. (0->0), fcn. (44110->18), ass. (0->332)
t431 = cos(pkin(6));
t241 = qJD(1) * t431 + qJD(2);
t253 = sin(pkin(7));
t265 = cos(qJ(3));
t412 = t253 * t265;
t215 = t241 * t412;
t257 = cos(pkin(7));
t255 = cos(pkin(14));
t254 = sin(pkin(6));
t397 = qJD(1) * t254;
t372 = t255 * t397;
t343 = t257 * t372;
t261 = sin(qJ(3));
t251 = sin(pkin(14));
t373 = t251 * t397;
t344 = t261 * t373;
t152 = t265 * t343 + t215 - t344;
t413 = t253 * t261;
t411 = t255 * t257;
t453 = (t251 * t265 + t261 * t411) * t254;
t153 = qJD(1) * t453 + t241 * t413;
t252 = sin(pkin(8));
t260 = sin(qJ(4));
t416 = t252 * t260;
t242 = pkin(10) * t416;
t256 = cos(pkin(8));
t264 = cos(qJ(4));
t409 = t256 * t264;
t205 = pkin(3) * t409 - t242;
t200 = qJD(4) * t205;
t410 = t256 * t260;
t400 = -t152 * t264 + t153 * t410 + t200;
t263 = cos(qJ(5));
t469 = pkin(11) * t263;
t414 = t252 * t264;
t206 = pkin(3) * t410 + pkin(10) * t414;
t196 = pkin(11) * t256 + t206;
t334 = -pkin(4) * t264 - pkin(11) * t260;
t197 = (-pkin(3) + t334) * t252;
t317 = (pkin(4) * t260 - pkin(11) * t264) * t252;
t199 = qJD(4) * t317;
t259 = sin(qJ(5));
t390 = qJD(5) * t263;
t391 = qJD(5) * t259;
t417 = t252 * t259;
t439 = -t153 * t417 - t196 * t391 + t197 * t390 + t259 * t199 + t263 * t400;
t201 = qJD(4) * t206;
t399 = -t152 * t260 - t153 * t409 + t201;
t357 = t253 * t431;
t279 = t265 * t357 + (-t251 * t261 + t265 * t411) * t254;
t294 = -t254 * t255 * t253 + t257 * t431;
t288 = t294 * t252;
t468 = t279 * t256 + t288;
t382 = qJDD(3) * t256;
t238 = qJDD(4) + t382;
t395 = qJD(3) * t256;
t349 = qJD(4) + t395;
t318 = qJD(5) * t349;
t381 = qJDD(3) * t260;
t361 = t252 * t381;
t392 = qJD(4) * t264;
t367 = t252 * t392;
t376 = t259 * t416;
t462 = qJD(5) * t376 - t263 * t367;
t126 = -t259 * t238 + (-t318 - t361) * t263 + t462 * qJD(3);
t366 = t259 * t392;
t127 = -t263 * t238 + t252 * (qJD(3) * (t260 * t390 + t366) + t259 * t381) + t259 * t318;
t239 = t431 * qJDD(1) + qJDD(2);
t383 = qJDD(1) * t254;
t362 = t255 * t383;
t337 = t257 * t362;
t360 = t251 * t383;
t301 = t239 * t412 - t261 * t360 + t265 * t337;
t385 = t153 * qJD(3);
t107 = t301 - t385;
t105 = qJDD(3) * pkin(3) + t107;
t396 = qJD(3) * t252;
t146 = pkin(10) * t396 + t153;
t179 = t239 * t257 - t253 * t362;
t183 = t241 * t257 - t253 * t372;
t393 = qJD(4) * t260;
t368 = t252 * t393;
t319 = qJD(3) * t343;
t324 = -qJD(3) * t215 - t239 * t413 - t261 * t337 + (-t319 - t360) * t265;
t339 = qJD(3) * t373;
t106 = -t261 * t339 - t324;
t148 = qJD(3) * pkin(3) + t152;
t426 = t148 * t256;
t444 = pkin(10) * t252;
t465 = -qJD(4) * t426 - qJDD(3) * t444 - t106;
t19 = t105 * t409 - t146 * t392 + t179 * t414 - t183 * t368 + t260 * t465;
t17 = -pkin(4) * t238 - t19;
t10 = pkin(5) * t127 + pkin(12) * t126 + t17;
t258 = sin(qJ(6));
t262 = cos(qJ(6));
t394 = qJD(3) * t264;
t236 = t252 * t394;
t327 = t236 - qJD(5);
t174 = t256 * t183;
t101 = t174 + (qJD(3) * t334 - t148) * t252;
t322 = t183 * t252 + t426;
t402 = t264 * t146;
t71 = t260 * t322 + t402;
t66 = pkin(11) * t349 + t71;
t39 = t259 * t101 + t263 * t66;
t35 = -pkin(12) * t327 + t39;
t371 = t260 * t396;
t186 = t259 * t371 - t263 * t349;
t188 = t259 * t349 + t263 * t371;
t70 = -t260 * t146 + t264 * t322;
t65 = -pkin(4) * t349 - t70;
t46 = t186 * pkin(5) - t188 * pkin(12) + t65;
t325 = t258 * t35 - t262 * t46;
t384 = qJD(3) * qJD(4);
t364 = t260 * t384;
t380 = qJDD(3) * t264;
t235 = t252 * t380;
t379 = qJDD(5) - t235;
t300 = t252 * t364 + t379;
t289 = -t105 * t410 + t146 * t393 - t179 * t416 - t183 * t367 + t264 * t465;
t16 = pkin(11) * t238 - t289;
t173 = t256 * t179;
t303 = t364 - t380;
t363 = t264 * t384;
t304 = t363 + t381;
t59 = t173 + (pkin(4) * t303 - pkin(11) * t304 - t105) * t252;
t314 = -t101 * t390 - t263 * t16 - t259 * t59 + t391 * t66;
t5 = pkin(12) * t300 - t314;
t1 = -t325 * qJD(6) + t258 * t10 + t262 * t5;
t180 = qJD(6) + t186;
t467 = t325 * t180 + t1;
t466 = -pkin(12) * t368 - t439;
t169 = -t256 * t390 + t462;
t415 = t252 * t263;
t204 = t256 * t259 + t260 * t415;
t170 = qJD(5) * t204 + t252 * t366;
t464 = pkin(5) * t170 + pkin(12) * t169 + t399;
t430 = cos(pkin(13));
t329 = t431 * t430;
t429 = sin(pkin(13));
t282 = t251 * t329 + t255 * t429;
t283 = -t251 * t429 + t255 * t329;
t356 = t254 * t430;
t451 = -t253 * t356 + t283 * t257;
t128 = t261 * t451 + t265 * t282;
t269 = t282 * t261 - t265 * t451;
t267 = t269 * t264;
t273 = -t253 * t283 - t257 * t356;
t271 = t273 * t252;
t49 = t128 * t260 + t256 * t267 - t264 * t271;
t328 = t431 * t429;
t285 = -t251 * t430 - t255 * t328;
t355 = t254 * t429;
t274 = t253 * t355 + t257 * t285;
t284 = -t251 * t328 + t255 * t430;
t129 = t261 * t274 + t265 * t284;
t270 = t261 * t284 - t265 * t274;
t268 = t270 * t264;
t275 = -t253 * t285 + t257 * t355;
t272 = t275 * t252;
t51 = t129 * t260 + t256 * t268 - t264 * t272;
t162 = t261 * t357 + t453;
t277 = t279 * t264;
t88 = t162 * t260 - t256 * t277 - t264 * t288;
t307 = g(1) * t51 + g(2) * t49 + g(3) * t88;
t350 = qJD(5) * t327;
t463 = pkin(11) * t350 - t17 + t307;
t38 = t263 * t101 - t259 * t66;
t461 = t327 * t38 - t314;
t198 = qJD(3) * t317;
t61 = t259 * t198 + t263 * t70;
t460 = pkin(11) * t391 + pkin(12) * t371 + t61;
t333 = pkin(5) * t259 - pkin(12) * t263;
t459 = -qJD(6) * t469 + t333 * qJD(5) - t148 * t410 - t402 - (t183 * t260 + t333 * t394) * t252;
t12 = t258 * t46 + t262 * t35;
t2 = -qJD(6) * t12 + t262 * t10 - t258 * t5;
t457 = -t12 * t180 - t2;
t452 = t263 * t196 + t259 * t197;
t438 = -qJD(5) * t452 - t153 * t415 + t199 * t263 - t400 * t259;
t455 = t186 * t327;
t454 = t188 * t327;
t151 = t262 * t188 - t258 * t327;
t389 = qJD(6) * t151;
t75 = -t258 * t126 - t262 * t300 + t389;
t401 = t264 * t265;
t407 = t260 * t261;
t450 = t256 * t401 - t407;
t449 = -pkin(5) * t263 - pkin(12) * t259;
t158 = t279 * qJD(3);
t448 = t468 * qJD(4) + t158;
t447 = -pkin(11) * t300 - t327 * t65;
t358 = t259 * t16 - t263 * t59;
t8 = -qJD(5) * t39 - t358;
t266 = qJD(3) ^ 2;
t195 = t242 + (-pkin(3) * t264 - pkin(4)) * t256;
t203 = -t263 * t256 + t376;
t133 = pkin(5) * t203 - pkin(12) * t204 + t195;
t135 = -pkin(12) * t414 + t452;
t80 = t133 * t262 - t135 * t258;
t442 = qJD(6) * t80 + t464 * t258 - t262 * t466;
t81 = t133 * t258 + t135 * t262;
t441 = -qJD(6) * t81 + t258 * t466 + t464 * t262;
t440 = -pkin(5) * t368 - t438;
t353 = t262 * t327;
t388 = qJD(6) * t258;
t74 = qJD(6) * t353 + t262 * t126 + t188 * t388 - t258 * t300;
t435 = t258 * t74;
t434 = t262 * t75;
t233 = -pkin(4) + t449;
t387 = qJD(6) * t262;
t433 = t233 * t387 + t258 * t459 - t262 * t460;
t432 = -t233 * t388 + t258 * t460 + t262 * t459;
t121 = qJDD(6) + t127;
t428 = t121 * t258;
t427 = t121 * t262;
t149 = t188 * t258 + t353;
t425 = t149 * t180;
t424 = t149 * t258;
t423 = t151 * t149;
t422 = t151 * t180;
t159 = t162 * qJD(3);
t247 = t252 ^ 2;
t421 = t159 * t247;
t420 = t188 * t186;
t202 = -t252 * t412 + t256 * t257;
t419 = t202 * t252;
t418 = t247 * t266;
t408 = t258 * t263;
t406 = t260 * t265;
t405 = t261 * t264;
t404 = t261 * t266;
t403 = t262 * t264;
t249 = t260 ^ 2;
t250 = t264 ^ 2;
t398 = t249 - t250;
t377 = t258 * t414;
t370 = qJD(3) * t413;
t365 = t252 * t256 * t266;
t352 = t264 * t327;
t351 = t180 * t262;
t348 = qJD(4) + 0.2e1 * t395;
t347 = t238 + t382;
t346 = t247 * t253 * t404;
t345 = t264 * t260 * t418;
t342 = t252 * t370;
t338 = t260 * t363;
t176 = t236 * t408 - t262 * t371;
t332 = -t258 * t390 + t176;
t177 = (t258 * t260 + t263 * t403) * t396;
t331 = t262 * t390 - t177;
t326 = -t12 * t258 + t262 * t325;
t130 = -t252 * t279 + t256 * t294;
t89 = t162 * t264 + t468 * t260;
t54 = t130 * t259 + t263 * t89;
t29 = t258 * t88 + t262 * t54;
t28 = -t258 * t54 + t262 * t88;
t323 = t130 * t263 - t259 * t89;
t60 = t198 * t263 - t259 * t70;
t315 = t256 * t406 + t405;
t164 = t253 * t315 + t257 * t416;
t132 = t164 * t263 + t202 * t259;
t163 = -t253 * t450 - t257 * t414;
t94 = t132 * t262 + t163 * t258;
t93 = -t132 * t258 + t163 * t262;
t131 = t164 * t259 - t263 * t202;
t143 = -t196 * t259 + t197 * t263;
t171 = t204 * t258 + t252 * t403;
t312 = t259 * t327;
t34 = pkin(5) * t327 - t38;
t311 = -pkin(12) * t121 + t180 * t34;
t50 = t128 * t264 + (-t256 * t269 + t271) * t260;
t52 = t129 * t264 + (-t256 * t270 + t272) * t260;
t90 = t252 * t269 + t256 * t273;
t91 = t252 * t270 + t256 * t275;
t310 = -g(1) * (-t259 * t52 + t263 * t91) - g(2) * (-t259 * t50 + t263 * t90) - g(3) * t323;
t31 = t259 * t90 + t263 * t50;
t33 = t259 * t91 + t263 * t52;
t309 = -g(1) * t33 - g(2) * t31 - g(3) * t54;
t77 = -t128 * t410 - t267;
t40 = -t128 * t415 + t259 * t77;
t79 = -t129 * t410 - t268;
t42 = -t129 * t415 + t259 * t79;
t113 = -t162 * t410 + t277;
t83 = t113 * t259 - t162 * t415;
t308 = -g(1) * t42 - g(2) * t40 - g(3) * t83;
t306 = g(1) * t52 + g(2) * t50 + g(3) * t89;
t112 = t162 * t409 + t260 * t279;
t76 = t128 * t409 - t260 * t269;
t78 = t129 * t409 - t260 * t270;
t305 = g(1) * t78 + g(2) * t76 + g(3) * t112;
t302 = g(1) * t129 + g(2) * t128 + g(3) * t162;
t6 = -pkin(5) * t300 - t8;
t299 = t310 - t6;
t124 = t269 * pkin(3);
t298 = t77 * pkin(4) + pkin(11) * t76 + t128 * t444 - t124;
t125 = t270 * pkin(3);
t297 = t79 * pkin(4) + pkin(11) * t78 + t129 * t444 - t125;
t160 = t279 * pkin(3);
t293 = t113 * pkin(4) + pkin(11) * t112 + t162 * t444 + t160;
t287 = -g(1) * t355 + g(2) * t356 - g(3) * t431;
t281 = pkin(12) * qJD(6) * t180 - t299;
t193 = t233 * t258 + t262 * t469;
t192 = -pkin(11) * t408 + t233 * t262;
t172 = t204 * t262 - t377;
t142 = pkin(5) * t188 + pkin(12) * t186;
t134 = pkin(5) * t414 - t143;
t123 = t257 * t368 + (t315 * qJD(4) + (t256 * t405 + t406) * qJD(3)) * t253;
t122 = t257 * t367 + (t450 * qJD(4) + (-t256 * t407 + t401) * qJD(3)) * t253;
t114 = -t148 * t252 + t174;
t111 = -qJD(6) * t377 - t169 * t258 + t204 * t387 - t262 * t368;
t110 = qJD(6) * t171 + t262 * t169 - t258 * t368;
t87 = t88 * pkin(4);
t84 = t113 * t263 + t162 * t417;
t82 = -t105 * t252 + t173;
t68 = qJD(5) * t132 + t122 * t259 - t263 * t342;
t67 = -qJD(5) * t131 + t122 * t263 + t259 * t342;
t55 = -pkin(5) * t371 - t60;
t48 = t51 * pkin(4);
t47 = t49 * pkin(4);
t45 = -t159 * t410 - t162 * t393 + t264 * t448;
t44 = t159 * t409 + t162 * t392 + t260 * t448;
t43 = t129 * t417 + t263 * t79;
t41 = t128 * t417 + t263 * t77;
t27 = t142 * t258 + t262 * t38;
t26 = t142 * t262 - t258 * t38;
t25 = -qJD(6) * t94 + t123 * t262 - t258 * t67;
t24 = qJD(6) * t93 + t123 * t258 + t262 * t67;
t14 = qJD(5) * t323 + t159 * t417 + t263 * t45;
t13 = qJD(5) * t54 - t159 * t415 + t259 * t45;
t4 = qJD(6) * t28 + t14 * t262 + t258 * t44;
t3 = -qJD(6) * t29 - t14 * t258 + t262 * t44;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1) - g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t239 * t431 - g(3) + (t251 ^ 2 + t255 ^ 2) * t254 ^ 2 * qJDD(1), 0, 0, 0, 0, 0, 0, -t159 * qJD(3) + qJDD(3) * t279, -qJD(3) * t158 - qJDD(3) * t162, 0, t106 * t162 + t107 * t279 - t152 * t159 + t153 * t158 + t179 * t294 - g(3), 0, 0, 0, 0, 0, 0, -t130 * t235 - t44 * qJD(4) - t88 * t238 + (t130 * t368 - t256 * t44 - t264 * t421) * qJD(3), t130 * t361 - t45 * qJD(4) - t89 * t238 + (t130 * t367 - t256 * t45 + t260 * t421) * qJD(3) ((t260 * t88 + t264 * t89) * qJDD(3) + (t260 * t44 + t264 * t45 + (-t260 * t89 + t264 * t88) * qJD(4)) * qJD(3)) * t252, t114 * t159 * t252 + t130 * t82 - t19 * t88 - t289 * t89 - t44 * t70 + t45 * t71 - g(3), 0, 0, 0, 0, 0, 0, t88 * t127 + t13 * t327 + t44 * t186 + t300 * t323, -t88 * t126 + t14 * t327 + t44 * t188 - t300 * t54, t126 * t323 - t127 * t54 + t13 * t188 - t14 * t186, -t13 * t38 + t14 * t39 + t17 * t88 - t314 * t54 + t323 * t8 + t44 * t65 - g(3), 0, 0, 0, 0, 0, 0, t121 * t28 + t13 * t149 + t180 * t3 - t323 * t75, -t121 * t29 + t13 * t151 - t180 * t4 + t323 * t74, -t149 * t4 - t151 * t3 + t28 * t74 - t29 * t75, t1 * t29 + t12 * t4 + t13 * t34 + t2 * t28 - t3 * t325 - t323 * t6 - g(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t287 + t239, 0, 0, 0, 0, 0, 0 (qJDD(3) * t265 - t404) * t253 (-qJDD(3) * t261 - t265 * t266) * t253, 0, t179 * t257 + (t106 * t261 + t107 * t265 + (-t152 * t261 + t153 * t265) * qJD(3)) * t253 + t287, 0, 0, 0, 0, 0, 0, -t123 * t349 - t163 * t238 - t264 * t346 + t303 * t419, -t122 * t349 - t164 * t238 + t260 * t346 + t304 * t419 ((t163 * t260 + t164 * t264) * qJDD(3) + (t122 * t264 + t123 * t260 + (t163 * t264 - t164 * t260) * qJD(4)) * qJD(3)) * t252, t114 * t342 + t71 * t122 - t70 * t123 - t19 * t163 - t164 * t289 + t82 * t202 + t287, 0, 0, 0, 0, 0, 0, t123 * t186 + t163 * t127 - t131 * t300 + t327 * t68, t123 * t188 - t163 * t126 - t132 * t300 + t327 * t67, -t126 * t131 - t127 * t132 - t186 * t67 + t188 * t68, t65 * t123 - t8 * t131 - t132 * t314 + t17 * t163 - t38 * t68 + t39 * t67 + t287, 0, 0, 0, 0, 0, 0, t121 * t93 + t131 * t75 + t149 * t68 + t180 * t25, -t121 * t94 - t131 * t74 + t151 * t68 - t180 * t24, -t149 * t24 - t151 * t25 + t74 * t93 - t75 * t94, t1 * t94 + t12 * t24 + t6 * t131 + t2 * t93 - t25 * t325 + t34 * t68 + t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), g(1) * t270 + g(2) * t269 - g(3) * t279 - t241 * t370 - t261 * t319 - t265 * t339 + t301 + t385 (t152 + t344) * qJD(3) + t302 + t324, 0, 0 (qJDD(3) * t249 + 0.2e1 * t338) * t247, 0.2e1 * (t260 * t380 - t384 * t398) * t247 (t260 * t347 + t348 * t392) * t252 (qJDD(3) * t250 - 0.2e1 * t338) * t247 (t264 * t347 - t348 * t393) * t252, t238 * t256, t205 * t238 + t19 * t256 - g(1) * t79 - g(2) * t77 - g(3) * t113 + (t114 * t393 - t264 * t82) * t252 + (-pkin(3) * t303 + t264 * t385) * t247 - t399 * t349, -t206 * t238 + t289 * t256 + (t114 * t392 + t260 * t82) * t252 + (-pkin(3) * t304 - t260 * t385) * t247 + t305 - t400 * t349 ((-qJD(4) * t70 + qJDD(3) * t206 - t289) * t264 + (-t71 * qJD(4) - qJDD(3) * t205 - t19) * t260 + ((t400 - t200) * t264 + (t399 - t201) * t260) * qJD(3) - t302) * t252, g(1) * t125 + g(2) * t124 - g(3) * t160 - t289 * t206 + t19 * t205 + t400 * t71 - t399 * t70 + (-t82 * pkin(3) - pkin(10) * t302 - t114 * t153) * t252, -t126 * t204 - t169 * t188, t126 * t203 - t127 * t204 + t169 * t186 - t170 * t188, t169 * t327 + t204 * t379 + (t126 * t264 + (qJD(3) * t204 + t188) * t393) * t252, t127 * t203 + t170 * t186, t170 * t327 - t203 * t379 + (t127 * t264 + (-qJD(3) * t203 - t186) * t393) * t252 (-t379 * t264 + (-t236 - t327) * t393) * t252, t143 * t379 + t195 * t127 + t17 * t203 + t65 * t170 - g(1) * t43 - g(2) * t41 - g(3) * t84 + (-t8 * t264 + (qJD(3) * t143 + t38) * t393) * t252 + t399 * t186 - t438 * t327, -t452 * t379 - t195 * t126 + t17 * t204 - t65 * t169 + (-t314 * t264 + (-qJD(3) * t452 - t39) * t393) * t252 + t399 * t188 - t308 + t439 * t327, t126 * t143 - t127 * t452 + t169 * t38 - t170 * t39 - t186 * t439 - t188 * t438 + t203 * t314 - t204 * t8 - t305, -g(1) * t297 - g(2) * t298 - g(3) * t293 + t8 * t143 + t17 * t195 - t314 * t452 + t38 * t438 + t39 * t439 + t399 * t65, -t110 * t151 - t172 * t74, t110 * t149 - t111 * t151 + t171 * t74 - t172 * t75, -t110 * t180 + t121 * t172 + t151 * t170 - t203 * t74, t111 * t149 + t171 * t75, -t111 * t180 - t121 * t171 - t149 * t170 - t203 * t75, t121 * t203 + t170 * t180, t80 * t121 + t2 * t203 - t325 * t170 + t134 * t75 + t6 * t171 + t34 * t111 - g(1) * (t258 * t78 + t262 * t43) - g(2) * (t258 * t76 + t262 * t41) - g(3) * (t112 * t258 + t262 * t84) + t441 * t180 + t440 * t149, -t81 * t121 - t1 * t203 - t12 * t170 - t134 * t74 + t6 * t172 - t34 * t110 - g(1) * (-t258 * t43 + t262 * t78) - g(2) * (-t258 * t41 + t262 * t76) - g(3) * (t112 * t262 - t258 * t84) - t442 * t180 + t440 * t151, -t1 * t171 - t110 * t325 - t111 * t12 - t149 * t442 - t151 * t441 - t172 * t2 + t74 * t80 - t75 * t81 + t308, t1 * t81 + t2 * t80 + t6 * t134 - g(1) * (pkin(5) * t43 + pkin(12) * t42 + t297) - g(2) * (pkin(5) * t41 + pkin(12) * t40 + t298) - g(3) * (pkin(5) * t84 + pkin(12) * t83 + t293) + t440 * t34 + t442 * t12 - t441 * t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, t398 * t418, -t264 * t365 + t361, t345, t260 * t365 + t235, t238, -t114 * t371 + t349 * t71 + t19 + t307, -t114 * t236 + t349 * t70 + t289 + t306, 0, 0, -t126 * t259 - t263 * t454 (-t126 + t455) * t263 + (-t127 + t454) * t259, -t263 * t350 + t259 * t379 + (t263 * t352 + (qJD(4) * t259 - t188) * t260) * t396, -t127 * t263 - t186 * t312, t259 * t350 + t263 * t379 + (-t259 * t352 + (qJD(4) * t263 + t186) * t260) * t396, t327 * t371, -pkin(4) * t127 - t71 * t186 + t447 * t259 + t263 * t463 + t60 * t327 - t38 * t371, pkin(4) * t126 - t71 * t188 - t259 * t463 + t447 * t263 - t61 * t327 + t39 * t371, t186 * t61 + t188 * t60 + ((qJD(5) * t188 - t127) * pkin(11) + t461) * t263 + (-t8 + t327 * t39 + (qJD(5) * t186 - t126) * pkin(11)) * t259 - t306, -t17 * pkin(4) + g(1) * t48 + g(2) * t47 + g(3) * t87 - t38 * t60 - t39 * t61 - t65 * t71 + (-t8 * t259 - t314 * t263 + (-t259 * t39 - t263 * t38) * qJD(5) - t306) * pkin(11), -t259 * t262 * t74 + (-t259 * t388 + t331) * t151, t149 * t177 + t151 * t176 + (-t149 * t262 - t151 * t258) * t390 + (t435 - t434 + (-t151 * t262 + t424) * qJD(6)) * t259, t263 * t74 + t331 * t180 + (-t151 * t327 - t180 * t388 + t427) * t259, t258 * t259 * t75 + (t259 * t387 - t332) * t149, t263 * t75 + t332 * t180 + (t149 * t327 - t180 * t387 - t428) * t259, -t121 * t263 - t180 * t312, t192 * t121 - t55 * t149 - t34 * t176 + t432 * t180 - t306 * t258 + (-t2 + (pkin(11) * t149 + t258 * t34) * qJD(5) + t307 * t262) * t263 + (pkin(11) * t75 + t6 * t258 + t325 * t327 + t34 * t387) * t259, -t193 * t121 - t55 * t151 - t34 * t177 - t433 * t180 - t306 * t262 + (t1 + (pkin(11) * t151 + t262 * t34) * qJD(5) - t307 * t258) * t263 + (-pkin(11) * t74 + t12 * t327 + t6 * t262 - t34 * t388) * t259, -t325 * t177 + t12 * t176 + t192 * t74 - t193 * t75 - t432 * t151 - t433 * t149 + t326 * t390 + (-t1 * t258 - t2 * t262 + (-t12 * t262 - t258 * t325) * qJD(6) + t307) * t259, t1 * t193 + t2 * t192 - t34 * t55 - g(1) * (t449 * t51 - t48) - g(2) * (t449 * t49 - t47) - g(3) * (t449 * t88 - t87) + t433 * t12 - t432 * t325 + (t259 * t6 + t34 * t390 - t306) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t420, -t186 ^ 2 + t188 ^ 2, -t126 - t455, -t420, -t127 - t454, t300, -t65 * t188 - t39 * t236 + t310 - t358, t65 * t186 - t309 - t461, 0, 0, t151 * t351 - t435 (-t74 - t425) * t262 + (-t75 - t422) * t258, -t151 * t188 + t180 * t351 + t428, t180 * t424 - t434, -t180 ^ 2 * t258 + t149 * t188 + t427, -t180 * t188, -pkin(5) * t75 - t149 * t39 - t180 * t26 + t188 * t325 + t258 * t311 - t262 * t281, pkin(5) * t74 + t12 * t188 - t151 * t39 + t180 * t27 + t258 * t281 + t262 * t311, t149 * t27 + t151 * t26 + ((-t75 + t389) * pkin(12) + t467) * t262 + ((qJD(6) * t149 - t74) * pkin(12) + t457) * t258 + t309, t325 * t26 - t12 * t27 - t34 * t39 + t299 * pkin(5) + (qJD(6) * t326 + t1 * t262 - t2 * t258 + t309) * pkin(12); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423, -t149 ^ 2 + t151 ^ 2, -t74 + t425, -t423, t422 - t75, t121, -t34 * t151 - g(1) * (-t258 * t33 + t262 * t51) - g(2) * (-t258 * t31 + t262 * t49) - g(3) * t28 - t457, t34 * t149 - g(1) * (-t258 * t51 - t262 * t33) - g(2) * (-t258 * t49 - t262 * t31) + g(3) * t29 - t467, 0, 0;];
tau_reg  = t7;
