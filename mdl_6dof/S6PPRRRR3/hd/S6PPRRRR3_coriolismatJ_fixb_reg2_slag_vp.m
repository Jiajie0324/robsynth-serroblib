% Calculate inertial parameters regressor of coriolis matrix for
% S6PPRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [14x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,alpha4,d3,d4,d5,d6,theta1,theta2]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 19:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PPRRRR3_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(14,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRRRR3_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRRRR3_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [14 1]), ...
  'S6PPRRRR3_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [14x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 19:11:56
% EndTime: 2019-03-08 19:12:43
% DurationCPUTime: 43.22s
% Computational Cost: add. (38079->1244), mult. (111407->1869), div. (0->0), fcn. (135758->16), ass. (0->807)
t1006 = cos(qJ(6));
t1003 = sin(qJ(6));
t1002 = sin(pkin(8));
t1008 = cos(qJ(4));
t1317 = t1002 * t1008;
t1255 = t1003 * t1317;
t1004 = sin(qJ(5));
t1451 = cos(pkin(8));
t1238 = t1004 * t1451;
t1005 = sin(qJ(4));
t1007 = cos(qJ(5));
t1318 = t1002 * t1007;
t1251 = t1005 * t1318;
t938 = t1238 + t1251;
t1405 = t1006 * t938;
t851 = -t1255 + t1405;
t1342 = t851 * t1006;
t1308 = t1006 * t1008;
t1252 = t1002 * t1308;
t1421 = t1003 * t938;
t849 = t1252 + t1421;
t1423 = t1003 * t849;
t643 = -t1342 / 0.2e1 + t1423 / 0.2e1;
t1540 = t643 * qJD(6);
t1465 = -t1004 / 0.2e1;
t1319 = t1002 * t1005;
t1259 = t1004 * t1319;
t936 = -t1007 * t1451 + t1259;
t1267 = t936 * t1465;
t1460 = t1007 / 0.2e1;
t1109 = t1460 * t938 + t1267;
t1539 = t1109 * qJD(5);
t1343 = t851 * t1003;
t1345 = t849 * t1006;
t1111 = -t1345 / 0.2e1 - t1343 / 0.2e1;
t1062 = t1111 * t1004;
t1314 = t1003 * t1006;
t997 = t1003 ^ 2;
t999 = t1006 ^ 2;
t942 = (t997 / 0.2e1 - t999 / 0.2e1) * t1004;
t998 = t1004 ^ 2;
t1538 = t998 * qJD(4) * t1314 - qJD(3) * t1062 + t942 * qJD(5);
t1307 = t1007 * qJD(4);
t988 = t1004 * t1307;
t1229 = qJD(3) * t1109 + t988;
t1435 = qJD(3) * t851;
t1537 = -qJD(4) * t1062 + qJD(5) * t643 + t849 * t1435;
t1335 = t936 * qJD(3);
t1536 = -qJD(4) * t1109 + t938 * t1335;
t987 = qJD(5) * t1314;
t1535 = qJD(3) * t643 + t942 * qJD(4) - t987;
t983 = t999 - t997;
t1534 = qJD(5) * t983;
t1533 = t1062 * qJD(6);
t1450 = sin(pkin(6));
t1197 = t1450 * sin(pkin(14));
t1475 = sin(qJ(3));
t1476 = cos(qJ(3));
t1198 = cos(pkin(14)) * t1450;
t1449 = sin(pkin(7));
t1452 = cos(pkin(7));
t1453 = cos(pkin(6));
t1529 = t1452 * t1198 + t1453 * t1449;
t1019 = t1475 * t1197 - t1476 * t1529;
t1032 = -t1198 * t1449 + t1452 * t1453;
t1531 = -t1032 * t1002 + t1019 * t1451;
t1215 = t1449 * t1476;
t1036 = -t1002 * t1215 + t1451 * t1452;
t1031 = t1036 * t1002;
t1030 = t1031 / 0.2e1;
t1155 = -t1215 / 0.2e1;
t1530 = t1030 + t1155;
t1199 = t1451 * t1449;
t1528 = t1452 * t1002 + t1476 * t1199;
t1311 = t1004 * t1006;
t1242 = -t1311 / 0.2e1;
t1341 = t851 * t1007;
t1527 = t936 * t1242 + t1341 / 0.2e1;
t1316 = t1003 * t1004;
t1245 = -t1316 / 0.2e1;
t1344 = t849 * t1007;
t1089 = t936 * t1245 + t1344 / 0.2e1;
t1520 = t936 ^ 2;
t843 = t1476 * t1197 + t1475 * t1529;
t538 = t1005 * t843 + t1008 * t1531;
t1378 = t538 * t1003;
t1013 = t1002 * t1019 + t1032 * t1451;
t1346 = t843 * t1008;
t539 = -t1005 * t1531 + t1346;
t370 = t1004 * t1013 + t539 * t1007;
t1387 = t370 * t1006;
t221 = t1378 + t1387;
t1519 = -t221 / 0.2e1;
t1518 = t370 / 0.2e1;
t1203 = t936 * pkin(5) - t938 * pkin(12);
t1236 = t1008 * t1451;
t939 = -pkin(3) * t1236 + pkin(10) * t1319;
t921 = -pkin(4) * t1451 + t939;
t1033 = t1203 + t921;
t1189 = -pkin(4) * t1008 - pkin(11) * t1005;
t1161 = -pkin(3) + t1189;
t1237 = t1005 * t1451;
t1221 = pkin(3) * t1237;
t941 = pkin(10) * t1317 + t1221;
t922 = pkin(11) * t1451 + t941;
t1398 = t1007 * t922;
t695 = t1398 + (-t1008 * pkin(12) + t1004 * t1161) * t1002;
t453 = t1003 * t1033 + t1006 * t695;
t1517 = t453 / 0.2e1;
t1017 = t1019 * t1008;
t1213 = t843 * t1237;
t620 = -t1017 - t1213;
t1364 = t620 * t1004;
t454 = -t1318 * t843 + t1364;
t1516 = -t454 / 0.2e1;
t1515 = -t538 / 0.2e1;
t1514 = t538 / 0.2e1;
t1513 = t539 / 0.2e1;
t1214 = t1449 * t1475;
t1157 = t1005 * t1214;
t845 = -t1008 * t1528 + t1157;
t1408 = t1006 * t845;
t1156 = t1008 * t1214;
t846 = t1005 * t1528 + t1156;
t689 = t1004 * t1036 + t1007 * t846;
t1431 = t1003 * t689;
t544 = -t1408 + t1431;
t1512 = -t544 / 0.2e1;
t1414 = t1006 * t689;
t1425 = t1003 * t845;
t545 = t1414 + t1425;
t1511 = t545 / 0.2e1;
t1468 = t936 * pkin(12);
t811 = pkin(5) * t938 + t1468;
t1410 = t1006 * t811;
t1104 = t1161 * t1002;
t732 = t1004 * t922 - t1007 * t1104;
t1430 = t1003 * t732;
t557 = t1410 + t1430;
t1510 = -t557 / 0.2e1;
t1413 = t1006 * t732;
t1427 = t1003 * t811;
t558 = -t1413 + t1427;
t1509 = t558 / 0.2e1;
t1454 = t1007 * pkin(12);
t1456 = t1004 * pkin(5);
t974 = -t1454 + t1456;
t819 = t1221 + (pkin(10) + t974) * t1317;
t1409 = t1006 * t819;
t940 = (pkin(4) * t1005 - pkin(11) * t1008) * t1002;
t927 = t1004 * t940;
t928 = t1007 * t939;
t792 = -t928 + t927;
t738 = pkin(12) * t1319 + t792;
t1429 = t1003 * t738;
t567 = t1409 - t1429;
t1508 = -t567 / 0.2e1;
t1412 = t1006 * t738;
t1426 = t1003 * t819;
t568 = t1412 + t1426;
t1507 = t568 / 0.2e1;
t1313 = t1003 * t1007;
t1407 = t1006 * t846;
t629 = t1313 * t845 + t1407;
t1506 = -t629 / 0.2e1;
t1309 = t1006 * t1007;
t1424 = t1003 * t846;
t630 = -t1309 * t845 + t1424;
t1505 = t630 / 0.2e1;
t1504 = t689 / 0.2e1;
t694 = pkin(5) * t1317 + t732;
t1503 = t694 / 0.2e1;
t1397 = t1007 * t940;
t1417 = t1004 * t939;
t790 = t1397 + t1417;
t737 = -pkin(5) * t1319 - t790;
t1502 = t737 / 0.2e1;
t1501 = -t790 / 0.2e1;
t1107 = t1475 * t1199;
t1073 = t1005 * t1107;
t896 = t1008 * t1215 - t1073;
t1418 = t1004 * t896;
t960 = t1214 * t1318;
t791 = -t960 + t1418;
t1500 = -t791 / 0.2e1;
t1499 = t792 / 0.2e1;
t1498 = -t845 / 0.2e1;
t1497 = t846 / 0.2e1;
t1496 = -t849 / 0.2e1;
t1495 = t849 / 0.2e1;
t1494 = -t851 / 0.2e1;
t1493 = t851 / 0.2e1;
t977 = t1006 * t1319;
t901 = t1007 * t1255 - t977;
t1492 = -t901 / 0.2e1;
t1491 = t901 / 0.2e1;
t1306 = t1007 * t1008;
t1315 = t1003 * t1005;
t902 = (t1006 * t1306 + t1315) * t1002;
t1490 = -t902 / 0.2e1;
t1489 = t902 / 0.2e1;
t1188 = -pkin(5) * t1007 - pkin(12) * t1004;
t1160 = -pkin(4) + t1188;
t1302 = pkin(11) * t1313;
t903 = -t1006 * t1160 + t1302;
t1488 = -t903 / 0.2e1;
t1487 = t903 / 0.2e1;
t1300 = pkin(11) * t1309;
t904 = t1003 * t1160 + t1300;
t1486 = -t904 / 0.2e1;
t1404 = t1006 * t974;
t991 = pkin(11) * t1316;
t914 = t991 + t1404;
t1485 = -t914 / 0.2e1;
t1484 = t914 / 0.2e1;
t1301 = pkin(11) * t1311;
t1420 = t1003 * t974;
t915 = -t1301 + t1420;
t1483 = t915 / 0.2e1;
t1482 = t921 / 0.2e1;
t1481 = -t936 / 0.2e1;
t1480 = t936 / 0.2e1;
t1479 = -t938 / 0.2e1;
t1478 = t938 / 0.2e1;
t1477 = t977 / 0.2e1;
t996 = t1002 ^ 2;
t1474 = pkin(3) * t996;
t1473 = pkin(11) * t998;
t1472 = t454 * pkin(5);
t1018 = t1019 * t1005;
t789 = t843 * t1236;
t619 = -t1018 + t789;
t1471 = t619 * pkin(4);
t1470 = t791 * pkin(5);
t1072 = t1008 * t1107;
t895 = t1005 * t1215 + t1072;
t1469 = t895 * pkin(4);
t1467 = -t1003 / 0.2e1;
t1466 = t1003 / 0.2e1;
t1464 = t1004 / 0.2e1;
t1463 = -t1006 / 0.2e1;
t1462 = t1006 / 0.2e1;
t1461 = -t1007 / 0.2e1;
t1459 = -t1008 / 0.2e1;
t1000 = t1007 ^ 2;
t1458 = pkin(11) * t1000;
t1457 = pkin(11) * t1004;
t1455 = t1007 * pkin(11);
t369 = t1004 * t539 - t1007 * t1013;
t1448 = t369 * t454;
t1447 = t538 * t619;
t1446 = t538 * t936;
t1445 = t538 * t938;
t688 = t1004 * t846 - t1007 * t1036;
t1444 = t688 * t791;
t1443 = t845 * t895;
t1442 = t845 * t936;
t1441 = -t997 - t999;
t1243 = t1313 / 0.2e1;
t1060 = t1243 * t849 + t1267 * t997;
t1338 = t901 * t1006;
t575 = t1338 / 0.2e1 + t1060;
t1440 = qJD(3) * t575;
t1240 = t1309 / 0.2e1;
t1059 = t1240 * t851 + t1267 * t999;
t1337 = t902 * t1003;
t577 = -t1337 / 0.2e1 + t1059;
t1439 = qJD(3) * t577;
t584 = -t1003 * t1520 + t849 * t938;
t1438 = qJD(3) * t584;
t585 = -t1006 * t1520 + t851 * t938;
t1437 = qJD(3) * t585;
t1436 = qJD(3) * t849;
t984 = t1000 - t998;
t1434 = qJD(4) * t984;
t1433 = qJD(6) * t936;
t1432 = t1003 * t544;
t1158 = t1004 * t1214;
t1108 = t1002 * t1158;
t1401 = t1007 * t896;
t793 = t1108 + t1401;
t1428 = t1003 * t793;
t1422 = t1003 * t895;
t758 = t1003 * t936;
t1419 = t1003 * t998;
t1416 = t1005 * t996;
t1415 = t1006 * t545;
t1411 = t1006 * t793;
t1406 = t1006 * t895;
t762 = t1006 * t936;
t1403 = t1006 * t998;
t1402 = t1007 * t689;
t1400 = t1007 * t903;
t1399 = t1007 * t904;
t1396 = t1008 * t996;
t1377 = t538 * t1006;
t1388 = t370 * t1003;
t220 = -t1377 + t1388;
t1395 = t220 * t1003;
t1394 = t220 * t1007;
t1393 = t221 * t1006;
t1392 = t221 * t1007;
t1366 = t619 * t1006;
t1347 = t843 * t1004;
t1284 = t1002 * t1347;
t1363 = t620 * t1007;
t455 = t1284 + t1363;
t1382 = t455 * t1003;
t310 = t1366 - t1382;
t1391 = t310 * t1007;
t1368 = t619 * t1003;
t1381 = t455 * t1006;
t311 = t1368 + t1381;
t1390 = t311 * t1007;
t164 = t369 * t1003;
t1389 = t369 * t1004;
t166 = t369 * t1006;
t1386 = t370 * t1007;
t1254 = t1003 * t1311;
t872 = t936 * t1254;
t384 = t872 + (-t1344 / 0.2e1 + t1490) * t1006 + (-t1341 / 0.2e1 + t1491) * t1003;
t1385 = t384 * qJD(3);
t1384 = t454 * t1003;
t1383 = t454 * t1006;
t507 = -t849 * t902 - t851 * t901;
t1380 = t507 * qJD(3);
t1166 = t1343 + t1345;
t535 = t1166 * t936;
t1379 = t535 * qJD(3);
t284 = t538 * t1004;
t1376 = t539 * t1003;
t1375 = t539 * t1006;
t1374 = t544 * t1007;
t1373 = t545 * t1007;
t1247 = -t1317 / 0.2e1;
t1206 = t1003 * t1247;
t1241 = t1311 / 0.2e1;
t590 = t1477 + t936 * t1241 + (t1206 + t1494) * t1007;
t1372 = t590 * qJD(3);
t1239 = t1308 / 0.2e1;
t1048 = (t1007 * t1239 + t1315 / 0.2e1) * t1002;
t591 = t1048 - t1089;
t1371 = t591 * qJD(3);
t1258 = t1004 * t1317;
t606 = -t1258 * t849 - t901 * t936;
t1370 = t606 * qJD(3);
t607 = t1258 * t851 + t902 * t936;
t1369 = t607 * qJD(3);
t1367 = t619 * t1004;
t1365 = t619 * t1007;
t644 = t1406 - t1428;
t1362 = t644 * t1007;
t645 = t1411 + t1422;
t1361 = t645 * t1007;
t1360 = t688 * t1004;
t1359 = t694 * t1003;
t1358 = t694 * t1004;
t1357 = t694 * t1006;
t1332 = t938 * t1004;
t1333 = t936 * t1007;
t673 = -t1332 - t1333;
t715 = t673 * t1317;
t1356 = t715 * qJD(3);
t1355 = t737 * t1003;
t1354 = t737 * t1006;
t1353 = t758 * qJD(3);
t1352 = t762 * qJD(3);
t1351 = t791 * t1003;
t1350 = t791 * t1006;
t1327 = t996 * t1008 ^ 2;
t836 = t1004 * t1327 - t1319 * t936;
t1349 = t836 * qJD(3);
t837 = t1007 * t1327 - t1319 * t938;
t1348 = t837 * qJD(3);
t637 = t845 * t1004;
t1340 = t895 * t1004;
t1339 = t895 * t1007;
t1336 = t921 * t1007;
t1334 = t936 * qJD(5);
t1329 = t942 * qJD(6);
t947 = t1005 ^ 2 * t996 - t1327;
t1328 = t947 * qJD(3);
t1326 = qJD(3) * t1002;
t1325 = qJD(5) * t1003;
t1324 = qJD(5) * t1004;
t1323 = qJD(5) * t1006;
t1322 = qJD(5) * t1007;
t1321 = qJD(6) * t1003;
t1320 = qJD(6) * t1006;
t1312 = t1004 * qJD(4);
t1310 = t1004 * t1007;
t1305 = pkin(4) * t1479;
t1304 = pkin(5) * t1495;
t1303 = pkin(5) * t1494;
t1299 = t1457 / 0.2e1;
t1298 = pkin(12) * t1467;
t1297 = pkin(12) * t1462;
t1296 = t1456 / 0.2e1;
t1295 = t1455 / 0.2e1;
t1293 = t849 * t1335;
t1292 = t851 * t1335;
t1290 = t1503 - t732 / 0.2e1;
t1289 = t927 / 0.2e1 - t928 / 0.2e1;
t1288 = pkin(12) * t1441;
t1287 = t936 * t1313;
t1286 = t1005 * t1396;
t1285 = t936 * t1309;
t1283 = t1431 / 0.2e1;
t1282 = t758 / 0.2e1;
t1281 = -t1412 / 0.2e1;
t1280 = -t762 / 0.2e1;
t1279 = t369 * t1460;
t1278 = t370 * t1465;
t1277 = -t1384 / 0.2e1;
t1276 = -t1383 / 0.2e1;
t1275 = -t1358 / 0.2e1;
t1274 = -t1351 / 0.2e1;
t1273 = -t1350 / 0.2e1;
t1271 = t851 * t1464;
t1269 = -t1338 / 0.2e1;
t1268 = t1337 / 0.2e1;
t1266 = t845 * t1451;
t1265 = t846 * t1451;
t1264 = t1003 * t1312;
t1263 = qJD(4) * t1311;
t1262 = qJD(5) * t1317;
t1261 = qJD(6) * t1313;
t1260 = qJD(6) * t1309;
t1257 = t1002 * t1306;
t1256 = qJD(6) * t1314;
t1253 = qJD(5) * t1310;
t1250 = -t1319 / 0.2e1;
t1249 = t1319 / 0.2e1;
t1248 = t1318 / 0.2e1;
t1246 = t1317 / 0.2e1;
t1244 = t1316 / 0.2e1;
t1234 = qJD(5) * t1441;
t1227 = qJD(4) * (-t1000 - t998);
t1226 = -qJD(6) - t1335;
t1225 = t454 * t1299;
t1224 = t791 * t1299;
t1223 = -qJD(6) + t1307;
t1222 = pkin(11) * t1246;
t1220 = t998 * t1256;
t1219 = qJD(4) * t1286;
t1216 = t1468 / 0.2e1 + t811 / 0.2e1;
t1212 = t1004 * t987;
t1211 = qJD(3) * t1258;
t1210 = qJD(4) * t1254;
t1209 = qJD(3) * t1257;
t1208 = t1004 * t1247;
t1207 = t1004 * t1246;
t1205 = t1003 * t1246;
t1204 = t1002 * t1239;
t1202 = t1002 * t1237;
t1201 = t1002 * t1236;
t1196 = t1513 - t1389 / 0.2e1;
t1195 = t1497 - t1360 / 0.2e1;
t1194 = t960 / 0.2e1 - t1418 / 0.2e1;
t1193 = t1425 / 0.2e1 - t545 / 0.2e1;
t1192 = t1408 / 0.2e1 + t544 / 0.2e1;
t1191 = t1378 / 0.2e1 + t1519;
t1190 = t1377 / 0.2e1 + t220 / 0.2e1;
t279 = t1313 * t538 + t1375;
t280 = -t1309 * t538 + t1376;
t22 = -t220 * t279 + t221 * t280 - t284 * t369;
t9 = t280 * t1511 + t221 * t1505 + t279 * t1512 + t220 * t1506 + (t1498 * t369 + t1515 * t688) * t1004;
t1187 = t22 * qJD(1) + t9 * qJD(2);
t1186 = 0.2e1 * t1210;
t1142 = t369 * t791 / 0.2e1 + t454 * t688 / 0.2e1;
t10 = t311 * t1511 + t221 * t645 / 0.2e1 + t310 * t1512 - t220 * t644 / 0.2e1 + t1142;
t21 = -t220 * t310 + t221 * t311 + t1448;
t1185 = t21 * qJD(1) + t10 * qJD(2);
t11 = (-t1393 / 0.2e1 - t1395 / 0.2e1 + t1518) * t688 + (-t1415 / 0.2e1 - t1432 / 0.2e1 + t1504) * t369;
t25 = (-t1393 + t370 - t1395) * t369;
t1184 = t25 * qJD(1) + t11 * qJD(2);
t119 = -t544 * t629 + t545 * t630 - t637 * t688;
t1183 = t9 * qJD(1) + t119 * qJD(2);
t1140 = t895 * t1514 + t619 * t845 / 0.2e1;
t38 = t1504 * t455 + t1518 * t793 + t1140 + t1142;
t61 = t370 * t455 + t1447 + t1448;
t1182 = t61 * qJD(1) + t38 * qJD(2);
t39 = (-t1386 / 0.2e1 + t1196) * t845 + (-t1402 / 0.2e1 + t1195) * t538;
t62 = (-t1386 + t539 - t1389) * t538;
t1181 = t62 * qJD(1) + t39 * qJD(2);
t1180 = qJD(3) * t1317 - qJD(5);
t1179 = pkin(12) * t1208;
t1178 = qJD(3) * t1451 + qJD(4);
t121 = -t544 * t644 + t545 * t645 + t1444;
t1177 = t10 * qJD(1) + t121 * qJD(2);
t122 = (-t1415 + t689 - t1432) * t688;
t1176 = t11 * qJD(1) + t122 * qJD(2);
t1012 = t1002 * t1013;
t118 = t1012 * t843 + t539 * t620 + t1447;
t1011 = t1012 / 0.2e1;
t83 = t1011 * t1214 + t1030 * t843 + t1497 * t620 + t1513 * t896 + t1140;
t1175 = t118 * qJD(1) + t83 * qJD(2);
t231 = (-t1360 + t846 - t1402) * t845;
t1174 = t39 * qJD(1) + t231 * qJD(2);
t232 = t689 * t793 + t1443 + t1444;
t1173 = t38 * qJD(1) + t232 * qJD(2);
t393 = t1031 * t1214 + t846 * t896 + t1443;
t1172 = t83 * qJD(1) + t393 * qJD(2);
t467 = -t1285 + (t1205 - t1405 / 0.2e1 + t1494) * t1004;
t959 = t1000 * t1006 - t1403;
t1171 = -qJD(3) * t467 - qJD(4) * t959;
t468 = t1287 + (t1204 + t1421 / 0.2e1 + t1495) * t1004;
t958 = t984 * t1003;
t1170 = -qJD(3) * t468 + qJD(4) * t958;
t717 = -t938 ^ 2 + t1520;
t1169 = qJD(3) * t717 + qJD(4) * t673;
t1168 = qJD(3) * t673 + t1434;
t1167 = -t1003 * t557 + t1006 * t558;
t1165 = -t1003 * t914 + t1006 * t915;
t1164 = -t1004 * t790 + t1007 * t792;
t1163 = qJD(3) * t938 + t1312;
t1162 = -t1307 + t1335;
t1159 = t1223 * t1004;
t1154 = t1454 / 0.2e1 - t1456 / 0.2e1;
t1153 = pkin(5) * t1492 - t1354 / 0.2e1;
t1152 = pkin(5) * t1490 + t1355 / 0.2e1;
t1151 = pkin(11) * t1494 - t1357 / 0.2e1;
t929 = t1005 * t1248 + t1238 / 0.2e1;
t1150 = t929 * qJD(3) + t1312 / 0.2e1;
t1149 = t1484 * t220 + t1519 * t915;
t1148 = t1479 * t220 + t1495 * t370;
t1147 = t1480 * t221 + t1494 * t369;
t1146 = t1479 * t221 + t1493 * t370;
t1145 = t1480 * t279 + t1491 * t369;
t1144 = t1481 * t280 + t1489 * t369;
t1143 = t1486 * t311 + t1487 * t310;
t1141 = t1481 * t220 + t1495 * t369;
t1139 = t1479 * t544 + t1495 * t689;
t1138 = t1480 * t545 + t1494 * t688;
t1137 = t1479 * t545 + t1493 * t689;
t1136 = t1480 * t629 + t1491 * t688;
t1135 = t1481 * t630 + t1489 * t688;
t1134 = t1486 * t645 + t1487 * t644;
t1133 = t1481 * t544 + t1495 * t688;
t1132 = t1478 * t904 + t1480 * t915;
t1131 = t1483 * t849 + t1484 * t851;
t552 = t1305 + (t1222 - t940 / 0.2e1) * t1007 + (t1482 - t939 / 0.2e1) * t1004;
t1130 = pkin(4) * t1312 - qJD(3) * t552;
t1037 = pkin(4) * t1480 + t1336 / 0.2e1 + pkin(11) * t1208;
t550 = t1037 + t1289;
t1129 = pkin(4) * t1307 - qJD(3) * t550;
t452 = t1003 * t695 - t1006 * t1033;
t1128 = t1461 * t452 + t1480 * t903;
t1127 = t1460 * t453 + t1481 * t904;
t1124 = t1002 * t1189;
t1123 = -t1429 / 0.2e1 + t1409 / 0.2e1;
t1122 = -t1428 / 0.2e1 + t1406 / 0.2e1;
t1121 = -t1422 / 0.2e1 - t1411 / 0.2e1;
t1120 = t1462 * t280 + t1467 * t279;
t1119 = t1463 * t311 + t1466 * t310;
t1118 = -t1382 / 0.2e1 + t1366 / 0.2e1;
t1117 = -t1381 / 0.2e1 - t1368 / 0.2e1;
t1116 = t1461 * t455 + t1465 * t454;
t1115 = t1462 * t568 + t1467 * t567;
t1114 = t1463 * t630 + t1466 * t629;
t1113 = t1463 * t645 + t1466 * t644;
t1112 = t1461 * t793 + t1465 * t791;
t1110 = t1333 / 0.2e1 - t1332 / 0.2e1;
t1105 = qJD(6) * t1465 + t1229;
t1102 = t1446 / 0.2e1 + t369 * t1246;
t1101 = t1250 * t369 + t1480 * t539;
t1100 = t1250 * t370 + t1478 * t539;
t1099 = t1442 / 0.2e1 + t688 * t1246;
t1098 = t1250 * t688 + t1480 * t846;
t1097 = t1250 * t689 + t1478 * t846;
t1096 = t1247 * t220 + t1496 * t538;
t1095 = t1247 * t221 + t1494 * t538;
t1094 = t370 * t1247 - t1445 / 0.2e1;
t1093 = t1247 * t544 + t1496 * t845;
t1092 = t1247 * t545 + t1494 * t845;
t1091 = t1247 * t689 + t1479 * t845;
t1090 = -t974 / 0.2e1 + t1154;
t733 = t1004 * t1104 + t1398;
t101 = -t452 * t557 + t453 * t558 + t694 * t733;
t1071 = t453 * t1463 + t452 * t1467 + t733 / 0.2e1;
t1024 = t1071 * t688 + t1503 * t689 + t1509 * t545 + t1510 * t544;
t35 = t1470 / 0.2e1 + t1113 * pkin(12) + t1024;
t1025 = t1071 * t369 + t1503 * t370 + t1509 * t221 + t1510 * t220;
t6 = t1472 / 0.2e1 + t1119 * pkin(12) + t1025;
t1088 = t6 * qJD(1) + t35 * qJD(2) + t101 * qJD(3);
t104 = -t452 * t567 + t453 * t568 + t694 * t737;
t1027 = t1502 * t688 + t1505 * t453 + t1506 * t452 + t1507 * t545 + t1508 * t544;
t28 = (pkin(11) * t1500 + t1498 * t694) * t1004 + t1027 + t1134;
t1028 = t220 * t1508 + t221 * t1507 - t279 * t452 / 0.2e1 + t280 * t1517 + t369 * t1502;
t4 = (pkin(11) * t1516 + t1515 * t694) * t1004 + t1028 + t1143;
t1087 = t4 * qJD(1) + t28 * qJD(2) + t104 * qJD(3);
t1086 = t1120 * pkin(12);
t102 = -t557 * t851 - t558 * t849 + (t453 * t1003 - t452 * t1006) * t936;
t18 = (-t311 / 0.2e1 + t1141) * t1006 + (t310 / 0.2e1 + t1147) * t1003;
t95 = (-t645 / 0.2e1 + t1133) * t1006 + (t644 / 0.2e1 + t1138) * t1003;
t1085 = t18 * qJD(1) + t95 * qJD(2) + t102 * qJD(3);
t103 = t452 * t902 - t453 * t901 - t567 * t851 - t568 * t849;
t1035 = t1489 * t220 + t1492 * t221 + t1494 * t279 + t1496 * t280;
t1064 = (t1463 * t310 + t1467 * t311) * t1004;
t14 = t1064 - t1035;
t1034 = t1489 * t544 + t1492 * t545 + t1494 * t629 + t1496 * t630;
t1063 = (t1463 * t644 + t1467 * t645) * t1004;
t77 = t1063 - t1034;
t1084 = -t14 * qJD(1) - t77 * qJD(2) + t103 * qJD(3);
t1070 = t733 * t1461 + t732 * t1465 + t941 / 0.2e1;
t1023 = t1070 * t538 + t1482 * t539 + t1499 * t370 + t1501 * t369;
t20 = t1471 / 0.2e1 + t1116 * pkin(11) + t1023;
t278 = -t732 * t790 + t733 * t792 + t921 * t941;
t1022 = t1070 * t845 + t1482 * t846 + t1499 * t689 + t1501 * t688;
t85 = t1469 / 0.2e1 + t1112 * pkin(11) + t1022;
t1083 = t20 * qJD(1) + t85 * qJD(2) + t278 * qJD(3);
t114 = t1362 / 0.2e1 + (t1274 + t1093) * t1004 + t1136;
t139 = -t1258 * t452 + t567 * t936 + t694 * t901 + t737 * t849;
t30 = t1391 / 0.2e1 + (t1277 + t1096) * t1004 + t1145;
t1082 = t30 * qJD(1) + t114 * qJD(2) + t139 * qJD(3);
t117 = -t1361 / 0.2e1 + (t1273 + t1092) * t1004 + t1135;
t140 = -t1258 * t453 - t568 * t936 + t694 * t902 + t737 * t851;
t33 = -t1390 / 0.2e1 + (t1276 + t1095) * t1004 + t1144;
t1081 = t33 * qJD(1) + t117 * qJD(2) + t140 * qJD(3);
t129 = -t452 * t938 + t733 * t849 + (t557 - t1359) * t936;
t131 = t1350 / 0.2e1 + t1139;
t42 = t1383 / 0.2e1 + t1148;
t1080 = t42 * qJD(1) + t131 * qJD(2) + t129 * qJD(3);
t130 = -t453 * t938 + t733 * t851 + (-t558 - t1357) * t936;
t134 = t1274 + t1137;
t45 = t1277 + t1146;
t1079 = t45 * qJD(1) + t134 * qJD(2) + t130 * qJD(3);
t177 = (-t793 / 0.2e1 + t1099) * t1007 + (t1500 + t1091) * t1004;
t246 = -t790 * t938 - t792 * t936 + (-t733 * t1004 + t1007 * t732) * t1317;
t60 = (-t455 / 0.2e1 + t1102) * t1007 + (t1516 + t1094) * t1004;
t1078 = t60 * qJD(1) + t177 * qJD(2) + t246 * qJD(3);
t222 = t1122 + t1138;
t260 = -t453 * t936 + t694 * t851;
t67 = t1118 + t1147;
t1077 = qJD(1) * t67 + qJD(2) * t222 - qJD(3) * t260;
t223 = t1121 + t1133;
t259 = t452 * t936 - t694 * t849;
t68 = t1117 + t1141;
t1076 = qJD(1) * t68 + qJD(2) * t223 - qJD(3) * t259;
t255 = t1339 / 0.2e1 + t1098;
t371 = -t1258 * t921 + t1317 * t790 + t1319 * t732 - t941 * t936;
t79 = t1365 / 0.2e1 + t1101;
t1075 = t79 * qJD(1) + t255 * qJD(2) - t371 * qJD(3);
t258 = -t1340 / 0.2e1 + t1097;
t372 = t941 * t938 + (-t1005 * t733 + (t792 + t1336) * t1008) * t1002;
t82 = -t1367 / 0.2e1 + t1100;
t1074 = t82 * qJD(1) + t258 * qJD(2) + t372 * qJD(3);
t124 = -t1446 / 0.2e1 + t1363 / 0.2e1 + (t369 * t1459 + t1347 / 0.2e1) * t1002;
t377 = -t1442 / 0.2e1 + t1401 / 0.2e1 + (t688 * t1459 + t1158 / 0.2e1) * t1002;
t555 = -t1317 * t732 - t921 * t936;
t1069 = -qJD(1) * t124 - qJD(2) * t377 - qJD(3) * t555;
t126 = t1445 / 0.2e1 + t1364 / 0.2e1 + (t1008 * t1518 + t1461 * t843) * t1002;
t379 = -t1091 - t1194;
t556 = -t1317 * t733 - t921 * t938;
t1068 = -qJD(1) * t126 - qJD(2) * t379 + qJD(3) * t556;
t1009 = -t539 * t1451 / 0.2e1 + t1005 * t1011;
t1015 = -t789 / 0.2e1 + t1018 / 0.2e1;
t233 = t1009 - t1015;
t1021 = t1155 - t1031 / 0.2e1;
t1052 = -t1072 / 0.2e1;
t580 = t1052 + t1265 / 0.2e1 + t1021 * t1005;
t855 = pkin(3) * t1416 + t1451 * t941;
t1067 = -qJD(1) * t233 + qJD(2) * t580 + qJD(3) * t855;
t1010 = t1008 * t1011 + t1451 * t1514;
t1014 = t1017 / 0.2e1 + t1213 / 0.2e1;
t235 = t1010 - t1014;
t1053 = t1073 / 0.2e1;
t581 = t1053 - t1266 / 0.2e1 + t1021 * t1008;
t856 = pkin(3) * t1396 - t1451 * t939;
t1066 = -qJD(1) * t235 + qJD(2) * t581 + qJD(3) * t856;
t485 = (t1342 - t1423) * t1004;
t564 = t849 ^ 2 - t851 ^ 2;
t1065 = qJD(3) * t564 - qJD(4) * t485 - qJD(5) * t1166;
t1061 = pkin(12) * t1247 + pkin(11) * t1480 - t733 / 0.2e1;
t292 = t1003 * t1290 - t1006 * t1216 + t1303;
t848 = t1090 * t1006;
t1058 = pkin(5) * t1325 - qJD(3) * t292 - qJD(4) * t848;
t290 = t1003 * t1216 + t1006 * t1290 + t1304;
t847 = t1090 * t1003;
t1057 = pkin(5) * t1323 - qJD(3) * t290 + qJD(4) * t847;
t1054 = qJD(6) * t929 + t1536;
t1051 = (qJD(4) * t1258 + t938 * qJD(5)) * t936;
t1050 = t904 * t1462 + t903 * t1466 - t1455 / 0.2e1;
t1049 = t1464 * t452 + t1478 * t903 + t1481 * t914;
t1020 = t1295 * t694 + t1299 * t733 + t1483 * t453 + t1485 * t452 + t1488 * t557 + t1509 * t904;
t1038 = t1115 * pkin(12) - t737 * pkin(5) / 0.2e1;
t55 = -t1020 + t1038;
t554 = pkin(11) ^ 2 * t1310 - t903 * t914 + t904 * t915;
t1026 = -t1050 * t688 + t1483 * t545 + t1485 * t544;
t66 = (pkin(5) * t1498 + pkin(11) * t1504) * t1004 + t1114 * pkin(12) + t1026;
t7 = pkin(11) * t1278 + t1050 * t369 + t1296 * t538 + t1086 + t1149;
t1047 = -t7 * qJD(1) + t66 * qJD(2) - t55 * qJD(3) + t554 * qJD(4);
t1046 = t1299 * t849 - t1128;
t957 = t983 * t998;
t1045 = qJD(3) * t485 + qJD(4) * t957 + 0.2e1 * t1212;
t1044 = qJD(3) * t1166 + t1186 - t1534;
t151 = (t1374 / 0.2e1 - t630 / 0.2e1) * t1006 + (-t1373 / 0.2e1 + t629 / 0.2e1) * t1003;
t41 = (t1394 / 0.2e1 - t280 / 0.2e1) * t1006 + (-t1392 / 0.2e1 + t279 / 0.2e1) * t1003;
t489 = (t1004 * t914 - t1400) * t1006 + (t1004 * t915 + t1399) * t1003;
t51 = (pkin(12) * t1492 + t1464 * t557 + t1128 + t1507) * t1006 + (pkin(12) * t1489 + t1464 * t558 + t1127 + t1508) * t1003 + t1131;
t1043 = t41 * qJD(1) + t151 * qJD(2) - t51 * qJD(3) - t489 * qJD(4);
t172 = (t1283 - t1192) * t1004;
t47 = (-t1388 / 0.2e1 + t1190) * t1004;
t686 = t903 * t1004 + (t914 - 0.2e1 * t991) * t1007;
t88 = (t557 / 0.2e1 + pkin(11) * t1496) * t1007 + (t1004 * t1061 + t1461 * t694) * t1003 + t1049 + t1153;
t1042 = -t47 * qJD(1) + t172 * qJD(2) - t88 * qJD(3) - t686 * qJD(4);
t174 = (-t1414 / 0.2e1 - t1193) * t1004;
t46 = (-t1387 / 0.2e1 - t1191) * t1004;
t687 = t915 * t1007 + (-t904 + 0.2e1 * t1300) * t1004;
t89 = (-t558 / 0.2e1 + t1151) * t1007 + (t1006 * t1061 + t1517) * t1004 + t1132 + t1152;
t1041 = -t46 * qJD(1) - t174 * qJD(2) - t89 * qJD(3) + t687 * qJD(4);
t152 = t1004 * t1151 + t1123 - t1127;
t239 = t1006 * t1195 + t1007 * t1193;
t72 = t1006 * t1196 + t1007 * t1191;
t841 = -pkin(11) * t1403 - t1399;
t1040 = qJD(1) * t72 + qJD(2) * t239 + qJD(3) * t152 + qJD(4) * t841;
t153 = t1281 + (-t819 / 0.2e1 + t1358 / 0.2e1) * t1003 + t1046;
t240 = -t1003 * t1195 + t1007 * t1192;
t73 = -t1003 * t1196 + t1007 * t1190;
t840 = -pkin(11) * t1419 - t1400;
t1039 = qJD(1) * t73 + qJD(2) * t240 + qJD(3) * t153 - qJD(4) * t840;
t994 = t1324 / 0.2e1;
t975 = qJD(4) * t1249;
t970 = qJD(3) * t1286;
t964 = -0.2e1 * qJD(6) * t1254;
t923 = qJD(5) * t1250 + t970;
t844 = qJD(4) * t1207 + t929 * qJD(5);
t818 = t845 * t1473;
t810 = t991 + t1404 / 0.2e1 + t1154 * t1006;
t809 = t1301 - t1420 / 0.2e1 - t1154 * t1003;
t665 = t673 * qJD(5);
t638 = t845 * t1007;
t593 = t1007 * t1206 + t1477 + t1527;
t592 = t1048 + t1089;
t583 = t1266 / 0.2e1 + t1053 + t1530 * t1008;
t582 = -t1265 / 0.2e1 + t1052 + t1530 * t1005;
t576 = t1268 + t1059;
t574 = t1269 + t1060;
t553 = t1007 * t1222 + t1305 + t921 * t1464 + t1417 / 0.2e1 + t1397 / 0.2e1;
t551 = t1037 - t1289;
t519 = t1166 * qJD(6);
t518 = t538 * t1473;
t480 = t485 * qJD(6);
t470 = t1004 * t1205 + t1241 * t938 + t1271 + t1285;
t469 = t1004 * t1204 + t1245 * t938 + t1465 * t849 - t1287;
t440 = t688 * t1006;
t439 = t688 * t1003;
t383 = t1007 * t1111 + t1462 * t902 + t1467 * t901 + t872;
t380 = -t1091 + t1194;
t378 = -t1401 / 0.2e1 - t1108 / 0.2e1 - t1099;
t293 = pkin(12) * t1280 + t1303 + t1359 / 0.2e1 + t1430 / 0.2e1 + t1410 / 0.2e1;
t291 = pkin(12) * t1282 + t1304 + t1357 / 0.2e1 + t1413 / 0.2e1 - t1427 / 0.2e1;
t286 = t538 * t1007;
t257 = t1340 / 0.2e1 + t1097;
t256 = -t1339 / 0.2e1 + t1098;
t242 = t1373 / 0.2e1 + t688 * t1241 + t845 * t1243 + t1407 / 0.2e1;
t241 = -t1374 / 0.2e1 + t688 * t1245 + t845 * t1240 - t1424 / 0.2e1;
t236 = t1010 + t1014;
t234 = t1009 + t1015;
t225 = t1122 - t1138;
t224 = t1121 - t1133;
t176 = t1110 * t845 + (t1460 * t688 + t1465 * t689) * t1317 - t1112;
t175 = t1241 * t689 + t1245 * t845 + t1465 * t545;
t173 = t845 * t1241 + (t1512 + t1283) * t1004;
t155 = pkin(11) * t1271 + t1241 * t694 + t1123 + t1127;
t154 = t694 * t1245 + t1281 - t1426 / 0.2e1 - t1046;
t150 = (t1462 * t544 + t1467 * t545) * t1007 - t1114;
t133 = t1351 / 0.2e1 + t1137;
t132 = t1273 + t1139;
t127 = -t1364 / 0.2e1 + t843 * t1248 - t1094;
t125 = -t1363 / 0.2e1 - t1284 / 0.2e1 - t1102;
t116 = t1361 / 0.2e1 + t791 * t1241 + t1092 * t1004 + t1135;
t115 = -t1362 / 0.2e1 + t791 * t1244 + t1093 * t1004 + t1136;
t94 = t1003 * t1138 + t1006 * t1133 - t1113;
t91 = pkin(11) * t1527 + t1006 * t1179 + t694 * t1240 + t733 * t1241 + t558 * t1460 + t453 * t1465 - t1132 + t1152;
t90 = pkin(11) * t1089 + t1003 * t1179 + t694 * t1243 + t733 * t1244 + t557 * t1461 - t1049 + t1153;
t84 = t793 * t1295 + t1224 - t1469 / 0.2e1 + t1022;
t81 = t1367 / 0.2e1 + t1100;
t80 = -t1365 / 0.2e1 + t1101;
t78 = t1063 + t1034;
t75 = t1392 / 0.2e1 + t369 * t1241 + t538 * t1243 + t1375 / 0.2e1;
t74 = -t1394 / 0.2e1 + t369 * t1245 + t538 * t1240 - t1376 / 0.2e1;
t70 = t1118 - t1147;
t69 = t1117 - t1141;
t65 = t1296 * t845 + t1297 * t630 + t1298 * t629 + t1299 * t689 + t1026;
t59 = t1110 * t538 + (t1278 + t1279) * t1317 - t1116;
t56 = t1020 + t1038;
t52 = t904 * t1282 + t558 * t1245 - t453 * t1313 / 0.2e1 + t903 * t1280 + t557 * t1242 + t452 * t1240 + (t1269 + t1268) * pkin(12) + t1115 - t1131;
t49 = t1241 * t370 + t1245 * t538 + t1465 * t221;
t48 = t1241 * t538 + t1244 * t370 + t1465 * t220;
t44 = t1384 / 0.2e1 + t1146;
t43 = t1276 + t1148;
t40 = (t1462 * t220 + t1467 * t221) * t1007 + t1120;
t36 = qJD(3) * t83;
t34 = t645 * t1297 + t644 * t1298 - t1470 / 0.2e1 + t1024;
t32 = t1390 / 0.2e1 + t454 * t1241 + t1095 * t1004 + t1144;
t31 = -t1391 / 0.2e1 + t454 * t1244 + t1096 * t1004 + t1145;
t27 = t1275 * t845 + t1027 - t1134 + t1224;
t19 = t455 * t1295 + t1225 - t1471 / 0.2e1 + t1023;
t17 = t1003 * t1147 + t1006 * t1141 - t1119;
t15 = t1064 + t1035;
t8 = t166 * t1486 + t164 * t1488 + pkin(11) * t1279 + (pkin(5) * t1514 + pkin(11) * t1518) * t1004 + t1086 - t1149;
t5 = t311 * t1297 + t310 * t1298 - t1472 / 0.2e1 + t1025;
t3 = t1275 * t538 + t1028 - t1143 + t1225;
t2 = qJD(3) * t38 + qJD(4) * t39;
t1 = qJD(3) * t10 + qJD(4) * t9 + qJD(5) * t11;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t118, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t61 + qJD(4) * t62, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t21 + qJD(4) * t22 + qJD(5) * t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t843 * qJD(3), t1019 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0 (-t1346 * t996 - t1451 * t619) * qJD(3) + t234 * qJD(4) (t1416 * t843 - t1451 * t620) * qJD(3) + t236 * qJD(4) (t1005 * t619 + t1008 * t620) * t1326 (-t1474 * t843 + t619 * t939 + t620 * t941) * qJD(3) + t1175, 0, 0, 0, 0, 0, 0 (t1317 * t454 + t619 * t936) * qJD(3) + t80 * qJD(4) + t127 * qJD(5) (t1317 * t455 + t619 * t938) * qJD(3) + t81 * qJD(4) + t125 * qJD(5) (t454 * t938 - t455 * t936) * qJD(3) + t59 * qJD(4) (t454 * t732 + t455 * t733 + t619 * t921) * qJD(3) + t19 * qJD(4) + t1182, 0, 0, 0, 0, 0, 0 (t310 * t936 + t454 * t849) * qJD(3) + t31 * qJD(4) + t43 * qJD(5) + t70 * qJD(6) (-t311 * t936 + t454 * t851) * qJD(3) + t32 * qJD(4) + t44 * qJD(5) + t69 * qJD(6) (-t310 * t851 - t311 * t849) * qJD(3) + t15 * qJD(4) + t17 * qJD(5) (-t310 * t452 + t311 * t453 + t454 * t694) * qJD(3) + t3 * qJD(4) + t5 * qJD(5) + t1185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t234 - qJD(4) * t539, qJD(3) * t236 + qJD(4) * t538, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t80 + qJD(5) * t284 - t1307 * t539, qJD(3) * t81 + qJD(5) * t286 + t1312 * t539, t59 * qJD(3) + t1227 * t538, t19 * qJD(3) + (-pkin(4) * t539 - t1458 * t538 - t518) * qJD(4) + t1181, 0, 0, 0, 0, 0, 0, t31 * qJD(3) + (-t1007 * t279 - t1378 * t998) * qJD(4) + t48 * qJD(5) + t75 * qJD(6), t32 * qJD(3) + (t1007 * t280 - t1377 * t998) * qJD(4) + t49 * qJD(5) + t74 * qJD(6), t15 * qJD(3) + t40 * qJD(5) + (-t1003 * t280 - t1006 * t279) * t1312, t3 * qJD(3) + (-t279 * t903 + t280 * t904 - t518) * qJD(4) + t8 * qJD(5) + t1187; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t127 + qJD(4) * t284 - qJD(5) * t370, qJD(3) * t125 + qJD(4) * t286 + qJD(5) * t369, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t43 + qJD(4) * t48 + qJD(6) * t164 - t1323 * t370, qJD(3) * t44 + qJD(4) * t49 + qJD(6) * t166 + t1325 * t370, t17 * qJD(3) + t40 * qJD(4) + t1234 * t369, t5 * qJD(3) + t8 * qJD(4) + (-t370 * pkin(5) + t1288 * t369) * qJD(5) + t1184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t70 + qJD(4) * t75 + qJD(5) * t164 - qJD(6) * t221, qJD(3) * t69 + qJD(4) * t74 + qJD(5) * t166 + qJD(6) * t220, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t36, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t393, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t232 + qJD(4) * t231, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t121 + qJD(4) * t119 + qJD(5) * t122; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t1214, -qJD(3) * t1215, 0, 0, 0, 0, 0, 0, 0, 0 (-t1156 * t996 - t1451 * t895) * qJD(3) + t582 * qJD(4) (t1157 * t996 - t1451 * t896) * qJD(3) + t583 * qJD(4) (t1005 * t895 + t1008 * t896) * t1326 (-t1214 * t1474 + t895 * t939 + t896 * t941) * qJD(3) + t1172, 0, 0, 0, 0, 0, 0 (t1317 * t791 + t895 * t936) * qJD(3) + t256 * qJD(4) + t380 * qJD(5) (t1317 * t793 + t895 * t938) * qJD(3) + t257 * qJD(4) + t378 * qJD(5) (t791 * t938 - t793 * t936) * qJD(3) + t176 * qJD(4) (t732 * t791 + t733 * t793 + t895 * t921) * qJD(3) + t84 * qJD(4) + t1173, 0, 0, 0, 0, 0, 0 (t644 * t936 + t791 * t849) * qJD(3) + t115 * qJD(4) + t132 * qJD(5) + t225 * qJD(6) (-t645 * t936 + t791 * t851) * qJD(3) + t116 * qJD(4) + t133 * qJD(5) + t224 * qJD(6) (-t644 * t851 - t645 * t849) * qJD(3) + t78 * qJD(4) + t94 * qJD(5) (-t452 * t644 + t453 * t645 + t694 * t791) * qJD(3) + t27 * qJD(4) + t34 * qJD(5) + t1177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t582 - qJD(4) * t846, qJD(3) * t583 + qJD(4) * t845, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t256 + qJD(5) * t637 - t1307 * t846, qJD(3) * t257 + qJD(5) * t638 + t1312 * t846, t176 * qJD(3) + t1227 * t845, t84 * qJD(3) + (-pkin(4) * t846 - t1458 * t845 - t818) * qJD(4) + t1174, 0, 0, 0, 0, 0, 0, t115 * qJD(3) + (-t1007 * t629 - t1419 * t845) * qJD(4) + t173 * qJD(5) + t242 * qJD(6), t116 * qJD(3) + (t1007 * t630 - t1403 * t845) * qJD(4) + t175 * qJD(5) + t241 * qJD(6), t78 * qJD(3) + t150 * qJD(5) + (-t1003 * t630 - t1006 * t629) * t1312, t27 * qJD(3) + (-t629 * t903 + t630 * t904 - t818) * qJD(4) + t65 * qJD(5) + t1183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t380 + qJD(4) * t637 - qJD(5) * t689, qJD(3) * t378 + qJD(4) * t638 + qJD(5) * t688, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t132 + qJD(4) * t173 + qJD(6) * t439 - t1323 * t689, qJD(3) * t133 + qJD(4) * t175 + qJD(6) * t440 + t1325 * t689, t94 * qJD(3) + t150 * qJD(4) + t1234 * t688, t34 * qJD(3) + t65 * qJD(4) + (-t689 * pkin(5) + t1288 * t688) * qJD(5) + t1176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t225 + qJD(4) * t242 + qJD(5) * t439 - qJD(6) * t545, qJD(3) * t224 + qJD(4) * t241 + qJD(5) * t440 + qJD(6) * t544, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t233 * qJD(4), t235 * qJD(4), 0, -t1175, 0, 0, 0, 0, 0, 0, qJD(4) * t79 + qJD(5) * t126, qJD(4) * t82 + qJD(5) * t124, qJD(4) * t60, qJD(4) * t20 - t1182, 0, 0, 0, 0, 0, 0, qJD(4) * t30 + qJD(5) * t42 - qJD(6) * t67, qJD(4) * t33 + qJD(5) * t45 - qJD(6) * t68, -qJD(4) * t14 + qJD(5) * t18, qJD(4) * t4 + qJD(5) * t6 - t1185; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t580 * qJD(4), -t581 * qJD(4), 0, -t1172, 0, 0, 0, 0, 0, 0, qJD(4) * t255 + qJD(5) * t379, qJD(4) * t258 + qJD(5) * t377, qJD(4) * t177, qJD(4) * t85 - t1173, 0, 0, 0, 0, 0, 0, qJD(4) * t114 + qJD(5) * t131 - qJD(6) * t222, qJD(4) * t117 + qJD(5) * t134 - qJD(6) * t223, -qJD(4) * t77 + qJD(5) * t95, qJD(4) * t28 + qJD(5) * t35 - t1177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1219, -t947 * qJD(4), qJD(4) * t1201, -t1219, -qJD(4) * t1202, 0, -t855 * qJD(4), -t856 * qJD(4), 0, 0 (qJD(4) * t1257 - t1334) * t938, qJD(4) * t715 + qJD(5) * t717, -t837 * qJD(4) + t1262 * t936, t1051, t836 * qJD(4) + t1262 * t938, -t1219, -qJD(4) * t371 - qJD(5) * t556, qJD(4) * t372 + qJD(5) * t555, qJD(4) * t246, qJD(4) * t278 (qJD(4) * t902 - qJD(6) * t849 - t1323 * t936) * t851, qJD(4) * t507 + qJD(5) * t535 + qJD(6) * t564, qJD(4) * t607 + qJD(5) * t585 - t1433 * t849 (qJD(4) * t901 + qJD(6) * t851 - t1325 * t936) * t849, qJD(4) * t606 - qJD(5) * t584 - t1433 * t851, t1051, qJD(4) * t139 + qJD(5) * t129 + qJD(6) * t260, qJD(4) * t140 + qJD(5) * t130 + qJD(6) * t259, qJD(4) * t103 + qJD(5) * t102, qJD(4) * t104 + qJD(5) * t101; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t970, -t1328, t1178 * t1317, -t970, -t1178 * t1319, 0, -qJD(4) * t941 - t1067, qJD(4) * t939 - t1066, 0, 0, t1163 * t1257 + t1539, t1317 * t1434 + t1356 + t665, qJD(4) * t1259 - t1348, t1162 * t1258 - t1539, qJD(4) * t1251 + t1349, -t923 (t1004 * t1124 - t941 * t1007) * qJD(4) + t553 * qJD(5) + t1075 (t941 * t1004 + t1007 * t1124) * qJD(4) + t551 * qJD(5) + t1074, qJD(4) * t1164 + t1078 (-t941 * pkin(4) + pkin(11) * t1164) * qJD(4) + t1083, qJD(5) * t576 + t1533 + (t1263 + t1435) * t902, t1380 + t383 * qJD(5) - t480 + (-t1337 - t1338) * t1312, t1369 + (-t902 * t1007 + t1252 * t998) * qJD(4) + t470 * qJD(5) + t592 * qJD(6), t574 * qJD(5) - t1533 + (t1264 + t1436) * t901, t1370 + (t901 * t1007 - t1255 * t998) * qJD(4) + t469 * qJD(5) + t593 * qJD(6), -t1539 + (qJD(6) / 0.2e1 + t1162) * t1258, -t567 * t1307 + t90 * qJD(5) + t155 * qJD(6) + (pkin(11) * t901 - t1317 * t903 + t1355) * t1312 + t1082, t568 * t1307 + t91 * qJD(5) + t154 * qJD(6) + (pkin(11) * t902 - t1317 * t904 + t1354) * t1312 + t1081 (-t901 * t904 + t902 * t903 + (-t1003 * t568 - t1006 * t567) * t1004) * qJD(4) + t52 * qJD(5) + t1084 (t1457 * t737 - t567 * t903 + t568 * t904) * qJD(4) + t56 * qJD(5) + t1087; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1536, t1169, t1180 * t936, t1536, t1180 * t938, t975, qJD(4) * t553 - qJD(5) * t733 - t1068, qJD(4) * t551 + qJD(5) * t732 - t1069, 0, 0, qJD(4) * t576 - t1540 + (-t1325 - t1435) * t762, t383 * qJD(4) - t1334 * t983 + t1379 - t519, qJD(4) * t470 + t1325 * t938 + t1437, t574 * qJD(4) + t1540 + (t1323 - t1436) * t758, qJD(4) * t469 + t1323 * t938 - t1438, t1054, t90 * qJD(4) + (t1003 * t1203 - t733 * t1006) * qJD(5) + t293 * qJD(6) + t1080, t91 * qJD(4) + (t733 * t1003 + t1006 * t1203) * qJD(5) + t291 * qJD(6) + t1079, t52 * qJD(4) + qJD(5) * t1167 + t1085, t56 * qJD(4) + (-t733 * pkin(5) + pkin(12) * t1167) * qJD(5) + t1088; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1537, t1065, t592 * qJD(4) + t1226 * t849, t1537, t593 * qJD(4) + t1226 * t851, t844, qJD(4) * t155 + qJD(5) * t293 - qJD(6) * t453 - t1077, qJD(4) * t154 + qJD(5) * t291 + qJD(6) * t452 - t1076, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t233 * qJD(3), -t235 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t79, -qJD(3) * t82, -qJD(3) * t60, -qJD(3) * t20 - t1181, 0, 0, 0, 0, 0, 0, -qJD(3) * t30 - qJD(5) * t47 - qJD(6) * t72, -qJD(3) * t33 - qJD(5) * t46 - qJD(6) * t73, qJD(3) * t14 + qJD(5) * t41, -qJD(3) * t4 - qJD(5) * t7 - t1187; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t580 * qJD(3), t581 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t255, -qJD(3) * t258, -qJD(3) * t177, -qJD(3) * t85 - t1174, 0, 0, 0, 0, 0, 0, -qJD(3) * t114 + qJD(5) * t172 - qJD(6) * t239, -qJD(3) * t117 - qJD(5) * t174 - qJD(6) * t240, qJD(3) * t77 + qJD(5) * t151, -qJD(3) * t28 + qJD(5) * t66 - t1183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t970, t1328, -qJD(3) * t1201, t970, qJD(3) * t1202, 0, t1067, t1066, 0, 0, -t1209 * t938 + t1539, t665 - t1356, -qJD(5) * t1257 + t1348, -t1211 * t936 - t1539, qJD(5) * t1258 - t1349, t923, qJD(5) * t552 - t1075, qJD(5) * t550 - t1074, -t1078, -t1083, qJD(5) * t577 - t1435 * t902 + t1533, qJD(5) * t384 - t1380 - t480, -qJD(5) * t467 - qJD(6) * t591 - t1369, qJD(5) * t575 - t1436 * t901 - t1533, -qJD(5) * t468 - qJD(6) * t590 - t1370, -t1539 + (-t1335 - qJD(6) / 0.2e1) * t1258, -qJD(5) * t88 - qJD(6) * t152 - t1082, -qJD(5) * t89 - qJD(6) * t153 - t1081, -qJD(5) * t51 - t1084, -qJD(5) * t55 - t1087; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1253, t984 * qJD(5), 0, -t1253, 0, 0, -pkin(4) * t1324, -pkin(4) * t1322, 0, 0, t1253 * t999 - t1220, -qJD(6) * t957 - 0.2e1 * t1007 * t1212, -qJD(5) * t959 + t1004 * t1261, t1253 * t997 + t1220, qJD(5) * t958 + t1004 * t1260, -t1253, -qJD(5) * t686 - qJD(6) * t841, qJD(5) * t687 + qJD(6) * t840, -qJD(5) * t489, qJD(5) * t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1229, t1168, -t1180 * t1007, -t1229, t1180 * t1004, qJD(3) * t1250, -pkin(11) * t1322 - t1130, pkin(11) * t1324 - t1129, 0, 0, t1439 - t1329 + (t1312 * t999 + t987) * t1007, t1385 + t964 + (-0.2e1 * t1210 + t1534) * t1007, qJD(5) * t1316 + t1171, t1440 + t1329 + (t1312 * t997 - t987) * t1007, qJD(5) * t1311 + t1170, -t1105 (t1003 * t1188 - t1300) * qJD(5) + t810 * qJD(6) + t1042 (t1006 * t1188 + t1302) * qJD(5) + t809 * qJD(6) + t1041, qJD(5) * t1165 + t1043 (-pkin(5) * t1455 + pkin(12) * t1165) * qJD(5) + t1047; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1538, -t1045, t1003 * t1159 - t1371, t1538, t1006 * t1159 - t1372, qJD(3) * t1208 + t994, qJD(5) * t810 - qJD(6) * t904 - t1040, qJD(5) * t809 + qJD(6) * t903 - t1039, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t126, -qJD(3) * t124, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t42 + qJD(4) * t47, -qJD(3) * t45 + qJD(4) * t46, -qJD(3) * t18 - qJD(4) * t41, -qJD(3) * t6 + qJD(4) * t7 - t1184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t379, -qJD(3) * t377, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t131 - qJD(4) * t172, -qJD(3) * t134 + qJD(4) * t174, -qJD(3) * t95 - qJD(4) * t151, -qJD(3) * t35 - qJD(4) * t66 - t1176; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1536, -t1169, -t1162 * t1317, -t1536, -t1163 * t1317, t975, -qJD(4) * t552 + t1068, -qJD(4) * t550 + t1069, 0, 0, -qJD(4) * t577 + t1006 * t1292 - t1540, -qJD(4) * t384 - t1379 - t519, qJD(4) * t467 + qJD(6) * t762 - t1437, -qJD(4) * t575 + t1003 * t1293 + t1540, qJD(4) * t468 - qJD(6) * t758 + t1438, -t1054, qJD(4) * t88 + qJD(6) * t292 - t1080, qJD(4) * t89 + qJD(6) * t290 - t1079, qJD(4) * t51 - t1085, qJD(4) * t55 - t1088; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1229, -t1168, t1209, t1229, -t1211, qJD(3) * t1249, t1130, t1129, 0, 0, -t988 * t999 - t1329 - t1439, t1007 * t1186 - t1385 + t964, -t1171 - t1260, -t988 * t997 + t1329 - t1440, -t1170 + t1261, t1105, qJD(6) * t848 - t1042, -qJD(6) * t847 - t1041, -t1043, -t1047; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1256, t983 * qJD(6), 0, -t1256, 0, 0, -pkin(5) * t1321, -pkin(5) * t1320, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1535, -t1044, -t1006 * t1223 + t1352, t1535, t1003 * t1223 - t1353, -t1150, -pkin(12) * t1320 - t1058, pkin(12) * t1321 - t1057, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t67 + qJD(4) * t72, qJD(3) * t68 + qJD(4) * t73, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t222 + qJD(4) * t239, qJD(3) * t223 + qJD(4) * t240, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1537, -t1065, qJD(4) * t591 - qJD(5) * t762 + t1293, -t1537, qJD(4) * t590 + qJD(5) * t758 + t1292, t844, qJD(4) * t152 - qJD(5) * t292 + t1077, qJD(4) * t153 - qJD(5) * t290 + t1076, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1538, t1045, t1371 + (-t1264 + t1323) * t1007, -t1538, t1372 + (-t1263 - t1325) * t1007, qJD(3) * t1207 + t994, -qJD(5) * t848 + t1040, qJD(5) * t847 + t1039, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1535, t1044, t1006 * t1307 - t1352, -t1535, -t1003 * t1307 + t1353, t1150, t1058, t1057, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t12;
