% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:03
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRRR3_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR3_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR3_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR3_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:02:30
% EndTime: 2019-03-09 07:02:45
% DurationCPUTime: 5.69s
% Computational Cost: add. (7855->395), mult. (17699->670), div. (0->0), fcn. (16043->10), ass. (0->190)
t254 = sin(qJ(5));
t201 = t254 * qJD(5);
t202 = t254 * qJD(4);
t267 = t202 + t201;
t256 = cos(qJ(5));
t203 = t256 * qJD(5);
t266 = t256 * qJD(4) + t203;
t133 = cos(qJ(4));
t218 = t256 * t133;
t257 = -pkin(9) - pkin(8);
t131 = sin(qJ(4));
t190 = t257 * t254;
t89 = t131 * t190;
t68 = -t257 * t218 + t89;
t265 = t68 * qJD(5);
t191 = t257 * t256;
t217 = t254 * t133;
t67 = t131 * t191 + t257 * t217;
t132 = sin(qJ(3));
t232 = qJD(4) * t133;
t134 = cos(qJ(3));
t234 = qJD(3) * t134;
t264 = t131 * t234 + t132 * t232;
t88 = t256 * t131 + t217;
t206 = qJD(3) * t254;
t183 = t134 * t206;
t207 = qJD(3) * t256;
t184 = t134 * t207;
t189 = t132 * t218;
t196 = t131 * t184 + t133 * t183 + (qJD(4) + qJD(5)) * t189;
t261 = t131 * t267;
t151 = -t132 * t261 + t196;
t239 = t88 * t132;
t113 = t131 * t202;
t259 = t131 * t201 - t133 * t266 + t113;
t263 = t88 * t151 - t239 * t259;
t262 = -0.4e1 * t132;
t126 = t131 ^ 2;
t128 = t133 ^ 2;
t198 = qJD(4) * (t126 - t128);
t122 = -cos(pkin(11)) * pkin(1) - pkin(2);
t249 = t134 * pkin(3);
t168 = t122 - t249;
t260 = t257 * t132 + t168;
t192 = t266 * t131 + t267 * t133;
t125 = qJD(3) * t132;
t123 = t254 * t131;
t178 = t123 - t218;
t258 = t178 * t125 - t134 * t192;
t255 = cos(qJ(6));
t253 = pkin(3) * t132;
t252 = pkin(8) * t134;
t251 = t132 * pkin(8);
t250 = t133 * pkin(3);
t130 = sin(qJ(6));
t40 = t131 * t183 + t132 * t192 - t133 * t184;
t74 = -t132 * t123 + t189;
t51 = -t130 * t239 + t255 * t74;
t16 = t51 * qJD(6) - t130 * t40 + t255 * t151;
t179 = t255 * t239;
t50 = t130 * t74 + t179;
t248 = t50 * t16;
t230 = qJD(6) * t130;
t15 = qJD(6) * t179 + t130 * t151 + t74 * t230 + t255 * t40;
t247 = t51 * t15;
t246 = t74 * t40;
t169 = t130 * t178;
t205 = qJD(6) * t255;
t22 = -qJD(6) * t169 - t130 * t259 + t255 * t192 + t88 * t205;
t166 = t255 * t178;
t62 = t130 * t88 + t166;
t244 = t15 * t62 - t51 * t22;
t243 = t40 * t178 - t74 * t192;
t156 = t260 * t133;
t121 = sin(pkin(11)) * pkin(1) + pkin(7);
t242 = t131 * t121;
t200 = -pkin(4) - t242;
t145 = t200 * t134 + t156;
t47 = t254 * t145;
t241 = t131 * t132;
t161 = -t168 + t251;
t240 = t133 * t134;
t91 = t121 * t240;
t65 = -t131 * t161 + t91;
t55 = -pkin(9) * t241 + t65;
t30 = t256 * t55 + t47;
t105 = t132 * t121;
t77 = pkin(4) * t241 + t105;
t127 = t132 ^ 2;
t236 = -t134 ^ 2 + t127;
t235 = qJD(3) * t133;
t233 = qJD(4) * t131;
t231 = qJD(4) * t134;
t229 = -0.2e1 * pkin(3) * qJD(4);
t228 = 0.2e1 * qJD(3) * t122;
t227 = t256 * pkin(4);
t226 = t254 * pkin(4);
t225 = pkin(5) * t125;
t224 = pkin(4) * t233;
t223 = pkin(5) * t230;
t92 = t121 * t234;
t66 = t264 * pkin(4) + t92;
t222 = t257 * t134;
t221 = t134 * t242;
t220 = t133 * t105;
t124 = -t133 * pkin(4) - pkin(3);
t216 = t126 * t234;
t215 = qJD(4) * t121 * t127;
t214 = t131 * t231;
t212 = t133 * t231;
t210 = t131 * t232;
t209 = t132 * t234;
t208 = t133 * t234;
t199 = -0.2e1 * t223;
t197 = t236 * qJD(3);
t195 = pkin(4) * t203;
t194 = pkin(4) * t201;
t193 = pkin(5) * t205;
t188 = t131 * t208;
t187 = t127 * t210;
t186 = t227 + pkin(5);
t185 = t255 * t254;
t48 = t256 * t145;
t29 = -t254 * t55 + t48;
t182 = -t249 - t251;
t181 = -t252 + t253;
t21 = qJD(6) * t166 + t130 * t192 + t88 * t230 + t255 * t259;
t63 = t255 * t88 - t169;
t180 = -t16 * t63 + t21 * t50;
t150 = t133 * t161 + t221;
t177 = -t131 * t65 + t133 * t150;
t176 = -t131 * t150 - t133 * t65;
t173 = qJD(4) * t191;
t172 = qJD(4) * t190;
t140 = (-t131 * t260 - t91) * qJD(4) + (t133 * t222 + (-t200 + t250) * t132) * qJD(3);
t141 = (t156 - t221) * qJD(4) + (-t220 + (t222 + t253) * t131) * qJD(3);
t137 = t256 * t140 - t254 * t141;
t136 = -qJD(5) * t47 - t55 * t203 + t137;
t135 = t40 * pkin(10) + t136 + t225;
t8 = -qJD(5) * t48 - t254 * t140 - t256 * t141 + t55 * t201;
t143 = -pkin(10) * t151 - t8;
t162 = -t134 * pkin(5) - t74 * pkin(10) + t29;
t157 = t255 * t162;
t20 = -t239 * pkin(10) + t30;
t1 = -qJD(6) * t157 - t130 * t135 - t255 * t143 + t20 * t230;
t171 = t62 * t125 - t134 * t22;
t170 = t131 * t181;
t167 = t255 * t186;
t41 = -t67 * qJD(5) - t131 * t173 - t133 * t172;
t158 = t130 * t162;
t38 = t150 * qJD(4) + (-t170 + t220) * qJD(3);
t39 = -t65 * qJD(4) + (t131 * t105 + t133 * t181) * qJD(3);
t153 = qJD(4) * t177 - t131 * t39 - t133 * t38;
t57 = -t255 * t195 - qJD(6) * t167 + (t254 * qJD(6) + t201) * t130 * pkin(4);
t152 = -t88 * pkin(10) + t67;
t11 = t255 * t20 + t158;
t149 = t130 * t152;
t148 = -pkin(10) * t192 - t41;
t146 = t255 * t152;
t144 = (qJD(5) + qJD(6)) * (-t130 * t256 - t185) * pkin(4);
t142 = -t130 * t143 + t255 * t135;
t139 = pkin(10) * t259 - t131 * t172 + t133 * t173 - t265;
t138 = -qJD(6) * t158 - t20 * t205 + t142;
t116 = t128 * t234;
t112 = -0.2e1 * t209;
t101 = t128 * t209;
t97 = t126 * t209;
t84 = t131 * t125 - t212;
t82 = t132 * t235 + t214;
t81 = t132 * t233 - t208;
t79 = pkin(4) * t185 + t130 * t186;
t78 = -t130 * t226 + t167;
t73 = pkin(5) * t178 + t124;
t69 = t132 * t198 - t188;
t58 = t144 - t223;
t56 = t239 * pkin(5) + t77;
t54 = pkin(5) * t192 + t224;
t53 = -pkin(10) * t178 + t68;
t43 = t88 * t125 + t134 * t259;
t42 = -t265 + (t133 * t191 - t89) * qJD(4);
t28 = t255 * t53 + t149;
t27 = -t130 * t53 + t146;
t25 = pkin(5) * t151 + t66;
t18 = t63 * t125 + t134 * t21;
t10 = -t130 * t20 + t157;
t9 = -t30 * qJD(5) + t137;
t7 = -qJD(6) * t149 - t130 * t148 + t255 * t139 - t53 * t205;
t6 = -qJD(6) * t146 - t130 * t139 - t255 * t148 + t53 * t230;
t2 = -qJD(6) * t11 + t142;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t209, -0.2e1 * t197, 0, t112, 0, 0, t132 * t228, t134 * t228, 0, 0, 0.2e1 * t101 - 0.2e1 * t187, 0.2e1 * t127 * t198 + t188 * t262, 0.2e1 * t132 * t214 + 0.2e1 * t236 * t235, 0.2e1 * t97 + 0.2e1 * t187, -0.2e1 * t131 * t197 + 0.2e1 * t132 * t212, t112, 0.2e1 * t133 * t215 - 0.2e1 * t134 * t39 + 0.2e1 * (-t150 + 0.2e1 * t221) * t125, -0.2e1 * t131 * t215 - 0.2e1 * t134 * t38 + 0.2e1 * (-t65 + 0.2e1 * t91) * t125, 0.2e1 * t177 * t234 + 0.2e1 * (qJD(4) * t176 + t131 * t38 - t133 * t39) * t132, 0.2e1 * t121 ^ 2 * t209 - 0.2e1 * t150 * t39 - 0.2e1 * t65 * t38, -0.2e1 * t246, -0.2e1 * t74 * t151 + 0.2e1 * t239 * t40, 0.2e1 * t74 * t125 + 0.2e1 * t134 * t40, 0.2e1 * t239 * t151, -0.2e1 * t239 * t125 + 0.2e1 * t134 * t151, t112, -0.2e1 * t9 * t134 + 0.2e1 * t66 * t239 + 0.2e1 * t77 * t196 + 0.2e1 * (t29 * qJD(3) - t261 * t77) * t132, -0.2e1 * t30 * t125 - 0.2e1 * t134 * t8 - 0.2e1 * t77 * t40 + 0.2e1 * t66 * t74, -0.2e1 * t30 * t151 + 0.2e1 * t8 * t239 + 0.2e1 * t29 * t40 - 0.2e1 * t9 * t74, 0.2e1 * t29 * t9 - 0.2e1 * t30 * t8 + 0.2e1 * t66 * t77, -0.2e1 * t247, 0.2e1 * t50 * t15 - 0.2e1 * t51 * t16, 0.2e1 * t125 * t51 + 0.2e1 * t134 * t15, 0.2e1 * t248, -0.2e1 * t50 * t125 + 0.2e1 * t134 * t16, t112, 0.2e1 * t10 * t125 - 0.2e1 * t134 * t2 + 0.2e1 * t56 * t16 + 0.2e1 * t25 * t50, -0.2e1 * t1 * t134 - 0.2e1 * t11 * t125 - 0.2e1 * t56 * t15 + 0.2e1 * t25 * t51, 0.2e1 * t1 * t50 + 0.2e1 * t10 * t15 - 0.2e1 * t11 * t16 - 0.2e1 * t2 * t51, -0.2e1 * t1 * t11 + 0.2e1 * t10 * t2 + 0.2e1 * t25 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153 * t132 + (t236 * t121 - t176 * t134) * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t125 * t77 - t66 * t134 - t151 * t29 - t239 * t9 - t30 * t40 - t8 * t74, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1 * t51 - t10 * t16 - t11 * t15 + t125 * t56 - t134 * t25 - t2 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t101 + 0.2e1 * t97 - 0.2e1 * t209, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t246 + 0.2e1 * t239 * t196 + 0.2e1 * (-t239 * t261 - t234) * t132, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t209 - 0.2e1 * t247 + 0.2e1 * t248; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t234, 0, -t125, 0, -t92, t121 * t125, 0, 0, -t69, t210 * t262 + t116 - t216, t84, t69, t82, 0 (pkin(8) * t240 + (t242 - t250) * t132) * qJD(4) + (t131 * t182 - t91) * qJD(3) (t170 + t220) * qJD(4) + (t133 * t182 + t221) * qJD(3), t153, -pkin(3) * t92 + pkin(8) * t153, -t259 * t74 - t40 * t88, t243 - t263, t43, t151 * t178 + t239 * t192, -t258, 0, t124 * t151 + t67 * t125 - t42 * t134 + t66 * t178 + t77 * t192 + t239 * t224, -t124 * t40 - t68 * t125 - t41 * t134 + t224 * t74 - t259 * t77 + t66 * t88, -t68 * t151 + t178 * t8 - t192 * t30 + t239 * t41 + t259 * t29 + t67 * t40 - t42 * t74 - t9 * t88, t124 * t66 + t224 * t77 + t29 * t42 - t30 * t41 + t67 * t9 - t68 * t8, -t15 * t63 - t21 * t51, t180 + t244, t18, t16 * t62 + t22 * t50, -t171, 0, t125 * t27 - t134 * t7 + t73 * t16 + t56 * t22 + t25 * t62 + t54 * t50, -t125 * t28 - t134 * t6 - t73 * t15 - t56 * t21 + t25 * t63 + t54 * t51, t1 * t62 + t10 * t21 - t11 * t22 + t15 * t27 - t16 * t28 - t2 * t63 + t50 * t6 - t51 * t7, -t1 * t28 + t10 * t7 - t11 * t6 + t2 * t27 + t25 * t73 + t54 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t125, -t234, 0, 0, 0, 0, 0, 0, 0, 0, -t82, t84, t116 + t216 (-t253 + (t126 + t128) * t252) * qJD(3), 0, 0, 0, 0, 0, 0, t258, t43, t243 + t263, -pkin(4) * t214 + t124 * t125 - t151 * t67 - t239 * t42 - t40 * t68 - t74 * t41, 0, 0, 0, 0, 0, 0, t171, t18, -t180 + t244, t125 * t73 - t134 * t54 - t15 * t28 - t16 * t27 - t50 * t7 - t51 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t210, -0.2e1 * t198, 0, -0.2e1 * t210, 0, 0, t131 * t229, t133 * t229, 0, 0, -0.2e1 * t88 * t259, 0.2e1 * t178 * t259 - 0.2e1 * t192 * t88, 0, 0.2e1 * t178 * t192, 0, 0, 0.2e1 * t124 * t192 + 0.2e1 * t178 * t224, -0.2e1 * t124 * t259 + 0.2e1 * t224 * t88, 0.2e1 * t178 * t41 - 0.2e1 * t192 * t68 + 0.2e1 * t259 * t67 - 0.2e1 * t42 * t88, 0.2e1 * t124 * t224 - 0.2e1 * t41 * t68 + 0.2e1 * t42 * t67, -0.2e1 * t63 * t21, 0.2e1 * t21 * t62 - 0.2e1 * t22 * t63, 0, 0.2e1 * t62 * t22, 0, 0, 0.2e1 * t22 * t73 + 0.2e1 * t54 * t62, -0.2e1 * t21 * t73 + 0.2e1 * t54 * t63, 0.2e1 * t21 * t27 - 0.2e1 * t22 * t28 + 0.2e1 * t6 * t62 - 0.2e1 * t63 * t7, 0.2e1 * t27 * t7 - 0.2e1 * t28 * t6 + 0.2e1 * t54 * t73; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t81, 0, -t264, t125, t39, t38, 0, 0, 0, 0, -t40, 0, -t151, t125, pkin(4) * t132 * t207 + t134 * t194 + t136 (-t132 * t206 + t134 * t203) * pkin(4) + t8 (t254 * (t113 * t132 - t196) + t256 * t40 + (-t256 * t239 + (t241 * t254 + t74) * t254) * qJD(5)) * pkin(4) (-t254 * t8 + t256 * t9 + (-t254 * t29 + t256 * t30) * qJD(5)) * pkin(4), 0, 0, -t15, 0, -t16, t125, t125 * t78 - t58 * t134 + t138, -t125 * t79 - t134 * t57 + t1, t15 * t78 - t16 * t79 + t50 * t57 - t51 * t58, -t1 * t79 + t10 * t58 - t11 * t57 + t2 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t264, t81, 0, 0, 0, 0, 0, 0, 0, 0, -t151, t40, 0 (-t151 * t256 + t239 * t201 + t74 * t203 - t40 * t254) * pkin(4), 0, 0, 0, 0, 0, 0, -t16, t15, 0, -t15 * t79 - t16 * t78 - t50 * t58 - t51 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, 0, -t233, 0, -pkin(8) * t232, pkin(8) * t233, 0, 0, 0, 0, -t259, 0, -t192, 0, t42, t41, -t178 * t195 - t192 * t226 + t194 * t88 + t227 * t259 (-t254 * t41 + t256 * t42 + (-t254 * t67 + t256 * t68) * qJD(5)) * pkin(4), 0, 0, -t21, 0, -t22, 0, t7, t6, t21 * t78 - t22 * t79 + t57 * t62 - t58 * t63, t27 * t58 - t28 * t57 - t6 * t79 + t7 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t194, -0.2e1 * t195, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t58, 0.2e1 * t57, 0, -0.2e1 * t57 * t79 + 0.2e1 * t58 * t78; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, 0, -t151, t125, t9, t8, 0, 0, 0, 0, -t15, 0, -t16, t125, t134 * t223 + t255 * t225 + t138 (-t125 * t130 + t134 * t205) * pkin(5) + t1 (t255 * t15 - t130 * t16 + (t130 * t51 - t255 * t50) * qJD(6)) * pkin(5) (t255 * t2 - t1 * t130 + (-t10 * t130 + t255 * t11) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t151, t40, 0, 0, 0, 0, 0, 0, 0, 0, -t16, t15, 0 (-t255 * t16 - t130 * t15 + (t130 * t50 + t255 * t51) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t259, 0, -t192, 0, t42, t41, 0, 0, 0, 0, -t21, 0, -t22, 0, t7, t6 (t255 * t21 - t130 * t22 + (t130 * t63 - t255 * t62) * qJD(6)) * pkin(5) (t255 * t7 - t130 * t6 + (-t130 * t27 + t255 * t28) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194, -t195, 0, 0, 0, 0, 0, 0, 0, 0, t144 + t199, -t193 + t57, 0 (t255 * t58 - t130 * t57 + (-t130 * t78 + t255 * t79) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199, -0.2e1 * t193, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t15, 0, -t16, t125, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t16, t15, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t21, 0, -t22, 0, t7, t6, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, t57, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t223, -t193, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
