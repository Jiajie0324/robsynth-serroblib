% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:03
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRR3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:02:34
% EndTime: 2019-03-09 07:03:16
% DurationCPUTime: 27.69s
% Computational Cost: add. (12438->654), mult. (26778->855), div. (0->0), fcn. (28897->10), ass. (0->553)
t942 = qJD(5) + qJD(6);
t951 = qJD(4) + t942;
t531 = cos(qJ(4));
t868 = pkin(8) + pkin(9);
t480 = t868 * t531;
t530 = cos(qJ(5));
t470 = t530 * t480;
t527 = sin(qJ(4));
t479 = t868 * t527;
t526 = sin(qJ(5));
t792 = t526 * t479;
t384 = t470 - t792;
t770 = t530 * t531;
t791 = t526 * t527;
t462 = -t770 + t791;
t314 = -pkin(10) * t462 + t384;
t525 = sin(qJ(6));
t529 = cos(qJ(6));
t771 = t530 * t527;
t790 = t526 * t531;
t602 = t771 + t790;
t636 = t530 * t479 + t526 * t480;
t884 = -pkin(10) * t602 - t636;
t163 = t529 * t314 + t525 * t884;
t948 = t951 * t163;
t945 = t525 * t314 - t529 * t884;
t947 = t951 * t945;
t532 = cos(qJ(3));
t851 = t532 / 0.2e1;
t946 = t163 * t851;
t852 = -t532 / 0.2e1;
t943 = t852 * t945;
t699 = t532 * qJD(1);
t528 = sin(qJ(3));
t789 = t527 * t528;
t430 = -t526 * t789 + t528 * t770;
t413 = t529 * t430;
t427 = t602 * t528;
t800 = t525 * t427;
t886 = t413 - t800;
t900 = t886 * t699;
t907 = t602 * t532;
t412 = t529 * t907;
t431 = t462 * t532;
t798 = t525 * t431;
t618 = -t412 / 0.2e1 + t798 / 0.2e1;
t885 = t525 * t462 - t529 * t602;
t921 = t885 * t532;
t923 = -t921 / 0.2e1 + t618;
t928 = qJD(3) * t923;
t941 = t900 + t928;
t922 = t921 / 0.2e1 + t618;
t929 = qJD(3) * t922;
t939 = t929 - t900;
t698 = qJD(4) + qJD(5);
t924 = qJD(6) + t698;
t930 = qJD(1) * t922;
t65 = t924 * t885 - t930;
t720 = t923 * qJD(2);
t638 = -t529 * t462 - t525 * t602;
t917 = t638 ^ 2 - t885 ^ 2;
t925 = qJD(3) * t917;
t849 = pkin(4) * t531;
t517 = -pkin(3) - t849;
t418 = pkin(5) * t462 + t517;
t506 = sin(pkin(11)) * pkin(1) + pkin(7);
t850 = pkin(4) * t527;
t644 = t506 + t850;
t617 = t644 * t528;
t844 = t427 * pkin(5);
t559 = -t617 - t844;
t860 = t885 / 0.2e1;
t865 = t886 / 0.2e1;
t889 = t418 * t865 + t559 * t860;
t640 = t529 * t427 + t525 * t430;
t871 = t640 * qJD(6);
t902 = t698 * t640;
t898 = t902 + t871;
t895 = t640 ^ 2 - t886 ^ 2;
t920 = qJD(1) * t895;
t916 = t924 * t922;
t915 = t924 * t923;
t543 = t559 * t638;
t912 = -t543 / 0.2e1;
t544 = t559 * t640;
t195 = t559 * t886;
t736 = qJD(3) * t885;
t906 = t638 * t736;
t905 = t640 * t699;
t739 = qJD(1) * t886;
t904 = t640 * t739;
t903 = t640 * t860;
t899 = t924 * t638;
t894 = t427 * t698;
t821 = t418 * t640;
t888 = t912 - t821 / 0.2e1;
t887 = t698 * t886;
t507 = -cos(pkin(11)) * pkin(1) - pkin(2);
t623 = -pkin(3) * t532 - t528 * pkin(8);
t450 = t507 + t623;
t432 = t531 * t450;
t786 = t528 * t531;
t694 = pkin(9) * t786;
t814 = t506 * t527;
t303 = -t694 + t432 + (-pkin(4) - t814) * t532;
t273 = t530 * t303;
t478 = t532 * t506;
t682 = t531 * t478;
t370 = t527 * t450 + t682;
t331 = -pkin(9) * t789 + t370;
t794 = t526 * t331;
t164 = -t273 + t794;
t843 = t430 * pkin(10);
t590 = -t164 - t843;
t564 = t525 * t590;
t548 = t564 / 0.2e1;
t837 = t532 * pkin(5);
t685 = t837 / 0.2e1;
t308 = t530 * t331;
t165 = t526 * t303 + t308;
t846 = pkin(10) * t427;
t127 = t165 - t846;
t784 = t529 * t127;
t655 = -t784 / 0.2e1;
t120 = t590 - t837;
t811 = t525 * t120;
t765 = -t811 / 0.2e1 + t655;
t592 = t525 * t685 + t765;
t18 = t548 + t784 / 0.2e1 + t592;
t389 = t525 * pkin(5);
t652 = -t413 / 0.2e1;
t275 = t652 + t413 / 0.2e1;
t710 = t275 * qJD(2);
t883 = t18 * qJD(1) - t389 * qJD(4) + t710;
t684 = t527 * t478;
t369 = -t432 + t684;
t330 = -t369 - t694;
t795 = t526 * t330;
t181 = -t308 - t795;
t132 = t181 + t846;
t649 = t132 / 0.2e1 + t127 / 0.2e1;
t620 = t649 * t529;
t772 = t530 * t330;
t182 = t772 - t794;
t133 = t182 - t843;
t648 = -t133 / 0.2e1 + t120 / 0.2e1;
t838 = t530 * pkin(4);
t677 = pkin(5) + t838;
t624 = t525 * t677;
t773 = t529 * t526;
t443 = pkin(4) * t773 + t624;
t819 = t443 * t532;
t14 = -t819 / 0.2e1 + t620 + t648 * t525;
t882 = qJD(1) * t14 + qJD(4) * t443 - t710;
t576 = -t790 / 0.2e1 - t771 / 0.2e1;
t855 = t602 / 0.2e1;
t346 = (t855 + t576) * t532;
t707 = t346 * qJD(2);
t733 = qJD(3) * t517;
t836 = t532 * pkin(8);
t841 = t528 * pkin(3);
t481 = -t836 + t841;
t471 = t531 * t481;
t473 = t506 * t789;
t840 = t528 * pkin(4);
t344 = -pkin(9) * t531 * t532 + t471 + t473 + t840;
t316 = t530 * t344;
t468 = t527 * t481;
t683 = t506 * t786;
t788 = t527 * t532;
t366 = -pkin(9) * t788 + t468 - t683;
t793 = t526 * t366;
t619 = t316 / 0.2e1 - t793 / 0.2e1;
t812 = t517 * t430;
t557 = -t812 / 0.2e1 + t619;
t588 = t617 / 0.2e1;
t822 = t384 * t532;
t89 = -t822 / 0.2e1 - t602 * t588 + t557;
t881 = qJD(1) * t89 - t602 * t733 + t707;
t341 = t462 * t850 + t517 * t602;
t858 = -t427 / 0.2e1;
t540 = -t384 * t851 + t850 * t858;
t687 = t838 / 0.2e1;
t854 = -t602 / 0.2e1;
t856 = -t462 / 0.2e1;
t60 = (t644 * t854 + t849 * t856 + t687) * t528 + t540 + t557;
t880 = t60 * qJD(1) - t341 * qJD(3) + t707;
t244 = t418 * t638;
t847 = pkin(5) * t602;
t137 = t847 * t885 - t244;
t568 = t945 * t532;
t315 = t526 * t344;
t354 = t530 * t366;
t752 = t354 + t315;
t147 = -pkin(10) * t907 + t752;
t780 = t529 * t147;
t653 = -t780 / 0.2e1;
t641 = t316 - t793;
t839 = t528 * pkin(5);
t141 = pkin(10) * t431 + t641 + t839;
t807 = t525 * t141;
t581 = -t807 / 0.2e1 + t653;
t589 = -t617 / 0.2e1;
t660 = t821 / 0.2e1;
t853 = -t528 / 0.2e1;
t857 = -t430 / 0.2e1;
t7 = t568 / 0.2e1 + t660 + t638 * t589 + (t525 * t853 + t638 * t858 + t854 * t886 - t857 * t885) * pkin(5) + t581;
t661 = t638 * t851;
t774 = t529 * t431;
t799 = t525 * t907;
t750 = t799 / 0.2e1 + t774 / 0.2e1;
t190 = t661 + t750;
t715 = t190 * qJD(2);
t879 = t7 * qJD(1) + t137 * qJD(3) + t715;
t421 = t847 + t850;
t126 = -t421 * t885 + t244;
t695 = pkin(4) * t786;
t848 = pkin(5) * t430;
t594 = t695 + t848;
t859 = -t421 / 0.2e1;
t534 = t594 * t860 + t859 * t886 - t943;
t542 = t443 * t853 + t581;
t4 = t660 + t543 / 0.2e1 + t534 + t542;
t878 = t4 * qJD(1) - t126 * qJD(3) + t715;
t243 = t418 * t885;
t136 = t638 * t847 + t243;
t806 = t525 * t147;
t656 = -t806 / 0.2e1;
t781 = t529 * t141;
t580 = t656 + t781 / 0.2e1;
t533 = t580 - t889;
t691 = t847 / 0.2e1;
t692 = t848 / 0.2e1;
t538 = -t163 * t852 - t638 * t692 + t640 * t691;
t689 = t839 / 0.2e1;
t8 = t529 * t689 + t533 - t538;
t877 = t8 * qJD(1) + t136 * qJD(3) + t720;
t125 = -t421 * t638 - t243;
t861 = t638 / 0.2e1;
t535 = t594 * t861 + t640 * t859 - t946;
t482 = t529 * t677;
t842 = t526 * pkin(4);
t503 = t525 * t842;
t442 = t503 - t482;
t659 = t442 * t853;
t3 = t659 + t533 + t535;
t876 = t3 * qJD(1) - t125 * qJD(3) + t720;
t520 = t527 ^ 2;
t522 = t531 ^ 2;
t498 = t522 - t520;
t701 = t528 * qJD(1);
t674 = t531 * t701;
t870 = qJD(3) * t498 - 0.2e1 * t527 * t674;
t577 = t791 / 0.2e1 - t770 / 0.2e1;
t348 = (t856 + t577) * t532;
t705 = t348 * qJD(2);
t869 = t636 * t698 - t705;
t867 = -t273 / 0.2e1;
t866 = -t640 / 0.2e1;
t864 = -t303 / 0.2e1;
t651 = -t308 / 0.2e1;
t650 = -t470 / 0.2e1;
t835 = pkin(4) * qJD(4);
t834 = pkin(4) * qJD(5);
t833 = pkin(5) * qJD(5);
t832 = pkin(5) * qJD(6);
t294 = -t774 - t799;
t441 = pkin(4) * t788 + t478;
t343 = pkin(5) * t907 + t441;
t56 = t784 + t811;
t2 = (t780 + t807) * t532 + t343 * t886 + t294 * t844 + (t294 * t644 - t56) * t528;
t831 = t2 * qJD(1);
t57 = -t564 - t784;
t32 = t532 * t57 - t640 * t848 + t195;
t830 = qJD(1) * t32;
t563 = t529 * t590;
t810 = t525 * t127;
t58 = t563 - t810;
t33 = t58 * t532 + t848 * t886 + t544;
t829 = qJD(1) * t33;
t783 = t529 * t132;
t808 = t525 * t133;
t63 = t783 - t808;
t34 = t63 * t532 - t594 * t640 + t195;
t828 = qJD(1) * t34;
t782 = t529 * t133;
t809 = t525 * t132;
t64 = t782 + t809;
t35 = t64 * t532 + t594 * t886 + t544;
t827 = qJD(1) * t35;
t785 = t529 * t120;
t55 = -t785 + t810;
t40 = -t55 * t532 + t544;
t826 = qJD(1) * t40;
t41 = -t56 * t532 + t195;
t825 = qJD(1) * t41;
t823 = t636 * t532;
t820 = t442 * t532;
t796 = t525 * t530;
t451 = (t773 + t796) * pkin(4);
t818 = t451 * t532;
t452 = t529 * t838 - t503;
t817 = t452 * t532;
t48 = t752 * t532 + t441 * t430 + (-t431 * t644 - t165) * t528;
t815 = t48 * qJD(1);
t813 = t517 * t427;
t521 = t528 ^ 2;
t769 = t531 * t521;
t686 = pkin(4) * t851;
t626 = t686 + t330 / 0.2e1;
t71 = t530 * t626 + t867;
t767 = t71 * qJD(1);
t291 = t412 - t798;
t88 = -t291 * t886 - t294 * t640;
t766 = t88 * qJD(1);
t658 = t810 / 0.2e1;
t764 = -t785 / 0.2e1 + t658;
t763 = -t564 / 0.2e1 + t655;
t762 = t658 - t563 / 0.2e1;
t146 = t427 * t462 - t430 * t602;
t761 = t698 * t146;
t231 = -t427 * t855 + t430 * t856;
t760 = t698 * t231;
t759 = t698 * t275;
t754 = t698 * t348;
t347 = (t856 - t577) * t532;
t753 = t698 * t347;
t749 = t698 * t430;
t523 = t532 ^ 2;
t499 = t523 - t521;
t352 = t430 * t617;
t100 = t181 * t532 - t427 * t695 - t352;
t748 = qJD(1) * t100;
t101 = t182 * t532 + (-t427 * t644 + t430 * t849) * t528;
t747 = qJD(1) * t101;
t107 = -t164 * t532 - t427 * t617;
t746 = qJD(1) * t107;
t108 = -t165 * t532 - t352;
t745 = qJD(1) * t108;
t153 = t294 * t532 - t528 * t886;
t744 = qJD(1) * t153;
t662 = t638 * t852;
t187 = -t662 - t750;
t742 = qJD(1) * t187;
t188 = t661 - t750;
t111 = qJD(1) * t188;
t255 = -t369 * t532 - t521 * t814;
t741 = qJD(1) * t255;
t256 = -t370 * t532 - t506 * t769;
t740 = qJD(1) * t256;
t296 = -t430 * t528 - t431 * t532;
t738 = qJD(1) * t296;
t737 = qJD(1) * t430;
t735 = qJD(3) * t418;
t734 = qJD(3) * t602;
t732 = qJD(3) * t527;
t731 = qJD(3) * t528;
t730 = qJD(3) * t531;
t729 = qJD(3) * t532;
t728 = qJD(4) * t527;
t727 = qJD(4) * t531;
t726 = qJD(4) * t532;
t725 = qJD(5) * t517;
t723 = qJD(6) * t418;
t152 = -t291 * t532 + t528 * t640;
t722 = t152 * qJD(1);
t718 = t187 * qJD(3);
t717 = t188 * qJD(3);
t189 = -t662 + t750;
t716 = t189 * qJD(3);
t106 = t190 * qJD(3);
t200 = t369 * t528 + (-t473 + t471) * t532;
t714 = t200 * qJD(1);
t201 = t468 * t532 + (-t370 + t682) * t528;
t713 = t201 * qJD(1);
t212 = t427 * t431 - t430 * t907;
t712 = t212 * qJD(1);
t272 = t886 * qJD(6);
t295 = t528 * t427 - t532 * t907;
t708 = t295 * qJD(1);
t345 = (t854 + t576) * t532;
t319 = t345 * qJD(1);
t321 = t347 * qJD(1);
t706 = t347 * qJD(3);
t322 = t348 * qJD(3);
t466 = t499 * t527;
t704 = t466 * qJD(1);
t467 = t523 * t531 - t769;
t703 = t467 * qJD(1);
t702 = t499 * qJD(1);
t700 = t528 * qJD(4);
t39 = t638 * t866 - t640 * t861 + t860 * t886 + t865 * t885;
t50 = -t638 * t640 + t885 * t886;
t697 = t50 * qJD(6) + t39 * t698;
t98 = t638 * t865 + t903;
t99 = t861 * t886 + t903;
t696 = t99 * qJD(6) + t698 * t98;
t693 = t849 / 0.2e1;
t688 = -t838 / 0.2e1;
t681 = -t187 * qJD(6) - t188 * t698;
t680 = -t189 * qJD(6) - t190 * t698;
t226 = 0.2e1 * t652 + t800;
t679 = t226 * qJD(6) - t887;
t678 = t226 * t698 - t272;
t675 = t430 * t699;
t673 = t527 * t730;
t672 = t638 * t731;
t671 = t462 * t731;
t670 = t527 * t726;
t669 = t531 * t726;
t668 = t507 * t701;
t667 = t507 * t699;
t666 = t527 * t727;
t665 = t528 * t729;
t664 = t528 * t699;
t663 = t528 * t730;
t657 = -t808 / 0.2e1;
t654 = -t782 / 0.2e1;
t645 = -t315 / 0.2e1 - t354 / 0.2e1;
t643 = pkin(4) * t698;
t642 = pkin(5) * t942;
t632 = t698 * t602;
t631 = t698 * t532;
t630 = -qJD(4) + t699;
t629 = t527 * t663;
t627 = t689 + t141 / 0.2e1;
t625 = t699 - qJD(4) / 0.2e1;
t621 = t649 * t525;
t1 = (t781 - t806) * t532 + t55 * t528 - t343 * t640 + t559 * t291;
t616 = t1 * qJD(1);
t615 = -qJD(5) + t630;
t611 = t462 * t589 - t813 / 0.2e1 + t645;
t11 = qJD(3) * t39 + t920;
t47 = t164 * t528 - t441 * t427 + t532 * t641 - t617 * t907;
t601 = t47 * qJD(1);
t26 = qJD(1) * t39 + t925;
t600 = qJD(3) * t50 + t920;
t599 = qJD(1) * t50 + t925;
t342 = -t462 * t517 + t602 * t850;
t541 = t636 * t851 + t850 * t857;
t575 = t813 / 0.2e1 + t645;
t59 = (-t842 / 0.2e1 - t602 * t693 + t644 * t462 / 0.2e1) * t528 + t541 + t575;
t597 = -t59 * qJD(1) + t342 * qJD(3);
t380 = t650 + t470 / 0.2e1;
t69 = t651 + t308 / 0.2e1 + (t864 + t626) * t526;
t596 = t69 * qJD(1) + t380 * qJD(3);
t595 = t630 * t528;
t240 = t427 ^ 2 - t430 ^ 2;
t96 = qJD(1) * t240 + qJD(3) * t146;
t309 = t462 ^ 2 - t602 ^ 2;
t102 = qJD(1) * t146 + qJD(3) * t309;
t169 = qJD(1) * t275;
t593 = t836 / 0.2e1 - t841 / 0.2e1;
t591 = t529 * t685 + t764;
t587 = -qJD(5) / 0.2e1 + t625;
t566 = t593 * t527;
t377 = t468 / 0.2e1 - t566;
t586 = pkin(3) * t730 - qJD(1) * t377;
t565 = t593 * t531;
t378 = -t471 / 0.2e1 + t565;
t585 = pkin(3) * t732 - qJD(1) * t378;
t583 = -t809 / 0.2e1 + t654;
t582 = t657 + t783 / 0.2e1;
t574 = -qJD(3) * t99 + t904;
t44 = qJD(3) * t98 - t904;
t573 = -qJD(1) * t99 + t906;
t53 = qJD(1) * t98 - t906;
t90 = t823 / 0.2e1 + t462 * t588 + t575;
t572 = qJD(1) * t90 + t462 * t733;
t570 = t531 * t595;
t128 = qJD(3) * t231 - t427 * t737;
t150 = qJD(1) * t231 - t462 * t734;
t454 = (t520 / 0.2e1 - t522 / 0.2e1) * t528;
t569 = -qJD(1) * t454 + t673;
t567 = -t602 * t589 + t812 / 0.2e1 + t619;
t562 = qJD(1) * t527 * t769 + qJD(3) * t454;
t465 = t498 * t521;
t561 = qJD(1) * t465 + 0.2e1 * t629;
t558 = t576 * t532;
t15 = t820 / 0.2e1 + t648 * t529 - t621;
t553 = qJD(1) * t15 - qJD(4) * t442;
t547 = t563 / 0.2e1;
t20 = t547 - t810 / 0.2e1 + t591;
t390 = t482 / 0.2e1 + (t688 + pkin(5) / 0.2e1) * t529;
t551 = t20 * qJD(1) - t390 * qJD(4);
t22 = t657 - t818 / 0.2e1 + t548 + t620;
t550 = qJD(1) * t22 + qJD(4) * t451;
t23 = t654 - t817 / 0.2e1 + t547 - t621;
t549 = qJD(1) * t23 + qJD(4) * t452;
t536 = t889 + t946;
t28 = -t536 + t580;
t546 = qJD(1) * t28 + t735 * t885 + t720;
t537 = t418 * t866 + t912 + t943;
t29 = -t537 + t581;
t545 = qJD(1) * t29 + qJD(2) * t189 - t638 * t735;
t512 = t731 / 0.2e1;
t511 = -t701 / 0.2e1;
t510 = t701 / 0.2e1;
t502 = t527 * t731;
t461 = t625 * t528;
t446 = t454 * qJD(4);
t445 = t452 * qJD(5);
t444 = t451 * qJD(5);
t440 = t602 * t731;
t426 = t443 * qJD(6);
t425 = t442 * qJD(6);
t424 = t587 * t528;
t386 = (-qJD(6) / 0.2e1 + t587) * t528;
t376 = t503 - t482 / 0.2e1 + (-pkin(5) / 0.2e1 + t688) * t529;
t375 = -t389 / 0.2e1 - t624 / 0.2e1 + (-t773 - t796 / 0.2e1) * pkin(4);
t350 = -t907 / 0.2e1 + t558;
t349 = t907 / 0.2e1 + t558;
t338 = t885 * t731;
t318 = 0.2e1 * t650 + t792;
t305 = t473 + t471 / 0.2e1 + t565;
t304 = t683 - t468 / 0.2e1 - t566;
t259 = t275 * qJD(6);
t237 = t345 * qJD(3) - t675;
t236 = -t427 * t699 + t706;
t219 = -t632 - t319;
t218 = -t462 * t698 - t321;
t199 = -t706 + t894;
t166 = qJD(3) * t346;
t135 = t349 * qJD(3) + t675 - t749;
t134 = t427 * t615 - t322;
t109 = qJD(3) * t350 - t749;
t92 = t822 / 0.2e1 + t567;
t91 = -t823 / 0.2e1 + t611;
t74 = t717 - t905;
t73 = t259 + t939;
t72 = t530 * t686 + t794 + t867 - t772 / 0.2e1;
t70 = 0.2e1 * t651 - t795 / 0.2e1 + (t686 + t864) * t526;
t66 = -t111 + t899;
t62 = -t541 + t611 - (-t531 * t602 + t526) * t840 / 0.2e1;
t61 = -t540 + t567 + (t462 * t693 + t687) * t528;
t51 = t259 + t928;
t46 = -t717 + t898;
t43 = t615 * t640 - t106 - t871;
t42 = t679 + t941;
t36 = t679 + t929;
t31 = t536 + t580;
t30 = t537 + t581;
t25 = t817 / 0.2e1 + t583 + t762;
t24 = t818 / 0.2e1 + t582 + t763;
t21 = t591 + t762;
t19 = t592 + t763;
t17 = t819 / 0.2e1 + t582 + t765;
t16 = -t820 / 0.2e1 + t583 + t764;
t10 = -t568 / 0.2e1 + t886 * t691 - t885 * t692 + t653 - t627 * t525 + t888;
t9 = t529 * t627 + t538 + t656 + t889;
t6 = -t534 + t542 + t888;
t5 = t659 - t535 + t580 + t889;
t12 = [0, 0, 0, 0, t665, t499 * qJD(3), 0, 0, 0, t507 * t731, t507 * t729, -t521 * t666 + t522 * t665, -t465 * qJD(4) - 0.2e1 * t532 * t629, -t467 * qJD(3) + t528 * t670, t466 * qJD(3) + t528 * t669, -t665, -qJD(3) * t200 - qJD(4) * t256, qJD(3) * t201 + qJD(4) * t255 (-qJD(3) * t431 - t894) * t430, qJD(3) * t212 + t240 * t698, -t296 * qJD(3) + t427 * t631, -t295 * qJD(3) + t430 * t631, -t665, -qJD(3) * t47 - qJD(4) * t100 - qJD(5) * t108, qJD(3) * t48 + qJD(4) * t101 + qJD(5) * t107 (qJD(3) * t294 - t898) * t886, qJD(3) * t88 + t895 * t924, -t153 * qJD(3) + t532 * t898, -t152 * qJD(3) + (t272 + t887) * t532, -t665, -qJD(3) * t1 - qJD(4) * t34 - qJD(5) * t32 - qJD(6) * t41, qJD(3) * t2 + qJD(4) * t35 + qJD(5) * t33 + qJD(6) * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, t664, t702, t729, -t731, 0, -t506 * t729 + t668, t506 * t731 + t667, -t446 + (t522 * t701 + t673) * t532, -0.2e1 * t528 * t666 + t532 * t870, t502 - t703, t663 + t704, -t461, -t714 + (t527 * t623 - t682) * qJD(3) + t305 * qJD(4), t713 + (t531 * t623 + t684) * qJD(3) + t304 * qJD(4) -(t734 + t737) * t431 + t760, t712 + (t431 * t462 - t602 * t907) * qJD(3) + t761, t440 - t738 - t754, t349 * t698 - t671 - t708, -t424 (t441 * t462 + t517 * t907 - t528 * t636) * qJD(3) + t61 * qJD(4) + t92 * qJD(5) - t601, t815 + (-t384 * t528 - t431 * t517 + t441 * t602) * qJD(3) + t62 * qJD(4) + t91 * qJD(5) (-t736 + t739) * t294 + t696, t766 + (t291 * t885 + t294 * t638) * qJD(3) + t697, -t338 + t680 - t744, t672 - t722 + t915, -t386 (t291 * t418 - t343 * t638 - t528 * t945) * qJD(3) + t5 * qJD(4) + t9 * qJD(5) + t31 * qJD(6) - t616, t831 + (-t163 * t528 + t294 * t418 - t343 * t885) * qJD(3) + t6 * qJD(4) + t10 * qJD(5) + t30 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t562, -t561, t527 * t595, t570, t512, qJD(3) * t305 - qJD(4) * t370 - t740, qJD(3) * t304 + qJD(4) * t369 + t741, t128, t96, t134, t135, t512, qJD(3) * t61 + qJD(4) * t181 + qJD(5) * t70 - t748, qJD(3) * t62 - qJD(4) * t182 + qJD(5) * t72 + t747, t44, t11, t43, t42, t512, qJD(3) * t5 + qJD(4) * t63 + qJD(5) * t24 + qJD(6) * t17 - t828, qJD(3) * t6 - qJD(4) * t64 + qJD(5) * t25 + qJD(6) * t16 + t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t128, t96, t134, t135, t512, qJD(3) * t92 + qJD(4) * t70 - qJD(5) * t165 - t745, qJD(3) * t91 + qJD(4) * t72 + qJD(5) * t164 + t746, t44, t11, t43, t42, t512, qJD(3) * t9 + qJD(4) * t24 + qJD(5) * t57 + qJD(6) * t19 - t830, qJD(3) * t10 + qJD(4) * t25 - qJD(5) * t58 + qJD(6) * t21 + t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t574, t600, -t716 + (-qJD(6) + t699) * t640 - t902, t678 + t941, t512, qJD(3) * t31 + qJD(4) * t17 + qJD(5) * t19 - qJD(6) * t56 - t825, qJD(3) * t30 + qJD(4) * t16 + qJD(5) * t21 + qJD(6) * t55 + t826; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t731, -t729, 0, 0, 0, 0, 0, -t663 - t670, t502 - t669, 0, 0, 0, 0, 0, t350 * t698 + t671, t440 - t753, 0, 0, 0, 0, 0, -t672 + t916, -t338 + t681; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t527 * t729 - t531 * t700, t527 * t700 - t531 * t729, 0, 0, 0, 0, 0, t109, t199, 0, 0, 0, 0, 0, t36, t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, t199, 0, 0, 0, 0, 0, t36, t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t678 + t929, -t718 + t898; 0, 0, 0, 0, -t664, -t702, 0, 0, 0, -t668, -t667, -t522 * t664 - t446, 0.2e1 * t527 * t570, -t669 + t703, t670 - t704, t461, qJD(4) * t378 + t714, qJD(4) * t377 - t713, t431 * t737 + t760, -t712 + t761, t738 - t753, -t345 * t698 + t708, t424, -qJD(4) * t60 - qJD(5) * t89 + t601, -qJD(4) * t59 - qJD(5) * t90 - t815, -t294 * t739 + t696, t697 - t766, t681 + t744, t722 - t916, t386, -qJD(4) * t3 - qJD(5) * t8 - qJD(6) * t28 + t616, -qJD(4) * t4 - qJD(5) * t7 - qJD(6) * t29 - t831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t346 * t698, -t754, 0, 0, 0, 0, 0, -t915, t680; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t666, t498 * qJD(4), 0, 0, 0, -pkin(3) * t728, -pkin(3) * t727, -t462 * t632, t698 * t309, 0, 0, 0, qJD(4) * t341 + t602 * t725, qJD(4) * t342 - t462 * t725, -t899 * t885, t924 * t917, 0, 0, 0, qJD(4) * t125 - qJD(5) * t136 - t723 * t885, qJD(4) * t126 - qJD(5) * t137 + t638 * t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t569, t870, -t630 * t531, t630 * t527, t511, -pkin(8) * t727 - t585, pkin(8) * t728 - t586, t150, t102, t218, t219, t511, -qJD(4) * t384 + t318 * qJD(5) - t880, t597 + t869, t53, t26, t66, t65, t511, -t876 - t948, -t878 + t947; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, t102, t218, t219, t511, qJD(4) * t318 - qJD(5) * t384 - t881, -t572 + t869, t53, t26, t66, t65, t511, -t877 - t948, -t879 + t947; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t573, t599, -t742 + t899, t65, t511, -t546 - t948, -t545 + t947; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t562, t561 (-t527 * t701 + t730) * t532 (-t674 - t732) * t532, t512, -qJD(3) * t378 + t740, -qJD(3) * t377 - t741, -t128, -t96, t236, t237, t512, qJD(3) * t60 + qJD(5) * t69 + t748, qJD(3) * t59 + qJD(5) * t71 - t747, -t44, -t11, t74, t73, t512, qJD(3) * t3 - qJD(5) * t22 - qJD(6) * t14 + t828, qJD(3) * t4 - qJD(5) * t23 - qJD(6) * t15 - t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, t322, 0, 0, 0, 0, 0, t51, t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t569, -t870, t531 * t699, -t527 * t699, t510, t585, t586, -t150, -t102, t321, t319, t510, qJD(5) * t380 + t880, t705 - t597, -t53, -t26, t111, t930, t510, t876, t878; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t526 * t834, -t530 * t834, 0, 0, 0, 0, 0, -t444 - t426, -t445 + t425; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t526 * t643 + t596, -t530 * t643 + t767, 0, 0, 0, 0, 0, qJD(6) * t375 - t444 - t550, qJD(6) * t376 - t445 - t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, 0, qJD(5) * t375 - t426 - t882, qJD(5) * t376 + t425 - t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t128, -t96, t236, t237, t512, qJD(3) * t89 - qJD(4) * t69 + t745, qJD(3) * t90 - qJD(4) * t71 - t746, -t44, -t11, t74, t73, t512, qJD(3) * t8 + qJD(4) * t22 + qJD(6) * t18 + t830, qJD(3) * t7 + qJD(4) * t23 + qJD(6) * t20 - t829; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, t322, 0, 0, 0, 0, 0, t51, t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150, -t102, t321, t319, t510, -qJD(4) * t380 + t881, t705 + t572, -t53, -t26, t111, t930, t510, t877, t879; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t526 * t835 - t596, t530 * t835 - t767, 0, 0, 0, 0, 0, -qJD(6) * t389 + t550, -qJD(6) * t390 + t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t525 * t832, -t529 * t832; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, 0, -t525 * t642 + t883, -t529 * t642 + t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t574, -t600, t718 - t905, -t759 + t939, t512, qJD(3) * t28 + qJD(4) * t14 - qJD(5) * t18 + t825, qJD(3) * t29 + qJD(4) * t15 - qJD(5) * t20 - t826; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t759 + t928, t716; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t573, -t599, t742, t930, t510, t546, t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t169, 0, qJD(5) * t389 + t882, qJD(5) * t390 + t553; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t169, 0, t525 * t833 - t883, t529 * t833 - t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t12;
