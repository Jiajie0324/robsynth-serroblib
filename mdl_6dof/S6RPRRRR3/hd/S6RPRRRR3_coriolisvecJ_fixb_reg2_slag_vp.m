% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRR3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 07:03
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRR3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 07:02:30
% EndTime: 2019-03-09 07:02:51
% DurationCPUTime: 8.86s
% Computational Cost: add. (14930->543), mult. (34303->743), div. (0->0), fcn. (23556->10), ass. (0->252)
t256 = sin(qJ(3));
t259 = cos(qJ(3));
t288 = pkin(3) * t256 - pkin(8) * t259;
t220 = t288 * qJD(1);
t255 = sin(qJ(4));
t258 = cos(qJ(4));
t241 = sin(pkin(11)) * pkin(1) + pkin(7);
t227 = t241 * qJD(1);
t387 = qJD(2) * t259 - t256 * t227;
t127 = t258 * t220 - t255 * t387;
t344 = t258 * t259;
t280 = pkin(4) * t256 - pkin(9) * t344;
t380 = -pkin(9) - pkin(8);
t311 = qJD(4) * t380;
t410 = -qJD(1) * t280 + t258 * t311 - t127;
t128 = t255 * t220 + t258 * t387;
t333 = qJD(1) * t259;
t309 = t255 * t333;
t409 = -pkin(9) * t309 - t255 * t311 + t128;
t319 = t258 * qJD(3);
t334 = qJD(1) * t256;
t211 = t255 * t334 - t319;
t330 = qJD(3) * t255;
t213 = t258 * t334 + t330;
t254 = sin(qJ(5));
t257 = cos(qJ(5));
t143 = t211 * t257 + t213 * t254;
t253 = sin(qJ(6));
t284 = -t211 * t254 + t257 * t213;
t379 = cos(qJ(6));
t395 = -t253 * t143 + t284 * t379;
t82 = t379 * t143 + t253 * t284;
t378 = t82 * t395;
t348 = t254 * t255;
t214 = -t257 * t258 + t348;
t322 = qJD(5) * t257;
t325 = qJD(4) * t258;
t273 = -t257 * t325 - t258 * t322;
t316 = qJD(4) + qJD(5);
t338 = -t214 * t333 + t316 * t348 + t273;
t215 = t254 * t258 + t255 * t257;
t153 = t316 * t215;
t337 = -t215 * t333 + t153;
t401 = t395 ^ 2 - t82 ^ 2;
t239 = -qJD(4) + t333;
t233 = -qJD(5) + t239;
t182 = qJD(2) * t256 + t227 * t259;
t171 = qJD(3) * pkin(8) + t182;
t242 = -cos(pkin(11)) * pkin(1) - pkin(2);
t207 = -pkin(3) * t259 - pkin(8) * t256 + t242;
t175 = t207 * qJD(1);
t107 = -t171 * t255 + t258 * t175;
t94 = -pkin(9) * t213 + t107;
t87 = -pkin(4) * t239 + t94;
t108 = t171 * t258 + t175 * t255;
t95 = -pkin(9) * t211 + t108;
t91 = t254 * t95;
t39 = t257 * t87 - t91;
t392 = pkin(10) * t284;
t33 = t39 - t392;
t30 = -pkin(5) * t233 + t33;
t93 = t257 * t95;
t40 = t254 * t87 + t93;
t405 = pkin(10) * t143;
t34 = t40 - t405;
t373 = t253 * t34;
t10 = t30 * t379 - t373;
t313 = t379 * t34;
t11 = t253 * t30 + t313;
t408 = -t10 * t82 + t11 * t395;
t226 = -qJD(6) + t233;
t317 = qJD(3) * qJD(4);
t326 = qJD(4) * t255;
t304 = t256 * t326;
t305 = t259 * t319;
t402 = t304 - t305;
t163 = qJD(1) * t402 - t258 * t317;
t303 = t256 * t325;
t328 = qJD(3) * t259;
t307 = t255 * t328;
t270 = t303 + t307;
t164 = qJD(1) * t270 + t255 * t317;
t324 = qJD(5) * t254;
t279 = -t254 * t163 + t164 * t257 - t211 * t324 + t213 * t322;
t301 = qJD(6) * t379;
t321 = qJD(6) * t253;
t64 = t257 * t163 + t254 * t164 + t211 * t322 + t213 * t324;
t23 = t143 * t301 + t253 * t279 + t284 * t321 + t379 * t64;
t399 = -t226 * t82 - t23;
t318 = qJD(1) * qJD(3);
t244 = t256 * t318;
t172 = t387 * qJD(3);
t223 = t288 * qJD(3);
t206 = qJD(1) * t223;
t59 = -qJD(4) * t108 - t255 * t172 + t258 * t206;
t47 = pkin(4) * t244 + t163 * pkin(9) + t59;
t58 = -t171 * t326 + t258 * t172 + t175 * t325 + t255 * t206;
t50 = -pkin(9) * t164 + t58;
t9 = -qJD(5) * t40 - t254 * t50 + t257 * t47;
t6 = pkin(5) * t244 + t64 * pkin(10) + t9;
t297 = -t254 * t47 - t257 * t50 - t87 * t322 + t95 * t324;
t7 = -pkin(10) * t279 - t297;
t268 = -t253 * t6 - t30 * t301 + t34 * t321 - t379 * t7;
t170 = -qJD(3) * pkin(3) - t387;
t138 = pkin(4) * t211 + t170;
t88 = pkin(5) * t143 + t138;
t398 = t88 * t82 + t268;
t230 = t380 * t255;
t231 = t380 * t258;
t372 = t230 * t322 + t231 * t324 + t254 * t410 - t409 * t257;
t160 = t254 * t230 - t257 * t231;
t371 = -qJD(5) * t160 + t409 * t254 + t257 * t410;
t2 = -qJD(6) * t11 - t253 * t7 + t379 * t6;
t386 = -t395 * t88 + t2;
t24 = qJD(6) * t395 - t253 * t64 + t379 * t279;
t384 = -t226 * t395 - t24;
t404 = -pkin(5) * t334 + t338 * pkin(10) + t371;
t403 = t337 * pkin(10) - t372;
t362 = t143 * t284;
t400 = -t143 ^ 2 + t284 ^ 2;
t397 = -t143 * t233 - t64;
t396 = t138 * t143 + t297;
t391 = t108 * t239 - t59;
t390 = t107 * t239 + t58;
t186 = t214 * t256;
t188 = t258 * t207;
t345 = t256 * t258;
t350 = t241 * t255;
t122 = -pkin(9) * t345 + t188 + (-pkin(4) - t350) * t259;
t219 = t241 * t344;
t150 = t255 * t207 + t219;
t347 = t255 * t256;
t131 = -pkin(9) * t347 + t150;
t73 = t254 * t122 + t257 * t131;
t289 = -t182 + (-t309 + t326) * pkin(4);
t331 = qJD(3) * t215;
t263 = t316 * t186 - t259 * t331;
t385 = -t138 * t284 + t9;
t383 = -t233 * t284 - t279;
t329 = qJD(3) * t256;
t382 = t143 * t329 - t259 * t279;
t249 = t256 ^ 2;
t283 = qJD(1) * t249 - t239 * t259;
t381 = -t239 * t304 - t283 * t319;
t159 = t257 * t230 + t231 * t254;
t124 = -pkin(10) * t215 + t159;
t125 = -pkin(10) * t214 + t160;
t70 = t124 * t379 - t253 * t125;
t377 = qJD(6) * t70 + t253 * t404 - t379 * t403;
t71 = t253 * t124 + t125 * t379;
t376 = -qJD(6) * t71 + t253 * t403 + t379 * t404;
t185 = t215 * t256;
t121 = -t253 * t185 - t186 * t379;
t101 = t153 * t256 + t254 * t307 - t257 * t305;
t35 = t101 * t379 + t185 * t301 - t186 * t321 - t253 * t263;
t375 = -t121 * t24 + t35 * t82;
t374 = t101 * t143 + t186 * t279;
t43 = t257 * t94 - t91;
t148 = -t253 * t214 + t215 * t379;
t370 = -qJD(6) * t148 + t253 * t338 - t337 * t379;
t369 = t214 * t301 + t215 * t321 + t253 * t337 + t338 * t379;
t246 = pkin(4) * t257 + pkin(5);
t349 = t253 * t254;
t42 = -t254 * t94 - t93;
t37 = t42 + t405;
t38 = t43 - t392;
t368 = -t253 * t37 - t379 * t38 + t246 * t301 + (-t254 * t321 + (t257 * t379 - t349) * qJD(5)) * pkin(4);
t310 = t379 * t254;
t367 = t253 * t38 - t379 * t37 - t246 * t321 + (-t254 * t301 + (-t253 * t257 - t310) * qJD(5)) * pkin(4);
t366 = -t185 * t244 - t263 * t233;
t120 = t185 * t379 - t253 * t186;
t36 = qJD(6) * t121 - t253 * t101 - t263 * t379;
t365 = -t120 * t244 + t36 * t226;
t361 = t170 * t255;
t360 = t170 * t258;
t173 = t182 * qJD(3);
t359 = t173 * t255;
t358 = t173 * t256;
t357 = t173 * t258;
t356 = t211 * t239;
t355 = t211 * t256;
t354 = t213 * t211;
t353 = t213 * t239;
t352 = t239 * t255;
t351 = t239 * t258;
t346 = t255 * t259;
t343 = t259 * t164;
t260 = qJD(3) ^ 2;
t342 = t260 * t256;
t341 = t260 * t259;
t340 = pkin(5) * t337 + t289;
t339 = -t164 * t345 - t211 * t305;
t336 = t258 * t223 + t329 * t350;
t194 = pkin(4) * t347 + t256 * t241;
t335 = -t259 ^ 2 + t249;
t228 = qJD(1) * t242;
t327 = qJD(4) * t211;
t323 = qJD(5) * t255;
t320 = t138 * qJD(3);
t74 = t280 * qJD(3) + (-t219 + (pkin(9) * t256 - t207) * t255) * qJD(4) + t336;
t99 = t207 * t325 + t255 * t223 + (-t256 * t319 - t259 * t326) * t241;
t76 = -pkin(9) * t270 + t99;
t315 = t122 * t322 + t254 * t74 + t257 * t76;
t261 = qJD(1) ^ 2;
t312 = t256 * t261 * t259;
t154 = pkin(4) * t270 + t241 * t328;
t247 = -pkin(4) * t258 - pkin(3);
t308 = t213 * t328;
t302 = t239 * t325;
t299 = t23 * t259 + t329 * t395;
t296 = t259 * t64 + t284 * t329;
t72 = t257 * t122 - t254 * t131;
t295 = t163 * t259 + t213 * t329;
t294 = -t163 + t327;
t292 = t256 * t302;
t291 = t213 * t303;
t290 = t259 * t244;
t287 = -t120 * t23 + t36 * t395;
t286 = -t107 * t258 - t108 * t255;
t285 = t107 * t255 - t108 * t258;
t281 = 0.2e1 * qJD(3) * t228;
t51 = -pkin(5) * t259 + pkin(10) * t186 + t72;
t53 = -pkin(10) * t185 + t73;
t28 = -t253 * t53 + t379 * t51;
t29 = t253 * t51 + t379 * t53;
t278 = t24 * t259 - t329 * t82;
t275 = t283 * t255;
t274 = -t121 * t244 - t226 * t35;
t272 = -t101 * t233 + t186 * t244;
t115 = t164 * pkin(4) + t173;
t26 = -qJD(5) * t73 - t254 * t76 + t257 * t74;
t266 = qJD(4) * t286 - t59 * t255 + t58 * t258;
t265 = t172 * t259 + t358 + (-t182 * t256 - t259 * t387) * qJD(3);
t262 = -t185 * t64 - t263 * t284;
t196 = pkin(4) * t310 + t253 * t246;
t195 = -pkin(4) * t349 + t246 * t379;
t179 = pkin(5) * t214 + t247;
t149 = -t241 * t346 + t188;
t147 = t214 * t379 + t253 * t215;
t132 = pkin(5) * t185 + t194;
t109 = pkin(4) * t213 + pkin(5) * t284;
t100 = -qJD(4) * t150 + t336;
t67 = -pkin(5) * t263 + t154;
t41 = pkin(5) * t279 + t115;
t25 = -t131 * t324 + t315;
t17 = (-t316 * t345 - t307) * pkin(10) * t257 + (-qJD(5) * t131 + (t256 * t323 + t402) * pkin(10)) * t254 + t315;
t16 = pkin(5) * t329 + t101 * pkin(10) + t26;
t13 = t33 * t379 - t373;
t12 = -t253 * t33 - t313;
t4 = -qJD(6) * t29 + t16 * t379 - t253 * t17;
t3 = qJD(6) * t28 + t253 * t16 + t17 * t379;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t290, -0.2e1 * t335 * t318, t341, -0.2e1 * t290, -t342, 0, -t241 * t341 + t256 * t281, t241 * t342 + t259 * t281, t265, t265 * t241, -t163 * t345 - t213 * t402, -t291 + (-t308 + (t163 + t327) * t256) * t255 + t339, t295 - t381, t164 * t347 + t211 * t270, t292 + t343 + (-t275 - t355) * qJD(3) (-t239 - t333) * t329, -t100 * t239 + (-t59 + (t211 * t241 + t361) * qJD(3)) * t259 + (t170 * t325 + t164 * t241 + t359 + (qJD(1) * t149 + t107) * qJD(3)) * t256, t99 * t239 + (t58 + (t213 * t241 + t360) * qJD(3)) * t259 + (-t170 * t326 - t163 * t241 + t357 + (-qJD(1) * t150 - t108) * qJD(3)) * t256, -t100 * t213 + t149 * t163 - t150 * t164 - t99 * t211 + t286 * t328 + (qJD(4) * t285 - t255 * t58 - t258 * t59) * t256, t107 * t100 + t108 * t99 + t59 * t149 + t58 * t150 + (t170 * t328 + t358) * t241, -t101 * t284 + t186 * t64, -t262 + t374, -t272 + t296, -t143 * t263 + t185 * t279, t366 - t382 (-t233 - t333) * t329, -t26 * t233 + t154 * t143 + t194 * t279 + t115 * t185 + (t215 * t320 - t9) * t259 + ((qJD(1) * t72 + t39) * qJD(3) - t138 * t316 * t214) * t256, -t138 * t101 - t115 * t186 + t154 * t284 - t194 * t64 + t25 * t233 - t297 * t259 + (-qJD(1) * t73 - t40) * t329, t39 * t101 - t25 * t143 + t185 * t297 + t9 * t186 - t26 * t284 + t263 * t40 - t279 * t73 + t72 * t64, t115 * t194 + t138 * t154 + t25 * t40 + t26 * t39 - t297 * t73 + t72 * t9, -t121 * t23 - t35 * t395, -t287 + t375, -t274 + t299, t120 * t24 + t36 * t82, t278 + t365 (-t226 - t333) * t329, t41 * t120 + t132 * t24 - t2 * t259 - t4 * t226 + t88 * t36 + t67 * t82 + (qJD(1) * t28 + t10) * t329, -t268 * t259 + t41 * t121 - t132 * t23 + t3 * t226 - t88 * t35 + t67 * t395 + (-qJD(1) * t29 - t11) * t329, t10 * t35 - t11 * t36 + t120 * t268 - t121 * t2 + t23 * t28 - t24 * t29 - t3 * t82 - t395 * t4, t10 * t4 + t11 * t3 + t132 * t41 + t2 * t28 - t268 * t29 + t67 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t342, -t341, 0, t172 * t256 - t173 * t259 + (t182 * t259 - t256 * t387) * qJD(3), 0, 0, 0, 0, 0, 0, t292 - t343 + (-t275 + t355) * qJD(3), t295 + t381, t291 + (t256 * t294 + t308) * t255 + t339 (-qJD(3) * t285 - t173) * t259 + (qJD(3) * t170 + t266) * t256, 0, 0, 0, 0, 0, 0, t366 + t382, t272 + t296, t262 + t374, -t40 * t101 - t9 * t185 + t297 * t186 + (-t331 * t39 - t115) * t259 + (t39 * (t273 + (t323 + t326) * t254) + t320) * t256, 0, 0, 0, 0, 0, 0, -t278 + t365, t274 + t299, t287 + t375, -t10 * t36 - t11 * t35 - t120 * t2 - t121 * t268 - t259 * t41 + t329 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t312, t335 * t261, 0, t312, 0, 0, -t228 * t334, -t228 * t333, 0, 0, -t163 * t255 - t213 * t351 (-t163 + t356) * t258 + (-t164 + t353) * t255, -t302 + (t239 * t344 + (-t213 + t330) * t256) * qJD(1), -t164 * t258 - t211 * t352, t239 * t326 + (-t239 * t346 + (t211 + t319) * t256) * qJD(1), t239 * t334, -pkin(3) * t164 + t127 * t239 - t357 - t182 * t211 + (pkin(8) * t351 + t361) * qJD(4) + (-t107 * t256 + (-pkin(8) * t329 - t170 * t259) * t255) * qJD(1), pkin(3) * t163 - t128 * t239 + t359 - t182 * t213 + (-pkin(8) * t352 + t360) * qJD(4) + (-t170 * t344 + (-pkin(8) * t319 + t108) * t256) * qJD(1), t127 * t213 + t128 * t211 + ((qJD(4) * t213 - t164) * pkin(8) + t390) * t258 + (pkin(8) * t294 + t391) * t255, -t173 * pkin(3) + pkin(8) * t266 - t107 * t127 - t108 * t128 - t170 * t182, -t64 * t215 - t284 * t338, t143 * t338 + t64 * t214 - t215 * t279 - t284 * t337, t338 * t233 + (-t284 + t331) * t334, t143 * t337 + t214 * t279, t337 * t233 + (-qJD(3) * t214 + t143) * t334, t233 * t334, t247 * t279 + t115 * t214 - t371 * t233 + t289 * t143 + t337 * t138 + (qJD(3) * t159 - t39) * t334, t115 * t215 - t247 * t64 + t372 * t233 + t289 * t284 - t338 * t138 + (-qJD(3) * t160 + t40) * t334, -t143 * t372 + t159 * t64 - t160 * t279 + t214 * t297 - t9 * t215 - t284 * t371 - t337 * t40 + t338 * t39, t115 * t247 + t138 * t289 + t9 * t159 - t160 * t297 + t371 * t39 + t372 * t40, -t23 * t148 - t369 * t395, t23 * t147 - t148 * t24 + t369 * t82 + t370 * t395, t369 * t226 + (qJD(3) * t148 - t395) * t334, t24 * t147 - t370 * t82, -t370 * t226 + (-qJD(3) * t147 + t82) * t334, t226 * t334, t41 * t147 + t179 * t24 - t370 * t88 + t340 * t82 - t376 * t226 + (qJD(3) * t70 - t10) * t334, t41 * t148 - t179 * t23 - t369 * t88 + t340 * t395 + t377 * t226 + (-qJD(3) * t71 + t11) * t334, t10 * t369 + t11 * t370 + t147 * t268 - t2 * t148 + t70 * t23 - t71 * t24 - t376 * t395 - t377 * t82, t10 * t376 + t11 * t377 + t41 * t179 + t2 * t70 - t268 * t71 + t340 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, -t211 ^ 2 + t213 ^ 2, -t163 - t356, -t354, -t164 - t353, t244, -t170 * t213 - t391, t170 * t211 - t390, 0, 0, t362, t400, t397, -t362, t383, t244, t42 * t233 + (-t143 * t213 + t233 * t324 + t244 * t257) * pkin(4) + t385, -t43 * t233 + (-t213 * t284 + t233 * t322 - t244 * t254) * pkin(4) + t396, t40 * t284 + t43 * t143 - t39 * t143 + t42 * t284 + (-t254 * t279 + t257 * t64 + (-t143 * t257 + t254 * t284) * qJD(5)) * pkin(4), -t39 * t42 - t40 * t43 + (-t138 * t213 - t254 * t297 + t257 * t9 + (-t254 * t39 + t257 * t40) * qJD(5)) * pkin(4), t378, t401, t399, -t378, t384, t244, -t109 * t82 + t195 * t244 - t226 * t367 + t386, -t109 * t395 - t196 * t244 + t226 * t368 + t398, t195 * t23 - t196 * t24 - t367 * t395 - t368 * t82 + t408, t10 * t367 - t88 * t109 + t11 * t368 + t2 * t195 - t196 * t268; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t362, t400, t397, -t362, t383, t244, -t40 * t233 + t385, -t233 * t39 + t396, 0, 0, t378, t401, t399, -t378, t384, t244, t12 * t226 + (t226 * t321 + t244 * t379 - t284 * t82) * pkin(5) + t386, -t13 * t226 + (t226 * t301 - t244 * t253 - t284 * t395) * pkin(5) + t398, t12 * t395 + t13 * t82 + (t379 * t23 - t24 * t253 + (t253 * t395 - t379 * t82) * qJD(6)) * pkin(5) + t408, -t10 * t12 - t11 * t13 + (t379 * t2 - t268 * t253 - t284 * t88 + (-t10 * t253 + t11 * t379) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t378, t401, t399, -t378, t384, t244, -t11 * t226 + t386, -t10 * t226 + t398, 0, 0;];
tauc_reg  = t1;
