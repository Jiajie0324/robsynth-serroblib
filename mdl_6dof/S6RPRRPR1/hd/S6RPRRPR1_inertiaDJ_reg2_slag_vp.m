% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRRPR1_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR1_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR1_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR1_inertiaDJ_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:58:45
% EndTime: 2019-03-09 04:58:53
% DurationCPUTime: 2.53s
% Computational Cost: add. (5176->207), mult. (10731->366), div. (0->0), fcn. (10378->10), ass. (0->135)
t121 = sin(pkin(10)) * pkin(1) + pkin(7);
t114 = pkin(8) + t121;
t164 = cos(qJ(4));
t104 = t114 * t164;
t91 = cos(qJ(3));
t109 = t114 * t91;
t88 = sin(qJ(4));
t89 = sin(qJ(3));
t175 = t89 * t104 + t88 * t109;
t87 = sin(qJ(6));
t84 = t87 ^ 2;
t90 = cos(qJ(6));
t85 = t90 ^ 2;
t172 = (t84 - t85) * qJD(6);
t147 = cos(pkin(11));
t132 = t164 * t91;
t155 = t88 * t89;
t112 = -t132 + t155;
t101 = qJD(3) * t104;
t110 = t88 * t114;
t105 = qJD(3) * t110;
t31 = t175 * qJD(4) + t89 * t101 + t91 * t105;
t70 = t164 * t89 + t88 * t91;
t106 = qJD(4) * t70;
t99 = -t70 * qJD(3) - t106;
t15 = t99 * qJ(5) - t112 * qJD(5) - t31;
t86 = sin(pkin(11));
t47 = t164 * t109 - t89 * t110;
t32 = -t47 * qJD(4) - t91 * t101 + t89 * t105;
t128 = t164 * qJD(4);
t52 = -qJD(3) * t132 - t91 * t128 + (qJD(3) + qJD(4)) * t155;
t92 = t52 * qJ(5) - t70 * qJD(5) + t32;
t7 = t147 * t15 + t86 * t92;
t50 = t147 * t112 + t70 * t86;
t51 = -t86 * t112 + t147 * t70;
t81 = -cos(pkin(10)) * pkin(1) - pkin(2);
t71 = -t91 * pkin(3) + t81;
t53 = t112 * pkin(4) + t71;
t97 = t50 * pkin(5) - t51 * pkin(9) + t53;
t174 = -qJD(6) * t97 - t7;
t37 = -t147 * t99 - t52 * t86;
t38 = -t147 * t52 + t86 * t99;
t173 = -t51 * t37 - t38 * t50;
t40 = -t112 * qJ(5) + t47;
t96 = -t70 * qJ(5) - t175;
t23 = t147 * t40 + t86 * t96;
t8 = -t87 * t23 + t90 * t97;
t9 = t90 * t23 + t87 * t97;
t122 = t8 * t87 - t9 * t90;
t145 = qJD(6) * t87;
t166 = t89 * pkin(3);
t44 = pkin(4) * t106 + (t70 * pkin(4) + t166) * qJD(3);
t93 = t37 * pkin(5) - t38 * pkin(9) + t44;
t2 = t23 * t145 + t174 * t90 - t87 * t93;
t83 = qJD(6) * t90;
t3 = t174 * t87 - t23 * t83 + t90 * t93;
t171 = qJD(6) * t122 + t2 * t87 - t3 * t90;
t170 = 0.2e1 * qJD(3);
t169 = pkin(3) * t88;
t22 = -t147 * t96 + t40 * t86;
t6 = -t147 * t92 + t15 * t86;
t168 = t22 * t6;
t167 = t51 * t6;
t165 = t22 * t83 + t6 * t87;
t127 = t147 * t88;
t148 = pkin(3) * qJD(4);
t62 = (t164 * t86 + t127) * t148;
t163 = t22 * t62;
t162 = t38 * t90;
t161 = t50 * t37;
t160 = t50 * t62;
t159 = t51 * t38;
t158 = t51 * t87;
t157 = t70 * t52;
t34 = t84 * t38;
t35 = t85 * t38;
t156 = t87 * t90;
t154 = t90 * t37;
t153 = t51 * t154 + t50 * t162;
t138 = t164 * pkin(3);
t82 = t138 + pkin(4);
t66 = t147 * t82 - t86 * t169;
t60 = -pkin(5) - t66;
t151 = t60 * t83 + t62 * t87;
t67 = pkin(3) * t127 + t86 * t82;
t149 = t84 + t85;
t144 = t89 * qJD(3);
t143 = t91 * qJD(3);
t142 = 0.2e1 * t161;
t141 = t81 * t170;
t140 = pkin(3) * t144;
t139 = t88 * t148;
t137 = t51 * t145;
t80 = -t147 * pkin(4) - pkin(5);
t136 = t80 * t145;
t135 = t80 * t83;
t134 = t87 * t83;
t133 = t89 * t143;
t125 = pkin(3) * t128;
t63 = t147 * t125 - t86 * t139;
t43 = t149 * t63;
t79 = pkin(4) * t86 + pkin(9);
t131 = t149 * t79;
t130 = -0.4e1 * t51 * t156;
t129 = t60 * t145 - t62 * t90;
t48 = t51 ^ 2;
t126 = t48 * t134;
t123 = -t8 * t90 - t87 * t9;
t120 = t22 * t37 + t50 * t6;
t118 = -t37 * t79 + t38 * t80;
t61 = pkin(9) + t67;
t117 = t50 * t61 - t51 * t60;
t116 = -t50 * t63 + t51 * t62;
t115 = t50 * t79 - t51 * t80;
t20 = t37 * t87 + t50 * t83;
t113 = t38 * t87 + t51 * t83;
t19 = t137 - t162;
t111 = t121 * qJD(3);
t108 = t71 * t70;
t103 = t112 * t148;
t100 = -t37 * t61 + t38 * t60 + t116;
t1 = t123 * qJD(6) - t2 * t90 - t3 * t87;
t98 = pkin(3) * t99;
t94 = t112 * t99;
t75 = -0.2e1 * t134;
t74 = 0.2e1 * t134;
t69 = -0.2e1 * t172;
t25 = t51 * t35;
t24 = t51 * t34;
t18 = t50 * t145 - t154;
t16 = t22 * t145;
t13 = -t34 - t35;
t12 = -t38 * t156 + t51 * t172;
t10 = qJD(6) * t130 - t34 + t35;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t133 (-t89 ^ 2 + t91 ^ 2) * t170, 0, -0.2e1 * t133, 0, 0, t89 * t141, t91 * t141, 0, 0, -0.2e1 * t157, 0.2e1 * t112 * t52 + 0.2e1 * t70 * t99, 0, -0.2e1 * t94, 0, 0, 0.2e1 * qJD(4) * t108 + 0.2e1 * (t112 * t166 + t108) * qJD(3), 0.2e1 * t70 * t140 - 0.2e1 * t52 * t71, 0.2e1 * t112 * t31 - 0.2e1 * t175 * t52 - 0.2e1 * t32 * t70 + 0.2e1 * t47 * t99, 0.2e1 * t71 * t140 - 0.2e1 * t175 * t32 - 0.2e1 * t31 * t47, 0.2e1 * t159, 0.2e1 * t173, 0, t142, 0, 0, 0.2e1 * t37 * t53 + 0.2e1 * t44 * t50, 0.2e1 * t38 * t53 + 0.2e1 * t44 * t51, 0.2e1 * t22 * t38 - 0.2e1 * t23 * t37 - 0.2e1 * t50 * t7 + 0.2e1 * t167, 0.2e1 * t23 * t7 + 0.2e1 * t44 * t53 + 0.2e1 * t168, 0.2e1 * t25 - 0.2e1 * t126, t130 * t38 + 0.2e1 * t48 * t172, -0.2e1 * t137 * t50 + 0.2e1 * t153, 0.2e1 * t24 + 0.2e1 * t126, -0.2e1 * t113 * t50 - 0.2e1 * t158 * t37, t142, 0.2e1 * t113 * t22 + 0.2e1 * t158 * t6 + 0.2e1 * t3 * t50 + 0.2e1 * t37 * t8, 0.2e1 * t90 * t167 - 0.2e1 * t19 * t22 + 0.2e1 * t2 * t50 - 0.2e1 * t37 * t9, 0.2e1 * t123 * t38 + 0.2e1 * t171 * t51, -0.2e1 * t2 * t9 + 0.2e1 * t3 * t8 + 0.2e1 * t168; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t112 * t32 - t175 * t99 - t31 * t70 - t47 * t52, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23 * t38 + t51 * t7 + t120, 0, 0, 0, 0, 0, 0, 0, t173 * t90 + t153, 0, t1 * t51 - t122 * t38 + t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t94 - 0.2e1 * t157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t159 + 0.2e1 * t161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t24 + 0.2e1 * t25 + 0.2e1 * t161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t143, 0, -t144, 0, -t91 * t111, t89 * t111, 0, 0, 0, 0, -t52, 0, t99, 0, t32, t31, -t164 * t103 + t52 * t138 + t70 * t139 + t88 * t98 (t32 * t164 - t31 * t88 + (t164 * t47 + t175 * t88) * qJD(4)) * pkin(3), 0, 0, t38, 0, -t37, 0, -t6, -t7, -t37 * t67 - t38 * t66 + t116, t23 * t63 - t6 * t66 + t67 * t7 + t163, -t12, t10, t20, t12, -t18, 0, t16 + (-qJD(6) * t117 - t6) * t90 + t100 * t87, t100 * t90 + t117 * t145 + t165, t1, t1 * t61 - t122 * t63 + t6 * t60 + t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, -t143, 0, 0, 0, 0, 0, 0, 0, 0, t99, t52, 0, t88 * t103 + t70 * t125 + t164 * t98 - t52 * t169, 0, 0, 0, 0, 0, 0, -t37, -t38, 0, -t37 * t66 + t38 * t67 + t51 * t63 + t160, 0, 0, 0, 0, 0, 0, t18, t20, -t13, t149 * t38 * t61 + t37 * t60 + t43 * t51 + t160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t139, -0.2e1 * t125, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t62, -0.2e1 * t63, 0, -0.2e1 * t62 * t66 + 0.2e1 * t63 * t67, t74, t69, 0, t75, 0, 0, 0.2e1 * t129, 0.2e1 * t151, 0.2e1 * t43, 0.2e1 * t43 * t61 + 0.2e1 * t60 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, 0, t99, 0, t32, t31, 0, 0, 0, 0, t38, 0, -t37, 0, -t6, -t7 (-t147 * t38 - t37 * t86) * pkin(4) (-t147 * t6 + t7 * t86) * pkin(4), -t12, t10, t20, t12, -t18, 0, t16 + t118 * t87 + (-qJD(6) * t115 - t6) * t90, t115 * t145 + t118 * t90 + t165, t1, t1 * t79 + t6 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t99, t52, 0, 0, 0, 0, 0, 0, 0, 0, -t37, -t38, 0 (-t147 * t37 + t38 * t86) * pkin(4), 0, 0, 0, 0, 0, 0, t18, t20, -t13, t131 * t38 + t37 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t139, -t125, 0, 0, 0, 0, 0, 0, 0, 0, -t62, -t63, 0 (-t147 * t62 + t63 * t86) * pkin(4), t74, t69, 0, t75, 0, 0, t129 + t136, t135 + t151, t43, t131 * t63 + t62 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t74, t69, 0, t75, 0, 0, 0.2e1 * t136, 0.2e1 * t135, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t37, t38, 0, t44, 0, 0, 0, 0, 0, 0, -t18, -t20, t13, -t171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t19, 0, -t113, t37, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t113, t19, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, -t145, 0, -t61 * t83 - t63 * t87, t145 * t61 - t63 * t90, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t83, 0, -t145, 0, -t79 * t83, t79 * t145, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, -t83, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
