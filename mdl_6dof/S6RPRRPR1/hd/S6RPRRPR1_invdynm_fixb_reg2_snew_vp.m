% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPRRPR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 21:58
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPRRPR1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR1_invdynm_fixb_reg2_snew_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 21:57:31
% EndTime: 2019-05-05 21:58:11
% DurationCPUTime: 43.36s
% Computational Cost: add. (397516->949), mult. (860266->1366), div. (0->0), fcn. (617917->12), ass. (0->658)
t1731 = cos(qJ(1));
t1727 = sin(qJ(1));
t1693 = g(1) * t1731 + g(2) * t1727;
t1844 = qJD(1) ^ 2;
t1676 = -pkin(1) * t1844 - t1693;
t1720 = sin(pkin(10));
t1722 = cos(pkin(10));
t1692 = g(1) * t1727 - t1731 * g(2);
t1743 = qJDD(1) * pkin(1) + t1692;
t1623 = t1720 * t1676 - t1722 * t1743;
t1624 = t1722 * t1676 + t1720 * t1743;
t1773 = t1623 * t1720 + t1722 * t1624;
t1545 = t1623 * t1722 - t1624 * t1720;
t1821 = t1545 * t1727;
t1864 = t1731 * t1773 + t1821;
t1820 = t1545 * t1731;
t1863 = -t1727 * t1773 + t1820;
t1719 = sin(pkin(11));
t1725 = sin(qJ(4));
t1729 = cos(qJ(4));
t1730 = cos(qJ(3));
t1835 = qJD(1) * t1730;
t1726 = sin(qJ(3));
t1836 = qJD(1) * t1726;
t1665 = -t1725 * t1836 + t1729 * t1835;
t1666 = (t1725 * t1730 + t1726 * t1729) * qJD(1);
t1721 = cos(pkin(11));
t1604 = -t1721 * t1665 + t1666 * t1719;
t1606 = t1719 * t1665 + t1721 * t1666;
t1534 = t1606 * t1604;
t1714 = qJDD(3) + qJDD(4);
t1849 = -t1534 + t1714;
t1862 = t1719 * t1849;
t1861 = t1721 * t1849;
t1724 = sin(qJ(6));
t1707 = qJD(3) * t1835;
t1797 = t1726 * qJDD(1);
t1679 = t1707 + t1797;
t1786 = qJD(3) * t1836;
t1796 = t1730 * qJDD(1);
t1740 = -t1786 + t1796;
t1578 = t1665 * qJD(4) + t1729 * t1679 + t1725 * t1740;
t1772 = t1725 * t1679 - t1729 * t1740;
t1742 = -qJD(4) * t1666 - t1772;
t1774 = t1578 * t1719 - t1721 * t1742;
t1505 = qJDD(6) + t1774;
t1715 = qJD(3) + qJD(4);
t1728 = cos(qJ(6));
t1571 = t1606 * t1724 - t1728 * t1715;
t1573 = t1606 * t1728 + t1715 * t1724;
t1512 = t1573 * t1571;
t1850 = t1505 - t1512;
t1860 = t1724 * t1850;
t1625 = t1665 * t1666;
t1848 = t1625 + t1714;
t1859 = t1725 * t1848;
t1858 = t1728 * t1850;
t1857 = t1729 * t1848;
t1807 = t1715 * t1606;
t1468 = t1774 + t1807;
t1682 = qJDD(1) * t1720 + t1722 * t1844;
t1717 = g(3) - qJDD(2);
t1655 = qJ(2) * t1682 - t1717 * t1722;
t1683 = qJDD(1) * t1722 - t1720 * t1844;
t1750 = -qJ(2) * t1683 - t1717 * t1720;
t1846 = t1731 * t1682 + t1683 * t1727;
t1856 = pkin(6) * t1846 + t1731 * t1655 - t1727 * t1750;
t1628 = -t1682 * t1727 + t1731 * t1683;
t1855 = -pkin(6) * t1628 + t1727 * t1655 + t1731 * t1750;
t1833 = qJD(5) * t1604;
t1596 = -0.2e1 * t1833;
t1608 = -pkin(2) * t1844 + qJDD(1) * pkin(7) + t1624;
t1575 = t1726 * t1608 + t1730 * t1717;
t1701 = t1730 * t1844 * t1726;
t1689 = qJDD(3) + t1701;
t1528 = (-t1679 + t1707) * pkin(8) + t1689 * pkin(3) - t1575;
t1577 = t1730 * t1608 - t1726 * t1717;
t1691 = qJD(3) * pkin(3) - pkin(8) * t1836;
t1842 = t1730 ^ 2;
t1712 = t1842 * t1844;
t1531 = -pkin(3) * t1712 + pkin(8) * t1740 - qJD(3) * t1691 + t1577;
t1447 = t1725 * t1528 + t1729 * t1531;
t1645 = pkin(4) * t1715 - qJ(5) * t1666;
t1843 = t1665 ^ 2;
t1402 = -pkin(4) * t1843 + qJ(5) * t1742 - t1715 * t1645 + t1447;
t1657 = t1715 * t1665;
t1557 = -t1657 + t1578;
t1747 = t1729 * t1528 - t1725 * t1531;
t1733 = pkin(4) * t1848 - qJ(5) * t1557 + t1747;
t1799 = t1721 * t1402 + t1719 * t1733;
t1307 = t1596 + t1799;
t1527 = pkin(5) * t1604 - pkin(9) * t1606;
t1694 = t1715 ^ 2;
t1273 = -pkin(5) * t1694 + pkin(9) * t1714 - t1527 * t1604 + t1307;
t1607 = -qJDD(1) * pkin(2) - pkin(7) * t1844 + t1623;
t1547 = -t1740 * pkin(3) - pkin(8) * t1712 + t1691 * t1836 + t1607;
t1439 = -t1742 * pkin(4) - t1843 * qJ(5) + t1666 * t1645 + qJDD(5) + t1547;
t1510 = t1721 * t1578 + t1719 * t1742;
t1592 = t1715 * t1604;
t1472 = -t1592 + t1510;
t1334 = pkin(5) * t1468 - pkin(9) * t1472 + t1439;
t1238 = t1273 * t1724 - t1728 * t1334;
t1239 = t1273 * t1728 + t1334 * t1724;
t1178 = t1724 * t1238 + t1728 * t1239;
t1508 = t1726 * t1575 + t1730 * t1577;
t1847 = t1657 + t1578;
t1553 = (qJD(4) - t1715) * t1666 + t1772;
t1567 = t1571 ^ 2;
t1568 = t1573 ^ 2;
t1600 = qJD(6) + t1604;
t1599 = t1600 ^ 2;
t1602 = t1604 ^ 2;
t1603 = t1606 ^ 2;
t1663 = t1666 ^ 2;
t1363 = t1447 * t1725 + t1729 * t1747;
t1841 = pkin(3) * t1363;
t1478 = -t1553 * t1725 - t1557 * t1729;
t1840 = pkin(3) * t1478;
t1839 = pkin(5) * t1719;
t1837 = qJD(1) * qJD(3);
t1716 = t1726 ^ 2;
t1834 = t1844 * t1716;
t1832 = qJD(5) * t1606;
t1777 = t1719 * t1402 - t1721 * t1733;
t1795 = 0.2e1 * t1832;
t1306 = t1777 + t1795;
t1241 = -t1306 * t1721 + t1307 * t1719;
t1831 = t1241 * t1725;
t1830 = t1241 * t1729;
t1829 = t1363 * t1726;
t1828 = t1363 * t1730;
t1426 = t1505 + t1512;
t1827 = t1426 * t1724;
t1826 = t1426 * t1728;
t1825 = t1439 * t1719;
t1824 = t1439 * t1721;
t1525 = t1534 + t1714;
t1823 = t1525 * t1719;
t1822 = t1525 * t1721;
t1819 = t1547 * t1725;
t1818 = t1547 * t1729;
t1817 = t1600 * t1724;
t1816 = t1600 * t1728;
t1620 = -t1625 + t1714;
t1815 = t1620 * t1725;
t1814 = t1620 * t1729;
t1680 = -0.2e1 * t1786 + t1796;
t1634 = t1680 * t1730;
t1811 = t1689 * t1726;
t1690 = qJDD(3) - t1701;
t1810 = t1690 * t1726;
t1809 = t1690 * t1730;
t1808 = t1714 * t1720;
t1806 = t1715 * t1666;
t1805 = t1715 * t1719;
t1804 = t1715 * t1721;
t1803 = t1715 * t1725;
t1802 = t1715 * t1729;
t1272 = -t1714 * pkin(5) - t1694 * pkin(9) + (0.2e1 * qJD(5) + t1527) * t1606 + t1777;
t1269 = t1724 * t1272;
t1593 = t1726 * t1607;
t1270 = t1728 * t1272;
t1594 = t1730 * t1607;
t1800 = -pkin(5) * t1272 + pkin(9) * t1178;
t1798 = -pkin(2) * t1607 + pkin(7) * t1508;
t1794 = t1716 + t1842;
t1793 = -pkin(5) * t1721 - pkin(4);
t1792 = t1719 * t1512;
t1791 = t1721 * t1512;
t1790 = t1720 * t1534;
t1789 = t1722 * t1534;
t1788 = t1720 * t1625;
t1787 = t1722 * t1625;
t1497 = -t1568 - t1599;
t1362 = -t1497 * t1724 - t1826;
t1748 = -t1728 * t1510 - t1724 * t1714;
t1410 = (qJD(6) + t1600) * t1571 + t1748;
t1785 = pkin(5) * t1410 + pkin(9) * t1362 + t1269;
t1483 = -t1599 - t1567;
t1354 = t1483 * t1728 - t1860;
t1520 = t1600 * t1573;
t1775 = -t1724 * t1510 + t1728 * t1714;
t1741 = qJD(6) * t1573 - t1775;
t1406 = -t1520 - t1741;
t1784 = pkin(5) * t1406 + pkin(9) * t1354 - t1270;
t1149 = t1178 * t1719 - t1272 * t1721;
t1783 = pkin(4) * t1149 + t1800;
t1580 = -t1603 - t1694;
t1487 = t1580 * t1721 - t1823;
t1782 = pkin(4) * t1487 - t1799;
t1732 = qJD(3) ^ 2;
t1696 = -t1732 - t1834;
t1643 = -t1696 * t1726 - t1809;
t1678 = 0.2e1 * t1707 + t1797;
t1781 = -pkin(2) * t1678 + pkin(7) * t1643 + t1593;
t1698 = -t1712 - t1732;
t1641 = t1698 * t1730 - t1811;
t1780 = pkin(2) * t1680 + pkin(7) * t1641 - t1594;
t1242 = t1306 * t1719 + t1721 * t1307;
t1179 = t1242 * t1725 + t1830;
t1240 = pkin(4) * t1241;
t1779 = pkin(3) * t1179 + t1240;
t1469 = t1774 - t1807;
t1473 = t1592 + t1510;
t1378 = -t1469 * t1719 - t1473 * t1721;
t1380 = -t1469 * t1721 + t1473 * t1719;
t1297 = t1378 * t1729 + t1380 * t1725;
t1376 = pkin(4) * t1378;
t1778 = pkin(3) * t1297 + t1376;
t1364 = t1729 * t1447 - t1725 * t1747;
t1771 = -t1692 * t1727 - t1731 * t1693;
t1770 = t1720 * t1701;
t1769 = t1722 * t1701;
t1150 = t1178 * t1721 + t1272 * t1719;
t1177 = -t1238 * t1728 + t1239 * t1724;
t1098 = qJ(5) * t1150 + (-pkin(9) * t1719 + t1793) * t1177;
t1112 = -qJ(5) * t1149 + (-pkin(9) * t1721 + t1839) * t1177;
t1116 = -t1149 * t1725 + t1150 * t1729;
t1078 = -pkin(3) * t1177 + pkin(8) * t1116 + t1098 * t1729 + t1112 * t1725;
t1115 = t1149 * t1729 + t1150 * t1725;
t1081 = -pkin(8) * t1115 - t1098 * t1725 + t1112 * t1729;
t1094 = -t1115 * t1726 + t1116 * t1730;
t1768 = -pkin(2) * t1177 + pkin(7) * t1094 + t1730 * t1078 + t1726 * t1081;
t1407 = (-qJD(6) + t1600) * t1573 + t1775;
t1445 = -qJD(6) * t1571 - t1748;
t1519 = t1600 * t1571;
t1409 = t1445 + t1519;
t1325 = t1407 * t1724 - t1409 * t1728;
t1153 = -pkin(9) * t1325 - t1177;
t1327 = t1407 * t1728 + t1409 * t1724;
t1465 = t1567 + t1568;
t1286 = t1327 * t1721 - t1465 * t1719;
t1131 = qJ(5) * t1286 + t1719 * t1153 + t1325 * t1793;
t1285 = t1327 * t1719 + t1465 * t1721;
t1133 = -qJ(5) * t1285 + t1153 * t1721 + t1325 * t1839;
t1210 = -t1285 * t1725 + t1286 * t1729;
t1097 = -pkin(3) * t1325 + pkin(8) * t1210 + t1131 * t1729 + t1133 * t1725;
t1209 = t1285 * t1729 + t1286 * t1725;
t1101 = -pkin(8) * t1209 - t1131 * t1725 + t1133 * t1729;
t1161 = -t1209 * t1726 + t1210 * t1730;
t1767 = -pkin(2) * t1325 + pkin(7) * t1161 + t1730 * t1097 + t1726 * t1101;
t1353 = t1483 * t1724 + t1858;
t1196 = -pkin(5) * t1353 + t1238;
t1250 = -pkin(9) * t1353 + t1269;
t1295 = t1354 * t1721 - t1406 * t1719;
t1140 = -pkin(4) * t1353 + qJ(5) * t1295 + t1196 * t1721 + t1250 * t1719;
t1294 = t1354 * t1719 + t1406 * t1721;
t1146 = -qJ(5) * t1294 - t1196 * t1719 + t1250 * t1721;
t1221 = -t1294 * t1725 + t1295 * t1729;
t1104 = -pkin(3) * t1353 + pkin(8) * t1221 + t1140 * t1729 + t1146 * t1725;
t1220 = t1294 * t1729 + t1295 * t1725;
t1109 = -pkin(8) * t1220 - t1140 * t1725 + t1146 * t1729;
t1170 = -t1220 * t1726 + t1221 * t1730;
t1766 = -pkin(2) * t1353 + pkin(7) * t1170 + t1730 * t1104 + t1726 * t1109;
t1361 = t1497 * t1728 - t1827;
t1197 = -pkin(5) * t1361 + t1239;
t1251 = -pkin(9) * t1361 + t1270;
t1302 = t1362 * t1721 - t1410 * t1719;
t1141 = -pkin(4) * t1361 + qJ(5) * t1302 + t1197 * t1721 + t1251 * t1719;
t1301 = t1362 * t1719 + t1410 * t1721;
t1147 = -qJ(5) * t1301 - t1197 * t1719 + t1251 * t1721;
t1231 = -t1301 * t1725 + t1302 * t1729;
t1106 = -pkin(3) * t1361 + pkin(8) * t1231 + t1141 * t1729 + t1147 * t1725;
t1230 = t1301 * t1729 + t1302 * t1725;
t1111 = -pkin(8) * t1230 - t1141 * t1725 + t1147 * t1729;
t1173 = -t1230 * t1726 + t1231 * t1730;
t1765 = -pkin(2) * t1361 + pkin(7) * t1173 + t1730 * t1106 + t1726 * t1111;
t1180 = t1242 * t1729 - t1831;
t1211 = -pkin(4) * t1439 + qJ(5) * t1242;
t1123 = -pkin(3) * t1439 + pkin(8) * t1180 - qJ(5) * t1831 + t1211 * t1729;
t1127 = -pkin(8) * t1179 - qJ(5) * t1830 - t1211 * t1725;
t1130 = -t1179 * t1726 + t1180 * t1730;
t1764 = -pkin(2) * t1439 + pkin(7) * t1130 + t1730 * t1123 + t1726 * t1127;
t1501 = -t1602 - t1603;
t1194 = -pkin(4) * t1501 + qJ(5) * t1380 + t1242;
t1202 = -qJ(5) * t1378 - t1241;
t1299 = -t1378 * t1725 + t1380 * t1729;
t1136 = -pkin(3) * t1501 + pkin(8) * t1299 + t1194 * t1729 + t1202 * t1725;
t1139 = -pkin(8) * t1297 - t1194 * t1725 + t1202 * t1729;
t1228 = -t1297 * t1726 + t1299 * t1730;
t1763 = -pkin(2) * t1501 + pkin(7) * t1228 + t1730 * t1136 + t1726 * t1139;
t1522 = -t1694 - t1602;
t1442 = t1522 * t1721 - t1862;
t1328 = -pkin(4) * t1468 + qJ(5) * t1442 - t1824;
t1441 = t1522 * t1719 + t1861;
t1350 = -qJ(5) * t1441 + t1825;
t1356 = -t1441 * t1725 + t1442 * t1729;
t1208 = -pkin(3) * t1468 + pkin(8) * t1356 + t1328 * t1729 + t1350 * t1725;
t1355 = t1441 * t1729 + t1442 * t1725;
t1232 = -pkin(8) * t1355 - t1328 * t1725 + t1350 * t1729;
t1280 = -t1355 * t1726 + t1356 * t1730;
t1762 = -pkin(2) * t1468 + pkin(7) * t1280 + t1730 * t1208 + t1726 * t1232;
t1761 = pkin(5) * t1465 + pkin(9) * t1327 + t1178;
t1488 = -t1580 * t1719 - t1822;
t1335 = -pkin(4) * t1472 + qJ(5) * t1488 + t1825;
t1367 = -qJ(5) * t1487 + t1824;
t1390 = -t1487 * t1725 + t1488 * t1729;
t1223 = -pkin(3) * t1472 + pkin(8) * t1390 + t1335 * t1729 + t1367 * t1725;
t1389 = t1487 * t1729 + t1488 * t1725;
t1249 = -pkin(8) * t1389 - t1335 * t1725 + t1367 * t1729;
t1310 = -t1389 * t1726 + t1390 * t1730;
t1760 = -pkin(2) * t1472 + pkin(7) * t1310 + t1730 * t1223 + t1726 * t1249;
t1759 = pkin(4) * t1301 + t1785;
t1758 = pkin(4) * t1294 + t1784;
t1480 = -t1553 * t1729 + t1557 * t1725;
t1579 = -t1663 - t1843;
t1321 = -pkin(3) * t1579 + pkin(8) * t1480 + t1364;
t1331 = -pkin(8) * t1478 - t1363;
t1388 = -t1478 * t1726 + t1480 * t1730;
t1757 = -pkin(2) * t1579 + pkin(7) * t1388 + t1730 * t1321 + t1726 * t1331;
t1617 = -t1694 - t1843;
t1533 = t1617 * t1729 - t1859;
t1552 = (qJD(4) + t1715) * t1666 + t1772;
t1414 = -pkin(3) * t1552 + pkin(8) * t1533 - t1818;
t1532 = t1617 * t1725 + t1857;
t1450 = -t1532 * t1726 + t1533 * t1730;
t1457 = -pkin(8) * t1532 + t1819;
t1756 = -pkin(2) * t1552 + pkin(7) * t1450 + t1730 * t1414 + t1726 * t1457;
t1644 = -t1663 - t1694;
t1559 = -t1644 * t1725 - t1814;
t1420 = -pkin(3) * t1847 + pkin(8) * t1559 + t1819;
t1558 = t1644 * t1729 - t1815;
t1475 = -pkin(8) * t1558 + t1818;
t1482 = -t1558 * t1726 + t1559 * t1730;
t1755 = -pkin(2) * t1847 + pkin(7) * t1482 + t1730 * t1420 + t1726 * t1475;
t1684 = t1794 * qJDD(1);
t1687 = t1712 + t1834;
t1754 = pkin(2) * t1687 + pkin(7) * t1684 + t1508;
t1753 = pkin(3) * t1558 - t1447;
t1686 = qJDD(1) * t1731 - t1727 * t1844;
t1752 = -pkin(6) * t1686 - g(3) * t1727;
t1751 = pkin(4) * t1441 - t1777;
t1749 = pkin(4) * t1285 + t1761;
t1507 = t1575 * t1730 - t1577 * t1726;
t1746 = t1692 * t1731 - t1693 * t1727;
t1745 = pkin(3) * t1115 + t1783;
t1744 = pkin(3) * t1389 + t1782;
t1283 = t1364 * t1730 - t1829;
t1338 = -pkin(3) * t1547 + pkin(8) * t1364;
t1739 = -pkin(2) * t1547 + pkin(7) * t1283 - pkin(8) * t1829 + t1730 * t1338;
t1738 = pkin(3) * t1220 + t1758;
t1737 = pkin(3) * t1230 + t1759;
t1736 = pkin(3) * t1355 + t1751;
t1735 = pkin(3) * t1532 + t1747;
t1734 = pkin(3) * t1209 + t1749;
t1699 = t1722 * t1714;
t1697 = t1712 - t1732;
t1695 = t1732 - t1834;
t1688 = -t1712 + t1834;
t1685 = qJDD(1) * t1727 + t1731 * t1844;
t1674 = t1730 * t1689;
t1673 = t1794 * t1837;
t1662 = -pkin(6) * t1685 + g(3) * t1731;
t1651 = -t1663 + t1694;
t1650 = -t1694 + t1843;
t1649 = t1679 * t1730 - t1716 * t1837;
t1648 = -t1726 * t1740 - t1837 * t1842;
t1647 = qJDD(3) * t1720 + t1673 * t1722;
t1646 = -qJDD(3) * t1722 + t1673 * t1720;
t1642 = -t1695 * t1726 + t1674;
t1640 = t1697 * t1730 - t1810;
t1639 = t1696 * t1730 - t1810;
t1638 = t1695 * t1730 + t1811;
t1637 = t1698 * t1726 + t1674;
t1636 = t1697 * t1726 + t1809;
t1635 = (t1679 + t1707) * t1726;
t1631 = t1684 * t1722 - t1687 * t1720;
t1630 = t1684 * t1720 + t1687 * t1722;
t1627 = -t1678 * t1726 + t1634;
t1626 = t1678 * t1730 + t1680 * t1726;
t1622 = t1663 - t1843;
t1616 = t1649 * t1722 - t1770;
t1615 = t1648 * t1722 + t1770;
t1614 = t1649 * t1720 + t1769;
t1613 = t1648 * t1720 - t1769;
t1612 = t1642 * t1722 + t1720 * t1797;
t1611 = t1640 * t1722 + t1720 * t1796;
t1610 = t1642 * t1720 - t1722 * t1797;
t1609 = t1640 * t1720 - t1722 * t1796;
t1598 = -0.2e1 * t1832;
t1597 = 0.2e1 * t1833;
t1590 = t1643 * t1722 + t1678 * t1720;
t1589 = t1641 * t1722 - t1680 * t1720;
t1588 = t1643 * t1720 - t1678 * t1722;
t1587 = t1641 * t1720 + t1680 * t1722;
t1586 = -t1603 + t1694;
t1585 = t1602 - t1694;
t1584 = -pkin(1) * t1682 - t1624;
t1583 = pkin(1) * t1683 - t1623;
t1582 = (t1665 * t1729 + t1666 * t1725) * t1715;
t1581 = (t1665 * t1725 - t1666 * t1729) * t1715;
t1576 = t1627 * t1722 + t1688 * t1720;
t1574 = t1627 * t1720 - t1688 * t1722;
t1563 = t1650 * t1729 - t1815;
t1562 = -t1651 * t1725 + t1857;
t1561 = t1650 * t1725 + t1814;
t1560 = t1651 * t1729 + t1859;
t1551 = -pkin(7) * t1639 + t1594;
t1550 = -pkin(7) * t1637 + t1593;
t1541 = pkin(1) * t1545;
t1540 = t1578 * t1729 - t1666 * t1803;
t1539 = t1578 * t1725 + t1666 * t1802;
t1538 = -t1665 * t1802 - t1725 * t1742;
t1537 = -t1665 * t1803 + t1729 * t1742;
t1536 = -pkin(2) * t1639 + t1577;
t1535 = -pkin(2) * t1637 + t1575;
t1530 = t1603 - t1602;
t1529 = pkin(1) * t1717 + qJ(2) * t1773;
t1518 = -t1568 + t1599;
t1517 = t1567 - t1599;
t1516 = (-t1604 * t1721 + t1606 * t1719) * t1715;
t1515 = (-t1604 * t1719 - t1606 * t1721) * t1715;
t1514 = -t1581 * t1726 + t1582 * t1730;
t1513 = t1581 * t1730 + t1582 * t1726;
t1511 = t1568 - t1567;
t1503 = t1514 * t1722 + t1808;
t1502 = t1514 * t1720 - t1699;
t1499 = pkin(1) * t1587 + t1780;
t1498 = pkin(1) * t1588 + t1781;
t1496 = -t1561 * t1726 + t1563 * t1730;
t1495 = -t1560 * t1726 + t1562 * t1730;
t1494 = t1585 * t1721 - t1823;
t1493 = -t1586 * t1719 + t1861;
t1492 = t1561 * t1730 + t1563 * t1726;
t1491 = t1560 * t1730 + t1562 * t1726;
t1490 = t1585 * t1719 + t1822;
t1489 = t1586 * t1721 + t1862;
t1485 = -qJ(2) * t1630 + t1507 * t1722;
t1484 = qJ(2) * t1631 + t1507 * t1720;
t1481 = t1558 * t1730 + t1559 * t1726;
t1479 = -t1552 * t1729 - t1725 * t1847;
t1477 = -t1552 * t1725 + t1729 * t1847;
t1464 = t1508 * t1722 + t1607 * t1720;
t1463 = t1508 * t1720 - t1607 * t1722;
t1461 = t1510 * t1721 - t1606 * t1805;
t1460 = t1510 * t1719 + t1606 * t1804;
t1459 = t1604 * t1804 + t1719 * t1774;
t1458 = t1604 * t1805 - t1721 * t1774;
t1456 = -t1539 * t1726 + t1540 * t1730;
t1455 = -t1537 * t1726 + t1538 * t1730;
t1454 = t1539 * t1730 + t1540 * t1726;
t1453 = t1537 * t1730 + t1538 * t1726;
t1451 = pkin(1) * t1630 + t1754;
t1449 = t1532 * t1730 + t1533 * t1726;
t1437 = (-t1571 * t1728 + t1573 * t1724) * t1600;
t1436 = (-t1571 * t1724 - t1573 * t1728) * t1600;
t1435 = -t1515 * t1725 + t1516 * t1729;
t1434 = t1515 * t1729 + t1516 * t1725;
t1433 = t1456 * t1722 - t1788;
t1432 = t1455 * t1722 + t1788;
t1431 = t1456 * t1720 + t1787;
t1430 = t1455 * t1720 - t1787;
t1429 = -qJ(2) * t1588 - t1536 * t1720 + t1551 * t1722;
t1428 = -qJ(2) * t1587 - t1535 * t1720 + t1550 * t1722;
t1424 = t1496 * t1722 - t1553 * t1720;
t1423 = t1495 * t1722 + t1557 * t1720;
t1422 = t1496 * t1720 + t1553 * t1722;
t1421 = t1495 * t1720 - t1557 * t1722;
t1418 = t1482 * t1722 + t1720 * t1847;
t1417 = t1482 * t1720 - t1722 * t1847;
t1416 = -pkin(1) * t1639 + qJ(2) * t1590 + t1536 * t1722 + t1551 * t1720;
t1415 = -pkin(1) * t1637 + qJ(2) * t1589 + t1535 * t1722 + t1550 * t1720;
t1412 = t1450 * t1722 + t1552 * t1720;
t1411 = t1450 * t1720 - t1552 * t1722;
t1408 = t1445 - t1519;
t1405 = -t1520 + t1741;
t1401 = t1445 * t1728 - t1573 * t1817;
t1400 = t1445 * t1724 + t1573 * t1816;
t1399 = t1571 * t1816 + t1724 * t1741;
t1398 = -t1571 * t1817 + t1728 * t1741;
t1396 = -t1490 * t1725 + t1494 * t1729;
t1395 = -t1489 * t1725 + t1493 * t1729;
t1394 = t1490 * t1729 + t1494 * t1725;
t1393 = t1489 * t1729 + t1493 * t1725;
t1387 = -t1477 * t1726 + t1479 * t1730;
t1386 = t1478 * t1730 + t1480 * t1726;
t1385 = t1477 * t1730 + t1479 * t1726;
t1383 = pkin(1) * t1463 + t1798;
t1382 = t1437 * t1721 + t1505 * t1719;
t1381 = t1437 * t1719 - t1505 * t1721;
t1379 = -t1468 * t1721 - t1472 * t1719;
t1377 = -t1468 * t1719 + t1472 * t1721;
t1375 = t1517 * t1728 - t1827;
t1374 = -t1518 * t1724 + t1858;
t1373 = t1517 * t1724 + t1826;
t1372 = t1518 * t1728 + t1860;
t1371 = -t1460 * t1725 + t1461 * t1729;
t1370 = -t1458 * t1725 + t1459 * t1729;
t1369 = t1460 * t1729 + t1461 * t1725;
t1368 = t1458 * t1729 + t1459 * t1725;
t1366 = t1387 * t1722 + t1622 * t1720;
t1365 = t1387 * t1720 - t1622 * t1722;
t1358 = t1388 * t1722 + t1579 * t1720;
t1357 = t1388 * t1720 - t1579 * t1722;
t1349 = t1401 * t1721 + t1792;
t1348 = t1399 * t1721 - t1792;
t1347 = t1401 * t1719 - t1791;
t1346 = t1399 * t1719 + t1791;
t1345 = -qJ(2) * t1463 - (pkin(2) * t1720 - pkin(7) * t1722) * t1507;
t1344 = -pkin(2) * t1481 - t1753;
t1343 = -t1434 * t1726 + t1435 * t1730;
t1342 = t1434 * t1730 + t1435 * t1726;
t1341 = t1343 * t1722 + t1808;
t1340 = t1343 * t1720 - t1699;
t1339 = -pkin(2) * t1449 - t1735;
t1336 = -pkin(2) * t1386 - t1840;
t1333 = qJ(2) * t1464 - (-pkin(2) * t1722 - pkin(7) * t1720 - pkin(1)) * t1507;
t1329 = -pkin(7) * t1481 - t1420 * t1726 + t1475 * t1730;
t1326 = t1406 * t1728 - t1408 * t1724;
t1324 = t1406 * t1724 + t1408 * t1728;
t1319 = -pkin(7) * t1449 - t1414 * t1726 + t1457 * t1730;
t1318 = -t1394 * t1726 + t1396 * t1730;
t1317 = -t1393 * t1726 + t1395 * t1730;
t1316 = t1394 * t1730 + t1396 * t1726;
t1315 = t1393 * t1730 + t1395 * t1726;
t1314 = t1375 * t1721 - t1405 * t1719;
t1313 = t1374 * t1721 + t1409 * t1719;
t1312 = t1375 * t1719 + t1405 * t1721;
t1311 = t1374 * t1719 - t1409 * t1721;
t1309 = t1389 * t1730 + t1390 * t1726;
t1304 = -t1381 * t1725 + t1382 * t1729;
t1303 = t1381 * t1729 + t1382 * t1725;
t1298 = -t1377 * t1725 + t1379 * t1729;
t1296 = t1377 * t1729 + t1379 * t1725;
t1292 = t1326 * t1721 + t1511 * t1719;
t1291 = t1326 * t1719 - t1511 * t1721;
t1290 = -t1369 * t1726 + t1371 * t1730;
t1289 = -t1368 * t1726 + t1370 * t1730;
t1288 = t1369 * t1730 + t1371 * t1726;
t1287 = t1368 * t1730 + t1370 * t1726;
t1282 = t1364 * t1726 + t1828;
t1279 = t1355 * t1730 + t1356 * t1726;
t1278 = t1318 * t1722 - t1469 * t1720;
t1277 = t1317 * t1722 + t1473 * t1720;
t1276 = t1318 * t1720 + t1469 * t1722;
t1275 = t1317 * t1720 - t1473 * t1722;
t1268 = t1290 * t1722 + t1790;
t1267 = t1289 * t1722 - t1790;
t1266 = t1290 * t1720 - t1789;
t1265 = t1289 * t1720 + t1789;
t1264 = t1310 * t1722 + t1472 * t1720;
t1263 = t1310 * t1720 - t1472 * t1722;
t1262 = -t1347 * t1725 + t1349 * t1729;
t1261 = -t1346 * t1725 + t1348 * t1729;
t1260 = t1347 * t1729 + t1349 * t1725;
t1259 = t1346 * t1729 + t1348 * t1725;
t1258 = t1283 * t1722 + t1547 * t1720;
t1257 = t1283 * t1720 - t1547 * t1722;
t1256 = pkin(1) * t1417 + t1755;
t1255 = pkin(1) * t1411 + t1756;
t1254 = t1280 * t1722 + t1468 * t1720;
t1253 = t1280 * t1720 - t1468 * t1722;
t1252 = -pkin(2) * t1282 - t1841;
t1247 = -qJ(2) * t1417 + t1329 * t1722 - t1344 * t1720;
t1246 = -t1312 * t1725 + t1314 * t1729;
t1245 = -t1311 * t1725 + t1313 * t1729;
t1244 = t1312 * t1729 + t1314 * t1725;
t1243 = t1311 * t1729 + t1313 * t1725;
t1235 = -qJ(2) * t1411 + t1319 * t1722 - t1339 * t1720;
t1234 = -t1303 * t1726 + t1304 * t1730;
t1233 = t1303 * t1730 + t1304 * t1726;
t1227 = -t1296 * t1726 + t1298 * t1730;
t1226 = t1297 * t1730 + t1299 * t1726;
t1225 = t1296 * t1730 + t1298 * t1726;
t1219 = -pkin(1) * t1481 + qJ(2) * t1418 + t1329 * t1720 + t1344 * t1722;
t1218 = -t1291 * t1725 + t1292 * t1729;
t1217 = t1291 * t1729 + t1292 * t1725;
t1216 = t1227 * t1722 + t1530 * t1720;
t1215 = t1227 * t1720 - t1530 * t1722;
t1214 = -pkin(7) * t1386 - t1321 * t1726 + t1331 * t1730;
t1213 = t1228 * t1722 + t1501 * t1720;
t1212 = t1228 * t1720 - t1501 * t1722;
t1206 = -pkin(1) * t1449 + qJ(2) * t1412 + t1319 * t1720 + t1339 * t1722;
t1205 = t1234 * t1722 + t1436 * t1720;
t1204 = t1234 * t1720 - t1436 * t1722;
t1203 = -pkin(7) * t1282 - pkin(8) * t1828 - t1338 * t1726;
t1201 = -t1260 * t1726 + t1262 * t1730;
t1200 = -t1259 * t1726 + t1261 * t1730;
t1199 = t1260 * t1730 + t1262 * t1726;
t1198 = t1259 * t1730 + t1261 * t1726;
t1195 = -pkin(2) * t1309 + t1596 - t1744;
t1193 = pkin(1) * t1357 + t1757;
t1192 = t1201 * t1722 + t1400 * t1720;
t1191 = t1200 * t1722 - t1398 * t1720;
t1190 = t1201 * t1720 - t1400 * t1722;
t1189 = t1200 * t1720 + t1398 * t1722;
t1188 = -pkin(2) * t1279 - t1736 + t1795;
t1187 = -qJ(2) * t1357 + t1214 * t1722 - t1336 * t1720;
t1186 = -pkin(2) * t1226 - t1778;
t1185 = pkin(1) * t1257 + t1739;
t1184 = -t1244 * t1726 + t1246 * t1730;
t1183 = -t1243 * t1726 + t1245 * t1730;
t1182 = t1244 * t1730 + t1246 * t1726;
t1181 = t1243 * t1730 + t1245 * t1726;
t1174 = -pkin(1) * t1386 + qJ(2) * t1358 + t1214 * t1720 + t1336 * t1722;
t1172 = t1230 * t1730 + t1231 * t1726;
t1169 = t1220 * t1730 + t1221 * t1726;
t1167 = -t1217 * t1726 + t1218 * t1730;
t1166 = t1217 * t1730 + t1218 * t1726;
t1165 = t1184 * t1722 + t1373 * t1720;
t1164 = t1183 * t1722 + t1372 * t1720;
t1163 = t1184 * t1720 - t1373 * t1722;
t1162 = t1183 * t1720 - t1372 * t1722;
t1160 = t1209 * t1730 + t1210 * t1726;
t1158 = t1173 * t1722 + t1361 * t1720;
t1157 = t1173 * t1720 - t1361 * t1722;
t1156 = t1170 * t1722 + t1353 * t1720;
t1155 = t1170 * t1720 - t1353 * t1722;
t1154 = -pkin(7) * t1309 - t1223 * t1726 + t1249 * t1730;
t1152 = t1167 * t1722 + t1324 * t1720;
t1151 = t1167 * t1720 - t1324 * t1722;
t1145 = -qJ(2) * t1257 + t1203 * t1722 - t1252 * t1720;
t1144 = t1161 * t1722 + t1325 * t1720;
t1143 = t1161 * t1720 - t1325 * t1722;
t1142 = -pkin(7) * t1279 - t1208 * t1726 + t1232 * t1730;
t1137 = pkin(1) * t1263 + t1760;
t1134 = -pkin(1) * t1282 + qJ(2) * t1258 + t1203 * t1720 + t1252 * t1722;
t1132 = pkin(1) * t1253 + t1762;
t1129 = t1179 * t1730 + t1180 * t1726;
t1125 = t1130 * t1722 + t1439 * t1720;
t1124 = t1130 * t1720 - t1439 * t1722;
t1121 = -qJ(2) * t1263 + t1154 * t1722 - t1195 * t1720;
t1120 = -pkin(2) * t1172 - t1737;
t1119 = -pkin(2) * t1169 - t1738;
t1118 = -pkin(1) * t1309 + qJ(2) * t1264 + t1154 * t1720 + t1195 * t1722;
t1117 = -qJ(2) * t1253 + t1142 * t1722 - t1188 * t1720;
t1114 = -pkin(1) * t1279 + qJ(2) * t1254 + t1142 * t1720 + t1188 * t1722;
t1113 = -pkin(2) * t1160 - t1734;
t1107 = -pkin(2) * t1129 - t1779;
t1102 = -pkin(7) * t1226 - t1136 * t1726 + t1139 * t1730;
t1099 = pkin(1) * t1212 + t1763;
t1095 = -qJ(2) * t1212 + t1102 * t1722 - t1186 * t1720;
t1093 = t1115 * t1730 + t1116 * t1726;
t1091 = -pkin(1) * t1226 + qJ(2) * t1213 + t1102 * t1720 + t1186 * t1722;
t1090 = -pkin(7) * t1129 - t1123 * t1726 + t1127 * t1730;
t1089 = t1094 * t1722 + t1177 * t1720;
t1088 = t1094 * t1720 - t1177 * t1722;
t1087 = -pkin(7) * t1172 - t1106 * t1726 + t1111 * t1730;
t1086 = -pkin(7) * t1169 - t1104 * t1726 + t1109 * t1730;
t1085 = pkin(1) * t1124 + t1764;
t1084 = pkin(1) * t1157 + t1765;
t1083 = pkin(1) * t1155 + t1766;
t1082 = -pkin(7) * t1160 - t1097 * t1726 + t1101 * t1730;
t1079 = -pkin(2) * t1093 - t1745;
t1076 = -qJ(2) * t1157 + t1087 * t1722 - t1120 * t1720;
t1075 = pkin(1) * t1143 + t1767;
t1074 = -qJ(2) * t1155 + t1086 * t1722 - t1119 * t1720;
t1073 = -qJ(2) * t1124 + t1090 * t1722 - t1107 * t1720;
t1072 = -pkin(1) * t1172 + qJ(2) * t1158 + t1087 * t1720 + t1120 * t1722;
t1071 = -pkin(1) * t1169 + qJ(2) * t1156 + t1086 * t1720 + t1119 * t1722;
t1070 = -pkin(1) * t1129 + qJ(2) * t1125 + t1090 * t1720 + t1107 * t1722;
t1069 = -qJ(2) * t1143 + t1082 * t1722 - t1113 * t1720;
t1068 = -pkin(1) * t1160 + qJ(2) * t1144 + t1082 * t1720 + t1113 * t1722;
t1067 = -pkin(7) * t1093 - t1078 * t1726 + t1081 * t1730;
t1066 = pkin(1) * t1088 + t1768;
t1065 = -qJ(2) * t1088 + t1067 * t1722 - t1079 * t1720;
t1064 = -pkin(1) * t1093 + qJ(2) * t1089 + t1067 * t1720 + t1079 * t1722;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1686, 0, -t1685, 0, t1752, -t1662, -t1746, -pkin(6) * t1746, 0, 0, t1628, 0, -t1846, 0, t1855, t1856, t1863, pkin(6) * t1863 + qJ(2) * t1820 - t1727 * t1529, -t1614 * t1727 + t1616 * t1731, -t1574 * t1727 + t1576 * t1731, -t1610 * t1727 + t1612 * t1731, -t1613 * t1727 + t1615 * t1731, -t1609 * t1727 + t1611 * t1731, -t1646 * t1727 + t1647 * t1731, t1731 * t1428 - t1727 * t1415 - pkin(6) * (t1587 * t1731 + t1589 * t1727), t1731 * t1429 - t1727 * t1416 - pkin(6) * (t1588 * t1731 + t1590 * t1727), t1731 * t1485 - t1727 * t1484 - pkin(6) * (t1630 * t1731 + t1631 * t1727), t1731 * t1345 - t1727 * t1333 - pkin(6) * (t1463 * t1731 + t1464 * t1727), -t1431 * t1727 + t1433 * t1731, -t1365 * t1727 + t1366 * t1731, -t1421 * t1727 + t1423 * t1731, -t1430 * t1727 + t1432 * t1731, -t1422 * t1727 + t1424 * t1731, -t1502 * t1727 + t1503 * t1731, t1731 * t1235 - t1727 * t1206 - pkin(6) * (t1411 * t1731 + t1412 * t1727), t1731 * t1247 - t1727 * t1219 - pkin(6) * (t1417 * t1731 + t1418 * t1727), t1731 * t1187 - t1727 * t1174 - pkin(6) * (t1357 * t1731 + t1358 * t1727), t1731 * t1145 - t1727 * t1134 - pkin(6) * (t1257 * t1731 + t1258 * t1727), -t1266 * t1727 + t1268 * t1731, -t1215 * t1727 + t1216 * t1731, -t1275 * t1727 + t1277 * t1731, -t1265 * t1727 + t1267 * t1731, -t1276 * t1727 + t1278 * t1731, -t1340 * t1727 + t1341 * t1731, t1731 * t1117 - t1727 * t1114 - pkin(6) * (t1253 * t1731 + t1254 * t1727), t1731 * t1121 - t1727 * t1118 - pkin(6) * (t1263 * t1731 + t1264 * t1727), t1731 * t1095 - t1727 * t1091 - pkin(6) * (t1212 * t1731 + t1213 * t1727), t1731 * t1073 - t1727 * t1070 - pkin(6) * (t1124 * t1731 + t1125 * t1727), -t1190 * t1727 + t1192 * t1731, -t1151 * t1727 + t1152 * t1731, -t1162 * t1727 + t1164 * t1731, -t1189 * t1727 + t1191 * t1731, -t1163 * t1727 + t1165 * t1731, -t1204 * t1727 + t1205 * t1731, t1731 * t1074 - t1727 * t1071 - pkin(6) * (t1155 * t1731 + t1156 * t1727), t1731 * t1076 - t1727 * t1072 - pkin(6) * (t1157 * t1731 + t1158 * t1727), t1731 * t1069 - t1727 * t1068 - pkin(6) * (t1143 * t1731 + t1144 * t1727), t1731 * t1065 - t1727 * t1064 - pkin(6) * (t1088 * t1731 + t1089 * t1727); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1685, 0, t1686, 0, t1662, t1752, t1771, pkin(6) * t1771, 0, 0, t1846, 0, t1628, 0, -t1856, t1855, t1864, pkin(6) * t1864 + qJ(2) * t1821 + t1731 * t1529, t1614 * t1731 + t1616 * t1727, t1574 * t1731 + t1576 * t1727, t1610 * t1731 + t1612 * t1727, t1613 * t1731 + t1615 * t1727, t1609 * t1731 + t1611 * t1727, t1646 * t1731 + t1647 * t1727, t1727 * t1428 + t1731 * t1415 + pkin(6) * (-t1587 * t1727 + t1589 * t1731), t1727 * t1429 + t1731 * t1416 + pkin(6) * (-t1588 * t1727 + t1590 * t1731), t1727 * t1485 + t1731 * t1484 + pkin(6) * (-t1630 * t1727 + t1631 * t1731), t1727 * t1345 + t1731 * t1333 + pkin(6) * (-t1463 * t1727 + t1464 * t1731), t1431 * t1731 + t1433 * t1727, t1365 * t1731 + t1366 * t1727, t1421 * t1731 + t1423 * t1727, t1430 * t1731 + t1432 * t1727, t1422 * t1731 + t1424 * t1727, t1502 * t1731 + t1503 * t1727, t1727 * t1235 + t1731 * t1206 + pkin(6) * (-t1411 * t1727 + t1412 * t1731), t1727 * t1247 + t1731 * t1219 + pkin(6) * (-t1417 * t1727 + t1418 * t1731), t1727 * t1187 + t1731 * t1174 + pkin(6) * (-t1357 * t1727 + t1358 * t1731), t1727 * t1145 + t1731 * t1134 + pkin(6) * (-t1257 * t1727 + t1258 * t1731), t1266 * t1731 + t1268 * t1727, t1215 * t1731 + t1216 * t1727, t1275 * t1731 + t1277 * t1727, t1265 * t1731 + t1267 * t1727, t1276 * t1731 + t1278 * t1727, t1340 * t1731 + t1341 * t1727, t1727 * t1117 + t1731 * t1114 + pkin(6) * (-t1253 * t1727 + t1254 * t1731), t1727 * t1121 + t1731 * t1118 + pkin(6) * (-t1263 * t1727 + t1264 * t1731), t1727 * t1095 + t1731 * t1091 + pkin(6) * (-t1212 * t1727 + t1213 * t1731), t1727 * t1073 + t1731 * t1070 + pkin(6) * (-t1124 * t1727 + t1125 * t1731), t1190 * t1731 + t1192 * t1727, t1151 * t1731 + t1152 * t1727, t1162 * t1731 + t1164 * t1727, t1189 * t1731 + t1191 * t1727, t1163 * t1731 + t1165 * t1727, t1204 * t1731 + t1205 * t1727, t1727 * t1074 + t1731 * t1071 + pkin(6) * (-t1155 * t1727 + t1156 * t1731), t1727 * t1076 + t1731 * t1072 + pkin(6) * (-t1157 * t1727 + t1158 * t1731), t1727 * t1069 + t1731 * t1068 + pkin(6) * (-t1143 * t1727 + t1144 * t1731), t1727 * t1065 + t1731 * t1064 + pkin(6) * (-t1088 * t1727 + t1089 * t1731); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1692, t1693, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1583, t1584, 0, -t1541, t1635, t1626, t1638, t1634, t1636, 0, t1499, t1498, t1451, t1383, t1454, t1385, t1491, t1453, t1492, t1513, t1255, t1256, t1193, t1185, t1288, t1225, t1315, t1287, t1316, t1342, t1132, t1137, t1099, t1085, t1199, t1166, t1181, t1198, t1182, t1233, t1083, t1084, t1075, t1066; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1844, 0, 0, -g(3), -t1692, 0, 0, 0, t1683, 0, -t1682, 0, t1750, t1655, t1545, qJ(2) * t1545, t1616, t1576, t1612, t1615, t1611, t1647, t1428, t1429, t1485, t1345, t1433, t1366, t1423, t1432, t1424, t1503, t1235, t1247, t1187, t1145, t1268, t1216, t1277, t1267, t1278, t1341, t1117, t1121, t1095, t1073, t1192, t1152, t1164, t1191, t1165, t1205, t1074, t1076, t1069, t1065; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1844, 0, qJDD(1), 0, g(3), 0, -t1693, 0, 0, 0, t1682, 0, t1683, 0, -t1655, t1750, t1773, t1529, t1614, t1574, t1610, t1613, t1609, t1646, t1415, t1416, t1484, t1333, t1431, t1365, t1421, t1430, t1422, t1502, t1206, t1219, t1174, t1134, t1266, t1215, t1275, t1265, t1276, t1340, t1114, t1118, t1091, t1070, t1190, t1151, t1162, t1189, t1163, t1204, t1071, t1072, t1068, t1064; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1692, t1693, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1583, t1584, 0, -t1541, t1635, t1626, t1638, t1634, t1636, 0, t1499, t1498, t1451, t1383, t1454, t1385, t1491, t1453, t1492, t1513, t1255, t1256, t1193, t1185, t1288, t1225, t1315, t1287, t1316, t1342, t1132, t1137, t1099, t1085, t1199, t1166, t1181, t1198, t1182, t1233, t1083, t1084, t1075, t1066; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1844, 0, 0, -t1717, t1623, 0, t1649, t1627, t1642, t1648, t1640, t1673, t1550, t1551, t1507, pkin(7) * t1507, t1456, t1387, t1495, t1455, t1496, t1514, t1319, t1329, t1214, t1203, t1290, t1227, t1317, t1289, t1318, t1343, t1142, t1154, t1102, t1090, t1201, t1167, t1183, t1200, t1184, t1234, t1086, t1087, t1082, t1067; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1844, 0, qJDD(1), 0, t1717, 0, t1624, 0, t1701, -t1688, -t1797, -t1701, -t1796, -qJDD(3), t1535, t1536, 0, pkin(2) * t1507, t1625, -t1622, -t1557, -t1625, t1553, -t1714, t1339, t1344, t1336, t1252, -t1534, -t1530, -t1473, t1534, t1469, -t1714, t1188, t1195, t1186, t1107, -t1400, -t1324, -t1372, t1398, -t1373, -t1436, t1119, t1120, t1113, t1079; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1623, -t1624, 0, 0, t1635, t1626, t1638, t1634, t1636, 0, t1780, t1781, t1754, t1798, t1454, t1385, t1491, t1453, t1492, t1513, t1756, t1755, t1757, t1739, t1288, t1225, t1315, t1287, t1316, t1342, t1762, t1760, t1763, t1764, t1199, t1166, t1181, t1198, t1182, t1233, t1766, t1765, t1767, t1768; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1679, t1680, t1689, -t1707, t1697, t1707, 0, t1607, t1575, 0, t1540, t1479, t1562, t1538, t1563, t1582, t1457, t1475, t1331, -pkin(8) * t1363, t1371, t1298, t1395, t1370, t1396, t1435, t1232, t1249, t1139, t1127, t1262, t1218, t1245, t1261, t1246, t1304, t1109, t1111, t1101, t1081; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1786, t1678, t1695, t1740, t1690, -t1786, -t1607, 0, t1577, 0, t1539, t1477, t1560, t1537, t1561, t1581, t1414, t1420, t1321, t1338, t1369, t1296, t1393, t1368, t1394, t1434, t1208, t1223, t1136, t1123, t1260, t1217, t1243, t1259, t1244, t1303, t1104, t1106, t1097, t1078; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1701, t1688, t1797, t1701, t1796, qJDD(3), -t1575, -t1577, 0, 0, -t1625, t1622, t1557, t1625, -t1553, t1714, t1735, t1753, t1840, t1841, t1534, t1530, t1473, -t1534, -t1469, t1714, t1598 + t1736, t1597 + t1744, t1778, t1779, t1400, t1324, t1372, -t1398, t1373, t1436, t1738, t1737, t1734, t1745; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1578, -t1552, t1848, -t1657, t1650, t1657, 0, t1547, -t1747, 0, t1461, t1379, t1493, t1459, t1494, t1516, t1350, t1367, t1202, -qJ(5) * t1241, t1349, t1292, t1313, t1348, t1314, t1382, t1146, t1147, t1133, t1112; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1806, t1847, t1651, t1742, t1620, -t1806, -t1547, 0, t1447, 0, t1460, t1377, t1489, t1458, t1490, t1515, t1328, t1335, t1194, t1211, t1347, t1291, t1311, t1346, t1312, t1381, t1140, t1141, t1131, t1098; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1625, t1622, t1557, t1625, -t1553, t1714, t1747, -t1447, 0, 0, t1534, t1530, t1473, -t1534, -t1469, t1714, t1598 + t1751, t1597 + t1782, t1376, t1240, t1400, t1324, t1372, -t1398, t1373, t1436, t1758, t1759, t1749, t1783; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1510, -t1468, t1849, t1592, t1585, -t1592, 0, t1439, t1306, 0, t1401, t1326, t1374, t1399, t1375, t1437, t1250, t1251, t1153, -pkin(9) * t1177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1807, t1472, t1586, -t1774, t1525, -t1807, -t1439, 0, t1307, 0, -t1512, -t1511, -t1409, t1512, t1405, -t1505, t1196, t1197, -pkin(5) * t1325, -pkin(5) * t1177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1534, t1530, t1473, -t1534, -t1469, t1714, -t1306, -t1307, 0, 0, t1400, t1324, t1372, -t1398, t1373, t1436, t1784, t1785, t1761, t1800; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1445, t1406, t1850, t1519, t1517, -t1519, 0, t1272, t1238, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1520, t1408, t1518, -t1741, t1426, -t1520, -t1272, 0, t1239, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1512, t1511, t1409, -t1512, -t1405, t1505, -t1238, -t1239, 0, 0;];
m_new_reg  = t1;
