% Calculate vector of inverse dynamics joint torques for
% S6RPRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RPRRPR1_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR1_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR1_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR1_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR1_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR1_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRRPR1_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRRPR1_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRRPR1_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:57:32
% EndTime: 2019-03-09 04:58:43
% DurationCPUTime: 62.42s
% Computational Cost: add. (53866->1320), mult. (39816->1641), div. (0->0), fcn. (35084->12), ass. (0->671)
t595 = qJ(3) + qJ(4);
t586 = pkin(11) + t595;
t578 = cos(t586);
t594 = qJ(1) + pkin(10);
t584 = sin(t594);
t914 = t578 * t584;
t577 = sin(t586);
t918 = t577 * t584;
t585 = cos(t594);
t943 = Icges(6,3) * t585;
t320 = Icges(6,5) * t914 - Icges(6,6) * t918 - t943;
t588 = cos(t595);
t910 = t584 * t588;
t587 = sin(t595);
t911 = t584 * t587;
t944 = Icges(5,3) * t585;
t339 = Icges(5,5) * t910 - Icges(5,6) * t911 - t944;
t1114 = -t320 - t339;
t442 = Icges(6,5) * t578 - Icges(6,6) * t577;
t321 = Icges(6,3) * t584 + t442 * t585;
t472 = Icges(5,5) * t588 - Icges(5,6) * t587;
t340 = Icges(5,3) * t584 + t472 * t585;
t1109 = t321 + t340;
t960 = Icges(6,4) * t577;
t443 = Icges(6,2) * t578 + t960;
t543 = Icges(6,4) * t578;
t445 = Icges(6,1) * t577 + t543;
t961 = Icges(5,4) * t587;
t473 = Icges(5,2) * t588 + t961;
t575 = Icges(5,4) * t588;
t475 = Icges(5,1) * t587 + t575;
t1113 = t443 * t577 - t445 * t578 + t473 * t587 - t475 * t588;
t446 = Icges(6,1) * t578 - t960;
t325 = Icges(6,5) * t584 + t446 * t585;
t476 = Icges(5,1) * t588 - t961;
t344 = Icges(5,5) * t584 + t476 * t585;
t1112 = -t325 * t914 - t344 * t910;
t1105 = t442 + t472;
t471 = Icges(5,5) * t587 + Icges(5,6) * t588;
t441 = Icges(6,5) * t577 + Icges(6,6) * t578;
t924 = t441 * t585;
t1111 = -t471 * t585 - t924;
t925 = t441 * t584;
t1110 = t471 * t584 + t925;
t1090 = -t1113 * t584 + t1111;
t1089 = -t1113 * t585 + t1110;
t717 = -Icges(5,2) * t587 + t575;
t342 = Icges(5,6) * t584 + t585 * t717;
t1108 = t321 * t585 + t342 * t911 + t1112;
t903 = t585 * t588;
t913 = t578 * t585;
t1107 = -t1109 * t584 - t325 * t913 - t344 * t903;
t482 = Icges(6,4) * t918;
t954 = Icges(6,5) * t585;
t324 = Icges(6,1) * t914 - t482 - t954;
t503 = Icges(5,4) * t911;
t955 = Icges(5,5) * t585;
t343 = Icges(5,1) * t910 - t503 - t955;
t1106 = t1114 * t584 - t324 * t913 - t343 * t903;
t948 = Icges(5,6) * t585;
t341 = Icges(5,4) * t910 - Icges(5,2) * t911 - t948;
t931 = t341 * t587;
t701 = -t343 * t588 + t931;
t662 = t701 * t584;
t947 = Icges(6,6) * t585;
t322 = Icges(6,4) * t914 - Icges(6,2) * t918 - t947;
t703 = t322 * t577 - t324 * t578;
t663 = t703 * t584;
t933 = t320 * t585;
t1073 = -t339 * t585 - t662 - t663 - t933;
t716 = -Icges(6,2) * t577 + t543;
t323 = Icges(6,6) * t584 + t585 * t716;
t1072 = -t323 * t918 - t340 * t585 - t1108;
t904 = t585 * t587;
t917 = t577 * t585;
t1071 = -t322 * t917 - t341 * t904 - t1106;
t1070 = -t323 * t917 - t342 * t904 - t1107;
t1056 = -t473 + t476;
t593 = qJD(3) + qJD(4);
t760 = t1056 * t593;
t1055 = t475 + t717;
t761 = t1055 * t593;
t1058 = -t443 + t446;
t762 = t1058 * t593;
t1057 = t445 + t716;
t763 = t1057 * t593;
t1104 = -t577 * t763 + t578 * t762 - t587 * t761 + t588 * t760 + (t441 + t471) * qJD(1);
t823 = rSges(5,1) * t910;
t602 = -pkin(8) - pkin(7);
t542 = t585 * t602;
t600 = cos(qJ(3));
t590 = t600 * pkin(3);
t580 = t590 + pkin(2);
t860 = t584 * t580 + t542;
t598 = sin(qJ(1));
t988 = t598 * pkin(1);
t1103 = -t823 - t988 - t860;
t1102 = t701 + t703;
t1101 = qJD(1) * t1113 + t1105 * t593;
t601 = cos(qJ(1));
t591 = t601 * pkin(1);
t1100 = t1089 * qJD(1);
t466 = rSges(3,1) * t584 + rSges(3,2) * t585;
t437 = -t466 - t988;
t1099 = t1090 * qJD(1);
t1098 = t1109 * qJD(1);
t599 = cos(qJ(6));
t900 = t585 * t599;
t596 = sin(qJ(6));
t908 = t584 * t596;
t404 = t578 * t908 + t900;
t902 = t585 * t596;
t906 = t584 * t599;
t405 = t578 * t906 - t902;
t735 = t405 * rSges(7,1) - t404 * rSges(7,2);
t226 = -rSges(7,3) * t918 - t735;
t983 = rSges(7,1) * t599;
t734 = -rSges(7,2) * t596 + t983;
t353 = -rSges(7,3) * t578 + t577 * t734;
t464 = t585 * t593;
t836 = qJD(6) * t584;
t360 = -t577 * t836 + t464;
t837 = qJD(6) * t578;
t514 = qJD(1) - t837;
t1097 = t514 * t226 - t360 * t353;
t386 = Icges(7,4) * t405;
t216 = -Icges(7,2) * t404 + Icges(7,6) * t918 + t386;
t385 = Icges(7,4) * t404;
t220 = -Icges(7,1) * t405 - Icges(7,5) * t918 + t385;
t1081 = t216 * t596 + t220 * t599;
t213 = Icges(7,5) * t405 - Icges(7,6) * t404 + Icges(7,3) * t918;
t97 = -t1081 * t577 - t213 * t578;
t604 = qJD(1) ^ 2;
t824 = t604 * t591;
t555 = qJD(3) * t584;
t463 = qJD(4) * t584 + t555;
t1096 = t1072 * t463 - t1073 * t464 + t1099;
t1095 = t1070 * t463 - t1071 * t464 + t1100;
t1062 = -t475 * t584 - t341;
t772 = qJD(1) * t344 + t1062 * t593;
t909 = t584 * t593;
t774 = qJD(1) * t342 + t343 * t593 - t473 * t909;
t1065 = -t445 * t584 - t322;
t776 = qJD(1) * t325 + t1065 * t593;
t778 = qJD(1) * t323 + t324 * t593 - t443 * t909;
t1094 = -t577 * t776 - t578 * t778 - t587 * t772 - t588 * t774;
t1061 = -t475 * t585 - t342;
t773 = (-t476 * t584 + t955) * qJD(1) + t1061 * t593;
t1060 = -t473 * t585 + t344;
t775 = (-t584 * t717 + t948) * qJD(1) + t1060 * t593;
t1064 = -t445 * t585 - t323;
t777 = (-t446 * t584 + t954) * qJD(1) + t1064 * t593;
t1063 = -t443 * t585 + t325;
t779 = (-t584 * t716 + t947) * qJD(1) + t1063 * t593;
t1093 = t577 * t777 + t578 * t779 + t587 * t773 + t588 * t775;
t1092 = t1101 * t584 + t1104 * t585;
t1091 = -t1101 * t585 + t1104 * t584;
t1069 = t322 * t578 + t324 * t577 + t341 * t588 + t343 * t587;
t1068 = t323 * t578 + t325 * t577 + t342 * t588 + t344 * t587;
t1088 = -t577 * t779 + t578 * t777 - t587 * t775 + t588 * t773 + t1098;
t1087 = qJD(1) * t1114 + t577 * t778 - t578 * t776 + t587 * t774 - t588 * t772;
t930 = t342 * t587;
t766 = -t339 + t930;
t932 = t323 * t577;
t1086 = t766 - t320 + t932;
t1085 = -t662 + t1107;
t665 = t471 * t593;
t1084 = qJD(1) * t1102 - t584 * t665 - t593 * t925 + t1098;
t1083 = -t585 * t665 - t593 * t924 + (-t1105 * t584 - t325 * t578 - t344 * t588 + t930 + t932 + t943 + t944) * qJD(1);
t579 = pkin(4) * t588;
t500 = t579 + t580;
t592 = -qJ(5) + t602;
t867 = -t584 * t500 - t585 * t592;
t747 = t867 - t988;
t713 = Icges(7,5) * t599 - Icges(7,6) * t596;
t345 = -Icges(7,3) * t578 + t577 * t713;
t957 = Icges(7,4) * t599;
t715 = -Icges(7,2) * t596 + t957;
t347 = -Icges(7,6) * t578 + t577 * t715;
t958 = Icges(7,4) * t596;
t720 = Icges(7,1) * t599 - t958;
t349 = -Icges(7,5) * t578 + t577 * t720;
t128 = t345 * t918 - t347 * t404 + t349 * t405;
t835 = qJD(6) * t585;
t359 = t577 * t835 + t463;
t89 = t213 * t918 - t216 * t404 - t220 * t405;
t406 = -t578 * t902 + t906;
t407 = t578 * t900 + t908;
t215 = Icges(7,5) * t407 + Icges(7,6) * t406 + Icges(7,3) * t917;
t959 = Icges(7,4) * t407;
t218 = Icges(7,2) * t406 + Icges(7,6) * t917 + t959;
t387 = Icges(7,4) * t406;
t221 = Icges(7,1) * t407 + Icges(7,5) * t917 + t387;
t90 = t215 * t918 - t404 * t218 + t405 * t221;
t33 = t128 * t514 + t359 * t90 - t360 * t89;
t129 = t345 * t917 + t347 * t406 + t349 * t407;
t91 = t213 * t917 + t406 * t216 - t220 * t407;
t92 = t215 * t917 + t406 * t218 + t407 * t221;
t34 = t129 * t514 + t359 * t92 - t360 * t91;
t1010 = -t359 / 0.2e1;
t1007 = t360 / 0.2e1;
t1080 = -t1084 * t584 + t1087 * t585;
t1079 = t1083 * t584 + t1088 * t585;
t1078 = t1084 * t585 + t1087 * t584;
t1077 = -t1083 * t585 + t1088 * t584;
t548 = t578 * pkin(5);
t1036 = t577 * pkin(9) + t548;
t380 = t1036 * t584;
t1067 = -t226 + t380;
t227 = t407 * rSges(7,1) + t406 * rSges(7,2) + rSges(7,3) * t917;
t382 = pkin(5) * t913 + pkin(9) * t917;
t1066 = t227 + t382;
t989 = t577 * pkin(5);
t455 = -pkin(9) * t578 + t989;
t1059 = t353 + t455;
t1018 = qJD(1) * t1057 + t463 * t1063 - t464 * (-Icges(6,2) * t914 + t324 - t482);
t1019 = qJD(1) * t1055 + t463 * t1060 - t464 * (-Icges(5,2) * t910 + t343 - t503);
t624 = qJD(1) * t1056 + t1061 * t463 - t1062 * t464;
t625 = qJD(1) * t1058 + t1064 * t463 - t1065 * t464;
t1054 = -t1018 * t577 - t1019 * t587 + t625 * t578 + t624 * t588;
t1053 = t1105 * qJD(1) + t1110 * t464 + t1111 * t463;
t822 = rSges(6,1) * t914;
t1051 = -t822 + t747;
t845 = qJD(1) * t584;
t803 = t577 * t845;
t814 = t578 * t464;
t1050 = t803 - t814;
t915 = t577 * t599;
t821 = rSges(7,1) * t915;
t916 = t577 * t596;
t819 = rSges(7,2) * t916;
t865 = rSges(7,3) * t914 + t584 * t819;
t283 = -t584 * t821 + t865;
t545 = t577 * rSges(7,3);
t354 = t578 * t734 + t545;
t492 = pkin(9) * t914;
t379 = -pkin(5) * t918 + t492;
t422 = t464 * t579;
t843 = qJD(1) * t587;
t802 = t584 * t843;
t496 = pkin(4) * t802;
t796 = t578 * t836;
t838 = qJD(6) * t577;
t1049 = qJD(1) * t379 + t1036 * t464 + t1059 * t845 - t226 * t838 + t283 * t514 - t353 * t796 + t360 * t354 + t422 + t496;
t1048 = t33 * t584 + t34 * t585;
t844 = qJD(1) * t585;
t651 = t577 * t844 + t578 * t909;
t634 = t514 * t599 + t593 * t916;
t756 = qJD(1) * t578 - qJD(6);
t191 = t584 * t634 - t756 * t902;
t633 = t514 * t596 - t593 * t915;
t192 = t584 * t633 + t756 * t900;
t736 = rSges(7,1) * t192 + rSges(7,2) * t191;
t122 = rSges(7,3) * t651 + t736;
t826 = -qJDD(3) - qJDD(4);
t827 = qJDD(6) * t577;
t834 = qJD(6) * t593;
t830 = qJD(1) * qJD(3);
t536 = t584 * t830;
t829 = qJD(1) * qJD(4);
t853 = t584 * t829 + t536;
t167 = (t578 * t834 + t827) * t584 + (qJD(1) * t838 + t826) * t585 + t853;
t733 = -rSges(7,1) * t596 - rSges(7,2) * t599;
t912 = t578 * t593;
t224 = t734 * t912 + (rSges(7,3) * t593 + qJD(6) * t733) * t577;
t233 = t651 * pkin(9) + (-t577 * t909 + t578 * t844) * pkin(5);
t334 = t585 * t826 + t853;
t410 = t1036 * t593;
t412 = -qJDD(6) * t578 + t577 * t834 + qJDD(1);
t453 = -qJDD(3) * t585 + t536;
t896 = t600 * qJD(3) ^ 2;
t597 = sin(qJ(3));
t994 = pkin(3) * t597;
t639 = -pkin(3) * t585 * t896 + t453 * t994 - t824;
t828 = qJD(1) * qJD(5);
t993 = pkin(4) * t587;
t623 = qJDD(5) * t584 + t334 * t993 - t593 * t422 + t585 * t828 + t639;
t272 = t860 + t867;
t573 = t585 * pkin(7);
t468 = pkin(2) * t584 - t573;
t326 = t468 - t860;
t783 = -t468 - t988;
t750 = t326 + t783;
t690 = t272 + t750;
t672 = -t380 + t690;
t840 = qJD(3) * t597;
t816 = pkin(3) * t840;
t898 = t587 * t593;
t458 = -pkin(4) * t898 - t816;
t511 = t584 * t816;
t857 = t602 * t845 + t511;
t553 = qJD(5) * t585;
t858 = t592 * t845 + t553;
t861 = t500 - t580;
t152 = t458 * t584 + t844 * t861 + t857 - t858;
t572 = t584 * pkin(7);
t985 = pkin(2) - t580;
t269 = (-t585 * t985 - t572) * qJD(1) - t857;
t469 = t585 * pkin(2) + t572;
t449 = t469 * qJD(1);
t891 = -t269 - t449;
t812 = -t152 + t891;
t21 = -t514 * t122 + t167 * t353 - t360 * t224 + t412 * t226 + t334 * t455 - t464 * t410 + (-t233 + t812) * qJD(1) + t672 * qJDD(1) + t623;
t440 = t585 * t500;
t505 = t585 * t580;
t852 = -t592 + t602;
t273 = t584 * t852 + t440 - t505;
t759 = -t584 * t602 + t505;
t327 = t759 - t469;
t782 = t469 + t591;
t749 = t327 + t782;
t689 = t273 + t749;
t420 = t463 * t993;
t806 = -t420 - t511 - t553;
t79 = t227 * t514 - t353 * t359 - t455 * t463 + (t382 + t689) * qJD(1) + t806;
t1047 = (qJD(1) * t79 + t21) * t585;
t1035 = t588 * rSges(5,1) - rSges(5,2) * t587;
t1039 = -rSges(5,2) * t911 - t585 * rSges(5,3);
t351 = t823 + t1039;
t566 = t584 * rSges(5,3);
t352 = rSges(5,1) * t903 - rSges(5,2) * t904 + t566;
t841 = qJD(3) * t585;
t793 = -t326 * t555 + t327 * t841 + qJD(2);
t123 = t351 * t463 + t352 * t464 + t793;
t477 = rSges(5,1) * t587 + rSges(5,2) * t588;
t797 = t585 * t840;
t757 = pkin(3) * t797;
t656 = -t464 * t477 - t757;
t688 = -t351 + t750;
t135 = qJD(1) * t688 + t656;
t136 = -t463 * t477 - t511 + (t352 + t749) * qJD(1);
t408 = t477 * t584;
t409 = t477 * t585;
t1046 = -t135 * (qJD(1) * t408 - t1035 * t464) - t123 * (-t463 * t408 - t409 * t464) - t136 * (-qJD(1) * t409 - t1035 * t463);
t1002 = t463 / 0.2e1;
t1001 = -t464 / 0.2e1;
t565 = t584 * rSges(6,3);
t329 = rSges(6,1) * t913 - rSges(6,2) * t917 + t565;
t450 = rSges(6,1) * t577 + rSges(6,2) * t578;
t106 = -t450 * t463 + (t329 + t689) * qJD(1) + t806;
t1037 = t578 * rSges(6,1) - rSges(6,2) * t577;
t375 = t450 * t584;
t187 = -t593 * t375 + (t1037 * t585 + t565) * qJD(1);
t396 = t1037 * t593;
t1040 = -rSges(6,2) * t918 - t585 * rSges(6,3);
t328 = t822 + t1040;
t673 = -t328 + t690;
t43 = t334 * t450 - t396 * t464 + (-t187 + t812) * qJD(1) + t673 * qJDD(1) + t623;
t1044 = qJD(1) * t106 + t43;
t1042 = -t224 - t410;
t460 = qJD(1) * t468;
t1041 = qJD(1) * t326 - t460;
t567 = t584 * rSges(4,3);
t899 = t585 * t600;
t901 = t585 * t597;
t378 = rSges(4,1) * t899 - rSges(4,2) * t901 + t567;
t286 = t378 + t782;
t467 = t585 * rSges(3,1) - rSges(3,2) * t584;
t438 = t467 + t591;
t508 = -t993 - t994;
t447 = t584 * t508;
t907 = t584 * t597;
t373 = pkin(3) * t907 + t447;
t842 = qJD(1) * t597;
t801 = t584 * t842;
t512 = pkin(3) * t801;
t1038 = -qJD(1) * t373 + t512;
t589 = Icges(4,4) * t600;
t718 = -Icges(4,2) * t597 + t589;
t519 = Icges(4,1) * t597 + t589;
t1033 = g(1) * t585 + g(2) * t584;
t905 = t584 * t600;
t945 = Icges(4,3) * t585;
t367 = Icges(4,5) * t905 - Icges(4,6) * t907 - t945;
t528 = Icges(4,4) * t907;
t956 = Icges(4,5) * t585;
t371 = Icges(4,1) * t905 - t528 - t956;
t949 = Icges(4,6) * t585;
t369 = Icges(4,4) * t905 - Icges(4,2) * t907 - t949;
t927 = t369 * t597;
t698 = -t371 * t600 + t927;
t144 = -t367 * t585 - t584 * t698;
t516 = Icges(4,5) * t600 - Icges(4,6) * t597;
t515 = Icges(4,5) * t597 + Icges(4,6) * t600;
t658 = qJD(3) * t515;
t962 = Icges(4,4) * t597;
t520 = Icges(4,1) * t600 - t962;
t372 = Icges(4,5) * t584 + t520 * t585;
t370 = Icges(4,6) * t584 + t585 * t718;
t926 = t370 * t597;
t697 = -t372 * t600 + t926;
t1027 = -t585 * t658 + (-t516 * t584 + t697 + t945) * qJD(1);
t368 = Icges(4,3) * t584 + t516 * t585;
t848 = qJD(1) * t368;
t1026 = qJD(1) * t698 - t584 * t658 + t848;
t517 = Icges(4,2) * t600 + t962;
t692 = t517 * t597 - t519 * t600;
t1023 = t692 * qJD(1) + t516 * qJD(3);
t872 = -Icges(4,2) * t905 + t371 - t528;
t874 = t519 * t584 + t369;
t1022 = -t597 * t872 - t600 * t874;
t664 = t713 * t578;
t699 = -t347 * t596 + t349 * t599;
t706 = -t218 * t596 + t221 * t599;
t1021 = t359 * (-t345 * t585 - t706) - t360 * (-t345 * t584 + t1081) + t514 * (Icges(7,3) * t577 + t664 - t699);
t714 = -Icges(7,2) * t599 - t958;
t1020 = t359 * (-Icges(7,2) * t407 + t221 + t387) - t360 * (-Icges(7,2) * t405 - t220 - t385) + t514 * (t714 * t577 + t349);
t1014 = t167 / 0.2e1;
t452 = qJDD(3) * t584 + t585 * t830;
t333 = qJDD(4) * t584 + t585 * t829 + t452;
t166 = -qJD(6) * t1050 + t585 * t827 + t333;
t1015 = t166 / 0.2e1;
t116 = Icges(7,5) * t192 + Icges(7,6) * t191 + Icges(7,3) * t651;
t118 = Icges(7,4) * t192 + Icges(7,2) * t191 + Icges(7,6) * t651;
t120 = Icges(7,1) * t192 + Icges(7,4) * t191 + Icges(7,5) * t651;
t26 = (-t1081 * t593 - t116) * t578 + (-t118 * t596 + t120 * t599 + t213 * t593 + (-t216 * t599 + t220 * t596) * qJD(6)) * t577;
t189 = t585 * t634 + t756 * t908;
t190 = t585 * t633 - t756 * t906;
t115 = Icges(7,5) * t190 + Icges(7,6) * t189 - Icges(7,3) * t1050;
t117 = Icges(7,4) * t190 + Icges(7,2) * t189 - Icges(7,6) * t1050;
t119 = Icges(7,1) * t190 + Icges(7,4) * t189 - Icges(7,5) * t1050;
t27 = (t593 * t706 - t115) * t578 + (-t117 * t596 + t119 * t599 + t215 * t593 + (-t218 * t599 - t221 * t596) * qJD(6)) * t577;
t98 = -t215 * t578 + t577 * t706;
t1017 = -t98 * t166 / 0.2e1 - t97 * t167 / 0.2e1 + t27 * t1010 + t26 * t1007 - t128 * t1014 - t129 * t1015;
t1016 = -m(6) - m(7);
t1013 = t584 * t1001 + t1002 * t585;
t1012 = t333 / 0.2e1;
t1011 = t334 / 0.2e1;
t1009 = t359 / 0.2e1;
t1008 = -t360 / 0.2e1;
t1006 = t412 / 0.2e1;
t1005 = t452 / 0.2e1;
t1004 = t453 / 0.2e1;
t1003 = -t463 / 0.2e1;
t1000 = t464 / 0.2e1;
t999 = -t514 / 0.2e1;
t998 = t514 / 0.2e1;
t997 = t584 / 0.2e1;
t996 = -t585 / 0.2e1;
t995 = -rSges(7,3) - pkin(9);
t992 = g(1) * t584;
t987 = -qJD(1) / 0.2e1;
t986 = qJD(1) / 0.2e1;
t984 = rSges(4,1) * t600;
t811 = t190 * rSges(7,1) + t189 * rSges(7,2) + rSges(7,3) * t814;
t121 = -rSges(7,3) * t803 + t811;
t457 = pkin(9) * t814;
t815 = t577 * t464;
t652 = -t578 * t845 - t815;
t232 = pkin(5) * t652 - pkin(9) * t803 + t457;
t552 = qJD(5) * t584;
t868 = t585 * t458 + t552;
t151 = t757 + (-t584 * t861 + t585 * t852) * qJD(1) + t868;
t544 = pkin(7) * t844;
t268 = -t757 - t544 + (t584 * t985 - t542) * qJD(1);
t753 = qJDD(1) * t591 - t604 * t988;
t674 = qJD(1) * (-pkin(2) * t845 + t544) + qJDD(1) * t469 + t753;
t610 = qJD(1) * t268 + qJDD(1) * t327 + (-t452 * t597 - t584 * t896) * pkin(3) + t674;
t897 = t588 * t593;
t606 = qJD(1) * t151 + qJDD(1) * t273 + t584 * t828 + (-t333 * t587 - t463 * t897) * pkin(4) - qJDD(5) * t585 + t610;
t20 = qJD(1) * t232 + qJDD(1) * t382 + t514 * t121 - t166 * t353 - t359 * t224 + t412 * t227 - t333 * t455 - t463 * t410 + t606;
t978 = t20 * t585;
t977 = t21 * t584;
t970 = t584 * t79;
t967 = qJDD(1) / 0.2e1;
t142 = -t345 * t578 + t577 * t699;
t712 = -Icges(7,5) * t596 - Icges(7,6) * t599;
t204 = t593 * t664 + (Icges(7,3) * t593 + qJD(6) * t712) * t577;
t666 = t715 * t578;
t205 = t593 * t666 + (Icges(7,6) * t593 + qJD(6) * t714) * t577;
t667 = t720 * t578;
t719 = -Icges(7,1) * t596 - t957;
t206 = t593 * t667 + (Icges(7,5) * t593 + qJD(6) * t719) * t577;
t57 = (t593 * t699 - t204) * t578 + (-t205 * t596 + t206 * t599 + t345 * t593 + (-t347 * t599 - t349 * t596) * qJD(6)) * t577;
t966 = t142 * t412 + t57 * t514;
t754 = -t463 * t272 + t793;
t889 = t273 + t382;
t50 = -t226 * t359 + t227 * t360 + t380 * t463 + t464 * t889 + t754;
t941 = qJD(1) * t50;
t890 = t273 + t329;
t84 = t328 * t463 + t464 * t890 + t754;
t939 = qJD(1) * t84;
t937 = t136 * t585;
t854 = rSges(4,2) * t907 + t585 * rSges(4,3);
t377 = rSges(4,1) * t905 - t854;
t748 = -t377 + t783;
t521 = rSges(4,1) * t597 + rSges(4,2) * t600;
t798 = t521 * t841;
t200 = qJD(1) * t748 - t798;
t936 = t200 * t584;
t935 = t200 * t585;
t201 = qJD(1) * t286 - t521 * t555;
t435 = t521 * t585;
t934 = t201 * t435;
t923 = t463 * t588;
t920 = t515 * t584;
t919 = t515 * t585;
t892 = -t584 * t272 + t585 * t273;
t883 = -t584 * t326 + t585 * t327;
t882 = t584 * t351 + t585 * t352;
t881 = -t584 * t367 - t371 * t899;
t880 = t584 * t368 + t372 * t899;
t873 = -t519 * t585 - t370;
t871 = -t517 * t585 + t372;
t869 = t450 * t845 + t496;
t864 = rSges(7,3) * t913 + t585 * t819;
t862 = rSges(5,2) * t802 + rSges(5,3) * t844;
t859 = rSges(4,2) * t801 + rSges(4,3) * t844;
t856 = -t517 + t520;
t855 = t519 + t718;
t846 = qJD(1) * t516;
t839 = qJD(3) * t600;
t254 = -t584 * t692 - t919;
t831 = t254 * qJD(1);
t825 = pkin(4) * t897;
t421 = t464 * t993;
t820 = rSges(5,2) * t897;
t817 = pkin(3) * t839;
t813 = t585 * t151 + t584 * t152 - t272 * t844;
t228 = -t585 * t820 + (-t585 * t898 - t588 * t845) * rSges(5,1) + t862;
t671 = t477 * t593;
t229 = -t584 * t671 + (t1035 * t585 + t566) * qJD(1);
t810 = t585 * t228 + t584 * t229 + t351 * t844;
t809 = -t227 - t889;
t808 = t585 * t268 + t584 * t269 - t326 * t844;
t805 = t492 + t865;
t494 = pkin(9) * t913;
t804 = t494 + t864;
t800 = t585 * t842;
t795 = t578 * t835;
t792 = -pkin(2) - t984;
t790 = t845 / 0.2e1;
t789 = t844 / 0.2e1;
t788 = -t555 / 0.2e1;
t787 = t555 / 0.2e1;
t786 = -t841 / 0.2e1;
t785 = t841 / 0.2e1;
t654 = -t477 - t994;
t653 = -t450 - t993;
t781 = -t455 - t993;
t780 = t597 * (-t584 ^ 2 - t585 ^ 2);
t448 = t585 * t508;
t374 = pkin(3) * t901 + t448;
t770 = t463 * t373 + t374 * t464;
t376 = t450 * t585;
t769 = -t463 * t375 - t376 * t464;
t317 = t372 * t905;
t768 = t368 * t585 - t317;
t765 = -qJD(1) * t376 - t1037 * t463;
t764 = -t367 + t926;
t755 = t584 * t328 + t585 * t329 + t892;
t752 = -pkin(4) * t923 + qJD(1) * t374;
t751 = -t396 - t825;
t427 = t1035 * t593;
t745 = -t427 - t817;
t744 = t1037 + t579;
t741 = -t584 * t592 + t440 + t591;
t740 = qJD(1) * t375 - t1037 * t464 - t422;
t524 = rSges(2,1) * t601 - rSges(2,2) * t598;
t522 = rSges(2,1) * t598 + rSges(2,2) * t601;
t523 = -rSges(4,2) * t597 + t984;
t235 = t370 * t600 + t372 * t597;
t659 = qJD(3) * t517;
t250 = -t585 * t659 + (-t584 * t718 + t949) * qJD(1);
t660 = qJD(3) * t519;
t252 = -t585 * t660 + (-t520 * t584 + t956) * qJD(1);
t612 = -qJD(3) * t235 - t250 * t597 + t252 * t600 + t848;
t234 = t369 * t600 + t371 * t597;
t251 = qJD(1) * t370 - t584 * t659;
t253 = qJD(1) * t372 - t584 * t660;
t613 = qJD(1) * t367 - qJD(3) * t234 - t251 * t597 + t253 * t600;
t732 = t584 * (t1027 * t584 + t612 * t585) - t585 * (t1026 * t584 + t613 * t585);
t731 = t584 * (-t1027 * t585 + t612 * t584) - t585 * (-t1026 * t585 + t613 * t584);
t687 = t552 - t757;
t669 = -t421 + t687;
t78 = qJD(1) * t672 - t455 * t464 + t1097 + t669;
t730 = t585 * t78 + t970;
t729 = t584 * t90 - t585 * t89;
t728 = t584 * t89 + t585 * t90;
t727 = t584 * t92 - t585 * t91;
t726 = t584 * t91 + t585 * t92;
t725 = t584 * t98 - t585 * t97;
t724 = t584 * t97 + t585 * t98;
t711 = -t135 * t585 - t136 * t584;
t145 = -t370 * t907 - t768;
t710 = -t144 * t585 + t145 * t584;
t146 = -t369 * t901 - t881;
t147 = -t370 * t901 + t880;
t709 = -t146 * t585 + t147 * t584;
t708 = -t201 * t584 - t935;
t705 = -t226 * t585 - t227 * t584;
t256 = -rSges(4,2) * t585 * t839 + (-t600 * t845 - t797) * rSges(4,1) + t859;
t434 = t521 * t584;
t257 = -qJD(3) * t434 + (t523 * t585 + t567) * qJD(1);
t704 = t256 * t585 + t257 * t584;
t696 = t377 * t584 + t378 * t585;
t693 = t517 * t600 + t519 * t597;
t691 = -t825 + t1042;
t686 = -t450 + t508;
t682 = t577 * t995 - t548;
t670 = rSges(6,2) * t1050 + rSges(6,3) * t844;
t186 = rSges(6,1) * t652 + t670;
t681 = t585 * t186 + t584 * t187 + t328 * t844 + t813;
t680 = t1066 * t585 + t1067 * t584 + t892;
t668 = t508 - t1059;
t661 = -t817 - t825;
t657 = t268 * t841 + t269 * t555 - t452 * t326 - t327 * t453 + qJDD(2);
t655 = -t1036 - t545;
t649 = (-t585 * t843 - t923) * pkin(4);
t648 = -t213 * t360 + t215 * t359 + t345 * t514;
t647 = (-Icges(7,5) * t404 - Icges(7,6) * t405) * t360 - (Icges(7,5) * t406 - Icges(7,6) * t407) * t359 - t712 * t577 * t514;
t646 = -t396 + t661;
t284 = -t585 * t821 + t864;
t381 = -pkin(5) * t917 + t494;
t643 = -t226 * t795 + t359 * t283 + t284 * t360 + t463 * t379 + t381 * t464;
t642 = -t597 * t871 + t600 * t873;
t641 = qJD(1) * t272 + t1041 + t687;
t640 = t354 + t579 + t1036;
t638 = t661 + t1042;
t637 = t463 * t152 - t333 * t272 + t657;
t636 = t813 + t1067 * t844 + (t121 + t232) * t585 + (t122 + t233) * t584;
t635 = t577 * t647;
t629 = (-t597 * t855 + t600 * t856) * qJD(1);
t627 = (Icges(7,1) * t406 - t218 - t959) * t359 - (-Icges(7,1) * t404 - t216 - t386) * t360 + (t719 * t577 - t347) * t514;
t622 = qJD(1) * t381 - t1036 * t463 + t227 * t838 + t514 * t284 - t353 * t795 - t354 * t359;
t620 = t1033 * (-pkin(5) - t983) * t577;
t489 = t718 * qJD(3);
t490 = t520 * qJD(3);
t611 = qJD(1) * t515 - qJD(3) * t693 - t489 * t597 + t490 * t600;
t609 = t1021 * t577;
t22 = -t1050 * t213 + t116 * t917 + t118 * t406 + t120 * t407 + t189 * t216 - t190 * t220;
t23 = -t1050 * t215 + t115 * t917 + t117 * t406 + t119 * t407 + t189 * t218 + t190 * t221;
t24 = t116 * t918 - t118 * t404 + t120 * t405 + t191 * t216 - t192 * t220 + t213 * t651;
t25 = t115 * t918 - t117 * t404 + t119 * t405 + t191 * t218 + t192 * t221 + t215 * t651;
t279 = t347 * t584;
t280 = t347 * t585;
t281 = t349 * t584;
t282 = t349 * t585;
t45 = -t1050 * t345 + t189 * t347 + t190 * t349 + t204 * t917 + t205 * t406 + t206 * t407;
t3 = t129 * t412 + t166 * t92 + t167 * t91 - t22 * t360 + t23 * t359 + t45 * t514;
t348 = Icges(7,6) * t577 + t666;
t350 = Icges(7,5) * t577 + t667;
t37 = t142 * t514 + t359 * t98 - t360 * t97;
t46 = t191 * t347 + t192 * t349 + t204 * t918 - t205 * t404 + t206 * t405 + t345 * t651;
t4 = t128 * t412 + t166 * t90 + t167 * t89 - t24 * t360 + t25 * t359 + t46 * t514;
t605 = (((t280 * t596 - t282 * t599 + t215) * t359 - (t279 * t596 - t281 * t599 + t213) * t360 + (-t348 * t596 + t350 * t599 + t345) * t514 + t142 * qJD(6)) * t577 + (qJD(6) * t724 - t1021) * t578) * t999 + t729 * t1014 + t727 * t1015 - t37 * t838 / 0.2e1 + (qJD(1) * t724 - t26 * t585 + t27 * t584) * t998 + t725 * t1006 + ((t280 * t404 - t282 * t405) * t359 - (t279 * t404 - t281 * t405) * t360 + (-t348 * t404 + t350 * t405) * t514 + (t128 * t577 + t90 * t913) * qJD(6) + ((qJD(6) * t89 + t648) * t578 + t609) * t584) * t1007 + (qJD(1) * t728 - t24 * t585 + t25 * t584) * t1008 + (qJD(1) * t726 - t22 * t585 + t23 * t584) * t1009 + ((-t280 * t406 - t282 * t407) * t359 - (-t279 * t406 - t281 * t407) * t360 + (t348 * t406 + t350 * t407) * t514 + (t129 * t577 + t91 * t914) * qJD(6) + ((qJD(6) * t92 + t648) * t578 + t609) * t585) * t1010 + (t1018 * t578 + t1019 * t588 + t625 * t577 + t624 * t587) * t987 + (t1094 * t585 + t1093 * t584 + (t1068 * t585 + t1069 * t584) * qJD(1)) * t986 + (t1068 * t584 - t1069 * t585) * t967 - t1048 * t837 / 0.2e1 + (t1070 * t584 - t1071 * t585) * t1012 + (t1072 * t584 - t1073 * t585) * t1011 + (t1053 * t584 + t1054 * t585) * t1003 + (t1080 * t585 + t1079 * t584 + (t1070 * t585 + t1071 * t584) * qJD(1)) * t1002 + (t1078 * t585 + t1077 * t584 + (t1072 * t585 + t1073 * t584) * qJD(1)) * t1001 + (-t1053 * t585 + t1054 * t584) * t1000 + (qJD(1) * t1092 + qJDD(1) * t1089 + t1070 * t333 + t1071 * t334 + t1079 * t463 + t1080 * t464 + t3) * t997 + (qJD(1) * t1091 + qJDD(1) * t1090 + t1072 * t333 + t1073 * t334 + t1077 * t463 + t1078 * t464 + t4) * t996 + (t33 + t1096) * t790 + (t34 + t1095) * t789;
t497 = t523 * qJD(3);
t418 = t733 * t577;
t383 = t585 * t421;
t266 = rSges(7,1) * t406 - rSges(7,2) * t407;
t265 = -rSges(7,1) * t404 - rSges(7,2) * t405;
t255 = -t585 * t692 + t920;
t242 = t255 * qJD(1);
t197 = qJD(3) * t696 + qJD(2);
t127 = -t1023 * t585 + t611 * t584;
t126 = t1023 * t584 + t611 * t585;
t114 = qJD(1) * t256 + qJDD(1) * t378 - t452 * t521 - t497 * t555 + t674;
t113 = -t824 - t497 * t841 + t453 * t521 + (-t257 - t449) * qJD(1) + t748 * qJDD(1);
t112 = -qJD(3) * t697 + t250 * t600 + t252 * t597;
t111 = -qJD(3) * t698 + t251 * t600 + t253 * t597;
t107 = qJD(3) * t704 + t377 * t452 - t378 * t453 + qJDD(2);
t105 = qJD(1) * t673 - t450 * t464 + t669;
t88 = qJD(3) * t709 + t242;
t87 = qJD(3) * t710 + t831;
t77 = qJD(1) * t228 + qJDD(1) * t352 - t333 * t477 - t427 * t463 + t610;
t76 = t334 * t477 - t427 * t464 + (-t229 + t891) * qJD(1) + t688 * qJDD(1) + t639;
t49 = t228 * t464 + t229 * t463 + t333 * t351 - t334 * t352 + t657;
t44 = qJD(1) * t186 + qJDD(1) * t329 - t333 * t450 - t463 * t396 + t606;
t28 = t187 * t463 + t328 * t333 + (t151 + t186) * t464 - t890 * t334 + t637;
t13 = t121 * t360 + t122 * t359 - t166 * t226 - t167 * t227 + t233 * t463 + t333 * t380 + (t151 + t232) * t464 - t889 * t334 + t637;
t1 = [(t242 + ((t145 - t317 + (t368 + t927) * t585 + t881) * t585 + t880 * t584) * qJD(3)) * t785 + (t693 + m(3) * (t437 ^ 2 + t467 * t438) + m(2) * (t522 ^ 2 + t524 ^ 2) + t473 * t588 + t475 * t587 + Icges(2,3) + Icges(3,3) + t443 * t578 + t445 * t577) * qJDD(1) + (t1092 + t1093) * t1002 + ((-t466 * t604 - g(2) + t753) * t438 + (-t824 + (-0.2e1 * t467 - t591 + t438) * t604 - g(1)) * t437) * m(3) + ((t858 + (t450 * t593 - t458) * t584 + (-t565 - t591 + (-t500 - t1037) * t585) * qJD(1)) * t105 + (t44 - g(2)) * (t329 + t741) + (t43 - g(1)) * (-t1040 + t1051) + (-rSges(6,1) * t815 - t653 * t464 + t105 - t641 + t670 + t868 + (t328 + t988 + t1051) * qJD(1)) * t106) * m(6) + (-(-t798 - t200 - t460 + (-t377 - t988) * qJD(1)) * t201 + t201 * (t544 + t859) + (t521 * t936 - t934) * qJD(3) + ((-t200 * t601 - t201 * t598) * pkin(1) + (-pkin(2) - t523) * t935 + (t200 * (-rSges(4,3) - pkin(7)) + t201 * t792) * t584) * qJD(1) + (-g(2) + t114) * t286 + (-g(1) + t113) * (t584 * t792 + t573 + t854 - t988)) * m(4) + (t255 + t235) * t1005 + (t254 + t234) * t1004 + (-qJD(3) * t692 + t489 * t600 + t490 * t597 + t577 * t762 + t578 * t763 + t587 * t760 + t588 * t761) * qJD(1) + (t1091 - t1094 + t1095) * t1001 + t966 + (t87 - t831 + ((t585 * t764 + t147 - t880) * t585 + (t584 * t764 + t146 + t768) * t584) * qJD(3)) * t788 + (-t682 * t992 + t78 * (-t736 + t858) + t79 * (-pkin(5) * t815 + t457 + t811 + t868) + (t21 * t655 + (-t458 + (t578 * t995 + t989) * t593) * t78) * t584 + ((-t598 * t79 - t601 * t78) * pkin(1) + (t78 * (-t500 + t655) - t79 * t592) * t585 + (-t500 + t682) * t970) * qJD(1) - (-t78 + t781 * t464 + (-t380 - t988) * qJD(1) + t641 + t1097) * t79 + (-g(2) + t20) * (t741 + t1066) + (-g(1) + t21) * (-t735 + t747)) * m(7) + (t46 + t34) * t1008 + ((t1086 * t585 + t1070 + t1085 - t663) * t464 + ((t1102 + t1109) * t585 + t1086 * t584 + t1071 + t1112) * t463 + t1096 - t1099) * t1003 + (t111 + t127 + t88) * t786 + (t112 + t126) * t787 + t34 * t1007 + (((t322 * t585 + t323 * t584) * t577 + (t340 + t931) * t585 + t1072 + t1106 + t1108) * t464 + (-t585 * t766 - t324 * t914 + t933 + (t322 * t584 - t323 * t585) * t577 - t1085 + t1073) * t463 + t1100) * t1000 + ((-t671 - t816) * t937 + (t77 - g(2)) * (t352 + t591 + t759) + (t76 - g(1)) * (-t1039 + t1103) + (t857 + (rSges(5,1) * t898 + t820) * t584 + (-t566 - t591 + (-t580 - t1035) * t585) * qJD(1)) * t135 + (t135 - t656 - t1041 + t862 + (t351 + t988 + t1103) * qJD(1)) * t136) * m(5) - t1017 + (t1089 + t1068) * t1012 + (t1090 + t1069) * t1011 + t45 * t1009 - m(2) * (-g(1) * t522 + g(2) * t524); m(3) * qJDD(2) + (-m(3) - m(4) - m(5) + t1016) * g(3) + m(4) * t107 + m(5) * t49 + m(6) * t28 + m(7) * t13; ((-t841 * t920 - t846) * t585 + (t629 + (t642 * t584 + (-t1022 + t919) * t585) * qJD(3)) * t584) * t785 + ((-t555 * t919 + t846) * t584 + (t629 + (-t1022 * t585 + (t920 + t642) * t584) * qJD(3)) * t585) * t788 + t605 + t88 * t789 + t87 * t790 + ((t144 * t584 + t145 * t585) * qJD(1) + t731) * t786 + ((t146 * t584 + t147 * t585) * qJD(1) + t732) * t787 + (-t234 * t585 + t235 * t584) * t967 + (-t111 * t585 + t112 * t584 + (t234 * t584 + t235 * t585) * qJD(1)) * t986 + ((t597 * t856 + t600 * t855) * qJD(1) + ((t584 * t871 - t585 * t872) * t600 + (t584 * t873 + t585 * t874) * t597) * qJD(3)) * t987 + (qJD(1) * t127 + qJD(3) * t731 + qJDD(1) * t254 + t144 * t453 + t145 * t452) * t996 + (qJD(1) * t126 + qJD(3) * t732 + qJDD(1) * t255 + t146 * t453 + t147 * t452) * t997 + t710 * t1004 + t709 * t1005 + (t13 * (t680 + t883) + t50 * (t636 + t808) + t668 * t1047 + (t20 * t668 + t79 * t638 + (-t327 + t809) * t941) * t584 - g(1) * (t448 + t804) - g(2) * (t447 + t805) - g(3) * (t590 + t640) - t620 - t79 * (t622 + t752) - t50 * (-t227 * t796 + t643 + t770) - (-t79 * t800 + (t50 * t780 - t600 * t730) * qJD(3)) * pkin(3) + (t585 * t638 - t1038 + t1049 + t512) * t78) * m(7) + (t105 * (t512 + t869) + t28 * (t755 + t883) + t84 * (t681 + t808) + (t1044 * t686 + t105 * t646) * t585 + (t44 * t686 + t106 * t646 + (-t327 - t890) * t939) * t584 - t105 * (t740 + t1038) - t106 * (t752 + t765) - t84 * (t769 + t770) - (-t106 * t800 + ((-t105 * t585 - t106 * t584) * t600 + t84 * t780) * qJD(3)) * pkin(3) - g(1) * (t448 - t376) - g(2) * (t447 - t375) - g(3) * (t590 + t744)) * m(6) + (-g(3) * (t1035 + t590) - t1033 * t654 + t49 * (t882 + t883) + t123 * (t808 + t810) + (t135 * t745 + (qJD(1) * t136 + t76) * t654) * t585 + (t77 * t654 + t136 * t745 + (t135 * t477 + t123 * (-t327 - t352)) * qJD(1)) * t584 - (-t136 * t800 + (t123 * t780 + t600 * t711) * qJD(3)) * pkin(3) + t1046) * m(5) + (t107 * t696 + t197 * ((t377 * t585 - t378 * t584) * qJD(1) + t704) + t708 * t497 + (-t113 * t585 - t114 * t584 + (-t201 * t585 + t936) * qJD(1)) * t521 + g(1) * t435 + g(2) * t434 - g(3) * t523 - (t200 * t434 - t934) * qJD(1) - (t197 * (-t434 * t584 - t435 * t585) + t708 * t523) * qJD(3)) * m(4); t605 + (t13 * t680 + (t691 * t79 + t809 * t941) * t584 - t79 * (t649 + t622) - g(1) * (-pkin(4) * t904 + t804) - g(2) * (-pkin(4) * t911 + t805) - g(3) * t640 - t620 + (t20 * t584 + t1047) * (-t353 + t781) + (t585 * t691 + t1049 - t496) * t78 + (t636 + t383 - (-t227 * t837 - t420) * t584 - t643) * t50) * m(7) + (t28 * t755 + (t106 * t751 - t890 * t939) * t584 - t106 * (t649 + t765) - g(3) * t744 + (t420 * t584 + t383 + t681 - t769) * t84 + (t585 * t751 - t496 - t740 + t869) * t105 + (t1044 * t585 + t44 * t584 - t1033) * t653) * m(6) + (t49 * t882 + t123 * (-t352 * t845 + t810) + t711 * t427 + (-t77 * t584 - t76 * t585 + (t135 * t584 - t937) * qJD(1)) * t477 + g(1) * t409 + g(2) * t408 - g(3) * t1035 + t1046) * m(5); t1016 * (-g(2) * t585 + t992) + 0.2e1 * (-t978 / 0.2e1 + t977 / 0.2e1 + t50 * t1013) * m(7) + 0.2e1 * (t1013 * t84 + t43 * t997 + t44 * t996) * m(6); -t34 * t803 / 0.2e1 + t3 * t917 / 0.2e1 + t4 * t918 / 0.2e1 + (t1020 * t406 + t627 * t407 - t585 * t635) * t1010 + (-t1020 * t404 + t405 * t627 - t584 * t635) * t1007 + t1048 * t912 / 0.2e1 + ((t593 * t726 - t45) * t1009 + (t593 * t728 - t46) * t1008 - t966 / 0.2e1 - t142 * t1006 + (t593 * t724 - t57) * t998 + t647 * t999 + t1017) * t578 + (t726 * t1015 + (-qJD(1) * t727 + t129 * t593 + t22 * t584 + t23 * t585) * t1009 + t33 * t789 + t728 * t1014 + (-qJD(1) * t729 + t128 * t593 + t24 * t584 + t25 * t585) * t1008 + t593 * t37 / 0.2e1 + t724 * t1006 + (-qJD(1) * t725 + t142 * t593 + t26 * t584 + t27 * t585) * t998 + (-t1020 * t596 + t599 * t627) * t999) * t577 + ((-t79 * t121 + t78 * t122 - t20 * t227 - t21 * t226 + (t50 * t705 + (t584 * t78 - t585 * t79) * t353) * t593) * t578 + (t78 * (t224 * t584 + t226 * t593) + t79 * (-t224 * t585 + t227 * t593) + t13 * t705 + t50 * (-t121 * t584 + t122 * t585 + t226 * t845 - t227 * t844) + (qJD(1) * t730 + t977 - t978) * t353) * t577 - t78 * (-t265 * t514 - t360 * t418) - t79 * (t266 * t514 - t359 * t418) - t50 * (t265 * t359 + t266 * t360) - g(1) * t266 - g(2) * t265 - g(3) * t418) * m(7);];
tau  = t1;
