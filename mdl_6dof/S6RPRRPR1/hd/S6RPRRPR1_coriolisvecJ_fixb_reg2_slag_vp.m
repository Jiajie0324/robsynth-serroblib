% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta2,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:59
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRPR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:58:45
% EndTime: 2019-03-09 04:58:56
% DurationCPUTime: 4.42s
% Computational Cost: add. (11101->412), mult. (26585->536), div. (0->0), fcn. (19128->10), ass. (0->238)
t189 = sin(qJ(6));
t183 = qJD(3) + qJD(4);
t190 = sin(qJ(4));
t191 = sin(qJ(3));
t259 = t190 * t191;
t221 = t183 * t259;
t193 = cos(qJ(4));
t194 = cos(qJ(3));
t242 = qJD(1) * qJD(3);
t233 = t194 * t242;
t250 = qJD(1) * t194;
t235 = t193 * t250;
t253 = -qJD(4) * t235 - t193 * t233;
t106 = qJD(1) * t221 + t253;
t159 = t190 * t194 + t193 * t191;
t119 = t183 * t159;
t107 = t119 * qJD(1);
t186 = sin(pkin(11));
t270 = cos(pkin(11));
t70 = -t186 * t106 + t270 * t107;
t285 = t189 * t70;
t251 = qJD(1) * t191;
t236 = t190 * t251;
t152 = -t235 + t236;
t154 = qJD(1) * t159;
t100 = t270 * t152 + t186 * t154;
t308 = qJD(6) + t100;
t192 = cos(qJ(6));
t312 = t192 * t308;
t313 = -t308 * t312 - t285;
t148 = t154 * qJ(5);
t174 = sin(pkin(10)) * pkin(1) + pkin(7);
t161 = t174 * qJD(1);
t230 = pkin(8) * qJD(1) + t161;
t244 = t191 * qJD(2);
t128 = t194 * t230 + t244;
t123 = t190 * t128;
t182 = t194 * qJD(2);
t215 = t230 * t191;
t127 = t182 - t215;
t125 = qJD(3) * pkin(3) + t127;
t81 = t193 * t125 - t123;
t75 = -t148 + t81;
t67 = t183 * pkin(4) + t75;
t263 = t152 * qJ(5);
t257 = t193 * t128;
t82 = t190 * t125 + t257;
t76 = t82 - t263;
t72 = t270 * t76;
t38 = t186 * t67 + t72;
t35 = t183 * pkin(9) + t38;
t176 = -cos(pkin(10)) * pkin(1) - pkin(2);
t160 = -t194 * pkin(3) + t176;
t155 = qJD(1) * t160;
t110 = t152 * pkin(4) + qJD(5) + t155;
t206 = -t186 * t152 + t154 * t270;
t55 = t100 * pkin(5) - pkin(9) * t206 + t110;
t15 = t189 * t55 + t192 * t35;
t71 = -t106 * t270 - t186 * t107;
t180 = pkin(3) * t251;
t96 = t107 * pkin(4) + qJD(3) * t180;
t27 = t70 * pkin(5) - t71 * pkin(9) + t96;
t177 = qJD(3) * t182;
t121 = -qJD(3) * t215 + t177;
t122 = t128 * qJD(3);
t229 = -t190 * t121 - t193 * t122;
t50 = -t82 * qJD(4) + t229;
t199 = t106 * qJ(5) - t154 * qJD(5) + t50;
t247 = qJD(4) * t193;
t248 = qJD(4) * t190;
t226 = -t193 * t121 + t190 * t122 - t125 * t247 + t128 * t248;
t29 = -t107 * qJ(5) - t152 * qJD(5) - t226;
t9 = t186 * t199 + t270 * t29;
t3 = -qJD(6) * t15 - t189 * t9 + t192 * t27;
t311 = t15 * t308 + t3;
t217 = t189 * t35 - t192 * t55;
t2 = -qJD(6) * t217 + t189 * t27 + t192 * t9;
t310 = t217 * t308 + t2;
t309 = t100 * t206;
t249 = qJD(3) * t191;
t181 = pkin(3) * t249;
t307 = 0.2e1 * t181;
t245 = qJD(6) * t192;
t286 = t186 * t76;
t37 = t270 * t67 - t286;
t34 = -t183 * pkin(5) - t37;
t8 = t186 * t29 - t270 * t199;
t306 = t8 * t189 + t34 * t245;
t246 = qJD(6) * t189;
t208 = -t192 * t70 + t246 * t308;
t295 = pkin(8) + t174;
t156 = t295 * t191;
t157 = t295 * t194;
t105 = -t190 * t156 + t193 * t157;
t256 = t193 * t194;
t158 = -t256 + t259;
t112 = -t186 * t158 + t159 * t270;
t118 = -qJD(3) * t256 - t194 * t247 + t221;
t80 = -t118 * t270 - t186 * t119;
t305 = -t112 * t208 + t312 * t80;
t104 = -t193 * t156 - t190 * t157;
t207 = -t159 * qJ(5) + t104;
t89 = -t158 * qJ(5) + t105;
t57 = t186 * t89 - t207 * t270;
t304 = t8 * t57;
t303 = t154 * pkin(4);
t1 = t2 * t192;
t302 = t3 * t189;
t111 = t158 * t270 + t186 * t159;
t301 = t8 * t111;
t300 = t8 * t192;
t90 = -t192 * t183 + t189 * t206;
t92 = t189 * t183 + t192 * t206;
t299 = t92 * t90;
t298 = t92 * t206;
t297 = t308 * t206;
t296 = t206 * t90;
t284 = t189 * t71;
t46 = t92 * qJD(6) + t284;
t276 = t46 * t192;
t280 = t192 * t90;
t294 = -t112 * t276 - t80 * t280;
t293 = -t189 * t46 - t90 * t245;
t45 = -t183 * t245 - t192 * t71 + t206 * t246;
t79 = -t186 * t118 + t119 * t270;
t292 = -t45 * t111 + t92 * t79;
t291 = -t80 * t100 - t112 * t70;
t290 = -t159 * t107 + t118 * t152;
t289 = pkin(3) * qJD(4);
t287 = t206 ^ 2;
t283 = t189 * t80;
t282 = t189 * t90;
t281 = t189 * t92;
t279 = t192 * t92;
t277 = t45 * t189;
t275 = t70 * t111;
t274 = t80 * t183;
t273 = t206 * t183;
t85 = -t190 * t127 - t257;
t203 = t85 + t263;
t231 = t270 * t190;
t86 = t193 * t127 - t123;
t77 = -t148 + t86;
t272 = -t186 * t77 + t203 * t270 + (t186 * t193 + t231) * t289;
t260 = t186 * t190;
t142 = (t193 * t270 - t260) * t289;
t43 = t186 * t203 + t270 * t77;
t271 = t142 - t43;
t269 = t100 ^ 2;
t268 = t100 * t183;
t267 = t100 * t189;
t266 = t100 * t192;
t264 = t118 * t183;
t262 = t154 * t152;
t261 = t155 * t154;
t258 = t191 * t161;
t195 = qJD(3) ^ 2;
t255 = t195 * t191;
t254 = t195 * t194;
t179 = t193 * pkin(3) + pkin(4);
t147 = pkin(3) * t231 + t186 * t179;
t252 = t191 ^ 2 - t194 ^ 2;
t162 = qJD(1) * t176;
t241 = -t15 * t267 + t217 * t266 + t1;
t239 = t80 * t281;
t196 = qJD(1) ^ 2;
t237 = t191 * t196 * t194;
t31 = t34 * t246;
t234 = t206 * t217 + t31;
t103 = t119 * pkin(4) + t181;
t232 = qJD(3) * t295;
t227 = t15 * t206 + t306;
t225 = t191 * t233;
t224 = -t100 * t37 + t206 * t38;
t223 = -t111 * t46 - t79 * t90;
t220 = -t71 * t111 - t206 * t79;
t219 = -t15 * t189 + t192 * t217;
t218 = -t15 * t192 - t189 * t217;
t58 = t186 * t207 + t270 * t89;
t126 = t158 * pkin(4) + t160;
t62 = t111 * pkin(5) - t112 * pkin(9) + t126;
t25 = t189 * t62 + t192 * t58;
t24 = -t189 * t58 + t192 * t62;
t216 = t279 + t282;
t214 = -t158 * t106 + t154 * t119;
t138 = t194 * t161 + t244;
t213 = -t267 * t308 - t208;
t212 = 0.2e1 * qJD(3) * t162;
t211 = -t110 * t206 - t8;
t210 = -t192 * t45 - t246 * t92;
t209 = -t245 * t308 - t285;
t205 = t155 * t152 + t226;
t61 = pkin(5) * t206 + pkin(9) * t100 + t303;
t149 = t191 * t232;
t150 = t194 * t232;
t68 = -t193 * t149 - t190 * t150 - t156 * t247 - t157 * t248;
t146 = -pkin(3) * t260 + t179 * t270;
t140 = pkin(9) + t147;
t204 = t100 * t34 - t140 * t70 - t142 * t308;
t202 = t112 * t209 - t283 * t308;
t201 = t219 * qJD(6) + t1 - t302;
t130 = -t161 * t249 + t177;
t131 = t138 * qJD(3);
t137 = t182 - t258;
t200 = t130 * t194 + t131 * t191 + (-t137 * t194 - t138 * t191) * qJD(3);
t69 = -t105 * qJD(4) + t190 * t149 - t193 * t150;
t198 = t118 * qJ(5) - t159 * qJD(5) + t69;
t197 = t100 * t110 - t9;
t175 = -pkin(4) * t270 - pkin(5);
t173 = t186 * pkin(4) + pkin(9);
t139 = -pkin(5) - t146;
t129 = t180 + t303;
t108 = t119 * t183;
t94 = -t152 ^ 2 + t154 ^ 2;
t83 = -t253 + (t152 - t236) * t183;
t78 = t79 * t183;
t60 = t180 + t61;
t52 = t71 + t268;
t51 = -t70 + t273;
t48 = -t119 * qJ(5) - t158 * qJD(5) + t68;
t41 = -t269 + t287;
t40 = t270 * t75 - t286;
t39 = t186 * t75 + t72;
t30 = t79 * pkin(5) - t80 * pkin(9) + t103;
t23 = t186 * t198 + t270 * t48;
t22 = t186 * t48 - t198 * t270;
t21 = t189 * t60 + t192 * t43;
t20 = -t189 * t43 + t192 * t60;
t19 = t189 * t61 + t192 * t40;
t18 = -t189 * t40 + t192 * t61;
t17 = t282 * t308 - t276;
t16 = t312 * t92 - t277;
t13 = -t298 - t313;
t12 = t213 + t296;
t6 = -(t280 + t281) * t100 + t210 + t293;
t5 = -qJD(6) * t25 - t189 * t23 + t192 * t30;
t4 = qJD(6) * t24 + t189 * t30 + t192 * t23;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t225, -0.2e1 * t252 * t242, t254, -0.2e1 * t225, -t255, 0, -t174 * t254 + t191 * t212, t174 * t255 + t194 * t212, t200, t200 * t174, -t106 * t159 - t154 * t118, -t214 + t290, -t264, t107 * t158 + t152 * t119, -t108, 0, t160 * t107 + t155 * t119 + t69 * t183 + (qJD(1) * t158 + t152) * t181, -t160 * t106 - t155 * t118 + t154 * t307 - t68 * t183, t104 * t106 - t105 * t107 + t81 * t118 - t82 * t119 - t68 * t152 - t69 * t154 + t158 * t226 - t50 * t159, t50 * t104 - t105 * t226 + t155 * t307 + t82 * t68 + t81 * t69, t71 * t112 + t206 * t80, t220 + t291, t274, t100 * t79 + t275, -t78, 0, t103 * t100 + t110 * t79 + t96 * t111 + t126 * t70 - t22 * t183, t103 * t206 + t110 * t80 + t96 * t112 + t126 * t71 - t23 * t183, -t23 * t100 - t9 * t111 + t8 * t112 + t206 * t22 - t37 * t80 - t38 * t79 + t57 * t71 - t58 * t70, t110 * t103 + t96 * t126 - t37 * t22 + t38 * t23 + t9 * t58 + t304, t112 * t210 + t279 * t80, -t239 + (t277 + (-t279 + t282) * qJD(6)) * t112 + t294, t292 + t305, -t112 * t293 + t282 * t80, t202 + t223, t308 * t79 + t275, t3 * t111 + t306 * t112 - t217 * t79 + t22 * t90 + t24 * t70 + t34 * t283 + t308 * t5 + t57 * t46, t34 * t192 * t80 - t2 * t111 - t15 * t79 + t22 * t92 - t25 * t70 - t4 * t308 - t57 * t45 + (-t31 + t300) * t112, t24 * t45 - t25 * t46 - t4 * t90 - t5 * t92 + t219 * t80 + (qJD(6) * t218 - t2 * t189 - t3 * t192) * t112, t15 * t4 + t2 * t25 - t217 * t5 + t34 * t22 + t3 * t24 + t304; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t255, -t254, 0, t130 * t191 - t131 * t194 + (-t137 * t191 + t138 * t194) * qJD(3), 0, 0, 0, 0, 0, 0, -t108, t264, t214 + t290, -t82 * t118 - t81 * t119 - t50 * t158 - t159 * t226, 0, 0, 0, 0, 0, 0, -t78, -t274, -t220 + t291, t9 * t112 - t37 * t79 + t38 * t80 + t301, 0, 0, 0, 0, 0, 0, t202 - t223, t292 - t305, t239 + (qJD(6) * t216 - t277) * t112 + t294, t112 * t201 - t218 * t80 + t34 * t79 + t301; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t237, t252 * t196, 0, t237, 0, 0, -t162 * t251, -t162 * t250 - t177 + (t137 + t258) * qJD(3), 0, 0, t262, t94, t83, -t262, 0, 0, -t152 * t180 - t261 - t85 * t183 + (-t257 + (-pkin(3) * t183 - t125) * t190) * qJD(4) + t229, t86 * t183 + (-t154 * t251 - t183 * t247) * pkin(3) + t205 (t82 + t85) * t154 + (-t81 + t86) * t152 + (t106 * t193 - t107 * t190 + (-t152 * t193 + t154 * t190) * qJD(4)) * pkin(3), -t81 * t85 - t82 * t86 + (-t155 * t251 - t190 * t226 + t193 * t50 + (-t190 * t81 + t193 * t82) * qJD(4)) * pkin(3), t309, t41, t52, -t309, t51, 0, -t129 * t100 - t183 * t272 + t211, -t129 * t206 - t183 * t271 + t197, -t100 * t271 - t146 * t71 - t147 * t70 + t206 * t272 + t224, -t110 * t129 - t8 * t146 + t9 * t147 + t271 * t38 - t272 * t37, t16, t6, t13, t17, t12, -t297, t139 * t46 - t20 * t308 + t272 * t90 + (-qJD(6) * t140 * t308 - t8) * t192 + t204 * t189 + t234, -t139 * t45 + (t140 * t246 + t21) * t308 + t272 * t92 + t204 * t192 + t227, t20 * t92 + t21 * t90 + (-t140 * t46 - t142 * t90 + (t140 * t92 + t217) * qJD(6)) * t192 + (-t140 * t45 + t142 * t92 - t3 + (t140 * t90 - t15) * qJD(6)) * t189 + t241, t8 * t139 + t272 * t34 + (t142 * t192 - t21) * t15 - (-t142 * t189 - t20) * t217 + t201 * t140; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262, t94, t83, -t262, 0, 0, t82 * t183 - t261 + t50, t81 * t183 + t205, 0, 0, t309, t41, t52, -t309, t51, 0, -t100 * t303 + t39 * t183 + t211, t40 * t183 - t206 * t303 + t197, t40 * t100 - t39 * t206 + (-t186 * t70 - t270 * t71) * pkin(4) + t224, t37 * t39 - t38 * t40 + (-t110 * t154 + t186 * t9 - t270 * t8) * pkin(4), t16, t6, t13, t17, t12, -t297, t173 * t209 + t175 * t46 - t18 * t308 + t267 * t34 - t39 * t90 + t234 - t300, t173 * t208 - t175 * t45 + t19 * t308 + t266 * t34 - t39 * t92 + t227, t18 * t92 - t302 + t19 * t90 + (-t276 - t277) * t173 + (t173 * t216 + t219) * qJD(6) + t241, -t15 * t19 + t173 * t201 + t8 * t175 + t18 * t217 - t34 * t39; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t70 + t273, t71 - t268, -t269 - t287, t100 * t38 + t206 * t37 + t96, 0, 0, 0, 0, 0, 0, t213 - t296, -t298 + t313 -(t280 - t281) * t100 - t210 + t293, t189 * t310 + t192 * t311 - t34 * t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t299, -t90 ^ 2 + t92 ^ 2, t308 * t90 - t45, -t299, -t284 + (-qJD(6) + t308) * t92, t70, -t34 * t92 + t311, t34 * t90 - t310, 0, 0;];
tauc_reg  = t7;
