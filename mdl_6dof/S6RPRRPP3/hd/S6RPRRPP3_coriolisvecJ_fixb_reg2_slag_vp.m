% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPP3_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP3_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP3_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP3_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:36:58
% EndTime: 2019-03-09 04:37:11
% DurationCPUTime: 4.59s
% Computational Cost: add. (3723->433), mult. (8600->513), div. (0->0), fcn. (5131->6), ass. (0->216)
t148 = cos(qJ(3));
t235 = t148 * qJD(1);
t130 = -qJD(4) + t235;
t146 = sin(qJ(3));
t140 = t146 ^ 2;
t147 = cos(qJ(4));
t233 = qJD(1) * qJD(3);
t210 = t147 * t233;
t145 = sin(qJ(4));
t240 = qJD(4) * t145;
t217 = t146 * t240;
t236 = t147 * qJD(3);
t219 = t148 * t236;
t302 = t217 - t219;
t166 = t302 * t130 + t140 * t210;
t238 = t145 * qJD(3);
t244 = qJD(1) * t147;
t104 = t146 * t244 + t238;
t243 = qJD(3) * t146;
t245 = qJD(1) * t146;
t212 = t145 * t245;
t232 = qJD(3) * qJD(4);
t63 = qJD(4) * t212 - t147 * t232 - t148 * t210;
t303 = t104 * t243 + t148 * t63;
t312 = t166 - t303;
t102 = t212 - t236;
t239 = qJD(4) * t147;
t216 = t146 * t239;
t221 = t148 * t238;
t164 = t216 + t221;
t64 = qJD(1) * t164 + t145 * t232;
t311 = -t102 * t243 + t148 * t64;
t257 = t130 * t104;
t258 = t130 * t102;
t310 = (t64 - t257) * t145 + (t63 - t258) * t147;
t134 = -cos(pkin(9)) * pkin(1) - pkin(2);
t94 = -t148 * pkin(3) - t146 * pkin(8) + t134;
t160 = t94 * qJD(1);
t133 = sin(pkin(9)) * pkin(1) + pkin(7);
t114 = t133 * qJD(1);
t296 = t148 * qJD(2) - t146 * t114;
t71 = t296 * qJD(3);
t309 = qJD(4) * t160 + t71;
t135 = t146 * t233;
t284 = pkin(4) + qJ(6);
t306 = t284 * t135;
t120 = t145 * t140 * t233;
t305 = t120 + t311;
t237 = t146 * qJD(2);
t81 = t148 * t114 + t237;
t70 = qJD(3) * pkin(8) + t81;
t190 = pkin(3) * t146 - pkin(8) * t148;
t111 = t190 * qJD(3);
t93 = qJD(1) * t111;
t205 = t309 * t145 - t147 * t93 + t70 * t239;
t36 = t145 * t160 + t147 * t70;
t169 = -t130 * t36 - t205;
t206 = -t145 * t93 - t309 * t147 + t70 * t240;
t35 = t145 * t70 - t147 * t160;
t304 = -t130 * t35 - t206;
t174 = t104 * pkin(5) + t35;
t249 = qJD(5) + t174;
t215 = t130 * t239;
t253 = t147 * t148;
t31 = qJD(1) * ((-t104 + t238) * t146 + t130 * t253) - t215;
t255 = t145 * t148;
t301 = qJD(1) * ((t102 + t236) * t146 - t130 * t255) + t130 * t240;
t28 = t130 * qJ(5) - t36;
t195 = pkin(4) * t135;
t5 = -t195 + t205;
t300 = -t130 * t28 + t5;
t299 = -t130 * t221 - t146 * t215;
t39 = t64 + t257;
t100 = t104 ^ 2;
t99 = t102 ^ 2;
t298 = -t99 + t100;
t128 = t130 ^ 2;
t297 = -t100 - t128;
t119 = qJD(5) * t130;
t129 = qJ(5) * t135;
t295 = t129 - t119;
t11 = t166 + t303;
t294 = t299 + t305;
t293 = -t120 - t299 + t311;
t292 = t145 * qJD(5) + t237 + (t145 * t235 - t240) * pkin(4);
t242 = qJD(3) * t148;
t77 = t102 * t217;
t291 = -t147 * (t102 * t242 + t146 * t64) + t77;
t287 = pkin(5) + pkin(8);
t286 = pkin(8) * t130;
t285 = t102 * pkin(5);
t181 = -qJ(5) * t147 + qJ(6) * t145;
t283 = (qJD(1) * t181 + t114) * t148 - qJD(4) * t181 + t147 * qJD(6) + t292;
t282 = (-qJ(5) * t244 + t114) * t148 + qJ(5) * t239 + t292;
t254 = t146 * t147;
t281 = -t102 * t219 - t64 * t254;
t108 = t190 * qJD(1);
t46 = t145 * t108 + t147 * t296;
t280 = t145 * t111 + t94 * t239;
t279 = qJ(5) * t64;
t72 = t81 * qJD(3);
t153 = t63 * qJ(5) - t104 * qJD(5) + t72;
t10 = t64 * pkin(4) + t153;
t278 = t10 * t145;
t277 = t10 * t147;
t69 = -qJD(3) * pkin(3) - t296;
t162 = -t104 * qJ(5) + t69;
t34 = t102 * pkin(4) + t162;
t276 = t104 * t34;
t13 = t284 * t130 + t249;
t275 = t13 * t130;
t271 = t145 * t69;
t270 = t147 * t69;
t22 = t284 * t102 + t162;
t267 = t22 * t104;
t266 = t63 * t145;
t265 = t72 * t145;
t264 = t72 * t146;
t263 = t72 * t147;
t107 = t133 * t253;
t52 = t145 * t94 + t107;
t230 = pkin(5) * t255;
t262 = -t287 * t240 - (qJ(5) * t146 - t230) * qJD(1) - t46;
t118 = t287 * t147;
t229 = pkin(5) * t253;
t45 = t147 * t108 - t145 * t296;
t261 = qJD(4) * t118 - (-t284 * t146 + t229) * qJD(1) + t45;
t260 = t102 * qJ(5);
t259 = t102 * t104;
t256 = t145 * t146;
t116 = t146 * t133;
t149 = qJD(3) ^ 2;
t252 = t149 * t146;
t251 = t149 * t148;
t250 = -qJD(5) - t35;
t24 = t36 - t285;
t248 = -qJD(6) - t24;
t247 = pkin(4) * t256 + t116;
t246 = -t148 ^ 2 + t140;
t115 = qJD(1) * t134;
t241 = qJD(4) * t104;
t76 = t104 * t216;
t231 = t104 * t221 - t63 * t256 + t76;
t228 = t145 * t286;
t227 = t147 * t286;
t226 = pkin(8) * t243;
t225 = pkin(8) * t236;
t106 = t133 * t255;
t150 = qJD(1) ^ 2;
t222 = t146 * t150 * t148;
t213 = t130 * t245;
t208 = -t145 * qJ(5) - pkin(3);
t207 = -t133 * t145 - pkin(4);
t51 = t147 * t94 - t106;
t202 = t133 * t147 - qJ(5);
t201 = qJD(4) * t102 - t63;
t200 = -t135 + t259;
t194 = t164 * pkin(4) + qJ(5) * t217 + t133 * t242;
t193 = t148 * t135;
t192 = qJD(4) * t107 - t147 * t111 + t94 * t240;
t191 = -t119 - t206;
t48 = t148 * qJ(5) - t52;
t189 = t201 * pkin(8);
t188 = (-t64 + t241) * pkin(8);
t15 = qJD(6) - t28 - t285;
t187 = t13 * t147 - t145 * t15;
t186 = t13 * t145 + t147 * t15;
t27 = t130 * pkin(4) - t250;
t185 = t145 * t28 + t147 * t27;
t184 = t145 * t27 - t147 * t28;
t183 = -t145 * t36 + t147 * t35;
t182 = t145 * t35 + t147 * t36;
t177 = 0.2e1 * qJD(3) * t115;
t173 = -t64 * pkin(5) - t206;
t172 = -t63 * pkin(5) + t205;
t3 = t102 * qJD(6) + t284 * t64 + t153;
t171 = t3 * t145 + t22 * t239;
t170 = -t3 * t147 + t22 * t240;
t167 = t77 + t281;
t163 = -t102 * t22 + t173;
t20 = -t147 * t257 - t266;
t21 = -t145 * t258 - t64 * t147;
t159 = t63 + t258;
t4 = -t129 - t191;
t157 = qJD(4) * t185 + t5 * t145 - t4 * t147;
t156 = qJD(4) * t183 + t145 * t205 - t147 * t206;
t155 = t172 - t306;
t154 = t264 + t71 * t148 + (-t146 * t81 - t148 * t296) * qJD(3);
t17 = -t104 * t302 - t63 * t254;
t18 = t102 * t164 + t64 * t256;
t139 = t148 * pkin(4);
t127 = 0.2e1 * t129;
t117 = t287 * t145;
t113 = -t147 * pkin(4) + t208;
t92 = -t284 * t147 + t208;
t73 = (-t130 - t235) * t243;
t65 = -qJ(5) * t254 + t247;
t55 = t104 * pkin(4) + t260;
t50 = t146 * t181 + t247;
t49 = t139 - t51;
t44 = -pkin(5) * t256 - t48;
t43 = -pkin(4) * t245 - t45;
t42 = -qJ(5) * t245 - t46;
t40 = t284 * t104 + t260;
t37 = t148 * qJ(6) + t106 + t139 + (pkin(5) * t146 - t94) * t147;
t32 = (-qJ(5) * t242 - qJD(5) * t146) * t147 + t194;
t26 = t238 * t116 - t192;
t25 = (-t146 * t236 - t148 * t240) * t133 + t280;
t19 = t207 * t243 + t192;
t16 = (t133 * t240 + qJD(5)) * t148 + t202 * t243 - t280;
t14 = t181 * t242 + (qJD(6) * t145 + (qJ(6) * qJD(4) - qJD(5)) * t147) * t146 + t194;
t9 = -t148 * qJD(5) + (-pkin(5) * t254 - t106) * qJD(4) + (-t202 * t146 - t230) * qJD(3) + t280;
t6 = -pkin(5) * t217 + t148 * qJD(6) + (t229 + (-qJ(6) + t207) * t146) * qJD(3) + t192;
t2 = t173 + t295;
t1 = qJD(6) * t130 + t155;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t193, -0.2e1 * t246 * t233, t251, -0.2e1 * t193, -t252, 0, -t133 * t251 + t146 * t177, t133 * t252 + t148 * t177, t154, t154 * t133, t17, t167 - t231, t11, t18, t293, t73, -t26 * t130 + (t205 + (t102 * t133 + t271) * qJD(3)) * t148 + (t69 * t239 + t133 * t64 + t265 + (qJD(1) * t51 - t35) * qJD(3)) * t146, t25 * t130 + (-t206 + (t104 * t133 + t270) * qJD(3)) * t148 + (-t69 * t240 - t133 * t63 + t263 + (-qJD(1) * t52 - t36) * qJD(3)) * t146, -t25 * t102 - t26 * t104 + t51 * t63 - t52 * t64 + t183 * t242 + (-qJD(4) * t182 + t145 * t206 + t147 * t205) * t146, t36 * t25 - t35 * t26 - t205 * t51 - t206 * t52 + (t69 * t242 + t264) * t133, t73, -t11, -t293, t17, t77 + (-t102 * t147 - t104 * t145) * t242 + (t266 + (-t64 - t241) * t147) * t146, t18, t16 * t102 + t19 * t104 + t48 * t64 - t49 * t63 + t185 * t242 + (-qJD(4) * t184 + t145 * t4 + t147 * t5) * t146, -t32 * t102 - t19 * t130 - t65 * t64 + (-t238 * t34 - t5) * t148 + (-t34 * t239 - t278 + (qJD(1) * t49 + t27) * qJD(3)) * t146, -t32 * t104 + t16 * t130 + t65 * t63 + (-t236 * t34 + t4) * t148 + (t34 * t240 - t277 + (-qJD(1) * t48 - t28) * qJD(3)) * t146, t10 * t65 + t28 * t16 + t27 * t19 + t34 * t32 + t4 * t48 + t5 * t49, t73, -t293, t11, t18, t231 - t291, t17, -t9 * t102 + t6 * t104 - t37 * t63 - t44 * t64 + t187 * t242 + (-qJD(4) * t186 + t1 * t147 - t145 * t2) * t146, -t14 * t104 - t9 * t130 + t50 * t63 + (-t22 * t236 - t2) * t148 + ((qJD(1) * t44 + t15) * qJD(3) + t170) * t146, t14 * t102 + t6 * t130 + t50 * t64 + (t22 * t238 + t1) * t148 + ((-qJD(1) * t37 - t13) * qJD(3) + t171) * t146, t1 * t37 + t13 * t6 + t22 * t14 + t15 * t9 + t2 * t44 + t3 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t252, -t251, 0, t71 * t146 - t72 * t148 + (-t146 * t296 + t148 * t81) * qJD(3), 0, 0, 0, 0, 0, 0, -t294, -t312, t76 + (t104 * t242 + t146 * t201) * t145 + t281 (qJD(3) * t182 - t72) * t148 + (qJD(3) * t69 + t156) * t146, 0, 0, 0, 0, 0, 0, t231 + t291, t294, t312 (qJD(3) * t184 - t10) * t148 + (qJD(3) * t34 + t157) * t146, 0, 0, 0, 0, 0, 0, t167 + t231, t312, t130 * t164 - t305 (qJD(3) * t186 - t3) * t148 + (qJD(3) * t22 + qJD(4) * t187 + t1 * t145 + t2 * t147) * t146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t222, t246 * t150, 0, t222, 0, 0, -t115 * t245, -t115 * t235, 0, 0, t20, -t310, t31, t21, t301, t213, -pkin(3) * t64 - t81 * t102 + t45 * t130 - t263 + (t227 + t271) * qJD(4) + (t146 * t35 + (-t148 * t69 - t226) * t145) * qJD(1), pkin(3) * t63 - t81 * t104 - t46 * t130 + t265 + (-t228 + t270) * qJD(4) + (-t69 * t253 + (t36 - t225) * t146) * qJD(1), t46 * t102 + t45 * t104 + (t188 + t304) * t147 + (t189 - t169) * t145, -t72 * pkin(3) + pkin(8) * t156 + t35 * t45 - t36 * t46 - t69 * t81, t213, -t31, -t301, t20, -t310, t21, -t42 * t102 - t43 * t104 + (-t130 * t27 + t188 - t4) * t147 + (t189 + t300) * t145, t277 - t113 * t64 + t43 * t130 + t282 * t102 + (-t145 * t34 - t227) * qJD(4) + (-t146 * t27 + (t148 * t34 + t226) * t145) * qJD(1), -t278 + t113 * t63 - t42 * t130 + t282 * t104 + (-t147 * t34 + t228) * qJD(4) + (t34 * t253 + (t28 + t225) * t146) * qJD(1), t157 * pkin(8) + t10 * t113 - t27 * t43 - t28 * t42 - t282 * t34, t213, -t301, t31, t21, t310, t20, -t117 * t63 - t118 * t64 + t261 * t104 - t262 * t102 + (t2 - t275) * t147 + (t15 * t130 + t1) * t145, t92 * t63 - t262 * t130 + t283 * t104 + (t22 * t253 + (qJD(3) * t118 - t15) * t146) * qJD(1) - t171, t92 * t64 + t261 * t130 - t283 * t102 + (-t22 * t255 + (-qJD(3) * t117 + t13) * t146) * qJD(1) + t170, t1 * t117 + t2 * t118 + t13 * t261 + t15 * t262 - t22 * t283 + t3 * t92; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259, t298, -t159, -t259, -t39, t135, -t104 * t69 + t169, t102 * t69 - t304, 0, 0, t135, t159, t39, t259, t298, -t259, pkin(4) * t63 - t279 + (-t28 - t36) * t104 + (t27 + t250) * t102, t102 * t55 - t169 - 0.2e1 * t195 + t276, -t34 * t102 + t55 * t104 + t130 * t250 + t127 + t191, -t5 * pkin(4) - t4 * qJ(5) + t250 * t28 - t27 * t36 - t34 * t55, t135, t39, -t159, -t259, -t298, t259, -t279 + t284 * t63 + (t15 + t248) * t104 + (t13 - t249) * t102, t104 * t40 - t130 * t174 - 0.2e1 * t119 + t127 + t163, -t40 * t102 - t267 + (-0.2e1 * qJD(6) - t24) * t130 + 0.2e1 * t306 - t172, t2 * qJ(5) - t1 * t284 + t13 * t248 + t15 * t249 - t22 * t40; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t159, -t200, t297, t276 + t300, 0, 0, 0, 0, 0, 0, -t159, t297, t200, t267 + (qJD(6) + t15) * t130 + t155; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t39, t135 + t259, -t99 - t128, t163 - t275 + t295;];
tauc_reg  = t7;
