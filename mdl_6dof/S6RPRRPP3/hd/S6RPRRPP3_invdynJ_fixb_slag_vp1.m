% Calculate vector of inverse dynamics joint torques for
% S6RPRRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 04:37
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RPRRPP3_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP3_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP3_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPP3_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPP3_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP3_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRRPP3_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRRPP3_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRRPP3_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 04:35:09
% EndTime: 2019-03-09 04:36:57
% DurationCPUTime: 100.63s
% Computational Cost: add. (43186->1327), mult. (57622->1610), div. (0->0), fcn. (55247->8), ass. (0->611)
t1150 = Icges(6,4) - Icges(5,5) - Icges(7,5);
t1149 = Icges(7,4) + Icges(6,5) - Icges(5,6);
t628 = cos(qJ(4));
t1189 = (-Icges(5,4) - Icges(6,6)) * t628;
t625 = sin(qJ(4));
t1188 = (Icges(5,4) - Icges(7,6)) * t625;
t1187 = -Icges(5,1) - Icges(6,2);
t1184 = Icges(5,2) + Icges(7,2);
t1183 = -t1188 + (Icges(5,1) + Icges(7,3)) * t628;
t1182 = -t1189 + (-Icges(5,2) - Icges(6,3)) * t625;
t626 = sin(qJ(3));
t629 = cos(qJ(3));
t1181 = t1150 * t629 + t1183 * t626;
t1180 = t1149 * t629 + t1182 * t626;
t1179 = Icges(6,1) + Icges(7,1) + Icges(5,3);
t1178 = t1149 * t625 - t1150 * t628;
t944 = t626 * t628;
t591 = Icges(7,6) * t944;
t946 = t625 * t626;
t1177 = Icges(7,2) * t946 - t1180 + t591;
t592 = Icges(6,6) * t946;
t1169 = -Icges(6,2) * t944 - t1181 + t592;
t1176 = (t1184 * t628 + t1188) * t626;
t1175 = (t1187 * t625 + t1189) * t626;
t624 = qJ(1) + pkin(9);
t614 = sin(t624);
t615 = cos(t624);
t945 = t625 * t629;
t438 = t614 * t945 + t615 * t628;
t401 = Icges(7,6) * t438;
t943 = t628 * t629;
t439 = t614 * t943 - t615 * t625;
t950 = t614 * t626;
t206 = Icges(7,5) * t950 + Icges(7,3) * t439 + t401;
t404 = Icges(6,6) * t438;
t216 = -Icges(6,4) * t950 + Icges(6,2) * t439 - t404;
t407 = Icges(5,4) * t438;
t231 = -Icges(5,1) * t439 - Icges(5,5) * t950 + t407;
t1162 = t206 + t216 - t231;
t441 = t614 * t625 + t615 * t943;
t948 = t615 * t626;
t440 = -t614 * t628 + t615 * t945;
t968 = Icges(7,6) * t440;
t208 = Icges(7,5) * t948 + Icges(7,3) * t441 + t968;
t406 = Icges(6,6) * t440;
t217 = Icges(6,4) * t948 - Icges(6,2) * t441 + t406;
t409 = Icges(5,4) * t440;
t232 = Icges(5,1) * t441 + Icges(5,5) * t948 - t409;
t1161 = t208 - t217 + t232;
t405 = Icges(6,6) * t439;
t209 = Icges(6,5) * t950 + Icges(6,3) * t438 - t405;
t402 = Icges(7,6) * t439;
t213 = -Icges(7,4) * t950 - Icges(7,2) * t438 - t402;
t408 = Icges(5,4) * t439;
t227 = -Icges(5,2) * t438 + Icges(5,6) * t950 + t408;
t1160 = t209 - t213 - t227;
t971 = Icges(6,6) * t441;
t211 = Icges(6,5) * t948 + Icges(6,3) * t440 - t971;
t403 = Icges(7,6) * t441;
t214 = Icges(7,4) * t948 + Icges(7,2) * t440 + t403;
t983 = Icges(5,4) * t441;
t229 = -Icges(5,2) * t440 + Icges(5,6) * t948 + t983;
t1159 = t211 + t214 - t229;
t218 = Icges(7,1) * t950 + Icges(7,4) * t438 + Icges(7,5) * t439;
t221 = Icges(6,1) * t950 - Icges(6,4) * t439 + Icges(6,5) * t438;
t224 = Icges(5,5) * t439 - Icges(5,6) * t438 + Icges(5,3) * t950;
t1158 = t218 + t221 + t224;
t220 = Icges(7,1) * t948 + Icges(7,4) * t440 + Icges(7,5) * t441;
t223 = Icges(6,1) * t948 - Icges(6,4) * t441 + Icges(6,5) * t440;
t226 = Icges(5,5) * t441 - Icges(5,6) * t440 + Icges(5,3) * t948;
t1131 = t220 + t223 + t226;
t1130 = t1178 * t626 - t1179 * t629;
t1174 = t1178 * t629 + t1179 * t626;
t966 = Icges(7,6) * t628;
t748 = Icges(7,2) * t625 + t966;
t1090 = (t748 - t1182) * t629 + t1149 * t626;
t970 = Icges(6,6) * t625;
t749 = Icges(6,2) * t628 - t970;
t1089 = (t749 + t1183) * t629 - t1150 * t626;
t1171 = (t1149 * t628 + t1150 * t625) * t626;
t1136 = t1158 * t948 + t1160 * t440 + t1162 * t441;
t1135 = t1131 * t948 + t1159 * t440 + t1161 * t441;
t880 = qJD(4) * t628;
t833 = t615 * t880;
t882 = qJD(4) * t625;
t834 = t614 * t882;
t884 = qJD(3) * t626;
t836 = t625 * t884;
t201 = qJD(1) * t438 + t615 * t836 - t629 * t833 - t834;
t888 = qJD(1) * t615;
t686 = t614 * t880 + t625 * t888;
t835 = t628 * t884;
t889 = qJD(1) * t614;
t844 = t629 * t889;
t879 = qJD(4) * t629;
t202 = t628 * t844 + (t625 * t879 + t835) * t615 - t686;
t883 = qJD(3) * t629;
t837 = t615 * t883;
t887 = qJD(1) * t626;
t845 = t614 * t887;
t687 = t837 - t845;
t102 = Icges(7,5) * t687 - Icges(7,6) * t201 - Icges(7,3) * t202;
t108 = Icges(6,4) * t687 + Icges(6,2) * t202 - Icges(6,6) * t201;
t118 = -Icges(5,1) * t202 + Icges(5,4) * t201 + Icges(5,5) * t687;
t1168 = t102 - t108 + t118;
t203 = -t614 * t836 - t615 * t882 - t628 * t889 + t629 * t686;
t204 = qJD(1) * t441 - t614 * t835 - t629 * t834 - t833;
t1144 = t614 * t883;
t689 = t615 * t887 + t1144;
t103 = Icges(7,5) * t689 + Icges(7,6) * t203 + Icges(7,3) * t204;
t109 = Icges(6,4) * t689 - Icges(6,2) * t204 + Icges(6,6) * t203;
t119 = Icges(5,1) * t204 - Icges(5,4) * t203 + Icges(5,5) * t689;
t1167 = t103 - t109 + t119;
t104 = Icges(6,5) * t687 + Icges(6,6) * t202 - Icges(6,3) * t201;
t106 = Icges(7,4) * t687 - Icges(7,2) * t201 - Icges(7,6) * t202;
t116 = -Icges(5,4) * t202 + Icges(5,2) * t201 + Icges(5,6) * t687;
t1166 = t104 + t106 - t116;
t105 = Icges(6,5) * t689 - Icges(6,6) * t204 + Icges(6,3) * t203;
t107 = Icges(7,4) * t689 + Icges(7,2) * t203 + Icges(7,6) * t204;
t117 = Icges(5,4) * t204 - Icges(5,2) * t203 + Icges(5,6) * t689;
t1165 = t105 + t107 - t117;
t110 = Icges(7,1) * t687 - Icges(7,4) * t201 - Icges(7,5) * t202;
t112 = Icges(6,1) * t687 + Icges(6,4) * t202 - Icges(6,5) * t201;
t114 = -Icges(5,5) * t202 + Icges(5,6) * t201 + Icges(5,3) * t687;
t1164 = t110 + t112 + t114;
t111 = Icges(7,1) * t689 + Icges(7,4) * t203 + Icges(7,5) * t204;
t113 = Icges(6,1) * t689 - Icges(6,4) * t204 + Icges(6,5) * t203;
t115 = Icges(5,5) * t204 - Icges(5,6) * t203 + Icges(5,3) * t689;
t1163 = t111 + t113 + t115;
t1059 = t1130 * t948 - t1169 * t441 + t1177 * t440;
t1157 = qJD(3) * t1174 + qJD(4) * t1171;
t881 = qJD(4) * t626;
t1156 = (Icges(6,3) * t628 + t970) * t881 + t1176 * qJD(4) + t1090 * qJD(3);
t1155 = (-Icges(7,3) * t625 + t966) * t881 + t1175 * qJD(4) + t1089 * qJD(3);
t1152 = -t1169 * t628 + t1177 * t625;
t630 = cos(qJ(1));
t623 = t630 * pkin(1);
t1118 = rSges(7,3) + qJ(6);
t1015 = pkin(1) * qJD(1);
t622 = t629 * pkin(3);
t1071 = t626 * pkin(8) + t622;
t475 = t1071 * t614;
t610 = t615 * pkin(7);
t508 = t614 * pkin(2) - t610;
t489 = qJD(1) * t508;
t533 = pkin(8) * t837;
t582 = pkin(7) * t888;
t627 = sin(qJ(1));
t838 = t615 * t884;
t566 = pkin(3) * t626 - pkin(8) * t629;
t885 = qJD(3) * t615;
t842 = t566 * t885;
t1151 = -pkin(3) * t838 + qJD(1) * t475 + t1015 * t627 + t489 + t533 + t582 + t842;
t1020 = t627 * pkin(1);
t506 = rSges(3,1) * t614 + rSges(3,2) * t615;
t479 = -t506 - t1020;
t1138 = t1158 * t950 + t1160 * t438 + t1162 * t439;
t1137 = t1131 * t950 + t1159 * t438 + t1161 * t439;
t1060 = t1130 * t950 - t1169 * t439 + t1177 * t438;
t787 = t439 * rSges(5,1) - t438 * rSges(5,2);
t242 = -rSges(5,3) * t950 - t787;
t1018 = rSges(5,1) * t628;
t786 = -rSges(5,2) * t625 + t1018;
t468 = -rSges(5,3) * t629 + t626 * t786;
t482 = -t614 * t881 + t885;
t601 = qJD(1) - t879;
t1148 = -t242 * t601 + t468 * t482;
t1120 = t227 * t625 + t231 * t628;
t81 = -t1120 * t626 - t224 * t629;
t873 = qJD(1) * qJD(3);
t484 = qJDD(3) * t614 + t615 * t873;
t872 = qJDD(4) * t626;
t271 = qJD(4) * t687 + t615 * t872 + t484;
t886 = qJD(3) * t614;
t481 = t615 * t881 + t886;
t510 = qJD(3) * t881 - qJDD(4) * t629 + qJDD(1);
t397 = qJD(5) * t440;
t120 = -t202 * pkin(4) - qJ(5) * t201 + t397;
t302 = t441 * pkin(4) + qJ(5) * t440;
t688 = -t838 - t844;
t306 = pkin(3) * t688 - pkin(8) * t845 + t533;
t947 = t615 * t629;
t574 = pkin(3) * t947;
t477 = pkin(8) * t948 + t574;
t523 = qJD(3) * t1071;
t1146 = t614 * pkin(7);
t509 = t615 * pkin(2) + t1146;
t631 = qJD(1) ^ 2;
t796 = qJDD(1) * t623 - t1020 * t631;
t705 = qJD(1) * (-pkin(2) * t889 + t582) + qJDD(1) * t509 + t796;
t643 = qJD(1) * t306 + qJDD(1) * t477 - t484 * t566 - t523 * t886 + t705;
t638 = qJD(5) * t203 + qJDD(5) * t438 + t601 * t120 + t510 * t302 + t643;
t1024 = pkin(4) * t628;
t1081 = (qJ(5) * t625 + t1024) * t626;
t1119 = rSges(7,1) + pkin(5);
t782 = rSges(7,2) * t625 + rSges(7,3) * t628;
t704 = t782 * t626;
t905 = qJ(6) * t944 - t1119 * t629 + t704;
t850 = -t1081 - t905;
t876 = qJD(5) * t626;
t585 = t625 * t876;
t684 = t625 * t883 + t626 * t880;
t685 = -t625 * t881 + t628 * t883;
t309 = pkin(4) * t685 + qJ(5) * t684 + t585;
t875 = qJD(6) * t628;
t584 = t626 * t875;
t618 = t626 * rSges(7,1);
t924 = (rSges(7,2) * t628 - rSges(7,3) * t625) * t881 + (t629 * t782 + t618) * qJD(3) + pkin(5) * t884 + qJ(6) * t685 + t584;
t852 = -t309 - t924;
t933 = t440 * rSges(7,2) + t1118 * t441 + t1119 * t948;
t394 = qJD(6) * t441;
t1070 = -t201 * rSges(7,2) - t1118 * t202 + t1119 * t837 + t394;
t940 = -t1119 * t845 + t1070;
t8 = qJD(6) * t204 + qJDD(6) * t439 + t271 * t850 + t481 * t852 + t510 * t933 + t601 * t940 + t638;
t1147 = -g(2) + t8;
t867 = t631 * t623;
t816 = -t508 - t1020;
t793 = -t475 + t816;
t656 = qJD(1) * t793 - t842;
t93 = -t1148 + t656;
t1145 = t614 * t93;
t400 = t438 * qJ(5);
t431 = t439 * pkin(4);
t298 = -t431 - t400;
t1141 = -t601 * t298 + t1151 + t120 - t397;
t1103 = t1158 * t687 - t1160 * t201 - t1162 * t202 + t1163 * t948 + t1165 * t440 + t1167 * t441;
t1102 = t1131 * t687 - t1159 * t201 - t1161 * t202 + t1164 * t948 + t1166 * t440 + t1168 * t441;
t1101 = t1158 * t689 + t1160 * t203 + t1162 * t204 + t1163 * t950 + t1165 * t438 + t1167 * t439;
t1100 = t1131 * t689 + t1159 * t203 + t1161 * t204 + t1164 * t950 + t1166 * t438 + t1168 * t439;
t1096 = t1059 * t601 + t1135 * t481 - t1136 * t482;
t1140 = t1130 * t689 + t1155 * t439 + t1156 * t438 + t1157 * t950 - t1169 * t204 + t1177 * t203;
t1139 = t1130 * t687 + t1155 * t441 + t1156 * t440 + t1157 * t948 + t1169 * t202 - t1177 * t201;
t742 = t206 * t628 - t213 * t625;
t83 = -t218 * t629 + t626 * t742;
t740 = t209 * t625 + t216 * t628;
t85 = -t221 * t629 + t626 * t740;
t1134 = t81 + t83 + t85;
t737 = -t229 * t625 + t232 * t628;
t82 = -t226 * t629 + t626 * t737;
t741 = t208 * t628 + t214 * t625;
t84 = -t220 * t629 + t626 * t741;
t739 = t211 * t625 - t217 * t628;
t86 = -t223 * t629 + t626 * t739;
t1133 = t82 + t84 + t86;
t1058 = -t1130 * t629 + t1152 * t626;
t1129 = -t626 * t748 + t1180;
t1128 = t626 * t749 + t1181;
t1127 = (-t1152 + t1174) * t601 + (t1130 * t614 - t1120 + t740 + t742) * t482 + (-t1130 * t615 - t737 - t739 - t741) * t481;
t483 = qJD(1) * t509;
t613 = t630 * t1015;
t903 = t613 + t483;
t805 = qJD(1) * t477 - t566 * t886 + t903;
t878 = qJD(5) * t438;
t1108 = t1081 * t481 - t601 * t302 - t805 - t878;
t393 = qJD(6) * t439;
t55 = -t481 * t905 + t933 * t601 - t1108 + t393;
t908 = t439 * rSges(6,2) - t438 * rSges(6,3);
t237 = rSges(6,1) * t950 - t908;
t414 = t438 * rSges(7,2);
t1125 = -t1118 * t439 - t414;
t1124 = (qJD(3) * t1152 - t1157) * t629 + (t1155 * t628 + t1156 * t625 + (t1169 * t625 + t1177 * t628) * qJD(4) + t1130 * qJD(3)) * t626;
t1123 = Icges(7,3) - t1187;
t1122 = Icges(6,3) + t1184;
t1121 = -t1171 * t601 + (t1149 * t439 + t1150 * t438) * t482 + (-t1149 * t441 - t1150 * t440) * t481;
t377 = t614 * t1081;
t935 = -t1119 * t950 + t1125;
t487 = t566 * t889;
t505 = pkin(4) * t943 + qJ(5) * t945;
t1107 = t1081 * t889 - t377 * t879 + t482 * t505 + t487;
t485 = -qJDD(3) * t615 + t614 * t873;
t272 = qJD(4) * t689 + t614 * t872 + t485;
t1106 = t1059 * t510 + t1102 * t481 - t1103 * t482 + t1135 * t271 + t1136 * t272 + t1139 * t601;
t1105 = t1060 * t510 + t1100 * t481 - t1101 * t482 + t1137 * t271 + t1138 * t272 + t1140 * t601;
t25 = (-qJD(3) * t1120 - t115) * t629 + (qJD(3) * t224 - t117 * t625 + t119 * t628 + (-t227 * t628 + t231 * t625) * qJD(4)) * t626;
t27 = (qJD(3) * t742 - t111) * t629 + (qJD(3) * t218 + t103 * t628 + t107 * t625 + (-t206 * t625 - t213 * t628) * qJD(4)) * t626;
t29 = (qJD(3) * t740 - t113) * t629 + (qJD(3) * t221 + t105 * t625 - t109 * t628 + (t209 * t628 - t216 * t625) * qJD(4)) * t626;
t1099 = t25 + t27 + t29;
t26 = (qJD(3) * t737 - t114) * t629 + (qJD(3) * t226 - t116 * t625 + t118 * t628 + (-t229 * t628 - t232 * t625) * qJD(4)) * t626;
t28 = (qJD(3) * t741 - t110) * t629 + (qJD(3) * t220 + t102 * t628 + t106 * t625 + (-t208 * t625 + t214 * t628) * qJD(4)) * t626;
t30 = (qJD(3) * t739 - t112) * t629 + (qJD(3) * t223 + t104 * t625 - t108 * t628 + (t211 * t628 + t217 * t625) * qJD(4)) * t626;
t1098 = t26 + t28 + t30;
t1097 = t1060 * t601 + t1137 * t481 - t1138 * t482;
t1095 = t1058 * t601 + t1133 * t481 - t1134 * t482;
t1094 = t1129 * t614;
t1093 = t1129 * t615;
t1092 = t1128 * t614;
t1091 = t1128 * t615;
t1088 = t1127 * t626;
t1087 = t1130 * t601 + t1131 * t481 - t1158 * t482;
t1053 = t1133 * t615 + t1134 * t614;
t1086 = t1133 * t614 - t1134 * t615;
t1052 = t1135 * t615 + t1136 * t614;
t1051 = t1137 * t615 + t1138 * t614;
t1085 = t1135 * t614 - t1136 * t615;
t1084 = t1137 * t614 - t1138 * t615;
t846 = -pkin(2) - t622;
t871 = -pkin(8) - t1119;
t690 = t871 * t626 + t846;
t1082 = t614 * t690;
t717 = t438 * t601 + t482 * t946;
t1080 = -t201 + t717;
t716 = -t440 * t601 + t481 * t946;
t1079 = t203 + t716;
t378 = t615 * t1081;
t1078 = t302 * t881 - t601 * t378;
t294 = -t438 * pkin(4) + qJ(5) * t439;
t297 = t439 * rSges(7,2) - t438 * rSges(7,3);
t1077 = -t294 - t297;
t300 = -t440 * pkin(4) + qJ(5) * t441;
t303 = t441 * rSges(7,2) - t440 * rSges(7,3);
t1076 = t300 + t303;
t949 = t614 * t629;
t1073 = t1119 * t949;
t1072 = t1119 * t947;
t616 = Icges(4,4) * t629;
t754 = -Icges(4,2) * t626 + t616;
t539 = Icges(4,1) * t626 + t616;
t240 = rSges(6,1) * t948 - t441 * rSges(6,2) + t440 * rSges(6,3);
t783 = -rSges(6,2) * t628 + rSges(6,3) * t625;
t473 = -rSges(6,1) * t629 + t626 * t783;
t66 = t240 * t601 - t473 * t481 - t1108;
t1066 = -rSges(7,2) * t203 - t393;
t507 = t615 * rSges(3,1) - rSges(3,2) * t614;
t1056 = (Icges(6,3) * t944 + t1169 + t1176 + t592) * t601 + (-t1122 * t439 + t1162 + t401 - t404 - t407) * t482 + (t1122 * t441 - t1161 + t406 + t409 - t968) * t481;
t1055 = (-Icges(7,3) * t946 + t1175 + t1177 + t591) * t601 + (t1123 * t438 - t1160 - t402 + t405 + t408) * t482 + (-t1123 * t440 + t1159 + t403 - t971 - t983) * t481;
t1054 = t1121 * t626;
t1050 = t1058 * t510 + t1124 * t601;
t965 = Icges(4,3) * t615;
t361 = Icges(4,5) * t949 - Icges(4,6) * t950 - t965;
t554 = Icges(4,4) * t950;
t978 = Icges(4,5) * t615;
t365 = Icges(4,1) * t949 - t554 - t978;
t973 = Icges(4,6) * t615;
t363 = Icges(4,4) * t949 - Icges(4,2) * t950 - t973;
t955 = t363 * t626;
t734 = -t365 * t629 + t955;
t140 = -t361 * t615 - t614 * t734;
t536 = Icges(4,5) * t629 - Icges(4,6) * t626;
t535 = Icges(4,5) * t626 + Icges(4,6) * t629;
t694 = qJD(3) * t535;
t984 = Icges(4,4) * t626;
t540 = Icges(4,1) * t629 - t984;
t366 = Icges(4,5) * t614 + t540 * t615;
t364 = Icges(4,6) * t614 + t615 * t754;
t954 = t364 * t626;
t733 = -t366 * t629 + t954;
t1049 = -t615 * t694 + (-t536 * t614 + t733 + t965) * qJD(1);
t362 = Icges(4,3) * t614 + t536 * t615;
t892 = qJD(1) * t362;
t1048 = qJD(1) * t734 - t614 * t694 + t892;
t537 = Icges(4,2) * t629 + t984;
t727 = t537 * t626 - t539 * t629;
t1047 = t727 * qJD(1) + t536 * qJD(3);
t1046 = t626 * (g(1) * t615 + g(2) * t614);
t917 = -Icges(4,2) * t949 + t365 - t554;
t919 = t539 * t614 + t363;
t1045 = -t626 * t917 - t629 * t919;
t1041 = -m(6) - m(7);
t1040 = t271 / 0.2e1;
t1039 = t272 / 0.2e1;
t1038 = -t481 / 0.2e1;
t1037 = t481 / 0.2e1;
t1036 = -t482 / 0.2e1;
t1035 = t482 / 0.2e1;
t1034 = t484 / 0.2e1;
t1033 = t485 / 0.2e1;
t1032 = t510 / 0.2e1;
t1031 = -t601 / 0.2e1;
t1030 = t601 / 0.2e1;
t1026 = -rSges(6,1) - pkin(8);
t1025 = -rSges(5,3) - pkin(8);
t1023 = g(1) * t614;
t1019 = rSges(4,1) * t629;
t149 = t438 * t481 + t440 * t482;
t829 = t475 * t886 + t477 * t885 + qJD(2);
t757 = -t298 * t481 + t585 + t829;
t854 = t302 + t933;
t43 = -t481 * t935 + t482 * t854 + t584 + t757;
t1014 = t149 * t43;
t1013 = t25 * t482;
t1012 = t26 * t481;
t1011 = t27 * t482;
t1010 = t28 * t481;
t1009 = t29 * t482;
t1008 = t30 * t481;
t652 = -t1081 * t482 + t397 + t656;
t855 = t298 + t935;
t54 = -t482 * t905 + t601 * t855 + t394 + t652;
t1001 = t54 * t615;
t932 = t240 + t302;
t56 = t237 * t481 + t482 * t932 + t757;
t1000 = t56 * t237;
t606 = t614 * rSges(4,3);
t999 = t615 * t93;
t619 = t626 * rSges(6,1);
t617 = t626 * rSges(5,3);
t934 = -t237 + t298;
t65 = -t473 * t482 + t601 * t934 + t652;
t998 = t65 * t473;
t997 = t81 * t272;
t996 = t82 * t271;
t995 = t83 * t272;
t994 = t84 * t271;
t993 = t85 * t272;
t992 = t86 * t271;
t937 = t203 * qJ(5) + t878;
t121 = pkin(4) * t204 + t937;
t988 = t121 * t948 - t298 * t837;
t893 = rSges(4,2) * t950 + t615 * rSges(4,3);
t368 = rSges(4,1) * t949 - t893;
t795 = -t368 + t816;
t548 = rSges(4,1) * t626 + rSges(4,2) * t629;
t839 = t548 * t885;
t172 = qJD(1) * t795 - t839;
t959 = t172 * t614;
t958 = t172 * t615;
t369 = rSges(4,1) * t947 - rSges(4,2) * t948 + t606;
t173 = qJD(1) * t369 - t548 * t886 + t903;
t467 = t548 * t615;
t957 = t173 * t467;
t952 = t535 * t614;
t951 = t535 * t615;
t856 = rSges(6,1) * t837 + t202 * rSges(6,2) - t201 * rSges(6,3);
t123 = -rSges(6,1) * t845 + t856;
t941 = t120 + t123;
t939 = t1118 * t204 + t1119 * t689 - t1066;
t586 = t628 * t876;
t938 = t481 * t294 + t586;
t931 = qJD(5) * t439 + t601 * t300;
t930 = t1081 * t845 + t302 * t884;
t929 = t1081 * t950 - t298 * t629;
t293 = t438 * rSges(6,2) + t439 * rSges(6,3);
t928 = -t293 - t294;
t299 = t440 * rSges(6,2) + t441 * rSges(6,3);
t927 = t299 + t300;
t321 = (rSges(6,2) * t625 + rSges(6,3) * t628) * t881 + (t629 * t783 + t619) * qJD(3);
t926 = -t309 - t321;
t502 = (-rSges(5,1) * t625 - rSges(5,2) * t628) * t626;
t319 = qJD(4) * t502 + (t629 * t786 + t617) * qJD(3);
t925 = -t319 - t523;
t923 = -t614 * t361 - t365 * t947;
t922 = t614 * t362 + t366 * t947;
t862 = t614 * t944;
t921 = -qJ(6) * t862 - t614 * t704 + t1073;
t860 = t615 * t944;
t920 = -qJ(6) * t860 - t615 * t704 + t1072;
t918 = -t539 * t615 - t364;
t916 = -t537 * t615 + t366;
t568 = pkin(8) * t949;
t869 = pkin(3) * t950;
t474 = t568 - t869;
t572 = pkin(8) * t947;
t476 = -pkin(3) * t948 + t572;
t915 = t474 * t886 + t476 * t885;
t913 = t614 * t475 + t615 * t477;
t588 = qJ(5) * t944;
t500 = -pkin(4) * t946 + t588;
t912 = qJD(5) * t441 - t482 * t500;
t907 = -t468 - t566;
t906 = -rSges(7,2) * t945 - t626 * pkin(5) - t1118 * t943 - t618;
t904 = -t473 - t1081;
t501 = rSges(6,2) * t946 + rSges(6,3) * t944;
t902 = -t500 - t501;
t863 = t614 * t946;
t901 = rSges(5,2) * t863 + rSges(5,3) * t949;
t900 = rSges(6,1) * t949 + rSges(6,2) * t862;
t861 = t615 * t946;
t899 = rSges(5,2) * t861 + rSges(5,3) * t947;
t898 = rSges(6,1) * t947 + rSges(6,2) * t860;
t897 = rSges(4,2) * t845 + rSges(4,3) * t888;
t532 = qJD(3) * t869;
t896 = t532 - t613;
t895 = -t537 + t540;
t894 = t539 + t754;
t891 = qJD(1) * t474;
t890 = qJD(1) * t536;
t877 = qJD(5) * t625;
t250 = -t614 * t727 - t951;
t874 = t250 * qJD(1);
t870 = -pkin(4) - t1118;
t868 = g(3) * t946;
t859 = t120 + t940;
t858 = t482 * t298;
t857 = -t202 * rSges(5,1) + t201 * rSges(5,2) + rSges(5,3) * t837;
t307 = pkin(8) * t689 + qJD(1) * t574 - t532;
t853 = t615 * t306 + t614 * t307 + t475 * t888;
t851 = -t523 + t926;
t243 = t441 * rSges(5,1) - t440 * rSges(5,2) + rSges(5,3) * t948;
t849 = -t566 + t904;
t847 = t623 + t509;
t587 = t629 * t877;
t828 = -pkin(2) - t1019;
t825 = t888 / 0.2e1;
t824 = -t886 / 0.2e1;
t823 = t886 / 0.2e1;
t822 = -t885 / 0.2e1;
t821 = t885 / 0.2e1;
t819 = t883 / 0.2e1;
t815 = t610 - t1020;
t814 = t43 * t935;
t813 = t54 * t905;
t812 = t66 * t904;
t323 = t366 * t949;
t811 = t362 * t615 - t323;
t810 = -t361 + t954;
t808 = t1081 * t689 + t629 * t121 + t309 * t950;
t807 = -t298 * t614 + t615 * t302 + t913;
t806 = -t523 + t852;
t804 = -t566 + t850;
t803 = t1071 + t505;
t794 = -t400 + t815;
t792 = t55 * t850;
t436 = qJD(1) * t476;
t790 = -t1071 * t886 + t436;
t551 = rSges(2,1) * t630 - rSges(2,2) * t627;
t549 = rSges(2,1) * t627 + rSges(2,2) * t630;
t550 = -rSges(4,2) * t626 + t1019;
t788 = rSges(5,1) * t204 - rSges(5,2) * t203;
t785 = -rSges(6,2) * t204 + rSges(6,3) * t203;
t125 = rSges(6,1) * t689 + t785;
t692 = t306 * t885 + t307 * t886 + t484 * t475 - t485 * t477 + qJDD(2);
t653 = qJD(3) * t587 + qJD(4) * t586 + qJDD(5) * t946 + t481 * t121 - t271 * t298 + t692;
t10 = t125 * t481 + t237 * t271 - t272 * t932 + t482 * t941 + t653;
t780 = t10 * t237 + t56 * t125;
t188 = t364 * t629 + t366 * t626;
t695 = qJD(3) * t537;
t246 = -t615 * t695 + (-t614 * t754 + t973) * qJD(1);
t696 = qJD(3) * t539;
t248 = -t615 * t696 + (-t540 * t614 + t978) * qJD(1);
t641 = -qJD(3) * t188 - t246 * t626 + t248 * t629 + t892;
t187 = t363 * t629 + t365 * t626;
t247 = qJD(1) * t364 - t614 * t695;
t249 = qJD(1) * t366 - t614 * t696;
t642 = qJD(1) * t361 - qJD(3) * t187 - t247 * t626 + t249 * t629;
t779 = -(t1048 * t614 + t642 * t615) * t615 + (t1049 * t614 + t641 * t615) * t614;
t778 = -(-t1048 * t615 + t642 * t614) * t615 + (-t1049 * t615 + t641 * t614) * t614;
t759 = -t298 * t615 * t879 - t481 * t377 + t587 + t915;
t758 = t847 + t477;
t141 = -t364 * t950 - t811;
t745 = -t140 * t615 + t141 * t614;
t142 = -t363 * t948 - t923;
t143 = -t364 * t948 + t922;
t744 = -t142 * t615 + t143 * t614;
t743 = -t173 * t614 - t958;
t736 = -t242 * t615 - t243 * t614;
t253 = rSges(4,1) * t688 - rSges(4,2) * t837 + t897;
t466 = t548 * t614;
t254 = -qJD(3) * t466 + (t550 * t615 + t606) * qJD(1);
t735 = t253 * t615 + t254 * t614;
t732 = t368 * t614 + t369 * t615;
t728 = t537 * t629 + t539 * t626;
t726 = -pkin(2) - t1071;
t469 = rSges(5,1) * t943 - rSges(5,2) * t945 + t617;
t471 = -rSges(6,2) * t943 + rSges(6,3) * t945 + t619;
t725 = t615 * t120 + t614 * t121 - t298 * t888 + t853;
t702 = -t56 * t932 + t998;
t701 = t66 * t240 + t65 * t934;
t700 = -t1071 * t885 - t891;
t698 = t1026 * t626 + t846;
t697 = t1025 * t626 + t846;
t693 = t298 + t815;
t7 = qJD(6) * t685 + qJDD(6) * t944 - t271 * t935 - t272 * t854 + t481 * t939 + t482 * t859 + t653;
t677 = t43 * t939 - t7 * t935;
t676 = -t626 * t916 + t629 * t918;
t675 = t302 + t758;
t674 = -t43 * t854 + t813;
t673 = t54 * t855 + t55 * t933;
t658 = (-t626 * t894 + t629 * t895) * qJD(1);
t657 = -t523 + (-t875 - t877) * t626;
t80 = -t242 * t481 + t243 * t482 + t829;
t94 = t243 * t601 - t468 * t481 + t805;
t644 = t80 * t736 + (-t615 * t94 + t1145) * t468;
t512 = t754 * qJD(3);
t513 = t540 * qJD(3);
t640 = qJD(1) * t535 - qJD(3) * t728 - t512 * t626 + t513 * t629;
t639 = (t812 + t1000) * t615 + t702 * t614;
t637 = t485 * t566 + (-t483 - t307) * qJD(1) + t793 * qJDD(1) - t523 * t885 - t867;
t636 = (t792 - t814) * t615 + t674 * t614;
t635 = -qJD(5) * t201 + qJDD(5) * t440 + t1081 * t272 - t482 * t309 + t637;
t596 = rSges(7,2) * t944;
t514 = t550 * qJD(3);
t504 = -rSges(7,3) * t946 + t596;
t480 = t507 + t623;
t349 = -rSges(6,3) * t861 + t898;
t347 = -rSges(6,3) * t863 + t900;
t345 = -rSges(5,1) * t860 + t899;
t344 = -rSges(5,1) * t862 + t901;
t301 = -rSges(5,1) * t440 - rSges(5,2) * t441;
t295 = -rSges(5,1) * t438 - rSges(5,2) * t439;
t252 = t298 * t948;
t251 = -t615 * t727 + t952;
t205 = t251 * qJD(1);
t171 = qJD(3) * t732 + qJD(2);
t127 = rSges(5,3) * t689 + t788;
t126 = -rSges(5,3) * t845 + t857;
t96 = -t1047 * t615 + t640 * t614;
t95 = t1047 * t614 + t640 * t615;
t90 = qJD(1) * t253 + qJDD(1) * t369 - t484 * t548 - t514 * t886 + t705;
t89 = -t867 - t514 * t885 + t485 * t548 + (-t254 - t483) * qJD(1) + t795 * qJDD(1);
t88 = -qJD(3) * t733 + t246 * t629 + t248 * t626;
t87 = -qJD(3) * t734 + t247 * t629 + t249 * t626;
t79 = qJD(3) * t735 + t368 * t484 - t369 * t485 + qJDD(2);
t61 = qJD(3) * t744 + t205;
t60 = qJD(3) * t745 + t874;
t39 = t126 * t601 + t243 * t510 - t271 * t468 - t319 * t481 + t643;
t38 = -t127 * t601 + t242 * t510 + t272 * t468 - t319 * t482 + t637;
t31 = t126 * t482 + t127 * t481 - t242 * t271 - t243 * t272 + t692;
t12 = t123 * t601 + t240 * t510 + t271 * t904 + t481 * t926 + t638;
t11 = t272 * t473 - t321 * t482 + (-t121 - t125) * t601 + t934 * t510 + t635;
t9 = (-t121 - t939) * t601 + t855 * t510 - t924 * t482 + t905 * t272 + t635 - qJD(6) * t202 + qJDD(6) * t441;
t1 = [(t61 + t87 + t96) * t822 + (-(-qJD(1) * t368 - t172 - t489 - t839) * t173 - t172 * t613 + t173 * (t582 + t897) + (t548 * t959 - t957) * qJD(3) + ((-pkin(2) - t550) * t958 + (t172 * (-rSges(4,3) - pkin(7)) + t173 * t828) * t614) * qJD(1) + (-g(2) + t90) * (t369 + t847) + (-g(1) + t89) * (t614 * t828 + t815 + t893)) * m(4) + t1139 * t1037 + (t1140 + t1096) * t1036 + t1096 * t1035 + (t88 + t95) * t823 + (t250 + t187) * t1033 + (-g(1) * (t693 + t1125) + t43 * t858 - (t43 * t298 + t792) * t482 + (t439 * t870 + t1082 - t414 + t794) * t9 + t1147 * (t675 + t933) + (qJD(1) * t1001 - t1023) * t690 + (-t394 - t935 * t601 + (-t1020 + t1082) * qJD(1) + t1070 + t1141) * t55 + (t896 - t937 + t870 * t204 + (-pkin(7) * qJD(1) + t871 * t883) * t614 + t1066 + t55) * t54) * m(7) + (-g(1) * (t693 + t908) - t698 * t1023 + t56 * t858 - (t298 * t56 + t812) * t482 + (t614 * t698 - t431 + t794 + t908) * t11 + (-t121 - t785 + t896 + t1026 * t1144 + (t615 * t698 - t1146) * qJD(1)) * t65 + (t856 + (-t1020 + (t726 - t619) * t614) * qJD(1) + t237 * t601 + t65 + t1141) * t66 + (-g(2) + t12) * (t675 + t240)) * m(6) + t1050 - t1011 / 0.2e1 + t1012 / 0.2e1 + (t205 + ((t141 - t323 + (t362 + t955) * t615 + t923) * t615 + t922 * t614) * qJD(3)) * t821 + (-t697 * t1023 + t93 * (-t788 + t896) + (t1025 * t883 * t93 + t38 * t697) * t614 + (-pkin(7) * t1145 + t697 * t999) * qJD(1) + (t93 + t857 + (-t1020 + (t726 - t617) * t614) * qJD(1) + t1148 + t1151) * t94 + (-g(2) + t39) * (t758 + t243) + (t38 - g(1)) * (-t787 + t815)) * m(5) + (-t874 + ((t615 * t810 + t143 - t922) * t615 + (t614 * t810 + t142 + t811) * t614) * qJD(3) + t60) * t824 + t1008 / 0.2e1 - t1009 / 0.2e1 + t1010 / 0.2e1 + t1059 * t1040 + t1060 * t1039 + (m(3) * (t479 ^ 2 + t507 * t480) + m(2) * (t549 ^ 2 + t551 ^ 2) + t728 + Icges(2,3) + Icges(3,3)) * qJDD(1) + t995 / 0.2e1 + t996 / 0.2e1 + t997 / 0.2e1 - m(2) * (-g(1) * t549 + g(2) * t551) + t992 / 0.2e1 + ((-t506 * t631 - g(2) + t796) * t480 + (-t507 * t631 - g(1) - t867) * t479) * m(3) + t993 / 0.2e1 + t994 / 0.2e1 + (t251 + t188) * t1034 - t1013 / 0.2e1 + (-qJD(3) * t727 + t512 * t629 + t513 * t626) * qJD(1); m(3) * qJDD(2) + (-m(3) - m(4) - m(5) + t1041) * g(3) + m(4) * t79 + m(5) * t31 + m(6) * t10 + m(7) * t7; -qJD(1) * ((t626 * t895 + t629 * t894) * qJD(1) + ((t614 * t916 - t615 * t917) * t629 + (t614 * t918 + t615 * t919) * t626) * qJD(3)) / 0.2e1 + ((qJD(4) * t1053 - t1127) * t629 + ((t1089 * t628 + t1090 * t625 + t1130) * t601 + (t1092 * t628 - t1094 * t625 - t1158) * t482 + (-t1091 * t628 + t1093 * t625 + t1131) * t481 + t1058 * qJD(4)) * t626) * t1031 + (qJD(1) * t1051 + t1100 * t614 - t1101 * t615) * t1036 + (qJD(1) * t1052 + t1102 * t614 - t1103 * t615) * t1037 - (qJD(1) * t96 + qJD(3) * t778 + qJDD(1) * t250 + t140 * t485 + t141 * t484 + t1105) * t615 / 0.2e1 + (t79 * t732 + t171 * ((t368 * t615 - t369 * t614) * qJD(1) + t735) + t743 * t514 + (-t90 * t614 - t89 * t615 + (-t173 * t615 + t959) * qJD(1)) * t548 + g(1) * t467 + g(2) * t466 - g(3) * t550 - (t172 * t466 - t957) * qJD(1) - (t171 * (-t466 * t614 - t467 * t615) + t743 * t550) * qJD(3)) * m(4) + (-t657 * t1001 - (t626 * t673 + t629 * t636) * qJD(4) - (t629 * t875 + t759 + (-t378 + t920) * t482 + t921 * t481) * t43 - (t436 + t657 * t614 + t920 * t601 + (-t505 + t906) * t481 + t1078) * t55 + t7 * t807 + t43 * t725 + (t9 * t804 + t7 * t933 + t43 * t940 + (t55 * t804 - t814) * qJD(1)) * t615 + (t8 * t804 + t55 * t806 + (t813 + t43 * (-t477 - t854)) * qJD(1) + t677) * t614 - g(1) * (t572 + t1072) - g(2) * (t568 + t1073) - g(3) * (t803 - t906) - (-pkin(3) + (-rSges(7,2) - qJ(5)) * t625 + t870 * t628) * t1046 + (t891 - (t377 - t921) * t601 - t906 * t482 + t806 * t615 + t1107) * t54) * m(7) - (t1096 * t615 + t1097 * t614) * t879 / 0.2e1 + t1084 * t1039 + t1085 * t1040 + t1086 * t1032 + (-g(1) * (t572 + t899) - g(2) * (t568 + t901) - g(3) * (t469 + t1071) - (-pkin(3) - t1018) * t1046 - t93 * (-t344 * t601 - t469 * t482 + t700) - t94 * (t345 * t601 - t469 * t481 + t790) - ((t242 * t93 + t243 * t94) * t626 + t644 * t629) * qJD(4) + t93 * t487 + t31 * t913 + (t31 * t243 + t93 * t925 + (qJD(1) * t94 + t38) * t907) * t615 + (qJD(1) * t468 * t93 - t242 * t31 + t39 * t907 + t94 * t925) * t614 + (-t344 * t481 - t345 * t482 - t915 + t853 + (-qJD(1) * t242 + t126) * t615 + (t127 + (-t243 - t477) * qJD(1)) * t614) * t80) * m(5) - t1095 * t881 / 0.2e1 + (t61 + t1096) * t825 + (t60 + t1097) * t889 / 0.2e1 + (qJD(1) * t1053 + t1098 * t614 - t1099 * t615) * t1030 + (qJD(1) * t95 + qJD(3) * t779 + qJDD(1) * t251 + t142 * t485 + t143 * t484 + t1106) * t614 / 0.2e1 + (-g(1) * (t572 + t898) - g(2) * (t568 + t900) - g(3) * (t471 + t803) - (-t1024 - pkin(3) + (-rSges(6,3) - qJ(5)) * t625) * t1046 - t66 * (t349 * t601 - t585 * t614 + t790 + (-t471 - t505) * t481 + t1078) - t56 * (t347 * t481 + t759 + (t349 - t378) * t482) - (t626 * t701 + t629 * t639) * qJD(4) + t10 * t807 + t56 * t725 + (t11 * t849 + t10 * t240 + t56 * t123 + (t66 * t849 + t1000) * qJD(1)) * t615 + (t12 * t849 + t66 * t851 + (t998 + t56 * (-t477 - t932)) * qJD(1) + t780) * t614 + (t471 * t482 - t700 - (-t347 + t377) * t601 + (t585 + t851) * t615 + t1107) * t65) * m(6) + ((-t885 * t952 - t890) * t615 + (t658 + (t676 * t614 + (-t1045 + t951) * t615) * qJD(3)) * t614) * t821 + ((-t886 * t951 + t890) * t614 + (t658 + (-t1045 * t615 + (t952 + t676) * t614) * qJD(3)) * t615) * t824 + qJDD(1) * (-t187 * t615 + t188 * t614) / 0.2e1 + ((t142 * t614 + t143 * t615) * qJD(1) + t779) * t823 + ((t140 * t614 + t141 * t615) * qJD(1) + t778) * t822 + t745 * t1033 + t744 * t1034 + qJD(1) * (t614 * t88 - t615 * t87 + (t187 * t614 + t188 * t615) * qJD(1)) / 0.2e1 + ((t1059 * t626 + t1136 * t949) * qJD(4) + ((qJD(4) * t1135 + t1087) * t629 + t1088) * t615 + (t1089 * t441 + t1090 * t440) * t601 + (t1092 * t441 - t1094 * t440) * t482 + (-t1091 * t441 + t1093 * t440) * t481) * t1038 + ((t1060 * t626 + t1137 * t947) * qJD(4) + ((qJD(4) * t1138 + t1087) * t629 + t1088) * t614 + (t1089 * t439 + t1090 * t438) * t601 + (t1092 * t439 - t1094 * t438) * t482 + (-t1091 * t439 + t1093 * t438) * t481) * t1035; t1105 * t950 / 0.2e1 + t1106 * t948 / 0.2e1 + t1095 * t884 / 0.2e1 + (t1052 * t626 - t1059 * t629) * t1040 + (t1051 * t626 - t1060 * t629) * t1039 + (-t1054 * t615 + t1055 * t441 + t1056 * t440) * t1038 + ((qJD(3) * t1052 - t1139) * t629 + (-qJD(1) * t1085 + t1059 * qJD(3) + t1102 * t615 + t1103 * t614) * t626) * t1037 + ((qJD(3) * t1051 - t1140) * t629 + (-qJD(1) * t1084 + t1060 * qJD(3) + t1100 * t615 + t1101 * t614) * t626) * t1036 + (-t1054 * t614 + t1055 * t439 + t1056 * t438) * t1035 + (t1053 * t626 - t1058 * t629) * t1032 + (t1121 * t629 + (t1055 * t628 + t1056 * t625) * t626) * t1031 + ((qJD(3) * t1053 - t1124) * t629 + (-qJD(1) * t1086 + t1058 * qJD(3) + t1098 * t615 + t1099 * t614) * t626) * t1030 - (t1012 + t996 + t997 - t1013 + t1010 + t994 + t995 - t1011 + t1008 + t992 + t993 - t1009 + t1050) * t629 / 0.2e1 + (-g(1) * (-qJ(6) * t440 + t1076) - g(2) * (-qJ(6) * t438 - t1077) - g(3) * (t588 + t596) - t870 * t868 - t54 * (-qJD(6) * t440 + t1077 * t601 - t482 * t504 + t912) - t55 * (-qJD(6) * t438 + t303 * t601 + t931 + (-t500 - t504) * t481) - t43 * (-qJD(6) * t946 + t1076 * t482 + t297 * t481 + t938) - (t54 * t717 + t55 * t716 - t1014) * qJ(6) + t9 * t929 + t54 * t808 + t55 * t930 - t7 * t252 + t43 * t988 + (qJD(3) * t636 + t54 * t939 - t55 * t859 - t8 * t854 - t9 * t935) * t629 + (t673 * qJD(3) + (qJD(1) * t674 + t55 * t852 + t8 * t850 + t677) * t615 + (t9 * t905 + t54 * t924 - t7 * t854 - t43 * t859 + (t43 * t855 + t55 * t905) * qJD(1)) * t614) * t626) * m(7) + (-t65 * (-t482 * t501 + t601 * t928 + t912) - t66 * (t299 * t601 + t481 * t902 + t931) - t56 * (t293 * t481 + t482 * t927 + t938) - g(1) * t927 + g(2) * t928 + g(3) * t902 + t11 * t929 + t65 * t808 + t66 * t930 - t10 * t252 + t56 * t988 + (qJD(3) * t639 + t11 * t237 - t12 * t932 + t65 * t125 - t66 * t941) * t629 + (t701 * qJD(3) + (qJD(1) * t702 + t12 * t904 + t66 * t926 + t780) * t615 + (t11 * t473 + t65 * t321 - t10 * t932 - t56 * t941 + (t66 * t473 + t56 * t934) * qJD(1)) * t614) * t626) * m(6) + (-t93 * (-t295 * t601 - t482 * t502) - t94 * (t301 * t601 - t481 * t502) - t80 * (t295 * t481 + t301 * t482) - g(1) * t301 - g(2) * t295 - g(3) * t502 + (qJD(3) * t644 - t94 * t126 + t93 * t127 - t242 * t38 - t39 * t243) * t629 + (t93 * (qJD(3) * t242 + t319 * t614) + t94 * (qJD(3) * t243 - t319 * t615) + t31 * t736 + t80 * (-t126 * t614 + t127 * t615 + t242 * t889 - t243 * t888) + (t38 * t614 - t39 * t615 + (t614 * t94 + t999) * qJD(1)) * t468) * t626) * m(5) + (t614 * t819 + t626 * t825) * t1097 + (-t845 / 0.2e1 + t615 * t819) * t1096; t1041 * (g(1) * t440 + g(2) * t438 + t868) + (t1079 * t55 + t1080 * t54 + t43 * t684 + t438 * t8 + t440 * t9 + t7 * t946 - t1014) * m(7) + (t10 * t946 + t11 * t440 + t12 * t438 + t1079 * t66 + t1080 * t65 + (-t149 + t684) * t56) * m(6); (-t202 * t54 + t204 * t55 + (-t55 * t601 - g(1) + t9) * t441 + (t481 * t55 + t482 * t54 - g(3) + t7) * t944 + (t54 * t601 + t1147) * t439 + (-t439 * t481 - t441 * t482 + t685) * t43) * m(7);];
tau  = t1;
