% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRRPP3
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,theta2]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 21:28
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRRPP3_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPP3_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPP3_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPP3_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPP3_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPRRPP3_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 21:28:39
% EndTime: 2019-05-05 21:28:45
% DurationCPUTime: 6.48s
% Computational Cost: add. (9892->265), mult. (19176->282), div. (0->0), fcn. (12260->8), ass. (0->168)
t2184 = sin(qJ(4));
t2187 = cos(qJ(4));
t2185 = sin(qJ(3));
t2222 = qJD(1) * t2185;
t2173 = qJD(3) * t2222;
t2188 = cos(qJ(3));
t2207 = t2188 * qJDD(1);
t2202 = t2173 - t2207;
t2201 = -qJDD(4) - t2202;
t2143 = -t2187 * qJD(3) + t2184 * t2222;
t2145 = t2184 * qJD(3) + t2187 * t2222;
t2220 = t2145 * t2143;
t2195 = t2201 + t2220;
t2141 = t2143 ^ 2;
t2210 = t2188 * qJD(1);
t2169 = -qJD(4) + t2210;
t2226 = t2169 ^ 2;
t2229 = -t2141 - t2226;
t2065 = -t2184 * t2229 + t2187 * t2195;
t2180 = sin(pkin(9));
t2181 = cos(pkin(9));
t2206 = qJD(3) * t2210;
t2208 = t2185 * qJDD(1);
t2150 = t2206 + t2208;
t2203 = -t2187 * qJDD(3) + t2184 * t2150;
t2198 = t2145 * qJD(4) + t2203;
t2219 = t2145 * t2169;
t2228 = t2198 - t2219;
t2242 = t2184 * t2195 + t2187 * t2229;
t2245 = t2185 * t2228 + t2188 * t2242;
t2023 = t2180 * t2065 - t2181 * t2245;
t2186 = sin(qJ(1));
t2189 = cos(qJ(1));
t2268 = t2181 * t2065 + t2180 * t2245;
t2274 = t2189 * t2023 + t2186 * t2268;
t2273 = t2186 * t2023 - t2189 * t2268;
t2199 = t2184 * qJDD(3) + t2187 * t2150;
t2194 = t2143 * qJD(4) - t2199;
t2221 = t2143 * t2169;
t2089 = -t2194 - t2221;
t2082 = t2219 + t2198;
t2218 = t2184 * t2082;
t2249 = -t2187 * t2089 - t2218;
t2142 = t2145 ^ 2;
t2230 = -t2141 - t2142;
t2238 = t2185 * t2230;
t2079 = t2187 * t2082;
t2250 = t2184 * t2089 - t2079;
t2255 = t2188 * t2250 + t2238;
t2265 = t2180 * t2249 + t2181 * t2255;
t2266 = t2180 * t2255 - t2181 * t2249;
t2272 = -t2186 * t2266 + t2189 * t2265;
t2271 = t2186 * t2265 + t2189 * t2266;
t2111 = t2226 + t2142;
t2196 = t2201 - t2220;
t2233 = t2187 * t2111 - t2184 * t2196;
t2264 = t2180 * t2233;
t2261 = t2181 * t2233;
t2072 = t2184 * t2111 + t2187 * t2196;
t2258 = t2185 * t2072;
t2257 = t2188 * t2072;
t2236 = t2188 * t2230;
t2256 = t2185 * t2250 - t2236;
t2193 = (-qJD(4) + t2169) * t2143 + t2199;
t2240 = -t2185 * t2193 - t2257;
t2247 = t2181 * t2240 + t2264;
t2248 = t2180 * t2240 - t2261;
t2254 = -t2186 * t2248 + t2189 * t2247;
t2253 = t2186 * t2247 + t2189 * t2248;
t2246 = t2185 * t2242 - t2188 * t2228;
t2241 = t2188 * t2193 - t2258;
t2235 = t2194 - t2221;
t2227 = qJD(3) ^ 2;
t2225 = -2 * qJD(5);
t2224 = 2 * qJD(6);
t2223 = -g(3) + qJDD(2);
t2163 = -t2189 * g(1) - t2186 * g(2);
t2190 = qJD(1) ^ 2;
t2147 = -t2190 * pkin(1) + t2163;
t2162 = t2186 * g(1) - t2189 * g(2);
t2197 = qJDD(1) * pkin(1) + t2162;
t2113 = t2181 * t2147 + t2180 * t2197;
t2106 = -t2190 * pkin(2) + qJDD(1) * pkin(7) + t2113;
t2091 = t2188 * t2106 + t2185 * t2223;
t2176 = t2185 ^ 2;
t2177 = t2188 ^ 2;
t2209 = t2176 + t2177;
t2205 = -t2169 * pkin(4) + t2225;
t2148 = (-t2188 * pkin(3) - pkin(8) * t2185) * qJD(1);
t2078 = -t2227 * pkin(3) + qJDD(3) * pkin(8) + t2148 * t2210 + t2091;
t2112 = -t2180 * t2147 + t2181 * t2197;
t2105 = -qJDD(1) * pkin(2) - t2190 * pkin(7) - t2112;
t2191 = (-t2150 - t2206) * pkin(8) + (t2202 + t2173) * pkin(3) + t2105;
t2038 = -t2184 * t2078 + t2187 * t2191;
t2152 = -t2180 * qJDD(1) - t2181 * t2190;
t2153 = t2181 * qJDD(1) - t2180 * t2190;
t2204 = t2189 * t2152 - t2186 * t2153;
t2200 = t2186 * t2152 + t2189 * t2153;
t2172 = t2188 * t2223;
t2077 = -t2172 - qJDD(3) * pkin(3) - t2227 * pkin(8) + (qJD(1) * t2148 + t2106) * t2185;
t2114 = t2143 * pkin(4) - t2145 * qJ(5);
t2024 = t2201 * pkin(4) - t2226 * qJ(5) + t2145 * t2114 + qJDD(5) - t2038;
t2192 = t2198 * pkin(4) + t2235 * qJ(5) + t2077;
t2039 = t2187 * t2078 + t2184 * t2191;
t2017 = -t2226 * pkin(4) - qJ(5) * t2201 - t2143 * t2114 + t2169 * t2225 + t2039;
t2168 = t2188 * t2190 * t2185;
t2167 = -t2177 * t2190 - t2227;
t2166 = -t2176 * t2190 - t2227;
t2159 = -qJDD(3) + t2168;
t2158 = qJDD(3) + t2168;
t2157 = t2209 * t2190;
t2156 = -t2186 * qJDD(1) - t2189 * t2190;
t2155 = t2189 * qJDD(1) - t2186 * t2190;
t2154 = t2209 * qJDD(1);
t2151 = -0.2e1 * t2173 + t2207;
t2149 = 0.2e1 * t2206 + t2208;
t2125 = t2145 * pkin(5) + t2169 * qJ(6);
t2124 = t2188 * t2159 - t2185 * t2166;
t2123 = -t2185 * t2158 + t2188 * t2167;
t2122 = t2185 * t2159 + t2188 * t2166;
t2121 = t2188 * t2158 + t2185 * t2167;
t2116 = t2181 * t2154 - t2180 * t2157;
t2115 = t2180 * t2154 + t2181 * t2157;
t2095 = t2181 * t2124 + t2180 * t2149;
t2094 = t2181 * t2123 - t2180 * t2151;
t2093 = t2180 * t2124 - t2181 * t2149;
t2092 = t2180 * t2123 + t2181 * t2151;
t2090 = -t2185 * t2106 + t2172;
t2086 = (-qJD(4) - t2169) * t2143 + t2199;
t2076 = -t2180 * t2112 + t2181 * t2113;
t2075 = t2181 * t2112 + t2180 * t2113;
t2061 = -t2185 * t2090 + t2188 * t2091;
t2060 = t2188 * t2090 + t2185 * t2091;
t2057 = t2184 * t2086 - t2079;
t2054 = -t2187 * t2086 - t2218;
t2051 = -t2185 * t2235 + t2257;
t2048 = t2188 * t2235 + t2258;
t2041 = t2181 * t2061 + t2180 * t2105;
t2040 = t2180 * t2061 - t2181 * t2105;
t2035 = t2188 * t2057 + t2238;
t2032 = t2185 * t2057 - t2236;
t2031 = t2205 * t2145 + t2192;
t2028 = t2181 * t2051 - t2264;
t2025 = t2180 * t2051 + t2261;
t2014 = t2181 * t2035 + t2180 * t2054;
t2011 = t2180 * t2035 - t2181 * t2054;
t2010 = -t2141 * pkin(5) + t2203 * qJ(6) + t2143 * t2224 + (qJD(4) * qJ(6) - t2125 + t2205) * t2145 + t2192;
t2009 = -pkin(5) * t2198 - t2141 * qJ(6) - t2169 * t2125 + qJDD(6) + t2017;
t2008 = -t2184 * t2038 + t2187 * t2039;
t2007 = t2187 * t2038 + t2184 * t2039;
t2006 = -t2194 * pkin(5) + (-pkin(5) * t2143 + t2224) * t2169 + t2024 + t2195 * qJ(6);
t2005 = t2188 * t2008 + t2185 * t2077;
t2004 = t2185 * t2008 - t2188 * t2077;
t2003 = t2187 * t2017 + t2184 * t2024;
t2002 = t2184 * t2017 - t2187 * t2024;
t2001 = t2184 * t2006 + t2187 * t2009;
t2000 = -t2187 * t2006 + t2184 * t2009;
t1999 = t2188 * t2003 + t2185 * t2031;
t1998 = t2185 * t2003 - t2188 * t2031;
t1997 = t2181 * t2005 + t2180 * t2007;
t1996 = t2180 * t2005 - t2181 * t2007;
t1995 = t2188 * t2001 + t2185 * t2010;
t1994 = t2185 * t2001 - t2188 * t2010;
t1993 = t2181 * t1999 + t2180 * t2002;
t1992 = t2180 * t1999 - t2181 * t2002;
t1991 = t2181 * t1995 + t2180 * t2000;
t1990 = t2180 * t1995 - t2181 * t2000;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2156, -t2155, 0, -t2186 * t2162 + t2189 * t2163, 0, 0, 0, 0, 0, 0, t2204, -t2200, 0, -t2186 * t2075 + t2189 * t2076, 0, 0, 0, 0, 0, 0, -t2186 * t2092 + t2189 * t2094, -t2186 * t2093 + t2189 * t2095, -t2186 * t2115 + t2189 * t2116, -t2186 * t2040 + t2189 * t2041, 0, 0, 0, 0, 0, 0, -t2274, -t2186 * t2025 + t2189 * t2028, t2272, -t2186 * t1996 + t2189 * t1997, 0, 0, 0, 0, 0, 0, -t2186 * t2011 + t2189 * t2014, t2274, t2254, -t2186 * t1992 + t2189 * t1993, 0, 0, 0, 0, 0, 0, t2272, t2254, -t2274, -t2186 * t1990 + t2189 * t1991; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2155, t2156, 0, t2189 * t2162 + t2186 * t2163, 0, 0, 0, 0, 0, 0, t2200, t2204, 0, t2189 * t2075 + t2186 * t2076, 0, 0, 0, 0, 0, 0, t2189 * t2092 + t2186 * t2094, t2189 * t2093 + t2186 * t2095, t2189 * t2115 + t2186 * t2116, t2189 * t2040 + t2186 * t2041, 0, 0, 0, 0, 0, 0, -t2273, t2189 * t2025 + t2186 * t2028, t2271, t2189 * t1996 + t2186 * t1997, 0, 0, 0, 0, 0, 0, t2189 * t2011 + t2186 * t2014, t2273, t2253, t2189 * t1992 + t2186 * t1993, 0, 0, 0, 0, 0, 0, t2271, t2253, -t2273, t2189 * t1990 + t2186 * t1991; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2223, 0, 0, 0, 0, 0, 0, t2121, t2122, 0, t2060, 0, 0, 0, 0, 0, 0, t2246, t2048, t2256, t2004, 0, 0, 0, 0, 0, 0, t2032, -t2246, t2241, t1998, 0, 0, 0, 0, 0, 0, t2256, t2241, t2246, t1994; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2190, -qJDD(1), 0, t2163, 0, 0, 0, 0, 0, 0, t2152, -t2153, 0, t2076, 0, 0, 0, 0, 0, 0, t2094, t2095, t2116, t2041, 0, 0, 0, 0, 0, 0, -t2023, t2028, t2265, t1997, 0, 0, 0, 0, 0, 0, t2014, t2023, t2247, t1993, 0, 0, 0, 0, 0, 0, t2265, t2247, -t2023, t1991; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2190, 0, t2162, 0, 0, 0, 0, 0, 0, t2153, t2152, 0, t2075, 0, 0, 0, 0, 0, 0, t2092, t2093, t2115, t2040, 0, 0, 0, 0, 0, 0, t2268, t2025, t2266, t1996, 0, 0, 0, 0, 0, 0, t2011, -t2268, t2248, t1992, 0, 0, 0, 0, 0, 0, t2266, t2248, t2268, t1990; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, t2223, 0, 0, 0, 0, 0, 0, t2121, t2122, 0, t2060, 0, 0, 0, 0, 0, 0, t2246, t2048, t2256, t2004, 0, 0, 0, 0, 0, 0, t2032, -t2246, t2241, t1998, 0, 0, 0, 0, 0, 0, t2256, t2241, t2246, t1994; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2190, -qJDD(1), 0, t2113, 0, 0, 0, 0, 0, 0, t2123, t2124, t2154, t2061, 0, 0, 0, 0, 0, 0, t2245, t2051, t2255, t2005, 0, 0, 0, 0, 0, 0, t2035, -t2245, t2240, t1999, 0, 0, 0, 0, 0, 0, t2255, t2240, t2245, t1995; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2190, 0, t2112, 0, 0, 0, 0, 0, 0, t2151, -t2149, t2157, -t2105, 0, 0, 0, 0, 0, 0, t2065, t2233, -t2249, -t2007, 0, 0, 0, 0, 0, 0, -t2054, -t2065, -t2233, -t2002, 0, 0, 0, 0, 0, 0, -t2249, -t2233, t2065, -t2000; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2223, 0, 0, 0, 0, 0, 0, t2121, t2122, 0, t2060, 0, 0, 0, 0, 0, 0, t2246, t2048, t2256, t2004, 0, 0, 0, 0, 0, 0, t2032, -t2246, t2241, t1998, 0, 0, 0, 0, 0, 0, t2256, t2241, t2246, t1994; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2167, t2159, t2207, t2091, 0, 0, 0, 0, 0, 0, t2242, t2072, t2250, t2008, 0, 0, 0, 0, 0, 0, t2057, -t2242, -t2072, t2003, 0, 0, 0, 0, 0, 0, t2250, -t2072, t2242, t2001; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2158, t2166, -t2208, t2090, 0, 0, 0, 0, 0, 0, -t2228, t2235, -t2230, -t2077, 0, 0, 0, 0, 0, 0, -t2230, t2228, t2193, -t2031, 0, 0, 0, 0, 0, 0, -t2230, t2193, -t2228, -t2010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2151, t2149, -t2157, t2105, 0, 0, 0, 0, 0, 0, -t2065, -t2233, t2249, t2007, 0, 0, 0, 0, 0, 0, t2054, t2065, t2233, t2002, 0, 0, 0, 0, 0, 0, t2249, t2233, -t2065, t2000; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2229, t2196, -t2082, t2039, 0, 0, 0, 0, 0, 0, -t2082, -t2229, -t2196, t2017, 0, 0, 0, 0, 0, 0, -t2082, -t2196, t2229, t2009; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2195, -t2111, -t2089, t2038, 0, 0, 0, 0, 0, 0, -t2086, t2195, t2111, -t2024, 0, 0, 0, 0, 0, 0, -t2089, t2111, -t2195, -t2006; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2228, -t2235, t2230, t2077, 0, 0, 0, 0, 0, 0, t2230, -t2228, -t2193, t2031, 0, 0, 0, 0, 0, 0, t2230, -t2193, t2228, t2010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2230, -t2228, -t2193, t2031, 0, 0, 0, 0, 0, 0, t2230, -t2193, t2228, t2010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2082, t2229, t2196, -t2017, 0, 0, 0, 0, 0, 0, t2082, t2196, -t2229, -t2009; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2086, -t2195, -t2111, t2024, 0, 0, 0, 0, 0, 0, t2089, -t2111, t2195, t2006; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2230, -t2193, t2228, t2010; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2089, -t2111, t2195, t2006; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2082, -t2196, t2229, t2009;];
f_new_reg  = t1;
