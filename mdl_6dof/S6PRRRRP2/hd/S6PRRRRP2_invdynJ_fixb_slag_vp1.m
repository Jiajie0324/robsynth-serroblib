% Calculate vector of inverse dynamics joint torques for
% S6PRRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6PRRRRP2_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP2_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP2_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP2_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP2_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP2_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6PRRRRP2_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6PRRRRP2_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6PRRRRP2_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:01:12
% EndTime: 2019-03-09 00:04:12
% DurationCPUTime: 166.95s
% Computational Cost: add. (127342->2057), mult. (226346->2815), div. (0->0), fcn. (261090->12), ass. (0->761)
t1354 = Icges(6,4) - Icges(7,5);
t1338 = Icges(6,1) + Icges(7,1);
t1336 = Icges(7,4) + Icges(6,5);
t1335 = Icges(6,2) + Icges(7,3);
t1334 = Icges(7,2) + Icges(6,3);
t1333 = Icges(6,6) - Icges(7,6);
t1213 = cos(qJ(5));
t873 = sin(pkin(6));
t1052 = t873 * t1213;
t1159 = qJ(3) + qJ(4);
t870 = sin(t1159);
t875 = cos(pkin(6));
t878 = sin(qJ(2));
t1043 = cos(t1159);
t994 = t873 * t1043;
t977 = t878 * t994;
t783 = t875 * t870 + t977;
t876 = sin(qJ(5));
t880 = cos(qJ(2));
t946 = -t1052 * t880 - t783 * t876;
t1360 = t1354 * t946;
t872 = sin(pkin(11));
t1170 = t872 * t873;
t1163 = t875 * t878;
t1079 = t872 * t1163;
t874 = cos(pkin(11));
t824 = t874 * t880 - t1079;
t712 = t1043 * t824 + t1170 * t870;
t1161 = t875 * t880;
t823 = t1161 * t872 + t874 * t878;
t956 = t1213 * t823 - t712 * t876;
t1359 = t1354 * t956;
t1169 = t873 * t874;
t1077 = t870 * t1169;
t822 = t1163 * t874 + t872 * t880;
t710 = t1043 * t822 - t1077;
t961 = t1161 * t874 - t872 * t878;
t957 = -t1213 * t961 - t710 * t876;
t1358 = t1354 * t957;
t571 = t1213 * t710 - t876 * t961;
t1357 = t1354 * t571;
t573 = t1213 * t712 + t823 * t876;
t1356 = t1354 * t573;
t1053 = t783 * t1213;
t1165 = t873 * t880;
t714 = -t1165 * t876 + t1053;
t1355 = t1354 * t714;
t790 = t961 * qJD(2);
t871 = qJD(3) + qJD(4);
t929 = -t822 * t870 - t874 * t994;
t515 = t1043 * t790 + t871 * t929;
t791 = t822 * qJD(2);
t280 = qJD(5) * t571 - t1213 * t791 + t515 * t876;
t281 = qJD(5) * t957 + t1213 * t515 + t791 * t876;
t995 = t871 * t1043;
t514 = -t1077 * t871 + t790 * t870 + t822 * t995;
t1353 = t1333 * t514 - t1335 * t280 + t1354 * t281;
t792 = t823 * qJD(2);
t930 = -t824 * t870 + t872 * t994;
t517 = -t1043 * t792 + t871 * t930;
t1108 = qJD(2) * t880;
t793 = -qJD(2) * t1079 + t1108 * t874;
t282 = qJD(5) * t573 - t1213 * t793 + t517 * t876;
t283 = qJD(5) * t956 + t1213 * t517 + t793 * t876;
t516 = t824 * t995 + (t1170 * t871 - t792) * t870;
t1352 = t1333 * t516 - t1335 * t282 + t1354 * t283;
t1351 = -t1333 * t280 + t1334 * t514 + t1336 * t281;
t1350 = -t1333 * t282 + t1334 * t516 + t1336 * t283;
t1349 = t1336 * t514 + t1338 * t281 - t1354 * t280;
t1348 = t1336 * t516 + t1338 * t283 - t1354 * t282;
t1000 = t878 * t1052;
t1048 = qJD(5) * t1165;
t1167 = t873 * t878;
t782 = -t1043 * t875 + t1167 * t870;
t976 = t880 * t994;
t660 = qJD(2) * t976 - t782 * t871;
t445 = -qJD(2) * t1000 + qJD(5) * t1053 + (-t1048 + t660) * t876;
t1109 = qJD(2) * t878;
t1050 = t873 * t1109;
t446 = qJD(5) * t946 + t1050 * t876 + t1213 * t660;
t1049 = t873 * t1108;
t659 = t871 * t977 + (t871 * t875 + t1049) * t870;
t1347 = t1333 * t659 - t1335 * t445 + t1354 * t446;
t1346 = -t1333 * t445 + t1334 * t659 + t1336 * t446;
t1345 = t1336 * t659 + t1338 * t446 - t1354 * t445;
t1290 = t1333 * t929 - t1335 * t957 - t1357;
t1289 = t1333 * t930 - t1335 * t956 - t1356;
t1288 = t1333 * t957 - t1334 * t929 + t1336 * t571;
t1287 = t1333 * t956 - t1334 * t930 + t1336 * t573;
t1286 = -t1336 * t929 + t1338 * t571 + t1358;
t1285 = -t1336 * t930 + t1338 * t573 + t1359;
t1278 = -t1333 * t782 - t1335 * t946 - t1355;
t1277 = t1333 * t946 + t1334 * t782 + t1336 * t714;
t1276 = t1336 * t782 + t1338 * t714 + t1360;
t1329 = rSges(7,1) + pkin(5);
t1328 = rSges(7,3) + qJ(6);
t1312 = t1286 * t281 + t1288 * t514 + t1290 * t280 + t1349 * t571 - t1351 * t929 + t1353 * t957;
t1311 = t1285 * t281 + t1287 * t514 + t1289 * t280 + t1348 * t571 - t1350 * t929 + t1352 * t957;
t1310 = t1286 * t283 + t1288 * t516 + t1290 * t282 + t1349 * t573 - t1351 * t930 + t1353 * t956;
t1309 = t1285 * t283 + t1287 * t516 + t1289 * t282 + t1348 * t573 - t1350 * t930 + t1352 * t956;
t1308 = t1286 * t446 + t1288 * t659 + t1290 * t445 + t1349 * t714 + t1351 * t782 + t1353 * t946;
t1307 = t1285 * t446 + t1287 * t659 + t1289 * t445 + t1348 * t714 + t1350 * t782 + t1352 * t946;
t1303 = t1276 * t281 + t1277 * t514 + t1278 * t280 + t1345 * t571 - t1346 * t929 + t1347 * t957;
t1302 = t1276 * t283 + t1277 * t516 + t1278 * t282 + t1345 * t573 - t1346 * t930 + t1347 * t956;
t1301 = t1276 * t446 + t1277 * t659 + t1278 * t445 + t1345 * t714 + t1346 * t782 + t1347 * t946;
t1300 = t1286 * t571 - t1288 * t929 - t1290 * t957;
t1299 = t1285 * t571 - t1287 * t929 - t1289 * t957;
t1298 = t1286 * t573 - t1288 * t930 - t1290 * t956;
t1297 = t1285 * t573 - t1287 * t930 - t1289 * t956;
t1296 = t1286 * t714 + t1288 * t782 - t1290 * t946;
t1295 = t1285 * t714 + t1287 * t782 - t1289 * t946;
t1294 = t1276 * t571 - t1277 * t929 - t1278 * t957;
t1293 = t1276 * t573 - t1277 * t930 - t1278 * t956;
t1292 = t1276 * t714 + t1277 * t782 - t1278 * t946;
t1344 = t1213 * t1354 - t1335 * t876;
t1343 = -t1213 * t1336 + t1333 * t876;
t1342 = -t1213 * t1338 + t1354 * t876;
t1110 = qJD(2) * t873;
t858 = t872 * t1110;
t734 = qJD(3) * t823 + t858;
t604 = qJD(4) * t823 + t734;
t460 = -qJD(5) * t930 + t604;
t1051 = t874 * t1110;
t735 = -qJD(3) * t961 - t1051;
t605 = -qJD(4) * t961 + t735;
t461 = -qJD(5) * t929 + t605;
t869 = qJD(2) * t875;
t771 = -t1165 * t871 + t869;
t641 = qJD(5) * t782 + t771;
t1304 = t1292 * t641 + t1295 * t460 + t1296 * t461;
t1341 = -t1304 / 0.2e1;
t1305 = t1293 * t641 + t1297 * t460 + t1298 * t461;
t1340 = -t1305 / 0.2e1;
t1306 = t1294 * t641 + t1299 * t460 + t1300 * t461;
t1339 = -t1306 / 0.2e1;
t248 = Icges(5,5) * t515 - Icges(5,6) * t514 + Icges(5,3) * t791;
t250 = Icges(5,4) * t515 - Icges(5,2) * t514 + Icges(5,6) * t791;
t252 = Icges(5,1) * t515 - Icges(5,4) * t514 + Icges(5,5) * t791;
t429 = Icges(5,5) * t710 + Icges(5,6) * t929 - Icges(5,3) * t961;
t1202 = Icges(5,4) * t710;
t431 = Icges(5,2) * t929 - Icges(5,6) * t961 + t1202;
t692 = Icges(5,4) * t929;
t433 = Icges(5,1) * t710 - Icges(5,5) * t961 + t692;
t101 = -t248 * t961 + t250 * t929 + t252 * t710 + t429 * t791 - t431 * t514 + t433 * t515;
t249 = Icges(5,5) * t517 - Icges(5,6) * t516 + Icges(5,3) * t793;
t251 = Icges(5,4) * t517 - Icges(5,2) * t516 + Icges(5,6) * t793;
t253 = Icges(5,1) * t517 - Icges(5,4) * t516 + Icges(5,5) * t793;
t430 = Icges(5,5) * t712 + Icges(5,6) * t930 + Icges(5,3) * t823;
t1201 = Icges(5,4) * t712;
t432 = Icges(5,2) * t930 + Icges(5,6) * t823 + t1201;
t693 = Icges(5,4) * t930;
t434 = Icges(5,1) * t712 + Icges(5,5) * t823 + t693;
t102 = -t249 * t961 + t251 * t929 + t253 * t710 + t430 * t791 - t432 * t514 + t434 * t515;
t421 = Icges(5,5) * t660 - Icges(5,6) * t659 + Icges(5,3) * t1050;
t422 = Icges(5,4) * t660 - Icges(5,2) * t659 + Icges(5,6) * t1050;
t423 = Icges(5,1) * t660 - Icges(5,4) * t659 + Icges(5,5) * t1050;
t578 = Icges(5,5) * t783 - Icges(5,6) * t782 - Icges(5,3) * t1165;
t1200 = Icges(5,4) * t783;
t579 = -Icges(5,2) * t782 - Icges(5,6) * t1165 + t1200;
t765 = Icges(5,4) * t782;
t580 = Icges(5,1) * t783 - Icges(5,5) * t1165 - t765;
t122 = -t421 * t961 + t422 * t929 + t423 * t710 - t514 * t579 + t515 * t580 + t578 * t791;
t1091 = qJDD(2) * t873;
t856 = t872 * t1091;
t588 = qJD(3) * t793 + qJDD(3) * t823 + t856;
t443 = qJD(4) * t793 + qJDD(4) * t823 + t588;
t215 = qJD(5) * t516 - qJDD(5) * t930 + t443;
t1042 = t874 * t1091;
t589 = qJD(3) * t791 - qJDD(3) * t961 - t1042;
t444 = qJD(4) * t791 - qJDD(4) * t961 + t589;
t216 = qJD(5) * t514 - qJDD(5) * t929 + t444;
t1107 = qJD(3) * t878;
t860 = t873 * t1107;
t868 = qJDD(2) * t875;
t1111 = qJD(2) * t860 + t868;
t859 = qJD(4) * t1167;
t658 = qJD(2) * t859 + (-qJDD(3) - qJDD(4)) * t1165 + t1111;
t396 = qJD(5) * t659 + qJDD(5) * t782 + t658;
t1315 = t1294 * t396 + t1299 * t215 + t1300 * t216 + t1303 * t641 + t1311 * t460 + t1312 * t461;
t175 = -t429 * t961 + t431 * t929 + t433 * t710;
t176 = -t430 * t961 + t432 * t929 + t434 * t710;
t194 = -t578 * t961 + t579 * t929 + t580 * t710;
t1332 = t101 * t605 + t102 * t604 + t122 * t771 + t175 * t444 + t176 * t443 + t194 * t658 + t1315;
t103 = t248 * t823 + t250 * t930 + t252 * t712 + t429 * t793 - t431 * t516 + t433 * t517;
t104 = t249 * t823 + t251 * t930 + t253 * t712 + t430 * t793 - t432 * t516 + t434 * t517;
t123 = t421 * t823 + t422 * t930 + t423 * t712 - t516 * t579 + t517 * t580 + t578 * t793;
t1314 = t1293 * t396 + t1297 * t215 + t1298 * t216 + t1302 * t641 + t1309 * t460 + t1310 * t461;
t177 = t429 * t823 + t431 * t930 + t433 * t712;
t178 = t430 * t823 + t432 * t930 + t434 * t712;
t195 = t578 * t823 + t579 * t930 + t580 * t712;
t1331 = t103 * t605 + t104 * t604 + t123 * t771 + t177 * t444 + t178 * t443 + t195 * t658 + t1314;
t1141 = -rSges(7,2) * t930 - t1328 * t956 + t1329 * t573;
t110 = -t250 * t782 + t252 * t783 - t431 * t659 + t433 * t660 + (t1109 * t429 - t248 * t880) * t873;
t111 = -t251 * t782 + t253 * t783 - t432 * t659 + t434 * t660 + (t1109 * t430 - t249 * t880) * t873;
t1313 = t1292 * t396 + t1295 * t215 + t1296 * t216 + t1301 * t641 + t1307 * t460 + t1308 * t461;
t135 = -t422 * t782 + t423 * t783 - t579 * t659 + t580 * t660 + (t1109 * t578 - t421 * t880) * t873;
t183 = -t1165 * t429 - t431 * t782 + t433 * t783;
t184 = -t1165 * t430 - t432 * t782 + t434 * t783;
t212 = -t1165 * t578 - t579 * t782 + t580 * t783;
t1330 = t110 * t605 + t111 * t604 + t771 * t135 + t183 * t444 + t184 * t443 + t658 * t212 + t1313;
t1101 = qJD(6) * t957;
t1158 = rSges(7,2) * t514 + t1328 * t280 + t1329 * t281 - t1101;
t1099 = qJD(6) * t946;
t1155 = rSges(7,2) * t659 + t1328 * t445 + t1329 * t446 - t1099;
t1143 = rSges(7,2) * t929 + t1328 * t957 - t1329 * t571;
t1327 = t1333 * t710 + t1344 * t929;
t1326 = t1333 * t712 + t1344 * t930;
t1325 = t1336 * t710 - t1342 * t929;
t1324 = t1336 * t712 - t1342 * t930;
t1056 = t929 * t1213;
t1177 = t929 * t876;
t1323 = t710 * rSges(7,2) + t1056 * t1329 + t1328 * t1177;
t1055 = t930 * t1213;
t1176 = t930 * t876;
t1322 = t712 * rSges(7,2) + t1055 * t1329 + t1328 * t1176;
t1321 = t1333 * t783 - t1344 * t782;
t1320 = t1336 * t783 + t1342 * t782;
t1054 = t782 * t1213;
t1174 = t782 * t876;
t1319 = t783 * rSges(7,2) - t1054 * t1329 - t1328 * t1174;
t1127 = rSges(7,2) * t782 - t1328 * t946 + t1329 * t714;
t1318 = (-t1213 * t1276 - t1278 * t876 + t1334 * t783 + t1343 * t782) * t641 + (-t1213 * t1286 - t1290 * t876 + t1334 * t710 - t1343 * t929) * t461 + (-t1213 * t1285 - t1289 * t876 + t1334 * t712 - t1343 * t930) * t460;
t879 = cos(qJ(3));
t1166 = t873 * t879;
t877 = sin(qJ(3));
t725 = t872 * t1166 - t824 * t877;
t1317 = -rSges(4,1) * t879 + rSges(4,2) * t877;
t1168 = t873 * t877;
t1081 = t872 * t1168;
t881 = -pkin(9) - pkin(8);
t1211 = pkin(8) + t881;
t867 = pkin(3) * t879 + pkin(2);
t1212 = -pkin(2) + t867;
t442 = pkin(3) * t1081 - t1211 * t823 + t1212 * t824;
t686 = pkin(2) * t824 + pkin(8) * t823;
t657 = t875 * t686;
t1135 = t875 * t442 + t657;
t498 = pkin(4) * t712 - pkin(10) * t930;
t1316 = 0.2e1 * t875 * t498 + 0.2e1 * t1135;
t1291 = t1141 * t1050;
t1173 = t961 * t870;
t993 = t876 * t1043;
t622 = -t1213 * t822 + t961 * t993;
t973 = t1213 * t1043;
t623 = t822 * t876 + t961 * t973;
t1284 = -t1173 * t1333 + t1335 * t622 - t1354 * t623;
t1172 = t823 * t870;
t624 = -t1213 * t824 - t823 * t993;
t625 = -t823 * t973 + t824 * t876;
t1283 = t1172 * t1333 + t1335 * t624 - t1354 * t625;
t1282 = t1173 * t1334 - t1333 * t622 + t1336 * t623;
t1281 = -t1172 * t1334 - t1333 * t624 + t1336 * t625;
t1280 = t1173 * t1336 + t1338 * t623 - t1354 * t622;
t1279 = -t1172 * t1336 + t1338 * t625 - t1354 * t624;
t1082 = t870 * t1165;
t748 = t876 * t976 - t1000;
t749 = (t876 * t878 + t880 * t973) * t873;
t1275 = -t1082 * t1333 + t1335 * t748 - t1354 * t749;
t1274 = t1082 * t1334 - t1333 * t748 + t1336 * t749;
t1273 = t1082 * t1336 + t1338 * t749 - t1354 * t748;
t1272 = (t1335 * t714 - t1276 - t1360) * t641 + (t1335 * t571 - t1286 - t1358) * t461 + (t1335 * t573 - t1285 - t1359) * t460;
t1271 = (t1338 * t946 + t1278 - t1355) * t641 + (t1338 * t957 + t1290 - t1357) * t461 + (t1338 * t956 + t1289 - t1356) * t460;
t1270 = (-t1333 * t714 + t1336 * t946) * t641 + (-t1333 * t571 + t1336 * t957) * t461 + (-t1333 * t573 + t1336 * t956) * t460;
t828 = (Icges(3,5) * t880 - Icges(3,6) * t878) * t873;
t794 = qJD(2) * t828;
t1100 = qJD(6) * t956;
t1157 = rSges(7,2) * t516 + t1328 * t282 + t1329 * t283 - t1100;
t1269 = -t1141 * t216 - t1143 * t215 - t1157 * t461 + t1158 * t460;
t1076 = t874 * t1168;
t962 = -t822 * t879 + t1076;
t574 = qJD(3) * t962 - t790 * t877;
t723 = -t1166 * t874 - t822 * t877;
t939 = t723 * qJD(3);
t575 = t790 * t879 + t939;
t303 = rSges(4,1) * t575 + rSges(4,2) * t574 + rSges(4,3) * t791;
t726 = t824 * t879 + t1081;
t576 = -qJD(3) * t726 + t792 * t877;
t938 = t725 * qJD(3);
t577 = -t792 * t879 + t938;
t304 = rSges(4,1) * t577 + rSges(4,2) * t576 + rSges(4,3) * t793;
t458 = -rSges(4,1) * t962 + rSges(4,2) * t723 - rSges(4,3) * t961;
t459 = rSges(4,1) * t726 + rSges(4,2) * t725 + rSges(4,3) * t823;
t1268 = t303 * t734 - t304 * t735 + t458 * t588 - t459 * t589;
t612 = Icges(3,5) * t822 + Icges(3,6) * t961 - Icges(3,3) * t1169;
t613 = Icges(3,5) * t824 - Icges(3,6) * t823 + Icges(3,3) * t1170;
t1208 = Icges(3,4) * t822;
t614 = Icges(3,2) * t961 - Icges(3,6) * t1169 + t1208;
t1207 = Icges(3,4) * t824;
t615 = -Icges(3,2) * t823 + Icges(3,6) * t1170 + t1207;
t810 = Icges(3,4) * t961;
t616 = Icges(3,1) * t822 - Icges(3,5) * t1169 + t810;
t811 = Icges(3,4) * t823;
t617 = Icges(3,1) * t824 + Icges(3,5) * t1170 - t811;
t776 = Icges(3,3) * t875 + (Icges(3,5) * t878 + Icges(3,6) * t880) * t873;
t1206 = Icges(3,4) * t878;
t777 = Icges(3,6) * t875 + (Icges(3,2) * t880 + t1206) * t873;
t861 = Icges(3,4) * t1165;
t778 = Icges(3,1) * t1167 + Icges(3,5) * t875 + t861;
t1267 = (-t1169 * t776 + t777 * t961 + t778 * t822) * t875 + t873 * (-(-t1169 * t612 + t614 * t961 + t616 * t822) * t874 + (-t1169 * t613 + t615 * t961 + t617 * t822) * t872);
t935 = Icges(5,5) * t1043 - Icges(5,6) * t870;
t1266 = t604 * (-Icges(5,3) * t824 + t1043 * t434 - t432 * t870 + t823 * t935) + t605 * (-Icges(5,3) * t822 + t1043 * t433 - t431 * t870 - t935 * t961) + t771 * (t1043 * t580 - t579 * t870 - (Icges(5,3) * t878 + t880 * t935) * t873);
t1205 = Icges(4,4) * t962;
t452 = Icges(4,2) * t723 - Icges(4,6) * t961 - t1205;
t1204 = Icges(4,4) * t726;
t453 = Icges(4,2) * t725 + Icges(4,6) * t823 + t1204;
t719 = Icges(4,4) * t723;
t454 = -Icges(4,1) * t962 - Icges(4,5) * t961 + t719;
t720 = Icges(4,4) * t725;
t455 = Icges(4,1) * t726 + Icges(4,5) * t823 + t720;
t1164 = t875 * t877;
t827 = t1166 * t878 + t1164;
t1203 = Icges(4,4) * t827;
t1078 = t877 * t1167;
t1162 = t875 * t879;
t826 = -t1078 + t1162;
t634 = Icges(4,2) * t826 - Icges(4,6) * t1165 + t1203;
t819 = Icges(4,4) * t826;
t635 = Icges(4,1) * t827 - Icges(4,5) * t1165 + t819;
t835 = -qJD(3) * t1165 + t869;
t987 = Icges(4,5) * t879 - Icges(4,6) * t877;
t890 = t734 * (Icges(4,3) * t824 + t453 * t877 - t455 * t879 - t823 * t987) + t735 * (Icges(4,3) * t822 + t452 * t877 - t454 * t879 + t961 * t987) + t835 * (t634 * t877 - t635 * t879 + (Icges(4,3) * t878 + t880 * t987) * t873);
t1090 = qJDD(6) * t946;
t1102 = qJD(6) * t445;
t306 = pkin(4) * t517 + pkin(10) * t516;
t1178 = t605 * t306;
t1183 = t444 * t498;
t305 = pkin(4) * t515 + pkin(10) * t514;
t221 = t604 * t305;
t496 = pkin(4) * t710 - pkin(10) * t929;
t243 = t443 * t496;
t320 = pkin(3) * t938 - t1211 * t793 - t1212 * t792;
t1175 = t735 * t320;
t1179 = t589 * t442;
t319 = pkin(3) * t939 - t1211 * t791 + t1212 * t790;
t279 = t734 * t319;
t441 = -pkin(3) * t1076 + t1211 * t961 + t1212 * t822;
t292 = t588 * t441;
t652 = pkin(2) * t790 + pkin(8) * t791;
t585 = t652 * t858;
t653 = -pkin(2) * t792 + pkin(8) * t793;
t586 = t653 * t1051;
t684 = pkin(2) * t822 - pkin(8) * t961;
t618 = t684 * t856;
t619 = t686 * t1042;
t978 = qJDD(1) + t585 + t586 + t618 + t619;
t906 = -t1175 + t279 + t292 + t978 - t1179;
t893 = -t1178 + t221 + t243 + t906 - t1183;
t23 = -t1090 + t893 + t1102 + t1269;
t1265 = 0.2e1 * t23;
t456 = pkin(4) * t660 + pkin(10) * t659;
t639 = pkin(4) * t783 + pkin(10) * t782;
t866 = pkin(3) * t1162;
t546 = qJD(3) * t866 + (-pkin(3) * t877 * t1107 + (-t1211 * t878 + t1212 * t880) * qJD(2)) * t873;
t640 = pkin(3) * t1164 + (t1211 * t880 + t1212 * t878) * t873;
t750 = -qJDD(3) * t1165 + t1111;
t816 = (pkin(2) * t880 + pkin(8) * t878) * t1110;
t832 = (pkin(2) * t878 - pkin(8) * t880) * t873;
t963 = -t1169 * t832 - t684 * t875;
t900 = (-t1169 * t816 - t652 * t875) * qJD(2) + t963 * qJDD(2);
t891 = -t835 * t319 - t750 * t441 + t735 * t546 + t589 * t640 + t900;
t885 = -t771 * t305 + t444 * t639 + t605 * t456 - t658 * t496 + t891;
t31 = qJD(6) * t282 - qJDD(6) * t956 + t1127 * t216 + t1143 * t396 + t1155 * t461 - t1158 * t641 + t885;
t1264 = 0.2e1 * t31;
t272 = rSges(6,1) * t573 + rSges(6,2) * t956 - rSges(6,3) * t930;
t1190 = t216 * t272;
t270 = rSges(6,1) * t571 + rSges(6,2) * t957 - rSges(6,3) * t929;
t1191 = t215 * t270;
t169 = rSges(6,1) * t283 - rSges(6,2) * t282 + rSges(6,3) * t516;
t1192 = t169 * t461;
t167 = rSges(6,1) * t281 - rSges(6,2) * t280 + rSges(6,3) * t514;
t1193 = t167 * t460;
t39 = -t1190 + t1191 - t1192 + t893 + t1193;
t1263 = 0.2e1 * t39;
t1044 = t686 * t1051 + t684 * t858 + qJD(1);
t947 = t734 * t441 - t442 * t735 + t1044;
t921 = t604 * t496 - t498 * t605 + t947;
t82 = -t1141 * t461 - t1143 * t460 - t1099 + t921;
t1262 = 0.2e1 * t82;
t974 = t686 * t869 - t832 * t858;
t923 = t835 * t442 - t640 * t734 + t974;
t905 = t771 * t498 - t604 * t639 + t923;
t90 = -t1127 * t460 + t1141 * t641 - t1101 + t905;
t1261 = 0.2e1 * t90;
t940 = t963 * qJD(2);
t915 = -t441 * t835 + t735 * t640 + t940;
t902 = -t496 * t771 + t605 * t639 + t915;
t91 = t1127 * t461 + t1143 * t641 - t1100 + t902;
t1260 = 0.2e1 * t91;
t100 = t270 * t460 - t272 * t461 + t921;
t1259 = 0.2e1 * t100;
t425 = rSges(6,1) * t714 + rSges(6,2) * t946 + rSges(6,3) * t782;
t117 = t272 * t641 - t425 * t460 + t905;
t1258 = 0.2e1 * t117;
t1257 = m(5) / 0.2e1;
t1256 = m(6) / 0.2e1;
t1255 = m(7) / 0.2e1;
t1254 = t215 / 0.2e1;
t1253 = t216 / 0.2e1;
t1252 = t396 / 0.2e1;
t1251 = t443 / 0.2e1;
t1250 = t444 / 0.2e1;
t1249 = -t460 / 0.2e1;
t1248 = t460 / 0.2e1;
t1247 = -t461 / 0.2e1;
t1246 = t461 / 0.2e1;
t1241 = t588 / 0.2e1;
t1240 = t589 / 0.2e1;
t1239 = -t604 / 0.2e1;
t1238 = t604 / 0.2e1;
t1237 = -t605 / 0.2e1;
t1236 = t605 / 0.2e1;
t1235 = -t641 / 0.2e1;
t1234 = t641 / 0.2e1;
t1233 = t658 / 0.2e1;
t1228 = -t734 / 0.2e1;
t1227 = t734 / 0.2e1;
t1226 = -t735 / 0.2e1;
t1225 = t735 / 0.2e1;
t1224 = t750 / 0.2e1;
t1223 = -t771 / 0.2e1;
t1222 = t771 / 0.2e1;
t1220 = t791 / 0.2e1;
t1219 = t793 / 0.2e1;
t1218 = -t961 / 0.2e1;
t1217 = t823 / 0.2e1;
t1216 = -t835 / 0.2e1;
t1215 = t835 / 0.2e1;
t254 = rSges(5,1) * t515 - rSges(5,2) * t514 + rSges(5,3) * t791;
t1189 = t254 * t604;
t255 = rSges(5,1) * t517 - rSges(5,2) * t516 + rSges(5,3) * t793;
t1188 = t255 * t605;
t438 = rSges(5,1) * t710 + rSges(5,2) * t929 - rSges(5,3) * t961;
t1185 = t438 * t443;
t439 = rSges(5,1) * t712 + rSges(5,2) * t930 + rSges(5,3) * t823;
t1184 = t439 * t444;
t1180 = t498 * t791;
t1160 = t878 * t881;
t1156 = -t169 - t306;
t208 = rSges(6,1) * t446 - rSges(6,2) * t445 + rSges(6,3) * t659;
t1154 = -t208 - t456;
t1153 = t823 * t254 + t793 * t438;
t447 = t823 * t496;
t1152 = t823 * t270 + t447;
t1151 = -t255 - t320;
t1150 = -t270 - t496;
t1149 = -t272 - t498;
t1148 = t823 * t305 + t793 * t496;
t1147 = t823 * t319 + t793 * t441;
t603 = t875 * t653;
t1146 = t875 * t320 + t603;
t1145 = -t319 - t652;
t1144 = t1328 * t571 + t1329 * t957;
t1142 = t1328 * t573 + t1329 * t956;
t1138 = t441 * t1165 - t640 * t961;
t1137 = -rSges(7,2) * t1173 - t1328 * t622 - t1329 * t623;
t1136 = -rSges(7,2) * t1172 + t1328 * t624 + t1329 * t625;
t1134 = -t425 - t639;
t426 = rSges(5,1) * t660 - rSges(5,2) * t659 + rSges(5,3) * t1050;
t1133 = -t426 - t546;
t1132 = -t438 - t441;
t1131 = -t439 - t442;
t1130 = t496 * t1165 - t639 * t961;
t1128 = t1328 * t714 + t1329 * t946;
t581 = rSges(5,1) * t783 - rSges(5,2) * t782 - rSges(5,3) * t1165;
t1126 = t438 * t1165 - t581 * t961;
t1125 = -t581 - t640;
t1124 = rSges(7,2) * t1082 + t1328 * t748 + t1329 * t749;
t1123 = t653 * t1169 + t652 * t1170;
t1122 = Icges(3,1) * t961 - t1208 - t614;
t1121 = -Icges(3,1) * t823 - t1207 - t615;
t1120 = -Icges(3,2) * t822 + t616 + t810;
t1119 = -Icges(3,2) * t824 + t617 - t811;
t683 = pkin(2) * t961 + pkin(8) * t822;
t685 = -t823 * pkin(2) + pkin(8) * t824;
t1118 = t685 * t1051 + t683 * t858;
t1117 = t686 * t1169 + t684 * t1170;
t491 = rSges(5,1) * t929 - t710 * rSges(5,2);
t492 = rSges(5,1) * t930 - t712 * rSges(5,2);
t1116 = -t822 * t881 + t867 * t961;
t1115 = -t823 * t867 - t824 * t881;
t997 = t961 * t1043;
t606 = pkin(4) * t997 + pkin(10) * t1173;
t996 = t823 * t1043;
t607 = -pkin(4) * t996 - pkin(10) * t1172;
t636 = -t782 * rSges(5,1) - t783 * rSges(5,2);
t830 = (Icges(3,1) * t880 - t1206) * t873;
t1114 = -t777 + t830;
t1113 = -Icges(3,2) * t1167 + t778 + t861;
t806 = qJD(3) * t822;
t673 = qJD(4) * t822 + t806;
t808 = qJD(3) * t824;
t674 = qJD(4) * t824 + t808;
t1112 = rSges(5,1) * t976 + rSges(5,3) * t1167;
t743 = pkin(4) * t976 + pkin(10) * t1082;
t825 = t860 + t859;
t833 = pkin(2) * t1165 + pkin(8) * t1167;
t1106 = qJD(5) * t710;
t1105 = qJD(5) * t712;
t1104 = qJD(5) * t783;
t1103 = qJD(5) * t870;
t1098 = qJD(6) * t876;
t1096 = 2 * m(3);
t1095 = 2 * m(4);
t1094 = 0.2e1 * m(5);
t1093 = 0.2e1 * m(6);
t1092 = 0.2e1 * m(7);
t1089 = 0.2e1 * t961;
t1088 = 0.2e1 * t823;
t1087 = 0.2e1 * t872;
t1086 = 0.2e1 * t874;
t1085 = 0.2e1 * t875;
t1084 = 0.2e1 * t880;
t1083 = 0.2e1 * t1109;
t1075 = -t306 - t1157;
t1074 = -t320 + t1156;
t1073 = -t456 - t1155;
t1072 = -t546 + t1154;
t1071 = -t1143 * t823 + t447;
t1070 = t254 * t1165 - t426 * t961 + t791 * t581;
t1069 = -t496 + t1143;
t1068 = -t441 + t1150;
t1067 = -t498 - t1141;
t1066 = -t442 + t1149;
t1065 = t305 * t1165 - t456 * t961 + t791 * t639;
t1064 = t875 * t306 + t1146;
t1063 = -t305 + t1145;
t1062 = t319 * t1165 - t546 * t961 + t791 * t640;
t1060 = -t639 - t1127;
t1059 = -t640 + t1134;
t1058 = -t816 + t1133;
t1057 = -t832 + t1125;
t359 = t623 * rSges(6,1) - t622 * rSges(6,2) + rSges(6,3) * t1173;
t361 = t625 * rSges(6,1) - t624 * rSges(6,2) - rSges(6,3) * t1172;
t544 = t749 * rSges(6,1) - t748 * rSges(6,2) + rSges(6,3) * t1082;
t1045 = -t1165 / 0.2e1;
t1041 = t1110 / 0.2e1;
t495 = pkin(4) * t929 + pkin(10) * t710;
t497 = pkin(4) * t930 + pkin(10) * t712;
t638 = -t782 * pkin(4) + pkin(10) * t783;
t1037 = -t1095 / 0.2e1;
t1036 = t1095 / 0.2e1;
t1035 = -t1094 / 0.2e1;
t1034 = t1094 / 0.2e1;
t1033 = -t1093 / 0.2e1;
t1032 = t1093 / 0.2e1;
t1031 = -t1092 / 0.2e1;
t727 = -qJD(3) * t827 - t1049 * t877;
t728 = qJD(3) * t826 + t1049 * t879;
t490 = rSges(4,1) * t728 + rSges(4,2) * t727 + rSges(4,3) * t1050;
t1030 = t873 * (-t490 - t816);
t637 = rSges(4,1) * t827 + rSges(4,2) * t826 - rSges(4,3) * t1165;
t1025 = (-t637 - t832) * t873;
t1024 = t91 * t1083;
t1023 = t604 * t491 - t492 * t605;
t1022 = t604 * t495 - t497 * t605;
t1021 = t771 * t492 - t604 * t636;
t1020 = t771 * t497 - t604 * t638;
t1019 = -t491 * t771 + t605 * t636;
t1018 = -t495 * t771 + t605 * t638;
t467 = t498 * t1050;
t1017 = -t639 * t793 + t467;
t721 = t723 * pkin(3);
t722 = t725 * pkin(3);
t1016 = t734 * t721 - t722 * t735;
t820 = -pkin(3) * t1078 + t866;
t1015 = -t721 * t835 + t735 * t820;
t1014 = t835 * t722 - t734 * t820;
t1013 = t823 * t167 + t793 * t270 + t1148;
t1012 = -t320 + t1075;
t1011 = -t546 + t1073;
t1010 = -t816 + t1072;
t1009 = -t441 + t1069;
t1008 = -t442 + t1067;
t1007 = t320 * t1169 + t319 * t1170 + t1123;
t1006 = t442 * t1169 + t441 * t1170 + t1117;
t1005 = -t640 + t1060;
t1004 = -t832 + t1059;
t1003 = t270 * t1165 - t425 * t961 + t1130;
t1002 = t606 + t1116;
t1001 = t607 + t1115;
t999 = t878 * t1041;
t836 = t867 * t1165;
t998 = -t1160 * t873 + t836;
t992 = -t816 + t1011;
t991 = -t832 + t1005;
t882 = 0.2e1 * qJDD(1);
t990 = 0.2e1 * t585 + 0.2e1 * t586 + 0.2e1 * t618 + 0.2e1 * t619 + t882;
t989 = Icges(4,1) * t879 - Icges(4,4) * t877;
t988 = Icges(4,4) * t879 - Icges(4,2) * t877;
t644 = Icges(3,5) * t790 - Icges(3,6) * t791;
t645 = -Icges(3,5) * t792 - Icges(3,6) * t793;
t646 = Icges(3,4) * t790 - Icges(3,2) * t791;
t647 = -Icges(3,4) * t792 - Icges(3,2) * t793;
t648 = Icges(3,1) * t790 - Icges(3,4) * t791;
t649 = -Icges(3,1) * t792 - Icges(3,4) * t793;
t985 = -(t1170 * t644 - t614 * t793 - t616 * t792 - t646 * t823 + t648 * t824) * t874 + (t1170 * t645 - t615 * t793 - t617 * t792 - t647 * t823 + t649 * t824) * t872;
t984 = -(t644 * t875 + (t646 * t880 + t648 * t878 + (-t614 * t878 + t616 * t880) * qJD(2)) * t873) * t874 + (t645 * t875 + (t647 * t880 + t649 * t878 + (-t615 * t878 + t617 * t880) * qJD(2)) * t873) * t872;
t982 = -(t1170 * t612 - t614 * t823 + t616 * t824) * t874 + (t1170 * t613 - t615 * t823 + t617 * t824) * t872;
t981 = -(t612 * t875 + (t614 * t880 + t616 * t878) * t873) * t874 + (t613 * t875 + (t615 * t880 + t617 * t878) * t873) * t872;
t620 = rSges(3,1) * t822 + rSges(3,2) * t961 - rSges(3,3) * t1169;
t621 = rSges(3,1) * t824 - rSges(3,2) * t823 + rSges(3,3) * t1170;
t980 = t620 * t872 + t621 * t874;
t650 = rSges(3,1) * t790 - rSges(3,2) * t791;
t651 = -rSges(3,1) * t792 - rSges(3,2) * t793;
t979 = t650 * t872 + t651 * t874;
t556 = t822 * rSges(4,3) - t1317 * t961;
t557 = t824 * rSges(4,3) + t1317 * t823;
t524 = rSges(5,1) * t997 - rSges(5,2) * t1173 + t822 * rSges(5,3);
t525 = -rSges(5,1) * t996 + rSges(5,2) * t1172 + t824 * rSges(5,3);
t376 = rSges(6,1) * t1056 - rSges(6,2) * t1177 + t710 * rSges(6,3);
t378 = rSges(6,1) * t1055 - rSges(6,2) * t1176 + t712 * rSges(6,3);
t500 = -rSges(6,1) * t1054 + rSges(6,2) * t1174 + t783 * rSges(6,3);
t975 = t685 * t869 - t833 * t858;
t972 = -t1143 * t793 + t1158 * t823 + t1148;
t971 = t167 * t1165 - t208 * t961 + t791 * t425 + t1065;
t970 = t306 * t1169 + t305 * t1170 + t1007;
t969 = t498 * t1169 + t496 * t1170 + t1006;
t968 = -t1127 * t961 - t1143 * t1165 + t1130;
t781 = rSges(3,3) * t875 + (rSges(3,1) * t878 + rSges(3,2) * t880) * t873;
t967 = -t1169 * t781 - t620 * t875;
t966 = -t1170 * t781 + t621 * t875;
t831 = (rSges(3,1) * t880 - rSges(3,2) * t878) * t873;
t809 = qJD(2) * t831;
t965 = -t1169 * t809 - t650 * t875;
t964 = -t1170 * t809 + t651 * t875;
t733 = rSges(4,3) * t1167 - t1165 * t1317;
t949 = t998 + t743;
t948 = t873 * t980;
t943 = (Icges(5,5) * t929 - Icges(5,6) * t710) * t605 + (Icges(5,5) * t930 - Icges(5,6) * t712) * t604 + (-Icges(5,5) * t782 - Icges(5,6) * t783) * t771;
t942 = (Icges(4,5) * t723 + Icges(4,6) * t962) * t735 + (Icges(4,5) * t725 - Icges(4,6) * t726) * t734 + (Icges(4,5) * t826 - Icges(4,6) * t827) * t835;
t941 = (-t1169 * t833 - t683 * t875) * qJD(2);
t937 = Icges(5,1) * t1043 - Icges(5,4) * t870;
t936 = Icges(5,4) * t1043 - Icges(5,2) * t870;
t934 = t497 + t1322;
t933 = t638 + t1319;
t932 = t378 + t497;
t931 = t500 + t638;
t925 = t1127 * t791 - t1155 * t961 + t1158 * t1165 + t1065;
t924 = 0.2e1 * t279 - 0.2e1 * t1175 + 0.2e1 * t292 - 0.2e1 * t1179 + t990;
t463 = -t683 + t1116;
t464 = -t685 + t1115;
t922 = t441 * t808 - t442 * t806 + t734 * t463 - t464 * t735 + t1118;
t920 = t653 * t869 + t686 * t868 + (-qJD(2) * t816 - qJDD(2) * t832) * t1170;
t919 = t495 + t721;
t918 = t270 * t1105 - t1106 * t272 + t460 * t376 - t378 * t461 + t1022;
t917 = t272 * t1104 - t1105 * t425 + t641 * t378 - t460 * t500 + t1020;
t916 = -t1104 * t270 + t425 * t1106 - t376 * t641 + t461 * t500 + t1018;
t910 = (Icges(5,1) * t930 - t1201 - t432) * t604 + (Icges(5,1) * t929 - t1202 - t431) * t605 + (-Icges(5,1) * t782 - t1200 - t579) * t771;
t909 = (Icges(5,2) * t712 - t434 - t693) * t604 + (Icges(5,2) * t710 - t433 - t692) * t605 + (Icges(5,2) * t783 - t580 + t765) * t771;
t908 = (Icges(4,1) * t725 - t1204 - t453) * t734 + (Icges(4,1) * t723 + t1205 - t452) * t735 + (Icges(4,1) * t826 - t1203 - t634) * t835;
t907 = (-Icges(4,2) * t726 + t455 + t720) * t734 + (Icges(4,2) * t962 + t454 + t719) * t735 + (-Icges(4,2) * t827 + t635 + t819) * t835;
t904 = 0.2e1 * t221 - 0.2e1 * t1178 + 0.2e1 * t243 - 0.2e1 * t1183 + t924;
t691 = t998 - t833;
t903 = t442 * t860 + t835 * t464 - t640 * t808 - t734 * t691 + t975;
t901 = (qJD(2) * t979 + qJDD(2) * t980) * t873;
t899 = t674 * t496 - t498 * t673 + t604 * t606 - t605 * t607 + t922;
t898 = -t441 * t860 - t835 * t463 + t640 * t806 + t735 * t691 + t941;
t897 = t835 * t320 + t750 * t442 - t734 * t546 - t588 * t640 + t920;
t896 = t930 * t1098 + t1104 * t1143 + t1106 * t1127 + t1319 * t461 - t1323 * t641 + t1018;
t895 = -t782 * t1098 - t1105 * t1143 - t1106 * t1141 - t1322 * t461 + t1323 * t460 + t1022;
t894 = t929 * t1098 + t1104 * t1141 - t1105 * t1127 - t1319 * t460 + t1322 * t641 + t1020;
t892 = t825 * t498 - t604 * t743 + t771 * t607 - t674 * t639 + t903;
t889 = -t825 * t496 + t605 * t743 - t771 * t606 + t673 * t639 + t898;
t888 = t771 * t306 - t443 * t639 - t604 * t456 + t658 * t498 + t897;
t106 = t183 * t605 + t184 * t604 + t212 * t771;
t98 = t175 * t605 + t176 * t604 + t194 * t771;
t99 = t177 * t605 + t178 * t604 + t195 * t771;
t883 = (t712 * t910 + t823 * t943 - t909 * t930) * t1239 + ((t1109 * t1292 - t1301 * t880) * t873 + t1307 * t823 - t1308 * t961 + t1295 * t793 + t1296 * t791) * t1234 + ((t1109 * t1293 - t1302 * t880) * t873 + t1309 * t823 - t1310 * t961 + t1297 * t793 + t1298 * t791) * t1248 + ((t1109 * t1294 - t1303 * t880) * t873 + t1311 * t823 - t1312 * t961 + t1299 * t793 + t1300 * t791) * t1246 + (-t1318 * t930 + (t1277 * t712 + t1320 * t573 + t1321 * t956) * t641 + (t1288 * t712 + t1325 * t573 + t1327 * t956) * t461 + (t1287 * t712 + t1324 * t573 + t1326 * t956) * t460 + (t1293 * t783 + t1297 * t712 + t1298 * t710) * qJD(5)) * t1249 + (-t1165 * t1293 + t1297 * t823 - t1298 * t961) * t1254 + (-t1318 * t929 + (t1277 * t710 + t1320 * t571 + t1321 * t957) * t641 + (t1288 * t710 + t1325 * t571 + t1327 * t957) * t461 + (t1287 * t710 + t1324 * t571 + t1326 * t957) * t460 + (t1294 * t783 + t1299 * t712 + t1300 * t710) * qJD(5)) * t1247 + (-t1165 * t1294 + t1299 * t823 - t1300 * t961) * t1253 + t1330 * t1045 + t1331 * t1217 + t1332 * t1218 + (t1318 * t782 + (t1277 * t783 + t1320 * t714 + t1321 * t946) * t641 + (t1288 * t783 + t1325 * t714 + t1327 * t946) * t461 + (t1287 * t783 + t1324 * t714 + t1326 * t946) * t460 + (t1292 * t783 + t1295 * t712 + t1296 * t710) * qJD(5)) * t1235 + (-t1165 * t1292 + t1295 * t823 - t1296 * t961) * t1252 + (-t1165 * t943 + t782 * t909 + t783 * t910) * t1223 + (t106 + t1304) * t999 + (t99 + t1305) * t1219 + (t98 + t1306) * t1220 + (t710 * t910 - t909 * t929 - t943 * t961) * t1237 + (-t1165 * t212 - t183 * t961 + t184 * t823) * t1233 + (-t101 * t961 + t102 * t823 + t175 * t791 + t176 * t793 + (t1109 * t194 - t122 * t880) * t873) * t1236 + (-t103 * t961 + t104 * t823 + t177 * t791 + t178 * t793 + (t1109 * t195 - t123 * t880) * t873) * t1238 + (-t1165 * t194 - t175 * t961 + t176 * t823) * t1250 + (-t1165 * t195 - t177 * t961 + t178 * t823) * t1251 + (-t110 * t961 + t111 * t823 + t183 * t791 + t184 * t793 + (t1109 * t212 - t135 * t880) * t873) * t1222 + t1106 * t1339 + t1105 * t1340 + t1104 * t1341;
t796 = qJD(2) * t830;
t795 = (Icges(3,4) * t880 - Icges(3,2) * t878) * t1110;
t732 = t1048 * t870 + t825;
t731 = (Icges(4,5) * t878 + t880 * t989) * t873;
t730 = (Icges(4,6) * t878 + t880 * t988) * t873;
t718 = -rSges(5,2) * t1082 + t1112;
t717 = (Icges(5,5) * t878 + t880 * t937) * t873;
t716 = (Icges(5,6) * t878 + t880 * t936) * t873;
t690 = rSges(4,1) * t826 - rSges(4,2) * t827;
t682 = -rSges(3,1) * t823 - rSges(3,2) * t824;
t681 = rSges(3,1) * t961 - rSges(3,2) * t822;
t676 = -Icges(3,5) * t823 - Icges(3,6) * t824;
t675 = Icges(3,5) * t961 - Icges(3,6) * t822;
t633 = Icges(4,5) * t827 + Icges(4,6) * t826 - Icges(4,3) * t1165;
t554 = -t1103 * t823 + t674;
t553 = t1103 * t961 + t673;
t552 = Icges(4,5) * t824 - t823 * t989;
t551 = Icges(4,5) * t822 + t961 * t989;
t550 = Icges(4,6) * t824 - t823 * t988;
t549 = Icges(4,6) * t822 + t961 * t988;
t534 = rSges(4,1) * t725 - rSges(4,2) * t726;
t533 = rSges(4,1) * t723 + rSges(4,2) * t962;
t523 = Icges(5,5) * t824 - t823 * t937;
t522 = Icges(5,5) * t822 + t937 * t961;
t521 = Icges(5,6) * t824 - t823 * t936;
t520 = Icges(5,6) * t822 + t936 * t961;
t510 = rSges(6,1) * t946 - rSges(6,2) * t714;
t477 = Icges(4,1) * t728 + Icges(4,4) * t727 + Icges(4,5) * t1050;
t476 = Icges(4,4) * t728 + Icges(4,2) * t727 + Icges(4,6) * t1050;
t475 = Icges(4,5) * t728 + Icges(4,6) * t727 + Icges(4,3) * t1050;
t466 = t967 * qJD(2);
t465 = t966 * qJD(2);
t462 = t776 * t875 + (t777 * t880 + t778 * t878) * t873;
t451 = Icges(4,5) * t726 + Icges(4,6) * t725 + Icges(4,3) * t823;
t450 = -Icges(4,5) * t962 + Icges(4,6) * t723 - Icges(4,3) * t961;
t400 = t442 * t1050;
t399 = t439 * t1050;
t395 = t1170 * t776 - t777 * t823 + t778 * t824;
t392 = t823 * t441;
t391 = t823 * t438;
t388 = qJD(2) * t948 + qJD(1);
t340 = rSges(6,1) * t956 - rSges(6,2) * t573;
t336 = rSges(6,1) * t957 - rSges(6,2) * t571;
t312 = t794 * t875 + (t795 * t880 + t796 * t878 + (-t777 * t878 + t778 * t880) * qJD(2)) * t873;
t302 = Icges(4,1) * t577 + Icges(4,4) * t576 + Icges(4,5) * t793;
t301 = Icges(4,1) * t575 + Icges(4,4) * t574 + Icges(4,5) * t791;
t300 = Icges(4,4) * t577 + Icges(4,2) * t576 + Icges(4,6) * t793;
t299 = Icges(4,4) * t575 + Icges(4,2) * t574 + Icges(4,6) * t791;
t298 = Icges(4,5) * t577 + Icges(4,6) * t576 + Icges(4,3) * t793;
t297 = Icges(4,5) * t575 + Icges(4,6) * t574 + Icges(4,3) * t791;
t237 = t272 * t1050;
t232 = -t1165 * t633 + t634 * t826 + t635 * t827;
t223 = t1170 * t794 - t777 * t793 - t778 * t792 - t795 * t823 + t796 * t824;
t211 = t633 * t823 + t634 * t725 + t635 * t726;
t210 = -t633 * t961 + t634 * t723 - t635 * t962;
t200 = -t458 * t835 + t637 * t735 + t940;
t199 = t459 * t835 - t637 * t734 + t974;
t191 = -t1165 * t451 + t453 * t826 + t455 * t827;
t190 = -t1165 * t450 + t452 * t826 + t454 * t827;
t185 = t458 * t734 - t459 * t735 + t1044;
t182 = t451 * t823 + t453 * t725 + t455 * t726;
t181 = t450 * t823 + t452 * t725 + t454 * t726;
t180 = -t451 * t961 + t453 * t723 - t455 * t962;
t179 = -t450 * t961 + t452 * t723 - t454 * t962;
t144 = -t438 * t771 + t581 * t605 + t915;
t143 = t439 * t771 - t581 * t604 + t923;
t142 = t476 * t826 + t477 * t827 + t634 * t727 + t635 * t728 + (t1109 * t633 - t475 * t880) * t873;
t137 = t475 * t823 + t476 * t725 + t477 * t726 + t576 * t634 + t577 * t635 + t633 * t793;
t136 = -t475 * t961 + t476 * t723 - t477 * t962 + t574 * t634 + t575 * t635 + t633 * t791;
t134 = -t303 * t835 - t458 * t750 + t490 * t735 + t589 * t637 + t900;
t133 = t304 * t835 + t459 * t750 - t490 * t734 - t588 * t637 + t920;
t132 = t438 * t604 - t439 * t605 + t947;
t121 = t300 * t826 + t302 * t827 + t453 * t727 + t455 * t728 + (t1109 * t451 - t298 * t880) * t873;
t120 = t299 * t826 + t301 * t827 + t452 * t727 + t454 * t728 + (t1109 * t450 - t297 * t880) * t873;
t119 = t978 + t1268;
t118 = -t270 * t641 + t425 * t461 + t902;
t116 = t190 * t735 + t191 * t734 + t232 * t835;
t115 = t298 * t823 + t300 * t725 + t302 * t726 + t451 * t793 + t453 * t576 + t455 * t577;
t114 = t297 * t823 + t299 * t725 + t301 * t726 + t450 * t793 + t452 * t576 + t454 * t577;
t113 = -t298 * t961 + t300 * t723 - t302 * t962 + t451 * t791 + t453 * t574 + t455 * t575;
t112 = -t297 * t961 + t299 * t723 - t301 * t962 + t450 * t791 + t452 * t574 + t454 * t575;
t108 = t181 * t735 + t182 * t734 + t211 * t835;
t107 = t179 * t735 + t180 * t734 + t210 * t835;
t93 = -t254 * t771 + t426 * t605 - t438 * t658 + t444 * t581 + t891;
t92 = t255 * t771 - t426 * t604 + t439 * t658 - t443 * t581 + t897;
t81 = -t1184 + t1185 - t1188 + t906 + t1189;
t42 = -t167 * t641 + t208 * t461 + t216 * t425 - t270 * t396 + t885;
t41 = t169 * t641 - t208 * t460 - t215 * t425 + t272 * t396 + t888;
t40 = t120 * t735 + t121 * t734 + t835 * t142 + t190 * t589 + t191 * t588 + t750 * t232;
t37 = t114 * t735 + t115 * t734 + t137 * t835 + t181 * t589 + t182 * t588 + t211 * t750;
t36 = t112 * t735 + t113 * t734 + t136 * t835 + t179 * t589 + t180 * t588 + t210 * t750;
t30 = qJD(6) * t280 - qJDD(6) * t957 - t1127 * t215 + t1141 * t396 - t1155 * t460 + t1157 * t641 + t888;
t1 = [m(2) * qJDD(1) + (-0.2e1 * t1184 + 0.2e1 * t1185 - 0.2e1 * t1188 + t924 + 0.2e1 * t1189) * t1257 + (-0.2e1 * t1190 + 0.2e1 * t1191 - 0.2e1 * t1192 + t904 + 0.2e1 * t1193) * t1256 + (-m(2) - m(5) - m(6) - m(7)) * g(3) + (t882 / 0.2e1 - g(3) + t901) * m(3) + (t990 / 0.2e1 - g(3) + t1268) * m(4) + (-0.2e1 * t1090 + 0.2e1 * t1102 + t904 + 0.2e1 * t1269) * t1255; -(t875 ^ 2 * t794 + (((t1119 * t872 - t1120 * t874) * t880 + (t1121 * t872 - t1122 * t874) * t878) * t873 + (t1113 * t880 + t1114 * t878 - t675 * t874 + t676 * t872) * t875) * t1110) * t869 / 0.2e1 + (t1294 * t732 + (t1173 * t1277 + t1273 * t571 - t1274 * t929 - t1275 * t957 + t1276 * t623 + t1278 * t622) * t641 + t1299 * t554 + t1300 * t553 + (t1173 * t1288 + t1280 * t571 - t1282 * t929 - t1284 * t957 + t1286 * t623 + t1290 * t622) * t461 + (t1173 * t1287 + t1279 * t571 - t1281 * t929 - t1283 * t957 + t1285 * t623 + t1289 * t622) * t460) * t1247 + (t118 * (-t270 * t732 - t359 * t641 + t425 * t553 + t461 * t544 + t889) + t117 * (t272 * t732 + t361 * t641 - t425 * t554 - t460 * t544 + t892) + t100 * (t270 * t554 - t272 * t553 + t359 * t460 - t361 * t461 + t899)) * t1033 + (t144 * (-t438 * t825 - t524 * t771 + t581 * t673 + t605 * t718 + t898) + t143 * (t439 * t825 + t525 * t771 - t581 * t674 - t604 * t718 + t903) + t132 * (t438 * t674 - t439 * t673 + t524 * t604 - t525 * t605 + t922)) * t1035 + (t1292 * t875 + (t1295 * t872 - t1296 * t874) * t873) * t1252 + (t1293 * t875 + (t1297 * t872 - t1298 * t874) * t873) * t1254 + (t1294 * t875 + (t1299 * t872 - t1300 * t874) * t873) * t1253 + (t1293 * t732 + (-t1172 * t1277 + t1273 * t573 - t1274 * t930 - t1275 * t956 + t1276 * t625 + t1278 * t624) * t641 + t1297 * t554 + t1298 * t553 + (-t1172 * t1288 + t1280 * t573 - t1282 * t930 - t1284 * t956 + t1286 * t625 + t1290 * t624) * t461 + (-t1172 * t1287 + t1279 * t573 - t1281 * t930 - t1283 * t956 + t1285 * t625 + t1289 * t624) * t460) * t1249 + (t1292 * t732 + (t1082 * t1277 + t1273 * t714 + t1274 * t782 - t1275 * t946 + t1276 * t749 + t1278 * t748) * t641 + t1295 * t554 + t1296 * t553 + (t1082 * t1288 + t1280 * t714 + t1282 * t782 - t1284 * t946 + t1286 * t749 + t1290 * t748) * t461 + (t1082 * t1287 + t1279 * t714 + t1281 * t782 - t1283 * t946 + t1285 * t749 + t1289 * t748) * t460) * t1235 + (t1302 * t875 + (t1309 * t872 - t1310 * t874) * t873) * t1248 + (t1303 * t875 + (t1311 * t872 - t1312 * t874) * t873) * t1246 - (t466 * (-t1169 * t831 - t681 * t875) + t465 * (-t1170 * t831 + t682 * t875) + t388 * (t1169 * t682 + t1170 * t681)) * qJD(2) * t1096 / 0.2e1 + (t212 * t875 + (-t183 * t874 + t184 * t872) * t873) * t1233 + (t122 * t875 + (-t101 * t874 + t102 * t872) * t873) * t1236 + (t123 * t875 + (-t103 * t874 + t104 * t872) * t873) * t1238 + (t210 * t875 + (-t179 * t874 + t180 * t872) * t873) * t1240 + (t211 * t875 + (-t181 * t874 + t182 * t872) * t873) * t1241 + (t874 * ((t1119 * t961 + t1121 * t822 - t1169 * t676) * t1170 - (t1120 * t961 + t1122 * t822 - t1169 * t675) * t1169 + (t1113 * t961 + t1114 * t822 - t1169 * t828) * t875) / 0.2e1 - t872 * ((-t1119 * t823 + t1121 * t824 + t1170 * t676) * t1170 - (-t1120 * t823 + t1122 * t824 + t1170 * t675) * t1169 + (-t1113 * t823 + t1114 * t824 + t1170 * t828) * t875) / 0.2e1) * t873 * qJD(2) ^ 2 + (t1301 * t875 + (t1307 * t872 - t1308 * t874) * t873) * t1234 + (t41 * t1316 + t1064 * t1258 + t969 * t1263 + t970 * t1259 + (t42 * (-t684 + t1068) + t118 * (-t167 + t1063) + t41 * t272 + t117 * t169) * t1085 + ((t100 * t169 + t1004 * t42 + t1010 * t118 + t39 * t272) * t1086 + (t100 * t167 + t1004 * t41 + t1010 * t117 + t39 * t270) * t1087) * t873) * t1256 + (t30 * t1316 + t1064 * t1261 + t969 * t1265 + t970 * t1262 + (t31 * (-t684 + t1009) + t91 * (t1063 - t1158) + t30 * t1141 + t90 * t1157) * t1085 + ((t1141 * t23 + t1157 * t82 + t31 * t991 + t91 * t992) * t1086 + (-t1143 * t23 + t1158 * t82 + t30 * t991 + t90 * t992) * t1087) * t873) * t1255 + ((t550 * t826 + t552 * t827) * t734 + (t549 * t826 + t551 * t827) * t735 + (t730 * t826 + t731 * t827) * t835 + (t190 * t822 + t191 * t824) * qJD(3) + ((qJD(3) * t232 + t450 * t735 + t451 * t734 + t633 * t835) * t878 - t890 * t880) * t873) * t1216 + ((-t782 * t521 + t783 * t523) * t604 + t184 * t674 + (-t782 * t520 + t783 * t522) * t605 + t183 * t673 + (-t782 * t716 + t783 * t717) * t771 + t212 * t825 + ((t429 * t605 + t430 * t604 + t578 * t771) * t878 + t1266 * t880) * t873) * t1223 + (t200 * (-t556 * t835 + t733 * t735 + (-t1167 * t458 + t637 * t822) * qJD(3) + t941) + t199 * (t557 * t835 - t733 * t734 + (t1167 * t459 - t637 * t824) * qJD(3) + t975) + t185 * (t556 * t734 - t557 * t735 + (t458 * t824 - t459 * t822) * qJD(3) + t1118)) * t1037 - m(5) * (g(1) * (t525 + t1115) + g(2) * (t524 + t1116) + g(3) * (t836 + (-rSges(5,2) * t870 * t880 - t1160) * t873 + t1112)) + (t91 * (qJD(6) * t624 + t1124 * t461 + t1127 * t553 + t1137 * t641 + t1143 * t732 + t889) + t90 * (qJD(6) * t622 - t1124 * t460 - t1127 * t554 + t1136 * t641 + t1141 * t732 + t892) + t82 * (qJD(6) * t748 - t1136 * t461 - t1137 * t460 - t1141 * t553 - t1143 * t554 + t899)) * t1031 - m(7) * (g(1) * (t1001 + t1136) + g(2) * (t1002 - t1137) + g(3) * (t949 + t1124)) + ((qJD(2) * t312 + qJDD(2) * t462) * t875 + (qJD(2) * t984 + qJDD(2) * t981) * t873 + t40 + t1330) * t875 / 0.2e1 + ((qJD(2) * t223 + qJDD(2) * t395) * t875 + (qJD(2) * t985 + qJDD(2) * t982) * t873 + t37 + t1331) * t1170 / 0.2e1 - (t36 + t1267 * qJDD(2) + 0.2e1 * ((-t1169 * t794 - t777 * t791 + t778 * t790 + t795 * t961 + t796 * t822) * t875 + t873 * (-(-t1169 * t644 - t614 * t791 + t616 * t790 + t646 * t961 + t648 * t822) * t874 + (-t1169 * t645 - t615 * t791 + t617 * t790 + t647 * t961 + t649 * t822) * t872)) * qJD(2) + t1332) * t1169 / 0.2e1 + (t134 * ((-t458 - t684) * t875 + t874 * t1025) + t200 * ((-t303 - t652) * t875 + t874 * t1030) + t133 * (t1025 * t872 + t459 * t875 + t657) + t199 * (t1030 * t872 + t304 * t875 + t603) + t119 * ((t458 * t872 + t459 * t874) * t873 + t1117) + t185 * ((t303 * t872 + t304 * t874) * t873 + t1123)) * t1036 - m(4) * (g(1) * (t557 + t685) + g(2) * (t556 + t683) + g(3) * (t733 + t833)) + (t312 * t875 + t873 * t984) * t869 / 0.2e1 - t108 * t808 / 0.2e1 - t107 * t806 / 0.2e1 + ((qJD(2) * t965 + qJDD(2) * t967) * t967 + t466 * t965 + (qJD(2) * t964 + qJDD(2) * t966) * t966 + t465 * t964 + (qJDD(1) + t901) * t948 + t388 * t979 * t873) * t1096 / 0.2e1 + (t462 * t875 + t873 * t981) * t868 / 0.2e1 - t1267 * t1042 / 0.2e1 + (0.2e1 * t92 * t1135 + 0.2e1 * t143 * t1146 + 0.2e1 * t81 * t1006 + 0.2e1 * t132 * t1007 + (t93 * (-t684 + t1132) + t144 * (-t254 + t1145) + t92 * t439 + t143 * t255) * t1085 + ((t1057 * t93 + t1058 * t144 + t132 * t255 + t81 * t439) * t1086 + (t1057 * t92 + t1058 * t143 + t132 * t254 + t81 * t438) * t1087) * t873) * t1257 + (t194 * t875 + (-t175 * t874 + t176 * t872) * t873) * t1250 + (t195 * t875 + (-t177 * t874 + t178 * t872) * t873) * t1251 + t872 * (t223 * t875 + t873 * t985) * t1041 + (t135 * t875 + (-t110 * t874 + t111 * t872) * t873) * t1222 + (t232 * t875 + (-t190 * t874 + t191 * t872) * t873) * t1224 + (t136 * t875 + (-t112 * t874 + t113 * t872) * t873) * t1225 + (t137 * t875 + (-t114 * t874 + t115 * t872) * t873) * t1227 + ((t451 * t824 + t550 * t725 + t552 * t726) * t734 + (t450 * t824 + t549 * t725 + t551 * t726) * t735 + (t633 * t824 + t725 * t730 + t726 * t731) * t835 + (t1167 * t211 + t181 * t822 + t182 * t824) * qJD(3) + t890 * t823) * t1228 + (t142 * t875 + (-t120 * t874 + t121 * t872) * t873) * t1215 - m(6) * (g(1) * (t1001 + t361) + g(2) * (t1002 + t359) + g(3) * (t949 + t544)) - t116 * t860 / 0.2e1 + (t395 * t875 + t873 * t982) * t856 / 0.2e1 + ((t824 * t430 + t521 * t930 + t712 * t523) * t604 + t178 * t674 + (t824 * t429 + t520 * t930 + t712 * t522) * t605 + t177 * t673 + (t824 * t578 + t712 * t717 + t716 * t930) * t771 + t195 * t825 - t1266 * t823) * t1239 + ((t822 * t430 + t521 * t929 + t710 * t523) * t604 + t176 * t674 + (t822 * t429 + t520 * t929 + t710 * t522) * t605 + t175 * t673 + (t822 * t578 + t710 * t717 + t716 * t929) * t771 + t194 * t825 + t1266 * t961) * t1237 + ((t451 * t822 + t550 * t723 - t552 * t962) * t734 + (t450 * t822 + t549 * t723 - t551 * t962) * t735 + (t633 * t822 + t723 * t730 - t731 * t962) * t835 + (t1167 * t210 + t179 * t822 + t180 * t824) * qJD(3) - t890 * t961) * t1226 - t673 * t98 / 0.2e1 - t674 * t99 / 0.2e1 - m(3) * (g(1) * t682 + g(2) * t681 + g(3) * t831) - t825 * t106 / 0.2e1 + t553 * t1339 + t554 * t1340 + t732 * t1341; (t118 * (t1015 + t916) + t117 * (t1014 + t917) + t100 * (t1016 + t918)) * t1033 + (t144 * (t1015 + t1019) + t143 * (t1014 + t1021) + t132 * (t1016 + t1023)) * t1035 - m(6) * (g(1) * (t722 + t932) + g(2) * (t376 + t919) + g(3) * (t820 + t931)) + (t91 * (t1015 + t896) + t90 * (t1014 + t894) + t82 * (t1016 + t895)) * t1031 + (t200 * (-t533 * t835 + t690 * t735) + t199 * (t534 * t835 - t690 * t734) + t185 * (t533 * t734 - t534 * t735)) * t1037 - m(5) * (g(1) * (t722 + t492) + g(2) * (t721 + t491) + g(3) * (t820 + t636)) - m(7) * (g(1) * (t722 + t934) + g(2) * (t919 + t1323) + g(3) * (t820 + t933)) + ((t968 + t1138) * t1264 + (t925 + t1062) * t1260 + (t392 + t1071) * t1265 - (t1008 * t23 + t1012 * t82) * t1089 + (t1005 * t30 + t1011 * t90) * t1088 + (t1009 * t1024 + (t1008 * t30 + t1012 * t90) * t1084) * t873 + (t1008 * t791 + t1147 + t972) * t1262 + (t1005 * t793 + t1291 + t400 + t467) * t1261) * t1255 + (-t1165 * t942 + t826 * t907 + t827 * t908) * t1216 + t37 * t1217 + t36 * t1218 + t108 * t1219 + t107 * t1220 + (t725 * t907 + t726 * t908 + t823 * t942) * t1228 + (t723 * t907 - t908 * t962 - t942 * t961) * t1226 + (-t1165 * t210 - t179 * t961 + t180 * t823) * t1240 + (-t1165 * t211 - t181 * t961 + t182 * t823) * t1241 + (t93 * (t1126 + t1138) + t144 * (t1050 * t1132 + t1062 + t1070) + t92 * (t1125 * t823 + t1131 * t1165) + t143 * (t1125 * t793 + t1133 * t823 + t1151 * t1165 + t399 + t400) + t81 * (-t1131 * t961 + t391 + t392) + t132 * (t1131 * t791 - t1151 * t961 + t1147 + t1153)) * t1034 + (t134 * (t1165 * t458 - t637 * t961) + t200 * (-t490 * t961 + t637 * t791 + (-t1109 * t458 + t303 * t880) * t873) + t133 * (-t1165 * t459 - t637 * t823) + t199 * (-t490 * t823 - t637 * t793 + (t1109 * t459 - t304 * t880) * t873) + t119 * (t458 * t823 + t459 * t961) + t185 * (t303 * t823 + t304 * t961 + t458 * t793 - t459 * t791)) * t1036 + (-t1165 * t232 - t190 * t961 + t191 * t823) * t1224 + (-t112 * t961 + t113 * t823 + t179 * t791 + t180 * t793 + (t1109 * t210 - t136 * t880) * t873) * t1225 + (-t114 * t961 + t115 * t823 + t181 * t791 + t182 * t793 + (t1109 * t211 - t137 * t880) * t873) * t1227 + (-t120 * t961 + t121 * t823 + t190 * t791 + t191 * t793 + (t1109 * t232 - t142 * t880) * t873) * t1215 + t40 * t1045 + t883 - m(4) * (g(1) * t534 + g(2) * t533 + g(3) * t690) + t116 * t999 + (0.2e1 * t42 * (t1003 + t1138) + 0.2e1 * t118 * (t971 + t1062) + (t1017 + t237 + t400 + (-t425 - t640) * t793) * t1258 + (t392 + t1152) * t1263 + (t1013 + t1147 - t1180 + (-t272 - t442) * t791) * t1259 - (t100 * t1074 + t1066 * t39) * t1089 + (t1059 * t41 + t1072 * t117) * t1088 + (t118 * t1068 * t1083 + (t1066 * t41 + t1074 * t117) * t1084) * t873) * t1256; (t42 * t1003 + t118 * (t1050 * t1150 + t971) + t41 * (t1134 * t823 + t1149 * t1165) + t117 * (t1134 * t793 + t1154 * t823 + t1156 * t1165 + t237 + t467) + t39 * (-t1149 * t961 + t1152) + t100 * (t1149 * t791 - t1156 * t961 + t1013)) * t1032 + (t93 * t1126 + t144 * (-t1050 * t438 + t1070) + t92 * (-t1165 * t439 - t581 * t823) + t143 * (-t1165 * t255 - t426 * t823 - t581 * t793 + t399) + t81 * (t439 * t961 + t391) + t132 * (t255 * t961 - t439 * t791 + t1153)) * t1034 + (t1019 * t144 + t1021 * t143 + t1023 * t132) * t1035 + (t82 * t895 + t894 * t90 + t896 * t91) * t1031 + t883 + (t100 * t918 + t117 * t917 + t118 * t916) * t1033 - m(5) * (g(1) * t492 + g(2) * t491 + g(3) * t636) - m(6) * (g(1) * t932 + g(2) * (t376 + t495) + g(3) * t931) - m(7) * (g(1) * t934 + g(2) * (t495 + t1323) + g(3) * t933) + (t968 * t1264 + t925 * t1260 + (-t1127 * t793 + t1017 + t1291) * t1261 + t1071 * t1265 + (-t1141 * t791 - t1180 + t972) * t1262 - (t1067 * t23 + t1075 * t82) * t1089 + (t1060 * t30 + t1073 * t90) * t1088 + (t1069 * t1024 + (t1067 * t30 + t1075 * t90) * t1084) * t873) * t1255; (t42 * (-t270 * t782 - t425 * t929) + t118 * (-t167 * t782 - t208 * t929 - t270 * t659 + t425 * t514) + t41 * (t272 * t782 + t425 * t930) + t117 * (t169 * t782 + t208 * t930 + t272 * t659 - t425 * t516) + t39 * (-t270 * t930 + t272 * t929) + t100 * (-t167 * t930 + t169 * t929 + t270 * t516 - t272 * t514)) * t1032 + (t118 * (-t336 * t641 + t461 * t510) + t117 * (t340 * t641 - t460 * t510) + t100 * (t336 * t460 - t340 * t461)) * t1033 + (t31 * (-t1127 * t929 + t1143 * t782) + t91 * (t1127 * t514 + t1143 * t659 - t1155 * t929 - t1158 * t782) + t30 * (t1127 * t930 + t1141 * t782) + t90 * (-t1127 * t516 + t1141 * t659 + t1155 * t930 + t1157 * t782) + t23 * (t1141 * t929 + t1143 * t930) + t82 * (-t1141 * t514 - t1143 * t516 + t1157 * t929 - t1158 * t930)) * t1092 / 0.2e1 - m(7) * (g(1) * t1142 + g(2) * t1144 + g(3) * t1128) + (t91 * (qJD(6) * t573 + t1128 * t461 - t1144 * t641) + t90 * (qJD(6) * t571 - t1128 * t460 + t1142 * t641) + t82 * (qJD(6) * t714 - t1142 * t461 + t1144 * t460)) * t1031 - m(6) * (g(1) * t340 + g(2) * t336 + g(3) * t510) + (t1293 * t782 - t1297 * t930 - t1298 * t929) * t1254 + (t1294 * t782 - t1299 * t930 - t1300 * t929) * t1253 + (t1292 * t782 - t1295 * t930 - t1296 * t929) * t1252 + (-t1270 * t930 + t1271 * t573 - t1272 * t956) * t1249 + (t1293 * t659 + t1297 * t516 + t1298 * t514 + t1302 * t782 - t1309 * t930 - t1310 * t929) * t1248 + (-t1270 * t929 + t1271 * t571 - t1272 * t957) * t1247 + (t1294 * t659 + t1299 * t516 + t1300 * t514 + t1303 * t782 - t1311 * t930 - t1312 * t929) * t1246 + t1306 * t514 / 0.2e1 + t1305 * t516 / 0.2e1 + (t1270 * t782 + t1271 * t714 - t1272 * t946) * t1235 + (t1292 * t659 + t1295 * t516 + t1296 * t514 + t1301 * t782 - t1307 * t930 - t1308 * t929) * t1234 + t1304 * t659 / 0.2e1 - t1315 * t929 / 0.2e1 - t1314 * t930 / 0.2e1 + t1313 * t782 / 0.2e1; (t90 * t280 + t91 * t282 + t82 * t445 - (t460 * t90 - t461 * t91 - g(3) + t23) * t946 - (t461 * t82 - t641 * t90 - g(1) + t31) * t956 - (-t460 * t82 + t641 * t91 - g(2) + t30) * t957) * m(7);];
tau  = t1;
