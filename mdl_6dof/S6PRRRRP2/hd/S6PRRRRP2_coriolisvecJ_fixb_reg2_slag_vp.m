% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6PRRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6PRRRRP2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:04:20
% EndTime: 2019-03-09 00:04:35
% DurationCPUTime: 5.66s
% Computational Cost: add. (8918->502), mult. (22159->635), div. (0->0), fcn. (16692->10), ass. (0->270)
t189 = sin(qJ(2));
t184 = sin(pkin(6));
t293 = qJD(1) * t184;
t269 = t189 * t293;
t188 = sin(qJ(3));
t287 = qJD(3) * t188;
t215 = pkin(3) * t287 - t269;
t191 = cos(qJ(3));
t351 = cos(qJ(4));
t261 = t351 * qJD(3);
t247 = t191 * t261;
t260 = t351 * qJD(4);
t282 = qJD(3) + qJD(4);
t187 = sin(qJ(4));
t301 = t187 * t188;
t121 = -t191 * t260 + t282 * t301 - t247;
t300 = t187 * t191;
t154 = t351 * t188 + t300;
t122 = t282 * t154;
t373 = -pkin(4) * t122 - pkin(10) * t121 - t215;
t352 = -pkin(9) - pkin(8);
t273 = qJD(3) * t352;
t156 = t188 * t273;
t270 = t351 * t191;
t222 = t270 - t301;
t192 = cos(qJ(2));
t268 = t192 * t293;
t164 = t352 * t188;
t165 = t352 * t191;
t357 = t351 * t164 + t187 * t165;
t362 = -qJD(4) * t357 - t351 * t156 + t222 * t268 - t273 * t300;
t190 = cos(qJ(5));
t284 = qJD(5) * t190;
t290 = qJD(2) * t188;
t264 = t187 * t290;
t148 = -qJD(2) * t270 + t264;
t312 = t148 * t190;
t372 = t284 + t312;
t150 = t154 * qJD(2);
t186 = sin(qJ(5));
t130 = t150 * t186 - t190 * t282;
t132 = t190 * t150 + t186 * t282;
t315 = t132 * t190;
t317 = t130 * t186;
t212 = t261 + t260;
t208 = t191 * t212;
t283 = qJD(2) * qJD(3);
t258 = t188 * t283;
t295 = qJD(4) * t264 + t187 * t258;
t199 = -qJD(2) * t208 + t295;
t197 = t186 * t199;
t76 = qJD(5) * t132 - t197;
t338 = t190 * t76;
t252 = qJD(5) * t282;
t285 = qJD(5) * t186;
t75 = t150 * t285 + (t199 - t252) * t190;
t340 = t186 * t75;
t371 = t154 * (qJD(5) * (-t315 + t317) - t338 + t340) + (t130 * t190 + t132 * t186) * t121;
t144 = qJD(5) + t148;
t254 = t132 * t144;
t319 = t130 * t144;
t9 = t186 * (t76 + t254) + t190 * (t75 + t319);
t112 = t122 * qJD(2);
t326 = qJ(6) * t112;
t185 = cos(pkin(6));
t303 = t185 * t191;
t171 = qJD(1) * t303;
t158 = qJD(2) * pkin(8) + t269;
t256 = pkin(9) * qJD(2) + t158;
t235 = t256 * t188;
t126 = t171 - t235;
t120 = qJD(3) * pkin(3) + t126;
t292 = qJD(1) * t188;
t267 = t185 * t292;
t127 = t191 * t256 + t267;
t286 = qJD(4) * t187;
t291 = qJD(2) * t184;
t259 = qJD(1) * t291;
t246 = t192 * t259;
t296 = qJD(3) * t171 + t191 * t246;
t98 = -qJD(3) * t235 + t296;
t99 = -qJD(3) * t127 - t188 * t246;
t25 = t120 * t260 - t127 * t286 + t187 * t99 + t351 * t98;
t145 = pkin(3) * t258 + t189 * t259;
t62 = t112 * pkin(4) + pkin(10) * t199 + t145;
t119 = t351 * t127;
t79 = t187 * t120 + t119;
t71 = pkin(10) * t282 + t79;
t180 = -pkin(3) * t191 - pkin(2);
t142 = qJD(2) * t180 - t268;
t95 = pkin(4) * t148 - pkin(10) * t150 + t142;
t6 = t186 * t62 + t190 * t25 + t95 * t284 - t285 * t71;
t2 = qJD(6) * t144 + t326 + t6;
t257 = t186 * t25 - t190 * t62 + t71 * t284 + t95 * t285;
t349 = pkin(5) * t112;
t4 = t257 - t349;
t370 = t4 * t186 + t2 * t190;
t322 = t112 * t190;
t369 = (t144 * t285 - t322) * pkin(10);
t339 = t187 * t98;
t97 = t351 * t99;
t26 = qJD(4) * t79 + t339 - t97;
t118 = t187 * t127;
t78 = t351 * t120 - t118;
t70 = -pkin(4) * t282 - t78;
t368 = t26 * t186 + t70 * t284;
t115 = -pkin(4) * t222 - pkin(10) * t154 + t180;
t135 = t187 * t164 - t351 * t165;
t332 = -t115 * t284 + t135 * t285 + t186 * t373 + t362 * t190;
t42 = t186 * t95 + t190 * t71;
t29 = qJ(6) * t144 + t42;
t45 = t130 * pkin(5) - t132 * qJ(6) + t70;
t367 = -t29 * t150 - t45 * t312;
t8 = t76 * pkin(5) + t75 * qJ(6) - t132 * qJD(6) + t26;
t366 = -t8 * t190 + t45 * t285;
t365 = t26 * t190 - t70 * t285;
t82 = t126 * t187 + t119;
t244 = pkin(3) * t286 - t82;
t327 = qJD(4) * t135 - t154 * t268 + t187 * t156 - t352 * t247;
t359 = t186 * t115 + t190 * t135;
t313 = t148 * t186;
t358 = -qJD(6) * t186 - t372 * qJ(6) + (t285 + t313) * pkin(5);
t321 = t121 * t186;
t220 = t154 * t284 - t321;
t310 = t154 * t186;
t356 = t112 * t310 + t122 * t130 + t144 * t220 - t222 * t76;
t334 = -qJD(5) * t359 + t362 * t186 - t190 * t373;
t354 = t132 ^ 2;
t353 = t144 ^ 2;
t350 = pkin(3) * t187;
t348 = pkin(5) * t150;
t5 = t6 * t190;
t347 = t8 * t186;
t345 = pkin(3) * qJD(4);
t344 = qJD(2) * pkin(2);
t306 = t184 * t189;
t146 = -t188 * t306 + t303;
t147 = t185 * t188 + t191 * t306;
t223 = t351 * t146 - t187 * t147;
t343 = t223 * t26;
t342 = t132 * t45;
t341 = t357 * t26;
t335 = pkin(5) * t122 + t334;
t333 = -qJ(6) * t122 + qJD(6) * t222 + t332;
t178 = pkin(10) + t350;
t251 = pkin(3) * t260;
t234 = t190 * t251;
t331 = -t130 * t234 - t178 * t338;
t240 = pkin(5) * t186 - qJ(6) * t190;
t241 = t190 * pkin(5) + t186 * qJ(6);
t330 = t240 * t121 - (qJD(5) * t241 - qJD(6) * t190) * t154 - t327;
t329 = t358 + t244;
t328 = -t79 + t358;
t113 = pkin(4) * t150 + pkin(10) * t148;
t53 = t186 * t113 + t190 * t78;
t279 = pkin(3) * t290;
t103 = t113 + t279;
t83 = t351 * t126 - t118;
t50 = t186 * t103 + t190 * t83;
t325 = t112 * t222;
t324 = t112 * t178;
t323 = t112 * t186;
t320 = t121 * t190;
t318 = t130 * t178;
t316 = t132 * t130;
t314 = t144 * t150;
t311 = t150 * t148;
t309 = t154 * t190;
t308 = t158 * t188;
t307 = t158 * t191;
t305 = t184 * t192;
t194 = qJD(2) ^ 2;
t304 = t184 * t194;
t193 = qJD(3) ^ 2;
t299 = t193 * t188;
t298 = t193 * t191;
t41 = -t186 * t71 + t190 * t95;
t297 = qJD(6) - t41;
t182 = t188 ^ 2;
t183 = t191 ^ 2;
t294 = t182 - t183;
t289 = qJD(2) * t189;
t288 = qJD(2) * t191;
t281 = -t41 * t312 - t42 * t313 + t5;
t280 = t351 * pkin(3);
t276 = t186 * t305;
t275 = t189 * t304;
t274 = t188 * t194 * t191;
t272 = t186 * t351;
t271 = t190 * t351;
t266 = t184 * t289;
t265 = t192 * t291;
t263 = t178 * t284;
t262 = t130 ^ 2 - t354;
t255 = -t142 * t150 + t97;
t253 = t144 * t186;
t250 = t188 * t265;
t249 = t191 * t265;
t248 = t42 * t150 + t368;
t245 = t191 * t258;
t159 = -t268 - t344;
t242 = -t159 - t268;
t28 = -pkin(5) * t144 + t297;
t239 = t186 * t29 - t190 * t28;
t238 = t186 * t42 + t190 * t41;
t49 = t103 * t190 - t186 * t83;
t233 = t148 * t70 - t324;
t52 = t113 * t190 - t186 * t78;
t232 = -t130 * t150 - t322;
t80 = t115 * t190 - t135 * t186;
t228 = t315 + t317;
t160 = -pkin(4) - t241;
t227 = t28 * t150 + t366;
t226 = -t41 * t150 - t365;
t225 = t284 * t45 + t347;
t224 = t144 * t42 - t257;
t105 = t187 * t146 + t351 * t147;
t93 = t105 * t186 + t190 * t305;
t137 = t267 + t307;
t219 = -t154 * t285 - t320;
t123 = qJD(3) * t146 + t249;
t124 = -qJD(3) * t147 - t250;
t56 = t223 * qJD(4) + t351 * t123 + t187 * t124;
t19 = -qJD(5) * t93 + t186 * t266 + t190 * t56;
t20 = -qJD(5) * t276 + t105 * t284 + t186 * t56 - t190 * t266;
t94 = t105 * t190 - t276;
t218 = -t19 * t130 + t132 * t20 - t75 * t93 - t94 * t76;
t57 = t105 * qJD(4) + t187 * t123 - t351 * t124;
t217 = -t112 * t93 + t57 * t130 - t144 * t20 - t223 * t76;
t216 = t28 * t372 - t29 * t313 + t370;
t214 = (-t144 * t284 - t323) * pkin(10);
t213 = t130 * t253 - t338;
t211 = t132 * t251 - t178 * t75;
t209 = qJD(3) * (-t242 - t344);
t207 = t178 * t285 - t234;
t206 = -t186 * t251 - t263;
t205 = t112 * t94 - t132 * t57 + t144 * t19 - t223 * t75;
t204 = -qJD(5) * t239 + t370;
t203 = -qJD(5) * t238 + t186 * t257 + t5;
t202 = t130 * t220 + t76 * t310;
t109 = -t158 * t287 + t296;
t110 = -qJD(3) * t307 + (-qJD(3) * t185 - t265) * t292;
t136 = t171 - t308;
t201 = t109 * t191 - t110 * t188 + (-t136 * t191 - t137 * t188) * qJD(3);
t200 = -t212 * t288 + t295;
t198 = t142 * t148 - t25;
t195 = t150 * t284 + t186 * t252 - t197 - t254;
t179 = -t280 - pkin(4);
t152 = -t280 + t160;
t141 = t150 * qJ(6);
t96 = -t148 ^ 2 + t150 ^ 2;
t91 = t148 * t282 - t199;
t88 = pkin(5) * t132 + qJ(6) * t130;
t85 = t154 * t240 - t357;
t72 = pkin(10) * t338;
t64 = pkin(5) * t222 - t80;
t63 = -qJ(6) * t222 + t359;
t59 = t122 * t144 - t325;
t51 = -t75 + t319;
t47 = -t52 - t348;
t46 = t141 + t53;
t44 = -t49 - t348;
t43 = t141 + t50;
t38 = -t132 * t150 + t353 * t190 + t323;
t37 = -t353 * t186 - t232;
t36 = t144 * t253 + t232;
t32 = t190 * t254 - t340;
t17 = t132 * t219 - t75 * t309;
t11 = t112 * t309 + t122 * t132 + t144 * t219 + t222 * t75;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t275, -t192 * t304, 0, 0, 0, 0, 0, 0, 0, 0, -t191 * t275 + (t124 - t250) * qJD(3), t188 * t275 + (-t123 - t249) * qJD(3) (t123 * t191 - t124 * t188 + (-t146 * t191 - t147 * t188) * qJD(3)) * qJD(2), t109 * t147 + t110 * t146 + t123 * t137 + t124 * t136 + (t159 - t268) * t266, 0, 0, 0, 0, 0, 0, -t57 * t282 + (-t112 * t192 + t148 * t289) * t184, -t56 * t282 + (t192 * t295 + (t189 * t150 - t192 * t208) * qJD(2)) * t184, -t105 * t112 - t56 * t148 + t57 * t150 + t200 * t223, -t343 + t105 * t25 + t56 * t79 - t57 * t78 + (t142 * t289 - t145 * t192) * t184, 0, 0, 0, 0, 0, 0, t217, -t205, t218, t19 * t42 - t20 * t41 + t257 * t93 + t57 * t70 + t6 * t94 - t343, 0, 0, 0, 0, 0, 0, t217, t218, t205, t19 * t29 + t2 * t94 + t20 * t28 - t223 * t8 + t4 * t93 + t45 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t245, -0.2e1 * t294 * t283, t298, -0.2e1 * t245, -t299, 0, -pkin(8) * t298 + t188 * t209, pkin(8) * t299 + t191 * t209 (-t182 - t183) * t246 + t201 ((t136 * t188 - t137 * t191) * t192 + (-t159 - t344) * t189) * t293 + t201 * pkin(8), -t150 * t121 - t154 * t199, -t154 * t112 + t121 * t148 - t150 * t122 - t199 * t222, -t121 * t282, t122 * t148 - t325, -t122 * t282, 0, t180 * t112 + t142 * t122 - t145 * t222 + t148 * t215 - t282 * t327, -t142 * t121 + t145 * t154 + t150 * t215 - t180 * t199 + t282 * t362, -t135 * t112 + t78 * t121 - t79 * t122 + t148 * t362 + t150 * t327 + t26 * t154 + t200 * t357 + t222 * t25, t135 * t25 + t215 * t142 + t145 * t180 - t327 * t78 - t362 * t79 - t341, t17, t371, t11, t202, -t356, t59, t112 * t80 + t122 * t41 + t327 * t130 + t334 * t144 + t154 * t368 + t222 * t257 - t70 * t321 - t357 * t76, -t112 * t359 - t122 * t42 + t327 * t132 + t332 * t144 + t154 * t365 + t222 * t6 - t70 * t320 + t357 * t75, t75 * t80 - t76 * t359 - t334 * t132 + t332 * t130 + t238 * t121 + (-t186 * t6 + t190 * t257 + (t186 * t41 - t190 * t42) * qJD(5)) * t154, -t257 * t80 + t327 * t70 - t332 * t42 + t334 * t41 + t359 * t6 - t341, t17, t11, -t371, t59, t356, t202, -t112 * t64 - t122 * t28 - t330 * t130 + t144 * t335 + t225 * t154 + t222 * t4 - t45 * t321 + t76 * t85, -t63 * t76 - t64 * t75 - t335 * t132 + t333 * t130 + t239 * t121 + (-t186 * t2 + t190 * t4 + (-t186 * t28 - t190 * t29) * qJD(5)) * t154, t112 * t63 + t122 * t29 + t330 * t132 - t333 * t144 + t154 * t366 - t2 * t222 + t45 * t320 + t75 * t85, t2 * t63 - t28 * t335 - t333 * t29 - t330 * t45 + t4 * t64 + t8 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t274, t294 * t194, 0, t274, 0, 0, t242 * t290, -t159 * t288 + (t136 + t308) * qJD(3) - t296, 0, 0, t311, t96, t91, -t311, 0, 0, -t127 * t260 + t82 * t282 - t148 * t279 + (-qJD(4) * t120 - t282 * t345 - t98) * t187 + t255, t83 * t282 + (-t150 * t290 - t260 * t282) * pkin(3) + t198, -t112 * t350 + t200 * t280 + (t79 + t244) * t150 + (-t251 - t78 + t83) * t148, t78 * t82 - t79 * t83 + (-t142 * t290 - t351 * t26 + t187 * t25 + (-t187 * t78 + t351 * t79) * qJD(4)) * pkin(3), t32, -t9, t38, t213, t37, -t314, t179 * t76 + t233 * t186 + t244 * t130 + (-t49 + t206) * t144 + t226, -t179 * t75 + t233 * t190 + t244 * t132 + (t50 + t207) * t144 + t248, t50 * t130 + t49 * t132 + (t132 * t178 - t41) * t284 + (t257 + (-t42 + t318) * qJD(5) + t211) * t186 + t281 + t331, t26 * t179 - t41 * t49 - t42 * t50 - t70 * t82 + (t187 * t70 + t271 * t42 - t272 * t41) * t345 + t203 * t178, t32, t38, t9, -t314, t36, t213, t152 * t76 + (t148 * t45 - t324) * t186 + t329 * t130 + (t44 + t206) * t144 + t227, t43 * t130 + (-t44 + t263) * t132 + ((-t29 + t318) * qJD(5) + t211) * t186 + t216 + t331, t152 * t75 - t347 + (-qJD(5) * t45 + t324) * t190 - t329 * t132 + (-t43 - t207) * t144 + t367, t8 * t152 - t28 * t44 - t29 * t43 + t329 * t45 + (t271 * t29 + t272 * t28) * t345 + t204 * t178; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t311, t96, t91, -t311, 0, 0, t79 * qJD(3) + t255 - t339, t282 * t78 + t198, 0, 0, t32, -t9, t38, t213, t37, -t314, -pkin(4) * t76 - t130 * t79 - t144 * t52 + t70 * t313 + t214 + t226, pkin(4) * t75 - t132 * t79 + t144 * t53 + t312 * t70 + t248 + t369, t130 * t53 + t132 * t52 - t72 + (-pkin(10) * t75 + t257) * t186 + (pkin(10) * t228 - t238) * qJD(5) + t281, -pkin(4) * t26 + pkin(10) * t203 - t41 * t52 - t42 * t53 - t70 * t79, t32, t38, t9, -t314, t36, t213, t130 * t328 + t144 * t47 + t160 * t76 + t313 * t45 + t214 + t227, -t29 * t285 + t130 * t46 - t132 * t47 - t72 + (qJD(5) * t228 - t340) * pkin(10) + t216, -t132 * t328 - t144 * t46 + t160 * t75 - t225 + t367 - t369, pkin(10) * t204 + t160 * t8 - t28 * t47 - t29 * t46 + t328 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316, -t262, t51, -t316, -t195, t112, -t132 * t70 + t224, t130 * t70 + t144 * t41 - t6, 0, 0, t316, t51, t262, t112, t195, -t316, -t130 * t88 + t224 - t342 + 0.2e1 * t349, pkin(5) * t75 - qJ(6) * t76 + (t29 - t42) * t132 + (t28 - t297) * t130, 0.2e1 * t326 - t130 * t45 + t132 * t88 + (0.2e1 * qJD(6) - t41) * t144 + t6, -pkin(5) * t4 + qJ(6) * t2 - t28 * t42 + t29 * t297 - t45 * t88; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t150 * t282 + t316, t51, -t353 - t354, -t144 * t29 + t342 + t4;];
tauc_reg  = t1;
