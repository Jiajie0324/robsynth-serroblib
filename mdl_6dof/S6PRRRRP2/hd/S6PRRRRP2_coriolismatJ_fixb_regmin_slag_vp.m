% Calculate minimal parameter regressor of coriolis matrix for
% S6PRRRRP2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d2,d3,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:05
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRRP2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6PRRRRP2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:04:23
% EndTime: 2019-03-09 00:05:00
% DurationCPUTime: 24.31s
% Computational Cost: add. (13535->789), mult. (30210->1007), div. (0->0), fcn. (33715->10), ass. (0->613)
t794 = qJD(3) + qJD(4);
t582 = sin(qJ(3));
t584 = cos(qJ(3));
t580 = sin(pkin(6));
t927 = sin(qJ(2));
t776 = t580 * t927;
t915 = cos(pkin(6));
t513 = t582 * t915 + t584 * t776;
t619 = t582 * t776 - t584 * t915;
t926 = sin(qJ(4));
t928 = cos(qJ(4));
t595 = t513 * t928 - t619 * t926;
t700 = t513 * t926 + t928 * t619;
t772 = t926 * t582;
t774 = t928 * t584;
t535 = t772 - t774;
t583 = cos(qJ(5));
t387 = t583 * t535;
t745 = -t387 / 0.2e1;
t273 = t700 * t745;
t569 = t926 * t584;
t570 = t928 * t582;
t537 = -t570 - t569;
t581 = sin(qJ(5));
t859 = t583 * t595;
t585 = cos(qJ(2));
t868 = t580 * t585;
t287 = -t581 * t868 + t859;
t950 = t287 / 0.2e1;
t637 = t537 * t950 - t273;
t744 = t387 / 0.2e1;
t875 = t537 * t583;
t754 = t875 / 0.2e1;
t1016 = t595 * t754 + t700 * t744 - t637;
t446 = t537 * t868;
t884 = t446 * t581;
t426 = -t884 / 0.2e1;
t1019 = t426 + t1016;
t1022 = qJD(1) * t1019;
t427 = t884 / 0.2e1;
t1018 = t427 + t1016;
t1021 = qJD(2) * t1018;
t1020 = qJD(2) * t1019;
t1017 = t273 + t637;
t955 = -pkin(9) - pkin(8);
t551 = t955 * t582;
t552 = t955 * t584;
t699 = -t928 * t551 - t552 * t926;
t1001 = t699 * t581;
t924 = pkin(5) * t537;
t1014 = -t1001 / 0.2e1 + t924 / 0.2e1;
t861 = t583 * qJ(6);
t923 = pkin(5) * t581;
t654 = t861 / 0.2e1 - t923 / 0.2e1;
t634 = t654 * t700;
t548 = -t861 + t923;
t892 = t700 * t548;
t1008 = t892 / 0.2e1 - t634;
t866 = t581 * t595;
t286 = t583 * t868 + t866;
t1004 = (-t286 * t581 - t287 * t583 + t595) * t700;
t1012 = t1004 * qJD(1);
t1015 = t1008 * qJD(5) + t1012;
t876 = t537 * t581;
t705 = -pkin(5) * t876 + t537 * t861;
t253 = t699 + t705;
t901 = t253 * t581;
t241 = t901 / 0.2e1;
t872 = t548 * t581;
t752 = -t872 / 0.2e1;
t956 = pkin(5) / 0.2e1;
t1013 = t241 + (t752 + t956) * t537 + t1014;
t1000 = t699 * t583;
t1010 = -t1000 / 0.2e1;
t403 = t1001 / 0.2e1;
t522 = t537 * qJ(6);
t920 = t537 * pkin(4);
t921 = t535 * pkin(10);
t419 = -t920 + t921;
t925 = pkin(3) * t582;
t391 = t419 + t925;
t375 = t581 * t391;
t848 = t375 / 0.2e1 + t1010;
t1007 = t848 - t522;
t867 = t581 * qJ(6);
t918 = t583 * pkin(5);
t694 = -t867 - t918;
t543 = -pkin(4) + t694;
t789 = t928 * pkin(3);
t521 = -t789 + t543;
t501 = t521 * t581;
t529 = t543 * t581;
t836 = t501 / 0.2e1 + t529 / 0.2e1;
t871 = t548 * t583;
t1006 = t871 - t836;
t1005 = t924 - t1001;
t1003 = -t700 / 0.2e1;
t948 = t595 / 0.2e1;
t1002 = t253 * t948;
t981 = t794 * t537;
t696 = t535 * t981;
t579 = t583 ^ 2;
t934 = -t579 / 0.2e1;
t578 = t581 ^ 2;
t936 = -t578 / 0.2e1;
t999 = (t934 + t936) * t700;
t830 = t578 + t579;
t998 = t830 * t700;
t738 = t948 - t595 / 0.2e1;
t170 = t738 * t581;
t731 = t926 * qJD(3);
t720 = pkin(3) * t731;
t997 = t170 * qJD(1) + t581 * t720;
t574 = -pkin(3) * t584 - pkin(2);
t919 = t537 * pkin(10);
t706 = t535 * pkin(4) + t919;
t632 = t574 + t706;
t701 = t926 * t551 - t552 * t928;
t983 = t701 * t581;
t222 = -t583 * t632 + t983;
t922 = t535 * pkin(5);
t197 = t222 - t922;
t384 = t581 * t535;
t607 = -pkin(5) * t384 + qJ(6) * t387 + t701;
t985 = t607 * t581;
t996 = (t197 - t985) * t537;
t995 = (t222 - t983) * t537;
t982 = t701 * t583;
t223 = t581 * t632 + t982;
t994 = (t223 - t982) * t537;
t622 = -t774 / 0.2e1 + t772 / 0.2e1;
t942 = -t535 / 0.2e1;
t315 = (t942 + t622) * t868;
t802 = t315 * qJD(1);
t993 = t699 * t794 - t802;
t748 = t868 / 0.2e1;
t316 = t535 * t748 + t622 * t868;
t992 = t316 * qJD(2) + t700 * t794;
t879 = t535 * qJ(6);
t196 = t223 + t879;
t984 = t607 * t583;
t991 = t253 * t387 + (-t196 + t984) * t537;
t990 = t794 * t701;
t524 = t570 / 0.2e1 + t569 / 0.2e1;
t317 = -t524 * t868 + t537 * t748;
t989 = t317 * qJD(2) - t595 * t794;
t988 = t253 * t607;
t943 = t521 / 0.2e1;
t662 = t789 / 0.2e1 + t943;
t940 = -t543 / 0.2e1;
t987 = t535 * (t940 + t662);
t788 = t926 * pkin(3);
t572 = t788 + pkin(10);
t780 = t572 / 0.2e1 - pkin(10) / 0.2e1;
t986 = t537 * t780;
t893 = t595 * t543;
t904 = t607 * t543;
t416 = t794 * t535;
t530 = t537 ^ 2;
t958 = t535 ^ 2;
t793 = t530 - t958;
t171 = t738 * t583;
t833 = t171 * qJD(1) + t583 * t720;
t773 = t926 * t537;
t695 = pkin(3) * t583 * t773;
t469 = -t695 / 0.2e1;
t719 = -t789 / 0.2e1;
t573 = -t789 - pkin(4);
t937 = -t573 / 0.2e1;
t663 = t719 + t937;
t623 = (-pkin(4) / 0.2e1 + t663) * t535;
t88 = t469 + (t623 + t986) * t583;
t980 = -qJD(2) * t88 - t997;
t470 = t695 / 0.2e1;
t40 = t470 + (-t986 + t987) * t583;
t979 = -qJD(2) * t40 + t997;
t933 = t579 / 0.2e1;
t935 = t578 / 0.2e1;
t978 = (-t933 - t935) * t700;
t949 = t700 / 0.2e1;
t739 = t949 + t1003;
t179 = t739 * t583;
t806 = t179 * qJD(1);
t812 = qJD(5) * t581;
t977 = -t572 * t812 - t806;
t941 = -t537 / 0.2e1;
t314 = (t941 - t524) * t868;
t803 = t314 * qJD(1);
t825 = qJD(2) * t574;
t976 = t537 * t825 + t803;
t373 = t535 * t925 - t537 * t574;
t975 = -qJD(2) * t373 + t803;
t175 = t739 * t581;
t807 = t175 * qJD(1);
t811 = qJD(5) * t583;
t698 = -t572 * t811 + t807;
t951 = t286 / 0.2e1;
t598 = (-t535 * t739 + t595 * t941) * t581 + t537 * t951;
t883 = t446 * t583;
t758 = -t883 / 0.2e1;
t592 = t758 + t598;
t974 = qJD(1) * t592;
t650 = (-t866 / 0.2e1 + t951) * t537;
t605 = t758 + t650;
t973 = qJD(1) * t605;
t897 = t287 * t535;
t639 = t897 / 0.2e1 + t700 * t754;
t712 = t776 / 0.2e1;
t447 = t535 * t868;
t863 = t581 * t447;
t839 = t863 / 0.2e1 + t583 * t712;
t608 = t639 + t839;
t972 = qJD(1) * t608;
t855 = t583 * t447;
t372 = t581 * t776 - t855;
t971 = qJD(2) * (t372 * t535 - t446 * t875);
t174 = t700 * t581;
t932 = -t581 / 0.2e1;
t176 = t174 / 0.2e1 - t700 * t932;
t779 = t176 * qJD(3) + t174 * qJD(4) - t287 * qJD(5);
t383 = (t936 + t933) * t537;
t862 = t581 * t583;
t769 = qJD(2) * t862;
t480 = t530 * t769;
t969 = t383 * t794 + t480;
t561 = t579 - t578;
t718 = t537 * t769;
t358 = t561 * t794 + 0.2e1 * t718;
t968 = -qJD(2) * t592 - t171 * qJD(4) + t175 * qJD(5);
t746 = -t859 / 0.2e1;
t930 = -t583 / 0.2e1;
t172 = t595 * t930 + t746;
t428 = t883 / 0.2e1;
t596 = t428 + t598;
t819 = qJD(3) * t583;
t967 = qJD(2) * t596 + t172 * qJD(4) + t176 * qJD(5) - t595 * t819;
t966 = -qJD(2) * t605 + t171 * qJD(3);
t163 = t175 * qJD(3);
t965 = qJD(2) * t608 - t163;
t629 = t428 + t650;
t814 = qJD(4) * t583;
t964 = qJD(2) * t629 + t172 * qJD(3) + t174 * qJD(5) - t595 * t814;
t755 = -t875 / 0.2e1;
t715 = t700 * t755 - t897 / 0.2e1;
t653 = t715 + t839;
t963 = qJD(2) * t653 + t779;
t960 = qJD(3) * t592 + qJD(4) * t605 - qJD(5) * t608;
t371 = -t583 * t776 - t863;
t959 = qJD(3) * t596 + qJD(4) * t629 + qJD(5) * t653 + (-t371 * t535 + t446 * t876) * qJD(2);
t957 = pkin(4) / 0.2e1;
t954 = -qJ(6) / 0.2e1;
t841 = -t1000 + t375;
t200 = -t522 + t841;
t953 = -t200 / 0.2e1;
t857 = t583 * t419;
t207 = -t857 + t1005;
t952 = t207 / 0.2e1;
t382 = t694 * t537;
t947 = -t382 / 0.2e1;
t946 = -t391 / 0.2e1;
t945 = -t419 / 0.2e1;
t944 = t1000 / 0.2e1;
t939 = t543 / 0.2e1;
t938 = t548 / 0.2e1;
t931 = t581 / 0.2e1;
t929 = t583 / 0.2e1;
t630 = (t286 * t930 + t287 * t931) * t535;
t891 = t371 * t581;
t647 = t372 * t930 - t891 / 0.2e1;
t76 = t630 - t647;
t917 = t76 * qJD(2);
t77 = t630 + t647;
t916 = t77 * qJD(2);
t914 = t196 * t535;
t138 = t197 * t387;
t858 = t583 * t391;
t201 = -t858 + t1005;
t20 = t138 + t201 * t875 + (-t200 * t537 - t914) * t581;
t913 = t20 * qJD(2);
t912 = t200 * t583;
t911 = t201 * t581;
t395 = t581 * t419;
t842 = t395 - t1000;
t206 = -t522 + t842;
t910 = t206 * t583;
t909 = t207 * t581;
t21 = t138 + t207 * t875 + (-t206 * t537 - t914) * t581;
t908 = t21 * qJD(2);
t860 = t583 * t196;
t22 = t223 * t875 + (-t860 + (-t197 + t222) * t581) * t537;
t907 = t22 * qJD(2);
t906 = t222 * t535;
t905 = t223 * t535;
t741 = -t222 / 0.2e1 + t197 / 0.2e1;
t742 = -t196 / 0.2e1 + t223 / 0.2e1;
t25 = (t922 / 0.2e1 - t741) * t583 + (t879 / 0.2e1 - t742) * t581;
t14 = t25 * qJD(2);
t898 = t286 * t535;
t178 = t700 * t583;
t624 = (-t788 / 0.2e1 + t780) * t537;
t38 = (t624 - t987) * t581;
t890 = t38 * qJD(2);
t886 = t446 * t521;
t885 = t446 * t543;
t882 = t521 * t535;
t881 = t521 * t548;
t880 = t521 * t583;
t878 = t535 * t573;
t877 = t537 * t572;
t874 = t543 * t583;
t873 = t548 * t543;
t870 = t572 * t535;
t869 = t573 * t537;
t67 = t286 * t371 + t287 * t372 - t446 * t700;
t854 = t67 * qJD(1);
t853 = t77 * qJD(1);
t85 = (t624 + t623) * t581;
t852 = t85 * qJD(2);
t846 = t858 / 0.2e1 + t403;
t845 = t395 / 0.2e1 + t1010;
t844 = -t395 / 0.2e1 + t944;
t390 = t857 / 0.2e1;
t843 = t390 + t403;
t713 = -t776 / 0.2e1;
t840 = -t863 / 0.2e1 + t583 * t713;
t838 = -t855 / 0.2e1 + t581 * t712;
t837 = t855 / 0.2e1 + t581 * t713;
t834 = (t934 + t935) * t537;
t832 = (t814 + t819) * t581;
t730 = t926 * qJD(4);
t721 = pkin(3) * t730;
t560 = t581 * t721;
t577 = t578 * qJD(6);
t831 = t577 - t560;
t374 = -t535 * t574 - t537 * t925;
t828 = qJD(2) * t374;
t827 = qJD(2) * t535;
t826 = qJD(2) * t537;
t824 = qJD(2) * t584;
t823 = qJD(3) * t170;
t822 = qJD(3) * t179;
t821 = qJD(3) * t581;
t820 = qJD(3) * t582;
t818 = qJD(3) * t584;
t817 = qJD(3) * t585;
t816 = qJD(4) * t574;
t815 = qJD(4) * t581;
t813 = qJD(5) * t222;
t810 = qJD(6) * t581;
t310 = t793 * t581;
t805 = t310 * qJD(2);
t311 = t793 * t583;
t804 = t311 * qJD(2);
t801 = t793 * qJD(2);
t800 = t384 * qJD(2);
t381 = t387 * qJD(2);
t394 = t561 * t530;
t799 = t394 * qJD(2);
t798 = t524 * qJD(2);
t797 = t535 * qJD(5);
t520 = t535 * qJD(6);
t562 = -t582 ^ 2 + t584 ^ 2;
t796 = t562 * qJD(2);
t795 = t583 * qJD(6);
t792 = t926 / 0.2e1;
t26 = t222 * t930 + t196 * t932 + t223 * t931 + t197 * t929 + (t867 / 0.2e1 + t918 / 0.2e1) * t535;
t791 = t26 * qJD(5) + t853;
t790 = -t25 * qJD(5) + t387 * qJD(6) - t853;
t787 = pkin(2) * t582 * qJD(2);
t786 = pkin(2) * t824;
t785 = pkin(10) * t812;
t784 = pkin(10) * t811;
t783 = -t924 / 0.2e1;
t782 = pkin(10) * t929;
t781 = t957 + t937;
t242 = -t901 / 0.2e1;
t743 = t572 * t929;
t778 = t521 * t754 + t535 * t743 + t242;
t777 = pkin(10) * t744 + t543 * t754 + t242;
t775 = t581 * t928;
t771 = t535 * t825;
t768 = t537 * t797;
t434 = t535 * t826;
t765 = qJD(2) * t868;
t568 = t581 * t811;
t764 = t537 * t810;
t565 = t581 * t795;
t763 = t582 * t824;
t762 = t253 * t938;
t761 = t891 / 0.2e1;
t757 = t877 / 0.2e1;
t756 = t876 / 0.2e1;
t753 = -t874 / 0.2e1;
t751 = -t869 / 0.2e1;
t736 = t939 + t943;
t734 = qJD(2) * t927;
t733 = t928 * qJD(3);
t732 = t928 * qJD(4);
t724 = t794 * t583;
t723 = pkin(10) * t756;
t722 = qJD(5) + t827;
t717 = t876 * t1003 - t898 / 0.2e1;
t716 = t700 * t756 + t898 / 0.2e1;
t714 = t580 * t734;
t711 = -t775 / 0.2e1;
t710 = t775 / 0.2e1;
t709 = t928 * t929;
t708 = t947 - t921 / 0.2e1;
t702 = t947 - t870 / 0.2e1;
t297 = t524 + t834;
t235 = qJD(2) * t297 + t832;
t289 = qJD(2) * t383 - t832;
t697 = t581 * t724;
t693 = -t535 * t543 + t919;
t692 = t583 * t721;
t17 = t196 * t200 + t197 * t201 + t988;
t646 = t860 / 0.2e1 + t197 * t931;
t588 = t200 * t950 + t201 * t951 + t607 * t949 - t646 * t700 + t1002;
t2 = t886 / 0.2e1 + t647 * t572 + t588;
t691 = t2 * qJD(1) + t17 * qJD(2);
t18 = t196 * t206 + t197 * t207 + t988;
t589 = (t607 / 0.2e1 - t646) * t700 + t207 * t951 + t206 * t950 + t1002;
t4 = t885 / 0.2e1 + t647 * pkin(10) + t589;
t690 = t4 * qJD(1) + t18 * qJD(2);
t19 = -t196 * t222 + t197 * t223 + t253 * t382;
t597 = t286 * t742 + t287 * t741 + t382 * t949;
t655 = t371 * t956 + t372 * t954;
t8 = t597 + t655;
t689 = t8 * qJD(1) + t19 * qJD(2);
t27 = t200 * t535 + t991;
t688 = t27 * qJD(2) + t1022;
t28 = t996 + (-t201 - t901) * t535;
t687 = t28 * qJD(2) + t974;
t29 = t206 * t535 + t991;
t686 = t29 * qJD(2) + t1022;
t30 = t996 + (-t207 - t901) * t535;
t685 = t30 * qJD(2) + t973;
t70 = t419 * t387 + t995;
t684 = t70 * qJD(2) + t973;
t68 = t858 * t535 + t995;
t683 = t68 * qJD(2) + t974;
t610 = t537 * t746 + t1017;
t54 = t427 + t610;
t71 = t994 + (-t842 - t1000) * t535;
t682 = t54 * qJD(1) + t71 * qJD(2);
t612 = t595 * t755 + t1017;
t58 = t427 + t612;
t69 = t994 + (-t841 - t1000) * t535;
t681 = t58 * qJD(1) + t69 * qJD(2);
t79 = -t905 + (-t253 * t583 - t382 * t581) * t537;
t680 = -qJD(2) * t79 + t972;
t80 = -t906 + (t382 * t583 - t901) * t537;
t95 = t716 + t838;
t679 = qJD(1) * t95 - qJD(2) * t80;
t91 = t253 * t875 + t914;
t92 = t715 + t840;
t678 = -qJD(1) * t92 + qJD(2) * t91;
t677 = t911 + t912;
t676 = t909 + t910;
t674 = -t877 + t882;
t673 = t877 - t878;
t123 = t699 * t876 + t906;
t96 = t717 + t837;
t671 = qJD(1) * t96 - qJD(2) * t123;
t124 = -t699 * t875 - t905;
t670 = -qJD(2) * t124 + t972;
t399 = t521 * t755;
t33 = t399 + (t946 + t702) * t583 + t1013;
t402 = -t501 + t871;
t669 = -qJD(2) * t33 + qJD(3) * t402;
t401 = t872 + t880;
t651 = (t537 * t938 - t253 / 0.2e1) * t583;
t593 = t651 + (t521 * t941 + t702) * t581;
t44 = t593 - t1007;
t668 = -qJD(2) * t44 + qJD(3) * t401;
t667 = t537 * t722;
t418 = t530 * t579 + t958;
t666 = -t418 * qJD(2) - t797;
t665 = -qJD(4) * t170 - qJD(5) * t179;
t664 = qJD(5) * t548 - t810;
t659 = t537 * t697;
t658 = t981 * t862;
t657 = qJ(6) * t953 + t201 * t956;
t656 = pkin(5) * t952 + t206 * t954;
t649 = -t912 / 0.2e1 - t911 / 0.2e1;
t648 = t910 / 0.2e1 + t909 / 0.2e1;
t82 = t783 + t778 + t846;
t645 = -qJD(2) * t82 + t521 * t821;
t644 = t583 * t667;
t601 = (t870 / 0.2e1 + t869 / 0.2e1) * t581 + t944;
t102 = t601 + t848;
t643 = -qJD(2) * t102 - t573 * t819;
t453 = t572 * t745;
t104 = t453 + (t751 + t946) * t583;
t642 = -qJD(2) * t104 - t573 * t821;
t325 = -qJD(5) * t524 + t434;
t640 = t537 * t752 + t241 + 0.2e1 * t783;
t636 = -0.2e1 * t659;
t635 = t830 * t928;
t633 = -t692 - t833;
t587 = (t286 * t710 + t287 * t709 + t700 * t792) * pkin(3) + t572 * t999 + t595 * t943;
t16 = -t893 / 0.2e1 - pkin(10) * t999 + t587;
t323 = (t521 * t926 + t572 * t635) * pkin(3);
t586 = t648 * t572 + (t196 * t709 + t197 * t710 + t253 * t792) * pkin(3) + t607 * t943;
t6 = -t904 / 0.2e1 + t649 * pkin(10) + t586;
t631 = t16 * qJD(1) + t6 * qJD(2) + t323 * qJD(3);
t32 = (t206 / 0.2e1 + t953) * t583 + (t952 - t201 / 0.2e1) * t581;
t523 = t635 * pkin(3);
t628 = -qJD(2) * t32 - qJD(3) * t523;
t555 = pkin(3) * t711;
t282 = t555 + t1006;
t432 = t537 * t753;
t41 = t432 + (t945 + t708) * t583 + t1013;
t436 = -t529 + t871;
t627 = -qJD(2) * t41 + qJD(3) * t282 + qJD(4) * t436;
t556 = pkin(3) * t709;
t283 = t583 * t736 + t556 + t872;
t435 = t872 + t874;
t594 = t651 + (t537 * t940 + t708) * t581;
t66 = t522 + t594 + t844;
t626 = -qJD(2) * t66 + qJD(3) * t283 + qJD(4) * t435;
t180 = t178 / 0.2e1 - t700 * t930;
t625 = -qJD(3) * t180 - qJD(4) * t178 - qJD(5) * t286;
t603 = (t921 / 0.2e1 - t920 / 0.2e1) * t581 + t944;
t114 = t603 + t845;
t557 = t583 * t719;
t462 = t583 * t781 + t557;
t618 = pkin(4) * t814 - qJD(2) * t114 + qJD(3) * t462;
t492 = pkin(10) * t745;
t116 = t492 + (t920 / 0.2e1 + t945) * t583;
t461 = t581 * t781 + t555;
t617 = pkin(4) * t815 - qJD(2) * t116 + qJD(3) * t461;
t604 = t581 * t742 + t583 * t741;
t590 = t382 * t943 + t572 * t604 + t762;
t10 = t590 + t657;
t45 = -t892 / 0.2e1 - t634;
t616 = -t45 * qJD(1) + t10 * qJD(2) + qJD(3) * t881;
t554 = pkin(3) * t710;
t348 = t554 + t836;
t84 = t783 + t777 + t843;
t615 = -qJD(2) * t84 + qJD(3) * t348 + t543 * t815;
t169 = t866 / 0.2e1 + t595 * t931;
t614 = -qJD(3) * t169 - qJD(5) * t178 - t595 * t815;
t613 = -qJD(4) * t169 - qJD(5) * t180 - t595 * t821;
t606 = qJD(5) * t694 + t795;
t602 = (pkin(5) * t711 + qJ(6) * t709) * pkin(3);
t591 = pkin(10) * t604 + t382 * t939 + t762;
t12 = t591 + t656;
t237 = -t548 * t736 + t602;
t63 = (-t548 / 0.2e1 - t654) * t700;
t600 = -t63 * qJD(1) + t12 * qJD(2) - t237 * qJD(3) + qJD(4) * t873;
t599 = (t928 * t942 - t773 / 0.2e1) * pkin(3) + t757;
t550 = t561 * qJD(5);
t510 = t523 * qJD(4);
t481 = t537 * t565;
t479 = t722 * qJ(6);
t464 = pkin(4) * t930 + t573 * t929 + t557;
t463 = pkin(4) * t932 + t573 * t931 + t555;
t415 = t578 * t794 - t718;
t392 = t794 * t524;
t377 = t383 * qJD(5);
t349 = t554 - t836;
t345 = t381 + t811;
t344 = -t800 - t812;
t304 = t315 * qJD(2);
t302 = t314 * qJD(2);
t298 = -t524 + t834;
t296 = t298 * qJD(6);
t295 = t297 * qJD(6);
t285 = t555 - t1006;
t284 = -t872 - t880 / 0.2e1 + t753 + t556;
t280 = 0.2e1 * t581 * t644;
t238 = t873 / 0.2e1 + t881 / 0.2e1 + t602;
t233 = -t434 * t579 - t377;
t221 = t223 * qJD(5);
t192 = qJD(5) * t387 - t804;
t191 = -qJD(5) * t384 + t805;
t133 = -t387 * t794 - t434 * t581;
t132 = -t377 + (t579 * t826 - t697) * t535;
t129 = -t581 * t981 + t804;
t128 = -t537 * t724 - t805;
t127 = t581 * t667;
t122 = 0.2e1 * (qJD(5) - t827) * t537 * t862 - t561 * t416;
t117 = pkin(4) * t754 + t390 + 0.2e1 * t403 + t492;
t115 = t603 + t844;
t105 = t583 * t751 + t403 + t453 + t846;
t103 = t601 - t848;
t99 = t639 + t840;
t98 = t716 + t837;
t97 = t717 + t838;
t89 = t999 + t978;
t87 = t469 + t983 + pkin(10) * t754 + pkin(4) * t744 + (t535 * t663 + t757) * t583;
t86 = -t982 + t723 + t384 * t957 + (-t878 / 0.2e1 + t599) * t581;
t83 = -t857 / 0.2e1 + t777 + t1014;
t81 = -t858 / 0.2e1 + t778 + t1014;
t65 = -t522 + t594 + t845;
t57 = t426 + t612;
t53 = t426 + t610;
t43 = t593 + t1007;
t42 = t583 * t708 + t432 + t640 + t843;
t39 = t470 - t985 + pkin(10) * t755 + t543 * t744 + (-t877 / 0.2e1 + t662 * t535) * t583;
t37 = -t984 + t384 * t940 + t723 + (-t882 / 0.2e1 + t599) * t581;
t34 = t583 * t702 + t399 + t640 + t846;
t31 = t648 - t649;
t15 = t893 / 0.2e1 + t587 + t978 * pkin(10);
t13 = t606 - t14;
t11 = t591 - t656;
t9 = t590 - t657;
t7 = t597 - t655;
t5 = t200 * t782 + t904 / 0.2e1 + pkin(10) * t911 / 0.2e1 + t586;
t3 = t372 * t782 - t885 / 0.2e1 + pkin(10) * t761 + t589;
t1 = t372 * t743 - t886 / 0.2e1 + t572 * t761 + t588;
t23 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t67 + t1004 * t794; 0, 0, -t714, -t765, 0, 0, 0, 0, 0 (-t582 * t817 - t584 * t734) * t580 (t582 * t734 - t584 * t817) * t580, 0, 0, 0, 0, 0, t317 * t794 + t535 * t714, t316 * t794 - t537 * t714, 0, 0, 0, 0, 0, t959, t57 * qJD(3) + t53 * qJD(4) + t98 * qJD(5) - t971, t959, t794 * t76 + (-t371 * t583 + t372 * t581) * t826, t97 * qJD(5) + t1018 * t794 + t971, t854 + (t196 * t372 + t197 * t371 - t253 * t446) * qJD(2) + t1 * qJD(3) + t3 * qJD(4) + t7 * qJD(5) + t99 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, -t513 * qJD(3) - t582 * t765, qJD(3) * t619 - t584 * t765, 0, 0, 0, 0, 0, t989, t992, 0, 0, 0, 0, 0, t967, qJD(2) * t57 - t613, t967, -qJD(3) * t998 + t89 * qJD(4) + t917, t613 + t1021, t1 * qJD(2) + (t521 * t595 - t572 * t998) * qJD(3) + t15 * qJD(4) - t176 * qJD(6) + t1015; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t989, t992, 0, 0, 0, 0, 0, t964, qJD(2) * t53 - t614, t964, t89 * qJD(3) - qJD(4) * t998 + t917, t614 + t1021, t3 * qJD(2) + t15 * qJD(3) + (-pkin(10) * t998 + t893) * qJD(4) - t174 * qJD(6) + t1015; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t963, qJD(2) * t98 - t625, t963, 0, qJD(2) * t97 + t625, t7 * qJD(2) + (-pkin(5) * t287 - qJ(6) * t286) * qJD(5) + t287 * qJD(6) + t794 * t1008; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t99 - t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t794 * t314, -t794 * t315, 0, 0, 0, 0, 0, t960, qJD(3) * t58 + qJD(4) * t54 - qJD(5) * t96, t960, t77 * t794, -qJD(5) * t95 + t1019 * t794, qJD(3) * t2 + qJD(4) * t4 + qJD(5) * t8 - qJD(6) * t92 - t854; 0, 0, 0, 0, t582 * t818, t562 * qJD(3), 0, 0, 0, -pkin(2) * t820, -pkin(2) * t818, t696, -t794 * t793, 0, 0, 0, qJD(3) * t373 - t537 * t816, qJD(3) * t374 - t535 * t816, -t530 * t568 + t579 * t696, -t394 * qJD(5) + t535 * t636, t311 * t794 + t581 * t768, -t310 * t794 + t583 * t768, -t696, qJD(3) * t68 + qJD(4) * t70 + qJD(5) * t124, qJD(3) * t69 + qJD(4) * t71 + qJD(5) * t123, qJD(3) * t28 + qJD(4) * t30 + qJD(5) * t79 - t530 * t565, -qJD(3) * t20 - qJD(4) * t21 - qJD(5) * t22 + t535 * t764, qJD(3) * t27 + qJD(4) * t29 + qJD(5) * t80 + qJD(6) * t418, qJD(3) * t17 + qJD(4) * t18 + qJD(5) * t19 + qJD(6) * t91; 0, 0, 0, 0, t763, t796, t818, -t820, 0, -pkin(8) * t818 - t787, pkin(8) * t820 - t786, t434, -t801, -t416, t981, 0, -t975 - t990, t828 + t993, t132, t122, t129, t128, -t325 (t581 * t673 - t982) * qJD(3) + t86 * qJD(4) + t105 * qJD(5) + t683 (t583 * t673 + t983) * qJD(3) + t87 * qJD(4) + t103 * qJD(5) + t681 (-t581 * t674 - t984) * qJD(3) + t37 * qJD(4) + t34 * qJD(5) + t296 + t687, qJD(3) * t677 + t31 * qJD(4) + t791 - t913 (t583 * t674 - t985) * qJD(3) + t39 * qJD(4) + t43 * qJD(5) - t481 + t688 (t521 * t607 + t572 * t677) * qJD(3) + t5 * qJD(4) + t9 * qJD(5) + t81 * qJD(6) + t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t434, -t801, -t416, t981, 0, -t976 - t990, -t771 + t993, t132, t122, t129, t128, -t325, t86 * qJD(3) + (t581 * t706 - t982) * qJD(4) + t117 * qJD(5) + t684, t87 * qJD(3) + (t583 * t706 + t983) * qJD(4) + t115 * qJD(5) + t682, t37 * qJD(3) + (t581 * t693 - t984) * qJD(4) + t42 * qJD(5) + t296 + t685, t31 * qJD(3) + qJD(4) * t676 + t791 - t908, t39 * qJD(3) + (-t583 * t693 - t985) * qJD(4) + t65 * qJD(5) - t481 + t686, t5 * qJD(3) + (pkin(10) * t676 + t904) * qJD(4) + t11 * qJD(5) + t83 * qJD(6) + t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t969, 0.2e1 * t658 - t799, t127, t644, t392, qJD(3) * t105 + qJD(4) * t117 - t221 - t670, qJD(3) * t103 + qJD(4) * t115 - t671 + t813, qJD(3) * t34 + qJD(4) * t42 - t221 - t680, qJD(5) * t705 + t26 * t794 + t764 - t907, qJD(3) * t43 + qJD(4) * t65 + t520 - t679 - t813, t9 * qJD(3) + t11 * qJD(4) + (-pkin(5) * t223 - qJ(6) * t222) * qJD(5) + t196 * qJD(6) + t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298 * t794 - t480, t127, -t659 - t666, qJD(3) * t81 + qJD(4) * t83 + qJD(5) * t196 + t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t302, t304, 0, 0, 0, 0, 0, t968, -qJD(2) * t58 - t665, t968, -t916, t665 - t1020, -qJD(2) * t2 + qJD(4) * t16 - qJD(5) * t45 - qJD(6) * t175 - t1012; 0, 0, 0, 0, -t763, -t796, 0, 0, 0, t787, t786, -t434, t801, 0, 0, 0, t975, t802 - t828, t233, t280, t192, t191, t325, qJD(4) * t85 + qJD(5) * t104 - t683, qJD(4) * t88 + qJD(5) * t102 - t681, qJD(4) * t38 + qJD(5) * t33 + t295 - t687, qJD(4) * t32 + t790 + t913, qJD(4) * t40 + qJD(5) * t44 - t481 - t688, qJD(4) * t6 + qJD(5) * t10 + qJD(6) * t82 - t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t721, -pkin(3) * t732, t568, t550, 0, 0, 0, t573 * t812 - t692, t573 * t811 + t560, -t402 * qJD(5) + t565 - t692, t510, -qJD(5) * t401 + t831, t323 * qJD(4) + t521 * t664; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-t731 - t730) * pkin(3) (-t733 - t732) * pkin(3), t568, t550, 0, 0, 0, t463 * qJD(5) + t633 + t852, qJD(5) * t464 + t560 - t980, t285 * qJD(5) + t565 + t633 + t890, t510 - t628, qJD(5) * t284 + t831 - t979 (pkin(10) * t635 + t543 * t926) * pkin(3) * qJD(4) + t238 * qJD(5) + t349 * qJD(6) + t631; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, t358, t345, t344, -t798, qJD(4) * t463 - t642 + t698, qJD(4) * t464 - t643 - t977, qJD(4) * t285 - t669 + t698, t13, qJD(4) * t284 - t668 + t977, t238 * qJD(4) + t572 * t606 + t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235, t345, t415, qJD(4) * t349 - t645 - t698; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t302, t304, 0, 0, 0, 0, 0, t966, -qJD(2) * t54 - t823, t966, -t916, t823 - t1020, -qJD(2) * t4 - qJD(3) * t16 - qJD(5) * t63 - t1012; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t434, t801, 0, 0, 0, t976, t802 + t771, t233, t280, t192, t191, t325, -qJD(3) * t85 + qJD(5) * t116 - t684, -qJD(3) * t88 + qJD(5) * t114 - t682, -qJD(3) * t38 + qJD(5) * t41 + t295 - t685, -qJD(3) * t32 + t790 + t908, -qJD(3) * t40 + qJD(5) * t66 - t481 - t686, -qJD(3) * t6 + qJD(5) * t12 + qJD(6) * t84 - t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t720, pkin(3) * t733, t568, t550, 0, 0, 0, -qJD(5) * t461 + t833 - t852, -qJD(5) * t462 + t980, -qJD(5) * t282 + t565 + t833 - t890, t628, -qJD(5) * t283 + t577 + t979, -qJD(5) * t237 - qJD(6) * t348 - t631; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t568, t550, 0, 0, 0, -pkin(4) * t812, -pkin(4) * t811, -qJD(5) * t436 + t565, 0, -qJD(5) * t435 + t577, t664 * t543; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t289, t358, t345, t344, -t798, -t617 - t784, -t618 + t785, -t627 - t784, t13, -t626 - t785, pkin(10) * t606 + t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235, t345, t415, -t615 + t784; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t965, qJD(2) * t96 - t822, t965, 0, qJD(2) * t95 + t822, -qJD(2) * t8 + qJD(3) * t45 + qJD(4) * t63; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t969, t636 + t799, t133, t384 * t794 - t434 * t583, t392, -qJD(3) * t104 - qJD(4) * t116 + t670, -qJD(3) * t102 - qJD(4) * t114 + t671, -qJD(3) * t33 - qJD(4) * t41 + t680, t25 * t794 + t907, -qJD(3) * t44 - qJD(4) * t66 + t520 + t679, qJ(6) * t520 - qJD(3) * t10 - qJD(4) * t12 - t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, -t358, -t381, t800, t798, qJD(4) * t461 + t642 - t807, qJD(4) * t462 + t643 - t806, qJD(4) * t282 + t669 - t807, t14, qJD(4) * t283 + t668 + t806, qJD(4) * t237 - t616; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, -t358, -t381, t800, t798, t617, t618, t627, t14, t626, -t600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t722, t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t92 + t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t297 * t794 + t480, t133, t658 + t666, -qJ(6) * t797 - qJD(3) * t82 - qJD(4) * t84 - t678; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235, -t381, -t415, qJD(4) * t348 + t645 + t807; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t235, -t381, -t415, t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t722, -t479; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t23;
