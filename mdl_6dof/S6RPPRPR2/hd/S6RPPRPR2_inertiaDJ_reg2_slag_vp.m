% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPPRPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta2,theta3]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:42
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPPRPR2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRPR2_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:42:47
% EndTime: 2019-03-09 01:42:48
% DurationCPUTime: 1.25s
% Computational Cost: add. (1646->122), mult. (3372->209), div. (0->0), fcn. (3258->8), ass. (0->82)
t109 = cos(qJ(4));
t53 = sin(pkin(10));
t54 = cos(pkin(10));
t57 = sin(qJ(4));
t42 = -t109 * t54 + t53 * t57;
t122 = 0.2e1 * t42;
t39 = t42 * qJD(4);
t43 = t109 * t53 + t54 * t57;
t40 = t43 * qJD(4);
t121 = t122 * t39 - 0.2e1 * t40 * t43;
t80 = sin(pkin(9)) * pkin(1) + qJ(3);
t77 = pkin(7) + t80;
t73 = t54 * t77;
t74 = t53 * t77;
t22 = t109 * t74 + t57 * t73;
t111 = pkin(4) + pkin(8);
t119 = t111 * t40;
t56 = sin(qJ(6));
t58 = cos(qJ(6));
t97 = qJD(6) * t58;
t21 = -t39 * t56 + t43 * t97;
t62 = t43 * pkin(5) + t22;
t79 = t39 * qJ(5) - t43 * qJD(5);
t117 = -qJD(6) * t62 - t119 - t79;
t23 = t109 * t73 - t57 * t74;
t51 = t56 ^ 2;
t52 = t58 ^ 2;
t86 = (t51 - t52) * qJD(6);
t115 = 0.2e1 * (t53 ^ 2 + t54 ^ 2) * qJD(3);
t106 = t42 * t40;
t32 = t43 * t39;
t114 = -0.2e1 * t32 + 0.2e1 * t106;
t29 = -0.2e1 * t32;
t112 = 0.2e1 * qJD(5);
t87 = qJD(3) * t109;
t95 = t57 * qJD(3);
t11 = qJD(4) * t22 + t53 * t95 - t54 * t87;
t7 = -t40 * pkin(5) - t11;
t110 = t42 * t7;
t36 = t51 * t40;
t37 = t52 * t40;
t104 = t56 * t40;
t102 = t58 * t40;
t98 = qJD(6) * t56;
t96 = qJD(6) * t111;
t94 = qJ(5) * qJD(6);
t93 = 0.2e1 * t106;
t92 = t56 * t102;
t89 = t56 * t97;
t41 = t42 ^ 2;
t85 = t41 * t89;
t44 = -cos(pkin(9)) * pkin(1) - t54 * pkin(3) - pkin(2);
t72 = -t43 * qJ(5) + t44;
t13 = t111 * t42 + t72;
t4 = -t56 * t13 + t58 * t62;
t5 = t58 * t13 + t56 * t62;
t84 = t4 * t58 + t5 * t56;
t83 = -t4 * t56 + t5 * t58;
t12 = qJD(4) * t23 + t53 * t87 + t54 * t95;
t82 = -t11 * t23 + t12 * t22;
t78 = -qJ(5) * t40 - qJD(5) * t42;
t76 = t39 * t58 + t43 * t98;
t20 = t42 * t97 + t104;
t75 = t42 * t98 - t102;
t15 = t40 * pkin(4) + t79;
t69 = t7 + (qJ(5) * t42 + t111 * t43) * qJD(6);
t66 = -t11 * t43 + t12 * t42 + t22 * t40 - t23 * t39;
t14 = -t42 * pkin(5) + t23;
t65 = -qJD(6) * t14 - t111 * t39 - t78;
t60 = -t39 * pkin(5) + t12;
t2 = t117 * t58 + t13 * t98 - t56 * t60;
t3 = t117 * t56 - t13 * t97 + t58 * t60;
t1 = qJD(6) * t83 - t2 * t56 + t3 * t58;
t64 = -qJD(6) * t84 - t2 * t58 - t3 * t56;
t63 = 0.2e1 * t11 * t42 + 0.2e1 * t12 * t43 - 0.2e1 * t22 * t39 - 0.2e1 * t23 * t40;
t48 = qJ(5) * t112;
t27 = t42 * t37;
t24 = t42 * t36;
t17 = -t36 - t37;
t16 = pkin(4) * t42 + t72;
t9 = -t42 * t86 + t92;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115, t80 * t115, t29, t121, 0, t93, 0, 0, 0.2e1 * t44 * t40, -0.2e1 * t44 * t39, t63, 0.2e1 * t82, 0, 0, 0, t29, t121, t93, t63, -0.2e1 * t15 * t42 - 0.2e1 * t16 * t40, -0.2e1 * t15 * t43 + 0.2e1 * t16 * t39, 0.2e1 * t15 * t16 + 0.2e1 * t82, 0.2e1 * t24 + 0.2e1 * t85, -0.2e1 * t41 * t86 + 0.4e1 * t42 * t92, 0.2e1 * t104 * t43 + t122 * t21, 0.2e1 * t27 - 0.2e1 * t85, 0.2e1 * t102 * t43 - 0.2e1 * t42 * t76, t29, -0.2e1 * t110 * t58 + 0.2e1 * t14 * t75 + 0.2e1 * t3 * t43 - 0.2e1 * t4 * t39, 0.2e1 * t110 * t56 + 0.2e1 * t14 * t20 + 0.2e1 * t2 * t43 + 0.2e1 * t5 * t39, 0.2e1 * t40 * t83 + 0.2e1 * t42 * t64, 0.2e1 * t14 * t7 - 0.2e1 * t2 * t5 + 0.2e1 * t3 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1 * t42 - t14 * t39 + t40 * t84 + t7 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, 0, 0, 0, 0, 0, 0, 0, 0, 0, t114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t24 + 0.2e1 * t27 - 0.2e1 * t32; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, -t39, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, t39, t15, 0, 0, 0, 0, 0, 0, -t21, t76, -t17, t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t39, 0, -t40, 0, -t12, t11, 0, 0, 0, t39, t40, 0, 0, 0, pkin(4) * t39 + t78, t12, -t11, -pkin(4) * t12 - qJ(5) * t11 + qJD(5) * t23, t9, -0.4e1 * t42 * t89 - t36 + t37, -t76, -t9, -t21, 0, t56 * t69 - t58 * t65, t56 * t65 + t58 * t69, -t1, t7 * qJ(5) + t14 * qJD(5) - t1 * t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t40, t39, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, -t39, -t15, 0, 0, 0, 0, 0, 0, t21, -t76, t17 -(t51 + t52) * t119 - t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, t48, -0.2e1 * t89, 0.2e1 * t86, 0, 0.2e1 * t89, 0, 0, 0.2e1 * qJD(5) * t56 + 0.2e1 * t58 * t94, 0.2e1 * qJD(5) * t58 - 0.2e1 * t56 * t94, 0, t48; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t39, 0, 0, t12, 0, 0, 0, 0, 0, 0, -t76, -t21, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t40, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, 0, -t75, -t39, t3, t2, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t75, -t20, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t97, t98, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, 0, -t97, 0, t56 * t96, t58 * t96, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t98, -t97, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
