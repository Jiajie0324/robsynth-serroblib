% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPRPR2
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta2,theta3]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:04
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPRPR2_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR2_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR2_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRPR2_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRPR2_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPPRPR2_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:03:29
% EndTime: 2019-05-05 14:04:04
% DurationCPUTime: 37.67s
% Computational Cost: add. (108293->830), mult. (248513->1084), div. (0->0), fcn. (172831->10), ass. (0->549)
t1554 = qJD(4) ^ 2;
t1543 = sin(pkin(10));
t1545 = cos(pkin(10));
t1549 = sin(qJ(4));
t1552 = cos(qJ(4));
t1588 = t1543 * t1552 + t1545 * t1549;
t1494 = t1588 * qJD(1);
t1678 = t1494 ^ 2;
t1473 = t1678 + t1554;
t1666 = qJD(1) * t1543;
t1492 = -t1552 * t1545 * qJD(1) + t1549 * t1666;
t1643 = t1494 * t1492;
t1725 = qJDD(4) + t1643;
t1734 = t1725 * t1549;
t1359 = t1473 * t1552 + t1734;
t1733 = t1725 * t1552;
t1365 = -t1473 * t1549 + t1733;
t1277 = t1359 * t1545 + t1365 * t1543;
t1758 = pkin(1) * t1277;
t1757 = pkin(2) * t1277;
t1756 = qJ(3) * t1277;
t1286 = t1359 * t1543 - t1365 * t1545;
t1755 = qJ(3) * t1286;
t1487 = t1492 ^ 2;
t1472 = t1554 - t1487;
t1357 = -t1472 * t1549 + t1733;
t1364 = t1472 * t1552 + t1734;
t1282 = t1357 * t1543 + t1364 * t1545;
t1544 = sin(pkin(9));
t1754 = t1282 * t1544;
t1546 = cos(pkin(9));
t1753 = t1282 * t1546;
t1752 = t1286 * t1544;
t1751 = t1286 * t1546;
t1689 = -t1678 + t1554;
t1726 = qJDD(4) - t1643;
t1736 = t1549 * t1726;
t1360 = t1552 * t1689 + t1736;
t1735 = t1552 * t1726;
t1366 = -t1549 * t1689 + t1735;
t1285 = t1360 * t1543 - t1366 * t1545;
t1750 = t1285 * t1544;
t1749 = t1285 * t1546;
t1748 = pkin(3) * t1359;
t1747 = pkin(7) * t1359;
t1746 = pkin(7) * t1365;
t1275 = t1357 * t1545 - t1364 * t1543;
t1428 = -t1554 - t1487;
t1334 = t1428 * t1549 + t1735;
t1337 = -t1428 * t1552 + t1736;
t1233 = t1334 * t1545 - t1337 * t1543;
t1745 = pkin(1) * t1233;
t1744 = pkin(2) * t1233;
t1743 = qJ(3) * t1233;
t1236 = t1334 * t1543 + t1337 * t1545;
t1742 = qJ(3) * t1236;
t1741 = t1236 * t1544;
t1740 = t1236 * t1546;
t1278 = t1360 * t1545 + t1366 * t1543;
t1739 = pkin(3) * t1334;
t1738 = pkin(7) * t1334;
t1737 = pkin(7) * t1337;
t1553 = cos(qJ(1));
t1550 = sin(qJ(1));
t1517 = g(1) * t1553 + g(2) * t1550;
t1679 = qJD(1) ^ 2;
t1506 = -pkin(1) * t1679 - t1517;
t1516 = g(1) * t1550 - t1553 * g(2);
t1585 = qJDD(1) * pkin(1) + t1516;
t1442 = t1544 * t1506 - t1546 * t1585;
t1443 = t1546 * t1506 + t1544 * t1585;
t1617 = t1442 * t1544 + t1546 * t1443;
t1349 = t1442 * t1546 - t1443 * t1544;
t1661 = t1349 * t1550;
t1728 = t1553 * t1617 + t1661;
t1660 = t1349 * t1553;
t1727 = -t1550 * t1617 + t1660;
t1624 = t1544 * t1643;
t1529 = t1543 * qJDD(1);
t1532 = t1545 * qJDD(1);
t1490 = t1529 * t1549 - t1552 * t1532;
t1644 = t1494 * qJD(4);
t1573 = t1490 + t1644;
t1645 = t1492 * t1552;
t1566 = qJD(4) * t1645 + t1549 * t1573;
t1646 = t1492 * t1549;
t1597 = qJD(4) * t1646 - t1552 * t1573;
t1685 = -t1543 * t1597 + t1545 * t1566;
t1701 = t1546 * t1685 - t1624;
t1623 = t1546 * t1643;
t1704 = t1544 * t1685 + t1623;
t1724 = -t1550 * t1704 + t1553 * t1701;
t1723 = t1550 * t1701 + t1553 * t1704;
t1481 = t1492 * qJD(4);
t1491 = t1588 * qJDD(1);
t1437 = t1491 - t1481;
t1642 = t1494 * t1549;
t1596 = -qJD(4) * t1642 + t1552 * t1437;
t1641 = t1494 * t1552;
t1598 = qJD(4) * t1641 + t1549 * t1437;
t1681 = -t1543 * t1598 + t1545 * t1596;
t1702 = t1546 * t1681 + t1624;
t1705 = t1544 * t1681 - t1623;
t1722 = -t1550 * t1705 + t1553 * t1702;
t1721 = t1550 * t1702 + t1553 * t1705;
t1578 = (-t1641 - t1646) * qJD(4);
t1579 = (t1642 - t1645) * qJD(4);
t1682 = -t1543 * t1578 + t1545 * t1579;
t1703 = -qJDD(4) * t1546 + t1544 * t1682;
t1706 = t1544 * qJDD(4) + t1546 * t1682;
t1720 = t1550 * t1706 + t1553 * t1703;
t1719 = -t1550 * t1703 + t1553 * t1706;
t1691 = -t1487 - t1678;
t1718 = pkin(2) * t1691;
t1717 = pkin(3) * t1691;
t1391 = -t1481 + t1437;
t1716 = qJ(5) * t1391;
t1688 = t1678 - t1487;
t1715 = t1544 * t1688;
t1714 = t1544 * t1691;
t1713 = t1546 * t1688;
t1712 = t1546 * t1691;
t1548 = sin(qJ(6));
t1551 = cos(qJ(6));
t1458 = qJD(4) * t1548 - t1551 * t1492;
t1460 = qJD(4) * t1551 + t1492 * t1548;
t1397 = t1460 * t1458;
t1422 = qJDD(6) + t1437;
t1693 = -t1397 + t1422;
t1711 = t1548 * t1693;
t1709 = t1551 * t1693;
t1555 = t1543 ^ 2;
t1533 = t1555 * t1679;
t1557 = t1545 ^ 2;
t1535 = t1557 * t1679;
t1512 = t1533 + t1535;
t1509 = qJDD(1) * t1544 + t1546 * t1679;
t1540 = g(3) - qJDD(2);
t1468 = qJ(2) * t1509 - t1540 * t1546;
t1510 = qJDD(1) * t1546 - t1544 * t1679;
t1592 = -qJ(2) * t1510 - t1540 * t1544;
t1690 = t1553 * t1509 + t1510 * t1550;
t1707 = pkin(6) * t1690 + t1553 * t1468 - t1550 * t1592;
t1448 = -t1509 * t1550 + t1553 * t1510;
t1700 = -pkin(6) * t1448 + t1550 * t1468 + t1553 * t1592;
t1687 = t1679 * (t1555 + t1557);
t1502 = t1545 * t1687;
t1452 = -t1502 * t1544 + t1532 * t1546;
t1454 = t1502 * t1546 + t1532 * t1544;
t1699 = t1452 * t1553 - t1454 * t1550;
t1698 = t1452 * t1550 + t1454 * t1553;
t1412 = -pkin(2) * t1679 + qJDD(1) * qJ(3) + t1443;
t1523 = t1545 * t1540;
t1637 = t1545 * t1679;
t1667 = pkin(7) * qJDD(1);
t1351 = -0.2e1 * qJD(3) * t1666 - t1523 + (pkin(3) * t1637 - t1412 - t1667) * t1543;
t1618 = 0.2e1 * qJD(1) * qJD(3) + t1412;
t1638 = t1543 * t1540;
t1355 = -pkin(3) * t1535 - t1638 + (t1618 + t1667) * t1545;
t1259 = -t1552 * t1351 + t1549 * t1355;
t1421 = pkin(4) * t1492 - qJ(5) * t1494;
t1196 = -qJDD(4) * pkin(4) - t1554 * qJ(5) + t1494 * t1421 + qJDD(5) + t1259;
t1390 = t1481 + t1437;
t1155 = pkin(5) * t1390 - pkin(8) * t1726 + t1196;
t1411 = -qJDD(1) * pkin(2) - qJ(3) * t1679 + qJDD(3) + t1442;
t1382 = -pkin(3) * t1532 - pkin(7) * t1512 + t1411;
t1565 = t1573 * pkin(4) + t1382 - t1716;
t1677 = 2 * qJD(5);
t1634 = pkin(5) * t1494 - qJD(4) * pkin(8) + t1677;
t1676 = pkin(4) + pkin(8);
t1163 = (qJD(4) * t1676 - t1634) * t1494 + t1490 * pkin(8) - t1487 * pkin(5) + t1565;
t1101 = -t1551 * t1155 + t1163 * t1548;
t1102 = t1155 * t1548 + t1163 * t1551;
t1048 = -t1551 * t1101 + t1102 * t1548;
t1383 = t1543 * t1618 + t1523;
t1384 = t1545 * t1618 - t1638;
t1300 = t1543 * t1383 + t1545 * t1384;
t1353 = -t1458 * qJD(6) + t1551 * qJDD(4) + t1548 * t1573;
t1485 = qJD(6) + t1494;
t1404 = t1485 * t1458;
t1692 = -t1404 + t1353;
t1615 = t1548 * qJDD(4) - t1551 * t1573;
t1310 = (qJD(6) - t1485) * t1460 + t1615;
t1684 = t1543 * t1566 + t1545 * t1597;
t1683 = t1543 * t1579 + t1545 * t1578;
t1680 = t1543 * t1596 + t1545 * t1598;
t1456 = t1458 ^ 2;
t1457 = t1460 ^ 2;
t1483 = t1485 ^ 2;
t1260 = t1549 * t1351 + t1552 * t1355;
t1153 = -t1259 * t1552 + t1260 * t1549;
t1675 = pkin(3) * t1153;
t1388 = -t1644 + t1573;
t1338 = -t1388 * t1549 - t1491 * t1552;
t1674 = pkin(3) * t1338;
t1673 = pkin(4) * t1552;
t1672 = pkin(5) * t1048;
t1568 = -t1554 * pkin(4) + qJDD(4) * qJ(5) - t1492 * t1421 + t1260;
t1160 = -pkin(5) * t1573 - pkin(8) * t1487 + qJD(4) * t1634 + t1568;
t1671 = pkin(5) * t1160;
t1312 = t1404 + t1353;
t1182 = -t1310 * t1548 - t1312 * t1551;
t1670 = pkin(5) * t1182;
t1668 = pkin(8) * t1048;
t1664 = t1153 * t1543;
t1663 = t1153 * t1545;
t1331 = t1397 + t1422;
t1662 = t1331 * t1551;
t1659 = t1382 * t1549;
t1658 = t1382 * t1552;
t1389 = t1644 + t1573;
t1657 = t1389 * t1552;
t1656 = t1391 * t1549;
t1649 = t1485 * t1460;
t1648 = t1485 * t1548;
t1647 = t1485 * t1551;
t1402 = t1543 * t1411;
t1403 = t1545 * t1411;
t1636 = t1548 * t1160;
t1635 = t1548 * t1331;
t1158 = t1551 * t1160;
t1194 = qJD(4) * t1677 + t1568;
t1632 = -pkin(4) * t1196 + qJ(5) * t1194;
t1631 = -pkin(4) * t1390 - qJ(5) * t1490;
t1630 = -pkin(2) * t1411 + qJ(3) * t1300;
t1629 = -t1457 + t1483;
t1627 = -t1457 - t1483;
t1626 = t1549 * t1397;
t1625 = t1552 * t1397;
t1519 = t1543 * t1637;
t1622 = pkin(2) * t1532 - qJ(3) * t1502 - t1403;
t1621 = qJ(5) * t1549 + pkin(3);
t1620 = t1543 * t1532;
t1256 = t1551 * t1627 - t1635;
t1619 = -pkin(8) * t1256 + t1158;
t1154 = t1259 * t1549 + t1552 * t1260;
t1616 = -t1516 * t1550 - t1553 * t1517;
t1038 = -t1048 * t1552 + t1160 * t1549;
t1039 = t1048 * t1549 + t1160 * t1552;
t1007 = -t1038 * t1543 + t1039 * t1545;
t1049 = t1548 * t1101 + t1551 * t1102;
t1013 = -t1049 * t1676 + t1671;
t1016 = -qJ(5) * t1049 + t1672;
t985 = -pkin(3) * t1049 + pkin(7) * t1039 + t1013 * t1552 + t1016 * t1549;
t993 = -pkin(7) * t1038 - t1013 * t1549 + t1016 * t1552;
t1614 = -pkin(2) * t1049 + qJ(3) * t1007 + t1543 * t993 + t1545 * t985;
t1184 = -t1310 * t1551 + t1548 * t1312;
t1344 = -t1456 - t1457;
t1575 = pkin(5) * t1344 - t1049;
t1031 = -t1184 * t1676 + t1575;
t1120 = -qJ(5) * t1184 + t1670;
t1150 = t1182 * t1549 + t1344 * t1552;
t1010 = -pkin(3) * t1184 + pkin(7) * t1150 + t1031 * t1552 + t1120 * t1549;
t1149 = -t1182 * t1552 + t1344 * t1549;
t1015 = -pkin(7) * t1149 - t1031 * t1549 + t1120 * t1552;
t1090 = -t1149 * t1543 + t1150 * t1545;
t1613 = -pkin(2) * t1184 + qJ(3) * t1090 + t1545 * t1010 + t1543 * t1015;
t1354 = -t1483 - t1456;
t1238 = t1354 * t1551 - t1711;
t1237 = t1548 * t1354 + t1709;
t1583 = -pkin(5) * t1237 + t1101;
t1062 = -qJ(5) * t1238 - t1583;
t1309 = (qJD(6) + t1485) * t1460 + t1615;
t1595 = pkin(5) * t1309 + t1158;
t1076 = -t1238 * t1676 + t1595;
t1162 = t1237 * t1549 + t1309 * t1552;
t1019 = -pkin(3) * t1238 + pkin(7) * t1162 + t1062 * t1549 + t1076 * t1552;
t1161 = -t1237 * t1552 + t1309 * t1549;
t1025 = -pkin(7) * t1161 + t1062 * t1552 - t1076 * t1549;
t1105 = -t1161 * t1543 + t1162 * t1545;
t1612 = -pkin(2) * t1238 + qJ(3) * t1105 + t1545 * t1019 + t1543 * t1025;
t1257 = -t1548 * t1627 - t1662;
t1574 = -pkin(5) * t1256 + t1102;
t1063 = -qJ(5) * t1257 - t1574;
t1594 = pkin(5) * t1692 - t1636;
t1079 = -t1257 * t1676 + t1594;
t1167 = t1256 * t1549 + t1552 * t1692;
t1021 = -pkin(3) * t1257 + pkin(7) * t1167 + t1063 * t1549 + t1079 * t1552;
t1166 = -t1256 * t1552 + t1549 * t1692;
t1028 = -pkin(7) * t1166 + t1063 * t1552 - t1079 * t1549;
t1108 = -t1166 * t1543 + t1167 * t1545;
t1611 = -pkin(2) * t1257 + qJ(3) * t1108 + t1545 * t1021 + t1543 * t1028;
t1128 = t1194 * t1552 + t1196 * t1549;
t1208 = (pkin(4) * qJD(4) - (2 * qJD(5))) * t1494 + t1565;
t1056 = pkin(7) * t1128 + (-t1621 - t1673) * t1208;
t1127 = t1194 * t1549 - t1196 * t1552;
t1068 = -t1127 * t1543 + t1128 * t1545;
t1072 = -pkin(7) * t1127 + (pkin(4) * t1549 - qJ(5) * t1552) * t1208;
t1610 = -pkin(2) * t1208 + qJ(3) * t1068 + t1545 * t1056 + t1543 * t1072;
t1170 = -pkin(4) * t1691 + t1194;
t1171 = -qJ(5) * t1691 + t1196;
t1343 = t1390 * t1549 - t1490 * t1552;
t1087 = pkin(7) * t1343 + t1170 * t1552 + t1171 * t1549 - t1717;
t1340 = -t1390 * t1552 - t1490 * t1549;
t1096 = -pkin(7) * t1340 - t1170 * t1549 + t1171 * t1552;
t1247 = -t1340 * t1543 + t1343 * t1545;
t1609 = qJ(3) * t1247 + t1545 * t1087 + t1543 * t1096 - t1718;
t1562 = -t1494 * t1677 + t1565;
t1177 = (t1389 + t1644) * pkin(4) + t1562;
t1123 = t1552 * t1177 + t1389 * t1621 + t1737;
t1135 = qJ(5) * t1657 - t1177 * t1549 + t1738;
t1608 = pkin(2) * t1389 + t1545 * t1123 + t1543 * t1135 + t1742;
t1341 = -t1388 * t1552 + t1491 * t1549;
t1125 = pkin(7) * t1341 + t1154 - t1717;
t1136 = -pkin(7) * t1338 - t1153;
t1245 = -t1338 * t1543 + t1341 * t1545;
t1607 = qJ(3) * t1245 + t1545 * t1125 + t1543 * t1136 - t1718;
t1176 = -pkin(4) * t1644 - t1562 + t1716;
t1131 = t1746 + t1549 * t1176 + (pkin(3) + t1673) * t1391;
t1141 = -pkin(4) * t1656 + t1176 * t1552 - t1747;
t1606 = pkin(2) * t1391 + t1545 * t1131 + t1543 * t1141 - t1755;
t1435 = t1490 + 0.2e1 * t1644;
t1210 = -pkin(3) * t1435 - t1658 - t1737;
t1262 = t1659 - t1738;
t1605 = -pkin(2) * t1435 + t1545 * t1210 + t1543 * t1262 - t1742;
t1436 = t1491 - 0.2e1 * t1481;
t1241 = -pkin(3) * t1436 + t1659 - t1746;
t1296 = t1658 + t1747;
t1604 = -pkin(2) * t1436 + t1545 * t1241 + t1543 * t1296 + t1755;
t1528 = t1555 * qJDD(1);
t1531 = t1557 * qJDD(1);
t1507 = t1531 + t1528;
t1603 = pkin(2) * t1512 + qJ(3) * t1507 + t1300;
t1602 = pkin(3) * t1127 + t1632;
t1601 = pkin(3) * t1340 + t1631;
t1600 = -pkin(4) * t1048 + qJ(5) * t1160 - t1668;
t1515 = qJDD(1) * t1553 - t1550 * t1679;
t1599 = -pkin(6) * t1515 - g(3) * t1550;
t1593 = -pkin(8) * t1237 + t1636;
t1299 = t1383 * t1545 - t1384 * t1543;
t1461 = t1509 * t1545 * t1543;
t1462 = -t1519 * t1544 + t1546 * t1620;
t1591 = t1461 * t1553 + t1462 * t1550;
t1590 = t1461 * t1550 - t1462 * t1553;
t1589 = t1516 * t1553 - t1517 * t1550;
t1587 = -pkin(4) * t1256 + qJ(5) * t1692 + t1619;
t1501 = t1543 * t1687;
t1586 = -pkin(2) * t1529 + qJ(3) * t1501 + t1402;
t1584 = -t1259 + t1739;
t1582 = -pkin(8) * t1182 - t1048;
t1095 = t1154 * t1545 - t1664;
t1142 = -pkin(3) * t1382 + pkin(7) * t1154;
t1581 = -pkin(2) * t1382 - pkin(7) * t1664 + qJ(3) * t1095 + t1545 * t1142;
t1580 = pkin(3) * t1038 + t1600;
t1577 = -pkin(4) * t1237 + qJ(5) * t1309 + t1593;
t1576 = -t1260 - t1748;
t1572 = pkin(3) * t1166 + t1587;
t1571 = -pkin(4) * t1182 + qJ(5) * t1344 + t1582;
t1570 = pkin(3) * t1161 + t1577;
t1569 = pkin(3) * t1149 + t1571;
t1567 = -pkin(4) * t1726 - qJ(5) * t1428 + t1196;
t1563 = t1567 - t1739;
t1560 = pkin(4) * t1473 + qJ(5) * t1725 + t1194;
t1559 = t1560 + t1748;
t1518 = 0.2e1 * t1620;
t1514 = qJDD(1) * t1550 + t1553 * t1679;
t1513 = t1535 - t1533;
t1508 = t1531 - t1528;
t1486 = -pkin(6) * t1514 + g(3) * t1553;
t1453 = t1501 * t1546 + t1529 * t1544;
t1450 = t1501 * t1544 - t1529 * t1546;
t1447 = t1508 * t1546 - t1513 * t1544;
t1446 = t1507 * t1546 - t1512 * t1544;
t1445 = t1508 * t1544 + t1513 * t1546;
t1444 = t1507 * t1544 + t1512 * t1546;
t1401 = t1456 - t1483;
t1400 = -pkin(1) * t1509 - t1443;
t1399 = pkin(1) * t1510 - t1442;
t1394 = t1457 - t1456;
t1370 = -t1450 * t1550 + t1453 * t1553;
t1369 = t1450 * t1553 + t1453 * t1550;
t1352 = -qJD(6) * t1460 - t1615;
t1346 = pkin(1) * t1349;
t1342 = -t1435 * t1552 - t1436 * t1549;
t1339 = -t1435 * t1549 + t1436 * t1552;
t1332 = pkin(1) * t1540 + qJ(2) * t1617;
t1327 = (-t1458 * t1551 + t1460 * t1548) * t1485;
t1326 = (-t1458 * t1548 - t1460 * t1551) * t1485;
t1321 = pkin(1) * t1452 + t1622;
t1320 = pkin(1) * t1450 + t1586;
t1315 = -t1656 - t1657;
t1314 = -t1389 * t1549 + t1391 * t1552;
t1304 = t1353 * t1551 - t1460 * t1648;
t1303 = t1353 * t1548 + t1460 * t1647;
t1302 = t1352 * t1548 - t1458 * t1647;
t1301 = -t1352 * t1551 - t1458 * t1648;
t1272 = t1326 * t1549 + t1422 * t1552;
t1271 = -t1326 * t1552 + t1422 * t1549;
t1270 = -qJ(2) * t1450 - t1384 * t1544 + t1403 * t1546;
t1269 = -qJ(2) * t1452 - t1383 * t1544 + t1402 * t1546;
t1268 = qJ(2) * t1453 + t1384 * t1546 + t1403 * t1544;
t1267 = -qJ(2) * t1454 + t1383 * t1546 + t1402 * t1544;
t1266 = t1401 * t1551 - t1635;
t1265 = -t1548 * t1629 + t1709;
t1264 = t1401 * t1548 + t1662;
t1263 = t1551 * t1629 + t1711;
t1255 = t1491 * t1544 - t1749;
t1254 = -t1490 * t1544 - t1753;
t1253 = -t1491 * t1546 - t1750;
t1252 = t1490 * t1546 - t1754;
t1249 = -qJ(2) * t1444 + t1299 * t1546;
t1248 = qJ(2) * t1446 + t1299 * t1544;
t1246 = -t1339 * t1543 + t1342 * t1545;
t1244 = t1340 * t1545 + t1343 * t1543;
t1243 = t1339 * t1545 + t1342 * t1543;
t1242 = t1338 * t1545 + t1341 * t1543;
t1219 = t1300 * t1546 + t1411 * t1544;
t1218 = t1300 * t1544 - t1411 * t1546;
t1217 = t1436 * t1544 + t1751;
t1216 = -t1436 * t1546 + t1752;
t1215 = t1303 * t1549 + t1625;
t1214 = -t1301 * t1549 - t1625;
t1213 = -t1303 * t1552 + t1626;
t1212 = t1301 * t1552 - t1626;
t1211 = pkin(1) * t1444 + t1603;
t1206 = -t1390 * t1544 + t1749;
t1205 = -t1391 * t1544 - t1751;
t1204 = t1388 * t1544 + t1753;
t1203 = t1390 * t1546 + t1750;
t1202 = t1391 * t1546 - t1752;
t1201 = -t1388 * t1546 + t1754;
t1200 = t1246 * t1546 + t1715;
t1199 = t1246 * t1544 - t1713;
t1198 = t1435 * t1544 - t1740;
t1197 = -t1435 * t1546 - t1741;
t1192 = t1247 * t1546 + t1714;
t1191 = t1245 * t1546 + t1714;
t1190 = t1247 * t1544 - t1712;
t1189 = t1245 * t1544 - t1712;
t1188 = -t1389 * t1544 + t1740;
t1187 = t1389 * t1546 + t1741;
t1186 = -t1314 * t1543 + t1315 * t1545;
t1185 = t1314 * t1545 + t1315 * t1543;
t1183 = -t1309 * t1551 - t1548 * t1692;
t1181 = -t1548 * t1309 + t1551 * t1692;
t1178 = -pkin(2) * t1242 - t1674;
t1175 = t1263 * t1549 + t1312 * t1552;
t1174 = t1264 * t1549 - t1310 * t1552;
t1173 = -t1263 * t1552 + t1312 * t1549;
t1172 = -t1264 * t1552 - t1310 * t1549;
t1169 = t1186 * t1546 + t1715;
t1168 = t1186 * t1544 - t1713;
t1165 = -t1271 * t1543 + t1272 * t1545;
t1164 = t1271 * t1545 + t1272 * t1543;
t1157 = t1181 * t1549 + t1394 * t1552;
t1156 = -t1181 * t1552 + t1394 * t1549;
t1151 = -pkin(2) * t1244 - t1601;
t1148 = pkin(1) * t1218 + t1630;
t1147 = -t1576 + t1757;
t1146 = -t1213 * t1543 + t1215 * t1545;
t1145 = -t1212 * t1543 + t1214 * t1545;
t1144 = t1213 * t1545 + t1215 * t1543;
t1143 = t1212 * t1545 + t1214 * t1543;
t1138 = t1165 * t1546 + t1327 * t1544;
t1137 = t1165 * t1544 - t1327 * t1546;
t1132 = -t1584 - t1744;
t1130 = -qJ(2) * t1218 - (pkin(2) * t1544 - qJ(3) * t1546) * t1299;
t1126 = -t1241 * t1543 + t1296 * t1545 + t1756;
t1121 = -t1559 - t1757;
t1119 = t1146 * t1546 + t1304 * t1544;
t1118 = t1145 * t1546 - t1302 * t1544;
t1117 = t1146 * t1544 - t1304 * t1546;
t1116 = t1145 * t1544 + t1302 * t1546;
t1115 = -t1210 * t1543 + t1262 * t1545 - t1743;
t1114 = -t1173 * t1543 + t1175 * t1545;
t1113 = -t1172 * t1543 + t1174 * t1545;
t1112 = t1173 * t1545 + t1175 * t1543;
t1111 = t1172 * t1545 + t1174 * t1543;
t1110 = -t1563 + t1744;
t1109 = qJ(2) * t1219 - (-pkin(2) * t1546 - qJ(3) * t1544 - pkin(1)) * t1299;
t1107 = t1166 * t1545 + t1167 * t1543;
t1104 = t1161 * t1545 + t1162 * t1543;
t1098 = -t1156 * t1543 + t1157 * t1545;
t1097 = t1156 * t1545 + t1157 * t1543;
t1094 = t1154 * t1543 + t1663;
t1091 = pkin(1) * t1216 + t1604;
t1089 = t1149 * t1545 + t1150 * t1543;
t1085 = t1114 * t1546 + t1265 * t1544;
t1084 = t1113 * t1546 + t1266 * t1544;
t1083 = t1114 * t1544 - t1265 * t1546;
t1082 = t1113 * t1544 - t1266 * t1546;
t1081 = t1095 * t1546 + t1382 * t1544;
t1080 = t1095 * t1544 - t1382 * t1546;
t1078 = t1108 * t1546 + t1257 * t1544;
t1077 = t1108 * t1544 - t1257 * t1546;
t1075 = pkin(1) * t1197 + t1605;
t1074 = t1105 * t1546 + t1238 * t1544;
t1073 = t1105 * t1544 - t1238 * t1546;
t1070 = t1098 * t1546 + t1183 * t1544;
t1069 = t1098 * t1544 - t1183 * t1546;
t1067 = t1127 * t1545 + t1128 * t1543;
t1065 = t1090 * t1546 + t1184 * t1544;
t1064 = t1090 * t1544 - t1184 * t1546;
t1061 = -pkin(2) * t1094 - t1675;
t1060 = -t1131 * t1543 + t1141 * t1545 - t1756;
t1059 = -qJ(2) * t1216 + t1126 * t1546 - t1147 * t1544;
t1058 = -qJ(3) * t1242 - t1125 * t1543 + t1136 * t1545;
t1057 = -t1123 * t1543 + t1135 * t1545 + t1743;
t1054 = t1068 * t1546 + t1208 * t1544;
t1053 = t1068 * t1544 - t1208 * t1546;
t1052 = qJ(2) * t1217 + t1126 * t1544 + t1147 * t1546 + t1758;
t1051 = -qJ(2) * t1197 + t1115 * t1546 - t1132 * t1544;
t1050 = pkin(1) * t1202 + t1606;
t1045 = pkin(1) * t1189 + t1607;
t1044 = qJ(2) * t1198 + t1115 * t1544 + t1132 * t1546 - t1745;
t1043 = pkin(1) * t1187 + t1608;
t1042 = -pkin(7) * t1663 - qJ(3) * t1094 - t1142 * t1543;
t1041 = -qJ(3) * t1244 - t1087 * t1543 + t1096 * t1545;
t1040 = -qJ(2) * t1189 + t1058 * t1546 - t1178 * t1544;
t1037 = -pkin(2) * t1107 - t1572;
t1036 = -pkin(2) * t1104 - t1570;
t1035 = -qJ(2) * t1202 + t1060 * t1546 - t1121 * t1544;
t1034 = -pkin(1) * t1242 + qJ(2) * t1191 + t1058 * t1544 + t1178 * t1546;
t1033 = -pkin(2) * t1067 - t1602;
t1032 = pkin(1) * t1190 + t1609;
t1030 = qJ(2) * t1205 + t1060 * t1544 + t1121 * t1546 - t1758;
t1029 = -qJ(2) * t1187 + t1057 * t1546 - t1110 * t1544;
t1026 = qJ(2) * t1188 + t1057 * t1544 + t1110 * t1546 + t1745;
t1023 = -qJ(2) * t1190 + t1041 * t1546 - t1151 * t1544;
t1022 = pkin(1) * t1080 + t1581;
t1017 = -pkin(1) * t1244 + qJ(2) * t1192 + t1041 * t1544 + t1151 * t1546;
t1012 = -qJ(3) * t1067 - t1056 * t1543 + t1072 * t1545;
t1011 = -pkin(2) * t1089 - t1569;
t1008 = -qJ(2) * t1080 + t1042 * t1546 - t1061 * t1544;
t1006 = t1038 * t1545 + t1039 * t1543;
t1004 = -pkin(1) * t1094 + qJ(2) * t1081 + t1042 * t1544 + t1061 * t1546;
t1003 = pkin(1) * t1053 + t1610;
t1002 = t1007 * t1546 + t1049 * t1544;
t1001 = t1007 * t1544 - t1049 * t1546;
t1000 = -qJ(3) * t1107 - t1021 * t1543 + t1028 * t1545;
t999 = -qJ(3) * t1104 - t1019 * t1543 + t1025 * t1545;
t998 = pkin(1) * t1077 + t1611;
t997 = -qJ(2) * t1053 + t1012 * t1546 - t1033 * t1544;
t996 = pkin(1) * t1073 + t1612;
t995 = -qJ(3) * t1089 - t1010 * t1543 + t1015 * t1545;
t994 = -pkin(1) * t1067 + qJ(2) * t1054 + t1012 * t1544 + t1033 * t1546;
t991 = -qJ(2) * t1077 + t1000 * t1546 - t1037 * t1544;
t990 = -qJ(2) * t1073 - t1036 * t1544 + t1546 * t999;
t989 = pkin(1) * t1064 + t1613;
t988 = -pkin(2) * t1006 - t1580;
t987 = -pkin(1) * t1107 + qJ(2) * t1078 + t1000 * t1544 + t1037 * t1546;
t986 = -pkin(1) * t1104 + qJ(2) * t1074 + t1036 * t1546 + t1544 * t999;
t983 = -qJ(2) * t1064 - t1011 * t1544 + t1546 * t995;
t982 = -pkin(1) * t1089 + qJ(2) * t1065 + t1011 * t1546 + t1544 * t995;
t981 = -qJ(3) * t1006 - t1543 * t985 + t1545 * t993;
t980 = pkin(1) * t1001 + t1614;
t979 = -qJ(2) * t1001 - t1544 * t988 + t1546 * t981;
t978 = -pkin(1) * t1006 + qJ(2) * t1002 + t1544 * t981 + t1546 * t988;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1515, 0, -t1514, 0, t1599, -t1486, -t1589, -pkin(6) * t1589, 0, 0, t1448, 0, -t1690, 0, t1700, t1707, t1727, pkin(6) * t1727 + qJ(2) * t1660 - t1550 * t1332, -t1590, -t1445 * t1550 + t1447 * t1553, t1370, t1590, t1698, 0, -pkin(6) * t1699 - t1550 * t1267 + t1553 * t1269, -pkin(6) * t1369 - t1268 * t1550 + t1270 * t1553, t1553 * t1249 - t1550 * t1248 - pkin(6) * (t1444 * t1553 + t1446 * t1550), t1553 * t1130 - t1550 * t1109 - pkin(6) * (t1218 * t1553 + t1219 * t1550), t1722, -t1199 * t1550 + t1200 * t1553, -t1253 * t1550 + t1255 * t1553, t1724, -t1252 * t1550 + t1254 * t1553, t1719, t1553 * t1051 - t1550 * t1044 - pkin(6) * (t1197 * t1553 + t1198 * t1550), t1553 * t1059 - t1550 * t1052 - pkin(6) * (t1216 * t1553 + t1217 * t1550), t1553 * t1040 - t1550 * t1034 - pkin(6) * (t1189 * t1553 + t1191 * t1550), t1553 * t1008 - t1550 * t1004 - pkin(6) * (t1080 * t1553 + t1081 * t1550), t1719, -t1203 * t1550 + t1206 * t1553, -t1201 * t1550 + t1204 * t1553, t1722, -t1168 * t1550 + t1169 * t1553, t1724, t1553 * t1023 - t1550 * t1017 - pkin(6) * (t1190 * t1553 + t1192 * t1550), t1553 * t1029 - t1550 * t1026 - pkin(6) * (t1187 * t1553 + t1188 * t1550), t1553 * t1035 - t1550 * t1030 - pkin(6) * (t1202 * t1553 + t1205 * t1550), t1553 * t997 - t1550 * t994 - pkin(6) * (t1053 * t1553 + t1054 * t1550), -t1117 * t1550 + t1119 * t1553, -t1069 * t1550 + t1070 * t1553, -t1083 * t1550 + t1085 * t1553, -t1116 * t1550 + t1118 * t1553, -t1082 * t1550 + t1084 * t1553, -t1137 * t1550 + t1138 * t1553, t1553 * t990 - t1550 * t986 - pkin(6) * (t1073 * t1553 + t1074 * t1550), t1553 * t991 - t1550 * t987 - pkin(6) * (t1077 * t1553 + t1078 * t1550), t1553 * t983 - t1550 * t982 - pkin(6) * (t1064 * t1553 + t1065 * t1550), t1553 * t979 - t1550 * t978 - pkin(6) * (t1001 * t1553 + t1002 * t1550); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1514, 0, t1515, 0, t1486, t1599, t1616, pkin(6) * t1616, 0, 0, t1690, 0, t1448, 0, -t1707, t1700, t1728, pkin(6) * t1728 + qJ(2) * t1661 + t1553 * t1332, t1591, t1445 * t1553 + t1447 * t1550, t1369, -t1591, -t1699, 0, -pkin(6) * t1698 + t1553 * t1267 + t1550 * t1269, pkin(6) * t1370 + t1268 * t1553 + t1270 * t1550, t1550 * t1249 + t1553 * t1248 + pkin(6) * (-t1444 * t1550 + t1446 * t1553), t1550 * t1130 + t1553 * t1109 + pkin(6) * (-t1218 * t1550 + t1219 * t1553), t1721, t1199 * t1553 + t1200 * t1550, t1253 * t1553 + t1255 * t1550, t1723, t1252 * t1553 + t1254 * t1550, t1720, t1550 * t1051 + t1553 * t1044 + pkin(6) * (-t1197 * t1550 + t1198 * t1553), t1550 * t1059 + t1553 * t1052 + pkin(6) * (-t1216 * t1550 + t1217 * t1553), t1550 * t1040 + t1553 * t1034 + pkin(6) * (-t1189 * t1550 + t1191 * t1553), t1550 * t1008 + t1553 * t1004 + pkin(6) * (-t1080 * t1550 + t1081 * t1553), t1720, t1203 * t1553 + t1206 * t1550, t1201 * t1553 + t1204 * t1550, t1721, t1168 * t1553 + t1169 * t1550, t1723, t1550 * t1023 + t1553 * t1017 + pkin(6) * (-t1190 * t1550 + t1192 * t1553), t1550 * t1029 + t1553 * t1026 + pkin(6) * (-t1187 * t1550 + t1188 * t1553), t1550 * t1035 + t1553 * t1030 + pkin(6) * (-t1202 * t1550 + t1205 * t1553), t1550 * t997 + t1553 * t994 + pkin(6) * (-t1053 * t1550 + t1054 * t1553), t1117 * t1553 + t1119 * t1550, t1069 * t1553 + t1070 * t1550, t1083 * t1553 + t1085 * t1550, t1116 * t1553 + t1118 * t1550, t1082 * t1553 + t1084 * t1550, t1137 * t1553 + t1138 * t1550, t1550 * t990 + t1553 * t986 + pkin(6) * (-t1073 * t1550 + t1074 * t1553), t1550 * t991 + t1553 * t987 + pkin(6) * (-t1077 * t1550 + t1078 * t1553), t1550 * t983 + t1553 * t982 + pkin(6) * (-t1064 * t1550 + t1065 * t1553), t1550 * t979 + t1553 * t978 + pkin(6) * (-t1001 * t1550 + t1002 * t1553); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1516, t1517, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1399, t1400, 0, -t1346, t1528, t1518, 0, t1531, 0, 0, t1321, t1320, t1211, t1148, t1680, t1243, t1278, t1684, t1275, t1683, t1075, t1091, t1045, t1022, t1683, -t1278, -t1275, t1680, t1185, t1684, t1032, t1043, t1050, t1003, t1144, t1097, t1112, t1143, t1111, t1164, t996, t998, t989, t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1679, 0, 0, -g(3), -t1516, 0, 0, 0, t1510, 0, -t1509, 0, t1592, t1468, t1349, qJ(2) * t1349, t1462, t1447, t1453, -t1462, t1454, 0, t1269, t1270, t1249, t1130, t1702, t1200, t1255, t1701, t1254, t1706, t1051, t1059, t1040, t1008, t1706, t1206, t1204, t1702, t1169, t1701, t1023, t1029, t1035, t997, t1119, t1070, t1085, t1118, t1084, t1138, t990, t991, t983, t979; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1679, 0, qJDD(1), 0, g(3), 0, -t1517, 0, 0, 0, t1509, 0, t1510, 0, -t1468, t1592, t1617, t1332, t1461, t1445, t1450, -t1461, -t1452, 0, t1267, t1268, t1248, t1109, t1705, t1199, t1253, t1704, t1252, t1703, t1044, t1052, t1034, t1004, t1703, t1203, t1201, t1705, t1168, t1704, t1017, t1026, t1030, t994, t1117, t1069, t1083, t1116, t1082, t1137, t986, t987, t982, t978; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1516, t1517, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1399, t1400, 0, -t1346, t1528, t1518, 0, t1531, 0, 0, t1321, t1320, t1211, t1148, t1680, t1243, t1278, t1684, t1275, t1683, t1075, t1091, t1045, t1022, t1683, -t1278, -t1275, t1680, t1185, t1684, t1032, t1043, t1050, t1003, t1144, t1097, t1112, t1143, t1111, t1164, t996, t998, t989, t980; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1679, 0, 0, -t1540, t1442, 0, t1620, t1508, t1501, -t1620, t1502, 0, t1402, t1403, t1299, qJ(3) * t1299, t1681, t1246, -t1285, t1685, -t1282, t1682, t1115, t1126, t1058, t1042, t1682, t1285, t1282, t1681, t1186, t1685, t1041, t1057, t1060, t1012, t1146, t1098, t1114, t1145, t1113, t1165, t999, t1000, t995, t981; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1679, 0, qJDD(1), 0, t1540, 0, t1443, 0, t1519, t1513, -t1529, -t1519, -t1532, 0, t1383, t1384, 0, pkin(2) * t1299, -t1643, -t1688, -t1491, t1643, t1490, -qJDD(4), t1132, t1147, t1178, t1061, -qJDD(4), t1390, -t1388, -t1643, -t1688, t1643, t1151, t1110, t1121, t1033, -t1304, -t1183, -t1265, t1302, -t1266, -t1327, t1036, t1037, t1011, t988; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1442, -t1443, 0, 0, t1528, t1518, 0, t1531, 0, 0, t1622, t1586, t1603, t1630, t1680, t1243, t1278, t1684, t1275, t1683, t1605, t1604, t1607, t1581, t1683, -t1278, -t1275, t1680, t1185, t1684, t1609, t1608, t1606, t1610, t1144, t1097, t1112, t1143, t1111, t1164, t1612, t1611, t1613, t1614; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1529, t1532, t1519, 0, t1535, 0, 0, t1411, t1383, 0, t1596, t1342, t1366, t1566, -t1364, t1579, t1262, t1296, t1136, -pkin(7) * t1153, t1579, -t1366, t1364, t1596, t1315, t1566, t1096, t1135, t1141, t1072, t1215, t1157, t1175, t1214, t1174, t1272, t1025, t1028, t1015, t993; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1529, -t1533, t1532, -t1519, 0, -t1411, 0, t1384, 0, t1598, t1339, t1360, t1597, t1357, t1578, t1210, t1241, t1125, t1142, t1578, -t1360, -t1357, t1598, t1314, t1597, t1087, t1123, t1131, t1056, t1213, t1156, t1173, t1212, t1172, t1271, t1019, t1021, t1010, t985; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1519, -t1513, t1529, t1519, t1532, 0, -t1383, -t1384, 0, 0, t1643, t1688, t1491, -t1643, -t1490, qJDD(4), t1584, t1576, t1674, t1675, qJDD(4), -t1390, t1388, t1643, t1688, -t1643, t1601, t1563, t1559, t1602, t1304, t1183, t1265, -t1302, t1266, t1327, t1570, t1572, t1569, t1580; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1437, -t1435, t1726, t1481, -t1472, -t1481, 0, t1382, t1259, 0, -t1481, -t1726, t1472, t1437, -t1389, t1481, t1171, qJ(5) * t1389, t1176, -qJ(5) * t1208, t1397, t1394, t1312, -t1397, -t1310, t1422, t1062, t1063, t1120, t1016; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1644, t1436, t1689, -t1573, t1725, -t1644, -t1382, 0, t1260, 0, -t1644, -t1689, -t1725, t1644, t1391, -t1573, t1170, t1177, pkin(4) * t1391, -pkin(4) * t1208, -t1303, -t1181, -t1263, t1301, -t1264, -t1326, t1076, t1079, t1031, t1013; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1643, t1688, t1491, -t1643, -t1490, qJDD(4), -t1259, -t1260, 0, 0, qJDD(4), -t1390, t1388, t1643, t1688, -t1643, t1631, t1567, t1560, t1632, t1304, t1183, t1265, -t1302, t1266, t1327, t1577, t1587, t1571, t1600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(4), -t1390, t1388, t1643, t1688, -t1643, 0, t1196, t1194, 0, t1304, t1183, t1265, -t1302, t1266, t1327, t1593, t1619, t1582, -t1668; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1481, t1726, -t1472, -t1437, t1389, -t1481, -t1196, 0, t1208, 0, -t1397, -t1394, -t1312, t1397, t1310, -t1422, t1583, t1574, -t1670, -t1672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1644, t1689, t1725, -t1644, -t1391, t1573, -t1194, -t1208, 0, 0, t1303, t1181, t1263, -t1301, t1264, t1326, pkin(8) * t1238 - t1595, pkin(8) * t1257 - t1594, pkin(8) * t1184 - t1575, pkin(8) * t1049 - t1671; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1353, -t1309, t1693, t1404, t1401, -t1404, 0, t1160, t1101, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1649, t1692, t1629, t1352, t1331, -t1649, -t1160, 0, t1102, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1397, t1394, t1312, -t1397, -t1310, t1422, -t1101, -t1102, 0, 0;];
m_new_reg  = t1;
