% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRPR11_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR11_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR11_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR11_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:15:04
% EndTime: 2019-03-09 11:15:16
% DurationCPUTime: 4.77s
% Computational Cost: add. (5722->328), mult. (12192->581), div. (0->0), fcn. (10780->8), ass. (0->188)
t114 = sin(qJ(6));
t220 = cos(qJ(6));
t115 = sin(qJ(4));
t117 = cos(qJ(4));
t215 = sin(pkin(10));
t216 = cos(pkin(10));
t83 = t216 * t115 + t215 * t117;
t176 = t215 * t115;
t177 = t216 * t117;
t84 = t177 - t176;
t155 = t114 * t84 + t220 * t83;
t153 = t84 * qJD(4);
t154 = t114 * t83 - t220 * t84;
t233 = t83 * qJD(4);
t21 = t154 * qJD(6) + t114 * t233 - t220 * t153;
t236 = t155 * t21;
t146 = t83 * t153;
t218 = t84 * t233;
t258 = -0.2e1 * t146 + 0.2e1 * t218;
t118 = cos(qJ(2));
t221 = pkin(3) + pkin(7);
t152 = t115 * qJ(3) + t117 * t221;
t211 = t118 * qJ(5);
t116 = sin(qJ(2));
t212 = t116 * qJ(3);
t222 = pkin(2) + pkin(8);
t151 = -t222 * t118 - t212;
t81 = -pkin(1) + t151;
t175 = -t81 + t211;
t197 = qJ(5) + t222;
t199 = t118 * qJD(5);
t200 = t116 * qJD(3);
t213 = t115 * t116;
t191 = t221 * t116;
t86 = t115 * t191;
t123 = (t199 + t200) * t115 + (t175 * t117 - t86) * qJD(4) + (-t197 * t213 + (pkin(4) + t152) * t118) * qJD(2);
t207 = qJD(2) * t117;
t181 = t116 * t207;
t203 = qJD(4) * t118;
t185 = t115 * t203;
t145 = t181 + t185;
t105 = qJD(2) * t118;
t169 = t221 * t105;
t205 = qJD(4) * t115;
t187 = qJD(4) * t221;
t192 = t222 * t116;
t214 = qJ(3) * t118;
t245 = t192 - t214;
t247 = -t245 * qJD(2) - t116 * t187 + t200;
t25 = -t115 * t169 + t247 * t117 + t81 * t205;
t129 = -qJ(5) * t145 + t117 * t199 + t25;
t127 = t216 * t129;
t12 = t215 * t123 - t127;
t173 = qJD(2) * t215;
t174 = qJD(2) * t216;
t148 = -t116 * t117 * t174 + t173 * t213;
t131 = t118 * t233 - t148;
t120 = pkin(9) * t131 + t12;
t126 = t215 * t129;
t11 = t216 * t123 + t126;
t208 = qJD(2) * t116;
t41 = t153 * t118 - t83 * t208;
t121 = pkin(5) * t105 + t41 * pkin(9) + t11;
t87 = t117 * t191;
t40 = t116 * pkin(4) + t175 * t115 + t87;
t51 = t117 * t81 + t86;
t43 = -t117 * t211 + t51;
t19 = -t215 * t43 + t216 * t40;
t67 = t83 * t118;
t137 = t116 * pkin(5) + t67 * pkin(9) + t19;
t135 = t220 * t137;
t94 = t118 * t177;
t156 = t118 * t176 - t94;
t20 = t215 * t40 + t216 * t43;
t16 = pkin(9) * t156 + t20;
t202 = qJD(6) * t114;
t1 = -qJD(6) * t135 - t114 * t121 - t220 * t120 + t16 * t202;
t119 = -t114 * t120 + t220 * t121;
t136 = t114 * t137;
t9 = t220 * t16 + t136;
t2 = -qJD(6) * t9 + t119;
t257 = -t1 * t155 - t154 * t2 - t21 * t9;
t157 = t197 * t215;
t158 = t197 * t216;
t52 = t115 * t157 - t117 * t158;
t134 = -t84 * pkin(9) + t52;
t133 = t114 * t134;
t53 = -t115 * t158 - t117 * t157;
t37 = -pkin(9) * t83 + t53;
t18 = t220 * t37 + t133;
t143 = -t117 * qJD(5) + t197 * t205;
t204 = qJD(4) * t117;
t144 = -t115 * qJD(5) - t197 * t204;
t36 = t215 * t143 + t216 * t144;
t124 = -pkin(9) * t153 + t36;
t35 = t216 * t143 - t215 * t144;
t125 = pkin(9) * t233 + t35;
t130 = t220 * t134;
t6 = -qJD(6) * t130 - t114 * t125 - t220 * t124 + t37 * t202;
t179 = qJD(6) * t220;
t7 = -qJD(6) * t133 - t114 * t124 + t220 * t125 - t37 * t179;
t256 = t154 * t7 + t155 * t6 + t18 * t21;
t39 = t114 * t156 - t220 * t67;
t14 = t39 * qJD(6) - t114 * t41 - t220 * t131;
t142 = t220 * t156;
t38 = -t114 * t67 - t142;
t255 = t14 * t155 - t21 * t38;
t164 = t216 * pkin(4) + pkin(5);
t186 = t215 * pkin(4);
t70 = -t114 * t186 + t220 * t164;
t61 = t70 * qJD(6);
t71 = t114 * t164 + t220 * t186;
t62 = t71 * qJD(6);
t254 = -t154 * t62 - t155 * t61 + t21 * t71;
t253 = -t105 * t155 + t21 * t116;
t252 = (-t153 * t215 + t216 * t233) * pkin(4);
t13 = -qJD(6) * t142 - t114 * t131 - t67 * t202 + t220 * t41;
t251 = t13 * t154;
t231 = -t114 * t153 - t220 * t233;
t22 = t83 * t179 + t84 * t202 - t231;
t250 = t154 * t22;
t219 = t118 * pkin(4);
t93 = t221 * t118;
t75 = t117 * t219 + t93;
t249 = t233 * t75;
t248 = t105 * t154;
t23 = -qJD(6) * t155 + t231;
t242 = -t154 * t23 - t236;
t184 = t117 * t203;
t201 = t115 * qJD(2);
t232 = t116 * t201 - t184;
t110 = t115 ^ 2;
t112 = t117 ^ 2;
t210 = t110 - t112;
t171 = t210 * qJD(4);
t230 = -t153 * t53 + t233 * t52 - t35 * t84 - t36 * t83;
t229 = t11 * t84 + t12 * t83 + t153 * t20 - t19 * t233;
t228 = -t83 * t105 - t116 * t153;
t227 = -t83 * t131 - t153 * t156;
t206 = qJD(3) * t118;
t225 = t151 * qJD(2) + t93 * qJD(4) + t206;
t224 = -0.2e1 * qJD(2);
t223 = 0.2e1 * qJD(3);
t103 = t115 * pkin(4) + qJ(3);
t113 = t118 ^ 2;
t209 = t116 ^ 2 - t113;
t97 = pkin(4) * t204 + qJD(3);
t198 = pkin(1) * t224;
t196 = pkin(7) * t208;
t195 = pkin(7) * t105;
t194 = t115 * t222;
t193 = t117 * t222;
t190 = t81 * t204;
t188 = qJD(4) * t222;
t182 = t116 * t105;
t180 = t115 * t204;
t172 = qJD(2) * t209;
t170 = pkin(4) * t185;
t166 = t115 * t181;
t165 = t113 * t180;
t162 = t233 * t67 - t84 * t41;
t161 = -pkin(2) * t118 - t212;
t50 = -t115 * t81 + t87;
t160 = -t50 * t115 + t51 * t117;
t88 = t221 * t208;
t141 = t245 * qJD(4) - t88;
t139 = t161 * qJD(2) + t206;
t122 = t117 * t169 - t190 - t232 * qJ(5) + (t199 + t247) * t115;
t109 = qJ(3) * t223;
t96 = -0.2e1 * t182;
t95 = 0.2e1 * t182;
t90 = -pkin(1) + t161;
t85 = t209 * t224;
t77 = -t116 * t204 - t118 * t201;
t76 = t117 * t105 - t116 * t205;
t72 = -t200 + (pkin(2) * t116 - t214) * qJD(2);
t60 = pkin(5) * t83 + t103;
t57 = pkin(5) * t153 + t97;
t56 = -t118 * t171 - t166;
t54 = -t170 + (-pkin(4) * t117 - t221) * t208;
t45 = -pkin(5) * t156 + t75;
t44 = t84 * t105 - t116 * t233;
t27 = -pkin(3) * t208 - pkin(4) * t181 - pkin(5) * t131 - t170 - t196;
t26 = -t190 + (qJD(3) - t187) * t213 + (-t115 * t192 + t152 * t118) * qJD(2);
t17 = -t114 * t37 + t130;
t10 = qJD(4) * t160 - t25 * t115 + t26 * t117;
t8 = -t114 * t16 + t135;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t95, t85, 0, t96, 0, 0, t116 * t198, t118 * t198, 0, 0, 0, 0, 0, t95, t85, t96, 0, 0.2e1 * t118 * t72 - 0.2e1 * t90 * t208, -0.2e1 * t90 * t105 - 0.2e1 * t72 * t116, 0.2e1 * t90 * t72, -0.2e1 * t110 * t182 + 0.2e1 * t165, -0.2e1 * t113 * t171 - 0.4e1 * t118 * t166, 0.2e1 * t115 * t172 - 0.2e1 * t116 * t184, -0.2e1 * t112 * t182 - 0.2e1 * t165, 0.2e1 * t116 * t185 + 0.2e1 * t117 * t172, t95, 0.2e1 * (-t93 * t207 + t26) * t116 + 0.2e1 * (qJD(2) * t50 - t88 * t117 - t93 * t205) * t118, 0.2e1 * (t93 * t201 + t25) * t116 + 0.2e1 * (-qJD(2) * t51 + t88 * t115 - t93 * t204) * t118, 0.2e1 * t160 * t208 + 0.2e1 * (t115 * t26 + t117 * t25 + (t115 * t51 + t117 * t50) * qJD(4)) * t118, -0.2e1 * t25 * t51 + 0.2e1 * t26 * t50 - 0.2e1 * t88 * t93, 0.2e1 * t67 * t41, -0.2e1 * t131 * t67 - 0.2e1 * t156 * t41, -0.2e1 * t67 * t105 - 0.2e1 * t41 * t116, 0.2e1 * t156 * t131, 0.2e1 * t156 * t105 + 0.2e1 * t116 * t131, t95, 0.2e1 * t11 * t116 + 0.2e1 * t54 * t94 + 0.2e1 * t75 * t148 + 0.2e1 * (t19 * qJD(2) - t176 * t54 - t249) * t118, -0.2e1 * t20 * t105 - 0.2e1 * t12 * t116 - 0.2e1 * t75 * t41 - 0.2e1 * t54 * t67, 0.2e1 * t11 * t67 + 0.2e1 * t12 * t156 + 0.2e1 * t131 * t20 + 0.2e1 * t19 * t41, 0.2e1 * t11 * t19 + 0.2e1 * t12 * t20 + 0.2e1 * t54 * t75, -0.2e1 * t39 * t13, 0.2e1 * t13 * t38 - 0.2e1 * t14 * t39, 0.2e1 * t105 * t39 - 0.2e1 * t13 * t116, 0.2e1 * t38 * t14, -0.2e1 * t105 * t38 - 0.2e1 * t14 * t116, t95, 0.2e1 * t105 * t8 + 0.2e1 * t2 * t116 + 0.2e1 * t45 * t14 + 0.2e1 * t27 * t38, 0.2e1 * t1 * t116 - 0.2e1 * t105 * t9 - 0.2e1 * t45 * t13 + 0.2e1 * t27 * t39, 0.2e1 * t1 * t38 + 0.2e1 * t13 * t8 - 0.2e1 * t14 * t9 - 0.2e1 * t2 * t39, -0.2e1 * t1 * t9 + 0.2e1 * t2 * t8 + 0.2e1 * t27 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, -t208, 0, -t195, t196, 0, 0, 0, -t105, t208, 0, 0, 0, t139, t195, -t196, t139 * pkin(7), -t56, 0.4e1 * t118 * t180 - t210 * t208, t76, t56, t77, 0, t141 * t115 + t225 * t117, -t225 * t115 + t141 * t117, -t10, t25 * t194 - t26 * t193 - t88 * qJ(3) + t93 * qJD(3) + (-t51 * t193 + t50 * t194) * qJD(4), t162, t131 * t84 + t153 * t67 - t156 * t233 + t41 * t83, t44, t227, t228, 0, -t103 * t131 + t52 * t105 + t35 * t116 + t153 * t75 - t156 * t97 + t54 * t83, -t103 * t41 - t53 * t105 - t36 * t116 + t54 * t84 - t97 * t67 - t249, t131 * t53 + t156 * t36 + t35 * t67 + t52 * t41 - t229, t103 * t54 + t11 * t52 + t12 * t53 + t19 * t35 + t20 * t36 + t75 * t97, -t22 * t39 + t251, t13 * t155 + t14 * t154 + t21 * t39 + t22 * t38, -t22 * t116 - t248, t255, t253, 0, t105 * t17 + t7 * t116 + t60 * t14 + t155 * t27 - t21 * t45 + t57 * t38, -t105 * t18 + t6 * t116 - t60 * t13 - t154 * t27 - t45 * t22 + t57 * t39, t13 * t17 - t14 * t18 + t22 * t8 + t38 * t6 - t39 * t7 - t257, -t1 * t18 + t17 * t2 + t27 * t60 + t45 * t57 - t6 * t9 + t7 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, t109, -0.2e1 * t180, 0.2e1 * t171, 0, 0.2e1 * t180, 0, 0, 0.2e1 * qJ(3) * t204 + 0.2e1 * t115 * qJD(3), -0.2e1 * qJ(3) * t205 + 0.2e1 * qJD(3) * t117, 0, t109, -0.2e1 * t218, -0.2e1 * t153 * t84 + 0.2e1 * t233 * t83, 0, 0.2e1 * t146, 0, 0, 0.2e1 * t103 * t153 + 0.2e1 * t97 * t83, -0.2e1 * t103 * t233 + 0.2e1 * t84 * t97, 0.2e1 * t230, 0.2e1 * t103 * t97 + 0.2e1 * t35 * t52 + 0.2e1 * t36 * t53, 0.2e1 * t250, -0.2e1 * t154 * t21 + 0.2e1 * t155 * t22, 0, -0.2e1 * t236, 0, 0, 0.2e1 * t155 * t57 - 0.2e1 * t21 * t60, -0.2e1 * t154 * t57 - 0.2e1 * t22 * t60, 0.2e1 * t17 * t22 + 0.2e1 * t256, 0.2e1 * t17 * t7 - 0.2e1 * t18 * t6 + 0.2e1 * t57 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105, 0, 0, t195, 0, 0, 0, 0, 0, 0, t76, t77, 0, t10, 0, 0, 0, 0, 0, 0, t44, t228, -t162 - t227, t229, 0, 0, 0, 0, 0, 0, t23 * t116 - t248, t253, -t23 * t39 - t251 - t255, t23 * t8 + t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t258, -t230, 0, 0, 0, 0, 0, 0, 0, 0, t236 - t242 - t250, t17 * t23 - t256; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t242; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t232, 0, t145, t105, t26, t25, 0, 0, 0, 0, -t41, 0, t131, t105, t216 * t122 + 0.2e1 * t174 * t219 + t126, -t215 * t122 - 0.2e1 * t173 * t219 + t127 (t131 * t215 + t216 * t41) * pkin(4) (t11 * t216 + t12 * t215) * pkin(4), 0, 0, -t13, 0, -t14, t105, -qJD(6) * t136 + t105 * t70 - t62 * t116 - t16 * t179 + t119, -t105 * t71 - t61 * t116 + t1, t13 * t70 - t14 * t71 - t38 * t61 + t39 * t62, -t1 * t71 + t2 * t70 + t61 * t9 - t62 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t205, 0, -t204, 0, t115 * t188, t117 * t188, 0, 0, 0, 0, -t233, 0, -t153, 0, t35, -t36, t252 (t215 * t36 + t216 * t35) * pkin(4), 0, 0, -t22, 0, t21, 0, t7, t6, t22 * t70 + t254, -t17 * t62 + t18 * t61 - t6 * t71 + t7 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t205, -t204, 0, 0, 0, 0, 0, 0, 0, 0, -t233, -t153, 0, -t252, 0, 0, 0, 0, 0, 0, t23, t21, 0, t23 * t70 - t254; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t62, -0.2e1 * t61, 0, 0.2e1 * t61 * t71 - 0.2e1 * t62 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t131, -t41, 0, t54, 0, 0, 0, 0, 0, 0, t14, -t13, 0, t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153, -t233, 0, t97, 0, 0, 0, 0, 0, 0, -t21, -t22, 0, t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13, 0, -t14, t105, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t22, 0, t21, 0, t7, t6, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t23, t21, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t62, -t61, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
