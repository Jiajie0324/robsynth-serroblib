% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPRPR11
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d6,theta5]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 11:16
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPRPR11_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPR11_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPR11_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRPR11_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRPR11_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRPR11_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 11:15:11
% EndTime: 2019-03-09 11:15:33
% DurationCPUTime: 12.09s
% Computational Cost: add. (14500->726), mult. (30324->896), div. (0->0), fcn. (20144->14), ass. (0->351)
t314 = cos(qJ(4));
t311 = sin(qJ(4));
t407 = qJD(2) * t311;
t315 = cos(qJ(2));
t410 = qJD(1) * t315;
t225 = t314 * t410 + t407;
t378 = t311 * t410;
t405 = qJD(2) * t314;
t227 = -t378 + t405;
t307 = sin(pkin(10));
t308 = cos(pkin(10));
t139 = t225 * t308 + t307 * t227;
t310 = sin(qJ(6));
t354 = -t225 * t307 + t308 * t227;
t480 = cos(qJ(6));
t377 = qJD(6) * t480;
t398 = qJD(6) * t310;
t312 = sin(qJ(2));
t396 = qJD(1) * qJD(2);
t376 = t312 * t396;
t394 = t315 * qJDD(1);
t514 = -t376 + t394;
t129 = qJD(4) * t225 - t314 * qJDD(2) + t311 * t514;
t130 = -qJD(4) * t378 + qJDD(2) * t311 + (qJD(2) * qJD(4) + t514) * t314;
t63 = -t129 * t307 + t308 * t130;
t64 = -t129 * t308 - t130 * t307;
t18 = t139 * t377 + t310 * t63 + t354 * t398 - t480 * t64;
t411 = qJD(1) * t312;
t266 = qJD(4) + t411;
t256 = qJD(6) + t266;
t72 = t139 * t480 + t310 * t354;
t455 = t256 * t72;
t520 = -t18 + t455;
t286 = pkin(2) * t411;
t447 = qJ(3) * t315;
t357 = pkin(8) * t312 - t447;
t192 = qJD(1) * t357 + t286;
t282 = pkin(7) * t410;
t234 = pkin(3) * t410 + t282;
t125 = -t192 * t311 + t314 * t234;
t402 = qJD(4) * t311;
t483 = pkin(2) + pkin(8);
t420 = qJ(5) + t483;
t431 = t311 * t312;
t519 = -qJD(5) * t314 + t402 * t420 - (pkin(4) * t315 - qJ(5) * t431) * qJD(1) - t125;
t126 = t314 * t192 + t311 * t234;
t239 = t420 * t314;
t385 = t314 * t411;
t518 = qJ(5) * t385 + qJD(4) * t239 + qJD(5) * t311 + t126;
t467 = t72 ^ 2;
t505 = -t310 * t139 + t354 * t480;
t468 = t505 ^ 2;
t517 = -t467 + t468;
t466 = t72 * t505;
t401 = qJD(4) * t314;
t379 = t308 * t401;
t432 = t307 * t311;
t418 = t307 * t402 - t308 * t385 + t411 * t432 - t379;
t223 = t307 * t314 + t308 * t311;
t202 = t223 * qJD(4);
t417 = t223 * t411 + t202;
t291 = t312 * qJ(3);
t373 = -pkin(1) - t291;
t335 = -t315 * t483 + t373;
t172 = t335 * qJD(1);
t281 = pkin(7) * t411;
t508 = qJD(3) + t281;
t397 = pkin(3) * t411 + t508;
t185 = -qJD(2) * t483 + t397;
t101 = -t172 * t311 + t314 * t185;
t88 = -qJ(5) * t227 + t101;
t80 = pkin(4) * t266 + t88;
t102 = t172 * t314 + t185 * t311;
t89 = -qJ(5) * t225 + t102;
t82 = t307 * t89;
t37 = t308 * t80 - t82;
t503 = pkin(9) * t354;
t31 = pkin(5) * t266 + t37 - t503;
t454 = t308 * t89;
t38 = t307 * t80 + t454;
t512 = pkin(9) * t139;
t33 = t38 - t512;
t375 = t315 * t396;
t395 = t312 * qJDD(1);
t336 = t375 + t395;
t222 = qJDD(4) + t336;
t265 = pkin(2) * t376;
t403 = qJD(3) * t312;
t329 = qJD(2) * t357 - t403;
t100 = qJD(1) * t329 + qJDD(1) * t335 + t265;
t264 = pkin(7) * t375;
t278 = pkin(7) * t395;
t374 = qJDD(3) + t264 + t278;
t133 = t336 * pkin(3) - qJDD(2) * t483 + t374;
t40 = -qJD(4) * t102 - t100 * t311 + t314 * t133;
t28 = pkin(4) * t222 + qJ(5) * t129 - qJD(5) * t227 + t40;
t391 = -t314 * t100 - t311 * t133 - t185 * t401;
t39 = -t172 * t402 - t391;
t30 = -qJ(5) * t130 - qJD(5) * t225 + t39;
t8 = t308 * t28 - t30 * t307;
t6 = pkin(5) * t222 - pkin(9) * t64 + t8;
t9 = t307 * t28 + t308 * t30;
t7 = -pkin(9) * t63 + t9;
t1 = t31 * t377 + t310 * t6 - t33 * t398 + t480 * t7;
t301 = qJ(4) + pkin(10);
t290 = qJ(6) + t301;
t273 = sin(t290);
t274 = cos(t290);
t313 = sin(qJ(1));
t316 = cos(qJ(1));
t428 = t312 * t316;
t161 = t273 * t428 + t274 * t313;
t429 = t312 * t313;
t163 = -t273 * t429 + t274 * t316;
t299 = g(3) * t315;
t304 = qJD(2) * qJ(3);
t204 = t304 + t234;
t143 = pkin(4) * t225 + qJD(5) + t204;
t81 = pkin(5) * t139 + t143;
t516 = g(1) * t161 - g(2) * t163 - t273 * t299 + t81 * t72 - t1;
t452 = t307 * t518 + t308 * t519;
t451 = t307 * t519 - t308 * t518;
t19 = qJD(6) * t505 + t310 * t64 + t480 * t63;
t453 = t505 * t256;
t515 = -t19 + t453;
t160 = -t273 * t313 + t274 * t428;
t162 = t273 * t316 + t274 * t429;
t11 = t310 * t31 + t33 * t480;
t2 = -qJD(6) * t11 - t310 * t7 + t480 * t6;
t513 = -g(1) * t160 - g(2) * t162 + t274 * t299 - t505 * t81 + t2;
t482 = pkin(3) + pkin(7);
t511 = -pkin(5) * t410 + pkin(9) * t417 + t452;
t510 = -pkin(9) * t418 - t451;
t509 = t139 * t354;
t352 = -t308 * t314 + t432;
t341 = t223 * t480 - t310 * t352;
t343 = -t310 * t223 - t352 * t480;
t388 = -g(1) * t428 - g(2) * t429 + t299;
t492 = qJD(6) * t343 - t310 * t417 - t418 * t480;
t507 = t1 * t341 + t11 * t492 + t2 * t343 + t388;
t506 = t19 * t341 + t492 * t72;
t214 = qJDD(6) + t222;
t504 = -t214 * t341 - t256 * t492;
t293 = t314 * pkin(4);
t277 = t293 + pkin(3);
t502 = t18 * t343;
t500 = t102 * t266 + t40;
t498 = t214 * t343;
t350 = t225 * t266;
t495 = t129 - t350;
t434 = t227 * t266;
t494 = -t130 + t434;
t296 = t315 * pkin(2);
t415 = t296 + t291;
t476 = pkin(8) * t315;
t362 = t415 + t476;
t218 = -pkin(1) - t362;
t251 = t482 * t312;
t145 = t314 * t218 + t311 * t251;
t198 = t314 * t222;
t493 = -t266 * t402 + t198;
t416 = pkin(4) * t401 + t277 * t411 + t508;
t491 = t310 * t418 - t417 * t480;
t400 = qJD(4) * t315;
t381 = t311 * t400;
t333 = t312 * t405 + t381;
t359 = g(1) * t316 + g(2) * t313;
t490 = pkin(4) * t130 + qJDD(5);
t423 = t314 * t316;
t206 = -t311 * t313 + t312 * t423;
t426 = t313 * t314;
t208 = t311 * t316 + t312 * t426;
t424 = t314 * t315;
t489 = -g(1) * t206 - g(2) * t208 + g(3) * t424;
t488 = -t139 * t418 + t223 * t63;
t487 = t204 * t266 - t222 * t483;
t486 = -t352 * t64 - t354 * t417;
t484 = t223 * t9 - t352 * t8 - t37 * t417 - t38 * t418 + t388;
t481 = pkin(5) * t63;
t478 = pkin(4) * t307;
t477 = pkin(4) * t311;
t474 = g(1) * t313;
t470 = g(2) * t316;
t469 = g(3) * t312;
t309 = -qJ(5) - pkin(8);
t238 = t420 * t311;
t146 = t238 * t307 - t308 * t239;
t111 = pkin(9) * t352 + t146;
t147 = -t308 * t238 - t307 * t239;
t112 = -pkin(9) * t223 + t147;
t56 = t111 * t480 - t310 * t112;
t463 = qJD(6) * t56 + t310 * t511 - t480 * t510;
t57 = t310 * t111 + t112 * t480;
t462 = -qJD(6) * t57 + t310 * t510 + t480 * t511;
t406 = qJD(2) * t312;
t285 = pkin(2) * t406;
t158 = t285 + t329;
t404 = qJD(2) * t315;
t235 = t482 * t404;
t213 = t314 * t235;
t370 = qJ(5) * t315 - t218;
t399 = qJD(5) * t315;
t51 = pkin(4) * t404 + t213 + t370 * t401 + (-qJ(5) * t406 - qJD(4) * t251 - t158 + t399) * t311;
t69 = t314 * t158 - t218 * t402 + t311 * t235 + t251 * t401;
t55 = qJ(5) * t333 - t314 * t399 + t69;
t25 = t307 * t51 + t308 * t55;
t460 = t223 * t377 - t352 * t398 - t491;
t459 = -qJD(6) * t341 + t491;
t45 = t308 * t88 - t82;
t275 = pkin(4) * t308 + pkin(5);
t194 = t275 * t480 - t310 * t478;
t44 = -t307 * t88 - t454;
t34 = t44 + t512;
t35 = t45 - t503;
t450 = t194 * qJD(6) - t310 * t34 - t35 * t480;
t195 = t310 * t275 + t478 * t480;
t449 = -t195 * qJD(6) + t310 * t35 - t34 * t480;
t448 = pkin(7) * qJDD(2);
t446 = qJDD(2) * pkin(2);
t445 = t101 * t266;
t443 = t129 * t314;
t442 = t130 * t311;
t441 = t354 ^ 2;
t440 = t354 * t266;
t439 = t139 ^ 2;
t438 = t139 * t266;
t437 = t222 * t311;
t435 = t227 * t225;
t300 = -pkin(9) + t309;
t433 = t300 * t315;
t430 = t311 * t315;
t319 = qJD(1) ^ 2;
t427 = t312 * t319;
t425 = t313 * t315;
t422 = t315 * t309;
t421 = t315 * t316;
t229 = t314 * t251;
t116 = pkin(4) * t312 + t311 * t370 + t229;
t122 = -qJ(5) * t424 + t145;
t59 = t307 * t116 + t308 * t122;
t419 = -pkin(5) * t418 + t416;
t288 = cos(t301);
t237 = pkin(5) * t288 + t293;
t252 = t482 * t315;
t414 = t316 * pkin(1) + t313 * pkin(7);
t305 = t312 ^ 2;
t306 = t315 ^ 2;
t413 = t305 - t306;
t412 = t305 + t306;
t409 = qJD(2) * t225;
t408 = qJD(2) * t227;
t393 = pkin(4) * t430;
t390 = t311 * t428;
t279 = pkin(7) * t394;
t302 = qJDD(2) * qJ(3);
t303 = qJD(2) * qJD(3);
t389 = t279 + t302 + t303;
t203 = pkin(4) * t424 + t252;
t386 = t482 * qJD(2);
t384 = t311 * t406;
t380 = t266 * t410;
t276 = qJ(3) + t477;
t24 = -t307 * t55 + t308 * t51;
t371 = -qJD(2) * pkin(2) + qJD(3);
t58 = t308 * t116 - t122 * t307;
t368 = pkin(2) * t421 + qJ(3) * t428 + t414;
t367 = -t278 - t388;
t366 = pkin(3) * t394 + t389;
t365 = qJD(1) * t386;
t364 = t312 * t375;
t270 = g(1) * t425;
t363 = -g(2) * t421 + t270;
t361 = t412 * qJDD(1) * pkin(7);
t318 = qJD(2) ^ 2;
t360 = pkin(7) * t318 + t470;
t358 = -t352 * t222 - t266 * t417;
t355 = -t101 * t311 + t102 * t314;
t240 = t281 + t371;
t250 = -t282 - t304;
t353 = t240 * t315 + t250 * t312;
t351 = t266 * t311;
t349 = t373 - t296;
t189 = t223 * t315;
t47 = pkin(5) * t312 + pkin(9) * t189 + t58;
t188 = t352 * t315;
t48 = pkin(9) * t188 + t59;
t22 = -t310 * t48 + t47 * t480;
t23 = t310 * t47 + t48 * t480;
t346 = t359 * t315;
t345 = -0.2e1 * pkin(1) * t396 - t448;
t114 = t310 * t188 - t189 * t480;
t205 = t349 * qJD(1);
t340 = t205 * t411 + qJDD(3) - t367;
t339 = -t266 * t401 - t437;
t338 = -qJ(3) * t404 - t403;
t337 = -t222 * t223 + t266 * t418;
t334 = 0.2e1 * qJDD(1) * pkin(1) - t360;
t241 = -pkin(1) - t415;
t331 = t448 + (-qJD(1) * t241 - t205) * qJD(2);
t330 = -t346 - t469;
t142 = -t312 * t365 + t366;
t131 = qJD(1) * t338 + qJDD(1) * t349 + t265;
t196 = t285 + t338;
t328 = qJD(1) * t196 + qJDD(1) * t241 + t131 + t360;
t149 = -pkin(4) * t381 + (-pkin(7) - t277) * t406;
t173 = pkin(7) * t376 - t389;
t190 = t374 - t446;
t326 = qJD(2) * t353 - t173 * t315 + t190 * t312;
t78 = t142 + t490;
t325 = qJD(4) * t266 * t483 + t142 + t330;
t321 = (-g(3) - t365) * t312 - t346 + t366 + t490;
t297 = t316 * pkin(7);
t287 = sin(t301);
t263 = qJ(3) * t421;
t261 = qJ(3) * t425;
t260 = t315 * t427;
t249 = t413 * t319;
t243 = qJDD(2) * t315 - t312 * t318;
t242 = qJDD(2) * t312 + t315 * t318;
t236 = pkin(5) * t287 + t477;
t233 = t312 * t386;
t231 = -qJ(3) * t410 + t286;
t230 = pkin(3) + t237;
t220 = qJDD(1) * t306 - 0.2e1 * t364;
t219 = qJDD(1) * t305 + 0.2e1 * t364;
t209 = -t311 * t429 + t423;
t207 = t390 + t426;
t181 = -t287 * t429 + t288 * t316;
t180 = t287 * t316 + t288 * t429;
t179 = t287 * t428 + t288 * t313;
t178 = -t287 * t313 + t288 * t428;
t171 = pkin(5) * t223 + t276;
t157 = 0.2e1 * t312 * t394 - 0.2e1 * t396 * t413;
t148 = t222 * t312 + t266 * t404;
t144 = -t218 * t311 + t229;
t132 = -pkin(5) * t188 + t203;
t118 = -t307 * t333 - t308 * t384 + t315 * t379;
t117 = t202 * t315 - t352 * t406;
t113 = -t188 * t480 - t189 * t310;
t94 = pkin(4) * t227 + pkin(5) * t354;
t79 = -pkin(5) * t117 + t149;
t70 = -qJD(4) * t145 - t158 * t311 + t213;
t42 = qJD(6) * t114 - t117 * t480 - t310 * t118;
t41 = -t310 * t117 + t118 * t480 - t188 * t377 - t189 * t398;
t36 = t78 + t481;
t17 = pkin(9) * t117 + t25;
t16 = pkin(5) * t404 + pkin(9) * t118 + t24;
t10 = t31 * t480 - t310 * t33;
t4 = -qJD(6) * t23 + t16 * t480 - t310 * t17;
t3 = qJD(6) * t22 + t310 * t16 + t17 * t480;
t5 = [0, 0, 0, 0, 0, qJDD(1), -t470 + t474, t359, 0, 0, t219, t157, t242, t220, t243, 0, t312 * t345 + t315 * t334 + t270, t345 * t315 + (-t334 - t474) * t312, -t359 + 0.2e1 * t361, -g(1) * (-pkin(1) * t313 + t297) - g(2) * t414 + (pkin(7) ^ 2 * t412 + pkin(1) ^ 2) * qJDD(1), 0, -t242, -t243, t219, t157, t220, t361 + t326 - t359, t312 * t331 + t315 * t328 - t270, t331 * t315 + (-t328 + t474) * t312, pkin(7) * t326 - g(1) * t297 - g(2) * t368 + t131 * t241 + t205 * t196 - t349 * t474, t129 * t430 + (-t314 * t400 + t384) * t227 (-t225 * t311 + t227 * t314) * t406 + (t443 + t442 + (t225 * t314 + t227 * t311) * qJD(4)) * t315 (t266 * t407 - t129) * t312 + (t339 + t408) * t315, t130 * t424 - t225 * t333 (t266 * t405 - t130) * t312 + (-t409 - t493) * t315, t148, -g(1) * t209 - g(2) * t207 + t130 * t252 + t144 * t222 - t225 * t233 + t266 * t70 + (-t204 * t405 + t40) * t312 + (qJD(2) * t101 + t142 * t314 - t204 * t402) * t315, g(1) * t208 - g(2) * t206 - t129 * t252 - t145 * t222 - t227 * t233 - t266 * t69 + (t204 * t407 - t39) * t312 + (-qJD(2) * t102 - t142 * t311 - t204 * t401) * t315, t129 * t144 - t130 * t145 - t225 * t69 - t227 * t70 + t270 + t355 * t406 + (-t470 + t311 * t40 - t314 * t39 + (t101 * t314 + t102 * t311) * qJD(4)) * t315, t39 * t145 + t102 * t69 + t40 * t144 + t101 * t70 + t142 * t252 - t204 * t233 - g(1) * (pkin(3) * t316 + t297) - g(2) * (pkin(8) * t421 + t368) + (-g(1) * (t349 - t476) - g(2) * pkin(3)) * t313, -t118 * t354 - t189 * t64, t117 * t354 + t118 * t139 + t188 * t64 + t189 * t63, -t118 * t266 - t189 * t222 + t312 * t64 + t354 * t404, -t117 * t139 - t188 * t63, t117 * t266 - t139 * t404 + t188 * t222 - t312 * t63, t148, -g(1) * t181 - g(2) * t179 - t117 * t143 + t139 * t149 - t188 * t78 + t203 * t63 + t222 * t58 + t24 * t266 + t312 * t8 + t37 * t404, g(1) * t180 - g(2) * t178 - t118 * t143 + t149 * t354 - t189 * t78 + t203 * t64 - t222 * t59 - t25 * t266 - t312 * t9 - t38 * t404, t117 * t38 + t118 * t37 - t139 * t25 + t188 * t9 + t189 * t8 - t24 * t354 - t58 * t64 - t59 * t63 + t363, t9 * t59 + t38 * t25 + t8 * t58 + t37 * t24 + t78 * t203 + t143 * t149 - g(1) * (t277 * t316 + t297) - g(2) * (pkin(4) * t390 - t309 * t421 + t368) + (-g(1) * (-pkin(4) * t431 + t349 + t422) - g(2) * t277) * t313, -t114 * t18 - t41 * t505, t113 * t18 - t114 * t19 + t41 * t72 - t42 * t505, t114 * t214 - t18 * t312 - t256 * t41 + t404 * t505, t113 * t19 + t42 * t72, -t113 * t214 - t19 * t312 - t256 * t42 - t404 * t72, t214 * t312 + t256 * t404, -g(1) * t163 - g(2) * t161 + t10 * t404 + t113 * t36 + t132 * t19 + t2 * t312 + t214 * t22 + t256 * t4 + t42 * t81 + t72 * t79, g(1) * t162 - g(2) * t160 - t1 * t312 - t11 * t404 + t114 * t36 - t132 * t18 - t214 * t23 - t256 * t3 - t41 * t81 + t505 * t79, -t1 * t113 + t10 * t41 - t11 * t42 - t114 * t2 + t18 * t22 - t19 * t23 - t3 * t72 - t4 * t505 + t363, t1 * t23 + t11 * t3 + t2 * t22 + t10 * t4 + t36 * t132 + t81 * t79 - g(1) * (t230 * t316 + t297) - g(2) * (t236 * t428 - t300 * t421 + t368) + (-g(1) * (-t236 * t312 + t349 + t433) - g(2) * t230) * t313; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t260, t249, t395, t260, t394, qJDD(2), pkin(1) * t427 + t367, t469 - t279 + (pkin(1) * t319 + t359) * t315, 0, 0, qJDD(2), -t395, -t394, -t260, t249, t260 (-pkin(2) * t312 + t447) * qJDD(1) + ((-t250 - t304) * t312 + (-t240 + t371) * t315) * qJD(1), -t231 * t410 + t340 - 0.2e1 * t446, t279 + 0.2e1 * t302 + 0.2e1 * t303 + (qJD(1) * t231 - g(3)) * t312 + (qJD(1) * t205 - t359) * t315, -t173 * qJ(3) - t250 * qJD(3) - t190 * pkin(2) - t205 * t231 - g(1) * (-pkin(2) * t428 + t263) - g(2) * (-pkin(2) * t429 + t261) - g(3) * t415 - t353 * qJD(1) * pkin(7), -t227 * t351 - t443 (-t130 - t434) * t314 + (t129 + t350) * t311 (-t227 * t315 - t266 * t431) * qJD(1) + t493, t314 * t350 + t442 (-t266 * t312 * t314 + t225 * t315) * qJD(1) + t339, -t380, qJ(3) * t130 - t101 * t410 - t125 * t266 + t397 * t225 + t325 * t311 + t314 * t487, -qJ(3) * t129 + t102 * t410 + t126 * t266 + t397 * t227 - t311 * t487 + t325 * t314, t125 * t227 + t126 * t225 + (-t102 * t411 - t129 * t483 - t40 + (t225 * t483 - t102) * qJD(4)) * t314 + (t101 * t411 + t130 * t483 - t39 + (-t227 * t483 + t101) * qJD(4)) * t311 - t388, -g(1) * t263 - g(2) * t261 - g(3) * t362 + t142 * qJ(3) - t101 * t125 - t102 * t126 + t397 * t204 + (-qJD(4) * t355 - t39 * t311 + t312 * t359 - t40 * t314) * t483, t486, t139 * t417 - t223 * t64 + t352 * t63 + t354 * t418, -t354 * t410 + t358, t488, t139 * t410 + t337, -t380, t139 * t416 - t143 * t418 + t146 * t222 + t223 * t78 + t266 * t452 + t276 * t63 + t287 * t330 - t37 * t410, -t143 * t417 - t147 * t222 - t266 * t451 + t276 * t64 + t288 * t330 - t352 * t78 + t354 * t416 + t38 * t410, -t139 * t451 - t146 * t64 - t147 * t63 - t354 * t452 - t484, t9 * t147 + t8 * t146 + t78 * t276 - g(1) * (t316 * t393 + t263) - g(2) * (t313 * t393 + t261) - g(3) * (t415 - t422) + t451 * t38 + t452 * t37 + (-g(3) * t477 + t359 * (pkin(2) - t309)) * t312 + t416 * t143, -t460 * t505 - t502, t18 * t341 - t19 * t343 + t460 * t72 - t492 * t505, -t256 * t460 - t410 * t505 + t498, t506, t410 * t72 + t504, -t256 * t410, -t10 * t410 + t171 * t19 + t214 * t56 + t256 * t462 + t273 * t330 + t341 * t36 + t419 * t72 + t492 * t81, t11 * t410 - t171 * t18 - t214 * t57 - t256 * t463 + t274 * t330 + t343 * t36 + t419 * t505 - t460 * t81, t10 * t460 + t18 * t56 - t19 * t57 - t462 * t505 - t463 * t72 - t507, t1 * t57 + t2 * t56 + t36 * t171 - g(1) * (t236 * t421 + t263) - g(2) * (t236 * t425 + t261) - g(3) * (t415 - t433) + t419 * t81 + (-g(3) * t236 + t359 * (pkin(2) - t300)) * t312 + t463 * t11 + t462 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t395, qJDD(2) + t260, -t305 * t319 - t318, qJD(2) * t250 + t264 + t340 - t446, 0, 0, 0, 0, 0, 0, -t266 * t351 + t198 - t409, -t266 ^ 2 * t314 - t408 - t437, t311 * t494 + t314 * t495, -qJD(2) * t204 + t500 * t314 + (t39 - t445) * t311 + t388, 0, 0, 0, 0, 0, 0, -qJD(2) * t139 + t358, -qJD(2) * t354 + t337, -t486 - t488, -qJD(2) * t143 + t484, 0, 0, 0, 0, 0, 0, -qJD(2) * t72 + t256 * t459 + t498, -qJD(2) * t505 + t504, -t459 * t505 + t502 - t506, -qJD(2) * t81 + t10 * t459 + t507; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t435, -t225 ^ 2 + t227 ^ 2, -t495, -t435, t494, t222, -t204 * t227 + t489 + t500, g(1) * t207 - g(2) * t209 + t445 + t204 * t225 + (qJD(4) * t172 - t299) * t311 + t391, 0, 0, t509, -t439 + t441, t64 + t438, -t509, -t63 + t440, t222, t288 * t299 - g(1) * t178 - g(2) * t180 - t354 * t143 - t266 * t44 + (-t139 * t227 + t222 * t308) * pkin(4) + t8, -t287 * t299 + g(1) * t179 - g(2) * t181 + t139 * t143 + t266 * t45 + (-t222 * t307 - t227 * t354) * pkin(4) - t9 (-t307 * t63 - t308 * t64) * pkin(4) + (t38 + t44) * t354 + (t45 - t37) * t139, -t37 * t44 - t38 * t45 + (-t143 * t227 + t9 * t307 + t8 * t308 + t489) * pkin(4), t466, t517, t520, -t466, t515, t214, t194 * t214 + t256 * t449 - t94 * t72 + t513, -t195 * t214 - t256 * t450 - t505 * t94 + t516, t18 * t194 - t19 * t195 + (t11 - t449) * t505 + (-t10 - t450) * t72, t1 * t195 + t2 * t194 - t81 * t94 - g(1) * (-t236 * t313 + t237 * t428) - g(2) * (t236 * t316 + t237 * t429) + t237 * t299 + t450 * t11 + t449 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t63 + t440, t64 - t438, -t439 - t441, t139 * t38 + t354 * t37 + t321, 0, 0, 0, 0, 0, 0, t19 + t453, -t18 - t455, -t467 - t468, t10 * t505 + t11 * t72 + t321 + t481; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t466, t517, t520, -t466, t515, t214, t11 * t256 + t513, t10 * t256 + t516, 0, 0;];
tau_reg  = t5;
