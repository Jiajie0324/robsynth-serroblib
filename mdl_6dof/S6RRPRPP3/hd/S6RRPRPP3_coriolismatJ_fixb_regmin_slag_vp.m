% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRPP3
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,theta3]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:57
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRPP3_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRPP3_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRPP3_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRPP3_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:57:12
% EndTime: 2019-03-09 09:57:36
% DurationCPUTime: 11.69s
% Computational Cost: add. (10216->673), mult. (21633->776), div. (0->0), fcn. (22514->6), ass. (0->456)
t406 = sin(qJ(2));
t407 = cos(qJ(2));
t368 = t406 * pkin(2) - qJ(3) * t407;
t403 = sin(pkin(9));
t404 = cos(pkin(9));
t590 = t404 * t406;
t294 = -pkin(7) * t590 + t403 * t368;
t591 = t403 * t407;
t255 = -pkin(8) * t591 + t294;
t642 = sin(qJ(4));
t244 = t642 * t255;
t592 = t403 * t406;
t378 = pkin(7) * t592;
t293 = t404 * t368 + t378;
t589 = t404 * t407;
t236 = t406 * pkin(3) - pkin(8) * t589 + t293;
t643 = cos(qJ(4));
t516 = t643 * t236;
t574 = t516 / 0.2e1 - t244 / 0.2e1;
t514 = t642 * t403;
t370 = t407 * t514;
t515 = t643 * t404;
t313 = t407 * t515 - t370;
t635 = t313 * pkin(5);
t393 = t406 * pkin(4);
t648 = -t393 / 0.2e1;
t719 = t648 + t635 / 0.2e1 - t574;
t517 = t407 * t643;
t479 = -t517 / 0.2e1;
t346 = t514 - t515;
t644 = -t407 / 0.2e1;
t496 = t346 * t644;
t465 = t404 * t479 + t370 / 0.2e1 + t496;
t513 = t642 * t404;
t348 = t403 * t643 + t513;
t308 = t348 * t406;
t523 = t407 * qJD(1);
t504 = t308 * t523;
t536 = t308 * qJD(4);
t718 = qJD(2) * t465 - t504 + t536;
t631 = qJ(5) * t308;
t657 = t631 / 0.2e1;
t352 = pkin(3) * t592 + t406 * pkin(7);
t405 = pkin(4) + qJ(6);
t311 = t346 * t406;
t600 = t311 * qJ(5);
t669 = t308 * t405 + t600;
t118 = t352 + t669;
t382 = -t404 * pkin(3) - pkin(2);
t597 = t348 * qJ(5);
t445 = t382 - t597;
t693 = t346 * t405;
t172 = t445 + t693;
t650 = t348 / 0.2e1;
t654 = -t311 / 0.2e1;
t634 = pkin(8) + qJ(3);
t365 = t634 * t403;
t366 = t634 * t404;
t257 = -t365 * t642 + t366 * t643;
t192 = -t346 * pkin(5) + t257;
t659 = t192 / 0.2e1;
t423 = t118 * t650 + t172 * t654 + t407 * t659;
t587 = t406 * qJ(6);
t497 = -t587 / 0.2e1;
t32 = t497 - t423 + t719;
t478 = t517 / 0.2e1;
t466 = t404 * t478 - t370 / 0.2e1 + t496;
t717 = qJD(2) * t466 - t504;
t653 = -t346 / 0.2e1;
t137 = -t308 * t650 - t311 * t653;
t645 = t406 / 0.2e1;
t426 = t645 - t137;
t565 = qJD(1) * t311;
t508 = t308 * t565;
t490 = qJD(2) * t426 - t508;
t127 = t645 + t137;
t715 = qJD(2) * t127 + t508;
t532 = t311 * qJD(6);
t535 = t308 * qJD(5);
t714 = -t532 + t535;
t656 = t308 / 0.2e1;
t655 = t311 / 0.2e1;
t652 = t346 / 0.2e1;
t651 = -t348 / 0.2e1;
t333 = t348 * qJD(5);
t231 = t311 * t333;
t542 = t466 * qJD(3);
t711 = -t231 - t542;
t559 = qJD(3) * t465;
t710 = -t231 - t559;
t470 = pkin(4) * t308 + t600;
t170 = t470 + t352;
t641 = pkin(4) * t311;
t194 = t631 - t641;
t471 = -pkin(2) * t407 - t406 * qJ(3);
t356 = -pkin(1) + t471;
t338 = t404 * t356;
t232 = -pkin(8) * t590 + t338 + (-pkin(7) * t403 - pkin(3)) * t407;
t379 = pkin(7) * t589;
t275 = t403 * t356 + t379;
t251 = -pkin(8) * t592 + t275;
t130 = -t643 * t232 + t251 * t642;
t395 = t407 * pkin(4);
t117 = t395 + t130;
t494 = t130 / 0.2e1 - t117 / 0.2e1;
t336 = qJ(5) * t346;
t690 = pkin(4) * t348 + t336;
t640 = pkin(4) * t346;
t220 = t445 + t640;
t697 = -t220 / 0.2e1;
t709 = t170 * t690 / 0.2e1 - t194 * t697 - t257 * t494;
t507 = t311 * t523;
t708 = -t311 * qJD(4) + t507;
t530 = t346 * qJD(4);
t672 = t466 * qJD(1);
t169 = -t530 - t672;
t674 = t465 * qJD(1);
t684 = t674 + t530;
t599 = t311 * t348;
t601 = t308 * t346;
t458 = -t599 + t601;
t675 = t458 * qJD(3);
t707 = -t465 * qJD(5) + t675;
t706 = -qJD(5) * t466 + t675;
t665 = t348 ^ 2;
t666 = t346 ^ 2;
t683 = t666 + t665;
t704 = qJD(3) * t683;
t256 = t643 * t365 + t366 * t642;
t190 = t348 * pkin(5) + t256;
t703 = qJD(4) * t190;
t307 = t311 ^ 2;
t667 = t308 ^ 2;
t682 = t667 + t307;
t702 = t682 * qJD(3);
t380 = -qJD(4) + t523;
t563 = qJD(2) * t348;
t254 = t346 * t563;
t701 = -qJD(1) * t127 + t254;
t700 = qJD(1) * t682 + qJD(2) * t458;
t699 = qJD(1) * t458 + qJD(2) * t683;
t310 = t348 * t407;
t499 = t310 / 0.2e1;
t480 = t407 * t513;
t570 = -t480 / 0.2e1 + t403 * t479;
t210 = t499 + t570;
t698 = -qJD(3) * t210 - qJD(5) * t127;
t586 = t407 * qJ(6);
t92 = t311 * pkin(5) - t130;
t84 = t395 - t92 + t586;
t696 = t84 + t92;
t557 = qJD(3) * t407;
t694 = t311 * (-t535 + t557);
t131 = t642 * t232 + t643 * t251;
t116 = qJ(5) * t407 - t131;
t692 = t116 + t131;
t552 = qJD(6) * t346;
t691 = -t333 + t552;
t156 = -t405 * t311 + t631;
t187 = t405 * t348 + t336;
t689 = t156 * t652 + t187 * t656;
t662 = qJ(6) / 0.2e1;
t663 = pkin(4) / 0.2e1;
t519 = t663 + t662;
t646 = -t405 / 0.2e1;
t688 = t519 + t646;
t687 = -qJD(2) * t210 + t708;
t500 = -t310 / 0.2e1;
t571 = t480 / 0.2e1 + t403 * t478;
t203 = t500 + t571;
t686 = qJD(2) * t203 + t708;
t528 = t348 * qJD(4);
t538 = t210 * qJD(1);
t685 = t538 - t528;
t221 = t642 * t236;
t245 = t643 * t255;
t576 = t221 / 0.2e1 + t245 / 0.2e1;
t671 = t170 * t651 + t220 * t655;
t670 = t118 * t652 + t172 * t656;
t209 = t499 + t571;
t668 = -t209 * qJD(3) + t426 * qJD(5);
t664 = -pkin(4) / 0.2e1;
t661 = -t190 / 0.2e1;
t660 = t190 / 0.2e1;
t649 = -t382 / 0.2e1;
t394 = t407 * pkin(7);
t647 = t394 / 0.2e1;
t638 = t308 * pkin(5);
t637 = t310 * pkin(4);
t636 = t310 * pkin(5);
t495 = t116 / 0.2e1 + t131 / 0.2e1;
t418 = t346 * t494 + t348 * t495;
t503 = qJ(5) * t500;
t443 = t313 * t664 + t503;
t7 = t418 - t443;
t633 = t7 * qJD(1);
t377 = pkin(3) * t591;
t353 = t394 + t377;
t598 = t313 * qJ(5);
t474 = t353 - t598;
t119 = t310 * t405 + t474;
t473 = -t244 + t516;
t122 = -t393 - t473;
t85 = t122 - t587 + t635;
t90 = -t116 - t638;
t573 = t245 + t221;
t588 = t406 * qJ(5);
t121 = -t573 - t588;
t91 = -t121 - t636;
t9 = t118 * t119 + t84 * t85 + t90 * t91;
t632 = t9 * qJD(1);
t40 = -t308 * t90 - t311 * t84;
t630 = qJD(1) * t40;
t616 = t170 * t311;
t618 = t131 * t407;
t46 = -t194 * t308 + t616 - t618;
t629 = qJD(1) * t46;
t50 = t116 * t308 - t117 * t311;
t628 = qJD(1) * t50;
t57 = t116 * t407 + t616;
t627 = qJD(1) * t57;
t619 = t130 * t407;
t75 = -t352 * t308 - t619;
t626 = qJD(1) * t75;
t76 = t352 * t311 - t618;
t625 = qJD(1) * t76;
t93 = t131 - t638;
t10 = t118 * t156 + t84 * t93 + t90 * t92;
t624 = t10 * qJD(1);
t11 = -t308 * t91 - t310 * t90 - t311 * t85 + t313 * t84;
t623 = t11 * qJD(1);
t622 = t118 * t308;
t621 = t118 * t311;
t14 = -(-t90 + t93) * t311 - t696 * t308;
t617 = t14 * qJD(1);
t171 = t474 + t637;
t19 = t116 * t121 + t117 * t122 + t170 * t171;
t613 = t19 * qJD(1);
t612 = t190 * t407;
t20 = t118 * t310 + t119 * t308 - t84 * t406 + t407 * t85;
t611 = t20 * qJD(1);
t21 = t116 * t130 + t117 * t131 + t170 * t194;
t610 = t21 * qJD(1);
t22 = -t118 * t313 + t119 * t311 + t90 * t406 - t407 * t91;
t609 = t22 * qJD(1);
t23 = t116 * t310 + t117 * t313 + t121 * t308 - t122 * t311;
t607 = t23 * qJD(1);
t24 = -t692 * t311 + (-t117 + t130) * t308;
t606 = t24 * qJD(1);
t605 = t256 * t406;
t604 = t256 * t407;
t603 = t257 * t406;
t602 = t257 * t407;
t35 = -t116 * t406 + t121 * t407 - t170 * t313 + t171 * t311;
t596 = t35 * qJD(1);
t36 = t117 * t406 - t122 * t407 - t170 * t310 - t171 * t308;
t595 = t36 * qJD(1);
t38 = t156 * t308 + t407 * t93 - t621;
t594 = t38 * qJD(1);
t39 = t156 * t311 - t407 * t92 + t622;
t593 = t39 * qJD(1);
t44 = t130 * t406 - t353 * t308 - t352 * t310 + t407 * t473;
t585 = t44 * qJD(1);
t45 = -t131 * t406 - t353 * t311 + t352 * t313 + t407 * t573;
t584 = t45 * qJD(1);
t47 = t170 * t308 + t194 * t311 + t619;
t583 = t47 * qJD(1);
t48 = t407 * t84 + t622;
t582 = t48 * qJD(1);
t49 = -t407 * t90 + t621;
t581 = t49 * qJD(1);
t420 = t604 / 0.2e1 + t352 * t652 - t308 * t649;
t54 = t420 - t576;
t580 = t54 * qJD(1);
t274 = -pkin(7) * t591 + t338;
t70 = (t274 * t407 + t293 * t406) * t404 + (t275 * t407 + t294 * t406) * t403;
t579 = t70 * qJD(1);
t89 = pkin(7) ^ 2 * t406 * t407 + t274 * t293 + t275 * t294;
t578 = t89 * qJD(1);
t391 = t407 * qJD(4);
t534 = t311 * qJD(3);
t572 = qJ(5) * t391 - t534;
t372 = t403 ^ 2 + t404 ^ 2;
t164 = (t274 * t404 + t275 * t403) * t406;
t569 = qJD(1) * t164;
t188 = t308 * t406 - t310 * t407;
t568 = qJD(1) * t188;
t189 = t311 * t406 + t313 * t407;
t567 = qJD(1) * t189;
t566 = qJD(1) * t308;
t564 = qJD(2) * t346;
t562 = qJD(2) * t382;
t561 = qJD(2) * t406;
t560 = qJD(2) * t407;
t556 = qJD(4) * t131;
t555 = qJD(4) * t192;
t554 = qJD(4) * t256;
t553 = qJD(5) * t407;
t551 = qJD(6) * t407;
t113 = -t308 * t313 + t310 * t311;
t550 = t113 * qJD(1);
t549 = t130 * qJD(4);
t157 = -t274 * t406 + (t293 - 0.2e1 * t378) * t407;
t548 = t157 * qJD(1);
t158 = t294 * t407 + (-t275 + 0.2e1 * t379) * t406;
t547 = t158 * qJD(1);
t546 = t203 * qJD(1);
t204 = t500 + t570;
t545 = t204 * qJD(1);
t540 = t209 * qJD(1);
t250 = t257 * qJD(4);
t537 = t308 * qJD(3);
t401 = t406 ^ 2;
t345 = t372 * t401;
t531 = t345 * qJD(1);
t529 = t348 * qJD(3);
t527 = t348 * qJD(6);
t526 = t372 * qJD(2);
t402 = t407 ^ 2;
t375 = t402 - t401;
t525 = t375 * qJD(1);
t524 = t406 * qJD(1);
t522 = pkin(1) * t524;
t521 = pkin(1) * t523;
t520 = pkin(7) * t560;
t518 = -t84 / 0.2e1 - t92 / 0.2e1;
t512 = qJ(5) * t553;
t511 = t407 * t537;
t510 = t406 * t557;
t509 = t346 * t333;
t506 = t406 * t560;
t505 = t406 * t523;
t241 = t602 / 0.2e1;
t498 = t588 / 0.2e1;
t493 = t405 / 0.2e1 + t662;
t492 = qJD(1) * t426 + t254;
t487 = qJD(2) * t204 + t507;
t483 = qJD(2) * t209 - t507;
t481 = -t537 - t553;
t476 = t663 + t493;
t475 = t576 + t588;
t367 = t380 * qJ(5);
t472 = -t636 / 0.2e1 + t576;
t414 = -t118 * t187 / 0.2e1 - t156 * t172 / 0.2e1 + t90 * t660 + t93 * t661;
t441 = t85 * t646 + t91 * qJ(5) / 0.2e1;
t1 = t192 * t518 + t414 + t441;
t37 = t172 * t187;
t469 = -t1 * qJD(1) + t37 * qJD(2);
t411 = t518 * t346 + (t93 / 0.2e1 - t90 / 0.2e1) * t348 + (t661 + t660) * t308;
t440 = t313 * t646 + t503;
t4 = t411 - t440;
t468 = t4 * qJD(1);
t442 = -t121 * qJ(5) / 0.2e1 + t122 * t664;
t5 = -t256 * t495 + t442 - t709;
t51 = t220 * t690;
t467 = -t5 * qJD(1) + t51 * qJD(2);
t408 = t423 + t719;
t12 = -t406 * t493 + t408 + t689;
t63 = t172 * t348 + t187 * t346;
t464 = -qJD(1) * t12 - qJD(2) * t63;
t417 = t472 - t670;
t422 = t156 * t651 + t187 * t655 - t190 * t644;
t15 = t417 - t422 + t588;
t64 = t172 * t346 - t187 * t348;
t463 = qJD(1) * t15 - qJD(2) * t64;
t413 = t190 * t655 + t192 * t656 + t651 * t84 + t652 * t90;
t436 = t377 / 0.2e1 + t647 - t598 / 0.2e1;
t416 = t310 * t519 + t436;
t17 = t413 + t416;
t69 = t190 * t348 - t192 * t346;
t462 = -qJD(1) * t17 + qJD(2) * t69;
t410 = t170 * t653 + t194 * t650 + t308 * t697 + t690 * t654 - t604 / 0.2e1;
t25 = t410 + t475;
t88 = t220 * t346 - t348 * t690;
t461 = qJD(1) * t25 - qJD(2) * t88;
t415 = -t574 - t671;
t421 = t194 * t652 + t656 * t690 + t241;
t27 = -t393 + t415 + t421;
t87 = -t220 * t348 - t346 * t690;
t460 = -qJD(1) * t27 + qJD(2) * t87;
t459 = -t293 * t403 + t294 * t404;
t109 = t256 * t348 - t257 * t346;
t412 = t116 * t653 + t117 * t651 + t256 * t655 + t257 * t656;
t424 = t637 / 0.2e1 + t436;
t29 = t412 + t424;
t457 = -qJD(1) * t29 + qJD(2) * t109;
t163 = t667 - t307;
t81 = t599 + t601;
t456 = qJD(1) * t163 + qJD(2) * t81;
t193 = t666 - t665;
t455 = qJD(1) * t81 + qJD(2) * t193;
t101 = -t311 * t476 + t631;
t143 = t348 * t476 + t336;
t454 = qJD(1) * t101 + qJD(2) * t143;
t105 = 0.2e1 * t657 - t641;
t453 = qJD(1) * t105 + qJD(2) * t690;
t438 = t274 * t403 / 0.2e1 - t275 * t404 / 0.2e1;
t161 = t647 + t438;
t354 = t372 * qJ(3);
t448 = qJD(1) * t161 - qJD(2) * t354;
t215 = -t564 - t566;
t216 = t563 - t565;
t159 = t395 / 0.2e1 + t493 * t407;
t447 = -qJD(1) * t159 + qJD(4) * t405;
t437 = -t311 * t649 + t352 * t651;
t31 = t497 + t408;
t435 = qJD(1) * t31 + t172 * t563;
t33 = t498 - t612 / 0.2e1 + t417;
t434 = qJD(1) * t33 - t172 * t564;
t41 = t648 + t241 + t415;
t433 = -qJD(1) * t41 - t220 * t563;
t240 = -t602 / 0.2e1;
t53 = t240 + t437 + t574;
t432 = qJD(1) * t53 - t348 * t562;
t430 = qJD(2) * t137 + t508;
t429 = -qJD(1) * t137 + t254;
t428 = t472 + t670;
t268 = t667 + t402;
t427 = -qJD(1) * t268 - t308 * t564 + t391;
t269 = t402 + t307;
t144 = qJD(1) * t269 - t311 * t563 - t391;
t425 = -t574 + t671;
t419 = qJD(2) * t471 + t557;
t399 = qJ(5) * qJD(5);
t383 = t561 / 0.2e1;
t343 = (t523 - qJD(4) / 0.2e1) * t406;
t332 = t665 * qJD(5);
t329 = t346 * qJD(3);
t327 = t346 * qJD(5);
t301 = t311 * qJD(5);
t264 = t269 * qJD(5);
t230 = t308 * t552;
t177 = t688 * t348;
t176 = qJD(2) * t665 - t348 * t565;
t175 = qJD(2) * t666 + t346 * t566;
t162 = t647 - t438;
t142 = t688 * t311;
t132 = t137 * qJD(4);
t106 = t657 - t631 / 0.2e1;
t79 = t81 * qJD(4);
t62 = t405 * t644 - t395 / 0.2e1 - t586 / 0.2e1 + t92;
t56 = t241 - t437 + t574;
t55 = -t420 - t576;
t42 = t240 + t648 + t425;
t34 = t612 / 0.2e1 + t498 + t428;
t30 = -t412 + t424;
t28 = -t393 - t421 + t425;
t26 = -t410 + t475;
t18 = -t413 + t416;
t16 = t422 + t428 + t588;
t13 = t405 * t645 - t32 + t689;
t8 = t418 + t443;
t6 = t442 + t692 * t256 / 0.2e1 + t709;
t3 = t411 + t440;
t2 = t659 * t696 - t414 + t441;
t43 = [0, 0, 0, t506, t375 * qJD(2), 0, 0, 0, -pkin(1) * t561, -pkin(1) * t560, -t157 * qJD(2) + t404 * t510, t158 * qJD(2) - t403 * t510, -qJD(2) * t70 + qJD(3) * t345, qJD(2) * t89 - qJD(3) * t164 -(qJD(2) * t313 - t536) * t311, qJD(2) * t113 + qJD(4) * t163, -t189 * qJD(2) + t308 * t391, -t188 * qJD(2) - t311 * t391, -t506, -t44 * qJD(2) - t76 * qJD(4) - t407 * t534, t45 * qJD(2) + t75 * qJD(4) - t511, t23 * qJD(2) + t24 * qJD(4) + t407 * t535 + t702, t36 * qJD(2) + t46 * qJD(4) + t694, t35 * qJD(2) + t47 * qJD(4) + t264 + t511, qJD(2) * t19 + qJD(3) * t50 + qJD(4) * t21 + qJD(5) * t57, t11 * qJD(2) + t14 * qJD(4) + t407 * t714 + t702, t22 * qJD(2) + t39 * qJD(4) + t264 + (t532 + t557) * t308, t20 * qJD(2) + t38 * qJD(4) + t268 * qJD(6) - t694, qJD(2) * t9 + qJD(3) * t40 + qJD(4) * t10 + qJD(5) * t49 + qJD(6) * t48; 0, 0, 0, t505, t525, t560, -t561, 0, -t520 - t522, pkin(7) * t561 - t521, -t379 * qJD(2) + t403 * t419 - t548, t403 * t520 + t404 * t419 + t547, qJD(2) * t459 - t579, t578 + (-pkin(2) * t394 + qJ(3) * t459) * qJD(2) + t162 * qJD(3), t216 * t313 + t132, t550 + (-t310 * t348 - t313 * t346) * qJD(2) + t79, -qJD(4) * t465 + t348 * t561 - t567, -qJD(4) * t203 - t346 * t561 - t568, -t343, -t585 + (t310 * t382 + t346 * t353 - t605) * qJD(2) - t204 * qJD(3) + t56 * qJD(4), t584 + (t313 * t382 + t348 * t353 - t603) * qJD(2) + t542 + t55 * qJD(4), t607 + (t121 * t346 + t122 * t348 + t256 * t313 - t257 * t310) * qJD(2) + t8 * qJD(4) + t707, t595 + (-t171 * t346 - t220 * t310 + t605) * qJD(2) + t28 * qJD(4) + t668, t596 + (-t171 * t348 - t220 * t313 + t603) * qJD(2) + t26 * qJD(4) + t711, t613 + (-t121 * t257 + t122 * t256 + t171 * t220) * qJD(2) + t30 * qJD(3) + t6 * qJD(4) + t42 * qJD(5), t623 + (t190 * t313 - t192 * t310 - t346 * t91 + t348 * t85) * qJD(2) + t3 * qJD(4) + t210 * qJD(6) + t707, t609 + (-t119 * t348 - t172 * t313 + t192 * t406) * qJD(2) + t16 * qJD(4) + t127 * qJD(6) + t711, t611 + (t119 * t346 + t172 * t310 - t190 * t406) * qJD(2) + t13 * qJD(4) + t230 - t668, t632 + (t119 * t172 + t190 * t85 + t192 * t91) * qJD(2) + t18 * qJD(3) + t2 * qJD(4) + t32 * qJD(5) + t34 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (qJD(2) * t403 + t404 * t524) * t407 (qJD(2) * t404 - t403 * t524) * t407, t531, qJD(2) * t162 - t569, 0, 0, 0, 0, 0, -t487, t717, t700, -t483, -t717, qJD(2) * t30 + qJD(4) * t106 + t628, t700, -t717, t483, qJD(2) * t18 - qJD(4) * t142 + t630; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t430, t456, -t718, -t686, t383, qJD(2) * t56 - t556 - t625, qJD(2) * t55 + t549 + t626, t8 * qJD(2) + qJD(4) * t470 - t535 + t606, qJD(2) * t28 + t556 + t629, t26 * qJD(2) - t549 - t553 + t583, t610 + t6 * qJD(2) + t106 * qJD(3) + (-pkin(4) * t131 - qJ(5) * t130) * qJD(4) - t116 * qJD(5), t3 * qJD(2) + qJD(4) * t669 + t617 - t714, t16 * qJD(2) + t92 * qJD(4) - t553 + t593, t13 * qJD(2) - t93 * qJD(4) - t551 + t594, t624 + t2 * qJD(2) - t142 * qJD(3) + (qJ(5) * t92 - t405 * t93) * qJD(4) + t90 * qJD(5) + t62 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t718, t490, t144, qJD(2) * t42 - qJD(4) * t116 + t627, -t718, t144, -t490, qJD(2) * t32 + qJD(4) * t90 + t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t687, t715, -t427, qJD(2) * t34 + qJD(4) * t62 + t582; 0, 0, 0, -t505, -t525, 0, 0, 0, t522, t521, t548, -t547, t579, -qJD(3) * t161 - t578, t313 * t565 + t132, t79 - t550, -qJD(4) * t466 + t567, -qJD(4) * t204 + t568, t343, -qJD(3) * t203 - qJD(4) * t53 + t585, -qJD(4) * t54 + t559 - t584, qJD(4) * t7 - t607 + t706, -qJD(4) * t27 - t595 + t698, -qJD(4) * t25 - t596 + t710, -qJD(3) * t29 - qJD(4) * t5 - qJD(5) * t41 - t613, qJD(4) * t4 + qJD(6) * t209 - t623 + t706, -qJD(4) * t15 - qJD(6) * t426 - t609 + t710, qJD(4) * t12 + t230 - t611 - t698, -qJD(3) * t17 - qJD(4) * t1 - qJD(5) * t31 - qJD(6) * t33 - t632; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372 * qJD(3), t354 * qJD(3), -t346 * t528, t193 * qJD(4), 0, 0, 0, t382 * t528, -t382 * t530, t704, qJD(4) * t87 + t509, qJD(4) * t88 + t332, qJD(3) * t109 + qJD(4) * t51 - t220 * t333, t704, qJD(4) * t64 - t346 * t527 + t332, qJD(4) * t63 + qJD(6) * t666 - t509, t69 * qJD(3) + t37 * qJD(4) + t172 * t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t526, -t448, 0, 0, 0, 0, 0, -t546, t674, t699, -t538, -t674, t457, t699, -t674, t538, qJD(4) * t177 + t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t429, t455, t169, -t528 - t545, -t524 / 0.2e1, -t432 - t250, -t346 * t562 + t554 - t580, t633 + (-t597 + t640) * qJD(4) - t327, t250 + t460, -t461 - t554 (-pkin(4) * t257 - qJ(5) * t256) * qJD(4) + t257 * qJD(5) + t467 (-t597 + t693) * qJD(4) - t327 - t527 + t468, -t463 - t703, -t464 - t555, t177 * qJD(3) + (-qJ(5) * t190 - t192 * t405) * qJD(4) + t192 * qJD(5) - t190 * qJD(6) + t469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t169, t701, t176, t250 + t433, t169, t176, -t701, -t435 + t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t528 + t540, -t492, t175, -t434 - t703; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t404 * t505, t403 * t505, -t531, qJD(2) * t161 + t569, 0, 0, 0, 0, 0, t686, -t718, -t700, -t687, t718, qJD(2) * t29 + qJD(4) * t105 + t301 - t628, -t700, t718, t687, qJD(2) * t17 + qJD(4) * t101 + qJD(6) * t308 + t301 - t630; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t526, t448, 0, 0, 0, 0, 0, t528 + t546, -t684, -t699, t685, t684, qJD(4) * t690 - t333 - t457, -t699, t684, -t685, qJD(4) * t143 - t462 + t691; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, t215, 0, -t216, -t215, t453, 0, -t215, t216, t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, 0, 0, 0, -t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t430, -t456, t717, t487, t383, qJD(2) * t53 + t534 + t625, qJD(2) * t54 + t537 - t626, -qJD(2) * t7 - t606, qJD(2) * t27 - t534 - t629, t25 * qJD(2) + t481 - t583, t5 * qJD(2) - t105 * qJD(3) - t512 - t610, -qJD(2) * t4 - t617, t15 * qJD(2) + t481 - t593, -t12 * qJD(2) + t534 - t551 - t594, t1 * qJD(2) - t101 * qJD(3) - t159 * qJD(6) - t512 - t624; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t429, -t455, t672, t545, t524 / 0.2e1, -t529 + t432, t580 + (qJD(3) + t562) * t346, -t633, t529 - t460, -t329 + t461, -qJD(3) * t690 - t467, -t468, -t329 + t463, -t529 + t464, -qJD(3) * t143 - t469; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, -t215, 0, t216, t215, -t453, 0, t215, -t216, -t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5), t399, 0, qJD(5), qJD(6), qJD(6) * t405 + t399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t380, -t367, 0, -t380, 0, -t367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t380, t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t717, t715, -t144, qJD(2) * t41 + t572 - t627, t717, -t144, -t715, t31 * qJD(2) + t551 + t572 - t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t672, -t701, -t176, t529 - t433, t672, -t176, t701, t529 + t435; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t216, 0, 0, 0, t216; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t380, t367, 0, t380, 0, -qJD(6) + t367; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t483, t490, t427, t33 * qJD(2) + t159 * qJD(4) + t481 - t582; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t540, t492, -t175, -t329 + t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t380, qJD(5) - t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t43;
