% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRRR6_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR6_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR6_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR6_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR6_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR6_invdynJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:21:45
% EndTime: 2019-03-10 04:22:54
% DurationCPUTime: 41.08s
% Computational Cost: add. (54237->1068), mult. (129259->1420), div. (0->0), fcn. (105289->18), ass. (0->468)
t481 = sin(qJ(2));
t475 = sin(pkin(6));
t636 = qJD(1) * t475;
t598 = t481 * t636;
t476 = cos(pkin(6));
t484 = cos(qJ(2));
t729 = pkin(1) * t484;
t623 = t476 * t729;
t377 = -pkin(8) * t598 + qJD(1) * t623;
t551 = pkin(2) * t481 - pkin(9) * t484;
t378 = t551 * t636;
t480 = sin(qJ(3));
t734 = cos(qJ(3));
t275 = -t480 * t377 + t734 * t378;
t763 = pkin(10) + pkin(9);
t435 = t763 * t734;
t604 = t484 * t734;
t821 = -(pkin(3) * t481 - pkin(10) * t604) * t636 - t275 - qJD(3) * t435;
t276 = t734 * t377 + t480 * t378;
t433 = t763 * t480;
t597 = t484 * t636;
t565 = t480 * t597;
t820 = -pkin(10) * t565 + qJD(3) * t433 + t276;
t479 = sin(qJ(4));
t733 = cos(qJ(4));
t515 = -t479 * t480 + t733 * t734;
t751 = qJD(3) + qJD(4);
t317 = t515 * t751;
t329 = t515 * t597;
t645 = -t317 + t329;
t399 = t479 * t734 + t480 * t733;
t644 = (-t597 + t751) * t399;
t590 = qJD(4) * t733;
t633 = qJD(4) * t479;
t650 = -t433 * t590 - t435 * t633 + t479 * t821 - t820 * t733;
t666 = t475 * t484;
t453 = pkin(8) * t666;
t730 = pkin(1) * t481;
t455 = t476 * t730;
t639 = t453 + t455;
t380 = t639 * qJD(1);
t634 = qJD(3) * t480;
t553 = -t380 + (-t565 + t634) * pkin(3);
t819 = pkin(11) * t598 - t650;
t818 = t644 * pkin(4) + pkin(11) * t645 + t553;
t478 = sin(qJ(5));
t483 = cos(qJ(5));
t278 = t329 * t478 - t483 * t598;
t817 = -t317 * t478 + t278;
t572 = qJD(1) * t476 + qJD(2);
t353 = -t480 * t598 + t734 * t572;
t606 = t475 * t734;
t559 = qJD(1) * t606;
t354 = t480 * t572 + t481 * t559;
t261 = -t733 * t353 + t354 * t479;
t477 = sin(qJ(6));
t665 = t477 * t478;
t732 = cos(qJ(6));
t527 = t732 * t483 - t665;
t750 = qJD(5) + qJD(6);
t588 = t732 * qJD(6);
t781 = t483 * (t732 * qJD(5) + t588);
t816 = -t527 * t261 + t665 * t750 - t781;
t600 = t732 * t478;
t398 = t477 * t483 + t600;
t316 = t750 * t398;
t815 = t398 * t261 + t316;
t630 = qJD(5) * t483;
t783 = t261 * t483;
t814 = t630 + t783;
t668 = t475 * t481;
t778 = t476 * t734 - t480 * t668;
t535 = t778 * pkin(3);
t626 = qJDD(1) * t476;
t562 = qJDD(2) + t626;
t625 = qJDD(1) * t481;
t585 = t475 * t625;
t627 = qJD(1) * qJD(2);
t586 = t484 * t627;
t779 = t475 * t586 + t585;
t496 = qJD(3) * t354 + t480 * t779 - t562 * t734;
t587 = t481 * t627;
t557 = t475 * t587;
t624 = qJDD(1) * t484;
t445 = t475 * t624;
t620 = pkin(1) * qJD(2) * t476;
t570 = qJD(1) * t620;
t615 = pkin(1) * t626;
t609 = pkin(8) * t445 + t481 * t615 + t484 * t570;
t287 = -pkin(8) * t557 + t609;
t269 = pkin(9) * t562 + t287;
t530 = t551 * qJD(2);
t534 = -pkin(2) * t484 - pkin(9) * t481 - pkin(1);
t273 = (qJD(1) * t530 + qJDD(1) * t534) * t475;
t327 = qJD(2) * pkin(9) + (t453 + (pkin(9) + t730) * t476) * qJD(1);
t370 = t534 * t475;
t344 = qJD(1) * t370;
t591 = qJD(3) * t734;
t520 = -t734 * t269 - t480 * t273 + t327 * t634 - t344 * t591;
t104 = -pkin(10) * t496 - t520;
t243 = -t327 * t480 + t734 * t344;
t208 = -pkin(10) * t354 + t243;
t428 = -qJD(3) + t597;
t193 = -pkin(3) * t428 + t208;
t244 = t327 * t734 + t480 * t344;
t209 = t353 * pkin(10) + t244;
t141 = -qJD(3) * t244 - t480 * t269 + t734 * t273;
t537 = t484 * t559;
t567 = t481 * t606;
t803 = qJD(3) * t353;
t247 = -qJD(2) * t537 - qJDD(1) * t567 - t480 * t562 - t803;
t371 = qJDD(3) - t445 + t557;
t97 = t371 * pkin(3) + t247 * pkin(10) + t141;
t573 = t479 * t104 + t193 * t633 + t209 * t590 - t733 * t97;
t362 = qJDD(4) + t371;
t718 = t362 * pkin(4);
t43 = t573 - t718;
t735 = cos(qJ(1));
t602 = t735 * t484;
t482 = sin(qJ(1));
t661 = t481 * t482;
t390 = -t476 * t661 + t602;
t474 = qJ(3) + qJ(4);
t465 = sin(t474);
t467 = cos(t474);
t667 = t475 * t482;
t310 = t390 * t465 - t467 * t667;
t366 = -t465 * t668 + t467 * t476;
t603 = t735 * t481;
t659 = t482 * t484;
t388 = t476 * t603 + t659;
t607 = t475 * t735;
t578 = -t388 * t465 - t467 * t607;
t774 = -g(1) * t310 + g(2) * t578 + g(3) * t366;
t813 = t43 + t774;
t571 = pkin(3) * t590;
t203 = t479 * t209;
t139 = t208 * t733 - t203;
t529 = t479 * t353 + t354 * t733;
t187 = pkin(4) * t529 + pkin(11) * t261;
t728 = pkin(3) * t354;
t164 = t187 + t728;
t72 = t483 * t139 + t478 * t164;
t812 = t483 * t571 - t72;
t71 = -t139 * t478 + t483 * t164;
t811 = -t478 * t571 - t71;
t517 = t399 * t630 - t817;
t279 = t329 * t483 + t478 * t598;
t690 = t317 * t483;
t579 = t279 - t690;
t631 = qJD(5) * t478;
t516 = -t399 * t631 - t579;
t411 = -qJD(4) + t428;
t222 = t411 * t483 + t478 * t529;
t224 = -t411 * t478 + t483 * t529;
t135 = t247 * t733 - t353 * t590 + t354 * t633 + t479 * t496;
t610 = -t478 * t135 - t411 * t631 + t529 * t630;
t532 = t362 * t483 - t610;
t80 = t478 * t532;
t777 = qJD(5) + t261;
t804 = t777 * t478;
t88 = t483 * t135 - t478 * t362 + t411 * t630 + t529 * t631;
t810 = -t222 * t814 - t224 * t804 - t88 * t483 + t80;
t136 = qJD(4) * t529 - t479 * t247 + t733 * t496;
t127 = qJDD(5) + t136;
t120 = t483 * t127;
t809 = t222 * t529 - t777 * t804 + t120;
t784 = t261 * t478;
t808 = pkin(12) * t784;
t204 = t733 * t209;
t118 = t479 * t193 + t204;
t111 = -t411 * pkin(11) + t118;
t326 = -pkin(2) * t572 - t377;
t265 = -t353 * pkin(3) + t326;
t144 = t261 * pkin(4) - pkin(11) * t529 + t265;
t67 = -t111 * t478 + t483 * t144;
t711 = t67 * t777;
t727 = pkin(3) * t479;
t460 = pkin(11) + t727;
t716 = -pkin(12) - t460;
t582 = qJD(5) * t716;
t807 = t478 * t582 - t808 + t812;
t801 = pkin(5) * t529 + pkin(12) * t783;
t806 = t483 * t582 - t801 + t811;
t805 = t478 * t819 + t818 * t483;
t463 = pkin(3) * t734 + pkin(2);
t303 = -pkin(4) * t515 - t399 * pkin(11) - t463;
t336 = -t479 * t433 + t435 * t733;
t657 = t303 * t630 - t336 * t631 + t818 * t478 - t483 * t819;
t802 = (t631 + t784) * pkin(5);
t19 = -pkin(5) * t532 + t43;
t56 = -pkin(12) * t224 + t67;
t49 = pkin(5) * t777 + t56;
t68 = t111 * t483 + t144 * t478;
t57 = -pkin(12) * t222 + t68;
t616 = t732 * t57;
t23 = t477 * t49 + t616;
t473 = qJ(5) + qJ(6);
t464 = sin(t473);
t117 = t193 * t733 - t203;
t110 = t411 * pkin(4) - t117;
t93 = t222 * pkin(5) + t110;
t800 = t19 * t398 + t23 * t529 + t464 * t774 - t816 * t93;
t712 = t477 * t57;
t22 = t49 * t732 - t712;
t466 = cos(t473);
t799 = -t19 * t527 - t22 * t529 - t466 * t774 + t815 * t93;
t151 = t732 * t222 + t224 * t477;
t528 = -t477 * t222 + t224 * t732;
t39 = qJD(6) * t528 - t477 * t88 - t732 * t532;
t798 = t151 * t815 - t39 * t527;
t83 = t88 * t478;
t796 = t224 * t814 - t83;
t126 = qJDD(6) + t127;
t255 = qJD(6) + t777;
t795 = t398 * t126 - t255 * t816 - t528 * t529;
t794 = t126 * t527 + t151 * t529 - t255 * t815;
t629 = qJD(6) * t477;
t38 = t222 * t588 + t224 * t629 - t477 * t532 + t732 * t88;
t793 = -t38 * t398 - t528 * t816;
t119 = t478 * t127;
t792 = -t224 * t529 + t777 * t814 + t119;
t574 = -t733 * t104 - t193 * t590 + t209 * t633 - t479 * t97;
t42 = pkin(11) * t362 - t574;
t568 = pkin(8) * t779 + t481 * t570 - t484 * t615;
t270 = -pkin(2) * t562 + t568;
t186 = pkin(3) * t496 + t270;
t54 = t136 * pkin(4) + t135 * pkin(11) + t186;
t12 = -qJD(5) * t68 - t478 * t42 + t483 * t54;
t8 = pkin(5) * t127 + pkin(12) * t88 + t12;
t524 = t111 * t631 - t144 * t630 - t483 * t42 - t478 * t54;
t9 = pkin(12) * t532 - t524;
t3 = t477 * t8 + t49 * t588 - t57 * t629 + t732 * t9;
t4 = -qJD(6) * t23 - t477 * t9 + t732 * t8;
t307 = t388 * t467 - t465 * t607;
t311 = t390 * t467 + t465 * t667;
t367 = t465 * t476 + t467 * t668;
t518 = g(1) * t311 + g(2) * t307 + g(3) * t367;
t791 = t22 * t816 - t23 * t815 + t3 * t527 - t4 * t398 - t518;
t790 = t151 * t816 - t38 * t527 - t398 * t39 - t528 * t815;
t321 = t483 * t336;
t789 = pkin(12) * t279 - pkin(12) * t690 + (-t321 + (pkin(12) * t399 - t303) * t478) * qJD(5) + t805 + t644 * pkin(5);
t788 = pkin(12) * t517 - t657;
t485 = -pkin(12) - pkin(11);
t608 = qJD(5) * t485;
t77 = t483 * t117 + t478 * t187;
t787 = t478 * t608 - t77 - t808;
t76 = -t117 * t478 + t483 * t187;
t786 = t483 * t608 - t76 - t801;
t785 = t110 * t261;
t701 = t151 * t528;
t692 = t261 * t529;
t138 = t208 * t479 + t204;
t756 = -pkin(3) * t633 + t138;
t649 = -qJD(4) * t336 + t820 * t479 + t733 * t821;
t322 = -t390 * t480 + t482 * t606;
t450 = pkin(8) * t668;
t392 = -t450 + t623;
t381 = qJD(2) * t392;
t776 = -t151 ^ 2 + t528 ^ 2;
t775 = -t261 ^ 2 + t529 ^ 2;
t773 = t151 * t255 - t38;
t389 = t476 * t659 + t603;
t238 = t311 * t466 + t389 * t464;
t387 = -t476 * t602 + t661;
t768 = t307 * t466 + t387 * t464;
t772 = t93 * t151 + g(1) * t238 + g(2) * t768 - g(3) * (-t367 * t466 + t464 * t666) - t3;
t771 = -t261 * t411 - t135;
t770 = t261 * t265 + t518 + t574;
t769 = t307 * t464 - t387 * t466;
t767 = t307 * t478 - t387 * t483;
t684 = t387 * t478;
t766 = t307 * t483 + t684;
t513 = -t483 * t524 - t518;
t760 = -t68 * t777 - t12;
t394 = t716 * t478;
t468 = t483 * pkin(12);
t675 = t460 * t483;
t395 = t468 + t675;
t301 = t394 * t732 - t477 * t395;
t759 = qJD(6) * t301 + t806 * t477 + t807 * t732;
t302 = t477 * t394 + t395 * t732;
t705 = -qJD(6) * t302 - t807 * t477 + t806 * t732;
t758 = t255 * t529;
t757 = t777 * t529;
t752 = g(1) * t389 + g(2) * t387;
t511 = g(3) * t666 - t752;
t503 = t511 * t465;
t755 = t244 * t428 - t141;
t369 = pkin(9) * t476 + t639;
t271 = -t369 * t480 + t734 * t370;
t384 = t476 * t480 + t567;
t220 = -pkin(3) * t666 - pkin(10) * t384 + t271;
t272 = t734 * t369 + t480 * t370;
t231 = pkin(10) * t778 + t272;
t156 = t479 * t220 + t733 * t231;
t149 = -pkin(11) * t666 + t156;
t280 = t384 * t479 - t733 * t778;
t281 = t384 * t733 + t479 * t778;
t368 = t450 + (-pkin(2) - t729) * t476;
t293 = t368 - t535;
t173 = pkin(4) * t280 - pkin(11) * t281 + t293;
t87 = t483 * t149 + t478 * t173;
t648 = pkin(4) * t598 - t649;
t229 = t478 * t303 + t321;
t640 = -t756 + t802;
t251 = -t311 * t478 + t389 * t483;
t658 = t483 * t484;
t612 = t475 * t658;
t754 = g(2) * t767 - g(3) * (-t367 * t478 - t612) - g(1) * t251;
t504 = t384 * qJD(3);
t595 = qJD(2) * t666;
t491 = t480 * t595 + t504;
t382 = t639 * qJD(2);
t749 = -t460 * t631 + t812;
t748 = t110 * t631 - t67 * t529;
t237 = -t311 * t464 + t389 * t466;
t745 = -t93 * t528 - g(1) * t237 + g(2) * t769 - g(3) * (-t367 * t464 - t466 * t666) + t4;
t744 = t110 * t630 + t813 * t478 + t68 * t529;
t740 = t255 * t528 - t39;
t739 = -t265 * t529 - t573 - t774;
t738 = -t411 * t529 - t136;
t487 = qJD(1) ^ 2;
t736 = qJD(2) ^ 2;
t470 = t475 ^ 2;
t731 = pkin(1) * t470;
t401 = t463 * t666;
t720 = g(3) * t401;
t719 = g(3) * t475;
t717 = t483 * pkin(5);
t228 = t483 * t303 - t336 * t478;
t676 = t399 * t483;
t188 = -pkin(5) * t515 - pkin(12) * t676 + t228;
t677 = t399 * t478;
t207 = -pkin(12) * t677 + t229;
t114 = t188 * t732 - t477 * t207;
t715 = qJD(6) * t114 + t789 * t477 - t788 * t732;
t115 = t477 * t188 + t207 * t732;
t714 = -qJD(6) * t115 + t788 * t477 + t789 * t732;
t713 = t12 * t478;
t709 = -qJD(5) * t229 + t805;
t432 = t485 * t478;
t434 = pkin(11) * t483 + t468;
t333 = t432 * t732 - t477 * t434;
t703 = qJD(6) * t333 + t786 * t477 + t787 * t732;
t335 = t477 * t432 + t434 * t732;
t702 = -qJD(6) * t335 - t787 * t477 + t786 * t732;
t700 = t222 * t478;
t699 = t224 * t222;
t689 = t353 * t428;
t688 = t354 * t353;
t687 = t354 * t428;
t682 = t388 * t478;
t681 = t388 * t480;
t680 = t389 * t478;
t679 = t390 * t478;
t674 = t464 * t467;
t673 = t466 * t467;
t672 = t467 * t478;
t671 = t467 * t483;
t670 = t467 * t484;
t669 = t470 * t487;
t664 = t478 * t484;
t662 = t480 * t484;
t660 = t481 * t763;
t653 = -t477 * t278 + t732 * t279 + t316 * t399 - t317 * t527;
t652 = -t732 * t278 + t317 * t600 + t399 * t781 + t516 * t477 - t629 * t677;
t651 = t517 * pkin(5) + t648;
t461 = pkin(4) + t717;
t647 = -t307 * t485 + t461 * t578;
t646 = -t310 * t461 - t311 * t485;
t643 = t366 * t461 - t367 * t485;
t642 = -t387 * t463 + t388 * t763;
t641 = -t389 * t463 + t390 * t763;
t638 = t735 * pkin(1) + pkin(8) * t667;
t471 = t481 ^ 2;
t472 = t484 ^ 2;
t637 = t471 - t472;
t635 = qJD(2) * t481;
t632 = qJD(5) * t777;
t621 = t733 * pkin(3);
t614 = t484 * t669;
t437 = t475 * t664;
t611 = t480 * t667;
t601 = t734 * t371;
t596 = t475 * t635;
t592 = t475 * t476 * t487;
t584 = -pkin(1) * t482 + pkin(8) * t607;
t86 = -t149 * t478 + t483 * t173;
t334 = t733 * t433 + t435 * t479;
t569 = t481 * t614;
t438 = t480 * t607;
t462 = -t621 - pkin(4);
t561 = t735 * t734;
t558 = t481 * t586;
t555 = t322 * pkin(3);
t554 = -t118 + t802;
t550 = pkin(4) * t467 + pkin(11) * t465;
t549 = g(1) * t578 + g(2) * t310;
t548 = g(1) * t387 - g(2) * t389;
t547 = g(1) * t390 + g(2) * t388;
t155 = t220 * t733 - t479 * t231;
t546 = t388 * t734 - t438;
t543 = t478 * t68 + t483 * t67;
t540 = pkin(3) * t611 + t389 * t763 + t390 * t463 + t638;
t539 = -t127 * t460 + t785;
t538 = t461 * t467 - t465 * t485;
t531 = g(1) * t735 + g(2) * t482;
t148 = pkin(4) * t666 - t155;
t257 = t281 * t483 - t437;
t65 = pkin(5) * t280 - pkin(12) * t257 + t86;
t256 = t281 * t478 + t612;
t70 = -pkin(12) * t256 + t87;
t36 = -t477 * t70 + t65 * t732;
t37 = t477 * t65 + t70 * t732;
t179 = -t477 * t256 + t257 * t732;
t525 = pkin(3) * t438 - t387 * t763 - t388 * t463 + t584;
t379 = t475 * t530;
t195 = -qJD(3) * t272 + t734 * t379 - t480 * t381;
t319 = qJD(3) * t778 + t595 * t734;
t163 = pkin(3) * t596 - t319 * pkin(10) + t195;
t194 = -t369 * t634 + t370 * t591 + t480 * t379 + t734 * t381;
t170 = -pkin(10) * t491 + t194;
t62 = t479 * t163 + t733 * t170 + t220 * t590 - t231 * t633;
t59 = pkin(11) * t596 + t62;
t184 = -t319 * t733 + t384 * t633 + t479 * t491 - t590 * t778;
t185 = qJD(4) * t281 + t479 * t319 + t491 * t733;
t92 = pkin(3) * t491 + t185 * pkin(4) + pkin(8) * t595 + t184 * pkin(11) + t481 * t620;
t15 = -t149 * t631 + t173 * t630 + t478 * t92 + t483 * t59;
t63 = t163 * t733 - t479 * t170 - t220 * t633 - t231 * t590;
t521 = t586 + t625;
t85 = t532 * t483;
t514 = -t480 * t371 + t428 * t591;
t510 = -g(3) * t668 - t547;
t509 = qJD(5) * t224 + t532;
t508 = -t475 * t561 - t681;
t506 = -0.2e1 * t587 + 0.2e1 * t624;
t505 = -t270 - t511;
t502 = t508 * pkin(3);
t501 = t537 - t591;
t16 = -qJD(5) * t87 - t478 * t59 + t483 * t92;
t60 = -pkin(4) * t596 - t63;
t495 = -t520 * t734 + t510;
t492 = t496 * t734;
t424 = t462 - t717;
t355 = t366 * pkin(4);
t323 = t390 * t734 + t611;
t305 = t310 * pkin(4);
t304 = t578 * pkin(4);
t290 = t527 * t399;
t289 = t398 * t399;
t277 = pkin(5) * t677 + t334;
t266 = pkin(3) * t504 + (t455 + (pkin(3) * t480 + pkin(8)) * t666) * qJD(2);
t252 = t311 * t483 + t680;
t178 = t256 * t732 + t257 * t477;
t134 = -qJD(5) * t437 - t184 * t478 + t281 * t630 - t483 * t596;
t133 = qJD(5) * t256 + t483 * t184 - t478 * t596;
t107 = t256 * pkin(5) + t148;
t51 = qJD(6) * t179 - t477 * t133 + t134 * t732;
t50 = t133 * t732 + t477 * t134 + t256 * t588 + t257 * t629;
t46 = t134 * pkin(5) + t60;
t25 = t56 * t732 - t712;
t24 = -t477 * t56 - t616;
t14 = -pkin(12) * t134 + t15;
t13 = pkin(5) * t185 + pkin(12) * t133 + t16;
t6 = -qJD(6) * t37 + t13 * t732 - t477 * t14;
t5 = qJD(6) * t36 + t477 * t13 + t14 * t732;
t1 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t482 - g(2) * t735, t531, 0, 0 (qJDD(1) * t471 + 0.2e1 * t558) * t470, 0.2e1 * (t481 * t624 - t627 * t637) * t470 (t481 * qJDD(2) + 0.2e1 * t476 * t521 + t484 * t736) * t475 (qJDD(1) * t472 - 0.2e1 * t558) * t470 (t484 * qJDD(2) + t476 * t506 - t481 * t736) * t475, t562 * t476, g(1) * t388 - g(2) * t390 - t382 * t572 + t392 * t562 - t476 * t568 + t506 * t731, -t287 * t476 - t381 * t572 - 0.2e1 * t521 * t731 - t562 * t639 - t548 ((-t377 * qJD(2) + t639 * qJDD(1) + t287) * t484 + (-qJD(2) * t380 - t392 * qJDD(1) + t568) * t481 - t531) * t475, t470 * qJDD(1) * pkin(1) ^ 2 - g(1) * t584 - g(2) * t638 + t287 * t639 - t377 * t382 + t380 * t381 - t392 * t568, -t247 * t384 + t319 * t354, -t247 * t778 + t319 * t353 - t354 * t491 - t384 * t496, -t319 * t428 + t371 * t384 + (t247 * t484 + t354 * t635) * t475, -t353 * t491 - t496 * t778, t353 * t596 + t371 * t778 + t428 * t491 + t496 * t666 (-t371 * t484 - t428 * t635) * t475, g(1) * t546 - g(2) * t323 - t141 * t666 - t195 * t428 + t243 * t596 - t270 * t778 + t271 * t371 + t326 * t491 - t382 * t353 + t368 * t496, -g(1) * t681 - g(2) * t322 + t194 * t428 - t368 * t247 + t270 * t384 - t272 * t371 + t326 * t319 + t382 * t354 + (-g(1) * t561 - t244 * t635 - t484 * t520) * t475, -t141 * t384 + t194 * t353 - t195 * t354 - t243 * t319 - t244 * t491 + t271 * t247 - t272 * t496 - t520 * t778 + t548, -t520 * t272 + t244 * t194 + t141 * t271 + t243 * t195 + t270 * t368 + t326 * t382 - g(1) * (-pkin(2) * t388 - pkin(9) * t387 + t584) - g(2) * (pkin(2) * t390 + pkin(9) * t389 + t638) -t135 * t281 - t184 * t529, t135 * t280 - t136 * t281 + t184 * t261 - t185 * t529, t184 * t411 + t281 * t362 + (t135 * t484 + t529 * t635) * t475, t136 * t280 + t185 * t261, t185 * t411 - t280 * t362 + (t136 * t484 - t261 * t635) * t475 (-t362 * t484 - t411 * t635) * t475, g(1) * t307 - g(2) * t311 + t136 * t293 + t155 * t362 + t185 * t265 + t186 * t280 + t261 * t266 - t411 * t63 + (t117 * t635 + t484 * t573) * t475, -t135 * t293 - t156 * t362 - t184 * t265 + t186 * t281 + t529 * t266 + t411 * t62 + (-t118 * t635 - t484 * t574) * t475 + t549, t117 * t184 - t118 * t185 + t135 * t155 - t136 * t156 - t261 * t62 + t280 * t574 + t281 * t573 - t529 * t63 + t548, -g(1) * t525 - g(2) * t540 + t117 * t63 + t118 * t62 - t155 * t573 - t156 * t574 + t186 * t293 + t265 * t266, -t133 * t224 - t257 * t88, t133 * t222 - t224 * t134 + t88 * t256 + t257 * t532, t127 * t257 - t133 * t777 + t185 * t224 - t280 * t88, t222 * t134 - t256 * t532, -t256 * t127 - t134 * t777 - t222 * t185 + t280 * t532, t127 * t280 + t185 * t777, g(1) * t766 - g(2) * t252 + t110 * t134 + t12 * t280 + t86 * t127 - t148 * t532 + t16 * t777 + t67 * t185 + t60 * t222 + t43 * t256, -g(1) * t767 - g(2) * t251 - t110 * t133 - t87 * t127 - t148 * t88 - t15 * t777 - t68 * t185 + t60 * t224 + t43 * t257 + t524 * t280, -t12 * t257 + t67 * t133 - t68 * t134 - t15 * t222 - t16 * t224 + t256 * t524 + t532 * t87 + t86 * t88 - t549, -t524 * t87 + t68 * t15 + t12 * t86 + t67 * t16 + t43 * t148 + t110 * t60 - g(1) * (-pkin(4) * t307 + pkin(11) * t578 + t525) - g(2) * (pkin(4) * t311 + pkin(11) * t310 + t540) -t179 * t38 - t50 * t528, t151 * t50 + t178 * t38 - t179 * t39 - t51 * t528, t126 * t179 + t185 * t528 - t255 * t50 - t280 * t38, t151 * t51 + t178 * t39, -t126 * t178 - t151 * t185 - t255 * t51 - t280 * t39, t126 * t280 + t185 * t255, g(1) * t768 - g(2) * t238 + t107 * t39 + t36 * t126 + t46 * t151 + t19 * t178 + t22 * t185 + t6 * t255 + t4 * t280 + t93 * t51, -g(1) * t769 - g(2) * t237 - t107 * t38 - t37 * t126 + t19 * t179 - t23 * t185 - t5 * t255 - t3 * t280 + t46 * t528 - t93 * t50, -t151 * t5 - t178 * t3 - t179 * t4 + t22 * t50 - t23 * t51 + t36 * t38 - t37 * t39 - t528 * t6 - t549, t3 * t37 + t23 * t5 + t4 * t36 + t22 * t6 + t19 * t107 + t93 * t46 - g(1) * (-pkin(5) * t684 - t307 * t461 - t485 * t578 + t525) - g(2) * (pkin(5) * t680 - t310 * t485 + t311 * t461 + t540); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t569, t637 * t669, -t484 * t592 + t585, t569, t481 * t592 + t445, t562, t380 * t572 + t669 * t730 - t511 - t568, pkin(1) * t614 + t377 * t572 + (pkin(8) * t627 + g(3)) * t668 + t547 - t609, 0, 0, -t247 * t480 - t354 * t501, -t247 * t734 - t501 * t353 + (-t496 + t687) * t480 (-t354 * t481 + t428 * t604) * t636 - t514, t480 * t689 - t492, t428 * t634 + t601 + (-t353 * t481 - t428 * t662) * t636, t428 * t598, -pkin(2) * t496 + t326 * t634 + t275 * t428 + t380 * t353 + t514 * pkin(9) + (-g(3) * t604 + (-t243 * t481 - t326 * t662) * qJD(1)) * t475 + (-t270 + t752) * t734, -pkin(9) * t601 + t326 * t591 + pkin(2) * t247 - t276 * t428 - t380 * t354 + (t244 * t481 - t326 * t604) * t636 + (-pkin(9) * qJD(3) * t428 - t505) * t480, t275 * t354 - t276 * t353 + t501 * t243 + (t354 * t591 - t492) * pkin(9) + ((-t247 - t803) * pkin(9) + t755) * t480 + t495, -t243 * t275 - t244 * t276 - t326 * t380 + t505 * pkin(2) + (-t141 * t480 + (-t243 * t734 - t244 * t480) * qJD(3) + t495) * pkin(9), -t135 * t399 - t529 * t645, -t135 * t515 - t136 * t399 + t261 * t645 - t529 * t644, t362 * t399 + t411 * t645 - t529 * t598, -t136 * t515 + t261 * t644, t261 * t598 + t362 * t515 + t411 * t644, t411 * t598, -t117 * t598 - t136 * t463 - t186 * t515 + t261 * t553 + t265 * t644 - t334 * t362 - t411 * t649 - t467 * t511, t118 * t598 + t135 * t463 + t186 * t399 - t265 * t645 - t336 * t362 + t411 * t650 + t529 * t553 + t503, t117 * t645 - t118 * t644 - t135 * t334 - t136 * t336 - t261 * t650 + t399 * t573 - t515 * t574 - t529 * t649 + t510, -t574 * t336 + t573 * t334 - t186 * t463 - g(1) * t641 - g(2) * t642 - g(3) * (t475 * t660 + t401) + t553 * t265 + t650 * t118 + t649 * t117, t224 * t516 - t676 * t88, t817 * t224 + t579 * t222 + (t85 + t83 + (-t224 * t483 + t700) * qJD(5)) * t399, t120 * t399 + t224 * t644 + t515 * t88 + t516 * t777, t222 * t517 - t399 * t80, -t119 * t399 - t222 * t644 - t515 * t532 - t517 * t777, -t127 * t515 + t644 * t777, t228 * t127 - t12 * t515 - t334 * t532 + t43 * t677 - g(1) * (-t389 * t671 + t679) - g(2) * (-t387 * t671 + t682) + t644 * t67 - (t467 * t658 + t478 * t481) * t719 + t709 * t777 + t648 * t222 + t517 * t110, -t229 * t127 - t524 * t515 - t334 * t88 + t43 * t676 - g(1) * (t389 * t672 + t390 * t483) - g(2) * (t387 * t672 + t388 * t483) - t644 * t68 - (-t467 * t664 + t481 * t483) * t719 - t657 * t777 + t648 * t224 + t516 * t110, t229 * t532 + t228 * t88 + t68 * t278 + t67 * t279 - t543 * t317 - t709 * t224 - t657 * t222 - t503 + (t524 * t478 - t12 * t483 + (t478 * t67 - t483 * t68) * qJD(5)) * t399, -t524 * t229 + t12 * t228 + t43 * t334 - g(1) * (-t389 * t550 + t641) - g(2) * (-t387 * t550 + t642) - t720 + t657 * t68 + t709 * t67 - (t484 * t550 + t660) * t719 + t648 * t110, -t290 * t38 - t528 * t653, t151 * t653 + t289 * t38 - t290 * t39 - t528 * t652, t126 * t290 - t255 * t653 + t38 * t515 + t528 * t644, t151 * t652 + t289 * t39, -t126 * t289 - t151 * t644 - t255 * t652 + t39 * t515, -t126 * t515 + t255 * t644, t114 * t126 - t4 * t515 + t277 * t39 + t19 * t289 - g(1) * (-t389 * t673 + t390 * t464) - g(2) * (-t387 * t673 + t388 * t464) + t652 * t93 - (t464 * t481 + t466 * t670) * t719 + t714 * t255 + t644 * t22 + t651 * t151, -t115 * t126 + t3 * t515 - t277 * t38 + t19 * t290 - g(1) * (t389 * t674 + t390 * t466) - g(2) * (t387 * t674 + t388 * t466) - t653 * t93 - (-t464 * t670 + t466 * t481) * t719 - t715 * t255 - t644 * t23 + t651 * t528, t114 * t38 - t115 * t39 - t151 * t715 + t22 * t653 - t23 * t652 - t289 * t3 - t290 * t4 - t528 * t714 - t503, t3 * t115 + t4 * t114 + t19 * t277 - g(1) * (pkin(5) * t679 - t389 * t538 + t641) - g(2) * (pkin(5) * t682 - t387 * t538 + t642) - t720 + t651 * t93 + t715 * t23 + t714 * t22 - (t538 * t484 + (pkin(5) * t478 + t763) * t481) * t719; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t688, -t353 ^ 2 + t354 ^ 2, -t247 + t689, t688, -t496 - t687, t371, -g(1) * t322 - g(2) * t508 - g(3) * t778 - t326 * t354 - t755, g(1) * t323 + g(2) * t546 + g(3) * t384 - t243 * t428 - t326 * t353 + t520, 0, 0, t692, t775, t771, -t692, t738, t362, -t138 * t411 + (-t261 * t354 + t362 * t733 + t411 * t633) * pkin(3) + t739, -t139 * t411 + (-t354 * t529 - t362 * t479 + t411 * t590) * pkin(3) + t770, -t117 * t261 + t118 * t529 - t138 * t529 + t139 * t261 + (t733 * t135 - t136 * t479 + (-t261 * t733 + t479 * t529) * qJD(4)) * pkin(3), -g(1) * t555 - g(2) * t502 - g(3) * t535 - t265 * t728 - t574 * t727 - t573 * t621 + (-t139 + t571) * t118 + t756 * t117, t796, t810, t792, t700 * t777 + t85, t809, -t757, t462 * t610 - t71 * t777 - t756 * t222 + (-t571 * t777 + t539) * t478 + (-t362 * t462 - t460 * t632 - t813) * t483 + t748, -t224 * t756 - t462 * t88 + t539 * t483 - t749 * t777 + t744, t72 * t222 + t71 * t224 + (-t222 * t571 + t460 * t509 - t711) * t483 + (t224 * t571 - t68 * t261 - t460 * t88 - t12 + (t222 * t460 - t68) * qJD(5)) * t478 + t513, -t524 * t675 - t460 * t713 + t43 * t462 - g(1) * (pkin(11) * t311 - t305 + t555) - g(2) * (t307 * pkin(11) + t304 + t502) - g(3) * (pkin(11) * t367 + t355 + t535) - t756 * t110 + t749 * t68 + (-t460 * t630 + t811) * t67, t793, t790, t795, t798, t794, -t758, t126 * t301 + t151 * t640 + t255 * t705 + t39 * t424 + t799, -t126 * t302 - t255 * t759 - t38 * t424 + t528 * t640 + t800, -t151 * t759 + t301 * t38 - t302 * t39 - t528 * t705 + t791, t3 * t302 + t4 * t301 + t19 * t424 - g(1) * (t555 + t646) - g(2) * (t502 + t647) - g(3) * (t535 + t643) + t640 * t93 + t759 * t23 + t705 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t692, t775, t771, -t692, t738, t362, -t118 * t411 + t739, -t117 * t411 + t770, 0, 0, t796, t810, t792, t222 * t804 + t85, t809, -t757, -pkin(4) * t610 - t76 * t777 - t118 * t222 + (-pkin(11) * t127 + t785) * t478 + (-pkin(11) * t632 + t718 - t813) * t483 + t748, t110 * t783 + pkin(4) * t88 - t118 * t224 + t777 * t77 + (t631 * t777 - t120) * pkin(11) + t744, t77 * t222 + t76 * t224 + (pkin(11) * t509 - t711) * t483 + ((qJD(5) * t222 - t88) * pkin(11) + t760) * t478 + t513, -t43 * pkin(4) + g(1) * t305 - g(2) * t304 - g(3) * t355 - t110 * t118 - t67 * t76 - t68 * t77 + (-qJD(5) * t543 + t513 - t713) * pkin(11), t793, t790, t795, t798, t794, -t758, t126 * t333 + t151 * t554 + t255 * t702 - t39 * t461 + t799, -t126 * t335 - t255 * t703 + t38 * t461 + t528 * t554 + t800, -t151 * t703 + t333 * t38 - t335 * t39 - t528 * t702 + t791, -g(1) * t646 - g(2) * t647 - g(3) * t643 - t19 * t461 + t22 * t702 + t23 * t703 + t3 * t335 + t4 * t333 + t554 * t93; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t699, -t222 ^ 2 + t224 ^ 2, t222 * t777 - t88, -t699, t224 * t777 + t532, t127, -t110 * t224 + t754 - t760, t711 + t110 * t222 + g(1) * t252 + g(2) * t766 - g(3) * (-t367 * t483 + t437) + t524, 0, 0, t701, t776, t773, -t701, t740, t126, -t24 * t255 + (t126 * t732 - t151 * t224 - t255 * t629) * pkin(5) + t745, t25 * t255 + (-t126 * t477 - t224 * t528 - t255 * t588) * pkin(5) + t772, t23 * t528 + t25 * t151 - t22 * t151 + t24 * t528 + (t732 * t38 - t39 * t477 + (-t151 * t732 + t477 * t528) * qJD(6)) * pkin(5), -t22 * t24 - t23 * t25 + (t3 * t477 + t4 * t732 - t93 * t224 + (-t22 * t477 + t23 * t732) * qJD(6) + t754) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t701, t776, t773, -t701, t740, t126, t23 * t255 + t745, t22 * t255 + t772, 0, 0;];
tau_reg  = t1;
