% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x38]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRRRR6_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR6_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR6_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR6_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:21:40
% EndTime: 2019-03-10 04:21:55
% DurationCPUTime: 5.33s
% Computational Cost: add. (10650->463), mult. (27769->796), div. (0->0), fcn. (28469->12), ass. (0->248)
t230 = cos(qJ(5));
t222 = sin(pkin(6));
t228 = sin(qJ(2));
t291 = qJD(2) * t228;
t207 = t222 * t291;
t223 = cos(pkin(6));
t227 = sin(qJ(3));
t232 = cos(qJ(3));
t307 = t222 * t228;
t268 = t232 * t307;
t175 = t223 * t227 + t268;
t233 = cos(qJ(2));
t306 = t222 * t233;
t279 = pkin(8) * t306;
t335 = pkin(1) * t228;
t166 = t279 + (pkin(9) + t335) * t223;
t167 = (-pkin(2) * t233 - pkin(9) * t228 - pkin(1)) * t222;
t253 = -t227 * t166 + t232 * t167;
t102 = -pkin(3) * t306 - t175 * pkin(10) + t253;
t269 = t227 * t307;
t305 = t223 * t232;
t242 = -t269 + t305;
t296 = t232 * t166 + t227 * t167;
t108 = t242 * pkin(10) + t296;
t226 = sin(qJ(4));
t231 = cos(qJ(4));
t285 = qJD(4) * t231;
t286 = qJD(4) * t226;
t290 = qJD(2) * t233;
t261 = t222 * t290;
t146 = t242 * qJD(3) + t232 * t261;
t172 = (pkin(2) * t228 - pkin(9) * t233) * t222 * qJD(2);
t173 = -t223 * pkin(1) * t290 + pkin(8) * t207;
t88 = -t296 * qJD(3) + t232 * t172 + t227 * t173;
t68 = pkin(3) * t207 - pkin(10) * t146 + t88;
t289 = qJD(3) * t227;
t267 = qJD(3) * t268 + t223 * t289 + t227 * t261;
t288 = qJD(3) * t232;
t87 = t166 * t289 - t167 * t288 - t227 * t172 + t232 * t173;
t74 = -t267 * pkin(10) - t87;
t28 = -t102 * t286 - t108 * t285 - t226 * t74 + t231 * t68;
t26 = -pkin(4) * t207 - t28;
t225 = sin(qJ(5));
t283 = qJD(5) * t225;
t254 = t102 * t231 - t226 * t108;
t63 = pkin(4) * t306 - t254;
t258 = -t26 * t230 + t63 * t283;
t229 = cos(qJ(6));
t224 = sin(qJ(6));
t304 = t224 * t230;
t189 = t225 * t229 + t304;
t190 = t226 * t232 + t227 * t231;
t129 = t189 * t190;
t188 = t226 * t227 - t231 * t232;
t216 = -pkin(3) * t232 - pkin(2);
t138 = pkin(4) * t188 - pkin(11) * t190 + t216;
t337 = pkin(9) + pkin(10);
t201 = t337 * t227;
t203 = t337 * t232;
t153 = -t201 * t226 + t203 * t231;
t147 = t230 * t153;
t107 = t225 * t138 + t147;
t221 = t230 ^ 2;
t292 = t225 ^ 2 - t221;
t252 = t292 * qJD(5);
t340 = qJD(3) + qJD(4);
t339 = qJD(5) + qJD(6);
t338 = 0.2e1 * t222;
t336 = -pkin(11) - pkin(12);
t334 = pkin(1) * t233;
t333 = pkin(3) * t222;
t332 = pkin(3) * t231;
t126 = t226 * t175 - t231 * t242;
t331 = pkin(5) * t126;
t330 = pkin(5) * t188;
t329 = pkin(5) * t229;
t328 = pkin(9) * t222;
t213 = pkin(3) * t226 + pkin(11);
t327 = -pkin(12) - t213;
t143 = t339 * t189;
t127 = t231 * t175 + t226 * t242;
t217 = qJD(5) * t230;
t270 = t225 * t306;
t81 = -t126 * qJD(4) + t231 * t146 - t226 * t267;
t55 = -qJD(5) * t270 + t127 * t217 - t230 * t207 + t225 * t81;
t18 = pkin(5) * t55 + t26;
t300 = t229 * t230;
t187 = t224 * t225 - t300;
t116 = t225 * t127 + t230 * t306;
t47 = pkin(5) * t116 + t63;
t326 = t47 * t143 + t18 * t187;
t142 = t339 * t187;
t325 = -t47 * t142 + t18 * t189;
t324 = t63 * t217 + t26 * t225;
t316 = t226 * t102 + t231 * t108;
t64 = -pkin(11) * t306 + t316;
t209 = pkin(8) * t307;
t133 = pkin(3) * t269 + t209 + (t216 - t334) * t223;
t77 = t126 * pkin(4) - t127 * pkin(11) + t133;
t36 = t225 * t77 + t230 * t64;
t151 = t201 * t231 + t203 * t226;
t310 = t190 * t225;
t123 = pkin(5) * t310 + t151;
t265 = qJD(3) * t337;
t248 = t232 * t265;
t249 = t227 * t265;
t114 = t153 * qJD(4) - t226 * t249 + t231 * t248;
t144 = t340 * t188;
t303 = t225 * t144;
t241 = t190 * t217 - t303;
t80 = t241 * pkin(5) + t114;
t323 = t123 * t143 + t80 * t187;
t322 = -t123 * t142 + t80 * t189;
t321 = pkin(3) * qJD(4);
t31 = -pkin(12) * t116 + t36;
t320 = t229 * t31;
t93 = -pkin(12) * t310 + t107;
t319 = t229 * t93;
t54 = -t116 * qJD(5) + t225 * t207 + t230 * t81;
t317 = t54 * t225;
t315 = t126 * t231;
t314 = t144 * t230;
t174 = (t223 * t335 + t279) * qJD(2);
t313 = t174 * t227;
t181 = t327 * t225;
t312 = t181 * t224;
t311 = t190 * t144;
t309 = t190 * t230;
t200 = t336 * t225;
t308 = t200 * t224;
t301 = t225 * t230;
t299 = t114 * t225 + t151 * t217;
t274 = pkin(3) * t286;
t275 = pkin(5) * t283;
t191 = t274 + t275;
t215 = -pkin(5) * t230 - pkin(4);
t199 = t215 - t332;
t298 = t199 * t143 + t191 * t187;
t297 = -t199 * t142 + t191 * t189;
t295 = t215 * t143 + t187 * t275;
t294 = -t215 * t142 + t189 * t275;
t214 = -pkin(4) - t332;
t293 = t214 * t217 + t225 * t274;
t287 = qJD(3) * t233;
t284 = qJD(4) * t233;
t282 = qJD(6) * t224;
t281 = qJD(6) * t229;
t280 = -0.2e1 * pkin(2) * qJD(3);
t278 = pkin(3) * t289;
t277 = pkin(4) * t283;
t276 = pkin(4) * t217;
t273 = pkin(3) * t285;
t272 = pkin(5) * t282;
t271 = pkin(5) * t281;
t120 = t267 * pkin(3) + t174;
t82 = t127 * qJD(4) + t226 * t146 + t231 * t267;
t234 = t82 * pkin(4) - t81 * pkin(11) + t120;
t27 = -t102 * t285 + t108 * t286 - t226 * t68 - t231 * t74;
t25 = pkin(11) * t207 - t27;
t10 = -t36 * qJD(5) - t225 * t25 + t230 * t234;
t6 = pkin(5) * t82 - pkin(12) * t54 + t10;
t9 = -t77 * t217 - t225 * t234 - t230 * t25 + t64 * t283;
t8 = -pkin(12) * t55 - t9;
t266 = -t224 * t8 + t229 * t6;
t219 = t222 ^ 2;
t263 = t219 * t290;
t262 = t190 * t283;
t260 = t225 * t217;
t145 = t340 * t190;
t113 = t201 * t285 + t203 * t286 + t226 * t248 + t231 * t249;
t236 = pkin(4) * t145 + pkin(11) * t144 + t278;
t255 = t225 * t113 + t230 * t236;
t34 = pkin(12) * t314 + pkin(5) * t145 + (-t147 + (pkin(12) * t190 - t138) * t225) * qJD(5) + t255;
t45 = t230 * t113 - t138 * t217 + t153 * t283 - t225 * t236;
t40 = -t241 * pkin(12) - t45;
t259 = -t224 * t40 + t229 * t34;
t35 = -t225 * t64 + t230 * t77;
t257 = qJD(5) * t327;
t256 = -0.4e1 * t190 * t301;
t106 = t230 * t138 - t153 * t225;
t251 = t225 * t273;
t250 = t230 * t273;
t247 = t228 * t263;
t117 = t230 * t127 - t270;
t30 = -pkin(12) * t117 + t331 + t35;
t14 = t224 * t30 + t320;
t84 = -pkin(12) * t309 + t106 + t330;
t52 = t224 * t84 + t319;
t78 = t229 * t116 + t117 * t224;
t79 = -t116 * t224 + t117 * t229;
t246 = -t116 * t230 - t117 * t225;
t218 = t230 * pkin(12);
t182 = t213 * t230 + t218;
t137 = t182 * t229 + t312;
t245 = t188 * t213 - t190 * t214;
t202 = pkin(11) * t230 + t218;
t152 = t202 * t229 + t308;
t244 = t214 * t283 - t230 * t274;
t1 = -t224 * t6 - t229 * t8 - t30 * t281 + t31 * t282;
t57 = t126 * t217 + t225 * t82;
t243 = t126 * t283 - t230 * t82;
t11 = -t224 * t34 - t229 * t40 - t84 * t281 + t93 * t282;
t240 = t262 + t314;
t239 = -t145 * t230 + t188 * t283;
t238 = t227 * t287 + t232 * t291;
t237 = t227 * t291 - t232 * t287;
t235 = -t144 * t214 - t145 * t213 + (-t188 * t231 + t190 * t226) * t321;
t206 = 0.2e1 * t260;
t192 = -0.2e1 * t247;
t186 = -0.2e1 * t252;
t185 = t190 ^ 2;
t165 = t209 + (-pkin(2) - t334) * t223;
t150 = t200 * t229 - t202 * t224;
t140 = t151 * t283;
t136 = t181 * t229 - t182 * t224;
t130 = t187 * t190;
t122 = -0.2e1 * t189 * t142;
t121 = 0.2e1 * t188 * t145;
t119 = t145 * t225 + t188 * t217;
t112 = -t152 * qJD(6) + (t336 * t300 - t308) * qJD(5);
t111 = -t189 * qJD(5) * t336 - t200 * t281 + t202 * t282;
t101 = -t144 * t301 - t190 * t252;
t92 = -t143 * t188 - t145 * t187;
t91 = -t142 * t188 + t145 * t189;
t90 = qJD(5) * t256 + t292 * t144;
t89 = 0.2e1 * t142 * t187 - 0.2e1 * t143 * t189;
t86 = -t137 * qJD(6) - t189 * t273 + (t327 * t300 - t312) * qJD(5);
t85 = t182 * t282 - t224 * (t230 * t257 - t251) - t229 * (t225 * t257 + t250) - t181 * t281;
t65 = 0.2e1 * t126 * t82;
t62 = -t144 * t304 - t224 * t262 - t282 * t310 + (t339 * t309 - t303) * t229;
t61 = -t339 * t129 + t187 * t144;
t51 = -t224 * t93 + t229 * t84;
t50 = t126 * t145 + t188 * t82;
t49 = -t126 * t143 - t187 * t82;
t48 = -t126 * t142 + t189 * t82;
t46 = -t107 * qJD(5) + t255;
t42 = t130 * t142 + t189 * t61;
t41 = t117 * t217 + t317;
t22 = t129 * t142 + t130 * t143 - t187 * t61 - t189 * t62;
t21 = t246 * qJD(5) - t225 * t55 + t54 * t230;
t20 = t79 * qJD(6) + t224 * t54 + t229 * t55;
t19 = -t78 * qJD(6) - t224 * t55 + t229 * t54;
t15 = -t142 * t79 + t189 * t19;
t13 = -t224 * t31 + t229 * t30;
t12 = -t52 * qJD(6) + t259;
t3 = t142 * t78 - t143 * t79 - t187 * t19 - t189 * t20;
t2 = -t14 * qJD(6) + t266;
t4 = [0, 0, 0, 0.2e1 * t247, 0.2e1 * (-t228 ^ 2 + t233 ^ 2) * t219 * qJD(2), 0.2e1 * t223 * t261, -0.2e1 * t223 * t207, 0, -0.2e1 * pkin(1) * t219 * t291 - 0.2e1 * t174 * t223, -0.2e1 * pkin(1) * t263 + 0.2e1 * t173 * t223, 0.2e1 * t175 * t146, 0.2e1 * t146 * t242 - 0.2e1 * t175 * t267 (-t146 * t233 + t175 * t291) * t338, 0.2e1 * t242 * t207 + 0.2e1 * t267 * t306, t192, -0.2e1 * t174 * t305 + 0.2e1 * t165 * t267 + 0.2e1 * (-t88 * t233 + (t253 * qJD(2) + t313) * t228) * t222, 0.2e1 * t165 * t146 + 0.2e1 * t174 * t175 + 0.2e1 * (-t87 * t233 - t296 * t291) * t222, 0.2e1 * t127 * t81, -0.2e1 * t126 * t81 - 0.2e1 * t127 * t82 (t127 * t291 - t233 * t81) * t338 (-t126 * t291 + t233 * t82) * t338, t192, 0.2e1 * t120 * t126 + 0.2e1 * t133 * t82 + 0.2e1 * (-t28 * t233 + t254 * t291) * t222, 0.2e1 * t120 * t127 + 0.2e1 * t133 * t81 + 0.2e1 * (-t27 * t233 - t316 * t291) * t222, 0.2e1 * t117 * t54, -0.2e1 * t116 * t54 - 0.2e1 * t117 * t55, 0.2e1 * t117 * t82 + 0.2e1 * t126 * t54, -0.2e1 * t116 * t82 - 0.2e1 * t126 * t55, t65, 0.2e1 * t10 * t126 + 0.2e1 * t116 * t26 + 0.2e1 * t35 * t82 + 0.2e1 * t55 * t63, 0.2e1 * t117 * t26 + 0.2e1 * t126 * t9 - 0.2e1 * t36 * t82 + 0.2e1 * t54 * t63, 0.2e1 * t79 * t19, -0.2e1 * t19 * t78 - 0.2e1 * t20 * t79, 0.2e1 * t126 * t19 + 0.2e1 * t79 * t82, -0.2e1 * t126 * t20 - 0.2e1 * t78 * t82, t65, 0.2e1 * t126 * t2 + 0.2e1 * t13 * t82 + 0.2e1 * t18 * t78 + 0.2e1 * t20 * t47, 0.2e1 * t1 * t126 - 0.2e1 * t14 * t82 + 0.2e1 * t18 * t79 + 0.2e1 * t19 * t47; 0, 0, 0, 0, 0, t261, -t207, 0, -t174, t173, t146 * t227 + t175 * t288, -t227 * t267 + t146 * t232 + (-t175 * t227 + t232 * t242) * qJD(3), t237 * t222, t238 * t222, 0, -pkin(2) * t267 + t165 * t289 - t174 * t232 - t237 * t328, -pkin(2) * t146 + t165 * t288 - t238 * t328 + t313, -t127 * t144 + t190 * t81, t126 * t144 - t127 * t145 - t188 * t81 - t190 * t82 (t144 * t233 + t190 * t291) * t222 (t145 * t233 - t188 * t291) * t222, 0, t126 * t278 + t120 * t188 + t133 * t145 + t216 * t82 + (t114 * t233 - t151 * t291) * t222, t127 * t278 + t120 * t190 - t133 * t144 + t216 * t81 + (-t113 * t233 - t153 * t291) * t222, -t117 * t240 + t309 * t54, -t246 * t144 + (-t317 - t230 * t55 + (t116 * t225 - t117 * t230) * qJD(5)) * t190, t117 * t145 - t126 * t240 + t54 * t188 + t82 * t309, -t116 * t145 - t126 * t241 - t55 * t188 - t82 * t310, t50, t10 * t188 + t106 * t82 + t114 * t116 + t126 * t46 + t145 * t35 + t151 * t55 + t324 * t190 - t63 * t303, -t107 * t82 + t114 * t117 + t126 * t45 - t145 * t36 + t151 * t54 + t188 * t9 - t258 * t190 - t63 * t314, -t130 * t19 + t61 * t79, -t129 * t19 + t130 * t20 - t61 * t78 - t62 * t79, t126 * t61 - t130 * t82 + t145 * t79 + t188 * t19, -t126 * t62 - t129 * t82 - t145 * t78 - t188 * t20, t50, t12 * t126 + t123 * t20 + t129 * t18 + t13 * t145 + t188 * t2 + t47 * t62 + t51 * t82 + t78 * t80, t1 * t188 + t11 * t126 + t123 * t19 - t130 * t18 - t14 * t145 + t47 * t61 - t52 * t82 + t79 * t80; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t227 * t288, 0.2e1 * (-t227 ^ 2 + t232 ^ 2) * qJD(3), 0, 0, 0, t227 * t280, t232 * t280, -0.2e1 * t311, 0.2e1 * t144 * t188 - 0.2e1 * t145 * t190, 0, 0, 0, 0.2e1 * t145 * t216 + 0.2e1 * t188 * t278, -0.2e1 * t144 * t216 + 0.2e1 * t190 * t278, -0.2e1 * t185 * t260 - 0.2e1 * t221 * t311, -t144 * t256 + 0.2e1 * t185 * t252, 0.2e1 * t145 * t309 - 0.2e1 * t188 * t240, -0.2e1 * t145 * t310 - 0.2e1 * t188 * t241, t121, 0.2e1 * t106 * t145 + 0.2e1 * t114 * t310 + 0.2e1 * t151 * t241 + 0.2e1 * t46 * t188, -0.2e1 * t107 * t145 + 0.2e1 * t114 * t309 - 0.2e1 * t151 * t240 + 0.2e1 * t45 * t188, -0.2e1 * t130 * t61, -0.2e1 * t129 * t61 + 0.2e1 * t130 * t62, -0.2e1 * t130 * t145 + 0.2e1 * t188 * t61, -0.2e1 * t129 * t145 - 0.2e1 * t188 * t62, t121, 0.2e1 * t12 * t188 + 0.2e1 * t123 * t62 + 0.2e1 * t129 * t80 + 0.2e1 * t145 * t51, 0.2e1 * t11 * t188 + 0.2e1 * t123 * t61 - 0.2e1 * t130 * t80 - 0.2e1 * t145 * t52; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t146, -t267, t207, t88, t87, 0, 0, t81, -t82, t207 (t226 * t284 + t231 * t291) * t333 + t28 (-t226 * t291 + t231 * t284) * t333 + t27, t41, t21, t57, -t243, 0, t214 * t55 - t57 * t213 + (t116 * t226 - t225 * t315) * t321 + t258, t214 * t54 + t243 * t213 + (t117 * t226 - t230 * t315) * t321 + t324, t15, t3, t48, t49, 0, t126 * t86 + t136 * t82 + t191 * t78 + t199 * t20 + t326, t126 * t85 - t137 * t82 + t19 * t199 + t191 * t79 + t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t288, -t289, 0, -pkin(9) * t288, pkin(9) * t289, 0, 0, -t144, -t145, 0, -t114, t113, t101, t90, t119, -t239, 0, t140 + (-qJD(5) * t245 - t114) * t230 + t235 * t225, t230 * t235 + t245 * t283 + t299, t42, t22, t91, t92, 0, t129 * t191 + t136 * t145 + t188 * t86 + t199 * t62 + t323, -t130 * t191 - t137 * t145 + t188 * t85 + t199 * t61 + t322; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t274, -0.2e1 * t273, t206, t186, 0, 0, 0, 0.2e1 * t244, 0.2e1 * t293, t122, t89, 0, 0, 0, 0.2e1 * t298, 0.2e1 * t297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t81, -t82, t207, t28, t27, t41, t21, t57, -t243, 0, -pkin(4) * t55 - pkin(11) * t57 + t258, -pkin(4) * t54 + pkin(11) * t243 + t324, t15, t3, t48, t49, 0, t112 * t126 + t150 * t82 + t20 * t215 + t275 * t78 + t326, t111 * t126 - t152 * t82 + t19 * t215 + t275 * t79 + t325; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, -t145, 0, -t114, t113, t101, t90, t119, -t239, 0, t140 + (pkin(4) * t144 - pkin(11) * t145) * t225 + (-t114 + (-pkin(4) * t190 - pkin(11) * t188) * qJD(5)) * t230, pkin(4) * t240 + pkin(11) * t239 + t299, t42, t22, t91, t92, 0, t112 * t188 + t129 * t275 + t145 * t150 + t215 * t62 + t323, t111 * t188 - t130 * t275 - t145 * t152 + t215 * t61 + t322; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t274, -t273, t206, t186, 0, 0, 0, t244 - t277, -t276 + t293, t122, t89, 0, 0, 0, t295 + t298, t294 + t297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t206, t186, 0, 0, 0, -0.2e1 * t277, -0.2e1 * t276, t122, t89, 0, 0, 0, 0.2e1 * t295, 0.2e1 * t294; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t54, -t55, t82, t10, t9, 0, 0, t19, -t20, t82, t82 * t329 + (-t320 + (-t30 - t331) * t224) * qJD(6) + t266 (-t126 * t281 - t224 * t82) * pkin(5) + t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t240, -t241, t145, t46, t45, 0, 0, t61, -t62, t145, t145 * t329 + (-t319 + (-t84 - t330) * t224) * qJD(6) + t259 (-t145 * t224 - t188 * t281) * pkin(5) + t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, -t283, 0, -t213 * t217 - t251, t213 * t283 - t250, 0, 0, -t142, -t143, 0, t86, t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t217, -t283, 0, -pkin(11) * t217, pkin(11) * t283, 0, 0, -t142, -t143, 0, t112, t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t272, -0.2e1 * t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t19, -t20, t82, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, -t62, t145, t12, t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, -t143, 0, t86, t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t142, -t143, 0, t112, t111; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t272, -t271; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
