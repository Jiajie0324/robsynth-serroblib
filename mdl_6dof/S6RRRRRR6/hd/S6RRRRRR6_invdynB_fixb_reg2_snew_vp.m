% Calculate inertial parameters regressor of inverse dynamics base forces vector with Newton-Euler for
% S6RRRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tauB_reg [6x(7*10)]
%   inertial parameter regressor of inverse dynamics base forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-08 11:29
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauB_reg = S6RRRRRR6_invdynB_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR6_invdynB_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR6_invdynB_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRRR6_invdynB_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRRR6_invdynB_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR6_invdynB_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauB_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-08 11:22:41
% EndTime: 2019-05-08 11:25:00
% DurationCPUTime: 96.86s
% Computational Cost: add. (1015021->1118), mult. (2147564->1820), div. (0->0), fcn. (1780921->14), ass. (0->804)
t1283 = sin(pkin(6));
t1284 = cos(pkin(6));
t1446 = qJD(1) * t1284;
t1391 = qJD(2) + t1446;
t1354 = qJD(1) * t1391;
t1329 = t1283 * t1354;
t1285 = sin(qJ(6));
t1288 = sin(qJ(3));
t1294 = cos(qJ(3));
t1289 = sin(qJ(2));
t1419 = t1283 * t1289;
t1406 = qJD(1) * t1419;
t1241 = -t1288 * t1406 + t1294 * t1391;
t1242 = t1288 * t1391 + t1294 * t1406;
t1287 = sin(qJ(4));
t1293 = cos(qJ(4));
t1210 = t1241 * t1287 + t1242 * t1293;
t1295 = cos(qJ(2));
t1418 = t1283 * t1295;
t1268 = qJD(1) * t1418 - qJD(3);
t1260 = -qJD(4) + t1268;
t1286 = sin(qJ(5));
t1292 = cos(qJ(5));
t1182 = t1210 * t1286 + t1292 * t1260;
t1184 = t1210 * t1292 - t1260 * t1286;
t1291 = cos(qJ(6));
t1120 = t1291 * t1182 + t1184 * t1285;
t1122 = -t1182 * t1285 + t1184 * t1291;
t1045 = t1122 * t1120;
t1445 = qJD(1) * t1295;
t1394 = qJD(2) * t1445;
t1408 = t1289 * qJDD(1);
t1248 = (t1394 + t1408) * t1283;
t1384 = qJDD(1) * t1284 + qJDD(2);
t1386 = t1288 * t1248 - t1294 * t1384;
t1195 = -qJD(3) * t1242 - t1386;
t1196 = t1241 * qJD(3) + t1294 * t1248 + t1288 * t1384;
t1388 = -t1293 * t1195 + t1287 * t1196;
t1111 = -qJD(4) * t1210 - t1388;
t1110 = qJDD(5) - t1111;
t1303 = qJDD(6) + t1110;
t1470 = -t1045 + t1303;
t1479 = t1285 * t1470;
t1126 = t1184 * t1182;
t1468 = t1110 - t1126;
t1478 = t1286 * t1468;
t1477 = t1291 * t1470;
t1476 = t1292 * t1468;
t1208 = -t1293 * t1241 + t1242 * t1287;
t1205 = qJD(5) + t1208;
t1139 = t1205 * t1182;
t1409 = qJDD(1) * t1283;
t1411 = -qJD(2) * t1406 + t1295 * t1409;
t1392 = -qJDD(3) + t1411;
t1244 = -qJDD(4) + t1392;
t1308 = qJD(4) * t1208 - t1195 * t1287 - t1196 * t1293;
t1393 = t1182 * qJD(5) + t1286 * t1244 + t1292 * t1308;
t1020 = -t1139 + t1393;
t1191 = t1208 * t1260;
t1475 = t1308 - t1191;
t1383 = t1391 ^ 2;
t1430 = t1208 * t1210;
t1312 = -t1244 - t1430;
t1474 = t1287 * t1312;
t1429 = t1241 * t1242;
t1333 = -t1392 + t1429;
t1473 = t1288 * t1333;
t1472 = t1293 * t1312;
t1471 = t1294 * t1333;
t1203 = qJD(6) + t1205;
t1093 = t1203 * t1120;
t1389 = t1292 * t1244 - t1286 * t1308;
t1051 = -qJD(5) * t1184 - t1389;
t1307 = qJD(6) * t1120 - t1051 * t1285 + t1291 * t1393;
t1469 = -t1093 - t1307;
t1227 = t1241 * t1268;
t1168 = -t1227 - t1196;
t1166 = -t1227 + t1196;
t1021 = t1393 + t1139;
t1280 = t1283 ^ 2;
t1466 = (qJD(1) * (t1284 ^ 2 + t1280) + qJD(2) * t1284) * t1283;
t1390 = -t1291 * t1051 - t1285 * t1393;
t912 = (qJD(6) - t1203) * t1122 + t1390;
t1016 = (qJD(5) - t1205) * t1184 + t1389;
t1071 = (qJD(4) + t1260) * t1210 + t1388;
t1163 = (qJD(3) + t1268) * t1242 + t1386;
t1465 = qJD(1) ^ 2;
t1118 = t1120 ^ 2;
t1119 = t1122 ^ 2;
t1464 = t1182 ^ 2;
t1181 = t1184 ^ 2;
t1202 = t1203 ^ 2;
t1204 = t1205 ^ 2;
t1206 = t1208 ^ 2;
t1207 = t1210 ^ 2;
t1463 = t1241 ^ 2;
t1240 = t1242 ^ 2;
t1462 = t1260 ^ 2;
t1263 = t1268 ^ 2;
t1461 = pkin(2) * t1289;
t1460 = pkin(2) * t1295;
t1459 = pkin(4) * t1287;
t1458 = pkin(8) * t1283;
t1457 = t1284 * g(3);
t1144 = pkin(4) * t1208 - pkin(11) * t1210;
t1290 = sin(qJ(1));
t1296 = cos(qJ(1));
t1271 = g(1) * t1296 + t1290 * g(2);
t1245 = -pkin(1) * t1465 + pkin(8) * t1409 - t1271;
t1270 = t1290 * g(1) - t1296 * g(2);
t1302 = qJDD(1) * pkin(1) + t1458 * t1465 + t1270;
t1301 = t1284 * t1302;
t1201 = -g(3) * t1419 + t1295 * t1245 + t1289 * t1301;
t1382 = -pkin(9) * t1289 - t1460;
t1332 = t1465 * t1382;
t1299 = t1280 * t1295 * t1332 - pkin(2) * t1383 + pkin(9) * t1384 + t1201;
t1327 = t1295 * t1354;
t1328 = t1289 * t1354;
t1300 = -t1457 - t1248 * pkin(9) - t1411 * pkin(2) + (pkin(2) * t1328 - pkin(9) * t1327 - t1302) * t1283;
t1088 = t1288 * t1300 + t1294 * t1299;
t1219 = -pkin(3) * t1268 - pkin(10) * t1242;
t1031 = -pkin(3) * t1463 + pkin(10) * t1195 + t1219 * t1268 + t1088;
t1087 = t1288 * t1299 - t1294 * t1300;
t1298 = pkin(3) * t1333 + pkin(10) * t1168 - t1087;
t949 = t1293 * t1031 + t1287 * t1298;
t921 = -pkin(4) * t1462 - pkin(11) * t1244 - t1144 * t1208 + t949;
t1387 = t1289 * t1245 - t1295 * t1301;
t1155 = -t1384 * pkin(2) - t1383 * pkin(9) + (t1295 * g(3) + t1332 * t1419) * t1283 + t1387;
t1069 = -t1195 * pkin(3) - t1463 * pkin(10) + t1242 * t1219 + t1155;
t944 = t1475 * pkin(11) + (-t1210 * t1260 - t1111) * pkin(4) + t1069;
t853 = t1286 * t921 - t1292 * t944;
t795 = t1468 * pkin(5) + pkin(12) * t1020 - t853;
t1133 = pkin(5) * t1205 - pkin(12) * t1184;
t854 = t1286 * t944 + t1292 * t921;
t807 = -pkin(5) * t1464 + pkin(12) * t1051 - t1133 * t1205 + t854;
t747 = t1285 * t795 + t1291 * t807;
t948 = t1031 * t1287 - t1293 * t1298;
t920 = t1244 * pkin(4) - t1462 * pkin(11) + t1144 * t1210 + t948;
t865 = -t1051 * pkin(5) - pkin(12) * t1464 + t1133 * t1184 + t920;
t1456 = t1285 * t865;
t989 = t1045 + t1303;
t1455 = t1285 * t989;
t746 = t1285 * t807 - t1291 * t795;
t691 = t1285 * t747 - t1291 * t746;
t1454 = t1286 * t691;
t1453 = t1286 * t920;
t868 = t1287 * t949 - t1293 * t948;
t1452 = t1288 * t868;
t1451 = t1291 * t865;
t1450 = t1291 * t989;
t1449 = t1292 * t691;
t1448 = t1292 * t920;
t1447 = t1294 * t868;
t1039 = t1110 + t1126;
t1444 = t1039 * t1286;
t1443 = t1039 * t1292;
t1442 = t1069 * t1287;
t1441 = t1069 * t1293;
t1136 = t1244 - t1430;
t1440 = t1136 * t1287;
t1439 = t1136 * t1293;
t1438 = t1155 * t1288;
t1437 = t1155 * t1294;
t1188 = t1392 + t1429;
t1436 = t1188 * t1288;
t1435 = t1188 * t1294;
t1434 = t1203 * t1285;
t1433 = t1203 * t1291;
t1432 = t1205 * t1286;
t1431 = t1205 * t1292;
t1420 = t1280 * t1465;
t1267 = t1295 * t1289 * t1420;
t1246 = -t1267 + t1384;
t1428 = t1246 * t1289;
t1427 = t1246 * t1295;
t1247 = t1267 + t1384;
t1426 = t1247 * t1289;
t1425 = t1247 * t1295;
t1424 = t1260 * t1287;
t1423 = t1260 * t1293;
t1422 = t1268 * t1288;
t1421 = t1268 * t1294;
t1229 = t1283 * t1302 + t1457;
t1417 = t1289 * t1229;
t1416 = t1295 * t1229;
t1281 = t1289 ^ 2;
t1282 = t1295 ^ 2;
t1410 = t1281 + t1282;
t1407 = -pkin(4) * t1293 - pkin(3);
t1404 = t1287 * t1045;
t1403 = t1293 * t1045;
t1402 = t1287 * t1126;
t1401 = t1293 * t1126;
t1400 = t1289 * t1430;
t1399 = t1295 * t1430;
t1398 = t1289 * t1429;
t1397 = t1295 * t1429;
t1396 = t1281 * t1420;
t1395 = t1282 * t1420;
t692 = t1285 * t746 + t1291 * t747;
t869 = t1287 * t948 + t1293 * t949;
t1005 = t1087 * t1288 + t1294 * t1088;
t1231 = -t1270 * t1290 - t1296 * t1271;
t1265 = qJDD(1) * t1296 - t1290 * t1465;
t1381 = -pkin(7) * t1265 - g(3) * t1290;
t1237 = -t1396 - t1383;
t1211 = -t1237 * t1289 - t1427;
t1380 = pkin(8) * t1211 - t1417;
t1252 = -t1383 - t1395;
t1216 = t1252 * t1295 - t1426;
t1379 = pkin(8) * t1216 + t1416;
t774 = t1286 * t854 - t1292 * t853;
t775 = t1286 * t853 + t1292 * t854;
t656 = t1292 * t692 - t1454;
t650 = t1287 * t656 - t1293 * t865;
t651 = t1287 * t865 + t1293 * t656;
t625 = -t1288 * t650 + t1294 * t651;
t655 = t1286 * t692 + t1449;
t1378 = t1289 * t625 - t1295 * t655;
t759 = t1287 * t775 - t1293 * t920;
t760 = t1287 * t920 + t1293 * t775;
t694 = -t1288 * t759 + t1294 * t760;
t1377 = t1289 * t694 - t1295 * t774;
t916 = -t1093 + t1307;
t836 = -t1285 * t912 + t1291 * t916;
t838 = -t1285 * t916 - t1291 * t912;
t771 = -t1286 * t836 + t1292 * t838;
t998 = -t1118 - t1119;
t761 = t1287 * t771 - t1293 * t998;
t762 = t1287 * t998 + t1293 * t771;
t696 = -t1288 * t761 + t1294 * t762;
t769 = t1286 * t838 + t1292 * t836;
t1376 = t1289 * t696 - t1295 * t769;
t1044 = -t1119 + t1118;
t911 = (qJD(6) + t1203) * t1122 + t1390;
t835 = -t1285 * t911 + t1291 * t1469;
t837 = -t1285 * t1469 - t1291 * t911;
t770 = -t1286 * t835 + t1292 * t837;
t764 = t1044 * t1293 + t1287 * t770;
t765 = -t1044 * t1287 + t1293 * t770;
t698 = -t1288 * t764 + t1294 * t765;
t768 = -t1286 * t837 - t1292 * t835;
t1375 = t1289 * t698 + t1295 * t768;
t1026 = -t1202 - t1118;
t928 = t1026 * t1285 + t1477;
t929 = t1026 * t1291 - t1479;
t851 = -t1286 * t928 + t1292 * t929;
t788 = t1287 * t851 - t1293 * t911;
t789 = t1287 * t911 + t1293 * t851;
t727 = -t1288 * t788 + t1294 * t789;
t850 = t1286 * t929 + t1292 * t928;
t1374 = t1289 * t727 - t1295 * t850;
t1056 = -t1119 - t1202;
t937 = t1056 * t1291 - t1455;
t938 = -t1056 * t1285 - t1450;
t860 = -t1286 * t937 + t1292 * t938;
t790 = t1287 * t860 - t1293 * t1469;
t791 = t1287 * t1469 + t1293 * t860;
t737 = -t1288 * t790 + t1294 * t791;
t859 = t1286 * t938 + t1292 * t937;
t1373 = t1289 * t737 - t1295 * t859;
t1090 = -t1119 + t1202;
t951 = t1090 * t1291 + t1479;
t953 = -t1090 * t1285 + t1477;
t873 = -t1286 * t951 + t1292 * t953;
t797 = t1287 * t873 + t1293 * t916;
t799 = -t1287 * t916 + t1293 * t873;
t742 = -t1288 * t797 + t1294 * t799;
t871 = -t1286 * t953 - t1292 * t951;
t1372 = t1289 * t742 + t1295 * t871;
t1089 = t1118 - t1202;
t952 = t1089 * t1285 + t1450;
t954 = t1089 * t1291 - t1455;
t874 = -t1286 * t952 + t1292 * t954;
t798 = t1287 * t874 + t1293 * t912;
t800 = -t1287 * t912 + t1293 * t874;
t743 = -t1288 * t798 + t1294 * t800;
t872 = -t1286 * t954 - t1292 * t952;
t1371 = t1289 * t743 + t1295 * t872;
t945 = -qJD(6) * t1122 - t1390;
t907 = t1120 * t1434 + t1291 * t945;
t908 = t1120 * t1433 - t1285 * t945;
t833 = -t1286 * t907 + t1292 * t908;
t809 = t1287 * t833 + t1403;
t811 = t1293 * t833 - t1404;
t752 = -t1288 * t809 + t1294 * t811;
t831 = -t1286 * t908 - t1292 * t907;
t1370 = t1289 * t752 + t1295 * t831;
t909 = t1122 * t1433 - t1285 * t1307;
t910 = -t1122 * t1434 - t1291 * t1307;
t834 = -t1286 * t909 + t1292 * t910;
t810 = t1287 * t834 - t1403;
t812 = t1293 * t834 + t1404;
t753 = -t1288 * t810 + t1294 * t812;
t832 = -t1286 * t910 - t1292 * t909;
t1369 = t1289 * t753 + t1295 * t832;
t1082 = t1181 + t1464;
t935 = -t1016 * t1292 - t1020 * t1286;
t893 = t1082 * t1293 + t1287 * t935;
t894 = -t1082 * t1287 + t1293 * t935;
t819 = -t1288 * t893 + t1294 * t894;
t933 = -t1016 * t1286 + t1020 * t1292;
t1368 = t1289 * t819 - t1295 * t933;
t1006 = (-t1120 * t1285 - t1122 * t1291) * t1203;
t1007 = (-t1120 * t1291 + t1122 * t1285) * t1203;
t931 = -t1006 * t1286 + t1007 * t1292;
t895 = t1287 * t931 - t1293 * t1303;
t896 = t1287 * t1303 + t1293 * t931;
t821 = -t1288 * t895 + t1294 * t896;
t930 = -t1006 * t1292 - t1007 * t1286;
t1367 = t1289 * t821 + t1295 * t930;
t1125 = -t1181 + t1464;
t1017 = (-qJD(5) - t1205) * t1184 - t1389;
t934 = t1017 * t1292 + t1021 * t1286;
t901 = t1125 * t1293 + t1287 * t934;
t902 = -t1125 * t1287 + t1293 * t934;
t827 = -t1288 * t901 + t1294 * t902;
t932 = -t1017 * t1286 + t1021 * t1292;
t1366 = t1289 * t827 + t1295 * t932;
t1099 = -t1204 - t1464;
t974 = t1099 * t1292 - t1478;
t905 = t1017 * t1293 + t1287 * t974;
t906 = -t1017 * t1287 + t1293 * t974;
t830 = -t1288 * t905 + t1294 * t906;
t973 = t1099 * t1286 + t1476;
t1365 = t1289 * t830 - t1295 * t973;
t1109 = -t1181 - t1204;
t978 = -t1109 * t1286 - t1443;
t917 = t1021 * t1293 + t1287 * t978;
t918 = -t1021 * t1287 + t1293 * t978;
t840 = -t1288 * t917 + t1294 * t918;
t977 = t1109 * t1292 - t1444;
t1364 = t1289 * t840 - t1295 * t977;
t1135 = -t1181 + t1204;
t996 = -t1135 * t1286 + t1476;
t924 = t1020 * t1293 + t1287 * t996;
t926 = -t1020 * t1287 + t1293 * t996;
t848 = -t1288 * t924 + t1294 * t926;
t994 = -t1135 * t1292 - t1478;
t1363 = t1289 * t848 + t1295 * t994;
t1134 = -t1204 + t1464;
t997 = t1134 * t1292 - t1444;
t925 = t1016 * t1293 + t1287 * t997;
t927 = -t1016 * t1287 + t1293 * t997;
t849 = -t1288 * t925 + t1294 * t927;
t995 = -t1134 * t1286 - t1443;
t1362 = t1289 * t849 + t1295 * t995;
t1008 = -t1051 * t1292 - t1182 * t1432;
t1009 = -t1051 * t1286 + t1182 * t1431;
t967 = t1009 * t1287 + t1401;
t969 = t1009 * t1293 - t1402;
t886 = -t1288 * t967 + t1294 * t969;
t1361 = t1008 * t1295 + t1289 * t886;
t1010 = -t1184 * t1431 + t1286 * t1393;
t1011 = -t1184 * t1432 - t1292 * t1393;
t968 = t1011 * t1287 - t1401;
t970 = t1011 * t1293 + t1402;
t887 = -t1288 * t968 + t1294 * t970;
t1360 = t1010 * t1295 + t1289 * t887;
t1059 = (t1182 * t1286 + t1184 * t1292) * t1205;
t1060 = (-t1182 * t1292 + t1184 * t1286) * t1205;
t1000 = t1060 * t1293 + t1110 * t1287;
t999 = t1060 * t1287 - t1110 * t1293;
t923 = t1000 * t1294 - t1288 * t999;
t1359 = t1059 * t1295 + t1289 * t923;
t783 = t1294 * t869 - t1452;
t1358 = -t1069 * t1295 + t1289 * t783;
t1070 = (qJD(4) - t1260) * t1210 + t1388;
t1141 = -t1462 - t1206;
t1061 = t1141 * t1287 + t1472;
t1062 = t1141 * t1293 - t1474;
t976 = -t1061 * t1288 + t1062 * t1294;
t1357 = -t1070 * t1295 + t1289 * t976;
t1113 = -t1206 - t1207;
t1075 = t1191 + t1308;
t985 = -t1071 * t1287 + t1075 * t1293;
t987 = -t1071 * t1293 - t1075 * t1287;
t900 = -t1288 * t985 + t1294 * t987;
t1356 = -t1113 * t1295 + t1289 * t900;
t1149 = -t1207 + t1206;
t984 = -t1070 * t1287 - t1293 * t1475;
t986 = -t1070 * t1293 + t1287 * t1475;
t899 = -t1288 * t984 + t1294 * t986;
t1355 = t1149 * t1295 + t1289 * t899;
t1353 = t1280 * t1289 * t1394;
t1173 = -t1207 - t1462;
t1085 = t1173 * t1293 + t1440;
t1086 = -t1173 * t1287 + t1439;
t1003 = -t1085 * t1288 + t1086 * t1294;
t1352 = t1003 * t1289 + t1295 * t1475;
t1351 = t1005 * t1289 - t1155 * t1295;
t1187 = -t1207 + t1462;
t1095 = t1187 * t1293 + t1474;
t1097 = -t1187 * t1287 + t1472;
t1014 = -t1095 * t1288 + t1097 * t1294;
t1350 = t1014 * t1289 + t1075 * t1295;
t1186 = t1206 - t1462;
t1096 = t1186 * t1287 - t1439;
t1098 = t1186 * t1293 + t1440;
t1015 = -t1096 * t1288 + t1098 * t1294;
t1349 = t1015 * t1289 + t1071 * t1295;
t1129 = (t1208 * t1287 + t1210 * t1293) * t1260;
t1130 = (t1208 * t1293 - t1210 * t1287) * t1260;
t1054 = -t1129 * t1288 + t1130 * t1294;
t1348 = t1054 * t1289 + t1244 * t1295;
t1004 = -t1087 * t1294 + t1088 * t1288;
t1164 = (-qJD(3) + t1268) * t1242 - t1386;
t1102 = t1164 * t1294 - t1166 * t1288;
t1212 = -t1240 + t1463;
t1347 = t1102 * t1289 + t1212 * t1295;
t1103 = -t1163 * t1294 - t1168 * t1288;
t1185 = t1240 + t1463;
t1346 = t1103 * t1289 + t1185 * t1295;
t1199 = -t1263 - t1463;
t1132 = t1199 * t1294 - t1473;
t1345 = t1132 * t1289 + t1164 * t1295;
t1213 = -t1240 - t1263;
t1143 = -t1213 * t1288 + t1435;
t1344 = t1143 * t1289 - t1166 * t1295;
t1221 = -t1240 + t1263;
t1147 = -t1221 * t1288 + t1471;
t1343 = t1147 * t1289 + t1168 * t1295;
t1220 = -t1263 + t1463;
t1148 = t1220 * t1294 + t1436;
t1342 = t1148 * t1289 + t1163 * t1295;
t1200 = g(3) * t1418 + t1387;
t1341 = -t1295 * t1200 + t1289 * t1201;
t1140 = t1200 * t1289 + t1201 * t1295;
t1256 = t1283 * t1327;
t1223 = t1256 + t1248;
t1255 = t1283 * t1328;
t1226 = -t1255 + t1411;
t1340 = t1223 * t1295 + t1226 * t1289;
t1224 = -t1256 + t1248;
t1225 = t1255 + t1411;
t1339 = -t1224 * t1295 + t1225 * t1289;
t1338 = t1237 * t1295 - t1428;
t1251 = -t1383 + t1395;
t1337 = t1251 * t1289 + t1427;
t1250 = t1383 - t1396;
t1336 = t1250 * t1295 + t1426;
t1335 = t1252 * t1289 + t1425;
t1230 = t1270 * t1296 - t1290 * t1271;
t1334 = t1283 * t1384;
t1063 = t1111 * t1293 - t1208 * t1424;
t1064 = -t1111 * t1287 - t1208 * t1423;
t981 = -t1063 * t1288 + t1064 * t1294;
t1331 = t1289 * t981 + t1399;
t1065 = -t1210 * t1423 - t1287 * t1308;
t1066 = t1210 * t1424 - t1293 * t1308;
t982 = -t1065 * t1288 + t1066 * t1294;
t1330 = t1289 * t982 - t1399;
t1158 = -t1195 * t1288 + t1241 * t1421;
t1326 = t1158 * t1289 - t1397;
t1160 = t1196 * t1294 + t1242 * t1422;
t1325 = t1160 * t1289 + t1397;
t686 = -pkin(5) * t865 + pkin(12) * t692;
t628 = -pkin(11) * t655 - pkin(12) * t1449 - t1286 * t686;
t639 = -pkin(4) * t655 - pkin(5) * t691;
t608 = -pkin(3) * t655 + pkin(10) * t651 + t1287 * t628 + t1293 * t639;
t614 = -pkin(10) * t650 - t1287 * t639 + t1293 * t628;
t624 = t1288 * t651 + t1294 * t650;
t601 = -pkin(9) * t624 - t1288 * t608 + t1294 * t614;
t609 = -pkin(2) * t624 - pkin(3) * t650 + pkin(4) * t865 - pkin(11) * t656 + pkin(12) * t1454 - t1292 * t686;
t618 = t1289 * t655 + t1295 * t625;
t1324 = pkin(8) * t618 + t1289 * t601 + t1295 * t609;
t677 = -pkin(5) * t998 + pkin(12) * t838 + t692;
t681 = -pkin(12) * t836 - t691;
t640 = -pkin(11) * t769 - t1286 * t677 + t1292 * t681;
t725 = -pkin(4) * t769 - pkin(5) * t836;
t623 = -pkin(3) * t769 + pkin(10) * t762 + t1287 * t640 + t1293 * t725;
t630 = -pkin(10) * t761 - t1287 * t725 + t1293 * t640;
t695 = t1288 * t762 + t1294 * t761;
t615 = -pkin(9) * t695 - t1288 * t623 + t1294 * t630;
t626 = -pkin(2) * t695 - pkin(3) * t761 + pkin(4) * t998 - pkin(11) * t771 - t1286 * t681 - t1292 * t677;
t672 = t1289 * t769 + t1295 * t696;
t1323 = pkin(8) * t672 + t1289 * t615 + t1295 * t626;
t776 = -pkin(5) * t911 + pkin(12) * t929 - t1451;
t801 = -pkin(12) * t928 + t1456;
t703 = -pkin(11) * t850 - t1286 * t776 + t1292 * t801;
t704 = -pkin(4) * t850 - pkin(5) * t928 + t746;
t654 = -pkin(3) * t850 + pkin(10) * t789 + t1287 * t703 + t1293 * t704;
t660 = -pkin(10) * t788 - t1287 * t704 + t1293 * t703;
t726 = t1288 * t789 + t1294 * t788;
t621 = -pkin(9) * t726 - t1288 * t654 + t1294 * t660;
t663 = -pkin(2) * t726 - pkin(3) * t788 + pkin(4) * t911 - pkin(11) * t851 - t1286 * t801 - t1292 * t776;
t705 = t1289 * t850 + t1295 * t727;
t1322 = pkin(8) * t705 + t1289 * t621 + t1295 * t663;
t777 = -pkin(5) * t1469 + pkin(12) * t938 + t1456;
t803 = -pkin(12) * t937 + t1451;
t706 = -pkin(11) * t859 - t1286 * t777 + t1292 * t803;
t707 = -pkin(4) * t859 - pkin(5) * t937 + t747;
t659 = -pkin(3) * t859 + pkin(10) * t791 + t1287 * t706 + t1293 * t707;
t662 = -pkin(10) * t790 - t1287 * t707 + t1293 * t706;
t736 = t1288 * t791 + t1294 * t790;
t627 = -pkin(9) * t736 - t1288 * t659 + t1294 * t662;
t665 = -pkin(2) * t736 - pkin(3) * t790 + pkin(4) * t1469 - pkin(11) * t860 - t1286 * t803 - t1292 * t777;
t714 = t1289 * t859 + t1295 * t737;
t1321 = pkin(8) * t714 + t1289 * t627 + t1295 * t665;
t668 = pkin(10) * t760 + (-pkin(11) * t1287 + t1407) * t774;
t682 = -pkin(10) * t759 + (-pkin(11) * t1293 + t1459) * t774;
t693 = t1288 * t760 + t1294 * t759;
t633 = -pkin(9) * t693 - t1288 * t668 + t1294 * t682;
t661 = -pkin(2) * t693 - pkin(3) * t759 + pkin(4) * t920 - pkin(11) * t775;
t675 = t1289 * t774 + t1295 * t694;
t1320 = pkin(8) * t675 + t1289 * t633 + t1295 * t661;
t763 = -pkin(11) * t933 - t774;
t708 = pkin(10) * t894 + t1287 * t763 + t1407 * t933;
t723 = -pkin(10) * t893 + t1293 * t763 + t1459 * t933;
t818 = t1288 * t894 + t1294 * t893;
t667 = -pkin(9) * t818 - t1288 * t708 + t1294 * t723;
t701 = -pkin(2) * t818 - pkin(3) * t893 - pkin(4) * t1082 - pkin(11) * t935 - t775;
t780 = t1289 * t933 + t1295 * t819;
t1319 = pkin(8) * t780 + t1289 * t667 + t1295 * t701;
t808 = -pkin(4) * t973 + t853;
t867 = -pkin(11) * t973 + t1453;
t730 = -pkin(3) * t973 + pkin(10) * t906 + t1287 * t867 + t1293 * t808;
t748 = -pkin(10) * t905 - t1287 * t808 + t1293 * t867;
t829 = t1288 * t906 + t1294 * t905;
t676 = -pkin(9) * t829 - t1288 * t730 + t1294 * t748;
t739 = -pkin(2) * t829 - pkin(3) * t905 - pkin(4) * t1017 - pkin(11) * t974 + t1448;
t792 = t1289 * t973 + t1295 * t830;
t1318 = pkin(8) * t792 + t1289 * t676 + t1295 * t739;
t813 = -pkin(4) * t977 + t854;
t870 = -pkin(11) * t977 + t1448;
t731 = -pkin(3) * t977 + pkin(10) * t918 + t1287 * t870 + t1293 * t813;
t749 = -pkin(10) * t917 - t1287 * t813 + t1293 * t870;
t839 = t1288 * t918 + t1294 * t917;
t678 = -pkin(9) * t839 - t1288 * t731 + t1294 * t749;
t744 = -pkin(2) * t839 - pkin(3) * t917 - pkin(4) * t1021 - pkin(11) * t978 - t1453;
t796 = t1289 * t977 + t1295 * t840;
t1317 = pkin(8) * t796 + t1289 * t678 + t1295 * t744;
t782 = t1288 * t869 + t1447;
t852 = -pkin(3) * t1069 + pkin(10) * t869;
t722 = -pkin(9) * t782 - pkin(10) * t1447 - t1288 * t852;
t754 = -pkin(2) * t782 - pkin(3) * t868;
t778 = t1069 * t1289 + t1295 * t783;
t1316 = pkin(8) * t778 + t1289 * t722 + t1295 * t754;
t817 = -pkin(3) * t1113 + pkin(10) * t987 + t869;
t828 = -pkin(10) * t985 - t868;
t898 = t1288 * t987 + t1294 * t985;
t732 = -pkin(9) * t898 - t1288 * t817 + t1294 * t828;
t863 = -pkin(2) * t898 - pkin(3) * t985;
t881 = t1113 * t1289 + t1295 * t900;
t1315 = pkin(8) * t881 + t1289 * t732 + t1295 * t863;
t939 = -pkin(3) * t1070 + pkin(10) * t1062 - t1441;
t975 = t1061 * t1294 + t1062 * t1288;
t983 = -pkin(10) * t1061 + t1442;
t844 = -pkin(9) * t975 - t1288 * t939 + t1294 * t983;
t864 = -pkin(2) * t975 - pkin(3) * t1061 + t948;
t936 = t1070 * t1289 + t1295 * t976;
t1314 = pkin(8) * t936 + t1289 * t844 + t1295 * t864;
t1002 = t1085 * t1294 + t1086 * t1288;
t950 = pkin(3) * t1475 + pkin(10) * t1086 + t1442;
t993 = -pkin(10) * t1085 + t1441;
t855 = -pkin(9) * t1002 - t1288 * t950 + t1294 * t993;
t875 = -pkin(2) * t1002 - pkin(3) * t1085 + t949;
t956 = t1003 * t1295 - t1289 * t1475;
t1313 = pkin(8) * t956 + t1289 * t855 + t1295 * t875;
t1131 = t1199 * t1288 + t1471;
t1030 = -pkin(2) * t1131 + t1087;
t1076 = -pkin(9) * t1131 + t1438;
t1079 = t1132 * t1295 - t1164 * t1289;
t1311 = pkin(8) * t1079 + t1030 * t1295 + t1076 * t1289;
t1142 = t1213 * t1294 + t1436;
t1034 = -pkin(2) * t1142 + t1088;
t1080 = -pkin(9) * t1142 + t1437;
t1081 = t1143 * t1295 + t1166 * t1289;
t1310 = pkin(8) * t1081 + t1034 * t1295 + t1080 * t1289;
t1174 = t1224 * t1289 + t1225 * t1295;
t1309 = pkin(8) * t1174 + t1140;
t1180 = (-t1241 * t1294 - t1242 * t1288) * t1268;
t1306 = t1289 * t1180 + t1295 * t1392;
t1055 = t1103 * t1295 - t1185 * t1289;
t1101 = -t1163 * t1288 + t1168 * t1294;
t961 = -pkin(9) * t1101 - t1004;
t1305 = pkin(8) * t1055 - t1101 * t1460 + t1289 * t961;
t971 = t1005 * t1295 + t1155 * t1289;
t1304 = pkin(8) * t971 + t1004 * t1382;
t1264 = t1290 * qJDD(1) + t1296 * t1465;
t1254 = t1410 * t1420;
t1253 = (t1281 - t1282) * t1420;
t1249 = -pkin(7) * t1264 + g(3) * t1296;
t1228 = t1410 * t1329;
t1222 = (t1408 + (0.2e1 * qJD(2) + t1446) * t1445) * t1283;
t1218 = t1295 * t1248 - t1281 * t1329;
t1217 = -t1282 * t1329 - t1289 * t1411;
t1215 = t1251 * t1295 - t1428;
t1214 = -t1250 * t1289 + t1425;
t1198 = (t1284 * t1248 + t1445 * t1466) * t1289;
t1197 = (-qJD(1) * t1289 * t1466 + t1284 * t1411) * t1295;
t1179 = (-t1241 * t1288 + t1242 * t1294) * t1268;
t1175 = -t1223 * t1289 + t1226 * t1295;
t1172 = t1283 * t1226 + t1284 * t1335;
t1171 = -t1283 * t1225 + t1284 * t1337;
t1170 = -t1283 * t1224 + t1284 * t1336;
t1169 = -t1284 * t1226 + t1283 * t1335;
t1162 = -t1283 * t1222 + t1284 * t1338;
t1161 = t1284 * t1222 + t1283 * t1338;
t1159 = t1196 * t1288 - t1242 * t1421;
t1157 = t1195 * t1294 + t1241 * t1422;
t1156 = t1295 * t1180 - t1289 * t1392;
t1154 = -t1283 * t1253 + t1284 * t1340;
t1153 = t1283 * t1254 + t1284 * t1339;
t1152 = -t1284 * t1254 + t1283 * t1339;
t1146 = t1220 * t1288 - t1435;
t1145 = t1221 * t1294 + t1473;
t1128 = -t1290 * t1172 + t1216 * t1296;
t1127 = t1172 * t1296 + t1290 * t1216;
t1124 = t1160 * t1295 - t1398;
t1123 = t1158 * t1295 + t1398;
t1117 = -t1290 * t1162 + t1211 * t1296;
t1116 = t1162 * t1296 + t1290 * t1211;
t1115 = t1283 * t1229 + t1284 * t1341;
t1114 = -t1284 * t1229 + t1283 * t1341;
t1106 = -t1283 * t1179 + t1284 * t1306;
t1105 = -t1290 * t1153 + t1174 * t1296;
t1104 = t1153 * t1296 + t1290 * t1174;
t1100 = t1164 * t1288 + t1166 * t1294;
t1092 = t1148 * t1295 - t1163 * t1289;
t1091 = t1147 * t1295 - t1168 * t1289;
t1083 = -t1417 + (-t1169 * t1283 - t1172 * t1284) * pkin(8);
t1078 = -t1416 + (-t1161 * t1283 - t1162 * t1284) * pkin(8);
t1077 = -pkin(1) * t1169 + t1283 * t1200 + t1284 * t1379;
t1068 = t1102 * t1295 - t1212 * t1289;
t1067 = -pkin(1) * t1161 + t1283 * t1201 + t1284 * t1380;
t1058 = -t1283 * t1159 + t1284 * t1325;
t1057 = -t1283 * t1157 + t1284 * t1326;
t1053 = t1129 * t1294 + t1130 * t1288;
t1049 = pkin(8) * t1140 * t1284 - pkin(1) * t1114;
t1048 = -t1290 * t1115 + t1140 * t1296;
t1047 = t1115 * t1296 + t1290 * t1140;
t1043 = t1054 * t1295 - t1244 * t1289;
t1042 = -pkin(1) * t1152 + t1284 * t1309;
t1041 = -pkin(2) * t1166 + pkin(9) * t1143 + t1438;
t1037 = -t1283 * t1146 + t1284 * t1342;
t1036 = -t1283 * t1145 + t1284 * t1343;
t1035 = (-t1114 * t1283 - t1115 * t1284) * pkin(8);
t1033 = pkin(2) * t1164 + pkin(9) * t1132 - t1437;
t1032 = (-t1152 * t1283 - t1153 * t1284) * pkin(8) - t1341;
t1028 = -t1283 * t1142 + t1284 * t1344;
t1027 = t1284 * t1142 + t1283 * t1344;
t1025 = -t1283 * t1131 + t1284 * t1345;
t1024 = t1284 * t1131 + t1283 * t1345;
t1013 = t1096 * t1294 + t1098 * t1288;
t1012 = t1095 * t1294 + t1097 * t1288;
t1001 = -t1283 * t1100 + t1284 * t1347;
t992 = -t1283 * t1101 + t1284 * t1346;
t991 = t1284 * t1101 + t1283 * t1346;
t980 = t1065 * t1294 + t1066 * t1288;
t979 = t1063 * t1294 + t1064 * t1288;
t972 = -pkin(2) * t1155 + pkin(9) * t1005;
t966 = -t1290 * t1028 + t1081 * t1296;
t965 = t1028 * t1296 + t1290 * t1081;
t964 = -t1283 * t1053 + t1284 * t1348;
t963 = -t1290 * t1025 + t1079 * t1296;
t962 = t1025 * t1296 + t1290 * t1079;
t960 = t1295 * t982 + t1400;
t959 = t1295 * t981 - t1400;
t958 = t1015 * t1295 - t1071 * t1289;
t957 = t1014 * t1295 - t1075 * t1289;
t955 = pkin(2) * t1185 + pkin(9) * t1103 + t1005;
t941 = t1055 * t1296 - t1290 * t992;
t940 = t1290 * t1055 + t1296 * t992;
t922 = t1000 * t1288 + t1294 * t999;
t904 = -t1283 * t1004 + t1284 * t1351;
t903 = t1284 * t1004 + t1283 * t1351;
t897 = t1288 * t986 + t1294 * t984;
t892 = -t1283 * t1013 + t1284 * t1349;
t891 = -t1283 * t1012 + t1284 * t1350;
t890 = -t1149 * t1289 + t1295 * t899;
t889 = -t1283 * t1002 + t1284 * t1352;
t888 = t1284 * t1002 + t1283 * t1352;
t885 = t1288 * t970 + t1294 * t968;
t884 = t1288 * t969 + t1294 * t967;
t883 = -t1283 * t980 + t1284 * t1330;
t882 = -t1283 * t979 + t1284 * t1331;
t880 = -t1059 * t1289 + t1295 * t923;
t879 = -t1289 * t1034 + t1295 * t1080 + (-t1027 * t1283 - t1028 * t1284) * pkin(8);
t878 = -t1283 * t975 + t1284 * t1357;
t877 = t1283 * t1357 + t1284 * t975;
t876 = -t1289 * t1030 + t1295 * t1076 + (-t1024 * t1283 - t1025 * t1284) * pkin(8);
t866 = -pkin(1) * t1027 - t1283 * t1041 + t1284 * t1310;
t862 = -t1290 * t904 + t1296 * t971;
t861 = t1290 * t971 + t1296 * t904;
t858 = -pkin(1) * t1024 - t1283 * t1033 + t1284 * t1311;
t857 = -t1010 * t1289 + t1295 * t887;
t856 = -t1008 * t1289 + t1295 * t886;
t847 = t1288 * t927 + t1294 * t925;
t846 = t1288 * t926 + t1294 * t924;
t845 = t1101 * t1461 + t1295 * t961 + (-t1283 * t991 - t1284 * t992) * pkin(8);
t843 = -t1290 * t889 + t1296 * t956;
t842 = t1290 * t956 + t1296 * t889;
t841 = pkin(2) * t1475 + pkin(9) * t1003 + t1288 * t993 + t1294 * t950;
t826 = t1288 * t902 + t1294 * t901;
t825 = -pkin(2) * t1070 + pkin(9) * t976 + t1288 * t983 + t1294 * t939;
t824 = -t1290 * t878 + t1296 * t936;
t823 = t1290 * t936 + t1296 * t878;
t822 = -t1283 * t922 + t1284 * t1359;
t820 = t1288 * t896 + t1294 * t895;
t816 = -t1283 * t897 + t1284 * t1355;
t815 = -t1283 * t898 + t1284 * t1356;
t814 = t1283 * t1356 + t1284 * t898;
t805 = -t1289 * t995 + t1295 * t849;
t804 = -t1289 * t994 + t1295 * t848;
t802 = -pkin(1) * t991 - t1283 * t955 + t1284 * t1305;
t787 = -t1283 * t885 + t1284 * t1360;
t786 = -t1283 * t884 + t1284 * t1361;
t785 = -t1289 * t932 + t1295 * t827;
t784 = (-pkin(9) * t1295 + t1461) * t1004 + (-t1283 * t903 - t1284 * t904) * pkin(8);
t781 = -pkin(1) * t903 - t1283 * t972 + t1284 * t1304;
t779 = -t1289 * t930 + t1295 * t821;
t773 = -t1290 * t815 + t1296 * t881;
t772 = t1290 * t881 + t1296 * t815;
t767 = -t1283 * t847 + t1284 * t1362;
t766 = -t1283 * t846 + t1284 * t1363;
t758 = -t1283 * t839 + t1284 * t1364;
t757 = t1283 * t1364 + t1284 * t839;
t756 = -t1283 * t829 + t1284 * t1365;
t755 = t1283 * t1365 + t1284 * t829;
t751 = t1288 * t812 + t1294 * t810;
t750 = t1288 * t811 + t1294 * t809;
t741 = t1288 * t800 + t1294 * t798;
t740 = t1288 * t799 + t1294 * t797;
t738 = -t1283 * t826 + t1284 * t1366;
t735 = -t1283 * t820 + t1284 * t1367;
t734 = -t1283 * t818 + t1284 * t1368;
t733 = t1283 * t1368 + t1284 * t818;
t729 = -pkin(2) * t1113 + pkin(9) * t900 + t1288 * t828 + t1294 * t817;
t728 = -t1289 * t875 + t1295 * t855 + (-t1283 * t888 - t1284 * t889) * pkin(8);
t724 = -t1289 * t864 + t1295 * t844 + (-t1283 * t877 - t1284 * t878) * pkin(8);
t721 = -t1283 * t782 + t1284 * t1358;
t720 = t1283 * t1358 + t1284 * t782;
t719 = -t1289 * t872 + t1295 * t743;
t718 = -t1289 * t871 + t1295 * t742;
t717 = -t1289 * t832 + t1295 * t753;
t716 = -t1289 * t831 + t1295 * t752;
t715 = -pkin(2) * t1069 + pkin(9) * t783 - pkin(10) * t1452 + t1294 * t852;
t713 = -t1290 * t758 + t1296 * t796;
t712 = t1290 * t796 + t1296 * t758;
t711 = -pkin(1) * t888 - t1283 * t841 + t1284 * t1313;
t710 = -t1290 * t756 + t1296 * t792;
t709 = t1290 * t792 + t1296 * t756;
t702 = -pkin(1) * t877 - t1283 * t825 + t1284 * t1314;
t700 = -t1290 * t734 + t1296 * t780;
t699 = t1290 * t780 + t1296 * t734;
t697 = t1288 * t765 + t1294 * t764;
t690 = -t1290 * t721 + t1296 * t778;
t689 = t1290 * t778 + t1296 * t721;
t688 = -t1283 * t751 + t1284 * t1369;
t687 = -t1283 * t750 + t1284 * t1370;
t685 = -t1283 * t741 + t1284 * t1371;
t684 = -t1283 * t740 + t1284 * t1372;
t683 = -t1289 * t863 + t1295 * t732 + (-t1283 * t814 - t1284 * t815) * pkin(8);
t680 = -t1283 * t736 + t1284 * t1373;
t679 = t1283 * t1373 + t1284 * t736;
t674 = -t1289 * t768 + t1295 * t698;
t673 = -pkin(2) * t977 + pkin(9) * t840 + t1288 * t749 + t1294 * t731;
t671 = -pkin(2) * t973 + pkin(9) * t830 + t1288 * t748 + t1294 * t730;
t670 = -t1283 * t726 + t1284 * t1374;
t669 = t1283 * t1374 + t1284 * t726;
t666 = -pkin(1) * t814 - t1283 * t729 + t1284 * t1315;
t664 = -pkin(2) * t933 + pkin(9) * t819 + t1288 * t723 + t1294 * t708;
t658 = -t1290 * t680 + t1296 * t714;
t657 = t1290 * t714 + t1296 * t680;
t653 = -t1290 * t670 + t1296 * t705;
t652 = t1290 * t705 + t1296 * t670;
t649 = -t1283 * t697 + t1284 * t1375;
t648 = -t1283 * t693 + t1284 * t1377;
t647 = t1283 * t1377 + t1284 * t693;
t646 = -t1283 * t695 + t1284 * t1376;
t645 = t1283 * t1376 + t1284 * t695;
t644 = -t1289 * t754 + t1295 * t722 + (-t1283 * t720 - t1284 * t721) * pkin(8);
t643 = -t1289 * t744 + t1295 * t678 + (-t1283 * t757 - t1284 * t758) * pkin(8);
t642 = -t1289 * t739 + t1295 * t676 + (-t1283 * t755 - t1284 * t756) * pkin(8);
t641 = -pkin(1) * t720 - t1283 * t715 + t1284 * t1316;
t638 = -t1290 * t648 + t1296 * t675;
t637 = t1290 * t675 + t1296 * t648;
t636 = -t1289 * t701 + t1295 * t667 + (-t1283 * t733 - t1284 * t734) * pkin(8);
t635 = -t1290 * t646 + t1296 * t672;
t634 = t1290 * t672 + t1296 * t646;
t632 = -pkin(1) * t757 - t1283 * t673 + t1284 * t1317;
t631 = -pkin(1) * t755 - t1283 * t671 + t1284 * t1318;
t629 = -pkin(2) * t774 + pkin(9) * t694 + t1288 * t682 + t1294 * t668;
t622 = -pkin(2) * t859 + pkin(9) * t737 + t1288 * t662 + t1294 * t659;
t620 = -pkin(2) * t850 + pkin(9) * t727 + t1288 * t660 + t1294 * t654;
t619 = -pkin(1) * t733 - t1283 * t664 + t1284 * t1319;
t617 = -t1289 * t665 + t1295 * t627 + (-t1283 * t679 - t1284 * t680) * pkin(8);
t616 = -t1289 * t663 + t1295 * t621 + (-t1283 * t669 - t1284 * t670) * pkin(8);
t613 = -pkin(2) * t769 + pkin(9) * t696 + t1288 * t630 + t1294 * t623;
t612 = -t1289 * t661 + t1295 * t633 + (-t1283 * t647 - t1284 * t648) * pkin(8);
t611 = -t1283 * t624 + t1284 * t1378;
t610 = t1283 * t1378 + t1284 * t624;
t607 = -pkin(1) * t679 - t1283 * t622 + t1284 * t1321;
t606 = -pkin(1) * t669 - t1283 * t620 + t1284 * t1322;
t605 = -pkin(1) * t647 - t1283 * t629 + t1284 * t1320;
t604 = -t1290 * t611 + t1296 * t618;
t603 = t1290 * t618 + t1296 * t611;
t602 = -t1289 * t626 + t1295 * t615 + (-t1283 * t645 - t1284 * t646) * pkin(8);
t600 = -pkin(1) * t645 - t1283 * t613 + t1284 * t1323;
t599 = -pkin(2) * t655 + pkin(9) * t625 + t1288 * t614 + t1294 * t608;
t598 = -t1289 * t609 + t1295 * t601 + (-t1283 * t610 - t1284 * t611) * pkin(8);
t597 = -pkin(1) * t610 - t1283 * t599 + t1284 * t1324;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1264, -t1265, 0, t1231, 0, 0, 0, 0, 0, 0, t1128, t1117, t1105, t1048, 0, 0, 0, 0, 0, 0, t963, t966, t941, t862, 0, 0, 0, 0, 0, 0, t824, t843, t773, t690, 0, 0, 0, 0, 0, 0, t710, t713, t700, t638, 0, 0, 0, 0, 0, 0, t653, t658, t635, t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1265, -t1264, 0, t1230, 0, 0, 0, 0, 0, 0, t1127, t1116, t1104, t1047, 0, 0, 0, 0, 0, 0, t962, t965, t940, t861, 0, 0, 0, 0, 0, 0, t823, t842, t772, t689, 0, 0, 0, 0, 0, 0, t709, t712, t699, t637, 0, 0, 0, 0, 0, 0, t652, t657, t634, t603; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1169, t1161, t1152, t1114, 0, 0, 0, 0, 0, 0, t1024, t1027, t991, t903, 0, 0, 0, 0, 0, 0, t877, t888, t814, t720, 0, 0, 0, 0, 0, 0, t755, t757, t733, t647, 0, 0, 0, 0, 0, 0, t669, t679, t645, t610; 0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1265, 0, -t1264, 0, t1381, -t1249, -t1230, -pkin(7) * t1230, -t1290 * t1198 + t1218 * t1296, -t1290 * t1154 + t1175 * t1296, -t1290 * t1170 + t1214 * t1296, -t1290 * t1197 + t1217 * t1296, -t1290 * t1171 + t1215 * t1296, t1296 * t1228 + t1290 * t1334, -pkin(7) * t1127 - t1290 * t1077 + t1083 * t1296, -pkin(7) * t1116 - t1290 * t1067 + t1078 * t1296, -pkin(7) * t1104 + t1032 * t1296 - t1290 * t1042, -pkin(7) * t1047 + t1035 * t1296 - t1290 * t1049, -t1290 * t1058 + t1124 * t1296, -t1290 * t1001 + t1068 * t1296, -t1290 * t1036 + t1091 * t1296, -t1290 * t1057 + t1123 * t1296, -t1290 * t1037 + t1092 * t1296, -t1290 * t1106 + t1156 * t1296, -pkin(7) * t962 - t1290 * t858 + t1296 * t876, -pkin(7) * t965 - t1290 * t866 + t1296 * t879, -pkin(7) * t940 - t1290 * t802 + t1296 * t845, -pkin(7) * t861 - t1290 * t781 + t1296 * t784, -t1290 * t883 + t1296 * t960, -t1290 * t816 + t1296 * t890, -t1290 * t891 + t1296 * t957, -t1290 * t882 + t1296 * t959, -t1290 * t892 + t1296 * t958, t1043 * t1296 - t1290 * t964, -pkin(7) * t823 - t1290 * t702 + t1296 * t724, -pkin(7) * t842 - t1290 * t711 + t1296 * t728, -pkin(7) * t772 - t1290 * t666 + t1296 * t683, -pkin(7) * t689 - t1290 * t641 + t1296 * t644, -t1290 * t787 + t1296 * t857, -t1290 * t738 + t1296 * t785, -t1290 * t766 + t1296 * t804, -t1290 * t786 + t1296 * t856, -t1290 * t767 + t1296 * t805, -t1290 * t822 + t1296 * t880, -pkin(7) * t709 - t1290 * t631 + t1296 * t642, -pkin(7) * t712 - t1290 * t632 + t1296 * t643, -pkin(7) * t699 - t1290 * t619 + t1296 * t636, -pkin(7) * t637 - t1290 * t605 + t1296 * t612, -t1290 * t688 + t1296 * t717, -t1290 * t649 + t1296 * t674, -t1290 * t684 + t1296 * t718, -t1290 * t687 + t1296 * t716, -t1290 * t685 + t1296 * t719, -t1290 * t735 + t1296 * t779, -pkin(7) * t652 - t1290 * t606 + t1296 * t616, -pkin(7) * t657 - t1290 * t607 + t1296 * t617, -pkin(7) * t634 - t1290 * t600 + t1296 * t602, -pkin(7) * t603 - t1290 * t597 + t1296 * t598; 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1264, 0, t1265, 0, t1249, t1381, t1231, pkin(7) * t1231, t1198 * t1296 + t1290 * t1218, t1154 * t1296 + t1290 * t1175, t1170 * t1296 + t1290 * t1214, t1197 * t1296 + t1290 * t1217, t1171 * t1296 + t1290 * t1215, t1290 * t1228 - t1296 * t1334, pkin(7) * t1128 + t1077 * t1296 + t1290 * t1083, pkin(7) * t1117 + t1067 * t1296 + t1290 * t1078, pkin(7) * t1105 + t1290 * t1032 + t1042 * t1296, pkin(7) * t1048 + t1290 * t1035 + t1049 * t1296, t1058 * t1296 + t1290 * t1124, t1001 * t1296 + t1290 * t1068, t1036 * t1296 + t1290 * t1091, t1057 * t1296 + t1290 * t1123, t1037 * t1296 + t1290 * t1092, t1106 * t1296 + t1290 * t1156, pkin(7) * t963 + t1290 * t876 + t1296 * t858, pkin(7) * t966 + t1290 * t879 + t1296 * t866, pkin(7) * t941 + t1290 * t845 + t1296 * t802, pkin(7) * t862 + t1290 * t784 + t1296 * t781, t1290 * t960 + t1296 * t883, t1290 * t890 + t1296 * t816, t1290 * t957 + t1296 * t891, t1290 * t959 + t1296 * t882, t1290 * t958 + t1296 * t892, t1290 * t1043 + t1296 * t964, pkin(7) * t824 + t1290 * t724 + t1296 * t702, pkin(7) * t843 + t1290 * t728 + t1296 * t711, pkin(7) * t773 + t1290 * t683 + t1296 * t666, pkin(7) * t690 + t1290 * t644 + t1296 * t641, t1290 * t857 + t1296 * t787, t1290 * t785 + t1296 * t738, t1290 * t804 + t1296 * t766, t1290 * t856 + t1296 * t786, t1290 * t805 + t1296 * t767, t1290 * t880 + t1296 * t822, pkin(7) * t710 + t1290 * t642 + t1296 * t631, pkin(7) * t713 + t1290 * t643 + t1296 * t632, pkin(7) * t700 + t1290 * t636 + t1296 * t619, pkin(7) * t638 + t1290 * t612 + t1296 * t605, t1290 * t717 + t1296 * t688, t1290 * t674 + t1296 * t649, t1290 * t718 + t1296 * t684, t1290 * t716 + t1296 * t687, t1290 * t719 + t1296 * t685, t1290 * t779 + t1296 * t735, pkin(7) * t653 + t1290 * t616 + t1296 * t606, pkin(7) * t658 + t1290 * t617 + t1296 * t607, pkin(7) * t635 + t1290 * t602 + t1296 * t600, pkin(7) * t604 + t1290 * t598 + t1296 * t597; 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1270, t1271, 0, 0, t1248 * t1419 + t1353, t1284 * t1253 + t1283 * t1340, t1284 * t1224 + t1283 * t1336, t1411 * t1418 - t1353, t1284 * t1225 + t1283 * t1337, t1284 * t1384, pkin(1) * t1172 - t1284 * t1200 + t1283 * t1379, pkin(1) * t1162 - t1284 * t1201 + t1283 * t1380, pkin(1) * t1153 + t1283 * t1309, pkin(1) * t1115 + t1140 * t1458, t1284 * t1159 + t1283 * t1325, t1284 * t1100 + t1283 * t1347, t1284 * t1145 + t1283 * t1343, t1284 * t1157 + t1283 * t1326, t1284 * t1146 + t1283 * t1342, t1284 * t1179 + t1283 * t1306, pkin(1) * t1025 + t1284 * t1033 + t1283 * t1311, pkin(1) * t1028 + t1284 * t1041 + t1283 * t1310, pkin(1) * t992 + t1283 * t1305 + t1284 * t955, pkin(1) * t904 + t1283 * t1304 + t1284 * t972, t1283 * t1330 + t1284 * t980, t1283 * t1355 + t1284 * t897, t1284 * t1012 + t1283 * t1350, t1283 * t1331 + t1284 * t979, t1284 * t1013 + t1283 * t1349, t1284 * t1053 + t1283 * t1348, pkin(1) * t878 + t1283 * t1314 + t1284 * t825, pkin(1) * t889 + t1283 * t1313 + t1284 * t841, pkin(1) * t815 + t1283 * t1315 + t1284 * t729, pkin(1) * t721 + t1283 * t1316 + t1284 * t715, t1283 * t1360 + t1284 * t885, t1283 * t1366 + t1284 * t826, t1283 * t1363 + t1284 * t846, t1283 * t1361 + t1284 * t884, t1283 * t1362 + t1284 * t847, t1283 * t1359 + t1284 * t922, pkin(1) * t756 + t1283 * t1318 + t1284 * t671, pkin(1) * t758 + t1283 * t1317 + t1284 * t673, pkin(1) * t734 + t1283 * t1319 + t1284 * t664, pkin(1) * t648 + t1283 * t1320 + t1284 * t629, t1283 * t1369 + t1284 * t751, t1283 * t1375 + t1284 * t697, t1283 * t1372 + t1284 * t740, t1283 * t1370 + t1284 * t750, t1283 * t1371 + t1284 * t741, t1283 * t1367 + t1284 * t820, pkin(1) * t670 + t1283 * t1322 + t1284 * t620, pkin(1) * t680 + t1283 * t1321 + t1284 * t622, pkin(1) * t646 + t1283 * t1323 + t1284 * t613, pkin(1) * t611 + t1283 * t1324 + t1284 * t599;];
tauB_reg  = t1;
