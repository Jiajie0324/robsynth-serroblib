% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRRRR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d4,d5,d6]';
% 
% Output:
% tauc_reg [6x38]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-10 04:27
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRRR6_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRRR6_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRRR6_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRRRR6_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-10 04:21:35
% EndTime: 2019-03-10 04:22:08
% DurationCPUTime: 13.79s
% Computational Cost: add. (19417->624), mult. (48808->869), div. (0->0), fcn. (40265->12), ass. (0->311)
t327 = cos(pkin(6));
t427 = qJD(1) * t327;
t312 = qJD(2) + t427;
t331 = sin(qJ(3));
t336 = cos(qJ(3));
t332 = sin(qJ(2));
t326 = sin(pkin(6));
t428 = qJD(1) * t326;
t401 = t332 * t428;
t247 = t312 * t336 - t331 * t401;
t248 = t312 * t331 + t336 * t401;
t330 = sin(qJ(4));
t335 = cos(qJ(4));
t194 = -t247 * t335 + t248 * t330;
t487 = qJD(5) + qJD(6);
t539 = t194 + t487;
t337 = cos(qJ(2));
t412 = pkin(1) * t427;
t264 = -pkin(8) * t401 + t337 * t412;
t351 = (pkin(2) * t332 - pkin(9) * t337) * t326;
t265 = qJD(1) * t351;
t379 = -t264 * t331 + t265 * t336;
t476 = pkin(9) + pkin(10);
t404 = qJD(3) * t476;
t442 = t336 * t337;
t538 = (pkin(3) * t332 - pkin(10) * t442) * t428 + t379 + t336 * t404;
t426 = qJD(1) * t337;
t400 = t326 * t426;
t371 = t331 * t400;
t430 = t264 * t336 + t265 * t331;
t537 = pkin(10) * t371 - t331 * t404 - t430;
t328 = sin(qJ(6));
t329 = sin(qJ(5));
t333 = cos(qJ(6));
t334 = cos(qJ(5));
t276 = t328 * t329 - t333 * t334;
t536 = t539 * t276;
t444 = t328 * t334;
t278 = t329 * t333 + t444;
t535 = t539 * t278;
t277 = t330 * t331 - t335 * t336;
t488 = qJD(3) + qJD(4);
t220 = t488 * t277;
t231 = t277 * t400;
t434 = -t220 + t231;
t279 = t330 * t336 + t331 * t335;
t433 = (-t400 + t488) * t279;
t418 = qJD(5) * t334;
t513 = t194 * t334;
t534 = t418 + t513;
t303 = t476 * t331;
t305 = t476 * t336;
t353 = -t303 * t335 - t305 * t330;
t533 = qJD(4) * t353 - t330 * t538 + t335 * t537;
t309 = t332 * t412;
t267 = pkin(8) * t400 + t309;
t423 = qJD(3) * t331;
t366 = -t267 + (-t371 + t423) * pkin(3);
t514 = t194 * t329;
t532 = pkin(12) * t514;
t420 = qJD(4) * t335;
t229 = pkin(9) * t312 + t267;
t262 = (-pkin(2) * t337 - pkin(9) * t332 - pkin(1)) * t326;
t243 = qJD(1) * t262;
t183 = t229 * t336 + t243 * t331;
t156 = pkin(10) * t247 + t183;
t150 = t330 * t156;
t182 = -t229 * t331 + t243 * t336;
t155 = -pkin(10) * t248 + t182;
t83 = t155 * t335 - t150;
t515 = -pkin(3) * t420 + t83;
t531 = -pkin(4) * t433 + pkin(11) * t434 - t366;
t508 = -pkin(11) * t401 + t533;
t202 = -t231 * t329 - t334 * t401;
t505 = t329 * t220 + t202;
t419 = qJD(5) * t329;
t530 = (t419 + t514) * pkin(5);
t354 = t247 * t330 + t248 * t335;
t529 = pkin(5) * t354 + pkin(12) * t513;
t301 = -qJD(3) + t400;
t292 = -qJD(4) + t301;
t171 = -t292 * t329 + t334 * t354;
t142 = -pkin(3) * t301 + t155;
t151 = t335 * t156;
t72 = t142 * t330 + t151;
t69 = -pkin(11) * t292 + t72;
t228 = -pkin(2) * t312 - t264;
t198 = -pkin(3) * t247 + t228;
t89 = pkin(4) * t194 - pkin(11) * t354 + t198;
t38 = -t329 * t69 + t334 * t89;
t29 = -pkin(12) * t171 + t38;
t415 = -qJD(5) - t194;
t25 = -pkin(5) * t415 + t29;
t169 = t292 * t334 + t329 * t354;
t39 = t329 * t89 + t334 * t69;
t30 = -pkin(12) * t169 + t39;
t467 = t30 * t333;
t11 = t25 * t328 + t467;
t414 = qJD(1) * qJD(2);
t393 = t326 * t414;
t306 = t332 * t393;
t421 = qJD(4) * t330;
t369 = qJD(3) * t401;
t370 = t337 * t393;
t422 = qJD(3) * t336;
t215 = t312 * t422 - t331 * t369 + t336 * t370;
t266 = qJD(2) * t351;
t255 = qJD(1) * t266;
t446 = t326 * t332;
t313 = pkin(8) * t446;
t474 = pkin(1) * t337;
t268 = (t327 * t474 - t313) * qJD(2);
t256 = qJD(1) * t268;
t339 = -qJD(3) * t183 + t255 * t336 - t331 * t256;
t88 = pkin(3) * t306 - pkin(10) * t215 + t339;
t348 = -t229 * t423 + t243 * t422 + t255 * t331 + t256 * t336;
t405 = t312 * t423 + t331 * t370 + t336 * t369;
t97 = -pkin(10) * t405 + t348;
t375 = -t142 * t421 - t156 * t420 - t330 * t97 + t335 * t88;
t24 = -pkin(4) * t306 - t375;
t113 = t215 * t335 + t247 * t420 - t248 * t421 - t330 * t405;
t385 = t113 * t329 - t306 * t334;
t64 = qJD(5) * t171 + t385;
t14 = pkin(5) * t64 + t24;
t71 = t142 * t335 - t150;
t68 = pkin(4) * t292 - t71;
t53 = pkin(5) * t169 + t68;
t528 = t11 * t354 + t14 * t278 - t53 * t536;
t10 = t25 * t333 - t30 * t328;
t527 = -t10 * t354 + t14 * t276 + t53 * t535;
t137 = pkin(4) * t354 + pkin(11) * t194;
t118 = pkin(3) * t248 + t137;
t526 = -t118 * t334 + t329 * t515;
t63 = t113 * t334 - t292 * t418 + t306 * t329 - t354 * t419;
t61 = t63 * t329;
t525 = t171 * t534 + t61;
t114 = qJD(4) * t354 + t215 * t330 + t335 * t405;
t189 = qJD(6) - t415;
t355 = t169 * t328 - t171 * t333;
t524 = t278 * t114 - t189 * t536 + t354 * t355;
t99 = t169 * t333 + t171 * t328;
t523 = -t276 * t114 - t189 * t535 + t354 * t99;
t416 = qJD(6) * t333;
t417 = qJD(6) * t328;
t18 = -t169 * t416 - t171 * t417 - t328 * t64 + t333 * t63;
t522 = t18 * t278 + t355 * t536;
t107 = t329 * t114;
t491 = t415 * t418 - t107;
t521 = -t171 * t354 - t415 * t513 - t491;
t109 = t334 * t114;
t509 = t415 * t329;
t520 = t169 * t354 - t415 * t509 + t109;
t342 = qJD(6) * t355 - t328 * t63 - t333 * t64;
t519 = -t18 * t276 + t278 * t342 + t355 * t535 + t536 * t99;
t518 = -t169 * t534 + t171 * t509 - t329 * t64 + t63 * t334;
t517 = t53 * t99;
t516 = t355 * t99;
t510 = t354 * t194;
t234 = -t303 * t330 + t305 * t335;
t507 = qJD(4) * t234 + t330 * t537 + t335 * t538;
t396 = t279 * t418;
t506 = -t396 + t505;
t203 = -t231 * t334 + t329 * t401;
t382 = t220 * t334 + t203;
t504 = -t194 ^ 2 + t354 ^ 2;
t503 = t355 ^ 2 - t99 ^ 2;
t376 = -t142 * t420 + t156 * t421 - t330 * t88 - t335 * t97;
t23 = pkin(11) * t306 - t376;
t257 = pkin(8) * t370 + qJD(2) * t309;
t181 = pkin(3) * t405 + t257;
t44 = pkin(4) * t114 - pkin(11) * t113 + t181;
t8 = -qJD(5) * t39 - t23 * t329 + t334 * t44;
t4 = pkin(5) * t114 - pkin(12) * t63 + t8;
t7 = t23 * t334 + t329 * t44 + t418 * t89 - t419 * t69;
t5 = -pkin(12) * t64 + t7;
t2 = -qJD(6) * t11 - t328 * t5 + t333 * t4;
t502 = t355 * t53 + t2;
t501 = t189 * t99 + t18;
t500 = -t194 * t292 + t113;
t499 = -t189 * t355 + t342;
t498 = t194 * t198 + t376;
t82 = t155 * t330 + t151;
t368 = pkin(3) * t421 - t82;
t270 = -t327 * t336 + t331 * t446;
t271 = t327 * t331 + t336 * t446;
t207 = t270 * t335 + t271 * t330;
t208 = -t270 * t330 + t271 * t335;
t260 = t313 + (-pkin(2) - t474) * t327;
t214 = pkin(3) * t270 + t260;
t125 = pkin(4) * t207 - pkin(11) * t208 + t214;
t445 = t326 * t337;
t261 = pkin(8) * t445 + (pkin(1) * t332 + pkin(9)) * t327;
t380 = -t261 * t331 + t262 * t336;
t167 = -pkin(3) * t445 - pkin(10) * t271 + t380;
t431 = t261 * t336 + t262 * t331;
t176 = -pkin(10) * t270 + t431;
t437 = t167 * t330 + t176 * t335;
t94 = -pkin(11) * t445 + t437;
t461 = t125 * t329 + t334 * t94;
t494 = t189 * t354;
t493 = t415 * t354;
t210 = t278 * t279;
t492 = t531 * t334;
t435 = pkin(4) * t401 + t507;
t321 = -pkin(3) * t336 - pkin(2);
t216 = pkin(4) * t277 - pkin(11) * t279 + t321;
t490 = -t216 * t418 + t234 * t419 + t329 * t531 - t334 * t508;
t489 = t329 * t118 + t334 * t515;
t484 = -t24 * t334 - t354 * t38 + t419 * t68;
t483 = t24 * t329 + t354 * t39 + t418 * t68;
t478 = -t198 * t354 + t375;
t477 = -t292 * t354 - t114;
t28 = t30 * t417;
t392 = qJD(6) * t25 + t5;
t1 = t328 * t4 + t333 * t392 - t28;
t475 = -pkin(11) - pkin(12);
t473 = pkin(3) * t335;
t318 = pkin(3) * t330 + pkin(11);
t472 = -pkin(12) - t318;
t466 = -pkin(5) * t506 + t435;
t464 = t368 + t530;
t463 = t137 * t329 + t334 * t71;
t460 = t202 * t328 - t203 * t333 - t210 * t487 + t276 * t220;
t397 = t279 * t419;
t450 = t279 * t334;
t451 = t279 * t329;
t459 = -t220 * t444 - t417 * t451 + (t450 * t487 - t505) * t333 + (-t397 - t203) * t328;
t453 = t247 * t301;
t452 = t248 * t301;
t449 = t301 * t331;
t448 = t301 * t336;
t323 = t326 ^ 2;
t447 = t323 * qJD(1) ^ 2;
t225 = t334 * t234;
t432 = t216 * t329 + t225;
t398 = qJD(2) * t445;
t425 = qJD(2) * t332;
t269 = pkin(1) * t327 * t425 + pkin(8) * t398;
t429 = t332 ^ 2 - t337 ^ 2;
t424 = qJD(2) * t336;
t407 = t332 * t447;
t406 = t329 * t445;
t320 = -pkin(5) * t334 - pkin(4);
t403 = qJD(5) * t475;
t402 = t323 * t426;
t399 = t326 * t425;
t394 = t323 * t414;
t389 = qJD(5) * t472;
t387 = t125 * t334 - t329 * t94;
t386 = t137 * t334 - t329 * t71;
t384 = t167 * t335 - t176 * t330;
t374 = t312 + t427;
t372 = 0.2e1 * t394;
t367 = t530 - t72;
t222 = qJD(3) * t271 + t331 * t398;
t199 = pkin(3) * t222 + t269;
t213 = t334 * t216;
t138 = pkin(5) * t277 - pkin(12) * t450 - t234 * t329 + t213;
t365 = -pkin(12) * t506 - qJD(6) * t138 + t490;
t154 = -pkin(12) * t451 + t432;
t364 = t225 * qJD(5) + qJD(6) * t154 + t492 - t382 * pkin(12) + (-(pkin(12) * t279 - t216) * qJD(5) + t508) * t329 - t433 * pkin(5);
t363 = -0.2e1 * pkin(1) * t394;
t274 = t472 * t329;
t362 = -qJD(6) * t274 - t329 * t389 + t489 + t532;
t322 = t334 * pkin(12);
t275 = t318 * t334 + t322;
t361 = qJD(6) * t275 - t334 * t389 - t526 + t529;
t302 = t475 * t329;
t360 = -qJD(6) * t302 - t329 * t403 + t463 + t532;
t304 = pkin(11) * t334 + t322;
t359 = qJD(6) * t304 - t334 * t403 + t386 + t529;
t93 = pkin(4) * t445 - t384;
t191 = t208 * t334 - t406;
t36 = pkin(5) * t207 - pkin(12) * t191 + t387;
t190 = t208 * t329 + t334 * t445;
t41 = -pkin(12) * t190 + t461;
t358 = -t328 * t41 + t333 * t36;
t357 = t328 * t36 + t333 * t41;
t356 = -t114 * t318 + t194 * t68;
t130 = t190 * t333 + t191 * t328;
t131 = -t190 * t328 + t191 * t333;
t223 = -qJD(3) * t270 + t336 * t398;
t340 = -qJD(3) * t431 + t266 * t336 - t268 * t331;
t117 = pkin(3) * t399 - pkin(10) * t223 + t340;
t347 = -t261 * t423 + t262 * t422 + t266 * t331 + t268 * t336;
t122 = -pkin(10) * t222 + t347;
t352 = t117 * t335 - t122 * t330 - t167 * t421 - t176 * t420;
t346 = t117 * t330 + t122 * t335 + t167 * t420 - t176 * t421;
t32 = pkin(11) * t399 + t346;
t135 = -qJD(4) * t207 - t222 * t330 + t223 * t335;
t136 = qJD(4) * t208 + t222 * t335 + t223 * t330;
t52 = pkin(4) * t136 - pkin(11) * t135 + t199;
t349 = t125 * t418 + t32 * t334 + t329 * t52 - t419 * t94;
t344 = -t382 - t397;
t33 = -pkin(4) * t399 - t352;
t343 = -qJD(5) * t461 - t32 * t329 + t334 * t52;
t319 = -pkin(4) - t473;
t298 = t320 - t473;
t211 = t276 * t279;
t201 = pkin(5) * t451 - t353;
t103 = t114 * t277;
t81 = t114 * t207;
t79 = -qJD(5) * t406 + t135 * t329 + t208 * t418 - t334 * t399;
t78 = -qJD(5) * t190 + t135 * t334 + t329 * t399;
t65 = pkin(5) * t190 + t93;
t27 = qJD(6) * t131 + t328 * t78 + t333 * t79;
t26 = -qJD(6) * t130 - t328 * t79 + t333 * t78;
t20 = pkin(5) * t79 + t33;
t9 = -pkin(12) * t79 + t349;
t6 = pkin(5) * t136 - pkin(12) * t78 + t343;
t3 = [0, 0, 0, t332 * t337 * t372, -t429 * t372, t374 * t398, -t374 * t399, 0, -t257 * t327 - t269 * t312 + t332 * t363, -t256 * t327 - t268 * t312 + t337 * t363, t215 * t271 + t223 * t248, -t215 * t270 - t222 * t248 + t223 * t247 - t271 * t405, -t223 * t301 + (-t215 * t337 + (qJD(1) * t271 + t248) * t425) * t326, t222 * t301 + (t405 * t337 + (-qJD(1) * t270 + t247) * t425) * t326 (-t301 * t326 - t402) * t425, -t340 * t301 - t269 * t247 + t260 * t405 + t257 * t270 + t228 * t222 + (-t339 * t337 + (qJD(1) * t380 + t182) * t425) * t326, t347 * t301 + t269 * t248 + t260 * t215 + t257 * t271 + t228 * t223 + (t348 * t337 + (-qJD(1) * t431 - t183) * t425) * t326, t113 * t208 + t135 * t354, -t113 * t207 - t114 * t208 - t135 * t194 - t136 * t354, -t135 * t292 + (-t113 * t337 + (qJD(1) * t208 + t354) * t425) * t326, t136 * t292 + (t114 * t337 + (-qJD(1) * t207 - t194) * t425) * t326 (-t292 * t326 - t402) * t425, -t352 * t292 + t199 * t194 + t214 * t114 + t181 * t207 + t198 * t136 + (-t375 * t337 + (qJD(1) * t384 + t71) * t425) * t326, t346 * t292 + t199 * t354 + t214 * t113 + t181 * t208 + t198 * t135 + (-t376 * t337 + (-qJD(1) * t437 - t72) * t425) * t326, t171 * t78 + t191 * t63, -t169 * t78 - t171 * t79 - t190 * t63 - t191 * t64, t114 * t191 + t136 * t171 + t207 * t63 - t415 * t78, -t114 * t190 - t136 * t169 - t207 * t64 + t415 * t79, -t136 * t415 + t81, t114 * t387 + t38 * t136 + t33 * t169 + t24 * t190 + t8 * t207 - t343 * t415 + t93 * t64 + t68 * t79, -t114 * t461 - t136 * t39 + t171 * t33 + t191 * t24 - t207 * t7 + t349 * t415 + t63 * t93 + t68 * t78, t131 * t18 - t26 * t355, -t130 * t18 + t131 * t342 - t26 * t99 + t27 * t355, t114 * t131 - t136 * t355 + t18 * t207 + t189 * t26, -t114 * t130 - t136 * t99 - t189 * t27 + t207 * t342, t136 * t189 + t81 (-qJD(6) * t357 - t328 * t9 + t333 * t6) * t189 + t358 * t114 + t2 * t207 + t10 * t136 + t20 * t99 - t65 * t342 + t14 * t130 + t53 * t27 -(qJD(6) * t358 + t328 * t6 + t333 * t9) * t189 - t357 * t114 - t1 * t207 - t11 * t136 - t20 * t355 + t65 * t18 + t14 * t131 + t53 * t26; 0, 0, 0, -t337 * t407, t429 * t447 (qJD(2) - t312) * t400, t312 * t401 - t306, 0, pkin(1) * t407 + t267 * t312 - t257, pkin(8) * t306 + t264 * t312 + (-t327 * t414 + t447) * t474, t215 * t331 - t248 * t448 (t215 - t453) * t336 + (-t405 + t452) * t331, -t301 * t422 + (t301 * t442 + (qJD(2) * t331 - t248) * t332) * t428, t301 * t423 + (-t337 * t449 + (-t247 + t424) * t332) * t428, t301 * t401, -pkin(2) * t405 - t257 * t336 + t379 * t301 + t267 * t247 + (pkin(9) * t448 + t228 * t331) * qJD(3) + (-t182 * t332 + (-pkin(9) * t425 - t228 * t337) * t331) * t428, -pkin(2) * t215 + t257 * t331 - t430 * t301 - t267 * t248 + (-pkin(9) * t449 + t228 * t336) * qJD(3) + (-t228 * t442 + (-pkin(9) * t424 + t183) * t332) * t428, t113 * t279 + t354 * t434, -t113 * t277 - t114 * t279 - t194 * t434 - t354 * t433, -t434 * t292 + (qJD(2) * t279 - t354) * t401, t433 * t292 + (-qJD(2) * t277 + t194) * t401, t292 * t401, t321 * t114 + t181 * t277 + t507 * t292 + t433 * t198 + t366 * t194 + (qJD(2) * t353 - t71) * t401, t321 * t113 + t181 * t279 + t533 * t292 + t434 * t198 + t366 * t354 + (-qJD(2) * t234 + t72) * t401, t171 * t344 + t450 * t63, t505 * t171 + t382 * t169 + (-t61 - t334 * t64 + (t169 * t329 - t171 * t334) * qJD(5)) * t279, t109 * t279 + t171 * t433 + t277 * t63 - t344 * t415, -t107 * t279 - t169 * t433 - t277 * t64 - t415 * t506, -t415 * t433 + t103, t213 * t114 - t353 * t64 + t8 * t277 + (-t202 + t396) * t68 + t433 * t38 - (-t234 * t418 - t492) * t415 + t435 * t169 + (-t234 * t114 - t68 * t220 + t24 * t279 - (-qJD(5) * t216 - t508) * t415) * t329, -t114 * t432 + t171 * t435 + t24 * t450 - t7 * t277 + t344 * t68 - t353 * t63 - t39 * t433 - t415 * t490, -t18 * t211 - t355 * t460, -t18 * t210 - t211 * t342 + t355 * t459 - t460 * t99, -t114 * t211 + t18 * t277 + t189 * t460 - t355 * t433, -t114 * t210 - t189 * t459 + t277 * t342 - t433 * t99, t189 * t433 + t103 (t138 * t333 - t154 * t328) * t114 + t2 * t277 - t201 * t342 + t14 * t210 + t466 * t99 + t459 * t53 + (t328 * t365 - t333 * t364) * t189 + t433 * t10 -(t138 * t328 + t154 * t333) * t114 - t1 * t277 + t201 * t18 - t14 * t211 + t460 * t53 + (t328 * t364 + t333 * t365) * t189 - t433 * t11 - t466 * t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t248 * t247, -t247 ^ 2 + t248 ^ 2, t215 + t453, -t405 - t452, t306, -t183 * t301 - t228 * t248 + t339, -t182 * t301 - t228 * t247 - t348, t510, t504, t500, t477, t306, -t292 * t82 + (-t194 * t248 + t292 * t421 + t306 * t335) * pkin(3) + t478, -t292 * t83 + (-t248 * t354 + t292 * t420 - t306 * t330) * pkin(3) + t498, t525, t518, t521, t520, t493, t319 * t64 + t356 * t329 + t368 * t169 - (-t318 * t418 + t526) * t415 + t484, t319 * t63 + t356 * t334 + t368 * t171 - (t318 * t419 + t489) * t415 + t483, t522, t519, t524, t523, -t494 (t274 * t333 - t275 * t328) * t114 - t298 * t342 + t464 * t99 + (t328 * t362 - t333 * t361) * t189 + t527 -(t274 * t328 + t275 * t333) * t114 + t298 * t18 + (t328 * t361 + t333 * t362) * t189 - t464 * t355 + t528; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t510, t504, t500, t477, t306, -t292 * t72 + t478, -t292 * t71 + t498, t525, t518, t521, t520, t493, -pkin(4) * t64 + pkin(11) * t491 - t72 * t169 + t386 * t415 + t514 * t68 + t484, -pkin(4) * t63 - t463 * t415 - t72 * t171 + t68 * t513 + (-t415 * t419 - t109) * pkin(11) + t483, t522, t519, t524, t523, -t494 (t302 * t333 - t304 * t328) * t114 - t320 * t342 + t367 * t99 + (t328 * t360 - t333 * t359) * t189 + t527 -(t302 * t328 + t304 * t333) * t114 + t320 * t18 + (t328 * t359 + t333 * t360) * t189 - t367 * t355 + t528; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171 * t169, -t169 ^ 2 + t171 ^ 2, -t169 * t415 + t63, -t385 + (-qJD(5) - t415) * t171, t114, -t171 * t68 - t39 * t415 + t8, t169 * t68 - t38 * t415 - t7, -t516, t503, t501, t499, t114 -(-t29 * t328 - t467) * t189 + (t114 * t333 - t171 * t99 - t189 * t417) * pkin(5) + t502, t517 + t28 + (-t189 * t30 - t4) * t328 + (t189 * t29 - t392) * t333 + (-t114 * t328 + t171 * t355 - t189 * t416) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t516, t503, t501, t499, t114, t11 * t189 + t502, t10 * t189 - t1 + t517;];
tauc_reg  = t3;
