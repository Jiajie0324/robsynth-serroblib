% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:25
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRPR8_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR8_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR8_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPR8_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:24:51
% EndTime: 2019-03-09 05:25:10
% DurationCPUTime: 8.78s
% Computational Cost: add. (10822->524), mult. (23755->729), div. (0->0), fcn. (16146->8), ass. (0->243)
t232 = sin(qJ(6));
t233 = sin(qJ(4));
t235 = cos(qJ(4));
t283 = t235 * qJD(3);
t236 = cos(qJ(3));
t294 = qJD(1) * t236;
t200 = t233 * t294 - t283;
t266 = t235 * t294;
t285 = t233 * qJD(3);
t202 = t266 + t285;
t230 = sin(pkin(10));
t231 = cos(pkin(10));
t127 = -t231 * t200 - t230 * t202;
t348 = cos(qJ(6));
t247 = t348 * t127;
t251 = -t230 * t200 + t231 * t202;
t286 = qJD(6) * t232;
t287 = qJD(4) * t236;
t269 = t233 * t287;
t234 = sin(qJ(3));
t271 = t234 * t283;
t245 = t269 + t271;
t139 = qJD(1) * t245 - qJD(4) * t283;
t272 = t234 * t285;
t290 = qJD(4) * t202;
t140 = -qJD(1) * t272 + t290;
t79 = -t230 * t139 + t231 * t140;
t80 = -t231 * t139 - t230 * t140;
t20 = -qJD(6) * t247 + t232 * t79 + t251 * t286 - t348 * t80;
t284 = t234 * qJD(1);
t219 = qJD(4) + t284;
t215 = qJD(6) + t219;
t65 = -t232 * t251 + t247;
t337 = t215 * t65;
t367 = -t20 - t337;
t345 = t65 ^ 2;
t358 = t232 * t127 + t251 * t348;
t346 = t358 ^ 2;
t366 = -t345 + t346;
t344 = t358 * t65;
t354 = pkin(9) * t251;
t206 = t234 * pkin(3) - t236 * pkin(8) + qJ(2);
t184 = t206 * qJD(1);
t237 = -pkin(1) - pkin(7);
t217 = t237 * qJD(1) + qJD(2);
t205 = t234 * t217;
t187 = qJD(3) * pkin(8) + t205;
t119 = t235 * t184 - t233 * t187;
t85 = -t202 * qJ(5) + t119;
t73 = t219 * pkin(4) + t85;
t120 = t233 * t184 + t235 * t187;
t86 = -t200 * qJ(5) + t120;
t81 = t230 * t86;
t39 = t231 * t73 - t81;
t26 = t219 * pkin(5) - t354 + t39;
t265 = qJD(6) * t348;
t360 = t127 * pkin(9);
t336 = t231 * t86;
t40 = t230 * t73 + t336;
t28 = t40 + t360;
t255 = pkin(3) * t236 + pkin(8) * t234;
t193 = qJD(3) * t255 + qJD(2);
t168 = t193 * qJD(1);
t244 = -qJD(4) * t120 + t235 * t168;
t292 = qJD(3) * t236;
t37 = t139 * qJ(5) - t202 * qJD(5) + (pkin(4) * qJD(1) - t217 * t233) * t292 + t244;
t273 = t217 * t292;
t288 = qJD(4) * t235;
t289 = qJD(4) * t233;
t57 = t233 * t168 + t184 * t288 - t187 * t289 + t235 * t273;
t42 = -t140 * qJ(5) - t200 * qJD(5) + t57;
t12 = -t230 * t42 + t231 * t37;
t281 = qJD(1) * qJD(3);
t223 = t236 * t281;
t8 = pkin(5) * t223 - t80 * pkin(9) + t12;
t13 = t230 * t37 + t231 * t42;
t9 = -pkin(9) * t79 + t13;
t242 = -t232 * t8 - t26 * t265 + t28 * t286 - t348 * t9;
t305 = t236 * t217;
t338 = qJD(3) * pkin(3);
t188 = -t305 - t338;
t131 = t200 * pkin(4) + qJD(5) + t188;
t70 = -pkin(5) * t127 + t131;
t365 = -t70 * t65 + t242;
t204 = t255 * qJD(1);
t133 = t235 * t204 - t233 * t305;
t343 = -qJ(5) - pkin(8);
t262 = qJD(4) * t343;
t310 = t234 * t235;
t364 = -(pkin(4) * t236 + qJ(5) * t310) * qJD(1) - t133 - t233 * qJD(5) + t235 * t262;
t134 = t233 * t204 + t235 * t305;
t274 = t233 * t284;
t282 = t235 * qJD(5);
t363 = qJ(5) * t274 - t233 * t262 + t134 - t282;
t21 = qJD(6) * t358 + t232 * t80 + t348 * t79;
t335 = t358 * t215;
t362 = -t21 + t335;
t195 = t230 * t235 + t231 * t233;
t180 = t195 * qJD(4);
t181 = t195 * qJD(1);
t298 = t234 * t181 + t180;
t312 = t231 * t235;
t194 = t230 * t233 - t312;
t349 = qJD(4) * t194;
t297 = t230 * t274 - t284 * t312 + t349;
t6 = t232 * t26 + t348 * t28;
t2 = -qJD(6) * t6 - t232 * t9 + t348 * t8;
t361 = -t358 * t70 + t2;
t333 = t363 * t230 + t364 * t231;
t332 = t364 * t230 - t363 * t231;
t359 = t251 * t127;
t357 = pkin(5) * t294 - pkin(9) * t297 - t333;
t356 = pkin(9) * t298 - t332;
t300 = t194 * qJD(1) - t195 * t292 + t234 * t349;
t163 = t195 * t234;
t166 = t194 * t236;
t299 = -qJD(3) * t166 - qJD(4) * t163 - t181;
t268 = t235 * t287;
t355 = t268 - t272;
t280 = 0.2e1 * qJD(1);
t353 = -t119 * t219 + t57;
t58 = -t233 * t273 + t244;
t352 = -t120 * t219 - t58;
t256 = -t205 + (t274 + t289) * pkin(4);
t309 = t234 * t237;
t145 = t233 * t206 + t235 * t309;
t347 = pkin(4) * t230;
t210 = t343 * t233;
t211 = t343 * t235;
t136 = t231 * t210 + t211 * t230;
t110 = -t195 * pkin(9) + t136;
t137 = t230 * t210 - t231 * t211;
t111 = -pkin(9) * t194 + t137;
t50 = t232 * t110 + t348 * t111;
t342 = t50 * qJD(6) - t356 * t232 + t357 * t348;
t49 = t348 * t110 - t232 * t111;
t341 = -t49 * qJD(6) + t357 * t232 + t356 * t348;
t243 = -qJD(4) * t145 + t235 * t193;
t264 = -t233 * t237 + pkin(4);
t55 = qJ(5) * t271 + (qJ(5) * t289 + qJD(3) * t264 - t282) * t236 + t243;
t291 = qJD(3) * t237;
t270 = t236 * t291;
t275 = t233 * t193 + t206 * t288 + t235 * t270;
t59 = -qJ(5) * t268 + (-qJD(5) * t236 + (qJ(5) * qJD(3) - qJD(4) * t237) * t234) * t233 + t275;
t25 = t230 * t55 + t231 * t59;
t340 = t194 * t265 + t195 * t286 + t298 * t232 + t297 * t348;
t125 = -t232 * t194 + t348 * t195;
t339 = t125 * qJD(6) - t297 * t232 + t298 * t348;
t45 = t231 * t85 - t81;
t222 = t231 * pkin(4) + pkin(5);
t171 = t232 * t222 + t348 * t347;
t44 = -t230 * t85 - t336;
t29 = t44 - t360;
t30 = t45 - t354;
t334 = t171 * qJD(6) - t232 * t30 + t348 * t29;
t170 = t348 * t222 - t232 * t347;
t331 = -t170 * qJD(6) + t232 * t29 + t348 * t30;
t165 = t194 * t234;
t99 = -t232 * t163 - t348 * t165;
t330 = t99 * qJD(6) + t299 * t232 - t300 * t348;
t97 = -t348 * t163 + t232 * t165;
t329 = -t97 * qJD(6) - t300 * t232 - t299 * t348;
t326 = t251 * t219;
t325 = t127 * t219;
t324 = t251 ^ 2;
t323 = t139 * t233;
t322 = t139 * t234;
t321 = t140 * t234;
t320 = t140 * t235;
t319 = t200 * t219;
t318 = t202 * t200;
t317 = t202 * t219;
t316 = t219 * t233;
t315 = t219 * t234;
t314 = t219 * t235;
t311 = t233 * t236;
t308 = t235 * t236;
t307 = t236 * t139;
t306 = t236 * t140;
t238 = qJD(3) ^ 2;
t304 = t238 * t234;
t303 = t238 * t236;
t239 = qJD(1) ^ 2;
t302 = t239 * qJ(2);
t301 = t298 * pkin(5) + t256;
t192 = t235 * t206;
t123 = -qJ(5) * t308 + t234 * t264 + t192;
t132 = -qJ(5) * t311 + t145;
t68 = t230 * t123 + t231 * t132;
t229 = t236 ^ 2;
t296 = t234 ^ 2 - t229;
t295 = -t238 - t239;
t293 = qJD(3) * t234;
t278 = qJD(2) * t280;
t277 = t233 * t309;
t276 = t236 * t239 * t234;
t225 = -t235 * pkin(4) - pkin(3);
t267 = t219 * t294;
t114 = pkin(4) * t140 + t217 * t293;
t24 = -t230 * t59 + t231 * t55;
t67 = t231 * t123 - t230 * t132;
t260 = -t188 + t305;
t196 = pkin(4) * t311 - t236 * t237;
t259 = t200 + t283;
t258 = -t202 + t285;
t257 = qJD(4) * t234 + qJD(1);
t254 = t127 ^ 2;
t253 = t119 * t235 + t120 * t233;
t252 = t119 * t233 - t120 * t235;
t250 = t260 * qJD(3);
t249 = qJD(1) * t229 - t315;
t46 = pkin(5) * t79 + t114;
t47 = t234 * pkin(5) + t166 * pkin(9) + t67;
t164 = t195 * t236;
t48 = -pkin(9) * t164 + t68;
t22 = -t232 * t48 + t348 * t47;
t23 = t232 * t47 + t348 * t48;
t248 = -pkin(8) * t292 + t188 * t234;
t100 = -t232 * t164 - t348 * t166;
t141 = t355 * pkin(4) + t234 * t291;
t241 = -qJD(4) * t253 - t58 * t233 + t57 * t235;
t226 = qJ(2) * t278;
t213 = t234 * t223;
t152 = t194 * pkin(5) + t225;
t151 = t219 * t292 + t213;
t144 = t192 - t277;
t130 = t164 * pkin(5) + t196;
t124 = t348 * t194 + t232 * t195;
t107 = t180 * t236 - t230 * t272 + t231 * t271;
t105 = t195 * t293 + t236 * t349;
t98 = t348 * t164 - t232 * t166;
t89 = pkin(4) * t202 + pkin(5) * t251;
t88 = -t233 * t270 + t243;
t87 = -qJD(4) * t277 + t275;
t69 = -t105 * pkin(5) + t141;
t34 = t100 * qJD(6) - t348 * t105 - t232 * t107;
t32 = -t232 * t105 + t348 * t107 + t164 * t265 - t166 * t286;
t19 = pkin(9) * t105 + t25;
t18 = pkin(5) * t292 + t107 * pkin(9) + t24;
t5 = -t232 * t28 + t348 * t26;
t4 = -t23 * qJD(6) + t348 * t18 - t232 * t19;
t3 = t22 * qJD(6) + t232 * t18 + t348 * t19;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t278, t226, -0.2e1 * t213, 0.2e1 * t296 * t281, -t304, 0.2e1 * t213, -t303, 0, -t237 * t304 + (qJ(2) * t292 + qJD(2) * t234) * t280, -t237 * t303 + (-qJ(2) * t293 + qJD(2) * t236) * t280, 0, t226, -t202 * t245 - t235 * t307 (t200 * t235 + t202 * t233) * t293 + (t323 - t320 + (t200 * t233 - t202 * t235) * qJD(4)) * t236, -t219 * t269 - t322 + (t202 * t236 + t235 * t249) * qJD(3), t355 * t200 + t233 * t306, -t219 * t268 - t321 + (-t200 * t236 - t233 * t249) * qJD(3), t151, t88 * t219 + t58 * t234 + (-t140 * t237 + t188 * t288) * t236 + ((qJD(1) * t144 + t119) * t236 + (t200 * t237 + t233 * t260) * t234) * qJD(3), -t87 * t219 - t57 * t234 + (t139 * t237 - t188 * t289) * t236 + ((-qJD(1) * t145 - t120) * t236 + (t202 * t237 + t235 * t260) * t234) * qJD(3), t144 * t139 - t145 * t140 - t87 * t200 - t88 * t202 + t253 * t293 + (qJD(4) * t252 - t233 * t57 - t235 * t58) * t236, t119 * t88 + t120 * t87 + t58 * t144 + t57 * t145 - t250 * t309, -t107 * t251 - t166 * t80, t105 * t251 - t107 * t127 - t80 * t164 + t166 * t79, -t107 * t219 + t80 * t234 + (-qJD(1) * t166 + t251) * t292, t105 * t127 + t79 * t164, t105 * t219 - t79 * t234 + (-qJD(1) * t164 + t127) * t292, t151, t24 * t219 + t12 * t234 - t141 * t127 + t196 * t79 + t114 * t164 - t131 * t105 + (qJD(1) * t67 + t39) * t292, -t131 * t107 - t114 * t166 + t141 * t251 - t13 * t234 + t196 * t80 - t25 * t219 + (-qJD(1) * t68 - t40) * t292, t40 * t105 + t39 * t107 + t12 * t166 + t127 * t25 - t13 * t164 - t24 * t251 - t67 * t80 - t68 * t79, t114 * t196 + t12 * t67 + t13 * t68 + t131 * t141 + t24 * t39 + t25 * t40, -t100 * t20 - t32 * t358, -t100 * t21 + t20 * t98 - t32 * t65 - t34 * t358, -t20 * t234 - t32 * t215 + (qJD(1) * t100 + t358) * t292, t21 * t98 - t34 * t65, -t21 * t234 - t34 * t215 + (-qJD(1) * t98 + t65) * t292, t215 * t292 + t213, t130 * t21 + t2 * t234 + t4 * t215 + t70 * t34 + t46 * t98 - t69 * t65 + (qJD(1) * t22 + t5) * t292, t242 * t234 + t46 * t100 - t130 * t20 - t3 * t215 - t70 * t32 + t69 * t358 + (-qJD(1) * t23 - t6) * t292, -t100 * t2 + t20 * t22 - t21 * t23 + t242 * t98 + t3 * t65 + t32 * t5 - t34 * t6 - t358 * t4, t130 * t46 + t2 * t22 - t23 * t242 + t3 * t6 + t4 * t5 + t69 * t70; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t239, -t302, 0, 0, 0, 0, 0, 0, t295 * t234, t295 * t236, 0, -t302, 0, 0, 0, 0, 0, 0, -t306 - t257 * t314 + (t200 * t234 + (-t219 - t284) * t311) * qJD(3), t307 + t257 * t316 + (-t219 * t308 + (t202 - t266) * t234) * qJD(3) (-t200 * t292 + t202 * t257 - t321) * t235 + (t200 * t257 + t202 * t292 - t322) * t233, -t252 * t292 - t253 * qJD(1) + (-t250 + t241) * t234, 0, 0, 0, 0, 0, 0, -t236 * t79 + t300 * t219 + (-t127 * t234 - t163 * t294) * qJD(3), -t236 * t80 - t299 * t219 + (t165 * t294 + t234 * t251) * qJD(3), t127 * t299 + t163 * t80 + t165 * t79 - t300 * t251, -t114 * t236 - t12 * t163 - t13 * t165 + t131 * t293 + t299 * t40 + t300 * t39, 0, 0, 0, 0, 0, 0, -t236 * t21 - t330 * t215 + (-t234 * t65 + t294 * t97) * qJD(3), t236 * t20 + t329 * t215 + (t234 * t358 - t294 * t99) * qJD(3), t20 * t97 - t21 * t99 - t329 * t65 + t330 * t358, t2 * t97 - t46 * t236 - t242 * t99 + t70 * t293 - t329 * t6 - t330 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t276, -t296 * t239, 0, -t276, 0, 0, -t236 * t302, t234 * t302, 0, 0, t202 * t314 - t323 (-t139 - t319) * t235 + (-t140 - t317) * t233, t219 * t288 + (t219 * t310 + t236 * t258) * qJD(1), t200 * t316 - t320, -t219 * t289 + (-t233 * t315 + t236 * t259) * qJD(1), -t267, -pkin(3) * t140 - t133 * t219 - t259 * t205 + (-pkin(8) * t314 + t188 * t233) * qJD(4) + (-t119 * t236 + t233 * t248) * qJD(1), pkin(3) * t139 + t134 * t219 + t258 * t205 + (pkin(8) * t316 + t188 * t235) * qJD(4) + (t120 * t236 + t235 * t248) * qJD(1), t133 * t202 + t134 * t200 + ((-t140 + t290) * pkin(8) + t353) * t235 + ((qJD(4) * t200 - t139) * pkin(8) + t352) * t233, -t119 * t133 - t120 * t134 + (-t188 - t338) * t205 + t241 * pkin(8), t195 * t80 - t251 * t297, -t127 * t297 - t80 * t194 - t195 * t79 - t251 * t298, -t297 * t219 + (qJD(3) * t195 - t251) * t294, -t127 * t298 + t79 * t194, -t298 * t219 + (-qJD(3) * t194 - t127) * t294, -t267, t225 * t79 + t114 * t194 + t333 * t219 + t298 * t131 + (qJD(3) * t136 - t39) * t294 - t256 * t127, t114 * t195 + t225 * t80 - t332 * t219 - t297 * t131 + t256 * t251 + (-qJD(3) * t137 + t40) * t294, -t12 * t195 + t127 * t332 - t13 * t194 - t136 * t80 - t137 * t79 - t333 * t251 + t297 * t39 - t298 * t40, t114 * t225 + t12 * t136 + t13 * t137 + t256 * t131 + t332 * t40 + t333 * t39, -t125 * t20 - t340 * t358, t124 * t20 - t125 * t21 - t339 * t358 - t340 * t65, -t340 * t215 + (qJD(3) * t125 - t358) * t294, t124 * t21 - t339 * t65, -t339 * t215 + (-qJD(3) * t124 - t65) * t294, -t215 * t294, t46 * t124 + t152 * t21 + t339 * t70 - t301 * t65 - t342 * t215 + (qJD(3) * t49 - t5) * t294, t46 * t125 - t152 * t20 - t340 * t70 + t301 * t358 + t341 * t215 + (-qJD(3) * t50 + t6) * t294, t124 * t242 - t125 * t2 + t20 * t49 - t21 * t50 - t339 * t6 + t340 * t5 - t341 * t65 + t342 * t358, t152 * t46 + t2 * t49 - t242 * t50 + t301 * t70 - t341 * t6 - t342 * t5; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t318, -t200 ^ 2 + t202 ^ 2, -t139 + t319, -t318, t317 - t140, t223, -t188 * t202 - t352, t188 * t200 - t353, 0, 0, -t359, -t254 + t324, t80 - t325, t359, -t79 + t326, t223, -t131 * t251 - t44 * t219 + (t127 * t202 + t223 * t231) * pkin(4) + t12, -t131 * t127 + t45 * t219 + (-t202 * t251 - t223 * t230) * pkin(4) - t13 (-t230 * t79 - t231 * t80) * pkin(4) + (t40 + t44) * t251 + (-t45 + t39) * t127, -t39 * t44 - t40 * t45 + (t12 * t231 + t13 * t230 - t131 * t202) * pkin(4), -t344, t366, t367, t344, t362, t223, t170 * t223 - t334 * t215 + t65 * t89 + t361, -t171 * t223 + t331 * t215 - t358 * t89 + t365, t170 * t20 - t171 * t21 + (t334 + t6) * t358 + (-t331 + t5) * t65, t170 * t2 - t171 * t242 - t331 * t6 - t334 * t5 - t70 * t89; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79 + t326, t80 + t325, -t254 - t324, -t127 * t40 + t251 * t39 + t114, 0, 0, 0, 0, 0, 0, t21 + t335, -t20 + t337, -t345 - t346, t358 * t5 - t6 * t65 + t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t344, t366, t367, t344, t362, t223, t6 * t215 + t361, t5 * t215 + t365, 0, 0;];
tauc_reg  = t1;
