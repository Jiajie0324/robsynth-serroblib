% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPRRPR8
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 23:12
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPRRPR8_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR8_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR8_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRPR8_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRPR8_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPR8_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 23:11:48
% EndTime: 2019-05-05 23:11:53
% DurationCPUTime: 5.51s
% Computational Cost: add. (42013->296), mult. (85940->358), div. (0->0), fcn. (58837->10), ass. (0->204)
t1782 = sin(qJ(3));
t1770 = t1782 * qJD(1);
t1766 = t1770 + qJD(4);
t1762 = qJD(6) + t1766;
t1821 = qJD(6) + t1762;
t1786 = cos(qJ(3));
t1812 = qJD(1) * t1786;
t1767 = qJD(3) * t1812;
t1768 = t1782 * qJDD(1);
t1747 = t1768 + t1767 + qJDD(4);
t1781 = sin(qJ(4));
t1785 = cos(qJ(4));
t1748 = -t1785 * qJD(3) + t1781 * t1812;
t1750 = qJD(3) * t1781 + t1785 * t1812;
t1808 = t1748 * t1750;
t1716 = t1747 - t1808;
t1778 = sin(pkin(10));
t1779 = cos(pkin(10));
t1727 = t1779 * t1748 + t1750 * t1778;
t1729 = -t1748 * t1778 + t1750 * t1779;
t1810 = t1727 * t1729;
t1690 = t1747 - t1810;
t1789 = qJD(1) ^ 2;
t1783 = sin(qJ(1));
t1787 = cos(qJ(1));
t1761 = -t1787 * g(1) - t1783 * g(2);
t1790 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1761;
t1813 = pkin(7) + pkin(1);
t1738 = t1813 * t1789 + t1790;
t1780 = sin(qJ(6));
t1784 = cos(qJ(6));
t1698 = t1784 * t1727 + t1729 * t1780;
t1820 = t1698 ^ 2;
t1700 = -t1727 * t1780 + t1729 * t1784;
t1819 = t1700 ^ 2;
t1726 = t1727 ^ 2;
t1818 = t1729 ^ 2;
t1746 = t1748 ^ 2;
t1817 = t1750 ^ 2;
t1816 = t1762 ^ 2;
t1815 = t1766 ^ 2;
t1814 = -2 * qJD(5);
t1811 = t1698 * t1700;
t1809 = t1729 * t1766;
t1807 = t1766 * t1727;
t1806 = t1766 * t1748;
t1805 = qJD(4) - t1766;
t1804 = qJD(6) - t1762;
t1751 = t1768 + 0.2e1 * t1767;
t1801 = qJD(3) * t1770;
t1802 = t1786 * qJDD(1);
t1752 = -t1801 + t1802;
t1705 = (-t1752 + t1801) * pkin(8) + t1751 * pkin(3) - t1738;
t1760 = t1783 * g(1) - t1787 * g(2);
t1791 = -t1789 * qJ(2) + qJDD(2) - t1760;
t1739 = -qJDD(1) * t1813 + t1791;
t1731 = -t1786 * g(3) + t1782 * t1739;
t1788 = qJD(3) ^ 2;
t1792 = t1789 * (pkin(3) * t1782 - pkin(8) * t1786);
t1712 = -t1788 * pkin(3) + qJDD(3) * pkin(8) - t1782 * t1792 + t1731;
t1677 = t1781 * t1705 + t1785 * t1712;
t1776 = t1782 ^ 2;
t1777 = t1786 ^ 2;
t1803 = t1776 + t1777;
t1800 = t1782 * t1786 * t1789;
t1676 = t1785 * t1705 - t1781 * t1712;
t1793 = -t1781 * qJDD(3) - t1785 * t1752;
t1724 = -qJD(4) * t1748 - t1793;
t1659 = (-t1724 - t1806) * qJ(5) + t1716 * pkin(4) + t1676;
t1798 = -t1785 * qJDD(3) + t1781 * t1752;
t1723 = -qJD(4) * t1750 - t1798;
t1795 = pkin(4) * t1766 - qJ(5) * t1750;
t1661 = -t1746 * pkin(4) + t1723 * qJ(5) - t1766 * t1795 + t1677;
t1632 = t1778 * t1659 + t1779 * t1661 + t1727 * t1814;
t1692 = t1779 * t1723 - t1724 * t1778;
t1693 = t1723 * t1778 + t1724 * t1779;
t1799 = t1784 * t1692 - t1780 * t1693;
t1681 = -t1693 - t1807;
t1797 = -qJDD(6) - t1747;
t1796 = pkin(5) * t1766 - pkin(9) * t1729;
t1631 = t1779 * t1659 - t1778 * t1661 + t1729 * t1814;
t1730 = t1782 * g(3) + t1786 * t1739;
t1794 = -t1780 * t1692 - t1784 * t1693;
t1711 = qJDD(3) * pkin(3) + t1788 * pkin(8) - t1786 * t1792 + t1730;
t1671 = t1723 * pkin(4) + t1746 * qJ(5) - t1750 * t1795 - qJDD(5) + t1711;
t1764 = -t1777 * t1789 - t1788;
t1763 = -t1776 * t1789 - t1788;
t1759 = -qJDD(3) - t1800;
t1758 = qJDD(3) - t1800;
t1757 = t1803 * t1789;
t1756 = qJDD(1) * t1783 + t1787 * t1789;
t1755 = qJDD(1) * t1787 - t1783 * t1789;
t1754 = t1803 * qJDD(1);
t1753 = -0.2e1 * t1801 + t1802;
t1742 = qJDD(1) * pkin(1) - t1791;
t1741 = t1789 * pkin(1) + t1790;
t1736 = t1759 * t1786 - t1764 * t1782;
t1735 = -t1758 * t1782 + t1763 * t1786;
t1734 = t1759 * t1782 + t1764 * t1786;
t1733 = t1758 * t1786 + t1763 * t1782;
t1732 = -t1815 - t1817;
t1725 = -t1815 - t1746;
t1717 = -t1747 - t1808;
t1715 = -t1746 - t1817;
t1713 = -t1815 - t1818;
t1709 = t1748 * t1805 + t1793;
t1708 = t1724 - t1806;
t1707 = -t1750 * t1805 - t1798;
t1706 = (qJD(4) + t1766) * t1750 + t1798;
t1704 = -t1730 * t1782 + t1731 * t1786;
t1703 = t1730 * t1786 + t1731 * t1782;
t1697 = t1717 * t1785 - t1732 * t1781;
t1696 = t1717 * t1781 + t1732 * t1785;
t1695 = -t1815 - t1726;
t1691 = -t1747 - t1810;
t1689 = -t1716 * t1781 + t1725 * t1785;
t1688 = t1716 * t1785 + t1725 * t1781;
t1685 = -t1816 - t1819;
t1684 = -t1726 - t1818;
t1683 = t1707 * t1785 - t1709 * t1781;
t1682 = t1707 * t1781 + t1709 * t1785;
t1680 = t1693 - t1807;
t1679 = t1692 + t1809;
t1678 = -t1692 + t1809;
t1675 = t1697 * t1786 + t1708 * t1782;
t1674 = t1691 * t1779 - t1713 * t1778;
t1673 = t1697 * t1782 - t1708 * t1786;
t1672 = t1691 * t1778 + t1713 * t1779;
t1670 = t1689 * t1786 + t1706 * t1782;
t1669 = t1689 * t1782 - t1706 * t1786;
t1668 = -t1816 - t1820;
t1667 = t1797 - t1811;
t1666 = -t1797 - t1811;
t1665 = -t1690 * t1778 + t1695 * t1779;
t1664 = t1690 * t1779 + t1695 * t1778;
t1663 = t1683 * t1786 + t1715 * t1782;
t1662 = t1683 * t1782 - t1715 * t1786;
t1658 = -t1819 - t1820;
t1655 = t1679 * t1779 - t1681 * t1778;
t1654 = t1679 * t1778 + t1681 * t1779;
t1653 = -t1676 * t1781 + t1677 * t1785;
t1652 = t1676 * t1785 + t1677 * t1781;
t1651 = t1667 * t1784 - t1685 * t1780;
t1650 = t1667 * t1780 + t1685 * t1784;
t1649 = -t1672 * t1781 + t1674 * t1785;
t1648 = t1672 * t1785 + t1674 * t1781;
t1647 = t1653 * t1786 - t1711 * t1782;
t1646 = t1653 * t1782 + t1711 * t1786;
t1645 = t1698 * t1804 + t1794;
t1644 = -t1698 * t1821 - t1794;
t1643 = -t1700 * t1804 + t1799;
t1642 = t1700 * t1821 - t1799;
t1641 = -t1666 * t1780 + t1668 * t1784;
t1640 = t1666 * t1784 + t1668 * t1780;
t1639 = t1692 * pkin(5) + t1726 * pkin(9) - t1729 * t1796 + t1671;
t1638 = -t1664 * t1781 + t1665 * t1785;
t1637 = t1664 * t1785 + t1665 * t1781;
t1636 = t1649 * t1786 + t1680 * t1782;
t1635 = t1649 * t1782 - t1680 * t1786;
t1634 = t1638 * t1786 + t1678 * t1782;
t1633 = t1638 * t1782 - t1678 * t1786;
t1630 = -t1654 * t1781 + t1655 * t1785;
t1629 = t1654 * t1785 + t1655 * t1781;
t1628 = -t1650 * t1778 + t1651 * t1779;
t1627 = t1650 * t1779 + t1651 * t1778;
t1626 = t1630 * t1786 + t1684 * t1782;
t1625 = t1630 * t1782 - t1684 * t1786;
t1624 = -t1726 * pkin(5) + t1692 * pkin(9) - t1766 * t1796 + t1632;
t1623 = t1643 * t1784 - t1645 * t1780;
t1622 = t1643 * t1780 + t1645 * t1784;
t1621 = -t1640 * t1778 + t1641 * t1779;
t1620 = t1640 * t1779 + t1641 * t1778;
t1619 = pkin(5) * t1690 + t1681 * pkin(9) + t1631;
t1618 = -t1631 * t1778 + t1632 * t1779;
t1617 = t1631 * t1779 + t1632 * t1778;
t1616 = -t1627 * t1781 + t1628 * t1785;
t1615 = t1627 * t1785 + t1628 * t1781;
t1614 = t1619 * t1780 + t1624 * t1784;
t1613 = t1619 * t1784 - t1624 * t1780;
t1612 = -t1622 * t1778 + t1623 * t1779;
t1611 = t1622 * t1779 + t1623 * t1778;
t1610 = -t1620 * t1781 + t1621 * t1785;
t1609 = t1620 * t1785 + t1621 * t1781;
t1608 = t1616 * t1786 + t1644 * t1782;
t1607 = t1616 * t1782 - t1644 * t1786;
t1606 = t1610 * t1786 + t1642 * t1782;
t1605 = t1610 * t1782 - t1642 * t1786;
t1604 = -t1617 * t1781 + t1618 * t1785;
t1603 = t1617 * t1785 + t1618 * t1781;
t1602 = t1604 * t1786 - t1671 * t1782;
t1601 = t1604 * t1782 + t1671 * t1786;
t1600 = -t1613 * t1780 + t1614 * t1784;
t1599 = t1613 * t1784 + t1614 * t1780;
t1598 = -t1611 * t1781 + t1612 * t1785;
t1597 = t1611 * t1785 + t1612 * t1781;
t1596 = t1598 * t1786 + t1658 * t1782;
t1595 = t1598 * t1782 - t1658 * t1786;
t1594 = -t1599 * t1778 + t1600 * t1779;
t1593 = t1599 * t1779 + t1600 * t1778;
t1592 = -t1593 * t1781 + t1594 * t1785;
t1591 = t1593 * t1785 + t1594 * t1781;
t1590 = t1592 * t1786 - t1639 * t1782;
t1589 = t1592 * t1782 + t1639 * t1786;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1756, -t1755, 0, -t1760 * t1783 + t1761 * t1787, 0, 0, 0, 0, 0, 0, 0, t1756, t1755, -t1741 * t1787 - t1742 * t1783, 0, 0, 0, 0, 0, 0, t1733 * t1783 + t1751 * t1787, t1734 * t1783 + t1753 * t1787, -t1754 * t1783 - t1757 * t1787, t1703 * t1783 - t1738 * t1787, 0, 0, 0, 0, 0, 0, t1669 * t1783 + t1688 * t1787, t1673 * t1783 + t1696 * t1787, t1662 * t1783 + t1682 * t1787, t1646 * t1783 + t1652 * t1787, 0, 0, 0, 0, 0, 0, t1633 * t1783 + t1637 * t1787, t1635 * t1783 + t1648 * t1787, t1625 * t1783 + t1629 * t1787, t1601 * t1783 + t1603 * t1787, 0, 0, 0, 0, 0, 0, t1605 * t1783 + t1609 * t1787, t1607 * t1783 + t1615 * t1787, t1595 * t1783 + t1597 * t1787, t1589 * t1783 + t1591 * t1787; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1755, -t1756, 0, t1760 * t1787 + t1761 * t1783, 0, 0, 0, 0, 0, 0, 0, -t1755, t1756, -t1741 * t1783 + t1742 * t1787, 0, 0, 0, 0, 0, 0, -t1733 * t1787 + t1751 * t1783, -t1734 * t1787 + t1753 * t1783, t1754 * t1787 - t1757 * t1783, -t1703 * t1787 - t1738 * t1783, 0, 0, 0, 0, 0, 0, -t1669 * t1787 + t1688 * t1783, -t1673 * t1787 + t1696 * t1783, -t1662 * t1787 + t1682 * t1783, -t1646 * t1787 + t1652 * t1783, 0, 0, 0, 0, 0, 0, -t1633 * t1787 + t1637 * t1783, -t1635 * t1787 + t1648 * t1783, -t1625 * t1787 + t1629 * t1783, -t1601 * t1787 + t1603 * t1783, 0, 0, 0, 0, 0, 0, -t1605 * t1787 + t1609 * t1783, -t1607 * t1787 + t1615 * t1783, -t1595 * t1787 + t1597 * t1783, -t1589 * t1787 + t1591 * t1783; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1735, t1736, 0, t1704, 0, 0, 0, 0, 0, 0, t1670, t1675, t1663, t1647, 0, 0, 0, 0, 0, 0, t1634, t1636, t1626, t1602, 0, 0, 0, 0, 0, 0, t1606, t1608, t1596, t1590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1789, -qJDD(1), 0, t1761, 0, 0, 0, 0, 0, 0, 0, t1789, qJDD(1), -t1741, 0, 0, 0, 0, 0, 0, t1751, t1753, -t1757, -t1738, 0, 0, 0, 0, 0, 0, t1688, t1696, t1682, t1652, 0, 0, 0, 0, 0, 0, t1637, t1648, t1629, t1603, 0, 0, 0, 0, 0, 0, t1609, t1615, t1597, t1591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1789, 0, t1760, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1789, t1742, 0, 0, 0, 0, 0, 0, -t1733, -t1734, t1754, -t1703, 0, 0, 0, 0, 0, 0, -t1669, -t1673, -t1662, -t1646, 0, 0, 0, 0, 0, 0, -t1633, -t1635, -t1625, -t1601, 0, 0, 0, 0, 0, 0, -t1605, -t1607, -t1595, -t1589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1735, t1736, 0, t1704, 0, 0, 0, 0, 0, 0, t1670, t1675, t1663, t1647, 0, 0, 0, 0, 0, 0, t1634, t1636, t1626, t1602, 0, 0, 0, 0, 0, 0, t1606, t1608, t1596, t1590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1735, t1736, 0, t1704, 0, 0, 0, 0, 0, 0, t1670, t1675, t1663, t1647, 0, 0, 0, 0, 0, 0, t1634, t1636, t1626, t1602, 0, 0, 0, 0, 0, 0, t1606, t1608, t1596, t1590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1789, -qJDD(1), t1741, 0, 0, 0, 0, 0, 0, -t1751, -t1753, t1757, t1738, 0, 0, 0, 0, 0, 0, -t1688, -t1696, -t1682, -t1652, 0, 0, 0, 0, 0, 0, -t1637, -t1648, -t1629, -t1603, 0, 0, 0, 0, 0, 0, -t1609, -t1615, -t1597, -t1591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1789, -t1742, 0, 0, 0, 0, 0, 0, t1733, t1734, -t1754, t1703, 0, 0, 0, 0, 0, 0, t1669, t1673, t1662, t1646, 0, 0, 0, 0, 0, 0, t1633, t1635, t1625, t1601, 0, 0, 0, 0, 0, 0, t1605, t1607, t1595, t1589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1763, t1759, -t1768, t1731, 0, 0, 0, 0, 0, 0, t1689, t1697, t1683, t1653, 0, 0, 0, 0, 0, 0, t1638, t1649, t1630, t1604, 0, 0, 0, 0, 0, 0, t1610, t1616, t1598, t1592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1758, t1764, -t1802, t1730, 0, 0, 0, 0, 0, 0, -t1706, -t1708, -t1715, t1711, 0, 0, 0, 0, 0, 0, -t1678, -t1680, -t1684, t1671, 0, 0, 0, 0, 0, 0, -t1642, -t1644, -t1658, t1639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1751, t1753, -t1757, -t1738, 0, 0, 0, 0, 0, 0, t1688, t1696, t1682, t1652, 0, 0, 0, 0, 0, 0, t1637, t1648, t1629, t1603, 0, 0, 0, 0, 0, 0, t1609, t1615, t1597, t1591; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1725, t1717, t1707, t1677, 0, 0, 0, 0, 0, 0, t1665, t1674, t1655, t1618, 0, 0, 0, 0, 0, 0, t1621, t1628, t1612, t1594; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1716, t1732, t1709, t1676, 0, 0, 0, 0, 0, 0, t1664, t1672, t1654, t1617, 0, 0, 0, 0, 0, 0, t1620, t1627, t1611, t1593; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1706, t1708, t1715, -t1711, 0, 0, 0, 0, 0, 0, t1678, t1680, t1684, -t1671, 0, 0, 0, 0, 0, 0, t1642, t1644, t1658, -t1639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1695, t1691, t1679, t1632, 0, 0, 0, 0, 0, 0, t1641, t1651, t1623, t1600; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1690, t1713, t1681, t1631, 0, 0, 0, 0, 0, 0, t1640, t1650, t1622, t1599; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1678, t1680, t1684, -t1671, 0, 0, 0, 0, 0, 0, t1642, t1644, t1658, -t1639; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1668, t1667, t1643, t1614; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1666, t1685, t1645, t1613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1642, t1644, t1658, -t1639;];
f_new_reg  = t1;
