% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRPR8
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d6,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x29]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 05:25
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRPR8_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRPR8_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRPR8_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRRPR8_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 05:24:54
% EndTime: 2019-03-09 05:25:23
% DurationCPUTime: 16.41s
% Computational Cost: add. (9930->636), mult. (21077->832), div. (0->0), fcn. (22836->8), ass. (0->493)
t784 = qJD(4) + qJD(6);
t448 = sin(qJ(3));
t711 = -t448 / 0.2e1;
t447 = sin(qJ(4));
t701 = -qJ(5) - pkin(8);
t395 = t701 * t447;
t450 = cos(qJ(4));
t396 = t701 * t450;
t444 = sin(pkin(10));
t445 = cos(pkin(10));
t312 = t444 * t395 - t445 * t396;
t378 = -t444 * t447 + t445 * t450;
t246 = -pkin(9) * t378 - t312;
t446 = sin(qJ(6));
t449 = cos(qJ(6));
t380 = t444 * t450 + t445 * t447;
t741 = t445 * t395 + t444 * t396;
t758 = -pkin(9) * t380 + t741;
t790 = t449 * t246 - t446 * t758;
t796 = t711 * t790;
t451 = cos(qJ(3));
t633 = t450 * t451;
t647 = t447 * t451;
t353 = -t444 * t633 - t445 * t647;
t339 = t449 * t353;
t355 = -t444 * t647 + t445 * t633;
t651 = t446 * t355;
t237 = -t339 + t651;
t370 = t449 * t378;
t649 = t446 * t380;
t283 = -t370 + t649;
t521 = t446 * t246 + t449 * t758;
t710 = t448 / 0.2e1;
t434 = -pkin(4) * t450 - pkin(3);
t342 = -pkin(5) * t378 + t434;
t727 = -t342 / 0.2e1;
t427 = pkin(4) * t647;
t452 = -pkin(1) - pkin(7);
t626 = t451 * t452;
t382 = t427 - t626;
t298 = -t353 * pkin(5) + t382;
t734 = -t298 / 0.2e1;
t468 = t237 * t727 + t283 * t734 - t521 * t710;
t795 = t784 * t790;
t794 = t784 * t521;
t341 = t449 * t355;
t330 = -t341 / 0.2e1;
t653 = t446 * t353;
t538 = t330 - t653 / 0.2e1;
t762 = t283 * t451;
t771 = -t762 / 0.2e1 + t538;
t635 = t449 * t380;
t650 = t446 * t378;
t537 = -t635 / 0.2e1 - t650 / 0.2e1;
t352 = t380 * t448;
t338 = t449 * t352;
t645 = t448 * t450;
t648 = t447 * t448;
t354 = -t444 * t648 + t445 * t645;
t652 = t446 * t354;
t520 = t338 + t652;
t485 = t520 * t448;
t765 = t237 * t451;
t783 = -t485 / 0.2e1 - t765 / 0.2e1;
t769 = t537 + t783;
t785 = t769 * qJD(1);
t793 = qJD(3) * t771 + t785;
t770 = t762 / 0.2e1 + t538;
t792 = qJD(3) * t770 - t785;
t768 = t537 - t783;
t789 = qJD(2) * t768;
t788 = qJD(2) * t771;
t594 = qJD(5) * t237;
t782 = qJD(2) * t769 + t594;
t534 = pkin(3) * t448 - pkin(8) * t451;
t394 = qJ(2) + t534;
t376 = t450 * t394;
t646 = t447 * t452;
t544 = pkin(4) - t646;
t575 = qJ(5) * t633;
t281 = t448 * t544 + t376 - t575;
t632 = t450 * t452;
t576 = t448 * t632;
t333 = t447 * t394 + t576;
t302 = -qJ(5) * t647 + t333;
t665 = t445 * t302;
t165 = t444 * t281 + t665;
t435 = t448 * t452;
t332 = t435 * t447 - t376;
t301 = -t332 - t575;
t174 = -t301 * t444 - t665;
t777 = t165 + t174;
t742 = t341 + t653;
t751 = t237 ^ 2 - t742 ^ 2;
t776 = qJD(1) * t751;
t531 = t339 / 0.2e1 - t651 / 0.2e1;
t518 = t635 + t650;
t745 = t451 * t518;
t753 = t745 / 0.2e1 + t531;
t775 = qJD(2) * t753;
t752 = t283 ^ 2 - t518 ^ 2;
t774 = qJD(3) * t752;
t773 = qJD(3) * t753;
t754 = -t745 / 0.2e1 + t531;
t772 = qJD(3) * t754;
t630 = t451 * t742;
t767 = t630 / 0.2e1;
t732 = -t741 / 0.2e1;
t766 = t237 * t283;
t586 = t448 * qJD(1);
t764 = t237 * t586;
t607 = qJD(1) * t742;
t763 = t237 * t607;
t601 = qJD(3) * t518;
t761 = t283 * t601;
t760 = t298 * t237;
t759 = t298 * t742;
t212 = t742 * t586;
t619 = t784 * t283;
t508 = t601 + t607;
t757 = qJD(4) * t237;
t756 = qJD(5) * t283;
t755 = qJD(6) * t237;
t749 = -qJD(1) * t237 - qJD(3) * t283;
t747 = 0.2e1 * t447;
t746 = t742 * t518;
t323 = -t652 / 0.2e1;
t744 = t323 - t338 / 0.2e1;
t340 = t449 * t354;
t654 = t446 * t352;
t743 = -t340 + t654;
t728 = t340 / 0.2e1;
t740 = -t654 / 0.2e1 + t728;
t739 = qJD(5) * t518;
t440 = t447 ^ 2;
t442 = t450 ^ 2;
t414 = t442 - t440;
t542 = t633 * t747;
t480 = qJD(1) * t542 - qJD(3) * t414;
t506 = t784 * t518;
t738 = t742 / 0.2e1;
t737 = -t283 / 0.2e1;
t736 = -t518 / 0.2e1;
t735 = t518 / 0.2e1;
t733 = t312 / 0.2e1;
t731 = -t312 / 0.2e1;
t729 = -t340 / 0.2e1;
t553 = t341 / 0.2e1;
t704 = t447 * pkin(4);
t343 = pkin(5) * t380 + t704;
t726 = -t343 / 0.2e1;
t725 = -t352 / 0.2e1;
t724 = t353 / 0.2e1;
t723 = t354 / 0.2e1;
t722 = t355 / 0.2e1;
t721 = -t378 / 0.2e1;
t720 = t378 / 0.2e1;
t719 = -t380 / 0.2e1;
t718 = t380 / 0.2e1;
t443 = t451 ^ 2;
t433 = t443 * t450;
t717 = -t433 / 0.2e1;
t716 = t433 / 0.2e1;
t715 = t444 / 0.2e1;
t714 = -t445 / 0.2e1;
t713 = -t447 / 0.2e1;
t709 = -t451 / 0.2e1;
t708 = pkin(4) * t444;
t707 = pkin(9) * t353;
t705 = t355 * pkin(9);
t703 = t448 * pkin(8);
t702 = t451 * pkin(3);
t28 = t766 / 0.2e1 + t742 * t736 - t237 * t737 - t746 / 0.2e1;
t39 = -t746 + t766;
t700 = t28 * qJD(4) + t39 * qJD(6);
t60 = -t237 * t735 - t283 * t738;
t61 = t237 * t736 + t737 * t742;
t699 = t60 * qJD(4) + t61 * qJD(6);
t698 = pkin(4) * qJD(4);
t579 = pkin(4) * t633;
t504 = pkin(5) * t355 + t579;
t118 = t174 - t707;
t641 = t449 * t118;
t293 = t444 * t302;
t175 = t445 * t301 - t293;
t119 = t175 - t705;
t659 = t446 * t119;
t51 = t641 - t659;
t25 = t237 * t504 + t51 * t448 + t759;
t697 = qJD(1) * t25;
t640 = t449 * t119;
t660 = t446 * t118;
t52 = t640 + t660;
t26 = t448 * t52 - t504 * t742 + t760;
t696 = qJD(1) * t26;
t110 = t165 + t707;
t662 = t446 * t110;
t164 = t445 * t281 - t293;
t473 = t448 * pkin(5) + t164 - t705;
t84 = t449 * t473;
t43 = -t84 + t662;
t33 = -t43 * t448 + t760;
t695 = qJD(1) * t33;
t464 = t446 * t473;
t643 = t449 * t110;
t44 = t464 + t643;
t34 = -t44 * t448 + t759;
t694 = qJD(1) * t34;
t45 = (t520 / 0.2e1 + t744) * t451;
t693 = qJD(1) * t45;
t88 = (t743 / 0.2e1 + t740) * t451;
t692 = qJD(1) * t88;
t93 = -t765 + t485;
t691 = qJD(1) * t93;
t681 = t743 * t448;
t94 = t630 + t681;
t690 = qJD(1) * t94;
t689 = t164 * t354;
t688 = t164 * t378;
t687 = t165 * t352;
t686 = t165 * t380;
t666 = t380 * t444;
t667 = t378 * t445;
t497 = t666 / 0.2e1 + t667 / 0.2e1;
t549 = -t175 / 0.2e1 + t164 / 0.2e1;
t550 = t165 / 0.2e1 + t174 / 0.2e1;
t17 = t549 * t354 + t550 * t352 + (t716 + t497) * pkin(4);
t685 = t17 * qJD(1);
t398 = t702 + t703;
t392 = t450 * t398;
t299 = qJ(5) * t645 + t451 * t544 + t392;
t391 = t447 * t398;
t404 = t450 * t626;
t305 = qJ(5) * t648 + t391 + t404;
t168 = t445 * t299 - t305 * t444;
t169 = t444 * t299 + t445 * t305;
t23 = -t168 * t355 + t169 * t353 + t687 + t689;
t684 = t23 * qJD(1);
t24 = -t777 * t355 + (-t164 + t175) * t353;
t682 = t24 * qJD(1);
t680 = t283 * t448;
t678 = t518 * t448;
t580 = pkin(4) * t648;
t379 = t435 - t580;
t29 = t164 * t168 + t165 * t169 + t379 * t382;
t677 = t29 * qJD(1);
t30 = t164 * t174 + t165 * t175 + t382 * t579;
t676 = t30 * qJD(1);
t675 = t741 * t354;
t674 = t312 * t352;
t673 = t352 * t444;
t672 = t353 * t741;
t671 = t353 * t445;
t670 = t354 * t445;
t669 = t355 * t312;
t668 = t355 * t444;
t101 = pkin(5) * t451 + pkin(9) * t354 + t168;
t663 = t446 * t101;
t115 = pkin(9) * t352 + t169;
t661 = t446 * t115;
t644 = t449 * t101;
t642 = t449 * t115;
t441 = t448 ^ 2;
t634 = t450 * t441;
t55 = -t237 * t743 + t520 * t742;
t625 = t55 * qJD(1);
t56 = t686 + t688;
t624 = t56 * qJD(1);
t469 = t767 - t681 / 0.2e1;
t530 = t370 / 0.2e1 - t649 / 0.2e1;
t68 = t469 + t530;
t623 = t68 * qJD(1);
t461 = t743 * t711 + t767;
t69 = t461 + t530;
t622 = t69 * qJD(1);
t618 = t654 / 0.2e1 + t729;
t413 = t441 - t443;
t617 = qJD(1) * qJ(2);
t559 = t518 * t710;
t124 = t559 + t744;
t616 = qJD(1) * t124;
t324 = t652 / 0.2e1;
t581 = t324 + t338 / 0.2e1;
t125 = t559 + t581;
t615 = qJD(1) * t125;
t126 = t678 / 0.2e1 + t581;
t614 = qJD(1) * t126;
t129 = t680 / 0.2e1 + t618;
t613 = qJD(1) * t129;
t558 = t283 * t710;
t137 = -t558 + t618;
t612 = qJD(1) * t137;
t138 = -t558 + t740;
t611 = qJD(1) * t138;
t159 = t352 * t722 + t353 * t723;
t610 = qJD(1) * t159;
t188 = t353 * t380 - t355 * t378;
t609 = qJD(1) * t188;
t234 = t553 + t330;
t608 = qJD(1) * t234;
t279 = -t332 * t448 - t443 * t646;
t606 = qJD(1) * t279;
t280 = -t333 * t448 - t443 * t632;
t605 = qJD(1) * t280;
t389 = t413 * t447;
t604 = qJD(1) * t389;
t390 = -t433 + t634;
t603 = qJD(1) * t390;
t602 = qJD(2) * t448;
t600 = qJD(3) * t342;
t599 = qJD(3) * t450;
t598 = qJD(4) * t742;
t597 = qJD(4) * t447;
t596 = qJD(4) * t450;
t595 = qJD(5) * t742;
t592 = qJD(6) * t342;
t574 = t447 * t626;
t191 = -t332 * t451 + (t392 + t574) * t448;
t591 = t191 * qJD(1);
t192 = t333 * t451 + (-t404 + t391) * t448;
t590 = t192 * qJD(1);
t578 = 0.1e1 / 0.2e1 + t441 / 0.2e1;
t364 = (-t443 / 0.2e1 - t578) * t447;
t589 = t364 * qJD(1);
t365 = t450 * t578 + t716;
t588 = t365 * qJD(1);
t587 = t413 * qJD(1);
t585 = t448 * qJD(3);
t584 = t451 * qJD(1);
t583 = t451 * qJD(3);
t582 = t451 * qJD(4);
t577 = t704 / 0.2e1;
t573 = pkin(4) * t445 + pkin(5);
t572 = qJ(2) * t586;
t571 = qJ(2) * t584;
t570 = t283 * t586;
t569 = t518 * t586;
t568 = t447 * t599;
t567 = t447 * t583;
t566 = t450 * t583;
t565 = t448 * t597;
t564 = t447 * t582;
t563 = t448 * t596;
t562 = t450 * t582;
t561 = t447 * t596;
t424 = t448 * t583;
t560 = t448 * t584;
t557 = -t659 / 0.2e1;
t555 = -t640 / 0.2e1;
t552 = -t633 / 0.2e1;
t551 = t118 / 0.2e1 + t110 / 0.2e1;
t546 = t732 + t741 / 0.2e1;
t541 = t579 / 0.2e1;
t540 = qJD(4) + t586;
t539 = -qJD(6) - t586;
t536 = t586 + qJD(4) / 0.2e1;
t368 = t446 * t708 - t449 * t573;
t535 = t84 / 0.2e1 + t368 * t711;
t533 = qJD(3) * t542;
t297 = -pkin(5) * t352 + t379;
t9 = (t644 - t661) * t448 - t43 * t451 + t297 * t237 - t298 * t520;
t529 = t9 * qJD(1) + t45 * qJD(2);
t479 = (t673 / 0.2e1 + t670 / 0.2e1) * pkin(4);
t3 = t353 * t546 + t378 * t549 + t380 * t550 + t479;
t528 = t3 * qJD(1);
t10 = (t642 + t663) * t448 + t44 * t451 - t297 * t742 - t298 * t743;
t527 = -t10 * qJD(1) - t88 * qJD(2);
t526 = qJD(3) * t28 + t776;
t525 = qJD(1) * t28 + t774;
t524 = qJD(3) * t39 + t776;
t523 = qJD(1) * t39 + t774;
t455 = t164 * t724 + t165 * t722 + t168 * t725 + t169 * t723 + t379 * t709 + t382 * t710;
t498 = t312 * t718 + t720 * t741;
t11 = -t455 + t498;
t143 = -t352 * t353 + t354 * t355 - t448 * t451;
t517 = -t11 * qJD(1) + t143 * qJD(2);
t53 = -t164 * t355 + t165 * t353;
t516 = qJD(1) * t53 + qJD(2) * t159;
t515 = t540 * t451;
t514 = t435 / 0.2e1 - t580 / 0.2e1;
t180 = 0.2e1 * t553 + t653;
t512 = qJD(1) * t180 + t601;
t187 = t353 * t378 + t355 * t380;
t250 = t353 ^ 2 + t355 ^ 2;
t511 = qJD(1) * t250 + qJD(3) * t187;
t306 = t378 ^ 2 + t380 ^ 2;
t510 = qJD(1) * t187 + qJD(3) * t306;
t496 = t353 * t715 + t355 * t714;
t194 = (t552 + t496) * pkin(4);
t495 = t378 * t715 + t380 * t714;
t243 = (t713 + t495) * pkin(4);
t509 = qJD(1) * t194 + qJD(3) * t243;
t505 = -t755 - t757;
t503 = t703 / 0.2e1 + t702 / 0.2e1;
t483 = t503 * t447;
t303 = t391 / 0.2e1 + t483;
t502 = pkin(3) * t599 - qJD(1) * t303;
t484 = t503 * t450;
t304 = -t392 / 0.2e1 - t484;
t501 = pkin(3) * qJD(3) * t447 - qJD(1) * t304;
t500 = t169 * t715 + t168 * t445 / 0.2e1;
t499 = t352 * t719 + t354 * t721;
t494 = -t663 / 0.2e1 - t642 / 0.2e1;
t493 = -t661 / 0.2e1 + t644 / 0.2e1;
t492 = -qJD(3) * t61 + t763;
t491 = qJD(3) * t60 - t763;
t490 = -qJD(1) * t61 + t761;
t489 = qJD(1) * t60 - t761;
t488 = t450 * t515;
t372 = (t440 / 0.2e1 - t442 / 0.2e1) * t451;
t487 = -qJD(1) * t372 + t568;
t486 = qJD(3) * t125 - qJD(6) * t234 + t212;
t482 = qJD(1) * t433 * t447 + qJD(3) * t372;
t388 = t414 * t443;
t481 = qJD(1) * t388 + t533;
t478 = (t668 / 0.2e1 + t671 / 0.2e1) * pkin(4);
t458 = t164 * t733 + t175 * t731 + t732 * t777;
t1 = (t382 * t713 + t434 * t552 + t500) * pkin(4) + t458;
t36 = t427 / 0.2e1 + t546 * t354 + t478;
t76 = t434 * t704;
t477 = -t1 * qJD(1) - t36 * qJD(2) + t76 * qJD(3);
t454 = t237 * t726 + t504 * t737 + t518 * t734 + t727 * t742 + t796;
t466 = t368 * t709 + t493;
t5 = t454 + t466;
t77 = t283 * t343 + t342 * t518;
t476 = -t5 * qJD(1) + t77 * qJD(3) - t775;
t453 = t504 * t736 + t726 * t742 - t468;
t369 = t446 * t573 + t449 * t708;
t465 = t369 * t709 + t494;
t6 = t453 + t465;
t78 = -t283 * t342 + t343 * t518;
t475 = -t6 * qJD(1) + t78 * qJD(3) - t788;
t142 = t312 * t378 - t380 * t741;
t166 = t710 + t499;
t457 = t164 * t718 + t165 * t721 + t353 * t731 + t722 * t741;
t31 = t457 + t514;
t474 = -qJD(1) * t31 - qJD(2) * t166 + qJD(3) * t142;
t467 = t298 * t735 + t342 * t738 - t796;
t13 = -t467 + t493;
t472 = qJD(1) * t13 - t518 * t600 + t775;
t14 = -t468 + t494;
t471 = qJD(1) * t14 + t283 * t600 + t788;
t470 = qJD(3) * t124 + qJD(6) * t180 + t212 + t598;
t456 = t369 * t710 + t464 / 0.2e1;
t19 = t449 * t551 + t456 + t557;
t233 = t729 + t728;
t463 = qJD(1) * t19 - qJD(2) * t233 + qJD(4) * t369;
t20 = -t446 * t551 + t535 + t555;
t231 = t324 + t323;
t462 = qJD(1) * t20 - qJD(2) * t231 - qJD(4) * t368;
t432 = -t584 / 0.2e1;
t431 = t584 / 0.2e1;
t430 = t583 / 0.2e1;
t423 = t450 * t586;
t422 = t447 * t585;
t421 = t447 * t586;
t377 = t536 * t451;
t371 = t372 * qJD(4);
t367 = -t634 / 0.2e1 + t717 + t450 / 0.2e1;
t366 = t713 + (t441 + t443) * t447 / 0.2e1;
t350 = (qJD(6) / 0.2e1 + t536) * t451;
t345 = t369 * qJD(6);
t344 = t368 * qJD(6);
t273 = -t574 + t392 / 0.2e1 - t484;
t272 = -t404 - t391 / 0.2e1 + t483;
t242 = pkin(4) * t495 + t577;
t193 = pkin(4) * t496 + t541;
t179 = 0.2e1 * t729 + t654;
t177 = 0.2e1 * t324 + t338;
t176 = t187 * qJD(5);
t167 = t710 - t499;
t154 = t159 * qJD(5);
t139 = -t678 / 0.2e1 + t581;
t135 = -t680 / 0.2e1 + t618;
t85 = t88 * qJD(3);
t75 = -t461 + t530;
t72 = -t469 + t530;
t50 = -qJD(3) * t138 + t764;
t42 = t45 * qJD(3);
t37 = -t674 / 0.2e1 + t741 * t723 - t675 / 0.2e1 - t312 * t725 - t427 / 0.2e1 + t478;
t35 = qJD(3) * t137 - t237 * t540 - t755;
t32 = -t457 + t514;
t22 = -t643 / 0.2e1 + t557 + t641 / 0.2e1 - t456;
t21 = t662 / 0.2e1 + t555 - t660 / 0.2e1 - t535;
t18 = t175 * t723 - t687 / 0.2e1 + t174 * t725 - t689 / 0.2e1 + (t717 + t497) * pkin(4);
t16 = t467 + t493;
t15 = t468 + t494;
t12 = t455 + t498;
t8 = -t453 + t465;
t7 = -t454 + t466;
t4 = t741 * t724 - t669 / 0.2e1 + t175 * t720 - t686 / 0.2e1 + t355 * t733 - t672 / 0.2e1 + t174 * t719 - t688 / 0.2e1 + t479;
t2 = pkin(4) * t500 + t382 * t577 + t434 * t541 - t458;
t27 = [0, 0, 0, 0, qJD(2), qJ(2) * qJD(2), -t424, t413 * qJD(3), 0, 0, 0, qJ(2) * t583 + t602, -qJ(2) * t585 + qJD(2) * t451, -t424 * t442 - t443 * t561, -qJD(4) * t388 + t448 * t533, -qJD(3) * t390 - t448 * t564, qJD(3) * t389 - t448 * t562, t424, qJD(3) * t191 + qJD(4) * t280 + t450 * t602, -qJD(3) * t192 - qJD(4) * t279 - t447 * t602, qJD(2) * t188 + qJD(3) * t23 + qJD(4) * t24 + qJD(5) * t250, qJD(2) * t56 + qJD(3) * t29 + qJD(4) * t30 + qJD(5) * t53 (qJD(3) * t743 + t505) * t742, qJD(3) * t55 + t751 * t784, qJD(3) * t94 + t448 * t505, qJD(3) * t93 + (-qJD(6) * t742 - t598) * t448, t424, qJD(3) * t9 + qJD(4) * t25 + qJD(6) * t34 + (-qJD(2) * t283 - t595) * t448, -qJD(3) * t10 - qJD(4) * t26 - qJD(6) * t33 + (-qJD(2) * t518 + t594) * t448; 0, 0, 0, 0, qJD(1), t617, 0, 0, 0, 0, 0, t586, t584, 0, 0, 0, 0, 0, qJD(4) * t367 + t423, qJD(4) * t366 - t421, t609, t624 + (-t378 * t352 + t380 * t354) * qJD(2) + t12 * qJD(3) + t18 * qJD(4) + t154, 0, 0, 0, 0, 0, qJD(4) * t72 + qJD(6) * t75 + t42 - t570, t768 * t784 - t569 - t85; 0, 0, 0, 0, 0, 0, -t560, t587, -t585, -t583, 0, -t452 * t585 + t571, -t452 * t583 - t572, -t371 + (-t442 * t584 - t568) * t448, t448 * t480 - 0.2e1 * t451 * t561, t567 - t603, t566 + t604, t377, t591 + (t447 * t534 - t576) * qJD(3) + t273 * qJD(4), -t590 + (-pkin(8) * t633 + (pkin(3) * t450 + t646) * t448) * qJD(3) + t272 * qJD(4), t684 + (-t168 * t380 + t169 * t378 + t674 + t675) * qJD(3) + t4 * qJD(4) + t176, t677 + t12 * qJD(2) + (t168 * t741 + t169 * t312 + t379 * t434) * qJD(3) + t2 * qJD(4) + t32 * qJD(5), t508 * t743 + t699, t625 + (-t283 * t743 + t518 * t520) * qJD(3) + t700, qJD(4) * t137 + qJD(6) * t135 + t518 * t583 + t690, -qJD(4) * t124 + qJD(6) * t139 - t283 * t583 + t691, t350 (t283 * t297 - t342 * t520 + t451 * t521) * qJD(3) + t7 * qJD(4) - t125 * qJD(5) + t16 * qJD(6) + t529 (t297 * t518 + t342 * t743 + t451 * t790) * qJD(3) + t8 * qJD(4) - t138 * qJD(5) + t15 * qJD(6) + t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t482, -t481, -t447 * t515, -t488, t430, qJD(2) * t367 + qJD(3) * t273 - qJD(4) * t333 + t605, qJD(2) * t366 + qJD(3) * t272 + qJD(4) * t332 - t606, t682 + t4 * qJD(3) + (-t668 - t671) * t698, t676 + t18 * qJD(2) + t2 * qJD(3) + t193 * qJD(5) + (t174 * t445 + t175 * t444) * t698, t491, t526, t35, -t470, t430, qJD(2) * t72 + qJD(3) * t7 + qJD(4) * t51 + qJD(6) * t22 + t697, qJD(3) * t8 - qJD(4) * t52 + qJD(6) * t21 - t696 + t789; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t511, qJD(3) * t32 + qJD(4) * t193 + t516, 0, 0, 0, 0, 0, -t486, t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t492, t524, qJD(3) * t135 + t237 * t539 - t757, qJD(3) * t139 - qJD(4) * t180 + t539 * t742, t430, qJD(2) * t75 + qJD(3) * t16 + qJD(4) * t22 + qJD(5) * t234 - qJD(6) * t44 + t694, qJD(3) * t15 + qJD(4) * t21 + qJD(6) * t43 - t695 + t789; 0, 0, 0, 0, -qJD(1), -t617, 0, 0, 0, 0, 0, -t586, -t584, 0, 0, 0, 0, 0, -qJD(4) * t365 - t423, -qJD(4) * t364 + t421, -t609, -qJD(3) * t11 - qJD(4) * t17 + t154 - t624, 0, 0, 0, 0, 0, -qJD(4) * t68 - qJD(6) * t69 + t42 + t570, -t769 * t784 + t569 - t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t143, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t585, -t583, 0, 0, 0, 0, 0, -t450 * t585 - t564, t422 - t562, -qJD(3) * t188 (t434 * t448 + t669 + t672) * qJD(3) + t37 * qJD(4) + t167 * qJD(5) + t517, 0, 0, 0, 0, 0, t283 * t585 + t754 * t784 + t693, t518 * t585 + t770 * t784 - t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t563 - t567 - t588, t565 - t566 - t589, 0, -t685 + t37 * qJD(3) + (-t670 - t673) * t698, 0, 0, 0, 0, 0, qJD(4) * t743 + t179 * qJD(6) - t623 + t772, qJD(4) * t520 + t177 * qJD(6) + t792; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t167 + t610, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179 * qJD(4) + qJD(6) * t743 - t622 + t772, t177 * qJD(4) + qJD(6) * t520 + t792; 0, 0, 0, 0, 0, 0, t560, -t587, 0, 0, 0, -t571, t572, t442 * t560 - t371, -t488 * t747, t563 + t603, -t565 - t604, -t377, qJD(4) * t304 - t591, qJD(4) * t303 + t590, -qJD(4) * t3 + t176 - t684, qJD(2) * t11 - qJD(4) * t1 - qJD(5) * t31 - t677, -t607 * t743 + t699, -t625 + t700, qJD(4) * t138 - qJD(6) * t129 - t690, -qJD(4) * t125 - qJD(6) * t126 - t691, -t350, -qJD(4) * t5 - qJD(5) * t124 - qJD(6) * t13 - t529, -qJD(4) * t6 - qJD(5) * t137 - qJD(6) * t14 - t527; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t36 - qJD(5) * t166 - t517, 0, 0, 0, 0, 0, -t753 * t784 - t693, -t771 * t784 + t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t561, t414 * qJD(4), 0, 0, 0, -pkin(3) * t597, -pkin(3) * t596, qJD(5) * t306, qJD(4) * t76 + qJD(5) * t142, -t619 * t518, t784 * t752, 0, 0, 0, qJD(4) * t77 + t518 * t592, qJD(4) * t78 - t283 * t592; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t487, -t480, t423 + t596, -t421 - t597, t432, -pkin(8) * t596 - t501, pkin(8) * t597 - t502 (-t666 - t667) * t698 - t528, t242 * qJD(5) + (-t312 * t445 + t444 * t741) * t698 + t477, t489, t525, t611 - t619, -t506 - t615, t432, t476 + t795, t475 - t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t510, qJD(4) * t242 + t474, 0, 0, 0, 0, 0, -t616, -t612; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t490, t523, -t613 - t619, -t506 - t614, t432, -t472 + t795, -t471 - t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t482, t481 (t447 * t584 - t599) * t448, t450 * t560 + t422, t430, qJD(2) * t365 - qJD(3) * t304 - t605, qJD(2) * t364 - qJD(3) * t303 + t606, qJD(3) * t3 - t682, qJD(2) * t17 + qJD(3) * t1 + qJD(5) * t194 - t676, -t491, -t526, t50, t486, t430, qJD(2) * t68 + qJD(3) * t5 - qJD(6) * t19 - t595 - t697, qJD(3) * t6 - qJD(6) * t20 + t696 + t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t588, t589, 0, qJD(3) * t36 + t685, 0, 0, 0, 0, 0, qJD(6) * t233 + t623 + t773, qJD(6) * t231 + t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t487, t480, -t423, t421, t431, t501, t502, t528, qJD(5) * t243 - t477, -t489, -t525, -t611, t615, t431, -t476 - t739, -t475 + t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t345, t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t509, 0, 0, 0, 0, 0, -t508, -t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t608, 0, -t345 - t463, t344 - t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t511, qJD(3) * t31 - qJD(4) * t194 - t516, 0, 0, 0, 0, 0, t470, t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t166 - t610, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t510, -qJD(4) * t243 - t474, 0, 0, 0, 0, 0, t506 + t616, t612 - t619; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t509, 0, 0, 0, 0, 0, t508, t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t512, t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t492, -t524, qJD(3) * t129 + t764, qJD(3) * t126 + qJD(4) * t234 + t212, t430, qJD(2) * t69 + qJD(3) * t13 + qJD(4) * t19 - qJD(5) * t180 - t694, qJD(3) * t14 + qJD(4) * t20 + t695 + t782; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t233 + t622 + t773, -qJD(4) * t231 + t793; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t490, -t523, t613, t614, t431, t472 - t739, t471 + t756; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t608, 0, t463, t462; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t512, -t749; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t27;
