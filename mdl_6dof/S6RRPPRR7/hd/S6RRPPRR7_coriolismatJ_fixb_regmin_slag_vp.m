% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:21:03
% EndTime: 2019-03-09 09:21:28
% DurationCPUTime: 12.45s
% Computational Cost: add. (6337->737), mult. (15486->994), div. (0->0), fcn. (15833->8), ass. (0->563)
t402 = cos(qJ(6));
t396 = sin(pkin(6));
t401 = sin(qJ(2));
t654 = t396 * t401;
t545 = t402 * t654;
t403 = cos(qJ(5));
t397 = cos(pkin(6));
t400 = sin(qJ(5));
t652 = t397 * t400;
t404 = cos(qJ(2));
t653 = t396 * t404;
t293 = t403 * t653 + t652;
t399 = sin(qJ(6));
t664 = t293 * t399;
t207 = -t545 - t664;
t643 = t400 * t207;
t182 = -t643 / 0.2e1;
t292 = -t397 * t403 + t400 * t653;
t625 = t403 * t292;
t501 = t625 / 0.2e1;
t240 = t399 * t501;
t517 = t654 / 0.2e1;
t475 = t402 * t517;
t318 = t400 * t475;
t722 = t182 + t318 + t240;
t183 = t643 / 0.2e1;
t502 = -t625 / 0.2e1;
t478 = t399 * t502;
t721 = t183 + t478 + t318;
t547 = t399 * t654;
t663 = t293 * t402;
t209 = t547 - t663;
t675 = t209 * t403;
t188 = t675 / 0.2e1;
t638 = t400 * t402;
t506 = t638 / 0.2e1;
t245 = t292 * t506;
t720 = t188 + t245;
t639 = t400 * t293;
t508 = -t639 / 0.2e1;
t719 = t399 * t508 + t478;
t645 = t399 * t400;
t514 = t645 / 0.2e1;
t718 = t293 * t514 + t240;
t640 = t400 * t292;
t509 = t640 / 0.2e1;
t242 = t399 * t509;
t510 = -t640 / 0.2e1;
t473 = t399 * t510;
t717 = t242 + t473;
t382 = t397 * qJD(3);
t586 = qJD(4) * t396;
t532 = t404 * t586;
t435 = t532 - t382;
t390 = t399 ^ 2;
t393 = t402 ^ 2;
t357 = t393 - t390;
t716 = qJD(5) * t357;
t702 = -t403 / 0.2e1;
t440 = t293 * t702 + t509;
t715 = t440 * qJD(5);
t559 = t403 * qJD(2);
t368 = t400 * t559;
t495 = t440 * qJD(1) - t368;
t564 = t292 * qJD(1);
t436 = qJD(2) * t440 + t293 * t564;
t714 = t292 ^ 2;
t405 = -pkin(2) - pkin(3);
t713 = -t209 / 0.2e1;
t623 = t404 * t399;
t629 = t402 * t403;
t262 = (t401 * t629 + t623) * t396;
t712 = -t262 / 0.2e1;
t711 = -t292 / 0.2e1;
t710 = t292 / 0.2e1;
t709 = -t293 / 0.2e1;
t388 = -pkin(9) + t405;
t708 = -t388 / 0.2e1;
t707 = -t399 / 0.2e1;
t706 = t399 / 0.2e1;
t705 = -t400 / 0.2e1;
t704 = t400 / 0.2e1;
t703 = t402 / 0.2e1;
t701 = t403 / 0.2e1;
t700 = pkin(1) * t401;
t699 = t292 * pkin(10);
t698 = t400 * pkin(5);
t697 = t403 * pkin(10);
t398 = qJ(3) + pkin(4);
t377 = t397 * t404 * pkin(1);
t297 = pkin(8) * t654 - t377;
t355 = qJ(4) * t654;
t255 = t297 - t355;
t167 = t388 * t397 + t255;
t356 = qJ(3) * t654;
t605 = -pkin(2) * t653 - t356;
t276 = -t396 * pkin(1) + t605;
t216 = pkin(3) * t653 - t276;
t467 = pkin(4) * t401 + pkin(9) * t404;
t408 = t396 * t467 + t216;
t72 = t167 * t400 - t403 * t408;
t65 = -pkin(5) * t654 + t72;
t696 = t65 - t72;
t695 = t399 * t72;
t694 = t402 * t72;
t298 = pkin(8) * t653 + t397 * t700;
t257 = -qJ(4) * t653 + t298;
t383 = t397 * qJ(3);
t213 = -t257 - t383;
t194 = pkin(4) * t397 - t213;
t466 = -pkin(5) * t292 + pkin(10) * t293;
t406 = t194 + t466;
t627 = t403 * t167;
t66 = t627 + t400 * t216 + (t401 * pkin(10) + t400 * t467) * t396;
t25 = t399 * t66 - t402 * t406;
t175 = -pkin(5) * t293 - t699;
t635 = t402 * t175;
t73 = t400 * t408 + t627;
t5 = t73 * t207 + t25 * t293 + (t399 * t696 - t635) * t292;
t693 = t5 * qJD(1);
t26 = t399 * t406 + t402 * t66;
t649 = t399 * t175;
t6 = t73 * t209 + t26 * t293 + (t402 * t696 + t649) * t292;
t692 = t6 * qJD(1);
t159 = (t388 * t401 + t398 * t404) * t396;
t628 = t403 * t159;
t641 = t400 * t257;
t100 = -pkin(5) * t653 - t628 + t641;
t344 = t402 * t653;
t544 = t403 * t654;
t490 = t399 * t544;
t261 = -t344 + t490;
t341 = t697 - t698;
t139 = t355 + t377 + (-pkin(8) - t341) * t654;
t636 = t402 * t139;
t153 = t400 * t159;
t230 = t403 * t257;
t609 = t230 + t153;
t101 = pkin(10) * t653 + t609;
t651 = t399 * t101;
t39 = t636 - t651;
t546 = t400 * t654;
t7 = t100 * t207 - t25 * t546 + t261 * t65 - t292 * t39;
t691 = t7 * qJD(1);
t637 = t402 * t101;
t650 = t399 * t139;
t40 = t637 + t650;
t8 = t100 * t209 - t26 * t546 + t262 * t65 + t292 * t40;
t690 = t8 * qJD(1);
t13 = -t207 * t65 - t25 * t292;
t689 = qJD(1) * t13;
t14 = t209 * t65 + t26 * t292;
t688 = qJD(1) * t14;
t624 = t404 * qJ(3);
t256 = (t405 * t401 + t624) * t396;
t69 = -t216 * t653 + t255 * t397 - t256 * t654;
t687 = qJD(1) * t69;
t192 = t216 * t654;
t70 = -t256 * t653 + t257 * t397 + t192;
t686 = qJD(1) * t70;
t78 = -t207 * t293 - t399 * t714;
t685 = qJD(1) * t78;
t79 = -t209 * t293 - t402 * t714;
t684 = qJD(1) * t79;
t492 = t207 * t546;
t673 = t261 * t292;
t92 = -t492 - t673;
t683 = qJD(1) * t92;
t491 = t209 * t546;
t671 = t262 * t292;
t95 = -t491 - t671;
t682 = qJD(1) * t95;
t681 = t100 * t399;
t680 = t100 * t402;
t19 = t255 * t292 + (-t72 * t404 + (t628 + (t194 - t257) * t400) * t401) * t396;
t679 = t19 * qJD(1);
t20 = -t255 * t293 - t194 * t544 + (t401 * t609 + t73 * t404) * t396;
t678 = t20 * qJD(1);
t677 = t209 * t399;
t676 = t209 * t402;
t465 = pkin(5) * t403 + pkin(10) * t400;
t437 = t465 + t398;
t541 = t388 * t629;
t232 = t399 * t437 + t541;
t674 = t232 * t293;
t672 = t261 * t403;
t670 = t262 * t399;
t669 = t262 * t403;
t201 = t397 * t405 + t255;
t27 = t201 * t257 + t213 * t255 + t216 * t256;
t668 = t27 * qJD(1);
t626 = t403 * t207;
t185 = t626 / 0.2e1;
t433 = t292 * t638 + t188;
t29 = (t185 + t712) * t402 + (t261 / 0.2e1 + t433) * t399;
t667 = t29 * qJD(1);
t666 = t292 * t399;
t665 = t292 * t402;
t662 = t297 * t397;
t661 = t298 * t397;
t30 = -t194 * t292 - t654 * t72;
t660 = t30 * qJD(1);
t31 = -t194 * t293 - t654 * t73;
t659 = t31 * qJD(1);
t38 = -t255 * t653 + (t201 * t404 + (t213 + t257) * t401) * t396;
t658 = t38 * qJD(1);
t387 = t396 ^ 2;
t392 = t401 ^ 2;
t657 = t387 * t392;
t656 = t387 * t404;
t391 = t400 ^ 2;
t655 = t391 * t399;
t381 = t391 * t402;
t648 = t399 * t207;
t647 = t399 * t341;
t646 = t399 * t397;
t644 = t399 * t403;
t642 = t400 * t209;
t634 = t402 * t207;
t633 = t402 * t341;
t632 = t402 * t388;
t394 = t403 ^ 2;
t631 = t402 * t394;
t630 = t402 * t397;
t42 = (t475 - t664 / 0.2e1 - t207 / 0.2e1) * t403 + t717;
t622 = t42 * qJD(1);
t43 = t719 + t722;
t621 = t43 * qJD(1);
t275 = t383 + t298;
t277 = -pkin(2) * t397 + t297;
t296 = (t401 * pkin(2) - t624) * t396;
t50 = -t275 * t297 + t276 * t296 + t277 * t298;
t620 = t50 * qJD(1);
t52 = -t207 * t262 - t209 * t261;
t619 = t52 * qJD(1);
t58 = -t634 - t677;
t59 = t58 * t292;
t618 = t59 * qJD(1);
t62 = ((t277 - t297) * t404 + (-t275 + t298) * t401) * t396;
t617 = t62 * qJD(1);
t504 = -t629 / 0.2e1;
t424 = t209 * t504 + t393 * t510;
t75 = -t670 / 0.2e1 + t424;
t616 = t75 * qJD(1);
t507 = -t638 / 0.2e1;
t244 = t292 * t507;
t607 = t490 / 0.2e1 - t344 / 0.2e1;
t84 = t244 + t188 + t607;
t615 = t84 * qJD(1);
t503 = t629 / 0.2e1;
t472 = t401 * t503;
t419 = (t472 + t623 / 0.2e1) * t396;
t409 = t185 + t419;
t86 = t242 + t409;
t614 = t86 * qJD(1);
t410 = -t626 / 0.2e1 + t419;
t87 = t242 + t410;
t613 = t87 * qJD(1);
t93 = -t492 + t673;
t612 = t93 * qJD(1);
t94 = t491 - t671;
t611 = t94 * qJD(1);
t180 = t642 / 0.2e1;
t518 = -t654 / 0.2e1;
t477 = t400 * t518;
t314 = t399 * t477;
t610 = t180 + t314;
t474 = t403 * t518;
t316 = t399 * t474;
t606 = t316 + t344 / 0.2e1;
t581 = qJD(5) * t403;
t367 = t399 * t581;
t560 = t400 * qJD(6);
t371 = t402 * t560;
t604 = t367 + t371;
t358 = t394 - t391;
t489 = t399 * t546;
t430 = -t489 + t630;
t103 = -t207 * t544 - t292 * t430;
t603 = qJD(1) * t103;
t488 = t400 * t545;
t431 = t488 + t646;
t104 = -t209 * t544 + t292 * t431;
t602 = qJD(1) * t104;
t105 = t201 * t654 - t213 * t653;
t601 = qJD(1) * t105;
t116 = -t662 + (-t276 * t404 - t296 * t401) * t396;
t600 = qJD(1) * t116;
t120 = t213 * t397 - t192;
t599 = qJD(1) * t120;
t221 = t276 * t654;
t125 = t275 * t397 - t221;
t598 = qJD(1) * t125;
t550 = t400 * t657;
t552 = t292 * t653;
t196 = t550 - t552;
t597 = qJD(1) * t196;
t549 = t403 * t657;
t551 = t293 * t653;
t197 = t549 - t551;
t596 = qJD(1) * t197;
t203 = t397 * t293 + t550;
t595 = qJD(1) * t203;
t594 = qJD(1) * t209;
t593 = qJD(1) * t396;
t592 = qJD(2) * t297;
t591 = qJD(2) * t396;
t590 = qJD(2) * t397;
t589 = qJD(3) * t400;
t588 = qJD(3) * t403;
t587 = qJD(3) * t404;
t585 = qJD(5) * t292;
t584 = qJD(5) * t399;
t583 = qJD(5) * t400;
t582 = qJD(5) * t402;
t580 = qJD(6) * t292;
t579 = qJD(6) * t399;
t578 = qJD(6) * t402;
t577 = qJD(6) * t403;
t109 = t314 + (-t663 / 0.2e1 + t713) * t400;
t576 = t109 * qJD(1);
t189 = -t675 / 0.2e1;
t110 = t293 * t504 + t189 + t316;
t575 = t110 * qJD(1);
t115 = t296 * t653 - t221 + t661;
t574 = t115 * qJD(1);
t326 = t391 * t545;
t121 = -t326 - t669;
t573 = t121 * qJD(1);
t123 = t625 + t639;
t126 = t123 * t654;
t572 = t126 * qJD(1);
t325 = t391 * t547;
t164 = -t325 - t672;
t571 = t164 * qJD(1);
t558 = -pkin(2) / 0.2e1 - pkin(3) / 0.2e1;
t191 = (t624 + (t405 / 0.2e1 + t558) * t401) * t396;
t570 = t191 * qJD(1);
t195 = t550 + t552;
t569 = t195 * qJD(1);
t198 = t549 + t551;
t568 = t198 * qJD(1);
t204 = -t292 * t397 + t549;
t567 = t204 * qJD(1);
t217 = t387 * t700 + t661;
t566 = t217 * qJD(1);
t218 = pkin(1) * t656 - t662;
t565 = t218 * qJD(1);
t395 = t404 ^ 2;
t309 = (t392 + t395) * t387;
t563 = t309 * qJD(1);
t310 = (-t392 + t395) * t387;
t562 = t310 * qJD(1);
t561 = t400 * qJD(2);
t557 = 0.1e1 / 0.2e1 + t394 / 0.2e1;
t556 = pkin(5) * t207 / 0.2e1;
t555 = pkin(5) * t713;
t554 = pkin(5) * t712;
t553 = t65 / 0.2e1 - t72 / 0.2e1;
t548 = t401 * t656;
t543 = t388 * t644;
t542 = t400 * t632;
t540 = t65 * t703;
t539 = qJ(3) * t590;
t538 = t209 * t564;
t536 = t401 * t591;
t535 = t402 * t561;
t534 = t387 * t587;
t533 = t401 * t586;
t531 = qJD(5) * t654;
t530 = t399 * t582;
t529 = t400 * t582;
t528 = t401 * t581;
t527 = t399 * t577;
t526 = t402 * t577;
t525 = t404 * t591;
t354 = t401 * t593;
t524 = t404 * t593;
t523 = t396 * t587;
t366 = t399 * t583;
t522 = t399 * t578;
t521 = t400 * t581;
t369 = t402 * t559;
t270 = -t666 / 0.2e1;
t269 = t666 / 0.2e1;
t268 = -t665 / 0.2e1;
t520 = t665 / 0.2e1;
t519 = t209 * t708;
t516 = t653 / 0.2e1;
t515 = t398 * t709;
t513 = -t642 / 0.2e1;
t512 = t261 * t704;
t511 = t262 * t704;
t505 = -t637 / 0.2e1;
t500 = -t153 / 0.2e1 - t230 / 0.2e1;
t365 = t399 * t559;
t423 = t431 * t403;
t77 = -t403 * t488 + t511 + t270 + t423 / 0.2e1;
t499 = qJD(1) * t77 + t365;
t422 = t430 * t403;
t76 = -t403 * t489 + t512 + t520 - t422 / 0.2e1;
t498 = qJD(1) * t76 - t369;
t340 = t388 * t645;
t497 = t340 + t633;
t143 = 0.2e1 * t269;
t496 = -qJD(1) * t143 + t365;
t147 = 0.2e1 * t268;
t494 = -qJD(1) * t147 - t369;
t372 = qJD(1) * t397 + qJD(2);
t493 = -qJD(6) + t564;
t487 = t403 * t525;
t486 = t397 * t523;
t485 = t402 * t366;
t484 = t397 * t354;
t483 = t400 * t354;
t336 = t403 * t354;
t482 = t397 * t524;
t481 = t400 * t524;
t480 = t399 * t535;
t479 = t403 * t524;
t476 = t400 * t517;
t471 = t293 * t506;
t249 = t402 * t501;
t470 = t553 * t399;
t469 = t553 * t402;
t468 = t699 / 0.2e1 - t175 / 0.2e1;
t464 = 0.2e1 * t480;
t463 = t397 / 0.2e1 + t502;
t370 = t399 * t560;
t462 = -t402 * t581 + t370;
t461 = t366 - t526;
t460 = qJD(5) + t354;
t319 = t402 * t477;
t231 = -t402 * t437 + t543;
t415 = t231 * t709 + t497 * t710;
t444 = -pkin(5) * t261 / 0.2e1 - t680 / 0.2e1;
t455 = pkin(10) * t518 + t73 / 0.2e1;
t1 = (-t635 / 0.2e1 + t207 * t708 + t470) * t403 + (-t25 / 0.2e1 + (t292 * t708 + t455) * t399) * t400 + t415 + t444;
t118 = t497 * t403 + (t231 - 0.2e1 * t543) * t400;
t458 = -t1 * qJD(1) + t118 * qJD(2);
t119 = -t232 * t400 + (t542 + t647) * t403;
t2 = t554 - t674 / 0.2e1 + (t100 / 0.2e1 + t341 * t711) * t399 + (t649 / 0.2e1 + t519 + t469) * t403 + (-t26 / 0.2e1 + t455 * t402) * t400;
t457 = -t2 * qJD(1) - t119 * qJD(2);
t158 = -t232 * t403 - t391 * t632;
t441 = -t651 / 0.2e1 + t636 / 0.2e1;
t442 = t232 * t711 + t26 * t701;
t9 = (t519 + t540) * t400 + t441 + t442;
t456 = qJD(1) * t9 - qJD(2) * t158;
t411 = t183 * t388 + t231 * t710 + t25 * t702;
t10 = t505 + (-t139 / 0.2e1 + t65 * t705) * t399 + t411;
t157 = -t231 * t403 - t388 * t655;
t454 = qJD(1) * t10 + qJD(2) * t157;
t285 = (-t391 / 0.2e1 - t557) * t399;
t97 = -t399 * t463 + t183 + t319;
t453 = qJD(1) * t97 + qJD(2) * t285;
t286 = t381 / 0.2e1 + t557 * t402;
t96 = t402 * t463 + t314 + t513;
t452 = qJD(1) * t96 + qJD(2) * t286;
t322 = t358 * t399;
t44 = t718 + t722;
t451 = -qJD(1) * t44 + qJD(2) * t322;
t323 = -t381 + t631;
t313 = t399 * t476;
t41 = t313 + t180 + (t508 - t625) * t402;
t450 = -qJD(1) * t41 - qJD(2) * t323;
t449 = t396 * t372;
t127 = -t293 ^ 2 + t714;
t448 = qJD(1) * t127 - qJD(2) * t123;
t447 = qJD(1) * t123 - qJD(2) * t358;
t446 = t559 - t564;
t327 = t397 ^ 2 + t657;
t283 = qJD(1) * t327 + t590;
t445 = t697 / 0.2e1 - t698 / 0.2e1;
t289 = t403 * t516 + t652 / 0.2e1;
t443 = t289 * qJD(1) + t561 / 0.2e1;
t407 = t194 * t702 + t388 * t476 + t398 * t710;
t32 = t407 - t500;
t439 = -qJD(1) * t32 + t398 * t559;
t34 = t515 + (t388 * t518 - t159 / 0.2e1) * t403 + (-t194 / 0.2e1 + t257 / 0.2e1) * t400;
t438 = -qJD(1) * t34 + t398 * t561;
t434 = t396 * (-t388 * t404 + t398 * t401);
t432 = -t560 / 0.2e1 + t495;
t429 = t341 / 0.2e1 + t445;
t85 = t606 + t720;
t428 = qJD(1) * t85 - t369 * t400;
t427 = -t527 - t529;
t51 = (-t648 + t676) * t400;
t71 = t207 ^ 2 - t209 ^ 2;
t426 = qJD(1) * t71 + qJD(2) * t51 + qJD(5) * t58;
t425 = (-qJD(1) * t293 - t561) * t654;
t15 = -t399 * t468 + t469 + t556;
t205 = t429 * t399;
t421 = pkin(5) * t582 - qJD(1) * t15 - qJD(2) * t205;
t17 = t402 * t468 + t470 + t555;
t206 = t429 * t402;
t420 = pkin(5) * t584 - qJD(1) * t17 + qJD(2) * t206;
t106 = (-t634 / 0.2e1 - t677 / 0.2e1) * t400;
t117 = -t648 / 0.2e1 + t676 / 0.2e1;
t418 = qJD(2) * t106 - qJD(5) * t117 + t207 * t594;
t302 = (t390 / 0.2e1 - t393 / 0.2e1) * t400;
t417 = qJD(1) * t117 + qJD(2) * t302 + t530;
t416 = -qJD(6) * t289 + t436;
t321 = t357 * t391;
t414 = qJD(1) * t51 - qJD(2) * t321 + 0.2e1 * t485;
t413 = qJD(1) * t58 + t464 + t716;
t412 = qJD(2) * t381 * t399 + qJD(1) * t106 - qJD(5) * t302;
t389 = qJ(3) * qJD(3);
t380 = -t583 / 0.2e1;
t378 = qJ(3) * t382;
t342 = qJD(2) * t516;
t337 = t400 * t531;
t335 = qJD(2) * t548;
t334 = qJD(1) * t548;
t329 = t372 * qJ(3);
t328 = 0.2e1 * t400 * t522;
t320 = t327 * qJD(3);
t312 = t372 * t403;
t311 = t372 * t400;
t295 = -t336 - t581;
t294 = t460 * t400;
t291 = t302 * qJD(6);
t290 = t298 * qJD(2);
t288 = -t631 / 0.2e1 - t381 / 0.2e1 + t703;
t287 = t394 * t706 + t655 / 0.2e1 + t707;
t281 = t404 * t449;
t280 = t401 * t449;
t279 = qJD(5) * t516 + t334;
t222 = t405 * t518 + t558 * t654;
t202 = qJD(2) * t476 - t289 * qJD(5);
t156 = t340 + t633 / 0.2e1 - t445 * t402;
t155 = t542 - t647 / 0.2e1 + t445 * t399;
t146 = t268 + t520;
t144 = t269 + t270;
t122 = t123 * qJD(5);
t114 = t269 - t423 / 0.2e1 + t511;
t113 = t268 + t422 / 0.2e1 + t512;
t112 = t293 * t503 + t188 + t316;
t111 = t471 + t610;
t108 = t117 * qJD(6);
t102 = t106 * qJD(6);
t99 = t478 + t182 + t319 - t646 / 0.2e1;
t98 = t249 + t630 / 0.2e1 + t610;
t91 = t245 + t189 + t607;
t90 = t244 + t189 + t606;
t89 = t473 + t409;
t88 = t473 + t410;
t74 = t670 / 0.2e1 + t424;
t53 = t58 * qJD(6);
t49 = t51 * qJD(6);
t48 = 0.2e1 * t249 + t471 + t513 + t313;
t47 = t718 + t721;
t46 = t719 + t721;
t45 = t293 * t644 / 0.2e1 + t185 + t396 * t472 + t717;
t35 = t388 * t474 + t515 + t194 * t705 - t641 / 0.2e1 + t628 / 0.2e1;
t33 = t407 + t500;
t28 = t185 * t402 + t261 * t707 + t262 * t703 + t399 * t433;
t18 = pkin(10) * t520 + t555 + t65 * t706 + t695 / 0.2e1 + t635 / 0.2e1;
t16 = pkin(10) * t270 + t556 + t540 + t694 / 0.2e1 - t649 / 0.2e1;
t12 = t180 * t388 + t507 * t65 + t441 - t442;
t11 = t65 * t514 + t505 - t650 / 0.2e1 - t411;
t4 = (-t542 + t647) * t710 + t674 / 0.2e1 + (t649 - t694) * t702 + t26 * t704 + t73 * t507 + t65 * t504 + pkin(10) * t319 + t554 + t681 / 0.2e1 + t720 * t388;
t3 = (t635 + t695) * t701 + t25 * t704 - t73 * t645 / 0.2e1 - t65 * t644 / 0.2e1 + pkin(10) * t314 - t415 + t444 + (t185 + t242) * t388;
t21 = [0, 0, 0, t335, t310 * qJD(2), t397 * t525, -t397 * t536, 0, -t217 * qJD(2), -t218 * qJD(2), -qJD(2) * t115 + t401 * t534, qJD(2) * t62 + t486, qJD(2) * t116 + t320, qJD(2) * t50 + qJD(3) * t125, -qJD(2) * t69 - t397 * t532 + t320, t70 * qJD(2) + (-t397 * t586 - t534) * t401, -qJD(2) * t38 + qJD(4) * t309 - t486, qJD(2) * t27 - qJD(3) * t120 - qJD(4) * t105 (-t403 * t536 - t585) * t293, qJD(2) * t126 + qJD(5) * t127, qJD(2) * t197 + t292 * t531, -qJD(2) * t196 + t293 * t531, t335, qJD(2) * t19 + qJD(3) * t204 + qJD(4) * t195 + qJD(5) * t31, -qJD(2) * t20 - qJD(3) * t203 + qJD(4) * t198 - qJD(5) * t30 (qJD(2) * t262 - qJD(6) * t207 + t292 * t582) * t209, qJD(2) * t52 + qJD(5) * t59 + qJD(6) * t71, qJD(2) * t94 + qJD(5) * t79 + t207 * t580, qJD(2) * t93 - qJD(5) * t78 + t209 * t580 (qJD(5) * t293 - t400 * t536) * t292, qJD(2) * t7 + qJD(3) * t103 + qJD(4) * t92 + qJD(5) * t5 + qJD(6) * t14, qJD(2) * t8 + qJD(3) * t104 + qJD(4) * t95 + qJD(5) * t6 + qJD(6) * t13; 0, 0, 0, t334, t562, t281, -t280, 0, -t290 - t566, -t565 + t592, -t290 - t574, qJD(2) * t605 + t523 + t617, t382 - t592 + t600, t620 + (-pkin(2) * t298 - qJ(3) * t297) * qJD(2) + t275 * qJD(3), -qJD(2) * t255 + t382 - t687, qJD(2) * t257 + t686, -t658 + (-t405 * t653 + t356) * qJD(2) - t523, t668 + (-t255 * qJ(3) + t257 * t405) * qJD(2) - t213 * qJD(3) + t222 * qJD(4), t403 * t425 - t715, -t358 * t536 - t122 + t572, -t400 * t525 + t596, -t487 - t597, t279, t679 + (-t255 * t403 + t400 * t434) * qJD(2) - qJD(3) * t292 + t35 * qJD(5), -t678 + (t255 * t400 + t403 * t434) * qJD(2) - qJD(3) * t293 + t33 * qJD(5), t74 * qJD(5) - t102 + (-t535 + t594) * t262, t619 + t28 * qJD(5) + t49 + (t261 * t402 + t670) * t561, t611 + (-t326 + t669) * qJD(2) + t48 * qJD(5) + t88 * qJD(6), t612 + (t325 - t672) * qJD(2) + t46 * qJD(5) + t90 * qJD(6), t715 + (qJD(6) / 0.2e1 + t446) * t546, t39 * t559 + t691 + t113 * qJD(3) + t3 * qJD(5) + t12 * qJD(6) + (-t231 * t654 + t261 * t388 - t681) * t561, -t40 * t559 + t690 + t114 * qJD(3) + t4 * qJD(5) + t11 * qJD(6) + (-t232 * t654 + t262 * t388 - t680) * t561; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t334, t281, t283, qJD(2) * t275 + t598, t283, -t334, -t281, -qJD(2) * t213 - t599, 0, 0, 0, 0, 0, -qJD(2) * t292 + t567, -qJD(2) * t293 - t595, 0, 0, 0, 0, 0, qJD(2) * t113 + qJD(5) * t45 + qJD(6) * t98 + t603, qJD(2) * t114 + qJD(5) * t112 + qJD(6) * t99 + t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t482, -t484, t563, qJD(2) * t222 - t601, 0, 0, 0, 0, 0, t569, t568, 0, 0, 0, 0, 0, qJD(5) * t47 + qJD(6) * t91 + t683, qJD(5) * t111 + qJD(6) * t89 + t682; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t436, t448, t460 * t292, t460 * t293, t342, qJD(2) * t35 - qJD(5) * t73 + t659, qJD(2) * t33 + qJD(5) * t72 - t660, t74 * qJD(2) + t108 + (t584 + t594) * t665, t28 * qJD(2) + t357 * t585 + t53 + t618, qJD(2) * t48 + qJD(6) * t146 - t293 * t584 + t684, qJD(2) * t46 + qJD(6) * t144 - t293 * t582 - t685, t416, t693 + t3 * qJD(2) + t45 * qJD(3) + t47 * qJD(4) + (t399 * t466 - t73 * t402) * qJD(5) + t18 * qJD(6), t692 + t4 * qJD(2) + t112 * qJD(3) + t111 * qJD(4) + (t73 * t399 + t402 * t466) * qJD(5) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t418, t426, t88 * qJD(2) + t146 * qJD(5) + t207 * t493, t90 * qJD(2) + t144 * qJD(5) + t209 * t493, t202, qJD(2) * t12 + qJD(3) * t98 + qJD(4) * t91 + qJD(5) * t18 - qJD(6) * t26 + t688, qJD(2) * t11 + qJD(3) * t99 + qJD(4) * t89 + qJD(5) * t16 + qJD(6) * t25 + t689; 0, 0, 0, -t334, -t562, -t482, t484, 0, t566, t565, t574, -t617, t382 - t600, t378 - t620, t687 - t435, -t533 - t686, t658, -qJD(4) * t191 + t378 - t668, t293 * t336 - t715, -t122 - t572, -t396 * t528 - t596, t337 + t597, -t279, t34 * qJD(5) - t403 * t435 - t679, t32 * qJD(5) + t400 * t435 + t678, qJD(5) * t75 - t262 * t594 - t102, qJD(5) * t29 + t49 - t619, -qJD(5) * t41 - qJD(6) * t86 - t611, -qJD(5) * t44 - qJD(6) * t85 - t612, t715 + (t564 - qJD(6) / 0.2e1) * t546, -qJD(3) * t76 - qJD(4) * t164 - qJD(5) * t1 - qJD(6) * t9 - t691, -qJD(3) * t77 - qJD(4) * t121 - qJD(5) * t2 - qJD(6) * t10 - t690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t389, qJD(3), 0, 0, t389, t521, t358 * qJD(5), 0, 0, 0, -t398 * t583 + t588, -t398 * t581 - t589, -t391 * t522 + t393 * t521, -qJD(6) * t321 - 0.2e1 * t403 * t485, -qJD(5) * t323 + t400 * t527, qJD(5) * t322 + t400 * t526, -t521, qJD(5) * t118 + qJD(6) * t158 + t402 * t588, -qJD(5) * t119 - qJD(6) * t157 - t399 * t588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t372, t329, t372, 0, 0, t329, 0, 0, 0, 0, 0, t312, -t311, 0, 0, 0, 0, 0, qJD(6) * t288 - t498, qJD(6) * t287 - t499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524, -t354, 0, -t570, 0, 0, 0, 0, 0, -t479, t481, 0, 0, 0, 0, 0, -t571, -t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t495, -t447, t295, t294, -t524 / 0.2e1, -t388 * t581 - t438, t388 * t583 - t439, t616 + t291 + (t393 * t561 - t530) * t403, t667 + t328 + (-0.2e1 * t480 - t716) * t403, -t366 + t450, t451 - t529, t432 (t399 * t465 - t541) * qJD(5) + t156 * qJD(6) + t458 (t402 * t465 + t543) * qJD(5) + t155 * qJD(6) + t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t412, t414, t368 * t399 + t370 - t614, t371 - t428, qJD(1) * t477 + t380, qJD(3) * t288 + qJD(5) * t156 - qJD(6) * t232 - t456, qJD(3) * t287 + qJD(5) * t155 + qJD(6) * t231 - t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334, -t482, -t283, -t539 - t598, -t283, t334, t482, -t533 - t539 + t599, 0, 0, 0, 0, 0, -t567 + (-t531 - t590) * t403, t397 * t561 + t337 + t595, 0, 0, 0, 0, 0, qJD(2) * t76 - qJD(5) * t42 - qJD(6) * t96 - t603, qJD(2) * t77 - qJD(5) * t110 - qJD(6) * t97 - t602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372, -t329, -t372, 0, 0, -t329, 0, 0, 0, 0, 0, -t312, t311, 0, 0, 0, 0, 0, -qJD(6) * t286 + t498, -qJD(6) * t285 + t499; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t354, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t295, t294, 0, 0, 0, 0, 0, t462 - t622, -t575 + t604; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t452 + t461, -t427 - t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t281, t280, -t563, qJD(2) * t191 + qJD(3) * t654 + t601, 0, 0, 0, 0, 0, -t337 + t487 - t569, -t568 + (-t404 * t561 - t528) * t396, 0, 0, 0, 0, 0, qJD(2) * t164 - qJD(5) * t43 - qJD(6) * t84 - t683, qJD(2) * t121 - qJD(5) * t109 - qJD(6) * t87 - t682; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t524, t354, 0, t570, 0, 0, 0, 0, 0, t479, -t481, 0, 0, 0, 0, 0, t571, t573; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t354, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t294, t295, 0, 0, 0, 0, 0, t427 - t621, t461 - t576; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t604 - t615, t462 - t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t436, -t448, t446 * t654, t425, t342, -t659 - t34 * qJD(2) + (qJD(4) * t400 + t588) * t654, t660 - t32 * qJD(2) + (qJD(4) * t403 - t589) * t654, -qJD(2) * t75 - t402 * t538 + t108, -qJD(2) * t29 + t53 - t618, qJD(2) * t41 + qJD(6) * t147 - t684, qJD(2) * t44 + qJD(6) * t143 + t685, -t416, qJD(2) * t1 + qJD(3) * t42 + qJD(4) * t43 + qJD(6) * t17 - t693, qJD(2) * t2 + qJD(3) * t110 + qJD(4) * t109 + qJD(6) * t15 - t692; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t495, t447, t336, -t483, qJD(1) * t516, t438, t439, -t368 * t393 + t291 - t616, t403 * t464 + t328 - t667, -t450 + t526, -t451 - t527, -t432, -qJD(6) * t206 - t458, qJD(6) * t205 - t457; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t336, -t483, 0, 0, 0, 0, 0, t622, t575; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t483, t336, 0, 0, 0, 0, 0, t621, t576; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t522, t357 * qJD(6), 0, 0, 0, -pkin(5) * t579, -pkin(5) * t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, t413, -t494 + t578, -t496 - t579, t443, -pkin(10) * t578 - t420, pkin(10) * t579 - t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t418, -t426, qJD(2) * t86 - qJD(5) * t147 - t207 * t564, qJD(2) * t85 - qJD(5) * t143 - t538, t202, qJD(2) * t9 + qJD(3) * t96 + qJD(4) * t84 - qJD(5) * t17 - t688, qJD(2) * t10 + qJD(3) * t97 + qJD(4) * t87 - qJD(5) * t15 - t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t412, -t414, t614 + (-t399 * t561 - t582) * t403, t367 + t428, qJD(1) * t476 + t380, qJD(3) * t286 + qJD(5) * t206 + t456, qJD(3) * t285 - qJD(5) * t205 + t454; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, t453; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t615, t613; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t417, -t413, t494, t496, -t443, t420, t421; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t21;
