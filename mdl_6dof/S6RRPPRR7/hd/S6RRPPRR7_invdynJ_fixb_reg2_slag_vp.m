% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPPRR7_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR7_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR7_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR7_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR7_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR7_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:21:06
% EndTime: 2019-03-09 09:21:25
% DurationCPUTime: 9.88s
% Computational Cost: add. (10706->778), mult. (25145->958), div. (0->0), fcn. (18204->10), ass. (0->367)
t248 = sin(qJ(5));
t244 = sin(pkin(6));
t253 = cos(qJ(2));
t419 = qJD(1) * t253;
t385 = t244 * t419;
t245 = cos(pkin(6));
t410 = t245 * qJD(1);
t217 = qJD(2) + t410;
t252 = cos(qJ(5));
t439 = t217 * t252;
t128 = t248 * t385 - t439;
t406 = qJD(6) - t128;
t129 = t248 * t217 + t252 * t385;
t247 = sin(qJ(6));
t251 = cos(qJ(6));
t249 = sin(qJ(2));
t420 = qJD(1) * t249;
t386 = t244 * t420;
t334 = qJD(5) + t386;
t302 = t251 * t334;
t80 = -t129 * t247 - t302;
t497 = t406 * t80;
t190 = qJ(4) * t386;
t395 = pkin(1) * t410;
t209 = t253 * t395;
t348 = -pkin(5) * t248 + pkin(10) * t252;
t496 = qJD(5) * t348 + qJD(3) - t190 - t209 - (-pkin(8) - t348) * t386;
t277 = t251 * t129 - t247 * t334;
t495 = t277 * t406;
t401 = qJDD(1) * t253;
t211 = t244 * t401;
t405 = qJD(1) * qJD(2);
t373 = t249 * t405;
t354 = t244 * t373;
t315 = -t211 + t354;
t255 = -pkin(2) - pkin(3);
t241 = -pkin(9) + t255;
t320 = pkin(8) * t386 - t209;
t491 = qJD(3) + t320;
t481 = -t190 + t491;
t60 = t217 * t241 + t481;
t350 = pkin(4) * t249 + pkin(9) * t253;
t421 = qJD(1) * t244;
t119 = -pkin(1) * t421 - pkin(2) * t385 - qJ(3) * t386;
t90 = pkin(3) * t385 + qJD(4) - t119;
t67 = t350 * t421 + t90;
t29 = -t248 * t60 + t252 * t67;
t296 = pkin(4) * t253 + t241 * t249;
t281 = qJD(2) * t296;
t437 = t244 * t249;
t213 = qJD(3) * t437;
t236 = t244 * pkin(1);
t402 = qJDD(1) * t249;
t371 = t244 * t402;
t372 = t253 * t405;
t493 = t244 * t372 + t371;
t328 = pkin(2) * t211 + qJ(3) * t493 + qJD(1) * t213 + qJDD(1) * t236;
t288 = pkin(3) * t211 + qJDD(4) + t328;
t31 = (qJD(1) * t281 + qJDD(1) * t350) * t244 + t288;
t403 = qJDD(1) * t245;
t215 = qJDD(2) + t403;
t294 = t372 + t402;
t208 = t249 * t395;
t393 = pkin(1) * t403;
t356 = pkin(8) * t493 + qJD(2) * t208 - t253 * t393;
t324 = -qJDD(3) - t356;
t404 = qJD(1) * qJD(4);
t257 = (-qJ(4) * t294 - t249 * t404) * t244 - t324;
t34 = t215 * t241 + t257;
t414 = qJD(5) * t252;
t415 = qJD(5) * t248;
t309 = -t248 * t31 - t252 * t34 - t67 * t414 + t415 * t60;
t494 = -t29 * t334 - t309;
t492 = qJD(6) * t277;
t30 = t248 * t67 + t252 * t60;
t26 = pkin(10) * t334 + t30;
t138 = pkin(8) * t385 + t208;
t115 = -qJ(4) * t385 + t138;
t189 = t217 * qJ(3);
t87 = -t115 - t189;
t75 = pkin(4) * t217 - t87;
t38 = -pkin(5) * t128 + pkin(10) * t129 + t75;
t10 = t247 * t38 + t251 * t26;
t175 = qJ(4) * t354;
t435 = t244 * t253;
t185 = t215 * qJ(3);
t186 = t217 * qJD(3);
t352 = t245 * t372;
t357 = -pkin(1) * t352 + pkin(8) * t315 - t249 * t393;
t55 = t185 + t186 - t357;
t42 = (qJ(4) * qJDD(1) + t404) * t435 - t175 - t55;
t35 = pkin(4) * t215 - t42;
t364 = -t252 * t211 - t248 * t215;
t413 = qJD(5) * t253;
t379 = t248 * t413;
t417 = qJD(2) * t252;
t382 = t249 * t417;
t53 = -t217 * t414 + (t379 + t382) * t421 + t364;
t340 = -t252 * t215 + t217 * t415 - t248 * t354;
t54 = (qJD(1) * t414 + qJDD(1) * t248) * t435 + t340;
t12 = -pkin(5) * t54 - pkin(10) * t53 + t35;
t274 = t244 * t294 + qJDD(5);
t5 = pkin(10) * t274 - t309;
t2 = -qJD(6) * t10 + t251 * t12 - t247 * t5;
t490 = -t406 * t10 - t2;
t333 = t247 * t26 - t251 * t38;
t1 = -t333 * qJD(6) + t247 * t12 + t251 * t5;
t489 = t406 * t333 + t1;
t254 = cos(qJ(1));
t428 = t253 * t254;
t250 = sin(qJ(1));
t432 = t249 * t250;
t156 = -t245 * t428 + t432;
t434 = t244 * t254;
t104 = t156 * t252 + t248 * t434;
t430 = t250 * t253;
t431 = t249 * t254;
t157 = t245 * t431 + t430;
t488 = t104 * t247 - t157 * t251;
t487 = t104 * t251 + t157 * t247;
t418 = qJD(2) * t249;
t62 = -t245 * t211 + t244 * ((t217 + t410) * t418 - t215 * t253);
t396 = g(3) * t437;
t159 = -t245 * t432 + t428;
t479 = -g(1) * t159 - g(2) * t157;
t282 = -t479 + t396;
t477 = qJD(5) * t334;
t486 = t241 * t477 + t282 - t35;
t485 = t334 * t277;
t301 = t128 * t334;
t484 = t53 - t301;
t394 = t215 * t255;
t483 = t248 * t294;
t300 = t334 * t129;
t433 = t247 * t252;
t122 = -t251 * t385 + t386 * t433;
t339 = t247 * t414 + t122;
t482 = t339 * t406;
t158 = t245 * t430 + t431;
t480 = g(1) * t158 + g(2) * t156 - g(3) * t435;
t471 = pkin(1) * t249;
t227 = t245 * t471;
t161 = pkin(8) * t435 + t227;
t140 = qJD(2) * t161;
t478 = qJD(2) * t255;
t337 = t10 * t251 + t247 * t333;
t369 = t248 * t34 - t252 * t31;
t8 = -qJD(5) * t30 - t369;
t6 = -pkin(5) * t274 - t8;
t476 = qJD(5) * t337 - t6;
t470 = pkin(1) * t253;
t397 = t245 * t470;
t210 = qJD(2) * t397;
t233 = t245 * qJD(3);
t384 = t244 * t418;
t78 = t244 * (pkin(8) * t418 + qJD(4) * t253) - qJ(4) * t384 - t210 - t233;
t287 = t334 * t421;
t260 = t249 * t287 + t477;
t475 = -t252 * qJDD(5) + t260 * t248;
t223 = pkin(3) * t435;
t425 = pkin(2) * t435 + qJ(3) * t437;
t388 = t223 + t425;
t327 = pkin(4) * t437 + pkin(9) * t435 + t388;
t77 = t236 + t327;
t219 = pkin(8) * t437;
t341 = -qJ(4) * t437 + t219;
t387 = -pkin(2) - t470;
t360 = -pkin(3) + t387;
t86 = (-pkin(9) + t360) * t245 + t341;
t461 = t248 * t77 + t252 * t86;
t416 = qJD(2) * t253;
t383 = t244 * t416;
t426 = qJ(3) * t383 + t213;
t64 = t244 * t281 + t426;
t89 = -qJD(4) * t437 + (t227 + (pkin(8) - qJ(4)) * t435) * qJD(2);
t16 = -qJD(5) * t461 - t248 * t89 + t252 * t64;
t24 = t247 * t53 - t251 * t274 - t492;
t473 = (-t241 * t294 - t75 * t420) * t244 - t75 * qJD(5) - t241 * qJDD(5);
t472 = 0.2e1 * t185;
t469 = pkin(2) * t215;
t466 = g(2) * t254;
t465 = g(3) * t249;
t464 = t277 * t80;
t349 = pkin(5) * t252 + pkin(10) * t248;
t319 = qJ(3) + t349;
t169 = pkin(4) + t319;
t117 = t169 * t251 - t241 * t433;
t380 = t251 * t415;
t192 = qJ(3) * t385;
t76 = t296 * t421 + t192;
t46 = t252 * t115 + t248 * t76;
t40 = pkin(10) * t385 + t46;
t463 = qJD(6) * t117 - t241 * t380 + t247 * t496 - t251 * t40;
t429 = t251 * t252;
t118 = t169 * t247 + t241 * t429;
t381 = t247 * t415;
t462 = -qJD(6) * t118 + t241 * t381 + t247 * t40 + t251 * t496;
t460 = t122 * t277;
t123 = (t247 * t253 + t249 * t429) * t421;
t459 = t123 * t80;
t412 = qJD(6) * t247;
t23 = -qJD(6) * t302 - t129 * t412 - t247 * t274 - t251 * t53;
t458 = t23 * t247;
t457 = t23 * t252;
t456 = t24 * t251;
t52 = -qJDD(6) + t54;
t455 = t247 * t52;
t454 = t247 * t80;
t453 = t247 * t277;
t452 = t248 * t23;
t451 = t248 * t24;
t450 = t251 * t52;
t449 = t251 * t80;
t448 = t251 * t277;
t447 = t252 * t24;
t446 = qJ(3) * t157;
t445 = qJ(3) * t159;
t444 = qJ(3) * t253;
t443 = t128 * t129;
t170 = t215 * t245;
t240 = t244 ^ 2;
t438 = t240 * qJD(1) ^ 2;
t436 = t244 * t250;
t427 = -qJD(4) - t90;
t424 = g(1) * t436 + g(3) * t245;
t423 = t254 * pkin(1) + pkin(8) * t436;
t422 = qJ(3) * qJD(2);
t411 = qJD(6) * t251;
t409 = qJD(2) - t217;
t400 = t248 * qJDD(5);
t242 = t249 ^ 2;
t212 = t242 * t438;
t398 = -t217 ^ 2 - t212;
t243 = t253 ^ 2;
t392 = t243 * t438;
t391 = t253 * t438;
t132 = t245 * qJ(3) + t161;
t133 = -t236 - t425;
t378 = t252 * t413;
t377 = t128 * t419;
t376 = t129 * t419;
t375 = 0.2e1 * pkin(1) * t240;
t374 = qJ(4) * t402;
t370 = -pkin(1) * t250 + pkin(8) * t434;
t367 = t427 * t249;
t143 = t156 * pkin(2);
t366 = -t143 + t446;
t149 = t158 * pkin(2);
t365 = -t149 + t445;
t363 = t406 * t247;
t362 = qJD(1) * t133 + t119;
t359 = t255 * t437;
t358 = t30 * t386;
t355 = t248 * t386;
t351 = t249 * t372;
t107 = t158 * t248 + t252 * t436;
t310 = -t156 * t248 + t252 * t434;
t347 = g(1) * t310 + g(2) * t107;
t345 = g(1) * t156 - g(2) * t158;
t343 = g(1) * t157 - g(2) * t159;
t342 = g(1) * t254 + g(2) * t250;
t338 = t251 * t414 + t123;
t336 = t10 * t247 - t251 * t333;
t37 = pkin(10) * t437 + t461;
t154 = -t245 * t252 + t248 * t435;
t155 = t245 * t248 + t252 * t435;
t110 = qJ(4) * t435 - t132;
t94 = t245 * pkin(4) - t110;
t50 = -pkin(5) * t154 + pkin(10) * t155 + t94;
t20 = t247 * t50 + t251 * t37;
t19 = -t247 * t37 + t251 * t50;
t332 = -t449 - t453;
t331 = -t248 * t29 + t252 * t30;
t43 = -t248 * t86 + t252 * t77;
t45 = -t115 * t248 + t252 * t76;
t326 = qJD(2) * t359;
t111 = t223 - t133;
t325 = qJD(2) * (qJD(1) * t111 + t90);
t142 = t156 * pkin(3);
t323 = t157 * pkin(4) - pkin(9) * t156 - t142 - t143;
t148 = t158 * pkin(3);
t322 = t159 * pkin(4) - pkin(9) * t158 - t148 - t149;
t139 = -pkin(8) * t384 + t210;
t317 = t159 * pkin(2) + qJ(3) * t158 + t423;
t313 = t406 * t411 - t455;
t312 = t406 * t412 + t450;
t311 = t155 * t247 + t251 * t437;
t102 = -t155 * t251 + t247 * t437;
t15 = t248 * t64 + t252 * t89 + t77 * t414 - t415 * t86;
t307 = t334 * t80;
t306 = t338 * t406;
t25 = -pkin(5) * t334 - t29;
t305 = pkin(10) * t52 + t25 * t406;
t47 = qJD(1) * t326 + t288;
t88 = t326 + t426;
t304 = qJD(1) * t88 + qJDD(1) * t111 + t47;
t303 = t248 * t334;
t116 = pkin(2) * t384 - t426;
t61 = pkin(2) * t354 - t328;
t299 = -qJD(1) * t116 - qJDD(1) * t133 - t61;
t293 = g(1) * t107 - g(2) * t310 - g(3) * t154;
t108 = t158 * t252 - t248 * t436;
t292 = -g(1) * t108 - g(2) * t104 + g(3) * t155;
t291 = -t157 * pkin(2) - qJ(3) * t156 + t370;
t289 = -t140 * t217 + t343;
t285 = t293 - t6;
t284 = t54 - t300;
t280 = t252 * t294;
t279 = t479 - t357;
t276 = t480 - t356;
t275 = (t409 * t419 + t402) * t244;
t273 = t159 * pkin(3) - qJ(4) * t436 + t317;
t63 = t245 * t371 + (t215 * t249 + t217 * t416 + t352) * t244;
t272 = -qJDD(3) + t276;
t271 = -pkin(10) * qJD(6) * t406 + t285;
t270 = t217 * t320 + t279;
t269 = -t157 * pkin(3) - qJ(4) * t434 + t291;
t268 = -qJD(6) * t336 + t1 * t251 - t2 * t247;
t267 = -t458 - t456 + (-t448 + t454) * qJD(6);
t266 = t138 * t217 + t276;
t265 = t312 - t485;
t264 = t307 - t313;
t263 = t158 * pkin(4) + pkin(9) * t159 + t273;
t262 = -t156 * pkin(4) - pkin(9) * t157 + t269;
t261 = -t334 * t386 - t477;
t259 = t260 * t252;
t258 = t25 * t334 + t268;
t246 = qJ(3) + pkin(4);
t177 = t249 * t391;
t162 = t217 * t386;
t160 = -t219 + t397;
t153 = -t212 + t392;
t136 = t177 + t215;
t135 = pkin(2) * t386 - t192;
t134 = t245 * t387 + t219;
t131 = (qJDD(1) * t243 - 0.2e1 * t351) * t240;
t130 = (qJDD(1) * t242 + 0.2e1 * t351) * t240;
t125 = t139 + t233;
t121 = t217 * t247 + t251 * t355;
t120 = t217 * t251 - t247 * t355;
t114 = qJD(1) * t359 + t192;
t112 = t189 + t138;
t109 = -pkin(2) * t217 + t491;
t100 = qJD(5) * t154 + t244 * t382;
t99 = -t244 * t378 - t245 * t415 + t248 * t384;
t98 = (t249 * t401 + (-t242 + t243) * t405) * t240;
t96 = t245 * t360 + t341;
t95 = 0.2e1 * t98;
t91 = -t162 + t315;
t73 = t217 * t255 + t481;
t71 = -pkin(5) * t129 - pkin(10) * t128;
t69 = -t324 - t469;
t66 = t108 * t251 + t159 * t247;
t65 = -t108 * t247 + t159 * t251;
t49 = qJD(6) * t311 + t100 * t251 + t247 * t383;
t48 = qJD(6) * t102 + t100 * t247 - t251 * t383;
t41 = t394 + t257;
t39 = -pkin(5) * t385 - t45;
t36 = -pkin(5) * t437 - t43;
t32 = t99 * pkin(5) - t100 * pkin(10) - t78;
t18 = t247 * t71 + t251 * t29;
t17 = -t247 * t29 + t251 * t71;
t14 = -pkin(5) * t383 - t16;
t13 = pkin(10) * t383 + t15;
t4 = -qJD(6) * t20 - t247 * t13 + t251 * t32;
t3 = qJD(6) * t19 + t251 * t13 + t247 * t32;
t7 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t250 - t466, t342, 0, 0, t130, t95, t63, t131, -t62, t170, t160 * t215 - t356 * t245 + (-t373 + t401) * t375 + t289, -t139 * t217 - t161 * t215 + t245 * t357 - t294 * t375 - t345 ((qJD(2) * t320 + qJDD(1) * t161 - t357 + (-qJD(2) * t160 + t139) * qJD(1)) * t253 + (-qJD(2) * t138 - qJDD(1) * t160 + t356) * t249 - t342) * t244, t240 * qJDD(1) * pkin(1) ^ 2 - g(1) * t370 - g(2) * t423 + t138 * t139 + t140 * t320 - t160 * t356 - t161 * t357, t130, t63, -0.2e1 * t98, t170, t62, t131, -t134 * t215 - t245 * t69 + (t253 * t299 + t362 * t418) * t244 + t289 ((qJD(2) * t109 + qJDD(1) * t132 + t55 + (qJD(2) * t134 + t125) * qJD(1)) * t253 + (-qJD(2) * t112 + qJDD(1) * t134 + t69 + (-qJD(2) * t132 + t140) * qJD(1)) * t249 - t342) * t244, t125 * t217 + t132 * t215 + t245 * t55 + (t249 * t299 - t362 * t416) * t244 + t345, -g(1) * t291 - g(2) * t317 + t109 * t140 + t112 * t125 + t119 * t116 + t55 * t132 + t61 * t133 + t69 * t134, t131, t95, -t62, t130, t63, t170, -t110 * t215 - t217 * t78 - t245 * t42 + (t249 * t304 + t253 * t325) * t244 + t345, t215 * t96 + t217 * t89 + t245 * t41 + (t249 * t325 - t253 * t304) * t244 - t343 ((-qJD(2) * t73 + qJDD(1) * t110 + t42 + (-qJD(2) * t96 + t78) * qJD(1)) * t253 + (-qJD(2) * t87 - qJDD(1) * t96 - t41 + (-qJD(2) * t110 - t89) * qJD(1)) * t249 + t342) * t244, -g(1) * t269 - g(2) * t273 + t42 * t110 + t47 * t111 + t41 * t96 + t73 * t89 + t87 * t78 + t90 * t88, -t100 * t129 - t155 * t53, t100 * t128 + t129 * t99 + t154 * t53 - t155 * t54, t100 * qJD(5) - t155 * qJDD(5) + ((-qJD(1) * t155 - t129) * t416 + (qJD(1) * t100 - qJDD(1) * t155 + t53) * t249) * t244, -t128 * t99 + t154 * t54, -t99 * qJD(5) + t154 * qJDD(5) + ((qJD(1) * t154 + t128) * t416 + (-qJD(1) * t99 + qJDD(1) * t154 + t54) * t249) * t244 (qJD(2) * t413 + (qJDD(5) + (0.2e1 * t372 + t402) * t244) * t249) * t244, g(1) * t104 - g(2) * t108 + t16 * qJD(5) + t43 * qJDD(5) + t78 * t128 - t35 * t154 - t94 * t54 + t75 * t99 + ((qJD(1) * t43 + t29) * t416 + (qJD(1) * t16 + qJDD(1) * t43 + t8) * t249) * t244, -t15 * qJD(5) - t461 * qJDD(5) + t75 * t100 + t78 * t129 - t35 * t155 + t94 * t53 + ((-qJD(1) * t461 - t30) * t416 + (-qJD(1) * t15 - qJDD(1) * t461 + t309) * t249) * t244 + t347, -t100 * t29 + t128 * t15 + t129 * t16 - t154 * t309 + t155 * t8 - t30 * t99 - t43 * t53 + t461 * t54 + t343, -g(1) * t262 - g(2) * t263 + t30 * t15 + t29 * t16 - t309 * t461 + t35 * t94 + t8 * t43 - t75 * t78, -t102 * t23 - t277 * t49, -t102 * t24 - t23 * t311 + t277 * t48 - t49 * t80, -t102 * t52 + t154 * t23 - t277 * t99 + t406 * t49, -t24 * t311 + t48 * t80, t154 * t24 - t311 * t52 - t406 * t48 - t80 * t99, t154 * t52 + t406 * t99, g(1) * t487 - g(2) * t66 + t14 * t80 - t2 * t154 - t19 * t52 + t36 * t24 + t25 * t48 - t6 * t311 - t333 * t99 + t4 * t406, -g(1) * t488 - g(2) * t65 + t1 * t154 - t10 * t99 + t6 * t102 - t14 * t277 + t20 * t52 - t36 * t23 + t25 * t49 - t3 * t406, t1 * t311 - t10 * t48 - t102 * t2 + t19 * t23 - t20 * t24 + t277 * t4 - t3 * t80 + t333 * t49 - t347, t1 * t20 + t10 * t3 + t2 * t19 - t333 * t4 + t6 * t36 + t25 * t14 - g(1) * (-pkin(5) * t104 + pkin(10) * t310 + t262) - g(2) * (pkin(5) * t108 + pkin(10) * t107 + t263); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t177, -t153, t275, t177, -t91, t215, t438 * t471 + t266, pkin(1) * t391 - t270 + t396, 0, 0, -t177, t275, t153, t215, t91, t177, 0.2e1 * t469 - qJDD(3) + (-t119 * t249 + t135 * t253) * t421 + t266 ((-pkin(2) * t249 + t444) * qJDD(1) + ((t112 - t138 - t422) * t249 + (-pkin(2) * qJD(2) - t109 + t491) * t253) * qJD(1)) * t244, t472 + 0.2e1 * t186 + (-t465 + (t119 * t253 + t135 * t249) * qJD(1)) * t244 + t270, -t69 * pkin(2) - g(1) * t365 - g(2) * t366 - g(3) * t425 + t55 * qJ(3) - t109 * t138 + t112 * t491 - t119 * t135, t177, -t153, -t386 * t409 + t211, -t177, t275, t215, t472 + t175 + t186 + t481 * t217 + (-qJ(4) * t401 - t465 + (-t114 * t249 + t253 * t427) * qJD(1)) * t244 + t279, -t115 * t217 + 0.2e1 * t394 + (-t374 + ((-qJ(4) * qJD(2) + t114) * t253 + t367) * qJD(1)) * t244 - t272 ((-t249 * t255 - t444) * qJDD(1) + ((t115 + t87 + t422) * t249 + (-t481 + t73 - t478) * t253) * qJD(1)) * t244, t41 * t255 - t42 * qJ(3) - t73 * t115 - t90 * t114 - g(1) * (-t148 + t365) - g(2) * (-t142 + t366) - g(3) * t388 - t481 * t87, -t53 * t248 + t252 * t300 (-t53 - t301) * t252 + (-t54 - t300) * t248, -t400 + (t376 - t483) * t244 - t259, t128 * t303 - t54 * t252 (-t280 - t377) * t244 + t475, -t253 * t287, -t481 * t128 - t246 * t54 + t473 * t248 - t252 * t486 - t29 * t385 - t45 * t334, -t481 * t129 + t246 * t53 + t248 * t486 + t473 * t252 + t30 * t385 + t46 * t334, -t128 * t46 - t129 * t45 + (t29 * t386 + t241 * t54 + t309 + (-t129 * t241 + t29) * qJD(5)) * t252 + (t358 + t241 * t53 + t8 + (-t128 * t241 + t30) * qJD(5)) * t248 + t480, t35 * t246 - t30 * t46 - t29 * t45 - g(1) * (t322 + t445) - g(2) * (t323 + t446) - g(3) * t327 + t481 * t75 + (-t8 * t248 - t309 * t252 + (-t248 * t30 - t252 * t29) * qJD(5)) * t241, t251 * t452 - (t248 * t412 - t338) * t277, -t460 + t459 + (t449 - t453) * t414 + (-t458 + t456 + (-t448 - t454) * qJD(6)) * t248, -t457 - t306 + (t312 + t485) * t248, -t247 * t451 + (-t248 * t411 - t339) * t80, -t447 + t482 + (t307 + t313) * t248, -t52 * t252 - t303 * t406, -t117 * t52 - t25 * t122 - t39 * t80 + t462 * t406 + t480 * t247 + (t2 + (t241 * t80 - t247 * t25) * qJD(5) - t282 * t251) * t252 + (t241 * t24 - t6 * t247 - t25 * t411 + t333 * t334) * t248, t118 * t52 - t25 * t123 + t39 * t277 - t463 * t406 + t480 * t251 + (-t1 + (-t241 * t277 - t25 * t251) * qJD(5) + t282 * t247) * t252 + (t10 * t334 - t241 * t23 + t25 * t412 - t6 * t251) * t248, t10 * t122 + t117 * t23 - t118 * t24 - t123 * t333 + t462 * t277 - t463 * t80 + t336 * t414 + (qJD(6) * t337 + t1 * t247 + t2 * t251 - t282) * t248, t1 * t118 + t2 * t117 - t25 * t39 - g(1) * t322 - g(2) * t323 - g(3) * (t349 * t437 + t327) - t462 * t333 + (t248 * t6 + t25 * t414) * t241 + t463 * t10 + t479 * t319; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t136, t275, t398, -t112 * t217 + t119 * t386 - t272 - t469, 0, 0, 0, 0, 0, 0, t398, t136, -t275, t217 * t87 + t394 + (-t374 + (-qJ(4) * t416 + t367) * qJD(1)) * t244 - t272, 0, 0, 0, 0, 0, 0, t217 * t128 - t248 * t274 - t259, t217 * t129 - t261 * t248 - t252 * t274, t248 * t484 + t284 * t252, -t217 * t75 + t494 * t252 + (-t30 * t334 - t8) * t248 - t480, 0, 0, 0, 0, 0, 0, t451 - (t120 - t381) * t406 + t264 * t252, -t452 - (-t121 - t380) * t406 + t265 * t252, -t120 * t277 + t121 * t80 + t252 * t267 - t332 * t415, -t10 * t121 + t120 * t333 - t248 * t476 + t258 * t252 - t480; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (t402 + (qJD(2) + t217) * t419) * t244, t162 + t315, -t212 - t392 (-t466 + (-t253 * t87 + (t73 + t478) * t249) * qJD(1)) * t244 + t288 + t424, 0, 0, 0, 0, 0, 0 (t280 - t377) * t244 - t475, -t400 + (-t376 - t483) * t244 + t261 * t252, t284 * t248 - t252 * t484, -t248 * t309 + t252 * t8 + t331 * qJD(5) + (-t466 + (t249 * t331 + t253 * t75) * qJD(1)) * t244 + t424, 0, 0, 0, 0, 0, 0, t248 * t264 - t447 - t482, t248 * t265 - t306 + t457, t248 * t267 + t332 * t414 - t459 - t460, -g(2) * t434 + t10 * t123 + t122 * t333 + t258 * t248 + t252 * t476 + t424; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t443, -t128 ^ 2 + t129 ^ 2 (-t128 - t439) * qJD(5) + (t379 + (-t128 + t417) * t249) * t421 + t364, -t443, -t129 * qJD(5) + (t248 * t401 + (-t129 * t249 + t378) * qJD(1)) * t244 + t340, t274, t75 * t129 + t293 + t358 - t369, -t75 * t128 - t292 - t494, 0, 0, -t406 * t448 - t458 (-t23 - t497) * t251 + (-t24 + t495) * t247, t251 * t406 ^ 2 - t129 * t277 - t455, t363 * t80 - t456, -t80 * t129 - t363 * t406 - t450, t406 * t129, -pkin(5) * t24 - t129 * t333 - t17 * t406 + t247 * t305 + t251 * t271 - t30 * t80, pkin(5) * t23 - t10 * t129 + t18 * t406 - t247 * t271 + t251 * t305 + t277 * t30, -t17 * t277 + t18 * t80 + ((-t24 - t492) * pkin(10) + t489) * t251 + ((qJD(6) * t80 - t23) * pkin(10) + t490) * t247 + t292, -t10 * t18 + t333 * t17 - t25 * t30 + t285 * pkin(5) + (t268 + t292) * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t464, t277 ^ 2 - t80 ^ 2, -t23 + t497, t464, -t24 - t495, -t52, -g(1) * t65 + g(2) * t488 - g(3) * t311 + t25 * t277 - t490, g(1) * t66 + g(2) * t487 + g(3) * t102 + t25 * t80 - t489, 0, 0;];
tau_reg  = t7;
