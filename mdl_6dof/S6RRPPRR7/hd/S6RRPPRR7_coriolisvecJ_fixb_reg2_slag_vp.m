% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPPRR7_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR7_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR7_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR7_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:20:59
% EndTime: 2019-03-09 09:21:17
% DurationCPUTime: 6.59s
% Computational Cost: add. (8387->570), mult. (20847->751), div. (0->0), fcn. (14622->8), ass. (0->279)
t193 = sin(qJ(5));
t197 = cos(qJ(2));
t189 = sin(pkin(6));
t304 = qJD(1) * t189;
t278 = t197 * t304;
t190 = cos(pkin(6));
t293 = t190 * qJD(1);
t171 = qJD(2) + t293;
t196 = cos(qJ(5));
t315 = t171 * t196;
t110 = t193 * t278 - t315;
t291 = qJD(6) - t110;
t111 = t193 * t171 + t196 * t278;
t192 = sin(qJ(6));
t195 = cos(qJ(6));
t194 = sin(qJ(2));
t303 = qJD(1) * t194;
t279 = t189 * t303;
t246 = qJD(5) + t279;
t223 = t195 * t246;
t68 = -t111 * t192 - t223;
t363 = t291 * t68;
t155 = qJ(4) * t279;
t288 = pkin(1) * t293;
t165 = t197 * t288;
t254 = -pkin(5) * t193 + pkin(10) * t196;
t362 = -qJD(5) * t254 - qJD(3) + t155 + t165 + (-pkin(8) - t254) * t279;
t352 = t111 * t246;
t301 = qJD(2) * t194;
t277 = t189 * t301;
t256 = qJD(1) * t277;
t312 = t189 * t197;
t284 = t196 * t312;
t257 = qJD(5) * t284;
t297 = qJD(5) * t193;
t74 = qJD(1) * t257 + t171 * t297 - t193 * t256;
t212 = t74 - t352;
t209 = t195 * t111 - t192 * t246;
t361 = t209 * t291;
t296 = qJD(5) * t196;
t198 = -pkin(2) - pkin(3);
t186 = -pkin(9) + t198;
t211 = t189 * (pkin(4) * t197 + t186 * t194);
t210 = qJD(2) * t211;
t290 = qJD(1) * qJD(2);
t270 = t197 * t290;
t153 = t189 * t270;
t313 = t189 * t194;
t168 = qJD(3) * t313;
t307 = qJ(3) * t153 + qJD(1) * t168;
t44 = qJD(1) * t210 + t307;
t237 = pkin(8) * t279 - t165;
t358 = qJD(3) + t237;
t348 = -t155 + t358;
t49 = t171 * t186 + t348;
t235 = (pkin(4) * t194 + pkin(9) * t197) * t189;
t103 = -pkin(1) * t304 - pkin(2) * t278 - qJ(3) * t279;
t78 = pkin(3) * t278 + qJD(4) - t103;
t51 = qJD(1) * t235 + t78;
t287 = pkin(1) * qJD(2) * t190;
t261 = qJD(1) * t287;
t114 = pkin(8) * t153 + t194 * t261;
t299 = qJD(2) * t197;
t280 = qJ(4) * t299;
t298 = qJD(4) * t194;
t64 = (-t280 - t298) * t304 + t114;
t230 = -t193 * t44 - t196 * t64 - t51 * t296 + t297 * t49;
t25 = -t193 * t49 + t196 * t51;
t360 = -t25 * t246 - t230;
t166 = t197 * t287;
t180 = t190 * qJD(3);
t350 = (pkin(8) * t301 + qJD(4) * t197) * t189;
t65 = -qJ(4) * t277 - t166 - t180 + t350;
t359 = qJD(6) * t209;
t26 = t193 * t51 + t196 * t49;
t24 = pkin(10) * t246 + t26;
t154 = t171 * qJ(3);
t121 = pkin(8) * t278 + t194 * t288;
t96 = -qJ(4) * t278 + t121;
t75 = -t154 - t96;
t59 = pkin(4) * t171 - t75;
t32 = -pkin(5) * t110 + pkin(10) * t111 + t59;
t10 = t192 * t32 + t195 * t24;
t149 = t197 * t261;
t151 = t171 * qJD(3);
t283 = qJ(4) * t256 + t149 + t151;
t52 = qJD(1) * t350 - t283;
t272 = t197 * t297;
t300 = qJD(2) * t196;
t275 = t194 * t300;
t73 = -t171 * t296 + (t272 + t275) * t304;
t22 = -t74 * pkin(5) - t73 * pkin(10) - t52;
t5 = pkin(10) * t153 - t230;
t2 = -qJD(6) * t10 - t192 * t5 + t195 * t22;
t357 = -t291 * t10 - t2;
t245 = t192 * t24 - t195 * t32;
t1 = -qJD(6) * t245 + t192 * t22 + t195 * t5;
t356 = t291 * t245 + t1;
t346 = qJD(5) * t246;
t355 = t186 * t346 + t52;
t354 = t246 * t209;
t222 = t110 * t246;
t353 = t73 - t222;
t220 = t246 * t189;
t216 = qJD(1) * t220;
t202 = t194 * t216 + t346;
t351 = t202 * t193;
t311 = t192 * t196;
t106 = -t195 * t278 + t279 * t311;
t251 = t192 * t296 + t106;
t349 = t251 * t291;
t89 = (t171 + t293) * t277;
t347 = qJD(2) * t198;
t249 = t10 * t195 + t192 * t245;
t269 = t193 * t64 - t196 * t44;
t8 = -qJD(5) * t26 - t269;
t6 = -pkin(5) * t153 - t8;
t345 = qJD(5) * t249 - t6;
t116 = -t189 * pkin(1) - pkin(2) * t312 - qJ(3) * t313;
t92 = pkin(3) * t312 - t116;
t62 = t235 + t92;
t173 = pkin(8) * t313;
t253 = -qJ(4) * t313 + t173;
t343 = pkin(1) * t197;
t281 = -pkin(2) - t343;
t263 = -pkin(3) + t281;
t72 = (-pkin(9) + t263) * t190 + t253;
t337 = t193 * t62 + t196 * t72;
t276 = t189 * t299;
t306 = qJ(3) * t276 + t168;
t50 = t210 + t306;
t344 = pkin(1) * t194;
t177 = t190 * t344;
t77 = -t189 * t298 + (t177 + (pkin(8) - qJ(4)) * t312) * qJD(2);
t14 = -qJD(5) * t337 - t193 * t77 + t196 * t50;
t29 = -t195 * t153 + t192 * t73 - t359;
t342 = t192 * t6;
t341 = t195 * t6;
t340 = t209 * t68;
t191 = qJ(3) + pkin(4);
t140 = pkin(5) * t196 + pkin(10) * t193 + t191;
t310 = t195 * t196;
t102 = t140 * t192 + t186 * t310;
t274 = t192 * t297;
t157 = qJ(3) * t278;
t60 = qJD(1) * t211 + t157;
t38 = t193 * t60 + t196 * t96;
t34 = pkin(10) * t278 + t38;
t339 = qJD(6) * t102 - t186 * t274 - t192 * t34 + t195 * t362;
t101 = t140 * t195 - t186 * t311;
t273 = t195 * t297;
t338 = -qJD(6) * t101 + t186 * t273 + t192 * t362 + t195 * t34;
t336 = pkin(8) * qJD(2);
t335 = t106 * t209;
t107 = (t192 * t197 + t194 * t310) * t304;
t334 = t107 * t68;
t125 = -t190 * t196 + t193 * t312;
t333 = t125 * t74;
t332 = t192 * t68;
t331 = t192 * t209;
t330 = t192 * t74;
t295 = qJD(6) * t192;
t28 = -qJD(6) * t223 - t111 * t295 - t192 * t153 - t195 * t73;
t329 = t193 * t28;
t328 = t193 * t29;
t327 = t195 * t68;
t326 = t195 * t209;
t325 = t195 * t74;
t324 = t196 * t29;
t323 = t28 * t192;
t322 = t28 * t196;
t321 = t29 * t195;
t320 = t74 * t196;
t319 = t110 * t111;
t318 = t114 * t194;
t317 = t237 * t171;
t128 = pkin(8) * t312 + t177;
t123 = t128 * qJD(2);
t316 = t123 * t194;
t185 = t189 ^ 2;
t314 = t185 * qJD(1) ^ 2;
t308 = -qJD(4) - t78;
t305 = qJ(3) * qJD(2);
t302 = qJD(2) * t193;
t294 = qJD(6) * t195;
t187 = t194 ^ 2;
t167 = t187 * t314;
t289 = -t171 ^ 2 - t167;
t188 = t197 ^ 2;
t286 = t188 * t314;
t285 = t197 * t314;
t115 = t190 * qJ(3) + t128;
t271 = t185 * t290;
t267 = t308 * t194;
t266 = t291 * t192;
t264 = -t110 + t300;
t262 = t198 * t313;
t260 = t26 * t279;
t259 = t171 * t278;
t258 = t193 * t279;
t255 = -0.2e1 * pkin(1) * t271;
t252 = t121 * t171 - t114;
t250 = t195 * t296 + t107;
t248 = t10 * t192 - t195 * t245;
t31 = pkin(10) * t313 + t337;
t126 = t190 * t193 + t284;
t91 = qJ(4) * t312 - t115;
t79 = t190 * pkin(4) - t91;
t41 = -pkin(5) * t125 + pkin(10) * t126 + t79;
t18 = t192 * t41 + t195 * t31;
t17 = -t192 * t31 + t195 * t41;
t244 = -t327 - t331;
t243 = -t193 * t25 + t196 * t26;
t37 = -t193 * t96 + t196 * t60;
t35 = -t193 * t72 + t196 * t62;
t240 = qJD(2) * t262;
t239 = -t114 * t190 - t123 * t171;
t238 = t185 * t194 * t270;
t122 = -pkin(8) * t277 + t166;
t236 = t153 - t259;
t90 = t190 * t153 + t171 * t276;
t233 = t291 * t294 - t330;
t232 = t291 * t295 + t325;
t231 = t126 * t192 + t195 * t313;
t87 = -t126 * t195 + t192 * t313;
t13 = t193 * t50 + t196 * t77 + t62 * t296 - t297 * t72;
t228 = t246 * t68;
t227 = t250 * t291;
t23 = -pkin(5) * t246 - t25;
t226 = pkin(10) * t74 + t23 * t291;
t224 = t193 * t246;
t113 = -pkin(8) * t256 + t149;
t208 = -qJD(6) * t248 + t1 * t195 - t192 * t2;
t207 = -t59 * qJD(5) + (-t186 * t299 - t194 * t59) * t304;
t206 = -t323 - t321 + (-t326 + t332) * qJD(6);
t205 = t232 - t354;
t204 = t228 - t233;
t203 = -t246 * t279 - t346;
t201 = t202 * t196;
t200 = t23 * t246 + t208;
t144 = t194 * t285;
t134 = -0.2e1 * t238;
t133 = 0.2e1 * t238;
t129 = t171 * t279;
t127 = t190 * t343 - t173;
t124 = -t167 + t286;
t119 = pkin(2) * t279 - t157;
t118 = (-t187 + t188) * t271;
t117 = t190 * t281 + t173;
t112 = 0.2e1 * t118;
t109 = t122 + t180;
t105 = t171 * t192 + t195 * t258;
t104 = t171 * t195 - t192 * t258;
t98 = -t129 + t256;
t97 = pkin(2) * t277 - t306;
t95 = qJD(1) * t262 + t157;
t93 = t154 + t121;
t88 = -pkin(2) * t171 + t358;
t85 = qJD(5) * t125 + t189 * t275;
t84 = -t190 * t297 + t193 * t277 - t257;
t83 = t113 + t151;
t81 = pkin(2) * t256 - t307;
t80 = t190 * t263 + t253;
t76 = t240 + t306;
t63 = qJD(1) * t240 + t307;
t57 = t171 * t198 + t348;
t55 = -pkin(5) * t111 - pkin(10) * t110;
t40 = qJD(6) * t231 + t192 * t276 + t85 * t195;
t39 = qJD(6) * t87 + t85 * t192 - t195 * t276;
t33 = -pkin(5) * t278 - t37;
t30 = -pkin(5) * t313 - t35;
t27 = t84 * pkin(5) - t85 * pkin(10) - t65;
t16 = t192 * t55 + t195 * t25;
t15 = -t192 * t25 + t195 * t55;
t12 = -pkin(5) * t276 - t14;
t11 = pkin(10) * t276 + t13;
t4 = -qJD(6) * t18 - t192 * t11 + t195 * t27;
t3 = qJD(6) * t17 + t195 * t11 + t192 * t27;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t133, t112, t90, t134, -t89, 0, t194 * t255 + t239, -t113 * t190 - t122 * t171 + t197 * t255 (t113 * t197 + t318 + (-t121 * t194 + t197 * t237) * qJD(2) + (t122 * t197 + t316 + (-t127 * t197 - t128 * t194) * qJD(2)) * qJD(1)) * t189, t113 * t128 - t114 * t127 + t121 * t122 + t123 * t237, t133, t90, -0.2e1 * t118, 0, t89, t134 (t103 * t301 - t197 * t81 + (t116 * t301 - t197 * t97) * qJD(1)) * t189 + t239 (t318 + t197 * t83 + (-t194 * t93 + t197 * t88) * qJD(2) + (t109 * t197 + t316 + (-t115 * t194 + t117 * t197) * qJD(2)) * qJD(1)) * t189, t109 * t171 + t83 * t190 + (-t103 * t299 - t194 * t81 + (-t116 * t299 - t194 * t97) * qJD(1)) * t189, t103 * t97 + t109 * t93 + t114 * t117 + t115 * t83 + t116 * t81 + t123 * t88, t134, t112, -t89, t133, t90, 0, -t65 * t171 - t52 * t190 + (t78 * t299 + t194 * t63 + (t194 * t76 + t299 * t92) * qJD(1)) * t189, t77 * t171 + t64 * t190 + (t78 * t301 - t197 * t63 + (-t197 * t76 + t301 * t92) * qJD(1)) * t189 (-t194 * t64 + t197 * t52 + (-t194 * t75 - t197 * t57) * qJD(2) + (-t194 * t77 + t197 * t65 + (-t194 * t91 - t197 * t80) * qJD(2)) * qJD(1)) * t189, t52 * t91 + t57 * t77 + t63 * t92 + t64 * t80 + t65 * t75 + t76 * t78, -t111 * t85 - t126 * t73, t110 * t85 + t111 * t84 + t125 * t73 - t126 * t74, t85 * qJD(5) + (-t111 * t299 + t73 * t194 + (-t126 * t299 + t194 * t85) * qJD(1)) * t189, -t110 * t84 + t333, -t84 * qJD(5) + (t110 * t299 + t74 * t194 + (t125 * t299 - t194 * t84) * qJD(1)) * t189 (t185 * t303 + t220) * t299, t14 * qJD(5) + t65 * t110 + t52 * t125 + t59 * t84 - t79 * t74 + (t25 * t299 + t8 * t194 + (t14 * t194 + t299 * t35) * qJD(1)) * t189, -t13 * qJD(5) + t65 * t111 + t52 * t126 + t59 * t85 + t79 * t73 + (-t26 * t299 + t230 * t194 + (-t13 * t194 - t299 * t337) * qJD(1)) * t189, t110 * t13 + t111 * t14 - t125 * t230 + t126 * t8 - t25 * t85 - t26 * t84 + t337 * t74 - t35 * t73, t13 * t26 + t14 * t25 - t230 * t337 + t35 * t8 - t52 * t79 - t59 * t65, -t209 * t40 - t28 * t87, t209 * t39 - t231 * t28 - t29 * t87 - t40 * t68, t125 * t28 - t209 * t84 + t291 * t40 - t74 * t87, -t231 * t29 + t39 * t68, t125 * t29 - t231 * t74 - t291 * t39 - t68 * t84, t291 * t84 + t333, t12 * t68 - t125 * t2 - t17 * t74 + t23 * t39 - t231 * t6 - t245 * t84 + t29 * t30 + t291 * t4, t1 * t125 - t10 * t84 - t12 * t209 + t18 * t74 + t23 * t40 - t28 * t30 - t291 * t3 + t6 * t87, t1 * t231 - t10 * t39 + t17 * t28 - t18 * t29 - t2 * t87 + t209 * t4 + t245 * t40 - t3 * t68, t1 * t18 + t10 * t3 + t12 * t23 + t17 * t2 - t245 * t4 + t30 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, -t124, t236, t144, -t98, 0, t314 * t344 + t252, pkin(1) * t285 - t113 - t317, 0, 0, -t144, t236, t124, 0, t98, t144 (-t103 * t194 + t119 * t197) * t304 + t252 ((-t121 + t93 - t305) * t194 + (-pkin(2) * qJD(2) + t358 - t88) * t197) * t304, t317 + t149 + 0.2e1 * t151 + (t103 * t197 + (t119 - t336) * t194) * t304, -t114 * pkin(2) + t83 * qJ(3) - t103 * t119 - t88 * t121 + t358 * t93, t144, -t124 (-qJD(2) + t171) * t279, -t144, t236, 0, t348 * t171 + (t308 * t197 + (-t95 - t336) * t194) * t304 + t283, -t96 * t171 + ((-qJ(4) * qJD(2) + t95) * t197 + t267) * t304 + t114 ((t75 + t96 + t305) * t194 + (-t348 + t57 - t347) * t197) * t304, -t52 * qJ(3) + t64 * t198 - t348 * t75 - t57 * t96 - t78 * t95, -t73 * t193 + t196 * t352 (-t73 - t222) * t196 + (-t74 - t352) * t193 (t111 - t302) * t278 - t201, t110 * t224 - t320 (-t110 - t300) * t278 + t351, -t197 * t216, -t348 * t110 - t191 * t74 + t207 * t193 - t196 * t355 - t37 * t246 - t25 * t278, -t348 * t111 + t191 * t73 + t193 * t355 + t207 * t196 + t38 * t246 + t26 * t278, -t110 * t38 - t111 * t37 + (t25 * t279 + t186 * t74 + t230 + (-t111 * t186 + t25) * qJD(5)) * t196 + (t260 + t186 * t73 + t8 + (-t110 * t186 + t26) * qJD(5)) * t193, -t191 * t52 - t25 * t37 - t26 * t38 + t348 * t59 + (-t8 * t193 - t230 * t196 + (-t193 * t26 - t196 * t25) * qJD(5)) * t186, t195 * t329 - (t193 * t295 - t250) * t209, -t335 + t334 + (t327 - t331) * t296 + (-t323 + t321 + (-t326 - t332) * qJD(6)) * t193, -t322 - t227 + (t232 + t354) * t193, -t192 * t328 + (-t193 * t294 - t251) * t68, -t324 + t349 + (t228 + t233) * t193, -t224 * t291 - t320, -t101 * t74 - t106 * t23 - t33 * t68 - t339 * t291 + (t2 + (t186 * t68 - t192 * t23) * qJD(5)) * t196 + (t186 * t29 - t23 * t294 + t245 * t246 - t342) * t193, t102 * t74 - t107 * t23 + t33 * t209 + t338 * t291 + (-t1 + (-t186 * t209 - t195 * t23) * qJD(5)) * t196 + (t10 * t246 - t186 * t28 + t23 * t295 - t341) * t193, t10 * t106 + t101 * t28 - t102 * t29 - t107 * t245 - t339 * t209 + t338 * t68 + t248 * t296 + (qJD(6) * t249 + t1 * t192 + t195 * t2) * t193, t1 * t102 + t101 * t2 - t23 * t33 + t339 * t245 + (t193 * t6 + t23 * t296) * t186 - t338 * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t144, t236, t289, t103 * t279 - t171 * t93 + t114, 0, 0, 0, 0, 0, 0, t289, t144, -t236, t75 * t171 + (t267 - t280) * t304 + t114, 0, 0, 0, 0, 0, 0, t171 * t110 - t153 * t193 - t201, t171 * t111 - t153 * t196 - t193 * t203, t193 * t353 + t212 * t196, -t59 * t171 + t360 * t196 + (-t246 * t26 - t8) * t193, 0, 0, 0, 0, 0, 0, t328 - (t104 - t274) * t291 + t204 * t196, -t329 - (-t105 - t273) * t291 + t205 * t196, -t104 * t209 + t105 * t68 + t196 * t206 - t244 * t297, -t10 * t105 + t104 * t245 - t193 * t345 + t200 * t196; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t153 + t259, t129 + t256, -t167 - t286 (-t197 * t75 + (t57 + t347) * t194) * t304 + t307, 0, 0, 0, 0, 0, 0, t264 * t278 - t351 (-t111 - t302) * t278 + t203 * t196, t212 * t193 - t196 * t353, -t230 * t193 + t8 * t196 + t243 * qJD(5) + (t194 * t243 + t197 * t59) * t304, 0, 0, 0, 0, 0, 0, t193 * t204 - t324 - t349, t193 * t205 - t227 + t322, t193 * t206 + t244 * t296 - t334 - t335, t10 * t107 + t106 * t245 + t200 * t193 + t196 * t345; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t319, -t110 ^ 2 + t111 ^ 2 (-t110 - t315) * qJD(5) + (t194 * t264 + t272) * t304, -t319, t212, t153, t59 * t111 + t260 - t269, -t59 * t110 - t360, 0, 0, -t291 * t326 - t323 (-t28 - t363) * t195 + (-t29 + t361) * t192, t195 * t291 ^ 2 - t111 * t209 - t330, t266 * t68 - t321, -t68 * t111 - t266 * t291 - t325, t291 * t111, -pkin(5) * t29 - t111 * t245 - t341 - t26 * t68 - (pkin(10) * t294 + t15) * t291 + t226 * t192, pkin(5) * t28 - t10 * t111 + t342 + t26 * t209 - (-pkin(10) * t295 - t16) * t291 + t226 * t195, -t15 * t209 + t16 * t68 + ((-t29 - t359) * pkin(10) + t356) * t195 + ((qJD(6) * t68 - t28) * pkin(10) + t357) * t192, -pkin(5) * t6 + pkin(10) * t208 - t10 * t16 + t15 * t245 - t23 * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t340, t209 ^ 2 - t68 ^ 2, -t28 + t363, t340, -t29 - t361, -t74, t209 * t23 - t357, t23 * t68 - t356, 0, 0;];
tauc_reg  = t7;
