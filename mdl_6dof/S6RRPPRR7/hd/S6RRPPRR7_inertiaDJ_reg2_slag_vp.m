% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPPRR7_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR7_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR7_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR7_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:20:59
% EndTime: 2019-03-09 09:21:13
% DurationCPUTime: 4.80s
% Computational Cost: add. (4067->362), mult. (9831->642), div. (0->0), fcn. (8772->8), ass. (0->226)
t240 = pkin(2) + pkin(3);
t190 = pkin(9) + t240;
t86 = sin(qJ(6));
t87 = sin(qJ(5));
t217 = t86 * t87;
t249 = t190 * t217;
t88 = sin(qJ(2));
t207 = qJ(3) * t88;
t91 = cos(qJ(2));
t248 = t240 * t91 + t207;
t80 = t86 ^ 2;
t89 = cos(qJ(6));
t82 = t89 ^ 2;
t210 = t80 + t82;
t247 = -0.1e1 + t210;
t212 = pkin(8) - qJ(4);
t84 = sin(pkin(6));
t218 = t84 * t91;
t148 = t212 * t218;
t205 = cos(pkin(6));
t90 = cos(qJ(5));
t49 = -t205 * t90 + t87 * t218;
t184 = t90 * t218;
t50 = t205 * t87 + t184;
t246 = -t49 * pkin(5) + t50 * pkin(10);
t157 = qJD(5) * t205;
t204 = qJD(2) * t88;
t68 = t84 * t204;
t26 = -qJD(5) * t184 + (-t157 + t68) * t87;
t76 = qJD(5) * t87;
t27 = -t90 * t157 + (t204 * t90 + t76 * t91) * t84;
t245 = t26 * pkin(5) - t27 * pkin(10);
t160 = qJD(6) * (t80 - t82);
t81 = t87 ^ 2;
t83 = t90 ^ 2;
t209 = t81 - t83;
t159 = t209 * qJD(5);
t128 = t190 * t91 + pkin(1);
t163 = t205 * pkin(9);
t168 = pkin(1) * t205;
t146 = t91 * t168;
t113 = -pkin(2) * t205 - t146;
t104 = -pkin(3) * t205 + t113;
t165 = t88 * t212;
t25 = t165 * t84 + t104;
t85 = qJ(3) + pkin(4);
t13 = t90 * (-t163 + t25) + t87 * (t85 * t88 + t128) * t84;
t219 = t84 * t88;
t11 = pkin(10) * t219 + t13;
t147 = t88 * t168;
t110 = qJ(3) * t205 + t147;
t103 = pkin(4) * t205 + t110;
t24 = t148 + t103;
t95 = t24 + t246;
t94 = t89 * t95;
t7 = -t86 * t11 + t94;
t214 = t89 * t11;
t8 = t86 * t95 + t214;
t139 = t7 * t86 - t8 * t89;
t117 = qJD(5) * t128;
t156 = t190 * t88;
t164 = t90 * t85;
t167 = t87 * t85;
t200 = qJD(3) * t90;
t243 = qJD(5) * (t90 * t212 + t167) - t200;
t23 = -qJD(4) * t219 + (t147 + t148) * qJD(2);
t100 = t163 - t104;
t98 = qJD(5) * t100;
t97 = -t87 * t23 + t90 * t98;
t4 = (t87 * t117 + t243 * t88 + ((-t164 - pkin(5)) * t91 + t90 * t156) * qJD(2)) * t84 - t97;
t244 = qJD(5) * t139 + t4;
t115 = t87 * t212 - t164;
t202 = qJD(3) * t87;
t242 = -qJD(5) * t115 + t202;
t241 = 0.2e1 * t84;
t93 = 0.2e1 * qJD(3);
t239 = pkin(5) * t87;
t238 = pkin(10) * t90;
t233 = t90 * pkin(5);
t29 = t86 * t219 - t50 * t89;
t203 = qJD(2) * t91;
t69 = t84 * t203;
t14 = qJD(6) * t29 + t27 * t86 - t69 * t89;
t232 = t14 * t89;
t192 = qJD(6) * t89;
t193 = qJD(6) * t86;
t15 = t27 * t89 + t50 * t193 + (t192 * t88 + t203 * t86) * t84;
t231 = t15 * t86;
t230 = t26 * t90;
t229 = t27 * t87;
t228 = t27 * t90;
t28 = -t89 * t219 - t50 * t86;
t227 = t28 * t86;
t226 = t28 * t89;
t225 = t29 * t86;
t224 = t29 * t89;
t187 = pkin(8) * t218;
t57 = t147 + t187;
t46 = t57 * qJD(2);
t223 = t46 * t88;
t222 = t49 * t90;
t221 = t50 * t87;
t220 = t190 * t90;
t216 = t87 * t26;
t215 = t87 * t89;
t213 = t89 * t90;
t208 = t81 + t83;
t206 = qJ(3) * t91;
t201 = qJD(3) * t88;
t199 = qJD(3) * t91;
t198 = qJD(4) * t91;
t197 = qJD(5) * t28;
t196 = qJD(5) * t29;
t195 = qJD(5) * t89;
t194 = qJD(5) * t90;
t191 = qJD(6) * t90;
t189 = -0.2e1 * t49 * t26;
t188 = pkin(8) * t219;
t186 = -0.2e1 * pkin(5) * qJD(6);
t185 = t87 * t219;
t183 = t86 * t220;
t182 = t190 * t213;
t181 = pkin(1) * t194;
t78 = t84 ^ 2;
t180 = t78 * t203;
t179 = qJD(5) * t49 * t86;
t178 = t49 * t195;
t177 = t82 * t194;
t176 = t190 * t76;
t175 = t89 * t194;
t174 = t190 * t194;
t173 = qJD(6) * t190 * t81;
t172 = t86 * t191;
t171 = t89 * t191;
t170 = t86 * t192;
t169 = t87 * t194;
t166 = t87 * t210;
t162 = t46 * t205;
t161 = qJD(2) * t85;
t158 = qJD(2) * t205;
t155 = t205 * qJD(3);
t154 = t90 * t69;
t153 = t81 * t170;
t152 = t88 * t180;
t151 = t86 * t175;
t150 = qJD(2) * t190;
t149 = qJD(5) * t190;
t145 = pkin(10) * t87 + t233;
t144 = t238 - t239;
t143 = -t14 + t179;
t142 = -t15 + t178;
t129 = t90 * t149;
t96 = t90 * t23 + t87 * t98;
t5 = (-t181 + (-t161 * t87 - t129) * t91 + (t150 * t87 - t242) * t88) * t84 - t96;
t6 = (-pkin(1) * t76 + (-t149 * t87 + t161 * t90) * t91 + (-t150 * t90 - t243) * t88) * t84 + t97;
t141 = -t5 * t90 - t6 * t87;
t140 = t7 * t89 + t8 * t86;
t138 = t91 * t158;
t137 = -pkin(2) * t91 - t207;
t118 = t90 * t128;
t99 = t87 * t100;
t12 = t99 + (-t115 * t88 + t118) * t84;
t136 = -t12 * t90 - t13 * t87;
t135 = t229 - t230;
t134 = -t225 + t226;
t133 = t225 + t226;
t119 = t145 + t85;
t116 = t89 * t119;
t35 = t116 + t183;
t36 = t119 * t86 - t182;
t132 = t35 * t89 + t36 * t86;
t131 = t35 * t86 - t36 * t89;
t130 = -t49 * t87 - t50 * t90;
t66 = pkin(1) * t138;
t127 = t66 + t155;
t45 = pkin(8) * t68 - t66;
t126 = t158 * t219;
t10 = -t99 + (-t118 + (-pkin(5) + t115) * t88) * t84;
t125 = t10 * t192 + t4 * t86;
t124 = t10 * t193 - t4 * t89;
t123 = t49 * t76 + t230;
t122 = t192 * t49 - t26 * t86;
t121 = t193 * t49 + t26 * t89;
t120 = (t167 + pkin(10)) * t91;
t52 = t193 * t87 - t175;
t53 = t195 * t87 + t172;
t54 = t192 * t87 + t194 * t86;
t112 = t122 + t197;
t111 = -t121 + t196;
t109 = t66 + (-t212 * t204 - t198) * t84;
t101 = t242 * t88;
t1 = t11 * t193 - qJD(6) * t94 - t89 * ((t90 * t117 + t101 + (-t156 * t87 + t120) * qJD(2)) * t84 + t96) - t86 * (t109 + t155 + t245);
t2 = -t86 * t96 + t89 * (t127 + t245) + (-t214 - t86 * (t103 + t246)) * qJD(6) + (-t86 * (t101 + t181) + (-t89 * qJD(4) + (-qJD(6) * t212 - t129) * t86) * t91 + (-t86 * t120 + (-t89 * t212 + t249) * t88) * qJD(2)) * t84;
t108 = -qJD(6) * t140 - t1 * t89 - t2 * t86;
t107 = qJD(5) * t136 + t141;
t106 = -t232 + t231 + (t224 + t227) * qJD(6);
t17 = -t86 * (qJD(5) * t144 + qJD(3)) - qJD(6) * t116 - t53 * t190;
t18 = t89 * qJD(3) - t36 * qJD(6) + (t144 * t89 - t249) * qJD(5);
t105 = -qJD(6) * t132 - t17 * t89 - t18 * t86;
t102 = qJD(5) * t10 + t108;
t77 = qJ(3) * t93;
t75 = 0.2e1 * t155;
t72 = t80 * t194;
t67 = -0.2e1 * t169;
t61 = -0.2e1 * t152;
t60 = 0.2e1 * t152;
t59 = t138 * t241;
t58 = -0.2e1 * t126;
t56 = t146 - t188;
t55 = -t76 * t86 + t171;
t48 = (-t88 ^ 2 + t91 ^ 2) * t78 * qJD(2);
t44 = 0.2e1 * t48;
t43 = t113 + t188;
t42 = (-pkin(1) + t137) * t84;
t41 = t110 + t187;
t39 = -qJD(5) * t185 + t154;
t38 = (-t194 * t88 - t203 * t87) * t84;
t37 = t155 - t45;
t34 = t160 * t87 - t151;
t33 = (-t201 + (pkin(2) * t88 - t206) * qJD(2)) * t84;
t32 = (pkin(1) + t248) * t84;
t31 = -t110 - t148;
t30 = t247 * t169;
t22 = (t201 + (-t240 * t88 + t206) * qJD(2)) * t84;
t20 = (qJD(2) * t165 + t198) * t84 - t127;
t3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t60, t44, t59, t61, t58, 0, -0.2e1 * pkin(1) * t204 * t78 - 0.2e1 * t162, -0.2e1 * pkin(1) * t180 + 0.2e1 * t205 * t45 (-t45 * t91 + t223 + (-t56 * t91 - t57 * t88) * qJD(2)) * t241, -0.2e1 * t45 * t57 - 0.2e1 * t46 * t56, t60, t59, -0.2e1 * t48, 0, 0.2e1 * t126, t61, -0.2e1 * t162 + 0.2e1 * (t204 * t42 - t33 * t91) * t84 (t37 * t91 + t223 + (-t41 * t88 + t43 * t91) * qJD(2)) * t241, 0.2e1 * t37 * t205 + 0.2e1 * (-t203 * t42 - t33 * t88) * t84, 0.2e1 * t33 * t42 + 0.2e1 * t37 * t41 + 0.2e1 * t43 * t46, t61, t44, t58, t60, t59, 0, -0.2e1 * t20 * t205 + 0.2e1 * (t203 * t32 + t22 * t88) * t84, 0.2e1 * t23 * t205 + 0.2e1 * (t204 * t32 - t22 * t91) * t84 (t20 * t91 - t23 * t88 + (-t25 * t91 - t31 * t88) * qJD(2)) * t241, 0.2e1 * t20 * t31 + 0.2e1 * t22 * t32 + 0.2e1 * t23 * t25, -0.2e1 * t50 * t27, 0.2e1 * t26 * t50 + 0.2e1 * t27 * t49 (-t203 * t50 + t27 * t88) * t241, t189 (t203 * t49 - t26 * t88) * t241, t60, 0.2e1 * t20 * t49 + 0.2e1 * t24 * t26 + 0.2e1 * (t12 * t203 + t6 * t88) * t84, 0.2e1 * t20 * t50 + 0.2e1 * t24 * t27 + 0.2e1 * (-t13 * t203 + t5 * t88) * t84, -0.2e1 * t12 * t27 - 0.2e1 * t13 * t26 - 0.2e1 * t49 * t5 + 0.2e1 * t50 * t6, 0.2e1 * t12 * t6 - 0.2e1 * t13 * t5 - 0.2e1 * t20 * t24, 0.2e1 * t29 * t15, -0.2e1 * t14 * t29 - 0.2e1 * t15 * t28, -0.2e1 * t15 * t49 + 0.2e1 * t26 * t29, 0.2e1 * t28 * t14, 0.2e1 * t14 * t49 - 0.2e1 * t26 * t28, t189, 0.2e1 * t10 * t14 - 0.2e1 * t2 * t49 + 0.2e1 * t26 * t7 + 0.2e1 * t28 * t4, -0.2e1 * t1 * t49 + 0.2e1 * t10 * t15 - 0.2e1 * t26 * t8 + 0.2e1 * t29 * t4, 0.2e1 * t1 * t28 - 0.2e1 * t14 * t8 - 0.2e1 * t15 * t7 - 0.2e1 * t2 * t29, -0.2e1 * t1 * t8 + 0.2e1 * t10 * t4 + 0.2e1 * t2 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, 0, -t68, 0, -t46, t45, 0, 0, 0, t69, 0, 0, t68, 0, -t46 (qJD(2) * t137 + t199) * t84, -t45 + t75, -pkin(2) * t46 + qJ(3) * t37 + qJD(3) * t41, 0, 0, -t68, 0, t69, 0, t75 + t109, t23 (t248 * qJD(2) - t199) * t84, -qJ(3) * t20 - qJD(3) * t31 - t23 * t240, t194 * t50 - t229, t216 - t228 + (-t221 - t222) * qJD(5), t38, t123, -t39, 0, t190 * t87 * t69 - qJD(3) * t49 - t20 * t90 + t26 * t85 + (t219 * t220 - t24 * t87) * qJD(5), t190 * t154 - qJD(3) * t50 + t20 * t87 + t27 * t85 + (-t185 * t190 - t24 * t90) * qJD(5), -t135 * t190 + (-t130 * t190 - t136) * qJD(5) - t141, qJD(3) * t24 - t107 * t190 - t20 * t85, -t15 * t215 + t29 * t52, t133 * t194 + (t232 + t231 + (t224 - t227) * qJD(6)) * t87 (t15 + t178) * t90 + (-t121 - t196) * t87, -t14 * t217 - t28 * t54 (-t14 - t179) * t90 + (-t122 + t197) * t87, t123, -t18 * t49 + t26 * t35 + (t2 + (-t10 * t86 - t190 * t28) * qJD(5)) * t90 + (-qJD(5) * t7 - t14 * t190 - t125) * t87, -t17 * t49 - t26 * t36 + (t1 + (-t10 * t89 - t190 * t29) * qJD(5)) * t90 + (qJD(5) * t8 - t15 * t190 + t124) * t87, -t14 * t36 - t15 * t35 + t17 * t28 - t18 * t29 + t140 * t194 + (-qJD(6) * t139 - t1 * t86 + t2 * t89) * t87, -t1 * t36 - t17 * t8 + t18 * t7 + t2 * t35 - (t10 * t194 + t4 * t87) * t190; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, t77, 0, 0, 0, 0, 0, 0, t93, 0, 0, t77, 0.2e1 * t169, -0.2e1 * t159, 0, t67, 0, 0, -0.2e1 * t76 * t85 + 0.2e1 * t200, -0.2e1 * t194 * t85 - 0.2e1 * t202, 0, t85 * t93, 0.2e1 * t169 * t82 - 0.2e1 * t153, -0.4e1 * t151 * t87 + 0.2e1 * t160 * t81, 0.2e1 * t87 * t172 + 0.2e1 * t195 * t209, 0.2e1 * t169 * t80 + 0.2e1 * t153, -0.2e1 * t159 * t86 + 0.2e1 * t171 * t87, t67, 0.2e1 * t89 * t173 + 0.2e1 * t18 * t90 + 0.2e1 * (-t35 + 0.2e1 * t183) * t76, -0.2e1 * t86 * t173 + 0.2e1 * t17 * t90 + 0.2e1 * (t36 + 0.2e1 * t182) * t76, 0.2e1 * t132 * t194 + 0.2e1 * (-qJD(6) * t131 - t17 * t86 + t18 * t89) * t87, 0.2e1 * t169 * t190 ^ 2 - 0.2e1 * t17 * t36 + 0.2e1 * t18 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, 0, t46, 0, 0, 0, 0, 0, 0, 0, 0, -t69, t23, 0, 0, 0, 0, 0, 0, t38, -t39, qJD(5) * t130 + t135, t107, 0, 0, 0, 0, 0, 0, t112 * t90 - t143 * t87, t111 * t90 - t142 * t87, t106 * t90 + t134 * t76, t102 * t90 + t244 * t87; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t208 * t192, t208 * t193, 0, t131 * t76 + (t105 - 0.2e1 * t176) * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t69, t68, 0, t22, 0, 0, 0, 0, 0, 0, t39, t38, -t216 - t228 + (-t221 + t222) * qJD(5), -t5 * t87 + t6 * t90 + (-t12 * t87 + t13 * t90) * qJD(5), 0, 0, 0, 0, 0, 0, t112 * t87 + t143 * t90, t111 * t87 + t142 * t90, t106 * t87 - t134 * t194, t102 * t87 - t244 * t90; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t105 * t87 + (-t131 * t90 - t190 * t209) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t247 * t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t30; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, 0, -t26, t69, t6, t5, 0, 0, t192 * t29 + t231, -qJD(6) * t133 - t86 * t14 + t15 * t89, -t122, t193 * t28 - t232, t121, 0, -pkin(5) * t14 + pkin(10) * t122 + t124, -pkin(5) * t15 - pkin(10) * t121 + t125, pkin(10) * t106 + t108, -pkin(5) * t4 + pkin(10) * t108; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194, 0, t76, 0, t174, -t176, 0, 0, t34, 0.4e1 * t170 * t87 - t177 + t72, t55, -t34, -t53, 0 (-pkin(10) * t213 + (pkin(5) * t89 - t190 * t86) * t87) * qJD(6) + (t145 * t86 + t182) * qJD(5) (t144 * t86 - t190 * t215) * qJD(6) + (t145 * t89 - t183) * qJD(5), t105, pkin(5) * t174 + pkin(10) * t105; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t194, t76, 0, 0, 0, 0, 0, 0, 0, 0, t52, t54, -qJD(5) * t166 (-pkin(10) * t166 - t233) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76, -t194, 0, 0, 0, 0, 0, 0, 0, 0, -t53, -t55, t72 + t177 (t210 * t238 - t239) * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t170, -0.2e1 * t160, 0, -0.2e1 * t170, 0, 0, t86 * t186, t89 * t186, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t15, 0, -t14, t26, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t52, 0, t54, -t76, t18, t17, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t55, t53, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t54, t52, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t192, 0, -t193, 0, -pkin(10) * t192, pkin(10) * t193, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t3;
