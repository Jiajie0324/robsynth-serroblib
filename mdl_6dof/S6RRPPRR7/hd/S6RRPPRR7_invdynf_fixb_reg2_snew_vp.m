% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPPRR7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 11:09
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPPRR7_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR7_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR7_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR7_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR7_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR7_invdynf_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 11:08:57
% EndTime: 2019-05-06 11:09:04
% DurationCPUTime: 7.82s
% Computational Cost: add. (20486->341), mult. (47964->388), div. (0->0), fcn. (33757->10), ass. (0->225)
t2139 = sin(qJ(1));
t2142 = cos(qJ(2));
t2135 = sin(pkin(6));
t2144 = qJD(1) ^ 2;
t2204 = t2135 ^ 2 * t2144;
t2184 = t2142 ^ 2 * t2204;
t2136 = cos(pkin(6));
t2127 = t2136 * qJD(1) + qJD(2);
t2217 = t2127 ^ 2;
t2072 = t2217 + t2184;
t2126 = qJDD(1) * t2136 + qJDD(2);
t2138 = sin(qJ(2));
t2177 = t2138 * t2142 * t2204;
t2086 = t2126 + t2177;
t2045 = t2072 * t2142 + t2086 * t2138;
t2143 = cos(qJ(1));
t2231 = t2045 * t2143;
t2194 = t2136 * t2142;
t2195 = t2136 * t2138;
t2200 = t2135 * t2138;
t2186 = qJD(1) * t2200;
t2188 = qJDD(1) * t2135;
t2090 = -qJD(2) * t2186 + t2142 * t2188;
t2179 = t2127 * t2186;
t2058 = t2090 - t2179;
t2203 = t2135 * t2058;
t2237 = -t2072 * t2195 + t2086 * t2194 + t2203;
t2249 = -t2139 * t2237 - t2231;
t2232 = t2045 * t2139;
t2248 = t2143 * t2237 - t2232;
t2125 = t2138 ^ 2 * t2204;
t2094 = -t2125 - t2184;
t2199 = t2135 * t2142;
t2185 = qJD(1) * t2199;
t2178 = t2127 * t2185;
t2227 = (qJD(1) * qJD(2) * t2142 + qJDD(1) * t2138) * t2135;
t2224 = -t2178 + t2227;
t2226 = t2090 + t2179;
t2161 = t2138 * t2226 - t2142 * t2224;
t2016 = -t2135 * t2094 + t2136 * t2161;
t2035 = t2138 * t2224 + t2142 * t2226;
t2247 = t2016 * t2139 - t2035 * t2143;
t1995 = t2016 * t2143 + t2035 * t2139;
t2087 = t2126 - t2177;
t2225 = t2125 + t2217;
t2044 = -t2142 * t2087 + t2138 * t2225;
t2235 = t2044 * t2143;
t2061 = t2178 + t2227;
t2202 = t2135 * t2061;
t2241 = t2087 * t2195 + t2194 * t2225 + t2202;
t2246 = -t2139 * t2241 - t2235;
t2236 = t2044 * t2139;
t2245 = t2143 * t2241 - t2236;
t2197 = t2136 * t2061;
t2242 = t2087 * t2200 + t2199 * t2225 - t2197;
t2198 = t2136 * t2058;
t2238 = -t2072 * t2200 + t2086 * t2199 - t2198;
t2014 = t2136 * t2094 + t2135 * t2161;
t2080 = qJDD(5) + t2227;
t2141 = cos(qJ(5));
t2214 = sin(qJ(5));
t2076 = t2127 * t2214 + t2141 * t2185;
t2110 = qJD(5) + t2186;
t2137 = sin(qJ(6));
t2140 = cos(qJ(6));
t2052 = -t2076 * t2137 - t2140 * t2110;
t2075 = -t2141 * t2127 + t2185 * t2214;
t2158 = -t2141 * t2090 - t2126 * t2214;
t2040 = t2075 * qJD(5) + t2158;
t2165 = -t2140 * t2040 - t2137 * t2080;
t2073 = -qJD(6) + t2075;
t2190 = qJD(6) - t2073;
t2150 = t2052 * t2190 + t2165;
t2054 = -t2076 * t2140 + t2110 * t2137;
t2164 = -t2137 * t2040 + t2140 * t2080;
t2223 = t2054 * t2190 - t2164;
t2222 = t2052 ^ 2;
t2221 = t2054 ^ 2;
t2220 = t2073 ^ 2;
t2219 = t2075 ^ 2;
t2218 = t2076 ^ 2;
t2105 = t2110 ^ 2;
t2216 = 2 * qJD(3);
t2215 = -2 * qJD(4);
t2213 = pkin(4) + qJ(3);
t2212 = g(3) * t2142;
t2211 = t2090 * pkin(2);
t2210 = t2136 * g(3);
t2209 = qJD(1) * t2135;
t2208 = t2054 * t2052;
t2207 = t2075 * t2076;
t2205 = t2127 * t2142;
t2193 = t2215 - (pkin(4) * t2138 + pkin(9) * t2142) * t2209;
t2192 = qJD(5) - t2110;
t2191 = qJD(5) + t2110;
t2189 = qJD(6) + t2073;
t2115 = t2139 * g(1) - g(2) * t2143;
t2083 = pkin(8) * t2135 * t2144 + qJDD(1) * pkin(1) + t2115;
t2095 = pkin(2) * t2179;
t2155 = t2090 * pkin(3) - qJ(4) * t2184 + qJDD(4) - t2095 + t2210;
t2082 = -pkin(3) * t2127 - qJ(4) * t2186;
t2181 = (t2216 + t2082) * t2138;
t1980 = (pkin(2) + pkin(9)) * t2090 + t2213 * t2227 + (t2083 + (t2181 + (-pkin(9) * t2138 + t2142 * t2213) * t2127) * qJD(1)) * t2135 + t2155;
t2085 = (-pkin(2) * t2142 - qJ(3) * t2138) * t2209;
t2116 = -g(1) * t2143 - g(2) * t2139;
t2084 = -pkin(1) * t2144 + pkin(8) * t2188 + t2116;
t2180 = -t2083 * t2194 + t2138 * t2084;
t2154 = -t2126 * pkin(2) - t2217 * qJ(3) + qJDD(3) + t2180;
t2149 = -pkin(3) * t2086 - t2227 * qJ(4) + t2154;
t2187 = qJ(4) * t2205;
t1988 = -t2217 * pkin(4) - t2126 * pkin(9) + (t2212 + (t2187 + (t2085 + t2193) * t2138) * qJD(1)) * t2135 + t2149;
t1961 = t2214 * t1980 + t2141 * t1988;
t2043 = -g(3) * t2200 + t2083 * t2195 + t2142 * t2084;
t2183 = t2221 + t2222;
t2182 = -t2105 - t2218;
t2176 = t2090 * t2214 - t2141 * t2126;
t2063 = -t2135 * t2083 - t2210;
t2047 = -pkin(5) * t2075 + pkin(10) * t2076;
t1953 = -pkin(5) * t2105 + pkin(10) * t2080 + t2047 * t2075 + t1961;
t2010 = -t2217 * pkin(2) + t2126 * qJ(3) + t2085 * t2185 + t2127 * t2216 + t2043;
t2145 = -pkin(3) * t2184 - t2090 * qJ(4) + t2127 * t2082 + t2010;
t1984 = t2126 * pkin(4) - pkin(9) * t2217 + t2185 * t2193 + t2145;
t2025 = -t2076 * t2191 - t2176;
t1966 = (-t2110 * t2075 - t2040) * pkin(10) + t1984 + t2025 * pkin(5);
t1945 = -t1953 * t2137 + t1966 * t2140;
t1946 = t1953 * t2140 + t1966 * t2137;
t1937 = -t1945 * t2137 + t1946 * t2140;
t2157 = t2141 * t1980 - t1988 * t2214;
t2146 = -t2080 * pkin(5) - t2105 * pkin(10) - t2076 * t2047 - t2157;
t1933 = t2141 * t1937 + t2146 * t2214;
t1936 = t1945 * t2140 + t1946 * t2137;
t2175 = -t1933 * t2142 + t1936 * t2138;
t1948 = t2141 * t1961 - t2157 * t2214;
t2174 = -t1948 * t2142 + t1984 * t2138;
t1991 = -t2054 * t2189 + t2164;
t1992 = t2052 * t2189 + t2165;
t1968 = t1991 * t2140 - t1992 * t2137;
t1957 = t2141 * t1968 - t2183 * t2214;
t1967 = t1991 * t2137 + t1992 * t2140;
t2173 = -t1957 * t2142 + t1967 * t2138;
t2152 = -t2076 * qJD(5) + qJDD(6) - t2176;
t2002 = t2152 - t2208;
t2012 = -t2220 - t2222;
t1978 = -t2002 * t2137 + t2012 * t2140;
t1963 = t2141 * t1978 + t2214 * t2223;
t1977 = t2002 * t2140 + t2012 * t2137;
t2172 = -t1963 * t2142 + t1977 * t2138;
t2003 = -t2152 - t2208;
t2028 = -t2220 - t2221;
t1982 = t2003 * t2140 - t2028 * t2137;
t1965 = t2141 * t1982 - t2150 * t2214;
t1981 = t2003 * t2137 + t2028 * t2140;
t2171 = -t1965 * t2142 + t1981 * t2138;
t2026 = t2076 * t2192 + t2176;
t2148 = -t2075 * t2192 - t2158;
t1994 = t2141 * t2026 - t2148 * t2214;
t2037 = -t2218 - t2219;
t2170 = -t1994 * t2142 + t2037 * t2138;
t1997 = t2185 * t2215 + t2145;
t1998 = (t2212 + (t2187 + (t2215 + t2085) * t2138) * qJD(1)) * t2135 + t2149;
t2169 = t1997 * t2138 - t1998 * t2142;
t2041 = -t2105 - t2219;
t2147 = t2080 - t2207;
t2005 = t2141 * t2041 - t2147 * t2214;
t2168 = -t2005 * t2142 + t2025 * t2138;
t2039 = -t2207 - t2080;
t2009 = t2141 * t2039 - t2182 * t2214;
t2027 = t2075 * t2191 + t2158;
t2167 = -t2009 * t2142 + t2027 * t2138;
t2013 = (qJD(1) * t2085 * t2138 + t2212) * t2135 + t2154;
t2166 = t2010 * t2138 - t2013 * t2142;
t2042 = -g(3) * t2199 - t2180;
t2163 = t2042 * t2142 + t2043 * t2138;
t2160 = -t2087 * t2138 - t2142 * t2225;
t2159 = t2072 * t2138 - t2086 * t2142;
t2107 = -qJDD(1) * t2139 - t2143 * t2144;
t2106 = qJDD(1) * t2143 - t2139 * t2144;
t2023 = t2136 * t2159 - t2203;
t2022 = t2136 * t2160 - t2202;
t2020 = t2135 * t2159 + t2198;
t2019 = t2135 * t2160 + t2197;
t2011 = -qJ(3) * t2061 - 0.2e1 * qJD(3) * t2186 + t2063 + t2095 - t2211;
t2008 = t2039 * t2214 + t2141 * t2182;
t2007 = -t2042 * t2138 + t2043 * t2142;
t2004 = t2041 * t2214 + t2141 * t2147;
t2001 = -t2135 * t2063 + t2136 * t2163;
t2000 = t2136 * t2063 + t2135 * t2163;
t1999 = t2211 + t2227 * qJ(3) + (t2083 + (qJ(3) * t2205 + t2181) * qJD(1)) * t2135 + t2155;
t1993 = t2026 * t2214 + t2141 * t2148;
t1987 = t2009 * t2138 + t2027 * t2142;
t1985 = t2010 * t2142 + t2013 * t2138;
t1983 = t2005 * t2138 + t2025 * t2142;
t1976 = t1994 * t2138 + t2037 * t2142;
t1975 = -t2135 * t2011 + t2136 * t2166;
t1974 = t2136 * t2011 + t2135 * t2166;
t1973 = t2135 * t2008 + t2136 * t2167;
t1972 = -t2136 * t2008 + t2135 * t2167;
t1971 = t1997 * t2142 + t1998 * t2138;
t1970 = t2135 * t2004 + t2136 * t2168;
t1969 = -t2136 * t2004 + t2135 * t2168;
t1964 = t1982 * t2214 + t2141 * t2150;
t1962 = t1978 * t2214 - t2141 * t2223;
t1960 = t2135 * t1993 + t2136 * t2170;
t1959 = -t2136 * t1993 + t2135 * t2170;
t1956 = t1968 * t2214 + t2141 * t2183;
t1955 = t2135 * t1999 + t2136 * t2169;
t1954 = -t2136 * t1999 + t2135 * t2169;
t1951 = t1965 * t2138 + t1981 * t2142;
t1950 = t1963 * t2138 + t1977 * t2142;
t1949 = t1957 * t2138 + t1967 * t2142;
t1947 = t1961 * t2214 + t2141 * t2157;
t1944 = t2135 * t1964 + t2136 * t2171;
t1943 = -t2136 * t1964 + t2135 * t2171;
t1942 = t1948 * t2138 + t1984 * t2142;
t1941 = t2135 * t1962 + t2136 * t2172;
t1940 = -t2136 * t1962 + t2135 * t2172;
t1939 = t2135 * t1956 + t2136 * t2173;
t1938 = -t2136 * t1956 + t2135 * t2173;
t1935 = t2135 * t1947 + t2136 * t2174;
t1934 = -t2136 * t1947 + t2135 * t2174;
t1932 = t1937 * t2214 - t2141 * t2146;
t1931 = t1933 * t2138 + t1936 * t2142;
t1930 = t2135 * t1932 + t2136 * t2175;
t1929 = -t2136 * t1932 + t2135 * t2175;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2107, -t2106, 0, -t2115 * t2139 + t2116 * t2143, 0, 0, 0, 0, 0, 0, t2249, -t2022 * t2139 + t2235, -t2247, -t2001 * t2139 + t2007 * t2143, 0, 0, 0, 0, 0, 0, t2249, -t2247, t2246, -t1975 * t2139 + t1985 * t2143, 0, 0, 0, 0, 0, 0, t2246, -t2023 * t2139 + t2231, t2247, -t1955 * t2139 + t1971 * t2143, 0, 0, 0, 0, 0, 0, -t1970 * t2139 + t1983 * t2143, -t1973 * t2139 + t1987 * t2143, -t1960 * t2139 + t1976 * t2143, -t1935 * t2139 + t1942 * t2143, 0, 0, 0, 0, 0, 0, -t1941 * t2139 + t1950 * t2143, -t1944 * t2139 + t1951 * t2143, -t1939 * t2139 + t1949 * t2143, -t1930 * t2139 + t1931 * t2143; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2106, t2107, 0, t2115 * t2143 + t2116 * t2139, 0, 0, 0, 0, 0, 0, t2248, t2022 * t2143 + t2236, t1995, t2001 * t2143 + t2007 * t2139, 0, 0, 0, 0, 0, 0, t2248, t1995, t2245, t1975 * t2143 + t1985 * t2139, 0, 0, 0, 0, 0, 0, t2245, t2023 * t2143 + t2232, -t1995, t1955 * t2143 + t1971 * t2139, 0, 0, 0, 0, 0, 0, t1970 * t2143 + t1983 * t2139, t1973 * t2143 + t1987 * t2139, t1960 * t2143 + t1976 * t2139, t1935 * t2143 + t1942 * t2139, 0, 0, 0, 0, 0, 0, t1941 * t2143 + t1950 * t2139, t1944 * t2143 + t1951 * t2139, t1939 * t2143 + t1949 * t2139, t1930 * t2143 + t1931 * t2139; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2238, t2019, t2014, t2000, 0, 0, 0, 0, 0, 0, t2238, t2014, t2242, t1974, 0, 0, 0, 0, 0, 0, t2242, t2020, -t2014, t1954, 0, 0, 0, 0, 0, 0, t1969, t1972, t1959, t1934, 0, 0, 0, 0, 0, 0, t1940, t1943, t1938, t1929; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2144, -qJDD(1), 0, t2116, 0, 0, 0, 0, 0, 0, -t2045, t2044, t2035, t2007, 0, 0, 0, 0, 0, 0, -t2045, t2035, -t2044, t1985, 0, 0, 0, 0, 0, 0, -t2044, t2045, -t2035, t1971, 0, 0, 0, 0, 0, 0, t1983, t1987, t1976, t1942, 0, 0, 0, 0, 0, 0, t1950, t1951, t1949, t1931; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2144, 0, t2115, 0, 0, 0, 0, 0, 0, t2237, t2022, t2016, t2001, 0, 0, 0, 0, 0, 0, t2237, t2016, t2241, t1975, 0, 0, 0, 0, 0, 0, t2241, t2023, -t2016, t1955, 0, 0, 0, 0, 0, 0, t1970, t1973, t1960, t1935, 0, 0, 0, 0, 0, 0, t1941, t1944, t1939, t1930; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2238, t2019, t2014, t2000, 0, 0, 0, 0, 0, 0, t2238, t2014, t2242, t1974, 0, 0, 0, 0, 0, 0, t2242, t2020, -t2014, t1954, 0, 0, 0, 0, 0, 0, t1969, t1972, t1959, t1934, 0, 0, 0, 0, 0, 0, t1940, t1943, t1938, t1929; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2072, -t2087, t2226, t2043, 0, 0, 0, 0, 0, 0, -t2072, t2226, t2087, t2010, 0, 0, 0, 0, 0, 0, t2087, t2072, -t2226, t1997, 0, 0, 0, 0, 0, 0, t2025, t2027, t2037, t1984, 0, 0, 0, 0, 0, 0, t1977, t1981, t1967, t1936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2086, -t2225, -t2224, t2042, 0, 0, 0, 0, 0, 0, t2086, -t2224, t2225, -t2013, 0, 0, 0, 0, 0, 0, t2225, -t2086, t2224, -t1998, 0, 0, 0, 0, 0, 0, -t2005, -t2009, -t1994, -t1948, 0, 0, 0, 0, 0, 0, -t1963, -t1965, -t1957, -t1933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2058, t2061, t2094, t2063, 0, 0, 0, 0, 0, 0, -t2058, t2094, -t2061, t2011, 0, 0, 0, 0, 0, 0, -t2061, t2058, -t2094, -t1999, 0, 0, 0, 0, 0, 0, -t2004, -t2008, -t1993, -t1947, 0, 0, 0, 0, 0, 0, -t1962, -t1964, -t1956, -t1932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2072, t2226, t2087, t2010, 0, 0, 0, 0, 0, 0, t2087, t2072, -t2226, t1997, 0, 0, 0, 0, 0, 0, t2025, t2027, t2037, t1984, 0, 0, 0, 0, 0, 0, t1977, t1981, t1967, t1936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2058, t2094, -t2061, t2011, 0, 0, 0, 0, 0, 0, -t2061, t2058, -t2094, -t1999, 0, 0, 0, 0, 0, 0, -t2004, -t2008, -t1993, -t1947, 0, 0, 0, 0, 0, 0, -t1962, -t1964, -t1956, -t1932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2086, t2224, -t2225, t2013, 0, 0, 0, 0, 0, 0, -t2225, t2086, -t2224, t1998, 0, 0, 0, 0, 0, 0, t2005, t2009, t1994, t1948, 0, 0, 0, 0, 0, 0, t1963, t1965, t1957, t1933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2225, t2086, -t2224, t1998, 0, 0, 0, 0, 0, 0, t2005, t2009, t1994, t1948, 0, 0, 0, 0, 0, 0, t1963, t1965, t1957, t1933; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2087, -t2072, t2226, -t1997, 0, 0, 0, 0, 0, 0, -t2025, -t2027, -t2037, -t1984, 0, 0, 0, 0, 0, 0, -t1977, -t1981, -t1967, -t1936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2061, -t2058, t2094, t1999, 0, 0, 0, 0, 0, 0, t2004, t2008, t1993, t1947, 0, 0, 0, 0, 0, 0, t1962, t1964, t1956, t1932; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2041, t2039, t2026, t1961, 0, 0, 0, 0, 0, 0, t1978, t1982, t1968, t1937; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2147, t2182, t2148, t2157, 0, 0, 0, 0, 0, 0, -t2223, t2150, t2183, -t2146; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2025, t2027, t2037, t1984, 0, 0, 0, 0, 0, 0, t1977, t1981, t1967, t1936; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2012, t2003, t1991, t1946; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2002, t2028, t1992, t1945; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2223, -t2150, -t2183, t2146;];
f_new_reg  = t1;
