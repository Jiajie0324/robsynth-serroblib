% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRPPRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 11:09
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRPPRR7_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR7_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR7_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR7_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR7_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR7_invdynJ_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 11:07:05
% EndTime: 2019-05-06 11:07:31
% DurationCPUTime: 6.94s
% Computational Cost: add. (23775->466), mult. (55323->617), div. (0->0), fcn. (38661->10), ass. (0->284)
t260 = cos(qJ(2));
t252 = sin(pkin(6));
t249 = t252 ^ 2;
t262 = qJD(1) ^ 2;
t338 = t249 * t262;
t242 = t260 ^ 2 * t338;
t253 = cos(pkin(6));
t244 = t253 * qJD(1) + qJD(2);
t363 = t244 ^ 2;
t177 = t242 + t363;
t256 = sin(qJ(2));
t380 = t260 * t338;
t223 = t256 * t380;
t243 = qJDD(1) * t253 + qJDD(2);
t199 = t223 + t243;
t342 = t199 * t256;
t376 = pkin(8) * (t177 * t260 + t342);
t200 = -t223 + t243;
t187 = t260 * t200;
t205 = t242 - t363;
t326 = qJD(1) * t256;
t307 = t252 * t326;
t320 = qJDD(1) * t252;
t202 = -qJD(2) * t307 + t260 * t320;
t295 = t244 * t307;
t371 = t202 + t295;
t334 = t253 * t371;
t336 = t252 * t256;
t390 = t252 * t187 + t205 * t336 + t334;
t332 = t253 * t260;
t333 = t253 * t256;
t388 = pkin(1) * (-t177 * t333 + t199 * t332);
t387 = qJ(3) * t371;
t254 = sin(qJ(6));
t255 = sin(qJ(5));
t259 = cos(qJ(5));
t325 = qJD(1) * t260;
t306 = t252 * t325;
t184 = t255 * t244 + t259 * t306;
t226 = qJD(5) + t307;
t258 = cos(qJ(6));
t150 = -t184 * t254 - t258 * t226;
t152 = -t184 * t258 + t226 * t254;
t125 = t152 * t150;
t299 = t255 * t202 - t259 * t243;
t137 = qJD(5) * t184 + t299;
t136 = qJDD(6) - t137;
t374 = -t125 + t136;
t386 = t254 * t374;
t183 = -t244 * t259 + t255 * t306;
t147 = t183 * t184;
t319 = qJDD(1) * t256;
t201 = (qJD(2) * t325 + t319) * t252;
t193 = qJDD(5) + t201;
t373 = -t147 + t193;
t385 = t255 * t373;
t384 = t256 * t371;
t372 = t202 - t295;
t383 = t256 * t372;
t382 = t258 * t374;
t381 = t259 * t373;
t309 = -t183 * qJD(5) + t259 * t202 + t255 * t243;
t343 = t183 * t226;
t378 = t309 - t343;
t311 = t256 ^ 2 * t338;
t369 = t363 + t311;
t377 = pkin(1) * (t200 * t333 + t332 * t369);
t353 = qJ(4) - pkin(8);
t144 = -pkin(5) * t183 + pkin(10) * t184;
t222 = t226 ^ 2;
t257 = sin(qJ(1));
t261 = cos(qJ(1));
t303 = t257 * g(1) - g(2) * t261;
t357 = pkin(8) * t252;
t196 = qJDD(1) * pkin(1) + t262 * t357 + t303;
t195 = -pkin(3) * t244 - qJ(4) * t307;
t298 = ((2 * qJD(3)) + t195) * t256;
t355 = t253 * g(3);
t302 = -pkin(2) * t295 + t355;
t354 = pkin(4) + qJ(3);
t360 = pkin(2) + pkin(9);
t368 = t202 * pkin(3) - qJ(4) * t242 + qJDD(4);
t57 = t360 * t202 + t354 * t201 + (t196 + (t298 + (-t256 * pkin(9) + t260 * t354) * t244) * qJD(1)) * t252 + t302 + t368;
t167 = t196 * t332;
t367 = t243 * pkin(2) + t363 * qJ(3) - qJDD(3);
t294 = t167 + t367;
t273 = pkin(3) * t199 + t201 * qJ(4) + t294;
t291 = g(1) * t261 + g(2) * t257;
t197 = -pkin(1) * t262 + pkin(8) * t320 - t291;
t329 = t256 * t197;
t267 = -t273 + t329;
t292 = pkin(4) * t256 + pkin(9) * t260;
t356 = g(3) * t260;
t330 = t256 * qJ(3);
t289 = -pkin(2) * t260 - t330;
t327 = qJD(1) * t252;
t198 = t289 * t327;
t339 = t244 * t260;
t364 = qJ(4) * t339 + (-(2 * qJD(4)) + t198) * t256;
t65 = -t363 * pkin(4) - t243 * pkin(9) + (t356 + (-t292 * t307 + t364) * qJD(1)) * t252 + t267;
t37 = t255 * t57 + t259 * t65;
t30 = -pkin(5) * t222 + pkin(10) * t193 + t144 * t183 + t37;
t324 = qJD(3) * t244;
t224 = 0.2e1 * t324;
t143 = -g(3) * t336 + t196 * t333 + t260 * t197;
t279 = pkin(2) * t363 - t243 * qJ(3) - t198 * t306 - t143;
t297 = 0.2e1 * qJD(4) * t327;
t263 = pkin(3) * t242 - t244 * t195 + t260 * t297 + t279;
t87 = -t202 * qJ(4) + t224 - t263;
t63 = t243 * pkin(4) - pkin(9) * t363 - t292 * t380 + t87;
t45 = t63 + t378 * pkin(10) + (-t184 * t226 - t137) * pkin(5);
t17 = t254 * t30 - t258 * t45;
t18 = t254 * t45 + t258 * t30;
t11 = t254 * t17 + t258 * t18;
t212 = t244 * t306;
t162 = t212 + t201;
t282 = -t202 * pkin(2) - t302;
t271 = t201 * qJ(3) - t282;
t308 = t244 * t325;
t280 = qJ(3) * t308 + t196;
t305 = qJD(3) * t326;
t370 = (t280 + 0.2e1 * t305) * t252 + t271;
t178 = -qJD(6) + t183;
t300 = -t258 * t193 - t254 * t309;
t79 = (qJD(6) + t178) * t152 + t300;
t160 = (t319 + (qJD(2) + t244) * t325) * t252;
t207 = -t242 + t311;
t190 = t253 * t207;
t366 = t252 * (t160 * t260 + t383) + t190;
t112 = t252 * (t198 * t326 + t356) - t294 + t329;
t361 = pkin(2) + pkin(3);
t275 = t260 * t361 + pkin(1) + t330;
t335 = t252 * t260;
t365 = t199 * t336 + (t363 - t311) * t335;
t148 = t150 ^ 2;
t149 = t152 ^ 2;
t175 = t178 ^ 2;
t181 = t183 ^ 2;
t182 = t184 ^ 2;
t36 = t255 * t65 - t259 * t57;
t29 = -t193 * pkin(5) - t222 * pkin(10) - t144 * t184 + t36;
t359 = -pkin(5) * t29 + pkin(10) * t11;
t358 = pkin(5) * t255;
t25 = t254 * t29;
t93 = t125 + t136;
t352 = t254 * t93;
t351 = t255 * t63;
t120 = t309 + t343;
t272 = (qJD(5) - t226) * t184 + t299;
t86 = -t255 * t120 + t259 * t272;
t350 = t256 * t86;
t27 = t258 * t29;
t349 = t258 * t93;
t348 = t259 * t63;
t347 = qJ(3) * t177;
t134 = t147 + t193;
t346 = t134 * t259;
t345 = t178 * t254;
t344 = t178 * t258;
t341 = t226 * t255;
t340 = t226 * t259;
t337 = t252 * t196;
t331 = t255 * t134;
t161 = (t319 + (qJD(2) - t244) * t325) * t252;
t208 = -t242 - t311;
t328 = pkin(1) * (-t252 * t208 + (-t161 * t260 + t384) * t253) + (t161 * t256 + t260 * t371) * t357;
t323 = qJD(6) - t178;
t321 = pkin(3) + t360;
t286 = -t254 * t193 + t258 * t309;
t269 = t150 * t323 + t286;
t122 = -t149 - t175;
t60 = -t122 * t254 - t349;
t318 = pkin(5) * t269 + pkin(10) * t60 + t25;
t110 = -t175 - t148;
t55 = t110 * t258 - t386;
t80 = -t152 * t323 - t300;
t317 = pkin(5) * t80 + pkin(10) * t55 - t27;
t316 = t148 + t149;
t315 = -t182 - t222;
t313 = t255 * t125;
t312 = t259 * t125;
t310 = t256 * t147;
t100 = -qJD(6) * t150 - t286;
t135 = t150 * t178;
t83 = t100 - t135;
t50 = t254 * t83 - t258 * t79;
t301 = pkin(5) * t316 + pkin(10) * t50 + t11;
t296 = pkin(5) * t259 + t354;
t293 = g(3) * t335 - t167;
t290 = t198 * t327 + t197;
t10 = -t17 * t258 + t18 * t254;
t19 = t255 * t37 - t259 * t36;
t20 = t255 * t36 + t259 * t37;
t283 = pkin(1) - t289;
t142 = t293 + t329;
t277 = (t142 * t256 + t143 * t260) * t252;
t276 = t249 * t256 * t308 - t253 * t223;
t105 = t224 - t279;
t140 = t201 * t336 + t276;
t139 = t202 * t335 - t276;
t270 = t256 * t354 + t260 * t321 + pkin(1);
t268 = (qJ(3) * t339 + t298) * qJD(1);
t265 = t271 + t368;
t88 = (qJD(1) * t364 + t356) * t252 + t267;
t229 = -0.2e1 * t252 * t305;
t218 = t253 * t243;
t191 = qJ(3) * t200;
t163 = t337 + t355;
t157 = -t212 + t201;
t154 = -t182 + t222;
t153 = t181 - t222;
t146 = t182 - t181;
t141 = -t222 - t181;
t132 = -t149 + t175;
t131 = t148 - t175;
t129 = -t181 - t182;
t128 = -pkin(2) * t161 + t387;
t127 = (-t183 * t255 - t184 * t259) * t226;
t124 = t149 - t148;
t123 = t253 * t161 + t365;
t116 = (-qJD(5) - t226) * t184 - t299;
t114 = t184 * t340 + t255 * t309;
t113 = -t137 * t259 + t183 * t341;
t109 = t157 * t361 - t387;
t108 = -t153 * t255 - t346;
t107 = -t154 * t259 - t385;
t104 = -t255 * t315 - t346;
t103 = t259 * t315 - t331;
t99 = -qJD(6) * t152 - t300;
t98 = t141 * t259 - t385;
t97 = t255 * t141 + t381;
t96 = (t150 * t258 - t152 * t254) * t178;
t95 = (t150 * t254 + t152 * t258) * t178;
t91 = pkin(2) * t199 - t112 - t347;
t90 = pkin(2) * t369 + t105 + t191;
t89 = (t196 + t268) * t252 + t265;
t85 = t116 * t255 + t259 * t378;
t84 = t120 * t259 + t255 * t272;
t82 = t100 + t135;
t74 = t100 * t258 + t152 * t345;
t73 = t100 * t254 - t152 * t344;
t72 = -t150 * t344 - t254 * t99;
t71 = -t150 * t345 + t258 * t99;
t70 = t136 * t259 - t255 * t96;
t69 = t131 * t258 - t352;
t68 = -t132 * t254 + t382;
t67 = t131 * t254 + t349;
t66 = t132 * t258 + t386;
t64 = -pkin(2) * t112 + qJ(3) * t105;
t62 = t361 * t369 + t191 + t87;
t61 = -t199 * t361 + t347 + t88;
t59 = t122 * t258 - t352;
t54 = t110 * t254 + t382;
t52 = -t255 * t74 + t312;
t51 = -t255 * t72 - t312;
t49 = -t254 * t82 + t258 * t80;
t48 = -t254 * t79 - t258 * t83;
t47 = t254 * t80 + t258 * t82;
t43 = -t255 * t69 - t259 * t79;
t42 = -t255 * t68 + t259 * t83;
t41 = -t255 * t269 + t259 * t60;
t40 = t255 * t60 + t259 * t269;
t39 = -t255 * t80 + t259 * t55;
t38 = t255 * t55 + t259 * t80;
t34 = t124 * t259 - t255 * t49;
t33 = -t255 * t316 + t259 * t50;
t32 = t255 * t50 + t259 * t316;
t31 = qJ(3) * t87 - t361 * t88;
t24 = -t104 * t321 - t354 * t378 - t351;
t23 = t116 * t354 - t321 * t98 + t348;
t22 = -pkin(10) * t59 + t27;
t21 = -pkin(10) * t54 + t25;
t14 = -pkin(5) * t59 + t18;
t13 = -pkin(5) * t54 + t17;
t12 = t129 * t354 - t321 * t86 - t20;
t8 = -pkin(10) * t48 - t10;
t7 = t11 * t259 + t255 * t29;
t6 = t11 * t255 - t259 * t29;
t5 = -t20 * t321 + t354 * t63;
t4 = -t259 * t14 - t255 * t22 - t321 * t41 + t354 * t59;
t3 = -t259 * t13 - t255 * t21 - t321 * t39 + t354 * t54;
t2 = -t255 * t8 + t296 * t48 - t321 * t33;
t1 = -t321 * t7 + (pkin(10) * t255 + t296) * t10;
t9 = [0, 0, 0, 0, 0, qJDD(1), t303, t291, 0, 0, t140, t366, t123, t139, t390, t218, -t253 * t142 + t388 + (pkin(1) * t372 + t260 * t163 - t376) * t252, (-t143 + pkin(1) * (-t200 * t256 - t260 * t369)) * t253 + (-t256 * t163 - pkin(1) * t162 + pkin(8) * (t256 * t369 - t187)) * t252, t277 + t328, pkin(1) * (t252 * t163 + (-t142 * t260 + t143 * t256) * t253) + pkin(8) * t277, t140, t123, -t366, t218, -t334 + (-t205 * t256 - t187) * t252, t139, t253 * t91 + t388 + (t260 * t370 + t283 * t372 - t376) * t252, t253 * t128 + (t260 * (-pkin(2) * t208 + t105) + (-qJ(3) * t208 + t290 * t256 + t293 - t367) * t256) * t252 + t328, t253 * t90 + t377 + (pkin(8) * t187 + t283 * t160 + (-pkin(8) * t369 + t370) * t256) * t252, (t64 + pkin(1) * (t105 * t256 - t112 * t260)) * t253 + (pkin(8) * (t105 * t260 + t112 * t256) - t283 * (-qJ(3) * t162 + t229 + t282 - t337)) * t252, t139, t190 + (t162 * t260 + t383) * t252, t390, t140, t253 * t157 + t365, t218, t253 * t62 + t377 + ((t252 * t268 + t353 * t369 + t265 + t337) * t256 + t275 * t162 - t353 * t187) * t252, (t61 + pkin(1) * (t177 * t256 - t199 * t260)) * t253 + (-qJ(4) * t342 + t260 * (-qJ(4) * t177 + t229 - t265) + t376 + (-t195 * t326 - t280) * t335 - t275 * t372) * t252, (t109 + pkin(1) * (t157 * t260 - t384)) * t253 + ((-pkin(8) * t371 - 0.2e1 * t324 + (t371 + t202) * qJ(4) + t263) * t260 + t275 * t208 + ((-qJ(4) * qJD(1) * t244 - g(3)) * t335 + t353 * t157 + t273 + (t297 - t290) * t256) * t256) * t252, (t31 + pkin(1) * (t256 * t87 - t260 * t88)) * t253 + (t275 * t89 - t353 * (t256 * t88 + t260 * t87)) * t252, t253 * t114 + (t310 + t260 * (-t184 * t341 + t259 * t309)) * t252, t253 * t85 + (t256 * t146 + t260 * (t116 * t259 - t255 * t378)) * t252, t253 * t107 + (-t256 * t120 + t260 * (t154 * t255 - t381)) * t252, t253 * t113 + (-t310 + t260 * (t137 * t255 + t183 * t340)) * t252, t253 * t108 + (t256 * t272 + t260 * (-t153 * t259 + t331)) * t252, t193 * t336 + t253 * t127 + (-t183 * t259 + t184 * t255) * t226 * t335, (t23 + pkin(1) * (t116 * t256 - t260 * t98)) * t253 + (t256 * (-qJ(4) * t98 - t36) + t260 * (-qJ(4) * t116 - t351) + pkin(8) * (t116 * t260 + t256 * t98) + t270 * t97) * t252, (t24 + pkin(1) * (-t104 * t260 - t256 * t378)) * t253 + (t256 * (-qJ(4) * t104 - t37) + t260 * (qJ(4) * t378 - t348) + pkin(8) * (t104 * t256 - t260 * t378) + t270 * t103) * t252, (t12 + pkin(1) * (t129 * t256 - t260 * t86)) * t253 + (-qJ(4) * t350 + t260 * (-qJ(4) * t129 + t19) + pkin(8) * (t129 * t260 + t350) + t270 * t84) * t252, (t5 + pkin(1) * (-t20 * t260 + t256 * t63)) * t253 + (t19 * t270 - t353 * (t20 * t256 + t260 * t63)) * t252, t253 * t52 + (t256 * t73 + t260 * (-t259 * t74 - t313)) * t252, t253 * t34 + (t256 * t47 + t260 * (-t124 * t255 - t259 * t49)) * t252, t253 * t42 + (t256 * t66 + t260 * (-t255 * t83 - t259 * t68)) * t252, t253 * t51 + (t256 * t71 + t260 * (-t259 * t72 + t313)) * t252, t253 * t43 + (t256 * t67 + t260 * (t255 * t79 - t259 * t69)) * t252, t253 * t70 + (t256 * t95 + t260 * (-t136 * t255 - t259 * t96)) * t252, (t3 + pkin(1) * (t256 * t54 - t260 * t39)) * t253 + (t256 * (-qJ(4) * t39 + t317) + t260 * (-qJ(4) * t54 + t255 * t13 - t259 * t21) + pkin(8) * (t256 * t39 + t260 * t54) + t270 * t38) * t252, (t4 + pkin(1) * (t256 * t59 - t260 * t41)) * t253 + (t256 * (-qJ(4) * t41 + t318) + t260 * (-qJ(4) * t59 + t255 * t14 - t259 * t22) + pkin(8) * (t256 * t41 + t260 * t59) + t270 * t40) * t252, (t2 + pkin(1) * (t256 * t48 - t260 * t33)) * t253 + (t256 * (-qJ(4) * t33 + t301) + t260 * (-t259 * t8 + (-qJ(4) - t358) * t48) + pkin(8) * (t256 * t33 + t260 * t48) + t270 * t32) * t252, (t1 + pkin(1) * (t10 * t256 - t260 * t7)) * t253 + ((-t353 * t7 + t359) * t256 + (pkin(10) * t259 - t353 - t358) * t260 * t10 + t270 * t6) * t252; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t223, t207, t161, t223, t371, t243, -t142, -t143, 0, 0, -t223, t161, -t207, t243, -t371, t223, t91, t128, t90, t64, t223, t207, t371, -t223, t157, t243, t62, t61, t109, t31, t114, t85, t107, t113, t108, t127, t23, t24, t12, t5, t52, t34, t42, t51, t43, t70, t3, t4, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199, t161, -t369, t112, 0, 0, 0, 0, 0, 0, -t369, t199, -t157, t88, 0, 0, 0, 0, 0, 0, t98, t104, t86, t20, 0, 0, 0, 0, 0, 0, t39, t41, t33, t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t162, -t372, t208, t89, 0, 0, 0, 0, 0, 0, t97, t103, t84, t19, 0, 0, 0, 0, 0, 0, t38, t40, t32, t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147, t146, -t120, -t147, t272, t193, -t36, -t37, 0, 0, t73, t47, t66, t71, t67, t95, t317, t318, t301, t359; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, t124, t83, -t125, -t79, t136, -t17, -t18, 0, 0;];
tauJ_reg  = t9;
