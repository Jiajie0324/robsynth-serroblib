% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RPPRPR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:22
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RPPRPR5_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR5_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR5_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRPR5_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRPR5_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRPR5_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:22:26
% EndTime: 2019-05-05 14:22:29
% DurationCPUTime: 2.89s
% Computational Cost: add. (10450->248), mult. (21479->258), div. (0->0), fcn. (13004->8), ass. (0->148)
t1291 = sin(qJ(4));
t1319 = qJD(1) * t1291;
t1274 = qJD(6) + t1319;
t1327 = qJD(6) + t1274;
t1297 = qJD(1) ^ 2;
t1292 = sin(qJ(1));
t1295 = cos(qJ(1));
t1271 = -t1295 * g(1) - t1292 * g(2);
t1300 = -qJDD(1) * qJ(2) - 0.2e1 * qJD(2) * qJD(1) - t1271;
t1320 = pkin(1) + qJ(3);
t1246 = t1297 * t1320 - qJDD(3) + t1300;
t1287 = sin(pkin(9));
t1288 = cos(pkin(9));
t1294 = cos(qJ(4));
t1318 = qJD(1) * t1294;
t1257 = -t1288 * qJD(4) + t1287 * t1318;
t1259 = qJD(4) * t1287 + t1288 * t1318;
t1290 = sin(qJ(6));
t1293 = cos(qJ(6));
t1233 = t1293 * t1257 + t1259 * t1290;
t1326 = t1233 ^ 2;
t1235 = -t1257 * t1290 + t1259 * t1293;
t1325 = t1235 ^ 2;
t1256 = t1257 ^ 2;
t1324 = t1259 ^ 2;
t1323 = t1274 ^ 2;
t1322 = 2 * qJD(3);
t1321 = -2 * qJD(5);
t1317 = t1233 * t1235;
t1316 = t1257 * t1259;
t1285 = t1291 ^ 2;
t1315 = t1285 * t1297;
t1314 = qJD(6) - t1274;
t1286 = t1294 ^ 2;
t1313 = t1285 + t1286;
t1312 = t1291 * qJDD(1);
t1311 = t1294 * qJDD(1);
t1310 = t1257 * t1319;
t1309 = t1259 * t1319;
t1308 = qJD(4) * t1319;
t1307 = t1291 * t1294 * t1297;
t1277 = qJD(4) * t1318;
t1261 = t1277 + t1312;
t1262 = -t1308 + t1311;
t1289 = t1297 * pkin(7);
t1270 = t1292 * g(1) - t1295 * g(2);
t1301 = t1297 * qJ(2) - qJDD(2) + t1270;
t1298 = qJDD(1) * t1320 + t1301;
t1215 = t1261 * pkin(4) - t1262 * qJ(5) - t1289 + (t1322 + (pkin(4) * t1294 + qJ(5) * t1291) * qJD(4)) * qJD(1) + t1298;
t1239 = -qJDD(1) * pkin(7) - t1246;
t1232 = -t1294 * g(3) + t1291 * t1239;
t1296 = qJD(4) ^ 2;
t1302 = t1297 * (pkin(4) * t1291 - qJ(5) * t1294);
t1220 = -t1296 * pkin(4) + qJDD(4) * qJ(5) - t1291 * t1302 + t1232;
t1189 = t1287 * t1215 + t1288 * t1220 + t1257 * t1321;
t1247 = t1288 * qJDD(4) - t1262 * t1287;
t1248 = qJDD(4) * t1287 + t1262 * t1288;
t1306 = t1293 * t1247 - t1290 * t1248;
t1228 = t1261 - t1316;
t1227 = -t1248 - t1310;
t1188 = t1288 * t1215 - t1287 * t1220 + t1259 * t1321;
t1231 = g(3) * t1291 + t1239 * t1294;
t1305 = -qJDD(6) - t1261;
t1304 = -t1290 * t1247 - t1293 * t1248;
t1303 = pkin(5) * t1319 - pkin(8) * t1259;
t1219 = qJDD(4) * pkin(4) + qJ(5) * t1296 - t1294 * t1302 - qJDD(5) + t1231;
t1245 = qJD(1) * t1322 + t1298;
t1273 = -t1286 * t1297 - t1296;
t1272 = -t1296 - t1315;
t1269 = -qJDD(4) - t1307;
t1268 = qJDD(4) - t1307;
t1267 = t1313 * t1297;
t1266 = qJDD(1) * t1292 + t1295 * t1297;
t1265 = qJDD(1) * t1295 - t1292 * t1297;
t1264 = t1313 * qJDD(1);
t1263 = -0.2e1 * t1308 + t1311;
t1260 = 0.2e1 * t1277 + t1312;
t1251 = qJDD(1) * pkin(1) + t1301;
t1250 = pkin(1) * t1297 + t1300;
t1249 = -t1315 - t1324;
t1244 = t1269 * t1294 - t1273 * t1291;
t1243 = -t1268 * t1291 + t1272 * t1294;
t1242 = t1269 * t1291 + t1273 * t1294;
t1241 = t1268 * t1294 + t1272 * t1291;
t1238 = -t1289 + t1245;
t1236 = -t1315 - t1256;
t1229 = -t1261 - t1316;
t1226 = t1248 - t1310;
t1225 = t1247 + t1309;
t1224 = -t1247 + t1309;
t1222 = -t1256 - t1324;
t1221 = -t1323 - t1325;
t1217 = t1229 * t1288 - t1249 * t1287;
t1216 = t1229 * t1287 + t1249 * t1288;
t1212 = -t1323 - t1326;
t1211 = -t1231 * t1291 + t1232 * t1294;
t1210 = t1231 * t1294 + t1232 * t1291;
t1209 = -t1228 * t1287 + t1236 * t1288;
t1208 = t1228 * t1288 + t1236 * t1287;
t1207 = t1305 - t1317;
t1206 = -t1305 - t1317;
t1205 = t1225 * t1288 - t1227 * t1287;
t1204 = t1225 * t1287 + t1227 * t1288;
t1203 = -t1325 - t1326;
t1202 = t1217 * t1294 + t1226 * t1291;
t1201 = t1217 * t1291 - t1226 * t1294;
t1200 = t1209 * t1294 + t1224 * t1291;
t1199 = t1209 * t1291 - t1224 * t1294;
t1198 = t1233 * t1314 + t1304;
t1197 = -t1233 * t1327 - t1304;
t1196 = -t1235 * t1314 + t1306;
t1195 = t1235 * t1327 - t1306;
t1194 = pkin(5) * t1247 + pkin(8) * t1256 - t1259 * t1303 + t1219;
t1193 = t1205 * t1294 + t1222 * t1291;
t1192 = t1205 * t1291 - t1222 * t1294;
t1191 = t1207 * t1293 - t1221 * t1290;
t1190 = t1207 * t1290 + t1221 * t1293;
t1187 = -t1206 * t1290 + t1212 * t1293;
t1186 = t1206 * t1293 + t1212 * t1290;
t1185 = -t1256 * pkin(5) + t1247 * pkin(8) - t1303 * t1319 + t1189;
t1184 = pkin(5) * t1228 + pkin(8) * t1227 + t1188;
t1183 = t1196 * t1293 - t1198 * t1290;
t1182 = t1196 * t1290 + t1198 * t1293;
t1181 = -t1190 * t1287 + t1191 * t1288;
t1180 = t1190 * t1288 + t1191 * t1287;
t1179 = -t1188 * t1287 + t1189 * t1288;
t1178 = t1188 * t1288 + t1189 * t1287;
t1177 = -t1186 * t1287 + t1187 * t1288;
t1176 = t1186 * t1288 + t1187 * t1287;
t1175 = t1179 * t1294 - t1219 * t1291;
t1174 = t1179 * t1291 + t1219 * t1294;
t1173 = t1181 * t1294 + t1197 * t1291;
t1172 = t1181 * t1291 - t1197 * t1294;
t1171 = t1184 * t1290 + t1185 * t1293;
t1170 = t1184 * t1293 - t1185 * t1290;
t1169 = t1177 * t1294 + t1195 * t1291;
t1168 = t1177 * t1291 - t1195 * t1294;
t1167 = -t1182 * t1287 + t1183 * t1288;
t1166 = t1182 * t1288 + t1183 * t1287;
t1165 = t1167 * t1294 + t1203 * t1291;
t1164 = t1167 * t1291 - t1203 * t1294;
t1163 = -t1170 * t1290 + t1171 * t1293;
t1162 = t1170 * t1293 + t1171 * t1290;
t1161 = -t1162 * t1287 + t1163 * t1288;
t1160 = t1162 * t1288 + t1163 * t1287;
t1159 = t1161 * t1294 - t1194 * t1291;
t1158 = t1161 * t1291 + t1194 * t1294;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, -t1266, -t1265, 0, -t1270 * t1292 + t1271 * t1295, 0, 0, 0, 0, 0, 0, 0, t1266, t1265, -t1250 * t1295 - t1251 * t1292, 0, 0, 0, 0, 0, 0, 0, t1265, -t1266, -t1245 * t1292 - t1246 * t1295, 0, 0, 0, 0, 0, 0, t1241 * t1295 - t1260 * t1292, t1242 * t1295 - t1263 * t1292, -t1264 * t1295 + t1267 * t1292, t1210 * t1295 - t1238 * t1292, 0, 0, 0, 0, 0, 0, t1199 * t1295 - t1208 * t1292, t1201 * t1295 - t1216 * t1292, t1192 * t1295 - t1204 * t1292, t1174 * t1295 - t1178 * t1292, 0, 0, 0, 0, 0, 0, t1168 * t1295 - t1176 * t1292, t1172 * t1295 - t1180 * t1292, t1164 * t1295 - t1166 * t1292, t1158 * t1295 - t1160 * t1292; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t1265, -t1266, 0, t1270 * t1295 + t1271 * t1292, 0, 0, 0, 0, 0, 0, 0, -t1265, t1266, -t1250 * t1292 + t1251 * t1295, 0, 0, 0, 0, 0, 0, 0, t1266, t1265, t1245 * t1295 - t1246 * t1292, 0, 0, 0, 0, 0, 0, t1241 * t1292 + t1260 * t1295, t1242 * t1292 + t1263 * t1295, -t1264 * t1292 - t1267 * t1295, t1210 * t1292 + t1238 * t1295, 0, 0, 0, 0, 0, 0, t1199 * t1292 + t1208 * t1295, t1201 * t1292 + t1216 * t1295, t1192 * t1292 + t1204 * t1295, t1174 * t1292 + t1178 * t1295, 0, 0, 0, 0, 0, 0, t1168 * t1292 + t1176 * t1295, t1172 * t1292 + t1180 * t1295, t1164 * t1292 + t1166 * t1295, t1158 * t1292 + t1160 * t1295; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1243, t1244, 0, t1211, 0, 0, 0, 0, 0, 0, t1200, t1202, t1193, t1175, 0, 0, 0, 0, 0, 0, t1169, t1173, t1165, t1159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1297, -qJDD(1), 0, t1271, 0, 0, 0, 0, 0, 0, 0, t1297, qJDD(1), -t1250, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1297, -t1246, 0, 0, 0, 0, 0, 0, t1241, t1242, -t1264, t1210, 0, 0, 0, 0, 0, 0, t1199, t1201, t1192, t1174, 0, 0, 0, 0, 0, 0, t1168, t1172, t1164, t1158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1297, 0, t1270, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1297, t1251, 0, 0, 0, 0, 0, 0, 0, t1297, qJDD(1), t1245, 0, 0, 0, 0, 0, 0, t1260, t1263, -t1267, t1238, 0, 0, 0, 0, 0, 0, t1208, t1216, t1204, t1178, 0, 0, 0, 0, 0, 0, t1176, t1180, t1166, t1160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1243, t1244, 0, t1211, 0, 0, 0, 0, 0, 0, t1200, t1202, t1193, t1175, 0, 0, 0, 0, 0, 0, t1169, t1173, t1165, t1159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1243, t1244, 0, t1211, 0, 0, 0, 0, 0, 0, t1200, t1202, t1193, t1175, 0, 0, 0, 0, 0, 0, t1169, t1173, t1165, t1159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1297, -qJDD(1), t1250, 0, 0, 0, 0, 0, 0, 0, -qJDD(1), t1297, t1246, 0, 0, 0, 0, 0, 0, -t1241, -t1242, t1264, -t1210, 0, 0, 0, 0, 0, 0, -t1199, -t1201, -t1192, -t1174, 0, 0, 0, 0, 0, 0, -t1168, -t1172, -t1164, -t1158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1297, -t1251, 0, 0, 0, 0, 0, 0, 0, -t1297, -qJDD(1), -t1245, 0, 0, 0, 0, 0, 0, -t1260, -t1263, t1267, -t1238, 0, 0, 0, 0, 0, 0, -t1208, -t1216, -t1204, -t1178, 0, 0, 0, 0, 0, 0, -t1176, -t1180, -t1166, -t1160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t1243, t1244, 0, t1211, 0, 0, 0, 0, 0, 0, t1200, t1202, t1193, t1175, 0, 0, 0, 0, 0, 0, t1169, t1173, t1165, t1159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1297, -qJDD(1), -t1245, 0, 0, 0, 0, 0, 0, -t1260, -t1263, t1267, -t1238, 0, 0, 0, 0, 0, 0, -t1208, -t1216, -t1204, -t1178, 0, 0, 0, 0, 0, 0, -t1176, -t1180, -t1166, -t1160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1297, -t1246, 0, 0, 0, 0, 0, 0, t1241, t1242, -t1264, t1210, 0, 0, 0, 0, 0, 0, t1199, t1201, t1192, t1174, 0, 0, 0, 0, 0, 0, t1168, t1172, t1164, t1158; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1272, t1269, -t1312, t1232, 0, 0, 0, 0, 0, 0, t1209, t1217, t1205, t1179, 0, 0, 0, 0, 0, 0, t1177, t1181, t1167, t1161; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1268, t1273, -t1311, t1231, 0, 0, 0, 0, 0, 0, -t1224, -t1226, -t1222, t1219, 0, 0, 0, 0, 0, 0, -t1195, -t1197, -t1203, t1194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1260, t1263, -t1267, t1238, 0, 0, 0, 0, 0, 0, t1208, t1216, t1204, t1178, 0, 0, 0, 0, 0, 0, t1176, t1180, t1166, t1160; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1236, t1229, t1225, t1189, 0, 0, 0, 0, 0, 0, t1187, t1191, t1183, t1163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1228, t1249, t1227, t1188, 0, 0, 0, 0, 0, 0, t1186, t1190, t1182, t1162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1224, t1226, t1222, -t1219, 0, 0, 0, 0, 0, 0, t1195, t1197, t1203, -t1194; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1212, t1207, t1196, t1171; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1206, t1221, t1198, t1170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1195, t1197, t1203, -t1194;];
f_new_reg  = t1;
