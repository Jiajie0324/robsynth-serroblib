% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPPRPR5_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR5_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR5_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRPR5_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:49:21
% EndTime: 2019-03-09 01:49:27
% DurationCPUTime: 1.91s
% Computational Cost: add. (1411->194), mult. (3018->353), div. (0->0), fcn. (2615->6), ass. (0->111)
t127 = sin(qJ(6));
t128 = cos(qJ(6));
t55 = sin(pkin(9));
t56 = cos(pkin(9));
t68 = -t127 * t55 + t128 * t56;
t95 = qJD(6) * t127;
t96 = qJD(6) * t128;
t26 = t55 * t95 - t56 * t96;
t60 = cos(qJ(4));
t132 = t26 * t60;
t59 = sin(qJ(4));
t24 = t68 * t59;
t25 = t68 * t60;
t53 = t59 ^ 2;
t54 = t60 ^ 2;
t131 = (t53 - t54) * qJD(4);
t130 = pkin(4) * t60;
t129 = t59 * pkin(4);
t103 = t128 * t55;
t32 = t127 * t56 + t103;
t27 = t32 * qJD(6);
t126 = t27 * t59;
t125 = t27 * t60;
t124 = t68 * t27;
t123 = t32 * t26;
t57 = -pkin(7) + qJ(2);
t122 = t57 * t60;
t121 = t59 * t57;
t58 = pkin(1) + qJ(3);
t120 = pkin(8) + qJ(5);
t41 = t56 * t121;
t79 = -t60 * qJ(5) + t129;
t69 = t79 + t58;
t20 = t55 * t69 + t41;
t51 = t55 ^ 2;
t52 = t56 ^ 2;
t119 = t51 + t52;
t117 = qJD(2) * t59;
t116 = qJD(5) * t59;
t115 = t54 * qJD(2);
t114 = t58 * qJD(3);
t50 = t59 * qJD(4);
t113 = t60 * qJD(2);
t112 = t60 * qJD(4);
t111 = qJ(2) * qJD(2);
t110 = t55 * t121;
t109 = t56 * t122;
t108 = t32 * t112;
t107 = t55 * t50;
t106 = t56 * t50;
t105 = t56 * t112;
t104 = t59 * t112;
t100 = -t55 * t57 + pkin(5);
t99 = pkin(5) * t55 - t57;
t98 = t119 * t60;
t97 = qJD(5) * t127;
t94 = t128 * qJD(5);
t93 = t119 * qJD(5);
t92 = -0.2e1 * t104;
t43 = 0.2e1 * t104;
t91 = t55 * t106;
t90 = -t60 * qJD(5) + qJD(3);
t87 = 0.2e1 * t93;
t86 = 0.2e1 * t131;
t85 = t128 * t50;
t84 = t127 * t50;
t81 = t120 * t127;
t80 = qJ(5) * t59 + t130;
t10 = -t55 * t84 + t56 * t85 + t125;
t78 = -t10 * t68 - t27 * t25;
t12 = -t55 * t85 - t56 * t84 - t132;
t23 = t32 * t60;
t77 = -t32 * t12 + t26 * t23;
t67 = -t55 * t117 + t56 * t90;
t14 = (-t55 * t122 + t56 * t80) * qJD(4) + t67;
t66 = t56 * t117 + t55 * t90;
t15 = (t55 * t80 + t109) * qJD(4) + t66;
t76 = -t14 * t56 - t15 * t55;
t75 = -t14 * t55 + t15 * t56;
t19 = t56 * t69 - t110;
t74 = -t19 * t55 + t20 * t56;
t73 = t120 * t103;
t72 = -t26 * t59 + t108;
t71 = -t112 * t68 + t126;
t70 = t120 * t59 + t130;
t33 = t57 * t50 - t113;
t65 = t100 * t59 + (-t120 * t60 + t129 + t58) * t56;
t64 = t128 * t65;
t16 = -t55 * t60 * pkin(8) + t20;
t4 = t127 * t65 + t128 * t16;
t63 = (t70 * t55 + t109) * qJD(4) + t66;
t62 = (t100 * t60 + t70 * t56) * qJD(4) + t67;
t61 = 0.2e1 * qJD(2);
t49 = -t56 * pkin(5) - pkin(4);
t47 = t57 * t115;
t44 = t55 * t112;
t40 = t120 * t56;
t39 = (t53 + t54) * qJD(2);
t30 = t99 * t60;
t22 = t32 * t59;
t21 = -t99 * t50 - t113;
t18 = t128 * t40 - t55 * t81;
t17 = -t127 * t40 - t73;
t11 = -qJD(6) * t24 - t108;
t9 = -t25 * qJD(4) + t126;
t8 = -t40 * t96 - t56 * t97 + (qJD(6) * t81 - t94) * t55;
t7 = qJD(6) * t73 + t40 * t95 + t55 * t97 - t56 * t94;
t3 = -t127 * t16 + t64;
t2 = -t4 * qJD(6) - t127 * t63 + t128 * t62;
t1 = -qJD(6) * t64 - t127 * t62 - t128 * t63 + t16 * t95;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t61, 0.2e1 * t111, 0, 0, 0, 0, 0, 0, 0, t61, 0.2e1 * qJD(3), 0.2e1 * t111 + 0.2e1 * t114, t92, t86, 0, t43, 0, 0, 0.2e1 * qJD(3) * t59 + 0.2e1 * t58 * t112, 0.2e1 * qJD(3) * t60 - 0.2e1 * t58 * t50, -0.2e1 * t39, 0.2e1 * t53 * t57 * qJD(2) + 0.2e1 * t114 + 0.2e1 * t47, t52 * t92, 0.4e1 * t60 * t91, -0.2e1 * t56 * t131, t51 * t92, t55 * t86, t43, -0.2e1 * t55 * t115 + 0.2e1 * t14 * t59 + 0.2e1 * (t19 + 0.2e1 * t110) * t112, -0.2e1 * t56 * t115 - 0.2e1 * t15 * t59 + 0.2e1 * (-t20 + 0.2e1 * t41) * t112, 0.2e1 * t76 * t60 + 0.2e1 * (t19 * t56 + t20 * t55) * t50, -0.2e1 * t57 ^ 2 * t104 + 0.2e1 * t19 * t14 + 0.2e1 * t20 * t15 + 0.2e1 * t47, -0.2e1 * t25 * t10, 0.2e1 * t10 * t23 - 0.2e1 * t25 * t12, -0.2e1 * t10 * t59 + 0.2e1 * t25 * t112, 0.2e1 * t23 * t12, -0.2e1 * t23 * t112 - 0.2e1 * t12 * t59, t43, 0.2e1 * t3 * t112 + 0.2e1 * t30 * t12 + 0.2e1 * t2 * t59 + 0.2e1 * t21 * t23, 0.2e1 * t1 * t59 - 0.2e1 * t30 * t10 - 0.2e1 * t4 * t112 + 0.2e1 * t21 * t25, 0.2e1 * t1 * t23 + 0.2e1 * t3 * t10 - 0.2e1 * t4 * t12 - 0.2e1 * t2 * t25, -0.2e1 * t4 * t1 + 0.2e1 * t3 * t2 + 0.2e1 * t30 * t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3), 0, 0, 0, 0, 0, 0, -t112, t50, 0, -qJD(3), 0, 0, 0, 0, 0, 0, -t105, t44, -t119 * t50, t76, 0, 0, 0, 0, 0, 0, t71, t72, -t77 + t78, t1 * t32 - t2 * t68 + t4 * t26 + t3 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t123 - 0.2e1 * t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, 0, t39, 0, 0, 0, 0, 0, 0, 0, 0, 0, t115 + t75 * t59 + (t74 - 0.2e1 * t121) * t112, 0, 0, 0, 0, 0, 0, t11 * t59 - t60 * t12 + (-t22 * t60 + t23 * t59) * qJD(4), t60 * t10 + t9 * t59 + (-t24 * t60 + t25 * t59) * qJD(4), -t22 * t10 - t11 * t25 - t24 * t12 + t9 * t23, -t1 * t24 + t3 * t11 - t2 * t22 - t21 * t60 + t30 * t50 - t4 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11 * t68 - t22 * t27 + t24 * t26 + t32 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-0.1e1 + t119) * t43, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t11 * t22 - 0.2e1 * t24 * t9 - 0.2e1 * t104; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, 0, -t112, 0, -t33, -t57 * t112 - t117, 0, 0, -t91 (t51 - t52) * t50, t44, t91, t105, 0, t56 * t113 - t55 * t116 + (t79 * t55 - t41) * qJD(4), -t55 * t113 - t56 * t116 + (t56 * t79 + t110) * qJD(4), t75, -pkin(4) * t33 + qJ(5) * t75 + qJD(5) * t74, -t10 * t32 - t25 * t26, t77 + t78, t72, -t12 * t68 + t23 * t27, -t71, 0, t17 * t112 + t12 * t49 - t21 * t68 + t27 * t30 + t59 * t8, -t10 * t49 - t18 * t112 + t21 * t32 - t26 * t30 + t59 * t7, -t1 * t68 + t10 * t17 - t12 * t18 - t2 * t32 + t23 * t7 - t25 * t8 + t26 * t3 - t27 * t4, -t1 * t18 + t17 * t2 + t21 * t49 + t3 * t8 - t4 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t17 * t27 + t18 * t26 + t32 * t7 - t68 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t50, -t112, 0, 0, 0, 0, 0, 0, 0, 0, -t106, t107, qJD(4) * t98, t59 * t93 + (qJ(5) * t98 - t129) * qJD(4), 0, 0, 0, 0, 0, 0, -t50 * t68 - t125, t32 * t50 + t132, -t11 * t32 - t22 * t26 - t24 * t27 - t68 * t9, t11 * t17 - t18 * t9 - t22 * t8 - t24 * t7 + t49 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t87, qJ(5) * t87, -0.2e1 * t123, -0.2e1 * t26 * t68 - 0.2e1 * t27 * t32, 0, -0.2e1 * t124, 0, 0, 0.2e1 * t49 * t27, -0.2e1 * t49 * t26, 0.2e1 * t17 * t26 - 0.2e1 * t18 * t27 - 0.2e1 * t32 * t8 - 0.2e1 * t68 * t7, 0.2e1 * t17 * t8 - 0.2e1 * t18 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t107, -t106, 0, t33, 0, 0, 0, 0, 0, 0, t12, -t10, 0, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50, 0, 0, 0, 0, 0, 0, 0, 0, 0, t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, -t26, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t10, 0, -t12, t112, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27, -t26, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11, t9, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t26, 0, -t27, 0, t8, t7, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
