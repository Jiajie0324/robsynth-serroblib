% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPRPR5
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta5]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 14:22
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPRPR5_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR5_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR5_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRPR5_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRPR5_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRPR5_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 14:22:12
% EndTime: 2019-05-05 14:22:26
% DurationCPUTime: 14.47s
% Computational Cost: add. (70693->700), mult. (144940->812), div. (0->0), fcn. (87280->8), ass. (0->428)
t1003 = cos(qJ(4));
t1094 = qJD(1) * t1003;
t995 = sin(pkin(9));
t996 = cos(pkin(9));
t946 = -t996 * qJD(4) + t1094 * t995;
t948 = qJD(4) * t995 + t1094 * t996;
t899 = t948 * t946;
t1072 = qJD(4) * t1094;
t1000 = sin(qJ(4));
t1089 = t1000 * qJDD(1);
t956 = t1072 + t1089;
t1151 = -t899 + t956;
t1157 = t1151 * t995;
t1156 = t1151 * t996;
t1002 = cos(qJ(6));
t999 = sin(qJ(6));
t885 = t1002 * t946 + t948 * t999;
t887 = t1002 * t948 - t946 * t999;
t835 = t887 * t885;
t949 = qJDD(6) + t956;
t1153 = -t835 + t949;
t1155 = t1153 * t999;
t1154 = t1002 * t1153;
t1007 = qJD(1) ^ 2;
t1001 = sin(qJ(1));
t1004 = cos(qJ(1));
t968 = t1001 * g(1) - t1004 * g(2);
t1040 = -qJDD(2) + t968;
t1012 = t1007 * qJ(2) + t1040;
t1127 = pkin(1) + qJ(3);
t1008 = qJDD(1) * t1127 + t1012;
t1123 = pkin(4) * t1003;
t1038 = qJ(5) * t1000 + t1123;
t1135 = 2 * qJD(3);
t1092 = t1000 * qJD(1);
t1073 = qJD(4) * t1092;
t1088 = t1003 * qJDD(1);
t957 = -t1073 + t1088;
t997 = t1007 * pkin(7);
t838 = t956 * pkin(4) - t957 * qJ(5) - t997 + (qJD(4) * t1038 + t1135) * qJD(1) + t1008;
t1006 = qJD(4) ^ 2;
t1108 = qJ(5) * t1003;
t1124 = pkin(4) * t1000;
t1015 = t1007 * (-t1108 + t1124);
t969 = t1004 * g(1) + t1001 * g(2);
t1029 = 0.2e1 * qJD(2) * qJD(1) - t969;
t1013 = qJDD(3) + t1029;
t991 = qJDD(1) * qJ(2);
t1010 = t1013 + t991;
t1148 = t1007 * t1127;
t902 = -qJDD(1) * pkin(7) + t1010 - t1148;
t882 = t1003 * g(3) - t1000 * t902;
t852 = -t1006 * pkin(4) + qJDD(4) * qJ(5) - t1000 * t1015 - t882;
t752 = 0.2e1 * qJD(5) * t948 - t996 * t838 + t995 * t852;
t753 = -0.2e1 * qJD(5) * t946 + t995 * t838 + t996 * t852;
t715 = t995 * t752 + t996 * t753;
t1070 = -t996 * qJDD(4) + t957 * t995;
t924 = qJDD(4) * t995 + t957 * t996;
t815 = -t885 * qJD(6) + t1002 * t924 - t1070 * t999;
t977 = qJD(6) + t1092;
t865 = t977 * t885;
t1152 = -t865 + t815;
t881 = t1000 * g(3) + t1003 * t902;
t830 = -t1000 * t881 - t1003 * t882;
t930 = t946 * t1092;
t873 = t924 + t930;
t1134 = pkin(2) + pkin(3);
t829 = -t1000 * t882 + t1003 * t881;
t1150 = t1134 * t829;
t931 = t948 * t1092;
t869 = t1070 - t931;
t1087 = qJD(1) * t1135;
t1149 = 0.2e1 * qJDD(1) * qJ(3) + t1087;
t976 = t1000 * t1007 * t1003;
t967 = qJDD(4) - t976;
t1098 = t1003 * t967;
t992 = t1000 ^ 2;
t982 = t992 * t1007;
t972 = -t982 - t1006;
t911 = t1000 * t972 + t1098;
t1147 = -t1134 * t911 - t881;
t966 = qJDD(4) + t976;
t1106 = t1000 * t966;
t993 = t1003 ^ 2;
t1097 = t1007 * t993;
t974 = -t1006 - t1097;
t913 = t1003 * t974 - t1106;
t1146 = -t1134 * t913 - t882;
t851 = qJDD(4) * pkin(4) + t1006 * qJ(5) - t1003 * t1015 - qJDD(5) + t881;
t700 = -t1000 * t851 + t1003 * t715;
t714 = -t752 * t996 + t753 * t995;
t1112 = pkin(3) * t714 - pkin(7) * t700;
t1145 = (pkin(2) + t1038) * t714 + t1112;
t813 = -t869 * t996 + t873 * t995;
t943 = t946 ^ 2;
t944 = t948 ^ 2;
t863 = t943 + t944;
t1050 = pkin(4) * t863 + qJ(5) * t813 + t715;
t762 = t1000 * t813 + t1003 * t863;
t1144 = -t1134 * t762 - t1050;
t1032 = pkin(5) * t1092 - pkin(8) * t948;
t771 = -pkin(5) * t1070 + t943 * pkin(8) - t1032 * t948 + t851;
t1119 = t771 * t999;
t817 = t835 + t949;
t1103 = t1002 * t817;
t884 = t887 ^ 2;
t975 = t977 ^ 2;
t853 = -t884 - t975;
t760 = -t853 * t999 - t1103;
t694 = -pkin(5) * t1152 + pkin(8) * t760 - t1119;
t1118 = t817 * t999;
t759 = t1002 * t853 - t1118;
t720 = -t759 * t995 + t760 * t996;
t1104 = t1002 * t771;
t722 = -pkin(8) * t759 - t1104;
t1051 = -pkin(4) * t1152 + qJ(5) * t720 + t996 * t694 + t995 * t722;
t687 = t1000 * t720 - t1003 * t1152;
t1143 = -t1134 * t687 - t1051;
t883 = t885 ^ 2;
t831 = -t975 - t883;
t749 = t1002 * t831 - t1155;
t1071 = t1002 * t1070 + t999 * t924;
t780 = (qJD(6) + t977) * t887 + t1071;
t685 = -pkin(5) * t780 + pkin(8) * t749 + t1104;
t748 = t831 * t999 + t1154;
t708 = -t748 * t995 + t749 * t996;
t716 = -pkin(8) * t748 - t1119;
t1052 = -pkin(4) * t780 + qJ(5) * t708 + t996 * t685 + t995 * t716;
t679 = t1000 * t708 - t1003 * t780;
t1142 = -t1134 * t679 - t1052;
t737 = pkin(5) * t1151 - pkin(8) * t873 - t752;
t743 = -t943 * pkin(5) - pkin(8) * t1070 - t1032 * t1092 + t753;
t682 = -t1002 * t737 + t743 * t999;
t683 = t1002 * t743 + t737 * t999;
t655 = -t1002 * t682 + t683 * t999;
t1121 = t655 * t995;
t656 = t1002 * t683 + t682 * t999;
t636 = t656 * t996 - t1121;
t645 = pkin(5) * t771 + pkin(8) * t656;
t1053 = -pkin(4) * t771 + pkin(8) * t1121 - qJ(5) * t636 - t996 * t645;
t630 = t1000 * t636 + t1003 * t771;
t1141 = -t1134 * t630 + t1053;
t781 = (qJD(6) - t977) * t887 + t1071;
t785 = t865 + t815;
t734 = -t1002 * t781 + t785 * t999;
t803 = -t883 - t884;
t638 = -pkin(5) * t803 + pkin(8) * t734 + t656;
t732 = -t1002 * t785 - t781 * t999;
t640 = -pkin(8) * t732 - t655;
t677 = -t732 * t995 + t734 * t996;
t1056 = -pkin(4) * t803 + qJ(5) * t677 + t996 * t638 + t995 * t640;
t667 = t1000 * t677 - t1003 * t803;
t1140 = -t1134 * t667 - t1056;
t811 = -t869 * t995 - t873 * t996;
t697 = -qJ(5) * t811 - t714;
t763 = -t1000 * t863 + t1003 * t813;
t1086 = pkin(3) * t811 - pkin(7) * t763 - t1000 * t697;
t1139 = (pkin(2) + t1123) * t811 + t1086;
t888 = -t982 - t943;
t826 = t888 * t996 - t1157;
t846 = t996 * t851;
t870 = -t1070 - t931;
t1084 = pkin(4) * t870 + qJ(5) * t826 + t846;
t786 = t1000 * t826 + t1003 * t870;
t1138 = -t1134 * t786 - t1084;
t875 = t899 + t956;
t1116 = t875 * t996;
t928 = -t944 - t982;
t843 = -t928 * t995 - t1116;
t845 = t995 * t851;
t872 = t924 - t930;
t1085 = pkin(4) * t872 - qJ(5) * t843 + t845;
t793 = t1000 * t843 - t1003 * t872;
t1137 = -t1134 * t793 + t1085;
t1111 = pkin(4) * t851 + qJ(5) * t715;
t699 = t1000 * t715 + t1003 * t851;
t1136 = -t1134 * t699 - t1111;
t919 = t1008 + t1087;
t1133 = pkin(2) * t919;
t1132 = pkin(5) * t655;
t1131 = pkin(5) * t732;
t1090 = qJDD(1) * t1004;
t962 = -t1001 * t1007 + t1090;
t1130 = pkin(6) * t962;
t1091 = qJDD(1) * t1001;
t963 = t1004 * t1007 + t1091;
t1129 = pkin(6) * t963;
t1128 = pkin(7) * t829;
t1126 = qJ(2) - pkin(7);
t1125 = pkin(1) * t1007;
t1122 = qJDD(1) * pkin(1);
t1120 = t655 * t996;
t1117 = t875 * t995;
t1115 = t977 * t887;
t1114 = t977 * t999;
t1113 = t1003 * t697 + t811 * t1124;
t901 = -t997 + t919;
t1110 = -pkin(3) * t901 + pkin(7) * t830;
t1109 = t992 + t993;
t892 = t1000 * t901;
t1105 = t1000 * t967;
t1102 = t1002 * t977;
t1101 = t1003 * t901;
t1100 = t1003 * t956;
t1099 = t1003 * t966;
t1095 = qJD(1) * qJD(4);
t964 = t982 + t1097;
t1083 = pkin(3) * t964 + t830;
t918 = -t1000 * t974 - t1099;
t958 = -0.2e1 * t1073 + t1088;
t1082 = -pkin(3) * t958 + pkin(7) * t918 + t892;
t915 = t1003 * t972 - t1105;
t955 = 0.2e1 * t1072 + t1089;
t1081 = -pkin(3) * t955 + pkin(7) * t915 - t1101;
t1080 = t1000 * t835;
t1079 = t1000 * t899;
t1078 = t1003 * t835;
t1077 = t1003 * t899;
t710 = t714 * t1124;
t1075 = -pkin(7) * t699 + t710;
t1074 = -pkin(7) * t913 + t1101;
t1069 = qJ(3) - t1108;
t635 = t656 * t995 + t1120;
t615 = -pkin(8) * t1120 - qJ(5) * t635 - t645 * t995;
t626 = -pkin(4) * t635 - t1132;
t1068 = -t1000 * t626 + t1003 * t615;
t675 = t732 * t996 + t734 * t995;
t623 = -qJ(5) * t675 - t638 * t995 + t640 * t996;
t662 = -pkin(4) * t675 - t1131;
t1067 = -t1000 * t662 + t1003 * t623;
t707 = t748 * t996 + t749 * t995;
t643 = -qJ(5) * t707 - t685 * t995 + t716 * t996;
t1030 = pkin(5) * t748 - t682;
t651 = -pkin(4) * t707 - t1030;
t1066 = -t1000 * t651 + t1003 * t643;
t719 = t759 * t996 + t760 * t995;
t649 = -qJ(5) * t719 - t694 * t995 + t722 * t996;
t1011 = pkin(5) * t759 - t683;
t658 = -pkin(4) * t719 - t1011;
t1065 = -t1000 * t658 + t1003 * t649;
t825 = t888 * t995 + t1156;
t738 = -pkin(4) * t825 + t752;
t756 = -qJ(5) * t825 - t845;
t1064 = -t1000 * t738 + t1003 * t756;
t840 = t928 * t996 - t1117;
t740 = -pkin(4) * t840 + t753;
t772 = -qJ(5) * t840 - t846;
t1063 = -t1000 * t740 + t1003 * t772;
t1009 = -t991 - t1029;
t920 = -qJDD(3) + t1009 + t1148;
t1061 = -t1001 * t919 - t1004 * t920;
t929 = t1009 + t1125;
t933 = t1012 + t1122;
t1060 = -t1001 * t933 - t1004 * t929;
t1059 = -t1001 * t968 - t1004 * t969;
t631 = -t1000 * t771 + t1003 * t636;
t1058 = -pkin(3) * t635 + pkin(7) * t631 + t1000 * t615 + t1003 * t626;
t668 = t1000 * t803 + t1003 * t677;
t1057 = -pkin(3) * t675 + pkin(7) * t668 + t1000 * t623 + t1003 * t662;
t680 = t1000 * t780 + t1003 * t708;
t1055 = -pkin(3) * t707 + pkin(7) * t680 + t1000 * t643 + t1003 * t651;
t688 = t1000 * t1152 + t1003 * t720;
t1054 = -pkin(3) * t719 + pkin(7) * t688 + t1000 * t649 + t1003 * t658;
t787 = -t1000 * t870 + t1003 * t826;
t1049 = -pkin(3) * t825 + pkin(7) * t787 + t1000 * t756 + t1003 * t738;
t796 = t1000 * t872 + t1003 * t843;
t1048 = -pkin(3) * t840 + pkin(7) * t796 + t1000 * t772 + t1003 * t740;
t1047 = pkin(2) * t901 - t1110;
t1046 = -pkin(7) * t762 + t1113;
t1045 = t1001 * t976;
t1044 = t1004 * t976;
t1043 = pkin(2) * t920 - qJ(3) * g(3);
t1042 = g(3) * t1001 + t1130;
t1041 = g(3) * t1004 - t1129;
t1039 = -pkin(7) * t911 + t892;
t1037 = pkin(2) * t958 - t1082;
t1036 = pkin(2) * t955 - t1081;
t1035 = t1001 * t920 - t1004 * t919;
t1034 = t1001 * t929 - t1004 * t933;
t1033 = t1001 * t969 - t1004 * t968;
t1028 = -pkin(7) * t630 + t1068;
t1027 = -pkin(7) * t667 + t1067;
t1026 = -pkin(7) * t679 + t1066;
t1025 = -pkin(7) * t687 + t1065;
t1024 = -pkin(7) * t786 + t1064;
t1023 = -pkin(7) * t793 + t1063;
t961 = t1109 * qJDD(1);
t1022 = pkin(7) * t961 - t829;
t1021 = pkin(2) * t635 - t1058;
t1020 = pkin(2) * t675 - t1057;
t1019 = pkin(2) * t707 - t1055;
t1018 = pkin(2) * t719 - t1054;
t1017 = pkin(2) * t825 - t1049;
t1016 = pkin(2) * t840 - t1048;
t985 = pkin(2) * t1007 - g(3);
t1014 = -pkin(2) * t1091 - t1004 * t985 - t1129;
t945 = -t1040 - 0.2e1 * t1122;
t1005 = pkin(1) * g(3);
t998 = qJ(2) * g(3);
t994 = pkin(2) * qJDD(1);
t987 = 0.2e1 * t991;
t973 = t1006 - t1097;
t971 = t982 - t1006;
t965 = -t982 + t1097;
t954 = pkin(3) * t961;
t952 = t1109 * t1095;
t942 = t1029 + t987;
t932 = t1013 + t987;
t927 = -t944 + t982;
t926 = t943 - t982;
t925 = -t945 + t1149;
t923 = t1000 * t957 + t1095 * t993;
t922 = t1095 * t992 - t1100;
t917 = -t1000 * t973 + t1098;
t916 = (t957 - t1073) * t1003;
t914 = t1003 * t971 - t1106;
t912 = t1003 * t973 + t1105;
t910 = t1000 * t971 + t1099;
t909 = (t956 + t1072) * t1000;
t907 = pkin(2) * t961 + t954;
t903 = -pkin(2) * t1090 + t1001 * t985 - t1130;
t897 = t944 - t943;
t896 = t998 - t1133;
t891 = -t1000 * t958 - t1003 * t955;
t890 = -t1000 * t955 + t1003 * t958;
t889 = t1005 - t1043;
t868 = pkin(1) * t933 - qJ(2) * t929;
t862 = (-t946 * t996 + t948 * t995) * t1092;
t861 = (-t946 * t995 - t948 * t996) * t1092;
t860 = -t884 + t975;
t859 = t883 - t975;
t857 = t924 * t996 - t931 * t995;
t856 = t924 * t995 + t931 * t996;
t855 = t1070 * t995 + t930 * t996;
t854 = t1070 * t996 - t930 * t995;
t849 = t1000 * t956 + t1003 * t862;
t848 = t1000 * t862 - t1100;
t844 = t926 * t996 - t1117;
t842 = -t927 * t995 + t1156;
t841 = t926 * t995 + t1116;
t839 = t927 * t996 + t1157;
t834 = t884 - t883;
t828 = -qJ(2) * t920 + t1127 * t919;
t824 = t1003 * t857 + t1079;
t823 = t1003 * t855 - t1079;
t822 = t1000 * t857 - t1077;
t821 = t1000 * t855 + t1077;
t814 = -qJD(6) * t887 - t1071;
t812 = t870 * t996 - t872 * t995;
t810 = t870 * t995 + t872 * t996;
t807 = (-t1002 * t885 + t887 * t999) * t977;
t806 = (-t1002 * t887 - t885 * t999) * t977;
t804 = -pkin(2) * t964 - t1083;
t801 = -qJ(2) * t918 - t1037;
t800 = -qJ(2) * t915 - t1036;
t799 = t1126 * t913 + t1127 * t958 + t1101;
t798 = t1126 * t911 + t1127 * t955 + t892;
t797 = -t1000 * t869 + t1003 * t844;
t795 = t1000 * t873 + t1003 * t842;
t794 = t1000 * t844 + t1003 * t869;
t792 = t1000 * t842 - t1003 * t873;
t790 = t1000 * t897 + t1003 * t812;
t789 = t1000 * t812 - t1003 * t897;
t788 = -t1126 * t961 - t1127 * t964 - t829;
t776 = t1002 * t859 - t1118;
t775 = -t860 * t999 + t1154;
t774 = t859 * t999 + t1103;
t773 = t1002 * t860 + t1155;
t770 = t1002 * t815 - t1114 * t887;
t769 = t1102 * t887 + t815 * t999;
t768 = t1102 * t885 - t814 * t999;
t767 = t1002 * t814 + t1114 * t885;
t758 = -t1127 * t918 - t1146;
t757 = -t1127 * t915 - t1147;
t747 = -t806 * t995 + t807 * t996;
t746 = t806 * t996 + t807 * t995;
t745 = t1000 * t949 + t1003 * t747;
t744 = t1000 * t747 - t1003 * t949;
t742 = -qJ(2) * t830 - t1047;
t741 = t1126 * t829 + t1127 * t901;
t733 = -t1002 * t780 - t1152 * t999;
t731 = t1002 * t1152 - t780 * t999;
t730 = -t774 * t995 + t776 * t996;
t729 = -t773 * t995 + t775 * t996;
t728 = t774 * t996 + t776 * t995;
t727 = t773 * t996 + t775 * t995;
t726 = -t769 * t995 + t770 * t996;
t725 = -t767 * t995 + t768 * t996;
t724 = t769 * t996 + t770 * t995;
t723 = t767 * t996 + t768 * t995;
t709 = -t1127 * t830 + t1150;
t704 = t1003 * t726 + t1080;
t703 = t1003 * t725 - t1080;
t702 = t1000 * t726 - t1078;
t701 = t1000 * t725 + t1078;
t693 = -t1000 * t781 + t1003 * t730;
t692 = t1000 * t785 + t1003 * t729;
t691 = t1000 * t730 + t1003 * t781;
t690 = t1000 * t729 - t1003 * t785;
t676 = -t731 * t995 + t733 * t996;
t674 = t731 * t996 + t733 * t995;
t671 = t1000 * t834 + t1003 * t676;
t670 = t1000 * t676 - t1003 * t834;
t669 = -t1127 * t796 - t1137;
t665 = -t1127 * t787 - t1138;
t664 = -qJ(2) * t796 - t1016;
t663 = t1126 * t793 + t1127 * t840 + t1063;
t660 = -qJ(2) * t787 - t1017;
t659 = t1126 * t786 + t1127 * t825 + t1064;
t653 = -qJ(2) * t763 - t1139;
t652 = t1126 * t762 + t1127 * t811 + t1113;
t646 = -t1127 * t763 - t1144;
t632 = -t1127 * t700 - t1136;
t628 = -qJ(2) * t700 - t1145;
t627 = t710 + t1126 * t699 + (pkin(1) + t1069) * t714;
t624 = -t1127 * t688 - t1143;
t620 = -t1127 * t680 - t1142;
t619 = -qJ(2) * t688 - t1018;
t618 = t1126 * t687 + t1127 * t719 + t1065;
t617 = -qJ(2) * t680 - t1019;
t616 = t1126 * t679 + t1127 * t707 + t1066;
t612 = -t1127 * t668 - t1140;
t611 = -qJ(2) * t668 - t1020;
t610 = t1126 * t667 + t1127 * t675 + t1067;
t609 = -t1127 * t631 - t1141;
t608 = -qJ(2) * t631 - t1021;
t607 = t1126 * t630 + t1127 * t635 + t1068;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t962, 0, -t963, 0, -t1042, -t1041, t1033, pkin(6) * t1033, 0, -t962, t963, 0, 0, 0, t1034, t1042, t1041, pkin(6) * t1034 + (-pkin(1) * t1001 + qJ(2) * t1004) * g(3), 0, t963, t962, 0, 0, 0, t1035, t1014, t903, pkin(6) * t1035 - t1001 * t889 + t1004 * t896, t1004 * t923 - t1045, -t1001 * t965 + t1004 * t890, -t1001 * t1088 + t1004 * t912, t1004 * t922 + t1045, t1001 * t1089 + t1004 * t910, -qJDD(4) * t1001 - t1004 * t952, t1004 * t800 - t1001 * t757 - pkin(6) * (t1001 * t911 + t1004 * t955), t1004 * t801 - t1001 * t758 - pkin(6) * (t1001 * t913 + t1004 * t958), -t1004 * t804 + t1001 * t907 - pkin(6) * (-t1001 * t961 - t1004 * t964), t1004 * t742 - t1001 * t709 - pkin(6) * (t1001 * t829 + t1004 * t901), -t1001 * t856 + t1004 * t822, -t1001 * t810 + t1004 * t789, -t1001 * t839 + t1004 * t792, t1001 * t854 + t1004 * t821, -t1001 * t841 + t1004 * t794, -t1001 * t861 + t1004 * t848, t1004 * t660 - t1001 * t665 - pkin(6) * (t1001 * t786 + t1004 * t825), t1004 * t664 - t1001 * t669 - pkin(6) * (t1001 * t793 + t1004 * t840), t1004 * t653 - t1001 * t646 - pkin(6) * (t1001 * t762 + t1004 * t811), t1004 * t628 - t1001 * t632 - pkin(6) * (t1001 * t699 + t1004 * t714), -t1001 * t724 + t1004 * t702, -t1001 * t674 + t1004 * t670, -t1001 * t727 + t1004 * t690, -t1001 * t723 + t1004 * t701, -t1001 * t728 + t1004 * t691, -t1001 * t746 + t1004 * t744, t1004 * t617 - t1001 * t620 - pkin(6) * (t1001 * t679 + t1004 * t707), t1004 * t619 - t1001 * t624 - pkin(6) * (t1001 * t687 + t1004 * t719), t1004 * t611 - t1001 * t612 - pkin(6) * (t1001 * t667 + t1004 * t675), t1004 * t608 - t1001 * t609 - pkin(6) * (t1001 * t630 + t1004 * t635); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t963, 0, t962, 0, t1041, -t1042, t1059, pkin(6) * t1059, 0, -t963, -t962, 0, 0, 0, t1060, -t1041, t1042, pkin(6) * t1060 + (pkin(1) * t1004 + qJ(2) * t1001) * g(3), 0, -t962, t963, 0, 0, 0, t1061, -t903, t1014, pkin(6) * t1061 + t1001 * t896 + t1004 * t889, t1001 * t923 + t1044, t1001 * t890 + t1004 * t965, t1001 * t912 + t1004 * t1088, t1001 * t922 - t1044, t1001 * t910 - t1004 * t1089, qJDD(4) * t1004 - t1001 * t952, t1001 * t800 + t1004 * t757 + pkin(6) * (-t1001 * t955 + t1004 * t911), t1001 * t801 + t1004 * t758 + pkin(6) * (-t1001 * t958 + t1004 * t913), -t1001 * t804 - t1004 * t907 + pkin(6) * (t1001 * t964 - t1004 * t961), t1001 * t742 + t1004 * t709 + pkin(6) * (-t1001 * t901 + t1004 * t829), t1001 * t822 + t1004 * t856, t1001 * t789 + t1004 * t810, t1001 * t792 + t1004 * t839, t1001 * t821 - t1004 * t854, t1001 * t794 + t1004 * t841, t1001 * t848 + t1004 * t861, t1001 * t660 + t1004 * t665 + pkin(6) * (-t1001 * t825 + t1004 * t786), t1001 * t664 + t1004 * t669 + pkin(6) * (-t1001 * t840 + t1004 * t793), t1001 * t653 + t1004 * t646 + pkin(6) * (-t1001 * t811 + t1004 * t762), t1001 * t628 + t1004 * t632 + pkin(6) * (-t1001 * t714 + t1004 * t699), t1001 * t702 + t1004 * t724, t1001 * t670 + t1004 * t674, t1001 * t690 + t1004 * t727, t1001 * t701 + t1004 * t723, t1001 * t691 + t1004 * t728, t1001 * t744 + t1004 * t746, t1001 * t617 + t1004 * t620 + pkin(6) * (-t1001 * t707 + t1004 * t679), t1001 * t619 + t1004 * t624 + pkin(6) * (-t1001 * t719 + t1004 * t687), t1001 * t611 + t1004 * t612 + pkin(6) * (-t1001 * t675 + t1004 * t667), t1001 * t608 + t1004 * t609 + pkin(6) * (-t1001 * t635 + t1004 * t630); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t968, t969, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t945, t942, t868, qJDD(1), 0, 0, 0, 0, 0, 0, t932, t925, t828, t916, t891, t917, t909, t914, 0, t798, t799, t788, t741, t824, t790, t795, t823, t797, t849, t659, t663, t652, t627, t704, t671, t692, t703, t693, t745, t616, t618, t610, t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1007, 0, 0, -g(3), -t968, 0, 0, -qJDD(1), t1007, 0, 0, 0, -t933, 0, g(3), t998, 0, t1007, qJDD(1), 0, 0, 0, -t919, -t985, -t994, t896, t923, t890, t912, t922, t910, -t952, t800, t801, -t804, t742, t822, t789, t792, t821, t794, t848, t660, t664, t653, t628, t702, t670, t690, t701, t691, t744, t617, t619, t611, t608; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1007, 0, qJDD(1), 0, g(3), 0, -t969, 0, 0, -t1007, -qJDD(1), 0, 0, 0, -t929, -g(3), 0, t1005, 0, -qJDD(1), t1007, 0, 0, 0, -t920, t994, -t985, t889, t976, t965, t1088, -t976, -t1089, qJDD(4), t757, t758, -t907, t709, t856, t810, t839, -t854, t841, t861, t665, t669, t646, t632, t724, t674, t727, t723, t728, t746, t620, t624, t612, t609; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t968, t969, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t945, t942, t868, qJDD(1), 0, 0, 0, 0, 0, 0, t932, t925, t828, t916, t891, t917, t909, t914, 0, t798, t799, t788, t741, t824, t790, t795, t823, t797, t849, t659, t663, t652, t627, t704, t671, t692, t703, t693, t745, t616, t618, t610, t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t933, -t929, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1010 - t1125, t933 + t1149, qJ(3) * t919, t916, t891, t917, t909, t914, 0, qJ(3) * t955 + t1039, qJ(3) * t958 + t1074, -qJ(3) * t964 + t1022, qJ(3) * t901 - t1128, t824, t790, t795, t823, t797, t849, qJ(3) * t825 + t1024, qJ(3) * t840 + t1023, qJ(3) * t811 + t1046, t1069 * t714 + t1075, t704, t671, t692, t703, t693, t745, qJ(3) * t707 + t1026, qJ(3) * t719 + t1025, qJ(3) * t675 + t1027, qJ(3) * t635 + t1028; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1007, 0, 0, 0, t933, 0, -g(3), 0, 0, -t1007, -qJDD(1), 0, 0, 0, t919, t985, t994, t1133, -t923, -t890, -t912, -t922, -t910, t952, t1036, t1037, t804, t1047, -t822, -t789, -t792, -t821, -t794, -t848, t1017, t1016, t1139, t1145, -t702, -t670, -t690, -t701, -t691, -t744, t1019, t1018, t1020, t1021; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1007, qJDD(1), 0, 0, 0, t929, g(3), 0, 0, 0, qJDD(1), -t1007, 0, 0, 0, t920, -t994, t985, t1043, -t976, -t965, -t1088, t976, t1089, -qJDD(4), qJ(3) * t915 + t1147, qJ(3) * t918 + t1146, t907, qJ(3) * t830 - t1150, -t856, -t810, -t839, t854, -t841, -t861, qJ(3) * t787 + t1138, qJ(3) * t796 + t1137, qJ(3) * t763 + t1144, qJ(3) * t700 + t1136, -t724, -t674, -t727, -t723, -t728, -t746, qJ(3) * t680 + t1142, qJ(3) * t688 + t1143, qJ(3) * t668 + t1140, qJ(3) * t631 + t1141; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t920, t919, 0, t916, t891, t917, t909, t914, 0, t1039, t1074, t1022, -t1128, t824, t790, t795, t823, t797, t849, t1024, t1023, t1046, -t1108 * t714 + t1075, t704, t671, t692, t703, t693, t745, t1026, t1025, t1027, t1028; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1007, 0, 0, 0, t920, 0, -g(3), 0, -t976, -t965, -t1088, t976, t1089, -qJDD(4), -pkin(3) * t911 - t881, -pkin(3) * t913 - t882, t954, -pkin(3) * t829, -t856, -t810, -t839, t854, -t841, -t861, -pkin(3) * t786 - t1084, -pkin(3) * t793 + t1085, -pkin(3) * t762 - t1050, -pkin(3) * t699 - t1111, -t724, -t674, -t727, -t723, -t728, -t746, -pkin(3) * t679 - t1052, -pkin(3) * t687 - t1051, -pkin(3) * t667 - t1056, -pkin(3) * t630 + t1053; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1007, qJDD(1), 0, 0, 0, -t919, g(3), 0, 0, t923, t890, t912, t922, t910, -t952, t1081, t1082, t1083, t1110, t822, t789, t792, t821, t794, t848, t1049, t1048, -t1123 * t811 - t1086, -t1038 * t714 - t1112, t702, t670, t690, t701, t691, t744, t1055, t1054, t1057, t1058; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t957, -t955, t967, t1073, t971, -t1073, 0, t901, -t881, 0, t857, t812, t842, t855, t844, t862, t756, t772, t697, -qJ(5) * t714, t726, t676, t729, t725, t730, t747, t643, t649, t623, t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1072, t958, t973, -t956, t966, -t1072, -t901, 0, -t882, 0, -t899, -t897, -t873, t899, t869, -t956, t738, t740, -pkin(4) * t811, -pkin(4) * t714, -t835, -t834, -t785, t835, t781, -t949, t651, t658, t662, t626; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t976, t965, t1088, -t976, -t1089, qJDD(4), t881, t882, 0, 0, t856, t810, t839, -t854, t841, t861, t1084, -t1085, t1050, t1111, t724, t674, t727, t723, t728, t746, t1052, t1051, t1056, -t1053; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t924, t870, t1151, t930, t926, -t930, 0, -t851, t752, 0, t770, t733, t775, t768, t776, t807, t716, t722, t640, -pkin(8) * t655; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t931, t872, t927, -t1070, t875, -t931, t851, 0, t753, 0, t769, t731, t773, t767, t774, t806, t685, t694, t638, t645; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t899, t897, t873, -t899, -t869, t956, -t752, -t753, 0, 0, t835, t834, t785, -t835, -t781, t949, t1030, t1011, t1131, t1132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t815, -t780, t1153, t865, t859, -t865, 0, -t771, t682, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1115, t1152, t860, t814, t817, -t1115, t771, 0, t683, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t835, t834, t785, -t835, -t781, t949, -t682, -t683, 0, 0;];
m_new_reg  = t1;
