% Calculate minimal parameter regressor of coriolis matrix for
% S6RPPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRPR5_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR5_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR5_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRPR5_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:49:23
% EndTime: 2019-03-09 01:49:33
% DurationCPUTime: 3.34s
% Computational Cost: add. (1987->334), mult. (4253->458), div. (0->0), fcn. (4141->6), ass. (0->260)
t205 = cos(qJ(4));
t199 = cos(pkin(9));
t202 = sin(qJ(6));
t178 = t202 * t199;
t198 = sin(pkin(9));
t204 = cos(qJ(6));
t180 = t204 * t198;
t350 = t180 + t178;
t351 = t205 * t350;
t192 = t198 ^ 2;
t193 = t199 ^ 2;
t164 = t192 + t193;
t349 = -t178 / 0.2e1 - t180 / 0.2e1;
t181 = t204 * t199;
t303 = t202 * t198;
t135 = -t181 + t303;
t203 = sin(qJ(4));
t309 = t135 * t203;
t249 = -t309 / 0.2e1;
t302 = t202 * t203;
t161 = t198 * t302;
t245 = -t181 / 0.2e1;
t282 = t161 / 0.2e1 + t203 * t245;
t229 = t249 + t282;
t348 = qJD(6) * t229;
t347 = -t135 / 0.2e1;
t346 = -t350 / 0.2e1;
t345 = t350 / 0.2e1;
t162 = t205 * t303;
t344 = t162 / 0.2e1;
t182 = -pkin(5) * t199 - pkin(4);
t341 = -t182 / 0.2e1;
t197 = t205 ^ 2;
t340 = t197 / 0.2e1;
t339 = -t203 / 0.2e1;
t338 = t203 / 0.2e1;
t337 = t205 / 0.2e1;
t336 = pkin(8) * t205;
t335 = t203 * pkin(4);
t334 = t205 * pkin(4);
t201 = pkin(1) + qJ(3);
t333 = pkin(8) + qJ(5);
t108 = t350 * t203;
t200 = -pkin(7) + qJ(2);
t240 = pkin(5) * t198 - t200;
t128 = t240 * t203;
t129 = t240 * t205;
t234 = -qJ(5) * t205 + t335;
t142 = t234 + t201;
t127 = t199 * t142;
t241 = -t198 * t200 + pkin(5);
t207 = -t199 * t336 + t241 * t203 + t127;
t300 = t203 * t200;
t157 = t199 * t300;
t95 = t198 * t142 + t157;
t76 = -t198 * t336 + t95;
t19 = t202 * t76 - t204 * t207;
t301 = t203 * qJ(5);
t156 = t301 + t334;
t140 = t199 * t156;
t305 = t199 * t203;
t64 = pkin(8) * t305 + t241 * t205 + t140;
t328 = t204 * t64;
t304 = t200 * t205;
t158 = t199 * t304;
t107 = t198 * t156 + t158;
t306 = t198 * t203;
t81 = pkin(8) * t306 + t107;
t329 = t202 * t81;
t1 = (t328 - t329) * t203 - t19 * t205 - t128 * t351 - t129 * t108;
t332 = t1 * qJD(1);
t111 = t203 * t181 - t161;
t112 = t205 * t181 - t162;
t20 = t202 * t207 + t204 * t76;
t327 = t204 * t81;
t330 = t202 * t64;
t2 = (t327 + t330) * t203 + t20 * t205 + t128 * t112 + t129 * t111;
t331 = t2 * qJD(1);
t312 = t107 * t198;
t261 = t198 * t304;
t106 = t140 - t261;
t313 = t106 * t199;
t94 = -t198 * t300 + t127;
t9 = -t94 * t305 - t95 * t306 + (t312 + t313) * t205;
t326 = t9 * qJD(1);
t325 = t94 * t198;
t324 = t94 * t205;
t323 = t95 * t199;
t322 = t95 * t205;
t10 = t129 * t351 - t19 * t203;
t321 = qJD(1) * t10;
t11 = t112 * t129 - t20 * t203;
t320 = qJD(1) * t11;
t21 = t197 * t200 + (t323 - t325) * t203;
t319 = qJD(1) * t21;
t34 = t198 * t95 + t199 * t94;
t29 = t34 * t205;
t318 = qJD(1) * t29;
t297 = t205 * t112;
t310 = t111 * t203;
t217 = -t310 / 0.2e1 - t297 / 0.2e1;
t235 = t181 / 0.2e1 - t303 / 0.2e1;
t30 = -t217 + t235;
t317 = qJD(1) * t30;
t298 = t205 * t351;
t311 = t108 * t203;
t218 = -t311 / 0.2e1 - t298 / 0.2e1;
t31 = t218 + t349;
t316 = qJD(1) * t31;
t315 = qJD(1) * t34;
t42 = t297 + t310;
t314 = qJD(1) * t42;
t242 = t193 / 0.2e1 + t192 / 0.2e1;
t210 = t242 * t301 + t334 / 0.2e1;
t219 = -t313 / 0.2e1 - t312 / 0.2e1;
t16 = t210 - t219;
t308 = t16 * qJD(1);
t18 = t108 * t112 + t111 * t351;
t307 = t18 * qJD(1);
t299 = t203 * t205;
t24 = t324 + (t106 + 0.2e1 * t261) * t203;
t295 = t24 * qJD(1);
t25 = t322 + (t107 - 0.2e1 * t158) * t203;
t294 = t25 * qJD(1);
t40 = -t298 + t311;
t293 = t40 * qJD(1);
t41 = -t298 - t311;
t292 = t41 * qJD(1);
t43 = t297 - t310;
t291 = t43 * qJD(1);
t246 = t204 * t338;
t248 = t350 * t338;
t48 = t199 * t302 / 0.2e1 + t198 * t246 + t248;
t290 = t48 * qJD(1);
t49 = (t346 + t349) * t203;
t289 = t49 * qJD(1);
t212 = t345 + t349;
t50 = t212 * t203;
t288 = t50 * qJD(1);
t52 = t309 / 0.2e1 + t282;
t287 = t52 * qJD(1);
t57 = t249 + t199 * t246 - t161 / 0.2e1;
t286 = t57 * qJD(1);
t285 = t229 * qJD(1);
t118 = -t351 / 0.2e1;
t60 = 0.2e1 * t118;
t284 = t60 * qJD(1);
t196 = t203 ^ 2;
t90 = t340 + t164 * (t196 / 0.2e1 + 0.1e1 / 0.2e1);
t283 = t90 * qJD(1);
t281 = t196 + t197;
t280 = qJD(1) * t112;
t279 = qJD(2) * t205;
t278 = qJD(4) * t350;
t277 = qJD(4) * t182;
t276 = qJD(5) * t351;
t275 = qJD(5) * t112;
t274 = qJD(6) * t203;
t114 = (-0.1e1 / 0.2e1 - t242) * t205;
t273 = t114 * qJD(1);
t177 = t192 * t203;
t179 = t193 * t203;
t131 = -t177 - t179;
t272 = t131 * qJD(1);
t132 = t164 * t197;
t271 = t132 * qJD(1);
t133 = t164 * t205;
t270 = t133 * qJD(1);
t134 = t281 * t198;
t269 = t134 * qJD(1);
t124 = t135 * qJD(6);
t137 = t281 * t199;
t268 = t137 * qJD(1);
t125 = t350 * qJD(6);
t267 = t164 * qJD(4);
t176 = t196 - t197;
t266 = t176 * qJD(1);
t265 = t201 * qJD(1);
t188 = t203 * qJD(1);
t264 = t203 * qJD(4);
t189 = t205 * qJD(1);
t263 = t205 * qJD(4);
t260 = t135 * t188;
t259 = t350 * t188;
t258 = t135 * t263;
t257 = t198 * t188;
t256 = t198 * t189;
t255 = t199 * t188;
t254 = t199 * t189;
t253 = t200 * t264;
t252 = t203 * t263;
t251 = t135 * t189;
t250 = t203 * t189;
t247 = t300 / 0.2e1;
t244 = t177 / 0.2e1 + t179 / 0.2e1;
t105 = t112 * t188;
t239 = qJD(4) * t48 + t105;
t238 = -qJD(2) + t265;
t237 = qJD(5) * t205 - qJD(3);
t236 = qJD(5) + t277;
t12 = -t200 ^ 2 * t299 + t94 * t106 + t95 * t107;
t8 = -t200 * t299 + (t107 * t338 + t322 / 0.2e1) * t199 + (t106 * t339 - t324 / 0.2e1) * t198;
t233 = t12 * qJD(1) + t8 * qJD(3);
t154 = t333 * t198;
t155 = t333 * t199;
t89 = -t154 * t202 + t155 * t204;
t208 = t112 * t341 + t129 * t346 + t89 * t338;
t221 = -t329 / 0.2e1 + t328 / 0.2e1;
t3 = t208 + t221;
t51 = t212 * t205;
t232 = t3 * qJD(1) + t51 * qJD(3);
t88 = t154 * t204 + t155 * t202;
t209 = t129 * t135 / 0.2e1 - t351 * t341 + t88 * t339;
t222 = -t330 / 0.2e1 - t327 / 0.2e1;
t4 = t209 + t222;
t53 = t344 + (t245 + t347) * t205;
t231 = t4 * qJD(1) + t53 * qJD(3);
t96 = (-0.1e1 + t164) * t299;
t230 = t8 * qJD(1) + t96 * qJD(3);
t14 = -t112 * t350 + t135 * t351;
t35 = -t112 ^ 2 + t351 ^ 2;
t228 = qJD(1) * t35 + qJD(4) * t14;
t44 = t135 ^ 2 - t350 ^ 2;
t227 = qJD(1) * t14 + qJD(4) * t44;
t226 = -t106 * t198 + t107 * t199;
t224 = -qJD(1) * t351 - qJD(4) * t135;
t223 = t278 + t280;
t220 = t325 / 0.2e1 - t323 / 0.2e1;
t23 = t112 * t347 - t345 * t351;
t215 = qJD(4) * t23 - t280 * t351;
t214 = -qJD(1) * t23 + t135 * t278;
t213 = qJD(4) * t50 + qJD(6) * t112 + t105;
t113 = t338 - t244;
t143 = t164 * qJ(5);
t26 = t247 + t220;
t211 = qJD(1) * t26 + qJD(3) * t113 - qJD(4) * t143;
t206 = t234 * qJD(4) - qJD(5) * t203;
t195 = qJ(2) * qJD(1);
t194 = qJ(2) * qJD(2);
t183 = t263 / 0.2e1;
t130 = (t188 + qJD(6) / 0.2e1) * t205;
t116 = t338 + t244;
t115 = -t205 / 0.2e1 + t164 * t337;
t91 = t242 * t196 - t242 + t340;
t61 = t351 / 0.2e1 + t118;
t59 = t203 * t349 + t248;
t55 = t205 * t349 + t118;
t54 = t135 * t337 + t205 * t245 + t344;
t33 = t217 + t235;
t32 = -t218 + t349;
t28 = -qJD(4) * t57 + t188 * t351;
t27 = t247 - t220;
t22 = t23 * qJD(6);
t17 = t210 + t219;
t15 = t229 * qJD(4) + (-qJD(6) - t188) * t351;
t13 = t14 * qJD(6);
t7 = t8 * qJD(4);
t6 = -t208 + t221;
t5 = -t209 + t222;
t36 = [0, 0, 0, 0, qJD(2), t194, qJD(2), qJD(3), qJD(3) * t201 + t194, -t252, t176 * qJD(4), 0, 0, 0, qJD(3) * t203 + t201 * t263, qJD(3) * t205 - t201 * t264, -t134 * qJD(2) + t24 * qJD(4) - t237 * t305, -t137 * qJD(2) - t25 * qJD(4) + t237 * t306, -qJD(3) * t133 - qJD(4) * t9 + qJD(5) * t132, qJD(2) * t21 + qJD(3) * t34 + qJD(4) * t12 - qJD(5) * t29 (-qJD(4) * t111 - qJD(6) * t351) * t112, qJD(4) * t18 + qJD(6) * t35, qJD(4) * t43 - t274 * t351, qJD(4) * t40 - t112 * t274, t252, t41 * qJD(2) + t1 * qJD(4) + t11 * qJD(6) + (-qJD(3) * t135 - t275) * t203, -t42 * qJD(2) - t2 * qJD(4) - t10 * qJD(6) + (-qJD(3) * t350 + t276) * t203; 0, 0, 0, 0, qJD(1), t195, qJD(1), 0, t195, 0, 0, 0, 0, 0, 0, 0, -t269, -t268, 0, qJD(3) * t91 + qJD(4) * t17 + qJD(5) * t115 + t319, 0, 0, 0, 0, 0, qJD(6) * t59 + t292, qJD(4) * t61 - t314 + t348; 0, 0, 0, 0, 0, 0, 0, qJD(1), t265, 0, 0, 0, 0, 0, t188, t189, t255, -t257, -t270, qJD(2) * t91 + t315 + t7, 0, 0, 0, 0, 0, qJD(6) * t33 - t260, qJD(6) * t32 - t259; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t250, t266, -t264, -t263, 0, t189 * t201 - t253, -t188 * t201 - t200 * t263, -t157 * qJD(4) + t198 * t206 + t295, t198 * t253 + t199 * t206 - t294, qJD(4) * t226 - t326, t17 * qJD(2) + (-pkin(4) * t300 + qJ(5) * t226) * qJD(4) + t27 * qJD(5) + t233, -t111 * t223 + t22, t307 + (t108 * t350 + t111 * t135) * qJD(4) + t13, t263 * t350 + t291 + t348, -t50 * qJD(6) - t258 + t293, t130, t332 + (-t182 * t108 - t128 * t135 - t205 * t88) * qJD(4) - t48 * qJD(5) + t6 * qJD(6), -t331 + t61 * qJD(2) + (-t182 * t111 - t128 * t350 - t205 * t89) * qJD(4) - t57 * qJD(5) + t5 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-qJD(4) * t198 - t254) * t203 (-qJD(4) * t199 + t256) * t203, t271, qJD(2) * t115 + qJD(4) * t27 - t318, 0, 0, 0, 0, 0, -t239, t28; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t215, t228, t15, -t213, t183, qJD(2) * t59 + qJD(3) * t33 + qJD(4) * t6 - qJD(6) * t20 + t320, qJD(2) * t229 + qJD(3) * t32 + qJD(4) * t5 + qJD(6) * t19 - t321; 0, 0, 0, 0, -qJD(1), -t195, -qJD(1), 0, -qJD(3) - t195, 0, 0, 0, 0, 0, -t263, t264, -t199 * t263 + t269, t198 * t263 + t268, t131 * qJD(4), -qJD(3) * t90 - qJD(4) * t16 - qJD(5) * t114 - t319, 0, 0, 0, 0, 0, -t49 * qJD(6) + t258 - t292, -qJD(4) * t60 - qJD(6) * t52 + t314; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t283, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t189, t188, -t254, t256, t272, -t308, 0, 0, 0, 0, 0, t251, -t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t273, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125 - t289, -t124 - t287; 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t238, 0, 0, 0, 0, 0, -t188, -t189, -t255, t257, t270, qJD(2) * t90 - t315 + t7, 0, 0, 0, 0, 0, -qJD(6) * t30 + t260, -qJD(6) * t31 + t259; 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96 * qJD(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t264, -t263, -t199 * t264, t198 * t264, t133 * qJD(4) (qJ(5) * t133 - t335) * qJD(4) + t116 * qJD(5) + t230, 0, 0, 0, 0, 0, qJD(6) * t55 + t135 * t264, qJD(6) * t54 + t264 * t350; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t116 * qJD(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t55 - qJD(6) * t111 - t317, qJD(4) * t54 + qJD(6) * t108 - t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, t250, -t266, 0, 0, 0, -t238 * t205, t238 * t203, t199 * t279 - t295, -t198 * t279 + t294, -qJD(2) * t131 + t326, qJD(2) * t16 - qJD(5) * t26 - t233, t111 * t280 + t22, t13 - t307, qJD(6) * t57 - t291, -qJD(6) * t48 - t293, -t130, -t50 * qJD(5) - t3 * qJD(6) - t135 * t279 - t332, qJD(2) * t60 - qJD(5) * t229 - qJD(6) * t4 + t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189, -t188, t254, -t256, -t272, t308, 0, 0, 0, 0, 0, -t251, t284; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t113 - t230, 0, 0, 0, 0, 0, -qJD(6) * t51, -qJD(6) * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t164 * qJD(5), t143 * qJD(5), -t135 * t125, t44 * qJD(6), 0, 0, 0, t182 * t125, -t182 * t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, -t211, 0, 0, 0, 0, 0, -t288, -t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t214, t227, -t124 + t286, -t125 - t290, -t189 / 0.2e1, -qJD(6) * t89 + t277 * t350 - t232, qJD(6) * t88 - t135 * t277 - t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t199 * t250, -t198 * t250, -t271, qJD(2) * t114 + qJD(4) * t26 + t318, 0, 0, 0, 0, 0, t213, t15; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t113 * qJD(4), 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267, t211, 0, 0, 0, 0, 0, t125 + t288, -t124 + t285; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t223, t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t215, -t228, t28, t239, t183, qJD(2) * t49 + qJD(3) * t30 + qJD(4) * t3 - t275 - t320, qJD(2) * t52 + qJD(3) * t31 + qJD(4) * t4 + t276 + t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t289, t287; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t51 + t317, qJD(4) * t53 + t316; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t214, -t227, -t286, t290, t189 / 0.2e1, -t236 * t350 + t232, t135 * t236 + t231; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t223, -t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t36;
