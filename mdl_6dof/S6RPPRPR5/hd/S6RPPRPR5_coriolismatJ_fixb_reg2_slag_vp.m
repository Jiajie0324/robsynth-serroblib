% Calculate inertial parameters regressor of coriolis matrix for
% S6RPPRPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d6,theta5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 01:49
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPPRPR5_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRPR5_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRPR5_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRPR5_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 01:49:28
% EndTime: 2019-03-09 01:49:40
% DurationCPUTime: 9.40s
% Computational Cost: add. (7062->483), mult. (13580->641), div. (0->0), fcn. (13859->6), ass. (0->370)
t362 = cos(pkin(9));
t562 = sin(qJ(6));
t453 = t562 * t362;
t361 = sin(pkin(9));
t563 = cos(qJ(6));
t457 = t563 * t361;
t287 = t457 + t453;
t365 = sin(qJ(4));
t253 = t287 * t365;
t524 = t287 * t253;
t454 = t562 * t361;
t315 = t365 * t454;
t338 = t563 * t362;
t256 = t338 * t365 - t315;
t284 = t454 - t338;
t528 = t284 * t256;
t388 = t528 / 0.2e1 - t524 / 0.2e1;
t366 = cos(qJ(4));
t514 = t366 * t287;
t264 = -t514 / 0.2e1;
t558 = pkin(8) + qJ(5);
t309 = t558 * t362;
t429 = t558 * t361;
t229 = t309 * t563 - t429 * t562;
t581 = t229 / 0.2e1;
t355 = t361 ^ 2;
t356 = t362 ^ 2;
t319 = t355 + t356;
t525 = t284 * t365;
t436 = -t525 / 0.2e1;
t419 = -t338 / 0.2e1;
t508 = t315 / 0.2e1 + t365 * t419;
t413 = t436 + t508;
t579 = qJD(6) * t413;
t364 = pkin(1) + qJ(3);
t465 = t364 * qJD(1);
t578 = -t465 + qJD(2);
t316 = t366 * t454;
t257 = t338 * t366 - t316;
t577 = t257 ^ 2;
t277 = t284 ^ 2;
t576 = t287 ^ 2;
t433 = t253 / 0.2e1;
t575 = -t257 / 0.2e1;
t574 = -t284 / 0.2e1;
t573 = t284 / 0.2e1;
t572 = t287 / 0.2e1;
t571 = t316 / 0.2e1;
t339 = -pkin(5) * t362 - pkin(4);
t570 = t339 / 0.2e1;
t359 = t365 ^ 2;
t569 = t359 / 0.2e1;
t568 = -t365 / 0.2e1;
t567 = t365 / 0.2e1;
t566 = -t366 / 0.2e1;
t565 = t366 / 0.2e1;
t531 = t257 * t253;
t533 = t256 * t514;
t85 = -t533 / 0.2e1 + t531 / 0.2e1;
t564 = t85 * qJD(5);
t561 = t361 * pkin(5);
t560 = t365 * pkin(4);
t559 = t366 * pkin(4);
t522 = t287 * t257;
t529 = t284 * t514;
t111 = t522 + t529;
t557 = t111 * qJD(5);
t363 = -pkin(7) + qJ(2);
t517 = t365 * t363;
t311 = t362 * t517;
t416 = -qJ(5) * t366 + t560;
t382 = t416 + t364;
t235 = t361 * t382 + t311;
t210 = -pkin(8) * t361 * t366 + t235;
t428 = -t361 * t363 + pkin(5);
t368 = t428 * t365 + (-t366 * t558 + t364 + t560) * t362;
t91 = t210 * t562 - t368 * t563;
t556 = t91 * t287;
t104 = -t522 / 0.2e1 - t529 / 0.2e1;
t555 = t104 * qJD(4);
t41 = -0.2e1 * t388;
t553 = qJD(1) * t41;
t427 = -t363 + t561;
t276 = t427 * t366;
t48 = t276 * t514 - t365 * t91;
t552 = qJD(1) * t48;
t92 = t210 * t563 + t368 * t562;
t49 = t257 * t276 - t365 * t92;
t551 = qJD(1) * t49;
t360 = t366 ^ 2;
t417 = -t277 / 0.2e1 - t576 / 0.2e1;
t418 = -t253 ^ 2 / 0.2e1 - t256 ^ 2 / 0.2e1;
t58 = -t360 / 0.2e1 + t417 + t418;
t550 = qJD(1) * t58;
t549 = qJD(1) * t85;
t89 = t531 - t533;
t548 = qJD(1) * t89;
t538 = t235 * t362;
t234 = -t361 * t517 + t362 * t382;
t540 = t234 * t361;
t99 = t360 * t363 + (t538 - t540) * t365;
t547 = qJD(1) * t99;
t518 = t365 * qJ(5);
t310 = t518 + t559;
t519 = t363 * t366;
t312 = t362 * t519;
t247 = t310 * t361 + t312;
t521 = t361 * t365;
t215 = pkin(8) * t521 + t247;
t455 = t562 * t215;
t292 = t362 * t310;
t520 = t362 * t365;
t181 = pkin(8) * t520 + t366 * t428 + t292;
t459 = t563 * t181;
t93 = -t455 + t459;
t456 = t562 * t181;
t458 = t563 * t215;
t94 = t458 + t456;
t10 = t253 * t92 - t256 * t91 - t257 * t93 - t514 * t94;
t546 = t10 * qJD(1);
t460 = -t556 / 0.2e1;
t71 = t556 / 0.2e1;
t12 = t71 + t460;
t545 = t12 * qJD(2);
t275 = t427 * t365;
t13 = -t275 * t276 - t91 * t93 + t92 * t94;
t544 = t13 * qJD(1);
t19 = -t253 * t276 - t275 * t514 + t365 * t93 - t366 * t91;
t543 = t19 * qJD(1);
t20 = t256 * t276 + t257 * t275 + t365 * t94 + t366 * t92;
t542 = t20 * qJD(1);
t23 = t253 * t91 + t256 * t92 - t276 * t366;
t541 = t23 * qJD(1);
t539 = t234 * t366;
t537 = t235 * t366;
t461 = t361 * t519;
t246 = t292 - t461;
t536 = t246 * t362;
t535 = t247 * t361;
t534 = t253 * t365;
t532 = t256 * t365;
t27 = t284 * t91 + t287 * t92;
t530 = t27 * qJD(1);
t527 = t284 * t257;
t523 = t287 * t514;
t516 = t366 * t514;
t515 = t366 * t257;
t341 = t366 * t365;
t47 = -t234 * t520 - t235 * t521 + (t535 + t536) * t366;
t512 = t47 * qJD(1);
t430 = t356 / 0.2e1 + t355 / 0.2e1;
t376 = t430 * t518 + t559 / 0.2e1;
t392 = -t536 / 0.2e1 - t535 / 0.2e1;
t86 = t376 - t392;
t511 = t86 * qJD(1);
t90 = t531 + t533;
t510 = t90 * qJD(1);
t333 = t359 - t360;
t332 = t359 + t360;
t112 = -t523 + t527;
t507 = qJD(1) * t112;
t120 = t234 * t362 + t235 * t361;
t114 = t120 * t366;
t506 = qJD(1) * t114;
t390 = -t532 / 0.2e1 - t515 / 0.2e1;
t396 = t338 / 0.2e1 - t454 / 0.2e1;
t115 = -t390 + t396;
t505 = qJD(1) * t115;
t377 = -t453 / 0.2e1 - t457 / 0.2e1;
t391 = t534 / 0.2e1 + t516 / 0.2e1;
t116 = t377 - t391;
t504 = qJD(1) * t116;
t503 = qJD(1) * t120;
t142 = t515 + t532;
t502 = qJD(1) * t142;
t501 = qJD(1) * t514;
t500 = qJD(1) * t257;
t293 = t332 * t363;
t499 = qJD(1) * t293;
t498 = qJD(2) * t366;
t497 = qJD(4) * t287;
t496 = qJD(4) * t339;
t495 = qJD(4) * t362;
t494 = qJD(5) * t514;
t493 = qJD(5) * t257;
t492 = qJD(6) * t257;
t491 = qJD(6) * t365;
t107 = t539 + (t246 + 0.2e1 * t461) * t365;
t490 = t107 * qJD(1);
t108 = t537 + (t247 - 0.2e1 * t312) * t365;
t489 = t108 * qJD(1);
t140 = -t516 + t534;
t488 = t140 * qJD(1);
t141 = -t516 - t534;
t487 = t141 * qJD(1);
t143 = t515 - t532;
t486 = t143 * qJD(1);
t420 = t563 * t567;
t165 = t361 * t420 + t453 * t567 + t433;
t485 = t165 * qJD(1);
t166 = (-t287 / 0.2e1 + t377) * t365;
t484 = t166 * qJD(1);
t370 = t572 + t377;
t167 = t370 * t365;
t483 = t167 * qJD(1);
t169 = t525 / 0.2e1 + t508;
t482 = t169 * qJD(1);
t174 = t436 + t362 * t420 - t315 / 0.2e1;
t481 = t174 * qJD(1);
t480 = t413 * qJD(1);
t177 = 0.2e1 * t264;
t479 = t177 * qJD(1);
t349 = t360 / 0.2e1;
t462 = t569 + 0.1e1 / 0.2e1;
t230 = t319 * t462 + t349;
t478 = t230 * qJD(1);
t260 = (-0.1e1 / 0.2e1 - t430) * t366;
t477 = t260 * qJD(1);
t336 = t355 * t365;
t337 = t356 * t365;
t280 = -t336 - t337;
t476 = t280 * qJD(1);
t281 = t319 * t360;
t475 = t281 * qJD(1);
t282 = t319 * t366;
t474 = t282 * qJD(1);
t283 = t332 * t361;
t473 = t283 * qJD(1);
t272 = t284 * qJD(6);
t286 = t332 * t362;
t472 = t286 * qJD(1);
t273 = t287 * qJD(6);
t289 = t333 * t361;
t471 = t289 * qJD(1);
t290 = t333 * t362;
t470 = t290 * qJD(1);
t307 = t349 + t462;
t469 = t307 * qJD(1);
t468 = t319 * qJD(4);
t467 = t332 * qJD(1);
t466 = t333 * qJD(1);
t351 = t365 * qJD(1);
t464 = t365 * qJD(4);
t352 = t366 * qJD(1);
t463 = t366 * qJD(4);
t452 = t514 * t500;
t451 = t284 * t351;
t450 = t287 * t351;
t449 = t284 * t497;
t448 = t284 * t463;
t447 = t361 * t495;
t446 = t362 * t463;
t445 = t284 * t273;
t444 = t361 * t351;
t443 = t361 * t352;
t442 = t362 * t351;
t441 = t362 * t352;
t440 = t363 * t464;
t335 = t365 * t463;
t439 = t284 * t352;
t334 = t365 * t352;
t438 = -t527 / 0.2e1;
t437 = t527 / 0.2e1;
t434 = -t523 / 0.2e1;
t432 = t517 / 0.2e1;
t431 = t336 / 0.2e1 + t337 / 0.2e1;
t245 = t257 * t351;
t426 = qJD(4) * t165 + t245;
t424 = qJD(5) * t366 - qJD(3);
t423 = qJD(5) + t496;
t422 = t362 * t334;
t415 = t361 * t422;
t412 = qJD(1) * t12;
t26 = t257 * t91 - t514 * t92;
t411 = -qJD(1) * t26 - qJD(3) * t85;
t46 = -t363 * t341 + (t247 * t567 + t537 / 0.2e1) * t362 + (t246 * t568 - t539 / 0.2e1) * t361;
t51 = -t341 * t363 ^ 2 + t234 * t246 + t235 * t247;
t410 = t51 * qJD(1) + t46 * qJD(3);
t409 = -t246 * t361 + t247 * t362;
t408 = t253 * t284 + t256 * t287;
t228 = t309 * t562 + t429 * t563;
t372 = t228 * t433 + t256 * t581 + t339 * t566;
t394 = t572 * t94 + t574 * t93;
t17 = t372 + t394;
t407 = -qJD(1) * t17 + qJD(3) * t104;
t168 = t370 * t366;
t373 = t229 * t568 + t257 * t570 + t276 * t572;
t379 = t459 / 0.2e1 - t455 / 0.2e1;
t31 = -t373 + t379;
t406 = t31 * qJD(1) + t168 * qJD(3);
t170 = t571 + (t419 + t574) * t366;
t374 = t228 * t567 + t276 * t574 - t514 * t570;
t378 = -t458 / 0.2e1 - t456 / 0.2e1;
t32 = -t374 + t378;
t405 = t32 * qJD(1) + t170 * qJD(3);
t236 = t282 * t365 - t341;
t404 = t46 * qJD(1) + t236 * qJD(3);
t250 = t514 ^ 2;
t121 = t250 - t577;
t59 = -t522 + t529;
t403 = qJD(1) * t121 + qJD(4) * t59;
t96 = t566 + t434 + t437;
t402 = qJD(1) * t96;
t150 = t277 - t576;
t401 = qJD(1) * t59 + qJD(4) * t150;
t152 = t250 + t577;
t400 = qJD(1) * t152 + qJD(4) * t111;
t220 = t277 + t576;
t399 = qJD(1) * t111 + qJD(4) * t220;
t398 = -qJD(4) * t284 - t501;
t397 = t497 + t500;
t395 = (t363 / 0.2e1 - t561 / 0.2e1) * t365;
t393 = t538 / 0.2e1 - t540 / 0.2e1;
t389 = t228 * t573 + t229 * t572;
t200 = t523 / 0.2e1;
t105 = t437 + t200;
t387 = -qJD(4) * t105 - t452;
t386 = qJD(1) * t105 + t449;
t106 = t434 + t438;
t385 = qJD(4) * t106 - t452;
t384 = -qJD(1) * t106 + t449;
t383 = qJD(4) * t167 + t245 + t492;
t367 = -t275 * t565 + t276 * t568 + t91 * t264 + t92 * t575 + t93 * t433 - t94 * t256 / 0.2e1;
t3 = t367 + t389;
t83 = t253 * t514 + t256 * t257 - t341;
t381 = -qJD(1) * t3 + qJD(2) * t104 + qJD(3) * t83;
t109 = t432 - t393;
t259 = t567 - t431;
t296 = t319 * qJ(5);
t380 = qJD(1) * t109 + qJD(3) * t259 - qJD(4) * t296;
t375 = t228 * t575 + t514 * t581 + t573 * t92;
t371 = qJD(4) * t416 - qJD(5) * t365;
t15 = t460 + t395 + t375;
t82 = t228 * t287 - t229 * t284;
t95 = t567 + t388;
t369 = qJD(1) * t15 + qJD(3) * t95 - qJD(4) * t82;
t358 = qJ(2) * qJD(1);
t357 = qJ(2) * qJD(2);
t345 = t364 * qJD(3);
t340 = t463 / 0.2e1;
t330 = t361 * t463;
t308 = -0.1e1 / 0.2e1 + t569 + t349;
t278 = qJD(6) * t565 + t334;
t262 = t567 + t431;
t261 = t319 * t565 + t566;
t231 = t359 * t430 + t349 - t430;
t178 = t514 / 0.2e1 + t264;
t176 = t365 * t377 + t433;
t172 = t366 * t377 + t264;
t171 = t284 * t565 + t366 * t419 + t571;
t118 = t390 + t396;
t117 = t377 + t391;
t113 = -qJD(4) * t174 + t351 * t514;
t110 = t432 + t393;
t102 = t106 * qJD(6);
t101 = t105 * qJD(6);
t98 = t200 + t438 + t566;
t97 = t567 - t388;
t87 = t376 + t392;
t81 = t413 * qJD(4) + (-qJD(6) - t351) * t514;
t57 = t349 + t417 - t418;
t56 = t59 * qJD(6);
t40 = t46 * qJD(4);
t34 = t373 + t379;
t33 = t374 + t378;
t18 = t372 - t394;
t16 = t71 + t395 - t375;
t11 = t12 * qJD(6);
t4 = -t367 + t389;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t357, 0, 0, 0, 0, 0, 0, 0, qJD(2), qJD(3), t345 + t357, -t335, t333 * qJD(4), 0, t335, 0, 0, qJD(3) * t365 + t364 * t463, qJD(3) * t366 - t364 * t464, -t332 * qJD(2), qJD(2) * t293 + t345, -t356 * t335, 0.2e1 * t362 * t361 * t335, -t290 * qJD(4), -t355 * t335, t289 * qJD(4), t335, -t283 * qJD(2) + t107 * qJD(4) - t424 * t520, -t286 * qJD(2) - t108 * qJD(4) + t424 * t521, -qJD(3) * t282 - qJD(4) * t47 + qJD(5) * t281, qJD(2) * t99 + qJD(3) * t120 + qJD(4) * t51 - qJD(5) * t114 (-qJD(4) * t256 - qJD(6) * t514) * t257, qJD(4) * t90 + qJD(6) * t121, qJD(4) * t143 - t491 * t514 (-qJD(4) * t253 + t492) * t514, qJD(4) * t140 - t257 * t491, t335, t141 * qJD(2) + t19 * qJD(4) + t49 * qJD(6) + (-qJD(3) * t284 - t493) * t365, -t142 * qJD(2) - t20 * qJD(4) - t48 * qJD(6) + (-qJD(3) * t287 + t494) * t365, qJD(2) * t89 + qJD(3) * t112 + qJD(4) * t10 + qJD(5) * t152, qJD(2) * t23 + qJD(3) * t27 + qJD(4) * t13 + qJD(5) * t26; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t358, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, t358, 0, 0, 0, 0, 0, 0, 0, 0, -t467, qJD(3) * t308 + t499, 0, 0, 0, 0, 0, 0, -t473, -t472, 0, qJD(3) * t231 + qJD(4) * t87 + qJD(5) * t261 + t547, 0, 0, 0, 0, 0, 0, qJD(6) * t176 + t487, qJD(4) * t178 - t502 + t579, t548, -qJD(2) * t408 + qJD(3) * t57 + qJD(4) * t18 + qJD(5) * t98 + t11 + t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), t465, 0, 0, 0, 0, 0, 0, t351, t352, 0, qJD(2) * t308 + t465, 0, 0, 0, 0, 0, 0, t442, -t444, -t474, qJD(2) * t231 + t40 + t503, 0, 0, 0, 0, 0, 0, qJD(6) * t118 - t451, qJD(6) * t117 - t450, t507, qJD(2) * t57 + qJD(3) * t408 + qJD(4) * t4 + t530 + t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334, t466, -t464, t334, -t463, 0, t352 * t364 - t440, -t351 * t364 - t363 * t463, 0, 0 (-t352 * t356 - t447) * t365, 0.2e1 * t415 + (t336 - t337) * qJD(4), t330 - t470 (-t352 * t355 + t447) * t365, t446 + t471, t334, -t311 * qJD(4) + t361 * t371 + t490, t361 * t440 + t362 * t371 - t489, qJD(4) * t409 - t512, t87 * qJD(2) + (-pkin(4) * t517 + qJ(5) * t409) * qJD(4) + t110 * qJD(5) + t410, -t256 * t397 + t102, t510 + (t524 + t528) * qJD(4) + t56, t287 * t463 + t486 + t579, t253 * t398 + t101, -qJD(6) * t167 - t448 + t488, t278, t543 + (-t228 * t366 - t253 * t339 - t275 * t284) * qJD(4) - t165 * qJD(5) + t34 * qJD(6), -t542 + t178 * qJD(2) + (-t229 * t366 - t256 * t339 - t275 * t287) * qJD(4) - t174 * qJD(5) + t33 * qJD(6), t546 + (-t228 * t256 + t229 * t253 - t284 * t94 - t287 * t93) * qJD(4) + t557, t544 + t18 * qJD(2) + t4 * qJD(3) + (-t228 * t93 + t229 * t94 - t275 * t339) * qJD(4) + t16 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-qJD(4) * t361 - t441) * t365 (t443 - t495) * t365, t475, qJD(2) * t261 + qJD(4) * t110 - t506, 0, 0, 0, 0, 0, 0, -t426, t113, t400, qJD(2) * t98 + qJD(4) * t16 - t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t385, t403, t81, -t387, -t383, t340, qJD(2) * t176 + qJD(3) * t118 + qJD(4) * t34 - qJD(6) * t92 + t551, qJD(2) * t413 + qJD(3) * t117 + qJD(4) * t33 + qJD(6) * t91 - t552, 0, t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), -t358, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, -qJD(3) - t358, 0, 0, 0, 0, 0, 0, -t463, t464, t467, -qJD(3) * t307 - t499, 0, 0, 0, 0, 0, 0, -t446 + t473, t330 + t472, t280 * qJD(4), -qJD(3) * t230 - qJD(4) * t86 - qJD(5) * t260 - t547, 0, 0, 0, 0, 0, 0, -qJD(6) * t166 + t448 - t487, -qJD(4) * t177 - qJD(6) * t169 + t502, -qJD(4) * t41 - t548, qJD(3) * t58 - qJD(4) * t17 - qJD(5) * t96 + t11 - t541; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, -t469, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t478, 0, 0, 0, 0, 0, 0, 0, 0, 0, t550 + t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t352, t351, 0, 0, 0, 0, 0, 0, 0, 0, -t441, t443, t476, -t511, 0, 0, 0, 0, 0, 0, t439, -t479, -t553, t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t477, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t273 - t484, -t272 - t482, 0, t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(1), t578, 0, 0, 0, 0, 0, 0, -t351, -t352, 0, qJD(2) * t307 - t465, 0, 0, 0, 0, 0, 0, -t442, t444, t474, qJD(2) * t230 + t40 - t503, 0, 0, 0, 0, 0, 0, -qJD(6) * t115 + t451, -qJD(6) * t116 + t450, -t507, -qJD(2) * t58 - qJD(4) * t3 - t530 + t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(1), 0, 0, 0, 0, 0, 0, 0, 0, 0, t469, 0, 0, 0, 0, 0, 0, 0, 0, 0, t478, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t550 + t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t236 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, t83 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t464, -t463, 0, 0, 0, 0, 0, 0, 0, 0, -t362 * t464, t361 * t464, t282 * qJD(4) (qJ(5) * t282 - t560) * qJD(4) + t262 * qJD(5) + t404, 0, 0, 0, 0, 0, 0, qJD(6) * t172 + t284 * t464, qJD(6) * t171 + t287 * t464, -qJD(4) * t112 (t228 * t514 + t229 * t257 + t339 * t365) * qJD(4) + t97 * qJD(5) + t381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t97 + t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t172 - qJD(6) * t256 - t505, qJD(4) * t171 + qJD(6) * t253 - t504, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t334, -t466, 0, -t334, 0, 0, t578 * t366, -t578 * t365, 0, 0, t356 * t334, -0.2e1 * t415, t470, t355 * t334, -t471, -t334, t362 * t498 - t490, -t361 * t498 + t489, -qJD(2) * t280 + t512, qJD(2) * t86 - qJD(5) * t109 - t410, t256 * t500 + t102, t56 - t510, qJD(6) * t174 - t486, t253 * t501 + t101, -qJD(6) * t165 - t488, -t278, -qJD(5) * t167 - qJD(6) * t31 - t284 * t498 - t543, qJD(2) * t177 - qJD(5) * t413 - qJD(6) * t32 + t542, qJD(2) * t41 - t546 + t557, qJD(2) * t17 + qJD(3) * t3 - qJD(5) * t15 - t544; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t352, -t351, 0, 0, 0, 0, 0, 0, 0, 0, t441, -t443, -t476, t511, 0, 0, 0, 0, 0, 0, -t439, t479, t553, -t407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t259 - t404, 0, 0, 0, 0, 0, 0, -t168 * qJD(6), -t170 * qJD(6), 0, -qJD(5) * t95 - t381; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t319 * qJD(5), t296 * qJD(5), -t445, t150 * qJD(6), 0, t445, 0, 0, t339 * t273, -t339 * t272, t220 * qJD(5), t82 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t468, -t380, 0, 0, 0, 0, 0, 0, -t483, -t480, t399, -t369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t384, t401, -t272 + t481, t386, -t273 - t485, -t352 / 0.2e1, -qJD(6) * t229 + t287 * t496 - t406, qJD(6) * t228 - t284 * t496 - t405, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t422, -t361 * t334, -t475, qJD(2) * t260 + qJD(4) * t109 + t506, 0, 0, 0, 0, 0, 0, t383, t81, -t400, qJD(2) * t96 + qJD(4) * t15 + t411; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t477, 0, 0, 0, 0, 0, 0, 0, 0, 0, t402; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t259 * qJD(4), 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t95 - t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t468, t380, 0, 0, 0, 0, 0, 0, t273 + t483, -t272 + t480, -t399, t369; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t397, t398, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t385, -t403, t113, t387, t426, t340, qJD(2) * t166 + qJD(3) * t115 + qJD(4) * t31 - t493 - t551, qJD(2) * t169 + qJD(3) * t116 + qJD(4) * t32 + t494 + t552, 0, -t545; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t484, t482, 0, -t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t168 + t505, qJD(4) * t170 + t504, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t384, -t401, -t481, -t386, t485, t352 / 0.2e1, -t287 * t423 + t406, t284 * t423 + t405, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t397, -t398, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t1;
