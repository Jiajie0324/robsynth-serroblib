% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d5,theta4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 17:02
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPRP6_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPRP6_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPRP6_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRPRP6_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 17:01:09
% EndTime: 2019-03-09 17:01:38
% DurationCPUTime: 13.41s
% Computational Cost: add. (21487->664), mult. (56812->892), div. (0->0), fcn. (45058->10), ass. (0->297)
t288 = sin(pkin(6));
t295 = cos(qJ(2));
t365 = qJD(1) * t295;
t273 = t288 * t365;
t318 = t273 - qJD(3);
t292 = sin(qJ(2));
t366 = qJD(1) * t292;
t351 = t288 * t366;
t289 = cos(pkin(6));
t416 = pkin(1) * t295;
t355 = t289 * t416;
t238 = -pkin(8) * t351 + qJD(1) * t355;
t311 = (pkin(2) * t292 - pkin(9) * t295) * t288;
t239 = qJD(1) * t311;
t291 = sin(qJ(3));
t294 = cos(qJ(3));
t179 = -t291 * t238 + t294 * t239;
t413 = -qJ(4) - pkin(9);
t343 = qJD(3) * t413;
t368 = qJD(1) * t288;
t377 = t294 * t295;
t439 = (pkin(3) * t292 - qJ(4) * t377) * t368 + t179 + t291 * qJD(4) - t294 * t343;
t180 = t294 * t238 + t291 * t239;
t324 = t291 * t273;
t438 = qJ(4) * t324 + t294 * qJD(4) + t291 * t343 - t180;
t287 = sin(pkin(11));
t401 = cos(pkin(11));
t341 = t401 * t291;
t255 = t287 * t294 + t341;
t372 = t318 * t255;
t381 = t287 * t291;
t307 = t294 * t401 - t381;
t204 = t307 * t273;
t246 = t307 * qJD(3);
t371 = t246 - t204;
t373 = -t287 * t439 + t438 * t401;
t379 = t288 * t295;
t370 = t289 * t292 * pkin(1) + pkin(8) * t379;
t241 = t370 * qJD(1);
t361 = qJD(3) * t291;
t321 = -t241 + (-t324 + t361) * pkin(3);
t290 = sin(qJ(5));
t367 = qJD(1) * t289;
t274 = qJD(2) + t367;
t323 = t291 * t351;
t222 = t274 * t294 - t323;
t223 = t274 * t291 + t294 * t351;
t308 = t287 * t222 + t223 * t401;
t293 = cos(qJ(5));
t331 = t293 * t318;
t147 = t290 * t308 + t331;
t209 = t274 * pkin(9) + t241;
t236 = (-pkin(2) * t295 - pkin(9) * t292 - pkin(1)) * t288;
t216 = qJD(1) * t236;
t161 = -t291 * t209 + t294 * t216;
t137 = -t223 * qJ(4) + t161;
t124 = -pkin(3) * t318 + t137;
t162 = t209 * t294 + t216 * t291;
t138 = qJ(4) * t222 + t162;
t342 = t401 * t138;
t78 = t287 * t124 + t342;
t71 = -pkin(10) * t318 + t78;
t208 = -pkin(2) * t274 - t238;
t167 = -pkin(3) * t222 + qJD(4) + t208;
t169 = -t401 * t222 + t223 * t287;
t94 = pkin(4) * t169 - pkin(10) * t308 + t167;
t41 = t290 * t94 + t293 * t71;
t23 = -qJ(6) * t147 + t41;
t428 = qJD(5) + t169;
t437 = t23 * t428;
t436 = pkin(10) * t351 - t373;
t435 = t372 * pkin(4) + t371 * pkin(10) - t321;
t184 = t204 * t290 - t293 * t351;
t337 = -t246 * t290 + t184;
t364 = qJD(2) * t292;
t350 = t288 * t364;
t270 = qJD(1) * t350;
t240 = qJD(2) * t311;
t230 = qJD(1) * t240;
t380 = t288 * t292;
t275 = pkin(8) * t380;
t249 = -t275 + t355;
t242 = t249 * qJD(2);
t231 = qJD(1) * t242;
t335 = t294 * t230 - t291 * t231;
t120 = -qJD(3) * t162 + t335;
t356 = qJD(1) * qJD(2);
t344 = t295 * t356;
t322 = t288 * t344;
t360 = qJD(3) * t294;
t193 = qJD(3) * t323 - t274 * t360 - t294 * t322;
t79 = pkin(3) * t270 + t193 * qJ(4) - t223 * qJD(4) + t120;
t362 = qJD(2) * t295;
t348 = t291 * t362;
t194 = (t292 * t360 + t348) * t368 + t274 * t361;
t304 = t209 * t361 - t216 * t360 - t291 * t230 - t294 * t231;
t86 = -qJ(4) * t194 + qJD(4) * t222 - t304;
t39 = t287 * t79 + t401 * t86;
t34 = pkin(10) * t270 + t39;
t139 = -t287 * t193 + t401 * t194;
t243 = t370 * qJD(2);
t232 = qJD(1) * t243;
t158 = t194 * pkin(3) + t232;
t309 = t193 * t401 + t287 * t194;
t65 = t139 * pkin(4) + pkin(10) * t309 + t158;
t6 = -qJD(5) * t41 - t290 * t34 + t293 * t65;
t434 = t41 * t428 + t6;
t358 = qJD(5) * t293;
t359 = qJD(5) * t290;
t340 = -t290 * t65 - t293 * t34 - t94 * t358 + t71 * t359;
t40 = -t290 * t71 + t293 * t94;
t433 = -t40 * t428 - t340;
t432 = t169 * t308;
t374 = t438 * t287 + t401 * t439;
t346 = t255 * t358;
t303 = t346 - t337;
t326 = qJD(3) * t318;
t431 = -pkin(9) * t326 + t232;
t329 = t428 * t293;
t378 = t290 * t139;
t430 = -t329 * t428 - t378;
t429 = t318 * t161 - t304;
t284 = t288 ^ 2;
t427 = -0.2e1 * t284 * t356;
t425 = -t436 * t290 + t435 * t293;
t283 = -pkin(3) * t294 - pkin(2);
t195 = -pkin(4) * t307 - pkin(10) * t255 + t283;
t424 = -t195 * t358 + t435 * t290 + t436 * t293;
t247 = -t289 * t294 + t291 * t380;
t248 = t289 * t291 + t294 * t380;
t187 = t247 * t401 + t248 * t287;
t188 = -t287 * t247 + t248 * t401;
t234 = t275 + (-pkin(2) - t416) * t289;
t192 = t247 * pkin(3) + t234;
t118 = t187 * pkin(4) - t188 * pkin(10) + t192;
t235 = pkin(9) * t289 + t370;
t173 = -t235 * t291 + t294 * t236;
t142 = -pkin(3) * t379 - qJ(4) * t248 + t173;
t174 = t294 * t235 + t291 * t236;
t156 = -qJ(4) * t247 + t174;
t103 = t287 * t142 + t401 * t156;
t98 = -pkin(10) * t379 + t103;
t54 = t290 * t118 + t293 * t98;
t422 = t169 * t318;
t421 = t222 * t318;
t420 = t223 * t318;
t375 = pkin(4) * t351 + t374;
t269 = t413 * t294;
t207 = -t269 * t401 + t381 * t413;
t197 = t293 * t207;
t144 = t290 * t195 + t197;
t149 = -t290 * t318 + t293 * t308;
t88 = qJD(5) * t331 - t290 * t270 + t293 * t309 + t308 * t359;
t297 = t88 * qJ(6) + t6;
t415 = t139 * pkin(5);
t1 = -t149 * qJD(6) + t297 + t415;
t418 = t1 + t437;
t89 = qJD(5) * t149 - t293 * t270 - t290 * t309;
t417 = t149 ^ 2;
t414 = t147 * pkin(5);
t22 = -qJ(6) * t149 + t40;
t18 = pkin(5) * t428 + t22;
t412 = t18 - t22;
t185 = t204 * t293 + t290 * t351;
t315 = -qJ(6) * t246 - qJD(6) * t255;
t411 = -qJ(6) * t185 - t315 * t293 - (-t197 + (qJ(6) * t255 - t195) * t290) * qJD(5) + t425 + t372 * pkin(5);
t410 = -(-qJD(5) * t207 + t315) * t290 + t424 + (-t184 + t346) * qJ(6);
t409 = qJD(5) * t144 + t425;
t408 = t207 * t359 + t424;
t38 = -t287 * t86 + t401 * t79;
t407 = t88 * t290;
t406 = t89 * t293;
t125 = -t235 * t361 + t236 * t360 + t291 * t240 + t294 * t242;
t199 = qJD(3) * t248 + t288 * t348;
t104 = -qJ(4) * t199 - qJD(4) * t247 + t125;
t126 = -qJD(3) * t174 + t294 * t240 - t291 * t242;
t349 = t288 * t362;
t200 = -qJD(3) * t247 + t294 * t349;
t99 = pkin(3) * t350 - t200 * qJ(4) - t248 * qJD(4) + t126;
t50 = t401 * t104 + t287 * t99;
t405 = t303 * pkin(5) + t375;
t404 = -t147 * t358 - t290 * t89;
t281 = pkin(3) * t287 + pkin(10);
t376 = qJ(6) + t281;
t334 = qJD(5) * t376;
t388 = t169 * t290;
t112 = pkin(3) * t223 + pkin(4) * t308 + pkin(10) * t169;
t131 = t287 * t138;
t85 = t137 * t401 - t131;
t45 = t290 * t112 + t293 * t85;
t403 = -qJ(6) * t388 + t293 * qJD(6) - t290 * t334 - t45;
t387 = t169 * t293;
t44 = t293 * t112 - t290 * t85;
t402 = -pkin(5) * t308 - qJ(6) * t387 - t290 * qJD(6) - t293 * t334 - t44;
t400 = t139 * t187;
t399 = t139 * t307;
t398 = t147 * t428;
t397 = t147 * t308;
t396 = t147 * t169;
t395 = t149 * t147;
t394 = t149 * t428;
t393 = t149 * t308;
t392 = t149 * t290;
t391 = t428 * t308;
t390 = t308 ^ 2;
t389 = t169 ^ 2;
t386 = t223 * t222;
t384 = t255 * t290;
t383 = t255 * t293;
t382 = t284 * qJD(1) ^ 2;
t134 = t293 * t139;
t369 = t292 ^ 2 - t295 ^ 2;
t363 = qJD(2) * t294;
t353 = t290 * t379;
t339 = qJD(6) + t414;
t53 = t293 * t118 - t290 * t98;
t84 = t137 * t287 + t342;
t336 = -t246 * t293 + t185;
t143 = t293 * t195 - t207 * t290;
t206 = -t269 * t287 - t413 * t341;
t333 = t308 * t318;
t332 = t290 * t428;
t330 = t295 * t318;
t328 = t318 * t288;
t327 = t274 + t367;
t325 = t292 * t295 * t382;
t282 = -pkin(3) * t401 - pkin(4);
t320 = pkin(1) * t427;
t49 = -t287 * t104 + t401 * t99;
t312 = t89 * qJ(6) + t340;
t2 = -qJD(6) * t147 - t312;
t319 = -t18 * t428 + t2;
t317 = -t290 * t41 - t293 * t40;
t77 = t124 * t401 - t131;
t102 = t142 * t401 - t287 * t156;
t316 = t284 * t292 * t344;
t314 = t134 + (-t359 - t388) * t428;
t313 = t328 * t366;
t97 = pkin(4) * t379 - t102;
t164 = t188 * t290 + t293 * t379;
t47 = pkin(10) * t350 + t50;
t154 = t199 * t401 + t200 * t287;
t155 = -t287 * t199 + t200 * t401;
t172 = t199 * pkin(3) + t243;
t74 = t154 * pkin(4) - t155 * pkin(10) + t172;
t9 = t118 * t358 + t290 * t74 + t293 * t47 - t359 * t98;
t70 = pkin(4) * t318 - t77;
t305 = -t139 * t281 + t428 * t70;
t302 = -t255 * t359 - t336;
t33 = -pkin(4) * t270 - t38;
t300 = pkin(1) * (-t289 * t356 + t382);
t46 = -pkin(4) * t350 - t49;
t17 = pkin(5) * t89 + t33;
t10 = -qJD(5) * t54 - t290 * t47 + t293 * t74;
t263 = -t293 * pkin(5) + t282;
t252 = t376 * t293;
t251 = t376 * t290;
t198 = (-t284 * t365 - t328) * t364;
t178 = pkin(5) * t384 + t206;
t165 = t188 * t293 - t353;
t146 = t147 ^ 2;
t129 = -qJ(6) * t384 + t144;
t122 = -pkin(5) * t307 - qJ(6) * t383 + t143;
t107 = -qJD(5) * t353 + t155 * t290 + t188 * t358 - t293 * t350;
t106 = qJD(5) * t164 - t293 * t155 - t290 * t350;
t68 = t164 * pkin(5) + t97;
t67 = -t146 + t417;
t62 = -pkin(5) * t388 + t84;
t58 = t154 * t428 + t400;
t57 = -t372 * t428 - t399;
t56 = t339 + t70;
t52 = t394 - t89;
t51 = -t88 + t398;
t42 = -qJ(6) * t164 + t54;
t36 = t147 * t332 - t406;
t35 = t149 * t329 - t407;
t32 = -t393 + t430;
t31 = -t393 - t430;
t30 = t314 + t397;
t29 = t314 - t397;
t27 = pkin(5) * t187 - qJ(6) * t165 + t53;
t25 = t107 * t147 + t164 * t89;
t24 = -t106 * t149 - t165 * t88;
t21 = t107 * pkin(5) + t46;
t20 = t147 * t303 + t384 * t89;
t19 = t149 * t302 - t383 * t88;
t16 = -t107 * t428 - t139 * t164 - t147 * t154 - t187 * t89;
t15 = -t106 * t428 + t139 * t165 + t149 * t154 - t187 * t88;
t14 = t147 * t372 - t255 * t378 - t303 * t428 + t307 * t89;
t13 = t134 * t255 - t149 * t372 + t302 * t428 + t307 * t88;
t12 = (-t88 - t396) * t293 - t428 * t392 + t404;
t11 = (t88 - t396) * t293 + t149 * t332 + t404;
t8 = t106 * t147 - t107 * t149 + t164 * t88 - t165 * t89;
t7 = t337 * t149 + t336 * t147 + (t407 - t406 + (t147 * t290 - t149 * t293) * qJD(5)) * t255;
t4 = -qJ(6) * t107 - qJD(6) * t164 + t9;
t3 = t154 * pkin(5) + t106 * qJ(6) - t165 * qJD(6) + t10;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t316, t369 * t427, t327 * t349, -0.2e1 * t316, -t327 * t350, 0, -t232 * t289 - t243 * t274 + t292 * t320, -t231 * t289 - t242 * t274 + t295 * t320 (t231 * t295 + t232 * t292 + (-t238 * t295 - t241 * t292) * qJD(2) + (t242 * t295 + t243 * t292 + (-t249 * t295 - t292 * t370) * qJD(2)) * qJD(1)) * t288, t231 * t370 - t232 * t249 - t238 * t243 + t241 * t242, -t193 * t248 + t200 * t223, t193 * t247 - t194 * t248 - t199 * t223 + t200 * t222, -t200 * t318 + (t193 * t295 + (qJD(1) * t248 + t223) * t364) * t288, t194 * t247 - t199 * t222, t199 * t318 + (t194 * t295 + (-qJD(1) * t247 + t222) * t364) * t288, t198, -t126 * t318 - t243 * t222 + t234 * t194 + t232 * t247 + t208 * t199 + (-t120 * t295 + (qJD(1) * t173 + t161) * t364) * t288, t125 * t318 + t243 * t223 - t234 * t193 + t232 * t248 + t208 * t200 + (-t304 * t295 + (-qJD(1) * t174 - t162) * t364) * t288, -t120 * t248 + t125 * t222 - t126 * t223 - t161 * t200 - t162 * t199 + t173 * t193 - t174 * t194 + t247 * t304, t120 * t173 + t125 * t162 + t126 * t161 - t174 * t304 + t208 * t243 + t232 * t234, t155 * t308 - t188 * t309, -t188 * t139 - t154 * t308 - t155 * t169 + t187 * t309, -t155 * t318 + (t309 * t295 + (qJD(1) * t188 + t308) * t364) * t288, t154 * t169 + t400, t154 * t318 + (t139 * t295 + (-qJD(1) * t187 - t169) * t364) * t288, t198, -t49 * t318 + t172 * t169 + t192 * t139 + t158 * t187 + t167 * t154 + (-t38 * t295 + (qJD(1) * t102 + t77) * t364) * t288, t50 * t318 + t172 * t308 - t192 * t309 + t158 * t188 + t167 * t155 + (t39 * t295 + (-qJD(1) * t103 - t78) * t364) * t288, t102 * t309 - t103 * t139 - t78 * t154 - t77 * t155 - t50 * t169 - t39 * t187 - t38 * t188 - t308 * t49, t102 * t38 + t103 * t39 + t158 * t192 + t167 * t172 + t49 * t77 + t50 * t78, t24, t8, t15, t25, t16, t58, t10 * t428 + t107 * t70 + t139 * t53 + t147 * t46 + t154 * t40 + t164 * t33 + t187 * t6 + t89 * t97, -t106 * t70 - t139 * t54 + t149 * t46 - t154 * t41 + t165 * t33 + t187 * t340 - t428 * t9 - t88 * t97, -t10 * t149 + t106 * t40 - t107 * t41 - t147 * t9 + t164 * t340 - t165 * t6 + t53 * t88 - t54 * t89, t10 * t40 + t33 * t97 - t340 * t54 + t41 * t9 + t46 * t70 + t53 * t6, t24, t8, t15, t25, t16, t58, t1 * t187 + t107 * t56 + t139 * t27 + t147 * t21 + t154 * t18 + t164 * t17 + t3 * t428 + t68 * t89, -t106 * t56 - t139 * t42 + t149 * t21 - t154 * t23 + t165 * t17 - t187 * t2 - t4 * t428 - t68 * t88, -t1 * t165 + t106 * t18 - t107 * t23 - t147 * t4 - t149 * t3 - t164 * t2 + t27 * t88 - t42 * t89, t1 * t27 + t17 * t68 + t18 * t3 + t2 * t42 + t21 * t56 + t23 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325, t369 * t382 (qJD(2) - t274) * t273, t325, t274 * t351 - t270, 0, -pkin(8) * t322 + t241 * t274 + t292 * t300, pkin(8) * t270 + t238 * t274 + t295 * t300, 0, 0, -t193 * t291 - t294 * t420 (-t193 - t421) * t294 + (-t194 + t420) * t291, -t294 * t326 + (t294 * t330 + (qJD(2) * t291 - t223) * t292) * t368, -t194 * t294 + t291 * t421, t291 * t326 + (-t291 * t330 + (-t222 + t363) * t292) * t368, t313, -pkin(2) * t194 + t208 * t361 + t179 * t318 + t241 * t222 - t431 * t294 + (-t161 * t292 + (-pkin(9) * t364 - t208 * t295) * t291) * t368, pkin(2) * t193 + t208 * t360 - t180 * t318 - t241 * t223 + t431 * t291 + (-t208 * t377 + (-pkin(9) * t363 + t162) * t292) * t368, t179 * t223 - t180 * t222 + ((qJD(3) * t223 - t194) * pkin(9) + t429) * t294 + (-t120 + t318 * t162 + (-qJD(3) * t222 - t193) * pkin(9)) * t291, -t232 * pkin(2) - t161 * t179 - t162 * t180 - t208 * t241 + (-t304 * t294 - t120 * t291 + (-t161 * t294 - t162 * t291) * qJD(3)) * pkin(9), -t255 * t309 + t308 * t371, -t255 * t139 - t169 * t371 - t307 * t309 + t308 * t372 (qJD(2) * t255 - t308) * t351 - t371 * t318, -t169 * t372 - t399 (qJD(2) * t307 + t169) * t351 - t372 * t318, t313, t283 * t139 - t158 * t307 + t321 * t169 - t372 * t167 + (-qJD(2) * t206 - t77) * t351 + t374 * t318, -t283 * t309 + t158 * t255 + t321 * t308 + t371 * t167 + (-qJD(2) * t207 + t78) * t351 + t373 * t318, -t207 * t139 - t169 * t373 - t206 * t309 - t38 * t255 + t307 * t39 + t308 * t374 - t371 * t77 + t372 * t78, t158 * t283 + t167 * t321 - t38 * t206 + t39 * t207 + t373 * t78 - t374 * t77, t19, t7, t13, t20, t14, t57, t139 * t143 + t147 * t375 + t206 * t89 + t303 * t70 - t307 * t6 + t33 * t384 - t372 * t40 - t409 * t428, -t139 * t144 + t149 * t375 - t206 * t88 + t302 * t70 - t307 * t340 + t33 * t383 + t372 * t41 + t408 * t428, t143 * t88 - t144 * t89 + t184 * t41 + t185 * t40 + t317 * t246 + t409 * t149 + t408 * t147 + (t340 * t290 - t6 * t293 + (t290 * t40 - t293 * t41) * qJD(5)) * t255, t6 * t143 - t144 * t340 + t33 * t206 + t375 * t70 - t40 * t409 - t408 * t41, t19, t7, t13, t20, t14, t57, -t1 * t307 + t122 * t139 + t147 * t405 + t17 * t384 + t178 * t89 - t18 * t372 + t303 * t56 - t411 * t428, -t129 * t139 + t149 * t405 + t17 * t383 - t178 * t88 + t2 * t307 + t23 * t372 + t302 * t56 + t410 * t428, t122 * t88 - t129 * t89 + t337 * t23 + t336 * t18 + t411 * t149 + t410 * t147 + (-t1 * t293 - t2 * t290 + (t18 * t290 - t23 * t293) * qJD(5)) * t255, t1 * t122 + t2 * t129 + t17 * t178 - t18 * t411 - t23 * t410 + t405 * t56; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386, -t222 ^ 2 + t223 ^ 2, -t193 + t421, t386, -t194 - t420, t270, -t162 * t273 - t208 * t223 + t335, -t208 * t222 - t429, 0, 0, t432, -t389 + t390, -t309 - t422, -t432, -t139 - t333, t270, -t84 * t318 - t167 * t308 + (-t223 * t169 + t270 * t401) * pkin(3) + t38, -t85 * t318 + t167 * t169 + (-t223 * t308 - t270 * t287) * pkin(3) - t39 (-t287 * t139 + t309 * t401) * pkin(3) + (t78 - t84) * t308 + (t85 - t77) * t169, t77 * t84 - t78 * t85 + (-t167 * t223 + t287 * t39 + t38 * t401) * pkin(3), t35, t12, t31, t36, t30, -t391, -t84 * t147 - t40 * t308 + t282 * t89 - t33 * t293 + (-t281 * t358 - t44) * t428 + t305 * t290, -t84 * t149 + t41 * t308 - t282 * t88 + t33 * t290 + (t281 * t359 + t45) * t428 + t305 * t293, t147 * t45 + t149 * t44 + (-t169 * t40 - t281 * t89 - t340 + (t149 * t281 - t40) * qJD(5)) * t293 + (-t169 * t41 - t281 * t88 - t6 + (t147 * t281 - t41) * qJD(5)) * t290, t33 * t282 - t40 * t44 - t41 * t45 - t70 * t84 + (qJD(5) * t317 - t6 * t290 - t293 * t340) * t281, t35, t12, t31, t36, t30, -t391, -t251 * t139 - t62 * t147 - t18 * t308 - t17 * t293 + t263 * t89 + t402 * t428 + (t169 * t56 + (t56 + t414) * qJD(5)) * t290, t56 * t387 - t252 * t139 - t62 * t149 + t23 * t308 + t17 * t290 - t263 * t88 - t403 * t428 + (pkin(5) * t392 + t293 * t56) * qJD(5), -t403 * t147 - t402 * t149 - t251 * t88 - t252 * t89 - t290 * t418 + t319 * t293, -t1 * t251 + t17 * t263 + t2 * t252 + (pkin(5) * t359 - t62) * t56 + t403 * t23 + t402 * t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139 - t333, -t309 + t422, -t389 - t390, t169 * t78 + t308 * t77 + t158, 0, 0, 0, 0, 0, 0, t29, t32, t11, t290 * t433 + t293 * t434 - t70 * t308, 0, 0, 0, 0, 0, 0, t29, t32, t11, t319 * t290 + t293 * t418 - t56 * t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t395, t67, t51, -t395, t52, t139, -t70 * t149 + t434, t147 * t70 - t433, 0, 0, t395, t67, t51, -t395, t52, t139, 0.2e1 * t415 + t437 + (-t339 - t56) * t149 + t297, -t417 * pkin(5) + t22 * t428 + (qJD(6) + t56) * t147 + t312, t88 * pkin(5) - t147 * t412, t412 * t23 + (-t56 * t149 + t1) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89 + t394, -t88 - t398, -t146 - t417, t147 * t23 + t149 * t18 + t17;];
tauc_reg  = t5;
