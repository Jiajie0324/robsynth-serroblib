% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRR7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5,d6]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 14:01
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRR7_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRR7_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRR7_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPRRR7_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 13:59:46
% EndTime: 2019-03-09 14:00:00
% DurationCPUTime: 5.43s
% Computational Cost: add. (7111->388), mult. (14735->659), div. (0->0), fcn. (13555->8), ass. (0->205)
t108 = sin(qJ(6));
t112 = cos(qJ(5));
t237 = cos(qJ(6));
t186 = t237 * t112;
t109 = sin(qJ(5));
t219 = t108 * t109;
t146 = t186 - t219;
t247 = qJD(5) + qJD(6);
t177 = t237 * qJD(6);
t250 = qJD(5) * t237 + t177;
t44 = -t112 * t250 + t219 * t247;
t187 = t237 * t109;
t79 = t108 * t112 + t187;
t45 = t247 * t79;
t257 = (qJD(6) * (-t108 * t79 - t146 * t237) + t108 * t45 - t237 * t44) * pkin(5);
t110 = sin(qJ(4));
t114 = cos(qJ(2));
t242 = pkin(7) - pkin(8);
t190 = t242 * t114;
t173 = t110 * t190;
t111 = sin(qJ(2));
t113 = cos(qJ(4));
t216 = t111 * t113;
t191 = t242 * t111;
t251 = -t113 * t191 + t173;
t254 = qJD(4) * t251;
t119 = qJD(2) * (-t216 * t242 + t173) - t254;
t217 = t111 * t110;
t77 = t113 * t114 + t217;
t78 = -t110 * t114 + t216;
t248 = t77 * pkin(4) - t78 * pkin(9);
t218 = t111 * qJ(3);
t243 = pkin(2) + pkin(3);
t72 = t114 * t243 + pkin(1) + t218;
t128 = t72 + t248;
t256 = -qJD(5) * t128 - t119;
t172 = t113 * t190;
t136 = t110 * t191 + t172;
t104 = t114 * qJD(2);
t206 = t111 * qJD(2);
t211 = qJD(4) * t114;
t212 = qJD(4) * t113;
t46 = t111 * t212 - t113 * t206 + (t104 - t211) * t110;
t213 = qJD(4) * t110;
t47 = qJD(2) * t77 - t111 * t213 - t113 * t211;
t205 = t111 * qJD(3);
t221 = qJ(3) * t114;
t54 = t205 + (-t111 * t243 + t221) * qJD(2);
t255 = t46 * pkin(4) - t47 * pkin(9) - qJD(5) * t136 + t54;
t106 = t109 ^ 2;
t107 = t112 ^ 2;
t215 = t106 - t107;
t85 = t215 * qJD(5);
t252 = 0.2e1 * t85;
t214 = t106 + t107;
t192 = t113 * t243;
t58 = qJ(3) * t213 - qJD(3) * t113 + qJD(4) * t192;
t37 = t214 * t58;
t62 = t146 * t110;
t176 = t214 * t113;
t209 = qJD(5) * t112;
t188 = t78 * t209;
t147 = t109 * t47 + t188;
t210 = qJD(5) * t109;
t189 = t78 * t210;
t227 = t112 * t47;
t249 = t189 - t227;
t83 = t113 * qJ(3) - t110 * t243;
t144 = -pkin(9) + t83;
t28 = (t217 * t242 + t172) * (-qJD(2) + qJD(4));
t82 = -qJ(3) * t110 - t192;
t81 = pkin(4) - t82;
t246 = qJD(5) * (t144 * t77 - t81 * t78) - t28;
t244 = 0.2e1 * qJD(3);
t241 = -pkin(10) - pkin(9);
t240 = t46 * pkin(5);
t236 = t112 * pkin(5);
t235 = t44 * t79;
t234 = t251 * t28;
t59 = t110 * qJD(3) + qJD(4) * t83;
t233 = t251 * t59;
t232 = t146 * t45;
t231 = t78 * t47;
t21 = t109 * t128 + t112 * t136;
t229 = t109 * t58;
t228 = t109 * t78;
t226 = t112 * t58;
t225 = t59 * t109;
t224 = t59 * t112;
t223 = t59 * t113;
t102 = -pkin(4) - t236;
t65 = t81 + t236;
t222 = t102 - t65;
t208 = qJD(5) * t113;
t207 = qJD(6) * t108;
t204 = -0.2e1 * t235;
t203 = -0.2e1 * t232;
t38 = 0.2e1 * t77 * t46;
t202 = -0.2e1 * pkin(1) * qJD(2);
t201 = -0.2e1 * pkin(4) * qJD(5);
t200 = pkin(5) * t210;
t199 = pkin(5) * t207;
t198 = t78 * t219;
t197 = pkin(7) * t206;
t196 = t109 * t227;
t195 = pkin(7) * t104;
t194 = t108 * t241;
t193 = t109 * t242;
t185 = t109 * t212;
t184 = t110 * t212;
t183 = t112 * t212;
t182 = t109 * t208;
t181 = t109 * t209;
t180 = t111 * t104;
t179 = qJD(5) * (pkin(4) + t81);
t175 = pkin(5) * t177;
t174 = t109 * t194;
t74 = t78 ^ 2;
t171 = t74 * t181;
t170 = t241 * t237;
t169 = -pkin(4) * t47 - pkin(9) * t46;
t168 = pkin(4) * t78 + pkin(9) * t77;
t53 = t59 - t200;
t167 = t53 - t200;
t11 = -t146 * t47 + t45 * t78;
t41 = t186 * t78 - t198;
t166 = t11 * t79 + t41 * t44;
t12 = t47 * t187 - t108 * t189 - qJD(6) * t198 + (t108 * t47 + t250 * t78) * t112;
t40 = t79 * t78;
t165 = -t12 * t146 + t40 * t45;
t16 = pkin(5) * t147 + t28;
t39 = pkin(5) * t228 + t251;
t164 = -t16 * t79 + t39 * t44;
t163 = t146 * t16 - t39 * t45;
t162 = t251 * t47 + t28 * t78;
t161 = -t146 * t44 - t45 * t79;
t160 = t44 * t77 - t46 * t79;
t159 = -t146 * t46 + t45 * t77;
t158 = t46 * t78 + t47 * t77;
t157 = t58 * t77 + t59 * t78;
t156 = -t114 * pkin(2) - t218;
t20 = t112 * (pkin(1) + t248) + (t112 * qJ(3) - t110 * t193) * t111 + (t112 * t243 - t113 * t193) * t114;
t155 = -t109 * t21 - t112 * t20;
t154 = t109 * t20 - t112 * t21;
t153 = t110 * t77 + t113 * t78;
t152 = t109 * t170;
t8 = t109 * t256 + t112 * t255;
t115 = pkin(10) * t249 + t240 + t8;
t118 = t77 * pkin(5) - t109 * t136 + (-t78 * pkin(10) + t128) * t112;
t116 = t237 * t118;
t7 = -t109 * t255 + t112 * t256;
t120 = -pkin(10) * t147 - t7;
t17 = -pkin(10) * t228 + t21;
t1 = -qJD(6) * t116 - t108 * t115 - t120 * t237 + t17 * t207;
t149 = t113 * t44 + t213 * t79;
t148 = -t113 * t45 - t146 * t213;
t145 = 0.2e1 * t161;
t143 = -pkin(10) + t144;
t88 = t241 * t112;
t51 = -t237 * t88 + t174;
t141 = qJD(5) * t144;
t117 = t108 * t118;
t10 = t17 * t237 + t117;
t2 = -qJD(6) * t117 - t108 * t120 + t115 * t237 - t17 * t177;
t9 = -t108 * t17 + t116;
t140 = t1 * t146 + t10 * t45 + t2 * t79 - t44 * t9;
t139 = t109 * t143;
t135 = -t11 * t146 - t12 * t79 + t40 * t44 - t41 * t45;
t24 = t108 * t185 + t110 * t45 - t183 * t237;
t25 = -t79 * t212 - t247 * t62;
t61 = t79 * t110;
t134 = -t146 * t24 - t25 * t79 - t44 * t61 - t45 * t62;
t133 = qJD(5) * t143;
t132 = qJD(2) * t156 + qJD(3) * t114;
t131 = t108 * t139;
t127 = t237 * t139;
t3 = qJD(5) * t155 - t8 * t109 - t7 * t112;
t126 = -t110 * t46 - t113 * t47 + (t110 * t78 - t113 * t77) * qJD(4);
t124 = -t112 * t133 + t229;
t123 = t109 * t133 + t226;
t121 = -qJD(5) * t251 - t144 * t46 + t81 * t47 + t157;
t92 = -0.2e1 * t180;
t91 = 0.2e1 * t180;
t90 = -0.2e1 * t181;
t89 = 0.2e1 * t181;
t86 = (-t111 ^ 2 + t114 ^ 2) * qJD(2);
t84 = -pkin(1) + t156;
t75 = -0.2e1 * t85;
t68 = t112 * t213 + t182;
t67 = t109 * t213 - t112 * t208;
t66 = qJD(4) * t176;
t64 = -t205 + (pkin(2) * t111 - t221) * qJD(2);
t55 = t143 * t112;
t49 = t108 * t88 + t152;
t34 = t237 * t55 - t131;
t33 = -t108 * t55 - t127;
t30 = t109 * t46 + t209 * t77;
t29 = -t112 * t46 + t210 * t77;
t27 = -t51 * qJD(6) + (t112 * t170 - t174) * qJD(5);
t26 = -t152 * t247 - t194 * t209 - t88 * t207;
t22 = t78 * t85 - t196;
t19 = 0.4e1 * t181 * t78 + t215 * t47;
t14 = qJD(6) * t131 + t108 * t123 + t124 * t237 - t177 * t55;
t13 = qJD(6) * t127 - t108 * t124 + t123 * t237 + t207 * t55;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, 0.2e1 * t86, 0, t92, 0, 0, t111 * t202, t114 * t202, 0, 0, t91, 0, -0.2e1 * t86, 0, 0, t92, -0.2e1 * t114 * t64 + 0.2e1 * t206 * t84, 0, -0.2e1 * t104 * t84 - 0.2e1 * t111 * t64, 0.2e1 * t84 * t64, 0.2e1 * t231, -0.2e1 * t158, 0, t38, 0, 0, 0.2e1 * t46 * t72 + 0.2e1 * t54 * t77, 0.2e1 * t47 * t72 + 0.2e1 * t54 * t78, -0.2e1 * t119 * t77 - 0.2e1 * t136 * t46 + 0.2e1 * t162, 0.2e1 * t119 * t136 + 0.2e1 * t72 * t54 + 0.2e1 * t234, 0.2e1 * t107 * t231 - 0.2e1 * t171, -0.4e1 * t196 * t78 + t252 * t74, 0.2e1 * t112 * t158 - 0.2e1 * t189 * t77, 0.2e1 * t106 * t231 + 0.2e1 * t171, -0.2e1 * t109 * t158 - 0.2e1 * t188 * t77, t38, 0.2e1 * t109 * t162 + 0.2e1 * t188 * t251 + 0.2e1 * t20 * t46 + 0.2e1 * t77 * t8, 0.2e1 * t112 * t162 - 0.2e1 * t189 * t251 - 0.2e1 * t21 * t46 + 0.2e1 * t7 * t77, 0.2e1 * t155 * t47 + 0.2e1 * (qJD(5) * t154 + t109 * t7 - t112 * t8) * t78, 0.2e1 * t20 * t8 - 0.2e1 * t21 * t7 + 0.2e1 * t234, -0.2e1 * t41 * t11, 0.2e1 * t11 * t40 - 0.2e1 * t12 * t41, -0.2e1 * t11 * t77 + 0.2e1 * t41 * t46, 0.2e1 * t40 * t12, -0.2e1 * t12 * t77 - 0.2e1 * t40 * t46, t38, 0.2e1 * t12 * t39 + 0.2e1 * t16 * t40 + 0.2e1 * t2 * t77 + 0.2e1 * t46 * t9, 0.2e1 * t1 * t77 - 0.2e1 * t10 * t46 - 0.2e1 * t11 * t39 + 0.2e1 * t16 * t41, 0.2e1 * t1 * t40 - 0.2e1 * t10 * t12 + 0.2e1 * t11 * t9 - 0.2e1 * t2 * t41, -0.2e1 * t1 * t10 + 0.2e1 * t16 * t39 + 0.2e1 * t2 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, -t206, 0, -t195, t197, 0, 0, 0, t104, 0, 0, t206, 0, -t195, t132, -t197, t132 * pkin(7), 0, 0, -t47, 0, t46, 0, t28, t119, -t46 * t83 - t47 * t82 + t157, t119 * t83 - t136 * t58 - t28 * t82 + t233, t22, t19, -t30, -t22, t29, 0, t109 * t121 - t112 * t246, t109 * t246 + t112 * t121, -t3, t28 * t81 + t233 + (-t141 * t20 - t144 * t7 - t21 * t58) * t112 + (-t141 * t21 - t144 * t8 + t20 * t58) * t109, t166, -t135, t160, -t165, t159, 0, t12 * t65 + t14 * t77 + t33 * t46 + t40 * t53 + t163, -t11 * t65 + t13 * t77 - t34 * t46 + t41 * t53 + t164, t11 * t33 - t12 * t34 + t13 * t40 - t14 * t41 + t140, -t1 * t34 - t10 * t13 + t14 * t9 + t16 * t65 + t2 * t33 + t39 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t244, qJ(3) * t244, 0, 0, 0, 0, 0, 0, 0.2e1 * t59, -0.2e1 * t58, 0, -0.2e1 * t58 * t83 - 0.2e1 * t59 * t82, t89, t75, 0, t90, 0, 0, -0.2e1 * t210 * t81 + 0.2e1 * t224, -0.2e1 * t209 * t81 - 0.2e1 * t225, 0.2e1 * t37, -0.2e1 * t144 * t37 + 0.2e1 * t81 * t59, t204, t145, 0, t203, 0, 0, 0.2e1 * t146 * t53 - 0.2e1 * t45 * t65, 0.2e1 * t44 * t65 - 0.2e1 * t53 * t79, 0.2e1 * t13 * t146 + 0.2e1 * t14 * t79 - 0.2e1 * t33 * t44 + 0.2e1 * t34 * t45, -0.2e1 * t13 * t34 + 0.2e1 * t14 * t33 + 0.2e1 * t53 * t65; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, t195, 0, 0, 0, 0, 0, 0, 0, 0, t126, t110 * t119 - t28 * t113 + t136 * t212 + t213 * t251, 0, 0, 0, 0, 0, 0, t109 * t126 - t153 * t209, t112 * t126 + t153 * t210, 0 (-qJD(4) * t154 - t28) * t113 + (t3 + t254) * t110, 0, 0, 0, 0, 0, 0, -t113 * t12 + t213 * t40 + t25 * t77 - t46 * t61, t11 * t113 + t213 * t41 + t24 * t77 - t46 * t62, -t11 * t61 - t12 * t62 + t24 * t40 - t25 * t41, -t1 * t62 - t10 * t24 - t113 * t16 - t2 * t61 + t213 * t39 + t25 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t213, t212, 0, -t58 * t110 - t223 + (-t110 * t82 + t113 * t83) * qJD(4), 0, 0, 0, 0, 0, 0, t68, -t67, -t66, -t223 - t110 * t37 + (t81 * t110 + t144 * t176) * qJD(4), 0, 0, 0, 0, 0, 0, -t148, -t149, -t134, -t113 * t53 - t13 * t62 - t14 * t61 + t213 * t65 - t24 * t34 + t25 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * (-0.1e1 + t214) * t184, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t24 * t62 - 0.2e1 * t25 * t61 - 0.2e1 * t184; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, -t46, 0, -t28, -t119, 0, 0, -t22, -t19, t30, t22, -t29, 0, -t28 * t112 + t169 * t109 + (t109 * t251 - t112 * t168) * qJD(5), t28 * t109 + t169 * t112 + (t109 * t168 + t112 * t251) * qJD(5), t3, -pkin(4) * t28 + pkin(9) * t3, -t166, t135, -t160, t165, -t159, 0, t102 * t12 + t200 * t40 + t27 * t77 + t46 * t49 - t163, -t102 * t11 + t200 * t41 + t26 * t77 - t46 * t51 - t164, t11 * t49 - t12 * t51 + t26 * t40 - t27 * t41 - t140, -t1 * t51 - t10 * t26 + t102 * t16 + t2 * t49 + t200 * t39 + t27 * t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, t58, 0, 0, t90, t252, 0, t89, 0, 0, t109 * t179 - t224, t112 * t179 + t225, -t37, -pkin(4) * t59 - pkin(9) * t37, 0.2e1 * t235, -0.2e1 * t161, 0, 0.2e1 * t232, 0, 0, -t146 * t167 - t222 * t45, t167 * t79 + t222 * t44 (-t14 + t27) * t79 - (t13 - t26) * t146 + (-t34 + t51) * t45 + (t33 - t49) * t44, t102 * t53 - t13 * t51 + t14 * t49 + t200 * t65 - t26 * t34 + t27 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t213, -t212, 0, 0, 0, 0, 0, 0, 0, 0, -t68, t67, t66 (-pkin(4) * t110 + pkin(9) * t176) * qJD(4), 0, 0, 0, 0, 0, 0, t148, t149, t134, -pkin(5) * t182 + t102 * t213 - t24 * t51 + t25 * t49 - t26 * t62 - t27 * t61; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t89, t75, 0, t90, 0, 0, t109 * t201, t112 * t201, 0, 0, t204, t145, 0, t203, 0, 0, 0.2e1 * t102 * t45 - 0.2e1 * t146 * t200, -0.2e1 * t102 * t44 + 0.2e1 * t200 * t79, -0.2e1 * t146 * t26 - 0.2e1 * t27 * t79 + 0.2e1 * t44 * t49 - 0.2e1 * t45 * t51, 0.2e1 * t102 * t200 - 0.2e1 * t26 * t51 + 0.2e1 * t27 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t249, 0, -t147, t46, t8, t7, 0, 0, 0, 0, -t11, 0, -t12, t46, -t199 * t77 + t237 * t240 + t2 (-t108 * t46 - t177 * t77) * pkin(5) + t1 (t237 * t11 - t108 * t12 + (t108 * t41 - t237 * t40) * qJD(6)) * pkin(5) (t237 * t2 - t1 * t108 + (t10 * t237 - t108 * t9) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t209, 0, t210, 0, -t112 * t141 + t229, t109 * t141 + t226, 0, 0, 0, 0, t44, 0, t45, 0, t14, t13, t257 (t237 * t14 - t108 * t13 + (-t108 * t33 + t237 * t34) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t110 * t209 - t185, t110 * t210 - t183, 0, 0, 0, 0, 0, 0, 0, 0, t25, t24, 0 (t237 * t25 - t108 * t24 + (t108 * t61 + t237 * t62) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t209, 0, -t210, 0, -pkin(9) * t209, pkin(9) * t210, 0, 0, 0, 0, -t44, 0, -t45, 0, t27, t26, -t257 (t237 * t27 - t108 * t26 + (-t108 * t49 + t237 * t51) * qJD(6)) * pkin(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t199, -0.2e1 * t175, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11, 0, -t12, t46, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, t45, 0, t14, t13, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t25, t24, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t44, 0, -t45, 0, t27, t26, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t199, -t175, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t4;
