% Calculate vector of inverse dynamics joint torques for
% S6RRPRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRPRRP7_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP7_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP7_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP7_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP7_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRRP7_invdynJ_fixb_slag_vp1: pkin has to be [9x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRPRRP7_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRPRRP7_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRPRRP7_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:16:47
% EndTime: 2019-03-09 12:19:25
% DurationCPUTime: 143.18s
% Computational Cost: add. (44204->1598), mult. (118483->1950), div. (0->0), fcn. (125158->8), ass. (0->680)
t1588 = Icges(6,4) - Icges(7,5);
t1486 = Icges(6,1) + Icges(7,1);
t1485 = Icges(7,4) + Icges(6,5);
t1483 = Icges(6,6) - Icges(7,6);
t802 = sin(qJ(5));
t1587 = t1588 * t802;
t1519 = Icges(7,2) + Icges(6,3);
t803 = sin(qJ(2));
t806 = cos(qJ(2));
t709 = Icges(3,5) * t806 - Icges(3,6) * t803;
t804 = sin(qJ(1));
t807 = cos(qJ(1));
t560 = Icges(3,3) * t804 + t709 * t807;
t711 = Icges(4,4) * t806 + Icges(4,6) * t803;
t562 = Icges(4,2) * t804 + t711 * t807;
t1586 = t560 + t562;
t785 = Icges(4,5) * t803;
t943 = Icges(4,1) * t806 + t785;
t565 = -Icges(4,4) * t807 + t804 * t943;
t1138 = t804 * t806;
t1214 = Icges(3,5) * t807;
t1140 = t803 * t804;
t756 = Icges(3,4) * t1140;
t567 = Icges(3,1) * t1138 - t1214 - t756;
t1577 = -t565 - t567;
t566 = Icges(4,4) * t804 + t807 * t943;
t1226 = Icges(3,4) * t803;
t717 = Icges(3,1) * t806 - t1226;
t568 = Icges(3,5) * t804 + t717 * t807;
t1576 = t566 + t568;
t706 = -Icges(4,3) * t806 + t785;
t1533 = -Icges(3,2) * t806 - t1226 + t706;
t1213 = Icges(4,5) * t806;
t714 = Icges(4,1) * t803 - t1213;
t788 = Icges(3,4) * t806;
t1585 = Icges(3,1) * t803 + t714 + t788;
t805 = cos(qJ(5));
t1514 = -t1483 * t802 + t1485 * t805;
t1513 = t1486 * t805 - t1587;
t1266 = sin(qJ(4));
t1267 = cos(qJ(4));
t874 = -t1266 * t803 - t1267 * t806;
t611 = t874 * t804;
t1342 = t611 * t802 + t807 * t805;
t1020 = t807 * t1266;
t1021 = t807 * t1267;
t612 = -t803 * t1020 - t806 * t1021;
t909 = t612 * t802 - t804 * t805;
t1207 = Icges(7,5) * t909;
t503 = -t612 * t805 - t804 * t802;
t613 = t1020 * t806 - t1021 * t803;
t224 = Icges(7,1) * t503 + Icges(7,4) * t613 - t1207;
t475 = Icges(6,4) * t909;
t227 = Icges(6,1) * t503 + Icges(6,5) * t613 + t475;
t1541 = t224 + t227;
t215 = Icges(6,5) * t503 + Icges(6,6) * t909 + Icges(6,3) * t613;
t218 = Icges(7,4) * t503 + Icges(7,2) * t613 - Icges(7,6) * t909;
t1542 = t215 + t218;
t473 = Icges(7,5) * t503;
t212 = Icges(7,6) * t613 - Icges(7,3) * t909 + t473;
t1221 = Icges(6,4) * t503;
t221 = Icges(6,2) * t909 + Icges(6,6) * t613 + t1221;
t1544 = t212 - t221;
t499 = -t611 * t805 + t802 * t807;
t686 = -t806 * t1266 + t803 * t1267;
t610 = t686 * t804;
t1403 = -t1342 * t1544 + t1541 * t499 - t1542 * t610;
t1208 = Icges(7,5) * t1342;
t222 = Icges(7,1) * t499 - Icges(7,4) * t610 - t1208;
t1436 = Icges(6,4) * t1342;
t225 = Icges(6,1) * t499 - Icges(6,5) * t610 + t1436;
t1478 = t222 + t225;
t472 = Icges(7,5) * t499;
t210 = -Icges(7,6) * t610 - Icges(7,3) * t1342 + t472;
t1222 = Icges(6,4) * t499;
t219 = Icges(6,2) * t1342 - Icges(6,6) * t610 + t1222;
t1481 = t210 - t219;
t213 = Icges(6,5) * t499 + Icges(6,6) * t1342 - Icges(6,3) * t610;
t216 = Icges(7,4) * t499 - Icges(7,2) * t610 - Icges(7,6) * t1342;
t1543 = t213 + t216;
t1404 = -t1342 * t1481 + t1478 * t499 - t1543 * t610;
t1538 = -t1485 * t874 + t1513 * t686;
t1539 = t1514 * t686 - t1519 * t874;
t1147 = t686 * t802;
t1146 = t686 * t805;
t618 = Icges(7,5) * t1146;
t1219 = Icges(6,4) * t805;
t938 = -Icges(6,2) * t802 + t1219;
t1540 = Icges(7,3) * t1147 + t1483 * t874 - t686 * t938 + t618;
t1567 = t1342 * t1540 - t1538 * t499 + t1539 * t610;
t779 = qJD(2) * t804;
t698 = -qJD(4) * t804 + t779;
t459 = qJD(5) * t613 + t698;
t1067 = qJD(2) * t807;
t699 = -qJD(4) * t807 + t1067;
t460 = qJD(5) * t610 + t699;
t628 = -qJD(5) * t874 + qJD(1);
t1407 = t1403 * t459 - t1404 * t460 - t1567 * t628;
t707 = Icges(4,3) * t803 + t1213;
t939 = -Icges(3,2) * t803 + t788;
t1584 = t707 - t939;
t1575 = (Icges(3,6) - Icges(4,6)) * t806 + (Icges(4,4) + Icges(3,5)) * t803;
t1582 = t717 + t943;
t1390 = t1538 * t503 + t1539 * t613 - t1540 * t909;
t1401 = t1541 * t503 + t1542 * t613 - t1544 * t909;
t1402 = t1478 * t503 - t1481 * t909 + t1543 * t613;
t1406 = t1390 * t628 + t1401 * t459 - t1402 * t460;
t1484 = Icges(6,2) + Icges(7,3);
t557 = -Icges(4,6) * t807 + t707 * t804;
t1196 = Icges(3,6) * t807;
t563 = Icges(3,4) * t1138 - Icges(3,2) * t1140 - t1196;
t1579 = t557 - t563;
t1139 = t803 * t807;
t1195 = Icges(4,6) * t804;
t1137 = t806 * t807;
t755 = Icges(4,5) * t1137;
t558 = Icges(4,3) * t1139 + t1195 + t755;
t564 = Icges(3,6) * t804 + t807 * t939;
t1578 = -t558 + t564;
t1574 = t1533 * qJD(2);
t1573 = t1585 * qJD(2);
t1562 = t1533 * t803 + t1585 * t806;
t1570 = t1137 * t1576 + t558 * t1139 + t1586 * t804;
t561 = -Icges(4,2) * t807 + t711 * t804;
t524 = t804 * t561;
t1185 = Icges(3,3) * t807;
t559 = Icges(3,5) * t1138 - Icges(3,6) * t1140 - t1185;
t1569 = t1137 * t1577 - t557 * t1139 - t804 * t559 - t524;
t1063 = qJD(5) * t686;
t1064 = qJD(5) * t612;
t1070 = qJD(1) * t807;
t1071 = qJD(1) * t804;
t1254 = -qJD(1) / 0.2e1;
t1274 = t699 / 0.2e1;
t1282 = -t628 / 0.2e1;
t1288 = t460 / 0.2e1;
t1291 = -t459 / 0.2e1;
t373 = -Icges(5,5) * t611 + Icges(5,6) * t610 + Icges(5,3) * t807;
t1223 = Icges(5,4) * t611;
t377 = -Icges(5,2) * t610 - Icges(5,6) * t807 + t1223;
t1224 = Icges(5,4) * t610;
t380 = Icges(5,1) * t611 - Icges(5,5) * t807 - t1224;
t133 = t373 * t807 - t377 * t610 + t380 * t611;
t375 = -Icges(5,5) * t612 - Icges(5,6) * t613 - Icges(5,3) * t804;
t556 = Icges(5,4) * t612;
t378 = -Icges(5,2) * t613 - Icges(5,6) * t804 - t556;
t555 = Icges(5,4) * t613;
t381 = -Icges(5,1) * t612 - Icges(5,5) * t804 - t555;
t134 = t807 * t375 + t610 * t378 - t611 * t381;
t135 = -t373 * t804 + t377 * t613 + t380 * t612;
t136 = -t375 * t804 - t613 * t378 - t612 * t381;
t1529 = t1538 * t805 + t1540 * t802;
t928 = -t221 * t802 + t227 * t805;
t929 = -t219 * t802 + t225 * t805;
t930 = t212 * t802 + t224 * t805;
t931 = t210 * t802 + t222 * t805;
t1361 = (t1514 * t874 + t1519 * t686 - t1529) * t628 + (-t1514 * t610 + t1519 * t611 + t929 + t931) * t460 + (-t1514 * t613 - t1519 * t612 - t928 - t930) * t459;
t1370 = t1485 * t686 + t1513 * t874;
t1515 = Icges(7,5) * t805 + Icges(7,3) * t802 - t938;
t1373 = -t1483 * t686 + t1515 * t874;
t1376 = t1485 * t612 + t1513 * t613;
t1378 = t1485 * t611 - t1513 * t610;
t1380 = -t1483 * t612 + t1515 * t613;
t1382 = -t1483 * t611 - t1515 * t610;
t1389 = t1529 * t686 - t1539 * t874;
t85 = -t218 * t874 + t686 * t930;
t87 = -t215 * t874 + t686 * t928;
t1399 = t85 + t87;
t84 = -t216 * t874 + t686 * t931;
t86 = -t213 * t874 + t686 * t929;
t1400 = t84 + t86;
t1405 = t1389 * t628 + t1399 * t459 - t1400 * t460;
t1004 = qJD(2) * t1266;
t1005 = qJD(2) * t1267;
t457 = qJD(4) * t686 + t1004 * t806 - t1005 * t803;
t1062 = qJD(5) * t802;
t851 = t874 * qJD(2);
t458 = qJD(4) * t874 - t851;
t891 = -t1062 * t686 + t458 * t805;
t892 = t1063 * t805 + t458 * t802;
t1546 = t1485 * t457 + t1486 * t891 - t1588 * t892;
t1547 = t1483 * t892 - t1485 * t891 - t1519 * t457;
t1548 = -t1483 * t457 + t1484 * t892 - t1588 * t891;
t821 = (-qJD(2) + qJD(4)) * t686;
t299 = -t1070 * t874 + t804 * t821;
t199 = qJD(5) * t499 + t1071 * t805 + t299 * t802;
t200 = qJD(5) * t1342 - t802 * t1071 + t299 * t805;
t1349 = t686 * qJD(1);
t298 = -qJD(4) * t611 - t1004 * t1140 - t1005 * t1138 - t1349 * t807;
t1438 = -t1342 * t1548 + t1538 * t200 + t1539 * t298 + t1540 * t199 + t1546 * t499 + t1547 * t610;
t297 = t1071 * t874 + t807 * t821;
t197 = t297 * t802 - t804 * t1062 + (-t1064 + t1070) * t805;
t198 = qJD(5) * t909 - t1070 * t802 + t297 * t805;
t296 = qJD(4) * t612 - t1349 * t804 - t807 * t851;
t104 = Icges(7,1) * t198 - Icges(7,4) * t296 + Icges(7,5) * t197;
t106 = Icges(6,1) * t198 - Icges(6,4) * t197 - Icges(6,5) * t296;
t1550 = t104 + t106;
t102 = Icges(6,4) * t198 - Icges(6,2) * t197 - Icges(6,6) * t296;
t96 = Icges(7,5) * t198 - Icges(7,6) * t296 + Icges(7,3) * t197;
t1552 = t102 - t96;
t100 = Icges(7,4) * t198 - Icges(7,2) * t296 + Icges(7,6) * t197;
t98 = Icges(6,5) * t198 - Icges(6,6) * t197 - Icges(6,3) * t296;
t1554 = t100 + t98;
t1442 = t1552 * t1342 + t1541 * t200 + t1542 * t298 + t1544 * t199 + t1550 * t499 - t1554 * t610;
t105 = Icges(7,1) * t200 + Icges(7,4) * t298 + Icges(7,5) * t199;
t107 = Icges(6,1) * t200 - Icges(6,4) * t199 + Icges(6,5) * t298;
t1549 = t105 + t107;
t103 = Icges(6,4) * t200 - Icges(6,2) * t199 + Icges(6,6) * t298;
t97 = Icges(7,5) * t200 + Icges(7,6) * t298 + Icges(7,3) * t199;
t1551 = t103 - t97;
t101 = Icges(7,4) * t200 + Icges(7,2) * t298 + Icges(7,6) * t199;
t99 = Icges(6,5) * t200 - Icges(6,6) * t199 + Icges(6,3) * t298;
t1553 = t101 + t99;
t1443 = t1342 * t1551 + t1478 * t200 + t1481 * t199 + t1543 * t298 + t1549 * t499 - t1553 * t610;
t1054 = qJD(1) * qJD(4);
t1055 = qJD(1) * qJD(2);
t694 = qJDD(2) * t804 + t807 * t1055;
t526 = -qJDD(4) * t804 - t1054 * t807 + t694;
t190 = -qJD(5) * t296 + qJDD(5) * t613 + t526;
t695 = -qJDD(2) * t807 + t804 * t1055;
t527 = qJDD(4) * t807 - t1054 * t804 + t695;
t191 = qJD(5) * t298 - qJDD(5) * t610 + t527;
t344 = qJD(5) * t457 - qJDD(5) * t874 + qJDD(1);
t1408 = t1403 * t190 + t1404 * t191 + t1438 * t628 + t1442 * t459 - t1443 * t460 - t1567 * t344;
t1439 = t1538 * t198 - t1539 * t296 + t1540 * t197 + t1546 * t503 - t1547 * t613 - t1548 * t909;
t1444 = t1541 * t198 - t1542 * t296 + t1544 * t197 + t1550 * t503 + t1552 * t909 + t1554 * t613;
t1445 = t1478 * t198 + t1481 * t197 - t1543 * t296 + t1549 * t503 + t1551 * t909 + t1553 * t613;
t1409 = t1390 * t344 + t1401 * t190 + t1402 * t191 + t1439 * t628 + t1444 * t459 - t1445 * t460;
t665 = Icges(5,4) * t686;
t468 = Icges(5,2) * t874 + t665;
t1410 = qJD(1) * (-Icges(5,1) * t874 + t468 + t665) - (-Icges(5,1) * t610 - t1223 - t377) * t699 + (Icges(5,1) * t613 + t378 - t556) * t698;
t28 = -t100 * t874 + t218 * t457 + t930 * t458 + (t104 * t805 + t802 * t96 + (t212 * t805 - t224 * t802) * qJD(5)) * t686;
t30 = t215 * t457 - t874 * t98 + t928 * t458 + (-t102 * t802 + t106 * t805 + (-t221 * t805 - t227 * t802) * qJD(5)) * t686;
t1440 = t28 + t30;
t27 = -t101 * t874 + t216 * t457 + t931 * t458 + (t105 * t805 + t802 * t97 + (t210 * t805 - t222 * t802) * qJD(5)) * t686;
t29 = t213 * t457 - t874 * t99 + t929 * t458 + (-t103 * t802 + t107 * t805 + (-t219 * t805 - t225 * t802) * qJD(5)) * t686;
t1441 = t27 + t29;
t1446 = t1407 / 0.2e1;
t1459 = t135 / 0.2e1 + t134 / 0.2e1;
t465 = Icges(5,5) * t686 + Icges(5,6) * t874;
t664 = Icges(5,4) * t874;
t471 = Icges(5,1) * t686 + t664;
t166 = t465 * t807 + t468 * t610 - t471 * t611;
t167 = -t465 * t804 - t468 * t613 - t471 * t612;
t176 = -t377 * t874 - t380 * t686;
t177 = t378 * t874 + t381 * t686;
t159 = Icges(5,5) * t299 - Icges(5,6) * t298 - Icges(5,3) * t1071;
t161 = Icges(5,4) * t299 - Icges(5,2) * t298 - Icges(5,6) * t1071;
t163 = Icges(5,1) * t299 - Icges(5,4) * t298 - Icges(5,5) * t1071;
t48 = -t1070 * t373 - t159 * t804 - t161 * t613 - t163 * t612 - t296 * t377 - t297 * t380;
t158 = Icges(5,5) * t297 + Icges(5,6) * t296 - Icges(5,3) * t1070;
t160 = Icges(5,4) * t297 + Icges(5,2) * t296 - Icges(5,6) * t1070;
t162 = Icges(5,1) * t297 + Icges(5,4) * t296 - Icges(5,5) * t1070;
t49 = -t1070 * t375 - t158 * t804 - t160 * t613 - t162 * t612 + t296 * t378 + t297 * t381;
t50 = -t1071 * t373 + t159 * t807 + t161 * t610 - t163 * t611 + t298 * t377 - t299 * t380;
t51 = -t1071 * t375 + t158 * t807 + t160 * t610 - t162 * t611 - t298 * t378 + t299 * t381;
t63 = t167 * qJD(1) - t135 * t699 + t136 * t698;
t278 = Icges(5,5) * t458 - Icges(5,6) * t457;
t279 = Icges(5,4) * t458 - Icges(5,2) * t457;
t280 = Icges(5,1) * t458 - Icges(5,4) * t457;
t66 = -t1070 * t465 - t278 * t804 - t279 * t613 - t280 * t612 + t296 * t468 + t297 * t471;
t67 = -t1071 * t465 + t278 * t807 + t279 * t610 - t280 * t611 - t298 * t468 + t299 * t471;
t68 = t161 * t874 + t163 * t686 + t377 * t457 - t380 * t458;
t69 = t160 * t874 + t162 * t686 - t378 * t457 + t381 * t458;
t833 = qJD(1) * (Icges(5,2) * t686 - t471 - t664) + (Icges(5,2) * t611 + t1224 - t380) * t699 - (Icges(5,2) * t612 + t381 - t555) * t698;
t864 = qJD(1) * (-Icges(5,5) * t874 + Icges(5,6) * t686) - (-Icges(5,5) * t610 - Icges(5,6) * t611) * t699 + (Icges(5,5) * t613 - Icges(5,6) * t612) * t698;
t1568 = (-t68 * t807 + t69 * t804 + (t176 * t804 + t177 * t807) * qJD(1)) * t1254 - qJDD(1) * (-t176 * t807 + t177 * t804) / 0.2e1 + qJD(5) * t611 * t1446 + t1406 * t1064 / 0.2e1 - t1405 * t1063 / 0.2e1 - (t1401 * t804 - t1402 * t807) * t190 / 0.2e1 - (t1403 * t804 - t1404 * t807) * t191 / 0.2e1 - (t1399 * t804 - t1400 * t807) * t344 / 0.2e1 - (qJD(1) * t66 + qJDD(1) * t167 - t48 * t699 + t49 * t698 + t1409) * t804 / 0.2e1 + (qJD(1) * t67 + qJDD(1) * t166 - t50 * t699 + t51 * t698 + t1408) * t807 / 0.2e1 - (qJD(1) * t166 - t133 * t699 + t134 * t698 + t1407) * t1071 / 0.2e1 - (t63 + t1406) * t1070 / 0.2e1 + (t133 * t807 - t1459 * t804) * t527 + (-t136 * t804 + t1459 * t807) * t526 - (t1410 * t612 + t833 * t613 + (qJD(1) * t136 - t48) * t807 + (qJD(1) * t135 + t49 + t864) * t804) * t698 / 0.2e1 + (t1410 * t611 - t610 * t833 + (qJD(1) * t133 + t51) * t804 + (qJD(1) * t134 - t50 - t864) * t807) * t1274 + ((t1370 * t503 - t1373 * t909 - t1539 * t612) * t628 - (t1376 * t503 - t1380 * t909 + t1542 * t612) * t459 + (t1378 * t503 - t1382 * t909 + t1543 * t612) * t460 + t1361 * t613 + (t1390 * t686 - t1401 * t612 - t1402 * t611) * qJD(5) - t1445 * t807 + t1444 * t804 + (t1401 * t807 + t1402 * t804) * qJD(1)) * t1291 + (-(t1342 * t1373 - t1370 * t499 + t1539 * t611) * t628 + (t1342 * t1380 - t1376 * t499 - t1542 * t611) * t459 - (t1342 * t1382 - t1378 * t499 - t1543 * t611) * t460 - t1361 * t610 + (-t1403 * t612 - t1404 * t611 - t1567 * t686) * qJD(5) - t1443 * t807 + t1442 * t804 + (t1403 * t807 + t1404 * t804) * qJD(1)) * t1288 + ((t1389 * qJD(5) + (t1378 * t805 + t1382 * t802 - t1543) * t460 - (t1376 * t805 + t1380 * t802 - t1542) * t459 + (t1370 * t805 + t1373 * t802 + t1539) * t628) * t686 - t1361 * t874 - (t1399 * t612 + t1400 * t611) * qJD(5) - t1441 * t807 + t1440 * t804 + (t1399 * t807 + t1400 * t804) * qJD(1)) * t1282;
t1566 = t804 * pkin(7);
t1255 = t807 * pkin(8);
t1157 = t561 * t807;
t915 = t557 * t803 + t565 * t806;
t1392 = t804 * t915;
t236 = -t1157 + t1392;
t1156 = t563 * t803;
t912 = -t567 * t806 + t1156;
t1386 = -t559 * t807 - t804 * t912 + t236;
t1384 = -t1139 * t563 - t1569;
t1383 = -t1139 * t564 + t1570;
t1565 = t1584 * qJD(2);
t1564 = t1582 * qJD(2);
t1563 = -t709 - t711;
t1561 = t1533 * t806 - t1585 * t803;
t513 = t568 * t1138;
t983 = t560 * t807 - t513;
t239 = -t1140 * t564 - t983;
t961 = -t566 * t1138 - t558 * t1140 + t562 * t807;
t1385 = -t961 + t239;
t1363 = t1575 * t807;
t1364 = t1575 * t804;
t1437 = rSges(7,3) + qJ(6);
t1448 = rSges(7,1) + pkin(5);
t1131 = t610 * rSges(7,2) + t1342 * t1437 - t1448 * t499;
t437 = t611 * pkin(4) + t610 * pkin(9);
t798 = t807 * pkin(7);
t989 = t798 - t1255;
t1473 = t437 + t989;
t1560 = t1473 + t1131;
t462 = qJD(6) * t909;
t1559 = t1131 * t628 - t462;
t1301 = -pkin(2) - pkin(3);
t780 = t803 * qJ(3);
t991 = -pkin(1) - t780;
t1556 = (t1301 * t806 + t991) * t804;
t1423 = t1562 * t804 - t1363;
t1422 = t1562 * t807 + t1364;
t1537 = -t1574 * t807 + (t804 * t939 - t1196 - t557) * qJD(1);
t1536 = -t1574 * t804 + (t707 * t807 + t1195 - t564) * qJD(1);
t1535 = -t1573 * t807 + (-t717 * t804 + t1214 - t565) * qJD(1);
t1534 = -qJD(1) * t1576 + t1573 * t804;
t1532 = t1575 * qJD(2);
t1155 = t564 * t803;
t1531 = t1576 * t806 + t558 * t803 - t1155;
t1530 = t912 - t915;
t1368 = t1576 * t803 + t1578 * t806;
t1369 = t1577 * t803 + t1579 * t806;
t1119 = -rSges(7,2) * t874 + (t1437 * t802 + t1448 * t805) * t686;
t1060 = qJD(6) * t802;
t614 = t686 * t1060;
t1133 = rSges(7,2) * t457 + t1437 * t892 + t1448 * t891 + t614;
t1061 = qJD(6) * t1342;
t1134 = rSges(7,2) * t298 + t1437 * t199 + t1448 * t200 - t1061;
t174 = pkin(4) * t299 + t298 * pkin(9);
t282 = pkin(4) * t458 + pkin(9) * t457;
t497 = pkin(4) * t686 - pkin(9) * t874;
t1053 = qJD(2) * qJD(3);
t1417 = qJDD(3) * t803 + t806 * t1053;
t718 = pkin(2) * t803 - qJ(3) * t806;
t1032 = t1417 * t807 + t695 * t718;
t1136 = t806 * qJD(2) ^ 2;
t1265 = pkin(3) * t803;
t1066 = qJD(3) * t806;
t1362 = t806 * pkin(2) + t780;
t619 = qJD(2) * t1362 - t1066;
t840 = t695 * t1265 + (-pkin(3) * t1136 - qJD(2) * t619) * t807 + t1032;
t1017 = t806 * t1070;
t1014 = t803 * t779;
t738 = pkin(3) * t1014;
t1082 = -pkin(8) * t1071 - t738;
t529 = pkin(3) * t1017 + t1082;
t778 = qJD(3) * t803;
t745 = t804 * t778;
t1080 = -pkin(2) * t1014 + t745;
t1018 = t803 * t1070;
t1068 = qJD(2) * t806;
t640 = t1068 * t804 + t1018;
t392 = pkin(2) * t1017 + qJ(3) * t640 + t1080;
t727 = t807 * pkin(1) + t1566;
t691 = t727 * qJD(1);
t896 = -t392 - t691 - t745;
t885 = -t529 + t896;
t659 = t1362 * t804;
t726 = t804 * pkin(1) - t798;
t1095 = -t659 - t726;
t692 = pkin(3) * t1138 + t1255;
t1029 = -t692 + t1095;
t972 = t437 + t1029;
t811 = t527 * t497 + t972 * qJDD(1) + (-t174 + t885) * qJD(1) - t699 * t282 + t840;
t14 = qJD(6) * t197 - qJDD(6) * t909 + t1119 * t191 + t1131 * t344 - t1133 * t460 - t1134 * t628 + t811;
t1130 = t613 * rSges(7,2) - t1437 * t909 + t1448 * t503;
t1135 = -t296 * rSges(7,2) + t1437 * t197 + t1448 * t198 - t462;
t173 = t297 * pkin(4) - pkin(9) * t296;
t440 = -t612 * pkin(4) + pkin(9) * t613;
t1013 = t803 * t1067;
t873 = -t1071 * t806 - t1013;
t528 = pkin(3) * t873 - pkin(8) * t1070;
t1264 = pkin(8) * t804;
t763 = pkin(3) * t1137;
t693 = t763 - t1264;
t774 = pkin(7) * t1070;
t1092 = qJD(1) * (-pkin(1) * t1071 + t774) + qJDD(1) * t727;
t1019 = t803 * t1071;
t1012 = t806 * t1067;
t731 = qJ(3) * t1012;
t1065 = qJD(3) * t807;
t747 = t803 * t1065;
t1085 = t731 + t747;
t391 = pkin(2) * t873 - qJ(3) * t1019 + t1085;
t663 = pkin(2) * t1137 + qJ(3) * t1139;
t876 = qJDD(1) * t663 + t1092 + t1417 * t804 + (t391 + t747) * qJD(1);
t817 = qJD(1) * t528 + qJDD(1) * t693 + (-t1136 * t804 - t694 * t803) * pkin(3) - t694 * t718 - t619 * t779 + t876;
t812 = qJD(1) * t173 + qJDD(1) * t440 - t698 * t282 - t526 * t497 + t817;
t15 = qJD(6) * t199 - qJDD(6) * t1342 - t1119 * t190 + t1130 * t344 - t1133 * t459 + t1135 * t628 + t812;
t455 = t804 * t497;
t456 = t807 * t497;
t1081 = -t718 * t779 + t745;
t1026 = -t738 + t1081;
t969 = t663 + t727;
t1028 = t693 + t969;
t844 = qJD(1) * (t440 + t1028) - t698 * t497 + t1026;
t1460 = t1119 * t459 - t1130 * t628 + t1061 - t844;
t960 = t663 * t1067 + t659 * t779 - t1066;
t884 = t693 * t1067 + t692 * t779 + t960;
t843 = -t437 * t698 + t440 * t699 + t884;
t57 = t1130 * t460 - t1131 * t459 + t614 + t843;
t988 = t57 * t1131;
t857 = t1119 * t1460 - t988;
t433 = t699 * t497;
t990 = -t718 - t1265;
t868 = t1067 * t990 + t747;
t830 = qJD(1) * t972 - t433 + t868;
t64 = -t1119 * t460 + t1559 + t830;
t987 = t64 * t1119;
t858 = -t1130 * t57 + t987;
t860 = -t1130 * t1460 + t1131 * t64;
t1525 = (t611 * t858 + t857 * t612 - t686 * t860) * qJD(5) + t14 * t456 + t15 * t455;
t1518 = qJD(1) * t1575 + t1561 * qJD(2) + t1564 * t806 + t1565 * t803;
t1517 = t1383 * t804 - t1384 * t807;
t1516 = t1385 * t804 - t1386 * t807;
t1511 = t1586 * qJD(1);
t1510 = t1562 * qJD(1) + qJD(2) * t1563;
t229 = rSges(6,1) * t499 + rSges(6,2) * t1342 - t610 * rSges(6,3);
t350 = -rSges(6,3) * t874 + (rSges(6,1) * t805 - rSges(6,2) * t802) * t686;
t1509 = -t229 * t628 - t460 * t350;
t1506 = -t686 * t1410 - t833 * t874;
t1502 = (-Icges(3,2) * t1138 + t706 * t804 - t1577 - t756) * t807 - (t1533 * t807 + t1576) * t804;
t1491 = t807 ^ 2;
t1490 = t1547 * t874 + (t1546 * t805 + t1548 * t802 + (-t1538 * t802 + t1540 * t805) * qJD(5)) * t686 + t1529 * t458 + t1539 * t457;
t1489 = t460 * t57;
t489 = rSges(5,1) * t874 - t686 * rSges(5,2);
t1488 = t489 * t698;
t1487 = t489 * t699;
t1474 = t1422 * qJD(1);
t1472 = -qJD(2) * t1368 + t1535 * t806 + t1537 * t803 + t1511;
t1347 = qJD(1) * t561;
t1471 = -qJD(1) * t559 - qJD(2) * t1369 + t1534 * t806 - t1536 * t803 - t1347;
t1470 = -t1579 * t807 + (-Icges(4,1) * t1139 + t714 * t807 - t1578 + t755) * t804;
t1153 = t610 * t805;
t1154 = t610 * t802;
t1128 = t611 * rSges(7,2) - t1153 * t1448 - t1154 * t1437;
t434 = -t610 * pkin(4) + pkin(9) * t611;
t1468 = -t434 - t1128;
t1467 = t1423 * qJD(1);
t1466 = t1585 - t1584;
t1465 = t1533 + t1582;
t1462 = qJD(1) * t1530 - t1532 * t804 + t1511;
t1461 = -t1347 - t1532 * t807 + (-t709 * t804 + t1185 - t1531) * qJD(1);
t271 = -rSges(6,1) * t1153 + rSges(6,2) * t1154 + t611 * rSges(6,3);
t1150 = t613 * t805;
t1151 = t613 * t802;
t275 = rSges(6,1) * t1150 - rSges(6,2) * t1151 + t612 * rSges(6,3);
t1458 = t271 * t459 + t275 * t460;
t1148 = t874 * t805;
t1149 = t874 * t802;
t346 = -rSges(6,1) * t1148 + rSges(6,2) * t1149 - t686 * rSges(6,3);
t1457 = -t271 * t628 - t346 * t460;
t1456 = t275 * t628 - t346 * t459;
t427 = t610 * rSges(5,1) + t611 * rSges(5,2);
t428 = t613 * rSges(5,1) - t612 * rSges(5,2);
t1455 = -t427 * t698 + t428 * t699;
t438 = t613 * pkin(4) + pkin(9) * t612;
t1454 = t698 * t434 + t438 * t699;
t496 = pkin(4) * t874 + pkin(9) * t686;
t1453 = -qJD(1) * t434 + t699 * t496;
t1452 = qJD(1) * t438 + t496 * t698;
t1121 = -t686 * rSges(7,2) - t1148 * t1448 - t1149 * t1437;
t1449 = t613 * t1060 - t1121 * t460 - t1128 * t628;
t1287 = -t460 / 0.2e1;
t1447 = t15 - g(2);
t1432 = qJD(2) * t1516 + t1467;
t1431 = qJD(2) * t1517 + t1474;
t1430 = qJD(2) * t1530 + t1534 * t803 + t1536 * t806;
t1429 = qJD(2) * t1531 + t1535 * t803 - t1537 * t806;
t1428 = -t1510 * t804 + t1518 * t807;
t1427 = t1510 * t807 + t1518 * t804;
t1421 = t1157 + t1570;
t957 = t611 * rSges(5,1) - t610 * rSges(5,2);
t382 = t807 * rSges(5,3) - t957;
t1113 = t1146 * t1437 - t1147 * t1448;
t1411 = t1460 * t628 - g(1) - t1489;
t1094 = -t663 - t693;
t877 = -qJDD(3) * t806 + t803 * t1053 + t391 * t1067 + t392 * t779 + t694 * t659;
t831 = t528 * t1067 + t1094 * t695 + t529 * t779 + t694 * t692 + t877;
t818 = t699 * t173 + t698 * t174 - t437 * t526 - t527 * t440 + t831;
t11 = qJD(6) * t892 + qJDD(6) * t1147 - t1130 * t191 - t1131 * t190 + t1134 * t459 + t1135 * t460 + t818;
t1398 = t11 * t1131;
t1397 = t1119 * t15;
t1367 = qJD(1) * t437 - t433;
t697 = qJD(1) * t726;
t1365 = -qJD(1) * t659 - t697;
t959 = t806 * rSges(4,1) + t803 * rSges(4,3);
t1359 = t1470 * t806 + t1502 * t803;
t1358 = ((t1484 * t805 + t1587) * t686 - t1538) * t628 + (-t1484 * t499 - t1208 + t1436 + t1478) * t460 + (t1484 * t503 + t1207 - t1541 - t475) * t459;
t1357 = ((-Icges(6,1) * t802 - t1219) * t686 - Icges(7,1) * t1147 + t618 + t1540) * t628 + (-t1342 * t1486 + t1222 - t1481 - t472) * t460 + (t1486 * t909 - t1221 + t1544 + t473) * t459;
t1356 = (t1465 * t806 - t1466 * t803) * qJD(1);
t1355 = (-t1342 * t1485 + t1483 * t499) * t460 + (-t1483 * t503 + t1485 * t909) * t459 + (-t1483 * t805 - t1485 * t802) * t628 * t686;
t1352 = t1462 * t1491 + (t1472 * t804 + (-t1461 + t1471) * t807) * t804;
t1351 = t1471 * t1491 + (t1461 * t804 + (-t1462 + t1472) * t807) * t804;
t791 = t804 * rSges(4,2);
t605 = rSges(4,1) * t1137 + rSges(4,3) * t1139 + t791;
t397 = t969 + t605;
t978 = t1070 * t437 + t440 * t1071 - t807 * t173 - t804 * t174;
t1348 = t1454 + t978;
t1112 = t497 * t1071 - t807 * t282;
t1345 = -t1112 + t1453;
t1129 = t497 * t1070 + t804 * t282;
t1344 = t1129 + t1452;
t1338 = t1563 * qJD(1);
t1330 = t1389 * t344 + t1490 * t628;
t1329 = -qJD(1) * t692 + t1365;
t1259 = g(2) * t804;
t1316 = (g(1) * t807 + t1259) * t803;
t1315 = -t438 - t275;
t1314 = -t434 - t271;
t1307 = t11 * t1130 + t57 * t1135;
t1126 = t612 * rSges(7,2) + t1150 * t1448 + t1151 * t1437;
t1305 = m(4) / 0.2e1;
t1304 = m(5) / 0.2e1;
t1303 = m(6) / 0.2e1;
t1302 = m(7) / 0.2e1;
t1299 = t190 / 0.2e1;
t1297 = t191 / 0.2e1;
t1290 = t459 / 0.2e1;
t1279 = t694 / 0.2e1;
t1278 = t695 / 0.2e1;
t1269 = -rSges(4,1) - pkin(2);
t1268 = -rSges(5,3) - pkin(8);
t796 = t806 * pkin(3);
t1252 = rSges(3,1) * t806;
t1251 = rSges(4,1) * t803;
t1250 = t27 * t460;
t1249 = t28 * t459;
t1248 = t29 * t460;
t1247 = t30 * t459;
t790 = t804 * rSges(3,3);
t1239 = t84 * t191;
t1238 = t85 * t190;
t1237 = t86 * t191;
t1236 = t87 * t190;
t1234 = -rSges(4,3) - qJ(3);
t720 = rSges(3,1) * t803 + rSges(3,2) * t806;
t1015 = t720 * t1067;
t1079 = rSges(3,2) * t1140 + t807 * rSges(3,3);
t604 = rSges(3,1) * t1138 - t1079;
t1100 = -t604 - t726;
t355 = qJD(1) * t1100 - t1015;
t1161 = t355 * t804;
t1160 = t355 * t807;
t606 = rSges(3,1) * t1137 - rSges(3,2) * t1139 + t790;
t505 = t606 + t727;
t356 = qJD(1) * t505 - t720 * t779;
t662 = t720 * t807;
t1159 = t356 * t662;
t490 = rSges(5,1) * t686 + rSges(5,2) * t874;
t1145 = t699 * t490;
t1124 = t297 * rSges(5,1) + t296 * rSges(5,2);
t1123 = t1342 * t1448 + t1437 * t499;
t1122 = t1437 * t503 + t1448 * t909;
t1114 = -t437 * t804 + t807 * t440;
t1102 = -t612 * rSges(5,1) - t613 * rSges(5,2);
t1099 = -t605 - t663;
t1098 = t804 * t659 + t807 * t663;
t1097 = -t959 * qJD(2) - t619;
t752 = qJ(3) * t1137;
t660 = -pkin(2) * t1139 + t752;
t1096 = qJD(1) * t660 + t804 * t1066;
t673 = t718 * t1071;
t740 = pkin(3) * t1019;
t1093 = t673 + t740;
t719 = -rSges(4,3) * t806 + t1251;
t1087 = -t718 - t719;
t1086 = -t1362 - t959;
t1084 = rSges(4,2) * t1070 + rSges(4,3) * t1012;
t1083 = rSges(3,2) * t1019 + rSges(3,3) * t1070;
t1078 = t804 ^ 2 + t1491;
t1077 = qJ(3) * qJD(2);
t1069 = qJD(2) * t803;
t109 = t198 * rSges(6,1) - t197 * rSges(6,2) - t296 * rSges(6,3);
t1033 = t659 * t1070 + t807 * t391 + t804 * t392;
t233 = t503 * rSges(6,1) + rSges(6,2) * t909 + t613 * rSges(6,3);
t750 = qJ(3) * t1138;
t656 = -pkin(2) * t1140 + t750;
t1031 = t660 * t1067 + t656 * t779 + t778;
t794 = t807 * rSges(4,2);
t603 = t804 * t959 - t794;
t1030 = -t603 + t1095;
t1027 = t774 + t1085;
t1025 = t796 + t1362;
t1022 = t807 * t1269;
t1016 = t719 * t779;
t1009 = t610 * t1060;
t1007 = t874 * t1060;
t1006 = -pkin(1) - t1252;
t998 = -t779 / 0.2e1;
t997 = t779 / 0.2e1;
t996 = -t1067 / 0.2e1;
t995 = t1067 / 0.2e1;
t986 = t803 * t1078;
t982 = -t559 + t1155;
t981 = qJD(2) * t1097;
t748 = t806 * t1065;
t979 = -qJD(1) * t656 + t748;
t977 = t1093 + t1112;
t976 = -t382 + t1029;
t973 = t804 * t692 + t807 * t693 + t1098;
t971 = -t1080 - t1082;
t964 = -t350 + t990;
t963 = -t490 + t990;
t962 = -pkin(3) * t1068 - t619;
t725 = rSges(2,1) * t807 - rSges(2,2) * t804;
t721 = rSges(2,1) * t804 + rSges(2,2) * t807;
t724 = -rSges(3,2) * t803 + t1252;
t958 = rSges(5,1) * t299 - rSges(5,2) * t298;
t165 = -rSges(5,3) * t1071 + t958;
t281 = rSges(5,1) * t458 - rSges(5,2) * t457;
t60 = -t281 * t699 + t490 * t527 + t976 * qJDD(1) + (-t165 + t885) * qJD(1) + t840;
t164 = -rSges(5,3) * t1070 + t1124;
t384 = -rSges(5,3) * t804 + t1102;
t61 = qJD(1) * t164 + qJDD(1) * t384 - t281 * t698 - t490 * t526 + t817;
t954 = t60 * t807 + t61 * t804;
t951 = t1460 * t804 - t64 * t807;
t73 = t1509 + t830;
t74 = t233 * t628 - t350 * t459 + t844;
t950 = -t73 * t807 - t74 * t804;
t945 = t763 + t969;
t137 = qJD(1) * t976 - t1145 + t868;
t138 = -t490 * t698 + (t384 + t1028) * qJD(1) + t1026;
t932 = t137 * t807 + t138 * t804;
t927 = t229 * t612 - t233 * t611;
t926 = t229 * t686 + t350 * t611;
t925 = t233 * t686 + t350 * t612;
t918 = -t356 * t804 - t1160;
t423 = rSges(3,1) * t873 - rSges(3,2) * t1012 + t1083;
t658 = t720 * t804;
t425 = -qJD(2) * t658 + (t724 * t807 + t790) * qJD(1);
t917 = t423 * t807 + t425 * t804;
t910 = t604 * t804 + t606 * t807;
t904 = t990 - t1119;
t903 = -pkin(3) * t1013 + t747;
t147 = rSges(6,1) * t891 - rSges(6,2) * t892 + rSges(6,3) * t457;
t902 = -t147 + t962;
t901 = -t281 + t962;
t900 = -pkin(1) - t1362;
t895 = t692 * t1070 + t807 * t528 + t804 * t529 + t1033;
t894 = t973 + t1114;
t893 = t1067 * t1087 + t747;
t890 = -t496 + t1025;
t889 = t962 - t1133;
t886 = t1031 + t1454;
t111 = rSges(6,1) * t200 - rSges(6,2) * t199 + rSges(6,3) * t298;
t875 = -t174 + t971;
t862 = t900 - t796;
t861 = t1134 * t57 - t1398;
t853 = t1234 * t803 + t1269 * t806 - pkin(1);
t852 = t1453 + t740 + t979;
t850 = g(1) * t1556;
t847 = t895 - t978;
t846 = -pkin(3) * t1018 + t1096 + t1452;
t845 = t1301 * t1316;
t842 = t868 + t1329;
t841 = t440 + t945 - t1264;
t829 = -pkin(2) * t1013 + t173 + t731 + t774 + t903;
t822 = t1119 * t14 + t1133 * t64 - t1307;
t760 = rSges(4,3) * t1137;
t758 = rSges(4,3) * t1138;
t688 = t724 * qJD(2);
t661 = -rSges(4,1) * t1139 + t760;
t657 = -rSges(4,1) * t1140 + t758;
t641 = t1012 - t1019;
t639 = t1078 * t1069;
t451 = (-rSges(6,1) * t802 - rSges(6,2) * t805) * t686;
t424 = -t1016 + (t807 * t959 + t791) * qJD(1);
t422 = rSges(4,1) * t873 - rSges(4,3) * t1019 + t1084;
t351 = t910 * qJD(2);
t319 = rSges(6,1) * t909 - rSges(6,2) * t503;
t314 = rSges(6,1) * t1342 - rSges(6,2) * t499;
t209 = qJD(1) * t397 - t1016 + t1081;
t208 = qJD(1) * t1030 + t893;
t207 = (t603 * t804 + t605 * t807) * qJD(2) + t960;
t169 = qJD(1) * t423 + qJDD(1) * t606 - t688 * t779 - t694 * t720 + t1092;
t168 = -t688 * t1067 + t695 * t720 + t1100 * qJDD(1) + (-t425 - t691) * qJD(1);
t132 = t382 * t698 + t384 * t699 + t884;
t113 = qJD(1) * t422 + qJDD(1) * t605 + t1087 * t694 + t804 * t981 + t876;
t112 = t695 * t719 + t807 * t981 + t1030 * qJDD(1) + (-t424 + t896) * qJD(1) + t1032;
t83 = t603 * t694 + t1099 * t695 + (t422 * t807 + t424 * t804) * qJD(2) + t877;
t70 = t229 * t459 + t233 * t460 + t843;
t52 = t164 * t699 + t165 * t698 + t382 * t526 - t384 * t527 + t831;
t32 = t628 * t109 - t459 * t147 - t190 * t350 + t344 * t233 + t812;
t31 = -t628 * t111 - t147 * t460 + t191 * t350 - t344 * t229 + t811;
t18 = t109 * t460 + t111 * t459 + t190 * t229 - t191 * t233 + t818;
t1 = [t63 * t1274 + (t1406 + t1438) * t1287 + (t1368 + t1422) * t1279 + (-t1369 + t1423) * t1278 + t1406 * t1288 + (m(2) * (t721 ^ 2 + t725 ^ 2) + Icges(2,3) + t468 * t874 + t471 * t686 - t1561) * qJDD(1) + (((t239 - t513 + (t560 + t1156) * t807 + t1569) * t807 + (t236 - t1392 + t1421) * t804) * qJD(2) + t1474) * t995 + (t1428 + t1429) * t997 + (t1427 - t1430 + t1431) * t996 + (qJD(2) * t1562 + t1564 * t803 - t1565 * t806 + t279 * t874 + t280 * t686 - t457 * t468 + t458 * t471) * qJD(1) + t1390 * t1299 + (-(t1367 + t1509 - t73 + t842) * t74 + t73 * (-t111 + t875) + t74 * (t829 + t109) + (t31 * t991 + (-t1077 * t73 + t1301 * t31) * t806) * t804 + ((-t74 * pkin(8) + t73 * t862) * t807 + (-t73 * pkin(7) + t74 * t862) * t804) * qJD(1) - t850 + (t32 - g(2)) * (t841 + t233) + (t31 - g(1)) * (t1473 - t229)) * m(6) + (-t1131 * t1489 - t857 * t460 - g(1) * t1560 - t850 + t1447 * (t841 + t1130) + (t1556 + t1560) * t14 + (t875 - t1134 - t1077 * t1138 + (t862 * t807 - t1566) * qJD(1)) * t64 + (-t1067 * t718 + t1329 + t1367 + t903 - t64 - t829 - t1135 + (-t804 * t862 + t1255) * qJD(1) + t1559) * t1460) * m(7) + ((-t1478 * t805 - t1481 * t802) * t686 + t1543 * t874 + t1400) * t459 * t1282 + (((t807 * t982 + t1383 - t1421) * t807 + (t804 * t982 + t1384 - t524 + t961 + t983) * t804) * qJD(2) + t1432 - t1467) * t998 + t1330 + (-(-qJD(1) * t382 - t1145 - t137 + t842) * t138 + t60 * (t798 + t957) + t137 * (-t958 + t971) + t138 * (t1027 + t1124) + (t1069 * t1301 * t138 + t1268 * t60) * t807 + (t60 * t991 + (-t1077 * t137 + t1301 * t60) * t806) * t804 + ((t1268 * t138 + t137 * t862) * t807 + (t137 * (rSges(5,3) - pkin(7)) + t138 * t862) * t804) * qJD(1) - g(1) * (-t382 + t989) - t850 + (t61 - g(2)) * (t1268 * t804 + t1102 + t945)) * m(5) + t1239 / 0.2e1 + t1247 / 0.2e1 - (t67 + t63 + t68) * t699 / 0.2e1 + (t66 + t69) * t698 / 0.2e1 + (t166 + t176) * t527 / 0.2e1 + (t167 + t177) * t526 / 0.2e1 + (-(-qJD(1) * t604 - t1015 - t355 - t697) * t356 + t356 * (t774 + t1083) + (t1161 * t720 - t1159) * qJD(2) + ((-pkin(1) - t724) * t1160 + (t355 * (-rSges(3,3) - pkin(7)) + t356 * t1006) * t804) * qJD(1) + (-g(2) + t169) * t505 + (-g(1) + t168) * (t1006 * t804 + t1079 + t798)) * m(3) + (-t208 * t1080 + t209 * (t1027 + t1084) + (t209 * t803 * t1022 + t208 * (t1234 * t806 + t1251) * t804) * qJD(2) + (t208 * t853 * t807 + (t208 * (-rSges(4,2) - pkin(7)) + t209 * (t900 - t959)) * t804) * qJD(1) - (-qJD(1) * t603 + t1365 - t208 + t893) * t209 + (t113 - g(2)) * t397 + (t112 - g(1)) * (t804 * t853 + t794 + t798)) * m(4) - t1567 * t1297 - t1250 / 0.2e1 - t1248 / 0.2e1 + t1249 / 0.2e1 + t1237 / 0.2e1 + t1238 / 0.2e1 + t1236 / 0.2e1 - m(2) * (-g(1) * t721 + g(2) * t725) + t1439 * t1290; t1516 * t1278 + t1517 * t1279 + (-g(1) * (t752 + t428) - g(2) * (t750 - t427) - g(3) * (t1025 - t489) - t845 + t137 * t1093 + t52 * t973 + t132 * t895 + (t60 * t963 + t137 * t901 + t52 * t384 + t132 * t164 + (t132 * t382 + t138 * t963) * qJD(1)) * t807 + (t61 * t963 + t138 * t901 + t52 * t382 + t132 * t165 + (t137 * t490 + t132 * (-t384 + t1094)) * qJD(1)) * t804 - t137 * (t740 + t748 + t1487) - t138 * (t1096 + t1488) - t132 * (t1031 + t1455) - (t137 * (t427 - t656) + t138 * (-pkin(3) * t1139 + t428)) * qJD(1) - (-t932 * t1362 + (-t132 * t986 - t806 * t932) * pkin(3)) * qJD(2)) * m(5) + ((t1470 * t803 - t1502 * t806) * qJD(2) + (t1465 * t803 + t1466 * t806) * qJD(1) - t1506) * t1254 - (qJD(1) * t1427 + t1352 * qJD(2) + qJDD(1) * t1423 + t1385 * t694 + t1386 * t695) * t807 / 0.2e1 + (qJD(1) * t1428 + t1351 * qJD(2) + qJDD(1) * t1422 + t1383 * t694 + t1384 * t695) * t804 / 0.2e1 + (t1430 * t807 + t1429 * t804 + (t1368 * t807 - t1369 * t804) * qJD(1)) * qJD(1) / 0.2e1 + t1431 * t1070 / 0.2e1 + (-g(1) * (t752 + t760) - g(2) * (t750 + t758) + g(3) * t1086 - (g(1) * t1022 + t1259 * t1269) * t803 - t208 * (-qJD(1) * t657 + t979) - t209 * (qJD(1) * t661 + t1096) - t207 * t1031 - ((t1086 * t208 + t207 * t661) * t807 + (t1086 * t209 + t207 * t657) * t804) * qJD(2) + t208 * t673 + t83 * t1098 + t207 * t1033 + (t112 * t1087 + t208 * t1097 + t83 * t605 + t207 * t422 + (t1087 * t209 + t207 * t603) * qJD(1)) * t807 + (t113 * t1087 + t209 * t1097 + t83 * t603 + t207 * t424 + (t1099 * t207 + t208 * t719) * qJD(1)) * t804) * m(4) + ((t1383 * t807 + t1384 * t804) * qJD(1) + t1351) * t997 + t1432 * t1071 / 0.2e1 + ((t1385 * t807 + t1386 * t804) * qJD(1) + t1352) * t996 + (t1368 * t804 + t1369 * t807) * qJDD(1) / 0.2e1 + (-g(1) * (t438 + t752) - g(2) * (t750 - t1468) - g(3) * (t890 + t1121) - t845 + t1460 * t1129 + t11 * t894 + t57 * t847 + (t14 * t904 + (-t1460 * t904 - t988) * qJD(1) + t1307) * t807 + (t15 * t904 - t1460 * t889 + (t987 + t57 * (t1094 - t1130)) * qJD(1) + t861) * t804 + t1460 * (t846 - t1009) - t57 * (t886 - t1007) - (t1121 * t1460 + t1128 * t57) * t459 - (t951 * t1362 + (-t57 * t986 + t806 * t951) * pkin(3)) * qJD(2) + t1411 * t1126 + (t807 * t889 - t1449 - t852 + t977) * t64 - t1525) * m(7) + (-g(1) * (t752 - t1315) - g(2) * (t750 - t1314) - g(3) * (t346 + t890) - t845 - t31 * t456 + t73 * t977 - t32 * t455 - t74 * t1129 + t18 * t894 + t70 * t847 + (t31 * t964 + t73 * t902 + t18 * t233 + t70 * t109 + (t70 * t229 + t74 * t964) * qJD(1)) * t807 + (t32 * t964 + t74 * t902 + t18 * t229 + t70 * t111 + (t73 * t350 + t70 * (-t233 + t1094)) * qJD(1)) * t804 - t73 * (t1457 + t852) - t74 * (t1456 + t846) - t70 * (t1458 + t886) - (t70 * t927 + t73 * t926 - t74 * t925) * qJD(5) - (t950 * t1362 + (-t70 * t986 + t806 * t950) * pkin(3)) * qJD(2)) * m(6) + ((-t1363 * t779 - t1338) * t804 + ((t1364 * t804 + t1359) * qJD(2) + t1356) * t807) * t998 + ((-t1067 * t1364 + t1338) * t807 + ((t1363 * t807 + t1359) * qJD(2) + t1356) * t804) * t995 + (-(t355 * t658 - t1159) * qJD(1) - (t351 * (-t658 * t804 - t662 * t807) + t918 * t724) * qJD(2) + (qJD(2) * t917 + t604 * t694 - t606 * t695) * t910 + t351 * ((t604 * t807 - t606 * t804) * qJD(1) + t917) + t918 * t688 + (-t168 * t807 - t169 * t804 + (-t356 * t807 + t1161) * qJD(1)) * t720 + g(1) * t662 + g(2) * t658 - g(3) * t724) * m(3) - t1568; (-m(4) - m(5) - m(6) - m(7)) * (-g(3) * t806 + t1316) - m(4) * (t207 * t639 + t208 * t641 + t209 * t640) - m(5) * (t132 * t639 + t137 * t641 + t138 * t640) - m(6) * (t639 * t70 + t640 * t74 + t641 * t73) - m(7) * (-t1460 * t640 + t57 * t639 + t64 * t641) + 0.2e1 * ((t1067 * t208 + t209 * t779 - t83) * t1305 + (t1067 * t137 + t138 * t779 - t52) * t1304 + (t1067 * t73 + t74 * t779 - t18) * t1303 + (t1067 * t64 - t1460 * t779 - t11) * t1302) * t806 + 0.2e1 * ((qJD(2) * t207 + t1070 * t209 - t1071 * t208 + t112 * t807 + t113 * t804) * t1305 + (qJD(2) * t132 + t1070 * t138 - t1071 * t137 + t954) * t1304 + (qJD(2) * t70 + t1070 * t74 - t1071 * t73 + t31 * t807 + t32 * t804) * t1303 + (qJD(2) * t57 - t1070 * t1460 - t1071 * t64 + t14 * t807 + t15 * t804) * t1302) * t803; t1506 * t1254 + (-g(1) * (-t438 - t1126) - g(2) * t1468 - g(3) * (t496 - t1121) - t11 * t1114 + (-qJD(1) * t857 + t822) * t807 + (-qJD(1) * t858 + t1397 + t1398) * t804 - (-t1121 * t459 + t1126 * t628 + t1133 * t804 - t1009 + t1344) * t1460 + (t1345 + t1449) * t64 + (t1126 * t460 + t1128 * t459 - t1134 * t804 - t1007 + t1348) * t57 + t1525) * m(7) + (-g(1) * t1315 - g(2) * t1314 - g(3) * (-t346 + t496) + t31 * (t350 * t807 + t456) + t32 * (t350 * t804 + t455) + t18 * (-t229 * t804 - t233 * t807 - t1114) + (-qJD(5) * t925 + t1070 * t350 + t147 * t804 + t1344 + t1456) * t74 + (qJD(5) * t926 - t1071 * t350 + t147 * t807 + t1345 + t1457) * t73 + (t927 * qJD(5) - t109 * t807 - t111 * t804 + (-t229 * t807 + t233 * t804) * qJD(1) + t1348 + t1458) * t70) * m(6) + (g(1) * t428 - g(2) * t427 - g(3) * t489 - t137 * (-qJD(1) * t427 - t1487) - t138 * (-qJD(1) * t428 - t1488) + t52 * (-t382 * t804 - t384 * t807) + t932 * t281 + ((-t137 * t804 + t138 * t807) * qJD(1) + t954) * t490 + (-t164 * t807 - t165 * t804 + (-t382 * t807 + t384 * t804) * qJD(1) + t1455) * t132) * m(5) + t1568; (-t1390 * t874 + t1401 * t613 - t1402 * t610) * t1299 + (t1403 * t613 - t1404 * t610 + t1567 * t874) * t1297 - t1406 * t296 / 0.2e1 + t298 * t1446 + (-t1389 * t874 + t1399 * t613 - t1400 * t610) * t344 / 0.2e1 + t1405 * t457 / 0.2e1 + (t1355 * t613 + t1357 * t503 - t1358 * t909) * t1291 + (t1390 * t457 - t1401 * t296 + t1402 * t298 - t1439 * t874 + t1444 * t613 - t1445 * t610) * t1290 + (-t1342 * t1358 - t1355 * t610 + t1357 * t499) * t1288 + (-t1403 * t296 + t1404 * t298 - t1438 * t874 + t1442 * t613 - t1443 * t610 - t1567 * t457) * t1287 - t1408 * t610 / 0.2e1 + t1409 * t613 / 0.2e1 + ((t1357 * t805 + t1358 * t802) * t686 - t1355 * t874) * t1282 + (t1389 * t457 - t1399 * t296 + t1400 * t298 + t1440 * t613 - t1441 * t610 - t1490 * t874) * t628 / 0.2e1 - (t1238 + t1239 + t1249 - t1250 + t1236 + t1237 + t1247 - t1248 + t1330) * t874 / 0.2e1 + (-(t1146 * t57 - t1460 * t499 + t503 * t64) * qJD(6) - (-t1122 * t1460 - t1123 * t64) * t628 + (t1113 * t64 - t1122 * t57) * t460 - (t1113 * t1460 + t1123 * t57) * t459 - g(1) * t1122 - g(2) * t1123 - g(3) * t1113 + t860 * t457 + t858 * t298 - t857 * t296 - (t1130 * t15 + t1131 * t14 - t64 * t1134 - t1135 * t1460) * t874 + (t1133 * t1460 - t1397 + t861) * t613 - t822 * t610) * m(7) + (-g(1) * t319 - g(2) * t314 - g(3) * t451 + t31 * (t229 * t874 - t350 * t610) + t32 * (-t233 * t874 - t350 * t613) + t18 * (t229 * t613 + t233 * t610) + (-t109 * t874 - t147 * t613 + t233 * t457 + t296 * t350 - t319 * t628 + t451 * t459) * t74 + (t111 * t874 - t147 * t610 - t229 * t457 + t298 * t350 + t314 * t628 + t451 * t460) * t73 + (t109 * t610 + t111 * t613 - t229 * t296 - t233 * t298 - t314 * t459 - t319 * t460) * t70) * m(6); (t197 * t64 - t199 * t1460 + t892 * t57 - (t14 + t1411) * t909 - (-t459 * t57 + t628 * t64 + t1447) * t1342 + (-t1460 * t459 + t460 * t64 - g(3) + t11) * t1147) * m(7);];
tau  = t1;
