% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRP7_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP7_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP7_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRRP7_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:20:11
% EndTime: 2019-03-09 12:20:43
% DurationCPUTime: 20.48s
% Computational Cost: add. (11669->787), mult. (21494->923), div. (0->0), fcn. (22050->6), ass. (0->568)
t498 = cos(qJ(5));
t500 = cos(qJ(2));
t497 = sin(qJ(2));
t740 = t497 * qJ(3);
t841 = pkin(2) + pkin(3);
t414 = t500 * t841 + pkin(1) + t740;
t496 = sin(qJ(4));
t499 = cos(qJ(4));
t433 = t497 * t496 + t499 * t500;
t482 = t500 * t496;
t739 = t497 * t499;
t435 = -t482 + t739;
t814 = t435 * pkin(9);
t568 = t433 * pkin(4) - t814;
t507 = t414 + t568;
t865 = pkin(7) - pkin(8);
t453 = t865 * t497;
t437 = t496 * t453;
t454 = t865 * t500;
t439 = t499 * t454;
t320 = t439 + t437;
t495 = sin(qJ(5));
t872 = t495 * t320;
t131 = -t498 * t507 + t872;
t101 = -pkin(5) * t433 + t131;
t738 = t498 * qJ(6);
t818 = pkin(5) * t495;
t562 = -t738 + t818;
t156 = -t433 * t562 + t320;
t888 = t156 * t495;
t897 = (t101 - t888) * t435;
t871 = t498 * t320;
t132 = t495 * t507 + t871;
t100 = t433 * qJ(6) + t132;
t887 = t156 * t498;
t896 = (t100 - t887) * t435;
t749 = t495 * qJ(6);
t813 = t498 * pkin(5);
t448 = t749 + t813;
t652 = t498 * qJD(6);
t509 = -qJD(5) * t448 + t652;
t802 = t101 * t498;
t805 = t100 * t495;
t846 = -t131 * t498 / 0.2e1 - t805 / 0.2e1 + t802 / 0.2e1;
t877 = t495 / 0.2e1;
t584 = t132 * t877 + t846;
t535 = t749 / 0.2e1 + t813 / 0.2e1;
t860 = t535 * t433;
t20 = t860 - t584;
t893 = t20 * qJD(1);
t895 = t509 - t893;
t649 = qJD(2) - qJD(4);
t894 = qJD(5) * t20;
t21 = t860 + t584;
t892 = t21 * qJD(5);
t211 = t499 * t453 - t496 * t454;
t243 = t495 * t435;
t247 = t498 * t435;
t567 = pkin(5) * t243 - qJ(6) * t247;
t155 = -t211 + t567;
t889 = t155 * t156;
t444 = -pkin(4) - t448;
t790 = t156 * t444;
t820 = -t499 / 0.2e1;
t886 = t156 * t820;
t885 = t435 * (t131 - t872);
t884 = (t132 - t871) * t435;
t873 = t211 * t498;
t834 = -t873 / 0.2e1;
t874 = t211 * t495;
t883 = -t874 / 0.2e1;
t267 = t874 / 0.2e1;
t815 = t435 * pkin(5);
t880 = t874 - t815;
t431 = t433 ^ 2;
t432 = t435 ^ 2;
t207 = t432 - t431;
t875 = t207 * t498;
t879 = qJD(1) * t875;
t876 = t207 * t495;
t878 = qJD(1) * t876;
t816 = t435 * pkin(4);
t817 = t433 * pkin(9);
t290 = t816 + t817;
t489 = t500 * qJ(3);
t428 = -t497 * t841 + t489;
t191 = -t290 + t428;
t186 = t495 * t191;
t729 = t186 / 0.2e1 + t834;
t760 = t435 * qJ(6);
t870 = t729 - t760;
t494 = t498 ^ 2;
t271 = t432 * t494 + t431;
t660 = t433 * qJD(5);
t856 = t649 * t435;
t866 = t856 * t495 * t498;
t869 = -t271 * qJD(1) - t660 + t866;
t868 = t207 * qJD(1);
t867 = t649 * t211;
t564 = t433 * t856;
t492 = t495 ^ 2;
t712 = t492 + t494;
t732 = t499 * t435;
t743 = t496 * t433;
t527 = t743 / 0.2e1 + t732 / 0.2e1;
t442 = qJ(3) * t496 + t499 * t841;
t440 = pkin(4) + t442;
t864 = pkin(4) + t440;
t753 = t562 * t495;
t613 = -t753 / 0.2e1;
t862 = t435 * (t613 - pkin(5) / 0.2e1);
t461 = t494 - t492;
t861 = t461 * t649;
t842 = pkin(5) / 0.2e1;
t859 = (t613 + t842) * t435;
t443 = t499 * qJ(3) - t496 * t841;
t441 = -pkin(9) + t443;
t831 = t441 / 0.2e1;
t639 = t831 + pkin(9) / 0.2e1;
t858 = t639 * t435;
t857 = t649 * t433;
t701 = qJD(1) * t435;
t305 = t433 * t701;
t423 = t739 / 0.2e1 - t482 / 0.2e1;
t718 = t423 * qJD(5) + t305;
t736 = t498 * t290;
t130 = -t736 + t880;
t796 = t130 * t495;
t254 = t495 * t290;
t723 = t873 + t254;
t129 = t760 + t723;
t798 = t129 * t498;
t529 = t798 / 0.2e1 + t796 / 0.2e1;
t803 = t101 * t495;
t804 = t100 * t498;
t819 = t499 / 0.2e1;
t823 = t496 / 0.2e1;
t647 = t155 * t823 + (t803 + t804) * t819;
t10 = t496 * t529 + t647 + t886;
t325 = (-0.1e1 + t712) * t499 * t496;
t316 = t325 * qJD(3);
t825 = t494 / 0.2e1;
t826 = t492 / 0.2e1;
t589 = t825 + t826;
t571 = t589 * pkin(9);
t328 = t442 - t444;
t833 = t328 / 0.2e1;
t591 = -t444 / 0.2e1 + t833;
t829 = t443 / 0.2e1;
t61 = (t442 * t589 - t591) * t496 + (-t441 * t589 + t571 + t829) * t499;
t855 = t10 * qJD(1) - t61 * qJD(2) + t316;
t405 = -t815 / 0.2e1;
t737 = t498 * t191;
t727 = t737 / 0.2e1 + t267;
t854 = t405 + t727;
t406 = t815 / 0.2e1;
t724 = t736 / 0.2e1 + t883;
t853 = t406 + t724;
t733 = t499 * t433;
t742 = t496 * t435;
t852 = -t733 + t742;
t103 = -t737 - t880;
t800 = t103 * t495;
t720 = -t873 + t186;
t102 = -t760 + t720;
t801 = t102 * t498;
t530 = t801 / 0.2e1 + t800 / 0.2e1;
t436 = t712 * t499;
t659 = t436 * qJD(2);
t850 = -qJD(4) * t436 + t659;
t590 = t826 - t494 / 0.2e1;
t240 = t590 * t435;
t669 = t240 * qJD(5);
t849 = -t494 * t305 + t669;
t651 = t499 * qJD(2);
t473 = t495 * t651;
t821 = t498 / 0.2e1;
t466 = t497 * t821;
t182 = t498 * t527 + t466;
t673 = t182 * qJD(1);
t848 = t673 - t473;
t677 = qJD(5) * t498;
t681 = qJD(4) * t499;
t517 = t495 * t681 + t496 * t677 - t473;
t847 = t673 + t517;
t239 = t448 * t435;
t777 = t239 * t495;
t785 = t155 * t498;
t845 = -t777 / 0.2e1 - t785 / 0.2e1;
t698 = qJD(1) * t498;
t629 = t495 * t698;
t349 = t432 * t629;
t844 = t240 * t649 - t349;
t843 = (t100 / 0.2e1 - t132 / 0.2e1) * t495 + (t131 / 0.2e1 - t101 / 0.2e1) * t498;
t840 = -t102 / 0.2e1;
t839 = -t103 / 0.2e1;
t838 = -t129 / 0.2e1;
t837 = -t191 / 0.2e1;
t836 = -t290 / 0.2e1;
t835 = t873 / 0.2e1;
t429 = t444 * t495;
t408 = t429 / 0.2e1;
t605 = t437 / 0.2e1;
t832 = -t440 / 0.2e1;
t830 = -t442 / 0.2e1;
t828 = t444 / 0.2e1;
t827 = t562 / 0.2e1;
t822 = -t497 / 0.2e1;
t793 = t132 * t433;
t47 = -t793 + (t777 + t785) * t435;
t812 = qJD(1) * t47;
t776 = t239 * t498;
t786 = t155 * t495;
t795 = t131 * t433;
t48 = -t795 + (-t776 + t786) * t435;
t811 = qJD(1) * t48;
t53 = (-t802 + t805) * t497;
t810 = qJD(1) * t53;
t806 = t100 * t433;
t56 = -t155 * t247 + t806;
t809 = qJD(1) * t56;
t63 = t211 * t243 + t795;
t808 = qJD(1) * t63;
t64 = -t211 * t247 - t793;
t807 = qJD(1) * t64;
t11 = t100 * t102 + t101 * t103 - t889;
t799 = t11 * qJD(1);
t13 = -t100 * t131 + t101 * t132 + t155 * t239;
t797 = t13 * qJD(1);
t246 = t498 * t433;
t638 = t101 * t246;
t14 = -t638 - t103 * t247 + (t102 * t435 + t806) * t495;
t791 = t14 * qJD(1);
t787 = t155 * t562;
t17 = t638 - t130 * t247 + (t129 * t435 - t806) * t495;
t782 = t17 * qJD(1);
t18 = -t132 * t247 + (t804 + (t101 - t131) * t495) * t435;
t781 = t18 * qJD(1);
t23 = -t896 + (t102 - t785) * t433;
t778 = t23 * qJD(1);
t775 = t239 * t499;
t24 = t897 + (-t103 + t786) * t433;
t774 = t24 * qJD(1);
t26 = (t838 + t840) * t498 + (-t130 / 0.2e1 + t839) * t495;
t773 = t26 * qJD(1);
t27 = t896 + (t129 + t785) * t433;
t772 = t27 * qJD(1);
t28 = -t897 + (-t130 - t786) * t433;
t771 = t28 * qJD(1);
t767 = t328 * t495;
t766 = t328 * t496;
t765 = t328 * t498;
t39 = t737 * t433 + t885;
t764 = t39 * qJD(1);
t40 = t884 + (-t720 - t873) * t433;
t763 = t40 * qJD(1);
t43 = t290 * t246 - t885;
t762 = t43 * qJD(1);
t761 = t433 * t444;
t759 = t435 * t441;
t44 = -t884 + (-t723 + t873) * t433;
t758 = t44 * qJD(1);
t757 = t440 * t435;
t756 = t441 * t433;
t755 = t444 * t498;
t754 = t562 * t444;
t752 = t562 * t498;
t751 = t562 * t499;
t144 = t786 / 0.2e1;
t602 = -t247 / 0.2e1;
t603 = t246 / 0.2e1;
t636 = t328 * t602 + t441 * t603 + t144;
t46 = t636 + t854;
t750 = t46 * qJD(1);
t241 = t495 * t433;
t746 = t495 * t442;
t745 = t495 * t497;
t734 = t498 * t442;
t511 = t835 + (t756 / 0.2e1 - t757 / 0.2e1) * t495;
t57 = t511 + t729;
t731 = t57 * qJD(1);
t604 = -t246 / 0.2e1;
t282 = t441 * t604;
t721 = t267 + t282;
t59 = t883 + (t757 / 0.2e1 + t837) * t498 + t721;
t730 = t59 * qJD(1);
t726 = t254 / 0.2e1 + t835;
t725 = -t254 / 0.2e1 + t834;
t362 = pkin(9) * t604;
t722 = t883 + t362;
t321 = t767 / 0.2e1;
t717 = t321 - t429 / 0.2e1;
t716 = -t767 / 0.2e1 + t408;
t689 = qJD(3) * t496;
t468 = t495 * t689;
t486 = t492 * qJD(6);
t715 = t468 + t486;
t470 = t495 * t652;
t476 = t498 * t689;
t714 = t470 + t476;
t682 = qJD(4) * t498;
t471 = t495 * t682;
t693 = qJD(2) * t498;
t472 = t495 * t693;
t713 = t472 - t471;
t162 = -t414 * t435 + t428 * t433;
t711 = qJD(1) * t162;
t163 = t414 * t433 + t428 * t435;
t710 = qJD(1) * t163;
t464 = -t745 / 0.2e1;
t599 = -t732 / 0.2e1;
t607 = -t743 / 0.2e1;
t558 = (t599 + t607) * t495;
t179 = t464 + t558;
t709 = qJD(1) * t179;
t463 = t745 / 0.2e1;
t559 = t527 * t495;
t180 = t463 + t559;
t708 = qJD(1) * t180;
t348 = t498 * t599;
t185 = t348 + (t607 + t822) * t498;
t707 = qJD(1) * t185;
t702 = qJD(1) * t433;
t700 = qJD(1) * t495;
t699 = qJD(1) * t497;
t697 = qJD(1) * t500;
t696 = qJD(2) * qJ(3);
t695 = qJD(2) * t328;
t694 = qJD(2) * t495;
t692 = qJD(3) * t182;
t183 = (t822 + t527) * t498;
t691 = qJD(3) * t183;
t690 = qJD(3) * t436;
t688 = qJD(3) * t497;
t687 = qJD(3) * t499;
t686 = qJD(4) * t414;
t684 = qJD(4) * t495;
t683 = qJD(4) * t496;
t680 = qJD(5) * t131;
t678 = qJD(5) * t495;
t676 = qJD(5) * t499;
t172 = t240 - t423;
t675 = qJD(6) * t172;
t171 = t240 + t423;
t674 = t171 * qJD(6);
t229 = t712 * t497 * t435;
t670 = t229 * qJD(1);
t668 = t241 * qJD(1);
t238 = t246 * qJD(1);
t253 = t461 * t432;
t667 = t253 * qJD(1);
t563 = -pkin(2) * t500 - t740;
t445 = -pkin(1) + t563;
t450 = pkin(2) * t497 - t489;
t308 = t445 * t500 + t450 * t497;
t666 = t308 * qJD(1);
t309 = -t445 * t497 + t450 * t500;
t665 = t309 * qJD(1);
t310 = t605 - t437 / 0.2e1;
t664 = t310 * qJD(1);
t662 = t423 * qJD(1);
t411 = t433 * qJD(6);
t658 = t461 * qJD(5);
t493 = t497 ^ 2;
t462 = t500 ^ 2 - t493;
t657 = t462 * qJD(1);
t656 = t493 * qJD(1);
t655 = t495 * qJD(6);
t654 = t496 * qJD(2);
t653 = t497 * qJD(2);
t488 = t500 * qJD(2);
t650 = t500 * qJD(3);
t646 = pkin(1) * t699;
t645 = pkin(1) * t697;
t644 = pkin(7) * t488;
t643 = pkin(9) * t678;
t642 = pkin(9) * t677;
t641 = pkin(7) * t653;
t640 = -pkin(4) / 0.2e1 + t832;
t601 = t247 / 0.2e1;
t637 = t144 - t776 / 0.2e1 + t444 * t601;
t145 = -t786 / 0.2e1;
t635 = t145 + t776 / 0.2e1 + t328 * t601;
t634 = pkin(9) * t603 + t444 * t602 + t145;
t477 = t498 * t654;
t633 = t495 * t676 + t496 * t682 - t477;
t632 = t414 * t702;
t631 = t414 * t701;
t630 = t494 * t701;
t628 = t433 * t688;
t627 = t495 * t660;
t626 = t498 * t660;
t625 = t441 * t678;
t624 = t441 * t677;
t623 = t435 * t655;
t622 = t445 * t450 * qJD(1);
t621 = t445 * t699;
t474 = t495 * t677;
t620 = t433 * t699;
t619 = t435 * t699;
t386 = t433 * t698;
t611 = -t241 / 0.2e1;
t610 = t243 / 0.2e1;
t609 = -t495 * t441 / 0.2e1;
t397 = t746 / 0.2e1;
t608 = t495 * t823;
t593 = t830 + t833;
t592 = t442 / 0.2e1 + t832;
t276 = t712 * t442;
t299 = t443 * t602;
t532 = (t828 + t593) * t433;
t32 = t299 + (t532 + t858) * t498;
t402 = t443 * t694;
t588 = -qJD(1) * t32 - t402;
t33 = ((-t443 / 0.2e1 + t639) * t435 + t532) * t495;
t404 = t443 * t693;
t587 = qJD(1) * t33 - t404;
t298 = t443 * t601;
t506 = -t858 + (pkin(4) / 0.2e1 + t592) * t433;
t52 = t498 * t506 + t298;
t586 = -qJD(1) * t52 + t402;
t297 = t443 * t610;
t49 = t495 * t506 + t297;
t585 = -qJD(1) * t49 - t404;
t580 = qJD(5) + t702;
t578 = t495 * t620;
t577 = t497 * t386;
t576 = t495 * t628;
t575 = t435 * t474;
t574 = t435 * t629;
t573 = t405 + t267;
t572 = t406 + t883;
t566 = -0.2e1 * t574;
t565 = 0.2e1 * t574;
t139 = qJD(1) * t172 + t713;
t166 = qJD(1) * t240 + t713;
t561 = t761 + t814;
t560 = t433 * t574;
t106 = -t276 * t441 + t328 * t443;
t528 = t155 * t829 + t156 * t833;
t2 = t790 / 0.2e1 + (pkin(9) * t840 + t100 * t830 + t129 * t831) * t498 + (pkin(9) * t839 + t101 * t830 + t130 * t831) * t495 + t528;
t556 = t2 * qJD(1) + t106 * qJD(2);
t153 = t436 * t441 + t766;
t531 = -t804 / 0.2e1 - t803 / 0.2e1;
t7 = (t156 / 0.2e1 + t531) * t499 + (-t155 / 0.2e1 + t530) * t496;
t555 = -qJD(1) * t7 + qJD(2) * t153;
t12 = t100 * t129 + t101 * t130 + t889;
t554 = t12 * qJD(1) + t10 * qJD(3);
t553 = t800 + t801;
t552 = t796 + t798;
t551 = t328 * t433 + t759;
t550 = t433 * t440 + t759;
t523 = t535 * t497;
t15 = t775 / 0.2e1 + t523 + t843 * t496;
t534 = t738 / 0.2e1 - t818 / 0.2e1;
t273 = (-t562 / 0.2e1 + t534) * t499;
t549 = -t15 * qJD(1) - t273 * qJD(2);
t230 = -t753 + t765;
t503 = (t752 / 0.2e1 + t321) * t435 + t433 * t609 - t845;
t36 = t503 - t870;
t548 = -qJD(1) * t36 - qJD(2) * t230;
t231 = -t752 - t767;
t29 = (-t756 / 0.2e1 + t837) * t498 + t859 + t572 + t635;
t547 = -qJD(1) * t29 - qJD(2) * t231;
t546 = t435 * t580;
t544 = qJD(2) * t440 - t687;
t542 = -qJD(5) * t562 + t655;
t540 = t733 - t742 / 0.2e1;
t469 = t495 * t654;
t152 = t495 * t683 - t498 * t676 - t469;
t537 = qJ(6) * t840 + t103 * t842;
t536 = qJ(6) * t838 + t130 * t842;
t501 = -t843 * t441 - t787 / 0.2e1 + t239 * t833;
t4 = t501 + t537;
t533 = t4 * qJD(1) - t562 * t695;
t526 = -0.2e1 * t866;
t522 = t534 * t442;
t521 = t534 * t499;
t114 = t397 + t716 - t752;
t307 = -t429 + t752;
t37 = (-t817 / 0.2e1 + t836) * t498 - t859 + t573 + t637;
t520 = -qJD(1) * t37 + qJD(2) * t114 + qJD(4) * t307;
t398 = -t734 / 0.2e1;
t115 = t498 * t591 + t398 - t753;
t306 = t753 + t755;
t504 = (-t752 / 0.2e1 + t408) * t435 + pkin(9) * t611 + t845;
t42 = -t760 + t504 + t725;
t519 = -qJD(1) * t42 + qJD(2) * t115 + qJD(4) * t306;
t518 = -t759 / 0.2e1 + t592 * t433;
t478 = t498 * t651;
t516 = -t496 * t678 + t498 * t681 - t478;
t232 = t495 * t640 + t397;
t67 = t267 + (-t816 / 0.2e1 + t836) * t498 + t722;
t515 = pkin(4) * t684 - qJD(1) * t67 + qJD(2) * t232;
t399 = t734 / 0.2e1;
t233 = t498 * t640 + t399;
t513 = t834 + (t817 / 0.2e1 + t816 / 0.2e1) * t495;
t65 = t513 + t726;
t514 = pkin(4) * t682 - qJD(1) * t65 + qJD(2) * t233;
t396 = -t746 / 0.2e1;
t164 = t396 + t717;
t55 = t634 + t853;
t512 = -qJD(1) * t55 + qJD(2) * t164 + t444 * t684;
t510 = qJD(2) * t563 + t650;
t104 = -t562 * t591 - t522;
t272 = (t827 + t534) * t499;
t502 = -t843 * pkin(9) + t787 / 0.2e1 + t239 * t828;
t6 = t502 + t536;
t505 = -t6 * qJD(1) + t104 * qJD(2) + t272 * qJD(3) - qJD(4) * t754;
t475 = t497 * t697;
t447 = t649 * t499;
t446 = t649 * t496;
t403 = t443 * t682;
t401 = t443 * t684;
t350 = t435 * t470;
t331 = t580 * qJ(6);
t330 = -0.2e1 * t575;
t329 = 0.2e1 * t575;
t326 = -t386 - t677;
t275 = t751 / 0.2e1 + t521;
t274 = -t751 / 0.2e1 + t521;
t270 = -t492 * t649 + t574;
t252 = t649 * t423;
t235 = t821 * t864 + t399;
t234 = t864 * t877 + t397;
t222 = t495 * t246;
t212 = t439 + 0.2e1 * t605;
t210 = t566 - t861;
t209 = t565 + t861;
t192 = t238 + t677;
t184 = t496 * t604 + t348 + t466;
t181 = t464 + t559;
t178 = t463 + t558;
t165 = t396 + t716;
t160 = t496 * t602 + t498 * t540;
t159 = t852 * t498;
t158 = t852 * t495;
t157 = t435 * t608 - t495 * t540;
t138 = (-t492 / 0.2e1 + t825 - t590) * t433;
t128 = t132 * qJD(5);
t117 = t397 + t717 + t752;
t116 = t753 + t755 / 0.2e1 - t765 / 0.2e1 + t398;
t108 = t495 * t546;
t107 = -t246 * qJD(4) + (t435 * t700 + t693) * t433;
t105 = -t754 / 0.2e1 + t328 * t827 - t522;
t68 = pkin(4) * t602 + t722 + t724;
t66 = t513 + t725;
t62 = t443 * t820 + t766 / 0.2e1 + t444 * t823 + t499 * t571 + t712 * (t441 * t819 + t496 * t830);
t60 = t440 * t601 + t721 + t727;
t58 = t511 - t729;
t54 = -t736 / 0.2e1 + t573 + t634;
t51 = pkin(4) * t604 + pkin(9) * t601 + t518 * t498 + t298 - t872;
t50 = pkin(4) * t611 + pkin(9) * t610 + t518 * t495 + t297 + t871;
t45 = -t737 / 0.2e1 + t572 + t636;
t41 = t760 + t504 + t726;
t38 = t362 + t637 + t853 - t862;
t35 = t503 + t870;
t34 = t297 + t328 * t611 + t887 + t433 * t397 + t435 * t609 + (t761 / 0.2e1 + t814 / 0.2e1) * t495;
t31 = t299 + t888 + pkin(9) * t602 + t444 * t604 + (t759 / 0.2e1 + t593 * t433) * t498;
t30 = t282 + t635 + t854 + t862;
t25 = -t529 + t530;
t16 = -t775 / 0.2e1 + t132 * t608 + t523 + t846 * t496;
t9 = t10 * qJD(4);
t8 = t496 * t530 + t647 - t886;
t5 = t502 - t536;
t3 = t501 - t537;
t1 = -t790 / 0.2e1 + t531 * t442 + t529 * t441 + t528 + t530 * pkin(9);
t19 = [0, 0, 0, t497 * t488, t462 * qJD(2), 0, 0, 0, -pkin(1) * t653, -pkin(1) * t488, -t309 * qJD(2) + t497 * t650, 0, -qJD(2) * t308 + qJD(3) * t493 (qJD(2) * t450 - t688) * t445, t564, t649 * t207, 0, 0, 0, qJD(2) * t162 + t435 * t686 + t628, qJD(2) * t163 - t433 * t686 + t435 * t688, -t432 * t474 + t494 * t564, -t253 * qJD(5) + t433 * t526, -t435 * t627 - t649 * t875, -t435 * t626 + t649 * t876, -t564, qJD(2) * t39 + qJD(4) * t43 + qJD(5) * t64 + t498 * t628, qJD(2) * t40 + qJD(4) * t44 + qJD(5) * t63 - t576, qJD(2) * t24 + qJD(4) * t28 + qJD(5) * t47 + (-t432 * t655 + t628) * t498, -qJD(2) * t14 - qJD(3) * t229 - qJD(4) * t17 - qJD(5) * t18 - t433 * t623, qJD(2) * t23 + qJD(4) * t27 + qJD(5) * t48 + qJD(6) * t271 + t576, qJD(2) * t11 + qJD(3) * t53 + qJD(4) * t12 + qJD(5) * t13 + qJD(6) * t56; 0, 0, 0, t475, t657, t488, -t653, 0, -t644 - t646, t641 - t645, -t644 - t665, t510, -t641 - t666, pkin(7) * t510 + t622, t305, t868, -t857, -t856, 0, -qJD(2) * t320 + qJD(4) * t212 + t711, t710 - t867, qJD(4) * t222 + t669 + (-t472 + t630) * t433, t138 * qJD(4) + t329 + (-qJD(2) * t461 + t566) * t433, -qJD(4) * t243 + t435 * t694 - t879, -qJD(4) * t247 + t435 * t693 + t878, -t718, t764 + (t495 * t550 - t871) * qJD(2) + t157 * qJD(3) + t50 * qJD(4) + t60 * qJD(5), t763 + (t498 * t550 + t872) * qJD(2) + t159 * qJD(3) + t51 * qJD(4) + t58 * qJD(5), t774 + (t495 * t551 - t887) * qJD(2) + t158 * qJD(3) + t34 * qJD(4) + t30 * qJD(5) + t674, -qJD(2) * t553 + t25 * qJD(4) - t791 - t892, t778 + (-t498 * t551 - t888) * qJD(2) + t160 * qJD(3) + t31 * qJD(4) + t35 * qJD(5) - t350, t799 + (-t156 * t328 + t441 * t553) * qJD(2) + t8 * qJD(3) + t1 * qJD(4) + t3 * qJD(5) + t45 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t475, t488, t656, -t621 + t644, 0, 0, 0, 0, 0, t620, t619, 0, 0, 0, 0, 0, qJD(2) * t157 - qJD(5) * t183 + t577, qJD(2) * t159 + qJD(5) * t181 - t578, qJD(2) * t158 + qJD(5) * t184 + t577, -t670, qJD(2) * t160 + qJD(5) * t178 + t578, qJD(2) * t8 + qJD(5) * t16 + qJD(6) * t183 + t810 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t305, -t868, t857, t856, 0, qJD(2) * t212 - qJD(4) * t320 + t631, -t632 + t867, qJD(2) * t222 - t669 + (-t471 - t630) * t433, t138 * qJD(2) + t330 + (-qJD(4) * t461 + t565) * t433, -qJD(2) * t243 + t435 * t684 + t879, -qJD(2) * t247 + t435 * t682 - t878, t718, t762 + t50 * qJD(2) + (t495 * t568 - t871) * qJD(4) + t68 * qJD(5), t758 + t51 * qJD(2) + (t498 * t568 + t872) * qJD(4) + t66 * qJD(5), t771 + t34 * qJD(2) + (-t495 * t561 - t887) * qJD(4) + t38 * qJD(5) - t674, t25 * qJD(2) + qJD(4) * t552 - t782 + t892, t772 + t31 * qJD(2) + (t498 * t561 - t888) * qJD(4) + t41 * qJD(5) + t350, t1 * qJD(2) + (pkin(9) * t552 + t790) * qJD(4) + t5 * qJD(5) + t54 * qJD(6) + t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t844, 0.2e1 * t866 - t667, -t108, -t498 * t546, -t252, qJD(2) * t60 + qJD(4) * t68 - t128 - t691 + t807, qJD(2) * t58 + qJD(3) * t181 + qJD(4) * t66 + t680 + t808, qJD(2) * t30 + qJD(3) * t184 + qJD(4) * t38 - t128 + t812, qJD(5) * t567 - t21 * t649 - t623 - t781, qJD(2) * t35 + qJD(3) * t178 + qJD(4) * t41 + t411 - t680 + t811, t797 + t3 * qJD(2) + t16 * qJD(3) + t5 * qJD(4) + (-pkin(5) * t132 - qJ(6) * t131) * qJD(5) + t100 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t171 * t649 - t349, -t108, -t869, qJD(2) * t45 + qJD(4) * t54 + qJD(5) * t100 + t691 + t809; 0, 0, 0, -t475, -t657, 0, 0, 0, t646, t645, t665, 0, t666, -t622, -t305, -t868, 0, 0, 0, qJD(4) * t310 - t711, -t710, t849, t329 + 0.2e1 * t560, -t626 + t879, t627 - t878, t718, qJD(4) * t49 + qJD(5) * t59 - t764, qJD(4) * t52 + qJD(5) * t57 - t763, -qJD(4) * t33 + qJD(5) * t29 + t675 - t774, qJD(4) * t26 - t433 * t652 + t791 + t894, qJD(4) * t32 + qJD(5) * t36 - t350 - t778, -qJD(3) * t7 + qJD(4) * t2 + qJD(5) * t4 + qJD(6) * t46 - t799; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), 0, 0, 0, 0, 0, qJD(4) * t443 + t689, -qJD(4) * t442 + t687, t474, t658, 0, 0, 0, -t440 * t678 + t403 + t476, -t440 * t677 - t401 - t468, qJD(5) * t231 + t403 + t714, qJD(4) * t276 - t690, qJD(5) * t230 + t401 + t715, qJD(3) * t153 + qJD(4) * t106 + t328 * t542; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t696, 0, 0, 0, 0, 0, t654, t651, 0, 0, 0, 0, 0, t477, -t469, t477, -t659, t469, qJD(4) * t62 + qJD(5) * t275 + t316 + t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t443 * t649 + t664, -t442 * t649, -t474, -t658, 0, 0, 0, qJD(5) * t234 - t403 - t585, qJD(5) * t235 + t401 - t586, qJD(5) * t117 - t403 - t470 - t587, t276 * t649 + t773, qJD(5) * t116 - t401 - t486 - t588, t62 * qJD(3) + (-pkin(9) * t276 + t443 * t444) * qJD(4) + t105 * qJD(5) + t165 * qJD(6) + t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, t209, t326, t580 * t495, t662, qJD(4) * t234 - t440 * t694 - t624 + t730, qJD(4) * t235 - t440 * t693 + t625 + t731, qJD(4) * t117 - t547 - t624, -t895, qJD(4) * t116 - t548 - t625, t275 * qJD(3) + t105 * qJD(4) + t441 * t509 + t533; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139, t326, -t270, qJD(4) * t165 + t328 * t694 + t624 + t750; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t475, 0, -t656, t621, 0, 0, 0, 0, 0, -t620, -t619, 0, 0, 0, 0, 0, -qJD(5) * t182 - t577, qJD(5) * t180 + t578, qJD(5) * t185 - t577, t670, qJD(5) * t179 - t578, qJD(2) * t7 - qJD(5) * t15 + qJD(6) * t182 - t810 + t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t696, 0, 0, 0, 0, 0, -t446, -t447, 0, 0, 0, 0, 0, t633, -t152, t633, t850, t152, -qJD(4) * t61 - qJD(5) * t273 - t499 * t655 - t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t325 * qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t446, t447, 0, 0, 0, 0, 0, -t633, t152, -t633, -t850, -t152, t444 * t683 + t274 * qJD(5) + (pkin(9) * qJD(4) * t712 + t655) * t499 + t855; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t847, -t516 + t708, -t517 + t707, 0, t516 + t709, t274 * qJD(4) + t496 * t509 + t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t847; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t305, t868, 0, 0, 0, -qJD(2) * t310 - t631, t632, -t849, t330 - 0.2e1 * t560, qJD(5) * t246 - t879, -qJD(5) * t241 + t878, -t718, -qJD(2) * t49 + qJD(5) * t67 - t762, -qJD(2) * t52 + qJD(5) * t65 - t758, qJD(2) * t33 + qJD(5) * t37 - t675 - t771, -qJD(2) * t26 + qJD(6) * t246 + t782 - t894, -qJD(2) * t32 + qJD(5) * t42 + t350 - t772, -qJD(2) * t2 + qJD(5) * t6 + qJD(6) * t55 - t554; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t443 - t664 - t689, qJD(2) * t442 - t687, -t474, -t658, 0, 0, 0, -qJD(5) * t232 - t476 + t585, -qJD(5) * t233 + t468 + t586, -qJD(5) * t114 + t587 - t714, -qJD(2) * t276 + t690 - t773, -qJD(5) * t115 + t588 - t715, qJD(3) * t61 - qJD(5) * t104 - qJD(6) * t164 - t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t654, -t651, 0, 0, 0, 0, 0, -t477, t469, -t477, t659, -t469, -qJD(5) * t272 - t855; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t474, t658, 0, 0, 0, -pkin(4) * t678, -pkin(4) * t677, -qJD(5) * t307 + t470, 0, -qJD(5) * t306 + t486, -t542 * t444; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, t210, t192, -t668 - t678, -t662, -t515 - t642, -t514 + t643, -t520 - t642, t895, -t519 - t643, pkin(9) * t509 - t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t139, t192, t270, -t512 + t642; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t844, t526 + t667, t107, t241 * qJD(4) + (t435 * t698 - t694) * t433, -t252, -qJD(2) * t59 - qJD(4) * t67 + t692 - t807, -qJD(2) * t57 - qJD(3) * t180 - qJD(4) * t65 - t808, -qJD(2) * t29 - qJD(3) * t185 - qJD(4) * t37 - t812, -t20 * t649 + t781, -qJD(2) * t36 - qJD(3) * t179 - qJD(4) * t42 + t411 - t811, qJ(6) * t411 - qJD(2) * t4 + qJD(3) * t15 - qJD(4) * t6 - t797; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, t210, t386, -t433 * t700, -t662, t232 * qJD(4) + t495 * t544 - t730, t233 * qJD(4) + t498 * t544 - t731, qJD(4) * t114 - t495 * t687 + t547, -t893, qJD(4) * t115 + t498 * t687 + t548, qJD(3) * t273 + qJD(4) * t104 - t533; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t848, -t478 - t708, -t473 - t707, 0, t478 - t709, qJD(4) * t272 - t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t166, t209, -t238, t668, t662, t515, t514, t520, t893, t519, t505; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t580, t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t172 * t649 + t349, t107, t869, -qJ(6) * t660 - qJD(2) * t46 - qJD(4) * t55 - t692 - t809; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t139, t386, t270, -t750 + t164 * qJD(4) + (t687 - t695) * t495; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t848; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t139, -t238, -t270, t512; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t580, -t331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t19;
