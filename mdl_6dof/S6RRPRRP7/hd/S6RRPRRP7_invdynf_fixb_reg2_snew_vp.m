% Calculate inertial parameters regressor of inverse dynamics cutting forces vector with Newton-Euler for
% S6RRPRRP7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5]';
%
% Output:
% f_new_reg [(3*7)x(7*10)]
%   inertial parameter regressor of inverse dynamics cutting forces vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 18:17
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function f_new_reg = S6RRPRRP7_invdynf_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP7_invdynf_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP7_invdynf_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPRRP7_invdynf_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPRRP7_invdynf_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRRP7_invdynf_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_f_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 18:17:47
% EndTime: 2019-05-06 18:17:53
% DurationCPUTime: 6.64s
% Computational Cost: add. (16758->296), mult. (34664->312), div. (0->0), fcn. (22640->8), ass. (0->181)
t2112 = sin(qJ(4));
t2116 = cos(qJ(4));
t2117 = cos(qJ(2));
t2113 = sin(qJ(2));
t2155 = qJD(1) * t2113;
t2073 = -t2112 * t2117 * qJD(1) + t2116 * t2155;
t2154 = qJD(2) * t2117;
t2138 = qJD(1) * t2154;
t2141 = t2113 * qJDD(1);
t2078 = t2138 + t2141;
t2099 = qJD(2) * t2155;
t2140 = t2117 * qJDD(1);
t2079 = -t2099 + t2140;
t2135 = t2112 * t2078 + t2116 * t2079;
t2128 = qJD(4) * t2073 + qJDD(5) + t2135;
t2105 = qJD(2) - qJD(4);
t2111 = sin(qJ(5));
t2115 = cos(qJ(5));
t2053 = t2073 * t2111 + t2105 * t2115;
t2055 = t2073 * t2115 - t2105 * t2111;
t2149 = t2053 * t2055;
t2003 = t2128 + t2149;
t2052 = t2055 ^ 2;
t2071 = (t2112 * t2113 + t2116 * t2117) * qJD(1);
t2070 = qJD(5) + t2071;
t2160 = t2070 ^ 2;
t2165 = -t2052 - t2160;
t1980 = t2003 * t2115 + t2111 * t2165;
t2133 = -t2116 * t2078 + t2112 * t2079;
t2035 = -qJD(4) * t2071 - t2133;
t2139 = -qJDD(2) + qJDD(4);
t2125 = -t2053 * qJD(5) + t2115 * t2035 + t2111 * t2139;
t2148 = t2053 * t2070;
t2123 = t2125 - t2148;
t1959 = t1980 * t2112 + t2116 * t2123;
t1961 = t1980 * t2116 - t2112 * t2123;
t1942 = t1959 * t2113 + t1961 * t2117;
t1978 = t2003 * t2111 - t2115 * t2165;
t2114 = sin(qJ(1));
t2118 = cos(qJ(1));
t2190 = t1942 * t2114 + t1978 * t2118;
t2189 = t1942 * t2118 - t1978 * t2114;
t1945 = t1959 * t2117 - t1961 * t2113;
t1998 = t2125 + t2148;
t2136 = t2111 * t2035 - t2115 * t2139;
t2127 = (-qJD(5) + t2070) * t2055 - t2136;
t2163 = -t1998 * t2115 + t2111 * t2127;
t2031 = t2053 ^ 2;
t2013 = t2052 + t2031;
t2162 = t1998 * t2111 + t2115 * t2127;
t2177 = t2013 * t2116 + t2112 * t2162;
t2178 = -t2013 * t2112 + t2116 * t2162;
t2183 = t2113 * t2177 + t2117 * t2178;
t2188 = t2114 * t2183 + t2118 * t2163;
t2187 = -t2114 * t2163 + t2118 * t2183;
t2184 = t2113 * t2178 - t2117 * t2177;
t2004 = t2128 - t2149;
t2164 = -t2160 - t2031;
t2169 = -t2004 * t2111 + t2115 * t2164;
t2182 = t2112 * t2169;
t2170 = t2004 * t2115 + t2111 * t2164;
t2181 = t2114 * t2170;
t2180 = t2116 * t2169;
t2179 = t2118 * t2170;
t2119 = qJD(1) ^ 2;
t2166 = t2117 * t2119;
t2093 = t2113 * t2166;
t2086 = qJDD(2) - t2093;
t2108 = t2113 ^ 2;
t2161 = qJD(2) ^ 2;
t2090 = t2108 * t2119 + t2161;
t2060 = t2086 * t2117 - t2090 * t2113;
t2077 = 0.2e1 * t2138 + t2141;
t2172 = t2060 * t2114 + t2077 * t2118;
t2171 = t2060 * t2118 - t2077 * t2114;
t2159 = t2071 ^ 2;
t2158 = t2073 ^ 2;
t2157 = t2105 ^ 2;
t2156 = 2 * qJD(3);
t2147 = t2071 * t2073;
t2109 = t2117 ^ 2;
t2144 = t2109 * t2119;
t2143 = qJD(4) + t2105;
t2087 = -qJD(2) * pkin(3) - pkin(8) * t2155;
t2089 = -g(1) * t2118 - g(2) * t2114;
t2126 = -pkin(1) * t2119 + qJDD(1) * pkin(7) + t2089;
t2064 = -t2113 * g(3) + t2117 * t2126;
t2134 = -pkin(2) * t2117 - qJ(3) * t2113;
t2129 = qJDD(2) * qJ(3) + qJD(2) * t2156 + t2134 * t2166 + t2064;
t2014 = -pkin(3) * t2144 - t2079 * pkin(8) + (-pkin(2) * qJD(2) + t2087) * qJD(2) + t2129;
t2085 = qJDD(2) + t2093;
t2063 = -t2117 * g(3) - t2113 * t2126;
t2122 = -qJDD(2) * pkin(2) - t2161 * qJ(3) + qJDD(3) - t2063;
t2131 = t2113 * t2134;
t2121 = -t2078 * pkin(8) - t2085 * pkin(3) + (pkin(8) * t2154 + qJD(1) * t2131) * qJD(1) + t2122;
t1987 = t2116 * t2014 + t2112 * t2121;
t2047 = pkin(4) * t2071 - pkin(9) * t2073;
t1977 = -pkin(4) * t2157 + pkin(9) * t2139 - t2071 * t2047 + t1987;
t2088 = t2114 * g(1) - t2118 * g(2);
t2074 = qJDD(1) * pkin(1) + t2119 * pkin(7) + t2088;
t2124 = t2074 + (t2079 - t2099) * pkin(2);
t2006 = t2078 * qJ(3) + t2079 * pkin(3) - pkin(8) * t2144 + (qJ(3) * t2154 + (t2156 + t2087) * t2113) * qJD(1) + t2124;
t2019 = (qJD(4) - t2105) * t2073 + t2135;
t2137 = -t2071 * t2105 - t2035;
t2120 = pkin(4) * t2019 + pkin(9) * t2137 + t2006;
t1952 = t2115 * t1977 + t2111 * t2120;
t2142 = t2108 + t2109;
t1951 = -t2111 * t1977 + t2115 * t2120;
t1986 = -t2112 * t2014 + t2116 * t2121;
t2057 = t2086 * t2113 + t2090 * t2117;
t2130 = -qJD(5) * t2055 - t2136;
t1976 = -t2139 * pkin(4) - t2157 * pkin(9) + t2073 * t2047 - t1986;
t2091 = -t2144 - t2161;
t2084 = t2142 * t2119;
t2083 = -qJDD(1) * t2114 - t2118 * t2119;
t2082 = qJDD(1) * t2118 - t2114 * t2119;
t2081 = t2142 * qJDD(1);
t2080 = -0.2e1 * t2099 + t2140;
t2062 = -t2157 - t2158;
t2059 = -t2085 * t2113 + t2091 * t2117;
t2056 = t2085 * t2117 + t2091 * t2113;
t2051 = t2081 * t2118 - t2084 * t2114;
t2050 = t2081 * t2114 + t2084 * t2118;
t2046 = t2139 - t2147;
t2045 = -t2139 - t2147;
t2044 = -t2157 - t2159;
t2043 = t2059 * t2118 - t2080 * t2114;
t2042 = t2059 * t2114 + t2080 * t2118;
t2036 = -t2158 - t2159;
t2034 = t2119 * t2131 + t2122;
t2033 = -pkin(2) * t2161 + t2129;
t2030 = -t2063 * t2113 + t2064 * t2117;
t2029 = t2063 * t2117 + t2064 * t2113;
t2028 = pkin(5) * t2053 - qJ(6) * t2055;
t2025 = t2155 * t2156 + (t2078 + t2138) * qJ(3) + t2124;
t2024 = t2045 * t2116 - t2062 * t2112;
t2023 = t2045 * t2112 + t2062 * t2116;
t2022 = t2071 * t2143 + t2133;
t2020 = -t2073 * t2143 - t2135;
t2016 = t2044 * t2116 - t2046 * t2112;
t2015 = t2044 * t2112 + t2046 * t2116;
t2002 = t2033 * t2117 + t2034 * t2113;
t2001 = t2033 * t2113 - t2034 * t2117;
t1995 = t2070 * t2055 - t2130;
t1994 = (qJD(5) + t2070) * t2055 + t2136;
t1993 = t2023 * t2113 + t2024 * t2117;
t1992 = -t2023 * t2117 + t2024 * t2113;
t1991 = t2020 * t2116 - t2022 * t2112;
t1990 = t2020 * t2112 + t2022 * t2116;
t1989 = t2015 * t2113 + t2016 * t2117;
t1988 = -t2015 * t2117 + t2016 * t2113;
t1968 = t1990 * t2113 + t1991 * t2117;
t1967 = -t1990 * t2117 + t1991 * t2113;
t1966 = t1995 * t2112 + t2180;
t1964 = -t1995 * t2116 + t2182;
t1962 = t1994 * t2112 + t2180;
t1960 = -t1994 * t2116 + t2182;
t1958 = -t1986 * t2112 + t1987 * t2116;
t1957 = t1986 * t2116 + t1987 * t2112;
t1950 = -t2130 * pkin(5) + (pkin(5) * t2070 - (2 * qJD(6))) * t2055 + t1976 - t2123 * qJ(6);
t1949 = -pkin(5) * t2128 - qJ(6) * t2160 + t2055 * t2028 + qJDD(6) - t1951;
t1948 = t1964 * t2113 + t1966 * t2117;
t1946 = -t1964 * t2117 + t1966 * t2113;
t1944 = -pkin(5) * t2160 + qJ(6) * t2128 + 0.2e1 * qJD(6) * t2070 - t2053 * t2028 + t1952;
t1943 = t1960 * t2113 + t1962 * t2117;
t1941 = -t1960 * t2117 + t1962 * t2113;
t1939 = t1957 * t2113 + t1958 * t2117;
t1938 = -t1957 * t2117 + t1958 * t2113;
t1933 = -t1951 * t2111 + t1952 * t2115;
t1932 = t1951 * t2115 + t1952 * t2111;
t1931 = t1933 * t2116 + t1976 * t2112;
t1930 = t1933 * t2112 - t1976 * t2116;
t1929 = t1944 * t2115 + t1949 * t2111;
t1928 = t1944 * t2111 - t1949 * t2115;
t1927 = t1929 * t2116 + t1950 * t2112;
t1926 = t1929 * t2112 - t1950 * t2116;
t1925 = t1930 * t2113 + t1931 * t2117;
t1924 = -t1930 * t2117 + t1931 * t2113;
t1923 = t1926 * t2113 + t1927 * t2117;
t1922 = -t1926 * t2117 + t1927 * t2113;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, -g(1), 0, 0, 0, 0, 0, 0, t2083, -t2082, 0, -t2088 * t2114 + t2089 * t2118, 0, 0, 0, 0, 0, 0, t2043, -t2171, t2051, t2030 * t2118 - t2074 * t2114, 0, 0, 0, 0, 0, 0, t2043, t2051, t2171, t2002 * t2118 - t2025 * t2114, 0, 0, 0, 0, 0, 0, t1989 * t2118 - t2019 * t2114, t1993 * t2118 + t2114 * t2137, t1968 * t2118 - t2036 * t2114, t1939 * t2118 - t2006 * t2114, 0, 0, 0, 0, 0, 0, t1943 * t2118 - t2181, -t2189, t2187, t1925 * t2118 - t1932 * t2114, 0, 0, 0, 0, 0, 0, t1948 * t2118 - t2181, t2187, t2189, t1923 * t2118 - t1928 * t2114; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(2), 0, 0, 0, 0, 0, 0, t2082, t2083, 0, t2088 * t2118 + t2089 * t2114, 0, 0, 0, 0, 0, 0, t2042, -t2172, t2050, t2030 * t2114 + t2074 * t2118, 0, 0, 0, 0, 0, 0, t2042, t2050, t2172, t2002 * t2114 + t2025 * t2118, 0, 0, 0, 0, 0, 0, t1989 * t2114 + t2019 * t2118, t1993 * t2114 - t2118 * t2137, t1968 * t2114 + t2036 * t2118, t1939 * t2114 + t2006 * t2118, 0, 0, 0, 0, 0, 0, t1943 * t2114 + t2179, -t2190, t2188, t1925 * t2114 + t1932 * t2118, 0, 0, 0, 0, 0, 0, t1948 * t2114 + t2179, t2188, t2190, t1923 * t2114 + t1928 * t2118; 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2056, -t2057, 0, t2029, 0, 0, 0, 0, 0, 0, t2056, 0, t2057, t2001, 0, 0, 0, 0, 0, 0, t1988, t1992, t1967, t1938, 0, 0, 0, 0, 0, 0, t1941, t1945, t2184, t1924, 0, 0, 0, 0, 0, 0, t1946, t2184, -t1945, t1922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2119, -qJDD(1), 0, t2089, 0, 0, 0, 0, 0, 0, t2059, -t2060, t2081, t2030, 0, 0, 0, 0, 0, 0, t2059, t2081, t2060, t2002, 0, 0, 0, 0, 0, 0, t1989, t1993, t1968, t1939, 0, 0, 0, 0, 0, 0, t1943, -t1942, t2183, t1925, 0, 0, 0, 0, 0, 0, t1948, t2183, t1942, t1923; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t2119, 0, t2088, 0, 0, 0, 0, 0, 0, t2080, -t2077, t2084, t2074, 0, 0, 0, 0, 0, 0, t2080, t2084, t2077, t2025, 0, 0, 0, 0, 0, 0, t2019, -t2137, t2036, t2006, 0, 0, 0, 0, 0, 0, t2170, -t1978, t2163, t1932, 0, 0, 0, 0, 0, 0, t2170, t2163, t1978, t1928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -g(3), 0, 0, 0, 0, 0, 0, t2056, -t2057, 0, t2029, 0, 0, 0, 0, 0, 0, t2056, 0, t2057, t2001, 0, 0, 0, 0, 0, 0, t1988, t1992, t1967, t1938, 0, 0, 0, 0, 0, 0, t1941, t1945, t2184, t1924, 0, 0, 0, 0, 0, 0, t1946, t2184, -t1945, t1922; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2091, -t2086, t2140, t2064, 0, 0, 0, 0, 0, 0, t2091, t2140, t2086, t2033, 0, 0, 0, 0, 0, 0, t2016, t2024, t1991, t1958, 0, 0, 0, 0, 0, 0, t1962, -t1961, t2178, t1931, 0, 0, 0, 0, 0, 0, t1966, t2178, t1961, t1927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2085, -t2090, -t2141, t2063, 0, 0, 0, 0, 0, 0, t2085, -t2141, t2090, -t2034, 0, 0, 0, 0, 0, 0, -t2015, -t2023, -t1990, -t1957, 0, 0, 0, 0, 0, 0, -t1960, t1959, -t2177, -t1930, 0, 0, 0, 0, 0, 0, -t1964, -t2177, -t1959, -t1926; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2080, t2077, -t2084, -t2074, 0, 0, 0, 0, 0, 0, -t2080, -t2084, -t2077, -t2025, 0, 0, 0, 0, 0, 0, -t2019, t2137, -t2036, -t2006, 0, 0, 0, 0, 0, 0, -t2170, t1978, -t2163, -t1932, 0, 0, 0, 0, 0, 0, -t2170, -t2163, -t1978, -t1928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2091, t2140, t2086, t2033, 0, 0, 0, 0, 0, 0, t2016, t2024, t1991, t1958, 0, 0, 0, 0, 0, 0, t1962, -t1961, t2178, t1931, 0, 0, 0, 0, 0, 0, t1966, t2178, t1961, t1927; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2080, -t2084, -t2077, -t2025, 0, 0, 0, 0, 0, 0, -t2019, t2137, -t2036, -t2006, 0, 0, 0, 0, 0, 0, -t2170, t1978, -t2163, -t1932, 0, 0, 0, 0, 0, 0, -t2170, -t2163, -t1978, -t1928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2085, t2141, -t2090, t2034, 0, 0, 0, 0, 0, 0, t2015, t2023, t1990, t1957, 0, 0, 0, 0, 0, 0, t1960, -t1959, t2177, t1930, 0, 0, 0, 0, 0, 0, t1964, t2177, t1959, t1926; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2044, t2045, t2020, t1987, 0, 0, 0, 0, 0, 0, t2169, -t1980, t2162, t1933, 0, 0, 0, 0, 0, 0, t2169, t2162, t1980, t1929; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2046, t2062, t2022, t1986, 0, 0, 0, 0, 0, 0, -t1994, -t2123, t2013, -t1976, 0, 0, 0, 0, 0, 0, -t1995, t2013, t2123, -t1950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2019, -t2137, t2036, t2006, 0, 0, 0, 0, 0, 0, t2170, -t1978, t2163, t1932, 0, 0, 0, 0, 0, 0, t2170, t2163, t1978, t1928; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2164, -t2003, t2127, t1952, 0, 0, 0, 0, 0, 0, t2164, t2127, t2003, t1944; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2004, t2165, -t1998, t1951, 0, 0, 0, 0, 0, 0, t2004, -t1998, -t2165, -t1949; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1994, t2123, -t2013, t1976, 0, 0, 0, 0, 0, 0, t1995, -t2013, -t2123, t1950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2164, t2127, t2003, t1944; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1995, -t2013, -t2123, t1950; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2004, t1998, t2165, t1949;];
f_new_reg  = t1;
