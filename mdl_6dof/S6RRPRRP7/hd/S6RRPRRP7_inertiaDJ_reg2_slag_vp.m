% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPRRP7_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP7_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP7_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRRP7_inertiaDJ_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:20:06
% EndTime: 2019-03-09 12:20:18
% DurationCPUTime: 3.95s
% Computational Cost: add. (3665->284), mult. (7758->459), div. (0->0), fcn. (6704->6), ass. (0->172)
t114 = sin(qJ(5));
t112 = t114 ^ 2;
t117 = cos(qJ(5));
t113 = t117 ^ 2;
t225 = t112 + t113;
t213 = cos(qJ(4));
t218 = -pkin(2) - pkin(3);
t156 = t213 * t218;
t115 = sin(qJ(4));
t185 = qJD(4) * t115;
t58 = qJ(3) * t185 - qJD(3) * t213 - qJD(4) * t156;
t32 = t225 * t58;
t118 = cos(qJ(2));
t104 = t118 * qJD(2);
t116 = sin(qJ(2));
t168 = t116 * t213;
t154 = qJD(2) * t168;
t163 = qJD(4) * t213;
t43 = t104 * t115 + t116 * t163 - t118 * t185 - t154;
t189 = t116 * t115;
t77 = t118 * t213 + t189;
t44 = qJD(2) * t77 - t116 * t185 - t118 * t163;
t137 = t115 * t43 + t213 * t44;
t78 = -t115 * t118 + t168;
t222 = (-t115 * t78 + t213 * t77) * qJD(4) + t137;
t230 = t222 * t117;
t229 = t225 * t163;
t224 = (t112 - t113) * qJD(5);
t217 = pkin(7) - pkin(8);
t227 = t217 * t189;
t226 = -pkin(2) * t118 - qJ(3) * t116;
t83 = qJ(3) * t213 + t115 * t218;
t81 = -pkin(9) + t83;
t208 = t77 * t81;
t88 = t217 * t118;
t155 = qJD(2) * t88;
t24 = t88 * t163 - t213 * t155 + (-qJD(2) + qJD(4)) * t227;
t82 = -qJ(3) * t115 + t156;
t80 = pkin(4) - t82;
t223 = (-t78 * t80 + t208) * qJD(5) - t24;
t143 = pkin(5) * t114 - qJ(6) * t117;
t62 = qJD(5) * t143 - t114 * qJD(6);
t144 = pkin(5) * t117 + qJ(6) * t114;
t61 = qJD(5) * t144 - t117 * qJD(6);
t182 = t116 * qJD(3);
t192 = qJ(3) * t118;
t52 = t182 + (t116 * t218 + t192) * qJD(2);
t120 = t43 * pkin(4) - t44 * pkin(9) + t52;
t85 = -pkin(1) + t226;
t72 = pkin(3) * t118 - t85;
t129 = pkin(4) * t77 - pkin(9) * t78 + t72;
t47 = t213 * t88 + t227;
t205 = t114 * t129 + t117 * t47;
t79 = t217 * t168;
t23 = -qJD(4) * t79 - t115 * t155 + t154 * t217 + t185 * t88;
t6 = -qJD(5) * t205 + t114 * t23 + t117 * t120;
t221 = -0.2e1 * t224;
t220 = 0.2e1 * qJD(3);
t219 = 0.2e1 * qJD(6);
t216 = pkin(9) * t43;
t215 = pkin(9) * t77;
t214 = t43 * pkin(5);
t212 = t43 * t81;
t46 = t115 * t88 - t79;
t211 = t46 * t24;
t59 = t115 * qJD(3) + qJD(4) * t83;
t210 = t46 * t59;
t209 = t58 * t77;
t37 = t59 - t62;
t207 = -t37 + t62;
t206 = t32 * t81;
t204 = t32 * pkin(9);
t53 = t144 + t80;
t84 = -pkin(4) - t144;
t203 = t53 - t84;
t202 = t229 * pkin(9);
t201 = t112 * t44;
t199 = t113 * t44;
t197 = t117 * t44;
t196 = t43 * qJ(6);
t195 = t58 * t115;
t194 = t59 * t114;
t193 = t59 * t117;
t22 = t143 * t78 + t46;
t191 = qJD(5) * t22;
t188 = t77 * qJD(6);
t186 = qJ(6) * qJD(5);
t105 = qJD(5) * t114;
t106 = qJD(5) * t117;
t183 = t116 * qJD(2);
t33 = 0.2e1 * t77 * t43;
t180 = -0.2e1 * pkin(1) * qJD(2);
t179 = -0.2e1 * pkin(4) * qJD(5);
t178 = pkin(9) * t105;
t177 = pkin(9) * t106;
t176 = pkin(7) * t183;
t175 = t114 * t197;
t174 = pkin(7) * t104;
t173 = t24 * t213;
t172 = t59 * t213;
t171 = t78 * t105;
t170 = t78 * t106;
t169 = t114 * t213;
t167 = t117 * t213;
t166 = t114 * t185;
t165 = t114 * t106;
t164 = t116 * t104;
t162 = qJD(5) * (pkin(4) + t80);
t161 = qJD(5) * t213;
t159 = -t195 * t225 + t229 * t81;
t158 = pkin(5) * qJD(5) - qJD(6);
t74 = t78 ^ 2;
t157 = t74 * t165;
t151 = -pkin(4) * t44 - t216;
t150 = pkin(4) * t78 + t215;
t130 = -t44 * qJ(6) + t158 * t78;
t138 = pkin(5) * t44 + t186 * t78;
t7 = t114 * t138 + t117 * t130 + t24;
t149 = t22 * t44 + t7 * t78;
t148 = t24 * t78 + t44 * t46;
t147 = t43 * t78 + t44 * t77;
t146 = t59 * t78 + t209;
t10 = qJ(6) * t77 + t205;
t127 = t117 * t129;
t16 = -t114 * t47 + t127;
t11 = -t77 * pkin(5) - t16;
t142 = -t10 * t117 - t11 * t114;
t141 = -t10 * t114 + t11 * t117;
t140 = -t114 * t205 - t117 * t16;
t139 = t114 * t16 - t117 * t205;
t135 = t115 * t77 + t213 * t78;
t5 = -qJD(5) * t127 + t105 * t47 - t114 * t120 + t117 * t23;
t134 = -t7 + (t78 * t84 - t215) * qJD(5);
t133 = t225 * t213;
t132 = t7 + (t53 * t78 - t208) * qJD(5);
t131 = qJD(5) * t135;
t128 = -t44 * t84 - t62 * t78 - t191 + t216;
t125 = qJD(2) * t226 + t118 * qJD(3);
t3 = t188 - t5 + t196;
t4 = -t214 - t6;
t1 = qJD(5) * t141 + t4 * t114 + t3 * t117;
t2 = qJD(5) * t140 - t6 * t114 - t5 * t117;
t124 = -t37 * t78 - t44 * t53 + t191 - t209 + t212;
t123 = -qJD(5) * t46 + t44 * t80 + t146 - t212;
t119 = t78 * t166 - t117 * t131 + (-t163 * t77 - t137) * t114;
t94 = -0.2e1 * t164;
t93 = 0.2e1 * t164;
t92 = -0.2e1 * t165;
t91 = 0.2e1 * t165;
t87 = (-t116 ^ 2 + t118 ^ 2) * qJD(2);
t68 = t114 * t161 + t117 * t185;
t67 = -t117 * t161 + t166;
t66 = t106 * t115 + t114 * t163;
t65 = t105 * t115 - t117 * t163;
t64 = t133 * qJD(4);
t63 = -t182 + (pkin(2) * t116 - t192) * qJD(2);
t42 = 0.2e1 * (-t213 + t133) * t185;
t35 = t106 * t81 - t114 * t58;
t34 = t105 * t81 + t117 * t58;
t30 = -0.2e1 * t32;
t28 = t114 * t44 + t170;
t27 = t106 * t77 + t114 * t43;
t26 = -t171 + t197;
t25 = t105 * t77 - t117 * t43;
t20 = 0.2e1 * t199 * t78 - 0.2e1 * t157;
t19 = 0.2e1 * t201 * t78 + 0.2e1 * t157;
t18 = t224 * t78 - t175;
t15 = -0.2e1 * t175 * t78 + t224 * t74;
t14 = 0.4e1 * t165 * t78 - t199 + t201;
t9 = t114 * t147 + t170 * t77;
t8 = 0.2e1 * t117 * t147 - 0.2e1 * t171 * t77;
t12 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, 0.2e1 * t87, 0, t94, 0, 0, t116 * t180, t118 * t180, 0, 0, t93, 0, -0.2e1 * t87, 0, 0, t94, -0.2e1 * t118 * t63 + 0.2e1 * t183 * t85, 0, -0.2e1 * t104 * t85 - 0.2e1 * t116 * t63, 0.2e1 * t85 * t63, 0.2e1 * t78 * t44, -0.2e1 * t147, 0, t33, 0, 0, 0.2e1 * t43 * t72 + 0.2e1 * t52 * t77, 0.2e1 * t44 * t72 + 0.2e1 * t52 * t78, 0.2e1 * t23 * t77 - 0.2e1 * t43 * t47 + 0.2e1 * t148, -0.2e1 * t23 * t47 + 0.2e1 * t52 * t72 + 0.2e1 * t211, t20, 0.2e1 * t15, t8, t19, -0.2e1 * t9, t33, 0.2e1 * t114 * t148 + 0.2e1 * t16 * t43 + 0.2e1 * t170 * t46 + 0.2e1 * t6 * t77, 0.2e1 * t117 * t148 - 0.2e1 * t171 * t46 - 0.2e1 * t205 * t43 + 0.2e1 * t5 * t77, 0.2e1 * t140 * t44 + 0.2e1 * (qJD(5) * t139 + t114 * t5 - t117 * t6) * t78, 0.2e1 * t16 * t6 - 0.2e1 * t205 * t5 + 0.2e1 * t211, t20, t8, -0.2e1 * t15, t33, 0.2e1 * t9, t19, -0.2e1 * t11 * t43 + 0.2e1 * t114 * t149 + 0.2e1 * t170 * t22 - 0.2e1 * t4 * t77, 0.2e1 * t141 * t44 + 0.2e1 * (qJD(5) * t142 - t114 * t3 + t117 * t4) * t78, 0.2e1 * t10 * t43 - 0.2e1 * t117 * t149 + 0.2e1 * t171 * t22 + 0.2e1 * t3 * t77, 0.2e1 * t10 * t3 + 0.2e1 * t11 * t4 + 0.2e1 * t22 * t7; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, -t183, 0, -t174, t176, 0, 0, 0, t104, 0, 0, t183, 0, -t174, t125, -t176, t125 * pkin(7), 0, 0, -t44, 0, t43, 0, t24, -t23, -t43 * t83 - t44 * t82 + t146, -t23 * t83 - t24 * t82 - t47 * t58 + t210, t18, t14, -t27, -t18, t25, 0, t114 * t123 - t117 * t223, t114 * t223 + t117 * t123, -t2, t139 * t58 + t2 * t81 + t24 * t80 + t210, t18, -t27, -t14, 0, -t25, -t18, -t114 * t124 + t117 * t132, -t1, t114 * t132 + t117 * t124, t1 * t81 + t142 * t58 + t22 * t37 + t7 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t220, qJ(3) * t220, 0, 0, 0, 0, 0, 0, 0.2e1 * t59, -0.2e1 * t58, 0, -0.2e1 * t58 * t83 - 0.2e1 * t59 * t82, t91, t221, 0, t92, 0, 0, -0.2e1 * t105 * t80 + 0.2e1 * t193, -0.2e1 * t106 * t80 - 0.2e1 * t194, -t30, 0.2e1 * t59 * t80 - 0.2e1 * t206, t91, 0, -t221, 0, 0, t92, -0.2e1 * t105 * t53 + 0.2e1 * t37 * t117, -t30, 0.2e1 * t106 * t53 + 0.2e1 * t37 * t114, 0.2e1 * t37 * t53 - 0.2e1 * t206; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, t174, 0, 0, 0, 0, 0, 0, 0, 0, -t222, -t173 - t23 * t115 + (t115 * t46 + t213 * t47) * qJD(4), 0, 0, 0, 0, 0, 0, t119, t105 * t135 - t230, 0, -t173 + (-t16 * t169 + t167 * t205) * qJD(4) + (qJD(4) * t46 + t2) * t115, 0, 0, 0, 0, 0, 0, t119, 0, -t114 * t131 + t230, -t7 * t213 + (t10 * t167 + t11 * t169) * qJD(4) + (qJD(4) * t22 + t1) * t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t185, t163, 0, -t172 - t195 + (-t115 * t82 + t213 * t83) * qJD(4), 0, 0, 0, 0, 0, 0, t68, -t67, -t64, t185 * t80 + t159 - t172, 0, 0, 0, 0, 0, 0, t68, -t64, t67, t185 * t53 - t213 * t37 + t159; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42, 0, 0, 0, 0, 0, 0, 0, 0, 0, t42; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t44, 0, -t43, 0, -t24, t23, 0, 0, -t18, -t14, t27, t18, -t25, 0, -t24 * t117 + t151 * t114 + (t114 * t46 - t117 * t150) * qJD(5), t24 * t114 + t151 * t117 + (t114 * t150 + t117 * t46) * qJD(5), t2, -t24 * pkin(4) + pkin(9) * t2, -t18, t27, t14, 0, t25, t18, -t114 * t128 + t117 * t134, t1, t114 * t134 + t117 * t128, pkin(9) * t1 + t22 * t62 + t7 * t84; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t59, t58, 0, 0, t92, -t221, 0, t91, 0, 0, t114 * t162 - t193, t117 * t162 + t194, -t32, -pkin(4) * t59 - t204, t92, 0, t221, 0, 0, t91, t105 * t203 + t117 * t207, -t32, -t106 * t203 + t114 * t207, t37 * t84 + t53 * t62 - t204; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t185, -t163, 0, 0, 0, 0, 0, 0, 0, 0, -t68, t67, t64, -pkin(4) * t185 + t202, 0, 0, 0, 0, 0, 0, -t68, t64, -t67, t185 * t84 - t213 * t62 + t202; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t91, t221, 0, t92, 0, 0, t114 * t179, t117 * t179, 0, 0, t91, 0, -t221, 0, 0, t92, 0.2e1 * t105 * t84 - 0.2e1 * t62 * t117, 0, -0.2e1 * t106 * t84 - 0.2e1 * t62 * t114, 0.2e1 * t84 * t62; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t26, 0, -t28, t43, t6, t5, 0, 0, 0, t26, 0, t43, t28, 0, t6 + 0.2e1 * t214, t114 * t130 - t117 * t138, 0.2e1 * t188 - t5 + 0.2e1 * t196, -pkin(5) * t4 + qJ(6) * t3 + qJD(6) * t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106, 0, t105, 0, -t35, t34, 0, 0, 0, -t106, 0, 0, -t105, 0, -t35, t61, -t34 (pkin(5) * t58 - t186 * t81) * t114 + (-qJ(6) * t58 - t158 * t81) * t117; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t66, t65, 0, 0, 0, 0, 0, 0, 0, 0, -t66, 0, -t65 (-pkin(5) * t169 + qJ(6) * t167) * qJD(4) - t61 * t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, -t105, 0, -t177, t178, 0, 0, 0, t106, 0, 0, t105, 0, -t177, -t61, -t178, -t61 * pkin(9); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, qJ(6) * t219; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t43, t26, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106, 0, t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t66; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t106, 0, t177; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t12;
