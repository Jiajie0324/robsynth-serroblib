% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPRRP7_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP7_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP7_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRRP7_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:20:06
% EndTime: 2019-03-09 12:20:20
% DurationCPUTime: 4.87s
% Computational Cost: add. (8346->498), mult. (18655->606), div. (0->0), fcn. (12025->6), ass. (0->253)
t180 = sin(qJ(4));
t183 = cos(qJ(4));
t184 = cos(qJ(2));
t282 = qJD(1) * t184;
t181 = sin(qJ(2));
t283 = qJD(1) * t181;
t117 = -t180 * t282 + t183 * t283;
t270 = qJD(2) - qJD(4);
t277 = qJD(4) * t183;
t279 = qJD(2) * t184;
t207 = t180 * t279 + t181 * t277;
t271 = qJD(1) * qJD(4);
t256 = t184 * t271;
t272 = qJD(1) * qJD(2);
t258 = t181 * t272;
t76 = qJD(1) * t207 - t180 * t256 - t183 * t258;
t355 = t117 * t270 + t76;
t163 = pkin(7) * t283;
t131 = pkin(8) * t283 - t163;
t354 = qJD(3) - t131;
t179 = sin(qJ(5));
t182 = cos(qJ(5));
t119 = -qJD(1) * pkin(1) - pkin(2) * t282 - qJ(3) * t283;
t100 = pkin(3) * t282 - t119;
t293 = t183 * t184;
t294 = t180 * t181;
t125 = t293 + t294;
t114 = t125 * qJD(1);
t61 = pkin(4) * t114 - pkin(9) * t117 + t100;
t185 = -pkin(2) - pkin(3);
t265 = t185 * qJD(2);
t102 = t265 + t354;
t175 = qJD(2) * qJ(3);
t164 = pkin(7) * t282;
t238 = -pkin(8) * t282 + t164;
t118 = t175 + t238;
t72 = t180 * t102 + t183 * t118;
t67 = -pkin(9) * t270 + t72;
t21 = t179 * t61 + t182 * t67;
t349 = qJD(5) + t114;
t18 = qJ(6) * t349 + t21;
t281 = qJD(2) * t181;
t332 = pkin(7) - pkin(8);
t132 = t332 * t281;
t174 = qJD(2) * qJD(3);
t106 = -qJD(1) * t132 + t174;
t257 = t184 * t272;
t156 = pkin(7) * t257;
t122 = -pkin(8) * t257 + t156;
t278 = qJD(4) * t180;
t209 = -t102 * t277 - t183 * t106 + t118 * t278 - t180 * t122;
t167 = t181 * qJD(3);
t286 = qJ(3) * t257 + qJD(1) * t167;
t287 = t183 * t256 + t271 * t294;
t27 = t287 * pkin(9) + t76 * pkin(4) + (-pkin(9) * t293 + (-pkin(9) * t180 + t185) * t181) * t272 + t286;
t275 = qJD(5) * t182;
t276 = qJD(5) * t179;
t255 = -t179 * t209 - t182 * t27 + t67 * t275 + t61 * t276;
t331 = pkin(5) * t76;
t2 = t255 - t331;
t353 = -t18 * t349 + t2;
t215 = t21 * t349 - t255;
t280 = qJD(2) * t183;
t116 = t179 * t283 + t182 * t280;
t352 = -t182 * t277 + t116;
t134 = -t180 * qJ(3) + t183 * t185;
t103 = t183 * qJD(3) + qJD(4) * t134;
t135 = t183 * qJ(3) + t180 * t185;
t130 = -pkin(9) + t135;
t217 = -t103 * t349 - t130 * t76;
t71 = t183 * t102 - t180 * t118;
t66 = pkin(4) * t270 - t71;
t242 = t182 * t270;
t89 = t117 * t179 + t242;
t91 = t182 * t117 - t179 * t270;
t26 = t89 * pkin(5) - t91 * qJ(6) + t66;
t344 = t349 * t26;
t351 = t344 - t217;
t330 = pkin(9) * t76;
t350 = t344 - t330;
t208 = t125 * qJD(2);
t198 = -qJD(1) * t208 + t287;
t51 = qJD(5) * t242 + t117 * t276 + t182 * t198;
t306 = t51 * t179;
t341 = t182 * t349;
t13 = t341 * t91 - t306;
t315 = t179 * t76;
t15 = -t91 * t117 + t341 * t349 + t315;
t126 = -t180 * t184 + t181 * t183;
t311 = t182 * t89;
t219 = t179 * t91 + t311;
t52 = qJD(5) * t91 - t179 * t198;
t305 = t52 * t182;
t310 = t182 * t91;
t313 = t179 * t89;
t86 = -qJD(4) * t125 + t208;
t348 = t126 * (qJD(5) * (-t310 + t313) - t305 + t306) - t219 * t86;
t74 = t182 * t76;
t213 = -t276 * t349 + t74;
t347 = -t352 * t349 + t180 * (t270 * t91 + t213) - t183 * t51;
t346 = -t51 * t182 - t91 * t276;
t343 = t349 * t66;
t82 = t183 * t131 + t180 * t238;
t302 = t103 - t82;
t301 = qJD(4) * t135 + t180 * t354 + t183 * t238;
t342 = -t349 * t91 + t52;
t143 = t332 * t181;
t144 = t332 * t184;
t340 = t183 * t143 - t180 * t144;
t314 = t179 * t86;
t85 = -t181 * t280 - t184 * t278 + t207;
t338 = t349 * (t126 * t275 + t314) + t125 * t52 + t126 * t315 + t85 * t89;
t214 = t179 * t52 + t89 * t275;
t190 = t114 * t219 + t214 - t346;
t206 = t313 * t349 - t305;
t138 = -t184 * pkin(2) - t181 * qJ(3) - pkin(1);
t123 = t184 * pkin(3) - t138;
t70 = pkin(4) * t125 - pkin(9) * t126 + t123;
t94 = t143 * t180 + t144 * t183;
t320 = t179 * t70 + t182 * t94;
t240 = t181 * t265;
t285 = qJ(3) * t279 + t167;
t96 = t240 + t285;
t38 = t85 * pkin(4) - t86 * pkin(9) + t96;
t241 = qJD(2) * t144;
t57 = qJD(4) * t340 - t183 * t132 + t180 * t241;
t10 = -qJD(5) * t320 - t179 * t57 + t182 * t38;
t335 = t270 ^ 2;
t231 = pkin(5) * t179 - qJ(6) * t182;
t334 = -t179 * qJD(6) + t231 * t349;
t333 = t91 ^ 2;
t329 = pkin(9) * t91;
t328 = pkin(5) * t117;
t327 = t26 * t91;
t249 = t180 * t106 - t183 * t122;
t40 = qJD(4) * t72 + t249;
t326 = t40 * t340;
t8 = t52 * pkin(5) + t51 * qJ(6) - t91 * qJD(6) + t40;
t325 = t8 * t179;
t324 = t8 * t182;
t323 = t91 * t89;
t322 = -t103 * t311 - t130 * t305;
t321 = t334 - t301;
t78 = t117 * pkin(4) + t114 * pkin(9);
t42 = t179 * t78 + t182 * t71;
t160 = qJ(3) * t282;
t109 = t185 * t283 + t160;
t62 = t109 - t78;
t33 = t179 * t62 + t182 * t82;
t319 = qJD(2) * pkin(2);
t318 = t125 * t76;
t317 = t130 * t89;
t316 = t130 * t91;
t312 = t182 * t86;
t308 = t40 * t179;
t307 = t40 * t182;
t304 = t76 * qJ(6);
t300 = t334 - t72;
t299 = qJ(6) * t117;
t298 = t349 * t117;
t297 = t117 * t114;
t296 = t180 * t117;
t187 = qJD(1) ^ 2;
t291 = t184 * t187;
t186 = qJD(2) ^ 2;
t290 = t186 * t181;
t168 = t186 * t184;
t20 = -t179 * t67 + t182 * t61;
t289 = qJD(6) - t20;
t176 = t181 ^ 2;
t284 = t184 ^ 2 - t176;
t269 = -t72 + t301;
t268 = pkin(9) * t276;
t267 = pkin(9) * t275;
t266 = t89 ^ 2 - t333;
t263 = t130 * t276;
t262 = t130 * t275;
t261 = t114 ^ 2 - t117 ^ 2;
t3 = t179 * t27 - t182 * t209 + t61 * t275 - t67 * t276;
t1 = qJD(6) * t349 + t3 + t304;
t17 = -pkin(5) * t349 + t289;
t260 = t114 * t17 + t1;
t259 = t114 * t20 - t3;
t254 = qJD(5) * t89 - t51;
t251 = -0.2e1 * pkin(1) * t272;
t250 = qJD(3) - t319;
t246 = t71 * t270;
t245 = qJD(1) * t138 + t119;
t244 = t114 * t270;
t239 = t181 * t257;
t237 = t254 * pkin(9);
t113 = t179 * t280 - t182 * t283;
t235 = t180 * t275 - t113;
t234 = -t17 * t117 + t324;
t233 = t18 * t117 + t325;
t232 = pkin(5) * t182 + qJ(6) * t179;
t230 = t103 * t91 - t130 * t51;
t229 = t21 * t117 + t308;
t227 = -t20 * t117 - t307;
t226 = t17 * t182 - t179 * t18;
t225 = t17 * t179 + t18 * t182;
t224 = -t179 * t21 - t182 * t20;
t223 = t179 * t20 - t182 * t21;
t32 = -t179 * t82 + t182 * t62;
t45 = -t179 * t94 + t182 * t70;
t41 = -t179 * t71 + t182 * t78;
t137 = -pkin(4) - t232;
t111 = pkin(2) * t281 - t285;
t99 = pkin(2) * t258 - t286;
t216 = -pkin(7) * t186 - qJD(1) * t111 - t99;
t211 = -t100 * t117 - t249;
t9 = t179 * t38 + t182 * t57 + t70 * t275 - t94 * t276;
t210 = -t330 + t343;
t203 = -t114 * t179 * t349 + t117 * t89 + t213;
t201 = t100 * t114 + t209;
t200 = t217 - t343;
t199 = -qJD(2) * t114 + t287;
t58 = qJD(4) * t94 - t180 * t132 - t183 * t241;
t197 = t126 * t214 + t313 * t86;
t195 = qJD(5) * t226 + t1 * t182 + t2 * t179;
t194 = qJD(5) * t224 + t179 * t255 + t3 * t182;
t133 = -pkin(7) * t258 + t174;
t136 = t163 + t250;
t140 = t164 + t175;
t192 = t133 * t184 + (t136 * t184 + (-t140 + t164) * t181) * qJD(2);
t189 = -t183 * t52 + t89 * t278 + (-qJD(2) * t89 - t315) * t180 + (-t179 * t277 - t235) * t349;
t188 = -t180 * t305 + t235 * t91 + (t180 * t254 + t277 * t91) * t179 + t352 * t89;
t152 = t181 * t291;
t142 = -0.2e1 * t239;
t141 = 0.2e1 * t239;
t139 = t284 * t187;
t129 = pkin(4) - t134;
t128 = pkin(2) * t283 - t160;
t124 = t284 * t272;
t101 = -t134 - t137;
t88 = qJD(1) * t240 + t286;
t59 = pkin(5) * t91 + qJ(6) * t89;
t54 = t126 * t231 - t340;
t48 = pkin(9) * t305;
t34 = -pkin(5) * t125 - t45;
t31 = qJ(6) * t125 + t320;
t30 = t349 * t85 + t318;
t29 = -t41 - t328;
t28 = t299 + t42;
t23 = -t32 + t328;
t22 = -t299 + t33;
t19 = t349 * t89 - t51;
t12 = t231 * t86 + (qJD(5) * t232 - qJD(6) * t182) * t126 + t58;
t11 = t126 * t346 + t86 * t310;
t7 = -t85 * pkin(5) - t10;
t6 = t126 * t74 - t51 * t125 + t91 * t85 + (-t126 * t276 + t312) * t349;
t5 = qJ(6) * t85 + qJD(6) * t125 + t9;
t4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141, 0.2e1 * t124, t168, t142, -t290, 0, -pkin(7) * t168 + t181 * t251, pkin(7) * t290 + t184 * t251, 0, 0, t141, t168, -0.2e1 * t124, 0, t290, t142, t184 * t216 + t245 * t281, t192, t181 * t216 - t245 * t279, pkin(7) * t192 + t119 * t111 + t99 * t138, t117 * t86 - t126 * t198, -t86 * t114 - t117 * t85 + t125 * t198 - t126 * t76, -t86 * t270, t114 * t85 + t318, t85 * t270, 0, t100 * t85 + t96 * t114 + t123 * t76 + t88 * t125 + t270 * t58, t100 * t86 + t96 * t117 - t123 * t198 + t88 * t126 + t270 * t57, -t57 * t114 + t58 * t117 + t125 * t209 + t40 * t126 + t199 * t340 - t71 * t86 - t72 * t85 - t94 * t76, t100 * t96 + t123 * t88 - t209 * t94 + t57 * t72 - t58 * t71 - t326, t11, t348, t6, t197, -t338, t30, t66 * t314 + t10 * t349 - t255 * t125 + t20 * t85 + t45 * t76 - t340 * t52 + t58 * t89 + (t275 * t66 + t308) * t126, t66 * t312 - t9 * t349 - t3 * t125 - t21 * t85 - t320 * t76 + t340 * t51 + t58 * t91 + (-t276 * t66 + t307) * t126, -t10 * t91 + t45 * t51 - t320 * t52 - t9 * t89 + t224 * t86 + (qJD(5) * t223 - t179 * t3 + t182 * t255) * t126, t10 * t20 + t21 * t9 - t255 * t45 + t3 * t320 + t58 * t66 - t326, t11, t6, -t348, t30, t338, t197, t26 * t314 - t7 * t349 + t12 * t89 - t2 * t125 - t17 * t85 - t34 * t76 + t54 * t52 + (t26 * t275 + t325) * t126, -t31 * t52 - t34 * t51 - t5 * t89 + t7 * t91 + t226 * t86 + (-qJD(5) * t225 - t1 * t179 + t182 * t2) * t126, -t26 * t312 + t1 * t125 + t5 * t349 - t12 * t91 + t18 * t85 + t31 * t76 + t54 * t51 + (t26 * t276 - t324) * t126, t1 * t31 + t12 * t26 + t17 * t7 + t18 * t5 + t2 * t34 + t54 * t8; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t152, -t139, 0, t152, 0, 0, t187 * pkin(1) * t181, pkin(1) * t291, 0, 0, -t152, 0, t139, 0, 0, t152 (-t119 * t181 + t128 * t184) * qJD(1) ((t140 - t175) * t181 + (-t136 + t250) * t184) * qJD(1), 0.2e1 * t174 + (t119 * t184 + t128 * t181) * qJD(1), t133 * qJ(3) + t140 * qJD(3) - t119 * t128 + (t140 * t181 + (-t136 - t319) * t184) * qJD(1) * pkin(7), -t297, t261, t244 + t199, t297, t355, 0, qJD(2) * t301 - qJD(4) * t269 - t109 * t114 - t211, -t109 * t117 + t270 * t302 - t201, -t135 * t76 + t134 * t199 + t269 * t117 + (t71 - t302) * t114, -t100 * t109 - t40 * t134 - t135 * t209 - t301 * t71 + t302 * t72, -t13, t190, -t15, -t206, -t203, t298, t129 * t52 + t301 * t89 + (-t32 - t262) * t349 + t200 * t179 - t227, -t129 * t51 + t301 * t91 + (t33 + t263) * t349 + t200 * t182 - t229, t32 * t91 + t33 * t89 + ((t20 + t316) * qJD(5) + t259) * t182 + (t114 * t21 - t255 + (t21 + t317) * qJD(5) + t230) * t179 + t322, -t103 * t223 + t40 * t129 + t130 * t194 - t20 * t32 - t21 * t33 + t301 * t66, -t13, -t15, -t190, t298, t203, -t206, t101 * t52 - t321 * t89 + (t23 - t262) * t349 - t351 * t179 + t234, t22 * t89 - t23 * t91 + ((-t17 + t316) * qJD(5) - t260) * t182 + (t114 * t18 - t2 + (t18 + t317) * qJD(5) + t230) * t179 + t322, t101 * t51 + t321 * t91 + (-t22 - t263) * t349 + t351 * t182 + t233, t8 * t101 + t103 * t225 + t130 * t195 - t17 * t23 - t18 * t22 - t26 * t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t152, 0, -t176 * t187 - t186, -qJD(2) * t140 + t119 * t283 + t156, 0, 0, 0, 0, 0, 0, -t114 * t283 - t180 * t335, -t117 * t283 - t183 * t335, -t180 * t76 + t183 * t287 + (-t183 * t114 + t296) * qJD(4) - qJD(2) * t296, -t100 * t283 + (-t270 * t72 - t40) * t183 + (-t209 + t246) * t180, 0, 0, 0, 0, 0, 0, t189, -t347, t188, t20 * t113 - t21 * t116 + (-qJD(4) * t223 - t40) * t183 + (-t270 * t66 + t194) * t180, 0, 0, 0, 0, 0, 0, t189, t188, t347, -t17 * t113 - t18 * t116 + (qJD(4) * t225 - t8) * t183 + (-t26 * t270 + t195) * t180; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t297, -t261, -t244 - t198, -t297, -t355, 0, -t72 * qJD(2) + t211, -t246 + t201, 0, 0, t13, -t190, t15, t206, t203, -t298, -pkin(4) * t52 - t72 * t89 + (-t41 - t267) * t349 + t210 * t179 + t227, pkin(4) * t51 - t72 * t91 + (t42 + t268) * t349 + t210 * t182 + t229, t41 * t91 + t42 * t89 - t48 + ((-t20 + t329) * qJD(5) - t259) * t182 + (-t215 + t237) * t179, -t40 * pkin(4) + pkin(9) * t194 - t20 * t41 - t21 * t42 - t66 * t72, t13, t15, t190, -t298, -t203, t206, t137 * t52 + t300 * t89 + (t29 - t267) * t349 + t350 * t179 - t234, t28 * t89 - t29 * t91 - t48 + ((t17 + t329) * qJD(5) + t260) * t182 + (t237 + t353) * t179, t137 * t51 - t300 * t91 + (-t28 - t268) * t349 - t350 * t182 - t233, pkin(9) * t195 + t8 * t137 - t17 * t29 - t18 * t28 + t26 * t300; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t323, -t266, t19, -t323, -t342, t76, -t66 * t91 + t215, t20 * t349 + t66 * t89 - t3, 0, 0, t323, t19, t266, t76, t342, -t323, -t59 * t89 + t215 - t327 + 0.2e1 * t331, pkin(5) * t51 - t52 * qJ(6) + (t18 - t21) * t91 + (t17 - t289) * t89, 0.2e1 * t304 - t26 * t89 + t59 * t91 + (0.2e1 * qJD(6) - t20) * t349 + t3, -t2 * pkin(5) + t1 * qJ(6) - t17 * t21 + t18 * t289 - t26 * t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t76 + t323, t19, -t349 ^ 2 - t333, t327 + t353;];
tauc_reg  = t4;
