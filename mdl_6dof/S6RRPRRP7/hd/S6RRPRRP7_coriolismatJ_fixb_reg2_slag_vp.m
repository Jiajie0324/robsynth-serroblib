% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPRRP7
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d4,d5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 12:21
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPRRP7_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPRRP7_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPRRP7_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRPRRP7_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 12:20:14
% EndTime: 2019-03-09 12:20:56
% DurationCPUTime: 32.86s
% Computational Cost: add. (16412->977), mult. (30516->1086), div. (0->0), fcn. (31010->6), ass. (0->700)
t1123 = pkin(7) - pkin(8);
t668 = cos(qJ(2));
t618 = t1123 * t668;
t664 = sin(qJ(4));
t667 = cos(qJ(4));
t665 = sin(qJ(2));
t784 = t1123 * t665;
t1117 = t667 * t618 + t664 * t784;
t597 = t665 * t664 + t667 * t668;
t663 = sin(qJ(5));
t1051 = pkin(5) * t663;
t666 = cos(qJ(5));
t951 = t666 * qJ(6);
t752 = -t951 + t1051;
t240 = -t597 * t752 + t1117;
t1149 = t240 * t663;
t1139 = t663 * t1117;
t1081 = pkin(2) + pkin(3);
t953 = t665 * qJ(3);
t578 = t1081 * t668 + pkin(1) + t953;
t649 = t668 * t664;
t952 = t665 * t667;
t599 = -t649 + t952;
t1044 = t599 * pkin(9);
t761 = t597 * pkin(4) - t1044;
t676 = t578 + t761;
t201 = -t666 * t676 + t1139;
t156 = -pkin(5) * t597 + t201;
t1154 = (t156 - t1149) * t599;
t1148 = t240 * t666;
t1138 = t666 * t1117;
t202 = t663 * t676 + t1138;
t155 = qJ(6) * t597 + t202;
t1153 = (t155 - t1148) * t599;
t1111 = t667 * t784;
t954 = t664 * t618;
t1118 = -t1111 + t954;
t363 = t663 * t599;
t369 = t666 * t599;
t760 = pkin(5) * t363 - qJ(6) * t369;
t239 = t1118 + t760;
t1150 = t239 * t240;
t1042 = t666 * pkin(5);
t963 = t663 * qJ(6);
t611 = t963 + t1042;
t607 = -pkin(4) - t611;
t1007 = t240 * t607;
t1053 = -t667 / 0.2e1;
t1147 = t1053 * t240;
t1146 = (t202 - t1138) * t599;
t1145 = (t201 - t1139) * t599;
t857 = qJD(2) - qJD(4);
t1144 = t1138 / 0.2e1;
t1129 = t1118 * t666;
t1072 = t1129 / 0.2e1;
t1130 = t1118 * t663;
t402 = -t1130 / 0.2e1;
t1141 = t1130 / 0.2e1;
t1048 = pkin(4) * t1117;
t605 = qJ(3) * t664 + t667 * t1081;
t603 = pkin(4) + t605;
t1140 = t1117 * t603;
t595 = t597 ^ 2;
t596 = t599 ^ 2;
t311 = t596 - t595;
t1132 = t311 * t666;
t1137 = qJD(1) * t1132;
t1136 = t1117 * t1118;
t1133 = t311 * t663;
t1135 = t1133 * qJD(1);
t1134 = t857 * t1117;
t660 = t663 ^ 2;
t662 = t666 ^ 2;
t926 = t660 + t662;
t1046 = t599 * pkin(4);
t1047 = t597 * pkin(9);
t434 = t1046 + t1047;
t657 = t668 * qJ(3);
t592 = -t1081 * t665 + t657;
t293 = -t434 + t592;
t284 = t663 * t293;
t943 = t284 / 0.2e1 + t1072;
t975 = t599 * qJ(6);
t1131 = t943 - t975;
t1128 = t311 * qJD(1);
t1104 = t857 * t599;
t1120 = t1104 * t663 * t666;
t555 = t662 * t596;
t413 = t595 + t555;
t890 = qJD(5) * t597;
t1127 = -qJD(1) * t413 + t1120 - t890;
t1057 = t664 / 0.2e1;
t403 = t1118 * t1057;
t1013 = t202 * t663;
t1015 = t201 * t666;
t1024 = t156 * t666;
t1103 = -t1015 / 0.2e1 + t1024 / 0.2e1;
t1124 = t1103 + t1013 / 0.2e1;
t1068 = t1111 / 0.2e1;
t419 = t926 * t605;
t946 = t667 * t599;
t957 = t664 * t597;
t701 = t957 / 0.2e1 + t946 / 0.2e1;
t947 = t667 * t597;
t956 = t664 * t599;
t1121 = -t947 + t956;
t1119 = t597 * t1104;
t1116 = pkin(4) + t603;
t966 = t752 * t663;
t810 = -t966 / 0.2e1;
t1114 = t599 * (t810 - pkin(5) / 0.2e1);
t625 = t662 - t660;
t1113 = t625 * t597;
t714 = t963 / 0.2e1 + t1042 / 0.2e1;
t1110 = t714 * t597;
t739 = -t1013 + t1015;
t1109 = t739 * t597;
t1082 = pkin(5) / 0.2e1;
t1108 = (t810 + t1082) * t599;
t1107 = (t201 / 0.2e1 - t156 / 0.2e1) * t666;
t606 = t667 * qJ(3) - t1081 * t664;
t604 = -pkin(9) + t606;
t1066 = t604 / 0.2e1;
t847 = t1066 + pkin(9) / 0.2e1;
t1106 = t847 * t599;
t1105 = t857 * t597;
t887 = qJD(5) * t666;
t638 = t663 * t887;
t768 = t599 * t638;
t483 = 0.2e1 * t768;
t912 = qJD(1) * t666;
t544 = t597 * t912;
t414 = t599 * t544;
t750 = t663 * t414;
t722 = -0.2e1 * t750;
t1102 = t483 + t722;
t484 = -0.2e1 * t768;
t721 = 0.2e1 * t750;
t1101 = t484 + t721;
t1045 = t599 * pkin(5);
t566 = -t1045 / 0.2e1;
t950 = t666 * t293;
t941 = t950 / 0.2e1 + t402;
t1100 = t566 + t941;
t567 = t1045 / 0.2e1;
t949 = t666 * t434;
t938 = t949 / 0.2e1 + t1141;
t1099 = t567 + t938;
t1097 = t721 + t483;
t1096 = t722 + t484;
t233 = t949 + t1130;
t200 = -t233 - t1045;
t1017 = t200 * t663;
t383 = t663 * t434;
t234 = -t1129 + t383;
t199 = t975 + t234;
t1019 = t199 * t666;
t707 = t1019 / 0.2e1 + t1017 / 0.2e1;
t1052 = t667 / 0.2e1;
t797 = t666 * t1052;
t804 = t663 * t1052;
t845 = t239 * t1057 + t155 * t797 + t156 * t804;
t12 = t664 * t707 + t1147 + t845;
t478 = (-0.1e1 + t926) * t667 * t664;
t870 = t478 * qJD(3);
t1064 = t606 / 0.2e1;
t1060 = t662 / 0.2e1;
t1061 = t660 / 0.2e1;
t785 = t1060 + t1061;
t1049 = pkin(9) * t667;
t647 = t660 * t1049;
t648 = t662 * t1049;
t787 = t647 / 0.2e1 + t648 / 0.2e1;
t673 = (-t604 * t785 + t1064) * t667 + t787;
t759 = t785 * t605;
t482 = t605 - t607;
t1069 = t482 / 0.2e1;
t788 = -t607 / 0.2e1 + t1069;
t91 = (t759 - t788) * t664 + t673;
t1095 = t12 * qJD(1) - t91 * qJD(2) + t870;
t206 = t1129 + t284;
t1011 = t206 * t666;
t205 = t950 - t1130;
t1012 = t205 * t663;
t705 = t1011 / 0.2e1 - t1012 / 0.2e1;
t158 = -t205 + t1045;
t1022 = t158 * t663;
t157 = -t975 + t206;
t1023 = t157 * t666;
t708 = t1023 / 0.2e1 + t1022 / 0.2e1;
t860 = t666 * qJD(6);
t679 = -qJD(5) * t611 + t860;
t600 = t926 * t667;
t867 = t600 * qJD(2);
t411 = -qJD(4) * t600 + t867;
t587 = t952 / 0.2e1 - t649 / 0.2e1;
t915 = qJD(1) * t599;
t827 = t597 * t915;
t1094 = t587 * qJD(5) + t827;
t1067 = -t603 / 0.2e1;
t848 = -pkin(4) / 0.2e1 + t1067;
t106 = (t759 + t848) * t664 + t673;
t1008 = t234 * t666;
t1009 = t233 * t663;
t704 = t1008 / 0.2e1 - t1009 / 0.2e1;
t984 = t1117 * t667;
t813 = -t984 / 0.2e1;
t844 = t201 * t804 + t202 * t797 + t403;
t29 = t664 * t704 + t813 + t844;
t1093 = -t29 * qJD(1) + t106 * qJD(2) - t870;
t362 = t663 * t597;
t875 = t362 * qJD(1);
t888 = qJD(5) * t663;
t1092 = t875 + t888;
t367 = t666 * t597;
t330 = t663 * t367;
t786 = t1061 - t662 / 0.2e1;
t360 = t786 * t599;
t876 = t360 * qJD(5);
t1091 = -qJD(4) * t330 - t876;
t113 = -t662 * t827 + t876;
t112 = t660 * t827 + t876;
t1090 = -qJD(2) * t330 + t876;
t906 = qJD(2) * t666;
t1089 = qJD(4) * t369 - t599 * t906 - t1135;
t831 = t597 * t888;
t1088 = -t1135 + t831;
t895 = qJD(4) * t666;
t1087 = qJD(2) * t369 - t599 * t895 + t1135;
t1086 = -qJD(5) * t362 + t1135;
t859 = t667 * qJD(2);
t637 = t663 * t859;
t1054 = t666 / 0.2e1;
t630 = t665 * t1054;
t280 = t666 * t701 + t630;
t882 = t280 * qJD(1);
t1085 = t882 - t637;
t894 = qJD(4) * t667;
t687 = t663 * t894 + t664 * t887 - t637;
t1084 = t882 + t687;
t1002 = t239 * t666;
t359 = t611 * t599;
t993 = t359 * t663;
t1083 = -t1002 / 0.2e1 - t993 / 0.2e1;
t833 = t663 * t912;
t503 = t596 * t833;
t145 = t360 * t857 - t503;
t771 = t599 * t833;
t316 = t625 * t857 + 0.2e1 * t771;
t1080 = -t157 / 0.2e1;
t1079 = -t158 / 0.2e1;
t1078 = -t199 / 0.2e1;
t1077 = t205 / 0.2e1;
t1076 = -t206 / 0.2e1;
t1075 = -t293 / 0.2e1;
t1074 = -t434 / 0.2e1;
t1073 = -t1129 / 0.2e1;
t1071 = t1117 / 0.2e1;
t1070 = -t1118 / 0.2e1;
t593 = t607 * t663;
t571 = t593 / 0.2e1;
t1065 = -t605 / 0.2e1;
t1063 = t607 / 0.2e1;
t1062 = t752 / 0.2e1;
t1059 = -t663 / 0.2e1;
t1056 = -t665 / 0.2e1;
t1055 = -t666 / 0.2e1;
t1043 = t664 * pkin(4);
t1041 = t29 * qJD(4);
t34 = (t1078 + t1080) * t666 + (-t200 / 0.2e1 + t1079) * t663;
t1040 = qJD(1) * t34;
t47 = (-t234 / 0.2e1 + t1076) * t666 + (t233 / 0.2e1 + t1077) * t663;
t1039 = qJD(1) * t47;
t1003 = t239 * t663;
t224 = t1003 / 0.2e1;
t799 = -t369 / 0.2e1;
t800 = t367 / 0.2e1;
t842 = t482 * t799 + t604 * t800 + t224;
t59 = t842 + t1100;
t1038 = qJD(1) * t59;
t1014 = t202 * t597;
t60 = -t1014 + (t993 + t1002) * t599;
t1037 = qJD(1) * t60;
t1016 = t201 * t597;
t992 = t359 * t666;
t61 = -t1016 + (-t992 + t1003) * t599;
t1036 = qJD(1) * t61;
t1025 = t155 * t663;
t66 = (-t1024 + t1025) * t665;
t1035 = qJD(1) * t66;
t1026 = t155 * t597;
t72 = -t239 * t369 + t1026;
t1034 = qJD(1) * t72;
t75 = t739 * t665;
t1033 = qJD(1) * t75;
t971 = t604 * t597;
t973 = t603 * t599;
t681 = t1073 + (t971 / 0.2e1 - t973 / 0.2e1) * t663;
t77 = t681 + t943;
t1032 = qJD(1) * t77;
t801 = -t367 / 0.2e1;
t426 = t604 * t801;
t934 = t402 + t426;
t79 = t1141 + (t973 / 0.2e1 + t1075) * t666 + t934;
t1031 = qJD(1) * t79;
t95 = -t1118 * t363 + t1016;
t1030 = qJD(1) * t95;
t96 = t1118 * t369 - t1014;
t1029 = qJD(1) * t96;
t13 = t155 * t157 + t156 * t158 - t1150;
t1028 = t13 * qJD(1);
t15 = -t155 * t201 + t156 * t202 + t239 * t359;
t1027 = t15 * qJD(1);
t846 = t156 * t367;
t16 = -t846 - t158 * t369 + (t157 * t599 + t1026) * t663;
t1021 = t16 * qJD(1);
t19 = t846 - t200 * t369 + (t199 * t599 - t1026) * t663;
t1020 = t19 * qJD(1);
t20 = ((t155 - t202) * t666 + (t156 - t201) * t663) * t599;
t1018 = t20 * qJD(1);
t712 = -t1025 / 0.2e1 + t1124;
t23 = -t1110 + t712;
t1010 = t23 * qJD(1);
t1004 = t239 * t752;
t136 = t1025 / 0.2e1;
t776 = t136 - t1124;
t24 = t1110 + t776;
t1001 = t24 * qJD(1);
t27 = (t205 * t666 + t206 * t663) * t599 - t1109;
t998 = t27 * qJD(1);
t30 = -t1153 + (t157 - t1002) * t597;
t997 = t30 * qJD(1);
t31 = t1154 + (-t158 + t1003) * t597;
t996 = t31 * qJD(1);
t32 = -t201 * t205 + t202 * t206 - t1136;
t995 = t32 * qJD(1);
t35 = t1153 + (t199 + t1002) * t597;
t994 = t35 * qJD(1);
t991 = t359 * t667;
t36 = -t1154 + (-t200 - t1003) * t597;
t990 = t36 * qJD(1);
t37 = (t233 * t666 + t234 * t663) * t599 + t1109;
t989 = t37 * qJD(1);
t983 = t482 * t663;
t982 = t482 * t664;
t981 = t482 * t666;
t52 = t1145 + (t205 + t1130) * t597;
t980 = t52 * qJD(1);
t53 = t1146 + (-t206 + t1129) * t597;
t979 = t53 * qJD(1);
t56 = -t1145 + (t233 - t1130) * t597;
t978 = t56 * qJD(1);
t57 = -t1146 + (-t234 - t1129) * t597;
t977 = t57 * qJD(1);
t976 = t597 * t607;
t974 = t599 * t604;
t972 = t603 * t664;
t970 = t605 * t664;
t969 = t606 * t667;
t968 = t607 * t666;
t967 = t752 * t607;
t965 = t752 * t666;
t964 = t752 * t667;
t960 = t663 * t605;
t959 = t663 * t665;
t955 = t664 * t607;
t948 = t666 * t605;
t94 = t578 * t592;
t944 = t94 * qJD(1);
t940 = t383 / 0.2e1 + t1073;
t939 = -t383 / 0.2e1 + t1072;
t385 = t419 * qJD(4);
t874 = t419 * qJD(2);
t937 = -t385 + t874;
t575 = t600 * qJD(3);
t936 = -t874 + t575;
t516 = pkin(9) * t801;
t935 = t1141 + t516;
t474 = t983 / 0.2e1;
t933 = t474 - t593 / 0.2e1;
t932 = -t983 / 0.2e1 + t571;
t931 = pkin(9) * t419;
t902 = qJD(3) * t664;
t632 = t663 * t902;
t654 = t660 * qJD(6);
t930 = t632 + t654;
t634 = t663 * t860;
t641 = t666 * t902;
t929 = t634 + t641;
t635 = t663 * t895;
t636 = t663 * t906;
t928 = t636 - t635;
t927 = t647 + t648;
t408 = t984 / 0.2e1;
t237 = t408 + t813;
t925 = qJD(1) * t237;
t246 = -t578 * t599 + t592 * t597;
t924 = qJD(1) * t246;
t247 = t578 * t597 + t592 * t599;
t923 = qJD(1) * t247;
t628 = -t959 / 0.2e1;
t795 = -t946 / 0.2e1;
t803 = -t957 / 0.2e1;
t748 = (t795 + t803) * t663;
t277 = t628 + t748;
t922 = qJD(1) * t277;
t627 = t959 / 0.2e1;
t749 = t701 * t663;
t278 = t627 + t749;
t921 = qJD(1) * t278;
t502 = t666 * t795;
t283 = t502 + (t803 + t1056) * t666;
t920 = qJD(1) * t283;
t382 = t596 * t660 - t555;
t917 = qJD(1) * t382;
t916 = qJD(1) * t597;
t914 = qJD(1) * t663;
t913 = qJD(1) * t665;
t911 = qJD(1) * t668;
t910 = qJD(2) * qJ(3);
t908 = qJD(2) * t482;
t907 = qJD(2) * t663;
t905 = qJD(3) * t237;
t904 = qJD(3) * t280;
t281 = (t1056 + t701) * t666;
t903 = qJD(3) * t281;
t901 = qJD(3) * t665;
t900 = qJD(3) * t667;
t898 = qJD(4) * t578;
t896 = qJD(4) * t663;
t893 = qJD(5) * t201;
t891 = qJD(5) * t382;
t886 = qJD(5) * t667;
t263 = t360 - t587;
t885 = qJD(6) * t263;
t884 = qJD(6) * t663;
t262 = t360 + t587;
t883 = t262 * qJD(6);
t342 = t926 * t665 * t599;
t877 = t342 * qJD(1);
t355 = t367 * qJD(1);
t753 = -pkin(2) * t668 - t953;
t608 = -pkin(1) + t753;
t613 = pkin(2) * t665 - t657;
t455 = t608 * t668 + t613 * t665;
t873 = t455 * qJD(1);
t456 = -t608 * t665 + t613 * t668;
t872 = t456 * qJD(1);
t458 = t1068 - t1111 / 0.2e1;
t871 = t458 * qJD(1);
t869 = t587 * qJD(1);
t574 = t597 * qJD(6);
t866 = t625 * qJD(5);
t661 = t665 ^ 2;
t626 = t668 ^ 2 - t661;
t865 = t626 * qJD(1);
t864 = t626 * qJD(2);
t863 = t661 * qJD(1);
t862 = t664 * qJD(2);
t861 = t665 * qJD(2);
t656 = t668 * qJD(2);
t858 = t668 * qJD(3);
t807 = t363 / 0.2e1;
t443 = t606 * t807;
t856 = t443 + t1144;
t854 = pkin(1) * t913;
t853 = pkin(1) * t911;
t852 = pkin(7) * t656;
t851 = pkin(9) * t888;
t850 = pkin(9) * t887;
t849 = pkin(7) * t861;
t798 = t369 / 0.2e1;
t843 = t224 - t992 / 0.2e1 + t607 * t798;
t225 = -t1003 / 0.2e1;
t841 = t225 + t992 / 0.2e1 + t482 * t798;
t840 = pkin(9) * t800 + t607 * t799 + t225;
t642 = t666 * t862;
t839 = t663 * t886 + t664 * t895 - t642;
t838 = t578 * t916;
t837 = t578 * t915;
t836 = t578 * t913;
t835 = t660 * t915;
t834 = t662 * t915;
t832 = t597 * t901;
t830 = t599 * t887;
t829 = t604 * t888;
t828 = t604 * t887;
t826 = t599 * t884;
t825 = t608 * t613 * qJD(1);
t824 = t608 * t913;
t823 = t597 * t914;
t822 = t597 * t913;
t821 = t599 * t913;
t820 = t667 * t884;
t815 = t1117 * t1053;
t808 = -t362 / 0.2e1;
t806 = t604 * t1059;
t557 = t960 / 0.2e1;
t805 = t664 * t1059;
t791 = t1071 - t1117 / 0.2e1;
t790 = t1065 + t1069;
t789 = t605 / 0.2e1 + t1067;
t445 = t606 * t799;
t710 = (t1063 + t790) * t597;
t43 = t445 + (t710 + t1106) * t666;
t563 = t606 * t907;
t783 = -qJD(1) * t43 - t563;
t44 = ((-t606 / 0.2e1 + t847) * t599 + t710) * t663;
t565 = t606 * t906;
t782 = qJD(1) * t44 - t565;
t444 = t606 * t798;
t675 = -t1106 + (pkin(4) / 0.2e1 + t789) * t597;
t65 = t663 * t791 + t666 * t675 + t444;
t781 = -qJD(1) * t65 + t563;
t62 = -t1138 / 0.2e1 + t675 * t663 + t856;
t780 = -qJD(1) * t62 - t565;
t777 = qJD(5) + t916;
t773 = t663 * t822;
t772 = t665 * t544;
t770 = t663 * t832;
t769 = t596 * t638;
t767 = t566 + t402;
t766 = t567 + t1141;
t763 = t604 * t419;
t762 = t604 * t600;
t758 = t414 + t830;
t219 = qJD(1) * t263 + t928;
t252 = qJD(1) * t360 + t928;
t751 = t976 + t1044;
t161 = t482 * t606 - t763;
t703 = t1064 * t239 + t1069 * t240;
t2 = t1007 / 0.2e1 + (pkin(9) * t1080 + t1065 * t155 + t1066 * t199) * t666 + (pkin(9) * t1079 + t1065 * t156 + t1066 * t200) * t663 + t703;
t746 = t2 * qJD(1) + t161 * qJD(2);
t198 = t603 * t606 - t763;
t702 = t1118 * t1064 + t1140 / 0.2e1;
t8 = -t1048 / 0.2e1 + (pkin(9) * t1076 + t1065 * t202 + t1066 * t234) * t666 + (-t233 * t604 / 0.2e1 + t201 * t1065 + pkin(9) * t1077) * t663 + t702;
t745 = t8 * qJD(1) + t198 * qJD(2);
t236 = t762 + t982;
t709 = t1055 * t155 + t1059 * t156;
t9 = (t240 / 0.2e1 + t709) * t667 + (-t239 / 0.2e1 + t708) * t664;
t744 = -qJD(1) * t9 + qJD(2) * t236;
t14 = t155 * t199 + t156 * t200 + t1150;
t743 = t14 * qJD(1) + t12 * qJD(3);
t38 = -t201 * t233 + t202 * t234 + t1136;
t742 = t38 * qJD(1) + t29 * qJD(3);
t741 = t1022 + t1023;
t740 = t1017 + t1019;
t738 = -t1011 + t1012;
t737 = t1008 - t1009;
t736 = t482 * t597 + t974;
t735 = t597 * t603 + t974;
t17 = t991 / 0.2e1 + t202 * t805 + t714 * t665 + (t136 + t1107) * t664;
t713 = t951 / 0.2e1 - t1051 / 0.2e1;
t416 = (-t752 / 0.2e1 + t713) * t667;
t733 = -t17 * qJD(1) - t416 * qJD(2);
t706 = t1055 * t202 + t1059 * t201;
t21 = (t1071 + t706) * t667 + (t1070 + t705) * t664;
t251 = t762 + t972;
t732 = qJD(1) * t21 - qJD(2) * t251;
t343 = -t966 + t981;
t671 = (t965 / 0.2e1 + t474) * t599 + t597 * t806 - t1083;
t49 = t671 - t1131;
t731 = -qJD(1) * t49 - qJD(2) * t343;
t344 = -t965 - t983;
t40 = (-t971 / 0.2e1 + t1075) * t666 + t1108 + t766 + t841;
t730 = -qJD(1) * t40 - qJD(2) * t344;
t109 = t791 * t667 + (t1118 / 0.2e1 + t1070) * t664;
t420 = t969 + t970;
t729 = -qJD(1) * t109 + qJD(2) * t420;
t727 = qJD(2) * t603 - t900;
t216 = (-t660 / 0.2e1 + t1060 - t786) * t597;
t726 = qJD(2) * t1113 - qJD(4) * t216;
t725 = -qJD(2) * t216 + qJD(4) * t1113;
t723 = -qJD(5) * t752 + t884;
t719 = t947 - t956 / 0.2e1;
t633 = t663 * t862;
t232 = t664 * t896 - t666 * t886 - t633;
t716 = qJ(6) * t1080 + t1082 * t158;
t715 = qJ(6) * t1078 + t1082 * t200;
t677 = -t1107 + (-t155 / 0.2e1 + t202 / 0.2e1) * t663;
t669 = t677 * t604 - t1004 / 0.2e1 + t359 * t1069;
t4 = t669 + t716;
t711 = t4 * qJD(1) - t752 * t908;
t698 = -0.2e1 * t1120;
t697 = 0.2e1 * t1120;
t696 = -qJD(4) * t362 + t597 * t907 - t414;
t693 = t713 * t605;
t692 = t713 * t667;
t174 = t557 + t932 - t965;
t454 = -t593 + t965;
t50 = (-t1047 / 0.2e1 + t1074) * t666 - t1108 + t767 + t843;
t691 = -qJD(1) * t50 + qJD(2) * t174 + qJD(4) * t454;
t558 = -t948 / 0.2e1;
t175 = t666 * t788 + t558 - t966;
t453 = t966 + t968;
t672 = (-t965 / 0.2e1 + t571) * t599 + pkin(9) * t808 + t1083;
t55 = -t975 + t672 + t939;
t690 = -qJD(1) * t55 + qJD(2) * t175 + qJD(4) * t453;
t689 = -t969 / 0.2e1 + t787 + t926 * (-t970 / 0.2e1 + t604 * t1052);
t688 = -t974 / 0.2e1 + t789 * t597;
t643 = t666 * t859;
t686 = -t664 * t888 + t666 * t894 - t643;
t345 = t663 * t848 + t557;
t99 = t402 + (-t1046 / 0.2e1 + t1074) * t666 + t935;
t685 = pkin(4) * t896 - qJD(1) * t99 + qJD(2) * t345;
t559 = t948 / 0.2e1;
t346 = t666 * t848 + t559;
t683 = t1072 + (t1047 / 0.2e1 + t1046 / 0.2e1) * t663;
t97 = t683 + t940;
t684 = pkin(4) * t895 - qJD(1) * t97 + qJD(2) * t346;
t556 = -t960 / 0.2e1;
t249 = t556 + t933;
t68 = t840 + t1099;
t682 = -qJD(1) * t68 + qJD(2) * t249 + t607 * t896;
t680 = qJD(2) * t753 + t858;
t678 = -t1133 * t857 + t597 * t830;
t159 = -t752 * t788 - t693;
t415 = (t1062 + t713) * t667;
t670 = t677 * pkin(9) + t1004 / 0.2e1 + t359 * t1063;
t6 = t670 + t715;
t674 = -t6 * qJD(1) + t159 * qJD(2) + t415 * qJD(3) - qJD(4) * t967;
t640 = t665 * t656;
t639 = t665 * t911;
t610 = t857 * t667;
t609 = t857 * t664;
t564 = t606 * t895;
t562 = t606 * t896;
t504 = t599 * t634;
t485 = t777 * qJ(6);
t480 = -t544 - t887;
t479 = t777 * t663;
t463 = t478 * qJD(4);
t418 = t964 / 0.2e1 + t692;
t417 = -t964 / 0.2e1 + t692;
t410 = -t660 * t857 + t771;
t378 = t857 * t587;
t348 = t1054 * t1116 + t559;
t347 = t557 + t1116 * t663 / 0.2e1;
t319 = -t954 + 0.2e1 * t1068;
t314 = t342 * qJD(3);
t294 = t355 + t887;
t282 = t664 * t801 + t502 + t630;
t279 = t628 + t749;
t276 = t627 + t748;
t269 = -t575 + t385;
t250 = t556 + t932;
t244 = t664 * t799 + t666 * t719;
t243 = t1121 * t666;
t242 = t1121 * t663;
t241 = -t663 * t719 + t664 * t807;
t235 = t237 * qJD(4);
t204 = t698 - t917;
t203 = t697 + t917;
t197 = t202 * qJD(5);
t184 = t1119 * t662 - t769;
t183 = t1119 * t660 + t769;
t177 = t557 + t933 + t965;
t176 = t966 + t968 / 0.2e1 - t981 / 0.2e1 + t558;
t163 = t777 * t363;
t162 = -qJD(4) * t367 + (t599 * t914 + t906) * t597;
t160 = -t967 / 0.2e1 + t482 * t1062 - t693;
t125 = -t597 * t887 + t1137;
t124 = -qJD(4) * t363 + t599 * t907 - t1137;
t110 = 0.2e1 * t403 + t408 - t815;
t108 = qJD(5) * t367 - t1137;
t107 = t972 / 0.2e1 - t1043 / 0.2e1 + t689;
t105 = -t1132 * t857 - t599 * t831;
t104 = (-t635 - t834) * t597 - t1090;
t103 = (-t636 + t834) * t597 - t1091;
t102 = (t635 - t835) * t597 + t1090;
t101 = (t636 + t835) * t597 + t1091;
t100 = pkin(4) * t799 + t935 + t938;
t98 = t683 + t939;
t93 = -qJD(2) * t363 + t599 * t896 + t1137;
t92 = t982 / 0.2e1 + t955 / 0.2e1 + t689;
t80 = t603 * t798 + t934 + t941;
t78 = t681 - t943;
t67 = -t949 / 0.2e1 + t767 + t840;
t64 = pkin(4) * t801 + pkin(9) * t798 + t688 * t666 - t1139 + t444;
t63 = pkin(4) * t808 + pkin(9) * t807 + t688 * t663 + t1144 + t856;
t58 = -t950 / 0.2e1 + t766 + t842;
t54 = t975 + t672 + t940;
t51 = t1099 + t516 + t843 - t1114;
t48 = t671 + t1131;
t46 = -t704 + t705;
t45 = t443 + t482 * t808 + t1148 + t597 * t557 + t599 * t806 + (t976 / 0.2e1 + t1044 / 0.2e1) * t663;
t42 = t445 + t1149 + pkin(9) * t799 + t607 * t801 + (t974 / 0.2e1 + t790 * t597) * t666;
t41 = t1100 + t426 + t841 + t1114;
t33 = -t707 + t708;
t26 = -t1110 + t776;
t25 = t1110 + t712;
t22 = t664 * t705 - t815 + t844;
t18 = t155 * t805 - t991 / 0.2e1 + pkin(5) * t630 + (t202 * t1057 + t665 * qJ(6) / 0.2e1) * t663 + t1103 * t664;
t11 = t12 * qJD(4);
t10 = t664 * t708 - t1147 + t845;
t7 = t1048 / 0.2e1 + t706 * t605 + t704 * t604 + t702 + t705 * pkin(9);
t5 = t670 - t715;
t3 = t669 - t716;
t1 = -t1007 / 0.2e1 + t709 * t605 + t707 * t604 + t703 + t708 * pkin(9);
t28 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t640, t864, 0, -t640, 0, 0, -pkin(1) * t861, -pkin(1) * t656, 0, 0, t640, 0, -t864, 0, 0, -t640, -t456 * qJD(2) + t665 * t858, 0, -qJD(2) * t455 + qJD(3) * t661 (qJD(2) * t613 - t901) * t608, t1119, t857 * t311, 0, -t1119, 0, 0, qJD(2) * t246 + t599 * t898 + t832, qJD(2) * t247 - t597 * t898 + t599 * t901, 0, qJD(2) * t94 + t578 * t901, t184, t597 * t698 + t891, t105, t183, -t678, -t1119, qJD(2) * t52 + qJD(4) * t56 + qJD(5) * t96 + t666 * t832, qJD(2) * t53 + qJD(4) * t57 + qJD(5) * t95 - t770, -qJD(2) * t27 - qJD(4) * t37 - t314, qJD(2) * t32 - qJD(3) * t75 + qJD(4) * t38, t184, t105, t597 * t697 - t891, -t1119, t678, t183, qJD(2) * t31 + qJD(4) * t36 + qJD(5) * t60 + (-t596 * t884 + t832) * t666, -qJD(2) * t16 - qJD(4) * t19 - qJD(5) * t20 - t597 * t826 - t314, qJD(2) * t30 + qJD(4) * t35 + qJD(5) * t61 + qJD(6) * t413 + t770, qJD(2) * t13 + qJD(3) * t66 + qJD(4) * t14 + qJD(5) * t15 + qJD(6) * t72; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t639, t865, t656, -t639, -t861, 0, -t852 - t854, t849 - t853, 0, 0, t639, t656, -t865, 0, t861, -t639, -t852 - t872, t680, -t849 - t873, pkin(7) * t680 + t825, t827, t1128, -t1105, -t827, -t1104, 0, -t1134 + t924, qJD(2) * t1118 + qJD(4) * t319 + t923 (t605 * t597 + t606 * t599) * qJD(2) + t1121 * qJD(3), t944 + (-t1117 * t605 + t1118 * t606) * qJD(2) + t110 * qJD(3), t103, -t726 + t1102, t124, t101, -t1089, -t1094, t980 + (t663 * t735 - t1138) * qJD(2) + t241 * qJD(3) + t63 * qJD(4) + t80 * qJD(5), t979 + (t666 * t735 + t1139) * qJD(2) + t243 * qJD(3) + t64 * qJD(4) + t78 * qJD(5), qJD(2) * t738 + t46 * qJD(4) - t998, t995 + (-t604 * t738 - t1140) * qJD(2) + t22 * qJD(3) + t7 * qJD(4), t103, t124, t726 + t1101, -t1094, t1089, t101, t996 + (t663 * t736 - t1148) * qJD(2) + t242 * qJD(3) + t45 * qJD(4) + t41 * qJD(5) + t883, -qJD(2) * t741 + t33 * qJD(4) + t26 * qJD(5) - t1021, t997 + (-t666 * t736 - t1149) * qJD(2) + t244 * qJD(3) + t42 * qJD(4) + t48 * qJD(5) - t504, t1028 + (-t240 * t482 + t604 * t741) * qJD(2) + t10 * qJD(3) + t1 * qJD(4) + t3 * qJD(5) + t58 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t639, t656, t863, -t824 + t852, 0, 0, 0, 0, 0, 0, t822, t821, qJD(2) * t1121, qJD(2) * t110 + t235 + t836, 0, 0, 0, 0, 0, 0, qJD(2) * t241 - qJD(5) * t281 + t772, qJD(2) * t243 + qJD(5) * t279 - t773, -t877, qJD(2) * t22 - t1033 + t1041, 0, 0, 0, 0, 0, 0, qJD(2) * t242 + qJD(5) * t282 + t772, -t877, qJD(2) * t244 + qJD(5) * t276 + t773, qJD(2) * t10 + qJD(5) * t18 + qJD(6) * t281 + t1035 + t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t827, -t1128, t1105, t827, t1104, 0, t1134 + t837, qJD(2) * t319 + qJD(4) * t1118 - t838, 0, t905, t104, -t725 + t1101, t93, t102, -t1087, t1094, t978 + t63 * qJD(2) + (t663 * t761 - t1138) * qJD(4) + t100 * qJD(5), t977 + t64 * qJD(2) + (t666 * t761 + t1139) * qJD(4) + t98 * qJD(5), t46 * qJD(2) + qJD(4) * t737 - t989, t7 * qJD(2) + (pkin(9) * t737 - t1048) * qJD(4) + t742, t104, t93, t725 + t1102, t1094, t1087, t102, t990 + t45 * qJD(2) + (-t663 * t751 - t1148) * qJD(4) + t51 * qJD(5) - t883, t33 * qJD(2) + qJD(4) * t740 + t25 * qJD(5) - t1020, t994 + t42 * qJD(2) + (t666 * t751 - t1149) * qJD(4) + t54 * qJD(5) + t504, t1 * qJD(2) + (pkin(9) * t740 + t1007) * qJD(4) + t5 * qJD(5) + t67 * qJD(6) + t743; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t145, t203, -t163, -t145, -t758, -t378, qJD(2) * t80 + qJD(4) * t100 + t1029 - t197 - t903, qJD(2) * t78 + qJD(3) * t279 + qJD(4) * t98 + t1030 + t893, 0, 0, t145, -t163, t204, -t378, t758, -t145, qJD(2) * t41 + qJD(3) * t282 + qJD(4) * t51 + t1037 - t197, t26 * qJD(2) + t25 * qJD(4) + qJD(5) * t760 - t1018 - t826, qJD(2) * t48 + qJD(3) * t276 + qJD(4) * t54 + t1036 + t574 - t893, t1027 + t3 * qJD(2) + t18 * qJD(3) + t5 * qJD(4) + (-pkin(5) * t202 - qJ(6) * t201) * qJD(5) + t155 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t262 * t857 - t503, -t163, -t1127, qJD(2) * t58 + qJD(4) * t67 + qJD(5) * t155 + t1034 + t903; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t639, -t865, 0, t639, 0, 0, t854, t853, 0, 0, -t639, 0, t865, 0, 0, t639, t872, 0, t873, -t825, -t827, -t1128, 0, t827, 0, 0, -t924, qJD(4) * t458 - t923, 0, -qJD(3) * t109 - t944, t113, t1097, t125, -t112, t1088, t1094, qJD(4) * t62 + qJD(5) * t79 - t980, qJD(4) * t65 + qJD(5) * t77 - t979, qJD(4) * t47 + t998, -qJD(3) * t21 + qJD(4) * t8 - t995, t113, t125, t1096, t1094, -t1088, -t112, -qJD(4) * t44 + qJD(5) * t40 + t885 - t996, qJD(4) * t34 - qJD(5) * t23 - t597 * t860 + t1021, qJD(4) * t43 + qJD(5) * t49 - t504 - t997, -qJD(3) * t9 + qJD(4) * t2 + qJD(5) * t4 + qJD(6) * t59 - t1028; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), qJ(3) * qJD(3), 0, 0, 0, 0, 0, 0, qJD(4) * t606 + t902, -qJD(4) * t605 + t900, 0, qJD(3) * t420, t638, t866, 0, -t638, 0, 0, -t603 * t888 + t564 + t641, -t603 * t887 - t562 - t632, t269, qJD(3) * t251 + qJD(4) * t198, t638, 0, -t866, 0, 0, -t638, qJD(5) * t344 + t564 + t929, t269, qJD(5) * t343 + t562 + t930, qJD(3) * t236 + qJD(4) * t161 + t482 * t723; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t910, 0, 0, 0, 0, 0, 0, t862, t859, 0, t729, 0, 0, 0, 0, 0, 0, t642, -t633, -t867, qJD(4) * t107 - t732 + t870, 0, 0, 0, 0, 0, 0, t642, -t867, t633, qJD(4) * t92 + qJD(5) * t418 + t744 + t870; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t857 * t606, -t605 * t857 + t871, 0, 0, -t638, -t866, 0, t638, 0, 0, qJD(5) * t347 - t564 - t780, qJD(5) * t348 + t562 - t781, t937 + t1039, t107 * qJD(3) + (-pkin(4) * t606 - t931) * qJD(4) + t745, -t638, 0, t866, 0, 0, t638, qJD(5) * t177 - t564 - t634 - t782, t937 + t1040, qJD(5) * t176 - t562 - t654 - t783, t92 * qJD(3) + (t606 * t607 - t931) * qJD(4) + t160 * qJD(5) + t250 * qJD(6) + t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t316, t480, -t252, t479, t869, qJD(4) * t347 - t603 * t907 + t1031 - t828, qJD(4) * t348 - t603 * t906 + t1032 + t829, 0, 0, t252, t480, -t316, t869, -t479, -t252, qJD(4) * t177 - t730 - t828, -t679 - t1010, qJD(4) * t176 - t731 - t829, t418 * qJD(3) + t160 * qJD(4) + t604 * t679 + t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, t480, -t410, qJD(4) * t250 + t482 * t907 + t1038 + t828; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t639, 0, -t863, t824, 0, 0, 0, 0, 0, 0, -t822, -t821, 0, qJD(2) * t109 + t235 - t836, 0, 0, 0, 0, 0, 0, -qJD(5) * t280 - t772, qJD(5) * t278 + t773, t877, qJD(2) * t21 + t1033 + t1041, 0, 0, 0, 0, 0, 0, qJD(5) * t283 - t772, t877, qJD(5) * t277 - t773, qJD(2) * t9 - qJD(5) * t17 + qJD(6) * t280 - t1035 + t11; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t910, 0, 0, 0, 0, 0, 0, -t609, -t610, 0, -t729, 0, 0, 0, 0, 0, 0, t839, -t232, t411, -qJD(4) * t106 + t732, 0, 0, 0, 0, 0, 0, t839, t411, t232, -qJD(4) * t91 - qJD(5) * t416 - t744 - t820; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t463, 0, 0, 0, 0, 0, 0, 0, 0, 0, t463; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t609, t610, 0, t925, 0, 0, 0, 0, 0, 0, -t839, t232, -t411 (t927 - t1043) * qJD(4) - t1093, 0, 0, 0, 0, 0, 0, -t839, -t411, -t232 (t927 + t955) * qJD(4) + t417 * qJD(5) + t820 + t1095; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1084, -t686 + t921, 0, 0, 0, 0, 0, 0, 0, 0, -t687 + t920, 0, t686 + t922, t417 * qJD(4) + t664 * t679 + t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1084; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t827, t1128, 0, -t827, 0, 0, -t837, -qJD(2) * t458 + t838, 0, -t905, -t113, t1096, t108, t112, t1086, -t1094, -qJD(2) * t62 + qJD(5) * t99 - t978, -qJD(2) * t65 + qJD(5) * t97 - t977, -qJD(2) * t47 + t989, -qJD(2) * t8 - t742, -t113, t108, t1097, -t1094, -t1086, t112, qJD(2) * t44 + qJD(5) * t50 - t885 - t990, -qJD(2) * t34 - qJD(5) * t24 + qJD(6) * t367 + t1020, -qJD(2) * t43 + qJD(5) * t55 + t504 - t994, -qJD(2) * t2 + qJD(5) * t6 + qJD(6) * t68 - t743; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t606 - t902, qJD(2) * t605 - t871 - t900, 0, 0, -t638, -t866, 0, t638, 0, 0, -qJD(5) * t345 - t641 + t780, -qJD(5) * t346 + t632 + t781, t936 - t1039, qJD(3) * t106 - t745, -t638, 0, t866, 0, 0, t638, -qJD(5) * t174 + t782 - t929, t936 - t1040, -qJD(5) * t175 + t783 - t930, qJD(3) * t91 - qJD(5) * t159 - qJD(6) * t249 - t746; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t862, -t859, 0, -t925, 0, 0, 0, 0, 0, 0, -t642, t633, t867, t1093, 0, 0, 0, 0, 0, 0, -t642, t867, -t633, -qJD(5) * t415 - t1095; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t638, t866, 0, -t638, 0, 0, -pkin(4) * t888, -pkin(4) * t887, 0, 0, t638, 0, -t866, 0, 0, -t638, -qJD(5) * t454 + t634, 0, -qJD(5) * t453 + t654, -t723 * t607; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t252, -t316, t294, t252, -t1092, -t869, -t685 - t850, -t684 + t851, 0, 0, -t252, t294, t316, -t869, t1092, t252, -t691 - t850, t679 - t1001, -t690 - t851, pkin(9) * t679 - t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, t294, t410, -t682 + t850; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t145, t204, t162, t145, -t696, -t378, -qJD(2) * t79 - qJD(4) * t99 - t1029 + t904, -qJD(2) * t77 - qJD(3) * t278 - qJD(4) * t97 - t1030, 0, 0, -t145, t162, t203, -t378, t696, t145, -qJD(2) * t40 - qJD(3) * t283 - qJD(4) * t50 - t1037, qJD(2) * t23 + qJD(4) * t24 + t1018, -qJD(2) * t49 - qJD(3) * t277 - qJD(4) * t55 - t1036 + t574, qJ(6) * t574 - qJD(2) * t4 + qJD(3) * t17 - qJD(4) * t6 - t1027; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t252, -t316, t544, t252, -t823, -t869, qJD(4) * t345 + t663 * t727 - t1031, qJD(4) * t346 + t666 * t727 - t1032, 0, 0, -t252, t544, t316, -t869, t823, t252, qJD(4) * t174 - t663 * t900 + t730, t1010, qJD(4) * t175 + t666 * t900 + t731, qJD(3) * t416 + qJD(4) * t159 - t711; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1085, -t643 - t921, 0, 0, 0, 0, 0, 0, 0, 0, -t637 - t920, 0, t643 - t922, qJD(4) * t415 - t733; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t252, t316, -t355, -t252, t875, t869, t685, t684, 0, 0, t252, -t355, -t316, t869, -t875, -t252, t691, t1001, t690, t674; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t777, t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t263 * t857 + t503, t162, t1127, -qJ(6) * t890 - qJD(2) * t59 - qJD(4) * t68 - t1034 - t904; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t219, t544, t410, -t1038 + qJD(4) * t249 + (t900 - t908) * t663; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1085; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t219, -t355, -t410, t682; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t777, -t485; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t28;
