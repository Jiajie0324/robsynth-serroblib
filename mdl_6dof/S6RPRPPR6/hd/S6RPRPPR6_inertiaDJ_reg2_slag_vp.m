% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RPRPPR6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d6,theta4,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 02:55
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RPRPPR6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRPPR6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRPPR6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RPRPPR6_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 02:54:38
% EndTime: 2019-03-09 02:54:45
% DurationCPUTime: 2.25s
% Computational Cost: add. (3127->209), mult. (6431->370), div. (0->0), fcn. (6254->8), ass. (0->121)
t147 = cos(qJ(6));
t112 = qJD(6) * t147;
t73 = sin(qJ(6));
t124 = qJD(6) * t73;
t70 = sin(pkin(10));
t72 = cos(pkin(10));
t150 = t72 * t112 - t70 * t124;
t125 = cos(pkin(9));
t71 = sin(pkin(9));
t74 = sin(qJ(3));
t75 = cos(qJ(3));
t52 = t125 * t74 + t71 * t75;
t47 = t52 * qJD(3);
t109 = t125 * t75;
t54 = -t71 * t74 + t109;
t115 = t147 * t70;
t131 = t73 * t72;
t55 = t115 + t131;
t15 = t150 * t54 - t47 * t55;
t65 = -t125 * pkin(3) - pkin(4);
t57 = -t72 * pkin(5) + t65;
t153 = 0.2e1 * t57;
t49 = t55 * qJD(6);
t95 = t147 * t72 - t73 * t70;
t13 = t95 * t47 + t54 * t49;
t123 = t74 * qJD(3);
t46 = -qJD(3) * t109 + t71 * t123;
t12 = t95 * t46 + t49 * t52;
t100 = t54 * t46 + t47 * t52;
t152 = 0.2e1 * t100;
t151 = (t125 * t47 + t46 * t71) * pkin(3);
t27 = t95 * t52;
t149 = 2 * qJD(2);
t62 = t71 * pkin(3) + qJ(5);
t148 = pkin(8) + t62;
t76 = -pkin(1) - pkin(7);
t126 = qJ(4) - t76;
t90 = -t75 * qJD(4) + t126 * t123;
t111 = t126 * t75;
t91 = -qJD(3) * t111 - t74 * qJD(4);
t24 = -t125 * t90 + t71 * t91;
t56 = t126 * t74;
t34 = t126 * t109 - t71 * t56;
t146 = t34 * t24;
t144 = t47 * t65;
t143 = t47 * t70;
t142 = t47 * t72;
t140 = t52 * t46;
t139 = t95 * t49;
t37 = t54 * t47;
t137 = t55 * t46;
t136 = t55 * t150;
t35 = -t71 * t111 - t125 * t56;
t135 = t70 * t35;
t134 = t70 * t46;
t133 = t70 * t54;
t130 = pkin(8) + qJ(5);
t26 = t55 * t54;
t129 = -t55 * t15 - t150 * t26;
t66 = t74 * pkin(3) + qJ(2);
t96 = t52 * pkin(4) + t66;
t89 = -t54 * qJ(5) + t96;
t17 = t72 * t35 + t70 * t89;
t68 = t70 ^ 2;
t69 = t72 ^ 2;
t127 = t68 + t69;
t122 = t75 * qJD(3);
t121 = qJ(2) * qJD(3);
t33 = -0.2e1 * t140;
t120 = -0.2e1 * t37;
t119 = t70 * t142;
t117 = t74 * t122;
t116 = t73 * t148;
t113 = t127 * t46;
t110 = t147 * qJD(5);
t108 = t127 * qJD(5);
t107 = 0.2e1 * t108;
t82 = t125 * t91 + t71 * t90;
t81 = t70 * t82;
t58 = pkin(3) * t122 + qJD(2);
t88 = -t46 * pkin(4) - t54 * qJD(5) + t58;
t87 = t47 * qJ(5) + t88;
t7 = t72 * t87 - t81;
t80 = t72 * t82;
t8 = t70 * t87 + t80;
t105 = t7 * t72 + t8 * t70;
t104 = -t7 * t70 + t8 * t72;
t28 = t95 * t54;
t103 = t13 * t95 + t28 * t49;
t16 = t72 * t89 - t135;
t102 = t16 * t70 - t17 * t72;
t101 = t24 * t54 - t34 * t47;
t99 = t37 + t140;
t98 = -t150 * t52 + t137;
t97 = t148 * t115;
t93 = 0.2e1 * t99;
t92 = -qJD(5) * t52 + t46 * t62 - t144;
t86 = t130 * t47 + t88;
t85 = t52 * pkin(5) - t135 + (-t130 * t54 + t96) * t72;
t84 = t73 * t85;
t83 = t147 * t85;
t79 = -t35 * t46 + t82 * t52 - t101;
t78 = t86 * t70 + t80;
t77 = -t46 * pkin(5) + t86 * t72 - t81;
t67 = qJ(2) * t149;
t50 = t148 * t72;
t44 = t72 * t46;
t31 = -t70 * t116 + t147 * t50;
t30 = -t73 * t50 - t97;
t25 = t55 * t52;
t23 = pkin(5) * t133 + t34;
t22 = -t50 * t112 - qJD(5) * t131 + (qJD(6) * t116 - t110) * t70;
t21 = qJD(6) * t97 - t72 * t110 + (t70 * qJD(5) + qJD(6) * t50) * t73;
t18 = -pkin(5) * t143 + t24;
t14 = -qJD(6) * t27 + t137;
t11 = -pkin(8) * t133 + t17;
t4 = t147 * t11 + t84;
t3 = -t73 * t11 + t83;
t2 = -qJD(6) * t84 - t11 * t112 + t147 * t77 - t73 * t78;
t1 = -qJD(6) * t83 + t11 * t124 - t147 * t78 - t73 * t77;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t149, t67, -0.2e1 * t117, 0.2e1 * (t74 ^ 2 - t75 ^ 2) * qJD(3), 0, 0.2e1 * t117, 0, 0, 0.2e1 * qJD(2) * t74 + 0.2e1 * t75 * t121, 0.2e1 * qJD(2) * t75 - 0.2e1 * t74 * t121, 0, t67, t120, t152, 0, t33, 0, 0, -0.2e1 * t66 * t46 + 0.2e1 * t58 * t52, -0.2e1 * t66 * t47 + 0.2e1 * t58 * t54, -0.2e1 * t79, 0.2e1 * t35 * t82 + 0.2e1 * t66 * t58 + 0.2e1 * t146, t69 * t120, 0.4e1 * t54 * t119, -0.2e1 * t100 * t72, t68 * t120, t70 * t152, t33, 0.2e1 * t101 * t70 - 0.2e1 * t16 * t46 + 0.2e1 * t7 * t52, 0.2e1 * t101 * t72 + 0.2e1 * t17 * t46 - 0.2e1 * t8 * t52, -0.2e1 * t105 * t54 + 0.2e1 * (t16 * t72 + t17 * t70) * t47, 0.2e1 * t16 * t7 + 0.2e1 * t17 * t8 + 0.2e1 * t146, -0.2e1 * t28 * t13, 0.2e1 * t13 * t26 - 0.2e1 * t28 * t15, -0.2e1 * t13 * t52 - 0.2e1 * t28 * t46, 0.2e1 * t26 * t15, -0.2e1 * t15 * t52 + 0.2e1 * t26 * t46, t33, 0.2e1 * t23 * t15 + 0.2e1 * t18 * t26 + 0.2e1 * t2 * t52 - 0.2e1 * t3 * t46, 0.2e1 * t1 * t52 - 0.2e1 * t23 * t13 + 0.2e1 * t18 * t28 + 0.2e1 * t4 * t46, 0.2e1 * t1 * t26 + 0.2e1 * t3 * t13 - 0.2e1 * t4 * t15 - 0.2e1 * t2 * t28, -0.2e1 * t4 * t1 + 0.2e1 * t23 * t18 + 0.2e1 * t3 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t93, t79, 0, 0, 0, 0, 0, 0, t70 * t93, t72 * t93, 0, t102 * t46 + t104 * t52 - t101, 0, 0, 0, 0, 0, 0, t14 * t52 - t54 * t15 + t25 * t46 + t47 * t26, t12 * t52 + t54 * t13 + t27 * t46 + t47 * t28, t12 * t26 - t25 * t13 - t14 * t28 - t27 * t15, -t1 * t27 - t4 * t12 + t3 * t14 - t18 * t54 - t2 * t25 + t23 * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t99, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t52 * t113 - 0.2e1 * t37, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.2e1 * t27 * t12 - 0.2e1 * t25 * t14 - 0.2e1 * t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, 0, -t122, 0, -t76 * t123, -t76 * t122, 0, 0, 0, 0, -t47, 0, t46, 0, -t24, -t82, t151 (-t24 * t125 + t82 * t71) * pkin(3), -t119 (t68 - t69) * t47, -t134, t119, -t44, 0, -t24 * t72 + t92 * t70, t24 * t70 + t92 * t72, t104, -t102 * qJD(5) + t104 * t62 + t24 * t65, -t13 * t55 + t150 * t28, -t103 + t129, -t98, -t15 * t95 + t26 * t49, -t12, 0, t57 * t15 - t18 * t95 + t22 * t52 + t23 * t49 - t30 * t46, -t57 * t13 + t150 * t23 + t18 * t55 + t21 * t52 + t31 * t46, -t1 * t95 + t30 * t13 - t31 * t15 - t150 * t3 - t2 * t55 + t21 * t26 - t22 * t28 - t4 * t49, -t1 * t31 + t18 * t57 + t2 * t30 - t4 * t21 + t3 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t123, -t122, 0, 0, 0, 0, 0, 0, 0, 0, -t47, t46, 0, -t151, 0, 0, 0, 0, 0, 0, -t142, t143, -t113, t52 * t108 - t62 * t113 + t144, 0, 0, 0, 0, 0, 0, -t13, -t15, -t12 * t95 - t14 * t55 + t150 * t25 - t27 * t49, -t12 * t31 + t14 * t30 - t27 * t21 - t25 * t22 + t47 * t57; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t107, t62 * t107, 0.2e1 * t136, 0.2e1 * t150 * t95 - 0.2e1 * t55 * t49, 0, -0.2e1 * t139, 0, 0, t49 * t153, t150 * t153, -0.2e1 * t150 * t30 - 0.2e1 * t21 * t95 - 0.2e1 * t22 * t55 - 0.2e1 * t31 * t49, -0.2e1 * t31 * t21 + 0.2e1 * t30 * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t46, -t47, 0, t58, 0, 0, 0, 0, 0, 0, -t44, t134, t127 * t47, t105, 0, 0, 0, 0, 0, 0, -t12, t98, t103 + t129, -t1 * t55 + t150 * t4 + t2 * t95 - t3 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t12 * t55 + t14 * t95 + t150 * t27 + t25 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150 * t31 - t21 * t55 + t22 * t95 - t30 * t49; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t136 - 0.2e1 * t139; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t143, -t142, 0, t24, 0, 0, 0, 0, 0, 0, t15, -t13, 0, t18; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47, 0, 0, 0, 0, 0, 0, 0, 0, 0, t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t49, t150, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t13, 0, -t15, -t46, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14, t12, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t150, 0, -t49, 0, t22, t21, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t49, -t150, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
