% Calculate minimal parameter regressor of coriolis joint torque vector for
% S6RRRPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4,theta5]';
% 
% Output:
% tauc_reg [6x30]
%   minimal parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPPR5_coriolisvecJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR5_coriolisvecJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR5_coriolisvecJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPPR5_coriolisvecJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:44:13
% EndTime: 2019-03-09 15:44:38
% DurationCPUTime: 9.64s
% Computational Cost: add. (13797->530), mult. (37081->754), div. (0->0), fcn. (29666->12), ass. (0->247)
t279 = sin(pkin(6));
t288 = cos(qJ(2));
t342 = qJD(1) * t288;
t326 = t279 * t342;
t389 = qJD(3) - t326;
t284 = sin(qJ(3));
t285 = sin(qJ(2));
t287 = cos(qJ(3));
t344 = qJD(1) * t279;
t327 = t285 * t344;
t282 = cos(pkin(6));
t343 = qJD(1) * t282;
t333 = pkin(1) * t343;
t223 = -pkin(8) * t327 + t288 * t333;
t298 = (pkin(2) * t285 - pkin(9) * t288) * t279;
t224 = qJD(1) * t298;
t318 = -t284 * t223 + t287 * t224;
t376 = -qJ(4) - pkin(9);
t321 = qJD(3) * t376;
t351 = t287 * t288;
t388 = (pkin(3) * t285 - qJ(4) * t351) * t344 + t318 + t284 * qJD(4) - t287 * t321;
t315 = t284 * t326;
t347 = t287 * t223 + t284 * t224;
t387 = qJ(4) * t315 + t287 * qJD(4) + t284 * t321 - t347;
t278 = sin(pkin(11));
t281 = cos(pkin(11));
t240 = t278 * t284 - t281 * t287;
t190 = t240 * t326;
t232 = t240 * qJD(3);
t386 = -t190 + t232;
t242 = t278 * t287 + t281 * t284;
t346 = t389 * t242;
t368 = -t278 * t388 + t387 * t281;
t263 = t285 * t333;
t226 = pkin(8) * t326 + t263;
t339 = qJD(3) * t284;
t385 = -t226 + (-t315 + t339) * pkin(3);
t384 = -qJ(5) * t327 + t368;
t383 = t346 * pkin(4) + qJ(5) * t386 - qJD(5) * t242 + t385;
t266 = qJD(2) + t343;
t206 = t266 * t287 - t284 * t327;
t207 = t266 * t284 + t287 * t327;
t165 = -t281 * t206 + t207 * t278;
t162 = qJD(6) + t165;
t277 = sin(pkin(12));
t280 = cos(pkin(12));
t299 = t206 * t278 + t281 * t207;
t139 = t277 * t299 - t280 * t389;
t141 = t277 * t389 + t280 * t299;
t283 = sin(qJ(6));
t286 = cos(qJ(6));
t78 = t286 * t139 + t141 * t283;
t382 = t162 * t78;
t369 = t387 * t278 + t281 * t388;
t243 = t277 * t286 + t280 * t283;
t234 = t243 * qJD(6);
t366 = t243 * t165 + t234;
t300 = t139 * t283 - t141 * t286;
t381 = t162 * t300;
t171 = -t190 * t277 - t280 * t327;
t380 = -t232 * t277 - t171;
t373 = -t384 * t277 + t383 * t280;
t372 = t383 * t277 + t384 * t280;
t370 = pkin(4) * t327 + t369;
t353 = t279 * t288;
t220 = pkin(8) * t353 + (pkin(1) * t285 + pkin(9)) * t282;
t221 = (-pkin(2) * t288 - pkin(9) * t285 - pkin(1)) * t279;
t348 = t287 * t220 + t284 * t221;
t313 = qJD(3) * t327;
t334 = qJD(1) * qJD(2);
t322 = t279 * t334;
t314 = t288 * t322;
t338 = qJD(3) * t287;
t182 = t266 * t338 - t284 * t313 + t287 * t314;
t330 = t266 * t339 + t284 * t314 + t287 * t313;
t129 = t278 * t182 + t281 * t330;
t241 = t277 * t283 - t286 * t280;
t367 = t162 * t241;
t379 = -t243 * t129 + t162 * t367;
t130 = t281 * t182 - t278 * t330;
t312 = t285 * t322;
t108 = t130 * t277 - t280 * t312;
t109 = t130 * t280 + t277 * t312;
t29 = -qJD(6) * t300 + t286 * t108 + t283 * t109;
t378 = pkin(1) * t288;
t269 = pkin(3) * t278 + qJ(5);
t377 = pkin(10) + t269;
t195 = pkin(9) * t266 + t226;
t202 = qJD(1) * t221;
t156 = t195 * t287 + t202 * t284;
t225 = qJD(2) * t298;
t215 = qJD(1) * t225;
t354 = t279 * t285;
t267 = pkin(8) * t354;
t227 = (t282 * t378 - t267) * qJD(2);
t216 = qJD(1) * t227;
t291 = -qJD(3) * t156 + t287 * t215 - t284 * t216;
t61 = pkin(3) * t312 - t182 * qJ(4) - t207 * qJD(4) + t291;
t295 = -t195 * t339 + t202 * t338 + t284 * t215 + t287 * t216;
t68 = -qJ(4) * t330 + t206 * qJD(4) + t295;
t27 = t278 * t61 + t281 * t68;
t20 = qJ(5) * t312 + qJD(5) * t389 + t27;
t217 = pkin(8) * t314 + qJD(2) * t263;
t152 = pkin(3) * t330 + t217;
t45 = t129 * pkin(4) - t130 * qJ(5) - qJD(5) * t299 + t152;
t10 = t280 * t20 + t277 * t45;
t341 = qJD(2) * t285;
t235 = -t282 * t287 + t284 * t354;
t324 = qJD(2) * t353;
t187 = -qJD(3) * t235 + t287 * t324;
t236 = t282 * t284 + t287 * t354;
t290 = -t348 * qJD(3) + t287 * t225 - t284 * t227;
t325 = t279 * t341;
t76 = pkin(3) * t325 - t187 * qJ(4) - t236 * qJD(4) + t290;
t186 = qJD(3) * t236 + t284 * t324;
t294 = -t220 * t339 + t221 * t338 + t284 * t225 + t287 * t227;
t85 = -qJ(4) * t186 - qJD(4) * t235 + t294;
t38 = t278 * t76 + t281 * t85;
t32 = (qJ(5) * t341 - qJD(5) * t288) * t279 + t38;
t145 = t281 * t186 + t187 * t278;
t146 = -t186 * t278 + t187 * t281;
t178 = -t235 * t278 + t236 * t281;
t228 = t282 * pkin(1) * t341 + pkin(8) * t324;
t311 = pkin(3) * t186 + t228;
t52 = pkin(4) * t145 - qJ(5) * t146 - qJD(5) * t178 + t311;
t13 = t277 * t52 + t280 * t32;
t155 = -t195 * t284 + t287 * t202;
t125 = -qJ(4) * t207 + t155;
t112 = pkin(3) * t389 + t125;
t126 = qJ(4) * t206 + t156;
t352 = t281 * t126;
t60 = t278 * t112 + t352;
t57 = qJ(5) * t389 + t60;
t194 = -pkin(2) * t266 - t223;
t163 = -pkin(3) * t206 + qJD(4) + t194;
t71 = pkin(4) * t165 - qJ(5) * t299 + t163;
t25 = t277 * t71 + t280 * t57;
t121 = t278 * t126;
t67 = t125 * t281 - t121;
t91 = pkin(3) * t207 + pkin(4) * t299 + qJ(5) * t165;
t34 = t277 * t91 + t280 * t67;
t319 = -t220 * t284 + t287 * t221;
t134 = -pkin(3) * t353 - qJ(4) * t236 + t319;
t147 = -qJ(4) * t235 + t348;
t84 = t278 * t134 + t281 * t147;
t74 = -qJ(5) * t353 + t84;
t177 = t281 * t235 + t236 * t278;
t219 = t267 + (-pkin(2) - t378) * t282;
t292 = t235 * pkin(3) + t219;
t97 = t177 * pkin(4) - t178 * qJ(5) + t292;
t42 = t277 * t97 + t280 * t74;
t375 = t299 * t78;
t374 = t300 * t299;
t371 = pkin(5) * t380 + t370;
t365 = t165 * t277;
t364 = t165 * t280;
t363 = t206 * t389;
t362 = t207 * t389;
t360 = t242 * t277;
t359 = t242 * t280;
t357 = t389 * t284;
t356 = t389 * t287;
t274 = t279 ^ 2;
t355 = t274 * qJD(1) ^ 2;
t172 = -t190 * t280 + t277 * t327;
t350 = t171 * t283 - t172 * t286 + t232 * t241 - t242 * t234;
t336 = qJD(6) * t286;
t337 = qJD(6) * t283;
t349 = -t286 * t171 - t172 * t283 - t232 * t243 + t336 * t359 - t337 * t360;
t328 = -pkin(3) * t287 - pkin(2);
t183 = pkin(4) * t240 - qJ(5) * t242 + t328;
t259 = t376 * t284;
t260 = t376 * t287;
t193 = t259 * t278 - t260 * t281;
t136 = t277 * t183 + t280 * t193;
t345 = t285 ^ 2 - t288 ^ 2;
t340 = qJD(2) * t287;
t335 = qJD(2) - t266;
t331 = t285 * t355;
t273 = -pkin(3) * t281 - pkin(4);
t323 = t274 * t334;
t9 = -t20 * t277 + t280 * t45;
t12 = -t277 * t32 + t280 * t52;
t24 = -t277 * t57 + t280 * t71;
t33 = -t277 * t67 + t280 * t91;
t41 = -t277 * t74 + t280 * t97;
t26 = -t278 * t68 + t281 * t61;
t37 = -t278 * t85 + t281 * t76;
t59 = t112 * t281 - t121;
t66 = t125 * t278 + t352;
t83 = t134 * t281 - t278 * t147;
t135 = t280 * t183 - t193 * t277;
t192 = -t281 * t259 - t260 * t278;
t317 = t266 + t343;
t316 = 0.2e1 * t323;
t104 = pkin(5) * t240 - pkin(10) * t359 + t135;
t310 = pkin(10) * t380 - qJD(6) * t104 - t372;
t117 = -pkin(10) * t360 + t136;
t309 = qJD(6) * t117 - t373 + (-t280 * t232 - t172) * pkin(10) - t346 * pkin(5);
t308 = -t241 * t129 - t162 * t366;
t307 = -0.2e1 * pkin(1) * t323;
t6 = pkin(5) * t129 - pkin(10) * t109 + t9;
t7 = -pkin(10) * t108 + t10;
t306 = t283 * t6 + t286 * t7;
t75 = pkin(4) * t353 - t83;
t305 = -t10 * t277 - t9 * t280;
t14 = pkin(5) * t165 - pkin(10) * t141 + t24;
t16 = -pkin(10) * t139 + t25;
t3 = t14 * t286 - t16 * t283;
t4 = t14 * t283 + t16 * t286;
t161 = t178 * t280 - t277 * t353;
t21 = pkin(5) * t177 - pkin(10) * t161 + t41;
t160 = t178 * t277 + t280 * t353;
t30 = -pkin(10) * t160 + t42;
t304 = t21 * t286 - t283 * t30;
t303 = t21 * t283 + t286 * t30;
t22 = -pkin(4) * t312 - t26;
t56 = -pkin(4) * t389 + qJD(5) - t59;
t302 = t22 * t242 - t232 * t56;
t301 = t24 * t277 - t25 * t280;
t100 = t286 * t160 + t161 * t283;
t101 = -t160 * t283 + t161 * t286;
t238 = t377 * t280;
t297 = pkin(5) * t299 + pkin(10) * t364 + qJD(5) * t277 + qJD(6) * t238 + t33;
t237 = t377 * t277;
t296 = pkin(10) * t365 - qJD(5) * t280 + qJD(6) * t237 + t34;
t28 = -t283 * t108 + t286 * t109 - t139 * t336 - t141 * t337;
t293 = -t129 * t269 + (-qJD(5) + t56) * t165;
t35 = -pkin(4) * t325 - t37;
t2 = -qJD(6) * t4 - t283 * t7 + t286 * t6;
t252 = -pkin(5) * t280 + t273;
t176 = t241 * t242;
t175 = t243 * t242;
t170 = pkin(5) * t360 + t192;
t128 = t146 * t280 + t277 * t325;
t127 = t146 * t277 - t280 * t325;
t54 = pkin(5) * t160 + t75;
t53 = -pkin(5) * t365 + t66;
t47 = pkin(5) * t139 + t56;
t40 = qJD(6) * t101 + t286 * t127 + t283 * t128;
t39 = -qJD(6) * t100 - t283 * t127 + t286 * t128;
t18 = pkin(5) * t127 + t35;
t15 = pkin(5) * t108 + t22;
t11 = -pkin(10) * t127 + t13;
t8 = pkin(5) * t145 - pkin(10) * t128 + t12;
t1 = qJD(6) * t3 + t306;
t5 = [0, 0, 0, t285 * t288 * t316, -t345 * t316, t317 * t324, -t317 * t325, 0, -t217 * t282 - t228 * t266 + t285 * t307, -t216 * t282 - t227 * t266 + t288 * t307, t182 * t236 + t187 * t207, -t182 * t235 - t207 * t186 + t187 * t206 - t236 * t330, t187 * t389 + (-t182 * t288 + (qJD(1) * t236 + t207) * t341) * t279, -t186 * t389 + (t330 * t288 + (-qJD(1) * t235 + t206) * t341) * t279 (-t274 * t342 + t279 * t389) * t341, t290 * t389 - t228 * t206 + t219 * t330 + t217 * t235 + t194 * t186 + (-t291 * t288 + (qJD(1) * t319 + t155) * t341) * t279, -t294 * t389 + t228 * t207 + t219 * t182 + t217 * t236 + t194 * t187 + (t295 * t288 + (-qJD(1) * t348 - t156) * t341) * t279, -t129 * t84 - t130 * t83 - t145 * t60 - t146 * t59 - t165 * t38 - t177 * t27 - t178 * t26 - t299 * t37, t152 * t292 + t163 * t311 + t26 * t83 + t27 * t84 + t59 * t37 + t60 * t38, t108 * t75 + t12 * t165 + t127 * t56 + t129 * t41 + t139 * t35 + t145 * t24 + t160 * t22 + t177 * t9, -t10 * t177 + t109 * t75 + t128 * t56 - t129 * t42 - t13 * t165 + t141 * t35 - t145 * t25 + t161 * t22, -t10 * t160 - t108 * t42 - t109 * t41 - t12 * t141 - t127 * t25 - t128 * t24 - t13 * t139 - t161 * t9, t10 * t42 + t12 * t24 + t13 * t25 + t22 * t75 + t35 * t56 + t41 * t9, t101 * t28 - t300 * t39, -t100 * t28 - t101 * t29 + t300 * t40 - t39 * t78, t101 * t129 - t145 * t300 + t162 * t39 + t177 * t28, -t100 * t129 - t145 * t78 - t162 * t40 - t177 * t29, t129 * t177 + t145 * t162 (-qJD(6) * t303 - t283 * t11 + t286 * t8) * t162 + t304 * t129 + t2 * t177 + t3 * t145 + t18 * t78 + t54 * t29 + t15 * t100 + t47 * t40 -(qJD(6) * t304 + t286 * t11 + t283 * t8) * t162 - t303 * t129 - t1 * t177 - t4 * t145 - t18 * t300 + t54 * t28 + t15 * t101 + t47 * t39; 0, 0, 0, -t288 * t331, t345 * t355, t335 * t326, -t335 * t327, 0, pkin(1) * t331 + t226 * t266 - t217, pkin(8) * t312 + t223 * t266 + (-t282 * t334 + t355) * t378, t182 * t284 + t207 * t356 (t182 + t363) * t287 + (-t330 - t362) * t284, t389 * t338 + (-t389 * t351 + (qJD(2) * t284 - t207) * t285) * t344, -t389 * t339 + (t288 * t357 + (-t206 + t340) * t285) * t344, -t389 * t327, -pkin(2) * t330 - t217 * t287 - t318 * t389 + t226 * t206 + (-pkin(9) * t356 + t194 * t284) * qJD(3) + (-t155 * t285 + (-pkin(9) * t341 - t194 * t288) * t284) * t344, -pkin(2) * t182 + t217 * t284 + t347 * t389 - t226 * t207 + (pkin(9) * t357 + t194 * t287) * qJD(3) + (-t194 * t351 + (-pkin(9) * t340 + t156) * t285) * t344, -t193 * t129 + t192 * t130 - t368 * t165 - t27 * t240 - t26 * t242 + t369 * t299 - t346 * t60 + t386 * t59, t152 * t328 + t163 * t385 - t26 * t192 + t27 * t193 + t368 * t60 - t369 * t59, t192 * t108 + t135 * t129 + t139 * t370 + t373 * t165 - t56 * t171 + t24 * t346 + t9 * t240 + t277 * t302, -t10 * t240 + t192 * t109 - t136 * t129 + t141 * t370 - t372 * t165 - t56 * t172 - t25 * t346 + t280 * t302, -t136 * t108 - t135 * t109 + t25 * t171 + t24 * t172 + t305 * t242 - (-t24 * t280 - t25 * t277) * t232 - t373 * t141 - t372 * t139, t10 * t136 + t9 * t135 + t22 * t192 + t24 * t373 + t25 * t372 + t370 * t56, -t28 * t176 - t300 * t350, -t28 * t175 + t176 * t29 + t300 * t349 - t350 * t78, -t176 * t129 + t162 * t350 + t28 * t240 - t300 * t346, -t175 * t129 - t162 * t349 - t29 * t240 - t346 * t78, t129 * t240 + t162 * t346 (t104 * t286 - t117 * t283) * t129 + t2 * t240 + t170 * t29 + t15 * t175 + t371 * t78 + t349 * t47 + t346 * t3 + (t283 * t310 - t286 * t309) * t162 -(t104 * t283 + t117 * t286) * t129 - t1 * t240 + t170 * t28 - t15 * t176 - t371 * t300 + t350 * t47 - t346 * t4 + (t283 * t309 + t286 * t310) * t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t207 * t206, -t206 ^ 2 + t207 ^ 2, t182 - t363, -t330 + t362, t312, t156 * t389 - t194 * t207 + t291, t155 * t389 - t194 * t206 - t295 (-t129 * t278 - t130 * t281) * pkin(3) + (t60 - t66) * t299 + (t67 - t59) * t165, t59 * t66 - t60 * t67 + (-t163 * t207 + t26 * t281 + t27 * t278) * pkin(3), t273 * t108 - t66 * t139 - t33 * t165 - t22 * t280 - t24 * t299 + t277 * t293, t273 * t109 - t66 * t141 + t34 * t165 + t22 * t277 + t25 * t299 + t280 * t293, t34 * t139 + t33 * t141 + (-qJD(5) * t139 - t108 * t269 - t165 * t24 + t10) * t280 + (qJD(5) * t141 + t109 * t269 - t165 * t25 - t9) * t277, t22 * t273 - t24 * t33 - t25 * t34 - t56 * t66 + (t10 * t280 - t9 * t277) * t269 - t301 * qJD(5), t28 * t243 + t300 * t367, -t28 * t241 - t243 * t29 + t300 * t366 + t367 * t78, t374 - t379, t308 + t375, -t162 * t299 (-t237 * t286 - t238 * t283) * t129 + t252 * t29 + t15 * t241 - t3 * t299 - t53 * t78 + t366 * t47 + (t283 * t296 - t286 * t297) * t162 -(-t237 * t283 + t238 * t286) * t129 + t252 * t28 + t15 * t243 + t4 * t299 + t53 * t300 - t367 * t47 + (t283 * t297 + t286 * t296) * t162; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t165 ^ 2 - t299 ^ 2, t165 * t60 + t299 * t59 + t152, t129 * t280 - t139 * t299 - t165 * t365, -t129 * t277 - t141 * t299 - t165 * t364, -t277 * t108 - t280 * t109 - (t139 * t280 - t141 * t277) * t165, -t165 * t301 - t299 * t56 - t305, 0, 0, 0, 0, 0, t308 - t375, t374 + t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t141 * t165 + t108, -t139 * t165 + t109, -t139 ^ 2 - t141 ^ 2, t139 * t25 + t141 * t24 + t22, 0, 0, 0, 0, 0, t29 - t381, t28 - t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t300 * t78, t300 ^ 2 - t78 ^ 2, t28 + t382, -t29 - t381, t129, t4 * t162 + t300 * t47 + t2, t47 * t78 - t306 + (-qJD(6) + t162) * t3;];
tauc_reg  = t5;
