% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRPPR5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPPR5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:44:14
% EndTime: 2019-03-09 15:44:52
% DurationCPUTime: 19.23s
% Computational Cost: add. (26929->709), mult. (71341->978), div. (0->0), fcn. (57472->12), ass. (0->297)
t316 = sin(pkin(6));
t323 = cos(qJ(2));
t386 = qJD(1) * t323;
t373 = t316 * t386;
t469 = qJD(3) - t373;
t321 = sin(qJ(2));
t388 = qJD(1) * t316;
t374 = t321 * t388;
t318 = cos(pkin(6));
t447 = pkin(1) * t323;
t377 = t318 * t447;
t266 = -pkin(8) * t374 + qJD(1) * t377;
t337 = t316 * (pkin(2) * t321 - pkin(9) * t323);
t267 = qJD(1) * t337;
t320 = sin(qJ(3));
t322 = cos(qJ(3));
t205 = -t266 * t320 + t267 * t322;
t444 = -qJ(4) - pkin(9);
t364 = qJD(3) * t444;
t401 = t322 * t323;
t468 = (pkin(3) * t321 - qJ(4) * t401) * t388 + t205 + qJD(4) * t320 - t322 * t364;
t206 = t266 * t322 + t267 * t320;
t354 = t320 * t373;
t467 = -qJ(4) * t354 - qJD(4) * t322 - t320 * t364 + t206;
t315 = sin(pkin(11));
t405 = t315 * t320;
t432 = cos(pkin(11));
t332 = t322 * t432 - t405;
t232 = t332 * t373;
t274 = t332 * qJD(3);
t392 = t232 - t274;
t362 = t432 * t320;
t285 = t315 * t322 + t362;
t391 = t469 * t285;
t314 = sin(pkin(12));
t317 = cos(pkin(12));
t387 = qJD(1) * t318;
t300 = qJD(2) + t387;
t352 = t320 * t374;
t249 = t300 * t322 - t352;
t250 = t300 * t320 + t322 * t374;
t333 = t249 * t315 + t250 * t432;
t168 = t314 * t469 + t317 * t333;
t319 = sin(qJ(6));
t189 = t314 * t333;
t359 = -t317 * t469 + t189;
t448 = cos(qJ(6));
t335 = t448 * t359;
t94 = t168 * t319 + t335;
t466 = t94 ^ 2;
t196 = -t249 * t432 + t250 * t315;
t193 = qJD(6) + t196;
t465 = t193 * t94;
t399 = t315 * t468 + t432 * t467;
t403 = t316 * t323;
t390 = pkin(1) * t318 * t321 + pkin(8) * t403;
t269 = t390 * qJD(1);
t382 = qJD(3) * t320;
t348 = -t269 + (-t354 + t382) * pkin(3);
t93 = -t168 * t448 + t319 * t359;
t464 = t93 ^ 2;
t463 = qJ(5) * t374 + t399;
t462 = pkin(4) * t391 + qJ(5) * t392 - qJD(5) * t285 + t348;
t207 = t232 * t314 - t317 * t374;
t358 = -t274 * t314 + t207;
t208 = t232 * t317 + t314 * t374;
t357 = t274 * t317 - t208;
t435 = t314 * t463 + t317 * t462;
t434 = t314 * t462 - t317 * t463;
t461 = -pkin(5) * t391 + pkin(10) * t357 - t435;
t460 = pkin(10) * t358 + t434;
t421 = t196 * t333;
t400 = -t315 * t467 + t432 * t468;
t286 = t314 * t448 + t317 * t319;
t276 = t286 * qJD(6);
t398 = -t196 * t286 - t276;
t334 = -t314 * t319 + t317 * t448;
t367 = qJD(6) * t448;
t379 = qJD(6) * t319;
t451 = -t314 * t379 + t317 * t367;
t397 = -t196 * t334 - t451;
t311 = t316 ^ 2;
t378 = qJD(1) * qJD(2);
t457 = -0.2e1 * t311 * t378;
t456 = t333 * t359;
t365 = t323 * t378;
t349 = t316 * t365;
t381 = qJD(3) * t322;
t221 = qJD(3) * t352 - t300 * t381 - t322 * t349;
t383 = qJD(2) * t323;
t370 = t320 * t383;
t222 = (t321 * t381 + t370) * t388 + t300 * t382;
t157 = -t221 * t315 + t222 * t432;
t404 = t316 * t321;
t277 = -t318 * t322 + t320 * t404;
t278 = t318 * t320 + t322 * t404;
t213 = t277 * t432 + t278 * t315;
t114 = t157 * t213;
t227 = qJD(3) * t278 + t316 * t370;
t371 = t316 * t383;
t228 = -qJD(3) * t277 + t322 * t371;
t172 = t227 * t432 + t228 * t315;
t455 = t172 * t196 + t114;
t237 = pkin(9) * t300 + t269;
t264 = (-pkin(2) * t323 - pkin(9) * t321 - pkin(1)) * t316;
t244 = qJD(1) * t264;
t268 = qJD(2) * t337;
t258 = qJD(1) * t268;
t301 = pkin(8) * t404;
t281 = -t301 + t377;
t270 = t281 * qJD(2);
t259 = qJD(1) * t270;
t120 = -t237 * t382 + t244 * t381 + t258 * t320 + t259 * t322;
t183 = -t237 * t320 + t244 * t322;
t454 = -t183 * t469 + t120;
t184 = t237 * t322 + t244 * t320;
t121 = -qJD(3) * t184 + t258 * t322 - t259 * t320;
t453 = -t184 * t469 - t121;
t132 = t157 * t332;
t452 = t196 * t391 - t132;
t393 = pkin(4) * t374 + t400;
t263 = pkin(9) * t318 + t390;
t201 = t263 * t322 + t264 * t320;
t158 = -t221 * t432 - t222 * t315;
t385 = qJD(2) * t321;
t372 = t316 * t385;
t297 = qJD(1) * t372;
t130 = t158 * t317 + t297 * t314;
t151 = t314 * t158;
t330 = t297 * t317 - t151;
t39 = qJD(6) * t335 - t130 * t448 + t168 * t379 - t319 * t330;
t450 = t334 * t39 + t398 * t93;
t449 = t157 * t286 - t193 * t397;
t75 = pkin(3) * t297 + qJ(4) * t221 - qJD(4) * t250 + t121;
t82 = -qJ(4) * t222 + qJD(4) * t249 + t120;
t38 = t315 * t75 + t432 * t82;
t380 = qJD(5) * t469;
t30 = qJ(5) * t297 + t38 + t380;
t271 = t390 * qJD(2);
t260 = qJD(1) * t271;
t179 = pkin(3) * t222 + t260;
t56 = pkin(4) * t157 - qJ(5) * t158 - qJD(5) * t333 + t179;
t16 = t30 * t317 + t314 * t56;
t11 = pkin(10) * t330 + t16;
t153 = -qJ(4) * t250 + t183;
t134 = pkin(3) * t469 + t153;
t154 = qJ(4) * t249 + t184;
t363 = t432 * t154;
t74 = t134 * t315 + t363;
t70 = qJ(5) * t469 + t74;
t236 = -pkin(2) * t300 - t266;
t194 = -pkin(3) * t249 + qJD(4) + t236;
t86 = pkin(4) * t196 - qJ(5) * t333 + t194;
t35 = -t314 * t70 + t317 * t86;
t24 = pkin(5) * t196 - pkin(10) * t168 + t35;
t36 = t314 * t86 + t317 * t70;
t26 = -pkin(10) * t359 + t36;
t338 = -t24 * t448 + t26 * t319;
t15 = -t30 * t314 + t317 * t56;
t8 = pkin(5) * t157 - pkin(10) * t130 + t15;
t1 = -qJD(6) * t338 + t11 * t448 + t319 * t8;
t446 = t93 * t94;
t305 = pkin(3) * t315 + qJ(5);
t445 = pkin(10) + t305;
t310 = -pkin(3) * t322 - pkin(2);
t223 = -pkin(4) * t332 - qJ(5) * t285 + t310;
t296 = t444 * t322;
t235 = -t296 * t432 + t405 * t444;
t163 = t223 * t317 - t235 * t314;
t410 = t285 * t317;
t125 = -pkin(5) * t332 - pkin(10) * t410 + t163;
t164 = t223 * t314 + t235 * t317;
t411 = t285 * t314;
t141 = -pkin(10) * t411 + t164;
t67 = t125 * t319 + t141 * t448;
t443 = t67 * qJD(6) + t319 * t460 + t448 * t461;
t279 = t445 * t314;
t280 = t445 * t317;
t219 = -t279 * t319 + t280 * t448;
t417 = t196 * t317;
t108 = pkin(3) * t250 + pkin(4) * t333 + qJ(5) * t196;
t145 = t315 * t154;
t81 = t153 * t432 - t145;
t44 = t108 * t317 - t314 * t81;
t27 = pkin(5) * t333 + pkin(10) * t417 + t44;
t418 = t196 * t314;
t45 = t108 * t314 + t317 * t81;
t33 = pkin(10) * t418 + t45;
t442 = -qJD(5) * t286 - qJD(6) * t219 - t27 * t448 + t319 * t33;
t66 = t125 * t448 - t141 * t319;
t441 = -t66 * qJD(6) + t319 * t461 - t448 * t460;
t137 = -t263 * t382 + t264 * t381 + t268 * t320 + t270 * t322;
t102 = -qJ(4) * t227 - qJD(4) * t277 + t137;
t138 = -qJD(3) * t201 + t268 * t322 - t270 * t320;
t91 = pkin(3) * t372 - qJ(4) * t228 - qJD(4) * t278 + t138;
t49 = t102 * t432 + t315 * t91;
t43 = (qJ(5) * t385 - qJD(5) * t323) * t316 + t49;
t173 = -t227 * t315 + t228 * t432;
t199 = pkin(3) * t227 + t271;
t214 = -t277 * t315 + t278 * t432;
t63 = pkin(4) * t172 - qJ(5) * t173 - qJD(5) * t214 + t199;
t21 = t314 * t63 + t317 * t43;
t440 = t315 * t82 - t432 * t75;
t439 = t333 * t94;
t438 = t333 * t93;
t218 = -t279 * t448 - t280 * t319;
t436 = -qJD(5) * t334 - qJD(6) * t218 + t27 * t319 + t33 * t448;
t433 = -pkin(5) * t358 + t393;
t262 = t301 + (-pkin(2) - t447) * t318;
t220 = pkin(3) * t277 + t262;
t115 = pkin(4) * t213 - qJ(5) * t214 + t220;
t200 = -t263 * t320 + t264 * t322;
t162 = -pkin(3) * t403 - qJ(4) * t278 + t200;
t174 = -qJ(4) * t277 + t201;
t101 = t162 * t315 + t174 * t432;
t89 = -qJ(5) * t403 + t101;
t53 = t115 * t314 + t317 * t89;
t431 = t130 * t314;
t430 = t130 * t317;
t428 = t168 * t333;
t427 = t168 * t314;
t423 = t333 ^ 2;
t422 = t333 * t469;
t420 = t196 ^ 2;
t419 = t196 * t469;
t416 = t249 * t469;
t415 = t250 * t249;
t414 = t250 * t469;
t408 = t469 * t320;
t407 = t469 * t322;
t406 = t311 * qJD(1) ^ 2;
t152 = t317 * t157;
t396 = -t196 * t418 + t152;
t395 = t207 * t448 + t208 * t319 - t274 * t286 - t285 * t451;
t394 = -t207 * t319 + t208 * t448 - t274 * t334 + t276 * t285;
t389 = t321 ^ 2 - t323 ^ 2;
t384 = qJD(2) * t322;
t20 = -t314 * t43 + t317 * t63;
t52 = t115 * t317 - t314 * t89;
t360 = t319 * t130 - t330 * t448;
t80 = t153 * t315 + t363;
t234 = -t296 * t315 - t362 * t444;
t356 = t300 + t387;
t355 = t321 * t323 * t406;
t353 = t469 * t374;
t40 = -qJD(6) * t93 + t360;
t351 = -t286 * t40 + t397 * t94;
t309 = -pkin(3) * t432 - pkin(4);
t347 = pkin(1) * t457;
t346 = t157 * t334 + t193 * t398;
t48 = -t102 * t315 + t432 * t91;
t345 = -t15 * t317 - t16 * t314;
t32 = -pkin(4) * t297 + t440;
t73 = t134 * t432 - t145;
t69 = -pkin(4) * t469 + qJD(5) - t73;
t344 = t274 * t69 + t285 * t32;
t343 = t314 * t35 - t317 * t36;
t100 = t162 * t432 - t174 * t315;
t342 = t317 * t359;
t341 = t359 * t274;
t340 = t311 * t321 * t365;
t192 = t214 * t317 - t314 * t403;
t31 = pkin(5) * t213 - pkin(10) * t192 + t52;
t191 = t214 * t314 + t317 * t403;
t41 = -pkin(10) * t191 + t53;
t12 = t31 * t448 - t319 * t41;
t6 = t24 * t319 + t26 * t448;
t13 = t31 * t319 + t41 * t448;
t90 = pkin(4) * t403 - t100;
t336 = t157 * t314 + t196 * t417;
t119 = -t191 * t319 + t192 * t448;
t328 = pkin(1) * (-t318 * t378 + t406);
t326 = -t157 * t305 + (-qJD(5) + t69) * t196;
t325 = t330 * t317;
t46 = -pkin(4) * t372 - t48;
t2 = -qJD(6) * t6 - t11 * t319 + t448 * t8;
t25 = -pkin(5) * t330 + t32;
t291 = -pkin(5) * t317 + t309;
t226 = (-t311 * t386 + t316 * t469) * t385;
t212 = t334 * t285;
t211 = t286 * t285;
t204 = pkin(5) * t411 + t234;
t156 = t173 * t317 + t314 * t372;
t155 = t173 * t314 - t317 * t372;
t126 = t314 * t330;
t118 = t191 * t448 + t192 * t319;
t65 = pkin(5) * t191 + t90;
t64 = -pkin(5) * t418 + t80;
t58 = pkin(5) * t359 + t69;
t51 = qJD(6) * t119 + t155 * t448 + t319 * t156;
t50 = t155 * t319 - t156 * t448 + t191 * t367 + t192 * t379;
t28 = pkin(5) * t155 + t46;
t17 = -pkin(10) * t155 + t21;
t14 = pkin(5) * t172 - pkin(10) * t156 + t20;
t4 = -qJD(6) * t13 + t14 * t448 - t17 * t319;
t3 = qJD(6) * t12 + t14 * t319 + t17 * t448;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t340, t389 * t457, t356 * t371, -0.2e1 * t340, -t356 * t372, 0, -t260 * t318 - t271 * t300 + t321 * t347, -t259 * t318 - t270 * t300 + t323 * t347 (t259 * t323 + t260 * t321 + (-t266 * t323 - t269 * t321) * qJD(2) + (t270 * t323 + t271 * t321 + (-t281 * t323 - t321 * t390) * qJD(2)) * qJD(1)) * t316, t259 * t390 - t260 * t281 - t266 * t271 + t269 * t270, -t221 * t278 + t228 * t250, t221 * t277 - t222 * t278 - t227 * t250 + t228 * t249, t228 * t469 + (t221 * t323 + (qJD(1) * t278 + t250) * t385) * t316, t222 * t277 - t227 * t249, -t227 * t469 + (t222 * t323 + (-qJD(1) * t277 + t249) * t385) * t316, t226, t138 * t469 + t222 * t262 + t227 * t236 - t249 * t271 + t260 * t277 + (-t121 * t323 + (qJD(1) * t200 + t183) * t385) * t316, -t137 * t469 - t221 * t262 + t228 * t236 + t250 * t271 + t260 * t278 + (t120 * t323 + (-qJD(1) * t201 - t184) * t385) * t316, -t120 * t277 - t121 * t278 + t137 * t249 - t138 * t250 - t183 * t228 - t184 * t227 + t200 * t221 - t201 * t222, t120 * t201 + t121 * t200 + t137 * t184 + t138 * t183 + t236 * t271 + t260 * t262, t158 * t214 + t173 * t333, -t157 * t214 - t158 * t213 - t172 * t333 - t173 * t196, t173 * t469 + (-t158 * t323 + (qJD(1) * t214 + t333) * t385) * t316, t455, -t172 * t469 + (t157 * t323 + (-qJD(1) * t213 - t196) * t385) * t316, t226, t157 * t220 + t172 * t194 + t179 * t213 + t196 * t199 + t469 * t48 + (t323 * t440 + (qJD(1) * t100 + t73) * t385) * t316, t158 * t220 + t173 * t194 + t179 * t214 + t333 * t199 - t469 * t49 + (t323 * t38 + (-qJD(1) * t101 - t74) * t385) * t316, -t100 * t158 - t101 * t157 - t172 * t74 - t173 * t73 - t196 * t49 - t213 * t38 + t214 * t440 - t333 * t48, -t100 * t440 + t101 * t38 + t179 * t220 + t194 * t199 + t48 * t73 + t49 * t74, t130 * t192 + t156 * t168, -t130 * t191 - t155 * t168 - t156 * t359 + t192 * t330, t130 * t213 + t156 * t196 + t157 * t192 + t168 * t172, t155 * t359 - t191 * t330, -t155 * t196 - t191 * t157 - t172 * t359 + t213 * t330, t455, t15 * t213 + t69 * t155 + t52 * t157 + t35 * t172 + t32 * t191 + t20 * t196 - t330 * t90 + t359 * t46, t130 * t90 + t156 * t69 - t157 * t53 - t16 * t213 + t168 * t46 - t172 * t36 + t192 * t32 - t196 * t21, -t52 * t130 - t15 * t192 - t36 * t155 - t35 * t156 - t16 * t191 - t20 * t168 - t21 * t359 + t330 * t53, t15 * t52 + t16 * t53 + t20 * t35 + t21 * t36 + t32 * t90 + t46 * t69, -t119 * t39 + t50 * t93, t118 * t39 - t119 * t40 + t50 * t94 + t51 * t93, t119 * t157 - t172 * t93 - t193 * t50 - t213 * t39, t118 * t40 + t51 * t94, -t118 * t157 - t172 * t94 - t193 * t51 - t213 * t40, t172 * t193 + t114, t118 * t25 + t12 * t157 - t172 * t338 + t193 * t4 + t2 * t213 + t28 * t94 + t40 * t65 + t51 * t58, -t1 * t213 + t119 * t25 - t13 * t157 - t172 * t6 - t193 * t3 - t28 * t93 - t39 * t65 - t50 * t58, -t1 * t118 - t119 * t2 + t12 * t39 - t13 * t40 - t3 * t94 - t338 * t50 + t4 * t93 - t51 * t6, t1 * t13 + t12 * t2 + t25 * t65 + t28 * t58 + t3 * t6 - t338 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t355, t389 * t406 (qJD(2) - t300) * t373, t355, t300 * t374 - t297, 0, -pkin(8) * t349 + t269 * t300 + t321 * t328, pkin(8) * t297 + t266 * t300 + t323 * t328, 0, 0, -t221 * t320 + t250 * t407 (-t221 + t416) * t322 + (-t222 - t414) * t320, t469 * t381 + (-t469 * t401 + (qJD(2) * t320 - t250) * t321) * t388, -t222 * t322 - t249 * t408, -t469 * t382 + (t323 * t408 + (-t249 + t384) * t321) * t388, -t353, -pkin(2) * t222 - t205 * t469 + t249 * t269 - t260 * t322 + (-pkin(9) * t407 + t236 * t320) * qJD(3) + (-t183 * t321 + (-pkin(9) * t385 - t236 * t323) * t320) * t388, pkin(2) * t221 + t206 * t469 - t250 * t269 + t260 * t320 + (pkin(9) * t408 + t236 * t322) * qJD(3) + (-t236 * t401 + (-pkin(9) * t384 + t184) * t321) * t388, t205 * t250 - t206 * t249 + ((qJD(3) * t250 - t222) * pkin(9) + t454) * t322 + ((-qJD(3) * t249 - t221) * pkin(9) + t453) * t320, -pkin(2) * t260 - t183 * t205 - t184 * t206 - t236 * t269 + (t120 * t322 - t121 * t320 + (-t183 * t322 - t184 * t320) * qJD(3)) * pkin(9), t158 * t285 - t333 * t392, -t285 * t157 + t158 * t332 + t196 * t392 - t333 * t391, -t392 * t469 + (qJD(2) * t285 - t333) * t374, t452, -t391 * t469 + (qJD(2) * t332 + t196) * t374, -t353, t157 * t310 - t179 * t332 - t400 * t469 + t348 * t196 + t391 * t194 + (-qJD(2) * t234 - t73) * t374, t158 * t310 + t179 * t285 + t399 * t469 + t348 * t333 - t392 * t194 + (-qJD(2) * t235 + t74) * t374, -t157 * t235 + t158 * t234 + t196 * t399 + t285 * t440 + t332 * t38 + t333 * t400 - t391 * t74 + t392 * t73, t179 * t310 + t194 * t348 + t234 * t440 + t235 * t38 - t399 * t74 - t400 * t73, t130 * t410 + t168 * t357, -t317 * t341 + t208 * t359 + (t325 - t431) * t285 + t358 * t168, -t130 * t332 + t152 * t285 + t168 * t391 + t196 * t357, -t359 * t207 + (-t285 * t330 + t341) * t314, -t157 * t411 + t196 * t358 - t330 * t332 - t359 * t391, t452, -t15 * t332 + t163 * t157 + t196 * t435 - t69 * t207 - t234 * t330 + t314 * t344 + t35 * t391 + t359 * t393, t130 * t234 - t157 * t164 + t16 * t332 + t168 * t393 - t196 * t434 - t208 * t69 + t317 * t344 - t36 * t391, t164 * t330 - t163 * t130 + t36 * t207 + t35 * t208 + t345 * t285 + (-t314 * t36 - t317 * t35) * t274 - t435 * t168 - t434 * t359, t15 * t163 + t16 * t164 + t234 * t32 + t35 * t435 + t36 * t434 + t393 * t69, -t212 * t39 + t394 * t93, t211 * t39 - t212 * t40 + t394 * t94 - t395 * t93, t157 * t212 - t193 * t394 + t332 * t39 - t391 * t93, t211 * t40 - t395 * t94, -t157 * t211 + t193 * t395 + t332 * t40 - t391 * t94, t193 * t391 - t132, t157 * t66 - t193 * t443 - t2 * t332 + t204 * t40 + t211 * t25 - t338 * t391 - t395 * t58 + t433 * t94, t1 * t332 - t157 * t67 + t193 * t441 - t204 * t39 + t212 * t25 - t391 * t6 - t394 * t58 - t433 * t93, -t1 * t211 - t2 * t212 - t338 * t394 + t39 * t66 + t395 * t6 - t40 * t67 + t441 * t94 - t443 * t93, t1 * t67 + t2 * t66 + t204 * t25 + t338 * t443 + t433 * t58 - t441 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t415, -t249 ^ 2 + t250 ^ 2, -t221 - t416, t415, -t222 + t414, t297, -t236 * t250 - t453, -t236 * t249 - t454, 0, 0, t421, -t420 + t423, t158 + t419, -t421, -t157 + t422, t297, -t194 * t333 + t80 * t469 + (-t196 * t250 + t297 * t432) * pkin(3) - t440, t194 * t196 + t469 * t81 + (-t250 * t333 - t297 * t315) * pkin(3) - t38 (-t157 * t315 - t158 * t432) * pkin(3) + (t74 - t80) * t333 + (t81 - t73) * t196, t73 * t80 - t74 * t81 + (-t194 * t250 + t315 * t38 - t432 * t440) * pkin(3), t168 * t417 + t431, t430 + t126 - (t342 + t427) * t196, t336 - t428, t359 * t418 + t325, t396 + t456, -t421, -t44 * t196 - t309 * t330 + t314 * t326 - t32 * t317 - t333 * t35 - t359 * t80, t130 * t309 - t168 * t80 + t196 * t45 + t314 * t32 + t317 * t326 + t333 * t36, t44 * t168 + t45 * t189 + (-qJD(5) * t189 - t305 * t151 - t35 * t196 - t45 * t469 + t16 + (t297 * t305 + t380) * t317) * t317 + (qJD(5) * t168 + t130 * t305 - t196 * t36 - t15) * t314, t309 * t32 - t35 * t44 - t36 * t45 - t69 * t80 + (-t15 * t314 + t16 * t317) * t305 - t343 * qJD(5), -t286 * t39 + t397 * t93, t351 - t450, t438 + t449, -t334 * t40 - t398 * t94, t346 + t439, -t193 * t333, t157 * t218 + t193 * t442 - t25 * t334 + t291 * t40 + t333 * t338 - t398 * t58 - t64 * t94, -t157 * t219 + t193 * t436 + t25 * t286 - t291 * t39 + t333 * t6 - t397 * t58 + t64 * t93, t1 * t334 - t2 * t286 + t218 * t39 - t219 * t40 - t338 * t397 + t398 * t6 + t436 * t94 + t442 * t93, t1 * t219 + t2 * t218 + t25 * t291 - t338 * t442 - t436 * t6 - t58 * t64; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t157 + t422, t158 - t419, -t420 - t423, t196 * t74 + t333 * t73 + t179, 0, 0, 0, 0, 0, 0, t396 - t456, -t336 - t428, -t430 + t126 - (t342 - t427) * t196, -t196 * t343 - t333 * t69 - t345, 0, 0, 0, 0, 0, 0, t346 - t439, t438 - t449, t351 + t450, t1 * t286 + t2 * t334 - t333 * t58 - t338 * t398 - t397 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t168 * t196 - t330, -t196 * t359 + t130, -t168 ^ 2 - t359 ^ 2, t168 * t35 + t359 * t36 + t32, 0, 0, 0, 0, 0, 0, -t93 * t193 + t40, -t39 - t465, -t464 - t466, t338 * t93 + t6 * t94 + t25; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t446, t464 - t466, -t39 + t465, t446, -t360 - (-qJD(6) + t193) * t93, t157, t6 * t193 + t58 * t93 + t2, -t193 * t338 + t58 * t94 - t1, 0, 0;];
tauc_reg  = t5;
