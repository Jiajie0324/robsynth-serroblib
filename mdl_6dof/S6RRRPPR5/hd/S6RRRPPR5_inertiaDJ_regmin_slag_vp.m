% Calculate minimal parameter regressor of joint inertia matrix time derivative for
% S6RRRPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x30]
%   minimal parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 15:46
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRRPPR5_inertiaDJ_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR5_inertiaDJ_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR5_inertiaDJ_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPPR5_inertiaDJ_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 15:44:13
% EndTime: 2019-03-09 15:44:23
% DurationCPUTime: 3.18s
% Computational Cost: add. (6908->338), mult. (18577->639), div. (0->0), fcn. (18261->12), ass. (0->167)
t155 = cos(pkin(6));
t153 = sin(pkin(6));
t160 = cos(qJ(2));
t209 = t153 * t160;
t196 = pkin(8) * t209;
t158 = sin(qJ(2));
t221 = pkin(1) * t158;
t110 = t196 + (pkin(9) + t221) * t155;
t111 = (-pkin(2) * t160 - pkin(9) * t158 - pkin(1)) * t153;
t157 = sin(qJ(3));
t159 = cos(qJ(3));
t206 = t159 * t110 + t157 * t111;
t151 = sin(pkin(12));
t154 = cos(pkin(12));
t222 = cos(qJ(6));
t187 = qJD(6) * t222;
t156 = sin(qJ(6));
t199 = qJD(6) * t156;
t224 = -t151 * t199 + t154 * t187;
t127 = t222 * t151 + t156 * t154;
t120 = t127 * qJD(6);
t223 = 0.2e1 * t224;
t220 = pkin(9) * t153;
t219 = t160 * pkin(1);
t216 = -qJ(4) - pkin(9);
t186 = qJD(3) * t216;
t116 = t159 * qJD(4) + t157 * t186;
t152 = sin(pkin(11));
t163 = -t157 * qJD(4) + t159 * t186;
t215 = cos(pkin(11));
t82 = t152 * t116 - t215 * t163;
t133 = t216 * t159;
t185 = t215 * t157;
t97 = -t152 * t133 - t216 * t185;
t218 = t97 * t82;
t142 = t152 * pkin(3) + qJ(5);
t217 = pkin(10) + t142;
t210 = t153 * t158;
t194 = t159 * t210;
t121 = t155 * t157 + t194;
t204 = qJD(2) * t158;
t189 = t153 * t204;
t113 = (pkin(2) * t158 - pkin(9) * t160) * t153 * qJD(2);
t203 = qJD(2) * t160;
t114 = -t155 * pkin(1) * t203 + pkin(8) * t189;
t53 = -t206 * qJD(3) + t159 * t113 + t157 * t114;
t195 = t157 * t210;
t207 = t155 * t159;
t168 = -t195 + t207;
t188 = t153 * t203;
t96 = t168 * qJD(3) + t159 * t188;
t34 = pkin(3) * t189 - t96 * qJ(4) - t121 * qJD(4) + t53;
t202 = qJD(3) * t157;
t193 = qJD(3) * t194 + t155 * t202 + t157 * t188;
t201 = qJD(3) * t159;
t52 = t110 * t202 - t111 * t201 - t157 * t113 + t159 * t114;
t40 = -t193 * qJ(4) + t168 * qJD(4) - t52;
t19 = t152 * t34 + t215 * t40;
t16 = (qJ(5) * t204 - qJD(5) * t160) * t153 + t19;
t66 = t152 * t96 + t215 * t193;
t67 = -t152 * t193 + t215 * t96;
t115 = (t155 * t221 + t196) * qJD(2);
t79 = t193 * pkin(3) + t115;
t87 = t215 * t121 + t152 * t168;
t26 = t66 * pkin(4) - t67 * qJ(5) - t87 * qJD(5) + t79;
t8 = t151 * t26 + t154 * t16;
t183 = -t157 * t110 + t159 * t111;
t61 = -pkin(3) * t209 - t121 * qJ(4) + t183;
t68 = t168 * qJ(4) + t206;
t39 = t152 * t61 + t215 * t68;
t32 = -qJ(5) * t209 + t39;
t86 = t152 * t121 - t215 * t168;
t140 = pkin(8) * t210;
t146 = -t159 * pkin(3) - pkin(2);
t92 = pkin(3) * t195 + t140 + (t146 - t219) * t155;
t45 = t86 * pkin(4) - t87 * qJ(5) + t92;
t23 = t151 * t45 + t154 * t32;
t126 = t152 * t159 + t185;
t117 = t126 * qJD(3);
t184 = t215 * t159;
t118 = qJD(3) * t184 - t152 * t202;
t147 = pkin(3) * t202;
t73 = t117 * pkin(4) - t118 * qJ(5) - t126 * qJD(5) + t147;
t83 = t215 * t116 + t152 * t163;
t50 = t151 * t73 + t154 * t83;
t211 = t152 * t157;
t124 = -t184 + t211;
t93 = t124 * pkin(4) - t126 * qJ(5) + t146;
t98 = -t215 * t133 + t216 * t211;
t63 = t151 * t93 + t154 * t98;
t214 = t115 * t157;
t213 = t126 * t151;
t212 = t151 * t118;
t208 = t154 * t118;
t205 = t151 ^ 2 + t154 ^ 2;
t200 = qJD(3) * t160;
t109 = t140 + (-pkin(2) - t219) * t155;
t198 = t109 * qJD(3);
t197 = -0.2e1 * pkin(2) * qJD(3);
t192 = t222 * t154;
t149 = t153 ^ 2;
t191 = t149 * t203;
t7 = -t151 * t16 + t154 * t26;
t22 = -t151 * t32 + t154 * t45;
t49 = -t151 * t83 + t154 * t73;
t62 = -t151 * t98 + t154 * t93;
t58 = t151 * t67 - t154 * t189;
t182 = t58 * pkin(10) - t8;
t181 = t158 * t191;
t179 = 0.2e1 * t205 * qJD(5);
t145 = -t215 * pkin(3) - pkin(4);
t178 = t8 * t151 + t7 * t154;
t18 = -t152 * t40 + t215 * t34;
t38 = -t152 * t68 + t215 * t61;
t17 = -pkin(4) * t189 - t18;
t33 = pkin(4) * t209 - t38;
t177 = t118 * t33 + t126 * t17;
t176 = t97 * t118 + t82 * t126;
t175 = -t127 * t66 - t224 * t86;
t174 = t50 * t151 + t49 * t154;
t173 = -t49 * t151 + t50 * t154;
t172 = -qJD(5) * t86 - t142 * t66;
t171 = pkin(10) * t212 - t50;
t170 = t127 * t117 + t124 * t224;
t78 = -t151 * t209 + t154 * t87;
t13 = t86 * pkin(5) - t78 * pkin(10) + t22;
t77 = t151 * t87 + t154 * t209;
t14 = -t77 * pkin(10) + t23;
t4 = t156 * t13 + t222 * t14;
t51 = -t154 * t126 * pkin(10) + t124 * pkin(5) + t62;
t54 = -pkin(10) * t213 + t63;
t29 = t156 * t51 + t222 * t54;
t169 = -t156 * t78 - t222 * t77;
t47 = -t156 * t77 + t222 * t78;
t122 = t217 * t151;
t123 = t217 * t154;
t91 = -t156 * t122 + t222 * t123;
t167 = -t156 * t151 + t192;
t166 = t157 * t200 + t159 * t204;
t165 = t157 * t204 - t159 * t200;
t59 = t151 * t189 + t154 * t67;
t164 = t66 * pkin(5) - t59 * pkin(10) + t7;
t162 = -qJD(5) * t124 - t117 * t142 + t118 * t145;
t161 = t117 * pkin(5) - pkin(10) * t208 + t49;
t129 = -t154 * pkin(5) + t145;
t90 = -t222 * t122 - t156 * t123;
t85 = t167 * t126;
t84 = t127 * t126;
t81 = pkin(5) * t213 + t97;
t76 = -t127 * qJD(5) - t91 * qJD(6);
t75 = t122 * t187 - qJD(5) * t192 + (qJD(5) * t151 + qJD(6) * t123) * t156;
t72 = t117 * t167 - t120 * t124;
t69 = pkin(5) * t212 + t82;
t56 = t127 * t118 + t224 * t126;
t55 = t167 * t118 - t126 * t120;
t41 = -t120 * t86 + t167 * t66;
t28 = -t156 * t54 + t222 * t51;
t27 = t77 * pkin(5) + t33;
t21 = t47 * qJD(6) + t156 * t59 + t222 * t58;
t20 = t169 * qJD(6) - t156 * t58 + t222 * t59;
t11 = t58 * pkin(5) + t17;
t10 = -t29 * qJD(6) + t156 * t171 + t222 * t161;
t9 = -t156 * t161 + t222 * t171 - t51 * t187 + t54 * t199;
t3 = t222 * t13 - t156 * t14;
t2 = -t4 * qJD(6) + t156 * t182 + t222 * t164;
t1 = -t13 * t187 + t14 * t199 - t156 * t164 + t222 * t182;
t5 = [0, 0, 0, 0.2e1 * t181, 0.2e1 * (-t158 ^ 2 + t160 ^ 2) * t149 * qJD(2), 0.2e1 * t155 * t188, -0.2e1 * t155 * t189, 0, -0.2e1 * t149 * pkin(1) * t204 - 0.2e1 * t115 * t155, -0.2e1 * pkin(1) * t191 + 0.2e1 * t114 * t155, 0.2e1 * t121 * t96, -0.2e1 * t121 * t193 + 0.2e1 * t96 * t168, 0.2e1 * (t121 * t204 - t160 * t96) * t153, 0.2e1 * t168 * t189 + 0.2e1 * t193 * t209, -0.2e1 * t181, -0.2e1 * t115 * t207 + 0.2e1 * t109 * t193 + 0.2e1 * (-t53 * t160 + (t183 * qJD(2) + t214) * t158) * t153, 0.2e1 * t109 * t96 + 0.2e1 * t115 * t121 + 0.2e1 * (-t52 * t160 - t206 * t204) * t153, -0.2e1 * t18 * t87 - 0.2e1 * t19 * t86 - 0.2e1 * t38 * t67 - 0.2e1 * t39 * t66, 0.2e1 * t38 * t18 + 0.2e1 * t39 * t19 + 0.2e1 * t92 * t79, 0.2e1 * t17 * t77 + 0.2e1 * t22 * t66 + 0.2e1 * t33 * t58 + 0.2e1 * t7 * t86, 0.2e1 * t17 * t78 - 0.2e1 * t23 * t66 + 0.2e1 * t33 * t59 - 0.2e1 * t8 * t86, -0.2e1 * t22 * t59 - 0.2e1 * t23 * t58 - 0.2e1 * t7 * t78 - 0.2e1 * t8 * t77, 0.2e1 * t33 * t17 + 0.2e1 * t22 * t7 + 0.2e1 * t23 * t8, 0.2e1 * t47 * t20, 0.2e1 * t169 * t20 - 0.2e1 * t47 * t21, 0.2e1 * t20 * t86 + 0.2e1 * t47 * t66, 0.2e1 * t169 * t66 - 0.2e1 * t21 * t86, 0.2e1 * t86 * t66, -0.2e1 * t11 * t169 + 0.2e1 * t2 * t86 + 0.2e1 * t27 * t21 + 0.2e1 * t3 * t66, 0.2e1 * t1 * t86 + 0.2e1 * t11 * t47 + 0.2e1 * t27 * t20 - 0.2e1 * t4 * t66; 0, 0, 0, 0, 0, t188, -t189, 0, -t115, t114, t121 * t201 + t96 * t157, -t157 * t193 + t96 * t159 + (-t121 * t157 + t159 * t168) * qJD(3), t165 * t153, t166 * t153, 0, -pkin(2) * t193 - t115 * t159 + t157 * t198 - t165 * t220, -pkin(2) * t96 + t159 * t198 - t166 * t220 + t214, -t39 * t117 - t38 * t118 - t19 * t124 - t18 * t126 - t98 * t66 + t97 * t67 + t82 * t87 - t83 * t86, t79 * t146 + t147 * t92 - t18 * t97 + t19 * t98 - t38 * t82 + t39 * t83, t22 * t117 + t7 * t124 + t151 * t177 + t49 * t86 + t97 * t58 + t62 * t66 + t82 * t77, -t23 * t117 - t8 * t124 + t154 * t177 - t50 * t86 + t97 * t59 - t63 * t66 + t82 * t78, -t49 * t78 - t50 * t77 - t63 * t58 - t62 * t59 - t178 * t126 + (-t151 * t23 - t154 * t22) * t118, t17 * t97 + t22 * t49 + t23 * t50 + t33 * t82 + t7 * t62 + t8 * t63, t20 * t85 + t47 * t55, t169 * t55 - t20 * t84 - t85 * t21 - t47 * t56, t47 * t117 + t20 * t124 + t55 * t86 + t85 * t66, t117 * t169 - t21 * t124 - t56 * t86 - t84 * t66, t86 * t117 + t66 * t124, t10 * t86 + t11 * t84 + t3 * t117 + t2 * t124 - t169 * t69 + t81 * t21 + t27 * t56 + t28 * t66, t1 * t124 + t11 * t85 - t4 * t117 + t81 * t20 + t27 * t55 - t29 * t66 + t69 * t47 + t9 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t157 * t201, 0.2e1 * (-t157 ^ 2 + t159 ^ 2) * qJD(3), 0, 0, 0, t157 * t197, t159 * t197, -0.2e1 * t98 * t117 - 0.2e1 * t83 * t124 + 0.2e1 * t176, 0.2e1 * t146 * t147 + 0.2e1 * t98 * t83 + 0.2e1 * t218, 0.2e1 * t62 * t117 + 0.2e1 * t49 * t124 + 0.2e1 * t151 * t176, -0.2e1 * t63 * t117 - 0.2e1 * t50 * t124 + 0.2e1 * t154 * t176, -0.2e1 * t174 * t126 + 0.2e1 * (-t151 * t63 - t154 * t62) * t118, 0.2e1 * t62 * t49 + 0.2e1 * t63 * t50 + 0.2e1 * t218, 0.2e1 * t85 * t55, -0.2e1 * t55 * t84 - 0.2e1 * t85 * t56, 0.2e1 * t85 * t117 + 0.2e1 * t55 * t124, -0.2e1 * t84 * t117 - 0.2e1 * t56 * t124, 0.2e1 * t124 * t117, 0.2e1 * t10 * t124 + 0.2e1 * t28 * t117 + 0.2e1 * t81 * t56 + 0.2e1 * t69 * t84, -0.2e1 * t29 * t117 + 0.2e1 * t9 * t124 + 0.2e1 * t81 * t55 + 0.2e1 * t69 * t85; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t96, -t193, t189, t53, t52 (-t152 * t66 - t215 * t67) * pkin(3) (t152 * t19 + t18 * t215) * pkin(3), t145 * t58 + t151 * t172 - t17 * t154, t145 * t59 + t17 * t151 + t154 * t172 (-qJD(5) * t77 - t142 * t58 + t8) * t154 + (qJD(5) * t78 + t142 * t59 - t7) * t151, t17 * t145 + (-t7 * t151 + t8 * t154) * t142 + (-t151 * t22 + t154 * t23) * qJD(5), t20 * t127 + t224 * t47, -t47 * t120 - t127 * t21 + t167 * t20 + t169 * t224, -t175, t41, 0, -t11 * t167 + t27 * t120 + t129 * t21 + t90 * t66 + t76 * t86, t11 * t127 + t129 * t20 + t224 * t27 - t91 * t66 + t75 * t86; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t201, -t202, 0, -pkin(9) * t201, pkin(9) * t202 (-t117 * t152 - t118 * t215) * pkin(3) (t152 * t83 - t215 * t82) * pkin(3), t151 * t162 - t82 * t154, t82 * t151 + t154 * t162, t173, t82 * t145 + t173 * t142 + (-t151 * t62 + t154 * t63) * qJD(5), t55 * t127 + t224 * t85, -t85 * t120 - t127 * t56 + t167 * t55 - t224 * t84, t170, t72, 0, t90 * t117 + t81 * t120 + t76 * t124 + t129 * t56 - t167 * t69, -t91 * t117 + t75 * t124 + t69 * t127 + t129 * t55 + t224 * t81; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t179, t142 * t179, t127 * t223, -0.2e1 * t127 * t120 + 0.2e1 * t167 * t224, 0, 0, 0, 0.2e1 * t129 * t120, t129 * t223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t79, t154 * t66, -t151 * t66, -t151 * t58 - t154 * t59, t178, 0, 0, 0, 0, 0, t41, t175; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t147, t154 * t117, -t151 * t117, -t205 * t118, t174, 0, 0, 0, 0, 0, t72, -t170; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, t59, 0, t17, 0, 0, 0, 0, 0, t21, t20; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t212, t208, 0, t82, 0, 0, 0, 0, 0, t56, t55; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t120, t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t20, -t21, t66, t2, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t55, -t56, t117, t10, t9; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t224, -t120, 0, t76, t75; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t120, -t224; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t5;
