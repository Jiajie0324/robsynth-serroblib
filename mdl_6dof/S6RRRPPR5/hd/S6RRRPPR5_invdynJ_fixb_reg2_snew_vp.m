% Calculate inertial parameters regressor of inverse dynamics joint torque vector with Newton-Euler for
% S6RRRPPR5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d3,d6,theta4,theta5]';
% 
% Output:
% tauJ_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-07 05:11
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauJ_reg = S6RRRPPR5_invdynJ_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRPPR5_invdynJ_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRPPR5_invdynJ_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRPPR5_invdynJ_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRPPR5_invdynJ_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6RRRPPR5_invdynJ_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_tauJ_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-07 05:06:48
% EndTime: 2019-05-07 05:07:35
% DurationCPUTime: 25.72s
% Computational Cost: add. (246187->771), mult. (549964->1171), div. (0->0), fcn. (449928->14), ass. (0->495)
t414 = sin(pkin(12));
t421 = sin(qJ(3));
t424 = cos(qJ(3));
t419 = cos(pkin(6));
t468 = qJD(1) * t419 + qJD(2);
t422 = sin(qJ(2));
t416 = sin(pkin(6));
t495 = qJD(1) * t416;
t478 = t422 * t495;
t389 = -t421 * t478 + t424 * t468;
t390 = t421 * t468 + t424 * t478;
t415 = sin(pkin(11));
t418 = cos(pkin(11));
t368 = t415 * t389 + t418 * t390;
t425 = cos(qJ(2));
t477 = t425 * t495;
t405 = -qJD(3) + t477;
t417 = cos(pkin(12));
t343 = t368 * t414 + t417 * t405;
t344 = t368 * t417 - t405 * t414;
t300 = t344 * t343;
t488 = qJD(1) * qJD(2);
t474 = t425 * t488;
t487 = qJDD(1) * t416;
t395 = t416 * t474 + t422 * t487;
t467 = qJDD(1) * t419 + qJDD(2);
t445 = -t424 * t395 - t421 * t467;
t355 = t389 * qJD(3) - t445;
t469 = t395 * t421 - t424 * t467;
t453 = -qJD(3) * t390 - t469;
t315 = t355 * t415 - t418 * t453;
t556 = -t300 + t315;
t566 = t414 * t556;
t565 = t417 * t556;
t420 = sin(qJ(6));
t423 = cos(qJ(6));
t296 = t423 * t343 + t344 * t420;
t298 = -t343 * t420 + t344 * t423;
t240 = t298 * t296;
t312 = qJDD(6) + t315;
t558 = -t240 + t312;
t564 = t420 * t558;
t563 = t423 * t558;
t451 = -qJDD(1) * t425 + t422 * t488;
t447 = t451 * t416;
t440 = qJDD(3) + t447;
t464 = t468 ^ 2;
t411 = t416 ^ 2;
t550 = qJD(1) ^ 2;
t493 = t411 * t550;
t366 = -t418 * t389 + t390 * t415;
t511 = t368 * t366;
t433 = t440 - t511;
t562 = t415 * t433;
t561 = t418 * t433;
t509 = t389 * t390;
t432 = t440 + t509;
t560 = t421 * t432;
t559 = t424 * t432;
t316 = t418 * t355 + t415 * t453;
t293 = t417 * t316 + t414 * t440;
t470 = t316 * t414 - t417 * t440;
t200 = -t296 * qJD(6) + t423 * t293 - t420 * t470;
t362 = qJD(6) + t366;
t269 = t362 * t296;
t557 = -t269 + t200;
t314 = t366 * t343;
t250 = -t314 - t293;
t555 = -t314 + t293;
t351 = t366 * t405;
t286 = t351 + t316;
t377 = t389 * t405;
t334 = t377 + t355;
t554 = -pkin(2) * t464 + pkin(9) * t467;
t547 = sin(qJ(1));
t548 = cos(qJ(1));
t450 = g(1) * t548 + g(2) * t547;
t439 = pkin(8) * t487 - t450;
t537 = t550 * pkin(1);
t431 = t439 - t537;
t449 = g(1) * t547 - g(2) * t548;
t444 = qJDD(1) * pkin(1) + t449;
t492 = t416 * t550;
t430 = pkin(8) * t492 + t444;
t429 = t419 * t430;
t503 = t416 * t425;
t466 = g(3) * t503 - t425 * t429;
t357 = t422 * t431 + t466;
t504 = t416 * t422;
t410 = g(3) * t504;
t358 = t422 * t429 + t425 * t431 - t410;
t553 = t422 * t357 + t425 * t358;
t472 = t293 * t420 + t423 * t470;
t176 = (qJD(6) - t362) * t298 + t472;
t330 = (qJD(3) + t405) * t390 + t469;
t294 = t296 ^ 2;
t295 = t298 ^ 2;
t552 = t343 ^ 2;
t342 = t344 ^ 2;
t361 = t362 ^ 2;
t551 = t366 ^ 2;
t365 = t368 ^ 2;
t387 = t389 ^ 2;
t388 = t390 ^ 2;
t392 = t405 ^ 2;
t549 = 2 * qJD(4);
t546 = pkin(2) * t422;
t545 = pkin(2) * t425;
t463 = -pkin(9) * t422 - t545;
t455 = t425 * t463;
t427 = t455 * t493 + t358 + t554;
t540 = pkin(9) * t425;
t454 = (-t540 + 0.2e1 * t546) * qJD(2);
t538 = t419 * g(3);
t461 = -t395 * pkin(9) - t538;
t462 = -t540 + t546;
t480 = -pkin(1) - t545;
t539 = t416 * pkin(8);
t428 = (t480 * qJDD(1) + ((t419 * t462 - t539) * qJD(1) + t454) * qJD(1) - t449) * t416 + t461;
t266 = t421 * t428 + t424 * t427;
t371 = -pkin(3) * t405 - qJ(4) * t390;
t236 = -t387 * pkin(3) + qJ(4) * t453 + t405 * t371 + t266;
t426 = pkin(3) * t432 - qJ(4) * t334 - t421 * t427 + t424 * t428;
t473 = t236 * t415 - t418 * t426;
t155 = t368 * t549 + t473;
t494 = qJD(4) * t366;
t359 = -0.2e1 * t494;
t496 = t418 * t236 + t415 * t426;
t156 = t359 + t496;
t111 = -t155 * t418 + t156 * t415;
t544 = pkin(3) * t111;
t510 = t368 * t405;
t284 = t315 + t510;
t287 = -t351 + t316;
t229 = -t284 * t415 - t287 * t418;
t543 = pkin(3) * t229;
t542 = pkin(4) * t415;
t541 = pkin(8) * t421;
t320 = pkin(4) * t366 - qJ(5) * t368;
t141 = -pkin(4) * t392 + qJ(5) * t440 - t366 * t320 + t156;
t327 = -t467 * pkin(2) - t464 * pkin(9) + t466 + (t439 + (t411 * t463 - pkin(1)) * t550) * t422;
t260 = -pkin(3) * t453 - t387 * qJ(4) + t390 * t371 + qJDD(4) + t327;
t283 = t315 - t510;
t188 = pkin(4) * t283 - qJ(5) * t286 + t260;
t101 = 0.2e1 * qJD(5) * t344 + t141 * t414 - t417 * t188;
t82 = pkin(5) * t556 + pkin(10) * t250 - t101;
t102 = -0.2e1 * qJD(5) * t343 + t417 * t141 + t414 * t188;
t306 = pkin(5) * t366 - pkin(10) * t344;
t88 = -pkin(5) * t552 - pkin(10) * t470 - t366 * t306 + t102;
t54 = t420 * t88 - t423 * t82;
t55 = t420 * t82 + t423 * t88;
t33 = t420 * t55 - t423 * t54;
t536 = t33 * t414;
t535 = t33 * t417;
t534 = t111 * t421;
t533 = t111 * t424;
t140 = qJDD(5) - t440 * pkin(4) - t392 * qJ(5) + (t549 + t320) * t368 + t473;
t120 = pkin(5) * t470 - pkin(10) * t552 + t306 * t344 + t140;
t532 = t120 * t420;
t531 = t120 * t423;
t530 = t140 * t414;
t529 = t140 * t417;
t212 = t240 + t312;
t528 = t212 * t420;
t527 = t212 * t423;
t253 = t300 + t315;
t526 = t253 * t414;
t525 = t253 * t417;
t524 = t260 * t415;
t523 = t260 * t418;
t307 = -t440 - t511;
t522 = t307 * t415;
t521 = t307 * t418;
t520 = t315 * t415;
t519 = t327 * t424;
t518 = t344 * t366;
t346 = -t440 + t509;
t517 = t346 * t421;
t516 = t346 * t424;
t515 = t362 * t420;
t514 = t362 * t423;
t513 = t366 * t414;
t512 = t366 * t417;
t508 = t405 * t415;
t507 = t405 * t418;
t506 = t405 * t421;
t505 = t405 * t424;
t502 = t419 * t422;
t501 = t421 * t327;
t404 = t425 * t422 * t493;
t394 = t404 + t467;
t499 = t422 * t394;
t393 = -t404 + t467;
t497 = t425 * t393;
t491 = -qJD(3) + t405;
t486 = t415 * t240;
t485 = t418 * t240;
t484 = t415 * t300;
t483 = t418 * t300;
t482 = t425 * t511;
t481 = t425 * t509;
t479 = -pkin(4) * t418 - pkin(3);
t412 = t422 ^ 2;
t476 = t412 * t493;
t413 = t425 ^ 2;
t475 = t413 * t493;
t34 = t420 * t54 + t423 * t55;
t64 = t101 * t414 + t417 * t102;
t112 = t155 * t415 + t418 * t156;
t265 = t421 * (t425 * (-t450 - t537) + t444 * t502 - t410 + t554) - t424 * t461 + (t424 * t449 + (-t424 * t480 + t425 * t541) * qJDD(1) + (((t424 * pkin(8) + t421 * t455) * t416 + (t422 * t541 - t424 * t462) * t419) * qJD(1) - t424 * t454) * qJD(1)) * t416;
t215 = t265 * t421 + t424 * t266;
t336 = -t365 - t392;
t263 = t336 * t418 + t522;
t465 = pkin(3) * t263 - t496;
t63 = -t101 * t417 + t102 * t414;
t459 = t265 * t424 - t266 * t421;
t458 = t411 * t422 * t474;
t457 = -pkin(1) + t463;
t246 = t470 - t518;
t452 = t468 * t495;
t51 = -t140 * t418 + t415 * t64;
t448 = pkin(3) * t51 - pkin(4) * t140 + qJ(5) * t64;
t317 = -t551 - t392;
t258 = t317 * t415 + t561;
t446 = pkin(3) * t258 - t155;
t275 = -t551 - t552;
t198 = t275 * t417 - t566;
t245 = t470 + t518;
t157 = t198 * t415 - t245 * t418;
t443 = pkin(3) * t157 - pkin(4) * t245 + qJ(5) * t198 - t529;
t289 = -t342 - t551;
t203 = -t289 * t414 - t525;
t159 = t203 * t415 - t418 * t555;
t442 = pkin(3) * t159 - pkin(4) * t555 + qJ(5) * t203 + t530;
t192 = -t246 * t417 - t250 * t414;
t261 = -t342 - t552;
t148 = t192 * t415 - t261 * t418;
t438 = pkin(3) * t148 - pkin(4) * t261 + qJ(5) * t192 + t64;
t204 = -t294 - t295;
t179 = t269 + t200;
t132 = -t176 * t423 + t179 * t420;
t28 = -pkin(5) * t204 + pkin(10) * t132 + t34;
t130 = -t176 * t420 - t179 * t423;
t30 = -pkin(10) * t130 - t33;
t78 = -t130 * t414 + t132 * t417;
t67 = -t204 * t418 + t415 * t78;
t437 = pkin(3) * t67 - pkin(4) * t204 + qJ(5) * t78 + t28 * t417 + t30 * t414;
t234 = -t361 - t294;
t146 = t234 * t420 + t563;
t147 = t234 * t423 - t564;
t108 = -t146 * t414 + t147 * t417;
t175 = (qJD(6) + t362) * t298 + t472;
t73 = -pkin(5) * t175 + pkin(10) * t147 - t531;
t79 = t108 * t415 - t175 * t418;
t83 = -pkin(10) * t146 + t532;
t436 = pkin(3) * t79 - pkin(4) * t175 + qJ(5) * t108 + t414 * t83 + t417 * t73;
t255 = -t295 - t361;
t163 = t255 * t423 - t528;
t164 = -t255 * t420 - t527;
t122 = -t163 * t414 + t164 * t417;
t74 = -pkin(5) * t557 + pkin(10) * t164 + t532;
t87 = -pkin(10) * t163 + t531;
t89 = t122 * t415 - t418 * t557;
t435 = pkin(3) * t89 - pkin(4) * t557 + qJ(5) * t122 + t414 * t87 + t417 * t74;
t18 = t34 * t417 - t536;
t15 = -t120 * t418 + t18 * t415;
t29 = -pkin(5) * t120 + pkin(10) * t34;
t434 = pkin(3) * t15 - pkin(4) * t120 - pkin(10) * t536 + qJ(5) * t18 + t29 * t417;
t399 = t425 * t452;
t398 = t422 * t452;
t397 = (t412 - t413) * t493;
t396 = -t464 - t475;
t384 = -t476 - t464;
t379 = t440 * t503;
t378 = t416 * t430 + t538;
t376 = -t398 - t447;
t375 = t398 - t447;
t374 = -t399 + t395;
t373 = -t388 + t392;
t372 = t387 - t392;
t370 = -t388 - t392;
t369 = t388 - t387;
t356 = -t392 - t387;
t350 = -t365 + t392;
t349 = t551 - t392;
t345 = t387 + t388;
t341 = (-t389 * t421 + t390 * t424) * t405;
t335 = t389 * t491 + t445;
t333 = -t377 + t355;
t331 = t390 * t491 - t469;
t329 = t355 * t421 - t390 * t505;
t328 = t389 * t506 + t424 * t453;
t323 = t372 * t421 - t516;
t322 = t373 * t424 + t560;
t321 = t365 - t551;
t319 = -t370 * t421 + t516;
t318 = t370 * t424 + t517;
t311 = -t342 + t551;
t310 = -t551 + t552;
t305 = t418 * t315;
t304 = t356 * t424 - t560;
t303 = t356 * t421 + t559;
t302 = (t366 * t418 - t368 * t415) * t405;
t301 = (t366 * t415 + t368 * t418) * t405;
t299 = -t342 + t552;
t290 = -t551 - t365;
t282 = -t330 * t424 + t334 * t421;
t280 = t331 * t421 + t333 * t424;
t279 = t316 * t418 + t368 * t508;
t278 = t316 * t415 - t368 * t507;
t277 = -t366 * t507 + t520;
t276 = -t366 * t508 - t305;
t274 = t349 * t418 + t522;
t273 = -t350 * t415 + t561;
t272 = t349 * t415 - t521;
t271 = t350 * t418 + t562;
t268 = -t295 + t361;
t267 = t294 - t361;
t264 = -t336 * t415 + t521;
t259 = t317 * t418 - t562;
t257 = (-t343 * t417 + t344 * t414) * t366;
t256 = (-t343 * t414 - t344 * t417) * t366;
t251 = t301 * t424 + t302 * t421;
t244 = t293 * t417 - t344 * t513;
t243 = t293 * t414 + t344 * t512;
t242 = t343 * t512 + t414 * t470;
t241 = -t343 * t513 + t417 * t470;
t239 = t295 - t294;
t238 = pkin(2) * t335 + pkin(9) * t319 + t501;
t237 = pkin(2) * t331 + pkin(9) * t304 - t519;
t231 = -t284 * t418 + t287 * t415;
t230 = -t283 * t418 - t286 * t415;
t228 = -t283 * t415 + t286 * t418;
t227 = t257 * t418 + t520;
t226 = t257 * t415 - t305;
t225 = t278 * t424 + t279 * t421;
t224 = t276 * t424 + t277 * t421;
t223 = t310 * t417 - t526;
t222 = -t311 * t414 + t565;
t221 = t310 * t414 + t525;
t220 = t311 * t417 + t566;
t219 = t272 * t424 + t274 * t421;
t218 = t271 * t424 + t273 * t421;
t217 = (-t296 * t423 + t298 * t420) * t362;
t216 = (-t296 * t420 - t298 * t423) * t362;
t210 = -t263 * t421 + t264 * t424;
t209 = t263 * t424 + t264 * t421;
t208 = t244 * t418 + t484;
t207 = t242 * t418 - t484;
t206 = t244 * t415 - t483;
t205 = t242 * t415 + t483;
t202 = t289 * t417 - t526;
t201 = -qJ(4) * t263 + t523;
t199 = -qJD(6) * t298 - t472;
t197 = t275 * t414 + t565;
t196 = -qJ(4) * t258 + t524;
t195 = -t258 * t421 + t259 * t424;
t194 = t258 * t424 + t259 * t421;
t193 = -pkin(2) * t327 + pkin(9) * t215;
t191 = -t245 * t417 - t414 * t555;
t190 = -t246 * t414 + t250 * t417;
t189 = -t245 * t414 + t417 * t555;
t185 = t267 * t423 - t528;
t184 = -t268 * t420 + t563;
t183 = t267 * t420 + t527;
t182 = t268 * t423 + t564;
t181 = -pkin(3) * t286 + qJ(4) * t264 + t524;
t174 = t200 * t423 - t298 * t515;
t173 = t200 * t420 + t298 * t514;
t172 = -t199 * t420 + t296 * t514;
t171 = t199 * t423 + t296 * t515;
t170 = pkin(2) * t345 + pkin(9) * t282 + t215;
t169 = t223 * t418 - t246 * t415;
t168 = t222 * t418 - t250 * t415;
t167 = t223 * t415 + t246 * t418;
t166 = t222 * t415 + t250 * t418;
t165 = -pkin(3) * t283 + qJ(4) * t259 - t523;
t162 = t191 * t418 - t299 * t415;
t161 = t191 * t415 + t299 * t418;
t160 = t203 * t418 + t415 * t555;
t158 = t198 * t418 + t245 * t415;
t154 = -t229 * t421 + t231 * t424;
t153 = t229 * t424 + t231 * t421;
t152 = t228 * t424 + t230 * t421;
t150 = t226 * t424 + t227 * t421;
t149 = t192 * t418 + t261 * t415;
t145 = -t216 * t414 + t217 * t417;
t144 = t216 * t417 + t217 * t414;
t143 = t206 * t424 + t208 * t421;
t142 = t205 * t424 + t207 * t421;
t138 = t145 * t418 + t312 * t415;
t137 = t145 * t415 - t312 * t418;
t136 = -t183 * t414 + t185 * t417;
t135 = -t182 * t414 + t184 * t417;
t134 = t183 * t417 + t185 * t414;
t133 = t182 * t417 + t184 * t414;
t131 = -t175 * t423 - t420 * t557;
t129 = -t175 * t420 + t423 * t557;
t128 = -t173 * t414 + t174 * t417;
t127 = -t171 * t414 + t172 * t417;
t126 = t173 * t417 + t174 * t414;
t125 = t171 * t417 + t172 * t414;
t124 = t167 * t424 + t169 * t421;
t123 = t166 * t424 + t168 * t421;
t121 = t163 * t417 + t164 * t414;
t119 = -qJ(5) * t202 + t529;
t118 = t161 * t424 + t162 * t421;
t117 = -qJ(5) * t197 + t530;
t116 = -t159 * t421 + t160 * t424;
t115 = t159 * t424 + t160 * t421;
t114 = -t157 * t421 + t158 * t424;
t113 = t157 * t424 + t158 * t421;
t110 = -t148 * t421 + t149 * t424;
t109 = t148 * t424 + t149 * t421;
t107 = t146 * t417 + t147 * t414;
t106 = t128 * t418 + t486;
t105 = t127 * t418 - t486;
t104 = t128 * t415 - t485;
t103 = t127 * t415 + t485;
t99 = -pkin(2) * t286 + pkin(9) * t210 + t181 * t424 + t201 * t421;
t98 = -pkin(3) * t260 + qJ(4) * t112;
t97 = -pkin(2) * t283 + pkin(9) * t195 + t165 * t424 + t196 * t421;
t96 = -qJ(4) * t229 - t111;
t95 = t137 * t424 + t138 * t421;
t94 = t136 * t418 - t176 * t415;
t93 = t135 * t418 + t179 * t415;
t92 = t136 * t415 + t176 * t418;
t91 = t135 * t415 - t179 * t418;
t90 = t122 * t418 + t415 * t557;
t86 = -pkin(3) * t290 + qJ(4) * t231 + t112;
t85 = -pkin(4) * t202 + t102;
t84 = -pkin(4) * t197 + t101;
t80 = t108 * t418 + t175 * t415;
t77 = -t129 * t414 + t131 * t417;
t76 = t130 * t417 + t132 * t414;
t75 = t129 * t417 + t131 * t414;
t72 = t239 * t415 + t418 * t77;
t71 = -t239 * t418 + t415 * t77;
t70 = t112 * t424 - t534;
t69 = t112 * t421 + t533;
t68 = t204 * t415 + t418 * t78;
t66 = t104 * t424 + t106 * t421;
t65 = t103 * t424 + t105 * t421;
t62 = -qJ(5) * t190 - t63;
t61 = t421 * t94 + t424 * t92;
t60 = t421 * t93 + t424 * t91;
t59 = -pkin(4) * t76 - pkin(5) * t130;
t58 = -t421 * t89 + t424 * t90;
t57 = t421 * t90 + t424 * t89;
t56 = -qJ(4) * t159 + t119 * t418 - t415 * t85;
t52 = t140 * t415 + t418 * t64;
t50 = -qJ(4) * t157 + t117 * t418 - t415 * t84;
t49 = -t421 * t79 + t424 * t80;
t48 = t421 * t80 + t424 * t79;
t47 = -pkin(3) * t202 + qJ(4) * t160 + t119 * t415 + t418 * t85;
t46 = -pkin(3) * t197 + qJ(4) * t158 + t117 * t415 + t418 * t84;
t45 = -pkin(2) * t290 + pkin(9) * t154 + t421 * t96 + t424 * t86;
t44 = -qJ(4) * t148 + t190 * t542 + t418 * t62;
t43 = qJ(4) * t149 + t190 * t479 + t415 * t62;
t42 = t421 * t72 + t424 * t71;
t41 = -qJ(5) * t121 - t414 * t74 + t417 * t87;
t40 = -t421 * t67 + t424 * t68;
t39 = t421 * t68 + t424 * t67;
t38 = -pkin(4) * t121 - pkin(5) * t163 + t55;
t37 = -qJ(5) * t107 - t414 * t73 + t417 * t83;
t36 = -pkin(4) * t107 - pkin(5) * t146 + t54;
t35 = -pkin(2) * t260 + pkin(9) * t70 - qJ(4) * t534 + t424 * t98;
t32 = -t421 * t51 + t424 * t52;
t31 = t421 * t52 + t424 * t51;
t27 = -pkin(2) * t202 + pkin(9) * t116 + t421 * t56 + t424 * t47;
t26 = -qJ(4) * t51 + (-qJ(5) * t418 + t542) * t63;
t25 = -pkin(2) * t197 + pkin(9) * t114 + t421 * t50 + t424 * t46;
t24 = -pkin(2) * t190 + pkin(9) * t110 + t421 * t44 + t424 * t43;
t23 = qJ(4) * t52 + (-qJ(5) * t415 + t479) * t63;
t22 = -qJ(4) * t89 - t38 * t415 + t41 * t418;
t21 = -qJ(4) * t79 - t36 * t415 + t37 * t418;
t20 = -pkin(3) * t121 + qJ(4) * t90 + t38 * t418 + t41 * t415;
t19 = -pkin(3) * t107 + qJ(4) * t80 + t36 * t418 + t37 * t415;
t17 = t34 * t414 + t535;
t16 = t120 * t415 + t18 * t418;
t14 = -qJ(5) * t76 - t28 * t414 + t30 * t417;
t13 = -pkin(4) * t17 - pkin(5) * t33;
t12 = -qJ(4) * t67 + t14 * t418 - t415 * t59;
t11 = -pkin(3) * t76 + qJ(4) * t68 + t14 * t415 + t418 * t59;
t10 = -pkin(10) * t535 - qJ(5) * t17 - t29 * t414;
t9 = -pkin(2) * t121 + pkin(9) * t58 + t20 * t424 + t22 * t421;
t8 = -t15 * t421 + t16 * t424;
t7 = t15 * t424 + t16 * t421;
t6 = -pkin(2) * t63 + pkin(9) * t32 + t23 * t424 + t26 * t421;
t5 = -pkin(2) * t107 + pkin(9) * t49 + t19 * t424 + t21 * t421;
t4 = -pkin(2) * t76 + pkin(9) * t40 + t11 * t424 + t12 * t421;
t3 = -qJ(4) * t15 + t10 * t418 - t13 * t415;
t2 = -pkin(3) * t17 + qJ(4) * t16 + t10 * t415 + t13 * t418;
t1 = -pkin(2) * t17 + pkin(9) * t8 + t2 * t424 + t3 * t421;
t53 = [0, 0, 0, 0, 0, qJDD(1), t449, t450, 0, 0, t395 * t504 + t458, t419 * t397 + (t422 * t376 + t425 * (t399 + t395)) * t416, t419 * t374 + (t499 + t425 * (t464 - t476)) * t416, -t411 * t425 * t451 - t458, t419 * t375 + (t422 * (-t464 + t475) + t497) * t416, t419 * t467, (-t357 + pkin(1) * (t394 * t425 + t396 * t422)) * t419 + (t425 * t378 + pkin(1) * t376 + pkin(8) * (t396 * t425 - t499)) * t416, -t378 * t504 - t419 * t358 + pkin(1) * (-t393 * t502 + t419 * t425 * t384 - t416 * (t468 * t477 + t395)) + (-t422 * t384 - t497) * t539, pkin(1) * ((-t374 * t425 + t375 * t422) * t419 - (-t412 - t413) * t411 * t492) + (t422 * t374 + t375 * t425) * t539 + t553 * t416, pkin(1) * (t416 * t378 + (-t357 * t425 + t358 * t422) * t419) + t553 * t539, t419 * t329 + (t422 * (t355 * t424 + t390 * t506) + t481) * t416, t419 * t280 + (t422 * (t331 * t424 - t333 * t421) - t425 * t369) * t416, t419 * t322 + (t422 * (-t373 * t421 + t559) - t425 * t334) * t416, t419 * t328 + (t422 * (t389 * t505 - t421 * t453) - t481) * t416, t419 * t323 + (t422 * (t372 * t424 + t517) + t425 * t330) * t416, t419 * t341 - t379 + (-t389 * t424 - t390 * t421) * t405 * t504, (-pkin(9) * t303 + t501) * t504 + (-pkin(2) * t303 + t265) * t503 + t419 * t237 + pkin(1) * (-t416 * t303 + (t304 * t422 + t331 * t425) * t419) + (t425 * t304 - t422 * t331) * t539, (t238 + pkin(1) * (t319 * t422 + t335 * t425)) * t419 + (t422 * (-pkin(9) * t318 + t519) + t425 * (-pkin(2) * t318 + t266) - pkin(1) * t318 + pkin(8) * (t319 * t425 - t422 * t335)) * t416, (t170 + pkin(1) * (t282 * t422 + t345 * t425)) * t419 + (t422 * t459 + pkin(8) * (t282 * t425 - t422 * t345) + t457 * (-t330 * t421 - t334 * t424)) * t416, (t193 + pkin(1) * (t215 * t422 - t327 * t425)) * t419 + (pkin(8) * (t215 * t425 + t422 * t327) - t457 * t459) * t416, t419 * t225 + (t422 * (-t278 * t421 + t279 * t424) - t482) * t416, t419 * t152 + (t422 * (-t228 * t421 + t230 * t424) - t425 * t321) * t416, t419 * t218 + (t422 * (-t271 * t421 + t273 * t424) - t425 * t287) * t416, t419 * t224 + (t422 * (-t276 * t421 + t277 * t424) + t482) * t416, t419 * t219 + (t422 * (-t272 * t421 + t274 * t424) + t425 * t284) * t416, (-t301 * t421 + t302 * t424) * t504 - t379 + t419 * t251, (t97 + pkin(1) * (t195 * t422 - t283 * t425)) * t419 + (t422 * (-pkin(9) * t194 - t165 * t421 + t196 * t424) + t425 * (-pkin(2) * t194 - t446) - pkin(1) * t194 + pkin(8) * (t195 * t425 + t422 * t283)) * t416, (t99 + pkin(1) * (t210 * t422 - t286 * t425)) * t419 + (t422 * (-pkin(9) * t209 - t181 * t421 + t201 * t424) + t425 * (-pkin(2) * t209 + t359 - t465) - pkin(1) * t209 + pkin(8) * (t210 * t425 + t286 * t422)) * t416, (t45 + pkin(1) * (t154 * t422 - t290 * t425)) * t419 + (t422 * (-pkin(9) * t153 - t421 * t86 + t424 * t96) + t425 * (-pkin(2) * t153 - t543) - pkin(1) * t153 + pkin(8) * (t154 * t425 + t422 * t290)) * t416, (t35 + pkin(1) * (-t260 * t425 + t422 * t70)) * t419 + (t422 * (-pkin(9) * t69 - qJ(4) * t533 - t421 * t98) + t425 * (-pkin(2) * t69 - t544) - pkin(1) * t69 + pkin(8) * (t422 * t260 + t425 * t70)) * t416, t419 * t143 + (t422 * (-t206 * t421 + t208 * t424) - t425 * t243) * t416, t419 * t118 + (t422 * (-t161 * t421 + t162 * t424) - t425 * t189) * t416, t419 * t123 + (t422 * (-t166 * t421 + t168 * t424) - t425 * t220) * t416, t419 * t142 + (t422 * (-t205 * t421 + t207 * t424) + t425 * t241) * t416, t419 * t124 + (t422 * (-t167 * t421 + t169 * t424) - t425 * t221) * t416, t419 * t150 + (t422 * (-t226 * t421 + t227 * t424) - t425 * t256) * t416, (t25 + pkin(1) * (t114 * t422 - t197 * t425)) * t419 + (t422 * (-pkin(9) * t113 - t421 * t46 + t424 * t50) + t425 * (-pkin(2) * t113 - t443) - pkin(1) * t113 + pkin(8) * (t114 * t425 + t422 * t197)) * t416, (t27 + pkin(1) * (t116 * t422 - t202 * t425)) * t419 + (t422 * (-pkin(9) * t115 - t421 * t47 + t424 * t56) + t425 * (-pkin(2) * t115 - t442) - pkin(1) * t115 + pkin(8) * (t116 * t425 + t422 * t202)) * t416, (t24 + pkin(1) * (t110 * t422 - t190 * t425)) * t419 + (t422 * (-pkin(9) * t109 - t421 * t43 + t424 * t44) + t425 * (-pkin(2) * t109 - t438) - pkin(1) * t109 + pkin(8) * (t110 * t425 + t422 * t190)) * t416, (t6 + pkin(1) * (t32 * t422 - t425 * t63)) * t419 + (t422 * (-pkin(9) * t31 - t23 * t421 + t26 * t424) + t425 * (-pkin(2) * t31 - t448) - pkin(1) * t31 + pkin(8) * (t32 * t425 + t422 * t63)) * t416, t419 * t66 + (t422 * (-t104 * t421 + t106 * t424) - t425 * t126) * t416, t419 * t42 + (t422 * (-t421 * t71 + t424 * t72) - t425 * t75) * t416, t419 * t60 + (t422 * (-t421 * t91 + t424 * t93) - t425 * t133) * t416, t419 * t65 + (t422 * (-t103 * t421 + t105 * t424) - t425 * t125) * t416, t419 * t61 + (t422 * (-t421 * t92 + t424 * t94) - t425 * t134) * t416, t419 * t95 + (t422 * (-t137 * t421 + t138 * t424) - t425 * t144) * t416, (t5 + pkin(1) * (-t107 * t425 + t422 * t49)) * t419 + (t422 * (-pkin(9) * t48 - t19 * t421 + t21 * t424) + t425 * (-pkin(2) * t48 - t436) - pkin(1) * t48 + pkin(8) * (t422 * t107 + t425 * t49)) * t416, (t9 + pkin(1) * (-t121 * t425 + t422 * t58)) * t419 + (t422 * (-pkin(9) * t57 - t20 * t421 + t22 * t424) + t425 * (-pkin(2) * t57 - t435) - pkin(1) * t57 + pkin(8) * (t422 * t121 + t425 * t58)) * t416, (t4 + pkin(1) * (t40 * t422 - t425 * t76)) * t419 + (t422 * (-pkin(9) * t39 - t11 * t421 + t12 * t424) + t425 * (-pkin(2) * t39 - t437) - pkin(1) * t39 + pkin(8) * (t40 * t425 + t422 * t76)) * t416, (t1 + pkin(1) * (-t17 * t425 + t422 * t8)) * t419 + (t422 * (-pkin(9) * t7 - t2 * t421 + t3 * t424) + t425 * (-pkin(2) * t7 - t434) - pkin(1) * t7 + pkin(8) * (t422 * t17 + t425 * t8)) * t416; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t404, t397, t374, t404, t375, t467, -t357, -t358, 0, 0, t329, t280, t322, t328, t323, t341, t237, t238, t170, t193, t225, t152, t218, t224, t219, t251, t97, t99, t45, t35, t143, t118, t123, t142, t124, t150, t25, t27, t24, t6, t66, t42, t60, t65, t61, t95, t5, t9, t4, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t509, t369, t334, t509, -t330, t440, -t265, -t266, 0, 0, t511, t321, t287, -t511, -t284, t440, t446, t465 + 0.2e1 * t494, t543, t544, t243, t189, t220, -t241, t221, t256, t443, t442, t438, t448, t126, t75, t133, t125, t134, t144, t436, t435, t437, t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t283, t286, t290, t260, 0, 0, 0, 0, 0, 0, t197, t202, t190, t63, 0, 0, 0, 0, 0, 0, t107, t121, t76, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t245, t555, t261, t140, 0, 0, 0, 0, 0, 0, t175, t557, t204, t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t240, t239, t179, -t240, -t176, t312, -t54, -t55, 0, 0;];
tauJ_reg  = t53;
