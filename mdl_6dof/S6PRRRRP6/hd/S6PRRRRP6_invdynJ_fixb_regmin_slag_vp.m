% Calculate minimal parameter regressor of inverse dynamics joint torque vector for
% S6PRRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,theta1]';
% 
% Output:
% tau_reg [6x29]
%   minimal parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:36
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6PRRRRP6_invdynJ_fixb_regmin_slag_vp(qJ, qJD, qJDD, g, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP6_invdynJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP6_invdynJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP6_invdynJ_fixb_regmin_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP6_invdynJ_fixb_regmin_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRP6_invdynJ_fixb_regmin_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:34:30
% EndTime: 2019-03-09 00:34:56
% DurationCPUTime: 13.12s
% Computational Cost: add. (11186->694), mult. (28259->974), div. (0->0), fcn. (24441->14), ass. (0->323)
t258 = sin(pkin(7));
t265 = sin(qJ(3));
t269 = cos(qJ(3));
t317 = t258 * (pkin(3) * t265 - pkin(10) * t269);
t259 = sin(pkin(6));
t266 = sin(qJ(2));
t418 = t259 * t266;
t369 = qJD(1) * t418;
t480 = qJD(3) * t317 - t258 * t369;
t261 = cos(pkin(7));
t270 = cos(qJ(2));
t405 = t269 * t270;
t411 = t265 * t266;
t312 = -t261 * t411 + t405;
t191 = t312 * t259;
t422 = t258 * t265;
t249 = pkin(9) * t422;
t413 = t261 * t269;
t466 = pkin(2) * t413 - t249;
t478 = qJD(1) * t191 - t466 * qJD(3);
t393 = qJD(2) * t258;
t248 = t269 * t393;
t329 = t248 - qJD(4);
t414 = t261 * t265;
t420 = t258 * t269;
t398 = pkin(2) * t414 + pkin(9) * t420;
t199 = pkin(10) * t261 + t398;
t335 = -pkin(3) * t269 - pkin(10) * t265;
t200 = (-pkin(2) + t335) * t258;
t264 = sin(qJ(4));
t268 = cos(qJ(4));
t387 = qJD(4) * t268;
t389 = qJD(4) * t264;
t479 = -t199 * t389 + t200 * t387 + t480 * t264 - t478 * t268;
t409 = t266 * t269;
t410 = t265 * t270;
t314 = t261 * t409 + t410;
t190 = t314 * t259;
t467 = -qJD(1) * t190 + t398 * qJD(3);
t344 = qJD(2) * t261 + qJD(3);
t323 = qJD(4) * t344;
t339 = qJDD(2) * t261 + qJDD(3);
t391 = qJD(3) * t269;
t363 = t264 * t391;
t380 = qJDD(2) * t265;
t110 = t258 * (qJD(2) * (t265 * t387 + t363) + t264 * t380) + t264 * t323 - t268 * t339;
t99 = qJDD(5) + t110;
t392 = qJD(3) * t265;
t364 = t258 * t392;
t477 = -pkin(11) * t364 - t479;
t215 = -t268 * t261 + t264 * t422;
t362 = t268 * t391;
t157 = -qJD(4) * t215 + t258 * t362;
t421 = t258 * t268;
t216 = t261 * t264 + t265 * t421;
t158 = qJD(4) * t216 + t258 * t363;
t476 = -pkin(4) * t158 + pkin(11) * t157 - t467;
t220 = pkin(9) * t393 + t369;
t394 = qJD(1) * t270;
t230 = qJD(2) * pkin(2) + t259 * t394;
t262 = cos(pkin(6));
t395 = qJD(1) * t262;
t370 = t258 * t395;
t130 = t269 * t220 + t230 * t414 + t265 * t370;
t475 = -t130 - t329 * (pkin(4) * t264 - pkin(11) * t268);
t430 = sin(pkin(12));
t351 = t430 * t270;
t260 = cos(pkin(12));
t416 = t260 * t266;
t213 = t262 * t416 + t351;
t352 = t430 * t266;
t415 = t260 * t270;
t291 = -t262 * t415 + t352;
t285 = t291 * t269;
t419 = t259 * t260;
t374 = t258 * t419;
t114 = t213 * t265 + t261 * t285 + t269 * t374;
t214 = -t262 * t352 + t415;
t292 = t262 * t351 + t416;
t287 = t292 * t269;
t353 = t259 * t430;
t336 = t258 * t353;
t116 = t214 * t265 + t261 * t287 - t269 * t336;
t464 = t261 * t405 - t411;
t153 = -t464 * t259 - t262 * t420;
t296 = g(1) * t116 + g(2) * t114 + g(3) * t153;
t417 = t259 * t270;
t247 = qJDD(1) * t417;
t367 = qJD(2) * t418;
t338 = qJD(1) * t367;
t196 = qJDD(2) * pkin(2) + t247 - t338;
t381 = qJDD(1) * t262;
t357 = t258 * t381;
t365 = qJD(3) * t258 * t262;
t426 = t230 * t261;
t450 = pkin(9) * t258;
t471 = qJDD(2) * t450 + (qJD(2) * t394 + qJDD(1) * t266) * t259 + qJD(1) * t365 + qJD(3) * t426;
t318 = -t196 * t413 + t220 * t391 + t471 * t265 - t269 * t357;
t43 = -t339 * pkin(3) + t318;
t474 = t43 - t296;
t473 = t199 * t387 + t200 * t389 - t478 * t264 - t480 * t268;
t472 = t264 * t248 - t389;
t368 = t265 * t393;
t187 = t264 * t368 - t268 * t344;
t177 = qJD(5) + t187;
t198 = t249 + (-pkin(2) * t269 - pkin(3)) * t261;
t120 = pkin(4) * t215 - pkin(11) * t216 + t198;
t400 = t268 * t199 + t264 * t200;
t122 = -pkin(11) * t420 + t400;
t263 = sin(qJ(5));
t267 = cos(qJ(5));
t384 = qJD(5) * t267;
t385 = qJD(5) * t263;
t470 = -t120 * t384 + t122 * t385 + t476 * t263 + t477 * t267;
t431 = -pkin(4) * t364 + t473;
t189 = t264 * t344 + t268 * t368;
t469 = t329 * t189;
t468 = t263 * t120 + t267 * t122;
t319 = t264 * t339;
t278 = t268 * t323 + t319;
t294 = -t265 * t389 + t362;
t379 = qJDD(2) * t268;
t355 = t265 * t379;
t273 = t278 + (qJD(2) * t294 + t355) * t258;
t382 = qJD(2) * qJD(3);
t359 = t265 * t382;
t378 = qJDD(2) * t269;
t246 = t258 * t378;
t377 = qJDD(4) - t246;
t295 = t258 * t359 + t377;
t145 = t267 * t189 - t263 * t329;
t386 = qJD(5) * t145;
t45 = t273 * t263 - t267 * t295 + t386;
t340 = t268 * t248;
t465 = t340 - t387;
t324 = pkin(4) * t268 + pkin(11) * t264 + pkin(3);
t129 = -t265 * t220 + (t370 + t426) * t269;
t205 = qJD(2) * t317;
t401 = t268 * t129 + t264 * t205;
t77 = pkin(11) * t368 + t401;
t463 = -t475 * t263 + t267 * t77 + t324 * t384;
t286 = t291 * t265;
t115 = t213 * t269 - t261 * t286 - t265 * t374;
t117 = t214 * t269 + (-t292 * t261 + t336) * t265;
t313 = t261 * t410 + t409;
t154 = t259 * t313 + t262 * t422;
t315 = t258 * t417 - t261 * t262;
t118 = t154 * t264 + t268 * t315;
t155 = t258 * t291 - t261 * t419;
t156 = t292 * t258 + t261 * t353;
t302 = g(3) * t118 - g(2) * (-t115 * t264 + t155 * t268) - g(1) * (-t117 * t264 + t156 * t268);
t348 = t267 * t329;
t143 = t189 * t263 + t348;
t113 = t344 * pkin(10) + t130;
t245 = t261 * t395;
t142 = t245 + (t335 * qJD(2) - t230) * t258;
t61 = -t264 * t113 + t268 * t142;
t55 = t329 * pkin(4) - t61;
t22 = t143 * pkin(5) - t145 * qJ(6) + t55;
t455 = pkin(11) * t99;
t462 = t177 * t22 - t455;
t460 = -qJD(5) * t468 + t477 * t263 - t476 * t267;
t459 = t145 ^ 2;
t458 = t177 ^ 2;
t271 = qJD(2) ^ 2;
t457 = qJD(3) ^ 2;
t456 = pkin(5) * t99;
t452 = qJ(6) * t158 + qJD(6) * t215 - t470;
t451 = -pkin(5) * t158 - t460;
t444 = pkin(11) * qJD(5);
t443 = qJ(6) * t99;
t62 = t268 * t113 + t264 * t142;
t56 = -t329 * pkin(11) + t62;
t112 = -t344 * pkin(3) - t129;
t64 = t187 * pkin(4) - t189 * pkin(11) + t112;
t21 = t263 * t64 + t267 * t56;
t16 = qJ(6) * t177 + t21;
t442 = t16 * t177;
t441 = t177 * t21;
t44 = qJD(5) * t348 + t189 * t385 - t263 * t295 - t267 * t273;
t440 = t263 * t44;
t439 = t263 * t99;
t438 = t267 * t99;
t383 = qJD(5) * t268;
t388 = qJD(4) * t267;
t437 = -qJD(6) * t268 + (-t263 * t383 - t264 * t388) * pkin(10) - t463 - t472 * qJ(6);
t436 = -t324 * t385 + (-t389 * pkin(10) - t77) * t263 + (t383 * pkin(10) - t475) * t267 + t472 * pkin(5);
t173 = t263 * t340 - t267 * t368;
t406 = t267 * t269;
t174 = (t263 * t265 + t268 * t406) * t393;
t330 = pkin(5) * t263 - qJ(6) * t267;
t321 = pkin(10) + t330;
t331 = pkin(5) * t267 + qJ(6) * t263;
t125 = t264 * t129;
t76 = -pkin(4) * t368 - t205 * t268 + t125;
t435 = -pkin(5) * t173 + qJ(6) * t174 + (t331 * qJD(5) - qJD(6) * t267) * t264 + t321 * t387 - t76;
t372 = t263 * t420;
t160 = t216 * t267 - t372;
t159 = t216 * t263 + t258 * t406;
t79 = qJD(5) * t159 - t267 * t157 - t263 * t364;
t80 = -qJD(5) * t372 + t157 * t263 + t216 * t384 - t267 * t364;
t434 = pkin(5) * t80 + qJ(6) * t79 - qJD(6) * t160 + t431;
t433 = -qJD(6) * t263 + t177 * t330 - t62;
t128 = pkin(4) * t189 + pkin(11) * t187;
t432 = t263 * t128 + t267 * t61;
t429 = t143 * t177;
t428 = t145 * t143;
t427 = t145 * t177;
t425 = t324 * t267;
t255 = t258 ^ 2;
t424 = t255 * t271;
t423 = t258 * t264;
t412 = t263 * t268;
t408 = t266 * t271;
t407 = t267 * t268;
t20 = -t263 * t56 + t267 * t64;
t404 = qJD(6) - t20;
t403 = qJDD(1) - g(3);
t397 = pkin(10) * t407 - t263 * t324;
t256 = t265 ^ 2;
t396 = -t269 ^ 2 + t256;
t390 = qJD(4) * t263;
t376 = 0.2e1 * t261;
t373 = t258 * t418;
t361 = t177 * t385;
t360 = t258 * t261 * t271;
t358 = t269 * t382;
t288 = -t196 * t414 + t220 * t392 - t265 * t357 - t471 * t269;
t42 = t339 * pkin(10) - t288;
t244 = t261 * t381;
t298 = t359 - t378;
t299 = t358 + t380;
t88 = t244 + (pkin(3) * t298 - pkin(10) * t299 - t196) * t258;
t304 = t113 * t389 - t142 * t387 - t264 * t88 - t268 * t42;
t10 = pkin(11) * t295 - t304;
t19 = t110 * pkin(4) - pkin(11) * t273 + t43;
t354 = t263 * t10 - t267 * t19 + t56 * t384 + t64 * t385;
t350 = t113 * t387 + t142 * t389 + t264 * t42 - t268 * t88;
t349 = -t264 * t199 + t200 * t268;
t347 = t269 * t329;
t346 = t177 * t267;
t345 = qJD(4) * t329;
t342 = t258 * t367;
t121 = pkin(4) * t420 - t349;
t333 = t263 * t387 - t173;
t332 = t267 * t387 - t174;
t15 = -pkin(5) * t177 + t404;
t328 = t15 * t267 - t16 * t263;
t119 = t154 * t268 - t264 * t315;
t68 = t119 * t267 + t153 * t263;
t67 = t119 * t263 - t153 * t267;
t326 = t120 * t267 - t122 * t263;
t322 = pkin(4) + t331;
t3 = t267 * t10 + t263 * t19 + t64 * t384 - t56 * t385;
t316 = -t177 * t384 - t439;
t311 = t177 * t55 - t455;
t46 = -t114 * t412 - t115 * t267;
t48 = -t116 * t412 - t117 * t267;
t86 = -t153 * t412 - t154 * t267;
t308 = g(1) * t48 + g(2) * t46 + g(3) * t86;
t47 = -t114 * t407 + t115 * t263;
t49 = -t116 * t407 + t117 * t263;
t87 = -t153 * t407 + t154 * t263;
t307 = -g(1) * t49 - g(2) * t47 - g(3) * t87;
t136 = t213 * t413 - t286;
t137 = -t213 * t414 - t285;
t90 = t137 * t268 + t213 * t423;
t51 = -t136 * t267 + t263 * t90;
t138 = t214 * t413 - t265 * t292;
t139 = -t214 * t414 - t287;
t92 = t139 * t268 + t214 * t423;
t53 = -t138 * t267 + t263 * t92;
t148 = t191 * t268 + t264 * t373;
t94 = t148 * t263 - t190 * t267;
t306 = -g(1) * t53 - g(2) * t51 - g(3) * t94;
t52 = t136 * t263 + t267 * t90;
t54 = t138 * t263 + t267 * t92;
t95 = t148 * t267 + t190 * t263;
t305 = -g(1) * t54 - g(2) * t52 - g(3) * t95;
t102 = t262 * t364 + (qJD(2) * t314 + qJD(3) * t313) * t259;
t103 = t269 * t365 + (t312 * qJD(2) + t464 * qJD(3)) * t259;
t38 = -qJD(4) * t118 + t103 * t268 + t264 * t342;
t12 = t68 * qJD(5) - t102 * t267 + t263 * t38;
t37 = qJD(4) * t119 + t103 * t264 - t268 * t342;
t303 = t118 * t45 - t12 * t177 + t37 * t143 - t67 * t99;
t70 = t115 * t268 + t155 * t264;
t72 = t117 * t268 + t156 * t264;
t301 = -g(1) * t72 - g(2) * t70 - g(3) * t119;
t147 = t191 * t264 - t268 * t373;
t89 = t137 * t264 - t213 * t421;
t91 = t139 * t264 - t214 * t421;
t300 = -g(1) * t91 - g(2) * t89 - g(3) * t147;
t290 = t258 * t315;
t13 = -t67 * qJD(5) + t102 * t263 + t267 * t38;
t284 = t118 * t44 + t13 * t177 - t145 * t37 + t68 * t99;
t31 = -t114 * t267 + t263 * t70;
t33 = -t116 * t267 + t263 * t72;
t283 = g(1) * t33 + g(2) * t31 + g(3) * t67 - t354;
t282 = t290 * t382;
t281 = t177 * t444 - t302;
t11 = -pkin(4) * t295 + t350;
t5 = t45 * pkin(5) + t44 * qJ(6) - t145 * qJD(6) + t11;
t280 = -t281 - t5;
t32 = t114 * t263 + t267 * t70;
t34 = t116 * t263 + t267 * t72;
t279 = -g(1) * t34 - g(2) * t32 - g(3) * t68 + t3;
t277 = t145 * t22 + qJDD(6) - t283;
t276 = t259 * t255 * t408 - qJDD(2) * t290;
t204 = t321 * t264;
t176 = -t230 * t258 + t245;
t166 = t425 + (pkin(10) * t263 + pkin(5)) * t268;
t165 = -qJ(6) * t268 + t397;
t151 = -t196 * t258 + t244;
t75 = pkin(5) * t145 + qJ(6) * t143;
t57 = pkin(5) * t159 - qJ(6) * t160 + t121;
t36 = -pkin(5) * t215 - t326;
t35 = qJ(6) * t215 + t468;
t25 = -pkin(5) * t189 - t128 * t267 + t263 * t61;
t24 = qJ(6) * t189 + t432;
t23 = -t44 + t429;
t2 = qJDD(6) + t354 - t456;
t1 = qJD(6) * t177 + t3 + t443;
t4 = [t403, 0 (qJDD(2) * t270 - t408) * t259 (-qJDD(2) * t266 - t270 * t271) * t259, 0, 0, 0, 0, 0, -t102 * t344 - t153 * t339 - t265 * t282 - t269 * t276, -t103 * t344 - t154 * t339 + t265 * t276 - t269 * t282, 0, 0, 0, 0, 0, t102 * t187 + t153 * t110 - t118 * t295 + t329 * t37, t38 * t329 - t119 * t377 + t102 * t189 + t153 * t278 + (t153 * t355 + (-t119 * t392 + t153 * t294) * qJD(2)) * t258, 0, 0, 0, 0, 0, t303, -t284, t303, t12 * t145 - t13 * t143 - t44 * t67 - t45 * t68, t284, t1 * t68 + t118 * t5 + t12 * t15 + t13 * t16 + t2 * t67 + t22 * t37 - g(3); 0, qJDD(2), g(1) * t292 + g(2) * t291 - g(3) * t417 + t247, g(1) * t214 + g(2) * t213 - t403 * t418 (qJDD(2) * t256 + 0.2e1 * t265 * t358) * t255, 0.2e1 * (t265 * t378 - t396 * t382) * t255 (t265 * qJDD(3) + t457 * t269 + t299 * t376) * t258 (qJDD(3) * t269 - t457 * t265 - t298 * t376) * t258, t339 * t261, t466 * t339 - t318 * t261 - g(1) * t139 - g(2) * t137 - g(3) * t191 + (-t151 * t269 + t176 * t392) * t258 + (-pkin(2) * t298 + t269 * t338) * t255 - t467 * t344, -t398 * t339 + t288 * t261 + g(1) * t138 + g(2) * t136 + g(3) * t190 + (t151 * t265 + t176 * t391) * t258 + (-pkin(2) * t299 - t265 * t338) * t255 + t478 * t344, t189 * t157 + t273 * t216, -t216 * t110 - t157 * t187 - t189 * t158 - t273 * t215, -t157 * t329 + t216 * t377 + ((-t319 + (-t258 * t358 - t323) * t268) * t269 + (-(-qJD(2) * t389 + t379) * t420 + (qJD(2) * t216 + t189) * qJD(3)) * t265) * t258, t158 * t329 - t215 * t377 + (t110 * t269 + (-qJD(2) * t215 - t187) * t392) * t258 (-t377 * t269 + (-t248 - t329) * t392) * t258, -g(1) * t92 - g(2) * t90 - g(3) * t148 + t198 * t110 + t112 * t158 + t467 * t187 + t43 * t215 + t349 * t295 + t473 * t329 + t350 * t420 + t61 * t364, t112 * t157 + t467 * t189 + t198 * t273 + t43 * t216 - t295 * t400 - t304 * t420 + t329 * t479 - t364 * t62 - t300, -t145 * t79 - t160 * t44, t143 * t79 - t145 * t80 + t159 * t44 - t160 * t45, t145 * t158 + t160 * t99 - t177 * t79 - t215 * t44, -t143 * t158 - t159 * t99 - t177 * t80 - t215 * t45, t158 * t177 + t215 * t99, t11 * t159 + t121 * t45 + t431 * t143 + t20 * t158 + t177 * t460 - t215 * t354 + t326 * t99 + t55 * t80 + t305, t11 * t160 - t121 * t44 + t431 * t145 - t21 * t158 + t470 * t177 - t3 * t215 - t468 * t99 - t55 * t79 - t306, t434 * t143 - t15 * t158 + t159 * t5 - t451 * t177 - t2 * t215 + t22 * t80 - t36 * t99 + t45 * t57 + t305, -t1 * t159 - t452 * t143 + t451 * t145 - t15 * t79 - t16 * t80 + t160 * t2 - t35 * t45 - t36 * t44 + t300, t1 * t215 - t434 * t145 + t158 * t16 - t160 * t5 + t452 * t177 + t22 * t79 + t35 * t99 + t44 * t57 + t306, t1 * t35 + t5 * t57 + t2 * t36 - g(1) * (-pkin(2) * t292 + t139 * pkin(3) + t92 * pkin(4) + t54 * pkin(5) + t138 * pkin(10) + t91 * pkin(11) + t53 * qJ(6) + t214 * t450) - g(2) * (-pkin(2) * t291 + t137 * pkin(3) + t90 * pkin(4) + t52 * pkin(5) + t136 * pkin(10) + t89 * pkin(11) + t51 * qJ(6) + t213 * t450) - g(3) * (pkin(3) * t191 + pkin(4) * t148 + pkin(5) * t95 + pkin(10) * t190 + pkin(11) * t147 + qJ(6) * t94 + (pkin(2) * t270 + t266 * t450) * t259) + t434 * t22 + t452 * t16 + t451 * t15; 0, 0, 0, 0, -t265 * t269 * t424, t396 * t424, t258 * t380 - t269 * t360, t265 * t360 + t246, t339, t130 * t344 - t176 * t368 + t296 - t318, g(1) * t117 + g(2) * t115 + g(3) * t154 + t129 * t344 - t176 * t248 + t288 (-qJD(4) * t368 + t339) * t264 ^ 2 + ((t258 * t299 + t323) * t264 - t469) * t268, -t264 * t110 + t465 * t187 + t472 * t189 + t268 * t273, -t268 * t345 + t264 * t377 + (t268 * t347 + (qJD(3) * t264 - t189) * t265) * t393, t264 * t345 + t268 * t377 + (-t264 * t347 + (qJD(3) * t268 + t187) * t265) * t393, t329 * t368, -pkin(3) * t110 - t125 * t329 - t61 * t368 - t130 * t187 + (-pkin(10) * t295 - t112 * t329) * t264 + (pkin(10) * t345 + t205 * t329 - t474) * t268, -pkin(3) * t273 - t130 * t189 - t329 * t401 + t368 * t62 - t465 * t112 + (-t268 * t295 - t329 * t389) * pkin(10) + t474 * t264, -t264 * t267 * t44 + (-t264 * t385 + t332) * t145, t143 * t174 + t145 * t173 + (-t143 * t267 - t145 * t263) * t387 + (t440 - t267 * t45 + (t143 * t263 - t145 * t267) * qJD(5)) * t264, t268 * t44 + t332 * t177 + (-t145 * t329 - t361 + t438) * t264, t268 * t45 - t333 * t177 + (t143 * t329 + t316) * t264, -t177 * t264 * t329 - t268 * t99, -t99 * t425 - t76 * t143 - t55 * t173 + (t475 * t267 + (qJD(5) * t324 + t77) * t263) * t177 + (t55 * t390 + t354 + (qJD(4) * t143 + t316) * pkin(10)) * t268 + (t55 * t384 + t11 * t263 - t329 * t20 + (t177 * t390 + t45) * pkin(10)) * t264 + t307, -t397 * t99 - t76 * t145 - t55 * t174 + t463 * t177 + (t55 * t388 + t3 + (qJD(4) * t145 + t361) * pkin(10)) * t268 + (-t55 * t385 + t11 * t267 + t329 * t21 + (t177 * t388 - t44) * pkin(10)) * t264 + t308, -t166 * t99 + t2 * t268 + t204 * t45 + t333 * t22 - t436 * t177 + t435 * t143 + (t15 * t329 + t22 * t384 + t263 * t5) * t264 + t307, -t15 * t174 + t16 * t173 - t165 * t45 - t166 * t44 + t436 * t145 - t437 * t143 + t328 * t387 + (-t1 * t263 + t2 * t267 + (-t15 * t263 - t16 * t267) * qJD(5) + t296) * t264, -t1 * t268 + t165 * t99 + t204 * t44 - t332 * t22 + t437 * t177 - t435 * t145 + (-t16 * t329 + t22 * t385 - t267 * t5) * t264 - t308, t1 * t165 + t5 * t204 + t2 * t166 - g(1) * (pkin(5) * t49 + pkin(10) * t117 + qJ(6) * t48) - g(2) * (pkin(5) * t47 + pkin(10) * t115 + qJ(6) * t46) - g(3) * (pkin(5) * t87 + pkin(10) * t154 + qJ(6) * t86) + t435 * t22 + t437 * t16 + t436 * t15 + t296 * t324; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t189 * t187, -t187 ^ 2 + t189 ^ 2, -t187 * t329 + t273, -t110 - t469, t295, -t112 * t189 - t329 * t62 + t302 - t350, t112 * t187 - t329 * t61 - t301 + t304, t145 * t346 - t440 (-t44 - t429) * t267 + (-t45 - t427) * t263, -t145 * t189 + t177 * t346 + t439, t143 * t189 - t458 * t263 + t438, -t177 * t189, -pkin(4) * t45 - t62 * t143 - t20 * t189 + (t61 * t177 + t311) * t263 + (-t11 + (-t128 - t444) * t177 + t302) * t267, pkin(4) * t44 + t432 * t177 + t21 * t189 - t62 * t145 + t311 * t267 + (t11 + t281) * t263, t433 * t143 + t15 * t189 + t177 * t25 + t462 * t263 + t280 * t267 - t322 * t45, t143 * t24 - t145 * t25 + (t1 + t177 * t15 + (-t45 + t386) * pkin(11)) * t267 + (t2 - t442 + (qJD(5) * t143 - t44) * pkin(11)) * t263 + t301, -t433 * t145 - t16 * t189 - t177 * t24 + t280 * t263 - t462 * t267 - t322 * t44, -t15 * t25 - t16 * t24 + t433 * t22 + (qJD(5) * t328 + t1 * t267 + t2 * t263 + t301) * pkin(11) + (-t5 + t302) * t322; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t428, -t143 ^ 2 + t459, t23, t427 - t45, t99, -t145 * t55 + t283 + t441, t143 * t55 + t177 * t20 - t279, -t143 * t75 - t277 + t441 + 0.2e1 * t456, pkin(5) * t44 - qJ(6) * t45 + (t16 - t21) * t145 + (t15 - t404) * t143, 0.2e1 * t443 - t143 * t22 + t145 * t75 + (0.2e1 * qJD(6) - t20) * t177 + t279, t1 * qJ(6) - t2 * pkin(5) - t22 * t75 - t15 * t21 - g(1) * (-pkin(5) * t33 + qJ(6) * t34) - g(2) * (-pkin(5) * t31 + qJ(6) * t32) - g(3) * (-pkin(5) * t67 + qJ(6) * t68) + t404 * t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t428 - t99, t23, -t458 - t459, t277 - t442 - t456;];
tau_reg  = t4;
