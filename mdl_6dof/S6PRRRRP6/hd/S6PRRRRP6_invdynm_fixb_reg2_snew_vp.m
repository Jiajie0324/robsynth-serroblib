% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PRRRRP6
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,theta1]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 10:22
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PRRRRP6_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP6_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP6_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PRRRRP6_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PRRRRP6_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRP6_invdynm_fixb_reg2_snew_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 10:19:33
% EndTime: 2019-05-05 10:21:38
% DurationCPUTime: 133.34s
% Computational Cost: add. (605466->1128), mult. (1253927->1667), div. (0->0), fcn. (1018639->14), ass. (0->790)
t2256 = cos(qJ(5));
t2252 = sin(qJ(5));
t2253 = sin(qJ(4));
t2257 = cos(qJ(4));
t2250 = cos(pkin(7));
t2486 = qJD(2) * t2250;
t2418 = qJD(3) + t2486;
t2247 = sin(pkin(7));
t2254 = sin(qJ(3));
t2451 = t2247 * t2254;
t2432 = qJD(2) * t2451;
t2207 = t2253 * t2418 + t2257 * t2432;
t2258 = cos(qJ(3));
t2450 = t2247 * t2258;
t2235 = qJD(2) * t2450;
t2441 = t2235 - qJD(4);
t2177 = t2207 * t2252 + t2256 * t2441;
t2205 = t2253 * t2432 - t2257 * t2418;
t2436 = t2254 * qJDD(2);
t2485 = qJD(3) * qJD(2);
t2212 = (t2258 * t2485 + t2436) * t2247;
t2236 = qJDD(2) * t2250 + qJDD(3);
t2323 = -t2257 * t2212 - t2253 * t2236;
t2154 = -t2205 * qJD(4) - t2323;
t2438 = qJDD(2) * t2258;
t2313 = t2254 * t2485 - t2438;
t2280 = t2313 * t2247;
t2273 = qJDD(4) + t2280;
t2265 = -t2256 * t2154 - t2252 * t2273;
t2073 = -t2177 * qJD(5) - t2265;
t2201 = qJD(5) + t2205;
t2462 = t2177 * t2201;
t2513 = -t2462 + t2073;
t2474 = t2513 * t2252;
t2179 = t2256 * t2207 - t2252 * t2441;
t2416 = -t2252 * t2154 + t2256 * t2273;
t2072 = qJD(5) * t2179 - t2416;
t2147 = t2179 * t2201;
t2519 = t2072 + t2147;
t1933 = -t2519 * t2256 - t2474;
t2176 = t2179 ^ 2;
t2498 = t2177 ^ 2;
t2516 = t2176 - t2498;
t1892 = t1933 * t2253 - t2257 * t2516;
t1894 = t1933 * t2257 + t2253 * t2516;
t1929 = -t2519 * t2252 + t2256 * t2513;
t2368 = t1894 * t2254 - t1929 * t2258;
t1778 = t2250 * t1892 + t2247 * t2368;
t2248 = sin(pkin(6));
t2251 = cos(pkin(6));
t1780 = -t2247 * t1892 + t2250 * t2368;
t1833 = t1894 * t2258 + t1929 * t2254;
t2255 = sin(qJ(2));
t2259 = cos(qJ(2));
t2387 = t1780 * t2259 + t1833 * t2255;
t1686 = -t2248 * t1778 + t2251 * t2387;
t1720 = t1780 * t2255 - t1833 * t2259;
t2246 = sin(pkin(12));
t2249 = cos(pkin(12));
t2685 = t1686 * t2246 + t1720 * t2249;
t2684 = t1686 * t2249 - t1720 * t2246;
t2497 = t2201 ^ 2;
t2139 = t2498 - t2497;
t2126 = t2179 * t2177;
t2415 = -t2253 * t2212 + t2257 * t2236;
t2314 = t2207 * qJD(4) - t2415;
t2152 = qJDD(5) + t2314;
t2517 = t2126 + t2152;
t2542 = t2517 * t2252;
t2008 = t2139 * t2256 - t2542;
t2026 = t2072 - t2147;
t1919 = t2008 * t2253 + t2026 * t2257;
t1923 = t2008 * t2257 - t2026 * t2253;
t2541 = t2517 * t2256;
t2004 = t2139 * t2252 + t2541;
t2358 = t1923 * t2254 - t2004 * t2258;
t1811 = t2250 * t1919 + t2247 * t2358;
t1815 = -t2247 * t1919 + t2250 * t2358;
t1871 = t1923 * t2258 + t2004 * t2254;
t2379 = t1815 * t2259 + t1871 * t2255;
t1712 = -t2248 * t1811 + t2251 * t2379;
t1752 = t1815 * t2255 - t1871 * t2259;
t2683 = t1712 * t2246 + t1752 * t2249;
t2682 = t1712 * t2249 - t1752 * t2246;
t1708 = t2251 * t1811 + t2248 * t2379;
t1684 = t2251 * t1778 + t2248 * t2387;
t2140 = t2176 - t2497;
t2518 = -t2126 + t2152;
t2469 = t2518 * t2252;
t2568 = -t2140 * t2256 + t2469;
t2512 = t2462 + t2073;
t2468 = t2518 * t2256;
t2567 = t2140 * t2252 + t2468;
t2584 = t2253 * t2512 + t2257 * t2567;
t2604 = t2254 * t2568 + t2258 * t2584;
t2588 = t2253 * t2567 - t2257 * t2512;
t2605 = t2254 * t2584 - t2258 * t2568;
t2634 = -t2247 * t2588 + t2250 * t2605;
t2647 = -t2255 * t2634 + t2259 * t2604;
t2637 = t2247 * t2605 + t2250 * t2588;
t2646 = t2255 * t2604 + t2259 * t2634;
t2662 = -t2248 * t2637 + t2251 * t2646;
t2669 = -t2246 * t2662 + t2249 * t2647;
t2668 = t2246 * t2647 + t2249 * t2662;
t2511 = -t2497 - t2498;
t2536 = t2256 * t2511 - t2469;
t2560 = t2253 * t2536 - t2257 * t2519;
t2537 = t2252 * t2511 + t2468;
t2559 = t2253 * t2519 + t2257 * t2536;
t2587 = t2254 * t2559 - t2258 * t2537;
t2611 = t2247 * t2587 + t2250 * t2560;
t2583 = t2254 * t2537 + t2258 * t2559;
t2608 = -t2247 * t2560 + t2250 * t2587;
t2632 = t2255 * t2583 + t2259 * t2608;
t2648 = -t2248 * t2611 + t2251 * t2632;
t2667 = pkin(1) * t2648;
t2649 = t2248 * t2632 + t2251 * t2611;
t2666 = pkin(1) * t2649;
t2663 = t2248 * t2646 + t2251 * t2637;
t2633 = -t2255 * t2608 + t2259 * t2583;
t2661 = qJ(1) * (-t2246 * t2648 + t2249 * t2633);
t2660 = qJ(1) * (t2246 * t2633 + t2249 * t2648);
t2659 = (-t2248 * t2649 - t2251 * t2648) * pkin(8);
t2658 = pkin(8) * t2633;
t2645 = pkin(2) * t2608;
t2644 = pkin(2) * t2611;
t2460 = t2201 * t2252;
t2020 = -t2072 * t2256 + t2177 * t2460;
t2459 = t2201 * t2256;
t2429 = t2177 * t2459;
t2317 = t2072 * t2252 + t2429;
t2431 = t2253 * t2126;
t2503 = t2257 * t2317 - t2431;
t2534 = t2020 * t2254 + t2258 * t2503;
t2430 = t2257 * t2126;
t2504 = t2253 * t2317 + t2430;
t2535 = -t2020 * t2258 + t2254 * t2503;
t2562 = -t2247 * t2504 + t2250 * t2535;
t2586 = -t2255 * t2562 + t2259 * t2534;
t2565 = t2247 * t2535 + t2250 * t2504;
t2582 = t2255 * t2534 + t2259 * t2562;
t2606 = -t2248 * t2565 + t2251 * t2582;
t2639 = -t2246 * t2606 + t2249 * t2586;
t2137 = t2179 * t2460;
t2403 = t2137 - t2429;
t2502 = t2152 * t2253 + t2257 * t2403;
t2520 = (t2177 * t2252 + t2179 * t2256) * t2201;
t2533 = -t2254 * t2520 + t2258 * t2502;
t2507 = -t2257 * t2152 + t2253 * t2403;
t2532 = t2254 * t2502 + t2258 * t2520;
t2563 = -t2247 * t2507 + t2250 * t2532;
t2585 = -t2255 * t2563 + t2259 * t2533;
t2566 = t2247 * t2532 + t2250 * t2507;
t2581 = t2255 * t2533 + t2259 * t2563;
t2607 = -t2248 * t2566 + t2251 * t2581;
t2638 = -t2246 * t2607 + t2249 * t2585;
t2636 = t2246 * t2586 + t2249 * t2606;
t2635 = t2246 * t2585 + t2249 * t2607;
t2631 = (-t2247 * t2611 - t2250 * t2608) * pkin(9);
t2090 = t2497 + t2176;
t1981 = t2090 * t2256 + t2542;
t2630 = pkin(3) * t1981;
t2629 = pkin(4) * t1981;
t2628 = pkin(9) * t2583;
t2627 = pkin(11) * t1981;
t1989 = t2090 * t2252 - t2541;
t2626 = pkin(11) * t1989;
t2625 = t1981 * t2254;
t2624 = t1981 * t2258;
t2623 = t1989 * t2253;
t2622 = t1989 * t2257;
t2610 = t2248 * t2581 + t2251 * t2566;
t2609 = t2248 * t2582 + t2251 * t2565;
t2603 = pkin(3) * t2560;
t2602 = pkin(10) * t2560;
t2591 = -pkin(3) * t2537 + pkin(10) * t2559;
t2023 = t2073 * t2252 + t2179 * t2459;
t2024 = t2073 * t2256 - t2137;
t2404 = t2257 * t2024 + t2431;
t2405 = t2253 * t2024 - t2430;
t2447 = t2250 * t2258;
t2499 = t2250 * t2254 * t2404 - t2023 * t2447 - t2247 * t2405;
t2501 = t2023 * t2254 + t2258 * t2404;
t2530 = -t2255 * t2499 + t2259 * t2501;
t2500 = -t2023 * t2450 + t2250 * t2405 + t2404 * t2451;
t2531 = t2255 * t2501 + t2259 * t2499;
t2561 = -t2248 * t2500 + t2251 * t2531;
t2590 = -t2246 * t2561 + t2249 * t2530;
t2589 = t2246 * t2530 + t2249 * t2561;
t2579 = pkin(4) * t2537;
t2578 = pkin(11) * t2536;
t2577 = pkin(11) * t2537;
t2564 = t2248 * t2531 + t2251 * t2500;
t2515 = t2176 + t2498;
t2558 = pkin(4) * t2515;
t2557 = qJ(6) * t2513;
t2549 = t2253 * t2515;
t2545 = t2257 * t2515;
t2489 = g(3) - qJDD(1);
t2421 = t2248 * t2489;
t2422 = g(1) * t2246 - t2249 * g(2);
t2275 = t2251 * t2422 - t2421;
t2440 = t2249 * g(1) + t2246 * g(2);
t2172 = -t2255 * t2440 - t2259 * t2275;
t2260 = qJD(2) ^ 2;
t2491 = pkin(9) * t2247;
t2264 = qJDD(2) * pkin(2) + t2260 * t2491 - t2172;
t2224 = t2248 * t2422;
t2398 = t2251 * t2489 + t2224;
t2540 = -t2247 * t2398 + t2250 * t2264;
t2191 = t2207 * t2441;
t2539 = t2314 - t2191;
t2192 = t2441 * t2205;
t2408 = t2257 * t2192;
t2411 = t2253 * t2191;
t2131 = t2408 - t2411;
t2538 = t2254 * t2131 - t2258 * t2273;
t2414 = t2418 ^ 2;
t2435 = t2441 ^ 2;
t2529 = qJD(2) * (0.2e1 * qJD(3) + t2486);
t2173 = t2255 * t2275 - t2259 * t2440;
t2115 = t2172 * t2255 + t2173 * t2259;
t2102 = t2115 * t2248;
t2243 = t2247 ^ 2;
t2528 = t2243 * t2258;
t2527 = t2246 * t2489;
t2526 = t2249 * t2489;
t2458 = t2207 * t2205;
t2268 = t2273 - t2458;
t2524 = t2253 * t2268;
t2311 = t2255 * t2398;
t2522 = t2257 * t2268;
t2310 = t2259 * t2398;
t2109 = t2154 + t2192;
t2397 = qJD(2) * t2418;
t2318 = t2247 * t2397;
t2222 = t2254 * t2318;
t2514 = t2222 + t2280;
t2223 = t2258 * t2318;
t2187 = t2223 + t2212;
t2484 = qJD(6) * t2201;
t2195 = 0.2e1 * t2484;
t2162 = -t2260 * pkin(2) + qJDD(2) * t2491 + t2173;
t2060 = t2258 * t2162 + t2254 * t2540;
t2495 = pkin(3) * t2258;
t2413 = -pkin(10) * t2254 - t2495;
t2487 = qJD(2) * t2247;
t2211 = t2413 * t2487;
t2040 = -pkin(3) * t2414 + t2236 * pkin(10) + t2211 * t2235 + t2060;
t2127 = t2247 * t2264 + t2250 * t2398;
t2262 = pkin(3) * t2514 - pkin(10) * t2187 - t2127;
t1949 = t2257 * t2040 + t2253 * t2262;
t2164 = pkin(4) * t2205 - pkin(11) * t2207;
t1907 = -pkin(4) * t2435 + pkin(11) * t2273 - t2205 * t2164 + t1949;
t2442 = t2540 * t2258;
t2039 = -t2236 * pkin(3) - t2414 * pkin(10) + (t2211 * t2487 + t2162) * t2254 - t2442;
t1940 = pkin(4) * t2539 - t2109 * pkin(11) + t2039;
t1840 = t2256 * t1907 + t2252 * t1940;
t2122 = pkin(5) * t2177 - qJ(6) * t2179;
t2396 = -pkin(5) * t2497 + t2152 * qJ(6) - t2177 * t2122 + t1840;
t1807 = t2195 + t2396;
t1839 = t1907 * t2252 - t2256 * t1940;
t1818 = -t2152 * pkin(5) - qJ(6) * t2497 + t2122 * t2179 + qJDD(6) + t1839;
t1729 = t1807 * t2256 + t1818 * t2252;
t1948 = t2253 * t2040 - t2257 * t2262;
t1906 = -t2273 * pkin(4) - t2435 * pkin(11) + t2207 * t2164 + t1948;
t2269 = t2072 * pkin(5) + t1906 - t2557;
t1831 = (pkin(5) * t2201 - 0.2e1 * qJD(6)) * t2179 + t2269;
t2423 = qJ(6) * t2252 + pkin(4);
t2493 = pkin(5) * t2256;
t2510 = -t1831 * (t2423 + t2493) + pkin(11) * t1729;
t2267 = 0.2e1 * qJD(6) * t2179 - t2269;
t1805 = (-t2519 - t2147) * pkin(5) + t2267;
t2509 = t2256 * t1805 - t2423 * t2519 + t2578;
t1804 = -pkin(5) * t2147 + t2267 + t2557;
t2508 = -t2626 + t2252 * t1804 + t2513 * (pkin(4) + t2493);
t2506 = -t2246 * t2422 - t2249 * t2440;
t2505 = -t2246 * t2440 + t2249 * t2422;
t2203 = t2205 ^ 2;
t2204 = t2207 ^ 2;
t2496 = pkin(3) * t2254;
t2494 = pkin(4) * t2253;
t2492 = pkin(8) * t2251;
t2488 = qJ(6) * t2256;
t2483 = t1906 * t2252;
t2482 = t1906 * t2256;
t2476 = t2512 * t2252;
t2475 = t2512 * t2256;
t2473 = t2039 * t2253;
t2472 = t2039 * t2257;
t2142 = -t2273 - t2458;
t2465 = t2142 * t2253;
t2464 = t2142 * t2257;
t2244 = t2254 ^ 2;
t2245 = t2258 ^ 2;
t2439 = t2244 + t2245;
t2193 = t2418 * t2439 * t2487;
t2461 = t2193 * t2255;
t2424 = t2254 * t2258 * t2260;
t2232 = t2243 * t2424;
t2209 = t2232 + t2236;
t2457 = t2209 * t2254;
t2456 = t2209 * t2258;
t2210 = -t2232 + t2236;
t2455 = t2210 * t2254;
t2454 = t2210 * t2258;
t2453 = t2243 * t2260;
t2452 = t2247 * t2236;
t2449 = t2247 * t2259;
t2446 = t2254 * t2127;
t2444 = t2258 * t2127;
t2437 = t2248 * qJDD(2);
t2434 = -pkin(4) * t2257 - pkin(3);
t2428 = t2254 * t2458;
t2427 = t2258 * t2458;
t2426 = t2244 * t2453;
t2425 = t2245 * t2453;
t1755 = t1839 * t2252 + t2256 * t1840;
t1857 = t1948 * t2253 + t2257 * t1949;
t2412 = -pkin(4) * t1906 + pkin(11) * t1755;
t2410 = t2253 * t2192;
t2409 = t2257 * t2191;
t2407 = -pkin(5) * t1818 + qJ(6) * t1807;
t2406 = -pkin(5) * t2512 - qJ(6) * t2026;
t2200 = -t2426 - t2414;
t2161 = -t2200 * t2254 - t2454;
t2402 = pkin(9) * t2161 - t2446;
t2215 = -t2414 - t2425;
t2170 = t2215 * t2258 - t2457;
t2401 = pkin(9) * t2170 + t2444;
t1696 = t1729 * t2253 - t1831 * t2257;
t1697 = t1729 * t2257 + t1831 * t2253;
t1728 = t1807 * t2252 - t1818 * t2256;
t2393 = t1697 * t2254 - t1728 * t2258;
t1642 = -t2247 * t1696 + t2250 * t2393;
t1662 = t1697 * t2258 + t1728 * t2254;
t2395 = t1642 * t2259 + t1662 * t2255;
t1726 = t1755 * t2253 - t1906 * t2257;
t1727 = t1755 * t2257 + t1906 * t2253;
t1754 = -t1839 * t2256 + t1840 * t2252;
t2392 = t1727 * t2254 - t1754 * t2258;
t1658 = -t2247 * t1726 + t2250 * t2392;
t1681 = t1727 * t2258 + t1754 * t2254;
t2394 = t1658 * t2259 + t1681 * t2255;
t1856 = -t1948 * t2257 + t1949 * t2253;
t2374 = t1857 * t2254 - t2039 * t2258;
t1757 = -t2247 * t1856 + t2250 * t2374;
t1829 = t1857 * t2258 + t2039 * t2254;
t2391 = t1757 * t2259 + t1829 * t2255;
t2028 = (-qJD(5) + t2201) * t2179 + t2416;
t1931 = t2028 * t2256 + t2476;
t1880 = t1931 * t2253 + t2545;
t1882 = t1931 * t2257 - t2549;
t1927 = t2028 * t2252 - t2475;
t2371 = t1882 * t2254 - t1927 * t2258;
t1773 = -t2247 * t1880 + t2250 * t2371;
t1822 = t1882 * t2258 + t1927 * t2254;
t2390 = t1773 * t2259 + t1822 * t2255;
t1932 = -t2026 * t2256 + t2476;
t1881 = t1932 * t2253 + t2545;
t1883 = t1932 * t2257 - t2549;
t1928 = -t2026 * t2252 - t2475;
t2370 = t1883 * t2254 - t1928 * t2258;
t1774 = -t2247 * t1881 + t2250 * t2370;
t1823 = t1883 * t2258 + t1928 * t2254;
t2389 = t1774 * t2259 + t1823 * t2255;
t1901 = t2257 * t2513 - t2623;
t1903 = -t2253 * t2513 - t2622;
t2366 = t1903 * t2254 - t2624;
t1793 = -t2247 * t1901 + t2250 * t2366;
t1852 = t1903 * t2258 + t2625;
t2386 = t1793 * t2259 + t1852 * t2255;
t2033 = (qJD(5) + t2201) * t2177 + t2265;
t1910 = t2033 * t2257 + t2623;
t1912 = -t2033 * t2253 + t2622;
t2363 = t1912 * t2254 + t2624;
t1800 = -t2247 * t1910 + t2250 * t2363;
t1863 = t1912 * t2258 - t2625;
t2384 = t1800 * t2259 + t1863 * t2255;
t2108 = -t2207 * t2235 + t2415;
t2110 = t2154 - t2192;
t2035 = t2108 * t2253 - t2110 * t2257;
t2037 = t2108 * t2257 + t2110 * t2253;
t2136 = t2203 + t2204;
t2345 = t2037 * t2254 + t2136 * t2258;
t1899 = -t2247 * t2035 + t2250 * t2345;
t1974 = t2037 * t2258 - t2136 * t2254;
t2367 = t1899 * t2259 + t1974 * t2255;
t2034 = t2109 * t2257 - t2253 * t2539;
t2036 = -t2109 * t2253 - t2257 * t2539;
t2166 = t2204 - t2203;
t2346 = t2036 * t2254 - t2166 * t2258;
t1909 = -t2247 * t2034 + t2250 * t2346;
t1986 = t2036 * t2258 + t2166 * t2254;
t2364 = t1909 * t2259 + t1986 * t2255;
t2059 = t2254 * t2162 - t2442;
t2343 = -t2258 * t2059 + t2254 * t2060;
t1937 = t2247 * t2127 + t2250 * t2343;
t1971 = t2059 * t2254 + t2060 * t2258;
t2357 = t1937 * t2259 + t1971 * t2255;
t2159 = -t2435 - t2203;
t2069 = t2159 * t2253 + t2522;
t2070 = t2159 * t2257 - t2524;
t2342 = t2070 * t2254 - t2258 * t2539;
t1942 = -t2247 * t2069 + t2250 * t2342;
t1997 = t2070 * t2258 + t2254 * t2539;
t2356 = t1942 * t2259 + t1997 * t2255;
t2167 = -t2204 - t2435;
t2079 = t2167 * t2257 + t2465;
t2080 = -t2167 * t2253 + t2464;
t2111 = (0.2e1 * qJD(4) - t2235) * t2205 + t2323;
t2341 = t2080 * t2254 + t2111 * t2258;
t1951 = -t2247 * t2079 + t2250 * t2341;
t2000 = t2080 * t2258 - t2111 * t2254;
t2355 = t1951 * t2259 + t2000 * t2255;
t2185 = -t2204 + t2435;
t2085 = t2185 * t2257 + t2524;
t2087 = -t2185 * t2253 + t2522;
t2340 = t2087 * t2254 - t2110 * t2258;
t1954 = -t2247 * t2085 + t2250 * t2340;
t2009 = t2087 * t2258 + t2110 * t2254;
t2354 = t1954 * t2259 + t2009 * t2255;
t2184 = t2203 - t2435;
t2086 = t2184 * t2253 - t2464;
t2088 = t2184 * t2257 + t2465;
t2106 = t2191 + t2314;
t2339 = t2088 * t2254 + t2106 * t2258;
t1955 = -t2247 * t2086 + t2250 * t2339;
t2010 = t2088 * t2258 - t2106 * t2254;
t2353 = t1955 * t2259 + t2010 * t2255;
t2098 = -t2257 * t2314 - t2410;
t2099 = t2253 * t2314 - t2408;
t2316 = t2099 * t2254 + t2427;
t1977 = -t2247 * t2098 + t2250 * t2316;
t2052 = t2099 * t2258 - t2428;
t2350 = t1977 * t2259 + t2052 * t2255;
t2100 = t2253 * t2154 - t2409;
t2101 = t2257 * t2154 + t2411;
t2315 = t2101 * t2254 - t2427;
t1978 = -t2247 * t2100 + t2250 * t2315;
t2053 = t2101 * t2258 + t2428;
t2349 = t1978 * t2259 + t2053 * t2255;
t2130 = t2410 + t2409;
t2044 = -t2247 * t2130 + t2250 * t2538;
t2097 = t2258 * t2131 + t2254 * t2273;
t2344 = t2044 * t2259 + t2097 * t2255;
t2221 = t2439 * t2453;
t2188 = -t2223 + t2212;
t2189 = t2222 - t2280;
t2328 = -t2188 * t2258 + t2189 * t2254;
t2095 = t2247 * t2221 + t2250 * t2328;
t2128 = t2188 * t2254 + t2189 * t2258;
t2338 = t2095 * t2259 + t2128 * t2255;
t2220 = (t2244 - t2245) * t2453;
t2329 = t2187 * t2258 - t2254 * t2514;
t2096 = -t2247 * t2220 + t2250 * t2329;
t2129 = -t2187 * t2254 - t2258 * t2514;
t2337 = t2096 * t2259 + t2129 * t2255;
t2186 = (t2258 * t2529 + t2436) * t2247;
t2327 = t2200 * t2258 - t2455;
t2105 = -t2247 * t2186 + t2250 * t2327;
t2336 = t2105 * t2259 + t2161 * t2255;
t2213 = t2414 - t2426;
t2326 = t2213 * t2258 + t2457;
t2119 = -t2247 * t2188 + t2250 * t2326;
t2168 = -t2213 * t2254 + t2456;
t2335 = t2119 * t2259 + t2168 * t2255;
t2214 = -t2414 + t2425;
t2324 = t2214 * t2254 + t2454;
t2120 = -t2247 * t2189 + t2250 * t2324;
t2169 = t2214 * t2258 - t2455;
t2334 = t2120 * t2259 + t2169 * t2255;
t2325 = t2215 * t2254 + t2456;
t2121 = -t2247 * t2514 + t2250 * t2325;
t2333 = t2121 * t2259 + t2170 * t2255;
t2242 = t2247 * t2243;
t2155 = -t2242 * t2424 + (-t2254 * t2529 + t2438) * t2247 * t2447;
t2180 = (-t2245 * t2397 + t2254 * t2313) * t2247;
t2332 = t2155 * t2259 + t2180 * t2255;
t2158 = (t2250 * t2212 + (t2242 * t2260 + t2250 * t2318) * t2258) * t2254;
t2181 = t2258 * t2212 - t2244 * t2318;
t2331 = t2158 * t2259 + t2181 * t2255;
t2114 = t2259 * t2172 - t2255 * t2173;
t2320 = qJDD(2) * t2255 + t2259 * t2260;
t2218 = t2320 * t2251;
t2230 = qJDD(2) * t2259 - t2255 * t2260;
t2322 = t2218 * t2249 + t2230 * t2246;
t2321 = t2218 * t2246 - t2230 * t2249;
t2309 = -pkin(4) * t2519 - t2482 + t2578;
t2308 = pkin(4) * t2033 + t2483 + t2626;
t1669 = -pkin(4) * t1728 - t2407;
t1673 = -pkin(11) * t1728 + (pkin(5) * t2252 - t2488) * t1831;
t1628 = -pkin(3) * t1728 + pkin(10) * t1697 + t1669 * t2257 + t1673 * t2253;
t1641 = t2250 * t1696 + t2247 * t2393;
t1635 = -pkin(10) * t1696 - t1669 * t2253 + t1673 * t2257;
t1649 = -pkin(3) * t1696 - t2510;
t2291 = pkin(9) * t1662 + t1635 * t2254 + t1649 * t2258;
t1595 = -pkin(2) * t1641 - t2247 * t1628 + t2250 * t2291;
t1602 = t2258 * t1635 - t2254 * t1649 + (-t1641 * t2247 - t1642 * t2250) * pkin(9);
t1627 = -t1642 * t2255 + t1662 * t2259;
t2307 = pkin(8) * t1627 + t1595 * t2259 + t1602 * t2255;
t1651 = pkin(10) * t1727 + (-pkin(11) * t2253 + t2434) * t1754;
t1657 = t2250 * t1726 + t2247 * t2392;
t1660 = -pkin(10) * t1726 + (-pkin(11) * t2257 + t2494) * t1754;
t1668 = -pkin(3) * t1726 - t2412;
t2290 = pkin(9) * t1681 + t1660 * t2254 + t1668 * t2258;
t1610 = -pkin(2) * t1657 - t2247 * t1651 + t2250 * t2290;
t1615 = t2258 * t1660 - t2254 * t1668 + (-t1657 * t2247 - t1658 * t2250) * pkin(9);
t1637 = -t1658 * t2255 + t1681 * t2259;
t2306 = pkin(8) * t1637 + t1610 * t2259 + t1615 * t2255;
t1790 = pkin(5) * t2515 + t1807;
t1795 = qJ(6) * t2515 + t1818;
t1713 = -pkin(11) * t1928 - t1790 * t2252 + t1795 * t2256;
t1849 = -pkin(4) * t1928 - t2406;
t1667 = -pkin(3) * t1928 + pkin(10) * t1883 + t1713 * t2253 + t1849 * t2257;
t1772 = t2250 * t1881 + t2247 * t2370;
t1672 = -pkin(10) * t1881 + t1713 * t2257 - t1849 * t2253;
t2272 = pkin(11) * t1932 + t1790 * t2256 + t1795 * t2252 + t2558;
t1690 = -pkin(3) * t1881 - t2272;
t2289 = pkin(9) * t1823 + t1672 * t2254 + t1690 * t2258;
t1626 = -pkin(2) * t1772 - t2247 * t1667 + t2250 * t2289;
t1636 = t2258 * t1672 - t2254 * t1690 + (-t1772 * t2247 - t1774 * t2250) * pkin(9);
t1719 = -t1774 * t2255 + t1823 * t2259;
t2305 = pkin(8) * t1719 + t1626 * t2259 + t1636 * t2255;
t2271 = pkin(5) * t2090 + qJ(6) * t2517 + t2396;
t1759 = -t2271 - 0.2e1 * t2484 - t2629;
t1761 = -pkin(5) * t2474 + t1804 * t2256 - t2627;
t1680 = pkin(10) * t1903 + t1759 * t2257 + t1761 * t2253 - t2630;
t1791 = t2250 * t1901 + t2247 * t2366;
t1687 = -pkin(10) * t1901 - t1759 * t2253 + t1761 * t2257;
t1724 = -pkin(3) * t1901 - t2508;
t2288 = pkin(9) * t1852 + t1687 * t2254 + t1724 * t2258;
t1630 = -pkin(2) * t1791 - t2247 * t1680 + t2250 * t2288;
t1643 = t2258 * t1687 - t2254 * t1724 + (-t1791 * t2247 - t1793 * t2250) * pkin(9);
t1742 = -t1793 * t2255 + t1852 * t2259;
t2304 = pkin(8) * t1742 + t1630 * t2259 + t1643 * t2255;
t1738 = -pkin(11) * t1927 - t1754;
t1691 = pkin(10) * t1882 + t2253 * t1738 + t1927 * t2434;
t1771 = t2250 * t1880 + t2247 * t2371;
t1698 = -pkin(10) * t1880 + t1738 * t2257 + t1927 * t2494;
t2278 = pkin(11) * t1931 + t1755 + t2558;
t1714 = -pkin(3) * t1880 - t2278;
t2286 = pkin(9) * t1822 + t1698 * t2254 + t1714 * t2258;
t1632 = -pkin(2) * t1771 - t2247 * t1691 + t2250 * t2286;
t1640 = t2258 * t1698 - t2254 * t1714 + (-t1771 * t2247 - t1773 * t2250) * pkin(9);
t1718 = -t1773 * t2255 + t1822 * t2259;
t2303 = pkin(8) * t1718 + t1632 * t2259 + t1640 * t2255;
t1762 = -t1805 * t2252 - t2488 * t2519 - t2577;
t2266 = pkin(5) * t2518 + qJ(6) * t2511 - t1818;
t1763 = -t2266 - t2579;
t1682 = t1762 * t2253 + t1763 * t2257 + t2591;
t1689 = t1762 * t2257 - t1763 * t2253 - t2602;
t1725 = -t2509 - t2603;
t2287 = t1689 * t2254 + t1725 * t2258 + t2628;
t1634 = -t2247 * t1682 + t2250 * t2287 - t2644;
t1646 = t2258 * t1689 - t2254 * t1725 + t2631;
t2302 = t1634 * t2259 + t1646 * t2255 + t2658;
t1803 = t1839 - t2579;
t1854 = t2483 - t2577;
t1715 = t1803 * t2257 + t1854 * t2253 + t2591;
t1722 = -t1803 * t2253 + t1854 * t2257 - t2602;
t1781 = -t2309 - t2603;
t2285 = t1722 * t2254 + t1781 * t2258 + t2628;
t1645 = -t2247 * t1715 + t2250 * t2285 - t2644;
t1656 = t2258 * t1722 - t2254 * t1781 + t2631;
t2301 = t1645 * t2259 + t1656 * t2255 + t2658;
t1806 = t1840 + t2629;
t1858 = t2482 + t2627;
t1717 = pkin(10) * t1912 + t1806 * t2257 + t1858 * t2253 + t2630;
t1798 = t2250 * t1910 + t2247 * t2363;
t1723 = -pkin(10) * t1910 - t1806 * t2253 + t1858 * t2257;
t1782 = -pkin(3) * t1910 - t2308;
t2284 = pkin(9) * t1863 + t1723 * t2254 + t1782 * t2258;
t1648 = -pkin(2) * t1798 - t2247 * t1717 + t2250 * t2284;
t1659 = t2258 * t1723 - t2254 * t1782 + (-t1798 * t2247 - t1800 * t2250) * pkin(9);
t1746 = -t1800 * t2255 + t1863 * t2259;
t2300 = pkin(8) * t1746 + t1648 * t2259 + t1659 * t2255;
t1756 = t2250 * t1856 + t2247 * t2374;
t1830 = -pkin(3) * t2039 + pkin(10) * t1857;
t2276 = pkin(9) * t1829 + t1856 * t2413;
t1665 = -pkin(2) * t1756 - t2247 * t1830 + t2250 * t2276;
t1666 = (-pkin(10) * t2258 + t2496) * t1856 + (-t1756 * t2247 - t1757 * t2250) * pkin(9);
t1716 = -t1757 * t2255 + t1829 * t2259;
t2299 = pkin(8) * t1716 + t1665 * t2259 + t1666 * t2255;
t1821 = pkin(3) * t2136 + pkin(10) * t2037 + t1857;
t1898 = t2250 * t2035 + t2247 * t2345;
t1828 = -pkin(10) * t2035 - t1856;
t2279 = pkin(9) * t1974 + t1828 * t2254 - t2035 * t2495;
t1704 = -pkin(2) * t1898 - t2247 * t1821 + t2250 * t2279;
t1739 = t2035 * t2496 + t2258 * t1828 + (-t1898 * t2247 - t1899 * t2250) * pkin(9);
t1851 = -t1899 * t2255 + t1974 * t2259;
t2298 = pkin(8) * t1851 + t1704 * t2259 + t1739 * t2255;
t1924 = -pkin(3) * t2539 + pkin(10) * t2070 - t2472;
t1941 = t2250 * t2069 + t2247 * t2342;
t1895 = -pkin(3) * t2069 + t1948;
t1956 = -pkin(10) * t2069 + t2473;
t2283 = pkin(9) * t1997 + t1895 * t2258 + t1956 * t2254;
t1745 = -pkin(2) * t1941 - t2247 * t1924 + t2250 * t2283;
t1760 = -t2254 * t1895 + t2258 * t1956 + (-t1941 * t2247 - t1942 * t2250) * pkin(9);
t1872 = -t1942 * t2255 + t1997 * t2259;
t2297 = pkin(8) * t1872 + t1745 * t2259 + t1760 * t2255;
t1925 = pkin(3) * t2111 + pkin(10) * t2080 + t2473;
t1950 = t2250 * t2079 + t2247 * t2341;
t1900 = -pkin(3) * t2079 + t1949;
t1957 = -pkin(10) * t2079 + t2472;
t2282 = pkin(9) * t2000 + t1900 * t2258 + t1957 * t2254;
t1749 = -pkin(2) * t1950 - t2247 * t1925 + t2250 * t2282;
t1770 = -t2254 * t1900 + t2258 * t1957 + (-t1950 * t2247 - t1951 * t2250) * pkin(9);
t1873 = -t1951 * t2255 + t2000 * t2259;
t2296 = pkin(8) * t1873 + t1749 * t2259 + t1770 * t2255;
t1936 = -t2250 * t2127 + t2247 * t2343;
t1850 = (-t1936 * t2247 - t1937 * t2250) * pkin(9);
t1865 = -t1937 * t2255 + t1971 * t2259;
t1866 = pkin(9) * t1971 * t2250 - pkin(2) * t1936;
t2295 = pkin(8) * t1865 + t1850 * t2255 + t1866 * t2259;
t2093 = -t2250 * t2221 + t2247 * t2328;
t1884 = (-t2093 * t2247 - t2095 * t2250) * pkin(9) - t2343;
t2281 = pkin(9) * t2128 + t1971;
t1897 = -pkin(2) * t2093 + t2250 * t2281;
t2041 = -t2095 * t2255 + t2128 * t2259;
t2294 = pkin(8) * t2041 + t1884 * t2255 + t1897 * t2259;
t2104 = t2250 * t2186 + t2247 * t2327;
t1935 = -pkin(2) * t2104 + t2247 * t2060 + t2250 * t2402;
t1972 = -t2444 + (-t2104 * t2247 - t2105 * t2250) * pkin(9);
t2051 = -t2105 * t2255 + t2161 * t2259;
t2293 = pkin(8) * t2051 + t1935 * t2259 + t1972 * t2255;
t2118 = t2247 * t2325 + t2250 * t2514;
t1944 = -pkin(2) * t2118 + t2247 * t2059 + t2250 * t2401;
t1973 = -t2446 + (-t2118 * t2247 - t2121 * t2250) * pkin(9);
t2063 = -t2121 * t2255 + t2170 * t2259;
t2292 = pkin(8) * t2063 + t1944 * t2259 + t1973 * t2255;
t2277 = -t2250 * t2260 + t2397;
t2237 = t2251 * qJDD(2);
t2219 = t2230 * t2251;
t2217 = t2230 * t2248;
t2216 = t2320 * t2248;
t2183 = -t2219 * t2246 - t2249 * t2320;
t2182 = t2219 * t2249 - t2246 * t2320;
t2163 = t2193 * t2259 + t2255 * t2452;
t2157 = (t2247 * t2212 + t2277 * t2528) * t2254;
t2156 = (-t2254 * t2277 - t2313) * t2528;
t2135 = -t2310 + (t2216 * t2248 + t2218 * t2251) * pkin(8);
t2134 = -t2311 + (-t2217 * t2248 - t2219 * t2251) * pkin(8);
t2133 = t2251 * t2461 + (-t2248 * t2250 - t2251 * t2449) * t2236;
t2132 = t2248 * t2461 + (-t2248 * t2449 + t2250 * t2251) * t2236;
t2117 = t2250 * t2189 + t2247 * t2324;
t2116 = t2250 * t2188 + t2247 * t2326;
t2103 = t2115 * t2251;
t2094 = t2250 * t2220 + t2247 * t2329;
t2092 = -t2158 * t2255 + t2181 * t2259;
t2091 = -t2155 * t2255 + t2180 * t2259;
t2084 = -pkin(1) * t2217 + t2248 * t2172 + t2251 * t2310 - t2320 * t2492;
t2083 = pkin(1) * t2216 + t2248 * t2173 - t2230 * t2492 - t2251 * t2311;
t2082 = pkin(1) * t2219 - t2251 * t2172 + (-pkin(8) * t2320 + t2310) * t2248;
t2081 = -pkin(1) * t2218 - t2251 * t2173 + (-pkin(8) * t2230 - t2311) * t2248;
t2078 = t2248 * t2224 + (t2421 - t2114) * t2251;
t2077 = -t2114 * t2248 - t2251 * t2398;
t2062 = -t2120 * t2255 + t2169 * t2259;
t2061 = -t2119 * t2255 + t2168 * t2259;
t2048 = -t2248 * t2157 + t2251 * t2331;
t2047 = -t2248 * t2156 + t2251 * t2332;
t2046 = t2251 * t2157 + t2248 * t2331;
t2045 = t2251 * t2156 + t2248 * t2332;
t2043 = t2250 * t2130 + t2247 * t2538;
t2042 = -t2096 * t2255 + t2129 * t2259;
t1999 = pkin(1) * t2078 + pkin(8) * t2102;
t1998 = -pkin(1) * t2077 + t2115 * t2492;
t1996 = -t2248 * t2118 + t2251 * t2333;
t1995 = -t2248 * t2117 + t2251 * t2334;
t1994 = -t2248 * t2116 + t2251 * t2335;
t1993 = t2251 * t2118 + t2248 * t2333;
t1992 = t2251 * t2117 + t2248 * t2334;
t1991 = t2251 * t2116 + t2248 * t2335;
t1985 = (-t2077 * t2248 - t2078 * t2251) * pkin(8);
t1980 = -t2248 * t2104 + t2251 * t2336;
t1979 = t2251 * t2104 + t2248 * t2336;
t1976 = t2250 * t2100 + t2247 * t2315;
t1975 = t2250 * t2098 + t2247 * t2316;
t1962 = -t2044 * t2255 + t2097 * t2259;
t1961 = -t2248 * t2094 + t2251 * t2337;
t1960 = -t2248 * t2093 + t2251 * t2338;
t1959 = t2251 * t2094 + t2248 * t2337;
t1958 = t2251 * t2093 + t2248 * t2338;
t1953 = t2250 * t2086 + t2247 * t2339;
t1952 = t2250 * t2085 + t2247 * t2340;
t1943 = pkin(2) * t2121 - t2250 * t2059 + t2247 * t2401;
t1934 = pkin(2) * t2105 - t2250 * t2060 + t2247 * t2402;
t1915 = -t1978 * t2255 + t2053 * t2259;
t1914 = -t1977 * t2255 + t2052 * t2259;
t1908 = t2250 * t2034 + t2247 * t2346;
t1896 = pkin(2) * t2095 + t2247 * t2281;
t1890 = -t2248 * t2043 + t2251 * t2344;
t1889 = t2251 * t2043 + t2248 * t2344;
t1879 = -t1955 * t2255 + t2010 * t2259;
t1878 = -t1954 * t2255 + t2009 * t2259;
t1867 = pkin(2) * t1937 + t1971 * t2491;
t1862 = -t2248 * t1976 + t2251 * t2349;
t1861 = -t2248 * t1975 + t2251 * t2350;
t1860 = t2251 * t1976 + t2248 * t2349;
t1859 = t2251 * t1975 + t2248 * t2350;
t1855 = -t1909 * t2255 + t1986 * t2259;
t1837 = -t2248 * t1953 + t2251 * t2353;
t1836 = -t2248 * t1952 + t2251 * t2354;
t1835 = t2251 * t1953 + t2248 * t2353;
t1834 = t2251 * t1952 + t2248 * t2354;
t1825 = -t2248 * t1950 + t2251 * t2355;
t1824 = t2251 * t1950 + t2248 * t2355;
t1820 = -t2248 * t1941 + t2251 * t2356;
t1819 = t2251 * t1941 + t2248 * t2356;
t1817 = -t2248 * t1936 + t2251 * t2357;
t1816 = t2251 * t1936 + t2248 * t2357;
t1802 = -t2255 * t1944 + t2259 * t1973 + (-t1993 * t2248 - t1996 * t2251) * pkin(8);
t1797 = -t2248 * t1908 + t2251 * t2364;
t1796 = t2251 * t1908 + t2248 * t2364;
t1789 = -t2255 * t1935 + t2259 * t1972 + (-t1979 * t2248 - t1980 * t2251) * pkin(8);
t1788 = -t2248 * t1898 + t2251 * t2367;
t1787 = t2251 * t1898 + t2248 * t2367;
t1776 = -pkin(1) * t1993 - t2248 * t1943 + t2251 * t2292;
t1775 = pkin(1) * t1996 + t2251 * t1943 + t2248 * t2292;
t1769 = -pkin(1) * t1979 - t2248 * t1934 + t2251 * t2293;
t1768 = pkin(1) * t1980 + t2251 * t1934 + t2248 * t2293;
t1758 = t2259 * t1884 - t2255 * t1897 + (-t1958 * t2248 - t1960 * t2251) * pkin(8);
t1748 = pkin(2) * t1951 + t2250 * t1925 + t2247 * t2282;
t1744 = pkin(2) * t1942 + t2250 * t1924 + t2247 * t2283;
t1741 = -pkin(1) * t1958 - t2248 * t1896 + t2251 * t2294;
t1740 = pkin(1) * t1960 + t2251 * t1896 + t2248 * t2294;
t1703 = pkin(2) * t1899 + t2250 * t1821 + t2247 * t2279;
t1701 = -t2248 * t1798 + t2251 * t2384;
t1699 = t2251 * t1798 + t2248 * t2384;
t1694 = -t2248 * t1791 + t2251 * t2386;
t1692 = t2251 * t1791 + t2248 * t2386;
t1688 = t2259 * t1850 - t2255 * t1866 + (-t1816 * t2248 - t1817 * t2251) * pkin(8);
t1679 = -t2248 * t1772 + t2251 * t2389;
t1678 = -t2248 * t1771 + t2251 * t2390;
t1677 = t2251 * t1772 + t2248 * t2389;
t1676 = t2251 * t1771 + t2248 * t2390;
t1675 = -pkin(1) * t1816 - t2248 * t1867 + t2251 * t2295;
t1674 = pkin(1) * t1817 + t2251 * t1867 + t2248 * t2295;
t1671 = -t2248 * t1756 + t2251 * t2391;
t1670 = t2251 * t1756 + t2248 * t2391;
t1664 = pkin(2) * t1757 + t2250 * t1830 + t2247 * t2276;
t1663 = -t2255 * t1749 + t2259 * t1770 + (-t1824 * t2248 - t1825 * t2251) * pkin(8);
t1661 = -t2255 * t1745 + t2259 * t1760 + (-t1819 * t2248 - t1820 * t2251) * pkin(8);
t1655 = -pkin(1) * t1824 - t2248 * t1748 + t2251 * t2296;
t1654 = pkin(1) * t1825 + t2251 * t1748 + t2248 * t2296;
t1653 = -pkin(1) * t1819 - t2248 * t1744 + t2251 * t2297;
t1652 = pkin(1) * t1820 + t2251 * t1744 + t2248 * t2297;
t1650 = -t2255 * t1704 + t2259 * t1739 + (-t1787 * t2248 - t1788 * t2251) * pkin(8);
t1647 = pkin(2) * t1800 + t2250 * t1717 + t2247 * t2284;
t1644 = t2250 * t1715 + t2247 * t2285 + t2645;
t1639 = -pkin(1) * t1787 - t2248 * t1703 + t2251 * t2298;
t1638 = pkin(1) * t1788 + t2251 * t1703 + t2248 * t2298;
t1633 = t2250 * t1682 + t2247 * t2287 + t2645;
t1631 = pkin(2) * t1773 + t2250 * t1691 + t2247 * t2286;
t1629 = pkin(2) * t1793 + t2250 * t1680 + t2247 * t2288;
t1625 = pkin(2) * t1774 + t2250 * t1667 + t2247 * t2289;
t1624 = -t2248 * t1657 + t2251 * t2394;
t1623 = t2251 * t1657 + t2248 * t2394;
t1622 = -t2255 * t1665 + t2259 * t1666 + (-t1670 * t2248 - t1671 * t2251) * pkin(8);
t1621 = -t2255 * t1648 + t2259 * t1659 + (-t1699 * t2248 - t1701 * t2251) * pkin(8);
t1620 = -t2255 * t1645 + t2259 * t1656 + t2659;
t1619 = -pkin(1) * t1670 - t2248 * t1664 + t2251 * t2299;
t1618 = pkin(1) * t1671 + t2251 * t1664 + t2248 * t2299;
t1617 = -t2248 * t1641 + t2251 * t2395;
t1616 = t2251 * t1641 + t2248 * t2395;
t1614 = -t2255 * t1634 + t2259 * t1646 + t2659;
t1613 = -t2255 * t1630 + t2259 * t1643 + (-t1692 * t2248 - t1694 * t2251) * pkin(8);
t1612 = -pkin(1) * t1699 - t2248 * t1647 + t2251 * t2300;
t1611 = pkin(1) * t1701 + t2251 * t1647 + t2248 * t2300;
t1609 = pkin(2) * t1658 + t2250 * t1651 + t2247 * t2290;
t1608 = -t2248 * t1644 + t2251 * t2301 - t2666;
t1607 = t2251 * t1644 + t2248 * t2301 + t2667;
t1606 = -t2255 * t1632 + t2259 * t1640 + (-t1676 * t2248 - t1678 * t2251) * pkin(8);
t1605 = -t2255 * t1626 + t2259 * t1636 + (-t1677 * t2248 - t1679 * t2251) * pkin(8);
t1604 = -t2248 * t1633 + t2251 * t2302 - t2666;
t1603 = t2251 * t1633 + t2248 * t2302 + t2667;
t1601 = -pkin(1) * t1692 - t2248 * t1629 + t2251 * t2304;
t1600 = pkin(1) * t1694 + t2251 * t1629 + t2248 * t2304;
t1599 = -pkin(1) * t1676 - t2248 * t1631 + t2251 * t2303;
t1598 = pkin(1) * t1678 + t2251 * t1631 + t2248 * t2303;
t1597 = -pkin(1) * t1677 - t2248 * t1625 + t2251 * t2305;
t1596 = pkin(1) * t1679 + t2251 * t1625 + t2248 * t2305;
t1594 = pkin(2) * t1642 + t2250 * t1628 + t2247 * t2291;
t1593 = -t2255 * t1610 + t2259 * t1615 + (-t1623 * t2248 - t1624 * t2251) * pkin(8);
t1592 = -pkin(1) * t1623 - t2248 * t1609 + t2251 * t2306;
t1591 = pkin(1) * t1624 + t2251 * t1609 + t2248 * t2306;
t1590 = -t2255 * t1595 + t2259 * t1602 + (-t1616 * t2248 - t1617 * t2251) * pkin(8);
t1589 = -pkin(1) * t1616 - t2248 * t1594 + t2251 * t2307;
t1588 = pkin(1) * t1617 + t2251 * t1594 + t2248 * t2307;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t2527, -t2526, -t2505, -qJ(1) * t2505, 0, 0, -t2321, 0, t2183, t2246 * t2437, -qJ(1) * t2182 - t2084 * t2246 + t2134 * t2249, qJ(1) * t2322 - t2246 * t2083 + t2249 * t2135, -t2103 * t2246 + t2114 * t2249, t2249 * t1985 - t2246 * t1998 - qJ(1) * (t2078 * t2249 + t2115 * t2246), -t2048 * t2246 + t2092 * t2249, -t1961 * t2246 + t2042 * t2249, -t1994 * t2246 + t2061 * t2249, -t2047 * t2246 + t2091 * t2249, -t1995 * t2246 + t2062 * t2249, -t2133 * t2246 + t2163 * t2249, t2249 * t1802 - t2246 * t1776 - qJ(1) * (t1996 * t2249 + t2063 * t2246), t2249 * t1789 - t2246 * t1769 - qJ(1) * (t1980 * t2249 + t2051 * t2246), t2249 * t1758 - t2246 * t1741 - qJ(1) * (t1960 * t2249 + t2041 * t2246), t2249 * t1688 - t2246 * t1675 - qJ(1) * (t1817 * t2249 + t1865 * t2246), -t1862 * t2246 + t1915 * t2249, -t1797 * t2246 + t1855 * t2249, -t1836 * t2246 + t1878 * t2249, -t1861 * t2246 + t1914 * t2249, -t1837 * t2246 + t1879 * t2249, -t1890 * t2246 + t1962 * t2249, t2249 * t1661 - t2246 * t1653 - qJ(1) * (t1820 * t2249 + t1872 * t2246), t2249 * t1663 - t2246 * t1655 - qJ(1) * (t1825 * t2249 + t1873 * t2246), t2249 * t1650 - t2246 * t1639 - qJ(1) * (t1788 * t2249 + t1851 * t2246), t2249 * t1622 - t2246 * t1619 - qJ(1) * (t1671 * t2249 + t1716 * t2246), t2590, -t2685, t2669, t2639, -t2683, t2638, -t2246 * t1608 + t2249 * t1620 - t2660, t2249 * t1621 - t2246 * t1612 - qJ(1) * (t1701 * t2249 + t1746 * t2246), t2249 * t1606 - t2246 * t1599 - qJ(1) * (t1678 * t2249 + t1718 * t2246), t2249 * t1593 - t2246 * t1592 - qJ(1) * (t1624 * t2249 + t1637 * t2246), t2590, t2669, t2685, t2638, t2683, t2639, -t2246 * t1604 + t2249 * t1614 - t2660, t2249 * t1605 - t2246 * t1597 - qJ(1) * (t1679 * t2249 + t1719 * t2246), t2249 * t1613 - t2246 * t1601 - qJ(1) * (t1694 * t2249 + t1742 * t2246), t2249 * t1590 - t2246 * t1589 - qJ(1) * (t1617 * t2249 + t1627 * t2246); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t2526, -t2527, t2506, qJ(1) * t2506, 0, 0, t2322, 0, t2182, -t2249 * t2437, qJ(1) * t2183 + t2084 * t2249 + t2134 * t2246, qJ(1) * t2321 + t2249 * t2083 + t2246 * t2135, t2103 * t2249 + t2114 * t2246, t2246 * t1985 + t2249 * t1998 + qJ(1) * (-t2078 * t2246 + t2115 * t2249), t2048 * t2249 + t2092 * t2246, t1961 * t2249 + t2042 * t2246, t1994 * t2249 + t2061 * t2246, t2047 * t2249 + t2091 * t2246, t1995 * t2249 + t2062 * t2246, t2133 * t2249 + t2163 * t2246, t2246 * t1802 + t2249 * t1776 + qJ(1) * (-t1996 * t2246 + t2063 * t2249), t2246 * t1789 + t2249 * t1769 + qJ(1) * (-t1980 * t2246 + t2051 * t2249), t2246 * t1758 + t2249 * t1741 + qJ(1) * (-t1960 * t2246 + t2041 * t2249), t2246 * t1688 + t2249 * t1675 + qJ(1) * (-t1817 * t2246 + t1865 * t2249), t1862 * t2249 + t1915 * t2246, t1797 * t2249 + t1855 * t2246, t1836 * t2249 + t1878 * t2246, t1861 * t2249 + t1914 * t2246, t1837 * t2249 + t1879 * t2246, t1890 * t2249 + t1962 * t2246, t2246 * t1661 + t2249 * t1653 + qJ(1) * (-t1820 * t2246 + t1872 * t2249), t2246 * t1663 + t2249 * t1655 + qJ(1) * (-t1825 * t2246 + t1873 * t2249), t2246 * t1650 + t2249 * t1639 + qJ(1) * (-t1788 * t2246 + t1851 * t2249), t2246 * t1622 + t2249 * t1619 + qJ(1) * (-t1671 * t2246 + t1716 * t2249), t2589, t2684, t2668, t2636, t2682, t2635, t2249 * t1608 + t2246 * t1620 + t2661, t2246 * t1621 + t2249 * t1612 + qJ(1) * (-t1701 * t2246 + t1746 * t2249), t2246 * t1606 + t2249 * t1599 + qJ(1) * (-t1678 * t2246 + t1718 * t2249), t2246 * t1593 + t2249 * t1592 + qJ(1) * (-t1624 * t2246 + t1637 * t2249), t2589, t2668, -t2684, t2635, -t2682, t2636, t2249 * t1604 + t2246 * t1614 + t2661, t2246 * t1605 + t2249 * t1597 + qJ(1) * (-t1679 * t2246 + t1719 * t2249), t2246 * t1613 + t2249 * t1601 + qJ(1) * (-t1694 * t2246 + t1742 * t2249), t2246 * t1590 + t2249 * t1589 + qJ(1) * (-t1617 * t2246 + t1627 * t2249); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t2422, t2440, 0, 0, 0, 0, t2216, 0, t2217, t2237, t2082, t2081, t2102, t1999, t2046, t1959, t1991, t2045, t1992, t2132, t1775, t1768, t1740, t1674, t1860, t1796, t1834, t1859, t1835, t1889, t1652, t1654, t1638, t1618, t2564, t1684, t2663, t2609, t1708, t2610, t1607, t1611, t1598, t1591, t2564, t2663, -t1684, t2610, -t1708, t2609, t1603, t1596, t1600, t1588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2489, -t2422, 0, 0, 0, t2230, 0, -t2320, 0, t2134, t2135, t2114, t1985, t2092, t2042, t2061, t2091, t2062, t2163, t1802, t1789, t1758, t1688, t1915, t1855, t1878, t1914, t1879, t1962, t1661, t1663, t1650, t1622, t2530, -t1720, t2647, t2586, -t1752, t2585, t1620, t1621, t1606, t1593, t2530, t2647, t1720, t2585, t1752, t2586, t1614, t1605, t1613, t1590; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2489, 0, -t2440, 0, 0, 0, t2218, 0, t2219, -t2437, t2084, t2083, t2103, t1998, t2048, t1961, t1994, t2047, t1995, t2133, t1776, t1769, t1741, t1675, t1862, t1797, t1836, t1861, t1837, t1890, t1653, t1655, t1639, t1619, t2561, t1686, t2662, t2606, t1712, t2607, t1608, t1612, t1599, t1592, t2561, t2662, -t1686, t2607, -t1712, t2606, t1604, t1597, t1601, t1589; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2422, t2440, 0, 0, 0, 0, t2216, 0, t2217, t2237, t2082, t2081, t2102, t1999, t2046, t1959, t1991, t2045, t1992, t2132, t1775, t1768, t1740, t1674, t1860, t1796, t1834, t1859, t1835, t1889, t1652, t1654, t1638, t1618, t2564, t1684, t2663, t2609, t1708, t2610, t1607, t1611, t1598, t1591, t2564, t2663, -t1684, t2610, -t1708, t2609, t1603, t1596, t1600, t1588; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), 0, -t2260, 0, 0, -t2398, t2172, 0, t2181, t2129, t2168, t2180, t2169, t2193, t1973, t1972, t1884, t1850, t2053, t1986, t2009, t2052, t2010, t2097, t1760, t1770, t1739, t1666, t2501, t1833, t2604, t2534, t1871, t2533, t1656, t1659, t1640, t1615, t2501, t2604, -t1833, t2533, -t1871, t2534, t1646, t1636, t1643, t1602; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2260, 0, qJDD(2), 0, t2398, 0, t2173, 0, t2158, t2096, t2119, t2155, t2120, -t2452, t1944, t1935, t1897, t1866, t1978, t1909, t1954, t1977, t1955, t2044, t1745, t1749, t1704, t1665, t2499, t1780, t2634, t2562, t1815, t2563, t1645, t1648, t1632, t1610, t2499, t2634, -t1780, t2563, -t1815, t2562, t1634, t1626, t1630, t1595; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(2), -t2172, -t2173, 0, 0, t2157, t2094, t2116, t2156, t2117, t2250 * t2236, t1943, t1934, t1896, t1867, t1976, t1908, t1952, t1975, t1953, t2043, t1744, t1748, t1703, t1664, t2500, t1778, t2637, t2565, t1811, t2566, t1644, t1647, t1631, t1609, t2500, t2637, -t1778, t2566, -t1811, t2565, t1633, t1625, t1629, t1594; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2212, -t2514, t2209, -t2223, t2214, t2223, 0, -t2127, t2059, 0, t2101, t2036, t2087, t2099, t2088, t2131, t1956, t1957, t1828, -pkin(10) * t1856, t2404, t1894, t2584, t2503, t1923, t2502, t1722, t1723, t1698, t1660, t2404, t2584, -t1894, t2502, -t1923, t2503, t1689, t1672, t1687, t1635; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2222, t2187, t2213, -t2280, t2210, -t2222, t2127, 0, t2060, 0, -t2458, -t2166, -t2110, t2458, t2106, -t2273, t1895, t1900, -pkin(3) * t2035, -pkin(3) * t1856, -t2023, -t1929, -t2568, -t2020, -t2004, t2520, t1781, t1782, t1714, t1668, -t2023, -t2568, t1929, t2520, t2004, -t2020, t1725, t1690, t1724, t1649; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2232, t2220, t2188, t2232, t2189, t2236, -t2059, -t2060, 0, 0, t2100, t2034, t2085, t2098, t2086, t2130, t1924, t1925, t1821, t1830, t2405, t1892, t2588, t2504, t1919, t2507, t1715, t1717, t1691, t1651, t2405, t2588, -t1892, t2507, -t1919, t2504, t1682, t1667, t1680, t1628; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2154, -t2539, t2268, -t2192, t2184, t2192, 0, t2039, t1948, 0, t2024, t1933, t2567, t2317, t2008, t2403, t1854, t1858, t1738, -pkin(11) * t1754, t2024, t2567, -t1933, t2403, -t2008, t2317, t1762, t1713, t1761, t1673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2191, t2109, t2185, -t2314, -t2142, t2191, -t2039, 0, t1949, 0, -t2126, -t2516, -t2512, t2126, t2026, -t2152, t1803, t1806, -pkin(4) * t1927, -pkin(4) * t1754, -t2126, -t2512, t2516, -t2152, -t2026, t2126, t1763, t1849, t1759, t1669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2458, t2166, t2110, -t2458, -t2106, t2273, -t1948, -t1949, 0, 0, t2023, t1929, t2568, t2020, t2004, -t2520, t2309, t2308, t2278, t2412, t2023, t2568, -t1929, -t2520, -t2004, t2020, t2509, t2272, t2508, t2510; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2073, -t2519, t2518, t2462, t2139, -t2462, 0, t1906, t1839, 0, t2073, t2518, t2519, -t2462, -t2139, t2462, -qJ(6) * t2519, t1795, t1804, -qJ(6) * t1831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2147, t2513, -t2140, -t2072, t2517, -t2147, -t1906, 0, t1840, 0, t2147, -t2140, -t2513, -t2147, -t2517, -t2072, t1805, t1790, pkin(5) * t2513, -pkin(5) * t1831; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2126, t2516, t2512, -t2126, -t2026, t2152, -t1839, -t1840, 0, 0, t2126, t2512, -t2516, t2152, t2026, -t2126, t2266, t2406, t2195 + t2271, t2407; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2073, t2518, t2519, -t2462, -t2139, t2462, 0, t1818, -t1831, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2126, t2512, -t2516, t2152, t2026, -t2126, -t1818, 0, t1807, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t2147, t2140, t2513, t2147, t2517, t2072, t1831, -t1807, 0, 0;];
m_new_reg  = t1;
