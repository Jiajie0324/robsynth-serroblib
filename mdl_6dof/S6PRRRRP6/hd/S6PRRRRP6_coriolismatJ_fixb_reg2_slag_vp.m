% Calculate inertial parameters regressor of coriolis matrix for
% S6PRRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,theta1]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:36
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PRRRRP6_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP6_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP6_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRP6_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:34:33
% EndTime: 2019-03-09 00:36:19
% DurationCPUTime: 88.72s
% Computational Cost: add. (33609->1583), mult. (90773->2050), div. (0->0), fcn. (101348->12), ass. (0->1063)
t1162 = sin(qJ(2));
t1749 = sin(pkin(6));
t1457 = t1162 * t1749;
t1158 = sin(pkin(7));
t1164 = cos(qJ(4));
t1570 = t1158 * t1164;
t1086 = t1457 * t1570;
t1160 = sin(qJ(4));
t1165 = cos(qJ(3));
t1161 = sin(qJ(3));
t1750 = cos(pkin(7));
t1409 = t1750 * t1749;
t1328 = t1162 * t1409;
t1281 = t1161 * t1328;
t1796 = cos(qJ(2));
t1432 = t1749 * t1796;
t985 = t1165 * t1432 - t1281;
t1608 = t985 * t1160;
t826 = -t1086 + t1608;
t1815 = -t826 / 0.2e1;
t1159 = sin(qJ(5));
t1678 = t1159 * qJ(6);
t1163 = cos(qJ(5));
t1755 = t1163 * pkin(5);
t1395 = t1678 + t1755;
t1097 = -pkin(4) - t1395;
t1779 = -t1097 / 0.2e1;
t1561 = t1160 * t1163;
t1467 = t1561 / 0.2e1;
t1411 = t1161 * t1457;
t1751 = cos(pkin(6));
t1874 = t1751 * t1158 + t1796 * t1409;
t895 = -t1165 * t1874 + t1411;
t1619 = t895 * t1159;
t1204 = -t1158 * t1432 + t1750 * t1751;
t1410 = t1165 * t1457;
t896 = t1161 * t1874 + t1410;
t683 = t1160 * t1204 + t896 * t1164;
t1635 = t683 * t1163;
t480 = t1619 + t1635;
t1650 = t480 * t1164;
t682 = t1160 * t896 - t1164 * t1204;
t1271 = t1650 / 0.2e1 + t682 * t1467;
t1563 = t1159 * t1164;
t1470 = -t1563 / 0.2e1;
t870 = t896 * t1163;
t175 = t895 * t1470 - t870 / 0.2e1 + t1271;
t1571 = t1158 * t1161;
t1490 = t1160 * t1571;
t1048 = -t1164 * t1750 + t1490;
t1784 = t1048 / 0.2e1;
t1569 = t1158 * t1165;
t1487 = t1159 * t1569;
t1459 = t1160 * t1750;
t1481 = t1161 * t1570;
t1050 = t1459 + t1481;
t1558 = t1163 * t1050;
t907 = -t1487 + t1558;
t1811 = -t907 / 0.2e1;
t1307 = t1784 * t480 + t1811 * t682;
t1412 = t1160 * t1457;
t1329 = t1158 * t1412;
t1607 = t985 * t1164;
t827 = t1329 + t1607;
t1624 = t827 * t1159;
t1280 = t1165 * t1328;
t984 = t1161 * t1432 + t1280;
t948 = t984 * t1163;
t1721 = t1624 / 0.2e1 - t948 / 0.2e1;
t1235 = t1307 - t1721;
t1888 = qJD(2) * t1235;
t1945 = qJD(3) * t175 - t1888;
t1785 = -t1048 / 0.2e1;
t1489 = t1163 * t1569;
t1568 = t1159 * t1050;
t905 = t1489 + t1568;
t1812 = t905 / 0.2e1;
t1618 = t895 * t1163;
t1636 = t683 * t1159;
t479 = -t1618 + t1636;
t1305 = t1785 * t479 + t1812 * t682;
t1611 = t984 * t1159;
t1623 = t827 * t1163;
t1719 = t1623 / 0.2e1 + t1611 / 0.2e1;
t155 = t1305 - t1719;
t1944 = qJD(1) * t155;
t1943 = qJD(5) * t155;
t1890 = qJD(1) * t1235;
t1768 = t1163 / 0.2e1;
t1772 = t1159 / 0.2e1;
t624 = -t948 + t1624;
t625 = t1611 + t1623;
t1921 = t625 * t1768 + t1772 * t624;
t1400 = t1921 * pkin(11);
t1942 = t1779 * t826 - t1400;
t1941 = pkin(4) * t1815 + t1400;
t156 = t1305 + t1719;
t1555 = t1163 * t1164;
t1463 = t1555 / 0.2e1;
t1566 = t1159 * t1160;
t1472 = -t1566 / 0.2e1;
t1617 = t896 * t1159;
t1652 = t479 * t1164;
t174 = -t1652 / 0.2e1 + t682 * t1472 + t895 * t1463 - t1617 / 0.2e1;
t345 = t682 * t1163;
t1940 = qJD(2) * t156 - qJD(3) * t174 - qJD(4) * t345 - qJD(5) * t479;
t1830 = -t479 / 0.2e1;
t1408 = t1830 - t1618 / 0.2e1;
t1637 = t682 * t1160;
t1813 = t896 / 0.2e1;
t173 = t1408 * t1164 + (-t1637 / 0.2e1 + t1813) * t1159;
t1939 = qJD(2) * t155 - qJD(3) * t173;
t1938 = t156 * qJD(5) + qJD(2) * (t1048 * t625 - t826 * t907);
t1469 = t1563 / 0.2e1;
t1717 = t895 * t1469 + t870 / 0.2e1;
t1218 = t1271 + t1717;
t1313 = -t1721 - t1307;
t343 = t682 * t1159;
t1910 = qJD(2) * t1313 + qJD(3) * t1218 + t343 * qJD(4) - t480 * qJD(5);
t1554 = t1164 * qJD(3);
t1137 = t1160 * t1554;
t1153 = t1159 ^ 2;
t1771 = -t1160 / 0.2e1;
t1478 = t1153 * t1771;
t1231 = t1048 * t1478 + t1469 * t905;
t1119 = t1163 * t1571;
t1428 = t1164 * t1487;
t994 = -t1119 + t1428;
t1606 = t994 * t1163;
t1195 = t1606 / 0.2e1 + t1231;
t1937 = -qJD(2) * t1195 - t1153 * t1137;
t1486 = t1159 * t1561;
t1155 = t1163 ^ 2;
t1130 = t1155 - t1153;
t1575 = t1130 * qJD(4);
t1614 = t907 * t1159;
t1615 = t905 * t1163;
t440 = t1614 + t1615;
t1936 = qJD(2) * t440 + 0.2e1 * qJD(3) * t1486 - t1575;
t1032 = t1050 * qJ(6);
t1458 = t1161 * t1750;
t1438 = pkin(2) * t1458;
t1053 = pkin(9) * t1569 + t1438;
t1017 = pkin(10) * t1750 + t1053;
t1406 = -pkin(3) * t1165 - pkin(10) * t1161;
t1337 = -pkin(2) + t1406;
t1279 = t1337 * t1158;
t742 = t1017 * t1160 - t1164 * t1279;
t722 = t1163 * t742;
t1763 = pkin(11) * t1048;
t849 = pkin(4) * t1050 + t1763;
t807 = t1159 * t849;
t1725 = t722 / 0.2e1 - t807 / 0.2e1;
t1934 = t1725 - t1032;
t1613 = t907 * t1163;
t1675 = t1159 * t905;
t1301 = t1675 / 0.2e1 - t1613 / 0.2e1;
t1698 = qJD(2) * t907;
t1531 = t905 * t1698;
t1509 = t1615 / 0.2e1;
t1878 = (t1509 + t1614 / 0.2e1) * t1160;
t1933 = qJD(3) * t1878 + qJD(4) * t1301 + t1531;
t1504 = -t1606 / 0.2e1;
t1196 = t1504 + t1231;
t1562 = t1160 * qJD(3);
t1498 = t1159 * t1562;
t1699 = qJD(2) * t905;
t1917 = t1878 * qJD(5);
t1932 = qJD(4) * t1196 + (t1498 + t1699) * t994 + t1917;
t1931 = qJD(4) * t1195 - t994 * t1699 + t1917;
t1551 = t1164 * t1165;
t1565 = t1159 * t1161;
t995 = (t1163 * t1551 + t1565) * t1158;
t1605 = t995 * t1159;
t421 = t905 * t995 + t907 * t994;
t1924 = t421 * qJD(2);
t1930 = (t1605 + t1606) * t1562 + t1924;
t1154 = t1160 ^ 2;
t1483 = t1160 * t1569;
t558 = t1048 * t994 + t1483 * t905;
t1922 = t558 * qJD(2);
t1929 = -qJD(3) * (t1154 * t1487 - t1164 * t994) - t1922;
t1899 = t440 * t1048;
t1920 = qJD(2) * t1899;
t1923 = t440 * qJD(5);
t1928 = t1920 + t1923;
t1927 = t1048 * t1575 - t1920 + t1923;
t596 = -t1555 * t895 + t1617;
t1926 = -t596 / 0.2e1;
t1802 = -t994 / 0.2e1;
t1480 = t1048 * t1771;
t1766 = t1164 / 0.2e1;
t1284 = t1050 * t1766 + t1480;
t1919 = t1284 * qJD(4);
t1918 = t1301 * qJD(5);
t1916 = -t1153 - t1155;
t1564 = t1159 * t1163;
t1134 = qJD(4) * t1564;
t1460 = t1153 / 0.2e1 - t1155 / 0.2e1;
t1059 = t1460 * t1160;
t1580 = t1059 * qJD(5);
t1915 = -t1134 * t1164 + t1580 - t1937;
t1835 = t1048 ^ 2;
t1338 = t1050 * t905 - t1159 * t1835;
t1887 = qJD(2) * t1338;
t1914 = qJD(4) * t1558 - t1887;
t1913 = t1580 + t1937;
t1556 = t1163 * t1154;
t1491 = t1159 * t1556;
t1109 = qJD(3) * t1491;
t1912 = qJD(2) * t1878 + t1059 * qJD(4) + t1109;
t1911 = qJD(2) * t1301 + t1059 * qJD(3) - t1134;
t788 = t1159 * t1048;
t1864 = t788 * qJD(2) - t1159 * t1554;
t1597 = qJD(4) * t1163;
t1908 = qJD(3) * t1196 + (t1597 - t1699) * t788 + t1918;
t1586 = t1048 * qJD(2);
t1524 = t905 * t1586;
t1907 = -qJD(3) * t1195 + t1159 * t1524 + t1918;
t1906 = -qJD(5) * t788 + t1887;
t1595 = qJD(5) * t1048;
t1905 = qJD(3) * t558 + qJD(4) * t1338 + t907 * t1595;
t1446 = qJD(2) * t1284 + t1137;
t1904 = -qJD(3) * t1284 + t1050 * t1586;
t1836 = t907 ^ 2;
t505 = t905 ^ 2 - t1836;
t1903 = -qJD(2) * t505 + qJD(4) * t440;
t1902 = qJD(3) * t421 - qJD(4) * t1899 - qJD(5) * t505;
t1901 = 0.2e1 * t1048;
t1443 = qJD(5) + t1586;
t1900 = t1443 * t907;
t1762 = pkin(11) * t1160;
t1404 = -pkin(4) * t1164 - t1762;
t1336 = -pkin(3) + t1404;
t1074 = t1163 * t1336;
t1536 = pkin(10) * t1563;
t996 = -t1074 + t1536;
t1603 = t996 * t1048;
t1502 = t1603 / 0.2e1;
t1456 = t1165 * t1750;
t1051 = -pkin(2) * t1456 + pkin(9) * t1571;
t1016 = -pkin(3) * t1750 + t1051;
t1759 = t1050 * pkin(11);
t1405 = t1048 * pkin(4) - t1759;
t1191 = t1016 + t1405;
t1553 = t1164 * t1017;
t691 = t1553 + (-t1165 * pkin(11) + t1160 * t1337) * t1158;
t357 = t1159 * t691 - t1163 * t1191;
t1658 = t357 * t1164;
t316 = -t1658 / 0.2e1;
t1898 = t1502 + t316;
t595 = -t1563 * t895 - t870;
t1897 = t596 * t1768 + t595 * t1772;
t791 = t1163 * t1048;
t1466 = -t791 / 0.2e1;
t1612 = t907 * t1164;
t1436 = t1160 * t1466 + t1612 / 0.2e1;
t1475 = -t1569 / 0.2e1;
t1814 = -t895 / 0.2e1;
t1273 = t1475 * t479 + t1814 * t905;
t1818 = t682 / 0.2e1;
t1306 = t1785 * t595 + t1818 * t994;
t1641 = t624 * t1164;
t1626 = t826 * t1159;
t770 = -t1626 / 0.2e1;
t1166 = -t1641 / 0.2e1 + (t770 + t1273) * t1160 + t1306;
t1896 = qJD(1) * t1166;
t1773 = -t1159 / 0.2e1;
t1242 = (t1768 * t624 + t1773 * t625) * t1160;
t1800 = t995 / 0.2e1;
t1822 = t595 / 0.2e1;
t1850 = t1800 * t479 + t480 * t1802 + t1822 * t907 + t1926 * t905;
t1168 = t1242 - t1850;
t1895 = qJD(1) * t1168;
t1820 = -t625 / 0.2e1;
t1171 = (t1820 + t1305) * t1163 + (-t624 / 0.2e1 + t1307) * t1159;
t1894 = qJD(1) * t1171;
t1823 = -t595 / 0.2e1;
t1187 = (t1652 / 0.2e1 + t1926) * t1163 + (-t1650 / 0.2e1 + t1823) * t1159;
t1893 = qJD(1) * t1187;
t1217 = (-t1636 / 0.2e1 - t1408) * t1160;
t1892 = qJD(1) * t1217;
t1783 = -t1050 / 0.2e1;
t1308 = t1783 * t479 + t1812 * t683;
t1625 = t826 * t1163;
t1219 = t1625 / 0.2e1 + t1308;
t1891 = qJD(1) * t1219;
t608 = t895 * t1160;
t1232 = t479 * t595 + t480 * t596 - t608 * t682;
t1883 = t1232 * qJD(1);
t1256 = (-t1159 * t479 - t1163 * t480 + t683) * t682;
t1881 = t1256 * qJD(1);
t1739 = t682 * t826;
t1264 = t479 * t624 + t480 * t625 + t1739;
t1880 = t1264 * qJD(1);
t1190 = t1204 * t1158;
t1334 = -t1432 / 0.2e1;
t1875 = t1190 / 0.2e1 + t1334;
t1663 = t175 * qJD(1);
t1054 = t1395 * t1160;
t1583 = t1054 * t1159;
t1140 = pkin(5) * t1566;
t1672 = t1163 * qJ(6);
t1021 = t1140 + (pkin(10) - t1672) * t1160;
t1587 = t1021 * t1163;
t1535 = pkin(10) * t1555;
t997 = t1159 * t1336 + t1535;
t1602 = t997 * t1164;
t605 = t1602 + (t1583 + t1587) * t1160;
t358 = t1159 * t1191 + t1163 * t691;
t1299 = t1766 * t358 + t1785 * t997;
t1683 = t1021 * t907;
t1781 = -t1054 / 0.2e1;
t1192 = -t1683 / 0.2e1 + t905 * t1781 - t1299;
t1752 = t1164 * pkin(11);
t1757 = t1160 * pkin(4);
t1116 = -t1752 + t1757;
t859 = t1438 + (pkin(9) + t1116) * t1569;
t1670 = t1163 * t859;
t1052 = (pkin(3) * t1161 - pkin(10) * t1165) * t1158;
t1029 = t1160 * t1052;
t1030 = t1164 * t1051;
t825 = -t1030 + t1029;
t754 = pkin(11) * t1571 + t825;
t1676 = t1159 * t754;
t1724 = -t1676 / 0.2e1 + t1670 / 0.2e1;
t1468 = -t1561 / 0.2e1;
t1403 = pkin(5) * t905 - qJ(6) * t907;
t690 = pkin(4) * t1569 + t742;
t359 = t1403 + t690;
t308 = t359 * t1468;
t645 = pkin(5) * t907 + qJ(6) * t905;
t64 = t308 + (pkin(5) * t1569 + t1773 * t645) * t1160 + t1192 + t1724;
t1873 = qJD(2) * t64 - qJD(3) * t605 - t1663;
t1828 = -t480 / 0.2e1;
t1407 = t1828 + t1635 / 0.2e1;
t137 = (t1619 / 0.2e1 + t1407) * t1160;
t1667 = t137 * qJD(1);
t1419 = t1160 * t1475;
t1079 = t1163 * t1419;
t1028 = t1160 * t1051;
t1552 = t1164 * t1052;
t824 = t1028 + t1552;
t753 = -pkin(4) * t1571 - t824;
t1631 = t753 * t1159;
t1801 = -t995 / 0.2e1;
t1277 = pkin(11) * t1079 + pkin(4) * t1801 + t1631 / 0.2e1;
t1085 = t1159 * t1116;
t1010 = -pkin(10) * t1561 + t1085;
t1782 = t1050 / 0.2e1;
t1291 = t1010 * t1784 + t1782 * t997;
t1633 = t690 * t1163;
t1320 = pkin(10) * t1811 - t1633 / 0.2e1;
t743 = t1160 * t1279 + t1553;
t1417 = pkin(10) * t1784 - t743 / 0.2e1;
t496 = -t722 + t807;
t55 = (-t496 / 0.2e1 + t1320) * t1164 + (t358 / 0.2e1 + t1417 * t1163) * t1160 + t1277 + t1291;
t673 = t1010 * t1164 + (-t997 + 0.2e1 * t1535) * t1160;
t1872 = -t55 * qJD(2) + t673 * qJD(3) + t1667;
t1764 = pkin(5) * t1159;
t1112 = -t1672 + t1764;
t1022 = (pkin(10) + t1112) * t1164;
t1786 = t1022 / 0.2e1;
t1682 = t1048 * qJ(6);
t283 = t358 + t1682;
t398 = t1032 + t496;
t1754 = t1163 * pkin(10);
t1758 = t1159 * pkin(4);
t944 = t1159 * (-pkin(3) - t1762) + (-qJ(6) + t1754 - t1758) * t1164;
t1149 = t1160 * qJ(6);
t949 = t1010 + t1149;
t1183 = t1766 * t398 + t1771 * t283 + t1783 * t944 + t1785 * t949 + t1786 * t907;
t1290 = t1021 * t1785 + t1766 * t359;
t1770 = t1160 / 0.2e1;
t509 = -t1048 * t1112 + t743;
t1213 = t1770 * t509 + t1290;
t1474 = t1569 / 0.2e1;
t1418 = t1160 * t1474;
t1078 = t1163 * t1418;
t491 = pkin(5) * t994 - qJ(6) * t995 + t753;
t1649 = t491 * t1159;
t1266 = pkin(11) * t1078 + t995 * t1779 - t1649 / 0.2e1;
t27 = t1163 * t1213 + t1183 + t1266;
t1330 = t1021 * t1164 + t1022 * t1160;
t400 = -t944 * t1160 + t1163 * t1330 + t949 * t1164;
t1871 = -t27 * qJD(2) - t400 * qJD(3) - t1667;
t1594 = qJD(5) * t1159;
t1870 = t1594 + t1864;
t1260 = t1048 * t1472 + t905 * t1766;
t1156 = t1164 ^ 2;
t1567 = t1159 * t1154;
t1083 = t1156 * t1159 - t1567;
t1577 = t1083 * qJD(3);
t1673 = t1160 * t905;
t1520 = -t1673 / 0.2e1;
t1314 = t1050 * t1472 + t1470 * t1901 + t1520;
t366 = t1079 + t1314;
t1869 = -qJD(2) * t366 - t1577;
t1669 = t1164 * t944;
t686 = t1021 * t1561 + t1669;
t1300 = t1766 * t283 + t1785 * t944;
t1215 = t1683 / 0.2e1 + t1300;
t1276 = pkin(5) * t1419 - t1724;
t307 = t359 * t1467;
t83 = t307 + t1215 + t1276;
t1863 = qJD(2) * t83 + qJD(3) * t686 + t1663;
t1664 = t173 * qJD(1);
t1862 = qJD(5) * t996 + t1664;
t1471 = t1566 / 0.2e1;
t1315 = t1050 * t1471 + t1469 * t1901 + t1673 / 0.2e1;
t365 = t1078 + t1315;
t1861 = qJD(2) * t365 - t1577;
t1797 = t997 / 0.2e1;
t1810 = -t944 / 0.2e1;
t1860 = t1810 + t1797;
t739 = t1163 * t754;
t823 = t1159 * t859;
t1723 = t739 / 0.2e1 + t823 / 0.2e1;
t1849 = -qJD(2) * t1171 - qJD(3) * t1187;
t1848 = -qJD(2) * t1219 + qJD(3) * t1217;
t1847 = -qJD(2) * t1166 - qJD(4) * t1217;
t1846 = qJD(2) * t1168 + qJD(4) * t1187;
t1845 = -qJD(3) * t1168 + qJD(4) * t1171;
t1769 = -t1163 / 0.2e1;
t1296 = t1769 * t479 + t1772 * t480;
t1507 = -t1614 / 0.2e1;
t1167 = (t1509 + t1507) * t682 + t1296 * t1048 + t1921;
t1193 = -t1164 * t1296 + t1897;
t1692 = qJD(4) * t682;
t1844 = qJD(2) * t1167 + qJD(3) * t1193 + t1692 * t1916;
t1209 = t1467 * t895 + t683 * t1471 + t1771 * t479 + (t1469 + t1470) * t682;
t1275 = -t1625 / 0.2e1 + t1308;
t1843 = qJD(2) * t1275 + qJD(3) * t1209 + t343 * qJD(5) - t1597 * t683;
t1181 = t1242 + t1850;
t1842 = qJD(2) * t1181 + qJD(4) * t1193 + (-t1159 * t596 + t1163 * t595) * t1562;
t1841 = qJD(3) * t1181 + qJD(4) * t1167 + (t624 * t907 - t625 * t905) * qJD(2);
t1840 = qJD(2) * t1264 + qJD(3) * t1232 + qJD(4) * t1256;
t1839 = qJD(3) * t1166 + qJD(4) * t1219 - qJD(5) * t1235;
t1170 = t826 * t1471 + t1641 / 0.2e1 + t1273 * t1160 + t1306;
t1838 = qJD(2) * t1170 + qJD(4) * t1209 + qJD(5) * t1218 + (t1164 * t595 - t895 * t1567) * qJD(3);
t1837 = qJD(3) * t1170 + qJD(4) * t1275 + qJD(5) * t1313 + (-t1048 * t624 + t826 * t905) * qJD(2);
t1834 = pkin(5) / 0.2e1;
t1833 = t283 / 0.2e1;
t1832 = -t357 / 0.2e1;
t1434 = qJ(6) * t1483;
t511 = t739 + t823;
t464 = t1434 + t511;
t1831 = t464 / 0.2e1;
t1829 = t479 / 0.2e1;
t1827 = t480 / 0.2e1;
t1826 = t509 / 0.2e1;
t510 = t1670 - t1676;
t1825 = -t510 / 0.2e1;
t1824 = t511 / 0.2e1;
t1821 = t596 / 0.2e1;
t1819 = -t682 / 0.2e1;
t1817 = t683 / 0.2e1;
t1816 = t690 / 0.2e1;
t1809 = t944 / 0.2e1;
t946 = -t1074 + (pkin(10) * t1159 + pkin(5)) * t1164;
t1808 = -t946 / 0.2e1;
t1807 = t946 / 0.2e1;
t1806 = -t949 / 0.2e1;
t1805 = t949 / 0.2e1;
t1142 = pkin(10) * t1566;
t1557 = t1163 * t1116;
t1009 = t1142 + t1557;
t1150 = t1160 * pkin(5);
t957 = -t1009 - t1150;
t1804 = -t957 / 0.2e1;
t1803 = t957 / 0.2e1;
t1799 = -t996 / 0.2e1;
t1798 = -t997 / 0.2e1;
t1795 = pkin(10) * t895;
t1794 = pkin(10) * t905;
t1791 = t984 * pkin(3);
t1790 = t1009 / 0.2e1;
t1789 = t1010 / 0.2e1;
t1788 = -t1021 / 0.2e1;
t1787 = t1021 / 0.2e1;
t1780 = t1054 / 0.2e1;
t1778 = t1097 / 0.2e1;
t1777 = -t1112 / 0.2e1;
t1776 = t1112 / 0.2e1;
t1775 = -t1116 / 0.2e1;
t1774 = -t1142 / 0.2e1;
t1767 = -t1164 / 0.2e1;
t1152 = t1158 ^ 2;
t1765 = pkin(2) * t1152;
t1761 = t1048 * pkin(5);
t1760 = t1050 * pkin(5);
t1756 = t1160 * pkin(10);
t1753 = t1164 * pkin(10);
t1741 = t480 * t996;
t355 = -t1741 / 0.2e1;
t80 = t355 + t1741 / 0.2e1;
t1748 = qJD(1) * t80;
t1732 = t996 * t905;
t699 = t1732 / 0.2e1;
t82 = t699 - t1732 / 0.2e1;
t1747 = qJD(2) * t82;
t1746 = qJD(3) * t80;
t1745 = qJD(3) * t82;
t1744 = t359 * t907;
t284 = t357 - t1761;
t42 = (-t283 + t358) * t907 + (-t284 + t357) * t905;
t1743 = t42 * qJD(2);
t1737 = t895 * t984;
t1639 = t625 * t1164;
t1730 = t1639 / 0.2e1 + t826 * t1467;
t1729 = -t1639 / 0.2e1 + t826 * t1468;
t1728 = t1916 * pkin(11) * t682;
t1671 = t1163 * t849;
t1677 = t1159 * t742;
t1727 = t1677 / 0.2e1 + t1671 / 0.2e1;
t1464 = -t1555 / 0.2e1;
t1363 = t1048 * t1486 + t1464 * t905;
t1674 = t1159 * t994;
t1233 = t1674 / 0.2e1 + t1363;
t839 = t907 * t1469;
t1604 = t995 * t1163;
t937 = t1604 / 0.2e1;
t252 = t839 + t937 - t1233;
t1716 = qJD(2) * t252;
t840 = t907 * t1470;
t938 = -t1604 / 0.2e1;
t254 = t840 + t938 + t1233;
t1715 = qJD(2) * t254;
t858 = t907 * t1561;
t401 = t1566 * t905 - t858;
t1712 = qJD(2) * t401;
t402 = t858 / 0.2e1 + (-t1675 + t1613 / 0.2e1) * t1160;
t1711 = qJD(2) * t402;
t540 = t1050 * t907 - t1163 * t1835;
t1703 = qJD(2) * t540;
t1423 = t1159 * t1474;
t1548 = t1164 * t1423 - t1119 / 0.2e1;
t546 = t1436 + t1548;
t1701 = qJD(2) * t546;
t1465 = t791 / 0.2e1;
t1437 = t1160 * t1465 - t1612 / 0.2e1;
t1547 = -t1428 / 0.2e1 + t1119 / 0.2e1;
t547 = t1437 + t1547;
t1700 = qJD(2) * t547;
t1697 = qJD(3) * t137;
t1693 = qJD(3) * t895;
t1691 = qJD(4) * t788;
t1690 = qJD(4) * t791;
t1688 = qJD(5) * t357;
t1681 = t1048 * t357;
t1680 = t1048 * t358;
t1679 = t1097 * t907;
t1668 = t1164 * t996;
t166 = (-t1164 * t683 - t1637 + t896) * t895;
t1666 = t166 * qJD(1);
t167 = t683 * t827 + t1737 + t1739;
t1665 = t167 * qJD(1);
t1662 = t283 * t1159;
t1661 = t284 * t1163;
t285 = t1190 * t1457 + t896 * t985 + t1737;
t1660 = t285 * qJD(1);
t1659 = t357 * t1163;
t1657 = t358 * t1159;
t1656 = t359 * t1159;
t1655 = t359 * t1163;
t1648 = t491 * t1163;
t1230 = t1155 * t1480 + t1463 * t907;
t527 = -t1605 / 0.2e1 + t1230;
t1647 = t527 * qJD(2);
t1220 = (t1165 * t1463 + t1565 / 0.2e1) * t1158;
t548 = t1220 - t1260;
t1646 = t548 * qJD(2);
t561 = t995 * t1048 + t1483 * t907;
t1643 = t561 * qJD(2);
t1638 = t682 * t1054;
t1634 = t690 * t1159;
t1584 = t1050 * t1160;
t1585 = t1048 * t1164;
t657 = -t1584 - t1585;
t713 = t657 * t1569;
t1632 = t713 * qJD(2);
t1630 = t753 * t1163;
t1628 = t791 * qJD(2);
t1157 = t1165 ^ 2;
t1573 = t1152 * t1157;
t885 = -t1048 * t1571 + t1160 * t1573;
t1622 = t885 * qJD(2);
t886 = -t1050 * t1571 + t1164 * t1573;
t1621 = t886 * qJD(2);
t1620 = t895 * t1048;
t1616 = t905 * qJD(6);
t1610 = t984 * t1160;
t1609 = t984 * t1164;
t1131 = t1156 - t1154;
t1601 = qJD(3) * t1131;
t1600 = t1164 * t1575;
t1599 = qJD(4) * t1159;
t1598 = qJD(4) * t1160;
t1596 = qJD(4) * t1164;
t1593 = qJD(5) * t1163;
t1592 = qJD(5) * t1164;
t1591 = qJD(6) * t1159;
t1590 = qJD(6) * t1164;
t1589 = t1016 * t1164;
t1588 = t1021 * t1159;
t1031 = t1048 * qJD(6);
t1067 = (-t1161 ^ 2 + t1157) * t1152;
t1579 = t1067 * qJD(2);
t1146 = t1155 * t1154;
t1081 = t1153 * t1154 - t1146;
t1578 = t1081 * qJD(3);
t1576 = t1097 * t1159;
t1574 = t1130 * qJD(5);
t1572 = t1152 * t1165;
t1560 = t1160 * t1164;
t1559 = t1163 * qJD(6);
t1425 = t1160 * t1134;
t1549 = t1578 - 0.2e1 * t1425;
t1093 = 0.2e1 * t1425;
t1546 = t1093 - t1578;
t1477 = -t1571 / 0.2e1;
t1543 = t1164 * t1477 - t1459 / 0.2e1;
t1542 = pkin(11) * t1802;
t1541 = pkin(11) * t1800;
t1540 = t895 * pkin(4) / 0.2e1;
t1539 = t1774 - t1150;
t1538 = pkin(11) * t1594;
t1537 = pkin(11) * t1593;
t1024 = -t1760 / 0.2e1;
t1023 = t1760 / 0.2e1;
t1534 = t1756 / 0.2e1;
t1533 = t1753 / 0.2e1;
t1532 = t1752 / 0.2e1;
t1529 = t1833 - t358 / 0.2e1;
t1528 = t1832 + t284 / 0.2e1;
t1527 = t1809 + t1798;
t1526 = t996 / 0.2e1 + t1808;
t1525 = t1023 + t1727;
t1523 = t907 * t1586;
t1521 = t907 * t1591;
t1519 = -t1671 / 0.2e1;
t1518 = qJ(6) * t1767;
t336 = -t1656 / 0.2e1;
t1515 = -t343 / 0.2e1;
t1514 = -t345 / 0.2e1;
t1513 = t682 * t1766;
t1512 = t683 * t1771;
t1511 = t1634 / 0.2e1;
t1510 = -t608 / 0.2e1;
t1506 = t907 * t1770;
t1503 = t1605 / 0.2e1;
t1501 = t895 * t1750;
t1500 = t896 * t1750;
t1496 = qJD(4) * t1569;
t1495 = qJD(4) * t1561;
t1494 = qJD(5) * t1563;
t1493 = qJD(5) * t1555;
t1492 = t1161 * t1572;
t1488 = t1158 * t1551;
t1136 = qJD(5) * t1564;
t1485 = t1159 * t1560;
t1484 = qJD(4) * t1560;
t1482 = t1048 * t1555;
t1479 = t1097 * t1770;
t1476 = t1571 / 0.2e1;
t1473 = t788 / 0.2e1;
t1462 = t1029 / 0.2e1 - t1030 / 0.2e1;
t1461 = t1774 - t1150 / 0.2e1;
t1454 = pkin(4) * t1811 + pkin(11) * t1466;
t537 = t907 * t1471 + (t1475 + t1509) * t1160;
t1453 = qJD(2) * t537 + t1109;
t1444 = t826 * t1534;
t1442 = -qJD(5) + t1554;
t1440 = pkin(5) * t1483;
t1439 = pkin(10) * t1474;
t568 = t682 * t1466;
t1433 = t1024 - t1677 / 0.2e1;
t1431 = t1154 * t1136;
t1430 = qJD(3) * t1492;
t1429 = qJD(5) * t1486;
t1427 = qJD(2) * t1483;
t1111 = t1163 * t1137;
t1424 = qJD(2) * t1488;
t1416 = -t1763 / 0.2e1 - t645 / 0.2e1;
t1414 = t1158 * t1458;
t1413 = t1158 * t1456;
t1401 = t1086 / 0.2e1 - t1608 / 0.2e1;
t465 = -t510 - t1440;
t1173 = t1510 * t359 + t1818 * t491 + t1821 * t283 + t1822 * t284 + t1827 * t464 + t1829 * t465;
t1221 = t1788 * t826 + t1808 * t624 + t1810 * t625;
t2 = t1173 + t1221;
t39 = t283 * t464 + t284 * t465 + t359 * t491;
t1399 = t2 * qJD(1) + t39 * qJD(2);
t495 = t1671 + t1677;
t399 = -t495 - t1760;
t37 = t283 * t398 + t284 * t399 + t359 * t509;
t1176 = (t1769 * t283 + t1773 * t284 + t1826) * t682 + t399 * t1829 + t398 * t1827 + t359 * t1817;
t4 = t1176 + t1942;
t1398 = t4 * qJD(1) + t37 * qJD(2);
t1185 = t1818 * t753 + t1821 * t358 + t1822 * t357 + t1824 * t480 + t1825 * t479;
t1317 = t1798 * t625 + t1799 * t624;
t6 = (pkin(10) * t1815 + t1814 * t690) * t1160 + t1185 + t1317;
t73 = -t357 * t510 + t358 * t511 + t690 * t753;
t1397 = t6 * qJD(1) + t73 * qJD(2);
t1396 = t1112 * t1770 + t1787;
t1188 = t1528 * t480 - t1529 * t479 + t1818 * t645;
t1322 = qJ(6) * t1820 + t1834 * t624;
t10 = t1188 + t1322;
t38 = -t283 * t357 + t284 * t358 + t359 * t645;
t1394 = t10 * qJD(1) + t38 * qJD(2);
t1175 = (t358 * t1769 + t357 * t1773 + t743 / 0.2e1) * t682 + t495 * t1830 + t496 * t1827 + t683 * t1816;
t12 = t1175 - t1941;
t68 = -t357 * t495 + t358 * t496 + t690 * t743;
t1393 = t12 * qJD(1) + t68 * qJD(2);
t49 = -t283 * t994 + t284 * t995 - t464 * t905 + t465 * t907;
t1392 = t49 * qJD(2) - t1895;
t72 = t357 * t995 - t358 * t994 - t510 * t907 - t511 * t905;
t1391 = t72 * qJD(2) - t1895;
t48 = -t398 * t905 + t399 * t907 + (-t1661 + t1662) * t1048;
t1390 = t48 * qJD(2) + t1894;
t71 = -t495 * t907 - t496 * t905 + (t1657 - t1659) * t1048;
t1389 = t71 * qJD(2) + t1894;
t69 = t464 * t1048 + t1483 * t283 - t359 * t995 - t491 * t907;
t1210 = t1510 * t907 + t1785 * t596 + t1800 * t682;
t1202 = t480 * t1418 - t1210;
t89 = t1202 + t1730;
t1388 = t89 * qJD(1) + t69 * qJD(2);
t70 = -t465 * t1048 - t1483 * t284 + t359 * t994 + t491 * t905;
t1387 = t70 * qJD(2) + t1896;
t1386 = qJD(2) * t1569 - qJD(4);
t1385 = qJD(4) * t1563 + t1111;
t1384 = qJD(5) * t1561 - t1111;
t1382 = qJD(2) * t1750 + qJD(3);
t1381 = t336 + pkin(11) * t1465 - t1679 / 0.2e1;
t1380 = t1048 * t1097 + t1759;
t1379 = -t1097 * t1164 + t1762;
t1208 = t1782 * t480 + t1811 * t683 + t568;
t1199 = t682 * t1465 + t1208;
t769 = t1626 / 0.2e1;
t109 = t769 + t1199;
t66 = t283 * t1050 - t509 * t907 + (t398 + t1655) * t1048;
t1378 = t109 * qJD(1) + t66 * qJD(2);
t67 = -t284 * t1050 + t509 * t905 + (-t399 - t1656) * t1048;
t1377 = t67 * qJD(2) + t1891;
t117 = t510 * t1048 - t1483 * t357 + t690 * t994 + t753 * t905;
t1376 = t117 * qJD(2) + t1896;
t118 = -t511 * t1048 - t1483 * t358 + t690 * t995 + t753 * t907;
t1201 = t480 * t1419 + t1210;
t92 = t1201 + t1729;
t1375 = t92 * qJD(1) + t118 * qJD(2);
t200 = t1016 * t1053 - t742 * t824 + t743 * t825;
t1174 = (t743 * t1767 + t742 * t1771 + t1053 / 0.2e1) * t895 + t824 * t1819 + t825 * t1817 + t1016 * t1813;
t1294 = t1767 * t827 + t1771 * t826;
t51 = t1791 / 0.2e1 + t1294 * pkin(10) + t1174;
t1374 = t51 * qJD(1) + t200 * qJD(2);
t1327 = pkin(5) * t1801 + qJ(6) * t1802;
t25 = t1527 * t907 - t1526 * t905 + (t1159 * t1528 + t1163 * t1529) * t1160 + t1327;
t348 = ((t944 - t997) * t1163 + (t946 - t996) * t1159) * t1160;
t1373 = -t25 * qJD(2) - t348 * qJD(3);
t290 = t997 * t1773 + (t1518 + t1809) * t1159 + (pkin(5) * t1767 + t1526) * t1163;
t40 = -t1657 / 0.2e1 + (t1682 / 0.2e1 + t1833) * t1159 + (t1761 / 0.2e1 - t1528) * t1163;
t1371 = t40 * qJD(2) + t290 * qJD(3);
t606 = -t1021 * t1566 + t1054 * t1561 - t1668;
t1216 = t1780 * t907 + t1788 * t905 + t1502;
t62 = t316 + (qJ(6) * t1569 + t1768 * t645 + t336) * t1160 + t1216 + t1723;
t1368 = qJD(2) * t62 + qJD(3) * t606;
t105 = -t357 * t1050 + t743 * t905 + (t495 - t1634) * t1048;
t1362 = t105 * qJD(2) + t1891;
t106 = -t358 * t1050 + t743 * t907 + (-t496 - t1633) * t1048;
t1200 = t568 - t1208;
t112 = t770 + t1200;
t1361 = t112 * qJD(1) + t106 * qJD(2);
t121 = t359 * t905 - t645 * t907 - t1681;
t1360 = -qJD(2) * t121 - t1944;
t122 = t645 * t905 - t1680 + t1744;
t1359 = -qJD(2) * t122 + t1890;
t1267 = t1475 * t683 + t1783 * t895;
t1270 = t1620 / 0.2e1 + t682 * t1474;
t140 = (-t827 / 0.2e1 + t1270) * t1164 + (t1815 + t1267) * t1160;
t184 = -t825 * t1048 - t824 * t1050 + (-t743 * t1160 + t1164 * t742) * t1569;
t1358 = t140 * qJD(1) + t184 * qJD(2);
t144 = t1048 * t283 - t1744;
t1357 = qJD(2) * t144 + t1890;
t190 = t690 * t907 - t1680;
t1356 = -qJD(2) * t190 + t1890;
t189 = -t690 * t905 + t1681;
t1355 = -qJD(2) * t189 + t1944;
t1269 = t1477 * t682 + t1784 * t896;
t185 = t1609 / 0.2e1 + t1269;
t241 = -t1016 * t1483 - t1053 * t1048 + t1569 * t824 + t1571 * t742;
t1354 = t185 * qJD(1) - t241 * qJD(2);
t1268 = t1477 * t683 + t1782 * t896;
t188 = -t1610 / 0.2e1 + t1268;
t242 = t1053 * t1050 + (-t1161 * t743 + (t825 + t1589) * t1165) * t1158;
t1353 = t188 * qJD(1) + t242 * qJD(2);
t246 = -t1620 / 0.2e1 + t1607 / 0.2e1 + (t1165 * t1819 + t1412 / 0.2e1) * t1158;
t493 = -t1016 * t1048 - t1569 * t742;
t1352 = -qJD(1) * t246 - qJD(2) * t493;
t248 = -t1267 - t1401;
t494 = -t1016 * t1050 - t1569 * t743;
t1351 = -qJD(1) * t248 + qJD(2) * t494;
t1172 = t1334 - t1190 / 0.2e1;
t1237 = -t1280 / 0.2e1;
t533 = t1237 + t1500 / 0.2e1 + t1172 * t1161;
t920 = -t1053 * t1750 - t1161 * t1765;
t1350 = qJD(1) * t533 - qJD(2) * t920;
t1238 = t1281 / 0.2e1;
t534 = t1238 - t1501 / 0.2e1 + t1172 * t1165;
t919 = pkin(2) * t1572 - t1051 * t1750;
t1349 = qJD(1) * t534 + qJD(2) * t919;
t317 = t1658 / 0.2e1;
t128 = -t1603 / 0.2e1 + t317 + (t1794 / 0.2e1 + t1511) * t1160 - t1723;
t889 = -pkin(10) * t1567 - t1668;
t1348 = qJD(2) * t128 - qJD(3) * t889;
t715 = -t1050 ^ 2 + t1835;
t1347 = qJD(2) * t715 + qJD(3) * t657;
t1346 = -qJD(4) * t137 - qJD(5) * t173;
t1345 = t1159 * t399 + t1163 * t398;
t1344 = -t1159 * t495 + t1163 * t496;
t1343 = t1159 * t957 + t1163 * t949;
t1341 = -t1160 * t824 + t1164 * t825;
t1084 = t1156 * t1163 - t1556;
t364 = -t1482 + (t1423 - t1558 / 0.2e1 + t1811) * t1160;
t1340 = -qJD(2) * t364 - qJD(3) * t1084;
t1339 = qJD(2) * t657 + t1601;
t1335 = t1159 * t1111;
t1333 = -t1554 + t1586;
t1332 = qJD(2) * t1050 + t1562;
t1331 = -t1009 * t1159 + t1010 * t1163;
t1326 = t1532 - t1757 / 0.2e1;
t1325 = -t398 * qJ(6) / 0.2e1 + t399 * t1834;
t1324 = qJ(6) * t1831 - t465 * pkin(5) / 0.2e1;
t1323 = pkin(5) * t1823 + qJ(6) * t1821;
t1321 = pkin(5) * t1803 + qJ(6) * t1806;
t1037 = t1164 * t1476 + t1459 / 0.2e1;
t939 = t1037 * qJD(2) + t1562 / 0.2e1;
t1319 = -t1672 / 0.2e1 + t1764 / 0.2e1;
t1316 = t1804 * t907 + t1805 * t905;
t1310 = pkin(3) * t1783 + t1016 * t1770;
t489 = -t1028 / 0.2e1 + (t1439 - t1052 / 0.2e1) * t1164 + t1310;
t1312 = pkin(3) * t1562 - qJD(2) * t489;
t1203 = pkin(3) * t1784 + t1589 / 0.2e1 + pkin(10) * t1419;
t487 = t1203 + t1462;
t1311 = pkin(3) * t1554 - qJD(2) * t487;
t1309 = t1479 + t1532;
t1304 = t1158 * t1406;
t1303 = t1789 * t905 + t1790 * t907;
t1302 = t994 * t1779 + t1648 / 0.2e1;
t1298 = t1768 * t464 + t1772 * t465;
t1297 = t1010 * t1828 + t1790 * t479;
t1295 = t1768 * t511 + t1773 * t510;
t1292 = -t1523 - t1691;
t1287 = qJD(3) * t1561 + t1698;
t1035 = (-0.1e1 / 0.2e1 + t1460) * t1160;
t528 = t1301 + t1543;
t1286 = qJD(2) * t528 + qJD(3) * t1035 - t1134;
t1285 = t1396 * t1159;
t1283 = qJD(5) + t1333;
t1060 = t1159 * pkin(11) * t1419;
t1278 = t1060 + pkin(4) * t1802 - t1630 / 0.2e1;
t676 = qJD(5) * t1771 + t1446;
t1272 = t1656 / 0.2e1 + t1679 / 0.2e1 + t905 * t1776;
t264 = t1021 * t1022 + t944 * t949 + t946 * t957;
t1263 = t1897 * pkin(11);
t1194 = t1097 * t1510 + t1263;
t1222 = t1788 * t683 + t1804 * t479 + t1806 * t480;
t31 = (t944 * t1768 - t1022 / 0.2e1 + t946 * t1772) * t682 + t1194 + t1222;
t1180 = t1786 * t359 + t1787 * t509 + t1803 * t284 + t1805 * t283 + t1807 * t399 + t1809 * t398;
t1205 = pkin(11) * t1298 + t1778 * t491;
t7 = -t1180 + t1205;
t1265 = -t31 * qJD(1) - t7 * qJD(2) + t264 * qJD(3);
t1261 = (t1504 + t1503) * pkin(11);
t1179 = t1780 * t359 + t1787 * t645 + t1797 * t284 + t1799 * t283 + t1807 * t358 + t1810 * t357;
t13 = -t1179 + t1324;
t287 = t1021 * t1054 - t944 * t996 + t946 * t997;
t35 = -t1638 / 0.2e1 + t1526 * t480 + t1527 * t479 + t1323;
t1258 = -t35 * qJD(1) - t13 * qJD(2) + t287 * qJD(3);
t1169 = t1009 * t1832 + t1533 * t690 + t1534 * t743 + t1789 * t358 + t1797 * t496 + t1799 * t495;
t1206 = t1295 * pkin(11) - t753 * pkin(4) / 0.2e1;
t23 = -t1169 + t1206;
t33 = t1160 * t1540 + pkin(10) * t1512 + t1263 + (t997 * t1768 + t996 * t1772 - t1753 / 0.2e1) * t682 + t1297;
t492 = pkin(10) ^ 2 * t1560 - t1009 * t996 + t1010 * t997;
t1257 = -t33 * qJD(1) - t23 * qJD(2) + t492 * qJD(3);
t1255 = qJD(4) * t1083 + t1160 * t1493;
t15 = (t1767 * t284 + t1771 * t399 + t1784 * t946 + t1542 + t1831) * t1163 + (t1541 + t465 / 0.2e1 + t398 * t1770 + t1300) * t1159 + t1316;
t298 = -t946 * t1555 - t957 * t1561 + (t1160 * t949 + t1669) * t1159;
t1254 = -t15 * qJD(2) - t298 * qJD(3) + t1893;
t19 = (t1770 * t495 + t1542 + t1824 + t1898) * t1163 + (t1770 * t496 + t1299 + t1541 + t1825) * t1159 + t1303;
t404 = (t1009 * t1160 - t1668) * t1163 + (t1010 * t1160 + t1602) * t1159;
t1253 = -t19 * qJD(2) - t404 * qJD(3) + t1893;
t1214 = t1009 * t1785 + t1770 * t357 + t1782 * t996;
t54 = (t495 / 0.2e1 - t1794 / 0.2e1) * t1164 + (t1160 * t1417 + t1767 * t690) * t1159 + t1214 + t1278;
t672 = t996 * t1160 + (t1009 - 0.2e1 * t1142) * t1164;
t1252 = -t54 * qJD(2) - t672 * qJD(3) - t1892;
t1184 = t1766 * t399 + t1771 * t284 + t1783 * t946 + t1785 * t957 + t1786 * t905;
t30 = ((pkin(11) * t1474 + t1826) * t1160 + t1290) * t1159 + t1184 + t1302;
t403 = t1159 * t1330 - t946 * t1160 + t957 * t1164;
t1251 = t30 * qJD(2) + t403 * qJD(3) - t1892;
t1249 = t1781 + t1309;
t397 = t1285 + (t1775 + t1249) * t1163 + t1539;
t913 = t1112 * t1163 - t1576;
t96 = t1024 + (-t849 / 0.2e1 + t1416) * t1163 + t1272 + t1433;
t1250 = -qJD(2) * t96 - qJD(3) * t397 + qJD(4) * t913;
t127 = t1160 * t1320 - t1299 + t1724;
t172 = -t1271 + t1717;
t890 = -pkin(10) * t1556 - t1602;
t1248 = qJD(1) * t172 + qJD(2) * t127 + qJD(3) * t890;
t1182 = t1416 * t1159 + t905 * t1778 + t907 * t1777 - t1655 / 0.2e1;
t104 = t1182 + t1934;
t1064 = -t1085 / 0.2e1;
t1121 = pkin(11) * t1469;
t394 = t1121 - t1583 / 0.2e1 - t1587 / 0.2e1 - t1149 + t1064 + (t1576 / 0.2e1 + (t1777 + pkin(10) / 0.2e1) * t1163) * t1160;
t912 = t1097 * t1163 + t1112 * t1159;
t1247 = -qJD(2) * t104 - qJD(3) * t394 + qJD(4) * t912;
t1246 = -qJD(3) * t401 + t1903;
t1245 = -qJD(3) * t402 - t1903;
t136 = t1160 * t1407 + t1472 * t895;
t1244 = -qJD(3) * (t1164 * t596 - t1556 * t895) - qJD(4) * t136 - qJD(5) * t174;
t1234 = -t1674 / 0.2e1 + t1363;
t211 = t1519 + (t1816 - t742 / 0.2e1) * t1159 + t1454;
t904 = (t1775 + t1326) * t1163;
t1229 = pkin(4) * t1599 - qJD(2) * t211 - qJD(3) * t904;
t1211 = pkin(4) * t1812 + t1633 / 0.2e1 + pkin(11) * t1473;
t209 = t1211 - t1725;
t1063 = t1085 / 0.2e1;
t1122 = pkin(11) * t1470;
t903 = pkin(4) * t1471 + t1063 + t1122;
t1228 = pkin(4) * t1597 - qJD(2) * t209 - qJD(3) * t903;
t1227 = -qJD(5) * t1081 + t1093 * t1164;
t1224 = -qJD(3) * t136 - qJD(5) * t345 - t1599 * t683;
t147 = t1381 + t1525;
t580 = t1588 / 0.2e1 + (t1775 + t1309) * t1163 + t1461;
t1223 = -qJD(2) * t147 + qJD(3) * t580 + qJD(4) * t1576;
t462 = qJD(5) * t1037 + t1904;
t651 = (qJD(3) * t1483 + t1050 * qJD(4)) * t1048;
t1212 = -qJD(5) * t1395 + t1559;
t1207 = (qJD(3) * t994 + qJD(5) * t907 - t1691) * t905;
t115 = (t1777 + t1319) * t682;
t1178 = (-t1159 * t1529 + t1163 * t1528) * pkin(11) + t359 * t1776 + t645 * t1778;
t18 = t1178 + t1325;
t1177 = (-t1159 * t1527 - t1163 * t1526) * pkin(11) + t1021 * t1776 + t1054 * t1778;
t182 = t1177 + t1321;
t1198 = t1097 * t1112 * qJD(4) - t115 * qJD(1) + t18 * qJD(2) + t182 * qJD(3);
t684 = -t858 + t1585;
t741 = t1835 + t1836;
t1197 = qJD(2) * t741 - qJD(3) * t684 + t1599 * t907 + t1595;
t1107 = t1156 + t1146;
t1189 = -qJD(2) * t684 + qJD(3) * t1107 + t1425 - t1592;
t1144 = t1598 / 0.2e1;
t1117 = qJD(3) * t1476;
t1110 = qJD(6) * t1486;
t1105 = qJD(2) * t1492;
t1092 = -0.2e1 * t1429;
t1091 = 0.2e1 * t1429;
t1069 = -0.2e1 * t1335;
t1068 = 0.2e1 * t1335;
t1065 = t1557 / 0.2e1;
t1039 = qJD(2) * t1419 + t1144;
t1038 = qJD(2) * t1418 + t1144;
t1036 = t1155 * t1770 + t1478 + t1771;
t1018 = qJD(4) * t1477 + t1105;
t999 = t1155 * t1484 - t1431;
t998 = t1153 * t1484 + t1431;
t981 = t997 * qJD(5);
t945 = -qJD(4) * t1084 + qJD(5) * t1485;
t902 = t1283 * qJ(6);
t892 = qJD(3) * t1418 + t1037 * qJD(4);
t857 = t1154 * t1795;
t848 = t1163 * t1326 + t1065 + t1142;
t847 = t1122 + t1064 + (t1758 / 0.2e1 + t1754) * t1160;
t729 = -t1153 * qJD(4) - t1159 * t1287;
t712 = t1163 * t1554 - t1628;
t679 = -t1163 * t1442 + t1628;
t674 = t684 * qJD(6);
t646 = t657 * qJD(4);
t610 = t895 * t1164;
t581 = pkin(11) * t1464 + t1097 * t1468 - t1588 / 0.2e1 - t1557 / 0.2e1 + t1461;
t551 = t1436 + t1547;
t550 = t1437 + t1548;
t549 = t1220 + t1260;
t542 = -t1919 + (-t1586 - qJD(5) / 0.2e1) * t1483;
t538 = t905 * t1468 + (t1507 + t1475) * t1160;
t536 = -t1500 / 0.2e1 + t1237 + t1875 * t1161;
t535 = t1501 / 0.2e1 + t1238 + t1875 * t1165;
t529 = -t1301 + t1543;
t526 = t1503 + t1230;
t490 = t1164 * t1439 + t1028 / 0.2e1 + t1552 / 0.2e1 + t1310;
t488 = t1203 - t1462;
t477 = -t1919 + (qJD(5) / 0.2e1 + t1333) * t1483;
t447 = t1442 * t1566 - t1646;
t446 = t1646 + (-t1498 + t1597) * t1164;
t396 = t1163 * t1249 + t1065 + t1285 - t1539;
t393 = t1121 + t1149 + pkin(10) * t1468 + t1063 - t1396 * t1163 + (t1479 + t1781) * t1159;
t392 = t402 * qJD(5);
t391 = t401 * qJD(5);
t373 = -t1137 * t1155 - t1580 - t1647;
t369 = t1079 + t1315;
t368 = t1050 * t1467 + t1159 * t1418 + t1482 + t1506;
t367 = t1078 + t1314;
t347 = t358 * qJD(5);
t304 = t1647 - t1580 + (t1155 * t1562 + t1134) * t1164;
t291 = t996 * t1769 + t944 * t1773 + t946 * t1768 + pkin(5) * t1464 + (t1797 + t1518) * t1159;
t272 = qJD(4) * t1566 + t1340;
t271 = -t1340 - t1493;
t253 = t840 + t937 + t1234;
t251 = t839 + t938 - t1234;
t249 = -t1267 + t1401;
t247 = -t1607 / 0.2e1 - t1329 / 0.2e1 - t1270;
t238 = (qJD(3) * t995 - qJD(5) * t905 - t1690) * t907;
t237 = qJD(3) * t548 + t1524 - t1690;
t212 = t1511 + t1454 + t1727;
t210 = t1211 + t1725;
t208 = qJD(3) * t549 - t1443 * t905;
t201 = -qJD(3) * t527 + t1163 * t1523 - t1918;
t197 = qJD(3) * t561 + qJD(4) * t540 - t1595 * t905;
t191 = qJD(4) * t527 - t1698 * t995 - t1917;
t187 = t1610 / 0.2e1 + t1268;
t186 = -t1609 / 0.2e1 + t1269;
t181 = t1177 - t1321;
t179 = t526 * qJD(3) - t1918 + (-t1599 - t1698) * t791;
t165 = t526 * qJD(4) + t1287 * t995 - t1917;
t163 = qJD(3) * t364 + qJD(5) * t791 - t1703;
t150 = qJD(3) * t368 + qJD(4) * t1568 + t1703;
t149 = -qJD(4) * t364 - qJD(5) * t548 - t1643;
t146 = t1519 + t1381 + t1433;
t141 = t1643 + (t1154 * t1489 - t995 * t1164) * qJD(3) + t368 * qJD(4) + t549 * qJD(5);
t139 = (t1585 / 0.2e1 - t1584 / 0.2e1) * t895 + (t1512 + t1513) * t1569 - t1294;
t130 = pkin(10) * t1506 + t1467 * t690 + t1299 + t1724;
t129 = pkin(10) * t1520 + t1472 * t690 - t1723 + t1898;
t116 = (t1319 + t1776) * t682;
t111 = t769 + t1200;
t110 = t770 + t1199;
t103 = t1182 - t1934;
t97 = t1163 * t1416 + t1023 + t1272 + t1525;
t91 = t1201 + t1730;
t90 = t1202 + t1729;
t84 = t308 - t1215 + t1276;
t81 = t82 * qJD(5);
t79 = t80 * qJD(5);
t65 = t1471 * t645 - t1192 + t1440 + t1724 + t307;
t63 = t1468 * t645 + t1471 * t359 - t1216 + t1434 + t1723 + t317;
t57 = pkin(10) * t1436 + t690 * t1463 + t743 * t1467 + t496 * t1766 + t358 * t1771 + t1277 - t1291;
t56 = pkin(10) * t1260 + t690 * t1469 + t743 * t1471 + t495 * t1767 - t1214 + t1278;
t50 = t827 * t1533 + t1444 - t1791 / 0.2e1 + t1174;
t41 = -t1659 / 0.2e1 - t1662 / 0.2e1 + t1657 / 0.2e1 + t1661 / 0.2e1 + (t1678 / 0.2e1 + t1755 / 0.2e1) * t1048;
t36 = t355 + t1638 / 0.2e1 + t480 * t1807 + t1323 + t1860 * t479;
t34 = t997 * t1514 + t996 * t1515 + pkin(10) * t1513 + (pkin(10) * t1817 + t1540) * t1160 + t1263 - t1297;
t32 = t1514 * t944 + t1515 * t946 + t1786 * t682 + t1194 - t1222;
t29 = t1159 * t1213 + t1060 + t1184 - t1302;
t28 = t1021 * t1465 + t1464 * t359 + t1468 * t509 - t1183 + t1266;
t26 = t358 * t1467 + t283 * t1468 + t357 * t1471 + t284 * t1472 + t905 * t1808 + t1860 * t907 + t1327 + t699;
t24 = t1169 + t1206;
t20 = t1463 * t357 + t1466 * t996 + t1468 * t495 + t1470 * t358 + t1472 * t496 + t1473 * t997 + t1261 + t1295 - t1303;
t17 = t1178 - t1325;
t16 = t1463 * t284 + t1466 * t946 + t1467 * t399 + t1470 * t283 + t1472 * t398 + t1473 * t944 + t1261 + t1298 - t1316;
t14 = t1179 + t1324;
t11 = t1175 + t1941;
t9 = t1188 - t1322;
t8 = t1180 + t1205;
t5 = t1510 * t690 + t1185 - t1317 + t1444;
t3 = t1176 - t1942;
t1 = t1173 - t1221;
t21 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t285, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t167 + qJD(3) * t166, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1840, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1840; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t1457, -qJD(2) * t1432, 0, 0, 0, 0, 0, 0, 0, 0 (-t1152 * t1410 - t1750 * t984) * qJD(2) + t536 * qJD(3) (t1152 * t1411 - t1750 * t985) * qJD(2) + t535 * qJD(3) (t1161 * t984 + t1165 * t985) * qJD(2) * t1158, t1660 + (t984 * t1051 + t985 * t1053 - t1457 * t1765) * qJD(2), 0, 0, 0, 0, 0, 0 (t984 * t1048 + t1569 * t826) * qJD(2) + t186 * qJD(3) + t249 * qJD(4) (t984 * t1050 + t1569 * t827) * qJD(2) + t187 * qJD(3) + t247 * qJD(4) (-t1048 * t827 + t1050 * t826) * qJD(2) + t139 * qJD(3), t1665 + (t1016 * t984 + t742 * t826 + t743 * t827) * qJD(2) + t50 * qJD(3), 0, 0, 0, 0, 0, 0, t1837, t91 * qJD(3) + t111 * qJD(4) - t1938, t1841, t1880 + (t357 * t624 + t358 * t625 + t690 * t826) * qJD(2) + t5 * qJD(3) + t11 * qJD(4), 0, 0, 0, 0, 0, 0, t1837, t1841, t90 * qJD(3) + t110 * qJD(4) + t1938, t1880 + (t283 * t625 + t284 * t624 + t359 * t826) * qJD(2) + t1 * qJD(3) + t3 * qJD(4) + t9 * qJD(5) - t1313 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t536 - qJD(3) * t896, qJD(2) * t535 + t1693, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t186 + qJD(4) * t608 - t1554 * t896, qJD(2) * t187 + qJD(4) * t610 + t1562 * t896, t139 * qJD(2) + (-t1154 - t1156) * t1693, t1666 + t50 * qJD(2) + (-pkin(3) * t896 - t1156 * t1795 - t857) * qJD(3), 0, 0, 0, 0, 0, 0, t1838, qJD(2) * t91 - t1244, t1842, t1883 + t5 * qJD(2) + (t595 * t996 + t596 * t997 - t857) * qJD(3) + t34 * qJD(4) + t79, 0, 0, 0, 0, 0, 0, t1838, t1842, qJD(2) * t90 + t1244, t1883 + t1 * qJD(2) + (-t1021 * t608 + t595 * t946 + t596 * t944) * qJD(3) + t32 * qJD(4) + t36 * qJD(5) - t1218 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t249 + qJD(3) * t608 - qJD(4) * t683, qJD(2) * t247 + qJD(3) * t610 + t1692, 0, 0, 0, 0, 0, 0, 0, 0, t1843, qJD(2) * t111 - t1224, t1844, t1881 + t11 * qJD(2) + t34 * qJD(3) + (-pkin(4) * t683 + t1728) * qJD(4), 0, 0, 0, 0, 0, 0, t1843, t1844, qJD(2) * t110 + t1224, t1881 + t3 * qJD(2) + t32 * qJD(3) + (t1097 * t683 + t1728) * qJD(4) + t116 * qJD(5) - t343 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1910, -t1940, 0, t1746, 0, 0, 0, 0, 0, 0, t1910, 0, t1940, t9 * qJD(2) + t36 * qJD(3) + t116 * qJD(4) + (-pkin(5) * t480 - qJ(6) * t479) * qJD(5) + t480 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1910; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t533 * qJD(3), -t534 * qJD(3), 0, -t1660, 0, 0, 0, 0, 0, 0, qJD(3) * t185 + qJD(4) * t248, qJD(3) * t188 + qJD(4) * t246, qJD(3) * t140, qJD(3) * t51 - t1665, 0, 0, 0, 0, 0, 0, t1839, qJD(3) * t92 + qJD(4) * t112 - t1943, t1845, qJD(3) * t6 + qJD(4) * t12 - t1880, 0, 0, 0, 0, 0, 0, t1839, t1845, qJD(3) * t89 + qJD(4) * t109 + t1943, qJD(3) * t2 + qJD(4) * t4 + qJD(5) * t10 + qJD(6) * t1235 - t1880; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1430, t1067 * qJD(3), qJD(3) * t1413, -t1430, -qJD(3) * t1414, 0, t920 * qJD(3), -t919 * qJD(3), 0, 0 (qJD(3) * t1488 - t1048 * qJD(4)) * t1050, qJD(3) * t713 + qJD(4) * t715, -t886 * qJD(3) + t1048 * t1496, t651, t885 * qJD(3) + t1050 * t1496, -t1430, -qJD(3) * t241 - qJD(4) * t494, qJD(3) * t242 + qJD(4) * t493, qJD(3) * t184, qJD(3) * t200, t238, -t1902, t197, t1207, -t1905, t651, qJD(3) * t117 + qJD(4) * t105 + qJD(5) * t190, qJD(3) * t118 + qJD(4) * t106 + qJD(5) * t189, qJD(3) * t72 + qJD(4) * t71, qJD(3) * t73 + qJD(4) * t68, t238, t197, t1902, t651, t1905, t1207, qJD(3) * t70 + qJD(4) * t67 + qJD(5) * t122 - t1616 * t907, qJD(3) * t49 + qJD(4) * t48 + qJD(5) * t42 - t1031 * t905, qJD(3) * t69 + qJD(4) * t66 + qJD(5) * t121 + qJD(6) * t741, qJD(3) * t39 + qJD(4) * t37 + qJD(5) * t38 + qJD(6) * t144; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1105, t1579, t1382 * t1569, -t1105, -t1382 * t1571, 0, -qJD(3) * t1053 - t1350, qJD(3) * t1051 - t1349, 0, 0, t1332 * t1488 + t1919, t1569 * t1601 + t1632 + t646, qJD(3) * t1490 - t1621, t1333 * t1483 - t1919, qJD(3) * t1481 + t1622, -t1018 (-t1053 * t1164 + t1160 * t1304) * qJD(3) + t490 * qJD(4) + t1354 (t1053 * t1160 + t1164 * t1304) * qJD(3) + t488 * qJD(4) + t1353, qJD(3) * t1341 + t1358 (-t1053 * pkin(3) + pkin(10) * t1341) * qJD(3) + t1374, t165, t253 * qJD(4) - t1930 - t392, t141, t1932, t367 * qJD(4) + t551 * qJD(5) + t1929, t477, -t510 * t1554 + t56 * qJD(4) + t130 * qJD(5) + (pkin(10) * t994 - t1569 * t996 + t1631) * t1562 + t1376, t511 * t1554 + t57 * qJD(4) + t129 * qJD(5) + (pkin(10) * t995 - t1569 * t997 + t1630) * t1562 + t1375 (-t997 * t994 + t996 * t995 + (-t1159 * t511 - t1163 * t510) * t1160) * qJD(3) + t20 * qJD(4) + t81 + t1391 (t1756 * t753 - t510 * t996 + t511 * t997) * qJD(3) + t24 * qJD(4) + t1397, t165, t141, t251 * qJD(4) + t1930 - t391, t477, t369 * qJD(4) + t550 * qJD(5) - t1929, t1932 (t1021 * t994 + t465 * t1164 + (-t1569 * t946 + t1649) * t1160) * qJD(3) + t29 * qJD(4) + t65 * qJD(5) + t538 * qJD(6) + t1387 (-t944 * t994 + t946 * t995 + (-t1159 * t464 + t1163 * t465) * t1160) * qJD(3) + t16 * qJD(4) + t26 * qJD(5) + t549 * qJD(6) + t1392 (-t1021 * t995 - t464 * t1164 + (t1569 * t944 - t1648) * t1160) * qJD(3) + t28 * qJD(4) + t63 * qJD(5) - t674 + t1388 (t1021 * t491 + t464 * t944 + t465 * t946) * qJD(3) + t8 * qJD(4) + t14 * qJD(5) + t84 * qJD(6) + t1399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1904, t1347, t1386 * t1048, t1904, t1386 * t1050, t1117, qJD(3) * t490 - qJD(4) * t743 - t1351, qJD(3) * t488 + qJD(4) * t742 - t1352, 0, 0, t179, qJD(3) * t253 - t1927, t150, t1908, qJD(3) * t367 + t1914, t462, t56 * qJD(3) + (t1159 * t1405 - t743 * t1163) * qJD(4) + t212 * qJD(5) + t1362, t57 * qJD(3) + (t743 * t1159 + t1163 * t1405) * qJD(4) + t210 * qJD(5) + t1361, t20 * qJD(3) + qJD(4) * t1344 + t1389, t24 * qJD(3) + (-t743 * pkin(4) + pkin(11) * t1344) * qJD(4) + t1393, t179, t150, qJD(3) * t251 + t1927, t462, qJD(3) * t369 - t1914, t1908, t29 * qJD(3) + (-t1159 * t1380 - t509 * t1163) * qJD(4) + t97 * qJD(5) + t529 * qJD(6) + t1377, t16 * qJD(3) + qJD(4) * t1345 + t41 * qJD(5) + t1390, t28 * qJD(3) + (-t509 * t1159 + t1163 * t1380) * qJD(4) + t103 * qJD(5) + t1521 + t1378, t8 * qJD(3) + (pkin(11) * t1345 + t509 * t1097) * qJD(4) + t17 * qJD(5) + t146 * qJD(6) + t1398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1933, t1245, t208, t1933, qJD(3) * t551 - t1900, t892, qJD(3) * t130 + qJD(4) * t212 - t1356 - t347, qJD(3) * t129 + qJD(4) * t210 - t1355 + t1688, t1745, 0, -t1933, t208, t1246, t892, qJD(3) * t550 + t1900, t1933, qJD(3) * t65 + qJD(4) * t97 - t1359 - t347, t26 * qJD(3) + t41 * qJD(4) + qJD(5) * t1403 - t1616 + t1743, qJD(3) * t63 + qJD(4) * t103 + t1031 - t1360 - t1688, t14 * qJD(3) + t17 * qJD(4) + (-pkin(5) * t358 - qJ(6) * t357) * qJD(5) + t283 * qJD(6) + t1394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t538 + qJD(4) * t529 - t1531, t208, t1197, qJD(3) * t84 + qJD(4) * t146 + qJD(5) * t283 + t1357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t533 * qJD(2), t534 * qJD(2), 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t185, -qJD(2) * t188, -qJD(2) * t140, -qJD(2) * t51 - t1666, 0, 0, 0, 0, 0, 0, -qJD(5) * t172 + t1847, -qJD(2) * t92 - t1346, t1846, -qJD(2) * t6 - qJD(4) * t33 - t1883 + t79, 0, 0, 0, 0, 0, 0, qJD(5) * t175 + t1847, t1846, -qJD(2) * t89 + t1346, -qJD(2) * t2 - qJD(4) * t31 - qJD(5) * t35 - qJD(6) * t175 - t1883; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1105, -t1579, -qJD(2) * t1413, t1105, qJD(2) * t1414, 0, t1350, t1349, 0, 0, -t1050 * t1424 + t1919, t646 - t1632, -qJD(4) * t1488 + t1621, -t1048 * t1427 - t1919, qJD(4) * t1483 - t1622, t1018, qJD(4) * t489 - t1354, qJD(4) * t487 - t1353, -t1358, -t1374, t191, qJD(4) * t254 + t1924 - t392, t149, t1931, -qJD(4) * t365 - qJD(5) * t547 + t1922, t542, -qJD(4) * t54 - qJD(5) * t127 - t1376, -qJD(4) * t55 - qJD(5) * t128 - t1375, -qJD(4) * t19 - t1391 + t81, -qJD(4) * t23 - t1397, t191, t149, qJD(4) * t252 - t1924 - t391, t542, -qJD(4) * t366 - qJD(5) * t546 - t1922, t1931, qJD(4) * t30 - qJD(5) * t64 - qJD(6) * t537 - t1387, -qJD(4) * t15 - qJD(5) * t25 - qJD(6) * t548 - t1392, -qJD(4) * t27 - qJD(5) * t62 - t1388 - t674, -qJD(4) * t7 - qJD(5) * t13 - qJD(6) * t83 - t1399; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1484, t1131 * qJD(4), 0, -t1484, 0, 0, -pkin(3) * t1598, -pkin(3) * t1596, 0, 0, t999, -t1227, t945, t998, t1255, -t1484, -qJD(4) * t672 - qJD(5) * t890, qJD(4) * t673 + qJD(5) * t889, -qJD(4) * t404, qJD(4) * t492, t999, t945, t1227, -t1484, -t1255, t998, qJD(4) * t403 + qJD(5) * t605 - qJD(6) * t1491, -qJD(4) * t298 - qJD(5) * t348 + qJD(6) * t1485, -qJD(4) * t400 - qJD(5) * t606 + qJD(6) * t1107, qJD(4) * t264 + qJD(5) * t287 - qJD(6) * t686; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1446, t1339, -t1386 * t1164, -t1446, t1386 * t1160, qJD(2) * t1477, -pkin(10) * t1596 - t1312, pkin(10) * t1598 - t1311, 0, 0, t304, t1069 + t1092 + t1600 + t1715, t272, t1915, t1495 - t1861, -t676 (t1159 * t1404 - t1535) * qJD(4) + t848 * qJD(5) + t1252 (t1163 * t1404 + t1536) * qJD(4) + t847 * qJD(5) + t1872, qJD(4) * t1331 + t1253 (-pkin(4) * t1753 + pkin(11) * t1331) * qJD(4) + t1257, t304, t272, t1068 + t1091 - t1600 + t1716, -t676, -t1495 + t1869, t1915 (-t1022 * t1163 - t1159 * t1379) * qJD(4) + t396 * qJD(5) + t1036 * qJD(6) + t1251, qJD(4) * t1343 + t291 * qJD(5) + t1254 (-t1022 * t1159 + t1163 * t1379) * qJD(4) + t393 * qJD(5) + t1110 + t1871 (pkin(11) * t1343 + t1022 * t1097) * qJD(4) + t181 * qJD(5) + t581 * qJD(6) + t1265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1912, t1549 - t1711, t447, t1912, -t1384 - t1700, t1039, qJD(4) * t848 - t1248 - t981, qJD(4) * t847 - t1348 + t1862, t1747, t1748, -t1912, t447, t1546 - t1712, t1039, t1384 - t1701, t1912, qJD(4) * t396 - t1873 - t981, t291 * qJD(4) + (-qJ(6) * t1561 + t1140) * qJD(5) - qJD(6) * t1566 + t1373, qJD(4) * t393 - t1368 - t1590 - t1862, t181 * qJD(4) + (-pkin(5) * t997 - qJ(6) * t996) * qJD(5) + t944 * qJD(6) + t1258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1036 - t1453, t447, t1189, qJD(4) * t581 + qJD(5) * t944 - t1863; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2) * t248, -qJD(2) * t246, 0, 0, 0, 0, 0, 0, 0, 0, t1848, -qJD(2) * t112 - t1697, t1849, -qJD(2) * t12 + qJD(3) * t33 - t1881, 0, 0, 0, 0, 0, 0, t1848, t1849, -qJD(2) * t109 + t1697, -qJD(2) * t4 + qJD(3) * t31 - qJD(5) * t115 - t1881; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1904, -t1347, -t1333 * t1569, -t1904, -t1332 * t1569, t1117, -qJD(3) * t489 + t1351, -qJD(3) * t487 + t1352, 0, 0, t201, -qJD(3) * t254 - t1928, t163, t1907, qJD(3) * t365 + t1906, -t462, qJD(3) * t54 + qJD(5) * t211 - t1362, qJD(3) * t55 + qJD(5) * t209 - t1361, qJD(3) * t19 - t1389, qJD(3) * t23 - t1393, t201, t163, -qJD(3) * t252 + t1928, -t462, qJD(3) * t366 - t1906, t1907, -qJD(3) * t30 + qJD(5) * t96 - qJD(6) * t528 - t1377, qJD(3) * t15 - qJD(5) * t40 + qJD(6) * t791 - t1390, qJD(3) * t27 + qJD(5) * t104 - t1378 + t1521, qJD(3) * t7 + qJD(5) * t18 + qJD(6) * t147 - t1398; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1446, -t1339, t1424, t1446, -t1427, qJD(2) * t1476, t1312, t1311, 0, 0, t373, t1068 + t1092 - t1715, t271, t1913, t1494 + t1861, t676, qJD(5) * t904 - t1252, qJD(5) * t903 - t1872, -t1253, -t1257, t373, t271, t1069 + t1091 - t1716, t676, -t1494 - t1869, t1913, qJD(5) * t397 - qJD(6) * t1035 - t1251, -qJD(5) * t290 - qJD(6) * t1555 - t1254, qJD(5) * t394 + t1110 - t1871, qJD(5) * t182 - qJD(6) * t580 - t1265; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1136, t1574, 0, -t1136, 0, 0, -pkin(4) * t1594, -pkin(4) * t1593, 0, 0, t1136, 0, -t1574, 0, 0, -t1136, -qJD(5) * t913 + t1159 * t1559, 0, -qJD(5) * t912 + qJD(6) * t1153 (qJD(5) * t1112 - t1591) * t1097; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1911, -t1936, t679, t1911, -t1870, -t939, -t1229 - t1537, -t1228 + t1538, 0, 0, -t1911, t679, t1936, -t939, t1870, t1911, -t1250 - t1537, t1212 - t1371, -t1247 - t1538, pkin(11) * t1212 + t1198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1286, t679, -t729, -t1223 + t1537; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t172 + t1888, t1939, 0, -t1746, 0, 0, 0, 0, 0, 0, -t1945, 0, -t1939, -qJD(2) * t10 + qJD(3) * t35 + qJD(4) * t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1933, -t1245, t237, -t1933, qJD(3) * t547 - t1292, t892, qJD(3) * t127 - qJD(4) * t211 + t1356, qJD(3) * t128 - qJD(4) * t209 + t1355, -t1745, 0, t1933, t237, -t1246, t892, qJD(3) * t546 + t1292, -t1933, qJD(3) * t64 - qJD(4) * t96 + t1359, qJD(3) * t25 + qJD(4) * t40 - t1743, qJD(3) * t62 - qJD(4) * t104 + t1031 + t1360, qJ(6) * t1031 + qJD(3) * t13 - qJD(4) * t18 - t1394; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1912, t1546 + t1711, t446, -t1912, -t1385 + t1700, t1038, -qJD(4) * t904 + t1248, -qJD(4) * t903 + t1348 - t1664, -t1747, -t1748, t1912, t446, t1549 + t1712, t1038, t1385 + t1701, -t1912, -qJD(4) * t397 + t1873, qJD(4) * t290 - t1373, -qJD(4) * t394 + t1368 - t1590 + t1664, -qJ(6) * t1590 - qJD(4) * t182 - t1258; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1911, t1936, t712, -t1911, t1864, t939, t1229, t1228, 0, 0, t1911, t712, -t1936, t939, -t1864, -t1911, t1250, t1371, t1247, -t1198; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(6), qJ(6) * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1283, t902; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1945; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t537 + qJD(4) * t528 + t1531, t237, -t1197, -qJ(6) * t1595 + qJD(3) * t83 - qJD(4) * t147 - t1357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4) * t1035 + t1453, t446, -t1189, qJ(6) * t1592 + qJD(4) * t580 + t1863; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1286, t712, t729, t1223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1283, -t902; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t21;
