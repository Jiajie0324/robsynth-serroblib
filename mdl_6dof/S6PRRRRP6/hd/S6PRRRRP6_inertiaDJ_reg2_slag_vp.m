% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6PRRRRP6
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [12x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d2,d3,d4,d5,theta1]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 00:36
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6PRRRRP6_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(12,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PRRRRP6_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PRRRRP6_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [12 1]), ...
  'S6PRRRRP6_inertiaDJ_reg2_slag_vp: pkin has to be [12x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 00:34:26
% EndTime: 2019-03-09 00:34:45
% DurationCPUTime: 7.06s
% Computational Cost: add. (6477->488), mult. (19086->836), div. (0->0), fcn. (18884->12), ass. (0->241)
t148 = sin(qJ(5));
t152 = cos(qJ(5));
t149 = sin(qJ(4));
t153 = cos(qJ(4));
t145 = sin(pkin(7));
t146 = sin(pkin(6));
t147 = cos(pkin(6));
t155 = cos(qJ(2));
t282 = cos(pkin(7));
t101 = -t146 * t155 * t145 + t147 * t282;
t150 = sin(qJ(3));
t151 = sin(qJ(2));
t154 = cos(qJ(3));
t229 = t155 * t282;
t179 = t150 * t229 + t151 * t154;
t281 = t145 * t150;
t69 = t146 * t179 + t147 * t281;
t197 = t101 * t153 - t149 * t69;
t272 = qJD(2) * t146;
t234 = t151 * t272;
t223 = t145 * t234;
t231 = t150 * t282;
t269 = qJD(3) * t154;
t235 = t145 * t269;
t314 = -t150 * t151 + t154 * t229;
t48 = t147 * t235 + (t314 * qJD(3) + (-t151 * t231 + t154 * t155) * qJD(2)) * t146;
t25 = qJD(4) * t197 + t149 * t223 + t48 * t153;
t53 = t101 * t149 + t153 * t69;
t279 = t145 * t154;
t68 = -t146 * t314 - t147 * t279;
t35 = t148 * t68 + t152 * t53;
t230 = t154 * t282;
t270 = qJD(3) * t150;
t236 = t145 * t270;
t47 = t147 * t236 + (t179 * qJD(3) + (t150 * t155 + t151 * t230) * qJD(2)) * t146;
t10 = t35 * qJD(5) + t25 * t148 - t47 * t152;
t34 = t148 * t53 - t68 * t152;
t11 = -t34 * qJD(5) + t47 * t148 + t25 * t152;
t205 = -t148 * t35 + t152 * t34;
t172 = t205 * qJD(5) + t10 * t148 + t11 * t152;
t138 = qJD(5) * t152;
t239 = t149 * t138;
t266 = qJD(4) * t153;
t106 = t148 * t266 + t239;
t280 = t145 * t153;
t103 = t149 * t282 + t150 * t280;
t71 = t103 * t148 + t152 * t279;
t247 = t148 * t279;
t72 = t103 * t152 - t247;
t202 = t148 * t72 + t152 * t71;
t248 = t149 * t281;
t121 = qJD(4) * t248;
t227 = t282 * qJD(4);
t178 = t227 + t235;
t313 = -t153 * t178 + t121;
t42 = -qJD(5) * t247 + t103 * t138 - t148 * t313 - t152 * t236;
t284 = t42 * t152;
t41 = qJD(5) * t71 - t148 * t236 + t152 * t313;
t286 = t41 * t148;
t288 = t152 * t72;
t289 = t148 * t71;
t317 = t149 * (qJD(5) * (-t288 + t289) - t284 + t286) - t202 * t266;
t102 = -t153 * t282 + t248;
t264 = qJD(5) * t148;
t259 = t103 * qJD(4);
t70 = t149 * t235 + t259;
t56 = t102 * t264 - t152 * t70;
t316 = pkin(11) * t56;
t141 = t148 ^ 2;
t143 = t152 ^ 2;
t274 = t141 - t143;
t139 = qJD(4) * t149;
t58 = t102 * t139 - t70 * t153;
t122 = t274 * qJD(5);
t262 = qJD(5) * t153;
t240 = t148 * t262;
t267 = qJD(4) * t152;
t105 = t149 * t267 + t240;
t297 = pkin(11) * t149;
t215 = -pkin(4) * t153 - t297;
t195 = -pkin(3) + t215;
t183 = t152 * t195;
t296 = pkin(11) * t153;
t214 = pkin(4) * t149 - t296;
t185 = qJD(4) * t214;
t61 = pkin(10) * t105 - qJD(5) * t183 - t148 * t185;
t209 = pkin(5) * t148 - qJ(6) * t152;
t100 = t209 * qJD(5) - t148 * qJD(6);
t210 = pkin(5) * t152 + qJ(6) * t148;
t117 = -pkin(4) - t210;
t194 = pkin(10) + t209;
t97 = t194 * t149;
t312 = qJD(4) * (-t117 * t153 + t297) - qJD(5) * t97 - t100 * t149;
t228 = qJD(3) * t282;
t218 = t150 * t228;
t156 = pkin(2) * t218 + t70 * pkin(4) + pkin(9) * t235 + pkin(11) * t313;
t216 = pkin(3) * t150 - pkin(10) * t154;
t271 = qJD(3) * t145;
t182 = t216 * t271;
t111 = pkin(2) * t231 + pkin(9) * t279;
t95 = t282 * pkin(10) + t111;
t96 = (-pkin(3) * t154 - pkin(10) * t150 - pkin(2)) * t145;
t217 = t154 * t228;
t98 = -pkin(2) * t217 + pkin(9) * t236;
t36 = t95 * t139 - t149 * t182 + t153 * t98 - t96 * t266;
t171 = pkin(11) * t236 - t36;
t110 = pkin(2) * t230 - pkin(9) * t281;
t94 = -t282 * pkin(3) - t110;
t160 = t102 * pkin(4) - t103 * pkin(11) + t94;
t64 = t149 * t96 + t153 * t95;
t55 = -pkin(11) * t279 + t64;
t291 = t148 * t160 + t152 * t55;
t7 = -qJD(5) * t291 - t148 * t171 + t152 * t156;
t285 = t41 * t152;
t310 = qJD(5) * t202 + t148 * t42 + t285;
t309 = t210 * qJD(5) - t152 * qJD(6);
t244 = t148 * t139;
t298 = pkin(10) * t153;
t136 = t152 * t298;
t275 = t148 * t195 + t136;
t62 = pkin(10) * t244 - qJD(5) * t275 + t152 * t185;
t268 = qJD(4) * t148;
t57 = t102 * t138 + t148 * t70;
t308 = t149 * (qJD(4) * t71 + t57) + t153 * (t102 * t268 - t42);
t307 = t154 ^ 2;
t306 = 0.2e1 * t145;
t305 = 0.2e1 * qJD(6);
t304 = pkin(11) * t41;
t303 = t70 * pkin(5);
t302 = pkin(4) * t152;
t301 = pkin(10) * t145;
t300 = pkin(10) * t148;
t299 = pkin(10) * t149;
t261 = qJD(6) * t102;
t290 = qJ(6) * t70;
t159 = t152 * t160;
t6 = -qJD(5) * t159 - t148 * t156 - t152 * t171 + t55 * t264;
t3 = t261 - t6 + t290;
t295 = t152 * t3;
t294 = t47 * t68;
t24 = qJD(4) * t53 + t48 * t149 - t153 * t223;
t16 = t197 * t24;
t293 = t6 * t152;
t99 = t111 * qJD(3);
t292 = t68 * t99;
t287 = t24 * t149;
t142 = t149 ^ 2;
t273 = -t153 ^ 2 + t142;
t265 = qJD(4) * t154;
t263 = qJD(5) * t149;
t260 = qJD(6) * t153;
t257 = 0.2e1 * t71 * t42;
t256 = -0.2e1 * pkin(3) * qJD(4);
t255 = -0.2e1 * pkin(4) * qJD(5);
t65 = 0.2e1 * t102 * t70;
t254 = -t96 * t139 + t149 * t98 - t95 * t266;
t253 = t148 * t298;
t252 = pkin(5) * t139;
t251 = pkin(10) * t266;
t250 = pkin(11) * t264;
t249 = pkin(11) * t138;
t246 = qJ(6) * t139;
t140 = t145 ^ 2;
t245 = t140 * t269;
t242 = t149 * t265;
t241 = t152 * t266;
t238 = t152 * t262;
t233 = t148 * t138;
t232 = t149 * t266;
t63 = -t149 * t95 + t153 * t96;
t226 = t273 * qJD(4);
t225 = 0.2e1 * t232;
t224 = t140 * t234;
t222 = t142 * t233;
t221 = t150 * t245;
t220 = t148 * t241;
t54 = pkin(4) * t279 - t63;
t212 = t41 * t71 - t42 * t72;
t211 = t102 * t42 + t70 * t71;
t22 = qJ(6) * t102 + t291;
t27 = -t148 * t55 + t159;
t23 = -t102 * pkin(5) - t27;
t207 = -t148 * t22 + t152 * t23;
t206 = -t148 * t291 - t152 * t27;
t77 = -qJ(6) * t153 + t275;
t79 = -t152 * (-pkin(3) - t297) + (pkin(5) + t300 + t302) * t153;
t200 = -t148 * t77 + t152 * t79;
t91 = t183 - t253;
t199 = -t148 * t275 - t152 * t91;
t37 = t153 * t182 + t254;
t198 = -t37 * t149 - t36 * t153;
t193 = 0.2e1 * t10 * t34 + 0.2e1 * t35 * t11 - 0.2e1 * t16;
t33 = (-t150 * pkin(4) - t153 * t216) * t271 - t254;
t12 = t42 * pkin(5) + t41 * qJ(6) - t72 * qJD(6) + t33;
t29 = pkin(5) * t71 - qJ(6) * t72 + t54;
t192 = -t12 * t148 - t29 * t138;
t191 = -t12 * t152 + t29 * t264;
t14 = -t152 * t24 - t197 * t264;
t190 = t54 * t138 + t33 * t148;
t189 = -t33 * t152 + t54 * t264;
t188 = t71 * t264 - t284;
t187 = (t288 + t289) * pkin(11);
t186 = t10 * t72 - t11 * t71 - t34 * t41 - t35 * t42;
t184 = -t10 * t102 - t197 * t42 + t24 * t71 - t34 * t70;
t181 = t57 * pkin(11);
t180 = t149 * t270 - t153 * t265;
t177 = t10 * t153 - t106 * t197 - t34 * t139 + t148 * t287;
t175 = t102 * t11 - t197 * t41 - t24 * t72 + t35 * t70;
t166 = t287 + t25 * t153 + (-t149 * t53 - t153 * t197) * qJD(4);
t50 = -t61 + t246 - t260;
t59 = -t252 - t62;
t165 = t200 * qJD(5) + t59 * t148 + t50 * t152;
t164 = t199 * qJD(5) - t62 * t148 - t61 * t152;
t163 = t172 * pkin(11);
t162 = t71 * t239 + (t149 * t42 + t71 * t266) * t148;
t157 = t205 * t266 + (t10 * t152 - t11 * t148 + (-t148 * t34 - t152 * t35) * qJD(5)) * t149;
t131 = -0.2e1 * t232;
t130 = -0.2e1 * t233;
t129 = 0.2e1 * t233;
t128 = pkin(11) * t238;
t116 = -0.2e1 * t221;
t107 = -t238 + t244;
t104 = -t148 * t263 + t241;
t84 = 0.2e1 * t143 * t232 - 0.2e1 * t222;
t83 = 0.2e1 * t141 * t232 + 0.2e1 * t222;
t78 = t263 * t274 - t220;
t76 = -t148 * t226 + t149 * t238;
t75 = 0.4e1 * t149 * t233 + t274 * t266;
t74 = 0.2e1 * t149 * t240 + 0.2e1 * t273 * t267;
t73 = t122 * t142 - 0.2e1 * t149 * t220;
t60 = t149 * t309 + t194 * t266;
t40 = pkin(11) * t284;
t31 = -0.2e1 * t72 * t41;
t30 = t72 * t138 - t286;
t20 = -0.2e1 * t102 * t41 + 0.2e1 * t70 * t72;
t19 = t72 * t241 + (-t72 * t264 - t285) * t149;
t15 = (t102 * t267 + t41) * t153 + (qJD(4) * t72 - t56) * t149;
t13 = -t138 * t197 + t148 * t24;
t4 = -t303 - t7;
t1 = (-t197 * t267 + t11) * t153 + (-qJD(4) * t35 - t14) * t149;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t101 * t223 + 0.2e1 * t48 * t69 + 0.2e1 * t294, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t25 * t53 - 0.2e1 * t16 + 0.2e1 * t294, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193, 0, 0, 0, 0, 0, 0, 0, 0, 0, t193; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t234, -t155 * t272, 0, 0, 0, 0, 0, 0, 0, 0, t101 * t236 - t154 * t224 - t47 * t282, t101 * t235 + t150 * t224 - t48 * t282 (t150 * t47 + t154 * t48 + (-t150 * t69 + t154 * t68) * qJD(3)) * t145, -pkin(2) * t224 - t110 * t47 + t111 * t48 - t69 * t98 + t292, 0, 0, 0, 0, 0, 0, t47 * t102 + t68 * t70 + (t154 * t24 + t197 * t270) * t145, t47 * t103 - t236 * t53 + t25 * t279 - t313 * t68, -t25 * t102 + t24 * t103 + t197 * t313 - t53 * t70, t197 * t37 - t24 * t63 + t25 * t64 - t36 * t53 + t47 * t94 + t292, 0, 0, 0, 0, 0, 0, t184, -t175, t186, -t10 * t27 + t11 * t291 - t197 * t33 + t24 * t54 - t34 * t7 - t35 * t6, 0, 0, 0, 0, 0, 0, t184, t186, t175, t10 * t23 + t11 * t22 - t12 * t197 + t24 * t29 + t3 * t35 + t34 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t221, 0.2e1 * (-t150 ^ 2 + t307) * t140 * qJD(3), t217 * t306, t116, -0.2e1 * t145 * t218, 0, -0.2e1 * t140 * pkin(2) * t270 - 0.2e1 * t99 * t282, -0.2e1 * pkin(2) * t245 + 0.2e1 * t98 * t282 (t150 * t99 - t154 * t98 + (-t110 * t154 - t111 * t150) * qJD(3)) * t306, -0.2e1 * t110 * t99 - 0.2e1 * t111 * t98, -0.2e1 * t103 * t313, 0.2e1 * t102 * t313 - 0.2e1 * t103 * t70 (-(t153 * t227 - t121) * t154 + (t103 * t150 - t307 * t280) * qJD(3)) * t306, t65 (-t102 * t270 + t154 * t70) * t306, t116, 0.2e1 * t99 * t102 + 0.2e1 * t94 * t70 + 0.2e1 * (-t154 * t37 + t270 * t63) * t145, 0.2e1 * t99 * t103 - 0.2e1 * t236 * t64 - 0.2e1 * t279 * t36 - 0.2e1 * t313 * t94, 0.2e1 * t36 * t102 - 0.2e1 * t37 * t103 + 0.2e1 * t313 * t63 - 0.2e1 * t64 * t70, -0.2e1 * t36 * t64 + 0.2e1 * t37 * t63 + 0.2e1 * t94 * t99, t31, 0.2e1 * t212, t20, t257, -0.2e1 * t211, t65, 0.2e1 * t102 * t7 + 0.2e1 * t27 * t70 + 0.2e1 * t33 * t71 + 0.2e1 * t42 * t54, 0.2e1 * t102 * t6 - 0.2e1 * t291 * t70 + 0.2e1 * t33 * t72 - 0.2e1 * t41 * t54, 0.2e1 * t27 * t41 - 0.2e1 * t291 * t42 + 0.2e1 * t6 * t71 - 0.2e1 * t7 * t72, 0.2e1 * t27 * t7 - 0.2e1 * t291 * t6 + 0.2e1 * t33 * t54, t31, t20, -0.2e1 * t212, t65, 0.2e1 * t211, t257, -0.2e1 * t102 * t4 + 0.2e1 * t12 * t71 - 0.2e1 * t23 * t70 + 0.2e1 * t29 * t42, -0.2e1 * t22 * t42 - 0.2e1 * t23 * t41 - 0.2e1 * t3 * t71 + 0.2e1 * t4 * t72, 0.2e1 * t102 * t3 - 0.2e1 * t12 * t72 + 0.2e1 * t22 * t70 + 0.2e1 * t29 * t41, 0.2e1 * t12 * t29 + 0.2e1 * t22 * t3 + 0.2e1 * t23 * t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t47, -t48, 0, 0, 0, 0, 0, 0, 0, 0, t139 * t68 - t153 * t47, t149 * t47 + t266 * t68, t166, -t47 * pkin(3) + pkin(10) * t166, 0, 0, 0, 0, 0, 0, t177, t1, t157, -t10 * t91 + t11 * t275 - t34 * t62 - t35 * t61 + (-t197 * t266 + t287) * pkin(10), 0, 0, 0, 0, 0, 0, t177, t157, -t1, t10 * t79 + t11 * t77 - t197 * t60 + t24 * t97 + t34 * t59 + t35 * t50; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t235, 0, -t236, 0, -t99, t98, 0, 0, -t121 * t149 + (t149 * t178 + t259) * t153, -t102 * t266 - t153 * t313 + (-t259 - t70) * t149, t180 * t145, t58 (t153 * t270 + t242) * t145, 0, -pkin(3) * t70 + t139 * t94 - t99 * t153 - t180 * t301, pkin(3) * t313 + t99 * t149 - t236 * t298 - t242 * t301 + t266 * t94, pkin(10) * t58 + t103 * t251 - t139 * t64 - t266 * t63 - t299 * t313 + t198, -t99 * pkin(3) + ((-t149 * t64 - t153 * t63) * qJD(4) + t198) * pkin(10), t19, t317, t15, t162, -t308, t58, t102 * t62 + t70 * t91 + (-t7 + (pkin(10) * t71 + t148 * t54) * qJD(4)) * t153 + (pkin(10) * t42 + qJD(4) * t27 + t190) * t149, t102 * t61 - t70 * t275 + (-t6 + (pkin(10) * t72 + t152 * t54) * qJD(4)) * t153 + (-pkin(10) * t41 - qJD(4) * t291 - t189) * t149, t41 * t91 - t42 * t275 + t61 * t71 - t62 * t72 + t206 * t266 + (t148 * t6 - t152 * t7 + (t148 * t27 - t152 * t291) * qJD(5)) * t149, t27 * t62 - t291 * t61 - t6 * t275 + t7 * t91 + (t149 * t33 + t266 * t54) * pkin(10), t19, t15, -t317, t58, t308, t162, -t102 * t59 + t42 * t97 + t60 * t71 - t70 * t79 + (t268 * t29 + t4) * t153 + (-qJD(4) * t23 - t192) * t149, -t41 * t79 - t42 * t77 - t50 * t71 + t59 * t72 + t207 * t266 + (-t148 * t3 + t152 * t4 + (-t148 * t23 - t152 * t22) * qJD(5)) * t149, t102 * t50 + t41 * t97 - t60 * t72 + t70 * t77 + (-t267 * t29 - t3) * t153 + (qJD(4) * t22 + t191) * t149, t12 * t97 + t22 * t50 + t23 * t59 + t29 * t60 + t3 * t77 + t4 * t79; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t225, -0.2e1 * t226, 0, t131, 0, 0, t149 * t256, t153 * t256, 0, 0, t84, 0.2e1 * t73, t74, t83, 0.2e1 * t76, t131, 0.2e1 * t91 * t139 - 0.2e1 * t62 * t153 + 0.2e1 * (t138 * t142 + t148 * t225) * pkin(10), -0.2e1 * t275 * t139 - 0.2e1 * t61 * t153 + 0.2e1 * (-t142 * t264 + t152 * t225) * pkin(10), 0.2e1 * t199 * t266 + 0.2e1 * (t148 * t61 - t152 * t62 + (t148 * t91 - t152 * t275) * qJD(5)) * t149, 0.2e1 * pkin(10) ^ 2 * t232 - 0.2e1 * t275 * t61 + 0.2e1 * t62 * t91, t84, t74, -0.2e1 * t73, t131, -0.2e1 * t76, t83, 0.2e1 * (t268 * t97 + t59) * t153 + 0.2e1 * (-qJD(4) * t79 + t138 * t97 + t148 * t60) * t149, 0.2e1 * t200 * t266 + 0.2e1 * (-t148 * t50 + t152 * t59 + (-t148 * t79 - t152 * t77) * qJD(5)) * t149, 0.2e1 * (-t267 * t97 - t50) * t153 + 0.2e1 * (qJD(4) * t77 - t152 * t60 + t264 * t97) * t149, 0.2e1 * t50 * t77 + 0.2e1 * t59 * t79 + 0.2e1 * t60 * t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t24, -t25, 0, 0, 0, 0, 0, 0, 0, 0, t14, t13, t172, -t24 * pkin(4) + t163, 0, 0, 0, 0, 0, 0, t14, t172, -t13, -t100 * t197 + t117 * t24 + t163; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t313, 0, -t70, t236, t37, t36, 0, 0, t30, -t310, t57, t188, -t56, 0, -pkin(4) * t42 - t181 + t189, pkin(4) * t41 + t190 + t316, -t293 - t40 + (-t7 - t304) * t148 + (t187 + t206) * qJD(5), -t33 * pkin(4) + (qJD(5) * t206 - t7 * t148 - t293) * pkin(11), t30, t57, t310, 0, t56, t188, t100 * t71 + t117 * t42 - t181 + t191, t295 - t40 + (t4 - t304) * t148 + (t187 + t207) * qJD(5), -t100 * t72 + t117 * t41 + t192 - t316, t100 * t29 + t117 * t12 + (qJD(5) * t207 + t148 * t4 + t295) * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, 0, -t139, 0, -t251, pkin(10) * t139, 0, 0, -t78, -t75, t107, t78, t105, 0, t128 + (t300 - t302) * t263 + (t148 * t215 - t136) * qJD(4) (t148 * t214 + t152 * t299) * qJD(5) + (t152 * t215 + t253) * qJD(4), t164, -pkin(4) * t251 + pkin(11) * t164, -t78, t107, t75, 0, -t105, t78, t128 + (t117 * t263 - t60) * t152 - t312 * t148, t165 (-t60 + (t117 * t149 + t296) * qJD(5)) * t148 + t312 * t152, pkin(11) * t165 + t100 * t97 + t117 * t60; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t129, -0.2e1 * t122, 0, t130, 0, 0, t148 * t255, t152 * t255, 0, 0, t129, 0, 0.2e1 * t122, 0, 0, t130, -0.2e1 * t100 * t152 + 0.2e1 * t117 * t264, 0, -0.2e1 * t100 * t148 - 0.2e1 * t117 * t138, 0.2e1 * t117 * t100; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t10, -t11, 0, 0, 0, 0, 0, 0, 0, 0, -t10, 0, t11, -pkin(5) * t10 + qJ(6) * t11 + qJD(6) * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t41, 0, -t42, t70, t7, t6, 0, 0, 0, -t41, 0, t70, t42, 0, t7 + 0.2e1 * t303, pkin(5) * t41 - qJ(6) * t42 - qJD(6) * t71, 0.2e1 * t261 - t6 + 0.2e1 * t290, -pkin(5) * t4 + qJ(6) * t3 + qJD(6) * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t104, 0, -t106, t139, t62, t61, 0, 0, 0, t104, 0, t139, t106, 0, t62 + 0.2e1 * t252 (-pkin(5) * t266 - qJ(6) * t263) * t152 + (-qJ(6) * t266 + (pkin(5) * qJD(5) - qJD(6)) * t149) * t148, -t61 + 0.2e1 * t246 - 0.2e1 * t260, -pkin(5) * t59 + qJ(6) * t50 + qJD(6) * t77; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, 0, -t264, 0, -t249, t250, 0, 0, 0, t138, 0, 0, t264, 0, -t249, -t309, -t250, -t309 * pkin(11); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t305, qJ(6) * t305; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t10; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t70, -t41, 0, t4; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t139, t104, 0, t59; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t138, 0, t249; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t2;
