% Calculate vector of inverse dynamics joint torques for
% S6RRRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6,theta5]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RRRRPR1_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR1_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR1_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPR1_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPR1_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPR1_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RRRRPR1_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RRRRPR1_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RRRRPR1_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:52:56
% EndTime: 2019-03-09 21:54:54
% DurationCPUTime: 100.95s
% Computational Cost: add. (73814->1668), mult. (61277->2040), div. (0->0), fcn. (53368->12), ass. (0->839)
t1385 = Icges(5,3) + Icges(6,3);
t744 = qJ(2) + qJ(3);
t727 = qJ(4) + t744;
t690 = pkin(11) + t727;
t669 = sin(t690);
t670 = cos(t690);
t692 = sin(t727);
t693 = cos(t727);
t1378 = Icges(5,5) * t693 + Icges(6,5) * t670 - Icges(5,6) * t692 - Icges(6,6) * t669;
t1384 = Icges(5,5) * t692 + Icges(6,5) * t669 + Icges(5,6) * t693 + Icges(6,6) * t670;
t750 = cos(qJ(1));
t1383 = t1385 * t750;
t747 = sin(qJ(1));
t1139 = t693 * t747;
t1142 = t692 * t747;
t1144 = t670 * t747;
t1148 = t669 * t747;
t1379 = -Icges(5,5) * t1139 - Icges(6,5) * t1144 + Icges(5,6) * t1142 + Icges(6,6) * t1148 + t1383;
t1382 = t1378 * t750 + t1385 * t747;
t1207 = Icges(6,4) * t669;
t532 = Icges(6,2) * t670 + t1207;
t647 = Icges(6,4) * t670;
t534 = Icges(6,1) * t669 + t647;
t1208 = Icges(5,4) * t692;
t562 = Icges(5,2) * t693 + t1208;
t667 = Icges(5,4) * t693;
t564 = Icges(5,1) * t692 + t667;
t1381 = t532 * t669 - t534 * t670 + t562 * t692 - t564 * t693;
t1191 = Icges(6,6) * t750;
t394 = Icges(6,4) * t1144 - Icges(6,2) * t1148 - t1191;
t1200 = Icges(6,5) * t750;
t608 = Icges(6,4) * t1148;
t396 = Icges(6,1) * t1144 - t1200 - t608;
t1192 = Icges(5,6) * t750;
t438 = Icges(5,4) * t1139 - Icges(5,2) * t1142 - t1192;
t1201 = Icges(5,5) * t750;
t630 = Icges(5,4) * t1142;
t440 = Icges(5,1) * t1139 - t1201 - t630;
t1377 = t394 * t669 - t396 * t670 + t438 * t692 - t440 * t693;
t535 = Icges(6,1) * t670 - t1207;
t397 = Icges(6,5) * t747 + t535 * t750;
t565 = Icges(5,1) * t693 - t1208;
t441 = Icges(5,5) * t747 + t565 * t750;
t1380 = -t441 * t1139 - t397 * t1144;
t1376 = t1384 * t750;
t1375 = t1384 * t747;
t904 = -Icges(6,2) * t669 + t647;
t395 = Icges(6,6) * t747 + t750 * t904;
t905 = -Icges(5,2) * t692 + t667;
t439 = Icges(5,6) * t747 + t750 * t905;
t1374 = t395 * t669 + t439 * t692;
t1339 = -t1381 * t747 - t1376;
t1338 = -t1381 * t750 + t1375;
t1373 = t1377 * t747;
t1372 = t1382 * t750 + t1380;
t1371 = t1382 * qJD(1);
t1138 = t693 * t750;
t1143 = t670 * t750;
t1309 = -t441 * t1138 - t397 * t1143 - t1382 * t747;
t1370 = -t440 * t1138 - t396 * t1143 + t1379 * t747;
t1369 = t1379 * t750;
t748 = cos(qJ(6));
t1126 = t748 * t750;
t745 = sin(qJ(6));
t1131 = t745 * t747;
t518 = t1131 * t670 + t1126;
t1123 = t750 * t745;
t1128 = t747 * t748;
t519 = t1128 * t670 - t1123;
t921 = t519 * rSges(7,1) - t518 * rSges(7,2);
t276 = rSges(7,3) * t1148 + t921;
t1224 = rSges(7,2) * t745;
t1231 = rSges(7,1) * t748;
t920 = -t1224 + t1231;
t375 = -rSges(7,3) * t670 + t669 * t920;
t1045 = qJD(6) * t747;
t740 = qJD(2) + qJD(3);
t701 = qJD(4) + t740;
t579 = t701 * t750;
t425 = -t1045 * t669 + t579;
t1047 = qJD(6) * t670;
t617 = qJD(1) - t1047;
t1368 = t276 * t617 + t425 * t375;
t496 = Icges(7,4) * t519;
t268 = -Icges(7,2) * t518 + Icges(7,6) * t1148 + t496;
t495 = Icges(7,4) * t518;
t272 = -Icges(7,1) * t519 - Icges(7,5) * t1148 + t495;
t1356 = t268 * t745 + t272 * t748;
t265 = Icges(7,5) * t519 - Icges(7,6) * t518 + Icges(7,3) * t1148;
t127 = -t1356 * t669 - t265 * t670;
t1343 = t1369 - t1373;
t1342 = -t1142 * t439 - t1148 * t395 - t1372;
t1141 = t692 * t750;
t1146 = t669 * t750;
t1341 = -t1141 * t438 - t1146 * t394 - t1370;
t1340 = -t1141 * t439 - t1146 * t395 - t1309;
t1321 = -t562 + t565;
t958 = t1321 * t701;
t1320 = t564 + t905;
t959 = t1320 * t701;
t1323 = -t532 + t535;
t962 = t1323 * t701;
t1322 = t534 + t904;
t963 = t1322 * t701;
t1367 = qJD(1) * t1384 - t669 * t963 + t670 * t962 - t692 * t959 + t693 * t958;
t1328 = -t564 * t750 - t439;
t976 = (-t565 * t747 + t1201) * qJD(1) + t1328 * t701;
t1327 = -t562 * t750 + t441;
t978 = (-t747 * t905 + t1192) * qJD(1) + t1327 * t701;
t1331 = -t534 * t750 - t395;
t980 = (-t535 * t747 + t1200) * qJD(1) + t1331 * t701;
t1330 = -t532 * t750 + t397;
t982 = (-t747 * t904 + t1191) * qJD(1) + t1330 * t701;
t1366 = -t669 * t982 + t670 * t980 - t692 * t978 + t693 * t976 + t1371;
t1329 = -t564 * t747 - t438;
t975 = qJD(1) * t441 + t1329 * t701;
t1137 = t701 * t747;
t977 = qJD(1) * t439 - t1137 * t562 + t440 * t701;
t1332 = -t534 * t747 - t394;
t979 = qJD(1) * t397 + t1332 * t701;
t981 = qJD(1) * t395 - t1137 * t532 + t396 * t701;
t1365 = qJD(1) * t1379 + t669 * t981 - t670 * t979 + t692 * t977 - t693 * t975;
t1364 = qJD(1) * t1381 + t1378 * t701;
t1363 = qJD(1) * t1377 - t1375 * t701 + t1371;
t1362 = -t1376 * t701 + (-t1378 * t747 - t397 * t670 - t441 * t693 + t1374 + t1383) * qJD(1);
t1361 = t1338 * qJD(1);
t632 = t740 * t750;
t712 = cos(t744);
t689 = pkin(3) * t712;
t559 = t632 * t689;
t1051 = qJD(1) * t747;
t711 = sin(t744);
t1003 = t711 * t1051;
t633 = pkin(3) * t1003;
t1360 = t559 + t633;
t1048 = qJD(6) * t669;
t661 = t670 * pkin(5);
t1298 = t669 * pkin(10) + t661;
t1239 = pkin(5) * t669;
t550 = -pkin(10) * t670 + t1239;
t1333 = t375 + t550;
t1147 = t669 * t748;
t1031 = rSges(7,1) * t1147;
t1030 = t669 * t1224;
t1077 = rSges(7,3) * t1144 + t747 * t1030;
t326 = -t1031 * t747 + t1077;
t654 = t669 * rSges(7,3);
t376 = t670 * t920 + t654;
t671 = pkin(4) * t693;
t492 = t579 * t671;
t1004 = t692 * t1051;
t623 = pkin(4) * t1004;
t996 = t670 * t1045;
t1359 = t1048 * t276 + t1051 * t1333 + t1298 * t579 + t326 * t617 - t375 * t996 + t425 * t376 + t492 + t623;
t1357 = t1339 * qJD(1);
t117 = t1148 * t265 - t268 * t518 - t272 * t519;
t520 = -t1123 * t670 + t1128;
t521 = t1126 * t670 + t1131;
t267 = Icges(7,5) * t521 + Icges(7,6) * t520 + Icges(7,3) * t1146;
t1206 = Icges(7,4) * t521;
t270 = Icges(7,2) * t520 + Icges(7,6) * t1146 + t1206;
t497 = Icges(7,4) * t520;
t273 = Icges(7,1) * t521 + Icges(7,5) * t1146 + t497;
t118 = t267 * t1148 - t518 * t270 + t519 * t273;
t901 = Icges(7,5) * t748 - Icges(7,6) * t745;
t369 = -Icges(7,3) * t670 + t669 * t901;
t1204 = Icges(7,4) * t748;
t903 = -Icges(7,2) * t745 + t1204;
t371 = -Icges(7,6) * t670 + t669 * t903;
t1205 = Icges(7,4) * t745;
t909 = Icges(7,1) * t748 - t1205;
t373 = -Icges(7,5) * t670 + t669 * t909;
t148 = t1148 * t369 - t371 * t518 + t373 * t519;
t1044 = qJD(6) * t750;
t710 = qJD(2) * t747;
t631 = qJD(3) * t747 + t710;
t578 = qJD(4) * t747 + t631;
t424 = t1044 * t669 + t578;
t40 = -t117 * t425 + t118 * t424 + t148 * t617;
t119 = t265 * t1146 + t520 * t268 - t272 * t521;
t120 = t267 * t1146 + t520 * t270 + t521 * t273;
t149 = t1146 * t369 + t371 * t520 + t373 * t521;
t41 = -t119 * t425 + t120 * t424 + t149 * t617;
t1355 = -t1363 * t747 + t1365 * t750;
t1354 = t1362 * t747 + t1366 * t750;
t1353 = t1363 * t750 + t1365 * t747;
t1352 = -t1362 * t750 + t1366 * t747;
t1351 = t1342 * t578 - t1343 * t579 + t1357;
t1350 = t1340 * t578 - t1341 * t579 + t1361;
t746 = sin(qJ(2));
t1349 = rSges(3,2) * t746;
t1348 = t1364 * t747 + t1367 * t750;
t1347 = -t1364 * t750 + t1367 * t747;
t1345 = -t669 * t979 - t670 * t981 - t692 * t975 - t693 * t977;
t1344 = t669 * t980 + t670 * t982 + t692 * t976 + t693 * t978;
t1337 = t394 * t670 + t396 * t669 + t438 * t693 + t440 * t692;
t1336 = t395 * t670 + t397 * t669 + t439 * t693 + t441 * t692;
t470 = t1298 * t747;
t1335 = t276 + t470;
t278 = t521 * rSges(7,1) + t520 * rSges(7,2) + rSges(7,3) * t1146;
t472 = pkin(5) * t1143 + pkin(10) * t1146;
t1334 = t278 + t472;
t1133 = t712 * t747;
t1136 = t711 * t747;
t1193 = Icges(4,6) * t750;
t476 = Icges(4,4) * t1133 - Icges(4,2) * t1136 - t1193;
t679 = Icges(4,4) * t712;
t592 = Icges(4,1) * t711 + t679;
t1326 = -t592 * t747 - t476;
t906 = -Icges(4,2) * t711 + t679;
t477 = Icges(4,6) * t747 + t750 * t906;
t1325 = -t592 * t750 - t477;
t1209 = Icges(4,4) * t711;
t593 = Icges(4,1) * t712 - t1209;
t479 = Icges(4,5) * t747 + t593 * t750;
t590 = Icges(4,2) * t712 + t1209;
t1324 = -t590 * t750 + t479;
t1319 = t592 + t906;
t1269 = qJD(1) * t1322 + t1330 * t578 - (-Icges(6,2) * t1144 + t396 - t608) * t579;
t1270 = qJD(1) * t1320 + t1327 * t578 - (-Icges(5,2) * t1139 + t440 - t630) * t579;
t781 = qJD(1) * t1321 + t1328 * t578 - t1329 * t579;
t782 = qJD(1) * t1323 + t1331 * t578 - t1332 * t579;
t1318 = -t1269 * t669 - t1270 * t692 + t782 * t670 + t781 * t693;
t1317 = qJD(1) * t1378 + t1375 * t579 - t1376 * t578;
t1316 = t1359 + t1360;
t1315 = t1374 + t1379;
t1050 = qJD(1) * t750;
t1241 = pkin(3) * t711;
t557 = t631 * t1241;
t1223 = pkin(2) * qJD(2);
t1028 = t746 * t1223;
t663 = t747 * t1028;
t1080 = -t557 - t663;
t1240 = pkin(4) * t692;
t490 = t578 * t1240;
t707 = qJD(5) * t750;
t935 = -t490 - t707 + t1080;
t736 = t747 * pkin(7);
t649 = t750 * pkin(1) + t736;
t749 = cos(qJ(2));
t737 = t749 * pkin(2);
t694 = t737 + pkin(1);
t657 = t750 * t694;
t751 = -pkin(8) - pkin(7);
t949 = -t747 * t751 + t657;
t467 = t949 - t649;
t1092 = t467 + t649;
t741 = -pkin(9) + t751;
t1060 = -t741 + t751;
t604 = t689 + t694;
t571 = t750 * t604;
t356 = t1060 * t747 + t571 - t657;
t1012 = t356 + t1092;
t713 = -qJ(5) + t741;
t1061 = -t713 + t741;
t529 = t671 + t604;
t489 = t750 * t529;
t285 = t1061 * t747 + t489 - t571;
t939 = t285 + t1012;
t77 = t278 * t617 - t375 * t424 - t550 * t578 + (t472 + t939) * qJD(1) + t935;
t1182 = qJD(1) * t77;
t826 = t1050 * t669 + t1137 * t670;
t1026 = t669 * t1137;
t866 = t748 * t617;
t944 = qJD(1) * t670 - qJD(6);
t236 = t747 * t866 + (-t750 * t944 + t1026) * t745;
t865 = t617 * t745;
t237 = t944 * t1126 + (-t1147 * t701 + t865) * t747;
t922 = rSges(7,1) * t237 + rSges(7,2) * t236;
t146 = rSges(7,3) * t826 + t922;
t1037 = qJD(1) * qJD(4);
t1038 = qJD(1) * qJD(3);
t1039 = qJD(1) * qJD(2);
t687 = t747 * t1039;
t1062 = t747 * t1038 + t687;
t1006 = t747 * t1037 + t1062;
t1035 = qJDD(6) * t669;
t1046 = qJD(6) * t701;
t1034 = -qJDD(2) - qJDD(3);
t945 = -qJDD(4) + t1034;
t193 = (t1046 * t670 + t1035) * t747 + (qJD(1) * t1048 + t945) * t750 + t1006;
t1145 = t670 * t701;
t919 = -rSges(7,1) * t745 - rSges(7,2) * t748;
t203 = t920 * t1145 + (rSges(7,3) * t701 + qJD(6) * t919) * t669;
t257 = t826 * pkin(10) + (t1050 * t670 - t1026) * pkin(5);
t368 = t750 * t945 + t1006;
t414 = t1298 * t701;
t430 = -qJDD(6) * t670 + t1046 * t669 + qJDD(1);
t1036 = qJD(1) * qJD(5);
t487 = t1034 * t750 + t1062;
t1124 = t749 * qJD(2) ^ 2;
t1242 = pkin(2) * t746;
t610 = -qJDD(2) * t750 + t687;
t869 = -pkin(2) * t1124 * t750 + t610 * t1242;
t824 = t487 * t1241 - t740 * t559 + t869;
t789 = qJDD(5) * t747 + t750 * t1036 + t368 * t1240 - t701 * t492 + t824;
t699 = t750 * t751;
t1066 = t747 * t694 + t699;
t738 = t750 * pkin(7);
t648 = pkin(1) * t747 - t738;
t466 = t648 - t1066;
t1093 = t466 - t648;
t1078 = t747 * t604 + t750 * t741;
t355 = t1066 - t1078;
t1013 = t355 + t1093;
t1088 = -t747 * t529 - t750 * t713;
t284 = t1078 + t1088;
t940 = t284 + t1013;
t914 = -t470 + t940;
t1064 = t751 * t1051 + t663;
t1233 = pkin(1) - t694;
t352 = (-t1233 * t750 - t736) * qJD(1) - t1064;
t605 = t649 * qJD(1);
t1114 = -t352 - t605;
t1072 = t604 - t694;
t566 = -t1241 * t740 - t1028;
t665 = t741 * t1051;
t950 = -t566 * t747 + t665;
t209 = t1050 * t1072 + t1064 - t950;
t1021 = -t209 + t1114;
t1067 = t713 * t1051 + t707;
t1083 = t529 - t604;
t415 = -t1240 * t701 + t566;
t165 = t665 + (t415 - t566) * t747 + t1083 * t1050 - t1067;
t943 = -t165 + t1021;
t19 = (-t257 + t943) * qJD(1) + t914 * qJDD(1) - t617 * t146 + t789 - t579 * t414 + t368 * t550 + t193 * t375 - t425 * t203 - t430 * t276;
t1313 = (t1182 + t19) * t750;
t729 = t747 * rSges(5,3);
t451 = rSges(5,1) * t1138 - rSges(5,2) * t1141 + t729;
t1226 = rSges(5,2) * t693;
t568 = rSges(5,1) * t692 + t1226;
t137 = -t568 * t578 + (t451 + t1012) * qJD(1) + t1080;
t668 = t693 * rSges(5,1);
t1295 = -rSges(5,2) * t692 + t668;
t510 = t568 * t747;
t255 = -t701 * t510 + (t1295 * t750 + t729) * qJD(1);
t446 = t1295 * t701;
t450 = rSges(5,1) * t1139 - rSges(5,2) * t1142 - t750 * rSges(5,3);
t936 = -t450 + t1013;
t58 = t368 * t568 - t446 * t579 + t936 * qJDD(1) + (-t255 + t1021) * qJD(1) + t824;
t1312 = (qJD(1) * t137 + t58) * t750;
t948 = qJD(1) * t510 - t1295 * t579;
t1310 = t568 * t1051 + t1360 - t948;
t1308 = t40 * t747 + t41 * t750;
t680 = t712 * rSges(4,1);
t1294 = -rSges(4,2) * t711 + t680;
t1049 = qJD(2) * t750;
t1101 = t467 * t1049 - t466 * t710;
t482 = rSges(4,1) * t1133 - rSges(4,2) * t1136 - t750 * rSges(4,3);
t1132 = t712 * t750;
t1135 = t711 * t750;
t730 = t747 * rSges(4,3);
t483 = rSges(4,1) * t1132 - rSges(4,2) * t1135 + t730;
t160 = t482 * t631 + t483 * t632 + t1101;
t1010 = -t482 + t1093;
t1228 = rSges(4,2) * t712;
t594 = rSges(4,1) * t711 + t1228;
t999 = t746 * t1049;
t946 = pkin(2) * t999;
t833 = -t594 * t632 - t946;
t175 = qJD(1) * t1010 + t833;
t176 = -t594 * t631 - t663 + (t483 + t1092) * qJD(1);
t548 = t594 * t747;
t549 = t594 * t750;
t1307 = -t175 * (qJD(1) * t548 - t1294 * t632) - t160 * (-t631 * t548 - t549 * t632) - t176 * (-qJD(1) * t549 - t1294 * t631);
t1256 = t578 / 0.2e1;
t1255 = -t579 / 0.2e1;
t1071 = rSges(5,2) * t1004 + rSges(5,3) * t1050;
t254 = -t579 * t1226 + (-t1051 * t693 - t579 * t692) * rSges(5,1) + t1071;
t609 = qJDD(2) * t747 + t750 * t1039;
t486 = qJDD(3) * t747 + t750 * t1038 + t609;
t367 = qJDD(4) * t747 + t750 * t1037 + t486;
t1134 = t712 * t740;
t536 = t750 * t566;
t208 = t946 + t536 + (t1060 * t750 - t1072 * t747) * qJD(1);
t700 = pkin(7) * t1050;
t1075 = qJD(1) * (-pkin(1) * t1051 + t700) + qJDD(1) * t649;
t351 = -t946 - t700 + (t1233 * t747 - t699) * qJD(1);
t787 = qJD(1) * t351 + qJDD(1) * t467 + (-t1124 * t747 - t609 * t746) * pkin(2) + t1075;
t761 = qJD(1) * t208 + qJDD(1) * t356 + (-t1134 * t631 - t486 * t711) * pkin(3) + t787;
t59 = qJD(1) * t254 + qJDD(1) * t451 - t367 * t568 - t446 * t578 + t761;
t1306 = t59 * t747;
t545 = rSges(6,1) * t669 + rSges(6,2) * t670;
t463 = t545 * t747;
t728 = t747 * rSges(6,3);
t412 = rSges(6,1) * t1143 - rSges(6,2) * t1146 + t728;
t109 = -t545 * t578 + (t412 + t939) * qJD(1) + t935;
t656 = t670 * rSges(6,1);
t1296 = -rSges(6,2) * t669 + t656;
t228 = -t701 * t463 + (t1296 * t750 + t728) * qJD(1);
t403 = t1296 * t701;
t411 = rSges(6,1) * t1144 - rSges(6,2) * t1148 - t750 * rSges(6,3);
t915 = -t411 + t940;
t33 = t368 * t545 - t403 * t579 + t915 * qJDD(1) + (-t228 + t943) * qJD(1) + t789;
t1304 = qJD(1) * t109 + t33;
t1302 = -t203 - t414;
t625 = qJD(1) * t648;
t1300 = qJD(1) * t466 - t625;
t928 = t1296 + t671;
t1299 = -t1298 - t671;
t558 = t632 * t1241;
t864 = -t558 - t946;
t726 = Icges(3,4) * t749;
t907 = -Icges(3,2) * t746 + t726;
t640 = Icges(3,1) * t746 + t726;
t1005 = t669 * t1051;
t1024 = t670 * t579;
t1025 = t669 * t579;
t1277 = t747 * t944 + t1025;
t234 = t1277 * t745 + t750 * t866;
t235 = -t1277 * t748 + t750 * t865;
t1020 = t235 * rSges(7,1) + t234 * rSges(7,2) + rSges(7,3) * t1024;
t145 = -rSges(7,3) * t1005 + t1020;
t825 = -t1005 + t1024;
t192 = qJD(6) * t825 + t1035 * t750 + t367;
t556 = pkin(10) * t1024;
t827 = -t1051 * t670 - t1025;
t256 = pkin(5) * t827 - pkin(10) * t1005 + t556;
t1140 = t693 * t701;
t706 = qJD(5) * t747;
t1107 = t750 * t415 + t706;
t164 = -t536 + (t1061 * t750 - t1083 * t747) * qJD(1) + t1107;
t756 = qJD(1) * t164 + qJDD(1) * t285 + t747 * t1036 + (-t1140 * t578 - t367 * t692) * pkin(4) - qJDD(5) * t750 + t761;
t18 = qJD(1) * t256 + qJDD(1) * t472 + t617 * t145 - t192 * t375 - t424 * t203 + t430 * t278 - t367 * t550 - t578 * t414 + t756;
t1292 = -t18 * t750 + t19 * t747;
t1291 = g(1) * t750 + g(2) * t747;
t1238 = g(1) * t747;
t1290 = -g(2) * t750 + t1238;
t588 = Icges(4,5) * t711 + Icges(4,6) * t712;
t1154 = t588 * t750;
t1165 = t477 * t711;
t1188 = Icges(4,3) * t750;
t589 = Icges(4,5) * t712 - Icges(4,6) * t711;
t1285 = -t740 * t1154 + (-t479 * t712 - t589 * t747 + t1165 + t1188) * qJD(1);
t475 = Icges(4,3) * t747 + t589 * t750;
t1054 = qJD(1) * t475;
t1155 = t588 * t747;
t1202 = Icges(4,5) * t750;
t653 = Icges(4,4) * t1136;
t478 = Icges(4,1) * t1133 - t1202 - t653;
t879 = t476 * t711 - t478 * t712;
t1284 = qJD(1) * t879 - t1155 * t740 + t1054;
t1189 = Icges(3,3) * t750;
t637 = Icges(3,5) * t749 - Icges(3,6) * t746;
t636 = Icges(3,5) * t746 + Icges(3,6) * t749;
t834 = qJD(2) * t636;
t526 = Icges(3,6) * t747 + t750 * t907;
t1162 = t526 * t746;
t1210 = Icges(3,4) * t746;
t641 = Icges(3,1) * t749 - t1210;
t528 = Icges(3,5) * t747 + t641 * t750;
t876 = -t528 * t749 + t1162;
t1283 = -t750 * t834 + (-t637 * t747 + t1189 + t876) * qJD(1);
t524 = Icges(3,3) * t747 + t637 * t750;
t1053 = qJD(1) * t524;
t1127 = t747 * t749;
t1130 = t746 * t747;
t1194 = Icges(3,6) * t750;
t525 = Icges(3,4) * t1127 - Icges(3,2) * t1130 - t1194;
t1163 = t525 * t746;
t1203 = Icges(3,5) * t750;
t675 = Icges(3,4) * t1130;
t527 = Icges(3,1) * t1127 - t1203 - t675;
t877 = -t527 * t749 + t1163;
t1282 = qJD(1) * t877 - t747 * t834 + t1053;
t872 = t590 * t711 - t592 * t712;
t1279 = qJD(1) * t872 + t589 * t740;
t638 = Icges(3,2) * t749 + t1210;
t870 = t638 * t746 - t640 * t749;
t1278 = t870 * qJD(1) + t637 * qJD(2);
t523 = Icges(3,5) * t1127 - Icges(3,6) * t1130 - t1189;
t199 = -t523 * t750 - t747 * t877;
t1276 = (-t638 * t750 + t528) * t747 - (-Icges(3,2) * t1127 + t527 - t675) * t750;
t1073 = rSges(6,2) * t1005 + rSges(6,3) * t1050;
t227 = rSges(6,1) * t827 - rSges(6,2) * t1024 + t1073;
t34 = qJD(1) * t227 + qJDD(1) * t412 - t367 * t545 - t578 * t403 + t756;
t1275 = t1304 * t750 + t34 * t747;
t1274 = t18 * t747 + t1313;
t841 = t901 * t670;
t884 = -t371 * t745 + t373 * t748;
t888 = -t270 * t745 + t273 * t748;
t1273 = t424 * (-t369 * t750 - t888) - t425 * (-t369 * t747 + t1356) + t617 * (Icges(7,3) * t669 + t841 - t884);
t902 = -Icges(7,2) * t748 - t1205;
t1272 = (t902 * t669 + t373) * t617 + (-Icges(7,2) * t521 + t273 + t497) * t424 - (-Icges(7,2) * t519 - t272 - t495) * t425;
t1271 = qJD(1) * t1319 + t1324 * t631 - (-Icges(4,2) * t1133 + t478 - t653) * t632;
t1268 = t192 / 0.2e1;
t1267 = t193 / 0.2e1;
t1266 = t747 * t1255 + t1256 * t750;
t1265 = t367 / 0.2e1;
t1264 = t368 / 0.2e1;
t1263 = -t424 / 0.2e1;
t1262 = t424 / 0.2e1;
t1261 = -t425 / 0.2e1;
t1260 = t425 / 0.2e1;
t1259 = t486 / 0.2e1;
t1258 = t487 / 0.2e1;
t1257 = -t578 / 0.2e1;
t1254 = t579 / 0.2e1;
t1253 = t609 / 0.2e1;
t1252 = t610 / 0.2e1;
t1251 = -t617 / 0.2e1;
t1250 = t617 / 0.2e1;
t1249 = -t631 / 0.2e1;
t1248 = t631 / 0.2e1;
t1247 = -t632 / 0.2e1;
t1246 = t632 / 0.2e1;
t1245 = t747 / 0.2e1;
t1244 = -t750 / 0.2e1;
t1243 = -rSges(7,3) - pkin(10);
t1235 = -qJD(1) / 0.2e1;
t1234 = qJD(1) / 0.2e1;
t1232 = rSges(3,1) * t749;
t1230 = rSges(3,2) * t749;
t140 = Icges(7,5) * t237 + Icges(7,6) * t236 + Icges(7,3) * t826;
t142 = Icges(7,4) * t237 + Icges(7,2) * t236 + Icges(7,6) * t826;
t144 = Icges(7,1) * t237 + Icges(7,4) * t236 + Icges(7,5) * t826;
t31 = (-t1356 * t701 - t140) * t670 + (-t142 * t745 + t144 * t748 + t265 * t701 + (-t268 * t748 + t272 * t745) * qJD(6)) * t669;
t1220 = t31 * t425;
t139 = Icges(7,5) * t235 + Icges(7,6) * t234 + Icges(7,3) * t825;
t141 = Icges(7,4) * t235 + Icges(7,2) * t234 + Icges(7,6) * t825;
t143 = Icges(7,1) * t235 + Icges(7,4) * t234 + Icges(7,5) * t825;
t32 = (t701 * t888 - t139) * t670 + (-t141 * t745 + t143 * t748 + t267 * t701 + (-t270 * t748 - t273 * t745) * qJD(6)) * t669;
t1219 = t32 * t424;
t731 = t747 * rSges(3,3);
t1216 = qJDD(1) / 0.2e1;
t155 = -t369 * t670 + t669 * t884;
t900 = -Icges(7,5) * t745 - Icges(7,6) * t748;
t194 = t701 * t841 + (Icges(7,3) * t701 + qJD(6) * t900) * t669;
t842 = t903 * t670;
t195 = t701 * t842 + (Icges(7,6) * t701 + qJD(6) * t902) * t669;
t843 = t909 * t670;
t908 = -Icges(7,1) * t745 - t1204;
t196 = t701 * t843 + (Icges(7,5) * t701 + qJD(6) * t908) * t669;
t55 = (t701 * t884 - t194) * t670 + (-t195 * t745 + t196 * t748 + t369 * t701 + (-t371 * t748 - t373 * t745) * qJD(6)) * t669;
t1215 = t155 * t430 + t55 * t617;
t1118 = t285 + t472;
t859 = -t631 * t355 + t356 * t632 + t1101;
t844 = -t578 * t284 + t859;
t50 = t1118 * t579 + t276 * t424 + t278 * t425 + t470 * t578 + t844;
t1184 = qJD(1) * t50;
t1119 = t285 + t412;
t72 = t1119 * t579 + t411 * t578 + t844;
t1183 = qJD(1) * t72;
t1179 = t127 * t193;
t128 = -t267 * t670 + t669 * t888;
t1178 = t128 * t192;
t1157 = t568 * t579;
t136 = qJD(1) * t936 - t1157 + t864;
t1177 = t136 * t747;
t1175 = t175 * t747;
t642 = rSges(3,1) * t746 + t1230;
t1000 = t642 * t1049;
t1063 = rSges(3,2) * t1130 + t750 * rSges(3,3);
t537 = rSges(3,1) * t1127 - t1063;
t1081 = -t537 - t648;
t301 = qJD(1) * t1081 - t1000;
t1174 = t301 * t747;
t1173 = t301 * t750;
t1125 = t749 * t750;
t1129 = t746 * t750;
t538 = rSges(3,1) * t1125 - rSges(3,2) * t1129 + t731;
t418 = t538 + t649;
t302 = qJD(1) * t418 - t642 * t710;
t581 = t642 * t750;
t1172 = t302 * t581;
t474 = Icges(4,5) * t1133 - Icges(4,6) * t1136 - t1188;
t1166 = t474 * t750;
t1156 = t578 * t693;
t1153 = t590 * t740;
t1152 = t631 * t712;
t1151 = t636 * t747;
t1150 = t636 * t750;
t1149 = t669 * t701;
t1120 = -t747 * t284 + t750 * t285;
t1117 = -t747 * t355 + t750 * t356;
t1113 = -t356 - t451;
t586 = -t1240 - t1241;
t552 = t586 - t1242;
t498 = t747 * t552;
t626 = -t1241 - t1242;
t584 = t747 * t626;
t358 = -t584 + t498;
t493 = pkin(2) * t1130 + t584;
t1112 = -t358 - t493;
t1109 = -t1296 * t579 - t492;
t1106 = -t478 * t1132 - t747 * t474;
t1105 = t479 * t1132 + t747 * t475;
t1100 = t747 * t450 + t750 * t451;
t1099 = -t747 * t466 + t750 * t467;
t1098 = t747 * t482 + t750 * t483;
t1095 = -t527 * t1125 - t747 * t523;
t1094 = t528 * t1125 + t747 * t524;
t1091 = t545 * t1051 + t623;
t1076 = rSges(7,3) * t1143 + t750 * t1030;
t1070 = rSges(4,2) * t1003 + rSges(4,3) * t1050;
t1069 = -t638 + t641;
t1068 = t640 + t907;
t1065 = rSges(3,3) * t1050 + t1051 * t1349;
t112 = t450 * t578 + t451 * t579 + t859;
t1058 = qJD(1) * t112;
t1052 = qJD(1) * t637;
t245 = -t747 * t872 - t1154;
t1041 = t245 * qJD(1);
t305 = -t747 * t870 - t1150;
t1040 = t305 * qJD(1);
t1033 = pkin(3) * t1134;
t1032 = pkin(4) * t1140;
t491 = t579 * t1240;
t1027 = t749 * t1223;
t1023 = -t284 * t1050 + t750 * t164 + t747 * t165;
t1022 = -t355 * t1050 + t750 * t208 + t747 * t209;
t1019 = t450 * t1050 + t750 * t254 + t747 * t255;
t1018 = -t278 - t1118;
t293 = -t632 * t1228 + (-t1051 * t712 - t632 * t711) * rSges(4,1) + t1070;
t294 = -t740 * t548 + (t1294 * t750 + t730) * qJD(1);
t1017 = t482 * t1050 + t750 * t293 + t747 * t294;
t1016 = -t356 - t1119;
t1015 = -t466 * t1050 + t750 * t351 + t747 * t352;
t1011 = -t559 + t1109;
t1009 = t633 + t1091;
t619 = pkin(10) * t1144;
t1008 = t619 + t1077;
t621 = pkin(10) * t1143;
t1007 = t621 + t1076;
t1001 = t746 * t1050;
t997 = t278 * t1047;
t995 = t670 * t1044;
t993 = -pkin(1) - t1232;
t991 = t1051 / 0.2e1;
t990 = t1050 / 0.2e1;
t989 = -t710 / 0.2e1;
t988 = t710 / 0.2e1;
t987 = -t1049 / 0.2e1;
t986 = t1049 / 0.2e1;
t831 = -t594 - t1242;
t829 = -t545 - t1240;
t984 = -t550 - t1240;
t983 = t746 * (-t747 ^ 2 - t750 ^ 2);
t974 = (-t747 * t906 + t1193) * qJD(1) + t1324 * t740;
t973 = qJD(1) * t477 - t1153 * t747 + t478 * t740;
t972 = (-t593 * t747 + t1202) * qJD(1) + t1325 * t740;
t971 = qJD(1) * t479 + t1326 * t740;
t345 = t578 * t463;
t464 = t545 * t750;
t969 = -t464 * t579 - t345;
t511 = t568 * t750;
t968 = -t578 * t510 - t511 * t579;
t585 = t750 * t626;
t494 = pkin(2) * t1129 + t585;
t966 = t631 * t493 + t494 * t632;
t384 = t479 * t1133;
t965 = t475 * t750 - t384;
t434 = qJD(1) * t464;
t961 = -t1296 * t578 - t434;
t447 = t528 * t1127;
t957 = t524 * t750 - t447;
t956 = -t474 + t1165;
t955 = -qJD(1) * t511 - t1295 * t578;
t954 = -t713 * t747 + t489;
t953 = t1319 * t740;
t952 = t593 * t740 - t1153;
t951 = -t523 + t1162;
t942 = t747 * t411 + t750 * t412 + t1120;
t941 = -t356 + t1018;
t938 = t1100 + t1117;
t934 = -t446 - t1033;
t933 = -pkin(3) * t1152 + qJD(1) * t494;
t932 = -t403 - t1032;
t517 = t1294 * t740;
t930 = -t517 - t1027;
t929 = t1295 + t689;
t645 = rSges(2,1) * t750 - rSges(2,2) * t747;
t643 = rSges(2,1) * t747 + rSges(2,2) * t750;
t644 = t1232 - t1349;
t823 = -t491 + t706 + t864;
t76 = qJD(1) * t914 - t550 * t579 - t1368 + t823;
t918 = t747 * t77 + t750 * t76;
t304 = t526 * t749 + t528 * t746;
t835 = qJD(2) * t638;
t333 = -t750 * t835 + (-t747 * t907 + t1194) * qJD(1);
t836 = qJD(2) * t640;
t335 = -t750 * t836 + (-t641 * t747 + t1203) * qJD(1);
t764 = -qJD(2) * t304 - t333 * t746 + t335 * t749 + t1053;
t303 = t525 * t749 + t527 * t746;
t334 = qJD(1) * t526 - t747 * t835;
t336 = qJD(1) * t528 - t747 * t836;
t765 = qJD(1) * t523 - qJD(2) * t303 - t334 * t746 + t336 * t749;
t917 = t747 * (t1283 * t747 + t764 * t750) - t750 * (t1282 * t747 + t765 * t750);
t916 = t747 * (-t1283 * t750 + t764 * t747) - t750 * (-t1282 * t750 + t765 * t747);
t899 = t117 * t750 - t118 * t747;
t898 = t117 * t747 + t118 * t750;
t897 = t119 * t750 - t120 * t747;
t896 = t119 * t747 + t120 * t750;
t895 = t127 * t750 - t128 * t747;
t894 = t127 * t747 + t128 * t750;
t893 = -t136 * t750 - t137 * t747;
t892 = -t175 * t750 - t176 * t747;
t200 = -t1130 * t526 - t957;
t891 = -t199 * t750 + t200 * t747;
t201 = -t1129 * t525 - t1095;
t202 = -t1129 * t526 + t1094;
t890 = -t201 * t750 + t202 * t747;
t887 = t276 * t750 - t278 * t747;
t886 = -t302 * t747 - t1173;
t339 = -t1049 * t1230 + (-t1051 * t749 - t999) * rSges(3,1) + t1065;
t580 = t642 * t747;
t340 = -qJD(2) * t580 + (t644 * t750 + t731) * qJD(1);
t885 = t339 * t750 + t340 * t747;
t262 = t476 * t712 + t478 * t711;
t874 = t537 * t747 + t538 * t750;
t871 = t638 * t749 + t640 * t746;
t547 = t750 * t558;
t868 = -t557 * t747 - t547;
t867 = -t1032 + t1302;
t863 = t689 + t928;
t862 = -t568 + t626;
t327 = -t1031 * t750 + t1076;
t469 = -pkin(5) * t1148 + t619;
t860 = t276 * t995 + t424 * t326 + t327 * t425 + t578 * t469;
t857 = t351 * t1049 + t352 * t710 - t609 * t466 - t467 * t610;
t856 = t1243 * t669 - t661;
t855 = t411 * t1050 + t750 * t227 + t747 * t228 + t1023;
t854 = t1019 + t1022;
t853 = t1334 * t750 + t1335 * t747 + t1120;
t852 = t942 + t1117;
t846 = -t1032 - t1033;
t838 = t879 * t747;
t837 = -t1027 - t1033;
t832 = -t1298 - t654;
t499 = t750 * t552;
t359 = -t585 + t499;
t828 = t578 * t358 + t359 * t579 + t966;
t822 = (-t1050 * t692 - t1156) * pkin(4);
t821 = (-t1050 * t711 - t1152) * pkin(3);
t820 = -t403 + t846;
t819 = -t265 * t425 + t267 * t424 + t369 * t617;
t818 = (-Icges(7,5) * t518 - Icges(7,6) * t519) * t425 - (Icges(7,5) * t520 - Icges(7,6) * t521) * t424 - t900 * t669 * t617;
t817 = -t446 + t837;
t814 = qJD(1) * t589 - t1154 * t631 + t1155 * t632;
t813 = -t545 + t552;
t812 = t853 + t1117;
t471 = -pkin(5) * t1146 + t621;
t811 = t471 * t579 + t860;
t810 = t525 * t750 - t526 * t747;
t809 = t376 - t1299;
t808 = t846 + t1302;
t807 = -pkin(4) * t1156 + qJD(1) * t359 + t933;
t806 = t552 - t1333;
t805 = t1023 + (t145 + t256) * t750 + (t146 + t257) * t747 + t1335 * t1050;
t804 = t855 + t1022;
t554 = t750 * t586;
t427 = pkin(3) * t1135 + t554;
t803 = qJD(1) * t427 + t821;
t801 = t669 * t818;
t800 = t689 + t809;
t796 = (-t1068 * t746 + t1069 * t749) * qJD(1);
t795 = t837 - t1032;
t794 = qJD(1) * t471 + t278 * t1048 + t617 * t327 - t375 * t995 - t376 * t424;
t792 = qJD(1) * t355 + t1300 + t864;
t791 = -t403 + t795;
t786 = t805 + t1022;
t785 = t795 + t1302;
t784 = (Icges(7,1) * t520 - t1206 - t270) * t424 - (-Icges(7,1) * t518 - t268 - t496) * t425 + (t908 * t669 - t371) * t617;
t780 = t1325 * t631 - t1326 * t632 + (-t590 + t593) * qJD(1);
t779 = qJD(1) * t284 + t706 + t792;
t778 = t208 * t632 + t631 * t209 - t486 * t355 - t356 * t487 + t857;
t777 = -t1298 * t578 + t794;
t776 = t1291 * (-pkin(5) - t1231) * t669;
t771 = qJD(1) * t474 - t711 * t973 + t712 * t971;
t770 = -t711 * t974 + t712 * t972 + t1054;
t767 = qJD(1) * t588 - t711 * t953 + t712 * t952;
t766 = t578 * t165 - t367 * t284 + t778;
t598 = t907 * qJD(2);
t599 = t641 * qJD(2);
t763 = qJD(1) * t636 - qJD(2) * t871 - t598 * t746 + t599 * t749;
t762 = -t1276 * t746 + t810 * t749;
t760 = t1273 * t669;
t757 = -t1271 * t711 + t780 * t712;
t25 = t1146 * t140 + t142 * t520 + t144 * t521 + t234 * t268 - t235 * t272 + t265 * t825;
t26 = t1146 * t139 + t141 * t520 + t143 * t521 + t234 * t270 + t235 * t273 + t267 * t825;
t27 = t1148 * t140 - t142 * t518 + t144 * t519 + t236 * t268 - t237 * t272 + t265 * t826;
t28 = t1148 * t139 - t141 * t518 + t143 * t519 + t236 * t270 + t237 * t273 + t267 * t826;
t46 = t1146 * t194 + t195 * t520 + t196 * t521 + t234 * t371 + t235 * t373 + t369 * t825;
t3 = t119 * t193 + t120 * t192 + t149 * t430 - t25 * t425 + t26 * t424 + t46 * t617;
t322 = t371 * t747;
t323 = t371 * t750;
t324 = t373 * t747;
t325 = t373 * t750;
t372 = Icges(7,6) * t669 + t842;
t374 = Icges(7,5) * t669 + t843;
t47 = t1148 * t194 - t195 * t518 + t196 * t519 + t236 * t371 + t237 * t373 + t369 * t826;
t4 = t117 * t193 + t118 * t192 + t148 * t430 - t27 * t425 + t28 * t424 + t47 * t617;
t44 = -t127 * t425 + t128 * t424 + t155 * t617;
t755 = (qJD(1) * t894 - t31 * t750 + t32 * t747) * t1250 + ((t323 * t518 - t325 * t519) * t424 - (t322 * t518 - t324 * t519) * t425 + (-t372 * t518 + t374 * t519) * t617 + (t1143 * t118 + t148 * t669) * qJD(6) + ((qJD(6) * t117 + t819) * t670 + t760) * t747) * t1260 + (qJD(1) * t898 - t27 * t750 + t28 * t747) * t1261 + (qJD(1) * t896 - t25 * t750 + t26 * t747) * t1262 + ((-t323 * t520 - t325 * t521) * t424 - (-t322 * t520 - t324 * t521) * t425 + (t372 * t520 + t374 * t521) * t617 + (t1144 * t119 + t149 * t669) * qJD(6) + ((qJD(6) * t120 + t819) * t670 + t760) * t750) * t1263 - t44 * t1048 / 0.2e1 + (((t323 * t745 - t325 * t748 + t267) * t424 - (t322 * t745 - t324 * t748 + t265) * t425 + (-t372 * t745 + t374 * t748 + t369) * t617 + t155 * qJD(6)) * t669 + (qJD(6) * t894 - t1273) * t670) * t1251 - t430 * t895 / 0.2e1 - t192 * t897 / 0.2e1 - t193 * t899 / 0.2e1 - t1308 * t1047 / 0.2e1 + (t1340 * t747 - t1341 * t750) * t1265 + (t1342 * t747 - t1343 * t750) * t1264 + (t1317 * t747 + t1318 * t750) * t1257 + (t1355 * t750 + t1354 * t747 + (t1340 * t750 + t1341 * t747) * qJD(1)) * t1256 + (t1353 * t750 + t1352 * t747 + (t1342 * t750 + t1343 * t747) * qJD(1)) * t1255 + (-t1317 * t750 + t1318 * t747) * t1254 + (t1269 * t670 + t1270 * t693 + t782 * t669 + t781 * t692) * t1235 + (t1345 * t750 + t1344 * t747 + (t1336 * t750 + t1337 * t747) * qJD(1)) * t1234 + (t1336 * t747 - t1337 * t750) * t1216 + (t40 + t1351) * t991 + (t41 + t1350) * t990 + (t1348 * qJD(1) + t1338 * qJDD(1) + t1340 * t367 + t1341 * t368 + t1354 * t578 + t1355 * t579 + t3) * t1245 + (qJD(1) * t1347 + qJDD(1) * t1339 + t1342 * t367 + t1343 * t368 + t1352 * t578 + t1353 * t579 + t4) * t1244;
t177 = -t838 - t1166;
t178 = -t1136 * t477 - t965;
t102 = -t177 * t632 + t178 * t631 + t1041;
t179 = -t1135 * t476 - t1106;
t180 = -t1135 * t477 + t1105;
t246 = -t750 * t872 + t1155;
t242 = t246 * qJD(1);
t103 = -t179 * t632 + t180 * t631 + t242;
t129 = t1279 * t747 + t767 * t750;
t130 = -t1279 * t750 + t767 * t747;
t131 = t711 * t971 + t712 * t973;
t132 = t711 * t972 + t712 * t974;
t263 = t477 * t712 + t479 * t711;
t83 = t1284 * t747 + t771 * t750;
t84 = t1285 * t747 + t770 * t750;
t85 = -t1284 * t750 + t771 * t747;
t86 = -t1285 * t750 + t770 * t747;
t754 = (qJD(1) * t129 + qJDD(1) * t246 + t179 * t487 + t180 * t486 + t631 * t84 - t632 * t83) * t1245 + t102 * t991 + (-t179 * t750 + t180 * t747) * t1259 + (-t262 * t750 + t263 * t747) * t1216 + (t747 * t814 + t750 * t757) * t1249 + (-t131 * t750 + t132 * t747 + (t262 * t747 + t263 * t750) * qJD(1)) * t1234 + (qJD(1) * t130 + qJDD(1) * t245 + t177 * t487 + t178 * t486 + t631 * t86 - t632 * t85) * t1244 + (-t177 * t750 + t178 * t747) * t1258 + (t747 * t86 - t750 * t85 + (t177 * t747 + t178 * t750) * qJD(1)) * t1247 + (t1271 * t712 + t780 * t711) * t1235 + t755 + t103 * t990 + (t747 * t84 - t750 * t83 + (t179 * t747 + t180 * t750) * qJD(1)) * t1248 + (t747 * t757 - t750 * t814) * t1246;
t600 = t644 * qJD(2);
t553 = t747 * t586;
t462 = t919 * t669;
t452 = t750 * t491;
t426 = pkin(3) * t1136 + t553;
t318 = t578 * t426;
t315 = rSges(7,1) * t520 - rSges(7,2) * t521;
t314 = -rSges(7,1) * t518 - rSges(7,2) * t519;
t306 = -t750 * t870 + t1151;
t298 = t306 * qJD(1);
t295 = t874 * qJD(2);
t158 = qJD(1) * t339 + qJDD(1) * t538 - t600 * t710 - t609 * t642 + t1075;
t157 = -t600 * t1049 + t610 * t642 + t1081 * qJDD(1) + (-t340 - t605) * qJD(1);
t154 = -t1278 * t750 + t763 * t747;
t153 = t1278 * t747 + t763 * t750;
t152 = -qJD(2) * t876 + t333 * t749 + t335 * t746;
t151 = -qJD(2) * t877 + t334 * t749 + t336 * t746;
t126 = qJD(2) * t890 + t298;
t125 = qJD(2) * t891 + t1040;
t108 = qJD(1) * t915 - t545 * t579 + t823;
t105 = qJD(1) * t293 + qJDD(1) * t483 - t486 * t594 - t517 * t631 + t787;
t104 = t487 * t594 - t517 * t632 + t1010 * qJDD(1) + (-t294 + t1114) * qJD(1) + t869;
t75 = t293 * t632 + t294 * t631 + t482 * t486 - t483 * t487 + t857;
t35 = t254 * t579 + t255 * t578 + t367 * t450 - t368 * t451 + t778;
t20 = -t1119 * t368 + (t164 + t227) * t579 + t228 * t578 + t367 * t411 + t766;
t10 = -t1118 * t368 + (t164 + t256) * t579 + t145 * t425 + t146 * t424 + t192 * t276 - t193 * t278 + t257 * t578 + t367 * t470 + t766;
t1 = [(t151 + t154 + t126) * t987 + t1219 / 0.2e1 - t1220 / 0.2e1 + (t242 + (t178 + (t476 * t750 + t477 * t747) * t711 + t965 + t1106) * t632 + (-t478 * t1133 + t1166 + t177 + (t476 * t747 - t477 * t750) * t711 + t1105) * t631) * t1246 + ((t1315 * t750 + t1309 + t1340 - t1373) * t579 + ((t1377 + t1382) * t750 + t1315 * t747 + t1341 + t1380) * t578 + t1351 - t1357) * t1257 + t41 * t1260 + (t130 + t103 + t131) * t1247 + (m(2) * (t643 ^ 2 + t645 ^ 2) + t590 * t712 + t592 * t711 + t562 * t693 + t564 * t692 + t532 * t670 + t534 * t669 + t871 + Icges(2,3)) * qJDD(1) + (t47 + t41) * t1261 + t1215 + (-qJD(2) * t870 + t598 * t749 + t599 * t746 + t669 * t962 + t670 * t963 + t692 * t958 + t693 * t959 + t711 * t952 + t712 * t953) * qJD(1) + t1178 / 0.2e1 + t1179 / 0.2e1 + (t246 + t263) * t1259 + (-(-qJD(1) * t411 + t579 * t829 - t108 + t779) * t109 + t108 * (-t415 * t747 + t1067) + t109 * (t1073 + t1107) + (t108 * t463 - t109 * t464) * t701 + ((-t108 * rSges(6,3) + t109 * (-t529 - t656)) * t747 + (t108 * (-t529 - t1296) - t109 * t713) * t750) * qJD(1) + (-g(2) + t34) * (t412 + t954) + (-g(1) + t33) * (-t411 + t1088)) * m(6) + (-(-qJD(1) * t450 - t1157 - t136 + t792) * t137 + t136 * t950 + t137 * (t536 + t1071) + (t1177 * t568 - t137 * t511) * t701 + ((-t136 * rSges(5,3) + t137 * (-t604 - t668)) * t747 + (t136 * (-t604 - t1295) - t137 * t741) * t750) * qJD(1) + (-g(2) + t59) * (-t741 * t747 + t451 + t571) + (-g(1) + t58) * (-t450 - t1078)) * m(5) + (t175 * t1064 + t176 * (-t946 + t1070) + (t1175 * t594 - t176 * t549) * t740 + ((-t175 * rSges(4,3) + t176 * (-t694 - t680)) * t747 + (t175 * (-t694 - t1294) - t176 * t751) * t750) * qJD(1) - (-qJD(1) * t482 + t1300 - t175 + t833) * t176 + (t105 - g(2)) * (t483 + t949) + (t104 - g(1)) * (-t482 - t1066)) * m(4) + (-t1345 + t1347 + t1350) * t1255 + t46 * t1262 + ((t19 * t832 + (-t529 + t856) * t1182) * t747 - t856 * t1238 + (-t922 + t1067 + (-t529 + t832) * t1050 + (-t415 + (t1243 * t670 + t1239) * t701) * t747) * t76 + (qJD(1) * t470 - t579 * t984 + t76 - t779 + t556 + t1020 + t1107 + (-pkin(5) * t1149 - qJD(1) * t713) * t750 + t1368) * t77 + (t18 - g(2)) * (t954 + t1334) + (t19 - g(1)) * (-t921 + t1088)) * m(7) + (t102 - t1041 + (t180 - t838 - t1105) * t632 + (t747 * t956 + t179 - t384) * t631 + ((t475 + t879) * t631 + t956 * t632) * t750) * t1249 + (t298 + ((t200 - t447 + (t524 + t1163) * t750 + t1095) * t750 + t1094 * t747) * qJD(2)) * t986 + (((t438 * t750 + t439 * t747) * t692 + (t394 * t750 + t395 * t747) * t669 + t1342 + t1370 + t1372) * t579 + (-t440 * t1139 + (t438 * t747 - t439 * t750) * t692 - t396 * t1144 + (t394 * t747 - t395 * t750) * t669 - t1309 + t1343 - t1369) * t578 + t1361) * t1254 + (t302 * (t700 + t1065) + (t1174 * t642 - t1172) * qJD(2) + ((-pkin(1) - t644) * t1173 + (t301 * (-rSges(3,3) - pkin(7)) + t302 * t993) * t747) * qJD(1) - (-qJD(1) * t537 - t1000 - t301 - t625) * t302 + (t158 - g(2)) * t418 + (t157 - g(1)) * (t747 * t993 + t1063 + t738)) * m(3) + (t129 + t132) * t1248 + (t245 + t262) * t1258 + (t1344 + t1348) * t1256 - m(2) * (-g(1) * t643 + g(2) * t645) + (t305 + t303) * t1252 + t148 * t1267 + t149 * t1268 + (t1336 + t1338) * t1265 + (t1337 + t1339) * t1264 + (t306 + t304) * t1253 + (t125 - t1040 + ((t750 * t951 - t1094 + t202) * t750 + (t747 * t951 + t201 + t957) * t747) * qJD(2)) * t989 + (t152 + t153) * t988; (qJD(1) * t153 + qJD(2) * t917 + qJDD(1) * t306 + t201 * t610 + t202 * t609) * t1245 + t891 * t1252 + t890 * t1253 + ((t1068 * t749 + t1069 * t746) * qJD(1) + (t1276 * t749 + t810 * t746) * qJD(2)) * t1235 + ((-t1150 * t710 + t1052) * t747 + (t796 + (t1151 * t747 + t762) * qJD(2)) * t750) * t989 + ((-t1049 * t1151 - t1052) * t750 + (t796 + (t1150 * t750 + t762) * qJD(2)) * t747) * t986 + (-t151 * t750 + t152 * t747 + (t303 * t747 + t304 * t750) * qJD(1)) * t1234 + t126 * t990 + t125 * t991 + ((t201 * t747 + t202 * t750) * qJD(1) + t917) * t988 + ((t199 * t747 + t200 * t750) * qJD(1) + t916) * t987 + (-t303 * t750 + t304 * t747) * t1216 + (qJD(1) * t154 + qJD(2) * t916 + qJDD(1) * t305 + t199 * t610 + t200 * t609) * t1244 + t754 + (t10 * (t812 + t1099) + t50 * (t786 + t1015) + t806 * t1313 + (t18 * t806 + t77 * t785 + (-t467 + t941) * t1184) * t747 - t77 * (t777 + t807) - t50 * (-t278 * t996 + t811 + t828) - (-t77 * t1001 + (t50 * t983 - t749 * t918) * qJD(2)) * pkin(2) - g(1) * (t499 + t1007) - g(2) * (t498 + t1008) - g(3) * (t737 + t800) - t776 + (t785 * t750 - (-t469 + t1112) * qJD(1) + t1316) * t76) * m(7) + (-g(1) * (t499 - t464) - g(2) * (t498 - t463) - g(3) * (t737 + t863) + t108 * t1009 + t20 * (t852 + t1099) + t72 * (t804 + t1015) + (t108 * t791 + t1304 * t813) * t750 + (t34 * t813 + t109 * t791 + (-t467 + t1016) * t1183) * t747 - t108 * t1011 - t109 * (t807 + t961) - t72 * (t828 + t969) - t108 * (t463 + t1112) * qJD(1) - (-t109 * t1001 + ((-t108 * t750 - t109 * t747) * t749 + t72 * t983) * qJD(2)) * pkin(2)) * m(6) + (-g(1) * (t585 - t511) - g(2) * (t584 - t510) - g(3) * (t737 + t929) - t137 * (t933 + t955) - t112 * (t966 + t968) - (-t137 * t1001 + (t112 * t983 + t749 * t893) * qJD(2)) * pkin(2) + t35 * (t938 + t1099) + t112 * (t854 + t1015) + t862 * t1312 + (t59 * t862 + t137 * t817 + (-t467 + t1113) * t1058) * t747 + (qJD(1) * t493 + t750 * t817 + t1310) * t136) * m(5) + (-g(3) * (t1294 + t737) - t1291 * t831 - (-t176 * t1001 + (t160 * t983 + t749 * t892) * qJD(2)) * pkin(2) + t75 * (t1098 + t1099) + t160 * (t1015 + t1017) + (t175 * t930 + (qJD(1) * t176 + t104) * t831) * t750 + (t105 * t831 + t176 * t930 + (t175 * t594 + t160 * (-t467 - t483)) * qJD(1)) * t747 + t1307) * m(4) + (g(1) * t581 + g(2) * t580 - g(3) * t644 - (t301 * t580 - t1172) * qJD(1) - (t295 * (-t580 * t747 - t581 * t750) + t886 * t644) * qJD(2) + (qJD(2) * t885 + t537 * t609 - t538 * t610) * t874 + t295 * ((t537 * t750 - t538 * t747) * qJD(1) + t885) + t886 * t600 + (-t157 * t750 - t158 * t747 + (-t302 * t750 + t1174) * qJD(1)) * t642) * m(3); t754 + (-g(1) * (t554 + t1007) - g(2) * (t553 + t1008) - g(3) * t800 - t776 + t10 * t812 + (t1184 * t941 + t77 * t808) * t747 - t77 * (t1299 * t578 + t794 + t803) + t1274 * (t586 - t1333) + (t808 * t750 - t633 - (-t426 - t469) * qJD(1) + t1316) * t76 + (t786 - t318 + t547 - (-t997 - t557) * t747 - (t427 + t471) * t579 - t860) * t50) * m(7) + (-g(1) * (t554 - t464) - g(2) * (t553 - t463) - g(3) * t863 + t20 * t852 + (t1016 * t1183 + t109 * t820) * t747 - t109 * (-t578 * t928 - t434 + t803) + t1275 * (-t545 + t586) + (t804 - t318 + t345 - (t427 - t464) * t579 - t868) * t72 + (t1009 + t820 * t750 - t633 - (-t426 + t463) * qJD(1) - t1011) * t108) * m(6) + (-g(3) * t929 + t35 * t938 + (t1058 * t1113 + t137 * t934) * t747 - t137 * (t821 + t955) + (t854 - t868 - t968) * t112 + (t750 * t934 + t1310 - t633) * t136 + (-t1291 + t1306 + t1312) * (-t568 - t1241)) * m(5) + (t75 * t1098 + t160 * (-t1051 * t483 + t1017) + t892 * t517 + (-t104 * t750 - t105 * t747 + (-t176 * t750 + t1175) * qJD(1)) * t594 + g(1) * t549 + g(2) * t548 - g(3) * t1294 + t1307) * m(4); t755 + (-g(1) * (-pkin(4) * t1141 + t1007) - g(2) * (-pkin(4) * t1142 + t1008) - g(3) * t809 - t776 + t10 * t853 + (t1018 * t1184 + t77 * t867) * t747 - t77 * (t822 + t777) + t1274 * (-t375 + t984) + (qJD(1) * t469 + t750 * t867 + t1359 - t623) * t76 + (t805 + t452 - (-t997 - t490) * t747 - t811) * t50) * m(7) + (-g(3) * t928 - t109 * (t822 + t961) + t20 * t942 + (t109 * t932 - t1119 * t1183) * t747 + (t490 * t747 + t452 + t855 - t969) * t72 + (-qJD(1) * t463 + t750 * t932 + t1091 - t1109 - t623) * t108 + (t1275 - t1291) * t829) * m(6) + (g(1) * t511 + g(2) * t510 - g(3) * t1295 - t136 * t948 - t137 * t955 + t35 * t1100 + t893 * t446 + (-t58 * t750 - t1306 + (-t137 * t750 + t1177) * qJD(1)) * t568 + (-t1051 * t451 + t1019 - t968) * t112) * m(5); -m(6) * t1290 + 0.2e1 * (t1244 * t34 + t1245 * t33 + t1266 * t72) * m(6) + (0.2e1 * t50 * t1266 - t1290 + t1292) * m(7); -t41 * t1005 / 0.2e1 + t3 * t1146 / 0.2e1 + (-t149 * t670 + t669 * t896) * t1268 + ((t701 * t896 - t46) * t670 + (qJD(1) * t897 + t149 * t701 + t25 * t747 + t26 * t750) * t669) * t1262 + t669 * t40 * t990 + t4 * t1148 / 0.2e1 + (-t148 * t670 + t669 * t898) * t1267 + ((t701 * t898 - t47) * t670 + (qJD(1) * t899 + t148 * t701 + t27 * t747 + t28 * t750) * t669) * t1261 + t44 * t1149 / 0.2e1 - t670 * (t1178 + t1179 + t1215 + t1219 - t1220) / 0.2e1 + t430 * (-t155 * t670 + t669 * t894) / 0.2e1 + ((t701 * t894 - t55) * t670 + (qJD(1) * t895 + t155 * t701 + t31 * t747 + t32 * t750) * t669) * t1250 + (t1272 * t520 + t784 * t521 - t750 * t801) * t1263 + (-t1272 * t518 + t519 * t784 - t747 * t801) * t1260 + (t818 * t670 + (-t1272 * t745 + t748 * t784) * t669) * t1251 + t1308 * t1145 / 0.2e1 + ((-t77 * t145 + t76 * t146 - t18 * t278 + t19 * t276 + (t50 * t887 + (t747 * t76 - t750 * t77) * t375) * t701) * t670 + (t76 * (t203 * t747 - t276 * t701) + t77 * (-t203 * t750 + t278 * t701) + t10 * t887 + t50 * (-t1050 * t278 - t1051 * t276 - t145 * t747 + t146 * t750) + (qJD(1) * t918 + t1292) * t375) * t669 - t76 * (-t314 * t617 - t425 * t462) - t77 * (t315 * t617 - t424 * t462) - t50 * (t314 * t424 + t315 * t425) - g(1) * t315 - g(2) * t314 - g(3) * t462) * m(7);];
tau  = t1;
