% Calculate minimal parameter regressor of coriolis matrix for
% S6RRRRPR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4,d6,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x33]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRRRPR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RRRRPR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:54:59
% EndTime: 2019-03-09 21:55:40
% DurationCPUTime: 26.33s
% Computational Cost: add. (29174->683), mult. (56429->908), div. (0->0), fcn. (68693->10), ass. (0->535)
t497 = sin(qJ(6));
t496 = sin(pkin(11));
t787 = cos(pkin(11));
t499 = sin(qJ(3));
t500 = sin(qJ(2));
t503 = cos(qJ(2));
t804 = cos(qJ(3));
t465 = t499 * t500 - t503 * t804;
t467 = -t499 * t503 - t500 * t804;
t498 = sin(qJ(4));
t502 = cos(qJ(4));
t605 = -t502 * t465 + t498 * t467;
t837 = pkin(7) + pkin(8);
t475 = t837 * t500;
t476 = t837 * t503;
t553 = -t475 * t804 - t499 * t476;
t533 = -t467 * pkin(9) - t553;
t861 = t498 * t533;
t468 = t804 * t476;
t736 = t499 * t475;
t841 = -t468 + t736;
t383 = t465 * pkin(9) + t841;
t872 = t502 * t383;
t888 = t861 + t872;
t899 = -qJ(5) * t605 + t888;
t452 = t498 * t465;
t454 = t502 * t467;
t414 = -t454 - t452;
t860 = t502 * t533;
t873 = t498 * t383;
t889 = t860 - t873;
t902 = -t414 * qJ(5) - t889;
t926 = t496 * t899 + t787 * t902;
t834 = -t926 / 0.2e1;
t835 = t926 / 0.2e1;
t940 = t834 + t835;
t942 = t497 * t940;
t501 = cos(qJ(6));
t941 = t501 * t940;
t925 = t496 * t902 - t787 * t899;
t936 = t925 * t501;
t939 = -t936 / 0.2e1;
t937 = t925 * t497;
t938 = t937 / 0.2e1;
t329 = t414 * t496 - t605 * t787;
t489 = -pkin(2) * t503 - pkin(1);
t429 = t465 * pkin(3) + t489;
t339 = -pkin(4) * t605 + t429;
t853 = t496 * t605;
t859 = t787 * t414;
t871 = t859 + t853;
t517 = t329 * pkin(5) - pkin(10) * t871 + t339;
t60 = -t501 * t517 + t937;
t935 = t925 * t871;
t932 = t497 * t935 - t60 * t871;
t61 = t497 * t517 + t936;
t931 = t501 * t935 - t61 * t871;
t799 = t502 * pkin(3);
t488 = pkin(4) + t799;
t609 = t787 * t498;
t443 = pkin(3) * t609 + t496 * t488;
t814 = -t443 / 0.2e1;
t934 = t926 * t814;
t666 = qJD(2) + qJD(3);
t882 = qJD(4) + t666;
t770 = t501 * t926;
t806 = -t501 / 0.2e1;
t920 = t806 * t926 - t770 / 0.2e1;
t771 = t497 * t926;
t808 = -t497 / 0.2e1;
t919 = t808 * t926 - t771 / 0.2e1;
t660 = -t787 / 0.2e1;
t809 = t496 / 0.2e1;
t930 = (t660 * t925 + t809 * t926) * pkin(4);
t758 = t329 ^ 2;
t856 = t871 ^ 2;
t900 = -t758 + t856;
t914 = t900 * t497;
t924 = qJD(1) * t914;
t913 = t900 * t501;
t923 = t913 * qJD(1);
t922 = qJD(3) + qJD(4);
t630 = t861 / 0.2e1;
t901 = t630 + t872 / 0.2e1;
t918 = 0.2e1 * t901;
t875 = t860 / 0.2e1;
t903 = -t873 / 0.2e1 + t875;
t917 = 0.2e1 * t903;
t912 = qJD(2) * t917;
t911 = qJD(2) * t918;
t893 = t501 * t871;
t176 = qJD(5) * t893;
t908 = 0.2e1 * t497;
t894 = t497 * t871;
t637 = t894 / 0.2e1;
t895 = t497 * t329;
t907 = -t895 / 0.2e1;
t663 = t804 * pkin(2);
t596 = t663 + pkin(3);
t567 = t498 * t596;
t735 = t499 * t502;
t449 = pkin(2) * t735 + t567;
t427 = t787 * t449;
t477 = t502 * t596;
t737 = t498 * t499;
t448 = pkin(2) * t737 - t477;
t441 = pkin(4) - t448;
t372 = t496 * t441 + t427;
t368 = pkin(10) + t372;
t906 = t368 * t871;
t896 = t329 / 0.2e1;
t833 = t871 / 0.2e1;
t623 = -t860 / 0.2e1;
t140 = t875 + t623;
t886 = qJD(4) * t140;
t852 = t501 * t329;
t864 = t852 / 0.2e1;
t865 = -t852 / 0.2e1;
t868 = t864 + t865;
t885 = qJD(6) * t868;
t884 = t140 * qJD(1);
t866 = t853 / 0.2e1 + t859 / 0.2e1;
t883 = t866 * qJD(1);
t838 = t497 ^ 2;
t495 = t501 ^ 2;
t876 = -t495 / 0.2e1;
t603 = t838 / 0.2e1 + t876;
t179 = t603 * t871;
t157 = t179 * qJD(6);
t710 = qJD(1) * t871;
t653 = t495 * t710;
t881 = t329 * t653 - t157;
t880 = t806 * t906 + t938;
t879 = t808 * t906 + t939;
t878 = pkin(5) * t871 + pkin(10) * t329;
t711 = qJD(1) * t329;
t877 = qJD(6) * t866 + t711 * t871;
t862 = t414 * pkin(4);
t874 = t862 / 0.2e1;
t858 = -t414 ^ 2 + t605 ^ 2;
t867 = t858 * qJD(1);
t855 = 0.2e1 * t871;
t830 = -t329 / 0.2e1;
t851 = t605 * qJD(1) * t414;
t208 = t882 * t605;
t601 = t666 * t329;
t849 = t329 * qJD(4) + t601;
t608 = qJD(2) + t922;
t742 = t497 * t501;
t843 = t608 * t742;
t135 = -t179 * qJD(1) + t843;
t848 = t666 * t553;
t847 = -0.2e1 * t871;
t840 = t495 - t838;
t846 = t840 * t608;
t706 = qJD(1) * t501;
t652 = t497 * t706;
t839 = t179 * t608 + t652 * t856;
t832 = -t871 / 0.2e1;
t747 = t496 * t449;
t371 = t441 * t787 - t747;
t367 = -pkin(5) - t371;
t828 = -t367 / 0.2e1;
t827 = t368 / 0.2e1;
t826 = -t371 / 0.2e1;
t825 = t371 / 0.2e1;
t824 = -t372 / 0.2e1;
t823 = t372 / 0.2e1;
t381 = -t448 * t787 - t747;
t822 = -t381 / 0.2e1;
t656 = t804 * t498;
t458 = (t656 + t735) * pkin(2);
t655 = t804 * t502;
t459 = (t655 - t737) * pkin(2);
t393 = t458 * t787 + t496 * t459;
t821 = -t393 / 0.2e1;
t394 = -t496 * t458 + t459 * t787;
t820 = t394 / 0.2e1;
t746 = t496 * t498;
t442 = -pkin(3) * t746 + t488 * t787;
t438 = -pkin(5) - t442;
t819 = -t438 / 0.2e1;
t818 = t438 / 0.2e1;
t439 = pkin(10) + t443;
t817 = -t439 / 0.2e1;
t816 = -t442 / 0.2e1;
t815 = t442 / 0.2e1;
t622 = t454 / 0.2e1;
t456 = (t496 * t502 + t609) * pkin(3);
t813 = t456 / 0.2e1;
t457 = (t502 * t787 - t746) * pkin(3);
t812 = -t457 / 0.2e1;
t595 = -t468 / 0.2e1;
t483 = pkin(4) * t496 + pkin(10);
t811 = t483 / 0.2e1;
t484 = -pkin(4) * t787 - pkin(5);
t810 = -t484 / 0.2e1;
t807 = t497 / 0.2e1;
t805 = t501 / 0.2e1;
t803 = pkin(2) * t499;
t800 = t467 * pkin(3);
t422 = t498 * pkin(3);
t494 = t500 * pkin(2);
t798 = pkin(3) * qJD(3);
t797 = pkin(3) * qJD(4);
t796 = pkin(4) * qJD(4);
t543 = t862 - t800;
t128 = t543 + t878;
t127 = t494 + t128;
t1 = t127 * t852 + t932;
t795 = t1 * qJD(1);
t2 = -t127 * t895 + t931;
t794 = t2 * qJD(1);
t3 = t128 * t852 + t932;
t793 = t3 * qJD(1);
t4 = -t128 * t895 + t931;
t792 = t4 * qJD(1);
t133 = t862 + t878;
t5 = t133 * t852 + t932;
t791 = t5 * qJD(1);
t6 = -t133 * t895 + t931;
t790 = t6 * qJD(1);
t43 = t329 * t60 + t771 * t871;
t785 = qJD(1) * t43;
t44 = -t329 * t61 - t770 * t871;
t784 = qJD(1) * t44;
t48 = -t329 * t925 - t871 * t926;
t783 = qJD(1) * t48;
t614 = t830 + t896;
t66 = t840 * t614;
t782 = qJD(1) * t66;
t78 = t758 + t856;
t69 = t78 * t497;
t780 = qJD(1) * t69;
t72 = t78 * t501;
t779 = qJD(1) * t72;
t558 = t329 * t820 + t821 * t871;
t505 = -(t818 + t828) * t329 + (t817 + t827) * t871 + t558;
t16 = t497 * t505;
t765 = t16 * qJD(1);
t380 = -t496 * t448 + t427;
t754 = t380 * t871;
t559 = -t754 / 0.2e1 + t381 * t896;
t511 = -t329 * t828 + t827 * t871 + t559;
t636 = -t894 / 0.2e1;
t718 = t483 * t636 + t484 * t907;
t20 = t497 * t511 + t718;
t764 = t20 * qJD(1);
t24 = t339 * (t494 + t543);
t763 = t24 * qJD(1);
t25 = t339 * t543;
t762 = t25 * qJD(1);
t26 = t339 * t862;
t761 = t26 * qJD(1);
t759 = t871 * t439;
t757 = t329 * t438;
t756 = t371 * t329;
t755 = t372 * t871;
t753 = t393 * t501;
t752 = t442 * t329;
t751 = t443 * t871;
t49 = -(t816 + t825) * t329 + (t814 + t823) * t871 + t558;
t750 = t49 * qJD(1);
t513 = -t329 * t826 + t824 * t871 - t559;
t528 = (-t329 * t660 + t496 * t832) * pkin(4);
t52 = t528 - t513;
t726 = t52 * qJD(1);
t556 = t329 * t812 + t813 * t871;
t510 = -t329 * t816 + t814 * t871 + t556;
t57 = t528 - t510;
t725 = t57 * qJD(1);
t721 = t78 * qJD(1);
t532 = -t800 / 0.2e1 + t874;
t522 = t494 / 0.2e1 + t532;
t563 = -t329 * t824 + t825 * t871;
t83 = t522 + t563;
t720 = t83 * qJD(1);
t616 = t833 + t832;
t191 = t616 * t501;
t719 = t666 * t191;
t627 = t329 * t805;
t717 = -t483 * t893 / 0.2e1 - t484 * t627;
t155 = t614 * t742;
t712 = qJD(1) * t155;
t708 = qJD(1) * t429;
t707 = qJD(1) * t489;
t705 = qJD(1) * t503;
t704 = qJD(2) * t497;
t703 = qJD(2) * t500;
t702 = qJD(2) * t501;
t701 = qJD(2) * t503;
t700 = qJD(3) * t489;
t699 = qJD(3) * t497;
t698 = qJD(3) * t501;
t696 = qJD(4) * t429;
t695 = qJD(4) * t497;
t694 = qJD(4) * t501;
t693 = qJD(6) * t497;
t493 = qJD(6) * t501;
t562 = t443 * t830 + t816 * t871;
t117 = t532 - t562;
t692 = t117 * qJD(1);
t544 = -t329 * t809 + t660 * t871;
t129 = (-t414 / 0.2e1 + t544) * pkin(4);
t691 = t129 * qJD(1);
t689 = t894 * qJD(1);
t183 = t616 * t497;
t688 = t183 * qJD(1);
t185 = t833 * t908;
t687 = t185 * qJD(1);
t186 = t830 * t908;
t166 = t186 * qJD(1);
t615 = 0.2e1 * t896;
t188 = t615 * t497;
t167 = t188 * qJD(1);
t686 = t893 * qJD(1);
t685 = t191 * qJD(1);
t193 = 0.2e1 * t864;
t684 = t193 * qJD(1);
t195 = t615 * t501;
t178 = t195 * qJD(1);
t196 = 0.2e1 * t865;
t683 = t196 * qJD(1);
t199 = t840 * t856;
t682 = t199 * qJD(1);
t340 = t429 * t414;
t435 = t494 - t800;
t249 = -t435 * t605 + t340;
t680 = t249 * qJD(1);
t341 = t429 * t605;
t250 = t414 * t435 + t341;
t679 = t250 * qJD(1);
t259 = -t605 * t800 - t340;
t678 = t259 * qJD(1);
t260 = t414 * t800 - t341;
t677 = t260 * qJD(1);
t382 = t465 ^ 2 - t467 ^ 2;
t672 = t382 * qJD(1);
t395 = t465 * t494 - t467 * t489;
t671 = t395 * qJD(1);
t396 = -t465 * t489 - t467 * t494;
t670 = t396 * qJD(1);
t410 = t622 - t454 / 0.2e1;
t669 = t410 * qJD(1);
t421 = t595 + t468 / 0.2e1;
t668 = t421 * qJD(1);
t481 = -t500 ^ 2 + t503 ^ 2;
t667 = t481 * qJD(1);
t662 = pkin(1) * t500 * qJD(1);
t661 = pkin(1) * t705;
t659 = t938 + t717;
t658 = t939 + t718;
t657 = t666 * t893 + t694 * t871;
t654 = t329 * t710;
t651 = qJD(6) * t329 * t871;
t649 = t605 * t708;
t648 = t414 * t708;
t647 = t465 * t707;
t646 = t467 * t707;
t482 = t497 * t493;
t645 = t500 * t705;
t644 = t871 * t706;
t348 = t367 * t807;
t639 = t754 / 0.2e1;
t638 = t393 * t807;
t632 = t381 * t808;
t631 = t394 * t808;
t625 = t381 * t806;
t624 = t394 * t806;
t612 = t813 + t380 / 0.2e1;
t611 = t804 * qJD(2);
t610 = t804 * qJD(3);
t607 = pkin(3) * t922;
t602 = t666 * t871;
t416 = t666 * t467;
t599 = t666 * t501;
t597 = t871 * t652;
t594 = -0.2e1 * t597;
t593 = 0.2e1 * t597;
t592 = t822 + t810 + t828;
t591 = -t394 / 0.2e1 + t819 + t828;
t590 = t821 + t612;
t589 = t812 + t810 + t819;
t587 = t329 * t597;
t150 = -t371 * t380 + t372 * t381;
t516 = t926 * t824 + t380 * t835 + (t822 + t825) * t925;
t9 = t930 + t516;
t586 = -t9 * qJD(1) + t150 * qJD(2);
t156 = -t371 * t393 + t372 * t394;
t514 = t393 * t834 + t823 * t926 + (t820 + t826) * t925;
t564 = t815 * t925 + t934;
t8 = t514 + t564;
t585 = t8 * qJD(1) + t156 * qJD(2);
t583 = -t329 * t484 - t483 * t871;
t581 = -t329 * t367 - t906;
t580 = -t757 - t759;
t253 = t590 * t501;
t509 = -t329 * t818 + t817 * t871 + t556;
t504 = -t329 * t810 + t811 * t871 + t509;
t27 = t939 + t936 / 0.2e1 + t504 * t497;
t575 = t27 * qJD(1) - t253 * qJD(2);
t574 = t871 * (-qJD(6) - t711);
t573 = qJD(2) * t458;
t521 = -t861 / 0.2e1;
t138 = t630 + t521;
t572 = -t138 * qJD(1) - t422 * qJD(2);
t139 = -t872 / 0.2e1 + t521 + t901;
t571 = qJD(1) * t139 + qJD(2) * t449;
t423 = t477 / 0.2e1 + (-t663 / 0.2e1 + pkin(3) / 0.2e1) * t502;
t570 = -t423 * qJD(2) + t884;
t569 = -qJD(2) * t448 - t884;
t144 = t623 + t873 / 0.2e1 + t903;
t568 = -qJD(1) * t144 + qJD(2) * t459;
t561 = -t759 / 0.2e1 - t757 / 0.2e1;
t560 = t329 * t827 + t828 * t871;
t557 = t439 * t896 + t819 * t871;
t555 = t329 * t811 + t810 * t871;
t18 = t501 * t505;
t551 = qJD(1) * t18 - t393 * t704;
t22 = t501 * t511 + t717;
t550 = qJD(1) * t22 - t380 * t704;
t537 = t127 / 0.2e1 + t560;
t31 = t497 * t537 + t941;
t549 = -qJD(1) * t31 - t367 * t702;
t33 = -t501 * t537 + t942;
t548 = -qJD(1) * t33 - t367 * t704;
t536 = t128 / 0.2e1 + t557;
t535 = t133 / 0.2e1 + t555;
t515 = t934 + t456 * t835 + (t812 + t815) * t925;
t11 = t930 + t515;
t334 = -t442 * t456 + t443 * t457;
t512 = t371 * t813 + t372 * t812 + t380 * t815 + t381 * t814;
t529 = (t393 * t660 + t394 * t809) * pkin(4);
t62 = t529 + t512;
t534 = t11 * qJD(1) + t62 * qJD(2) - t334 * qJD(3);
t243 = t591 * t497;
t37 = -t501 * t536 + t942;
t527 = -qJD(1) * t37 + qJD(2) * t243 - t438 * t699;
t244 = t591 * t501;
t35 = t497 * t536 + t941;
t526 = -qJD(1) * t35 + qJD(2) * t244 - t438 * t698;
t252 = t590 * t497;
t30 = t938 - t937 / 0.2e1 + t504 * t501;
t525 = -qJD(1) * t30 - qJD(2) * t252 - t456 * t699;
t255 = t592 * t497;
t342 = t589 * t497;
t41 = -t501 * t535 + t942;
t519 = -qJD(1) * t41 + qJD(2) * t255 + qJD(3) * t342 - t484 * t695;
t256 = t592 * t501;
t343 = t589 * t501;
t39 = t497 * t535 + t941;
t518 = -qJD(1) * t39 + qJD(2) * t256 + qJD(3) * t343 - t484 * t694;
t474 = t840 * qJD(6);
t470 = t484 * t805;
t469 = t484 * t807;
t451 = t459 * qJD(3);
t450 = t458 * qJD(3);
t437 = t449 * qJD(4);
t436 = t448 * qJD(4);
t434 = t456 * t695;
t425 = t438 * t805;
t424 = t438 * t807;
t419 = t467 * t465 * qJD(1);
t418 = -t799 / 0.2e1 - t477 / 0.2e1 + (t737 - t655 / 0.2e1) * pkin(2);
t417 = -t422 / 0.2e1 - t567 / 0.2e1 + (-t735 - t656 / 0.2e1) * pkin(2);
t415 = t666 * t465;
t404 = t410 * qJD(4);
t388 = 0.2e1 * t595 + t736;
t379 = t393 * t699;
t354 = t380 * t695;
t349 = t367 * t805;
t347 = 0.2e1 * t622 + t452;
t345 = t457 * t806 + t425 + t470;
t344 = t457 * t808 + t424 + t469;
t294 = t482 * t847;
t258 = t470 + t349 + t625;
t257 = t469 + t348 + t632;
t254 = -t753 / 0.2e1 - t612 * t501;
t251 = t497 * t612 + t638;
t248 = t594 + t846;
t247 = t593 - t846;
t246 = t425 + t349 + t624;
t245 = t424 + t348 + t631;
t207 = t347 * qJD(4) - t414 * t666;
t194 = t864 - t627;
t189 = t907 + t895 / 0.2e1;
t187 = -t329 * t808 + t907;
t184 = t637 + t636;
t182 = 0.2e1 * t637;
t172 = t191 * qJD(5);
t165 = t187 * qJD(6);
t164 = t186 * qJD(6);
t160 = t185 * qJD(5);
t159 = t184 * qJD(5);
t154 = (t865 - t627) * t497;
t153 = t493 + t178;
t152 = -t167 - t693;
t151 = t166 - t693;
t149 = t482 - t712;
t148 = t482 + t712;
t130 = t544 * pkin(4) + t874;
t119 = t882 * t866;
t118 = t532 + t562;
t84 = t522 - t563;
t67 = t838 * t896 + (t603 + t876) * t329;
t65 = t474 - t782;
t64 = t474 + t782;
t63 = t529 - t512;
t59 = qJD(4) * t155 + t881;
t58 = t528 + t510;
t56 = qJD(4) * t66 + t294 - 0.2e1 * t587;
t55 = qJD(4) * t183 + qJD(6) * t195 - t923;
t54 = qJD(4) * t191 - qJD(6) * t188 + t924;
t53 = t528 + t513;
t51 = t154 * qJD(4) - t157 - (t497 * t599 + t653) * t329;
t50 = -t755 / 0.2e1 + t756 / 0.2e1 - t751 / 0.2e1 + t752 / 0.2e1 - t558;
t47 = t182 * qJD(4) + t194 * qJD(6) + t497 * t602 + t923;
t46 = qJD(4) * t893 + t189 * qJD(6) + t599 * t871 - t924;
t45 = t67 * qJD(4) - t601 * t840 + t294 + 0.2e1 * t587;
t42 = t133 * t805 - t501 * t555 + t919;
t40 = t133 * t808 + t497 * t555 + t920;
t38 = t128 * t805 - t501 * t557 + t919;
t36 = t128 * t808 + t497 * t557 + t920;
t34 = t127 * t805 - t501 * t560 + t919;
t32 = t127 * t808 + t497 * t560 + t920;
t29 = t501 * t509 + t659 + t938;
t28 = t497 * t509 + t658 + t939;
t23 = t329 * t625 + t367 * t865 + t501 * t639 + t659 + t880;
t21 = t497 * t639 + t658 + (-t348 + t632) * t329 + t879;
t19 = t329 * t624 - t367 * t627 + t561 * t501 + t753 * t833 + t880 + t938;
t17 = t329 * t631 + t367 * t907 + t497 * t561 + t638 * t871 + t879 + t939;
t12 = t930 - t515;
t10 = t930 - t516;
t7 = t514 - t564;
t13 = [0, 0, 0, t500 * t701, t481 * qJD(2), 0, 0, 0, -pkin(1) * t703, -pkin(1) * t701, t465 * t416, t666 * t382, 0, 0, 0, qJD(2) * t395 - t467 * t700, qJD(2) * t396 - t465 * t700, t208 * t414, t882 * t858, 0, 0, 0, qJD(2) * t249 - qJD(3) * t259 + t414 * t696, qJD(2) * t250 - qJD(3) * t260 + t605 * t696, qJD(5) * t78, qJD(2) * t24 + qJD(3) * t25 + qJD(4) * t26 + qJD(5) * t48, -t495 * t849 * t871 - t482 * t856, t742 * t849 * t855 - t199 * qJD(6), -t497 * t651 + t882 * t913, -t501 * t651 - t882 * t914 (qJD(4) * t871 + t602) * t329, qJD(2) * t1 + qJD(3) * t3 + qJD(4) * t5 + qJD(5) * t69 + qJD(6) * t44, qJD(2) * t2 + qJD(3) * t4 + qJD(4) * t6 + qJD(5) * t72 + qJD(6) * t43; 0, 0, 0, t645, t667, t701, -t703, 0, -pkin(7) * t701 - t662, pkin(7) * t703 - t661, t419, t672, -t415, t416, 0, qJD(2) * t841 + t388 * qJD(3) + t671, t670 - t848, t851, t867, t208, t207, 0, qJD(2) * t888 + t918 * t922 + t680, qJD(2) * t889 + t917 * t922 + t679 (-t755 + t756) * qJD(2) + t50 * qJD(3) + t53 * qJD(4), t763 + (-t371 * t925 + t372 * t926) * qJD(2) + t7 * qJD(3) + t10 * qJD(4) + t84 * qJD(5), t51, t45, t47, t46, t877, t795 + (t497 * t581 - t936) * qJD(2) + t17 * qJD(3) + t21 * qJD(4) - t172 + t34 * qJD(6), t794 + (t501 * t581 + t937) * qJD(2) + t19 * qJD(3) + t23 * qJD(4) + t159 + t32 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t419, t672, -t415, t416, 0, t388 * qJD(2) + qJD(3) * t841 - t646, -t647 - t848, t851, t867, t208, t207, 0, qJD(3) * t888 + qJD(4) * t918 - t678 + t911, qJD(3) * t889 + qJD(4) * t917 - t677 + t912, t50 * qJD(2) + (-t751 + t752) * qJD(3) + t58 * qJD(4), t762 + t7 * qJD(2) + (-t442 * t925 + t443 * t926) * qJD(3) + t12 * qJD(4) + t118 * qJD(5), t51, t45, t47, t46, t877, t793 + t17 * qJD(2) + (t497 * t580 - t936) * qJD(3) + t28 * qJD(4) - t172 + t38 * qJD(6), t792 + t19 * qJD(2) + (t501 * t580 + t937) * qJD(3) + t29 * qJD(4) + t159 + t36 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t851, t867, t208, -qJD(4) * t414 + t347 * t666, 0, qJD(3) * t918 + qJD(4) * t888 + t648 + t911, qJD(3) * t917 + qJD(4) * t889 + t649 + t912, t53 * qJD(2) + t58 * qJD(3) + (t329 * t787 - t496 * t871) * t796, t761 + t10 * qJD(2) + t12 * qJD(3) + (t496 * t926 - t787 * t925) * t796 + t130 * qJD(5), -t157 - (t497 * t694 + t653) * t329 + t666 * t154, t294 + t666 * t67 - (qJD(4) * t840 + t594) * t329, t182 * t666 + t695 * t871 + t885 + t923, t165 + t657 - t924, t877, t791 + t21 * qJD(2) + t28 * qJD(3) + (t497 * t583 - t936) * qJD(4) + t42 * qJD(6), t790 + t23 * qJD(2) + t29 * qJD(3) + (t501 * t583 + t937) * qJD(4) + t40 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t721, qJD(2) * t84 + qJD(3) * t118 + qJD(4) * t130 + t783, 0, 0, 0, 0, 0, t165 - t719 + t780, t184 * t666 + t779 + t885; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t839, t843 * t847 - t682, qJD(4) * t868 + t194 * t666 + t497 * t574, t187 * qJD(4) + t189 * t666 + t501 * t574, t119, qJD(2) * t34 + qJD(3) * t38 + qJD(4) * t42 + qJD(5) * t187 - qJD(6) * t61 + t784, qJD(2) * t32 + qJD(3) * t36 + qJD(4) * t40 + qJD(5) * t868 + qJD(6) * t60 + t785; 0, 0, 0, -t645, -t667, 0, 0, 0, t662, t661, -t419, -t672, 0, 0, 0, qJD(3) * t421 - t671, -t670, -t851, -t867, 0, -t404, 0, -qJD(4) * t139 - t680, qJD(3) * t144 - t679 + t886, -qJD(3) * t49 - qJD(4) * t52, qJD(3) * t8 - qJD(4) * t9 - qJD(5) * t83 - t763, t59, t56, t55, t54, -t877, -qJD(3) * t16 - qJD(4) * t20 + qJD(6) * t33 - t176 - t795, -qJD(3) * t18 - qJD(4) * t22 + qJD(6) * t31 + t160 - t794; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t803, -pkin(2) * t610, 0, 0, 0, 0, 0, -t450 - t437, -t451 + t436, 0, qJD(3) * t156 + qJD(4) * t150, t482, t474, 0, 0, 0, t367 * t693 + (-qJD(3) * t393 - qJD(4) * t380) * t501, t367 * t493 + t354 + t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t666 * t803 + t668 (-t611 - t610) * pkin(2), 0, 0, 0, 0, 0, qJD(4) * t417 - t450 - t573, qJD(4) * t418 - t451 - t568, -t750 (-t393 * t442 + t394 * t443) * qJD(3) + t63 * qJD(4) + t585, t482, t474, 0, 0, 0, t254 * qJD(4) + t245 * qJD(6) - t666 * t753 - t765, qJD(4) * t251 + qJD(6) * t246 + t379 - t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t669, 0, qJD(3) * t417 - t437 - t571, qJD(3) * t418 + t436 - t569, -t726, t63 * qJD(3) + (-t380 * t787 + t381 * t496) * t796 + t586, t148, t64, t688, t685, 0, -t764 + t254 * qJD(3) + t257 * qJD(6) + (-qJD(2) - qJD(4)) * t501 * t380, qJD(3) * t251 + qJD(6) * t258 + t354 - t550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t720, 0, 0, 0, 0, 0, -t686, t687; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, t248, t153, t152, -t883, qJD(3) * t245 + qJD(4) * t257 - t368 * t493 - t548, qJD(3) * t246 + qJD(4) * t258 + t368 * t693 - t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t419, -t672, 0, 0, 0, -qJD(2) * t421 + t646, t647, -t851, -t867, 0, -t404, 0, -qJD(4) * t138 + t678, -qJD(2) * t144 + t677 + t886, qJD(2) * t49 - qJD(4) * t57, -qJD(2) * t8 - qJD(4) * t11 - qJD(5) * t117 - t762, t59, t56, t55, t54, -t877, qJD(2) * t16 + qJD(4) * t27 + qJD(6) * t37 - t176 - t793, qJD(2) * t18 + qJD(4) * t30 + qJD(6) * t35 + t160 - t792; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2) * t803 - t668, pkin(2) * t611, 0, 0, 0, 0, 0, -qJD(4) * t422 + t573, -qJD(4) * t423 + t568, t750, -qJD(4) * t62 - t585, t482, t474, 0, 0, 0, -qJD(4) * t253 - qJD(6) * t243 + t393 * t702 + t765, qJD(4) * t252 - qJD(6) * t244 + t551; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t498 * t797, -t502 * t797, 0, t334 * qJD(4), t482, t474, 0, 0, 0, t438 * t693 - t456 * t694, t438 * t493 + t434; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t669, 0, -t498 * t607 + t572, -t502 * t607 + t570, -t725 (-t456 * t787 + t457 * t496) * t796 - t534, t148, t64, t688, t685, 0, -t456 * t501 * t922 + t344 * qJD(6) + t575, qJD(6) * t345 + t434 - t525; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t692, 0, 0, 0, 0, 0, -t686, t687; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, t248, t153, t152, -t883, qJD(4) * t344 - t439 * t493 - t527, qJD(4) * t345 + t439 * t693 - t526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t851, -t867, 0, t666 * t410, 0, qJD(2) * t139 + qJD(3) * t138 - t648, -t140 * t666 - t649, qJD(2) * t52 + qJD(3) * t57, qJD(2) * t9 + qJD(3) * t11 + qJD(5) * t129 - t761, -t155 * t666 + t881, -t329 * t593 - t66 * t666 + t294, qJD(6) * t193 - t183 * t666 - t923, t164 - t719 + t924, -t877, qJD(2) * t20 - qJD(3) * t27 + qJD(6) * t41 - t176 - t791, qJD(2) * t22 - qJD(3) * t30 + qJD(5) * t894 + qJD(6) * t39 - t790; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t669, 0, qJD(3) * t422 + t571, qJD(3) * t423 + t569, t726, qJD(3) * t62 - t586, t149, t65, -t688, -t685, 0, qJD(3) * t253 - qJD(6) * t255 + t380 * t702 + t764, -qJD(3) * t252 - qJD(6) * t256 + t550; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t669, 0, t498 * t798 - t572, t502 * t798 - t570, t725, t534, t149, t65, -t688, -t685, 0, -qJD(6) * t342 + t456 * t698 - t575, -qJD(6) * t343 + t525; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t482, t474, 0, 0, 0, t484 * t693, t484 * t493; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t691, 0, 0, 0, 0, 0, -t644, t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t135, t248, t493 + t684, t151, -t883, -t483 * t493 - t519, t483 * t693 - t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t721, qJD(2) * t83 + qJD(3) * t117 - qJD(4) * t129 - t783, 0, 0, 0, 0, 0, t164 + t657 - t780, -qJD(4) * t894 + qJD(6) * t196 - t185 * t666 - t779; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t720, 0, 0, 0, 0, 0, t686, -t687; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t692, 0, 0, 0, 0, 0, t686, -t687; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t691, 0, 0, 0, 0, 0, t644, -t689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t151, -t493 + t683; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t839, t843 * t855 + t682, -t193 * qJD(4) - t195 * t666 + t497 * t654, -t186 * qJD(4) + t188 * t666 + t501 * t654, t119, -qJD(2) * t33 - qJD(3) * t37 - qJD(4) * t41 - qJD(5) * t186 - t784, -qJD(2) * t31 - qJD(3) * t35 - qJD(4) * t39 - qJD(5) * t196 - t785; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, t247, -t178, t167, t883, qJD(3) * t243 + qJD(4) * t255 + t548, qJD(3) * t244 + qJD(4) * t256 + t549; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, t247, -t178, t167, t883, qJD(4) * t342 + t527, qJD(4) * t343 + t526; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t135, t247, -t684, -t166, t883, t519, t518; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t166, -t683; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t13;
