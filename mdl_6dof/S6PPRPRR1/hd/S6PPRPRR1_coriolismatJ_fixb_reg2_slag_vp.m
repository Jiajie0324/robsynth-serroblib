% Calculate inertial parameters regressor of coriolis matrix for
% S6PPRPRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d5,d6,theta1,theta2,theta4]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-08 18:44
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6PPRPRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRPRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRPRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRPRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-08 18:43:45
% EndTime: 2019-03-08 18:43:56
% DurationCPUTime: 8.44s
% Computational Cost: add. (10174->361), mult. (29580->596), div. (0->0), fcn. (36546->14), ass. (0->281)
t360 = sin(qJ(5));
t358 = sin(pkin(13));
t361 = sin(qJ(3));
t520 = sin(pkin(6));
t416 = cos(pkin(12)) * t520;
t519 = sin(pkin(7));
t522 = cos(pkin(7));
t523 = cos(pkin(6));
t376 = t416 * t522 + t519 * t523;
t414 = t520 * sin(pkin(12));
t530 = cos(qJ(3));
t372 = t361 * t376 + t414 * t530;
t371 = t358 * t372;
t290 = t361 * t414 - t376 * t530;
t521 = cos(pkin(13));
t427 = t521 * t290;
t370 = t371 + t427;
t493 = t370 * t360;
t437 = t493 / 0.2e1;
t415 = t521 * t519;
t428 = t361 * t519;
t319 = t358 * t428 - t415 * t530;
t422 = t519 * t530;
t320 = t358 * t422 + t361 * t415;
t362 = cos(qJ(6));
t487 = t362 * t320;
t359 = sin(qJ(6));
t363 = cos(qJ(5));
t494 = t359 * t363;
t245 = t319 * t494 + t487;
t535 = -t359 / 0.2e1;
t484 = t362 * t363;
t497 = t359 * t320;
t246 = -t319 * t484 + t497;
t551 = t246 / 0.2e1;
t546 = t245 * t535 + t362 * t551;
t553 = t546 * pkin(10);
t552 = -t358 * t290 + t372 * t521;
t550 = 0.2e1 * t359;
t354 = t359 ^ 2;
t356 = t362 ^ 2;
t481 = t354 + t356;
t294 = t320 * t363 + t360 * t522;
t498 = t359 * t319;
t411 = t362 * t294 + t498;
t397 = t411 * t362;
t488 = t362 * t319;
t499 = t359 * t294;
t238 = -t488 + t499;
t500 = t359 * t238;
t548 = t397 + t500;
t483 = t363 * t370;
t489 = t362 * t552;
t108 = t359 * t483 + t489;
t501 = t359 * t552;
t109 = -t362 * t483 + t501;
t533 = -t362 / 0.2e1;
t402 = t109 * t533 + t108 * t359 / 0.2e1;
t350 = -pkin(3) * t521 - pkin(4);
t420 = -pkin(5) * t363 - pkin(10) * t360;
t381 = t420 + t350;
t349 = pkin(3) * t358 + pkin(9);
t482 = t363 * t349;
t459 = t359 * t482;
t291 = -t362 * t381 + t459;
t457 = t362 * t482;
t292 = t359 * t381 + t457;
t547 = t292 * t533 + t291 * t535 + t482 / 0.2e1;
t375 = -t416 * t519 + t522 * t523;
t168 = t360 * t375 + t363 * t552;
t502 = t359 * t168;
t97 = -t362 * t370 + t502;
t545 = -t97 / 0.2e1;
t543 = -t238 / 0.2e1;
t542 = t238 / 0.2e1;
t541 = t294 / 0.2e1;
t492 = t360 * t349;
t333 = t359 * t492;
t528 = t363 * pkin(10);
t529 = t360 * pkin(5);
t337 = -t528 + t529;
t486 = t362 * t337;
t305 = t333 + t486;
t540 = -t305 / 0.2e1;
t491 = t360 * t362;
t458 = t349 * t491;
t496 = t359 * t337;
t306 = -t458 + t496;
t539 = t306 / 0.2e1;
t538 = -t319 / 0.2e1;
t536 = -t356 / 0.2e1;
t534 = -t360 / 0.2e1;
t532 = -t363 / 0.2e1;
t531 = t363 / 0.2e1;
t527 = qJD(3) * pkin(3);
t355 = t360 ^ 2;
t357 = t363 ^ 2;
t509 = t306 * t360;
t510 = t305 * t360;
t513 = t292 * t363;
t514 = t291 * t363;
t101 = (t509 / 0.2e1 + t513 / 0.2e1) * t362 + (-t510 / 0.2e1 + t514 / 0.2e1) * t359 + (t355 / 0.2e1 - t357 / 0.2e1) * t349;
t524 = t101 * qJD(5);
t167 = t360 * t552 - t363 * t375;
t518 = t167 * t360;
t517 = t168 * t363;
t293 = t320 * t360 - t363 * t522;
t216 = t293 * t359;
t512 = t293 * t360;
t511 = t294 * t363;
t249 = t319 * t360;
t250 = t319 * t363;
t444 = t552 * t319 / 0.2e1;
t34 = t538 * t552 + t444;
t508 = t34 * qJD(1);
t507 = t354 * t363;
t506 = t355 * t349;
t505 = t355 * t359;
t504 = t357 * t349;
t495 = t359 * t360;
t490 = t360 * t363;
t485 = t362 * t355;
t480 = t355 + t357;
t342 = t356 - t354;
t343 = t357 - t355;
t478 = qJD(3) * t363;
t477 = qJD(5) * t359;
t476 = qJD(5) * t362;
t475 = qJD(6) * t359;
t474 = qJD(6) * t362;
t473 = qJD(6) * t363;
t471 = t552 * qJD(3);
t470 = t370 * qJD(3);
t469 = t319 * qJD(3);
t468 = t320 * qJD(3);
t325 = (t354 / 0.2e1 + t536) * t360;
t467 = t325 * qJD(6);
t330 = t343 * t359;
t466 = t330 * qJD(3);
t331 = t357 * t362 - t485;
t465 = t331 * qJD(3);
t464 = t343 * qJD(3);
t463 = t360 * qJD(3);
t462 = t360 * qJD(5);
t461 = t360 * qJD(6);
t460 = t363 * qJD(5);
t456 = t362 * t463;
t455 = t359 * t476;
t454 = t359 * t473;
t453 = t362 * t473;
t452 = t359 * t474;
t451 = t360 * t460;
t347 = t363 * t463;
t450 = t362 * t462;
t447 = -t518 / 0.2e1;
t446 = t518 / 0.2e1;
t445 = -t517 / 0.2e1;
t442 = t502 / 0.2e1;
t440 = t499 / 0.2e1;
t439 = -t495 / 0.2e1;
t438 = t494 / 0.2e1;
t436 = -t493 / 0.2e1;
t435 = t492 / 0.2e1;
t434 = t491 / 0.2e1;
t433 = t488 / 0.2e1;
t432 = t484 / 0.2e1;
t431 = t483 / 0.2e1;
t429 = pkin(10) * t481;
t426 = qJD(5) * t481;
t425 = -qJD(6) + t478;
t424 = t359 * t450;
t423 = t355 * t452;
t421 = -t370 * t533 + t97 / 0.2e1;
t419 = -t320 / 0.2e1 + t512 / 0.2e1;
t418 = t433 + t542;
t382 = t293 * t436 + t319 * t447;
t17 = t319 * t445 + t370 * t320 / 0.2e1 - t483 * t541 + t382 + t444;
t26 = (t552 - t517 - t518) * t370;
t413 = qJD(1) * t26 + qJD(2) * t17;
t412 = t34 * qJD(2);
t410 = -t305 * t359 + t306 * t362;
t118 = (t320 - t511 - t512) * t319;
t409 = qJD(1) * t17 + qJD(2) * t118;
t119 = (t250 / 0.2e1 + t546) * t360;
t31 = (t431 - t402) * t360;
t408 = -qJD(1) * t31 - qJD(2) * t119;
t192 = t306 * t363 + (-t292 + 0.2e1 * t457) * t360;
t369 = -t370 / 0.2e1 + t371 / 0.2e1 + t427 / 0.2e1;
t20 = t369 * t495;
t407 = -t20 * qJD(1) + t192 * qJD(3);
t406 = t425 * t360;
t405 = t528 / 0.2e1 - t529 / 0.2e1;
t393 = -t337 / 0.2e1 + t405;
t295 = t393 * t359;
t404 = pkin(5) * t476 + qJD(3) * t295;
t296 = t393 * t362;
t403 = pkin(5) * t477 - qJD(3) * t296;
t400 = t362 * t406;
t110 = t369 * t360;
t399 = -qJD(1) * t110 - t350 * t463;
t111 = t369 * t363;
t398 = -qJD(1) * t111 - t350 * t478;
t309 = -qJD(3) * t325 + t455;
t394 = t489 / 0.2e1 + t359 * t431;
t298 = qJD(3) * t359 * t485 + qJD(5) * t325;
t329 = t342 * t355;
t392 = qJD(3) * t329 + 0.2e1 * t424;
t391 = -qJD(5) * t342 + t456 * t550;
t368 = t362 * t168 + t359 * t370;
t11 = -t97 * t108 + t109 * t368 - t167 * t493;
t6 = t109 * t411 / 0.2e1 + t368 * t551 + t108 * t543 + t245 * t545 + t382;
t390 = qJD(1) * t11 + qJD(2) * t6 + qJD(4) * t31;
t367 = t368 * t362;
t12 = t367 * t531 + t97 * t438 + t447 * t481 + t445 + t446;
t13 = (-t97 * t359 + t168 - t367) * t167;
t7 = t216 * t545 + (-t367 / 0.2e1 + t168 / 0.2e1) * t293 + (t541 - t548 / 0.2e1) * t167;
t389 = t13 * qJD(1) + t7 * qJD(2) + t12 * qJD(4);
t45 = (t397 / 0.2e1 + t500 / 0.2e1 - t294 / 0.2e1) * t363 + (t536 - t354 / 0.2e1 + 0.1e1 / 0.2e1) * t512;
t47 = (t294 - t548) * t293;
t388 = t7 * qJD(1) + t47 * qJD(2) + t45 * qJD(4);
t46 = -t238 * t245 + t246 * t411 - t249 * t293;
t387 = qJD(1) * t6 + qJD(2) * t46 + qJD(4) * t119;
t120 = (t510 - t514) * t362 + (t509 + t513) * t359;
t365 = t97 * t432 - t368 * t494 / 0.2e1;
t16 = t365 + t402;
t377 = (t362 * t542 + t411 * t535) * t363;
t53 = t377 - t546;
t386 = qJD(1) * t16 + qJD(2) * t53 - qJD(3) * t120;
t18 = (t442 - t421) * t360;
t191 = t291 * t360 + (t305 - 0.2e1 * t333) * t363;
t77 = (t440 - t418) * t360;
t385 = t18 * qJD(1) + t77 * qJD(2) - t191 * qJD(3);
t114 = (-t511 / 0.2e1 - t419) * t362;
t252 = -t349 * t485 - t513;
t366 = t167 * t434 + t368 * t531;
t27 = -t366 + t394;
t384 = qJD(1) * t27 + qJD(2) * t114 + qJD(3) * t252;
t115 = t359 * t419 + t363 * t418;
t251 = -t349 * t505 - t514;
t28 = t421 * t363 + (-t552 / 0.2e1 + t446) * t359;
t383 = qJD(1) * t28 + qJD(2) * t115 - qJD(3) * t251;
t133 = t349 ^ 2 * t490 - t291 * t305 + t292 * t306;
t374 = t238 * t540 + t293 * t547 + t411 * t539;
t25 = (pkin(5) * t538 + t349 * t541) * t360 - t553 + t374;
t364 = t167 * t547 + t168 * t435 + t368 * t539 + t97 * t540;
t378 = pkin(5) * t436 + pkin(10) * t402;
t4 = t364 + t378;
t380 = t4 * qJD(1) + t25 * qJD(2) + t133 * qJD(3) + t101 * qJD(4);
t316 = (-0.1e1 + t481) * t490;
t379 = t12 * qJD(1) + t45 * qJD(2) + t101 * qJD(3) + t316 * qJD(4);
t352 = t356 * t363;
t351 = t462 / 0.2e1;
t346 = t359 * t462;
t328 = t347 - t461 / 0.2e1;
t297 = t319 * t506;
t254 = t333 + t486 / 0.2e1 + t405 * t362;
t253 = t458 - t496 / 0.2e1 - t405 * t359;
t217 = t293 * t362;
t182 = t370 * t506;
t117 = t411 * t531 + t293 * t434 + t319 * t438 + t487 / 0.2e1;
t116 = t238 * t532 + t293 * t439 + t319 * t432 - t497 / 0.2e1;
t113 = t370 * t531 + t431;
t112 = 0.2e1 * t437;
t80 = t294 * t434 + t319 * t439 + t411 * t534;
t78 = (t433 + t543 + t440) * t360;
t74 = t167 * t362;
t73 = t167 * t359;
t52 = t377 + t546;
t33 = t34 * qJD(3);
t30 = t366 + t394;
t29 = t97 * t532 + t167 * t439 + t362 * t431 - t501 / 0.2e1;
t24 = t294 * t435 + pkin(5) * t249 / 0.2e1 + t374 + t553;
t22 = qJD(3) * t119 + qJD(5) * t45;
t21 = t168 * t434 + t359 * t436 + t368 * t534;
t19 = t362 * t437 + (t545 + t442) * t360;
t15 = t365 - t402;
t5 = qJD(3) * t17;
t3 = t364 - t378;
t2 = qJD(3) * t31 + qJD(5) * t12;
t1 = qJD(3) * t6 + qJD(5) * t7;
t8 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t26, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t11 + qJD(5) * t13; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t372 * qJD(3), t290 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, -t471, t470, 0 (-t358 * t370 - t521 * t552) * t527 + t412, 0, 0, 0, 0, 0, 0, qJD(5) * t112 - t363 * t471, qJD(5) * t113 + t463 * t552, -t470 * t480 (t350 * t552 - t370 * t504 - t182) * qJD(3) + t413, 0, 0, 0, 0, 0, 0 (-t108 * t363 - t370 * t505) * qJD(3) + t19 * qJD(5) + t30 * qJD(6) (t109 * t363 - t370 * t485) * qJD(3) + t21 * qJD(5) + t29 * qJD(6), t15 * qJD(5) + (-t108 * t362 - t109 * t359) * t463 (-t108 * t291 + t109 * t292 - t182) * qJD(3) + t3 * qJD(5) + t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t112 - qJD(5) * t168, qJD(3) * t113 + qJD(5) * t167, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t19 + qJD(6) * t73 - t168 * t476, qJD(3) * t21 + qJD(6) * t74 + t168 * t477, t15 * qJD(3) - t167 * t426, t3 * qJD(3) + (-t168 * pkin(5) - t167 * t429) * qJD(5) + t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t30 * qJD(3) + t73 * qJD(5) - qJD(6) * t368, qJD(3) * t29 + qJD(5) * t74 + qJD(6) * t97, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t33, 0, 0, 0, 0, 0, 0, 0, 0, 0, t5, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t118, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t46 + qJD(5) * t47; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t428, -qJD(3) * t422, 0, 0, 0, 0, 0, 0, 0, 0, -t468, t469, 0, t508 + (-t319 * t358 - t320 * t521) * t527, 0, 0, 0, 0, 0, 0, qJD(5) * t249 - t363 * t468, qJD(5) * t250 + t320 * t463, -t469 * t480 (-t319 * t504 + t320 * t350 - t297) * qJD(3) + t409, 0, 0, 0, 0, 0, 0 (-t245 * t363 - t355 * t498) * qJD(3) + t78 * qJD(5) + t117 * qJD(6) (t246 * t363 - t319 * t485) * qJD(3) + t80 * qJD(5) + t116 * qJD(6), t52 * qJD(5) + (-t245 * t362 - t246 * t359) * t463 (-t245 * t291 + t246 * t292 - t297) * qJD(3) + t24 * qJD(5) + t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t249 - qJD(5) * t294, qJD(3) * t250 + qJD(5) * t293, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t78 + qJD(6) * t216 - t294 * t476, qJD(3) * t80 + qJD(6) * t217 + t294 * t477, t52 * qJD(3) - t293 * t426, t24 * qJD(3) + (-t294 * pkin(5) - t293 * t429) * qJD(5) + t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t117 + qJD(5) * t216 - qJD(6) * t411, qJD(3) * t116 + qJD(5) * t217 + qJD(6) * t238, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t412, 0, 0, 0, 0, 0, 0, t110 * qJD(5), t111 * qJD(5), 0, -t413, 0, 0, 0, 0, 0, 0, qJD(5) * t18 - qJD(6) * t27, -qJD(5) * t20 - qJD(6) * t28, qJD(5) * t16, qJD(5) * t4 - t390; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t508, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409, 0, 0, 0, 0, 0, 0, qJD(5) * t77 - qJD(6) * t114, -qJD(6) * t115, qJD(5) * t53, qJD(5) * t25 - t387; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, t343 * qJD(5), 0, -t451, 0, 0, t350 * t462, t350 * t460, 0, 0, t356 * t451 - t423, -qJD(6) * t329 - 0.2e1 * t363 * t424, -qJD(5) * t331 + t360 * t454, t354 * t451 + t423, qJD(5) * t330 + t360 * t453, -t451, -qJD(5) * t191 - qJD(6) * t252, qJD(5) * t192 + qJD(6) * t251, -qJD(5) * t120, qJD(5) * t133; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t408 + t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t347, t464, t460, -t347, -t462, 0, -t349 * t460 - t399, t349 * t462 - t398, 0, 0, -t467 + (t356 * t463 + t455) * t363 (t352 - t507) * qJD(5) + (-qJD(6) - t478) * t491 * t550, t346 - t465, t467 + (t354 * t463 - t455) * t363, t450 + t466, -t328 (t359 * t420 - t457) * qJD(5) + t254 * qJD(6) + t385 (t362 * t420 + t459) * qJD(5) + t253 * qJD(6) + t407, qJD(5) * t410 + t386 (-pkin(5) * t482 + pkin(10) * t410) * qJD(5) + t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t298, -t392, t359 * t406, t298, t400, t351, qJD(5) * t254 - qJD(6) * t292 - t384, qJD(5) * t253 + qJD(6) * t291 - t383, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t408 + t524; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t316 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t462, -t460, 0, 0, 0, 0, 0, 0, 0, 0, -t450 - t454, t346 - t453 (t352 + t507) * qJD(5) (t481 * t528 - t529) * qJD(5) + t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t359 * t460 - t362 * t461, t359 * t461 - t362 * t460, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t110 * qJD(3), -t111 * qJD(3), 0, 0, 0, 0, 0, 0, 0, 0, -t18 * qJD(3), t20 * qJD(3), -qJD(3) * t16, -qJD(3) * t4 - t389; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(3) * t77, 0, -qJD(3) * t53, -qJD(3) * t25 - t388; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t347, -t464, 0, t347, 0, 0, t399, t398, 0, 0, -t347 * t356 - t467, t400 * t550, -t453 + t465, -t347 * t354 + t467, t454 - t466, t328, qJD(6) * t296 - t385, -qJD(6) * t295 - t407, -t386, -t380; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t379; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t452, t342 * qJD(6), 0, -t452, 0, 0, -pkin(5) * t475, -pkin(5) * t474, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309, -t391, -t425 * t362, -t309, t425 * t359, -t463 / 0.2e1, -pkin(10) * t474 - t403, pkin(10) * t475 - t404, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t27 * qJD(3), t28 * qJD(3), 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3) * t114, qJD(3) * t115, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t392 (-t359 * t463 + t476) * t363, -t298 (-t456 - t477) * t363, t351, -qJD(5) * t296 + t384, qJD(5) * t295 + t383, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t309, t391, t362 * t478, t309, -t359 * t478, t463 / 0.2e1, t403, t404, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t8;
