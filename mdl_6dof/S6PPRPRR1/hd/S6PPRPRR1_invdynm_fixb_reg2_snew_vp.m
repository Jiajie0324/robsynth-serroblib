% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6PPRPRR1
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [13x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,alpha3,d3,d5,d6,theta1,theta2,theta4]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-04 19:55
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6PPRPRR1_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(13,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6PPRPRR1_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6PPRPRR1_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6PPRPRR1_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6PPRPRR1_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [13 1]), ...
  'S6PPRPRR1_invdynm_fixb_reg2_snew_vp: pkin has to be [13x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-04 19:54:55
% EndTime: 2019-05-04 19:55:46
% DurationCPUTime: 53.30s
% Computational Cost: add. (440938->925), mult. (776899->1474), div. (0->0), fcn. (662181->16), ass. (0->655)
t1469 = sin(pkin(6));
t1474 = cos(pkin(6));
t1465 = sin(pkin(13));
t1470 = cos(pkin(13));
t1483 = qJD(3) ^ 2;
t1428 = qJDD(3) * t1465 + t1470 * t1483;
t1429 = qJDD(3) * t1470 - t1465 * t1483;
t1479 = sin(qJ(3));
t1482 = cos(qJ(3));
t1374 = t1428 * t1479 - t1429 * t1482;
t1466 = sin(pkin(12));
t1471 = cos(pkin(12));
t1473 = cos(pkin(7));
t1519 = t1428 * t1482 + t1429 * t1479;
t1631 = t1519 * t1473;
t1525 = t1374 * t1466 - t1471 * t1631;
t1468 = sin(pkin(7));
t1632 = t1519 * t1468;
t1256 = t1469 * t1632 + t1474 * t1525;
t1302 = t1374 * t1471 + t1466 * t1631;
t1467 = sin(pkin(11));
t1472 = cos(pkin(11));
t1652 = t1256 * t1467 - t1302 * t1472;
t1651 = t1256 * t1472 + t1302 * t1467;
t1253 = t1469 * t1525 - t1474 * t1632;
t1435 = g(1) * t1467 - t1472 * g(2);
t1436 = g(1) * t1472 + g(2) * t1467;
t1462 = g(3) - qJDD(1);
t1344 = -t1471 * t1436 + (t1435 * t1474 - t1462 * t1469) * t1466;
t1600 = t1471 * t1474;
t1602 = t1469 * t1471;
t1343 = -t1435 * t1600 - t1436 * t1466 + t1462 * t1602;
t1394 = t1435 * t1469 + t1474 * t1462 - qJDD(2);
t1641 = t1343 * t1473 + t1394 * t1468;
t1246 = t1482 * t1344 - t1479 * t1641;
t1239 = -t1483 * pkin(3) + t1246;
t1245 = t1344 * t1479 + t1482 * t1641;
t1511 = qJDD(3) * pkin(3) - t1245;
t1178 = t1465 * t1239 - t1470 * t1511;
t1179 = t1470 * t1239 + t1465 * t1511;
t1585 = t1178 * t1465 + t1470 * t1179;
t1111 = t1178 * t1470 - t1179 * t1465;
t1621 = t1111 * t1479;
t1648 = t1482 * t1585 + t1621;
t1620 = t1111 * t1482;
t1047 = -t1479 * t1585 + t1620;
t1517 = qJDD(3) * t1479 + t1482 * t1483;
t1406 = t1517 * t1468;
t1408 = t1517 * t1473;
t1431 = qJDD(3) * t1482 - t1479 * t1483;
t1521 = t1408 * t1471 + t1431 * t1466;
t1322 = -t1469 * t1406 + t1474 * t1521;
t1368 = t1408 * t1466 - t1431 * t1471;
t1647 = t1322 * t1467 + t1368 * t1472;
t1646 = t1322 * t1472 - t1368 * t1467;
t1305 = -t1343 * t1468 + t1473 * t1394;
t1304 = -qJDD(4) + t1305;
t1282 = qJ(4) * t1428 - t1304 * t1470;
t1569 = -qJ(4) * t1429 - t1304 * t1465;
t1640 = t1282 * t1479 + t1482 * t1569;
t1639 = t1482 * t1282 - t1479 * t1569;
t1477 = sin(qJ(6));
t1478 = sin(qJ(5));
t1623 = qJD(3) * t1478;
t1451 = qJD(5) * t1623;
t1481 = cos(qJ(5));
t1590 = t1481 * qJDD(3);
t1425 = -t1451 + t1590;
t1413 = -qJDD(6) + t1425;
t1480 = cos(qJ(6));
t1418 = -t1480 * qJD(5) + t1477 * t1623;
t1420 = qJD(5) * t1477 + t1480 * t1623;
t1613 = t1420 * t1418;
t1494 = -t1413 - t1613;
t1638 = t1477 * t1494;
t1635 = t1480 * t1494;
t1175 = -t1483 * pkin(4) + qJDD(3) * pkin(9) + t1179;
t1294 = t1481 * t1304;
t1142 = t1175 * t1478 + t1294;
t1143 = t1481 * t1175 - t1478 * t1304;
t1083 = t1478 * t1142 + t1481 * t1143;
t1319 = t1474 * t1406 + t1469 * t1521;
t1630 = qJD(5) ^ 2;
t1411 = t1418 ^ 2;
t1412 = t1420 ^ 2;
t1622 = qJD(3) * t1481;
t1447 = -qJD(6) + t1622;
t1445 = t1447 ^ 2;
t1629 = pkin(3) * t1111;
t1628 = pkin(5) * t1478;
t1627 = pkin(5) * t1481;
t1185 = t1245 * t1479 + t1246 * t1482;
t1626 = pkin(8) * t1185;
t1284 = t1343 * t1466 + t1344 * t1471;
t1625 = qJ(2) * t1284;
t1624 = qJD(3) * qJD(5);
t1576 = -pkin(10) * t1478 - t1627;
t1422 = t1576 * qJD(3);
t1136 = t1294 - qJDD(5) * pkin(5) - t1630 * pkin(10) + (qJD(3) * t1422 + t1175) * t1478;
t1619 = t1136 * t1477;
t1618 = t1136 * t1480;
t1346 = t1413 - t1613;
t1616 = t1346 * t1477;
t1615 = t1346 * t1480;
t1446 = t1478 * t1483 * t1481;
t1438 = qJDD(5) + t1446;
t1612 = t1438 * t1478;
t1439 = qJDD(5) - t1446;
t1611 = t1439 * t1478;
t1610 = t1439 * t1481;
t1609 = t1447 * t1477;
t1608 = t1447 * t1480;
t1460 = t1478 ^ 2;
t1607 = t1460 * t1483;
t1606 = t1466 * t1394;
t1605 = t1467 * t1462;
t1604 = t1469 * t1394;
t1601 = t1471 * t1394;
t1599 = t1472 * t1462;
t1598 = t1474 * t1394;
t1174 = -qJDD(3) * pkin(4) - t1483 * pkin(9) + t1178;
t1170 = t1478 * t1174;
t1596 = t1479 * t1305;
t1171 = t1481 * t1174;
t1595 = t1482 * t1305;
t1594 = -pkin(4) * t1174 + pkin(9) * t1083;
t1461 = t1481 ^ 2;
t1593 = t1460 + t1461;
t1592 = t1468 * qJDD(3);
t1591 = t1478 * qJDD(3);
t1589 = t1478 * t1613;
t1588 = t1481 * t1613;
t1452 = qJD(5) * t1622;
t1442 = -t1607 - t1630;
t1393 = -t1442 * t1478 - t1610;
t1423 = 0.2e1 * t1452 + t1591;
t1587 = -pkin(4) * t1423 + pkin(9) * t1393 + t1170;
t1458 = t1461 * t1483;
t1444 = -t1458 - t1630;
t1391 = t1444 * t1481 - t1612;
t1426 = -0.2e1 * t1451 + t1590;
t1586 = pkin(4) * t1426 + pkin(9) * t1391 - t1171;
t1440 = t1466 * t1592;
t1137 = -pkin(5) * t1630 + qJDD(5) * pkin(10) + t1422 * t1622 + t1143;
t1574 = -t1425 + t1451;
t1424 = t1452 + t1591;
t1575 = t1424 + t1452;
t1159 = pkin(5) * t1574 - pkin(10) * t1575 + t1174;
t1085 = t1137 * t1477 - t1480 * t1159;
t1086 = t1137 * t1480 + t1159 * t1477;
t1032 = t1085 * t1477 + t1480 * t1086;
t1584 = -t1435 * t1467 - t1472 * t1436;
t1583 = t1480 * qJDD(5) - t1477 * t1424;
t1582 = t1465 * t1446;
t1581 = t1470 * t1446;
t1370 = -t1445 - t1411;
t1286 = t1370 * t1477 + t1635;
t1064 = -pkin(5) * t1286 + t1085;
t1119 = -pkin(10) * t1286 + t1619;
t1287 = t1370 * t1480 - t1638;
t1359 = -qJD(6) * t1420 + t1583;
t1401 = t1420 * t1447;
t1328 = t1359 + t1401;
t1225 = t1287 * t1481 - t1328 * t1478;
t1580 = -pkin(4) * t1286 + pkin(9) * t1225 + t1481 * t1064 + t1478 * t1119;
t1379 = -t1412 - t1445;
t1295 = t1379 * t1480 + t1616;
t1066 = -pkin(5) * t1295 + t1086;
t1125 = -pkin(10) * t1295 + t1618;
t1296 = -t1379 * t1477 + t1615;
t1516 = -t1477 * qJDD(5) - t1480 * t1424;
t1332 = (qJD(6) - t1447) * t1418 + t1516;
t1229 = t1296 * t1481 - t1332 * t1478;
t1579 = -pkin(4) * t1295 + pkin(9) * t1229 + t1481 * t1066 + t1478 * t1125;
t1430 = t1593 * qJDD(3);
t1433 = t1458 + t1607;
t1578 = pkin(4) * t1433 + pkin(9) * t1430 + t1083;
t1577 = -pkin(5) * t1136 + pkin(10) * t1032;
t1573 = -pkin(8) * t1431 - t1596;
t1572 = -pkin(8) * t1517 + t1595;
t1010 = t1032 * t1478 - t1136 * t1481;
t1011 = t1032 * t1481 + t1136 * t1478;
t1031 = -t1085 * t1480 + t1086 * t1477;
t979 = t1011 * t1465 - t1031 * t1470;
t980 = t1011 * t1470 + t1031 * t1465;
t1570 = t1479 * t980 + t1482 * t979;
t945 = -t1468 * t1010 + t1473 * t1570;
t958 = -t1479 * t979 + t1482 * t980;
t1571 = t1466 * t958 + t1471 * t945;
t1051 = t1083 * t1465 - t1174 * t1470;
t1052 = t1083 * t1470 + t1174 * t1465;
t1002 = -t1051 * t1479 + t1052 * t1482;
t1082 = t1142 * t1481 - t1143 * t1478;
t1565 = t1051 * t1482 + t1052 * t1479;
t983 = t1082 * t1468 + t1473 * t1565;
t1568 = t1002 * t1466 + t1471 * t983;
t1040 = -t1047 * t1473 + t1468 * t1304;
t1567 = t1040 * t1471 + t1466 * t1648;
t1046 = t1648 * t1473;
t1566 = t1046 * t1471 + t1047 * t1466;
t1329 = (-qJD(6) - t1447) * t1420 + t1583;
t1360 = -qJD(6) * t1418 - t1516;
t1402 = t1418 * t1447;
t1331 = t1360 - t1402;
t1251 = t1329 * t1480 + t1331 * t1477;
t1345 = t1411 + t1412;
t1213 = t1251 * t1478 + t1345 * t1481;
t1214 = t1251 * t1481 - t1345 * t1478;
t1248 = t1329 * t1477 - t1331 * t1480;
t1160 = t1214 * t1465 - t1248 * t1470;
t1161 = t1214 * t1470 + t1248 * t1465;
t1552 = t1160 * t1482 + t1161 * t1479;
t1062 = -t1468 * t1213 + t1473 * t1552;
t1094 = -t1160 * t1479 + t1161 * t1482;
t1564 = t1062 * t1471 + t1094 * t1466;
t1330 = t1360 + t1402;
t1250 = t1328 * t1480 - t1330 * t1477;
t1380 = t1412 - t1411;
t1219 = t1250 * t1478 - t1380 * t1481;
t1220 = t1250 * t1481 + t1380 * t1478;
t1247 = t1328 * t1477 + t1330 * t1480;
t1164 = t1220 * t1465 - t1247 * t1470;
t1165 = t1220 * t1470 + t1247 * t1465;
t1551 = t1164 * t1482 + t1165 * t1479;
t1071 = -t1468 * t1219 + t1473 * t1551;
t1100 = -t1164 * t1479 + t1165 * t1482;
t1563 = t1071 * t1471 + t1100 * t1466;
t1224 = t1287 * t1478 + t1328 * t1481;
t1190 = t1225 * t1465 - t1286 * t1470;
t1191 = t1225 * t1470 + t1286 * t1465;
t1549 = t1190 * t1482 + t1191 * t1479;
t1091 = -t1468 * t1224 + t1473 * t1549;
t1116 = -t1190 * t1479 + t1191 * t1482;
t1562 = t1091 * t1471 + t1116 * t1466;
t1228 = t1296 * t1478 + t1332 * t1481;
t1196 = t1229 * t1465 - t1295 * t1470;
t1197 = t1229 * t1470 + t1295 * t1465;
t1548 = t1196 * t1482 + t1197 * t1479;
t1093 = -t1468 * t1228 + t1473 * t1548;
t1118 = -t1196 * t1479 + t1197 * t1482;
t1561 = t1093 * t1471 + t1118 * t1466;
t1400 = -t1412 + t1445;
t1310 = -t1400 * t1477 + t1635;
t1230 = t1310 * t1478 - t1331 * t1481;
t1232 = t1310 * t1481 + t1331 * t1478;
t1308 = t1400 * t1480 + t1638;
t1200 = t1232 * t1465 - t1308 * t1470;
t1202 = t1232 * t1470 + t1308 * t1465;
t1547 = t1200 * t1482 + t1202 * t1479;
t1103 = -t1468 * t1230 + t1473 * t1547;
t1126 = -t1200 * t1479 + t1202 * t1482;
t1560 = t1103 * t1471 + t1126 * t1466;
t1399 = t1411 - t1445;
t1311 = t1399 * t1480 + t1616;
t1327 = -t1359 + t1401;
t1231 = t1311 * t1478 + t1327 * t1481;
t1233 = t1311 * t1481 - t1327 * t1478;
t1309 = t1399 * t1477 - t1615;
t1201 = t1233 * t1465 - t1309 * t1470;
t1203 = t1233 * t1470 + t1309 * t1465;
t1546 = t1201 * t1482 + t1203 * t1479;
t1104 = -t1468 * t1231 + t1473 * t1546;
t1127 = -t1201 * t1479 + t1203 * t1482;
t1559 = t1104 * t1471 + t1127 * t1466;
t1316 = -t1359 * t1477 - t1418 * t1608;
t1273 = t1316 * t1478 + t1588;
t1275 = t1316 * t1481 - t1589;
t1315 = -t1359 * t1480 + t1418 * t1609;
t1215 = t1275 * t1465 + t1315 * t1470;
t1217 = t1275 * t1470 - t1315 * t1465;
t1545 = t1215 * t1482 + t1217 * t1479;
t1123 = -t1468 * t1273 + t1473 * t1545;
t1144 = -t1215 * t1479 + t1217 * t1482;
t1556 = t1123 * t1471 + t1144 * t1466;
t1318 = t1360 * t1480 + t1420 * t1609;
t1274 = t1318 * t1478 - t1588;
t1276 = t1318 * t1481 + t1589;
t1317 = t1360 * t1477 - t1420 * t1608;
t1216 = t1276 * t1465 - t1317 * t1470;
t1218 = t1276 * t1470 + t1317 * t1465;
t1544 = t1216 * t1482 + t1218 * t1479;
t1124 = -t1468 * t1274 + t1473 * t1544;
t1145 = -t1216 * t1479 + t1218 * t1482;
t1555 = t1124 * t1471 + t1145 * t1466;
t1184 = t1245 * t1482 - t1246 * t1479;
t1151 = -t1184 * t1473 + t1468 * t1305;
t1554 = t1151 * t1471 + t1185 * t1466;
t1338 = (t1418 * t1480 - t1420 * t1477) * t1447;
t1312 = t1338 * t1478 + t1413 * t1481;
t1313 = t1338 * t1481 - t1413 * t1478;
t1337 = (t1418 * t1477 + t1420 * t1480) * t1447;
t1240 = t1313 * t1465 - t1337 * t1470;
t1241 = t1313 * t1470 + t1337 * t1465;
t1540 = t1240 * t1482 + t1241 * t1479;
t1153 = -t1468 * t1312 + t1473 * t1540;
t1183 = -t1240 * t1479 + t1241 * t1482;
t1553 = t1153 * t1471 + t1183 * t1466;
t1181 = t1185 * t1473;
t1550 = t1181 * t1471 + t1184 * t1466;
t1371 = t1423 * t1481 + t1426 * t1478;
t1372 = -t1423 * t1478 + t1426 * t1481;
t1434 = -t1458 + t1607;
t1334 = t1372 * t1465 - t1434 * t1470;
t1335 = t1372 * t1470 + t1434 * t1465;
t1533 = t1334 * t1482 + t1335 * t1479;
t1223 = -t1468 * t1371 + t1473 * t1533;
t1268 = -t1334 * t1479 + t1335 * t1482;
t1543 = t1223 * t1471 + t1268 * t1466;
t1417 = t1481 * t1438;
t1387 = t1444 * t1478 + t1417;
t1339 = t1391 * t1465 + t1426 * t1470;
t1341 = t1391 * t1470 - t1426 * t1465;
t1532 = t1339 * t1482 + t1341 * t1479;
t1236 = -t1468 * t1387 + t1473 * t1532;
t1271 = -t1339 * t1479 + t1341 * t1482;
t1542 = t1236 * t1471 + t1271 * t1466;
t1389 = t1442 * t1481 - t1611;
t1340 = t1393 * t1465 - t1423 * t1470;
t1342 = t1393 * t1470 + t1423 * t1465;
t1531 = t1340 * t1482 + t1342 * t1479;
t1237 = -t1468 * t1389 + t1473 * t1531;
t1272 = -t1340 * t1479 + t1342 * t1482;
t1541 = t1237 * t1471 + t1272 * t1466;
t1443 = t1458 - t1630;
t1386 = t1443 * t1478 + t1610;
t1390 = t1443 * t1481 - t1611;
t1349 = t1390 * t1465 - t1470 * t1590;
t1351 = t1390 * t1470 + t1465 * t1590;
t1530 = t1349 * t1482 + t1351 * t1479;
t1262 = -t1468 * t1386 + t1473 * t1530;
t1288 = -t1349 * t1479 + t1351 * t1482;
t1539 = t1262 * t1471 + t1288 * t1466;
t1441 = -t1607 + t1630;
t1388 = t1441 * t1481 + t1612;
t1392 = -t1441 * t1478 + t1417;
t1350 = t1392 * t1465 - t1470 * t1591;
t1352 = t1392 * t1470 + t1465 * t1591;
t1529 = t1350 * t1482 + t1352 * t1479;
t1263 = -t1468 * t1388 + t1473 * t1529;
t1289 = -t1350 * t1479 + t1352 * t1482;
t1538 = t1263 * t1471 + t1289 * t1466;
t1384 = t1574 * t1481;
t1397 = -t1425 * t1478 - t1461 * t1624;
t1353 = t1397 * t1465 - t1581;
t1355 = t1397 * t1470 + t1582;
t1528 = t1353 * t1482 + t1355 * t1479;
t1266 = t1468 * t1384 + t1473 * t1528;
t1290 = -t1353 * t1479 + t1355 * t1482;
t1537 = t1266 * t1471 + t1290 * t1466;
t1385 = t1575 * t1478;
t1398 = t1424 * t1481 - t1460 * t1624;
t1354 = t1398 * t1465 + t1581;
t1356 = t1398 * t1470 - t1582;
t1527 = t1354 * t1482 + t1356 * t1479;
t1267 = -t1468 * t1385 + t1473 * t1527;
t1291 = -t1354 * t1479 + t1356 * t1482;
t1536 = t1267 * t1471 + t1291 * t1466;
t1377 = t1430 * t1465 + t1433 * t1470;
t1378 = t1430 * t1470 - t1433 * t1465;
t1523 = t1377 * t1482 + t1378 * t1479;
t1307 = t1523 * t1473;
t1314 = -t1377 * t1479 + t1378 * t1482;
t1535 = t1307 * t1471 + t1314 * t1466;
t1416 = t1593 * t1624;
t1395 = -qJDD(5) * t1470 + t1416 * t1465;
t1396 = qJDD(5) * t1465 + t1416 * t1470;
t1522 = t1395 * t1482 + t1396 * t1479;
t1326 = t1522 * t1473;
t1333 = -t1395 * t1479 + t1396 * t1482;
t1534 = t1326 * t1471 + t1333 * t1466;
t1283 = t1343 * t1471 - t1344 * t1466;
t1366 = t1374 * t1473;
t1524 = -t1366 * t1471 - t1466 * t1519;
t1409 = t1431 * t1473;
t1520 = t1409 * t1471 - t1466 * t1517;
t1518 = t1435 * t1472 - t1436 * t1467;
t1027 = -pkin(10) * t1248 - t1031;
t1515 = pkin(9) * t1214 + t1478 * t1027 + (-pkin(4) - t1627) * t1248;
t1514 = pkin(5) * t1328 + pkin(10) * t1287 - t1618;
t1513 = pkin(5) * t1332 + pkin(10) * t1296 + t1619;
t964 = -pkin(9) * t1010 + (-pkin(10) * t1481 + t1628) * t1031;
t970 = -pkin(4) * t1010 - t1577;
t935 = -pkin(3) * t1010 + qJ(4) * t980 + t1465 * t964 + t1470 * t970;
t940 = -qJ(4) * t979 - t1465 * t970 + t1470 * t964;
t1512 = pkin(8) * t958 + t1479 * t940 + t1482 * t935;
t981 = qJ(4) * t1052 - (-pkin(4) * t1470 - pkin(9) * t1465 - pkin(3)) * t1082;
t988 = -qJ(4) * t1051 - (pkin(4) * t1465 - pkin(9) * t1470) * t1082;
t1510 = pkin(8) * t1002 + t1479 * t988 + t1482 * t981;
t1004 = -pkin(9) * t1213 + t1027 * t1481 + t1248 * t1628;
t1486 = pkin(5) * t1345 + pkin(10) * t1251 + t1032;
t1012 = -pkin(4) * t1213 - t1486;
t966 = -pkin(3) * t1213 + qJ(4) * t1161 + t1004 * t1465 + t1012 * t1470;
t969 = -qJ(4) * t1160 + t1004 * t1470 - t1012 * t1465;
t1509 = pkin(8) * t1094 + t1479 * t969 + t1482 * t966;
t1029 = -pkin(9) * t1224 - t1064 * t1478 + t1119 * t1481;
t1088 = -pkin(4) * t1224 - t1514;
t984 = -pkin(3) * t1224 + qJ(4) * t1191 + t1029 * t1465 + t1088 * t1470;
t989 = -qJ(4) * t1190 + t1029 * t1470 - t1088 * t1465;
t1508 = pkin(8) * t1116 + t1479 * t989 + t1482 * t984;
t1033 = -pkin(9) * t1228 - t1066 * t1478 + t1125 * t1481;
t1089 = -pkin(4) * t1228 - t1513;
t985 = -pkin(3) * t1228 + qJ(4) * t1197 + t1033 * t1465 + t1089 * t1470;
t990 = -qJ(4) * t1196 + t1033 * t1470 - t1089 * t1465;
t1507 = pkin(8) * t1118 + t1479 * t990 + t1482 * t985;
t1484 = pkin(9) * t1011 + (-pkin(4) + t1576) * t1031;
t943 = pkin(3) * t979 + t1484;
t944 = t1473 * t1010 + t1468 * t1570;
t915 = -pkin(2) * t944 - t1468 * t943 + t1473 * t1512;
t918 = -t1479 * t935 + t1482 * t940 + (-t1468 * t944 - t1473 * t945) * pkin(8);
t933 = -t1466 * t945 + t1471 * t958;
t1506 = qJ(2) * t933 + t1466 * t918 + t1471 * t915;
t1003 = pkin(3) * t1051 + t1594;
t982 = -t1082 * t1473 + t1468 * t1565;
t937 = -pkin(2) * t982 - t1468 * t1003 + t1473 * t1510;
t941 = -t1479 * t981 + t1482 * t988 + (-t1468 * t982 - t1473 * t983) * pkin(8);
t961 = t1002 * t1471 - t1466 * t983;
t1505 = qJ(2) * t961 + t1466 * t941 + t1471 * t937;
t1039 = -t1047 * t1468 - t1473 * t1304;
t1095 = pkin(3) * t1304 + qJ(4) * t1585;
t1485 = pkin(8) * t1648 + qJ(4) * t1621 + t1095 * t1482;
t968 = -pkin(2) * t1039 + t1468 * t1629 + t1473 * t1485;
t971 = qJ(4) * t1620 - t1479 * t1095 + (-t1039 * t1468 - t1040 * t1473) * pkin(8);
t992 = -t1040 * t1466 + t1471 * t1648;
t1504 = qJ(2) * t992 + t1466 * t971 + t1471 * t968;
t1134 = -pkin(4) * t1387 + t1142;
t1162 = -pkin(9) * t1387 + t1170;
t1068 = -pkin(3) * t1387 + qJ(4) * t1341 + t1134 * t1470 + t1162 * t1465;
t1074 = -qJ(4) * t1339 - t1134 * t1465 + t1162 * t1470;
t1503 = pkin(8) * t1271 + t1068 * t1482 + t1074 * t1479;
t1135 = -pkin(4) * t1389 + t1143;
t1163 = -pkin(9) * t1389 + t1171;
t1069 = -pkin(3) * t1389 + qJ(4) * t1342 + t1135 * t1470 + t1163 * t1465;
t1075 = -qJ(4) * t1340 - t1135 * t1465 + t1163 * t1470;
t1502 = pkin(8) * t1272 + t1069 * t1482 + t1075 * t1479;
t1072 = qJ(4) * t1378 + t1082 * t1465;
t1073 = -qJ(4) * t1377 + t1082 * t1470;
t1501 = pkin(8) * t1314 + t1072 * t1482 + t1073 * t1479;
t1500 = -pkin(8) * t1519 - t1639;
t1499 = pkin(8) * t1374 + t1640;
t1028 = -t1062 * t1466 + t1094 * t1471;
t1061 = t1473 * t1213 + t1468 * t1552;
t991 = pkin(3) * t1160 + t1515;
t939 = -pkin(2) * t1061 - t1468 * t991 + t1473 * t1509;
t942 = -t1479 * t966 + t1482 * t969 + (-t1061 * t1468 - t1062 * t1473) * pkin(8);
t1498 = qJ(2) * t1028 + t1466 * t942 + t1471 * t939;
t1041 = -t1091 * t1466 + t1116 * t1471;
t1013 = pkin(3) * t1190 + t1580;
t1090 = t1473 * t1224 + t1468 * t1549;
t947 = -pkin(2) * t1090 - t1468 * t1013 + t1473 * t1508;
t959 = -t1479 * t984 + t1482 * t989 + (-t1090 * t1468 - t1091 * t1473) * pkin(8);
t1497 = qJ(2) * t1041 + t1466 * t959 + t1471 * t947;
t1042 = -t1093 * t1466 + t1118 * t1471;
t1016 = pkin(3) * t1196 + t1579;
t1092 = t1473 * t1228 + t1468 * t1548;
t949 = -pkin(2) * t1092 - t1468 * t1016 + t1473 * t1507;
t960 = -t1479 * t985 + t1482 * t990 + (-t1092 * t1468 - t1093 * t1473) * pkin(8);
t1496 = qJ(2) * t1042 + t1466 * t960 + t1471 * t949;
t1306 = t1523 * t1468;
t1017 = -t1479 * t1072 + t1482 * t1073 + (-t1306 * t1468 - t1307 * t1473) * pkin(8);
t1226 = -t1307 * t1466 + t1314 * t1471;
t1067 = pkin(3) * t1377 + t1578;
t987 = -pkin(2) * t1306 - t1468 * t1067 + t1473 * t1501;
t1495 = qJ(2) * t1226 + t1017 * t1466 + t1471 * t987;
t1139 = pkin(3) * t1339 + t1586;
t1234 = t1473 * t1387 + t1468 * t1532;
t1000 = -pkin(2) * t1234 - t1468 * t1139 + t1473 * t1503;
t1007 = -t1479 * t1068 + t1482 * t1074 + (-t1234 * t1468 - t1236 * t1473) * pkin(8);
t1192 = -t1236 * t1466 + t1271 * t1471;
t1493 = qJ(2) * t1192 + t1000 * t1471 + t1007 * t1466;
t1138 = pkin(3) * t1340 + t1587;
t1235 = t1473 * t1389 + t1468 * t1531;
t1001 = -pkin(2) * t1235 - t1468 * t1138 + t1473 * t1502;
t1008 = -t1479 * t1069 + t1482 * t1075 + (-t1235 * t1468 - t1237 * t1473) * pkin(8);
t1193 = -t1237 * t1466 + t1272 * t1471;
t1492 = qJ(2) * t1193 + t1001 * t1471 + t1008 * t1466;
t1150 = -t1184 * t1468 - t1473 * t1305;
t1087 = (-t1150 * t1468 - t1151 * t1473) * pkin(8);
t1097 = -t1151 * t1466 + t1185 * t1471;
t1098 = -pkin(2) * t1150 + t1473 * t1626;
t1491 = qJ(2) * t1097 + t1087 * t1466 + t1098 * t1471;
t1168 = pkin(3) * t1429 - t1178;
t1363 = t1374 * t1468;
t1107 = pkin(2) * t1363 - t1468 * t1168 + t1473 * t1500;
t1166 = (t1363 * t1468 + t1366 * t1473) * pkin(8) + t1640;
t1303 = t1366 * t1466 - t1471 * t1519;
t1490 = qJ(2) * t1303 + t1107 * t1471 + t1166 * t1466;
t1169 = -pkin(3) * t1428 - t1179;
t1108 = pkin(2) * t1632 - t1468 * t1169 + t1473 * t1499;
t1167 = (t1468 * t1632 + t1473 * t1631) * pkin(8) + t1639;
t1489 = qJ(2) * t1302 + t1108 * t1471 + t1167 * t1466;
t1188 = pkin(2) * t1406 + t1468 * t1246 + t1473 * t1573;
t1259 = -t1595 + (t1406 * t1468 + t1408 * t1473) * pkin(8);
t1488 = qJ(2) * t1368 + t1188 * t1471 + t1259 * t1466;
t1407 = t1431 * t1468;
t1189 = -pkin(2) * t1407 + t1468 * t1245 + t1473 * t1572;
t1258 = -t1596 + (-t1407 * t1468 - t1409 * t1473) * pkin(8);
t1369 = -t1409 * t1466 - t1471 * t1517;
t1487 = qJ(2) * t1369 + t1189 * t1471 + t1258 * t1466;
t1453 = t1473 * qJDD(3);
t1404 = (-t1468 * t1600 - t1469 * t1473) * qJDD(3);
t1403 = (-t1468 * t1602 + t1473 * t1474) * qJDD(3);
t1358 = -t1404 * t1467 + t1440 * t1472;
t1357 = t1404 * t1472 + t1440 * t1467;
t1325 = t1522 * t1468;
t1324 = -t1469 * t1407 + t1474 * t1520;
t1321 = t1474 * t1407 + t1469 * t1520;
t1300 = t1343 * t1469 + t1471 * t1598;
t1299 = t1344 * t1469 - t1466 * t1598;
t1298 = -t1343 * t1474 + t1469 * t1601;
t1297 = -t1344 * t1474 - t1466 * t1604;
t1278 = t1284 * t1474;
t1277 = t1284 * t1469;
t1270 = -t1324 * t1467 + t1369 * t1472;
t1269 = t1324 * t1472 + t1369 * t1467;
t1265 = t1473 * t1385 + t1468 * t1527;
t1264 = -t1473 * t1384 + t1468 * t1528;
t1261 = t1473 * t1388 + t1468 * t1529;
t1260 = t1473 * t1386 + t1468 * t1530;
t1257 = t1469 * t1363 + t1474 * t1524;
t1254 = -t1474 * t1363 + t1469 * t1524;
t1249 = -t1326 * t1466 + t1333 * t1471;
t1243 = -t1283 * t1474 + t1604;
t1242 = -t1283 * t1469 - t1598;
t1222 = t1473 * t1371 + t1468 * t1533;
t1211 = -t1469 * t1325 + t1474 * t1534;
t1210 = t1474 * t1325 + t1469 * t1534;
t1209 = -t1257 * t1467 + t1303 * t1472;
t1208 = t1257 * t1472 + t1303 * t1467;
t1207 = -t1267 * t1466 + t1291 * t1471;
t1206 = -t1266 * t1466 + t1290 * t1471;
t1205 = -t1263 * t1466 + t1289 * t1471;
t1204 = -t1262 * t1466 + t1288 * t1471;
t1199 = pkin(1) * t1243 + t1469 * t1625;
t1198 = -pkin(1) * t1242 + t1474 * t1625;
t1195 = -t1469 * t1306 + t1474 * t1535;
t1194 = t1474 * t1306 + t1469 * t1535;
t1187 = pkin(2) * t1409 - t1473 * t1245 + t1468 * t1572;
t1186 = -pkin(2) * t1408 - t1473 * t1246 + t1468 * t1573;
t1182 = (-t1242 * t1469 - t1243 * t1474) * qJ(2);
t1180 = t1185 * t1468;
t1176 = -t1223 * t1466 + t1268 * t1471;
t1157 = -t1469 * t1265 + t1474 * t1536;
t1156 = -t1469 * t1264 + t1474 * t1537;
t1155 = t1474 * t1265 + t1469 * t1536;
t1154 = t1474 * t1264 + t1469 * t1537;
t1152 = t1473 * t1312 + t1468 * t1540;
t1149 = -t1469 * t1261 + t1474 * t1538;
t1148 = -t1469 * t1260 + t1474 * t1539;
t1147 = t1474 * t1261 + t1469 * t1538;
t1146 = t1474 * t1260 + t1469 * t1539;
t1133 = -t1469 * t1235 + t1474 * t1541;
t1132 = -t1469 * t1234 + t1474 * t1542;
t1131 = t1474 * t1235 + t1469 * t1541;
t1130 = t1474 * t1234 + t1469 * t1542;
t1129 = -t1469 * t1222 + t1474 * t1543;
t1128 = t1474 * t1222 + t1469 * t1543;
t1122 = t1473 * t1274 + t1468 * t1544;
t1121 = t1473 * t1273 + t1468 * t1545;
t1115 = -t1466 * t1188 + t1471 * t1259 + (t1319 * t1469 + t1322 * t1474) * qJ(2);
t1114 = -t1466 * t1189 + t1471 * t1258 + (-t1321 * t1469 - t1324 * t1474) * qJ(2);
t1113 = -t1181 * t1466 + t1184 * t1471;
t1106 = -pkin(2) * t1631 + t1473 * t1169 + t1468 * t1499;
t1105 = -pkin(2) * t1366 + t1473 * t1168 + t1468 * t1500;
t1102 = t1473 * t1231 + t1468 * t1546;
t1101 = t1473 * t1230 + t1468 * t1547;
t1099 = pkin(2) * t1151 + t1468 * t1626;
t1096 = -t1153 * t1466 + t1183 * t1471;
t1079 = pkin(1) * t1319 - t1469 * t1186 + t1474 * t1488;
t1078 = -pkin(1) * t1321 - t1469 * t1187 + t1474 * t1487;
t1077 = -pkin(1) * t1322 + t1474 * t1186 + t1469 * t1488;
t1076 = pkin(1) * t1324 + t1474 * t1187 + t1469 * t1487;
t1070 = t1473 * t1219 + t1468 * t1551;
t1060 = -t1469 * t1180 + t1474 * t1550;
t1059 = t1474 * t1180 + t1469 * t1550;
t1058 = -t1124 * t1466 + t1145 * t1471;
t1057 = -t1123 * t1466 + t1144 * t1471;
t1056 = -t1469 * t1150 + t1474 * t1554;
t1055 = t1474 * t1150 + t1469 * t1554;
t1054 = -t1469 * t1152 + t1474 * t1553;
t1053 = t1474 * t1152 + t1469 * t1553;
t1050 = -t1104 * t1466 + t1127 * t1471;
t1049 = -t1103 * t1466 + t1126 * t1471;
t1045 = t1648 * t1468;
t1044 = -t1466 * t1108 + t1471 * t1167 + (-t1253 * t1469 - t1256 * t1474) * qJ(2);
t1043 = -t1466 * t1107 + t1471 * t1166 + (-t1254 * t1469 - t1257 * t1474) * qJ(2);
t1038 = -t1469 * t1122 + t1474 * t1555;
t1037 = -t1469 * t1121 + t1474 * t1556;
t1036 = t1474 * t1122 + t1469 * t1555;
t1035 = t1474 * t1121 + t1469 * t1556;
t1034 = -t1071 * t1466 + t1100 * t1471;
t1025 = -pkin(1) * t1253 - t1469 * t1106 + t1474 * t1489;
t1024 = -pkin(1) * t1254 - t1469 * t1105 + t1474 * t1490;
t1023 = pkin(1) * t1256 + t1474 * t1106 + t1469 * t1489;
t1022 = pkin(1) * t1257 + t1474 * t1105 + t1469 * t1490;
t1021 = -t1469 * t1102 + t1474 * t1559;
t1020 = -t1469 * t1101 + t1474 * t1560;
t1019 = t1474 * t1102 + t1469 * t1559;
t1018 = t1474 * t1101 + t1469 * t1560;
t1015 = -t1469 * t1092 + t1474 * t1561;
t1014 = t1474 * t1092 + t1469 * t1561;
t1006 = -t1469 * t1090 + t1474 * t1562;
t1005 = t1474 * t1090 + t1469 * t1562;
t999 = pkin(2) * t1237 + t1473 * t1138 + t1468 * t1502;
t998 = pkin(2) * t1236 + t1473 * t1139 + t1468 * t1503;
t997 = -t1469 * t1070 + t1474 * t1563;
t996 = t1474 * t1070 + t1469 * t1563;
t995 = -t1046 * t1466 + t1047 * t1471;
t994 = -t1469 * t1061 + t1474 * t1564;
t993 = t1474 * t1061 + t1469 * t1564;
t986 = pkin(2) * t1307 + t1473 * t1067 + t1468 * t1501;
t978 = t1471 * t1087 - t1466 * t1098 + (-t1055 * t1469 - t1056 * t1474) * qJ(2);
t977 = -t1469 * t1045 + t1474 * t1566;
t976 = t1474 * t1045 + t1469 * t1566;
t975 = -t1469 * t1039 + t1474 * t1567;
t974 = t1474 * t1039 + t1469 * t1567;
t973 = -pkin(1) * t1055 - t1469 * t1099 + t1474 * t1491;
t972 = pkin(1) * t1056 + t1474 * t1099 + t1469 * t1491;
t967 = pkin(2) * t1040 + t1468 * t1485 - t1473 * t1629;
t965 = t1471 * t1017 - t1466 * t987 + (-t1194 * t1469 - t1195 * t1474) * qJ(2);
t963 = -t1466 * t1001 + t1471 * t1008 + (-t1131 * t1469 - t1133 * t1474) * qJ(2);
t962 = -t1466 * t1000 + t1471 * t1007 + (-t1130 * t1469 - t1132 * t1474) * qJ(2);
t957 = -pkin(1) * t1131 - t1469 * t999 + t1474 * t1492;
t956 = -pkin(1) * t1130 - t1469 * t998 + t1474 * t1493;
t955 = pkin(1) * t1133 + t1469 * t1492 + t1474 * t999;
t954 = pkin(1) * t1132 + t1469 * t1493 + t1474 * t998;
t953 = -pkin(1) * t1194 - t1469 * t986 + t1474 * t1495;
t952 = pkin(1) * t1195 + t1469 * t1495 + t1474 * t986;
t951 = -t1469 * t982 + t1474 * t1568;
t950 = t1469 * t1568 + t1474 * t982;
t948 = pkin(2) * t1093 + t1473 * t1016 + t1468 * t1507;
t946 = pkin(2) * t1091 + t1473 * t1013 + t1468 * t1508;
t938 = pkin(2) * t1062 + t1468 * t1509 + t1473 * t991;
t936 = pkin(2) * t983 + t1473 * t1003 + t1468 * t1510;
t934 = -t1466 * t968 + t1471 * t971 + (-t1469 * t974 - t1474 * t975) * qJ(2);
t932 = -t1466 * t949 + t1471 * t960 + (-t1014 * t1469 - t1015 * t1474) * qJ(2);
t931 = -pkin(1) * t974 - t1469 * t967 + t1474 * t1504;
t930 = pkin(1) * t975 + t1469 * t1504 + t1474 * t967;
t929 = -t1466 * t947 + t1471 * t959 + (-t1005 * t1469 - t1006 * t1474) * qJ(2);
t928 = -t1469 * t944 + t1474 * t1571;
t927 = t1469 * t1571 + t1474 * t944;
t926 = -pkin(1) * t1014 - t1469 * t948 + t1474 * t1496;
t925 = pkin(1) * t1015 + t1469 * t1496 + t1474 * t948;
t924 = -pkin(1) * t1005 - t1469 * t946 + t1474 * t1497;
t923 = pkin(1) * t1006 + t1469 * t1497 + t1474 * t946;
t922 = -t1466 * t939 + t1471 * t942 + (-t1469 * t993 - t1474 * t994) * qJ(2);
t921 = -pkin(1) * t993 - t1469 * t938 + t1474 * t1498;
t920 = pkin(1) * t994 + t1469 * t1498 + t1474 * t938;
t919 = -t1466 * t937 + t1471 * t941 + (-t1469 * t950 - t1474 * t951) * qJ(2);
t917 = -pkin(1) * t950 - t1469 * t936 + t1474 * t1505;
t916 = pkin(1) * t951 + t1469 * t1505 + t1474 * t936;
t914 = pkin(2) * t945 + t1468 * t1512 + t1473 * t943;
t913 = -t1466 * t915 + t1471 * t918 + (-t1469 * t927 - t1474 * t928) * qJ(2);
t912 = -pkin(1) * t927 - t1469 * t914 + t1474 * t1506;
t911 = pkin(1) * t928 + t1469 * t1506 + t1474 * t914;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, 0, 0, 0, 0, -t1605, -t1599, -t1518, -qJ(1) * t1518, 0, 0, 0, 0, 0, 0, -t1300 * t1467 - t1472 * t1606, -t1299 * t1467 - t1472 * t1601, -t1278 * t1467 + t1283 * t1472, t1472 * t1182 - t1467 * t1198 - qJ(1) * (t1243 * t1472 + t1284 * t1467), 0, 0, -t1647, 0, t1270, t1358, -qJ(1) * t1269 - t1078 * t1467 + t1114 * t1472, qJ(1) * t1646 - t1467 * t1079 + t1472 * t1115, -t1060 * t1467 + t1113 * t1472, t1472 * t978 - t1467 * t973 - qJ(1) * (t1056 * t1472 + t1097 * t1467), 0, 0, t1652, 0, t1209, t1358, -qJ(1) * t1208 - t1024 * t1467 + t1043 * t1472, -qJ(1) * t1651 - t1467 * t1025 + t1472 * t1044, -t1467 * t977 + t1472 * t995, t1472 * t934 - t1467 * t931 - qJ(1) * (t1467 * t992 + t1472 * t975), -t1157 * t1467 + t1207 * t1472, -t1129 * t1467 + t1176 * t1472, -t1149 * t1467 + t1205 * t1472, -t1156 * t1467 + t1206 * t1472, -t1148 * t1467 + t1204 * t1472, -t1211 * t1467 + t1249 * t1472, t1472 * t962 - t1467 * t956 - qJ(1) * (t1132 * t1472 + t1192 * t1467), t1472 * t963 - t1467 * t957 - qJ(1) * (t1133 * t1472 + t1193 * t1467), t1472 * t965 - t1467 * t953 - qJ(1) * (t1195 * t1472 + t1226 * t1467), t1472 * t919 - t1467 * t917 - qJ(1) * (t1467 * t961 + t1472 * t951), -t1038 * t1467 + t1058 * t1472, t1034 * t1472 - t1467 * t997, -t1020 * t1467 + t1049 * t1472, -t1037 * t1467 + t1057 * t1472, -t1021 * t1467 + t1050 * t1472, -t1054 * t1467 + t1096 * t1472, t1472 * t929 - t1467 * t924 - qJ(1) * (t1006 * t1472 + t1041 * t1467), t1472 * t932 - t1467 * t926 - qJ(1) * (t1015 * t1472 + t1042 * t1467), t1472 * t922 - t1467 * t921 - qJ(1) * (t1028 * t1467 + t1472 * t994), t1472 * t913 - t1467 * t912 - qJ(1) * (t1467 * t933 + t1472 * t928); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, 0, 0, 0, 0, t1599, -t1605, t1584, qJ(1) * t1584, 0, 0, 0, 0, 0, 0, t1300 * t1472 - t1467 * t1606, t1299 * t1472 - t1467 * t1601, t1278 * t1472 + t1283 * t1467, t1467 * t1182 + t1472 * t1198 + qJ(1) * (-t1243 * t1467 + t1284 * t1472), 0, 0, t1646, 0, t1269, t1357, qJ(1) * t1270 + t1078 * t1472 + t1114 * t1467, qJ(1) * t1647 + t1472 * t1079 + t1467 * t1115, t1060 * t1472 + t1113 * t1467, t1467 * t978 + t1472 * t973 + qJ(1) * (-t1056 * t1467 + t1097 * t1472), 0, 0, -t1651, 0, t1208, t1357, qJ(1) * t1209 + t1024 * t1472 + t1043 * t1467, -qJ(1) * t1652 + t1472 * t1025 + t1467 * t1044, t1467 * t995 + t1472 * t977, t1467 * t934 + t1472 * t931 + qJ(1) * (-t1467 * t975 + t1472 * t992), t1157 * t1472 + t1207 * t1467, t1129 * t1472 + t1176 * t1467, t1149 * t1472 + t1205 * t1467, t1156 * t1472 + t1206 * t1467, t1148 * t1472 + t1204 * t1467, t1211 * t1472 + t1249 * t1467, t1467 * t962 + t1472 * t956 + qJ(1) * (-t1132 * t1467 + t1192 * t1472), t1467 * t963 + t1472 * t957 + qJ(1) * (-t1133 * t1467 + t1193 * t1472), t1467 * t965 + t1472 * t953 + qJ(1) * (-t1195 * t1467 + t1226 * t1472), t1467 * t919 + t1472 * t917 + qJ(1) * (-t1467 * t951 + t1472 * t961), t1038 * t1472 + t1058 * t1467, t1034 * t1467 + t1472 * t997, t1020 * t1472 + t1049 * t1467, t1037 * t1472 + t1057 * t1467, t1021 * t1472 + t1050 * t1467, t1054 * t1472 + t1096 * t1467, t1467 * t929 + t1472 * t924 + qJ(1) * (-t1006 * t1467 + t1041 * t1472), t1467 * t932 + t1472 * t926 + qJ(1) * (-t1015 * t1467 + t1042 * t1472), t1467 * t922 + t1472 * t921 + qJ(1) * (t1028 * t1472 - t1467 * t994), t1467 * t913 + t1472 * t912 + qJ(1) * (-t1467 * t928 + t1472 * t933); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, 0, t1435, t1436, 0, 0, 0, 0, 0, 0, 0, 0, t1298, t1297, t1277, t1199, 0, 0, t1319, 0, t1321, t1403, t1076, t1077, t1059, t972, 0, 0, -t1253, 0, t1254, t1403, t1022, t1023, t976, t930, t1155, t1128, t1147, t1154, t1146, t1210, t954, t955, t952, t916, t1036, t996, t1018, t1035, t1019, t1053, t923, t925, t920, t911; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1462, -t1435, 0, 0, 0, 0, 0, 0, 0, -t1606, -t1601, t1283, t1182, 0, 0, -t1368, 0, t1369, t1440, t1114, t1115, t1113, t978, 0, 0, -t1302, 0, t1303, t1440, t1043, t1044, t995, t934, t1207, t1176, t1205, t1206, t1204, t1249, t962, t963, t965, t919, t1058, t1034, t1049, t1057, t1050, t1096, t929, t932, t922, t913; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1462, 0, -t1436, 0, 0, 0, 0, 0, 0, 0, t1300, t1299, t1278, t1198, 0, 0, t1322, 0, t1324, t1404, t1078, t1079, t1060, t973, 0, 0, -t1256, 0, t1257, t1404, t1024, t1025, t977, t931, t1157, t1129, t1149, t1156, t1148, t1211, t956, t957, t953, t917, t1038, t997, t1020, t1037, t1021, t1054, t924, t926, t921, t912; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1435, t1436, 0, 0, 0, 0, 0, 0, 0, 0, t1298, t1297, t1277, t1199, 0, 0, t1319, 0, t1321, t1403, t1076, t1077, t1059, t972, 0, 0, -t1253, 0, t1254, t1403, t1022, t1023, t976, t930, t1155, t1128, t1147, t1154, t1146, t1210, t954, t955, t952, t916, t1036, t996, t1018, t1035, t1019, t1053, t923, t925, t920, t911; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1394, t1343, 0, 0, 0, t1431, 0, -t1517, 0, t1258, t1259, t1184, t1087, 0, 0, -t1374, 0, -t1519, 0, t1166, t1167, t1047, t971, t1291, t1268, t1289, t1290, t1288, t1333, t1007, t1008, t1017, t941, t1145, t1100, t1126, t1144, t1127, t1183, t959, t960, t942, t918; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1394, 0, t1344, 0, 0, 0, t1408, 0, t1409, -t1592, t1189, t1188, t1181, t1098, 0, 0, t1631, 0, -t1366, -t1592, t1107, t1108, t1046, t968, t1267, t1223, t1263, t1266, t1262, t1326, t1000, t1001, t987, t937, t1124, t1071, t1103, t1123, t1104, t1153, t947, t949, t939, t915; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1343, -t1344, 0, 0, 0, 0, t1406, 0, t1407, t1453, t1187, t1186, t1180, t1099, 0, 0, t1632, 0, -t1363, t1453, t1105, t1106, t1045, t967, t1265, t1222, t1261, t1264, t1260, t1325, t998, t999, t986, t936, t1122, t1070, t1101, t1121, t1102, t1152, t946, t948, t938, t914; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), 0, -t1483, 0, 0, -t1305, t1245, 0, 0, 0, t1429, 0, -t1428, 0, t1569, t1282, t1111, qJ(4) * t1111, t1356, t1335, t1352, t1355, t1351, t1396, t1074, t1075, t1073, t988, t1218, t1165, t1202, t1217, t1203, t1241, t989, t990, t969, t940; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1483, 0, qJDD(3), 0, t1305, 0, t1246, 0, 0, 0, t1428, 0, t1429, 0, -t1282, t1569, t1585, t1095, t1354, t1334, t1350, t1353, t1349, t1395, t1068, t1069, t1072, t981, t1216, t1164, t1200, t1215, t1201, t1240, t984, t985, t966, t935; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t1245, -t1246, 0, 0, 0, 0, 0, 0, 0, qJDD(3), t1168, t1169, 0, -t1629, t1385, t1371, t1388, -t1384, t1386, 0, t1139, t1138, t1067, t1003, t1274, t1219, t1230, t1273, t1231, t1312, t1013, t1016, t991, t943; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), 0, -t1483, 0, 0, -t1304, t1178, 0, t1398, t1372, t1392, t1397, t1390, t1416, t1162, t1163, t1082, pkin(9) * t1082, t1276, t1220, t1232, t1275, t1233, t1313, t1029, t1033, t1004, t964; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1483, 0, qJDD(3), 0, t1304, 0, t1179, 0, t1446, -t1434, -t1591, -t1446, -t1590, -qJDD(5), t1134, t1135, 0, pkin(4) * t1082, -t1317, -t1247, -t1308, t1315, -t1309, -t1337, t1088, t1089, t1012, t970; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(3), -t1178, -t1179, 0, 0, t1385, t1371, t1388, -t1384, t1386, 0, t1586, t1587, t1578, t1594, t1274, t1219, t1230, t1273, t1231, t1312, t1580, t1579, t1515, t1484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1424, t1426, t1438, -t1452, t1443, t1452, 0, t1174, t1142, 0, t1318, t1250, t1310, t1316, t1311, t1338, t1119, t1125, t1027, -pkin(10) * t1031; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1451, t1423, t1441, t1425, t1439, -t1451, -t1174, 0, t1143, 0, -t1613, -t1380, -t1331, t1613, t1327, t1413, t1064, t1066, -pkin(5) * t1248, -pkin(5) * t1031; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1446, t1434, t1591, t1446, t1590, qJDD(5), -t1142, -t1143, 0, 0, t1317, t1247, t1308, -t1315, t1309, t1337, t1514, t1513, t1486, t1577; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1360, t1328, t1494, -t1402, t1399, t1402, 0, t1136, t1085, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1401, t1330, t1400, t1359, -t1346, t1401, -t1136, 0, t1086, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1613, t1380, t1331, -t1613, -t1327, -t1413, -t1085, -t1086, 0, 0;];
m_new_reg  = t1;
