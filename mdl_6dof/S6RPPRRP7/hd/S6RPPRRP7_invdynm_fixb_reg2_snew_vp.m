% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RPPRRP7
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d4,d5,theta3]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-05 15:05
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RPPRRP7_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPPRRP7_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPPRRP7_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPPRRP7_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPPRRP7_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RPPRRP7_invdynm_fixb_reg2_snew_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-05 15:04:52
% EndTime: 2019-05-05 15:05:09
% DurationCPUTime: 18.22s
% Computational Cost: add. (89758->721), mult. (205399->821), div. (0->0), fcn. (146194->8), ass. (0->482)
t1172 = sin(qJ(4));
t1168 = sin(pkin(9));
t1169 = cos(pkin(9));
t1175 = cos(qJ(4));
t1225 = t1168 * t1175 + t1169 * t1172;
t1134 = t1225 * qJD(1);
t1136 = (-t1168 * t1172 + t1169 * t1175) * qJD(1);
t1280 = t1136 * t1134;
t1352 = qJDD(4) - t1280;
t1354 = t1172 * t1352;
t1353 = t1175 * t1352;
t1281 = t1136 * qJD(4);
t1341 = t1225 * qJDD(1);
t1186 = -t1341 - t1281;
t1184 = qJDD(5) - t1186;
t1171 = sin(qJ(5));
t1174 = cos(qJ(5));
t1106 = qJD(4) * t1174 - t1171 * t1136;
t1107 = t1171 * qJD(4) + t1174 * t1136;
t1067 = t1106 * t1107;
t1342 = t1067 + t1184;
t1351 = pkin(5) * t1342;
t1293 = t1342 * t1171;
t1292 = t1342 * t1174;
t1177 = qJD(1) ^ 2;
t1266 = t1168 * qJDD(1);
t1164 = t1168 ^ 2;
t1165 = t1169 ^ 2;
t1269 = t1164 + t1165;
t1321 = pkin(1) + qJ(3);
t1350 = pkin(3) * t1266 - (pkin(7) * t1269 + t1321) * t1177;
t1123 = qJD(5) + t1134;
t1159 = t1169 * qJDD(1);
t1132 = t1159 * t1175 - t1172 * t1266;
t1284 = t1134 * qJD(4);
t1091 = -t1284 + t1132;
t1244 = -t1174 * qJDD(4) + t1171 * t1091;
t1007 = (qJD(5) - t1123) * t1107 + t1244;
t1104 = t1106 ^ 2;
t1105 = t1107 ^ 2;
t1036 = -t1104 - t1105;
t1296 = qJD(6) * t1106;
t1096 = 0.2e1 * t1296;
t1040 = -qJD(5) * t1107 - t1244;
t1069 = pkin(5) * t1123 - qJ(6) * t1107;
t1089 = t1341 + 0.2e1 * t1281;
t1298 = qJD(2) * qJD(1);
t1163 = 0.2e1 * t1298;
t1173 = sin(qJ(1));
t1176 = cos(qJ(1));
t1148 = t1176 * g(1) + t1173 * g(2);
t1166 = qJDD(1) * qJ(2);
t1223 = -t1148 + t1166;
t1180 = qJDD(3) + t1163 + (-t1091 + t1284) * pkin(8) + t1089 * pkin(4) + t1223 + t1350;
t1147 = t1173 * g(1) - t1176 * g(2);
t1221 = qJDD(2) - t1147;
t1192 = -t1177 * qJ(2) + t1221;
t1183 = -qJDD(1) * t1321 + t1192;
t1297 = qJD(3) * qJD(1);
t1083 = g(3) * t1169 + (-t1183 + 0.2e1 * t1297) * t1168;
t1275 = t1164 * t1177;
t1068 = -pkin(3) * t1275 - pkin(7) * t1266 - t1083;
t1265 = -0.2e1 * t1297;
t1315 = t1168 * g(3);
t1181 = t1315 + (t1265 + (-pkin(3) * t1168 - qJ(2)) * t1177 + (-pkin(7) - t1321) * qJDD(1) + t1221) * t1169;
t1016 = t1175 * t1068 + t1172 * t1181;
t1084 = pkin(4) * t1134 - pkin(8) * t1136;
t1338 = qJD(4) ^ 2;
t959 = -pkin(4) * t1338 + qJDD(4) * pkin(8) - t1084 * t1134 + t1016;
t912 = t1171 * t1180 + t1174 * t959;
t1228 = t1104 * pkin(5) - t1040 * qJ(6) + t1123 * t1069 - t912;
t884 = t1096 - t1228;
t845 = -pkin(5) * t1036 - qJ(6) * t1007 + t884;
t1041 = qJD(5) * t1106 + qJDD(4) * t1171 + t1091 * t1174;
t1074 = t1123 * t1106;
t1010 = t1041 - t1074;
t911 = t1171 * t959 - t1174 * t1180;
t1189 = -qJ(6) * t1074 + 0.2e1 * qJD(6) * t1107 - t1351 + t911;
t847 = (t1010 + t1041) * qJ(6) + t1189;
t1349 = t1171 * t847 + t1174 * t845;
t1122 = t1123 ^ 2;
t1053 = -t1105 - t1122;
t1015 = t1068 * t1172 - t1175 * t1181;
t958 = -qJDD(4) * pkin(4) - pkin(8) * t1338 + t1084 * t1136 + t1015;
t906 = -t1040 * pkin(5) - t1104 * qJ(6) + t1069 * t1107 + qJDD(6) + t958;
t896 = -qJ(6) * t1053 + t906;
t1023 = -t1067 + t1184;
t1343 = t1041 + t1074;
t947 = -pkin(5) * t1343 - qJ(6) * t1023;
t1348 = t1171 * t896 + t1174 * t947;
t856 = t1171 * t911 + t1174 * t912;
t942 = -t1007 * t1174 + t1010 * t1171;
t915 = -t1036 * t1175 + t1172 * t942;
t916 = t1036 * t1172 + t1175 * t942;
t860 = t1168 * t916 + t1169 * t915;
t940 = -t1007 * t1171 - t1010 * t1174;
t1347 = -pkin(1) * t860 + qJ(2) * t940;
t1006 = (qJD(5) + t1123) * t1107 + t1244;
t1042 = -t1122 - t1104;
t967 = t1042 * t1174 - t1293;
t923 = -t1006 * t1175 + t1172 * t967;
t924 = t1006 * t1172 + t1175 * t967;
t867 = t1168 * t924 + t1169 * t923;
t966 = t1042 * t1171 + t1292;
t1346 = -pkin(1) * t867 + qJ(2) * t966;
t1294 = t1023 * t1174;
t977 = -t1053 * t1171 - t1294;
t929 = t1172 * t977 - t1175 * t1343;
t930 = t1172 * t1343 + t1175 * t977;
t874 = t1168 * t930 + t1169 * t929;
t1295 = t1023 * t1171;
t976 = t1053 * t1174 - t1295;
t1345 = -pkin(1) * t874 + qJ(2) * t976;
t1344 = t1269 * t1177;
t1082 = t1315 + (t1183 + t1265) * t1169;
t1025 = t1169 * t1082 - t1168 * t1083;
t1129 = t1134 ^ 2;
t1130 = t1136 ^ 2;
t861 = -t1168 * t915 + t1169 * t916;
t1337 = pkin(1) * t861;
t868 = -t1168 * t923 + t1169 * t924;
t1336 = pkin(1) * t868;
t875 = -t1168 * t929 + t1169 * t930;
t1335 = pkin(1) * t875;
t1334 = pkin(4) * t940;
t1333 = pkin(4) * t966;
t1332 = pkin(4) * t976;
t876 = qJ(6) * t1041 + t1189;
t1331 = pkin(5) * t876;
t1330 = pkin(6) * (t1173 * t940 - t1176 * t860);
t1329 = pkin(6) * (t1173 * t966 - t1176 * t867);
t1328 = pkin(6) * (t1173 * t976 - t1176 * t874);
t1327 = pkin(7) * t915;
t1326 = pkin(7) * t923;
t1325 = pkin(7) * t929;
t1324 = pkin(8) * t940;
t1323 = pkin(8) * t966;
t1322 = pkin(8) * t976;
t1320 = pkin(2) * t1025;
t1191 = -t1223 - 0.2e1 * t1298;
t1187 = -qJDD(3) + t1191;
t1109 = t1177 * t1321 + t1187;
t1319 = pkin(2) * t1109;
t1141 = t1269 * qJDD(1);
t1318 = pkin(2) * t1141;
t1317 = pkin(4) * t1172;
t1316 = pkin(5) * t1010;
t1314 = qJ(2) * t868;
t1313 = qJ(3) * t860;
t1312 = qJ(3) * t867;
t1311 = qJ(3) * t874;
t1310 = qJDD(1) * pkin(1);
t1309 = -pkin(2) * t940 + qJ(3) * t861;
t1308 = -pkin(2) * t966 + qJ(3) * t868;
t1307 = -pkin(2) * t976 + qJ(3) * t875;
t1306 = -pkin(4) * t958 + pkin(8) * t856;
t944 = -t1015 * t1175 + t1016 * t1172;
t1305 = t1168 * t944;
t1304 = t1169 * t944;
t1303 = t1171 * t876;
t954 = t1171 * t958;
t1302 = t1174 * t876;
t955 = t1174 * t958;
t1301 = -pkin(4) * t1036 + pkin(8) * t942;
t1300 = -pkin(4) * t1006 + pkin(8) * t967;
t1299 = -pkin(4) * t1343 + pkin(8) * t977;
t1078 = t1187 - t1350;
t1291 = t1078 * t1172;
t1290 = t1078 * t1175;
t1087 = qJDD(4) + t1280;
t1289 = t1087 * t1172;
t1288 = t1087 * t1175;
t1287 = t1123 * t1107;
t1286 = t1123 * t1171;
t1285 = t1123 * t1174;
t1283 = t1134 * t1172;
t1282 = t1134 * t1175;
t1279 = t1136 * t1172;
t1278 = t1136 * t1175;
t1277 = t1141 * t1173;
t1276 = t1141 * t1176;
t1273 = t1168 * t1109;
t1272 = t1168 * t1169;
t1099 = t1169 * t1109;
t1270 = t1164 - t1165;
t1268 = t1164 * qJDD(1);
t1267 = t1165 * qJDD(1);
t834 = t1172 * t856 - t1175 * t958;
t1264 = pkin(3) * t834 + t1306;
t1263 = t954 + t1299;
t1262 = -t955 + t1300;
t1261 = -pkin(4) * t1175 - pkin(3);
t945 = t1015 * t1172 + t1175 * t1016;
t891 = t1168 * t945 + t1304;
t943 = pkin(3) * t944;
t1260 = -pkin(2) * t891 - t943;
t1259 = -pkin(3) * t966 + pkin(7) * t924;
t1258 = -pkin(3) * t976 + pkin(7) * t930;
t1257 = t1172 * t1067;
t1256 = t1175 * t1067;
t1255 = t1106 * t1286;
t1254 = t1173 * t1280;
t1253 = t1176 * t1280;
t1115 = -t1130 - t1338;
t1049 = t1115 * t1175 - t1289;
t1252 = pkin(3) * t1049 - t1016;
t1032 = -t1132 * t1175 - t1172 * t1341;
t1031 = pkin(3) * t1032;
t1034 = t1132 * t1172 - t1175 * t1341;
t969 = t1032 * t1169 + t1034 * t1168;
t1251 = -pkin(2) * t969 - t1031;
t822 = t1171 * t884 - t1302;
t830 = -pkin(5) * t906 + qJ(6) * t884;
t787 = -pkin(8) * t822 + qJ(6) * t1302 - t1171 * t830;
t805 = -pkin(4) * t822 + t1331;
t823 = t1174 * t884 + t1303;
t813 = t1172 * t906 + t1175 * t823;
t765 = -pkin(3) * t822 + pkin(7) * t813 + t1172 * t787 + t1175 * t805;
t812 = t1172 * t823 - t1175 * t906;
t769 = -pkin(7) * t812 - t1172 * t805 + t1175 * t787;
t1250 = -t1168 * t765 + t1169 * t769;
t835 = t1172 * t958 + t1175 * t856;
t855 = t1171 * t912 - t1174 * t911;
t784 = pkin(7) * t835 + (-pkin(8) * t1172 + t1261) * t855;
t793 = -pkin(7) * t834 + (-pkin(8) * t1175 + t1317) * t855;
t1249 = -t1168 * t784 + t1169 * t793;
t1066 = -t1129 - t1130;
t904 = -pkin(3) * t1066 + pkin(7) * t1034 + t945;
t918 = -pkin(7) * t1032 - t944;
t1248 = -t1168 * t904 + t1169 * t918;
t1085 = -t1129 - t1338;
t1029 = t1085 * t1175 - t1354;
t968 = -pkin(3) * t1089 + pkin(7) * t1029 + t1290;
t1028 = t1085 * t1172 + t1353;
t998 = -pkin(7) * t1028 - t1291;
t1247 = -t1168 * t968 + t1169 * t998;
t1014 = -pkin(7) * t1049 - t1290;
t1052 = -t1115 * t1172 - t1288;
t1090 = -0.2e1 * t1284 + t1132;
t980 = -pkin(3) * t1090 + pkin(7) * t1052 - t1291;
t1246 = t1169 * t1014 - t1168 * t980;
t1118 = t1177 * pkin(1) + t1191;
t1124 = -t1192 + t1310;
t1243 = -t1176 * t1118 - t1124 * t1173;
t1242 = -t1147 * t1173 - t1176 * t1148;
t1241 = t1301 + t1349;
t1240 = t1299 + t1348;
t1239 = t1301 + t856;
t928 = pkin(3) * t929;
t1238 = t928 + t1263;
t922 = pkin(3) * t923;
t1237 = t922 + t1262;
t1145 = qJDD(1) * t1176 - t1173 * t1177;
t1236 = pkin(6) * t1145 + g(3) * t1173;
t1146 = qJDD(1) * t1173 + t1176 * t1177;
t1235 = -pkin(6) * t1146 + g(3) * t1176;
t914 = pkin(3) * t915;
t1234 = t914 + t1241;
t865 = pkin(2) * t867;
t1233 = -t865 - t1237;
t1232 = t928 + t1240;
t1231 = t914 + t1239;
t1230 = pkin(3) * t1028 - t1015;
t803 = t1168 * t835 + t1169 * t834;
t1229 = -pkin(2) * t803 - t1264;
t1026 = -t1082 * t1168 - t1083 * t1169;
t1227 = t1118 * t1173 - t1124 * t1176;
t1226 = t1147 * t1176 - t1148 * t1173;
t989 = t1049 * t1169 + t1052 * t1168;
t1224 = -pkin(2) * t989 - t1252;
t931 = pkin(3) * t1078 + pkin(7) * t945;
t1222 = -pkin(7) * t1304 - t1168 * t931;
t806 = -t1171 * t845 + t1174 * t847 - t1324;
t903 = t1316 - t1334;
t913 = pkin(7) * t916;
t786 = -pkin(3) * t940 + t1172 * t806 + t1175 * t903 + t913;
t790 = -t1172 * t903 + t1175 * t806 - t1327;
t1220 = -t1168 * t786 + t1169 * t790 - t1313;
t1182 = -t876 + t1351;
t836 = -t1182 - t1333;
t882 = -pkin(5) * t1006 + qJ(6) * t1042 - t906;
t837 = -qJ(6) * t1292 - t1171 * t882 - t1323;
t794 = t1172 * t837 + t1175 * t836 + t1259;
t798 = -t1172 * t836 + t1175 * t837 - t1326;
t1219 = -t1168 * t794 + t1169 * t798 - t1312;
t838 = -t1171 * t947 + t1174 * t896 - t1322;
t1196 = pkin(5) * t1053 + t1228;
t841 = t1096 - t1196 - t1332;
t795 = t1172 * t838 + t1175 * t841 + t1258;
t801 = -t1172 * t841 + t1175 * t838 - t1325;
t1218 = -t1168 * t795 + t1169 * t801 - t1311;
t826 = -t855 - t1324;
t802 = t1172 * t826 + t1261 * t940 + t913;
t808 = t1175 * t826 + t1317 * t940 - t1327;
t1217 = -t1168 * t802 + t1169 * t808 - t1313;
t885 = t911 - t1333;
t907 = t954 - t1323;
t814 = t1172 * t907 + t1175 * t885 + t1259;
t818 = -t1172 * t885 + t1175 * t907 - t1326;
t1216 = -t1168 * t814 + t1169 * t818 - t1312;
t890 = t912 - t1332;
t910 = t955 - t1322;
t815 = t1172 * t910 + t1175 * t890 + t1258;
t820 = -t1172 * t890 + t1175 * t910 - t1325;
t1215 = -t1168 * t815 + t1169 * t820 - t1311;
t1214 = -pkin(4) * t906 + pkin(8) * t823 + qJ(6) * t1303 + t1174 * t830;
t872 = pkin(2) * t874;
t1213 = -qJ(2) * t875 + t1299 + t872 + t928;
t858 = pkin(2) * t860;
t1212 = -qJ(2) * t861 + t1301 + t858 + t914;
t1139 = t1168 * t1344;
t1211 = -t1139 * t1173 + t1176 * t1266;
t1210 = t1139 * t1176 + t1173 * t1266;
t1209 = -qJ(6) * t1293 + t1174 * t882 + t1300;
t963 = t1028 * t1169 + t1029 * t1168;
t1208 = -pkin(2) * t963 - t1230;
t1207 = t1168 * t790 + t1169 * t786 + t1309;
t1206 = t1168 * t798 + t1169 * t794 + t1308;
t1205 = t1168 * t801 + t1169 * t795 + t1307;
t1204 = t1168 * t808 + t1169 * t802 + t1309;
t1203 = t1168 * t818 + t1169 * t814 + t1308;
t1202 = t1168 * t820 + t1169 * t815 + t1307;
t1201 = pkin(2) * t822 - t1168 * t769 - t1169 * t765;
t1200 = pkin(2) * t855 - t1168 * t793 - t1169 * t784;
t1199 = pkin(3) * t812 + t1214;
t1198 = pkin(2) * t1066 - t1168 * t918 - t1169 * t904;
t1197 = pkin(2) * t1089 - t1168 * t998 - t1169 * t968;
t1195 = pkin(2) * t1090 - t1168 * t1014 - t1169 * t980;
t1194 = t1209 + t922;
t1193 = -pkin(2) * t1078 + pkin(7) * t1305 - t1169 * t931;
t1190 = -t1194 - t865;
t782 = t1168 * t813 + t1169 * t812;
t1188 = -pkin(2) * t782 - t1199;
t1151 = t1177 * t1272;
t1150 = t1168 * t1159;
t1149 = -0.2e1 * t1150;
t1144 = t1270 * t1177;
t1142 = t1270 * qJDD(1);
t1138 = t1169 * t1344;
t1137 = t1221 - 0.2e1 * t1310;
t1133 = -t1148 + t1163 + 0.2e1 * t1166;
t1114 = -t1130 + t1338;
t1113 = t1129 - t1338;
t1112 = t1146 * t1272;
t1111 = t1145 * t1272;
t1103 = -t1138 * t1173 + t1159 * t1176;
t1102 = t1138 * t1176 + t1159 * t1173;
t1094 = t1130 - t1129;
t1093 = -pkin(2) * t1266 + t1099;
t1092 = -pkin(2) * t1159 - t1273;
t1079 = pkin(1) * t1124 - qJ(2) * t1118;
t1077 = (t1279 - t1282) * qJD(4);
t1076 = (-t1278 - t1283) * qJD(4);
t1072 = -t1105 + t1122;
t1071 = t1104 - t1122;
t1070 = t1107 * t1285;
t1063 = -pkin(2) * t1139 + t1082;
t1062 = -pkin(2) * t1138 + t1083;
t1061 = t1105 - t1104;
t1057 = -qJD(4) * t1279 + t1091 * t1175;
t1056 = qJD(4) * t1278 + t1091 * t1172;
t1055 = qJD(4) * t1282 - t1172 * t1186;
t1054 = qJD(4) * t1283 + t1175 * t1186;
t1051 = -t1114 * t1172 + t1353;
t1050 = t1113 * t1175 - t1289;
t1048 = t1114 * t1175 + t1354;
t1047 = t1113 * t1172 + t1288;
t1044 = qJ(2) * t1159 + t1138 * t1321 - t1099;
t1043 = (-t1109 + t1166) * t1168 + t1321 * t1139;
t1035 = -t1089 * t1175 - t1090 * t1172;
t1033 = -t1089 * t1172 + t1090 * t1175;
t1021 = (t1106 * t1174 + t1107 * t1171) * t1123;
t1020 = -t1070 + t1255;
t1019 = pkin(2) * t1344 + t1026;
t1018 = -t1076 * t1168 + t1077 * t1169;
t1017 = t1076 * t1169 + t1077 * t1168;
t1003 = -qJ(2) * t1344 + t1141 * t1321 - t1025;
t1002 = t1041 * t1174 - t1107 * t1286;
t1001 = -t1171 * t1041 - t1070;
t1000 = -t1040 * t1171 - t1106 * t1285;
t999 = t1040 * t1174 - t1255;
t997 = -t1056 * t1168 + t1057 * t1169;
t996 = -t1054 * t1168 + t1055 * t1169;
t995 = t1056 * t1169 + t1057 * t1168;
t994 = t1054 * t1169 + t1055 * t1168;
t992 = -t1049 * t1168 + t1052 * t1169;
t991 = -t1048 * t1168 + t1051 * t1169;
t990 = -t1047 * t1168 + t1050 * t1169;
t988 = t1048 * t1169 + t1051 * t1168;
t987 = t1047 * t1169 + t1050 * t1168;
t986 = t1175 * t1021 + t1172 * t1184;
t985 = t1172 * t1021 - t1175 * t1184;
t984 = t1071 * t1174 - t1295;
t983 = -t1072 * t1171 + t1292;
t982 = t1071 * t1171 + t1294;
t981 = t1072 * t1174 + t1293;
t972 = -t1033 * t1168 + t1035 * t1169;
t971 = -t1032 * t1168 + t1034 * t1169;
t970 = t1033 * t1169 + t1035 * t1168;
t965 = -qJ(2) * t1026 + t1320;
t964 = -t1028 * t1168 + t1029 * t1169;
t953 = t1002 * t1175 - t1257;
t952 = t1000 * t1175 + t1257;
t951 = t1002 * t1172 + t1256;
t950 = t1000 * t1172 - t1256;
t949 = -t1026 * t1321 - t1319;
t948 = -qJ(2) * t1109 - t1025 * t1321;
t941 = -t1006 * t1174 - t1171 * t1343;
t939 = -t1006 * t1171 + t1174 * t1343;
t935 = -t1007 * t1172 + t1175 * t984;
t934 = t1010 * t1172 + t1175 * t983;
t933 = t1007 * t1175 + t1172 * t984;
t932 = -t1010 * t1175 + t1172 * t983;
t926 = -t1168 * t985 + t1169 * t986;
t925 = t1168 * t986 + t1169 * t985;
t920 = t1061 * t1172 + t1175 * t941;
t919 = -t1061 * t1175 + t1172 * t941;
t902 = -t1168 * t951 + t1169 * t953;
t901 = -t1168 * t950 + t1169 * t952;
t900 = t1168 * t953 + t1169 * t951;
t899 = t1168 * t952 + t1169 * t950;
t898 = t1020 * t1176 + t1173 * t925;
t897 = t1020 * t1173 - t1176 * t925;
t895 = -qJ(2) * t971 - t1251;
t893 = -qJ(2) * t992 - t1224;
t892 = t1169 * t945 - t1305;
t889 = -t1001 * t1176 + t1173 * t900;
t888 = t1173 * t899 + t1176 * t999;
t887 = -t1001 * t1173 - t1176 * t900;
t886 = t1173 * t999 - t1176 * t899;
t883 = -qJ(2) * t964 - t1208;
t881 = -t1168 * t933 + t1169 * t935;
t880 = -t1168 * t932 + t1169 * t934;
t879 = t1168 * t935 + t1169 * t933;
t878 = t1168 * t934 + t1169 * t932;
t870 = -t1321 * t992 + t1195;
t869 = qJ(2) * t1090 - t1321 * t989 + t1246;
t863 = -t1168 * t919 + t1169 * t920;
t862 = t1168 * t920 + t1169 * t919;
t853 = -t1321 * t964 + t1197;
t852 = qJ(2) * t1089 - t1321 * t963 + t1247;
t851 = t1173 * t879 + t1176 * t982;
t850 = t1173 * t878 + t1176 * t981;
t849 = t1173 * t982 - t1176 * t879;
t848 = t1173 * t981 - t1176 * t878;
t842 = pkin(6) * (t1173 * t874 + t1176 * t976);
t839 = pkin(6) * (t1173 * t867 + t1176 * t966);
t832 = t1173 * t862 + t1176 * t939;
t831 = t1173 * t939 - t1176 * t862;
t827 = pkin(6) * (t1173 * t860 + t1176 * t940);
t825 = -t1321 * t971 + t1198;
t824 = qJ(2) * t1066 - t1321 * t969 + t1248;
t816 = -qJ(2) * t892 - t1260;
t810 = -t1321 * t892 + t1193;
t809 = -qJ(2) * t1078 - t1321 * t891 + t1222;
t804 = -t1168 * t834 + t1169 * t835;
t799 = t1213 + t954;
t797 = -t1233 - t1314;
t791 = t1213 + t1348;
t788 = -t1190 - t1314;
t785 = t1212 + t856;
t783 = -t1168 * t812 + t1169 * t813;
t781 = t1212 + t1349;
t780 = -t1202 - t1335;
t779 = t1215 + t1345;
t778 = -t1203 - t1336;
t777 = t1216 + t1346;
t776 = -t1204 - t1337;
t775 = t1217 + t1347;
t774 = -qJ(2) * t804 - t1229;
t773 = -t1205 - t1335;
t772 = t1218 + t1345;
t771 = -t1206 - t1336;
t770 = t1219 + t1346;
t767 = -t1207 - t1337;
t766 = t1220 + t1347;
t764 = -t1321 * t804 + t1200;
t763 = qJ(2) * t855 - t1321 * t803 + t1249;
t762 = -qJ(2) * t783 - t1188;
t761 = -t1321 * t783 + t1201;
t760 = qJ(2) * t822 - t1321 * t782 + t1250;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1145, 0, -t1146, 0, -t1236, -t1235, -t1226, -pkin(6) * t1226, 0, -t1145, t1146, 0, 0, 0, t1227, t1236, t1235, pkin(6) * t1227 + (-pkin(1) * t1173 + qJ(2) * t1176) * g(3), t1112, -t1142 * t1173 - t1144 * t1176, t1103, -t1112, -t1211, 0, -pkin(6) * t1210 + t1176 * t1063 + t1173 * t1093, -pkin(6) * t1102 + t1062 * t1176 + t1092 * t1173, -pkin(2) * t1276 + t1173 * t1019 - pkin(6) * (-t1173 * t1344 + t1276), t1176 * t965 - t1173 * t949 - pkin(6) * (-t1025 * t1176 - t1109 * t1173), t1173 * t995 + t1253, t1094 * t1176 + t1173 * t970, t1132 * t1176 + t1173 * t988, t1173 * t994 - t1253, t1173 * t987 - t1176 * t1341, qJDD(4) * t1176 + t1017 * t1173, t1176 * t883 - t1173 * t853 - pkin(6) * (t1089 * t1173 - t1176 * t963), t1176 * t893 - t1173 * t870 - pkin(6) * (t1090 * t1173 - t1176 * t989), t1176 * t895 - t1173 * t825 - pkin(6) * (t1066 * t1173 - t1176 * t969), t1176 * t816 - t1173 * t810 - pkin(6) * (-t1078 * t1173 - t1176 * t891), t889, t832, t850, t888, t851, t898, -t1173 * t778 + t1176 * t797 - t1329, -t1173 * t780 + t1176 * t799 - t1328, -t1173 * t776 + t1176 * t785 - t1330, t1176 * t774 - t1173 * t764 - pkin(6) * (t1173 * t855 - t1176 * t803), t889, t832, t850, t888, t851, t898, -t1173 * t771 + t1176 * t788 - t1329, -t1173 * t773 + t1176 * t791 - t1328, -t1173 * t767 + t1176 * t781 - t1330, t1176 * t762 - t1173 * t761 - pkin(6) * (t1173 * t822 - t1176 * t782); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1146, 0, t1145, 0, t1235, -t1236, t1242, pkin(6) * t1242, 0, -t1146, -t1145, 0, 0, 0, t1243, -t1235, t1236, pkin(6) * t1243 + (pkin(1) * t1176 + qJ(2) * t1173) * g(3), -t1111, t1142 * t1176 - t1144 * t1173, t1102, t1111, -t1210, 0, pkin(6) * t1211 + t1173 * t1063 - t1176 * t1093, pkin(6) * t1103 + t1062 * t1173 - t1092 * t1176, -pkin(2) * t1277 - t1176 * t1019 + pkin(6) * (-t1176 * t1344 - t1277), t1173 * t965 + t1176 * t949 + pkin(6) * (t1025 * t1173 - t1109 * t1176), -t1176 * t995 + t1254, t1094 * t1173 - t1176 * t970, t1132 * t1173 - t1176 * t988, -t1176 * t994 - t1254, -t1173 * t1341 - t1176 * t987, qJDD(4) * t1173 - t1017 * t1176, t1173 * t883 + t1176 * t853 + pkin(6) * (t1089 * t1176 + t1173 * t963), t1173 * t893 + t1176 * t870 + pkin(6) * (t1090 * t1176 + t1173 * t989), t1173 * t895 + t1176 * t825 + pkin(6) * (t1066 * t1176 + t1173 * t969), t1173 * t816 + t1176 * t810 + pkin(6) * (-t1078 * t1176 + t1173 * t891), t887, t831, t848, t886, t849, t897, t1173 * t797 + t1176 * t778 + t839, t1173 * t799 + t1176 * t780 + t842, t1173 * t785 + t1176 * t776 + t827, t1173 * t774 + t1176 * t764 + pkin(6) * (t1173 * t803 + t1176 * t855), t887, t831, t848, t886, t849, t897, t1173 * t788 + t1176 * t771 + t839, t1173 * t791 + t1176 * t773 + t842, t1173 * t781 + t1176 * t767 + t827, t1173 * t762 + t1176 * t761 + pkin(6) * (t1173 * t782 + t1176 * t822); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1147, t1148, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1137, t1133, t1079, t1267, t1149, 0, t1268, 0, 0, t1043, t1044, t1003, t948, t997, t972, t991, t996, t990, t1018, t852, t869, t824, t809, t902, t863, t880, t901, t881, t926, t777, t779, t775, t763, t902, t863, t880, t901, t881, t926, t770, t772, t766, t760; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1177, 0, 0, -g(3), -t1147, 0, 0, -qJDD(1), t1177, 0, 0, 0, -t1124, 0, g(3), qJ(2) * g(3), t1151, -t1144, t1159, -t1151, -t1266, 0, t1063, t1062, -t1318, t965, t1280, t1094, t1132, -t1280, -t1341, qJDD(4), t883, t893, t895, t816, -t1001, t939, t981, t999, t982, t1020, t797, t799, t785, t774, -t1001, t939, t981, t999, t982, t1020, t788, t791, t781, t762; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1177, 0, qJDD(1), 0, g(3), 0, -t1148, 0, 0, -t1177, -qJDD(1), 0, 0, 0, -t1118, -g(3), 0, pkin(1) * g(3), -t1150, t1142, t1138, t1150, -t1139, 0, -t1093, -t1092, -t1019, t949, -t995, -t970, -t988, -t994, -t987, -t1017, t853, t870, t825, t810, -t900, -t862, -t878, -t899, -t879, -t925, t778, t780, t776, t764, -t900, -t862, -t878, -t899, -t879, -t925, t771, t773, t767, t761; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1147, t1148, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, t1137, t1133, t1079, t1267, t1149, 0, t1268, 0, 0, t1043, t1044, t1003, t948, t997, t972, t991, t996, t990, t1018, t852, t869, t824, t809, t902, t863, t880, t901, t881, t926, t777, t779, t775, t763, t902, t863, t880, t901, t881, t926, t770, t772, t766, t760; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, 0, 0, 0, 0, 0, -t1124, -t1118, 0, t1267, t1149, 0, t1268, 0, 0, qJ(3) * t1139 - t1273, qJ(3) * t1138 - t1099, qJ(3) * t1141 - t1025, -qJ(3) * t1025, t997, t972, t991, t996, t990, t1018, -qJ(3) * t963 + t1247, -qJ(3) * t989 + t1246, -qJ(3) * t969 + t1248, -qJ(3) * t891 + t1222, t902, t863, t880, t901, t881, t926, t1216, t1215, t1217, -qJ(3) * t803 + t1249, t902, t863, t880, t901, t881, t926, t1219, t1218, t1220, -qJ(3) * t782 + t1250; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), -t1177, 0, 0, 0, t1124, 0, -g(3), 0, -t1151, t1144, -t1159, t1151, t1266, 0, -t1063, -t1062, t1318, -t1320, -t1280, -t1094, -t1132, t1280, t1341, -qJDD(4), t1208, t1224, t1251, t1260, t1001, -t939, -t981, -t999, -t982, -t1020, t1233, -t872 - t1238, -t858 - t1231, t1229, t1001, -t939, -t981, -t999, -t982, -t1020, t1190, -t872 - t1232, -t858 - t1234, t1188; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1177, qJDD(1), 0, 0, 0, t1118, g(3), 0, 0, t1150, -t1142, -t1138, -t1150, t1139, 0, t1093, t1092, t1019, qJ(3) * t1026 + t1319, t995, t970, t988, t994, t987, t1017, qJ(3) * t964 - t1197, qJ(3) * t992 - t1195, qJ(3) * t971 - t1198, qJ(3) * t892 - t1193, t900, t862, t878, t899, t879, t925, t1203, t1202, t1204, qJ(3) * t804 - t1200, t900, t862, t878, t899, t879, t925, t1206, t1205, t1207, qJ(3) * t783 - t1201; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1159, -t1266, -t1151, 0, t1275, 0, 0, -t1109, -t1082, 0, t1057, t1035, t1051, t1055, t1050, t1077, t998, t1014, t918, -pkin(7) * t944, t953, t920, t934, t952, t935, t986, t818, t820, t808, t793, t953, t920, t934, t952, t935, t986, t798, t801, t790, t769; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1159, -t1165 * t1177, -t1266, t1151, 0, t1109, 0, -t1083, 0, t1056, t1033, t1048, t1054, t1047, t1076, t968, t980, t904, t931, t951, t919, t932, t950, t933, t985, t814, t815, t802, t784, t951, t919, t932, t950, t933, t985, t794, t795, t786, t765; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1151, -t1144, t1159, -t1151, -t1266, 0, t1082, t1083, 0, 0, t1280, t1094, t1132, -t1280, -t1341, qJDD(4), t1230, t1252, t1031, t943, -t1001, t939, t981, t999, t982, t1020, t1237, t1238, t1231, t1264, -t1001, t939, t981, t999, t982, t1020, t1194, t1232, t1234, t1199; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1091, -t1089, t1352, t1284, t1113, -t1284, 0, -t1078, t1015, 0, t1002, t941, t983, t1000, t984, t1021, t907, t910, t826, -pkin(8) * t855, t1002, t941, t983, t1000, t984, t1021, t837, t838, t806, t787; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1281, t1090, t1114, t1186, t1087, -t1281, t1078, 0, t1016, 0, t1067, -t1061, -t1010, -t1067, t1007, -t1184, t885, t890, -t1334, -pkin(4) * t855, t1067, -t1061, -t1010, -t1067, t1007, -t1184, t836, t841, t903, t805; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1280, t1094, t1132, -t1280, -t1341, qJDD(4), -t1015, -t1016, 0, 0, -t1001, t939, t981, t999, t982, t1020, t1262, t1263, t1239, t1306, -t1001, t939, t981, t999, t982, t1020, t1209, t1240, t1241, t1214; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1041, -t1006, t1342, -t1074, t1071, t1074, 0, t958, t911, 0, t1041, -t1006, t1342, -t1074, t1071, t1074, -qJ(6) * t1342, t896, t847, qJ(6) * t876; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1287, t1343, t1072, t1040, t1023, -t1287, -t958, 0, t912, 0, t1287, t1343, t1072, t1040, t1023, -t1287, t882, t947, t845, t830; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1067, t1061, t1010, t1067, -t1007, t1184, -t911, -t912, 0, 0, -t1067, t1061, t1010, t1067, -t1007, t1184, t1182, t1196 - 0.2e1 * t1296, -t1316, -t1331; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1041, -t1006, t1342, -t1074, t1071, t1074, 0, t906, t876, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1287, t1343, t1072, t1040, t1023, -t1287, -t906, 0, t884, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1067, t1061, t1010, t1067, -t1007, t1184, -t876, -t884, 0, 0;];
m_new_reg  = t1;
