% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x27]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPPR2_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR2_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR2_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPPR2_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:12:10
% EndTime: 2019-03-09 08:12:22
% DurationCPUTime: 5.30s
% Computational Cost: add. (5161->397), mult. (10259->523), div. (0->0), fcn. (11800->8), ass. (0->322)
t246 = sin(pkin(10));
t252 = cos(qJ(2));
t402 = cos(pkin(9));
t237 = t402 * t252;
t247 = sin(pkin(9));
t250 = sin(qJ(2));
t371 = t247 * t250;
t214 = -t237 + t371;
t426 = t214 * pkin(4);
t421 = -qJ(3) - pkin(7);
t227 = t421 * t252;
t222 = t402 * t227;
t226 = t421 * t250;
t373 = t247 * t226;
t454 = -t222 + t373;
t457 = t454 - t426;
t463 = t246 * t457;
t248 = cos(pkin(10));
t110 = t248 * t457;
t211 = t214 ^ 2;
t218 = t247 * t252 + t250 * t402;
t437 = t218 ^ 2;
t447 = -t437 - t211;
t462 = qJD(3) * t447;
t461 = t447 * qJD(1);
t221 = t402 * t226;
t372 = t247 * t227;
t152 = -t221 - t372;
t424 = t218 * pkin(4);
t117 = t152 + t424;
t460 = t246 * t117;
t111 = t248 * t117;
t251 = cos(qJ(6));
t367 = t251 * t248;
t249 = sin(qJ(6));
t370 = t249 * t246;
t279 = -t367 + t370;
t459 = t279 * t218;
t368 = t251 * t246;
t369 = t249 * t248;
t216 = t368 + t369;
t197 = t216 * qJD(6);
t269 = t368 / 0.2e1 + t369 / 0.2e1;
t256 = (t216 / 0.2e1 + t269) * t218;
t440 = t256 * qJD(1);
t458 = -t197 - t440;
t377 = t216 * t214;
t456 = t377 / 0.2e1;
t244 = t246 ^ 2;
t245 = t248 ^ 2;
t294 = t245 / 0.2e1 + t244 / 0.2e1;
t455 = t214 * t294;
t432 = -t218 / 0.2e1;
t144 = t216 * t432;
t310 = -t252 * pkin(2) - pkin(1);
t276 = -t218 * qJ(4) + t310;
t423 = pkin(3) + qJ(5);
t103 = t214 * t423 + t276;
t52 = -t103 * t246 + t111;
t53 = t103 * t248 + t460;
t285 = t246 * t52 - t248 * t53;
t23 = t285 * t218;
t289 = -t222 / 0.2e1;
t150 = t289 + t222 / 0.2e1;
t236 = pkin(2) * t247 + qJ(4);
t316 = t236 * qJD(2);
t453 = qJD(1) * t150 + t316;
t253 = -t426 / 0.2e1 + t373 / 0.2e1 + t289;
t243 = t250 * pkin(2);
t378 = t214 * qJ(4);
t292 = t243 + t378;
t104 = t218 * t423 + t292;
t55 = t104 * t248 + t463;
t405 = t55 * t246;
t54 = -t104 * t246 + t110;
t406 = t54 * t248;
t271 = -t406 / 0.2e1 - t405 / 0.2e1;
t21 = t253 + t271;
t452 = qJD(1) * t21 + t316;
t320 = t279 * qJD(2);
t438 = t377 * qJD(1);
t451 = t320 - t438;
t433 = -t216 / 0.2e1;
t262 = t433 + t269;
t76 = t262 * t214;
t450 = -qJD(1) * t76 + t320;
t173 = t214 * t367;
t121 = t214 * t370 - t173;
t323 = t216 * qJD(2);
t449 = qJD(1) * t121 + t323;
t296 = t370 / 0.2e1;
t430 = -t279 / 0.2e1;
t287 = t296 + t430;
t435 = -t173 / 0.2e1;
t71 = t214 * t287 + t435;
t448 = qJD(1) * t71 + t323;
t281 = t152 * t218 - t214 * t454;
t446 = qJD(1) * t281;
t239 = -pkin(2) * t402 - pkin(3);
t234 = -qJ(5) + t239;
t376 = t218 * t236;
t444 = qJD(2) * (t214 * t234 + t376);
t443 = qJD(3) * t281;
t255 = t218 * t269 + t144;
t442 = qJD(6) * t255;
t441 = qJD(6) * t256;
t327 = t437 * qJD(1);
t205 = t371 / 0.2e1 - t237 / 0.2e1;
t436 = -t121 / 0.2e1;
t434 = -t214 / 0.2e1;
t431 = t218 / 0.2e1;
t427 = pkin(8) * t218;
t425 = t218 * pkin(3);
t422 = -pkin(8) + t234;
t260 = t218 * pkin(5) + t111 + (-pkin(8) * t214 - t103) * t246;
t133 = t248 * t214;
t38 = pkin(8) * t133 + t53;
t16 = t249 * t38 - t251 * t260;
t309 = -pkin(5) * t248 - pkin(4);
t87 = t214 * t309 + t454;
t9 = -t121 * t87 + t16 * t218;
t420 = qJD(1) * t9;
t419 = qJD(2) * pkin(2);
t174 = t218 * t367;
t123 = t218 * t370 - t174;
t33 = -t214 * pkin(5) + t110 + (-t104 - t427) * t246;
t414 = t251 * t33;
t39 = t248 * t427 + t55;
t415 = t249 * t39;
t86 = t218 * t309 - t152;
t1 = (t414 - t415) * t218 + t16 * t214 + t86 * t121 + t87 * t123;
t418 = t1 * qJD(1);
t17 = t249 * t260 + t251 * t38;
t264 = t216 * t218;
t413 = t251 * t39;
t416 = t249 * t33;
t2 = -(t413 + t416) * t218 + t17 * t214 + t86 * t377 + t87 * t264;
t417 = t2 * qJD(1);
t3 = -t117 * t457 + t52 * t54 + t53 * t55;
t412 = t3 * qJD(1);
t404 = t55 * t248;
t407 = t54 * t246;
t4 = -t23 + (t404 - t407) * t214;
t411 = t4 * qJD(1);
t191 = t422 * t246;
t192 = t422 * t248;
t129 = t191 * t251 + t192 * t249;
t223 = pkin(5) * t246 + t236;
t257 = t129 * t432 + t223 * t456 + t430 * t87;
t274 = -t415 / 0.2e1 + t414 / 0.2e1;
t5 = -t257 + t274;
t410 = t5 * qJD(1);
t409 = t52 * t248;
t408 = t53 * t246;
t128 = t191 * t249 - t192 * t251;
t258 = t128 * t431 + t223 * t436 + t433 * t87;
t275 = -t416 / 0.2e1 - t413 / 0.2e1;
t6 = -t258 + t275;
t403 = t6 * qJD(1);
t10 = -t17 * t218 + t377 * t87;
t401 = qJD(1) * t10;
t13 = -t457 * t214 + (t408 + t409) * t218;
t400 = qJD(1) * t13;
t22 = t285 * t214;
t398 = qJD(1) * t22;
t397 = qJD(1) * t23;
t382 = t123 * t218;
t383 = t121 * t214;
t42 = -t382 + t383;
t396 = qJD(1) * t42;
t43 = -t382 - t383;
t395 = qJD(1) * t43;
t380 = t264 * t218;
t381 = t377 * t214;
t44 = t380 - t381;
t394 = qJD(1) * t44;
t45 = -t380 - t381;
t393 = qJD(1) * t45;
t135 = pkin(3) * t214 + t276;
t136 = t292 + t425;
t56 = -t135 * t218 - t136 * t214;
t392 = qJD(1) * t56;
t57 = t135 * t214 - t136 * t218;
t391 = qJD(1) * t57;
t84 = t447 * t246;
t386 = qJD(1) * t84;
t11 = (t54 - t110) * t218 + (-t52 + t111) * t214;
t385 = t11 * qJD(1);
t12 = (-t55 + t463) * t218 + (t53 - t460) * t214;
t384 = t12 * qJD(1);
t288 = t294 * t218;
t298 = t236 * t434;
t254 = t234 * t288 + t298;
t272 = t407 / 0.2e1 - t404 / 0.2e1;
t15 = t254 + t272;
t379 = t15 * qJD(1);
t90 = t279 * t214;
t24 = t135 * t136;
t374 = t24 * qJD(1);
t187 = t244 * t218;
t188 = t245 * t218;
t132 = t246 * t218;
t29 = -t121 * t264 - t123 * t377;
t364 = t29 * qJD(1);
t37 = t243 * t310;
t363 = t37 * qJD(1);
t240 = t243 / 0.2e1;
t61 = t240 + (pkin(3) / 0.2e1 - t239 / 0.2e1) * t218 + (qJ(4) / 0.2e1 + t236 / 0.2e1) * t214;
t362 = t61 * qJD(1);
t65 = t288 + t187 / 0.2e1 + t188 / 0.2e1;
t361 = t65 * qJD(1);
t72 = -t174 / 0.2e1 + t287 * t218;
t360 = t72 * qJD(1);
t297 = -t370 / 0.2e1;
t73 = t218 * t297 + t174 / 0.2e1 - t459 / 0.2e1;
t67 = t73 * qJD(1);
t78 = t262 * t218;
t357 = t78 * qJD(1);
t79 = 0.2e1 * t144;
t356 = t79 * qJD(1);
t268 = t367 / 0.2e1 + t297;
t80 = (t430 + t268) * t218;
t355 = t80 * qJD(1);
t350 = t244 + t245;
t85 = t350 * t218 * t214;
t354 = t85 * qJD(1);
t352 = t90 * qJD(1);
t346 = qJD(1) * t252;
t345 = qJD(2) * t133;
t344 = qJD(2) * t246;
t343 = qJD(3) * t214;
t342 = qJD(4) * t437;
t341 = qJD(4) * t218;
t340 = qJD(5) * t121;
t339 = qJD(5) * t377;
t338 = qJD(5) * t218;
t337 = qJD(6) * t377;
t105 = -t205 - t455;
t336 = t105 * qJD(1);
t107 = t447 * t248;
t335 = t107 * qJD(1);
t259 = (t247 * t434 + t402 * t432) * pkin(2);
t113 = -t243 / 0.2e1 + t259;
t334 = t113 * qJD(1);
t115 = t121 * qJD(6);
t333 = t133 * qJD(1);
t137 = -t187 - t188;
t332 = t137 * qJD(1);
t138 = t350 * t211;
t331 = t138 * qJD(1);
t328 = t205 * qJD(1);
t326 = t214 * qJD(1);
t325 = t214 * qJD(2);
t324 = t214 * qJD(4);
t322 = t218 * qJD(1);
t321 = t218 * qJD(2);
t203 = t279 * qJD(6);
t225 = -0.1e1 / 0.2e1 - t294;
t319 = t225 * qJD(2);
t318 = t350 * qJD(2);
t235 = -t250 ^ 2 + t252 ^ 2;
t317 = t235 * qJD(1);
t315 = t248 * qJD(2);
t314 = t250 * qJD(2);
t313 = t252 * qJD(2);
t312 = pkin(1) * t250 * qJD(1);
t311 = pkin(1) * t346;
t308 = t121 * t322;
t307 = t264 * t322;
t306 = t459 * t322;
t305 = t135 * t322;
t304 = t246 * t327;
t303 = t246 * t325;
t302 = t246 * t326;
t301 = t214 * t322;
t300 = t248 * t327;
t299 = t250 * t346;
t98 = t377 * t322;
t293 = qJD(2) * t73 + t98;
t291 = qJD(2) * t223 + qJD(5);
t290 = t248 * t301;
t286 = -t115 - t308;
t284 = t405 + t406;
t28 = t121 * t216 + t279 * t377;
t36 = t121 ^ 2 - t377 ^ 2;
t283 = qJD(1) * t36 + qJD(2) * t28;
t114 = t216 ^ 2 - t279 ^ 2;
t278 = qJD(1) * t28 + qJD(2) * t114;
t157 = t350 * t234;
t263 = t221 / 0.2e1 - t424 / 0.2e1 + t372 / 0.2e1;
t273 = t409 / 0.2e1 + t408 / 0.2e1;
t18 = t263 + t273;
t277 = -qJD(1) * t18 - qJD(2) * t157;
t270 = qJD(2) * t72 + t337 + t98;
t41 = -t279 * t436 + t377 * t433;
t267 = -qJD(2) * t41 + t121 * t438;
t266 = -qJD(1) * t41 - t216 * t320;
t265 = qJD(6) * t205 + t301;
t228 = t236 * qJD(4);
t224 = 0.1e1 / 0.2e1 - t294;
t199 = t218 * qJD(3);
t189 = t205 * qJD(2);
t147 = t90 / 0.2e1;
t120 = 0.2e1 * t289 + t373;
t112 = t240 + t259;
t106 = -t205 + t455;
t91 = t147 - t90 / 0.2e1;
t83 = t459 / 0.2e1 + t268 * t218;
t75 = t214 * t269 + t456;
t70 = t214 * t296 + t147 + t435;
t69 = t72 * qJD(6);
t68 = t73 * qJD(6);
t62 = t298 + t239 * t431 + t240 + t378 / 0.2e1 + t425 / 0.2e1;
t58 = t203 - t67;
t40 = t41 * qJD(6);
t25 = t28 * qJD(6);
t20 = t253 - t271;
t19 = t263 - t273;
t14 = t254 - t272;
t8 = t257 + t274;
t7 = t258 + t275;
t26 = [0, 0, 0, t250 * t313, t235 * qJD(2), 0, 0, 0, -pkin(1) * t314, -pkin(1) * t313, -t462, qJD(2) * t37 + t443, -t462, qJD(2) * t56 + t218 * t324, qJD(2) * t57 + t342, qJD(2) * t24 - t135 * t341 + t443, t11 * qJD(2) - t107 * qJD(3) + (-qJD(5) * t214 + t341) * t132, t12 * qJD(2) + t84 * qJD(3) + (-t214 * t338 + t342) * t248, qJD(2) * t4 - qJD(4) * t85 + qJD(5) * t138, qJD(2) * t3 + qJD(3) * t13 + qJD(4) * t23 - qJD(5) * t22 (qJD(2) * t264 - t115) * t377, qJD(2) * t29 + qJD(6) * t36, qJD(2) * t44 - t115 * t218, qJD(2) * t42 - t218 * t337, -t214 * t321, t1 * qJD(2) + t43 * qJD(3) + t10 * qJD(6) + (qJD(4) * t264 - t339) * t218, t2 * qJD(2) + t45 * qJD(3) + t9 * qJD(6) + (-qJD(4) * t459 + t340) * t218; 0, 0, 0, t299, t317, t313, -t314, 0, -pkin(7) * t313 - t312, pkin(7) * t314 - t311 (t214 * t402 - t218 * t247) * t419, t363 + (-t152 * t247 - t402 * t454) * t419 + t112 * qJD(3) (-t214 * t239 - t376) * qJD(2) - t324, qJD(2) * t454 + t392, -qJD(2) * t152 + t391, t374 + (-t152 * t236 + t239 * t454) * qJD(2) + t62 * qJD(3) + t120 * qJD(4), -t117 * t344 + t385 - t133 * qJD(4) + (-t338 - t444) * t248, -t117 * t315 + t384 + t132 * qJD(5) + (t324 + t444) * t246, -qJD(2) * t284 + t411, t412 + (-t117 * t236 + t234 * t284) * qJD(2) + t14 * qJD(3) + t20 * qJD(4) + t19 * qJD(5), -t264 * t451 + t40, t364 + (t123 * t279 - t216 * t264) * qJD(2) + t25, t214 * t320 + t394 + t442, t214 * t323 + t396 - t69, -t265, t418 + (t123 * t223 + t128 * t214 + t216 * t86) * qJD(2) + t70 * qJD(4) - t73 * qJD(5) + t8 * qJD(6), t417 + (t129 * t214 + t223 * t264 - t279 * t86) * qJD(2) + t91 * qJD(3) + t75 * qJD(4) - t79 * qJD(5) + t7 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t461, qJD(2) * t112 + t446, -t461, 0, 0, qJD(2) * t62 + t446, -t335, t386, 0, qJD(2) * t14 + qJD(5) * t106 + t400, 0, 0, 0, 0, 0, -t69 + t395, qJD(2) * t91 - qJD(6) * t78 + t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t325, t301, t327, qJD(2) * t120 - t305, t304 - t345, t300 + t303, -t354, qJD(2) * t20 + t397, 0, 0, 0, 0, 0, qJD(2) * t70 + t307 + t442, qJD(2) * t75 + qJD(6) * t83 - t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-t302 - t315) * t218, qJD(2) * t132 - t290, t331, qJD(2) * t19 + qJD(3) * t106 - t398, 0, 0, 0, 0, 0, -t293, -qJD(2) * t79 + t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t267, t283, qJD(2) * t255 + t286, -t270, -t189, qJD(2) * t8 - qJD(3) * t72 + qJD(4) * t255 - qJD(6) * t17 + t401, qJD(2) * t7 - qJD(3) * t78 + qJD(4) * t83 + qJD(6) * t16 + t420; 0, 0, 0, -t299, -t317, 0, 0, 0, t312, t311, 0, qJD(3) * t113 - t363, 0, t199 - t392, -t343 - t391, -qJD(3) * t61 + qJD(4) * t150 - t374, -t246 * t343 - t385, -qJD(3) * t133 - t384, qJD(3) * t137 - t411, qJD(3) * t15 + qJD(4) * t21 - qJD(5) * t18 - t412, -t264 * t438 + t40, t25 - t364, -t394 - t441, -t68 - t396, t265, -qJD(3) * t377 + qJD(4) * t71 - qJD(5) * t72 - qJD(6) * t5 - t418, qJD(3) * t90 + qJD(4) * t76 - qJD(5) * t78 - qJD(6) * t6 - t417; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t228, qJD(4) * t246, qJD(4) * t248, t350 * qJD(5), -qJD(5) * t157 + t228, t216 * t203, t114 * qJD(6), 0, 0, 0, qJD(4) * t216 - t203 * t223, -qJD(4) * t279 - t197 * t223; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t334, 0, t322, -t326, -t362, -t302, -t333, t332, t379, 0, 0, 0, 0, 0, -t438, t352; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t453, t344, t315, 0, qJD(5) * t224 + t452, 0, 0, 0, 0, 0, t448, -t450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t318, qJD(4) * t224 + t277, 0, 0, 0, 0, 0, -t360, -t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t266, t278, t458, t58, t328, -qJD(6) * t129 - t223 * t320 - t410, qJD(6) * t128 - t223 * t323 - t403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t461, -qJD(2) * t113 - t446, t461, -t321, t325, qJD(2) * t61 - t341 - t446, t303 + t335, t345 - t386, -t137 * qJD(2), -qJD(2) * t15 - qJD(4) * t65 - qJD(5) * t105 - t400, 0, 0, 0, 0, 0, qJD(2) * t377 - t395 - t68, -qJD(2) * t90 - qJD(6) * t79 - t393; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t334, 0, -t322, t326, t362, t302, t333, -t332, -t379, 0, 0, 0, 0, 0, t438, -t352; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322, 0, 0, 0, -t361, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t336, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t58, t197 - t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t301, -t327, -qJD(2) * t150 + t199 + t305, -t304, -t300, t354, -qJD(2) * t21 + qJD(3) * t65 - t397, 0, 0, 0, 0, 0, -qJD(2) * t71 - t307 - t441, -qJD(2) * t76 - qJD(6) * t80 + t306; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t453, -t344, -t315, 0, qJD(5) * t225 - t452, 0, 0, 0, 0, 0, -t448, t450; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t322, 0, 0, 0, t361, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t319, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t458, t203 - t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t246 * t301, t290, -t331, qJD(2) * t18 + qJD(3) * t105 + t398, 0, 0, 0, 0, 0, t270, qJD(2) * t78 + t286; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t318, -qJD(4) * t225 - t277, 0, 0, 0, 0, 0, -t203 + t360, -t197 + t357; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t336, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t319, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t451, -t449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t267, -t283, qJD(2) * t256 + t308, t293, -t189, qJD(2) * t5 + qJD(3) * t73 + qJD(4) * t256 - t339 - t401, qJD(2) * t6 + qJD(3) * t79 + qJD(4) * t80 + t340 - t420; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t266, -t278, t440, t67, -t328, t279 * t291 + t410, t216 * t291 + t403; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t67, t356; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t440, t355; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t451, t449; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t26;
