% Calculate inertial parameters regressor of joint inertia matrix time derivative for
% S6RRPPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta3,theta5]';
% 
% Output:
% MMD_reg [((6+1)*6/2)x(6*10)]
%   inertial parameter regressor of inerta matrix time derivative
%   (only lower left triangular matrix (including diagonal) due to symmetry

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MMD_reg = S6RRPPPR2_inertiaDJ_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR2_inertiaDJ_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR2_inertiaDJ_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPPR2_inertiaDJ_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From inertiaD_joint_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:12:07
% EndTime: 2019-03-09 08:12:13
% DurationCPUTime: 2.19s
% Computational Cost: add. (3280->202), mult. (7080->368), div. (0->0), fcn. (6874->8), ass. (0->116)
t143 = sin(qJ(6));
t118 = qJD(6) * t143;
t144 = cos(qJ(6));
t119 = qJD(6) * t144;
t74 = sin(pkin(10));
t75 = cos(pkin(10));
t54 = -t74 * t118 + t75 * t119;
t56 = t143 * t75 + t144 * t74;
t141 = t56 * t54;
t53 = t56 * qJD(6);
t120 = t143 * t74;
t121 = t144 * t75;
t58 = t121 - t120;
t38 = t58 * t53;
t106 = 0.2e1 * t38 - 0.2e1 * t141;
t131 = sin(pkin(9));
t132 = cos(pkin(9));
t76 = sin(qJ(2));
t77 = cos(qJ(2));
t99 = -t131 * t77 - t132 * t76;
t146 = t99 * qJD(2);
t55 = t131 * t76 - t132 * t77;
t89 = -0.2e1 * t146 * t55;
t52 = qJD(2) * t55;
t85 = t146 * t99 - t52 * t55;
t136 = -qJ(3) - pkin(7);
t115 = qJD(2) * t136;
t100 = t77 * qJD(3) + t76 * t115;
t101 = -t76 * qJD(3) + t77 * t115;
t28 = t131 * t100 - t132 * t101;
t29 = t132 * t100 + t131 * t101;
t62 = t136 * t76;
t63 = t136 * t77;
t40 = -t131 * t63 - t132 * t62;
t41 = t131 * t62 - t132 * t63;
t150 = 0.2e1 * t146 * t41 - 0.2e1 * t28 * t99 - 0.2e1 * t29 * t55 - 0.2e1 * t40 * t52;
t148 = 0.2e1 * t85;
t72 = t74 ^ 2;
t73 = t75 ^ 2;
t61 = (t72 + t73) * qJD(5);
t70 = -t132 * pkin(2) - pkin(3);
t66 = -qJ(5) + t70;
t145 = -pkin(8) + t66;
t140 = t74 * t52;
t139 = t74 * t55;
t49 = t75 * t52;
t138 = t75 * t55;
t137 = pkin(3) + qJ(5);
t86 = t143 * t146;
t87 = t144 * t146;
t16 = t118 * t138 + t119 * t139 - t74 * t86 + t75 * t87;
t31 = t58 * t55;
t135 = -t58 * t16 - t53 * t31;
t103 = -pkin(4) * t99 + t40;
t71 = -t77 * pkin(2) - pkin(1);
t105 = qJ(4) * t99 + t71;
t96 = t137 * t55 + t105;
t14 = t74 * t103 + t75 * t96;
t130 = qJD(4) * t74;
t129 = qJD(4) * t75;
t128 = qJD(5) * t99;
t67 = t131 * pkin(2) + qJ(4);
t127 = t67 * qJD(4);
t126 = t76 * qJD(2);
t125 = t77 * qJD(2);
t36 = 0.2e1 * t99 * t52;
t124 = -0.2e1 * pkin(1) * qJD(2);
t123 = pkin(2) * t126;
t122 = t76 * t125;
t112 = t145 * t143;
t24 = -pkin(3) * t146 + t52 * qJ(4) + qJD(4) * t99 + t123;
t80 = -qJ(5) * t146 + t55 * qJD(5) + t24;
t84 = -t52 * pkin(4) + t28;
t8 = -t74 * t80 + t75 * t84;
t9 = t74 * t84 + t75 * t80;
t3 = t9 * t74 + t8 * t75;
t15 = -t54 * t55 + t74 * t87 + t75 * t86;
t32 = t56 * t55;
t111 = -t58 * t15 - t32 * t53;
t110 = -t56 * t15 + t32 * t54;
t109 = t56 * t16 - t54 * t31;
t108 = t40 * t28 + t41 * t29;
t18 = -t58 * t52 + t53 * t99;
t19 = t56 * t52 + t54 * t99;
t107 = t145 * t121;
t98 = t75 * t103;
t11 = pkin(8) * t138 + t14;
t91 = t74 * t146;
t78 = -t52 * pkin(5) + pkin(8) * t91 + t8;
t90 = t75 * t146;
t79 = -pkin(8) * t90 + t9;
t83 = -t74 * t105 + t98 - t99 * pkin(5) + (-pkin(8) - t137) * t139;
t82 = t144 * t83;
t1 = -qJD(6) * t82 + t11 * t118 - t143 * t78 - t144 * t79;
t81 = t143 * t83;
t2 = -qJD(6) * t81 - t11 * t119 - t143 * t79 + t144 * t78;
t4 = -t143 * t11 + t82;
t5 = t144 * t11 + t81;
t97 = -t1 * t56 + t2 * t58 - t4 * t53 + t5 * t54;
t51 = t145 * t74;
t22 = t56 * qJD(5) - qJD(6) * t107 + t51 * t118;
t23 = -t51 * t119 + qJD(5) * t120 + (-t144 * qJD(5) - qJD(6) * t112) * t75;
t33 = -t143 * t51 + t107;
t34 = t75 * t112 + t144 * t51;
t95 = t22 * t56 - t23 * t58 + t33 * t53 - t34 * t54;
t92 = t72 * t146;
t88 = t74 * t90;
t21 = pkin(4) * t146 + t29;
t60 = t74 * pkin(5) + t67;
t48 = t73 * t146;
t35 = t55 * pkin(3) + t105;
t30 = -t55 * pkin(4) + t41;
t20 = (-pkin(5) * t75 - pkin(4)) * t55 + t41;
t17 = pkin(5) * t90 + t21;
t13 = -t74 * t96 + t98;
t6 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t122, 0.2e1 * (-t76 ^ 2 + t77 ^ 2) * qJD(2), 0, -0.2e1 * t122, 0, 0, t76 * t124, t77 * t124, 0, 0, t36, -0.2e1 * t85, 0, t89, 0, 0, 0.2e1 * t55 * t123 - 0.2e1 * t146 * t71, -0.2e1 * t123 * t99 - 0.2e1 * t71 * t52, t150, 0.2e1 * t71 * t123 + 0.2e1 * t108, 0, 0, 0, t36, -0.2e1 * t85, t89, t150, 0.2e1 * t146 * t35 - 0.2e1 * t24 * t55, 0.2e1 * t24 * t99 + 0.2e1 * t35 * t52, 0.2e1 * t35 * t24 + 0.2e1 * t108, t72 * t89, -0.4e1 * t55 * t88, t74 * t148, t73 * t89, t75 * t148, t36, -0.2e1 * t13 * t52 - 0.2e1 * t21 * t138 + 0.2e1 * t30 * t90 - 0.2e1 * t8 * t99, 0.2e1 * t21 * t139 + 0.2e1 * t14 * t52 - 0.2e1 * t30 * t91 + 0.2e1 * t9 * t99, 0.2e1 * t13 * t91 + 0.2e1 * t9 * t138 - 0.2e1 * t8 * t139 - 0.2e1 * t14 * t90, 0.2e1 * t13 * t8 + 0.2e1 * t14 * t9 + 0.2e1 * t30 * t21, -0.2e1 * t32 * t15, -0.2e1 * t15 * t31 - 0.2e1 * t32 * t16, 0.2e1 * t15 * t99 - 0.2e1 * t32 * t52, -0.2e1 * t31 * t16, 0.2e1 * t16 * t99 - 0.2e1 * t31 * t52, t36, 0.2e1 * t20 * t16 - 0.2e1 * t17 * t31 - 0.2e1 * t2 * t99 - 0.2e1 * t4 * t52, -0.2e1 * t1 * t99 - 0.2e1 * t20 * t15 + 0.2e1 * t17 * t32 + 0.2e1 * t5 * t52, -0.2e1 * t1 * t31 + 0.2e1 * t4 * t15 - 0.2e1 * t5 * t16 - 0.2e1 * t2 * t32, -0.2e1 * t5 * t1 + 0.2e1 * t20 * t17 + 0.2e1 * t4 * t2; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t125, 0, -t126, 0, -pkin(7) * t125, pkin(7) * t126, 0, 0, 0, 0, -t52, 0, t146, 0, -t28, -t29 (t131 * t146 + t132 * t52) * pkin(2) (t131 * t29 - t132 * t28) * pkin(2), 0, t52, -t146, 0, 0, 0, -qJD(4) * t55 + t146 * t67 - t70 * t52, t28, t29, t41 * qJD(4) + t28 * t70 + t29 * t67, -t88, -t48 + t92, -t49, t88, t140, 0, t75 * t128 - t55 * t129 + t21 * t74 - t66 * t49 + t67 * t90, -t74 * t128 + t55 * t130 + t66 * t140 + t21 * t75 - t67 * t91, -t3, t30 * qJD(4) + t21 * t67 + t3 * t66 + (-t13 * t75 - t14 * t74) * qJD(5), t111, -t110 + t135, t18, t109, t19, 0, -qJD(4) * t31 + t60 * t16 + t17 * t56 + t20 * t54 - t23 * t99 - t33 * t52, qJD(4) * t32 - t60 * t15 + t17 * t58 - t20 * t53 - t22 * t99 + t34 * t52, t33 * t15 - t34 * t16 - t22 * t31 - t23 * t32 - t97, t20 * qJD(4) - t1 * t34 + t17 * t60 + t2 * t33 - t5 * t22 + t4 * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * qJD(4), 0.2e1 * t127, 0, 0, 0, 0, 0, 0, 0.2e1 * t130, 0.2e1 * t129, 0.2e1 * t61, -0.2e1 * t66 * t61 + 0.2e1 * t127, -0.2e1 * t38, 0.2e1 * t53 * t56 - 0.2e1 * t58 * t54, 0, 0.2e1 * t141, 0, 0, 0.2e1 * qJD(4) * t56 + 0.2e1 * t60 * t54, 0.2e1 * qJD(4) * t58 - 0.2e1 * t60 * t53, 0.2e1 * t95, 0.2e1 * t60 * qJD(4) - 0.2e1 * t34 * t22 + 0.2e1 * t33 * t23; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t146, -t52, 0, t123, 0, 0, 0, 0, 0, 0, 0, t146, t52, t24, 0, 0, 0, 0, 0, 0, t140, t49, -t48 - t92, -t8 * t74 + t9 * t75, 0, 0, 0, 0, 0, 0, t19, -t18, t110 + t135, -t1 * t58 - t2 * t56 - t4 * t54 - t5 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t22 * t58 - t23 * t56 - t33 * t54 - t34 * t53; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t52, 0, 0, t28, 0, 0, 0, 0, 0, 0, -t49, t140, 0, t3, 0, 0, 0, 0, 0, 0, t18, t19, -t109 - t111, t97; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t61, 0, 0, 0, 0, 0, 0, 0, 0, t106, -t95; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t106; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t90, -t91, 0, t21, 0, 0, 0, 0, 0, 0, t16, -t15, 0, t17; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), 0, 0, 0, 0, 0, 0, t54, -t53, 0, qJD(4); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t15, 0, -t16, -t52, t2, t1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, 0, -t54, 0, t23, t22, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t54, t53, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t53, -t54, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
MMD_reg  = t6;
