% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRPPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta3,theta5]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRPPPR2_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR2_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR2_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPPR2_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:12:07
% EndTime: 2019-03-09 08:12:19
% DurationCPUTime: 4.86s
% Computational Cost: add. (7344->407), mult. (18489->535), div. (0->0), fcn. (13588->8), ass. (0->223)
t191 = sin(pkin(9));
t195 = sin(qJ(2));
t244 = qJD(1) * qJD(2);
t235 = t195 * t244;
t171 = t191 * t235;
t193 = cos(pkin(9));
t196 = cos(qJ(2));
t234 = t196 * t244;
t137 = t193 * t234 - t171;
t162 = t191 * t196 + t193 * t195;
t205 = qJD(1) * t162;
t139 = qJD(6) + t205;
t190 = sin(pkin(10));
t192 = cos(pkin(10));
t194 = sin(qJ(6));
t297 = cos(qJ(6));
t163 = -t194 * t190 + t297 * t192;
t209 = -t297 * t190 - t194 * t192;
t154 = t209 * qJD(6);
t322 = t209 * t205 + t154;
t312 = t163 * t137 + t139 * t322;
t150 = t162 * qJD(2);
t136 = qJD(1) * t150;
t262 = t193 * t196;
t237 = qJD(1) * t262;
t250 = qJD(1) * t195;
t148 = t191 * t250 - t237;
t176 = pkin(2) * t235;
t231 = -t137 * qJ(4) + t176;
t208 = -qJD(4) * t205 + t231;
t290 = pkin(3) + qJ(5);
t34 = t148 * qJD(5) + t290 * t136 + t208;
t288 = -qJ(3) - pkin(7);
t233 = qJD(2) * t288;
t140 = t196 * qJD(3) + t195 * t233;
t131 = t140 * qJD(1);
t141 = -t195 * qJD(3) + t196 * t233;
t132 = t141 * qJD(1);
t78 = t191 * t131 - t193 * t132;
t47 = t137 * pkin(4) - qJD(2) * qJD(5) + t78;
t45 = t192 * t47;
t12 = t137 * pkin(5) + t45 + (-pkin(8) * t136 - t34) * t190;
t16 = t190 * t47 + t192 * t34;
t264 = t192 * t136;
t13 = pkin(8) * t264 + t16;
t117 = t192 * qJD(2) + t190 * t148;
t180 = -t196 * pkin(2) - pkin(1);
t251 = qJD(1) * t180;
t168 = qJD(3) + t251;
t201 = -qJ(4) * t205 + t168;
t55 = t290 * t148 + t201;
t170 = t288 * t196;
t166 = qJD(1) * t170;
t156 = t191 * t166;
t169 = t288 * t195;
t165 = qJD(1) * t169;
t159 = qJD(2) * pkin(2) + t165;
t102 = t193 * t159 + t156;
t221 = qJD(4) - t102;
t292 = t205 * pkin(4);
t59 = -t290 * qJD(2) + t221 + t292;
t25 = -t190 * t55 + t192 * t59;
t18 = pkin(5) * t205 - t117 * pkin(8) + t25;
t115 = t190 * qJD(2) - t192 * t148;
t26 = t190 * t59 + t192 * t55;
t19 = -t115 * pkin(8) + t26;
t210 = -t297 * t18 + t194 * t19;
t1 = -qJD(6) * t210 + t194 * t12 + t297 * t13;
t6 = t194 * t18 + t297 * t19;
t2 = -qJD(6) * t6 + t297 * t12 - t194 * t13;
t236 = qJD(6) * t297;
t247 = qJD(6) * t194;
t155 = -t190 * t247 + t192 * t236;
t319 = t163 * t205 + t155;
t321 = -t1 * t209 + t2 * t163 - t210 * t322 + t319 * t6;
t224 = t163 * t136;
t68 = -t194 * t115 + t297 * t117;
t32 = qJD(6) * t68 - t224;
t65 = t297 * t115 + t194 * t117;
t320 = -t209 * t32 + t319 * t65;
t226 = t209 * t137 - t139 * t319;
t31 = t115 * t236 + t117 * t247 + t209 * t136;
t318 = -t163 * t31 + t322 * t68;
t316 = t65 ^ 2;
t315 = t68 ^ 2;
t314 = t65 * t139;
t300 = t205 ^ 2;
t308 = -t192 * t137 + t190 * t300;
t311 = -0.2e1 * t244;
t106 = t137 * t162;
t248 = qJD(2) * t195;
t153 = qJD(2) * t262 - t191 * t248;
t52 = t153 * t205 + t106;
t309 = 0.2e1 * t205;
t301 = t148 ^ 2;
t307 = -t301 - t300;
t306 = -t301 + t300;
t110 = t193 * t165 + t156;
t305 = qJD(4) - t110;
t304 = -t209 * t31 - t319 * t68;
t179 = -t193 * pkin(2) - pkin(3);
t175 = -qJ(5) + t179;
t177 = t191 * pkin(2) + qJ(4);
t268 = t177 * t136;
t293 = t148 * pkin(4);
t263 = t193 * t166;
t103 = t191 * t159 - t263;
t99 = -qJD(2) * qJ(4) - t103;
t71 = qJD(5) - t99 - t293;
t303 = -t137 * t175 + (qJD(5) - t71) * t205 + t268;
t213 = -t190 * t137 - t192 * t300;
t302 = qJD(2) * (-t148 + t237) - t171;
t181 = pkin(2) * t250;
t230 = t148 * qJ(4) + t181;
t60 = t205 * t290 + t230;
t109 = t191 * t165 - t263;
t80 = t109 - t293;
t76 = t192 * t80;
t22 = -t148 * pkin(5) + t76 + (-pkin(8) * t205 - t60) * t190;
t295 = pkin(8) * t192;
t30 = t190 * t80 + t192 * t60;
t23 = t205 * t295 + t30;
t289 = -pkin(8) + t175;
t146 = t289 * t190;
t147 = t289 * t192;
t97 = -t194 * t146 + t297 * t147;
t299 = qJD(5) * t209 + qJD(6) * t97 - t194 * t22 - t297 * t23;
t98 = t297 * t146 + t194 * t147;
t298 = qJD(5) * t163 + qJD(6) * t98 - t194 * t23 + t297 * t22;
t296 = pkin(2) * t195;
t294 = t136 * pkin(3);
t291 = t68 * t65;
t160 = t191 * t195 - t262;
t182 = pkin(2) * t248;
t207 = -t153 * qJ(4) - t162 * qJD(4) + t182;
t39 = t160 * qJD(5) + t290 * t150 + t207;
t90 = t191 * t140 - t193 * t141;
t62 = t153 * pkin(4) + t90;
t21 = t190 * t62 + t192 * t39;
t212 = -t162 * qJ(4) + t180;
t77 = t290 * t160 + t212;
t113 = -t193 * t169 - t191 * t170;
t92 = t162 * pkin(4) + t113;
t36 = t190 * t92 + t192 * t77;
t287 = t148 * t65;
t283 = t68 * t148;
t282 = t78 * t113;
t82 = t148 * pkin(3) + t201;
t281 = t82 * t205;
t276 = t115 * t190;
t275 = t117 * t148;
t274 = t117 * t190;
t273 = t117 * t192;
t272 = t148 * t115;
t271 = t148 * t205;
t270 = t150 * t192;
t267 = t190 ^ 2 * t136;
t125 = t192 ^ 2 * t136;
t198 = qJD(1) ^ 2;
t259 = t196 * t198;
t197 = qJD(2) ^ 2;
t258 = t197 * t195;
t257 = t197 * t196;
t241 = -pkin(5) * t192 - pkin(4);
t256 = -t205 * t241 + t305;
t255 = t292 + t305;
t79 = t193 * t131 + t191 * t132;
t252 = t195 ^ 2 - t196 ^ 2;
t249 = qJD(2) * t150;
t246 = t153 * qJD(2);
t243 = t195 * t259;
t186 = qJD(2) * qJD(4);
t242 = t186 + t79;
t232 = pkin(1) * t311;
t229 = -t163 * t32 - t322 * t65;
t227 = t195 * t234;
t222 = t110 * qJD(2) - t79;
t15 = -t190 * t34 + t45;
t220 = t15 * t192 + t16 * t190;
t219 = -t190 * t26 - t192 * t25;
t218 = -t273 + t276;
t217 = -t115 * t205 + t190 * t136;
t216 = -t117 * t205 + t264;
t214 = t136 * t160 + t148 * t150;
t91 = t193 * t140 + t191 * t141;
t114 = t191 * t169 - t193 * t170;
t48 = -t136 * pkin(4) + t242;
t88 = t192 * t92;
t24 = t162 * pkin(5) + t88 + (-pkin(8) * t160 - t77) * t190;
t28 = t160 * t295 + t36;
t9 = -t194 * t28 + t297 * t24;
t10 = t194 * t24 + t297 * t28;
t206 = -t109 * qJD(2) + t78;
t93 = -t160 * pkin(4) + t114;
t204 = t136 * t93 + t150 * t71 + t160 * t48;
t203 = t162 * t136 + t137 * t160 + t150 * t205;
t100 = -t171 + (t148 + t237) * qJD(2);
t37 = t241 * t136 + t242;
t200 = -t153 * t148 - t203;
t199 = t113 * t137 - t114 * t136 - t91 * t148 + t78 * t162 + t205 * t90;
t167 = t190 * pkin(5) + t177;
t101 = t160 * pkin(3) + t212;
t96 = t209 * t160;
t95 = t163 * t160;
t94 = -qJD(2) * pkin(3) + t221;
t89 = pkin(3) * t205 + t230;
t72 = t150 * pkin(3) + t207;
t63 = -t150 * pkin(4) + t91;
t61 = t241 * t160 + t114;
t58 = t192 * t62;
t51 = t208 + t294;
t43 = t241 * t150 + t91;
t42 = t115 * pkin(5) + t71;
t41 = -t163 * t150 - t160 * t154;
t40 = t209 * t150 - t155 * t160;
t35 = -t190 * t77 + t88;
t29 = -t190 * t60 + t76;
t20 = -t190 * t39 + t58;
t17 = pkin(8) * t270 + t21;
t14 = t153 * pkin(5) + t58 + (-pkin(8) * t150 - t39) * t190;
t4 = -t10 * qJD(6) + t297 * t14 - t194 * t17;
t3 = t9 * qJD(6) + t194 * t14 + t297 * t17;
t5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t227, t252 * t311, t257, -0.2e1 * t227, -t258, 0, -pkin(7) * t257 + t195 * t232, pkin(7) * t258 + t196 * t232, 0, 0, t52, t200, t246, t214, -t249, 0, t180 * t136 + t168 * t150 + (-t90 + (qJD(1) * t160 + t148) * t296) * qJD(2), t180 * t137 + t168 * t153 + (t309 * t296 - t91) * qJD(2), -t102 * t153 - t103 * t150 - t79 * t160 + t199, -t102 * t90 + t103 * t91 + t282 + t79 * t114 + (t168 + t251) * t182, 0, -t246, t249, t52, t200, t214, t99 * t150 + t94 * t153 - t160 * t242 + t199, t90 * qJD(2) - t101 * t136 - t72 * t148 - t82 * t150 - t51 * t160, t91 * qJD(2) - t101 * t137 - t82 * t153 - t51 * t162 - t205 * t72, t51 * t101 + t114 * t242 + t82 * t72 + t94 * t90 - t99 * t91 + t282, t150 * t274 + t160 * t267, 0.2e1 * t160 * t190 * t264 - t150 * t218, t117 * t153 + t190 * t203, -t115 * t270 + t125 * t160, -t115 * t153 + t192 * t203, t52, t63 * t115 + t35 * t137 + t15 * t162 + t25 * t153 - t192 * t204 + t20 * t205, t63 * t117 - t36 * t137 - t26 * t153 - t16 * t162 + t190 * t204 - t205 * t21, -t21 * t115 - t20 * t117 + (t136 * t36 + t150 * t26 + t16 * t160) * t192 + (-t136 * t35 - t15 * t160 - t150 * t25) * t190, t15 * t35 + t16 * t36 + t25 * t20 + t26 * t21 + t48 * t93 + t71 * t63, t31 * t96 - t68 * t40, -t31 * t95 + t96 * t32 + t40 * t65 - t68 * t41, -t96 * t137 - t40 * t139 + t68 * t153 - t31 * t162, -t32 * t95 + t65 * t41, t95 * t137 - t41 * t139 - t65 * t153 - t32 * t162, t139 * t153 + t106, t9 * t137 + t4 * t139 - t153 * t210 + t2 * t162 + t61 * t32 - t37 * t95 + t42 * t41 + t43 * t65, -t1 * t162 - t10 * t137 - t3 * t139 - t6 * t153 - t61 * t31 - t37 * t96 - t42 * t40 + t43 * t68, t1 * t95 - t10 * t32 + t2 * t96 - t210 * t40 - t3 * t65 + t9 * t31 - t4 * t68 - t6 * t41, t1 * t10 + t2 * t9 - t210 * t4 + t6 * t3 + t37 * t61 + t42 * t43; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t243, t252 * t198, 0, t243, 0, 0, t198 * pkin(1) * t195, pkin(1) * t259, 0, 0, t271, t306, t100, -t271, 0, 0, -t148 * t181 - t168 * t205 - t206, t168 * t148 - t181 * t205 + t222 (t103 - t109) * t205 + (-t102 + t110) * t148 + (-t136 * t191 - t137 * t193) * pkin(2), t102 * t109 - t103 * t110 + (-t168 * t250 + t191 * t79 - t193 * t78) * pkin(2), 0, -t100, 0, t271, t306, -t271, -t268 + t179 * t137 + (-t109 - t99) * t205 + (t94 - t305) * t148, t89 * t148 + t206 + t281, -t82 * t148 + t205 * t89 + 0.2e1 * t186 - t222, -t94 * t109 + t177 * t242 + t78 * t179 - t305 * t99 - t82 * t89, t216 * t190, t205 * t218 + t125 - t267, t275 - t308, -t217 * t192, t213 - t272, t271, t255 * t115 + t25 * t148 + t48 * t190 - t303 * t192 - t205 * t29, t255 * t117 - t26 * t148 + t303 * t190 + t48 * t192 + t205 * t30, t30 * t115 + t29 * t117 + (qJD(5) * t117 - t205 * t26 - t15) * t192 + (qJD(5) * t115 + t205 * t25 - t16) * t190, qJD(5) * t219 + t175 * t220 + t48 * t177 - t25 * t29 + t255 * t71 - t26 * t30, t318, t229 + t304, t283 + t312, t320, t226 - t287, t139 * t148, t97 * t137 - t298 * t139 - t148 * t210 + t167 * t32 - t209 * t37 + t256 * t65 + t319 * t42, -t98 * t137 - t299 * t139 - t6 * t148 + t37 * t163 - t167 * t31 + t256 * t68 + t322 * t42, t298 * t68 - t299 * t65 + t97 * t31 - t98 * t32 - t321, t1 * t98 + t37 * t167 + t2 * t97 + t210 * t298 + t256 * t42 + t299 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t309 * qJD(2), t302, t307, t102 * t205 + t103 * t148 + t176, 0, 0, 0, 0, 0, 0, t307, -0.2e1 * t205 * qJD(2), -t302, t294 - t99 * t148 + (-qJD(4) - t94) * t205 + t231, 0, 0, 0, 0, 0, 0, t213 + t272, t275 + t308, t267 + t125 + (t273 + t276) * t205, t71 * t148 - t15 * t190 + t16 * t192 + t205 * t219, 0, 0, 0, 0, 0, 0, t226 + t287, t283 - t312, t229 - t304, t1 * t163 + t42 * t148 + t2 * t209 + t210 * t319 + t322 * t6; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t100, -t271, -t300 - t197, t99 * qJD(2) + t281 + t78, 0, 0, 0, 0, 0, 0, -qJD(2) * t115 - t308, -qJD(2) * t117 + t213 (-t115 * t192 + t274) * t205, -t71 * qJD(2) + (-t190 * t25 + t192 * t26) * t205 + t220, 0, 0, 0, 0, 0, 0, -qJD(2) * t65 + t312, -qJD(2) * t68 + t226, -t318 - t320, -t42 * qJD(2) + t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t216, t217, -t115 ^ 2 - t117 ^ 2, t26 * t115 + t25 * t117 + t48, 0, 0, 0, 0, 0, 0, t68 * t139 + t32, -t31 - t314, -t315 - t316, -t210 * t68 + t6 * t65 + t37; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t291, t315 - t316, -t31 + t314, -t291, t224 + (-qJD(6) + t139) * t68, t137, t6 * t139 - t42 * t68 + t2, -t139 * t210 + t42 * t65 - t1, 0, 0;];
tauc_reg  = t5;
