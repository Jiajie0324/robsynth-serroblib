% Calculate inertial parameters regressor of coriolis matrix for
% S6RRPPPR2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d6,theta3,theta5]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 08:12
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPPR2_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPPR2_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPPR2_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPPR2_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 08:12:14
% EndTime: 2019-03-09 08:12:32
% DurationCPUTime: 12.55s
% Computational Cost: add. (15385->556), mult. (28525->700), div. (0->0), fcn. (33428->8), ass. (0->429)
t397 = sin(pkin(10));
t402 = cos(qJ(2));
t629 = cos(pkin(9));
t388 = t629 * t402;
t398 = sin(pkin(9));
t401 = sin(qJ(2));
t576 = t398 * t401;
t360 = -t388 + t576;
t647 = t360 * pkin(4);
t642 = -qJ(3) - pkin(7);
t374 = t642 * t402;
t369 = t629 * t374;
t373 = t642 * t401;
t578 = t398 * t373;
t686 = -t369 + t578;
t698 = t686 - t647;
t703 = t397 * t698;
t399 = cos(pkin(10));
t229 = t399 * t698;
t650 = cos(qJ(6));
t490 = t650 * t397;
t400 = sin(qJ(6));
t572 = t400 * t399;
t362 = t490 + t572;
t177 = t362 * t360;
t489 = t650 * t399;
t307 = t360 * t489;
t573 = t400 * t397;
t241 = t360 * t573 - t307;
t364 = t398 * t402 + t401 * t629;
t368 = t629 * t373;
t577 = t398 * t374;
t285 = -t368 - t577;
t645 = t364 * pkin(4);
t438 = t285 + t645;
t422 = t399 * t438;
t390 = -pkin(2) * t402 - pkin(1);
t439 = -t364 * qJ(4) + t390;
t644 = pkin(3) + qJ(5);
t403 = t364 * pkin(5) + t422 + (-t439 + (-pkin(8) - t644) * t360) * t397;
t409 = t360 * t644 + t439;
t700 = t397 * t438;
t123 = t399 * t409 + t700;
t256 = t399 * t360;
t99 = pkin(8) * t256 + t123;
t55 = t400 * t99 - t403 * t650;
t56 = t400 * t403 + t650 * t99;
t366 = t489 - t573;
t654 = t366 / 0.2e1;
t658 = -t362 / 0.2e1;
t389 = -pkin(2) * t629 - pkin(3);
t383 = -qJ(5) + t389;
t643 = -pkin(8) + t383;
t328 = t643 * t397;
t468 = t643 * t399;
t250 = t328 * t650 + t400 * t468;
t661 = t250 / 0.2e1;
t249 = t328 * t400 - t468 * t650;
t662 = t249 / 0.2e1;
t702 = t177 * t662 - t241 * t661 + t55 * t654 + t56 * t658;
t579 = t366 * t364;
t701 = t579 / 0.2e1;
t340 = t362 * qJD(6);
t421 = t490 / 0.2e1 + t572 / 0.2e1;
t657 = t362 / 0.2e1;
t408 = (t657 + t421) * t364;
t671 = t408 * qJD(1);
t699 = -t340 - t671;
t666 = t364 ^ 2;
t668 = t360 ^ 2;
t679 = t666 + t668;
t697 = qJD(3) * t679;
t473 = t177 * t657;
t582 = t366 * t241;
t109 = -t582 / 0.2e1 - t473;
t696 = t109 * qJD(6);
t695 = t177 * qJD(1);
t678 = t668 - t666;
t694 = t678 * qJD(1);
t693 = t678 * qJD(2);
t692 = t679 * qJD(1);
t504 = t366 * qJD(2);
t691 = -qJD(1) * t109 + t362 * t504;
t690 = qJD(2) * t109 - t241 * t695;
t417 = t362 * t364;
t663 = t417 / 0.2e1;
t689 = t417 * t55;
t395 = t397 ^ 2;
t396 = t399 ^ 2;
t469 = t396 / 0.2e1 + t395 / 0.2e1;
t688 = t360 * t469;
t656 = -t364 / 0.2e1;
t270 = t362 * t656;
t687 = t417 * t366;
t122 = -t397 * t409 + t422;
t452 = t122 * t397 - t123 * t399;
t64 = t452 * t364;
t459 = -t369 / 0.2e1;
t283 = t459 + t369 / 0.2e1;
t386 = pkin(2) * t398 + qJ(4);
t500 = t386 * qJD(2);
t685 = qJD(1) * t283 + t500;
t418 = t578 / 0.2e1 + t459;
t406 = -t647 / 0.2e1 + t418;
t394 = t401 * pkin(2);
t586 = t360 * qJ(4);
t467 = t394 + t586;
t221 = t364 * t644 + t467;
t125 = t221 * t399 + t703;
t609 = t125 * t397;
t124 = -t221 * t397 + t229;
t610 = t124 * t399;
t432 = -t610 / 0.2e1 - t609 / 0.2e1;
t62 = t406 + t432;
t684 = qJD(1) * t62 + t500;
t683 = t504 + t695;
t414 = t658 + t421;
t161 = t414 * t360;
t682 = qJD(1) * t161 + t504;
t507 = t362 * qJD(2);
t553 = qJD(1) * t241;
t681 = t507 + t553;
t471 = t573 / 0.2e1;
t456 = t471 + t654;
t660 = -t307 / 0.2e1;
t156 = t360 * t456 + t660;
t680 = qJD(1) * t156 + t507;
t449 = t285 * t364 - t360 * t686;
t677 = qJD(1) * t449;
t583 = t364 * t386;
t675 = qJD(2) * (t360 * t383 + t583);
t674 = qJD(3) * t449;
t407 = t364 * t421 + t270;
t673 = qJD(6) * t407;
t672 = qJD(6) * t408;
t511 = t666 * qJD(1);
t350 = t576 / 0.2e1 - t388 / 0.2e1;
t669 = t177 ^ 2;
t667 = t362 ^ 2;
t665 = t366 ^ 2;
t664 = -t417 / 0.2e1;
t659 = -t360 / 0.2e1;
t655 = t364 / 0.2e1;
t370 = pkin(5) * t397 + t386;
t653 = -t370 / 0.2e1;
t649 = pkin(5) * t399;
t648 = pkin(8) * t364;
t646 = t364 * pkin(3);
t580 = t366 * t177;
t585 = t362 * t241;
t110 = t580 + t585;
t641 = t110 * qJD(5);
t107 = -t585 / 0.2e1 - t580 / 0.2e1;
t640 = t107 * qJD(5);
t638 = qJD(2) * pkin(2);
t92 = -pkin(5) * t360 + t229 + (-t221 - t648) * t397;
t637 = t400 * t92;
t493 = t650 * t92;
t100 = t399 * t648 + t125;
t574 = t400 * t100;
t57 = t493 - t574;
t634 = t57 * t366;
t491 = t650 * t100;
t58 = t491 + t637;
t633 = t58 * t362;
t308 = t364 * t489;
t243 = t364 * t573 - t308;
t6 = -t177 * t57 - t241 * t58 - t243 * t56 + t689;
t632 = t6 * qJD(1);
t492 = -pkin(4) - t649;
t171 = t364 * t492 - t285;
t172 = t360 * t492 + t686;
t7 = t171 * t172 - t55 * t57 + t56 * t58;
t631 = t7 * qJD(1);
t410 = t243 * t662 + t360 * t653 + t417 * t661;
t436 = t57 * t657 - t58 * t366 / 0.2e1;
t20 = t410 + t436;
t627 = qJD(1) * t20;
t30 = -t172 * t241 + t364 * t55;
t626 = qJD(1) * t30;
t31 = t172 * t177 - t364 * t56;
t625 = qJD(1) * t31;
t612 = t123 * t397;
t613 = t122 * t399;
t38 = -t698 * t360 + (t612 + t613) * t364;
t624 = qJD(1) * t38;
t63 = t452 * t360;
t622 = qJD(1) * t63;
t621 = qJD(1) * t64;
t581 = t366 * t243;
t207 = -t581 / 0.2e1;
t592 = t579 * t366;
t70 = t207 + t592 / 0.2e1 + 0.2e1 * t663 * t362;
t620 = qJD(1) * t70;
t596 = t417 * t362;
t72 = t581 - t596;
t619 = qJD(1) * t72;
t74 = (t664 + t663) * t366 + (t701 + t243 / 0.2e1) * t362;
t618 = qJD(1) * t74;
t600 = t243 * t177;
t602 = t241 * t417;
t85 = t600 - t602;
t617 = qJD(1) * t85;
t87 = -t177 * t417 + t241 * t579;
t616 = qJD(1) * t87;
t430 = -t473 + t582 / 0.2e1;
t93 = t430 - t350;
t615 = qJD(1) * t93;
t611 = t124 * t397;
t608 = t125 * t399;
t17 = t171 * t241 + t172 * t243 + t360 * t55 + t364 * t57;
t607 = t17 * qJD(1);
t18 = t171 * t177 + t172 * t417 + t360 * t56 - t364 * t58;
t606 = t18 * qJD(1);
t21 = -t172 * t360 + t243 * t55 + t417 * t56;
t605 = t21 * qJD(1);
t23 = -t56 * t579 - t689;
t604 = t23 * qJD(1);
t24 = t122 * t124 + t123 * t125 - t438 * t698;
t603 = t24 * qJD(1);
t601 = t241 * t360;
t599 = t243 * t364;
t597 = t177 * t360;
t595 = t417 * t364;
t593 = t579 * t362;
t25 = -t64 + (t608 - t611) * t360;
t591 = t25 * qJD(1);
t411 = t172 * t654 - t177 * t653 + t250 * t656;
t424 = -t574 / 0.2e1 + t493 / 0.2e1;
t26 = -t411 + t424;
t590 = t26 * qJD(1);
t412 = t172 * t658 + t241 * t653 + t249 * t655;
t423 = -t637 / 0.2e1 - t491 / 0.2e1;
t27 = -t412 + t423;
t589 = t27 * qJD(1);
t32 = (t124 - t229) * t364 + (-t122 + t422) * t360;
t588 = t32 * qJD(1);
t33 = (-t125 + t703) * t364 + (t123 - t700) * t360;
t587 = t33 * qJD(1);
t584 = t362 * t243;
t178 = t366 * t360;
t324 = t395 * t364;
t325 = t396 * t364;
t255 = t397 * t364;
t458 = t469 * t364;
t474 = t386 * t659;
t413 = t383 * t458 + t474;
t433 = t611 / 0.2e1 - t608 / 0.2e1;
t40 = t413 + t433;
t575 = t40 * qJD(1);
t258 = pkin(3) * t360 + t439;
t259 = t467 + t646;
t80 = t258 * t259;
t571 = t80 * qJD(1);
t86 = -t600 - t602;
t568 = t86 * qJD(1);
t98 = t390 * t394;
t567 = t98 * qJD(1);
t565 = t395 + t396;
t111 = -t599 + t601;
t564 = qJD(1) * t111;
t112 = -t599 - t601;
t563 = qJD(1) * t112;
t113 = t595 - t597;
t562 = qJD(1) * t113;
t114 = -t595 - t597;
t561 = qJD(1) * t114;
t126 = -t258 * t364 - t259 * t360;
t560 = qJD(1) * t126;
t127 = t258 * t360 - t259 * t364;
t559 = qJD(1) * t127;
t169 = t679 * t397;
t554 = qJD(1) * t169;
t252 = t360 * t394 + t364 * t390;
t551 = qJD(1) * t252;
t253 = -t360 * t390 + t364 * t394;
t550 = qJD(1) * t253;
t548 = qJD(1) * t402;
t547 = qJD(2) * t256;
t546 = qJD(2) * t686;
t545 = qJD(2) * t285;
t544 = qJD(2) * t370;
t543 = qJD(2) * t397;
t542 = qJD(3) * t360;
t541 = qJD(4) * t666;
t540 = qJD(4) * t364;
t539 = qJD(5) * t241;
t538 = qJD(5) * t177;
t537 = qJD(5) * t364;
t536 = qJD(6) * t177;
t391 = t394 / 0.2e1;
t146 = t391 + (pkin(3) / 0.2e1 - t389 / 0.2e1) * t364 + (qJ(4) / 0.2e1 + t386 / 0.2e1) * t360;
t535 = t146 * qJD(1);
t150 = t458 + t324 / 0.2e1 + t325 / 0.2e1;
t534 = t150 * qJD(1);
t157 = -t308 / 0.2e1 + t456 * t364;
t533 = t157 * qJD(1);
t472 = -t573 / 0.2e1;
t158 = t364 * t472 + t308 / 0.2e1 + t701;
t152 = t158 * qJD(1);
t163 = t414 * t364;
t530 = t163 * qJD(1);
t164 = 0.2e1 * t270;
t529 = t164 * qJD(1);
t420 = t489 / 0.2e1 + t472;
t165 = (t654 + t420) * t364;
t528 = t165 * qJD(1);
t170 = t565 * t364 * t360;
t527 = t170 * qJD(1);
t525 = t178 * qJD(1);
t222 = -t350 - t688;
t524 = t222 * qJD(1);
t224 = t678 * t397;
t523 = t224 * qJD(1);
t225 = t678 * t399;
t522 = t225 * qJD(1);
t226 = t679 * t399;
t521 = t226 * qJD(1);
t415 = (t398 * t659 + t629 * t656) * pkin(2);
t231 = -t394 / 0.2e1 + t415;
t520 = t231 * qJD(1);
t235 = t241 * qJD(6);
t517 = t256 * qJD(1);
t260 = -t324 - t325;
t516 = t260 * qJD(1);
t261 = t565 * t668;
t515 = t261 * qJD(1);
t512 = t350 * qJD(1);
t510 = t360 * qJD(1);
t509 = t360 * qJD(2);
t508 = t360 * qJD(4);
t506 = t364 * qJD(1);
t505 = t364 * qJD(2);
t342 = t364 * qJD(3);
t348 = t366 * qJD(6);
t372 = -0.1e1 / 0.2e1 - t469;
t503 = t372 * qJD(2);
t502 = t565 * qJD(2);
t384 = -t401 ^ 2 + t402 ^ 2;
t501 = t384 * qJD(1);
t499 = t399 * qJD(2);
t498 = t401 * qJD(2);
t497 = t402 * qJD(2);
t495 = pkin(1) * t401 * qJD(1);
t494 = pkin(1) * t548;
t487 = t241 * t506;
t486 = t417 * t506;
t485 = t579 * t506;
t484 = t258 * t506;
t483 = t397 * t511;
t482 = t397 * t509;
t480 = t397 * t499;
t479 = t360 * t506;
t281 = t360 * t505;
t478 = t362 * t348;
t477 = t397 * t510;
t476 = t399 * t511;
t475 = t401 * t497;
t216 = t177 * t506;
t466 = qJD(2) * t158 + t216;
t465 = qJD(6) * t350 + t479;
t464 = qJD(5) + t544;
t463 = t399 * t479;
t462 = t364 * t477;
t461 = -pkin(4) / 0.2e1 - t649 / 0.2e1;
t460 = -t667 / 0.2e1 - t665 / 0.2e1;
t457 = t368 / 0.2e1 + t577 / 0.2e1;
t455 = -t235 - t487;
t454 = t399 * t462;
t84 = -t580 + t585;
t240 = t241 ^ 2;
t97 = t240 - t669;
t453 = qJD(1) * t97 + qJD(2) * t84;
t451 = t609 + t610;
t115 = t249 * t366 - t250 * t362;
t405 = t364 * t461 + t457;
t13 = t405 - t702;
t447 = -qJD(1) * t13 + qJD(2) * t115;
t404 = t249 * t664 + t360 * t461 - t579 * t661 + t418;
t435 = -t634 / 0.2e1 - t633 / 0.2e1;
t16 = t404 + t435;
t446 = qJD(1) * t16 + t544;
t234 = -t665 + t667;
t445 = qJD(1) * t84 + qJD(2) * t234;
t291 = t565 * t383;
t419 = -t645 / 0.2e1 + t457;
t434 = t613 / 0.2e1 + t612 / 0.2e1;
t59 = t419 + t434;
t444 = -qJD(1) * t59 - qJD(2) * t291;
t22 = t177 * t55 - t241 * t56;
t443 = -qJD(1) * t22 - qJD(4) * t107;
t175 = -0.1e1 / 0.2e1 + t460;
t442 = qJD(1) * t107 + qJD(2) * t175;
t135 = t240 + t669;
t441 = qJD(1) * t135 + qJD(2) * t110;
t264 = t665 + t667;
t440 = qJD(1) * t110 + qJD(2) * t264;
t425 = qJD(2) * t157 + t216 + t536;
t385 = t401 * t548;
t375 = t386 * qJD(4);
t371 = 0.1e1 / 0.2e1 - t469;
t326 = t350 * qJD(2);
t274 = -t178 / 0.2e1;
t239 = 0.2e1 * t459 + t578;
t230 = t391 + t415;
t223 = -t350 + t688;
t179 = t274 + t178 / 0.2e1;
t174 = 0.1e1 / 0.2e1 + t460;
t168 = -t579 / 0.2e1 + t420 * t364;
t160 = t177 / 0.2e1 + t421 * t360;
t155 = t360 * t471 + t274 + t660;
t154 = t157 * qJD(6);
t153 = t158 * qJD(6);
t147 = t474 + t389 * t655 + t391 + t586 / 0.2e1 + t646 / 0.2e1;
t130 = -t348 - t152;
t94 = -t430 - t350;
t81 = t84 * qJD(6);
t75 = -t592 / 0.2e1 + t417 * t658 + t596 / 0.2e1 + t207;
t73 = t593 / 0.2e1 - t687 - t584 / 0.2e1;
t71 = t581 / 0.2e1 + t207;
t61 = t406 - t432;
t60 = t419 - t434;
t39 = t413 - t433;
t29 = t411 + t424;
t28 = t412 + t423;
t19 = t410 - t436;
t15 = t404 - t435;
t14 = t405 + t702;
t1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t475, t384 * qJD(2), 0, -t475, 0, 0, -pkin(1) * t498, -pkin(1) * t497, 0, 0, -t281, t693, 0, t281, 0, 0, t252 * qJD(2), t253 * qJD(2), t697, qJD(2) * t98 + t674, 0, 0, 0, -t281, t693, t281, t697, qJD(2) * t126 + t364 * t508, qJD(2) * t127 + t541, qJD(2) * t80 - t258 * t540 + t674, t395 * t281, 0.2e1 * t397 * t399 * t281, -t224 * qJD(2), t396 * t281, -t225 * qJD(2), -t281, qJD(2) * t32 + qJD(3) * t226 + (-qJD(5) * t360 + t540) * t255, qJD(2) * t33 - qJD(3) * t169 + (-t360 * t537 + t541) * t399, qJD(2) * t25 - qJD(4) * t170 + qJD(5) * t261, qJD(2) * t24 + qJD(3) * t38 + qJD(4) * t64 - qJD(5) * t63 (qJD(2) * t417 - t235) * t177, qJD(2) * t86 + qJD(6) * t97, qJD(2) * t113 - t235 * t364 (qJD(2) * t243 + t536) * t241, qJD(2) * t111 - t364 * t536, -t281, qJD(2) * t17 + qJD(3) * t112 + qJD(6) * t31 + (qJD(4) * t417 - t538) * t364, qJD(2) * t18 + qJD(3) * t114 + qJD(6) * t30 + (qJD(4) * t579 + t539) * t364, qJD(2) * t6 + qJD(3) * t85 + qJD(4) * t87 + qJD(5) * t135, qJD(2) * t7 + qJD(3) * t21 + qJD(4) * t23 + qJD(5) * t22; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t385, t501, t497, -t385, -t498, 0, -pkin(7) * t497 - t495, pkin(7) * t498 - t494, 0, 0, -t479, t694, -t509, t479, -t505, 0, -t546 + t551, t545 + t550 (t360 * t629 - t364 * t398) * t638, t567 + (-t285 * t398 - t629 * t686) * t638 + t230 * qJD(3), 0, t509, t505, -t479, t694, t479 (-t360 * t389 - t583) * qJD(2) - t508, t546 + t560, -t545 + t559, t571 + (-t285 * t386 + t389 * t686) * qJD(2) + t147 * qJD(3) + t239 * qJD(4) (t395 * t510 + t480) * t364, 0.2e1 * t454 + (t325 - t324) * qJD(2), -t360 * t499 - t523 (t396 * t510 - t480) * t364, t482 - t522, -t479, -t438 * t543 + t588 - t256 * qJD(4) + (-t537 - t675) * t399, -t438 * t499 + t587 + t255 * qJD(5) + (t508 + t675) * t397, -qJD(2) * t451 + t591, t603 + (t383 * t451 - t386 * t438) * qJD(2) + t39 * qJD(3) + t61 * qJD(4) + t60 * qJD(5), t417 * t683 + t696, t568 + (-t581 - t596) * qJD(2) + t81, -t360 * t504 + t562 + t673, t243 * t681 - t696, t360 * t507 - t154 + t564, -t465, t607 + (t171 * t362 + t243 * t370 + t249 * t360) * qJD(2) + t155 * qJD(4) - t158 * qJD(5) + t29 * qJD(6), t606 + (t171 * t366 + t250 * t360 + t370 * t417) * qJD(2) + t179 * qJD(3) + t160 * qJD(4) - t164 * qJD(5) + t28 * qJD(6), t632 + (-t243 * t250 + t249 * t417 - t633 - t634) * qJD(2) + t71 * qJD(3) + t73 * qJD(4) + t641, t631 + (t171 * t370 - t249 * t57 + t250 * t58) * qJD(2) + t19 * qJD(3) + t15 * qJD(4) + t14 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t692, qJD(2) * t230 + t677, 0, 0, 0, 0, 0, 0, t692, 0, 0, qJD(2) * t147 + t677, 0, 0, 0, 0, 0, 0, t521, -t554, 0, qJD(2) * t39 + qJD(5) * t223 + t624, 0, 0, 0, 0, 0, 0, -t154 + t563, qJD(2) * t179 - qJD(6) * t163 + t561, qJD(2) * t71 + t617, t605 + t19 * qJD(2) + (t584 + t687) * qJD(3) + t75 * qJD(4) + t94 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t509, t479, t511, qJD(2) * t239 - t484, 0, 0, 0, 0, 0, 0, t483 - t547, t476 + t482, -t527, qJD(2) * t61 + t621, 0, 0, 0, 0, 0, 0, qJD(2) * t155 + t486 + t673, qJD(2) * t160 + qJD(6) * t168 + t485, qJD(2) * t73 + t616, t604 + t15 * qJD(2) + t75 * qJD(3) + (-t593 + t687) * qJD(4) + t640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (-t477 - t499) * t364, qJD(2) * t255 - t463, t515, qJD(2) * t60 + qJD(3) * t223 - t622, 0, 0, 0, 0, 0, 0, -t466, -qJD(2) * t164 + t487, t441, qJD(2) * t14 + qJD(3) * t94 - t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t690, t453, qJD(2) * t407 + t455, -t690, -t425, -t326, qJD(2) * t29 - qJD(3) * t157 + qJD(4) * t407 - qJD(6) * t56 + t625, qJD(2) * t28 - qJD(3) * t163 + qJD(4) * t168 + qJD(6) * t55 + t626, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t385, -t501, 0, t385, 0, 0, t495, t494, 0, 0, t479, -t694, 0, -t479, 0, 0, -t342 - t551, t542 - t550, 0, qJD(3) * t231 - t567, 0, 0, 0, t479, -t694, -t479, 0, t342 - t560, -t542 - t559, -qJD(3) * t146 + qJD(4) * t283 - t571, -t395 * t479, -0.2e1 * t454, t523, -t396 * t479, t522, t479, -t397 * t542 - t588, -qJD(3) * t256 - t587, qJD(3) * t260 - t591, qJD(3) * t40 + qJD(4) * t62 - qJD(5) * t59 - t603, -t417 * t695 + t696, t81 - t568, -t562 - t672, -t243 * t553 - t696, -t153 - t564, t465, -qJD(3) * t177 + qJD(4) * t156 - qJD(5) * t157 - qJD(6) * t26 - t607, -qJD(3) * t178 + qJD(4) * t161 - qJD(5) * t163 - qJD(6) * t27 - t606, qJD(3) * t72 + qJD(4) * t74 - t632 + t641, qJD(3) * t20 + qJD(4) * t16 - qJD(5) * t13 - t631; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(4), t375, 0, 0, 0, 0, 0, 0, qJD(4) * t397, qJD(4) * t399, t565 * qJD(5), -qJD(5) * t291 + t375, -t478, t234 * qJD(6), 0, t478, 0, 0, qJD(4) * t362 + t348 * t370, qJD(4) * t366 - t340 * t370, qJD(5) * t264, qJD(4) * t370 + qJD(5) * t115; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t506, t510, 0, t520, 0, 0, 0, 0, 0, 0, 0, t506, -t510, -t535, 0, 0, 0, 0, 0, 0, -t477, -t517, t516, t575, 0, 0, 0, 0, 0, 0, -t695, -t525, t619, t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(2), t685, 0, 0, 0, 0, 0, 0, t543, t499, 0, qJD(5) * t371 + t684, 0, 0, 0, 0, 0, 0, t680, t682, t618, qJD(5) * t174 + t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t502, qJD(4) * t371 + t444, 0, 0, 0, 0, 0, 0, -t533, -t530, t440, qJD(4) * t174 + t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t691, t445, t699, t691, t130, t512, -qJD(6) * t250 + t370 * t504 - t590, qJD(6) * t249 - t370 * t507 - t589, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t505, -t509, -t692, -qJD(2) * t231 - t677, 0, 0, 0, 0, 0, 0, -t692, -t505, t509, qJD(2) * t146 - t540 - t677, 0, 0, 0, 0, 0, 0, t482 - t521, t547 + t554, -t260 * qJD(2), -qJD(2) * t40 - qJD(4) * t150 - qJD(5) * t222 - t624, 0, 0, 0, 0, 0, 0, qJD(2) * t177 - t153 - t563, qJD(2) * t178 - qJD(6) * t164 - t561, -qJD(2) * t72 - t617, -qJD(2) * t20 - qJD(4) * t70 - qJD(5) * t93 - t605; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t506, -t510, 0, -t520, 0, 0, 0, 0, 0, 0, 0, -t506, t510, t535, 0, 0, 0, 0, 0, 0, t477, t517, -t516, -t575, 0, 0, 0, 0, 0, 0, t695, t525, -t619, -t627; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t506, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t534, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t524, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t130, t340 - t529, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t479, -t511, -qJD(2) * t283 + t342 + t484, 0, 0, 0, 0, 0, 0, -t483, -t476, t527, -qJD(2) * t62 + qJD(3) * t150 - t621, 0, 0, 0, 0, 0, 0, -qJD(2) * t156 - t486 - t672, -qJD(2) * t161 - qJD(6) * t165 - t485, -qJD(2) * t74 - t616, -qJD(2) * t16 + qJD(3) * t70 - t604 + t640; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(2), -t685, 0, 0, 0, 0, 0, 0, -t543, -t499, 0, qJD(5) * t372 - t684, 0, 0, 0, 0, 0, 0, -t680, -t682, -t618, qJD(5) * t175 - t446; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t506, 0, 0, 0, 0, 0, 0, 0, 0, 0, t534, 0, 0, 0, 0, 0, 0, 0, 0, 0, t620; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t503, 0, 0, 0, 0, 0, 0, 0, 0, 0, t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t699, -t348 - t528, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t462, t463, -t515, qJD(2) * t59 + qJD(3) * t222 + t622, 0, 0, 0, 0, 0, 0, t425, qJD(2) * t163 + t455, -t441, qJD(2) * t13 + qJD(3) * t93 + t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t502, -qJD(4) * t372 - t444, 0, 0, 0, 0, 0, 0, t348 + t533, -t340 + t530, -t440, -qJD(4) * t175 - t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t524, 0, 0, 0, 0, 0, 0, 0, 0, 0, t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t503, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t442; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t683, -t681, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t690, -t453, qJD(2) * t408 + t487, t690, t466, -t326, qJD(2) * t26 + qJD(3) * t158 + qJD(4) * t408 - t538 - t625, qJD(2) * t27 + qJD(3) * t164 + qJD(4) * t165 + t539 - t626, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t691, -t445, t671, -t691, t152, -t512, -t366 * t464 + t590, t362 * t464 + t589, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t152, t529, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t671, t528, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t683, t681, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t1;
