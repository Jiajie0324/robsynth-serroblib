% Calculate inertial parameters regressor of coriolis matrix for
% S6RPRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*6)x(6*10)]
%   inertial parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRR1_coriolismatJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR1_coriolismatJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR1_coriolismatJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR1_coriolismatJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:55:24
% EndTime: 2019-03-09 06:55:59
% DurationCPUTime: 27.91s
% Computational Cost: add. (34596->810), mult. (63541->1019), div. (0->0), fcn. (72328->10), ass. (0->613)
t1086 = cos(qJ(4));
t712 = sin(pkin(11)) * pkin(1) + pkin(7);
t1076 = pkin(8) + t712;
t730 = sin(qJ(3));
t687 = t1076 * t730;
t732 = cos(qJ(3));
t688 = t1076 * t732;
t729 = sin(qJ(4));
t581 = -t1086 * t687 - t729 * t688;
t691 = t1086 * t730 + t729 * t732;
t1152 = -t691 * pkin(9) + t581;
t728 = sin(qJ(5));
t1173 = t728 * t1152;
t1085 = cos(qJ(5));
t582 = t1086 * t688 - t729 * t687;
t690 = t1086 * t732 - t729 * t730;
t479 = t690 * pkin(9) + t582;
t444 = t1085 * t479;
t1199 = t444 + t1173;
t727 = sin(qJ(6));
t1234 = t727 * t1199;
t1239 = t1234 / 0.2e1;
t1265 = 0.2e1 * t1239;
t731 = cos(qJ(6));
t1233 = t731 * t1199;
t1261 = -t1233 / 0.2e1;
t1264 = 0.2e1 * t1261;
t924 = qJD(3) + qJD(4);
t1257 = qJD(5) + t924;
t1256 = t1261 + t1233 / 0.2e1;
t416 = -t444 / 0.2e1;
t1229 = t416 - t1173 / 0.2e1;
t1263 = 0.2e1 * t1229;
t1005 = t728 * t479;
t1168 = t1085 * t1152;
t1216 = -t1168 / 0.2e1;
t1262 = t1005 + 0.2e1 * t1216;
t1166 = t1168 - t1005;
t1260 = t727 * t1166;
t1259 = t731 * t1166;
t725 = t727 ^ 2;
t855 = -t1085 * t690 + t728 * t691;
t1180 = t725 * t855;
t1213 = -t1180 / 0.2e1;
t726 = t731 ^ 2;
t1179 = t726 * t855;
t1214 = -t1179 / 0.2e1;
t1171 = t1214 + t1213;
t1212 = t1180 / 0.2e1;
t1218 = t1212 + t1179 / 0.2e1 + t1171;
t1258 = t924 * t1218;
t1088 = -t731 / 0.2e1;
t722 = pkin(5) * t1088;
t1004 = t728 * t690;
t681 = t1085 * t691;
t1129 = t681 + t1004;
t1172 = t731 * t1129;
t873 = -t1172 / 0.2e1;
t1255 = pkin(10) * t873 - t855 * t722 + t1265;
t1174 = t727 * t1129;
t1091 = -t727 / 0.2e1;
t876 = t855 * t1091;
t1254 = t1264 - pkin(10) * t1174 / 0.2e1 - pkin(5) * t876;
t608 = t1129 ^ 2;
t1196 = -t855 ^ 2 + t608;
t1235 = t1196 * t731;
t1253 = qJD(1) * t1235;
t1236 = t1196 * t727;
t1252 = qJD(1) * t1236;
t1108 = -t855 / 0.2e1;
t1109 = t855 / 0.2e1;
t1195 = t1199 * t1109;
t1223 = t1108 * t1199 + t1195;
t1251 = qJD(2) * t1223;
t1250 = qJD(5) * t1262;
t1185 = t444 / 0.2e1;
t1228 = t1173 / 0.2e1 + t1185 + t1229;
t1249 = qJD(5) * t1228;
t1248 = qJD(5) * t1263;
t1089 = t728 / 0.2e1;
t1247 = t1089 * t1166;
t1208 = t1166 * t1199;
t206 = t1218 * qJD(5);
t1245 = t1223 * qJD(1);
t1003 = t728 * t729;
t845 = t1085 * t1086;
t686 = (t845 - t1003) * pkin(3);
t1099 = -t686 / 0.2e1;
t846 = pkin(3) * t1086 + pkin(4);
t698 = t1085 * t846;
t675 = pkin(3) * t1003 - t698;
t1102 = -t675 / 0.2e1;
t1244 = t1102 + t1099;
t1100 = t681 / 0.2e1;
t844 = -t681 / 0.2e1;
t607 = t844 + t1100;
t1243 = qJD(1) * t1228 - t607 * qJD(2);
t1224 = t1199 * t1129 + t1166 * t855;
t713 = -cos(pkin(11)) * pkin(1) - pkin(2);
t696 = -t732 * pkin(3) + t713;
t627 = -t690 * pkin(4) + t696;
t839 = pkin(5) * t855 - pkin(10) * t1129;
t743 = t627 + t839;
t167 = t727 * t743 + t1233;
t1242 = -t167 * t1129 + t1224 * t731;
t166 = -t731 * t743 + t1234;
t1241 = -t166 * t1129 + t1224 * t727;
t1081 = t1199 * pkin(5);
t1115 = -t1166 / 0.2e1;
t1190 = t1115 + t1166 / 0.2e1;
t1238 = t1190 * t727;
t1237 = t1190 * t731;
t1184 = t1129 / 0.2e1;
t1087 = t731 / 0.2e1;
t1090 = t727 / 0.2e1;
t793 = t167 * t1087 + t166 * t1090;
t1232 = -t1166 * t1184 - t793 * t855 + t1195;
t1226 = t1196 * qJD(1);
t667 = -pkin(5) + t675;
t1105 = t667 / 0.2e1;
t1225 = t1199 * t1105;
t1217 = -t1081 / 0.2e1;
t919 = t1085 * pkin(4);
t718 = -t919 - pkin(5);
t1176 = t1129 * t718;
t1215 = t1176 / 0.2e1;
t1181 = t1129 * pkin(5);
t1211 = t1181 / 0.2e1;
t799 = t728 * t846;
t904 = t1085 * t729;
t676 = pkin(3) * t904 + t799;
t1209 = t1166 * t676;
t1046 = t1199 * t718;
t973 = qJD(1) * t1129;
t1177 = t855 * t973;
t1205 = t1177 * t725;
t1204 = t1177 * t726;
t1008 = t727 * t731;
t897 = qJD(1) * t1008;
t847 = t1129 * t897;
t1178 = t855 * t847;
t1161 = -0.2e1 * t1129;
t723 = qJD(6) * t731;
t710 = t727 * t723;
t527 = t710 * t1161;
t1198 = t527 - 0.2e1 * t1178;
t1197 = t527 + 0.2e1 * t1178;
t1093 = t725 / 0.2e1;
t864 = t726 / 0.2e1 + t1093;
t1193 = t1257 * t855;
t1192 = -t1179 - t1180;
t1191 = -t1179 + t1180;
t1079 = t855 * pkin(10);
t391 = t1181 + t1079;
t1114 = t1199 / 0.2e1;
t1187 = (t1114 - t1199 / 0.2e1) * t727;
t778 = (t166 * t731 - t167 * t727) * t855;
t1033 = t1129 * t855;
t1153 = t924 * t731;
t1175 = t1153 * t727;
t923 = -qJD(4) - qJD(5);
t859 = qJD(3) - t923;
t1135 = t859 * t1008;
t362 = (t1093 - t726 / 0.2e1) * t1129;
t298 = -qJD(1) * t362 + t1135;
t1128 = t1004 / 0.2e1 + t1100;
t1169 = qJD(6) * t1128;
t1167 = t1128 * qJD(1);
t1083 = pkin(4) * t691;
t317 = t1083 + t391;
t1012 = t727 * t317;
t192 = t1259 + t1012;
t1058 = t192 * t731;
t999 = t731 * t317;
t191 = t999 - t1260;
t1059 = t191 * t727;
t791 = -t1059 / 0.2e1 + t1058 / 0.2e1;
t1165 = t791 * pkin(10) + t1217;
t1164 = -qJD(5) * t1172 - t1129 * t1153;
t1163 = t924 * t581;
t1162 = t924 * t582;
t1159 = t1129 * t924;
t668 = pkin(10) + t676;
t836 = t864 * t668;
t868 = t1109 + t1108;
t371 = t868 * t731;
t1157 = t924 * t371;
t867 = t1184 - t1129 / 0.2e1;
t374 = t867 * t731;
t1156 = t924 * t374;
t1154 = t924 * t690;
t724 = t730 * pkin(3);
t311 = t317 + t724;
t1000 = t731 * t311;
t186 = t1000 - t1260;
t1061 = t186 * t727;
t1013 = t727 * t311;
t187 = t1259 + t1013;
t1060 = t187 * t731;
t169 = t1060 / 0.2e1;
t792 = -t1061 / 0.2e1 + t169;
t989 = t725 + t726;
t911 = t1086 * t728;
t684 = (t904 + t911) * pkin(3);
t1101 = t676 / 0.2e1;
t631 = t728 * pkin(4);
t842 = t631 / 0.2e1 + t1101;
t794 = -t684 / 0.2e1 + t842;
t492 = t794 * t727;
t1095 = -t718 / 0.2e1;
t717 = pkin(10) + t631;
t1097 = -t717 / 0.2e1;
t920 = -t1085 / 0.2e1;
t740 = t1129 * t1097 + t855 * t1095 + (t1089 * t1129 + t855 * t920) * pkin(4);
t798 = pkin(5) * t1108 + pkin(10) * t1184;
t736 = t740 + t798;
t59 = t736 * t731 + t1187;
t1075 = pkin(4) * qJD(4);
t918 = t728 * t1075;
t363 = t867 * t727;
t939 = t363 * qJD(2);
t1151 = -qJD(1) * t59 - qJD(3) * t492 - t727 * t918 - t939;
t1019 = t718 * t731;
t1106 = -t667 / 0.2e1;
t833 = t1099 + t1095 + t1106;
t474 = t833 * t731;
t1096 = t717 / 0.2e1;
t784 = t855 * t1096 - t1176 / 0.2e1;
t769 = t317 / 0.2e1 + t784;
t82 = t727 * t769 + t1237;
t935 = t371 * qJD(2);
t1150 = -qJD(1) * t82 + qJD(3) * t474 - qJD(4) * t1019 - t935;
t473 = t833 * t727;
t84 = -t731 * t769 + t1238;
t366 = t868 * t727;
t937 = t366 * qJD(2);
t966 = qJD(4) * t727;
t1149 = -qJD(1) * t84 + qJD(3) * t473 - t718 * t966 - t937;
t1103 = t668 / 0.2e1;
t786 = t1103 * t855 + t1106 * t1129;
t770 = t311 / 0.2e1 + t786;
t76 = t727 * t770 + t1237;
t968 = qJD(3) * t731;
t1148 = -qJD(1) * t76 - t667 * t968 - t935;
t78 = -t731 * t770 + t1238;
t969 = qJD(3) * t727;
t1147 = -qJD(1) * t78 - t667 * t969 - t937;
t1104 = -t668 / 0.2e1;
t865 = t675 / 0.2e1 + t1106;
t751 = (t1104 + t1101) * t1129 + t865 * t855;
t739 = t751 + t798;
t48 = t739 * t731 + t1187;
t1146 = -qJD(1) * t48 - t676 * t969 - t939;
t1145 = qJD(3) * t676 + t1243;
t1144 = qJD(3) * t631 + t1243;
t1011 = t727 * t391;
t200 = t1011 + t1259;
t1117 = t200 / 0.2e1;
t998 = t731 * t391;
t199 = t998 - t1260;
t1118 = -t199 / 0.2e1;
t1119 = -t187 / 0.2e1;
t1120 = t186 / 0.2e1;
t23 = (t1117 + t1119) * t731 + (t1118 + t1120) * t727;
t526 = t989 * t675;
t946 = t1218 * qJD(2);
t1143 = -qJD(1) * t23 + qJD(3) * t526 - t946;
t1142 = t864 * t686;
t493 = t794 * t731;
t56 = t736 * t727 + t1256;
t933 = t374 * qJD(2);
t1141 = -qJD(1) * t56 + qJD(3) * t493 + t933;
t325 = t868 * t1008;
t941 = t362 * qJD(6);
t1140 = qJD(5) * t325 + t941;
t370 = t731 * t855;
t872 = t855 * t1087;
t324 = t1091 * t370 - t727 * t872;
t1139 = -qJD(5) * t324 + t941;
t942 = t325 * qJD(1);
t308 = t942 - t710;
t307 = t942 + t710;
t25 = (t1117 - t192 / 0.2e1) * t731 + (t1118 + t191 / 0.2e1) * t727;
t302 = t989 * (t919 / 0.2e1 + t1244);
t905 = t1085 * t726;
t906 = t1085 * t725;
t773 = t906 + t905;
t685 = t773 * pkin(4);
t1138 = -qJD(1) * t25 - qJD(3) * t302 - qJD(4) * t685 - t946;
t10 = t1129 * t791 + t1232;
t858 = t855 * t989;
t181 = -t1129 * t858 + t1033;
t949 = t181 * qJD(2);
t1132 = t10 * qJD(1) + t949;
t45 = t727 * t739 + t1256;
t1131 = qJD(1) * t45 - t933;
t9 = t1129 * t792 + t1232;
t1130 = t9 * qJD(1) + t949;
t1127 = t924 * t324 - t941;
t1126 = -t325 * t924 + t941;
t112 = t362 * t859 + t608 * t897;
t372 = 0.2e1 * t1109 * t731;
t1125 = qJD(5) * t370 + t372 * t924;
t955 = qJD(5) * t731;
t1124 = -t1129 * t955 - t1172 * t924;
t708 = t726 - t725;
t390 = t708 * t859 - 0.2e1 * t847;
t1121 = pkin(5) / 0.2e1;
t1098 = t686 / 0.2e1;
t1094 = t718 / 0.2e1;
t1084 = pkin(3) * t729;
t1077 = t684 * pkin(5);
t1074 = pkin(4) * qJD(5);
t1073 = qJD(3) * pkin(3);
t785 = t1099 * t855 + t1184 * t684;
t866 = t1105 + t1095;
t738 = -t866 * t855 + (t1104 + t1096) * t1129 + t785;
t41 = t727 * t738 + t1256;
t1071 = qJD(1) * t41;
t86 = t1166 * t1174 + t166 * t855;
t1069 = qJD(1) * t86;
t87 = -t1166 * t1172 - t167 * t855;
t1068 = qJD(1) * t87;
t15 = (t186 * t731 + t187 * t727) * t1129 + t778;
t1066 = t15 * qJD(1);
t16 = (t191 * t731 + t192 * t727) * t1129 + t778;
t1065 = t16 * qJD(1);
t17 = (t199 * t731 + t200 * t727) * t1129 + t778;
t1062 = t17 * qJD(1);
t1057 = t199 * t727;
t1056 = t200 * t731;
t26 = t186 * t855 + t1241;
t1055 = t26 * qJD(1);
t27 = -t187 * t855 + t1242;
t1054 = t27 * qJD(1);
t28 = t191 * t855 + t1241;
t1053 = t28 * qJD(1);
t1042 = t1166 * t684;
t29 = -t192 * t855 + t1242;
t1039 = t29 * qJD(1);
t30 = (-t166 + t1234) * t1129 + (t199 + t1260) * t855;
t1038 = t30 * qJD(1);
t1032 = t1129 * t667;
t1031 = t1129 * t668;
t1030 = t1129 * t675;
t1028 = t1129 * t728;
t1027 = t855 * t684;
t1026 = t855 * t667;
t1025 = t855 * t676;
t1024 = t855 * t728;
t1023 = t1129 * t686;
t1021 = t675 * t855;
t1020 = t676 * t1129;
t365 = t727 * t855;
t995 = t924 * t363;
t662 = t676 * qJD(5);
t677 = t684 * qJD(4);
t990 = -t677 - t662;
t987 = qJD(1) * t1218;
t402 = t627 * t1129;
t649 = t724 + t1083;
t277 = t649 * t855 + t402;
t984 = qJD(1) * t277;
t403 = t627 * t855;
t278 = t1129 * t649 - t403;
t983 = qJD(1) * t278;
t289 = -t1083 * t855 - t402;
t982 = qJD(1) * t289;
t290 = -t1083 * t1129 + t403;
t981 = qJD(1) * t290;
t379 = t708 * t608;
t977 = qJD(1) * t379;
t518 = -t690 * t724 + t691 * t696;
t976 = qJD(1) * t518;
t519 = t690 * t696 + t691 * t724;
t975 = qJD(1) * t519;
t974 = qJD(1) * t855;
t972 = qJD(1) * t627;
t971 = qJD(1) * t696;
t970 = qJD(1) * t732;
t967 = qJD(4) * t696;
t961 = qJD(5) * t374;
t958 = qJD(5) * t1129;
t957 = qJD(5) * t627;
t956 = qJD(5) * t727;
t954 = qJD(6) * t365;
t953 = qJD(6) * t366;
t367 = t365 / 0.2e1 - t876;
t952 = qJD(6) * t367;
t951 = qJD(6) * t727;
t745 = -t1021 / 0.2e1 - t1020 / 0.2e1 + t785;
t907 = t1085 * t855;
t761 = (-t1028 / 0.2e1 + t907 / 0.2e1) * pkin(4);
t104 = t761 - t745;
t950 = t104 * qJD(1);
t940 = t363 * qJD(1);
t938 = t365 * qJD(1);
t338 = t367 * qJD(1);
t936 = t370 * qJD(1);
t354 = t372 * qJD(1);
t934 = t374 * qJD(1);
t530 = t690 ^ 2 - t691 ^ 2;
t932 = t530 * qJD(1);
t929 = t607 * qJD(1);
t709 = -t730 ^ 2 + t732 ^ 2;
t927 = t709 * qJD(1);
t926 = t730 * qJD(3);
t925 = t732 * qJD(3);
t922 = 0.2e1 * t1214;
t917 = t728 * t1074;
t916 = t365 * qJD(5) + t367 * t924;
t915 = t924 * t366;
t914 = t1174 * qJD(5) + (t966 + t969) * t1129;
t913 = t1129 * t956 + t1174 * t924;
t912 = -t1181 / 0.2e1 + t1171 * pkin(10);
t908 = t1085 * t1129;
t903 = t855 * t972;
t902 = t1129 * t972;
t901 = t725 * t973;
t900 = t726 * t973;
t899 = t690 * t971;
t898 = t691 * t971;
t895 = t727 * t955;
t894 = t1129 * t951;
t893 = t1129 * t723;
t399 = t1129 * t974;
t891 = t691 * t690 * qJD(1);
t890 = t713 * t730 * qJD(1);
t889 = t713 * t970;
t888 = t730 * t925;
t694 = t718 * t1090;
t875 = t717 * t1091;
t863 = t1086 * qJD(3);
t862 = t1086 * qJD(4);
t861 = t1085 * qJD(4);
t860 = t1085 * qJD(5);
t580 = t989 * t686;
t857 = t989 * t717;
t616 = t924 * t691;
t850 = -t919 / 0.2e1;
t848 = t608 * t710;
t843 = pkin(10) * t864;
t841 = t1121 + t865;
t840 = t923 * t631;
t838 = t864 * t675;
t837 = t864 * t717;
t12 = -t166 * t186 + t167 * t187 - t1208;
t832 = t12 * qJD(1) + t9 * qJD(2);
t13 = -t166 * t191 + t167 * t192 - t1208;
t828 = t13 * qJD(1) + t10 * qJD(2);
t790 = t1056 / 0.2e1 - t1057 / 0.2e1;
t11 = (t1115 + t790) * t1129 + (t1114 - t793) * t855;
t14 = -t166 * t199 + t167 * t200 - t1208;
t827 = t14 * qJD(1) + t11 * qJD(2);
t55 = t1083 * t627;
t826 = t55 * qJD(1) + t1251;
t54 = t627 * t649;
t825 = t54 * qJD(1) + t1251;
t823 = t1060 - t1061;
t822 = t1058 - t1059;
t821 = t1056 - t1057;
t816 = -t1026 - t1031;
t815 = -t1129 * t717 - t718 * t855;
t180 = (0.1e1 - t989) * t1033;
t814 = t11 * qJD(1) + t180 * qJD(2);
t31 = (-t167 + t1233) * t1129 + (-t200 + t1259) * t855;
t813 = t31 * qJD(1);
t21 = -t792 + t791;
t812 = -qJD(1) * t21 - qJD(3) * t580;
t809 = t1129 * (-qJD(6) - t974);
t808 = -t845 / 0.2e1;
t202 = t696 * t724;
t807 = t202 * qJD(1);
t143 = t416 + t1185;
t806 = -qJD(1) * t143 + qJD(3) * t684;
t147 = t1216 + t1168 / 0.2e1;
t800 = -t698 / 0.2e1 + t850;
t633 = pkin(3) * t808 - t800;
t803 = -t147 * qJD(1) + t633 * qJD(3);
t802 = qJD(3) * t675;
t801 = qJD(3) * t686;
t797 = t1079 / 0.2e1 + t1211;
t789 = t1225 - t1042 / 0.2e1;
t787 = -t1101 * t1166 + t1225;
t44 = t1239 - t1234 / 0.2e1 + t738 * t731;
t783 = -qJD(1) * t44 - t684 * t969;
t293 = t399 + t1169;
t779 = t1177 + t1169;
t777 = t850 + t1121 + t1095;
t775 = t391 / 0.2e1 + t797;
t281 = -t526 * t668 + t667 * t676;
t6 = t1081 / 0.2e1 + (pkin(10) * t1119 + t1102 * t167 + t1103 * t200) * t731 + (pkin(10) * t1120 + t1102 * t166 + t1104 * t199) * t727 + t787;
t737 = (t1105 - t838) * t1129 + (t1101 - t836) * t855;
t759 = t855 * t843 + t1211;
t70 = t737 + t759;
t772 = t6 * qJD(1) + t70 * qJD(2) + t281 * qJD(3);
t295 = t580 * t668 + t667 * t684;
t4 = -t1046 / 0.2e1 + (t1097 * t187 + t1098 * t167 + t1103 * t192) * t731 + (t1096 * t186 + t1098 * t166 + t1104 * t191) * t727 + t789;
t756 = t864 * t1023 + t1027 / 0.2e1;
t65 = t866 * t1129 - (-t837 + t836) * t855 + t756;
t771 = t4 * qJD(1) + t65 * qJD(2) + t295 * qJD(3);
t746 = -t1030 / 0.2e1 - t1027 / 0.2e1 + t1025 / 0.2e1 - t1023 / 0.2e1;
t760 = (-t1024 / 0.2e1 - t908 / 0.2e1) * pkin(4);
t105 = t760 + t746;
t747 = t1042 / 0.2e1 - t1209 / 0.2e1 + t1244 * t1199;
t762 = (t1199 * t920 + t1247) * pkin(4);
t33 = t762 + t747;
t401 = t675 * t684 + t676 * t686;
t768 = -t33 * qJD(1) - t105 * qJD(2) + t401 * qJD(3);
t766 = t905 / 0.2e1 + t906 / 0.2e1;
t764 = t1193 * t1129;
t763 = (t958 + t1159) * t855;
t734 = (t1089 * t667 + t668 * t766) * pkin(4) - t675 * t837 + t676 * t1094;
t177 = t1077 / 0.2e1 - t686 * t843 + t734;
t596 = (t717 * t773 + t718 * t728) * pkin(4);
t733 = t790 * t717 + (t1085 * t793 - t1247) * pkin(4) + t1199 * t1094;
t8 = t733 - t1165;
t735 = (t1089 * t855 + t1129 * t766) * pkin(4) - t855 * t837 + t1215;
t95 = t735 + t759;
t752 = t8 * qJD(1) + t95 * qJD(2) + t177 * qJD(3) + t596 * qJD(4);
t487 = t841 * t727;
t630 = t777 * t727;
t90 = t775 * t731;
t750 = pkin(5) * t956 + qJD(1) * t90 + qJD(3) * t487 + qJD(4) * t630;
t488 = t841 * t731;
t632 = t777 * t731;
t88 = t775 * t727;
t749 = pkin(5) * t955 - qJD(1) * t88 + qJD(3) * t488 + qJD(4) * t632;
t744 = -t1031 / 0.2e1 - t1026 / 0.2e1 + t785;
t721 = pkin(5) * t1091;
t711 = t730 * t970;
t707 = t727 * t917;
t697 = t708 * qJD(6);
t695 = t1019 / 0.2e1;
t679 = t686 * qJD(4);
t678 = t685 * qJD(5);
t661 = t675 * qJD(5);
t660 = t727 * t677;
t646 = t727 * t662;
t639 = t667 * t1087;
t638 = t667 * t1090;
t635 = t731 * t850 + t695 + t722;
t634 = t727 * t850 + t694 + t721;
t618 = (t808 + t1003) * pkin(3) + t800;
t617 = -t631 / 0.2e1 - t799 / 0.2e1 + (-t904 - t911 / 0.2e1) * pkin(3);
t591 = t607 * qJD(5);
t552 = t580 * qJD(4);
t513 = t526 * qJD(5);
t494 = t1088 * t684 - t731 * t842;
t491 = t1090 * t684 + t727 * t842;
t490 = t1087 * t675 + t639 + t722;
t489 = t1090 * t675 + t638 + t721;
t481 = 0.2e1 * t844 - t1004;
t476 = t1088 * t686 + t639 + t695;
t475 = t1091 * t686 + t638 + t694;
t377 = t924 * t607;
t353 = t372 * qJD(6);
t351 = t371 * qJD(6);
t350 = t370 * qJD(6);
t346 = t363 * qJD(5);
t321 = t723 + t354;
t320 = -t338 - t951;
t301 = pkin(4) * t766 + t1142 - t838;
t282 = t1257 * t1128;
t252 = qJD(5) * t481 - t1159;
t229 = t481 * t924 - t958;
t211 = 0.2e1 * t1213 + t922;
t210 = 0.2e1 * t1212 + t922;
t205 = t953 - t961;
t204 = t697 - t987;
t203 = t697 + t987;
t176 = -t1077 / 0.2e1 + t734 + t1142 * pkin(10);
t133 = t1164 + t952;
t132 = -t1140 + t1204;
t131 = t1140 + t1205;
t115 = t1198 + t206;
t107 = t760 - t746;
t106 = t761 + t745;
t100 = t346 + t353 - t1253;
t99 = -t952 + t961 + t1252;
t98 = qJD(5) * t211 + t1192 * t924;
t97 = -(t900 + t1175) * t855 - t1139;
t96 = -(t901 - t1175) * t855 + t1139;
t94 = t735 + t912;
t93 = t351 + t914 + t1253;
t92 = -t1164 - t953 - t1252;
t91 = -t1260 + t998 / 0.2e1 - t797 * t731;
t89 = -t1259 - t1011 / 0.2e1 + t797 * t727;
t85 = t999 / 0.2e1 - t784 * t731 - t1260;
t83 = -t1012 / 0.2e1 + t784 * t727 - t1259;
t80 = qJD(5) * t210 + t1191 * t924 + t1197;
t79 = t1000 / 0.2e1 - t786 * t731 - t1260;
t77 = -t1013 / 0.2e1 + t786 * t727 - t1259;
t69 = t737 + t912;
t67 = t346 + t351;
t64 = t1032 / 0.2e1 + t1215 - t855 * t836 + t756 + t1171 * t717;
t58 = t731 * t740 + t1255;
t57 = t727 * t740 + t1254;
t49 = t353 + t914;
t47 = t731 * t751 + t1255;
t46 = t727 * t751 + t1254;
t43 = t717 * t873 - t718 * t872 + t731 * t744 + t1265;
t42 = t1129 * t875 - t694 * t855 + t727 * t744 + t1264;
t34 = t762 - t747;
t24 = t790 + t791;
t22 = t790 + t792;
t20 = t791 + t792;
t7 = t733 + t1165;
t5 = t792 * pkin(10) + t790 * t668 - t793 * t675 + t1217 + t787;
t3 = t717 * t169 + t186 * t875 + t1046 / 0.2e1 + t793 * t686 + t791 * t668 + t789;
t2 = t924 * t1223;
t1 = qJD(3) * t9 + qJD(4) * t10 + qJD(5) * t11;
t18 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t888, t709 * qJD(3), 0, -t888, 0, 0, t713 * t926, t713 * t925, 0, 0, t691 * t1154, t924 * t530, 0, -t690 * t616, 0, 0, qJD(3) * t518 + t691 * t967, qJD(3) * t519 + t690 * t967, 0, qJD(3) * t202, -t764, -t1257 * t1196, 0, t763, 0, 0, qJD(3) * t277 - qJD(4) * t289 + t1129 * t957, qJD(3) * t278 - qJD(4) * t290 - t855 * t957, 0, qJD(3) * t54 + qJD(4) * t55, -t726 * t764 - t848, 0.2e1 * t1172 * t1193 * t727 - qJD(6) * t379, t1235 * t1257 - t855 * t894, -t725 * t764 + t848, -t1236 * t1257 - t855 * t893, t763, qJD(3) * t26 + qJD(4) * t28 + qJD(5) * t30 + qJD(6) * t87, qJD(3) * t27 + qJD(4) * t29 + qJD(5) * t31 + qJD(6) * t86, -qJD(3) * t15 - qJD(4) * t16 - qJD(5) * t17, qJD(3) * t12 + qJD(4) * t13 + qJD(5) * t14; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t711, t927, t925, -t711, -t926, 0, -t712 * t925 + t890, t712 * t926 + t889, 0, 0, t891, t932, t1154, -t891, -t616, 0, -t1162 + t976, -t1163 + t975 (-t1086 * t690 - t691 * t729) * t1073 (-t1086 * t582 + t581 * t729) * t1073 + t807, -t1177, -t1226, -t1193, t399, t252, 0, -qJD(3) * t1199 + qJD(4) * t1263 + t1248 + t984, -qJD(3) * t1166 + qJD(4) * t1262 + t1250 + t983 (-t1020 - t1021) * qJD(3) + t106 * qJD(4) (t1199 * t675 + t1209) * qJD(3) + t34 * qJD(4) + t825, t97, t80, t93, t96, t92, t293, t1055 + (t727 * t816 - t1233) * qJD(3) + t42 * qJD(4) + t46 * qJD(5) + t79 * qJD(6), t1054 + (t731 * t816 + t1234) * qJD(3) + t43 * qJD(4) + t47 * qJD(5) + t77 * qJD(6), qJD(3) * t823 + t20 * qJD(4) + t22 * qJD(5) - t1066 (t1199 * t667 + t668 * t823) * qJD(3) + t3 * qJD(4) + t5 * qJD(5) + t832; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t891, t932, t1154, -t891, -t616, 0, -t1162 + t898, -t1163 + t899, 0, 0, -t1177, -t1226, -t1193, t399, t252, 0, qJD(3) * t1263 - qJD(4) * t1199 + t1248 - t982, qJD(3) * t1262 - qJD(4) * t1166 + t1250 - t981, t106 * qJD(3) + (t907 - t1028) * t1075, t34 * qJD(3) + (-t1085 * t1199 + t1166 * t728) * t1075 + t826, t97, t80, t93, t96, t92, t293, t1053 + t42 * qJD(3) + (t727 * t815 - t1233) * qJD(4) + t57 * qJD(5) + t85 * qJD(6), t1039 + t43 * qJD(3) + (t731 * t815 + t1234) * qJD(4) + t58 * qJD(5) + t83 * qJD(6), t20 * qJD(3) + qJD(4) * t822 + t24 * qJD(5) - t1065, t3 * qJD(3) + (t717 * t822 + t1046) * qJD(4) + t7 * qJD(5) + t828; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1177, -t1226, -t1193, t1177, t229, 0, -qJD(5) * t1199 + t1263 * t924 + t902, -qJD(5) * t1166 + t1262 * t924 - t903, 0, 0 (-t895 - t900) * t855 + t1127, qJD(5) * t1191 + t924 * t210 + t1197, t913 + t1253 (t895 - t901) * t855 - t1127, -t1124 - t1252, t779, t1038 + t46 * qJD(3) + t57 * qJD(4) + (t727 * t839 - t1233) * qJD(5) + t91 * qJD(6), t47 * qJD(3) + t58 * qJD(4) + (t731 * t839 + t1234) * qJD(5) + t89 * qJD(6) + t813, t22 * qJD(3) + t24 * qJD(4) + qJD(5) * t821 - t1062, t5 * qJD(3) + t7 * qJD(4) + (pkin(10) * t821 - t1081) * qJD(5) + t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t112, t1135 * t1161 - t977, t727 * t809 + t1157, t112, t731 * t809 - t915, t282, qJD(3) * t79 + qJD(4) * t85 + qJD(5) * t91 - qJD(6) * t167 + t1068, qJD(3) * t77 + qJD(4) * t83 + qJD(5) * t89 + qJD(6) * t166 + t1069, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t180 + t181 * t924; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t926, -t925, 0, 0, 0, 0, 0, 0, 0, 0, -t616, -t1154, 0 (-t1086 * t691 + t690 * t729) * t1073, 0, 0, 0, 0, 0, 0, t252, t1193, 0 (-t1025 + t1030) * qJD(3) + t107 * qJD(4) + t1245, 0, 0, 0, 0, 0, 0, t133, t49, t98 (-t668 * t858 + t1032) * qJD(3) + t64 * qJD(4) + t69 * qJD(5) + t1130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t616, -t1154, 0, 0, 0, 0, 0, 0, 0, 0, t252, t1193, 0, t107 * qJD(3) + (-t908 - t1024) * t1075 + t1245, 0, 0, 0, 0, 0, 0, t133, t49, t98, t64 * qJD(3) + (-t855 * t857 + t1176) * qJD(4) + t94 * qJD(5) + t1132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t229, t1193, 0, 0, 0, 0, 0, 0, 0, 0, t1124 + t954, t350 + t913, qJD(5) * t1192 + t924 * t211, t69 * qJD(3) + t94 * qJD(4) + (-t1079 * t989 - t1181) * qJD(5) + t814; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t893 + t916, t1125 + t894, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t711, -t927, 0, t711, 0, 0, -t890, -t889, 0, 0, -t891, -t932, 0, t891, 0, 0, -t976, -t975, 0, -t807, t1177, t1226, 0, -t399, t591, 0, qJD(4) * t143 - t1249 - t984, -t983, -qJD(4) * t104, -qJD(4) * t33 - t825, t132, t115, t100, t131, t99, -t293, qJD(4) * t41 + qJD(5) * t45 + qJD(6) * t78 - t1055, qJD(4) * t44 + qJD(5) * t48 + qJD(6) * t76 - t1054, qJD(4) * t21 + qJD(5) * t23 + t1066, qJD(4) * t4 + qJD(5) * t6 - t832; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t591, 0, 0, -qJD(4) * t105 - t1245, 0, 0, 0, 0, 0, 0, t205, t67, t206, qJD(4) * t65 + qJD(5) * t70 - t1130; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(4) * t1084, -pkin(3) * t862, 0, 0, 0, 0, 0, 0, 0, 0, t990, -t679 + t661, 0, qJD(4) * t401, t710, t697, 0, -t710, 0, 0, t667 * t951 + t731 * t990, t667 * t723 + t646 + t660, t552 - t513, qJD(4) * t295 + qJD(5) * t281; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t924 * t1084 (-t863 - t862) * pkin(3), 0, 0, 0, 0, 0, 0, 0, 0, qJD(5) * t617 - t677 - t806, qJD(5) * t618 - t679 - t801, -t950 (-t1085 * t684 + t686 * t728) * t1075 + t768, t710, t697, 0, -t710, 0, 0, qJD(5) * t494 + qJD(6) * t475 - t1153 * t684 + t1071, qJD(5) * t491 + qJD(6) * t476 + t660 - t783, qJD(5) * t301 + t552 - t812 (t684 * t718 + t686 * t857) * qJD(4) + t176 * qJD(5) + t771; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t929, 0, qJD(4) * t617 - t1145 - t662, qJD(4) * t618 + t661 + t802, 0, 0, -t308, t203, t940, t308, t934, 0, qJD(4) * t494 + qJD(6) * t489 + (-qJD(3) - qJD(5)) * t731 * t676 + t1131, qJD(4) * t491 + qJD(6) * t490 - t1146 + t646, qJD(4) * t301 - t1143 - t513, t176 * qJD(4) + (-pkin(5) * t676 - pkin(10) * t526) * qJD(5) + t772; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t390, t321, -t298, t320, -t1167, qJD(4) * t475 + qJD(5) * t489 - t668 * t723 - t1147, qJD(4) * t476 + qJD(5) * t490 + t668 * t951 - t1148, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t891, -t932, 0, t891, 0, 0, -t898, -t899, 0, 0, t1177, t1226, 0, -t399, t591, 0, -qJD(3) * t143 - t1249 + t982, qJD(5) * t147 + t981, qJD(3) * t104, qJD(3) * t33 - t826, t132, t115, t100, t131, t99, -t293, -qJD(3) * t41 + qJD(5) * t56 + qJD(6) * t84 - t1053, -qJD(3) * t44 + qJD(5) * t59 + qJD(6) * t82 - t1039, -qJD(3) * t21 + qJD(5) * t25 + t1065, -qJD(3) * t4 + qJD(5) * t8 - t828; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t591, 0, 0, qJD(3) * t105 - t1245, 0, 0, 0, 0, 0, 0, t205, t67, t206, -qJD(3) * t65 + qJD(5) * t95 - t1132; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t729 * t1073, pkin(3) * t863, 0, 0, 0, 0, 0, 0, 0, 0, -qJD(5) * t631 + t806, -qJD(5) * t633 + t801, t950, -t768, t710, t697, 0, -t710, 0, 0, -qJD(5) * t493 - qJD(6) * t473 + t684 * t968 - t1071, qJD(5) * t492 - qJD(6) * t474 + t783, qJD(5) * t302 + t812, qJD(5) * t177 - t771; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t917, -pkin(4) * t860, 0, 0, t710, t697, 0, -t710, 0, 0, t718 * t951 - t731 * t917, t718 * t723 + t707, t678, t596 * qJD(5); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t929, 0, t840 - t1144 (-t861 - t860) * pkin(4) - t803, 0, 0, -t308, t203, t940, t308, t934, 0, qJD(6) * t634 + t731 * t840 - t1141, qJD(6) * t635 - t1151 + t707, t678 - t1138 (-pkin(5) * t728 + pkin(10) * t773) * t1074 + t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t390, t321, -t298, t320, -t1167, qJD(5) * t634 - t717 * t723 - t1149, qJD(5) * t635 + t717 * t951 - t1150, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1177, t1226, 0, -t1177, -t377, 0, t1228 * t924 - t902, -qJD(4) * t147 + t903, 0, 0, -t1126 + t1204, t1198 - t1258, t350 - t1253 - t995, t1126 + t1205, -t954 + t1252 - t1156, -t779, -qJD(3) * t45 - qJD(4) * t56 - qJD(6) * t90 - t1038, -qJD(3) * t48 - qJD(4) * t59 + qJD(6) * t88 - t813, -qJD(3) * t23 - qJD(4) * t25 + t1062, -qJD(3) * t6 - qJD(4) * t8 - t827; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t377, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1156, -t995, -t1258, -qJD(3) * t70 - qJD(4) * t95 - t814; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t929, 0, qJD(4) * t631 + t1145, qJD(4) * t633 - t802, 0, 0, t307, t204, -t940, -t307, -t934, 0, qJD(4) * t493 - qJD(6) * t487 + t676 * t968 - t1131, -qJD(4) * t492 - qJD(6) * t488 + t1146, -qJD(4) * t302 + t1143, -qJD(4) * t177 - t772; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t929, 0, t918 + t1144, pkin(4) * t861 + t803, 0, 0, t307, t204, -t940, -t307, -t934, 0, -qJD(6) * t630 + t731 * t918 + t1141, -qJD(6) * t632 + t1151, t1138, -t752; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t710, t697, 0, -t710, 0, 0, -pkin(5) * t951, -pkin(5) * t723, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t298, t390, t723 + t936, -t298, -t938 - t951, -t1167, -pkin(10) * t723 - t750, pkin(10) * t951 - t749, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t112, 0.2e1 * t1129 * t1135 + t977, t1177 * t727 - t1125, -t112, t1177 * t731 + t916, t282, -qJD(3) * t78 - qJD(4) * t84 + qJD(5) * t90 - t1068, -qJD(3) * t76 - qJD(4) * t82 - qJD(5) * t88 - t1069, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t915, -t1157, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t298, -t390, -t354, t298, t338, t1167, qJD(4) * t473 + qJD(5) * t487 + t1147, qJD(4) * t474 + qJD(5) * t488 + t1148, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t298, -t390, -t354, t298, t338, t1167, qJD(5) * t630 + t1149, qJD(5) * t632 + t1150, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t298, -t390, -t936, t298, t938, t1167, t750, t749, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t18;
