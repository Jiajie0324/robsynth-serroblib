% Calculate minimal parameter regressor of coriolis matrix for
% S6RPRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RPRRRR1_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR1_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR1_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR1_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:55:20
% EndTime: 2019-03-09 06:55:43
% DurationCPUTime: 13.31s
% Computational Cost: add. (11763->517), mult. (22627->656), div. (0->0), fcn. (26047->10), ass. (0->420)
t399 = sin(qJ(6));
t400 = sin(qJ(5));
t402 = sin(qJ(3));
t386 = sin(pkin(11)) * pkin(1) + pkin(7);
t633 = pkin(8) + t386;
t364 = t633 * t402;
t405 = cos(qJ(3));
t365 = t633 * t405;
t401 = sin(qJ(4));
t404 = cos(qJ(4));
t186 = t404 * t364 + t401 * t365;
t368 = t401 * t405 + t404 * t402;
t680 = -t368 * pkin(9) - t186;
t698 = t400 * t680;
t367 = -t401 * t402 + t404 * t405;
t348 = t404 * t365;
t593 = t401 * t364;
t679 = -t348 + t593;
t225 = -pkin(9) * t367 + t679;
t639 = cos(qJ(5));
t717 = t639 * t225;
t723 = -t717 + t698;
t738 = t723 * t399;
t744 = t738 / 0.2e1;
t750 = 0.2e1 * t744;
t403 = cos(qJ(6));
t737 = t723 * t403;
t745 = -t737 / 0.2e1;
t749 = 0.2e1 * t745;
t641 = -t403 / 0.2e1;
t394 = pkin(5) * t641;
t480 = -t639 * t367 + t400 * t368;
t361 = t639 * t368;
t596 = t400 * t367;
t678 = t361 + t596;
t697 = t403 * t678;
t491 = -t697 / 0.2e1;
t748 = pkin(10) * t491 - t480 * t394 + t750;
t643 = -t399 / 0.2e1;
t494 = t480 * t643;
t699 = t399 * t678;
t495 = -t699 / 0.2e1;
t747 = -pkin(5) * t494 + pkin(10) * t495 + t749;
t198 = t717 / 0.2e1;
t493 = -t698 / 0.2e1;
t736 = t493 + t198;
t746 = 0.2e1 * t736;
t743 = qJD(4) + qJD(5);
t387 = -cos(pkin(11)) * pkin(1) - pkin(2);
t373 = -pkin(3) * t405 + t387;
t321 = -t367 * pkin(4) + t373;
t701 = pkin(10) * t678;
t464 = pkin(5) * t480 - t701;
t411 = t321 + t464;
t61 = -t403 * t411 + t738;
t739 = t678 * t723;
t742 = t399 * t739 - t61 * t678;
t62 = t399 * t411 + t737;
t741 = t403 * t739 - t62 * t678;
t695 = t639 * t680;
t709 = -t695 / 0.2e1;
t718 = t400 * t225;
t719 = t709 - t718 / 0.2e1;
t740 = 0.2e1 * t719;
t735 = qJD(3) * t746;
t734 = qJD(3) * t740;
t532 = qJD(3) + qJD(4);
t720 = qJD(5) + t532;
t726 = t695 + t718;
t616 = t403 * t726;
t731 = t641 * t726 - t616 / 0.2e1;
t617 = t399 * t726;
t730 = t643 * t726 - t617 / 0.2e1;
t729 = -t717 / 0.2e1;
t471 = t695 / 0.2e1;
t52 = t709 + t471;
t728 = qJD(5) * t52;
t727 = t52 * qJD(1);
t309 = t678 ^ 2;
t708 = -t480 ^ 2 + t309;
t713 = t708 * t403;
t722 = qJD(1) * t713;
t714 = t708 * t399;
t721 = t714 * qJD(1);
t710 = t708 * qJD(1);
t634 = t678 * pkin(5);
t635 = t480 * pkin(10);
t182 = t634 + t635;
t665 = t480 * qJD(5);
t684 = t480 * t532;
t706 = t684 + t665;
t397 = t403 ^ 2;
t659 = t399 ^ 2;
t479 = t659 / 0.2e1 - t397 / 0.2e1;
t154 = t479 * t678;
t123 = t154 * qJD(6);
t576 = qJD(1) * t678;
t696 = t480 * t576;
t705 = t397 * t696 - t123;
t652 = -t480 / 0.2e1;
t703 = t480 / 0.2e1;
t323 = t400 * pkin(4);
t389 = pkin(10) + t323;
t700 = t389 * t678;
t483 = qJD(3) + t743;
t601 = t399 * t403;
t687 = t483 * t601;
t109 = -t154 * qJD(1) + t687;
t647 = t361 / 0.2e1;
t669 = t596 / 0.2e1 + t647;
t694 = qJD(6) * t669;
t693 = t669 * qJD(1);
t682 = t532 * t403;
t692 = -qJD(5) * t697 - t678 * t682;
t691 = -0.2e1 * t678;
t690 = t678 * t532;
t529 = -t397 + t659;
t689 = t529 * t483;
t488 = t703 + t652;
t163 = t488 * t403;
t686 = t532 * t163;
t651 = t678 / 0.2e1;
t487 = t651 - t678 / 0.2e1;
t166 = t487 * t403;
t685 = t532 * t166;
t683 = t532 * t367;
t528 = t639 * pkin(4);
t390 = -t528 - pkin(5);
t644 = -t390 / 0.2e1;
t409 = -t700 / 0.2e1 + t480 * t644 + (t400 * t651 + t639 * t652) * pkin(4);
t441 = pkin(5) * t652 + t701 / 0.2e1;
t406 = t409 + t441;
t20 = t403 * t406;
t510 = t639 * t401;
t594 = t400 * t404;
t362 = (t510 + t594) * pkin(3);
t515 = pkin(3) * t404 + pkin(4);
t466 = t400 * t515;
t357 = pkin(3) * t510 + t466;
t648 = t357 / 0.2e1;
t468 = t323 / 0.2e1 + t648;
t436 = -t362 / 0.2e1 + t468;
t236 = t436 * t399;
t527 = qJD(4) * t323;
t155 = t487 * t399;
t561 = t155 * qJD(2);
t677 = -qJD(1) * t20 - qJD(3) * t236 - t399 * t527 - t561;
t509 = t639 * t404;
t595 = t400 * t401;
t363 = (t509 - t595) * pkin(3);
t646 = -t363 / 0.2e1;
t375 = t639 * t515;
t356 = pkin(3) * t595 - t375;
t349 = -pkin(5) + t356;
t650 = -t349 / 0.2e1;
t459 = t646 + t644 + t650;
t222 = t459 * t403;
t638 = pkin(4) * t368;
t118 = t638 + t182;
t645 = t389 / 0.2e1;
t433 = t480 * t645 + t644 * t678;
t420 = t118 / 0.2e1 + t433;
t27 = t399 * t420;
t553 = t163 * qJD(2);
t605 = t390 * t403;
t676 = -qJD(1) * t27 + qJD(3) * t222 - qJD(4) * t605 - t553;
t221 = t459 * t399;
t29 = t403 * t420;
t158 = t488 * t399;
t558 = t158 * qJD(2);
t569 = qJD(4) * t399;
t675 = qJD(1) * t29 + qJD(3) * t221 - t390 * t569 - t558;
t396 = t402 * pkin(3);
t117 = t118 + t396;
t350 = pkin(10) + t357;
t435 = t350 * t703 + t650 * t678;
t421 = t117 / 0.2e1 + t435;
t24 = t403 * t421;
t572 = qJD(3) * t399;
t674 = qJD(1) * t24 - t349 * t572 - t558;
t22 = t399 * t421;
t571 = qJD(3) * t403;
t673 = -qJD(1) * t22 - t349 * t571 - t553;
t486 = t356 / 0.2e1 + t650;
t649 = -t350 / 0.2e1;
t414 = (t649 + t648) * t678 + t486 * t480;
t408 = t414 + t441;
t15 = t403 * t408;
t672 = -qJD(1) * t15 - t357 * t572 - t561;
t419 = t698 / 0.2e1;
t51 = t729 + t419 + t736;
t470 = -t361 / 0.2e1;
t308 = t470 + t647;
t538 = t308 * qJD(2);
t671 = qJD(1) * t51 + qJD(3) * t357 - t538;
t50 = t493 + t419;
t670 = t50 * qJD(1) + t323 * qJD(3) - t538;
t668 = t532 * t186;
t17 = t399 * t406;
t237 = t436 * t403;
t550 = t166 * qJD(2);
t667 = -t17 * qJD(1) + t237 * qJD(3) + t550;
t12 = t399 * t408;
t666 = t12 * qJD(1) - t550;
t526 = qJD(5) * t323;
t505 = qJD(1) * t601;
t664 = t154 * t483 + t309 * t505;
t162 = t403 * t480;
t164 = 0.2e1 * t703 * t403;
t663 = t162 * qJD(5) + t164 * t532;
t536 = t678 * qJD(5);
t662 = -t403 * t536 - t532 * t697;
t658 = pkin(5) / 0.2e1;
t489 = -t348 / 0.2e1;
t642 = t399 / 0.2e1;
t640 = t403 / 0.2e1;
t637 = pkin(5) * t399;
t632 = pkin(3) * qJD(4);
t631 = qJD(3) * pkin(3);
t2 = t117 * t162 + t742;
t630 = t2 * qJD(1);
t157 = t399 * t480;
t3 = -t117 * t157 + t741;
t629 = t3 * qJD(1);
t4 = t118 * t162 + t742;
t627 = t4 * qJD(1);
t5 = -t118 * t157 + t741;
t626 = t5 * qJD(1);
t6 = (-t61 + t738) * t678 + t182 * t162;
t625 = t6 * qJD(1);
t434 = t362 * t651 + t480 * t646;
t407 = -(t349 / 0.2e1 + t644) * t480 + (t649 + t645) * t678 + t434;
t8 = t745 + t737 / 0.2e1 + t407 * t399;
t622 = t8 * qJD(1);
t31 = t480 * t61 + t699 * t726;
t615 = qJD(1) * t31;
t32 = -t480 * t62 - t697 * t726;
t614 = qJD(1) * t32;
t66 = t529 * t488;
t612 = qJD(1) * t66;
t184 = t321 * t678;
t335 = t396 + t638;
t92 = t335 * t480 + t184;
t610 = qJD(1) * t92;
t185 = t321 * t480;
t93 = t335 * t678 - t185;
t609 = qJD(1) * t93;
t607 = t678 * t350;
t606 = t480 * t349;
t587 = t532 * t155;
t346 = t357 * qJD(5);
t358 = t362 * qJD(4);
t582 = -t358 - t346;
t101 = -t480 * t638 - t184;
t581 = qJD(1) * t101;
t102 = -t638 * t678 + t185;
t580 = qJD(1) * t102;
t122 = t488 * t601;
t578 = qJD(1) * t122;
t577 = qJD(1) * t480;
t575 = qJD(1) * t321;
t574 = qJD(1) * t373;
t573 = qJD(1) * t405;
t570 = qJD(4) * t373;
t568 = qJD(5) * t166;
t567 = qJD(5) * t403;
t566 = qJD(6) * t399;
t395 = qJD(6) * t403;
t562 = t155 * qJD(1);
t560 = t157 * qJD(1);
t559 = t157 * qJD(6);
t557 = t158 * qJD(6);
t159 = t157 / 0.2e1 - t494;
t132 = t159 * qJD(1);
t556 = t159 * qJD(6);
t555 = t162 * qJD(1);
t148 = t164 * qJD(1);
t551 = t166 * qJD(1);
t171 = t529 * t309;
t549 = t171 * qJD(1);
t253 = -t367 * t396 + t368 * t373;
t545 = t253 * qJD(1);
t254 = t367 * t373 + t368 * t396;
t544 = t254 * qJD(1);
t260 = t367 ^ 2 - t368 ^ 2;
t543 = t260 * qJD(1);
t272 = t489 + t348 / 0.2e1;
t542 = t272 * qJD(1);
t539 = t308 * qJD(1);
t384 = -t402 ^ 2 + t405 ^ 2;
t535 = t384 * qJD(1);
t534 = t402 * qJD(3);
t533 = t405 * qJD(3);
t519 = t157 * qJD(5) + t159 * t532;
t518 = t532 * t158;
t517 = t699 * qJD(5) + (t569 + t572) * t678;
t516 = t399 * t536 + t532 * t699;
t508 = t480 * t575;
t507 = t678 * t575;
t506 = t397 * t576;
t504 = t678 * t395;
t503 = t678 * t566;
t501 = t367 * t574;
t500 = t368 * t574;
t499 = t387 * t402 * qJD(1);
t498 = t387 * t573;
t385 = t399 * t395;
t497 = t402 * t573;
t371 = t390 * t642;
t490 = t480 * t640;
t485 = t639 * qJD(4);
t484 = t639 * qJD(5);
t482 = pkin(3) * t532;
t474 = -t528 / 0.2e1;
t472 = t678 * t505;
t469 = -t509 / 0.2e1;
t467 = t658 + t486;
t465 = t743 * t323;
t462 = -0.2e1 * t472;
t461 = 0.2e1 * t472;
t7 = (-t62 + t737) * t678 - t182 * t157;
t458 = t7 * qJD(1);
t457 = t480 * t472;
t453 = -t606 - t607;
t452 = -t390 * t480 - t700;
t442 = -t375 / 0.2e1 + t474;
t325 = pkin(3) * t469 - t442;
t448 = t325 * qJD(3) - t727;
t447 = -qJD(3) * t356 - t727;
t48 = t198 + t729;
t445 = -qJD(1) * t48 + qJD(3) * t362;
t56 = t471 + t718 / 0.2e1 + t719;
t444 = -qJD(1) * t56 + qJD(3) * t363;
t443 = t678 * (-qJD(6) - t577);
t440 = t635 / 0.2e1 + t634 / 0.2e1;
t11 = t744 - t738 / 0.2e1 + t407 * t403;
t432 = -qJD(1) * t11 - t362 * t572;
t105 = t577 * t678 + t694;
t428 = t696 + t694;
t427 = t474 + t658 + t644;
t426 = t182 / 0.2e1 + t440;
t418 = t706 * t678;
t231 = t467 * t399;
t322 = t427 * t399;
t35 = t426 * t403;
t413 = qJD(1) * t35 + qJD(3) * t231 + qJD(4) * t322 + qJD(5) * t637;
t232 = t467 * t403;
t324 = t427 * t403;
t33 = t426 * t399;
t412 = pkin(5) * t567 - qJD(1) * t33 + qJD(3) * t232 + qJD(4) * t324;
t410 = -t607 / 0.2e1 - t606 / 0.2e1 + t434;
t393 = -t637 / 0.2e1;
t382 = t399 * t526;
t374 = t529 * qJD(6);
t372 = t605 / 0.2e1;
t359 = t363 * qJD(4);
t345 = t356 * qJD(5);
t344 = t399 * t358;
t334 = t399 * t346;
t329 = t349 * t640;
t328 = t349 * t642;
t327 = t403 * t474 + t372 + t394;
t326 = t399 * t474 + t371 + t393;
t320 = t368 * t367 * qJD(1);
t319 = (t469 + t595) * pkin(3) + t442;
t318 = -t323 / 0.2e1 - t466 / 0.2e1 + (-t510 - t594 / 0.2e1) * pkin(3);
t317 = t532 * t368;
t300 = t308 * qJD(5);
t259 = t385 * t691;
t238 = t362 * t641 - t403 * t468;
t235 = t362 * t642 + t399 * t468;
t234 = t356 * t640 + t329 + t394;
t233 = t356 * t642 + t328 + t393;
t230 = 0.2e1 * t470 - t596;
t224 = t363 * t641 + t329 + t372;
t223 = t363 * t643 + t328 + t371;
t187 = 0.2e1 * t489 + t593;
t181 = t462 - t689;
t180 = t461 + t689;
t169 = t532 * t308;
t147 = t164 * qJD(6);
t145 = t163 * qJD(6);
t144 = t162 * qJD(6);
t140 = t155 * qJD(5);
t121 = t162 * t643 - t399 * t490;
t120 = t395 + t148;
t119 = -t132 - t566;
t114 = t385 + t578;
t113 = t385 - t578;
t94 = t720 * t669;
t75 = t230 * qJD(5) - t690;
t68 = t230 * t532 - t536;
t67 = t397 * t652 + t479 * t480 + t659 * t703;
t65 = t557 - t568;
t64 = -t374 - t612;
t63 = -t374 + t612;
t47 = t556 + t692;
t46 = -qJD(5) * t122 + t705;
t45 = qJD(5) * t66 + t259 - 0.2e1 * t457;
t41 = t140 + t147 - t722;
t40 = -t556 + t568 + t721;
t39 = t121 * qJD(5) - t123 - (t399 * t682 + t506) * t480;
t38 = t145 + t517 + t722;
t37 = -t557 - t721 - t692;
t36 = t182 * t640 - t403 * t440 - t617;
t34 = t182 * t643 + t399 * t440 - t616;
t30 = t118 * t640 - t403 * t433 + t730;
t28 = t118 * t643 + t399 * t433 + t731;
t26 = t67 * qJD(5) + t529 * t684 + t259 + 0.2e1 * t457;
t25 = t117 * t640 - t403 * t435 + t730;
t23 = t117 * t643 + t399 * t435 + t731;
t21 = t140 + t145;
t19 = t403 * t409 + t748;
t18 = t399 * t409 + t747;
t16 = t147 + t517;
t14 = t403 * t414 + t748;
t13 = t399 * t414 + t747;
t10 = t389 * t491 - t390 * t490 + t403 * t410 + t750;
t9 = -t371 * t480 + t389 * t495 + t399 * t410 + t749;
t1 = [0, 0, 0, 0, t402 * t533, t384 * qJD(3), 0, 0, 0, t387 * t534, t387 * t533, t368 * t683, t532 * t260, 0, 0, 0, qJD(3) * t253 + t368 * t570, qJD(3) * t254 + t367 * t570, -t418, -t720 * t708, 0, 0, 0, qJD(3) * t92 - qJD(4) * t101 + t321 * t536, qJD(3) * t93 - qJD(4) * t102 - t321 * t665, -t309 * t385 - t397 * t418, 0.2e1 * t399 * t697 * t706 + t171 * qJD(6), -t480 * t503 + t713 * t720, -t480 * t504 - t714 * t720 (t536 + t690) * t480, qJD(3) * t2 + qJD(4) * t4 + qJD(5) * t6 + qJD(6) * t32, qJD(3) * t3 + qJD(4) * t5 + qJD(5) * t7 + qJD(6) * t31; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, t497, t535, t533, -t534, 0, -t386 * t533 + t499, t386 * t534 + t498, t320, t543, t683, -t317, 0, qJD(3) * t679 + t187 * qJD(4) + t545, t544 + t668, -t696, -t710, -t706, t75, 0, -qJD(3) * t723 + t743 * t746 + t610, -qJD(3) * t726 + t740 * t743 + t609, t39, t26, t38, t37, t105, t630 + (t399 * t453 - t737) * qJD(3) + t9 * qJD(4) + t13 * qJD(5) + t25 * qJD(6), t629 + (t403 * t453 + t738) * qJD(3) + t10 * qJD(4) + t14 * qJD(5) + t23 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, t543, t683, -t317, 0, t187 * qJD(3) + qJD(4) * t679 + t500, t501 + t668, -t696, -t710, -t706, t75, 0, -qJD(4) * t723 + qJD(5) * t746 - t581 + t735, -qJD(4) * t726 + qJD(5) * t740 - t580 + t734, t39, t26, t38, t37, t105, t627 + t9 * qJD(3) + (t399 * t452 - t737) * qJD(4) + t18 * qJD(5) + t30 * qJD(6), t626 + t10 * qJD(3) + (t403 * t452 + t738) * qJD(4) + t19 * qJD(5) + t28 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t696, -t710, -t706, t68, 0, qJD(4) * t746 - qJD(5) * t723 + t507 + t735, qJD(4) * t740 - qJD(5) * t726 - t508 + t734, -t123 + (-t399 * t567 - t506) * t480 + t532 * t121, t259 + t532 * t67 + (qJD(5) * t529 + t461) * t480, t516 + t722, -t721 - t662, t428, t625 + t13 * qJD(3) + t18 * qJD(4) + (t399 * t464 - t737) * qJD(5) + t36 * qJD(6), t14 * qJD(3) + t19 * qJD(4) + (t403 * t464 + t738) * qJD(5) + t34 * qJD(6) + t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t664, t687 * t691 + t549, t399 * t443 + t686, t403 * t443 - t518, t94, qJD(3) * t25 + qJD(4) * t30 + qJD(5) * t36 - qJD(6) * t62 + t614, qJD(3) * t23 + qJD(4) * t28 + qJD(5) * t34 + qJD(6) * t61 + t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, -t534, -t533, 0, 0, 0, 0, 0, -t317, -t683, 0, 0, 0, 0, 0, t75, t706, 0, 0, 0, 0, 0, t47, t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t317, -t683, 0, 0, 0, 0, 0, t75, t706, 0, 0, 0, 0, 0, t47, t16; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t68, t706, 0, 0, 0, 0, 0, t559 + t662, t144 + t516; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t504 + t519, t503 + t663; 0, 0, 0, 0, -t497, -t535, 0, 0, 0, -t499, -t498, -t320, -t543, 0, 0, 0, qJD(4) * t272 - t545, -t544, t696, t710, 0, t300, 0, qJD(4) * t48 - qJD(5) * t51 - t610, qJD(4) * t56 - t609 + t728, t46, t45, t41, t40, -t105, qJD(4) * t8 + qJD(5) * t12 - qJD(6) * t24 - t630, qJD(4) * t11 + qJD(5) * t15 + qJD(6) * t22 - t629; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t300, 0, 0, 0, 0, 0, 0, t65, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401 * t632, -t404 * t632, 0, 0, 0, 0, 0, t582, -t359 + t345, t385, -t374, 0, 0, 0, t349 * t566 + t403 * t582, t349 * t395 + t334 + t344; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401 * t482 + t542, -t404 * t482, 0, 0, 0, 0, 0, qJD(5) * t318 - t358 - t445, qJD(5) * t319 - t359 - t444, t385, -t374, 0, 0, 0, t238 * qJD(5) + t223 * qJD(6) - t362 * t682 + t622, qJD(5) * t235 + qJD(6) * t224 + t344 - t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t539, 0, qJD(4) * t318 - t346 - t671, qJD(4) * t319 + t345 - t447, t113, t63, t562, t551, 0, t238 * qJD(4) + t233 * qJD(6) + (-qJD(3) - qJD(5)) * t403 * t357 + t666, qJD(4) * t235 + qJD(6) * t234 + t334 - t672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, t181, t120, t119, -t693, qJD(4) * t223 + qJD(5) * t233 - t350 * t395 - t674, qJD(4) * t224 + qJD(5) * t234 + t350 * t566 - t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t320, -t543, 0, 0, 0, -qJD(3) * t272 - t500, -t501, t696, t710, 0, t300, 0, -qJD(3) * t48 - qJD(5) * t50 + t581, -qJD(3) * t56 + t580 + t728, t46, t45, t41, t40, -t105, -qJD(3) * t8 + qJD(5) * t17 - qJD(6) * t29 - t627, -qJD(3) * t11 + qJD(5) * t20 + qJD(6) * t27 - t626; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t300, 0, 0, 0, 0, 0, 0, t65, t21; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401 * t631 - t542, t404 * t631, 0, 0, 0, 0, 0, t445 - t526, -qJD(5) * t325 + t444, t385, -t374, 0, 0, 0, -qJD(5) * t237 - qJD(6) * t221 + t362 * t571 - t622, qJD(5) * t236 - qJD(6) * t222 + t432; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t526, -pkin(4) * t484, t385, -t374, 0, 0, 0, t390 * t566 - t403 * t526, t390 * t395 + t382; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t539, 0, -t465 - t670 (-t485 - t484) * pkin(4) - t448, t113, t63, t562, t551, 0, t326 * qJD(6) - t403 * t465 - t667, qJD(6) * t327 + t382 - t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, t181, t120, t119, -t693, qJD(5) * t326 - t389 * t395 - t675, qJD(5) * t327 + t389 * t566 - t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t696, t710, 0, -t169, 0, qJD(3) * t51 + qJD(4) * t50 - t507, -t52 * t532 + t508, t122 * t532 + t705, t462 * t480 - t532 * t66 + t259, t144 - t722 - t587, -t559 + t721 - t685, -t428, -qJD(3) * t12 - qJD(4) * t17 - qJD(6) * t35 - t625, -qJD(3) * t15 - qJD(4) * t20 + qJD(6) * t33 - t458; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t169, 0, 0, 0, 0, 0, 0, t685, -t587; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t539, 0, t527 + t671, qJD(4) * t325 + t447, t114, t64, -t562, -t551, 0, qJD(4) * t237 - qJD(6) * t231 + t357 * t571 - t666, -qJD(4) * t236 - qJD(6) * t232 + t672; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t539, 0, t527 + t670, pkin(4) * t485 + t448, t114, t64, -t562, -t551, 0, -qJD(6) * t322 + t403 * t527 + t667, -qJD(6) * t324 + t677; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t385, -t374, 0, 0, 0, -pkin(5) * t566, -pkin(5) * t395; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t109, t181, t395 + t555, -t560 - t566, -t693, -pkin(10) * t395 - t413, pkin(10) * t566 - t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t664, 0.2e1 * t678 * t687 - t549, t399 * t696 - t663, t403 * t696 + t519, t94, qJD(3) * t24 + qJD(4) * t29 + qJD(5) * t35 - t614, -qJD(3) * t22 - qJD(4) * t27 - qJD(5) * t33 - t615; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t518, -t686; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t109, t180, -t148, t132, t693, qJD(4) * t221 + qJD(5) * t231 + t674, qJD(4) * t222 + qJD(5) * t232 + t673; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t109, t180, -t148, t132, t693, qJD(5) * t322 + t675, qJD(5) * t324 + t676; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t109, t180, -t555, t560, t693, t413, t412; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t1;
