% Calculate vector of inverse dynamics joint torques for
% S6RPRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% m_mdh [7x1]
%   mass of all robot links (including the base)
% rSges [7x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% Icges [7x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (starting with base)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
% 
% Output:
% tau [6x1]
%   joint torques of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau = S6RPRRRR1_invdynJ_fixb_slag_vp1(qJ, qJD, qJDD, g, ...
  pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(11,1),zeros(7,1),zeros(7,3),zeros(7,6)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR1_invdynJ_fixb_slag_vp1: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR1_invdynJ_fixb_slag_vp1: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RPRRRR1_invdynJ_fixb_slag_vp1: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RPRRRR1_invdynJ_fixb_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR1_invdynJ_fixb_slag_vp1: pkin has to be [11x1] (double)');
assert(isreal(m) && all(size(m) == [7 1]), ...
  'S6RPRRRR1_invdynJ_fixb_slag_vp1: m has to be [7x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [7,3]), ...
  'S6RPRRRR1_invdynJ_fixb_slag_vp1: rSges has to be [7x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [7 6]), ...
  'S6RPRRRR1_invdynJ_fixb_slag_vp1: Icges has to be [7x6] (double)'); 

%% Symbolic Calculation
% From invdyn_fixb_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:54:10
% EndTime: 2019-03-09 06:55:15
% DurationCPUTime: 54.71s
% Computational Cost: add. (66974->1396), mult. (47690->1757), div. (0->0), fcn. (42455->12), ass. (0->715)
t591 = qJ(1) + pkin(11);
t581 = sin(t591);
t593 = qJ(3) + qJ(4);
t585 = cos(t593);
t917 = t581 * t585;
t828 = rSges(5,1) * t917;
t582 = cos(t591);
t600 = -pkin(8) - pkin(7);
t540 = t582 * t600;
t598 = cos(qJ(3));
t588 = t598 * pkin(3);
t577 = t588 + pkin(2);
t864 = t581 * t577 + t540;
t596 = sin(qJ(1));
t998 = t596 * pkin(1);
t1092 = -t828 - t998 - t864;
t574 = pkin(4) * t585;
t498 = t574 + t577;
t592 = -pkin(9) + t600;
t871 = -t581 * t498 - t582 * t592;
t1091 = t871 - t998;
t599 = cos(qJ(1));
t589 = t599 * pkin(1);
t464 = rSges(3,1) * t581 + rSges(3,2) * t582;
t436 = -t464 - t998;
t587 = qJ(5) + t593;
t576 = cos(t587);
t922 = t576 * t581;
t827 = rSges(6,1) * t922;
t1090 = -t827 + t1091;
t597 = cos(qJ(6));
t908 = t582 * t597;
t594 = sin(qJ(6));
t916 = t581 * t594;
t404 = t576 * t916 + t908;
t910 = t582 * t594;
t914 = t581 * t597;
t405 = t576 * t914 - t910;
t738 = t405 * rSges(7,1) - t404 * rSges(7,2);
t575 = sin(t587);
t926 = t575 * t581;
t225 = -rSges(7,3) * t926 - t738;
t590 = qJD(3) + qJD(4);
t583 = qJD(5) + t590;
t413 = t582 * t583;
t841 = qJD(6) * t581;
t320 = -t575 * t841 + t413;
t993 = rSges(7,1) * t597;
t737 = -rSges(7,2) * t594 + t993;
t353 = -rSges(7,3) * t576 + t575 * t737;
t1001 = pkin(5) * t575;
t458 = -pkin(10) * t576 + t1001;
t842 = qJD(6) * t576;
t512 = qJD(1) - t842;
t1089 = t512 * t225 - t320 * t353 - t413 * t458;
t388 = Icges(7,4) * t405;
t216 = -Icges(7,2) * t404 + Icges(7,6) * t926 + t388;
t387 = Icges(7,4) * t404;
t220 = -Icges(7,1) * t405 - Icges(7,5) * t926 + t387;
t1085 = t216 * t594 + t220 * t597;
t213 = Icges(7,5) * t405 - Icges(7,6) * t404 + Icges(7,3) * t926;
t97 = -t1085 * t575 - t213 * t576;
t602 = qJD(1) ^ 2;
t829 = t602 * t589;
t463 = t582 * t590;
t421 = t463 * t574;
t584 = sin(t593);
t848 = qJD(1) * t584;
t806 = t581 * t848;
t485 = pkin(4) * t806;
t1088 = t421 + t485;
t1087 = -t738 + t1091;
t546 = t576 * pkin(5);
t1051 = t575 * pkin(10) + t546;
t1073 = t353 + t458;
t923 = t575 * t597;
t826 = rSges(7,1) * t923;
t924 = t575 * t594;
t824 = rSges(7,2) * t924;
t869 = rSges(7,3) * t922 + t581 * t824;
t283 = -t581 * t826 + t869;
t543 = t575 * rSges(7,3);
t354 = t576 * t737 + t543;
t494 = pkin(10) * t922;
t381 = -pkin(5) * t926 + t494;
t800 = t576 * t841;
t843 = qJD(6) * t575;
t850 = qJD(1) * t581;
t1086 = qJD(1) * t381 + t1051 * t413 + t1073 * t850 - t225 * t843 + t283 * t512 + t320 * t354 - t353 * t800;
t716 = Icges(7,5) * t597 - Icges(7,6) * t594;
t346 = -Icges(7,3) * t576 + t575 * t716;
t969 = Icges(7,4) * t597;
t718 = -Icges(7,2) * t594 + t969;
t348 = -Icges(7,6) * t576 + t575 * t718;
t970 = Icges(7,4) * t594;
t723 = Icges(7,1) * t597 - t970;
t350 = -Icges(7,5) * t576 + t575 * t723;
t124 = t346 * t926 - t348 * t404 + t350 * t405;
t552 = qJD(3) * t581;
t462 = qJD(4) * t581 + t552;
t412 = qJD(5) * t581 + t462;
t840 = qJD(6) * t582;
t319 = t575 * t840 + t412;
t89 = t213 * t926 - t216 * t404 - t220 * t405;
t406 = -t576 * t910 + t914;
t407 = t576 * t908 + t916;
t925 = t575 * t582;
t215 = Icges(7,5) * t407 + Icges(7,6) * t406 + Icges(7,3) * t925;
t971 = Icges(7,4) * t407;
t218 = Icges(7,2) * t406 + Icges(7,6) * t925 + t971;
t389 = Icges(7,4) * t406;
t221 = Icges(7,1) * t407 + Icges(7,5) * t925 + t389;
t90 = t215 * t926 - t404 * t218 + t405 * t221;
t33 = t124 * t512 + t319 * t90 - t320 * t89;
t125 = t346 * t925 + t348 * t406 + t350 * t407;
t91 = t213 * t925 + t406 * t216 - t220 * t407;
t92 = t215 * t925 + t406 * t218 + t407 * t221;
t34 = t125 * t512 + t319 * t92 - t320 * t91;
t1025 = -t319 / 0.2e1;
t1022 = t320 / 0.2e1;
t382 = t1051 * t581;
t1081 = -t225 + t382;
t226 = t407 * rSges(7,1) + t406 * rSges(7,2) + rSges(7,3) * t925;
t921 = t576 * t582;
t384 = pkin(5) * t921 + pkin(10) * t925;
t1080 = t226 + t384;
t959 = Icges(6,6) * t582;
t325 = Icges(6,4) * t922 - Icges(6,2) * t926 - t959;
t542 = Icges(6,4) * t576;
t451 = Icges(6,1) * t575 + t542;
t1079 = -t451 * t581 - t325;
t719 = -Icges(6,2) * t575 + t542;
t326 = Icges(6,6) * t581 + t582 * t719;
t1078 = -t451 * t582 - t326;
t972 = Icges(6,4) * t575;
t452 = Icges(6,1) * t576 - t972;
t328 = Icges(6,5) * t581 + t452 * t582;
t449 = Icges(6,2) * t576 + t972;
t1077 = -t449 * t582 + t328;
t918 = t581 * t584;
t960 = Icges(5,6) * t582;
t340 = Icges(5,4) * t917 - Icges(5,2) * t918 - t960;
t572 = Icges(5,4) * t585;
t473 = Icges(5,1) * t584 + t572;
t1076 = -t473 * t581 - t340;
t720 = -Icges(5,2) * t584 + t572;
t341 = Icges(5,6) * t581 + t582 * t720;
t1075 = -t473 * t582 - t341;
t973 = Icges(5,4) * t584;
t474 = Icges(5,1) * t585 - t973;
t343 = Icges(5,5) * t581 + t474 * t582;
t471 = Icges(5,2) * t585 + t973;
t1074 = -t471 * t582 + t343;
t1072 = -t449 + t452;
t1071 = t451 + t719;
t1070 = t473 + t720;
t501 = Icges(5,4) * t918;
t967 = Icges(5,5) * t582;
t342 = Icges(5,1) * t917 - t501 - t967;
t941 = t340 * t584;
t703 = -t342 * t585 + t941;
t665 = t703 * t581;
t470 = Icges(5,5) * t585 - Icges(5,6) * t584;
t339 = Icges(5,3) * t581 + t470 * t582;
t911 = t582 * t585;
t892 = t581 * t339 + t343 * t911;
t1069 = -t665 - t892;
t807 = t575 * t850;
t819 = t576 * t413;
t1068 = t807 - t819;
t1067 = t1086 + t1088;
t455 = rSges(6,1) * t575 + rSges(6,2) * t576;
t1052 = t576 * rSges(6,1) - rSges(6,2) * t575;
t378 = t455 * t581;
t763 = qJD(1) * t378 - t1052 * t413;
t1066 = t455 * t850 + t1088 - t763;
t1065 = t33 * t581 + t34 * t582;
t562 = t581 * rSges(6,3);
t330 = rSges(6,1) * t921 - rSges(6,2) * t925 + t562;
t439 = t582 * t498;
t503 = t582 * t577;
t857 = -t592 + t600;
t273 = t581 * t857 + t439 - t503;
t569 = t581 * pkin(7);
t468 = t582 * pkin(2) + t569;
t764 = -t581 * t600 + t503;
t322 = t764 - t468;
t786 = t468 + t589;
t752 = t322 + t786;
t691 = t273 + t752;
t1002 = pkin(4) * t584;
t419 = t462 * t1002;
t595 = sin(qJ(3));
t845 = qJD(3) * t595;
t822 = pkin(3) * t845;
t508 = t581 * t822;
t872 = -t419 - t508;
t102 = -t412 * t455 + (t330 + t691) * qJD(1) + t872;
t181 = -t583 * t378 + (t1052 * t582 + t562) * qJD(1);
t831 = -qJDD(3) - qJDD(4);
t760 = -qJDD(5) + t831;
t833 = qJD(1) * qJD(5);
t835 = qJD(1) * qJD(3);
t534 = t581 * t835;
t834 = qJD(1) * qJD(4);
t858 = t581 * t834 + t534;
t808 = t581 * t833 + t858;
t271 = t582 * t760 + t808;
t380 = t1052 * t583;
t335 = t582 * t831 + t858;
t1003 = pkin(3) * t595;
t446 = -qJDD(3) * t582 + t534;
t904 = t598 * qJD(3) ^ 2;
t641 = -pkin(3) * t582 * t904 + t446 * t1003 - t829;
t631 = t335 * t1002 - t590 * t421 + t641;
t1055 = -rSges(6,2) * t926 - t582 * rSges(6,3);
t329 = t827 + t1055;
t272 = t864 + t871;
t570 = t582 * pkin(7);
t467 = pkin(2) * t581 - t570;
t321 = t467 - t864;
t787 = -t467 - t998;
t753 = t321 + t787;
t692 = t272 + t753;
t674 = -t329 + t692;
t906 = t584 * t590;
t453 = -pkin(4) * t906 - t822;
t510 = t592 * t850;
t849 = qJD(1) * t582;
t862 = t600 * t850 + t508;
t865 = t498 - t577;
t156 = t453 * t581 + t849 * t865 - t510 + t862;
t995 = pkin(2) - t577;
t265 = (-t582 * t995 - t569) * qJD(1) - t862;
t444 = t468 * qJD(1);
t897 = -t265 - t444;
t817 = -t156 + t897;
t43 = t271 * t455 - t380 * t413 + (-t181 + t817) * qJD(1) + t674 * qJDD(1) + t631;
t1064 = (qJD(1) * t102 + t43) * t582;
t919 = t581 * t583;
t653 = t575 * t849 + t576 * t919;
t637 = t512 * t597 + t583 * t924;
t759 = qJD(1) * t576 - qJD(6);
t185 = t581 * t637 - t759 * t910;
t636 = t512 * t594 - t583 * t923;
t186 = t581 * t636 + t759 * t908;
t739 = rSges(7,1) * t186 + rSges(7,2) * t185;
t113 = rSges(7,3) * t653 + t739;
t832 = qJDD(6) * t575;
t839 = qJD(6) * t583;
t145 = (t576 * t839 + t832) * t581 + (qJD(1) * t843 + t760) * t582 + t808;
t736 = -rSges(7,1) * t594 - rSges(7,2) * t597;
t920 = t576 * t583;
t203 = t737 * t920 + (rSges(7,3) * t583 + qJD(6) * t736) * t575;
t228 = t653 * pkin(10) + (-t575 * t919 + t576 * t849) * pkin(5);
t385 = t1051 * t583;
t401 = -qJDD(6) * t576 + t575 * t839 + qJDD(1);
t673 = -t382 + t692;
t20 = -t512 * t113 + t145 * t353 - t320 * t203 + t401 * t225 + t271 * t458 - t413 * t385 + (-t228 + t817) * qJD(1) + t673 * qJDD(1) + t631;
t77 = t226 * t512 - t319 * t353 - t412 * t458 + (t384 + t691) * qJD(1) + t872;
t1063 = (qJD(1) * t77 + t20) * t582;
t506 = -t1002 - t1003;
t442 = t581 * t506;
t915 = t581 * t595;
t364 = pkin(3) * t915 + t442;
t1062 = qJD(1) * t364;
t1050 = t585 * rSges(5,1) - rSges(5,2) * t584;
t1054 = -rSges(5,2) * t918 - t582 * rSges(5,3);
t344 = t828 + t1054;
t563 = t581 * rSges(5,3);
t912 = t582 * t584;
t345 = rSges(5,1) * t911 - rSges(5,2) * t912 + t563;
t846 = qJD(3) * t582;
t797 = -t321 * t552 + t322 * t846 + qJD(2);
t119 = t344 * t462 + t345 * t463 + t797;
t475 = rSges(5,1) * t584 + rSges(5,2) * t585;
t801 = t582 * t845;
t761 = pkin(3) * t801;
t658 = -t463 * t475 - t761;
t690 = -t344 + t753;
t127 = qJD(1) * t690 + t658;
t128 = -t462 * t475 - t508 + (t345 + t752) * qJD(1);
t402 = t475 * t581;
t403 = t475 * t582;
t1061 = -t127 * (qJD(1) * t402 - t1050 * t463) - t119 * (-t462 * t402 - t403 * t463) - t128 * (-qJD(1) * t403 - t1050 * t462);
t820 = t575 * t413;
t654 = -t576 * t850 - t820;
t671 = rSges(6,2) * t1068 + rSges(6,3) * t849;
t180 = rSges(6,1) * t654 + t671;
t445 = qJDD(3) * t581 + t582 * t835;
t334 = qJDD(4) * t581 + t582 * t834 + t445;
t270 = qJDD(5) * t581 + t582 * t833 + t334;
t414 = t582 * t453;
t155 = t761 + t414 + (-t581 * t865 + t582 * t857) * qJD(1);
t541 = pkin(7) * t849;
t264 = -t761 - t541 + (t581 * t995 - t540) * qJD(1);
t756 = qJDD(1) * t589 - t602 * t998;
t675 = qJD(1) * (-pkin(2) * t850 + t541) + qJDD(1) * t468 + t756;
t609 = qJD(1) * t264 + qJDD(1) * t322 + (-t445 * t595 - t581 * t904) * pkin(3) + t675;
t905 = t585 * t590;
t607 = qJD(1) * t155 + qJDD(1) * t273 + (-t334 * t584 - t462 * t905) * pkin(4) + t609;
t44 = qJD(1) * t180 + qJDD(1) * t330 - t270 * t455 - t380 * t412 + t607;
t1060 = t44 * t581;
t457 = qJD(1) * t467;
t1056 = qJD(1) * t321 - t457;
t564 = t581 * rSges(4,3);
t907 = t582 * t598;
t909 = t582 * t595;
t367 = rSges(4,1) * t907 - rSges(4,2) * t909 + t564;
t286 = t367 + t786;
t420 = t463 * t1002;
t689 = -t420 - t761;
t465 = t582 * rSges(3,1) - rSges(3,2) * t581;
t437 = t465 + t589;
t586 = Icges(4,4) * t598;
t721 = -Icges(4,2) * t595 + t586;
t517 = Icges(4,1) * t595 + t586;
t1046 = g(1) * t582 + g(2) * t581;
t913 = t581 * t598;
t957 = Icges(4,3) * t582;
t358 = Icges(4,5) * t913 - Icges(4,6) * t915 - t957;
t526 = Icges(4,4) * t915;
t968 = Icges(4,5) * t582;
t362 = Icges(4,1) * t913 - t526 - t968;
t961 = Icges(4,6) * t582;
t360 = Icges(4,4) * t913 - Icges(4,2) * t915 - t961;
t938 = t360 * t595;
t700 = -t362 * t598 + t938;
t139 = -t358 * t582 - t581 * t700;
t448 = Icges(6,5) * t576 - Icges(6,6) * t575;
t447 = Icges(6,5) * t575 + Icges(6,6) * t576;
t933 = t447 * t582;
t942 = t326 * t575;
t955 = Icges(6,3) * t582;
t1045 = -t583 * t933 + (-t328 * t576 - t448 * t581 + t942 + t955) * qJD(1);
t484 = Icges(6,4) * t926;
t966 = Icges(6,5) * t582;
t327 = Icges(6,1) * t922 - t484 - t966;
t705 = t325 * t575 - t327 * t576;
t324 = Icges(6,3) * t581 + t448 * t582;
t855 = qJD(1) * t324;
t934 = t447 * t581;
t1044 = qJD(1) * t705 - t583 * t934 + t855;
t469 = Icges(5,5) * t584 + Icges(5,6) * t585;
t930 = t469 * t582;
t940 = t341 * t584;
t956 = Icges(5,3) * t582;
t1043 = -t590 * t930 + (-t343 * t585 - t470 * t581 + t940 + t956) * qJD(1);
t854 = qJD(1) * t339;
t931 = t469 * t581;
t1042 = qJD(1) * t703 - t590 * t931 + t854;
t514 = Icges(4,5) * t598 - Icges(4,6) * t595;
t513 = Icges(4,5) * t595 + Icges(4,6) * t598;
t660 = qJD(3) * t513;
t974 = Icges(4,4) * t595;
t518 = Icges(4,1) * t598 - t974;
t363 = Icges(4,5) * t581 + t518 * t582;
t361 = Icges(4,6) * t581 + t582 * t721;
t937 = t361 * t595;
t699 = -t363 * t598 + t937;
t1041 = -t582 * t660 + (-t514 * t581 + t699 + t957) * qJD(1);
t359 = Icges(4,3) * t581 + t514 * t582;
t853 = qJD(1) * t359;
t1040 = qJD(1) * t700 - t581 * t660 + t853;
t697 = t449 * t575 - t451 * t576;
t1039 = qJD(1) * t697 + t448 * t583;
t696 = t471 * t584 - t473 * t585;
t1038 = qJD(1) * t696 + t470 * t590;
t515 = Icges(4,2) * t598 + t974;
t694 = t515 * t595 - t517 * t598;
t1037 = t694 * qJD(1) + t514 * qJD(3);
t876 = -Icges(4,2) * t913 + t362 - t526;
t878 = t517 * t581 + t360;
t1036 = -t595 * t876 - t598 * t878;
t183 = t582 * t637 + t759 * t916;
t184 = t582 * t636 - t759 * t914;
t815 = t184 * rSges(7,1) + t183 * rSges(7,2) + rSges(7,3) * t819;
t112 = -rSges(7,3) * t807 + t815;
t144 = -qJD(6) * t1068 + t582 * t832 + t270;
t441 = pkin(10) * t819;
t227 = pkin(5) * t654 - pkin(10) * t807 + t441;
t21 = qJD(1) * t227 + qJDD(1) * t384 + t512 * t112 - t144 * t353 - t319 * t203 + t401 * t226 - t270 * t458 - t412 * t385 + t607;
t1035 = t21 * t581 + t1063;
t667 = t716 * t576;
t701 = -t348 * t594 + t350 * t597;
t708 = -t218 * t594 + t221 * t597;
t1034 = t319 * (-t346 * t582 - t708) - t320 * (-t346 * t581 + t1085) + t512 * (Icges(7,3) * t575 + t667 - t701);
t717 = -Icges(7,2) * t597 - t970;
t1033 = t319 * (-Icges(7,2) * t407 + t221 + t389) - t320 * (-Icges(7,2) * t405 - t220 - t387) + t512 * (t717 * t575 + t350);
t1032 = qJD(1) * t1071 + t412 * t1077 - t413 * (-Icges(6,2) * t922 + t327 - t484);
t1031 = qJD(1) * t1070 + t462 * t1074 - t463 * (-Icges(5,2) * t917 + t342 - t501);
t1028 = t145 / 0.2e1;
t1029 = t144 / 0.2e1;
t107 = Icges(7,5) * t186 + Icges(7,6) * t185 + Icges(7,3) * t653;
t109 = Icges(7,4) * t186 + Icges(7,2) * t185 + Icges(7,6) * t653;
t111 = Icges(7,1) * t186 + Icges(7,4) * t185 + Icges(7,5) * t653;
t26 = (-t1085 * t583 - t107) * t576 + (-t109 * t594 + t111 * t597 + t213 * t583 + (-t216 * t597 + t220 * t594) * qJD(6)) * t575;
t106 = Icges(7,5) * t184 + Icges(7,6) * t183 - Icges(7,3) * t1068;
t108 = Icges(7,4) * t184 + Icges(7,2) * t183 - Icges(7,6) * t1068;
t110 = Icges(7,1) * t184 + Icges(7,4) * t183 - Icges(7,5) * t1068;
t27 = (t583 * t708 - t106) * t576 + (-t108 * t594 + t110 * t597 + t215 * t583 + (-t218 * t597 - t221 * t594) * qJD(6)) * t575;
t98 = -t215 * t576 + t575 * t708;
t1030 = -t98 * t144 / 0.2e1 - t97 * t145 / 0.2e1 + t27 * t1025 + t26 * t1022 - t124 * t1028 - t125 * t1029;
t1027 = t270 / 0.2e1;
t1026 = t271 / 0.2e1;
t1024 = t319 / 0.2e1;
t1023 = -t320 / 0.2e1;
t1021 = t334 / 0.2e1;
t1020 = t335 / 0.2e1;
t1019 = t401 / 0.2e1;
t1018 = -t412 / 0.2e1;
t1017 = t412 / 0.2e1;
t1016 = -t413 / 0.2e1;
t1015 = t413 / 0.2e1;
t1014 = t445 / 0.2e1;
t1013 = t446 / 0.2e1;
t1012 = -t462 / 0.2e1;
t1011 = t462 / 0.2e1;
t1010 = -t463 / 0.2e1;
t1009 = t463 / 0.2e1;
t1008 = -t512 / 0.2e1;
t1007 = t512 / 0.2e1;
t1006 = t581 / 0.2e1;
t1005 = -t582 / 0.2e1;
t1004 = -rSges(7,3) - pkin(10);
t997 = -qJD(1) / 0.2e1;
t996 = qJD(1) / 0.2e1;
t994 = rSges(4,1) * t598;
t982 = t581 * t77;
t979 = qJDD(1) / 0.2e1;
t138 = -t346 * t576 + t575 * t701;
t715 = -Icges(7,5) * t594 - Icges(7,6) * t597;
t198 = t583 * t667 + (Icges(7,3) * t583 + qJD(6) * t715) * t575;
t668 = t718 * t576;
t199 = t583 * t668 + (Icges(7,6) * t583 + qJD(6) * t717) * t575;
t669 = t723 * t576;
t722 = -Icges(7,1) * t594 - t969;
t200 = t583 * t669 + (Icges(7,5) * t583 + qJD(6) * t722) * t575;
t57 = (t583 * t701 - t198) * t576 + (-t199 * t594 + t200 * t597 + t346 * t583 + (-t348 * t597 - t350 * t594) * qJD(6)) * t575;
t978 = t138 * t401 + t57 * t512;
t663 = -t462 * t272 + t273 * t463 + t797;
t50 = -t225 * t319 + t226 * t320 + t382 * t412 + t384 * t413 + t663;
t953 = qJD(1) * t50;
t82 = t329 * t412 + t330 * t413 + t663;
t951 = qJD(1) * t82;
t936 = t413 * t455;
t101 = qJD(1) * t674 + t689 - t936;
t950 = t101 * t581;
t948 = t128 * t582;
t859 = rSges(4,2) * t915 + t582 * rSges(4,3);
t366 = rSges(4,1) * t913 - t859;
t751 = -t366 + t787;
t519 = rSges(4,1) * t595 + rSges(4,2) * t598;
t802 = t519 * t846;
t201 = qJD(1) * t751 - t802;
t947 = t201 * t581;
t946 = t201 * t582;
t202 = qJD(1) * t286 - t519 * t552;
t434 = t519 * t582;
t945 = t202 * t434;
t323 = Icges(6,5) * t922 - Icges(6,6) * t926 - t955;
t943 = t323 * t582;
t932 = t462 * t585;
t929 = t471 * t590;
t928 = t513 * t581;
t927 = t513 * t582;
t902 = -t203 - t385;
t898 = -t581 * t272 + t582 * t273;
t896 = -t273 - t330;
t895 = -t581 * t323 - t327 * t921;
t894 = t581 * t324 + t328 * t921;
t338 = Icges(5,5) * t917 - Icges(5,6) * t918 - t956;
t893 = -t581 * t338 - t342 * t911;
t890 = -t581 * t321 + t582 * t322;
t889 = t581 * t329 + t582 * t330;
t887 = t581 * t344 + t582 * t345;
t886 = -t581 * t358 - t362 * t907;
t885 = t581 * t359 + t363 * t907;
t877 = -t517 * t582 - t361;
t875 = -t515 * t582 + t363;
t868 = rSges(7,3) * t921 + t582 * t824;
t866 = rSges(5,2) * t806 + rSges(5,3) * t849;
t847 = qJD(1) * t595;
t863 = rSges(4,2) * t581 * t847 + rSges(4,3) * t849;
t861 = -t515 + t518;
t860 = t517 + t721;
t851 = qJD(1) * t514;
t844 = qJD(3) * t598;
t162 = -t581 * t697 - t933;
t838 = t162 * qJD(1);
t196 = -t581 * t696 - t930;
t837 = t196 * qJD(1);
t248 = -t581 * t694 - t927;
t836 = t248 * qJD(1);
t830 = pkin(4) * t905;
t825 = rSges(5,2) * t905;
t821 = pkin(3) * t844;
t818 = t582 * t155 + t581 * t156 - t272 * t849;
t816 = t582 * t180 + t581 * t181 + t329 * t849;
t211 = -t582 * t825 + (-t582 * t906 - t585 * t850) * rSges(5,1) + t866;
t672 = t475 * t590;
t212 = -t581 * t672 + (t1050 * t582 + t563) * qJD(1);
t814 = t582 * t211 + t581 * t212 + t344 * t849;
t813 = -t273 - t1080;
t812 = t582 * t264 + t581 * t265 - t321 * t849;
t810 = t494 + t869;
t496 = pkin(10) * t921;
t809 = t496 + t868;
t804 = t582 * t847;
t799 = t576 * t840;
t796 = -pkin(2) - t994;
t794 = t850 / 0.2e1;
t793 = t849 / 0.2e1;
t792 = -t552 / 0.2e1;
t791 = t552 / 0.2e1;
t790 = -t846 / 0.2e1;
t789 = t846 / 0.2e1;
t656 = -t475 - t1003;
t785 = t595 * (-t581 ^ 2 - t582 ^ 2);
t784 = (-t581 * t719 + t959) * qJD(1) + t1077 * t583;
t783 = qJD(1) * t326 + t327 * t583 - t449 * t919;
t782 = (-t452 * t581 + t966) * qJD(1) + t1078 * t583;
t781 = qJD(1) * t328 + t1079 * t583;
t780 = (-t581 * t720 + t960) * qJD(1) + t1074 * t590;
t779 = qJD(1) * t341 + t342 * t590 - t581 * t929;
t778 = (-t474 * t581 + t967) * qJD(1) + t1075 * t590;
t777 = qJD(1) * t343 + t1076 * t590;
t379 = t455 * t582;
t776 = -t412 * t378 - t379 * t413;
t274 = t328 * t922;
t775 = t324 * t582 - t274;
t443 = t582 * t506;
t365 = pkin(3) * t909 + t443;
t774 = t462 * t364 + t365 * t463;
t316 = t363 * t913;
t773 = t359 * t582 - t316;
t772 = -t323 + t942;
t771 = -t338 + t940;
t770 = -qJD(1) * t379 - t1052 * t412;
t769 = -t358 + t937;
t768 = t1071 * t583;
t767 = t1072 * t583;
t766 = t1070 * t590;
t765 = t474 * t590 - t929;
t758 = t889 + t898;
t757 = t1080 * t582 + t1081 * t581;
t755 = -pkin(4) * t932 + qJD(1) * t365;
t754 = -t380 - t830;
t426 = t1050 * t590;
t748 = -t426 - t821;
t747 = t1052 + t574;
t289 = t343 * t917;
t745 = t341 * t918 - t289;
t744 = -t581 * t592 + t439 + t589;
t522 = rSges(2,1) * t599 - rSges(2,2) * t596;
t520 = rSges(2,1) * t596 + rSges(2,2) * t599;
t521 = -rSges(4,2) * t595 + t994;
t232 = t361 * t598 + t363 * t595;
t661 = qJD(3) * t515;
t244 = -t582 * t661 + (-t581 * t721 + t961) * qJD(1);
t662 = qJD(3) * t517;
t246 = -t582 * t662 + (-t518 * t581 + t968) * qJD(1);
t611 = -qJD(3) * t232 - t244 * t595 + t246 * t598 + t853;
t231 = t360 * t598 + t362 * t595;
t245 = qJD(1) * t361 - t581 * t661;
t247 = qJD(1) * t363 - t581 * t662;
t612 = qJD(1) * t358 - qJD(3) * t231 - t245 * t595 + t247 * t598;
t735 = t581 * (t1041 * t581 + t611 * t582) - t582 * (t1040 * t581 + t612 * t582);
t734 = t581 * (-t1041 * t582 + t611 * t581) - t582 * (-t1040 * t582 + t612 * t581);
t76 = qJD(1) * t673 + t1089 + t689;
t733 = t582 * t76 + t982;
t732 = t581 * t90 - t582 * t89;
t731 = t581 * t89 + t582 * t90;
t730 = t581 * t92 - t582 * t91;
t729 = t581 * t91 + t582 * t92;
t728 = t581 * t98 - t582 * t97;
t727 = t581 * t97 + t582 * t98;
t714 = -t101 * t582 - t102 * t581;
t713 = -t127 * t582 - t128 * t581;
t140 = -t361 * t915 - t773;
t712 = -t139 * t582 + t140 * t581;
t141 = -t360 * t909 - t886;
t142 = -t361 * t909 + t885;
t711 = -t141 * t582 + t142 * t581;
t710 = -t202 * t581 - t946;
t707 = -t225 * t582 - t226 * t581;
t252 = -rSges(4,2) * t582 * t844 + (-t598 * t850 - t801) * rSges(4,1) + t863;
t433 = t519 * t581;
t253 = -qJD(3) * t433 + (t521 * t582 + t564) * qJD(1);
t706 = t252 * t582 + t253 * t581;
t158 = t325 * t576 + t327 * t575;
t176 = t340 * t585 + t342 * t584;
t698 = t366 * t581 + t367 * t582;
t695 = t515 * t598 + t517 * t595;
t693 = -t830 + t902;
t688 = -t455 + t506;
t684 = t1004 * t575 - t546;
t683 = t1081 * t849 + (t112 + t227) * t582 + (t113 + t228) * t581;
t682 = t816 + t818;
t681 = t757 + t898;
t670 = t506 - t1073;
t666 = t705 * t581;
t664 = -t821 - t830;
t659 = t264 * t846 + t265 * t552 - t445 * t321 - t322 * t446 + qJDD(2);
t657 = -t1051 - t543;
t651 = t354 + t1051;
t650 = (-t582 * t848 - t932) * pkin(4);
t649 = -t213 * t320 + t215 * t319 + t346 * t512;
t648 = (-Icges(7,5) * t404 - Icges(7,6) * t405) * t320 - (Icges(7,5) * t406 - Icges(7,6) * t407) * t319 - t715 * t575 * t512;
t647 = -t380 + t664;
t646 = qJD(1) * t448 - t412 * t933 + t413 * t934;
t645 = qJD(1) * t470 - t462 * t930 + t463 * t931;
t284 = -t582 * t826 + t868;
t383 = -pkin(5) * t925 + t496;
t644 = -t225 * t799 + t319 * t283 + t284 * t320 + t412 * t381 + t383 * t413;
t643 = -t595 * t875 + t598 * t877;
t642 = t574 + t651;
t640 = t664 + t902;
t639 = t683 + t818;
t638 = t575 * t648;
t632 = (-t595 * t860 + t598 * t861) * qJD(1);
t630 = qJD(1) * t272 + t1056 + t689;
t627 = (Icges(7,1) * t406 - t218 - t971) * t319 - (-Icges(7,1) * t404 - t216 - t388) * t320 + (t722 * t575 - t348) * t512;
t625 = qJD(1) * t1072 + t1078 * t412 - t1079 * t413;
t624 = t1075 * t462 - t1076 * t463 + (-t471 + t474) * qJD(1);
t623 = -t226 * t800 + t644;
t622 = qJD(1) * t383 - t1051 * t412 + t226 * t843 + t512 * t284 - t319 * t354 - t353 * t799;
t620 = t1046 * (-pkin(5) - t993) * t575;
t619 = t155 * t463 + t462 * t156 - t334 * t272 - t273 * t335 + t659;
t618 = qJD(1) * t323 - t575 * t783 + t576 * t781;
t617 = -t575 * t784 + t576 * t782 + t855;
t616 = qJD(1) * t338 - t584 * t779 + t585 * t777;
t615 = -t584 * t780 + t585 * t778 + t854;
t614 = qJD(1) * t447 - t575 * t768 + t576 * t767;
t613 = qJD(1) * t469 - t584 * t766 + t585 * t765;
t479 = t721 * qJD(3);
t480 = t518 * qJD(3);
t610 = qJD(1) * t513 - qJD(3) * t695 - t479 * t595 + t480 * t598;
t129 = -t666 - t943;
t130 = -t326 * t926 - t775;
t131 = -t325 * t925 - t895;
t132 = -t326 * t925 + t894;
t159 = t326 * t576 + t328 * t575;
t163 = -t582 * t697 + t934;
t22 = -t1068 * t213 + t107 * t925 + t109 * t406 + t111 * t407 + t183 * t216 - t184 * t220;
t23 = t106 * t925 - t1068 * t215 + t108 * t406 + t110 * t407 + t183 * t218 + t184 * t221;
t24 = t107 * t926 - t109 * t404 + t111 * t405 + t185 * t216 - t186 * t220 + t213 * t653;
t25 = t106 * t926 - t108 * t404 + t110 * t405 + t185 * t218 + t186 * t221 + t215 * t653;
t279 = t348 * t581;
t280 = t348 * t582;
t281 = t350 * t581;
t282 = t350 * t582;
t45 = -t1068 * t346 + t183 * t348 + t184 * t350 + t198 * t925 + t199 * t406 + t200 * t407;
t3 = t125 * t401 + t144 * t92 + t145 * t91 - t22 * t320 + t23 * t319 + t45 * t512;
t349 = Icges(7,6) * t575 + t668;
t351 = Icges(7,5) * t575 + t669;
t37 = t138 * t512 + t319 * t98 - t320 * t97;
t46 = t185 * t348 + t186 * t350 + t198 * t926 - t199 * t404 + t200 * t405 + t346 * t653;
t4 = t124 * t401 + t144 * t90 + t145 * t89 - t24 * t320 + t25 * t319 + t46 * t512;
t51 = t1044 * t581 + t618 * t582;
t52 = t1045 * t581 + t617 * t582;
t53 = -t1044 * t582 + t618 * t581;
t54 = -t1045 * t582 + t617 * t581;
t605 = -t1032 * t575 + t625 * t576;
t606 = t1034 * t575;
t65 = -t129 * t413 + t130 * t412 + t838;
t157 = t163 * qJD(1);
t66 = -t131 * t413 + t132 * t412 + t157;
t87 = t1039 * t581 + t614 * t582;
t88 = -t1039 * t582 + t614 * t581;
t93 = t575 * t781 + t576 * t783;
t94 = t575 * t782 + t576 * t784;
t608 = (t581 * t605 - t582 * t646) * t1015 + (-t53 * t582 + t54 * t581 + (t129 * t581 + t130 * t582) * qJD(1)) * t1016 + (-t51 * t582 + t52 * t581 + (t131 * t581 + t132 * t582) * qJD(1)) * t1017 + (t581 * t646 + t582 * t605) * t1018 + t728 * t1019 + ((t280 * t404 - t282 * t405) * t319 - (t279 * t404 - t281 * t405) * t320 + (-t349 * t404 + t351 * t405) * t512 + (t124 * t575 + t90 * t921) * qJD(6) + ((qJD(6) * t89 + t649) * t576 + t606) * t581) * t1022 + (qJD(1) * t731 - t24 * t582 + t25 * t581) * t1023 + (qJD(1) * t729 - t22 * t582 + t23 * t581) * t1024 + ((-t280 * t406 - t282 * t407) * t319 - (-t279 * t406 - t281 * t407) * t320 + (t349 * t406 + t351 * t407) * t512 + (t125 * t575 + t91 * t922) * qJD(6) + ((qJD(6) * t92 + t649) * t576 + t606) * t582) * t1025 + (-t129 * t582 + t130 * t581) * t1026 + (-t131 * t582 + t132 * t581) * t1027 + (qJD(1) * t727 - t26 * t582 + t27 * t581) * t1007 + t732 * t1028 + t730 * t1029 + (t1032 * t576 + t625 * t575) * t997 + (((t280 * t594 - t282 * t597 + t215) * t319 - (t279 * t594 - t281 * t597 + t213) * t320 + (-t349 * t594 + t351 * t597 + t346) * t512 + t138 * qJD(6)) * t575 + (qJD(6) * t727 - t1034) * t576) * t1008 - t37 * t843 / 0.2e1 + (-t158 * t582 + t159 * t581) * t979 + (t581 * t94 - t582 * t93 + (t158 * t581 + t159 * t582) * qJD(1)) * t996 + (t65 + t33) * t794 + (t66 + t34) * t793 - t1065 * t842 / 0.2e1 + (qJD(1) * t87 + qJDD(1) * t163 + t131 * t271 + t132 * t270 + t412 * t52 - t413 * t51 + t3) * t1006 + (qJD(1) * t88 + qJDD(1) * t162 + t129 * t271 + t130 * t270 + t412 * t54 - t413 * t53 + t4) * t1005;
t604 = -t1031 * t584 + t624 * t585;
t100 = -t1038 * t582 + t613 * t581;
t134 = -t338 * t582 - t665;
t135 = -t339 * t582 - t745;
t136 = -t340 * t912 - t893;
t137 = -t341 * t912 + t892;
t177 = t341 * t585 + t343 * t584;
t197 = -t582 * t696 + t931;
t59 = t1042 * t581 + t616 * t582;
t60 = t1043 * t581 + t615 * t582;
t61 = -t1042 * t582 + t616 * t581;
t62 = -t1043 * t582 + t615 * t581;
t78 = -t134 * t463 + t135 * t462 + t837;
t187 = t197 * qJD(1);
t79 = -t136 * t463 + t137 * t462 + t187;
t95 = t584 * t777 + t585 * t779;
t96 = t584 * t778 + t585 * t780;
t99 = t1038 * t581 + t613 * t582;
t603 = t608 + (-t134 * t582 + t135 * t581) * t1020 + (t581 * t645 + t582 * t604) * t1012 + (qJD(1) * t100 + qJDD(1) * t196 + t134 * t335 + t135 * t334 + t462 * t62 - t463 * t61) * t1005 + (t581 * t604 - t582 * t645) * t1009 + t79 * t793 + t78 * t794 + (t581 * t62 - t582 * t61 + (t134 * t581 + t135 * t582) * qJD(1)) * t1010 + (t1031 * t585 + t624 * t584) * t997 + (t581 * t96 - t582 * t95 + (t176 * t581 + t177 * t582) * qJD(1)) * t996 + (-t176 * t582 + t177 * t581) * t979 + (qJD(1) * t99 + qJDD(1) * t197 + t136 * t335 + t137 * t334 + t462 * t60 - t463 * t59) * t1006 + (-t136 * t582 + t137 * t581) * t1021 + (t581 * t60 - t582 * t59 + (t136 * t581 + t137 * t582) * qJD(1)) * t1011;
t491 = t521 * qJD(3);
t418 = t736 * t575;
t377 = t582 * t420;
t262 = rSges(7,1) * t406 - rSges(7,2) * t407;
t261 = -rSges(7,1) * t404 - rSges(7,2) * t405;
t249 = -t582 * t694 + t928;
t237 = t249 * qJD(1);
t193 = qJD(3) * t698 + qJD(2);
t123 = -t1037 * t582 + t610 * t581;
t122 = t1037 * t581 + t610 * t582;
t117 = qJD(1) * t252 + qJDD(1) * t367 - t445 * t519 - t491 * t552 + t675;
t116 = -t829 - t491 * t846 + t446 * t519 + (-t253 - t444) * qJD(1) + t751 * qJDD(1);
t115 = -qJD(3) * t699 + t244 * t598 + t246 * t595;
t114 = -qJD(3) * t700 + t245 * t598 + t247 * t595;
t103 = qJD(3) * t706 + t366 * t445 - t367 * t446 + qJDD(2);
t86 = qJD(3) * t711 + t237;
t85 = qJD(3) * t712 + t836;
t75 = qJD(1) * t211 + qJDD(1) * t345 - t334 * t475 - t426 * t462 + t609;
t74 = t335 * t475 - t426 * t463 + (-t212 + t897) * qJD(1) + t690 * qJDD(1) + t641;
t49 = t211 * t463 + t212 * t462 + t334 * t344 - t335 * t345 + t659;
t28 = t180 * t413 + t181 * t412 + t270 * t329 - t271 * t330 + t619;
t13 = t112 * t320 + t113 * t319 - t144 * t225 - t145 * t226 + t227 * t413 + t228 * t412 + t270 * t382 - t271 * t384 + t619;
t1 = [((t455 * t583 - t453) * t950 + (t44 - g(2)) * (t330 + t744) + (t43 - g(1)) * (-t1055 + t1090) + (t510 + (-t562 - t589 + (-t498 - t1052) * t582) * qJD(1)) * t101 + (-rSges(6,1) * t820 + t101 + t414 - t630 + t671 + t936 + (t329 + t998 + t1090) * qJD(1)) * t102) * m(6) + (-t836 + ((t582 * t769 + t142 - t885) * t582 + (t581 * t769 + t141 + t773) * t581) * qJD(3) + t85) * t792 + (t96 + t99) * t1011 + (t449 * t576 + t451 * t575 + t695 + m(2) * (t520 ^ 2 + t522 ^ 2) + t471 * t585 + t473 * t584 + m(3) * (t436 ^ 2 + t465 * t437) + Icges(2,3) + Icges(3,3)) * qJDD(1) + (t100 + t95 + t79) * t1010 + (t115 + t122) * t791 + (-(-t802 - t201 - t457 + (-t366 - t998) * qJD(1)) * t202 + t202 * (t541 + t863) + (t519 * t947 - t945) * qJD(3) + ((-t201 * t599 - t202 * t596) * pkin(1) + (-pkin(2) - t521) * t946 + (t201 * (-rSges(4,3) - pkin(7)) + t202 * t796) * t581) * qJD(1) + (-g(2) + t117) * t286 + (-g(1) + t116) * (t581 * t796 + t570 + t859 - t998)) * m(4) + (t114 + t123 + t86) * t790 + t45 * t1024 + (t157 + (t130 + (t325 * t582 + t326 * t581) * t575 + t775 + t895) * t413 + (-t327 * t922 + t943 + t129 + (t325 * t581 - t326 * t582) * t575 + t894) * t412) * t1015 + t34 * t1022 + (t249 + t232) * t1014 + (t78 - t837 + (t137 + t1069) * t463 + (t581 * t771 + t136 - t289) * t462 + ((t339 + t703) * t462 + t771 * t463) * t582) * t1012 + (t46 + t34) * t1023 + (t163 + t159) * t1027 + t978 + (t248 + t231) * t1013 + ((-t464 * t602 - g(2) + t756) * t437 + (-t829 + (-0.2e1 * t465 - t589 + t437) * t602 - g(1)) * t436) * m(3) + (t187 + (t135 + (t339 + t941) * t582 + t745 + t893) * t463 + (-t582 * t771 - t1069 + t134) * t462) * t1009 + (t65 - t838 + (t132 - t666 - t894) * t413 + (t581 * t772 + t131 - t274) * t412 + ((t324 + t705) * t412 + t772 * t413) * t582) * t1018 + (-(t581 * t684 + t1087) * g(1) + t20 * t1087 + t76 * (t510 - t739) + t77 * (-pkin(5) * t820 + t414 + t441 + t815) + (t20 * t657 + (-t453 + (t1004 * t576 + t1001) * t583) * t76) * t581 + ((-t596 * t77 - t599 * t76) * pkin(1) + (t76 * (-t498 + t657) - t77 * t592) * t582 + (-t498 + t684) * t982) * qJD(1) - (-t76 + (-t382 - t998) * qJD(1) + t630 + t1089) * t77 + (-g(2) + t21) * (t744 + t1080)) * m(7) + (t196 + t176) * t1020 + (-qJD(3) * t694 + t479 * t598 + t480 * t595 + t575 * t767 + t576 * t768 + t584 * t765 + t585 * t766) * qJD(1) + (t93 + t88 + t66) * t1016 + (t237 + ((t140 - t316 + (t359 + t938) * t582 + t886) * t582 + t885 * t581) * qJD(3)) * t789 + ((-t672 - t822) * t948 + (t75 - g(2)) * (t345 + t589 + t764) + (t74 - g(1)) * (-t1054 + t1092) + (t862 + (rSges(5,1) * t906 + t825) * t581 + (-t563 - t589 + (-t577 - t1050) * t582) * qJD(1)) * t127 + (t127 - t658 - t1056 + t866 + (t344 + t998 + t1092) * qJD(1)) * t128) * m(5) - t1030 + (t94 + t87) * t1017 + (t162 + t158) * t1026 - m(2) * (-g(1) * t520 + g(2) * t522) + (t197 + t177) * t1021; m(3) * qJDD(2) + (-m(3) - m(4) - m(5) - m(6) - m(7)) * g(3) + m(4) * t103 + m(5) * t49 + m(6) * t28 + m(7) * t13; t603 + ((t139 * t581 + t140 * t582) * qJD(1) + t734) * t790 + ((t141 * t581 + t142 * t582) * qJD(1) + t735) * t791 + (qJD(1) * t123 + qJD(3) * t734 + qJDD(1) * t248 + t139 * t446 + t140 * t445) * t1005 + (qJD(1) * t122 + qJD(3) * t735 + qJDD(1) * t249 + t141 * t446 + t142 * t445) * t1006 + t712 * t1013 + t711 * t1014 + ((-t846 * t928 - t851) * t582 + (t632 + (t643 * t581 + (-t1036 + t927) * t582) * qJD(3)) * t581) * t789 + ((-t552 * t927 + t851) * t581 + (t632 + (-t1036 * t582 + (t928 + t643) * t581) * qJD(3)) * t582) * t792 + t86 * t793 + t85 * t794 + (-t231 * t582 + t232 * t581) * t979 + (-t114 * t582 + t115 * t581 + (t231 * t581 + t232 * t582) * qJD(1)) * t996 + ((t595 * t861 + t598 * t860) * qJD(1) + ((t581 * t875 - t582 * t876) * t598 + (t581 * t877 + t582 * t878) * t595) * qJD(3)) * t997 + (-g(1) * (t443 + t809) - g(2) * (t442 + t810) - g(3) * (t588 + t642) - t620 - t77 * (t622 + t755) - t50 * (t623 + t774) - (-t77 * t804 + (t50 * t785 - t598 * t733) * qJD(3)) * pkin(3) + t13 * (t681 + t890) + t50 * (t639 + t812) + t670 * t1063 + (t21 * t670 + t77 * t640 + (-t322 + t813) * t953) * t581 + (t582 * t640 + t1062 + t1067) * t76) * m(7) + (-t102 * (t755 + t770) - t82 * (t774 + t776) - (-t102 * t804 + (t598 * t714 + t785 * t82) * qJD(3)) * pkin(3) - g(1) * (t443 - t379) - g(2) * (t442 - t378) - g(3) * (t588 + t747) + t28 * (t758 + t890) + t82 * (t682 + t812) + t688 * t1064 + (t44 * t688 + t102 * t647 + (-t322 + t896) * t951) * t581 + (t582 * t647 + t1062 + t1066) * t101) * m(6) + (-g(3) * (t1050 + t588) - t1046 * t656 + t49 * (t887 + t890) + t119 * (t812 + t814) + (t127 * t748 + (qJD(1) * t128 + t74) * t656) * t582 + (t75 * t656 + t128 * t748 + (t127 * t475 + t119 * (-t322 - t345)) * qJD(1)) * t581 - (-t128 * t804 + (t119 * t785 + t598 * t713) * qJD(3)) * pkin(3) + t1061) * m(5) + (t103 * t698 + t193 * ((t366 * t582 - t367 * t581) * qJD(1) + t706) + t710 * t491 + (-t116 * t582 - t117 * t581 + (-t202 * t582 + t947) * qJD(1)) * t519 - (t201 * t433 - t945) * qJD(1) - (t193 * (-t433 * t581 - t434 * t582) + t710 * t521) * qJD(3) + g(1) * t434 + g(2) * t433 - g(3) * t521) * m(4); t603 + (-t77 * (t650 + t622) + t13 * t681 + (t693 * t77 + t813 * t953) * t581 - g(1) * (-pkin(4) * t912 + t809) - g(2) * (-pkin(4) * t918 + t810) - g(3) * t642 - t620 + t1035 * (-t1073 - t1002) + (t582 * t693 + t1067 - t485) * t76 + (t377 - (-t226 * t842 - t419) * t581 - t644 + t639) * t50) * m(7) + (-t102 * (t650 + t770) + t28 * t758 + (t102 * t754 + t896 * t951) * t581 - g(3) * t747 + (t419 * t581 + t377 + t682 - t776) * t82 + (t582 * t754 + t1066 - t485) * t101 + (-t1046 + t1060 + t1064) * (-t455 - t1002)) * m(6) + (t49 * t887 + t119 * (-t345 * t850 + t814) + t713 * t426 + (-t75 * t581 - t74 * t582 + (t127 * t581 - t948) * qJD(1)) * t475 + g(1) * t403 + g(2) * t402 - g(3) * t1050 + t1061) * m(5); t608 + (-t622 * t77 + t13 * t757 + (-t1080 * t953 + t77 * t902) * t581 - g(1) * t809 - g(2) * t810 - g(3) * t651 - t620 - t1035 * t1073 + (t582 * t902 + t1086) * t76 + (-t623 + t683) * t50) * m(7) + (-t101 * t763 - t102 * t770 + t28 * t889 + t714 * t380 + (-t43 * t582 - t1060 + (-t102 * t582 + t950) * qJD(1)) * t455 + g(1) * t379 + g(2) * t378 - g(3) * t1052 + (-t330 * t850 - t776 + t816) * t82) * m(6); -t34 * t807 / 0.2e1 + t3 * t925 / 0.2e1 + t4 * t926 / 0.2e1 + (t1033 * t406 + t627 * t407 - t582 * t638) * t1025 + (-t1033 * t404 + t405 * t627 - t581 * t638) * t1022 + t1065 * t920 / 0.2e1 + ((t583 * t729 - t45) * t1024 + (t583 * t731 - t46) * t1023 - t978 / 0.2e1 - t138 * t1019 + (t583 * t727 - t57) * t1007 + t648 * t1008 + t1030) * t576 + (t729 * t1029 + (-qJD(1) * t730 + t125 * t583 + t22 * t581 + t23 * t582) * t1024 + t33 * t793 + t731 * t1028 + (-qJD(1) * t732 + t124 * t583 + t24 * t581 + t25 * t582) * t1023 + t583 * t37 / 0.2e1 + t727 * t1019 + (-qJD(1) * t728 + t138 * t583 + t26 * t581 + t27 * t582) * t1007 + (-t1033 * t594 + t597 * t627) * t1008) * t575 + ((-t77 * t112 + t76 * t113 - t20 * t225 - t21 * t226 + (t50 * t707 + (t581 * t76 - t582 * t77) * t353) * t583) * t576 + (t76 * (t203 * t581 + t225 * t583) + t77 * (-t203 * t582 + t226 * t583) + t13 * t707 + t50 * (-t112 * t581 + t113 * t582 + t225 * t850 - t226 * t849) + (qJD(1) * t733 + t20 * t581 - t21 * t582) * t353) * t575 - t76 * (-t261 * t512 - t320 * t418) - t77 * (t262 * t512 - t319 * t418) - t50 * (t261 * t319 + t262 * t320) - g(1) * t262 - g(2) * t261 - g(3) * t418) * m(7);];
tau  = t1;
