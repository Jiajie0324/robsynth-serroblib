% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RPRRRR1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [11x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d3,d4,d5,d6,theta2]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 06:56
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RPRRRR1_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(11,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RPRRRR1_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RPRRRR1_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [11 1]), ...
  'S6RPRRRR1_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [11x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 06:55:17
% EndTime: 2019-03-09 06:55:29
% DurationCPUTime: 5.65s
% Computational Cost: add. (14877->467), mult. (34768->609), div. (0->0), fcn. (24986->10), ass. (0->247)
t196 = sin(qJ(3));
t198 = cos(qJ(3));
t323 = sin(qJ(4));
t325 = cos(qJ(4));
t168 = t325 * t196 + t323 * t198;
t189 = qJD(3) + qJD(4);
t341 = t189 * t168;
t118 = t341 * qJD(1);
t197 = cos(qJ(6));
t270 = qJD(6) * t197;
t194 = sin(qJ(6));
t260 = t325 * t198;
t242 = qJD(1) * t260;
t258 = t323 * t196;
t163 = -qJD(1) * t258 + t242;
t164 = t168 * qJD(1);
t195 = sin(qJ(5));
t324 = cos(qJ(5));
t222 = t195 * t163 + t324 * t164;
t250 = qJD(5) + t189;
t228 = t197 * t250;
t271 = qJD(6) * t194;
t254 = t323 * qJD(4);
t275 = qJD(1) * t196;
t117 = (t323 * qJD(3) + t254) * t275 - t189 * t242;
t255 = qJD(5) * t324;
t272 = qJD(5) * t195;
t63 = t324 * t117 + t195 * t118 - t163 * t255 + t164 * t272;
t37 = -qJD(6) * t228 + t197 * t63 + t222 * t271;
t34 = t37 * t194;
t108 = -t324 * t163 + t164 * t195;
t343 = t108 * t197;
t97 = t194 * t250 + t197 * t222;
t16 = -t34 + (t270 + t343) * t97;
t340 = qJD(6) + t108;
t247 = t195 * t117 - t324 * t118;
t64 = qJD(5) * t222 - t247;
t60 = t194 * t64;
t295 = t270 * t340 + t60;
t13 = -t222 * t97 + t340 * t343 + t295;
t320 = t163 * pkin(9);
t188 = t198 * qJD(2);
t180 = sin(pkin(11)) * pkin(1) + pkin(7);
t170 = t180 * qJD(1);
t249 = pkin(8) * qJD(1) + t170;
t227 = t249 * t196;
t138 = t188 - t227;
t136 = qJD(3) * pkin(3) + t138;
t274 = qJD(2) * t196;
t139 = t198 * t249 + t274;
t261 = t325 * t139;
t87 = t323 * t136 + t261;
t84 = t87 + t320;
t300 = t195 * t84;
t159 = t164 * pkin(9);
t134 = t323 * t139;
t86 = t325 * t136 - t134;
t83 = -t159 + t86;
t76 = t189 * pkin(4) + t83;
t44 = t324 * t76 - t300;
t41 = -pkin(5) * t250 - t44;
t309 = t108 * t41;
t342 = t108 * t222;
t52 = -t108 ^ 2 + t222 ^ 2;
t77 = pkin(5) * t222 + pkin(10) * t108;
t46 = t108 * t250 - t63;
t181 = -cos(pkin(11)) * pkin(1) - pkin(2);
t169 = -t198 * pkin(3) + t181;
t165 = qJD(1) * t169;
t125 = -pkin(4) * t163 + t165;
t182 = qJD(3) * t188;
t132 = -qJD(3) * t227 + t182;
t133 = t139 * qJD(3);
t239 = -t323 * t132 - t325 * t133;
t59 = -qJD(4) * t87 + t239;
t210 = t117 * pkin(9) + t59;
t256 = qJD(4) * t325;
t245 = -t325 * t132 + t323 * t133 - t136 * t256 + t139 * t254;
t48 = -pkin(9) * t118 - t245;
t204 = -t195 * t210 - t76 * t255 + t84 * t272 - t324 * t48;
t203 = t125 * t108 + t204;
t95 = t194 * t222 - t228;
t297 = t197 * t95;
t302 = t194 * t97;
t334 = -t37 * t197 - t97 * t271;
t292 = qJD(6) * t97;
t38 = -t194 * t63 + t292;
t336 = t194 * t38 + t95 * t270;
t6 = -t108 * (t297 + t302) + t334 - t336;
t264 = t324 * t84;
t45 = t195 * t76 + t264;
t42 = pkin(10) * t250 + t45;
t66 = pkin(5) * t108 - pkin(10) * t222 + t125;
t20 = t194 * t66 + t197 * t42;
t268 = qJD(1) * qJD(3);
t253 = t196 * t268;
t178 = pkin(3) * t253;
t103 = pkin(4) * t118 + t178;
t21 = pkin(5) * t64 + pkin(10) * t63 + t103;
t3 = -qJD(6) * t20 + t194 * t204 + t197 * t21;
t337 = -t20 * t340 - t3;
t219 = t258 - t260;
t206 = t189 * t219;
t214 = t324 * t219;
t72 = qJD(5) * t214 + t168 * t272 + t195 * t341 + t324 * t206;
t335 = t72 * t250;
t185 = t325 * pkin(3) + pkin(4);
t259 = t323 * t195;
t115 = t185 * t255 + (-qJD(5) * t259 + (t325 * t324 - t259) * qJD(4)) * pkin(3);
t90 = -t323 * t138 - t261;
t215 = t90 - t320;
t91 = t325 * t138 - t134;
t85 = -t159 + t91;
t56 = t195 * t215 + t324 * t85;
t294 = t115 - t56;
t243 = t323 * t324;
t293 = -t195 * t85 + t324 * t215 + t185 * t272 + (qJD(5) * t243 + (t325 * t195 + t243) * qJD(4)) * pkin(3);
t301 = t195 * t48;
t43 = t324 * t210;
t252 = -t43 + t301;
t9 = qJD(5) * t45 + t252;
t257 = -t9 * t197 + t41 * t271;
t291 = t340 * t222;
t332 = t125 * t222;
t230 = t194 * t42 - t197 * t66;
t331 = t194 * t230 + t197 * t20;
t62 = t197 * t64;
t330 = t222 * t95 + t62;
t225 = t222 * t230 + t257;
t326 = t9 * t194 + t41 * t270;
t244 = t222 * t20 + t326;
t217 = t195 * t219;
t124 = t324 * t168 - t217;
t284 = t124 * t197;
t298 = t197 * t72;
t328 = -t340 * (t124 * t271 + t298) + t64 * t284;
t47 = t222 * t189 + t247;
t2 = -qJD(6) * t230 + t194 * t21 - t197 * t204;
t317 = pkin(8) + t180;
t166 = t317 * t196;
t167 = t317 * t198;
t113 = -t325 * t166 - t323 * t167;
t98 = -t168 * pkin(9) + t113;
t114 = -t323 * t166 + t325 * t167;
t99 = -pkin(9) * t219 + t114;
t68 = t195 * t99 - t324 * t98;
t327 = t68 * t9;
t322 = pkin(4) * t164;
t123 = t168 * t195 + t214;
t321 = t123 * t9;
t1 = t2 * t197;
t318 = t97 * t95;
t316 = -t38 * t284 + t72 * t297;
t73 = -qJD(5) * t217 + t168 * t255 - t195 * t206 + t324 * t341;
t315 = -t37 * t123 + t97 * t73;
t314 = t72 * t108 - t124 * t64;
t312 = pkin(4) * qJD(5);
t311 = t340 * t230;
t308 = t123 * t64;
t306 = t194 * t20;
t304 = t194 * t72;
t303 = t194 * t95;
t296 = t197 * t97;
t290 = t340 * t194;
t283 = t164 * t163;
t282 = t165 * t164;
t281 = t170 * t196;
t199 = qJD(3) ^ 2;
t280 = t199 * t196;
t279 = t199 * t198;
t278 = -t168 * t118 - t206 * t163;
t161 = pkin(3) * t243 + t195 * t185;
t276 = t196 ^ 2 - t198 ^ 2;
t171 = qJD(1) * t181;
t273 = qJD(3) * t196;
t267 = -t108 * t306 + t230 * t343 + t1;
t266 = t72 * t302;
t187 = pkin(3) * t273;
t186 = pkin(3) * t275;
t200 = qJD(1) ^ 2;
t262 = t196 * t200 * t198;
t251 = qJD(3) * t317;
t248 = t43 - t332;
t246 = pkin(4) * t255;
t241 = t198 * t253;
t49 = t195 * t83 + t264;
t240 = pkin(4) * t272 - t49;
t238 = -t123 * t38 - t73 * t95;
t236 = -t108 * t44 + t222 * t45;
t155 = pkin(10) + t161;
t235 = -t155 * t64 + t309;
t183 = t195 * pkin(4) + pkin(10);
t234 = -t183 * t64 + t309;
t233 = t123 * t63 - t222 * t73;
t232 = -t197 * t230 + t306;
t69 = t195 * t98 + t324 * t99;
t137 = pkin(4) * t219 + t169;
t75 = t123 * pkin(5) - t124 * pkin(10) + t137;
t32 = t194 * t75 + t197 * t69;
t31 = -t194 * t69 + t197 * t75;
t150 = t170 * t198 + t274;
t226 = 0.2e1 * qJD(3) * t171;
t221 = -t165 * t163 + t245;
t74 = t322 + t77;
t157 = t196 * t251;
t158 = t198 * t251;
t220 = t323 * t157 - t325 * t158;
t79 = -t325 * t157 - t323 * t158 - t166 * t256 - t167 * t254;
t160 = -pkin(3) * t259 + t324 * t185;
t216 = t219 * qJD(3);
t213 = (-t124 * t270 + t304) * t340 - t124 * t60;
t212 = -qJD(6) * t232 - t3 * t194 + t1;
t141 = -t170 * t273 + t182;
t142 = qJD(3) * t150;
t149 = t188 - t281;
t211 = t141 * t198 + t142 * t196 + (-t149 * t198 - t150 * t196) * qJD(3);
t205 = t206 * t189;
t112 = pkin(4) * t341 + t187;
t202 = -t117 * t219 + t164 * t341;
t201 = pkin(9) * t206 + t166 * t254 - t167 * t256 + t220;
t184 = -t324 * pkin(4) - pkin(5);
t154 = -pkin(5) - t160;
t140 = t186 + t322;
t119 = t341 * t189;
t101 = -t163 ^ 2 + t164 ^ 2;
t89 = t164 * t189 - t118;
t88 = -t163 * t189 - t117;
t80 = -t114 * qJD(4) + t220;
t71 = t186 + t74;
t70 = t73 * t250;
t67 = -pkin(9) * t341 + t79;
t50 = t324 * t83 - t300;
t36 = t38 * t197;
t28 = t73 * pkin(5) + t72 * pkin(10) + t112;
t27 = t194 * t77 + t197 * t44;
t26 = -t194 * t44 + t197 * t77;
t25 = t194 * t71 + t197 * t56;
t24 = -t194 * t56 + t197 * t71;
t23 = t194 * t74 + t197 * t50;
t22 = -t194 * t50 + t197 * t74;
t17 = t303 * t340 - t36;
t12 = -t290 * t340 + t330;
t11 = t69 * qJD(5) + t195 * t67 - t324 * t201;
t10 = t195 * t201 + t98 * t255 - t99 * t272 + t324 * t67;
t5 = -qJD(6) * t32 - t10 * t194 + t197 * t28;
t4 = qJD(6) * t31 + t10 * t197 + t194 * t28;
t7 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t241, -0.2e1 * t276 * t268, t279, -0.2e1 * t241, -t280, 0, -t180 * t279 + t196 * t226, t180 * t280 + t198 * t226, t211, t211 * t180, -t117 * t168 - t164 * t206, -t202 + t278, -t205, t118 * t219 - t163 * t341, -t119, 0, t169 * t118 - t163 * t187 + t165 * t341 + t216 * t186 + t80 * t189, -t169 * t117 + t164 * t187 - t165 * t206 + t168 * t178 - t79 * t189, t79 * t163 - t114 * t118 + t245 * t219 - t87 * t341 - t80 * t164 + t113 * t117 - t59 * t168 + t86 * (qJD(4) * t219 + t216) t113 * t59 - t114 * t245 + 0.2e1 * t165 * t187 + t79 * t87 + t80 * t86, -t124 * t63 - t222 * t72, t233 + t314, -t335, t108 * t73 + t308, -t70, 0, t103 * t123 + t112 * t108 - t11 * t250 + t125 * t73 + t137 * t64, -t10 * t250 + t103 * t124 + t112 * t222 - t125 * t72 - t137 * t63, -t10 * t108 + t11 * t222 + t123 * t204 + t124 * t9 + t44 * t72 - t45 * t73 - t63 * t68 - t64 * t69, t10 * t45 + t103 * t137 - t11 * t44 + t112 * t125 - t204 * t69 + t327, t334 * t124 - t72 * t296, t266 + (t34 + (-t296 + t303) * qJD(6)) * t124 + t316, t315 + t328, t336 * t124 - t72 * t303, t213 + t238, t340 * t73 + t308, t11 * t95 + t123 * t3 + t326 * t124 - t230 * t73 - t41 * t304 + t31 * t64 + t340 * t5 + t38 * t68, t11 * t97 - t123 * t2 - t257 * t124 - t20 * t73 - t41 * t298 - t32 * t64 - t340 * t4 - t37 * t68, t31 * t37 - t32 * t38 - t4 * t95 - t5 * t97 + t232 * t72 + (-qJD(6) * t331 - t194 * t2 - t197 * t3) * t124, t11 * t41 + t2 * t32 + t20 * t4 - t230 * t5 + t3 * t31 + t327; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t280, -t279, 0, t141 * t196 - t142 * t198 + (-t149 * t196 + t150 * t198) * qJD(3), 0, 0, 0, 0, 0, 0, -t119, t205, t202 + t278, -t245 * t168 - t219 * t59 + t189 * (-t168 * t86 - t219 * t87) 0, 0, 0, 0, 0, 0, -t70, t335, -t233 + t314, -t124 * t204 - t44 * t73 - t45 * t72 + t321, 0, 0, 0, 0, 0, 0, t213 - t238, t315 - t328, -t266 + (-t34 + (t296 + t303) * qJD(6)) * t124 + t316, t124 * t212 - t331 * t72 + t41 * t73 + t321; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t262, t276 * t200, 0, t262, 0, 0, -t171 * t275, -qJD(1) * t171 * t198 - t182 + (t149 + t281) * qJD(3), 0, 0, -t283, t101, t88, t283, t89, 0, t163 * t186 - t282 - t90 * t189 + (-t323 * pkin(3) * t189 - t87) * qJD(4) + t239, t91 * t189 + (-t164 * t275 - t189 * t256) * pkin(3) + t221 (t87 + t90) * t164 + (t86 - t91) * t163 + (t325 * t117 - t118 * t323 + (t325 * t163 + t323 * t164) * qJD(4)) * pkin(3), -t86 * t90 - t87 * t91 + (-t165 * t275 + t59 * t325 - t323 * t245 + (-t86 * t323 + t87 * t325) * qJD(4)) * pkin(3), t342, t52, t46, -t342, t47, 0, -t301 - t140 * t108 + (-t45 - t293) * qJD(5) + t248 - t293 * t189, -t140 * t222 - t294 * t250 + t203, -t294 * t108 + t160 * t63 - t161 * t64 + t222 * t293 + t236, -t125 * t140 - t160 * t9 - t161 * t204 - t293 * t44 + t294 * t45, t16, t6, t13, t17, t12, -t291, t154 * t38 + t293 * t95 + t235 * t194 + (-t115 * t194 - t155 * t270 - t24) * t340 + t225, -t154 * t37 + t293 * t97 + t235 * t197 + (-t115 * t197 + t155 * t271 + t25) * t340 + t244, t24 * t97 + t25 * t95 + (-t115 * t95 - t155 * t38 + (t155 * t97 + t230) * qJD(6)) * t197 + (t115 * t97 - t155 * t37 - t3 + (t155 * t95 - t20) * qJD(6)) * t194 + t267, t115 * t331 + t154 * t9 + t155 * t212 - t20 * t25 + t230 * t24 + t293 * t41; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t283, t101, t88, t283, t89, 0, t87 * t189 - t282 + t59, t189 * t86 + t221, 0, 0, t342, t52, t46, -t342, t47, 0, -t84 * t255 - t108 * t322 + t49 * t250 + (-qJD(5) * t76 - t250 * t312 - t48) * t195 + t248, -t222 * t322 + t203 + (-t246 + t50) * t250, t50 * t108 - t49 * t222 + (t324 * t63 - t195 * t64 + (-t324 * t108 + t195 * t222) * qJD(5)) * pkin(4) + t236, t44 * t49 - t45 * t50 + (-t324 * t9 - t125 * t164 - t195 * t204 + (-t195 * t44 + t324 * t45) * qJD(5)) * pkin(4), t16, t6, t13, t17, t12, -t291, t184 * t38 + t240 * t95 + t234 * t194 + (-t183 * t270 - t194 * t246 - t22) * t340 + t225, -t184 * t37 + t240 * t97 + t234 * t197 + (t183 * t271 - t197 * t246 + t23) * t340 + t244, t22 * t97 + t23 * t95 + (-t95 * t246 - t183 * t38 + (t183 * t97 + t230) * qJD(6)) * t197 + (t97 * t246 - t183 * t37 - t3 + (t183 * t95 - t20) * qJD(6)) * t194 + t267, t9 * t184 + t230 * t22 - t20 * t23 - t41 * t49 + (t195 * t41 + t324 * t331) * t312 + t212 * t183; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t342, t52, t46, -t342, t47, 0, t189 * t45 - t252 - t332, t250 * t44 + t203, 0, 0, t16, t6, t13, t95 * t290 - t36, -t194 * t340 ^ 2 + t330, -t291, -pkin(5) * t38 - t295 * pkin(10) + t194 * t309 - t26 * t340 - t45 * t95 + t225, t41 * t343 + pkin(5) * t37 + t340 * t27 - t45 * t97 + (t271 * t340 - t62) * pkin(10) + t244, t26 * t97 + t27 * t95 + t1 + (t311 + (-t38 + t292) * pkin(10)) * t197 + ((qJD(6) * t95 - t37) * pkin(10) + t337) * t194, -pkin(5) * t9 + pkin(10) * t212 - t20 * t27 + t230 * t26 - t41 * t45; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t318, -t95 ^ 2 + t97 ^ 2, t340 * t95 - t37, -t318, t340 * t97 - t38, t64, -t41 * t97 - t337, t41 * t95 - t2 - t311, 0, 0;];
tauc_reg  = t7;
