% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRPPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRPPRR9_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR9_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR9_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR9_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR9_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR9_invdynJ_fixb_reg2_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:32:15
% EndTime: 2019-03-09 09:32:39
% DurationCPUTime: 13.55s
% Computational Cost: add. (10087->762), mult. (24593->926), div. (0->0), fcn. (17858->10), ass. (0->368)
t242 = sin(pkin(6));
t252 = cos(qJ(2));
t382 = qJD(1) * qJD(2);
t364 = t252 * t382;
t248 = sin(qJ(2));
t380 = qJDD(1) * t248;
t283 = t364 + t380;
t486 = t283 * t242;
t395 = qJD(1) * t252;
t370 = t242 * t395;
t207 = pkin(3) * t370;
t491 = qJD(4) + t207;
t247 = sin(qJ(5));
t251 = cos(qJ(5));
t331 = pkin(5) * t247 - pkin(10) * t251;
t308 = qJ(4) + t331;
t169 = pkin(2) + t308;
t244 = qJ(3) - pkin(9);
t396 = qJD(1) * t248;
t371 = t242 * t396;
t389 = qJD(5) * t251;
t194 = qJ(4) * t371;
t211 = pkin(2) * t371;
t91 = -t244 * t370 + t194 + t211;
t243 = cos(pkin(6));
t455 = pkin(1) * t243;
t230 = t252 * t455;
t209 = qJD(1) * t230;
t456 = pkin(4) + pkin(8);
t350 = t242 * (-pkin(3) - t456);
t323 = t248 * t350;
t92 = qJD(1) * t323 + t209;
t46 = t247 * t92 + t251 * t91;
t490 = pkin(10) * t371 + qJD(3) * t247 + qJD(6) * t169 + t244 * t389 - t46;
t454 = pkin(1) * t248;
t229 = t243 * t454;
t332 = pkin(5) * t251 + pkin(10) * t247;
t414 = t244 * t247;
t416 = t242 * t252;
t489 = qJD(5) * t332 - qJD(6) * t414 - (-t229 + (-t332 - t456) * t416) * qJD(1) + t491;
t246 = sin(qJ(6));
t250 = cos(qJ(6));
t379 = qJDD(1) * t252;
t362 = t242 * t379;
t365 = t248 * t382;
t188 = t242 * t365;
t378 = qJDD(5) - t188;
t300 = t362 + t378;
t397 = qJD(1) * t243;
t217 = qJD(2) + t397;
t136 = t217 * t251 + t247 * t371;
t317 = qJD(5) + t370;
t85 = t250 * t136 + t246 * t317;
t424 = qJD(6) * t85;
t381 = qJDD(1) * t243;
t214 = qJDD(2) + t381;
t390 = qJD(5) * t247;
t351 = -t251 * t214 + t217 * t390;
t361 = t247 * t380;
t367 = t248 * t389;
t392 = qJD(2) * t252;
t473 = -t247 * t392 - t367;
t57 = (qJD(1) * t473 - t361) * t242 + t351;
t24 = -t246 * t57 - t250 * t300 + t424;
t134 = t217 * t247 - t251 * t371;
t130 = qJD(6) + t134;
t430 = t85 * t130;
t488 = t430 - t24;
t468 = pkin(3) * t362 + qJDD(4);
t185 = t214 * qJ(3);
t187 = t217 * qJD(3);
t377 = qJD(2) * t455;
t344 = qJD(1) * t377;
t376 = pkin(1) * t381;
t342 = -t248 * t376 - t252 * t344 + (t188 - t362) * pkin(8);
t59 = -t185 - t187 + t342;
t271 = -t59 + t468;
t282 = -t365 + t379;
t29 = -pkin(9) * t214 + (-pkin(3) * t365 + pkin(4) * t282) * t242 + t271;
t391 = qJD(3) * t248;
t264 = -t391 + (-qJD(2) * t244 - qJD(4)) * t252;
t245 = pkin(2) + qJ(4);
t333 = -t245 * t252 - pkin(1);
t270 = -t244 * t248 + t333;
t178 = pkin(2) * t188;
t406 = qJ(4) * t188 + t178;
t34 = (qJD(1) * t264 + qJDD(1) * t270) * t242 + t406;
t193 = t217 * qJ(3);
t407 = qJD(1) * (t416 * t456 + t229) + t491;
t62 = -pkin(9) * t217 + t193 + t407;
t398 = qJD(1) * t242;
t76 = t270 * t398;
t299 = -t247 * t29 - t251 * t34 - t62 * t389 + t390 * t76;
t32 = -t247 * t76 + t251 * t62;
t487 = -t32 * t317 - t299;
t461 = -t486 * pkin(3) + t214 * qJ(4) + t217 * qJD(4);
t341 = pkin(8) * t486 + t248 * t344 - t252 * t376;
t191 = t214 * pkin(2);
t467 = t191 - qJDD(3);
t69 = t341 - t467;
t41 = t69 - t461;
t478 = pkin(4) * t486;
t30 = -t41 - t478;
t470 = qJD(5) * t317;
t253 = cos(qJ(1));
t408 = t252 * t253;
t249 = sin(qJ(1));
t412 = t248 * t249;
t158 = -t243 * t408 + t412;
t410 = t249 * t252;
t411 = t248 * t253;
t160 = t243 * t410 + t411;
t329 = g(1) * t160 + g(2) * t158;
t474 = g(3) * t416 - t329;
t485 = -t244 * t470 + t30 - t474;
t324 = t247 * t214 - t251 * t486;
t471 = qJD(5) * t136;
t58 = t324 + t471;
t10 = pkin(5) * t58 + pkin(10) * t57 + t30;
t33 = t247 * t62 + t251 * t76;
t26 = pkin(10) * t317 + t33;
t206 = t217 * pkin(2);
t466 = t217 * qJ(4) - qJD(3) + t206;
t61 = t92 + t466;
t36 = pkin(5) * t134 - pkin(10) * t136 + t61;
t314 = t246 * t26 - t250 * t36;
t5 = pkin(10) * t300 - t299;
t1 = -t314 * qJD(6) + t246 * t10 + t250 * t5;
t484 = -t130 * t314 - t1;
t12 = t246 * t36 + t250 * t26;
t2 = -qJD(6) * t12 + t250 * t10 - t246 * t5;
t318 = -t12 * t130 - t2;
t293 = t250 * t317;
t83 = t136 * t246 - t293;
t483 = t317 * t83;
t388 = qJD(6) * t246;
t23 = -qJD(6) * t293 + t136 * t388 - t246 * t300 + t250 * t57;
t443 = t130 * t83;
t482 = -t23 + t443;
t481 = t134 * t317;
t291 = t136 * t317;
t480 = t247 * t300;
t479 = t251 * t300;
t477 = qJD(3) + t61;
t212 = t217 ^ 2;
t240 = t248 ^ 2;
t239 = t242 ^ 2;
t420 = t239 * qJD(1) ^ 2;
t213 = t240 * t420;
t476 = -t213 - t212;
t159 = t243 * t411 + t410;
t161 = -t243 * t412 + t408;
t419 = t242 * t248;
t475 = g(1) * t161 + g(2) * t159 + g(3) * t419;
t265 = t475 + t342;
t472 = 0.2e1 * t185 - t265;
t401 = pkin(8) * t416 + t229;
t148 = t401 * qJD(1);
t150 = t401 * qJD(2);
t359 = t247 * t34 - t251 * t29;
t8 = -qJD(5) * t33 - t359;
t465 = t242 * (t217 * t396 + t379) - t188;
t415 = t242 * t253;
t302 = -t159 * t247 + t251 * t415;
t463 = -t158 * t250 + t246 * t302;
t462 = t158 * t246 + t250 * t302;
t139 = -t243 * qJ(3) - t401;
t116 = pkin(3) * t416 - t139;
t82 = pkin(4) * t416 - pkin(9) * t243 + t116;
t216 = qJ(4) * t416;
t402 = pkin(2) * t416 + qJ(3) * t419;
t372 = t216 + t402;
t452 = pkin(9) * t248;
t94 = (-pkin(1) + t452) * t242 - t372;
t446 = t247 * t82 + t251 * t94;
t393 = qJD(2) * t248;
t369 = t242 * t393;
t208 = pkin(2) * t369;
t404 = qJ(4) * t369 + t208;
t68 = t242 * t264 + t404;
t210 = t252 * t377;
t234 = t243 * qJD(3);
t403 = t210 + t234;
t78 = qJD(2) * t323 + t403;
t16 = -qJD(5) * t446 - t247 * t68 + t251 * t78;
t460 = t134 ^ 2;
t459 = t136 ^ 2;
t457 = pkin(3) + pkin(8);
t449 = t85 * t83;
t448 = t489 * t246 + t250 * t490;
t447 = -t246 * t490 + t489 * t250;
t442 = t136 * t83;
t441 = t136 * t85;
t440 = t23 * t246;
t439 = t24 * t250;
t54 = qJDD(6) + t58;
t438 = t246 * t54;
t437 = t246 * t83;
t436 = t246 * t85;
t435 = t250 * t54;
t434 = t250 * t83;
t433 = t250 * t85;
t432 = t251 * t23;
t431 = t251 * t24;
t429 = qJ(3) * t158;
t428 = qJ(3) * t159;
t427 = qJ(3) * t160;
t426 = qJ(3) * t161;
t425 = qJ(3) * t248;
t423 = t136 * t134;
t418 = t242 * t249;
t417 = t242 * t251;
t413 = t246 * t252;
t409 = t250 * t252;
t405 = qJ(3) * t362 + qJD(3) * t370;
t162 = -pkin(8) * t419 + t230;
t400 = t253 * pkin(1) + pkin(8) * t418;
t399 = qJ(3) * qJD(2);
t394 = qJD(2) * t247;
t387 = qJD(6) * t250;
t386 = qJD(6) * t251;
t385 = t134 * qJD(5);
t147 = pkin(8) * t371 - t209;
t384 = qJD(3) + t147;
t120 = t207 + t148;
t383 = qJD(4) + t120;
t241 = t252 ^ 2;
t375 = t241 * t420;
t374 = t252 * t420;
t373 = t161 * pkin(2) + t400;
t141 = -t243 * pkin(2) - t162;
t366 = 0.2e1 * pkin(1) * t239;
t360 = -pkin(1) * t249 + pkin(8) * t415;
t151 = t158 * pkin(2);
t356 = -t151 + t428;
t153 = t160 * pkin(2);
t355 = -t153 + t426;
t354 = -qJ(4) * t158 - t151;
t353 = -qJ(4) * t160 - t153;
t140 = -pkin(1) * t242 - t402;
t115 = t140 - t216;
t279 = t333 - t425;
t95 = t279 * t398;
t352 = qJD(1) * t115 + t95;
t349 = t130 * t246;
t348 = t130 * t250;
t347 = -qJD(4) - t399;
t346 = t214 + t381;
t345 = t457 * t419;
t343 = t33 * t370;
t340 = t243 * qJ(4) - t141;
t339 = t251 * t370;
t338 = t136 * t370;
t337 = g(3) * t372;
t335 = t248 * t364;
t334 = -t159 * pkin(2) + t360;
t108 = -t161 * t251 + t247 * t418;
t301 = t159 * t251 + t247 * t415;
t330 = g(1) * t301 + g(2) * t108;
t328 = g(1) * t158 - g(2) * t160;
t326 = g(1) * t159 - g(2) * t161;
t325 = g(1) * t253 + g(2) * t249;
t125 = (t247 * t413 + t248 * t250) * t398;
t322 = t246 * t390 + t125;
t126 = (-t246 * t248 + t247 * t409) * t398;
t321 = -t250 * t390 - t126;
t316 = t12 * t246 - t250 * t314;
t315 = -t12 * t250 - t246 * t314;
t38 = pkin(10) * t416 + t446;
t156 = t243 * t247 - t248 * t417;
t157 = t243 * t251 + t247 * t419;
t81 = (-pkin(3) - pkin(4)) * t419 + t340;
t50 = pkin(5) * t156 - pkin(10) * t157 + t81;
t18 = t246 * t50 + t250 * t38;
t17 = -t246 * t38 + t250 * t50;
t43 = -t247 * t94 + t251 * t82;
t45 = -t247 * t91 + t251 * t92;
t309 = -pkin(2) * t252 - pkin(1) - t425;
t122 = t309 * t398;
t311 = qJD(2) * (-qJD(1) * t140 - t122);
t310 = qJD(2) * (t217 + t397);
t149 = -pkin(8) * t369 + t210;
t145 = -qJ(3) * t370 + t211;
t305 = -t130 * t387 - t438;
t304 = -t130 * t388 + t435;
t303 = -t157 * t246 + t242 * t409;
t107 = t157 * t250 + t242 * t413;
t15 = t247 * t78 + t251 * t68 + t82 * t389 - t390 * t94;
t297 = t317 * t85;
t25 = -pkin(5) * t317 - t32;
t296 = -pkin(10) * t54 + t130 * t25;
t269 = t252 * t347 - t391;
t42 = (qJD(1) * t269 + qJDD(1) * t279) * t242 + t406;
t74 = t242 * t269 + t404;
t295 = -qJD(1) * t74 - qJDD(1) * t115 - t42;
t294 = t242 * t317;
t292 = t251 * t317;
t290 = -qJ(3) * t392 - t391;
t121 = t242 * t290 + t208;
t63 = t178 + (qJD(1) * t290 + qJDD(1) * t309) * t242;
t289 = qJD(1) * t121 + qJDD(1) * t140 + t63;
t284 = pkin(3) * t418 + qJ(4) * t161 + t373;
t281 = g(1) * t108 - g(2) * t301 + g(3) * t156;
t109 = t161 * t247 + t249 * t417;
t280 = -g(1) * t109 + g(2) * t302 - g(3) * t157;
t278 = t150 * t217 - t326;
t277 = qJD(1) * t294;
t6 = -pkin(5) * t300 - t8;
t276 = t281 - t6;
t275 = t130 * t348 + t438;
t272 = pkin(3) * t415 - qJ(4) * t159 + t334;
t266 = -t474 - t341;
t97 = (t380 + (qJD(2) - t217) * t395) * t242;
t263 = pkin(10) * qJD(6) * t130 - t276;
t262 = pkin(4) * t418 + t160 * t244 + t284;
t261 = -qJD(6) * t316 + t1 * t250 - t2 * t246;
t233 = t243 * qJD(4);
t79 = t233 + (t252 * t350 - t229) * qJD(2);
t260 = t266 + t467;
t259 = t148 * t217 + t266;
t258 = pkin(4) * t415 - t158 * t244 + t272;
t47 = -pkin(3) * t188 + t271;
t257 = t260 + t461;
t256 = -t252 * t277 - t470;
t255 = t247 * t256 + t479;
t173 = t248 * t374;
t170 = t214 * t243;
t155 = -t213 + t375;
t146 = t173 + t214;
t138 = (qJDD(1) * t241 - 0.2e1 * t335) * t239;
t137 = (qJDD(1) * t240 + 0.2e1 * t335) * t239;
t129 = -t149 - t234;
t128 = t169 * t246 + t250 * t414;
t127 = t169 * t250 - t246 * t414;
t124 = t217 * t246 - t250 * t339;
t123 = t217 * t250 + t246 * t339;
t119 = -qJD(1) * t345 + t209;
t118 = -t193 - t148;
t117 = t145 + t194;
t114 = -t206 + t384;
t105 = qJD(5) * t157 - t392 * t417;
t104 = t242 * t473 + t243 * t390;
t103 = (t248 * t379 + (-t240 + t241) * t382) * t239;
t102 = -t233 + (t416 * t457 + t229) * qJD(2);
t101 = -qJD(2) * t345 + t403;
t100 = pkin(3) * t419 - t340;
t99 = t122 * t371;
t98 = 0.2e1 * t103;
t90 = t193 + t383;
t77 = t95 * t370;
t71 = t371 * t457 - t209 - t466;
t70 = pkin(5) * t136 + pkin(10) * t134;
t67 = t109 * t250 - t160 * t246;
t66 = -t109 * t246 - t160 * t250;
t65 = (t248 * t346 + t252 * t310) * t242;
t64 = (t248 * t310 - t252 * t346) * t242;
t49 = qJD(6) * t303 - t104 * t250 - t246 * t369;
t48 = qJD(6) * t107 - t104 * t246 + t250 * t369;
t39 = pkin(5) * t371 - t45;
t37 = -pkin(5) * t416 - t43;
t35 = pkin(5) * t105 + pkin(10) * t104 + t79;
t20 = t246 * t70 + t250 * t32;
t19 = -t246 * t32 + t250 * t70;
t14 = pkin(5) * t369 - t16;
t13 = -pkin(10) * t369 + t15;
t4 = -qJD(6) * t18 - t13 * t246 + t250 * t35;
t3 = qJD(6) * t17 + t13 * t250 + t246 * t35;
t7 = [0, 0, 0, 0, 0, qJDD(1), g(1) * t249 - g(2) * t253, t325, 0, 0, t137, t98, t65, t138, -t64, t170, t162 * t214 - t243 * t341 + t282 * t366 - t278, -t149 * t217 - t214 * t401 + t243 * t342 - t283 * t366 - t328 ((qJD(2) * t147 + qJDD(1) * t401 - t342 + (-qJD(2) * t162 + t149) * qJD(1)) * t252 + (-qJD(2) * t148 - qJDD(1) * t162 + t341) * t248 - t325) * t242, t239 * qJDD(1) * pkin(1) ^ 2 - g(1) * t360 - g(2) * t400 + t147 * t150 + t148 * t149 - t162 * t341 - t342 * t401, t170, -t65, t64, t137, t98, t138 ((qJD(2) * t114 - qJDD(1) * t139 - t59 + (qJD(2) * t141 - t129) * qJD(1)) * t252 + (qJD(2) * t118 + qJDD(1) * t141 + t69 + (qJD(2) * t139 + t150) * qJD(1)) * t248 - t325) * t242, t141 * t214 + t243 * t69 + (t248 * t311 + t252 * t289) * t242 + t278, -t129 * t217 - t139 * t214 - t243 * t59 + (-t248 * t289 + t252 * t311) * t242 + t328, t63 * t140 + t122 * t121 + t59 * t139 + t118 * t129 + t69 * t141 + t114 * t150 - g(1) * (t334 - t429) - g(2) * (t373 + t427) t170, t64, t65, t138, -0.2e1 * t103, t137 ((qJD(2) * t71 + qJDD(1) * t116 + t47 + (qJD(2) * t100 + t101) * qJD(1)) * t252 + (-qJD(2) * t90 + qJDD(1) * t100 + t41 + (-qJD(2) * t116 + t102) * qJD(1)) * t248 - t325) * t242, t101 * t217 + t116 * t214 + t243 * t47 + (t248 * t295 - t352 * t392) * t242 + t328, -t100 * t214 - t102 * t217 - t243 * t41 + (t252 * t295 + t352 * t393) * t242 + t326, t42 * t115 + t95 * t74 + t41 * t100 + t71 * t102 + t47 * t116 + t90 * t101 - g(1) * (t272 - t429) - g(2) * (t284 + t427) -t104 * t136 - t157 * t57, t104 * t134 - t105 * t136 + t156 * t57 - t157 * t58, -t104 * qJD(5) + t157 * t378 + (-t136 * t393 + (-qJD(1) * t104 + qJDD(1) * t157 - t57) * t252) * t242, t105 * t134 + t156 * t58, -t105 * qJD(5) - t156 * t378 + (t134 * t393 + (-qJD(1) * t105 - qJDD(1) * t156 - t58) * t252) * t242, -t294 * t393 + t300 * t416, t16 * qJD(5) + t43 * t378 + t79 * t134 + t81 * t58 + t30 * t156 + t61 * t105 - g(1) * t302 - g(2) * t109 + (-t32 * t393 + (qJD(1) * t16 + qJDD(1) * t43 + t8) * t252) * t242, -t15 * qJD(5) - t446 * t378 + t79 * t136 - t81 * t57 + t30 * t157 - t61 * t104 + (t33 * t393 + (-qJD(1) * t15 - qJDD(1) * t446 + t299) * t252) * t242 + t330, t104 * t32 - t105 * t33 - t134 * t15 - t136 * t16 + t156 * t299 - t157 * t8 + t43 * t57 - t446 * t58 - t328, -g(1) * t258 - g(2) * t262 + t33 * t15 + t32 * t16 - t299 * t446 + t30 * t81 + t8 * t43 + t61 * t79, -t107 * t23 + t49 * t85, -t107 * t24 - t23 * t303 - t48 * t85 - t49 * t83, t105 * t85 + t107 * t54 + t130 * t49 - t156 * t23, -t24 * t303 + t48 * t83, -t105 * t83 - t130 * t48 - t156 * t24 + t303 * t54, t105 * t130 + t156 * t54, -g(1) * t462 - g(2) * t67 - t105 * t314 + t4 * t130 + t14 * t83 + t2 * t156 + t17 * t54 + t37 * t24 + t25 * t48 - t303 * t6, g(1) * t463 - g(2) * t66 - t1 * t156 - t12 * t105 + t6 * t107 - t3 * t130 + t14 * t85 - t18 * t54 - t37 * t23 + t25 * t49, t1 * t303 - t107 * t2 - t12 * t48 + t17 * t23 - t18 * t24 - t3 * t83 + t314 * t49 - t4 * t85 - t330, t1 * t18 + t12 * t3 + t2 * t17 - t314 * t4 + t6 * t37 + t25 * t14 - g(1) * (pkin(5) * t302 + pkin(10) * t301 + t258) - g(2) * (pkin(5) * t109 + pkin(10) * t108 + t262); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t173, -t155, t97, t173, t465, t214, t420 * t454 + t259, pkin(1) * t374 - t147 * t217 + t265, 0, 0, t214, -t97, -t465, -t173, -t155, t173 (-pkin(2) * t380 + ((-pkin(2) * qJD(2) - t114 + t147) * t252 + (-t118 - t148 - t399) * t248) * qJD(1)) * t242 + t405, -t145 * t370 + qJDD(3) - 0.2e1 * t191 - t259 + t99, t187 + t384 * t217 + (t122 * t252 + t145 * t248) * t398 + t472, -t69 * pkin(2) - g(1) * t355 - g(2) * t356 - g(3) * t402 - t59 * qJ(3) - t114 * t148 - t118 * t384 - t122 * t145, t214, -t465, t97, t173, t155, -t173 (-t245 * t380 + ((-qJD(2) * t245 - t119 - t71) * t252 + (-t120 + t347 + t90) * t248) * qJD(1)) * t242 + t405, -t119 * t217 + 0.2e1 * t187 + t77 + (-pkin(3) * qJD(2) + t117) * t371 + t468 + t472, t257 + t383 * t217 + t214 * t245 + (t117 * t252 - t248 * t95) * t398, -t41 * t245 + t47 * qJ(3) - t95 * t117 - g(1) * (t353 + t426) - g(2) * (t354 + t428) - t337 + (qJD(3) - t119) * t90 - t383 * t71, -t247 * t291 - t251 * t57 (-t58 - t291) * t251 + (t57 + t481) * t247, t136 * t371 + t255, t134 * t292 + t247 * t58, -t134 * t371 + t251 * t256 - t480, t248 * t277, t245 * t58 + t32 * t371 + t407 * t134 + t244 * t479 + t485 * t247 + (t251 * t477 - t45) * t317, -t245 * t57 - t33 * t371 + t407 * t136 - t244 * t480 + t485 * t251 + (-t247 * t477 + t46) * t317, t134 * t46 + t136 * t45 + (-t343 - qJD(3) * t136 + t244 * t57 - t8 + (-t134 * t244 - t33) * qJD(5)) * t251 + (t32 * t370 - qJD(3) * t134 - t244 * t58 + t299 + (t136 * t244 + t32) * qJD(5)) * t247 + t475, t30 * t245 - t33 * t46 - t32 * t45 - g(1) * (t161 * t244 + t353) - g(2) * (t159 * t244 + t354) - g(3) * (-pkin(9) * t419 + t372) + t407 * t61 + (t247 * t33 + t251 * t32) * qJD(3) + (-t299 * t247 + t8 * t251 + (-t247 * t32 + t251 * t33) * qJD(5)) * t244, -t250 * t432 + (-t246 * t386 + t321) * t85, t125 * t85 + t126 * t83 + (t434 + t436) * t390 + (t440 - t439 + (-t433 + t437) * qJD(6)) * t251, -t23 * t247 + t321 * t130 + (t297 + t304) * t251, t246 * t431 + (t250 * t386 - t322) * t83, -t24 * t247 + t322 * t130 + (t305 - t483) * t251, t130 * t292 + t247 * t54, -t25 * t125 + t127 * t54 - t39 * t83 + t447 * t130 + t475 * t246 + (t2 + (t244 * t83 - t246 * t25) * qJD(5) - t474 * t250) * t247 + (-qJD(3) * t83 - t244 * t24 + t6 * t246 + t25 * t387 - t314 * t317) * t251, -t25 * t126 - t128 * t54 - t39 * t85 - t448 * t130 + t475 * t250 + (-t1 + (t244 * t85 - t25 * t250) * qJD(5) + t474 * t246) * t247 + (-qJD(3) * t85 - t12 * t317 + t244 * t23 - t25 * t388 + t6 * t250) * t251, -t314 * t126 + t12 * t125 + t127 * t23 - t128 * t24 - t447 * t85 - t448 * t83 + t316 * t390 + (qJD(6) * t315 - t1 * t246 - t2 * t250 + t474) * t251, t1 * t128 + t2 * t127 - t6 * t251 * t244 - g(1) * (-pkin(9) * t161 + t355) - g(2) * (-pkin(9) * t159 + t356) - t337 - g(3) * (t252 * t331 - t452) * t242 + t448 * t12 - t447 * t314 + (-qJD(3) * t251 + t244 * t390 - t39) * t25 + t329 * t308; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t97, t146, t476, t118 * t217 - t260 + t99, 0, 0, 0, 0, 0, 0, t97, t476, -t146, -t217 * t90 + t371 * t95 - t257, 0, 0, 0, 0, 0, 0, -t324 - t338 - 0.2e1 * t471, t385 + (-t361 + (-t367 + (t134 - t394) * t252) * qJD(1)) * t242 + t351, t459 + t460, -t134 * t33 - t136 * t32 - t257 + t478, 0, 0, 0, 0, 0, 0, t130 * t349 - t435 + t442, t275 + t441, -t246 * t488 + t482 * t250, t136 * t25 + t246 * t484 + t318 * t250 + t474; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t465, -t173 + t214, -t212 - t375, t217 * t71 + t47 - t475 + t77, 0, 0, 0, 0, 0, 0, -t217 * t134 + t255, -t480 - t217 * t136 + (-t317 * t370 - t470) * t251 (t57 - t481) * t251 + (-t58 + t291) * t247, -t217 * t61 + (t317 * t33 + t8) * t251 + t487 * t247 - t475, 0, 0, 0, 0, 0, 0, -t431 + (-t246 * t389 - t123) * t130 + (t305 + t483) * t247, t432 + (-t250 * t389 + t124) * t130 + (t297 - t304) * t247, t123 * t85 + t124 * t83 + (-t434 + t436) * t389 + (-t440 - t439 + (t433 + t437) * qJD(6)) * t247, t314 * t123 - t12 * t124 + (-qJD(5) * t315 - t6) * t251 + (t25 * t317 + t261) * t247 - t475; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t423, t459 - t460, t385 + (t361 + (t367 + (t134 + t394) * t252) * qJD(1)) * t242 - t351, -t423, -t324 + t338, t300, -t61 * t136 + t281 + t343 - t359, t61 * t134 - t280 - t487, 0, 0, t348 * t85 - t440 (-t23 - t443) * t250 + (-t24 - t430) * t246, t275 - t441, t349 * t83 - t439, -t130 ^ 2 * t246 + t435 + t442, -t130 * t136, -pkin(5) * t24 - t130 * t19 + t136 * t314 + t246 * t296 - t250 * t263 - t33 * t83, pkin(5) * t23 + t12 * t136 + t130 * t20 + t246 * t263 + t250 * t296 - t33 * t85, t19 * t85 + t20 * t83 + ((-t24 + t424) * pkin(10) - t484) * t250 + ((qJD(6) * t83 - t23) * pkin(10) + t318) * t246 + t280, t314 * t19 - t12 * t20 - t25 * t33 + t276 * pkin(5) + (t261 + t280) * pkin(10); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t449, -t83 ^ 2 + t85 ^ 2, t482, -t449, t488, t54, -g(1) * t66 - g(2) * t463 - g(3) * t303 - t25 * t85 - t318, g(1) * t67 - g(2) * t462 + g(3) * t107 + t25 * t83 + t484, 0, 0;];
tau_reg  = t7;
