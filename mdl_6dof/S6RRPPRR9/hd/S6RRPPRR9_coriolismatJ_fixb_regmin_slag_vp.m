% Calculate minimal parameter regressor of coriolis matrix for
% S6RRPPRR9
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
% 
% Output:
% cmat_reg [(6*%NQJ)%x32]
%   minimal parameter regressor of coriolis matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 09:33
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function cmat_reg = S6RRPPRR9_coriolismatJ_fixb_regmin_slag_vp(qJ, qJD, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR9_coriolismatJ_fixb_regmin_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR9_coriolismatJ_fixb_regmin_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR9_coriolismatJ_fixb_regmin_slag_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From coriolismat_joint_fixb_regressor_minpar_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 09:32:11
% EndTime: 2019-03-09 09:32:37
% DurationCPUTime: 13.49s
% Computational Cost: add. (6135->743), mult. (15294->983), div. (0->0), fcn. (15644->8), ass. (0->548)
t387 = sin(qJ(5));
t383 = cos(pkin(6));
t390 = cos(qJ(5));
t624 = t383 * t390;
t382 = sin(pkin(6));
t388 = sin(qJ(2));
t629 = t382 * t388;
t284 = t387 * t629 + t624;
t628 = t382 * t390;
t282 = t383 * t387 - t388 * t628;
t645 = t282 * t390;
t681 = t387 / 0.2e1;
t148 = t284 * t681 + t645 / 0.2e1;
t706 = t148 * qJD(5);
t540 = t390 * qJD(2);
t354 = t387 * t540;
t480 = -t148 * qJD(1) - t354;
t546 = t282 * qJD(1);
t417 = qJD(2) * t148 + t284 * t546;
t389 = cos(qJ(6));
t147 = t389 * t282;
t492 = -t147 / 0.2e1;
t464 = t387 * t492;
t705 = 0.2e1 * t464;
t357 = qJD(1) * t383 + qJD(2);
t319 = t357 * qJ(3);
t384 = qJ(3) - pkin(9);
t704 = t384 * t388;
t385 = pkin(2) + qJ(4);
t703 = t385 * t383;
t391 = cos(qJ(2));
t622 = t385 * t391;
t541 = t387 * qJD(2);
t427 = t541 + t546;
t627 = t382 * t391;
t702 = t427 * t627;
t518 = qJD(1) * t627;
t701 = (qJD(5) + t518) * t282;
t597 = t389 * t391;
t525 = t382 * t597;
t386 = sin(qJ(6));
t642 = t284 * t386;
t206 = -t525 + t642;
t595 = t390 * t206;
t184 = -t595 / 0.2e1;
t613 = t386 * t390;
t499 = -t613 / 0.2e1;
t700 = t284 * t499 + t184;
t185 = t595 / 0.2e1;
t489 = t597 / 0.2e1;
t468 = t382 * t489;
t305 = t390 * t468;
t699 = t185 + t305;
t362 = t383 * t391 * pkin(1);
t695 = pkin(3) + pkin(8);
t200 = t362 + (-pkin(4) - t695) * t629;
t377 = t387 ^ 2;
t380 = t390 ^ 2;
t580 = t377 + t380;
t516 = t389 * t540;
t470 = t386 * t516;
t376 = t386 ^ 2;
t379 = t389 ^ 2;
t343 = t379 - t376;
t482 = qJD(5) * t343;
t698 = 0.2e1 * t470 - t482;
t610 = t387 * t206;
t496 = t610 / 0.2e1;
t498 = t613 / 0.2e1;
t409 = t282 * t498 + t496;
t246 = -t629 * t695 + t362;
t565 = qJD(3) * t391;
t697 = qJD(2) * (t622 + t704) - t565;
t696 = t282 ^ 2;
t156 = t200 + t703;
t694 = t156 / 0.2e1;
t149 = t284 * t389;
t612 = t386 * t391;
t526 = t382 * t612;
t208 = t526 + t149;
t693 = -t208 / 0.2e1;
t607 = t388 * t386;
t252 = (t387 * t597 - t607) * t382;
t692 = -t252 / 0.2e1;
t691 = -t282 / 0.2e1;
t690 = t282 / 0.2e1;
t674 = t390 * pkin(5);
t675 = t387 * pkin(10);
t327 = t674 + t675;
t689 = t327 / 0.2e1;
t688 = -t379 / 0.2e1;
t687 = -t384 / 0.2e1;
t686 = -t385 / 0.2e1;
t685 = t385 / 0.2e1;
t684 = -t386 / 0.2e1;
t683 = t386 / 0.2e1;
t682 = -t387 / 0.2e1;
t680 = -t389 / 0.2e1;
t679 = t389 / 0.2e1;
t678 = -t390 / 0.2e1;
t677 = t282 * pkin(10);
t676 = t383 * pkin(2);
t456 = -pkin(1) - t622;
t175 = (t456 - t704) * t382;
t625 = t383 * t388;
t289 = pkin(1) * t625 + pkin(8) * t627;
t247 = pkin(3) * t627 + t289;
t201 = -pkin(4) * t627 - t247;
t370 = t383 * qJ(3);
t398 = -t383 * pkin(9) - t201 + t370;
t82 = t387 * t175 - t390 * t398;
t70 = -pkin(5) * t627 + t82;
t673 = -t70 + t82;
t672 = t386 * t82;
t671 = t389 * t82;
t453 = t282 * pkin(5) - t284 * pkin(10);
t538 = pkin(10) * t627;
t83 = t390 * t175 + t387 * t398;
t71 = t83 + t538;
t25 = t386 * t71 - t389 * (t156 + t453);
t172 = pkin(5) * t284 + t677;
t603 = t389 * t172;
t5 = t83 * t206 - t25 * t284 + (t386 * t673 + t603) * t282;
t670 = t5 * qJD(1);
t626 = t383 * qJ(4);
t26 = t389 * t71 + (t453 + t626 + t676 + t200) * t386;
t619 = t386 * t172;
t6 = t83 * t208 - t26 * t284 + (t389 * t673 - t619) * t282;
t669 = t6 * qJD(1);
t606 = t388 * t389;
t608 = t387 * t391;
t251 = (t386 * t608 + t606) * t382;
t128 = (-pkin(4) - t327) * t627 - t247;
t604 = t389 * t128;
t341 = qJ(4) * t629;
t358 = pkin(2) * t629;
t199 = -t384 * t627 + t341 + t358;
t190 = t390 * t199;
t191 = t387 * t200;
t582 = t190 + t191;
t100 = -pkin(10) * t629 + t582;
t621 = t386 * t100;
t36 = t604 - t621;
t527 = t390 * t627;
t596 = t390 * t200;
t611 = t387 * t199;
t99 = pkin(5) * t629 - t596 + t611;
t7 = t99 * t206 + t25 * t527 + t70 * t251 + t36 * t282;
t668 = t7 * qJD(1);
t605 = t389 * t100;
t620 = t386 * t128;
t37 = t605 + t620;
t8 = t99 * t208 + t70 * t252 + t26 * t527 - t37 * t282;
t667 = t8 * qJD(1);
t666 = t99 * t386;
t665 = t99 * t389;
t664 = qJ(3) * t388;
t13 = -t206 * t70 + t25 * t282;
t663 = qJD(1) * t13;
t14 = t208 * t70 - t26 * t282;
t662 = qJD(1) * t14;
t210 = (t456 - t664) * t382;
t287 = -qJ(3) * t627 + t358;
t245 = t287 + t341;
t65 = -t246 * t383 + (t210 * t391 + t245 * t388) * t382;
t661 = qJD(1) * t65;
t66 = t247 * t383 + (-t210 * t388 + t245 * t391) * t382;
t660 = qJD(1) * t66;
t644 = t696 * t386;
t654 = t206 * t284;
t79 = -t644 + t654;
t659 = qJD(1) * t79;
t643 = t696 * t389;
t653 = t208 * t284;
t80 = -t643 - t653;
t658 = qJD(1) * t80;
t81 = -t643 + t653;
t657 = qJD(1) * t81;
t19 = t201 * t282 + (t82 * t388 + (-t611 + (-t156 + t200) * t390) * t391) * t382;
t656 = t19 * qJD(1);
t528 = t382 * t608;
t20 = -t156 * t528 - t201 * t284 + t582 * t627 - t629 * t83;
t655 = t20 * qJD(1);
t652 = t208 * t386;
t651 = t208 * t387;
t650 = t208 * t389;
t452 = pkin(5) * t387 - pkin(10) * t390;
t418 = t452 + t385;
t614 = t386 * t387;
t227 = t384 * t614 - t389 * t418;
t649 = t227 * t284;
t599 = t389 * t384;
t524 = t387 * t599;
t228 = t386 * t418 + t524;
t648 = t228 * t284;
t647 = t252 * t386;
t196 = -t246 - t703;
t211 = t370 + t247;
t27 = t196 * t247 + t210 * t245 + t211 * t246;
t646 = t27 * qJD(1);
t641 = t284 * t390;
t288 = pkin(8) * t629 - t362;
t640 = t288 * t383;
t639 = t289 * t383;
t598 = t389 * t390;
t617 = t386 * t282;
t224 = t598 * t617;
t505 = t651 / 0.2e1;
t29 = t224 + (t496 + t692) * t389 + (t505 + t251 / 0.2e1) * t386;
t638 = t29 * qJD(1);
t467 = t627 * t687;
t502 = t284 * t685;
t30 = t502 + (t694 - t200 / 0.2e1) * t390 + (t467 + t199 / 0.2e1) * t387;
t637 = t30 * qJD(1);
t392 = t156 * t682 + t282 * t686 + t390 * t467;
t485 = -t190 / 0.2e1 - t191 / 0.2e1;
t32 = t392 - t485;
t636 = t32 * qJD(1);
t34 = t156 * t282 - t627 * t82;
t635 = t34 * qJD(1);
t35 = t156 * t284 - t627 * t83;
t634 = t35 * qJD(1);
t373 = t382 ^ 2;
t381 = t391 ^ 2;
t633 = t373 * t381;
t632 = t373 * t391;
t38 = ((t196 + t246) * t391 + (-t211 + t247) * t388) * t382;
t631 = t38 * qJD(1);
t630 = t380 * t389;
t623 = t384 * t386;
t618 = t386 * t206;
t616 = t386 * t327;
t615 = t386 * t383;
t609 = t387 * t282;
t602 = t389 * t206;
t601 = t389 * t327;
t600 = t389 * t383;
t594 = t390 * t208;
t43 = (t468 + t642 / 0.2e1 - t206 / 0.2e1) * t387;
t593 = t43 * qJD(1);
t266 = -t370 - t289;
t446 = -pkin(2) * t391 - t664;
t267 = (-pkin(1) + t446) * t382;
t414 = t288 - t676;
t50 = t266 * t288 + t267 * t287 + t289 * t414;
t592 = t50 * qJD(1);
t52 = -t206 * t252 - t208 * t251;
t591 = t52 * qJD(1);
t441 = t602 + t652;
t55 = t441 * t282;
t590 = t55 * qJD(1);
t56 = (-t266 - t289) * t629 + (t288 - t414) * t627;
t589 = t56 * qJD(1);
t494 = t387 * t680;
t406 = t208 * t494 + t645 * t688;
t76 = -t647 / 0.2e1 + t406;
t588 = t76 * qJD(1);
t497 = -t612 / 0.2e1;
t463 = t387 * t497;
t403 = (t463 - t606 / 0.2e1) * t382;
t491 = -t598 / 0.2e1;
t410 = -t651 / 0.2e1 + t282 * t491;
t88 = t403 - t410;
t587 = t88 * qJD(1);
t462 = t387 * t489;
t402 = (t462 - t607 / 0.2e1) * t382;
t89 = t402 + t409;
t586 = t89 * qJD(1);
t93 = t206 * t527 - t251 * t282;
t585 = t93 * qJD(1);
t94 = -t208 * t527 + t252 * t282;
t584 = t94 * qJD(1);
t182 = -t594 / 0.2e1;
t469 = t382 * t497;
t302 = t390 * t469;
t583 = t182 + t302;
t560 = qJD(5) * t390;
t352 = t386 * t560;
t556 = qJD(6) * t389;
t356 = t387 * t556;
t581 = -t352 - t356;
t342 = t377 - t380;
t476 = t390 * t526;
t411 = t476 + t600;
t102 = -t206 * t528 + t282 * t411;
t579 = qJD(1) * t102;
t475 = t390 * t525;
t412 = -t475 + t615;
t103 = -t208 * t528 - t282 * t412;
t578 = qJD(1) * t103;
t105 = t196 * t383 + t210 * t627;
t577 = qJD(1) * t105;
t111 = t640 + (t267 * t391 + t287 * t388) * t382;
t576 = qJD(1) * t111;
t114 = t644 + t654;
t575 = qJD(1) * t114;
t115 = t210 * t629 - t211 * t383;
t574 = qJD(1) * t115;
t125 = t266 * t383 + t267 * t629;
t573 = qJD(1) * t125;
t572 = qJD(1) * t208;
t571 = qJD(2) * t288;
t570 = qJD(2) * t289;
t569 = qJD(2) * t382;
t568 = qJD(2) * t385;
t567 = qJD(3) * t387;
t566 = qJD(3) * t390;
t564 = qJD(4) * t387;
t563 = qJD(5) * t386;
t562 = qJD(5) * t387;
t561 = qJD(5) * t389;
t256 = t147 / 0.2e1;
t145 = t256 + t492;
t559 = qJD(6) * t145;
t558 = qJD(6) * t282;
t557 = qJD(6) * t386;
t107 = (t469 + t149 / 0.2e1 + t693) * t387;
t555 = t107 * qJD(1);
t112 = t639 + (-t267 * t388 + t287 * t391) * t382;
t554 = t112 * qJD(1);
t119 = -t609 + t641;
t126 = t119 * t627;
t553 = t126 * qJD(1);
t532 = t387 * t633;
t192 = -t284 * t629 + t532;
t552 = t192 * qJD(1);
t531 = t390 * t633;
t193 = t282 * t629 + t531;
t551 = t193 * qJD(1);
t202 = t282 * t383 + t532;
t550 = t202 * qJD(1);
t203 = t284 * t383 + t531;
t549 = t203 * qJD(1);
t212 = pkin(1) * t373 * t388 + t639;
t548 = t212 * qJD(1);
t213 = pkin(1) * t632 - t640;
t547 = t213 * qJD(1);
t545 = t282 * qJD(3);
t544 = t282 * qJD(5);
t543 = t284 * qJD(3);
t275 = t284 * qJD(5);
t378 = t388 ^ 2;
t296 = (-t378 + t381) * t373;
t542 = t296 * qJD(1);
t369 = t383 * qJD(2);
t368 = t383 * qJD(3);
t367 = t383 * qJD(4);
t539 = t390 * qJD(6);
t537 = pkin(5) * t206 / 0.2e1;
t536 = pkin(5) * t693;
t535 = -pkin(5) * t251 / 0.2e1;
t534 = pkin(5) * t692;
t533 = t70 / 0.2e1 - t82 / 0.2e1;
t530 = t388 * t632;
t529 = t382 * t625;
t523 = t384 * t613;
t522 = t384 * t598;
t521 = qJ(3) * t369;
t520 = t208 * t546;
t517 = t391 * t569;
t515 = qJD(4) * t627;
t514 = t386 * t275;
t513 = qJD(5) * t627;
t512 = t386 * t561;
t511 = t389 * t560;
t510 = t386 * t539;
t509 = t389 * t539;
t508 = t388 * t569;
t340 = t382 * t565;
t507 = t386 * t556;
t506 = t387 * t560;
t504 = -t629 / 0.2e1;
t503 = t629 / 0.2e1;
t501 = -t621 / 0.2e1;
t260 = -t617 / 0.2e1;
t261 = t617 / 0.2e1;
t500 = -t614 / 0.2e1;
t495 = t609 / 0.2e1;
t493 = -t605 / 0.2e1;
t490 = t598 / 0.2e1;
t488 = t594 / 0.2e1;
t487 = t251 * t678;
t486 = t252 * t678;
t350 = t386 * t541;
t78 = t486 + t261 + (t305 + t615 / 0.2e1) * t387;
t484 = qJD(1) * t78 + t350;
t353 = t389 * t541;
t301 = t476 / 0.2e1;
t77 = t487 + t492 + (t301 - t600 / 0.2e1) * t387;
t483 = qJD(1) * t77 - t353;
t143 = 0.2e1 * t260;
t481 = -qJD(1) * t143 + t350;
t124 = -qJD(1) * t147 - t353;
t374 = t383 ^ 2;
t314 = t373 * t378 + t374;
t273 = qJD(1) * t314 + t369;
t315 = t374 + t633;
t479 = qJD(1) * t315 + t369;
t478 = qJD(6) + t546;
t477 = -qJD(3) + t568;
t474 = t284 * t518;
t473 = qJD(3) * t530;
t472 = qJD(2) * t530;
t326 = t390 * t517;
t471 = t383 * t518;
t324 = t387 * t518;
t239 = t386 * t495;
t461 = t302 + t488;
t460 = 0.1e1 / 0.2e1 + t377 / 0.2e1 + t380 / 0.2e1;
t459 = t533 * t386;
t458 = t533 * t389;
t457 = t677 / 0.2e1 + t172 / 0.2e1;
t455 = t128 / 0.2e1 + t70 * t678;
t454 = t99 / 0.2e1 + t282 * t689;
t450 = 0.2e1 * t389 * t352;
t448 = t383 / 0.2e1 + t495;
t355 = t387 * t557;
t447 = t355 - t511;
t439 = t538 / 0.2e1 - t83 / 0.2e1;
t1 = t535 + t649 / 0.2e1 - t454 * t389 + (-t603 / 0.2e1 + t206 * t687 + t459) * t387 + (t25 / 0.2e1 + t439 * t386) * t390;
t116 = -t227 * t390 + (t523 + t601) * t387;
t444 = -t1 * qJD(1) + t116 * qJD(2);
t117 = t228 * t390 + (-t522 + t616) * t387;
t2 = t534 + t648 / 0.2e1 + t454 * t386 + (t619 / 0.2e1 + t208 * t687 + t458) * t387 + (t26 / 0.2e1 + t439 * t389) * t390;
t443 = -t2 * qJD(1) - t117 * qJD(2);
t160 = -t228 * t387 - t380 * t599;
t393 = t228 * t690 + t26 * t681 + t384 * t488;
t9 = t389 * t455 + t393 + t501;
t442 = -qJD(1) * t9 + qJD(2) * t160;
t394 = t184 * t384 + t227 * t691 + t25 * t682;
t10 = -t386 * t455 + t394 + t493;
t159 = -t227 * t387 - t380 * t623;
t438 = -qJD(1) * t10 - qJD(2) * t159;
t276 = t460 * t386;
t96 = -t386 * t448 + t184 + t305;
t437 = qJD(1) * t96 - qJD(2) * t276;
t277 = t460 * t389;
t95 = t389 * t448 + t301 + t488;
t436 = qJD(1) * t95 + qJD(2) * t277;
t309 = t580 * t386;
t423 = t609 + t641 / 0.2e1;
t63 = t386 * t423 + t699;
t435 = -qJD(1) * t63 - qJD(2) * t309;
t310 = t342 * t386;
t306 = -t475 / 0.2e1;
t424 = t609 - t641 / 0.2e1;
t44 = -t386 * t424 + t185 + t306;
t434 = qJD(1) * t44 - qJD(2) * t310;
t311 = t580 * t389;
t42 = t389 * t423 + t461;
t433 = -qJD(1) * t42 - qJD(2) * t311;
t312 = t342 * t389;
t41 = t389 * t424 + t583;
t432 = -qJD(1) * t41 - qJD(2) * t312;
t431 = (-qJD(6) - t541) * t390;
t127 = -t284 ^ 2 + t696;
t430 = qJD(1) * t127 - qJD(2) * t119;
t429 = qJD(1) * t119 - qJD(2) * t342;
t271 = (t686 - pkin(2) / 0.2e1 - qJ(4) / 0.2e1) * t383;
t428 = -qJD(1) * t271 + t568;
t426 = qJD(1) * t284 + t540;
t425 = t675 / 0.2e1 + t674 / 0.2e1;
t422 = -t275 - t474;
t421 = t326 + t474;
t280 = t624 / 0.2e1 + t387 * t503;
t420 = t280 * qJD(1) + t540 / 0.2e1;
t419 = t602 / 0.2e1 + t652 / 0.2e1;
t416 = qJD(1) * t149 + t516;
t415 = -t513 - t369;
t413 = t539 / 0.2e1 - t480;
t408 = t689 + t425;
t51 = (-t618 + t650) * t390;
t67 = t206 ^ 2 - t208 ^ 2;
t407 = qJD(1) * t67 - qJD(2) * t51 - qJD(5) * t441;
t15 = t386 * t457 + t458 + t537;
t204 = t408 * t386;
t405 = pkin(5) * t561 - qJD(1) * t15 - qJD(2) * t204;
t17 = -t389 * t457 + t459 + t536;
t205 = t408 * t389;
t404 = pkin(5) * t563 - qJD(1) * t17 + qJD(2) * t205;
t104 = t419 * t390;
t113 = -t618 / 0.2e1 + t650 / 0.2e1;
t401 = qJD(2) * t104 - qJD(5) * t113 + t206 * t572;
t291 = (t376 / 0.2e1 + t688) * t390;
t400 = qJD(1) * t113 - qJD(2) * t291 + t512;
t399 = qJD(6) * t280 + t417;
t308 = t343 * t380;
t397 = qJD(1) * t51 + qJD(2) * t308 + t450;
t396 = qJD(1) * t441 + t698;
t395 = qJD(2) * t386 * t630 + qJD(1) * t104 + qJD(5) * t291;
t375 = qJ(3) * qJD(3);
t365 = t560 / 0.2e1;
t364 = qJ(3) * t368;
t351 = t386 * t562;
t328 = qJD(2) * t504;
t325 = t390 * t518;
t323 = qJD(1) * t530;
t318 = t383 * t340;
t317 = qJD(1) * t529;
t316 = -0.2e1 * t390 * t507;
t307 = t314 * qJD(3);
t298 = t357 * t390;
t297 = t357 * t387;
t286 = -t325 - t560;
t285 = -t324 - t562;
t281 = t291 * qJD(6);
t279 = t377 * t680 - t630 / 0.2e1 + t679;
t278 = t580 * t683 + t684;
t270 = t357 * t627;
t269 = -t317 - t508;
t268 = qJD(5) * t503 + t323;
t231 = t282 * t499;
t209 = t426 * t386;
t197 = -t326 / 0.2e1 + t280 * qJD(5);
t158 = -t523 + t601 / 0.2e1 - t425 * t389;
t157 = -t522 - t616 / 0.2e1 + t425 * t386;
t153 = t383 * t685 + t626 / 0.2e1 + t676 / 0.2e1 + t246;
t144 = t260 + t261;
t136 = t147 * qJD(6);
t120 = -t124 + t556;
t118 = t119 * qJD(5);
t110 = t412 * t682 + t260 + t486;
t109 = t411 * t681 + t256 + t487;
t108 = t284 * t494 + t382 * t463 + t505;
t106 = t113 * qJD(6);
t101 = t104 * qJD(6);
t98 = t239 - t615 / 0.2e1 + t699;
t97 = t464 + t182 + t301 + t600 / 0.2e1;
t91 = t403 + t410;
t90 = t231 - t610 / 0.2e1 + t402;
t75 = t647 / 0.2e1 + t406;
t64 = -t386 * t609 + t305 + t700;
t53 = t441 * qJD(6);
t49 = t51 * qJD(6);
t48 = t284 * t491 + t583 + t705;
t47 = t284 * t490 + t461 + t705;
t46 = t284 * t500 + t382 * t462 + t231 + t409;
t45 = 0.2e1 * t239 + t306 + t700;
t33 = t392 + t485;
t31 = t387 * t467 + t502 + t390 * t694 - t611 / 0.2e1 + t596 / 0.2e1;
t28 = t251 * t684 + t252 * t679 + t387 * t419 + t224;
t18 = pkin(10) * t492 + t536 + t70 * t683 + t672 / 0.2e1 + t603 / 0.2e1;
t16 = pkin(10) * t261 + t537 + t70 * t679 + t671 / 0.2e1 - t619 / 0.2e1;
t12 = t70 * t490 + t501 + t604 / 0.2e1 - t393;
t11 = t70 * t499 + t493 - t620 / 0.2e1 - t394;
t4 = (t522 + t616) * t691 - t648 / 0.2e1 + (t619 - t671) * t682 + t26 * t678 + t83 * t490 + t70 * t494 + pkin(10) * t305 + t534 + t666 / 0.2e1 + (t282 * t490 + t505) * t384;
t3 = (-t523 + t601) * t690 - t649 / 0.2e1 + (t603 + t672) * t681 + t25 * t678 + t83 * t498 + t70 * t500 + pkin(10) * t301 + t535 - t665 / 0.2e1 + t409 * t384;
t21 = [0, 0, 0, t472, t296 * qJD(2), t383 * t517, -t383 * t508, 0, -t212 * qJD(2), -t213 * qJD(2), -qJD(2) * t56 + t318, t112 * qJD(2) - t473, -qJD(2) * t111 + t307, qJD(2) * t50 - qJD(3) * t125, qJD(2) * t38 - qJD(4) * t529 + t318, -t65 * qJD(2) + qJD(4) * t530 + t307, -t66 * qJD(2) + t315 * qJD(4) + t473, qJD(2) * t27 - qJD(3) * t115 - qJD(4) * t105 (t387 * t517 - t544) * t284, qJD(2) * t126 + qJD(5) * t127, t192 * qJD(2) - t282 * t513, t193 * qJD(2) - t284 * t513, -t472, t19 * qJD(2) + t202 * qJD(4) + t35 * qJD(5) + t284 * t340, -t20 * qJD(2) + t203 * qJD(4) - t34 * qJD(5) - t282 * t340 (qJD(2) * t252 - qJD(6) * t206 - t389 * t544) * t208, qJD(2) * t52 + qJD(5) * t55 + qJD(6) * t67, qJD(2) * t94 + qJD(5) * t81 - t206 * t558, qJD(2) * t93 - qJD(5) * t79 - t208 * t558 (-t326 + t275) * t282, qJD(2) * t7 - qJD(3) * t114 + qJD(4) * t102 + qJD(5) * t5 + qJD(6) * t14, qJD(2) * t8 + qJD(3) * t80 + qJD(4) * t103 + qJD(5) * t6 + qJD(6) * t13; 0, 0, 0, t323, t542, t270, t269, 0, -t548 - t570, -t547 + t571, t446 * t569 + t340 - t589, t554 + t570, t368 - t571 - t576, t592 + (-pkin(2) * t289 - qJ(3) * t288) * qJD(2) - t266 * qJD(3), t631 + t340 + ((-t622 - t664) * qJD(2) - qJD(4) * t388) * t382, qJD(2) * t246 + t368 - t661, -qJD(2) * t247 + t367 - t660, t646 + (qJ(3) * t246 - t247 * t385) * qJD(2) + t211 * qJD(3) + t153 * qJD(4), t426 * t528 - t706, -t342 * t517 - t118 + t553, -t390 * t508 + t552, t387 * t508 + t551, -t268, qJD(4) * t282 + t31 * qJD(5) + t201 * t541 - t628 * t697 + t656, t382 * t387 * t697 + qJD(4) * t284 + t33 * qJD(5) + t201 * t540 - t655, t75 * qJD(5) - t101 + (t516 + t572) * t252, t591 + t28 * qJD(5) - t49 + (-t251 * t389 - t647) * t540, t584 + (t252 * t387 - t380 * t525) * qJD(2) + t47 * qJD(5) + t90 * qJD(6), t585 + (-t251 * t387 + t380 * t526) * qJD(2) + t45 * qJD(5) + t91 * qJD(6), t706 + (-qJD(6) / 0.2e1 - t427) * t527, t36 * t541 + t668 + t64 * qJD(3) + t109 * qJD(4) + t3 * qJD(5) + t12 * qJD(6) + (t227 * t627 - t251 * t384 + t666) * t540, -t37 * t541 + t667 + t48 * qJD(3) + t110 * qJD(4) + t4 * qJD(5) + t11 * qJD(6) + (t228 * t627 - t252 * t384 + t665) * t540; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t270, -t323, t273, -qJD(2) * t266 - t573, t270, t273, t323, qJD(2) * t211 - t574, 0, 0, 0, 0, 0, t421, -t702, 0, 0, 0, 0, 0, qJD(2) * t64 - t575, qJD(2) * t48 - t559 + t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t269, t323, t479, qJD(2) * t153 - t577, 0, 0, 0, 0, 0, qJD(2) * t282 + t550, qJD(2) * t284 + t549, 0, 0, 0, 0, 0, qJD(2) * t109 + qJD(5) * t46 + qJD(6) * t97 + t579, qJD(2) * t110 + qJD(5) * t108 + qJD(6) * t98 + t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t417, t430, -t701, t422, t328, qJD(2) * t31 - qJD(5) * t83 + t634, qJD(2) * t33 + qJD(5) * t82 - t635, t75 * qJD(2) + t106 + (-t563 - t572) * t147, t28 * qJD(2) - t282 * t482 - t53 + t590, qJD(2) * t47 + t514 + t559 + t657, qJD(2) * t45 + qJD(6) * t144 + t275 * t389 - t659, t399, t670 + t3 * qJD(2) + t46 * qJD(4) + (t386 * t453 - t83 * t389) * qJD(5) + t18 * qJD(6), t669 + t4 * qJD(2) + t108 * qJD(4) + (t83 * t386 + t389 * t453) * qJD(5) + t16 * qJD(6); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t401, t407, t90 * qJD(2) + t145 * qJD(5) - t206 * t478, t91 * qJD(2) + t144 * qJD(5) - t208 * t478, t197, qJD(2) * t12 + qJD(4) * t97 + qJD(5) * t18 - qJD(6) * t26 + t662, qJD(2) * t11 - qJD(3) * t145 + qJD(4) * t98 + qJD(5) * t16 + qJD(6) * t25 + t663; 0, 0, 0, -t323, -t542, -t471, t317, 0, t548, t547, t589, -t554, t368 + t576, t364 - t592, -t631, t368 + t661, t367 + t660, -qJD(4) * t271 + t364 - t646, -t284 * t324 - t706, -t118 - t553, -t387 * t513 - t552, -t390 * t513 - t551, t268, qJD(5) * t30 + t367 * t387 - t656, qJD(5) * t32 + t367 * t390 + t655, qJD(5) * t76 - t252 * t572 - t101, qJD(5) * t29 - t49 - t591, -qJD(5) * t41 - qJD(6) * t89 - t584, -qJD(5) * t44 - qJD(6) * t88 - t585, t706 + (t546 + qJD(6) / 0.2e1) * t527, -qJD(3) * t63 - qJD(4) * t77 - qJD(5) * t1 - qJD(6) * t9 - t668, -qJD(3) * t42 - qJD(4) * t78 - qJD(5) * t2 - qJD(6) * t10 - t667; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJD(3), t375, 0, qJD(3), qJD(4), qJD(4) * t385 + t375, -t506, t342 * qJD(5), 0, 0, 0, t385 * t560 + t564, qJD(4) * t390 - t385 * t562, -t379 * t506 - t380 * t507, -qJD(6) * t308 + t387 * t450, -qJD(5) * t312 - t387 * t510, qJD(5) * t310 - t387 * t509, t506, -qJD(3) * t309 + qJD(5) * t116 + qJD(6) * t160 + t389 * t564, -qJD(3) * t311 - qJD(5) * t117 - qJD(6) * t159 - t386 * t564; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t357, t319, 0, t357, 0, t319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t435, t433; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t357, t428, 0, 0, 0, 0, 0, t297, t298, 0, 0, 0, 0, 0, qJD(6) * t279 - t483, qJD(6) * t278 - t484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t480, -t429, t285, t286, qJD(1) * t503, -t384 * t562 + t385 * t540 + t637, -t384 * t560 - t385 * t541 + t636, t588 - t281 + (-t379 * t540 - t512) * t387, t387 * t698 + t316 + t638, t352 + t432, -t434 + t511, t413 (t386 * t452 - t524) * qJD(5) + t158 * qJD(6) + t444 (-pkin(10) * t598 + (pkin(5) * t389 + t623) * t387) * qJD(5) + t157 * qJD(6) + t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t395, -t397, t386 * t431 - t586, t389 * t431 - t587, t325 / 0.2e1 + t365, qJD(4) * t279 + qJD(5) * t158 - qJD(6) * t228 + t442, qJD(4) * t278 + qJD(5) * t157 + qJD(6) * t227 + t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t471, t323, -t273, -t521 + t573, -t471, -t273, -t323, -t367 - t521 + t574, 0, 0, 0, 0, 0, t422, t701, 0, 0, 0, 0, 0, qJD(2) * t63 - qJD(5) * t149 + t282 * t557 + t575, qJD(2) * t42 + t136 + t514 - t658; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t357, -t319, 0, -t357, 0, -qJD(4) - t319, 0, 0, 0, 0, 0, -t560, t562, 0, 0, 0, 0, 0, -t435 + t447, -t433 - t581; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t357, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t426, t427, 0, 0, 0, 0, 0, -t416, t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t386 * t478 + t350, t120; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t317, -t323, -t479, qJD(2) * t271 + t368 + t577, 0, 0, 0, 0, 0, t387 * t415 - t550, t390 * t415 - t549, 0, 0, 0, 0, 0, qJD(2) * t77 - qJD(5) * t43 - qJD(6) * t95 - t579, qJD(2) * t78 - qJD(5) * t107 - qJD(6) * t96 - t578; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t357, qJD(3) - t428, 0, 0, 0, 0, 0, -t297, -t298, 0, 0, 0, 0, 0, -qJD(6) * t277 + t483, qJD(6) * t276 + t484; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t357, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t285, t286, 0, 0, 0, 0, 0, -t387 * t561 - t510 - t593, t351 - t509 - t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t436 + t581, -t437 + t447; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, -t430, t702, t421, t328, -t30 * qJD(2) + t387 * t515 + t543 - t634, -t32 * qJD(2) + t390 * t515 - t545 + t635, -qJD(2) * t76 + t389 * t520 + t106, -qJD(2) * t29 - t53 - t590, qJD(2) * t41 + t136 - t657, qJD(2) * t44 + qJD(6) * t143 + t659, -t399, qJD(2) * t1 + qJD(3) * t149 + qJD(4) * t43 + qJD(6) * t17 - t670, qJD(2) * t2 + qJD(4) * t107 + qJD(6) * t15 - t386 * t543 - t669; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t480, t429, t324, t325, qJD(1) * t504, -t390 * t477 - t637, t387 * t477 - t636, t354 * t379 - t281 - t588, -0.2e1 * t387 * t470 + t316 - t638, t356 - t432, -t355 + t434, -t413, -qJD(6) * t205 + t389 * t566 - t444, qJD(6) * t204 - t386 * t566 - t443; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t426, -t427, 0, 0, 0, 0, 0, t416, -t209; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t324, t325, 0, 0, 0, 0, 0, t593, t555; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t507, t343 * qJD(6), 0, 0, 0, -pkin(5) * t557, -pkin(5) * t556; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t400, -t396, t120, -t481 - t557, -t420, -pkin(10) * t556 - t404, pkin(10) * t557 - t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t401, -t407, qJD(2) * t89 - qJD(5) * t147 + t206 * t546, qJD(2) * t88 - qJD(5) * t143 + t520, t197, qJD(2) * t9 + qJD(4) * t95 - qJD(5) * t17 - t386 * t545 - t662, qJD(2) * t10 - qJD(3) * t147 + qJD(4) * t96 - qJD(5) * t15 - t663; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t395, t397, t586 + (t386 * t540 - t561) * t387, t354 * t389 + t351 + t587, -t325 / 0.2e1 + t365, qJD(4) * t277 + qJD(5) * t205 - t386 * t567 - t442, -qJD(4) * t276 - qJD(5) * t204 - t389 * t567 - t438; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t386 * t546 - t350, t124; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t436, t437; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t400, t396, t124, t481, t420, t404, t405; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;];
cmat_reg  = t21;
