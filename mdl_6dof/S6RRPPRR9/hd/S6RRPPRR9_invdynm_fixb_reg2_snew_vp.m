% Calculate inertial parameters regressor of inverse dynamics cutting torque vector with Newton-Euler for
% S6RRPPRR9
% Use Code from Maple symbolic Code Generation
%
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,alpha2,d1,d2,d5,d6]';
%
% Output:
% m_new_reg [(3*7)x(%Nl%*10)]
%   inertial parameter regressor of inverse dynamics cutting torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-06 11:37
% Revision: 89c353f7eff3bd693eda4e29f35b2761dbc3ada0 (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function m_new_reg = S6RRPPRR9_invdynm_fixb_reg2_snew_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(10,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRPPRR9_invdynm_fixb_reg2_snew_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRPPRR9_invdynm_fixb_reg2_snew_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRPPRR9_invdynm_fixb_reg2_snew_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRPPRR9_invdynm_fixb_reg2_snew_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'S6RRPPRR9_invdynm_fixb_reg2_snew_vp: pkin has to be [10x1] (double)');

%% Symbolic Calculation
% From invdyn_fixb_NewtonEuler_m_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-06 11:36:44
% EndTime: 2019-05-06 11:37:21
% DurationCPUTime: 39.18s
% Computational Cost: add. (156013->990), mult. (368265->1234), div. (0->0), fcn. (253507->10), ass. (0->617)
t1537 = cos(qJ(2));
t1533 = sin(qJ(2));
t1529 = sin(pkin(6));
t1526 = t1529 ^ 2;
t1539 = qJD(1) ^ 2;
t1710 = t1526 * t1539;
t1674 = t1537 * t1710;
t1509 = t1533 * t1674;
t1530 = cos(pkin(6));
t1653 = qJDD(1) * t1530 + qJDD(2);
t1486 = t1509 + t1653;
t1713 = t1486 * t1533;
t1528 = t1537 ^ 2;
t1675 = t1528 * t1710;
t1661 = qJD(1) * t1530 + qJD(2);
t1773 = t1661 ^ 2;
t1774 = -t1773 - t1675;
t1424 = t1537 * t1774 - t1713;
t1788 = pkin(8) * t1424;
t1487 = -t1509 + t1653;
t1475 = t1537 * t1487;
t1527 = t1533 ^ 2;
t1676 = t1527 * t1710;
t1494 = t1773 + t1676;
t1802 = -t1494 * t1533 + t1475;
t1801 = pkin(8) * t1802;
t1534 = sin(qJ(1));
t1781 = t1424 * t1534;
t1538 = cos(qJ(1));
t1780 = t1424 * t1538;
t1798 = t1802 * t1534;
t1797 = t1802 * t1538;
t1747 = pkin(2) * t1537;
t1643 = qJ(3) * t1533 + t1747;
t1726 = qJD(1) * t1529;
t1485 = t1643 * t1726;
t1517 = g(1) * t1538 + g(2) * t1534;
t1737 = pkin(8) * t1529;
t1484 = -pkin(1) * t1539 + qJDD(1) * t1737 - t1517;
t1516 = t1534 * g(1) - t1538 * g(2);
t1554 = qJDD(1) * pkin(1) + t1539 * t1737 + t1516;
t1551 = t1530 * t1554;
t1656 = t1533 * t1484 - t1537 * t1551;
t1724 = qJD(1) * t1533;
t1346 = -t1653 * pkin(2) - t1773 * qJ(3) + t1529 * (g(3) * t1537 - t1485 * t1724) + qJDD(3) + t1656;
t1723 = qJD(1) * t1537;
t1488 = (qJD(2) * t1723 + qJDD(1) * t1533) * t1529;
t1768 = t1661 * qJD(1);
t1585 = t1537 * t1768;
t1501 = t1529 * t1585;
t1450 = -t1501 + t1488;
t1743 = pkin(3) * t1450;
t1789 = -2 * qJD(4);
t1799 = qJ(4) * t1486;
t1305 = t1661 * t1789 + t1346 + t1743 - t1799;
t1805 = -t1305 - t1743;
t1703 = t1529 * t1537;
t1682 = qJD(1) * t1703;
t1267 = t1305 + pkin(9) * t1676 + t1488 * pkin(4) - t1661 * (pkin(4) * t1682 - pkin(9) * t1661);
t1704 = t1529 * t1533;
t1804 = t1487 * t1704 + t1494 * t1703;
t1696 = t1530 * t1537;
t1697 = t1530 * t1533;
t1803 = t1487 * t1697 + t1494 * t1696;
t1800 = qJ(3) * t1774;
t1523 = g(3) * t1704;
t1549 = t1533 * t1551 - t1523;
t1752 = 2 * qJD(3);
t1765 = -pkin(2) * t1773 + t1653 * qJ(3) + t1661 * t1752;
t1546 = t1549 + t1765;
t1683 = qJD(1) * t1704;
t1483 = pkin(3) * t1683 - qJ(4) * t1661;
t1518 = qJD(2) * t1683;
t1685 = t1537 * qJDD(1);
t1489 = t1529 * t1685 - t1518;
t1587 = (-t1485 * t1726 + t1484) * t1537;
t1795 = t1489 * pkin(3) - qJ(4) * t1675 + t1661 * t1483 + qJDD(4) + t1587;
t1306 = t1546 + t1795;
t1586 = t1529 * t1768;
t1500 = t1533 * t1586;
t1449 = t1489 + t1500;
t1796 = -pkin(3) * t1449 - t1306;
t1496 = (-t1527 + t1528) * t1710;
t1452 = t1501 + t1488;
t1453 = t1489 - t1500;
t1718 = t1453 * t1533;
t1604 = t1452 * t1537 + t1718;
t1355 = t1529 * t1496 + t1530 * t1604;
t1717 = t1453 * t1537;
t1398 = t1452 * t1533 - t1717;
t1794 = t1355 * t1534 + t1398 * t1538;
t1300 = t1355 * t1538 - t1398 * t1534;
t1491 = -t1773 + t1676;
t1602 = -t1491 * t1537 + t1713;
t1385 = -t1529 * t1450 + t1530 * t1602;
t1712 = t1486 * t1537;
t1431 = t1491 * t1533 + t1712;
t1793 = t1385 * t1534 - t1431 * t1538;
t1318 = t1385 * t1538 + t1431 * t1534;
t1492 = -t1773 + t1675;
t1600 = t1492 * t1533 + t1475;
t1388 = -t1529 * t1449 + t1530 * t1600;
t1711 = t1487 * t1533;
t1435 = -t1492 * t1537 + t1711;
t1321 = t1388 * t1534 + t1435 * t1538;
t1792 = t1388 * t1538 - t1435 * t1534;
t1791 = t1486 * t1703 + t1704 * t1774;
t1790 = t1486 * t1696 + t1697 * t1774;
t1531 = sin(qJ(6));
t1532 = sin(qJ(5));
t1536 = cos(qJ(5));
t1474 = t1532 * t1683 + t1536 * t1661;
t1535 = cos(qJ(6));
t1642 = qJD(5) + t1682;
t1440 = t1474 * t1531 - t1535 * t1642;
t1442 = t1535 * t1474 + t1531 * t1642;
t1393 = t1442 * t1440;
t1576 = -t1536 * t1488 + t1532 * t1653;
t1552 = t1474 * qJD(5) + t1576;
t1412 = qJDD(6) + t1552;
t1767 = -t1393 + t1412;
t1779 = t1531 * t1767;
t1472 = t1532 * t1661 - t1536 * t1683;
t1429 = t1474 * t1472;
t1480 = qJDD(5) + t1489;
t1766 = -t1429 + t1480;
t1778 = t1532 * t1766;
t1777 = t1535 * t1767;
t1776 = t1536 * t1766;
t1413 = -t1472 * qJD(5) + t1532 * t1488 + t1536 * t1653;
t1455 = t1642 * t1472;
t1775 = -t1455 + t1413;
t1634 = t1642 ^ 2;
t1772 = (-t1494 + t1675) * pkin(3);
t1479 = t1489 * qJ(4);
t1681 = qJD(3) * t1724;
t1514 = -0.2e1 * t1529 * t1681;
t1497 = pkin(2) * t1500;
t1731 = t1530 * g(3);
t1663 = -t1497 + t1731;
t1732 = t1489 * pkin(2);
t1594 = t1663 + t1732;
t1556 = t1682 * t1789 - t1479 + t1514 - t1594;
t1673 = t1483 * t1724;
t1749 = pkin(9) - qJ(3);
t1254 = (-pkin(3) * t1528 - pkin(4) * t1527) * t1710 + t1749 * t1488 + (-t1673 + ((-pkin(4) * t1703 + t1530 * t1749) * qJD(1) + t1749 * qJD(2)) * t1723 - t1554) * t1529 + t1556;
t1541 = -t1523 - t1653 * pkin(9) + t1489 * pkin(4) + (pkin(4) * t1586 + pkin(9) * t1674 + t1551) * t1533 + t1765 + t1795;
t1186 = t1532 * t1254 - t1536 * t1541;
t1187 = t1536 * t1254 + t1532 * t1541;
t1658 = t1536 * t1186 - t1532 * t1187;
t1751 = pkin(3) + pkin(4);
t1771 = t1658 * t1751;
t1372 = -t1474 * t1682 + t1576;
t1375 = t1455 + t1413;
t1295 = -t1372 * t1532 - t1375 * t1536;
t1770 = t1295 * t1751;
t1769 = t1526 * (-t1530 * t1539 + t1768);
t1427 = pkin(5) * t1472 - pkin(10) * t1474;
t1158 = -pkin(5) * t1634 + t1480 * pkin(10) - t1472 * t1427 + t1187;
t1371 = (0.2e1 * qJD(5) + t1682) * t1474 + t1576;
t1201 = t1371 * pkin(5) - pkin(10) * t1775 - t1267;
t1118 = t1158 * t1531 - t1535 * t1201;
t1119 = t1158 * t1535 + t1201 * t1531;
t1093 = t1531 * t1118 + t1535 * t1119;
t1124 = t1532 * t1186 + t1536 * t1187;
t1454 = t1518 + (t1533 * t1768 - t1685) * t1529;
t1763 = (t1774 + t1675) * pkin(3) - qJ(4) * t1454;
t1157 = -t1480 * pkin(5) - pkin(10) * t1634 + t1427 * t1474 + t1186;
t1076 = t1093 * t1532 - t1157 * t1536;
t1689 = pkin(5) * t1157 - pkin(10) * t1093;
t1762 = -t1076 * t1751 + t1689;
t1092 = -t1118 * t1535 + t1119 * t1531;
t1739 = pkin(5) * t1536;
t1645 = -pkin(10) * t1532 - t1739;
t1077 = t1093 * t1536 + t1157 * t1532;
t1690 = pkin(4) * t1092 - pkin(9) * t1077;
t1761 = t1092 * (pkin(3) - t1645) + t1690;
t1468 = qJD(6) + t1472;
t1657 = -t1531 * t1413 + t1535 * t1480;
t1289 = (-qJD(6) + t1468) * t1442 + t1657;
t1607 = -t1535 * t1413 - t1531 * t1480;
t1329 = -qJD(6) * t1440 - t1607;
t1409 = t1468 * t1440;
t1291 = t1329 + t1409;
t1208 = t1289 * t1535 + t1291 * t1531;
t1438 = t1440 ^ 2;
t1439 = t1442 ^ 2;
t1331 = t1438 + t1439;
t1168 = t1208 * t1532 + t1331 * t1536;
t1651 = pkin(5) * t1331 + pkin(10) * t1208 + t1093;
t1760 = -t1168 * t1751 - t1651;
t1470 = t1472 ^ 2;
t1418 = -t1634 - t1470;
t1326 = t1418 * t1532 + t1776;
t1759 = -t1326 * t1751 + t1186;
t1471 = t1474 ^ 2;
t1430 = -t1471 - t1634;
t1407 = t1429 + t1480;
t1720 = t1407 * t1532;
t1335 = t1430 * t1536 - t1720;
t1758 = -t1335 * t1751 + t1187;
t1465 = t1468 ^ 2;
t1344 = -t1465 - t1438;
t1243 = t1344 * t1535 - t1779;
t1410 = t1468 * t1442;
t1582 = qJD(6) * t1442 - t1657;
t1288 = -t1410 - t1582;
t1189 = t1243 * t1532 + t1288 * t1536;
t1155 = t1535 * t1157;
t1671 = -pkin(5) * t1288 - pkin(10) * t1243 + t1155;
t1757 = -t1189 * t1751 + t1671;
t1377 = -t1439 - t1465;
t1316 = t1393 + t1412;
t1721 = t1316 * t1535;
t1251 = -t1377 * t1531 - t1721;
t1292 = (qJD(6) + t1468) * t1440 + t1607;
t1194 = t1251 * t1532 + t1292 * t1536;
t1154 = t1531 * t1157;
t1672 = pkin(5) * t1292 + pkin(10) * t1251 + t1154;
t1756 = -t1194 * t1751 - t1672;
t1206 = t1289 * t1531 - t1291 * t1535;
t1081 = -pkin(10) * t1206 - t1092;
t1169 = t1208 * t1536 - t1331 * t1532;
t1670 = pkin(4) * t1206 - pkin(9) * t1169 - t1532 * t1081;
t1755 = t1206 * (pkin(3) + t1739) + t1670;
t1381 = t1530 * t1449 + t1529 * t1600;
t1378 = t1530 * t1450 + t1529 * t1602;
t1352 = -t1530 * t1496 + t1529 * t1604;
t1750 = pkin(2) + qJ(4);
t1748 = pkin(2) * t1533;
t1746 = pkin(3) * t1305;
t1745 = pkin(3) * t1306;
t1742 = pkin(3) * t1486;
t1741 = pkin(3) * t1487;
t1740 = pkin(5) * t1532;
t1686 = t1527 + t1528;
t1495 = t1686 * t1710;
t1605 = t1449 * t1533 - t1450 * t1537;
t1354 = t1529 * t1495 + t1530 * t1605;
t1396 = t1449 * t1537 + t1450 * t1533;
t1738 = pkin(7) * (t1354 * t1538 + t1396 * t1534);
t1736 = pkin(8) * t1530;
t1735 = pkin(9) * t1658;
t1734 = pkin(10) * t1536;
t1730 = qJ(3) * t1495;
t1729 = qJ(4) * t1450;
t1727 = t1488 * qJ(3);
t1722 = t1316 * t1531;
t1719 = t1407 * t1536;
t1715 = t1468 * t1531;
t1714 = t1468 * t1535;
t1451 = t1703 * t1768 + t1488;
t1707 = t1529 * t1451;
t1706 = t1529 * t1453;
t1700 = t1530 * t1451;
t1699 = t1530 * t1453;
t1259 = t1532 * t1267;
t1458 = t1529 * t1554 + t1731;
t1694 = t1533 * t1458;
t1693 = t1536 * t1267;
t1692 = t1537 * t1458;
t1691 = t1536 * t1081 + t1206 * t1740;
t1688 = pkin(4) * t1267 + pkin(9) * t1124;
t1687 = pkin(1) * t1354 + t1396 * t1737;
t1401 = -pkin(2) * t1450 + qJ(3) * t1449;
t1680 = t1532 * t1393;
t1679 = t1536 * t1393;
t1678 = t1533 * t1429;
t1677 = t1537 * t1429;
t1336 = -t1430 * t1532 - t1719;
t1669 = -pkin(4) * t1775 + pkin(9) * t1336 - t1259;
t1327 = t1418 * t1536 - t1778;
t1668 = -pkin(4) * t1371 + pkin(9) * t1327 + t1693;
t1667 = qJ(4) - t1734;
t1351 = -t1530 * t1495 + t1529 * t1605;
t1666 = -pkin(1) * t1351 + t1396 * t1736;
t1089 = t1092 * t1740;
t1665 = -pkin(9) * t1076 + t1089;
t1664 = -pkin(9) * t1335 - t1693;
t1662 = 0.2e1 * t1681;
t1242 = t1344 * t1531 + t1777;
t1102 = -pkin(5) * t1242 + t1118;
t1130 = -pkin(10) * t1242 + t1154;
t1660 = -t1532 * t1102 + t1536 * t1130;
t1250 = t1377 * t1535 - t1722;
t1104 = -pkin(5) * t1250 + t1119;
t1133 = -pkin(10) * t1250 + t1155;
t1659 = -t1532 * t1104 + t1536 * t1133;
t1655 = -t1516 * t1534 - t1538 * t1517;
t1190 = t1243 * t1536 - t1288 * t1532;
t1650 = -pkin(4) * t1242 + pkin(9) * t1190 + t1536 * t1102 + t1532 * t1130;
t1195 = t1251 * t1536 - t1292 * t1532;
t1649 = -pkin(4) * t1250 + pkin(9) * t1195 + t1536 * t1104 + t1532 * t1133;
t1297 = -t1372 * t1536 + t1375 * t1532;
t1403 = -t1470 - t1471;
t1648 = -pkin(4) * t1403 + pkin(9) * t1297 + t1124;
t1647 = -pkin(3) * t1267 - t1688;
t1646 = -pkin(9) * t1168 + t1691;
t1508 = qJDD(1) * t1538 - t1534 * t1539;
t1644 = -pkin(7) * t1508 - g(3) * t1534;
t1638 = -t1694 - t1801;
t1637 = t1692 + t1788;
t1636 = -pkin(9) * t1326 - t1259;
t1629 = t1076 * t1533 + t1092 * t1537;
t1628 = -t1267 * t1537 - t1533 * t1658;
t1627 = t1168 * t1533 + t1206 * t1537;
t1290 = t1329 - t1409;
t1207 = t1288 * t1535 - t1290 * t1531;
t1392 = t1439 - t1438;
t1176 = t1207 * t1532 - t1392 * t1536;
t1205 = t1288 * t1531 + t1290 * t1535;
t1626 = t1176 * t1533 + t1205 * t1537;
t1625 = t1189 * t1533 + t1242 * t1537;
t1624 = t1194 * t1533 + t1250 * t1537;
t1405 = -t1439 + t1465;
t1275 = -t1405 * t1531 + t1777;
t1197 = t1275 * t1532 - t1291 * t1536;
t1273 = t1405 * t1535 + t1779;
t1623 = t1197 * t1533 + t1273 * t1537;
t1404 = t1438 - t1465;
t1276 = t1404 * t1535 - t1722;
t1287 = -t1410 + t1582;
t1198 = t1276 * t1532 + t1287 * t1536;
t1274 = t1404 * t1531 + t1721;
t1622 = t1198 * t1533 + t1274 * t1537;
t1282 = t1440 * t1714 + t1531 * t1582;
t1228 = t1282 * t1532 + t1679;
t1281 = -t1440 * t1715 + t1535 * t1582;
t1621 = t1228 * t1533 - t1281 * t1537;
t1284 = t1329 * t1535 - t1442 * t1715;
t1229 = t1284 * t1532 - t1679;
t1283 = t1329 * t1531 + t1442 * t1714;
t1620 = t1229 * t1533 + t1283 * t1537;
t1247 = t1495 * t1750 - t1796;
t1268 = t1730 - t1805;
t1619 = t1247 * t1537 + t1268 * t1533;
t1323 = (-t1440 * t1535 + t1442 * t1531) * t1468;
t1279 = t1323 * t1532 - t1412 * t1536;
t1322 = (-t1440 * t1531 - t1442 * t1535) * t1468;
t1618 = t1279 * t1533 + t1322 * t1537;
t1294 = -t1371 * t1532 + t1536 * t1775;
t1428 = t1471 - t1470;
t1617 = t1294 * t1533 + t1428 * t1537;
t1616 = t1295 * t1533 + t1403 * t1537;
t1615 = -t1305 * t1537 + t1306 * t1533;
t1614 = t1326 * t1533 + t1371 * t1537;
t1337 = t1587 + t1546;
t1328 = pkin(2) * t1495 + t1337;
t1332 = t1346 + t1730;
t1613 = t1328 * t1537 + t1332 * t1533;
t1612 = t1335 * t1533 + t1537 * t1775;
t1611 = t1337 * t1533 - t1346 * t1537;
t1448 = -t1471 + t1634;
t1340 = t1448 * t1536 + t1778;
t1610 = t1340 * t1533 + t1375 * t1537;
t1447 = t1470 - t1634;
t1341 = t1447 * t1532 + t1719;
t1609 = t1341 * t1533 - t1372 * t1537;
t1588 = t1642 * t1474;
t1572 = t1536 * t1588;
t1575 = t1532 * t1455;
t1399 = -t1575 - t1572;
t1608 = t1399 * t1533 + t1480 * t1537;
t1420 = g(3) * t1703 + t1656;
t1421 = t1537 * t1484 + t1549;
t1606 = -t1537 * t1420 + t1533 * t1421;
t1333 = t1420 * t1533 + t1421 * t1537;
t1603 = -t1494 * t1537 - t1711;
t1601 = -t1533 * t1774 - t1712;
t1599 = t1516 * t1538 - t1517 * t1534;
t1597 = pkin(3) * t1775 - t1669;
t1596 = pkin(3) * t1371 - t1668;
t1595 = t1529 * t1653;
t1591 = -pkin(9) * t1189 + t1660;
t1590 = -pkin(9) * t1194 + t1659;
t1589 = -pkin(9) * t1295 + t1658;
t1358 = t1536 * t1552 - t1575;
t1584 = -t1358 * t1533 - t1677;
t1360 = t1532 * t1413 + t1572;
t1583 = t1360 * t1533 + t1677;
t1581 = (-t1351 * t1529 - t1354 * t1530) * pkin(8);
t1580 = pkin(3) * t1242 - t1650;
t1579 = pkin(3) * t1250 - t1649;
t1578 = pkin(3) * t1403 - t1648;
t1574 = t1532 * t1588;
t1573 = t1536 * t1455;
t1043 = -qJ(3) * t1077 - t1761;
t1044 = -t1077 * t1750 - t1762;
t1060 = t1076 * t1537 - t1092 * t1533;
t1571 = pkin(8) * t1060 + t1043 * t1533 + t1044 * t1537;
t1058 = -qJ(3) * t1169 - t1755;
t1059 = -t1169 * t1750 - t1760;
t1126 = t1168 * t1537 - t1206 * t1533;
t1570 = pkin(8) * t1126 + t1058 * t1533 + t1059 * t1537;
t1063 = -t1124 * t1750 - t1771;
t1083 = -qJ(3) * t1124 - t1647;
t1107 = t1267 * t1533 - t1537 * t1658;
t1569 = pkin(8) * t1107 + t1063 * t1537 + t1083 * t1533;
t1065 = -qJ(3) * t1190 - t1580;
t1071 = -t1190 * t1750 - t1757;
t1143 = t1189 * t1537 - t1242 * t1533;
t1568 = pkin(8) * t1143 + t1065 * t1533 + t1071 * t1537;
t1067 = -qJ(3) * t1195 - t1579;
t1074 = -t1195 * t1750 - t1756;
t1147 = t1194 * t1537 - t1250 * t1533;
t1567 = pkin(8) * t1147 + t1067 * t1533 + t1074 * t1537;
t1096 = -qJ(3) * t1297 - t1578;
t1140 = -t1297 * t1750 + t1770;
t1235 = t1295 * t1537 - t1403 * t1533;
t1566 = pkin(8) * t1235 + t1096 * t1533 + t1140 * t1537;
t1120 = -t1327 * t1750 - t1759;
t1149 = -qJ(3) * t1327 - t1596;
t1264 = t1326 * t1537 - t1371 * t1533;
t1565 = pkin(8) * t1264 + t1120 * t1537 + t1149 * t1533;
t1121 = -t1336 * t1750 - t1758;
t1151 = -qJ(3) * t1336 - t1597;
t1271 = t1335 * t1537 - t1533 * t1775;
t1564 = pkin(8) * t1271 + t1121 * t1537 + t1151 * t1533;
t1545 = t1479 + (((t1752 + t1483) * t1533 + (qJ(3) * t1661 + (2 * qJD(4))) * t1537) * qJD(1) + t1554) * t1529 + t1663;
t1544 = t1545 + t1727;
t1304 = pkin(3) * t1675 + t1544 + t1732;
t1164 = t1304 * t1750 + t1745;
t1213 = qJ(3) * t1304 + t1746;
t1214 = t1305 * t1533 + t1306 * t1537;
t1563 = pkin(8) * t1214 + t1164 * t1537 + t1213 * t1533;
t1234 = (-t1454 + t1489) * pkin(2) + t1544 + t1763;
t1419 = -qJ(3) * t1454 - t1742;
t1562 = t1234 * t1537 + t1419 * t1533 + t1788;
t1257 = t1732 + (t1452 + t1488) * qJ(3) + t1772 + t1545;
t1370 = t1452 * t1750 + t1741;
t1561 = t1257 * t1533 + t1370 * t1537 + t1801;
t1312 = (t1554 + t1662) * t1529 + (t1451 + t1452) * qJ(3) + t1594;
t1560 = t1312 * t1533 + t1451 * t1747 + t1801;
t1313 = t1497 + t1514 - qJ(3) * t1452 + (-t1453 - t1489) * pkin(2) - t1458;
t1557 = -qJ(3) * t1718 + t1313 * t1537 - t1788;
t1269 = t1337 * t1537 + t1346 * t1533;
t1548 = -qJ(3) * t1585 - t1554;
t1338 = t1727 + (-t1548 + t1662) * t1529 + t1594;
t1553 = pkin(8) * t1269 + t1338 * t1643;
t1550 = t1529 * t1710 + t1530 * t1586;
t1543 = (t1548 - t1673) * t1529 - t1727 + t1556;
t1507 = qJDD(1) * t1534 + t1538 * t1539;
t1506 = t1530 * t1653;
t1490 = -pkin(7) * t1507 + g(3) * t1538;
t1478 = qJ(3) * t1487;
t1457 = t1661 * t1686 * t1726;
t1444 = t1537 * t1488 - t1527 * t1586;
t1443 = -t1533 * t1489 - t1528 * t1586;
t1426 = t1538 * t1457 + t1534 * t1595;
t1425 = t1534 * t1457 - t1538 * t1595;
t1417 = (t1530 * t1488 + t1537 * t1550) * t1533;
t1416 = (t1529 * t1488 + t1537 * t1769) * t1533;
t1415 = (t1529 * t1489 - t1533 * t1769) * t1537;
t1414 = (t1530 * t1489 - t1533 * t1550) * t1537;
t1400 = -t1573 + t1574;
t1391 = t1530 * t1601 - t1706;
t1390 = t1706 + t1790;
t1386 = t1452 * t1529 + t1803;
t1384 = t1529 * t1601 + t1699;
t1383 = -t1699 + t1791;
t1379 = -t1452 * t1530 + t1804;
t1367 = -t1454 * t1529 + t1790;
t1366 = t1530 * t1603 - t1707;
t1365 = t1707 + t1803;
t1364 = t1454 * t1530 + t1791;
t1363 = t1529 * t1603 + t1700;
t1362 = -t1700 + t1804;
t1361 = t1536 * t1413 - t1574;
t1359 = t1532 * t1552 + t1573;
t1357 = t1399 * t1537 - t1480 * t1533;
t1350 = -t1417 * t1534 + t1444 * t1538;
t1349 = -t1414 * t1534 + t1443 * t1538;
t1348 = t1417 * t1538 + t1444 * t1534;
t1347 = t1414 * t1538 + t1443 * t1534;
t1343 = t1447 * t1536 - t1720;
t1342 = -t1448 * t1532 + t1776;
t1339 = t1401 - t1729;
t1314 = -pkin(2) * t1486 + t1346 - t1800;
t1311 = t1360 * t1537 - t1678;
t1310 = -t1358 * t1537 + t1678;
t1309 = t1529 * t1458 + t1530 * t1606;
t1308 = -t1530 * t1458 + t1529 * t1606;
t1307 = pkin(2) * t1494 + t1337 + t1478;
t1303 = -t1529 * t1400 + t1530 * t1608;
t1302 = t1530 * t1400 + t1529 * t1608;
t1298 = pkin(7) * (-t1354 * t1534 + t1396 * t1538);
t1296 = -t1371 * t1536 - t1532 * t1775;
t1280 = t1323 * t1536 + t1412 * t1532;
t1278 = t1341 * t1537 + t1372 * t1533;
t1277 = t1340 * t1537 - t1375 * t1533;
t1272 = -t1694 + (-t1383 * t1529 - t1390 * t1530) * pkin(8);
t1270 = -pkin(2) * t1346 + qJ(3) * t1337;
t1266 = t1494 * t1750 + t1306 + t1478;
t1258 = -t1692 + (-t1363 * t1529 - t1366 * t1530) * pkin(8);
t1256 = -pkin(1) * t1383 + t1529 * t1420 + t1530 * t1637;
t1255 = pkin(1) * t1390 - t1530 * t1420 + t1529 * t1637;
t1252 = t1486 * t1750 - t1305 + t1800;
t1246 = t1294 * t1537 - t1428 * t1533;
t1245 = -pkin(1) * t1363 + t1529 * t1421 + t1530 * t1638;
t1244 = pkin(1) * t1366 - t1530 * t1421 + t1529 * t1638;
t1239 = -t1529 * t1361 + t1530 * t1583;
t1238 = -t1529 * t1359 + t1530 * t1584;
t1237 = t1530 * t1361 + t1529 * t1583;
t1236 = t1530 * t1359 + t1529 * t1584;
t1233 = pkin(1) * t1309 + t1333 * t1737;
t1232 = -pkin(1) * t1308 + t1333 * t1736;
t1231 = t1284 * t1536 + t1680;
t1230 = t1282 * t1536 - t1680;
t1227 = t1333 * t1530 + t1666;
t1226 = t1333 * t1529 + t1687;
t1225 = -t1529 * t1343 + t1530 * t1609;
t1224 = -t1529 * t1342 + t1530 * t1610;
t1223 = t1530 * t1343 + t1529 * t1609;
t1222 = t1530 * t1342 + t1529 * t1610;
t1221 = (-t1308 * t1529 - t1309 * t1530) * pkin(8);
t1220 = t1581 - t1606;
t1219 = t1529 * t1338 + t1530 * t1611;
t1218 = -t1530 * t1338 + t1529 * t1611;
t1217 = -t1529 * t1336 + t1530 * t1612;
t1216 = t1530 * t1336 + t1529 * t1612;
t1215 = t1279 * t1537 - t1322 * t1533;
t1212 = -t1529 * t1327 + t1530 * t1614;
t1211 = t1530 * t1327 + t1529 * t1614;
t1210 = -qJ(3) * t1717 - t1533 * t1313 + (-t1384 * t1529 - t1391 * t1530) * pkin(8);
t1209 = -t1451 * t1748 + t1537 * t1312 + (-t1362 * t1529 - t1365 * t1530) * pkin(8);
t1200 = t1276 * t1536 - t1287 * t1532;
t1199 = t1275 * t1536 + t1291 * t1532;
t1192 = -t1529 * t1296 + t1530 * t1617;
t1191 = t1530 * t1296 + t1529 * t1617;
t1185 = -t1529 * t1297 + t1530 * t1616;
t1184 = t1530 * t1297 + t1529 * t1616;
t1180 = -t1533 * t1328 + t1537 * t1332 + t1581;
t1179 = -pkin(1) * t1384 - t1529 * t1314 + t1530 * t1557;
t1178 = pkin(1) * t1391 + t1530 * t1314 + t1529 * t1557;
t1177 = t1207 * t1536 + t1392 * t1532;
t1175 = t1229 * t1537 - t1283 * t1533;
t1174 = t1228 * t1537 + t1281 * t1533;
t1173 = -pkin(1) * t1362 - t1529 * t1307 + t1530 * t1560;
t1172 = pkin(1) * t1365 + t1530 * t1307 + t1529 * t1560;
t1171 = t1537 * t1257 - t1533 * t1370 + (-t1379 * t1529 - t1386 * t1530) * pkin(8);
t1170 = qJ(3) * t1306 - t1305 * t1750;
t1167 = -t1529 * t1401 + t1530 * t1613 + t1666;
t1166 = t1530 * t1401 + t1529 * t1613 + t1687;
t1163 = t1529 * t1304 + t1530 * t1615;
t1162 = -t1530 * t1304 + t1529 * t1615;
t1161 = -t1533 * t1234 + t1537 * t1419 + (-t1364 * t1529 - t1367 * t1530) * pkin(8);
t1160 = -t1529 * t1280 + t1530 * t1618;
t1159 = t1530 * t1280 + t1529 * t1618;
t1153 = t1198 * t1537 - t1274 * t1533;
t1152 = t1197 * t1537 - t1273 * t1533;
t1150 = -t1335 * t1749 + t1750 * t1775 - t1693;
t1148 = -t1326 * t1749 + t1371 * t1750 - t1259;
t1146 = -t1533 * t1247 + t1537 * t1268 + t1581;
t1145 = -pkin(1) * t1379 - t1529 * t1266 + t1530 * t1561;
t1144 = pkin(1) * t1386 + t1530 * t1266 + t1529 * t1561;
t1142 = -pkin(1) * t1364 - t1529 * t1252 + t1530 * t1562;
t1141 = pkin(1) * t1367 + t1530 * t1252 + t1529 * t1562;
t1139 = -t1529 * t1339 + t1530 * t1619 + t1666;
t1138 = t1530 * t1339 + t1529 * t1619 + t1687;
t1137 = -t1529 * t1231 + t1530 * t1620;
t1136 = -t1529 * t1230 + t1530 * t1621;
t1135 = t1530 * t1231 + t1529 * t1620;
t1134 = t1530 * t1230 + t1529 * t1621;
t1127 = t1176 * t1537 - t1205 * t1533;
t1125 = (qJ(3) * t1537 - t1748) * t1338 + (-t1218 * t1529 - t1219 * t1530) * pkin(8);
t1115 = -pkin(1) * t1218 - t1529 * t1270 + t1530 * t1553;
t1114 = pkin(1) * t1219 + t1530 * t1270 + t1529 * t1553;
t1113 = -t1529 * t1200 + t1530 * t1622;
t1112 = -t1529 * t1199 + t1530 * t1623;
t1111 = t1530 * t1200 + t1529 * t1622;
t1110 = t1530 * t1199 + t1529 * t1623;
t1109 = -t1529 * t1195 + t1530 * t1624;
t1108 = t1530 * t1195 + t1529 * t1624;
t1106 = -t1529 * t1190 + t1530 * t1625;
t1105 = t1530 * t1190 + t1529 * t1625;
t1100 = -t1529 * t1177 + t1530 * t1626;
t1099 = t1530 * t1177 + t1529 * t1626;
t1098 = -t1529 * t1169 + t1530 * t1627;
t1097 = t1530 * t1169 + t1529 * t1627;
t1095 = -t1295 * t1749 + t1403 * t1750 + t1658;
t1094 = -t1533 * t1164 + t1537 * t1213 + (-t1162 * t1529 - t1163 * t1530) * pkin(8);
t1088 = -t1529 * t1124 + t1530 * t1628;
t1087 = t1530 * t1124 + t1529 * t1628;
t1086 = -pkin(1) * t1162 - t1529 * t1170 + t1530 * t1563;
t1085 = pkin(1) * t1163 + t1530 * t1170 + t1529 * t1563;
t1084 = -t1533 * t1121 + t1537 * t1151 + (-t1216 * t1529 - t1217 * t1530) * pkin(8);
t1082 = -t1267 * t1750 + t1658 * t1749;
t1078 = -t1533 * t1120 + t1537 * t1149 + (-t1211 * t1529 - t1212 * t1530) * pkin(8);
t1073 = -pkin(1) * t1216 - t1529 * t1150 + t1530 * t1564;
t1072 = pkin(1) * t1217 + t1530 * t1150 + t1529 * t1564;
t1070 = -pkin(1) * t1211 - t1529 * t1148 + t1530 * t1565;
t1069 = pkin(1) * t1212 + t1530 * t1148 + t1529 * t1565;
t1068 = t1537 * t1096 - t1533 * t1140 + (-t1184 * t1529 - t1185 * t1530) * pkin(8);
t1066 = -t1194 * t1749 + t1250 * t1750 + t1659;
t1064 = -t1189 * t1749 + t1242 * t1750 + t1660;
t1062 = -pkin(1) * t1184 - t1529 * t1095 + t1530 * t1566;
t1061 = pkin(1) * t1185 + t1530 * t1095 + t1529 * t1566;
t1057 = -t1168 * t1749 + t1206 * t1750 + t1691;
t1056 = -t1529 * t1077 + t1530 * t1629;
t1055 = t1530 * t1077 + t1529 * t1629;
t1054 = t1537 * t1067 - t1533 * t1074 + (-t1108 * t1529 - t1109 * t1530) * pkin(8);
t1053 = t1537 * t1065 - t1533 * t1071 + (-t1105 * t1529 - t1106 * t1530) * pkin(8);
t1052 = -t1533 * t1063 + t1537 * t1083 + (-t1087 * t1529 - t1088 * t1530) * pkin(8);
t1051 = -pkin(1) * t1108 - t1529 * t1066 + t1530 * t1567;
t1050 = pkin(1) * t1109 + t1530 * t1066 + t1529 * t1567;
t1049 = -pkin(1) * t1087 - t1529 * t1082 + t1530 * t1569;
t1048 = pkin(1) * t1088 + t1530 * t1082 + t1529 * t1569;
t1047 = -pkin(1) * t1105 - t1529 * t1064 + t1530 * t1568;
t1046 = pkin(1) * t1106 + t1530 * t1064 + t1529 * t1568;
t1045 = t1537 * t1058 - t1533 * t1059 + (-t1097 * t1529 - t1098 * t1530) * pkin(8);
t1042 = t1089 - t1749 * t1076 + (pkin(2) + t1667) * t1092;
t1041 = -pkin(1) * t1097 - t1529 * t1057 + t1530 * t1570;
t1040 = pkin(1) * t1098 + t1530 * t1057 + t1529 * t1570;
t1039 = t1537 * t1043 - t1533 * t1044 + (-t1055 * t1529 - t1056 * t1530) * pkin(8);
t1038 = -pkin(1) * t1055 - t1529 * t1042 + t1530 * t1571;
t1037 = pkin(1) * t1056 + t1530 * t1042 + t1529 * t1571;
t1 = [0, 0, 0, 0, 0, 0, 0, -g(3), g(2), 0, 0, 0, t1508, 0, -t1507, 0, t1644, -t1490, -t1599, -pkin(7) * t1599, t1350, -t1794, -t1793, t1349, -t1321, t1426, t1538 * t1272 - t1534 * t1256 - pkin(7) * (t1390 * t1538 + t1781), t1538 * t1258 - t1534 * t1245 - pkin(7) * (t1366 * t1538 - t1798), t1220 * t1538 - t1227 * t1534 - t1738, t1538 * t1221 - t1534 * t1232 - pkin(7) * (t1309 * t1538 + t1333 * t1534), t1426, t1793, t1321, t1350, -t1794, t1349, -t1167 * t1534 + t1180 * t1538 - t1738, t1538 * t1210 - t1534 * t1179 - pkin(7) * (t1391 * t1538 - t1781), t1538 * t1209 - t1534 * t1173 - pkin(7) * (t1365 * t1538 + t1798), t1538 * t1125 - t1534 * t1115 - pkin(7) * (t1219 * t1538 + t1269 * t1534), t1426, t1321, -t1793, t1349, t1794, t1350, -t1139 * t1534 + t1146 * t1538 - t1738, t1538 * t1171 - t1534 * t1145 - pkin(7) * (t1386 * t1538 + t1798), t1538 * t1161 - t1534 * t1142 - pkin(7) * (t1367 * t1538 + t1781), t1538 * t1094 - t1534 * t1086 - pkin(7) * (t1163 * t1538 + t1214 * t1534), -t1239 * t1534 + t1311 * t1538, -t1192 * t1534 + t1246 * t1538, -t1224 * t1534 + t1277 * t1538, -t1238 * t1534 + t1310 * t1538, -t1225 * t1534 + t1278 * t1538, -t1303 * t1534 + t1357 * t1538, t1538 * t1078 - t1534 * t1070 - pkin(7) * (t1212 * t1538 + t1264 * t1534), t1538 * t1084 - t1534 * t1073 - pkin(7) * (t1217 * t1538 + t1271 * t1534), t1538 * t1068 - t1534 * t1062 - pkin(7) * (t1185 * t1538 + t1235 * t1534), t1538 * t1052 - t1534 * t1049 - pkin(7) * (t1088 * t1538 + t1107 * t1534), -t1137 * t1534 + t1175 * t1538, -t1100 * t1534 + t1127 * t1538, -t1112 * t1534 + t1152 * t1538, -t1136 * t1534 + t1174 * t1538, -t1113 * t1534 + t1153 * t1538, -t1160 * t1534 + t1215 * t1538, t1538 * t1053 - t1534 * t1047 - pkin(7) * (t1106 * t1538 + t1143 * t1534), t1538 * t1054 - t1534 * t1051 - pkin(7) * (t1109 * t1538 + t1147 * t1534), t1538 * t1045 - t1534 * t1041 - pkin(7) * (t1098 * t1538 + t1126 * t1534), t1538 * t1039 - t1534 * t1038 - pkin(7) * (t1056 * t1538 + t1060 * t1534); 0, 0, 0, 0, 0, 0, g(3), 0, -g(1), 0, 0, 0, t1507, 0, t1508, 0, t1490, t1644, t1655, pkin(7) * t1655, t1348, t1300, t1318, t1347, t1792, t1425, t1534 * t1272 + t1538 * t1256 + pkin(7) * (-t1390 * t1534 + t1780), t1534 * t1258 + t1538 * t1245 + pkin(7) * (-t1366 * t1534 - t1797), t1220 * t1534 + t1227 * t1538 + t1298, t1534 * t1221 + t1538 * t1232 + pkin(7) * (-t1309 * t1534 + t1333 * t1538), t1425, -t1318, -t1792, t1348, t1300, t1347, t1167 * t1538 + t1180 * t1534 + t1298, t1534 * t1210 + t1538 * t1179 + pkin(7) * (-t1391 * t1534 - t1780), t1534 * t1209 + t1538 * t1173 + pkin(7) * (-t1365 * t1534 + t1797), t1534 * t1125 + t1538 * t1115 + pkin(7) * (-t1219 * t1534 + t1269 * t1538), t1425, -t1792, t1318, t1347, -t1300, t1348, t1139 * t1538 + t1146 * t1534 + t1298, t1534 * t1171 + t1538 * t1145 + pkin(7) * (-t1386 * t1534 + t1797), t1534 * t1161 + t1538 * t1142 + pkin(7) * (-t1367 * t1534 + t1780), t1534 * t1094 + t1538 * t1086 + pkin(7) * (-t1163 * t1534 + t1214 * t1538), t1239 * t1538 + t1311 * t1534, t1192 * t1538 + t1246 * t1534, t1224 * t1538 + t1277 * t1534, t1238 * t1538 + t1310 * t1534, t1225 * t1538 + t1278 * t1534, t1303 * t1538 + t1357 * t1534, t1534 * t1078 + t1538 * t1070 + pkin(7) * (-t1212 * t1534 + t1264 * t1538), t1534 * t1084 + t1538 * t1073 + pkin(7) * (-t1217 * t1534 + t1271 * t1538), t1534 * t1068 + t1538 * t1062 + pkin(7) * (-t1185 * t1534 + t1235 * t1538), t1534 * t1052 + t1538 * t1049 + pkin(7) * (-t1088 * t1534 + t1107 * t1538), t1137 * t1538 + t1175 * t1534, t1100 * t1538 + t1127 * t1534, t1112 * t1538 + t1152 * t1534, t1136 * t1538 + t1174 * t1534, t1113 * t1538 + t1153 * t1534, t1160 * t1538 + t1215 * t1534, t1534 * t1053 + t1538 * t1047 + pkin(7) * (-t1106 * t1534 + t1143 * t1538), t1534 * t1054 + t1538 * t1051 + pkin(7) * (-t1109 * t1534 + t1147 * t1538), t1534 * t1045 + t1538 * t1041 + pkin(7) * (-t1098 * t1534 + t1126 * t1538), t1534 * t1039 + t1538 * t1038 + pkin(7) * (-t1056 * t1534 + t1060 * t1538); 0, 0, 0, 0, 0, 0, -g(2), g(1), 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1516, t1517, 0, 0, t1416, t1352, t1378, t1415, t1381, t1506, t1255, t1244, t1226, t1233, t1506, -t1378, -t1381, t1416, t1352, t1415, t1166, t1178, t1172, t1114, t1506, -t1381, t1378, t1415, -t1352, t1416, t1138, t1144, t1141, t1085, t1237, t1191, t1222, t1236, t1223, t1302, t1069, t1072, t1061, t1048, t1135, t1099, t1110, t1134, t1111, t1159, t1046, t1050, t1040, t1037; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), 0, -t1539, 0, 0, -g(3), -t1516, 0, t1444, -t1398, t1431, t1443, -t1435, t1457, t1272, t1258, t1220, t1221, t1457, -t1431, t1435, t1444, -t1398, t1443, t1180, t1210, t1209, t1125, t1457, t1435, t1431, t1443, t1398, t1444, t1146, t1171, t1161, t1094, t1311, t1246, t1277, t1310, t1278, t1357, t1078, t1084, t1068, t1052, t1175, t1127, t1152, t1174, t1153, t1215, t1053, t1054, t1045, t1039; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1539, 0, qJDD(1), 0, g(3), 0, -t1517, 0, t1417, t1355, t1385, t1414, t1388, -t1595, t1256, t1245, t1227, t1232, -t1595, -t1385, -t1388, t1417, t1355, t1414, t1167, t1179, t1173, t1115, -t1595, -t1388, t1385, t1414, -t1355, t1417, t1139, t1145, t1142, t1086, t1239, t1192, t1224, t1238, t1225, t1303, t1070, t1073, t1062, t1049, t1137, t1100, t1112, t1136, t1113, t1160, t1047, t1051, t1041, t1038; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, qJDD(1), t1516, t1517, 0, 0, t1416, t1352, t1378, t1415, t1381, t1506, t1255, t1244, t1226, t1233, t1506, -t1378, -t1381, t1416, t1352, t1415, t1166, t1178, t1172, t1114, t1506, -t1381, t1378, t1415, -t1352, t1416, t1138, t1144, t1141, t1085, t1237, t1191, t1222, t1236, t1223, t1302, t1069, t1072, t1061, t1048, t1135, t1099, t1110, t1134, t1111, t1159, t1046, t1050, t1040, t1037; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1488, t1453, t1486, -t1501, t1492, t1501, 0, -t1458, t1420, 0, t1501, -t1486, -t1492, t1488, t1453, -t1501, t1332, -qJ(3) * t1453, t1312, qJ(3) * t1338, t1501, -t1492, t1486, -t1501, -t1453, t1488, t1268, t1257, t1419, t1213, t1360, t1294, t1340, -t1358, t1341, t1399, t1149, t1151, t1096, t1083, t1229, t1176, t1197, t1228, t1198, t1279, t1065, t1067, t1058, t1043; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1500, t1452, -t1491, t1489, t1487, -t1500, t1458, 0, t1421, 0, -t1500, t1491, -t1487, t1500, t1452, t1489, t1328, t1313, pkin(2) * t1451, pkin(2) * t1338, -t1500, -t1487, -t1491, t1489, -t1452, t1500, t1247, t1370, t1234, t1164, t1429, t1428, t1375, -t1429, -t1372, t1480, t1120, t1121, t1140, t1063, t1283, t1205, t1273, -t1281, t1274, t1322, t1071, t1074, t1059, t1044; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1509, -t1496, t1450, t1509, t1449, t1653, -t1420, -t1421, 0, 0, t1653, -t1450, -t1449, -t1509, -t1496, t1509, t1401, t1314, t1307, t1270, t1653, -t1449, t1450, t1509, t1496, -t1509, t1339, t1266, t1252, t1170, t1361, t1296, t1342, t1359, t1343, t1400, t1148, t1150, t1095, t1082, t1231, t1177, t1199, t1230, t1200, t1280, t1064, t1066, t1057, t1042; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1653, -t1450, -t1449, -t1509, -t1496, t1509, 0, t1346, t1337, 0, t1653, -t1449, t1450, t1509, t1496, -t1509, -t1729, qJ(4) * t1494 + t1306, -t1305 + t1799, -qJ(4) * t1305, t1361, t1296, t1342, t1359, t1343, t1400, qJ(4) * t1371 + t1636, qJ(4) * t1775 + t1664, qJ(4) * t1403 + t1589, -qJ(4) * t1267 + t1735, t1231, t1177, t1199, t1230, t1200, t1280, qJ(4) * t1242 + t1591, qJ(4) * t1250 + t1590, qJ(4) * t1206 + t1646, t1092 * t1667 + t1665; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t1501, t1486, t1492, -t1488, -t1453, t1501, -t1346, 0, -t1338, 0, -t1501, t1492, -t1486, t1501, t1453, -t1488, t1805, t1543 - t1772, t1742, -t1746, -t1360, -t1294, -t1340, t1358, -t1341, -t1399, t1596, t1597, t1578, t1647, -t1229, -t1176, -t1197, -t1228, -t1198, -t1279, t1580, t1579, t1755, t1761; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1500, -t1491, t1487, -t1500, -t1452, -t1489, -t1337, t1338, 0, 0, t1500, t1487, t1491, -t1489, t1452, -t1500, -qJ(4) * t1495 + t1796, -qJ(4) * t1452 - t1741, t1543 - t1763, -qJ(4) * t1304 - t1745, -t1429, -t1428, -t1375, t1429, t1372, -t1480, qJ(4) * t1327 + t1759, qJ(4) * t1336 + t1758, qJ(4) * t1297 - t1770, qJ(4) * t1124 + t1771, -t1283, -t1205, -t1273, t1281, -t1274, -t1322, qJ(4) * t1190 + t1757, qJ(4) * t1195 + t1756, qJ(4) * t1169 + t1760, qJ(4) * t1077 + t1762; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1653, -t1449, t1450, t1509, t1496, -t1509, 0, t1306, -t1305, 0, t1361, t1296, t1342, t1359, t1343, t1400, t1636, t1664, t1589, t1735, t1231, t1177, t1199, t1230, t1200, t1280, t1591, t1590, t1646, -t1092 * t1734 + t1665; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1500, t1487, t1491, -t1489, t1452, -t1500, -t1306, 0, -t1304, 0, -t1429, -t1428, -t1375, t1429, t1372, -t1480, -pkin(4) * t1326 + t1186, -pkin(4) * t1335 + t1187, -pkin(4) * t1295, pkin(4) * t1658, -t1283, -t1205, -t1273, t1281, -t1274, -t1322, -pkin(4) * t1189 + t1671, -pkin(4) * t1194 - t1672, -pkin(4) * t1168 - t1651, -pkin(4) * t1076 + t1689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1501, -t1492, t1486, -t1501, -t1453, t1488, t1305, t1304, 0, 0, t1360, t1294, t1340, -t1358, t1341, t1399, t1668, t1669, t1648, t1688, t1229, t1176, t1197, t1228, t1198, t1279, t1650, t1649, -t1206 * t1739 - t1670, t1092 * t1645 - t1690; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1413, -t1371, t1766, t1455, t1447, -t1455, 0, -t1267, t1186, 0, t1284, t1207, t1275, t1282, t1276, t1323, t1130, t1133, t1081, -pkin(10) * t1092; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1588, t1775, t1448, -t1552, t1407, -t1588, t1267, 0, t1187, 0, -t1393, -t1392, -t1291, t1393, t1287, -t1412, t1102, t1104, -pkin(5) * t1206, -pkin(5) * t1092; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1429, t1428, t1375, -t1429, -t1372, t1480, -t1186, -t1187, 0, 0, t1283, t1205, t1273, -t1281, t1274, t1322, -t1671, t1672, t1651, -t1689; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1329, t1288, t1767, t1409, t1404, -t1409, 0, t1157, t1118, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1410, t1290, t1405, -t1582, t1316, -t1410, -t1157, 0, t1119, 0; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t1393, t1392, t1291, -t1393, -t1287, t1412, -t1118, -t1119, 0, 0;];
m_new_reg  = t1;
