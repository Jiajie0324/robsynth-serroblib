% Calculate inertial parameters regressor of coriolis joint torque vector for
% S6RRRRPP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4]';
% 
% Output:
% tauc_reg [6x(6*10)]
%   inertial parameter regressor of coriolis joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauc_reg = S6RRRRPP5_coriolisvecJ_fixb_reg2_slag_vp(qJ, qJD, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP5_coriolisvecJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP5_coriolisvecJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRRPP5_coriolisvecJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From coriolisvec_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:09:08
% EndTime: 2019-03-09 21:09:25
% DurationCPUTime: 6.85s
% Computational Cost: add. (9929->589), mult. (24317->693), div. (0->0), fcn. (16583->6), ass. (0->269)
t248 = cos(qJ(2));
t339 = qJD(1) * t248;
t225 = -qJD(3) + t339;
t209 = -qJD(4) + t225;
t245 = sin(qJ(3));
t246 = sin(qJ(2));
t340 = qJD(1) * t246;
t310 = t245 * t340;
t247 = cos(qJ(3));
t334 = qJD(2) * t247;
t180 = -t310 + t334;
t317 = t247 * t340;
t336 = qJD(2) * t245;
t181 = t317 + t336;
t244 = sin(qJ(4));
t390 = cos(qJ(4));
t268 = t244 * t180 + t390 * t181;
t403 = t268 * t209;
t332 = qJD(3) * t245;
t315 = t246 * t332;
t333 = qJD(2) * t248;
t265 = t247 * t333 - t315;
t328 = qJD(2) * qJD(3);
t145 = -qJD(1) * t265 - t247 * t328;
t329 = qJD(1) * qJD(2);
t307 = t248 * t329;
t331 = qJD(3) * t247;
t314 = t246 * t331;
t321 = qJD(1) * t314 + (t307 + t328) * t245;
t64 = qJD(4) * t268 - t244 * t145 + t390 * t321;
t419 = t64 + t403;
t309 = t390 * qJD(3);
t291 = t247 * t309;
t308 = t390 * qJD(4);
t318 = t245 * t339;
t319 = t390 * t247;
t355 = t244 * t245;
t397 = qJD(3) + qJD(4);
t344 = -t244 * t318 - t247 * t308 + t319 * t339 + t397 * t355 - t291;
t393 = t268 ^ 2;
t124 = -t390 * t180 + t181 * t244;
t394 = t124 ^ 2;
t422 = t393 - t394;
t237 = pkin(7) * t340;
t379 = qJD(2) * pkin(2);
t201 = t237 - t379;
t272 = t180 * pkin(3) - t201;
t262 = qJ(5) * t268 + t272;
t54 = pkin(4) * t124 - t262;
t421 = t124 * t54;
t370 = t124 * t209;
t330 = qJD(4) * t244;
t63 = t390 * t145 - t180 * t308 + t181 * t330 + t244 * t321;
t420 = t63 + t370;
t373 = qJ(5) * t124;
t418 = t124 * qJ(6);
t417 = t124 * t268;
t416 = t124 * t272;
t354 = t244 * t247;
t183 = t390 * t245 + t354;
t137 = t397 * t183;
t343 = -t183 * t339 + t137;
t238 = pkin(7) * t339;
t287 = -t238 + (-t318 + t332) * pkin(3);
t230 = t246 * t329;
t415 = qJ(5) * t230 - t209 * qJD(5);
t316 = t245 * t333;
t413 = t314 + t316;
t392 = pkin(4) + pkin(5);
t33 = -t392 * t124 + qJD(6) + t262;
t409 = t64 * qJ(6) + t124 * qJD(6);
t412 = t124 * t33 + t409;
t411 = -0.2e1 * t329;
t410 = pkin(4) * t268;
t285 = pkin(2) * t246 - pkin(8) * t248;
t188 = t285 * qJD(1);
t146 = pkin(7) * t310 + t247 * t188;
t350 = t247 * t248;
t274 = pkin(3) * t246 - pkin(9) * t350;
t110 = qJD(1) * t274 + t146;
t166 = t245 * t188;
t351 = t246 * t247;
t352 = t245 * t248;
t129 = t166 + (-pkin(7) * t351 - pkin(9) * t352) * qJD(1);
t72 = t244 * t110 + t390 * t129;
t68 = qJ(5) * t340 + t72;
t391 = -pkin(9) - pkin(8);
t320 = qJD(3) * t391;
t189 = t245 * t320;
t203 = t391 * t245;
t204 = t391 * t247;
t91 = t390 * t189 + t203 * t308 + t204 * t330 + t320 * t354;
t384 = t68 - t91;
t378 = t268 * t54;
t144 = t244 * t203 - t390 * t204;
t382 = t144 * qJD(4) + t390 * t110 - t391 * t291 + (-t129 + t189) * t244;
t195 = -pkin(2) * t248 - pkin(8) * t246 - pkin(1);
t172 = t195 * qJD(1);
t202 = qJD(2) * pkin(8) + t238;
t132 = t247 * t172 - t202 * t245;
t190 = t285 * qJD(2);
t173 = qJD(1) * t190;
t294 = pkin(7) * t230;
t84 = t172 * t331 + t245 * t173 - t202 * t332 - t247 * t294;
t408 = t132 * t225 + t84;
t133 = t172 * t245 + t202 * t247;
t85 = -qJD(3) * t133 + t247 * t173 + t245 * t294;
t407 = t133 * t225 - t85;
t406 = qJ(6) * t268;
t404 = t272 * t268;
t402 = t268 * t392;
t106 = pkin(9) * t180 + t133;
t356 = t244 * t106;
t105 = -pkin(9) * t181 + t132;
t94 = -pkin(3) * t225 + t105;
t41 = t390 * t94 - t356;
t345 = qJD(5) - t41;
t401 = 0.2e1 * t415;
t400 = -t209 ^ 2 - t393;
t227 = pkin(7) * t350;
t152 = t245 * t195 + t227;
t399 = t344 * qJ(5) - t183 * qJD(5) + t287;
t223 = pkin(4) * t230;
t53 = pkin(3) * t230 + t145 * pkin(9) + t85;
t65 = -pkin(9) * t321 + t84;
t304 = t106 * t308 + t244 * t65 + t94 * t330 - t390 * t53;
t7 = -t223 + t304;
t3 = -pkin(5) * t230 + t63 * qJ(6) - qJD(6) * t268 + t7;
t257 = -t268 * t33 + t3;
t159 = t183 * t246;
t335 = qJD(2) * t246;
t292 = t390 * t333;
t353 = t245 * t246;
t323 = t244 * t353;
t87 = t245 * t292 - t244 * t315 - qJD(4) * t323 + (t244 * t333 + (t309 + t308) * t246) * t247;
t396 = -t87 * t209 - t248 * t64 + (qJD(1) * t159 + t124) * t335;
t160 = t246 * t319 - t323;
t86 = t137 * t246 + t244 * t316 - t247 * t292;
t14 = t86 * t209 + t63 * t248 + (qJD(1) * t160 + t268) * t335;
t34 = t209 * t344 + (qJD(2) * t183 - t268) * t340;
t182 = -t319 + t355;
t256 = t209 * t343 - (qJD(2) * t182 - t124) * t340;
t395 = t124 * t344 + t63 * t182 - t183 * t64 - t268 * t343;
t389 = pkin(7) * t245;
t388 = -t343 * t392 - t399;
t324 = t392 * t246;
t387 = -t344 * qJ(6) - qJD(1) * t324 + t183 * qJD(6) - t382;
t386 = -t343 * qJ(6) - qJD(6) * t182 + t384;
t385 = t343 * pkin(4) + t399;
t383 = pkin(4) * t340 + t382;
t381 = -t72 + t91;
t380 = qJ(5) * t64;
t229 = pkin(3) * t244 + qJ(5);
t377 = t229 * t64;
t49 = t390 * t105 - t356;
t376 = t49 * t209;
t217 = pkin(3) * t308 + qJD(5);
t29 = t49 + t406;
t375 = t217 - t29;
t374 = t217 - t49;
t364 = t145 * t245;
t363 = t180 * t225;
t362 = t181 * t180;
t361 = t181 * t225;
t360 = t201 * t245;
t359 = t201 * t247;
t358 = t225 * t245;
t357 = t225 * t247;
t251 = qJD(1) ^ 2;
t349 = t248 * t251;
t250 = qJD(2) ^ 2;
t348 = t250 * t246;
t347 = t250 * t248;
t26 = t41 + t406;
t346 = qJD(5) - t26;
t179 = t247 * t195;
t131 = -pkin(9) * t351 + t179 + (-pkin(3) - t389) * t248;
t138 = -pkin(9) * t353 + t152;
t80 = t244 * t131 + t390 * t138;
t342 = t247 * t190 + t335 * t389;
t120 = t321 * pkin(3) + pkin(7) * t307;
t191 = pkin(3) * t353 + t246 * pkin(7);
t242 = t246 ^ 2;
t341 = -t248 ^ 2 + t242;
t143 = -t390 * t203 - t204 * t244;
t338 = qJD(2) * t143;
t337 = qJD(2) * t144;
t327 = pkin(7) * t352;
t326 = pkin(3) * t330;
t239 = pkin(7) * t333;
t322 = t246 * t349;
t149 = t413 * pkin(3) + t239;
t236 = -t247 * pkin(3) - pkin(2);
t101 = t390 * t106;
t313 = t225 * t331;
t312 = t209 * t330;
t311 = t209 * t340;
t305 = t106 * t330 - t244 * t53 - t94 * t308 - t390 * t65;
t303 = pkin(1) * t411;
t48 = t105 * t244 + t101;
t302 = -t230 + t417;
t296 = -t180 + t334;
t295 = -t181 + t336;
t235 = -t390 * pkin(3) - pkin(4);
t293 = -t91 * t124 - t143 * t63 - t144 * t64;
t290 = t248 * t230;
t28 = t48 + t418;
t289 = -t28 + t326;
t288 = -t48 + t326;
t286 = t321 * t247;
t74 = -qJ(5) * t248 + t80;
t283 = t160 * qJ(5) - t191;
t79 = t390 * t131 - t244 * t138;
t12 = t64 * pkin(4) + t63 * qJ(5) - qJD(5) * t268 + t120;
t281 = -t181 * pkin(3) - t373;
t22 = t124 * t87 + t159 * t64;
t276 = -t132 * t247 - t133 * t245;
t275 = qJD(1) * t242 - t225 * t248;
t6 = -t305 + t415;
t273 = t183 * qJ(5) - t236;
t75 = t248 * pkin(4) - t79;
t271 = -t209 * t41 + t305;
t42 = t244 * t94 + t101;
t270 = -t209 * t42 - t304;
t269 = -t48 * t209 - t304;
t150 = (-t209 - t339) * t335;
t78 = t274 * qJD(2) + (-t227 + (pkin(9) * t246 - t195) * t245) * qJD(3) + t342;
t103 = t245 * t190 + t195 * t331 + (-t246 * t334 - t248 * t332) * pkin(7);
t83 = -pkin(9) * t413 + t103;
t267 = t131 * t330 + t138 * t308 + t244 * t83 - t390 * t78;
t19 = t131 * t308 - t138 * t330 + t244 * t78 + t390 * t83;
t16 = t124 * t343 + t64 * t182;
t5 = -pkin(5) * t64 - t12;
t266 = -t217 * t209 + t229 * t230 + t6;
t263 = -t86 * qJ(5) + t160 * qJD(5) - t149;
t27 = t42 + t418;
t258 = t124 * t86 + t159 * t63 - t160 * t64 - t268 * t87;
t17 = qJ(5) * t335 - qJD(5) * t248 + t19;
t228 = -pkin(5) + t235;
t194 = t209 * qJ(5);
t176 = pkin(3) * t312;
t151 = t179 - t327;
t147 = -pkin(7) * t317 + t166;
t119 = pkin(4) * t182 - t273;
t109 = qJ(6) * t182 + t144;
t108 = -qJ(6) * t183 + t143;
t104 = -t152 * qJD(3) + t342;
t102 = -t392 * t182 + t273;
t95 = pkin(4) * t159 - t283;
t77 = t373 + t410;
t76 = -t392 * t159 + t283;
t67 = -t281 + t410;
t60 = qJ(6) * t159 + t74;
t52 = t248 * pkin(5) - t160 * qJ(6) + t75;
t46 = -t373 - t402;
t37 = -t194 + t42;
t36 = pkin(4) * t209 + t345;
t35 = t281 - t402;
t25 = -t194 + t27;
t24 = t392 * t209 + t346;
t23 = pkin(4) * t87 - t263;
t21 = -t160 * t63 - t268 * t86;
t18 = -pkin(4) * t335 + t267;
t15 = -t63 * t183 - t268 * t344;
t13 = -t392 * t87 + t263;
t9 = qJ(6) * t87 + qJD(6) * t159 + t17;
t8 = t86 * qJ(6) - qJD(2) * t324 - t160 * qJD(6) + t267;
t1 = t6 + t409;
t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2e1 * t290, t341 * t411, t347, -0.2e1 * t290, -t348, 0, -pkin(7) * t347 + t246 * t303, pkin(7) * t348 + t248 * t303, 0, 0, -t145 * t351 + t181 * t265 (t180 * t247 - t181 * t245) * t333 + (-t286 + t364 + (-t180 * t245 - t181 * t247) * qJD(3)) * t246, t225 * t315 + t145 * t248 + (t181 * t246 + t247 * t275) * qJD(2), -t180 * t413 + t321 * t353, t246 * t313 + t321 * t248 + (t180 * t246 - t245 * t275) * qJD(2) (-t225 - t339) * t335, -t104 * t225 - t85 * t248 + (pkin(7) * t321 + t201 * t331) * t246 + ((-pkin(7) * t180 + t360) * t248 + (t132 + (t151 + t327) * qJD(1)) * t246) * qJD(2), t103 * t225 + t84 * t248 + (-pkin(7) * t145 - t201 * t332) * t246 + ((pkin(7) * t181 + t359) * t248 + (-t133 + (-t152 + t227) * qJD(1)) * t246) * qJD(2), t103 * t180 - t152 * t321 - t104 * t181 + t151 * t145 + t276 * t333 + (-t84 * t245 - t85 * t247 + (t132 * t245 - t133 * t247) * qJD(3)) * t246, t133 * t103 + t132 * t104 + t85 * t151 + t84 * t152 + (t201 + t237) * t239, t21, t258, t14, t22, -t396, t150, t304 * t248 + t120 * t159 + t149 * t124 - t272 * t87 + t191 * t64 + t267 * t209 + (qJD(1) * t79 + t41) * t335, -t305 * t248 + t120 * t160 + t149 * t268 + t272 * t86 + t19 * t209 - t191 * t63 + (-qJD(1) * t80 - t42) * t335, -t124 * t19 + t159 * t305 + t160 * t304 + t267 * t268 + t41 * t86 - t42 * t87 + t63 * t79 - t64 * t80, t120 * t191 - t149 * t272 + t19 * t42 - t267 * t41 - t304 * t79 - t305 * t80, t21, t14, -t258, t150, t396, t22, t12 * t159 + t23 * t124 + t18 * t209 + t7 * t248 + t54 * t87 + t95 * t64 + (-qJD(1) * t75 - t36) * t335, -t124 * t17 - t159 * t6 + t160 * t7 + t18 * t268 - t36 * t86 - t37 * t87 - t63 * t75 - t64 * t74, -t12 * t160 - t23 * t268 - t17 * t209 - t6 * t248 + t54 * t86 + t95 * t63 + (qJD(1) * t74 + t37) * t335, t12 * t95 + t17 * t37 + t18 * t36 + t23 * t54 + t6 * t74 + t7 * t75, t21, -t258, -t14, t22, -t396, t150, -t13 * t124 - t5 * t159 + t8 * t209 + t3 * t248 - t33 * t87 - t76 * t64 + (-qJD(1) * t52 - t24) * t335, -t1 * t248 + t13 * t268 + t5 * t160 - t9 * t209 - t33 * t86 - t76 * t63 + (qJD(1) * t60 + t25) * t335, t1 * t159 + t124 * t9 - t160 * t3 + t24 * t86 + t25 * t87 - t268 * t8 + t52 * t63 + t60 * t64, t1 * t60 + t13 * t33 + t24 * t8 + t25 * t9 + t3 * t52 + t5 * t76; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t322, t341 * t251, 0, t322, 0, 0, t251 * pkin(1) * t246, pkin(1) * t349, 0, 0, -t181 * t357 - t364 (-t145 - t363) * t247 + (-t321 + t361) * t245, -t313 + (t225 * t350 + t246 * t295) * qJD(1), t180 * t358 - t286, t225 * t332 + (-t225 * t352 + t246 * t296) * qJD(1), t225 * t340, -pkin(2) * t321 + t146 * t225 + (pkin(8) * t357 + t360) * qJD(3) + ((-pkin(8) * t336 - t132) * t246 + (-pkin(7) * t296 - t360) * t248) * qJD(1), pkin(2) * t145 - t147 * t225 + (-pkin(8) * t358 + t359) * qJD(3) + ((-pkin(8) * t334 + t133) * t246 + (pkin(7) * t295 - t359) * t248) * qJD(1), t146 * t181 - t147 * t180 + ((qJD(3) * t181 - t321) * pkin(8) + t408) * t247 + ((-qJD(3) * t180 - t145) * pkin(8) + t407) * t245, -t132 * t146 - t133 * t147 + (-t201 - t379) * t238 + (qJD(3) * t276 - t85 * t245 + t84 * t247) * pkin(8), t15, t395, t34, t16, t256, t311, t120 * t182 + t236 * t64 + t382 * t209 - t343 * t272 + t287 * t124 + (-t41 - t338) * t340, t120 * t183 - t236 * t63 + t381 * t209 + t344 * t272 + t287 * t268 + (t42 - t337) * t340, t72 * t124 + t182 * t305 + t183 * t304 + t268 * t382 - t343 * t42 + t344 * t41 + t293, t120 * t236 + t143 * t304 - t144 * t305 - t272 * t287 + t381 * t42 - t382 * t41, t15, t34, -t395, t311, -t256, t16, t119 * t64 + t12 * t182 + t343 * t54 + t383 * t209 + t385 * t124 + (t36 - t338) * t340, t68 * t124 - t6 * t182 + t7 * t183 + t268 * t383 - t343 * t37 - t344 * t36 + t293, t119 * t63 - t12 * t183 + t344 * t54 + t384 * t209 - t385 * t268 + (-t37 + t337) * t340, t119 * t12 + t143 * t7 + t144 * t6 + t383 * t36 - t384 * t37 + t385 * t54, t15, -t395, -t34, t16, t256, t311, -t102 * t64 - t5 * t182 - t343 * t33 - t387 * t209 - t388 * t124 + (-qJD(2) * t108 + t24) * t340, -t102 * t63 + t5 * t183 - t344 * t33 + t386 * t209 + t388 * t268 + (qJD(2) * t109 - t25) * t340, t1 * t182 + t108 * t63 + t109 * t64 - t386 * t124 - t3 * t183 + t344 * t24 + t343 * t25 + t268 * t387, t1 * t109 + t102 * t5 + t108 * t3 - t387 * t24 - t386 * t25 + t388 * t33; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t362, -t180 ^ 2 + t181 ^ 2, -t145 + t363, t362, -t321 - t361, t230, -t201 * t181 - t407, -t180 * t201 - t408, 0, 0, t417, t422, -t420, -t417, -t419, t230, t404 + (-t124 * t181 + t390 * t230 + t312) * pkin(3) + t269, -t416 - t376 + (-t181 * t268 + t209 * t308 - t230 * t244) * pkin(3) + t305, t42 * t268 + t49 * t124 - t124 * t41 - t48 * t268 + (t390 * t63 - t244 * t64 + (-t390 * t124 + t244 * t268) * qJD(4)) * pkin(3), t41 * t48 - t42 * t49 + (-t390 * t304 - t305 * t244 + t272 * t181 + (-t244 * t41 + t390 * t42) * qJD(4)) * pkin(3), t417, -t420, -t422, t230, t419, -t417, -t124 * t67 - t230 * t235 + t176 + t223 + t269 - t378, -t235 * t63 - t377 + (t288 + t37) * t268 + (-t374 + t36) * t124, t268 * t67 + t266 + t376 - t421, t6 * t229 + t7 * t235 + t288 * t36 + t37 * t374 - t54 * t67, t417, -t422, t420, -t417, -t419, t230, t124 * t35 - t209 * t28 - t228 * t230 + t176 - t257, t209 * t29 - t268 * t35 + t266 + t412, t228 * t63 + t377 + (-t25 - t289) * t268 + (t375 - t24) * t124, t1 * t229 + t3 * t228 + t24 * t289 + t25 * t375 - t33 * t35; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t417, t422, -t420, -t417, -t419, t230, t270 + t404, t271 - t416, 0, 0, t417, -t420, -t422, t230, t419, -t417, -t124 * t77 + 0.2e1 * t223 + t270 - t378, pkin(4) * t63 - t380 + (t37 - t42) * t268 + (t36 - t345) * t124, t268 * t77 - t271 + t401 - t421, -pkin(4) * t7 + qJ(5) * t6 + t345 * t37 - t36 * t42 - t54 * t77, t417, -t422, t420, -t417, -t419, t230, t124 * t46 - t209 * t27 + t230 * t392 - t257, t209 * t26 - t268 * t46 - t305 + t401 + t412, t380 - t392 * t63 + (-t25 + t27) * t268 + (-t24 + t346) * t124, t1 * qJ(5) - t24 * t27 + t25 * t346 - t3 * t392 - t33 * t46; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t302, -t420, t400, t209 * t37 + t378 + t7, 0, 0, 0, 0, 0, 0, t302, t400, t420, t209 * t25 + t257; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t64 + t403, -t63 + t370, -t393 - t394, -t124 * t25 + t24 * t268 + t5;];
tauc_reg  = t2;
