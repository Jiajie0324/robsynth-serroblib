% Calculate inertial parameters regressor of inverse dynamics joint torque vector for
% S6RRRRPP5
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% qJD [6x1]
%   Generalized joint velocities
% qJDD [6x1]
%   Generalized joint accelerations
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [9x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,a5,a6,d1,d2,d3,d4]';
% 
% Output:
% tau_reg [6x(6*10)]
%   inertial parameter regressor of inverse dynamics joint torque vector

% Quelle: HybrDyn-Toolbox
% Datum: 2019-03-09 21:10
% Revision: 8e0af74c1e634ead9bab9e082796ada77f031ee9 (2019-03-08)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = S6RRRRPP5_invdynJ_fixb_reg2_slag_vp(qJ, qJD, qJDD, g, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,1),zeros(9,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'S6RRRRPP5_invdynJ_fixb_reg2_slag_vp: qJ has to be [6x1] (double)');
assert(isreal(qJD) && all(size(qJD) == [6 1]), ...
  'S6RRRRPP5_invdynJ_fixb_reg2_slag_vp: qJD has to be [6x1] (double)');
assert(isreal(qJDD) && all(size(qJDD) == [6 1]), ...
  'S6RRRRPP5_invdynJ_fixb_reg2_slag_vp: qJDD has to be [6x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'S6RRRRPP5_invdynJ_fixb_reg2_slag_vp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [9 1]), ...
  'S6RRRRPP5_invdynJ_fixb_reg2_slag_vp: pkin has to be [9x1] (double)');

%% Symbolic Calculation
% From invdyn_joint_fixb_regressor_matlab.m
% OptimizationMode: 2
% StartTime: 2019-03-09 21:09:16
% EndTime: 2019-03-09 21:09:34
% DurationCPUTime: 10.25s
% Computational Cost: add. (12414->763), mult. (27519->869), div. (0->0), fcn. (19152->10), ass. (0->352)
t296 = sin(qJ(3));
t299 = cos(qJ(3));
t297 = sin(qJ(2));
t421 = qJD(3) * t297;
t392 = qJD(1) * t421;
t417 = t297 * qJDD(1);
t300 = cos(qJ(2));
t427 = qJD(1) * t300;
t116 = -t299 * (qJD(2) * (qJD(3) + t427) + t417) + (-qJDD(2) + t392) * t296;
t295 = sin(qJ(4));
t422 = qJD(3) * t296;
t418 = qJD(1) * qJD(2);
t393 = t300 * t418;
t529 = t393 + t417;
t381 = qJD(2) * t422 + t296 * t529 + t299 * t392;
t338 = t299 * qJDD(2) - t381;
t428 = qJD(1) * t297;
t397 = t296 * t428;
t424 = qJD(2) * t299;
t204 = -t397 + t424;
t403 = t299 * t428;
t426 = qJD(2) * t296;
t205 = t403 + t426;
t498 = cos(qJ(4));
t344 = t295 * t204 + t205 * t498;
t51 = qJD(4) * t344 - t295 * t116 - t498 * t338;
t258 = -qJD(3) + t427;
t243 = -qJD(4) + t258;
t517 = t344 * t243;
t537 = t51 + t517;
t396 = t498 * qJD(3);
t378 = t299 * t396;
t395 = t498 * qJD(4);
t404 = t296 * t427;
t405 = t498 * t299;
t455 = t295 * t296;
t507 = qJD(3) + qJD(4);
t435 = -t295 * t404 - t299 * t395 + t405 * t427 + t455 * t507 - t378;
t500 = t344 ^ 2;
t129 = -t498 * t204 + t205 * t295;
t501 = t129 ^ 2;
t540 = t500 - t501;
t228 = -qJD(2) * pkin(2) + pkin(7) * t428;
t348 = pkin(3) * t204 - t228;
t330 = qJ(5) * t344 + t348;
t63 = pkin(4) * t129 - t330;
t539 = t129 * t63;
t471 = t129 * t243;
t419 = qJD(4) * t295;
t50 = t498 * t116 - t204 * t395 + t205 * t419 - t295 * t338;
t538 = t50 + t471;
t476 = qJ(5) * t129;
t536 = t129 * qJ(6);
t535 = t129 * t344;
t534 = t129 * t348;
t454 = t295 * t299;
t207 = t296 * t498 + t454;
t145 = t507 * t207;
t434 = -t207 * t427 + t145;
t282 = t300 * qJDD(1);
t509 = -t297 * t418 + t282;
t201 = qJDD(3) - t509;
t195 = qJDD(4) + t201;
t512 = t195 * qJ(5) - t243 * qJD(5);
t280 = pkin(7) * t427;
t375 = -t280 + (-t404 + t422) * pkin(3);
t301 = cos(qJ(1));
t447 = t297 * t301;
t298 = sin(qJ(1));
t449 = t297 * t298;
t533 = g(1) * t447 + g(2) * t449;
t278 = pkin(7) * t417;
t294 = qJDD(2) * pkin(2);
t178 = pkin(7) * t393 + t278 - t294;
t493 = g(2) * t298;
t370 = g(1) * t301 + t493;
t492 = g(3) * t300;
t321 = t297 * t370 - t178 - t492;
t531 = -qJD(3) * pkin(8) * t258 - t321;
t290 = g(3) * t297;
t345 = t370 * t300;
t530 = t345 + t290;
t423 = qJD(2) * t300;
t402 = t296 * t423;
t420 = qJD(3) * t299;
t528 = t297 * t420 + t402;
t499 = pkin(4) + pkin(5);
t38 = -t129 * t499 + qJD(6) + t330;
t523 = t51 * qJ(6) + t129 * qJD(6);
t527 = t129 * t38 + t523;
t526 = 2 * pkin(1);
t525 = pkin(4) * t344;
t373 = pkin(2) * t297 - pkin(8) * t300;
t211 = t373 * qJD(1);
t150 = pkin(7) * t397 + t299 * t211;
t442 = t299 * t300;
t350 = pkin(3) * t297 - pkin(9) * t442;
t115 = qJD(1) * t350 + t150;
t189 = t296 * t211;
t448 = t297 * t299;
t451 = t296 * t300;
t136 = t189 + (-pkin(7) * t448 - pkin(9) * t451) * qJD(1);
t74 = t295 * t115 + t498 * t136;
t70 = qJ(5) * t428 + t74;
t302 = -pkin(9) - pkin(8);
t406 = qJD(3) * t302;
t212 = t296 * t406;
t230 = t302 * t296;
t231 = t302 * t299;
t91 = t498 * t212 + t230 * t395 + t231 * t419 + t406 * t454;
t487 = t91 - t70;
t524 = t344 * t63;
t374 = pkin(2) * t300 + pkin(8) * t297;
t223 = -pkin(1) - t374;
t196 = t223 * qJD(1);
t229 = qJD(2) * pkin(8) + t280;
t140 = t299 * t196 - t229 * t296;
t213 = t373 * qJD(2);
t146 = qJD(1) * t213 + qJDD(1) * t223;
t177 = pkin(7) * t509 + qJDD(2) * pkin(8);
t66 = t296 * t146 + t299 * t177 + t196 * t420 - t229 * t422;
t522 = t140 * t258 + t66;
t149 = t295 * t230 - t498 * t231;
t521 = qJD(4) * t149 + t115 * t498 - t302 * t378 + (-t136 + t212) * t295;
t520 = qJ(6) * t344;
t518 = t348 * t344;
t516 = t344 * t499;
t141 = t196 * t296 + t229 * t299;
t107 = pkin(9) * t204 + t141;
t456 = t295 * t107;
t106 = -pkin(9) * t205 + t140;
t95 = -pkin(3) * t258 + t106;
t53 = t498 * t95 - t456;
t436 = qJD(5) - t53;
t293 = qJ(3) + qJ(4);
t283 = sin(t293);
t284 = cos(t293);
t443 = t298 * t300;
t167 = t283 * t443 + t284 * t301;
t439 = t301 * t283;
t168 = t284 * t443 - t439;
t514 = -t168 * pkin(4) - qJ(5) * t167;
t513 = 0.2e1 * t512;
t511 = -t243 ^ 2 - t500;
t262 = pkin(7) * t442;
t156 = t296 * t223 + t262;
t510 = t435 * qJ(5) - qJD(5) * t207 + t375;
t181 = t195 * pkin(4);
t506 = t181 - qJDD(5);
t505 = t195 * pkin(5) - t50 * qJ(6) + t344 * qJD(6);
t504 = -t492 + t533;
t169 = -t298 * t284 + t300 * t439;
t135 = t299 * t146;
t67 = -t141 * qJD(3) - t177 * t296 + t135;
t33 = pkin(3) * t201 + pkin(9) * t116 + t67;
t41 = pkin(9) * t338 + t66;
t389 = t107 * t395 + t295 * t41 - t498 * t33 + t95 * t419;
t460 = t283 * t297;
t326 = g(1) * t169 + g(2) * t167 + g(3) * t460 - t389;
t317 = t326 + t506;
t307 = -t344 * t38 - t317 - t505;
t34 = t195 * t207 + t243 * t435 - t344 * t428;
t206 = -t405 + t455;
t319 = t129 * t428 - t195 * t206 + t243 * t434;
t502 = t129 * t435 + t206 * t50 - t207 * t51 - t344 * t434;
t497 = pkin(7) * t296;
t496 = g(1) * t298;
t441 = t299 * t301;
t184 = t296 * t443 + t441;
t494 = g(2) * t184;
t491 = -t434 * t499 - t510;
t490 = qJ(6) * t434 + qJD(6) * t206 + t487;
t413 = t499 * t297;
t489 = qJ(6) * t435 + qJD(1) * t413 - t207 * qJD(6) + t521;
t488 = pkin(4) * t434 + t510;
t486 = t91 - t74;
t484 = pkin(4) * t428 + t521;
t483 = qJ(5) * t51;
t102 = t498 * t107;
t54 = t295 * t95 + t102;
t482 = t243 * t54;
t271 = pkin(3) * t295 + qJ(5);
t481 = t271 * t51;
t61 = t498 * t106 - t456;
t480 = t61 * t243;
t252 = pkin(3) * t395 + qJD(5);
t36 = t61 + t520;
t479 = t252 - t36;
t478 = t252 - t61;
t477 = pkin(7) * qJDD(1);
t474 = t116 * t296;
t466 = t141 * t258;
t465 = t204 * t258;
t464 = t204 * t296;
t463 = t205 * t204;
t462 = t205 * t258;
t461 = t205 * t299;
t459 = t283 * t300;
t458 = t284 * t297;
t457 = t284 * t300;
t453 = t296 * t297;
t452 = t296 * t298;
t450 = t296 * t301;
t446 = t297 * t302;
t305 = qJD(1) ^ 2;
t445 = t297 * t305;
t444 = t298 * t299;
t277 = pkin(3) * t299 + pkin(2);
t234 = t300 * t277;
t440 = t300 * t301;
t438 = qJ(6) + t302;
t30 = t53 + t520;
t437 = qJD(5) - t30;
t203 = t299 * t223;
t138 = -pkin(9) * t448 + t203 + (-pkin(3) - t497) * t300;
t147 = -pkin(9) * t453 + t156;
t82 = t295 * t138 + t498 * t147;
t425 = qJD(2) * t297;
t433 = t299 * t213 + t425 * t497;
t432 = g(1) * t449 - g(2) * t447;
t259 = pkin(3) * t453;
t214 = t297 * pkin(7) + t259;
t431 = t301 * pkin(1) + t298 * pkin(7);
t291 = t297 ^ 2;
t292 = t300 ^ 2;
t430 = t291 - t292;
t429 = t291 + t292;
t416 = pkin(3) * t419;
t412 = t295 * t453;
t411 = t296 * t440;
t410 = t301 * t446;
t409 = t300 * t445;
t288 = t301 * pkin(7);
t408 = pkin(3) * t450 + t298 * t446 + t288;
t407 = g(1) * t440 + g(2) * t443 + t290;
t153 = pkin(3) * t528 + pkin(7) * t423;
t401 = t296 * t421;
t399 = t243 * t419;
t398 = t243 * t428;
t391 = -pkin(1) - t234;
t8 = -t107 * t419 + t295 * t33 + t95 * t395 + t498 * t41;
t388 = t438 * t301;
t387 = -t167 * pkin(4) + qJ(5) * t168;
t170 = t283 * t298 + t284 * t440;
t386 = -t169 * pkin(4) + qJ(5) * t170;
t385 = -qJ(5) * t283 - t277;
t60 = t106 * t295 + t102;
t148 = -t498 * t230 - t231 * t295;
t94 = -t338 * pkin(3) + t178;
t382 = pkin(3) * t452 + t277 * t440 + t431;
t276 = -pkin(3) * t498 - pkin(4);
t380 = g(3) * (pkin(4) * t457 + qJ(5) * t459 + t234);
t379 = t498 * t423;
t377 = t297 * t393;
t232 = qJ(5) * t458;
t376 = -pkin(4) * t460 + t232;
t372 = g(1) * t167 - g(2) * t169;
t371 = g(1) * t168 - g(2) * t170;
t369 = -g(2) * t301 + t496;
t76 = -qJ(5) * t300 + t82;
t261 = pkin(3) * t444;
t367 = t261 + t386;
t173 = t297 * t405 - t412;
t366 = qJ(5) * t173 - t214;
t81 = t138 * t498 - t295 * t147;
t364 = g(2) * t387;
t363 = -pkin(3) * t205 - t476;
t362 = pkin(7) * t204 - t228 * t296;
t361 = pkin(7) * t205 + t228 * t299;
t172 = t207 * t297;
t87 = t296 * t379 - t295 * t401 - qJD(4) * t412 + (t295 * t423 + (t396 + t395) * t297) * t299;
t18 = t129 * t87 + t172 * t51;
t359 = -pkin(8) * t201 + qJD(3) * t228;
t356 = -t140 * t299 - t141 * t296;
t354 = -g(3) * t459 + t283 * t533;
t353 = -g(3) * t457 + t284 * t533;
t6 = t8 + t512;
t304 = qJD(2) ^ 2;
t352 = qJDD(2) * t300 - t297 * t304;
t351 = -t283 * t413 + t232;
t349 = qJ(5) * t207 + t277;
t77 = t300 * pkin(4) - t81;
t7 = t389 - t506;
t347 = g(2) * (-t167 * pkin(5) + t387);
t139 = -t195 * t300 - t243 * t425;
t341 = t296 * t201 - t258 * t420;
t340 = t201 * t299 + t258 * t422;
t80 = t350 * qJD(2) + (-t262 + (pkin(9) * t297 - t223) * t296) * qJD(3) + t433;
t104 = t296 * t213 + t223 * t420 + (-t297 * t424 - t300 * t422) * pkin(7);
t85 = -pkin(9) * t528 + t104;
t339 = t138 * t419 + t147 * t395 + t295 * t85 - t498 * t80;
t21 = t138 * t395 - t147 * t419 + t295 * t80 + t498 * t85;
t15 = t129 * t434 + t206 * t51;
t10 = t51 * pkin(4) + t50 * qJ(5) - qJD(5) * t344 + t94;
t336 = -t91 * t129 - t148 * t50 - t149 * t51 - t407;
t334 = t170 * pkin(4) + qJ(5) * t169 + t382;
t333 = -t148 * t195 + t353;
t332 = t149 * t195 + t354;
t86 = t145 * t297 + t295 * t402 - t299 * t379;
t331 = -qJ(5) * t86 + qJD(5) * t173 - t153;
t329 = t338 * t299;
t328 = t298 * t391 + t408;
t31 = t54 + t536;
t325 = g(1) * t170 + g(2) * t168 + g(3) * t458 - t8;
t322 = t129 * t86 + t172 * t50 - t173 * t51 - t344 * t87;
t320 = -t195 + t535;
t19 = qJ(5) * t425 - qJD(5) * t300 + t21;
t5 = -pkin(5) * t51 + qJDD(6) - t10;
t318 = t129 * t425 + t172 * t195 - t243 * t87 - t300 * t51;
t13 = t173 * t195 + t243 * t86 + t300 * t50 + t344 * t425;
t316 = -t60 * t243 + t326;
t315 = -t243 * t53 + t325;
t313 = g(1) * t411 + t494;
t312 = t271 * t195 - t252 * t243 - t325 + t512;
t311 = -t317 + t524;
t270 = -pkin(5) + t276;
t222 = t243 * qJ(5);
t199 = pkin(3) * t399;
t187 = t299 * t440 + t452;
t186 = -t411 + t444;
t185 = -t298 * t442 + t450;
t162 = t169 * pkin(5);
t155 = -pkin(7) * t451 + t203;
t151 = -pkin(7) * t403 + t189;
t125 = pkin(4) * t206 - t349;
t110 = qJ(6) * t206 + t149;
t109 = -qJ(6) * t207 + t148;
t105 = -qJD(3) * t156 + t433;
t103 = -t206 * t499 + t349;
t96 = pkin(4) * t172 - t366;
t79 = t476 + t525;
t78 = -t172 * t499 + t366;
t69 = -t363 + t525;
t65 = qJ(6) * t172 + t76;
t62 = t300 * pkin(5) - t173 * qJ(6) + t77;
t58 = -t476 - t516;
t47 = -t222 + t54;
t43 = pkin(4) * t243 + t436;
t42 = t363 - t516;
t35 = t60 + t536;
t27 = -t222 + t31;
t24 = t243 * t499 + t437;
t23 = pkin(4) * t87 - t331;
t20 = -pkin(4) * t425 + t339;
t17 = -t173 * t50 - t344 * t86;
t16 = -t499 * t87 + t331;
t14 = -t207 * t50 - t344 * t435;
t12 = qJ(6) * t87 + qJD(6) * t172 + t19;
t11 = t86 * qJ(6) - qJD(2) * t413 - t173 * qJD(6) + t339;
t2 = t6 + t523;
t1 = t7 - t505;
t3 = [0, 0, 0, 0, 0, qJDD(1), t369, t370, 0, 0, qJDD(1) * t291 + 0.2e1 * t377, 0.2e1 * t282 * t297 - 0.2e1 * t418 * t430, qJDD(2) * t297 + t300 * t304, qJDD(1) * t292 - 0.2e1 * t377, t352, 0 (-0.2e1 * pkin(1) * t418 - pkin(7) * qJDD(2)) * t297 + (-pkin(7) * t304 + qJDD(1) * t526 + t369) * t300, -t352 * pkin(7) - t526 * t529 - t432, 0.2e1 * t429 * t477 - t370, -g(1) * (-pkin(1) * t298 + t288) - g(2) * t431 + (pkin(7) ^ 2 * t429 + (pkin(1) ^ 2)) * qJDD(1), -t116 * t448 + (t299 * t423 - t401) * t205 (t204 * t299 - t205 * t296) * t423 + (t329 + t474 + (-t461 - t464) * qJD(3)) * t297 (-t258 * t424 + t116) * t300 + (qJD(2) * t205 + t340) * t297, -t204 * t528 - t338 * t453 (t258 * t426 - t338) * t300 + (qJD(2) * t204 - t341) * t297, -t201 * t300 - t258 * t425, -g(1) * t185 - g(2) * t187 - t105 * t258 + t155 * t201 + (-qJD(2) * t362 - t67) * t300 + (-pkin(7) * t338 + t140 * qJD(2) + t178 * t296 + t228 * t420) * t297, -g(1) * t184 - g(2) * t186 + t104 * t258 - t156 * t201 + (qJD(2) * t361 + t66) * t300 + (-pkin(7) * t116 - qJD(2) * t141 + t178 * t299 - t228 * t422) * t297, t104 * t204 + t156 * t338 - t105 * t205 + t155 * t116 + t356 * t423 + (-t66 * t296 - t67 * t299 + (t140 * t296 - t141 * t299) * qJD(3)) * t297 + t432, t66 * t156 + t141 * t104 + t67 * t155 + t140 * t105 - g(1) * t288 - g(2) * (t301 * t374 + t431) - t223 * t496 + (t178 * t297 + t228 * t423) * pkin(7), t17, t322, t13, t18, -t318, t139, t129 * t153 + t172 * t94 + t195 * t81 + t214 * t51 + t243 * t339 + t300 * t389 - t348 * t87 + t425 * t53 + t371, t153 * t344 + t173 * t94 - t195 * t82 + t21 * t243 - t214 * t50 + t300 * t8 + t348 * t86 - t425 * t54 - t372, -t129 * t21 - t172 * t8 + t173 * t389 + t339 * t344 + t50 * t81 - t51 * t82 + t53 * t86 - t54 * t87 + t432, t8 * t82 + t54 * t21 - t389 * t81 - t53 * t339 + t94 * t214 - t348 * t153 - g(1) * t328 - g(2) * (t382 - t410) t17, t13, -t322, t139, t318, t18, t10 * t172 + t129 * t23 - t195 * t77 + t20 * t243 + t300 * t7 - t425 * t43 + t51 * t96 + t63 * t87 + t371, -t129 * t19 - t172 * t6 + t173 * t7 + t20 * t344 - t43 * t86 - t47 * t87 - t50 * t77 - t51 * t76 + t432, -t10 * t173 - t19 * t243 + t195 * t76 - t23 * t344 - t300 * t6 + t425 * t47 + t50 * t96 + t63 * t86 + t372, t6 * t76 + t47 * t19 + t10 * t96 + t63 * t23 + t7 * t77 + t43 * t20 - g(1) * (t328 + t514) - g(2) * (t334 - t410) t17, -t322, -t13, t18, -t318, t139, t1 * t300 + t11 * t243 - t129 * t16 - t172 * t5 - t195 * t62 - t24 * t425 - t38 * t87 - t51 * t78 + t371, -t12 * t243 + t16 * t344 + t173 * t5 + t195 * t65 - t2 * t300 + t27 * t425 - t38 * t86 - t50 * t78 + t372, -t1 * t173 - t11 * t344 + t12 * t129 + t172 * t2 + t24 * t86 + t27 * t87 + t50 * t62 + t51 * t65 - t432, t2 * t65 + t27 * t12 + t1 * t62 + t24 * t11 + t5 * t78 + t38 * t16 - g(1) * (-pkin(5) * t168 + t408 + t514) - g(2) * (pkin(5) * t170 - t297 * t388 + t334) - (qJ(6) * t297 + t391) * t496; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t409, t430 * t305, t417, t409, t282, qJDD(2), pkin(1) * t445 - t278 + t504 (pkin(1) * t305 - t477) * t300 + t407, 0, 0, -t258 * t461 - t474 (-t116 - t465) * t299 + (t338 + t462) * t296 (-t205 * t297 + t258 * t442) * qJD(1) + t341, t258 * t464 + t329 (-t204 * t297 - t258 * t451) * qJD(1) + t340, t258 * t428, -pkin(2) * t381 + t150 * t258 + t359 * t296 + (-t140 * t297 + t300 * t362) * qJD(1) + (t294 - t531) * t299, pkin(2) * t116 - t151 * t258 + t359 * t299 + (t141 * t297 - t300 * t361) * qJD(1) + t531 * t296, t150 * t205 - t151 * t204 + ((qJD(3) * t205 + t338) * pkin(8) + t522) * t299 + (-t67 + t466 + (-qJD(3) * t204 - t116) * pkin(8)) * t296 - t407, -t228 * t280 - t140 * t150 - t141 * t151 + t321 * pkin(2) + (qJD(3) * t356 - t67 * t296 + t66 * t299 - t530) * pkin(8), t14, t502, t34, t15, t319, t398, t129 * t375 + t206 * t94 + t243 * t521 - t277 * t51 - t348 * t434 - t428 * t53 + t333, t207 * t94 + t243 * t486 + t277 * t50 + t344 * t375 + t348 * t435 + t428 * t54 - t332, t129 * t74 - t206 * t8 + t207 * t389 + t344 * t521 - t434 * t54 + t435 * t53 + t336, t8 * t149 + t389 * t148 - t94 * t277 - g(3) * (t234 - t446) + t486 * t54 - t521 * t53 - t375 * t348 + t370 * (t277 * t297 + t300 * t302) t14, t34, -t502, t398, -t319, t15, t10 * t206 + t125 * t51 + t129 * t488 + t243 * t484 + t428 * t43 + t434 * t63 + t333, t129 * t70 - t206 * t6 + t207 * t7 + t344 * t484 - t43 * t435 - t434 * t47 + t336, -t10 * t207 + t125 * t50 - t243 * t487 - t344 * t488 - t428 * t47 + t435 * t63 + t332, t6 * t149 + t10 * t125 + t7 * t148 - t380 + t488 * t63 + t487 * t47 + t484 * t43 + t302 * t345 + (g(3) * t302 + t370 * (pkin(4) * t284 - t385)) * t297, t14, -t502, -t34, t15, t319, t398, -t103 * t51 - t109 * t195 - t129 * t491 - t206 * t5 + t24 * t428 + t243 * t489 - t38 * t434 + t353, -t103 * t50 + t110 * t195 + t207 * t5 - t243 * t490 - t27 * t428 + t344 * t491 - t38 * t435 + t354, -t1 * t207 + t109 * t50 + t110 * t51 + t129 * t490 + t2 * t206 + t24 * t435 + t27 * t434 - t344 * t489 + t407, t2 * t110 + t1 * t109 + t5 * t103 - t380 + t491 * t38 + t490 * t27 + t489 * t24 + (-g(3) * pkin(5) * t284 + g(1) * t388 + t438 * t493) * t300 + (g(3) * t438 + t370 * (t284 * t499 - t385)) * t297; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t463, -t204 ^ 2 + t205 ^ 2, -t116 + t465, t463, t338 - t462, t201, -t229 * t420 - g(1) * t186 + t494 - t466 - t205 * t228 + t135 + (-qJD(3) * t196 - t177 + t290) * t296, g(1) * t187 - g(2) * t185 + g(3) * t448 - t204 * t228 - t522, 0, 0, t535, t540, -t538, -t535, -t537, t195, t518 + (-t129 * t205 + t195 * t498 + t399) * pkin(3) + t316, -t534 - t480 + (-t195 * t295 - t205 * t344 + t243 * t395) * pkin(3) + t325, t54 * t344 + t61 * t129 - t129 * t53 - t60 * t344 + (t498 * t50 - t295 * t51 + (-t129 * t498 + t295 * t344) * qJD(4)) * pkin(3), -g(1) * t261 + t53 * t60 - t54 * t61 + (g(2) * t441 - t389 * t498 + t348 * t205 + t8 * t295 + t530 * t296 + (-t53 * t295 + t498 * t54) * qJD(4)) * pkin(3), t535, -t538, -t540, t195, t537, -t535, -t129 * t69 - t195 * t276 + t199 + t316 + t506 - t524, -t276 * t50 - t481 + (t47 - t60 + t416) * t344 + (-t478 + t43) * t129, t344 * t69 + t312 + t480 - t539, t6 * t271 + t7 * t276 - t63 * t69 - t43 * t60 - g(1) * t367 - t364 - g(3) * (-t259 + t376) + t478 * t47 + (t419 * t43 + t313) * pkin(3), t535, -t540, t538, -t535, -t537, t195, t129 * t42 - t195 * t270 - t243 * t35 + t199 - t307, t243 * t36 - t344 * t42 + t312 + t527, t270 * t50 + t481 + (-t27 + t35 - t416) * t344 + (t479 - t24) * t129, t2 * t271 + t1 * t270 - t24 * t35 - t38 * t42 - g(1) * (-t162 + t367) - t347 - g(3) * (-t259 + t351) + t479 * t27 + (t24 * t419 + t313) * pkin(3); 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t535, t540, -t538, -t535, -t537, t195, t326 - t482 + t518, t315 - t534, 0, 0, t535, -t538, -t540, t195, t537, -t535, -t129 * t79 + t181 - t311 - t482, pkin(4) * t50 - t483 + (t47 - t54) * t344 + (t43 - t436) * t129, t344 * t79 - t315 + t513 - t539, -t7 * pkin(4) - g(1) * t386 - g(3) * t376 + t6 * qJ(5) - t43 * t54 + t436 * t47 - t63 * t79 - t364, t535, -t540, t538, -t535, -t537, t195, t129 * t58 + t195 * t499 - t243 * t31 - t307, t243 * t30 - t344 * t58 - t325 + t513 + t527, t483 - t499 * t50 + (-t27 + t31) * t344 + (-t24 + t437) * t129, t2 * qJ(5) - t1 * t499 - t24 * t31 - t38 * t58 - g(1) * (-t162 + t386) - t347 - g(3) * t351 + t437 * t27; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t320, -t538, t511, t243 * t47 + t311, 0, 0, 0, 0, 0, 0, t320, t511, t538, t243 * t27 + t307; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t51 + t517, -t50 + t471, -t500 - t501, -t129 * t27 + t24 * t344 + t5 + t504;];
tau_reg  = t3;
